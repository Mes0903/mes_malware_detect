
33a5b015af1ecd057057eada64b2f8fe3633b467bd43454f5278f76b94cd09ab.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x20
   14000100a:	xor    edx,edx
   14000100c:	lea    rcx,[rip+0x11b05]        # 0x140012b18
   140001013:	lea    r8d,[rdx+0x28]
   140001017:	call   0x14000b71c
   14000101c:	and    DWORD PTR [rip+0x11ae5],0x0        # 0x140012b08
   140001023:	lea    rax,[rip+0x11ad6]        # 0x140012b00
   14000102a:	and    QWORD PTR [rip+0x11ade],0x0        # 0x140012b10
   140001032:	lea    rcx,[rip+0x11adf]        # 0x140012b18
   140001039:	and    DWORD PTR [rip+0x11acc],0x0        # 0x140012b0c
   140001040:	and    QWORD PTR [rip+0x11af8],0x0        # 0x140012b40
   140001048:	mov    QWORD PTR [rip+0x119c9],rax        # 0x140012a18
   14000104f:	call   0x1400033bc
   140001054:	test   eax,eax
   140001056:	jns    0x140001061
   140001058:	mov    BYTE PTR [rip+0x119b5],0x1        # 0x140012a14
   14000105f:	jmp    0x14000106b
   140001061:	mov    DWORD PTR [rip+0x11a9d],0x38        # 0x140012b08
   14000106b:	call   QWORD PTR [rip+0xc16f]        # 0x14000d1e0
   140001071:	and    QWORD PTR [rip+0x11ad7],0x0        # 0x140012b50
   140001079:	xor    edx,edx
   14000107b:	xor    ecx,ecx
   14000107d:	mov    DWORD PTR [rip+0x11ac5],eax        # 0x140012b48
   140001083:	mov    DWORD PTR [rip+0x11acb],0x1388        # 0x140012b58
   14000108d:	mov    DWORD PTR [rip+0x11ac5],0x3e8        # 0x140012b5c
   140001097:	mov    BYTE PTR [rip+0x11ac2],0x1        # 0x140012b60
   14000109e:	mov    BYTE PTR [rip+0x11abd],0x0        # 0x140012b62
   1400010a5:	call   QWORD PTR [rip+0xbffd]        # 0x14000d0a8
   1400010ab:	test   eax,eax
   1400010ad:	jns    0x1400010d1
   1400010af:	cmp    eax,0x80010106
   1400010b4:	jne    0x1400010c8
   1400010b6:	lea    rcx,[rip+0xcc93]        # 0x14000dd50
   1400010bd:	call   QWORD PTR [rip+0xc06d]        # 0x14000d130
   1400010c3:	test   rax,rax
   1400010c6:	jne    0x1400010d8
   1400010c8:	mov    BYTE PTR [rip+0x11945],0x1        # 0x140012a14
   1400010cf:	jmp    0x140001111
   1400010d1:	mov    BYTE PTR [rip+0x11a8a],0x1        # 0x140012b62
   1400010d8:	mov    rdi,QWORD PTR [rip+0x11b91]        # 0x140012c70
   1400010df:	mov    rax,QWORD PTR [rip+0x11b92]        # 0x140012c78
   1400010e6:	jmp    0x14000110c
   1400010e8:	mov    rbx,QWORD PTR [rdi]
   1400010eb:	test   rbx,rbx
   1400010ee:	je     0x140001108
   1400010f0:	mov    rbx,QWORD PTR [rbx+0x40]
   1400010f4:	mov    rcx,rbx
   1400010f7:	call   QWORD PTR [rip+0xc3ab]        # 0x14000d4a8
   1400010fd:	mov    cl,0x1
   1400010ff:	call   rbx
   140001101:	mov    rax,QWORD PTR [rip+0x11b70]        # 0x140012c78
   140001108:	add    rdi,0x8
   14000110c:	cmp    rdi,rax
   14000110f:	jb     0x1400010e8
   140001111:	and    QWORD PTR [rip+0x11a4f],0x0        # 0x140012b68
   140001119:	lea    rax,[rip+0xc810]        # 0x14000d930
   140001120:	xorps  xmm0,xmm0
   140001123:	mov    QWORD PTR [rip+0x119d6],rax        # 0x140012b00
   14000112a:	movdqa XMMWORD PTR [rip+0x11a3e],xmm0        # 0x140012b70
   140001132:	call   QWORD PTR [rip+0xc0a8]        # 0x14000d1e0
   140001138:	and    QWORD PTR [rip+0x11a48],0x0        # 0x140012b88
   140001140:	lea    rcx,[rip+0xb509]        # 0x14000c650
   140001147:	and    QWORD PTR [rip+0x11a41],0x0        # 0x140012b90
   14000114f:	mov    DWORD PTR [rip+0x11a2b],eax        # 0x140012b80
   140001155:	mov    DWORD PTR [rip+0x11a39],0x1388        # 0x140012b98
   14000115f:	mov    DWORD PTR [rip+0x11a33],0x3e8        # 0x140012b9c
   140001169:	mov    BYTE PTR [rip+0x119f0],0x0        # 0x140012b60
   140001170:	mov    rbx,QWORD PTR [rsp+0x30]
   140001175:	add    rsp,0x20
   140001179:	pop    rdi
   14000117a:	jmp    0x14000b358
   14000117f:	int3   
   140001180:	lea    rax,[rip+0x98f9]        # 0x14000aa80
   140001187:	mov    QWORD PTR [rip+0x1194a],rax        # 0x140012ad8
   14000118e:	lea    rax,[rip+0x99fb]        # 0x14000ab90
   140001195:	mov    QWORD PTR [rip+0x1192c],rax        # 0x140012ac8
   14000119c:	lea    rax,[rip+0x9a3d]        # 0x14000abe0
   1400011a3:	mov    QWORD PTR [rip+0x11926],rax        # 0x140012ad0
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	rex push rbx
   1400011b2:	sub    rsp,0x20
   1400011b6:	xor    edx,edx
   1400011b8:	lea    rcx,[rip+0x11a19]        # 0x140012bd8
   1400011bf:	lea    r8d,[rdx+0x28]
   1400011c3:	call   0x14000b71c
   1400011c8:	and    QWORD PTR [rip+0x11a30],0x0        # 0x140012c00
   1400011d0:	lea    rax,[rip+0xffffffffffffee29]        # 0x140000000
   1400011d7:	and    DWORD PTR [rip+0x11a2a],0x0        # 0x140012c08
   1400011de:	lea    rcx,[rip+0x119f3]        # 0x140012bd8
   1400011e5:	and    DWORD PTR [rip+0x11a20],0x0        # 0x140012c0c
   1400011ec:	mov    ebx,0x1
   1400011f1:	mov    QWORD PTR [rip+0x119c8],rax        # 0x140012bc0
   1400011f8:	mov    QWORD PTR [rip+0x119b9],rax        # 0x140012bb8
   1400011ff:	lea    rax,[rip+0xd2aa]        # 0x14000e4b0
   140001206:	mov    QWORD PTR [rip+0x119c3],rax        # 0x140012bd0
   14000120d:	mov    DWORD PTR [rip+0x11999],0x60        # 0x140012bb0
   140001217:	mov    BYTE PTR [rip+0x119ab],bl        # 0x140012bc8
   14000121d:	mov    DWORD PTR [rip+0x119a5],0x800        # 0x140012bcc
   140001227:	call   0x1400033bc
   14000122c:	movzx  ecx,BYTE PTR [rip+0x117e1]        # 0x140012a14
   140001233:	test   eax,eax
   140001235:	cmovs  ecx,ebx
   140001238:	mov    BYTE PTR [rip+0x117d6],cl        # 0x140012a14
   14000123e:	lea    rcx,[rip+0xb48b]        # 0x14000c6d0
   140001245:	add    rsp,0x20
   140001249:	pop    rbx
   14000124a:	jmp    0x14000b358
   14000124f:	int3   
   140001250:	sub    rsp,0x28
   140001254:	xor    edx,edx
   140001256:	lea    rcx,[rip+0x119bb]        # 0x140012c18
   14000125d:	lea    r8d,[rdx+0x28]
   140001261:	call   0x14000b71c
   140001266:	and    QWORD PTR [rip+0x119da],0x0        # 0x140012c48
   14000126e:	lea    rcx,[rip+0x119a3]        # 0x140012c18
   140001275:	and    DWORD PTR [rip+0x119d4],0x0        # 0x140012c50
   14000127c:	and    DWORD PTR [rip+0x119d1],0x0        # 0x140012c54
   140001283:	and    QWORD PTR [rip+0x119b5],0x0        # 0x140012c40
   14000128b:	mov    DWORD PTR [rip+0x1197b],0x48        # 0x140012c10
   140001295:	call   0x1400033bc
   14000129a:	test   eax,eax
   14000129c:	jns    0x1400012ac
   14000129e:	and    DWORD PTR [rip+0x1196b],0x0        # 0x140012c10
   1400012a5:	mov    BYTE PTR [rip+0x11768],0x1        # 0x140012a14
   1400012ac:	lea    rcx,[rip+0xb46d]        # 0x14000c720
   1400012b3:	add    rsp,0x28
   1400012b7:	jmp    0x14000b358
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	sub    rsp,0x28
   1400012c4:	xor    edx,edx
   1400012c6:	lea    rcx,[rip+0x119b3]        # 0x140012c80
   1400012cd:	lea    r8d,[rdx+0x28]
   1400012d1:	call   0x14000b71c
   1400012d6:	and    DWORD PTR [rip+0x11983],0x0        # 0x140012c60
   1400012dd:	lea    rax,[rip+0xffffffffffffed1c]        # 0x140000000
   1400012e4:	mov    QWORD PTR [rip+0x1197d],rax        # 0x140012c68
   1400012eb:	lea    rcx,[rip+0x1198e]        # 0x140012c80
   1400012f2:	lea    rax,[rip+0xf6d7]        # 0x1400109d0
   1400012f9:	mov    QWORD PTR [rip+0x11970],rax        # 0x140012c70
   140001300:	lea    rax,[rip+0xf6e1]        # 0x1400109e8
   140001307:	mov    QWORD PTR [rip+0x1196a],rax        # 0x140012c78
   14000130e:	call   0x1400033bc
   140001313:	test   eax,eax
   140001315:	jns    0x140001320
   140001317:	mov    BYTE PTR [rip+0x116f6],0x1        # 0x140012a14
   14000131e:	jmp    0x14000132a
   140001320:	mov    DWORD PTR [rip+0x11936],0x48        # 0x140012c60
   14000132a:	lea    rcx,[rip+0xb4df]        # 0x14000c810
   140001331:	add    rsp,0x28
   140001335:	jmp    0x14000b358
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	int3   
   140001341:	int3   
   140001342:	int3   
   140001343:	int3   
   140001344:	int3   
   140001345:	int3   
   140001346:	int3   
   140001347:	int3   
   140001348:	int3   
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	mov    QWORD PTR [rsp+0x8],rbx
   140001355:	push   rdi
   140001356:	sub    rsp,0x20
   14000135a:	mov    r10,QWORD PTR [rsp+0x60]
   14000135f:	xor    edi,edi
   140001361:	test   r10,r10
   140001364:	je     0x14000145a
   14000136a:	test   edx,edx
   14000136c:	je     0x140001417
   140001372:	sub    edx,0x1
   140001375:	jne    0x14000145a
   14000137b:	mov    r11d,edi
   14000137e:	mov    rax,QWORD PTR [rsp+0x50]
   140001383:	mov    QWORD PTR [r10+0x10],r9
   140001387:	lea    r9d,[rdi+0x1]
   14000138b:	mov    DWORD PTR [r10+0x24],r9d
   14000138f:	mov    BYTE PTR [r10+0x28],r8b
   140001393:	mov    QWORD PTR [r10+0x18],rax
   140001397:	cmp    di,WORD PTR [r10+0x2a]
   14000139c:	jae    0x14000145a
   1400013a2:	mov    rax,QWORD PTR [r10+0x38]
   1400013a6:	mov    dl,BYTE PTR [r10+0x28]
   1400013aa:	mov    ebx,r11d
   1400013ad:	mov    rcx,QWORD PTR [rax+rbx*8]
   1400013b1:	mov    rax,QWORD PTR [r10+0x40]
   1400013b5:	cmp    BYTE PTR [rbx+rax*1],dl
   1400013b8:	jbe    0x1400013be
   1400013ba:	test   dl,dl
   1400013bc:	jne    0x1400013d6
   1400013be:	test   rcx,rcx
   1400013c1:	je     0x1400013f1
   1400013c3:	test   QWORD PTR [r10+0x10],rcx
   1400013c7:	je     0x1400013d6
   1400013c9:	mov    rax,QWORD PTR [r10+0x18]
   1400013cd:	and    rax,rcx
   1400013d0:	cmp    rax,QWORD PTR [r10+0x18]
   1400013d4:	je     0x1400013f1
   1400013d6:	mov    r8,QWORD PTR [r10+0x30]
   1400013da:	mov    ecx,r11d
   1400013dd:	and    ecx,0x1f
   1400013e0:	shr    rbx,0x5
   1400013e4:	mov    edx,r9d
   1400013e7:	shl    edx,cl
   1400013e9:	not    edx
   1400013eb:	and    DWORD PTR [r8+rbx*4],edx
   1400013ef:	jmp    0x140001408
   1400013f1:	mov    r8,QWORD PTR [r10+0x30]
   1400013f5:	mov    ecx,r11d
   1400013f8:	and    ecx,0x1f
   1400013fb:	shr    rbx,0x5
   1400013ff:	mov    edx,r9d
   140001402:	shl    edx,cl
   140001404:	or     DWORD PTR [r8+rbx*4],edx
   140001408:	movzx  eax,WORD PTR [r10+0x2a]
   14000140d:	add    r11d,r9d
   140001410:	cmp    r11d,eax
   140001413:	jb     0x1400013a2
   140001415:	jmp    0x14000145a
   140001417:	mov    DWORD PTR [r10+0x24],edi
   14000141b:	mov    BYTE PTR [r10+0x28],dil
   14000141f:	mov    QWORD PTR [r10+0x10],rdi
   140001423:	mov    QWORD PTR [r10+0x18],rdi
   140001427:	cmp    WORD PTR [r10+0x2a],di
   14000142c:	jbe    0x14000145a
   14000142e:	movzx  eax,WORD PTR [r10+0x2a]
   140001433:	mov    r9d,0x1
   140001439:	mov    rcx,QWORD PTR [r10+0x30]
   14000143d:	sub    eax,r9d
   140001440:	cdq    
   140001441:	and    edx,0x1f
   140001444:	add    eax,edx
   140001446:	xor    edx,edx
   140001448:	sar    eax,0x5
   14000144b:	add    eax,r9d
   14000144e:	movsxd r8,eax
   140001451:	shl    r8,0x2
   140001455:	call   0x14000b71c
   14000145a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000145f:	add    rsp,0x20
   140001463:	pop    rdi
   140001464:	ret    
   140001465:	int3   
   140001466:	int3   
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	cmp    QWORD PTR [rip+0x1160c],0x0        # 0x140012a80
   140001474:	je     0x140001479
   140001476:	xor    eax,eax
   140001478:	ret    
   140001479:	lea    r9,[rip+0x11600]        # 0x140012a80
   140001480:	lea    r8,[rip+0x10c89]        # 0x140012110
   140001487:	lea    rdx,[rip+0xfffffffffffffec2]        # 0x140001350
   14000148e:	lea    rcx,[rip+0xcd63]        # 0x14000e1f8
   140001495:	rex.W jmp QWORD PTR [rip+0xbe84]        # 0x14000d320
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	int3   
   1400014a1:	int3   
   1400014a2:	int3   
   1400014a3:	int3   
   1400014a4:	sub    rsp,0x28
   1400014a8:	mov    rcx,QWORD PTR [rip+0x115d1]        # 0x140012a80
   1400014af:	test   rcx,rcx
   1400014b2:	jne    0x1400014b8
   1400014b4:	xor    eax,eax
   1400014b6:	jmp    0x1400014c6
   1400014b8:	call   QWORD PTR [rip+0xbe6a]        # 0x14000d328
   1400014be:	and    QWORD PTR [rip+0x115ba],0x0        # 0x140012a80
   1400014c6:	add    rsp,0x28
   1400014ca:	ret    
   1400014cb:	int3   
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	int3   
   1400014d1:	int3   
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400014d9:	mov    QWORD PTR [rsp+0x18],rsi
   1400014de:	push   rdi
   1400014df:	sub    rsp,0x150
   1400014e6:	mov    rax,QWORD PTR [rip+0x10b23]        # 0x140012010
   1400014ed:	xor    rax,rsp
   1400014f0:	mov    QWORD PTR [rsp+0x140],rax
   1400014f8:	xor    ebx,ebx
   1400014fa:	mov    rsi,rcx
   1400014fd:	mov    BYTE PTR [rcx],bl
   1400014ff:	xor    edx,edx
   140001501:	lea    rcx,[rsp+0x20]
   140001506:	mov    r8d,0x114
   14000150c:	mov    edi,ebx
   14000150e:	call   0x14000b71c
   140001513:	lea    rcx,[rsp+0x20]
   140001518:	mov    DWORD PTR [rsp+0x20],0x114
   140001520:	call   QWORD PTR [rip+0xbdd2]        # 0x14000d2f8
   140001526:	test   eax,eax
   140001528:	jne    0x14000153e
   14000152a:	call   QWORD PTR [rip+0xbbc8]        # 0x14000d0f8
   140001530:	movzx  edi,ax
   140001533:	or     edi,0x80070000
   140001539:	test   eax,eax
   14000153b:	cmovle edi,eax
   14000153e:	cmp    DWORD PTR [rsp+0x24],0x6
   140001543:	ja     0x14000154e
   140001545:	jne    0x140001553
   140001547:	cmp    DWORD PTR [rsp+0x28],0x2
   14000154c:	jb     0x140001553
   14000154e:	mov    ebx,0x1
   140001553:	mov    BYTE PTR [rsi],bl
   140001555:	mov    eax,edi
   140001557:	mov    rcx,QWORD PTR [rsp+0x140]
   14000155f:	xor    rcx,rsp
   140001562:	call   0x14000b290
   140001567:	lea    r11,[rsp+0x150]
   14000156f:	mov    rbx,QWORD PTR [r11+0x18]
   140001573:	mov    rsi,QWORD PTR [r11+0x20]
   140001577:	mov    rsp,r11
   14000157a:	pop    rdi
   14000157b:	ret    
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	mov    QWORD PTR [rsp+0x20],rbx
   140001589:	mov    DWORD PTR [rsp+0x8],ecx
   14000158d:	push   rbp
   14000158e:	push   rsi
   14000158f:	push   rdi
   140001590:	sub    rsp,0x30
   140001594:	lea    rcx,[rsp+0x50]
   140001599:	call   0x1400014d4
   14000159e:	xor    ebx,ebx
   1400015a0:	test   eax,eax
   1400015a2:	js     0x140001666
   1400015a8:	cmp    BYTE PTR [rsp+0x50],bl
   1400015ac:	jne    0x1400015b5
   1400015ae:	xor    al,al
   1400015b0:	jmp    0x14000166d
   1400015b5:	mov    esi,ebx
   1400015b7:	call   QWORD PTR [rip+0xbc3b]        # 0x14000d1f8
   1400015bd:	mov    ebp,0x1
   1400015c2:	lea    r9,[rsp+0x60]
   1400015c7:	mov    rcx,rax
   1400015ca:	mov    r8d,ebp
   1400015cd:	lea    edx,[rbp+0x7]
   1400015d0:	call   QWORD PTR [rip+0xbbfa]        # 0x14000d1d0
   1400015d6:	test   eax,eax
   1400015d8:	jne    0x14000160e
   1400015da:	call   QWORD PTR [rip+0xbb18]        # 0x14000d0f8
   1400015e0:	mov    edi,eax
   1400015e2:	cmp    eax,0x3f0
   1400015e7:	jne    0x140001654
   1400015e9:	call   QWORD PTR [rip+0xbbd1]        # 0x14000d1c0
   1400015ef:	mov    rcx,rax
   1400015f2:	lea    r8,[rsp+0x60]
   1400015f7:	lea    edx,[rbp+0x7]
   1400015fa:	call   QWORD PTR [rip+0xbbc8]        # 0x14000d1c8
   140001600:	test   eax,eax
   140001602:	jne    0x14000160e
   140001604:	call   QWORD PTR [rip+0xbaee]        # 0x14000d0f8
   14000160a:	mov    edi,eax
   14000160c:	jmp    0x140001654
   14000160e:	mov    rcx,QWORD PTR [rsp+0x60]
   140001613:	lea    rax,[rsp+0x58]
   140001618:	mov    r9d,0x4
   14000161e:	mov    QWORD PTR [rsp+0x20],rax
   140001623:	lea    r8,[rsp+0x50]
   140001628:	lea    edx,[r9+0x19]
   14000162c:	call   QWORD PTR [rip+0xbd06]        # 0x14000d338
   140001632:	test   eax,eax
   140001634:	je     0x140001641
   140001636:	cmp    DWORD PTR [rsp+0x50],ebx
   14000163a:	mov    edi,ebx
   14000163c:	cmovne esi,ebp
   14000163f:	jmp    0x140001649
   140001641:	call   QWORD PTR [rip+0xbab1]        # 0x14000d0f8
   140001647:	mov    edi,eax
   140001649:	mov    rcx,QWORD PTR [rsp+0x60]
   14000164e:	call   QWORD PTR [rip+0xbac4]        # 0x14000d118
   140001654:	movzx  ecx,di
   140001657:	or     ecx,0x80070000
   14000165d:	test   edi,edi
   14000165f:	cmovle ecx,edi
   140001662:	test   ecx,ecx
   140001664:	jns    0x140001668
   140001666:	mov    esi,ebx
   140001668:	test   esi,esi
   14000166a:	setne  al
   14000166d:	mov    rbx,QWORD PTR [rsp+0x68]
   140001672:	add    rsp,0x30
   140001676:	pop    rdi
   140001677:	pop    rsi
   140001678:	pop    rbp
   140001679:	ret    
   14000167a:	int3   
   14000167b:	int3   
   14000167c:	int3   
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	rex push rbx
   140001682:	sub    rsp,0x20
   140001686:	or     ebx,0xffffffff
   140001689:	lock xadd DWORD PTR [rcx+0xc],ebx
   14000168e:	sub    ebx,0x1
   140001691:	jne    0x1400016a7
   140001693:	mov    BYTE PTR [rcx+0xa0],0x1
   14000169a:	mov    rcx,QWORD PTR [rcx+0x88]
   1400016a1:	call   QWORD PTR [rip+0xbc19]        # 0x14000d2c0
   1400016a7:	mov    eax,ebx
   1400016a9:	add    rsp,0x20
   1400016ad:	pop    rbx
   1400016ae:	ret    
   1400016af:	int3   
   1400016b0:	int3   
   1400016b1:	int3   
   1400016b2:	int3   
   1400016b3:	int3   
   1400016b4:	int3   
   1400016b5:	int3   
   1400016b6:	int3   
   1400016b7:	int3   
   1400016b8:	mov    QWORD PTR [rsp+0x8],rcx
   1400016bd:	push   rbx
   1400016be:	sub    rsp,0x30
   1400016c2:	xor    r9d,r9d
   1400016c5:	xor    r8d,r8d
   1400016c8:	xor    edx,edx
   1400016ca:	xor    ecx,ecx
   1400016cc:	xor    ebx,ebx
   1400016ce:	call   QWORD PTR [rip+0xbbe4]        # 0x14000d2b8
   1400016d4:	mov    QWORD PTR [rip+0x114ad],rax        # 0x140012b88
   1400016db:	test   rax,rax
   1400016de:	jne    0x1400016f8
   1400016e0:	call   QWORD PTR [rip+0xba12]        # 0x14000d0f8
   1400016e6:	movzx  ebx,ax
   1400016e9:	or     ebx,0x80070000
   1400016ef:	test   eax,eax
   1400016f1:	cmovle ebx,eax
   1400016f4:	test   ebx,ebx
   1400016f6:	js     0x14000174a
   1400016f8:	lea    rax,[rsp+0x40]
   1400016fd:	xor    edx,edx
   1400016ff:	mov    QWORD PTR [rsp+0x28],rax
   140001704:	lea    r9,[rip+0x113f5]        # 0x140012b00
   14000170b:	and    DWORD PTR [rsp+0x20],0x0
   140001710:	lea    r8,[rip+0x49]        # 0x140001760
   140001717:	xor    ecx,ecx
   140001719:	call   QWORD PTR [rip+0xbab9]        # 0x14000d1d8
   14000171f:	test   rax,rax
   140001722:	jne    0x140001741
   140001724:	call   QWORD PTR [rip+0xb9ce]        # 0x14000d0f8
   14000172a:	mov    rcx,QWORD PTR [rip+0x11457]        # 0x140012b88
   140001731:	movzx  ebx,ax
   140001734:	or     ebx,0x80070000
   14000173a:	test   eax,eax
   14000173c:	cmovle ebx,eax
   14000173f:	jmp    0x140001744
   140001741:	mov    rcx,rax
   140001744:	call   QWORD PTR [rip+0xb9ce]        # 0x14000d118
   14000174a:	mov    eax,ebx
   14000174c:	add    rsp,0x30
   140001750:	pop    rbx
   140001751:	ret    
   140001752:	int3   
   140001753:	int3   
   140001754:	int3   
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	mov    QWORD PTR [rsp+0x8],rbx
   140001765:	push   rdi
   140001766:	sub    rsp,0x20
   14000176a:	mov    rdi,rcx
   14000176d:	mov    rcx,QWORD PTR [rdi+0x88]
   140001774:	or     edx,0xffffffff
   140001777:	call   QWORD PTR [rip+0xbb2b]        # 0x14000d2a8
   14000177d:	mov    edx,DWORD PTR [rdi+0x98]
   140001783:	mov    rcx,QWORD PTR [rdi+0x88]
   14000178a:	mov    BYTE PTR [rdi+0xa0],0x0
   140001791:	call   QWORD PTR [rip+0xbb11]        # 0x14000d2a8
   140001797:	test   eax,eax
   140001799:	je     0x14000177d
   14000179b:	cmp    BYTE PTR [rdi+0xa0],0x0
   1400017a2:	jne    0x14000176d
   1400017a4:	mov    rax,QWORD PTR [rdi]
   1400017a7:	mov    rbx,QWORD PTR [rax+0x18]
   1400017ab:	mov    rcx,rbx
   1400017ae:	call   QWORD PTR [rip+0xbcf4]        # 0x14000d4a8
   1400017b4:	mov    rcx,rdi
   1400017b7:	call   rbx
   1400017b9:	test   eax,eax
   1400017bb:	jne    0x14000176d
   1400017bd:	mov    rcx,QWORD PTR [rdi+0x88]
   1400017c4:	call   QWORD PTR [rip+0xb94e]        # 0x14000d118
   1400017ca:	mov    ecx,DWORD PTR [rdi+0x80]
   1400017d0:	xor    r9d,r9d
   1400017d3:	xor    r8d,r8d
   1400017d6:	lea    edx,[r9+0x12]
   1400017da:	call   QWORD PTR [rip+0xb888]        # 0x14000d068
   1400017e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017e5:	xor    eax,eax
   1400017e7:	add    rsp,0x20
   1400017eb:	pop    rdi
   1400017ec:	ret    
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	int3   
   1400017f1:	int3   
   1400017f2:	int3   
   1400017f3:	int3   
   1400017f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400017f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400017fe:	push   rdi
   1400017ff:	sub    rsp,0x30
   140001803:	xor    ebx,ebx
   140001805:	call   QWORD PTR [rip+0xb9dd]        # 0x14000d1e8
   14000180b:	lea    edi,[rbx+0x4]
   14000180e:	xor    r9d,r9d
   140001811:	mov    esi,eax
   140001813:	lea    r8d,[rbx+0x40]
   140001817:	lea    rax,[rip+0xc4aa]        # 0x14000dcc8
   14000181e:	xor    edx,edx
   140001820:	mov    QWORD PTR [rsp+0x28],rax
   140001825:	or     rcx,0xffffffffffffffff
   140001829:	mov    DWORD PTR [rsp+0x20],edi
   14000182d:	call   QWORD PTR [rip+0xb965]        # 0x14000d198
   140001833:	mov    QWORD PTR [rip+0x11356],rax        # 0x140012b90
   14000183a:	test   rax,rax
   14000183d:	jne    0x14000185e
   14000183f:	call   QWORD PTR [rip+0xb8b3]        # 0x14000d0f8
   140001845:	movzx  ebx,ax
   140001848:	or     ebx,0x80070000
   14000184e:	test   eax,eax
   140001850:	cmovle ebx,eax
   140001853:	test   ebx,ebx
   140001855:	js     0x1400018c2
   140001857:	mov    rax,QWORD PTR [rip+0x11332]        # 0x140012b90
   14000185e:	xor    r9d,r9d
   140001861:	mov    QWORD PTR [rsp+0x20],rdi
   140001866:	xor    r8d,r8d
   140001869:	mov    rcx,rax
   14000186c:	lea    edx,[r9+0x2]
   140001870:	call   QWORD PTR [rip+0xb912]        # 0x14000d188
   140001876:	mov    rdi,rax
   140001879:	test   rax,rax
   14000187c:	jne    0x140001892
   14000187e:	call   QWORD PTR [rip+0xb874]        # 0x14000d0f8
   140001884:	movzx  ebx,ax
   140001887:	or     ebx,0x80070000
   14000188d:	test   eax,eax
   14000188f:	cmovle ebx,eax
   140001892:	test   ebx,ebx
   140001894:	js     0x140001898
   140001896:	mov    DWORD PTR [rdi],esi
   140001898:	test   rdi,rdi
   14000189b:	je     0x1400018be
   14000189d:	mov    rcx,rdi
   1400018a0:	call   QWORD PTR [rip+0xb8ea]        # 0x14000d190
   1400018a6:	test   eax,eax
   1400018a8:	jne    0x1400018be
   1400018aa:	call   QWORD PTR [rip+0xb848]        # 0x14000d0f8
   1400018b0:	movzx  ebx,ax
   1400018b3:	or     ebx,0x80070000
   1400018b9:	test   eax,eax
   1400018bb:	cmovle ebx,eax
   1400018be:	test   ebx,ebx
   1400018c0:	jns    0x1400018d4
   1400018c2:	mov    rcx,QWORD PTR [rip+0x112c7]        # 0x140012b90
   1400018c9:	test   rcx,rcx
   1400018cc:	je     0x1400018d4
   1400018ce:	call   QWORD PTR [rip+0xb844]        # 0x14000d118
   1400018d4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400018d9:	mov    eax,ebx
   1400018db:	mov    rbx,QWORD PTR [rsp+0x40]
   1400018e0:	add    rsp,0x30
   1400018e4:	pop    rdi
   1400018e5:	ret    
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400018f1:	mov    QWORD PTR [rsp+0x10],rsi
   1400018f6:	mov    QWORD PTR [rsp+0x18],rdi
   1400018fb:	push   rbp
   1400018fc:	mov    rbp,rsp
   1400018ff:	sub    rsp,0x50
   140001903:	xor    edi,edi
   140001905:	xor    sil,sil
   140001908:	mov    rcx,QWORD PTR [rip+0x11259]        # 0x140012b68
   14000190f:	xor    edx,edx
   140001911:	call   QWORD PTR [rip+0xb991]        # 0x14000d2a8
   140001917:	test   eax,eax
   140001919:	je     0x14000199f
   14000191f:	cmp    eax,0x80
   140001924:	je     0x140001995
   140001926:	cmp    eax,0x102
   14000192b:	je     0x140001955
   14000192d:	cmp    eax,0xffffffff
   140001930:	je     0x14000193c
   140001932:	mov    edi,0x8000ffff
   140001937:	jmp    0x140001a6f
   14000193c:	call   QWORD PTR [rip+0xb7b6]        # 0x14000d0f8
   140001942:	movzx  edi,ax
   140001945:	or     edi,0x80070000
   14000194b:	test   eax,eax
   14000194d:	cmovle edi,eax
   140001950:	jmp    0x140001a6b
   140001955:	call   0x1400016b8
   14000195a:	mov    edi,eax
   14000195c:	test   eax,eax
   14000195e:	js     0x140001a6b
   140001964:	jmp    0x14000197a
   140001966:	lea    rcx,[rbp-0x30]
   14000196a:	call   QWORD PTR [rip+0xb6e0]        # 0x14000d050
   140001970:	lea    rcx,[rbp-0x30]
   140001974:	call   QWORD PTR [rip+0xb6ce]        # 0x14000d048
   14000197a:	xor    r9d,r9d
   14000197d:	lea    rcx,[rbp-0x30]
   140001981:	xor    r8d,r8d
   140001984:	xor    edx,edx
   140001986:	call   QWORD PTR [rip+0xb6d4]        # 0x14000d060
   14000198c:	test   eax,eax
   14000198e:	jg     0x140001966
   140001990:	jmp    0x140001a6b
   140001995:	mov    edi,0x800702df
   14000199a:	jmp    0x140001a6f
   14000199f:	mov    ecx,DWORD PTR [rip+0x111db]        # 0x140012b80
   1400019a5:	xor    r9d,r9d
   1400019a8:	xor    r8d,r8d
   1400019ab:	lea    edx,[r9+0x12]
   1400019af:	call   QWORD PTR [rip+0xb6b3]        # 0x14000d068
   1400019b5:	test   eax,eax
   1400019b7:	jne    0x1400019cd
   1400019b9:	call   QWORD PTR [rip+0xb739]        # 0x14000d0f8
   1400019bf:	movzx  edi,ax
   1400019c2:	or     edi,0x80070000
   1400019c8:	test   eax,eax
   1400019ca:	cmovle edi,eax
   1400019cd:	test   edi,edi
   1400019cf:	js     0x140001a6f
   1400019d5:	jmp    0x1400019eb
   1400019d7:	lea    rcx,[rbp-0x30]
   1400019db:	call   QWORD PTR [rip+0xb66f]        # 0x14000d050
   1400019e1:	lea    rcx,[rbp-0x30]
   1400019e5:	call   QWORD PTR [rip+0xb65d]        # 0x14000d048
   1400019eb:	xor    r9d,r9d
   1400019ee:	lea    rcx,[rbp-0x30]
   1400019f2:	xor    r8d,r8d
   1400019f5:	xor    edx,edx
   1400019f7:	call   QWORD PTR [rip+0xb663]        # 0x14000d060
   1400019fd:	test   eax,eax
   1400019ff:	jg     0x1400019d7
   140001a01:	mov    rax,QWORD PTR [rip+0x110f8]        # 0x140012b00
   140001a08:	mov    rbx,QWORD PTR [rax+0x18]
   140001a0c:	mov    rcx,rbx
   140001a0f:	call   QWORD PTR [rip+0xba93]        # 0x14000d4a8
   140001a15:	lea    rcx,[rip+0x110e4]        # 0x140012b00
   140001a1c:	call   rbx
   140001a1e:	test   eax,eax
   140001a20:	jne    0x140001a27
   140001a22:	mov    sil,0x1
   140001a25:	jmp    0x140001a6b
   140001a27:	mov    rcx,QWORD PTR [rip+0x1113a]        # 0x140012b68
   140001a2e:	call   QWORD PTR [rip+0xb86c]        # 0x14000d2a0
   140001a34:	call   0x1400016b8
   140001a39:	mov    edi,eax
   140001a3b:	test   eax,eax
   140001a3d:	js     0x140001a6b
   140001a3f:	jmp    0x140001a55
   140001a41:	lea    rcx,[rbp-0x30]
   140001a45:	call   QWORD PTR [rip+0xb605]        # 0x14000d050
   140001a4b:	lea    rcx,[rbp-0x30]
   140001a4f:	call   QWORD PTR [rip+0xb5f3]        # 0x14000d048
   140001a55:	xor    r9d,r9d
   140001a58:	lea    rcx,[rbp-0x30]
   140001a5c:	xor    r8d,r8d
   140001a5f:	xor    edx,edx
   140001a61:	call   QWORD PTR [rip+0xb5f9]        # 0x14000d060
   140001a67:	test   eax,eax
   140001a69:	jg     0x140001a41
   140001a6b:	test   edi,edi
   140001a6d:	jns    0x140001a72
   140001a6f:	xor    sil,sil
   140001a72:	test   sil,sil
   140001a75:	je     0x140001908
   140001a7b:	mov    rbx,QWORD PTR [rip+0x111ee]        # 0x140012c70
   140001a82:	xor    esi,esi
   140001a84:	mov    rax,QWORD PTR [rip+0x111ed]        # 0x140012c78
   140001a8b:	jmp    0x140001ab3
   140001a8d:	test   esi,esi
   140001a8f:	jne    0x140001ab8
   140001a91:	mov    rcx,QWORD PTR [rbx]
   140001a94:	test   rcx,rcx
   140001a97:	je     0x140001aaf
   140001a99:	mov    ecx,DWORD PTR [rcx+0x28]
   140001a9c:	test   ecx,ecx
   140001a9e:	je     0x140001aaf
   140001aa0:	call   QWORD PTR [rip+0xb5ea]        # 0x14000d090
   140001aa6:	mov    esi,eax
   140001aa8:	mov    rax,QWORD PTR [rip+0x111c9]        # 0x140012c78
   140001aaf:	add    rbx,0x8
   140001ab3:	cmp    rbx,rax
   140001ab6:	jb     0x140001a8d
   140001ab8:	cmp    BYTE PTR [rip+0x110a1],0x0        # 0x140012b60
   140001abf:	je     0x140001acd
   140001ac1:	mov    ecx,DWORD PTR [rip+0x11095]        # 0x140012b5c
   140001ac7:	call   QWORD PTR [rip+0xb803]        # 0x14000d2d0
   140001acd:	mov    rcx,QWORD PTR [rip+0x110a4]        # 0x140012b78
   140001ad4:	test   edi,edi
   140001ad6:	cmovns edi,esi
   140001ad9:	call   QWORD PTR [rip+0xb639]        # 0x14000d118
   140001adf:	mov    rcx,QWORD PTR [rip+0x110aa]        # 0x140012b90
   140001ae6:	call   QWORD PTR [rip+0xb62c]        # 0x14000d118
   140001aec:	mov    rcx,QWORD PTR [rip+0x1107d]        # 0x140012b70
   140001af3:	call   QWORD PTR [rip+0xb61f]        # 0x14000d118
   140001af9:	mov    rcx,QWORD PTR [rip+0x11068]        # 0x140012b68
   140001b00:	call   QWORD PTR [rip+0xb79a]        # 0x14000d2a0
   140001b06:	test   eax,eax
   140001b08:	jne    0x140001b22
   140001b0a:	test   edi,edi
   140001b0c:	js     0x140001b22
   140001b0e:	call   QWORD PTR [rip+0xb5e4]        # 0x14000d0f8
   140001b14:	movzx  edi,ax
   140001b17:	or     edi,0x80070000
   140001b1d:	test   eax,eax
   140001b1f:	cmovle edi,eax
   140001b22:	mov    rcx,QWORD PTR [rip+0x1103f]        # 0x140012b68
   140001b29:	call   QWORD PTR [rip+0xb5e9]        # 0x14000d118
   140001b2f:	call   0x1400014a4
   140001b34:	mov    ecx,DWORD PTR [rip+0x11062]        # 0x140012b9c
   140001b3a:	call   QWORD PTR [rip+0xb790]        # 0x14000d2d0
   140001b40:	mov    rbx,QWORD PTR [rsp+0x60]
   140001b45:	mov    eax,edi
   140001b47:	mov    rdi,QWORD PTR [rsp+0x70]
   140001b4c:	mov    rsi,QWORD PTR [rsp+0x68]
   140001b51:	add    rsp,0x50
   140001b55:	pop    rbp
   140001b56:	ret    
   140001b57:	int3   
   140001b58:	int3   
   140001b59:	int3   
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	mov    QWORD PTR [rsp+0x8],rbx
   140001b65:	mov    QWORD PTR [rsp+0x10],rbp
   140001b6a:	mov    QWORD PTR [rsp+0x18],rsi
   140001b6f:	push   rdi
   140001b70:	sub    rsp,0x20
   140001b74:	mov    rsi,QWORD PTR [rip+0x110f5]        # 0x140012c70
   140001b7b:	mov    ebp,edx
   140001b7d:	mov    rax,QWORD PTR [rip+0x110f4]        # 0x140012c78
   140001b84:	mov    rdi,rcx
   140001b87:	jmp    0x140001bad
   140001b89:	mov    rbx,QWORD PTR [rsi]
   140001b8c:	test   rbx,rbx
   140001b8f:	je     0x140001ba9
   140001b91:	mov    rbx,QWORD PTR [rbx+0x40]
   140001b95:	mov    rcx,rbx
   140001b98:	call   QWORD PTR [rip+0xb90a]        # 0x14000d4a8
   140001b9e:	xor    ecx,ecx
   140001ba0:	call   rbx
   140001ba2:	mov    rax,QWORD PTR [rip+0x110cf]        # 0x140012c78
   140001ba9:	add    rsi,0x8
   140001bad:	cmp    rsi,rax
   140001bb0:	jb     0x140001b89
   140001bb2:	mov    rcx,rdi
   140001bb5:	call   0x140003020
   140001bba:	call   0x140002f84
   140001bbf:	cmp    BYTE PTR [rdi+0x62],0x0
   140001bc3:	je     0x140001bcb
   140001bc5:	call   QWORD PTR [rip+0xb4d5]        # 0x14000d0a0
   140001bcb:	mov    rcx,rdi
   140001bce:	call   0x140003020
   140001bd3:	test   bpl,0x1
   140001bd7:	je     0x140001be2
   140001bd9:	mov    rcx,rdi
   140001bdc:	call   QWORD PTR [rip+0xb886]        # 0x14000d468
   140001be2:	mov    rbx,QWORD PTR [rsp+0x30]
   140001be7:	mov    rax,rdi
   140001bea:	mov    rbp,QWORD PTR [rsp+0x38]
   140001bef:	mov    rsi,QWORD PTR [rsp+0x40]
   140001bf4:	add    rsp,0x20
   140001bf8:	pop    rdi
   140001bf9:	ret    
   140001bfa:	int3   
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	mov    QWORD PTR [rsp+0x8],rbx
   140001c05:	mov    QWORD PTR [rsp+0x10],rsi
   140001c0a:	push   rdi
   140001c0b:	sub    rsp,0x40
   140001c0f:	call   0x140001584
   140001c14:	neg    al
   140001c16:	sbb    esi,esi
   140001c18:	not    esi
   140001c1a:	and    esi,0x80070005
   140001c20:	jl     0x140001cd5
   140001c26:	and    QWORD PTR [rsp+0x30],0x0
   140001c2c:	lea    rax,[rsp+0x30]
   140001c31:	xor    edx,edx
   140001c33:	mov    QWORD PTR [rsp+0x20],rax
   140001c38:	lea    r9,[rip+0xc211]        # 0x14000de50
   140001c3f:	lea    rcx,[rip+0xc88a]        # 0x14000e4d0
   140001c46:	lea    r8d,[rdx+0x1]
   140001c4a:	call   QWORD PTR [rip+0xb480]        # 0x14000d0d0
   140001c50:	mov    esi,eax
   140001c52:	test   eax,eax
   140001c54:	js     0x140001c7b
   140001c56:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c5b:	mov    rax,QWORD PTR [rbx]
   140001c5e:	mov    rdi,QWORD PTR [rax+0x18]
   140001c62:	mov    rcx,rdi
   140001c65:	call   QWORD PTR [rip+0xb83d]        # 0x14000d4a8
   140001c6b:	mov    edx,0x1
   140001c70:	mov    rcx,rbx
   140001c73:	lea    r8d,[rdx+0x1]
   140001c77:	call   rdi
   140001c79:	mov    esi,eax
   140001c7b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c80:	test   rbx,rbx
   140001c83:	je     0x140001c9a
   140001c85:	mov    rax,QWORD PTR [rbx]
   140001c88:	mov    rdi,QWORD PTR [rax+0x10]
   140001c8c:	mov    rcx,rdi
   140001c8f:	call   QWORD PTR [rip+0xb813]        # 0x14000d4a8
   140001c95:	mov    rcx,rbx
   140001c98:	call   rdi
   140001c9a:	test   esi,esi
   140001c9c:	js     0x140001cd5
   140001c9e:	cmp    BYTE PTR [rip+0x10d6f],0x0        # 0x140012a14
   140001ca5:	je     0x140001cac
   140001ca7:	or     esi,0xffffffff
   140001caa:	jmp    0x140001cd5
   140001cac:	and    DWORD PTR [rsp+0x30],0x0
   140001cb1:	call   QWORD PTR [rip+0xb4f1]        # 0x14000d1a8
   140001cb7:	mov    rdx,rax
   140001cba:	lea    r8,[rsp+0x30]
   140001cbf:	call   0x140001f14
   140001cc4:	cmp    al,0x1
   140001cc6:	jne    0x140001cd1
   140001cc8:	call   0x14000217c
   140001ccd:	mov    esi,eax
   140001ccf:	jmp    0x140001cd5
   140001cd1:	mov    esi,DWORD PTR [rsp+0x30]
   140001cd5:	mov    rbx,QWORD PTR [rsp+0x50]
   140001cda:	mov    eax,esi
   140001cdc:	mov    rsi,QWORD PTR [rsp+0x58]
   140001ce1:	add    rsp,0x40
   140001ce5:	pop    rdi
   140001ce6:	ret    
   140001ce7:	int3   
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	mov    QWORD PTR [rsp+0x18],rbx
   140001cf5:	mov    DWORD PTR [rsp+0x10],edx
   140001cf9:	mov    QWORD PTR [rsp+0x8],rcx
   140001cfe:	push   rsi
   140001cff:	push   rdi
   140001d00:	push   r14
   140001d02:	sub    rsp,0x30
   140001d06:	mov    rsi,QWORD PTR [rip+0x10f63]        # 0x140012c70
   140001d0d:	mov    edi,0x1
   140001d12:	mov    rax,QWORD PTR [rip+0x10f5f]        # 0x140012c78
   140001d19:	jmp    0x140001dab
   140001d1e:	test   edi,edi
   140001d20:	js     0x140001eb9
   140001d26:	mov    rbx,QWORD PTR [rsi]
   140001d29:	test   rbx,rbx
   140001d2c:	je     0x140001da7
   140001d2e:	and    QWORD PTR [rsp+0x50],0x0
   140001d34:	mov    rdi,QWORD PTR [rbx+0x10]
   140001d38:	test   rdi,rdi
   140001d3b:	je     0x140001da7
   140001d3d:	mov    rcx,rdi
   140001d40:	call   QWORD PTR [rip+0xb762]        # 0x14000d4a8
   140001d46:	mov    rcx,QWORD PTR [rbx+0x18]
   140001d4a:	lea    r8,[rsp+0x50]
   140001d4f:	lea    rdx,[rip+0xc0ea]        # 0x14000de40
   140001d56:	call   rdi
   140001d58:	mov    edi,eax
   140001d5a:	test   eax,eax
   140001d5c:	js     0x140001d81
   140001d5e:	mov    rdx,QWORD PTR [rsp+0x50]
   140001d63:	lea    rax,[rbx+0x28]
   140001d67:	mov    rcx,QWORD PTR [rbx]
   140001d6a:	mov    r9d,0x5
   140001d70:	mov    QWORD PTR [rsp+0x20],rax
   140001d75:	lea    r8d,[r9-0x1]
   140001d79:	call   QWORD PTR [rip+0xb319]        # 0x14000d098
   140001d7f:	mov    edi,eax
   140001d81:	mov    r14,QWORD PTR [rsp+0x50]
   140001d86:	test   r14,r14
   140001d89:	je     0x140001da0
   140001d8b:	mov    rax,QWORD PTR [r14]
   140001d8e:	mov    rbx,QWORD PTR [rax+0x10]
   140001d92:	mov    rcx,rbx
   140001d95:	call   QWORD PTR [rip+0xb70d]        # 0x14000d4a8
   140001d9b:	mov    rcx,r14
   140001d9e:	call   rbx
   140001da0:	mov    rax,QWORD PTR [rip+0x10ed1]        # 0x140012c78
   140001da7:	add    rsi,0x8
   140001dab:	cmp    rsi,rax
   140001dae:	jb     0x140001d1e
   140001db4:	test   edi,edi
   140001db6:	js     0x140001eb9
   140001dbc:	jne    0x140001eb2
   140001dc2:	cmp    BYTE PTR [rip+0x10d97],0x0        # 0x140012b60
   140001dc9:	je     0x140001e68
   140001dcf:	xor    r9d,r9d
   140001dd2:	xor    r8d,r8d
   140001dd5:	xor    edx,edx
   140001dd7:	xor    ecx,ecx
   140001dd9:	call   QWORD PTR [rip+0xb4d9]        # 0x14000d2b8
   140001ddf:	mov    QWORD PTR [rip+0x10d6a],rax        # 0x140012b50
   140001de6:	test   rax,rax
   140001de9:	je     0x140001e61
   140001deb:	lea    rax,[rsp+0x58]
   140001df0:	xor    edx,edx
   140001df2:	mov    QWORD PTR [rsp+0x28],rax
   140001df7:	lea    r9,[rip+0x10d02]        # 0x140012b00
   140001dfe:	and    DWORD PTR [rsp+0x20],0x0
   140001e03:	lea    r8,[rip+0x506]        # 0x140002310
   140001e0a:	xor    ecx,ecx
   140001e0c:	call   QWORD PTR [rip+0xb3c6]        # 0x14000d1d8
   140001e12:	mov    rbx,rax
   140001e15:	test   rax,rax
   140001e18:	jne    0x140001e27
   140001e1a:	mov    rcx,QWORD PTR [rip+0x10d2f]        # 0x140012b50
   140001e21:	call   QWORD PTR [rip+0xb2f1]        # 0x14000d118
   140001e27:	test   rbx,rbx
   140001e2a:	je     0x140001e61
   140001e2c:	call   QWORD PTR [rip+0xb27e]        # 0x14000d0b0
   140001e32:	mov    edi,eax
   140001e34:	test   eax,eax
   140001e36:	jns    0x140001e56
   140001e38:	mov    rcx,QWORD PTR [rip+0x10d11]        # 0x140012b50
   140001e3f:	call   QWORD PTR [rip+0xb47b]        # 0x14000d2c0
   140001e45:	mov    edx,DWORD PTR [rip+0x10d0d]        # 0x140012b58
   140001e4b:	mov    rcx,rbx
   140001e4e:	add    edx,edx
   140001e50:	call   QWORD PTR [rip+0xb452]        # 0x14000d2a8
   140001e56:	mov    rcx,rbx
   140001e59:	call   QWORD PTR [rip+0xb2b9]        # 0x14000d118
   140001e5f:	jmp    0x140001e70
   140001e61:	mov    edi,0x80004005
   140001e66:	jmp    0x140001e74
   140001e68:	call   QWORD PTR [rip+0xb242]        # 0x14000d0b0
   140001e6e:	mov    edi,eax
   140001e70:	test   edi,edi
   140001e72:	jns    0x140001eb9
   140001e74:	mov    rbx,QWORD PTR [rip+0x10df5]        # 0x140012c70
   140001e7b:	xor    eax,eax
   140001e7d:	mov    rcx,QWORD PTR [rip+0x10df4]        # 0x140012c78
   140001e84:	jmp    0x140001eab
   140001e86:	test   eax,eax
   140001e88:	jne    0x140001eb9
   140001e8a:	mov    rdx,QWORD PTR [rbx]
   140001e8d:	test   rdx,rdx
   140001e90:	je     0x140001ea7
   140001e92:	cmp    DWORD PTR [rdx+0x28],eax
   140001e95:	je     0x140001ea7
   140001e97:	mov    ecx,DWORD PTR [rdx+0x28]
   140001e9a:	call   QWORD PTR [rip+0xb1f0]        # 0x14000d090
   140001ea0:	mov    rcx,QWORD PTR [rip+0x10dd1]        # 0x140012c78
   140001ea7:	add    rbx,0x8
   140001eab:	cmp    rbx,rcx
   140001eae:	jb     0x140001e86
   140001eb0:	jmp    0x140001eb9
   140001eb2:	mov    BYTE PTR [rip+0x10ca7],0x0        # 0x140012b60
   140001eb9:	mov    eax,edi
   140001ebb:	mov    rbx,QWORD PTR [rsp+0x60]
   140001ec0:	add    rsp,0x30
   140001ec4:	pop    r14
   140001ec6:	pop    rdi
   140001ec7:	pop    rsi
   140001ec8:	ret    
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ed5:	push   rdi
   140001ed6:	sub    rsp,0x20
   140001eda:	mov    rax,QWORD PTR [rdx]
   140001edd:	mov    rdi,rdx
   140001ee0:	mov    rbx,QWORD PTR [rax+0x18]
   140001ee4:	mov    rcx,rbx
   140001ee7:	call   QWORD PTR [rip+0xb5bb]        # 0x14000d4a8
   140001eed:	lea    r8,[rip+0xbe0c]        # 0x14000dd00
   140001ef4:	mov    rcx,rdi
   140001ef7:	lea    rdx,[rip+0xc28a]        # 0x14000e188
   140001efe:	mov    rax,rbx
   140001f01:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f06:	add    rsp,0x20
   140001f0a:	pop    rdi
   140001f0b:	rex.W jmp rax
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	int3   
   140001f11:	int3   
   140001f12:	int3   
   140001f13:	int3   
   140001f14:	mov    QWORD PTR [rsp+0x8],rbx
   140001f19:	push   rbp
   140001f1a:	push   rsi
   140001f1b:	push   rdi
   140001f1c:	push   r14
   140001f1e:	push   r15
   140001f20:	mov    rbp,rsp
   140001f23:	sub    rsp,0x50
   140001f27:	mov    rax,QWORD PTR [rip+0x100e2]        # 0x140012010
   140001f2e:	xor    rax,rsp
   140001f31:	mov    QWORD PTR [rbp-0x8],rax
   140001f35:	xor    r15d,r15d
   140001f38:	mov    r14,r8
   140001f3b:	mov    DWORD PTR [r8],r15d
   140001f3e:	mov    rbx,rdx
   140001f41:	mov    eax,DWORD PTR [rip+0xbe21]        # 0x14000dd68
   140001f47:	test   rdx,rdx
   140001f4a:	mov    DWORD PTR [rbp-0x10],eax
   140001f4d:	movzx  eax,WORD PTR [rip+0xbe18]        # 0x14000dd6c
   140001f54:	mov    WORD PTR [rbp-0xc],ax
   140001f58:	je     0x14000200f
   140001f5e:	cmp    WORD PTR [rbx],r15w
   140001f62:	je     0x14000200f
   140001f68:	lea    rax,[rbp-0x10]
   140001f6c:	movzx  ecx,WORD PTR [rax]
   140001f6f:	test   cx,cx
   140001f72:	je     0x140001f8b
   140001f74:	cmp    WORD PTR [rbx],cx
   140001f77:	je     0x140002001
   140001f7d:	mov    rcx,rax
   140001f80:	call   QWORD PTR [rip+0xb0d2]        # 0x14000d058
   140001f86:	test   rax,rax
   140001f89:	jne    0x140001f6c
   140001f8b:	mov    rcx,rbx
   140001f8e:	call   QWORD PTR [rip+0xb0c4]        # 0x14000d058
   140001f94:	mov    rbx,rax
   140001f97:	test   rax,rax
   140001f9a:	jmp    0x140001f58
   140001f9c:	lea    rdx,[rip+0xbdcd]        # 0x14000dd70
   140001fa3:	mov    rcx,rbx
   140001fa6:	call   0x140002eb0
   140001fab:	test   eax,eax
   140001fad:	je     0x14000211b
   140001fb3:	lea    rdx,[rip+0xbdce]        # 0x14000dd88
   140001fba:	mov    rcx,rbx
   140001fbd:	call   0x140002eb0
   140001fc2:	test   eax,eax
   140001fc4:	je     0x140002039
   140001fc6:	test   rbx,rbx
   140001fc9:	je     0x14000200f
   140001fcb:	cmp    WORD PTR [rbx],r15w
   140001fcf:	je     0x14000200f
   140001fd1:	lea    rax,[rbp-0x10]
   140001fd5:	movzx  ecx,WORD PTR [rax]
   140001fd8:	test   cx,cx
   140001fdb:	je     0x140001ff0
   140001fdd:	cmp    WORD PTR [rbx],cx
   140001fe0:	je     0x140002001
   140001fe2:	mov    rcx,rax
   140001fe5:	call   QWORD PTR [rip+0xb06d]        # 0x14000d058
   140001feb:	test   rax,rax
   140001fee:	jne    0x140001fd5
   140001ff0:	mov    rcx,rbx
   140001ff3:	call   QWORD PTR [rip+0xb05f]        # 0x14000d058
   140001ff9:	mov    rbx,rax
   140001ffc:	test   rax,rax
   140001fff:	jmp    0x140001fc9
   140002001:	mov    rcx,rbx
   140002004:	call   QWORD PTR [rip+0xb04e]        # 0x14000d058
   14000200a:	mov    rbx,rax
   14000200d:	jmp    0x140002012
   14000200f:	mov    rbx,r15
   140002012:	test   rbx,rbx
   140002015:	jne    0x140001f9c
   140002017:	mov    al,0x1
   140002019:	mov    rcx,QWORD PTR [rbp-0x8]
   14000201d:	xor    rcx,rsp
   140002020:	call   0x14000b290
   140002025:	mov    rbx,QWORD PTR [rsp+0x80]
   14000202d:	add    rsp,0x50
   140002031:	pop    r15
   140002033:	pop    r14
   140002035:	pop    rdi
   140002036:	pop    rsi
   140002037:	pop    rbp
   140002038:	ret    
   140002039:	lea    rax,[rip+0xc148]        # 0x14000e188
   140002040:	xorps  xmm0,xmm0
   140002043:	mov    QWORD PTR [rbp-0x30],rax
   140002047:	lea    r9,[rbp-0x30]
   14000204b:	lea    rax,[rip+0xbcae]        # 0x14000dd00
   140002052:	mov    r8d,0x1
   140002058:	mov    QWORD PTR [rbp-0x28],rax
   14000205c:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140002061:	call   0x140005270
   140002066:	mov    DWORD PTR [r14],eax
   140002069:	test   eax,eax
   14000206b:	js     0x14000216f
   140002071:	mov    rdi,QWORD PTR [rip+0x10bf8]        # 0x140012c70
   140002078:	mov    eax,r15d
   14000207b:	mov    rcx,QWORD PTR [rip+0x10bf6]        # 0x140012c78
   140002082:	cmp    rdi,rcx
   140002085:	jae    0x1400020eb
   140002087:	mov    rsi,QWORD PTR [rdi]
   14000208a:	test   rsi,rsi
   14000208d:	je     0x1400020da
   14000208f:	mov    rbx,QWORD PTR [rsi+0x8]
   140002093:	mov    rcx,rbx
   140002096:	call   QWORD PTR [rip+0xb40c]        # 0x14000d4a8
   14000209c:	mov    ecx,0x1
   1400020a1:	call   rbx
   1400020a3:	test   eax,eax
   1400020a5:	js     0x14000216c
   1400020ab:	mov    rbx,QWORD PTR [rsi+0x38]
   1400020af:	mov    rcx,rbx
   1400020b2:	call   QWORD PTR [rip+0xb3f0]        # 0x14000d4a8
   1400020b8:	call   rbx
   1400020ba:	mov    rcx,QWORD PTR [rsi]
   1400020bd:	mov    rdx,rax
   1400020c0:	mov    r8d,0x1
   1400020c6:	call   0x140002580
   1400020cb:	test   eax,eax
   1400020cd:	js     0x14000216c
   1400020d3:	mov    rcx,QWORD PTR [rip+0x10b9e]        # 0x140012c78
   1400020da:	add    rdi,0x8
   1400020de:	cmp    rdi,rcx
   1400020e1:	jb     0x140002087
   1400020e3:	test   eax,eax
   1400020e5:	js     0x14000216c
   1400020eb:	mov    rcx,QWORD PTR [rip+0x10b76]        # 0x140012c68
   1400020f2:	call   0x140002ca4
   1400020f7:	test   eax,eax
   1400020f9:	js     0x14000216c
   1400020fb:	mov    rbx,QWORD PTR [rip+0x1091e]        # 0x140012a20
   140002102:	test   rbx,rbx
   140002105:	je     0x14000216c
   140002107:	mov    rcx,rbx
   14000210a:	call   QWORD PTR [rip+0xb398]        # 0x14000d4a8
   140002110:	mov    rcx,QWORD PTR [rip+0x10aa1]        # 0x140012bb8
   140002117:	call   rbx
   140002119:	jmp    0x14000216c
   14000211b:	mov    rbx,QWORD PTR [rip+0x10906]        # 0x140012a28
   140002122:	test   rbx,rbx
   140002125:	je     0x140002136
   140002127:	mov    rcx,rbx
   14000212a:	call   QWORD PTR [rip+0xb378]        # 0x14000d4a8
   140002130:	call   rbx
   140002132:	test   eax,eax
   140002134:	js     0x14000213b
   140002136:	call   0x140002424
   14000213b:	mov    DWORD PTR [r14],eax
   14000213e:	test   eax,eax
   140002140:	js     0x14000216f
   140002142:	lea    rax,[rip+0xc03f]        # 0x14000e188
   140002149:	xorps  xmm0,xmm0
   14000214c:	mov    QWORD PTR [rbp-0x30],rax
   140002150:	lea    r9,[rbp-0x30]
   140002154:	lea    rax,[rip+0xbba5]        # 0x14000dd00
   14000215b:	xor    r8d,r8d
   14000215e:	mov    QWORD PTR [rbp-0x28],rax
   140002162:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140002167:	call   0x140005270
   14000216c:	mov    DWORD PTR [r14],eax
   14000216f:	xor    al,al
   140002171:	jmp    0x140002019
   140002176:	int3   
   140002177:	int3   
   140002178:	int3   
   140002179:	int3   
   14000217a:	int3   
   14000217b:	int3   
   14000217c:	mov    QWORD PTR [rsp+0x8],rbx
   140002181:	push   rdi
   140002182:	sub    rsp,0x50
   140002186:	lea    r8,[rip+0xba83]        # 0x14000dc10
   14000218d:	xor    edx,edx
   14000218f:	xor    ecx,ecx
   140002191:	xor    ebx,ebx
   140002193:	call   QWORD PTR [rip+0xb14f]        # 0x14000d2e8
   140002199:	mov    QWORD PTR [rip+0x109d0],rax        # 0x140012b70
   1400021a0:	call   QWORD PTR [rip+0xaf52]        # 0x14000d0f8
   1400021a6:	mov    rcx,QWORD PTR [rip+0x109c3]        # 0x140012b70
   1400021ad:	mov    edi,0x80070000
   1400021b2:	test   rcx,rcx
   1400021b5:	jne    0x1400021c3
   1400021b7:	movzx  ebx,ax
   1400021ba:	or     ebx,edi
   1400021bc:	test   eax,eax
   1400021be:	cmovle ebx,eax
   1400021c1:	jmp    0x1400021d5
   1400021c3:	cmp    eax,0xb7
   1400021c8:	jne    0x1400021d5
   1400021ca:	call   QWORD PTR [rip+0xaf48]        # 0x14000d118
   1400021d0:	mov    ebx,0x800700b7
   1400021d5:	test   ebx,ebx
   1400021d7:	js     0x1400022a9
   1400021dd:	call   0x1400017f4
   1400021e2:	mov    ebx,eax
   1400021e4:	test   eax,eax
   1400021e6:	js     0x1400022a7
   1400021ec:	lea    r8,[rip+0xba55]        # 0x14000dc48
   1400021f3:	xor    edx,edx
   1400021f5:	mov    ecx,0x120000
   1400021fa:	xor    ebx,ebx
   1400021fc:	call   QWORD PTR [rip+0xb096]        # 0x14000d298
   140002202:	mov    QWORD PTR [rip+0x1095f],rax        # 0x140012b68
   140002209:	test   rax,rax
   14000220c:	jne    0x14000221e
   14000220e:	call   QWORD PTR [rip+0xaee4]        # 0x14000d0f8
   140002214:	movzx  ebx,ax
   140002217:	or     ebx,edi
   140002219:	test   eax,eax
   14000221b:	cmovle ebx,eax
   14000221e:	test   ebx,ebx
   140002220:	js     0x1400022a9
   140002226:	call   0x140001cf0
   14000222b:	mov    ebx,eax
   14000222d:	test   eax,eax
   14000222f:	js     0x1400022a7
   140002231:	call   0x1400016b8
   140002236:	mov    ebx,eax
   140002238:	test   eax,eax
   14000223a:	js     0x1400022a7
   14000223c:	xor    ebx,ebx
   14000223e:	lea    r9,[rip+0xba3b]        # 0x14000dc80
   140002245:	xor    r8d,r8d
   140002248:	xor    ecx,ecx
   14000224a:	lea    edx,[rbx+0x1]
   14000224d:	call   QWORD PTR [rip+0xb065]        # 0x14000d2b8
   140002253:	mov    QWORD PTR [rip+0x1091e],rax        # 0x140012b78
   14000225a:	call   QWORD PTR [rip+0xae98]        # 0x14000d0f8
   140002260:	mov    rcx,QWORD PTR [rip+0x10911]        # 0x140012b78
   140002267:	test   rcx,rcx
   14000226a:	jne    0x14000227a
   14000226c:	movzx  ebx,ax
   14000226f:	or     ebx,edi
   140002271:	test   eax,eax
   140002273:	cmovle ebx,eax
   140002276:	test   ebx,ebx
   140002278:	js     0x1400022a9
   14000227a:	call   QWORD PTR [rip+0xb040]        # 0x14000d2c0
   140002280:	test   eax,eax
   140002282:	jne    0x140002294
   140002284:	call   QWORD PTR [rip+0xae6e]        # 0x14000d0f8
   14000228a:	movzx  ebx,ax
   14000228d:	or     ebx,edi
   14000228f:	test   eax,eax
   140002291:	cmovle ebx,eax
   140002294:	test   ebx,ebx
   140002296:	js     0x1400022a9
   140002298:	call   0x14000146c
   14000229d:	movzx  ebx,ax
   1400022a0:	or     ebx,edi
   1400022a2:	test   eax,eax
   1400022a4:	cmovle ebx,eax
   1400022a7:	test   ebx,ebx
   1400022a9:	jne    0x1400022ef
   1400022ab:	xor    r9d,r9d
   1400022ae:	lea    rcx,[rsp+0x20]
   1400022b3:	xor    r8d,r8d
   1400022b6:	xor    edx,edx
   1400022b8:	call   QWORD PTR [rip+0xada2]        # 0x14000d060
   1400022be:	test   eax,eax
   1400022c0:	jle    0x1400022f3
   1400022c2:	lea    rcx,[rsp+0x20]
   1400022c7:	call   QWORD PTR [rip+0xad83]        # 0x14000d050
   1400022cd:	lea    rcx,[rsp+0x20]
   1400022d2:	call   QWORD PTR [rip+0xad70]        # 0x14000d048
   1400022d8:	xor    r9d,r9d
   1400022db:	lea    rcx,[rsp+0x20]
   1400022e0:	xor    r8d,r8d
   1400022e3:	xor    edx,edx
   1400022e5:	call   QWORD PTR [rip+0xad75]        # 0x14000d060
   1400022eb:	test   eax,eax
   1400022ed:	jg     0x1400022c2
   1400022ef:	test   ebx,ebx
   1400022f1:	js     0x1400022fa
   1400022f3:	call   0x1400018ec
   1400022f8:	mov    ebx,eax
   1400022fa:	mov    eax,ebx
   1400022fc:	mov    rbx,QWORD PTR [rsp+0x60]
   140002301:	add    rsp,0x50
   140002305:	pop    rdi
   140002306:	ret    
   140002307:	int3   
   140002308:	int3   
   140002309:	int3   
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	int3   
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	rex push rbx
   140002312:	sub    rsp,0x20
   140002316:	mov    rbx,rcx
   140002319:	mov    rcx,QWORD PTR [rbx+0x50]
   14000231d:	or     edx,0xffffffff
   140002320:	call   QWORD PTR [rip+0xaf82]        # 0x14000d2a8
   140002326:	mov    edx,DWORD PTR [rbx+0x58]
   140002329:	mov    rcx,QWORD PTR [rbx+0x50]
   14000232d:	mov    BYTE PTR [rbx+0x61],0x0
   140002331:	call   QWORD PTR [rip+0xaf71]        # 0x14000d2a8
   140002337:	test   eax,eax
   140002339:	je     0x140002326
   14000233b:	cmp    BYTE PTR [rbx+0x61],0x0
   14000233f:	jne    0x140002319
   140002341:	cmp    DWORD PTR [rbx+0xc],0x0
   140002345:	jne    0x140002319
   140002347:	call   QWORD PTR [rip+0xad33]        # 0x14000d080
   14000234d:	cmp    DWORD PTR [rbx+0xc],0x0
   140002351:	jne    0x140002319
   140002353:	mov    rcx,QWORD PTR [rbx+0x50]
   140002357:	call   QWORD PTR [rip+0xadbb]        # 0x14000d118
   14000235d:	mov    ecx,DWORD PTR [rbx+0x48]
   140002360:	xor    r9d,r9d
   140002363:	xor    r8d,r8d
   140002366:	lea    edx,[r9+0x12]
   14000236a:	call   QWORD PTR [rip+0xacf8]        # 0x14000d068
   140002370:	xor    eax,eax
   140002372:	add    rsp,0x20
   140002376:	pop    rbx
   140002377:	ret    
   140002378:	int3   
   140002379:	int3   
   14000237a:	int3   
   14000237b:	int3   
   14000237c:	int3   
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	mov    QWORD PTR [rsp+0x8],rbx
   140002385:	mov    QWORD PTR [rsp+0x10],rsi
   14000238a:	push   rdi
   14000238b:	sub    rsp,0x30
   14000238f:	mov    rbx,rdx
   140002392:	test   rdx,rdx
   140002395:	jne    0x14000239e
   140002397:	mov    eax,0x80004003
   14000239c:	jmp    0x1400023ee
   14000239e:	xor    esi,esi
   1400023a0:	lea    rdi,[rcx+0x40]
   1400023a4:	cmp    QWORD PTR [rdi],rsi
   1400023a7:	jne    0x1400023ce
   1400023a9:	lea    r9,[rip+0xb9f0]        # 0x14000dda0
   1400023b0:	mov    QWORD PTR [rsp+0x20],rdi
   1400023b5:	xor    edx,edx
   1400023b7:	lea    r8d,[rsi+0x1]
   1400023bb:	lea    rcx,[rip+0xb4fe]        # 0x14000d8c0
   1400023c2:	call   QWORD PTR [rip+0xad08]        # 0x14000d0d0
   1400023c8:	mov    esi,eax
   1400023ca:	test   eax,eax
   1400023cc:	js     0x1400023ec
   1400023ce:	mov    rcx,QWORD PTR [rdi]
   1400023d1:	mov    QWORD PTR [rbx],rcx
   1400023d4:	mov    rdi,QWORD PTR [rdi]
   1400023d7:	mov    rdx,QWORD PTR [rdi]
   1400023da:	mov    rbx,QWORD PTR [rdx+0x8]
   1400023de:	mov    rcx,rbx
   1400023e1:	call   QWORD PTR [rip+0xb0c1]        # 0x14000d4a8
   1400023e7:	mov    rcx,rdi
   1400023ea:	call   rbx
   1400023ec:	mov    eax,esi
   1400023ee:	mov    rbx,QWORD PTR [rsp+0x40]
   1400023f3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400023f8:	add    rsp,0x30
   1400023fc:	pop    rdi
   1400023fd:	ret    
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	int3   
   140002401:	int3   
   140002402:	int3   
   140002403:	int3   
   140002404:	int3   
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	int3   
   140002409:	int3   
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	mov    eax,0x1
   140002415:	lock xadd DWORD PTR [rcx+0xc],eax
   14000241a:	inc    eax
   14000241c:	ret    
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	int3   
   140002421:	int3   
   140002422:	int3   
   140002423:	int3   
   140002424:	mov    QWORD PTR [rsp+0x10],rbx
   140002429:	mov    QWORD PTR [rsp+0x18],r8
   14000242e:	mov    QWORD PTR [rsp+0x8],rcx
   140002433:	push   rsi
   140002434:	push   rdi
   140002435:	push   r14
   140002437:	sub    rsp,0x30
   14000243b:	mov    rdi,QWORD PTR [rip+0x1082e]        # 0x140012c70
   140002442:	xor    esi,esi
   140002444:	mov    rax,QWORD PTR [rip+0x1082d]        # 0x140012c78
   14000244b:	cmp    rdi,rax
   14000244e:	jae    0x1400024b2
   140002450:	mov    r14,QWORD PTR [rdi]
   140002453:	test   r14,r14
   140002456:	je     0x1400024a1
   140002458:	mov    rbx,QWORD PTR [r14+0x38]
   14000245c:	mov    rcx,rbx
   14000245f:	call   QWORD PTR [rip+0xb043]        # 0x14000d4a8
   140002465:	call   rbx
   140002467:	mov    rcx,QWORD PTR [r14]
   14000246a:	mov    rdx,rax
   14000246d:	xor    r8d,r8d
   140002470:	call   0x140002580
   140002475:	mov    esi,eax
   140002477:	test   eax,eax
   140002479:	js     0x140002569
   14000247f:	mov    rbx,QWORD PTR [r14+0x8]
   140002483:	mov    rcx,rbx
   140002486:	call   QWORD PTR [rip+0xb01c]        # 0x14000d4a8
   14000248c:	xor    ecx,ecx
   14000248e:	call   rbx
   140002490:	mov    esi,eax
   140002492:	test   eax,eax
   140002494:	js     0x140002569
   14000249a:	mov    rax,QWORD PTR [rip+0x107d7]        # 0x140012c78
   1400024a1:	add    rdi,0x8
   1400024a5:	cmp    rdi,rax
   1400024a8:	jb     0x140002450
   1400024aa:	test   esi,esi
   1400024ac:	js     0x140002569
   1400024b2:	mov    rcx,QWORD PTR [rip+0x107af]        # 0x140012c68
   1400024b9:	lea    r9,[rsp+0x60]
   1400024be:	and    QWORD PTR [rsp+0x68],0x0
   1400024c4:	lea    r8,[rsp+0x68]
   1400024c9:	and    QWORD PTR [rsp+0x60],0x0
   1400024cf:	call   0x140002afc
   1400024d4:	mov    esi,eax
   1400024d6:	test   eax,eax
   1400024d8:	js     0x14000253f
   1400024da:	mov    rbx,QWORD PTR [rsp+0x60]
   1400024df:	mov    rax,QWORD PTR [rbx]
   1400024e2:	mov    rdi,QWORD PTR [rax+0x38]
   1400024e6:	mov    rcx,rdi
   1400024e9:	call   QWORD PTR [rip+0xafb9]        # 0x14000d4a8
   1400024ef:	lea    rdx,[rsp+0x50]
   1400024f4:	mov    rcx,rbx
   1400024f7:	call   rdi
   1400024f9:	mov    esi,eax
   1400024fb:	test   eax,eax
   1400024fd:	js     0x14000253f
   1400024ff:	mov    rcx,QWORD PTR [rsp+0x50]
   140002504:	mov    eax,DWORD PTR [rcx+0x14]
   140002507:	mov    r9d,DWORD PTR [rcx+0x10]
   14000250b:	movzx  r8d,WORD PTR [rcx+0x1a]
   140002510:	movzx  edx,WORD PTR [rcx+0x18]
   140002514:	mov    DWORD PTR [rsp+0x20],eax
   140002518:	call   QWORD PTR [rip+0xab12]        # 0x14000d030
   14000251e:	mov    rbx,QWORD PTR [rsp+0x60]
   140002523:	mov    esi,eax
   140002525:	mov    rax,QWORD PTR [rbx]
   140002528:	mov    rdi,QWORD PTR [rax+0x60]
   14000252c:	mov    rcx,rdi
   14000252f:	call   QWORD PTR [rip+0xaf73]        # 0x14000d4a8
   140002535:	mov    rdx,QWORD PTR [rsp+0x50]
   14000253a:	mov    rcx,rbx
   14000253d:	call   rdi
   14000253f:	mov    rbx,QWORD PTR [rsp+0x60]
   140002544:	test   rbx,rbx
   140002547:	je     0x14000255e
   140002549:	mov    rax,QWORD PTR [rbx]
   14000254c:	mov    rdi,QWORD PTR [rax+0x10]
   140002550:	mov    rcx,rdi
   140002553:	call   QWORD PTR [rip+0xaf4f]        # 0x14000d4a8
   140002559:	mov    rcx,rbx
   14000255c:	call   rdi
   14000255e:	mov    rcx,QWORD PTR [rsp+0x68]
   140002563:	call   QWORD PTR [rip+0xaaaf]        # 0x14000d018
   140002569:	mov    eax,esi
   14000256b:	mov    rbx,QWORD PTR [rsp+0x58]
   140002570:	add    rsp,0x30
   140002574:	pop    r14
   140002576:	pop    rdi
   140002577:	pop    rsi
   140002578:	ret    
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    QWORD PTR [rsp+0x18],rbx
   140002585:	push   rbp
   140002586:	push   rsi
   140002587:	push   rdi
   140002588:	push   r12
   14000258a:	push   r13
   14000258c:	push   r14
   14000258e:	push   r15
   140002590:	lea    rbp,[rsp-0x140]
   140002598:	sub    rsp,0x240
   14000259f:	mov    rax,QWORD PTR [rip+0xfa6a]        # 0x140012010
   1400025a6:	xor    rax,rsp
   1400025a9:	mov    QWORD PTR [rbp+0x130],rax
   1400025b0:	xor    r13d,r13d
   1400025b3:	mov    r12d,r8d
   1400025b6:	mov    ebx,r13d
   1400025b9:	mov    rsi,rdx
   1400025bc:	mov    QWORD PTR [rsp+0x68],rbx
   1400025c1:	mov    r14,rcx
   1400025c4:	test   rdx,rdx
   1400025c7:	je     0x1400029e4
   1400025cd:	cmp    DWORD PTR [rcx],r13d
   1400025d0:	jne    0x1400025f7
   1400025d2:	mov    eax,DWORD PTR [rip+0xbeec]        # 0x14000e4c4
   1400025d8:	cmp    DWORD PTR [rcx+0x4],eax
   1400025db:	jne    0x1400025f7
   1400025dd:	mov    eax,DWORD PTR [rip+0xbee5]        # 0x14000e4c8
   1400025e3:	cmp    DWORD PTR [rcx+0x8],eax
   1400025e6:	jne    0x1400025f7
   1400025e8:	mov    eax,DWORD PTR [rip+0xbede]        # 0x14000e4cc
   1400025ee:	cmp    DWORD PTR [rcx+0xc],eax
   1400025f1:	je     0x1400029e4
   1400025f7:	lea    rax,[rsp+0x68]
   1400025fc:	mov    r15d,0x1
   140002602:	mov    r8d,r15d
   140002605:	mov    QWORD PTR [rsp+0x20],rax
   14000260a:	lea    r9,[rip+0xb79f]        # 0x14000ddb0
   140002611:	xor    edx,edx
   140002613:	lea    rcx,[rip+0xbec6]        # 0x14000e4e0
   14000261a:	call   QWORD PTR [rip+0xaab0]        # 0x14000d0d0
   140002620:	test   eax,eax
   140002622:	js     0x1400029df
   140002628:	cmp    DWORD PTR [rsi],r13d
   14000262b:	je     0x1400026ba
   140002631:	mov    rax,QWORD PTR [rsi+0x8]
   140002635:	mov    rbx,QWORD PTR [rsp+0x68]
   14000263a:	movups xmm0,XMMWORD PTR [rax]
   14000263d:	movdqu XMMWORD PTR [rbp-0x68],xmm0
   140002642:	mov    rax,QWORD PTR [rbx]
   140002645:	test   r12d,r12d
   140002648:	je     0x140002680
   14000264a:	cmp    DWORD PTR [rsi],r15d
   14000264d:	jne    0x140002655
   14000264f:	mov    rdi,QWORD PTR [rax+0x28]
   140002653:	jmp    0x140002659
   140002655:	mov    rdi,QWORD PTR [rax+0x38]
   140002659:	mov    rcx,rdi
   14000265c:	call   QWORD PTR [rip+0xae46]        # 0x14000d4a8
   140002662:	lea    r9,[rbp-0x68]
   140002666:	mov    r8d,r15d
   140002669:	mov    rdx,r14
   14000266c:	mov    rcx,rbx
   14000266f:	call   rdi
   140002671:	mov    r15d,eax
   140002674:	test   eax,eax
   140002676:	js     0x1400026b0
   140002678:	mov    r15d,0x1
   14000267e:	jmp    0x1400026a7
   140002680:	cmp    DWORD PTR [rsi],r15d
   140002683:	jne    0x14000268b
   140002685:	mov    rdi,QWORD PTR [rax+0x30]
   140002689:	jmp    0x14000268f
   14000268b:	mov    rdi,QWORD PTR [rax+0x40]
   14000268f:	mov    rcx,rdi
   140002692:	call   QWORD PTR [rip+0xae10]        # 0x14000d4a8
   140002698:	lea    r9,[rbp-0x68]
   14000269c:	mov    r8d,r15d
   14000269f:	mov    rdx,r14
   1400026a2:	mov    rcx,rbx
   1400026a5:	call   rdi
   1400026a7:	add    rsi,0x10
   1400026ab:	jmp    0x140002628
   1400026b0:	mov    rbx,QWORD PTR [rsp+0x68]
   1400026b5:	jmp    0x1400029e7
   1400026ba:	test   r12d,r12d
   1400026bd:	jne    0x1400029df
   1400026c3:	lea    r8d,[r12+0x40]
   1400026c8:	mov    rcx,r14
   1400026cb:	lea    rdx,[rbp+0xb0]
   1400026d2:	call   QWORD PTR [rip+0xa9b0]        # 0x14000d088
   1400026d8:	mov    ebx,0x80
   1400026dd:	lea    r8,[rip+0xb70c]        # 0x14000ddf0
   1400026e4:	mov    edx,ebx
   1400026e6:	lea    rcx,[rbp-0x50]
   1400026ea:	call   QWORD PTR [rip+0xad60]        # 0x14000d450
   1400026f0:	lea    r14d,[r12+0xc]
   1400026f5:	lea    r12d,[rbx-0x6a]
   1400026f9:	lea    r15d,[rbx-0x30]
   1400026fd:	test   eax,eax
   1400026ff:	je     0x140002725
   140002701:	cmp    eax,r14d
   140002704:	je     0x140002a44
   14000270a:	cmp    eax,r12d
   14000270d:	je     0x140002a39
   140002713:	cmp    eax,0x22
   140002716:	je     0x140002a39
   14000271c:	cmp    eax,r15d
   14000271f:	jne    0x140002a2e
   140002725:	lea    r8,[rbp+0xb0]
   14000272c:	mov    rdx,rbx
   14000272f:	lea    rcx,[rbp-0x50]
   140002733:	call   QWORD PTR [rip+0xad0f]        # 0x14000d448
   140002739:	test   eax,eax
   14000273b:	je     0x140002761
   14000273d:	cmp    eax,r14d
   140002740:	je     0x140002a65
   140002746:	cmp    eax,r12d
   140002749:	je     0x140002a5a
   14000274f:	cmp    eax,0x22
   140002752:	je     0x140002a5a
   140002758:	cmp    eax,r15d
   14000275b:	jne    0x140002a4f
   140002761:	lea    r8,[rip+0xb658]        # 0x14000ddc0
   140002768:	mov    rdx,rbx
   14000276b:	lea    rcx,[rbp-0x50]
   14000276f:	call   QWORD PTR [rip+0xacd3]        # 0x14000d448
   140002775:	test   eax,eax
   140002777:	je     0x14000279d
   140002779:	cmp    eax,r14d
   14000277c:	je     0x140002a86
   140002782:	cmp    eax,r12d
   140002785:	je     0x140002a7b
   14000278b:	cmp    eax,0x22
   14000278e:	je     0x140002a7b
   140002794:	cmp    eax,r15d
   140002797:	jne    0x140002a70
   14000279d:	mov    rdi,0xffffffff80000000
   1400027a4:	mov    QWORD PTR [rbp-0x78],r13
   1400027a8:	lea    rax,[rsp+0x78]
   1400027ad:	mov    QWORD PTR [rbp-0x80],rdi
   1400027b1:	mov    rcx,rdi
   1400027b4:	mov    QWORD PTR [rbp-0x70],r13
   1400027b8:	mov    r9d,0x20019
   1400027be:	mov    DWORD PTR [rsp+0x60],r13d
   1400027c3:	xor    r8d,r8d
   1400027c6:	mov    QWORD PTR [rsp+0x78],r13
   1400027cb:	lea    rdx,[rbp-0x50]
   1400027cf:	mov    QWORD PTR [rsp+0x20],rax
   1400027d4:	mov    rbx,r13
   1400027d7:	call   QWORD PTR [rip+0xaa5b]        # 0x14000d238
   1400027dd:	test   eax,eax
   1400027df:	jne    0x140002855
   1400027e1:	mov    rbx,QWORD PTR [rsp+0x78]
   1400027e6:	lea    rax,[rsp+0x60]
   1400027eb:	mov    QWORD PTR [rsp+0x58],r13
   1400027f0:	xor    r9d,r9d
   1400027f3:	mov    QWORD PTR [rsp+0x50],r13
   1400027f8:	xor    r8d,r8d
   1400027fb:	mov    QWORD PTR [rsp+0x48],r13
   140002800:	xor    edx,edx
   140002802:	mov    QWORD PTR [rsp+0x40],r13
   140002807:	mov    rcx,rbx
   14000280a:	mov    QWORD PTR [rsp+0x38],r13
   14000280f:	mov    QWORD PTR [rsp+0x30],r13
   140002814:	mov    QWORD PTR [rsp+0x28],r13
   140002819:	mov    QWORD PTR [rsp+0x20],rax
   14000281e:	call   QWORD PTR [rip+0xaa0c]        # 0x14000d230
   140002824:	movsxd rsi,eax
   140002827:	test   rbx,rbx
   14000282a:	je     0x140002838
   14000282c:	mov    rcx,rbx
   14000282f:	call   QWORD PTR [rip+0xa9f3]        # 0x14000d228
   140002835:	mov    rbx,r13
   140002838:	test   rsi,rsi
   14000283b:	jne    0x140002855
   14000283d:	cmp    DWORD PTR [rsp+0x60],r13d
   140002842:	jne    0x140002855
   140002844:	lea    rdx,[rbp-0x50]
   140002848:	lea    rcx,[rbp-0x80]
   14000284c:	call   0x140004474
   140002851:	mov    rdi,QWORD PTR [rbp-0x80]
   140002855:	mov    esi,0x80
   14000285a:	lea    r8,[rip+0xb58f]        # 0x14000ddf0
   140002861:	mov    edx,esi
   140002863:	lea    rcx,[rbp-0x50]
   140002867:	call   QWORD PTR [rip+0xabe3]        # 0x14000d450
   14000286d:	test   eax,eax
   14000286f:	je     0x140002895
   140002871:	cmp    eax,r14d
   140002874:	je     0x140002aa7
   14000287a:	cmp    eax,r12d
   14000287d:	je     0x140002a9c
   140002883:	cmp    eax,0x22
   140002886:	je     0x140002a9c
   14000288c:	cmp    eax,r15d
   14000288f:	jne    0x140002a91
   140002895:	lea    r8,[rbp+0xb0]
   14000289c:	mov    rdx,rsi
   14000289f:	lea    rcx,[rbp-0x50]
   1400028a3:	call   QWORD PTR [rip+0xab9f]        # 0x14000d448
   1400028a9:	test   eax,eax
   1400028ab:	je     0x1400028d1
   1400028ad:	cmp    eax,r14d
   1400028b0:	je     0x140002ac8
   1400028b6:	cmp    eax,r12d
   1400028b9:	je     0x140002abd
   1400028bf:	cmp    eax,0x22
   1400028c2:	je     0x140002abd
   1400028c8:	cmp    eax,r15d
   1400028cb:	jne    0x140002ab2
   1400028d1:	lea    r8,[rip+0xb528]        # 0x14000de00
   1400028d8:	mov    rdx,rsi
   1400028db:	lea    rcx,[rbp-0x50]
   1400028df:	call   QWORD PTR [rip+0xab63]        # 0x14000d448
   1400028e5:	test   eax,eax
   1400028e7:	je     0x14000290d
   1400028e9:	cmp    eax,r14d
   1400028ec:	je     0x140002ae9
   1400028f2:	cmp    eax,r12d
   1400028f5:	je     0x140002ade
   1400028fb:	cmp    eax,0x22
   1400028fe:	je     0x140002ade
   140002904:	cmp    eax,r15d
   140002907:	jne    0x140002ad3
   14000290d:	lea    rax,[rsp+0x70]
   140002912:	mov    QWORD PTR [rsp+0x70],r13
   140002917:	mov    r9d,0x20019
   14000291d:	mov    QWORD PTR [rsp+0x20],rax
   140002922:	xor    r8d,r8d
   140002925:	lea    rdx,[rbp-0x50]
   140002929:	mov    rcx,rdi
   14000292c:	call   QWORD PTR [rip+0xa906]        # 0x14000d238
   140002932:	test   eax,eax
   140002934:	jne    0x1400029c3
   14000293a:	mov    eax,r13d
   14000293d:	test   rbx,rbx
   140002940:	je     0x14000294b
   140002942:	mov    rcx,rbx
   140002945:	call   QWORD PTR [rip+0xa8dd]        # 0x14000d228
   14000294b:	mov    rbx,QWORD PTR [rsp+0x70]
   140002950:	test   eax,eax
   140002952:	jne    0x1400029c3
   140002954:	mov    QWORD PTR [rsp+0x58],r13
   140002959:	lea    rax,[rsp+0x60]
   14000295e:	mov    QWORD PTR [rsp+0x50],r13
   140002963:	xor    r9d,r9d
   140002966:	mov    QWORD PTR [rsp+0x48],r13
   14000296b:	xor    r8d,r8d
   14000296e:	mov    QWORD PTR [rsp+0x40],r13
   140002973:	xor    edx,edx
   140002975:	mov    QWORD PTR [rsp+0x38],r13
   14000297a:	mov    rcx,rbx
   14000297d:	mov    QWORD PTR [rsp+0x30],r13
   140002982:	mov    QWORD PTR [rsp+0x28],r13
   140002987:	mov    QWORD PTR [rsp+0x20],rax
   14000298c:	call   QWORD PTR [rip+0xa89e]        # 0x14000d230
   140002992:	movsxd rsi,eax
   140002995:	test   rbx,rbx
   140002998:	je     0x1400029a6
   14000299a:	mov    rcx,rbx
   14000299d:	call   QWORD PTR [rip+0xa885]        # 0x14000d228
   1400029a3:	mov    rbx,r13
   1400029a6:	test   rsi,rsi
   1400029a9:	jne    0x1400029c3
   1400029ab:	cmp    DWORD PTR [rsp+0x60],r13d
   1400029b0:	jne    0x1400029c3
   1400029b2:	lea    rdx,[rbp-0x50]
   1400029b6:	lea    rcx,[rbp-0x80]
   1400029ba:	call   0x140004474
   1400029bf:	mov    rdi,QWORD PTR [rbp-0x80]
   1400029c3:	test   rbx,rbx
   1400029c6:	je     0x1400029d1
   1400029c8:	mov    rcx,rbx
   1400029cb:	call   QWORD PTR [rip+0xa857]        # 0x14000d228
   1400029d1:	test   rdi,rdi
   1400029d4:	je     0x1400029df
   1400029d6:	mov    rcx,rdi
   1400029d9:	call   QWORD PTR [rip+0xa849]        # 0x14000d228
   1400029df:	mov    rbx,QWORD PTR [rsp+0x68]
   1400029e4:	mov    r15d,r13d
   1400029e7:	test   rbx,rbx
   1400029ea:	je     0x140002a01
   1400029ec:	mov    rcx,QWORD PTR [rbx]
   1400029ef:	mov    rdi,QWORD PTR [rcx+0x10]
   1400029f3:	mov    rcx,rdi
   1400029f6:	call   QWORD PTR [rip+0xaaac]        # 0x14000d4a8
   1400029fc:	mov    rcx,rbx
   1400029ff:	call   rdi
   140002a01:	mov    eax,r15d
   140002a04:	mov    rcx,QWORD PTR [rbp+0x130]
   140002a0b:	xor    rcx,rsp
   140002a0e:	call   0x14000b290
   140002a13:	mov    rbx,QWORD PTR [rsp+0x290]
   140002a1b:	add    rsp,0x240
   140002a22:	pop    r15
   140002a24:	pop    r14
   140002a26:	pop    r13
   140002a28:	pop    r12
   140002a2a:	pop    rdi
   140002a2b:	pop    rsi
   140002a2c:	pop    rbp
   140002a2d:	ret    
   140002a2e:	mov    ecx,0x80004005
   140002a33:	call   0x140004230
   140002a38:	int3   
   140002a39:	mov    ecx,0x80070057
   140002a3e:	call   0x140004230
   140002a43:	int3   
   140002a44:	mov    ecx,0x8007000e
   140002a49:	call   0x140004230
   140002a4e:	int3   
   140002a4f:	mov    ecx,0x80004005
   140002a54:	call   0x140004230
   140002a59:	int3   
   140002a5a:	mov    ecx,0x80070057
   140002a5f:	call   0x140004230
   140002a64:	int3   
   140002a65:	mov    ecx,0x8007000e
   140002a6a:	call   0x140004230
   140002a6f:	int3   
   140002a70:	mov    ecx,0x80004005
   140002a75:	call   0x140004230
   140002a7a:	int3   
   140002a7b:	mov    ecx,0x80070057
   140002a80:	call   0x140004230
   140002a85:	int3   
   140002a86:	mov    ecx,0x8007000e
   140002a8b:	call   0x140004230
   140002a90:	int3   
   140002a91:	mov    ecx,0x80004005
   140002a96:	call   0x140004230
   140002a9b:	int3   
   140002a9c:	mov    ecx,0x80070057
   140002aa1:	call   0x140004230
   140002aa6:	int3   
   140002aa7:	mov    ecx,0x8007000e
   140002aac:	call   0x140004230
   140002ab1:	int3   
   140002ab2:	mov    ecx,0x80004005
   140002ab7:	call   0x140004230
   140002abc:	int3   
   140002abd:	mov    ecx,0x80070057
   140002ac2:	call   0x140004230
   140002ac7:	int3   
   140002ac8:	mov    ecx,0x8007000e
   140002acd:	call   0x140004230
   140002ad2:	int3   
   140002ad3:	mov    ecx,0x80004005
   140002ad8:	call   0x140004230
   140002add:	int3   
   140002ade:	mov    ecx,0x80070057
   140002ae3:	call   0x140004230
   140002ae8:	int3   
   140002ae9:	mov    ecx,0x8007000e
   140002aee:	call   0x140004230
   140002af3:	int3   
   140002af4:	int3   
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	rex push rbx
   140002afe:	push   rbp
   140002aff:	push   rsi
   140002b00:	push   rdi
   140002b01:	push   r14
   140002b03:	sub    rsp,0x260
   140002b0a:	mov    rax,QWORD PTR [rip+0xf4ff]        # 0x140012010
   140002b11:	xor    rax,rsp
   140002b14:	mov    QWORD PTR [rsp+0x250],rax
   140002b1c:	xor    ebp,ebp
   140002b1e:	mov    rsi,r9
   140002b21:	mov    r14,r8
   140002b24:	test   r8,r8
   140002b27:	je     0x140002c58
   140002b2d:	test   r9,r9
   140002b30:	je     0x140002c58
   140002b36:	mov    QWORD PTR [r8],rbp
   140002b39:	lea    rdx,[rsp+0x30]
   140002b3e:	mov    r8d,0x104
   140002b44:	mov    QWORD PTR [r9],rbp
   140002b47:	call   QWORD PTR [rip+0xa623]        # 0x14000d170
   140002b4d:	test   eax,eax
   140002b4f:	jne    0x140002b5d
   140002b51:	call   0x14000379c
   140002b56:	mov    ebx,eax
   140002b58:	jmp    0x140002c54
   140002b5d:	cmp    eax,0x104
   140002b62:	jne    0x140002b6e
   140002b64:	mov    ebx,0x8007007a
   140002b69:	jmp    0x140002c54
   140002b6e:	movzx  eax,WORD PTR [rsp+0x30]
   140002b73:	lea    rcx,[rsp+0x30]
   140002b78:	mov    rdi,rbp
   140002b7b:	jmp    0x140002b9e
   140002b7d:	movzx  edx,ax
   140002b80:	cmp    edx,0x2e
   140002b83:	je     0x140002b8f
   140002b85:	cmp    edx,0x5c
   140002b88:	jne    0x140002b92
   140002b8a:	mov    rdi,rbp
   140002b8d:	jmp    0x140002b92
   140002b8f:	mov    rdi,rcx
   140002b92:	call   QWORD PTR [rip+0xa4c0]        # 0x14000d058
   140002b98:	mov    rcx,rax
   140002b9b:	movzx  eax,WORD PTR [rax]
   140002b9e:	test   ax,ax
   140002ba1:	jne    0x140002b7d
   140002ba3:	test   rdi,rdi
   140002ba6:	mov    rdx,rsi
   140002ba9:	cmove  rdi,rcx
   140002bad:	lea    rcx,[rsp+0x30]
   140002bb2:	call   QWORD PTR [rip+0xa458]        # 0x14000d010
   140002bb8:	mov    ebx,eax
   140002bba:	test   eax,eax
   140002bbc:	jns    0x140002c3b
   140002bbe:	movzx  eax,WORD PTR [rip+0xb273]        # 0x14000de38
   140002bc5:	mov    rcx,rdi
   140002bc8:	movsd  xmm0,QWORD PTR [rip+0xb260]        # 0x14000de30
   140002bd0:	mov    WORD PTR [rsp+0x28],ax
   140002bd5:	lea    rax,[rsp+0x30]
   140002bda:	sub    rcx,rax
   140002bdd:	movsd  QWORD PTR [rsp+0x20],xmm0
   140002be3:	sar    rcx,1
   140002be6:	lea    rax,[rcx+0x5]
   140002bea:	cmp    rax,0x104
   140002bf0:	jbe    0x140002bf9
   140002bf2:	mov    ebx,0x80004005
   140002bf7:	jmp    0x140002c54
   140002bf9:	mov    edx,0x10e
   140002bfe:	lea    r8,[rsp+0x20]
   140002c03:	sub    rdx,rcx
   140002c06:	mov    rcx,rdi
   140002c09:	call   QWORD PTR [rip+0xa841]        # 0x14000d450
   140002c0f:	test   eax,eax
   140002c11:	je     0x140002c27
   140002c13:	cmp    eax,0xc
   140002c16:	je     0x140002c91
   140002c18:	cmp    eax,0x16
   140002c1b:	je     0x140002c86
   140002c1d:	cmp    eax,0x22
   140002c20:	je     0x140002c86
   140002c22:	cmp    eax,0x50
   140002c25:	jne    0x140002c7b
   140002c27:	mov    rdx,rsi
   140002c2a:	lea    rcx,[rsp+0x30]
   140002c2f:	call   QWORD PTR [rip+0xa3db]        # 0x14000d010
   140002c35:	mov    ebx,eax
   140002c37:	test   eax,eax
   140002c39:	js     0x140002c54
   140002c3b:	lea    rcx,[rsp+0x30]
   140002c40:	call   QWORD PTR [rip+0xa3ba]        # 0x14000d000
   140002c46:	test   rax,rax
   140002c49:	mov    QWORD PTR [r14],rax
   140002c4c:	mov    ecx,0x8007000e
   140002c51:	cmove  ebx,ecx
   140002c54:	mov    eax,ebx
   140002c56:	jmp    0x140002c5d
   140002c58:	mov    eax,0x80004003
   140002c5d:	mov    rcx,QWORD PTR [rsp+0x250]
   140002c65:	xor    rcx,rsp
   140002c68:	call   0x14000b290
   140002c6d:	add    rsp,0x260
   140002c74:	pop    r14
   140002c76:	pop    rdi
   140002c77:	pop    rsi
   140002c78:	pop    rbp
   140002c79:	pop    rbx
   140002c7a:	ret    
   140002c7b:	mov    ecx,0x80004005
   140002c80:	call   0x140004230
   140002c85:	int3   
   140002c86:	mov    ecx,0x80070057
   140002c8b:	call   0x140004230
   140002c90:	int3   
   140002c91:	mov    ecx,0x8007000e
   140002c96:	call   0x140004230
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	int3   
   140002ca1:	int3   
   140002ca2:	int3   
   140002ca3:	int3   
   140002ca4:	mov    QWORD PTR [rsp+0x10],rbx
   140002ca9:	mov    QWORD PTR [rsp+0x18],rsi
   140002cae:	push   rbp
   140002caf:	push   r14
   140002cb1:	push   r15
   140002cb3:	lea    rbp,[rsp-0x170]
   140002cbb:	sub    rsp,0x270
   140002cc2:	mov    rax,QWORD PTR [rip+0xf347]        # 0x140012010
   140002cc9:	xor    rax,rsp
   140002ccc:	mov    QWORD PTR [rbp+0x160],rax
   140002cd3:	xor    r15d,r15d
   140002cd6:	lea    r9,[rsp+0x38]
   140002cdb:	lea    r8,[rsp+0x30]
   140002ce0:	mov    QWORD PTR [rsp+0x30],r15
   140002ce5:	mov    QWORD PTR [rsp+0x38],r15
   140002cea:	call   0x140002afc
   140002cef:	mov    r14d,eax
   140002cf2:	test   eax,eax
   140002cf4:	js     0x140002e2e
   140002cfa:	mov    rbx,QWORD PTR [rsp+0x38]
   140002cff:	mov    QWORD PTR [rsp+0x40],r15
   140002d04:	mov    rax,QWORD PTR [rbx]
   140002d07:	mov    rsi,QWORD PTR [rax+0x48]
   140002d0b:	mov    rcx,rsi
   140002d0e:	call   QWORD PTR [rip+0xa794]        # 0x14000d4a8
   140002d14:	lea    rax,[rsp+0x40]
   140002d19:	xor    r9d,r9d
   140002d1c:	mov    QWORD PTR [rsp+0x28],rax
   140002d21:	xor    r8d,r8d
   140002d24:	or     edx,0xffffffff
   140002d27:	mov    QWORD PTR [rsp+0x20],r15
   140002d2c:	mov    rcx,rbx
   140002d2f:	call   rsi
   140002d31:	test   eax,eax
   140002d33:	js     0x140002e0d
   140002d39:	cmp    QWORD PTR [rsp+0x40],r15
   140002d3e:	je     0x140002e0d
   140002d44:	mov    rcx,QWORD PTR [rsp+0x30]
   140002d49:	call   QWORD PTR [rip+0xa2b9]        # 0x14000d008
   140002d4f:	mov    r8,QWORD PTR [rsp+0x30]
   140002d54:	lea    rcx,[rsp+0x50]
   140002d59:	mov    r14d,0x104
   140002d5f:	mov    r9d,eax
   140002d62:	mov    edx,r14d
   140002d65:	call   QWORD PTR [rip+0xa71d]        # 0x14000d488
   140002d6b:	test   eax,eax
   140002d6d:	je     0x140002d93
   140002d6f:	cmp    eax,0xc
   140002d72:	je     0x140002e99
   140002d78:	cmp    eax,0x16
   140002d7b:	je     0x140002e8e
   140002d81:	cmp    eax,0x22
   140002d84:	je     0x140002e8e
   140002d8a:	cmp    eax,0x50
   140002d8d:	jne    0x140002e83
   140002d93:	lea    rbx,[rsp+0x50]
   140002d98:	mov    WORD PTR [rbp+0x156],r15w
   140002da0:	lea    rsi,[rsp+0x50]
   140002da5:	cmp    WORD PTR [rsp+0x50],r15w
   140002dab:	je     0x140002ddf
   140002dad:	mov    rcx,rsi
   140002db0:	call   QWORD PTR [rip+0xa2a2]        # 0x14000d058
   140002db6:	movzx  ecx,WORD PTR [rsi]
   140002db9:	sub    cx,0x2f
   140002dbd:	cmp    cx,0x2d
   140002dc1:	ja     0x140002dd6
   140002dc3:	movabs rdx,0x200000000801
   140002dcd:	bt     rdx,rcx
   140002dd1:	jae    0x140002dd6
   140002dd3:	mov    rbx,rax
   140002dd6:	mov    rsi,rax
   140002dd9:	cmp    WORD PTR [rax],r15w
   140002ddd:	jne    0x140002dad
   140002ddf:	lea    rax,[rsp+0x50]
   140002de4:	sub    rbx,rax
   140002de7:	sar    rbx,1
   140002dea:	cmp    ebx,r14d
   140002ded:	jae    0x140002e06
   140002def:	mov    eax,ebx
   140002df1:	add    rax,rax
   140002df4:	cmp    rax,0x208
   140002dfa:	jae    0x140002ea4
   140002e00:	mov    WORD PTR [rsp+rax*1+0x50],r15w
   140002e06:	lea    r8,[rsp+0x50]
   140002e0b:	jmp    0x140002e10
   140002e0d:	xor    r8d,r8d
   140002e10:	mov    rdx,QWORD PTR [rsp+0x30]
   140002e15:	mov    rcx,QWORD PTR [rsp+0x38]
   140002e1a:	call   QWORD PTR [rip+0xa200]        # 0x14000d020
   140002e20:	mov    rcx,QWORD PTR [rsp+0x40]
   140002e25:	mov    r14d,eax
   140002e28:	call   QWORD PTR [rip+0xa1ea]        # 0x14000d018
   140002e2e:	mov    rbx,QWORD PTR [rsp+0x38]
   140002e33:	test   rbx,rbx
   140002e36:	je     0x140002e4d
   140002e38:	mov    rax,QWORD PTR [rbx]
   140002e3b:	mov    rsi,QWORD PTR [rax+0x10]
   140002e3f:	mov    rcx,rsi
   140002e42:	call   QWORD PTR [rip+0xa660]        # 0x14000d4a8
   140002e48:	mov    rcx,rbx
   140002e4b:	call   rsi
   140002e4d:	mov    rcx,QWORD PTR [rsp+0x30]
   140002e52:	call   QWORD PTR [rip+0xa1c0]        # 0x14000d018
   140002e58:	mov    eax,r14d
   140002e5b:	mov    rcx,QWORD PTR [rbp+0x160]
   140002e62:	xor    rcx,rsp
   140002e65:	call   0x14000b290
   140002e6a:	lea    r11,[rsp+0x270]
   140002e72:	mov    rbx,QWORD PTR [r11+0x28]
   140002e76:	mov    rsi,QWORD PTR [r11+0x30]
   140002e7a:	mov    rsp,r11
   140002e7d:	pop    r15
   140002e7f:	pop    r14
   140002e81:	pop    rbp
   140002e82:	ret    
   140002e83:	mov    ecx,0x80004005
   140002e88:	call   0x140004230
   140002e8d:	int3   
   140002e8e:	mov    ecx,0x80070057
   140002e93:	call   0x140004230
   140002e98:	int3   
   140002e99:	mov    ecx,0x8007000e
   140002e9e:	call   0x140004230
   140002ea3:	int3   
   140002ea4:	call   0x14000b5d8
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002eb5:	mov    QWORD PTR [rsp+0x10],rbp
   140002eba:	mov    QWORD PTR [rsp+0x18],rsi
   140002ebf:	push   rdi
   140002ec0:	sub    rsp,0x20
   140002ec4:	mov    rsi,rcx
   140002ec7:	mov    rdi,rdx
   140002eca:	movzx  ecx,WORD PTR [rcx]
   140002ecd:	call   QWORD PTR [rip+0xa16d]        # 0x14000d040
   140002ed3:	movzx  ecx,WORD PTR [rdi]
   140002ed6:	mov    rbx,rax
   140002ed9:	call   QWORD PTR [rip+0xa161]        # 0x14000d040
   140002edf:	movabs rbp,0x100000201
   140002ee9:	mov    r8,rax
   140002eec:	test   bx,bx
   140002eef:	je     0x140002f48
   140002ef1:	cmp    bx,r8w
   140002ef5:	jne    0x140002f39
   140002ef7:	cmp    bx,0x20
   140002efb:	je     0x140002f3f
   140002efd:	cmp    bx,0x9
   140002f01:	je     0x140002f39
   140002f03:	mov    rcx,rsi
   140002f06:	call   QWORD PTR [rip+0xa14c]        # 0x14000d058
   140002f0c:	mov    rcx,rdi
   140002f0f:	mov    rsi,rax
   140002f12:	call   QWORD PTR [rip+0xa140]        # 0x14000d058
   140002f18:	movzx  ecx,WORD PTR [rsi]
   140002f1b:	mov    rdi,rax
   140002f1e:	call   QWORD PTR [rip+0xa11c]        # 0x14000d040
   140002f24:	movzx  ecx,WORD PTR [rdi]
   140002f27:	movzx  ebx,ax
   140002f2a:	call   QWORD PTR [rip+0xa110]        # 0x14000d040
   140002f30:	movzx  r8d,ax
   140002f34:	test   bx,bx
   140002f37:	jne    0x140002ef1
   140002f39:	cmp    bx,0x20
   140002f3d:	ja     0x140002f5d
   140002f3f:	movzx  eax,bx
   140002f42:	bt     rbp,rax
   140002f46:	jae    0x140002f5d
   140002f48:	cmp    r8w,0x20
   140002f4d:	ja     0x140002f5d
   140002f4f:	movzx  eax,r8w
   140002f53:	bt     rbp,rax
   140002f57:	jae    0x140002f5d
   140002f59:	xor    eax,eax
   140002f5b:	jmp    0x140002f68
   140002f5d:	cmp    bx,r8w
   140002f61:	sbb    eax,eax
   140002f63:	and    eax,0xfffffffe
   140002f66:	inc    eax
   140002f68:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f6d:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f72:	mov    rsi,QWORD PTR [rsp+0x40]
   140002f77:	add    rsp,0x20
   140002f7b:	pop    rdi
   140002f7c:	ret    
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	int3   
   140002f81:	int3   
   140002f82:	int3   
   140002f83:	int3   
   140002f84:	mov    QWORD PTR [rsp+0x8],rbx
   140002f89:	mov    QWORD PTR [rsp+0x10],rsi
   140002f8e:	mov    QWORD PTR [rsp+0x18],rdi
   140002f93:	push   r14
   140002f95:	sub    rsp,0x20
   140002f99:	cmp    DWORD PTR [rip+0xfcc0],0x0        # 0x140012c60
   140002fa0:	je     0x140003001
   140002fa2:	mov    rdi,QWORD PTR [rip+0xfcc7]        # 0x140012c70
   140002fa9:	mov    rax,QWORD PTR [rip+0xfcc8]        # 0x140012c78
   140002fb0:	jmp    0x140002fe8
   140002fb2:	mov    rsi,QWORD PTR [rdi]
   140002fb5:	test   rsi,rsi
   140002fb8:	je     0x140002fe4
   140002fba:	mov    r14,QWORD PTR [rsi+0x20]
   140002fbe:	test   r14,r14
   140002fc1:	je     0x140002fd8
   140002fc3:	mov    rax,QWORD PTR [r14]
   140002fc6:	mov    rbx,QWORD PTR [rax+0x10]
   140002fca:	mov    rcx,rbx
   140002fcd:	call   QWORD PTR [rip+0xa4d5]        # 0x14000d4a8
   140002fd3:	mov    rcx,r14
   140002fd6:	call   rbx
   140002fd8:	and    QWORD PTR [rsi+0x20],0x0
   140002fdd:	mov    rax,QWORD PTR [rip+0xfc94]        # 0x140012c78
   140002fe4:	add    rdi,0x8
   140002fe8:	cmp    rdi,rax
   140002feb:	jb     0x140002fb2
   140002fed:	lea    rcx,[rip+0xfc8c]        # 0x140012c80
   140002ff4:	call   QWORD PTR [rip+0xa2de]        # 0x14000d2d8
   140002ffa:	and    DWORD PTR [rip+0xfc5f],0x0        # 0x140012c60
   140003001:	mov    rbx,QWORD PTR [rsp+0x30]
   140003006:	mov    rsi,QWORD PTR [rsp+0x38]
   14000300b:	mov    rdi,QWORD PTR [rsp+0x40]
   140003010:	add    rsp,0x20
   140003014:	pop    r14
   140003016:	ret    
   140003017:	int3   
   140003018:	int3   
   140003019:	int3   
   14000301a:	int3   
   14000301b:	int3   
   14000301c:	int3   
   14000301d:	int3   
   14000301e:	int3   
   14000301f:	int3   
   140003020:	mov    QWORD PTR [rsp+0x8],rbx
   140003025:	mov    QWORD PTR [rsp+0x10],rsi
   14000302a:	mov    QWORD PTR [rsp+0x18],rdi
   14000302f:	push   r14
   140003031:	sub    rsp,0x20
   140003035:	lea    rsi,[rcx+0x8]
   140003039:	mov    rdi,rcx
   14000303c:	cmp    DWORD PTR [rsi],0x0
   14000303f:	je     0x1400030b2
   140003041:	cmp    QWORD PTR [rcx+0x10],0x0
   140003046:	je     0x140003087
   140003048:	test   rsi,rsi
   14000304b:	je     0x1400030c8
   14000304d:	mov    r14,QWORD PTR [rsi+0x8]
   140003051:	test   r14,r14
   140003054:	je     0x14000307d
   140003056:	mov    rbx,QWORD PTR [r14]
   140003059:	mov    rcx,rbx
   14000305c:	call   QWORD PTR [rip+0xa446]        # 0x14000d4a8
   140003062:	mov    rcx,QWORD PTR [r14+0x8]
   140003066:	call   rbx
   140003068:	mov    rbx,QWORD PTR [r14+0x10]
   14000306c:	mov    rcx,r14
   14000306f:	call   QWORD PTR [rip+0xa3f3]        # 0x14000d468
   140003075:	mov    r14,rbx
   140003078:	test   rbx,rbx
   14000307b:	jne    0x140003056
   14000307d:	and    QWORD PTR [rsi+0x8],0x0
   140003082:	and    QWORD PTR [rdi+0x10],0x0
   140003087:	mov    r14,QWORD PTR [rdi+0x40]
   14000308b:	test   r14,r14
   14000308e:	je     0x1400030a5
   140003090:	mov    rax,QWORD PTR [r14]
   140003093:	mov    rbx,QWORD PTR [rax+0x10]
   140003097:	mov    rcx,rbx
   14000309a:	call   QWORD PTR [rip+0xa408]        # 0x14000d4a8
   1400030a0:	mov    rcx,r14
   1400030a3:	call   rbx
   1400030a5:	lea    rcx,[rdi+0x18]
   1400030a9:	call   QWORD PTR [rip+0xa229]        # 0x14000d2d8
   1400030af:	and    DWORD PTR [rsi],0x0
   1400030b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400030b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400030bc:	mov    rdi,QWORD PTR [rsp+0x40]
   1400030c1:	add    rsp,0x20
   1400030c5:	pop    r14
   1400030c7:	ret    
   1400030c8:	mov    ecx,0xc0000005
   1400030cd:	call   0x1400037d4
   1400030d2:	int3   
   1400030d3:	int3   
   1400030d4:	int3   
   1400030d5:	int3   
   1400030d6:	int3   
   1400030d7:	int3   
   1400030d8:	int3   
   1400030d9:	int3   
   1400030da:	int3   
   1400030db:	int3   
   1400030dc:	int3   
   1400030dd:	int3   
   1400030de:	int3   
   1400030df:	int3   
   1400030e0:	mov    eax,DWORD PTR [rcx+0xc]
   1400030e3:	ret    
   1400030e4:	int3   
   1400030e5:	int3   
   1400030e6:	int3   
   1400030e7:	int3   
   1400030e8:	int3   
   1400030e9:	int3   
   1400030ea:	int3   
   1400030eb:	int3   
   1400030ec:	int3   
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	test   r8,r8
   1400030f3:	je     0x1400030f9
   1400030f5:	and    QWORD PTR [r8],0x0
   1400030f9:	mov    eax,0x80004001
   1400030fe:	ret    
   1400030ff:	int3   
   140003100:	int3   
   140003101:	int3   
   140003102:	int3   
   140003103:	int3   
   140003104:	int3   
   140003105:	int3   
   140003106:	int3   
   140003107:	int3   
   140003108:	int3   
   140003109:	int3   
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	int3   
   14000310d:	int3   
   14000310e:	int3   
   14000310f:	int3   
   140003110:	mov    eax,0x1
   140003115:	ret    
   140003116:	int3   
   140003117:	int3   
   140003118:	int3   
   140003119:	int3   
   14000311a:	int3   
   14000311b:	int3   
   14000311c:	int3   
   14000311d:	int3   
   14000311e:	int3   
   14000311f:	int3   
   140003120:	xor    eax,eax
   140003122:	ret    
   140003123:	int3   
   140003124:	int3   
   140003125:	int3   
   140003126:	int3   
   140003127:	int3   
   140003128:	int3   
   140003129:	int3   
   14000312a:	int3   
   14000312b:	int3   
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	mov    QWORD PTR [rsp+0x8],rbx
   140003135:	push   rdi
   140003136:	sub    rsp,0x20
   14000313a:	mov    ebx,edx
   14000313c:	mov    rdi,rcx
   14000313f:	call   0x140003314
   140003144:	test   bl,0x1
   140003147:	je     0x140003152
   140003149:	mov    rcx,rdi
   14000314c:	call   QWORD PTR [rip+0xa316]        # 0x14000d468
   140003152:	mov    rax,rdi
   140003155:	mov    rbx,QWORD PTR [rsp+0x30]
   14000315a:	add    rsp,0x20
   14000315e:	pop    rdi
   14000315f:	ret    
   140003160:	int3   
   140003161:	int3   
   140003162:	int3   
   140003163:	int3   
   140003164:	int3   
   140003165:	int3   
   140003166:	int3   
   140003167:	int3   
   140003168:	rex push rbx
   14000316a:	sub    rsp,0x20
   14000316e:	mov    rbx,rcx
   140003171:	mov    rcx,QWORD PTR [rcx]
   140003174:	test   rcx,rcx
   140003177:	je     0x140003183
   140003179:	call   QWORD PTR [rip+0xa2f9]        # 0x14000d478
   14000317f:	and    QWORD PTR [rbx],0x0
   140003183:	mov    rcx,QWORD PTR [rbx+0x8]
   140003187:	test   rcx,rcx
   14000318a:	je     0x140003197
   14000318c:	call   QWORD PTR [rip+0xa2e6]        # 0x14000d478
   140003192:	and    QWORD PTR [rbx+0x8],0x0
   140003197:	and    DWORD PTR [rbx+0x10],0x0
   14000319b:	add    rsp,0x20
   14000319f:	pop    rbx
   1400031a0:	ret    
   1400031a1:	int3   
   1400031a2:	int3   
   1400031a3:	int3   
   1400031a4:	int3   
   1400031a5:	int3   
   1400031a6:	int3   
   1400031a7:	int3   
   1400031a8:	mov    QWORD PTR [rsp+0x8],rcx
   1400031ad:	push   rbx
   1400031ae:	sub    rsp,0x30
   1400031b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400031bb:	mov    rbx,rcx
   1400031be:	call   0x14000321c
   1400031c3:	nop
   1400031c4:	mov    rcx,QWORD PTR [rbx]
   1400031c7:	test   rcx,rcx
   1400031ca:	je     0x1400031d6
   1400031cc:	call   QWORD PTR [rip+0xa2a6]        # 0x14000d478
   1400031d2:	and    QWORD PTR [rbx],0x0
   1400031d6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400031da:	test   rcx,rcx
   1400031dd:	je     0x1400031ea
   1400031df:	call   QWORD PTR [rip+0xa293]        # 0x14000d478
   1400031e5:	and    QWORD PTR [rbx+0x8],0x0
   1400031ea:	and    DWORD PTR [rbx+0x10],0x0
   1400031ee:	add    rsp,0x30
   1400031f2:	pop    rbx
   1400031f3:	ret    
   1400031f4:	int3   
   1400031f5:	int3   
   1400031f6:	int3   
   1400031f7:	int3   
   1400031f8:	int3   
   1400031f9:	int3   
   1400031fa:	int3   
   1400031fb:	int3   
   1400031fc:	sub    rsp,0x28
   140003200:	cmp    BYTE PTR [rcx+0x28],0x0
   140003204:	je     0x140003210
   140003206:	mov    BYTE PTR [rcx+0x28],0x0
   14000320a:	call   QWORD PTR [rip+0xa0c8]        # 0x14000d2d8
   140003210:	add    rsp,0x28
   140003214:	ret    
   140003215:	int3   
   140003216:	int3   
   140003217:	int3   
   140003218:	int3   
   140003219:	int3   
   14000321a:	int3   
   14000321b:	int3   
   14000321c:	mov    QWORD PTR [rsp+0x8],rbx
   140003221:	mov    QWORD PTR [rsp+0x10],rsi
   140003226:	push   rdi
   140003227:	sub    rsp,0x20
   14000322b:	xor    esi,esi
   14000322d:	mov    rbx,rcx
   140003230:	cmp    DWORD PTR [rcx+0x10],esi
   140003233:	jle    0x14000326c
   140003235:	xor    edi,edi
   140003237:	test   rdi,rdi
   14000323a:	js     0x1400032b3
   14000323c:	cmp    esi,DWORD PTR [rbx+0x10]
   14000323f:	jge    0x1400032b3
   140003241:	mov    rcx,QWORD PTR [rbx]
   140003244:	mov    rcx,QWORD PTR [rdi+rcx*1]
   140003248:	call   QWORD PTR [rip+0xa242]        # 0x14000d490
   14000324e:	cmp    esi,DWORD PTR [rbx+0x10]
   140003251:	jge    0x1400032a8
   140003253:	mov    rcx,QWORD PTR [rbx+0x8]
   140003257:	mov    rcx,QWORD PTR [rcx+rdi*1]
   14000325b:	call   QWORD PTR [rip+0xa22f]        # 0x14000d490
   140003261:	inc    esi
   140003263:	add    rdi,0x8
   140003267:	cmp    esi,DWORD PTR [rbx+0x10]
   14000326a:	jl     0x140003237
   14000326c:	mov    rcx,QWORD PTR [rbx]
   14000326f:	test   rcx,rcx
   140003272:	je     0x14000327e
   140003274:	call   QWORD PTR [rip+0xa1fe]        # 0x14000d478
   14000327a:	and    QWORD PTR [rbx],0x0
   14000327e:	mov    rcx,QWORD PTR [rbx+0x8]
   140003282:	test   rcx,rcx
   140003285:	je     0x140003292
   140003287:	call   QWORD PTR [rip+0xa1eb]        # 0x14000d478
   14000328d:	and    QWORD PTR [rbx+0x8],0x0
   140003292:	and    DWORD PTR [rbx+0x10],0x0
   140003296:	mov    rbx,QWORD PTR [rsp+0x30]
   14000329b:	xor    eax,eax
   14000329d:	mov    rsi,QWORD PTR [rsp+0x38]
   1400032a2:	add    rsp,0x20
   1400032a6:	pop    rdi
   1400032a7:	ret    
   1400032a8:	mov    ecx,0xc000008c
   1400032ad:	call   0x1400037d4
   1400032b2:	int3   
   1400032b3:	mov    ecx,0xc000008c
   1400032b8:	call   0x1400037d4
   1400032bd:	int3   
   1400032be:	int3   
   1400032bf:	int3   
   1400032c0:	int3   
   1400032c1:	int3   
   1400032c2:	int3   
   1400032c3:	int3   
   1400032c4:	int3   
   1400032c5:	int3   
   1400032c6:	int3   
   1400032c7:	int3   
   1400032c8:	int3   
   1400032c9:	int3   
   1400032ca:	int3   
   1400032cb:	int3   
   1400032cc:	int3   
   1400032cd:	int3   
   1400032ce:	int3   
   1400032cf:	int3   
   1400032d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032d5:	push   rdi
   1400032d6:	sub    rsp,0x20
   1400032da:	lea    rdi,[rcx+0x20]
   1400032de:	mov    rbx,rcx
   1400032e1:	mov    rcx,rdi
   1400032e4:	call   QWORD PTR [rip+0x9fc6]        # 0x14000d2b0
   1400032ea:	lea    rcx,[rbx+0x8]
   1400032ee:	call   0x14000321c
   1400032f3:	mov    rcx,rdi
   1400032f6:	mov    ebx,eax
   1400032f8:	call   QWORD PTR [rip+0x9fca]        # 0x14000d2c8
   1400032fe:	mov    eax,ebx
   140003300:	mov    rbx,QWORD PTR [rsp+0x30]
   140003305:	add    rsp,0x20
   140003309:	pop    rdi
   14000330a:	ret    
   14000330b:	int3   
   14000330c:	int3   
   14000330d:	int3   
   14000330e:	int3   
   14000330f:	int3   
   140003310:	int3   
   140003311:	int3   
   140003312:	int3   
   140003313:	int3   
   140003314:	mov    QWORD PTR [rsp+0x8],rcx
   140003319:	push   rdi
   14000331a:	sub    rsp,0x30
   14000331e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003327:	mov    QWORD PTR [rsp+0x48],rbx
   14000332c:	mov    rbx,rcx
   14000332f:	lea    rax,[rip+0xa62a]        # 0x14000d960
   140003336:	mov    QWORD PTR [rcx],rax
   140003339:	lea    rdi,[rcx+0x20]
   14000333d:	mov    rcx,rdi
   140003340:	call   QWORD PTR [rip+0x9f6a]        # 0x14000d2b0
   140003346:	add    rbx,0x8
   14000334a:	mov    rcx,rbx
   14000334d:	call   0x14000321c
   140003352:	mov    rcx,rdi
   140003355:	call   QWORD PTR [rip+0x9f6d]        # 0x14000d2c8
   14000335b:	nop
   14000335c:	cmp    BYTE PTR [rdi+0x28],0x0
   140003360:	je     0x140003370
   140003362:	mov    BYTE PTR [rdi+0x28],0x0
   140003366:	mov    rcx,rdi
   140003369:	call   QWORD PTR [rip+0x9f69]        # 0x14000d2d8
   14000336f:	nop
   140003370:	mov    QWORD PTR [rsp+0x40],rbx
   140003375:	mov    rcx,rbx
   140003378:	call   0x14000321c
   14000337d:	nop
   14000337e:	mov    rcx,QWORD PTR [rbx]
   140003381:	test   rcx,rcx
   140003384:	je     0x140003390
   140003386:	call   QWORD PTR [rip+0xa0ec]        # 0x14000d478
   14000338c:	and    QWORD PTR [rbx],0x0
   140003390:	mov    rcx,QWORD PTR [rbx+0x8]
   140003394:	test   rcx,rcx
   140003397:	je     0x1400033a4
   140003399:	call   QWORD PTR [rip+0xa0d9]        # 0x14000d478
   14000339f:	and    QWORD PTR [rbx+0x8],0x0
   1400033a4:	and    DWORD PTR [rbx+0x10],0x0
   1400033a8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400033ad:	add    rsp,0x30
   1400033b1:	pop    rdi
   1400033b2:	ret    
   1400033b3:	int3   
   1400033b4:	int3   
   1400033b5:	int3   
   1400033b6:	int3   
   1400033b7:	int3   
   1400033b8:	int3   
   1400033b9:	int3   
   1400033ba:	int3   
   1400033bb:	int3   
   1400033bc:	sub    rsp,0x38
   1400033c0:	call   QWORD PTR [rip+0x9f1a]        # 0x14000d2e0
   1400033c6:	xor    eax,eax
   1400033c8:	mov    DWORD PTR [rsp+0x20],eax
   1400033cc:	jmp    0x1400033d7
   1400033ce:	mov    eax,0x8007000e
   1400033d3:	mov    DWORD PTR [rsp+0x20],eax
   1400033d7:	add    rsp,0x38
   1400033db:	ret    
   1400033dc:	int3   
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	int3   
   1400033e1:	int3   
   1400033e2:	int3   
   1400033e3:	int3   
   1400033e4:	rex push rbx
   1400033e6:	sub    rsp,0x20
   1400033ea:	mov    rbx,rcx
   1400033ed:	mov    rcx,QWORD PTR [rcx]
   1400033f0:	call   QWORD PTR [rip+0xa09a]        # 0x14000d490
   1400033f6:	and    QWORD PTR [rbx],0x0
   1400033fa:	add    rsp,0x20
   1400033fe:	pop    rbx
   1400033ff:	ret    
   140003400:	int3   
   140003401:	int3   
   140003402:	int3   
   140003403:	int3   
   140003404:	int3   
   140003405:	int3   
   140003406:	int3   
   140003407:	int3   
   140003408:	mov    rax,rsp
   14000340b:	mov    QWORD PTR [rax+0x18],r8
   14000340f:	mov    QWORD PTR [rax+0x10],rdx
   140003413:	mov    QWORD PTR [rax+0x8],rcx
   140003417:	push   rbx
   140003418:	push   rsi
   140003419:	push   rdi
   14000341a:	push   r12
   14000341c:	push   r13
   14000341e:	push   r14
   140003420:	push   r15
   140003422:	sub    rsp,0x60
   140003426:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000342e:	mov    r13,r8
   140003431:	mov    r12,rdx
   140003434:	mov    r15,rcx
   140003437:	xor    esi,esi
   140003439:	test   rdx,rdx
   14000343c:	je     0x14000368a
   140003442:	test   r8,r8
   140003445:	je     0x14000368a
   14000344b:	mov    r14d,esi
   14000344e:	or     rbx,0xffffffffffffffff
   140003452:	mov    rax,rbx
   140003455:	inc    rax
   140003458:	cmp    WORD PTR [rdx+rax*2],si
   14000345c:	jne    0x140003455
   14000345e:	lea    rcx,[rax*2+0x2]
   140003466:	mov    QWORD PTR [rsp+0x48],rcx
   14000346b:	mov    QWORD PTR [rsp+0x28],rsi
   140003470:	mov    eax,0x2
   140003475:	mul    rcx
   140003478:	cmovo  rax,rbx
   14000347c:	mov    rcx,rax
   14000347f:	call   0x14000ac70
   140003484:	mov    QWORD PTR [rsp+0x20],rax
   140003489:	mov    QWORD PTR [rsp+0x28],rax
   14000348e:	jmp    0x1400034bb
   140003490:	xor    esi,esi
   140003492:	or     rbx,0xffffffffffffffff
   140003496:	mov    r15,QWORD PTR [rsp+0xa0]
   14000349e:	mov    r13,QWORD PTR [rsp+0xb0]
   1400034a6:	mov    r12,QWORD PTR [rsp+0xa8]
   1400034ae:	mov    r14d,esi
   1400034b1:	mov    rax,QWORD PTR [rsp+0x28]
   1400034b6:	mov    QWORD PTR [rsp+0x20],rax
   1400034bb:	mov    rdi,rax
   1400034be:	mov    QWORD PTR [rsp+0x40],rax
   1400034c3:	mov    rax,rbx
   1400034c6:	inc    rax
   1400034c9:	cmp    WORD PTR [r13+rax*2+0x0],si
   1400034cf:	jne    0x1400034c6
   1400034d1:	inc    eax
   1400034d3:	movsxd rcx,eax
   1400034d6:	add    rcx,rcx
   1400034d9:	mov    QWORD PTR [rsp+0x38],rcx
   1400034de:	mov    QWORD PTR [rsp+0x30],rsi
   1400034e3:	mov    eax,0x2
   1400034e8:	mul    rcx
   1400034eb:	cmovo  rax,rbx
   1400034ef:	mov    rcx,rax
   1400034f2:	call   0x14000ac70
   1400034f7:	mov    rbx,rax
   1400034fa:	mov    QWORD PTR [rsp+0x30],rax
   1400034ff:	mov    rax,QWORD PTR [rsp+0x20]
   140003504:	jmp    0x140003537
   140003506:	xor    esi,esi
   140003508:	mov    r15,QWORD PTR [rsp+0xa0]
   140003510:	mov    r13,QWORD PTR [rsp+0xb0]
   140003518:	mov    r12,QWORD PTR [rsp+0xa8]
   140003520:	mov    r14d,esi
   140003523:	mov    rax,QWORD PTR [rsp+0x28]
   140003528:	mov    QWORD PTR [rsp+0x20],rax
   14000352d:	mov    rdi,QWORD PTR [rsp+0x40]
   140003532:	mov    rbx,QWORD PTR [rsp+0x30]
   140003537:	mov    QWORD PTR [rsp+0xa8],rbx
   14000353f:	test   rax,rax
   140003542:	je     0x140003666
   140003548:	test   rbx,rbx
   14000354b:	je     0x140003666
   140003551:	mov    rdx,QWORD PTR [rsp+0x48]
   140003556:	mov    r9,rdx
   140003559:	mov    r8,r12
   14000355c:	mov    rcx,rax
   14000355f:	call   QWORD PTR [rip+0x9f0b]        # 0x14000d470
   140003565:	test   eax,eax
   140003567:	je     0x14000359e
   140003569:	cmp    eax,0xc
   14000356c:	je     0x140003593
   14000356e:	cmp    eax,0x16
   140003571:	je     0x140003588
   140003573:	cmp    eax,0x22
   140003576:	je     0x140003588
   140003578:	cmp    eax,0x50
   14000357b:	je     0x14000359e
   14000357d:	mov    ecx,0x80004005
   140003582:	call   0x140004230
   140003587:	int3   
   140003588:	mov    ecx,0x80070057
   14000358d:	call   0x140004230
   140003592:	int3   
   140003593:	mov    ecx,0x8007000e
   140003598:	call   0x140004230
   14000359d:	int3   
   14000359e:	mov    r9,QWORD PTR [rsp+0x38]
   1400035a3:	mov    r8,r13
   1400035a6:	mov    rdx,r9
   1400035a9:	mov    rcx,rbx
   1400035ac:	call   QWORD PTR [rip+0x9ebe]        # 0x14000d470
   1400035b2:	test   eax,eax
   1400035b4:	je     0x1400035eb
   1400035b6:	cmp    eax,0xc
   1400035b9:	je     0x1400035e0
   1400035bb:	cmp    eax,0x16
   1400035be:	je     0x1400035d5
   1400035c0:	cmp    eax,0x22
   1400035c3:	je     0x1400035d5
   1400035c5:	cmp    eax,0x50
   1400035c8:	je     0x1400035eb
   1400035ca:	mov    ecx,0x80004005
   1400035cf:	call   0x140004230
   1400035d4:	int3   
   1400035d5:	mov    ecx,0x80070057
   1400035da:	call   0x140004230
   1400035df:	int3   
   1400035e0:	mov    ecx,0x8007000e
   1400035e5:	call   0x140004230
   1400035ea:	int3   
   1400035eb:	mov    eax,DWORD PTR [r15+0x10]
   1400035ef:	inc    eax
   1400035f1:	movsxd rdx,eax
   1400035f4:	mov    r12d,0x8
   1400035fa:	mov    r8d,r12d
   1400035fd:	mov    rcx,QWORD PTR [r15]
   140003600:	call   QWORD PTR [rip+0xe9fa]        # 0x140012000
   140003606:	test   rax,rax
   140003609:	je     0x140003666
   14000360b:	mov    QWORD PTR [r15],rax
   14000360e:	mov    eax,DWORD PTR [r15+0x10]
   140003612:	inc    eax
   140003614:	movsxd rdx,eax
   140003617:	mov    r8d,r12d
   14000361a:	mov    rcx,QWORD PTR [r15+0x8]
   14000361e:	call   QWORD PTR [rip+0xe9dc]        # 0x140012000
   140003624:	test   rax,rax
   140003627:	je     0x140003666
   140003629:	mov    QWORD PTR [r15+0x8],rax
   14000362d:	movsxd rdx,DWORD PTR [r15+0x10]
   140003631:	mov    rax,QWORD PTR [r15]
   140003634:	lea    rcx,[rax+rdx*8]
   140003638:	test   rcx,rcx
   14000363b:	je     0x140003645
   14000363d:	mov    rax,QWORD PTR [rsp+0x20]
   140003642:	mov    QWORD PTR [rcx],rax
   140003645:	mov    rax,QWORD PTR [r15+0x8]
   140003649:	lea    rcx,[rax+rdx*8]
   14000364d:	test   rcx,rcx
   140003650:	je     0x140003655
   140003652:	mov    QWORD PTR [rcx],rbx
   140003655:	inc    DWORD PTR [r15+0x10]
   140003659:	mov    rdi,rsi
   14000365c:	mov    QWORD PTR [rsp+0x40],rsi
   140003661:	mov    rbx,rsi
   140003664:	jmp    0x14000366c
   140003666:	mov    r14d,0x8007000e
   14000366c:	test   r14d,r14d
   14000366f:	setns  sil
   140003673:	mov    rcx,rbx
   140003676:	call   QWORD PTR [rip+0x9e14]        # 0x14000d490
   14000367c:	nop
   14000367d:	mov    rcx,rdi
   140003680:	call   QWORD PTR [rip+0x9e0a]        # 0x14000d490
   140003686:	mov    eax,esi
   140003688:	jmp    0x14000368c
   14000368a:	xor    eax,eax
   14000368c:	add    rsp,0x60
   140003690:	pop    r15
   140003692:	pop    r14
   140003694:	pop    r13
   140003696:	pop    r12
   140003698:	pop    rdi
   140003699:	pop    rsi
   14000369a:	pop    rbx
   14000369b:	ret    
   14000369c:	int3   
   14000369d:	int3   
   14000369e:	int3   
   14000369f:	int3   
   1400036a0:	int3   
   1400036a1:	int3   
   1400036a2:	int3   
   1400036a3:	int3   
   1400036a4:	int3   
   1400036a5:	int3   
   1400036a6:	int3   
   1400036a7:	int3   
   1400036a8:	int3   
   1400036a9:	int3   
   1400036aa:	int3   
   1400036ab:	int3   
   1400036ac:	int3   
   1400036ad:	int3   
   1400036ae:	int3   
   1400036af:	int3   
   1400036b0:	mov    rax,rsp
   1400036b3:	push   rdi
   1400036b4:	sub    rsp,0x30
   1400036b8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400036c0:	mov    QWORD PTR [rax+0x8],rbx
   1400036c4:	mov    QWORD PTR [rax+0x18],rbp
   1400036c8:	mov    QWORD PTR [rax+0x20],rsi
   1400036cc:	mov    rbx,r8
   1400036cf:	mov    rsi,rdx
   1400036d2:	mov    rbp,rcx
   1400036d5:	test   rdx,rdx
   1400036d8:	je     0x140003717
   1400036da:	test   rbx,rbx
   1400036dd:	je     0x140003717
   1400036df:	add    rcx,0x20
   1400036e3:	call   QWORD PTR [rip+0x9bc7]        # 0x14000d2b0
   1400036e9:	and    QWORD PTR [rsp+0x48],0x0
   1400036ef:	lea    rcx,[rbp+0x8]
   1400036f3:	mov    r8,rbx
   1400036f6:	mov    rdx,rsi
   1400036f9:	call   0x140003408
   1400036fe:	mov    ebx,eax
   140003700:	lea    rcx,[rbp+0x20]
   140003704:	call   QWORD PTR [rip+0x9bbe]        # 0x14000d2c8
   14000370a:	neg    ebx
   14000370c:	sbb    eax,eax
   14000370e:	not    eax
   140003710:	and    eax,0x8007000e
   140003715:	jmp    0x14000371c
   140003717:	mov    eax,0x80070057
   14000371c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003721:	mov    rbp,QWORD PTR [rsp+0x50]
   140003726:	mov    rsi,QWORD PTR [rsp+0x58]
   14000372b:	add    rsp,0x30
   14000372f:	pop    rdi
   140003730:	ret    
   140003731:	int3   
   140003732:	int3   
   140003733:	int3   
   140003734:	int3   
   140003735:	int3   
   140003736:	int3   
   140003737:	int3   
   140003738:	mov    rcx,QWORD PTR [rcx]
   14000373b:	rex.W jmp QWORD PTR [rip+0x9d36]        # 0x14000d478
   140003742:	int3   
   140003743:	int3   
   140003744:	int3   
   140003745:	int3   
   140003746:	int3   
   140003747:	int3   
   140003748:	sub    rsp,0x28
   14000374c:	lea    rax,[rcx+0x8]
   140003750:	cmp    QWORD PTR [rcx],rax
   140003753:	je     0x14000375a
   140003755:	call   0x140003738
   14000375a:	add    rsp,0x28
   14000375e:	ret    
   14000375f:	int3   
   140003760:	int3   
   140003761:	int3   
   140003762:	int3   
   140003763:	int3   
   140003764:	int3   
   140003765:	int3   
   140003766:	int3   
   140003767:	int3   
   140003768:	rex push rbx
   14000376a:	sub    rsp,0x20
   14000376e:	mov    rbx,rcx
   140003771:	mov    rcx,rdx
   140003774:	call   QWORD PTR [rip+0x9d06]        # 0x14000d480
   14000377a:	test   rax,rax
   14000377d:	je     0x140003788
   14000377f:	mov    QWORD PTR [rbx],rax
   140003782:	add    rsp,0x20
   140003786:	pop    rbx
   140003787:	ret    
   140003788:	mov    ecx,0x8007000e
   14000378d:	call   0x140004230
   140003792:	int3   
   140003793:	int3   
   140003794:	int3   
   140003795:	int3   
   140003796:	int3   
   140003797:	int3   
   140003798:	int3   
   140003799:	int3   
   14000379a:	int3   
   14000379b:	int3   
   14000379c:	sub    rsp,0x28
   1400037a0:	call   QWORD PTR [rip+0x9952]        # 0x14000d0f8
   1400037a6:	mov    ecx,eax
   1400037a8:	movzx  eax,ax
   1400037ab:	or     eax,0x80070000
   1400037b0:	test   ecx,ecx
   1400037b2:	cmovle eax,ecx
   1400037b5:	add    rsp,0x28
   1400037b9:	ret    
   1400037ba:	int3   
   1400037bb:	int3   
   1400037bc:	int3   
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400037c4:	rex.W jmp QWORD PTR [rip+0x98fd]        # 0x14000d0c8
   1400037cb:	int3   
   1400037cc:	int3   
   1400037cd:	int3   
   1400037ce:	int3   
   1400037cf:	int3   
   1400037d0:	int3   
   1400037d1:	int3   
   1400037d2:	int3   
   1400037d3:	int3   
   1400037d4:	xor    r9d,r9d
   1400037d7:	xor    r8d,r8d
   1400037da:	lea    edx,[r9+0x1]
   1400037de:	rex.W jmp QWORD PTR [rip+0x990b]        # 0x14000d0f0
   1400037e5:	int3   
   1400037e6:	int3   
   1400037e7:	int3   
   1400037e8:	int3   
   1400037e9:	int3   
   1400037ea:	int3   
   1400037eb:	int3   
   1400037ec:	mov    rax,rsp
   1400037ef:	mov    QWORD PTR [rax+0x8],rbx
   1400037f3:	mov    QWORD PTR [rax+0x10],rbp
   1400037f7:	mov    QWORD PTR [rax+0x18],rsi
   1400037fb:	mov    QWORD PTR [rax+0x20],rdi
   1400037ff:	push   r14
   140003801:	sub    rsp,0x20
   140003805:	mov    rbx,rcx
   140003808:	mov    esi,r8d
   14000380b:	lea    ecx,[r8+0x1]
   14000380f:	mov    rbp,rdx
   140003812:	add    ecx,DWORD PTR [rbx]
   140003814:	cmp    ecx,DWORD PTR [rbx]
   140003816:	jle    0x1400038c9
   14000381c:	cmp    ecx,r8d
   14000381f:	jle    0x1400038c9
   140003825:	mov    edi,DWORD PTR [rbx+0x4]
   140003828:	xor    r14d,r14d
   14000382b:	cmp    ecx,edi
   14000382d:	jl     0x140003868
   14000382f:	cmp    edi,0x3fffffff
   140003835:	jg     0x1400038c9
   14000383b:	add    edi,edi
   14000383d:	cmp    ecx,edi
   14000383f:	jge    0x14000382f
   140003841:	mov    eax,edi
   140003843:	mov    ecx,0xffffffff
   140003848:	add    rax,rax
   14000384b:	cmp    rax,rcx
   14000384e:	ja     0x1400038c9
   140003850:	mov    rcx,QWORD PTR [rbx+0x8]
   140003854:	mov    edx,eax
   140003856:	call   QWORD PTR [rip+0x9864]        # 0x14000d0c0
   14000385c:	test   rax,rax
   14000385f:	je     0x1400038c9
   140003861:	mov    QWORD PTR [rbx+0x8],rax
   140003865:	mov    DWORD PTR [rbx+0x4],edi
   140003868:	cmp    DWORD PTR [rbx],r14d
   14000386b:	jl     0x1400038c9
   14000386d:	mov    ecx,DWORD PTR [rbx+0x4]
   140003870:	cmp    DWORD PTR [rbx],ecx
   140003872:	jge    0x1400038c9
   140003874:	mov    eax,ecx
   140003876:	sub    eax,DWORD PTR [rbx]
   140003878:	cmp    eax,ecx
   14000387a:	jg     0x1400038c9
   14000387c:	movsxd rcx,DWORD PTR [rbx]
   14000387f:	mov    r8,rbp
   140003882:	movsxd rdx,eax
   140003885:	mov    rax,QWORD PTR [rbx+0x8]
   140003889:	add    rdx,rdx
   14000388c:	lea    rcx,[rax+rcx*2]
   140003890:	lea    eax,[rsi+rsi*1]
   140003893:	movsxd r9,eax
   140003896:	call   QWORD PTR [rip+0x9bd4]        # 0x14000d470
   14000389c:	test   eax,eax
   14000389e:	je     0x1400038b4
   1400038a0:	cmp    eax,0xc
   1400038a3:	je     0x1400038fc
   1400038a5:	cmp    eax,0x16
   1400038a8:	je     0x1400038f1
   1400038aa:	cmp    eax,0x22
   1400038ad:	je     0x1400038f1
   1400038af:	cmp    eax,0x50
   1400038b2:	jne    0x1400038e6
   1400038b4:	add    DWORD PTR [rbx],esi
   1400038b6:	mov    rax,QWORD PTR [rbx+0x8]
   1400038ba:	movsxd rcx,DWORD PTR [rbx]
   1400038bd:	mov    WORD PTR [rax+rcx*2],r14w
   1400038c2:	mov    eax,0x1
   1400038c7:	jmp    0x1400038cb
   1400038c9:	xor    eax,eax
   1400038cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038d0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400038d5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400038da:	mov    rdi,QWORD PTR [rsp+0x48]
   1400038df:	add    rsp,0x20
   1400038e3:	pop    r14
   1400038e5:	ret    
   1400038e6:	mov    ecx,0x80004005
   1400038eb:	call   0x140004230
   1400038f0:	int3   
   1400038f1:	mov    ecx,0x80070057
   1400038f6:	call   0x140004230
   1400038fb:	int3   
   1400038fc:	mov    ecx,0x8007000e
   140003901:	call   0x140004230
   140003906:	int3   
   140003907:	int3   
   140003908:	int3   
   140003909:	int3   
   14000390a:	int3   
   14000390b:	int3   
   14000390c:	int3   
   14000390d:	int3   
   14000390e:	int3   
   14000390f:	int3   
   140003910:	mov    rax,rsp
   140003913:	push   rbp
   140003914:	push   rsi
   140003915:	push   rdi
   140003916:	push   r12
   140003918:	push   r13
   14000391a:	push   r14
   14000391c:	push   r15
   14000391e:	lea    rbp,[rax-0x5f]
   140003922:	sub    rsp,0xa0
   140003929:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140003931:	mov    QWORD PTR [rax+0x10],rbx
   140003935:	mov    rax,QWORD PTR [rip+0xe6d4]        # 0x140012010
   14000393c:	xor    rax,rsp
   14000393f:	mov    QWORD PTR [rbp+0x17],rax
   140003943:	mov    QWORD PTR [rbp-0x49],r8
   140003947:	mov    rdi,rdx
   14000394a:	mov    rsi,rcx
   14000394d:	xor    ebx,ebx
   14000394f:	test   r8,r8
   140003952:	jne    0x14000395e
   140003954:	mov    eax,0x80004003
   140003959:	jmp    0x140003bb0
   14000395e:	mov    QWORD PTR [r8],rbx
   140003961:	or     rax,0xffffffffffffffff
   140003965:	inc    rax
   140003968:	cmp    WORD PTR [rdx+rax*2],bx
   14000396c:	jne    0x140003965
   14000396e:	add    eax,eax
   140003970:	mov    ecx,0x3e8
   140003975:	cmp    eax,0x64
   140003978:	cmovl  eax,ecx
   14000397b:	mov    DWORD PTR [rbp-0x59],ebx
   14000397e:	mov    DWORD PTR [rbp-0x55],eax
   140003981:	mov    ecx,eax
   140003983:	add    rcx,rcx
   140003986:	mov    eax,0xffffffff
   14000398b:	cmp    rcx,rax
   14000398e:	jbe    0x140003999
   140003990:	mov    rax,rbx
   140003993:	mov    QWORD PTR [rbp-0x51],rbx
   140003997:	jmp    0x1400039ad
   140003999:	mov    ecx,ecx
   14000399b:	call   QWORD PTR [rip+0x9717]        # 0x14000d0b8
   1400039a1:	mov    QWORD PTR [rbp-0x51],rax
   1400039a5:	test   rax,rax
   1400039a8:	je     0x1400039ad
   1400039aa:	mov    WORD PTR [rax],bx
   1400039ad:	test   rax,rax
   1400039b0:	jne    0x1400039bc
   1400039b2:	mov    ebx,0x8007000e
   1400039b7:	jmp    0x140003ba4
   1400039bc:	mov    QWORD PTR [rsi],rdi
   1400039bf:	cmp    WORD PTR [rdi],bx
   1400039c2:	je     0x140003b95
   1400039c8:	mov    rdx,QWORD PTR [rsi]
   1400039cb:	cmp    WORD PTR [rdx],0x25
   1400039cf:	jne    0x140003b30
   1400039d5:	mov    rcx,rdx
   1400039d8:	call   QWORD PTR [rip+0x967a]        # 0x14000d058
   1400039de:	mov    rdi,rax
   1400039e1:	mov    QWORD PTR [rsi],rax
   1400039e4:	cmp    WORD PTR [rax],0x25
   1400039e8:	jne    0x1400039f2
   1400039ea:	mov    rdx,rax
   1400039ed:	jmp    0x140003b30
   1400039f2:	test   rax,rax
   1400039f5:	je     0x140003b8e
   1400039fb:	movzx  eax,WORD PTR [rax]
   1400039fe:	test   ax,ax
   140003a01:	je     0x140003b8e
   140003a07:	cmp    ax,0x25
   140003a0b:	je     0x140003a1b
   140003a0d:	mov    rcx,rdi
   140003a10:	call   QWORD PTR [rip+0x9642]        # 0x14000d058
   140003a16:	mov    rdi,rax
   140003a19:	jmp    0x1400039fb
   140003a1b:	test   rdi,rdi
   140003a1e:	je     0x140003b8e
   140003a24:	mov    rax,rdi
   140003a27:	sub    rax,QWORD PTR [rsi]
   140003a2a:	sar    rax,1
   140003a2d:	cmp    rax,0x1f
   140003a31:	jg     0x140003b87
   140003a37:	movsxd r9,eax
   140003a3a:	mov    r8,QWORD PTR [rsi]
   140003a3d:	mov    edx,0x20
   140003a42:	lea    rcx,[rbp-0x29]
   140003a46:	call   QWORD PTR [rip+0x9a3c]        # 0x14000d488
   140003a4c:	test   eax,eax
   140003a4e:	je     0x140003a74
   140003a50:	cmp    eax,0xc
   140003a53:	je     0x140003b71
   140003a59:	cmp    eax,0x16
   140003a5c:	je     0x140003b66
   140003a62:	cmp    eax,0x22
   140003a65:	je     0x140003b66
   140003a6b:	cmp    eax,0x50
   140003a6e:	jne    0x140003b5b
   140003a74:	mov    r13,QWORD PTR [rsi+0x8]
   140003a78:	lea    rcx,[r13+0x20]
   140003a7c:	call   QWORD PTR [rip+0x982e]        # 0x14000d2b0
   140003a82:	mov    r15d,ebx
   140003a85:	mov    r14,rbx
   140003a88:	cmp    DWORD PTR [r13+0x18],ebx
   140003a8c:	jle    0x140003ab0
   140003a8e:	mov    rax,QWORD PTR [r13+0x8]
   140003a92:	lea    rdx,[rbp-0x29]
   140003a96:	mov    rcx,QWORD PTR [rax+r14*8]
   140003a9a:	call   QWORD PTR [rip+0x97e8]        # 0x14000d288
   140003aa0:	test   eax,eax
   140003aa2:	je     0x140003ab8
   140003aa4:	inc    r15d
   140003aa7:	inc    r14
   140003aaa:	cmp    r15d,DWORD PTR [r13+0x18]
   140003aae:	jl     0x140003a8e
   140003ab0:	or     r15d,0xffffffff
   140003ab4:	or     r14,0xffffffffffffffff
   140003ab8:	cmp    r14,0xffffffffffffffff
   140003abc:	jne    0x140003ac3
   140003abe:	mov    r14,rbx
   140003ac1:	jmp    0x140003ade
   140003ac3:	test   r14,r14
   140003ac6:	js     0x140003b7c
   140003acc:	cmp    r15d,DWORD PTR [r13+0x18]
   140003ad0:	jge    0x140003b7c
   140003ad6:	mov    rax,QWORD PTR [r13+0x10]
   140003ada:	mov    r14,QWORD PTR [rax+r14*8]
   140003ade:	lea    rcx,[r13+0x20]
   140003ae2:	call   QWORD PTR [rip+0x97e0]        # 0x14000d2c8
   140003ae8:	test   r14,r14
   140003aeb:	je     0x140003b8e
   140003af1:	mov    QWORD PTR [rbp-0x41],rbx
   140003af5:	or     r8,0xffffffffffffffff
   140003af9:	inc    r8
   140003afc:	cmp    WORD PTR [r14+r8*2],bx
   140003b01:	jne    0x140003af9
   140003b03:	mov    rdx,r14
   140003b06:	lea    rcx,[rbp-0x59]
   140003b0a:	call   0x1400037ec
   140003b0f:	nop
   140003b10:	test   eax,eax
   140003b12:	je     0x1400039b2
   140003b18:	cmp    QWORD PTR [rsi],rdi
   140003b1b:	je     0x140003b47
   140003b1d:	mov    rcx,QWORD PTR [rsi]
   140003b20:	call   QWORD PTR [rip+0x9532]        # 0x14000d058
   140003b26:	mov    QWORD PTR [rsi],rax
   140003b29:	cmp    rax,rdi
   140003b2c:	jne    0x140003b1d
   140003b2e:	jmp    0x140003b47
   140003b30:	mov    r8d,0x1
   140003b36:	lea    rcx,[rbp-0x59]
   140003b3a:	call   0x1400037ec
   140003b3f:	test   eax,eax
   140003b41:	je     0x1400039b2
   140003b47:	mov    rcx,QWORD PTR [rsi]
   140003b4a:	call   QWORD PTR [rip+0x9508]        # 0x14000d058
   140003b50:	mov    QWORD PTR [rsi],rax
   140003b53:	cmp    WORD PTR [rax],bx
   140003b56:	jmp    0x1400039c2
   140003b5b:	mov    ecx,0x80004005
   140003b60:	call   0x140004230
   140003b65:	int3   
   140003b66:	mov    ecx,0x80070057
   140003b6b:	call   0x140004230
   140003b70:	int3   
   140003b71:	mov    ecx,0x8007000e
   140003b76:	call   0x140004230
   140003b7b:	int3   
   140003b7c:	mov    ecx,0xc000008c
   140003b81:	call   0x1400037d4
   140003b86:	int3   
   140003b87:	mov    ebx,0x80004005
   140003b8c:	jmp    0x140003ba4
   140003b8e:	mov    ebx,0x80020009
   140003b93:	jmp    0x140003ba4
   140003b95:	mov    rcx,QWORD PTR [rbp-0x51]
   140003b99:	mov    QWORD PTR [rbp-0x51],rbx
   140003b9d:	mov    rax,QWORD PTR [rbp-0x49]
   140003ba1:	mov    QWORD PTR [rax],rcx
   140003ba4:	mov    rcx,QWORD PTR [rbp-0x51]
   140003ba8:	call   QWORD PTR [rip+0x951a]        # 0x14000d0c8
   140003bae:	mov    eax,ebx
   140003bb0:	mov    rcx,QWORD PTR [rbp+0x17]
   140003bb4:	xor    rcx,rsp
   140003bb7:	call   0x14000b290
   140003bbc:	mov    rbx,QWORD PTR [rsp+0xe8]
   140003bc4:	add    rsp,0xa0
   140003bcb:	pop    r15
   140003bcd:	pop    r14
   140003bcf:	pop    r13
   140003bd1:	pop    r12
   140003bd3:	pop    rdi
   140003bd4:	pop    rsi
   140003bd5:	pop    rbp
   140003bd6:	ret    
   140003bd7:	int3   
   140003bd8:	int3   
   140003bd9:	int3   
   140003bda:	int3   
   140003bdb:	int3   
   140003bdc:	int3   
   140003bdd:	int3   
   140003bde:	int3   
   140003bdf:	int3   
   140003be0:	mov    rax,rsp
   140003be3:	mov    QWORD PTR [rax+0x8],rbx
   140003be7:	mov    QWORD PTR [rax+0x10],rbp
   140003beb:	mov    QWORD PTR [rax+0x18],rsi
   140003bef:	mov    QWORD PTR [rax+0x20],rdi
   140003bf3:	push   r15
   140003bf5:	sub    rsp,0x20
   140003bf9:	mov    eax,DWORD PTR [rip+0xee31]        # 0x140012a30
   140003bff:	mov    rsi,rdx
   140003c02:	mov    rbp,rcx
   140003c05:	test   al,0x1
   140003c07:	jne    0x140003c7a
   140003c09:	or     eax,0x1
   140003c0c:	mov    DWORD PTR [rip+0xee1e],eax        # 0x140012a30
   140003c12:	lea    rax,[rip+0x9b6b]        # 0x14000d784
   140003c19:	mov    QWORD PTR [rip+0xee20],rax        # 0x140012a40
   140003c20:	mov    eax,0x8
   140003c25:	mov    WORD PTR [rip+0xee1c],ax        # 0x140012a48
   140003c2c:	lea    rax,[rip+0x9b55]        # 0x14000d788
   140003c33:	mov    QWORD PTR [rip+0xee16],rax        # 0x140012a50
   140003c3a:	mov    eax,0x4008
   140003c3f:	mov    WORD PTR [rip+0xee12],ax        # 0x140012a58
   140003c46:	lea    rax,[rip+0x9b3f]        # 0x14000d78c
   140003c4d:	mov    QWORD PTR [rip+0xee0c],rax        # 0x140012a60
   140003c54:	mov    eax,0x13
   140003c59:	mov    WORD PTR [rip+0xee08],ax        # 0x140012a68
   140003c60:	lea    rax,[rip+0x9b29]        # 0x14000d790
   140003c67:	mov    QWORD PTR [rip+0xee02],rax        # 0x140012a70
   140003c6e:	mov    eax,0x11
   140003c73:	mov    WORD PTR [rip+0xedfe],ax        # 0x140012a78
   140003c7a:	lea    r15,[rip+0xedbf]        # 0x140012a40
   140003c81:	xor    ebx,ebx
   140003c83:	mov    rdi,r15
   140003c86:	mov    rdx,QWORD PTR [rdi]
   140003c89:	mov    rcx,rbp
   140003c8c:	call   QWORD PTR [rip+0x95f6]        # 0x14000d288
   140003c92:	test   eax,eax
   140003c94:	je     0x140003ca9
   140003c96:	inc    ebx
   140003c98:	add    rdi,0x10
   140003c9c:	movsxd rax,ebx
   140003c9f:	cmp    rax,0x4
   140003ca3:	jb     0x140003c86
   140003ca5:	xor    eax,eax
   140003ca7:	jmp    0x140003cbd
   140003ca9:	movsxd rcx,ebx
   140003cac:	mov    eax,0x1
   140003cb1:	add    rcx,rcx
   140003cb4:	movzx  ecx,WORD PTR [r15+rcx*8+0x8]
   140003cba:	mov    WORD PTR [rsi],cx
   140003cbd:	mov    rbx,QWORD PTR [rsp+0x30]
   140003cc2:	mov    rbp,QWORD PTR [rsp+0x38]
   140003cc7:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ccc:	mov    rdi,QWORD PTR [rsp+0x48]
   140003cd1:	add    rsp,0x20
   140003cd5:	pop    r15
   140003cd7:	ret    
   140003cd8:	int3   
   140003cd9:	int3   
   140003cda:	int3   
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	rex push rbx
   140003ce2:	sub    rsp,0x20
   140003ce6:	cmp    QWORD PTR [rcx],0x0
   140003cea:	mov    rbx,rcx
   140003ced:	je     0x140003d04
   140003cef:	mov    rcx,QWORD PTR [rbx]
   140003cf2:	mov    rax,QWORD PTR [rcx]
   140003cf5:	mov    QWORD PTR [rbx],rax
   140003cf8:	call   QWORD PTR [rip+0x977a]        # 0x14000d478
   140003cfe:	cmp    QWORD PTR [rbx],0x0
   140003d02:	jne    0x140003cef
   140003d04:	add    rsp,0x20
   140003d08:	pop    rbx
   140003d09:	ret    
   140003d0a:	int3   
   140003d0b:	int3   
   140003d0c:	int3   
   140003d0d:	int3   
   140003d0e:	int3   
   140003d0f:	int3   
   140003d10:	rex push rbx
   140003d12:	push   rsi
   140003d13:	push   rdi
   140003d14:	push   r12
   140003d16:	push   r13
   140003d18:	push   r14
   140003d1a:	push   r15
   140003d1c:	mov    eax,0x21a0
   140003d21:	call   0x14000bd00
   140003d26:	sub    rsp,rax
   140003d29:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140003d32:	mov    rax,QWORD PTR [rip+0xe2d7]        # 0x140012010
   140003d39:	xor    rax,rsp
   140003d3c:	mov    QWORD PTR [rsp+0x2190],rax
   140003d44:	mov    r15,r8
   140003d47:	mov    QWORD PTR [rsp+0x40],r8
   140003d4c:	mov    r13,rdx
   140003d4f:	mov    r12,rcx
   140003d52:	mov    QWORD PTR [rsp+0x50],rcx
   140003d57:	mov    QWORD PTR [rsp+0x48],rdx
   140003d5c:	mov    QWORD PTR [rsp+0x60],r8
   140003d61:	mov    QWORD PTR [rsp+0x70],r9
   140003d66:	xor    ebx,ebx
   140003d68:	mov    WORD PTR [rsp+0x30],bx
   140003d6d:	lea    rdx,[rsp+0x190]
   140003d75:	call   0x140004558
   140003d7a:	test   eax,eax
   140003d7c:	js     0x1400041fb
   140003d82:	lea    rdx,[rsp+0x30]
   140003d87:	lea    rcx,[rsp+0x190]
   140003d8f:	call   0x140003be0
   140003d94:	test   eax,eax
   140003d96:	jne    0x140003da2
   140003d98:	mov    eax,0x80020009
   140003d9d:	jmp    0x1400041fb
   140003da2:	mov    rcx,QWORD PTR [r12]
   140003da6:	movzx  eax,WORD PTR [rcx]
   140003da9:	cmp    eax,0x20
   140003dac:	ja     0x140003dca
   140003dae:	movabs rdx,0x100002600
   140003db8:	bt     rdx,rax
   140003dbc:	jae    0x140003dca
   140003dbe:	call   QWORD PTR [rip+0x9294]        # 0x14000d058
   140003dc4:	mov    QWORD PTR [r12],rax
   140003dc8:	jmp    0x140003da2
   140003dca:	lea    rdx,[rsp+0x190]
   140003dd2:	mov    rcx,r12
   140003dd5:	call   0x140004558
   140003dda:	test   eax,eax
   140003ddc:	js     0x1400041fb
   140003de2:	movzx  eax,WORD PTR [rsp+0x30]
   140003de7:	cmp    eax,0x8
   140003dea:	je     0x140004195
   140003df0:	cmp    eax,0x11
   140003df3:	je     0x140003fda
   140003df9:	cmp    eax,0x13
   140003dfc:	je     0x140003fa2
   140003e02:	cmp    eax,0x4008
   140003e07:	jne    0x1400041e7
   140003e0d:	lea    rcx,[rsp+0x190]
   140003e15:	or     rsi,0xffffffffffffffff
   140003e19:	mov    rax,rsi
   140003e1c:	inc    rax
   140003e1f:	cmp    WORD PTR [rcx+rax*2],bx
   140003e23:	jne    0x140003e1c
   140003e25:	add    eax,0x2
   140003e28:	mov    QWORD PTR [rsp+0x80],rbx
   140003e30:	movsxd rcx,eax
   140003e33:	test   eax,eax
   140003e35:	je     0x140003e73
   140003e37:	xor    edx,edx
   140003e39:	mov    rax,rsi
   140003e3c:	div    rcx
   140003e3f:	cmp    rax,0x2
   140003e43:	jb     0x140003e69
   140003e45:	lea    rdx,[rcx+rcx*1]
   140003e49:	cmp    rdx,0x100
   140003e50:	jbe    0x140003e73
   140003e52:	lea    rcx,[rsp+0x80]
   140003e5a:	call   0x140003768
   140003e5f:	mov    rdi,QWORD PTR [rsp+0x80]
   140003e67:	jmp    0x140003e83
   140003e69:	mov    ecx,0x80070057
   140003e6e:	call   0x140004230
   140003e73:	lea    rdi,[rsp+0x88]
   140003e7b:	mov    QWORD PTR [rsp+0x80],rdi
   140003e83:	jmp    0x140003ea7
   140003e85:	xor    ebx,ebx
   140003e87:	or     rsi,0xffffffffffffffff
   140003e8b:	mov    rdi,QWORD PTR [rsp+0x80]
   140003e93:	mov    r12,QWORD PTR [rsp+0x50]
   140003e98:	mov    r13,QWORD PTR [rsp+0x48]
   140003e9d:	mov    rax,QWORD PTR [rsp+0x60]
   140003ea2:	mov    QWORD PTR [rsp+0x40],rax
   140003ea7:	test   rdi,rdi
   140003eaa:	je     0x140003f7a
   140003eb0:	lea    r14,[rsp+0x190]
   140003eb8:	cmp    WORD PTR [rsp+0x190],bx
   140003ec0:	je     0x140003f07
   140003ec2:	mov    r15d,0x30
   140003ec8:	mov    rcx,r14
   140003ecb:	call   QWORD PTR [rip+0x9187]        # 0x14000d058
   140003ed1:	movzx  ecx,WORD PTR [r14]
   140003ed5:	cmp    cx,0x5c
   140003ed9:	jne    0x140003ef6
   140003edb:	cmp    WORD PTR [rax],r15w
   140003edf:	jne    0x140003ef6
   140003ee1:	mov    WORD PTR [rdi],bx
   140003ee4:	add    rdi,0x2
   140003ee8:	mov    rcx,rax
   140003eeb:	call   QWORD PTR [rip+0x9167]        # 0x14000d058
   140003ef1:	mov    r14,rax
   140003ef4:	jmp    0x140003f01
   140003ef6:	mov    WORD PTR [rdi],cx
   140003ef9:	add    rdi,0x2
   140003efd:	add    r14,0x2
   140003f01:	cmp    WORD PTR [r14],bx
   140003f05:	jne    0x140003ec8
   140003f07:	mov    DWORD PTR [rdi],0x0
   140003f0d:	mov    eax,ebx
   140003f0f:	mov    rdx,QWORD PTR [rsp+0x80]
   140003f17:	test   rdx,rdx
   140003f1a:	setne  al
   140003f1d:	test   eax,eax
   140003f1f:	jne    0x140003f2c
   140003f21:	mov    ecx,0x80004005
   140003f26:	call   0x140004230
   140003f2b:	int3   
   140003f2c:	mov    r9d,ebx
   140003f2f:	mov    r8,rdx
   140003f32:	mov    rcx,rsi
   140003f35:	inc    rcx
   140003f38:	cmp    WORD PTR [r8+rcx*2],bx
   140003f3d:	jne    0x140003f35
   140003f3f:	inc    ecx
   140003f41:	lea    r8,[r8+rcx*2]
   140003f45:	lea    r9d,[r9+rcx*2]
   140003f49:	cmp    ecx,0x1
   140003f4c:	jne    0x140003f32
   140003f4e:	mov    DWORD PTR [rsp+0x28],r9d
   140003f53:	mov    QWORD PTR [rsp+0x20],rdx
   140003f58:	lea    r9d,[rcx+0x6]
   140003f5c:	xor    r8d,r8d
   140003f5f:	mov    rdx,QWORD PTR [rsp+0x40]
   140003f64:	mov    rcx,QWORD PTR [r13+0x0]
   140003f68:	call   QWORD PTR [rip+0x92da]        # 0x14000d248
   140003f6e:	mov    esi,eax
   140003f70:	mov    rdi,QWORD PTR [rsp+0x80]
   140003f78:	jmp    0x140003f7f
   140003f7a:	mov    esi,0xe
   140003f7f:	lea    rax,[rsp+0x88]
   140003f87:	cmp    rdi,rax
   140003f8a:	je     0x1400041da
   140003f90:	lea    rcx,[rsp+0x80]
   140003f98:	call   0x140003738
   140003f9d:	jmp    0x1400041da
   140003fa2:	lea    r9,[rsp+0x30]
   140003fa7:	xor    r8d,r8d
   140003faa:	xor    edx,edx
   140003fac:	lea    rcx,[rsp+0x190]
   140003fb4:	call   QWORD PTR [rip+0x906e]        # 0x14000d028
   140003fba:	mov    eax,DWORD PTR [rsp+0x30]
   140003fbe:	mov    DWORD PTR [rsp+0x38],eax
   140003fc2:	mov    DWORD PTR [rsp+0x28],0x4
   140003fca:	lea    rax,[rsp+0x38]
   140003fcf:	mov    r9d,0x4
   140003fd5:	jmp    0x1400041c3
   140003fda:	lea    rax,[rsp+0x190]
   140003fe2:	or     rsi,0xffffffffffffffff
   140003fe6:	mov    rdi,rsi
   140003fe9:	inc    rdi
   140003fec:	cmp    WORD PTR [rax+rdi*2],bx
   140003ff0:	jne    0x140003fe9
   140003ff2:	mov    DWORD PTR [rsp+0x38],edi
   140003ff6:	test   dil,0x1
   140003ffa:	je     0x140004006
   140003ffc:	mov    eax,0x80004005
   140004001:	jmp    0x1400041fb
   140004006:	mov    eax,edi
   140004008:	cdq    
   140004009:	sub    eax,edx
   14000400b:	sar    eax,1
   14000400d:	movsxd r14,eax
   140004010:	mov    DWORD PTR [rsp+0x30],r14d
   140004015:	mov    QWORD PTR [rsp+0x80],rbx
   14000401d:	mov    rcx,r14
   140004020:	test   eax,eax
   140004022:	je     0x14000405f
   140004024:	xor    edx,edx
   140004026:	mov    rax,rsi
   140004029:	div    rcx
   14000402c:	cmp    rax,0x1
   140004030:	jae    0x14000403c
   140004032:	mov    ecx,0x80070057
   140004037:	call   0x140004230
   14000403c:	cmp    rcx,0x100
   140004043:	jbe    0x14000405f
   140004045:	mov    rdx,rcx
   140004048:	lea    rcx,[rsp+0x80]
   140004050:	call   0x140003768
   140004055:	mov    rcx,QWORD PTR [rsp+0x80]
   14000405d:	jmp    0x14000406f
   14000405f:	lea    rcx,[rsp+0x88]
   140004067:	mov    QWORD PTR [rsp+0x80],rcx
   14000406f:	mov    rsi,QWORD PTR [rsp+0x40]
   140004074:	jmp    0x140004098
   140004076:	xor    ebx,ebx
   140004078:	mov    edi,DWORD PTR [rsp+0x38]
   14000407c:	mov    r14d,DWORD PTR [rsp+0x30]
   140004081:	mov    rcx,QWORD PTR [rsp+0x80]
   140004089:	mov    r12,QWORD PTR [rsp+0x50]
   14000408e:	mov    r13,QWORD PTR [rsp+0x48]
   140004093:	mov    rsi,QWORD PTR [rsp+0x60]
   140004098:	test   rcx,rcx
   14000409b:	jne    0x1400040c0
   14000409d:	lea    rax,[rsp+0x88]
   1400040a5:	test   rax,rax
   1400040a8:	je     0x140003ffc
   1400040ae:	lea    rcx,[rsp+0x80]
   1400040b6:	call   0x140003738
   1400040bb:	jmp    0x140003ffc
   1400040c0:	movsxd r8,r14d
   1400040c3:	xor    edx,edx
   1400040c5:	call   0x14000b71c
   1400040ca:	mov    r8d,ebx
   1400040cd:	mov    r9,rbx
   1400040d0:	movsxd r11,edi
   1400040d3:	test   edi,edi
   1400040d5:	jle    0x14000414a
   1400040d7:	mov    r15d,0x30
   1400040dd:	mov    eax,r8d
   1400040e0:	cdq    
   1400040e1:	sub    eax,edx
   1400040e3:	sar    eax,1
   1400040e5:	movsxd r10,eax
   1400040e8:	add    r10,QWORD PTR [rsp+0x80]
   1400040f0:	movzx  edx,WORD PTR [rsp+r9*2+0x190]
   1400040f9:	mov    eax,edx
   1400040fb:	cmp    edx,r15d
   1400040fe:	jl     0x140004126
   140004100:	cmp    eax,0x39
   140004103:	jle    0x140004121
   140004105:	cmp    eax,0x40
   140004108:	jle    0x140004126
   14000410a:	cmp    eax,0x46
   14000410d:	jle    0x14000411c
   14000410f:	add    eax,0xffffff9f
   140004112:	cmp    eax,0x5
   140004115:	ja     0x140004126
   140004117:	sub    dl,0x57
   14000411a:	jmp    0x140004128
   14000411c:	sub    dl,0x37
   14000411f:	jmp    0x140004128
   140004121:	sub    dl,r15b
   140004124:	jmp    0x140004128
   140004126:	mov    dl,bl
   140004128:	mov    ecx,r8d
   14000412b:	and    ecx,0x1
   14000412e:	shl    ecx,0x2
   140004131:	mov    eax,0x4
   140004136:	sub    eax,ecx
   140004138:	mov    cl,al
   14000413a:	shl    dl,cl
   14000413c:	or     BYTE PTR [r10],dl
   14000413f:	inc    r8d
   140004142:	inc    r9
   140004145:	cmp    r9,r11
   140004148:	jl     0x1400040dd
   14000414a:	mov    DWORD PTR [rsp+0x28],r14d
   14000414f:	mov    rax,QWORD PTR [rsp+0x80]
   140004157:	mov    QWORD PTR [rsp+0x20],rax
   14000415c:	mov    r9d,0x3
   140004162:	xor    r8d,r8d
   140004165:	mov    rdx,rsi
   140004168:	mov    rcx,QWORD PTR [r13+0x0]
   14000416c:	call   QWORD PTR [rip+0x90d6]        # 0x14000d248
   140004172:	mov    esi,eax
   140004174:	lea    rax,[rsp+0x88]
   14000417c:	cmp    QWORD PTR [rsp+0x80],rax
   140004184:	je     0x1400041da
   140004186:	lea    rcx,[rsp+0x80]
   14000418e:	call   0x140003738
   140004193:	jmp    0x1400041da
   140004195:	lea    rax,[rsp+0x190]
   14000419d:	or     rsi,0xffffffffffffffff
   1400041a1:	inc    rsi
   1400041a4:	cmp    WORD PTR [rax+rsi*2],bx
   1400041a8:	jne    0x1400041a1
   1400041aa:	lea    eax,[rsi*2+0x2]
   1400041b1:	mov    DWORD PTR [rsp+0x28],eax
   1400041b5:	lea    rax,[rsp+0x190]
   1400041bd:	mov    r9d,0x1
   1400041c3:	mov    QWORD PTR [rsp+0x20],rax
   1400041c8:	xor    r8d,r8d
   1400041cb:	mov    rdx,r15
   1400041ce:	mov    rcx,QWORD PTR [r13+0x0]
   1400041d2:	call   QWORD PTR [rip+0x9070]        # 0x14000d248
   1400041d8:	mov    esi,eax
   1400041da:	test   esi,esi
   1400041dc:	je     0x1400041e7
   1400041de:	mov    ecx,esi
   1400041e0:	call   0x140004544
   1400041e5:	jmp    0x1400041fb
   1400041e7:	mov    rdx,QWORD PTR [rsp+0x70]
   1400041ec:	mov    rcx,r12
   1400041ef:	call   0x140004558
   1400041f4:	test   eax,eax
   1400041f6:	cmovs  ebx,eax
   1400041f9:	mov    eax,ebx
   1400041fb:	mov    rcx,QWORD PTR [rsp+0x2190]
   140004203:	xor    rcx,rsp
   140004206:	call   0x14000b290
   14000420b:	add    rsp,0x21a0
   140004212:	pop    r15
   140004214:	pop    r14
   140004216:	pop    r13
   140004218:	pop    r12
   14000421a:	pop    rdi
   14000421b:	pop    rsi
   14000421c:	pop    rbx
   14000421d:	ret    
   14000421e:	int3   
   14000421f:	int3   
   140004220:	int3   
   140004221:	int3   
   140004222:	int3   
   140004223:	int3   
   140004224:	mov    DWORD PTR [rcx],edx
   140004226:	mov    rax,rcx
   140004229:	ret    
   14000422a:	int3   
   14000422b:	int3   
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	sub    rsp,0x28
   140004234:	mov    edx,ecx
   140004236:	lea    rcx,[rsp+0x40]
   14000423b:	call   0x140004224
   140004240:	lea    rdx,[rip+0xc6d9]        # 0x140010920
   140004247:	mov    ecx,DWORD PTR [rax]
   140004249:	mov    DWORD PTR [rsp+0x38],ecx
   14000424d:	lea    rcx,[rsp+0x38]
   140004252:	call   0x14000b740
   140004257:	int3   
   140004258:	int3   
   140004259:	int3   
   14000425a:	int3   
   14000425b:	int3   
   14000425c:	int3   
   14000425d:	int3   
   14000425e:	int3   
   14000425f:	int3   
   140004260:	mov    QWORD PTR [rsp+0x18],rbx
   140004265:	push   rdi
   140004266:	mov    eax,0x2030
   14000426b:	call   0x14000bd00
   140004270:	sub    rsp,rax
   140004273:	mov    rax,QWORD PTR [rip+0xdd96]        # 0x140012010
   14000427a:	xor    rax,rsp
   14000427d:	mov    QWORD PTR [rsp+0x2020],rax
   140004285:	cmp    WORD PTR [rdx],0x3d
   140004289:	mov    rdi,rdx
   14000428c:	mov    rbx,rcx
   14000428f:	jne    0x1400042e0
   140004291:	call   0x140004558
   140004296:	test   eax,eax
   140004298:	js     0x1400042e2
   14000429a:	mov    rcx,QWORD PTR [rbx]
   14000429d:	movzx  eax,WORD PTR [rcx]
   1400042a0:	cmp    eax,0x20
   1400042a3:	ja     0x1400042c0
   1400042a5:	movabs rdx,0x100002600
   1400042af:	bt     rdx,rax
   1400042b3:	jae    0x1400042c0
   1400042b5:	call   QWORD PTR [rip+0x8d9d]        # 0x14000d058
   1400042bb:	mov    QWORD PTR [rbx],rax
   1400042be:	jmp    0x14000429a
   1400042c0:	lea    rdx,[rsp+0x20]
   1400042c5:	mov    rcx,rbx
   1400042c8:	call   0x140004558
   1400042cd:	test   eax,eax
   1400042cf:	js     0x1400042e2
   1400042d1:	mov    rdx,rdi
   1400042d4:	mov    rcx,rbx
   1400042d7:	call   0x140004558
   1400042dc:	test   eax,eax
   1400042de:	js     0x1400042e2
   1400042e0:	xor    eax,eax
   1400042e2:	mov    rcx,QWORD PTR [rsp+0x2020]
   1400042ea:	xor    rcx,rsp
   1400042ed:	call   0x14000b290
   1400042f2:	mov    rbx,QWORD PTR [rsp+0x2050]
   1400042fa:	add    rsp,0x2030
   140004301:	pop    rdi
   140004302:	ret    
   140004303:	int3   
   140004304:	int3   
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	int3   
   140004309:	int3   
   14000430a:	int3   
   14000430b:	int3   
   14000430c:	mov    QWORD PTR [rsp+0x18],rbx
   140004311:	push   rbp
   140004312:	push   rsi
   140004313:	push   rdi
   140004314:	lea    rbp,[rsp-0x180]
   14000431c:	sub    rsp,0x280
   140004323:	mov    rax,QWORD PTR [rip+0xdce6]        # 0x140012010
   14000432a:	xor    rax,rsp
   14000432d:	mov    QWORD PTR [rbp+0x170],rax
   140004334:	xor    eax,eax
   140004336:	mov    rdi,rcx
   140004339:	mov    rcx,QWORD PTR [rcx]
   14000433c:	mov    r9d,0x2001f
   140004342:	mov    QWORD PTR [rsp+0x48],rax
   140004347:	xor    r8d,r8d
   14000434a:	mov    QWORD PTR [rsp+0x50],rax
   14000434f:	mov    rsi,rdx
   140004352:	mov    QWORD PTR [rsp+0x58],rax
   140004357:	mov    QWORD PTR [rsp+0x60],rax
   14000435c:	lea    rax,[rsp+0x60]
   140004361:	mov    QWORD PTR [rsp+0x20],rax
   140004366:	call   QWORD PTR [rip+0x8ecc]        # 0x14000d238
   14000436c:	mov    ebx,eax
   14000436e:	test   eax,eax
   140004370:	jne    0x14000440f
   140004376:	mov    rcx,QWORD PTR [rsp+0x48]
   14000437b:	test   rcx,rcx
   14000437e:	je     0x140004388
   140004380:	call   QWORD PTR [rip+0x8ea2]        # 0x14000d228
   140004386:	mov    ebx,eax
   140004388:	mov    rcx,QWORD PTR [rsp+0x60]
   14000438d:	mov    QWORD PTR [rsp+0x48],rcx
   140004392:	test   ebx,ebx
   140004394:	jne    0x14000440f
   140004396:	jmp    0x1400043b2
   140004398:	lea    rdx,[rsp+0x70]
   14000439d:	lea    rcx,[rsp+0x48]
   1400043a2:	call   0x14000430c
   1400043a7:	mov    ebx,eax
   1400043a9:	test   eax,eax
   1400043ab:	jne    0x14000440f
   1400043ad:	mov    rcx,QWORD PTR [rsp+0x48]
   1400043b2:	lea    rax,[rsp+0x68]
   1400043b7:	mov    DWORD PTR [rsp+0x40],0x100
   1400043bf:	mov    QWORD PTR [rsp+0x38],rax
   1400043c4:	lea    r9,[rsp+0x40]
   1400043c9:	and    QWORD PTR [rsp+0x30],0x0
   1400043cf:	lea    r8,[rsp+0x70]
   1400043d4:	and    QWORD PTR [rsp+0x28],0x0
   1400043da:	xor    edx,edx
   1400043dc:	and    QWORD PTR [rsp+0x20],0x0
   1400043e2:	call   QWORD PTR [rip+0x8e30]        # 0x14000d218
   1400043e8:	test   eax,eax
   1400043ea:	je     0x140004398
   1400043ec:	mov    rcx,QWORD PTR [rsp+0x48]
   1400043f1:	test   rcx,rcx
   1400043f4:	je     0x140004402
   1400043f6:	call   QWORD PTR [rip+0x8e2c]        # 0x14000d228
   1400043fc:	and    QWORD PTR [rsp+0x48],0x0
   140004402:	mov    rdx,rsi
   140004405:	mov    rcx,rdi
   140004408:	call   0x140004474
   14000440d:	mov    ebx,eax
   14000440f:	mov    rcx,QWORD PTR [rsp+0x48]
   140004414:	test   rcx,rcx
   140004417:	je     0x14000441f
   140004419:	call   QWORD PTR [rip+0x8e09]        # 0x14000d228
   14000441f:	mov    eax,ebx
   140004421:	mov    rcx,QWORD PTR [rbp+0x170]
   140004428:	xor    rcx,rsp
   14000442b:	call   0x14000b290
   140004430:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140004438:	add    rsp,0x280
   14000443f:	pop    rdi
   140004440:	pop    rsi
   140004441:	pop    rbp
   140004442:	ret    
   140004443:	int3   
   140004444:	int3   
   140004445:	int3   
   140004446:	int3   
   140004447:	int3   
   140004448:	int3   
   140004449:	int3   
   14000444a:	int3   
   14000444b:	int3   
   14000444c:	rex push rbx
   14000444e:	sub    rsp,0x20
   140004452:	mov    rbx,rcx
   140004455:	mov    rcx,QWORD PTR [rcx]
   140004458:	test   rcx,rcx
   14000445b:	je     0x140004467
   14000445d:	call   QWORD PTR [rip+0x8dc5]        # 0x14000d228
   140004463:	and    QWORD PTR [rbx],0x0
   140004467:	add    rsp,0x20
   14000446b:	pop    rbx
   14000446c:	ret    
   14000446d:	int3   
   14000446e:	int3   
   14000446f:	int3   
   140004470:	int3   
   140004471:	int3   
   140004472:	int3   
   140004473:	int3   
   140004474:	mov    QWORD PTR [rsp+0x8],rbx
   140004479:	mov    QWORD PTR [rsp+0x10],rsi
   14000447e:	push   rdi
   14000447f:	sub    rsp,0x20
   140004483:	cmp    QWORD PTR [rcx+0x8],0x0
   140004488:	mov    rsi,rdx
   14000448b:	mov    rbx,rcx
   14000448e:	jne    0x1400044ea
   140004490:	cmp    QWORD PTR [rcx+0x10],0x0
   140004495:	jne    0x1400044ea
   140004497:	lea    rcx,[rip+0x9c52]        # 0x14000e0f0
   14000449e:	call   QWORD PTR [rip+0x8c8c]        # 0x14000d130
   1400044a4:	test   rax,rax
   1400044a7:	je     0x1400044bf
   1400044a9:	lea    rdx,[rip+0x9c98]        # 0x14000e148
   1400044b0:	mov    rcx,rax
   1400044b3:	call   QWORD PTR [rip+0x8caf]        # 0x14000d168
   1400044b9:	mov    QWORD PTR [rbx+0x8],rax
   1400044bd:	jmp    0x1400044ea
   1400044bf:	xor    r8d,r8d
   1400044c2:	lea    rcx,[rip+0x9c8f]        # 0x14000e158
   1400044c9:	xor    edx,edx
   1400044cb:	call   QWORD PTR [rip+0x8c77]        # 0x14000d148
   1400044d1:	test   rax,rax
   1400044d4:	je     0x1400044ea
   1400044d6:	lea    rdx,[rip+0x9c9b]        # 0x14000e178
   1400044dd:	mov    rcx,rax
   1400044e0:	call   QWORD PTR [rip+0x8c82]        # 0x14000d168
   1400044e6:	mov    QWORD PTR [rbx+0x10],rax
   1400044ea:	mov    rdi,QWORD PTR [rbx+0x8]
   1400044ee:	test   rdi,rdi
   1400044f1:	je     0x14000450c
   1400044f3:	mov    rcx,rdi
   1400044f6:	call   QWORD PTR [rip+0x8fac]        # 0x14000d4a8
   1400044fc:	mov    rcx,QWORD PTR [rbx]
   1400044ff:	xor    r9d,r9d
   140004502:	xor    r8d,r8d
   140004505:	mov    rdx,rsi
   140004508:	call   rdi
   14000450a:	jmp    0x14000452e
   14000450c:	mov    rdi,QWORD PTR [rbx+0x10]
   140004510:	test   rdi,rdi
   140004513:	je     0x140004528
   140004515:	mov    rcx,rdi
   140004518:	call   QWORD PTR [rip+0x8f8a]        # 0x14000d4a8
   14000451e:	mov    rcx,QWORD PTR [rbx]
   140004521:	mov    rdx,rsi
   140004524:	call   rdi
   140004526:	jmp    0x14000452e
   140004528:	call   QWORD PTR [rip+0x8bca]        # 0x14000d0f8
   14000452e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004533:	mov    rsi,QWORD PTR [rsp+0x38]
   140004538:	add    rsp,0x20
   14000453c:	pop    rdi
   14000453d:	ret    
   14000453e:	int3   
   14000453f:	int3   
   140004540:	int3   
   140004541:	int3   
   140004542:	int3   
   140004543:	int3   
   140004544:	movzx  eax,cx
   140004547:	or     eax,0x80070000
   14000454c:	test   ecx,ecx
   14000454e:	cmovle eax,ecx
   140004551:	ret    
   140004552:	int3   
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	int3   
   140004557:	int3   
   140004558:	mov    rax,rsp
   14000455b:	mov    QWORD PTR [rax+0x8],rbx
   14000455f:	mov    QWORD PTR [rax+0x10],rbp
   140004563:	mov    QWORD PTR [rax+0x18],rsi
   140004567:	mov    QWORD PTR [rax+0x20],rdi
   14000456b:	push   r12
   14000456d:	push   r14
   14000456f:	push   r15
   140004571:	sub    rsp,0x20
   140004575:	mov    rbx,rdx
   140004578:	mov    rdi,rcx
   14000457b:	movabs r12,0x100002600
   140004585:	mov    rcx,QWORD PTR [rdi]
   140004588:	movzx  eax,WORD PTR [rcx]
   14000458b:	cmp    eax,0x20
   14000458e:	ja     0x1400045a1
   140004590:	bt     r12,rax
   140004594:	jae    0x1400045a1
   140004596:	call   QWORD PTR [rip+0x8abc]        # 0x14000d058
   14000459c:	mov    QWORD PTR [rdi],rax
   14000459f:	jmp    0x140004585
   1400045a1:	xor    r14d,r14d
   1400045a4:	cmp    r14w,WORD PTR [rcx]
   1400045a8:	je     0x1400046be
   1400045ae:	lea    r15d,[r14+0x27]
   1400045b2:	lea    rbp,[rbx+0x2000]
   1400045b9:	cmp    r15w,WORD PTR [rcx]
   1400045bd:	jne    0x14000465e
   1400045c3:	call   QWORD PTR [rip+0x8a8f]        # 0x14000d058
   1400045c9:	mov    QWORD PTR [rdi],rax
   1400045cc:	cmp    r14w,WORD PTR [rax]
   1400045d0:	je     0x14000463e
   1400045d2:	mov    rcx,QWORD PTR [rdi]
   1400045d5:	cmp    r15w,WORD PTR [rcx]
   1400045d9:	jne    0x1400045e7
   1400045db:	call   QWORD PTR [rip+0x8a77]        # 0x14000d058
   1400045e1:	cmp    r15w,WORD PTR [rax]
   1400045e5:	jne    0x14000463e
   1400045e7:	mov    rcx,QWORD PTR [rdi]
   1400045ea:	cmp    r15w,WORD PTR [rcx]
   1400045ee:	jne    0x1400045f9
   1400045f0:	call   QWORD PTR [rip+0x8a62]        # 0x14000d058
   1400045f6:	mov    QWORD PTR [rdi],rax
   1400045f9:	mov    rsi,QWORD PTR [rdi]
   1400045fc:	mov    rcx,rsi
   1400045ff:	call   QWORD PTR [rip+0x8a53]        # 0x14000d058
   140004605:	mov    QWORD PTR [rdi],rax
   140004608:	sub    rax,rsi
   14000460b:	sar    rax,1
   14000460e:	lea    rcx,[rax+0x1]
   140004612:	lea    rcx,[rbx+rcx*2]
   140004616:	cmp    rcx,rbp
   140004619:	jae    0x1400046be
   14000461f:	test   eax,eax
   140004621:	jle    0x140004639
   140004623:	sub    rsi,rbx
   140004626:	mov    ecx,eax
   140004628:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000462c:	mov    WORD PTR [rbx],ax
   14000462f:	add    rbx,0x2
   140004633:	sub    rcx,0x1
   140004637:	jne    0x140004628
   140004639:	mov    rax,QWORD PTR [rdi]
   14000463c:	jmp    0x1400045cc
   14000463e:	mov    rax,QWORD PTR [rdi]
   140004641:	cmp    r14w,WORD PTR [rax]
   140004645:	je     0x1400046be
   140004647:	cmp    rbx,rbp
   14000464a:	jae    0x1400046be
   14000464c:	mov    WORD PTR [rbx],r14w
   140004650:	mov    rcx,QWORD PTR [rdi]
   140004653:	call   QWORD PTR [rip+0x89ff]        # 0x14000d058
   140004659:	mov    QWORD PTR [rdi],rax
   14000465c:	jmp    0x1400046ba
   14000465e:	mov    rsi,QWORD PTR [rdi]
   140004661:	movzx  eax,WORD PTR [rsi]
   140004664:	cmp    eax,0x20
   140004667:	ja     0x14000466f
   140004669:	bt     r12,rax
   14000466d:	jb     0x1400046b1
   14000466f:	mov    rcx,rsi
   140004672:	call   QWORD PTR [rip+0x89e0]        # 0x14000d058
   140004678:	mov    QWORD PTR [rdi],rax
   14000467b:	sub    rax,rsi
   14000467e:	sar    rax,1
   140004681:	lea    rcx,[rax+0x1]
   140004685:	lea    rcx,[rbx+rcx*2]
   140004689:	cmp    rcx,rbp
   14000468c:	jae    0x1400046be
   14000468e:	test   eax,eax
   140004690:	jle    0x1400046a8
   140004692:	sub    rsi,rbx
   140004695:	mov    ecx,eax
   140004697:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000469b:	mov    WORD PTR [rbx],ax
   14000469e:	add    rbx,0x2
   1400046a2:	sub    rcx,0x1
   1400046a6:	jne    0x140004697
   1400046a8:	mov    rax,QWORD PTR [rdi]
   1400046ab:	cmp    r14w,WORD PTR [rax]
   1400046af:	jne    0x14000465e
   1400046b1:	cmp    rbx,rbp
   1400046b4:	jae    0x1400046be
   1400046b6:	mov    WORD PTR [rbx],r14w
   1400046ba:	xor    eax,eax
   1400046bc:	jmp    0x1400046c3
   1400046be:	mov    eax,0x80020009
   1400046c3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400046c8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400046cd:	mov    rsi,QWORD PTR [rsp+0x50]
   1400046d2:	mov    rdi,QWORD PTR [rsp+0x58]
   1400046d7:	add    rsp,0x20
   1400046db:	pop    r15
   1400046dd:	pop    r14
   1400046df:	pop    r12
   1400046e1:	ret    
   1400046e2:	int3   
   1400046e3:	int3   
   1400046e4:	int3   
   1400046e5:	int3   
   1400046e6:	int3   
   1400046e7:	int3   
   1400046e8:	rex push rbp
   1400046ea:	push   rbx
   1400046eb:	push   rsi
   1400046ec:	push   rdi
   1400046ed:	lea    rbp,[rsp-0x21f8]
   1400046f5:	mov    eax,0x22f8
   1400046fa:	call   0x14000bd00
   1400046ff:	sub    rsp,rax
   140004702:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14000470a:	mov    rax,QWORD PTR [rip+0xd8ff]        # 0x140012010
   140004711:	xor    rax,rsp
   140004714:	mov    QWORD PTR [rbp+0x21e0],rax
   14000471b:	mov    DWORD PTR [rsp+0x78],r9d
   140004720:	mov    QWORD PTR [rbp-0x78],r8
   140004724:	mov    rdi,rdx
   140004727:	mov    rax,rcx
   14000472a:	mov    QWORD PTR [rsp+0x70],rcx
   14000472f:	xor    ecx,ecx
   140004731:	mov    esi,ecx
   140004733:	mov    QWORD PTR [rbp-0x70],rcx
   140004737:	mov    QWORD PTR [rbp-0x68],rcx
   14000473b:	mov    QWORD PTR [rbp-0x60],rcx
   14000473f:	mov    ecx,DWORD PTR [rbp+0x2240]
   140004745:	mov    DWORD PTR [rbp-0x40],ecx
   140004748:	mov    rcx,rax
   14000474b:	call   0x140004558
   140004750:	test   eax,eax
   140004752:	mov    ebx,eax
   140004754:	js     0x140004e94
   14000475a:	cmp    WORD PTR [rdi],0x7d
   14000475e:	je     0x140004e94
   140004764:	mov    eax,0x1
   140004769:	mov    DWORD PTR [rsp+0x68],eax
   14000476d:	lea    rdx,[rip+0x905c]        # 0x14000d7d0
   140004774:	mov    rcx,rdi
   140004777:	call   QWORD PTR [rip+0x8b0b]        # 0x14000d288
   14000477d:	xor    ecx,ecx
   14000477f:	mov    ebx,ecx
   140004781:	test   eax,eax
   140004783:	sete   bl
   140004786:	mov    DWORD PTR [rsp+0x60],ebx
   14000478a:	lea    rdx,[rip+0x900f]        # 0x14000d7a0
   140004791:	mov    rcx,rdi
   140004794:	call   QWORD PTR [rip+0x8aee]        # 0x14000d288
   14000479a:	test   eax,eax
   14000479c:	je     0x1400047a6
   14000479e:	test   ebx,ebx
   1400047a0:	je     0x14000486b
   1400047a6:	mov    rdx,rdi
   1400047a9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400047ae:	call   0x140004558
   1400047b3:	mov    ebx,eax
   1400047b5:	xor    edx,edx
   1400047b7:	test   eax,eax
   1400047b9:	js     0x140004e94
   1400047bf:	cmp    DWORD PTR [rsp+0x78],edx
   1400047c3:	je     0x14000486b
   1400047c9:	mov    QWORD PTR [rbp-0x58],rdx
   1400047cd:	mov    QWORD PTR [rbp-0x50],rdx
   1400047d1:	mov    QWORD PTR [rbp-0x48],rdx
   1400047d5:	mov    rcx,rdi
   1400047d8:	movzx  eax,WORD PTR [rdi]
   1400047db:	jmp    0x1400047ef
   1400047dd:	cmp    ax,0x5c
   1400047e1:	je     0x1400047f6
   1400047e3:	call   QWORD PTR [rip+0x886f]        # 0x14000d058
   1400047e9:	mov    rcx,rax
   1400047ec:	movzx  eax,WORD PTR [rax]
   1400047ef:	test   ax,ax
   1400047f2:	jne    0x1400047dd
   1400047f4:	jmp    0x1400047ff
   1400047f6:	test   rcx,rcx
   1400047f9:	jne    0x140004e63
   1400047ff:	lea    rbx,[rip+0x90ca]        # 0x14000d8d0
   140004806:	mov    rdx,QWORD PTR [rbx]
   140004809:	mov    rcx,rdi
   14000480c:	call   QWORD PTR [rip+0x8a76]        # 0x14000d288
   140004812:	test   eax,eax
   140004814:	je     0x14000483a
   140004816:	add    rbx,0x8
   14000481a:	lea    rax,[rip+0x910f]        # 0x14000d930
   140004821:	cmp    rbx,rax
   140004824:	jl     0x140004806
   140004826:	mov    rax,QWORD PTR [rbp-0x78]
   14000482a:	mov    QWORD PTR [rbp-0x58],rax
   14000482e:	mov    rdx,rdi
   140004831:	lea    rcx,[rbp-0x58]
   140004835:	call   0x14000430c
   14000483a:	xor    eax,eax
   14000483c:	cmp    DWORD PTR [rsp+0x60],eax
   140004840:	je     0x14000486b
   140004842:	mov    rdx,rdi
   140004845:	mov    rcx,QWORD PTR [rsp+0x70]
   14000484a:	call   0x140004558
   14000484f:	mov    ebx,eax
   140004851:	test   eax,eax
   140004853:	js     0x140004e94
   140004859:	mov    rdx,rdi
   14000485c:	mov    rcx,QWORD PTR [rsp+0x70]
   140004861:	call   0x140004260
   140004866:	jmp    0x140004b14
   14000486b:	lea    rdx,[rip+0x8f46]        # 0x14000d7b8
   140004872:	mov    rcx,rdi
   140004875:	call   QWORD PTR [rip+0x8a0d]        # 0x14000d288
   14000487b:	xor    ecx,ecx
   14000487d:	test   eax,eax
   14000487f:	jne    0x14000489c
   140004881:	mov    DWORD PTR [rsp+0x68],ecx
   140004885:	mov    rdx,rdi
   140004888:	mov    rcx,QWORD PTR [rsp+0x70]
   14000488d:	call   0x140004558
   140004892:	mov    ebx,eax
   140004894:	test   eax,eax
   140004896:	js     0x140004e94
   14000489c:	lea    rdx,[rip+0x8ef5]        # 0x14000d798
   1400048a3:	mov    rcx,rdi
   1400048a6:	call   QWORD PTR [rip+0x89dc]        # 0x14000d288
   1400048ac:	xor    edx,edx
   1400048ae:	test   eax,eax
   1400048b0:	jne    0x1400049a7
   1400048b6:	lea    rdx,[rbp+0x1e0]
   1400048bd:	mov    rcx,QWORD PTR [rsp+0x70]
   1400048c2:	call   0x140004558
   1400048c7:	mov    ebx,eax
   1400048c9:	test   eax,eax
   1400048cb:	js     0x140004e94
   1400048d1:	mov    rdx,rdi
   1400048d4:	mov    rcx,QWORD PTR [rsp+0x70]
   1400048d9:	call   0x140004558
   1400048de:	mov    ebx,eax
   1400048e0:	xor    edx,edx
   1400048e2:	test   eax,eax
   1400048e4:	js     0x140004e94
   1400048ea:	cmp    WORD PTR [rdi],0x3d
   1400048ee:	jne    0x140004e63
   1400048f4:	cmp    DWORD PTR [rsp+0x78],edx
   1400048f8:	je     0x14000492b
   1400048fa:	mov    QWORD PTR [rbp-0x50],rdx
   1400048fe:	mov    QWORD PTR [rbp-0x48],rdx
   140004902:	mov    rax,QWORD PTR [rbp-0x78]
   140004906:	mov    QWORD PTR [rbp-0x58],rax
   14000490a:	mov    r9,rdi
   14000490d:	lea    r8,[rbp+0x1e0]
   140004914:	lea    rdx,[rbp-0x58]
   140004918:	mov    rcx,QWORD PTR [rsp+0x70]
   14000491d:	call   0x140003d10
   140004922:	mov    ebx,eax
   140004924:	xor    edx,edx
   140004926:	jmp    0x140004b18
   14000492b:	cmp    DWORD PTR [rbp+0x2240],edx
   140004931:	jne    0x140004995
   140004933:	cmp    DWORD PTR [rsp+0x68],edx
   140004937:	je     0x140004995
   140004939:	mov    QWORD PTR [rsp+0x68],rdx
   14000493e:	lea    rax,[rsp+0x68]
   140004943:	mov    QWORD PTR [rsp+0x20],rax
   140004948:	mov    r9d,0x20006
   14000494e:	xor    r8d,r8d
   140004951:	mov    rcx,QWORD PTR [rbp-0x78]
   140004955:	call   QWORD PTR [rip+0x88dd]        # 0x14000d238
   14000495b:	test   eax,eax
   14000495d:	jne    0x140004e8b
   140004963:	mov    rbx,QWORD PTR [rsp+0x68]
   140004968:	mov    QWORD PTR [rbp-0x80],rbx
   14000496c:	lea    rdx,[rbp+0x1e0]
   140004973:	mov    rcx,rbx
   140004976:	call   QWORD PTR [rip+0x88a4]        # 0x14000d220
   14000497c:	test   eax,0xfffffffd
   140004981:	jne    0x140004e49
   140004987:	test   rbx,rbx
   14000498a:	je     0x140004995
   14000498c:	mov    rcx,rbx
   14000498f:	call   QWORD PTR [rip+0x8893]        # 0x14000d228
   140004995:	mov    rdx,rdi
   140004998:	mov    rcx,QWORD PTR [rsp+0x70]
   14000499d:	call   0x140004260
   1400049a2:	jmp    0x140004750
   1400049a7:	mov    rcx,rdi
   1400049aa:	movzx  eax,WORD PTR [rdi]
   1400049ad:	jmp    0x1400049c3
   1400049af:	cmp    ax,0x5c
   1400049b3:	je     0x1400049ca
   1400049b5:	call   QWORD PTR [rip+0x869d]        # 0x14000d058
   1400049bb:	mov    rcx,rax
   1400049be:	movzx  eax,WORD PTR [rax]
   1400049c1:	xor    edx,edx
   1400049c3:	test   ax,ax
   1400049c6:	jne    0x1400049af
   1400049c8:	jmp    0x1400049d3
   1400049ca:	test   rcx,rcx
   1400049cd:	jne    0x140004e63
   1400049d3:	cmp    DWORD PTR [rsp+0x78],edx
   1400049d7:	je     0x140004b75
   1400049dd:	mov    QWORD PTR [rsp+0x68],rdx
   1400049e2:	lea    rax,[rsp+0x68]
   1400049e7:	mov    QWORD PTR [rsp+0x20],rax
   1400049ec:	mov    r9d,0x2001f
   1400049f2:	xor    r8d,r8d
   1400049f5:	mov    rdx,rdi
   1400049f8:	mov    rbx,QWORD PTR [rbp-0x78]
   1400049fc:	mov    rcx,rbx
   1400049ff:	call   QWORD PTR [rip+0x8833]        # 0x14000d238
   140004a05:	xor    ecx,ecx
   140004a07:	test   eax,eax
   140004a09:	jne    0x140004a2e
   140004a0b:	mov    eax,ecx
   140004a0d:	test   rsi,rsi
   140004a10:	je     0x140004a1d
   140004a12:	mov    rcx,rsi
   140004a15:	call   QWORD PTR [rip+0x880d]        # 0x14000d228
   140004a1b:	xor    ecx,ecx
   140004a1d:	mov    rsi,QWORD PTR [rsp+0x68]
   140004a22:	mov    QWORD PTR [rbp-0x70],rsi
   140004a26:	test   eax,eax
   140004a28:	je     0x140004add
   140004a2e:	mov    QWORD PTR [rsp+0x68],rcx
   140004a33:	lea    rax,[rsp+0x68]
   140004a38:	mov    QWORD PTR [rsp+0x20],rax
   140004a3d:	mov    r9d,0x20019
   140004a43:	xor    r8d,r8d
   140004a46:	mov    rdx,rdi
   140004a49:	mov    rcx,rbx
   140004a4c:	call   QWORD PTR [rip+0x87e6]        # 0x14000d238
   140004a52:	xor    ecx,ecx
   140004a54:	test   eax,eax
   140004a56:	jne    0x140004a77
   140004a58:	mov    eax,ecx
   140004a5a:	test   rsi,rsi
   140004a5d:	je     0x140004a6a
   140004a5f:	mov    rcx,rsi
   140004a62:	call   QWORD PTR [rip+0x87c0]        # 0x14000d228
   140004a68:	xor    ecx,ecx
   140004a6a:	mov    rsi,QWORD PTR [rsp+0x68]
   140004a6f:	mov    QWORD PTR [rbp-0x70],rsi
   140004a73:	test   eax,eax
   140004a75:	je     0x140004add
   140004a77:	mov    QWORD PTR [rsp+0x68],rcx
   140004a7c:	lea    rax,[rbp-0x3c]
   140004a80:	mov    QWORD PTR [rsp+0x40],rax
   140004a85:	lea    rax,[rsp+0x68]
   140004a8a:	mov    QWORD PTR [rsp+0x38],rax
   140004a8f:	mov    QWORD PTR [rsp+0x30],rcx
   140004a94:	mov    DWORD PTR [rsp+0x28],0x2001f
   140004a9c:	mov    DWORD PTR [rsp+0x20],ecx
   140004aa0:	xor    r9d,r9d
   140004aa3:	xor    r8d,r8d
   140004aa6:	mov    rdx,rdi
   140004aa9:	mov    rcx,rbx
   140004aac:	call   QWORD PTR [rip+0x878e]        # 0x14000d240
   140004ab2:	xor    edx,edx
   140004ab4:	test   eax,eax
   140004ab6:	jne    0x140004e8b
   140004abc:	mov    eax,edx
   140004abe:	test   rsi,rsi
   140004ac1:	je     0x140004acc
   140004ac3:	mov    rcx,rsi
   140004ac6:	call   QWORD PTR [rip+0x875c]        # 0x14000d228
   140004acc:	mov    rsi,QWORD PTR [rsp+0x68]
   140004ad1:	mov    QWORD PTR [rbp-0x70],rsi
   140004ad5:	test   eax,eax
   140004ad7:	jne    0x140004e8b
   140004add:	mov    rdx,rdi
   140004ae0:	mov    rcx,QWORD PTR [rsp+0x70]
   140004ae5:	call   0x140004558
   140004aea:	mov    ebx,eax
   140004aec:	xor    edx,edx
   140004aee:	test   eax,eax
   140004af0:	js     0x140004e94
   140004af6:	cmp    WORD PTR [rdi],0x3d
   140004afa:	jne    0x140004b20
   140004afc:	mov    r9,rdi
   140004aff:	xor    r8d,r8d
   140004b02:	lea    rdx,[rbp-0x70]
   140004b06:	mov    rcx,QWORD PTR [rsp+0x70]
   140004b0b:	call   0x140003d10
   140004b10:	mov    rsi,QWORD PTR [rbp-0x70]
   140004b14:	xor    edx,edx
   140004b16:	mov    ebx,eax
   140004b18:	test   eax,eax
   140004b1a:	js     0x140004e94
   140004b20:	cmp    WORD PTR [rdi],0x7b
   140004b24:	jne    0x14000475a
   140004b2a:	or     rax,0xffffffffffffffff
   140004b2e:	inc    rax
   140004b31:	cmp    WORD PTR [rdi+rax*2],dx
   140004b35:	jne    0x140004b2e
   140004b37:	mov    ecx,0x1
   140004b3c:	cmp    rax,rcx
   140004b3f:	jne    0x14000475a
   140004b45:	mov    DWORD PTR [rsp+0x20],edx
   140004b49:	mov    r9d,DWORD PTR [rsp+0x78]
   140004b4e:	mov    r8,rsi
   140004b51:	mov    rdx,rdi
   140004b54:	mov    rcx,QWORD PTR [rsp+0x70]
   140004b59:	call   0x1400046e8
   140004b5e:	mov    ebx,eax
   140004b60:	test   eax,eax
   140004b62:	js     0x140004e94
   140004b68:	mov    rdx,rdi
   140004b6b:	mov    rcx,QWORD PTR [rsp+0x70]
   140004b70:	jmp    0x14000474b
   140004b75:	mov    ebx,DWORD PTR [rbp+0x2240]
   140004b7b:	test   ebx,ebx
   140004b7d:	jne    0x140004bce
   140004b7f:	mov    QWORD PTR [rbp-0x80],rdx
   140004b83:	lea    rax,[rbp-0x80]
   140004b87:	mov    QWORD PTR [rsp+0x20],rax
   140004b8c:	mov    r9d,0x20019
   140004b92:	xor    r8d,r8d
   140004b95:	mov    rdx,rdi
   140004b98:	mov    rcx,QWORD PTR [rbp-0x78]
   140004b9c:	call   QWORD PTR [rip+0x8696]        # 0x14000d238
   140004ba2:	mov    DWORD PTR [rsp+0x60],eax
   140004ba6:	xor    edx,edx
   140004ba8:	test   eax,eax
   140004baa:	jne    0x140004bd9
   140004bac:	mov    eax,edx
   140004bae:	mov    DWORD PTR [rsp+0x60],edx
   140004bb2:	test   rsi,rsi
   140004bb5:	je     0x140004bc4
   140004bb7:	mov    rcx,rsi
   140004bba:	call   QWORD PTR [rip+0x8668]        # 0x14000d228
   140004bc0:	mov    DWORD PTR [rsp+0x60],eax
   140004bc4:	mov    rsi,QWORD PTR [rbp-0x80]
   140004bc8:	mov    QWORD PTR [rbp-0x70],rsi
   140004bcc:	jmp    0x140004bd7
   140004bce:	mov    eax,0x2
   140004bd3:	mov    DWORD PTR [rsp+0x60],eax
   140004bd7:	test   eax,eax
   140004bd9:	mov    eax,0x1
   140004bde:	cmovne ebx,eax
   140004be1:	mov    DWORD PTR [rbp+0x2240],ebx
   140004be7:	or     r9,0xffffffffffffffff
   140004beb:	mov    r8,rdi
   140004bee:	mov    edx,0x104
   140004bf3:	lea    rcx,[rbp-0x30]
   140004bf7:	call   QWORD PTR [rip+0x888b]        # 0x14000d488
   140004bfd:	test   eax,eax
   140004bff:	je     0x140004c25
   140004c01:	cmp    eax,0xc
   140004c04:	je     0x140004e80
   140004c0a:	cmp    eax,0x16
   140004c0d:	je     0x140004e75
   140004c13:	cmp    eax,0x22
   140004c16:	je     0x140004e75
   140004c1c:	cmp    eax,0x50
   140004c1f:	jne    0x140004e6a
   140004c25:	mov    rdx,rdi
   140004c28:	mov    rcx,QWORD PTR [rsp+0x70]
   140004c2d:	call   0x140004558
   140004c32:	mov    ebx,eax
   140004c34:	test   eax,eax
   140004c36:	js     0x140004e94
   140004c3c:	mov    rdx,rdi
   140004c3f:	mov    rcx,QWORD PTR [rsp+0x70]
   140004c44:	call   0x140004260
   140004c49:	mov    ebx,eax
   140004c4b:	xor    edx,edx
   140004c4d:	test   eax,eax
   140004c4f:	js     0x140004e94
   140004c55:	cmp    WORD PTR [rdi],0x7b
   140004c59:	jne    0x140004cbc
   140004c5b:	or     rax,0xffffffffffffffff
   140004c5f:	inc    rax
   140004c62:	cmp    WORD PTR [rdi+rax*2],dx
   140004c66:	jne    0x140004c5f
   140004c68:	mov    ecx,0x1
   140004c6d:	cmp    rax,rcx
   140004c70:	jne    0x140004cbc
   140004c72:	mov    eax,DWORD PTR [rbp+0x2240]
   140004c78:	mov    DWORD PTR [rsp+0x20],eax
   140004c7c:	xor    r9d,r9d
   140004c7f:	mov    r8,rsi
   140004c82:	mov    rdx,rdi
   140004c85:	mov    rcx,QWORD PTR [rsp+0x70]
   140004c8a:	call   0x1400046e8
   140004c8f:	mov    ebx,eax
   140004c91:	xor    edx,edx
   140004c93:	test   eax,eax
   140004c95:	jns    0x140004ca3
   140004c97:	cmp    DWORD PTR [rbp+0x2240],edx
   140004c9d:	je     0x140004e94
   140004ca3:	mov    rdx,rdi
   140004ca6:	mov    rcx,QWORD PTR [rsp+0x70]
   140004cab:	call   0x140004558
   140004cb0:	mov    ebx,eax
   140004cb2:	xor    edx,edx
   140004cb4:	test   eax,eax
   140004cb6:	js     0x140004e94
   140004cbc:	mov    eax,DWORD PTR [rbp-0x40]
   140004cbf:	mov    DWORD PTR [rbp+0x2240],eax
   140004cc5:	mov    ecx,DWORD PTR [rsp+0x60]
   140004cc9:	cmp    ecx,0x2
   140004ccc:	je     0x14000475a
   140004cd2:	test   ecx,ecx
   140004cd4:	je     0x140004ce3
   140004cd6:	test   eax,eax
   140004cd8:	je     0x140004e8d
   140004cde:	jmp    0x14000475a
   140004ce3:	test   eax,eax
   140004ce5:	je     0x140004d9a
   140004ceb:	mov    DWORD PTR [rsp+0x60],edx
   140004cef:	mov    QWORD PTR [rsp+0x58],rdx
   140004cf4:	mov    QWORD PTR [rsp+0x50],rdx
   140004cf9:	mov    QWORD PTR [rsp+0x48],rdx
   140004cfe:	mov    QWORD PTR [rsp+0x40],rdx
   140004d03:	mov    QWORD PTR [rsp+0x38],rdx
   140004d08:	mov    QWORD PTR [rsp+0x30],rdx
   140004d0d:	mov    QWORD PTR [rsp+0x28],rdx
   140004d12:	lea    rax,[rsp+0x60]
   140004d17:	mov    QWORD PTR [rsp+0x20],rax
   140004d1c:	xor    r9d,r9d
   140004d1f:	xor    r8d,r8d
   140004d22:	xor    edx,edx
   140004d24:	mov    rcx,rsi
   140004d27:	call   QWORD PTR [rip+0x8503]        # 0x14000d230
   140004d2d:	xor    edx,edx
   140004d2f:	test   eax,eax
   140004d31:	jne    0x140004d9a
   140004d33:	mov    eax,edx
   140004d35:	cmp    DWORD PTR [rsp+0x60],edx
   140004d39:	seta   al
   140004d3c:	test   eax,eax
   140004d3e:	je     0x140004d9a
   140004d40:	lea    rax,[rip+0x8b89]        # 0x14000d8d0
   140004d47:	mov    QWORD PTR [rbp-0x80],rax
   140004d4b:	mov    rdx,QWORD PTR [rax]
   140004d4e:	lea    rcx,[rbp-0x30]
   140004d52:	call   QWORD PTR [rip+0x8530]        # 0x14000d288
   140004d58:	xor    edx,edx
   140004d5a:	test   eax,eax
   140004d5c:	je     0x14000475a
   140004d62:	mov    rax,QWORD PTR [rbp-0x80]
   140004d66:	add    rax,0x8
   140004d6a:	mov    QWORD PTR [rbp-0x80],rax
   140004d6e:	lea    rcx,[rip+0x8bbb]        # 0x14000d930
   140004d75:	cmp    rax,rcx
   140004d78:	jl     0x140004d4b
   140004d7a:	cmp    DWORD PTR [rsp+0x68],edx
   140004d7e:	je     0x14000475a
   140004d84:	lea    rdx,[rbp-0x30]
   140004d88:	lea    rcx,[rbp-0x70]
   140004d8c:	call   0x14000430c
   140004d91:	mov    rsi,QWORD PTR [rbp-0x70]
   140004d95:	jmp    0x14000475a
   140004d9a:	mov    DWORD PTR [rsp+0x60],edx
   140004d9e:	mov    QWORD PTR [rsp+0x58],rdx
   140004da3:	mov    QWORD PTR [rsp+0x50],rdx
   140004da8:	mov    QWORD PTR [rsp+0x48],rdx
   140004dad:	mov    QWORD PTR [rsp+0x40],rdx
   140004db2:	mov    QWORD PTR [rsp+0x38],rdx
   140004db7:	mov    QWORD PTR [rsp+0x30],rdx
   140004dbc:	mov    QWORD PTR [rsp+0x28],rdx
   140004dc1:	lea    rax,[rsp+0x60]
   140004dc6:	mov    QWORD PTR [rsp+0x20],rax
   140004dcb:	xor    r9d,r9d
   140004dce:	xor    r8d,r8d
   140004dd1:	xor    edx,edx
   140004dd3:	mov    rcx,rsi
   140004dd6:	call   QWORD PTR [rip+0x8454]        # 0x14000d230
   140004ddc:	xor    edx,edx
   140004dde:	test   eax,eax
   140004de0:	je     0x140004de8
   140004de2:	mov    DWORD PTR [rsp+0x60],edx
   140004de6:	jmp    0x140004df5
   140004de8:	mov    eax,edx
   140004dea:	cmp    DWORD PTR [rsp+0x60],edx
   140004dee:	seta   al
   140004df1:	mov    DWORD PTR [rsp+0x60],eax
   140004df5:	test   rsi,rsi
   140004df8:	je     0x140004e0f
   140004dfa:	mov    rcx,rsi
   140004dfd:	call   QWORD PTR [rip+0x8425]        # 0x14000d228
   140004e03:	xor    edx,edx
   140004e05:	mov    esi,edx
   140004e07:	mov    QWORD PTR [rbp-0x70],rdx
   140004e0b:	test   eax,eax
   140004e0d:	jne    0x140004e8b
   140004e0f:	cmp    DWORD PTR [rsp+0x68],edx
   140004e13:	je     0x14000475a
   140004e19:	cmp    DWORD PTR [rsp+0x60],edx
   140004e1d:	jne    0x14000475a
   140004e23:	mov    QWORD PTR [rbp-0x50],rdx
   140004e27:	mov    QWORD PTR [rbp-0x48],rdx
   140004e2b:	mov    rax,QWORD PTR [rbp-0x78]
   140004e2f:	mov    QWORD PTR [rbp-0x58],rax
   140004e33:	lea    rdx,[rbp-0x30]
   140004e37:	lea    rcx,[rbp-0x58]
   140004e3b:	call   0x140004474
   140004e40:	test   eax,eax
   140004e42:	jne    0x140004e8b
   140004e44:	jmp    0x14000475a
   140004e49:	mov    ecx,eax
   140004e4b:	call   0x140004544
   140004e50:	mov    ebx,eax
   140004e52:	mov    rcx,QWORD PTR [rbp-0x80]
   140004e56:	test   rcx,rcx
   140004e59:	je     0x140004e94
   140004e5b:	call   QWORD PTR [rip+0x83c7]        # 0x14000d228
   140004e61:	jmp    0x140004e94
   140004e63:	mov    ebx,0x80020009
   140004e68:	jmp    0x140004e94
   140004e6a:	mov    ecx,0x80004005
   140004e6f:	call   0x140004230
   140004e74:	int3   
   140004e75:	mov    ecx,0x80070057
   140004e7a:	call   0x140004230
   140004e7f:	int3   
   140004e80:	mov    ecx,0x8007000e
   140004e85:	call   0x140004230
   140004e8a:	int3   
   140004e8b:	mov    ecx,eax
   140004e8d:	call   0x140004544
   140004e92:	mov    ebx,eax
   140004e94:	test   rsi,rsi
   140004e97:	je     0x140004ea2
   140004e99:	mov    rcx,rsi
   140004e9c:	call   QWORD PTR [rip+0x8386]        # 0x14000d228
   140004ea2:	mov    eax,ebx
   140004ea4:	mov    rcx,QWORD PTR [rbp+0x21e0]
   140004eab:	xor    rcx,rsp
   140004eae:	call   0x14000b290
   140004eb3:	add    rsp,0x22f8
   140004eba:	pop    rdi
   140004ebb:	pop    rsi
   140004ebc:	pop    rbx
   140004ebd:	pop    rbp
   140004ebe:	ret    
   140004ebf:	int3   
   140004ec0:	int3   
   140004ec1:	int3   
   140004ec2:	int3   
   140004ec3:	int3   
   140004ec4:	int3   
   140004ec5:	int3   
   140004ec6:	int3   
   140004ec7:	int3   
   140004ec8:	mov    QWORD PTR [rsp+0x20],rbx
   140004ecd:	push   rbp
   140004ece:	push   rsi
   140004ecf:	push   rdi
   140004ed0:	push   r12
   140004ed2:	push   r13
   140004ed4:	push   r14
   140004ed6:	push   r15
   140004ed8:	mov    eax,0x2050
   140004edd:	call   0x14000bd00
   140004ee2:	sub    rsp,rax
   140004ee5:	mov    rax,QWORD PTR [rip+0xd124]        # 0x140012010
   140004eec:	xor    rax,rsp
   140004eef:	mov    QWORD PTR [rsp+0x2040],rax
   140004ef7:	xor    r12d,r12d
   140004efa:	mov    r15d,r8d
   140004efd:	mov    QWORD PTR [rsp+0x30],r12
   140004f02:	mov    rdi,rcx
   140004f05:	mov    ebp,r12d
   140004f08:	test   rdx,rdx
   140004f0b:	je     0x140004f20
   140004f0d:	lea    r8,[rsp+0x30]
   140004f12:	call   0x140003910
   140004f17:	mov    rbp,QWORD PTR [rsp+0x30]
   140004f1c:	mov    ebx,eax
   140004f1e:	jmp    0x140004f25
   140004f20:	mov    ebx,0x80004003
   140004f25:	test   ebx,ebx
   140004f27:	js     0x140005053
   140004f2d:	mov    QWORD PTR [rdi],rbp
   140004f30:	cmp    r12w,WORD PTR [rbp+0x0]
   140004f35:	je     0x14000504a
   140004f3b:	lea    r13,[rip+0x90ce]        # 0x14000e010
   140004f42:	lea    rdx,[rsp+0x40]
   140004f47:	mov    rcx,rdi
   140004f4a:	call   0x140004558
   140004f4f:	mov    ebx,eax
   140004f51:	test   eax,eax
   140004f53:	js     0x14000504a
   140004f59:	mov    esi,r12d
   140004f5c:	mov    rbx,r12
   140004f5f:	mov    r14,r13
   140004f62:	mov    rdx,QWORD PTR [r14]
   140004f65:	lea    rcx,[rsp+0x40]
   140004f6a:	call   QWORD PTR [rip+0x8318]        # 0x14000d288
   140004f70:	test   eax,eax
   140004f72:	je     0x140004f8b
   140004f74:	inc    esi
   140004f76:	inc    rbx
   140004f79:	movsxd rax,esi
   140004f7c:	add    r14,0x10
   140004f80:	cmp    rax,0xe
   140004f84:	jb     0x140004f62
   140004f86:	mov    rsi,r12
   140004f89:	jmp    0x140004f93
   140004f8b:	add    rbx,rbx
   140004f8e:	mov    rsi,QWORD PTR [r13+rbx*8+0x8]
   140004f93:	test   rsi,rsi
   140004f96:	je     0x140005045
   140004f9c:	lea    rdx,[rsp+0x40]
   140004fa1:	mov    rcx,rdi
   140004fa4:	call   0x140004558
   140004fa9:	mov    ebx,eax
   140004fab:	test   eax,eax
   140004fad:	js     0x14000504a
   140004fb3:	mov    eax,0x7b
   140004fb8:	cmp    ax,WORD PTR [rsp+0x40]
   140004fbd:	jne    0x140005045
   140004fc3:	mov    DWORD PTR [rsp+0x20],r12d
   140004fc8:	mov    r8,rsi
   140004fcb:	lea    rdx,[rsp+0x40]
   140004fd0:	mov    rcx,rdi
   140004fd3:	test   r15d,r15d
   140004fd6:	je     0x140005006
   140004fd8:	mov    r14,QWORD PTR [rdi]
   140004fdb:	mov    r9d,r15d
   140004fde:	call   0x1400046e8
   140004fe3:	mov    ebx,eax
   140004fe5:	test   eax,eax
   140004fe7:	jns    0x140005014
   140004fe9:	xor    r9d,r9d
   140004fec:	mov    QWORD PTR [rdi],r14
   140004fef:	mov    r8,rsi
   140004ff2:	mov    DWORD PTR [rsp+0x20],r12d
   140004ff7:	lea    rdx,[rsp+0x40]
   140004ffc:	mov    rcx,rdi
   140004fff:	call   0x1400046e8
   140005004:	jmp    0x14000504a
   140005006:	xor    r9d,r9d
   140005009:	call   0x1400046e8
   14000500e:	mov    ebx,eax
   140005010:	test   eax,eax
   140005012:	js     0x14000504a
   140005014:	mov    rcx,QWORD PTR [rdi]
   140005017:	movzx  eax,WORD PTR [rcx]
   14000501a:	cmp    eax,0x20
   14000501d:	ja     0x14000503a
   14000501f:	movabs rdx,0x100002600
   140005029:	bt     rdx,rax
   14000502d:	jae    0x14000503a
   14000502f:	call   QWORD PTR [rip+0x8023]        # 0x14000d058
   140005035:	mov    QWORD PTR [rdi],rax
   140005038:	jmp    0x140005014
   14000503a:	cmp    r12w,WORD PTR [rcx]
   14000503e:	je     0x14000504a
   140005040:	jmp    0x140004f42
   140005045:	mov    ebx,0x80020009
   14000504a:	mov    rcx,rbp
   14000504d:	call   QWORD PTR [rip+0x8075]        # 0x14000d0c8
   140005053:	mov    eax,ebx
   140005055:	mov    rcx,QWORD PTR [rsp+0x2040]
   14000505d:	xor    rcx,rsp
   140005060:	call   0x14000b290
   140005065:	mov    rbx,QWORD PTR [rsp+0x20a8]
   14000506d:	add    rsp,0x2050
   140005074:	pop    r15
   140005076:	pop    r14
   140005078:	pop    r13
   14000507a:	pop    r12
   14000507c:	pop    rdi
   14000507d:	pop    rsi
   14000507e:	pop    rbp
   14000507f:	ret    
   140005080:	int3   
   140005081:	int3   
   140005082:	int3   
   140005083:	int3   
   140005084:	int3   
   140005085:	int3   
   140005086:	int3   
   140005087:	int3   
   140005088:	mov    rax,rsp
   14000508b:	push   rsi
   14000508c:	push   rdi
   14000508d:	push   r14
   14000508f:	sub    rsp,0x490
   140005096:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000509f:	mov    QWORD PTR [rax+0x8],rbx
   1400050a3:	mov    rax,QWORD PTR [rip+0xcf66]        # 0x140012010
   1400050aa:	xor    rax,rsp
   1400050ad:	mov    QWORD PTR [rsp+0x480],rax
   1400050b5:	mov    r14,r9
   1400050b8:	mov    rdi,r8
   1400050bb:	mov    rax,rdx
   1400050be:	xor    ebx,ebx
   1400050c0:	mov    QWORD PTR [rsp+0x60],rbx
   1400050c5:	mov    QWORD PTR [rsp+0x50],rcx
   1400050ca:	mov    QWORD PTR [rsp+0x48],rbx
   1400050cf:	mov    QWORD PTR [rsp+0x70],rbx
   1400050d4:	xor    edx,edx
   1400050d6:	lea    r8d,[rbx+0x2]
   1400050da:	mov    rcx,rax
   1400050dd:	call   QWORD PTR [rip+0x8065]        # 0x14000d148
   1400050e3:	mov    rsi,rax
   1400050e6:	mov    QWORD PTR [rsp+0x38],rax
   1400050eb:	test   rax,rax
   1400050ee:	jne    0x1400050fc
   1400050f0:	call   0x14000379c
   1400050f5:	mov    ebx,eax
   1400050f7:	jmp    0x14000522c
   1400050fc:	xor    r9d,r9d
   1400050ff:	mov    r8,rdi
   140005102:	mov    rdx,r14
   140005105:	mov    rcx,rax
   140005108:	call   QWORD PTR [rip+0x801a]        # 0x14000d128
   14000510e:	mov    rdi,rax
   140005111:	test   rax,rax
   140005114:	jne    0x140005120
   140005116:	call   0x14000379c
   14000511b:	jmp    0x140005220
   140005120:	mov    rdx,rax
   140005123:	mov    rcx,rsi
   140005126:	call   QWORD PTR [rip+0x802c]        # 0x14000d158
   14000512c:	mov    r14,rax
   14000512f:	mov    QWORD PTR [rsp+0x40],rax
   140005134:	test   rax,rax
   140005137:	je     0x140005116
   140005139:	mov    rdx,rdi
   14000513c:	mov    rcx,rsi
   14000513f:	call   QWORD PTR [rip+0x7ff3]        # 0x14000d138
   140005145:	mov    edi,eax
   140005147:	mov    DWORD PTR [rsp+0x30],eax
   14000514b:	inc    eax
   14000514d:	cmp    eax,edi
   14000514f:	jae    0x140005172
   140005151:	lea    rax,[rsp+0x78]
   140005156:	cmp    QWORD PTR [rsp+0x70],rax
   14000515b:	je     0x140005168
   14000515d:	lea    rcx,[rsp+0x70]
   140005162:	call   0x140003738
   140005167:	nop
   140005168:	mov    eax,0x8007000e
   14000516d:	jmp    0x140005245
   140005172:	mov    ecx,eax
   140005174:	test   eax,eax
   140005176:	je     0x1400051af
   140005178:	xor    edx,edx
   14000517a:	or     rax,0xffffffffffffffff
   14000517e:	div    rcx
   140005181:	cmp    rax,0x2
   140005185:	jb     0x1400051a5
   140005187:	lea    rdx,[rcx+rcx*1]
   14000518b:	cmp    rdx,0x400
   140005192:	jbe    0x1400051af
   140005194:	lea    rcx,[rsp+0x70]
   140005199:	call   0x140003768
   14000519e:	mov    rax,QWORD PTR [rsp+0x70]
   1400051a3:	jmp    0x1400051b9
   1400051a5:	mov    ecx,0x80070057
   1400051aa:	call   0x140004230
   1400051af:	lea    rax,[rsp+0x78]
   1400051b4:	mov    QWORD PTR [rsp+0x70],rax
   1400051b9:	jmp    0x1400051d0
   1400051bb:	xor    ebx,ebx
   1400051bd:	mov    rax,QWORD PTR [rsp+0x70]
   1400051c2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400051c7:	mov    r14,QWORD PTR [rsp+0x40]
   1400051cc:	mov    edi,DWORD PTR [rsp+0x30]
   1400051d0:	test   rax,rax
   1400051d3:	jne    0x1400051dc
   1400051d5:	mov    ebx,0x8007000e
   1400051da:	jmp    0x140005222
   1400051dc:	mov    DWORD PTR [rsp+0x28],edi
   1400051e0:	mov    QWORD PTR [rsp+0x20],rax
   1400051e5:	mov    r9d,edi
   1400051e8:	mov    r8,r14
   1400051eb:	xor    edx,edx
   1400051ed:	lea    ecx,[rdx+0x3]
   1400051f0:	call   QWORD PTR [rip+0x8082]        # 0x14000d278
   1400051f6:	test   eax,eax
   1400051f8:	je     0x140005116
   1400051fe:	mov    ecx,eax
   140005200:	mov    rax,QWORD PTR [rsp+0x70]
   140005205:	mov    WORD PTR [rax+rcx*2],bx
   140005209:	mov    r8d,DWORD PTR [rsp+0x4d0]
   140005211:	mov    rdx,QWORD PTR [rsp+0x70]
   140005216:	lea    rcx,[rsp+0x48]
   14000521b:	call   0x140004ec8
   140005220:	mov    ebx,eax
   140005222:	mov    rcx,rsi
   140005225:	call   QWORD PTR [rip+0x7f15]        # 0x14000d140
   14000522b:	nop
   14000522c:	lea    rax,[rsp+0x78]
   140005231:	cmp    QWORD PTR [rsp+0x70],rax
   140005236:	je     0x140005243
   140005238:	lea    rcx,[rsp+0x70]
   14000523d:	call   0x140003738
   140005242:	nop
   140005243:	mov    eax,ebx
   140005245:	mov    rcx,QWORD PTR [rsp+0x480]
   14000524d:	xor    rcx,rsp
   140005250:	call   0x14000b290
   140005255:	mov    rbx,QWORD PTR [rsp+0x4b0]
   14000525d:	add    rsp,0x490
   140005264:	pop    r14
   140005266:	pop    rdi
   140005267:	pop    rsi
   140005268:	ret    
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	mov    QWORD PTR [rsp+0x8],rbx
   140005275:	mov    QWORD PTR [rsp+0x10],rsi
   14000527a:	push   rbp
   14000527b:	push   rdi
   14000527c:	push   r14
   14000527e:	lea    rbp,[rsp-0x9d0]
   140005286:	sub    rsp,0xad0
   14000528d:	mov    rax,QWORD PTR [rip+0xcd7c]        # 0x140012010
   140005294:	xor    rax,rsp
   140005297:	mov    QWORD PTR [rbp+0x9c0],rax
   14000529e:	mov    rdi,QWORD PTR [rip+0xd773]        # 0x140012a18
   1400052a5:	lea    rax,[rip+0x86b4]        # 0x14000d960
   1400052ac:	xor    r14d,r14d
   1400052af:	mov    QWORD PTR [rsp+0x30],rax
   1400052b4:	mov    esi,r8d
   1400052b7:	mov    QWORD PTR [rsp+0x38],r14
   1400052bc:	xor    edx,edx
   1400052be:	mov    QWORD PTR [rsp+0x40],r14
   1400052c3:	lea    rcx,[rsp+0x50]
   1400052c8:	mov    DWORD PTR [rsp+0x48],r14d
   1400052cd:	lea    r8d,[r14+0x28]
   1400052d1:	mov    rbx,r9
   1400052d4:	call   0x14000b71c
   1400052d9:	lea    rcx,[rsp+0x50]
   1400052de:	mov    BYTE PTR [rsp+0x78],r14b
   1400052e3:	call   0x1400033bc
   1400052e8:	test   eax,eax
   1400052ea:	js     0x14000535a
   1400052ec:	mov    BYTE PTR [rsp+0x78],0x1
   1400052f1:	test   rbx,rbx
   1400052f4:	je     0x140005315
   1400052f6:	jmp    0x14000530d
   1400052f8:	mov    r8,QWORD PTR [rbx+0x8]
   1400052fc:	lea    rcx,[rsp+0x30]
   140005301:	mov    rdx,rax
   140005304:	call   0x1400036b0
   140005309:	lea    rbx,[rbx+0x10]
   14000530d:	mov    rax,QWORD PTR [rbx]
   140005310:	test   rax,rax
   140005313:	jne    0x1400052f8
   140005315:	mov    rax,QWORD PTR [rdi]
   140005318:	mov    rbx,QWORD PTR [rax+0x28]
   14000531c:	mov    rcx,rbx
   14000531f:	call   QWORD PTR [rip+0x8183]        # 0x14000d4a8
   140005325:	lea    rdx,[rsp+0x30]
   14000532a:	mov    rcx,rdi
   14000532d:	call   rbx
   14000532f:	mov    ebx,eax
   140005331:	test   eax,eax
   140005333:	js     0x14000535c
   140005335:	mov    rbx,QWORD PTR [rip+0xd87c]        # 0x140012bb8
   14000533c:	lea    rdx,[rbp-0x80]
   140005340:	mov    edi,0x104
   140005345:	mov    rcx,rbx
   140005348:	mov    r8d,edi
   14000534b:	call   QWORD PTR [rip+0x7e1f]        # 0x14000d170
   140005351:	test   eax,eax
   140005353:	jne    0x14000538f
   140005355:	call   0x14000379c
   14000535a:	mov    ebx,eax
   14000535c:	lea    rcx,[rsp+0x30]
   140005361:	call   0x140003314
   140005366:	mov    eax,ebx
   140005368:	mov    rcx,QWORD PTR [rbp+0x9c0]
   14000536f:	xor    rcx,rsp
   140005372:	call   0x14000b290
   140005377:	lea    r11,[rsp+0xad0]
   14000537f:	mov    rbx,QWORD PTR [r11+0x20]
   140005383:	mov    rsi,QWORD PTR [r11+0x28]
   140005387:	mov    rsp,r11
   14000538a:	pop    r14
   14000538c:	pop    rdi
   14000538d:	pop    rbp
   14000538e:	ret    
   14000538f:	cmp    eax,edi
   140005391:	jne    0x14000539a
   140005393:	mov    ebx,0x8007007a
   140005398:	jmp    0x14000535c
   14000539a:	lea    rdx,[rbp-0x80]
   14000539e:	mov    ecx,r14d
   1400053a1:	mov    r9d,0x27
   1400053a7:	movzx  r8d,WORD PTR [rdx]
   1400053ab:	test   r8w,r8w
   1400053af:	je     0x1400053e3
   1400053b1:	mov    eax,ecx
   1400053b3:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   1400053bc:	cmp    r8w,r9w
   1400053c0:	jne    0x1400053d5
   1400053c2:	cmp    ecx,0x206
   1400053c8:	jae    0x1400053d5
   1400053ca:	inc    ecx
   1400053cc:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   1400053d5:	add    rdx,0x2
   1400053d9:	inc    ecx
   1400053db:	cmp    ecx,0x207
   1400053e1:	jb     0x1400053a7
   1400053e3:	mov    eax,ecx
   1400053e5:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   1400053ee:	test   rbx,rbx
   1400053f1:	je     0x14000540c
   1400053f3:	xor    ecx,ecx
   1400053f5:	call   QWORD PTR [rip+0x7d35]        # 0x14000d130
   1400053fb:	cmp    rbx,rax
   1400053fe:	je     0x14000540c
   140005400:	lea    r8,[rbp+0x190]
   140005407:	jmp    0x14000549b
   14000540c:	mov    edi,0x22
   140005411:	lea    rcx,[rbp+0x190]
   140005418:	or     rbx,0xffffffffffffffff
   14000541c:	mov    WORD PTR [rbp+0x5a0],di
   140005423:	mov    rax,rbx
   140005426:	inc    rax
   140005429:	cmp    WORD PTR [rcx+rax*2],r14w
   14000542e:	jne    0x140005426
   140005430:	inc    eax
   140005432:	lea    r8,[rbp+0x190]
   140005439:	movsxd r9,eax
   14000543c:	lea    rcx,[rbp+0x5a2]
   140005443:	add    r9,r9
   140005446:	mov    edx,0x416
   14000544b:	call   QWORD PTR [rip+0x801f]        # 0x14000d470
   140005451:	test   eax,eax
   140005453:	je     0x14000545f
   140005455:	mov    ebx,0x80004005
   14000545a:	jmp    0x14000535c
   14000545f:	lea    rax,[rbp+0x5a0]
   140005466:	inc    rbx
   140005469:	cmp    WORD PTR [rax+rbx*2],r14w
   14000546e:	jne    0x140005466
   140005470:	movsxd rax,ebx
   140005473:	mov    WORD PTR [rbp+rax*2+0x5a0],di
   14000547b:	lea    rax,[rax*2+0x2]
   140005483:	cmp    rax,0x418
   140005489:	jae    0x140005507
   14000548b:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   140005494:	lea    r8,[rbp+0x5a0]
   14000549b:	lea    rdx,[rip+0x89be]        # 0x14000de60
   1400054a2:	lea    rcx,[rsp+0x30]
   1400054a7:	call   0x1400036b0
   1400054ac:	test   eax,eax
   1400054ae:	js     0x14000535a
   1400054b4:	lea    r8,[rbp+0x190]
   1400054bb:	lea    rdx,[rip+0x89ae]        # 0x14000de70
   1400054c2:	lea    rcx,[rsp+0x30]
   1400054c7:	call   0x1400036b0
   1400054cc:	test   eax,eax
   1400054ce:	js     0x14000535a
   1400054d4:	lea    r9,[rip+0x89ad]        # 0x14000de88
   1400054db:	mov    r8d,0x65
   1400054e1:	lea    rdx,[rbp-0x80]
   1400054e5:	lea    rcx,[rsp+0x30]
   1400054ea:	test   esi,esi
   1400054ec:	je     0x1400054f8
   1400054ee:	mov    DWORD PTR [rsp+0x20],0x1
   1400054f6:	jmp    0x1400054fd
   1400054f8:	mov    DWORD PTR [rsp+0x20],r14d
   1400054fd:	call   0x140005088
   140005502:	jmp    0x14000535a
   140005507:	call   0x14000b5d8
   14000550c:	int3   
   14000550d:	int3   
   14000550e:	int3   
   14000550f:	int3   
   140005510:	int3   
   140005511:	int3   
   140005512:	int3   
   140005513:	int3   
   140005514:	rex push rbx
   140005516:	sub    rsp,0x30
   14000551a:	and    QWORD PTR [rsp+0x20],0x0
   140005520:	lea    rdx,[rsp+0x20]
   140005525:	mov    rbx,rcx
   140005528:	call   QWORD PTR [rip+0x7f12]        # 0x14000d440
   14000552e:	lea    rax,[rip+0x84fb]        # 0x14000da30
   140005535:	mov    QWORD PTR [rbx],rax
   140005538:	mov    rax,rbx
   14000553b:	add    rsp,0x30
   14000553f:	pop    rbx
   140005540:	ret    
   140005541:	int3   
   140005542:	int3   
   140005543:	int3   
   140005544:	int3   
   140005545:	int3   
   140005546:	int3   
   140005547:	int3   
   140005548:	lea    rax,[rip+0x84e1]        # 0x14000da30
   14000554f:	mov    QWORD PTR [rcx],rax
   140005552:	rex.W jmp QWORD PTR [rip+0x7edf]        # 0x14000d438
   140005559:	int3   
   14000555a:	int3   
   14000555b:	int3   
   14000555c:	int3   
   14000555d:	int3   
   14000555e:	int3   
   14000555f:	int3   
   140005560:	mov    QWORD PTR [rsp+0x8],rbx
   140005565:	push   rdi
   140005566:	sub    rsp,0x20
   14000556a:	lea    rax,[rip+0x84bf]        # 0x14000da30
   140005571:	mov    ebx,edx
   140005573:	mov    QWORD PTR [rcx],rax
   140005576:	mov    rdi,rcx
   140005579:	call   QWORD PTR [rip+0x7eb9]        # 0x14000d438
   14000557f:	test   bl,0x1
   140005582:	je     0x14000558d
   140005584:	mov    rcx,rdi
   140005587:	call   QWORD PTR [rip+0x7edb]        # 0x14000d468
   14000558d:	mov    rax,rdi
   140005590:	mov    rbx,QWORD PTR [rsp+0x30]
   140005595:	add    rsp,0x20
   140005599:	pop    rdi
   14000559a:	ret    
   14000559b:	int3   
   14000559c:	int3   
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	int3   
   1400055a1:	int3   
   1400055a2:	int3   
   1400055a3:	int3   
   1400055a4:	int3   
   1400055a5:	int3   
   1400055a6:	int3   
   1400055a7:	int3   
   1400055a8:	int3   
   1400055a9:	int3   
   1400055aa:	int3   
   1400055ab:	int3   
   1400055ac:	int3   
   1400055ad:	int3   
   1400055ae:	int3   
   1400055af:	int3   
   1400055b0:	ret    0x0
   1400055b3:	int3   
   1400055b4:	int3   
   1400055b5:	int3   
   1400055b6:	int3   
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	mov    rax,rsp
   1400055bf:	push   rdi
   1400055c0:	push   r14
   1400055c2:	push   r15
   1400055c4:	sub    rsp,0xe0
   1400055cb:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400055d4:	mov    QWORD PTR [rax+0x18],rbx
   1400055d8:	mov    QWORD PTR [rax+0x20],rsi
   1400055dc:	mov    rax,QWORD PTR [rip+0xca2d]        # 0x140012010
   1400055e3:	xor    rax,rsp
   1400055e6:	mov    QWORD PTR [rsp+0xd0],rax
   1400055ee:	mov    rdi,rdx
   1400055f1:	mov    r14,rcx
   1400055f4:	xor    ebx,ebx
   1400055f6:	mov    DWORD PTR [rsp+0x20],ebx
   1400055fa:	mov    QWORD PTR [rcx],rbx
   1400055fd:	lea    r15d,[rbx+0x7]
   140005601:	mov    QWORD PTR [rsp+0x48],r15
   140005606:	mov    QWORD PTR [rsp+0x40],rbx
   14000560b:	mov    WORD PTR [rsp+0x30],bx
   140005610:	cmp    QWORD PTR [rdx+0x38],rbx
   140005614:	jne    0x140005643
   140005616:	mov    QWORD PTR [rsp+0x70],r15
   14000561b:	mov    QWORD PTR [rsp+0x68],rbx
   140005620:	mov    WORD PTR [rsp+0x58],bx
   140005625:	or     rsi,0xffffffffffffffff
   140005629:	mov    r9,rsi
   14000562c:	xor    r8d,r8d
   14000562f:	lea    rcx,[rsp+0x58]
   140005634:	call   0x140006384
   140005639:	lea    rax,[rsp+0x58]
   14000563e:	lea    edi,[rbx+0x1]
   140005641:	jmp    0x140005677
   140005643:	lea    rcx,[rsp+0xa8]
   14000564b:	call   0x140006f08
   140005650:	nop
   140005651:	mov    DWORD PTR [rsp+0x20],0x2
   140005659:	lea    r8,[rdi+0x28]
   14000565d:	mov    rdx,rax
   140005660:	lea    rcx,[rsp+0x80]
   140005668:	call   0x140006fbc
   14000566d:	nop
   14000566e:	mov    edi,0x6
   140005673:	or     rsi,0xffffffffffffffff
   140005677:	mov    DWORD PTR [rsp+0x20],edi
   14000567b:	mov    rdx,rax
   14000567e:	lea    rcx,[rsp+0x30]
   140005683:	call   0x1400062e4
   140005688:	nop
   140005689:	test   dil,0x4
   14000568d:	je     0x1400056c3
   14000568f:	and    edi,0xfffffffb
   140005692:	cmp    QWORD PTR [rsp+0x98],0x8
   14000569b:	jb     0x1400056ab
   14000569d:	mov    rcx,QWORD PTR [rsp+0x80]
   1400056a5:	call   QWORD PTR [rip+0x7dbd]        # 0x14000d468
   1400056ab:	mov    QWORD PTR [rsp+0x98],r15
   1400056b3:	mov    QWORD PTR [rsp+0x90],rbx
   1400056bb:	mov    WORD PTR [rsp+0x80],bx
   1400056c3:	test   dil,0x2
   1400056c7:	je     0x1400056fd
   1400056c9:	and    edi,0xfffffffd
   1400056cc:	cmp    QWORD PTR [rsp+0xc0],0x8
   1400056d5:	jb     0x1400056e5
   1400056d7:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400056df:	call   QWORD PTR [rip+0x7d83]        # 0x14000d468
   1400056e5:	mov    QWORD PTR [rsp+0xc0],r15
   1400056ed:	mov    QWORD PTR [rsp+0xb8],rbx
   1400056f5:	mov    WORD PTR [rsp+0xa8],bx
   1400056fd:	test   dil,0x1
   140005701:	je     0x140005717
   140005703:	cmp    QWORD PTR [rsp+0x70],0x8
   140005709:	jb     0x140005717
   14000570b:	mov    rcx,QWORD PTR [rsp+0x58]
   140005710:	call   QWORD PTR [rip+0x7d52]        # 0x14000d468
   140005716:	nop
   140005717:	mov    QWORD PTR [r14],rbx
   14000571a:	mov    rax,QWORD PTR [rsp+0x40]
   14000571f:	inc    rax
   140005722:	mov    ecx,0xffffffff
   140005727:	cmp    rax,rcx
   14000572a:	ja     0x14000579b
   14000572c:	mov    edi,eax
   14000572e:	mov    eax,eax
   140005730:	shl    rax,0x3
   140005734:	cmp    rax,rcx
   140005737:	jbe    0x14000573e
   140005739:	mov    rcx,rbx
   14000573c:	jmp    0x140005749
   14000573e:	mov    ecx,eax
   140005740:	call   QWORD PTR [rip+0x7972]        # 0x14000d0b8
   140005746:	mov    rcx,rax
   140005749:	mov    QWORD PTR [r14],rcx
   14000574c:	test   rcx,rcx
   14000574f:	jne    0x140005758
   140005751:	mov    ebx,0x8007000e
   140005756:	jmp    0x1400057a6
   140005758:	lea    r8,[rsp+0x30]
   14000575d:	cmp    QWORD PTR [rsp+0x48],0x8
   140005763:	cmovae r8,QWORD PTR [rsp+0x30]
   140005769:	test   r8,r8
   14000576c:	jne    0x140005772
   14000576e:	mov    esi,ebx
   140005770:	jmp    0x14000577c
   140005772:	inc    rsi
   140005775:	cmp    WORD PTR [r8+rsi*2],bx
   14000577a:	jne    0x140005772
   14000577c:	lea    eax,[rsi+0x1]
   14000577f:	movsxd r9,eax
   140005782:	add    r9,r9
   140005785:	lea    rdx,[rdi+rdi*1]
   140005789:	call   QWORD PTR [rip+0x7ce1]        # 0x14000d470
   14000578f:	mov    ecx,0x80004005
   140005794:	test   eax,eax
   140005796:	cmovne ebx,ecx
   140005799:	jmp    0x1400057a6
   14000579b:	mov    ebx,0x80070216
   1400057a0:	jmp    0x1400057a6
   1400057a2:	mov    ebx,DWORD PTR [rsp+0x20]
   1400057a6:	cmp    QWORD PTR [rsp+0x48],0x8
   1400057ac:	jb     0x1400057b9
   1400057ae:	mov    rcx,QWORD PTR [rsp+0x30]
   1400057b3:	call   QWORD PTR [rip+0x7caf]        # 0x14000d468
   1400057b9:	mov    eax,ebx
   1400057bb:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400057c3:	xor    rcx,rsp
   1400057c6:	call   0x14000b290
   1400057cb:	lea    r11,[rsp+0xe0]
   1400057d3:	mov    rbx,QWORD PTR [r11+0x30]
   1400057d7:	mov    rsi,QWORD PTR [r11+0x38]
   1400057db:	mov    rsp,r11
   1400057de:	pop    r15
   1400057e0:	pop    r14
   1400057e2:	pop    rdi
   1400057e3:	ret    
   1400057e4:	int3   
   1400057e5:	int3   
   1400057e6:	int3   
   1400057e7:	int3   
   1400057e8:	int3   
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	mov    DWORD PTR [rsp+0x18],r8d
   1400057f1:	push   rbp
   1400057f2:	mov    rbp,rsp
   1400057f5:	sub    rsp,0x60
   1400057f9:	mov    rax,QWORD PTR [rip+0xc810]        # 0x140012010
   140005800:	xor    rax,rsp
   140005803:	mov    QWORD PTR [rbp-0x10],rax
   140005807:	xor    edx,edx
   140005809:	mov    QWORD PTR [rbp-0x38],0x4
   140005811:	lea    rax,[rbp+0x20]
   140005815:	mov    QWORD PTR [rbp-0x40],rax
   140005819:	test   r9,r9
   14000581c:	je     0x140005835
   14000581e:	or     rax,0xffffffffffffffff
   140005822:	inc    rax
   140005825:	cmp    WORD PTR [r9+rax*2],dx
   14000582a:	jne    0x140005822
   14000582c:	lea    ecx,[rax*2+0x2]
   140005833:	jmp    0x14000583a
   140005835:	mov    ecx,0xa
   14000583a:	test   r9,r9
   14000583d:	mov    DWORD PTR [rbp-0x28],ecx
   140005840:	mov    rcx,QWORD PTR [rip+0xd239]        # 0x140012a80
   140005847:	lea    rax,[rip+0x8a1a]        # 0x14000e268
   14000584e:	cmovne rax,r9
   140005852:	mov    DWORD PTR [rbp-0x24],edx
   140005855:	mov    QWORD PTR [rbp-0x30],rax
   140005859:	lea    r9,[rbp-0x40]
   14000585d:	lea    rax,[rbp+0x30]
   140005861:	mov    QWORD PTR [rbp-0x18],0x4
   140005869:	mov    r8d,0x3
   14000586f:	mov    QWORD PTR [rbp-0x20],rax
   140005873:	lea    rdx,[rip+0x894e]        # 0x14000e1c8
   14000587a:	call   QWORD PTR [rip+0x7a98]        # 0x14000d318
   140005880:	mov    rcx,QWORD PTR [rbp-0x10]
   140005884:	xor    rcx,rsp
   140005887:	call   0x14000b290
   14000588c:	add    rsp,0x60
   140005890:	pop    rbp
   140005891:	ret    
   140005892:	int3   
   140005893:	int3   
   140005894:	int3   
   140005895:	int3   
   140005896:	int3   
   140005897:	int3   
   140005898:	mov    r11,rsp
   14000589b:	mov    DWORD PTR [r11+0x18],r8d
   14000589f:	sub    rsp,0x48
   1400058a3:	mov    rax,QWORD PTR [rip+0xc766]        # 0x140012010
   1400058aa:	xor    rax,rsp
   1400058ad:	mov    QWORD PTR [rsp+0x30],rax
   1400058b2:	mov    rcx,QWORD PTR [rip+0xd1c7]        # 0x140012a80
   1400058b9:	lea    rax,[r11+0x18]
   1400058bd:	mov    QWORD PTR [r11-0x28],rax
   1400058c1:	lea    r9,[r11-0x28]
   1400058c5:	and    DWORD PTR [rsp+0x2c],0x0
   1400058ca:	mov    r8d,0x1
   1400058d0:	mov    DWORD PTR [rsp+0x28],0x4
   1400058d8:	call   QWORD PTR [rip+0x7a3a]        # 0x14000d318
   1400058de:	mov    rcx,QWORD PTR [rsp+0x30]
   1400058e3:	xor    rcx,rsp
   1400058e6:	call   0x14000b290
   1400058eb:	add    rsp,0x48
   1400058ef:	ret    
   1400058f0:	int3   
   1400058f1:	int3   
   1400058f2:	int3   
   1400058f3:	int3   
   1400058f4:	int3   
   1400058f5:	int3   
   1400058f6:	int3   
   1400058f7:	int3   
   1400058f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400058fd:	push   rdi
   1400058fe:	sub    rsp,0x20
   140005902:	mov    rdi,QWORD PTR [rcx]
   140005905:	test   rdi,rdi
   140005908:	je     0x14000591f
   14000590a:	mov    rax,QWORD PTR [rdi]
   14000590d:	mov    rbx,QWORD PTR [rax+0x10]
   140005911:	mov    rcx,rbx
   140005914:	call   QWORD PTR [rip+0x7b8e]        # 0x14000d4a8
   14000591a:	mov    rcx,rdi
   14000591d:	call   rbx
   14000591f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005924:	add    rsp,0x20
   140005928:	pop    rdi
   140005929:	ret    
   14000592a:	int3   
   14000592b:	int3   
   14000592c:	int3   
   14000592d:	int3   
   14000592e:	int3   
   14000592f:	int3   
   140005930:	mov    QWORD PTR [rsp+0x8],rbx
   140005935:	mov    QWORD PTR [rsp+0x10],rbp
   14000593a:	mov    QWORD PTR [rsp+0x18],rsi
   14000593f:	push   rdi
   140005940:	sub    rsp,0x20
   140005944:	mov    rdi,QWORD PTR [rdx]
   140005947:	mov    rbp,rcx
   14000594a:	cmp    QWORD PTR [rcx+0x30],rdi
   14000594e:	je     0x14000598c
   140005950:	test   rdi,rdi
   140005953:	je     0x14000596a
   140005955:	mov    rax,QWORD PTR [rdi]
   140005958:	mov    rbx,QWORD PTR [rax+0x8]
   14000595c:	mov    rcx,rbx
   14000595f:	call   QWORD PTR [rip+0x7b43]        # 0x14000d4a8
   140005965:	mov    rcx,rdi
   140005968:	call   rbx
   14000596a:	mov    rsi,QWORD PTR [rbp+0x30]
   14000596e:	test   rsi,rsi
   140005971:	je     0x140005988
   140005973:	mov    rax,QWORD PTR [rsi]
   140005976:	mov    rbx,QWORD PTR [rax+0x10]
   14000597a:	mov    rcx,rbx
   14000597d:	call   QWORD PTR [rip+0x7b25]        # 0x14000d4a8
   140005983:	mov    rcx,rsi
   140005986:	call   rbx
   140005988:	mov    QWORD PTR [rbp+0x30],rdi
   14000598c:	mov    rsi,QWORD PTR [rbp+0x30]
   140005990:	mov    rax,QWORD PTR [rsi]
   140005993:	mov    rdi,QWORD PTR [rax]
   140005996:	mov    rcx,rdi
   140005999:	call   QWORD PTR [rip+0x7b09]        # 0x14000d4a8
   14000599f:	lea    r8,[rbp+0x38]
   1400059a3:	mov    rcx,rsi
   1400059a6:	lea    rdx,[rip+0x88ab]        # 0x14000e258
   1400059ad:	call   rdi
   1400059af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400059b4:	xor    eax,eax
   1400059b6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400059bb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400059c0:	add    rsp,0x20
   1400059c4:	pop    rdi
   1400059c5:	ret    
   1400059c6:	int3   
   1400059c7:	int3   
   1400059c8:	int3   
   1400059c9:	int3   
   1400059ca:	int3   
   1400059cb:	int3   
   1400059cc:	int3   
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400059d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400059da:	push   rdi
   1400059db:	sub    rsp,0x20
   1400059df:	mov    rdi,QWORD PTR [rcx+0x30]
   1400059e3:	mov    rsi,rdx
   1400059e6:	mov    rax,QWORD PTR [rdi]
   1400059e9:	mov    rbx,QWORD PTR [rax+0x48]
   1400059ed:	mov    rcx,rbx
   1400059f0:	call   QWORD PTR [rip+0x7ab2]        # 0x14000d4a8
   1400059f6:	mov    rdx,rsi
   1400059f9:	mov    rcx,rdi
   1400059fc:	mov    rax,rbx
   1400059ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a04:	mov    rsi,QWORD PTR [rsp+0x38]
   140005a09:	add    rsp,0x20
   140005a0d:	pop    rdi
   140005a0e:	rex.W jmp rax
   140005a11:	int3   
   140005a12:	int3   
   140005a13:	int3   
   140005a14:	int3   
   140005a15:	int3   
   140005a16:	int3   
   140005a17:	int3   
   140005a18:	int3   
   140005a19:	int3   
   140005a1a:	int3   
   140005a1b:	int3   
   140005a1c:	int3   
   140005a1d:	int3   
   140005a1e:	int3   
   140005a1f:	int3   
   140005a20:	mov    QWORD PTR [rsp+0x8],rbx
   140005a25:	mov    QWORD PTR [rsp+0x10],rsi
   140005a2a:	push   rdi
   140005a2b:	sub    rsp,0x20
   140005a2f:	mov    rdi,QWORD PTR [rcx+0x30]
   140005a33:	mov    rsi,rdx
   140005a36:	mov    rax,QWORD PTR [rdi]
   140005a39:	mov    rbx,QWORD PTR [rax+0x50]
   140005a3d:	mov    rcx,rbx
   140005a40:	call   QWORD PTR [rip+0x7a62]        # 0x14000d4a8
   140005a46:	mov    rdx,rsi
   140005a49:	mov    rcx,rdi
   140005a4c:	mov    rax,rbx
   140005a4f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a54:	mov    rsi,QWORD PTR [rsp+0x38]
   140005a59:	add    rsp,0x20
   140005a5d:	pop    rdi
   140005a5e:	rex.W jmp rax
   140005a61:	int3   
   140005a62:	int3   
   140005a63:	int3   
   140005a64:	int3   
   140005a65:	int3   
   140005a66:	int3   
   140005a67:	int3   
   140005a68:	int3   
   140005a69:	int3   
   140005a6a:	int3   
   140005a6b:	int3   
   140005a6c:	int3   
   140005a6d:	int3   
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	mov    QWORD PTR [rsp+0x8],rbx
   140005a75:	mov    QWORD PTR [rsp+0x10],rsi
   140005a7a:	push   rdi
   140005a7b:	sub    rsp,0x20
   140005a7f:	mov    rdi,QWORD PTR [rcx+0x30]
   140005a83:	mov    rsi,rdx
   140005a86:	mov    rax,QWORD PTR [rdi]
   140005a89:	mov    rbx,QWORD PTR [rax+0x40]
   140005a8d:	mov    rcx,rbx
   140005a90:	call   QWORD PTR [rip+0x7a12]        # 0x14000d4a8
   140005a96:	mov    rdx,rsi
   140005a99:	mov    rcx,rdi
   140005a9c:	mov    rax,rbx
   140005a9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005aa4:	mov    rsi,QWORD PTR [rsp+0x38]
   140005aa9:	add    rsp,0x20
   140005aad:	pop    rdi
   140005aae:	rex.W jmp rax
   140005ab1:	int3   
   140005ab2:	int3   
   140005ab3:	int3   
   140005ab4:	int3   
   140005ab5:	int3   
   140005ab6:	int3   
   140005ab7:	int3   
   140005ab8:	int3   
   140005ab9:	int3   
   140005aba:	int3   
   140005abb:	int3   
   140005abc:	int3   
   140005abd:	int3   
   140005abe:	int3   
   140005abf:	int3   
   140005ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ac5:	mov    QWORD PTR [rsp+0x10],rsi
   140005aca:	push   rdi
   140005acb:	sub    rsp,0x20
   140005acf:	mov    rdi,QWORD PTR [rcx+0x30]
   140005ad3:	mov    rsi,rdx
   140005ad6:	mov    rax,QWORD PTR [rdi]
   140005ad9:	mov    rbx,QWORD PTR [rax+0x18]
   140005add:	mov    rcx,rbx
   140005ae0:	call   QWORD PTR [rip+0x79c2]        # 0x14000d4a8
   140005ae6:	mov    rdx,rsi
   140005ae9:	mov    rcx,rdi
   140005aec:	mov    rax,rbx
   140005aef:	mov    rbx,QWORD PTR [rsp+0x30]
   140005af4:	mov    rsi,QWORD PTR [rsp+0x38]
   140005af9:	add    rsp,0x20
   140005afd:	pop    rdi
   140005afe:	rex.W jmp rax
   140005b01:	int3   
   140005b02:	int3   
   140005b03:	int3   
   140005b04:	int3   
   140005b05:	int3   
   140005b06:	int3   
   140005b07:	int3   
   140005b08:	int3   
   140005b09:	int3   
   140005b0a:	int3   
   140005b0b:	int3   
   140005b0c:	int3   
   140005b0d:	int3   
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	mov    QWORD PTR [rsp+0x8],rbx
   140005b15:	mov    QWORD PTR [rsp+0x10],rbp
   140005b1a:	mov    QWORD PTR [rsp+0x18],rsi
   140005b1f:	push   rdi
   140005b20:	sub    rsp,0x20
   140005b24:	mov    rdi,QWORD PTR [rcx+0x30]
   140005b28:	mov    rsi,r8
   140005b2b:	mov    rbp,rdx
   140005b2e:	mov    rax,QWORD PTR [rdi]
   140005b31:	mov    rbx,QWORD PTR [rax+0x20]
   140005b35:	mov    rcx,rbx
   140005b38:	call   QWORD PTR [rip+0x796a]        # 0x14000d4a8
   140005b3e:	mov    r8,rsi
   140005b41:	mov    rdx,rbp
   140005b44:	mov    rcx,rdi
   140005b47:	mov    rax,rbx
   140005b4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b4f:	mov    rbp,QWORD PTR [rsp+0x38]
   140005b54:	mov    rsi,QWORD PTR [rsp+0x40]
   140005b59:	add    rsp,0x20
   140005b5d:	pop    rdi
   140005b5e:	rex.W jmp rax
   140005b61:	int3   
   140005b62:	int3   
   140005b63:	int3   
   140005b64:	int3   
   140005b65:	int3   
   140005b66:	int3   
   140005b67:	int3   
   140005b68:	int3   
   140005b69:	int3   
   140005b6a:	int3   
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	mov    QWORD PTR [rsp+0x8],rbx
   140005b75:	mov    QWORD PTR [rsp+0x10],rbp
   140005b7a:	mov    QWORD PTR [rsp+0x18],rsi
   140005b7f:	push   rdi
   140005b80:	sub    rsp,0x20
   140005b84:	mov    rdi,QWORD PTR [rcx+0x30]
   140005b88:	mov    rsi,r8
   140005b8b:	mov    rbp,rdx
   140005b8e:	test   rdi,rdi
   140005b91:	je     0x140005b9c
   140005b93:	mov    rax,QWORD PTR [rdi]
   140005b96:	mov    rbx,QWORD PTR [rax+0x18]
   140005b9a:	jmp    0x140005ba7
   140005b9c:	mov    rdi,QWORD PTR [rcx+0x28]
   140005ba0:	mov    rax,QWORD PTR [rdi]
   140005ba3:	mov    rbx,QWORD PTR [rax+0x20]
   140005ba7:	mov    rcx,rbx
   140005baa:	call   QWORD PTR [rip+0x78f8]        # 0x14000d4a8
   140005bb0:	mov    r8,rsi
   140005bb3:	mov    rdx,rbp
   140005bb6:	mov    rcx,rdi
   140005bb9:	mov    rax,rbx
   140005bbc:	mov    rbx,QWORD PTR [rsp+0x30]
   140005bc1:	mov    rbp,QWORD PTR [rsp+0x38]
   140005bc6:	mov    rsi,QWORD PTR [rsp+0x40]
   140005bcb:	add    rsp,0x20
   140005bcf:	pop    rdi
   140005bd0:	rex.W jmp rax
   140005bd3:	int3   
   140005bd4:	int3   
   140005bd5:	int3   
   140005bd6:	int3   
   140005bd7:	int3   
   140005bd8:	int3   
   140005bd9:	int3   
   140005bda:	int3   
   140005bdb:	int3   
   140005bdc:	int3   
   140005bdd:	int3   
   140005bde:	int3   
   140005bdf:	int3   
   140005be0:	mov    QWORD PTR [rsp+0x8],rbx
   140005be5:	mov    QWORD PTR [rsp+0x10],rbp
   140005bea:	mov    QWORD PTR [rsp+0x18],rsi
   140005bef:	push   rdi
   140005bf0:	sub    rsp,0x20
   140005bf4:	mov    rdi,QWORD PTR [rcx+0x30]
   140005bf8:	mov    rsi,r8
   140005bfb:	mov    rbp,rdx
   140005bfe:	mov    rax,QWORD PTR [rdi]
   140005c01:	mov    rbx,QWORD PTR [rax+0x28]
   140005c05:	mov    rcx,rbx
   140005c08:	call   QWORD PTR [rip+0x789a]        # 0x14000d4a8
   140005c0e:	mov    r8,rsi
   140005c11:	mov    rdx,rbp
   140005c14:	mov    rcx,rdi
   140005c17:	mov    rax,rbx
   140005c1a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c1f:	mov    rbp,QWORD PTR [rsp+0x38]
   140005c24:	mov    rsi,QWORD PTR [rsp+0x40]
   140005c29:	add    rsp,0x20
   140005c2d:	pop    rdi
   140005c2e:	rex.W jmp rax
   140005c31:	int3   
   140005c32:	int3   
   140005c33:	int3   
   140005c34:	int3   
   140005c35:	int3   
   140005c36:	int3   
   140005c37:	int3   
   140005c38:	int3   
   140005c39:	int3   
   140005c3a:	int3   
   140005c3b:	int3   
   140005c3c:	int3   
   140005c3d:	int3   
   140005c3e:	int3   
   140005c3f:	int3   
   140005c40:	mov    QWORD PTR [rsp+0x8],rbx
   140005c45:	mov    QWORD PTR [rsp+0x10],rbp
   140005c4a:	mov    QWORD PTR [rsp+0x18],rsi
   140005c4f:	push   rdi
   140005c50:	sub    rsp,0x20
   140005c54:	mov    rdi,QWORD PTR [rcx+0x30]
   140005c58:	mov    rsi,r8
   140005c5b:	mov    rbp,rdx
   140005c5e:	mov    rax,QWORD PTR [rdi]
   140005c61:	mov    rbx,QWORD PTR [rax+0x30]
   140005c65:	mov    rcx,rbx
   140005c68:	call   QWORD PTR [rip+0x783a]        # 0x14000d4a8
   140005c6e:	mov    r8,rsi
   140005c71:	mov    rdx,rbp
   140005c74:	mov    rcx,rdi
   140005c77:	mov    rax,rbx
   140005c7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c7f:	mov    rbp,QWORD PTR [rsp+0x38]
   140005c84:	mov    rsi,QWORD PTR [rsp+0x40]
   140005c89:	add    rsp,0x20
   140005c8d:	pop    rdi
   140005c8e:	rex.W jmp rax
   140005c91:	int3   
   140005c92:	int3   
   140005c93:	int3   
   140005c94:	int3   
   140005c95:	int3   
   140005c96:	int3   
   140005c97:	int3   
   140005c98:	int3   
   140005c99:	int3   
   140005c9a:	int3   
   140005c9b:	int3   
   140005c9c:	int3   
   140005c9d:	int3   
   140005c9e:	int3   
   140005c9f:	int3   
   140005ca0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ca5:	mov    QWORD PTR [rsp+0x10],rbp
   140005caa:	mov    QWORD PTR [rsp+0x18],rsi
   140005caf:	push   rdi
   140005cb0:	sub    rsp,0x20
   140005cb4:	mov    rdi,QWORD PTR [rcx+0x30]
   140005cb8:	mov    sil,r8b
   140005cbb:	mov    rbp,rdx
   140005cbe:	mov    rax,QWORD PTR [rdi]
   140005cc1:	mov    rbx,QWORD PTR [rax+0x38]
   140005cc5:	mov    rcx,rbx
   140005cc8:	call   QWORD PTR [rip+0x77da]        # 0x14000d4a8
   140005cce:	mov    r8b,sil
   140005cd1:	mov    rdx,rbp
   140005cd4:	mov    rcx,rdi
   140005cd7:	mov    rax,rbx
   140005cda:	mov    rbx,QWORD PTR [rsp+0x30]
   140005cdf:	mov    rbp,QWORD PTR [rsp+0x38]
   140005ce4:	mov    rsi,QWORD PTR [rsp+0x40]
   140005ce9:	add    rsp,0x20
   140005ced:	pop    rdi
   140005cee:	rex.W jmp rax
   140005cf1:	int3   
   140005cf2:	int3   
   140005cf3:	int3   
   140005cf4:	int3   
   140005cf5:	int3   
   140005cf6:	int3   
   140005cf7:	int3   
   140005cf8:	int3   
   140005cf9:	int3   
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	int3   
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	mov    QWORD PTR [rsp+0x8],rbx
   140005d05:	mov    QWORD PTR [rsp+0x10],rbp
   140005d0a:	mov    QWORD PTR [rsp+0x18],rsi
   140005d0f:	push   rdi
   140005d10:	sub    rsp,0x20
   140005d14:	mov    rdi,QWORD PTR [rcx+0x30]
   140005d18:	mov    rsi,r8
   140005d1b:	mov    rbp,rdx
   140005d1e:	mov    rax,QWORD PTR [rdi]
   140005d21:	mov    rbx,QWORD PTR [rax+0x58]
   140005d25:	mov    rcx,rbx
   140005d28:	call   QWORD PTR [rip+0x777a]        # 0x14000d4a8
   140005d2e:	mov    r8,rsi
   140005d31:	mov    rdx,rbp
   140005d34:	mov    rcx,rdi
   140005d37:	mov    rax,rbx
   140005d3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d3f:	mov    rbp,QWORD PTR [rsp+0x38]
   140005d44:	mov    rsi,QWORD PTR [rsp+0x40]
   140005d49:	add    rsp,0x20
   140005d4d:	pop    rdi
   140005d4e:	rex.W jmp rax
   140005d51:	int3   
   140005d52:	int3   
   140005d53:	int3   
   140005d54:	int3   
   140005d55:	int3   
   140005d56:	int3   
   140005d57:	int3   
   140005d58:	int3   
   140005d59:	int3   
   140005d5a:	int3   
   140005d5b:	int3   
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	mov    QWORD PTR [rsp+0x8],rbx
   140005d65:	mov    QWORD PTR [rsp+0x10],rbp
   140005d6a:	mov    QWORD PTR [rsp+0x18],rsi
   140005d6f:	push   rdi
   140005d70:	sub    rsp,0x20
   140005d74:	mov    rdi,QWORD PTR [rcx+0x30]
   140005d78:	mov    rsi,r8
   140005d7b:	mov    ebp,edx
   140005d7d:	mov    rax,QWORD PTR [rdi]
   140005d80:	mov    rbx,QWORD PTR [rax+0x60]
   140005d84:	mov    rcx,rbx
   140005d87:	call   QWORD PTR [rip+0x771b]        # 0x14000d4a8
   140005d8d:	mov    r8,rsi
   140005d90:	mov    edx,ebp
   140005d92:	mov    rcx,rdi
   140005d95:	mov    rax,rbx
   140005d98:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d9d:	mov    rbp,QWORD PTR [rsp+0x38]
   140005da2:	mov    rsi,QWORD PTR [rsp+0x40]
   140005da7:	add    rsp,0x20
   140005dab:	pop    rdi
   140005dac:	rex.W jmp rax
   140005daf:	int3   
   140005db0:	int3   
   140005db1:	int3   
   140005db2:	int3   
   140005db3:	int3   
   140005db4:	int3   
   140005db5:	int3   
   140005db6:	int3   
   140005db7:	int3   
   140005db8:	int3   
   140005db9:	int3   
   140005dba:	int3   
   140005dbb:	int3   
   140005dbc:	int3   
   140005dbd:	int3   
   140005dbe:	int3   
   140005dbf:	int3   
   140005dc0:	mov    rax,rsp
   140005dc3:	mov    QWORD PTR [rax+0x20],r9
   140005dc7:	mov    DWORD PTR [rax+0x18],r8d
   140005dcb:	mov    DWORD PTR [rax+0x10],edx
   140005dce:	mov    QWORD PTR [rax+0x8],rcx
   140005dd2:	push   rbx
   140005dd3:	push   rsi
   140005dd4:	push   rdi
   140005dd5:	push   r12
   140005dd7:	push   r13
   140005dd9:	push   r15
   140005ddb:	sub    rsp,0x98
   140005de2:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140005deb:	mov    rbx,r9
   140005dee:	mov    edi,r8d
   140005df1:	mov    r15d,edx
   140005df4:	mov    r13,rcx
   140005df7:	test   BYTE PTR [rip+0xccc2],0x2        # 0x140012ac0
   140005dfe:	je     0x140005e0f
   140005e00:	mov    r8d,edx
   140005e03:	lea    rdx,[rip+0x83ae]        # 0x14000e1b8
   140005e0a:	call   0x140005898
   140005e0f:	xor    esi,esi
   140005e11:	lea    rcx,[rsp+0x68]
   140005e16:	call   0x14000615c
   140005e1b:	nop
   140005e1c:	mov    r12,rbx
   140005e1f:	lea    rcx,[rsp+0xd8]
   140005e27:	mov    eax,edi
   140005e29:	shl    rax,0x4
   140005e2d:	add    rax,rbx
   140005e30:	cmp    r12,rax
   140005e33:	je     0x140005efe
   140005e39:	cmp    DWORD PTR [rcx],0x3
   140005e3c:	sete   r9b
   140005e40:	lea    rcx,[r13+0x30]
   140005e44:	mov    r8,r12
   140005e47:	lea    rdx,[rsp+0x48]
   140005e4c:	call   0x1400060e4
   140005e51:	nop
   140005e52:	mov    r8,QWORD PTR [rsp+0x50]
   140005e57:	mov    rbx,QWORD PTR [r8]
   140005e5a:	mov    rdi,r8
   140005e5d:	cmp    rbx,rdi
   140005e60:	je     0x140005ec5
   140005e62:	lea    r9,[rbx+0x18]
   140005e66:	lea    rax,[rsp+0x68]
   140005e6b:	mov    r8,QWORD PTR [rax+0x8]
   140005e6f:	lea    rdx,[rsp+0x38]
   140005e74:	mov    rcx,rax
   140005e77:	call   0x1400075d4
   140005e7c:	cmp    BYTE PTR [rbx+0x69],0x0
   140005e80:	jne    0x140005e98
   140005e82:	mov    rax,QWORD PTR [rbx+0x10]
   140005e86:	cmp    BYTE PTR [rax+0x69],0x0
   140005e8a:	jne    0x140005ea7
   140005e8c:	mov    rbx,rax
   140005e8f:	mov    rax,QWORD PTR [rax]
   140005e92:	cmp    BYTE PTR [rax+0x69],0x0
   140005e96:	je     0x140005e8c
   140005e98:	mov    r15d,DWORD PTR [rsp+0xd8]
   140005ea0:	mov    r8,QWORD PTR [rsp+0x50]
   140005ea5:	jmp    0x140005e5d
   140005ea7:	mov    rax,QWORD PTR [rbx+0x8]
   140005eab:	jmp    0x140005eba
   140005ead:	cmp    rbx,QWORD PTR [rax+0x10]
   140005eb1:	jne    0x140005ec0
   140005eb3:	mov    rbx,rax
   140005eb6:	mov    rax,QWORD PTR [rax+0x8]
   140005eba:	cmp    BYTE PTR [rax+0x69],0x0
   140005ebe:	je     0x140005ead
   140005ec0:	mov    rbx,rax
   140005ec3:	jmp    0x140005e98
   140005ec5:	mov    r9,r8
   140005ec8:	mov    r8,QWORD PTR [r8]
   140005ecb:	lea    rdx,[rsp+0x40]
   140005ed0:	lea    rcx,[rsp+0x48]
   140005ed5:	call   0x1400066e0
   140005eda:	nop
   140005edb:	mov    rcx,QWORD PTR [rsp+0x50]
   140005ee0:	call   QWORD PTR [rip+0x7582]        # 0x14000d468
   140005ee6:	add    r12,0x10
   140005eea:	mov    rbx,QWORD PTR [rsp+0xe8]
   140005ef2:	mov    edi,DWORD PTR [rsp+0xe0]
   140005ef9:	jmp    0x140005e1f
   140005efe:	jmp    0x140005f17
   140005f00:	mov    r13,QWORD PTR [rsp+0xd0]
   140005f08:	mov    r15d,DWORD PTR [rsp+0xd8]
   140005f10:	mov    esi,DWORD PTR [rsp+0xe0]
   140005f17:	test   esi,esi
   140005f19:	js     0x14000600b
   140005f1f:	and    QWORD PTR [rsp+0xe8],0x0
   140005f28:	lea    rcx,[rsp+0xd0]
   140005f30:	call   0x140007eb0
   140005f35:	mov    esi,eax
   140005f37:	test   eax,eax
   140005f39:	js     0x140005f5a
   140005f3b:	mov    rbx,QWORD PTR [rsp+0xd0]
   140005f43:	mov    rax,QWORD PTR [rbx]
   140005f46:	mov    rdi,QWORD PTR [rax+0x8]
   140005f4a:	mov    rcx,rdi
   140005f4d:	call   QWORD PTR [rip+0x7555]        # 0x14000d4a8
   140005f53:	mov    rcx,rbx
   140005f56:	call   rdi
   140005f58:	jmp    0x140005f5c
   140005f5a:	xor    ebx,ebx
   140005f5c:	mov    QWORD PTR [rsp+0xe8],rbx
   140005f64:	test   esi,esi
   140005f66:	js     0x140005ff1
   140005f6c:	lea    rdx,[rsp+0x68]
   140005f71:	mov    rcx,rbx
   140005f74:	call   0x1400061d8
   140005f79:	mov    esi,eax
   140005f7b:	test   eax,eax
   140005f7d:	js     0x140005ff1
   140005f7f:	mov    rsi,QWORD PTR [r13+0x20]
   140005f83:	mov    rax,QWORD PTR [rsi]
   140005f86:	mov    rdi,QWORD PTR [rax+0x60]
   140005f8a:	mov    rcx,rdi
   140005f8d:	call   QWORD PTR [rip+0x7515]        # 0x14000d4a8
   140005f93:	mov    r8,rbx
   140005f96:	mov    edx,r15d
   140005f99:	mov    rcx,rsi
   140005f9c:	call   rdi
   140005f9e:	mov    esi,eax
   140005fa0:	test   eax,eax
   140005fa2:	jns    0x140005ff1
   140005fa4:	mov    rax,QWORD PTR [r13-0x10]
   140005fa8:	mov    rdi,QWORD PTR [rax+0x18]
   140005fac:	mov    rcx,rdi
   140005faf:	call   QWORD PTR [rip+0x74f3]        # 0x14000d4a8
   140005fb5:	lea    rdx,[rsp+0xd0]
   140005fbd:	lea    rcx,[r13-0x10]
   140005fc1:	call   rdi
   140005fc3:	mov    esi,eax
   140005fc5:	test   BYTE PTR [rip+0xcaf4],0x1        # 0x140012ac0
   140005fcc:	je     0x140005fe2
   140005fce:	mov    DWORD PTR [rsp+0x20],eax
   140005fd2:	mov    r9,QWORD PTR [rsp+0xd0]
   140005fda:	mov    r8d,r15d
   140005fdd:	call   0x1400057ec
   140005fe2:	mov    rcx,QWORD PTR [rsp+0xd0]
   140005fea:	call   QWORD PTR [rip+0x70d8]        # 0x14000d0c8
   140005ff0:	nop
   140005ff1:	test   rbx,rbx
   140005ff4:	je     0x14000600b
   140005ff6:	mov    rax,QWORD PTR [rbx]
   140005ff9:	mov    rdi,QWORD PTR [rax+0x10]
   140005ffd:	mov    rcx,rdi
   140006000:	call   QWORD PTR [rip+0x74a2]        # 0x14000d4a8
   140006006:	mov    rcx,rbx
   140006009:	call   rdi
   14000600b:	test   BYTE PTR [rip+0xcaae],0x2        # 0x140012ac0
   140006012:	je     0x140006024
   140006014:	mov    r8d,r15d
   140006017:	lea    rdx,[rip+0x818a]        # 0x14000e1a8
   14000601e:	call   0x140005898
   140006023:	nop
   140006024:	mov    r8,QWORD PTR [rsp+0x70]
   140006029:	mov    r9,r8
   14000602c:	mov    r8,QWORD PTR [r8]
   14000602f:	lea    rdx,[rsp+0xe8]
   140006037:	lea    rcx,[rsp+0x68]
   14000603c:	call   0x1400066e0
   140006041:	nop
   140006042:	mov    rcx,QWORD PTR [rsp+0x70]
   140006047:	call   QWORD PTR [rip+0x741b]        # 0x14000d468
   14000604d:	mov    eax,esi
   14000604f:	add    rsp,0x98
   140006056:	pop    r15
   140006058:	pop    r13
   14000605a:	pop    r12
   14000605c:	pop    rdi
   14000605d:	pop    rsi
   14000605e:	pop    rbx
   14000605f:	ret    
   140006060:	int3   
   140006061:	int3   
   140006062:	int3   
   140006063:	int3   
   140006064:	int3   
   140006065:	int3   
   140006066:	int3   
   140006067:	int3   
   140006068:	mov    QWORD PTR [rsp+0x8],rcx
   14000606d:	push   rbx
   14000606e:	sub    rsp,0x30
   140006072:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000607b:	mov    rbx,rcx
   14000607e:	mov    r8,QWORD PTR [rcx+0x8]
   140006082:	mov    r9,r8
   140006085:	mov    r8,QWORD PTR [r8]
   140006088:	lea    rdx,[rsp+0x48]
   14000608d:	call   0x1400066e0
   140006092:	nop
   140006093:	mov    rcx,QWORD PTR [rbx+0x8]
   140006097:	add    rsp,0x30
   14000609b:	pop    rbx
   14000609c:	rex.W jmp QWORD PTR [rip+0x73c5]        # 0x14000d468
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	rex push rbx
   1400060ae:	sub    rsp,0x20
   1400060b2:	cmp    QWORD PTR [rcx+0x18],0x8
   1400060b7:	mov    rbx,rcx
   1400060ba:	jb     0x1400060c5
   1400060bc:	mov    rcx,QWORD PTR [rcx]
   1400060bf:	call   QWORD PTR [rip+0x73a3]        # 0x14000d468
   1400060c5:	xor    eax,eax
   1400060c7:	mov    QWORD PTR [rbx+0x18],0x7
   1400060cf:	mov    QWORD PTR [rbx+0x10],rax
   1400060d3:	mov    WORD PTR [rbx],ax
   1400060d6:	add    rsp,0x20
   1400060da:	pop    rbx
   1400060db:	ret    
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	int3   
   1400060e1:	int3   
   1400060e2:	int3   
   1400060e3:	int3   
   1400060e4:	mov    rax,rsp
   1400060e7:	mov    QWORD PTR [rax+0x8],rbx
   1400060eb:	mov    QWORD PTR [rax+0x10],rbp
   1400060ef:	mov    QWORD PTR [rax+0x18],rsi
   1400060f3:	mov    QWORD PTR [rax+0x20],rdi
   1400060f7:	push   r14
   1400060f9:	sub    rsp,0x30
   1400060fd:	and    DWORD PTR [rsp+0x20],0x0
   140006102:	mov    bpl,r9b
   140006105:	mov    rsi,QWORD PTR [rcx+0x18]
   140006109:	mov    r14,r8
   14000610c:	mov    rdi,rdx
   14000610f:	test   rsi,rsi
   140006112:	je     0x140006150
   140006114:	mov    rax,QWORD PTR [rsi]
   140006117:	mov    rbx,QWORD PTR [rax+0x8]
   14000611b:	mov    rcx,rbx
   14000611e:	call   QWORD PTR [rip+0x7384]        # 0x14000d4a8
   140006124:	mov    r9b,bpl
   140006127:	mov    r8,r14
   14000612a:	mov    rdx,rdi
   14000612d:	mov    rcx,rsi
   140006130:	call   rbx
   140006132:	mov    rbx,QWORD PTR [rsp+0x40]
   140006137:	mov    rax,rdi
   14000613a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000613f:	mov    rbp,QWORD PTR [rsp+0x48]
   140006144:	mov    rsi,QWORD PTR [rsp+0x50]
   140006149:	add    rsp,0x30
   14000614d:	pop    r14
   14000614f:	ret    
   140006150:	call   0x14000ae90
   140006155:	int3   
   140006156:	int3   
   140006157:	int3   
   140006158:	int3   
   140006159:	int3   
   14000615a:	int3   
   14000615b:	int3   
   14000615c:	mov    QWORD PTR [rsp+0x8],rbx
   140006161:	push   rdi
   140006162:	sub    rsp,0x40
   140006166:	xor    edi,edi
   140006168:	mov    rbx,rcx
   14000616b:	mov    QWORD PTR [rcx+0x10],rdi
   14000616f:	lea    ecx,[rdi+0x70]
   140006172:	call   0x14000acbc
   140006177:	test   rax,rax
   14000617a:	je     0x1400061b3
   14000617c:	mov    QWORD PTR [rbx+0x8],rax
   140006180:	mov    QWORD PTR [rax],rax
   140006183:	mov    rax,QWORD PTR [rbx+0x8]
   140006187:	mov    QWORD PTR [rax+0x8],rax
   14000618b:	mov    rax,QWORD PTR [rbx+0x8]
   14000618f:	mov    QWORD PTR [rax+0x10],rax
   140006193:	mov    rax,QWORD PTR [rbx+0x8]
   140006197:	mov    BYTE PTR [rax+rdi*1+0x68],0x1
   14000619c:	inc    rdi
   14000619f:	cmp    rdi,0x2
   1400061a3:	jl     0x140006193
   1400061a5:	mov    rax,rbx
   1400061a8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400061ad:	add    rsp,0x40
   1400061b1:	pop    rdi
   1400061b2:	ret    
   1400061b3:	lea    rcx,[rsp+0x20]
   1400061b8:	call   0x140005514
   1400061bd:	lea    rdx,[rip+0xa7bc]        # 0x140010980
   1400061c4:	lea    rcx,[rsp+0x20]
   1400061c9:	call   0x14000b740
   1400061ce:	int3   
   1400061cf:	int3   
   1400061d0:	int3   
   1400061d1:	int3   
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	int3   
   1400061d5:	int3   
   1400061d6:	int3   
   1400061d7:	int3   
   1400061d8:	mov    rax,rsp
   1400061db:	mov    QWORD PTR [rax+0x8],rcx
   1400061df:	push   rdi
   1400061e0:	push   r14
   1400061e2:	push   r15
   1400061e4:	sub    rsp,0x30
   1400061e8:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400061f0:	mov    QWORD PTR [rax+0x18],rbx
   1400061f4:	mov    QWORD PTR [rax+0x20],rsi
   1400061f8:	mov    r14,rdx
   1400061fb:	mov    rsi,rcx
   1400061fe:	xor    ebx,ebx
   140006200:	lea    rdi,[rcx+0x8]
   140006204:	cmp    rdi,rdx
   140006207:	je     0x140006291
   14000620d:	mov    r8,QWORD PTR [rdi+0x8]
   140006211:	mov    r9,r8
   140006214:	mov    r8,QWORD PTR [r8]
   140006217:	lea    rdx,[rax+0x10]
   14000621b:	mov    rcx,rdi
   14000621e:	call   0x1400066e0
   140006223:	mov    rdx,QWORD PTR [r14+0x8]
   140006227:	mov    r15,QWORD PTR [rdi+0x8]
   14000622b:	mov    r8,r15
   14000622e:	mov    rdx,QWORD PTR [rdx+0x8]
   140006232:	mov    rcx,rdi
   140006235:	call   0x140006e08
   14000623a:	mov    QWORD PTR [r15+0x8],rax
   14000623e:	mov    rax,QWORD PTR [r14+0x10]
   140006242:	mov    QWORD PTR [rdi+0x10],rax
   140006246:	mov    rdx,QWORD PTR [rdi+0x8]
   14000624a:	mov    rax,QWORD PTR [rdx+0x8]
   14000624e:	cmp    BYTE PTR [rax+0x69],bl
   140006251:	jne    0x140006286
   140006253:	mov    rcx,QWORD PTR [rax]
   140006256:	jmp    0x14000625e
   140006258:	mov    rax,rcx
   14000625b:	mov    rcx,QWORD PTR [rcx]
   14000625e:	cmp    BYTE PTR [rcx+0x69],bl
   140006261:	je     0x140006258
   140006263:	mov    QWORD PTR [rdx],rax
   140006266:	mov    rdx,QWORD PTR [rdi+0x8]
   14000626a:	mov    rax,QWORD PTR [rdx+0x8]
   14000626e:	mov    rcx,QWORD PTR [rax+0x10]
   140006272:	jmp    0x14000627b
   140006274:	mov    rax,rcx
   140006277:	mov    rcx,QWORD PTR [rcx+0x10]
   14000627b:	cmp    BYTE PTR [rcx+0x69],bl
   14000627e:	je     0x140006274
   140006280:	mov    QWORD PTR [rdx+0x10],rax
   140006284:	jmp    0x140006291
   140006286:	mov    QWORD PTR [rdx],rdx
   140006289:	mov    rax,QWORD PTR [rdi+0x8]
   14000628d:	mov    QWORD PTR [rax+0x10],rax
   140006291:	jmp    0x14000629c
   140006293:	mov    rsi,QWORD PTR [rsp+0x50]
   140006298:	mov    ebx,DWORD PTR [rsp+0x58]
   14000629c:	mov    rcx,QWORD PTR [rsi+0x10]
   1400062a0:	mov    rdx,QWORD PTR [rcx]
   1400062a3:	mov    QWORD PTR [rsi+0x28],rdx
   1400062a7:	mov    eax,ebx
   1400062a9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400062ae:	mov    rsi,QWORD PTR [rsp+0x68]
   1400062b3:	add    rsp,0x30
   1400062b7:	pop    r15
   1400062b9:	pop    r14
   1400062bb:	pop    rdi
   1400062bc:	ret    
   1400062bd:	int3   
   1400062be:	int3   
   1400062bf:	int3   
   1400062c0:	int3   
   1400062c1:	int3   
   1400062c2:	int3   
   1400062c3:	int3   
   1400062c4:	int3   
   1400062c5:	int3   
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	int3   
   1400062c9:	int3   
   1400062ca:	int3   
   1400062cb:	int3   
   1400062cc:	int3   
   1400062cd:	int3   
   1400062ce:	int3   
   1400062cf:	int3   
   1400062d0:	mov    rax,QWORD PTR [rcx+0x10]
   1400062d4:	mov    rdx,QWORD PTR [rax]
   1400062d7:	xor    eax,eax
   1400062d9:	mov    QWORD PTR [rcx+0x28],rdx
   1400062dd:	ret    
   1400062de:	int3   
   1400062df:	int3   
   1400062e0:	int3   
   1400062e1:	int3   
   1400062e2:	int3   
   1400062e3:	int3   
   1400062e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400062e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400062ee:	push   rdi
   1400062ef:	sub    rsp,0x20
   1400062f3:	mov    rdi,rdx
   1400062f6:	mov    rbx,rcx
   1400062f9:	cmp    rcx,rdx
   1400062fc:	je     0x140006368
   1400062fe:	cmp    QWORD PTR [rcx+0x18],0x8
   140006303:	jb     0x14000630e
   140006305:	mov    rcx,QWORD PTR [rcx]
   140006308:	call   QWORD PTR [rip+0x715a]        # 0x14000d468
   14000630e:	xor    esi,esi
   140006310:	mov    QWORD PTR [rbx+0x18],0x7
   140006318:	mov    QWORD PTR [rbx+0x10],rsi
   14000631c:	mov    WORD PTR [rbx],si
   14000631f:	cmp    QWORD PTR [rdi+0x18],0x8
   140006324:	jae    0x140006340
   140006326:	mov    r8,QWORD PTR [rdi+0x10]
   14000632a:	mov    rdx,rdi
   14000632d:	mov    rcx,rbx
   140006330:	lea    r8,[r8*2+0x2]
   140006338:	call   QWORD PTR [rip+0x70f2]        # 0x14000d430
   14000633e:	jmp    0x140006349
   140006340:	mov    rax,QWORD PTR [rdi]
   140006343:	mov    QWORD PTR [rbx],rax
   140006346:	mov    QWORD PTR [rdi],rsi
   140006349:	mov    rax,QWORD PTR [rdi+0x10]
   14000634d:	mov    QWORD PTR [rbx+0x10],rax
   140006351:	mov    rax,QWORD PTR [rdi+0x18]
   140006355:	mov    QWORD PTR [rbx+0x18],rax
   140006359:	mov    QWORD PTR [rdi+0x18],0x7
   140006361:	mov    QWORD PTR [rdi+0x10],rsi
   140006365:	mov    WORD PTR [rdi],si
   140006368:	mov    rsi,QWORD PTR [rsp+0x38]
   14000636d:	mov    rax,rbx
   140006370:	mov    rbx,QWORD PTR [rsp+0x30]
   140006375:	add    rsp,0x20
   140006379:	pop    rdi
   14000637a:	ret    
   14000637b:	int3   
   14000637c:	int3   
   14000637d:	int3   
   14000637e:	int3   
   14000637f:	int3   
   140006380:	int3   
   140006381:	int3   
   140006382:	int3   
   140006383:	int3   
   140006384:	mov    QWORD PTR [rsp+0x8],rbx
   140006389:	mov    QWORD PTR [rsp+0x10],rbp
   14000638e:	mov    QWORD PTR [rsp+0x18],rsi
   140006393:	push   rdi
   140006394:	push   r14
   140006396:	push   r15
   140006398:	sub    rsp,0x20
   14000639c:	mov    rdi,QWORD PTR [rdx+0x10]
   1400063a0:	mov    rbp,r8
   1400063a3:	mov    rsi,rdx
   1400063a6:	mov    rbx,rcx
   1400063a9:	cmp    rdi,r8
   1400063ac:	jb     0x140006488
   1400063b2:	sub    rdi,r8
   1400063b5:	cmp    r9,rdi
   1400063b8:	cmovb  rdi,r9
   1400063bc:	cmp    rcx,rdx
   1400063bf:	jne    0x1400063e0
   1400063c1:	lea    rdx,[rdi+r8*1]
   1400063c5:	or     r8,0xffffffffffffffff
   1400063c9:	call   0x140006550
   1400063ce:	mov    r8,rbp
   1400063d1:	xor    edx,edx
   1400063d3:	mov    rcx,rbx
   1400063d6:	call   0x140006550
   1400063db:	jmp    0x14000646c
   1400063e0:	movabs rax,0x7ffffffffffffffe
   1400063ea:	cmp    rdi,rax
   1400063ed:	ja     0x14000648e
   1400063f3:	xor    r15d,r15d
   1400063f6:	cmp    QWORD PTR [rcx+0x18],rdi
   1400063fa:	jae    0x14000640a
   1400063fc:	mov    r8,QWORD PTR [rcx+0x10]
   140006400:	mov    rdx,rdi
   140006403:	call   0x140006804
   140006408:	jmp    0x140006426
   14000640a:	test   rdi,rdi
   14000640d:	jne    0x14000642b
   14000640f:	cmp    QWORD PTR [rcx+0x18],0x8
   140006414:	mov    QWORD PTR [rcx+0x10],r15
   140006418:	jb     0x14000641f
   14000641a:	mov    rax,QWORD PTR [rcx]
   14000641d:	jmp    0x140006422
   14000641f:	mov    rax,rcx
   140006422:	mov    WORD PTR [rax],r15w
   140006426:	test   rdi,rdi
   140006429:	je     0x14000646c
   14000642b:	cmp    QWORD PTR [rsi+0x18],0x8
   140006430:	jb     0x140006435
   140006432:	mov    rsi,QWORD PTR [rsi]
   140006435:	cmp    QWORD PTR [rbx+0x18],0x8
   14000643a:	jb     0x140006441
   14000643c:	mov    rcx,QWORD PTR [rbx]
   14000643f:	jmp    0x140006444
   140006441:	mov    rcx,rbx
   140006444:	lea    r14,[rdi+rdi*1]
   140006448:	mov    r8,r14
   14000644b:	lea    rdx,[rsi+rbp*2]
   14000644f:	call   0x14000bcc6
   140006454:	cmp    QWORD PTR [rbx+0x18],0x8
   140006459:	mov    QWORD PTR [rbx+0x10],rdi
   14000645d:	jb     0x140006464
   14000645f:	mov    rax,QWORD PTR [rbx]
   140006462:	jmp    0x140006467
   140006464:	mov    rax,rbx
   140006467:	mov    WORD PTR [r14+rax*1],r15w
   14000646c:	mov    rbp,QWORD PTR [rsp+0x48]
   140006471:	mov    rax,rbx
   140006474:	mov    rbx,QWORD PTR [rsp+0x40]
   140006479:	mov    rsi,QWORD PTR [rsp+0x50]
   14000647e:	add    rsp,0x20
   140006482:	pop    r15
   140006484:	pop    r14
   140006486:	pop    rdi
   140006487:	ret    
   140006488:	call   0x1400066c8
   14000648d:	int3   
   14000648e:	call   0x140006940
   140006493:	int3   
   140006494:	int3   
   140006495:	int3   
   140006496:	int3   
   140006497:	int3   
   140006498:	int3   
   140006499:	int3   
   14000649a:	int3   
   14000649b:	int3   
   14000649c:	mov    QWORD PTR [rsp+0x8],rbx
   1400064a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400064a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400064ab:	push   rdi
   1400064ac:	sub    rsp,0x20
   1400064b0:	xor    ebp,ebp
   1400064b2:	mov    rdi,r8
   1400064b5:	mov    rbx,rcx
   1400064b8:	test   dl,dl
   1400064ba:	je     0x1400064df
   1400064bc:	cmp    QWORD PTR [rcx+0x18],0x8
   1400064c1:	jb     0x1400064df
   1400064c3:	mov    rsi,QWORD PTR [rcx]
   1400064c6:	test   r8,r8
   1400064c9:	je     0x1400064d6
   1400064cb:	add    r8,r8
   1400064ce:	mov    rdx,rsi
   1400064d1:	call   0x14000bcc6
   1400064d6:	mov    rcx,rsi
   1400064d9:	call   QWORD PTR [rip+0x6f89]        # 0x14000d468
   1400064df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400064e4:	mov    QWORD PTR [rbx+0x18],0x7
   1400064ec:	mov    QWORD PTR [rbx+0x10],rdi
   1400064f0:	mov    WORD PTR [rbx+rdi*2],bp
   1400064f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400064f9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400064fe:	add    rsp,0x20
   140006502:	pop    rdi
   140006503:	ret    
   140006504:	int3   
   140006505:	int3   
   140006506:	int3   
   140006507:	int3   
   140006508:	int3   
   140006509:	int3   
   14000650a:	int3   
   14000650b:	int3   
   14000650c:	mov    rcx,QWORD PTR [rcx+0x8]
   140006510:	rex.W jmp QWORD PTR [rip+0x6f51]        # 0x14000d468
   140006517:	int3   
   140006518:	int3   
   140006519:	int3   
   14000651a:	int3   
   14000651b:	int3   
   14000651c:	int3   
   14000651d:	int3   
   14000651e:	int3   
   14000651f:	int3   
   140006520:	rex push rbx
   140006522:	sub    rsp,0x20
   140006526:	lea    rax,[rip+0x74d3]        # 0x14000da00
   14000652d:	mov    rbx,rcx
   140006530:	mov    QWORD PTR [rcx],rax
   140006533:	test   dl,0x1
   140006536:	je     0x14000653e
   140006538:	call   QWORD PTR [rip+0x6f2a]        # 0x14000d468
   14000653e:	mov    rax,rbx
   140006541:	add    rsp,0x20
   140006545:	pop    rbx
   140006546:	ret    
   140006547:	int3   
   140006548:	int3   
   140006549:	int3   
   14000654a:	int3   
   14000654b:	int3   
   14000654c:	int3   
   14000654d:	int3   
   14000654e:	int3   
   14000654f:	int3   
   140006550:	mov    QWORD PTR [rsp+0x8],rbx
   140006555:	mov    QWORD PTR [rsp+0x10],rsi
   14000655a:	push   rdi
   14000655b:	sub    rsp,0x20
   14000655f:	mov    rdi,r8
   140006562:	mov    r9,rdx
   140006565:	mov    r8,QWORD PTR [rcx+0x10]
   140006569:	mov    rbx,rcx
   14000656c:	cmp    r8,rdx
   14000656f:	jb     0x1400065e4
   140006571:	sub    r8,rdx
   140006574:	cmp    r8,rdi
   140006577:	cmovb  rdi,r8
   14000657b:	xor    esi,esi
   14000657d:	test   rdi,rdi
   140006580:	je     0x1400065d1
   140006582:	cmp    QWORD PTR [rcx+0x18],0x8
   140006587:	jb     0x14000658e
   140006589:	mov    rdx,QWORD PTR [rcx]
   14000658c:	jmp    0x140006591
   14000658e:	mov    rdx,rcx
   140006591:	cmp    QWORD PTR [rcx+0x18],0x8
   140006596:	jb     0x14000659b
   140006598:	mov    rcx,QWORD PTR [rcx]
   14000659b:	sub    r8,rdi
   14000659e:	lea    rax,[r9+rdi*1]
   1400065a2:	add    r8,r8
   1400065a5:	lea    rdx,[rdx+rax*2]
   1400065a9:	lea    rcx,[rcx+r9*2]
   1400065ad:	call   QWORD PTR [rip+0x6e7d]        # 0x14000d430
   1400065b3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400065b7:	sub    rcx,rdi
   1400065ba:	cmp    QWORD PTR [rbx+0x18],0x8
   1400065bf:	mov    QWORD PTR [rbx+0x10],rcx
   1400065c3:	jb     0x1400065ca
   1400065c5:	mov    rax,QWORD PTR [rbx]
   1400065c8:	jmp    0x1400065cd
   1400065ca:	mov    rax,rbx
   1400065cd:	mov    WORD PTR [rax+rcx*2],si
   1400065d1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400065d6:	mov    rax,rbx
   1400065d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400065de:	add    rsp,0x20
   1400065e2:	pop    rdi
   1400065e3:	ret    
   1400065e4:	call   0x1400066c8
   1400065e9:	int3   
   1400065ea:	int3   
   1400065eb:	int3   
   1400065ec:	int3   
   1400065ed:	int3   
   1400065ee:	int3   
   1400065ef:	int3   
   1400065f0:	mov    rax,rsp
   1400065f3:	mov    QWORD PTR [rax+0x8],rbx
   1400065f7:	mov    QWORD PTR [rax+0x10],rbp
   1400065fb:	mov    QWORD PTR [rax+0x18],rsi
   1400065ff:	mov    QWORD PTR [rax+0x20],rdi
   140006603:	push   r14
   140006605:	sub    rsp,0x20
   140006609:	movabs rax,0x7ffffffffffffffe
   140006613:	mov    rsi,rdx
   140006616:	mov    rbx,rcx
   140006619:	cmp    rdx,rax
   14000661c:	ja     0x1400066b9
   140006622:	xor    edi,edi
   140006624:	cmp    QWORD PTR [rcx+0x18],rdx
   140006628:	jae    0x140006635
   14000662a:	mov    r8,QWORD PTR [rcx+0x10]
   14000662e:	call   0x140006804
   140006633:	jmp    0x140006698
   140006635:	test   r8b,r8b
   140006638:	je     0x140006682
   14000663a:	cmp    rdx,0x8
   14000663e:	jae    0x140006682
   140006640:	mov    r14,QWORD PTR [rcx+0x10]
   140006644:	cmp    rdx,r14
   140006647:	cmovb  r14,rdx
   14000664b:	cmp    QWORD PTR [rcx+0x18],0x8
   140006650:	jb     0x14000666f
   140006652:	mov    rbp,QWORD PTR [rcx]
   140006655:	test   r14,r14
   140006658:	je     0x140006666
   14000665a:	lea    r8,[r14+r14*1]
   14000665e:	mov    rdx,rbp
   140006661:	call   0x14000bcc6
   140006666:	mov    rcx,rbp
   140006669:	call   QWORD PTR [rip+0x6df9]        # 0x14000d468
   14000666f:	mov    QWORD PTR [rbx+0x18],0x7
   140006677:	mov    QWORD PTR [rbx+0x10],r14
   14000667b:	mov    WORD PTR [rbx+r14*2],di
   140006680:	jmp    0x140006698
   140006682:	test   rdx,rdx
   140006685:	jne    0x140006698
   140006687:	cmp    QWORD PTR [rcx+0x18],0x8
   14000668c:	mov    QWORD PTR [rcx+0x10],rdi
   140006690:	jb     0x140006695
   140006692:	mov    rbx,QWORD PTR [rcx]
   140006695:	mov    WORD PTR [rbx],di
   140006698:	mov    rbx,QWORD PTR [rsp+0x30]
   14000669d:	test   rsi,rsi
   1400066a0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400066a5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400066aa:	setne  al
   1400066ad:	mov    rdi,QWORD PTR [rsp+0x48]
   1400066b2:	add    rsp,0x20
   1400066b6:	pop    r14
   1400066b8:	ret    
   1400066b9:	call   0x140006940
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	int3   
   1400066c1:	int3   
   1400066c2:	int3   
   1400066c3:	int3   
   1400066c4:	int3   
   1400066c5:	int3   
   1400066c6:	int3   
   1400066c7:	int3   
   1400066c8:	sub    rsp,0x28
   1400066cc:	lea    rcx,[rip+0x7ba5]        # 0x14000e278
   1400066d3:	call   0x14000ae14
   1400066d8:	int3   
   1400066d9:	int3   
   1400066da:	int3   
   1400066db:	int3   
   1400066dc:	int3   
   1400066dd:	int3   
   1400066de:	int3   
   1400066df:	int3   
   1400066e0:	mov    QWORD PTR [rsp+0x10],rsi
   1400066e5:	mov    QWORD PTR [rsp+0x20],r9
   1400066ea:	mov    QWORD PTR [rsp+0x18],r8
   1400066ef:	push   rdi
   1400066f0:	push   r14
   1400066f2:	push   r15
   1400066f4:	sub    rsp,0x20
   1400066f8:	mov    rsi,QWORD PTR [rcx+0x8]
   1400066fc:	mov    r15,rdx
   1400066ff:	mov    rdi,rcx
   140006702:	cmp    r8,QWORD PTR [rsi]
   140006705:	jne    0x14000676c
   140006707:	cmp    r9,rsi
   14000670a:	jne    0x14000676c
   14000670c:	mov    rsi,QWORD PTR [rsi+0x8]
   140006710:	mov    r14,rsi
   140006713:	cmp    BYTE PTR [rsi+0x69],0x0
   140006717:	jne    0x140006744
   140006719:	mov    rdx,QWORD PTR [r14+0x10]
   14000671d:	mov    rcx,rdi
   140006720:	call   0x140006e9c
   140006725:	mov    r14,QWORD PTR [r14]
   140006728:	lea    rdx,[rsi+0x18]
   14000672c:	call   0x1400072f4
   140006731:	mov    rcx,rsi
   140006734:	call   QWORD PTR [rip+0x6d2e]        # 0x14000d468
   14000673a:	cmp    BYTE PTR [r14+0x69],0x0
   14000673f:	mov    rsi,r14
   140006742:	je     0x140006719
   140006744:	mov    rax,QWORD PTR [rdi+0x8]
   140006748:	mov    QWORD PTR [rax+0x8],rax
   14000674c:	mov    rax,QWORD PTR [rdi+0x8]
   140006750:	mov    QWORD PTR [rax],rax
   140006753:	mov    rax,QWORD PTR [rdi+0x8]
   140006757:	mov    QWORD PTR [rax+0x10],rax
   14000675b:	mov    rax,QWORD PTR [rdi+0x8]
   14000675f:	and    QWORD PTR [rdi+0x10],0x0
   140006764:	mov    rcx,QWORD PTR [rax]
   140006767:	mov    QWORD PTR [r15],rcx
   14000676a:	jmp    0x1400067da
   14000676c:	cmp    r8,r9
   14000676f:	je     0x1400067d7
   140006771:	cmp    BYTE PTR [r8+0x69],0x0
   140006776:	mov    rax,r8
   140006779:	jne    0x1400067bb
   14000677b:	mov    rcx,QWORD PTR [r8+0x10]
   14000677f:	cmp    BYTE PTR [rcx+0x69],0x0
   140006783:	jne    0x140006798
   140006785:	mov    rdx,QWORD PTR [rcx]
   140006788:	jmp    0x140006790
   14000678a:	mov    rcx,rdx
   14000678d:	mov    rdx,QWORD PTR [rdx]
   140006790:	cmp    BYTE PTR [rdx+0x69],0x0
   140006794:	je     0x14000678a
   140006796:	jmp    0x1400067b6
   140006798:	mov    rcx,QWORD PTR [r8+0x8]
   14000679c:	jmp    0x1400067b0
   14000679e:	cmp    r8,QWORD PTR [rcx+0x10]
   1400067a2:	jne    0x1400067b6
   1400067a4:	mov    r8,rcx
   1400067a7:	mov    QWORD PTR [rsp+0x50],rcx
   1400067ac:	mov    rcx,QWORD PTR [rcx+0x8]
   1400067b0:	cmp    BYTE PTR [rcx+0x69],0x0
   1400067b4:	je     0x14000679e
   1400067b6:	mov    QWORD PTR [rsp+0x50],rcx
   1400067bb:	mov    r8,rax
   1400067be:	lea    rdx,[rsp+0x40]
   1400067c3:	mov    rcx,rdi
   1400067c6:	call   0x140006958
   1400067cb:	mov    r8,QWORD PTR [rsp+0x50]
   1400067d0:	cmp    r8,QWORD PTR [rsp+0x58]
   1400067d5:	jne    0x140006771
   1400067d7:	mov    QWORD PTR [r15],r8
   1400067da:	mov    rax,r15
   1400067dd:	mov    rsi,QWORD PTR [rsp+0x48]
   1400067e2:	add    rsp,0x20
   1400067e6:	pop    r15
   1400067e8:	pop    r14
   1400067ea:	pop    rdi
   1400067eb:	ret    
   1400067ec:	int3   
   1400067ed:	int3   
   1400067ee:	int3   
   1400067ef:	int3   
   1400067f0:	int3   
   1400067f1:	int3   
   1400067f2:	int3   
   1400067f3:	int3   
   1400067f4:	mov    rcx,rdx
   1400067f7:	rex.W jmp QWORD PTR [rip+0x6c6a]        # 0x14000d468
   1400067fe:	int3   
   1400067ff:	int3   
   140006800:	int3   
   140006801:	int3   
   140006802:	int3   
   140006803:	int3   
   140006804:	mov    rax,rsp
   140006807:	mov    QWORD PTR [rax+0x18],r8
   14000680b:	mov    QWORD PTR [rax+0x10],rdx
   14000680f:	mov    QWORD PTR [rax+0x8],rcx
   140006813:	push   rbx
   140006814:	push   rsi
   140006815:	push   rdi
   140006816:	push   r14
   140006818:	push   r15
   14000681a:	sub    rsp,0x60
   14000681e:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   140006826:	mov    r15,r8
   140006829:	mov    rbx,rcx
   14000682c:	mov    rdi,rdx
   14000682f:	or     rdi,0x7
   140006833:	movabs r9,0x7ffffffffffffffe
   14000683d:	cmp    rdi,r9
   140006840:	jbe    0x140006847
   140006842:	mov    rdi,rdx
   140006845:	jmp    0x140006878
   140006847:	mov    r8,QWORD PTR [rcx+0x18]
   14000684b:	mov    rcx,r8
   14000684e:	shr    rcx,1
   140006851:	movabs rax,0xaaaaaaaaaaaaaaab
   14000685b:	mul    rdi
   14000685e:	shr    rdx,1
   140006861:	cmp    rcx,rdx
   140006864:	jbe    0x140006878
   140006866:	mov    rax,r9
   140006869:	sub    rax,rcx
   14000686c:	cmp    r8,rax
   14000686f:	lea    rdi,[rcx+r8*1]
   140006873:	jbe    0x140006878
   140006875:	mov    rdi,r9
   140006878:	lea    rcx,[rdi+0x1]
   14000687c:	xor    esi,esi
   14000687e:	mov    r14d,esi
   140006881:	test   rcx,rcx
   140006884:	je     0x1400068c1
   140006886:	movabs rax,0x7fffffffffffffff
   140006890:	cmp    rcx,rax
   140006893:	ja     0x1400068a5
   140006895:	add    rcx,rcx
   140006898:	call   0x14000acbc
   14000689d:	mov    r14,rax
   1400068a0:	test   rax,rax
   1400068a3:	jne    0x1400068c1
   1400068a5:	lea    rcx,[rsp+0x28]
   1400068aa:	call   0x140005514
   1400068af:	lea    rdx,[rip+0xa0ca]        # 0x140010980
   1400068b6:	lea    rcx,[rsp+0x28]
   1400068bb:	call   0x14000b740
   1400068c0:	nop
   1400068c1:	jmp    0x1400068e5
   1400068c3:	xor    esi,esi
   1400068c5:	mov    rbx,QWORD PTR [rsp+0x90]
   1400068cd:	mov    r15,QWORD PTR [rsp+0xa0]
   1400068d5:	mov    rdi,QWORD PTR [rsp+0x98]
   1400068dd:	mov    r14,QWORD PTR [rsp+0xa8]
   1400068e5:	test   r15,r15
   1400068e8:	je     0x140006905
   1400068ea:	cmp    QWORD PTR [rbx+0x18],0x8
   1400068ef:	jb     0x1400068f6
   1400068f1:	mov    rdx,QWORD PTR [rbx]
   1400068f4:	jmp    0x1400068f9
   1400068f6:	mov    rdx,rbx
   1400068f9:	lea    r8,[r15+r15*1]
   1400068fd:	mov    rcx,r14
   140006900:	call   0x14000bcc6
   140006905:	cmp    QWORD PTR [rbx+0x18],0x8
   14000690a:	jb     0x140006915
   14000690c:	mov    rcx,QWORD PTR [rbx]
   14000690f:	call   QWORD PTR [rip+0x6b53]        # 0x14000d468
   140006915:	mov    QWORD PTR [rbx],r14
   140006918:	mov    QWORD PTR [rbx+0x18],rdi
   14000691c:	mov    QWORD PTR [rbx+0x10],r15
   140006920:	cmp    rdi,0x8
   140006924:	cmovae rbx,r14
   140006928:	mov    WORD PTR [rbx+r15*2],si
   14000692d:	add    rsp,0x60
   140006931:	pop    r15
   140006933:	pop    r14
   140006935:	pop    rdi
   140006936:	pop    rsi
   140006937:	pop    rbx
   140006938:	ret    
   140006939:	int3   
   14000693a:	int3   
   14000693b:	int3   
   14000693c:	int3   
   14000693d:	int3   
   14000693e:	int3   
   14000693f:	int3   
   140006940:	sub    rsp,0x28
   140006944:	lea    rcx,[rip+0x7945]        # 0x14000e290
   14000694b:	call   0x14000ade8
   140006950:	int3   
   140006951:	int3   
   140006952:	int3   
   140006953:	int3   
   140006954:	int3   
   140006955:	int3   
   140006956:	int3   
   140006957:	int3   
   140006958:	mov    rax,rsp
   14000695b:	mov    QWORD PTR [rax+0x8],rbx
   14000695f:	mov    QWORD PTR [rax+0x10],rbp
   140006963:	mov    QWORD PTR [rax+0x20],rsi
   140006967:	mov    QWORD PTR [rax+0x18],r8
   14000696b:	push   rdi
   14000696c:	sub    rsp,0x20
   140006970:	xor    ebp,ebp
   140006972:	mov    rsi,rdx
   140006975:	mov    rdi,rcx
   140006978:	cmp    BYTE PTR [r8+0x69],bpl
   14000697c:	jne    0x140006df4
   140006982:	lea    rcx,[r8+0x10]
   140006986:	mov    rbx,r8
   140006989:	mov    r9,QWORD PTR [rcx]
   14000698c:	cmp    BYTE PTR [r9+0x69],bpl
   140006990:	jne    0x1400069a5
   140006992:	mov    rax,QWORD PTR [r9]
   140006995:	jmp    0x14000699d
   140006997:	mov    r9,rax
   14000699a:	mov    rax,QWORD PTR [rax]
   14000699d:	cmp    BYTE PTR [rax+0x69],bpl
   1400069a1:	je     0x140006997
   1400069a3:	jmp    0x1400069c3
   1400069a5:	mov    r9,QWORD PTR [r8+0x8]
   1400069a9:	jmp    0x1400069bd
   1400069ab:	cmp    r8,QWORD PTR [r9+0x10]
   1400069af:	jne    0x1400069c3
   1400069b1:	mov    r8,r9
   1400069b4:	mov    QWORD PTR [rsp+0x40],r9
   1400069b9:	mov    r9,QWORD PTR [r9+0x8]
   1400069bd:	cmp    BYTE PTR [r9+0x69],bpl
   1400069c1:	je     0x1400069ab
   1400069c3:	mov    QWORD PTR [rsp+0x40],r9
   1400069c8:	mov    rdx,QWORD PTR [rbx]
   1400069cb:	cmp    BYTE PTR [rdx+0x69],bpl
   1400069cf:	je     0x1400069d6
   1400069d1:	mov    r8,QWORD PTR [rcx]
   1400069d4:	jmp    0x1400069f1
   1400069d6:	mov    rax,QWORD PTR [rcx]
   1400069d9:	cmp    BYTE PTR [rax+0x69],bpl
   1400069dd:	je     0x1400069e4
   1400069df:	mov    r8,rdx
   1400069e2:	jmp    0x1400069f1
   1400069e4:	mov    r8,QWORD PTR [r9+0x10]
   1400069e8:	cmp    r9,rbx
   1400069eb:	jne    0x140006a7d
   1400069f1:	mov    rdx,QWORD PTR [rbx+0x8]
   1400069f5:	cmp    BYTE PTR [r8+0x69],bpl
   1400069f9:	jne    0x1400069ff
   1400069fb:	mov    QWORD PTR [r8+0x8],rdx
   1400069ff:	mov    rax,QWORD PTR [rdi+0x8]
   140006a03:	cmp    QWORD PTR [rax+0x8],rbx
   140006a07:	jne    0x140006a0f
   140006a09:	mov    QWORD PTR [rax+0x8],r8
   140006a0d:	jmp    0x140006a1d
   140006a0f:	cmp    QWORD PTR [rdx],rbx
   140006a12:	jne    0x140006a19
   140006a14:	mov    QWORD PTR [rdx],r8
   140006a17:	jmp    0x140006a1d
   140006a19:	mov    QWORD PTR [rdx+0x10],r8
   140006a1d:	mov    r9,QWORD PTR [rdi+0x8]
   140006a21:	cmp    QWORD PTR [r9],rbx
   140006a24:	jne    0x140006a48
   140006a26:	cmp    BYTE PTR [r8+0x69],bpl
   140006a2a:	je     0x140006a31
   140006a2c:	mov    rax,rdx
   140006a2f:	jmp    0x140006a45
   140006a31:	mov    rcx,QWORD PTR [r8]
   140006a34:	mov    rax,r8
   140006a37:	jmp    0x140006a3f
   140006a39:	mov    rax,rcx
   140006a3c:	mov    rcx,QWORD PTR [rcx]
   140006a3f:	cmp    BYTE PTR [rcx+0x69],bpl
   140006a43:	je     0x140006a39
   140006a45:	mov    QWORD PTR [r9],rax
   140006a48:	mov    r9,QWORD PTR [rdi+0x8]
   140006a4c:	cmp    QWORD PTR [r9+0x10],rbx
   140006a50:	jne    0x140006ae8
   140006a56:	cmp    BYTE PTR [r8+0x69],bpl
   140006a5a:	je     0x140006a61
   140006a5c:	mov    rax,rdx
   140006a5f:	jmp    0x140006a77
   140006a61:	mov    rcx,QWORD PTR [r8+0x10]
   140006a65:	mov    rax,r8
   140006a68:	jmp    0x140006a71
   140006a6a:	mov    rax,rcx
   140006a6d:	mov    rcx,QWORD PTR [rcx+0x10]
   140006a71:	cmp    BYTE PTR [rcx+0x69],bpl
   140006a75:	je     0x140006a6a
   140006a77:	mov    QWORD PTR [r9+0x10],rax
   140006a7b:	jmp    0x140006ae8
   140006a7d:	mov    QWORD PTR [rdx+0x8],r9
   140006a81:	mov    rax,QWORD PTR [rbx]
   140006a84:	mov    QWORD PTR [r9],rax
   140006a87:	cmp    r9,QWORD PTR [rcx]
   140006a8a:	jne    0x140006a91
   140006a8c:	mov    rdx,r9
   140006a8f:	jmp    0x140006ab0
   140006a91:	mov    rdx,QWORD PTR [r9+0x8]
   140006a95:	cmp    BYTE PTR [r8+0x69],bpl
   140006a99:	jne    0x140006a9f
   140006a9b:	mov    QWORD PTR [r8+0x8],rdx
   140006a9f:	mov    QWORD PTR [rdx],r8
   140006aa2:	mov    rax,QWORD PTR [rcx]
   140006aa5:	mov    QWORD PTR [r9+0x10],rax
   140006aa9:	mov    rax,QWORD PTR [rcx]
   140006aac:	mov    QWORD PTR [rax+0x8],r9
   140006ab0:	mov    rax,QWORD PTR [rdi+0x8]
   140006ab4:	cmp    QWORD PTR [rax+0x8],rbx
   140006ab8:	jne    0x140006ac0
   140006aba:	mov    QWORD PTR [rax+0x8],r9
   140006abe:	jmp    0x140006ad2
   140006ac0:	mov    rax,QWORD PTR [rbx+0x8]
   140006ac4:	cmp    QWORD PTR [rax],rbx
   140006ac7:	jne    0x140006ace
   140006ac9:	mov    QWORD PTR [rax],r9
   140006acc:	jmp    0x140006ad2
   140006ace:	mov    QWORD PTR [rax+0x10],r9
   140006ad2:	mov    rax,QWORD PTR [rbx+0x8]
   140006ad6:	mov    QWORD PTR [r9+0x8],rax
   140006ada:	mov    al,BYTE PTR [rbx+0x68]
   140006add:	mov    cl,BYTE PTR [r9+0x68]
   140006ae1:	mov    BYTE PTR [r9+0x68],al
   140006ae5:	mov    BYTE PTR [rbx+0x68],cl
   140006ae8:	mov    r10b,0x1
   140006aeb:	cmp    BYTE PTR [rbx+0x68],r10b
   140006aef:	jne    0x140006db2
   140006af5:	mov    rax,QWORD PTR [rdi+0x8]
   140006af9:	cmp    r8,QWORD PTR [rax+0x8]
   140006afd:	je     0x140006dae
   140006b03:	cmp    BYTE PTR [r8+0x68],r10b
   140006b07:	jne    0x140006dae
   140006b0d:	mov    rcx,QWORD PTR [rdx]
   140006b10:	cmp    r8,rcx
   140006b13:	jne    0x140006be9
   140006b19:	mov    rcx,QWORD PTR [rdx+0x10]
   140006b1d:	cmp    BYTE PTR [rcx+0x68],bpl
   140006b21:	jne    0x140006b78
   140006b23:	mov    BYTE PTR [rcx+0x68],r10b
   140006b27:	mov    rcx,QWORD PTR [rdx+0x10]
   140006b2b:	mov    BYTE PTR [rdx+0x68],bpl
   140006b2f:	mov    rax,QWORD PTR [rcx]
   140006b32:	mov    QWORD PTR [rdx+0x10],rax
   140006b36:	mov    rax,QWORD PTR [rcx]
   140006b39:	cmp    BYTE PTR [rax+0x69],bpl
   140006b3d:	jne    0x140006b43
   140006b3f:	mov    QWORD PTR [rax+0x8],rdx
   140006b43:	mov    rax,QWORD PTR [rdx+0x8]
   140006b47:	mov    QWORD PTR [rcx+0x8],rax
   140006b4b:	mov    rax,QWORD PTR [rdi+0x8]
   140006b4f:	cmp    rdx,QWORD PTR [rax+0x8]
   140006b53:	jne    0x140006b5b
   140006b55:	mov    QWORD PTR [rax+0x8],rcx
   140006b59:	jmp    0x140006b6d
   140006b5b:	mov    rax,QWORD PTR [rdx+0x8]
   140006b5f:	cmp    rdx,QWORD PTR [rax]
   140006b62:	jne    0x140006b69
   140006b64:	mov    QWORD PTR [rax],rcx
   140006b67:	jmp    0x140006b6d
   140006b69:	mov    QWORD PTR [rax+0x10],rcx
   140006b6d:	mov    QWORD PTR [rcx],rdx
   140006b70:	mov    QWORD PTR [rdx+0x8],rcx
   140006b74:	mov    rcx,QWORD PTR [rdx+0x10]
   140006b78:	cmp    BYTE PTR [rcx+0x69],bpl
   140006b7c:	jne    0x140006c6a
   140006b82:	mov    rax,QWORD PTR [rcx]
   140006b85:	cmp    BYTE PTR [rax+0x68],r10b
   140006b89:	jne    0x140006b99
   140006b8b:	mov    rax,QWORD PTR [rcx+0x10]
   140006b8f:	cmp    BYTE PTR [rax+0x68],r10b
   140006b93:	je     0x140006c66
   140006b99:	mov    rax,QWORD PTR [rcx+0x10]
   140006b9d:	cmp    BYTE PTR [rax+0x68],r10b
   140006ba1:	jne    0x140006c95
   140006ba7:	mov    rax,QWORD PTR [rcx]
   140006baa:	mov    BYTE PTR [rax+0x68],r10b
   140006bae:	mov    r9,QWORD PTR [rcx]
   140006bb1:	mov    BYTE PTR [rcx+0x68],bpl
   140006bb5:	mov    rax,QWORD PTR [r9+0x10]
   140006bb9:	mov    QWORD PTR [rcx],rax
   140006bbc:	mov    rax,QWORD PTR [r9+0x10]
   140006bc0:	cmp    BYTE PTR [rax+0x69],bpl
   140006bc4:	jne    0x140006bca
   140006bc6:	mov    QWORD PTR [rax+0x8],rcx
   140006bca:	mov    rax,QWORD PTR [rcx+0x8]
   140006bce:	mov    QWORD PTR [r9+0x8],rax
   140006bd2:	mov    rax,QWORD PTR [rdi+0x8]
   140006bd6:	cmp    rcx,QWORD PTR [rax+0x8]
   140006bda:	jne    0x140006c76
   140006be0:	mov    QWORD PTR [rax+0x8],r9
   140006be4:	jmp    0x140006c89
   140006be9:	cmp    BYTE PTR [rcx+0x68],bpl
   140006bed:	jne    0x140006c45
   140006bef:	mov    BYTE PTR [rcx+0x68],r10b
   140006bf3:	mov    rcx,QWORD PTR [rdx]
   140006bf6:	mov    BYTE PTR [rdx+0x68],bpl
   140006bfa:	mov    rax,QWORD PTR [rcx+0x10]
   140006bfe:	mov    QWORD PTR [rdx],rax
   140006c01:	mov    rax,QWORD PTR [rcx+0x10]
   140006c05:	cmp    BYTE PTR [rax+0x69],bpl
   140006c09:	jne    0x140006c0f
   140006c0b:	mov    QWORD PTR [rax+0x8],rdx
   140006c0f:	mov    rax,QWORD PTR [rdx+0x8]
   140006c13:	mov    QWORD PTR [rcx+0x8],rax
   140006c17:	mov    rax,QWORD PTR [rdi+0x8]
   140006c1b:	cmp    rdx,QWORD PTR [rax+0x8]
   140006c1f:	jne    0x140006c27
   140006c21:	mov    QWORD PTR [rax+0x8],rcx
   140006c25:	jmp    0x140006c3a
   140006c27:	mov    rax,QWORD PTR [rdx+0x8]
   140006c2b:	cmp    rdx,QWORD PTR [rax+0x10]
   140006c2f:	jne    0x140006c37
   140006c31:	mov    QWORD PTR [rax+0x10],rcx
   140006c35:	jmp    0x140006c3a
   140006c37:	mov    QWORD PTR [rax],rcx
   140006c3a:	mov    QWORD PTR [rcx+0x10],rdx
   140006c3e:	mov    QWORD PTR [rdx+0x8],rcx
   140006c42:	mov    rcx,QWORD PTR [rdx]
   140006c45:	cmp    BYTE PTR [rcx+0x69],bpl
   140006c49:	jne    0x140006c6a
   140006c4b:	mov    rax,QWORD PTR [rcx+0x10]
   140006c4f:	cmp    BYTE PTR [rax+0x68],r10b
   140006c53:	jne    0x140006cf1
   140006c59:	mov    rax,QWORD PTR [rcx]
   140006c5c:	cmp    BYTE PTR [rax+0x68],r10b
   140006c60:	jne    0x140006cf1
   140006c66:	mov    BYTE PTR [rcx+0x68],bpl
   140006c6a:	mov    r8,rdx
   140006c6d:	mov    rdx,QWORD PTR [rdx+0x8]
   140006c71:	jmp    0x140006af5
   140006c76:	mov    rax,QWORD PTR [rcx+0x8]
   140006c7a:	cmp    rcx,QWORD PTR [rax+0x10]
   140006c7e:	jne    0x140006c86
   140006c80:	mov    QWORD PTR [rax+0x10],r9
   140006c84:	jmp    0x140006c89
   140006c86:	mov    QWORD PTR [rax],r9
   140006c89:	mov    QWORD PTR [r9+0x10],rcx
   140006c8d:	mov    QWORD PTR [rcx+0x8],r9
   140006c91:	mov    rcx,QWORD PTR [rdx+0x10]
   140006c95:	mov    al,BYTE PTR [rdx+0x68]
   140006c98:	mov    BYTE PTR [rcx+0x68],al
   140006c9b:	mov    BYTE PTR [rdx+0x68],r10b
   140006c9f:	mov    rax,QWORD PTR [rcx+0x10]
   140006ca3:	mov    BYTE PTR [rax+0x68],r10b
   140006ca7:	mov    rcx,QWORD PTR [rdx+0x10]
   140006cab:	mov    rax,QWORD PTR [rcx]
   140006cae:	mov    QWORD PTR [rdx+0x10],rax
   140006cb2:	mov    rax,QWORD PTR [rcx]
   140006cb5:	cmp    BYTE PTR [rax+0x69],bpl
   140006cb9:	jne    0x140006cbf
   140006cbb:	mov    QWORD PTR [rax+0x8],rdx
   140006cbf:	mov    rax,QWORD PTR [rdx+0x8]
   140006cc3:	mov    QWORD PTR [rcx+0x8],rax
   140006cc7:	mov    rax,QWORD PTR [rdi+0x8]
   140006ccb:	cmp    rdx,QWORD PTR [rax+0x8]
   140006ccf:	jne    0x140006cd7
   140006cd1:	mov    QWORD PTR [rax+0x8],rcx
   140006cd5:	jmp    0x140006ce9
   140006cd7:	mov    rax,QWORD PTR [rdx+0x8]
   140006cdb:	cmp    rdx,QWORD PTR [rax]
   140006cde:	jne    0x140006ce5
   140006ce0:	mov    QWORD PTR [rax],rcx
   140006ce3:	jmp    0x140006ce9
   140006ce5:	mov    QWORD PTR [rax+0x10],rcx
   140006ce9:	mov    QWORD PTR [rcx],rdx
   140006cec:	jmp    0x140006daa
   140006cf1:	mov    rax,QWORD PTR [rcx]
   140006cf4:	cmp    BYTE PTR [rax+0x68],r10b
   140006cf8:	jne    0x140006d52
   140006cfa:	mov    rax,QWORD PTR [rcx+0x10]
   140006cfe:	mov    BYTE PTR [rax+0x68],r10b
   140006d02:	mov    r9,QWORD PTR [rcx+0x10]
   140006d06:	mov    BYTE PTR [rcx+0x68],bpl
   140006d0a:	mov    rax,QWORD PTR [r9]
   140006d0d:	mov    QWORD PTR [rcx+0x10],rax
   140006d11:	mov    rax,QWORD PTR [r9]
   140006d14:	cmp    BYTE PTR [rax+0x69],bpl
   140006d18:	jne    0x140006d1e
   140006d1a:	mov    QWORD PTR [rax+0x8],rcx
   140006d1e:	mov    rax,QWORD PTR [rcx+0x8]
   140006d22:	mov    QWORD PTR [r9+0x8],rax
   140006d26:	mov    rax,QWORD PTR [rdi+0x8]
   140006d2a:	cmp    rcx,QWORD PTR [rax+0x8]
   140006d2e:	jne    0x140006d36
   140006d30:	mov    QWORD PTR [rax+0x8],r9
   140006d34:	jmp    0x140006d48
   140006d36:	mov    rax,QWORD PTR [rcx+0x8]
   140006d3a:	cmp    rcx,QWORD PTR [rax]
   140006d3d:	jne    0x140006d44
   140006d3f:	mov    QWORD PTR [rax],r9
   140006d42:	jmp    0x140006d48
   140006d44:	mov    QWORD PTR [rax+0x10],r9
   140006d48:	mov    QWORD PTR [r9],rcx
   140006d4b:	mov    QWORD PTR [rcx+0x8],r9
   140006d4f:	mov    rcx,QWORD PTR [rdx]
   140006d52:	mov    al,BYTE PTR [rdx+0x68]
   140006d55:	mov    BYTE PTR [rcx+0x68],al
   140006d58:	mov    BYTE PTR [rdx+0x68],r10b
   140006d5c:	mov    rax,QWORD PTR [rcx]
   140006d5f:	mov    BYTE PTR [rax+0x68],r10b
   140006d63:	mov    rcx,QWORD PTR [rdx]
   140006d66:	mov    rax,QWORD PTR [rcx+0x10]
   140006d6a:	mov    QWORD PTR [rdx],rax
   140006d6d:	mov    rax,QWORD PTR [rcx+0x10]
   140006d71:	cmp    BYTE PTR [rax+0x69],bpl
   140006d75:	jne    0x140006d7b
   140006d77:	mov    QWORD PTR [rax+0x8],rdx
   140006d7b:	mov    rax,QWORD PTR [rdx+0x8]
   140006d7f:	mov    QWORD PTR [rcx+0x8],rax
   140006d83:	mov    rax,QWORD PTR [rdi+0x8]
   140006d87:	cmp    rdx,QWORD PTR [rax+0x8]
   140006d8b:	jne    0x140006d93
   140006d8d:	mov    QWORD PTR [rax+0x8],rcx
   140006d91:	jmp    0x140006da6
   140006d93:	mov    rax,QWORD PTR [rdx+0x8]
   140006d97:	cmp    rdx,QWORD PTR [rax+0x10]
   140006d9b:	jne    0x140006da3
   140006d9d:	mov    QWORD PTR [rax+0x10],rcx
   140006da1:	jmp    0x140006da6
   140006da3:	mov    QWORD PTR [rax],rcx
   140006da6:	mov    QWORD PTR [rcx+0x10],rdx
   140006daa:	mov    QWORD PTR [rdx+0x8],rcx
   140006dae:	mov    BYTE PTR [r8+0x68],r10b
   140006db2:	lea    rdx,[rbx+0x18]
   140006db6:	call   0x1400072f4
   140006dbb:	mov    rcx,rbx
   140006dbe:	call   QWORD PTR [rip+0x66a4]        # 0x14000d468
   140006dc4:	mov    rax,QWORD PTR [rdi+0x10]
   140006dc8:	test   rax,rax
   140006dcb:	je     0x140006dd4
   140006dcd:	dec    rax
   140006dd0:	mov    QWORD PTR [rdi+0x10],rax
   140006dd4:	mov    rax,QWORD PTR [rsp+0x40]
   140006dd9:	mov    rbx,QWORD PTR [rsp+0x30]
   140006dde:	mov    rbp,QWORD PTR [rsp+0x38]
   140006de3:	mov    QWORD PTR [rsi],rax
   140006de6:	mov    rax,rsi
   140006de9:	mov    rsi,QWORD PTR [rsp+0x48]
   140006dee:	add    rsp,0x20
   140006df2:	pop    rdi
   140006df3:	ret    
   140006df4:	lea    rcx,[rip+0x74a5]        # 0x14000e2a0
   140006dfb:	call   0x14000ae14
   140006e00:	int3   
   140006e01:	int3   
   140006e02:	int3   
   140006e03:	int3   
   140006e04:	int3   
   140006e05:	int3   
   140006e06:	int3   
   140006e07:	int3   
   140006e08:	mov    rax,rsp
   140006e0b:	mov    QWORD PTR [rax+0x18],r8
   140006e0f:	mov    QWORD PTR [rax+0x10],rdx
   140006e13:	mov    QWORD PTR [rax+0x8],rcx
   140006e17:	push   rbx
   140006e18:	push   rsi
   140006e19:	push   rdi
   140006e1a:	sub    rsp,0x30
   140006e1e:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140006e26:	mov    rdi,rcx
   140006e29:	mov    rsi,QWORD PTR [rcx+0x8]
   140006e2d:	cmp    BYTE PTR [rdx+0x69],0x0
   140006e31:	jne    0x140006e89
   140006e33:	add    rdx,0x18
   140006e37:	call   0x140007354
   140006e3c:	mov    rbx,rax
   140006e3f:	mov    rax,QWORD PTR [rsp+0x60]
   140006e44:	mov    QWORD PTR [rbx+0x8],rax
   140006e48:	mov    rcx,QWORD PTR [rsp+0x58]
   140006e4d:	mov    al,BYTE PTR [rcx+0x68]
   140006e50:	mov    BYTE PTR [rbx+0x68],al
   140006e53:	cmp    BYTE PTR [rsi+0x69],0x0
   140006e57:	cmovne rsi,rbx
   140006e5b:	mov    QWORD PTR [rsp+0x68],rsi
   140006e60:	mov    r8,rbx
   140006e63:	mov    rdx,QWORD PTR [rcx]
   140006e66:	mov    rcx,rdi
   140006e69:	call   0x140006e08
   140006e6e:	mov    QWORD PTR [rbx],rax
   140006e71:	mov    r8,rbx
   140006e74:	mov    rdx,QWORD PTR [rsp+0x58]
   140006e79:	mov    rdx,QWORD PTR [rdx+0x10]
   140006e7d:	mov    rcx,rdi
   140006e80:	call   0x140006e08
   140006e85:	mov    QWORD PTR [rbx+0x10],rax
   140006e89:	mov    rax,rsi
   140006e8c:	add    rsp,0x30
   140006e90:	pop    rdi
   140006e91:	pop    rsi
   140006e92:	pop    rbx
   140006e93:	ret    
   140006e94:	int3   
   140006e95:	int3   
   140006e96:	int3   
   140006e97:	int3   
   140006e98:	int3   
   140006e99:	int3   
   140006e9a:	int3   
   140006e9b:	int3   
   140006e9c:	mov    QWORD PTR [rsp+0x8],rbx
   140006ea1:	mov    QWORD PTR [rsp+0x10],rsi
   140006ea6:	push   rdi
   140006ea7:	sub    rsp,0x20
   140006eab:	cmp    BYTE PTR [rdx+0x69],0x0
   140006eaf:	mov    rbx,rdx
   140006eb2:	mov    rsi,rcx
   140006eb5:	mov    rdi,rdx
   140006eb8:	jne    0x140006ee4
   140006eba:	mov    rdx,QWORD PTR [rdi+0x10]
   140006ebe:	mov    rcx,rsi
   140006ec1:	call   0x140006e9c
   140006ec6:	mov    rdi,QWORD PTR [rdi]
   140006ec9:	lea    rdx,[rbx+0x18]
   140006ecd:	call   0x1400072f4
   140006ed2:	mov    rcx,rbx
   140006ed5:	call   QWORD PTR [rip+0x658d]        # 0x14000d468
   140006edb:	cmp    BYTE PTR [rdi+0x69],0x0
   140006edf:	mov    rbx,rdi
   140006ee2:	je     0x140006eba
   140006ee4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ee9:	mov    rsi,QWORD PTR [rsp+0x38]
   140006eee:	add    rsp,0x20
   140006ef2:	pop    rdi
   140006ef3:	ret    
   140006ef4:	int3   
   140006ef5:	int3   
   140006ef6:	int3   
   140006ef7:	int3   
   140006ef8:	int3   
   140006ef9:	int3   
   140006efa:	int3   
   140006efb:	int3   
   140006efc:	lea    rax,[rcx+0x18]
   140006f00:	ret    
   140006f01:	int3   
   140006f02:	int3   
   140006f03:	int3   
   140006f04:	int3   
   140006f05:	int3   
   140006f06:	int3   
   140006f07:	int3   
   140006f08:	mov    rax,rsp
   140006f0b:	mov    QWORD PTR [rax+0x8],rcx
   140006f0f:	push   rdi
   140006f10:	sub    rsp,0x30
   140006f14:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140006f1c:	mov    QWORD PTR [rax+0x10],rbx
   140006f20:	mov    QWORD PTR [rax+0x18],rbp
   140006f24:	mov    QWORD PTR [rax+0x20],rsi
   140006f28:	mov    rsi,rdx
   140006f2b:	mov    rbx,rcx
   140006f2e:	xor    ebp,ebp
   140006f30:	mov    DWORD PTR [rax-0x18],ebp
   140006f33:	mov    QWORD PTR [rcx+0x18],0x7
   140006f3b:	mov    QWORD PTR [rcx+0x10],rbp
   140006f3f:	mov    WORD PTR [rcx],bp
   140006f42:	mov    DWORD PTR [rax-0x18],0x1
   140006f49:	mov    rdx,QWORD PTR [rdx+0x10]
   140006f4d:	inc    rdx
   140006f50:	mov    rdi,QWORD PTR [rcx+0x10]
   140006f54:	cmp    rdi,rdx
   140006f57:	ja     0x140006f82
   140006f59:	cmp    QWORD PTR [rcx+0x18],rdx
   140006f5d:	je     0x140006f82
   140006f5f:	mov    r8b,0x1
   140006f62:	call   0x1400065f0
   140006f67:	test   al,al
   140006f69:	je     0x140006f82
   140006f6b:	mov    QWORD PTR [rbx+0x10],rdi
   140006f6f:	cmp    QWORD PTR [rbx+0x18],0x8
   140006f74:	jb     0x140006f7b
   140006f76:	mov    rax,QWORD PTR [rbx]
   140006f79:	jmp    0x140006f7e
   140006f7b:	mov    rax,rbx
   140006f7e:	mov    WORD PTR [rax+rdi*2],bp
   140006f82:	mov    rdx,rsi
   140006f85:	mov    rcx,rbx
   140006f88:	call   0x1400074cc
   140006f8d:	mov    r8d,0x9
   140006f93:	mov    rcx,rbx
   140006f96:	call   0x1400079a8
   140006f9b:	mov    rax,rbx
   140006f9e:	mov    rbx,QWORD PTR [rsp+0x48]
   140006fa3:	mov    rbp,QWORD PTR [rsp+0x50]
   140006fa8:	mov    rsi,QWORD PTR [rsp+0x58]
   140006fad:	add    rsp,0x30
   140006fb1:	pop    rdi
   140006fb2:	ret    
   140006fb3:	int3   
   140006fb4:	int3   
   140006fb5:	int3   
   140006fb6:	int3   
   140006fb7:	int3   
   140006fb8:	int3   
   140006fb9:	int3   
   140006fba:	int3   
   140006fbb:	int3   
   140006fbc:	mov    QWORD PTR [rsp+0x8],rbx
   140006fc1:	push   rdi
   140006fc2:	sub    rsp,0x30
   140006fc6:	mov    rax,rdx
   140006fc9:	mov    rbx,rcx
   140006fcc:	xor    edi,edi
   140006fce:	mov    rcx,rax
   140006fd1:	mov    rdx,r8
   140006fd4:	mov    DWORD PTR [rsp+0x20],edi
   140006fd8:	call   0x1400074cc
   140006fdd:	mov    QWORD PTR [rbx+0x18],0x7
   140006fe5:	mov    rdx,rax
   140006fe8:	mov    QWORD PTR [rbx+0x10],rdi
   140006fec:	mov    rcx,rbx
   140006fef:	mov    WORD PTR [rbx],di
   140006ff2:	call   0x1400062e4
   140006ff7:	mov    rax,rbx
   140006ffa:	mov    rbx,QWORD PTR [rsp+0x40]
   140006fff:	add    rsp,0x30
   140007003:	pop    rdi
   140007004:	ret    
   140007005:	int3   
   140007006:	int3   
   140007007:	int3   
   140007008:	int3   
   140007009:	int3   
   14000700a:	int3   
   14000700b:	int3   
   14000700c:	int3   
   14000700d:	int3   
   14000700e:	int3   
   14000700f:	int3   
   140007010:	mov    QWORD PTR [rsp+0x8],rbx
   140007015:	mov    QWORD PTR [rsp+0x10],rbp
   14000701a:	mov    QWORD PTR [rsp+0x18],rsi
   14000701f:	push   rdi
   140007020:	push   r12
   140007022:	push   r13
   140007024:	push   r14
   140007026:	push   r15
   140007028:	sub    rsp,0x20
   14000702c:	mov    r12,r8
   14000702f:	mov    r14,r9
   140007032:	xor    r8d,r8d
   140007035:	mov    r13d,edx
   140007038:	mov    rsi,rcx
   14000703b:	test   r9,r9
   14000703e:	je     0x140007043
   140007040:	mov    DWORD PTR [r9],r8d
   140007043:	mov    ebx,r8d
   140007046:	mov    edi,r8d
   140007049:	mov    r15,r12
   14000704c:	mov    rdx,QWORD PTR [rsi+0x28]
   140007050:	cmp    rdx,QWORD PTR [rsi+0x10]
   140007054:	je     0x140007108
   14000705a:	cmp    ebx,r13d
   14000705d:	jae    0x140007108
   140007063:	add    rdx,0x18
   140007067:	mov    rcx,r15
   14000706a:	call   0x1400055bc
   14000706f:	xor    r8d,r8d
   140007072:	mov    edi,eax
   140007074:	test   eax,eax
   140007076:	jns    0x1400070b3
   140007078:	mov    rbx,r15
   14000707b:	mov    ebp,r8d
   14000707e:	sub    rbx,r12
   140007081:	add    rbx,0x7
   140007085:	shr    rbx,0x3
   140007089:	cmp    r12,r15
   14000708c:	cmova  rbx,r8
   140007090:	test   rbx,rbx
   140007093:	je     0x1400070ae
   140007095:	mov    rcx,QWORD PTR [r12]
   140007099:	call   QWORD PTR [rip+0x6029]        # 0x14000d0c8
   14000709f:	add    r12,0x8
   1400070a3:	inc    rbp
   1400070a6:	cmp    rbp,rbx
   1400070a9:	jb     0x140007095
   1400070ab:	xor    r8d,r8d
   1400070ae:	mov    ebx,r8d
   1400070b1:	jmp    0x140007100
   1400070b3:	mov    rcx,QWORD PTR [rsi+0x28]
   1400070b7:	add    r15,0x8
   1400070bb:	cmp    BYTE PTR [rcx+0x69],r8b
   1400070bf:	jne    0x1400070fe
   1400070c1:	mov    rax,QWORD PTR [rcx+0x10]
   1400070c5:	cmp    BYTE PTR [rax+0x69],r8b
   1400070c9:	jne    0x1400070f0
   1400070cb:	mov    rcx,QWORD PTR [rax]
   1400070ce:	jmp    0x1400070d6
   1400070d0:	mov    rax,rcx
   1400070d3:	mov    rcx,QWORD PTR [rcx]
   1400070d6:	cmp    BYTE PTR [rcx+0x69],r8b
   1400070da:	je     0x1400070d0
   1400070dc:	mov    QWORD PTR [rsi+0x28],rax
   1400070e0:	jmp    0x1400070fe
   1400070e2:	mov    rax,QWORD PTR [rcx+0x10]
   1400070e6:	cmp    QWORD PTR [rsi+0x28],rax
   1400070ea:	jne    0x1400070fa
   1400070ec:	mov    QWORD PTR [rsi+0x28],rcx
   1400070f0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400070f4:	cmp    BYTE PTR [rcx+0x69],r8b
   1400070f8:	je     0x1400070e2
   1400070fa:	mov    QWORD PTR [rsi+0x28],rcx
   1400070fe:	inc    ebx
   140007100:	test   edi,edi
   140007102:	jns    0x14000704c
   140007108:	test   edi,edi
   14000710a:	js     0x140007121
   14000710c:	test   r14,r14
   14000710f:	je     0x140007114
   140007111:	mov    DWORD PTR [r14],ebx
   140007114:	cmp    ebx,r13d
   140007117:	jae    0x140007121
   140007119:	mov    QWORD PTR [r15],r8
   14000711c:	mov    edi,0x1
   140007121:	mov    rbx,QWORD PTR [rsp+0x50]
   140007126:	mov    eax,edi
   140007128:	mov    rbp,QWORD PTR [rsp+0x58]
   14000712d:	mov    rsi,QWORD PTR [rsp+0x60]
   140007132:	add    rsp,0x20
   140007136:	pop    r15
   140007138:	pop    r14
   14000713a:	pop    r13
   14000713c:	pop    r12
   14000713e:	pop    rdi
   14000713f:	ret    
   140007140:	int3   
   140007141:	int3   
   140007142:	int3   
   140007143:	int3   
   140007144:	int3   
   140007145:	int3   
   140007146:	int3   
   140007147:	int3   
   140007148:	int3   
   140007149:	int3   
   14000714a:	int3   
   14000714b:	int3   
   14000714c:	int3   
   14000714d:	int3   
   14000714e:	int3   
   14000714f:	int3   
   140007150:	mov    r9,rcx
   140007153:	xor    r8d,r8d
   140007156:	jmp    0x1400071ab
   140007158:	mov    rax,QWORD PTR [r9+0x10]
   14000715c:	dec    edx
   14000715e:	cmp    QWORD PTR [r9+0x28],rax
   140007162:	je     0x1400071b1
   140007164:	mov    rcx,QWORD PTR [r9+0x28]
   140007168:	cmp    BYTE PTR [rcx+0x69],r8b
   14000716c:	jne    0x1400071ab
   14000716e:	mov    rax,QWORD PTR [rcx+0x10]
   140007172:	cmp    BYTE PTR [rax+0x69],r8b
   140007176:	jne    0x14000719d
   140007178:	mov    rcx,QWORD PTR [rax]
   14000717b:	jmp    0x140007183
   14000717d:	mov    rax,rcx
   140007180:	mov    rcx,QWORD PTR [rcx]
   140007183:	cmp    BYTE PTR [rcx+0x69],r8b
   140007187:	je     0x14000717d
   140007189:	mov    QWORD PTR [r9+0x28],rax
   14000718d:	jmp    0x1400071ab
   14000718f:	mov    rax,QWORD PTR [rcx+0x10]
   140007193:	cmp    QWORD PTR [r9+0x28],rax
   140007197:	jne    0x1400071a7
   140007199:	mov    QWORD PTR [r9+0x28],rcx
   14000719d:	mov    rcx,QWORD PTR [rcx+0x8]
   1400071a1:	cmp    BYTE PTR [rcx+0x69],r8b
   1400071a5:	je     0x14000718f
   1400071a7:	mov    QWORD PTR [r9+0x28],rcx
   1400071ab:	test   edx,edx
   1400071ad:	jne    0x140007158
   1400071af:	jmp    0x1400071b7
   1400071b1:	mov    r8d,0x1
   1400071b7:	mov    eax,r8d
   1400071ba:	ret    
   1400071bb:	int3   
   1400071bc:	int3   
   1400071bd:	int3   
   1400071be:	int3   
   1400071bf:	int3   
   1400071c0:	int3   
   1400071c1:	int3   
   1400071c2:	int3   
   1400071c3:	int3   
   1400071c4:	int3   
   1400071c5:	int3   
   1400071c6:	int3   
   1400071c7:	int3   
   1400071c8:	int3   
   1400071c9:	int3   
   1400071ca:	int3   
   1400071cb:	int3   
   1400071cc:	int3   
   1400071cd:	int3   
   1400071ce:	int3   
   1400071cf:	int3   
   1400071d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400071d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400071da:	push   rsi
   1400071db:	push   rdi
   1400071dc:	push   r14
   1400071de:	sub    rsp,0x20
   1400071e2:	mov    r14,rdx
   1400071e5:	mov    rbp,rcx
   1400071e8:	mov    esi,0x80004003
   1400071ed:	test   rdx,rdx
   1400071f0:	je     0x1400072cc
   1400071f6:	and    QWORD PTR [rdx],0x0
   1400071fa:	lea    rcx,[rsp+0x48]
   1400071ff:	call   0x140007eb0
   140007204:	mov    esi,eax
   140007206:	test   eax,eax
   140007208:	js     0x140007226
   14000720a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000720f:	mov    rax,QWORD PTR [rbx]
   140007212:	mov    rdi,QWORD PTR [rax+0x8]
   140007216:	mov    rcx,rdi
   140007219:	call   QWORD PTR [rip+0x6289]        # 0x14000d4a8
   14000721f:	mov    rcx,rbx
   140007222:	call   rdi
   140007224:	jmp    0x140007228
   140007226:	xor    ebx,ebx
   140007228:	test   esi,esi
   14000722a:	js     0x1400072b2
   140007230:	lea    rdx,[rbp+0x8]
   140007234:	mov    rcx,rbx
   140007237:	call   0x1400061d8
   14000723c:	mov    esi,eax
   14000723e:	test   eax,eax
   140007240:	js     0x14000726e
   140007242:	mov    rax,QWORD PTR [rbp+0x28]
   140007246:	mov    QWORD PTR [rbx+0x28],rax
   14000724a:	mov    rax,QWORD PTR [rbx]
   14000724d:	mov    rdi,QWORD PTR [rax]
   140007250:	mov    rcx,rdi
   140007253:	call   QWORD PTR [rip+0x624f]        # 0x14000d4a8
   140007259:	mov    r8,r14
   14000725c:	lea    rdx,[rip+0x6fd5]        # 0x14000e238
   140007263:	mov    rcx,rbx
   140007266:	call   rdi
   140007268:	mov    esi,eax
   14000726a:	test   eax,eax
   14000726c:	jns    0x1400072b2
   14000726e:	test   rbx,rbx
   140007271:	je     0x1400072cc
   140007273:	lea    rcx,[rbx+0x38]
   140007277:	cmp    BYTE PTR [rcx+0x28],0x0
   14000727b:	je     0x140007287
   14000727d:	mov    BYTE PTR [rcx+0x28],0x0
   140007281:	call   QWORD PTR [rip+0x6051]        # 0x14000d2d8
   140007287:	mov    r8,QWORD PTR [rbx+0x10]
   14000728b:	lea    rdx,[rsp+0x48]
   140007290:	mov    r9,r8
   140007293:	lea    rcx,[rbx+0x8]
   140007297:	mov    r8,QWORD PTR [r8]
   14000729a:	call   0x1400066e0
   14000729f:	mov    rcx,QWORD PTR [rbx+0x10]
   1400072a3:	call   QWORD PTR [rip+0x61bf]        # 0x14000d468
   1400072a9:	mov    rcx,rbx
   1400072ac:	call   QWORD PTR [rip+0x61b6]        # 0x14000d468
   1400072b2:	test   rbx,rbx
   1400072b5:	je     0x1400072cc
   1400072b7:	mov    rax,QWORD PTR [rbx]
   1400072ba:	mov    rdi,QWORD PTR [rax+0x10]
   1400072be:	mov    rcx,rdi
   1400072c1:	call   QWORD PTR [rip+0x61e1]        # 0x14000d4a8
   1400072c7:	mov    rcx,rbx
   1400072ca:	call   rdi
   1400072cc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400072d1:	mov    eax,esi
   1400072d3:	mov    rbp,QWORD PTR [rsp+0x50]
   1400072d8:	add    rsp,0x20
   1400072dc:	pop    r14
   1400072de:	pop    rdi
   1400072df:	pop    rsi
   1400072e0:	ret    
   1400072e1:	int3   
   1400072e2:	int3   
   1400072e3:	int3   
   1400072e4:	int3   
   1400072e5:	int3   
   1400072e6:	int3   
   1400072e7:	int3   
   1400072e8:	mov    rax,rcx
   1400072eb:	ret    
   1400072ec:	int3   
   1400072ed:	int3   
   1400072ee:	int3   
   1400072ef:	int3   
   1400072f0:	int3   
   1400072f1:	int3   
   1400072f2:	int3   
   1400072f3:	int3   
   1400072f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400072f9:	push   rdi
   1400072fa:	sub    rsp,0x20
   1400072fe:	cmp    QWORD PTR [rdx+0x40],0x8
   140007303:	mov    rbx,rdx
   140007306:	jb     0x140007312
   140007308:	mov    rcx,QWORD PTR [rdx+0x28]
   14000730c:	call   QWORD PTR [rip+0x6156]        # 0x14000d468
   140007312:	xor    edi,edi
   140007314:	mov    QWORD PTR [rbx+0x40],0x7
   14000731c:	mov    QWORD PTR [rbx+0x38],rdi
   140007320:	mov    WORD PTR [rbx+0x28],di
   140007324:	cmp    QWORD PTR [rbx+0x18],0x8
   140007329:	jb     0x140007334
   14000732b:	mov    rcx,QWORD PTR [rbx]
   14000732e:	call   QWORD PTR [rip+0x6134]        # 0x14000d468
   140007334:	mov    QWORD PTR [rbx+0x18],0x7
   14000733c:	mov    QWORD PTR [rbx+0x10],rdi
   140007340:	mov    WORD PTR [rbx],di
   140007343:	mov    rbx,QWORD PTR [rsp+0x30]
   140007348:	add    rsp,0x20
   14000734c:	pop    rdi
   14000734d:	ret    
   14000734e:	int3   
   14000734f:	int3   
   140007350:	int3   
   140007351:	int3   
   140007352:	int3   
   140007353:	int3   
   140007354:	rex push rsi
   140007356:	push   rdi
   140007357:	push   r14
   140007359:	sub    rsp,0x50
   14000735d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007366:	mov    QWORD PTR [rsp+0x70],rbx
   14000736b:	mov    rsi,rdx
   14000736e:	mov    rdi,rcx
   140007371:	mov    ecx,0x70
   140007376:	call   0x14000acbc
   14000737b:	mov    rbx,rax
   14000737e:	mov    QWORD PTR [rsp+0x80],rax
   140007386:	xor    r14d,r14d
   140007389:	test   rax,rax
   14000738c:	je     0x14000740d
   14000738e:	mov    r8,QWORD PTR [rdi+0x8]
   140007392:	mov    QWORD PTR [rax],r8
   140007395:	mov    r8,QWORD PTR [rdi+0x8]
   140007399:	mov    QWORD PTR [rax+0x8],r8
   14000739d:	mov    rcx,QWORD PTR [rdi+0x8]
   1400073a1:	mov    QWORD PTR [rax+0x10],rcx
   1400073a5:	mov    WORD PTR [rax+0x68],r14w
   1400073aa:	lea    rdi,[rax+0x18]
   1400073ae:	mov    QWORD PTR [rsp+0x88],rdi
   1400073b6:	mov    QWORD PTR [rsp+0x28],rdi
   1400073bb:	test   rdi,rdi
   1400073be:	je     0x140007408
   1400073c0:	mov    QWORD PTR [rdi+0x18],0x7
   1400073c8:	mov    QWORD PTR [rdi+0x10],r14
   1400073cc:	mov    WORD PTR [rdi],r14w
   1400073d0:	or     r9,0xffffffffffffffff
   1400073d4:	xor    r8d,r8d
   1400073d7:	mov    rdx,rsi
   1400073da:	mov    rcx,rdi
   1400073dd:	call   0x140006384
   1400073e2:	nop
   1400073e3:	lea    rcx,[rdi+0x28]
   1400073e7:	mov    QWORD PTR [rcx+0x18],0x7
   1400073ef:	mov    QWORD PTR [rcx+0x10],r14
   1400073f3:	mov    WORD PTR [rcx],r14w
   1400073f7:	lea    rdx,[rsi+0x28]
   1400073fb:	or     r9,0xffffffffffffffff
   1400073ff:	xor    r8d,r8d
   140007402:	call   0x140006384
   140007407:	nop
   140007408:	mov    rax,rbx
   14000740b:	jmp    0x140007429
   14000740d:	lea    rcx,[rsp+0x30]
   140007412:	call   0x140005514
   140007417:	lea    rdx,[rip+0x9562]        # 0x140010980
   14000741e:	lea    rcx,[rsp+0x30]
   140007423:	call   0x14000b740
   140007428:	int3   
   140007429:	mov    rbx,QWORD PTR [rsp+0x70]
   14000742e:	add    rsp,0x50
   140007432:	pop    r14
   140007434:	pop    rdi
   140007435:	pop    rsi
   140007436:	ret    
   140007437:	int3   
   140007438:	int3   
   140007439:	int3   
   14000743a:	int3   
   14000743b:	int3   
   14000743c:	int3   
   14000743d:	int3   
   14000743e:	int3   
   14000743f:	int3   
   140007440:	rex push rbx
   140007442:	sub    rsp,0x20
   140007446:	mov    rbx,rcx
   140007449:	call   QWORD PTR [rip+0x5fd9]        # 0x14000d428
   14000744f:	lea    rax,[rip+0x65da]        # 0x14000da30
   140007456:	mov    QWORD PTR [rbx],rax
   140007459:	mov    rax,rbx
   14000745c:	add    rsp,0x20
   140007460:	pop    rbx
   140007461:	ret    
   140007462:	int3   
   140007463:	int3   
   140007464:	int3   
   140007465:	int3   
   140007466:	int3   
   140007467:	int3   
   140007468:	mov    QWORD PTR [rsp+0x8],rcx
   14000746d:	push   rbx
   14000746e:	sub    rsp,0x30
   140007472:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000747b:	mov    rbx,rcx
   14000747e:	add    rcx,0x38
   140007482:	cmp    BYTE PTR [rcx+0x28],0x0
   140007486:	je     0x140007492
   140007488:	mov    BYTE PTR [rcx+0x28],0x0
   14000748c:	call   QWORD PTR [rip+0x5e46]        # 0x14000d2d8
   140007492:	add    rbx,0x8
   140007496:	mov    QWORD PTR [rsp+0x40],rbx
   14000749b:	mov    r8,QWORD PTR [rbx+0x8]
   14000749f:	mov    r9,r8
   1400074a2:	mov    r8,QWORD PTR [r8]
   1400074a5:	lea    rdx,[rsp+0x48]
   1400074aa:	mov    rcx,rbx
   1400074ad:	call   0x1400066e0
   1400074b2:	nop
   1400074b3:	mov    rcx,QWORD PTR [rbx+0x8]
   1400074b7:	add    rsp,0x30
   1400074bb:	pop    rbx
   1400074bc:	rex.W jmp QWORD PTR [rip+0x5fa5]        # 0x14000d468
   1400074c3:	int3   
   1400074c4:	int3   
   1400074c5:	int3   
   1400074c6:	int3   
   1400074c7:	int3   
   1400074c8:	int3   
   1400074c9:	int3   
   1400074ca:	int3   
   1400074cb:	int3   
   1400074cc:	mov    rax,rsp
   1400074cf:	mov    QWORD PTR [rax+0x8],rbx
   1400074d3:	mov    QWORD PTR [rax+0x10],rbp
   1400074d7:	mov    QWORD PTR [rax+0x18],rsi
   1400074db:	mov    QWORD PTR [rax+0x20],rdi
   1400074df:	push   r14
   1400074e1:	sub    rsp,0x20
   1400074e5:	mov    r8,QWORD PTR [rcx+0x10]
   1400074e9:	or     rax,0xffffffffffffffff
   1400074ed:	cmp    QWORD PTR [rdx+0x10],rax
   1400074f1:	mov    rsi,rax
   1400074f4:	mov    r14,rdx
   1400074f7:	mov    rbx,rcx
   1400074fa:	cmovb  rsi,QWORD PTR [rdx+0x10]
   1400074ff:	sub    rax,r8
   140007502:	cmp    rax,rsi
   140007505:	jbe    0x1400075bf
   14000750b:	xor    ebp,ebp
   14000750d:	test   rsi,rsi
   140007510:	je     0x1400075a1
   140007516:	lea    rdi,[r8+rsi*1]
   14000751a:	movabs rax,0x7ffffffffffffffe
   140007524:	cmp    rdi,rax
   140007527:	ja     0x1400075c5
   14000752d:	cmp    QWORD PTR [rcx+0x18],rdi
   140007531:	jae    0x14000753d
   140007533:	mov    rdx,rdi
   140007536:	call   0x140006804
   14000753b:	jmp    0x140007558
   14000753d:	test   rdi,rdi
   140007540:	jne    0x14000755d
   140007542:	cmp    QWORD PTR [rcx+0x18],0x8
   140007547:	mov    QWORD PTR [rcx+0x10],rbp
   14000754b:	jb     0x140007552
   14000754d:	mov    rax,QWORD PTR [rcx]
   140007550:	jmp    0x140007555
   140007552:	mov    rax,rcx
   140007555:	mov    WORD PTR [rax],bp
   140007558:	test   rdi,rdi
   14000755b:	je     0x1400075a1
   14000755d:	cmp    QWORD PTR [r14+0x18],0x8
   140007562:	jb     0x140007567
   140007564:	mov    r14,QWORD PTR [r14]
   140007567:	cmp    QWORD PTR [rbx+0x18],0x8
   14000756c:	jb     0x140007573
   14000756e:	mov    rcx,QWORD PTR [rbx]
   140007571:	jmp    0x140007576
   140007573:	mov    rcx,rbx
   140007576:	mov    rax,QWORD PTR [rbx+0x10]
   14000757a:	lea    r8,[rsi+rsi*1]
   14000757e:	mov    rdx,r14
   140007581:	lea    rcx,[rcx+rax*2]
   140007585:	call   0x14000bcc6
   14000758a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000758f:	mov    QWORD PTR [rbx+0x10],rdi
   140007593:	jb     0x14000759a
   140007595:	mov    rax,QWORD PTR [rbx]
   140007598:	jmp    0x14000759d
   14000759a:	mov    rax,rbx
   14000759d:	mov    WORD PTR [rax+rdi*2],bp
   1400075a1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400075a6:	mov    rax,rbx
   1400075a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075ae:	mov    rsi,QWORD PTR [rsp+0x40]
   1400075b3:	mov    rdi,QWORD PTR [rsp+0x48]
   1400075b8:	add    rsp,0x20
   1400075bc:	pop    r14
   1400075be:	ret    
   1400075bf:	call   0x140006940
   1400075c4:	int3   
   1400075c5:	call   0x140006940
   1400075ca:	int3   
   1400075cb:	int3   
   1400075cc:	int3   
   1400075cd:	int3   
   1400075ce:	int3   
   1400075cf:	int3   
   1400075d0:	int3   
   1400075d1:	int3   
   1400075d2:	int3   
   1400075d3:	int3   
   1400075d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400075d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400075de:	mov    QWORD PTR [rsp+0x18],r8
   1400075e3:	push   rsi
   1400075e4:	push   rdi
   1400075e5:	push   r14
   1400075e7:	sub    rsp,0x40
   1400075eb:	xor    ebp,ebp
   1400075ed:	mov    r11,r9
   1400075f0:	mov    r14,rdx
   1400075f3:	mov    rdi,rcx
   1400075f6:	cmp    QWORD PTR [rcx+0x10],rbp
   1400075fa:	jne    0x140007623
   1400075fc:	mov    rbx,QWORD PTR [rcx+0x8]
   140007600:	mov    rdx,r9
   140007603:	call   0x140007354
   140007608:	mov    r9,rbx
   14000760b:	mov    r8b,0x1
   14000760e:	mov    rdx,r14
   140007611:	mov    QWORD PTR [rsp+0x20],rax
   140007616:	mov    rcx,rdi
   140007619:	call   0x140007c08
   14000761e:	jmp    0x1400077c2
   140007623:	mov    rdx,QWORD PTR [rcx+0x8]
   140007627:	cmp    r8,QWORD PTR [rdx]
   14000762a:	jne    0x14000764d
   14000762c:	add    r8,0x18
   140007630:	mov    rdx,r9
   140007633:	call   0x140007b94
   140007638:	test   al,al
   14000763a:	je     0x1400077ac
   140007640:	mov    rbx,QWORD PTR [rsp+0x70]
   140007645:	mov    rdx,r11
   140007648:	mov    rcx,rdi
   14000764b:	jmp    0x140007603
   14000764d:	cmp    r8,rdx
   140007650:	jne    0x140007685
   140007652:	mov    rdx,QWORD PTR [rdx+0x10]
   140007656:	mov    r8,r9
   140007659:	add    rdx,0x18
   14000765d:	call   0x140007b94
   140007662:	test   al,al
   140007664:	je     0x1400077ac
   14000766a:	mov    rax,QWORD PTR [rdi+0x8]
   14000766e:	mov    rdx,r11
   140007671:	mov    rcx,rdi
   140007674:	mov    rbx,QWORD PTR [rax+0x10]
   140007678:	call   0x140007354
   14000767d:	mov    r9,rbx
   140007680:	xor    r8d,r8d
   140007683:	jmp    0x14000760e
   140007685:	add    r8,0x18
   140007689:	mov    rdx,r9
   14000768c:	call   0x140007b94
   140007691:	test   al,al
   140007693:	je     0x140007719
   140007699:	mov    rax,QWORD PTR [rsp+0x70]
   14000769e:	cmp    BYTE PTR [rax+0x69],bpl
   1400076a2:	je     0x1400076aa
   1400076a4:	mov    rbx,QWORD PTR [rax+0x10]
   1400076a8:	jmp    0x1400076eb
   1400076aa:	mov    rbx,QWORD PTR [rax]
   1400076ad:	cmp    BYTE PTR [rbx+0x69],bpl
   1400076b1:	jne    0x1400076c8
   1400076b3:	mov    rax,QWORD PTR [rbx+0x10]
   1400076b7:	jmp    0x1400076c0
   1400076b9:	mov    rbx,rax
   1400076bc:	mov    rax,QWORD PTR [rax+0x10]
   1400076c0:	cmp    BYTE PTR [rax+0x69],bpl
   1400076c4:	je     0x1400076b9
   1400076c6:	jmp    0x1400076eb
   1400076c8:	mov    rcx,QWORD PTR [rax+0x8]
   1400076cc:	jmp    0x1400076da
   1400076ce:	cmp    rax,QWORD PTR [rcx]
   1400076d1:	jne    0x1400076e0
   1400076d3:	mov    rax,rcx
   1400076d6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400076da:	cmp    BYTE PTR [rcx+0x69],bpl
   1400076de:	je     0x1400076ce
   1400076e0:	cmp    BYTE PTR [rax+0x69],bpl
   1400076e4:	mov    rbx,rax
   1400076e7:	cmove  rbx,rcx
   1400076eb:	lea    rdx,[rbx+0x18]
   1400076ef:	mov    r8,r11
   1400076f2:	call   0x140007b94
   1400076f7:	test   al,al
   1400076f9:	je     0x140007719
   1400076fb:	mov    rax,QWORD PTR [rbx+0x10]
   1400076ff:	mov    rdx,r11
   140007702:	mov    rcx,rdi
   140007705:	cmp    BYTE PTR [rax+0x69],bpl
   140007709:	jne    0x140007678
   14000770f:	mov    rbx,QWORD PTR [rsp+0x70]
   140007714:	jmp    0x140007603
   140007719:	mov    rdx,QWORD PTR [rsp+0x70]
   14000771e:	mov    r8,r11
   140007721:	add    rdx,0x18
   140007725:	call   0x140007b94
   14000772a:	test   al,al
   14000772c:	je     0x1400077ac
   14000772e:	mov    rsi,QWORD PTR [rsp+0x70]
   140007733:	mov    rbx,rsi
   140007736:	cmp    BYTE PTR [rsi+0x69],bpl
   14000773a:	jne    0x140007770
   14000773c:	mov    rax,QWORD PTR [rsi+0x10]
   140007740:	cmp    BYTE PTR [rax+0x69],bpl
   140007744:	jne    0x140007754
   140007746:	mov    rbx,rax
   140007749:	mov    rax,QWORD PTR [rax]
   14000774c:	cmp    BYTE PTR [rax+0x69],bpl
   140007750:	je     0x140007746
   140007752:	jmp    0x140007770
   140007754:	mov    rax,QWORD PTR [rsi+0x8]
   140007758:	jmp    0x140007767
   14000775a:	cmp    rbx,QWORD PTR [rax+0x10]
   14000775e:	jne    0x14000776d
   140007760:	mov    rbx,rax
   140007763:	mov    rax,QWORD PTR [rax+0x8]
   140007767:	cmp    BYTE PTR [rax+0x69],bpl
   14000776b:	je     0x14000775a
   14000776d:	mov    rbx,rax
   140007770:	cmp    rbx,QWORD PTR [rdi+0x8]
   140007774:	je     0x14000778b
   140007776:	lea    r8,[rbx+0x18]
   14000777a:	mov    rdx,r11
   14000777d:	call   0x140007b94
   140007782:	test   al,al
   140007784:	je     0x1400077ac
   140007786:	mov    rsi,QWORD PTR [rsp+0x70]
   14000778b:	mov    rax,QWORD PTR [rsi+0x10]
   14000778f:	mov    rdx,r11
   140007792:	mov    rcx,rdi
   140007795:	cmp    BYTE PTR [rax+0x69],bpl
   140007799:	je     0x140007603
   14000779f:	call   0x140007354
   1400077a4:	mov    r9,rsi
   1400077a7:	jmp    0x140007680
   1400077ac:	mov    r8,r11
   1400077af:	lea    rdx,[rsp+0x30]
   1400077b4:	mov    rcx,rdi
   1400077b7:	call   0x140007a78
   1400077bc:	mov    rcx,QWORD PTR [rax]
   1400077bf:	mov    QWORD PTR [r14],rcx
   1400077c2:	mov    rbx,QWORD PTR [rsp+0x60]
   1400077c7:	mov    rax,r14
   1400077ca:	mov    rbp,QWORD PTR [rsp+0x68]
   1400077cf:	add    rsp,0x40
   1400077d3:	pop    r14
   1400077d5:	pop    rdi
   1400077d6:	pop    rsi
   1400077d7:	ret    
   1400077d8:	int3   
   1400077d9:	int3   
   1400077da:	int3   
   1400077db:	int3   
   1400077dc:	int3   
   1400077dd:	int3   
   1400077de:	int3   
   1400077df:	int3   
   1400077e0:	mov    rax,rsp
   1400077e3:	mov    QWORD PTR [rax+0x8],rcx
   1400077e7:	push   rdi
   1400077e8:	sub    rsp,0x30
   1400077ec:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400077f4:	mov    QWORD PTR [rax+0x18],rbx
   1400077f8:	mov    QWORD PTR [rax+0x20],rsi
   1400077fc:	mov    rsi,rcx
   1400077ff:	lea    rax,[rip+0x61ba]        # 0x14000d9c0
   140007806:	mov    QWORD PTR [rcx],rax
   140007809:	mov    DWORD PTR [rcx+0x30],0xc0000001
   140007810:	mov    rdi,QWORD PTR [rip+0xb201]        # 0x140012a18
   140007817:	mov    rax,QWORD PTR [rdi]
   14000781a:	mov    rbx,QWORD PTR [rax+0x10]
   14000781e:	mov    rcx,rbx
   140007821:	call   QWORD PTR [rip+0x5c81]        # 0x14000d4a8
   140007827:	mov    rcx,rdi
   14000782a:	call   rbx
   14000782c:	nop
   14000782d:	lea    rcx,[rsi+0x38]
   140007831:	cmp    BYTE PTR [rcx+0x28],0x0
   140007835:	je     0x140007841
   140007837:	mov    BYTE PTR [rcx+0x28],0x0
   14000783b:	call   QWORD PTR [rip+0x5a97]        # 0x14000d2d8
   140007841:	lea    rbx,[rsi+0x8]
   140007845:	mov    QWORD PTR [rsp+0x40],rbx
   14000784a:	mov    r8,QWORD PTR [rbx+0x8]
   14000784e:	mov    r9,r8
   140007851:	mov    r8,QWORD PTR [r8]
   140007854:	lea    rdx,[rsp+0x48]
   140007859:	mov    rcx,rbx
   14000785c:	call   0x1400066e0
   140007861:	nop
   140007862:	mov    rcx,QWORD PTR [rbx+0x8]
   140007866:	mov    rbx,QWORD PTR [rsp+0x50]
   14000786b:	mov    rsi,QWORD PTR [rsp+0x58]
   140007870:	add    rsp,0x30
   140007874:	pop    rdi
   140007875:	rex.W jmp QWORD PTR [rip+0x5bec]        # 0x14000d468
   14000787c:	int3   
   14000787d:	int3   
   14000787e:	int3   
   14000787f:	int3   
   140007880:	int3   
   140007881:	int3   
   140007882:	int3   
   140007883:	int3   
   140007884:	int3   
   140007885:	int3   
   140007886:	int3   
   140007887:	int3   
   140007888:	int3   
   140007889:	int3   
   14000788a:	int3   
   14000788b:	int3   
   14000788c:	int3   
   14000788d:	int3   
   14000788e:	int3   
   14000788f:	int3   
   140007890:	mov    eax,0x1
   140007895:	lock xadd DWORD PTR [rcx+0x30],eax
   14000789a:	inc    eax
   14000789c:	ret    
   14000789d:	int3   
   14000789e:	int3   
   14000789f:	int3   
   1400078a0:	int3   
   1400078a1:	int3   
   1400078a2:	int3   
   1400078a3:	int3   
   1400078a4:	int3   
   1400078a5:	int3   
   1400078a6:	int3   
   1400078a7:	int3   
   1400078a8:	int3   
   1400078a9:	int3   
   1400078aa:	int3   
   1400078ab:	int3   
   1400078ac:	int3   
   1400078ad:	int3   
   1400078ae:	int3   
   1400078af:	int3   
   1400078b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400078b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400078ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400078bf:	push   r14
   1400078c1:	sub    rsp,0x20
   1400078c5:	mov    r14,rcx
   1400078c8:	or     esi,0xffffffff
   1400078cb:	lock xadd DWORD PTR [rcx+0x30],esi
   1400078d0:	sub    esi,0x1
   1400078d3:	jne    0x14000792a
   1400078d5:	mov    rdi,QWORD PTR [rip+0xb13c]        # 0x140012a18
   1400078dc:	mov    rax,QWORD PTR [rdi]
   1400078df:	mov    rbx,QWORD PTR [rax+0x8]
   1400078e3:	mov    rcx,rbx
   1400078e6:	call   QWORD PTR [rip+0x5bbc]        # 0x14000d4a8
   1400078ec:	mov    rcx,rdi
   1400078ef:	call   rbx
   1400078f1:	test   r14,r14
   1400078f4:	je     0x14000790e
   1400078f6:	mov    rax,QWORD PTR [r14]
   1400078f9:	mov    rbx,QWORD PTR [rax+0x38]
   1400078fd:	mov    rcx,rbx
   140007900:	call   QWORD PTR [rip+0x5ba2]        # 0x14000d4a8
   140007906:	lea    edx,[rsi+0x1]
   140007909:	mov    rcx,r14
   14000790c:	call   rbx
   14000790e:	mov    rdi,QWORD PTR [rip+0xb103]        # 0x140012a18
   140007915:	mov    rdx,QWORD PTR [rdi]
   140007918:	mov    rbx,QWORD PTR [rdx+0x10]
   14000791c:	mov    rcx,rbx
   14000791f:	call   QWORD PTR [rip+0x5b83]        # 0x14000d4a8
   140007925:	mov    rcx,rdi
   140007928:	call   rbx
   14000792a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000792f:	mov    eax,esi
   140007931:	mov    rsi,QWORD PTR [rsp+0x38]
   140007936:	mov    rdi,QWORD PTR [rsp+0x40]
   14000793b:	add    rsp,0x20
   14000793f:	pop    r14
   140007941:	ret    
   140007942:	int3   
   140007943:	int3   
   140007944:	int3   
   140007945:	int3   
   140007946:	int3   
   140007947:	int3   
   140007948:	int3   
   140007949:	int3   
   14000794a:	int3   
   14000794b:	int3   
   14000794c:	int3   
   14000794d:	int3   
   14000794e:	int3   
   14000794f:	int3   
   140007950:	mov    r9,r8
   140007953:	mov    r8,rdx
   140007956:	lea    rdx,[rip+0x68ab]        # 0x14000e208
   14000795d:	jmp    0x1400082d0
   140007962:	int3   
   140007963:	int3   
   140007964:	int3   
   140007965:	int3   
   140007966:	int3   
   140007967:	int3   
   140007968:	int3   
   140007969:	int3   
   14000796a:	int3   
   14000796b:	int3   
   14000796c:	int3   
   14000796d:	int3   
   14000796e:	int3   
   14000796f:	int3   
   140007970:	mov    QWORD PTR [rsp+0x8],rbx
   140007975:	push   rdi
   140007976:	sub    rsp,0x20
   14000797a:	mov    ebx,edx
   14000797c:	mov    rdi,rcx
   14000797f:	call   0x1400077e0
   140007984:	test   bl,0x1
   140007987:	je     0x140007992
   140007989:	mov    rcx,rdi
   14000798c:	call   QWORD PTR [rip+0x5ad6]        # 0x14000d468
   140007992:	mov    rax,rdi
   140007995:	mov    rbx,QWORD PTR [rsp+0x30]
   14000799a:	add    rsp,0x20
   14000799e:	pop    rdi
   14000799f:	ret    
   1400079a0:	int3   
   1400079a1:	int3   
   1400079a2:	int3   
   1400079a3:	int3   
   1400079a4:	int3   
   1400079a5:	int3   
   1400079a6:	int3   
   1400079a7:	int3   
   1400079a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400079ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400079b2:	mov    QWORD PTR [rsp+0x18],rsi
   1400079b7:	push   rdi
   1400079b8:	sub    rsp,0x20
   1400079bc:	or     rax,0xffffffffffffffff
   1400079c0:	movzx  esi,r8w
   1400079c4:	mov    r8,QWORD PTR [rcx+0x10]
   1400079c8:	mov    rbx,rcx
   1400079cb:	sub    rax,r8
   1400079ce:	cmp    rax,0x1
   1400079d2:	jbe    0x140007a63
   1400079d8:	lea    rdi,[r8+0x1]
   1400079dc:	movabs rax,0x7ffffffffffffffe
   1400079e6:	cmp    rdi,rax
   1400079e9:	ja     0x140007a69
   1400079eb:	xor    ebp,ebp
   1400079ed:	cmp    QWORD PTR [rcx+0x18],rdi
   1400079f1:	jae    0x1400079fd
   1400079f3:	mov    rdx,rdi
   1400079f6:	call   0x140006804
   1400079fb:	jmp    0x140007a18
   1400079fd:	test   rdi,rdi
   140007a00:	jne    0x140007a1d
   140007a02:	cmp    QWORD PTR [rcx+0x18],0x8
   140007a07:	mov    QWORD PTR [rcx+0x10],rbp
   140007a0b:	jb     0x140007a12
   140007a0d:	mov    rax,QWORD PTR [rcx]
   140007a10:	jmp    0x140007a15
   140007a12:	mov    rax,rcx
   140007a15:	mov    WORD PTR [rax],bp
   140007a18:	test   rdi,rdi
   140007a1b:	je     0x140007a4b
   140007a1d:	cmp    QWORD PTR [rbx+0x18],0x8
   140007a22:	mov    rcx,QWORD PTR [rbx+0x10]
   140007a26:	jb     0x140007a2d
   140007a28:	mov    rax,QWORD PTR [rbx]
   140007a2b:	jmp    0x140007a30
   140007a2d:	mov    rax,rbx
   140007a30:	mov    WORD PTR [rax+rcx*2],si
   140007a34:	cmp    QWORD PTR [rbx+0x18],0x8
   140007a39:	mov    QWORD PTR [rbx+0x10],rdi
   140007a3d:	jb     0x140007a44
   140007a3f:	mov    rax,QWORD PTR [rbx]
   140007a42:	jmp    0x140007a47
   140007a44:	mov    rax,rbx
   140007a47:	mov    WORD PTR [rax+rdi*2],bp
   140007a4b:	mov    rbp,QWORD PTR [rsp+0x38]
   140007a50:	mov    rax,rbx
   140007a53:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a58:	mov    rsi,QWORD PTR [rsp+0x40]
   140007a5d:	add    rsp,0x20
   140007a61:	pop    rdi
   140007a62:	ret    
   140007a63:	call   0x140006940
   140007a68:	int3   
   140007a69:	call   0x140006940
   140007a6e:	int3   
   140007a6f:	int3   
   140007a70:	int3   
   140007a71:	int3   
   140007a72:	int3   
   140007a73:	int3   
   140007a74:	int3   
   140007a75:	int3   
   140007a76:	int3   
   140007a77:	int3   
   140007a78:	mov    QWORD PTR [rsp+0x10],rbx
   140007a7d:	mov    QWORD PTR [rsp+0x18],rbp
   140007a82:	push   rsi
   140007a83:	push   rdi
   140007a84:	push   r14
   140007a86:	sub    rsp,0x30
   140007a8a:	mov    rbx,QWORD PTR [rcx+0x8]
   140007a8e:	mov    r14,r8
   140007a91:	mov    rdi,rdx
   140007a94:	mov    rsi,rcx
   140007a97:	mov    bpl,0x1
   140007a9a:	mov    r11,QWORD PTR [rbx+0x8]
   140007a9e:	jmp    0x140007abf
   140007aa0:	lea    r8,[r11+0x18]
   140007aa4:	mov    rdx,r14
   140007aa7:	mov    rbx,r11
   140007aaa:	call   0x140007b94
   140007aaf:	mov    bpl,al
   140007ab2:	test   al,al
   140007ab4:	je     0x140007abb
   140007ab6:	mov    r11,QWORD PTR [r11]
   140007ab9:	jmp    0x140007abf
   140007abb:	mov    r11,QWORD PTR [r11+0x10]
   140007abf:	cmp    BYTE PTR [r11+0x69],0x0
   140007ac4:	je     0x140007aa0
   140007ac6:	mov    r11,rbx
   140007ac9:	test   bpl,bpl
   140007acc:	je     0x140007b4d
   140007ace:	mov    rax,QWORD PTR [rsi+0x8]
   140007ad2:	cmp    rbx,QWORD PTR [rax]
   140007ad5:	jne    0x140007b08
   140007ad7:	mov    rdx,r14
   140007ada:	mov    rcx,rsi
   140007add:	call   0x140007354
   140007ae2:	mov    r8b,0x1
   140007ae5:	mov    r9,rbx
   140007ae8:	mov    QWORD PTR [rsp+0x20],rax
   140007aed:	lea    rdx,[rsp+0x50]
   140007af2:	mov    rcx,rsi
   140007af5:	call   0x140007c08
   140007afa:	mov    rax,QWORD PTR [rsp+0x50]
   140007aff:	mov    QWORD PTR [rdi],rax
   140007b02:	mov    BYTE PTR [rdi+0x8],0x1
   140007b06:	jmp    0x140007b77
   140007b08:	cmp    BYTE PTR [rbx+0x69],0x0
   140007b0c:	je     0x140007b14
   140007b0e:	mov    r11,QWORD PTR [rbx+0x10]
   140007b12:	jmp    0x140007b4d
   140007b14:	mov    rax,QWORD PTR [rbx]
   140007b17:	cmp    BYTE PTR [rax+0x69],0x0
   140007b1b:	jne    0x140007b2c
   140007b1d:	mov    r11,rax
   140007b20:	mov    rax,QWORD PTR [rax+0x10]
   140007b24:	cmp    BYTE PTR [rax+0x69],0x0
   140007b28:	je     0x140007b1d
   140007b2a:	jmp    0x140007b4d
   140007b2c:	mov    rax,QWORD PTR [rbx+0x8]
   140007b30:	jmp    0x140007b3e
   140007b32:	cmp    r11,QWORD PTR [rax]
   140007b35:	jne    0x140007b44
   140007b37:	mov    r11,rax
   140007b3a:	mov    rax,QWORD PTR [rax+0x8]
   140007b3e:	cmp    BYTE PTR [rax+0x69],0x0
   140007b42:	je     0x140007b32
   140007b44:	cmp    BYTE PTR [r11+0x69],0x0
   140007b49:	cmove  r11,rax
   140007b4d:	lea    rdx,[r11+0x18]
   140007b51:	mov    r8,r14
   140007b54:	call   0x140007b94
   140007b59:	test   al,al
   140007b5b:	je     0x140007b70
   140007b5d:	mov    rdx,r14
   140007b60:	mov    rcx,rsi
   140007b63:	call   0x140007354
   140007b68:	mov    r8b,bpl
   140007b6b:	jmp    0x140007ae5
   140007b70:	mov    QWORD PTR [rdi],r11
   140007b73:	mov    BYTE PTR [rdi+0x8],0x0
   140007b77:	mov    rbx,QWORD PTR [rsp+0x58]
   140007b7c:	mov    rax,rdi
   140007b7f:	mov    rbp,QWORD PTR [rsp+0x60]
   140007b84:	add    rsp,0x30
   140007b88:	pop    r14
   140007b8a:	pop    rdi
   140007b8b:	pop    rsi
   140007b8c:	ret    
   140007b8d:	int3   
   140007b8e:	int3   
   140007b8f:	int3   
   140007b90:	int3   
   140007b91:	int3   
   140007b92:	int3   
   140007b93:	int3   
   140007b94:	cmp    QWORD PTR [r8+0x18],0x8
   140007b99:	mov    r10,QWORD PTR [r8+0x10]
   140007b9d:	jb     0x140007ba2
   140007b9f:	mov    r8,QWORD PTR [r8]
   140007ba2:	cmp    QWORD PTR [rdx+0x18],0x8
   140007ba7:	mov    r9,QWORD PTR [rdx+0x10]
   140007bab:	jb     0x140007bb0
   140007bad:	mov    rdx,QWORD PTR [rdx]
   140007bb0:	cmp    r9,r10
   140007bb3:	mov    rcx,r10
   140007bb6:	cmovb  rcx,r9
   140007bba:	test   rcx,rcx
   140007bbd:	je     0x140007bd6
   140007bbf:	movzx  eax,WORD PTR [r8]
   140007bc3:	cmp    WORD PTR [rdx],ax
   140007bc6:	jne    0x140007bf8
   140007bc8:	add    rdx,0x2
   140007bcc:	add    r8,0x2
   140007bd0:	sub    rcx,0x1
   140007bd4:	jne    0x140007bbf
   140007bd6:	xor    eax,eax
   140007bd8:	movsxd rcx,eax
   140007bdb:	xor    eax,eax
   140007bdd:	cmp    r9,r10
   140007be0:	setne  al
   140007be3:	or     edx,0xffffffff
   140007be6:	cmp    r9,r10
   140007be9:	cmovb  eax,edx
   140007bec:	test   rcx,rcx
   140007bef:	cmovne eax,ecx
   140007bf2:	test   eax,eax
   140007bf4:	sets   al
   140007bf7:	ret    
   140007bf8:	sbb    eax,eax
   140007bfa:	and    eax,0xfffffffe
   140007bfd:	inc    eax
   140007bff:	jmp    0x140007bd8
   140007c01:	int3   
   140007c02:	int3   
   140007c03:	int3   
   140007c04:	int3   
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	mov    QWORD PTR [rsp+0x8],rbx
   140007c0d:	push   rdi
   140007c0e:	sub    rsp,0x20
   140007c12:	mov    rax,QWORD PTR [rcx+0x10]
   140007c16:	mov    r10,rcx
   140007c19:	movabs rcx,0x333333333333332
   140007c23:	mov    r11b,r8b
   140007c26:	mov    rbx,rdx
   140007c29:	cmp    rax,rcx
   140007c2c:	jae    0x140007e78
   140007c32:	mov    r8,QWORD PTR [rsp+0x50]
   140007c37:	inc    rax
   140007c3a:	mov    QWORD PTR [r10+0x10],rax
   140007c3e:	xor    edi,edi
   140007c40:	mov    QWORD PTR [r8+0x8],r9
   140007c44:	mov    rax,QWORD PTR [r10+0x8]
   140007c48:	cmp    r9,rax
   140007c4b:	jne    0x140007c5e
   140007c4d:	mov    QWORD PTR [rax+0x8],r8
   140007c51:	mov    rax,QWORD PTR [r10+0x8]
   140007c55:	mov    QWORD PTR [rax],r8
   140007c58:	mov    rax,QWORD PTR [r10+0x8]
   140007c5c:	jmp    0x140007c82
   140007c5e:	test   r11b,r11b
   140007c61:	je     0x140007c74
   140007c63:	mov    QWORD PTR [r9],r8
   140007c66:	mov    rax,QWORD PTR [r10+0x8]
   140007c6a:	cmp    r9,QWORD PTR [rax]
   140007c6d:	jne    0x140007c86
   140007c6f:	mov    QWORD PTR [rax],r8
   140007c72:	jmp    0x140007c86
   140007c74:	mov    QWORD PTR [r9+0x10],r8
   140007c78:	mov    rax,QWORD PTR [r10+0x8]
   140007c7c:	cmp    r9,QWORD PTR [rax+0x10]
   140007c80:	jne    0x140007c86
   140007c82:	mov    QWORD PTR [rax+0x10],r8
   140007c86:	mov    rax,QWORD PTR [r8+0x8]
   140007c8a:	mov    rdx,r8
   140007c8d:	jmp    0x140007e51
   140007c92:	mov    rax,QWORD PTR [rdx+0x8]
   140007c96:	mov    r9,QWORD PTR [rax+0x8]
   140007c9a:	mov    rcx,QWORD PTR [r9]
   140007c9d:	cmp    rax,rcx
   140007ca0:	jne    0x140007d6e
   140007ca6:	mov    rcx,QWORD PTR [r9+0x10]
   140007caa:	cmp    BYTE PTR [rcx+0x68],dil
   140007cae:	je     0x140007d74
   140007cb4:	cmp    rdx,QWORD PTR [rax+0x10]
   140007cb8:	jne    0x140007d06
   140007cba:	mov    rcx,QWORD PTR [rax+0x10]
   140007cbe:	mov    rdx,rax
   140007cc1:	mov    rax,QWORD PTR [rcx]
   140007cc4:	mov    QWORD PTR [rdx+0x10],rax
   140007cc8:	mov    rax,QWORD PTR [rcx]
   140007ccb:	cmp    BYTE PTR [rax+0x69],dil
   140007ccf:	jne    0x140007cd5
   140007cd1:	mov    QWORD PTR [rax+0x8],rdx
   140007cd5:	mov    rax,QWORD PTR [rdx+0x8]
   140007cd9:	mov    QWORD PTR [rcx+0x8],rax
   140007cdd:	mov    rax,QWORD PTR [r10+0x8]
   140007ce1:	cmp    rdx,QWORD PTR [rax+0x8]
   140007ce5:	jne    0x140007ced
   140007ce7:	mov    QWORD PTR [rax+0x8],rcx
   140007ceb:	jmp    0x140007cff
   140007ced:	mov    rax,QWORD PTR [rdx+0x8]
   140007cf1:	cmp    rdx,QWORD PTR [rax]
   140007cf4:	jne    0x140007cfb
   140007cf6:	mov    QWORD PTR [rax],rcx
   140007cf9:	jmp    0x140007cff
   140007cfb:	mov    QWORD PTR [rax+0x10],rcx
   140007cff:	mov    QWORD PTR [rcx],rdx
   140007d02:	mov    QWORD PTR [rdx+0x8],rcx
   140007d06:	mov    rax,QWORD PTR [rdx+0x8]
   140007d0a:	mov    BYTE PTR [rax+0x68],0x1
   140007d0e:	mov    rax,QWORD PTR [rdx+0x8]
   140007d12:	mov    rcx,QWORD PTR [rax+0x8]
   140007d16:	mov    BYTE PTR [rcx+0x68],dil
   140007d1a:	mov    rax,QWORD PTR [rdx+0x8]
   140007d1e:	mov    rcx,QWORD PTR [rax+0x8]
   140007d22:	mov    r9,QWORD PTR [rcx]
   140007d25:	mov    rax,QWORD PTR [r9+0x10]
   140007d29:	mov    QWORD PTR [rcx],rax
   140007d2c:	mov    rax,QWORD PTR [r9+0x10]
   140007d30:	cmp    BYTE PTR [rax+0x69],dil
   140007d34:	jne    0x140007d3a
   140007d36:	mov    QWORD PTR [rax+0x8],rcx
   140007d3a:	mov    rax,QWORD PTR [rcx+0x8]
   140007d3e:	mov    QWORD PTR [r9+0x8],rax
   140007d42:	mov    rax,QWORD PTR [r10+0x8]
   140007d46:	cmp    rcx,QWORD PTR [rax+0x8]
   140007d4a:	jne    0x140007d52
   140007d4c:	mov    QWORD PTR [rax+0x8],r9
   140007d50:	jmp    0x140007d65
   140007d52:	mov    rax,QWORD PTR [rcx+0x8]
   140007d56:	cmp    rcx,QWORD PTR [rax+0x10]
   140007d5a:	jne    0x140007d62
   140007d5c:	mov    QWORD PTR [rax+0x10],r9
   140007d60:	jmp    0x140007d65
   140007d62:	mov    QWORD PTR [rax],r9
   140007d65:	mov    QWORD PTR [r9+0x10],rcx
   140007d69:	jmp    0x140007e49
   140007d6e:	cmp    BYTE PTR [rcx+0x68],dil
   140007d72:	jne    0x140007d95
   140007d74:	mov    BYTE PTR [rax+0x68],0x1
   140007d78:	mov    BYTE PTR [rcx+0x68],0x1
   140007d7c:	mov    rax,QWORD PTR [rdx+0x8]
   140007d80:	mov    rcx,QWORD PTR [rax+0x8]
   140007d84:	mov    BYTE PTR [rcx+0x68],dil
   140007d88:	mov    rax,QWORD PTR [rdx+0x8]
   140007d8c:	mov    rdx,QWORD PTR [rax+0x8]
   140007d90:	jmp    0x140007e4d
   140007d95:	cmp    rdx,QWORD PTR [rax]
   140007d98:	jne    0x140007de8
   140007d9a:	mov    rcx,QWORD PTR [rax]
   140007d9d:	mov    rdx,rax
   140007da0:	mov    rax,QWORD PTR [rcx+0x10]
   140007da4:	mov    QWORD PTR [rdx],rax
   140007da7:	mov    rax,QWORD PTR [rcx+0x10]
   140007dab:	cmp    BYTE PTR [rax+0x69],dil
   140007daf:	jne    0x140007db5
   140007db1:	mov    QWORD PTR [rax+0x8],rdx
   140007db5:	mov    rax,QWORD PTR [rdx+0x8]
   140007db9:	mov    QWORD PTR [rcx+0x8],rax
   140007dbd:	mov    rax,QWORD PTR [r10+0x8]
   140007dc1:	cmp    rdx,QWORD PTR [rax+0x8]
   140007dc5:	jne    0x140007dcd
   140007dc7:	mov    QWORD PTR [rax+0x8],rcx
   140007dcb:	jmp    0x140007de0
   140007dcd:	mov    rax,QWORD PTR [rdx+0x8]
   140007dd1:	cmp    rdx,QWORD PTR [rax+0x10]
   140007dd5:	jne    0x140007ddd
   140007dd7:	mov    QWORD PTR [rax+0x10],rcx
   140007ddb:	jmp    0x140007de0
   140007ddd:	mov    QWORD PTR [rax],rcx
   140007de0:	mov    QWORD PTR [rcx+0x10],rdx
   140007de4:	mov    QWORD PTR [rdx+0x8],rcx
   140007de8:	mov    rax,QWORD PTR [rdx+0x8]
   140007dec:	mov    BYTE PTR [rax+0x68],0x1
   140007df0:	mov    rax,QWORD PTR [rdx+0x8]
   140007df4:	mov    rcx,QWORD PTR [rax+0x8]
   140007df8:	mov    BYTE PTR [rcx+0x68],dil
   140007dfc:	mov    rax,QWORD PTR [rdx+0x8]
   140007e00:	mov    rcx,QWORD PTR [rax+0x8]
   140007e04:	mov    r9,QWORD PTR [rcx+0x10]
   140007e08:	mov    rax,QWORD PTR [r9]
   140007e0b:	mov    QWORD PTR [rcx+0x10],rax
   140007e0f:	mov    rax,QWORD PTR [r9]
   140007e12:	cmp    BYTE PTR [rax+0x69],dil
   140007e16:	jne    0x140007e1c
   140007e18:	mov    QWORD PTR [rax+0x8],rcx
   140007e1c:	mov    rax,QWORD PTR [rcx+0x8]
   140007e20:	mov    QWORD PTR [r9+0x8],rax
   140007e24:	mov    rax,QWORD PTR [r10+0x8]
   140007e28:	cmp    rcx,QWORD PTR [rax+0x8]
   140007e2c:	jne    0x140007e34
   140007e2e:	mov    QWORD PTR [rax+0x8],r9
   140007e32:	jmp    0x140007e46
   140007e34:	mov    rax,QWORD PTR [rcx+0x8]
   140007e38:	cmp    rcx,QWORD PTR [rax]
   140007e3b:	jne    0x140007e42
   140007e3d:	mov    QWORD PTR [rax],r9
   140007e40:	jmp    0x140007e46
   140007e42:	mov    QWORD PTR [rax+0x10],r9
   140007e46:	mov    QWORD PTR [r9],rcx
   140007e49:	mov    QWORD PTR [rcx+0x8],r9
   140007e4d:	mov    rax,QWORD PTR [rdx+0x8]
   140007e51:	cmp    BYTE PTR [rax+0x68],dil
   140007e55:	je     0x140007c92
   140007e5b:	mov    rax,QWORD PTR [r10+0x8]
   140007e5f:	mov    QWORD PTR [rbx],r8
   140007e62:	mov    rcx,QWORD PTR [rax+0x8]
   140007e66:	mov    rax,rbx
   140007e69:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e6e:	mov    BYTE PTR [rcx+0x68],0x1
   140007e72:	add    rsp,0x20
   140007e76:	pop    rdi
   140007e77:	ret    
   140007e78:	mov    rcx,QWORD PTR [rsp+0x50]
   140007e7d:	call   0x140006efc
   140007e82:	mov    rcx,rax
   140007e85:	call   0x1400072e8
   140007e8a:	mov    rdx,rax
   140007e8d:	call   0x1400072f4
   140007e92:	mov    rdx,QWORD PTR [rsp+0x50]
   140007e97:	call   0x1400067f4
   140007e9c:	lea    rcx,[rip+0x641d]        # 0x14000e2c0
   140007ea3:	call   0x14000ade8
   140007ea8:	int3   
   140007ea9:	int3   
   140007eaa:	int3   
   140007eab:	int3   
   140007eac:	int3   
   140007ead:	int3   
   140007eae:	int3   
   140007eaf:	int3   
   140007eb0:	mov    QWORD PTR [rsp+0x8],rcx
   140007eb5:	push   rbx
   140007eb6:	push   rsi
   140007eb7:	push   rdi
   140007eb8:	push   r12
   140007eba:	push   r14
   140007ebc:	push   r15
   140007ebe:	sub    rsp,0x38
   140007ec2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007ecb:	mov    r12,rcx
   140007ece:	xor    esi,esi
   140007ed0:	test   rcx,rcx
   140007ed3:	jne    0x140007edf
   140007ed5:	mov    eax,0x80004003
   140007eda:	jmp    0x140007fc4
   140007edf:	mov    QWORD PTR [rcx],rsi
   140007ee2:	mov    r15d,0x8007000e
   140007ee8:	mov    DWORD PTR [rsp+0x78],r15d
   140007eed:	mov    QWORD PTR [rsp+0x80],rsi
   140007ef5:	mov    ecx,0x68
   140007efa:	call   0x14000acbc
   140007eff:	mov    r14,rax
   140007f02:	mov    QWORD PTR [rsp+0x88],rax
   140007f0a:	test   rax,rax
   140007f0d:	je     0x140007f5c
   140007f0f:	lea    rcx,[rax+0x8]
   140007f13:	call   0x14000615c
   140007f18:	mov    QWORD PTR [r14+0x28],rsi
   140007f1c:	mov    DWORD PTR [r14+0x30],esi
   140007f20:	xor    edx,edx
   140007f22:	lea    r8d,[rdx+0x28]
   140007f26:	lea    rcx,[r14+0x38]
   140007f2a:	call   0x14000b71c
   140007f2f:	mov    BYTE PTR [r14+0x60],sil
   140007f33:	lea    rax,[rip+0x5a86]        # 0x14000d9c0
   140007f3a:	mov    QWORD PTR [r14],rax
   140007f3d:	mov    rdi,QWORD PTR [rip+0xaad4]        # 0x140012a18
   140007f44:	mov    rax,QWORD PTR [rdi]
   140007f47:	mov    rbx,QWORD PTR [rax+0x8]
   140007f4b:	mov    rcx,rbx
   140007f4e:	call   QWORD PTR [rip+0x5554]        # 0x14000d4a8
   140007f54:	mov    rcx,rdi
   140007f57:	call   rbx
   140007f59:	nop
   140007f5a:	jmp    0x140007f5f
   140007f5c:	mov    r14,rsi
   140007f5f:	mov    QWORD PTR [rsp+0x80],r14
   140007f67:	jmp    0x140007f7d
   140007f69:	xor    esi,esi
   140007f6b:	mov    r12,QWORD PTR [rsp+0x70]
   140007f70:	mov    r15d,DWORD PTR [rsp+0x78]
   140007f75:	mov    r14,QWORD PTR [rsp+0x80]
   140007f7d:	test   r14,r14
   140007f80:	je     0x140007fbd
   140007f82:	lea    rcx,[r14+0x38]
   140007f86:	call   0x1400033bc
   140007f8b:	mov    r15d,eax
   140007f8e:	test   eax,eax
   140007f90:	js     0x140007f97
   140007f92:	mov    BYTE PTR [r14+0x60],0x1
   140007f97:	cmovns r15d,esi
   140007f9b:	test   r15d,r15d
   140007f9e:	je     0x140007fbd
   140007fa0:	mov    r8,QWORD PTR [r14]
   140007fa3:	mov    rbx,QWORD PTR [r8+0x38]
   140007fa7:	mov    rcx,rbx
   140007faa:	call   QWORD PTR [rip+0x54f8]        # 0x14000d4a8
   140007fb0:	mov    edx,0x1
   140007fb5:	mov    rcx,r14
   140007fb8:	call   rbx
   140007fba:	mov    r14,rsi
   140007fbd:	mov    QWORD PTR [r12],r14
   140007fc1:	mov    eax,r15d
   140007fc4:	add    rsp,0x38
   140007fc8:	pop    r15
   140007fca:	pop    r14
   140007fcc:	pop    r12
   140007fce:	pop    rdi
   140007fcf:	pop    rsi
   140007fd0:	pop    rbx
   140007fd1:	ret    
   140007fd2:	int3   
   140007fd3:	int3   
   140007fd4:	int3   
   140007fd5:	int3   
   140007fd6:	int3   
   140007fd7:	int3   
   140007fd8:	int3   
   140007fd9:	int3   
   140007fda:	int3   
   140007fdb:	int3   
   140007fdc:	int3   
   140007fdd:	int3   
   140007fde:	int3   
   140007fdf:	int3   
   140007fe0:	rex push rbx
   140007fe2:	sub    rsp,0x40
   140007fe6:	mov    rbx,rcx
   140007fe9:	test   rdx,rdx
   140007fec:	jne    0x140007ffe
   140007fee:	lea    ecx,[rdx+0x10]
   140007ff1:	call   0x14000acbc
   140007ff6:	mov    rdx,rax
   140007ff9:	test   rax,rax
   140007ffc:	je     0x140008019
   140007ffe:	lea    rax,[rip+0x598b]        # 0x14000d990
   140008005:	mov    QWORD PTR [rdx],rax
   140008008:	mov    rax,QWORD PTR [rbx+0x8]
   14000800c:	mov    QWORD PTR [rdx+0x8],rax
   140008010:	mov    rax,rdx
   140008013:	add    rsp,0x40
   140008017:	pop    rbx
   140008018:	ret    
   140008019:	lea    rcx,[rsp+0x20]
   14000801e:	call   0x140005514
   140008023:	lea    rdx,[rip+0x8956]        # 0x140010980
   14000802a:	lea    rcx,[rsp+0x20]
   14000802f:	call   0x14000b740
   140008034:	int3   
   140008035:	int3   
   140008036:	int3   
   140008037:	int3   
   140008038:	int3   
   140008039:	int3   
   14000803a:	int3   
   14000803b:	int3   
   14000803c:	int3   
   14000803d:	int3   
   14000803e:	int3   
   14000803f:	int3   
   140008040:	mov    BYTE PTR [rsp+0x20],r9b
   140008045:	push   rbx
   140008046:	sub    rsp,0x30
   14000804a:	and    DWORD PTR [rsp+0x20],0x0
   14000804f:	lea    r9,[rsp+0x58]
   140008054:	add    rcx,0x8
   140008058:	mov    rbx,rdx
   14000805b:	call   0x1400080e0
   140008060:	mov    rax,rbx
   140008063:	add    rsp,0x30
   140008067:	pop    rbx
   140008068:	ret    
   140008069:	int3   
   14000806a:	int3   
   14000806b:	int3   
   14000806c:	int3   
   14000806d:	int3   
   14000806e:	int3   
   14000806f:	int3   
   140008070:	lea    rax,[rip+0xa1b9]        # 0x140012230
   140008077:	ret    
   140008078:	int3   
   140008079:	int3   
   14000807a:	int3   
   14000807b:	int3   
   14000807c:	int3   
   14000807d:	int3   
   14000807e:	int3   
   14000807f:	int3   
   140008080:	lea    rax,[rcx+0x8]
   140008084:	ret    
   140008085:	int3   
   140008086:	int3   
   140008087:	int3   
   140008088:	int3   
   140008089:	int3   
   14000808a:	int3   
   14000808b:	int3   
   14000808c:	int3   
   14000808d:	int3   
   14000808e:	int3   
   14000808f:	int3   
   140008090:	mov    QWORD PTR [rsp+0x8],rbx
   140008095:	mov    QWORD PTR [rsp+0x10],rsi
   14000809a:	push   rdi
   14000809b:	sub    rsp,0x20
   14000809f:	mov    rax,QWORD PTR [rcx]
   1400080a2:	mov    rsi,rcx
   1400080a5:	mov    dil,dl
   1400080a8:	mov    rbx,QWORD PTR [rax+0x20]
   1400080ac:	mov    rcx,rbx
   1400080af:	call   QWORD PTR [rip+0x53f3]        # 0x14000d4a8
   1400080b5:	xor    edx,edx
   1400080b7:	mov    rcx,rsi
   1400080ba:	call   rbx
   1400080bc:	test   dil,dil
   1400080bf:	je     0x1400080ca
   1400080c1:	mov    rcx,rsi
   1400080c4:	call   QWORD PTR [rip+0x539e]        # 0x14000d468
   1400080ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400080cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400080d4:	add    rsp,0x20
   1400080d8:	pop    rdi
   1400080d9:	ret    
   1400080da:	int3   
   1400080db:	int3   
   1400080dc:	int3   
   1400080dd:	int3   
   1400080de:	int3   
   1400080df:	int3   
   1400080e0:	mov    rax,rsp
   1400080e3:	mov    QWORD PTR [rax+0x10],rdx
   1400080e7:	push   rbp
   1400080e8:	push   rsi
   1400080e9:	push   rdi
   1400080ea:	sub    rsp,0x50
   1400080ee:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   1400080f6:	mov    QWORD PTR [rax+0x18],rbx
   1400080fa:	mov    rdi,r9
   1400080fd:	mov    rsi,r8
   140008100:	mov    rbp,rdx
   140008103:	and    DWORD PTR [rax-0x48],0x0
   140008107:	mov    rbx,QWORD PTR [rcx]
   14000810a:	mov    rcx,rbx
   14000810d:	call   QWORD PTR [rip+0x5395]        # 0x14000d4a8
   140008113:	mov    r8b,BYTE PTR [rdi]
   140008116:	mov    rdx,rsi
   140008119:	lea    rcx,[rsp+0x30]
   14000811e:	call   rbx
   140008120:	nop
   140008121:	mov    rdx,rax
   140008124:	mov    rcx,rbp
   140008127:	call   0x140008174
   14000812c:	mov    DWORD PTR [rsp+0x20],0x1
   140008134:	mov    r8,QWORD PTR [rsp+0x38]
   140008139:	mov    r9,r8
   14000813c:	mov    r8,QWORD PTR [r8]
   14000813f:	lea    rdx,[rsp+0x70]
   140008144:	lea    rcx,[rsp+0x30]
   140008149:	call   0x1400066e0
   14000814e:	nop
   14000814f:	mov    rcx,QWORD PTR [rsp+0x38]
   140008154:	call   QWORD PTR [rip+0x530e]        # 0x14000d468
   14000815a:	mov    rax,rbp
   14000815d:	mov    rbx,QWORD PTR [rsp+0x80]
   140008165:	add    rsp,0x50
   140008169:	pop    rdi
   14000816a:	pop    rsi
   14000816b:	pop    rbp
   14000816c:	ret    
   14000816d:	int3   
   14000816e:	int3   
   14000816f:	int3   
   140008170:	int3   
   140008171:	int3   
   140008172:	int3   
   140008173:	int3   
   140008174:	mov    rax,rsp
   140008177:	mov    QWORD PTR [rax+0x8],rcx
   14000817b:	push   rdi
   14000817c:	sub    rsp,0x40
   140008180:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140008188:	mov    QWORD PTR [rax+0x10],rbx
   14000818c:	mov    QWORD PTR [rax+0x18],rsi
   140008190:	mov    rsi,rdx
   140008193:	mov    rbx,rcx
   140008196:	xor    edi,edi
   140008198:	mov    QWORD PTR [rcx+0x10],rdi
   14000819c:	lea    ecx,[rdi+0x70]
   14000819f:	call   0x14000acbc
   1400081a4:	test   rax,rax
   1400081a7:	je     0x1400081e3
   1400081a9:	mov    QWORD PTR [rbx+0x8],rax
   1400081ad:	mov    QWORD PTR [rax],rax
   1400081b0:	mov    rax,QWORD PTR [rbx+0x8]
   1400081b4:	mov    QWORD PTR [rax+0x8],rax
   1400081b8:	mov    rax,QWORD PTR [rbx+0x8]
   1400081bc:	mov    QWORD PTR [rax+0x10],rax
   1400081c0:	mov    rax,QWORD PTR [rbx+0x8]
   1400081c4:	mov    BYTE PTR [rax+rdi*1+0x68],0x1
   1400081c9:	inc    rdi
   1400081cc:	cmp    rdi,0x2
   1400081d0:	jl     0x1400081c0
   1400081d2:	mov    rdx,rsi
   1400081d5:	mov    rcx,rbx
   1400081d8:	call   0x140008218
   1400081dd:	nop
   1400081de:	mov    rax,rbx
   1400081e1:	jmp    0x1400081ff
   1400081e3:	lea    rcx,[rsp+0x28]
   1400081e8:	call   0x140005514
   1400081ed:	lea    rdx,[rip+0x878c]        # 0x140010980
   1400081f4:	lea    rcx,[rsp+0x28]
   1400081f9:	call   0x14000b740
   1400081fe:	int3   
   1400081ff:	mov    rbx,QWORD PTR [rsp+0x58]
   140008204:	mov    rsi,QWORD PTR [rsp+0x60]
   140008209:	add    rsp,0x40
   14000820d:	pop    rdi
   14000820e:	ret    
   14000820f:	int3   
   140008210:	int3   
   140008211:	int3   
   140008212:	int3   
   140008213:	int3   
   140008214:	int3   
   140008215:	int3   
   140008216:	int3   
   140008217:	int3   
   140008218:	cmp    rcx,rdx
   14000821b:	je     0x1400082c6
   140008221:	mov    QWORD PTR [rsp+0x8],rbx
   140008226:	mov    QWORD PTR [rsp+0x10],rbp
   14000822b:	mov    QWORD PTR [rsp+0x18],rsi
   140008230:	push   rdi
   140008231:	sub    rsp,0x20
   140008235:	mov    rax,QWORD PTR [rcx+0x8]
   140008239:	mov    rbp,rdx
   14000823c:	mov    rbx,rcx
   14000823f:	mov    rdi,QWORD PTR [rax+0x8]
   140008243:	mov    rsi,rdi
   140008246:	cmp    BYTE PTR [rdi+0x69],0x0
   14000824a:	jne    0x140008276
   14000824c:	mov    rdx,QWORD PTR [rsi+0x10]
   140008250:	mov    rcx,rbx
   140008253:	call   0x140006e9c
   140008258:	mov    rsi,QWORD PTR [rsi]
   14000825b:	lea    rdx,[rdi+0x18]
   14000825f:	call   0x1400072f4
   140008264:	mov    rcx,rdi
   140008267:	call   QWORD PTR [rip+0x51fb]        # 0x14000d468
   14000826d:	cmp    BYTE PTR [rsi+0x69],0x0
   140008271:	mov    rdi,rsi
   140008274:	je     0x14000824c
   140008276:	mov    rax,QWORD PTR [rbx+0x8]
   14000827a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000827f:	mov    QWORD PTR [rax+0x8],rax
   140008283:	mov    rax,QWORD PTR [rbx+0x8]
   140008287:	mov    QWORD PTR [rax],rax
   14000828a:	mov    rax,QWORD PTR [rbx+0x8]
   14000828e:	mov    QWORD PTR [rax+0x10],rax
   140008292:	and    QWORD PTR [rbx+0x10],0x0
   140008297:	mov    rax,QWORD PTR [rbp+0x8]
   14000829b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000829f:	mov    QWORD PTR [rbx+0x8],rax
   1400082a3:	mov    QWORD PTR [rbp+0x8],rcx
   1400082a7:	mov    rax,QWORD PTR [rbp+0x10]
   1400082ab:	mov    rcx,QWORD PTR [rbx+0x10]
   1400082af:	mov    QWORD PTR [rbx+0x10],rax
   1400082b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400082b8:	mov    QWORD PTR [rbp+0x10],rcx
   1400082bc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400082c1:	add    rsp,0x20
   1400082c5:	pop    rdi
   1400082c6:	ret    
   1400082c7:	int3   
   1400082c8:	int3   
   1400082c9:	int3   
   1400082ca:	int3   
   1400082cb:	int3   
   1400082cc:	int3   
   1400082cd:	int3   
   1400082ce:	int3   
   1400082cf:	int3   
   1400082d0:	mov    rax,rsp
   1400082d3:	mov    QWORD PTR [rax+0x8],rbx
   1400082d7:	mov    QWORD PTR [rax+0x10],rbp
   1400082db:	mov    QWORD PTR [rax+0x18],rsi
   1400082df:	mov    QWORD PTR [rax+0x20],rdi
   1400082e3:	push   r12
   1400082e5:	push   r14
   1400082e7:	push   r15
   1400082e9:	sub    rsp,0x20
   1400082ed:	xor    esi,esi
   1400082ef:	mov    r14,r9
   1400082f2:	mov    rdi,r8
   1400082f5:	mov    rbx,rdx
   1400082f8:	mov    r12,rcx
   1400082fb:	test   rcx,rcx
   1400082fe:	je     0x1400083e6
   140008304:	test   rdx,rdx
   140008307:	je     0x1400083e6
   14000830d:	test   r9,r9
   140008310:	jne    0x14000831c
   140008312:	mov    esi,0x80004003
   140008317:	jmp    0x1400083eb
   14000831c:	mov    QWORD PTR [r9],rsi
   14000831f:	cmp    DWORD PTR [r8],esi
   140008322:	jne    0x140008362
   140008324:	cmp    DWORD PTR [r8+0x4],esi
   140008328:	jne    0x140008362
   14000832a:	cmp    DWORD PTR [r8+0x8],0xc0
   140008332:	jne    0x140008362
   140008334:	cmp    DWORD PTR [r8+0xc],0x46000000
   14000833c:	jne    0x140008362
   14000833e:	mov    rdi,QWORD PTR [rdx+0x8]
   140008342:	add    rdi,rcx
   140008345:	mov    rax,QWORD PTR [rdi]
   140008348:	mov    rbx,QWORD PTR [rax+0x8]
   14000834c:	mov    rcx,rbx
   14000834f:	call   QWORD PTR [rip+0x5153]        # 0x14000d4a8
   140008355:	mov    rcx,rdi
   140008358:	call   rbx
   14000835a:	mov    QWORD PTR [r14],rdi
   14000835d:	jmp    0x1400083eb
   140008362:	cmp    QWORD PTR [rdx+0x10],rsi
   140008366:	je     0x1400083cf
   140008368:	mov    rcx,QWORD PTR [rbx]
   14000836b:	mov    ebp,esi
   14000836d:	test   rcx,rcx
   140008370:	sete   bpl
   140008374:	test   ebp,ebp
   140008376:	jne    0x140008396
   140008378:	mov    eax,DWORD PTR [rdi]
   14000837a:	cmp    DWORD PTR [rcx],eax
   14000837c:	jne    0x1400083c5
   14000837e:	mov    eax,DWORD PTR [rdi+0x4]
   140008381:	cmp    DWORD PTR [rcx+0x4],eax
   140008384:	jne    0x1400083c5
   140008386:	mov    eax,DWORD PTR [rdi+0x8]
   140008389:	cmp    DWORD PTR [rcx+0x8],eax
   14000838c:	jne    0x1400083c5
   14000838e:	mov    eax,DWORD PTR [rdi+0xc]
   140008391:	cmp    DWORD PTR [rcx+0xc],eax
   140008394:	jne    0x1400083c5
   140008396:	mov    r15,QWORD PTR [rbx+0x10]
   14000839a:	cmp    r15,0x1
   14000839e:	je     0x1400083da
   1400083a0:	mov    rcx,r15
   1400083a3:	call   QWORD PTR [rip+0x50ff]        # 0x14000d4a8
   1400083a9:	mov    r9,QWORD PTR [rbx+0x8]
   1400083ad:	mov    r8,r14
   1400083b0:	mov    rdx,rdi
   1400083b3:	mov    rcx,r12
   1400083b6:	call   r15
   1400083b9:	test   eax,eax
   1400083bb:	je     0x1400083d6
   1400083bd:	test   ebp,ebp
   1400083bf:	jne    0x1400083c5
   1400083c1:	test   eax,eax
   1400083c3:	js     0x1400083d6
   1400083c5:	add    rbx,0x18
   1400083c9:	cmp    QWORD PTR [rbx+0x10],rsi
   1400083cd:	jne    0x140008368
   1400083cf:	mov    esi,0x80004002
   1400083d4:	jmp    0x1400083eb
   1400083d6:	mov    esi,eax
   1400083d8:	jmp    0x1400083eb
   1400083da:	mov    rdi,QWORD PTR [rbx+0x8]
   1400083de:	add    rdi,r12
   1400083e1:	jmp    0x140008345
   1400083e6:	mov    esi,0x80070057
   1400083eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400083f0:	mov    eax,esi
   1400083f2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400083f7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400083fc:	mov    rdi,QWORD PTR [rsp+0x58]
   140008401:	add    rsp,0x20
   140008405:	pop    r15
   140008407:	pop    r14
   140008409:	pop    r12
   14000840b:	ret    
   14000840c:	int3   
   14000840d:	int3   
   14000840e:	int3   
   14000840f:	int3   
   140008410:	int3   
   140008411:	int3   
   140008412:	int3   
   140008413:	int3   
   140008414:	mov    r11,rsp
   140008417:	mov    DWORD PTR [r11+0x20],r9d
   14000841b:	sub    rsp,0x58
   14000841f:	mov    rax,QWORD PTR [rip+0x9bea]        # 0x140012010
   140008426:	xor    rax,rsp
   140008429:	mov    QWORD PTR [rsp+0x40],rax
   14000842e:	mov    rcx,QWORD PTR [rip+0xa64b]        # 0x140012a80
   140008435:	lea    rax,[r11+0x20]
   140008439:	mov    QWORD PTR [r11-0x38],r8
   14000843d:	lea    r9,[r11-0x38]
   140008441:	and    DWORD PTR [rsp+0x2c],0x0
   140008446:	lea    rdx,[rip+0x5d9b]        # 0x14000e1e8
   14000844d:	mov    DWORD PTR [rsp+0x28],0x10
   140008455:	mov    r8d,0x2
   14000845b:	mov    QWORD PTR [r11-0x28],rax
   14000845f:	and    DWORD PTR [rsp+0x3c],0x0
   140008464:	mov    DWORD PTR [rsp+0x38],0x4
   14000846c:	call   QWORD PTR [rip+0x4ea6]        # 0x14000d318
   140008472:	mov    rcx,QWORD PTR [rsp+0x40]
   140008477:	xor    rcx,rsp
   14000847a:	call   0x14000b290
   14000847f:	add    rsp,0x58
   140008483:	ret    
   140008484:	int3   
   140008485:	int3   
   140008486:	int3   
   140008487:	int3   
   140008488:	int3   
   140008489:	int3   
   14000848a:	int3   
   14000848b:	int3   
   14000848c:	mov    DWORD PTR [rsp+0x20],r9d
   140008491:	sub    rsp,0x58
   140008495:	mov    rax,QWORD PTR [rip+0x9b74]        # 0x140012010
   14000849c:	xor    rax,rsp
   14000849f:	mov    QWORD PTR [rsp+0x40],rax
   1400084a4:	xor    edx,edx
   1400084a6:	test   r8,r8
   1400084a9:	je     0x1400084c2
   1400084ab:	or     rax,0xffffffffffffffff
   1400084af:	inc    rax
   1400084b2:	cmp    WORD PTR [r8+rax*2],dx
   1400084b7:	jne    0x1400084af
   1400084b9:	lea    ecx,[rax*2+0x2]
   1400084c0:	jmp    0x1400084c7
   1400084c2:	mov    ecx,0xa
   1400084c7:	test   r8,r8
   1400084ca:	mov    DWORD PTR [rsp+0x28],ecx
   1400084ce:	mov    rcx,QWORD PTR [rip+0xa5ab]        # 0x140012a80
   1400084d5:	lea    rax,[rip+0x5d8c]        # 0x14000e268
   1400084dc:	cmovne rax,r8
   1400084e0:	mov    DWORD PTR [rsp+0x2c],edx
   1400084e4:	mov    QWORD PTR [rsp+0x20],rax
   1400084e9:	lea    r9,[rsp+0x20]
   1400084ee:	lea    rax,[rsp+0x78]
   1400084f3:	mov    QWORD PTR [rsp+0x38],0x4
   1400084fc:	mov    r8d,0x2
   140008502:	mov    QWORD PTR [rsp+0x30],rax
   140008507:	lea    rdx,[rip+0x5cca]        # 0x14000e1d8
   14000850e:	call   QWORD PTR [rip+0x4e04]        # 0x14000d318
   140008514:	mov    rcx,QWORD PTR [rsp+0x40]
   140008519:	xor    rcx,rsp
   14000851c:	call   0x14000b290
   140008521:	add    rsp,0x58
   140008525:	ret    
   140008526:	int3   
   140008527:	int3   
   140008528:	int3   
   140008529:	int3   
   14000852a:	int3   
   14000852b:	int3   
   14000852c:	int3   
   14000852d:	int3   
   14000852e:	int3   
   14000852f:	int3   
   140008530:	mov    QWORD PTR [rsp+0x8],rbx
   140008535:	push   rdi
   140008536:	sub    rsp,0x30
   14000853a:	mov    rdi,rdx
   14000853d:	lea    rax,[rcx+0x20]
   140008541:	xor    edx,edx
   140008543:	mov    QWORD PTR [rsp+0x20],rax
   140008548:	lea    r9,[rip+0x5e21]        # 0x14000e370
   14000854f:	mov    rcx,rdi
   140008552:	lea    r8d,[rdx+0x1]
   140008556:	call   QWORD PTR [rip+0x4b74]        # 0x14000d0d0
   14000855c:	mov    ebx,eax
   14000855e:	test   eax,eax
   140008560:	jns    0x140008576
   140008562:	test   BYTE PTR [rip+0xa557],0x1        # 0x140012ac0
   140008569:	je     0x140008576
   14000856b:	mov    r9d,eax
   14000856e:	mov    r8,rdi
   140008571:	call   0x140008414
   140008576:	mov    eax,ebx
   140008578:	mov    rbx,QWORD PTR [rsp+0x40]
   14000857d:	add    rsp,0x30
   140008581:	pop    rdi
   140008582:	ret    
   140008583:	int3   
   140008584:	int3   
   140008585:	int3   
   140008586:	int3   
   140008587:	int3   
   140008588:	int3   
   140008589:	int3   
   14000858a:	int3   
   14000858b:	int3   
   14000858c:	int3   
   14000858d:	int3   
   14000858e:	int3   
   14000858f:	int3   
   140008590:	mov    QWORD PTR [rsp+0x8],rbx
   140008595:	mov    QWORD PTR [rsp+0x10],rsi
   14000859a:	push   rdi
   14000859b:	sub    rsp,0x20
   14000859f:	mov    rdi,QWORD PTR [rcx+0x20]
   1400085a3:	mov    rsi,rdx
   1400085a6:	mov    rax,QWORD PTR [rdi]
   1400085a9:	mov    rbx,QWORD PTR [rax+0x18]
   1400085ad:	mov    rcx,rbx
   1400085b0:	call   QWORD PTR [rip+0x4ef2]        # 0x14000d4a8
   1400085b6:	mov    rdx,rsi
   1400085b9:	mov    rcx,rdi
   1400085bc:	mov    rax,rbx
   1400085bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400085c4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400085c9:	add    rsp,0x20
   1400085cd:	pop    rdi
   1400085ce:	rex.W jmp rax
   1400085d1:	int3   
   1400085d2:	int3   
   1400085d3:	int3   
   1400085d4:	int3   
   1400085d5:	int3   
   1400085d6:	int3   
   1400085d7:	int3   
   1400085d8:	int3   
   1400085d9:	int3   
   1400085da:	int3   
   1400085db:	int3   
   1400085dc:	int3   
   1400085dd:	int3   
   1400085de:	int3   
   1400085df:	int3   
   1400085e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400085e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400085ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400085ef:	push   rdi
   1400085f0:	sub    rsp,0x20
   1400085f4:	mov    rdi,QWORD PTR [rcx+0x20]
   1400085f8:	mov    rsi,r8
   1400085fb:	mov    rbp,rdx
   1400085fe:	mov    rax,QWORD PTR [rdi]
   140008601:	mov    rbx,QWORD PTR [rax+0x20]
   140008605:	mov    rcx,rbx
   140008608:	call   QWORD PTR [rip+0x4e9a]        # 0x14000d4a8
   14000860e:	mov    r8,rsi
   140008611:	mov    rdx,rbp
   140008614:	mov    rcx,rdi
   140008617:	mov    rax,rbx
   14000861a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000861f:	mov    rbp,QWORD PTR [rsp+0x38]
   140008624:	mov    rsi,QWORD PTR [rsp+0x40]
   140008629:	add    rsp,0x20
   14000862d:	pop    rdi
   14000862e:	rex.W jmp rax
   140008631:	int3   
   140008632:	int3   
   140008633:	int3   
   140008634:	int3   
   140008635:	int3   
   140008636:	int3   
   140008637:	int3   
   140008638:	int3   
   140008639:	int3   
   14000863a:	int3   
   14000863b:	int3   
   14000863c:	int3   
   14000863d:	int3   
   14000863e:	int3   
   14000863f:	int3   
   140008640:	mov    QWORD PTR [rsp+0x10],rbx
   140008645:	mov    QWORD PTR [rsp+0x20],rbp
   14000864a:	push   rsi
   14000864b:	push   rdi
   14000864c:	push   r14
   14000864e:	sub    rsp,0x20
   140008652:	and    QWORD PTR [r8],0x0
   140008656:	mov    r14,r8
   140008659:	mov    rdi,QWORD PTR [rcx+0x20]
   14000865d:	mov    rbp,rdx
   140008660:	and    QWORD PTR [rsp+0x40],0x0
   140008666:	mov    rax,QWORD PTR [rdi]
   140008669:	mov    rbx,QWORD PTR [rax+0x28]
   14000866d:	mov    rcx,rbx
   140008670:	call   QWORD PTR [rip+0x4e32]        # 0x14000d4a8
   140008676:	lea    r8,[rsp+0x40]
   14000867b:	mov    rdx,rbp
   14000867e:	mov    rcx,rdi
   140008681:	call   rbx
   140008683:	mov    esi,eax
   140008685:	test   eax,eax
   140008687:	jns    0x14000869d
   140008689:	test   BYTE PTR [rip+0xa430],0x1        # 0x140012ac0
   140008690:	je     0x14000869d
   140008692:	mov    r9d,eax
   140008695:	mov    r8,rbp
   140008698:	call   0x14000848c
   14000869d:	test   esi,esi
   14000869f:	js     0x140008715
   1400086a1:	lea    rcx,[rsp+0x50]
   1400086a6:	call   0x140008990
   1400086ab:	mov    esi,eax
   1400086ad:	test   eax,eax
   1400086af:	js     0x1400086cd
   1400086b1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400086b6:	mov    rax,QWORD PTR [rbx]
   1400086b9:	mov    rdi,QWORD PTR [rax+0x8]
   1400086bd:	mov    rcx,rdi
   1400086c0:	call   QWORD PTR [rip+0x4de2]        # 0x14000d4a8
   1400086c6:	mov    rcx,rbx
   1400086c9:	call   rdi
   1400086cb:	jmp    0x1400086cf
   1400086cd:	xor    ebx,ebx
   1400086cf:	test   esi,esi
   1400086d1:	js     0x1400086fb
   1400086d3:	mov    rax,QWORD PTR [rbx]
   1400086d6:	mov    rdi,QWORD PTR [rax+0x68]
   1400086da:	mov    rcx,rdi
   1400086dd:	call   QWORD PTR [rip+0x4dc5]        # 0x14000d4a8
   1400086e3:	lea    rdx,[rsp+0x40]
   1400086e8:	mov    rcx,rbx
   1400086eb:	call   rdi
   1400086ed:	mov    esi,eax
   1400086ef:	test   eax,eax
   1400086f1:	js     0x1400086fb
   1400086f3:	mov    rax,rbx
   1400086f6:	xor    ebx,ebx
   1400086f8:	mov    QWORD PTR [r14],rax
   1400086fb:	test   rbx,rbx
   1400086fe:	je     0x140008715
   140008700:	mov    rax,QWORD PTR [rbx]
   140008703:	mov    rdi,QWORD PTR [rax+0x10]
   140008707:	mov    rcx,rdi
   14000870a:	call   QWORD PTR [rip+0x4d98]        # 0x14000d4a8
   140008710:	mov    rcx,rbx
   140008713:	call   rdi
   140008715:	mov    rbx,QWORD PTR [rsp+0x40]
   14000871a:	test   rbx,rbx
   14000871d:	je     0x140008734
   14000871f:	mov    rax,QWORD PTR [rbx]
   140008722:	mov    rdi,QWORD PTR [rax+0x10]
   140008726:	mov    rcx,rdi
   140008729:	call   QWORD PTR [rip+0x4d79]        # 0x14000d4a8
   14000872f:	mov    rcx,rbx
   140008732:	call   rdi
   140008734:	mov    rbx,QWORD PTR [rsp+0x48]
   140008739:	mov    eax,esi
   14000873b:	mov    rbp,QWORD PTR [rsp+0x58]
   140008740:	add    rsp,0x20
   140008744:	pop    r14
   140008746:	pop    rdi
   140008747:	pop    rsi
   140008748:	ret    
   140008749:	int3   
   14000874a:	int3   
   14000874b:	int3   
   14000874c:	int3   
   14000874d:	int3   
   14000874e:	int3   
   14000874f:	int3   
   140008750:	mov    rax,rsp
   140008753:	mov    QWORD PTR [rax+0x8],rcx
   140008757:	push   rdi
   140008758:	sub    rsp,0x30
   14000875c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140008764:	mov    QWORD PTR [rax+0x10],rbx
   140008768:	mov    QWORD PTR [rax+0x18],rsi
   14000876c:	mov    rsi,rcx
   14000876f:	lea    rax,[rip+0x530a]        # 0x14000da80
   140008776:	mov    QWORD PTR [rcx],rax
   140008779:	lea    rax,[rip+0x52e0]        # 0x14000da60
   140008780:	mov    QWORD PTR [rcx+0x8],rax
   140008784:	lea    rax,[rip+0x52b5]        # 0x14000da40
   14000878b:	mov    QWORD PTR [rcx+0x10],rax
   14000878f:	mov    DWORD PTR [rcx+0x18],0xc0000001
   140008796:	mov    rdi,QWORD PTR [rip+0xa27b]        # 0x140012a18
   14000879d:	mov    rax,QWORD PTR [rdi]
   1400087a0:	mov    rbx,QWORD PTR [rax+0x10]
   1400087a4:	mov    rcx,rbx
   1400087a7:	call   QWORD PTR [rip+0x4cfb]        # 0x14000d4a8
   1400087ad:	mov    rcx,rdi
   1400087b0:	call   rbx
   1400087b2:	nop
   1400087b3:	mov    rcx,rsi
   1400087b6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400087bb:	mov    rsi,QWORD PTR [rsp+0x50]
   1400087c0:	add    rsp,0x30
   1400087c4:	pop    rdi
   1400087c5:	jmp    0x1400088e8
   1400087ca:	int3   
   1400087cb:	int3   
   1400087cc:	int3   
   1400087cd:	int3   
   1400087ce:	int3   
   1400087cf:	int3   
   1400087d0:	mov    eax,0x1
   1400087d5:	lock xadd DWORD PTR [rcx+0x18],eax
   1400087da:	inc    eax
   1400087dc:	ret    
   1400087dd:	int3   
   1400087de:	int3   
   1400087df:	int3   
   1400087e0:	int3   
   1400087e1:	int3   
   1400087e2:	int3   
   1400087e3:	int3   
   1400087e4:	int3   
   1400087e5:	int3   
   1400087e6:	int3   
   1400087e7:	int3   
   1400087e8:	int3   
   1400087e9:	int3   
   1400087ea:	int3   
   1400087eb:	int3   
   1400087ec:	int3   
   1400087ed:	int3   
   1400087ee:	int3   
   1400087ef:	int3   
   1400087f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400087f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400087fa:	mov    QWORD PTR [rsp+0x18],rdi
   1400087ff:	push   r14
   140008801:	sub    rsp,0x20
   140008805:	mov    r14,rcx
   140008808:	or     esi,0xffffffff
   14000880b:	lock xadd DWORD PTR [rcx+0x18],esi
   140008810:	sub    esi,0x1
   140008813:	jne    0x14000886a
   140008815:	mov    rdi,QWORD PTR [rip+0xa1fc]        # 0x140012a18
   14000881c:	mov    rax,QWORD PTR [rdi]
   14000881f:	mov    rbx,QWORD PTR [rax+0x8]
   140008823:	mov    rcx,rbx
   140008826:	call   QWORD PTR [rip+0x4c7c]        # 0x14000d4a8
   14000882c:	mov    rcx,rdi
   14000882f:	call   rbx
   140008831:	test   r14,r14
   140008834:	je     0x14000884e
   140008836:	mov    rax,QWORD PTR [r14]
   140008839:	mov    rbx,QWORD PTR [rax+0x70]
   14000883d:	mov    rcx,rbx
   140008840:	call   QWORD PTR [rip+0x4c62]        # 0x14000d4a8
   140008846:	lea    edx,[rsi+0x1]
   140008849:	mov    rcx,r14
   14000884c:	call   rbx
   14000884e:	mov    rdi,QWORD PTR [rip+0xa1c3]        # 0x140012a18
   140008855:	mov    rdx,QWORD PTR [rdi]
   140008858:	mov    rbx,QWORD PTR [rdx+0x10]
   14000885c:	mov    rcx,rbx
   14000885f:	call   QWORD PTR [rip+0x4c43]        # 0x14000d4a8
   140008865:	mov    rcx,rdi
   140008868:	call   rbx
   14000886a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000886f:	mov    eax,esi
   140008871:	mov    rsi,QWORD PTR [rsp+0x38]
   140008876:	mov    rdi,QWORD PTR [rsp+0x40]
   14000887b:	add    rsp,0x20
   14000887f:	pop    r14
   140008881:	ret    
   140008882:	int3   
   140008883:	int3   
   140008884:	int3   
   140008885:	int3   
   140008886:	int3   
   140008887:	int3   
   140008888:	int3   
   140008889:	int3   
   14000888a:	int3   
   14000888b:	int3   
   14000888c:	int3   
   14000888d:	int3   
   14000888e:	int3   
   14000888f:	int3   
   140008890:	mov    r9,r8
   140008893:	mov    r8,rdx
   140008896:	lea    rdx,[rip+0x5a43]        # 0x14000e2e0
   14000889d:	jmp    0x1400082d0
   1400088a2:	int3   
   1400088a3:	int3   
   1400088a4:	int3   
   1400088a5:	int3   
   1400088a6:	int3   
   1400088a7:	int3   
   1400088a8:	int3   
   1400088a9:	int3   
   1400088aa:	int3   
   1400088ab:	int3   
   1400088ac:	int3   
   1400088ad:	int3   
   1400088ae:	int3   
   1400088af:	int3   
   1400088b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400088b5:	push   rdi
   1400088b6:	sub    rsp,0x20
   1400088ba:	mov    ebx,edx
   1400088bc:	mov    rdi,rcx
   1400088bf:	call   0x140008750
   1400088c4:	test   bl,0x1
   1400088c7:	je     0x1400088d2
   1400088c9:	mov    rcx,rdi
   1400088cc:	call   QWORD PTR [rip+0x4b96]        # 0x14000d468
   1400088d2:	mov    rax,rdi
   1400088d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400088da:	add    rsp,0x20
   1400088de:	pop    rdi
   1400088df:	ret    
   1400088e0:	int3   
   1400088e1:	int3   
   1400088e2:	int3   
   1400088e3:	int3   
   1400088e4:	int3   
   1400088e5:	int3   
   1400088e6:	int3   
   1400088e7:	int3   
   1400088e8:	mov    rax,rsp
   1400088eb:	mov    QWORD PTR [rax+0x8],rcx
   1400088ef:	push   rsi
   1400088f0:	push   rdi
   1400088f1:	push   r14
   1400088f3:	sub    rsp,0x30
   1400088f7:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400088ff:	mov    QWORD PTR [rax+0x10],rbx
   140008903:	mov    QWORD PTR [rax+0x18],rbp
   140008907:	mov    rsi,rcx
   14000890a:	lea    rbp,[rcx+0x40]
   14000890e:	mov    r14,QWORD PTR [rbp+0x18]
   140008912:	test   r14,r14
   140008915:	je     0x140008939
   140008917:	mov    rax,QWORD PTR [r14]
   14000891a:	cmp    r14,rbp
   14000891d:	setne  bl
   140008920:	mov    rdi,QWORD PTR [rax+0x18]
   140008924:	mov    rcx,rdi
   140008927:	call   QWORD PTR [rip+0x4b7b]        # 0x14000d4a8
   14000892d:	mov    dl,bl
   14000892f:	mov    rcx,r14
   140008932:	call   rdi
   140008934:	and    QWORD PTR [rbp+0x18],0x0
   140008939:	mov    rdi,QWORD PTR [rsi+0x38]
   14000893d:	test   rdi,rdi
   140008940:	je     0x140008958
   140008942:	mov    rax,QWORD PTR [rdi]
   140008945:	mov    rbx,QWORD PTR [rax+0x10]
   140008949:	mov    rcx,rbx
   14000894c:	call   QWORD PTR [rip+0x4b56]        # 0x14000d4a8
   140008952:	mov    rcx,rdi
   140008955:	call   rbx
   140008957:	nop
   140008958:	mov    rdi,QWORD PTR [rsi+0x30]
   14000895c:	test   rdi,rdi
   14000895f:	je     0x140008976
   140008961:	mov    rax,QWORD PTR [rdi]
   140008964:	mov    rbx,QWORD PTR [rax+0x10]
   140008968:	mov    rcx,rbx
   14000896b:	call   QWORD PTR [rip+0x4b37]        # 0x14000d4a8
   140008971:	mov    rcx,rdi
   140008974:	call   rbx
   140008976:	mov    rbx,QWORD PTR [rsp+0x58]
   14000897b:	mov    rbp,QWORD PTR [rsp+0x60]
   140008980:	add    rsp,0x30
   140008984:	pop    r14
   140008986:	pop    rdi
   140008987:	pop    rsi
   140008988:	ret    
   140008989:	int3   
   14000898a:	int3   
   14000898b:	int3   
   14000898c:	int3   
   14000898d:	int3   
   14000898e:	int3   
   14000898f:	int3   
   140008990:	mov    QWORD PTR [rsp+0x8],rcx
   140008995:	push   rbx
   140008996:	push   rsi
   140008997:	push   rdi
   140008998:	push   r12
   14000899a:	push   r14
   14000899c:	push   r15
   14000899e:	sub    rsp,0x38
   1400089a2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400089ab:	mov    r15,rcx
   1400089ae:	xor    esi,esi
   1400089b0:	test   rcx,rcx
   1400089b3:	jne    0x1400089bf
   1400089b5:	mov    eax,0x80004003
   1400089ba:	jmp    0x140008a93
   1400089bf:	mov    QWORD PTR [rcx],rsi
   1400089c2:	mov    r12d,0x8007000e
   1400089c8:	mov    DWORD PTR [rsp+0x78],r12d
   1400089cd:	mov    QWORD PTR [rsp+0x80],rsi
   1400089d5:	mov    ecx,0x60
   1400089da:	call   0x14000acbc
   1400089df:	mov    r14,rax
   1400089e2:	mov    QWORD PTR [rsp+0x88],rax
   1400089ea:	test   rax,rax
   1400089ed:	je     0x140008a65
   1400089ef:	mov    DWORD PTR [rax+0x18],esi
   1400089f2:	mov    QWORD PTR [rax+0x30],rsi
   1400089f6:	mov    QWORD PTR [rax+0x38],rsi
   1400089fa:	add    rax,0x40
   1400089fe:	mov    QWORD PTR [rax+0x18],rsi
   140008a02:	lea    rdx,[rip+0x16a7]        # 0x14000a0b0
   140008a09:	test   rdx,rdx
   140008a0c:	jne    0x140008a14
   140008a0e:	mov    QWORD PTR [rax+0x18],rsi
   140008a12:	jmp    0x140008a26
   140008a14:	lea    rcx,[rip+0x4f75]        # 0x14000d990
   140008a1b:	mov    QWORD PTR [rax],rcx
   140008a1e:	mov    QWORD PTR [rax+0x8],rdx
   140008a22:	mov    QWORD PTR [rax+0x18],rax
   140008a26:	lea    rax,[rip+0x5053]        # 0x14000da80
   140008a2d:	mov    QWORD PTR [r14],rax
   140008a30:	lea    rax,[rip+0x5029]        # 0x14000da60
   140008a37:	mov    QWORD PTR [r14+0x8],rax
   140008a3b:	lea    rax,[rip+0x4ffe]        # 0x14000da40
   140008a42:	mov    QWORD PTR [r14+0x10],rax
   140008a46:	mov    rdi,QWORD PTR [rip+0x9fcb]        # 0x140012a18
   140008a4d:	mov    rax,QWORD PTR [rdi]
   140008a50:	mov    rbx,QWORD PTR [rax+0x8]
   140008a54:	mov    rcx,rbx
   140008a57:	call   QWORD PTR [rip+0x4a4b]        # 0x14000d4a8
   140008a5d:	mov    rcx,rdi
   140008a60:	call   rbx
   140008a62:	nop
   140008a63:	jmp    0x140008a68
   140008a65:	mov    r14,rsi
   140008a68:	mov    QWORD PTR [rsp+0x80],r14
   140008a70:	jmp    0x140008a86
   140008a72:	xor    esi,esi
   140008a74:	mov    r15,QWORD PTR [rsp+0x70]
   140008a79:	mov    r12d,DWORD PTR [rsp+0x78]
   140008a7e:	mov    r14,QWORD PTR [rsp+0x80]
   140008a86:	test   r14,r14
   140008a89:	cmovne r12d,esi
   140008a8d:	mov    QWORD PTR [r15],r14
   140008a90:	mov    eax,r12d
   140008a93:	add    rsp,0x38
   140008a97:	pop    r15
   140008a99:	pop    r14
   140008a9b:	pop    r12
   140008a9d:	pop    rdi
   140008a9e:	pop    rsi
   140008a9f:	pop    rbx
   140008aa0:	ret    
   140008aa1:	int3   
   140008aa2:	int3   
   140008aa3:	int3   
   140008aa4:	int3   
   140008aa5:	int3   
   140008aa6:	int3   
   140008aa7:	int3   
   140008aa8:	int3   
   140008aa9:	int3   
   140008aaa:	int3   
   140008aab:	int3   
   140008aac:	int3   
   140008aad:	int3   
   140008aae:	int3   
   140008aaf:	int3   
   140008ab0:	sub    rcx,0x10
   140008ab4:	jmp    0x1400087f0
   140008ab9:	int3   
   140008aba:	int3   
   140008abb:	int3   
   140008abc:	int3   
   140008abd:	int3   
   140008abe:	int3   
   140008abf:	int3   
   140008ac0:	sub    rcx,0x8
   140008ac4:	jmp    0x1400087d0
   140008ac9:	int3   
   140008aca:	int3   
   140008acb:	int3   
   140008acc:	int3   
   140008acd:	int3   
   140008ace:	int3   
   140008acf:	int3   
   140008ad0:	sub    rcx,0x8
   140008ad4:	jmp    0x140008890
   140008ad9:	int3   
   140008ada:	int3   
   140008adb:	int3   
   140008adc:	int3   
   140008add:	int3   
   140008ade:	int3   
   140008adf:	int3   
   140008ae0:	sub    rcx,0x10
   140008ae4:	jmp    0x1400087d0
   140008ae9:	int3   
   140008aea:	int3   
   140008aeb:	int3   
   140008aec:	int3   
   140008aed:	int3   
   140008aee:	int3   
   140008aef:	int3   
   140008af0:	sub    rcx,0x10
   140008af4:	jmp    0x140008890
   140008af9:	int3   
   140008afa:	int3   
   140008afb:	int3   
   140008afc:	int3   
   140008afd:	int3   
   140008afe:	int3   
   140008aff:	int3   
   140008b00:	sub    rcx,0x8
   140008b04:	jmp    0x1400087f0
   140008b09:	int3   
   140008b0a:	int3   
   140008b0b:	int3   
   140008b0c:	int3   
   140008b0d:	int3   
   140008b0e:	int3   
   140008b0f:	int3   
   140008b10:	mov    QWORD PTR [rsp+0x8],rbx
   140008b15:	mov    QWORD PTR [rsp+0x10],rbp
   140008b1a:	push   rsi
   140008b1b:	push   rdi
   140008b1c:	push   r14
   140008b1e:	sub    rsp,0x20
   140008b22:	lea    rcx,[rsp+0x58]
   140008b27:	mov    r14,r8
   140008b2a:	mov    rbp,rdx
   140008b2d:	call   0x1400091e4
   140008b32:	mov    esi,eax
   140008b34:	test   eax,eax
   140008b36:	js     0x140008b54
   140008b38:	mov    rbx,QWORD PTR [rsp+0x58]
   140008b3d:	mov    rax,QWORD PTR [rbx]
   140008b40:	mov    rdi,QWORD PTR [rax+0x8]
   140008b44:	mov    rcx,rdi
   140008b47:	call   QWORD PTR [rip+0x495b]        # 0x14000d4a8
   140008b4d:	mov    rcx,rbx
   140008b50:	call   rdi
   140008b52:	jmp    0x140008b56
   140008b54:	xor    ebx,ebx
   140008b56:	test   esi,esi
   140008b58:	js     0x140008b80
   140008b5a:	mov    rax,QWORD PTR [rbx]
   140008b5d:	mov    rdi,QWORD PTR [rax+0x30]
   140008b61:	mov    rcx,rdi
   140008b64:	call   QWORD PTR [rip+0x493e]        # 0x14000d4a8
   140008b6a:	mov    rdx,rbp
   140008b6d:	mov    rcx,rbx
   140008b70:	call   rdi
   140008b72:	mov    esi,eax
   140008b74:	test   eax,eax
   140008b76:	js     0x140008b80
   140008b78:	mov    rcx,rbx
   140008b7b:	xor    ebx,ebx
   140008b7d:	mov    QWORD PTR [r14],rcx
   140008b80:	test   rbx,rbx
   140008b83:	je     0x140008b9a
   140008b85:	mov    rcx,QWORD PTR [rbx]
   140008b88:	mov    rdi,QWORD PTR [rcx+0x10]
   140008b8c:	mov    rcx,rdi
   140008b8f:	call   QWORD PTR [rip+0x4913]        # 0x14000d4a8
   140008b95:	mov    rcx,rbx
   140008b98:	call   rdi
   140008b9a:	mov    rbx,QWORD PTR [rsp+0x40]
   140008b9f:	mov    eax,esi
   140008ba1:	mov    rbp,QWORD PTR [rsp+0x48]
   140008ba6:	add    rsp,0x20
   140008baa:	pop    r14
   140008bac:	pop    rdi
   140008bad:	pop    rsi
   140008bae:	ret    
   140008baf:	int3   
   140008bb0:	int3   
   140008bb1:	int3   
   140008bb2:	int3   
   140008bb3:	int3   
   140008bb4:	int3   
   140008bb5:	int3   
   140008bb6:	int3   
   140008bb7:	int3   
   140008bb8:	int3   
   140008bb9:	int3   
   140008bba:	int3   
   140008bbb:	int3   
   140008bbc:	int3   
   140008bbd:	int3   
   140008bbe:	int3   
   140008bbf:	int3   
   140008bc0:	mov    rax,rsp
   140008bc3:	mov    QWORD PTR [rax+0x18],r8
   140008bc7:	mov    QWORD PTR [rax+0x10],rdx
   140008bcb:	mov    QWORD PTR [rax+0x8],rcx
   140008bcf:	push   rbx
   140008bd0:	push   rsi
   140008bd1:	push   rdi
   140008bd2:	push   r12
   140008bd4:	push   r13
   140008bd6:	push   r14
   140008bd8:	push   r15
   140008bda:	sub    rsp,0x30
   140008bde:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140008be6:	mov    r12,r8
   140008be9:	mov    r13,rdx
   140008bec:	mov    r15,rcx
   140008bef:	xor    edi,edi
   140008bf1:	test   r8,r8
   140008bf4:	jne    0x140008c00
   140008bf6:	mov    eax,0x80004003
   140008bfb:	jmp    0x140008ced
   140008c00:	mov    QWORD PTR [r8],rdi
   140008c03:	mov    r14d,0x8007000e
   140008c09:	mov    DWORD PTR [rsp+0x88],r14d
   140008c11:	mov    QWORD PTR [rsp+0x20],rdi
   140008c16:	mov    ecx,0x48
   140008c1b:	call   0x14000acbc
   140008c20:	mov    rsi,rax
   140008c23:	test   rax,rax
   140008c26:	je     0x140008c4a
   140008c28:	mov    DWORD PTR [rax+0x8],edi
   140008c2b:	xor    edx,edx
   140008c2d:	lea    r8d,[rdx+0x28]
   140008c31:	lea    rcx,[rax+0x10]
   140008c35:	call   0x14000b71c
   140008c3a:	mov    BYTE PTR [rsi+0x38],dil
   140008c3e:	lea    rax,[rip+0x4f1b]        # 0x14000db60
   140008c45:	mov    QWORD PTR [rsi],rax
   140008c48:	jmp    0x140008c4d
   140008c4a:	mov    rsi,rdi
   140008c4d:	mov    QWORD PTR [rsp+0x20],rsi
   140008c52:	jmp    0x140008c75
   140008c54:	xor    edi,edi
   140008c56:	mov    r12,QWORD PTR [rsp+0x80]
   140008c5e:	mov    r13,QWORD PTR [rsp+0x78]
   140008c63:	mov    r15,QWORD PTR [rsp+0x70]
   140008c68:	mov    r14d,DWORD PTR [rsp+0x88]
   140008c70:	mov    rsi,QWORD PTR [rsp+0x20]
   140008c75:	test   rsi,rsi
   140008c78:	je     0x140008cea
   140008c7a:	mov    QWORD PTR [rsi+0x40],r15
   140008c7e:	lea    rcx,[rsi+0x10]
   140008c82:	call   0x1400033bc
   140008c87:	mov    r14d,eax
   140008c8a:	test   eax,eax
   140008c8c:	js     0x140008c92
   140008c8e:	mov    BYTE PTR [rsi+0x38],0x1
   140008c92:	cmovns r14d,edi
   140008c96:	test   r14d,r14d
   140008c99:	jne    0x140008cbc
   140008c9b:	mov    rax,QWORD PTR [rsi]
   140008c9e:	mov    rbx,QWORD PTR [rax]
   140008ca1:	mov    rcx,rbx
   140008ca4:	call   QWORD PTR [rip+0x47fe]        # 0x14000d4a8
   140008caa:	mov    r8,r12
   140008cad:	mov    rdx,r13
   140008cb0:	mov    rcx,rsi
   140008cb3:	call   rbx
   140008cb5:	mov    r14d,eax
   140008cb8:	test   eax,eax
   140008cba:	je     0x140008cea
   140008cbc:	mov    DWORD PTR [rsi+0x8],0xc0000001
   140008cc3:	lea    rax,[rip+0x4ebe]        # 0x14000db88
   140008cca:	mov    QWORD PTR [rsi],rax
   140008ccd:	cmp    BYTE PTR [rsi+0x38],dil
   140008cd1:	je     0x140008ce1
   140008cd3:	mov    BYTE PTR [rsi+0x38],dil
   140008cd7:	lea    rcx,[rsi+0x10]
   140008cdb:	call   QWORD PTR [rip+0x45f7]        # 0x14000d2d8
   140008ce1:	mov    rcx,rsi
   140008ce4:	call   QWORD PTR [rip+0x477e]        # 0x14000d468
   140008cea:	mov    eax,r14d
   140008ced:	add    rsp,0x30
   140008cf1:	pop    r15
   140008cf3:	pop    r14
   140008cf5:	pop    r13
   140008cf7:	pop    r12
   140008cf9:	pop    rdi
   140008cfa:	pop    rsi
   140008cfb:	pop    rbx
   140008cfc:	ret    
   140008cfd:	int3   
   140008cfe:	int3   
   140008cff:	int3   
   140008d00:	int3   
   140008d01:	int3   
   140008d02:	int3   
   140008d03:	int3   
   140008d04:	int3   
   140008d05:	int3   
   140008d06:	int3   
   140008d07:	int3   
   140008d08:	int3   
   140008d09:	int3   
   140008d0a:	int3   
   140008d0b:	int3   
   140008d0c:	int3   
   140008d0d:	int3   
   140008d0e:	int3   
   140008d0f:	int3   
   140008d10:	test   rcx,rcx
   140008d13:	je     0x140008dd8
   140008d19:	test   r8,r8
   140008d1c:	jne    0x140008d25
   140008d1e:	mov    eax,0x80004003
   140008d23:	jmp    0x140008d2e
   140008d25:	and    QWORD PTR [r8],0x0
   140008d29:	mov    eax,0x80040110
   140008d2e:	ret    
   140008d2f:	int3   
   140008d30:	int3   
   140008d31:	int3   
   140008d32:	int3   
   140008d33:	int3   
   140008d34:	int3   
   140008d35:	int3   
   140008d36:	int3   
   140008d37:	int3   
   140008d38:	int3   
   140008d39:	int3   
   140008d3a:	int3   
   140008d3b:	int3   
   140008d3c:	int3   
   140008d3d:	int3   
   140008d3e:	int3   
   140008d3f:	int3   
   140008d40:	mov    eax,0x1
   140008d45:	lock xadd DWORD PTR [rcx+0x8],eax
   140008d4a:	inc    eax
   140008d4c:	ret    
   140008d4d:	int3   
   140008d4e:	int3   
   140008d4f:	int3   
   140008d50:	int3   
   140008d51:	int3   
   140008d52:	int3   
   140008d53:	int3   
   140008d54:	int3   
   140008d55:	int3   
   140008d56:	int3   
   140008d57:	int3   
   140008d58:	int3   
   140008d59:	int3   
   140008d5a:	int3   
   140008d5b:	int3   
   140008d5c:	int3   
   140008d5d:	int3   
   140008d5e:	int3   
   140008d5f:	int3   
   140008d60:	mov    QWORD PTR [rsp+0x8],rbx
   140008d65:	push   rdi
   140008d66:	sub    rsp,0x20
   140008d6a:	mov    rbx,rcx
   140008d6d:	or     edi,0xffffffff
   140008d70:	lock xadd DWORD PTR [rcx+0x8],edi
   140008d75:	sub    edi,0x1
   140008d78:	jne    0x140008dad
   140008d7a:	test   rcx,rcx
   140008d7d:	je     0x140008dad
   140008d7f:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140008d86:	lea    rax,[rip+0x4dfb]        # 0x14000db88
   140008d8d:	mov    QWORD PTR [rcx],rax
   140008d90:	add    rcx,0x10
   140008d94:	cmp    BYTE PTR [rcx+0x28],dil
   140008d98:	je     0x140008da4
   140008d9a:	mov    BYTE PTR [rcx+0x28],dil
   140008d9e:	call   QWORD PTR [rip+0x4534]        # 0x14000d2d8
   140008da4:	mov    rcx,rbx
   140008da7:	call   QWORD PTR [rip+0x46bb]        # 0x14000d468
   140008dad:	mov    eax,edi
   140008daf:	mov    rbx,QWORD PTR [rsp+0x30]
   140008db4:	add    rsp,0x20
   140008db8:	pop    rdi
   140008db9:	ret    
   140008dba:	int3   
   140008dbb:	int3   
   140008dbc:	int3   
   140008dbd:	int3   
   140008dbe:	int3   
   140008dbf:	int3   
   140008dc0:	mov    r9,r8
   140008dc3:	mov    r8,rdx
   140008dc6:	lea    rdx,[rip+0x55c3]        # 0x14000e390
   140008dcd:	jmp    0x1400082d0
   140008dd2:	int3   
   140008dd3:	int3   
   140008dd4:	int3   
   140008dd5:	int3   
   140008dd6:	int3   
   140008dd7:	int3   
   140008dd8:	mov    rax,rsp
   140008ddb:	mov    QWORD PTR [rax+0x18],r8
   140008ddf:	mov    QWORD PTR [rax+0x10],rdx
   140008de3:	mov    QWORD PTR [rax+0x8],rcx
   140008de7:	push   rbx
   140008de8:	push   rsi
   140008de9:	push   rdi
   140008dea:	push   r12
   140008dec:	push   r14
   140008dee:	push   r15
   140008df0:	sub    rsp,0x38
   140008df4:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140008dfc:	mov    r14,r8
   140008dff:	mov    r12,rdx
   140008e02:	test   r8,r8
   140008e05:	jne    0x140008e11
   140008e07:	mov    eax,0x80004003
   140008e0c:	jmp    0x140008ed5
   140008e11:	and    QWORD PTR [r8],0x0
   140008e15:	mov    r15d,0x8007000e
   140008e1b:	mov    DWORD PTR [rsp+0x70],r15d
   140008e20:	and    QWORD PTR [rsp+0x88],0x0
   140008e29:	mov    ecx,0x20
   140008e2e:	call   0x14000acbc
   140008e33:	mov    rsi,rax
   140008e36:	mov    QWORD PTR [rsp+0x28],rax
   140008e3b:	test   rax,rax
   140008e3e:	je     0x140008e6c
   140008e40:	and    DWORD PTR [rax+0x8],0x0
   140008e44:	lea    rax,[rip+0x4ced]        # 0x14000db38
   140008e4b:	mov    QWORD PTR [rsi],rax
   140008e4e:	mov    rdi,QWORD PTR [rip+0x9bc3]        # 0x140012a18
   140008e55:	mov    rax,QWORD PTR [rdi]
   140008e58:	mov    rbx,QWORD PTR [rax+0x8]
   140008e5c:	mov    rcx,rbx
   140008e5f:	call   QWORD PTR [rip+0x4643]        # 0x14000d4a8
   140008e65:	mov    rcx,rdi
   140008e68:	call   rbx
   140008e6a:	jmp    0x140008e6e
   140008e6c:	xor    esi,esi
   140008e6e:	mov    QWORD PTR [rsp+0x88],rsi
   140008e76:	jmp    0x140008e92
   140008e78:	mov    r14,QWORD PTR [rsp+0x80]
   140008e80:	mov    r12,QWORD PTR [rsp+0x78]
   140008e85:	mov    r15d,DWORD PTR [rsp+0x70]
   140008e8a:	mov    rsi,QWORD PTR [rsp+0x88]
   140008e92:	test   rsi,rsi
   140008e95:	je     0x140008ed2
   140008e97:	mov    rax,QWORD PTR [rsi]
   140008e9a:	mov    rbx,QWORD PTR [rax]
   140008e9d:	mov    rcx,rbx
   140008ea0:	call   QWORD PTR [rip+0x4602]        # 0x14000d4a8
   140008ea6:	mov    r8,r14
   140008ea9:	mov    rdx,r12
   140008eac:	mov    rcx,rsi
   140008eaf:	call   rbx
   140008eb1:	mov    r15d,eax
   140008eb4:	test   eax,eax
   140008eb6:	je     0x140008ed2
   140008eb8:	mov    rdx,QWORD PTR [rsi]
   140008ebb:	mov    rbx,QWORD PTR [rdx+0x20]
   140008ebf:	mov    rcx,rbx
   140008ec2:	call   QWORD PTR [rip+0x45e0]        # 0x14000d4a8
   140008ec8:	mov    edx,0x1
   140008ecd:	mov    rcx,rsi
   140008ed0:	call   rbx
   140008ed2:	mov    eax,r15d
   140008ed5:	add    rsp,0x38
   140008ed9:	pop    r15
   140008edb:	pop    r14
   140008edd:	pop    r12
   140008edf:	pop    rdi
   140008ee0:	pop    rsi
   140008ee1:	pop    rbx
   140008ee2:	ret    
   140008ee3:	int3   
   140008ee4:	int3   
   140008ee5:	int3   
   140008ee6:	int3   
   140008ee7:	int3   
   140008ee8:	int3   
   140008ee9:	int3   
   140008eea:	int3   
   140008eeb:	int3   
   140008eec:	int3   
   140008eed:	int3   
   140008eee:	int3   
   140008eef:	int3   
   140008ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ef5:	mov    QWORD PTR [rsp+0x10],rsi
   140008efa:	mov    QWORD PTR [rsp+0x18],rdi
   140008eff:	push   r14
   140008f01:	sub    rsp,0x20
   140008f05:	mov    r14,rcx
   140008f08:	or     esi,0xffffffff
   140008f0b:	lock xadd DWORD PTR [rcx+0x8],esi
   140008f10:	sub    esi,0x1
   140008f13:	jne    0x140008f6a
   140008f15:	mov    rdi,QWORD PTR [rip+0x9afc]        # 0x140012a18
   140008f1c:	mov    rax,QWORD PTR [rdi]
   140008f1f:	mov    rbx,QWORD PTR [rax+0x8]
   140008f23:	mov    rcx,rbx
   140008f26:	call   QWORD PTR [rip+0x457c]        # 0x14000d4a8
   140008f2c:	mov    rcx,rdi
   140008f2f:	call   rbx
   140008f31:	test   r14,r14
   140008f34:	je     0x140008f4e
   140008f36:	mov    rax,QWORD PTR [r14]
   140008f39:	mov    rbx,QWORD PTR [rax+0x20]
   140008f3d:	mov    rcx,rbx
   140008f40:	call   QWORD PTR [rip+0x4562]        # 0x14000d4a8
   140008f46:	lea    edx,[rsi+0x1]
   140008f49:	mov    rcx,r14
   140008f4c:	call   rbx
   140008f4e:	mov    rdi,QWORD PTR [rip+0x9ac3]        # 0x140012a18
   140008f55:	mov    rdx,QWORD PTR [rdi]
   140008f58:	mov    rbx,QWORD PTR [rdx+0x10]
   140008f5c:	mov    rcx,rbx
   140008f5f:	call   QWORD PTR [rip+0x4543]        # 0x14000d4a8
   140008f65:	mov    rcx,rdi
   140008f68:	call   rbx
   140008f6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f6f:	mov    eax,esi
   140008f71:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f76:	mov    rdi,QWORD PTR [rsp+0x40]
   140008f7b:	add    rsp,0x20
   140008f7f:	pop    r14
   140008f81:	ret    
   140008f82:	int3   
   140008f83:	int3   
   140008f84:	int3   
   140008f85:	int3   
   140008f86:	int3   
   140008f87:	int3   
   140008f88:	int3   
   140008f89:	int3   
   140008f8a:	int3   
   140008f8b:	int3   
   140008f8c:	int3   
   140008f8d:	int3   
   140008f8e:	int3   
   140008f8f:	int3   
   140008f90:	mov    r9,r8
   140008f93:	mov    r8,rdx
   140008f96:	lea    rdx,[rip+0x5463]        # 0x14000e400
   140008f9d:	jmp    0x1400082d0
   140008fa2:	int3   
   140008fa3:	int3   
   140008fa4:	int3   
   140008fa5:	int3   
   140008fa6:	int3   
   140008fa7:	int3   
   140008fa8:	int3   
   140008fa9:	int3   
   140008faa:	int3   
   140008fab:	int3   
   140008fac:	int3   
   140008fad:	int3   
   140008fae:	int3   
   140008faf:	int3   
   140008fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140008fb5:	mov    QWORD PTR [rsp+0x10],rsi
   140008fba:	mov    QWORD PTR [rsp+0x18],rdi
   140008fbf:	push   r14
   140008fc1:	sub    rsp,0x20
   140008fc5:	mov    rdi,QWORD PTR [rip+0x9a4c]        # 0x140012a18
   140008fcc:	lea    rax,[rip+0x4b65]        # 0x14000db38
   140008fd3:	mov    QWORD PTR [rcx],rax
   140008fd6:	mov    r14,rcx
   140008fd9:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140008fe0:	mov    esi,edx
   140008fe2:	mov    rax,QWORD PTR [rdi]
   140008fe5:	mov    rbx,QWORD PTR [rax+0x10]
   140008fe9:	mov    rcx,rbx
   140008fec:	call   QWORD PTR [rip+0x44b6]        # 0x14000d4a8
   140008ff2:	mov    rcx,rdi
   140008ff5:	call   rbx
   140008ff7:	test   sil,0x1
   140008ffb:	je     0x140009006
   140008ffd:	mov    rcx,r14
   140009000:	call   QWORD PTR [rip+0x4462]        # 0x14000d468
   140009006:	mov    rbx,QWORD PTR [rsp+0x30]
   14000900b:	mov    rax,r14
   14000900e:	mov    rsi,QWORD PTR [rsp+0x38]
   140009013:	mov    rdi,QWORD PTR [rsp+0x40]
   140009018:	add    rsp,0x20
   14000901c:	pop    r14
   14000901e:	ret    
   14000901f:	int3   
   140009020:	int3   
   140009021:	int3   
   140009022:	int3   
   140009023:	int3   
   140009024:	int3   
   140009025:	int3   
   140009026:	int3   
   140009027:	int3   
   140009028:	mov    rax,rsp
   14000902b:	mov    QWORD PTR [rax+0x8],rcx
   14000902f:	push   rdi
   140009030:	sub    rsp,0x30
   140009034:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000903c:	mov    QWORD PTR [rax+0x10],rbx
   140009040:	mov    QWORD PTR [rax+0x18],rsi
   140009044:	mov    rsi,rcx
   140009047:	lea    rax,[rip+0x4aaa]        # 0x14000daf8
   14000904e:	mov    QWORD PTR [rcx],rax
   140009051:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140009058:	mov    rdi,QWORD PTR [rip+0x99b9]        # 0x140012a18
   14000905f:	mov    rax,QWORD PTR [rdi]
   140009062:	mov    rbx,QWORD PTR [rax+0x10]
   140009066:	mov    rcx,rbx
   140009069:	call   QWORD PTR [rip+0x4439]        # 0x14000d4a8
   14000906f:	mov    rcx,rdi
   140009072:	call   rbx
   140009074:	nop
   140009075:	mov    rdi,QWORD PTR [rsi+0x20]
   140009079:	test   rdi,rdi
   14000907c:	je     0x140009093
   14000907e:	mov    rax,QWORD PTR [rdi]
   140009081:	mov    rbx,QWORD PTR [rax+0x10]
   140009085:	mov    rcx,rbx
   140009088:	call   QWORD PTR [rip+0x441a]        # 0x14000d4a8
   14000908e:	mov    rcx,rdi
   140009091:	call   rbx
   140009093:	mov    rbx,QWORD PTR [rsp+0x48]
   140009098:	mov    rsi,QWORD PTR [rsp+0x50]
   14000909d:	add    rsp,0x30
   1400090a1:	pop    rdi
   1400090a2:	ret    
   1400090a3:	int3   
   1400090a4:	int3   
   1400090a5:	int3   
   1400090a6:	int3   
   1400090a7:	int3   
   1400090a8:	int3   
   1400090a9:	int3   
   1400090aa:	int3   
   1400090ab:	int3   
   1400090ac:	int3   
   1400090ad:	int3   
   1400090ae:	int3   
   1400090af:	int3   
   1400090b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400090b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400090ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400090bf:	push   r14
   1400090c1:	sub    rsp,0x20
   1400090c5:	mov    r14,rcx
   1400090c8:	or     esi,0xffffffff
   1400090cb:	lock xadd DWORD PTR [rcx+0x8],esi
   1400090d0:	sub    esi,0x1
   1400090d3:	jne    0x14000912a
   1400090d5:	mov    rdi,QWORD PTR [rip+0x993c]        # 0x140012a18
   1400090dc:	mov    rax,QWORD PTR [rdi]
   1400090df:	mov    rbx,QWORD PTR [rax+0x8]
   1400090e3:	mov    rcx,rbx
   1400090e6:	call   QWORD PTR [rip+0x43bc]        # 0x14000d4a8
   1400090ec:	mov    rcx,rdi
   1400090ef:	call   rbx
   1400090f1:	test   r14,r14
   1400090f4:	je     0x14000910e
   1400090f6:	mov    rax,QWORD PTR [r14]
   1400090f9:	mov    rbx,QWORD PTR [rax+0x38]
   1400090fd:	mov    rcx,rbx
   140009100:	call   QWORD PTR [rip+0x43a2]        # 0x14000d4a8
   140009106:	lea    edx,[rsi+0x1]
   140009109:	mov    rcx,r14
   14000910c:	call   rbx
   14000910e:	mov    rdi,QWORD PTR [rip+0x9903]        # 0x140012a18
   140009115:	mov    rdx,QWORD PTR [rdi]
   140009118:	mov    rbx,QWORD PTR [rdx+0x10]
   14000911c:	mov    rcx,rbx
   14000911f:	call   QWORD PTR [rip+0x4383]        # 0x14000d4a8
   140009125:	mov    rcx,rdi
   140009128:	call   rbx
   14000912a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000912f:	mov    eax,esi
   140009131:	mov    rsi,QWORD PTR [rsp+0x38]
   140009136:	mov    rdi,QWORD PTR [rsp+0x40]
   14000913b:	add    rsp,0x20
   14000913f:	pop    r14
   140009141:	ret    
   140009142:	int3   
   140009143:	int3   
   140009144:	int3   
   140009145:	int3   
   140009146:	int3   
   140009147:	int3   
   140009148:	int3   
   140009149:	int3   
   14000914a:	int3   
   14000914b:	int3   
   14000914c:	int3   
   14000914d:	int3   
   14000914e:	int3   
   14000914f:	int3   
   140009150:	mov    r9,r8
   140009153:	mov    r8,rdx
   140009156:	lea    rdx,[rip+0x5263]        # 0x14000e3c0
   14000915d:	jmp    0x1400082d0
   140009162:	int3   
   140009163:	int3   
   140009164:	int3   
   140009165:	int3   
   140009166:	int3   
   140009167:	int3   
   140009168:	int3   
   140009169:	int3   
   14000916a:	int3   
   14000916b:	int3   
   14000916c:	int3   
   14000916d:	int3   
   14000916e:	int3   
   14000916f:	int3   
   140009170:	mov    QWORD PTR [rsp+0x8],rbx
   140009175:	push   rdi
   140009176:	sub    rsp,0x20
   14000917a:	mov    ebx,edx
   14000917c:	mov    rdi,rcx
   14000917f:	call   0x140009028
   140009184:	test   bl,0x1
   140009187:	je     0x140009192
   140009189:	mov    rcx,rdi
   14000918c:	call   QWORD PTR [rip+0x42d6]        # 0x14000d468
   140009192:	mov    rax,rdi
   140009195:	mov    rbx,QWORD PTR [rsp+0x30]
   14000919a:	add    rsp,0x20
   14000919e:	pop    rdi
   14000919f:	ret    
   1400091a0:	int3   
   1400091a1:	int3   
   1400091a2:	int3   
   1400091a3:	int3   
   1400091a4:	int3   
   1400091a5:	int3   
   1400091a6:	int3   
   1400091a7:	int3   
   1400091a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400091ad:	push   rdi
   1400091ae:	sub    rsp,0x20
   1400091b2:	mov    rdi,QWORD PTR [rcx+0x20]
   1400091b6:	test   rdi,rdi
   1400091b9:	je     0x1400091d0
   1400091bb:	mov    rax,QWORD PTR [rdi]
   1400091be:	mov    rbx,QWORD PTR [rax+0x10]
   1400091c2:	mov    rcx,rbx
   1400091c5:	call   QWORD PTR [rip+0x42dd]        # 0x14000d4a8
   1400091cb:	mov    rcx,rdi
   1400091ce:	call   rbx
   1400091d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400091d5:	add    rsp,0x20
   1400091d9:	pop    rdi
   1400091da:	ret    
   1400091db:	int3   
   1400091dc:	int3   
   1400091dd:	int3   
   1400091de:	int3   
   1400091df:	int3   
   1400091e0:	int3   
   1400091e1:	int3   
   1400091e2:	int3   
   1400091e3:	int3   
   1400091e4:	mov    QWORD PTR [rsp+0x8],rcx
   1400091e9:	push   rbx
   1400091ea:	push   rsi
   1400091eb:	push   rdi
   1400091ec:	push   r12
   1400091ee:	push   r14
   1400091f0:	push   r15
   1400091f2:	sub    rsp,0x38
   1400091f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400091ff:	mov    r15,rcx
   140009202:	xor    esi,esi
   140009204:	test   rcx,rcx
   140009207:	jne    0x140009213
   140009209:	mov    eax,0x80004003
   14000920e:	jmp    0x1400092a1
   140009213:	mov    QWORD PTR [rcx],rsi
   140009216:	mov    r12d,0x8007000e
   14000921c:	mov    DWORD PTR [rsp+0x78],r12d
   140009221:	mov    QWORD PTR [rsp+0x80],rsi
   140009229:	mov    ecx,0x28
   14000922e:	call   0x14000acbc
   140009233:	mov    r14,rax
   140009236:	mov    QWORD PTR [rsp+0x88],rax
   14000923e:	test   rax,rax
   140009241:	je     0x140009273
   140009243:	mov    DWORD PTR [rax+0x8],esi
   140009246:	mov    QWORD PTR [rax+0x20],rsi
   14000924a:	lea    rax,[rip+0x48a7]        # 0x14000daf8
   140009251:	mov    QWORD PTR [r14],rax
   140009254:	mov    rdi,QWORD PTR [rip+0x97bd]        # 0x140012a18
   14000925b:	mov    rax,QWORD PTR [rdi]
   14000925e:	mov    rbx,QWORD PTR [rax+0x8]
   140009262:	mov    rcx,rbx
   140009265:	call   QWORD PTR [rip+0x423d]        # 0x14000d4a8
   14000926b:	mov    rcx,rdi
   14000926e:	call   rbx
   140009270:	nop
   140009271:	jmp    0x140009276
   140009273:	mov    r14,rsi
   140009276:	mov    QWORD PTR [rsp+0x80],r14
   14000927e:	jmp    0x140009294
   140009280:	xor    esi,esi
   140009282:	mov    r15,QWORD PTR [rsp+0x70]
   140009287:	mov    r12d,DWORD PTR [rsp+0x78]
   14000928c:	mov    r14,QWORD PTR [rsp+0x80]
   140009294:	test   r14,r14
   140009297:	cmovne r12d,esi
   14000929b:	mov    QWORD PTR [r15],r14
   14000929e:	mov    eax,r12d
   1400092a1:	add    rsp,0x38
   1400092a5:	pop    r15
   1400092a7:	pop    r14
   1400092a9:	pop    r12
   1400092ab:	pop    rdi
   1400092ac:	pop    rsi
   1400092ad:	pop    rbx
   1400092ae:	ret    
   1400092af:	int3   
   1400092b0:	int3   
   1400092b1:	int3   
   1400092b2:	int3   
   1400092b3:	int3   
   1400092b4:	int3   
   1400092b5:	int3   
   1400092b6:	int3   
   1400092b7:	int3   
   1400092b8:	int3   
   1400092b9:	int3   
   1400092ba:	int3   
   1400092bb:	int3   
   1400092bc:	int3   
   1400092bd:	int3   
   1400092be:	int3   
   1400092bf:	int3   
   1400092c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400092c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400092ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400092cf:	push   rdi
   1400092d0:	sub    rsp,0x20
   1400092d4:	mov    rbp,rdx
   1400092d7:	mov    rsi,r9
   1400092da:	xor    edx,edx
   1400092dc:	mov    rdi,r8
   1400092df:	mov    eax,0x80004003
   1400092e4:	test   r9,r9
   1400092e7:	je     0x14000932f
   1400092e9:	mov    QWORD PTR [r9],rdx
   1400092ec:	test   rbp,rbp
   1400092ef:	je     0x140009317
   1400092f1:	cmp    DWORD PTR [r8],edx
   1400092f4:	jne    0x140009310
   1400092f6:	cmp    DWORD PTR [r8+0x4],edx
   1400092fa:	jne    0x140009310
   1400092fc:	cmp    DWORD PTR [r8+0x8],0xc0
   140009304:	jne    0x140009310
   140009306:	cmp    DWORD PTR [r8+0xc],0x46000000
   14000930e:	je     0x140009317
   140009310:	mov    eax,0x80040110
   140009315:	jmp    0x14000932f
   140009317:	mov    rbx,QWORD PTR [rcx+0x40]
   14000931b:	mov    rcx,rbx
   14000931e:	call   QWORD PTR [rip+0x4184]        # 0x14000d4a8
   140009324:	mov    r8,rsi
   140009327:	mov    rdx,rdi
   14000932a:	mov    rcx,rbp
   14000932d:	call   rbx
   14000932f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009334:	mov    rbp,QWORD PTR [rsp+0x38]
   140009339:	mov    rsi,QWORD PTR [rsp+0x40]
   14000933e:	add    rsp,0x20
   140009342:	pop    rdi
   140009343:	ret    
   140009344:	int3   
   140009345:	int3   
   140009346:	int3   
   140009347:	int3   
   140009348:	int3   
   140009349:	int3   
   14000934a:	int3   
   14000934b:	int3   
   14000934c:	int3   
   14000934d:	int3   
   14000934e:	int3   
   14000934f:	int3   
   140009350:	mov    QWORD PTR [rsp+0x8],rbx
   140009355:	push   rdi
   140009356:	sub    rsp,0x20
   14000935a:	mov    rdi,QWORD PTR [rip+0x96b7]        # 0x140012a18
   140009361:	mov    rax,QWORD PTR [rdi]
   140009364:	test   edx,edx
   140009366:	je     0x14000936e
   140009368:	mov    rbx,QWORD PTR [rax+0x8]
   14000936c:	jmp    0x140009372
   14000936e:	mov    rbx,QWORD PTR [rax+0x10]
   140009372:	mov    rcx,rbx
   140009375:	call   QWORD PTR [rip+0x412d]        # 0x14000d4a8
   14000937b:	mov    rcx,rdi
   14000937e:	call   rbx
   140009380:	mov    rbx,QWORD PTR [rsp+0x30]
   140009385:	xor    eax,eax
   140009387:	add    rsp,0x20
   14000938b:	pop    rdi
   14000938c:	ret    
   14000938d:	int3   
   14000938e:	int3   
   14000938f:	int3   
   140009390:	int3   
   140009391:	int3   
   140009392:	int3   
   140009393:	int3   
   140009394:	rex push rdi
   140009396:	sub    rsp,0x60
   14000939a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400093a3:	mov    QWORD PTR [rsp+0x78],rbx
   1400093a8:	mov    rax,QWORD PTR [rip+0x8c61]        # 0x140012010
   1400093af:	xor    rax,rsp
   1400093b2:	mov    QWORD PTR [rsp+0x50],rax
   1400093b7:	mov    rbx,rcx
   1400093ba:	mov    r11,QWORD PTR [rdx+0x10]
   1400093be:	cmp    QWORD PTR [rdx+0x18],0x8
   1400093c3:	jb     0x1400093c8
   1400093c5:	mov    rdx,QWORD PTR [rdx]
   1400093c8:	mov    rax,QWORD PTR [rcx+0x10]
   1400093cc:	xor    edi,edi
   1400093ce:	test   rax,rax
   1400093d1:	je     0x14000943b
   1400093d3:	cmp    QWORD PTR [rcx+0x18],0x8
   1400093d8:	jb     0x1400093dd
   1400093da:	mov    rcx,QWORD PTR [rcx]
   1400093dd:	lea    r10,[rcx+rax*2]
   1400093e1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400093e6:	jb     0x1400093ed
   1400093e8:	mov    r8,QWORD PTR [rbx]
   1400093eb:	jmp    0x14000941d
   1400093ed:	mov    r8,rbx
   1400093f0:	jmp    0x14000941d
   1400093f2:	mov    rcx,r11
   1400093f5:	mov    rax,rdx
   1400093f8:	test   r11,r11
   1400093fb:	je     0x140009411
   1400093fd:	movzx  r9d,WORD PTR [r8]
   140009401:	cmp    WORD PTR [rax],r9w
   140009405:	je     0x140009414
   140009407:	add    rax,0x2
   14000940b:	sub    rcx,0x1
   14000940f:	jne    0x140009401
   140009411:	mov    rax,rdi
   140009414:	test   rax,rax
   140009417:	je     0x140009424
   140009419:	add    r8,0x2
   14000941d:	cmp    r8,r10
   140009420:	jb     0x1400093f2
   140009422:	jmp    0x14000943b
   140009424:	cmp    QWORD PTR [rbx+0x18],0x8
   140009429:	jb     0x140009430
   14000942b:	mov    rax,QWORD PTR [rbx]
   14000942e:	jmp    0x140009433
   140009430:	mov    rax,rbx
   140009433:	sub    r8,rax
   140009436:	sar    r8,1
   140009439:	jmp    0x14000943f
   14000943b:	or     r8,0xffffffffffffffff
   14000943f:	cmp    r8,0xffffffffffffffff
   140009443:	je     0x140009478
   140009445:	or     r9,0xffffffffffffffff
   140009449:	lea    rdx,[rsp+0x28]
   14000944e:	mov    rcx,rbx
   140009451:	call   0x14000a0d4
   140009456:	nop
   140009457:	mov    rdx,rax
   14000945a:	mov    rcx,rbx
   14000945d:	call   0x1400062e4
   140009462:	nop
   140009463:	cmp    QWORD PTR [rsp+0x40],0x8
   140009469:	jb     0x14000948e
   14000946b:	mov    rcx,QWORD PTR [rsp+0x28]
   140009470:	call   QWORD PTR [rip+0x3ff2]        # 0x14000d468
   140009476:	jmp    0x14000948e
   140009478:	mov    QWORD PTR [rbx+0x10],rdi
   14000947c:	cmp    QWORD PTR [rbx+0x18],0x8
   140009481:	jb     0x140009488
   140009483:	mov    rax,QWORD PTR [rbx]
   140009486:	jmp    0x14000948b
   140009488:	mov    rax,rbx
   14000948b:	mov    WORD PTR [rax],di
   14000948e:	mov    rax,rbx
   140009491:	mov    rcx,QWORD PTR [rsp+0x50]
   140009496:	xor    rcx,rsp
   140009499:	call   0x14000b290
   14000949e:	mov    rbx,QWORD PTR [rsp+0x78]
   1400094a3:	add    rsp,0x60
   1400094a7:	pop    rdi
   1400094a8:	ret    
   1400094a9:	int3   
   1400094aa:	int3   
   1400094ab:	int3   
   1400094ac:	int3   
   1400094ad:	int3   
   1400094ae:	int3   
   1400094af:	int3   
   1400094b0:	rex push rbx
   1400094b2:	sub    rsp,0x60
   1400094b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400094bf:	mov    rax,QWORD PTR [rip+0x8b4a]        # 0x140012010
   1400094c6:	xor    rax,rsp
   1400094c9:	mov    QWORD PTR [rsp+0x50],rax
   1400094ce:	mov    rbx,rcx
   1400094d1:	mov    r10,QWORD PTR [rdx+0x10]
   1400094d5:	cmp    QWORD PTR [rdx+0x18],0x8
   1400094da:	jb     0x1400094df
   1400094dc:	mov    rdx,QWORD PTR [rdx]
   1400094df:	mov    rax,QWORD PTR [rcx+0x10]
   1400094e3:	xor    r11d,r11d
   1400094e6:	test   rax,rax
   1400094e9:	je     0x140009566
   1400094eb:	cmp    rax,0xffffffffffffffff
   1400094ef:	jbe    0x1400094f7
   1400094f1:	or     rcx,0xffffffffffffffff
   1400094f5:	jmp    0x1400094fb
   1400094f7:	lea    rcx,[rax-0x1]
   1400094fb:	cmp    QWORD PTR [rbx+0x18],0x8
   140009500:	jb     0x140009507
   140009502:	mov    rax,QWORD PTR [rbx]
   140009505:	jmp    0x14000950a
   140009507:	mov    rax,rbx
   14000950a:	lea    r9,[rax+rcx*2]
   14000950e:	mov    rcx,r10
   140009511:	mov    rax,rdx
   140009514:	test   r10,r10
   140009517:	je     0x14000952d
   140009519:	movzx  r8d,WORD PTR [r9]
   14000951d:	cmp    WORD PTR [rax],r8w
   140009521:	je     0x140009530
   140009523:	add    rax,0x2
   140009527:	sub    rcx,0x1
   14000952b:	jne    0x14000951d
   14000952d:	mov    rax,r11
   140009530:	test   rax,rax
   140009533:	je     0x14000954f
   140009535:	cmp    QWORD PTR [rbx+0x18],0x8
   14000953a:	jb     0x140009541
   14000953c:	mov    rax,QWORD PTR [rbx]
   14000953f:	jmp    0x140009544
   140009541:	mov    rax,rbx
   140009544:	cmp    r9,rax
   140009547:	je     0x140009566
   140009549:	sub    r9,0x2
   14000954d:	jmp    0x14000950e
   14000954f:	cmp    QWORD PTR [rbx+0x18],0x8
   140009554:	jb     0x14000955b
   140009556:	mov    rax,QWORD PTR [rbx]
   140009559:	jmp    0x14000955e
   14000955b:	mov    rax,rbx
   14000955e:	sub    r9,rax
   140009561:	sar    r9,1
   140009564:	jmp    0x14000956a
   140009566:	or     r9,0xffffffffffffffff
   14000956a:	cmp    r9,0xffffffffffffffff
   14000956e:	je     0x1400095a5
   140009570:	inc    r9
   140009573:	xor    r8d,r8d
   140009576:	lea    rdx,[rsp+0x28]
   14000957b:	mov    rcx,rbx
   14000957e:	call   0x14000a0d4
   140009583:	nop
   140009584:	mov    rdx,rax
   140009587:	mov    rcx,rbx
   14000958a:	call   0x1400062e4
   14000958f:	nop
   140009590:	cmp    QWORD PTR [rsp+0x40],0x8
   140009596:	jb     0x1400095bc
   140009598:	mov    rcx,QWORD PTR [rsp+0x28]
   14000959d:	call   QWORD PTR [rip+0x3ec5]        # 0x14000d468
   1400095a3:	jmp    0x1400095bc
   1400095a5:	mov    QWORD PTR [rbx+0x10],r11
   1400095a9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400095ae:	jb     0x1400095b5
   1400095b0:	mov    rax,QWORD PTR [rbx]
   1400095b3:	jmp    0x1400095b8
   1400095b5:	mov    rax,rbx
   1400095b8:	mov    WORD PTR [rax],r11w
   1400095bc:	mov    rax,rbx
   1400095bf:	mov    rcx,QWORD PTR [rsp+0x50]
   1400095c4:	xor    rcx,rsp
   1400095c7:	call   0x14000b290
   1400095cc:	add    rsp,0x60
   1400095d0:	pop    rbx
   1400095d1:	ret    
   1400095d2:	int3   
   1400095d3:	int3   
   1400095d4:	int3   
   1400095d5:	int3   
   1400095d6:	int3   
   1400095d7:	int3   
   1400095d8:	int3   
   1400095d9:	int3   
   1400095da:	int3   
   1400095db:	int3   
   1400095dc:	int3   
   1400095dd:	int3   
   1400095de:	int3   
   1400095df:	int3   
   1400095e0:	mov    rax,rsp
   1400095e3:	push   rdi
   1400095e4:	sub    rsp,0x60
   1400095e8:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   1400095f0:	mov    QWORD PTR [rax+0x10],rbx
   1400095f4:	mov    QWORD PTR [rax+0x18],rbp
   1400095f8:	mov    QWORD PTR [rax+0x20],rsi
   1400095fc:	mov    rax,QWORD PTR [rip+0x8a0d]        # 0x140012010
   140009603:	xor    rax,rsp
   140009606:	mov    QWORD PTR [rsp+0x50],rax
   14000960b:	mov    rdi,rcx
   14000960e:	cmp    QWORD PTR [rip+0x3b02],0x0        # 0x14000d118
   140009616:	jne    0x14000961c
   140009618:	xor    esi,esi
   14000961a:	jmp    0x140009639
   14000961c:	lea    rax,[rip+0x45bd]        # 0x14000dbe0
   140009623:	mov    QWORD PTR [rsp+0x30],rax
   140009628:	mov    rax,QWORD PTR [rip+0x3ae9]        # 0x14000d118
   14000962f:	mov    QWORD PTR [rsp+0x38],rax
   140009634:	lea    rsi,[rsp+0x30]
   140009639:	mov    QWORD PTR [rsp+0x48],rsi
   14000963e:	xor    ebp,ebp
   140009640:	cmp    rcx,0xffffffffffffffff
   140009644:	setne  bpl
   140009648:	test   ebp,ebp
   14000964a:	je     0x140009670
   14000964c:	test   rsi,rsi
   14000964f:	jne    0x140009657
   140009651:	call   0x14000ae90
   140009656:	int3   
   140009657:	mov    rbx,QWORD PTR [rsi+0x8]
   14000965b:	mov    rcx,rbx
   14000965e:	call   QWORD PTR [rip+0x3e44]        # 0x14000d4a8
   140009664:	mov    rcx,rdi
   140009667:	call   rbx
   140009669:	mov    ebp,eax
   14000966b:	mov    rsi,QWORD PTR [rsp+0x48]
   140009670:	test   rsi,rsi
   140009673:	je     0x1400096a6
   140009675:	lea    rax,[rsp+0x30]
   14000967a:	cmp    rsi,rax
   14000967d:	setne  dil
   140009681:	mov    rdx,QWORD PTR [rsi]
   140009684:	mov    rbx,QWORD PTR [rdx+0x20]
   140009688:	mov    rcx,rbx
   14000968b:	call   QWORD PTR [rip+0x3e17]        # 0x14000d4a8
   140009691:	xor    edx,edx
   140009693:	mov    rcx,rsi
   140009696:	call   rbx
   140009698:	test   dil,dil
   14000969b:	je     0x1400096a6
   14000969d:	mov    rcx,rsi
   1400096a0:	call   QWORD PTR [rip+0x3dc2]        # 0x14000d468
   1400096a6:	mov    eax,ebp
   1400096a8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400096ad:	xor    rcx,rsp
   1400096b0:	call   0x14000b290
   1400096b5:	lea    r11,[rsp+0x60]
   1400096ba:	mov    rbx,QWORD PTR [r11+0x18]
   1400096be:	mov    rbp,QWORD PTR [r11+0x20]
   1400096c2:	mov    rsi,QWORD PTR [r11+0x28]
   1400096c6:	mov    rsp,r11
   1400096c9:	pop    rdi
   1400096ca:	ret    
   1400096cb:	int3   
   1400096cc:	int3   
   1400096cd:	int3   
   1400096ce:	int3   
   1400096cf:	int3   
   1400096d0:	int3   
   1400096d1:	int3   
   1400096d2:	int3   
   1400096d3:	int3   
   1400096d4:	mov    rax,rsp
   1400096d7:	push   rbp
   1400096d8:	push   rsi
   1400096d9:	push   rdi
   1400096da:	push   r12
   1400096dc:	push   r13
   1400096de:	push   r14
   1400096e0:	push   r15
   1400096e2:	lea    rbp,[rax-0x48]
   1400096e6:	sub    rsp,0x110
   1400096ed:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   1400096f6:	mov    QWORD PTR [rax+0x20],rbx
   1400096fa:	mov    rax,QWORD PTR [rip+0x890f]        # 0x140012010
   140009701:	xor    rax,rsp
   140009704:	mov    QWORD PTR [rbp+0x0],rax
   140009708:	mov    r13b,r8b
   14000970b:	mov    r12,rdx
   14000970e:	mov    r15,rcx
   140009711:	mov    QWORD PTR [rsp+0x60],rcx
   140009716:	and    DWORD PTR [rsp+0x38],0x0
   14000971b:	call   0x14000615c
   140009720:	mov    DWORD PTR [rsp+0x38],0x1
   140009728:	lea    rcx,[rip+0xfffffffffffffeb1]        # 0x1400095e0
   14000972f:	test   rcx,rcx
   140009732:	jne    0x14000973a
   140009734:	and    QWORD PTR [rbp-0x78],rcx
   140009738:	jmp    0x140009754
   14000973a:	lea    rax,[rip+0x449f]        # 0x14000dbe0
   140009741:	mov    QWORD PTR [rsp+0x70],rax
   140009746:	mov    QWORD PTR [rsp+0x78],rcx
   14000974b:	lea    rax,[rsp+0x70]
   140009750:	mov    QWORD PTR [rbp-0x78],rax
   140009754:	mov    r8,QWORD PTR [r12]
   140009758:	xor    edx,edx
   14000975a:	lea    ecx,[rdx+0x4]
   14000975d:	call   QWORD PTR [rip+0x3a1d]        # 0x14000d180
   140009763:	mov    rbx,rax
   140009766:	lea    rdx,[rsp+0x70]
   14000976b:	lea    rcx,[rsp+0x40]
   140009770:	call   0x14000a3bc
   140009775:	mov    r14,rax
   140009778:	mov    QWORD PTR [rsp+0x30],rax
   14000977d:	mov    QWORD PTR [rbp-0x50],rbx
   140009781:	mov    rdx,rax
   140009784:	lea    rcx,[rbp-0x48]
   140009788:	call   0x14000a3bc
   14000978d:	nop
   14000978e:	mov    rsi,QWORD PTR [r14+0x18]
   140009792:	test   rsi,rsi
   140009795:	je     0x1400097c8
   140009797:	cmp    rsi,r14
   14000979a:	setne  dil
   14000979e:	mov    rax,QWORD PTR [rsi]
   1400097a1:	mov    rbx,QWORD PTR [rax+0x20]
   1400097a5:	mov    rcx,rbx
   1400097a8:	call   QWORD PTR [rip+0x3cfa]        # 0x14000d4a8
   1400097ae:	xor    edx,edx
   1400097b0:	mov    rcx,rsi
   1400097b3:	call   rbx
   1400097b5:	test   dil,dil
   1400097b8:	je     0x1400097c3
   1400097ba:	mov    rcx,rsi
   1400097bd:	call   QWORD PTR [rip+0x3ca5]        # 0x14000d468
   1400097c3:	and    QWORD PTR [r14+0x18],0x0
   1400097c8:	mov    rsi,QWORD PTR [rbp-0x78]
   1400097cc:	xor    r14d,r14d
   1400097cf:	test   rsi,rsi
   1400097d2:	je     0x140009809
   1400097d4:	lea    rax,[rsp+0x70]
   1400097d9:	cmp    rsi,rax
   1400097dc:	setne  dil
   1400097e0:	mov    rax,QWORD PTR [rsi]
   1400097e3:	mov    rbx,QWORD PTR [rax+0x20]
   1400097e7:	mov    rcx,rbx
   1400097ea:	call   QWORD PTR [rip+0x3cb8]        # 0x14000d4a8
   1400097f0:	xor    edx,edx
   1400097f2:	mov    rcx,rsi
   1400097f5:	call   rbx
   1400097f7:	test   dil,dil
   1400097fa:	je     0x140009805
   1400097fc:	mov    rcx,rsi
   1400097ff:	call   QWORD PTR [rip+0x3c63]        # 0x14000d468
   140009805:	mov    QWORD PTR [rbp-0x78],r14
   140009809:	mov    rdi,QWORD PTR [rbp-0x50]
   14000980d:	cmp    rdi,0xffffffffffffffff
   140009811:	je     0x1400099ca
   140009817:	cmp    QWORD PTR [rip+0x3972],r14        # 0x14000d190
   14000981e:	jne    0x140009826
   140009820:	mov    QWORD PTR [rbp-0x58],r14
   140009824:	jmp    0x140009844
   140009826:	lea    rax,[rip+0x4383]        # 0x14000dbb0
   14000982d:	mov    QWORD PTR [rbp-0x70],rax
   140009831:	mov    rax,QWORD PTR [rip+0x3958]        # 0x14000d190
   140009838:	mov    QWORD PTR [rbp-0x68],rax
   14000983c:	lea    rax,[rbp-0x70]
   140009840:	mov    QWORD PTR [rbp-0x58],rax
   140009844:	mov    QWORD PTR [rsp+0x20],r14
   140009849:	xor    r9d,r9d
   14000984c:	xor    r8d,r8d
   14000984f:	lea    edx,[r9+0x4]
   140009853:	mov    rcx,rdi
   140009856:	call   QWORD PTR [rip+0x392c]        # 0x14000d188
   14000985c:	mov    rbx,rax
   14000985f:	lea    rdx,[rbp-0x70]
   140009863:	lea    rcx,[rsp+0x40]
   140009868:	call   0x14000a454
   14000986d:	mov    r14,rax
   140009870:	mov    QWORD PTR [rsp+0x30],rax
   140009875:	mov    QWORD PTR [rbp-0x28],rbx
   140009879:	mov    rdx,rax
   14000987c:	lea    rcx,[rbp-0x20]
   140009880:	call   0x14000a454
   140009885:	nop
   140009886:	mov    rsi,QWORD PTR [r14+0x18]
   14000988a:	test   rsi,rsi
   14000988d:	je     0x1400098c0
   14000988f:	cmp    rsi,r14
   140009892:	setne  dil
   140009896:	mov    rax,QWORD PTR [rsi]
   140009899:	mov    rbx,QWORD PTR [rax+0x20]
   14000989d:	mov    rcx,rbx
   1400098a0:	call   QWORD PTR [rip+0x3c02]        # 0x14000d4a8
   1400098a6:	xor    edx,edx
   1400098a8:	mov    rcx,rsi
   1400098ab:	call   rbx
   1400098ad:	test   dil,dil
   1400098b0:	je     0x1400098bb
   1400098b2:	mov    rcx,rsi
   1400098b5:	call   QWORD PTR [rip+0x3bad]        # 0x14000d468
   1400098bb:	and    QWORD PTR [r14+0x18],0x0
   1400098c0:	mov    rsi,QWORD PTR [rbp-0x58]
   1400098c4:	xor    r14d,r14d
   1400098c7:	test   rsi,rsi
   1400098ca:	je     0x140009900
   1400098cc:	lea    rax,[rbp-0x70]
   1400098d0:	cmp    rsi,rax
   1400098d3:	setne  dil
   1400098d7:	mov    rax,QWORD PTR [rsi]
   1400098da:	mov    rbx,QWORD PTR [rax+0x20]
   1400098de:	mov    rcx,rbx
   1400098e1:	call   QWORD PTR [rip+0x3bc1]        # 0x14000d4a8
   1400098e7:	xor    edx,edx
   1400098e9:	mov    rcx,rsi
   1400098ec:	call   rbx
   1400098ee:	test   dil,dil
   1400098f1:	je     0x1400098fc
   1400098f3:	mov    rcx,rsi
   1400098f6:	call   QWORD PTR [rip+0x3b6c]        # 0x14000d468
   1400098fc:	mov    QWORD PTR [rbp-0x58],r14
   140009900:	mov    rdi,QWORD PTR [rbp-0x28]
   140009904:	test   rdi,rdi
   140009907:	je     0x140009966
   140009909:	mov    r8,QWORD PTR [r12+0x8]
   14000990e:	shr    r8,1
   140009911:	mov    eax,0xfeff
   140009916:	cmp    WORD PTR [rdi],ax
   140009919:	jne    0x140009966
   14000991b:	lea    rdx,[rdi+0x2]
   14000991f:	dec    r8
   140009922:	mov    r9b,r13b
   140009925:	lea    rcx,[rsp+0x40]
   14000992a:	call   0x140009a5c
   14000992f:	nop
   140009930:	mov    rdx,rax
   140009933:	mov    rcx,r15
   140009936:	call   0x140008218
   14000993b:	nop
   14000993c:	mov    r8,QWORD PTR [rsp+0x48]
   140009941:	mov    r9,r8
   140009944:	mov    r8,QWORD PTR [r8]
   140009947:	lea    rdx,[rsp+0x30]
   14000994c:	lea    rcx,[rsp+0x40]
   140009951:	call   0x1400066e0
   140009956:	nop
   140009957:	mov    rcx,QWORD PTR [rsp+0x48]
   14000995c:	call   QWORD PTR [rip+0x3b06]        # 0x14000d468
   140009962:	mov    rdi,QWORD PTR [rbp-0x28]
   140009966:	test   rdi,rdi
   140009969:	je     0x14000998d
   14000996b:	mov    rbx,QWORD PTR [rbp-0x8]
   14000996f:	test   rbx,rbx
   140009972:	jne    0x14000997a
   140009974:	call   0x14000ae90
   140009979:	int3   
   14000997a:	mov    rbx,QWORD PTR [rbx+0x8]
   14000997e:	mov    rcx,rbx
   140009981:	call   QWORD PTR [rip+0x3b21]        # 0x14000d4a8
   140009987:	mov    rcx,rdi
   14000998a:	call   rbx
   14000998c:	nop
   14000998d:	mov    rsi,QWORD PTR [rbp-0x8]
   140009991:	test   rsi,rsi
   140009994:	je     0x1400099c6
   140009996:	lea    rax,[rbp-0x20]
   14000999a:	cmp    rsi,rax
   14000999d:	setne  dil
   1400099a1:	mov    rax,QWORD PTR [rsi]
   1400099a4:	mov    rbx,QWORD PTR [rax+0x20]
   1400099a8:	mov    rcx,rbx
   1400099ab:	call   QWORD PTR [rip+0x3af7]        # 0x14000d4a8
   1400099b1:	xor    edx,edx
   1400099b3:	mov    rcx,rsi
   1400099b6:	call   rbx
   1400099b8:	test   dil,dil
   1400099bb:	je     0x1400099c6
   1400099bd:	mov    rcx,rsi
   1400099c0:	call   QWORD PTR [rip+0x3aa2]        # 0x14000d468
   1400099c6:	mov    rdi,QWORD PTR [rbp-0x50]
   1400099ca:	test   rdi,rdi
   1400099cd:	je     0x1400099f1
   1400099cf:	mov    rbx,QWORD PTR [rbp-0x30]
   1400099d3:	test   rbx,rbx
   1400099d6:	jne    0x1400099de
   1400099d8:	call   0x14000ae90
   1400099dd:	int3   
   1400099de:	mov    rbx,QWORD PTR [rbx+0x8]
   1400099e2:	mov    rcx,rbx
   1400099e5:	call   QWORD PTR [rip+0x3abd]        # 0x14000d4a8
   1400099eb:	mov    rcx,rdi
   1400099ee:	call   rbx
   1400099f0:	nop
   1400099f1:	mov    rsi,QWORD PTR [rbp-0x30]
   1400099f5:	test   rsi,rsi
   1400099f8:	je     0x140009a2a
   1400099fa:	lea    rax,[rbp-0x48]
   1400099fe:	cmp    rsi,rax
   140009a01:	setne  dil
   140009a05:	mov    rdx,QWORD PTR [rsi]
   140009a08:	mov    rbx,QWORD PTR [rdx+0x20]
   140009a0c:	mov    rcx,rbx
   140009a0f:	call   QWORD PTR [rip+0x3a93]        # 0x14000d4a8
   140009a15:	xor    edx,edx
   140009a17:	mov    rcx,rsi
   140009a1a:	call   rbx
   140009a1c:	test   dil,dil
   140009a1f:	je     0x140009a2a
   140009a21:	mov    rcx,rsi
   140009a24:	call   QWORD PTR [rip+0x3a3e]        # 0x14000d468
   140009a2a:	mov    rax,r15
   140009a2d:	mov    rcx,QWORD PTR [rbp+0x0]
   140009a31:	xor    rcx,rsp
   140009a34:	call   0x14000b290
   140009a39:	mov    rbx,QWORD PTR [rsp+0x168]
   140009a41:	add    rsp,0x110
   140009a48:	pop    r15
   140009a4a:	pop    r14
   140009a4c:	pop    r13
   140009a4e:	pop    r12
   140009a50:	pop    rdi
   140009a51:	pop    rsi
   140009a52:	pop    rbp
   140009a53:	ret    
   140009a54:	int3   
   140009a55:	int3   
   140009a56:	int3   
   140009a57:	int3   
   140009a58:	int3   
   140009a59:	int3   
   140009a5a:	int3   
   140009a5b:	int3   
   140009a5c:	mov    rax,rsp
   140009a5f:	push   rbp
   140009a60:	push   rsi
   140009a61:	push   rdi
   140009a62:	push   r12
   140009a64:	push   r13
   140009a66:	push   r14
   140009a68:	push   r15
   140009a6a:	lea    rbp,[rsp-0x50]
   140009a6f:	sub    rsp,0x150
   140009a76:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140009a7f:	mov    QWORD PTR [rax+0x18],rbx
   140009a83:	mov    rax,QWORD PTR [rip+0x8586]        # 0x140012010
   140009a8a:	xor    rax,rsp
   140009a8d:	mov    QWORD PTR [rbp+0x48],rax
   140009a91:	mov    r15b,r9b
   140009a94:	mov    rbx,r8
   140009a97:	mov    rdi,rdx
   140009a9a:	mov    rsi,rcx
   140009a9d:	mov    QWORD PTR [rsp+0x30],rcx
   140009aa2:	xor    r12d,r12d
   140009aa5:	mov    DWORD PTR [rsp+0x20],r12d
   140009aaa:	call   0x14000615c
   140009aaf:	mov    DWORD PTR [rsp+0x20],0x1
   140009ab7:	lea    r14,[rdi+rbx*2]
   140009abb:	cmp    rdi,r14
   140009abe:	je     0x14000a012
   140009ac4:	lea    ebx,[r12+0x7]
   140009ac9:	lea    r13d,[r12+0x8]
   140009ace:	mov    QWORD PTR [rbp-0x40],rbx
   140009ad2:	mov    QWORD PTR [rbp-0x48],r12
   140009ad6:	mov    WORD PTR [rbp-0x58],r12w
   140009adb:	mov    r8d,0x2
   140009ae1:	lea    rdx,[rip+0x4960]        # 0x14000e448
   140009ae8:	lea    rcx,[rbp-0x58]
   140009aec:	call   0x14000a290
   140009af1:	nop
   140009af2:	lea    rcx,[rbp-0x58]
   140009af6:	mov    r10,QWORD PTR [rbp-0x58]
   140009afa:	mov    r9,QWORD PTR [rbp-0x40]
   140009afe:	cmp    r9,r13
   140009b01:	cmovae rcx,r10
   140009b05:	mov    rax,QWORD PTR [rbp-0x48]
   140009b09:	lea    rax,[rcx+rax*2]
   140009b0d:	lea    rdx,[rbp-0x58]
   140009b11:	cmovae rdx,r10
   140009b15:	mov    rbx,rdi
   140009b18:	cmp    rdi,r14
   140009b1b:	je     0x140009b41
   140009b1d:	mov    rcx,rdx
   140009b20:	cmp    rdx,rax
   140009b23:	je     0x140009b38
   140009b25:	movzx  r8d,WORD PTR [rbx]
   140009b29:	cmp    r8w,WORD PTR [rcx]
   140009b2d:	je     0x140009b41
   140009b2f:	add    rcx,0x2
   140009b33:	cmp    rcx,rax
   140009b36:	jne    0x140009b29
   140009b38:	add    rbx,0x2
   140009b3c:	cmp    rbx,r14
   140009b3f:	jne    0x140009b1d
   140009b41:	mov    ecx,0x7
   140009b46:	mov    QWORD PTR [rsp+0x70],rcx
   140009b4b:	mov    rax,r12
   140009b4e:	mov    QWORD PTR [rsp+0x68],rax
   140009b53:	mov    WORD PTR [rsp+0x58],r12w
   140009b59:	cmp    rdi,rbx
   140009b5c:	je     0x140009b86
   140009b5e:	mov    r8,rbx
   140009b61:	sub    r8,rdi
   140009b64:	sar    r8,1
   140009b67:	mov    rdx,rdi
   140009b6a:	lea    rcx,[rsp+0x58]
   140009b6f:	call   0x14000a290
   140009b74:	mov    r9,QWORD PTR [rbp-0x40]
   140009b78:	mov    r10,QWORD PTR [rbp-0x58]
   140009b7c:	mov    rcx,QWORD PTR [rsp+0x70]
   140009b81:	mov    rax,QWORD PTR [rsp+0x68]
   140009b86:	mov    rdi,rbx
   140009b89:	cmp    rbx,r14
   140009b8c:	je     0x140009ba3
   140009b8e:	cmp    WORD PTR [rdi],0xd
   140009b92:	je     0x140009b9a
   140009b94:	cmp    WORD PTR [rdi],0xa
   140009b98:	jne    0x140009ba3
   140009b9a:	add    rdi,0x2
   140009b9e:	cmp    rdi,r14
   140009ba1:	jne    0x140009b8e
   140009ba3:	test   rax,rax
   140009ba6:	je     0x140009fce
   140009bac:	lea    rax,[rsp+0x58]
   140009bb1:	cmp    rcx,r13
   140009bb4:	cmovae rax,QWORD PTR [rsp+0x58]
   140009bba:	cmp    WORD PTR [rax],0x23
   140009bbe:	je     0x140009fce
   140009bc4:	mov    QWORD PTR [rbp-0x68],0x7
   140009bcc:	mov    QWORD PTR [rbp-0x70],r12
   140009bd0:	mov    WORD PTR [rbp-0x80],r12w
   140009bd5:	mov    r8d,0x2
   140009bdb:	lea    rdx,[rip+0x485e]        # 0x14000e440
   140009be2:	lea    rcx,[rbp-0x80]
   140009be6:	call   0x14000a290
   140009beb:	nop
   140009bec:	lea    rdx,[rbp-0x80]
   140009bf0:	lea    rcx,[rsp+0x58]
   140009bf5:	call   0x140009394
   140009bfa:	nop
   140009bfb:	cmp    QWORD PTR [rbp-0x68],r13
   140009bff:	jb     0x140009c0b
   140009c01:	mov    rcx,QWORD PTR [rbp-0x80]
   140009c05:	call   QWORD PTR [rip+0x385d]        # 0x14000d468
   140009c0b:	lea    rax,[rsp+0x58]
   140009c10:	mov    r9,QWORD PTR [rsp+0x58]
   140009c15:	mov    rcx,QWORD PTR [rsp+0x70]
   140009c1a:	cmp    rcx,r13
   140009c1d:	cmovae rax,r9
   140009c21:	mov    rdx,QWORD PTR [rsp+0x68]
   140009c26:	lea    rax,[rax+rdx*2]
   140009c2a:	lea    rbx,[rsp+0x58]
   140009c2f:	cmovae rbx,r9
   140009c33:	jmp    0x140009c3f
   140009c35:	cmp    WORD PTR [rbx],0x7c
   140009c39:	je     0x140009c44
   140009c3b:	add    rbx,0x2
   140009c3f:	cmp    rbx,rax
   140009c42:	jne    0x140009c35
   140009c44:	lea    rax,[rsp+0x58]
   140009c49:	test   r15b,r15b
   140009c4c:	je     0x140009ef1
   140009c52:	cmp    rcx,r13
   140009c55:	cmovae rax,r9
   140009c59:	lea    rax,[rax+rdx*2]
   140009c5d:	cmp    rbx,rax
   140009c60:	jne    0x140009c98
   140009c62:	cmp    rcx,r13
   140009c65:	jb     0x140009c70
   140009c67:	mov    rcx,r9
   140009c6a:	call   QWORD PTR [rip+0x37f8]        # 0x14000d468
   140009c70:	mov    ebx,0x7
   140009c75:	mov    QWORD PTR [rsp+0x70],rbx
   140009c7a:	mov    QWORD PTR [rsp+0x68],r12
   140009c7f:	mov    WORD PTR [rsp+0x58],r12w
   140009c85:	cmp    QWORD PTR [rbp-0x40],r13
   140009c89:	jb     0x14000a009
   140009c8f:	mov    rcx,QWORD PTR [rbp-0x58]
   140009c93:	jmp    0x14000a003
   140009c98:	lea    rdx,[rsp+0x58]
   140009c9d:	cmp    rcx,r13
   140009ca0:	cmovae rdx,r9
   140009ca4:	mov    QWORD PTR [rbp+0x38],0x7
   140009cac:	mov    QWORD PTR [rbp+0x30],r12
   140009cb0:	mov    WORD PTR [rbp+0x20],r12w
   140009cb5:	mov    r8,rbx
   140009cb8:	lea    rcx,[rbp+0x20]
   140009cbc:	call   0x14000a6d4
   140009cc1:	nop
   140009cc2:	mov    QWORD PTR [rbp-0x18],0x7
   140009cca:	mov    QWORD PTR [rbp-0x20],r12
   140009cce:	mov    WORD PTR [rbp-0x30],r12w
   140009cd3:	mov    r8d,0x2
   140009cd9:	lea    rdx,[rip+0x4760]        # 0x14000e440
   140009ce0:	lea    rcx,[rbp-0x30]
   140009ce4:	call   0x14000a290
   140009ce9:	nop
   140009cea:	lea    rdx,[rbp-0x30]
   140009cee:	lea    rcx,[rbp+0x20]
   140009cf2:	call   0x1400094b0
   140009cf7:	nop
   140009cf8:	cmp    QWORD PTR [rbp-0x18],r13
   140009cfc:	jb     0x140009d08
   140009cfe:	mov    rcx,QWORD PTR [rbp-0x30]
   140009d02:	call   QWORD PTR [rip+0x3760]        # 0x14000d468
   140009d08:	mov    rax,QWORD PTR [rbp+0x30]
   140009d0c:	dec    rax
   140009d0f:	cmp    rax,0x7f
   140009d13:	ja     0x140009eda
   140009d19:	lea    rdx,[rbx+0x2]
   140009d1d:	lea    rcx,[rsp+0x58]
   140009d22:	cmp    QWORD PTR [rsp+0x70],r13
   140009d27:	cmovae rcx,QWORD PTR [rsp+0x58]
   140009d2d:	mov    rax,QWORD PTR [rsp+0x68]
   140009d32:	lea    rax,[rcx+rax*2]
   140009d36:	mov    r8,rdx
   140009d39:	cmp    rdx,rax
   140009d3c:	je     0x140009d4e
   140009d3e:	cmp    WORD PTR [r8],0x7c
   140009d43:	je     0x140009d4e
   140009d45:	add    r8,0x2
   140009d49:	cmp    r8,rax
   140009d4c:	jne    0x140009d3e
   140009d4e:	mov    ebx,0x7
   140009d53:	mov    QWORD PTR [rbp-0x68],rbx
   140009d57:	mov    QWORD PTR [rbp-0x70],r12
   140009d5b:	mov    WORD PTR [rbp-0x80],r12w
   140009d60:	lea    rcx,[rbp-0x80]
   140009d64:	call   0x14000a6d4
   140009d69:	nop
   140009d6a:	mov    QWORD PTR [rbp-0x18],rbx
   140009d6e:	mov    QWORD PTR [rbp-0x20],r12
   140009d72:	mov    WORD PTR [rbp-0x30],r12w
   140009d77:	lea    r8d,[rbx-0x5]
   140009d7b:	lea    rdx,[rip+0x46be]        # 0x14000e440
   140009d82:	lea    rcx,[rbp-0x30]
   140009d86:	call   0x14000a290
   140009d8b:	nop
   140009d8c:	lea    rdx,[rbp-0x30]
   140009d90:	lea    rcx,[rbp-0x80]
   140009d94:	call   0x140009394
   140009d99:	nop
   140009d9a:	cmp    QWORD PTR [rbp-0x18],r13
   140009d9e:	jb     0x140009daa
   140009da0:	mov    rcx,QWORD PTR [rbp-0x30]
   140009da4:	call   QWORD PTR [rip+0x36be]        # 0x14000d468
   140009daa:	mov    QWORD PTR [rbp-0x18],rbx
   140009dae:	mov    QWORD PTR [rbp-0x20],r12
   140009db2:	mov    WORD PTR [rbp-0x30],r12w
   140009db7:	mov    r8d,0x2
   140009dbd:	lea    rdx,[rip+0x467c]        # 0x14000e440
   140009dc4:	lea    rcx,[rbp-0x30]
   140009dc8:	call   0x14000a290
   140009dcd:	nop
   140009dce:	lea    rdx,[rbp-0x30]
   140009dd2:	lea    rcx,[rbp-0x80]
   140009dd6:	call   0x1400094b0
   140009ddb:	nop
   140009ddc:	cmp    QWORD PTR [rbp-0x18],r13
   140009de0:	jb     0x140009dec
   140009de2:	mov    rcx,QWORD PTR [rbp-0x30]
   140009de6:	call   QWORD PTR [rip+0x367c]        # 0x14000d468
   140009dec:	mov    rax,QWORD PTR [rbp-0x70]
   140009df0:	dec    rax
   140009df3:	cmp    rax,0x7f
   140009df7:	ja     0x140009e85
   140009dfd:	lea    r8,[rbp-0x80]
   140009e01:	lea    rdx,[rbp+0x20]
   140009e05:	lea    rcx,[rbp-0x30]
   140009e09:	call   0x14000a4ec
   140009e0e:	nop
   140009e0f:	mov    rdx,rax
   140009e12:	mov    rcx,rsi
   140009e15:	call   0x14000a770
   140009e1a:	mov    r8,rax
   140009e1d:	lea    rdx,[rsp+0x48]
   140009e22:	mov    rcx,rsi
   140009e25:	call   0x14000a5b8
   140009e2a:	nop
   140009e2b:	cmp    QWORD PTR [rbp+0x10],r13
   140009e2f:	jb     0x140009e3b
   140009e31:	mov    rcx,QWORD PTR [rbp-0x8]
   140009e35:	call   QWORD PTR [rip+0x362d]        # 0x14000d468
   140009e3b:	mov    QWORD PTR [rbp+0x10],rbx
   140009e3f:	mov    QWORD PTR [rbp+0x8],r12
   140009e43:	mov    WORD PTR [rbp-0x8],r12w
   140009e48:	cmp    QWORD PTR [rbp-0x18],r13
   140009e4c:	jb     0x140009e59
   140009e4e:	mov    rcx,QWORD PTR [rbp-0x30]
   140009e52:	call   QWORD PTR [rip+0x3610]        # 0x14000d468
   140009e58:	nop
   140009e59:	cmp    QWORD PTR [rbp-0x68],r13
   140009e5d:	jb     0x140009e69
   140009e5f:	mov    rcx,QWORD PTR [rbp-0x80]
   140009e63:	call   QWORD PTR [rip+0x35ff]        # 0x14000d468
   140009e69:	mov    QWORD PTR [rbp-0x68],rbx
   140009e6d:	mov    QWORD PTR [rbp-0x70],r12
   140009e71:	mov    WORD PTR [rbp-0x80],r12w
   140009e76:	cmp    QWORD PTR [rbp+0x38],r13
   140009e7a:	jb     0x140009ebf
   140009e7c:	mov    rcx,QWORD PTR [rbp+0x20]
   140009e80:	jmp    0x140009fc3
   140009e85:	cmp    QWORD PTR [rbp-0x68],r13
   140009e89:	jb     0x140009e95
   140009e8b:	mov    rcx,QWORD PTR [rbp-0x80]
   140009e8f:	call   QWORD PTR [rip+0x35d3]        # 0x14000d468
   140009e95:	mov    QWORD PTR [rbp-0x68],rbx
   140009e99:	mov    QWORD PTR [rbp-0x70],r12
   140009e9d:	mov    WORD PTR [rbp-0x80],r12w
   140009ea2:	cmp    QWORD PTR [rbp+0x38],r13
   140009ea6:	jb     0x140009eb2
   140009ea8:	mov    rcx,QWORD PTR [rbp+0x20]
   140009eac:	call   QWORD PTR [rip+0x35b6]        # 0x14000d468
   140009eb2:	mov    QWORD PTR [rbp+0x38],rbx
   140009eb6:	mov    QWORD PTR [rbp+0x30],r12
   140009eba:	mov    WORD PTR [rbp+0x20],r12w
   140009ebf:	cmp    QWORD PTR [rsp+0x70],r13
   140009ec4:	jb     0x140009c75
   140009eca:	mov    rcx,QWORD PTR [rsp+0x58]
   140009ecf:	call   QWORD PTR [rip+0x3593]        # 0x14000d468
   140009ed5:	jmp    0x140009c75
   140009eda:	cmp    QWORD PTR [rbp+0x38],r13
   140009ede:	jb     0x140009eea
   140009ee0:	mov    rcx,QWORD PTR [rbp+0x20]
   140009ee4:	call   QWORD PTR [rip+0x357e]        # 0x14000d468
   140009eea:	mov    ebx,0x7
   140009eef:	jmp    0x140009eb2
   140009ef1:	cmp    rcx,r13
   140009ef4:	cmovae rax,r9
   140009ef8:	lea    r8,[rax+rdx*2]
   140009efc:	lea    rax,[rsp+0x58]
   140009f01:	cmovae rax,r9
   140009f05:	test   rbx,rbx
   140009f08:	jne    0x140009f0f
   140009f0a:	mov    rdx,r12
   140009f0d:	jmp    0x140009f18
   140009f0f:	mov    rdx,rbx
   140009f12:	sub    rdx,rax
   140009f15:	sar    rdx,1
   140009f18:	test   r8,r8
   140009f1b:	jne    0x140009f22
   140009f1d:	mov    r8,r12
   140009f20:	jmp    0x140009f28
   140009f22:	sub    r8,rbx
   140009f25:	sar    r8,1
   140009f28:	lea    rcx,[rsp+0x58]
   140009f2d:	call   0x140006550
   140009f32:	mov    ebx,0x7
   140009f37:	mov    QWORD PTR [rbp-0x18],rbx
   140009f3b:	mov    QWORD PTR [rbp-0x20],r12
   140009f3f:	mov    WORD PTR [rbp-0x30],r12w
   140009f44:	lea    r8d,[rbx-0x5]
   140009f48:	lea    rdx,[rip+0x44f1]        # 0x14000e440
   140009f4f:	lea    rcx,[rbp-0x30]
   140009f53:	call   0x14000a290
   140009f58:	nop
   140009f59:	lea    rdx,[rbp-0x30]
   140009f5d:	lea    rcx,[rsp+0x58]
   140009f62:	call   0x1400094b0
   140009f67:	nop
   140009f68:	cmp    QWORD PTR [rbp-0x18],r13
   140009f6c:	jb     0x140009f78
   140009f6e:	mov    rcx,QWORD PTR [rbp-0x30]
   140009f72:	call   QWORD PTR [rip+0x34f0]        # 0x14000d468
   140009f78:	mov    rax,QWORD PTR [rsp+0x68]
   140009f7d:	dec    rax
   140009f80:	cmp    rax,0x7f
   140009f84:	ja     0x140009ebf
   140009f8a:	lea    rdx,[rsp+0x58]
   140009f8f:	lea    rcx,[rbp-0x30]
   140009f93:	call   0x14000a574
   140009f98:	nop
   140009f99:	mov    rdx,rax
   140009f9c:	mov    rcx,rsi
   140009f9f:	call   0x14000a84c
   140009fa4:	mov    r8,rax
   140009fa7:	lea    rdx,[rsp+0x38]
   140009fac:	mov    rcx,rsi
   140009faf:	call   0x14000a5b8
   140009fb4:	nop
   140009fb5:	cmp    QWORD PTR [rbp-0x18],r13
   140009fb9:	jb     0x140009ebf
   140009fbf:	mov    rcx,QWORD PTR [rbp-0x30]
   140009fc3:	call   QWORD PTR [rip+0x349f]        # 0x14000d468
   140009fc9:	jmp    0x140009ebf
   140009fce:	cmp    rcx,r13
   140009fd1:	jb     0x140009fe6
   140009fd3:	mov    rcx,QWORD PTR [rsp+0x58]
   140009fd8:	call   QWORD PTR [rip+0x348a]        # 0x14000d468
   140009fde:	mov    r9,QWORD PTR [rbp-0x40]
   140009fe2:	mov    r10,QWORD PTR [rbp-0x58]
   140009fe6:	mov    ebx,0x7
   140009feb:	mov    QWORD PTR [rsp+0x70],rbx
   140009ff0:	mov    QWORD PTR [rsp+0x68],r12
   140009ff5:	mov    WORD PTR [rsp+0x58],r12w
   140009ffb:	cmp    r9,r13
   140009ffe:	jb     0x14000a009
   14000a000:	mov    rcx,r10
   14000a003:	call   QWORD PTR [rip+0x345f]        # 0x14000d468
   14000a009:	cmp    rdi,r14
   14000a00c:	jne    0x140009ace
   14000a012:	mov    rax,rsi
   14000a015:	mov    rcx,QWORD PTR [rbp+0x48]
   14000a019:	xor    rcx,rsp
   14000a01c:	call   0x14000b290
   14000a021:	mov    rbx,QWORD PTR [rsp+0x1a0]
   14000a029:	add    rsp,0x150
   14000a030:	pop    r15
   14000a032:	pop    r14
   14000a034:	pop    r13
   14000a036:	pop    r12
   14000a038:	pop    rdi
   14000a039:	pop    rsi
   14000a03a:	pop    rbp
   14000a03b:	ret    
   14000a03c:	int3   
   14000a03d:	int3   
   14000a03e:	int3   
   14000a03f:	int3   
   14000a040:	int3   
   14000a041:	int3   
   14000a042:	int3   
   14000a043:	int3   
   14000a044:	mov    QWORD PTR [rsp+0x8],rbx
   14000a049:	push   rdi
   14000a04a:	sub    rsp,0x20
   14000a04e:	cmp    QWORD PTR [rcx+0x40],0x8
   14000a053:	mov    rbx,rcx
   14000a056:	jb     0x14000a062
   14000a058:	mov    rcx,QWORD PTR [rcx+0x28]
   14000a05c:	call   QWORD PTR [rip+0x3406]        # 0x14000d468
   14000a062:	xor    edi,edi
   14000a064:	mov    QWORD PTR [rbx+0x40],0x7
   14000a06c:	mov    QWORD PTR [rbx+0x38],rdi
   14000a070:	mov    WORD PTR [rbx+0x28],di
   14000a074:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a079:	jb     0x14000a084
   14000a07b:	mov    rcx,QWORD PTR [rbx]
   14000a07e:	call   QWORD PTR [rip+0x33e4]        # 0x14000d468
   14000a084:	mov    QWORD PTR [rbx+0x18],0x7
   14000a08c:	mov    QWORD PTR [rbx+0x10],rdi
   14000a090:	mov    WORD PTR [rbx],di
   14000a093:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a098:	add    rsp,0x20
   14000a09c:	pop    rdi
   14000a09d:	ret    
   14000a09e:	int3   
   14000a09f:	int3   
   14000a0a0:	int3   
   14000a0a1:	int3   
   14000a0a2:	int3   
   14000a0a3:	int3   
   14000a0a4:	int3   
   14000a0a5:	int3   
   14000a0a6:	int3   
   14000a0a7:	int3   
   14000a0a8:	int3   
   14000a0a9:	int3   
   14000a0aa:	int3   
   14000a0ab:	int3   
   14000a0ac:	int3   
   14000a0ad:	int3   
   14000a0ae:	int3   
   14000a0af:	int3   
   14000a0b0:	rex push rbx
   14000a0b2:	sub    rsp,0x30
   14000a0b6:	and    DWORD PTR [rsp+0x20],0x0
   14000a0bb:	mov    rbx,rcx
   14000a0be:	call   0x1400096d4
   14000a0c3:	mov    rax,rbx
   14000a0c6:	add    rsp,0x30
   14000a0ca:	pop    rbx
   14000a0cb:	ret    
   14000a0cc:	int3   
   14000a0cd:	int3   
   14000a0ce:	int3   
   14000a0cf:	int3   
   14000a0d0:	int3   
   14000a0d1:	int3   
   14000a0d2:	int3   
   14000a0d3:	int3   
   14000a0d4:	rex push rbx
   14000a0d6:	sub    rsp,0x30
   14000a0da:	xor    eax,eax
   14000a0dc:	mov    QWORD PTR [rdx+0x18],0x7
   14000a0e4:	mov    QWORD PTR [rdx+0x10],rax
   14000a0e8:	mov    rbx,rdx
   14000a0eb:	mov    WORD PTR [rdx],ax
   14000a0ee:	mov    rdx,rcx
   14000a0f1:	mov    rcx,rbx
   14000a0f4:	mov    DWORD PTR [rsp+0x20],eax
   14000a0f8:	call   0x140006384
   14000a0fd:	mov    rax,rbx
   14000a100:	add    rsp,0x30
   14000a104:	pop    rbx
   14000a105:	ret    
   14000a106:	int3   
   14000a107:	int3   
   14000a108:	int3   
   14000a109:	int3   
   14000a10a:	int3   
   14000a10b:	int3   
   14000a10c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a111:	mov    QWORD PTR [rsp+0x10],rbp
   14000a116:	mov    QWORD PTR [rsp+0x18],rsi
   14000a11b:	push   rdi
   14000a11c:	sub    rsp,0x20
   14000a120:	mov    rsi,QWORD PTR [rcx+0x18]
   14000a124:	mov    rbp,rcx
   14000a127:	test   rsi,rsi
   14000a12a:	je     0x14000a15d
   14000a12c:	mov    rax,QWORD PTR [rsi]
   14000a12f:	cmp    rsi,rcx
   14000a132:	setne  dil
   14000a136:	mov    rbx,QWORD PTR [rax+0x20]
   14000a13a:	mov    rcx,rbx
   14000a13d:	call   QWORD PTR [rip+0x3365]        # 0x14000d4a8
   14000a143:	xor    edx,edx
   14000a145:	mov    rcx,rsi
   14000a148:	call   rbx
   14000a14a:	test   dil,dil
   14000a14d:	je     0x14000a158
   14000a14f:	mov    rcx,rsi
   14000a152:	call   QWORD PTR [rip+0x3310]        # 0x14000d468
   14000a158:	and    QWORD PTR [rbp+0x18],0x0
   14000a15d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a162:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a167:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a16c:	add    rsp,0x20
   14000a170:	pop    rdi
   14000a171:	ret    
   14000a172:	int3   
   14000a173:	int3   
   14000a174:	int3   
   14000a175:	int3   
   14000a176:	int3   
   14000a177:	int3   
   14000a178:	mov    rax,rsp
   14000a17b:	mov    QWORD PTR [rax+0x8],rcx
   14000a17f:	push   rdi
   14000a180:	sub    rsp,0x30
   14000a184:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000a18c:	mov    QWORD PTR [rax+0x10],rbx
   14000a190:	mov    QWORD PTR [rax+0x18],rbp
   14000a194:	mov    QWORD PTR [rax+0x20],rsi
   14000a198:	mov    rdi,rcx
   14000a19b:	mov    rsi,QWORD PTR [rcx]
   14000a19e:	test   rsi,rsi
   14000a1a1:	je     0x14000a1c5
   14000a1a3:	mov    rbx,QWORD PTR [rcx+0x20]
   14000a1a7:	test   rbx,rbx
   14000a1aa:	jne    0x14000a1b2
   14000a1ac:	call   0x14000ae90
   14000a1b1:	int3   
   14000a1b2:	mov    rbx,QWORD PTR [rbx+0x8]
   14000a1b6:	mov    rcx,rbx
   14000a1b9:	call   QWORD PTR [rip+0x32e9]        # 0x14000d4a8
   14000a1bf:	mov    rcx,rsi
   14000a1c2:	call   rbx
   14000a1c4:	nop
   14000a1c5:	lea    rbp,[rdi+0x8]
   14000a1c9:	mov    rsi,QWORD PTR [rbp+0x18]
   14000a1cd:	test   rsi,rsi
   14000a1d0:	je     0x14000a203
   14000a1d2:	cmp    rsi,rbp
   14000a1d5:	setne  dil
   14000a1d9:	mov    rax,QWORD PTR [rsi]
   14000a1dc:	mov    rbx,QWORD PTR [rax+0x20]
   14000a1e0:	mov    rcx,rbx
   14000a1e3:	call   QWORD PTR [rip+0x32bf]        # 0x14000d4a8
   14000a1e9:	xor    edx,edx
   14000a1eb:	mov    rcx,rsi
   14000a1ee:	call   rbx
   14000a1f0:	test   dil,dil
   14000a1f3:	je     0x14000a1fe
   14000a1f5:	mov    rcx,rsi
   14000a1f8:	call   QWORD PTR [rip+0x326a]        # 0x14000d468
   14000a1fe:	and    QWORD PTR [rbp+0x18],0x0
   14000a203:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a208:	mov    rbp,QWORD PTR [rsp+0x50]
   14000a20d:	mov    rsi,QWORD PTR [rsp+0x58]
   14000a212:	add    rsp,0x30
   14000a216:	pop    rdi
   14000a217:	ret    
   14000a218:	int3   
   14000a219:	int3   
   14000a21a:	int3   
   14000a21b:	int3   
   14000a21c:	int3   
   14000a21d:	int3   
   14000a21e:	int3   
   14000a21f:	int3   
   14000a220:	mov    QWORD PTR [rsp+0x8],rbx
   14000a225:	mov    QWORD PTR [rsp+0x10],rbp
   14000a22a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a22f:	push   rdi
   14000a230:	sub    rsp,0x20
   14000a234:	lea    rbp,[rcx+0x8]
   14000a238:	mov    rsi,QWORD PTR [rbp+0x18]
   14000a23c:	test   rsi,rsi
   14000a23f:	je     0x14000a272
   14000a241:	mov    rax,QWORD PTR [rsi]
   14000a244:	cmp    rsi,rbp
   14000a247:	setne  dil
   14000a24b:	mov    rbx,QWORD PTR [rax+0x20]
   14000a24f:	mov    rcx,rbx
   14000a252:	call   QWORD PTR [rip+0x3250]        # 0x14000d4a8
   14000a258:	xor    edx,edx
   14000a25a:	mov    rcx,rsi
   14000a25d:	call   rbx
   14000a25f:	test   dil,dil
   14000a262:	je     0x14000a26d
   14000a264:	mov    rcx,rsi
   14000a267:	call   QWORD PTR [rip+0x31fb]        # 0x14000d468
   14000a26d:	and    QWORD PTR [rbp+0x18],0x0
   14000a272:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a277:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a27c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a281:	add    rsp,0x20
   14000a285:	pop    rdi
   14000a286:	ret    
   14000a287:	int3   
   14000a288:	int3   
   14000a289:	int3   
   14000a28a:	int3   
   14000a28b:	int3   
   14000a28c:	int3   
   14000a28d:	int3   
   14000a28e:	int3   
   14000a28f:	int3   
   14000a290:	mov    rax,rsp
   14000a293:	mov    QWORD PTR [rax+0x8],rbx
   14000a297:	mov    QWORD PTR [rax+0x10],rbp
   14000a29b:	mov    QWORD PTR [rax+0x18],rsi
   14000a29f:	mov    QWORD PTR [rax+0x20],rdi
   14000a2a3:	push   r14
   14000a2a5:	sub    rsp,0x20
   14000a2a9:	xor    ebp,ebp
   14000a2ab:	mov    rdi,r8
   14000a2ae:	mov    rsi,rdx
   14000a2b1:	mov    rbx,rcx
   14000a2b4:	test   rdx,rdx
   14000a2b7:	je     0x14000a30f
   14000a2b9:	cmp    QWORD PTR [rcx+0x18],0x8
   14000a2be:	jb     0x14000a2c5
   14000a2c0:	mov    rax,QWORD PTR [rcx]
   14000a2c3:	jmp    0x14000a2c8
   14000a2c5:	mov    rax,rcx
   14000a2c8:	cmp    rdx,rax
   14000a2cb:	jb     0x14000a30f
   14000a2cd:	cmp    QWORD PTR [rcx+0x18],0x8
   14000a2d2:	jb     0x14000a2d7
   14000a2d4:	mov    rcx,QWORD PTR [rcx]
   14000a2d7:	mov    rax,QWORD PTR [rbx+0x10]
   14000a2db:	lea    rcx,[rcx+rax*2]
   14000a2df:	cmp    rcx,rdx
   14000a2e2:	jbe    0x14000a30f
   14000a2e4:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a2e9:	jb     0x14000a2f0
   14000a2eb:	mov    rax,QWORD PTR [rbx]
   14000a2ee:	jmp    0x14000a2f3
   14000a2f0:	mov    rax,rbx
   14000a2f3:	sub    rsi,rax
   14000a2f6:	mov    r9,r8
   14000a2f9:	sar    rsi,1
   14000a2fc:	mov    rdx,rbx
   14000a2ff:	mov    r8,rsi
   14000a302:	mov    rcx,rbx
   14000a305:	call   0x140006384
   14000a30a:	jmp    0x14000a392
   14000a30f:	movabs rax,0x7ffffffffffffffe
   14000a319:	cmp    r8,rax
   14000a31c:	ja     0x14000a3ad
   14000a322:	cmp    QWORD PTR [rbx+0x18],r8
   14000a326:	jae    0x14000a339
   14000a328:	mov    r8,QWORD PTR [rbx+0x10]
   14000a32c:	mov    rdx,rdi
   14000a32f:	mov    rcx,rbx
   14000a332:	call   0x140006804
   14000a337:	jmp    0x14000a354
   14000a339:	test   r8,r8
   14000a33c:	jne    0x14000a354
   14000a33e:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a343:	mov    QWORD PTR [rbx+0x10],rbp
   14000a347:	jb     0x14000a34e
   14000a349:	mov    rax,QWORD PTR [rbx]
   14000a34c:	jmp    0x14000a351
   14000a34e:	mov    rax,rbx
   14000a351:	mov    WORD PTR [rax],bp
   14000a354:	test   rdi,rdi
   14000a357:	je     0x14000a38f
   14000a359:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a35e:	jb     0x14000a365
   14000a360:	mov    rcx,QWORD PTR [rbx]
   14000a363:	jmp    0x14000a368
   14000a365:	mov    rcx,rbx
   14000a368:	lea    r14,[rdi+rdi*1]
   14000a36c:	mov    rdx,rsi
   14000a36f:	mov    r8,r14
   14000a372:	call   0x14000bcc6
   14000a377:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a37c:	mov    QWORD PTR [rbx+0x10],rdi
   14000a380:	jb     0x14000a387
   14000a382:	mov    rax,QWORD PTR [rbx]
   14000a385:	jmp    0x14000a38a
   14000a387:	mov    rax,rbx
   14000a38a:	mov    WORD PTR [r14+rax*1],bp
   14000a38f:	mov    rax,rbx
   14000a392:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a397:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a39c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a3a1:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a3a6:	add    rsp,0x20
   14000a3aa:	pop    r14
   14000a3ac:	ret    
   14000a3ad:	call   0x140006940
   14000a3b2:	int3   
   14000a3b3:	int3   
   14000a3b4:	int3   
   14000a3b5:	int3   
   14000a3b6:	int3   
   14000a3b7:	int3   
   14000a3b8:	int3   
   14000a3b9:	int3   
   14000a3ba:	int3   
   14000a3bb:	int3   
   14000a3bc:	mov    QWORD PTR [rsp+0x8],rbx
   14000a3c1:	push   rdi
   14000a3c2:	sub    rsp,0x40
   14000a3c6:	and    QWORD PTR [rcx+0x18],0x0
   14000a3cb:	mov    rbx,rcx
   14000a3ce:	mov    rdi,QWORD PTR [rdx+0x18]
   14000a3d2:	test   rdi,rdi
   14000a3d5:	jne    0x14000a3dd
   14000a3d7:	and    QWORD PTR [rcx+0x18],rdi
   14000a3db:	jmp    0x14000a422
   14000a3dd:	cmp    rdi,rdx
   14000a3e0:	jne    0x14000a3fa
   14000a3e2:	lea    rax,[rip+0x37f7]        # 0x14000dbe0
   14000a3e9:	mov    QWORD PTR [rcx],rax
   14000a3ec:	mov    rax,QWORD PTR [rdi+0x8]
   14000a3f0:	mov    QWORD PTR [rcx+0x8],rax
   14000a3f4:	mov    QWORD PTR [rcx+0x18],rcx
   14000a3f8:	jmp    0x14000a422
   14000a3fa:	mov    ecx,0x10
   14000a3ff:	call   0x14000acbc
   14000a404:	mov    rcx,rax
   14000a407:	test   rax,rax
   14000a40a:	je     0x14000a430
   14000a40c:	lea    rax,[rip+0x37cd]        # 0x14000dbe0
   14000a413:	mov    QWORD PTR [rcx],rax
   14000a416:	mov    rax,QWORD PTR [rdi+0x8]
   14000a41a:	mov    QWORD PTR [rcx+0x8],rax
   14000a41e:	mov    QWORD PTR [rbx+0x18],rcx
   14000a422:	mov    rax,rbx
   14000a425:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a42a:	add    rsp,0x40
   14000a42e:	pop    rdi
   14000a42f:	ret    
   14000a430:	lea    rcx,[rsp+0x20]
   14000a435:	call   0x140005514
   14000a43a:	lea    rdx,[rip+0x653f]        # 0x140010980
   14000a441:	lea    rcx,[rsp+0x20]
   14000a446:	call   0x14000b740
   14000a44b:	int3   
   14000a44c:	int3   
   14000a44d:	int3   
   14000a44e:	int3   
   14000a44f:	int3   
   14000a450:	int3   
   14000a451:	int3   
   14000a452:	int3   
   14000a453:	int3   
   14000a454:	mov    QWORD PTR [rsp+0x8],rbx
   14000a459:	push   rdi
   14000a45a:	sub    rsp,0x40
   14000a45e:	and    QWORD PTR [rcx+0x18],0x0
   14000a463:	mov    rbx,rcx
   14000a466:	mov    rdi,QWORD PTR [rdx+0x18]
   14000a46a:	test   rdi,rdi
   14000a46d:	jne    0x14000a475
   14000a46f:	and    QWORD PTR [rcx+0x18],rdi
   14000a473:	jmp    0x14000a4ba
   14000a475:	cmp    rdi,rdx
   14000a478:	jne    0x14000a492
   14000a47a:	lea    rax,[rip+0x372f]        # 0x14000dbb0
   14000a481:	mov    QWORD PTR [rcx],rax
   14000a484:	mov    rax,QWORD PTR [rdi+0x8]
   14000a488:	mov    QWORD PTR [rcx+0x8],rax
   14000a48c:	mov    QWORD PTR [rcx+0x18],rcx
   14000a490:	jmp    0x14000a4ba
   14000a492:	mov    ecx,0x10
   14000a497:	call   0x14000acbc
   14000a49c:	mov    rcx,rax
   14000a49f:	test   rax,rax
   14000a4a2:	je     0x14000a4c8
   14000a4a4:	lea    rax,[rip+0x3705]        # 0x14000dbb0
   14000a4ab:	mov    QWORD PTR [rcx],rax
   14000a4ae:	mov    rax,QWORD PTR [rdi+0x8]
   14000a4b2:	mov    QWORD PTR [rcx+0x8],rax
   14000a4b6:	mov    QWORD PTR [rbx+0x18],rcx
   14000a4ba:	mov    rax,rbx
   14000a4bd:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a4c2:	add    rsp,0x40
   14000a4c6:	pop    rdi
   14000a4c7:	ret    
   14000a4c8:	lea    rcx,[rsp+0x20]
   14000a4cd:	call   0x140005514
   14000a4d2:	lea    rdx,[rip+0x64a7]        # 0x140010980
   14000a4d9:	lea    rcx,[rsp+0x20]
   14000a4de:	call   0x14000b740
   14000a4e3:	int3   
   14000a4e4:	int3   
   14000a4e5:	int3   
   14000a4e6:	int3   
   14000a4e7:	int3   
   14000a4e8:	int3   
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	mov    rax,rsp
   14000a4ef:	mov    QWORD PTR [rax+0x8],rcx
   14000a4f3:	push   r14
   14000a4f5:	sub    rsp,0x30
   14000a4f9:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000a501:	mov    QWORD PTR [rax+0x10],rbx
   14000a505:	mov    QWORD PTR [rax+0x18],rdi
   14000a509:	mov    rbx,r8
   14000a50c:	mov    rdi,rcx
   14000a50f:	xor    r14d,r14d
   14000a512:	mov    DWORD PTR [rsp+0x20],r14d
   14000a517:	mov    QWORD PTR [rcx+0x18],0x7
   14000a51f:	mov    QWORD PTR [rcx+0x10],r14
   14000a523:	mov    WORD PTR [rcx],r14w
   14000a527:	or     r9,0xffffffffffffffff
   14000a52b:	xor    r8d,r8d
   14000a52e:	call   0x140006384
   14000a533:	nop
   14000a534:	lea    rcx,[rdi+0x28]
   14000a538:	mov    QWORD PTR [rcx+0x18],0x7
   14000a540:	mov    QWORD PTR [rcx+0x10],r14
   14000a544:	mov    WORD PTR [rcx],r14w
   14000a548:	or     r9,0xffffffffffffffff
   14000a54c:	xor    r8d,r8d
   14000a54f:	mov    rdx,rbx
   14000a552:	call   0x140006384
   14000a557:	nop
   14000a558:	mov    rax,rdi
   14000a55b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a560:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a565:	add    rsp,0x30
   14000a569:	pop    r14
   14000a56b:	ret    
   14000a56c:	int3   
   14000a56d:	int3   
   14000a56e:	int3   
   14000a56f:	int3   
   14000a570:	int3   
   14000a571:	int3   
   14000a572:	int3   
   14000a573:	int3   
   14000a574:	rex push rbx
   14000a576:	sub    rsp,0x30
   14000a57a:	xor    eax,eax
   14000a57c:	mov    QWORD PTR [rcx+0x18],0x7
   14000a584:	mov    QWORD PTR [rcx+0x10],rax
   14000a588:	or     r9,0xffffffffffffffff
   14000a58c:	xor    r8d,r8d
   14000a58f:	mov    WORD PTR [rcx],ax
   14000a592:	mov    rbx,rcx
   14000a595:	mov    DWORD PTR [rsp+0x20],eax
   14000a599:	call   0x140006384
   14000a59e:	lea    rax,[rip+0x3eab]        # 0x14000e450
   14000a5a5:	mov    QWORD PTR [rbx+0x28],rax
   14000a5a9:	mov    rax,rbx
   14000a5ac:	add    rsp,0x30
   14000a5b0:	pop    rbx
   14000a5b1:	ret    
   14000a5b2:	int3   
   14000a5b3:	int3   
   14000a5b4:	int3   
   14000a5b5:	int3   
   14000a5b6:	int3   
   14000a5b7:	int3   
   14000a5b8:	mov    QWORD PTR [rsp+0x10],rbx
   14000a5bd:	mov    QWORD PTR [rsp+0x18],rbp
   14000a5c2:	push   rsi
   14000a5c3:	push   rdi
   14000a5c4:	push   r12
   14000a5c6:	push   r14
   14000a5c8:	push   r15
   14000a5ca:	sub    rsp,0x30
   14000a5ce:	mov    rdi,QWORD PTR [rcx+0x8]
   14000a5d2:	lea    r12,[r8+0x18]
   14000a5d6:	mov    r14,r8
   14000a5d9:	mov    rsi,rdx
   14000a5dc:	mov    r15,rcx
   14000a5df:	mov    bpl,0x1
   14000a5e2:	mov    r11,QWORD PTR [rdi+0x8]
   14000a5e6:	jmp    0x14000a607
   14000a5e8:	lea    r8,[r11+0x18]
   14000a5ec:	mov    rdx,r12
   14000a5ef:	mov    rdi,r11
   14000a5f2:	call   0x140007b94
   14000a5f7:	mov    bpl,al
   14000a5fa:	test   al,al
   14000a5fc:	je     0x14000a603
   14000a5fe:	mov    r11,QWORD PTR [r11]
   14000a601:	jmp    0x14000a607
   14000a603:	mov    r11,QWORD PTR [r11+0x10]
   14000a607:	cmp    BYTE PTR [r11+0x69],0x0
   14000a60c:	je     0x14000a5e8
   14000a60e:	mov    rbx,rdi
   14000a611:	test   bpl,bpl
   14000a614:	je     0x14000a687
   14000a616:	mov    rax,QWORD PTR [r15+0x8]
   14000a61a:	cmp    rdi,QWORD PTR [rax]
   14000a61d:	jne    0x14000a643
   14000a61f:	mov    r8b,0x1
   14000a622:	mov    r9,rdi
   14000a625:	mov    QWORD PTR [rsp+0x20],r14
   14000a62a:	lea    rdx,[rsp+0x60]
   14000a62f:	mov    rcx,r15
   14000a632:	call   0x140007c08
   14000a637:	mov    BYTE PTR [rsi+0x8],0x1
   14000a63b:	mov    rcx,QWORD PTR [rax]
   14000a63e:	mov    QWORD PTR [rsi],rcx
   14000a641:	jmp    0x14000a6b4
   14000a643:	cmp    BYTE PTR [rdi+0x69],0x0
   14000a647:	je     0x14000a64f
   14000a649:	mov    rbx,QWORD PTR [rdi+0x10]
   14000a64d:	jmp    0x14000a687
   14000a64f:	mov    rax,QWORD PTR [rdi]
   14000a652:	cmp    BYTE PTR [rax+0x69],0x0
   14000a656:	jne    0x14000a667
   14000a658:	mov    rbx,rax
   14000a65b:	mov    rax,QWORD PTR [rax+0x10]
   14000a65f:	cmp    BYTE PTR [rax+0x69],0x0
   14000a663:	je     0x14000a658
   14000a665:	jmp    0x14000a687
   14000a667:	mov    rax,QWORD PTR [rdi+0x8]
   14000a66b:	jmp    0x14000a679
   14000a66d:	cmp    rbx,QWORD PTR [rax]
   14000a670:	jne    0x14000a67f
   14000a672:	mov    rbx,rax
   14000a675:	mov    rax,QWORD PTR [rax+0x8]
   14000a679:	cmp    BYTE PTR [rax+0x69],0x0
   14000a67d:	je     0x14000a66d
   14000a67f:	cmp    BYTE PTR [rbx+0x69],0x0
   14000a683:	cmove  rbx,rax
   14000a687:	lea    rdx,[rbx+0x18]
   14000a68b:	mov    r8,r12
   14000a68e:	call   0x140007b94
   14000a693:	test   al,al
   14000a695:	je     0x14000a69c
   14000a697:	mov    r8b,bpl
   14000a69a:	jmp    0x14000a622
   14000a69c:	mov    rdx,r12
   14000a69f:	call   0x1400072f4
   14000a6a4:	mov    rcx,r14
   14000a6a7:	call   QWORD PTR [rip+0x2dbb]        # 0x14000d468
   14000a6ad:	mov    QWORD PTR [rsi],rbx
   14000a6b0:	mov    BYTE PTR [rsi+0x8],0x0
   14000a6b4:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a6b9:	mov    rax,rsi
   14000a6bc:	mov    rbp,QWORD PTR [rsp+0x70]
   14000a6c1:	add    rsp,0x30
   14000a6c5:	pop    r15
   14000a6c7:	pop    r14
   14000a6c9:	pop    r12
   14000a6cb:	pop    rdi
   14000a6cc:	pop    rsi
   14000a6cd:	ret    
   14000a6ce:	int3   
   14000a6cf:	int3   
   14000a6d0:	int3   
   14000a6d1:	int3   
   14000a6d2:	int3   
   14000a6d3:	int3   
   14000a6d4:	mov    rax,rsp
   14000a6d7:	mov    QWORD PTR [rax+0x18],r8
   14000a6db:	mov    QWORD PTR [rax+0x10],rdx
   14000a6df:	mov    QWORD PTR [rax+0x8],rcx
   14000a6e3:	push   rdi
   14000a6e4:	sub    rsp,0x30
   14000a6e8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000a6f0:	mov    QWORD PTR [rax+0x20],rbx
   14000a6f4:	mov    rax,r8
   14000a6f7:	mov    rbx,rcx
   14000a6fa:	sub    rax,rdx
   14000a6fd:	sar    rax,1
   14000a700:	mov    rdi,QWORD PTR [rcx+0x10]
   14000a704:	cmp    rdi,rax
   14000a707:	ja     0x14000a73c
   14000a709:	cmp    QWORD PTR [rcx+0x18],rax
   14000a70d:	je     0x14000a73c
   14000a70f:	mov    r8b,0x1
   14000a712:	mov    rdx,rax
   14000a715:	call   0x1400065f0
   14000a71a:	xor    ecx,ecx
   14000a71c:	test   al,al
   14000a71e:	je     0x14000a737
   14000a720:	mov    QWORD PTR [rbx+0x10],rdi
   14000a724:	cmp    QWORD PTR [rbx+0x18],0x8
   14000a729:	jb     0x14000a730
   14000a72b:	mov    rax,QWORD PTR [rbx]
   14000a72e:	jmp    0x14000a733
   14000a730:	mov    rax,rbx
   14000a733:	mov    WORD PTR [rax+rdi*2],cx
   14000a737:	mov    rdx,QWORD PTR [rsp+0x48]
   14000a73c:	cmp    rdx,QWORD PTR [rsp+0x50]
   14000a741:	je     0x14000a75f
   14000a743:	movzx  r8d,WORD PTR [rdx]
   14000a747:	mov    rcx,rbx
   14000a74a:	call   0x1400079a8
   14000a74f:	mov    rdx,QWORD PTR [rsp+0x48]
   14000a754:	add    rdx,0x2
   14000a758:	mov    QWORD PTR [rsp+0x48],rdx
   14000a75d:	jmp    0x14000a73c
   14000a75f:	mov    rbx,QWORD PTR [rsp+0x58]
   14000a764:	add    rsp,0x30
   14000a768:	pop    rdi
   14000a769:	ret    
   14000a76a:	int3   
   14000a76b:	int3   
   14000a76c:	int3   
   14000a76d:	int3   
   14000a76e:	int3   
   14000a76f:	int3   
   14000a770:	rex push rsi
   14000a772:	push   rdi
   14000a773:	push   r14
   14000a775:	sub    rsp,0x50
   14000a779:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a782:	mov    QWORD PTR [rsp+0x70],rbx
   14000a787:	mov    rsi,rdx
   14000a78a:	mov    rbx,rcx
   14000a78d:	mov    ecx,0x70
   14000a792:	call   0x14000acbc
   14000a797:	mov    rdi,rax
   14000a79a:	mov    QWORD PTR [rsp+0x80],rax
   14000a7a2:	xor    r14d,r14d
   14000a7a5:	test   rax,rax
   14000a7a8:	je     0x14000a81b
   14000a7aa:	mov    r8,QWORD PTR [rbx+0x8]
   14000a7ae:	mov    QWORD PTR [rax],r8
   14000a7b1:	mov    r8,QWORD PTR [rbx+0x8]
   14000a7b5:	mov    QWORD PTR [rax+0x8],r8
   14000a7b9:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a7bd:	mov    QWORD PTR [rax+0x10],rcx
   14000a7c1:	mov    WORD PTR [rax+0x68],r14w
   14000a7c6:	lea    rbx,[rax+0x18]
   14000a7ca:	mov    QWORD PTR [rsp+0x88],rbx
   14000a7d2:	mov    QWORD PTR [rsp+0x28],rbx
   14000a7d7:	test   rbx,rbx
   14000a7da:	je     0x14000a816
   14000a7dc:	mov    QWORD PTR [rbx+0x18],0x7
   14000a7e4:	mov    QWORD PTR [rbx+0x10],r14
   14000a7e8:	mov    WORD PTR [rbx],r14w
   14000a7ec:	mov    rdx,rsi
   14000a7ef:	mov    rcx,rbx
   14000a7f2:	call   0x1400062e4
   14000a7f7:	nop
   14000a7f8:	lea    rcx,[rbx+0x28]
   14000a7fc:	mov    QWORD PTR [rcx+0x18],0x7
   14000a804:	mov    QWORD PTR [rcx+0x10],r14
   14000a808:	mov    WORD PTR [rcx],r14w
   14000a80c:	lea    rdx,[rsi+0x28]
   14000a810:	call   0x1400062e4
   14000a815:	nop
   14000a816:	mov    rax,rdi
   14000a819:	jmp    0x14000a837
   14000a81b:	lea    rcx,[rsp+0x30]
   14000a820:	call   0x140005514
   14000a825:	lea    rdx,[rip+0x6154]        # 0x140010980
   14000a82c:	lea    rcx,[rsp+0x30]
   14000a831:	call   0x14000b740
   14000a836:	int3   
   14000a837:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a83c:	add    rsp,0x50
   14000a840:	pop    r14
   14000a842:	pop    rdi
   14000a843:	pop    rsi
   14000a844:	ret    
   14000a845:	int3   
   14000a846:	int3   
   14000a847:	int3   
   14000a848:	int3   
   14000a849:	int3   
   14000a84a:	int3   
   14000a84b:	int3   
   14000a84c:	rex push rsi
   14000a84e:	push   rdi
   14000a84f:	push   r14
   14000a851:	sub    rsp,0x50
   14000a855:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a85e:	mov    QWORD PTR [rsp+0x70],rbx
   14000a863:	mov    rsi,rdx
   14000a866:	mov    rbx,rcx
   14000a869:	mov    ecx,0x70
   14000a86e:	call   0x14000acbc
   14000a873:	mov    rdi,rax
   14000a876:	mov    QWORD PTR [rsp+0x80],rax
   14000a87e:	xor    r14d,r14d
   14000a881:	test   rax,rax
   14000a884:	je     0x14000a905
   14000a886:	mov    r8,QWORD PTR [rbx+0x8]
   14000a88a:	mov    QWORD PTR [rax],r8
   14000a88d:	mov    r8,QWORD PTR [rbx+0x8]
   14000a891:	mov    QWORD PTR [rax+0x8],r8
   14000a895:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a899:	mov    QWORD PTR [rax+0x10],rcx
   14000a89d:	mov    WORD PTR [rax+0x68],r14w
   14000a8a2:	lea    rbx,[rax+0x18]
   14000a8a6:	mov    QWORD PTR [rsp+0x88],rbx
   14000a8ae:	mov    QWORD PTR [rsp+0x28],rbx
   14000a8b3:	test   rbx,rbx
   14000a8b6:	je     0x14000a900
   14000a8b8:	mov    QWORD PTR [rbx+0x18],0x7
   14000a8c0:	mov    QWORD PTR [rbx+0x10],r14
   14000a8c4:	mov    WORD PTR [rbx],r14w
   14000a8c8:	mov    rdx,rsi
   14000a8cb:	mov    rcx,rbx
   14000a8ce:	call   0x1400062e4
   14000a8d3:	nop
   14000a8d4:	mov    rdx,QWORD PTR [rsi+0x28]
   14000a8d8:	lea    rcx,[rbx+0x28]
   14000a8dc:	mov    QWORD PTR [rcx+0x18],0x7
   14000a8e4:	mov    QWORD PTR [rcx+0x10],r14
   14000a8e8:	mov    WORD PTR [rcx],r14w
   14000a8ec:	or     r8,0xffffffffffffffff
   14000a8f0:	inc    r8
   14000a8f3:	cmp    WORD PTR [rdx+r8*2],r14w
   14000a8f8:	jne    0x14000a8f0
   14000a8fa:	call   0x14000a290
   14000a8ff:	nop
   14000a900:	mov    rax,rdi
   14000a903:	jmp    0x14000a921
   14000a905:	lea    rcx,[rsp+0x30]
   14000a90a:	call   0x140005514
   14000a90f:	lea    rdx,[rip+0x606a]        # 0x140010980
   14000a916:	lea    rcx,[rsp+0x30]
   14000a91b:	call   0x14000b740
   14000a920:	int3   
   14000a921:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a926:	add    rsp,0x50
   14000a92a:	pop    r14
   14000a92c:	pop    rdi
   14000a92d:	pop    rsi
   14000a92e:	ret    
   14000a92f:	int3   
   14000a930:	int3   
   14000a931:	int3   
   14000a932:	int3   
   14000a933:	int3   
   14000a934:	int3   
   14000a935:	int3   
   14000a936:	int3   
   14000a937:	int3   
   14000a938:	int3   
   14000a939:	int3   
   14000a93a:	int3   
   14000a93b:	int3   
   14000a93c:	int3   
   14000a93d:	int3   
   14000a93e:	int3   
   14000a93f:	int3   
   14000a940:	rex push rbx
   14000a942:	sub    rsp,0x40
   14000a946:	mov    rbx,rcx
   14000a949:	test   rdx,rdx
   14000a94c:	jne    0x14000a95e
   14000a94e:	lea    ecx,[rdx+0x10]
   14000a951:	call   0x14000acbc
   14000a956:	mov    rdx,rax
   14000a959:	test   rax,rax
   14000a95c:	je     0x14000a979
   14000a95e:	lea    rax,[rip+0x327b]        # 0x14000dbe0
   14000a965:	mov    QWORD PTR [rdx],rax
   14000a968:	mov    rax,QWORD PTR [rbx+0x8]
   14000a96c:	mov    QWORD PTR [rdx+0x8],rax
   14000a970:	mov    rax,rdx
   14000a973:	add    rsp,0x40
   14000a977:	pop    rbx
   14000a978:	ret    
   14000a979:	lea    rcx,[rsp+0x20]
   14000a97e:	call   0x140005514
   14000a983:	lea    rdx,[rip+0x5ff6]        # 0x140010980
   14000a98a:	lea    rcx,[rsp+0x20]
   14000a98f:	call   0x14000b740
   14000a994:	int3   
   14000a995:	int3   
   14000a996:	int3   
   14000a997:	int3   
   14000a998:	int3   
   14000a999:	int3   
   14000a99a:	int3   
   14000a99b:	int3   
   14000a99c:	int3   
   14000a99d:	int3   
   14000a99e:	int3   
   14000a99f:	int3   
   14000a9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a9a5:	push   rdi
   14000a9a6:	sub    rsp,0x20
   14000a9aa:	mov    rbx,QWORD PTR [rcx+0x8]
   14000a9ae:	mov    rdi,rdx
   14000a9b1:	mov    rcx,rbx
   14000a9b4:	call   QWORD PTR [rip+0x2aee]        # 0x14000d4a8
   14000a9ba:	mov    rcx,rdi
   14000a9bd:	mov    rax,rbx
   14000a9c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a9c5:	add    rsp,0x20
   14000a9c9:	pop    rdi
   14000a9ca:	rex.W jmp rax
   14000a9cd:	int3   
   14000a9ce:	int3   
   14000a9cf:	int3   
   14000a9d0:	int3   
   14000a9d1:	int3   
   14000a9d2:	int3   
   14000a9d3:	int3   
   14000a9d4:	int3   
   14000a9d5:	int3   
   14000a9d6:	int3   
   14000a9d7:	int3   
   14000a9d8:	int3   
   14000a9d9:	int3   
   14000a9da:	int3   
   14000a9db:	int3   
   14000a9dc:	int3   
   14000a9dd:	int3   
   14000a9de:	int3   
   14000a9df:	int3   
   14000a9e0:	lea    rax,[rip+0x7a09]        # 0x1400123f0
   14000a9e7:	ret    
   14000a9e8:	int3   
   14000a9e9:	int3   
   14000a9ea:	int3   
   14000a9eb:	int3   
   14000a9ec:	int3   
   14000a9ed:	int3   
   14000a9ee:	int3   
   14000a9ef:	int3   
   14000a9f0:	rex push rbx
   14000a9f2:	sub    rsp,0x40
   14000a9f6:	mov    rbx,rcx
   14000a9f9:	test   rdx,rdx
   14000a9fc:	jne    0x14000aa0e
   14000a9fe:	lea    ecx,[rdx+0x10]
   14000aa01:	call   0x14000acbc
   14000aa06:	mov    rdx,rax
   14000aa09:	test   rax,rax
   14000aa0c:	je     0x14000aa29
   14000aa0e:	lea    rax,[rip+0x319b]        # 0x14000dbb0
   14000aa15:	mov    QWORD PTR [rdx],rax
   14000aa18:	mov    rax,QWORD PTR [rbx+0x8]
   14000aa1c:	mov    QWORD PTR [rdx+0x8],rax
   14000aa20:	mov    rax,rdx
   14000aa23:	add    rsp,0x40
   14000aa27:	pop    rbx
   14000aa28:	ret    
   14000aa29:	lea    rcx,[rsp+0x20]
   14000aa2e:	call   0x140005514
   14000aa33:	lea    rdx,[rip+0x5f46]        # 0x140010980
   14000aa3a:	lea    rcx,[rsp+0x20]
   14000aa3f:	call   0x14000b740
   14000aa44:	int3   
   14000aa45:	int3   
   14000aa46:	int3   
   14000aa47:	int3   
   14000aa48:	int3   
   14000aa49:	int3   
   14000aa4a:	int3   
   14000aa4b:	int3   
   14000aa4c:	int3   
   14000aa4d:	int3   
   14000aa4e:	int3   
   14000aa4f:	int3   
   14000aa50:	lea    rax,[rip+0x7979]        # 0x1400123d0
   14000aa57:	ret    
   14000aa58:	int3   
   14000aa59:	int3   
   14000aa5a:	int3   
   14000aa5b:	int3   
   14000aa5c:	int3   
   14000aa5d:	int3   
   14000aa5e:	int3   
   14000aa5f:	int3   
   14000aa60:	mov    DWORD PTR [rip+0x807a],ecx        # 0x140012ae0
   14000aa66:	mov    eax,0x1
   14000aa6b:	ret    
   14000aa6c:	int3   
   14000aa6d:	int3   
   14000aa6e:	int3   
   14000aa6f:	int3   
   14000aa70:	int3   
   14000aa71:	int3   
   14000aa72:	int3   
   14000aa73:	int3   
   14000aa74:	int3   
   14000aa75:	int3   
   14000aa76:	int3   
   14000aa77:	int3   
   14000aa78:	int3   
   14000aa79:	int3   
   14000aa7a:	int3   
   14000aa7b:	int3   
   14000aa7c:	int3   
   14000aa7d:	int3   
   14000aa7e:	int3   
   14000aa7f:	int3   
   14000aa80:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa85:	push   rsi
   14000aa86:	sub    rsp,0x150
   14000aa8d:	mov    rax,QWORD PTR [rip+0x757c]        # 0x140012010
   14000aa94:	xor    rax,rsp
   14000aa97:	mov    QWORD PTR [rsp+0x140],rax
   14000aa9f:	mov    al,BYTE PTR [rip+0x8053]        # 0x140012af8
   14000aaa5:	lea    rsi,[rip+0x8204]        # 0x140012cb0
   14000aaac:	test   al,al
   14000aaae:	jne    0x14000ab64
   14000aab4:	mov    ebx,0x40
   14000aab9:	xor    edx,edx
   14000aabb:	mov    r8d,ebx
   14000aabe:	mov    rcx,rsi
   14000aac1:	call   0x14000b71c
   14000aac6:	and    QWORD PTR [rsp+0x20],0x0
   14000aacc:	lea    r8,[rsp+0x20]
   14000aad1:	lea    rdx,[rip+0xffffffffffffff88]        # 0x14000aa60
   14000aad8:	lea    ecx,[rbx-0x3a]
   14000aadb:	call   QWORD PTR [rip+0x267f]        # 0x14000d160
   14000aae1:	test   eax,eax
   14000aae3:	je     0x14000ab5d
   14000aae5:	mov    rcx,QWORD PTR [rsp+0x20]
   14000aaea:	lea    rdx,[rsp+0x30]
   14000aaef:	mov    r8d,0x104
   14000aaf5:	call   QWORD PTR [rip+0x2655]        # 0x14000d150
   14000aafb:	test   eax,eax
   14000aafd:	je     0x14000ab5d
   14000aaff:	lea    rcx,[rsp+0x30]
   14000ab04:	or     rax,0xffffffffffffffff
   14000ab08:	inc    rax
   14000ab0b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000ab0f:	jne    0x14000ab08
   14000ab11:	lea    rdx,[rsp+0x30]
   14000ab16:	add    rdx,rax
   14000ab19:	jmp    0x14000ab24
   14000ab1b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000ab1f:	je     0x14000ab2e
   14000ab21:	dec    rdx
   14000ab24:	lea    rax,[rsp+0x30]
   14000ab29:	cmp    rdx,rax
   14000ab2c:	ja     0x14000ab1b
   14000ab2e:	mov    rcx,rsi
   14000ab31:	sub    rdx,rsi
   14000ab34:	lea    rax,[rbx+0x7fffffbe]
   14000ab3b:	test   rax,rax
   14000ab3e:	je     0x14000ab52
   14000ab40:	mov    al,BYTE PTR [rdx+rcx*1]
   14000ab43:	test   al,al
   14000ab45:	je     0x14000ab52
   14000ab47:	mov    BYTE PTR [rcx],al
   14000ab49:	inc    rcx
   14000ab4c:	sub    rbx,0x1
   14000ab50:	jne    0x14000ab34
   14000ab52:	test   rbx,rbx
   14000ab55:	jne    0x14000ab5a
   14000ab57:	dec    rcx
   14000ab5a:	mov    BYTE PTR [rcx],0x0
   14000ab5d:	mov    BYTE PTR [rip+0x7f94],0x1        # 0x140012af8
   14000ab64:	mov    rax,rsi
   14000ab67:	mov    rcx,QWORD PTR [rsp+0x140]
   14000ab6f:	xor    rcx,rsp
   14000ab72:	call   0x14000b290
   14000ab77:	mov    rbx,QWORD PTR [rsp+0x160]
   14000ab7f:	add    rsp,0x150
   14000ab86:	pop    rsi
   14000ab87:	ret    
   14000ab88:	int3   
   14000ab89:	int3   
   14000ab8a:	int3   
   14000ab8b:	int3   
   14000ab8c:	int3   
   14000ab8d:	int3   
   14000ab8e:	int3   
   14000ab8f:	int3   
   14000ab90:	rex push rbx
   14000ab92:	sub    rsp,0x20
   14000ab96:	lea    rcx,[rip+0x38bb]        # 0x14000e458
   14000ab9d:	call   QWORD PTR [rip+0x258d]        # 0x14000d130
   14000aba3:	test   rax,rax
   14000aba6:	je     0x14000abcb
   14000aba8:	lea    rdx,[rip+0x38c1]        # 0x14000e470
   14000abaf:	mov    rcx,rax
   14000abb2:	call   QWORD PTR [rip+0x25b0]        # 0x14000d168
   14000abb8:	mov    rbx,rax
   14000abbb:	test   rax,rax
   14000abbe:	je     0x14000abcb
   14000abc0:	mov    rcx,rax
   14000abc3:	call   QWORD PTR [rip+0x28df]        # 0x14000d4a8
   14000abc9:	call   rbx
   14000abcb:	add    rsp,0x20
   14000abcf:	pop    rbx
   14000abd0:	ret    
   14000abd1:	int3   
   14000abd2:	int3   
   14000abd3:	int3   
   14000abd4:	int3   
   14000abd5:	int3   
   14000abd6:	int3   
   14000abd7:	int3   
   14000abd8:	int3   
   14000abd9:	int3   
   14000abda:	int3   
   14000abdb:	int3   
   14000abdc:	int3   
   14000abdd:	int3   
   14000abde:	int3   
   14000abdf:	int3   
   14000abe0:	mov    QWORD PTR [rsp+0x8],rbx
   14000abe5:	mov    QWORD PTR [rsp+0x10],rsi
   14000abea:	push   rdi
   14000abeb:	sub    rsp,0x20
   14000abef:	mov    rdi,QWORD PTR [rip+0x7efa]        # 0x140012af0
   14000abf6:	xor    ebx,ebx
   14000abf8:	mov    esi,ecx
   14000abfa:	test   rdi,rdi
   14000abfd:	jne    0x14000ac46
   14000abff:	mov    rax,QWORD PTR [rip+0x7ee2]        # 0x140012ae8
   14000ac06:	test   rax,rax
   14000ac09:	jne    0x14000ac27
   14000ac0b:	xor    edx,edx
   14000ac0d:	lea    rcx,[rip+0x3844]        # 0x14000e458
   14000ac14:	mov    r8d,0x800
   14000ac1a:	call   QWORD PTR [rip+0x2528]        # 0x14000d148
   14000ac20:	mov    QWORD PTR [rip+0x7ec1],rax        # 0x140012ae8
   14000ac27:	lea    rdx,[rip+0x3862]        # 0x14000e490
   14000ac2e:	mov    rcx,rax
   14000ac31:	call   QWORD PTR [rip+0x2531]        # 0x14000d168
   14000ac37:	mov    QWORD PTR [rip+0x7eb2],rax        # 0x140012af0
   14000ac3e:	mov    rdi,rax
   14000ac41:	test   rax,rax
   14000ac44:	je     0x14000ac55
   14000ac46:	mov    rcx,rdi
   14000ac49:	call   QWORD PTR [rip+0x2859]        # 0x14000d4a8
   14000ac4f:	mov    ecx,esi
   14000ac51:	call   rdi
   14000ac53:	mov    ebx,eax
   14000ac55:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ac5a:	mov    eax,ebx
   14000ac5c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ac61:	add    rsp,0x20
   14000ac65:	pop    rdi
   14000ac66:	ret    
   14000ac67:	int3   
   14000ac68:	int3   
   14000ac69:	int3   
   14000ac6a:	int3   
   14000ac6b:	int3   
   14000ac6c:	int3   
   14000ac6d:	int3   
   14000ac6e:	int3   
   14000ac6f:	int3   
   14000ac70:	jmp    0x14000acbc
   14000ac75:	int3   
   14000ac76:	int3   
   14000ac77:	int3   
   14000ac78:	int3   
   14000ac79:	int3   
   14000ac7a:	int3   
   14000ac7b:	int3   
   14000ac7c:	rex push rbx
   14000ac7e:	sub    rsp,0x20
   14000ac82:	lea    rax,[rip+0x2a47]        # 0x14000d6d0
   14000ac89:	mov    r8d,0x1
   14000ac8f:	lea    rdx,[rsp+0x30]
   14000ac94:	mov    QWORD PTR [rsp+0x30],rax
   14000ac99:	mov    rbx,rcx
   14000ac9c:	call   0x14000b728
   14000aca1:	lea    rax,[rip+0x2d88]        # 0x14000da30
   14000aca8:	mov    QWORD PTR [rbx],rax
   14000acab:	mov    rax,rbx
   14000acae:	add    rsp,0x20
   14000acb2:	pop    rbx
   14000acb3:	ret    
   14000acb4:	int3   
   14000acb5:	int3   
   14000acb6:	int3   
   14000acb7:	int3   
   14000acb8:	int3   
   14000acb9:	int3   
   14000acba:	int3   
   14000acbb:	int3   
   14000acbc:	rex push rbx
   14000acbe:	sub    rsp,0x40
   14000acc2:	mov    rbx,rcx
   14000acc5:	jmp    0x14000acd6
   14000acc7:	mov    rcx,rbx
   14000acca:	call   0x14000b734
   14000accf:	test   eax,eax
   14000acd1:	je     0x14000ace7
   14000acd3:	mov    rcx,rbx
   14000acd6:	call   QWORD PTR [rip+0x27a4]        # 0x14000d480
   14000acdc:	test   rax,rax
   14000acdf:	je     0x14000acc7
   14000ace1:	add    rsp,0x40
   14000ace5:	pop    rbx
   14000ace6:	ret    
   14000ace7:	mov    eax,DWORD PTR [rip+0x776b]        # 0x140012458
   14000aced:	test   al,0x1
   14000acef:	jne    0x14000ad12
   14000acf1:	or     eax,0x1
   14000acf4:	lea    rcx,[rip+0x7745]        # 0x140012440
   14000acfb:	mov    DWORD PTR [rip+0x7757],eax        # 0x140012458
   14000ad01:	call   0x14000ac7c
   14000ad06:	lea    rcx,[rip+0x1b13]        # 0x14000c820
   14000ad0d:	call   0x14000b358
   14000ad12:	lea    rdx,[rip+0x7727]        # 0x140012440
   14000ad19:	lea    rcx,[rsp+0x20]
   14000ad1e:	call   0x140007440
   14000ad23:	lea    rdx,[rip+0x5c56]        # 0x140010980
   14000ad2a:	lea    rcx,[rsp+0x20]
   14000ad2f:	call   0x14000b740
   14000ad34:	int3   
   14000ad35:	int3   
   14000ad36:	int3   
   14000ad37:	int3   
   14000ad38:	int3   
   14000ad39:	int3   
   14000ad3a:	int3   
   14000ad3b:	int3   
   14000ad3c:	rex push rbx
   14000ad3e:	sub    rsp,0x20
   14000ad42:	mov    rbx,rcx
   14000ad45:	call   0x14000b6ee
   14000ad4a:	lea    rax,[rip+0x298f]        # 0x14000d6e0
   14000ad51:	mov    QWORD PTR [rbx],rax
   14000ad54:	mov    rax,rbx
   14000ad57:	add    rsp,0x20
   14000ad5b:	pop    rbx
   14000ad5c:	ret    
   14000ad5d:	int3   
   14000ad5e:	int3   
   14000ad5f:	int3   
   14000ad60:	int3   
   14000ad61:	int3   
   14000ad62:	int3   
   14000ad63:	int3   
   14000ad64:	mov    QWORD PTR [rsp+0x8],rcx
   14000ad69:	push   rbx
   14000ad6a:	sub    rsp,0x20
   14000ad6e:	mov    QWORD PTR [rsp+0x30],rdx
   14000ad73:	mov    rbx,rcx
   14000ad76:	lea    rdx,[rsp+0x30]
   14000ad7b:	call   0x14000b6d6
   14000ad80:	lea    rax,[rip+0x2959]        # 0x14000d6e0
   14000ad87:	mov    QWORD PTR [rbx],rax
   14000ad8a:	mov    rax,rbx
   14000ad8d:	add    rsp,0x20
   14000ad91:	pop    rbx
   14000ad92:	ret    
   14000ad93:	int3   
   14000ad94:	int3   
   14000ad95:	int3   
   14000ad96:	int3   
   14000ad97:	int3   
   14000ad98:	int3   
   14000ad99:	int3   
   14000ad9a:	int3   
   14000ad9b:	int3   
   14000ad9c:	jmp    0x14000b6e2
   14000ada1:	int3   
   14000ada2:	int3   
   14000ada3:	int3   
   14000ada4:	int3   
   14000ada5:	int3   
   14000ada6:	int3   
   14000ada7:	int3   
   14000ada8:	int3   
   14000ada9:	int3   
   14000adaa:	int3   
   14000adab:	int3   
   14000adac:	int3   
   14000adad:	int3   
   14000adae:	int3   
   14000adaf:	int3   
   14000adb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000adb5:	push   rdi
   14000adb6:	sub    rsp,0x20
   14000adba:	mov    ebx,edx
   14000adbc:	mov    rdi,rcx
   14000adbf:	call   0x14000b6e2
   14000adc4:	test   bl,0x1
   14000adc7:	je     0x14000add1
   14000adc9:	mov    rcx,rdi
   14000adcc:	call   0x14000b274
   14000add1:	mov    rax,rdi
   14000add4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000add9:	add    rsp,0x20
   14000addd:	pop    rdi
   14000adde:	ret    
   14000addf:	int3   
   14000ade0:	int3   
   14000ade1:	int3   
   14000ade2:	int3   
   14000ade3:	int3   
   14000ade4:	int3   
   14000ade5:	int3   
   14000ade6:	int3   
   14000ade7:	int3   
   14000ade8:	sub    rsp,0x48
   14000adec:	mov    rdx,rcx
   14000adef:	lea    rcx,[rsp+0x20]
   14000adf4:	call   0x14000ad64
   14000adf9:	lea    rdx,[rip+0x59b8]        # 0x1400107b8
   14000ae00:	lea    rcx,[rsp+0x20]
   14000ae05:	call   0x14000b740
   14000ae0a:	int3   
   14000ae0b:	int3   
   14000ae0c:	int3   
   14000ae0d:	int3   
   14000ae0e:	int3   
   14000ae0f:	int3   
   14000ae10:	int3   
   14000ae11:	int3   
   14000ae12:	int3   
   14000ae13:	int3   
   14000ae14:	sub    rsp,0x48
   14000ae18:	mov    rdx,rcx
   14000ae1b:	lea    rcx,[rsp+0x20]
   14000ae20:	call   0x14000ad64
   14000ae25:	lea    rdx,[rip+0x59f4]        # 0x140010820
   14000ae2c:	lea    rcx,[rsp+0x20]
   14000ae31:	call   0x14000b740
   14000ae36:	int3   
   14000ae37:	int3   
   14000ae38:	int3   
   14000ae39:	int3   
   14000ae3a:	int3   
   14000ae3b:	int3   
   14000ae3c:	int3   
   14000ae3d:	int3   
   14000ae3e:	int3   
   14000ae3f:	int3   
   14000ae40:	rex push rbx
   14000ae42:	sub    rsp,0x20
   14000ae46:	mov    rbx,rcx
   14000ae49:	call   0x14000b6ee
   14000ae4e:	lea    rax,[rip+0x289b]        # 0x14000d6f0
   14000ae55:	mov    QWORD PTR [rbx],rax
   14000ae58:	mov    rax,rbx
   14000ae5b:	add    rsp,0x20
   14000ae5f:	pop    rbx
   14000ae60:	ret    
   14000ae61:	int3   
   14000ae62:	int3   
   14000ae63:	int3   
   14000ae64:	int3   
   14000ae65:	int3   
   14000ae66:	int3   
   14000ae67:	int3   
   14000ae68:	rex push rbx
   14000ae6a:	sub    rsp,0x20
   14000ae6e:	mov    rbx,rcx
   14000ae71:	call   0x14000b74c
   14000ae76:	lea    rax,[rip+0x2873]        # 0x14000d6f0
   14000ae7d:	mov    QWORD PTR [rbx],rax
   14000ae80:	mov    rax,rbx
   14000ae83:	add    rsp,0x20
   14000ae87:	pop    rbx
   14000ae88:	ret    
   14000ae89:	int3   
   14000ae8a:	int3   
   14000ae8b:	int3   
   14000ae8c:	int3   
   14000ae8d:	int3   
   14000ae8e:	int3   
   14000ae8f:	int3   
   14000ae90:	sub    rsp,0x48
   14000ae94:	xor    edx,edx
   14000ae96:	lea    rcx,[rsp+0x20]
   14000ae9b:	call   0x14000ae68
   14000aea0:	lea    rdx,[rip+0x59e1]        # 0x140010888
   14000aea7:	lea    rcx,[rsp+0x20]
   14000aeac:	call   0x14000b740
   14000aeb1:	int3   
   14000aeb2:	int3   
   14000aeb3:	int3   
   14000aeb4:	int3   
   14000aeb5:	int3   
   14000aeb6:	int3   
   14000aeb7:	int3   
   14000aeb8:	int3   
   14000aeb9:	int3   
   14000aeba:	int3   
   14000aebb:	int3   
   14000aebc:	int3   
   14000aebd:	int3   
   14000aebe:	int3   
   14000aebf:	int3   
   14000aec0:	lea    rax,[rip+0x2839]        # 0x14000d700
   14000aec7:	ret    
   14000aec8:	int3   
   14000aec9:	int3   
   14000aeca:	int3   
   14000aecb:	int3   
   14000aecc:	int3   
   14000aecd:	int3   
   14000aece:	int3   
   14000aecf:	int3   
   14000aed0:	sub    rsp,0x28
   14000aed4:	mov    eax,0x5a4d
   14000aed9:	cmp    WORD PTR [rip+0xffffffffffff5120],ax        # 0x140000000
   14000aee0:	je     0x14000aee6
   14000aee2:	xor    eax,eax
   14000aee4:	jmp    0x14000af35
   14000aee6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff514f]        # 0x14000003c
   14000aeed:	lea    rax,[rip+0xffffffffffff510c]        # 0x140000000
   14000aef4:	add    rcx,rax
   14000aef7:	cmp    DWORD PTR [rcx],0x4550
   14000aefd:	jne    0x14000aee2
   14000aeff:	movzx  eax,WORD PTR [rcx+0x18]
   14000af03:	cmp    eax,0x10b
   14000af08:	je     0x14000af24
   14000af0a:	cmp    eax,0x20b
   14000af0f:	jne    0x14000aee2
   14000af11:	xor    eax,eax
   14000af13:	cmp    DWORD PTR [rcx+0x84],0xe
   14000af1a:	jbe    0x14000af35
   14000af1c:	cmp    DWORD PTR [rcx+0xf8],eax
   14000af22:	jmp    0x14000af32
   14000af24:	xor    eax,eax
   14000af26:	cmp    DWORD PTR [rcx+0x74],0xe
   14000af2a:	jbe    0x14000af35
   14000af2c:	cmp    DWORD PTR [rcx+0xe8],eax
   14000af32:	setne  al
   14000af35:	mov    ecx,0x2
   14000af3a:	mov    DWORD PTR [rip+0x7540],eax        # 0x140012480
   14000af40:	call   0x14000b828
   14000af45:	mov    ecx,eax
   14000af47:	call   QWORD PTR [rip+0x2463]        # 0x14000d3b0
   14000af4d:	mov    rcx,QWORD PTR [rip+0x2404]        # 0x14000d358
   14000af54:	or     rax,0xffffffffffffffff
   14000af58:	mov    QWORD PTR [rip+0x7da1],rax        # 0x140012d00
   14000af5f:	mov    QWORD PTR [rip+0x7da2],rax        # 0x140012d08
   14000af66:	mov    eax,DWORD PTR [rip+0x7aa0]        # 0x140012a0c
   14000af6c:	mov    DWORD PTR [rcx],eax
   14000af6e:	mov    rcx,QWORD PTR [rip+0x23d3]        # 0x14000d348
   14000af75:	mov    eax,DWORD PTR [rip+0x7a85]        # 0x140012a00
   14000af7b:	mov    DWORD PTR [rcx],eax
   14000af7d:	call   0x140003120
   14000af82:	cmp    DWORD PTR [rip+0x707f],0x0        # 0x140012008
   14000af89:	jne    0x14000af98
   14000af8b:	lea    rcx,[rip+0xffffffffffff818e]        # 0x140003120
   14000af92:	call   QWORD PTR [rip+0x23e0]        # 0x14000d378
   14000af98:	xor    eax,eax
   14000af9a:	add    rsp,0x28
   14000af9e:	ret    
   14000af9f:	int3   
   14000afa0:	int3   
   14000afa1:	int3   
   14000afa2:	int3   
   14000afa3:	int3   
   14000afa4:	int3   
   14000afa5:	int3   
   14000afa6:	int3   
   14000afa7:	int3   
   14000afa8:	int3   
   14000afa9:	int3   
   14000afaa:	int3   
   14000afab:	int3   
   14000afac:	int3   
   14000afad:	int3   
   14000afae:	int3   
   14000afaf:	int3   
   14000afb0:	sub    rsp,0x38
   14000afb4:	mov    eax,DWORD PTR [rip+0x7a4e]        # 0x140012a08
   14000afba:	lea    r8,[rip+0x74b7]        # 0x140012478
   14000afc1:	mov    r9d,DWORD PTR [rip+0x7a3c]        # 0x140012a04
   14000afc8:	lea    rdx,[rip+0x74a1]        # 0x140012470
   14000afcf:	mov    DWORD PTR [rip+0x74af],eax        # 0x140012484
   14000afd5:	lea    rcx,[rip+0x748c]        # 0x140012468
   14000afdc:	lea    rax,[rip+0x74a1]        # 0x140012484
   14000afe3:	mov    QWORD PTR [rsp+0x20],rax
   14000afe8:	call   QWORD PTR [rip+0x246a]        # 0x14000d458
   14000afee:	mov    DWORD PTR [rip+0x7478],eax        # 0x14001246c
   14000aff4:	add    rsp,0x38
   14000aff8:	ret    
   14000aff9:	int3   
   14000affa:	int3   
   14000affb:	int3   
   14000affc:	int3   
   14000affd:	int3   
   14000affe:	int3   
   14000afff:	int3   
   14000b000:	sub    rsp,0x28
   14000b004:	call   0x14000b964
   14000b009:	add    rsp,0x28
   14000b00d:	jmp    0x14000b018
   14000b012:	int3   
   14000b013:	int3   
   14000b014:	int3   
   14000b015:	int3   
   14000b016:	int3   
   14000b017:	int3   
   14000b018:	mov    rax,rsp
   14000b01b:	mov    QWORD PTR [rax+0x8],rbx
   14000b01f:	mov    QWORD PTR [rax+0x10],rsi
   14000b023:	mov    QWORD PTR [rax+0x18],rdi
   14000b027:	push   r15
   14000b029:	sub    rsp,0xb0
   14000b030:	and    DWORD PTR [rsp+0x20],0x0
   14000b035:	lea    rcx,[rax-0x78]
   14000b039:	call   QWORD PTR [rip+0x21b1]        # 0x14000d1f0
   14000b03f:	nop
   14000b040:	mov    rax,QWORD PTR gs:0x30
   14000b049:	mov    rbx,QWORD PTR [rax+0x8]
   14000b04d:	xor    esi,esi
   14000b04f:	xor    eax,eax
   14000b051:	lock cmpxchg QWORD PTR [rip+0x7c96],rbx        # 0x140012cf0
   14000b05a:	je     0x14000b075
   14000b05c:	cmp    rax,rbx
   14000b05f:	jne    0x14000b068
   14000b061:	mov    esi,0x1
   14000b066:	jmp    0x14000b075
   14000b068:	mov    ecx,0x3e8
   14000b06d:	call   QWORD PTR [rip+0x225d]        # 0x14000d2d0
   14000b073:	jmp    0x14000b04f
   14000b075:	mov    eax,DWORD PTR [rip+0x7c7d]        # 0x140012cf8
   14000b07b:	cmp    eax,0x1
   14000b07e:	jne    0x14000b08a
   14000b080:	lea    ecx,[rax+0x1e]
   14000b083:	call   0x14000b874
   14000b088:	jmp    0x14000b0fb
   14000b08a:	mov    eax,DWORD PTR [rip+0x7c68]        # 0x140012cf8
   14000b090:	test   eax,eax
   14000b092:	jne    0x14000b0f1
   14000b094:	mov    DWORD PTR [rip+0x7c5a],0x1        # 0x140012cf8
   14000b09e:	lea    r15,[rip+0x246b]        # 0x14000d510
   14000b0a5:	lea    rbx,[rip+0x244c]        # 0x14000d4f8
   14000b0ac:	mov    QWORD PTR [rsp+0x38],rbx
   14000b0b1:	mov    DWORD PTR [rsp+0x30],eax
   14000b0b5:	cmp    rbx,r15
   14000b0b8:	jae    0x14000b0e3
   14000b0ba:	test   eax,eax
   14000b0bc:	jne    0x14000b0e7
   14000b0be:	mov    rdi,QWORD PTR [rbx]
   14000b0c1:	test   rdi,rdi
   14000b0c4:	je     0x14000b0d8
   14000b0c6:	mov    rcx,rdi
   14000b0c9:	mov    rax,QWORD PTR [rip+0x23d8]        # 0x14000d4a8
   14000b0d0:	call   rax
   14000b0d2:	call   rdi
   14000b0d4:	mov    DWORD PTR [rsp+0x30],eax
   14000b0d8:	add    rbx,0x8
   14000b0dc:	mov    QWORD PTR [rsp+0x38],rbx
   14000b0e1:	jmp    0x14000b0b5
   14000b0e3:	test   eax,eax
   14000b0e5:	je     0x14000b0fb
   14000b0e7:	mov    eax,0xff
   14000b0ec:	jmp    0x14000b254
   14000b0f1:	mov    DWORD PTR [rip+0x7365],0x1        # 0x140012460
   14000b0fb:	mov    eax,DWORD PTR [rip+0x7bf7]        # 0x140012cf8
   14000b101:	cmp    eax,0x1
   14000b104:	jne    0x14000b123
   14000b106:	lea    rdx,[rip+0x23e3]        # 0x14000d4f0
   14000b10d:	lea    rcx,[rip+0x23a4]        # 0x14000d4b8
   14000b114:	call   0x14000ba3a
   14000b119:	mov    DWORD PTR [rip+0x7bd5],0x2        # 0x140012cf8
   14000b123:	test   esi,esi
   14000b125:	jne    0x14000b130
   14000b127:	xor    eax,eax
   14000b129:	xchg   QWORD PTR [rip+0x7bc0],rax        # 0x140012cf0
   14000b130:	cmp    QWORD PTR [rip+0x7bd8],0x0        # 0x140012d10
   14000b138:	je     0x14000b168
   14000b13a:	lea    rcx,[rip+0x7bcf]        # 0x140012d10
   14000b141:	call   0x14000b8d0
   14000b146:	test   eax,eax
   14000b148:	je     0x14000b168
   14000b14a:	mov    rbx,QWORD PTR [rip+0x7bbf]        # 0x140012d10
   14000b151:	mov    rcx,rbx
   14000b154:	mov    rax,QWORD PTR [rip+0x234d]        # 0x14000d4a8
   14000b15b:	call   rax
   14000b15d:	xor    r8d,r8d
   14000b160:	lea    edx,[r8+0x2]
   14000b164:	xor    ecx,ecx
   14000b166:	call   rbx
   14000b168:	mov    rax,QWORD PTR [rip+0x21f1]        # 0x14000d360
   14000b16f:	mov    rbx,QWORD PTR [rax]
   14000b172:	mov    QWORD PTR [rsp+0x28],rbx
   14000b177:	mov    edi,DWORD PTR [rsp+0x20]
   14000b17b:	cmp    BYTE PTR [rbx],0x20
   14000b17e:	ja     0x14000b1f3
   14000b180:	cmp    BYTE PTR [rbx],0x0
   14000b183:	je     0x14000b189
   14000b185:	test   edi,edi
   14000b187:	jne    0x14000b1f3
   14000b189:	mov    al,BYTE PTR [rbx]
   14000b18b:	dec    al
   14000b18d:	cmp    al,0x1f
   14000b18f:	ja     0x14000b19b
   14000b191:	inc    rbx
   14000b194:	mov    QWORD PTR [rsp+0x28],rbx
   14000b199:	jmp    0x14000b189
   14000b19b:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000b19f:	movzx  eax,WORD PTR [rsp+0x80]
   14000b1a7:	mov    r9d,0xa
   14000b1ad:	and    cl,0x1
   14000b1b0:	cmovne r9d,eax
   14000b1b4:	mov    r8,rbx
   14000b1b7:	xor    edx,edx
   14000b1b9:	lea    rcx,[rip+0xffffffffffff4e40]        # 0x140000000
   14000b1c0:	call   0x140001c00
   14000b1c5:	mov    DWORD PTR [rip+0x7291],eax        # 0x14001245c
   14000b1cb:	cmp    DWORD PTR [rip+0x72ae],0x0        # 0x140012480
   14000b1d2:	jne    0x14000b1dc
   14000b1d4:	mov    ecx,eax
   14000b1d6:	call   QWORD PTR [rip+0x21cc]        # 0x14000d3a8
   14000b1dc:	cmp    DWORD PTR [rip+0x727d],0x0        # 0x140012460
   14000b1e3:	jne    0x14000b1f1
   14000b1e5:	call   QWORD PTR [rip+0x219d]        # 0x14000d388
   14000b1eb:	mov    eax,DWORD PTR [rip+0x726b]        # 0x14001245c
   14000b1f1:	jmp    0x14000b254
   14000b1f3:	cmp    BYTE PTR [rbx],0x22
   14000b1f6:	jne    0x14000b205
   14000b1f8:	xor    eax,eax
   14000b1fa:	test   edi,edi
   14000b1fc:	sete   al
   14000b1ff:	mov    edi,eax
   14000b201:	mov    DWORD PTR [rsp+0x20],eax
   14000b205:	movzx  ecx,BYTE PTR [rbx]
   14000b208:	call   QWORD PTR [rip+0x2172]        # 0x14000d380
   14000b20e:	test   eax,eax
   14000b210:	je     0x14000b21a
   14000b212:	inc    rbx
   14000b215:	mov    QWORD PTR [rsp+0x28],rbx
   14000b21a:	inc    rbx
   14000b21d:	mov    QWORD PTR [rsp+0x28],rbx
   14000b222:	jmp    0x14000b17b
   14000b227:	mov    DWORD PTR [rip+0x722f],eax        # 0x14001245c
   14000b22d:	cmp    DWORD PTR [rip+0x724c],0x0        # 0x140012480
   14000b234:	jne    0x14000b23f
   14000b236:	mov    ecx,eax
   14000b238:	call   QWORD PTR [rip+0x2152]        # 0x14000d390
   14000b23e:	int3   
   14000b23f:	cmp    DWORD PTR [rip+0x721a],0x0        # 0x140012460
   14000b246:	jne    0x14000b254
   14000b248:	call   QWORD PTR [rip+0x213a]        # 0x14000d388
   14000b24e:	mov    eax,DWORD PTR [rip+0x7208]        # 0x14001245c
   14000b254:	lea    r11,[rsp+0xb0]
   14000b25c:	mov    rbx,QWORD PTR [r11+0x10]
   14000b260:	mov    rsi,QWORD PTR [r11+0x18]
   14000b264:	mov    rdi,QWORD PTR [r11+0x20]
   14000b268:	mov    rsp,r11
   14000b26b:	pop    r15
   14000b26d:	ret    
   14000b26e:	int3   
   14000b26f:	int3   
   14000b270:	int3   
   14000b271:	int3   
   14000b272:	int3   
   14000b273:	int3   
   14000b274:	jmp    QWORD PTR [rip+0x21ee]        # 0x14000d468
   14000b27a:	int3   
   14000b27b:	int3   
   14000b27c:	int3   
   14000b27d:	int3   
   14000b27e:	int3   
   14000b27f:	int3   
   14000b280:	int3   
   14000b281:	int3   
   14000b282:	int3   
   14000b283:	int3   
   14000b284:	int3   
   14000b285:	int3   
   14000b286:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b290:	cmp    rcx,QWORD PTR [rip+0x6d79]        # 0x140012010
   14000b297:	jne    0x14000b2a9
   14000b299:	rol    rcx,0x10
   14000b29d:	test   cx,0xffff
   14000b2a2:	jne    0x14000b2a5
   14000b2a4:	ret    
   14000b2a5:	ror    rcx,0x10
   14000b2a9:	jmp    0x14000b460
   14000b2ae:	int3   
   14000b2af:	int3   
   14000b2b0:	int3   
   14000b2b1:	int3   
   14000b2b2:	int3   
   14000b2b3:	int3   
   14000b2b4:	mov    QWORD PTR [rsp+0x8],rbx
   14000b2b9:	push   rdi
   14000b2ba:	sub    rsp,0x20
   14000b2be:	mov    rdi,rcx
   14000b2c1:	mov    rax,QWORD PTR [rip+0x7a40]        # 0x140012d08
   14000b2c8:	mov    QWORD PTR [rsp+0x38],rax
   14000b2cd:	cmp    rax,0xffffffffffffffff
   14000b2d1:	jne    0x14000b2ea
   14000b2d3:	mov    rbx,QWORD PTR [rip+0x20e6]        # 0x14000d3c0
   14000b2da:	mov    rcx,rbx
   14000b2dd:	call   QWORD PTR [rip+0x21c5]        # 0x14000d4a8
   14000b2e3:	mov    rcx,rdi
   14000b2e6:	call   rbx
   14000b2e8:	jmp    0x14000b347
   14000b2ea:	mov    ecx,0x8
   14000b2ef:	call   0x14000ba52
   14000b2f4:	nop
   14000b2f5:	mov    rax,QWORD PTR [rip+0x7a0c]        # 0x140012d08
   14000b2fc:	mov    QWORD PTR [rsp+0x38],rax
   14000b301:	mov    rax,QWORD PTR [rip+0x79f8]        # 0x140012d00
   14000b308:	mov    QWORD PTR [rsp+0x40],rax
   14000b30d:	lea    r8,[rsp+0x40]
   14000b312:	lea    rdx,[rsp+0x38]
   14000b317:	mov    rcx,rdi
   14000b31a:	call   0x14000ba6a
   14000b31f:	mov    rbx,rax
   14000b322:	mov    rdx,QWORD PTR [rsp+0x38]
   14000b327:	mov    QWORD PTR [rip+0x79da],rdx        # 0x140012d08
   14000b32e:	mov    rdx,QWORD PTR [rsp+0x40]
   14000b333:	mov    QWORD PTR [rip+0x79c6],rdx        # 0x140012d00
   14000b33a:	mov    ecx,0x8
   14000b33f:	call   0x14000ba5e
   14000b344:	mov    rax,rbx
   14000b347:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b34c:	add    rsp,0x20
   14000b350:	pop    rdi
   14000b351:	ret    
   14000b352:	int3   
   14000b353:	int3   
   14000b354:	int3   
   14000b355:	int3   
   14000b356:	int3   
   14000b357:	int3   
   14000b358:	sub    rsp,0x28
   14000b35c:	call   0x14000b2b4
   14000b361:	neg    rax
   14000b364:	sbb    eax,eax
   14000b366:	neg    eax
   14000b368:	dec    eax
   14000b36a:	add    rsp,0x28
   14000b36e:	ret    
   14000b36f:	int3   
   14000b370:	int3   
   14000b371:	int3   
   14000b372:	int3   
   14000b373:	int3   
   14000b374:	int3   
   14000b375:	int3   
   14000b376:	int3   
   14000b377:	int3   
   14000b378:	int3   
   14000b379:	int3   
   14000b37a:	int3   
   14000b37b:	int3   
   14000b37c:	int3   
   14000b37d:	int3   
   14000b37e:	int3   
   14000b37f:	int3   
   14000b380:	mov    QWORD PTR [rsp+0x8],rbx
   14000b385:	push   rdi
   14000b386:	sub    rsp,0x20
   14000b38a:	mov    ebx,edx
   14000b38c:	mov    rdi,rcx
   14000b38f:	call   QWORD PTR [rip+0x2043]        # 0x14000d3d8
   14000b395:	test   bl,0x1
   14000b398:	je     0x14000b3a2
   14000b39a:	mov    rcx,rdi
   14000b39d:	call   0x14000b274
   14000b3a2:	mov    rax,rdi
   14000b3a5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b3aa:	add    rsp,0x20
   14000b3ae:	pop    rdi
   14000b3af:	ret    
   14000b3b0:	int3   
   14000b3b1:	int3   
   14000b3b2:	int3   
   14000b3b3:	int3   
   14000b3b4:	int3   
   14000b3b5:	int3   
   14000b3b6:	int3   
   14000b3b7:	int3   
   14000b3b8:	int3   
   14000b3b9:	int3   
   14000b3ba:	int3   
   14000b3bb:	int3   
   14000b3bc:	int3   
   14000b3bd:	int3   
   14000b3be:	int3   
   14000b3bf:	int3   
   14000b3c0:	sub    rsp,0x38
   14000b3c4:	mov    r9,rdx
   14000b3c7:	test   rdx,rdx
   14000b3ca:	je     0x14000b401
   14000b3cc:	xor    edx,edx
   14000b3ce:	lea    rax,[rdx-0x20]
   14000b3d2:	div    r9
   14000b3d5:	cmp    rax,r8
   14000b3d8:	jae    0x14000b401
   14000b3da:	call   0x14000ba76
   14000b3df:	and    QWORD PTR [rsp+0x20],0x0
   14000b3e5:	xor    r9d,r9d
   14000b3e8:	xor    r8d,r8d
   14000b3eb:	xor    edx,edx
   14000b3ed:	xor    ecx,ecx
   14000b3ef:	mov    DWORD PTR [rax],0xc
   14000b3f5:	call   0x14000ba84
   14000b3fa:	xor    eax,eax
   14000b3fc:	add    rsp,0x38
   14000b400:	ret    
   14000b401:	imul   r9,r8
   14000b405:	mov    rdx,r9
   14000b408:	add    rsp,0x38
   14000b40c:	jmp    0x14000bb5a
   14000b411:	int3   
   14000b412:	int3   
   14000b413:	int3   
   14000b414:	int3   
   14000b415:	int3   
   14000b416:	int3   
   14000b417:	int3   
   14000b418:	rex push rbx
   14000b41a:	sub    rsp,0x20
   14000b41e:	mov    rbx,rcx
   14000b421:	xor    ecx,ecx
   14000b423:	call   QWORD PTR [rip+0x1cdf]        # 0x14000d108
   14000b429:	mov    rcx,rbx
   14000b42c:	call   QWORD PTR [rip+0x1cce]        # 0x14000d100
   14000b432:	call   QWORD PTR [rip+0x1d88]        # 0x14000d1c0
   14000b438:	mov    rcx,rax
   14000b43b:	mov    edx,0xc0000409
   14000b440:	add    rsp,0x20
   14000b444:	pop    rbx
   14000b445:	rex.W jmp QWORD PTR [rip+0x1d6c]        # 0x14000d1b8
   14000b44c:	int3   
   14000b44d:	int3   
   14000b44e:	int3   
   14000b44f:	int3   
   14000b450:	int3   
   14000b451:	int3   
   14000b452:	int3   
   14000b453:	int3   
   14000b454:	int3   
   14000b455:	int3   
   14000b456:	int3   
   14000b457:	int3   
   14000b458:	int3   
   14000b459:	int3   
   14000b45a:	int3   
   14000b45b:	int3   
   14000b45c:	int3   
   14000b45d:	int3   
   14000b45e:	int3   
   14000b45f:	int3   
   14000b460:	mov    QWORD PTR [rsp+0x8],rcx
   14000b465:	sub    rsp,0x88
   14000b46c:	lea    rcx,[rip+0x70bd]        # 0x140012530
   14000b473:	call   QWORD PTR [rip+0x1ddf]        # 0x14000d258
   14000b479:	mov    rax,QWORD PTR [rip+0x71a8]        # 0x140012628
   14000b480:	mov    QWORD PTR [rsp+0x48],rax
   14000b485:	xor    r8d,r8d
   14000b488:	lea    rdx,[rsp+0x50]
   14000b48d:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b492:	call   QWORD PTR [rip+0x1dd0]        # 0x14000d268
   14000b498:	mov    QWORD PTR [rsp+0x40],rax
   14000b49d:	cmp    QWORD PTR [rsp+0x40],0x0
   14000b4a3:	je     0x14000b4e7
   14000b4a5:	mov    QWORD PTR [rsp+0x38],0x0
   14000b4ae:	lea    rax,[rsp+0x58]
   14000b4b3:	mov    QWORD PTR [rsp+0x30],rax
   14000b4b8:	lea    rax,[rsp+0x60]
   14000b4bd:	mov    QWORD PTR [rsp+0x28],rax
   14000b4c2:	lea    rax,[rip+0x7067]        # 0x140012530
   14000b4c9:	mov    QWORD PTR [rsp+0x20],rax
   14000b4ce:	mov    r9,QWORD PTR [rsp+0x40]
   14000b4d3:	mov    r8,QWORD PTR [rsp+0x48]
   14000b4d8:	mov    rdx,QWORD PTR [rsp+0x50]
   14000b4dd:	xor    ecx,ecx
   14000b4df:	call   QWORD PTR [rip+0x1d7b]        # 0x14000d260
   14000b4e5:	jmp    0x14000b50a
   14000b4e7:	mov    rax,QWORD PTR [rip+0x70da]        # 0x1400125c8
   14000b4ee:	mov    rax,QWORD PTR [rax]
   14000b4f1:	mov    QWORD PTR [rip+0x7130],rax        # 0x140012628
   14000b4f8:	mov    rax,QWORD PTR [rip+0x70c9]        # 0x1400125c8
   14000b4ff:	add    rax,0x8
   14000b503:	mov    QWORD PTR [rip+0x70be],rax        # 0x1400125c8
   14000b50a:	mov    rax,QWORD PTR [rip+0x7117]        # 0x140012628
   14000b511:	mov    QWORD PTR [rip+0x6f88],rax        # 0x1400124a0
   14000b518:	mov    rax,QWORD PTR [rsp+0x90]
   14000b520:	mov    QWORD PTR [rip+0x7089],rax        # 0x1400125b0
   14000b527:	mov    DWORD PTR [rip+0x6f5f],0xc0000409        # 0x140012490
   14000b531:	mov    DWORD PTR [rip+0x6f59],0x1        # 0x140012494
   14000b53b:	mov    DWORD PTR [rip+0x6f63],0x3        # 0x1400124a8
   14000b545:	mov    eax,0x8
   14000b54a:	imul   rax,rax,0x0
   14000b54e:	lea    rcx,[rip+0x6f5b]        # 0x1400124b0
   14000b555:	mov    QWORD PTR [rcx+rax*1],0x2
   14000b55d:	mov    eax,0x8
   14000b562:	imul   rax,rax,0x1
   14000b566:	lea    rcx,[rip+0x6f43]        # 0x1400124b0
   14000b56d:	mov    rdx,QWORD PTR [rip+0x6a9c]        # 0x140012010
   14000b574:	mov    QWORD PTR [rcx+rax*1],rdx
   14000b578:	mov    eax,0x8
   14000b57d:	imul   rax,rax,0x2
   14000b581:	lea    rcx,[rip+0x6f28]        # 0x1400124b0
   14000b588:	mov    rdx,QWORD PTR [rip+0x6a89]        # 0x140012018
   14000b58f:	mov    QWORD PTR [rcx+rax*1],rdx
   14000b593:	mov    eax,0x8
   14000b598:	imul   rax,rax,0x0
   14000b59c:	mov    rcx,QWORD PTR [rip+0x6a6d]        # 0x140012010
   14000b5a3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000b5a8:	mov    eax,0x8
   14000b5ad:	imul   rax,rax,0x1
   14000b5b1:	mov    rcx,QWORD PTR [rip+0x6a60]        # 0x140012018
   14000b5b8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000b5bd:	lea    rcx,[rip+0x215c]        # 0x14000d720
   14000b5c4:	call   0x14000b418
   14000b5c9:	add    rsp,0x88
   14000b5d0:	ret    
   14000b5d1:	int3   
   14000b5d2:	int3   
   14000b5d3:	int3   
   14000b5d4:	int3   
   14000b5d5:	int3   
   14000b5d6:	int3   
   14000b5d7:	int3   
   14000b5d8:	sub    rsp,0x78
   14000b5dc:	lea    rcx,[rip+0x6f4d]        # 0x140012530
   14000b5e3:	call   QWORD PTR [rip+0x1c6f]        # 0x14000d258
   14000b5e9:	mov    rax,QWORD PTR [rip+0x7038]        # 0x140012628
   14000b5f0:	mov    QWORD PTR [rsp+0x48],rax
   14000b5f5:	xor    r8d,r8d
   14000b5f8:	lea    rdx,[rsp+0x50]
   14000b5fd:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b602:	call   QWORD PTR [rip+0x1c60]        # 0x14000d268
   14000b608:	mov    QWORD PTR [rsp+0x40],rax
   14000b60d:	cmp    QWORD PTR [rsp+0x40],0x0
   14000b613:	je     0x14000b657
   14000b615:	mov    QWORD PTR [rsp+0x38],0x0
   14000b61e:	lea    rax,[rsp+0x58]
   14000b623:	mov    QWORD PTR [rsp+0x30],rax
   14000b628:	lea    rax,[rsp+0x60]
   14000b62d:	mov    QWORD PTR [rsp+0x28],rax
   14000b632:	lea    rax,[rip+0x6ef7]        # 0x140012530
   14000b639:	mov    QWORD PTR [rsp+0x20],rax
   14000b63e:	mov    r9,QWORD PTR [rsp+0x40]
   14000b643:	mov    r8,QWORD PTR [rsp+0x48]
   14000b648:	mov    rdx,QWORD PTR [rsp+0x50]
   14000b64d:	xor    ecx,ecx
   14000b64f:	call   QWORD PTR [rip+0x1c0b]        # 0x14000d260
   14000b655:	jmp    0x14000b67a
   14000b657:	mov    rax,QWORD PTR [rip+0x6f6a]        # 0x1400125c8
   14000b65e:	mov    rax,QWORD PTR [rax]
   14000b661:	mov    QWORD PTR [rip+0x6fc0],rax        # 0x140012628
   14000b668:	mov    rax,QWORD PTR [rip+0x6f59]        # 0x1400125c8
   14000b66f:	add    rax,0x8
   14000b673:	mov    QWORD PTR [rip+0x6f4e],rax        # 0x1400125c8
   14000b67a:	mov    rax,QWORD PTR [rip+0x6fa7]        # 0x140012628
   14000b681:	mov    QWORD PTR [rip+0x6e18],rax        # 0x1400124a0
   14000b688:	mov    DWORD PTR [rip+0x6dfe],0xc0000409        # 0x140012490
   14000b692:	mov    DWORD PTR [rip+0x6df8],0x1        # 0x140012494
   14000b69c:	mov    DWORD PTR [rip+0x6e02],0x1        # 0x1400124a8
   14000b6a6:	mov    eax,0x8
   14000b6ab:	imul   rax,rax,0x0
   14000b6af:	lea    rcx,[rip+0x6dfa]        # 0x1400124b0
   14000b6b6:	mov    QWORD PTR [rcx+rax*1],0x8
   14000b6be:	lea    rcx,[rip+0x205b]        # 0x14000d720
   14000b6c5:	call   0x14000b418
   14000b6ca:	add    rsp,0x78
   14000b6ce:	ret    
   14000b6cf:	int3   
   14000b6d0:	int3   
   14000b6d1:	int3   
   14000b6d2:	int3   
   14000b6d3:	int3   
   14000b6d4:	int3   
   14000b6d5:	int3   
   14000b6d6:	jmp    QWORD PTR [rip+0x1d64]        # 0x14000d440
   14000b6dc:	int3   
   14000b6dd:	int3   
   14000b6de:	int3   
   14000b6df:	int3   
   14000b6e0:	int3   
   14000b6e1:	int3   
   14000b6e2:	jmp    QWORD PTR [rip+0x1d50]        # 0x14000d438
   14000b6e8:	int3   
   14000b6e9:	int3   
   14000b6ea:	int3   
   14000b6eb:	int3   
   14000b6ec:	int3   
   14000b6ed:	int3   
   14000b6ee:	jmp    QWORD PTR [rip+0x1d34]        # 0x14000d428
   14000b6f4:	int3   
   14000b6f5:	int3   
   14000b6f6:	int3   
   14000b6f7:	int3   
   14000b6f8:	int3   
   14000b6f9:	int3   
   14000b6fa:	int3   
   14000b6fb:	int3   
   14000b6fc:	int3   
   14000b6fd:	int3   
   14000b6fe:	int3   
   14000b6ff:	int3   
   14000b700:	jmp    QWORD PTR [rip+0x1d1a]        # 0x14000d420
   14000b706:	int3   
   14000b707:	int3   
   14000b708:	int3   
   14000b709:	int3   
   14000b70a:	int3   
   14000b70b:	int3   
   14000b70c:	int3   
   14000b70d:	int3   
   14000b70e:	int3   
   14000b70f:	int3   
   14000b710:	jmp    QWORD PTR [rip+0x1d02]        # 0x14000d418
   14000b716:	int3   
   14000b717:	int3   
   14000b718:	int3   
   14000b719:	int3   
   14000b71a:	int3   
   14000b71b:	int3   
   14000b71c:	jmp    QWORD PTR [rip+0x1cee]        # 0x14000d410
   14000b722:	int3   
   14000b723:	int3   
   14000b724:	int3   
   14000b725:	int3   
   14000b726:	int3   
   14000b727:	int3   
   14000b728:	jmp    QWORD PTR [rip+0x1cd2]        # 0x14000d400
   14000b72e:	int3   
   14000b72f:	int3   
   14000b730:	int3   
   14000b731:	int3   
   14000b732:	int3   
   14000b733:	int3   
   14000b734:	jmp    QWORD PTR [rip+0x1cbe]        # 0x14000d3f8
   14000b73a:	int3   
   14000b73b:	int3   
   14000b73c:	int3   
   14000b73d:	int3   
   14000b73e:	int3   
   14000b73f:	int3   
   14000b740:	jmp    QWORD PTR [rip+0x1ca2]        # 0x14000d3e8
   14000b746:	int3   
   14000b747:	int3   
   14000b748:	int3   
   14000b749:	int3   
   14000b74a:	int3   
   14000b74b:	int3   
   14000b74c:	jmp    QWORD PTR [rip+0x1c8e]        # 0x14000d3e0
   14000b752:	int3   
   14000b753:	int3   
   14000b754:	int3   
   14000b755:	int3   
   14000b756:	int3   
   14000b757:	int3   
   14000b758:	int3   
   14000b759:	int3   
   14000b75a:	int3   
   14000b75b:	int3   
   14000b75c:	int3   
   14000b75d:	int3   
   14000b75e:	int3   
   14000b75f:	int3   
   14000b760:	sub    rsp,0x28
   14000b764:	mov    rax,QWORD PTR [rcx]
   14000b767:	cmp    DWORD PTR [rax],0xe06d7363
   14000b76d:	jne    0x14000b792
   14000b76f:	cmp    DWORD PTR [rax+0x18],0x4
   14000b773:	jne    0x14000b792
   14000b775:	mov    ecx,DWORD PTR [rax+0x20]
   14000b778:	lea    eax,[rcx-0x19930520]
   14000b77e:	cmp    eax,0x2
   14000b781:	jbe    0x14000b78b
   14000b783:	cmp    ecx,0x1994000
   14000b789:	jne    0x14000b792
   14000b78b:	call   QWORD PTR [rip+0x1bbf]        # 0x14000d350
   14000b791:	int3   
   14000b792:	xor    eax,eax
   14000b794:	add    rsp,0x28
   14000b798:	ret    
   14000b799:	int3   
   14000b79a:	int3   
   14000b79b:	int3   
   14000b79c:	int3   
   14000b79d:	int3   
   14000b79e:	int3   
   14000b79f:	int3   
   14000b7a0:	sub    rsp,0x28
   14000b7a4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000b760
   14000b7ab:	call   QWORD PTR [rip+0x1957]        # 0x14000d108
   14000b7b1:	xor    eax,eax
   14000b7b3:	add    rsp,0x28
   14000b7b7:	ret    
   14000b7b8:	int3   
   14000b7b9:	int3   
   14000b7ba:	int3   
   14000b7bb:	int3   
   14000b7bc:	int3   
   14000b7bd:	int3   
   14000b7be:	jmp    QWORD PTR [rip+0x1c0c]        # 0x14000d3d0
   14000b7c4:	int3   
   14000b7c5:	int3   
   14000b7c6:	int3   
   14000b7c7:	int3   
   14000b7c8:	int3   
   14000b7c9:	int3   
   14000b7ca:	int3   
   14000b7cb:	int3   
   14000b7cc:	sub    rsp,0x18
   14000b7d0:	xor    edx,edx
   14000b7d2:	lea    rax,[rcx-0x1]
   14000b7d6:	cmp    rax,0xfffffffffffffffd
   14000b7da:	ja     0x14000b818
   14000b7dc:	mov    eax,0x5a4d
   14000b7e1:	cmp    WORD PTR [rcx],ax
   14000b7e4:	jne    0x14000b810
   14000b7e6:	cmp    DWORD PTR [rcx+0x3c],edx
   14000b7e9:	jl     0x14000b810
   14000b7eb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14000b7f2:	jae    0x14000b810
   14000b7f4:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000b7f8:	add    rax,rcx
   14000b7fb:	mov    QWORD PTR [rsp],rax
   14000b7ff:	cmp    DWORD PTR [rax],0x4550
   14000b805:	cmovne rax,rdx
   14000b809:	mov    rdx,rax
   14000b80c:	mov    QWORD PTR [rsp],rax
   14000b810:	jmp    0x14000b818
   14000b812:	xor    edx,edx
   14000b814:	mov    QWORD PTR [rsp],rdx
   14000b818:	mov    rax,rdx
   14000b81b:	add    rsp,0x18
   14000b81f:	ret    
   14000b820:	int3   
   14000b821:	int3   
   14000b822:	int3   
   14000b823:	int3   
   14000b824:	int3   
   14000b825:	int3   
   14000b826:	int3   
   14000b827:	int3   
   14000b828:	rex push rbx
   14000b82a:	sub    rsp,0x20
   14000b82e:	mov    ebx,ecx
   14000b830:	xor    ecx,ecx
   14000b832:	call   QWORD PTR [rip+0x18f8]        # 0x14000d130
   14000b838:	test   rax,rax
   14000b83b:	je     0x14000b865
   14000b83d:	mov    rcx,rax
   14000b840:	call   0x14000b7cc
   14000b845:	test   rax,rax
   14000b848:	je     0x14000b865
   14000b84a:	mov    ecx,0x2
   14000b84f:	cmp    WORD PTR [rax+0x5c],cx
   14000b853:	jne    0x14000b859
   14000b855:	mov    eax,ecx
   14000b857:	jmp    0x14000b867
   14000b859:	cmp    WORD PTR [rax+0x5c],0x3
   14000b85e:	mov    eax,0x1
   14000b863:	je     0x14000b867
   14000b865:	mov    eax,ebx
   14000b867:	add    rsp,0x20
   14000b86b:	pop    rbx
   14000b86c:	ret    
   14000b86d:	int3   
   14000b86e:	int3   
   14000b86f:	int3   
   14000b870:	int3   
   14000b871:	int3   
   14000b872:	int3   
   14000b873:	int3   
   14000b874:	jmp    QWORD PTR [rip+0x1b4e]        # 0x14000d3c8
   14000b87a:	int3   
   14000b87b:	int3   
   14000b87c:	int3   
   14000b87d:	int3   
   14000b87e:	int3   
   14000b87f:	int3   
   14000b880:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000b884:	xor    r9d,r9d
   14000b887:	add    r8,rcx
   14000b88a:	mov    r10,rdx
   14000b88d:	movzx  eax,WORD PTR [r8+0x14]
   14000b892:	movzx  r11d,WORD PTR [r8+0x6]
   14000b897:	add    rax,0x18
   14000b89b:	add    rax,r8
   14000b89e:	test   r11d,r11d
   14000b8a1:	je     0x14000b8c1
   14000b8a3:	mov    edx,DWORD PTR [rax+0xc]
   14000b8a6:	cmp    r10,rdx
   14000b8a9:	jb     0x14000b8b5
   14000b8ab:	mov    ecx,DWORD PTR [rax+0x8]
   14000b8ae:	add    ecx,edx
   14000b8b0:	cmp    r10,rcx
   14000b8b3:	jb     0x14000b8c3
   14000b8b5:	inc    r9d
   14000b8b8:	add    rax,0x28
   14000b8bc:	cmp    r9d,r11d
   14000b8bf:	jb     0x14000b8a3
   14000b8c1:	xor    eax,eax
   14000b8c3:	ret    
   14000b8c4:	int3   
   14000b8c5:	int3   
   14000b8c6:	int3   
   14000b8c7:	int3   
   14000b8c8:	int3   
   14000b8c9:	int3   
   14000b8ca:	int3   
   14000b8cb:	int3   
   14000b8cc:	int3   
   14000b8cd:	int3   
   14000b8ce:	int3   
   14000b8cf:	int3   
   14000b8d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b8d5:	push   rdi
   14000b8d6:	sub    rsp,0x20
   14000b8da:	mov    rbx,rcx
   14000b8dd:	lea    rdi,[rip+0xffffffffffff471c]        # 0x140000000
   14000b8e4:	mov    rcx,rdi
   14000b8e7:	call   0x14000b930
   14000b8ec:	test   eax,eax
   14000b8ee:	je     0x14000b912
   14000b8f0:	sub    rbx,rdi
   14000b8f3:	mov    rdx,rbx
   14000b8f6:	mov    rcx,rdi
   14000b8f9:	call   0x14000b880
   14000b8fe:	test   rax,rax
   14000b901:	je     0x14000b912
   14000b903:	mov    eax,DWORD PTR [rax+0x24]
   14000b906:	shr    eax,0x1f
   14000b909:	not    eax
   14000b90b:	and    eax,0x1
   14000b90e:	jmp    0x14000b912
   14000b910:	xor    eax,eax
   14000b912:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b917:	add    rsp,0x20
   14000b91b:	pop    rdi
   14000b91c:	ret    
   14000b91d:	int3   
   14000b91e:	int3   
   14000b91f:	int3   
   14000b920:	int3   
   14000b921:	int3   
   14000b922:	int3   
   14000b923:	int3   
   14000b924:	int3   
   14000b925:	int3   
   14000b926:	int3   
   14000b927:	int3   
   14000b928:	int3   
   14000b929:	int3   
   14000b92a:	int3   
   14000b92b:	int3   
   14000b92c:	int3   
   14000b92d:	int3   
   14000b92e:	int3   
   14000b92f:	int3   
   14000b930:	mov    rax,rcx
   14000b933:	mov    ecx,0x5a4d
   14000b938:	cmp    WORD PTR [rax],cx
   14000b93b:	je     0x14000b940
   14000b93d:	xor    eax,eax
   14000b93f:	ret    
   14000b940:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000b944:	add    rcx,rax
   14000b947:	xor    eax,eax
   14000b949:	cmp    DWORD PTR [rcx],0x4550
   14000b94f:	jne    0x14000b95d
   14000b951:	mov    edx,0x20b
   14000b956:	cmp    WORD PTR [rcx+0x18],dx
   14000b95a:	sete   al
   14000b95d:	ret    
   14000b95e:	int3   
   14000b95f:	int3   
   14000b960:	int3   
   14000b961:	int3   
   14000b962:	int3   
   14000b963:	int3   
   14000b964:	mov    QWORD PTR [rsp+0x20],rbx
   14000b969:	push   rbp
   14000b96a:	mov    rbp,rsp
   14000b96d:	sub    rsp,0x20
   14000b971:	and    QWORD PTR [rbp+0x18],0x0
   14000b976:	movabs rbx,0x2b992ddfa232
   14000b980:	mov    rax,QWORD PTR [rip+0x6689]        # 0x140012010
   14000b987:	cmp    rax,rbx
   14000b98a:	jne    0x14000ba1f
   14000b990:	lea    rcx,[rbp+0x18]
   14000b994:	call   QWORD PTR [rip+0x196e]        # 0x14000d308
   14000b99a:	mov    rax,QWORD PTR [rbp+0x18]
   14000b99e:	mov    QWORD PTR [rbp+0x10],rax
   14000b9a2:	call   QWORD PTR [rip+0x1840]        # 0x14000d1e8
   14000b9a8:	mov    eax,eax
   14000b9aa:	xor    QWORD PTR [rbp+0x10],rax
   14000b9ae:	call   QWORD PTR [rip+0x182c]        # 0x14000d1e0
   14000b9b4:	mov    eax,eax
   14000b9b6:	xor    QWORD PTR [rbp+0x10],rax
   14000b9ba:	call   QWORD PTR [rip+0x1940]        # 0x14000d300
   14000b9c0:	mov    eax,eax
   14000b9c2:	shl    rax,0x18
   14000b9c6:	xor    QWORD PTR [rbp+0x10],rax
   14000b9ca:	call   QWORD PTR [rip+0x1930]        # 0x14000d300
   14000b9d0:	mov    eax,eax
   14000b9d2:	lea    rcx,[rbp+0x10]
   14000b9d6:	xor    rax,QWORD PTR [rbp+0x10]
   14000b9da:	xor    rax,rcx
   14000b9dd:	lea    rcx,[rbp+0x20]
   14000b9e1:	mov    QWORD PTR [rbp+0x10],rax
   14000b9e5:	call   QWORD PTR [rip+0x181d]        # 0x14000d208
   14000b9eb:	mov    eax,DWORD PTR [rbp+0x20]
   14000b9ee:	movabs rcx,0xffffffffffff
   14000b9f8:	shl    rax,0x20
   14000b9fc:	xor    rax,QWORD PTR [rbp+0x20]
   14000ba00:	xor    rax,QWORD PTR [rbp+0x10]
   14000ba04:	and    rax,rcx
   14000ba07:	movabs rcx,0x2b992ddfa233
   14000ba11:	cmp    rax,rbx
   14000ba14:	cmove  rax,rcx
   14000ba18:	mov    QWORD PTR [rip+0x65f1],rax        # 0x140012010
   14000ba1f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ba24:	not    rax
   14000ba27:	mov    QWORD PTR [rip+0x65ea],rax        # 0x140012018
   14000ba2e:	add    rsp,0x20
   14000ba32:	pop    rbp
   14000ba33:	ret    
   14000ba34:	int3   
   14000ba35:	int3   
   14000ba36:	int3   
   14000ba37:	int3   
   14000ba38:	int3   
   14000ba39:	int3   
   14000ba3a:	jmp    QWORD PTR [rip+0x1930]        # 0x14000d370
   14000ba40:	int3   
   14000ba41:	int3   
   14000ba42:	int3   
   14000ba43:	int3   
   14000ba44:	int3   
   14000ba45:	int3   
   14000ba46:	jmp    QWORD PTR [rip+0x191c]        # 0x14000d368
   14000ba4c:	int3   
   14000ba4d:	int3   
   14000ba4e:	int3   
   14000ba4f:	int3   
   14000ba50:	int3   
   14000ba51:	int3   
   14000ba52:	jmp    QWORD PTR [rip+0x1940]        # 0x14000d398
   14000ba58:	int3   
   14000ba59:	int3   
   14000ba5a:	int3   
   14000ba5b:	int3   
   14000ba5c:	int3   
   14000ba5d:	int3   
   14000ba5e:	jmp    QWORD PTR [rip+0x193c]        # 0x14000d3a0
   14000ba64:	int3   
   14000ba65:	int3   
   14000ba66:	int3   
   14000ba67:	int3   
   14000ba68:	int3   
   14000ba69:	int3   
   14000ba6a:	jmp    QWORD PTR [rip+0x1948]        # 0x14000d3b8
   14000ba70:	int3   
   14000ba71:	int3   
   14000ba72:	int3   
   14000ba73:	int3   
   14000ba74:	int3   
   14000ba75:	int3   
   14000ba76:	jmp    QWORD PTR [rip+0x1974]        # 0x14000d3f0
   14000ba7c:	int3   
   14000ba7d:	int3   
   14000ba7e:	int3   
   14000ba7f:	int3   
   14000ba80:	int3   
   14000ba81:	int3   
   14000ba82:	int3   
   14000ba83:	int3   
   14000ba84:	jmp    0x14000ba90
   14000ba89:	int3   
   14000ba8a:	int3   
   14000ba8b:	int3   
   14000ba8c:	int3   
   14000ba8d:	int3   
   14000ba8e:	int3   
   14000ba8f:	int3   
   14000ba90:	rex push rbx
   14000ba92:	sub    rsp,0x540
   14000ba99:	mov    rax,QWORD PTR [rip+0x6570]        # 0x140012010
   14000baa0:	xor    rax,rsp
   14000baa3:	mov    QWORD PTR [rsp+0x530],rax
   14000baab:	lea    rcx,[rsp+0x60]
   14000bab0:	call   QWORD PTR [rip+0x17a2]        # 0x14000d258
   14000bab6:	mov    rbx,QWORD PTR [rsp+0x158]
   14000babe:	lea    rdx,[rsp+0x40]
   14000bac3:	mov    rcx,rbx
   14000bac6:	xor    r8d,r8d
   14000bac9:	call   QWORD PTR [rip+0x1799]        # 0x14000d268
   14000bacf:	test   rax,rax
   14000bad2:	je     0x14000bb0d
   14000bad4:	and    QWORD PTR [rsp+0x38],0x0
   14000bada:	lea    rcx,[rsp+0x48]
   14000badf:	mov    rdx,QWORD PTR [rsp+0x40]
   14000bae4:	mov    r9,rax
   14000bae7:	mov    QWORD PTR [rsp+0x30],rcx
   14000baec:	mov    r8,rbx
   14000baef:	lea    rcx,[rsp+0x50]
   14000baf4:	mov    QWORD PTR [rsp+0x28],rcx
   14000baf9:	lea    rcx,[rsp+0x60]
   14000bafe:	mov    QWORD PTR [rsp+0x20],rcx
   14000bb03:	xor    ecx,ecx
   14000bb05:	call   QWORD PTR [rip+0x1755]        # 0x14000d260
   14000bb0b:	jmp    0x14000bb2d
   14000bb0d:	mov    rax,QWORD PTR [rsp+0x548]
   14000bb15:	mov    QWORD PTR [rsp+0x158],rax
   14000bb1d:	lea    rax,[rsp+0x548]
   14000bb25:	mov    QWORD PTR [rsp+0xf8],rax
   14000bb2d:	lea    rcx,[rip+0x1bfc]        # 0x14000d730
   14000bb34:	call   QWORD PTR [rip+0x15a6]        # 0x14000d0e0
   14000bb3a:	mov    rcx,QWORD PTR [rsp+0x530]
   14000bb42:	xor    rcx,rsp
   14000bb45:	call   0x14000b290
   14000bb4a:	add    rsp,0x540
   14000bb51:	pop    rbx
   14000bb52:	ret    
   14000bb53:	int3   
   14000bb54:	int3   
   14000bb55:	int3   
   14000bb56:	int3   
   14000bb57:	int3   
   14000bb58:	int3   
   14000bb59:	int3   
   14000bb5a:	jmp    QWORD PTR [rip+0x18a8]        # 0x14000d408
   14000bb60:	int3   
   14000bb61:	int3   
   14000bb62:	int3   
   14000bb63:	int3   
   14000bb64:	int3   
   14000bb65:	int3   
   14000bb66:	int3   
   14000bb67:	int3   
   14000bb68:	sub    rsp,0x28
   14000bb6c:	mov    r8,QWORD PTR [r9+0x38]
   14000bb70:	mov    rcx,rdx
   14000bb73:	mov    rdx,r9
   14000bb76:	call   0x14000bb8c
   14000bb7b:	mov    eax,0x1
   14000bb80:	add    rsp,0x28
   14000bb84:	ret    
   14000bb85:	int3   
   14000bb86:	int3   
   14000bb87:	int3   
   14000bb88:	int3   
   14000bb89:	int3   
   14000bb8a:	int3   
   14000bb8b:	int3   
   14000bb8c:	rex push rbx
   14000bb8e:	sub    rsp,0x20
   14000bb92:	mov    r11d,DWORD PTR [r8]
   14000bb95:	mov    rbx,rdx
   14000bb98:	and    r11d,0xfffffff8
   14000bb9c:	mov    r9,rcx
   14000bb9f:	test   BYTE PTR [r8],0x4
   14000bba3:	mov    r10,rcx
   14000bba6:	je     0x14000bbbb
   14000bba8:	mov    eax,DWORD PTR [r8+0x8]
   14000bbac:	movsxd r10,DWORD PTR [r8+0x4]
   14000bbb0:	neg    eax
   14000bbb2:	add    r10,rcx
   14000bbb5:	movsxd rcx,eax
   14000bbb8:	and    r10,rcx
   14000bbbb:	movsxd rax,r11d
   14000bbbe:	mov    rdx,QWORD PTR [rax+r10*1]
   14000bbc2:	mov    rax,QWORD PTR [rbx+0x10]
   14000bbc6:	mov    ecx,DWORD PTR [rax+0x8]
   14000bbc9:	add    rcx,QWORD PTR [rbx+0x8]
   14000bbcd:	test   BYTE PTR [rcx+0x3],0xf
   14000bbd1:	je     0x14000bbdf
   14000bbd3:	movzx  eax,BYTE PTR [rcx+0x3]
   14000bbd7:	and    eax,0xfffffff0
   14000bbda:	cdqe   
   14000bbdc:	add    r9,rax
   14000bbdf:	xor    r9,rdx
   14000bbe2:	mov    rcx,r9
   14000bbe5:	add    rsp,0x20
   14000bbe9:	pop    rbx
   14000bbea:	jmp    0x14000b290
   14000bbef:	int3   
   14000bbf0:	int3   
   14000bbf1:	int3   
   14000bbf2:	int3   
   14000bbf3:	int3   
   14000bbf4:	int3   
   14000bbf5:	int3   
   14000bbf6:	int3   
   14000bbf7:	int3   
   14000bbf8:	int3   
   14000bbf9:	int3   
   14000bbfa:	int3   
   14000bbfb:	int3   
   14000bbfc:	int3   
   14000bbfd:	int3   
   14000bbfe:	int3   
   14000bbff:	int3   
   14000bc00:	jmp    QWORD PTR [rip+0x1512]        # 0x14000d118
   14000bc06:	int3   
   14000bc07:	int3   
   14000bc08:	int3   
   14000bc09:	int3   
   14000bc0a:	int3   
   14000bc0b:	int3   
   14000bc0c:	int3   
   14000bc0d:	int3   
   14000bc0e:	int3   
   14000bc0f:	int3   
   14000bc10:	jmp    QWORD PTR [rip+0x157a]        # 0x14000d190
   14000bc16:	int3   
   14000bc17:	int3   
   14000bc18:	int3   
   14000bc19:	int3   
   14000bc1a:	int3   
   14000bc1b:	int3   
   14000bc1c:	jmp    QWORD PTR [rip+0x183e]        # 0x14000d460
   14000bc22:	int3   
   14000bc23:	int3   
   14000bc24:	int3   
   14000bc25:	int3   
   14000bc26:	int3   
   14000bc27:	int3   
   14000bc28:	mov    rax,rsp
   14000bc2b:	mov    QWORD PTR [rax+0x8],rbx
   14000bc2f:	mov    QWORD PTR [rax+0x10],rbp
   14000bc33:	mov    QWORD PTR [rax+0x18],rsi
   14000bc37:	mov    QWORD PTR [rax+0x20],rdi
   14000bc3b:	push   r14
   14000bc3d:	sub    rsp,0x20
   14000bc41:	mov    rbx,QWORD PTR [r9+0x38]
   14000bc45:	mov    rsi,rdx
   14000bc48:	mov    r14,r8
   14000bc4b:	mov    rbp,rcx
   14000bc4e:	mov    rdx,r9
   14000bc51:	mov    rcx,rsi
   14000bc54:	mov    rdi,r9
   14000bc57:	lea    r8,[rbx+0x4]
   14000bc5b:	call   0x14000bb8c
   14000bc60:	mov    r11d,DWORD PTR [rbx+0x4]
   14000bc64:	mov    r8d,0x1
   14000bc6a:	mov    r10d,DWORD PTR [rbp+0x4]
   14000bc6e:	mov    eax,r11d
   14000bc71:	and    eax,r8d
   14000bc74:	and    r11d,0x2
   14000bc78:	and    r10b,0x66
   14000bc7c:	cmove  r11d,eax
   14000bc80:	test   r11d,r11d
   14000bc83:	je     0x14000bc99
   14000bc85:	mov    r9,rdi
   14000bc88:	mov    r8,r14
   14000bc8b:	mov    rdx,rsi
   14000bc8e:	mov    rcx,rbp
   14000bc91:	call   0x14000bc1c
   14000bc96:	mov    r8d,eax
   14000bc99:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bc9e:	mov    eax,r8d
   14000bca1:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bca6:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bcab:	mov    rdi,QWORD PTR [rsp+0x48]
   14000bcb0:	add    rsp,0x20
   14000bcb4:	pop    r14
   14000bcb6:	ret    
   14000bcb7:	int3   
   14000bcb8:	int3   
   14000bcb9:	int3   
   14000bcba:	int3   
   14000bcbb:	int3   
   14000bcbc:	int3   
   14000bcbd:	int3   
   14000bcbe:	int3   
   14000bcbf:	int3   
   14000bcc0:	int3   
   14000bcc1:	int3   
   14000bcc2:	int3   
   14000bcc3:	int3   
   14000bcc4:	int3   
   14000bcc5:	int3   
   14000bcc6:	jmp    QWORD PTR [rip+0x17cc]        # 0x14000d498
   14000bccc:	int3   
   14000bccd:	int3   
   14000bcce:	int3   
   14000bccf:	int3   
   14000bcd0:	int3   
   14000bcd1:	int3   
   14000bcd2:	int3   
   14000bcd3:	int3   
   14000bcd4:	int3   
   14000bcd5:	int3   
   14000bcd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bce0:	jmp    rax
   14000bce2:	int3   
   14000bce3:	int3   
   14000bce4:	int3   
   14000bce5:	int3   
   14000bce6:	int3   
   14000bce7:	int3   
   14000bce8:	int3   
   14000bce9:	int3   
   14000bcea:	int3   
   14000bceb:	int3   
   14000bcec:	int3   
   14000bced:	int3   
   14000bcee:	int3   
   14000bcef:	int3   
   14000bcf0:	int3   
   14000bcf1:	int3   
   14000bcf2:	int3   
   14000bcf3:	int3   
   14000bcf4:	int3   
   14000bcf5:	int3   
   14000bcf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bd00:	sub    rsp,0x10
   14000bd04:	mov    QWORD PTR [rsp],r10
   14000bd08:	mov    QWORD PTR [rsp+0x8],r11
   14000bd0d:	xor    r11,r11
   14000bd10:	lea    r10,[rsp+0x18]
   14000bd15:	sub    r10,rax
   14000bd18:	cmovb  r10,r11
   14000bd1c:	mov    r11,QWORD PTR gs:0x10
   14000bd25:	cmp    r10,r11
   14000bd28:	jae    0x14000bd3f
   14000bd2a:	and    r10w,0xf000
   14000bd30:	lea    r11,[r11-0x1000]
   14000bd37:	test   BYTE PTR [r11],r11b
   14000bd3a:	cmp    r10,r11
   14000bd3d:	jne    0x14000bd30
   14000bd3f:	mov    r10,QWORD PTR [rsp]
   14000bd43:	mov    r11,QWORD PTR [rsp+0x8]
   14000bd48:	add    rsp,0x10
   14000bd4c:	ret    
   14000bd4d:	int3   
   14000bd4e:	int3   
   14000bd4f:	int3   
   14000bd50:	int3   
   14000bd51:	int3   
   14000bd52:	int3   
   14000bd53:	int3   
   14000bd54:	int3   
   14000bd55:	int3   
   14000bd56:	mov    rcx,QWORD PTR [rdx+0x40]
   14000bd5d:	jmp    0x140003168
   14000bd62:	int3   
   14000bd63:	int3   
   14000bd64:	int3   
   14000bd65:	int3   
   14000bd66:	int3   
   14000bd67:	int3   
   14000bd68:	mov    rcx,QWORD PTR [rdx+0x40]
   14000bd6f:	add    rcx,0x8
   14000bd73:	jmp    0x1400031a8
   14000bd78:	mov    rcx,QWORD PTR [rdx+0x40]
   14000bd7f:	add    rcx,0x20
   14000bd83:	jmp    0x1400031fc
   14000bd88:	mov    rcx,QWORD PTR [rdx+0x40]
   14000bd8f:	jmp    0x140003168
   14000bd94:	int3   
   14000bd95:	int3   
   14000bd96:	int3   
   14000bd97:	int3   
   14000bd98:	int3   
   14000bd99:	int3   
   14000bd9a:	rex push rbp
   14000bd9c:	sub    rsp,0x20
   14000bda0:	mov    rbp,rdx
   14000bda3:	mov    rax,QWORD PTR [rcx]
   14000bda6:	xor    ecx,ecx
   14000bda8:	cmp    DWORD PTR [rax],0xc0000017
   14000bdae:	sete   cl
   14000bdb1:	mov    eax,ecx
   14000bdb3:	add    rsp,0x20
   14000bdb7:	pop    rbp
   14000bdb8:	ret    
   14000bdb9:	int3   
   14000bdba:	int3   
   14000bdbb:	int3   
   14000bdbc:	int3   
   14000bdbd:	int3   
   14000bdbe:	int3   
   14000bdbf:	int3   
   14000bdc0:	mov    QWORD PTR [rsp+0x10],rdx
   14000bdc5:	push   rbp
   14000bdc6:	sub    rsp,0x20
   14000bdca:	mov    rbp,rdx
   14000bdcd:	lea    rax,[rip+0xffffffffffff76bc]        # 0x140003490
   14000bdd4:	add    rsp,0x20
   14000bdd8:	pop    rbp
   14000bdd9:	ret    
   14000bdda:	int3   
   14000bddb:	lea    rcx,[rdx+0x40]
   14000bde2:	jmp    0x1400033e4
   14000bde7:	mov    QWORD PTR [rsp+0x10],rdx
   14000bdec:	push   rbp
   14000bded:	sub    rsp,0x20
   14000bdf1:	mov    rbp,rdx
   14000bdf4:	lea    rax,[rip+0xffffffffffff770b]        # 0x140003506
   14000bdfb:	add    rsp,0x20
   14000bdff:	pop    rbp
   14000be00:	ret    
   14000be01:	int3   
   14000be02:	lea    rcx,[rdx+0xa8]
   14000be09:	jmp    0x1400033e4
   14000be0e:	int3   
   14000be0f:	int3   
   14000be10:	int3   
   14000be11:	int3   
   14000be12:	int3   
   14000be13:	int3   
   14000be14:	lea    rcx,[rdx+0x48]
   14000be1b:	jmp    0x140003ce0
   14000be20:	int3   
   14000be21:	int3   
   14000be22:	int3   
   14000be23:	int3   
   14000be24:	int3   
   14000be25:	int3   
   14000be26:	lea    rcx,[rdx+0x20]
   14000be2d:	jmp    0x1400037c0
   14000be32:	lea    rcx,[rdx+0x38]
   14000be39:	jmp    0x140003ce0
   14000be3e:	int3   
   14000be3f:	int3   
   14000be40:	int3   
   14000be41:	int3   
   14000be42:	int3   
   14000be43:	int3   
   14000be44:	lea    rcx,[rdx+0x80]
   14000be4b:	jmp    0x140003748
   14000be50:	mov    QWORD PTR [rsp+0x10],rdx
   14000be55:	push   rbp
   14000be56:	sub    rsp,0x30
   14000be5a:	mov    rbp,rdx
   14000be5d:	lea    rax,[rip+0xffffffffffff8021]        # 0x140003e85
   14000be64:	add    rsp,0x30
   14000be68:	pop    rbp
   14000be69:	ret    
   14000be6a:	int3   
   14000be6b:	lea    rcx,[rdx+0x80]
   14000be72:	jmp    0x140003748
   14000be77:	mov    QWORD PTR [rsp+0x10],rdx
   14000be7c:	push   rbp
   14000be7d:	sub    rsp,0x30
   14000be81:	mov    rbp,rdx
   14000be84:	lea    rax,[rip+0xffffffffffff81eb]        # 0x140004076
   14000be8b:	add    rsp,0x30
   14000be8f:	pop    rbp
   14000be90:	ret    
   14000be91:	int3   
   14000be92:	int3   
   14000be93:	int3   
   14000be94:	int3   
   14000be95:	int3   
   14000be96:	int3   
   14000be97:	int3   
   14000be98:	lea    rcx,[rdx+0x90]
   14000be9f:	jmp    0x14000444c
   14000bea4:	lea    rcx,[rdx+0xa8]
   14000beab:	jmp    0x14000444c
   14000beb0:	int3   
   14000beb1:	int3   
   14000beb2:	int3   
   14000beb3:	int3   
   14000beb4:	int3   
   14000beb5:	int3   
   14000beb6:	lea    rcx,[rdx+0x60]
   14000bebd:	jmp    0x140003ce0
   14000bec2:	lea    rcx,[rdx+0x70]
   14000bec9:	jmp    0x140003748
   14000bece:	mov    QWORD PTR [rsp+0x10],rdx
   14000bed3:	push   rbp
   14000bed4:	sub    rsp,0x30
   14000bed8:	mov    rbp,rdx
   14000bedb:	lea    rax,[rip+0xffffffffffff92d9]        # 0x1400051bb
   14000bee2:	add    rsp,0x30
   14000bee6:	pop    rbp
   14000bee7:	ret    
   14000bee8:	int3   
   14000bee9:	int3   
   14000beea:	int3   
   14000beeb:	int3   
   14000beec:	int3   
   14000beed:	int3   
   14000beee:	int3   
   14000beef:	lea    rcx,[rdx+0x30]
   14000bef6:	jmp    0x1400060ac
   14000befb:	rex push rbp
   14000befd:	sub    rsp,0x20
   14000bf01:	mov    rbp,rdx
   14000bf04:	mov    eax,DWORD PTR [rbp+0x20]
   14000bf07:	and    eax,0x1
   14000bf0a:	test   eax,eax
   14000bf0c:	je     0x14000bf1b
   14000bf0e:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14000bf12:	lea    rcx,[rbp+0x58]
   14000bf16:	call   0x1400060ac
   14000bf1b:	add    rsp,0x20
   14000bf1f:	pop    rbp
   14000bf20:	ret    
   14000bf21:	rex push rbp
   14000bf23:	sub    rsp,0x20
   14000bf27:	mov    rbp,rdx
   14000bf2a:	mov    eax,DWORD PTR [rbp+0x20]
   14000bf2d:	and    eax,0x2
   14000bf30:	test   eax,eax
   14000bf32:	je     0x14000bf44
   14000bf34:	and    DWORD PTR [rbp+0x20],0xfffffffd
   14000bf38:	lea    rcx,[rbp+0xa8]
   14000bf3f:	call   0x1400060ac
   14000bf44:	add    rsp,0x20
   14000bf48:	pop    rbp
   14000bf49:	ret    
   14000bf4a:	rex push rbp
   14000bf4c:	sub    rsp,0x20
   14000bf50:	mov    rbp,rdx
   14000bf53:	mov    eax,DWORD PTR [rbp+0x20]
   14000bf56:	and    eax,0x4
   14000bf59:	test   eax,eax
   14000bf5b:	je     0x14000bf6d
   14000bf5d:	and    DWORD PTR [rbp+0x20],0xfffffffb
   14000bf61:	lea    rcx,[rbp+0x80]
   14000bf68:	call   0x1400060ac
   14000bf6d:	add    rsp,0x20
   14000bf71:	pop    rbp
   14000bf72:	ret    
   14000bf73:	mov    QWORD PTR [rsp+0x10],rdx
   14000bf78:	push   rbp
   14000bf79:	sub    rsp,0x20
   14000bf7d:	mov    rbp,rdx
   14000bf80:	mov    DWORD PTR [rbp+0x20],0x8007000e
   14000bf87:	lea    rax,[rip+0xffffffffffff9814]        # 0x1400057a2
   14000bf8e:	add    rsp,0x20
   14000bf92:	pop    rbp
   14000bf93:	ret    
   14000bf94:	int3   
   14000bf95:	int3   
   14000bf96:	int3   
   14000bf97:	int3   
   14000bf98:	int3   
   14000bf99:	int3   
   14000bf9a:	int3   
   14000bf9b:	lea    rcx,[rdx+0x68]
   14000bfa2:	jmp    0x140006068
   14000bfa7:	lea    rcx,[rdx+0x48]
   14000bfae:	jmp    0x140006068
   14000bfb3:	lea    rcx,[rdx+0x48]
   14000bfba:	jmp    0x14000650c
   14000bfbf:	mov    QWORD PTR [rsp+0x10],rdx
   14000bfc4:	push   rbp
   14000bfc5:	sub    rsp,0x30
   14000bfc9:	mov    rbp,rdx
   14000bfcc:	mov    DWORD PTR [rbp+0xe0],0x8007000e
   14000bfd6:	lea    rax,[rip+0xffffffffffff9f23]        # 0x140005f00
   14000bfdd:	add    rsp,0x30
   14000bfe1:	pop    rbp
   14000bfe2:	ret    
   14000bfe3:	int3   
   14000bfe4:	lea    rcx,[rdx+0xe8]
   14000bfeb:	jmp    0x1400058f8
   14000bff0:	lea    rcx,[rdx+0x68]
   14000bff7:	jmp    0x14000650c
   14000bffc:	int3   
   14000bffd:	int3   
   14000bffe:	int3   
   14000bfff:	int3   
   14000c000:	int3   
   14000c001:	int3   
   14000c002:	mov    rcx,QWORD PTR [rdx+0x40]
   14000c009:	jmp    0x14000650c
   14000c00e:	int3   
   14000c00f:	int3   
   14000c010:	int3   
   14000c011:	int3   
   14000c012:	int3   
   14000c013:	int3   
   14000c014:	mov    QWORD PTR [rsp+0x10],rdx
   14000c019:	push   rbp
   14000c01a:	sub    rsp,0x20
   14000c01e:	mov    rbp,rdx
   14000c021:	mov    DWORD PTR [rbp+0x58],0x8007000e
   14000c028:	lea    rax,[rip+0xffffffffffffa264]        # 0x140006293
   14000c02f:	add    rsp,0x20
   14000c033:	pop    rbp
   14000c034:	ret    
   14000c035:	int3   
   14000c036:	int3   
   14000c037:	int3   
   14000c038:	int3   
   14000c039:	int3   
   14000c03a:	int3   
   14000c03b:	int3   
   14000c03c:	mov    QWORD PTR [rsp+0x10],rdx
   14000c041:	push   rbp
   14000c042:	sub    rsp,0x20
   14000c046:	mov    rbp,rdx
   14000c049:	mov    rcx,QWORD PTR [rbp+0x98]
   14000c050:	mov    QWORD PTR [rbp+0x98],rcx
   14000c057:	xor    eax,eax
   14000c059:	add    rcx,0x1
   14000c05d:	je     0x14000c094
   14000c05f:	movabs rax,0x7fffffffffffffff
   14000c069:	cmp    rcx,rax
   14000c06c:	ja     0x14000c07b
   14000c06e:	add    rcx,rcx
   14000c071:	call   0x14000acbc
   14000c076:	test   rax,rax
   14000c079:	jne    0x14000c094
   14000c07b:	lea    rcx,[rbp+0x40]
   14000c07f:	call   0x140005514
   14000c084:	lea    rdx,[rip+0x48f5]        # 0x140010980
   14000c08b:	lea    rcx,[rbp+0x40]
   14000c08f:	call   0x14000b740
   14000c094:	mov    QWORD PTR [rbp+0xa8],rax
   14000c09b:	lea    rax,[rip+0xffffffffffffa821]        # 0x1400068c3
   14000c0a2:	add    rsp,0x20
   14000c0a6:	pop    rbp
   14000c0a7:	ret    
   14000c0a8:	int3   
   14000c0a9:	mov    QWORD PTR [rsp+0x10],rdx
   14000c0ae:	push   rbp
   14000c0af:	sub    rsp,0x20
   14000c0b3:	mov    rbp,rdx
   14000c0b6:	xor    r8d,r8d
   14000c0b9:	mov    dl,0x1
   14000c0bb:	mov    rcx,QWORD PTR [rbp+0x90]
   14000c0c2:	call   0x14000649c
   14000c0c7:	xor    edx,edx
   14000c0c9:	xor    ecx,ecx
   14000c0cb:	call   0x14000b740
   14000c0d0:	nop
   14000c0d1:	int3   
   14000c0d2:	int3   
   14000c0d3:	int3   
   14000c0d4:	int3   
   14000c0d5:	int3   
   14000c0d6:	int3   
   14000c0d7:	mov    QWORD PTR [rsp+0x10],rdx
   14000c0dc:	push   rbp
   14000c0dd:	sub    rsp,0x20
   14000c0e1:	mov    rbp,rdx
   14000c0e4:	mov    rdx,QWORD PTR [rbp+0x68]
   14000c0e8:	mov    rcx,QWORD PTR [rbp+0x50]
   14000c0ec:	call   0x140006e9c
   14000c0f1:	xor    edx,edx
   14000c0f3:	xor    ecx,ecx
   14000c0f5:	call   0x14000b740
   14000c0fa:	nop
   14000c0fb:	int3   
   14000c0fc:	int3   
   14000c0fd:	int3   
   14000c0fe:	int3   
   14000c0ff:	int3   
   14000c100:	int3   
   14000c101:	rex push rbp
   14000c103:	sub    rsp,0x20
   14000c107:	mov    rbp,rdx
   14000c10a:	mov    eax,DWORD PTR [rbp+0x20]
   14000c10d:	and    eax,0x1
   14000c110:	test   eax,eax
   14000c112:	je     0x14000c121
   14000c114:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14000c118:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c11c:	call   0x1400060ac
   14000c121:	add    rsp,0x20
   14000c125:	pop    rbp
   14000c126:	ret    
   14000c127:	int3   
   14000c128:	int3   
   14000c129:	int3   
   14000c12a:	int3   
   14000c12b:	int3   
   14000c12c:	int3   
   14000c12d:	rex push rbp
   14000c12f:	sub    rsp,0x20
   14000c133:	mov    rbp,rdx
   14000c136:	mov    rdx,QWORD PTR [rbp+0x88]
   14000c13d:	mov    rcx,QWORD PTR [rbp+0x28]
   14000c141:	call   0x1400055b0
   14000c146:	add    rsp,0x20
   14000c14a:	pop    rbp
   14000c14b:	ret    
   14000c14c:	mov    rcx,QWORD PTR [rdx+0x28]
   14000c153:	jmp    0x1400060ac
   14000c158:	mov    QWORD PTR [rsp+0x10],rdx
   14000c15d:	push   rbp
   14000c15e:	sub    rsp,0x20
   14000c162:	mov    rbp,rdx
   14000c165:	mov    rdx,QWORD PTR [rbp+0x80]
   14000c16c:	call   0x1400067f4
   14000c171:	xor    edx,edx
   14000c173:	xor    ecx,ecx
   14000c175:	call   0x14000b740
   14000c17a:	nop
   14000c17b:	int3   
   14000c17c:	int3   
   14000c17d:	int3   
   14000c17e:	int3   
   14000c17f:	int3   
   14000c180:	int3   
   14000c181:	mov    rcx,QWORD PTR [rdx+0x40]
   14000c188:	jmp    0x140007468
   14000c18d:	mov    rcx,QWORD PTR [rdx+0x40]
   14000c194:	jmp    0x14000650c
   14000c199:	int3   
   14000c19a:	int3   
   14000c19b:	int3   
   14000c19c:	int3   
   14000c19d:	int3   
   14000c19e:	int3   
   14000c19f:	mov    rcx,QWORD PTR [rdx+0x88]
   14000c1a6:	rex.W jmp QWORD PTR [rip+0x12bb]        # 0x14000d468
   14000c1ad:	mov    rcx,QWORD PTR [rdx+0x88]
   14000c1b4:	jmp    0x140007468
   14000c1b9:	mov    QWORD PTR [rsp+0x10],rdx
   14000c1be:	push   rbp
   14000c1bf:	sub    rsp,0x20
   14000c1c3:	mov    rbp,rdx
   14000c1c6:	lea    rax,[rip+0xffffffffffffbd9c]        # 0x140007f69
   14000c1cd:	add    rsp,0x20
   14000c1d1:	pop    rbp
   14000c1d2:	ret    
   14000c1d3:	int3   
   14000c1d4:	int3   
   14000c1d5:	int3   
   14000c1d6:	int3   
   14000c1d7:	int3   
   14000c1d8:	int3   
   14000c1d9:	int3   
   14000c1da:	lea    rcx,[rdx+0x30]
   14000c1e1:	jmp    0x140006068
   14000c1e6:	rex push rbp
   14000c1e8:	sub    rsp,0x20
   14000c1ec:	mov    rbp,rdx
   14000c1ef:	mov    eax,DWORD PTR [rbp+0x20]
   14000c1f2:	and    eax,0x1
   14000c1f5:	test   eax,eax
   14000c1f7:	je     0x14000c206
   14000c1f9:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14000c1fd:	mov    rcx,QWORD PTR [rbp+0x78]
   14000c201:	call   0x140006068
   14000c206:	add    rsp,0x20
   14000c20a:	pop    rbp
   14000c20b:	ret    
   14000c20c:	lea    rcx,[rdx+0x30]
   14000c213:	jmp    0x14000650c
   14000c218:	int3   
   14000c219:	int3   
   14000c21a:	int3   
   14000c21b:	int3   
   14000c21c:	int3   
   14000c21d:	int3   
   14000c21e:	mov    rcx,QWORD PTR [rdx+0x50]
   14000c225:	jmp    0x14000650c
   14000c22a:	int3   
   14000c22b:	int3   
   14000c22c:	int3   
   14000c22d:	int3   
   14000c22e:	int3   
   14000c22f:	int3   
   14000c230:	mov    rcx,QWORD PTR [rdx+0x40]
   14000c237:	jmp    0x1400088e8
   14000c23c:	int3   
   14000c23d:	int3   
   14000c23e:	int3   
   14000c23f:	int3   
   14000c240:	int3   
   14000c241:	int3   
   14000c242:	mov    rcx,QWORD PTR [rdx+0x50]
   14000c249:	add    rcx,0x30
   14000c24d:	jmp    0x1400058f8
   14000c252:	mov    rcx,QWORD PTR [rdx+0x50]
   14000c259:	add    rcx,0x38
   14000c25d:	jmp    0x1400058f8
   14000c262:	int3   
   14000c263:	int3   
   14000c264:	int3   
   14000c265:	int3   
   14000c266:	int3   
   14000c267:	int3   
   14000c268:	mov    rcx,QWORD PTR [rdx+0x88]
   14000c26f:	rex.W jmp QWORD PTR [rip+0x11f2]        # 0x14000d468
   14000c276:	mov    rcx,QWORD PTR [rdx+0x88]
   14000c27d:	add    rcx,0x30
   14000c281:	jmp    0x1400058f8
   14000c286:	mov    rcx,QWORD PTR [rdx+0x88]
   14000c28d:	add    rcx,0x38
   14000c291:	jmp    0x1400058f8
   14000c296:	mov    rcx,QWORD PTR [rdx+0x88]
   14000c29d:	jmp    0x1400088e8
   14000c2a2:	mov    QWORD PTR [rsp+0x10],rdx
   14000c2a7:	push   rbp
   14000c2a8:	sub    rsp,0x20
   14000c2ac:	mov    rbp,rdx
   14000c2af:	lea    rax,[rip+0xffffffffffffc7bc]        # 0x140008a72
   14000c2b6:	add    rsp,0x20
   14000c2ba:	pop    rbp
   14000c2bb:	ret    
   14000c2bc:	int3   
   14000c2bd:	int3   
   14000c2be:	int3   
   14000c2bf:	int3   
   14000c2c0:	int3   
   14000c2c1:	int3   
   14000c2c2:	int3   
   14000c2c3:	mov    QWORD PTR [rsp+0x10],rdx
   14000c2c8:	push   rbp
   14000c2c9:	sub    rsp,0x20
   14000c2cd:	mov    rbp,rdx
   14000c2d0:	lea    rax,[rip+0xffffffffffffc97d]        # 0x140008c54
   14000c2d7:	add    rsp,0x20
   14000c2db:	pop    rbp
   14000c2dc:	ret    
   14000c2dd:	int3   
   14000c2de:	int3   
   14000c2df:	int3   
   14000c2e0:	int3   
   14000c2e1:	int3   
   14000c2e2:	int3   
   14000c2e3:	int3   
   14000c2e4:	mov    rcx,QWORD PTR [rdx+0x28]
   14000c2eb:	rex.W jmp QWORD PTR [rip+0x1176]        # 0x14000d468
   14000c2f2:	mov    QWORD PTR [rsp+0x10],rdx
   14000c2f7:	push   rbp
   14000c2f8:	sub    rsp,0x20
   14000c2fc:	mov    rbp,rdx
   14000c2ff:	lea    rax,[rip+0xffffffffffffcb72]        # 0x140008e78
   14000c306:	add    rsp,0x20
   14000c30a:	pop    rbp
   14000c30b:	ret    
   14000c30c:	int3   
   14000c30d:	int3   
   14000c30e:	int3   
   14000c30f:	int3   
   14000c310:	int3   
   14000c311:	int3   
   14000c312:	int3   
   14000c313:	mov    rcx,QWORD PTR [rdx+0x40]
   14000c31a:	jmp    0x1400091a8
   14000c31f:	int3   
   14000c320:	int3   
   14000c321:	int3   
   14000c322:	int3   
   14000c323:	int3   
   14000c324:	int3   
   14000c325:	mov    rcx,QWORD PTR [rdx+0x88]
   14000c32c:	rex.W jmp QWORD PTR [rip+0x1135]        # 0x14000d468
   14000c333:	mov    rcx,QWORD PTR [rdx+0x88]
   14000c33a:	jmp    0x1400091a8
   14000c33f:	mov    QWORD PTR [rsp+0x10],rdx
   14000c344:	push   rbp
   14000c345:	sub    rsp,0x20
   14000c349:	mov    rbp,rdx
   14000c34c:	lea    rax,[rip+0xffffffffffffcf2d]        # 0x140009280
   14000c353:	add    rsp,0x20
   14000c357:	pop    rbp
   14000c358:	ret    
   14000c359:	int3   
   14000c35a:	int3   
   14000c35b:	int3   
   14000c35c:	int3   
   14000c35d:	int3   
   14000c35e:	int3   
   14000c35f:	int3   
   14000c360:	lea    rcx,[rdx+0x28]
   14000c367:	jmp    0x1400060ac
   14000c36c:	int3   
   14000c36d:	int3   
   14000c36e:	int3   
   14000c36f:	int3   
   14000c370:	int3   
   14000c371:	int3   
   14000c372:	lea    rcx,[rdx+0x30]
   14000c379:	jmp    0x14000a10c
   14000c37e:	int3   
   14000c37f:	int3   
   14000c380:	int3   
   14000c381:	int3   
   14000c382:	int3   
   14000c383:	int3   
   14000c384:	rex push rbp
   14000c386:	sub    rsp,0x20
   14000c38a:	mov    rbp,rdx
   14000c38d:	mov    eax,DWORD PTR [rbp+0x38]
   14000c390:	and    eax,0x1
   14000c393:	test   eax,eax
   14000c395:	je     0x14000c3a4
   14000c397:	and    DWORD PTR [rbp+0x38],0xfffffffe
   14000c39b:	mov    rcx,QWORD PTR [rbp+0x60]
   14000c39f:	call   0x140006068
   14000c3a4:	add    rsp,0x20
   14000c3a8:	pop    rbp
   14000c3a9:	ret    
   14000c3aa:	lea    rcx,[rdx+0x70]
   14000c3b1:	jmp    0x14000a10c
   14000c3b6:	mov    rcx,QWORD PTR [rdx+0x30]
   14000c3bd:	jmp    0x14000a10c
   14000c3c2:	lea    rcx,[rdx+0xb0]
   14000c3c9:	jmp    0x14000a178
   14000c3ce:	lea    rcx,[rdx+0x90]
   14000c3d5:	jmp    0x14000a10c
   14000c3da:	mov    rcx,QWORD PTR [rdx+0x30]
   14000c3e1:	jmp    0x14000a10c
   14000c3e6:	lea    rcx,[rdx+0xd8]
   14000c3ed:	jmp    0x14000a178
   14000c3f2:	lea    rcx,[rdx+0x40]
   14000c3f9:	jmp    0x140006068
   14000c3fe:	lea    rcx,[rdx+0x40]
   14000c405:	jmp    0x14000650c
   14000c40a:	lea    rcx,[rdx+0xd8]
   14000c411:	jmp    0x14000a220
   14000c416:	lea    rcx,[rdx+0xb0]
   14000c41d:	jmp    0x14000a220
   14000c422:	int3   
   14000c423:	int3   
   14000c424:	int3   
   14000c425:	int3   
   14000c426:	int3   
   14000c427:	int3   
   14000c428:	rex push rbp
   14000c42a:	sub    rsp,0x20
   14000c42e:	mov    rbp,rdx
   14000c431:	mov    eax,DWORD PTR [rbp+0x20]
   14000c434:	and    eax,0x1
   14000c437:	test   eax,eax
   14000c439:	je     0x14000c448
   14000c43b:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14000c43f:	mov    rcx,QWORD PTR [rbp+0x30]
   14000c443:	call   0x140006068
   14000c448:	add    rsp,0x20
   14000c44c:	pop    rbp
   14000c44d:	ret    
   14000c44e:	lea    rcx,[rdx+0xa8]
   14000c455:	jmp    0x1400060ac
   14000c45a:	lea    rcx,[rdx+0x58]
   14000c461:	jmp    0x1400060ac
   14000c466:	lea    rcx,[rdx+0x80]
   14000c46d:	jmp    0x1400060ac
   14000c472:	lea    rcx,[rdx+0x120]
   14000c479:	jmp    0x1400060ac
   14000c47e:	lea    rcx,[rdx+0xd0]
   14000c485:	jmp    0x1400060ac
   14000c48a:	lea    rcx,[rdx+0x80]
   14000c491:	jmp    0x1400060ac
   14000c496:	lea    rcx,[rdx+0xd0]
   14000c49d:	jmp    0x1400060ac
   14000c4a2:	lea    rcx,[rdx+0xd0]
   14000c4a9:	jmp    0x1400060ac
   14000c4ae:	lea    rcx,[rdx+0xd0]
   14000c4b5:	jmp    0x14000a044
   14000c4ba:	lea    rcx,[rdx+0xd0]
   14000c4c1:	jmp    0x1400060ac
   14000c4c6:	lea    rcx,[rdx+0xd0]
   14000c4cd:	jmp    0x1400060ac
   14000c4d2:	int3   
   14000c4d3:	int3   
   14000c4d4:	int3   
   14000c4d5:	int3   
   14000c4d6:	int3   
   14000c4d7:	int3   
   14000c4d8:	mov    rcx,QWORD PTR [rdx+0x40]
   14000c4df:	jmp    0x14000a220
   14000c4e4:	int3   
   14000c4e5:	int3   
   14000c4e6:	int3   
   14000c4e7:	int3   
   14000c4e8:	int3   
   14000c4e9:	int3   
   14000c4ea:	mov    rcx,QWORD PTR [rdx+0x40]
   14000c4f1:	jmp    0x1400060ac
   14000c4f6:	int3   
   14000c4f7:	int3   
   14000c4f8:	int3   
   14000c4f9:	int3   
   14000c4fa:	int3   
   14000c4fb:	int3   
   14000c4fc:	mov    QWORD PTR [rsp+0x10],rdx
   14000c501:	push   rbp
   14000c502:	sub    rsp,0x20
   14000c506:	mov    rbp,rdx
   14000c509:	xor    r8d,r8d
   14000c50c:	mov    dl,0x1
   14000c50e:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c512:	call   0x14000649c
   14000c517:	xor    edx,edx
   14000c519:	xor    ecx,ecx
   14000c51b:	call   0x14000b740
   14000c520:	nop
   14000c521:	int3   
   14000c522:	int3   
   14000c523:	int3   
   14000c524:	int3   
   14000c525:	int3   
   14000c526:	int3   
   14000c527:	rex push rbp
   14000c529:	sub    rsp,0x20
   14000c52d:	mov    rbp,rdx
   14000c530:	mov    rdx,QWORD PTR [rbp+0x88]
   14000c537:	mov    rcx,QWORD PTR [rbp+0x28]
   14000c53b:	call   0x1400055b0
   14000c540:	add    rsp,0x20
   14000c544:	pop    rbp
   14000c545:	ret    
   14000c546:	mov    rcx,QWORD PTR [rdx+0x28]
   14000c54d:	jmp    0x1400060ac
   14000c552:	mov    QWORD PTR [rsp+0x10],rdx
   14000c557:	push   rbp
   14000c558:	sub    rsp,0x20
   14000c55c:	mov    rbp,rdx
   14000c55f:	mov    rdx,QWORD PTR [rbp+0x80]
   14000c566:	call   0x1400067f4
   14000c56b:	xor    edx,edx
   14000c56d:	xor    ecx,ecx
   14000c56f:	call   0x14000b740
   14000c574:	nop
   14000c575:	int3   
   14000c576:	int3   
   14000c577:	int3   
   14000c578:	int3   
   14000c579:	int3   
   14000c57a:	int3   
   14000c57b:	rex push rbp
   14000c57d:	sub    rsp,0x20
   14000c581:	mov    rbp,rdx
   14000c584:	mov    rdx,QWORD PTR [rbp+0x88]
   14000c58b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000c58f:	call   0x1400055b0
   14000c594:	add    rsp,0x20
   14000c598:	pop    rbp
   14000c599:	ret    
   14000c59a:	mov    rcx,QWORD PTR [rdx+0x28]
   14000c5a1:	jmp    0x1400060ac
   14000c5a6:	mov    QWORD PTR [rsp+0x10],rdx
   14000c5ab:	push   rbp
   14000c5ac:	sub    rsp,0x20
   14000c5b0:	mov    rbp,rdx
   14000c5b3:	mov    rdx,QWORD PTR [rbp+0x80]
   14000c5ba:	call   0x1400067f4
   14000c5bf:	xor    edx,edx
   14000c5c1:	xor    ecx,ecx
   14000c5c3:	call   0x14000b740
   14000c5c8:	nop
   14000c5c9:	int3   
   14000c5ca:	int3   
   14000c5cb:	int3   
   14000c5cc:	int3   
   14000c5cd:	int3   
   14000c5ce:	int3   
   14000c5cf:	rex push rbp
   14000c5d1:	sub    rsp,0x20
   14000c5d5:	mov    rbp,rdx
   14000c5d8:	mov    rax,QWORD PTR [rcx]
   14000c5db:	mov    rdx,rcx
   14000c5de:	mov    ecx,DWORD PTR [rax]
   14000c5e0:	call   0x14000b7be
   14000c5e5:	nop
   14000c5e6:	add    rsp,0x20
   14000c5ea:	pop    rbp
   14000c5eb:	ret    
   14000c5ec:	int3   
   14000c5ed:	int3   
   14000c5ee:	int3   
   14000c5ef:	int3   
   14000c5f0:	int3   
   14000c5f1:	int3   
   14000c5f2:	int3   
   14000c5f3:	rex push rbp
   14000c5f5:	sub    rsp,0x20
   14000c5f9:	mov    rbp,rdx
   14000c5fc:	mov    ecx,0x8
   14000c601:	call   0x14000ba5e
   14000c606:	nop
   14000c607:	add    rsp,0x20
   14000c60b:	pop    rbp
   14000c60c:	ret    
   14000c60d:	int3   
   14000c60e:	int3   
   14000c60f:	int3   
   14000c610:	int3   
   14000c611:	int3   
   14000c612:	int3   
   14000c613:	int3   
   14000c614:	int3   
   14000c615:	int3   
   14000c616:	int3   
   14000c617:	int3   
   14000c618:	int3   
   14000c619:	int3   
   14000c61a:	int3   
   14000c61b:	int3   
   14000c61c:	int3   
   14000c61d:	int3   
   14000c61e:	int3   
   14000c61f:	int3   
   14000c620:	rex push rbp
   14000c622:	sub    rsp,0x20
   14000c626:	mov    rbp,rdx
   14000c629:	mov    rax,QWORD PTR [rcx]
   14000c62c:	xor    ecx,ecx
   14000c62e:	cmp    DWORD PTR [rax],0xc0000005
   14000c634:	sete   cl
   14000c637:	mov    eax,ecx
   14000c639:	add    rsp,0x20
   14000c63d:	pop    rbp
   14000c63e:	ret    
   14000c63f:	int3   
   14000c640:	int3   
   14000c641:	int3   
   14000c642:	int3   
   14000c643:	int3   
   14000c644:	int3   
   14000c645:	int3   
   14000c646:	int3   
   14000c647:	int3   
   14000c648:	int3   
   14000c649:	int3   
   14000c64a:	int3   
   14000c64b:	int3   
   14000c64c:	int3   
   14000c64d:	int3   
   14000c64e:	int3   
   14000c64f:	int3   
   14000c650:	mov    QWORD PTR [rsp+0x8],rbx
   14000c655:	push   rdi
   14000c656:	sub    rsp,0x20
   14000c65a:	mov    rdi,QWORD PTR [rip+0x660f]        # 0x140012c70
   14000c661:	mov    rax,QWORD PTR [rip+0x6610]        # 0x140012c78
   14000c668:	jmp    0x14000c68e
   14000c66a:	mov    rbx,QWORD PTR [rdi]
   14000c66d:	test   rbx,rbx
   14000c670:	je     0x14000c68a
   14000c672:	mov    rbx,QWORD PTR [rbx+0x40]
   14000c676:	mov    rcx,rbx
   14000c679:	call   QWORD PTR [rip+0xe29]        # 0x14000d4a8
   14000c67f:	xor    ecx,ecx
   14000c681:	call   rbx
   14000c683:	mov    rax,QWORD PTR [rip+0x65ee]        # 0x140012c78
   14000c68a:	add    rdi,0x8
   14000c68e:	cmp    rdi,rax
   14000c691:	jb     0x14000c66a
   14000c693:	lea    rcx,[rip+0x6466]        # 0x140012b00
   14000c69a:	call   0x140003020
   14000c69f:	call   0x140002f84
   14000c6a4:	cmp    BYTE PTR [rip+0x64b7],0x0        # 0x140012b62
   14000c6ab:	je     0x14000c6b3
   14000c6ad:	call   QWORD PTR [rip+0x9ed]        # 0x14000d0a0
   14000c6b3:	lea    rcx,[rip+0x6446]        # 0x140012b00
   14000c6ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c6bf:	add    rsp,0x20
   14000c6c3:	pop    rdi
   14000c6c4:	jmp    0x140003020
   14000c6c9:	int3   
   14000c6ca:	int3   
   14000c6cb:	int3   
   14000c6cc:	int3   
   14000c6cd:	int3   
   14000c6ce:	int3   
   14000c6cf:	int3   
   14000c6d0:	sub    rsp,0x28
   14000c6d4:	lea    rcx,[rip+0x64fd]        # 0x140012bd8
   14000c6db:	call   QWORD PTR [rip+0xbf7]        # 0x14000d2d8
   14000c6e1:	mov    rcx,QWORD PTR [rip+0x6518]        # 0x140012c00
   14000c6e8:	test   rcx,rcx
   14000c6eb:	je     0x14000c6fb
   14000c6ed:	call   QWORD PTR [rip+0xd85]        # 0x14000d478
   14000c6f3:	and    QWORD PTR [rip+0x6505],0x0        # 0x140012c00
   14000c6fb:	and    DWORD PTR [rip+0x6506],0x0        # 0x140012c08
   14000c702:	and    DWORD PTR [rip+0x6503],0x0        # 0x140012c0c
   14000c709:	add    rsp,0x28
   14000c70d:	ret    
   14000c70e:	int3   
   14000c70f:	int3   
   14000c710:	int3   
   14000c711:	int3   
   14000c712:	int3   
   14000c713:	int3   
   14000c714:	int3   
   14000c715:	int3   
   14000c716:	int3   
   14000c717:	int3   
   14000c718:	int3   
   14000c719:	int3   
   14000c71a:	int3   
   14000c71b:	int3   
   14000c71c:	int3   
   14000c71d:	int3   
   14000c71e:	int3   
   14000c71f:	int3   
   14000c720:	mov    QWORD PTR [rsp+0x8],rbx
   14000c725:	mov    QWORD PTR [rsp+0x10],rsi
   14000c72a:	push   rdi
   14000c72b:	sub    rsp,0x20
   14000c72f:	cmp    DWORD PTR [rip+0x64da],0x48        # 0x140012c10
   14000c736:	mov    rsi,QWORD PTR [rip+0x647b]        # 0x140012bb8
   14000c73d:	jne    0x14000c7be
   14000c73f:	mov    eax,DWORD PTR [rip+0x650b]        # 0x140012c50
   14000c745:	xor    ebx,ebx
   14000c747:	test   eax,eax
   14000c749:	jle    0x14000c782
   14000c74b:	xor    edi,edi
   14000c74d:	test   rdi,rdi
   14000c750:	js     0x14000c7f6
   14000c756:	cmp    ebx,eax
   14000c758:	jge    0x14000c7f6
   14000c75e:	mov    rax,QWORD PTR [rip+0x64e3]        # 0x140012c48
   14000c765:	mov    rdx,rsi
   14000c768:	movzx  ecx,WORD PTR [rdi+rax*1]
   14000c76c:	call   QWORD PTR [rip+0x8fe]        # 0x14000d070
   14000c772:	mov    eax,DWORD PTR [rip+0x64d8]        # 0x140012c50
   14000c778:	inc    ebx
   14000c77a:	add    rdi,0x2
   14000c77e:	cmp    ebx,eax
   14000c780:	jl     0x14000c74d
   14000c782:	mov    rcx,QWORD PTR [rip+0x64bf]        # 0x140012c48
   14000c789:	test   rcx,rcx
   14000c78c:	je     0x14000c79c
   14000c78e:	call   QWORD PTR [rip+0xce4]        # 0x14000d478
   14000c794:	and    QWORD PTR [rip+0x64ac],0x0        # 0x140012c48
   14000c79c:	and    DWORD PTR [rip+0x64ad],0x0        # 0x140012c50
   14000c7a3:	lea    rcx,[rip+0x646e]        # 0x140012c18
   14000c7aa:	and    DWORD PTR [rip+0x64a3],0x0        # 0x140012c54
   14000c7b1:	call   QWORD PTR [rip+0xb21]        # 0x14000d2d8
   14000c7b7:	and    DWORD PTR [rip+0x6452],0x0        # 0x140012c10
   14000c7be:	mov    rcx,QWORD PTR [rip+0x6483]        # 0x140012c48
   14000c7c5:	test   rcx,rcx
   14000c7c8:	je     0x14000c7d8
   14000c7ca:	call   QWORD PTR [rip+0xca8]        # 0x14000d478
   14000c7d0:	and    QWORD PTR [rip+0x6470],0x0        # 0x140012c48
   14000c7d8:	and    DWORD PTR [rip+0x6471],0x0        # 0x140012c50
   14000c7df:	and    DWORD PTR [rip+0x646e],0x0        # 0x140012c54
   14000c7e6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7eb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c7f0:	add    rsp,0x20
   14000c7f4:	pop    rdi
   14000c7f5:	ret    
   14000c7f6:	mov    ecx,0xc000008c
   14000c7fb:	call   0x1400037d4
   14000c800:	int3   
   14000c801:	int3   
   14000c802:	int3   
   14000c803:	int3   
   14000c804:	int3   
   14000c805:	int3   
   14000c806:	int3   
   14000c807:	int3   
   14000c808:	int3   
   14000c809:	int3   
   14000c80a:	int3   
   14000c80b:	int3   
   14000c80c:	int3   
   14000c80d:	int3   
   14000c80e:	int3   
   14000c80f:	int3   
   14000c810:	jmp    0x140002f84
   14000c815:	int3   
   14000c816:	int3   
   14000c817:	int3   
   14000c818:	int3   
   14000c819:	int3   
   14000c81a:	int3   
   14000c81b:	int3   
   14000c81c:	int3   
   14000c81d:	int3   
   14000c81e:	int3   
   14000c81f:	int3   
   14000c820:	lea    rax,[rip+0x1209]        # 0x14000da30
   14000c827:	lea    rcx,[rip+0x5c12]        # 0x140012440
   14000c82e:	mov    QWORD PTR [rip+0x5c0b],rax        # 0x140012440
   14000c835:	jmp    0x14000b6e2

Disassembly of section .rdata:

000000014000d000 <.rdata>:
   14000d000:	add    al,BYTE PTR [rax]
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    BYTE PTR [rax+0x7],al
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    BYTE PTR [rax+0xa1],al
   14000d014:	add    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax+0x6],al
   14000d01c:	add    BYTE PTR [rax],al
   14000d01e:	add    BYTE PTR [rax+0xa3],al
   14000d024:	add    BYTE PTR [rax],al
   14000d026:	add    BYTE PTR [rax+0x115],al
   14000d02c:	add    BYTE PTR [rax],al
   14000d02e:	add    BYTE PTR [rax+0xba],al
   14000d034:	add    BYTE PTR [rax],al
   14000d036:	add    BYTE PTR [rax+0x0],al
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	cwde   
   14000d041:	adc    BYTE PTR [rcx],al
   14000d043:	add    BYTE PTR [rax],al
   14000d045:	add    BYTE PTR [rax],al
   14000d047:	add    BYTE PTR [rax+rdx*1+0x1],al
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	jo     0x14000d062
   14000d052:	add    DWORD PTR [rax],eax
   14000d054:	add    BYTE PTR [rax],al
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	adc    BYTE PTR [rcx],al
   14000d05b:	add    BYTE PTR [rax],al
   14000d05d:	add    BYTE PTR [rax],al
   14000d05f:	add    BYTE PTR [rdx+0x10],ah
   14000d062:	add    DWORD PTR [rax],eax
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	rex.WR adc BYTE PTR [rcx],r8b
   14000d06b:	add    BYTE PTR [rax],al
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    BYTE PTR [rax],dh
   14000d071:	sbb    eax,DWORD PTR [rcx]
	...
   14000d07f:	add    BYTE PTR [rdi+rdx*1],dh
   14000d082:	add    DWORD PTR [rax],eax
   14000d084:	add    BYTE PTR [rax],al
   14000d086:	add    BYTE PTR [rax],al
   14000d088:	and    dl,BYTE PTR [rdi]
   14000d08a:	add    DWORD PTR [rax],eax
   14000d08c:	add    BYTE PTR [rax],al
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	or     al,0x17
   14000d092:	add    DWORD PTR [rax],eax
   14000d094:	add    BYTE PTR [rax],al
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	hlt    
   14000d099:	(bad)  
   14000d09a:	add    DWORD PTR [rax],eax
   14000d09c:	add    BYTE PTR [rax],al
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	loop   0x14000d0b8
   14000d0a2:	add    DWORD PTR [rax],eax
   14000d0a4:	add    BYTE PTR [rax],al
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	rcl    BYTE PTR [rsi],1
   14000d0aa:	add    DWORD PTR [rax],eax
   14000d0ac:	add    BYTE PTR [rax],al
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	mov    eax,0x116
   14000d0b5:	add    BYTE PTR [rax],al
   14000d0b7:	add    BYTE PTR [rdx*1+0x1],ah
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	(bad)  
   14000d0c1:	adc    al,0x1
   14000d0c3:	add    BYTE PTR [rax],al
   14000d0c5:	add    BYTE PTR [rax],al
   14000d0c7:	add    BYTE PTR [rsp+rdx*1],dh
   14000d0ca:	add    DWORD PTR [rax],eax
   14000d0cc:	add    BYTE PTR [rax],al
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	cmp    BYTE PTR [rbx],dl
   14000d0d2:	add    DWORD PTR [rax],eax
	...
   14000d0e0:	sbb    BYTE PTR [rax],0x1
	...
   14000d0ef:	add    dl,bh
   14000d0f1:	adc    al,0x1
   14000d0f3:	add    BYTE PTR [rax],al
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    BYTE PTR [rbx+rdx*1+0x1],dl
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	out    dx,al
   14000d101:	(bad)  
   14000d102:	add    DWORD PTR [rax],eax
   14000d104:	add    BYTE PTR [rax],al
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	or     bl,BYTE PTR [rax]
   14000d10a:	add    DWORD PTR [rax],eax
	...
   14000d118:	loop   0x14000d12d
   14000d11a:	add    DWORD PTR [rax],eax
	...
   14000d128:	outs   dx,BYTE PTR ds:[rsi]
   14000d129:	adc    eax,0x1
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	lock adc eax,DWORD PTR [rcx]
   14000d133:	add    BYTE PTR [rax],al
   14000d135:	add    BYTE PTR [rax],al
   14000d137:	add    BYTE PTR [rbp+rdx*1+0x1],cl
   14000d13b:	add    BYTE PTR [rax],al
   14000d13d:	add    BYTE PTR [rax],al
   14000d13f:	add    BYTE PTR [rsi],ah
   14000d141:	adc    al,0x1
   14000d143:	add    BYTE PTR [rax],al
   14000d145:	add    BYTE PTR [rax],al
   14000d147:	add    BYTE PTR [rsp+rdx*1+0x1],al
   14000d14b:	add    BYTE PTR [rax],al
   14000d14d:	add    BYTE PTR [rax],al
   14000d14f:	add    BYTE PTR [rdi+rdx*1+0x1],al
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	pop    rsi
   14000d159:	adc    eax,0x1
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	outs   dx,BYTE PTR ds:[rsi]
   14000d161:	(bad)  
   14000d162:	add    DWORD PTR [rax],eax
   14000d164:	add    BYTE PTR [rax],al
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	add    al,0x14
   14000d16a:	add    DWORD PTR [rax],eax
   14000d16c:	add    BYTE PTR [rax],al
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	adc    BYTE PTR [rip+0x1],0x0        # 0x14000d178
	...
   14000d17f:	add    BYTE PTR [rdx+0x17],bl
   14000d182:	add    DWORD PTR [rax],eax
   14000d184:	add    BYTE PTR [rax],al
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	pop    rsi
   14000d189:	(bad)  
   14000d18a:	add    DWORD PTR [rax],eax
   14000d18c:	add    BYTE PTR [rax],al
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	outs   dx,BYTE PTR ds:[rsi]
   14000d191:	(bad)  
   14000d192:	add    DWORD PTR [rax],eax
   14000d194:	add    BYTE PTR [rax],al
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	rex.W (bad) 
   14000d19a:	add    DWORD PTR [rax],eax
	...
   14000d1a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1a9:	(bad)  
   14000d1aa:	add    DWORD PTR [rax],eax
	...
   14000d1b8:	sub    BYTE PTR [rax],bl
   14000d1ba:	add    DWORD PTR [rax],eax
   14000d1bc:	add    BYTE PTR [rax],al
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	mov    eax,0x113
   14000d1c5:	add    BYTE PTR [rax],al
   14000d1c7:	add    BYTE PTR [rbx+rdx*1+0x1],ah
   14000d1ce:	add    BYTE PTR [rax],al
   14000d1d0:	outs   dx,BYTE PTR ds:[rsi]
   14000d1d1:	adc    eax,DWORD PTR [rcx]
   14000d1d3:	add    BYTE PTR [rax],al
   14000d1d5:	add    BYTE PTR [rax],al
   14000d1d7:	add    ah,bh
   14000d1d9:	adc    eax,0x1
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	retf   0x115
   14000d1e3:	add    BYTE PTR [rax],al
   14000d1e5:	add    BYTE PTR [rax],al
   14000d1e7:	add    BYTE PTR [rdx],dh
   14000d1e9:	(bad)  
   14000d1ea:	add    DWORD PTR [rax],eax
   14000d1ec:	add    BYTE PTR [rax],al
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	(bad)  
   14000d1f1:	(bad)  
   14000d1f2:	add    DWORD PTR [rax],eax
   14000d1f4:	add    BYTE PTR [rax],al
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	adc    BYTE PTR [rbx],0x1
	...
   14000d207:	add    BYTE PTR [rax+rbx*1],bh
   14000d20a:	add    DWORD PTR [rax],eax
	...
   14000d218:	js     0x14000d22e
   14000d21a:	add    DWORD PTR [rax],eax
   14000d21c:	add    BYTE PTR [rax],al
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	mov    esp,0x114
   14000d225:	add    BYTE PTR [rax],al
   14000d227:	add    BYTE PTR [rsi+0x14],dl
   14000d22a:	add    DWORD PTR [rax],eax
   14000d22c:	add    BYTE PTR [rax],al
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	fs adc al,0x1
   14000d233:	add    BYTE PTR [rax],al
   14000d235:	add    BYTE PTR [rax],al
   14000d237:	add    BYTE PTR [rax+0x114],cl
   14000d23d:	add    BYTE PTR [rax],al
   14000d23f:	add    BYTE PTR [rdx+0x114],ch
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	add    BYTE PTR [rax+0x114],bl
	...
   14000d255:	add    BYTE PTR [rax],al
   14000d257:	add    BYTE PTR [rdi+rdx*1+0x1],ch
   14000d25e:	add    BYTE PTR [rax],al
   14000d260:	ficom  DWORD PTR [rdi]
   14000d262:	add    DWORD PTR [rax],eax
   14000d264:	add    BYTE PTR [rax],al
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	rcl    BYTE PTR [rdi],0x1
	...
   14000d277:	add    BYTE PTR [rsi],dh
   14000d279:	adc    eax,0x1
	...
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	clc    
   14000d289:	sbb    al,BYTE PTR [rcx]
	...
   14000d297:	add    BYTE PTR [rax+0x116],al
   14000d29d:	add    BYTE PTR [rax],al
   14000d29f:	add    BYTE PTR [rsi+0x116],cl
   14000d2a5:	add    BYTE PTR [rax],al
   14000d2a7:	add    BYTE PTR [rsi+rdx*1],cl
   14000d2aa:	add    DWORD PTR [rax],eax
   14000d2ac:	add    BYTE PTR [rax],al
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	or     al,0x15
   14000d2b2:	add    DWORD PTR [rax],eax
   14000d2b4:	add    BYTE PTR [rax],al
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	in     al,dx
   14000d2b9:	adc    eax,0x1
   14000d2be:	add    BYTE PTR [rax],al
   14000d2c0:	loopne 0x14000d2d7
   14000d2c2:	add    DWORD PTR [rax],eax
   14000d2c4:	add    BYTE PTR [rax],al
   14000d2c6:	add    BYTE PTR [rax],al
   14000d2c8:	loop   0x14000d2de
   14000d2ca:	add    DWORD PTR [rax],eax
   14000d2cc:	add    BYTE PTR [rax],al
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	sahf   
   14000d2d1:	(bad)  
   14000d2d2:	add    DWORD PTR [rax],eax
   14000d2d4:	add    BYTE PTR [rax],al
   14000d2d6:	add    BYTE PTR [rax],al
   14000d2d8:	mov    dl,0x15
   14000d2da:	add    DWORD PTR [rax],eax
   14000d2dc:	add    BYTE PTR [rax],al
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	xchg   esi,eax
   14000d2e1:	adc    eax,0x1
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	and    dl,BYTE PTR [rsi]
   14000d2ea:	add    DWORD PTR [rax],eax
	...
   14000d2f8:	(bad)  
   14000d2f9:	adc    al,0x1
   14000d2fb:	add    BYTE PTR [rax],al
   14000d2fd:	add    BYTE PTR [rax],al
   14000d2ff:	add    BYTE PTR [rax+0x18],dh
   14000d302:	add    DWORD PTR [rax],eax
   14000d304:	add    BYTE PTR [rax],al
   14000d306:	add    BYTE PTR [rax],al
   14000d308:	push   rsi
   14000d309:	sbb    BYTE PTR [rcx],al
	...
   14000d317:	add    BYTE PTR [rdi+rdx*1+0x1],cl
   14000d31b:	add    BYTE PTR [rax],al
   14000d31d:	add    BYTE PTR [rax],al
   14000d31f:	add    BYTE PTR [rbx+rdx*1+0x1],cl
   14000d323:	add    BYTE PTR [rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rbx+rdx*1+0x1],bl
	...
   14000d337:	add    ah,cl
   14000d339:	adc    eax,DWORD PTR [rcx]
	...
   14000d347:	add    BYTE PTR [rsi+0x112],dh
   14000d34d:	add    BYTE PTR [rax],al
   14000d34f:	add    dh,cl
   14000d351:	adc    al,BYTE PTR [rcx]
   14000d353:	add    BYTE PTR [rax],al
   14000d355:	add    BYTE PTR [rax],al
   14000d357:	add    BYTE PTR [rdx+rdx*1+0x1],ch
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	movabs ds:0x8a00000000000112,al
   14000d369:	adc    al,BYTE PTR [rcx]
   14000d36b:	add    BYTE PTR [rax],al
   14000d36d:	add    BYTE PTR [rax],al
   14000d36f:	add    BYTE PTR [rsi+0x12],bh
   14000d372:	add    DWORD PTR [rax],eax
   14000d374:	add    BYTE PTR [rax],al
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	push   0x12
   14000d37a:	add    DWORD PTR [rax],eax
   14000d37c:	add    BYTE PTR [rax],al
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	pop    rsp
   14000d381:	adc    al,BYTE PTR [rcx]
   14000d383:	add    BYTE PTR [rax],al
   14000d385:	add    BYTE PTR [rax],al
   14000d387:	add    BYTE PTR [rdx+0x12],dl
   14000d38a:	add    DWORD PTR [rax],eax
   14000d38c:	add    BYTE PTR [rax],al
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	rex.WX adc al,BYTE PTR [rcx]
   14000d393:	add    BYTE PTR [rax],al
   14000d395:	add    BYTE PTR [rax],al
   14000d397:	add    dl,ah
   14000d399:	adc    al,BYTE PTR [rcx]
   14000d39b:	add    BYTE PTR [rax],al
   14000d39d:	add    BYTE PTR [rax],al
   14000d39f:	add    dl,ch
   14000d3a1:	adc    al,BYTE PTR [rcx]
   14000d3a3:	add    BYTE PTR [rax],al
   14000d3a5:	add    BYTE PTR [rax],al
   14000d3a7:	add    BYTE PTR [rdx+0x12],al
   14000d3aa:	add    DWORD PTR [rax],eax
   14000d3ac:	add    BYTE PTR [rax],al
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	xor    BYTE PTR [rdx],dl
   14000d3b2:	add    DWORD PTR [rax],eax
   14000d3b4:	add    BYTE PTR [rax],al
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	hlt    
   14000d3b9:	adc    al,BYTE PTR [rcx]
   14000d3bb:	add    BYTE PTR [rax],al
   14000d3bd:	add    BYTE PTR [rax],al
   14000d3bf:	add    BYTE PTR [rdx],al
   14000d3c1:	adc    eax,DWORD PTR [rcx]
   14000d3c3:	add    BYTE PTR [rax],al
   14000d3c5:	add    BYTE PTR [rax],al
   14000d3c7:	add    BYTE PTR [rdx],dl
   14000d3c9:	adc    al,BYTE PTR [rcx]
   14000d3cb:	add    BYTE PTR [rax],al
   14000d3cd:	add    BYTE PTR [rax],al
   14000d3cf:	add    BYTE PTR [rdx+rdx*1],al
   14000d3d2:	add    DWORD PTR [rax],eax
   14000d3d4:	add    BYTE PTR [rax],al
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	or     al,0x13
   14000d3da:	add    DWORD PTR [rax],eax
   14000d3dc:	add    BYTE PTR [rax],al
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	in     al,dx
   14000d3e1:	adc    DWORD PTR [rcx],eax
   14000d3e3:	add    BYTE PTR [rax],al
   14000d3e5:	add    BYTE PTR [rax],al
   14000d3e7:	add    dh,dl
   14000d3e9:	adc    DWORD PTR [rcx],eax
   14000d3eb:	add    BYTE PTR [rax],al
   14000d3ed:	add    BYTE PTR [rax],al
   14000d3ef:	add    BYTE PTR [rbx+rdx*1],ah
   14000d3f2:	add    DWORD PTR [rax],eax
   14000d3f4:	add    BYTE PTR [rax],al
   14000d3f6:	add    BYTE PTR [rax],al
   14000d3f8:	retf   0x111
   14000d3fb:	add    BYTE PTR [rax],al
   14000d3fd:	add    BYTE PTR [rax],al
   14000d3ff:	add    BYTE PTR [rdx+0x111],ch
   14000d405:	add    BYTE PTR [rax],al
   14000d407:	add    BYTE PTR [rsi],ch
   14000d409:	adc    eax,DWORD PTR [rcx]
   14000d40b:	add    BYTE PTR [rax],al
   14000d40d:	add    BYTE PTR [rax],al
   14000d40f:	add    BYTE PTR [rax+0x111],ah
   14000d415:	add    BYTE PTR [rax],al
   14000d417:	add    BYTE PTR [rdx+0x111],al
   14000d41d:	add    BYTE PTR [rax],al
   14000d41f:	add    BYTE PTR [rsi+0x11],dh
   14000d422:	add    DWORD PTR [rax],eax
   14000d424:	add    BYTE PTR [rax],al
   14000d426:	add    BYTE PTR [rax],al
   14000d428:	pop    rax
   14000d429:	adc    DWORD PTR [rcx],eax
   14000d42b:	add    BYTE PTR [rax],al
   14000d42d:	add    BYTE PTR [rax],al
   14000d42f:	add    BYTE PTR [rsi+0x11],cl
   14000d432:	add    DWORD PTR [rax],eax
   14000d434:	add    BYTE PTR [rax],al
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	adc    DWORD PTR ss:[rcx],eax
   14000d43b:	add    BYTE PTR [rax],al
   14000d43d:	add    BYTE PTR [rax],al
   14000d43f:	add    BYTE PTR [rsi],dl
   14000d441:	adc    DWORD PTR [rcx],eax
   14000d443:	add    BYTE PTR [rax],al
   14000d445:	add    BYTE PTR [rax],al
   14000d447:	add    BYTE PTR [rdx],cl
   14000d449:	adc    DWORD PTR [rcx],eax
   14000d44b:	add    BYTE PTR [rax],al
   14000d44d:	add    BYTE PTR [rax],al
   14000d44f:	add    dh,bh
   14000d451:	adc    BYTE PTR [rcx],al
   14000d453:	add    BYTE PTR [rax],al
   14000d455:	add    BYTE PTR [rax],al
   14000d457:	add    BYTE PTR [rax],ah
   14000d459:	adc    al,BYTE PTR [rcx]
   14000d45b:	add    BYTE PTR [rax],al
   14000d45d:	add    BYTE PTR [rax],al
   14000d45f:	add    BYTE PTR [rbx+rbx*1+0x1],al
   14000d463:	add    BYTE PTR [rax],al
   14000d465:	add    BYTE PTR [rax],al
   14000d467:	add    BYTE PTR [rdx+0x110],dh
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    dl,dh
   14000d471:	adc    BYTE PTR [rcx],al
   14000d473:	add    BYTE PTR [rax],al
   14000d475:	add    BYTE PTR [rax],al
   14000d477:	add    dl,ch
   14000d479:	adc    BYTE PTR [rcx],al
   14000d47b:	add    BYTE PTR [rax],al
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    al,ah
   14000d481:	adc    BYTE PTR [rcx],al
   14000d483:	add    BYTE PTR [rax],al
   14000d485:	add    BYTE PTR [rax],al
   14000d487:	add    ah,dl
   14000d489:	adc    BYTE PTR [rcx],al
   14000d48b:	add    BYTE PTR [rax],al
   14000d48d:	add    BYTE PTR [rax],al
   14000d48f:	add    dl,al
   14000d491:	adc    BYTE PTR [rcx],al
   14000d493:	add    BYTE PTR [rax],al
   14000d495:	add    BYTE PTR [rax],al
   14000d497:	add    BYTE PTR [rdx+0x1b],bl
   14000d49a:	add    DWORD PTR [rax],eax
	...
   14000d4a8:	mov    al,0x55
   14000d4aa:	add    BYTE PTR [rax+0x1],al
   14000d4ad:	add    BYTE PTR [rax],al
   14000d4af:	add    al,ah
   14000d4b1:	mov    esp,0x14000
	...
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	mov    al,0xaf
   14000d4c2:	add    BYTE PTR [rax+0x1],al
   14000d4c5:	add    BYTE PTR [rax],al
   14000d4c7:	add    BYTE PTR [rax+0x1400011],dh
   14000d4cd:	add    BYTE PTR [rax],al
   14000d4cf:	add    BYTE PTR [rax+0x12],dl
   14000d4d2:	add    BYTE PTR [rax+0x1],al
   14000d4d5:	add    BYTE PTR [rax],al
   14000d4d7:	add    al,al
   14000d4d9:	adc    al,BYTE PTR [rax]
   14000d4db:	rex add DWORD PTR [rax],eax
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	add    BYTE PTR [rax],dl
   14000d4e2:	add    BYTE PTR [rax+0x1],al
   14000d4e5:	add    BYTE PTR [rax],al
   14000d4e7:	add    BYTE PTR [rax+0x1400011],al
	...
   14000d4fd:	add    BYTE PTR [rax],al
   14000d4ff:	add    al,dl
   14000d501:	scas   al,BYTE PTR es:[rdi]
   14000d502:	add    BYTE PTR [rax+0x1],al
   14000d505:	add    BYTE PTR [rax],al
   14000d507:	add    BYTE PTR [rax+0x14000b7],ah
	...
   14000d519:	adc    BYTE PTR [rax],al
   14000d51b:	add    BYTE PTR [rax-0x4fffffef],al
   14000d521:	adc    DWORD PTR [rax],eax
   14000d523:	add    BYTE PTR [rax+0x12],dl
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	rcl    BYTE PTR [rdx],0x0
   14000d52b:	add    BYTE PTR [rax+0x13],dl
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	adc    BYTE PTR [rsi],0x0
   14000d533:	add    BYTE PTR [rax+0x17],ah
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	(bad)  
   14000d539:	sbb    eax,DWORD PTR [rax]
   14000d53b:	add    al,dl
   14000d53d:	(bad)  
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	adc    BYTE PTR [rbx],ah
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	and    BYTE PTR [rbx],0x0
   14000d547:	add    BYTE PTR [rax],dl
   14000d549:	and    al,0x0
   14000d54b:	add    al,ah
   14000d54d:	xor    BYTE PTR [rax],al
   14000d54f:	add    al,dh
   14000d551:	xor    BYTE PTR [rax],al
   14000d553:	add    BYTE PTR [rax],dl
   14000d555:	xor    DWORD PTR [rax],eax
   14000d557:	add    BYTE PTR [rax],ah
   14000d559:	xor    DWORD PTR [rax],eax
   14000d55b:	add    BYTE PTR [rax],dh
   14000d55d:	xor    DWORD PTR [rax],eax
   14000d55f:	add    al,dl
   14000d561:	xor    al,BYTE PTR [rax]
   14000d563:	add    BYTE PTR [rax+0x60000036],dh
   14000d569:	push   rbp
   14000d56a:	add    BYTE PTR [rax],al
   14000d56c:	mov    al,0x55
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	xor    BYTE PTR [rcx+0x0],bl
   14000d573:	add    al,dl
   14000d575:	pop    rcx
   14000d576:	add    BYTE PTR [rax],al
   14000d578:	and    BYTE PTR [rdx+0x0],bl
   14000d57b:	add    BYTE PTR [rax+0x5a],dh
   14000d57e:	add    BYTE PTR [rax],al
   14000d580:	rcr    BYTE PTR [rdx+0x0],0x0
   14000d584:	adc    BYTE PTR [rbx+0x0],bl
   14000d587:	add    BYTE PTR [rax+0x5b],dh
   14000d58a:	add    BYTE PTR [rax],al
   14000d58c:	loopne 0x14000d5e9
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	rex pop rsp
   14000d592:	add    BYTE PTR [rax],al
   14000d594:	movabs al,ds:0x6000005d0000005c
   14000d59d:	pop    rbp
   14000d59e:	add    BYTE PTR [rax],al
   14000d5a0:	rcr    BYTE PTR [rbp+0x0],0x0
   14000d5a4:	shl    BYTE PTR [rdx+0x0],1
   14000d5a7:	add    BYTE PTR [rax],ah
   14000d5a9:	add    BYTE PTR gs:[rax],al
   14000d5ac:	adc    BYTE PTR [rax+0x0],dh
   14000d5af:	add    BYTE PTR [rax+0x71],dl
   14000d5b2:	add    BYTE PTR [rax],al
   14000d5b4:	shl    BYTE PTR [rcx+0x0],1
   14000d5b7:	add    BYTE PTR [rax-0x4fffff88],dl
   14000d5bd:	js     0x14000d5bf
   14000d5bf:	add    BYTE PTR [rax+0x79],dl
   14000d5c2:	add    BYTE PTR [rax],al
   14000d5c4:	jo     0x14000d63f
   14000d5c6:	add    BYTE PTR [rax],al
   14000d5c8:	loopne 0x14000d649
   14000d5ca:	add    BYTE PTR [rax],al
   14000d5cc:	rex add BYTE PTR [rax],0x0
   14000d5d0:	jo     0x14000d552
   14000d5d2:	add    BYTE PTR [rax],al
   14000d5d4:	add    BYTE PTR [rax-0x7f700000],0x0
   14000d5db:	add    BYTE PTR [rax],dh
   14000d5dd:	test   DWORD PTR [rax],eax
   14000d5df:	add    BYTE PTR [rax-0x1fffff7b],dl
   14000d5e5:	test   DWORD PTR [rax],eax
   14000d5e7:	add    BYTE PTR [rax-0x7a],al
   14000d5ea:	add    BYTE PTR [rax],al
   14000d5ec:	rol    BYTE PTR [rdi-0x78100000],1
   14000d5f2:	add    BYTE PTR [rax],al
   14000d5f4:	nop
   14000d5f5:	mov    BYTE PTR [rax],al
   14000d5f7:	add    BYTE PTR [rax-0x4fffff78],dh
   14000d5fd:	mov    al,BYTE PTR [rax]
   14000d5ff:	add    al,al
   14000d601:	mov    al,BYTE PTR [rax]
   14000d603:	add    al,dl
   14000d605:	mov    al,BYTE PTR [rax]
   14000d607:	add    al,ah
   14000d609:	mov    al,BYTE PTR [rax]
   14000d60b:	add    al,dh
   14000d60d:	mov    al,BYTE PTR [rax]
   14000d60f:	add    BYTE PTR [rax],al
   14000d611:	mov    eax,DWORD PTR [rax]
   14000d613:	add    BYTE PTR [rax],dl
   14000d615:	mov    eax,DWORD PTR [rax]
   14000d617:	add    al,al
   14000d619:	mov    eax,DWORD PTR [rax]
   14000d61b:	add    BYTE PTR [rax],dl
   14000d61d:	lea    eax,[rax]
   14000d61f:	add    BYTE PTR [rax-0x73],al
   14000d622:	add    BYTE PTR [rax],al
   14000d624:	(bad)  
   14000d625:	lea    eax,[rax]
   14000d627:	add    al,al
   14000d629:	lea    eax,[rax]
   14000d62b:	add    al,dh
   14000d62d:	mov    es,WORD PTR [rax]
   14000d62f:	add    BYTE PTR [rax-0x4fffff71],dl
   14000d635:	pop    QWORD PTR [rax]
   14000d637:	add    BYTE PTR [rax+0x50000090],dh
   14000d63d:	xchg   ecx,eax
   14000d63e:	add    BYTE PTR [rax],al
   14000d640:	jo     0x14000d5d3
   14000d642:	add    BYTE PTR [rax],al
   14000d644:	rcl    BYTE PTR [rdx-0x6cb00000],0x0
   14000d64b:	add    al,ah
   14000d64d:	xchg   ebp,eax
   14000d64e:	add    BYTE PTR [rax],al
   14000d650:	mov    al,0xa0
   14000d652:	add    BYTE PTR [rax],al
   14000d654:	rex test eax,0xa9a00000
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	loopne 0x14000d607
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	lock test eax,0xaa500000
   14000d666:	add    BYTE PTR [rax],al
   14000d668:	(bad)  
   14000d669:	stos   BYTE PTR es:[rdi],al
   14000d66a:	add    BYTE PTR [rax],al
   14000d66c:	sub    BYTE PTR [rdx-0x54700000],0x0
   14000d673:	add    al,ah
   14000d675:	stos   DWORD PTR es:[rdi],eax
   14000d676:	add    BYTE PTR [rax],al
   14000d678:	mov    al,0xad
   14000d67a:	add    BYTE PTR [rax],al
   14000d67c:	shr    BYTE PTR [rsi-0x51300000],0x0
   14000d683:	add    BYTE PTR [rax+0xaf],dh
   14000d689:	mov    al,0x0
   14000d68b:	add    BYTE PTR [rax-0x3fffff4d],al
   14000d691:	mov    bl,0x0
   14000d693:	add    BYTE PTR [rax-0x4c],ah
   14000d696:	add    BYTE PTR [rax],al
   14000d698:	add    BYTE PTR [rdi-0x48f00000],dh
   14000d69e:	add    BYTE PTR [rax],al
   14000d6a0:	(bad)  
   14000d6a1:	mov    bh,0x0
   14000d6a3:	add    BYTE PTR [rax+0xb7],ah
   14000d6a9:	mov    esp,0xbc100000
   14000d6ae:	add    BYTE PTR [rax],al
   14000d6b0:	push   rax
   14000d6b1:	mov    BYTE PTR [rax],0x0
   14000d6b4:	rol    dh,1
   14000d6b6:	add    BYTE PTR [rax],al
   14000d6b8:	and    bh,al
   14000d6ba:	add    BYTE PTR [rax],al
   14000d6bc:	adc    al,cl
   14000d6be:	add    BYTE PTR [rax],al
   14000d6c0:	and    al,cl
	...
   14000d6ce:	add    BYTE PTR [rax],al
   14000d6d0:	(bad)
   14000d6d5:	ins    BYTE PTR es:[rdi],dx
   14000d6d6:	ins    BYTE PTR es:[rdi],dx
   14000d6d7:	outs   dx,DWORD PTR ds:[rsi]
   14000d6d8:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d6db:	imul   ebp,DWORD PTR [rdi+0x6e],0xadb00000
   14000d6e2:	add    BYTE PTR [rax+0x1],al
   14000d6e5:	add    BYTE PTR [rax],al
   14000d6e7:	add    BYTE PTR [rax],dl
   14000d6e9:	mov    bh,0x0
   14000d6eb:	rex add DWORD PTR [rax],eax
   14000d6ee:	add    BYTE PTR [rax],al
   14000d6f0:	mov    al,0xad
   14000d6f2:	add    BYTE PTR [rax+0x1],al
   14000d6f5:	add    BYTE PTR [rax],al
   14000d6f7:	add    al,al
   14000d6f9:	scas   al,BYTE PTR es:[rdi]
   14000d6fa:	add    BYTE PTR [rax+0x1],al
   14000d6fd:	add    BYTE PTR [rax],al
   14000d6ff:	add    BYTE PTR [rdx+0x61],ah
   14000d702:	and    BYTE PTR fs:[rsi+0x75],ah
   14000d706:	outs   dx,BYTE PTR ds:[rsi]
   14000d707:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d70b:	outs   dx,BYTE PTR ds:[rsi]
   14000d70c:	and    BYTE PTR [rbx+0x61],ah
   14000d70f:	ins    BYTE PTR es:[rdi],dx
   14000d710:	ins    BYTE PTR es:[rdi],dx
   14000d711:	add    BYTE PTR [rax],al
   14000d713:	add    BYTE PTR [rax],al
   14000d715:	add    BYTE PTR [rax],al
   14000d717:	add    BYTE PTR [rax+0x14000b3],al
   14000d71d:	add    BYTE PTR [rax],al
   14000d71f:	add    BYTE PTR [rax+0x1400124],dl
   14000d725:	add    BYTE PTR [rax],al
   14000d727:	add    BYTE PTR [rax],dh
   14000d729:	and    eax,0x14001
   14000d72e:	add    BYTE PTR [rax],al
   14000d730:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d732:	jbe    0x14000d795
   14000d734:	ins    BYTE PTR es:[rdi],dx
   14000d735:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   14000d73d:	gs je  0x14000d7a5
   14000d740:	jb     0x14000d762
   14000d742:	jo     0x14000d7a5
   14000d744:	jae    0x14000d7b9
   14000d746:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14000d74c:	rex.XB and BYTE PTR [r10+0x75],sil
   14000d750:	outs   dx,BYTE PTR ds:[rsi]
   14000d751:	je     0x14000d7bc
   14000d753:	ins    DWORD PTR es:[rdi],dx
   14000d754:	and    BYTE PTR gs:[rsi+0x75],ah
   14000d758:	outs   dx,BYTE PTR ds:[rsi]
   14000d759:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d75d:	outs   dx,BYTE PTR ds:[rsi]
   14000d75e:	or     al,BYTE PTR cs:[rax]
   14000d761:	add    BYTE PTR [rax],al
   14000d763:	add    BYTE PTR [rax],al
   14000d765:	add    BYTE PTR [rax],al
   14000d767:	add    BYTE PTR [rbx+0x0],al
   14000d76a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000d76e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000d773:	add    BYTE PTR [rax],al
   14000d775:	add    BYTE PTR [rax],al
   14000d777:	add    BYTE PTR [rcx+0x0],al
   14000d77a:	jo     0x14000d77c
   14000d77c:	jo     0x14000d77e
   14000d77e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000d783:	add    BYTE PTR [rbx+0x0],dl
   14000d786:	add    BYTE PTR [rax],al
   14000d788:	rex.WRB add BYTE PTR [r8],r8b
   14000d78b:	add    BYTE PTR [rax+rax*1+0x0],al
   14000d78f:	add    BYTE PTR [rdx+0x0],al
   14000d792:	add    BYTE PTR [rax],al
   14000d794:	add    BYTE PTR [rax],al
   14000d796:	add    BYTE PTR [rax],al
   14000d798:	push   rsi
   14000d799:	add    BYTE PTR [rcx+0x0],ah
   14000d79c:	ins    BYTE PTR es:[rdi],dx
   14000d79d:	add    BYTE PTR [rax],al
   14000d79f:	add    BYTE PTR [rsi+0x0],al
   14000d7a2:	outs   dx,DWORD PTR ds:[rsi]
   14000d7a3:	add    BYTE PTR [rdx+0x0],dh
   14000d7a6:	movsxd eax,DWORD PTR [rax]
   14000d7a8:	add    BYTE PTR gs:[rdx+0x0],dl
   14000d7ac:	add    BYTE PTR gs:[rbp+0x0],ch
   14000d7b0:	outs   dx,DWORD PTR ds:[rsi]
   14000d7b1:	add    BYTE PTR [rsi+0x0],dh
   14000d7b4:	add    BYTE PTR gs:[rax],al
   14000d7b7:	add    BYTE PTR [rsi+0x0],cl
   14000d7ba:	outs   dx,DWORD PTR ds:[rsi]
   14000d7bb:	add    BYTE PTR [rdx+0x0],dl
   14000d7be:	add    BYTE PTR gs:[rbp+0x0],ch
   14000d7c2:	outs   dx,DWORD PTR ds:[rsi]
   14000d7c3:	add    BYTE PTR [rsi+0x0],dh
   14000d7c6:	add    BYTE PTR gs:[rax],al
   14000d7c9:	add    BYTE PTR [rax],al
   14000d7cb:	add    BYTE PTR [rax],al
   14000d7cd:	add    BYTE PTR [rax],al
   14000d7cf:	add    BYTE PTR [rax+rax*1+0x65],al
   14000d7d3:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000d7d7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d7db:	add    BYTE PTR [rax],al
   14000d7dd:	add    BYTE PTR [rax],al
   14000d7df:	add    BYTE PTR [rbx+0x0],al
   14000d7e2:	outs   dx,DWORD PTR ds:[rsi]
   14000d7e3:	add    BYTE PTR [rbp+0x0],ch
   14000d7e6:	jo     0x14000d7e8
   14000d7e8:	outs   dx,DWORD PTR ds:[rsi]
   14000d7e9:	add    BYTE PTR [rsi+0x0],ch
   14000d7ec:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d7f0:	je     0x14000d7f2
   14000d7f2:	and    BYTE PTR [rax],al
   14000d7f4:	rex.XB add BYTE PTR [r9+0x0],spl
   14000d7f8:	je     0x14000d7fa
   14000d7fa:	add    BYTE PTR gs:[rdi+0x0],ah
   14000d7fe:	outs   dx,DWORD PTR ds:[rsi]
   14000d7ff:	add    BYTE PTR [rdx+0x0],dh
   14000d802:	imul   eax,DWORD PTR [rax],0x730065
	...
   14000d810:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d814:	ins    BYTE PTR es:[rdi],dx
   14000d815:	add    BYTE PTR [rbp+0x0],ah
   14000d818:	push   rsp
   14000d819:	add    BYTE PTR [rcx+0x0],bh
   14000d81c:	jo     0x14000d81e
   14000d81e:	add    BYTE PTR gs:[rax],al
   14000d821:	add    BYTE PTR [rax],al
   14000d823:	add    BYTE PTR [rax],al
   14000d825:	add    BYTE PTR [rax],al
   14000d827:	add    BYTE PTR [rcx+0x0],cl
   14000d82a:	outs   dx,BYTE PTR ds:[rsi]
   14000d82b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000d82f:	add    BYTE PTR [rdx+0x0],dh
   14000d832:	data16 add BYTE PTR [rcx+0x0],ah
   14000d836:	movsxd eax,DWORD PTR [rax]
   14000d838:	add    BYTE PTR gs:[rax],al
   14000d83b:	add    BYTE PTR [rax],al
   14000d83d:	add    BYTE PTR [rax],al
   14000d83f:	add    BYTE PTR [rax+0x0],cl
   14000d842:	(bad)  
   14000d843:	add    BYTE PTR [rdx+0x0],dh
   14000d846:	add    BYTE PTR fs:[rdi+0x0],dh
   14000d84a:	(bad)  
   14000d84b:	add    BYTE PTR [rdx+0x0],dh
   14000d84e:	add    BYTE PTR gs:[rax],al
   14000d851:	add    BYTE PTR [rax],al
   14000d853:	add    BYTE PTR [rax],al
   14000d855:	add    BYTE PTR [rax],al
   14000d857:	add    BYTE PTR [rbp+0x0],cl
   14000d85a:	imul   eax,DWORD PTR [rax],0x65006d
	...
   14000d868:	push   rbx
   14000d869:	add    BYTE PTR [rcx+0x0],al
   14000d86c:	rex.WRB add BYTE PTR [r8],r8b
   14000d86f:	add    BYTE PTR [rbx+0x0],dl
   14000d872:	add    BYTE PTR [r11+0x0],r8b
   14000d876:	push   rbp
   14000d877:	add    BYTE PTR [rdx+0x0],dl
   14000d87a:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   14000d887:	add    BYTE PTR [rbx+0x0],dl
   14000d88a:	pop    rcx
   14000d88b:	add    BYTE PTR [rbx+0x0],dl
   14000d88e:	push   rsp
   14000d88f:	add    BYTE PTR [rbp+0x0],al
   14000d892:	rex.WRB add BYTE PTR [r8],r8b
   14000d895:	add    BYTE PTR [rax],al
   14000d897:	add    BYTE PTR [rbx+0x0],dl
   14000d89a:	outs   dx,DWORD PTR ds:[rsi]
   14000d89b:	add    BYTE PTR [rsi+0x0],ah
   14000d89e:	je     0x14000d8a0
   14000d8a0:	ja     0x14000d8a2
   14000d8a2:	(bad)  
   14000d8a3:	add    BYTE PTR [rdx+0x0],dh
   14000d8a6:	add    BYTE PTR gs:[rax],al
   14000d8a9:	add    BYTE PTR [rax],al
   14000d8ab:	add    BYTE PTR [rax],al
   14000d8ad:	add    BYTE PTR [rax],al
   14000d8af:	add    BYTE PTR [rax+rax*1+0x79],dl
   14000d8b3:	add    BYTE PTR [rax+0x0],dh
   14000d8b6:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14000d8bb:	add    BYTE PTR [rdx+0x0],ah
   14000d8be:	add    BYTE PTR [rax],al
   14000d8c0:	and    eax,DWORD PTR [rbx]
   14000d8c2:	add    BYTE PTR [rax],al
   14000d8c4:	add    BYTE PTR [rax],al
   14000d8c6:	add    BYTE PTR [rax],al
   14000d8c8:	rol    BYTE PTR [rax],0x0
   14000d8cb:	add    BYTE PTR [rax],al
   14000d8cd:	add    BYTE PTR [rax],al
   14000d8cf:	rex.RX js 0x14000d8a9
   14000d8d2:	add    BYTE PTR [rax+0x1],al
   14000d8d5:	add    BYTE PTR [rax],al
   14000d8d7:	add    BYTE PTR [rax-0x29],ch
   14000d8da:	add    BYTE PTR [rax+0x1],al
   14000d8dd:	add    BYTE PTR [rax],al
   14000d8df:	add    al,ah
   14000d8e1:	xlat   BYTE PTR ds:[rbx]
   14000d8e2:	add    BYTE PTR [rax+0x1],al
   14000d8e5:	add    BYTE PTR [rax],al
   14000d8e7:	add    BYTE PTR [rax],dl
   14000d8e9:	fadd   DWORD PTR [rax]
   14000d8eb:	rex add DWORD PTR [rax],eax
   14000d8ee:	add    BYTE PTR [rax],al
   14000d8f0:	sub    al,bl
   14000d8f2:	add    BYTE PTR [rax+0x1],al
   14000d8f5:	add    BYTE PTR [rax],al
   14000d8f7:	add    BYTE PTR [rax-0x28],al
   14000d8fa:	add    BYTE PTR [rax+0x1],al
   14000d8fd:	add    BYTE PTR [rax],al
   14000d8ff:	add    BYTE PTR [rax-0x28],bl
   14000d902:	add    BYTE PTR [rax+0x1],al
   14000d905:	add    BYTE PTR [rax],al
   14000d907:	add    BYTE PTR [rax-0x28],ch
   14000d90a:	add    BYTE PTR [rax+0x1],al
   14000d90d:	add    BYTE PTR [rax],al
   14000d90f:	add    BYTE PTR [rax-0x28],dh
   14000d912:	add    BYTE PTR [rax+0x1],al
   14000d915:	add    BYTE PTR [rax],al
   14000d917:	add    BYTE PTR [rax+0x14000d8],cl
   14000d91d:	add    BYTE PTR [rax],al
   14000d91f:	add    BYTE PTR [rax+0x14000d8],bl
   14000d925:	add    BYTE PTR [rax],al
   14000d927:	add    BYTE PTR [rax+0x14000d8],dh
   14000d92d:	add    BYTE PTR [rax],al
   14000d92f:	add    BYTE PTR [rax+0x1b],ah
   14000d932:	add    BYTE PTR [rax+0x1],al
   14000d935:	add    BYTE PTR [rax],al
   14000d937:	add    BYTE PTR [rax],dl
   14000d939:	and    al,0x0
   14000d93b:	rex add DWORD PTR [rax],eax
   14000d93e:	add    BYTE PTR [rax],al
   14000d940:	adc    BYTE PTR [rsi],0x0
   14000d943:	rex add DWORD PTR [rax],eax
   14000d946:	add    BYTE PTR [rax],al
   14000d948:	loopne 0x14000d97a
   14000d94a:	add    BYTE PTR [rax+0x1],al
   14000d94d:	add    BYTE PTR [rax],al
   14000d94f:	add    BYTE PTR [rax+0x1400023],al
   14000d955:	add    BYTE PTR [rax],al
   14000d957:	add    al,dl
   14000d959:	(bad)  
   14000d95a:	add    BYTE PTR [rax+0x1],al
   14000d95d:	add    BYTE PTR [rax],al
   14000d95f:	add    al,dh
   14000d961:	xor    BYTE PTR [rax],al
   14000d963:	rex add DWORD PTR [rax],eax
   14000d966:	add    BYTE PTR [rax],al
   14000d968:	adc    BYTE PTR [rcx],dh
   14000d96a:	add    BYTE PTR [rax+0x1],al
   14000d96d:	add    BYTE PTR [rax],al
   14000d96f:	add    BYTE PTR [rax],ah
   14000d971:	xor    DWORD PTR [rax],eax
   14000d973:	rex add DWORD PTR [rax],eax
   14000d976:	add    BYTE PTR [rax],al
   14000d978:	mov    al,0x36
   14000d97a:	add    BYTE PTR [rax+0x1],al
   14000d97d:	add    BYTE PTR [rax],al
   14000d97f:	add    al,dl
   14000d981:	xor    al,BYTE PTR [rax]
   14000d983:	rex add DWORD PTR [rax],eax
   14000d986:	add    BYTE PTR [rax],al
   14000d988:	xor    BYTE PTR [rcx],dh
   14000d98a:	add    BYTE PTR [rax+0x1],al
   14000d98d:	add    BYTE PTR [rax],al
   14000d98f:	add    al,ah
   14000d991:	jg     0x14000d993
   14000d993:	rex add DWORD PTR [rax],eax
   14000d996:	add    BYTE PTR [rax],al
   14000d998:	rex add BYTE PTR [rax],0x40
   14000d99c:	add    DWORD PTR [rax],eax
   14000d99e:	add    BYTE PTR [rax],al
   14000d9a0:	jo     0x14000d922
   14000d9a2:	add    BYTE PTR [rax+0x1],al
   14000d9a5:	add    BYTE PTR [rax],al
   14000d9a7:	add    BYTE PTR [rax+0x1400080],dl
   14000d9ad:	add    BYTE PTR [rax],al
   14000d9af:	add    BYTE PTR [rax],ah
   14000d9b1:	add    BYTE PTR gs:[rax+0x1],al
   14000d9b5:	add    BYTE PTR [rax],al
   14000d9b7:	add    BYTE PTR [rax+0x1400080],al
   14000d9bd:	add    BYTE PTR [rax],al
   14000d9bf:	add    BYTE PTR [rax+0x79],dl
   14000d9c2:	add    BYTE PTR [rax+0x1],al
   14000d9c5:	add    BYTE PTR [rax],al
   14000d9c7:	add    BYTE PTR [rax+0x1400078],dl
   14000d9cd:	add    BYTE PTR [rax],al
   14000d9cf:	add    BYTE PTR [rax+0x1400078],dh
   14000d9d5:	add    BYTE PTR [rax],al
   14000d9d7:	add    BYTE PTR [rax],dl
   14000d9d9:	jo     0x14000d9db
   14000d9db:	rex add DWORD PTR [rax],eax
   14000d9de:	add    BYTE PTR [rax],al
   14000d9e0:	push   rax
   14000d9e1:	jno    0x14000d9e3
   14000d9e3:	rex add DWORD PTR [rax],eax
   14000d9e6:	add    BYTE PTR [rax],al
   14000d9e8:	shl    BYTE PTR [rdx+0x0],1
   14000d9eb:	rex add DWORD PTR [rax],eax
   14000d9ee:	add    BYTE PTR [rax],al
   14000d9f0:	shl    BYTE PTR [rcx+0x0],1
   14000d9f3:	rex add DWORD PTR [rax],eax
   14000d9f6:	add    BYTE PTR [rax],al
   14000d9f8:	jo     0x14000da73
   14000d9fa:	add    BYTE PTR [rax+0x1],al
   14000d9fd:	add    BYTE PTR [rax],al
   14000d9ff:	add    BYTE PTR [rax],al
   14000da01:	mov    bh,0x0
   14000da03:	rex add DWORD PTR [rax],eax
   14000da06:	add    BYTE PTR [rax],al
   14000da08:	add    BYTE PTR [rdi+0x14000],dh
   14000da0e:	add    BYTE PTR [rax],al
   14000da10:	add    BYTE PTR [rdi+0x14000],dh
   14000da16:	add    BYTE PTR [rax],al
   14000da18:	add    BYTE PTR [rdi+0x14000],dh
   14000da1e:	add    BYTE PTR [rax],al
   14000da20:	and    BYTE PTR [rbp+0x0],ah
   14000da23:	rex add DWORD PTR [rax],eax
   14000da26:	add    BYTE PTR [rax],al
   14000da28:	add    BYTE PTR [rdi+0x14000],dh
   14000da2e:	add    BYTE PTR [rax],al
   14000da30:	(bad)  
   14000da31:	push   rbp
   14000da32:	add    BYTE PTR [rax+0x1],al
   14000da35:	add    BYTE PTR [rax],al
   14000da37:	add    BYTE PTR [rax],dl
   14000da39:	mov    bh,0x0
   14000da3b:	rex add DWORD PTR [rax],eax
   14000da3e:	add    BYTE PTR [rax],al
   14000da40:	lock mov al,BYTE PTR [rax]
   14000da43:	rex add DWORD PTR [rax],eax
   14000da46:	add    BYTE PTR [rax],al
   14000da48:	loopne 0x14000d9d4
   14000da4a:	add    BYTE PTR [rax+0x1],al
   14000da4d:	add    BYTE PTR [rax],al
   14000da4f:	add    BYTE PTR [rax+0x140008a],dh
   14000da55:	add    BYTE PTR [rax],al
   14000da57:	add    al,al
   14000da59:	pop    rbp
   14000da5a:	add    BYTE PTR [rax+0x1],al
   14000da5d:	add    BYTE PTR [rax],al
   14000da5f:	add    al,dl
   14000da61:	mov    al,BYTE PTR [rax]
   14000da63:	rex add DWORD PTR [rax],eax
   14000da66:	add    BYTE PTR [rax],al
   14000da68:	ror    BYTE PTR [rdx+0x14000],0x0
   14000da6f:	add    BYTE PTR [rax],al
   14000da71:	mov    eax,DWORD PTR [rax]
   14000da73:	rex add DWORD PTR [rax],eax
   14000da76:	add    BYTE PTR [rax],al
   14000da78:	jo     0x14000dad5
   14000da7a:	add    BYTE PTR [rax+0x1],al
   14000da7d:	add    BYTE PTR [rax],al
   14000da7f:	add    BYTE PTR [rax+0x1400088],dl
   14000da85:	add    BYTE PTR [rax],al
   14000da87:	add    al,dl
   14000da89:	xchg   DWORD PTR [rax],eax
   14000da8b:	rex add DWORD PTR [rax],eax
   14000da8e:	add    BYTE PTR [rax],al
   14000da90:	lock xchg DWORD PTR [rax],eax
   14000da93:	rex add DWORD PTR [rax],eax
   14000da96:	add    BYTE PTR [rax],al
   14000da98:	rcr    BYTE PTR [rdx+0x0],0x40
   14000da9c:	add    DWORD PTR [rax],eax
   14000da9e:	add    BYTE PTR [rax],al
   14000daa0:	adc    BYTE PTR [rbx+0x0],bl
   14000daa3:	rex add DWORD PTR [rax],eax
   14000daa6:	add    BYTE PTR [rax],al
   14000daa8:	loopne 0x14000db05
   14000daaa:	add    BYTE PTR [rax+0x1],al
   14000daad:	add    BYTE PTR [rax],al
   14000daaf:	add    BYTE PTR [rax+0x5c],al
   14000dab2:	add    BYTE PTR [rax+0x1],al
   14000dab5:	add    BYTE PTR [rax],al
   14000dab7:	add    BYTE PTR [rax+0x140005c],ah
   14000dabd:	add    BYTE PTR [rax],al
   14000dabf:	add    BYTE PTR [rax+0x5a],dh
   14000dac2:	add    BYTE PTR [rax+0x1],al
   14000dac5:	add    BYTE PTR [rax],al
   14000dac7:	add    al,dl
   14000dac9:	pop    rcx
   14000daca:	add    BYTE PTR [rax+0x1],al
   14000dacd:	add    BYTE PTR [rax],al
   14000dacf:	add    BYTE PTR [rax],ah
   14000dad1:	pop    rdx
   14000dad2:	add    BYTE PTR [rax+0x1],al
   14000dad5:	add    BYTE PTR [rax],al
   14000dad7:	add    BYTE PTR [rax],al
   14000dad9:	pop    rbp
   14000dada:	add    BYTE PTR [rax+0x1],al
   14000dadd:	add    BYTE PTR [rax],al
   14000dadf:	add    BYTE PTR [rax+0x5d],ah
   14000dae2:	add    BYTE PTR [rax+0x1],al
   14000dae5:	add    BYTE PTR [rax],al
   14000dae7:	add    BYTE PTR [rax],dh
   14000dae9:	pop    rcx
   14000daea:	add    BYTE PTR [rax+0x1],al
   14000daed:	add    BYTE PTR [rax],al
   14000daef:	add    BYTE PTR [rax+0x1400088],dh
   14000daf5:	add    BYTE PTR [rax],al
   14000daf7:	add    BYTE PTR [rax-0x6f],dl
   14000dafa:	add    BYTE PTR [rax+0x1],al
   14000dafd:	add    BYTE PTR [rax],al
   14000daff:	add    BYTE PTR [rax-0x73],al
   14000db02:	add    BYTE PTR [rax+0x1],al
   14000db05:	add    BYTE PTR [rax],al
   14000db07:	add    BYTE PTR [rax+0x1400090],dh
   14000db0d:	add    BYTE PTR [rax],al
   14000db0f:	add    BYTE PTR [rax+0x1400085],dl
   14000db15:	add    BYTE PTR [rax],al
   14000db17:	add    al,ah
   14000db19:	test   DWORD PTR [rax],eax
   14000db1b:	rex add DWORD PTR [rax],eax
   14000db1e:	add    BYTE PTR [rax],al
   14000db20:	xchg   BYTE PTR [rax],al
   14000db23:	rex add DWORD PTR [rax],eax
   14000db26:	add    BYTE PTR [rax],al
   14000db28:	xor    BYTE PTR [rbp+0x14000],al
   14000db2e:	add    BYTE PTR [rax],al
   14000db30:	jo     0x14000dac3
   14000db32:	add    BYTE PTR [rax+0x1],al
   14000db35:	add    BYTE PTR [rax],al
   14000db37:	add    BYTE PTR [rax+0x140008f],dl
   14000db3d:	add    BYTE PTR [rax],al
   14000db3f:	add    BYTE PTR [rax-0x73],al
   14000db42:	add    BYTE PTR [rax+0x1],al
   14000db45:	add    BYTE PTR [rax],al
   14000db47:	add    al,dh
   14000db49:	mov    es,WORD PTR [rax]
   14000db4b:	rex add DWORD PTR [rax],eax
   14000db4e:	add    BYTE PTR [rax],al
   14000db50:	adc    BYTE PTR [rbx+0x14000],cl
   14000db56:	add    BYTE PTR [rax],al
   14000db58:	mov    al,0x8f
   14000db5a:	add    BYTE PTR [rax+0x1],al
   14000db5d:	add    BYTE PTR [rax],al
   14000db5f:	add    al,al
   14000db61:	lea    eax,[rax]
   14000db63:	rex add DWORD PTR [rax],eax
   14000db66:	add    BYTE PTR [rax],al
   14000db68:	rex lea eax,[rax]
   14000db6b:	rex add DWORD PTR [rax],eax
   14000db6e:	add    BYTE PTR [rax],al
   14000db70:	(bad)  
   14000db71:	lea    eax,[rax]
   14000db73:	rex add DWORD PTR [rax],eax
   14000db76:	add    BYTE PTR [rax],al
   14000db78:	rcl    BYTE PTR [rdx+0x14000],0x0
   14000db7f:	add    BYTE PTR [rax-0x6d],dl
   14000db82:	add    BYTE PTR [rax+0x1],al
   14000db85:	add    BYTE PTR [rax],al
   14000db87:	add    BYTE PTR [rax],al
   14000db89:	mov    bh,0x0
   14000db8b:	rex add DWORD PTR [rax],eax
   14000db8e:	add    BYTE PTR [rax],al
   14000db90:	add    BYTE PTR [rdi+0x14000],dh
   14000db96:	add    BYTE PTR [rax],al
   14000db98:	add    BYTE PTR [rdi+0x14000],dh
   14000db9e:	add    BYTE PTR [rax],al
   14000dba0:	rcl    BYTE PTR [rdx+0x14000],0x0
   14000dba7:	add    BYTE PTR [rax-0x6d],dl
   14000dbaa:	add    BYTE PTR [rax+0x1],al
   14000dbad:	add    BYTE PTR [rax],al
   14000dbaf:	add    al,dh
   14000dbb1:	test   eax,0x14000
   14000dbb6:	add    BYTE PTR [rax],al
   14000dbb8:	movabs al,ds:0x50000000014000a9
   14000dbc1:	stos   BYTE PTR es:[rdi],al
   14000dbc2:	add    BYTE PTR [rax+0x1],al
   14000dbc5:	add    BYTE PTR [rax],al
   14000dbc7:	add    BYTE PTR [rax+0x1400080],dl
   14000dbcd:	add    BYTE PTR [rax],al
   14000dbcf:	add    BYTE PTR [rax],ah
   14000dbd1:	add    BYTE PTR gs:[rax+0x1],al
   14000dbd5:	add    BYTE PTR [rax],al
   14000dbd7:	add    BYTE PTR [rax+0x1400080],al
   14000dbdd:	add    BYTE PTR [rax],al
   14000dbdf:	add    BYTE PTR [rax-0x57],al
   14000dbe2:	add    BYTE PTR [rax+0x1],al
   14000dbe5:	add    BYTE PTR [rax],al
   14000dbe7:	add    BYTE PTR [rax+0x14000a9],ah
   14000dbed:	add    BYTE PTR [rax],al
   14000dbef:	add    al,ah
   14000dbf1:	test   eax,0x14000
   14000dbf6:	add    BYTE PTR [rax],al
   14000dbf8:	nop
   14000dbf9:	add    BYTE PTR [rax],0x40
   14000dbfc:	add    DWORD PTR [rax],eax
   14000dbfe:	add    BYTE PTR [rax],al
   14000dc00:	and    BYTE PTR [rbp+0x0],ah
   14000dc03:	rex add DWORD PTR [rax],eax
   14000dc06:	add    BYTE PTR [rax],al
   14000dc08:	add    BYTE PTR [rax+0x14000],0x0
   14000dc0f:	add    BYTE PTR [rbx+0x0],dl
   14000dc12:	jo     0x14000dc14
   14000dc14:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14000dc19:	add    BYTE PTR [rcx+0x0],ch
   14000dc1c:	outs   dx,BYTE PTR ds:[rsi]
   14000dc1d:	add    BYTE PTR [rdi+0x0],ah
   14000dc20:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000dc24:	jae    0x14000dc26
   14000dc26:	je     0x14000dc28
   14000dc28:	push   rbx
   14000dc29:	add    BYTE PTR [rcx+0x0],ch
   14000dc2c:	outs   dx,BYTE PTR ds:[rsi]
   14000dc2d:	add    BYTE PTR [rdi+0x0],ah
   14000dc30:	ins    BYTE PTR es:[rdi],dx
   14000dc31:	add    BYTE PTR [rbp+0x0],ah
   14000dc34:	je     0x14000dc36
   14000dc36:	outs   dx,DWORD PTR ds:[rsi]
   14000dc37:	add    BYTE PTR [rsi+0x0],ch
   14000dc3a:	rex.WRB add BYTE PTR [r13+0x0],r14b
   14000dc3e:	je     0x14000dc40
   14000dc40:	add    BYTE PTR gs:[rax+0x0],bh
   14000dc44:	add    BYTE PTR [rax],al
   14000dc46:	add    BYTE PTR [rax],al
   14000dc48:	push   rbx
   14000dc49:	add    BYTE PTR [rax+0x0],dh
   14000dc4c:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14000dc51:	add    BYTE PTR [rcx+0x0],ch
   14000dc54:	outs   dx,BYTE PTR ds:[rsi]
   14000dc55:	add    BYTE PTR [rdi+0x0],ah
   14000dc58:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000dc5c:	jae    0x14000dc5e
   14000dc5e:	je     0x14000dc60
   14000dc60:	add    BYTE PTR [r11+0x0],spl
   14000dc64:	je     0x14000dc66
   14000dc66:	imul   eax,DWORD PTR [rax],0x610076
   14000dc6c:	je     0x14000dc6e
   14000dc6e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000dc74:	rex.WRB add BYTE PTR [r13+0x0],r14b
   14000dc78:	je     0x14000dc7a
   14000dc7a:	add    BYTE PTR gs:[rax+0x0],bh
   14000dc7e:	add    BYTE PTR [rax],al
   14000dc80:	push   rbx
   14000dc81:	add    BYTE PTR [rax+0x0],dh
   14000dc84:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14000dc89:	add    BYTE PTR [rcx+0x0],ch
   14000dc8c:	outs   dx,BYTE PTR ds:[rsi]
   14000dc8d:	add    BYTE PTR [rdi+0x0],ah
   14000dc90:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000dc94:	jae    0x14000dc96
   14000dc96:	je     0x14000dc98
   14000dc98:	push   rdx
   14000dc99:	add    BYTE PTR [rbp+0x0],ah
   14000dc9c:	add    BYTE PTR [ecx+0x0],ch
   14000dca0:	jae    0x14000dca2
   14000dca2:	je     0x14000dca4
   14000dca4:	jb     0x14000dca6
   14000dca6:	(bad)  
   14000dca7:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000dcab:	add    BYTE PTR [rdi+0x0],ch
   14000dcae:	outs   dx,BYTE PTR ds:[rsi]
   14000dcaf:	add    BYTE PTR [rbx+0x0],al
   14000dcb2:	outs   dx,DWORD PTR ds:[rsi]
   14000dcb3:	add    BYTE PTR [rbp+0x0],ch
   14000dcb6:	jo     0x14000dcb8
   14000dcb8:	ins    BYTE PTR es:[rdi],dx
   14000dcb9:	add    BYTE PTR [rbp+0x0],ah
   14000dcbc:	je     0x14000dcbe
   14000dcbe:	add    BYTE PTR gs:[rax],al
   14000dcc1:	add    BYTE PTR [rax],al
   14000dcc3:	add    BYTE PTR [rax],al
   14000dcc5:	add    BYTE PTR [rax],al
   14000dcc7:	add    BYTE PTR [rbx+0x0],dl
   14000dcca:	jo     0x14000dccc
   14000dccc:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14000dcd1:	add    BYTE PTR [rcx+0x0],ch
   14000dcd4:	outs   dx,BYTE PTR ds:[rsi]
   14000dcd5:	add    BYTE PTR [rdi+0x0],ah
   14000dcd8:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000dcdc:	jae    0x14000dcde
   14000dcde:	je     0x14000dce0
   14000dce0:	push   rax
   14000dce1:	add    BYTE PTR [rcx+0x0],cl
   14000dce4:	add    BYTE PTR [rbx+0x0],r10b
   14000dce8:	push   0x72006100
   14000dced:	add    BYTE PTR [rbp+0x0],ah
   14000dcf0:	add    BYTE PTR fs:[rbp+0x0],cl
   14000dcf4:	add    BYTE PTR gs:[rbp+0x0],ch
   14000dcf8:	outs   dx,DWORD PTR ds:[rsi]
   14000dcf9:	add    BYTE PTR [rdx+0x0],dh
   14000dcfc:	jns    0x14000dcfe
   14000dcfe:	add    BYTE PTR [rax],al
   14000dd00:	jnp    0x14000dd02
   14000dd02:	rex.RX add BYTE PTR [rcx],r14b
   14000dd05:	add    BYTE PTR [rax+rax*1],dh
   14000dd08:	xor    al,BYTE PTR [rax]
   14000dd0a:	xor    eax,0x36004100
   14000dd0f:	add    BYTE PTR [rdi],dh
   14000dd11:	add    BYTE PTR [rip+0x35003100],ch        # 0x175010e17
   14000dd17:	add    BYTE PTR [rax+rax*1],dh
   14000dd1a:	xor    eax,0x34002d00
   14000dd1f:	add    BYTE PTR [rax+rax*1],dh
   14000dd22:	add    BYTE PTR [r10],sil
   14000dd25:	add    BYTE PTR [rip+0x42004100],ch        # 0x182011e2b
   14000dd2b:	add    BYTE PTR [rip+0x2d003900],dh        # 0x16d011631
   14000dd31:	add    BYTE PTR [rax],bh
   14000dd33:	add    BYTE PTR [rax+rax*1+0x46],al
   14000dd37:	add    BYTE PTR [rcx],dh
   14000dd39:	add    BYTE PTR [rax],dh
   14000dd3b:	add    BYTE PTR [rdx],dh
   14000dd3d:	add    BYTE PTR [rax],dh
   14000dd3f:	add    BYTE PTR [rax+rax*1],dh
   14000dd42:	xor    eax,0x44003200
   14000dd47:	add    BYTE PTR [rcx],bh
   14000dd49:	add    BYTE PTR [rbp+0x0],bh
   14000dd4c:	add    BYTE PTR [rax],al
   14000dd4e:	add    BYTE PTR [rax],al
   14000dd50:	rex.WRB add BYTE PTR [r11+0x0],r14b
   14000dd54:	movsxd eax,DWORD PTR [rax]
   14000dd56:	outs   dx,DWORD PTR ds:[rsi]
   14000dd57:	add    BYTE PTR [rdx+0x0],dh
   14000dd5a:	add    BYTE PTR gs:[rbp+0x0],ah
   14000dd5e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000dd63:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000dd67:	add    BYTE PTR [rip+0x2f00],ch        # 0x140010c6d
   14000dd6d:	add    BYTE PTR [rax],al
   14000dd6f:	add    BYTE PTR [rbp+0x0],dl
   14000dd72:	outs   dx,BYTE PTR ds:[rsi]
   14000dd73:	add    BYTE PTR [rdx+0x0],dh
   14000dd76:	add    BYTE PTR gs:[rdi+0x0],ah
   14000dd7a:	push   rbx
   14000dd7b:	add    BYTE PTR [rbp+0x0],ah
   14000dd7e:	jb     0x14000dd80
   14000dd80:	jbe    0x14000dd82
   14000dd82:	add    BYTE PTR gs:[rdx+0x0],dh
   14000dd86:	add    BYTE PTR [rax],al
   14000dd88:	push   rdx
   14000dd89:	add    BYTE PTR [rbp+0x0],ah
   14000dd8c:	add    BYTE PTR [ebx+0x0],dl
   14000dd90:	add    BYTE PTR gs:[rdx+0x0],dh
   14000dd94:	jbe    0x14000dd96
   14000dd96:	add    BYTE PTR gs:[rdx+0x0],dh
   14000dd9a:	add    BYTE PTR [rax],al
   14000dd9c:	add    BYTE PTR [rax],al
   14000dd9e:	add    BYTE PTR [rax],al
   14000dda0:	rex.RX add DWORD PTR [rax],r8d
   14000dda3:	add    BYTE PTR [rax],al
   14000dda5:	add    BYTE PTR [rax],al
   14000dda7:	add    al,al
   14000dda9:	add    BYTE PTR [rax],al
   14000ddab:	add    BYTE PTR [rax],al
   14000ddad:	add    BYTE PTR [rax],al
   14000ddaf:	rex.RX adc r12b,al
   14000ddb2:	add    al,BYTE PTR [rax]
   14000ddb4:	add    BYTE PTR [rax],al
   14000ddb6:	add    BYTE PTR [rax],al
   14000ddb8:	rol    BYTE PTR [rax],0x0
   14000ddbb:	add    BYTE PTR [rax],al
   14000ddbd:	add    BYTE PTR [rax],al
   14000ddbf:	rex.RX pop rsp
   14000ddc1:	add    BYTE PTR [rdx+0x0],dl
   14000ddc4:	add    BYTE PTR gs:[rcx+0x0],dh
   14000ddc8:	jne    0x14000ddca
   14000ddca:	imul   eax,DWORD PTR [rax],0x650072
   14000ddd0:	add    BYTE PTR fs:[rax],ah
   14000ddd3:	add    BYTE PTR [rbx+0x0],al
   14000ddd6:	(bad)  
   14000ddd7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000dddb:	add    BYTE PTR [rdi+0x0],ah
   14000ddde:	outs   dx,DWORD PTR ds:[rsi]
   14000dddf:	add    BYTE PTR [rdx+0x0],dh
   14000dde2:	imul   eax,DWORD PTR [rax],0x730065
	...
   14000ddf0:	add    BYTE PTR [r8+r8*1+0x53],cl
   14000ddf5:	add    BYTE PTR [rcx+0x0],cl
   14000ddf8:	add    BYTE PTR [rax+rax*1+0x0],r11b
   14000ddfd:	add    BYTE PTR [rax],al
   14000ddff:	add    BYTE PTR [rax+rax*1+0x49],bl
   14000de03:	add    BYTE PTR [rbp+0x0],ch
   14000de06:	jo     0x14000de08
   14000de08:	ins    BYTE PTR es:[rdi],dx
   14000de09:	add    BYTE PTR [rbp+0x0],ah
   14000de0c:	ins    DWORD PTR es:[rdi],dx
   14000de0d:	add    BYTE PTR [rbp+0x0],ah
   14000de10:	outs   dx,BYTE PTR ds:[rsi]
   14000de11:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000de15:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000de19:	add    BYTE PTR [rbx+0x0],al
   14000de1c:	(bad)  
   14000de1d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000de21:	add    BYTE PTR [rdi+0x0],ah
   14000de24:	outs   dx,DWORD PTR ds:[rsi]
   14000de25:	add    BYTE PTR [rdx+0x0],dh
   14000de28:	imul   eax,DWORD PTR [rax],0x730065
   14000de2e:	add    BYTE PTR [rax],al
   14000de30:	add    BYTE PTR cs:[rax+rax*1+0x6c],dh
   14000de35:	add    BYTE PTR [rdx+0x0],ah
	...
   14000de48:	rol    BYTE PTR [rax],0x0
   14000de4b:	add    BYTE PTR [rax],al
   14000de4d:	add    BYTE PTR [rax],al
   14000de4f:	rex.RX pop rbx
   14000de51:	add    DWORD PTR [rax],eax
   14000de53:	add    BYTE PTR [rax],al
   14000de55:	add    BYTE PTR [rax],al
   14000de57:	add    al,al
   14000de59:	add    BYTE PTR [rax],al
   14000de5b:	add    BYTE PTR [rax],al
   14000de5d:	add    BYTE PTR [rax],al
   14000de5f:	rex.RX
   14000de60:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000de64:	add    BYTE PTR fs:[rbp+0x0],dh
   14000de68:	ins    BYTE PTR es:[rdi],dx
   14000de69:	add    BYTE PTR [rbp+0x0],ah
   14000de6c:	add    BYTE PTR [rax],al
   14000de6e:	add    BYTE PTR [rax],al
   14000de70:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000de74:	add    BYTE PTR fs:[rbp+0x0],dh
   14000de78:	ins    BYTE PTR es:[rdi],dx
   14000de79:	add    BYTE PTR [rbp+0x0],ah
   14000de7c:	pop    rdi
   14000de7d:	add    BYTE PTR [rdx+0x0],dl
   14000de80:	(bad)  
   14000de81:	add    BYTE PTR [rdi+0x0],dh
   14000de84:	add    BYTE PTR [rax],al
   14000de86:	add    BYTE PTR [rax],al
   14000de88:	push   rdx
   14000de89:	add    BYTE PTR [rbp+0x0],al
   14000de8c:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14000de90:	push   rbx
   14000de91:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000de95:	add    BYTE PTR [rcx+0x0],bl
	...
   14000dea0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000dea4:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   14000deb0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000deb4:	rex.XB add BYTE PTR [r13+0x0],dl
	...
   14000dec0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000dec4:	rex.WR add BYTE PTR [rbp+0x0],r9b
	...
   14000ded0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ded4:	push   rbp
   14000ded5:	add    BYTE PTR [rax],al
   14000ded7:	add    BYTE PTR [rax+0x0],cl
   14000deda:	rex.WXB add BYTE PTR [r8+0x0],dl
   14000dede:	add    BYTE PTR [rax],r8b
   14000dee1:	add    BYTE PTR [rax],al
   14000dee3:	add    BYTE PTR [rax],al
   14000dee5:	add    BYTE PTR [rax],al
   14000dee7:	add    BYTE PTR [rax+0x0],cl
   14000deea:	rex.WXB add BYTE PTR [r8+r8*1+0x44],al
	...
   14000def7:	add    BYTE PTR [rax+0x0],cl
   14000defa:	rex.WXB add BYTE PTR [r11+0x0],al
   14000defe:	rex.XB add BYTE PTR [r8],al
   14000df01:	add    BYTE PTR [rax],al
   14000df03:	add    BYTE PTR [rax],al
   14000df05:	add    BYTE PTR [rax],al
   14000df07:	add    BYTE PTR [rax+0x0],cl
   14000df0a:	rex.WXB add BYTE PTR [r13+0x0],al
   14000df0e:	pop    rcx
   14000df0f:	add    BYTE PTR [rdi+0x0],bl
   14000df12:	add    BYTE PTR [r8+r8*1+0x41],cl
   14000df17:	add    BYTE PTR [rbx+0x0],dl
   14000df1a:	push   rbx
   14000df1b:	add    BYTE PTR [rbp+0x0],al
   14000df1e:	push   rbx
   14000df1f:	add    BYTE PTR [rdi+0x0],bl
   14000df22:	push   rdx
   14000df23:	add    BYTE PTR [rdi+0x0],cl
   14000df26:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r10b
   14000df2b:	add    BYTE PTR [rax],al
   14000df2d:	add    BYTE PTR [rax],al
   14000df2f:	add    BYTE PTR [rax+0x0],cl
   14000df32:	rex.WXB add BYTE PTR [r13+0x0],al
   14000df36:	pop    rcx
   14000df37:	add    BYTE PTR [rdi+0x0],bl
   14000df3a:	rex.XB add BYTE PTR [r13+0x0],dl
   14000df3e:	push   rdx
   14000df3f:	add    BYTE PTR [rdx+0x0],dl
   14000df42:	add    BYTE PTR [r14+0x0],r9b
   14000df46:	push   rsp
   14000df47:	add    BYTE PTR [rdi+0x0],bl
   14000df4a:	push   rbp
   14000df4b:	add    BYTE PTR [rbx+0x0],dl
   14000df4e:	add    BYTE PTR [r10+0x0],r10b
   14000df52:	add    BYTE PTR [rax],al
   14000df54:	add    BYTE PTR [rax],al
   14000df56:	add    BYTE PTR [rax],al
   14000df58:	rex.W add BYTE PTR [rbx+0x0],cl
   14000df5c:	add    BYTE PTR [r9+0x0],r11b
   14000df60:	pop    rdi
   14000df61:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000df65:	add    BYTE PTR [rbx+0x0],al
   14000df68:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000df6d:	add    BYTE PTR [rbp+0x0],cl
   14000df70:	add    BYTE PTR [r11+0x0],al
   14000df74:	rex.W add BYTE PTR [rcx+0x0],cl
   14000df78:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000df7c:	add    BYTE PTR [rax],al
   14000df7e:	add    BYTE PTR [rax],al
   14000df80:	rex.W add BYTE PTR [rbx+0x0],cl
   14000df84:	add    BYTE PTR [r9+0x0],r11b
   14000df88:	pop    rdi
   14000df89:	add    BYTE PTR [rbp+0x0],dl
   14000df8c:	push   rbx
   14000df8d:	add    BYTE PTR [rbp+0x0],al
   14000df90:	push   rdx
   14000df91:	add    BYTE PTR [rbx+0x0],dl
   14000df94:	add    BYTE PTR [rax],al
   14000df96:	add    BYTE PTR [rax],al
   14000df98:	rex.W add BYTE PTR [rbx+0x0],cl
   14000df9c:	add    BYTE PTR [r9+0x0],r11b
   14000dfa0:	pop    rdi
   14000dfa1:	add    BYTE PTR [rax+0x0],dl
   14000dfa4:	add    BYTE PTR [r10+0x0],r10b
   14000dfa8:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000dfac:	push   rdx
   14000dfad:	add    BYTE PTR [rbp+0x0],cl
   14000dfb0:	add    BYTE PTR [r14+0x0],cl
   14000dfb4:	rex.XB add BYTE PTR [r13+0x0],al
   14000dfb8:	pop    rdi
   14000dfb9:	add    BYTE PTR [rax+rax*1+0x41],al
   14000dfbd:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000dfc1:	add    BYTE PTR [rax],al
   14000dfc3:	add    BYTE PTR [rax],al
   14000dfc5:	add    BYTE PTR [rax],al
   14000dfc7:	add    BYTE PTR [rax+0x0],cl
   14000dfca:	rex.WXB add BYTE PTR [r13+0x0],al
   14000dfce:	pop    rcx
   14000dfcf:	add    BYTE PTR [rdi+0x0],bl
   14000dfd2:	add    BYTE PTR [rcx+0x0],r11b
   14000dfd6:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000dfda:	add    BYTE PTR [rcx+0x0],r8b
   14000dfde:	push   rsp
   14000dfdf:	add    BYTE PTR [rcx+0x0],al
   14000dfe2:	add    BYTE PTR [rax],al
   14000dfe4:	add    BYTE PTR [rax],al
   14000dfe6:	add    BYTE PTR [rax],al
   14000dfe8:	rex.W add BYTE PTR [rbx+0x0],cl
   14000dfec:	add    BYTE PTR [r9+0x0],r11b
   14000dff0:	pop    rdi
   14000dff1:	add    BYTE PTR [rbx+0x0],al
   14000dff4:	push   rbp
   14000dff5:	add    BYTE PTR [rdx+0x0],dl
   14000dff8:	push   rdx
   14000dff9:	add    BYTE PTR [rbp+0x0],al
   14000dffc:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   14000e001:	add    BYTE PTR [rbx+0x0],al
   14000e004:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000e008:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000e00c:	rex.RXB add BYTE PTR [r8],r8b
   14000e00f:	add    BYTE PTR [rax+0x14000de],ah
   14000e015:	add    BYTE PTR [rax],al
   14000e017:	add    BYTE PTR [rax],al
   14000e019:	add    BYTE PTR [rax],al
   14000e01b:	cmp    bh,0xff
   14000e01e:	(bad)  
   14000e01f:	push   QWORD PTR [rax+0x14000de]
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rcx],al
   14000e029:	add    BYTE PTR [rax],al
   14000e02b:	cmp    bh,0xff
   14000e02e:	(bad)  
   14000e02f:	inc    eax
   14000e031:	fiadd  WORD PTR [rax]
   14000e033:	rex add DWORD PTR [rax],eax
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	add    al,BYTE PTR [rax]
   14000e03a:	add    BYTE PTR [rax-0x1],al
   14000e040:	rcr    dh,1
   14000e042:	add    BYTE PTR [rax+0x1],al
   14000e045:	add    BYTE PTR [rax],al
   14000e047:	add    BYTE PTR [rbx],al
   14000e049:	add    BYTE PTR [rax],al
   14000e04b:	cmp    bh,0xff
   14000e04e:	(bad)  
   14000e04f:	(bad)  
   14000e050:	fcomp  st(6)
   14000e052:	add    BYTE PTR [rax+0x1],al
   14000e055:	add    BYTE PTR [rax],al
   14000e057:	add    BYTE PTR [rax+rax*1],al
   14000e05a:	add    BYTE PTR [rax-0x1],al
   14000e060:	call   0x14140e143
   14000e065:	add    BYTE PTR [rax],al
   14000e067:	add    BYTE PTR [rsi],al
   14000e069:	add    BYTE PTR [rax],al
   14000e06b:	cmp    bh,0xff
   14000e06e:	(bad)  
   14000e06f:	(bad)  
   14000e070:	clc    
   14000e071:	fiadd  WORD PTR [rax]
   14000e073:	rex add DWORD PTR [rax],eax
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	add    eax,0xff800000
   14000e07d:	(bad)  
   14000e07e:	(bad)  
   14000e07f:	dec    DWORD PTR [rax]
   14000e081:	fild   WORD PTR [rax]
   14000e083:	rex add DWORD PTR [rax],eax
   14000e086:	add    BYTE PTR [rax],al
   14000e088:	add    BYTE PTR [rax],al
   14000e08a:	add    BYTE PTR [rax-0x1],al
   14000e090:	xor    bh,bl
   14000e092:	add    BYTE PTR [rax+0x1],al
   14000e095:	add    BYTE PTR [rax],al
   14000e097:	add    BYTE PTR [rcx],al
   14000e099:	add    BYTE PTR [rax],al
   14000e09b:	cmp    bh,0xff
   14000e09e:	(bad)  
   14000e09f:	call   FWORD PTR [rax-0x21]
   14000e0a2:	add    BYTE PTR [rax+0x1],al
   14000e0a5:	add    BYTE PTR [rax],al
   14000e0a7:	add    BYTE PTR [rdx],al
   14000e0a9:	add    BYTE PTR [rax],al
   14000e0ab:	cmp    bh,0xff
   14000e0ae:	(bad)  
   14000e0af:	inc    DWORD PTR [rax+0x14000df]
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rbx],al
   14000e0b9:	add    BYTE PTR [rax],al
   14000e0bb:	cmp    bh,0xff
   14000e0be:	(bad)  
   14000e0bf:	call   FWORD PTR [rax+0x14000df]
   14000e0c5:	add    BYTE PTR [rax],al
   14000e0c7:	add    BYTE PTR [rax+rax*1],al
   14000e0ca:	add    BYTE PTR [rax-0x1],al
   14000e0d0:	enter  0xdf,0x40
   14000e0d4:	add    DWORD PTR [rax],eax
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	(bad)  
   14000e0d9:	add    BYTE PTR [rax],al
   14000e0db:	cmp    bh,0xff
   14000e0de:	(bad)  
   14000e0df:	(bad)  
   14000e0e0:	call   0x14140e1c4
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f80e0ed
   14000e0ed:	(bad)  
   14000e0ee:	(bad)  
   14000e0ef:	inc    DWORD PTR [rcx+0x0]
   14000e0f2:	push   rax
   14000e0f3:	add    BYTE PTR [rcx+0x0],cl
   14000e0f6:	sub    eax,0x53004d00
   14000e0fb:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a9013801
   14000e101:	add    BYTE PTR [rsi+0x0],ch
   14000e104:	sub    eax,0x6f004300
   14000e109:	add    BYTE PTR [rdx+0x0],dh
   14000e10c:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af012d13
   14000e113:	add    BYTE PTR [rbx+0x0],ah
   14000e116:	(bad)  
   14000e117:	add    BYTE PTR [rax+rax*1+0x52],ch
   14000e11b:	add    BYTE PTR [rbp+0x0],ah
   14000e11e:	add    BYTE PTR [ecx+0x0],ch
   14000e122:	jae    0x14000e124
   14000e124:	je     0x14000e126
   14000e126:	jb     0x14000e128
   14000e128:	jns    0x14000e12a
   14000e12a:	sub    eax,0x31004c00
   14000e12f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d011235
   14000e135:	add    BYTE PTR [rax],dh
   14000e137:	add    BYTE PTR [rsi],ch
   14000e139:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000e13d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000e141:	add    BYTE PTR [rax],al
   14000e143:	add    BYTE PTR [rax],al
   14000e145:	add    BYTE PTR [rax],al
   14000e147:	add    BYTE PTR [rdx+0x65],dl
   14000e14a:	addr32 rex.R
   14000e14c:	gs ins BYTE PTR es:[rdi],dx
   14000e14e:	gs je  0x14000e1b6
   14000e151:	rex.WXB
   14000e152:	gs jns 0x14000e19a
   14000e155:	js     0x14000e1ae
   14000e157:	add    BYTE PTR [rcx+0x0],ah
   14000e15a:	add    BYTE PTR fs:[rsi+0x0],dh
   14000e15e:	(bad)  
   14000e15f:	add    BYTE PTR [rax+0x0],dh
   14000e162:	imul   eax,DWORD PTR [rax],0x320033
   14000e168:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000e16d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000e171:	add    BYTE PTR [rax],al
   14000e173:	add    BYTE PTR [rax],al
   14000e175:	add    BYTE PTR [rax],al
   14000e177:	add    BYTE PTR [rdx+0x65],dl
   14000e17a:	addr32 rex.R
   14000e17c:	gs ins BYTE PTR es:[rdi],dx
   14000e17e:	gs je  0x14000e1e6
   14000e181:	rex.WXB
   14000e182:	gs jns 0x14000e1dc
   14000e185:	add    BYTE PTR [rax],al
   14000e187:	add    BYTE PTR [rcx+0x0],al
   14000e18a:	push   rax
   14000e18b:	add    BYTE PTR [rax+0x0],dl
   14000e18e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000e193:	add    BYTE PTR [rdx],al
   14000e195:	add    al,0x0
	...
   14000e19f:	add    BYTE PTR [rax],al
   14000e1a2:	add    BYTE PTR [rax],al
   14000e1a4:	add    BYTE PTR [rax],al
   14000e1a6:	add    BYTE PTR [rax+0x10000004],al
   14000e1ac:	add    al,0xf0
	...
   14000e1b6:	add    BYTE PTR [rax+0x10000003],al
   14000e1bc:	add    al,0x9
	...
   14000e1c6:	add    BYTE PTR [rax+0x9000002],al
   14000e1cc:	add    al,BYTE PTR [rax]
	...
   14000e1d6:	add    BYTE PTR [rax+0x1],al
   14000e1d9:	add    BYTE PTR [rax],al
   14000e1db:	or     DWORD PTR [rdx],eax
	...
   14000e1e5:	add    BYTE PTR [rax],al
   14000e1e7:	add    BYTE PTR [rax],al
   14000e1ea:	add    BYTE PTR [rcx],cl
   14000e1ec:	add    al,BYTE PTR [rax]
	...
   14000e1f6:	add    BYTE PTR [rax-0x4f],al
   14000e1f9:	sub    bl,dl
   14000e1fb:	sbb    eax,ecx
   14000e1fd:	mov    ebx,0x49a84acb
   14000e202:	shr    bh,0x2b
   14000e205:	and    al,0x96
   14000e207:	jb     0x14000e241
   14000e209:	loop   0x14000e20b
   14000e20b:	rex add DWORD PTR [rax],eax
	...
   14000e216:	add    BYTE PTR [rax],al
   14000e218:	add    DWORD PTR [rax],eax
	...
   14000e236:	add    BYTE PTR [rax],al
   14000e238:	add    DWORD PTR [rcx],eax
   14000e23a:	add    BYTE PTR [rax],al
   14000e23c:	add    BYTE PTR [rax],al
   14000e23e:	add    BYTE PTR [rax],al
   14000e240:	rol    BYTE PTR [rax],0x0
   14000e243:	add    BYTE PTR [rax],al
   14000e245:	add    BYTE PTR [rax],al
   14000e247:	rex.RX add eax,0x4b68c4d0
   14000e24d:	sub    BYTE PTR [rax+0x4f],ah
   14000e250:	test   BYTE PTR [rdx-0x6f],bl
   14000e253:	push   0xffffffff888403c1
   14000e258:	fdivp  st(0),st
   14000e25a:	pop    rax
   14000e25b:	or     al,0x94
   14000e25d:	mov    ds,WORD PTR [rsi+0x70179747]
   14000e263:	(bad)  
   14000e264:	sub    al,0x4a
   14000e266:	rol    bl,cl
   14000e268:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000e26c:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   14000e271:	add    BYTE PTR [rax],al
   14000e273:	add    BYTE PTR [rax],al
   14000e275:	add    BYTE PTR [rax],al
   14000e277:	add    BYTE PTR [rcx+0x6e],ch
   14000e27a:	jbe    0x14000e2dd
   14000e27c:	ins    BYTE PTR es:[rdi],dx
   14000e27d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14000e285:	and    BYTE PTR [eax+0x6f],dh
   14000e289:	jae    0x14000e2f4
   14000e28b:	je     0x14000e2f6
   14000e28d:	outs   dx,DWORD PTR ds:[rsi]
   14000e28e:	outs   dx,BYTE PTR ds:[rsi]
   14000e28f:	add    BYTE PTR [rbx+0x74],dh
   14000e292:	jb     0x14000e2fd
   14000e294:	outs   dx,BYTE PTR ds:[rsi]
   14000e295:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000e29a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000e29e:	add    BYTE PTR [ecx+0x6e],ch
   14000e2a2:	jbe    0x14000e305
   14000e2a4:	ins    BYTE PTR es:[rdi],dx
   14000e2a5:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x732f7061
   14000e2ad:	gs je  0x14000e2ec
   14000e2b0:	push   rsp
   14000e2b1:	and    BYTE PTR ds:[rcx+0x74],ch
   14000e2b5:	gs jb  0x14000e319
   14000e2b8:	je     0x14000e329
   14000e2ba:	jb     0x14000e2bc
   14000e2bc:	add    BYTE PTR [rax],al
   14000e2be:	add    BYTE PTR [rax],al
   14000e2c0:	ins    DWORD PTR es:[rdi],dx
   14000e2c1:	(bad)  
   14000e2c2:	jo     0x14000e2f3
   14000e2c4:	jae    0x14000e32b
   14000e2c6:	je     0x14000e304
   14000e2c8:	push   rsp
   14000e2c9:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14000e2ce:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000e2d2:	add    BYTE PTR [eax],al
	...
   14000e2dd:	add    BYTE PTR [rax],al
   14000e2df:	add    BYTE PTR [rax-0x1d],dl
   14000e2e2:	add    BYTE PTR [rax+0x1],al
	...
   14000e2ed:	add    BYTE PTR [rax],al
   14000e2ef:	add    BYTE PTR [rcx],al
   14000e2f1:	add    BYTE PTR [rax],al
   14000e2f3:	add    BYTE PTR [rax],al
   14000e2f5:	add    BYTE PTR [rax],al
   14000e2f7:	add    BYTE PTR [rax-0x1e],bl
   14000e2fa:	add    BYTE PTR [rax+0x1],al
   14000e2fd:	add    BYTE PTR [rax],al
   14000e2ff:	add    BYTE PTR [rax],cl
   14000e301:	add    BYTE PTR [rax],al
   14000e303:	add    BYTE PTR [rax],al
   14000e305:	add    BYTE PTR [rax],al
   14000e307:	add    BYTE PTR [rcx],al
   14000e309:	add    BYTE PTR [rax],al
   14000e30b:	add    BYTE PTR [rax],al
   14000e30d:	add    BYTE PTR [rax],al
   14000e30f:	add    BYTE PTR [rax-0x1d],al
   14000e312:	add    BYTE PTR [rax+0x1],al
   14000e315:	add    BYTE PTR [rax],al
   14000e317:	add    BYTE PTR [rax],dl
   14000e319:	add    BYTE PTR [rax],al
   14000e31b:	add    BYTE PTR [rax],al
   14000e31d:	add    BYTE PTR [rax],al
   14000e31f:	add    BYTE PTR [rcx],al
	...
   14000e33d:	add    BYTE PTR [rax],al
   14000e33f:	add    BYTE PTR [rbp-0x23],ah
   14000e342:	xor    DWORD PTR [rdi+0x485105e8],ecx
   14000e348:	xchg   BYTE PTR [rsi],cl
   14000e34a:	jne    0x14000e3a6
   14000e34c:	call   QWORD PTR [rsi+0x65]
   14000e34f:	(bad)  
   14000e350:	loopne 0x14000e3c8
   14000e352:	jmp    0xf18fb7ca
   14000e357:	rex.WRX adc dil,0x1b
   14000e35b:	loopne 0x14000e2fe
   14000e35d:	imul   ecx,DWORD PTR [rax+rdi*1],0x49
   14000e361:	out    dx,eax
   14000e362:	sub    DWORD PTR [rax+rbp*1-0x5b],eax
   14000e366:	rex.WB test BYTE PTR ds:[r10+0x5dffccc6],dl
   14000e36e:	mov    ds,edx
   14000e370:	adc    DWORD PTR [rsi],ebx
   14000e372:	addr32 lahf 
   14000e374:	(bad)  
   14000e375:	ja     0x14000e309
   14000e377:	rex.WR scas al,BYTE PTR es:[rdi]
   14000e379:	sti    
   14000e37a:	(bad)  
   14000e37b:	push   rdx
   14000e37c:	adc    eax,0x1bea4e3
   14000e381:	add    BYTE PTR [rax],al
   14000e383:	add    BYTE PTR [rax],al
   14000e385:	add    BYTE PTR [rax],al
   14000e387:	add    al,al
   14000e389:	add    BYTE PTR [rax],al
   14000e38b:	add    BYTE PTR [rax],al
   14000e38d:	add    BYTE PTR [rax],al
   14000e38f:	rex.RX and bl,0x0
   14000e393:	rex add DWORD PTR [rax],eax
	...
   14000e39e:	add    BYTE PTR [rax],al
   14000e3a0:	add    DWORD PTR [rax],eax
	...
   14000e3be:	add    BYTE PTR [rax],al
   14000e3c0:	jo     0x14000e3a5
   14000e3c2:	add    BYTE PTR [rax+0x1],al
	...
   14000e3cd:	add    BYTE PTR [rax],al
   14000e3cf:	add    BYTE PTR [rcx],al
	...
   14000e3ed:	add    BYTE PTR [rax],al
   14000e3ef:	add    BYTE PTR [rdi+0x5a],ah
   14000e3f2:	rex.X icebp 
   14000e3f4:	rex.RB adc eax,0x59ab44a2
   14000e3fa:	(bad)  
   14000e3fb:	icebp  
   14000e3fc:	add    al,BYTE PTR [rdx+rdx*2]
   14000e3ff:	fnstenv [rax]
   14000e401:	in     al,0x0
   14000e403:	rex add DWORD PTR [rax],eax
	...
   14000e40e:	add    BYTE PTR [rax],al
   14000e410:	add    DWORD PTR [rax],eax
	...
   14000e42e:	add    BYTE PTR [rax],al
   14000e430:	jg     0x14000e465
   14000e432:	sub    eax,0xbd8ad738
   14000e437:	rex.B sahf 
   14000e439:	out    dx,eax
   14000e43a:	in     eax,0x81
   14000e43c:	sbb    al,0x3c
   14000e43e:	scas   al,BYTE PTR es:[rdi]
   14000e43f:	mov    ah,BYTE PTR [rax]
   14000e441:	add    BYTE PTR [rcx],cl
   14000e443:	add    BYTE PTR [rax],al
   14000e445:	add    BYTE PTR [rax],al
   14000e447:	add    BYTE PTR [rip+0xa00],cl        # 0x14000ee4d
	...
   14000e455:	add    BYTE PTR [rax],al
   14000e457:	add    BYTE PTR [rsi+0x0],ch
   14000e45a:	je     0x14000e45c
   14000e45c:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   14000e461:	add    BYTE PTR [rsi],ch
   14000e463:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000e467:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000e46b:	add    BYTE PTR [rax],al
   14000e46d:	add    BYTE PTR [rax],al
   14000e46f:	add    BYTE PTR [rsp+riz*2+0x72],cl
   14000e473:	rex.RX (bad) 
   14000e475:	jae    0x14000e4eb
   14000e477:	rex.RX (bad) 
   14000e479:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   14000e481:	gs jb  0x14000e4c7
   14000e484:	(bad)  
   14000e485:	ins    BYTE PTR es:[rdi],dx
   14000e486:	ins    BYTE PTR es:[rdi],dx
   14000e487:	outs   dx,DWORD PTR ds:[rsi]
   14000e488:	jne    0x14000e4fe
   14000e48a:	add    BYTE PTR [rax],al
   14000e48c:	add    BYTE PTR [rax],al
   14000e48e:	add    BYTE PTR [rax],al
   14000e490:	push   rdx
   14000e491:	je     0x14000e4ff
   14000e493:	rex.WRX je 0x14000e4e9
   14000e496:	je     0x14000e4f9
   14000e498:	je     0x14000e50f
   14000e49a:	jae    0x14000e4f0
   14000e49c:	outs   dx,DWORD PTR ds:[rsi]
   14000e49d:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000e49f:	jae    0x14000e4e6
   14000e4a1:	jb     0x14000e515
   14000e4a3:	outs   dx,DWORD PTR ds:[rsi]
   14000e4a4:	jb     0x14000e4f4
   14000e4a6:	outs   dx,DWORD PTR ds:[rsi]
   14000e4a7:	push   rsp
   14000e4a8:	gs (bad) 
   14000e4aa:	add    BYTE PTR [rax],al
   14000e4ac:	add    BYTE PTR [rax],al
   14000e4ae:	add    BYTE PTR [rax],al
   14000e4b0:	loopne 0x14000e4ef
   14000e4b2:	cmp    QWORD PTR [rdi+0x3c],r13
   14000e4b6:	rcl    BYTE PTR [rcx],cl
   14000e4b8:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   14000e4bf:	mov    bh,0x0
	...
   14000e4cd:	add    BYTE PTR [rax],al
   14000e4cf:	add    BYTE PTR [rbx+0x3],cl
   14000e4d2:	add    BYTE PTR [rax],al
   14000e4d4:	add    BYTE PTR [rax],al
   14000e4d6:	add    BYTE PTR [rax],al
   14000e4d8:	rol    BYTE PTR [rax],0x0
   14000e4db:	add    BYTE PTR [rax],al
   14000e4dd:	add    BYTE PTR [rax],al
   14000e4df:	rex.RX add eax,0x2e0
   14000e4e5:	add    BYTE PTR [rax],al
   14000e4e7:	add    al,al
   14000e4e9:	add    BYTE PTR [rax],al
   14000e4eb:	add    BYTE PTR [rax],al
   14000e4ed:	add    BYTE PTR [rax],al
   14000e4ef:	rex.RX and r8b,BYTE PTR [rip+0x41993]        # 0x14004fe89
   14000e4f6:	add    BYTE PTR [rax],al
   14000e4f8:	pushf  
   14000e4f9:	hlt    
   14000e4fa:	add    BYTE PTR [rax],al
   14000e4fc:	add    DWORD PTR [rax],eax
   14000e4fe:	add    BYTE PTR [rax],al
   14000e500:	mov    esp,0xa0000f4
   14000e505:	add    BYTE PTR [rax],al
   14000e507:	add    al,dh
   14000e509:	hlt    
   14000e50a:	add    BYTE PTR [rax],al
   14000e50c:	pop    rax
   14000e50d:	add    BYTE PTR [rax],al
   14000e50f:	add    BYTE PTR [rax],al
   14000e511:	add    BYTE PTR [rax],al
   14000e513:	add    BYTE PTR [rcx],al
   14000e515:	add    BYTE PTR [rax],al
   14000e517:	add    BYTE PTR [rdx],ah
   14000e519:	add    eax,0x21993
   14000e51e:	add    BYTE PTR [rax],al
   14000e520:	sbb    al,0xf4
	...
   14000e52a:	add    BYTE PTR [rax],al
   14000e52c:	add    eax,0x30000000
   14000e531:	hlt    
   14000e532:	add    BYTE PTR [rax],al
   14000e534:	enter  0x0,0x0
   14000e538:	add    BYTE PTR [rax],al
   14000e53a:	add    BYTE PTR [rax],al
   14000e53c:	add    DWORD PTR [rax],eax
   14000e53e:	add    BYTE PTR [rax],al
   14000e540:	and    al,BYTE PTR [rip+0x61993]        # 0x14006fed9
   14000e546:	add    BYTE PTR [rax],al
   14000e548:	(bad)  
   14000e549:	repnz add BYTE PTR [rax],al
   14000e54c:	add    al,BYTE PTR [rax]
   14000e54e:	add    BYTE PTR [rax],al
   14000e550:	hlt    
   14000e551:	repnz add BYTE PTR [rax],al
   14000e554:	or     al,BYTE PTR [rax]
   14000e556:	add    BYTE PTR [rax],al
   14000e558:	push   rax
   14000e559:	repz add BYTE PTR [rax],al
   14000e55c:	js     0x14000e55e
   14000e55e:	add    BYTE PTR [rax],al
   14000e560:	add    BYTE PTR [rax],al
   14000e562:	add    BYTE PTR [rax],al
   14000e564:	add    DWORD PTR [rax],eax
   14000e566:	add    BYTE PTR [rax],al
   14000e568:	and    al,BYTE PTR [rip+0x21993]        # 0x14002ff01
   14000e56e:	add    BYTE PTR [rax],al
   14000e570:	push   rax
   14000e571:	repnz add BYTE PTR [rax],al
	...
   14000e57c:	add    eax,0x60000000
   14000e581:	repnz add BYTE PTR [rax],al
   14000e584:	add    BYTE PTR [rax],al
   14000e587:	add    BYTE PTR [rax],al
   14000e589:	add    BYTE PTR [rax],al
   14000e58b:	add    BYTE PTR [rcx],al
   14000e58d:	add    BYTE PTR [rax],al
   14000e58f:	add    BYTE PTR [rdx],ah
   14000e591:	add    eax,0x11993
   14000e596:	add    BYTE PTR [rax],al
   14000e598:	in     al,dx
   14000e599:	icebp  
	...
   14000e5a2:	add    BYTE PTR [rax],al
   14000e5a4:	add    eax,DWORD PTR [rax]
   14000e5a6:	add    BYTE PTR [rax],al
   14000e5a8:	clc    
   14000e5a9:	icebp  
   14000e5aa:	add    BYTE PTR [rax],al
   14000e5ac:	and    BYTE PTR [rax],al
   14000e5ae:	add    BYTE PTR [rax],al
   14000e5b0:	add    BYTE PTR [rax],al
   14000e5b2:	add    BYTE PTR [rax],al
   14000e5b4:	add    DWORD PTR [rax],eax
   14000e5b6:	add    BYTE PTR [rax],al
   14000e5b8:	and    al,BYTE PTR [rip+0x61993]        # 0x14006ff51
   14000e5be:	add    BYTE PTR [rax],al
   14000e5c0:	in     al,dx
   14000e5c1:	lock add BYTE PTR [rax],al
   14000e5c4:	add    al,BYTE PTR [rax]
   14000e5c6:	add    BYTE PTR [rax],al
   14000e5c8:	sbb    al,0xf1
   14000e5ca:	add    BYTE PTR [rax],al
   14000e5cc:	or     al,BYTE PTR [rax]
   14000e5ce:	add    BYTE PTR [rax],al
   14000e5d0:	jo     0x14000e5c3
   14000e5d2:	add    BYTE PTR [rax],al
   14000e5d4:	push   rax
   14000e5d5:	add    BYTE PTR [rax],al
   14000e5d7:	add    BYTE PTR [rax],al
   14000e5d9:	add    BYTE PTR [rax],al
   14000e5db:	add    BYTE PTR [rcx],al
   14000e5dd:	add    BYTE PTR [rax],al
   14000e5df:	add    BYTE PTR [rdx],ah
   14000e5e1:	add    eax,0x31993
   14000e5e6:	add    BYTE PTR [rax],al
   14000e5e8:	pop    rsp
   14000e5e9:	lock add BYTE PTR [rax],al
	...
   14000e5f4:	(bad)  
   14000e5f5:	add    BYTE PTR [rax],al
   14000e5f7:	add    BYTE PTR [rax-0x10],bh
   14000e5fa:	add    BYTE PTR [rax],al
   14000e5fc:	and    BYTE PTR [rax],al
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	add    BYTE PTR [rax],al
   14000e602:	add    BYTE PTR [rax],al
   14000e604:	add    DWORD PTR [rax],eax
   14000e606:	add    BYTE PTR [rax],al
   14000e608:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ffa1
   14000e60e:	add    BYTE PTR [rax],al
   14000e610:	adc    al,0xf0
	...
   14000e61a:	add    BYTE PTR [rax],al
   14000e61c:	add    eax,DWORD PTR [rax]
   14000e61e:	add    BYTE PTR [rax],al
   14000e620:	and    al,dh
   14000e622:	add    BYTE PTR [rax],al
   14000e624:	and    BYTE PTR [rax],al
   14000e626:	add    BYTE PTR [rax],al
   14000e628:	add    BYTE PTR [rax],al
   14000e62a:	add    BYTE PTR [rax],al
   14000e62c:	add    DWORD PTR [rax],eax
   14000e62e:	add    BYTE PTR [rax],al
   14000e630:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ffc9
   14000e636:	add    BYTE PTR [rax],al
   14000e638:	lock cld 
	...
   14000e642:	add    BYTE PTR [rax],al
   14000e644:	add    eax,DWORD PTR [rax]
   14000e646:	add    BYTE PTR [rax],al
   14000e648:	clc    
   14000e649:	cld    
   14000e64a:	add    BYTE PTR [rax],al
   14000e64c:	and    BYTE PTR [rax],al
   14000e64e:	add    BYTE PTR [rax],al
   14000e650:	add    BYTE PTR [rax],al
   14000e652:	add    BYTE PTR [rax],al
   14000e654:	add    DWORD PTR [rax],eax
   14000e656:	add    BYTE PTR [rax],al
   14000e658:	and    al,BYTE PTR [rip+0x31993]        # 0x14003fff1
   14000e65e:	add    BYTE PTR [rax],al
   14000e660:	movabs al,ds:0xfc
   14000e669:	add    BYTE PTR [rax],al
   14000e66b:	add    BYTE PTR [rax+rax*1],al
   14000e66e:	add    BYTE PTR [rax],al
   14000e670:	mov    eax,0x280000fc
   14000e675:	add    BYTE PTR [rax],al
   14000e677:	add    BYTE PTR [rax],al
   14000e679:	add    BYTE PTR [rax],al
   14000e67b:	add    BYTE PTR [rcx],al
   14000e67d:	add    BYTE PTR [rax],al
   14000e67f:	add    BYTE PTR [rdx],ah
   14000e681:	add    eax,0x41993
   14000e686:	add    BYTE PTR [rax],al
   14000e688:	call   0x14100e788
   14000e68d:	add    BYTE PTR [rax],al
   14000e68f:	add    BYTE PTR [rax],cl
   14000e691:	cld    
   14000e692:	add    BYTE PTR [rax],al
   14000e694:	or     BYTE PTR [rax],al
   14000e696:	add    BYTE PTR [rax],al
   14000e698:	xor    ah,bh
   14000e69a:	add    BYTE PTR [rax],al
   14000e69c:	and    BYTE PTR [rax],al
   14000e69e:	add    BYTE PTR [rax],al
   14000e6a0:	add    BYTE PTR [rax],al
   14000e6a2:	add    BYTE PTR [rax],al
   14000e6a4:	add    DWORD PTR [rax],eax
   14000e6a6:	add    BYTE PTR [rax],al
   14000e6a8:	and    al,BYTE PTR [rip+0x21993]        # 0x140030041
   14000e6ae:	add    BYTE PTR [rax],al
   14000e6b0:	jl     0x14000e6ad
	...
   14000e6ba:	add    BYTE PTR [rax],al
   14000e6bc:	add    eax,0x90000000
   14000e6c1:	sti    
   14000e6c2:	add    BYTE PTR [rax],al
   14000e6c4:	and    BYTE PTR [rax],al
   14000e6c6:	add    BYTE PTR [rax],al
   14000e6c8:	add    BYTE PTR [rax],al
   14000e6ca:	add    BYTE PTR [rax],al
   14000e6cc:	add    DWORD PTR [rax],eax
   14000e6ce:	add    BYTE PTR [rax],al
   14000e6d0:	and    al,BYTE PTR [rip+0x11993]        # 0x140020069
   14000e6d6:	add    BYTE PTR [rax],al
   14000e6d8:	test   al,0xf7
	...
   14000e6e2:	add    BYTE PTR [rax],al
   14000e6e4:	add    eax,DWORD PTR [rax]
   14000e6e6:	add    BYTE PTR [rax],al
   14000e6e8:	cmp    bl,bh
   14000e6ea:	add    BYTE PTR [rax],al
   14000e6ec:	and    BYTE PTR [rax],al
   14000e6ee:	add    BYTE PTR [rax],al
   14000e6f0:	add    BYTE PTR [rax],al
   14000e6f2:	add    BYTE PTR [rax],al
   14000e6f4:	add    DWORD PTR [rax],eax
   14000e6f6:	add    BYTE PTR [rax],al
   14000e6f8:	and    al,BYTE PTR [rip+0x41993]        # 0x140050091
   14000e6fe:	add    BYTE PTR [rax],al
   14000e700:	xchg   esp,eax
   14000e701:	cli    
   14000e702:	add    BYTE PTR [rax],al
   14000e704:	add    DWORD PTR [rax],eax
   14000e706:	add    BYTE PTR [rax],al
   14000e708:	mov    ah,0xfa
   14000e70a:	add    BYTE PTR [rax],al
   14000e70c:	(bad)  
   14000e70d:	add    BYTE PTR [rax],al
   14000e70f:	add    al,ah
   14000e711:	cli    
   14000e712:	add    BYTE PTR [rax],al
   14000e714:	and    BYTE PTR [rax],al
   14000e716:	add    BYTE PTR [rax],al
   14000e718:	add    BYTE PTR [rax],al
   14000e71a:	add    BYTE PTR [rax],al
   14000e71c:	add    DWORD PTR [rax],eax
   14000e71e:	add    BYTE PTR [rax],al
   14000e720:	and    al,BYTE PTR [rip+0x11993]        # 0x1400200b9
   14000e726:	add    BYTE PTR [rax],al
   14000e728:	and    al,0xfa
	...
   14000e732:	add    BYTE PTR [rax],al
   14000e734:	add    al,BYTE PTR [rax]
   14000e736:	add    BYTE PTR [rax],al
   14000e738:	xor    dl,bh
   14000e73a:	add    BYTE PTR [rax],al
   14000e73c:	sub    BYTE PTR [rax],al
   14000e73e:	add    BYTE PTR [rax],al
   14000e740:	add    BYTE PTR [rax],al
   14000e742:	add    BYTE PTR [rax],al
   14000e744:	add    DWORD PTR [rax],eax
   14000e746:	add    BYTE PTR [rax],al
   14000e748:	and    al,BYTE PTR [rip+0x21993]        # 0x1400300e1
   14000e74e:	add    BYTE PTR [rax],al
   14000e750:	or     al,bh
   14000e752:	add    BYTE PTR [rax],al
   14000e754:	add    DWORD PTR [rax],eax
   14000e756:	add    BYTE PTR [rax],al
   14000e758:	test   al,0xf9
   14000e75a:	add    BYTE PTR [rax],al
   14000e75c:	add    eax,0xd0000000
   14000e761:	stc    
   14000e762:	add    BYTE PTR [rax],al
   14000e764:	and    BYTE PTR [rax],al
   14000e766:	add    BYTE PTR [rax],al
   14000e768:	add    BYTE PTR [rax],al
   14000e76a:	add    BYTE PTR [rax],al
   14000e76c:	add    DWORD PTR [rax],eax
   14000e76e:	add    BYTE PTR [rax],al
   14000e770:	and    al,BYTE PTR [rip+0x41993]        # 0x140050109
   14000e776:	add    BYTE PTR [rax],al
   14000e778:	sar    al,0x0
   14000e77b:	add    BYTE PTR [rdx],al
   14000e77d:	add    BYTE PTR [rax],al
   14000e77f:	add    al,ah
   14000e781:	clc    
   14000e782:	add    BYTE PTR [rax],al
   14000e784:	or     BYTE PTR [rax],al
   14000e786:	add    BYTE PTR [rax],al
   14000e788:	xor    cl,bh
   14000e78a:	add    BYTE PTR [rax],al
   14000e78c:	and    BYTE PTR [rax],al
   14000e78e:	add    BYTE PTR [rax],al
   14000e790:	add    BYTE PTR [rax],al
   14000e792:	add    BYTE PTR [rax],al
   14000e794:	add    DWORD PTR [rax],eax
   14000e796:	add    BYTE PTR [rax],al
   14000e798:	and    al,BYTE PTR [rip+0x21993]        # 0x140030131
   14000e79e:	add    BYTE PTR [rax],al
   14000e7a0:	or     al,bh
   14000e7a2:	add    BYTE PTR [rax],al
   14000e7a4:	add    DWORD PTR [rax],eax
   14000e7a6:	add    BYTE PTR [rax],al
   14000e7a8:	sbb    al,bh
   14000e7aa:	add    BYTE PTR [rax],al
   14000e7ac:	(bad)  
   14000e7ad:	add    BYTE PTR [rax],al
   14000e7af:	add    BYTE PTR [rax-0x8],al
   14000e7b2:	add    BYTE PTR [rax],al
   14000e7b4:	and    BYTE PTR [rax],al
   14000e7b6:	add    BYTE PTR [rax],al
   14000e7b8:	add    BYTE PTR [rax],al
   14000e7ba:	add    BYTE PTR [rax],al
   14000e7bc:	add    DWORD PTR [rax],eax
   14000e7be:	add    BYTE PTR [rax],al
   14000e7c0:	and    al,BYTE PTR [rip+0x11993]        # 0x140020159
   14000e7c6:	add    BYTE PTR [rax],al
   14000e7c8:	test   al,0xf7
	...
   14000e7d2:	add    BYTE PTR [rax],al
   14000e7d4:	add    eax,DWORD PTR [rax]
   14000e7d6:	add    BYTE PTR [rax],al
   14000e7d8:	mov    al,0xf7
   14000e7da:	add    BYTE PTR [rax],al
   14000e7dc:	and    BYTE PTR [rax],al
   14000e7de:	add    BYTE PTR [rax],al
   14000e7e0:	add    BYTE PTR [rax],al
   14000e7e2:	add    BYTE PTR [rax],al
   14000e7e4:	add    DWORD PTR [rax],eax
   14000e7e6:	add    BYTE PTR [rax],al
   14000e7e8:	and    al,BYTE PTR [rip+0x71993]        # 0x140080181
   14000e7ee:	add    BYTE PTR [rax],al
   14000e7f0:	mov    esp,0x10000f6
   14000e7f5:	add    BYTE PTR [rax],al
   14000e7f7:	add    ah,dh
   14000e7f9:	test   BYTE PTR [rax],0x0
   14000e7fc:	or     eax,0x20000000
   14000e801:	test   DWORD PTR [rax],0x3000
   14000e807:	add    BYTE PTR [rax],al
   14000e809:	add    BYTE PTR [rax],al
   14000e80b:	add    BYTE PTR [rcx],al
   14000e80d:	add    BYTE PTR [rax],al
   14000e80f:	add    BYTE PTR [rdx],ah
   14000e811:	add    eax,0x61993
   14000e816:	add    BYTE PTR [rax],al
   14000e818:	pushf  
   14000e819:	cmc    
   14000e81a:	add    BYTE PTR [rax],al
   14000e81c:	add    DWORD PTR [rax],eax
   14000e81e:	add    BYTE PTR [rax],al
   14000e820:	int3   
   14000e821:	cmc    
   14000e822:	add    BYTE PTR [rax],al
   14000e824:	(bad)  
   14000e825:	add    BYTE PTR [rax],al
   14000e827:	add    BYTE PTR [rax],al
   14000e829:	test   BYTE PTR [rax],0x0
   14000e82c:	sub    BYTE PTR [rax],al
   14000e82e:	add    BYTE PTR [rax],al
   14000e830:	add    BYTE PTR [rax],al
   14000e832:	add    BYTE PTR [rax],al
   14000e834:	add    DWORD PTR [rax],eax
   14000e836:	add    BYTE PTR [rax],al
   14000e838:	and    al,BYTE PTR [rip+0x61993]        # 0x1400701d1
   14000e83e:	add    BYTE PTR [rax],al
   14000e840:	cld    
   14000e841:	std    
   14000e842:	add    BYTE PTR [rax],al
   14000e844:	add    DWORD PTR [rax],eax
   14000e846:	add    BYTE PTR [rax],al
   14000e848:	sub    al,0xfe
   14000e84a:	add    BYTE PTR [rax],al
   14000e84c:	or     al,BYTE PTR [rax]
   14000e84e:	add    BYTE PTR [rax],al
   14000e850:	(bad)  
   14000e851:	inc    BYTE PTR [rax]
   14000e853:	add    BYTE PTR [rax],ah
   14000e855:	add    BYTE PTR [rax],al
   14000e857:	add    BYTE PTR [rax],al
   14000e859:	add    BYTE PTR [rax],al
   14000e85b:	add    BYTE PTR [rcx],al
   14000e85d:	add    BYTE PTR [rax],al
   14000e85f:	add    BYTE PTR [rdx],ah
   14000e861:	add    eax,0x21993
   14000e866:	add    BYTE PTR [rax],al
   14000e868:	lods   al,BYTE PTR ds:[rsi]
   14000e869:	std    
	...
   14000e872:	add    BYTE PTR [rax],al
   14000e874:	add    al,0x0
   14000e876:	add    BYTE PTR [rax],al
   14000e878:	sar    ch,0x0
   14000e87b:	add    BYTE PTR [rax],ah
   14000e87d:	add    BYTE PTR [rax],al
   14000e87f:	add    BYTE PTR [rax],al
   14000e881:	add    BYTE PTR [rax],al
   14000e883:	add    BYTE PTR [rcx],al
   14000e885:	add    BYTE PTR [rax],al
   14000e887:	add    BYTE PTR [rdx],ah
   14000e889:	add    eax,0x11993
   14000e88e:	add    BYTE PTR [rax],al
   14000e890:	jo     0x14000e88f
	...
   14000e89a:	add    BYTE PTR [rax],al
   14000e89c:	add    eax,DWORD PTR [rax]
   14000e89e:	add    BYTE PTR [rax],al
   14000e8a0:	js     0x14000e89f
   14000e8a2:	add    BYTE PTR [rax],al
   14000e8a4:	and    BYTE PTR [rax],al
   14000e8a6:	add    BYTE PTR [rax],al
   14000e8a8:	add    BYTE PTR [rax],al
   14000e8aa:	add    BYTE PTR [rax],al
   14000e8ac:	add    DWORD PTR [rax],eax
   14000e8ae:	add    BYTE PTR [rax],al
   14000e8b0:	and    al,BYTE PTR [rip+0x41993]        # 0x140050249
   14000e8b6:	add    BYTE PTR [rax],al
   14000e8b8:	cmp    al,0x0
   14000e8ba:	add    DWORD PTR [rax],eax
   14000e8bc:	add    DWORD PTR [rax],eax
   14000e8be:	add    BYTE PTR [rax],al
   14000e8c0:	pop    rsp
   14000e8c1:	add    BYTE PTR [rcx],al
   14000e8c3:	add    BYTE PTR [rax],cl
   14000e8c5:	add    BYTE PTR [rax],al
   14000e8c7:	add    BYTE PTR [rax+0x20000100],dl
   14000e8cd:	add    BYTE PTR [rax],al
   14000e8cf:	add    BYTE PTR [rax],al
   14000e8d1:	add    BYTE PTR [rax],al
   14000e8d3:	add    BYTE PTR [rcx],al
   14000e8d5:	add    BYTE PTR [rax],al
   14000e8d7:	add    BYTE PTR [rdx],ah
   14000e8d9:	add    eax,0x11993
   14000e8de:	add    BYTE PTR [rax],al
   14000e8e0:	add    BYTE PTR [rax],al
   14000e8e2:	add    DWORD PTR [rax],eax
	...
   14000e8ec:	add    eax,DWORD PTR [rax]
   14000e8ee:	add    BYTE PTR [rax],al
   14000e8f0:	or     BYTE PTR [rax],al
   14000e8f2:	add    DWORD PTR [rax],eax
   14000e8f4:	and    BYTE PTR [rax],al
   14000e8f6:	add    BYTE PTR [rax],al
   14000e8f8:	add    BYTE PTR [rax],al
   14000e8fa:	add    BYTE PTR [rax],al
   14000e8fc:	add    DWORD PTR [rax],eax
   14000e8fe:	add    BYTE PTR [rax],al
   14000e900:	and    al,BYTE PTR [rip+0x31993]        # 0x140040299
   14000e906:	add    BYTE PTR [rax],al
   14000e908:	inc    DWORD PTR fs:[rax]
   14000e90b:	add    BYTE PTR [rcx],al
   14000e90d:	add    BYTE PTR [rax],al
   14000e90f:	add    BYTE PTR [rdi+rdi*8+0x0],bh
   14000e913:	add    BYTE PTR [rsi],al
   14000e915:	add    BYTE PTR [rax],al
   14000e917:	add    BYTE PTR [rax+0x200000ff],ch
   14000e91d:	add    BYTE PTR [rax],al
   14000e91f:	add    BYTE PTR [rax],al
   14000e921:	add    BYTE PTR [rax],al
   14000e923:	add    BYTE PTR [rcx],al
   14000e925:	add    BYTE PTR [rax],al
   14000e927:	add    BYTE PTR [rdx],ah
   14000e929:	add    eax,0x21993
   14000e92e:	add    BYTE PTR [rax],al
   14000e930:	or     al,bh
   14000e932:	add    BYTE PTR [rax],al
   14000e934:	add    DWORD PTR [rax],eax
   14000e936:	add    BYTE PTR [rax],al
   14000e938:	lock inc BYTE PTR [rax]
   14000e93b:	add    BYTE PTR [rax+rax*1],al
   14000e93e:	add    BYTE PTR [rax],al
   14000e940:	sbb    bh,bh
   14000e942:	add    BYTE PTR [rax],al
   14000e944:	sub    BYTE PTR [rax],al
   14000e946:	add    BYTE PTR [rax],al
   14000e948:	add    BYTE PTR [rax],al
   14000e94a:	add    BYTE PTR [rax],al
   14000e94c:	add    DWORD PTR [rax],eax
   14000e94e:	add    BYTE PTR [rax],al
   14000e950:	and    al,BYTE PTR [rip+0x41993]        # 0x1400502e9
   14000e956:	add    BYTE PTR [rax],al
   14000e958:	lock add eax,0x10001
   14000e95e:	add    BYTE PTR [rax],al
   14000e960:	adc    BYTE PTR [rsi],al
   14000e962:	add    DWORD PTR [rax],eax
   14000e964:	(bad)  
   14000e965:	add    BYTE PTR [rax],al
   14000e967:	add    BYTE PTR [rax],bh
   14000e969:	(bad)  
   14000e96a:	add    DWORD PTR [rax],eax
   14000e96c:	and    BYTE PTR [rax],al
   14000e96e:	add    BYTE PTR [rax],al
   14000e970:	add    BYTE PTR [rax],al
   14000e972:	add    BYTE PTR [rax],al
   14000e974:	add    DWORD PTR [rax],eax
   14000e976:	add    BYTE PTR [rax],al
   14000e978:	and    al,BYTE PTR [rip+0x41993]        # 0x140050311
   14000e97e:	add    BYTE PTR [rax],al
   14000e980:	add    rax,0x10001
   14000e986:	add    BYTE PTR [rax],al
   14000e988:	push   0x7000105
   14000e98d:	add    BYTE PTR [rax],al
   14000e98f:	add    BYTE PTR [rax+0x20000105],dl
   14000e995:	add    BYTE PTR [rax],al
   14000e997:	add    BYTE PTR [rax],al
   14000e999:	add    BYTE PTR [rax],al
   14000e99b:	add    BYTE PTR [rcx],al
   14000e99d:	add    BYTE PTR [rax],al
   14000e99f:	add    BYTE PTR [rdx],ah
   14000e9a1:	add    eax,0x21993
   14000e9a6:	add    BYTE PTR [rax],al
   14000e9a8:	or     al,bh
   14000e9aa:	add    BYTE PTR [rax],al
   14000e9ac:	add    DWORD PTR [rax],eax
   14000e9ae:	add    BYTE PTR [rax],al
   14000e9b0:	int3   
   14000e9b1:	add    al,0x1
   14000e9b3:	add    BYTE PTR [rip+0xfffffffff8000000],al        # 0x13800e9b9
   14000e9b9:	add    al,0x1
   14000e9bb:	add    BYTE PTR [rax],ah
   14000e9bd:	add    BYTE PTR [rax],al
   14000e9bf:	add    BYTE PTR [rax],al
   14000e9c1:	add    BYTE PTR [rax],al
   14000e9c3:	add    BYTE PTR [rcx],al
   14000e9c5:	add    BYTE PTR [rax],al
   14000e9c7:	add    BYTE PTR [rdx],ah
   14000e9c9:	add    eax,0x11993
   14000e9ce:	add    BYTE PTR [rax],al
   14000e9d0:	add    BYTE PTR [rcx+rax*1],0x0
	...
   14000e9dc:	add    eax,DWORD PTR [rax]
   14000e9de:	add    BYTE PTR [rax],al
   14000e9e0:	mov    BYTE PTR [rcx+rax*1],al
   14000e9e3:	add    BYTE PTR [rax],ch
   14000e9e5:	add    BYTE PTR [rax],al
   14000e9e7:	add    BYTE PTR [rax],al
   14000e9e9:	add    BYTE PTR [rax],al
   14000e9eb:	add    BYTE PTR [rcx],al
   14000e9ed:	add    BYTE PTR [rax],al
   14000e9ef:	add    BYTE PTR [rdx],ah
   14000e9f1:	add    eax,0x11993
   14000e9f6:	add    BYTE PTR [rax],al
   14000e9f8:	rex.R add al,0x1
	...
   14000ea03:	add    BYTE PTR [rbx],al
   14000ea05:	add    BYTE PTR [rax],al
   14000ea07:	add    BYTE PTR [rax+0x4],dl
   14000ea0a:	add    DWORD PTR [rax],eax
   14000ea0c:	and    BYTE PTR [rax],al
   14000ea0e:	add    BYTE PTR [rax],al
   14000ea10:	add    BYTE PTR [rax],al
   14000ea12:	add    BYTE PTR [rax],al
   14000ea14:	add    DWORD PTR [rax],eax
   14000ea16:	add    BYTE PTR [rax],al
   14000ea18:	and    al,BYTE PTR [rip+0xc1993]        # 0x1400d03b1
   14000ea1e:	add    BYTE PTR [rax],al
   14000ea20:	rol    BYTE PTR [rdx],1
   14000ea22:	add    DWORD PTR [rax],eax
	...
   14000ea2c:	(bad)  
   14000ea2d:	add    BYTE PTR [rax],al
   14000ea2f:	add    BYTE PTR [rax],dh
   14000ea31:	add    eax,DWORD PTR [rcx]
   14000ea33:	add    BYTE PTR [rax],ch
   14000ea35:	add    BYTE PTR [rax],al
   14000ea37:	add    BYTE PTR [rax],al
   14000ea39:	add    BYTE PTR [rax],al
   14000ea3b:	add    BYTE PTR [rcx],al
   14000ea3d:	add    BYTE PTR [rax],al
   14000ea3f:	add    BYTE PTR [rdx],ah
   14000ea41:	add    eax,0xd1993
   14000ea46:	add    BYTE PTR [rax],al
   14000ea48:	mov    al,0x1
   14000ea4a:	add    DWORD PTR [rax],eax
	...
   14000ea54:	adc    DWORD PTR [rax],eax
   14000ea56:	add    BYTE PTR [rax],al
   14000ea58:	and    BYTE PTR [rdx],al
   14000ea5a:	add    DWORD PTR [rax],eax
   14000ea5c:	push   0x0
   14000ea61:	add    BYTE PTR [rax],al
   14000ea63:	add    BYTE PTR [rcx],al
   14000ea65:	add    BYTE PTR [rax],al
   14000ea67:	add    BYTE PTR [rdx],ah
   14000ea69:	add    eax,0x11993
   14000ea6e:	add    BYTE PTR [rax],al
   14000ea70:	push   0x101
   14000ea75:	add    BYTE PTR [rax],al
   14000ea77:	add    BYTE PTR [rax],al
   14000ea79:	add    BYTE PTR [rax],al
   14000ea7b:	add    BYTE PTR [rbx],al
   14000ea7d:	add    BYTE PTR [rax],al
   14000ea7f:	add    BYTE PTR [rax+0x1],dh
   14000ea82:	add    DWORD PTR [rax],eax
   14000ea84:	sub    BYTE PTR [rax],al
   14000ea86:	add    BYTE PTR [rax],al
   14000ea88:	add    BYTE PTR [rax],al
   14000ea8a:	add    BYTE PTR [rax],al
   14000ea8c:	add    DWORD PTR [rax],eax
   14000ea8e:	add    BYTE PTR [rax],al
   14000ea90:	and    al,BYTE PTR [rip+0x11993]        # 0x140020429
   14000ea96:	add    BYTE PTR [rax],al
   14000ea98:	clc    
   14000ea99:	add    BYTE PTR [rcx],al
	...
   14000eaa3:	add    BYTE PTR [rbx],al
   14000eaa5:	add    BYTE PTR [rax],al
   14000eaa7:	add    BYTE PTR [rax],dh
   14000eaa9:	add    DWORD PTR [rcx],eax
   14000eaab:	add    BYTE PTR [rax],ah
   14000eaad:	add    BYTE PTR [rax],al
   14000eaaf:	add    BYTE PTR [rax],al
   14000eab1:	add    BYTE PTR [rax],al
   14000eab3:	add    BYTE PTR [rcx],al
   14000eab5:	add    BYTE PTR [rax],al
   14000eab7:	add    BYTE PTR [rdx],ah
   14000eab9:	add    eax,0x11993
   14000eabe:	add    BYTE PTR [rax],al
   14000eac0:	clc    
   14000eac1:	add    BYTE PTR [rcx],al
	...
   14000eacb:	add    BYTE PTR [rbx],al
   14000eacd:	add    BYTE PTR [rax],al
   14000eacf:	add    BYTE PTR [rax],al
   14000ead1:	add    DWORD PTR [rcx],eax
   14000ead3:	add    BYTE PTR [rax],ah
   14000ead5:	add    BYTE PTR [rax],al
   14000ead7:	add    BYTE PTR [rax],al
   14000ead9:	add    BYTE PTR [rax],al
   14000eadb:	add    BYTE PTR [rcx],al
   14000eadd:	add    BYTE PTR [rax],al
   14000eadf:	add    BYTE PTR [rax],al
   14000eae1:	add    BYTE PTR [rax],al
   14000eae3:	add    bh,ch
   14000eae5:	cmp    BYTE PTR [rdi+0x55],bl
   14000eaeb:	add    BYTE PTR [rdx],al
   14000eaed:	add    BYTE PTR [rax],al
   14000eaef:	add    BYTE PTR [rax],dh
   14000eaf1:	add    BYTE PTR [rax],al
   14000eaf3:	add    al,ah
   14000eaf5:	jmp    0x14000eaf7
   14000eaf7:	add    al,ah
   14000eaf9:	fld    DWORD PTR [rax]
   14000eafb:	add    BYTE PTR [rax],al
   14000eafd:	add    BYTE PTR [rax],al
   14000eaff:	add    bh,ch
   14000eb01:	cmp    BYTE PTR [rdi+0x55],bl
   14000eb07:	add    BYTE PTR [rip+0xffffffff84000000],cl        # 0xc400eb0d
   14000eb0d:	add    al,BYTE PTR [rax]
   14000eb0f:	add    BYTE PTR [rsp+rbp*8],ah
   14000eb12:	add    BYTE PTR [rax],al
   14000eb14:	and    al,0xda
	...
   14000eb3e:	add    BYTE PTR [rax],al
   14000eb40:	movabs al,ds:0x0
	...
   14000eb95:	add    BYTE PTR [rax],al
   14000eb97:	add    BYTE PTR [rax],dl
   14000eb99:	and    BYTE PTR [rcx],al
   14000eb9b:	rex add DWORD PTR [rax],eax
	...
   14000ebae:	add    BYTE PTR [rax],al
   14000ebb0:	test   al,0xd4
   14000ebb2:	add    BYTE PTR [rax+0x1],al
   14000ebb5:	add    BYTE PTR [rax],al
   14000ebb7:	add    BYTE PTR [rax+0x14000d4],dh
   14000ebbd:	add    BYTE PTR [rax],al
   14000ebbf:	add    BYTE PTR [rax],bl
   14000ebc1:	(bad)  
   14000ebc2:	add    BYTE PTR [rax+0x1],al
   14000ebc5:	add    BYTE PTR [rax],al
   14000ebc7:	add    BYTE PTR [rbx+0x0],ch
   14000ebca:	add    BYTE PTR [rax],al
   14000ebcc:	add    BYTE PTR [rax],al
   14000ebce:	add    BYTE PTR [rax],al
   14000ebd0:	add    BYTE PTR [rip+0x0],dh        # 0x14000ebd6
	...
   14000ebde:	add    BYTE PTR [rax],al
   14000ebe0:	push   rdx
   14000ebe1:	push   rbx
   14000ebe2:	rex.R push rbx
   14000ebe4:	cmp    esp,0x63ea72c6
   14000ebea:	jmp    0x18fc49f37
   14000ebef:	js     0x14000eb89
   14000ebf1:	jne    0x14000eb81
   14000ebf3:	rex.RXB add DWORD PTR [r8],r8d
   14000ebf6:	add    BYTE PTR [rax],al
   14000ebf8:	ins    DWORD PTR es:[rdi],dx
   14000ebf9:	jae    0x14000ec6e
   14000ebfb:	jo     0x14000ec62
   14000ebfd:	ins    BYTE PTR es:[rdi],dx
   14000ebfe:	ins    BYTE PTR es:[rdi],dx
   14000ebff:	movsxd ebp,DWORD PTR [rax+0x65]
   14000ec02:	movsxd ebp,DWORD PTR [rbx+0x69]
   14000ec05:	outs   dx,BYTE PTR ds:[rsi]
   14000ec06:	addr32 push 0x2e74736f
   14000ec0c:	jo     0x14000ec72
   14000ec0e:	(bad)  
	...
   14000ec23:	add    BYTE PTR [rdi+0x43],al
   14000ec26:	push   rsp
   14000ec27:	rex.WR add BYTE PTR [rax],r10b
   14000ec2a:	add    BYTE PTR [rax],al
   14000ec2c:	cmp    al,BYTE PTR [rbx]
   14000ec2e:	add    BYTE PTR [rax],al
   14000ec30:	cs je  0x14000ec98
   14000ec33:	js     0x14000eca9
   14000ec35:	and    al,0x64
   14000ec37:	imul   eax,DWORD PTR [rax],0x40000000
   14000ec3d:	adc    eax,DWORD PTR [rax]
   14000ec3f:	add    BYTE PTR [rcx+rbp*4+0x742e0000],cl
   14000ec46:	gs js  0x14000ecbd
   14000ec49:	and    al,0x6d
   14000ec4b:	outs   dx,BYTE PTR ds:[rsi]
   14000ec4c:	add    BYTE PTR [rax],al
   14000ec4e:	add    BYTE PTR [rax],al
   14000ec50:	sar    BYTE PTR [rax+rax*1+0x7d00],1
   14000ec57:	add    BYTE PTR [rsi],ch
   14000ec59:	je     0x14000ecc0
   14000ec5b:	js     0x14000ecd1
   14000ec5d:	and    al,0x6d
   14000ec5f:	outs   dx,BYTE PTR ds:[rsi]
   14000ec60:	and    al,0x30
   14000ec62:	xor    BYTE PTR [rax],al
   14000ec64:	push   rax
   14000ec65:	mov    ebp,0x8f00000
   14000ec6a:	add    BYTE PTR [rax],al
   14000ec6c:	cs je  0x14000ecd4
   14000ec6f:	js     0x14000ece5
   14000ec71:	and    al,0x78
   14000ec73:	add    BYTE PTR [rax-0x3a],al
   14000ec76:	add    BYTE PTR [rax],al
   14000ec78:	cli    
   14000ec79:	add    DWORD PTR [rax],eax
   14000ec7b:	add    BYTE PTR [rsi],ch
   14000ec7d:	je     0x14000ece4
   14000ec7f:	js     0x14000ecf5
   14000ec81:	and    al,0x79
   14000ec83:	add    BYTE PTR fs:[rax],al
   14000ec86:	add    BYTE PTR [rax],al
   14000ec88:	add    al,dl
   14000ec8a:	add    BYTE PTR [rax],al
   14000ec8c:	test   al,0x4
   14000ec8e:	add    BYTE PTR [rax],al
   14000ec90:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000ec99:	add    BYTE PTR [rax],al
   14000ec9b:	add    BYTE PTR [rax+0x100000d4],ch
   14000eca1:	add    BYTE PTR [rax],al
   14000eca3:	add    BYTE PTR [rsi],ch
   14000eca5:	xor    BYTE PTR [rax],dh
   14000eca7:	movsxd esp,DWORD PTR [rsi+0x67]
   14000ecaa:	add    BYTE PTR [rax],al
   14000ecac:	mov    eax,0x80000d4
   14000ecb1:	add    BYTE PTR [rax],al
   14000ecb3:	add    BYTE PTR [rsi],ch
   14000ecb5:	rex.XB push r10
   14000ecb7:	push   rsp
   14000ecb8:	and    al,0x58
   14000ecba:	rex.XB
   14000ecbb:	add    BYTE PTR [r8],al
   14000ecbe:	add    BYTE PTR [rax],al
   14000ecc0:	rcl    ah,0x0
   14000ecc3:	add    BYTE PTR [rax],cl
   14000ecc5:	add    BYTE PTR [rax],al
   14000ecc7:	add    BYTE PTR [rsi],ch
   14000ecc9:	rex.XB push r10
   14000eccb:	push   rsp
   14000eccc:	and    al,0x58
   14000ecce:	rex.XB
   14000eccf:	rex.B
   14000ecd0:	add    BYTE PTR [r8],al
   14000ecd3:	add    al,cl
   14000ecd5:	(bad)  
   14000ecd6:	add    BYTE PTR [rax],al
   14000ecd8:	sbb    BYTE PTR [rax],al
   14000ecda:	add    BYTE PTR [rax],al
   14000ecdc:	cs rex.XB push r10
   14000ecdf:	push   rsp
   14000ece0:	and    al,0x58
   14000ece2:	rex.XB
   14000ece3:	rex.WR add BYTE PTR [rax],r8b
   14000ece6:	add    BYTE PTR [rax],al
   14000ece8:	loopne 0x14000ecbe
   14000ecea:	add    BYTE PTR [rax],al
   14000ecec:	adc    BYTE PTR [rax],al
   14000ecee:	add    BYTE PTR [rax],al
   14000ecf0:	cs rex.XB push r10
   14000ecf3:	push   rsp
   14000ecf4:	and    al,0x58
   14000ecf6:	rex.XB push r13
   14000ecf8:	add    BYTE PTR [rax],al
   14000ecfa:	add    BYTE PTR [rax],al
   14000ecfc:	lock (bad) 
   14000ecfe:	add    BYTE PTR [rax],al
   14000ed00:	or     BYTE PTR [rax],al
   14000ed02:	add    BYTE PTR [rax],al
   14000ed04:	cs rex.XB push r10
   14000ed07:	push   rsp
   14000ed08:	and    al,0x58
   14000ed0a:	rex.XB pop r10
   14000ed0c:	add    BYTE PTR [rax],al
   14000ed0e:	add    BYTE PTR [rax],al
   14000ed10:	clc    
   14000ed11:	(bad)  
   14000ed12:	add    BYTE PTR [rax],al
   14000ed14:	or     BYTE PTR [rax],al
   14000ed16:	add    BYTE PTR [rax],al
   14000ed18:	cs rex.XB push r10
   14000ed1b:	push   rsp
   14000ed1c:	and    al,0x58
   14000ed1e:	rex.WB
   14000ed1f:	add    BYTE PTR [r8],al
   14000ed22:	add    BYTE PTR [rax],al
   14000ed24:	add    ch,dl
   14000ed26:	add    BYTE PTR [rax],al
   14000ed28:	or     BYTE PTR [rax],al
   14000ed2a:	add    BYTE PTR [rax],al
   14000ed2c:	cs rex.XB push r10
   14000ed2f:	push   rsp
   14000ed30:	and    al,0x58
   14000ed32:	rex.WB
   14000ed33:	rex.B
   14000ed34:	add    BYTE PTR [r8],al
   14000ed37:	add    BYTE PTR [rax],cl
   14000ed39:	(bad)  
   14000ed3a:	add    BYTE PTR [rax],al
   14000ed3c:	or     BYTE PTR [rax],al
   14000ed3e:	add    BYTE PTR [rax],al
   14000ed40:	cs rex.XB push r10
   14000ed43:	push   rsp
   14000ed44:	and    al,0x58
   14000ed46:	rex.WB pop r9
   14000ed48:	add    BYTE PTR [rax],al
   14000ed4a:	add    BYTE PTR [rax],al
   14000ed4c:	adc    ch,dl
   14000ed4e:	add    BYTE PTR [rax],al
   14000ed50:	or     BYTE PTR [rax],al
   14000ed52:	add    BYTE PTR [rax],al
   14000ed54:	cs rex.XB push r10
   14000ed57:	push   rsp
   14000ed58:	and    al,0x58
   14000ed5a:	rex.WB pop r10
   14000ed5c:	add    BYTE PTR [rax],al
   14000ed5e:	add    BYTE PTR [rax],al
   14000ed60:	sbb    ch,dl
   14000ed62:	add    BYTE PTR [rax],al
   14000ed64:	lods   al,BYTE PTR ds:[rsi]
   14000ed65:	add    DWORD PTR [rax],eax
   14000ed67:	add    BYTE PTR [rsi],ch
   14000ed69:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000ed71:	add    BYTE PTR [rax],al
   14000ed73:	add    al,dl
   14000ed75:	(bad)  
   14000ed76:	add    BYTE PTR [rax],al
   14000ed78:	adc    BYTE PTR [rip+0x722e0000],dl        # 0x1b22eed7e
   14000ed7e:	fs (bad) 
   14000ed80:	je     0x14000ede3
   14000ed82:	add    BYTE PTR [rax],al
   14000ed84:	loopne 0x14000ed71
   14000ed86:	add    BYTE PTR [rax],al
   14000ed88:	enter  0x2,0x0
   14000ed8c:	cs jb  0x14000edf3
   14000ed8f:	(bad)  
   14000ed90:	je     0x14000edf3
   14000ed92:	and    al,0x7a
   14000ed94:	jp     0x14000ee10
   14000ed96:	fs (bad) 
   14000ed98:	add    BYTE PTR [eax],al
   14000ed9b:	add    BYTE PTR [rax-0x1fffff12],dh
   14000eda1:	sbb    BYTE PTR [rax],al
   14000eda3:	add    BYTE PTR [rsi],ch
   14000eda5:	js     0x14000ee0b
   14000eda7:	(bad)  
   14000eda8:	je     0x14000ee0b
   14000edaa:	add    BYTE PTR [rax],al
   14000edac:	nop
   14000edad:	(bad)  
   14000edae:	add    DWORD PTR [rax],eax
   14000edb0:	xor    al,0x2
   14000edb2:	add    BYTE PTR [rax],al
   14000edb4:	cs js  0x14000ee1b
   14000edb7:	(bad)  
   14000edb8:	je     0x14000ee1b
   14000edba:	and    al,0x78
   14000edbc:	add    BYTE PTR [rax],al
   14000edbe:	add    BYTE PTR [rax],al
   14000edc0:	enter  0x109,0x0
   14000edc4:	or     BYTE PTR [rax],al
   14000edc6:	add    BYTE PTR [rax],al
   14000edc8:	push   r12
   14000edca:	rex.WR and al,0x5f
   14000edcd:	pop    rdi
   14000edce:	(bad)  
   14000edcf:	add    al,dl
   14000edd1:	or     DWORD PTR [rcx],eax
   14000edd3:	add    BYTE PTR [rax],bl
   14000edd5:	add    BYTE PTR [rax],al
   14000edd7:	add    BYTE PTR [rcx+0x54],al
   14000edda:	rex.WR and al,0x5f
   14000eddd:	pop    rdi
   14000edde:	ins    DWORD PTR es:[rdi],dx
   14000eddf:	add    al,ch
   14000ede1:	or     DWORD PTR [rcx],eax
   14000ede3:	add    BYTE PTR [rax],cl
   14000ede5:	add    BYTE PTR [rax],al
   14000ede7:	add    BYTE PTR [rcx+0x54],al
   14000edea:	rex.WR and al,0x5f
   14000eded:	pop    rdi
   14000edee:	jp     0x14000edf0
   14000edf0:	lock or DWORD PTR [rcx],eax
   14000edf3:	add    BYTE PTR [rax+0x2e000001],dl
   14000edf9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000ee01:	add    BYTE PTR [rax],al
   14000ee03:	add    BYTE PTR [rax+0x1400010b],al
   14000ee09:	add    BYTE PTR [rax],al
   14000ee0b:	add    BYTE PTR [rsi],ch
   14000ee0d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   14000ee15:	add    BYTE PTR [rax],al
   14000ee17:	add    BYTE PTR [rax-0x57fffef5],bl
   14000ee1d:	add    al,0x0
   14000ee1f:	add    BYTE PTR [rsi],ch
   14000ee21:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000ee29:	add    BYTE PTR [rax],al
   14000ee2b:	add    BYTE PTR [rax+0x10],al
   14000ee2e:	add    DWORD PTR [rax],eax
   14000ee30:	and    al,0xb
   14000ee32:	add    BYTE PTR [rax],al
   14000ee34:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000ee3d:	add    BYTE PTR [rax],al
   14000ee3f:	add    BYTE PTR [rax],al
   14000ee41:	and    BYTE PTR [rcx],al
   14000ee43:	add    BYTE PTR [rax+0x1],ah
   14000ee46:	add    BYTE PTR [rax],al
   14000ee48:	cs fs (bad) 
   14000ee4b:	je     0x14000eeae
   14000ee4d:	add    BYTE PTR [rax],al
   14000ee4f:	add    BYTE PTR [rax+0x21],ah
   14000ee52:	add    DWORD PTR [rax],eax
   14000ee54:	lods   al,BYTE PTR ds:[rsi]
   14000ee55:	add    al,BYTE PTR [rax]
   14000ee57:	add    BYTE PTR [rsi],ch
   14000ee59:	fs (bad) 
   14000ee5b:	je     0x14000eebe
   14000ee5d:	and    al,0x72
   14000ee5f:	add    BYTE PTR [rax+0x24],al
   14000ee62:	add    DWORD PTR [rax],eax
   14000ee64:	fmul   DWORD PTR [rax]
   14000ee66:	add    BYTE PTR [rax],al
   14000ee68:	cs (bad) 
   14000ee6b:	jae    0x14000ee6d
   14000ee6d:	add    BYTE PTR [rax],al
   14000ee6f:	add    BYTE PTR [rax],al
   14000ee71:	xor    BYTE PTR [rcx],al
   14000ee73:	add    BYTE PTR [rbx+rcx*1],dh
   14000ee76:	add    BYTE PTR [rax],al
   14000ee78:	cs jo  0x14000eedf
   14000ee7b:	(bad)  
   14000ee7c:	je     0x14000eedf
   14000ee7e:	add    BYTE PTR [rax],al
   14000ee80:	add    BYTE PTR [rax+0x1],al
   14000ee83:	add    BYTE PTR [rax+0x2e000001],dh
   14000ee89:	jb     0x14000eefe
   14000ee8b:	jb     0x14000eef0
   14000ee8d:	and    al,0x30
   14000ee8f:	xor    DWORD PTR [rax],eax
   14000ee91:	add    BYTE PTR [rax],al
   14000ee93:	add    BYTE PTR [rax+0x58000141],dh
   14000ee99:	adc    al,0x0
   14000ee9b:	add    BYTE PTR [rsi],ch
   14000ee9d:	jb     0x14000ef12
   14000ee9f:	jb     0x14000ef04
   14000eea1:	and    al,0x30
   14000eea3:	xor    al,BYTE PTR [rax]
	...
   14000eead:	add    BYTE PTR [rax],al
   14000eeaf:	add    BYTE PTR [rcx],al
   14000eeb1:	or     al,BYTE PTR [rax+rax*1]
   14000eeb4:	or     dh,BYTE PTR [rsi+rax*1]
   14000eeb7:	add    BYTE PTR [rdx],cl
   14000eeb9:	xor    al,BYTE PTR [rsi]
   14000eebb:	jo     0x14000eebe
   14000eebd:	add    al,0x1
   14000eebf:	add    BYTE PTR [rdx+rax*2],al
   14000eec2:	add    BYTE PTR [rax],al
   14000eec4:	sbb    DWORD PTR [rdi+rax*1],esp
   14000eec7:	add    BYTE PTR [rdx],dl
   14000eec9:	fs add BYTE PTR cs:[rdx],dl
   14000eecd:	xor    al,0x2d
   14000eecf:	add    BYTE PTR [rdx],dl
   14000eed1:	add    DWORD PTR [rdx],ebp
   14000eed3:	add    BYTE PTR [rbx],cl
   14000eed5:	jo     0x14000eed7
   14000eed7:	add    BYTE PTR [rax-0x45],ch
   14000eeda:	add    BYTE PTR [rax],al
   14000eedc:	rex add DWORD PTR [rax],eax
   14000eedf:	add    BYTE PTR [rcx],al
   14000eee1:	adc    BYTE PTR [rsi],al
   14000eee3:	add    BYTE PTR [rax],dl
   14000eee5:	xor    al,0xd
   14000eee7:	add    BYTE PTR [rax],dl
   14000eee9:	push   rdx
   14000eeea:	or     al,0x70
   14000eeec:	or     esp,DWORD PTR [rax+0xa]
   14000eeef:	push   rax
   14000eef0:	add    DWORD PTR [rsi],eax
   14000eef2:	add    al,BYTE PTR [rax]
   14000eef4:	(bad)  
   14000eef5:	xor    al,BYTE PTR [rdx]
   14000eef7:	xor    BYTE PTR [rcx],al
   14000eef9:	or     al,BYTE PTR [rdx]
   14000eefb:	add    BYTE PTR [rdx],cl
   14000eefd:	push   rdx
   14000eefe:	(bad)  
   14000eeff:	xor    BYTE PTR [rcx],al
   14000ef01:	clts   
   14000ef03:	add    BYTE PTR [rdi],cl
   14000ef05:	or     DWORD PTR fs:[rax],eax
   14000ef08:	sysenter 
   14000ef0a:	or     BYTE PTR [rax],al
   14000ef0c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000ef0f:	jo     0x14000ef12
   14000ef11:	(bad)  
   14000ef12:	or     BYTE PTR [rax],al
   14000ef14:	(bad)  
   14000ef15:	je     0x14000ef25
   14000ef17:	add    BYTE PTR [rdi],dl
   14000ef19:	fs or  eax,0xc341700
   14000ef1f:	add    BYTE PTR [rdi],dl
   14000ef21:	xchg   edx,eax
   14000ef22:	adc    BYTE PTR [rax+0x1],dl
   14000ef25:	adc    al,0x8
   14000ef27:	add    BYTE PTR [rsp+riz*2],dl
   14000ef2a:	or     BYTE PTR [rax],al
   14000ef2c:	adc    al,0x54
   14000ef2e:	(bad)  
   14000ef2f:	add    BYTE PTR [rsp+rsi*1],dl
   14000ef32:	(bad)  
   14000ef33:	add    BYTE PTR [rdx+rsi*1],dl
   14000ef36:	adc    BYTE PTR [rax+0x1],dh
   14000ef39:	clts   
   14000ef3b:	add    BYTE PTR [rdi],cl
   14000ef3d:	or     eax,DWORD PTR fs:[rax]
   14000ef40:	sysenter 
   14000ef42:	or     al,BYTE PTR [rax]
   14000ef44:	(bad)  
   14000ef46:	or     esi,DWORD PTR [rax+0x1]
   14000ef49:	(bad)  
   14000ef4a:	(bad)  
   14000ef4b:	add    BYTE PTR [rsi],dl
   14000ef4d:	xor    al,0xc
   14000ef4f:	add    BYTE PTR [rsi],dl
   14000ef51:	push   rdx
   14000ef52:	adc    ah,al
   14000ef54:	adc    BYTE PTR [rax+0xf],dh
   14000ef57:	(bad)  
   14000ef58:	sbb    DWORD PTR [rcx],esp
   14000ef5a:	or     BYTE PTR [rax],al
   14000ef5c:	adc    esi,DWORD PTR [rax+rdx*1]
   14000ef5f:	add    BYTE PTR [rbx],dl
   14000ef61:	xchg   edx,eax
   14000ef62:	or     al,0xf0
   14000ef64:	or     ah,al
   14000ef66:	or     BYTE PTR [rax+0x7],dh
   14000ef69:	(bad)  
   14000ef6a:	(bad)  
   14000ef6b:	push   rax
   14000ef6c:	push   0x480000bb
   14000ef71:	add    BYTE PTR [rax],al
   14000ef73:	add    BYTE PTR [rcx],al
   14000ef75:	or     al,BYTE PTR [rax+rax*1]
   14000ef78:	or     dh,BYTE PTR [rsp+rcx*1]
   14000ef7b:	add    BYTE PTR [rdx],cl
   14000ef7d:	xchg   edx,eax
   14000ef7e:	(bad)  
   14000ef7f:	jo     0x14000ef82
   14000ef81:	(bad)  
   14000ef82:	(bad)  
   14000ef83:	add    BYTE PTR [rdi],dl
   14000ef85:	xor    al,0xb
   14000ef87:	add    BYTE PTR [rdi],dl
   14000ef89:	push   rdx
   14000ef8a:	adc    esp,eax
   14000ef8c:	adc    DWORD PTR [rax+0x10],esi
   14000ef8f:	(bad)  
   14000ef90:	sbb    DWORD PTR [rax],esi
   14000ef92:	or     eax,DWORD PTR [rax]
   14000ef94:	(bad)  
   14000ef95:	xor    al,0x52
   14000ef97:	add    BYTE PTR [rdi],bl
   14000ef99:	add    DWORD PTR [rax+0x0],ecx
   14000ef9c:	adc    al,dh
   14000ef9e:	(bad)  
   14000ef9f:	loopne 0x14000efad
   14000efa1:	ror    BYTE PTR [rdx],1
   14000efa3:	ror    BYTE PTR [rax],0x70
   14000efa6:	(bad)  
   14000efa7:	(bad)  
   14000efa8:	(bad)  
   14000efa9:	push   rax
   14000efaa:	add    BYTE PTR [rax],al
   14000efac:	push   0x300000bb
   14000efb1:	add    al,BYTE PTR [rax]
   14000efb3:	add    BYTE PTR [rcx],bl
   14000efb5:	and    BYTE PTR [rdi],al
   14000efb7:	add    BYTE PTR [rsi],cl
   14000efb9:	add    DWORD PTR [rax+rax*1+0x7],ecx
   14000efbd:	loopne 0x14000efc4
   14000efbf:	jo     0x14000efc5
   14000efc1:	(bad)  
   14000efc2:	add    edx,DWORD PTR [rax+0x2]
   14000efc5:	xor    BYTE PTR [rax],al
   14000efc7:	add    BYTE PTR [rax-0x45],ch
   14000efca:	add    BYTE PTR [rax],al
   14000efcc:	push   rax
   14000efcd:	add    al,BYTE PTR [rax]
   14000efcf:	add    BYTE PTR [rcx],bl
   14000efd1:	(bad)  
   14000efd2:	or     DWORD PTR [rax],eax
   14000efd4:	(bad)  
   14000efd5:	fs push rsp
   14000efd7:	add    BYTE PTR [rsi],bl
   14000efd9:	xor    al,0x53
   14000efdb:	add    BYTE PTR [rsi],bl
   14000efdd:	add    DWORD PTR [rsi+0x0],ecx
   14000efe0:	(bad)  
   14000efe2:	or     eax,0x500be0
   14000efe7:	add    BYTE PTR [rax-0x45],ch
   14000efea:	add    BYTE PTR [rax],al
   14000efec:	(bad)  
   14000efed:	add    al,BYTE PTR [rax]
   14000efef:	add    BYTE PTR [rcx],al
   14000eff1:	adc    eax,0x74150008
   14000eff6:	or     BYTE PTR [rax],al
   14000eff8:	adc    eax,0x15000764
   14000effd:	xor    al,0x6
   14000efff:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e10137
   14000f005:	adc    eax,DWORD PTR [rdx]
   14000f007:	add    BYTE PTR [rdx],cl
   14000f009:	push   rdx
   14000f00a:	(bad)  
   14000f00b:	xor    BYTE PTR [rsp+rdi*4],bl
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	or     dh,ah
   14000f012:	add    BYTE PTR [rax],al
   14000f014:	(bad)  
   14000f015:	(bad)  
   14000f016:	(bad)  
   14000f017:	call   QWORD PTR [rsi-0x43]
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	add    BYTE PTR [rax],al
   14000f01e:	add    BYTE PTR [rax],al
   14000f020:	test   al,0x31
   14000f022:	add    BYTE PTR [rax],al
   14000f024:	(bad)  
   14000f025:	(bad)  
   14000f026:	(bad)  
   14000f027:	(bad)  
   14000f028:	mov    esi,0x31
   14000f02d:	add    BYTE PTR [rax],al
   14000f02f:	add    ah,al
   14000f031:	xor    DWORD PTR [rax],eax
   14000f033:	add    bh,bh
   14000f035:	(bad)  
   14000f036:	(bad)  
   14000f037:	inc    DWORD PTR [rcx]
   14000f039:	clts   
   14000f03b:	add    BYTE PTR [rdi],cl
   14000f03d:	fs (bad) 
   14000f03f:	add    BYTE PTR [rdi],cl
   14000f041:	xor    al,0x6
   14000f043:	add    BYTE PTR [rdi],cl
   14000f045:	xor    cl,BYTE PTR [rbx]
   14000f047:	jo     0x14000f05a
   14000f049:	sbb    BYTE PTR [rax+rax*1],al
   14000f04c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000f04f:	add    BYTE PTR [rdx],cl
   14000f051:	push   rdx
   14000f052:	(bad)  
   14000f053:	jo     0x14000f071
   14000f055:	mov    esp,0xe5e00000
   14000f05a:	add    BYTE PTR [rax],al
   14000f05c:	(bad)  
   14000f05d:	(bad)  
   14000f05e:	(bad)  
   14000f05f:	jmp    FWORD PTR [rax-0x43]
   14000f062:	add    BYTE PTR [rax],al
   14000f064:	add    BYTE PTR [rax],al
   14000f066:	add    BYTE PTR [rax],al
   14000f068:	js     0x14000f027
   14000f06a:	add    BYTE PTR [rax],al
   14000f06c:	(bad)  
   14000f06d:	(bad)  
   14000f06e:	(bad)  
   14000f06f:	dec    DWORD PTR [rax+0xbd]
   14000f075:	add    BYTE PTR [rax],al
   14000f077:	add    BYTE PTR [rbx+rsi*1],dl
   14000f07a:	add    BYTE PTR [rax],al
   14000f07c:	(bad)  
   14000f07d:	(bad)  
   14000f07e:	(bad)  
   14000f07f:	(bad)  
   14000f080:	cmp    DWORD PTR [rbx],esi
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	add    DWORD PTR [rax],eax
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	pop    rsp
   14000f089:	xor    eax,DWORD PTR [rax]
   14000f08b:	add    BYTE PTR [rax],al
   14000f08d:	add    BYTE PTR [rax],al
   14000f08f:	add    BYTE PTR [rax+0x33],dh
   14000f092:	add    BYTE PTR [rax],al
   14000f094:	(bad)  
   14000f095:	(bad)  
   14000f096:	(bad)  
   14000f097:	push   QWORD PTR [rbp+0x33]
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	add    al,BYTE PTR [rax]
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	jle    0x14000f0d5
   14000f0a2:	add    BYTE PTR [rax],al
   14000f0a4:	(bad)  
   14000f0a5:	(bad)  
   14000f0a6:	(bad)  
   14000f0a7:	dec    DWORD PTR [rcx]
   14000f0a9:	add    al,0x1
   14000f0ab:	add    BYTE PTR [rdx+riz*2],al
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	rex.RX mov edx,0x10000
   14000f0b6:	add    BYTE PTR [rax],al
   14000f0b8:	shl    BYTE PTR [rbx],0x0
   14000f0bb:	add    dh,cl
   14000f0bd:	xor    eax,DWORD PTR [rax]
   14000f0bf:	add    BYTE PTR [rdx-0x31ffff43],bl
   14000f0c5:	xor    eax,DWORD PTR [rax]
   14000f0c7:	add    BYTE PTR [rcx],al
   14000f0c9:	(bad)  
   14000f0ca:	add    al,BYTE PTR [rax]
   14000f0cc:	(bad)  
   14000f0cd:	xor    al,BYTE PTR [rdx]
   14000f0cf:	push   rax
   14000f0d0:	sbb    DWORD PTR [rsi],esp
   14000f0d2:	or     BYTE PTR [rax],al
   14000f0d4:	(bad)  
   14000f0d5:	mov    dl,0x1a
   14000f0d7:	lock sbb al,ah
   14000f0da:	(bad)  
   14000f0db:	rcl    BYTE PTR [rax+rax*8],1
   14000f0de:	adc    dh,BYTE PTR [rax+0x11]
   14000f0e1:	(bad)  
   14000f0e2:	adc    BYTE PTR [rax],dh
   14000f0e4:	sbb    al,0xbc
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	mov    eax,0xff0000e5
   14000f0ed:	(bad)  
   14000f0ee:	(bad)  
   14000f0ef:	inc    DWORD PTR [rax]
   14000f0f1:	add    BYTE PTR [rax],al
   14000f0f3:	add    bh,bh
   14000f0f5:	(bad)  
   14000f0f6:	(bad)  
   14000f0f7:	inc    DWORD PTR [rax]
   14000f0f9:	add    BYTE PTR [rax],al
   14000f0fb:	add    bh,bh
   14000f0fd:	(bad)  
   14000f0fe:	(bad)  
   14000f0ff:	(bad)  
   14000f100:	fstp   TBYTE PTR [rbp+0x20000]
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	add    BYTE PTR [rax],al
   14000f10a:	add    BYTE PTR [rax],al
   14000f10c:	add    al,BYTE PTR [rax]
   14000f10e:	add    BYTE PTR [rax],al
   14000f110:	add    BYTE PTR [rax],al
   14000f112:	add    BYTE PTR [rax],al
   14000f114:	add    al,BYTE PTR [rax]
   14000f116:	add    BYTE PTR [rax],al
   14000f118:	add    bh,BYTE PTR [rsi+0x0]
   14000f11e:	add    BYTE PTR [rax],al
   14000f120:	add    BYTE PTR [rax],al
   14000f122:	add    BYTE PTR [rax],al
   14000f124:	add    DWORD PTR [rax],eax
   14000f126:	add    BYTE PTR [rax],al
   14000f128:	add    DWORD PTR [rax],eax
   14000f12a:	add    BYTE PTR [rax],al
   14000f12c:	rex.R icebp 
   14000f12e:	add    BYTE PTR [rax],al
   14000f130:	add    eax,DWORD PTR [rax]
   14000f132:	add    BYTE PTR [rax],al
   14000f134:	add    eax,DWORD PTR [rax]
   14000f136:	add    BYTE PTR [rax],al
   14000f138:	add    al,0x0
   14000f13a:	add    BYTE PTR [rax],al
   14000f13c:	add    DWORD PTR [rax],eax
   14000f13e:	add    BYTE PTR [rax],al
   14000f140:	pop    rax
   14000f141:	icebp  
   14000f142:	add    BYTE PTR [rax],al
   14000f144:	add    BYTE PTR [rax],al
	...
   14000f14f:	add    al,al
   14000f151:	mov    ebp,0x380000
   14000f156:	add    BYTE PTR [rax],al
   14000f158:	add    BYTE PTR [rax],al
	...
   14000f163:	add    bh,ah
   14000f165:	mov    ebp,0x380000
   14000f16a:	add    BYTE PTR [rax],al
   14000f16c:	add    BYTE PTR [rax],al
   14000f16e:	add    BYTE PTR [rax],al
   14000f170:	or     BYTE PTR [rax+rax*1],dh
   14000f173:	add    bh,bh
   14000f175:	(bad)  
   14000f176:	(bad)  
   14000f177:	push   QWORD PTR [rax+0x34]
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	add    BYTE PTR [rax],al
   14000f17e:	add    BYTE PTR [rax],al
   14000f180:	mov    ?,WORD PTR [rax+rax*1]
   14000f183:	add    bh,bh
   14000f185:	(bad)  
   14000f186:	(bad)  
   14000f187:	(bad)  
   14000f188:	mov    ebx,0x2000034
   14000f18d:	add    BYTE PTR [rax],al
   14000f18f:	add    bl,ah
   14000f191:	xor    al,0x0
   14000f193:	add    BYTE PTR [rbx],al
   14000f195:	add    BYTE PTR [rax],al
   14000f197:	add    bh,bh
   14000f199:	xor    al,0x0
   14000f19b:	add    BYTE PTR [rdx],al
   14000f19d:	add    BYTE PTR [rax],al
   14000f19f:	add    BYTE PTR [rdi],dh
   14000f1a1:	xor    eax,0x50000
   14000f1a6:	add    BYTE PTR [rax],al
   14000f1a8:	jae    0x14000f1e0
   14000f1aa:	add    BYTE PTR [rax],al
   14000f1ac:	add    al,BYTE PTR [rax]
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	jge    0x14000f1e8
   14000f1b2:	add    BYTE PTR [rax],al
   14000f1b4:	(bad)  
   14000f1b5:	(bad)  
   14000f1b6:	(bad)  
   14000f1b7:	inc    eax
   14000f1b9:	mov    ebp,0x0
   14000f1be:	add    BYTE PTR [rax],al
   14000f1c0:	sbb    DWORD PTR [rdx],ecx
   14000f1c2:	add    al,BYTE PTR [rax]
   14000f1c4:	or     dh,BYTE PTR [rdx]
   14000f1c6:	(bad)  
   14000f1c7:	push   rax
   14000f1c8:	sbb    al,0xbc
   14000f1ca:	add    BYTE PTR [rax],al
   14000f1cc:	mov    eax,0x110000e5
   14000f1d1:	sbb    al,0x8
   14000f1d3:	add    BYTE PTR [rsp+riz*2],bl
   14000f1d6:	or     eax,DWORD PTR [rax]
   14000f1d8:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000f1dc:	adc    al,0x34
   14000f1de:	or     BYTE PTR [rax],al
   14000f1e0:	or     BYTE PTR [rdx+0x4],dl
   14000f1e3:	jo     0x14000f201
   14000f1e5:	mov    esp,0xe5900000
   14000f1ea:	add    BYTE PTR [rax],al
   14000f1ec:	(bad)  
   14000f1ed:	(bad)  
   14000f1ee:	(bad)  
   14000f1ef:	call   QWORD PTR [rsi+rdi*4]
   14000f1f2:	add    BYTE PTR [rax],al
   14000f1f4:	add    BYTE PTR [rax],al
   14000f1f6:	add    BYTE PTR [rax],al
   14000f1f8:	mov    al,0x36
   14000f1fa:	add    BYTE PTR [rax],al
   14000f1fc:	(bad)  
   14000f1fd:	(bad)  
   14000f1fe:	(bad)  
   14000f1ff:	(bad)  
   14000f200:	out    dx,eax
   14000f201:	add    BYTE PTR ss:[rax],al
   14000f204:	add    BYTE PTR [rax],al
   14000f206:	add    BYTE PTR [rax],al
   14000f208:	adc    eax,0xff000037
   14000f20d:	(bad)  
   14000f20e:	(bad)  
   14000f20f:	inc    DWORD PTR [rcx]
   14000f211:	sbb    DWORD PTR [rdx],ecx
   14000f213:	add    BYTE PTR [rcx],bl
   14000f215:	je     0x14000f220
   14000f217:	add    BYTE PTR [rcx],bl
   14000f219:	or     BYTE PTR fs:[rax],al
   14000f21c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000f220:	sbb    DWORD PTR [rsi+rax*1],esi
   14000f223:	add    BYTE PTR [rcx],bl
   14000f225:	xor    dl,BYTE PTR [rip+0xb3319e0]        # 0x14b340c0b
   14000f22b:	add    BYTE PTR [rip+0x19001d34],ah        # 0x159010f65
   14000f231:	add    DWORD PTR [rax+rax*1],edx
   14000f234:	(bad)  
   14000f235:	lock or al,0xe0
   14000f238:	or     dl,al
   14000f23a:	or     al,al
   14000f23c:	(bad)  
   14000f23d:	jo     0x14000f244
   14000f23f:	(bad)  
   14000f240:	add    al,0x50
   14000f242:	add    BYTE PTR [rax],al
   14000f244:	sub    BYTE PTR [rax+rax*1+0xe56800],bh
   14000f24b:	add    BYTE PTR [rdx-0x1000000],dl
   14000f251:	(bad)  
   14000f252:	(bad)  
   14000f253:	jmp    QWORD PTR [rsi]
   14000f255:	mov    esi,0x0
   14000f25a:	add    BYTE PTR [rax],al
   14000f25c:	xor    bh,BYTE PTR [rsi+0x39100000]
   14000f262:	add    BYTE PTR [rax],al
   14000f264:	(bad)  
   14000f265:	(bad)  
   14000f266:	(bad)  
   14000f267:	jmp    FWORD PTR [rbp+0x39]
   14000f26d:	add    BYTE PTR [rax],al
   14000f26f:	add    ch,dh
   14000f271:	cmp    al,BYTE PTR [rax]
   14000f273:	add    BYTE PTR [rcx],al
   14000f275:	add    BYTE PTR [rax],al
   14000f277:	add    BYTE PTR [rax],dl
   14000f279:	cmp    eax,DWORD PTR [rax]
   14000f27b:	add    BYTE PTR [rax],al
   14000f27d:	add    BYTE PTR [rax],al
   14000f27f:	add    BYTE PTR [rbx+rdi*1-0x10000],ah
   14000f286:	(bad)  
   14000f287:	inc    DWORD PTR [rcx]
   14000f289:	sbb    DWORD PTR [rdx],ecx
   14000f28b:	add    BYTE PTR [rcx],bl
   14000f28d:	je     0x14000f298
   14000f28f:	add    BYTE PTR [rcx],bl
   14000f291:	or     BYTE PTR fs:[rax],al
   14000f294:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000f298:	sbb    DWORD PTR [rsi+rax*1],esi
   14000f29b:	add    BYTE PTR [rcx],bl
   14000f29d:	xor    dl,BYTE PTR [rip+0x93419f0]        # 0x149350c93
   14000f2a3:	add    BYTE PTR [rcx],bl
   14000f2a5:	add    DWORD PTR [rsp+rax*1],esi
   14000f2a8:	or     al,0xf0
   14000f2aa:	or     ah,al
   14000f2ac:	or     al,dl
   14000f2ae:	(bad)  
   14000f2af:	rol    BYTE PTR [rax+rsi*2],0x3
   14000f2b3:	(bad)  
   14000f2b4:	add    dh,BYTE PTR [rax]
   14000f2b6:	add    BYTE PTR [rax],al
   14000f2b8:	sub    BYTE PTR [rax+rax*1+0xe54000],bh
   14000f2bf:	add    BYTE PTR [rbx-0xffffdf],dl
   14000f2c5:	(bad)  
   14000f2c6:	(bad)  
   14000f2c7:	inc    DWORD PTR [rsi+rdi*4+0x0]
	...
   14000f2db:	add    bh,bh
   14000f2dd:	(bad)  
   14000f2de:	(bad)  
   14000f2df:	jmp    FWORD PTR [rbx-0x42]
   14000f2e2:	add    BYTE PTR [rax],al
   14000f2e4:	add    eax,DWORD PTR [rax]
   14000f2e6:	add    BYTE PTR [rax],al
   14000f2e8:	add    BYTE PTR [rax],al
   14000f2ea:	add    BYTE PTR [rax],al
   14000f2ec:	add    eax,DWORD PTR [rax]
   14000f2ee:	add    BYTE PTR [rax],al
   14000f2f0:	add    BYTE PTR [rax],al
   14000f2f2:	add    BYTE PTR [rax],al
   14000f2f4:	add    DWORD PTR [rax],eax
   14000f2f6:	add    BYTE PTR [rax],al
   14000f2f8:	add    DWORD PTR [rax],eax
   14000f2fa:	add    BYTE PTR [rax],al
   14000f2fc:	add    al,BYTE PTR [rax]
   14000f2fe:	add    BYTE PTR [rax],al
   14000f300:	add    DWORD PTR [rax],eax
   14000f302:	add    BYTE PTR [rax],al
   14000f304:	sbb    al,0xf3
   14000f306:	add    BYTE PTR [rax],al
   14000f308:	add    al,0x0
   14000f30a:	add    BYTE PTR [rax],al
   14000f30c:	add    al,0x0
   14000f30e:	add    BYTE PTR [rax],al
   14000f310:	add    eax,0x1000000
   14000f315:	add    BYTE PTR [rax],al
   14000f317:	add    BYTE PTR [rax],dh
   14000f319:	repz add BYTE PTR [rax],al
   14000f31c:	add    BYTE PTR [rax],al
	...
   14000f327:	add    BYTE PTR [rax-0x42],dl
   14000f32a:	add    BYTE PTR [rax],al
   14000f32c:	rex.W add BYTE PTR [rax],al
   14000f32f:	add    BYTE PTR [rax+0x0],al
	...
   14000f33a:	add    BYTE PTR [rax],al
   14000f33c:	ja     0x14000f2fc
   14000f33e:	add    BYTE PTR [rax],al
   14000f340:	rex.W add BYTE PTR [rax],al
	...
   14000f34f:	add    BYTE PTR [rax],dl
   14000f351:	cmp    eax,0xffff0000
   14000f356:	(bad)  
   14000f357:	push   QWORD PTR [rax]
   14000f359:	add    BYTE PTR ds:[rax],al
   14000f35c:	add    DWORD PTR [rax],eax
   14000f35e:	add    BYTE PTR [rax],al
   14000f360:	cmp    DWORD PTR [rsi],0x0
   14000f363:	add    BYTE PTR [rax],al
   14000f365:	add    BYTE PTR [rax],al
   14000f367:	add    BYTE PTR [rdi+0x3f],bh
   14000f36a:	add    BYTE PTR [rax],al
   14000f36c:	(bad)  
   14000f36d:	(bad)  
   14000f36e:	(bad)  
   14000f36f:	call   FWORD PTR [rip+0x4000040]        # 0x14400f3b5
   14000f375:	add    BYTE PTR [rax],al
   14000f377:	add    BYTE PTR [rdi+0x40],ch
   14000f37a:	add    BYTE PTR [rax],al
   14000f37c:	add    eax,DWORD PTR [rax]
   14000f37e:	add    BYTE PTR [rax],al
   14000f380:	popf   
   14000f381:	add    BYTE PTR [rax],al
   14000f384:	(bad)  
   14000f385:	(bad)  
   14000f386:	(bad)  
   14000f387:	inc    eax
   14000f389:	add    BYTE PTR [rax],al
   14000f38c:	add    eax,DWORD PTR [rax]
   14000f38e:	add    BYTE PTR [rax],al
   14000f390:	je     0x14000f3d3
   14000f392:	add    BYTE PTR [rax],al
   14000f394:	(bad)  
   14000f395:	(bad)  
   14000f396:	(bad)  
   14000f397:	call   QWORD PTR [rax-0x42]
   14000f39a:	add    BYTE PTR [rax],al
   14000f39c:	add    BYTE PTR [rax],al
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	sbb    DWORD PTR [rdx],ecx
   14000f3a2:	add    al,BYTE PTR [rax]
   14000f3a4:	or     dl,BYTE PTR [rdx+0x6]
   14000f3a7:	push   rax
   14000f3a8:	sbb    al,0xbc
   14000f3aa:	add    BYTE PTR [rax],al
   14000f3ac:	rex in eax,0x0
   14000f3af:	add    BYTE PTR [rcx],bl
   14000f3b1:	and    eax,0x34130005
   14000f3b6:	or     al,BYTE PTR [rbx+rdx*1]
   14000f3b9:	add    DWORD PTR [rsi],eax
   14000f3bb:	add    al,0x6
   14000f3bd:	jo     0x14000f3bf
   14000f3bf:	add    BYTE PTR [rax-0x45],ch
   14000f3c2:	add    BYTE PTR [rax],al
   14000f3c4:	and    BYTE PTR [rax],ah
   14000f3c6:	add    BYTE PTR [rax],al
   14000f3c8:	sbb    DWORD PTR [rax],ebp
   14000f3ca:	(bad)  
   14000f3cb:	add    BYTE PTR [rdi],dl
   14000f3cd:	xor    al,0x56
   14000f3cf:	add    BYTE PTR [rdi],dl
   14000f3d1:	add    DWORD PTR [rax+0x0],edx
   14000f3d4:	or     BYTE PTR [rax+0x7],dh
   14000f3d7:	(bad)  
   14000f3d8:	(bad)  
   14000f3d9:	push   rax
   14000f3da:	add    BYTE PTR [rax],al
   14000f3dc:	push   0x700000bb
   14000f3e1:	add    al,BYTE PTR [rax]
   14000f3e3:	add    BYTE PTR [rcx],al
   14000f3e5:	sbb    eax,0x741d000c
   14000f3ea:	or     eax,DWORD PTR [rax]
   14000f3ec:	sbb    eax,0x1d000a64
   14000f3f1:	push   rsp
   14000f3f2:	or     DWORD PTR [rax],eax
   14000f3f4:	sbb    eax,0x1d000834
   14000f3f9:	xor    bl,BYTE PTR [rcx]
   14000f3fb:	lock (bad) 
   14000f3fd:	loopne 0x14000f414
   14000f3ff:	rcr    BYTE PTR [rcx],0x33
   14000f402:	(bad)  
   14000f403:	add    BYTE PTR [rdx],bl
   14000f405:	add    DWORD PTR [rdi+0x4],ebx
   14000f408:	add    eax,0x3600470
   14000f40d:	xor    BYTE PTR [rdx],al
   14000f40f:	push   rax
   14000f410:	sub    BYTE PTR [rax+rax*1+0xe51800],bh
   14000f417:	add    dl,ah
   14000f419:	and    al,BYTE PTR [rax]
   14000f41b:	add    bh,bh
   14000f41d:	(bad)  
   14000f41e:	(bad)  
   14000f41f:	call   FWORD PTR [rax+0xbe]
   14000f425:	add    BYTE PTR [rax],al
   14000f427:	add    BYTE PTR [rsi+rdi*4+0x0],ah
   14000f42e:	add    BYTE PTR [rax],al
   14000f430:	call   0x13f00f47b
   14000f435:	(bad)  
   14000f436:	(bad)  
   14000f437:	(bad)  
   14000f438:	(bad)  
   14000f439:	rex.RXB add BYTE PTR [r8],r8b
   14000f43c:	add    BYTE PTR [rax],al
   14000f43e:	add    BYTE PTR [rax],al
   14000f440:	add    cl,BYTE PTR [rcx+0x0]
   14000f443:	add    BYTE PTR [rcx],al
   14000f445:	add    BYTE PTR [rax],al
   14000f447:	add    BYTE PTR [rsi],ah
   14000f449:	rex.WB add BYTE PTR [r8],al
   14000f44c:	add    BYTE PTR [rax],al
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	xchg   esp,eax
   14000f451:	rex.WRX add BYTE PTR [rax],r8b
   14000f454:	(bad)  
   14000f455:	(bad)  
   14000f456:	(bad)  
   14000f457:	call   FWORD PTR [rcx]
   14000f459:	(bad)  
   14000f45a:	or     eax,DWORD PTR [rax]
   14000f45c:	sbb    eax,0x1d041534
   14000f461:	add    DWORD PTR [rdx],ecx
   14000f463:	add    al,0x10
   14000f465:	lock (bad) 
   14000f467:	loopne 0x14000f475
   14000f469:	ror    BYTE PTR [rdx],1
   14000f46b:	ror    BYTE PTR [rax],0x70
   14000f46e:	(bad)  
   14000f46f:	(bad)  
   14000f470:	(bad)  
   14000f471:	push   rax
   14000f472:	add    BYTE PTR [rax],al
   14000f474:	push   0x400000bb
   14000f479:	and    BYTE PTR [rax],al
   14000f47b:	add    BYTE PTR [rcx],bl
   14000f47d:	sub    eax,0x341b0007
   14000f482:	xchg   esi,eax
   14000f483:	add    BYTE PTR [rsi],cl
   14000f485:	add    DWORD PTR [rdx+0x5e00700],edx
   14000f48b:	jo     0x14000f491
   14000f48d:	(bad)  
   14000f48e:	add    BYTE PTR [rax],al
   14000f490:	sub    BYTE PTR [rax+rax*1+0xe4f000],bh
   14000f497:	add    BYTE PTR [rbx-0xfffffc],al
   14000f49d:	(bad)  
   14000f49e:	(bad)  
   14000f49f:	push   QWORD PTR [rsi+0xbe]
   14000f4a5:	add    BYTE PTR [rax],al
   14000f4a7:	add    dl,al
   14000f4a9:	mov    esi,0x10000
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	add    BYTE PTR [rax],al
   14000f4b2:	add    BYTE PTR [rax],al
   14000f4b4:	add    DWORD PTR [rax],eax
   14000f4b6:	add    BYTE PTR [rax],al
   14000f4b8:	add    BYTE PTR [rax],al
   14000f4ba:	add    BYTE PTR [rax],al
   14000f4bc:	add    al,BYTE PTR [rax]
   14000f4be:	add    BYTE PTR [rax],al
   14000f4c0:	add    al,BYTE PTR [rax]
   14000f4c2:	add    BYTE PTR [rax],al
   14000f4c4:	add    eax,DWORD PTR [rax]
   14000f4c6:	add    BYTE PTR [rax],al
   14000f4c8:	add    DWORD PTR [rax],eax
   14000f4ca:	add    BYTE PTR [rax],al
   14000f4cc:	shl    ah,1
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	add    BYTE PTR [rax],al
	...
   14000f4db:	add    dh,cl
   14000f4dd:	mov    esi,0x480000
	...
   14000f4ee:	add    BYTE PTR [rax],al
   14000f4f0:	mov    BYTE PTR [rax+0x0],dl
   14000f4f3:	add    bh,bh
   14000f4f5:	(bad)  
   14000f4f6:	(bad)  
   14000f4f7:	inc    ebp
   14000f4f9:	push   rax
   14000f4fa:	add    BYTE PTR [rax],al
   14000f4fc:	add    BYTE PTR [rax],al
   14000f4fe:	add    BYTE PTR [rax],al
   14000f500:	(bad)  
   14000f501:	push   rax
   14000f502:	add    BYTE PTR [rax],al
   14000f504:	add    DWORD PTR [rax],eax
   14000f506:	add    BYTE PTR [rax],al
   14000f508:	push   rcx
   14000f509:	push   rcx
   14000f50a:	add    BYTE PTR [rax],al
   14000f50c:	add    BYTE PTR [rax],al
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	push   0xffffffffff000051
   14000f515:	(bad)  
   14000f516:	(bad)  
   14000f517:	push   QWORD PTR [rdx+0x51]
   14000f51a:	add    BYTE PTR [rax],al
   14000f51c:	add    al,BYTE PTR [rax]
   14000f51e:	add    BYTE PTR [rax],al
   14000f520:	mov    ecx,0x1000051
   14000f525:	add    BYTE PTR [rax],al
   14000f527:	add    BYTE PTR [rdx+rdx*2],ch
   14000f52a:	add    BYTE PTR [rax],al
   14000f52c:	add    BYTE PTR [rax],al
   14000f52e:	add    BYTE PTR [rax],al
   14000f530:	rex.XB push r10
   14000f532:	add    BYTE PTR [rax],al
   14000f534:	(bad)  
   14000f535:	(bad)  
   14000f536:	(bad)  
   14000f537:	dec    esi
   14000f539:	mov    esi,0x0
   14000f53e:	add    BYTE PTR [rax],al
   14000f540:	sbb    DWORD PTR [rdx],ecx
   14000f542:	add    al,BYTE PTR [rax]
   14000f544:	or     dl,BYTE PTR [rdx+0x6]
   14000f547:	push   rax
   14000f548:	sbb    al,0xbc
   14000f54a:	add    BYTE PTR [rax],al
   14000f54c:	lock in al,0x0
   14000f54f:	add    BYTE PTR [rcx],bl
   14000f551:	or     DWORD PTR cs:[rax],eax
   14000f554:	sbb    eax,0x1d015f64
   14000f559:	xor    al,0x5e
   14000f55b:	add    DWORD PTR [rip+0xe015a01],ebx        # 0x14e024f62
   14000f561:	loopne 0x14000f56f
   14000f563:	jo     0x14000f570
   14000f565:	push   rax
   14000f566:	add    BYTE PTR [rax],al
   14000f568:	push   0xffffffffc00000bb
   14000f56d:	or     al,BYTE PTR [rax]
   14000f56f:	add    BYTE PTR [rcx],al
   14000f571:	(bad)  
   14000f572:	add    al,BYTE PTR [rax]
   14000f574:	(bad)  
   14000f575:	push   rdx
   14000f576:	add    dh,BYTE PTR [rax]
   14000f578:	sbb    DWORD PTR [rdx],esi
   14000f57a:	or     DWORD PTR [rax],eax
   14000f57c:	and    BYTE PTR [rbx+riz*1+0x0],ah
   14000f580:	sbb    al,0x34
   14000f582:	and    al,BYTE PTR [rax]
   14000f584:	lidt   [rax+rax*1]
   14000f588:	or     al,dh
   14000f58a:	(bad)  
   14000f58b:	loopne 0x14000f591
   14000f58d:	jo     0x14000f58f
   14000f58f:	add    BYTE PTR [rax],ch
   14000f591:	mov    esp,0xe8100000
   14000f596:	add    BYTE PTR [rax],al
   14000f598:	rol    DWORD PTR [rax],cl
   14000f59a:	add    BYTE PTR [rax],al
   14000f59c:	(bad)  
   14000f59d:	(bad)  
   14000f59e:	(bad)  
   14000f59f:	(bad)  
   14000f5a0:	out    dx,eax
   14000f5a1:	mov    esi,0x0
   14000f5a6:	add    BYTE PTR [rax],al
   14000f5a8:	add    BYTE PTR [rax],al
   14000f5aa:	add    BYTE PTR [rax],al
   14000f5ac:	add    DWORD PTR [rax],eax
   14000f5ae:	add    BYTE PTR [rax],al
   14000f5b0:	sti    
   14000f5b1:	mov    esi,0x20000
   14000f5b6:	add    BYTE PTR [rax],al
   14000f5b8:	and    DWORD PTR [rdi+0x30000],edi
   14000f5be:	add    BYTE PTR [rax],al
   14000f5c0:	rex.WX movabs rdi,0x0
   14000f5ca:	add    BYTE PTR [rax],al
   14000f5cc:	add    DWORD PTR [rax],eax
   14000f5ce:	add    BYTE PTR [rax],al
   14000f5d0:	add    al,0x0
   14000f5d2:	add    BYTE PTR [rax],al
   14000f5d4:	add    eax,0x1000000
   14000f5d9:	add    BYTE PTR [rax],al
   14000f5db:	add    al,ah
   14000f5dd:	cmc    
   14000f5de:	add    BYTE PTR [rax],al
   14000f5e0:	or     BYTE PTR [rax],al
   14000f5e2:	add    BYTE PTR [rax],al
   14000f5e4:	mov    BYTE PTR [rbx],ah
   14000f5e6:	add    DWORD PTR [rax],eax
   14000f5e8:	add    BYTE PTR [rax],al
   14000f5ea:	add    BYTE PTR [rax],al
   14000f5ec:	jae    0x14000f5ad
   14000f5ee:	add    BYTE PTR [rax],al
   14000f5f0:	cmp    BYTE PTR [rax],al
	...
   14000f5fe:	add    BYTE PTR [rax],al
   14000f600:	mov    esp,0xff000055
   14000f605:	(bad)  
   14000f606:	(bad)  
   14000f607:	call   QWORD PTR [rax]
   14000f609:	push   rsi
   14000f60a:	add    BYTE PTR [rax],al
   14000f60c:	add    DWORD PTR [rax],eax
   14000f60e:	add    BYTE PTR [rax],al
   14000f610:	ds push rsi
   14000f612:	add    BYTE PTR [rax],al
   14000f614:	add    al,BYTE PTR [rax]
   14000f616:	add    BYTE PTR [rax],al
   14000f618:	rex.XB push r14
   14000f61a:	add    BYTE PTR [rax],al
   14000f61c:	add    DWORD PTR [rax],eax
   14000f61e:	add    BYTE PTR [rax],al
   14000f620:	push   rcx
   14000f621:	push   rsi
   14000f622:	add    BYTE PTR [rax],al
   14000f624:	add    eax,DWORD PTR [rax]
   14000f626:	add    BYTE PTR [rax],al
   14000f628:	outs   dx,BYTE PTR ds:[rsi]
   14000f629:	push   rsi
   14000f62a:	add    BYTE PTR [rax],al
   14000f62c:	add    al,0x0
   14000f62e:	add    BYTE PTR [rax],al
   14000f630:	mov    DWORD PTR [rsi+0x0],edx
   14000f633:	add    BYTE PTR [rbx],al
   14000f635:	add    BYTE PTR [rax],al
   14000f637:	add    bl,al
   14000f639:	push   rsi
   14000f63a:	add    BYTE PTR [rax],al
   14000f63c:	add    al,BYTE PTR [rax]
   14000f63e:	add    BYTE PTR [rax],al
   14000f640:	std    
   14000f641:	push   rsi
   14000f642:	add    BYTE PTR [rax],al
   14000f644:	add    DWORD PTR [rax],eax
   14000f646:	add    BYTE PTR [rax],al
   14000f648:	(bad)  
   14000f649:	push   rdi
   14000f64a:	add    BYTE PTR [rax],al
   14000f64c:	add    BYTE PTR [rax],al
   14000f64e:	add    BYTE PTR [rax],al
   14000f650:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f651:	push   rdi
   14000f652:	add    BYTE PTR [rax],al
   14000f654:	(bad)  
   14000f655:	(bad)  
   14000f656:	(bad)  
   14000f657:	push   QWORD PTR [rbx-0x41]
   14000f65a:	add    BYTE PTR [rax],al
   14000f65c:	add    BYTE PTR [rax],al
   14000f65e:	add    BYTE PTR [rax],al
   14000f660:	cmp    BYTE PTR [rdi+0x50000],0x0
   14000f667:	add    BYTE PTR [rdi+0xbf],al
   14000f66d:	add    BYTE PTR [rax],al
   14000f66f:	add    BYTE PTR [rcx],bl
   14000f671:	or     al,BYTE PTR [rdx]
   14000f673:	add    BYTE PTR [rdx],cl
   14000f675:	xor    al,BYTE PTR [rsi]
   14000f677:	push   rax
   14000f678:	sbb    al,0xbc
   14000f67a:	add    BYTE PTR [rax],al
   14000f67c:	adc    al,ch
   14000f67e:	add    BYTE PTR [rax],al
   14000f680:	sbb    DWORD PTR [rbx],ebx
   14000f682:	add    al,BYTE PTR [rax]
   14000f684:	or     eax,0x685006b2
   14000f689:	mov    ebx,0x500000
   14000f68e:	add    BYTE PTR [rax],al
   14000f690:	sbb    DWORD PTR [rdx],ebx
   14000f692:	add    DWORD PTR [rax],eax
   14000f694:	or     eax,DWORD PTR [rdx-0x44980000]
   14000f69a:	add    BYTE PTR [rax],al
   14000f69c:	xor    BYTE PTR [rax],al
   14000f69e:	add    BYTE PTR [rax],al
   14000f6a0:	sbb    DWORD PTR [rbx],ebp
   14000f6a2:	or     BYTE PTR [rax],al
   14000f6a4:	and    al,BYTE PTR [rcx]
   14000f6a6:	adc    eax,DWORD PTR [rax]
   14000f6a8:	sbb    esi,eax
   14000f6aa:	sbb    eax,edx
   14000f6ac:	(bad)  
   14000f6ad:	rcl    BYTE PTR [rip+0x13601470],0x30        # 0x153610b24
   14000f6b4:	sbb    al,0xbc
   14000f6b6:	add    BYTE PTR [rax],al
   14000f6b8:	call   0x13f00f7a4
   14000f6bd:	(bad)  
   14000f6be:	(bad)  
   14000f6bf:	call   FWORD PTR [rbx+0xbf]
   14000f6c5:	add    BYTE PTR [rax],al
   14000f6c7:	add    BYTE PTR [rax],al
   14000f6c9:	add    BYTE PTR [rax],al
   14000f6cb:	add    BYTE PTR [rcx],al
   14000f6cd:	add    BYTE PTR [rax],al
   14000f6cf:	add    BYTE PTR [rdi+0x10000bf],ah
   14000f6d5:	add    BYTE PTR [rax],al
   14000f6d7:	add    BYTE PTR [rbx+0xbf],dh
	...
   14000f6e5:	add    BYTE PTR [rax],al
   14000f6e7:	add    ah,ah
   14000f6e9:	mov    edi,0xffff0000
   14000f6ee:	(bad)  
   14000f6ef:	push   rax
   14000f6f1:	mov    edi,0x10000
   14000f6f6:	add    BYTE PTR [rax],al
   14000f6f8:	add    eax,DWORD PTR [rax]
   14000f6fa:	add    BYTE PTR [rax],al
   14000f6fc:	add    al,0x0
   14000f6fe:	add    BYTE PTR [rax],al
   14000f700:	add    DWORD PTR [rax],eax
   14000f702:	add    BYTE PTR [rax],al
   14000f704:	or     bh,dh
   14000f706:	add    BYTE PTR [rax],al
   14000f708:	or     BYTE PTR [rax],al
   14000f70a:	add    BYTE PTR [rax],al
   14000f70c:	mov    BYTE PTR [rbx],ah
   14000f70e:	add    DWORD PTR [rax],eax
   14000f710:	add    BYTE PTR [rax],al
   14000f712:	add    BYTE PTR [rax],al
   14000f714:	mov    edi,0x480000bf
   14000f719:	add    BYTE PTR [rax],al
   14000f71b:	add    BYTE PTR [rax],al
   14000f71d:	add    BYTE PTR [rax],al
   14000f71f:	add    al,al
   14000f721:	pop    rbp
   14000f722:	add    BYTE PTR [rax],al
   14000f724:	(bad)  
   14000f725:	(bad)  
   14000f726:	(bad)  
   14000f727:	call   FWORD PTR [rsi+rbx*2]
   14000f72a:	add    BYTE PTR [rax],al
   14000f72c:	add    DWORD PTR [rax],eax
   14000f72e:	add    BYTE PTR [rax],al
   14000f730:	push   rdx
   14000f731:	pop    rsi
   14000f732:	add    BYTE PTR [rax],al
   14000f734:	add    al,BYTE PTR [rax]
   14000f736:	add    BYTE PTR [rax],al
   14000f738:	(bad)
   14000f73b:	add    BYTE PTR [rbx],al
   14000f73d:	add    BYTE PTR [rax],al
   14000f73f:	add    bl,bl
   14000f741:	pop    rsi
   14000f742:	add    BYTE PTR [rax],al
   14000f744:	add    DWORD PTR [rax],eax
   14000f746:	add    BYTE PTR [rax],al
   14000f748:	(bad)  
   14000f749:	pop    rsi
   14000f74a:	add    BYTE PTR [rax],al
   14000f74c:	add    BYTE PTR [rax],al
   14000f74e:	add    BYTE PTR [rax],al
   14000f750:	sub    BYTE PTR [rdi+0x0],bl
   14000f753:	add    BYTE PTR [rip+0xfffffffff1000000],al        # 0x13100f759
   14000f759:	pop    rdi
   14000f75a:	add    BYTE PTR [rax],al
   14000f75c:	add    BYTE PTR [rax],al
   14000f75e:	add    BYTE PTR [rax],al
   14000f760:	and    al,0x60
   14000f762:	add    BYTE PTR [rax],al
   14000f764:	(bad)  
   14000f765:	add    BYTE PTR [rax],al
   14000f767:	add    BYTE PTR [rdx+0x60],al
   14000f76a:	add    BYTE PTR [rax],al
   14000f76c:	(bad)  
   14000f76d:	(bad)  
   14000f76e:	(bad)  
   14000f76f:	(bad)  
   14000f770:	mov    edi,0xbf
   14000f775:	add    BYTE PTR [rax],al
   14000f777:	add    ah,cl
   14000f779:	mov    edi,0x40000
   14000f77e:	add    BYTE PTR [rax],al
   14000f780:	(bad)  
   14000f781:	mov    edi,0x0
   14000f786:	add    BYTE PTR [rax],al
   14000f788:	sbb    DWORD PTR [rdx],ecx
   14000f78a:	add    al,BYTE PTR [rax]
   14000f78c:	or     dl,BYTE PTR [rdx+0x6]
   14000f78f:	push   rax
   14000f790:	sbb    al,0xbc
   14000f792:	add    BYTE PTR [rax],al
   14000f794:	call   0x15100f880
   14000f799:	adc    eax,DWORD PTR [rdx]
   14000f79b:	add    BYTE PTR [rdx],cl
   14000f79d:	push   rdx
   14000f79e:	(bad)  
   14000f79f:	xor    BYTE PTR [rsp+rdi*4],bl
   14000f7a2:	add    BYTE PTR [rax],al
   14000f7a4:	shl    bh,0x0
   14000f7a7:	add    bh,bh
   14000f7a9:	(bad)  
   14000f7aa:	(bad)  
   14000f7ab:	inc    DWORD PTR [rdx]
   14000f7ad:	rol    BYTE PTR [rax],0x0
   14000f7b0:	push   0xffffffffff000060
   14000f7b5:	(bad)  
   14000f7b6:	(bad)  
   14000f7b7:	(bad)  
   14000f7b8:	jle    0x14000f81a
   14000f7ba:	add    BYTE PTR [rax],al
   14000f7bc:	add    BYTE PTR [rax],al
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	xchg   ebx,eax
   14000f7c1:	(bad)  
   14000f7c2:	add    BYTE PTR [rax],al
   14000f7c4:	(bad)  
   14000f7c5:	(bad)  
   14000f7c6:	(bad)  
   14000f7c7:	inc    DWORD PTR [rcx]
   14000f7c9:	sbb    DWORD PTR [rdx],ecx
   14000f7cb:	add    BYTE PTR [rcx],bl
   14000f7cd:	je     0x14000f7da
   14000f7cf:	add    BYTE PTR [rcx],bl
   14000f7d1:	or     al,BYTE PTR fs:[rax]
   14000f7d4:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14000f7d8:	sbb    DWORD PTR [rax+rcx*1],esi
   14000f7db:	add    BYTE PTR [rcx],bl
   14000f7dd:	push   rdx
   14000f7de:	adc    eax,0x40a01e0
   14000f7e3:	add    BYTE PTR [rdx],cl
   14000f7e5:	xor    al,0xa
   14000f7e7:	add    BYTE PTR [rdx],cl
   14000f7e9:	jb     0x14000f7f1
   14000f7eb:	jo     0x14000f806
   14000f7ed:	and    BYTE PTR [rax],cl
   14000f7ef:	add    BYTE PTR [rax],ah
   14000f7f1:	fs or  eax,0xc341c00
   14000f7f7:	add    BYTE PTR [rax],dl
   14000f7f9:	push   rdx
   14000f7fa:	or     al,0xf0
   14000f7fc:	or     ah,al
   14000f7fe:	or     BYTE PTR [rax+0x1c],dh
   14000f801:	mov    esp,0xe7980000
   14000f806:	add    BYTE PTR [rax],al
   14000f808:	(bad)  
   14000f809:	(bad)  
   14000f80a:	(bad)  
   14000f80b:	inc    DWORD PTR [rax]
   14000f80d:	add    BYTE PTR [rax],al
   14000f80f:	add    bh,bh
   14000f811:	(bad)  
   14000f812:	(bad)  
   14000f813:	inc    DWORD PTR [rax]
	...
   14000f81d:	add    BYTE PTR [rax],al
   14000f81f:	add    BYTE PTR [rcx],al
   14000f821:	add    BYTE PTR [rax],al
   14000f823:	add    BYTE PTR [rcx],al
   14000f825:	add    BYTE PTR [rax],al
   14000f827:	add    BYTE PTR [rax+rdi*8],ch
   14000f82a:	add    BYTE PTR [rax],al
   14000f82c:	or     BYTE PTR [rax],al
   14000f82e:	add    BYTE PTR [rax],al
   14000f830:	mov    BYTE PTR [rbx],ah
   14000f832:	add    DWORD PTR [rax],eax
   14000f834:	add    BYTE PTR [rax],al
   14000f836:	add    BYTE PTR [rax],al
   14000f838:	adc    al,0xc0
   14000f83a:	add    BYTE PTR [rax],al
   14000f83c:	cmp    BYTE PTR [rax],al
   14000f83e:	add    BYTE PTR [rax],al
   14000f840:	fsub   DWORD PTR [rcx+0x0]
   14000f843:	add    bh,bh
   14000f845:	(bad)  
   14000f846:	(bad)  
   14000f847:	inc    DWORD PTR [rax]
   14000f849:	(bad)  
   14000f84a:	add    BYTE PTR [rax],al
   14000f84c:	add    BYTE PTR [rax],al
   14000f84e:	add    BYTE PTR [rax],al
   14000f850:	xchg   ecx,eax
   14000f851:	(bad)  
   14000f852:	add    BYTE PTR [rax],al
   14000f854:	(bad)  
   14000f855:	(bad)  
   14000f856:	(bad)  
   14000f857:	call   QWORD PTR [rax+rax*8]
   14000f85a:	add    BYTE PTR [rax],al
   14000f85c:	add    BYTE PTR [rax],al
   14000f85e:	add    BYTE PTR [rax],al
   14000f860:	and    eax,eax
   14000f862:	add    BYTE PTR [rax],al
   14000f864:	add    DWORD PTR [rax],eax
   14000f866:	add    BYTE PTR [rax],al
   14000f868:	sub    al,al
   14000f86a:	add    BYTE PTR [rax],al
   14000f86c:	add    BYTE PTR [rax],al
   14000f86e:	add    BYTE PTR [rax],al
   14000f870:	sbb    DWORD PTR [rdx],ecx
   14000f872:	add    al,BYTE PTR [rax]
   14000f874:	or     dh,BYTE PTR [rdx]
   14000f876:	(bad)  
   14000f877:	push   rax
   14000f878:	sbb    al,0xbc
   14000f87a:	add    BYTE PTR [rax],al
   14000f87c:	cwde   
   14000f87d:	out    0x0,eax
   14000f87f:	add    BYTE PTR [rcx],al
   14000f881:	sbb    BYTE PTR [rdx],cl
   14000f883:	add    BYTE PTR [rax],bl
   14000f885:	or     al,BYTE PTR fs:[rax]
   14000f888:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000f88c:	sbb    BYTE PTR [rax+rcx*1],dh
   14000f88f:	add    BYTE PTR [rax],bl
   14000f891:	xor    dl,BYTE PTR [rax+rsi*8]
   14000f894:	adc    ah,al
   14000f896:	adc    BYTE PTR [rax+0x1],dh
   14000f899:	sbb    BYTE PTR [rsi],al
   14000f89b:	add    BYTE PTR [rax],bl
   14000f89d:	or     DWORD PTR fs:[rax],eax
   14000f8a0:	sbb    BYTE PTR [rdx],dh
   14000f8a2:	adc    al,0xf0
   14000f8a4:	adc    ah,al
   14000f8a6:	adc    BYTE PTR [rax+0x19],dh
   14000f8a9:	and    al,BYTE PTR [rsi]
   14000f8ab:	add    BYTE PTR [rdx],bl
   14000f8ad:	mov    dl,0x16
   14000f8af:	lock adc al,0xe0
   14000f8b2:	adc    dh,BYTE PTR [rax+0x11]
   14000f8b5:	(bad)  
   14000f8b6:	adc    BYTE PTR [rax],dh
   14000f8b8:	sbb    al,0xbc
   14000f8ba:	add    BYTE PTR [rax],al
   14000f8bc:	jo     0x14000f8a5
   14000f8be:	add    BYTE PTR [rax],al
   14000f8c0:	(bad)  
   14000f8c1:	(bad)  
   14000f8c2:	(bad)  
   14000f8c3:	inc    DWORD PTR [rax]
   14000f8c5:	add    BYTE PTR [rax],al
   14000f8c7:	add    bh,bh
   14000f8c9:	(bad)  
   14000f8ca:	(bad)  
   14000f8cb:	inc    DWORD PTR [rax]
   14000f8cd:	add    BYTE PTR [rax],al
   14000f8cf:	add    BYTE PTR [rcx],al
   14000f8d1:	add    BYTE PTR [rax],al
   14000f8d3:	add    BYTE PTR [rax],al
   14000f8d5:	add    BYTE PTR [rax],al
   14000f8d7:	add    BYTE PTR [rcx],al
	...
   14000f8e5:	add    BYTE PTR [rax],al
   14000f8e7:	add    BYTE PTR [rbx],al
   14000f8e9:	add    BYTE PTR [rax],al
   14000f8eb:	add    BYTE PTR [rcx],al
   14000f8ed:	add    BYTE PTR [rax],al
   14000f8ef:	add    BYTE PTR [rax],cl
   14000f8f1:	stc    
   14000f8f2:	add    BYTE PTR [rax],al
   14000f8f4:	add    al,BYTE PTR [rax]
   14000f8f6:	add    BYTE PTR [rax],al
   14000f8f8:	add    al,BYTE PTR [rax]
   14000f8fa:	add    BYTE PTR [rax],al
   14000f8fc:	add    eax,DWORD PTR [rax]
   14000f8fe:	add    BYTE PTR [rax],al
   14000f900:	add    DWORD PTR [rax],eax
   14000f902:	add    BYTE PTR [rax],al
   14000f904:	sbb    al,0xf9
   14000f906:	add    BYTE PTR [rax],al
   14000f908:	add    BYTE PTR [rax],al
	...
   14000f913:	add    BYTE PTR [rax+rax*8],bh
   14000f916:	add    BYTE PTR [rax],al
   14000f918:	cmp    BYTE PTR [rax],al
   14000f91a:	add    BYTE PTR [rax],al
   14000f91c:	add    BYTE PTR [rax],al
	...
   14000f927:	add    BYTE PTR [rcx+0x380000c0],ch
   14000f92d:	add    BYTE PTR [rax],al
   14000f92f:	add    BYTE PTR [rax+rbp*2],al
   14000f932:	add    BYTE PTR [rax],al
   14000f934:	(bad)  
   14000f935:	(bad)  
   14000f936:	(bad)  
   14000f937:	(bad)  
   14000f938:	js     0x14000f9a2
   14000f93a:	add    BYTE PTR [rax],al
   14000f93c:	add    BYTE PTR [rax],al
   14000f93e:	add    BYTE PTR [rax],al
   14000f940:	shr    DWORD PTR [rax+0x0],0x0
   14000f944:	(bad)  
   14000f945:	(bad)  
   14000f946:	(bad)  
   14000f947:	(bad)  
   14000f948:	cmp    al,0xc0
   14000f94a:	add    BYTE PTR [rax],al
   14000f94c:	add    BYTE PTR [rax],al
   14000f94e:	add    BYTE PTR [rax],al
   14000f950:	rex.WB rol BYTE PTR [r8],0x0
   14000f954:	add    DWORD PTR [rax],eax
   14000f956:	add    BYTE PTR [rax],al
   14000f958:	push   rdi
   14000f959:	rol    BYTE PTR [rax],0x0
   14000f95c:	add    al,BYTE PTR [rax]
   14000f95e:	add    BYTE PTR [rax],al
   14000f960:	fwait
   14000f961:	rol    BYTE PTR [rax],0x0
   14000f964:	add    BYTE PTR [rax],al
   14000f966:	add    BYTE PTR [rax],al
   14000f968:	mov    dh,0xc0
   14000f96a:	add    BYTE PTR [rax],al
   14000f96c:	add    eax,DWORD PTR [rax]
   14000f96e:	add    BYTE PTR [rax],al
   14000f970:	sbb    DWORD PTR [rdx],ecx
   14000f972:	add    al,BYTE PTR [rax]
   14000f974:	or     dh,BYTE PTR [rdx]
   14000f976:	(bad)  
   14000f977:	push   rax
   14000f978:	sbb    al,0xbc
   14000f97a:	add    BYTE PTR [rax],al
   14000f97c:	jo     0x14000f965
   14000f97e:	add    BYTE PTR [rax],al
   14000f980:	add    DWORD PTR [rax],ebx
   14000f982:	or     BYTE PTR [rax],al
   14000f984:	sbb    BYTE PTR [rcx+rcx*1+0x0],ah
   14000f988:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   14000f98c:	sbb    BYTE PTR [rsi+rax*1],dh
   14000f98f:	add    BYTE PTR [rax],bl
   14000f991:	xor    dl,BYTE PTR [rax+rsi*2]
   14000f994:	sbb    DWORD PTR [rsi],ebx
   14000f996:	add    al,0x0
   14000f998:	(bad)  
   14000f999:	push   rdx
   14000f99a:	adc    dh,BYTE PTR [rax+0x11]
   14000f99d:	(bad)  
   14000f99e:	adc    BYTE PTR [rax],dh
   14000f9a0:	sbb    al,0xbc
   14000f9a2:	add    BYTE PTR [rax],al
   14000f9a4:	rex.W out 0x0,eax
	...
   14000f9af:	add    BYTE PTR [rcx],al
   14000f9b1:	add    BYTE PTR [rax],al
   14000f9b3:	add    BYTE PTR [rcx],al
   14000f9b5:	add    BYTE PTR [rax],al
   14000f9b7:	add    BYTE PTR [rcx+rdi*8+0x400000],bh
	...
   14000f9c6:	add    BYTE PTR [rax],al
   14000f9c8:	xlat   BYTE PTR ds:[rbx]
   14000f9c9:	rol    BYTE PTR [rax],0x0
   14000f9cc:	cmp    BYTE PTR [rax],al
   14000f9ce:	add    BYTE PTR [rax],al
   14000f9d0:	or     BYTE PTR [rsi+0x0],ch
   14000f9d3:	add    bh,bh
   14000f9d5:	(bad)  
   14000f9d6:	(bad)  
   14000f9d7:	jmp    QWORD PTR [rax+0x6e]
   14000f9da:	add    BYTE PTR [rax],al
   14000f9dc:	add    BYTE PTR [rax],al
   14000f9de:	add    BYTE PTR [rax],al
   14000f9e0:	mov    DWORD PTR [rsi+0x0],ebp
   14000f9e3:	add    bh,bh
   14000f9e5:	(bad)  
   14000f9e6:	(bad)  
   14000f9e7:	call   rdi
   14000f9e9:	rol    BYTE PTR [rax],0x0
   14000f9ec:	add    BYTE PTR [rax],al
   14000f9ee:	add    BYTE PTR [rax],al
   14000f9f0:	in     al,0xc0
   14000f9f2:	add    BYTE PTR [rax],al
   14000f9f4:	add    DWORD PTR [rax],eax
   14000f9f6:	add    BYTE PTR [rax],al
   14000f9f8:	sbb    DWORD PTR [rdx],ecx
   14000f9fa:	add    al,BYTE PTR [rax]
   14000f9fc:	or     dh,BYTE PTR [rdx]
   14000f9fe:	(bad)  
   14000f9ff:	push   rax
   14000fa00:	sbb    al,0xbc
   14000fa02:	add    BYTE PTR [rax],al
   14000fa04:	rex.W out 0x0,eax
   14000fa07:	add    BYTE PTR [rcx],dl
   14000fa09:	and    BYTE PTR [rax],cl
   14000fa0b:	add    BYTE PTR [rax],ah
   14000fa0d:	or     eax,DWORD PTR fs:[rax]
   14000fa10:	sbb    al,0x54
   14000fa12:	or     al,BYTE PTR [rax]
   14000fa14:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000fa17:	add    BYTE PTR [rdx+rdx*2],cl
   14000fa1a:	or     BYTE PTR [rax+0x1c],dh
   14000fa1d:	mov    esp,0xe7200000
   14000fa22:	add    BYTE PTR [rax],al
   14000fa24:	(bad)  
   14000fa25:	(bad)  
   14000fa26:	(bad)  
   14000fa27:	inc    DWORD PTR [rcx]
   14000fa29:	rol    DWORD PTR [rax],0x0
   14000fa2c:	add    BYTE PTR [rax],al
   14000fa2e:	add    BYTE PTR [rax],al
   14000fa30:	or     BYTE PTR [rdi+0x0],ch
   14000fa33:	add    bh,bh
   14000fa35:	(bad)  
   14000fa36:	(bad)  
   14000fa37:	jmp    FWORD PTR [rsi]
   14000fa39:	outs   dx,DWORD PTR ds:[rsi]
   14000fa3a:	add    BYTE PTR [rax],al
   14000fa3c:	add    BYTE PTR [rax],al
   14000fa3e:	add    BYTE PTR [rax],al
   14000fa40:	add    DWORD PTR [rdx],ecx
   14000fa42:	add    al,0x0
   14000fa44:	or     dh,BYTE PTR [rax+rcx*1]
   14000fa47:	add    BYTE PTR [rdx],cl
   14000fa49:	push   rdx
   14000fa4a:	(bad)  
   14000fa4b:	jo     0x14000fa4e
   14000fa4d:	sbb    al,0xc
   14000fa4f:	add    BYTE PTR [rsp+riz*2],bl
   14000fa52:	or     al,0x0
   14000fa54:	sbb    al,0x54
   14000fa56:	or     eax,DWORD PTR [rax]
   14000fa58:	sbb    al,0x34
   14000fa5a:	or     al,BYTE PTR [rax]
   14000fa5c:	sbb    al,0x32
   14000fa5e:	sbb    al,dh
   14000fa60:	(bad)  
   14000fa61:	loopne 0x14000fa77
   14000fa63:	rcl    BYTE PTR [rdx],1
   14000fa65:	rcl    BYTE PTR [rax],0x70
   14000fa68:	add    DWORD PTR [rdx],edx
   14000fa6a:	or     BYTE PTR [rax],al
   14000fa6c:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   14000fa70:	adc    dh,BYTE PTR [rax+rcx*1]
   14000fa73:	add    BYTE PTR [rdx],dl
   14000fa75:	xor    cl,BYTE PTR [rsi]
   14000fa77:	loopne 0x14000fa85
   14000fa79:	jo     0x14000fa86
   14000fa7b:	(bad)  
   14000fa7c:	sbb    DWORD PTR [rdi],edx
   14000fa7e:	(bad)  
   14000fa7f:	add    BYTE PTR [rdi],dl
   14000fa81:	xor    al,0xe
   14000fa83:	add    BYTE PTR [rcx],cl
   14000fa85:	xchg   edx,eax
   14000fa86:	add    eax,0x27003e0
   14000fa8b:	(bad)  
   14000fa8c:	sbb    al,0xbc
   14000fa8e:	add    BYTE PTR [rax],al
   14000fa90:	clc    
   14000fa91:	out    0x0,al
   14000fa93:	add    bh,bh
   14000fa95:	(bad)  
   14000fa96:	(bad)  
   14000fa97:	inc    DWORD PTR [rax]
   14000fa99:	add    BYTE PTR [rax],al
   14000fa9b:	add    BYTE PTR [rax],al
   14000fa9d:	add    BYTE PTR [rax],al
   14000fa9f:	add    BYTE PTR [rip+0x10000c1],ch        # 0x14100fb66
   14000faa5:	add    BYTE PTR [rax],al
   14000faa7:	add    BYTE PTR [rcx+rax*8+0x0],cl
   14000faab:	add    bh,bh
   14000faad:	(bad)  
   14000faae:	(bad)  
   14000faaf:	inc    DWORD PTR [rax]
   14000fab1:	add    BYTE PTR [rax],al
   14000fab3:	add    BYTE PTR [rax],al
   14000fab5:	add    BYTE PTR [rax],al
   14000fab7:	add    BYTE PTR [rdx],al
   14000fab9:	add    BYTE PTR [rax],al
   14000fabb:	add    BYTE PTR [rbx],al
   14000fabd:	add    BYTE PTR [rax],al
   14000fabf:	add    BYTE PTR [rcx],al
   14000fac1:	add    BYTE PTR [rax],al
   14000fac3:	add    al,cl
   14000fac5:	cli    
   14000fac6:	add    BYTE PTR [rax],al
   14000fac8:	add    BYTE PTR [rax],al
	...
   14000fad3:	add    BYTE PTR [rax-0x3f],bl
   14000fad6:	add    BYTE PTR [rax],al
   14000fad8:	cmp    BYTE PTR [rax],al
   14000fada:	add    BYTE PTR [rax],al
   14000fadc:	add    BYTE PTR [rax],al
   14000fade:	add    BYTE PTR [rax],al
   14000fae0:	push   rsp
   14000fae1:	jae    0x14000fae3
   14000fae3:	add    bh,bh
   14000fae5:	(bad)  
   14000fae6:	(bad)  
   14000fae7:	jmp    FWORD PTR [rdx+0x73]
   14000faed:	add    BYTE PTR [rax],al
   14000faef:	add    BYTE PTR [rbx+0x1000073],bh
   14000faf5:	add    BYTE PTR [rax],al
   14000faf7:	add    bl,ah
   14000faf9:	jae    0x14000fafb
   14000fafb:	add    BYTE PTR [rdx],al
   14000fafd:	add    BYTE PTR [rax],al
   14000faff:	add    BYTE PTR [rax],cl
   14000fb01:	je     0x14000fb03
   14000fb03:	add    bh,bh
   14000fb05:	(bad)  
   14000fb06:	(bad)  
   14000fb07:	call   FWORD PTR [rax-0x3f]
   14000fb0a:	add    BYTE PTR [rax],al
   14000fb0c:	add    BYTE PTR [rax],al
   14000fb0e:	add    BYTE PTR [rax],al
   14000fb10:	rol    DWORD PTR gs:[rax],0x0
   14000fb14:	add    eax,DWORD PTR [rax]
   14000fb16:	add    BYTE PTR [rax],al
   14000fb18:	sbb    DWORD PTR [rdx],ecx
   14000fb1a:	add    al,BYTE PTR [rax]
   14000fb1c:	or     dh,BYTE PTR [rdx]
   14000fb1e:	(bad)  
   14000fb1f:	push   rax
   14000fb20:	sbb    al,0xbc
   14000fb22:	add    BYTE PTR [rax],al
   14000fb24:	clc    
   14000fb25:	out    0x0,al
   14000fb27:	add    BYTE PTR [rcx],dl
   14000fb29:	adc    eax,DWORD PTR [rdx]
   14000fb2b:	add    BYTE PTR [rdx],cl
   14000fb2d:	push   rdx
   14000fb2e:	(bad)  
   14000fb2f:	xor    BYTE PTR [rsp+rdi*4],bl
   14000fb32:	add    BYTE PTR [rax],al
   14000fb34:	shl    dh,1
   14000fb36:	add    BYTE PTR [rax],al
   14000fb38:	push   0xffffffffff000074
   14000fb3d:	(bad)  
   14000fb3e:	(bad)  
   14000fb3f:	call   FWORD PTR [rbx+0x74]
   14000fb45:	add    BYTE PTR [rax],al
   14000fb47:	add    BYTE PTR [rbx-0xffff8c],dh
   14000fb4d:	(bad)  
   14000fb4e:	(bad)  
   14000fb4f:	inc    DWORD PTR [rcx]
   14000fb51:	(bad)  
   14000fb52:	or     BYTE PTR [rax],al
   14000fb54:	(bad)  
   14000fb55:	push   rsp
   14000fb56:	or     eax,0xc341700
   14000fb5b:	add    BYTE PTR [rdi],dl
   14000fb5d:	jb     0x14000fb72
   14000fb5f:	loopne 0x14000fb72
   14000fb61:	jo     0x14000fb73
   14000fb63:	(bad)  
   14000fb64:	adc    DWORD PTR [rsi+rax*1],ebx
   14000fb67:	add    BYTE PTR [rsp+riz*2],bl
   14000fb6a:	or     eax,DWORD PTR [rax]
   14000fb6c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14000fb6f:	add    BYTE PTR [rdx+rdx*2],cl
   14000fb72:	or     BYTE PTR [rax+0x1c],dh
   14000fb75:	mov    esp,0xe6a80000
   14000fb7a:	add    BYTE PTR [rax],al
   14000fb7c:	(bad)  
   14000fb7d:	(bad)  
   14000fb7e:	(bad)  
   14000fb7f:	inc    DWORD PTR [rcx-0xffff3f]
   14000fb85:	(bad)  
   14000fb86:	(bad)  
   14000fb87:	dec    DWORD PTR [rbp+0xc1]
   14000fb8d:	add    BYTE PTR [rax],al
   14000fb8f:	add    al,ah
   14000fb91:	ja     0x14000fb93
   14000fb93:	add    bh,bh
   14000fb95:	(bad)  
   14000fb96:	(bad)  
   14000fb97:	dec    DWORD PTR [rcx]
   14000fb99:	js     0x14000fb9b
   14000fb9b:	add    BYTE PTR [rax],al
   14000fb9d:	add    BYTE PTR [rax],al
   14000fb9f:	add    BYTE PTR [rip+0xffffffffff000078],ch        # 0x13f00fc1d
   14000fba5:	(bad)  
   14000fba6:	(bad)  
   14000fba7:	dec    DWORD PTR [rdx+0x78]
   14000fbaa:	add    BYTE PTR [rax],al
   14000fbac:	add    DWORD PTR [rax],eax
   14000fbae:	add    BYTE PTR [rax],al
   14000fbb0:	(bad)  
   14000fbb1:	js     0x14000fbb3
   14000fbb3:	add    bh,bh
   14000fbb5:	(bad)  
   14000fbb6:	(bad)  
   14000fbb7:	inc    DWORD PTR [rcx]
   14000fbb9:	adc    cl,BYTE PTR [rax]
   14000fbbb:	add    BYTE PTR [rdx],dl
   14000fbbd:	push   rsp
   14000fbbe:	or     al,0x0
   14000fbc0:	adc    dh,BYTE PTR [rbx+rcx*1]
   14000fbc3:	add    BYTE PTR [rdx],dl
   14000fbc5:	push   rdx
   14000fbc6:	(bad)  
   14000fbc7:	loopne 0x14000fbd5
   14000fbc9:	jo     0x14000fbd6
   14000fbcb:	(bad)  
   14000fbcc:	sbb    DWORD PTR [rbx],ebx
   14000fbce:	(bad)  
   14000fbcf:	add    BYTE PTR [rdx],dl
   14000fbd1:	(bad)  
   14000fbd2:	(bad)  
   14000fbd3:	lock or al,0xe0
   14000fbd6:	or     al,al
   14000fbd8:	or     BYTE PTR [rax+0x7],dh
   14000fbdb:	(bad)  
   14000fbdc:	(bad)  
   14000fbdd:	xor    BYTE PTR [rax],al
   14000fbdf:	add    BYTE PTR [rsp+rdi*4],bl
   14000fbe2:	add    BYTE PTR [rax],al
   14000fbe4:	and    dh,0x0
   14000fbe7:	add    bh,bh
   14000fbe9:	(bad)  
   14000fbea:	(bad)  
   14000fbeb:	inc    DWORD PTR [rax]
   14000fbed:	add    BYTE PTR [rax],al
   14000fbef:	add    BYTE PTR [rax],al
   14000fbf1:	add    BYTE PTR [rax],al
   14000fbf3:	add    BYTE PTR [rdi+0x10000c1],bl
   14000fbf9:	add    BYTE PTR [rax],al
   14000fbfb:	add    BYTE PTR [rbp-0xffff3f],ch
   14000fc01:	(bad)  
   14000fc02:	(bad)  
   14000fc03:	inc    DWORD PTR [rax]
   14000fc05:	add    BYTE PTR [rax],al
   14000fc07:	add    BYTE PTR [rax],al
   14000fc09:	add    BYTE PTR [rax],al
   14000fc0b:	add    BYTE PTR [rdx],al
   14000fc0d:	add    BYTE PTR [rax],al
   14000fc0f:	add    BYTE PTR [rbx],al
   14000fc11:	add    BYTE PTR [rax],al
   14000fc13:	add    BYTE PTR [rcx],al
   14000fc15:	add    BYTE PTR [rax],al
   14000fc17:	add    BYTE PTR [rsp+rdi*8],bl
   14000fc1a:	add    BYTE PTR [rax],al
   14000fc1c:	add    BYTE PTR [rax],al
	...
   14000fc27:	add    BYTE PTR [rcx+0x380000c1],bh
   14000fc2d:	add    BYTE PTR [rax],al
   14000fc2f:	add    BYTE PTR [rax-0xffff82],dh
   14000fc35:	(bad)  
   14000fc36:	(bad)  
   14000fc37:	push   rbp
   14000fc39:	jle    0x14000fc3b
   14000fc3b:	add    BYTE PTR [rax],al
   14000fc3d:	add    BYTE PTR [rax],al
   14000fc3f:	add    BYTE PTR [rdx],cl
   14000fc41:	jg     0x14000fc43
   14000fc43:	add    BYTE PTR [rcx],al
   14000fc45:	add    BYTE PTR [rax],al
   14000fc47:	add    BYTE PTR [rbx],dh
   14000fc49:	jg     0x14000fc4b
   14000fc4b:	add    BYTE PTR [rdx],al
   14000fc4d:	add    BYTE PTR [rax],al
   14000fc4f:	add    BYTE PTR [rdx+0x7f],bl
   14000fc52:	add    BYTE PTR [rax],al
   14000fc54:	add    DWORD PTR [rax],eax
   14000fc56:	add    BYTE PTR [rax],al
   14000fc58:	pop    rdi
   14000fc59:	jg     0x14000fc5b
   14000fc5b:	add    BYTE PTR [rax],al
   14000fc5d:	add    BYTE PTR [rax],al
   14000fc5f:	add    BYTE PTR [rdi+0x7f],ah
   14000fc62:	add    BYTE PTR [rax],al
   14000fc64:	(bad)  
   14000fc65:	(bad)  
   14000fc66:	(bad)  
   14000fc67:	(bad)  
   14000fc68:	mov    ecx,0xc1
   14000fc6d:	add    BYTE PTR [rax],al
   14000fc6f:	add    BYTE PTR [rcx],bl
   14000fc71:	or     al,BYTE PTR [rdx]
   14000fc73:	add    BYTE PTR [rdx],cl
   14000fc75:	xor    al,BYTE PTR [rsi]
   14000fc77:	push   rax
   14000fc78:	sbb    al,0xbc
   14000fc7a:	add    BYTE PTR [rax],al
   14000fc7c:	and    dh,0x0
   14000fc7f:	add    BYTE PTR [rcx],al
   14000fc81:	(bad)  
   14000fc82:	add    al,BYTE PTR [rax]
   14000fc84:	(bad)  
   14000fc85:	jb     0x14000fc89
   14000fc87:	xor    BYTE PTR [rcx],dl
   14000fc89:	sbb    al,BYTE PTR [rsi]
   14000fc8b:	add    BYTE PTR [rdx],bl
   14000fc8d:	xor    al,0x10
   14000fc8f:	add    BYTE PTR [rsi],cl
   14000fc91:	xchg   edx,eax
   14000fc92:	or     dh,BYTE PTR [rax+0x9]
   14000fc95:	(bad)  
   14000fc96:	or     BYTE PTR [rax+0x1c],dl
   14000fc99:	mov    esp,0xe6580000
   14000fc9e:	add    BYTE PTR [rax],al
   14000fca0:	(bad)  
   14000fca1:	(bad)  
   14000fca2:	(bad)  
   14000fca3:	jmp    rsi
   14000fca5:	rol    DWORD PTR [rax],0x0
   14000fca8:	add    BYTE PTR [rax],al
   14000fcaa:	add    BYTE PTR [rax],al
   14000fcac:	fcmovb st,st(1)
   14000fcae:	add    BYTE PTR [rax],al
   14000fcb0:	add    BYTE PTR [rax],al
   14000fcb2:	add    BYTE PTR [rax],al
   14000fcb4:	or     al,0xc2
   14000fcb6:	add    BYTE PTR [rax],al
   14000fcb8:	loopne 0x14000fc3a
   14000fcba:	add    BYTE PTR [rax],al
   14000fcbc:	(bad)  
   14000fcbd:	(bad)  
   14000fcbe:	(bad)  
   14000fcbf:	jmp    QWORD PTR [rcx]
   14000fcc1:	add    DWORD PTR [rax],0x100
   14000fcc7:	add    BYTE PTR [rcx+rax*4],dh
   14000fcca:	add    BYTE PTR [rax],al
   14000fccc:	add    al,BYTE PTR [rax]
   14000fcce:	add    BYTE PTR [rax],al
   14000fcd0:	rex.WRXB add QWORD PTR [r8],0x0
   14000fcd7:	add    BYTE PTR [rcx],dl
   14000fcd9:	sbb    al,0x6
   14000fcdb:	add    BYTE PTR [rsp+riz*2],bl
   14000fcde:	or     al,0x0
   14000fce0:	sbb    BYTE PTR [rbx+rcx*1],dh
   14000fce3:	add    BYTE PTR [rdx+rsi*2],cl
   14000fce6:	or     BYTE PTR [rax+0x1c],dh
   14000fce9:	mov    esp,0xe6300000
   14000fcee:	add    BYTE PTR [rax],al
   14000fcf0:	(bad)  
   14000fcf1:	(bad)  
   14000fcf2:	(bad)  
   14000fcf3:	call   FWORD PTR [rsi]
   14000fcf5:	ret    0x0
   14000fcf8:	je     0x14000fc7b
   14000fcfa:	add    BYTE PTR [rax],al
   14000fcfc:	(bad)  
   14000fcfd:	(bad)  
   14000fcfe:	(bad)  
   14000fcff:	call   rdx
   14000fd01:	add    DWORD PTR [rax],0x0
   14000fd07:	add    dh,bl
   14000fd09:	add    DWORD PTR [rax],0xffffff00
   14000fd0f:	inc    DWORD PTR [rcx]
   14000fd11:	sbb    eax,0x641d0008
   14000fd16:	or     BYTE PTR [rax],al
   14000fd18:	sbb    eax,0x1d000754
   14000fd1d:	xor    al,0x6
   14000fd1f:	add    BYTE PTR [rip+0x19701932],bl        # 0x159711657
   14000fd25:	sbb    al,BYTE PTR [rcx]
   14000fd27:	add    BYTE PTR [rbx],cl
   14000fd29:	movabs ds:0x400000bb680000,al
   14000fd32:	add    BYTE PTR [rax],al
   14000fd34:	sbb    DWORD PTR [rax],ebx
   14000fd36:	add    DWORD PTR [rax],eax
   14000fd38:	or     DWORD PTR [rdx-0x44980000],esp
   14000fd3e:	add    BYTE PTR [rax],al
   14000fd40:	add    BYTE PTR [rax],al
   14000fd43:	add    BYTE PTR [rcx],al
   14000fd45:	adc    cl,BYTE PTR [rax]
   14000fd47:	add    BYTE PTR [rdx],dl
   14000fd49:	push   rsp
   14000fd4a:	or     eax,DWORD PTR [rax]
   14000fd4c:	adc    dh,BYTE PTR [rcx+rcx*1]
   14000fd4f:	add    BYTE PTR [rdx],dl
   14000fd51:	xor    cl,BYTE PTR [rsi]
   14000fd53:	loopne 0x14000fd61
   14000fd55:	jo     0x14000fd62
   14000fd57:	(bad)  
   14000fd58:	adc    DWORD PTR [rsi+rax*1],ebx
   14000fd5b:	add    BYTE PTR [rsp+riz*2],bl
   14000fd5e:	or     al,BYTE PTR [rax]
   14000fd60:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000fd63:	add    BYTE PTR [rdx+rdx*2],cl
   14000fd66:	or     BYTE PTR [rax+0x1c],dh
   14000fd69:	mov    esp,0xe8880000
   14000fd6e:	add    BYTE PTR [rax],al
   14000fd70:	(bad)  
   14000fd71:	(bad)  
   14000fd72:	(bad)  
   14000fd73:	push   QWORD PTR [rax]
   14000fd75:	ret    0x0
   14000fd78:	push   rax
   14000fd79:	xchg   DWORD PTR [rax],eax
   14000fd7b:	add    bh,bh
   14000fd7d:	(bad)  
   14000fd7e:	(bad)  
   14000fd7f:	dec    DWORD PTR [rdi+0x87]
   14000fd85:	add    BYTE PTR [rax],al
   14000fd87:	add    BYTE PTR [rbx-0xffff79],dh
   14000fd8d:	(bad)  
   14000fd8e:	(bad)  
   14000fd8f:	call   QWORD PTR [rcx]
   14000fd91:	(bad)  
   14000fd92:	or     BYTE PTR [rax],al
   14000fd94:	(bad)  
   14000fd95:	push   rsp
   14000fd96:	or     al,0x0
   14000fd98:	sbb    esi,DWORD PTR [rbx+rcx*1]
   14000fd9b:	add    BYTE PTR [rdi],cl
   14000fd9d:	push   rdx
   14000fd9e:	or     esp,eax
   14000fda0:	or     DWORD PTR [rax+0x8],esi
   14000fda3:	(bad)  
   14000fda4:	sbb    al,0xbc
   14000fda6:	add    BYTE PTR [rax],al
   14000fda8:	(bad)  
   14000fda9:	call   0x13ffffdae
   14000fdae:	(bad)  
   14000fdaf:	inc    DWORD PTR [rdx-0x3e]
   14000fdb2:	add    BYTE PTR [rax],al
   14000fdb4:	add    BYTE PTR [rax],al
   14000fdb6:	add    BYTE PTR [rax],al
   14000fdb8:	push   rdx
   14000fdb9:	ret    0x0
   14000fdbc:	add    BYTE PTR [rax],al
   14000fdbe:	add    BYTE PTR [rax],al
   14000fdc0:	call   0x13f00fe4d
   14000fdc5:	(bad)  
   14000fdc6:	(bad)  
   14000fdc7:	dec    DWORD PTR [rdx]
   14000fdc9:	mov    DWORD PTR [rax],eax
   14000fdcb:	add    BYTE PTR [rcx],al
   14000fdcd:	add    BYTE PTR [rax],al
   14000fdcf:	add    BYTE PTR [rcx],bh
   14000fdd1:	mov    DWORD PTR [rax],eax
   14000fdd3:	add    BYTE PTR [rax],al
   14000fdd5:	add    BYTE PTR [rax],al
   14000fdd7:	add    BYTE PTR [rax-0x77],bl
   14000fdda:	add    BYTE PTR [rax],al
   14000fddc:	(bad)  
   14000fddd:	(bad)  
   14000fdde:	(bad)  
   14000fddf:	call   FWORD PTR [rcx]
   14000fde1:	sbb    eax,DWORD PTR [rdi]
   14000fde3:	add    BYTE PTR [rdx],dl
   14000fde5:	(bad)  
   14000fde6:	(bad)  
   14000fde7:	lock or al,0xe0
   14000fdea:	or     al,al
   14000fdec:	or     BYTE PTR [rax+0x7],dh
   14000fdef:	(bad)  
   14000fdf0:	(bad)  
   14000fdf1:	xor    BYTE PTR [rax],al
   14000fdf3:	add    BYTE PTR [rsp+rdi*4],bl
   14000fdf6:	add    BYTE PTR [rax],al
   14000fdf8:	cmp    al,ch
   14000fdfa:	add    BYTE PTR [rax],al
   14000fdfc:	(bad)  
   14000fdfd:	(bad)  
   14000fdfe:	(bad)  
   14000fdff:	inc    DWORD PTR [rax]
   14000fe01:	add    BYTE PTR [rax],al
   14000fe03:	add    BYTE PTR [rax],al
   14000fe05:	add    BYTE PTR [rax],al
   14000fe07:	add    BYTE PTR [rax-0x3e],ch
   14000fe0a:	add    BYTE PTR [rax],al
   14000fe0c:	add    DWORD PTR [rax],eax
   14000fe0e:	add    BYTE PTR [rax],al
   14000fe10:	jbe    0x14000fdd4
   14000fe12:	add    BYTE PTR [rax],al
   14000fe14:	add    al,BYTE PTR [rax]
   14000fe16:	add    BYTE PTR [rax],al
   14000fe18:	xchg   dl,al
   14000fe1a:	add    BYTE PTR [rax],al
   14000fe1c:	add    DWORD PTR [rax],eax
   14000fe1e:	add    BYTE PTR [rax],al
   14000fe20:	xchg   esi,eax
   14000fe21:	ret    0x0
   14000fe24:	(bad)  
   14000fe25:	(bad)  
   14000fe26:	(bad)  
   14000fe27:	inc    DWORD PTR [rax]
   14000fe29:	add    BYTE PTR [rax],al
   14000fe2b:	add    BYTE PTR [rax],al
   14000fe2d:	add    BYTE PTR [rax],al
   14000fe2f:	add    BYTE PTR [rax+rax*1],al
   14000fe32:	add    BYTE PTR [rax],al
   14000fe34:	add    eax,0x1000000
   14000fe39:	add    BYTE PTR [rax],al
   14000fe3b:	add    BYTE PTR [rax-0x2],al
   14000fe3e:	add    BYTE PTR [rax],al
   14000fe40:	add    BYTE PTR [rax],al
	...
   14000fe4b:	add    BYTE PTR [rdx+0x380000c2],ah
	...
   14000fe5d:	add    BYTE PTR [rax],al
   14000fe5f:	add    BYTE PTR [rax-0xffff77],dl
   14000fe65:	(bad)  
   14000fe66:	(bad)  
   14000fe67:	call   rbp
   14000fe69:	mov    DWORD PTR [rax],eax
   14000fe6b:	add    BYTE PTR [rax],al
   14000fe6d:	add    BYTE PTR [rax],al
   14000fe6f:	add    dl,ch
   14000fe71:	mov    DWORD PTR [rax],eax
   14000fe73:	add    BYTE PTR [rcx],al
   14000fe75:	add    BYTE PTR [rax],al
   14000fe77:	add    dh,dh
   14000fe79:	mov    DWORD PTR [rax],eax
   14000fe7b:	add    BYTE PTR [rdx],al
   14000fe7d:	add    BYTE PTR [rax],al
   14000fe7f:	add    dl,bh
   14000fe81:	mov    DWORD PTR [rax],eax
   14000fe83:	add    BYTE PTR [rbx],al
   14000fe85:	add    BYTE PTR [rax],al
   14000fe87:	add    BYTE PTR [rsi],ah
   14000fe89:	mov    al,BYTE PTR [rax]
   14000fe8b:	add    BYTE PTR [rax+rax*1],al
   14000fe8e:	add    BYTE PTR [rax],al
   14000fe90:	movsxd ecx,DWORD PTR [rdx+0x10000]
   14000fe96:	add    BYTE PTR [rax],al
   14000fe98:	push   0x8a
   14000fe9d:	add    BYTE PTR [rax],al
   14000fe9f:	add    BYTE PTR [rax-0x76],dh
   14000fea2:	add    BYTE PTR [rax],al
   14000fea4:	(bad)  
   14000fea5:	(bad)  
   14000fea6:	(bad)  
   14000fea7:	jmp    QWORD PTR [rdx+0xc2]
   14000fead:	add    BYTE PTR [rax],al
   14000feaf:	add    BYTE PTR [rcx],bl
   14000feb1:	or     al,BYTE PTR [rdx]
   14000feb3:	add    BYTE PTR [rdx],cl
   14000feb5:	xor    al,BYTE PTR [rsi]
   14000feb7:	push   rax
   14000feb8:	sbb    al,0xbc
   14000feba:	add    BYTE PTR [rax],al
   14000febc:	cmp    al,ch
   14000febe:	add    BYTE PTR [rax],al
   14000fec0:	add    DWORD PTR [rdx],edx
   14000fec2:	or     BYTE PTR [rax],al
   14000fec4:	adc    dl,BYTE PTR [rcx+rcx*1+0x0]
   14000fec8:	adc    dh,BYTE PTR [rax+rcx*1]
   14000fecb:	add    BYTE PTR [rdx],dl
   14000fecd:	xor    cl,BYTE PTR [rsi]
   14000fecf:	loopne 0x14000fedd
   14000fed1:	jo     0x14000fede
   14000fed3:	(bad)  
   14000fed4:	sbb    DWORD PTR [rsi],esp
   14000fed6:	or     BYTE PTR [rax],al
   14000fed8:	(bad)  
   14000fed9:	push   rdx
   14000feda:	sbb    dh,al
   14000fedc:	sbb    al,ah
   14000fede:	(bad)  
   14000fedf:	rcl    BYTE PTR [rax+rax*8],1
   14000fee2:	adc    dh,BYTE PTR [rax+0x11]
   14000fee5:	(bad)  
   14000fee6:	adc    BYTE PTR [rax],dh
   14000fee8:	sbb    al,0xbc
   14000feea:	add    BYTE PTR [rax],al
   14000feec:	sub    cl,ch
	...
   14000fef6:	add    BYTE PTR [rax],al
   14000fef8:	add    DWORD PTR [rax],eax
   14000fefa:	add    BYTE PTR [rax],al
   14000fefc:	add    DWORD PTR [rax],eax
   14000fefe:	add    BYTE PTR [rax],al
   14000ff00:	add    al,0xff
   14000ff02:	add    BYTE PTR [rax],al
   14000ff04:	add    BYTE PTR [rax],al
	...
   14000ff0f:	add    bl,al
   14000ff11:	ret    0x0
   14000ff14:	cmp    BYTE PTR [rax],al
   14000ff16:	add    BYTE PTR [rax],al
   14000ff18:	ror    BYTE PTR [rbx-0x10000],0xff
   14000ff1f:	call   QWORD PTR [rsi]
   14000ff21:	mov    WORD PTR [rax],es
   14000ff23:	add    BYTE PTR [rax],al
   14000ff25:	add    BYTE PTR [rax],al
   14000ff27:	add    BYTE PTR [rdx-0x74],dl
   14000ff2a:	add    BYTE PTR [rax],al
   14000ff2c:	(bad)  
   14000ff2d:	(bad)  
   14000ff2e:	(bad)  
   14000ff2f:	inc    ebx
   14000ff31:	ret    0x0
   14000ff34:	add    BYTE PTR [rax],al
   14000ff36:	add    BYTE PTR [rax],al
   14000ff38:	sbb    DWORD PTR [rdx],ecx
   14000ff3a:	add    al,BYTE PTR [rax]
   14000ff3c:	or     dh,BYTE PTR [rdx]
   14000ff3e:	(bad)  
   14000ff3f:	push   rax
   14000ff40:	sbb    al,0xbc
   14000ff42:	add    BYTE PTR [rax],al
   14000ff44:	sub    cl,ch
   14000ff46:	add    BYTE PTR [rax],al
   14000ff48:	sbb    DWORD PTR [rdi+rax*1],esp
   14000ff4b:	add    BYTE PTR [rdx+riz*2],bl
   14000ff4e:	sbb    al,dh
   14000ff50:	(bad)  
   14000ff51:	loopne 0x14000ff67
   14000ff53:	rcl    BYTE PTR [rdx],0x70
   14000ff56:	adc    DWORD PTR [rax+0x10],esp
   14000ff59:	xor    BYTE PTR [rax],al
   14000ff5b:	add    BYTE PTR [rsp+rdi*4],bl
   14000ff5e:	add    BYTE PTR [rax],al
   14000ff60:	add    cl,ch
   14000ff62:	add    BYTE PTR [rax],al
   14000ff64:	(bad)  
   14000ff65:	(bad)  
   14000ff66:	(bad)  
   14000ff67:	inc    DWORD PTR [rax]
   14000ff69:	add    BYTE PTR [rax],al
   14000ff6b:	add    BYTE PTR [rax],al
   14000ff6d:	add    BYTE PTR [rax],al
   14000ff6f:	add    ah,ah
   14000ff71:	ret    0x0
   14000ff74:	(bad)  
   14000ff75:	(bad)  
   14000ff76:	(bad)  
   14000ff77:	inc    DWORD PTR [rax]
   14000ff79:	add    BYTE PTR [rax],al
   14000ff7b:	add    BYTE PTR [rax],al
   14000ff7d:	add    BYTE PTR [rax],al
   14000ff7f:	add    BYTE PTR [rcx],al
   14000ff81:	add    BYTE PTR [rax],al
   14000ff83:	add    BYTE PTR [rdx],al
   14000ff85:	add    BYTE PTR [rax],al
   14000ff87:	add    BYTE PTR [rcx],al
   14000ff89:	add    BYTE PTR [rax],al
   14000ff8b:	add    BYTE PTR [rax+0x400000ff],dl
	...
   14000ff99:	add    BYTE PTR [rax],al
   14000ff9b:	add    dl,dh
   14000ff9d:	ret    0x0
   14000ffa0:	cmp    BYTE PTR [rax],al
   14000ffa2:	add    BYTE PTR [rax],al
   14000ffa4:	add    BYTE PTR [rax],al
   14000ffa6:	add    BYTE PTR [rax],al
   14000ffa8:	fmul   DWORD PTR [rbp-0x10000]
   14000ffae:	(bad)  
   14000ffaf:	jmp    FWORD PTR [rcx]
   14000ffb1:	mov    es,WORD PTR [rax]
   14000ffb3:	add    BYTE PTR [rax],al
   14000ffb5:	add    BYTE PTR [rax],al
   14000ffb7:	add    BYTE PTR [rbx],bh
   14000ffb9:	mov    es,WORD PTR [rax]
   14000ffbb:	add    BYTE PTR [rcx],al
   14000ffbd:	add    BYTE PTR [rax],al
   14000ffbf:	add    BYTE PTR [rsi-0x72],ch
   14000ffc2:	add    BYTE PTR [rax],al
   14000ffc4:	add    BYTE PTR [rax],al
   14000ffc6:	add    BYTE PTR [rax],al
   14000ffc8:	jbe    0x14000ff58
   14000ffca:	add    BYTE PTR [rax],al
   14000ffcc:	(bad)  
   14000ffcd:	(bad)  
   14000ffce:	(bad)  
   14000ffcf:	push   rdx
   14000ffd1:	ret    0x0
   14000ffd4:	add    BYTE PTR [rax],al
   14000ffd6:	add    BYTE PTR [rax],al
   14000ffd8:	sbb    DWORD PTR [rdx],ecx
   14000ffda:	add    al,BYTE PTR [rax]
   14000ffdc:	or     dh,BYTE PTR [rdx]
   14000ffde:	(bad)  
   14000ffdf:	push   rax
   14000ffe0:	sbb    al,0xbc
   14000ffe2:	add    BYTE PTR [rax],al
   14000ffe4:	add    cl,ch
   14000ffe6:	add    BYTE PTR [rax],al
   14000ffe8:	adc    DWORD PTR [rsi+rax*1],ebx
   14000ffeb:	add    BYTE PTR [rsp+riz*2],bl
   14000ffee:	or     al,BYTE PTR [rax]
   14000fff0:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000fff3:	add    BYTE PTR [rdx+rdx*2],cl
   14000fff6:	or     BYTE PTR [rax+0x1c],dh
   14000fff9:	mov    esp,0xe8d80000
   14000fffe:	add    BYTE PTR [rax],al
   140010000:	(bad)  
   140010001:	(bad)  
   140010002:	(bad)  
   140010003:	call   QWORD PTR [rbx]
   140010005:	ret    
   140010006:	add    BYTE PTR [rax],al
   140010008:	sub    BYTE PTR [rax-0x10000],dl
   14001000e:	(bad)  
   14001000f:	call   QWORD PTR [rcx-0x70]
   140010012:	add    BYTE PTR [rax],al
   140010014:	add    BYTE PTR [rax],al
   140010016:	add    BYTE PTR [rax],al
   140010018:	jne    0x14000ffaa
   14001001a:	add    BYTE PTR [rax],al
   14001001c:	(bad)  
   14001001d:	(bad)  
   14001001e:	(bad)  
   14001001f:	call   FWORD PTR [rcx]
   140010021:	sbb    eax,DWORD PTR [rdi]
   140010023:	add    BYTE PTR [rdx],dl
   140010025:	(bad)  
   140010026:	(bad)  
   140010027:	lock or al,0xe0
   14001002a:	or     al,al
   14001002c:	or     BYTE PTR [rax+0x7],dh
   14001002f:	(bad)  
   140010030:	(bad)  
   140010031:	xor    BYTE PTR [rax],al
   140010033:	add    BYTE PTR [rsp+rdi*4],bl
   140010036:	add    BYTE PTR [rax],al
   140010038:	mov    al,0xe8
   14001003a:	add    BYTE PTR [rax],al
   14001003c:	(bad)  
   14001003d:	(bad)  
   14001003e:	(bad)  
   14001003f:	inc    DWORD PTR [rax]
   140010041:	add    BYTE PTR [rax],al
   140010043:	add    BYTE PTR [rax],al
   140010045:	add    BYTE PTR [rax],al
   140010047:	add    BYTE PTR [rip+0x10000c3],ah        # 0x141010110
   14001004d:	add    BYTE PTR [rax],al
   14001004f:	add    BYTE PTR [rbx],dh
   140010051:	ret    
   140010052:	add    BYTE PTR [rax],al
   140010054:	(bad)  
   140010055:	(bad)  
   140010056:	(bad)  
   140010057:	inc    DWORD PTR [rax]
   140010059:	add    BYTE PTR [rax],al
   14001005b:	add    BYTE PTR [rax],al
   14001005d:	add    BYTE PTR [rax],al
   14001005f:	add    BYTE PTR [rdx],al
   140010061:	add    BYTE PTR [rax],al
   140010063:	add    BYTE PTR [rbx],al
   140010065:	add    BYTE PTR [rax],al
   140010067:	add    BYTE PTR [rcx],al
   140010069:	add    BYTE PTR [rax],al
   14001006b:	add    BYTE PTR [rax+0x0],dh
   14001006e:	add    DWORD PTR [rax],eax
   140010070:	add    BYTE PTR [rax],al
	...
   14001007b:	add    BYTE PTR [rdi],bh
   14001007d:	ret    
   14001007e:	add    BYTE PTR [rax],al
   140010080:	cmp    BYTE PTR [rax],al
	...
   14001008e:	add    BYTE PTR [rax],al
   140010090:	in     al,0x91
   140010092:	add    BYTE PTR [rax],al
   140010094:	(bad)  
   140010095:	(bad)  
   140010096:	(bad)  
   140010097:	jmp    FWORD PTR [rcx]
   140010099:	xchg   edx,eax
   14001009a:	add    BYTE PTR [rax],al
   14001009c:	add    BYTE PTR [rax],al
   14001009e:	add    BYTE PTR [rax],al
   1400100a0:	ds xchg edx,eax
   1400100a2:	add    BYTE PTR [rax],al
   1400100a4:	add    DWORD PTR [rax],eax
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	rex.WX xchg rdx,rax
   1400100aa:	add    BYTE PTR [rax],al
   1400100ac:	add    al,BYTE PTR [rax]
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	jno    0x140010044
   1400100b2:	add    BYTE PTR [rax],al
   1400100b4:	add    DWORD PTR [rax],eax
   1400100b6:	add    BYTE PTR [rax],al
   1400100b8:	jbe    0x14001004c
   1400100ba:	add    BYTE PTR [rax],al
   1400100bc:	add    BYTE PTR [rax],al
   1400100be:	add    BYTE PTR [rax],al
   1400100c0:	jle    0x140010054
   1400100c2:	add    BYTE PTR [rax],al
   1400100c4:	(bad)  
   1400100c5:	(bad)  
   1400100c6:	(bad)  
   1400100c7:	(bad)  
   1400100c8:	(bad)  
   1400100c9:	ret    
   1400100ca:	add    BYTE PTR [rax],al
   1400100cc:	add    BYTE PTR [rax],al
   1400100ce:	add    BYTE PTR [rax],al
   1400100d0:	sbb    DWORD PTR [rdx],ecx
   1400100d2:	add    al,BYTE PTR [rax]
   1400100d4:	or     dh,BYTE PTR [rdx]
   1400100d6:	(bad)  
   1400100d7:	push   rax
   1400100d8:	sbb    al,0xbc
   1400100da:	add    BYTE PTR [rax],al
   1400100dc:	mov    al,0xe8
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	sbb    DWORD PTR [rbx],esp
   1400100e2:	add    al,0x0
   1400100e4:	adc    al,0x34
   1400100e6:	sldt   WORD PTR [rsi]
   1400100e9:	mov    dl,0x2
   1400100eb:	jo     0x140010115
   1400100ed:	mov    esp,0xeab80000
   1400100f2:	add    BYTE PTR [rax],al
   1400100f4:	push   rdx
   1400100f5:	add    BYTE PTR [rax],al
   1400100f7:	add    bh,bh
   1400100f9:	(bad)  
   1400100fa:	(bad)  
   1400100fb:	jmp    QWORD PTR [rax-0x3d]
   1400100fe:	add    BYTE PTR [rax],al
   140010100:	xchg   esp,eax
   140010101:	xchg   ebx,eax
   140010102:	add    BYTE PTR [rax],al
   140010104:	(bad)  
   140010105:	(bad)  
   140010106:	(bad)  
   140010107:	call   QWORD PTR [rdi-0x6c]
   14001010a:	add    BYTE PTR [rax],al
   14001010c:	add    BYTE PTR [rax],al
   14001010e:	add    BYTE PTR [rax],al
   140010110:	movsxd edx,DWORD PTR [rax+rax*1-0x100]
   140010117:	call   FWORD PTR [rcx]
   140010119:	(bad)  
   14001011a:	add    al,BYTE PTR [rax]
   14001011c:	(bad)  
   14001011d:	mov    dl,0x2
   14001011f:	xor    BYTE PTR [rax],ch
   140010121:	mov    esp,0xea900000
   140010126:	add    BYTE PTR [rax],al
   140010128:	push   rdx
   140010129:	add    BYTE PTR [rax],al
   14001012b:	add    BYTE PTR [rax],al
   14001012d:	add    BYTE PTR [rax],al
   14001012f:	add    BYTE PTR [rax-0xffff6c],dh
   140010135:	(bad)  
   140010136:	(bad)  
   140010137:	inc    DWORD PTR [rbp+rdx*4+0x0]
   14001013e:	add    BYTE PTR [rax],al
   140010140:	nop
   140010141:	xchg   ebp,eax
   140010142:	add    BYTE PTR [rax],al
   140010144:	(bad)  
   140010145:	(bad)  
   140010146:	(bad)  
   140010147:	call   FWORD PTR [rcx]
   140010149:	sub    ecx,DWORD PTR [rax]
   14001014b:	add    BYTE PTR [rsp+riz*2],bl
   14001014e:	adc    DWORD PTR [rax],eax
   140010150:	sbb    BYTE PTR [rax+rdx*1+0x0],dl
   140010154:	adc    al,0x34
   140010156:	str    WORD PTR [rax]
   140010159:	mov    dl,0x4
   14001015b:	jo     0x140010185
   14001015d:	mov    esp,0xea680000
   140010162:	add    BYTE PTR [rax],al
   140010164:	push   rdx
   140010165:	add    BYTE PTR [rax],al
   140010167:	add    bh,bh
   140010169:	(bad)  
   14001016a:	(bad)  
   14001016b:	push   QWORD PTR [rdx-0x3d]
   14001016e:	add    BYTE PTR [rax],al
   140010170:	loopne 0x140010107
   140010172:	add    BYTE PTR [rax],al
   140010174:	(bad)  
   140010175:	(bad)  
   140010176:	(bad)  
   140010177:	(bad)  
   140010178:	ds xchg esi,eax
   14001017a:	add    BYTE PTR [rax],al
   14001017c:	add    BYTE PTR [rax],al
   14001017e:	add    BYTE PTR [rax],al
   140010180:	jo     0x140010118
   140010182:	add    BYTE PTR [rax],al
   140010184:	(bad)  
   140010185:	(bad)  
   140010186:	(bad)  
   140010187:	call   FWORD PTR [rcx]
   140010189:	xor    al,0xb
   14001018b:	add    BYTE PTR [rsi],ah
   14001018d:	xor    al,0x2d
   14001018f:	add    BYTE PTR [rcx],bl
   140010191:	add    DWORD PTR [rdx],esp
   140010193:	add    BYTE PTR [rsi],cl
   140010195:	lock or al,0xe0
   140010198:	or     dl,al
   14001019a:	or     al,al
   14001019c:	(bad)  
   14001019d:	jo     0x1400101a4
   14001019f:	(bad)  
   1400101a0:	add    al,0x50
   1400101a2:	add    BYTE PTR [rax],al
   1400101a4:	sub    BYTE PTR [rax+rax*1+0xea4000],bh
   1400101ab:	add    BYTE PTR [rdx],al
   1400101ad:	add    DWORD PTR [rax],eax
   1400101af:	add    bh,bh
   1400101b1:	(bad)  
   1400101b2:	(bad)  
   1400101b3:	inc    DWORD PTR [rbx+rax*8+0x0]
   1400101ba:	add    BYTE PTR [rax],al
   1400101bc:	stos   BYTE PTR es:[rdi],al
   1400101bd:	ret    
   1400101be:	add    BYTE PTR [rax],al
   1400101c0:	add    DWORD PTR [rax],eax
   1400101c2:	add    BYTE PTR [rax],al
   1400101c4:	mov    dh,0xc3
   1400101c6:	add    BYTE PTR [rax],al
   1400101c8:	add    DWORD PTR [rax],eax
   1400101ca:	add    BYTE PTR [rax],al
   1400101cc:	ret    0xc3
   1400101cf:	add    BYTE PTR [rax],al
   1400101d1:	add    BYTE PTR [rax],al
   1400101d3:	add    dl,al
   1400101d5:	ret    
   1400101d6:	add    BYTE PTR [rax],al
   1400101d8:	add    al,0x0
   1400101da:	add    BYTE PTR [rax],al
   1400101dc:	(bad)  
   1400101dd:	ret    
   1400101de:	add    BYTE PTR [rax],al
   1400101e0:	add    eax,0xda000000
   1400101e5:	ret    
   1400101e6:	add    BYTE PTR [rax],al
   1400101e8:	add    eax,0xe6000000
   1400101ed:	ret    
   1400101ee:	add    BYTE PTR [rax],al
   1400101f0:	add    al,0x0
   1400101f2:	add    BYTE PTR [rax],al
   1400101f4:	out    0xc3,al
   1400101f6:	add    BYTE PTR [rax],al
   1400101f8:	or     BYTE PTR [rax],al
   1400101fa:	add    BYTE PTR [rax],al
   1400101fc:	bnd ret 
   1400101fe:	add    BYTE PTR [rax],al
   140010200:	or     BYTE PTR [rax],al
   140010202:	add    BYTE PTR [rax],al
   140010204:	inc    bl
   140010206:	add    BYTE PTR [rax],al
   140010208:	add    al,0x0
   14001020a:	add    BYTE PTR [rax],al
   14001020c:	or     al,ah
   14001020e:	add    BYTE PTR [rax],al
   140010210:	add    BYTE PTR [rax],al
   140010212:	add    BYTE PTR [rax],al
   140010214:	(bad)  
   140010215:	(bad)  
	...
   14001021e:	add    BYTE PTR [rax],al
   140010220:	(bad)  
   140010221:	xchg   esi,eax
   140010222:	add    BYTE PTR [rax],al
   140010224:	(bad)  
   140010225:	(bad)  
   140010226:	(bad)  
   140010227:	call   QWORD PTR [rcx]
   140010229:	xchg   edi,eax
   14001022a:	add    BYTE PTR [rax],al
   14001022c:	add    BYTE PTR [rax],al
   14001022e:	add    BYTE PTR [rax],al
   140010230:	push   rsp
   140010231:	xchg   edi,eax
   140010232:	add    BYTE PTR [rax],al
   140010234:	add    DWORD PTR [rax],eax
   140010236:	add    BYTE PTR [rax],al
   140010238:	jge    0x1400101d1
   14001023a:	add    BYTE PTR [rax],al
   14001023c:	add    al,BYTE PTR [rax]
   14001023e:	add    BYTE PTR [rax],al
   140010240:	mov    ss,WORD PTR [rdi+0x10000]
   140010246:	add    BYTE PTR [rax],al
   140010248:	enter  0x97,0x0
   14001024c:	add    al,0x0
   14001024e:	add    BYTE PTR [rax],al
   140010250:	rex.R cwde 
   140010252:	add    BYTE PTR [rax],al
   140010254:	add    eax,0x75000000
   140010259:	cwde   
   14001025a:	add    BYTE PTR [rax],al
   14001025c:	(bad)  
   14001025d:	add    BYTE PTR [rax],al
   14001025f:	add    BYTE PTR [rsi+0x5000098],al
   140010265:	add    BYTE PTR [rax],al
   140010267:	add    al,al
   140010269:	cwde   
   14001026a:	add    BYTE PTR [rax],al
   14001026c:	or     BYTE PTR [rax],al
   14001026e:	add    BYTE PTR [rax],al
   140010270:	xor    BYTE PTR [rcx+0x90000],bl
   140010276:	add    BYTE PTR [rax],al
   140010278:	cmp    al,0x99
   14001027a:	add    BYTE PTR [rax],al
   14001027c:	or     al,BYTE PTR [rax]
   14001027e:	add    BYTE PTR [rax],al
   140010280:	push   rdi
   140010281:	cdq    
   140010282:	add    BYTE PTR [rax],al
   140010284:	or     BYTE PTR [rax],al
   140010286:	add    BYTE PTR [rax],al
   140010288:	cwd    
   14001028a:	add    BYTE PTR [rax],al
   14001028c:	or     eax,DWORD PTR [rax]
   14001028e:	add    BYTE PTR [rax],al
   140010290:	lea    ebx,[rcx+0x40000]
   140010296:	add    BYTE PTR [rax],al
   140010298:	retf   0x99
   14001029b:	add    BYTE PTR [rax+rax*1],cl
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	icebp  
   1400102a1:	cdq    
   1400102a2:	add    BYTE PTR [rax],al
   1400102a4:	add    BYTE PTR [rax],al
   1400102a6:	add    BYTE PTR [rax],al
   1400102a8:	sbb    DWORD PTR [rip+0x3427000b],esi        # 0x1742802b9
   1400102ae:	xor    al,0x0
   1400102b0:	sbb    al,BYTE PTR [rcx]
   1400102b2:	sub    al,BYTE PTR [rax]
   1400102b4:	(bad)  
   1400102b5:	lock or al,0xe0
   1400102b8:	or     dl,al
   1400102ba:	or     al,al
   1400102bc:	(bad)  
   1400102bd:	jo     0x1400102c4
   1400102bf:	(bad)  
   1400102c0:	add    al,0x50
   1400102c2:	add    BYTE PTR [rax],al
   1400102c4:	sub    BYTE PTR [rax+rax*1+0xea1800],bh
   1400102cb:	add    BYTE PTR [rdx+0x1],cl
   1400102ce:	add    BYTE PTR [rax],al
   1400102d0:	(bad)  
   1400102d1:	(bad)  
   1400102d2:	(bad)  
   1400102d3:	jmp    FWORD PTR [rax]
   1400102d5:	(bad)  
   1400102d6:	add    BYTE PTR [rax],al
   1400102d8:	add    BYTE PTR [rax],al
   1400102da:	add    BYTE PTR [rax],al
   1400102dc:	rex.WRX (bad) 
   1400102de:	add    BYTE PTR [rax],al
   1400102e0:	add    DWORD PTR [rax],eax
   1400102e2:	add    BYTE PTR [rax],al
   1400102e4:	pop    rdx
   1400102e5:	(bad)  
   1400102e6:	add    BYTE PTR [rax],al
   1400102e8:	add    al,BYTE PTR [rax]
   1400102ea:	add    BYTE PTR [rax],al
   1400102ec:	data16 (bad) 
   1400102ee:	add    BYTE PTR [rax],al
   1400102f0:	add    al,BYTE PTR [rax]
   1400102f2:	add    BYTE PTR [rax],al
   1400102f4:	jb     0x1400102ba
   1400102f6:	add    BYTE PTR [rax],al
   1400102f8:	add    al,0x0
   1400102fa:	add    BYTE PTR [rax],al
   1400102fc:	jle    0x1400102c2
   1400102fe:	add    BYTE PTR [rax],al
   140010300:	add    al,0x0
   140010302:	add    BYTE PTR [rax],al
   140010304:	mov    al,ah
   140010306:	add    BYTE PTR [rax],al
   140010308:	(bad)  
   140010309:	add    BYTE PTR [rax],al
   14001030b:	add    BYTE PTR [rsi+0x60000c4],dl
   140010311:	add    BYTE PTR [rax],al
   140010313:	add    BYTE PTR [rdx+0x60000c4],ah
   140010319:	add    BYTE PTR [rax],al
   14001031b:	add    BYTE PTR [rsi+0x20000c4],ch
   140010321:	add    BYTE PTR [rax],al
   140010323:	add    BYTE PTR [rdx+0x20000c4],bh
   140010329:	add    BYTE PTR [rax],al
   14001032b:	add    dh,al
   14001032d:	(bad)  
   14001032e:	add    BYTE PTR [rax],al
   140010330:	pop    rsp
   140010331:	(bad)  
   140010332:	add    BYTE PTR [rax],al
   140010334:	(bad)  
   140010335:	(bad)  
   140010336:	(bad)  
   140010337:	call   FWORD PTR [rbp+0x9a]
   14001033d:	add    BYTE PTR [rax],al
   14001033f:	add    dl,dh
   140010341:	(bad)  
   140010342:	add    BYTE PTR [rax],al
   140010344:	add    DWORD PTR [rax],eax
   140010346:	add    BYTE PTR [rax],al
   140010348:	xchg   BYTE PTR [rbx+0x20000],bl
   14001034e:	add    BYTE PTR [rax],al
   140010350:	in     al,dx
   140010351:	fwait
   140010352:	add    BYTE PTR [rax],al
   140010354:	add    eax,DWORD PTR [rax]
   140010356:	add    BYTE PTR [rax],al
   140010358:	sti    
   140010359:	fwait
   14001035a:	add    BYTE PTR [rax],al
   14001035c:	add    al,BYTE PTR [rax]
   14001035e:	add    BYTE PTR [rax],al
   140010360:	(bad)  
   140010361:	pushf  
   140010362:	add    BYTE PTR [rax],al
   140010364:	add    DWORD PTR [rax],eax
   140010366:	add    BYTE PTR [rax],al
   140010368:	test   DWORD PTR [rax+rax*1+0x0],ebx
   14001036f:	add    BYTE PTR [rax+0x200009c],bl
   140010375:	add    BYTE PTR [rax],al
   140010377:	add    dl,al
   140010379:	pushf  
   14001037a:	add    BYTE PTR [rax],al
   14001037c:	add    al,0x0
   14001037e:	add    BYTE PTR [rax],al
   140010380:	(bad)  
   140010381:	pushf  
   140010382:	add    BYTE PTR [rax],al
   140010384:	add    eax,0xf8000000
   140010389:	pushf  
   14001038a:	add    BYTE PTR [rax],al
   14001038c:	add    al,0x0
   14001038e:	add    BYTE PTR [rax],al
   140010390:	push   0xffffffffffffff9d
   140010392:	add    BYTE PTR [rax],al
   140010394:	(bad)  
   140010395:	add    BYTE PTR [rax],al
   140010397:	add    BYTE PTR [rbp+rbx*4+0x70000],cl
   14001039e:	add    BYTE PTR [rax],al
   1400103a0:	(bad)  
   1400103a1:	popf   
   1400103a2:	add    BYTE PTR [rax],al
   1400103a4:	(bad)  
   1400103a5:	add    BYTE PTR [rax],al
   1400103a7:	add    dh,cl
   1400103a9:	popf   
   1400103aa:	add    BYTE PTR [rax],al
   1400103ac:	or     BYTE PTR [rax],al
   1400103ae:	add    BYTE PTR [rax],al
   1400103b0:	fcomp  QWORD PTR [rbp+0x60000]
   1400103b6:	add    BYTE PTR [rax],al
   1400103b8:	setle  BYTE PTR [rax]
   1400103bb:	add    BYTE PTR [rcx],cl
   1400103bd:	add    BYTE PTR [rax],al
   1400103bf:	add    BYTE PTR [rbx],ch
   1400103c1:	sahf   
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	(bad)  
   1400103c5:	add    BYTE PTR [rax],al
   1400103c7:	add    BYTE PTR [rcx-0x62],bl
   1400103ca:	add    BYTE PTR [rax],al
   1400103cc:	add    al,0x0
   1400103ce:	add    BYTE PTR [rax],al
   1400103d0:	jbe    0x140010370
   1400103d2:	add    BYTE PTR [rax],al
   1400103d4:	add    al,BYTE PTR [rax]
   1400103d6:	add    BYTE PTR [rax],al
   1400103d8:	test   DWORD PTR [rsi+0x40000],ebx
   1400103de:	add    BYTE PTR [rax],al
   1400103e0:	movabs ds:0xbf0000000200009e,al
   1400103e9:	sahf   
   1400103ea:	add    BYTE PTR [rax],al
   1400103ec:	add    DWORD PTR [rax],eax
   1400103ee:	add    BYTE PTR [rax],al
   1400103f0:	ficomp DWORD PTR [rsi+0x20000]
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	pop    rcx
   1400103f9:	lahf   
   1400103fa:	add    BYTE PTR [rax],al
   1400103fc:	or     al,BYTE PTR [rax]
   1400103fe:	add    BYTE PTR [rax],al
   140010400:	push   0x200009f
   140010405:	add    BYTE PTR [rax],al
   140010407:	add    BYTE PTR [rcx+0xb00009f],bl
   14001040d:	add    BYTE PTR [rax],al
   14001040f:	add    BYTE PTR [rbp+0x200009f],dh
   140010415:	add    BYTE PTR [rax],al
   140010417:	add    dh,cl
   140010419:	lahf   
   14001041a:	add    BYTE PTR [rax],al
   14001041c:	add    DWORD PTR [rax],eax
   14001041e:	add    BYTE PTR [rax],al
   140010420:	sti    
   140010421:	lahf   
   140010422:	add    BYTE PTR [rax],al
   140010424:	add    BYTE PTR [rax],al
   140010426:	add    BYTE PTR [rax],al
   140010428:	adc    DWORD PTR [rax],esp
   14001042a:	or     BYTE PTR [rax],al
   14001042c:	and    BYTE PTR [rbx+rcx*1+0x0],ah
   140010430:	sbb    al,0x54
   140010432:	or     al,BYTE PTR [rax]
   140010434:	sbb    BYTE PTR [rcx+rcx*1],dh
   140010437:	add    BYTE PTR [rdx+rdx*2],cl
   14001043a:	or     BYTE PTR [rax+0x1c],dh
   14001043d:	mov    esp,0xe9f00000
   140010442:	add    BYTE PTR [rax],al
   140010444:	(bad)  
   140010445:	(bad)  
   140010446:	(bad)  
   140010447:	(bad)  
   140010448:	fadd   st,st(4)
   14001044a:	add    BYTE PTR [rax],al
   14001044c:	add    BYTE PTR [rax],al
   14001044e:	add    BYTE PTR [rax],al
   140010450:	js     0x1400103f3
   140010452:	add    BYTE PTR [rax],al
   140010454:	(bad)  
   140010455:	(bad)  
   140010456:	(bad)  
   140010457:	call   FWORD PTR [rbx+0xa1]
   14001045d:	add    BYTE PTR [rax],al
   14001045f:	add    ch,al
   140010461:	movabs eax,ds:0x1d11ffffffff0000
   14001046a:	(bad)  
   14001046b:	add    BYTE PTR [rip+0x19000a74],bl        # 0x159010ee5
   140010471:	xor    al,0x9
   140010473:	add    BYTE PTR [rip+0x1ce00952],cl        # 0x15ce10dcb
   140010479:	mov    esp,0xe9c80000
   14001047e:	add    BYTE PTR [rax],al
   140010480:	(bad)  
   140010481:	(bad)  
   140010482:	(bad)  
   140010483:	(bad)  
   140010484:	(bad)  
   140010485:	(bad)  
   140010486:	add    BYTE PTR [rax],al
   140010488:	in     al,dx
   140010489:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001048a:	add    BYTE PTR [rax],al
   14001048c:	(bad)  
   14001048d:	(bad)  
   14001048e:	(bad)  
   14001048f:	push   QWORD PTR [riz*4+0x0]
   140010496:	add    BYTE PTR [rax],al
   140010498:	pop    rax
   140010499:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001049a:	add    BYTE PTR [rax],al
   14001049c:	(bad)  
   14001049d:	(bad)  
   14001049e:	(bad)  
   14001049f:	inc    DWORD PTR [rcx]
   1400104a1:	(bad)  
   1400104a2:	or     al,BYTE PTR [rax]
   1400104a4:	(bad)  
   1400104a5:	push   rsp
   1400104a6:	(bad)  
   1400104a7:	add    BYTE PTR [rsi],dl
   1400104a9:	xor    al,0xd
   1400104ab:	add    BYTE PTR [rsi],dl
   1400104ad:	push   rdx
   1400104ae:	adc    dh,al
   1400104b0:	adc    al,ah
   1400104b2:	(bad)  
   1400104b3:	ror    BYTE PTR [rax+rsi*2],0xb
   1400104b7:	(bad)  
   1400104b8:	sbb    DWORD PTR [rax],esp
   1400104ba:	add    al,0x0
   1400104bc:	and    BYTE PTR [rbx+rcx*1],dh
   1400104bf:	add    BYTE PTR [rdx+rdx*2],dl
   1400104c2:	adc    BYTE PTR [rax+0x1c],dh
   1400104c5:	mov    esp,0xe9a00000
	...
   1400104d2:	add    BYTE PTR [rax],al
   1400104d4:	add    DWORD PTR [rax],eax
   1400104d6:	add    BYTE PTR [rax],al
   1400104d8:	add    DWORD PTR [rax],eax
   1400104da:	add    BYTE PTR [rax],al
   1400104dc:	loopne 0x1400104e2
   1400104de:	add    DWORD PTR [rax],eax
   1400104e0:	add    BYTE PTR [rax],al
	...
   1400104eb:	add    ah,bh
   1400104ed:	(bad)  
   1400104ee:	add    BYTE PTR [rax],al
   1400104f0:	cmp    BYTE PTR [rax],al
   1400104f2:	add    BYTE PTR [rax],al
   1400104f4:	add    BYTE PTR [rax],al
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	(bad)  
   1400104f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400104fa:	add    BYTE PTR [rax],al
   1400104fc:	(bad)  
   1400104fd:	(bad)  
   1400104fe:	(bad)  
   1400104ff:	(bad)  
   140010500:	cmp    al,0xa7
   140010502:	add    BYTE PTR [rax],al
   140010504:	add    BYTE PTR [rax],al
   140010506:	add    BYTE PTR [rax],al
   140010508:	pop    rdi
   140010509:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001050a:	add    BYTE PTR [rax],al
   14001050c:	(bad)  
   14001050d:	(bad)  
   14001050e:	(bad)  
   14001050f:	(bad)  
   140010510:	cld    
   140010511:	(bad)  
   140010512:	add    BYTE PTR [rax],al
   140010514:	add    BYTE PTR [rax],al
   140010516:	add    BYTE PTR [rax],al
   140010518:	or     ebp,eax
   14001051a:	add    BYTE PTR [rax],al
   14001051c:	add    DWORD PTR [rax],eax
   14001051e:	add    BYTE PTR [rax],al
   140010520:	sbb    DWORD PTR [rdx],ecx
   140010522:	add    al,BYTE PTR [rax]
   140010524:	or     dh,BYTE PTR [rdx]
   140010526:	(bad)  
   140010527:	push   rax
   140010528:	sbb    al,0xbc
   14001052a:	add    BYTE PTR [rax],al
   14001052c:	movabs al,ds:0x17000617190000e9
   140010535:	xor    al,0xe
   140010537:	add    BYTE PTR [rcx],cl
   140010539:	xchg   edx,eax
   14001053a:	add    eax,0x27003e0
   14001053f:	(bad)  
   140010540:	sbb    al,0xbc
   140010542:	add    BYTE PTR [rax],al
   140010544:	js     0x14001052f
   140010546:	add    BYTE PTR [rax],al
   140010548:	(bad)  
   140010549:	(bad)  
   14001054a:	(bad)  
   14001054b:	inc    DWORD PTR [rax]
   14001054d:	add    BYTE PTR [rax],al
   14001054f:	add    BYTE PTR [rax],al
   140010551:	add    BYTE PTR [rax],al
   140010553:	add    BYTE PTR [rdi],ah
   140010555:	(bad)
   140010558:	add    DWORD PTR [rax],eax
   14001055a:	add    BYTE PTR [rax],al
   14001055c:	(bad)
   140010560:	(bad)  
   140010561:	(bad)  
   140010562:	(bad)  
   140010563:	inc    DWORD PTR [rax]
   140010565:	add    BYTE PTR [rax],al
   140010567:	add    BYTE PTR [rax],al
   140010569:	add    BYTE PTR [rax],al
   14001056b:	add    BYTE PTR [rdx],al
   14001056d:	add    BYTE PTR [rax],al
   14001056f:	add    BYTE PTR [rbx],al
   140010571:	add    BYTE PTR [rax],al
   140010573:	add    BYTE PTR [rcx],al
   140010575:	add    BYTE PTR [rax],al
   140010577:	add    BYTE PTR [rbp+rax*1+0x1],bh
   14001057b:	add    BYTE PTR [rax+0x0],al
	...
   140010586:	add    BYTE PTR [rax],al
   140010588:	push   rdx
   140010589:	(bad)
   14001058c:	cmp    BYTE PTR [rax],al
   14001058e:	add    BYTE PTR [rax],al
   140010590:	jo     0x140010539
   140010592:	add    BYTE PTR [rax],al
   140010594:	(bad)  
   140010595:	(bad)  
   140010596:	(bad)  
   140010597:	inc    esi
   140010599:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001059a:	add    BYTE PTR [rax],al
   14001059c:	add    BYTE PTR [rax],al
   14001059e:	add    BYTE PTR [rax],al
   1400105a0:	xlat   BYTE PTR ds:[rbx]
   1400105a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400105a2:	add    BYTE PTR [rax],al
   1400105a4:	add    DWORD PTR [rax],eax
   1400105a6:	add    BYTE PTR [rax],al
   1400105a8:	clc    
   1400105a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400105aa:	add    BYTE PTR [rax],al
   1400105ac:	add    al,BYTE PTR [rax]
   1400105ae:	add    BYTE PTR [rax],al
   1400105b0:	(bad)  
   1400105b1:	test   al,0x0
   1400105b3:	add    bh,bh
   1400105b5:	(bad)  
   1400105b6:	(bad)  
   1400105b7:	call   QWORD PTR [rdx-0x3b]
   1400105ba:	add    BYTE PTR [rax],al
   1400105bc:	add    BYTE PTR [rax],al
   1400105be:	add    BYTE PTR [rax],al
   1400105c0:	pop    rdi
   1400105c1:	(bad)
   1400105c4:	add    eax,DWORD PTR [rax]
   1400105c6:	add    BYTE PTR [rax],al
   1400105c8:	sbb    DWORD PTR [rdx],ecx
   1400105ca:	add    al,BYTE PTR [rax]
   1400105cc:	or     dh,BYTE PTR [rdx]
   1400105ce:	(bad)  
   1400105cf:	push   rax
   1400105d0:	sbb    al,0xbc
   1400105d2:	add    BYTE PTR [rax],al
   1400105d4:	js     0x1400105bf
   1400105d6:	add    BYTE PTR [rax],al
   1400105d8:	sbb    DWORD PTR [rdi],edx
   1400105da:	(bad)  
   1400105db:	add    BYTE PTR [rdi],dl
   1400105dd:	xor    al,0xe
   1400105df:	add    BYTE PTR [rcx],cl
   1400105e1:	xchg   edx,eax
   1400105e2:	add    eax,0x27003e0
   1400105e7:	(bad)  
   1400105e8:	sbb    al,0xbc
   1400105ea:	add    BYTE PTR [rax],al
   1400105ec:	push   rax
   1400105ed:	jmp    0x1400005f2
   1400105f2:	(bad)  
   1400105f3:	inc    DWORD PTR [rax]
   1400105f5:	add    BYTE PTR [rax],al
   1400105f7:	add    BYTE PTR [rax],al
   1400105f9:	add    BYTE PTR [rax],al
   1400105fb:	add    BYTE PTR [rbx-0x3b],bh
   1400105fe:	add    BYTE PTR [rax],al
   140010600:	add    DWORD PTR [rax],eax
   140010602:	add    BYTE PTR [rax],al
   140010604:	(bad)  
   140010605:	(bad)
   140010608:	(bad)  
   140010609:	(bad)  
   14001060a:	(bad)  
   14001060b:	inc    DWORD PTR [rax]
   14001060d:	add    BYTE PTR [rax],al
   14001060f:	add    BYTE PTR [rax],al
   140010611:	add    BYTE PTR [rax],al
   140010613:	add    BYTE PTR [rdx],al
   140010615:	add    BYTE PTR [rax],al
   140010617:	add    BYTE PTR [rbx],al
   140010619:	add    BYTE PTR [rax],al
   14001061b:	add    BYTE PTR [rcx],al
   14001061d:	add    BYTE PTR [rax],al
   14001061f:	add    BYTE PTR [rsi+rax*1],ah
   140010622:	add    DWORD PTR [rax],eax
   140010624:	add    BYTE PTR [rax],al
	...
   14001062f:	add    BYTE PTR [rsi+0x380000c5],ah
   140010635:	add    BYTE PTR [rax],al
   140010637:	add    BYTE PTR [rax+rbp*4+0x0],cl
   14001063b:	add    bh,bh
   14001063d:	(bad)  
   14001063e:	(bad)  
   14001063f:	jmp    QWORD PTR [rdx+0xa8]
   140010645:	add    BYTE PTR [rax],al
   140010647:	add    BYTE PTR [rbx+0x10000a8],dh
   14001064d:	add    BYTE PTR [rax],al
   14001064f:	add    ah,dl
   140010651:	test   al,0x0
   140010653:	add    BYTE PTR [rdx],al
   140010655:	add    BYTE PTR [rax],al
   140010657:	add    BYTE PTR [rax],al
   140010659:	test   eax,0xffff0000
   14001065e:	(bad)  
   14001065f:	jmp    QWORD PTR [rsi+0xc5]
   140010665:	add    BYTE PTR [rax],al
   140010667:	add    BYTE PTR [rbx+0x30000c5],dh
   14001066d:	add    BYTE PTR [rax],al
   14001066f:	add    BYTE PTR [rcx],bl
   140010671:	or     al,BYTE PTR [rdx]
   140010673:	add    BYTE PTR [rdx],cl
   140010675:	xor    al,BYTE PTR [rsi]
   140010677:	push   rax
   140010678:	sbb    al,0xbc
   14001067a:	add    BYTE PTR [rax],al
   14001067c:	push   rax
   14001067d:	jmp    0x15f1a0682
   140010682:	add    eax,0x2c340d00
   140010687:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14601308e
   14001068d:	(bad)  
   14001068e:	add    BYTE PTR [rax],al
   140010690:	push   0x400000bb
   140010695:	add    DWORD PTR [rax],eax
   140010697:	add    BYTE PTR [rcx],al
   140010699:	or     al,BYTE PTR [rdx]
   14001069b:	add    BYTE PTR [rdx],cl
   14001069d:	xor    al,BYTE PTR [rsi]
   14001069f:	xor    BYTE PTR [rcx],al
   1400106a1:	add    al,0x1
   1400106a3:	add    BYTE PTR [rdx+rax*4],al
   1400106a6:	add    BYTE PTR [rax],al
   1400106a8:	or     DWORD PTR [rax],ebx
   1400106aa:	or     DWORD PTR [rax],eax
   1400106ac:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   1400106b0:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   1400106b4:	sbb    BYTE PTR [rax+rbx*1],dh
   1400106b7:	add    BYTE PTR [rax],bl
   1400106b9:	add    DWORD PTR [rsi],edx
   1400106bb:	add    BYTE PTR [rcx],dl
   1400106bd:	lock add BYTE PTR [rax],al
   1400106c0:	rex.RX mov edx,0x10000
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	mov    al,0x0
   1400106cb:	add    BYTE PTR [rdi],ah
   1400106cd:	mov    dl,0x0
   1400106cf:	add    bh,cl
   1400106d1:	(bad)
   1400106d4:	(bad)  
   1400106d5:	mov    dl,0x0
   1400106d7:	add    BYTE PTR [rcx],al
   1400106d9:	add    BYTE PTR [rax],al
   1400106db:	add    BYTE PTR [rcx],dl
   1400106dd:	or     al,BYTE PTR [rax+rax*1]
   1400106e0:	or     dh,BYTE PTR [rsi+rax*1]
   1400106e3:	add    BYTE PTR [rdx],cl
   1400106e5:	xor    al,BYTE PTR [rsi]
   1400106e7:	jo     0x14001072f
   1400106e9:	mov    edx,0x10000
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	cmc    
   1400106f1:	mov    dl,0x0
   1400106f3:	add    BYTE PTR [rdx],bh
   1400106f5:	mov    bl,0x0
   1400106f7:	add    bl,dh
   1400106f9:	(bad)
   1400106fc:	add    BYTE PTR [rax],al
   1400106fe:	add    BYTE PTR [rax],al
   140010700:	add    DWORD PTR [rcx+rax*1],eax
   140010703:	add    BYTE PTR [rdx+riz*2],al
   140010706:	add    BYTE PTR [rax],al
   140010708:	add    DWORD PTR [rcx+rax*1],eax
   14001070b:	add    BYTE PTR [rdx+riz*8],al
   14001070e:	add    BYTE PTR [rax],al
   140010710:	add    DWORD PTR [rdx+rax*1],ecx
   140010713:	add    BYTE PTR [rcx+rax*1],cl
   140010716:	adc    DWORD PTR [rax],eax
   140010718:	or     DWORD PTR [rcx+rax*1],eax
   14001071b:	add    BYTE PTR [rdx+riz*1],al
   14001071e:	add    BYTE PTR [rax],al
   140010720:	rex.RX mov edx,0x10000
   140010726:	add    BYTE PTR [rax],al
   140010728:	fdiv   QWORD PTR [rdi-0x47ee0000]
   14001072e:	add    BYTE PTR [rax],al
   140010730:	add    DWORD PTR [rax],eax
   140010732:	add    BYTE PTR [rax],al
   140010734:	adc    bh,BYTE PTR [rax+0xa090000]
   14001073a:	add    al,0x0
   14001073c:	or     dh,BYTE PTR [rsi+rax*1]
   14001073f:	add    BYTE PTR [rdx],cl
   140010741:	xor    al,BYTE PTR [rsi]
   140010743:	jo     0x14001078b
   140010745:	mov    edx,0x10000
   14001074a:	add    BYTE PTR [rax],al
   14001074c:	fnstsw WORD PTR [rax-0x46f00000]
   140010752:	add    BYTE PTR [rax],al
   140010754:	and    dh,al
   140010756:	add    BYTE PTR [rax],al
   140010758:	adc    BYTE PTR [rcx+0xd010000],bh
   14001075e:	add    al,0x0
   140010760:	or     eax,0xd000934
   140010765:	xor    al,BYTE PTR [rsi]
   140010767:	push   rax
   140010768:	sbb    DWORD PTR [rbx],ebx
   14001076a:	add    eax,DWORD PTR [rax]
   14001076c:	or     DWORD PTR [rcx],eax
   14001076e:	test   al,0x0
   140010770:	add    dh,BYTE PTR [rax]
   140010772:	add    BYTE PTR [rax],al
   140010774:	push   0x300000bb
   140010779:	add    eax,0x0
   14001077e:	add    BYTE PTR [rax],al
   140010780:	add    DWORD PTR [rax],eax
   140010782:	add    BYTE PTR [rax],al
   140010784:	add    BYTE PTR [rax],al
   140010786:	add    BYTE PTR [rax],al
   140010788:	add    DWORD PTR [rcx+rax*1],eax
   14001078b:	add    BYTE PTR [rdx+rdx*1],al
   14001078e:	add    BYTE PTR [rax],al
   140010790:	add    BYTE PTR [rax],al
   140010792:	add    BYTE PTR [rax],al
   140010794:	(bad)  
   140010795:	and    DWORD PTR [rcx],eax
   140010797:	add    BYTE PTR [rax],al
   140010799:	add    BYTE PTR [rax],al
   14001079b:	add    bh,bh
   14001079d:	(bad)  
   14001079e:	(bad)  
   14001079f:	inc    DWORD PTR [rax]
   1400107a1:	add    BYTE PTR [rax],al
   1400107a3:	add    BYTE PTR [rax],bl
   1400107a5:	add    BYTE PTR [rax],al
   1400107a7:	add    BYTE PTR [rbp*4+0x0],bh
	...
   1400107ba:	add    BYTE PTR [rax],al
   1400107bc:	pushf  
   1400107bd:	lods   eax,DWORD PTR ds:[rsi]
   1400107be:	add    BYTE PTR [rax],al
   1400107c0:	add    BYTE PTR [rax],al
   1400107c2:	add    BYTE PTR [rax],al
   1400107c4:	fadd   DWORD PTR [rdi]
   1400107c6:	add    DWORD PTR [rax],eax
	...
   1400107d8:	add    eax,DWORD PTR [rax]
   1400107da:	add    BYTE PTR [rax],al
   1400107dc:	clc    
   1400107dd:	(bad)  
   1400107de:	add    DWORD PTR [rax],eax
   1400107e0:	nop
   1400107e1:	(bad)  
   1400107e2:	add    DWORD PTR [rax],eax
   1400107e4:	movabs al,ds:0x109
	...
   1400107f9:	add    BYTE PTR [rax],al
   1400107fb:	add    BYTE PTR [rax+0x121],cl
   140010801:	add    BYTE PTR [rax],al
   140010803:	add    bh,bh
   140010805:	(bad)  
   140010806:	(bad)  
   140010807:	inc    DWORD PTR [rax]
   140010809:	add    BYTE PTR [rax],al
   14001080b:	add    BYTE PTR [rax],bl
   14001080d:	add    BYTE PTR [rax],al
   14001080f:	add    BYTE PTR [rbp*4+0x0],bh
	...
   140010822:	add    BYTE PTR [rax],al
   140010824:	pushf  
   140010825:	lods   eax,DWORD PTR ds:[rsi]
   140010826:	add    BYTE PTR [rax],al
   140010828:	add    BYTE PTR [rax],al
   14001082a:	add    BYTE PTR [rax],al
   14001082c:	or     BYTE PTR [rcx],al
	...
   14001083f:	add    BYTE PTR [rbx],al
   140010841:	add    BYTE PTR [rax],al
   140010843:	add    BYTE PTR [rax+0x8],ah
   140010846:	add    DWORD PTR [rax],eax
   140010848:	nop
   140010849:	(bad)  
   14001084a:	add    DWORD PTR [rax],eax
   14001084c:	movabs al,ds:0x109
	...
   140010861:	add    BYTE PTR [rax],al
   140010863:	add    BYTE PTR [rax+0x121],dh
   140010869:	add    BYTE PTR [rax],al
   14001086b:	add    bh,bh
   14001086d:	(bad)  
   14001086e:	(bad)  
   14001086f:	inc    DWORD PTR [rax]
   140010871:	add    BYTE PTR [rax],al
   140010873:	add    BYTE PTR [rax],bl
   140010875:	add    BYTE PTR [rax],al
   140010877:	add    BYTE PTR [rbp*4+0x0],bh
	...
   14001088a:	add    BYTE PTR [rax],al
   14001088c:	pushf  
   14001088d:	lods   eax,DWORD PTR ds:[rsi]
   14001088e:	add    BYTE PTR [rax],al
   140010890:	add    BYTE PTR [rax],al
   140010892:	add    BYTE PTR [rax],al
   140010894:	test   al,0x8
   140010896:	add    DWORD PTR [rax],eax
	...
   1400108a8:	add    al,BYTE PTR [rax]
   1400108aa:	add    BYTE PTR [rax],al
   1400108ac:	ror    BYTE PTR [rax],0x1
   1400108af:	add    BYTE PTR [rax+0x109],ah
	...
   1400108c1:	add    BYTE PTR [rax],al
   1400108c3:	add    al,bl
   1400108c5:	and    DWORD PTR [rcx],eax
   1400108c7:	add    BYTE PTR [rax],al
   1400108c9:	add    BYTE PTR [rax],al
   1400108cb:	add    bh,bh
   1400108cd:	(bad)  
   1400108ce:	(bad)  
   1400108cf:	inc    DWORD PTR [rax]
   1400108d1:	add    BYTE PTR [rax],al
   1400108d3:	add    BYTE PTR [rax],bl
   1400108d5:	add    BYTE PTR [rax],al
   1400108d7:	add    BYTE PTR [rax-0x52],al
	...
   1400108ea:	add    BYTE PTR [rax],al
   1400108ec:	or     BYTE PTR [rdx],ah
   1400108ee:	add    DWORD PTR [rax],eax
   1400108f0:	add    BYTE PTR [rax],al
   1400108f2:	add    BYTE PTR [rax],al
   1400108f4:	(bad)  
   1400108f5:	(bad)  
   1400108f6:	(bad)  
   1400108f7:	inc    DWORD PTR [rax]
   1400108f9:	add    BYTE PTR [rax],al
   1400108fb:	add    BYTE PTR [rax+rax*1],al
	...
   14001090e:	add    BYTE PTR [rax],al
   140010910:	add    DWORD PTR [rax],eax
   140010912:	add    BYTE PTR [rax],al
   140010914:	call   0x140010a21
	...
   140010929:	add    BYTE PTR [rax],al
   14001092b:	add    BYTE PTR [rax],dl
   14001092d:	or     DWORD PTR [rcx],eax
	...
   14001093f:	add    BYTE PTR [rdx],al
   140010941:	add    BYTE PTR [rax],al
   140010943:	add    BYTE PTR [rax+0x9],bl
   140010946:	add    DWORD PTR [rax],eax
   140010948:	movabs al,ds:0x109
   140010951:	add    BYTE PTR [rax],al
   140010953:	add    BYTE PTR [rax],al
   140010955:	add    BYTE PTR [rax],al
   140010957:	add    BYTE PTR [rax],dl
   140010959:	add    BYTE PTR [rax],al
   14001095b:	add    BYTE PTR [rax+0x123],cl
   140010961:	add    BYTE PTR [rax],al
   140010963:	add    bh,bh
   140010965:	(bad)  
   140010966:	(bad)  
   140010967:	inc    DWORD PTR [rax]
   140010969:	add    BYTE PTR [rax],al
   14001096b:	add    BYTE PTR [rax],bl
   14001096d:	add    BYTE PTR [rax],al
   14001096f:	add    BYTE PTR [rax+0x74],al
	...
   140010982:	add    BYTE PTR [rax],al
   140010984:	rex.W push rbp
   140010986:	add    BYTE PTR [rax],al
   140010988:	add    BYTE PTR [rax],al
   14001098a:	add    BYTE PTR [rax],al
   14001098c:	rex or DWORD PTR [rcx],eax
	...
   1400109a3:	add    BYTE PTR [rax+0x123],dh
   1400109a9:	add    BYTE PTR [rax],al
   1400109ab:	add    bh,bh
   1400109ad:	(bad)  
   1400109ae:	(bad)  
   1400109af:	inc    DWORD PTR [rax]
   1400109b1:	add    BYTE PTR [rax],al
   1400109b3:	add    BYTE PTR [rax],bl
   1400109b5:	add    BYTE PTR [rax],al
   1400109b7:	add    dh,ch
   1400109b9:	mov    dh,0x0
	...
   1400109cf:	add    BYTE PTR [rax],ah
   1400109d1:	and    BYTE PTR [rcx],al
   1400109d3:	rex add DWORD PTR [rax],eax
   1400109d6:	add    BYTE PTR [rax],al
   1400109d8:	jo     0x1400109fa
   1400109da:	add    DWORD PTR [rax+0x1],eax
   1400109dd:	add    BYTE PTR [rax],al
   1400109df:	add    al,al
   1400109e1:	and    BYTE PTR [rcx],al
   1400109e3:	rex add DWORD PTR [rax],eax
	...
   1400109ee:	add    BYTE PTR [rax],al
   1400109f0:	fmul   DWORD PTR [rbx]
   1400109f2:	add    DWORD PTR [rax],eax
	...
   1400109fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400109fd:	adc    BYTE PTR [rcx],al
   1400109ff:	add    BYTE PTR [rax-0x30],al
   140010a02:	add    BYTE PTR [rax],al
   140010a04:	loopne 0x140010a14
   140010a06:	add    DWORD PTR [rax],eax
	...
   140010a10:	ret    0x112
   140010a13:	add    BYTE PTR [rax-0x2d],cl
   140010a16:	add    BYTE PTR [rax],al
   140010a18:	cwde   
   140010a19:	or     eax,DWORD PTR [rcx]
	...
   140010a23:	add    BYTE PTR [rsi+0x118],dl
   140010a29:	rol    BYTE PTR [rax],1
   140010a2b:	add    BYTE PTR [rax],bl
   140010a2d:	or     al,0x1
	...
   140010a37:	add    BYTE PTR [rax+rbx*1-0x2f7fffff],ah
   140010a3e:	add    BYTE PTR [rax],al
   140010a40:	mov    al,0xe
   140010a42:	add    DWORD PTR [rax],eax
	...
   140010a4c:	(bad)  
   140010a4d:	sbb    BYTE PTR [rcx],al
   140010a4f:	add    BYTE PTR [rax],bl
   140010a51:	rol    DWORD PTR [rax],cl
   140010a53:	add    BYTE PTR [rax+0xd],dl
   140010a56:	add    DWORD PTR [rax],eax
	...
   140010a60:	in     al,dx
   140010a61:	sbb    BYTE PTR [rcx],al
   140010a63:	add    BYTE PTR [rax-0x77ffff2f],bh
   140010a69:	or     al,0x1
	...
   140010a73:	add    BYTE PTR [rsi],dl
   140010a75:	sbb    DWORD PTR [rcx],eax
   140010a77:	add    al,dh
   140010a79:	rol    BYTE PTR [rax],1
   140010a7b:	add    al,dl
   140010a7d:	(bad)  
   140010a7e:	add    DWORD PTR [rax],eax
	...
   140010a88:	rex sbb DWORD PTR [rcx],eax
   140010a8b:	add    BYTE PTR [rax],bh
   140010a8d:	rol    DWORD PTR [rax],cl
   140010a8f:	add    BYTE PTR [rax+0x10c],dh
   140010a95:	add    BYTE PTR [rax],al
   140010a97:	add    BYTE PTR [rax],al
   140010a99:	add    BYTE PTR [rax],al
   140010a9b:	add    BYTE PTR [rcx+rbx*1+0x1],ah
   140010a9f:	add    BYTE PTR [rax],bl
   140010aa1:	rol    DWORD PTR [rax],1
   140010aa3:	add    al,al
   140010aa5:	or     al,0x1
	...
   140010aaf:	add    BYTE PTR [rsi+0x28000119],al
   140010ab5:	rol    DWORD PTR [rax],1
   140010ab7:	add    BYTE PTR [rax+0x10e],dl
   140010abd:	add    BYTE PTR [rax],al
   140010abf:	add    BYTE PTR [rax],al
   140010ac1:	add    BYTE PTR [rax],al
   140010ac3:	add    BYTE PTR [rax-0x7fffee7],dh
   140010ac9:	rol    BYTE PTR [rax],cl
   140010acb:	add    BYTE PTR [rax+0x10d],dh
   140010ad1:	add    BYTE PTR [rax],al
   140010ad3:	add    BYTE PTR [rax],al
   140010ad5:	add    BYTE PTR [rax],al
   140010ad7:	add    ah,dl
   140010ad9:	sbb    DWORD PTR [rcx],eax
   140010adb:	add    BYTE PTR [rax],bl
   140010add:	rol    BYTE PTR [rax],cl
   140010adf:	add    BYTE PTR [rax],dh
   140010ae1:	(bad)  
   140010ae2:	add    DWORD PTR [rax],eax
	...
   140010aec:	clc    
   140010aed:	sbb    DWORD PTR [rcx],eax
   140010aef:	add    BYTE PTR [rax+0x100000d2],bl
   140010af5:	(bad)  
   140010af6:	add    DWORD PTR [rax],eax
	...
   140010b00:	sbb    bl,BYTE PTR [rdx]
   140010b02:	add    DWORD PTR [rax],eax
   140010b04:	js     0x140010ad8
   140010b06:	add    BYTE PTR [rax],al
   140010b08:	sbb    BYTE PTR [rip+0x1],cl        # 0x140010b0f
   140010b0e:	add    BYTE PTR [rax],al
   140010b10:	add    BYTE PTR [rax],al
   140010b12:	add    BYTE PTR [rax],al
   140010b14:	cmp    al,0x1a
   140010b16:	add    DWORD PTR [rax],eax
   140010b18:	adc    cl,0x0
   140010b1b:	add    BYTE PTR [rax+0xd],al
   140010b1e:	add    DWORD PTR [rax],eax
	...
   140010b28:	pop    rsi
   140010b29:	sbb    al,BYTE PTR [rcx]
   140010b2b:	add    BYTE PTR [rax-0xfffff2f],ch
   140010b31:	or     eax,0x1
   140010b36:	add    BYTE PTR [rax],al
   140010b38:	add    BYTE PTR [rax],al
   140010b3a:	add    BYTE PTR [rax],al
   140010b3c:	mov    WORD PTR [rdx],ds
   140010b3e:	add    DWORD PTR [rax],eax
   140010b40:	pop    rax
   140010b41:	rol    BYTE PTR [rax],cl
   140010b43:	add    BYTE PTR [rax+0x10d],ah
   140010b49:	add    BYTE PTR [rax],al
   140010b4b:	add    BYTE PTR [rax],al
   140010b4d:	add    BYTE PTR [rax],al
   140010b4f:	add    BYTE PTR [rdx+0x800011a],dh
   140010b55:	rol    BYTE PTR [rax],cl
   140010b57:	add    BYTE PTR [rax+0xc],bh
   140010b5a:	add    DWORD PTR [rax],eax
	...
   140010b64:	(bad)  
   140010b65:	sbb    al,BYTE PTR [rcx]
   140010b67:	add    al,ah
   140010b69:	rol    BYTE PTR [rax],1
   140010b6b:	add    BYTE PTR [rax],ah
   140010b6d:	(bad)  
   140010b6e:	add    DWORD PTR [rax],eax
	...
   140010b78:	add    al,0x1b
   140010b7a:	add    DWORD PTR [rax],eax
   140010b7c:	mov    dl,dl
	...
   140010b96:	add    BYTE PTR [rax],al
   140010b98:	add    al,BYTE PTR [rax]
   140010b9a:	add    BYTE PTR [rax],al
   140010b9c:	add    BYTE PTR [rax],al
   140010b9e:	add    BYTE PTR [rax+0x7],al
   140010ba4:	add    BYTE PTR [rax],al
   140010ba6:	add    BYTE PTR [rax+0xa1],al
   140010bac:	add    BYTE PTR [rax],al
   140010bae:	add    BYTE PTR [rax+0x6],al
   140010bb4:	add    BYTE PTR [rax],al
   140010bb6:	add    BYTE PTR [rax+0xa3],al
   140010bbc:	add    BYTE PTR [rax],al
   140010bbe:	add    BYTE PTR [rax+0x115],al
   140010bc4:	add    BYTE PTR [rax],al
   140010bc6:	add    BYTE PTR [rax+0xba],al
   140010bcc:	add    BYTE PTR [rax],al
   140010bce:	add    BYTE PTR [rax+0x0],al
   140010bd4:	add    BYTE PTR [rax],al
   140010bd6:	add    BYTE PTR [rax],al
   140010bd8:	cwde   
   140010bd9:	adc    BYTE PTR [rcx],al
   140010bdb:	add    BYTE PTR [rax],al
   140010bdd:	add    BYTE PTR [rax],al
   140010bdf:	add    BYTE PTR [rax+rdx*1+0x1],al
   140010be6:	add    BYTE PTR [rax],al
   140010be8:	jo     0x140010bfa
   140010bea:	add    DWORD PTR [rax],eax
   140010bec:	add    BYTE PTR [rax],al
   140010bee:	add    BYTE PTR [rax],al
   140010bf0:	adc    BYTE PTR [rcx],al
   140010bf3:	add    BYTE PTR [rax],al
   140010bf5:	add    BYTE PTR [rax],al
   140010bf7:	add    BYTE PTR [rdx+0x10],ah
   140010bfa:	add    DWORD PTR [rax],eax
   140010bfc:	add    BYTE PTR [rax],al
   140010bfe:	add    BYTE PTR [rax],al
   140010c00:	rex.WR adc BYTE PTR [rcx],r8b
   140010c03:	add    BYTE PTR [rax],al
   140010c05:	add    BYTE PTR [rax],al
   140010c07:	add    BYTE PTR [rax],dh
   140010c09:	sbb    eax,DWORD PTR [rcx]
	...
   140010c17:	add    BYTE PTR [rdi+rdx*1],dh
   140010c1a:	add    DWORD PTR [rax],eax
   140010c1c:	add    BYTE PTR [rax],al
   140010c1e:	add    BYTE PTR [rax],al
   140010c20:	and    dl,BYTE PTR [rdi]
   140010c22:	add    DWORD PTR [rax],eax
   140010c24:	add    BYTE PTR [rax],al
   140010c26:	add    BYTE PTR [rax],al
   140010c28:	or     al,0x17
   140010c2a:	add    DWORD PTR [rax],eax
   140010c2c:	add    BYTE PTR [rax],al
   140010c2e:	add    BYTE PTR [rax],al
   140010c30:	hlt    
   140010c31:	(bad)  
   140010c32:	add    DWORD PTR [rax],eax
   140010c34:	add    BYTE PTR [rax],al
   140010c36:	add    BYTE PTR [rax],al
   140010c38:	loop   0x140010c50
   140010c3a:	add    DWORD PTR [rax],eax
   140010c3c:	add    BYTE PTR [rax],al
   140010c3e:	add    BYTE PTR [rax],al
   140010c40:	rcl    BYTE PTR [rsi],1
   140010c42:	add    DWORD PTR [rax],eax
   140010c44:	add    BYTE PTR [rax],al
   140010c46:	add    BYTE PTR [rax],al
   140010c48:	mov    eax,0x116
   140010c4d:	add    BYTE PTR [rax],al
   140010c4f:	add    BYTE PTR [rdx*1+0x1],ah
   140010c56:	add    BYTE PTR [rax],al
   140010c58:	(bad)  
   140010c59:	adc    al,0x1
   140010c5b:	add    BYTE PTR [rax],al
   140010c5d:	add    BYTE PTR [rax],al
   140010c5f:	add    BYTE PTR [rsp+rdx*1],dh
   140010c62:	add    DWORD PTR [rax],eax
   140010c64:	add    BYTE PTR [rax],al
   140010c66:	add    BYTE PTR [rax],al
   140010c68:	cmp    BYTE PTR [rbx],dl
   140010c6a:	add    DWORD PTR [rax],eax
	...
   140010c78:	sbb    BYTE PTR [rax],0x1
	...
   140010c87:	add    dl,bh
   140010c89:	adc    al,0x1
   140010c8b:	add    BYTE PTR [rax],al
   140010c8d:	add    BYTE PTR [rax],al
   140010c8f:	add    BYTE PTR [rbx+rdx*1+0x1],dl
   140010c96:	add    BYTE PTR [rax],al
   140010c98:	out    dx,al
   140010c99:	(bad)  
   140010c9a:	add    DWORD PTR [rax],eax
   140010c9c:	add    BYTE PTR [rax],al
   140010c9e:	add    BYTE PTR [rax],al
   140010ca0:	or     bl,BYTE PTR [rax]
   140010ca2:	add    DWORD PTR [rax],eax
	...
   140010cb0:	loop   0x140010cc5
   140010cb2:	add    DWORD PTR [rax],eax
	...
   140010cc0:	outs   dx,BYTE PTR ds:[rsi]
   140010cc1:	adc    eax,0x1
   140010cc6:	add    BYTE PTR [rax],al
   140010cc8:	lock adc eax,DWORD PTR [rcx]
   140010ccb:	add    BYTE PTR [rax],al
   140010ccd:	add    BYTE PTR [rax],al
   140010ccf:	add    BYTE PTR [rbp+rdx*1+0x1],cl
   140010cd3:	add    BYTE PTR [rax],al
   140010cd5:	add    BYTE PTR [rax],al
   140010cd7:	add    BYTE PTR [rsi],ah
   140010cd9:	adc    al,0x1
   140010cdb:	add    BYTE PTR [rax],al
   140010cdd:	add    BYTE PTR [rax],al
   140010cdf:	add    BYTE PTR [rsp+rdx*1+0x1],al
   140010ce3:	add    BYTE PTR [rax],al
   140010ce5:	add    BYTE PTR [rax],al
   140010ce7:	add    BYTE PTR [rdi+rdx*1+0x1],al
   140010cee:	add    BYTE PTR [rax],al
   140010cf0:	pop    rsi
   140010cf1:	adc    eax,0x1
   140010cf6:	add    BYTE PTR [rax],al
   140010cf8:	outs   dx,BYTE PTR ds:[rsi]
   140010cf9:	(bad)  
   140010cfa:	add    DWORD PTR [rax],eax
   140010cfc:	add    BYTE PTR [rax],al
   140010cfe:	add    BYTE PTR [rax],al
   140010d00:	add    al,0x14
   140010d02:	add    DWORD PTR [rax],eax
   140010d04:	add    BYTE PTR [rax],al
   140010d06:	add    BYTE PTR [rax],al
   140010d08:	adc    BYTE PTR [rip+0x1],0x0        # 0x140010d10
	...
   140010d17:	add    BYTE PTR [rdx+0x17],bl
   140010d1a:	add    DWORD PTR [rax],eax
   140010d1c:	add    BYTE PTR [rax],al
   140010d1e:	add    BYTE PTR [rax],al
   140010d20:	pop    rsi
   140010d21:	(bad)  
   140010d22:	add    DWORD PTR [rax],eax
   140010d24:	add    BYTE PTR [rax],al
   140010d26:	add    BYTE PTR [rax],al
   140010d28:	outs   dx,BYTE PTR ds:[rsi]
   140010d29:	(bad)  
   140010d2a:	add    DWORD PTR [rax],eax
   140010d2c:	add    BYTE PTR [rax],al
   140010d2e:	add    BYTE PTR [rax],al
   140010d30:	rex.W (bad) 
   140010d32:	add    DWORD PTR [rax],eax
	...
   140010d40:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010d41:	(bad)  
   140010d42:	add    DWORD PTR [rax],eax
	...
   140010d50:	sub    BYTE PTR [rax],bl
   140010d52:	add    DWORD PTR [rax],eax
   140010d54:	add    BYTE PTR [rax],al
   140010d56:	add    BYTE PTR [rax],al
   140010d58:	mov    eax,0x113
   140010d5d:	add    BYTE PTR [rax],al
   140010d5f:	add    BYTE PTR [rbx+rdx*1+0x1],ah
   140010d66:	add    BYTE PTR [rax],al
   140010d68:	outs   dx,BYTE PTR ds:[rsi]
   140010d69:	adc    eax,DWORD PTR [rcx]
   140010d6b:	add    BYTE PTR [rax],al
   140010d6d:	add    BYTE PTR [rax],al
   140010d6f:	add    ah,bh
   140010d71:	adc    eax,0x1
   140010d76:	add    BYTE PTR [rax],al
   140010d78:	retf   0x115
   140010d7b:	add    BYTE PTR [rax],al
   140010d7d:	add    BYTE PTR [rax],al
   140010d7f:	add    BYTE PTR [rdx],dh
   140010d81:	(bad)  
   140010d82:	add    DWORD PTR [rax],eax
   140010d84:	add    BYTE PTR [rax],al
   140010d86:	add    BYTE PTR [rax],al
   140010d88:	(bad)  
   140010d89:	(bad)  
   140010d8a:	add    DWORD PTR [rax],eax
   140010d8c:	add    BYTE PTR [rax],al
   140010d8e:	add    BYTE PTR [rax],al
   140010d90:	adc    BYTE PTR [rbx],0x1
	...
   140010d9f:	add    BYTE PTR [rax+rbx*1],bh
   140010da2:	add    DWORD PTR [rax],eax
	...
   140010db0:	js     0x140010dc6
   140010db2:	add    DWORD PTR [rax],eax
   140010db4:	add    BYTE PTR [rax],al
   140010db6:	add    BYTE PTR [rax],al
   140010db8:	mov    esp,0x114
   140010dbd:	add    BYTE PTR [rax],al
   140010dbf:	add    BYTE PTR [rsi+0x14],dl
   140010dc2:	add    DWORD PTR [rax],eax
   140010dc4:	add    BYTE PTR [rax],al
   140010dc6:	add    BYTE PTR [rax],al
   140010dc8:	fs adc al,0x1
   140010dcb:	add    BYTE PTR [rax],al
   140010dcd:	add    BYTE PTR [rax],al
   140010dcf:	add    BYTE PTR [rax+0x114],cl
   140010dd5:	add    BYTE PTR [rax],al
   140010dd7:	add    BYTE PTR [rdx+0x114],ch
   140010ddd:	add    BYTE PTR [rax],al
   140010ddf:	add    BYTE PTR [rax+0x114],bl
	...
   140010ded:	add    BYTE PTR [rax],al
   140010def:	add    BYTE PTR [rdi+rdx*1+0x1],ch
   140010df6:	add    BYTE PTR [rax],al
   140010df8:	ficom  DWORD PTR [rdi]
   140010dfa:	add    DWORD PTR [rax],eax
   140010dfc:	add    BYTE PTR [rax],al
   140010dfe:	add    BYTE PTR [rax],al
   140010e00:	rcl    BYTE PTR [rdi],0x1
	...
   140010e0f:	add    BYTE PTR [rsi],dh
   140010e11:	adc    eax,0x1
	...
   140010e1e:	add    BYTE PTR [rax],al
   140010e20:	clc    
   140010e21:	sbb    al,BYTE PTR [rcx]
	...
   140010e2f:	add    BYTE PTR [rax+0x116],al
   140010e35:	add    BYTE PTR [rax],al
   140010e37:	add    BYTE PTR [rsi+0x116],cl
   140010e3d:	add    BYTE PTR [rax],al
   140010e3f:	add    BYTE PTR [rsi+rdx*1],cl
   140010e42:	add    DWORD PTR [rax],eax
   140010e44:	add    BYTE PTR [rax],al
   140010e46:	add    BYTE PTR [rax],al
   140010e48:	or     al,0x15
   140010e4a:	add    DWORD PTR [rax],eax
   140010e4c:	add    BYTE PTR [rax],al
   140010e4e:	add    BYTE PTR [rax],al
   140010e50:	in     al,dx
   140010e51:	adc    eax,0x1
   140010e56:	add    BYTE PTR [rax],al
   140010e58:	loopne 0x140010e6f
   140010e5a:	add    DWORD PTR [rax],eax
   140010e5c:	add    BYTE PTR [rax],al
   140010e5e:	add    BYTE PTR [rax],al
   140010e60:	loop   0x140010e76
   140010e62:	add    DWORD PTR [rax],eax
   140010e64:	add    BYTE PTR [rax],al
   140010e66:	add    BYTE PTR [rax],al
   140010e68:	sahf   
   140010e69:	(bad)  
   140010e6a:	add    DWORD PTR [rax],eax
   140010e6c:	add    BYTE PTR [rax],al
   140010e6e:	add    BYTE PTR [rax],al
   140010e70:	mov    dl,0x15
   140010e72:	add    DWORD PTR [rax],eax
   140010e74:	add    BYTE PTR [rax],al
   140010e76:	add    BYTE PTR [rax],al
   140010e78:	xchg   esi,eax
   140010e79:	adc    eax,0x1
   140010e7e:	add    BYTE PTR [rax],al
   140010e80:	and    dl,BYTE PTR [rsi]
   140010e82:	add    DWORD PTR [rax],eax
	...
   140010e90:	(bad)  
   140010e91:	adc    al,0x1
   140010e93:	add    BYTE PTR [rax],al
   140010e95:	add    BYTE PTR [rax],al
   140010e97:	add    BYTE PTR [rax+0x18],dh
   140010e9a:	add    DWORD PTR [rax],eax
   140010e9c:	add    BYTE PTR [rax],al
   140010e9e:	add    BYTE PTR [rax],al
   140010ea0:	push   rsi
   140010ea1:	sbb    BYTE PTR [rcx],al
	...
   140010eaf:	add    BYTE PTR [rdi+rdx*1+0x1],cl
   140010eb3:	add    BYTE PTR [rax],al
   140010eb5:	add    BYTE PTR [rax],al
   140010eb7:	add    BYTE PTR [rbx+rdx*1+0x1],cl
   140010ebb:	add    BYTE PTR [rax],al
   140010ebd:	add    BYTE PTR [rax],al
   140010ebf:	add    BYTE PTR [rbx+rdx*1+0x1],bl
	...
   140010ecf:	add    ah,cl
   140010ed1:	adc    eax,DWORD PTR [rcx]
	...
   140010edf:	add    BYTE PTR [rsi+0x112],dh
   140010ee5:	add    BYTE PTR [rax],al
   140010ee7:	add    dh,cl
   140010ee9:	adc    al,BYTE PTR [rcx]
   140010eeb:	add    BYTE PTR [rax],al
   140010eed:	add    BYTE PTR [rax],al
   140010eef:	add    BYTE PTR [rdx+rdx*1+0x1],ch
   140010ef6:	add    BYTE PTR [rax],al
   140010ef8:	movabs ds:0x8a00000000000112,al
   140010f01:	adc    al,BYTE PTR [rcx]
   140010f03:	add    BYTE PTR [rax],al
   140010f05:	add    BYTE PTR [rax],al
   140010f07:	add    BYTE PTR [rsi+0x12],bh
   140010f0a:	add    DWORD PTR [rax],eax
   140010f0c:	add    BYTE PTR [rax],al
   140010f0e:	add    BYTE PTR [rax],al
   140010f10:	push   0x12
   140010f12:	add    DWORD PTR [rax],eax
   140010f14:	add    BYTE PTR [rax],al
   140010f16:	add    BYTE PTR [rax],al
   140010f18:	pop    rsp
   140010f19:	adc    al,BYTE PTR [rcx]
   140010f1b:	add    BYTE PTR [rax],al
   140010f1d:	add    BYTE PTR [rax],al
   140010f1f:	add    BYTE PTR [rdx+0x12],dl
   140010f22:	add    DWORD PTR [rax],eax
   140010f24:	add    BYTE PTR [rax],al
   140010f26:	add    BYTE PTR [rax],al
   140010f28:	rex.WX adc al,BYTE PTR [rcx]
   140010f2b:	add    BYTE PTR [rax],al
   140010f2d:	add    BYTE PTR [rax],al
   140010f2f:	add    dl,ah
   140010f31:	adc    al,BYTE PTR [rcx]
   140010f33:	add    BYTE PTR [rax],al
   140010f35:	add    BYTE PTR [rax],al
   140010f37:	add    dl,ch
   140010f39:	adc    al,BYTE PTR [rcx]
   140010f3b:	add    BYTE PTR [rax],al
   140010f3d:	add    BYTE PTR [rax],al
   140010f3f:	add    BYTE PTR [rdx+0x12],al
   140010f42:	add    DWORD PTR [rax],eax
   140010f44:	add    BYTE PTR [rax],al
   140010f46:	add    BYTE PTR [rax],al
   140010f48:	xor    BYTE PTR [rdx],dl
   140010f4a:	add    DWORD PTR [rax],eax
   140010f4c:	add    BYTE PTR [rax],al
   140010f4e:	add    BYTE PTR [rax],al
   140010f50:	hlt    
   140010f51:	adc    al,BYTE PTR [rcx]
   140010f53:	add    BYTE PTR [rax],al
   140010f55:	add    BYTE PTR [rax],al
   140010f57:	add    BYTE PTR [rdx],al
   140010f59:	adc    eax,DWORD PTR [rcx]
   140010f5b:	add    BYTE PTR [rax],al
   140010f5d:	add    BYTE PTR [rax],al
   140010f5f:	add    BYTE PTR [rdx],dl
   140010f61:	adc    al,BYTE PTR [rcx]
   140010f63:	add    BYTE PTR [rax],al
   140010f65:	add    BYTE PTR [rax],al
   140010f67:	add    BYTE PTR [rdx+rdx*1],al
   140010f6a:	add    DWORD PTR [rax],eax
   140010f6c:	add    BYTE PTR [rax],al
   140010f6e:	add    BYTE PTR [rax],al
   140010f70:	or     al,0x13
   140010f72:	add    DWORD PTR [rax],eax
   140010f74:	add    BYTE PTR [rax],al
   140010f76:	add    BYTE PTR [rax],al
   140010f78:	in     al,dx
   140010f79:	adc    DWORD PTR [rcx],eax
   140010f7b:	add    BYTE PTR [rax],al
   140010f7d:	add    BYTE PTR [rax],al
   140010f7f:	add    dh,dl
   140010f81:	adc    DWORD PTR [rcx],eax
   140010f83:	add    BYTE PTR [rax],al
   140010f85:	add    BYTE PTR [rax],al
   140010f87:	add    BYTE PTR [rbx+rdx*1],ah
   140010f8a:	add    DWORD PTR [rax],eax
   140010f8c:	add    BYTE PTR [rax],al
   140010f8e:	add    BYTE PTR [rax],al
   140010f90:	retf   0x111
   140010f93:	add    BYTE PTR [rax],al
   140010f95:	add    BYTE PTR [rax],al
   140010f97:	add    BYTE PTR [rdx+0x111],ch
   140010f9d:	add    BYTE PTR [rax],al
   140010f9f:	add    BYTE PTR [rsi],ch
   140010fa1:	adc    eax,DWORD PTR [rcx]
   140010fa3:	add    BYTE PTR [rax],al
   140010fa5:	add    BYTE PTR [rax],al
   140010fa7:	add    BYTE PTR [rax+0x111],ah
   140010fad:	add    BYTE PTR [rax],al
   140010faf:	add    BYTE PTR [rdx+0x111],al
   140010fb5:	add    BYTE PTR [rax],al
   140010fb7:	add    BYTE PTR [rsi+0x11],dh
   140010fba:	add    DWORD PTR [rax],eax
   140010fbc:	add    BYTE PTR [rax],al
   140010fbe:	add    BYTE PTR [rax],al
   140010fc0:	pop    rax
   140010fc1:	adc    DWORD PTR [rcx],eax
   140010fc3:	add    BYTE PTR [rax],al
   140010fc5:	add    BYTE PTR [rax],al
   140010fc7:	add    BYTE PTR [rsi+0x11],cl
   140010fca:	add    DWORD PTR [rax],eax
   140010fcc:	add    BYTE PTR [rax],al
   140010fce:	add    BYTE PTR [rax],al
   140010fd0:	adc    DWORD PTR ss:[rcx],eax
   140010fd3:	add    BYTE PTR [rax],al
   140010fd5:	add    BYTE PTR [rax],al
   140010fd7:	add    BYTE PTR [rsi],dl
   140010fd9:	adc    DWORD PTR [rcx],eax
   140010fdb:	add    BYTE PTR [rax],al
   140010fdd:	add    BYTE PTR [rax],al
   140010fdf:	add    BYTE PTR [rdx],cl
   140010fe1:	adc    DWORD PTR [rcx],eax
   140010fe3:	add    BYTE PTR [rax],al
   140010fe5:	add    BYTE PTR [rax],al
   140010fe7:	add    dh,bh
   140010fe9:	adc    BYTE PTR [rcx],al
   140010feb:	add    BYTE PTR [rax],al
   140010fed:	add    BYTE PTR [rax],al
   140010fef:	add    BYTE PTR [rax],ah
   140010ff1:	adc    al,BYTE PTR [rcx]
   140010ff3:	add    BYTE PTR [rax],al
   140010ff5:	add    BYTE PTR [rax],al
   140010ff7:	add    BYTE PTR [rbx+rbx*1+0x1],al
   140010ffb:	add    BYTE PTR [rax],al
   140010ffd:	add    BYTE PTR [rax],al
   140010fff:	add    BYTE PTR [rdx+0x110],dh
   140011005:	add    BYTE PTR [rax],al
   140011007:	add    dl,dh
   140011009:	adc    BYTE PTR [rcx],al
   14001100b:	add    BYTE PTR [rax],al
   14001100d:	add    BYTE PTR [rax],al
   14001100f:	add    dl,ch
   140011011:	adc    BYTE PTR [rcx],al
   140011013:	add    BYTE PTR [rax],al
   140011015:	add    BYTE PTR [rax],al
   140011017:	add    al,ah
   140011019:	adc    BYTE PTR [rcx],al
   14001101b:	add    BYTE PTR [rax],al
   14001101d:	add    BYTE PTR [rax],al
   14001101f:	add    ah,dl
   140011021:	adc    BYTE PTR [rcx],al
   140011023:	add    BYTE PTR [rax],al
   140011025:	add    BYTE PTR [rax],al
   140011027:	add    dl,al
   140011029:	adc    BYTE PTR [rcx],al
   14001102b:	add    BYTE PTR [rax],al
   14001102d:	add    BYTE PTR [rax],al
   14001102f:	add    BYTE PTR [rdx+0x1b],bl
   140011032:	add    DWORD PTR [rax],eax
	...
   140011040:	xor    DWORD PTR [rax],eax
   140011042:	rex.XB push 0x654e7261
   140011048:	js     0x1400110be
   14001104a:	push   rdi
   14001104b:	add    BYTE PTR [rsi+0x736f5002],al
   140011051:	je     0x1400110a7
   140011053:	push   0x64616572
   140011058:	rex.WRB
   140011059:	gs jae 0x1400110cf
   14001105c:	(bad)  
   14001105d:	addr32 gs push rdi
   140011060:	add    BYTE PTR [rax],al
   140011062:	js     0x140011065
   140011064:	rex.RXB
   140011065:	gs je  0x1400110b5
   140011068:	gs jae 0x1400110de
   14001106b:	(bad)  
   14001106c:	addr32 gs push rdi
   14001106f:	add    BYTE PTR [rbx+0x3],ch
   140011072:	push   rsp
   140011073:	jb     0x1400110d6
   140011075:	outs   dx,BYTE PTR ds:[rsi]
   140011076:	jae    0x1400110e4
   140011078:	(bad)  
   140011079:	je     0x1400110e0
   14001107b:	rex.WRB
   14001107c:	gs jae 0x1400110f2
   14001107f:	(bad)  
   140011080:	add    BYTE PTR gs:[eax],al
   140011084:	mov    dh,0x0
   140011086:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14001108e:	rex.WRB
   14001108f:	gs jae 0x140011105
   140011092:	(bad)  
   140011093:	addr32 gs push rdi
   140011096:	add    BYTE PTR [rax],al
   140011098:	cmp    al,0x0
   14001109a:	rex.XB push 0x70557261
   1400110a0:	jo     0x140011107
   1400110a2:	jb     0x1400110fb
   1400110a4:	add    BYTE PTR [rax],al
   1400110a6:	push   rbp
   1400110a7:	push   rbx
   1400110a8:	rex.RB push r10
   1400110aa:	xor    esi,DWORD PTR [rdx]
   1400110ac:	cs fs ins BYTE PTR es:[rdi],dx
   1400110af:	ins    BYTE PTR es:[rdi],dx
   1400110b0:	add    BYTE PTR [rax],al
   1400110b2:	adc    al,0x0
   1400110b4:	(bad)  
   1400110b5:	(bad)  
   1400110b6:	xor    eax,DWORD PTR [rax+0x59]
   1400110b9:	pop    r8
   1400110bb:	push   rax
   1400110bc:	rex.RB
   1400110bd:	pop    r8
   1400110bf:	rex pop rdx
   1400110c1:	add    BYTE PTR [rbx],ah
   1400110c3:	add    BYTE PTR [rdi],bh
   1400110c5:	(bad)  
   1400110c6:	pop    rdi
   1400110c7:	push   rsi
   1400110c8:	rex pop rcx
   1400110ca:	pop    r8
   1400110cc:	push   rax
   1400110cd:	rex.RB
   1400110ce:	pop    r8
   1400110d0:	rex pop rdx
   1400110d2:	add    BYTE PTR [rax],al
   1400110d4:	or     eax,0x73637705
   1400110d9:	outs   dx,BYTE PTR ds:[rsi]
   1400110da:	movsxd esi,DWORD PTR [rax+0x79]
   1400110dd:	pop    rdi
   1400110de:	jae    0x1400110e0
   1400110e0:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   1400110e7:	movsxd eax,DWORD PTR [rax]
   1400110e9:	add    BYTE PTR [rsp+rax*1+0x66],cl
   1400110ed:	jb     0x140011154
   1400110ef:	add    BYTE PTR gs:[rax],al
   1400110f2:	xchg   ebx,eax
   1400110f3:	add    al,0x6d
   1400110f5:	gs ins DWORD PTR es:[rdi],dx
   1400110f7:	movsxd esi,DWORD PTR [rax+0x79]
   1400110fa:	pop    rdi
   1400110fb:	jae    0x1400110fd
   1400110fd:	add    BYTE PTR [rip+0x73637705],al        # 0x1b3648808
   140011103:	movsxd esi,DWORD PTR [rax+0x79]
   140011106:	pop    rdi
   140011107:	jae    0x140011109
   140011109:	add    BYTE PTR [rax],al
   14001110b:	add    eax,0x63736377
   140011110:	(bad)  
   140011111:	je     0x140011172
   140011113:	jae    0x140011115
   140011115:	add    BYTE PTR [rdx],cl
   140011117:	add    BYTE PTR [rdi],bh
   140011119:	(bad)  
   14001111a:	xor    BYTE PTR [rbp+0x78],ah
   14001111d:	movsxd esp,DWORD PTR [rbp+0x70]
   140011120:	je     0x14001118b
   140011122:	outs   dx,DWORD PTR ds:[rsi]
   140011123:	outs   dx,BYTE PTR ds:[rsi]
   140011124:	rex
   140011125:	rex push rcx
   140011127:	rex.RB
   140011128:	rex.B
   140011129:	rex.B
   14001112a:	rex
   14001112b:	rex.B
   14001112c:	rex.RB
   14001112d:	rex.X push rcx
   14001112f:	rex.RB
   140011130:	rex.X
   140011131:	rex.R
   140011132:	rex pop rdx
   140011134:	add    BYTE PTR [rax],al
   140011136:	adc    DWORD PTR [rax],eax
   140011138:	(bad)  
   140011139:	(bad)  
   14001113a:	xor    DWORD PTR [rbp+0x78],esp
   14001113d:	movsxd esp,DWORD PTR [rbp+0x70]
   140011140:	je     0x1400111ab
   140011142:	outs   dx,DWORD PTR ds:[rsi]
   140011143:	outs   dx,BYTE PTR ds:[rsi]
   140011144:	rex
   140011145:	rex push rbp
   140011147:	rex.RB
   140011148:	rex.B
   140011149:	rex.B
   14001114a:	rex pop rax
   14001114c:	pop    rdx
   14001114d:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   140011154:	outs   dx,DWORD PTR ds:[rsi]
   140011155:	jbe    0x1400111bc
   140011157:	add    BYTE PTR [rax+rax*1],cl
   14001115a:	(bad)  
   14001115b:	(bad)  
   14001115c:	xor    BYTE PTR [rbp+0x78],ah
   14001115f:	movsxd esp,DWORD PTR [rbp+0x70]
   140011162:	je     0x1400111cd
   140011164:	outs   dx,DWORD PTR ds:[rsi]
   140011165:	outs   dx,BYTE PTR ds:[rsi]
   140011166:	rex
   140011167:	rex push rcx
   140011169:	rex.RB
   14001116a:	rex.B
   14001116b:	rex.B
   14001116c:	rex
   14001116d:	rex.B
   14001116e:	rex.RB
   14001116f:	rex.X push rsi
   140011171:	xor    BYTE PTR [rax+0x40],al
   140011174:	pop    rdx
   140011175:	add    BYTE PTR [rsi+0x75705f02],bl
   14001117b:	jb     0x1400111e2
   14001117d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140011180:	ins    BYTE PTR es:[rdi],dx
   140011181:	add    BYTE PTR [rcx],dh
   140011183:	add    BYTE PTR [rdi],bh
   140011185:	ja     0x1400111ef
   140011187:	(bad)  
   140011188:	je     0x1400111ca
   14001118a:	gs js  0x1400111f0
   14001118d:	gs jo  0x140011204
   140011190:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   140011197:	rex.X
   140011198:	push   r8
   14001119a:	rex.RB
   14001119b:	rex.X
   14001119c:	rex.R pop rax
   14001119e:	pop    rdx
   14001119f:	add    BYTE PTR [rsi+0x6d656d04],dl
   1400111a5:	jae    0x14001120c
   1400111a7:	je     0x1400111a9
   1400111a9:	add    BYTE PTR [rbx],cl
   1400111ab:	add    BYTE PTR [rdi],bh
   1400111ad:	(bad)  
   1400111ae:	xor    BYTE PTR [rbp+0x78],ah
   1400111b1:	movsxd esp,DWORD PTR [rbp+0x70]
   1400111b4:	je     0x14001121f
   1400111b6:	outs   dx,DWORD PTR ds:[rsi]
   1400111b7:	outs   dx,BYTE PTR ds:[rsi]
   1400111b8:	rex
   1400111b9:	rex push rcx
   1400111bb:	rex.RB
   1400111bc:	rex.B
   1400111bd:	rex.B
   1400111be:	rex
   1400111bf:	rex.B
   1400111c0:	rex.RB
   1400111c1:	rex.X push rcx
   1400111c3:	rex.RB
   1400111c4:	rex.X
   1400111c5:	rex.R
   1400111c6:	rex.W
   1400111c7:	rex pop rdx
   1400111c9:	add    BYTE PTR [rdi+0x61635f00],bh
   1400111cf:	ins    BYTE PTR es:[rdi],dx
   1400111d0:	ins    BYTE PTR es:[rdi],dx
   1400111d1:	outs   dx,BYTE PTR ds:[rsi]
   1400111d2:	gs ja  0x14001123d
   1400111d5:	add    BYTE PTR [rbx+0x0],cl
   1400111d8:	pop    rdi
   1400111d9:	rex.XB js 0x140011254
   1400111dc:	push   rsp
   1400111dd:	push   0x45776f72
   1400111e2:	js     0x140011247
   1400111e4:	gs jo  0x14001125b
   1400111e7:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0000
   1400111ee:	(bad)  
   1400111ef:	(bad)  
   1400111f0:	xor    BYTE PTR [rbp+0x78],ah
   1400111f3:	movsxd esp,DWORD PTR [rbp+0x70]
   1400111f6:	je     0x140011261
   1400111f8:	outs   dx,DWORD PTR ds:[rsi]
   1400111f9:	outs   dx,BYTE PTR ds:[rsi]
   1400111fa:	rex
   1400111fb:	rex push rcx
   1400111fd:	rex.RB
   1400111fe:	rex.B
   1400111ff:	rex.B
   140011200:	rex pop rax
   140011202:	pop    rdx
   140011203:	add    BYTE PTR [rbp+0x0],dl
   140011206:	pop    rdi
   140011207:	pop    rax
   140011208:	movsxd esi,DWORD PTR [rax+0x74]
   14001120b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140011214:	pop    rdi
   140011215:	(bad)  
   140011216:	ins    DWORD PTR es:[rdi],dx
   140011217:	jae    0x140011280
   140011219:	pop    rdi
   14001121a:	gs js  0x140011286
   14001121d:	je     0x14001121f
   14001121f:	add    BYTE PTR [rdi+0x0],bh
   140011222:	pop    rdi
   140011223:	pop    rdi
   140011224:	addr32 gs je 0x140011295
   140011228:	(bad)  
   140011229:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140011230:	mov    es,WORD PTR [rax]
   140011232:	pop    rdi
   140011233:	pop    rdi
   140011234:	jae    0x14001129b
   140011236:	je     0x140011297
   140011238:	(bad)  
   140011239:	jo     0x1400112ab
   14001123b:	pop    rdi
   14001123c:	je     0x1400112b7
   14001123e:	jo     0x1400112a5
   140011240:	add    BYTE PTR [rax],al
   140011242:	xor    al,BYTE PTR [riz*2+0x746978]
   140011249:	add    BYTE PTR [rsi],cl
   14001124b:	add    DWORD PTR [rdi+0x65],ebx
   14001124e:	js     0x1400112b9
   140011250:	je     0x140011252
   140011252:	rol    DWORD PTR [rax],0x5f
   140011255:	movsxd esp,DWORD PTR [rbp+0x78]
   140011258:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   140011260:	jae    0x1400112cf
   140011262:	(bad)
   140011267:	add    BYTE PTR fs:[rax],al
   14001126a:	nop
   14001126b:	add    BYTE PTR [rdi+0x5f],bl
   14001126e:	jae    0x1400112d5
   140011270:	je     0x1400112e7
   140011272:	jae    0x1400112d9
   140011274:	jb     0x1400112e3
   140011276:	(bad)  
   140011277:	je     0x1400112e1
   140011279:	gs jb  0x1400112ee
   14001127c:	add    BYTE PTR [rax],al
   14001127e:	jge    0x140011281
   140011280:	pop    rdi
   140011281:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140011288:	ins    DWORD PTR es:[rdi],dx
   140011289:	add    BYTE PTR [rdi+0x0],dl
   14001128c:	pop    rdi
   14001128d:	pop    rdi
   14001128e:	rex.XB pop r15
   140011290:	jae    0x140011302
   140011292:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140011296:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14001129d:	ins    BYTE PTR es:[rdi],dx
   14001129e:	gs jb  0x1400112a1
   1400112a1:	add    BYTE PTR [rdx+0x63615f00],ah
   1400112a7:	ins    DWORD PTR es:[rdi],dx
   1400112a8:	fs ins BYTE PTR es:[rdi],dx
   1400112aa:	outs   dx,BYTE PTR ds:[rsi]
   1400112ab:	add    BYTE PTR [rdi],ah
   1400112ad:	add    DWORD PTR [rdi+0x66],ebx
   1400112b0:	ins    DWORD PTR es:[rdi],dx
   1400112b1:	outs   dx,DWORD PTR ds:[rsi]
   1400112b2:	fs add BYTE PTR gs:[rax],al
   1400112b6:	rol    BYTE PTR [rax],cl
   1400112b8:	pop    rdi
   1400112b9:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400112bc:	ins    DWORD PTR es:[rdi],dx
   1400112bd:	outs   dx,DWORD PTR ds:[rsi]
   1400112be:	fs add BYTE PTR gs:[rax],al
   1400112c2:	ins    DWORD PTR es:[rdi],dx
   1400112c3:	jae    0x14001133b
   1400112c5:	movsxd esi,DWORD PTR [rdx+0x74]
   1400112c8:	cs fs ins BYTE PTR es:[rdi],dx
   1400112cb:	ins    BYTE PTR es:[rdi],dx
   1400112cc:	add    BYTE PTR [rax],al
   1400112ce:	(bad)  
   1400112cf:	add    BYTE PTR [rdi],bh
   1400112d1:	je     0x140011338
   1400112d3:	jb     0x140011342
   1400112d5:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400112dc:	pop    rcx
   1400112dd:	pop    r8
   1400112df:	pop    rax
   1400112e0:	pop    rdx
   1400112e1:	add    dh,ah
   1400112e3:	add    DWORD PTR [rdi+0x6c],ebx
   1400112e6:	outs   dx,DWORD PTR ds:[rsi]
   1400112e7:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400112ea:	add    ebx,DWORD PTR [r15+0x75]
   1400112ee:	outs   dx,BYTE PTR ds:[rsi]
   1400112ef:	ins    BYTE PTR es:[rdi],dx
   1400112f0:	outs   dx,DWORD PTR ds:[rsi]
   1400112f1:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400112f4:	jnp    0x1400112f6
   1400112f6:	pop    rdi
   1400112f7:	pop    rdi
   1400112f8:	fs ins BYTE PTR es:[rdi],dx
   1400112fa:	ins    BYTE PTR es:[rdi],dx
   1400112fb:	outs   dx,DWORD PTR ds:[rsi]
   1400112fc:	outs   dx,BYTE PTR ds:[rsi]
   1400112fd:	gs js  0x140011369
   140011300:	je     0x140011302
   140011302:	nop
   140011303:	add    bl,BYTE PTR [rdi+0x6f]
   140011306:	outs   dx,BYTE PTR ds:[rsi]
   140011307:	gs js  0x140011373
   14001130a:	je     0x14001130c
   14001130c:	adc    al,BYTE PTR [rax]
   14001130e:	(bad)  
   14001130f:	(bad)  
   140011310:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   140011314:	gs pop rdi
   140011316:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14001131d:	rex.RB
   14001131e:	rex.B
   14001131f:	rex.B
   140011320:	rex pop rax
   140011322:	pop    rdx
   140011323:	add    BYTE PTR [rip+0x72655f01],al        # 0x1b266722a
   140011329:	jb     0x140011399
   14001132b:	outs   dx,DWORD PTR ds:[rsi]
   14001132c:	add    BYTE PTR [rax],al
   14001132e:	test   eax,0x61657204
   140011333:	ins    BYTE PTR es:[rdi],dx
   140011334:	ins    BYTE PTR es:[rdi],dx
   140011335:	outs   dx,DWORD PTR ds:[rsi]
   140011336:	movsxd eax,DWORD PTR [rax]
   140011338:	or     BYTE PTR [rax],al
   14001133a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001133c:	rex.XB jb 0x1400113a4
   14001133f:	(bad)  
   140011340:	je     0x1400113a7
   140011342:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011344:	jae    0x1400113ba
   140011346:	(bad)  
   140011347:	outs   dx,BYTE PTR ds:[rsi]
   140011348:	movsxd esp,DWORD PTR [rbp+0x0]
   14001134b:	add    BYTE PTR [rbx],al
   14001134d:	add    BYTE PTR [rbp+0x76],al
   140011350:	outs   dx,BYTE PTR gs:[rsi]
   140011352:	je     0x1400113a6
   140011354:	imul   esi,DWORD PTR gs:[ebx+0x74],0x5007265
   14001135d:	add    BYTE PTR [rbp+0x76],al
   140011360:	outs   dx,BYTE PTR gs:[rsi]
   140011362:	je     0x1400113b9
   140011364:	outs   dx,BYTE PTR ds:[rsi]
   140011365:	jb     0x1400113cc
   140011367:	imul   esi,DWORD PTR [ebx+0x74],0x32007265
   14001136f:	add    BYTE PTR [rdi+0x70],cl
   140011372:	outs   dx,BYTE PTR gs:[rsi]
   140011374:	push   rsp
   140011375:	push   0x64616572
   14001137a:	push   rsp
   14001137b:	outs   dx,DWORD PTR ds:[rsi]
   14001137c:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140011380:	adc    BYTE PTR [rax],al
   140011382:	rex.RXB
   140011383:	gs je  0x1400113c9
   140011386:	jne    0x1400113fa
   140011388:	jb     0x1400113ef
   14001138a:	outs   dx,BYTE PTR ds:[rsi]
   14001138b:	je     0x1400113e1
   14001138d:	push   0x64616572
   140011392:	add    BYTE PTR [rax],al
   140011394:	add    eax,0x74654700
   140011399:	rex.WR (bad) 
   14001139b:	jae    0x140011411
   14001139d:	rex.RB jb 0x140011412
   1400113a0:	outs   dx,DWORD PTR ds:[rsi]
   1400113a1:	jb     0x1400113a3
   1400113a3:	add    BYTE PTR [rax],dh
   1400113a5:	add    BYTE PTR [rdi+0x70],cl
   1400113a8:	outs   dx,BYTE PTR gs:[rsi]
   1400113aa:	push   rax
   1400113ab:	jb     0x14001141c
   1400113ad:	movsxd esp,DWORD PTR [rbp+0x73]
   1400113b0:	jae    0x140011406
   1400113b2:	outs   dx,DWORD PTR ds:[rsi]
   1400113b3:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400113b7:	add    BYTE PTR [rax+rax*1],cl
   1400113ba:	rex.RXB
   1400113bb:	gs je  0x140011401
   1400113be:	jne    0x140011432
   1400113c0:	jb     0x140011427
   1400113c2:	outs   dx,BYTE PTR ds:[rsi]
   1400113c3:	je     0x140011415
   1400113c5:	jb     0x140011436
   1400113c7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400113ca:	jae    0x1400113cc
   1400113cc:	add    BYTE PTR [rdi+0x65],al
   1400113d0:	je     0x140011426
   1400113d2:	outs   dx,DWORD PTR ds:[rsi]
   1400113d3:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   1400113d7:	outs   dx,BYTE PTR ds:[rsi]
   1400113d8:	outs   dx,WORD PTR ds:[rsi]
   1400113da:	jb     0x140011449
   1400113dc:	(bad)  
   1400113dd:	je     0x140011448
   1400113df:	outs   dx,DWORD PTR ds:[rsi]
   1400113e0:	outs   dx,BYTE PTR ds:[rsi]
   1400113e1:	add    BYTE PTR [rax],al
   1400113e3:	add    BYTE PTR [rbx+0x6c],al
   1400113e6:	outs   dx,DWORD PTR ds:[rsi]
   1400113e7:	jae    0x14001144e
   1400113e9:	rex.W (bad) 
   1400113eb:	outs   dx,BYTE PTR ds:[rsi]
   1400113ec:	fs ins BYTE PTR es:[rdi],dx
   1400113ee:	add    BYTE PTR gs:[rbx],dl
   1400113f1:	add    BYTE PTR [rdi+0x65],al
   1400113f4:	je     0x140011443
   1400113f6:	outs   dx,DWORD PTR ds:[rsi]
   1400113f7:	fs jne 0x140011466
   1400113fa:	gs rex.W (bad) 
   1400113fd:	outs   dx,BYTE PTR ds:[rsi]
   1400113fe:	fs ins BYTE PTR es:[rdi],dx
   140011400:	gs push rdi
   140011402:	add    BYTE PTR [rax],al
   140011404:	adc    al,0x0
   140011406:	rex.RXB
   140011407:	gs je  0x14001145a
   14001140a:	jb     0x14001147b
   14001140c:	movsxd eax,DWORD PTR [rcx+0x64]
   14001140f:	fs jb  0x140011477
   140011412:	jae    0x140011487
   140011414:	add    BYTE PTR [rax],al
   140011416:	sbb    al,0x0
   140011418:	rex.RXB
   140011419:	gs je  0x140011472
   14001141c:	gs jb  0x140011492
   14001141f:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   140011426:	or     eax,DWORD PTR [rax]
   140011428:	rex.RX jb 0x140011490
   14001142b:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   140011434:	(bad)  
   140011435:	add    BYTE PTR [rbx+0x6f],al
   140011438:	push   rsp
   140011439:	(bad)  
   14001143a:	jae    0x1400114a7
   14001143c:	rex.WRB
   14001143d:	gs ins DWORD PTR es:[rdi],dx
   14001143f:	rex.RX jb 0x1400114a7
   140011442:	add    BYTE PTR gs:[rdi],dl
   140011445:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   140011449:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140011452:	js     0x1400114ab
   140011454:	add    BYTE PTR [rax],al
   140011456:	add    BYTE PTR [rax],al
   140011458:	push   rdx
   140011459:	gs rex.XB ins BYTE PTR es:[edi],dx
   14001145d:	outs   dx,DWORD PTR ds:[rsi]
   14001145e:	jae    0x1400114c5
   140011460:	rex.WXB
   140011461:	gs jns 0x140011464
   140011464:	and    DWORD PTR [rax],eax
   140011466:	push   rdx
   140011467:	gs addr32 push rcx
   14001146a:	jne    0x1400114d1
   14001146c:	jb     0x1400114e7
   14001146e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011470:	outs   dx,WORD PTR ds:[rsi]
   140011472:	rex.WXB
   140011473:	gs jns 0x1400114cd
   140011476:	add    BYTE PTR [rax],al
   140011478:	(bad)  
   140011479:	add    BYTE PTR [rdx+0x65],dl
   14001147c:	rex.RB outs dx,BYTE PTR ds:[esi]
   14001147f:	jne    0x1400114ee
   140011481:	rex.WXB
   140011482:	gs jns 0x1400114ca
   140011485:	js     0x1400114de
   140011487:	add    BYTE PTR [rsi],bl
   140011489:	add    BYTE PTR [rdx+0x65],dl
   14001148c:	addr32 rex.WRXB jo 0x1400114f5
   140011490:	outs   dx,BYTE PTR ds:[rsi]
   140011491:	rex.WXB
   140011492:	gs jns 0x1400114da
   140011495:	js     0x1400114ee
   140011497:	add    BYTE PTR [rax+rax*1],ch
   14001149a:	push   rdx
   14001149b:	gs addr32 push rbx
   14001149e:	gs je  0x1400114f7
   1400114a1:	(bad)  
   1400114a2:	ins    BYTE PTR es:[rdi],dx
   1400114a3:	jne    0x14001150a
   1400114a5:	rex.RB js 0x1400114ff
   1400114a8:	add    BYTE PTR [rax],al
   1400114aa:	add    eax,DWORD PTR [rax]
   1400114ac:	push   rdx
   1400114ad:	gs addr32 rex.XB jb 0x140011517
   1400114b2:	(bad)  
   1400114b3:	je     0x14001151a
   1400114b5:	rex.WXB
   1400114b6:	gs jns 0x1400114fe
   1400114b9:	js     0x140011512
   1400114bb:	add    BYTE PTR [rbx],cl
   1400114bd:	add    BYTE PTR [rdx+0x65],dl
   1400114c0:	addr32 rex.R
   1400114c2:	gs ins BYTE PTR es:[rdi],dx
   1400114c4:	gs je  0x14001152c
   1400114c7:	push   rsi
   1400114c8:	(bad)  
   1400114c9:	ins    BYTE PTR es:[rdi],dx
   1400114ca:	jne    0x140011531
   1400114cc:	push   rdi
   1400114cd:	add    BYTE PTR [rax+0x0],al
   1400114d0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400114d2:	push   rsp
   1400114d3:	(bad)  
   1400114d4:	jae    0x140011541
   1400114d6:	rex.WRB
   1400114d7:	gs ins DWORD PTR es:[rdi],dx
   1400114d9:	push   rdx
   1400114da:	gs (bad) 
   1400114dc:	ins    BYTE PTR es:[rdi],dx
   1400114dd:	ins    BYTE PTR es:[rdi],dx
   1400114de:	outs   dx,DWORD PTR ds:[rsi]
   1400114df:	movsxd eax,DWORD PTR [rax]
   1400114e1:	add    BYTE PTR [rip+0x61654c00],bl        # 0x1a16660e7
   1400114e7:	jbe    0x14001154e
   1400114e9:	rex.XB jb 0x140011555
   1400114ec:	je     0x140011557
   1400114ee:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400114f1:	push   rbx
   1400114f2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400114f7:	outs   dx,BYTE PTR ds:[rsi]
   1400114f8:	add    BYTE PTR [rax],al
   1400114fa:	(bad)  
   1400114fb:	add    BYTE PTR [rdx+0x61],dl
   1400114fe:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140011505:	jo     0x14001157b
   140011507:	imul   ebp,DWORD PTR [rdi+0x6e],0x110000
   14001150e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140011510:	je     0x140011577
   140011512:	jb     0x140011557
   140011514:	jb     0x14001157f
   140011516:	je     0x140011581
   140011518:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001151b:	push   rbx
   14001151c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140011521:	outs   dx,BYTE PTR ds:[rsi]
   140011522:	add    BYTE PTR [rax],al
   140011524:	add    BYTE PTR ds:[rbx+0x6f],al
   140011528:	push   rsp
   140011529:	(bad)  
   14001152a:	jae    0x140011597
   14001152c:	rex.WRB
   14001152d:	gs ins DWORD PTR es:[rdi],dx
   14001152f:	rex.B ins BYTE PTR es:[rdi],dx
   140011531:	ins    BYTE PTR es:[rdi],dx
   140011532:	outs   dx,DWORD PTR ds:[rsi]
   140011533:	movsxd eax,DWORD PTR [rax]
   140011535:	add    BYTE PTR [rsi],al
   140011537:	add    BYTE PTR [rbp+0x75],cl
   14001153a:	ins    BYTE PTR es:[rdi],dx
   14001153b:	je     0x1400115a6
   14001153d:	rex.X jns 0x1400115b4
   140011540:	gs push rsp
   140011542:	outs   dx,DWORD PTR ds:[rsi]
   140011543:	push   rdi
   140011544:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14001154c:	(bad)  
   14001154d:	add    BYTE PTR [rbx+0x69],dl
   140011550:	jp     0x1400115b7
   140011552:	outs   dx,DWORD PTR ds:[rsi]
   140011553:	push   dx
   140011555:	gs jae 0x1400115c7
   140011558:	jne    0x1400115cc
   14001155a:	movsxd esp,DWORD PTR [rbp+0x0]
   14001155d:	add    BYTE PTR [rcx],bl
   14001155f:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   140011563:	fs push rdx
   140011565:	gs jae 0x1400115d7
   140011568:	jne    0x1400115dc
   14001156a:	movsxd esp,DWORD PTR [rbp+0x0]
   14001156d:	add    BYTE PTR [rax],cl
   14001156f:	add    BYTE PTR [rsi+0x69],al
   140011572:	outs   dx,BYTE PTR ds:[rsi]
   140011573:	fs push rdx
   140011575:	gs jae 0x1400115e7
   140011578:	jne    0x1400115ec
   14001157a:	movsxd esp,DWORD PTR [rbp+0x45]
   14001157d:	js     0x1400115d6
   14001157f:	add    BYTE PTR [rdi],cl
   140011581:	add    BYTE PTR [rdi+0x65],al
   140011584:	je     0x1400115d3
   140011586:	outs   dx,DWORD PTR ds:[rsi]
   140011587:	fs jne 0x1400115f6
   14001158a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140011594:	add    BYTE PTR [rax],al
   140011596:	sbb    BYTE PTR [rax],al
   140011598:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001159a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400115a2:	rex.XB jb 0x14001160e
   1400115a5:	je     0x140011610
   1400115a7:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400115aa:	push   rbx
   1400115ab:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400115b0:	outs   dx,BYTE PTR ds:[rsi]
   1400115b1:	add    BYTE PTR [rdi],cl
   1400115b3:	add    BYTE PTR [rbp+riz*2+0x6c],al
   1400115b7:	gs je  0x14001161f
   1400115ba:	rex.XB jb 0x140011626
   1400115bd:	je     0x140011628
   1400115bf:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400115c2:	push   rbx
   1400115c3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400115c8:	outs   dx,BYTE PTR ds:[rsi]
   1400115c9:	add    BYTE PTR [rcx],dl
   1400115cb:	add    BYTE PTR [rdi+0x65],al
   1400115ce:	je     0x140011613
   1400115d0:	jne    0x140011644
   1400115d2:	jb     0x140011639
   1400115d4:	outs   dx,BYTE PTR ds:[rsi]
   1400115d5:	je     0x14001162b
   1400115d7:	push   0x64616572
   1400115dc:	rex.WB
   1400115dd:	add    BYTE PTR fs:[rax],al
   1400115e0:	sub    DWORD PTR [rax],eax
   1400115e2:	push   rbx
   1400115e3:	gs je  0x14001162b
   1400115e6:	jbe    0x14001164d
   1400115e8:	outs   dx,BYTE PTR ds:[rsi]
   1400115e9:	je     0x1400115eb
   1400115eb:	add    BYTE PTR [rsi],al
   1400115ed:	add    BYTE PTR [rbx+0x72],al
   1400115f0:	gs (bad) 
   1400115f2:	je     0x140011659
   1400115f4:	rex.RB jbe 0x14001165c
   1400115f7:	outs   dx,BYTE PTR ds:[rsi]
   1400115f8:	je     0x140011651
   1400115fa:	add    BYTE PTR [rax],al
   1400115fc:	(bad)  
   1400115fd:	add    BYTE PTR [rbx+0x72],al
   140011600:	gs (bad) 
   140011602:	je     0x140011669
   140011604:	push   rsp
   140011605:	push   0x64616572
   14001160a:	add    BYTE PTR [rax],al
   14001160c:	add    BYTE PTR ss:[rdi+0x61],dl
   140011610:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140011618:	ins    BYTE PTR es:[edi],dx
   14001161a:	gs rex.WRXB (bad) 
   14001161d:	push   0x65
   14001161f:	movsxd esi,DWORD PTR [rax+rax*1+0xa]
   140011623:	add    BYTE PTR [rbx+0x72],al
   140011626:	gs (bad) 
   140011628:	je     0x14001168f
   14001162a:	rex.WRB jne 0x1400116a1
   14001162d:	gs js  0x140011687
   140011630:	add    BYTE PTR [rax],al
   140011632:	or     eax,0x74654700
   140011637:	rex.XB jne 0x1400116ac
   14001163a:	jb     0x1400116a1
   14001163c:	outs   dx,BYTE PTR ds:[rsi]
   14001163d:	je     0x14001168f
   14001163f:	jb     0x1400116b0
   140011641:	movsxd esp,DWORD PTR [rbp+0x73]
   140011644:	jae    0x14001168f
   140011646:	add    BYTE PTR fs:[rax+rax*1],al
   14001164a:	rex.XB jb 0x1400116b2
   14001164d:	(bad)  
   14001164e:	je     0x1400116b5
   140011650:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140011659:	outs   dx,BYTE PTR ds:[rsi]
   14001165a:	addr32 push rdi
   14001165c:	add    BYTE PTR [rax],al
   14001165e:	str    WORD PTR [rbp+0x61]
   140011662:	jo     0x1400116ba
   140011664:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   14001166b:	ins    BYTE PTR es:[rdi],dx
   14001166c:	add    BYTE PTR gs:[rsi],bl
   14001166f:	add    BYTE PTR [rbp+0x6e],dl
   140011672:	ins    DWORD PTR es:[rdi],dx
   140011673:	(bad)  
   140011674:	jo     0x1400116cc
   140011676:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   14001167d:	ins    BYTE PTR es:[rdi],dx
   14001167e:	add    BYTE PTR gs:[rax],ah
   140011681:	add    BYTE PTR [rdi+0x70],cl
   140011684:	outs   dx,BYTE PTR gs:[rsi]
   140011686:	rex.WRB jne 0x1400116fd
   140011689:	gs js  0x1400116e3
   14001168c:	add    BYTE PTR [rax],al
   14001168e:	and    eax,DWORD PTR [rax]
   140011690:	push   rdx
   140011691:	gs ins BYTE PTR es:[rdi],dx
   140011693:	gs (bad) 
   140011695:	jae    0x1400116fc
   140011697:	rex.WRB jne 0x14001170e
   14001169a:	gs js  0x14001169d
   14001169d:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56d69a3
   1400116a3:	gs jo  0x1400116a6
   1400116a6:	add    eax,0x74654700
   1400116ab:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400116ad:	ins    DWORD PTR es:[rdi],dx
   1400116ae:	ins    DWORD PTR es:[rdi],dx
   1400116af:	(bad)  
   1400116b0:	outs   dx,BYTE PTR ds:[rsi]
   1400116b1:	imul   r13,QWORD PTR fs:[rsi+0x65],0x370057
   1400116ba:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400116bc:	push   rdx
   1400116bd:	gs jae 0x140011735
   1400116c0:	ins    DWORD PTR es:[rdi],dx
   1400116c1:	gs rex.XB ins BYTE PTR es:[rdi],dx
   1400116c4:	(bad)  
   1400116c5:	jae    0x14001173a
   1400116c7:	rex.WRXB (bad) 
   1400116c9:	push   0x65
   1400116cb:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   1400116cf:	add    BYTE PTR [rsi],ah
   1400116d1:	add    BYTE PTR [rbx+0x6f],al
   1400116d4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400116d6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400116de:	rex.RB js 0x1400116e1
   1400116e1:	add    BYTE PTR [rdx+0x0],al
   1400116e4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400116e6:	push   rbp
   1400116e7:	outs   dx,BYTE PTR ds:[rsi]
   1400116e8:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400116ef:	imul   edi,DWORD PTR [rdx+0x65],0x320000
   1400116f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400116f8:	push   rdx
   1400116f9:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   140011702:	(bad)  
   140011703:	jae    0x140011778
   140011705:	rex.WRXB (bad) 
   140011707:	push   0x65
   140011709:	movsxd esi,DWORD PTR [rax+rax*1+0x39]
   14001170d:	add    BYTE PTR [rbx+0x6f],al
   140011710:	push   rdx
   140011711:	gs jbe 0x140011783
   140011714:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   140011718:	(bad)  
   140011719:	jae    0x14001178e
   14001171b:	rex.WRXB (bad) 
   14001171d:	push   0x65
   14001171f:	movsxd esi,DWORD PTR [rax+rax*1+0x50]
   140011723:	add    BYTE PTR [rbx+0x74],dl
   140011726:	jb     0x140011791
   140011728:	outs   dx,BYTE PTR ds:[rsi]
   140011729:	addr32 rex.RX jb 0x14001179c
   14001172d:	ins    DWORD PTR es:[rdi],dx
   14001172e:	rex.RXB push r13
   140011730:	rex.WB
   140011731:	xor    r8b,BYTE PTR [rax]
   140011734:	cmp    al,0x0
   140011736:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011738:	push   rbx
   140011739:	jne    0x1400117ae
   14001173b:	jo     0x1400117a2
   14001173d:	outs   dx,BYTE PTR ds:[rsi]
   14001173e:	fs rex.XB ins BYTE PTR es:[rdi],dx
   140011741:	(bad)  
   140011742:	jae    0x1400117b7
   140011744:	rex.WRXB (bad) 
   140011746:	push   0x65
   140011748:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14001174c:	(bad)  
   14001174d:	add    BYTE PTR [rbp+0x76],al
   140011750:	outs   dx,BYTE PTR gs:[rsi]
   140011752:	je     0x1400117ab
   140011754:	jb     0x1400117bf
   140011756:	je     0x1400117bd
   140011758:	add    BYTE PTR [rax],al
   14001175a:	adc    al,0x0
   14001175c:	rex.WRXB jo 0x1400117c4
   14001175f:	outs   dx,BYTE PTR ds:[rsi]
   140011760:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140011769:	outs   dx,BYTE PTR ds:[rsi]
   14001176a:	addr32 push rdi
   14001176c:	add    BYTE PTR [rax],al
   14001176e:	adc    al,BYTE PTR [rax]
   140011770:	rex.RXB
   140011771:	gs je  0x1400117c1
   140011774:	outs   dx,DWORD PTR ds:[rsi]
   140011775:	fs jne 0x1400117e4
   140011778:	gs rex.W (bad) 
   14001177b:	outs   dx,BYTE PTR ds:[rsi]
   14001177c:	fs ins BYTE PTR es:[rdi],dx
   14001177e:	gs rex.RB js 0x1400117d9
   140011782:	add    BYTE PTR [rax],al
   140011784:	(bad)  
   140011785:	add    BYTE PTR [rdi+0x65],al
   140011788:	je     0x1400117d7
   14001178a:	outs   dx,DWORD PTR ds:[rsi]
   14001178b:	fs jne 0x1400117fa
   14001178e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   140011798:	add    BYTE PTR [rax],al
   14001179a:	and    BYTE PTR [rax],al
   14001179c:	rex.RXB
   14001179d:	gs je  0x1400117f3
   1400117a0:	je     0x140011803
   1400117a2:	jb     0x140011818
   1400117a4:	jne    0x140011816
   1400117a6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400117a8:	outs   dx,WORD PTR ds:[rsi]
   1400117aa:	push   rdi
   1400117ab:	add    BYTE PTR [rdx],al
   1400117ad:	add    BYTE PTR [rdx+0x74],dl
   1400117b0:	ins    BYTE PTR es:[rdi],dx
   1400117b1:	rex.XB (bad) 
   1400117b3:	jo     0x140011829
   1400117b5:	jne    0x140011829
   1400117b7:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400117ba:	outs   dx,BYTE PTR ds:[rsi]
   1400117bb:	je     0x140011822
   1400117bd:	js     0x140011833
   1400117bf:	add    BYTE PTR [rcx],cl
   1400117c1:	add    BYTE PTR [rdx+0x74],dl
   1400117c4:	ins    BYTE PTR es:[rdi],dx
   1400117c5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400117c7:	outs   dx,DWORD PTR ds:[rsi]
   1400117c8:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400117cc:	jne    0x14001183c
   1400117ce:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400117d2:	outs   dx,BYTE PTR ds:[rsi]
   1400117d3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400117d5:	je     0x140011849
   1400117d7:	jns    0x1400117d9
   1400117d9:	add    BYTE PTR [rdi],cl
   1400117db:	add    BYTE PTR [rdx+0x74],dl
   1400117de:	ins    BYTE PTR es:[rdi],dx
   1400117df:	push   rsi
   1400117e0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400117e7:	outs   dx,BYTE PTR ds:[rsi]
   1400117e8:	ja     0x140011853
   1400117ea:	outs   dx,BYTE PTR ds:[rsi]
   1400117eb:	add    BYTE PTR fs:[rax],al
   1400117ee:	adc    DWORD PTR [rax],eax
   1400117f0:	push   rbp
   1400117f1:	outs   dx,BYTE PTR ds:[rsi]
   1400117f2:	push   0x6c646e61
   1400117f7:	gs fs rex.RB js 0x14001185f
   1400117fc:	gs jo  0x140011873
   1400117ff:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140011806:	gs jb  0x140011809
   140011809:	add    BYTE PTR [rdi],cl
   14001180b:	add    BYTE PTR [rbx+0x65],dl
   14001180e:	je     0x140011865
   140011810:	outs   dx,BYTE PTR ds:[rsi]
   140011811:	push   0x6c646e61
   140011816:	gs fs rex.RB js 0x14001187e
   14001181b:	gs jo  0x140011892
   14001181e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140011825:	gs jb  0x140011828
   140011828:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14001182d:	ins    DWORD PTR es:[rdi],dx
   14001182e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140011835:	outs   dx,DWORD PTR ds:[rsi]
   140011836:	movsxd esp,DWORD PTR [rbp+0x73]
   140011839:	jae    0x14001183b
   14001183b:	add    BYTE PTR [rax],al
   14001183d:	add    BYTE PTR [rcx+0x75],dl
   140011840:	gs jb  0x1400118bc
   140011843:	push   rax
   140011844:	gs jb  0x1400118ad
   140011847:	outs   dx,DWORD PTR ds:[rsi]
   140011848:	jb     0x1400118b7
   14001184a:	(bad)  
   14001184b:	outs   dx,BYTE PTR ds:[rsi]
   14001184c:	movsxd esp,DWORD PTR [rbp+0x43]
   14001184f:	outs   dx,DWORD PTR ds:[rsi]
   140011850:	jne    0x1400118c0
   140011852:	je     0x1400118b9
   140011854:	jb     0x140011856
   140011856:	adc    al,0x0
   140011858:	rex.RXB
   140011859:	gs je  0x1400118af
   14001185c:	jns    0x1400118d1
   14001185e:	je     0x1400118c5
   140011860:	ins    DWORD PTR es:[rdi],dx
   140011861:	push   rsp
   140011862:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140011869:	ins    BYTE PTR es:[rdi],dx
   14001186a:	gs push rsp
   14001186c:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140011873:	gs je  0x1400118ca
   140011876:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14001187d:	je     0x14001187f
   14001187f:	add    BYTE PTR [rsi],al
   140011881:	add    BYTE PTR [rdi+0x75],cl
   140011884:	je     0x1400118f6
   140011886:	jne    0x1400118fc
   140011888:	rex.R
   140011889:	gs (bad) 
   14001188b:	jne    0x1400118f4
   14001188d:	push   rbx
   14001188e:	je     0x140011902
   140011890:	imul   ebp,DWORD PTR [rsi+0x67],0x4f000041
   140011897:	rex.WR
   140011898:	rex.RB
   140011899:	push   r13
   14001189b:	push   rsp
   14001189c:	xor    esi,DWORD PTR [rdx]
   14001189e:	cs fs ins BYTE PTR es:[rdi],dx
   1400118a1:	ins    BYTE PTR es:[rdi],dx
   1400118a2:	add    BYTE PTR [rax],al
   1400118a4:	(bad)  
   1400118a5:	jo     0x140011910
   1400118a7:	sub    eax,0x772d736d
   1400118ac:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400118b3:	sub    eax,0x2d6d6f63
   1400118b8:	ins    BYTE PTR es:[rdi],dx
   1400118b9:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e3245f0
   1400118bf:	fs ins BYTE PTR es:[rdi],dx
   1400118c1:	ins    BYTE PTR es:[rdi],dx
   1400118c2:	add    BYTE PTR [rax],al
   1400118c4:	(bad)  
   1400118c5:	jo     0x140011930
   1400118c7:	sub    eax,0x772d736d
   1400118cc:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   1400118d3:	je     0x14001193e
   1400118d5:	outs   dx,BYTE PTR ds:[rsi]
   1400118d6:	addr32 sub eax,0x766f7270
   1400118dc:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   1400118e4:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac65471a
   1400118ea:	ins    BYTE PTR es:[rdi],dx
   1400118eb:	add    BYTE PTR [rcx+0x70],ah
   1400118ee:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8c65
   1400118f8:	outs   dx,DWORD PTR ds:[rsi]
   1400118f9:	jb     0x140011960
   1400118fb:	sub    eax,0x636f7270
   140011900:	gs jae 0x140011976
   140011903:	je     0x14001196d
   140011905:	jb     0x14001196c
   140011907:	(bad)  
   140011908:	fs jae 0x140011938
   14001190b:	ins    BYTE PTR es:[rdi],dx
   14001190c:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e334643
   140011912:	fs ins BYTE PTR es:[rdi],dx
   140011914:	ins    BYTE PTR es:[rdi],dx
   140011915:	add    BYTE PTR [rcx+0x70],ah
   140011918:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8c8f
   140011922:	outs   dx,DWORD PTR ds:[rsi]
   140011923:	jb     0x14001198a
   140011925:	sub    eax,0x6f727265
   14001192a:	jb     0x140011994
   14001192c:	(bad)  
   14001192d:	outs   dx,BYTE PTR ds:[rsi]
   14001192e:	fs ins BYTE PTR es:[rdi],dx
   140011930:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140011937:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac65476e
   14001193d:	ins    BYTE PTR es:[rdi],dx
   14001193e:	add    BYTE PTR [rax],al
   140011940:	(bad)  
   140011941:	jo     0x1400119ac
   140011943:	sub    eax,0x772d736d
   140011948:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   14001194f:	jb     0x1400119ba
   140011951:	je     0x1400119cc
   140011953:	sub    eax,0x65736162
   140011958:	sub    eax,0x322d316c
   14001195d:	sub    eax,0x6c642e30
   140011962:	ins    BYTE PTR es:[rdi],dx
   140011963:	add    BYTE PTR [rcx+0x70],ah
   140011966:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8cdd
   140011970:	outs   dx,DWORD PTR ds:[rsi]
   140011971:	jb     0x1400119d8
   140011973:	sub    eax,0x646e6168
   140011978:	ins    BYTE PTR es:[rdi],dx
   140011979:	gs sub eax,0x312d316c
   14001197f:	sub    eax,0x6c642e30
   140011984:	ins    BYTE PTR es:[rdi],dx
   140011985:	add    BYTE PTR [rcx+0x70],ah
   140011988:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8cff
   140011992:	outs   dx,DWORD PTR ds:[rsi]
   140011993:	jb     0x1400119fa
   140011995:	sub    eax,0x7262696c
   14001199a:	(bad)  
   14001199b:	jb     0x140011a16
   14001199d:	ins    BYTE PTR es:[rdi],dx
   14001199e:	outs   dx,DWORD PTR ds:[rsi]
   14001199f:	(bad)  
   1400119a0:	fs gs jb 0x1400119d1
   1400119a4:	ins    BYTE PTR es:[rdi],dx
   1400119a5:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e3146dd
   1400119ab:	fs ins BYTE PTR es:[rdi],dx
   1400119ad:	ins    BYTE PTR es:[rdi],dx
   1400119ae:	add    BYTE PTR [rax],al
   1400119b0:	(bad)  
   1400119b1:	jo     0x140011a1c
   1400119b3:	sub    eax,0x772d736d
   1400119b8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400119bf:	sub    eax,0x69737973
   1400119c4:	outs   dx,BYTE PTR ds:[rsi]
   1400119c5:	outs   dx,WORD PTR ds:[rsi]
   1400119c7:	sub    eax,0x322d316c
   1400119cc:	sub    eax,0x6c642e31
   1400119d1:	ins    BYTE PTR es:[rdi],dx
   1400119d2:	add    BYTE PTR [rax],al
   1400119d4:	(bad)  
   1400119d5:	jo     0x140011a40
   1400119d7:	sub    eax,0x772d736d
   1400119dc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400119e3:	sub    eax,0x69676572
   1400119e8:	jae    0x140011a5e
   1400119ea:	jb     0x140011a65
   1400119ec:	sub    eax,0x312d316c
   1400119f1:	sub    eax,0x6c642e30
   1400119f6:	ins    BYTE PTR es:[rdi],dx
   1400119f7:	add    BYTE PTR [rcx+0x70],ah
   1400119fa:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8d71
   140011a04:	outs   dx,DWORD PTR ds:[rsi]
   140011a05:	jb     0x140011a6c
   140011a07:	sub    eax,0x636e7973
   140011a0c:	push   0x2d316c2d
   140011a11:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac654847
   140011a17:	ins    BYTE PTR es:[rdi],dx
   140011a18:	add    BYTE PTR [rax],al
   140011a1a:	(bad)  
   140011a1b:	jo     0x140011a86
   140011a1d:	sub    eax,0x772d736d
   140011a22:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140011a29:	sub    eax,0x69727473
   140011a2e:	outs   dx,BYTE PTR ds:[rsi]
   140011a2f:	addr32 sub eax,0x312d316c
   140011a35:	sub    eax,0x6c642e30
   140011a3a:	ins    BYTE PTR es:[rdi],dx
   140011a3b:	add    BYTE PTR [rcx+0x70],ah
   140011a3e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8db5
   140011a48:	outs   dx,DWORD PTR ds:[rsi]
   140011a49:	jb     0x140011ab0
   140011a4b:	sub    eax,0x6f6d656d
   140011a50:	jb     0x140011acb
   140011a52:	sub    eax,0x312d316c
   140011a57:	sub    eax,0x6c642e32
   140011a5c:	ins    BYTE PTR es:[rdi],dx
   140011a5d:	add    BYTE PTR [rcx+0x70],ah
   140011a60:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8dd7
   140011a6a:	outs   dx,DWORD PTR ds:[rsi]
   140011a6b:	jb     0x140011ad2
   140011a6d:	sub    eax,0x636f7270
   140011a72:	gs jae 0x140011ae8
   140011a75:	outs   dx,BYTE PTR gs:[rsi]
   140011a77:	jbe    0x140011ae2
   140011a79:	jb     0x140011aea
   140011a7b:	outs   dx,BYTE PTR ds:[rsi]
   140011a7c:	ins    DWORD PTR es:[rdi],dx
   140011a7d:	outs   dx,BYTE PTR gs:[rsi]
   140011a7f:	je     0x140011aae
   140011a81:	ins    BYTE PTR es:[rdi],dx
   140011a82:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e3147ba
   140011a88:	fs ins BYTE PTR es:[rdi],dx
   140011a8a:	ins    BYTE PTR es:[rdi],dx
   140011a8b:	add    BYTE PTR [rcx+0x70],ah
   140011a8e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8e05
   140011a98:	outs   dx,DWORD PTR ds:[rsi]
   140011a99:	jb     0x140011b00
   140011a9b:	sub    eax,0x736c7472
   140011aa0:	jne    0x140011b12
   140011aa2:	jo     0x140011b13
   140011aa4:	jb     0x140011b1a
   140011aa6:	sub    eax,0x322d316c
   140011aab:	sub    eax,0x6c642e30
   140011ab0:	ins    BYTE PTR es:[rdi],dx
   140011ab1:	add    BYTE PTR [rcx+0x70],ah
   140011ab4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8e2b
   140011abe:	outs   dx,DWORD PTR ds:[rsi]
   140011abf:	jb     0x140011b26
   140011ac1:	sub    eax,0x666f7270
   140011ac6:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140011ace:	sub    eax,0x6c642e30
   140011ad3:	ins    BYTE PTR es:[rdi],dx
   140011ad4:	add    BYTE PTR [rax],al
   140011ad6:	(bad)  
   140011ad7:	jo     0x140011b42
   140011ad9:	sub    eax,0x772d736d
   140011ade:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140011ae5:	sub    eax,0x75626564
   140011aea:	addr32 sub eax,0x312d316c
   140011af0:	sub    eax,0x6c642e31
   140011af5:	ins    BYTE PTR es:[rdi],dx
   140011af6:	add    BYTE PTR [rax],al
   140011af8:	add    eax,0x74736c00
   140011afd:	jb     0x140011b62
   140011aff:	ins    DWORD PTR es:[rdi],dx
   140011b00:	jo     0x140011b6b
   140011b02:	push   rdi
   140011b03:	add    BYTE PTR [rcx+0x70],ah
   140011b06:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e8e7d
   140011b10:	outs   dx,DWORD PTR ds:[rsi]
   140011b11:	jb     0x140011b78
   140011b13:	sub    eax,0x69727473
   140011b18:	outs   dx,BYTE PTR ds:[rsi]
   140011b19:	addr32 sub eax,0x6f73626f
   140011b1f:	ins    BYTE PTR es:[rdi],dx
   140011b20:	gs je  0x140011b88
   140011b23:	sub    eax,0x312d316c
   140011b28:	sub    eax,0x6c642e30
   140011b2d:	ins    BYTE PTR es:[rdi],dx
   140011b2e:	add    BYTE PTR [rax],al
   140011b30:	je     0x140011b35
   140011b32:	push   rbp
   140011b33:	outs   dx,BYTE PTR ds:[rsi]
   140011b34:	jb     0x140011b9b
   140011b36:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140011b3e:	(bad)  
   140011b3f:	jae    0x140011bb4
   140011b41:	add    BYTE PTR [r8],al
   140011b44:	pop    rbx
   140011b45:	add    BYTE PTR [rdi+0x5f],bl
   140011b48:	rex.XB js 0x140011bc3
   140011b4b:	rex.RX jb 0x140011baf
   140011b4e:	ins    DWORD PTR es:[rdi],dx
   140011b4f:	gs rex.W (bad) 
   140011b52:	outs   dx,BYTE PTR ds:[rsi]
   140011b53:	fs ins BYTE PTR es:[rdi],dx
   140011b55:	gs jb  0x140011b8b
   140011b58:	add    BYTE PTR [rax],al
   140011b5a:	xchg   edx,eax
   140011b5b:	add    al,0x6d
   140011b5d:	gs ins DWORD PTR es:[rdi],dx
   140011b5f:	movsxd esi,DWORD PTR [rax+0x79]
	...

Disassembly of section .data:

0000000140012000 <.data>:
   140012000:	shl    BYTE PTR [rbx+0x14000],0x0
   140012007:	add    BYTE PTR [rcx],al
   140012009:	add    BYTE PTR [rax],al
   14001200b:	add    BYTE PTR [rax],al
   14001200d:	add    BYTE PTR [rax],al
   14001200f:	add    BYTE PTR [rdx],dh
   140012011:	movabs ds:0x5dcd00002b992ddf,al
   14001201a:	and    dl,dl
   14001201c:	data16 (bad) 
   14001201e:	(bad)  
   14001201f:	dec    DWORD PTR [rax-0x1e]
   140012022:	add    BYTE PTR [rax+0x1],al
   140012025:	add    BYTE PTR [rax],al
   140012027:	add    BYTE PTR [rax],ah
   140012029:	xor    DWORD PTR [rax],eax
   14001202b:	rex add DWORD PTR [rax],eax
	...
   140012056:	add    BYTE PTR [rax],al
   140012058:	and    BYTE PTR [rcx],dh
   14001205a:	add    BYTE PTR [rax+0x1],al
   14001205d:	add    BYTE PTR [rax],al
   14001205f:	add    BYTE PTR [rax+0x1400055],dh
	...
   14001206d:	add    BYTE PTR [rax],al
   14001206f:	add    BYTE PTR [rax-0x1d],ah
   140012072:	add    BYTE PTR [rax+0x1],al
   140012075:	add    BYTE PTR [rax],al
   140012077:	add    BYTE PTR [rax],ah
   140012079:	xor    DWORD PTR [rax],eax
   14001207b:	rex add DWORD PTR [rax],eax
	...
   1400120a6:	add    BYTE PTR [rax],al
   1400120a8:	and    BYTE PTR [rcx],dh
   1400120aa:	add    BYTE PTR [rax+0x1],al
   1400120ad:	add    BYTE PTR [rax],al
   1400120af:	add    BYTE PTR [rax+0x1400055],dh
	...
   1400120bd:	add    BYTE PTR [rax],al
   1400120bf:	add    al,dh
   1400120c1:	jrcxz  0x1400120c3
   1400120c3:	rex add DWORD PTR [rax],eax
   1400120c6:	add    BYTE PTR [rax],al
   1400120c8:	and    BYTE PTR [rcx],dh
   1400120ca:	add    BYTE PTR [rax+0x1],al
   1400120cd:	add    BYTE PTR [rax],al
   1400120cf:	add    al,al
   1400120d1:	mov    eax,DWORD PTR [rax]
   1400120d3:	rex add DWORD PTR [rax],eax
   1400120d6:	add    BYTE PTR [rax],al
   1400120d8:	adc    BYTE PTR [rbp+0x14000],cl
	...
   1400120ee:	add    BYTE PTR [rax],al
   1400120f0:	and    BYTE PTR [rcx],dh
   1400120f2:	add    BYTE PTR [rax+0x1],al
   1400120f5:	add    BYTE PTR [rax],al
   1400120f7:	add    BYTE PTR [rax],ah
   1400120f9:	xor    DWORD PTR [rax],eax
   1400120fb:	rex add DWORD PTR [rax],eax
   1400120fe:	add    BYTE PTR [rax],al
   140012100:	mov    al,0x55
   140012102:	add    BYTE PTR [rax+0x1],al
	...
   140012139:	add    BYTE PTR [rdx],al
   14001213b:	add    BYTE PTR [rax],al
   14001213d:	add    BYTE PTR [rax],al
   14001213f:	add    al,al
   140012141:	sub    al,BYTE PTR [rcx]
   140012143:	rex add DWORD PTR [rax],eax
   140012146:	add    BYTE PTR [rax],al
   140012148:	cwde   
   140012149:	loope  0x14001214b
   14001214b:	rex add DWORD PTR [rax],eax
   14001214e:	add    BYTE PTR [rax],al
   140012150:	xchg   esp,eax
   140012151:	loope  0x140012153
   140012153:	rex add DWORD PTR [rax],eax
   140012156:	add    BYTE PTR [rax],al
   140012158:	add    DWORD PTR [rax],eax
   14001215a:	add    BYTE PTR [rax],al
   14001215c:	add    BYTE PTR [rax],al
   14001215e:	add    BYTE PTR [rax],al
   140012160:	sbb    bh,dl
   140012162:	add    BYTE PTR [rax+0x1],al
	...
   14001216d:	add    BYTE PTR [rax],al
   14001216f:	add    BYTE PTR [rsi],ch
   140012171:	(bad)  
   140012172:	push   r14
   140012174:	ins    BYTE PTR es:[rdi],dx
   140012175:	outs   dx,DWORD PTR ds:[rsi]
   140012176:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14001217e:	jb     0x1400121c0
   140012180:	jae    0x1400121f6
   140012182:	fs rex
   140012184:	add    BYTE PTR [rax],al
   140012187:	add    BYTE PTR [rax],bl
   140012189:	xlat   BYTE PTR ds:[rbx]
   14001218a:	add    BYTE PTR [rax+0x1],al
	...
   140012195:	add    BYTE PTR [rax],al
   140012197:	add    BYTE PTR [rsi],ch
   140012199:	(bad)  
   14001219a:	push   r14
   14001219c:	ins    BYTE PTR es:[rdi],dx
   14001219d:	outs   dx,BYTE PTR gs:[rsi]
   14001219f:	addr32 je 0x14001220a
   1400121a2:	pop    rdi
   1400121a3:	gs jb  0x140012218
   1400121a6:	outs   dx,DWORD PTR ds:[rsi]
   1400121a7:	jb     0x1400121e9
   1400121a9:	jae    0x14001221f
   1400121ab:	fs rex
   1400121ad:	add    BYTE PTR [rax],al
   1400121b0:	sbb    bh,dl
   1400121b2:	add    BYTE PTR [rax+0x1],al
	...
   1400121bd:	add    BYTE PTR [rax],al
   1400121bf:	add    BYTE PTR [rsi],ch
   1400121c1:	(bad)  
   1400121c2:	push   r14
   1400121c4:	outs   dx,DWORD PTR ds:[rsi]
   1400121c5:	jne    0x14001223b
   1400121c7:	pop    rdi
   1400121c8:	outs   dx,DWORD PTR ds:[rsi]
   1400121c9:	pop    di
   1400121cb:	jb     0x14001222e
   1400121cd:	outs   dx,BYTE PTR ds:[rsi]
   1400121ce:	addr32 gs rex jae 0x140012247
   1400121d3:	fs rex
   1400121d5:	add    BYTE PTR [rax],al
   1400121d8:	sbb    bh,dl
   1400121da:	add    BYTE PTR [rax+0x1],al
	...
   1400121e5:	add    BYTE PTR [rax],al
   1400121e7:	add    BYTE PTR [rsi],ch
   1400121e9:	(bad)  
   1400121ea:	push   r14
   1400121ec:	(bad)
   1400121f1:	jne    0x140012261
   1400121f3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400121f7:	outs   dx,BYTE PTR ds:[rsi]
   1400121f8:	pop    rdi
   1400121f9:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400121fc:	ins    BYTE PTR es:[rdi],dx
   1400121fd:	rex je 0x140012272
   140012200:	xor    DWORD PTR [rax+0x73],eax
   140012203:	je     0x140012269
   140012205:	rex
   140012206:	add    BYTE PTR [rax],bl
   140012209:	xlat   BYTE PTR ds:[rbx]
   14001220a:	add    BYTE PTR [rax+0x1],al
	...
   140012215:	add    BYTE PTR [rax],al
   140012217:	add    BYTE PTR [rsi],ch
   140012219:	(bad)  
   14001221a:	push   r14
   14001221c:	rex.XB
   14001221d:	rex.B je 0x14001228c
   140012220:	rex.RB js 0x140012286
   140012223:	gs jo  0x14001229a
   140012226:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14001222d:	rex
   14001222e:	add    BYTE PTR [rax],bl
   140012231:	xlat   BYTE PTR ds:[rbx]
   140012232:	add    BYTE PTR [rax+0x1],al
	...
   14001223d:	add    BYTE PTR [rax],al
   14001223f:	add    BYTE PTR [rsi],ch
   140012241:	push   rax
   140012242:	ss rex.B (bad) 
   140012245:	push   r14
   140012247:	(bad)  
   140012248:	and    al,0x6d
   14001224a:	(bad)  
   14001224b:	jo     0x14001228d
   14001224d:	and    al,0x24
   14001224f:	rex.XB
   140012250:	rex.X push rsi
   140012252:	(bad)  
   140012253:	and    al,0x62
   140012255:	(bad)  
   140012256:	jae    0x1400122c1
   140012258:	movsxd ebx,DWORD PTR [rdi+0x73]
   14001225b:	je     0x1400122cf
   14001225d:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554740
   140012264:	and    al,0x63
   140012266:	push   0x745f7261
   14001226b:	jb     0x1400122ce
   14001226d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734047
   140012275:	fs rex
   140012277:	rex push rsi
   140012279:	(bad)  
   14001227a:	and    al,0x61
   14001227c:	ins    BYTE PTR es:[rdi],dx
   14001227d:	ins    BYTE PTR es:[rdi],dx
   14001227e:	outs   dx,DWORD PTR ds:[rsi]
   14001227f:	movsxd esp,DWORD PTR [rcx+0x74]
   140012282:	outs   dx,DWORD PTR ds:[rsi]
   140012283:	jb     0x1400122c5
   140012285:	rex.RXB
   140012286:	xor    al,BYTE PTR [rax+0x40]
   14001228a:	jae    0x140012300
   14001228c:	fs rex
   14001228e:	rex push rsi
   140012290:	xor    DWORD PTR [rdx],esi
   140012292:	rex push rbp
   140012294:	(bad)  
   140012295:	and    al,0x6c
   140012297:	gs jae 0x14001230d
   14001229a:	and    al,0x24
   14001229d:	rex.XB
   14001229e:	rex.X push rsi
   1400122a0:	(bad)  
   1400122a1:	and    al,0x62
   1400122a3:	(bad)  
   1400122a4:	jae    0x14001230f
   1400122a6:	movsxd ebx,DWORD PTR [rdi+0x73]
   1400122a9:	je     0x14001231d
   1400122ab:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554740
   1400122b2:	and    al,0x63
   1400122b4:	push   0x745f7261
   1400122b9:	jb     0x14001231c
   1400122bb:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734047
   1400122c3:	fs rex
   1400122c5:	rex push rsi
   1400122c7:	(bad)  
   1400122c8:	and    al,0x61
   1400122ca:	ins    BYTE PTR es:[rdi],dx
   1400122cb:	ins    BYTE PTR es:[rdi],dx
   1400122cc:	outs   dx,DWORD PTR ds:[rsi]
   1400122cd:	movsxd esp,DWORD PTR [rcx+0x74]
   1400122d0:	outs   dx,DWORD PTR ds:[rsi]
   1400122d1:	jb     0x140012313
   1400122d3:	rex.RXB
   1400122d4:	xor    al,BYTE PTR [rax+0x40]
   1400122d8:	jae    0x14001234e
   1400122da:	fs rex
   1400122dc:	rex
   1400122dd:	xor    al,BYTE PTR [rax+0x56]
   1400122e1:	(bad)  
   1400122e2:	and    al,0x61
   1400122e4:	ins    BYTE PTR es:[rdi],dx
   1400122e5:	ins    BYTE PTR es:[rdi],dx
   1400122e6:	outs   dx,DWORD PTR ds:[rsi]
   1400122e7:	movsxd esp,DWORD PTR [rcx+0x74]
   1400122ea:	outs   dx,DWORD PTR ds:[rsi]
   1400122eb:	jb     0x14001232d
   1400122ed:	push   rbp
   1400122ee:	(bad)  
   1400122ef:	and    al,0x70
   1400122f1:	(bad)  
   1400122f2:	imul   esi,DWORD PTR [rdx+0x40],0x42432424
   1400122f9:	push   rsi
   1400122fa:	(bad)  
   1400122fb:	and    al,0x62
   1400122fd:	(bad)  
   1400122fe:	jae    0x140012369
   140012300:	movsxd ebx,DWORD PTR [rdi+0x73]
   140012303:	je     0x140012377
   140012305:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554740
   14001230c:	and    al,0x63
   14001230e:	push   0x745f7261
   140012313:	jb     0x140012376
   140012315:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734047
   14001231d:	fs rex
   14001231f:	rex push rsi
   140012321:	(bad)  
   140012322:	and    al,0x61
   140012324:	ins    BYTE PTR es:[rdi],dx
   140012325:	ins    BYTE PTR es:[rdi],dx
   140012326:	outs   dx,DWORD PTR ds:[rsi]
   140012327:	movsxd esp,DWORD PTR [rcx+0x74]
   14001232a:	outs   dx,DWORD PTR ds:[rsi]
   14001232b:	jb     0x14001236d
   14001232d:	rex.RXB
   14001232e:	xor    al,BYTE PTR [rax+0x40]
   140012332:	jae    0x1400123a8
   140012334:	fs rex
   140012336:	rex push rsi
   140012338:	xor    DWORD PTR [rdx],esi
   14001233a:	rex
   14001233b:	rex jae 0x1400123b2
   14001233e:	fs rex
   140012340:	rex
   140012341:	xor    al,BYTE PTR [rax+0x40]
   140012345:	jae    0x1400123bb
   140012347:	fs rex
   140012349:	rex
   14001234a:	rex.B
   14001234b:	rex.RB
   14001234c:	rex.X push rbp
   14001234e:	pop    rdi
   14001234f:	pop    rdi
   140012350:	rex.WRB
   140012351:	rex.WB
   140012352:	rex.R
   140012353:	rex.WR pop rdi
   140012355:	pop    rdi
   140012356:	pop    rdi
   140012357:	rex.WRB
   140012358:	rex.WB
   140012359:	rex.R
   14001235a:	rex.WR pop rdi
   14001235c:	imul   esi,DWORD PTR [rsi+riz*2+0x5f],0x76697270
   140012364:	(bad)  
   140012365:	je     0x1400123cc
   140012367:	jae    0x1400123d9
   140012369:	gs ins BYTE PTR es:[rdi],dx
   14001236b:	ins    BYTE PTR es:[rdi],dx
   14001236c:	movsxd ebp,DWORD PTR [rax+0x65]
   14001236f:	movsxd ebp,DWORD PTR [rbx+0x5f]
   140012372:	xor    BYTE PTR [rax],dh
   140012374:	xor    BYTE PTR [rax],dh
   140012376:	pop    rdi
   140012377:	xor    BYTE PTR [rax],dh
   140012379:	xor    BYTE PTR [rbx],dh
   14001237b:	pop    rdi
   14001237c:	xor    BYTE PTR [rax],dh
   14001237e:	xor    BYTE PTR [rcx],dh
   140012380:	rex
   140012381:	rex pop rdi
   140012383:	rex.WRX
   140012384:	rex pop rdx
   140012386:	add    BYTE PTR [rax],al
   140012388:	sbb    bh,dl
   14001238a:	add    BYTE PTR [rax+0x1],al
	...
   140012395:	add    BYTE PTR [rax],al
   140012397:	add    BYTE PTR [rsi],ch
   140012399:	(bad)  
   14001239a:	push   r14
   14001239c:	(bad)
   1400123a1:	ins    BYTE PTR es:[rdi],dx
   1400123a2:	ins    BYTE PTR es:[rdi],dx
   1400123a3:	outs   dx,DWORD PTR ds:[rsi]
   1400123a4:	movsxd eax,DWORD PTR [rax+0x73]
   1400123a7:	je     0x14001240d
   1400123a9:	rex
   1400123aa:	add    BYTE PTR [rax],al
   1400123ad:	add    BYTE PTR [rax],al
   1400123af:	add    BYTE PTR [rax],bl
   1400123b1:	xlat   BYTE PTR ds:[rbx]
   1400123b2:	add    BYTE PTR [rax+0x1],al
	...
   1400123bd:	add    BYTE PTR [rax],al
   1400123bf:	add    BYTE PTR [rsi],ch
   1400123c1:	(bad)  
   1400123c2:	push   r14
   1400123c4:	gs js  0x14001242a
   1400123c7:	gs jo  0x14001243e
   1400123ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x18004040
   1400123d1:	xlat   BYTE PTR ds:[rbx]
   1400123d2:	add    BYTE PTR [rax+0x1],al
	...
   1400123dd:	add    BYTE PTR [rax],al
   1400123df:	add    BYTE PTR [rsi],ch
   1400123e1:	push   rax
   1400123e2:	ss rex.B
   1400123e4:	rex.W push rax
   1400123e6:	rex.RB
   1400123e7:	rex.X pop rax
   1400123e9:	rex pop rdx
   1400123eb:	add    BYTE PTR [rax],al
   1400123ed:	add    BYTE PTR [rax],al
   1400123ef:	add    BYTE PTR [rax],bl
   1400123f1:	xlat   BYTE PTR ds:[rbx]
   1400123f2:	add    BYTE PTR [rax+0x1],al
	...
   1400123fd:	add    BYTE PTR [rax],al
   1400123ff:	add    BYTE PTR [rsi],ch
   140012401:	push   rax
   140012402:	ss rex.B
   140012404:	rex.W push rax
   140012406:	rex.RB
   140012407:	pop    r8
   140012409:	rex pop rdx
	...

Disassembly of section .pdata:

0000000140013000 <.pdata>:
   140013000:	add    BYTE PTR [rax],dl
   140013002:	add    BYTE PTR [rax],al
   140013004:	jg     0x140013017
   140013006:	add    BYTE PTR [rax],al
   140013008:	mov    al,0xee
   14001300a:	add    BYTE PTR [rax],al
   14001300c:	mov    al,0x11
   14001300e:	add    BYTE PTR [rax],al
   140013010:	rex.WRXB adc r8b,BYTE PTR [r8]
   140013013:	add    al,dh
   140013015:	out    dx,al
   140013016:	add    BYTE PTR [rax],al
   140013018:	push   rax
   140013019:	adc    al,BYTE PTR [rax]
   14001301b:	add    BYTE PTR [rdx+rdx*1-0x11440000],bh
   140013022:	add    BYTE PTR [rax],al
   140013024:	rcl    BYTE PTR [rdx],0x0
   140013027:	add    BYTE PTR [rdx],bh
   140013029:	adc    eax,DWORD PTR [rax]
   14001302b:	add    BYTE PTR [rsi+rbp*8+0x13500000],bh
   140013032:	add    BYTE PTR [rax],al
   140013034:	gs adc al,0x0
   140013037:	add    BYTE PTR [rax-0x5bffff12],dh
   14001303d:	adc    al,0x0
   14001303f:	add    bl,cl
   140013041:	adc    al,0x0
   140013043:	add    BYTE PTR [rsi+rbp*8+0x14d40000],bh
   14001304a:	add    BYTE PTR [rax],al
   14001304c:	jl     0x140013063
   14001304e:	add    BYTE PTR [rax],al
   140013050:	(bad)  
   140013051:	out    dx,al
   140013052:	add    BYTE PTR [rax],al
   140013054:	test   BYTE PTR [rip+0x167a0000],dl        # 0x1567b305a
   14001305a:	add    BYTE PTR [rax],al
   14001305c:	loopne 0x14001304c
   14001305e:	add    BYTE PTR [rax],al
   140013060:	adc    BYTE PTR [rsi],0x0
   140013063:	add    BYTE PTR [rdi-0xfffffea],ch
   140013069:	out    dx,al
   14001306a:	add    BYTE PTR [rax],al
   14001306c:	mov    eax,0x52000016
   140013071:	(bad)  
   140013072:	add    BYTE PTR [rax],al
   140013074:	clc    
   140013075:	out    dx,al
   140013076:	add    BYTE PTR [rax],al
   140013078:	(bad)  
   140013079:	(bad)  
   14001307a:	add    BYTE PTR [rax],al
   14001307c:	in     eax,dx
   14001307d:	(bad)  
   14001307e:	add    BYTE PTR [rax],al
   140013080:	mov    al,0xee
   140013082:	add    BYTE PTR [rax],al
   140013084:	hlt    
   140013085:	(bad)  
   140013086:	add    BYTE PTR [rax],al
   140013088:	out    0x18,al
   14001308a:	add    BYTE PTR [rax],al
   14001308c:	add    bh,ch
   14001308e:	add    BYTE PTR [rax],al
   140013090:	in     al,dx
   140013091:	sbb    BYTE PTR [rax],al
   140013093:	add    BYTE PTR [rdi+0x1b],dl
   140013096:	add    BYTE PTR [rax],al
   140013098:	adc    bh,ch
   14001309a:	add    BYTE PTR [rax],al
   14001309c:	(bad)  
   14001309d:	sbb    eax,DWORD PTR [rax]
   14001309f:	add    dl,bh
   1400130a1:	sbb    eax,DWORD PTR [rax]
   1400130a3:	add    BYTE PTR [rdi+rbp*8],ah
   1400130a6:	add    BYTE PTR [rax],al
   1400130a8:	add    BYTE PTR [rax+rax*1],bl
   1400130ab:	add    bh,ah
   1400130ad:	sbb    al,0x0
   1400130af:	add    BYTE PTR [rax],bh
   1400130b1:	out    dx,eax
   1400130b2:	add    BYTE PTR [rax],al
   1400130b4:	lock sbb al,0x0
   1400130b7:	add    cl,cl
   1400130b9:	(bad)  
   1400130ba:	add    BYTE PTR [rax],al
   1400130bc:	rex.W out dx,eax
   1400130be:	add    BYTE PTR [rax],al
   1400130c0:	rcr    BYTE PTR [rsi],1
   1400130c2:	add    BYTE PTR [rax],al
   1400130c4:	(bad)  
   1400130c5:	(bad)  
   1400130c6:	add    BYTE PTR [rax],al
   1400130c8:	mov    al,0xee
   1400130ca:	add    BYTE PTR [rax],al
   1400130cc:	adc    al,0x1f
   1400130ce:	add    BYTE PTR [rax],al
   1400130d0:	jbe    0x1400130f3
   1400130d2:	add    BYTE PTR [rax],al
   1400130d4:	pop    rax
   1400130d5:	out    dx,eax
   1400130d6:	add    BYTE PTR [rax],al
   1400130d8:	jl     0x1400130fb
   1400130da:	add    BYTE PTR [rax],al
   1400130dc:	(bad)  
   1400130dd:	and    eax,DWORD PTR [rax]
   1400130df:	add    BYTE PTR [rdi+rbp*8+0x0],dh
   1400130e3:	add    BYTE PTR [rax],dl
   1400130e5:	and    eax,DWORD PTR [rax]
   1400130e7:	add    BYTE PTR [rax+0x23],bh
   1400130ea:	add    BYTE PTR [rax],al
   1400130ec:	lock out dx,al
   1400130ee:	add    BYTE PTR [rax],al
   1400130f0:	and    BYTE PTR [rbx],0x0
   1400130f3:	add    dh,bh
   1400130f5:	and    eax,DWORD PTR [rax]
   1400130f7:	add    BYTE PTR [rax],al
   1400130f9:	out    dx,eax
   1400130fa:	add    BYTE PTR [rax],al
   1400130fc:	and    al,0x24
   1400130fe:	add    BYTE PTR [rax],al
   140013100:	jns    0x140013127
   140013102:	add    BYTE PTR [rax],al
   140013104:	sub    bh,0x0
   140013107:	add    BYTE PTR [rax-0xbffffdb],al
   14001310d:	sub    al,BYTE PTR [rax]
   14001310f:	add    BYTE PTR [rax-0x3ffff11],dl
   140013115:	sub    al,BYTE PTR [rax]
   140013117:	add    BYTE PTR [rsp+rbp*1-0x104c0000],bl
   14001311e:	add    BYTE PTR [rax],al
   140013120:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013121:	sub    al,0x0
   140013123:	add    BYTE PTR [rdx-0x2fffffd2],ch
   140013129:	out    dx,eax
   14001312a:	add    BYTE PTR [rax],al
   14001312c:	mov    al,0x2e
   14001312e:	add    BYTE PTR [rax],al
   140013130:	jge    0x140013161
   140013132:	add    BYTE PTR [rax],al
   140013134:	and    al,0xef
   140013136:	add    BYTE PTR [rax],al
   140013138:	test   BYTE PTR [rdi],ch
   14001313a:	add    BYTE PTR [rax],al
   14001313c:	(bad)  
   14001313d:	xor    BYTE PTR [rax],al
   14001313f:	add    al,dh
   140013141:	out    dx,eax
   140013142:	add    BYTE PTR [rax],al
   140013144:	and    BYTE PTR [rax],dh
   140013146:	add    BYTE PTR [rax],al
   140013148:	shl    DWORD PTR [rax],cl
   14001314a:	add    BYTE PTR [rax],al
   14001314c:	lock out dx,eax
   14001314e:	add    BYTE PTR [rax],al
   140013150:	xor    BYTE PTR [rcx],dh
   140013152:	add    BYTE PTR [rax],al
   140013154:	(bad)  
   140013155:	xor    DWORD PTR [rax],eax
   140013157:	add    BYTE PTR [rax+0x680000ee],dh
   14001315d:	xor    DWORD PTR [rax],eax
   14001315f:	add    BYTE PTR [rcx-0xfffffcf],ah
   140013165:	out    dx,al
   140013166:	add    BYTE PTR [rax],al
   140013168:	test   al,0x31
   14001316a:	add    BYTE PTR [rax],al
   14001316c:	hlt    
   14001316d:	xor    DWORD PTR [rax],eax
   14001316f:	add    BYTE PTR [rax+rsi*8],al
   140013172:	add    BYTE PTR [rax],al
   140013174:	cld    
   140013175:	xor    DWORD PTR [rax],eax
   140013177:	add    BYTE PTR [rip+0xffffffffbc000032],dl        # 0xfc0131af
   14001317d:	out    dx,al
   14001317e:	add    BYTE PTR [rax],al
   140013180:	sbb    al,0x32
   140013182:	add    BYTE PTR [rax],al
   140013184:	mov    esi,0x38000032
   140013189:	lock add BYTE PTR [rax],al
   14001318c:	shl    BYTE PTR [rdx],1
   14001318e:	add    BYTE PTR [rax],al
   140013190:	or     esi,DWORD PTR [rbx]
   140013192:	add    BYTE PTR [rax],al
   140013194:	mov    al,0xee
   140013196:	add    BYTE PTR [rax],al
   140013198:	adc    al,0x33
   14001319a:	add    BYTE PTR [rax],al
   14001319c:	mov    bl,0x33
   14001319e:	add    BYTE PTR [rax],al
   1400131a0:	rex.W
   1400131a1:	lock add BYTE PTR [rax],al
   1400131a4:	mov    esp,0xdc000033
   1400131a9:	xor    eax,DWORD PTR [rax]
   1400131ab:	add    BYTE PTR [rax-0x1bffff10],ch
   1400131b1:	xor    eax,DWORD PTR [rax]
   1400131b3:	add    BYTE PTR [rax],al
   1400131b5:	xor    al,0x0
   1400131b7:	add    al,dh
   1400131b9:	out    dx,al
   1400131ba:	add    BYTE PTR [rax],al
   1400131bc:	or     BYTE PTR [rax+rax*1],dh
   1400131bf:	add    BYTE PTR [rsi+rsi*1-0xf300000],bl
   1400131c6:	add    BYTE PTR [rax],al
   1400131c8:	mov    al,0x36
   1400131ca:	add    BYTE PTR [rax],al
   1400131cc:	xor    DWORD PTR [rdi],esi
   1400131ce:	add    BYTE PTR [rax],al
   1400131d0:	shl    cl,1
   1400131d2:	add    BYTE PTR [rax],al
   1400131d4:	rex.W (bad) 
   1400131d6:	add    BYTE PTR [rax],al
   1400131d8:	pop    rdi
   1400131d9:	(bad)  
   1400131da:	add    BYTE PTR [rax],al
   1400131dc:	mov    esp,0x680000ee
   1400131e1:	(bad)  
   1400131e2:	add    BYTE PTR [rax],al
   1400131e4:	xchg   ebx,eax
   1400131e5:	(bad)  
   1400131e6:	add    BYTE PTR [rax],al
   1400131e8:	lock out dx,al
   1400131ea:	add    BYTE PTR [rax],al
   1400131ec:	pushf  
   1400131ed:	(bad)  
   1400131ee:	add    BYTE PTR [rax],al
   1400131f0:	mov    edx,0xbc000037
   1400131f5:	out    dx,al
   1400131f6:	add    BYTE PTR [rax],al
   1400131f8:	in     al,dx
   1400131f9:	(bad)  
   1400131fa:	add    BYTE PTR [rax],al
   1400131fc:	(bad)  
   1400131fd:	cmp    DWORD PTR [rax],eax
   1400131ff:	add    BYTE PTR [rax],dl
   140013201:	repnz add BYTE PTR [rax],al
   140013204:	adc    BYTE PTR [rcx],bh
   140013206:	add    BYTE PTR [rax],al
   140013208:	xlat   BYTE PTR ds:[rbx]
   140013209:	cmp    eax,DWORD PTR [rax]
   14001320b:	add    BYTE PTR [rax],ch
   14001320d:	repnz add BYTE PTR [rax],al
   140013210:	loopne 0x14001324d
   140013212:	add    BYTE PTR [rax],al
   140013214:	fdivr  DWORD PTR [rax+rax*1]
   140013217:	add    BYTE PTR [rax-0x1fffff0e],cl
   14001321d:	cmp    al,0x0
   14001321f:	add    BYTE PTR [rdx],cl
   140013221:	cmp    eax,0xeef00000
   140013226:	add    BYTE PTR [rax],al
   140013228:	adc    BYTE PTR [rip+0x421e0000],bh        # 0x1821f322e
   14001322e:	add    BYTE PTR [rax],al
   140013230:	movabs al,ds:0x58000042300000f2
   140013239:	rex.X add BYTE PTR [rax],al
   14001323c:	mov    esp,0x600000ee
   140013241:	rex.X add BYTE PTR [rax],al
   140013244:	add    eax,DWORD PTR [rbx+0x0]
   140013247:	add    BYTE PTR [rax+0xc0000f3],dh
   14001324d:	rex.XB add BYTE PTR [r8],al
   140013250:	rex.XB
   140013251:	add    BYTE PTR [rax],r8b
   140013254:	enter  0xf3,0x0
   140013258:	rex.WR
   140013259:	add    BYTE PTR [rax],r8b
   14001325c:	ins    DWORD PTR es:[rdi],dx
   14001325d:	add    BYTE PTR [rax],r8b
   140013260:	lock out dx,al
   140013262:	add    BYTE PTR [rax],al
   140013264:	je     0x1400132aa
   140013266:	add    BYTE PTR [rax],al
   140013268:	add    BYTE PTR ds:[r8],r8b
   14001326c:	cmp    al,dh
   14001326e:	add    BYTE PTR [rax],al
   140013270:	pop    rax
   140013271:	add    BYTE PTR [r8],r8b
   140013274:	loop   0x1400132bc
   140013276:	add    BYTE PTR [rax],al
   140013278:	in     al,0xf3
   14001327a:	add    BYTE PTR [rax],al
   14001327c:	call   0xff0132c7
   140013281:	rex.WRX add BYTE PTR [rax],r8b
   140013284:	add    ah,dh
   140013286:	add    BYTE PTR [rax],al
   140013288:	enter  0x4e,0x0
   14001328c:	adc    BYTE PTR [rax+0x0],0x0
   140013290:	pop    rax
   140013291:	hlt    
   140013292:	add    BYTE PTR [rax],al
   140013294:	mov    BYTE PTR [rax+0x0],dl
   140013297:	add    BYTE PTR [rcx+0x52],ch
   14001329a:	add    BYTE PTR [rax],al
   14001329c:	jl     0x140013292
   14001329e:	add    BYTE PTR [rax],al
   1400132a0:	jo     0x1400132f4
   1400132a2:	add    BYTE PTR [rax],al
   1400132a4:	or     eax,0x50000055
   1400132a9:	cmc    
   1400132aa:	add    BYTE PTR [rax],al
   1400132ac:	adc    al,0x55
   1400132ae:	add    BYTE PTR [rax],al
   1400132b0:	push   r13
   1400132b2:	add    BYTE PTR [rax],al
   1400132b4:	jo     0x1400132ab
   1400132b6:	add    BYTE PTR [rax],al
   1400132b8:	(bad)  
   1400132b9:	push   rbp
   1400132ba:	add    BYTE PTR [rax],al
   1400132bc:	fwait
   1400132bd:	push   rbp
   1400132be:	add    BYTE PTR [rax],al
   1400132c0:	mov    al,0xee
   1400132c2:	add    BYTE PTR [rax],al
   1400132c4:	mov    esp,0xe4000055
   1400132c9:	push   rdi
   1400132ca:	add    BYTE PTR [rax],al
   1400132cc:	js     0x1400132c3
   1400132ce:	add    BYTE PTR [rax],al
   1400132d0:	in     al,dx
   1400132d1:	push   rdi
   1400132d2:	add    BYTE PTR [rax],al
   1400132d4:	xchg   edx,eax
   1400132d5:	pop    rax
   1400132d6:	add    BYTE PTR [rax],al
   1400132d8:	xor    dh,0x0
   1400132db:	add    BYTE PTR [rax-0xfffffa8],bl
   1400132e1:	pop    rax
   1400132e2:	add    BYTE PTR [rax],al
   1400132e4:	nop
   1400132e5:	test   BYTE PTR [rax],0x0
   1400132e8:	clc    
   1400132e9:	pop    rax
   1400132ea:	add    BYTE PTR [rax],al
   1400132ec:	sub    bl,BYTE PTR [rcx+0x0]
   1400132ef:	add    BYTE PTR [rax+0x300000ee],dh
   1400132f5:	pop    rcx
   1400132f6:	add    BYTE PTR [rax],al
   1400132f8:	(bad)  
   1400132f9:	pop    rcx
   1400132fa:	add    BYTE PTR [rax],al
   1400132fc:	and    al,0xef
   1400132fe:	add    BYTE PTR [rax],al
   140013300:	rcr    BYTE PTR [rcx+0x0],1
   140013303:	add    BYTE PTR [rcx],dl
   140013305:	pop    rdx
   140013306:	add    BYTE PTR [rax],al
   140013308:	cmp    al,dh
   14001330a:	add    BYTE PTR [rax],al
   14001330c:	and    BYTE PTR [rdx+0x0],bl
   14001330f:	add    BYTE PTR [rcx+0x5a],ah
   140013312:	add    BYTE PTR [rax],al
   140013314:	cmp    al,dh
   140013316:	add    BYTE PTR [rax],al
   140013318:	jo     0x140013374
   14001331a:	add    BYTE PTR [rax],al
   14001331c:	mov    cl,0x5a
   14001331e:	add    BYTE PTR [rax],al
   140013320:	cmp    al,dh
   140013322:	add    BYTE PTR [rax],al
   140013324:	rcr    BYTE PTR [rdx+0x0],0x0
   140013328:	add    DWORD PTR [rbx+0x0],ebx
   14001332b:	add    BYTE PTR [rax],bh
   14001332d:	lock add BYTE PTR [rax],al
   140013330:	adc    BYTE PTR [rbx+0x0],bl
   140013333:	add    BYTE PTR [rcx+0x5b],ah
   140013336:	add    BYTE PTR [rax],al
   140013338:	and    al,0xef
   14001333a:	add    BYTE PTR [rax],al
   14001333c:	jo     0x140013399
   14001333e:	add    BYTE PTR [rax],al
   140013340:	rcr    DWORD PTR [rbx+0x0],cl
   140013343:	add    BYTE PTR [rdi+rbp*8],ah
   140013346:	add    BYTE PTR [rax],al
   140013348:	loopne 0x1400133a5
   14001334a:	add    BYTE PTR [rax],al
   14001334c:	xor    DWORD PTR [rax+rax*1+0x0],ebx
   140013350:	and    al,0xef
   140013352:	add    BYTE PTR [rax],al
   140013354:	rex pop rsp
   140013356:	add    BYTE PTR [rax],al
   140013358:	xchg   ecx,eax
   140013359:	pop    rsp
   14001335a:	add    BYTE PTR [rax],al
   14001335c:	and    al,0xef
   14001335e:	add    BYTE PTR [rax],al
   140013360:	movabs al,ds:0x2400005cf100005c
   140013369:	out    dx,eax
   14001336a:	add    BYTE PTR [rax],al
   14001336c:	add    BYTE PTR [rbp+0x0],bl
   14001336f:	add    BYTE PTR [rcx+0x5d],dl
   140013372:	add    BYTE PTR [rax],al
   140013374:	and    al,0xef
   140013376:	add    BYTE PTR [rax],al
   140013378:	(bad)  
   140013379:	pop    rbp
   14001337a:	add    BYTE PTR [rax],al
   14001337c:	scas   eax,DWORD PTR es:[rdi]
   14001337d:	pop    rbp
   14001337e:	add    BYTE PTR [rax],al
   140013380:	and    al,0xef
   140013382:	add    BYTE PTR [rax],al
   140013384:	rcr    BYTE PTR [rbp+0x0],0x0
   140013388:	(bad)  
   140013389:	(bad)  
   14001338a:	add    BYTE PTR [rax],al
   14001338c:	movabs al,ds:0xa3000060680000f6
   140013395:	(bad)  
   140013396:	add    BYTE PTR [rax],al
   140013398:	cwde   
   140013399:	test   DWORD PTR [rax],0x60ac00
   14001339f:	add    ah,bl
   1400133a1:	(bad)  
   1400133a2:	add    BYTE PTR [rax],al
   1400133a4:	lock out dx,al
   1400133a6:	add    BYTE PTR [rax],al
   1400133a8:	in     al,0x60
   1400133aa:	add    BYTE PTR [rax],al
   1400133ac:	push   rsi
   1400133ad:	(bad)  
   1400133ae:	add    BYTE PTR [rax],al
   1400133b0:	enter  0xf7,0x0
   1400133b4:	pop    rsp
   1400133b5:	(bad)  
   1400133b6:	add    BYTE PTR [rax],al
   1400133b8:	iret   
   1400133b9:	(bad)  
   1400133ba:	add    BYTE PTR [rax],al
   1400133bc:	loopne 0x1400133b5
   1400133be:	add    BYTE PTR [rax],al
   1400133c0:	fsub   DWORD PTR [rcx+0x0]
   1400133c3:	add    BYTE PTR [rbp-0x13ffff9e],bh
   1400133c9:	test   DWORD PTR [rax],0x62e400
   1400133cf:	add    BYTE PTR [rbx+0x63],bh
   1400133d2:	add    BYTE PTR [rax],al
   1400133d4:	cmp    al,dh
   1400133d6:	add    BYTE PTR [rax],al
   1400133d8:	test   BYTE PTR [rbx+0x0],ah
   1400133db:	add    BYTE PTR [rsp+riz*2-0x7800000],dl
   1400133e2:	add    BYTE PTR [rax],al
   1400133e4:	pushf  
   1400133e5:	add    BYTE PTR fs:[rax],al
   1400133e8:	add    al,0x65
   1400133ea:	add    BYTE PTR [rax],al
   1400133ec:	and    al,0xef
   1400133ee:	add    BYTE PTR [rax],al
   1400133f0:	and    BYTE PTR [rbp+0x0],ah
   1400133f3:	add    BYTE PTR [rdi+0x65],al
   1400133f6:	add    BYTE PTR [rax],al
   1400133f8:	lock out dx,al
   1400133fa:	add    BYTE PTR [rax],al
   1400133fc:	push   rax
   1400133fd:	add    BYTE PTR gs:[rax],al
   140013400:	(bad)  
   140013401:	add    BYTE PTR gs:[rax],al
   140013404:	cmp    al,dh
   140013406:	add    BYTE PTR [rax],al
   140013408:	lock add BYTE PTR gs:[rax],al
   14001340c:	mov    edi,0x10000066
   140013411:	repnz add BYTE PTR [rax],al
   140013414:	enter  0x66,0x0
   140013418:	fldenv [rsi+0x0]
   14001341b:	add    BYTE PTR [rsi+rbp*8+0x66e00000],bh
   140013422:	add    BYTE PTR [rax],al
   140013424:	in     al,dx
   140013425:	add    BYTE PTR [eax],al
   140013428:	cwde   
   140013429:	clc    
   14001342a:	add    BYTE PTR [rax],al
   14001342c:	add    al,0x68
   14001342e:	add    BYTE PTR [rax],al
   140013430:	cmp    DWORD PTR [rcx+0x0],ebp
   140013433:	add    BYTE PTR [rax+0x400000f8],ch
   140013439:	imul   eax,DWORD PTR [rax],0x695100
   14001343f:	add    BYTE PTR [rsi+rbp*8+0x69580000],bh
   140013446:	add    BYTE PTR [rax],al
   140013448:	add    DWORD PTR [rsi+0x0],ebp
   14001344b:	add    BYTE PTR [rax+0x80000f9],al
   140013451:	outs   dx,BYTE PTR ds:[rsi]
   140013452:	add    BYTE PTR [rax],al
   140013454:	xchg   esp,eax
   140013455:	outs   dx,BYTE PTR ds:[rsi]
   140013456:	add    BYTE PTR [rax],al
   140013458:	xchg   esp,eax
   140013459:	stc    
   14001345a:	add    BYTE PTR [rax],al
   14001345c:	pushf  
   14001345d:	outs   dx,BYTE PTR ds:[rsi]
   14001345e:	add    BYTE PTR [rax],al
   140013460:	hlt    
   140013461:	outs   dx,BYTE PTR ds:[rsi]
   140013462:	add    BYTE PTR [rax],al
   140013464:	cmp    al,dh
   140013466:	add    BYTE PTR [rax],al
   140013468:	or     BYTE PTR [rdi+0x0],ch
   14001346b:	add    BYTE PTR [rdi+rbp*2-0x5f80000],dh
   140013472:	add    BYTE PTR [rax],al
   140013474:	mov    esp,0x500006f
   140013479:	jo     0x14001347b
   14001347b:	add    BYTE PTR [rax-0x6],al
   14001347e:	add    BYTE PTR [rax],al
   140013480:	adc    BYTE PTR [rax+0x0],dh
   140013483:	add    BYTE PTR [rax+0x71],al
   140013486:	add    BYTE PTR [rax],al
   140013488:	rex.WR cli 
   14001348a:	add    BYTE PTR [rax],al
   14001348c:	shl    BYTE PTR [rcx+0x0],1
   14001348f:	add    cl,ah
   140013491:	jb     0x140013493
   140013493:	add    BYTE PTR [rax-0x6],ch
   140013496:	add    BYTE PTR [rax],al
   140013498:	hlt    
   140013499:	jb     0x14001349b
   14001349b:	add    BYTE PTR [rsi+0x73],cl
   14001349e:	add    BYTE PTR [rax],al
   1400134a0:	mov    al,0xee
   1400134a2:	add    BYTE PTR [rax],al
   1400134a4:	push   rsp
   1400134a5:	jae    0x1400134a7
   1400134a7:	add    BYTE PTR [rdi],dh
   1400134a9:	je     0x1400134ab
   1400134ab:	add    BYTE PTR [rdx+rdi*8+0x0],bh
   1400134af:	add    BYTE PTR [rax+0x74],al
   1400134b2:	add    BYTE PTR [rax],al
   1400134b4:	(bad)  
   1400134b5:	je     0x1400134b7
   1400134b7:	add    al,dh
   1400134b9:	out    dx,al
   1400134ba:	add    BYTE PTR [rax],al
   1400134bc:	push   0xffffffffc3000074
   1400134c1:	je     0x1400134c3
   1400134c3:	add    BYTE PTR [rax],ch
   1400134c5:	sti    
   1400134c6:	add    BYTE PTR [rax],al
   1400134c8:	int3   
   1400134c9:	je     0x1400134cb
   1400134cb:	add    bl,cl
   1400134cd:	jne    0x1400134cf
   1400134cf:	add    BYTE PTR [rax],dl
   1400134d1:	repnz add BYTE PTR [rax],al
   1400134d4:	(bad)  
   1400134d5:	jne    0x1400134d7
   1400134d7:	add    al,bl
   1400134d9:	ja     0x1400134db
   1400134db:	add    BYTE PTR [rax-0x5],dl
   1400134de:	add    BYTE PTR [rax],al
   1400134e0:	loopne 0x140013559
   1400134e2:	add    BYTE PTR [rax],al
   1400134e4:	jl     0x14001355e
   1400134e6:	add    BYTE PTR [rax],al
   1400134e8:	fs sti 
   1400134ea:	add    BYTE PTR [rax],al
   1400134ec:	mov    al,0x78
   1400134ee:	add    BYTE PTR [rax],al
   1400134f0:	rex.X jns 0x1400134f3
   1400134f3:	add    al,dh
   1400134f5:	out    dx,eax
   1400134f6:	add    BYTE PTR [rax],al
   1400134f8:	jo     0x140013573
   1400134fa:	add    BYTE PTR [rax],al
   1400134fc:	movabs al,ds:0xa80000eeb0000079
   140013505:	jns    0x140013507
   140013507:	add    BYTE PTR [rdi+0x7a],ch
   14001350a:	add    BYTE PTR [rax],al
   14001350c:	and    al,0xef
   14001350e:	add    BYTE PTR [rax],al
   140013510:	js     0x14001358c
   140013512:	add    BYTE PTR [rax],al
   140013514:	lea    edi,[rbx+0x0]
   140013517:	add    BYTE PTR [rax+0x80000fb],bh
   14001351d:	jl     0x14001351f
   14001351f:	add    BYTE PTR [rcx-0x4fffff82],ch
   140013525:	out    dx,al
   140013526:	add    BYTE PTR [rax],al
   140013528:	mov    al,0x7e
   14001352a:	add    BYTE PTR [rax],al
   14001352c:	sar    BYTE PTR [rdi+0x0],cl
   14001352f:	add    ah,cl
   140013531:	sti    
   140013532:	add    BYTE PTR [rax],al
   140013534:	loopne 0x1400135b5
   140013536:	add    BYTE PTR [rax],al
   140013538:	xor    eax,0x80000080
   14001353d:	cld    
   14001353e:	add    BYTE PTR [rax],al
   140013540:	rex add BYTE PTR [rax],0x0
   140013544:	imul   eax,DWORD PTR [rax-0x11080000],0x80900000
   14001354e:	add    BYTE PTR [rax],al
   140013550:	fiadd  DWORD PTR [rax-0xfc80000]
   140013556:	add    BYTE PTR [rax],al
   140013558:	loopne 0x1400134da
   14001355a:	add    BYTE PTR [rax],al
   14001355c:	outs   dx,BYTE PTR ds:[rsi]
   14001355d:	add    DWORD PTR [rax],0xfc8800
   140013563:	add    BYTE PTR [rcx+rax*4+0x0],dh
   140013567:	add    BYTE PTR [rdi],cl
   140013569:	(bad)  
   14001356a:	add    BYTE PTR [rax],al
   14001356c:	fdivr  st,st(4)
   14001356e:	add    BYTE PTR [rax],al
   140013570:	sbb    BYTE PTR [rdx-0x7d390000],al
   140013576:	add    BYTE PTR [rax],al
   140013578:	adc    ch,bh
   14001357a:	add    BYTE PTR [rax],al
   14001357c:	rol    BYTE PTR [rdx-0x7bf40000],1
   140013582:	add    BYTE PTR [rax],al
   140013584:	in     al,0xf3
   140013586:	add    BYTE PTR [rax],al
   140013588:	adc    al,0x84
   14001358a:	add    BYTE PTR [rax],al
   14001358c:	test   BYTE PTR [rax+rax*1+0xfd2400],al
   140013593:	add    BYTE PTR [rsp+rax*4-0x7ada0000],cl
   14001359a:	add    BYTE PTR [rax],al
   14001359c:	xor    al,0xfd
   14001359e:	add    BYTE PTR [rax],al
   1400135a0:	xor    BYTE PTR [rbp-0x7a7d0000],al
   1400135a6:	add    BYTE PTR [rax],al
   1400135a8:	rex cli 
   1400135aa:	add    BYTE PTR [rax],al
   1400135ac:	nop
   1400135ad:	test   DWORD PTR [rax],eax
   1400135af:	add    cl,dl
   1400135b1:	test   DWORD PTR [rax],eax
   1400135b3:	add    BYTE PTR [rax],bh
   1400135b5:	lock add BYTE PTR [rax],al
   1400135b8:	loopne 0x14001353f
   1400135ba:	add    BYTE PTR [rax],al
   1400135bc:	xor    DWORD PTR [rsi-0x10dc0000],eax
   1400135c2:	add    BYTE PTR [rax],al
   1400135c4:	xchg   BYTE PTR [rax],al
   1400135c7:	add    BYTE PTR [rcx-0x79],cl
   1400135ca:	add    BYTE PTR [rax],al
   1400135cc:	rex.R std 
   1400135ce:	add    BYTE PTR [rax],al
   1400135d0:	push   rax
   1400135d1:	xchg   DWORD PTR [rax],eax
   1400135d3:	add    dl,cl
   1400135d5:	xchg   DWORD PTR [rax],eax
   1400135d7:	add    BYTE PTR [rax-0x3],bl
   1400135da:	add    BYTE PTR [rax],al
   1400135dc:	lock xchg DWORD PTR [rax],eax
   1400135df:	add    BYTE PTR [rdx-0xfffff78],al
   1400135e5:	out    dx,eax
   1400135e6:	add    BYTE PTR [rax],al
   1400135e8:	mov    al,0x88
   1400135ea:	add    BYTE PTR [rax],al
   1400135ec:	loopne 0x140013576
   1400135ee:	add    BYTE PTR [rax],al
   1400135f0:	mov    al,0xee
   1400135f2:	add    BYTE PTR [rax],al
   1400135f4:	call   0xc9013681
   1400135f9:	mov    DWORD PTR [rax],eax
   1400135fb:	add    BYTE PTR [rax-0x6fffff03],dl
   140013601:	mov    DWORD PTR [rax],eax
   140013603:	add    BYTE PTR [rcx-0x1fffff76],ah
   140013609:	std    
   14001360a:	add    BYTE PTR [rax],al
   14001360c:	adc    BYTE PTR [rbx-0x74510000],cl
   140013612:	add    BYTE PTR [rax],al
   140013614:	sar    dh,0x0
   140013617:	add    al,al
   140013619:	mov    eax,DWORD PTR [rax]
   14001361b:	add    ch,bh
   14001361d:	mov    WORD PTR [rax],es
   14001361f:	add    ah,dl
   140013621:	inc    BYTE PTR [rax]
   140013623:	add    BYTE PTR [rax-0x73],ah
   140013626:	add    BYTE PTR [rax],al
   140013628:	mov    edx,0xb000008d
   14001362d:	out    dx,al
   14001362e:	add    BYTE PTR [rax],al
   140013630:	fmul   DWORD PTR [rbp-0x711d0000]
   140013636:	add    BYTE PTR [rax],al
   140013638:	inc    QWORD PTR [rax]
   14001363b:	add    al,dh
   14001363d:	mov    es,WORD PTR [rax]
   14001363f:	add    BYTE PTR [rdx-0xfffff71],al
   140013645:	out    dx,eax
   140013646:	add    BYTE PTR [rax],al
   140013648:	mov    al,0x8f
   14001364a:	add    BYTE PTR [rax],al
   14001364c:	(bad)  
   14001364d:	nop
   14001364e:	add    BYTE PTR [rax],al
   140013650:	lock out dx,eax
   140013652:	add    BYTE PTR [rax],al
   140013654:	sub    BYTE PTR [rax-0x6f5d0000],dl
   14001365a:	add    BYTE PTR [rax],al
   14001365c:	call   0xf0013760
   140013661:	nop
   140013662:	add    BYTE PTR [rax],al
   140013664:	rex.X xchg ecx,eax
   140013666:	add    BYTE PTR [rax],al
   140013668:	lock out dx,eax
   14001366a:	add    BYTE PTR [rax],al
   14001366c:	jo     0x1400135ff
   14001366e:	add    BYTE PTR [rax],al
   140013670:	movabs al,ds:0xa80000eeb0000091
   140013679:	xchg   ecx,eax
   14001367a:	add    BYTE PTR [rax],al
   14001367c:	fist   DWORD PTR [rcx-0x11500000]
   140013682:	add    BYTE PTR [rax],al
   140013684:	in     al,0x91
   140013686:	add    BYTE PTR [rax],al
   140013688:	scas   eax,DWORD PTR es:[rdi]
   140013689:	xchg   edx,eax
   14001368a:	add    BYTE PTR [rax],al
   14001368c:	and    BYTE PTR [rax],al
   14001368e:	add    DWORD PTR [rax],eax
   140013690:	rcl    BYTE PTR [rdx-0x6cbc0000],0x0
   140013697:	add    BYTE PTR [rdi+rbp*8],ah
   14001369a:	add    BYTE PTR [rax],al
   14001369c:	push   rax
   14001369d:	xchg   ebx,eax
   14001369e:	add    BYTE PTR [rax],al
   1400136a0:	lea    edx,[rbx-0x11500000]
   1400136a6:	add    BYTE PTR [rax],al
   1400136a8:	xchg   esp,eax
   1400136a9:	xchg   ebx,eax
   1400136aa:	add    BYTE PTR [rax],al
   1400136ac:	test   eax,0xe0000094
   1400136b1:	add    BYTE PTR [rcx],al
   1400136b3:	add    BYTE PTR [rax-0x2dffff6c],dh
   1400136b9:	xchg   ebp,eax
   1400136ba:	add    BYTE PTR [rax],al
   1400136bc:	sbb    BYTE PTR [rcx],al
   1400136be:	add    DWORD PTR [rax],eax
   1400136c0:	loopne 0x140013657
   1400136c2:	add    BYTE PTR [rax],al
   1400136c4:	retf   
   1400136c5:	xchg   esi,eax
   1400136c6:	add    BYTE PTR [rax],al
   1400136c8:	add    QWORD PTR [rcx],rax
   1400136cb:	add    ah,dl
   1400136cd:	xchg   esi,eax
   1400136ce:	add    BYTE PTR [rax],al
   1400136d0:	push   rbp
   1400136d1:	(bad)  
   1400136d2:	add    BYTE PTR [rax],al
   1400136d4:	mov    BYTE PTR [rcx],al
   1400136d6:	add    DWORD PTR [rax],eax
   1400136d8:	pop    rsp
   1400136d9:	(bad)  
   1400136da:	add    BYTE PTR [rax],al
   1400136dc:	cmp    eax,0xa80000a0
   1400136e1:	add    al,BYTE PTR [rcx]
   1400136e3:	add    BYTE PTR [rax+riz*4+0x0],al
   1400136e7:	add    BYTE PTR [rsi-0x4fffff60],bl
   1400136ed:	out    dx,al
   1400136ee:	add    BYTE PTR [rax],al
   1400136f0:	mov    al,0xa0
   1400136f2:	add    BYTE PTR [rax],al
   1400136f4:	int3   
   1400136f5:	movabs al,ds:0xa0d40000f5700000
   1400136fe:	add    BYTE PTR [rax],al
   140013700:	(bad)  
   140013701:	movabs eax,ds:0xa10c0000f5700000
   14001370a:	add    BYTE PTR [rax],al
   14001370c:	jb     0x1400136af
   14001370e:	add    BYTE PTR [rax],al
   140013710:	and    al,0xef
   140013712:	add    BYTE PTR [rax],al
   140013714:	js     0x1400136b7
   140013716:	add    BYTE PTR [rax],al
   140013718:	sbb    BYTE PTR [rdx+0x4280000],ah
   14001371e:	add    DWORD PTR [rax],eax
   140013720:	and    BYTE PTR [rdx-0x5d790000],ah
   140013726:	add    BYTE PTR [rax],al
   140013728:	and    al,0xef
   14001372a:	add    BYTE PTR [rax],al
   14001372c:	nop
   14001372d:	movabs ds:0xf2100000a3b30000,al
   140013736:	add    BYTE PTR [rax],al
   140013738:	mov    esp,0x4c0000a3
   14001373d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001373e:	add    BYTE PTR [rax],al
   140013740:	loopne 0x140013739
   140013742:	add    BYTE PTR [rax],al
   140013744:	push   rsp
   140013745:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013746:	add    BYTE PTR [rax],al
   140013748:	in     al,0xa4
   14001374a:	add    BYTE PTR [rax],al
   14001374c:	loopne 0x140013745
   14001374e:	add    BYTE PTR [rax],al
   140013750:	in     al,dx
   140013751:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013752:	add    BYTE PTR [rax],al
   140013754:	ins    BYTE PTR es:[rdi],dx
   140013755:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013756:	add    BYTE PTR [rax],al
   140013758:	push   0x74000104
   14001375d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001375e:	add    BYTE PTR [rax],al
   140013760:	mov    dl,0xa5
   140013762:	add    BYTE PTR [rax],al
   140013764:	jo     0x14001375b
   140013766:	add    BYTE PTR [rax],al
   140013768:	mov    eax,0xce0000a5
   14001376d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001376e:	add    BYTE PTR [rax],al
   140013770:	movabs al,ds:0x6a0000a6d4000104
   140013779:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001377a:	add    BYTE PTR [rax],al
   14001377c:	mov    eax,0x70000104
   140013781:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013782:	add    BYTE PTR [rax],al
   140013784:	rex.RB test al,0x0
   140013787:	add    BYTE PTR [rax],dh
   140013789:	add    eax,0xa84c0001
   14001378e:	add    BYTE PTR [rax],al
   140013790:	(bad)  
   140013791:	test   eax,0x5d80000
   140013796:	add    DWORD PTR [rax],eax
   140013798:	rex test eax,0xa9950000
   14001379e:	add    BYTE PTR [rax],al
   1400137a0:	cmp    ah,0x0
   1400137a3:	add    BYTE PTR [rax-0x32ffff57],ah
   1400137a9:	test   eax,0xeeb00000
   1400137ae:	add    BYTE PTR [rax],al
   1400137b0:	lock test eax,0xaa450000
   1400137b6:	add    BYTE PTR [rax],al
   1400137b8:	cmp    ah,0x0
   1400137bb:	add    BYTE PTR [rax-0x77ffff56],al
   1400137c1:	stos   DWORD PTR es:[rdi],eax
   1400137c2:	add    BYTE PTR [rax],al
   1400137c4:	add    BYTE PTR [rsi],0x1
   1400137c7:	add    BYTE PTR [rax-0x2effff55],dl
   1400137cd:	stos   DWORD PTR es:[rdi],eax
   1400137ce:	add    BYTE PTR [rax],al
   1400137d0:	lock out dx,al
   1400137d2:	add    BYTE PTR [rax],al
   1400137d4:	loopne 0x140013781
   1400137d6:	add    BYTE PTR [rax],al
   1400137d8:	lods   al,BYTE PTR ds:[esi]
   1400137da:	add    BYTE PTR [rax],al
   1400137dc:	cmp    al,dh
   1400137de:	add    BYTE PTR [rax],al
   1400137e0:	jl     0x14001378e
   1400137e2:	add    BYTE PTR [rax],al
   1400137e4:	mov    ah,0xac
   1400137e6:	add    BYTE PTR [rax],al
   1400137e8:	lock out dx,al
   1400137ea:	add    BYTE PTR [rax],al
   1400137ec:	mov    esp,0x350000ac
   1400137f1:	lods   eax,DWORD PTR ds:[rsi]
   1400137f2:	add    BYTE PTR [rax],al
   1400137f4:	cmp    ah,0x0
   1400137f7:	add    BYTE PTR [rbp*4-0x52a30000],bh
   1400137fe:	add    BYTE PTR [rax],al
   140013800:	lock out dx,al
   140013802:	add    BYTE PTR [rax],al
   140013804:	lods   eax,DWORD PTR fs:[rsi]
   140013806:	add    BYTE PTR [rax],al
   140013808:	xchg   ebx,eax
   140013809:	lods   eax,DWORD PTR ds:[rsi]
   14001380a:	add    BYTE PTR [rax],al
   14001380c:	cwde   
   14001380d:	(bad)  
   14001380e:	add    DWORD PTR [rax],eax
   140013810:	mov    al,0xad
   140013812:	add    BYTE PTR [rax],al
   140013814:	fild   QWORD PTR [rbp-0x11500000]
   14001381a:	add    BYTE PTR [rax],al
   14001381c:	call   0x14b0138ce
   140013821:	scas   al,BYTE PTR es:[rdi]
   140013822:	add    BYTE PTR [rax],al
   140013824:	movabs al,ds:0x370000ae14000106
   14001382d:	scas   al,BYTE PTR es:[rdi]
   14001382e:	add    BYTE PTR [rax],al
   140013830:	movabs al,ds:0x610000ae40000106
   140013839:	scas   al,BYTE PTR es:[rdi]
   14001383a:	add    BYTE PTR [rax],al
   14001383c:	lock out dx,al
   14001383e:	add    BYTE PTR [rax],al
   140013840:	push   0xffffffff890000ae
   140013845:	scas   al,BYTE PTR es:[rdi]
   140013846:	add    BYTE PTR [rax],al
   140013848:	lock out dx,al
   14001384a:	add    BYTE PTR [rax],al
   14001384c:	nop
   14001384d:	scas   al,BYTE PTR es:[rdi]
   14001384e:	add    BYTE PTR [rax],al
   140013850:	mov    dl,0xae
   140013852:	add    BYTE PTR [rax],al
   140013854:	movabs al,ds:0x9f0000aed0000106
   14001385d:	scas   eax,DWORD PTR es:[rdi]
   14001385e:	add    BYTE PTR [rax],al
   140013860:	mov    esp,0xb00000ee
   140013865:	scas   eax,DWORD PTR es:[rdi]
   140013866:	add    BYTE PTR [rax],al
   140013868:	stc    
   140013869:	scas   eax,DWORD PTR es:[rdi]
   14001386a:	add    BYTE PTR [rax],al
   14001386c:	add    BYTE PTR [rdi],al
   14001386e:	add    DWORD PTR [rax],eax
   140013870:	add    BYTE PTR [rax-0x4fee0000],dh
   140013876:	add    BYTE PTR [rax],al
   140013878:	mov    esp,0x180000ee
   14001387d:	mov    al,0x0
   14001387f:	add    BYTE PTR [rsi-0x4e],ch
   140013882:	add    BYTE PTR [rax],al
   140013884:	test   al,0x6
   140013886:	add    DWORD PTR [rax],eax
   140013888:	nop
   140013889:	mov    dl,0x0
   14001388b:	add    BYTE PTR [rsi-0x27ffff4e],ch
   140013891:	(bad)  
   140013892:	add    DWORD PTR [rax],eax
   140013894:	mov    ah,0xb2
   140013896:	add    BYTE PTR [rax],al
   140013898:	push   rdx
   140013899:	mov    bl,0x0
   14001389b:	add    ah,bl
   14001389d:	(bad)  
   14001389e:	add    DWORD PTR [rax],eax
   1400138a0:	pop    rax
   1400138a1:	mov    bl,0x0
   1400138a3:	add    BYTE PTR [rdi-0x4d],ch
   1400138a6:	add    BYTE PTR [rax],al
   1400138a8:	mov    esp,0x800000ee
   1400138ad:	mov    bl,0x0
   1400138af:	add    BYTE PTR [rax-0x4fffff4d],dh
   1400138b5:	out    dx,al
   1400138b6:	add    BYTE PTR [rax],al
   1400138b8:	shl    BYTE PTR [rbx-0x4bef0000],0x0
   1400138bf:	add    BYTE PTR [rax],al
   1400138c1:	(bad)  
   1400138c2:	add    DWORD PTR [rax],eax
   1400138c4:	sbb    BYTE PTR [rax+rax*1+0xb44c00],dh
   1400138cb:	add    al,dh
   1400138cd:	out    dx,al
   1400138ce:	add    BYTE PTR [rax],al
   1400138d0:	(bad)  
   1400138d1:	mov    ah,0x0
   1400138d3:	add    cl,dl
   1400138d5:	mov    ch,0x0
   1400138d7:	add    BYTE PTR [rax],dl
   1400138d9:	(bad)  
   1400138da:	add    DWORD PTR [rax],eax
   1400138dc:	fdiv   DWORD PTR [rbp-0x49310000]
   1400138e2:	add    BYTE PTR [rax],al
   1400138e4:	or     BYTE PTR [rdi],al
   1400138e6:	add    DWORD PTR [rax],eax
   1400138e8:	(bad)  
   1400138e9:	mov    bh,0x0
   1400138eb:	add    BYTE PTR [rcx-0x43ffff49],bl
   1400138f1:	out    dx,al
   1400138f2:	add    BYTE PTR [rax],al
   1400138f4:	movabs al,ds:0xbc0000b7b80000b7
   1400138fd:	out    dx,al
   1400138fe:	add    BYTE PTR [rax],al
   140013900:	int3   
   140013901:	mov    bh,0x0
   140013903:	add    BYTE PTR [rax],ah
   140013905:	mov    eax,0x7180000
   14001390a:	add    DWORD PTR [rax],eax
   14001390c:	sub    BYTE PTR [rax-0x47930000],bh
   140013912:	add    BYTE PTR [rax],al
   140013914:	lock out dx,al
   140013916:	add    BYTE PTR [rax],al
   140013918:	sar    BYTE PTR [rax-0x46e30000],1
   14001391e:	add    BYTE PTR [rax],al
   140013920:	cmp    BYTE PTR [rdi],al
   140013922:	add    DWORD PTR [rax],eax
   140013924:	fs mov ecx,0xba340000
   14001392a:	add    BYTE PTR [rax],al
   14001392c:	pop    rsp
   14001392d:	(bad)  
   14001392e:	add    DWORD PTR [rax],eax
   140013930:	nop
   140013931:	mov    edx,0xbb530000
   140013936:	add    BYTE PTR [rax],al
   140013938:	push   0x68000107
   14001393d:	mov    ebx,0xbb850000
   140013942:	add    BYTE PTR [rax],al
   140013944:	mov    esp,0x8c0000ee
   140013949:	mov    ebx,0xbbef0000
   14001394e:	add    BYTE PTR [rax],al
   140013950:	lock out dx,al
   140013952:	add    BYTE PTR [rax],al
   140013954:	sub    BYTE PTR [rax+rax*1+0xbcb700],bh
   14001395b:	add    BYTE PTR [rax],dl
   14001395d:	repnz add BYTE PTR [rax],al
   140013960:	loopne 0x14001391e
   140013962:	add    BYTE PTR [rax],al
   140013964:	loop   0x140013922
   140013966:	add    BYTE PTR [rax],al
   140013968:	add    BYTE PTR [rdi],0x1
   14001396b:	add    BYTE PTR [rax],al
   14001396d:	mov    ebp,0xbd4d0000
   140013972:	add    BYTE PTR [rax],al
   140013974:	mov    BYTE PTR [rdi],al
   140013976:	add    DWORD PTR [rax],eax
   140013978:	(bad)  
   140013979:	mov    ebp,0xbdba0000
   14001397e:	add    BYTE PTR [rax],al
   140013980:	enter  0xf0,0x0
   140013984:	sar    BYTE PTR [rbp-0x42250000],0x0
   14001398b:	add    al,al
   14001398d:	icebp  
   14001398e:	add    BYTE PTR [rax],al
   140013990:	out    0xbd,eax
   140013992:	add    BYTE PTR [rax],al
   140013994:	add    bh,BYTE PTR [rsi-0xe400000]
   14001399a:	add    BYTE PTR [rax],al
   14001399c:	push   rax
   14001399d:	mov    esi,0xbe6b0000
   1400139a2:	add    BYTE PTR [rax],al
   1400139a4:	movabs al,ds:0x920000be770000f3
   1400139ad:	mov    esi,0xf3a00000
   1400139b2:	add    BYTE PTR [rax],al
   1400139b4:	(bad)  
   1400139b5:	mov    esi,0xbee90000
   1400139ba:	add    BYTE PTR [rax],al
   1400139bc:	rex cmc 
   1400139be:	add    BYTE PTR [rax],al
   1400139c0:	sti    
   1400139c1:	mov    esi,0xbf210000
   1400139c6:	add    BYTE PTR [rax],al
   1400139c8:	enter  0xf0,0x0
   1400139cc:	and    DWORD PTR [rdi-0x40b60000],edi
   1400139d2:	add    BYTE PTR [rax],al
   1400139d4:	enter  0xf0,0x0
   1400139d8:	rex.WX movabs rdi,0xf0c80000bf730000
   1400139e2:	add    BYTE PTR [rax],al
   1400139e4:	jae    0x1400139a5
   1400139e6:	add    BYTE PTR [rax],al
   1400139e8:	xchg   ebp,eax
   1400139e9:	mov    edi,0xf6700000
   1400139ee:	add    BYTE PTR [rax],al
   1400139f0:	mov    edi,0xe40000bf
   1400139f5:	mov    edi,0xf7880000
   1400139fa:	add    BYTE PTR [rax],al
   1400139fc:	adc    al,0xc0
   1400139fe:	add    BYTE PTR [rax],al
   140013a00:	rol    BYTE PTR ss:[rax],0x0
   140013a04:	jo     0x1400139fe
   140013a06:	add    BYTE PTR [rax],al
   140013a08:	cmp    al,0xc0
   140013a0a:	add    BYTE PTR [rax],al
   140013a0c:	test   eax,0x700000c0
   140013a11:	stc    
   140013a12:	add    BYTE PTR [rax],al
   140013a14:	test   eax,0xd10000c0
   140013a19:	rol    BYTE PTR [rax],0x0
   140013a1c:	jo     0x140013a17
   140013a1e:	add    BYTE PTR [rax],al
   140013a20:	xlat   BYTE PTR ds:[rbx]
   140013a21:	rol    BYTE PTR [rax],0x0
   140013a24:	sti    
   140013a25:	rol    BYTE PTR [rax],0x0
   140013a28:	clc    
   140013a29:	stc    
   140013a2a:	add    BYTE PTR [rax],al
   140013a2c:	add    ecx,eax
   140013a2e:	add    BYTE PTR [rax],al
   140013a30:	(bad)  
   140013a31:	rol    DWORD PTR [rax],0x0
   140013a34:	enter  0xf0,0x0
   140013a38:	sub    eax,0x4c0000c1
   140013a3d:	rol    DWORD PTR [rax],0x0
   140013a40:	enter  0xf0,0x0
   140013a44:	pop    rax
   140013a45:	rol    DWORD PTR [rax],0x0
   140013a48:	jnp    0x140013a0b
   140013a4a:	add    BYTE PTR [rax],al
   140013a4c:	sbb    bl,bh
   140013a4e:	add    BYTE PTR [rax],al
   140013a50:	mov    ecx,0xd40000c1
   140013a55:	rol    DWORD PTR [rax],0x0
   140013a58:	jo     0x140013a56
   140013a5a:	add    BYTE PTR [rax],al
   140013a5c:	out    0xc1,al
   140013a5e:	add    BYTE PTR [rax],al
   140013a60:	or     al,0xc2
   140013a62:	add    BYTE PTR [rax],al
   140013a64:	enter  0xf0,0x0
   140013a68:	movabs ds:0xb00000c2bd0000c2,al
   140013a71:	inc    BYTE PTR [rax]
   140013a73:	add    bl,al
   140013a75:	ret    0x0
   140013a78:	faddp  st(2),st
   140013a7a:	add    BYTE PTR [rax],al
   140013a7c:	cmp    bh,bh
   140013a7e:	add    BYTE PTR [rax],al
   140013a80:	bnd ret 0x0
   140013a84:	or     eax,0xd80000c3
   140013a89:	inc    DWORD PTR [rax]
   140013a8b:	add    BYTE PTR [rdi],bh
   140013a8d:	ret    
   140013a8e:	add    BYTE PTR [rax],al
   140013a90:	pop    rdx
   140013a91:	ret    
   140013a92:	add    BYTE PTR [rax],al
   140013a94:	rol    BYTE PTR [rax],1
   140013a96:	add    DWORD PTR [rax],eax
   140013a98:	test   bl,al
   140013a9a:	add    BYTE PTR [rax],al
   140013a9c:	stos   BYTE PTR es:[rdi],al
   140013a9d:	ret    
   140013a9e:	add    BYTE PTR [rax],al
   140013aa0:	enter  0xf0,0x0
   140013aa4:	sub    ah,al
   140013aa6:	add    BYTE PTR [rax],al
   140013aa8:	rex.WRX (bad) 
   140013aaa:	add    BYTE PTR [rax],al
   140013aac:	enter  0xf0,0x0
   140013ab0:	cld    
   140013ab1:	(bad)  
   140013ab2:	add    BYTE PTR [rax],al
   140013ab4:	and    ebp,eax
   140013ab6:	add    BYTE PTR [rax],al
   140013ab8:	and    BYTE PTR [rip+0xffffffffc5270001],al        # 0x105283abf
   140013abe:	add    BYTE PTR [rax],al
   140013ac0:	(bad)
   140013ac4:	enter  0xf0,0x0
   140013ac8:	push   rdx
   140013ac9:	(bad)
   140013acc:	jne    0x140013a93
   140013ace:	add    BYTE PTR [rax],al
   140013ad0:	enter  0x105,0x0
   140013ad4:	jnp    0x140013a9b
   140013ad6:	add    BYTE PTR [rax],al
   140013ad8:	(bad)  
   140013ad9:	(bad)
   140013adc:	enter  0xf0,0x0
   140013ae0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013ae1:	(bad)
   140013ae4:	leave  
   140013ae5:	(bad)
   140013ae8:	jo     0x140013af0
   140013aea:	add    DWORD PTR [rax],eax
   140013aec:	iret   
   140013aed:	(bad)
   140013af0:	in     eax,dx
   140013af1:	(bad)
   140013af4:	enter  0xf0,0x0
   140013af8:	(bad)
   140013afc:	(bad)  
   140013afd:	mov    BYTE PTR [rax],0x0
   140013b00:	enter  0xf0,0x0
   140013b04:	and    dh,al
   140013b06:	add    BYTE PTR [rax],al
   140013b08:	rex mov BYTE PTR [rax],0x0
   140013b0c:	enter  0xf0,0x0
   140013b10:	push   rax
   140013b11:	mov    BYTE PTR [rax],0x0
   140013b14:	leave  
   140013b15:	mov    BYTE PTR [rax],0x0
   140013b18:	mov    al,0xee
   140013b1a:	add    BYTE PTR [rax],al
   140013b1c:	rol    dh,1
   140013b1e:	add    BYTE PTR [rax],al
   140013b20:	(bad)  
   140013b21:	mov    DWORD PTR [rax],0xeebc00
   140013b27:	add    BYTE PTR [rax],ah
   140013b29:	mov    DWORD PTR [rax],0xc80100
   140013b2f:	add    BYTE PTR [rax],bh
   140013b31:	lock add BYTE PTR [rax],al

Disassembly of section .rsrc:

0000000140014000 <.rsrc>:
	...
   14001400c:	add    eax,DWORD PTR [rax]
   14001400e:	add    al,BYTE PTR [rax]
   140014010:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014011:	add    DWORD PTR [rax],eax
   140014013:	cmp    BYTE PTR [rax],0x0
   140014016:	add    BYTE PTR [rax-0x7ffffe6c],al
   14001401c:	push   rax
   14001401d:	add    BYTE PTR [rax],al
   14001401f:	cmp    BYTE PTR [rax+0x1],0x0
   140014023:	sub    BYTE PTR [rax+0x0],0x0
   140014027:	adc    BYTE PTR [rax],0x0
   14001402a:	add    BYTE PTR [rax],al
   14001402c:	add    BYTE PTR [rax],0x0
   14001402f:	sbb    BYTE PTR [rax],0x0
   140014032:	add    BYTE PTR [rax],al
   140014034:	cwde   
   140014035:	add    BYTE PTR [rax],al
   140014037:	add    BYTE PTR [rax],0x0
	...
   140014046:	add    DWORD PTR [rax],eax
   140014048:	add    DWORD PTR [rax],eax
   14001404a:	add    BYTE PTR [rax],al
   14001404c:	mov    al,0x0
   14001404e:	add    BYTE PTR [rax+0x0],al
	...
   14001405c:	add    BYTE PTR [rax],al
   14001405e:	add    DWORD PTR [rax],eax
   140014060:	add    BYTE PTR gs:[rax],al
   140014063:	add    al,cl
   140014065:	add    BYTE PTR [rax],al
   140014067:	add    BYTE PTR [rax],0x0
	...
   140014076:	add    DWORD PTR [rax],eax
   140014078:	add    DWORD PTR [rax],eax
   14001407a:	add    BYTE PTR [rax],al
   14001407c:	loopne 0x14001407e
   14001407e:	add    BYTE PTR [rax+0x0],al
	...
   14001408c:	add    BYTE PTR [rax],al
   14001408e:	add    DWORD PTR [rax],eax
   140014090:	add    DWORD PTR [rax],eax
   140014092:	add    BYTE PTR [rax],al
   140014094:	clc    
   140014095:	add    BYTE PTR [rax],al
   140014097:	add    BYTE PTR [rax],0x0
	...
   1400140a6:	add    DWORD PTR [rax],eax
   1400140a8:	add    DWORD PTR [rax],eax
   1400140aa:	add    BYTE PTR [rax],al
   1400140ac:	adc    BYTE PTR [rcx],al
   1400140ae:	add    BYTE PTR [rax+0x0],al
	...
   1400140bc:	add    BYTE PTR [rax],al
   1400140be:	add    DWORD PTR [rax],eax
   1400140c0:	or     DWORD PTR [rax+rax*1],eax
   1400140c3:	add    BYTE PTR [rax],ch
   1400140c5:	add    DWORD PTR [rax],eax
	...
   1400140d3:	add    BYTE PTR [rax],al
   1400140d5:	add    BYTE PTR [rcx],al
   1400140d7:	add    BYTE PTR [rcx],cl
   1400140d9:	add    al,0x0
   1400140db:	add    BYTE PTR [rax],bh
   1400140dd:	add    DWORD PTR [rax],eax
	...
   1400140eb:	add    BYTE PTR [rax],al
   1400140ed:	add    BYTE PTR [rcx],al
   1400140ef:	add    BYTE PTR [rcx],cl
   1400140f1:	add    al,0x0
   1400140f3:	add    BYTE PTR [rax+0x1],cl
	...
   140014106:	add    DWORD PTR [rax],eax
   140014108:	or     DWORD PTR [rax+rax*1],eax
   14001410b:	add    BYTE PTR [rax+0x1],bl
	...
   14001411e:	add    DWORD PTR [rax],eax
   140014120:	or     DWORD PTR [rax+rax*1],eax
   140014123:	add    BYTE PTR [rax+0x1],ch
   140014126:	add    BYTE PTR [rax],al
   140014128:	adc    BYTE PTR [rbp+0x1],dl
   14001412b:	add    al,bh
	...
   140014135:	add    BYTE PTR [rax],al
   140014137:	add    BYTE PTR [rax],dl
   140014139:	push   rax
   14001413a:	add    DWORD PTR [rax],eax
   14001413c:	cli    
   14001413d:	add    al,0x0
	...
   140014147:	add    al,dh
   140014149:	rex.RXB add DWORD PTR [r8],r8d
   14001414c:	sbb    cl,BYTE PTR [rax]
	...
   140014156:	add    BYTE PTR [rax],al
   140014158:	sub    BYTE PTR [rcx+rax*1+0x0],al
   14001415c:	enter  0x3,0x0
	...
   140014168:	mov    al,0x41
   14001416a:	add    DWORD PTR [rax],eax
   14001416c:	jne    0x140014170
	...
   140014176:	add    BYTE PTR [rax],al
   140014178:	or     eax,0x45005700
   14001417d:	add    BYTE PTR [rsi+0x0],dl
   140014180:	push   rsp
   140014181:	add    BYTE PTR [rdi+0x0],bl
   140014184:	push   rsp
   140014185:	add    BYTE PTR [rbp+0x0],al
   140014188:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14001418c:	rex.WR add BYTE PTR [rcx+0x0],r8b
   140014190:	push   rsp
   140014191:	add    BYTE PTR [rbp+0x0],al
   140014194:	or     BYTE PTR [rax],al
   140014196:	push   rdx
   140014197:	add    BYTE PTR [rbp+0x0],al
   14001419a:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14001419e:	push   rbx
   14001419f:	add    BYTE PTR [rax+rax*1+0x52],dl
   1400141a3:	add    BYTE PTR [rcx+0x0],bl
   1400141a6:	add    eax,DWORD PTR [rax]
   1400141a8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400141ac:	rex.WB add BYTE PTR [r8],al
   1400141af:	add    BYTE PTR [rdi+rdi*1],bh
   1400141b2:	js     0x140014221
   1400141b4:	ins    BYTE PTR es:[rdi],dx
   1400141b5:	and    BYTE PTR [rsi+0x65],dh
   1400141b8:	jb     0x14001422d
   1400141ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
   1400141c1:	xor    BYTE PTR [rdi],ah
   1400141c3:	and    BYTE PTR [rbp+0x6e],ah
   1400141c6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400141c9:	imul   ebp,DWORD PTR [rsi+0x67],0x7475273d
   1400141d0:	sub    ax,0x2738
   1400141d4:	and    BYTE PTR [rbx+0x74],dh
   1400141d7:	(bad)  
   1400141d8:	outs   dx,BYTE PTR ds:[rsi]
   1400141d9:	fs (bad) 
   1400141db:	ins    BYTE PTR es:[rdi],dx
   1400141dc:	outs   dx,DWORD PTR ds:[rsi]
   1400141dd:	outs   dx,BYTE PTR ds:[rsi]
   1400141de:	gs cmp eax,0x73657927
   1400141e4:	(bad)  
   1400141e5:	(bad)  
   1400141e6:	ds or  eax,0x2d213c0a
   1400141ec:	sub    eax,0x706f4320
   1400141f1:	jns    0x140014265
   1400141f3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400141fa:	sub    DWORD PTR [rax],esp
   1400141fc:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140014204:	je     0x140014226
   140014206:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014208:	jb     0x14001427a
   14001420a:	outs   dx,DWORD PTR ds:[rsi]
   14001420b:	jb     0x14001426e
   14001420d:	je     0x140014278
   14001420f:	outs   dx,DWORD PTR ds:[rsi]
   140014210:	outs   dx,BYTE PTR ds:[rsi]
   140014211:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e8044
   140014217:	cmp    al,0x61
   140014219:	jae    0x14001428e
   14001421b:	gs ins DWORD PTR es:[rdi],dx
   14001421d:	(bad)  
   14001421e:	ins    BYTE PTR es:[rdi],dx
   14001421f:	jns    0x14001422e
   140014221:	or     ah,BYTE PTR [rax]
   140014223:	and    BYTE PTR [rax],ah
   140014225:	and    BYTE PTR [rax+0x6d],bh
   140014228:	ins    BYTE PTR es:[rdi],dx
   140014229:	outs   dx,BYTE PTR ds:[rsi]
   14001422a:	jae    0x140014269
   14001422c:	and    dh,BYTE PTR [rbp+0x72]
   14001422f:	outs   dx,BYTE PTR ds:[rsi]
   140014230:	cmp    dh,BYTE PTR [rbx+0x63]
   140014233:	push   0x73616d65
   140014238:	sub    eax,0x7263696d
   14001423d:	outs   dx,DWORD PTR ds:[rsi]
   14001423e:	jae    0x1400142af
   140014240:	data16 je 0x140014270
   140014243:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140014246:	cmp    ah,BYTE PTR [rcx+0x73]
   140014249:	ins    DWORD PTR es:[rdi],dx
   14001424a:	cs jbe 0x140014280
   14001424d:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021625d
   140014253:	and    BYTE PTR [rbp+0x61],ch
   140014256:	outs   dx,BYTE PTR ds:[rsi]
   140014257:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001425e:	jb     0x1400142d3
   140014260:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140014267:	xor    BYTE PTR [rdx],ah
   140014269:	or     eax,0x2020200a
   14001426e:	and    BYTE PTR [rsi],bh
   140014270:	or     eax,0x3c20200a
   140014275:	(bad)  
   140014276:	jae    0x1400142eb
   140014278:	gs ins DWORD PTR es:[rdi],dx
   14001427a:	(bad)  
   14001427b:	ins    BYTE PTR es:[rdi],dx
   14001427c:	jns    0x1400142c7
   14001427e:	fs outs dx,BYTE PTR gs:[rsi]
   140014281:	je     0x1400142ec
   140014283:	je     0x1400142fe
   140014285:	or     eax,0x2020200a
   14001428a:	and    BYTE PTR [rax],ah
   14001428c:	and    BYTE PTR [rsi+0x65],dh
   14001428f:	jb     0x140014304
   140014291:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140014298:	xor    DWORD PTR [rsi],ebp
   14001429a:	xor    BYTE PTR [rsi],ch
   14001429c:	xor    BYTE PTR [rdx],ah
   14001429e:	or     eax,0x2020200a
   1400142a3:	and    BYTE PTR [rax],ah
   1400142a5:	and    BYTE PTR [rax+0x72],dh
   1400142a8:	outs   dx,DWORD PTR ds:[rsi]
   1400142a9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400142ac:	jae    0x14001431d
   1400142ae:	jb     0x1400142f1
   1400142b0:	jb     0x140014315
   1400142b2:	push   0x63657469
   1400142b7:	je     0x14001432e
   1400142b9:	jb     0x140014320
   1400142bb:	cmp    eax,0x646d6122
   1400142c0:	ss xor al,0x22
   1400142c3:	or     eax,0x2020200a
   1400142c8:	and    BYTE PTR [rax],ah
   1400142ca:	and    BYTE PTR [rsi+0x61],ch
   1400142cd:	ins    DWORD PTR es:[rdi],dx
   1400142ce:	gs cmp eax,0x73736d22
   1400142d4:	jo     0x14001433b
   1400142d6:	ins    BYTE PTR es:[rdi],dx
   1400142d7:	ins    BYTE PTR es:[rdi],dx
   1400142d8:	movsxd ebp,DWORD PTR [rax+0x65]
   1400142db:	movsxd ebp,DWORD PTR [rbx+0x69]
   1400142de:	outs   dx,BYTE PTR ds:[rsi]
   1400142df:	addr32 push 0x2274736f
   1400142e5:	or     eax,0x2020200a
   1400142ea:	and    BYTE PTR [rax],ah
   1400142ec:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400142f0:	gs cmp eax,0x6e697722
   1400142f6:	xor    esi,DWORD PTR [rdx]
   1400142f8:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160216308
   1400142fe:	and    BYTE PTR [rax],ah
   140014300:	and    BYTE PTR [rdi],ch
   140014302:	ds or  eax,0x3c20200a
   140014308:	je     0x14001437c
   14001430a:	jne    0x14001437f
   14001430c:	je     0x140014357
   14001430e:	outs   dx,BYTE PTR ds:[rsi]
   14001430f:	outs   dx,WORD PTR ds:[rsi]
   140014311:	and    BYTE PTR [rax+0x6d],bh
   140014314:	ins    BYTE PTR es:[rdi],dx
   140014315:	outs   dx,BYTE PTR ds:[rsi]
   140014316:	jae    0x140014355
   140014318:	and    dh,BYTE PTR [rbp+0x72]
   14001431b:	outs   dx,BYTE PTR ds:[rsi]
   14001431c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001431f:	push   0x73616d65
   140014324:	sub    eax,0x7263696d
   140014329:	outs   dx,DWORD PTR ds:[rsi]
   14001432a:	jae    0x14001439b
   14001432c:	data16 je 0x14001435c
   14001432f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140014332:	cmp    ah,BYTE PTR [rcx+0x73]
   140014335:	ins    DWORD PTR es:[rdi],dx
   140014336:	cs jbe 0x14001436c
   140014339:	and    bh,BYTE PTR [rsi]
   14001433b:	or     eax,0x2020200a
   140014340:	and    BYTE PTR [rbx+rsi*2],bh
   140014343:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140014347:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001434f:	and    BYTE PTR [rax],ah
   140014351:	and    BYTE PTR [rax],ah
   140014353:	cmp    al,0x72
   140014355:	gs jno 0x1400143cd
   140014358:	gs jae 0x1400143cf
   14001435b:	gs fs push rax
   14001435e:	jb     0x1400143c9
   140014360:	jbe    0x1400143cb
   140014362:	ins    BYTE PTR es:[rdi],dx
   140014363:	gs addr32 gs jae 0x1400143a6
   140014368:	or     eax,0x2020200a
   14001436d:	and    BYTE PTR [rax],ah
   14001436f:	and    BYTE PTR [rax],ah
   140014371:	and    BYTE PTR [rdx+rsi*2],bh
   140014374:	gs jno 0x1400143ec
   140014377:	gs jae 0x1400143ee
   14001437a:	gs fs rex.RB js 0x1400143e4
   14001437f:	movsxd esi,DWORD PTR [rbp+0x74]
   140014382:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140014389:	ins    BYTE PTR es:[rdi],dx
   14001438a:	or     eax,0x2020200a
   14001438f:	and    BYTE PTR [rax],ah
   140014391:	and    BYTE PTR [rax],ah
   140014393:	and    BYTE PTR [rax],ah
   140014395:	and    BYTE PTR [rax],ah
   140014397:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001439b:	gs ins BYTE PTR es:[rdi],dx
   14001439d:	cmp    eax,0x49736122
   1400143a2:	outs   dx,BYTE PTR ds:[rsi]
   1400143a3:	jbe    0x140014414
   1400143a5:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400143a9:	or     eax,0x2020200a
   1400143ae:	and    BYTE PTR [rax],ah
   1400143b0:	and    BYTE PTR [rax],ah
   1400143b2:	and    BYTE PTR [rax],ah
   1400143b4:	and    BYTE PTR [rax],ah
   1400143b6:	and    BYTE PTR [rbp+0x69],dh
   1400143b9:	movsxd esp,DWORD PTR [r11+0x65]
   1400143bd:	jae    0x140014432
   1400143bf:	cmp    eax,0x6c616622
   1400143c4:	jae    0x14001442b
   1400143c6:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602163d6
   1400143cc:	and    BYTE PTR [rax],ah
   1400143ce:	and    BYTE PTR [rax],ah
   1400143d0:	and    BYTE PTR [rax],ah
   1400143d2:	and    BYTE PTR [rax],ah
   1400143d4:	and    BYTE PTR [rdi],ch
   1400143d6:	ds or  eax,0x2020200a
   1400143dc:	and    BYTE PTR [rax],ah
   1400143de:	and    BYTE PTR [rdi+rbp*1],bh
   1400143e1:	jb     0x140014448
   1400143e3:	jno    0x14001445a
   1400143e5:	gs jae 0x14001445c
   1400143e8:	gs fs push rax
   1400143eb:	jb     0x140014456
   1400143ed:	jbe    0x140014458
   1400143ef:	ins    BYTE PTR es:[rdi],dx
   1400143f0:	gs addr32 gs jae 0x140014433
   1400143f5:	or     eax,0x2020200a
   1400143fa:	and    BYTE PTR [rdi+rbp*1],bh
   1400143fd:	jae    0x140014464
   1400143ff:	movsxd esi,DWORD PTR [rbp+0x72]
   140014402:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001440a:	cmp    al,0x2f
   14001440c:	je     0x140014480
   14001440e:	jne    0x140014483
   140014410:	je     0x14001445b
   140014412:	outs   dx,BYTE PTR ds:[rsi]
   140014413:	outs   dx,WORD PTR ds:[rsi]
   140014415:	ds or  eax,0x612f3c0a
   14001441b:	jae    0x140014490
   14001441d:	gs ins DWORD PTR es:[rdi],dx
   14001441f:	(bad)  
   140014420:	ins    BYTE PTR es:[rdi],dx
   140014421:	jns    0x140014461
   140014423:	or     eax,0xa
   140014428:	enter  0x3403,0x0
   14001442c:	add    BYTE PTR [rax],al
   14001442e:	push   rsi
   14001442f:	add    BYTE PTR [rbx+0x0],dl
   140014432:	pop    rdi
   140014433:	add    BYTE PTR [rsi+0x0],dl
   140014436:	add    BYTE PTR [r10+0x0],r10b
   14001443a:	push   rbx
   14001443b:	add    BYTE PTR [rcx+0x0],cl
   14001443e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140014442:	pop    rdi
   140014443:	add    BYTE PTR [rcx+0x0],cl
   140014446:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001444a:	rex.WRXB add BYTE PTR [r8],r8b
   14001444d:	add    BYTE PTR [rax],al
   14001444f:	add    BYTE PTR [rbp+0xfeef04],bh
   140014455:	add    BYTE PTR [rcx],al
   140014457:	add    BYTE PTR [rax],al
   140014459:	add    BYTE PTR [rdx],cl
   14001445b:	add    BYTE PTR [rax],al
   14001445d:	add    BYTE PTR [rax],bpl
   140014460:	add    BYTE PTR [rax],al
   140014462:	or     al,BYTE PTR [rax]
   140014464:	add    BYTE PTR [rax+0x0],al
   140014467:	sub    BYTE PTR [rdi],bh
   140014469:	add    BYTE PTR [rax],al
   14001446b:	add    BYTE PTR [rax],al
   14001446d:	add    BYTE PTR [rax],al
   14001446f:	add    BYTE PTR [rax+rax*1],al
   140014472:	add    al,0x0
   140014474:	add    DWORD PTR [rax],eax
	...
   140014482:	add    BYTE PTR [rax],al
   140014484:	add    eax,DWORD PTR es:[rax]
   140014487:	add    BYTE PTR [rcx],al
   140014489:	add    BYTE PTR [rbx+0x0],dl
   14001448c:	je     0x14001448e
   14001448e:	jb     0x140014490
   140014490:	imul   eax,DWORD PTR [rax],0x67006e
   140014496:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001449a:	ins    BYTE PTR es:[rdi],dx
   14001449b:	add    BYTE PTR [rbp+0x0],ah
   14001449e:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400144a2:	data16 add BYTE PTR [rdi+0x0],ch
   1400144a6:	add    BYTE PTR [rax],al
   1400144a8:	add    al,BYTE PTR [rbx]
   1400144aa:	add    BYTE PTR [rax],al
   1400144ac:	add    DWORD PTR [rax],eax
   1400144ae:	xor    BYTE PTR [rax],al
   1400144b0:	xor    al,0x0
   1400144b2:	xor    BYTE PTR [rax],al
   1400144b4:	cmp    DWORD PTR [rax],eax
   1400144b6:	xor    BYTE PTR [rax],al
   1400144b8:	xor    al,0x0
   1400144ba:	rex.X add BYTE PTR [rax],sil
   1400144bd:	add    BYTE PTR [rax],al
   1400144bf:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400144c3:	add    BYTE PTR [rcx],al
   1400144c5:	add    BYTE PTR [rbx+0x0],al
   1400144c8:	outs   dx,DWORD PTR ds:[rsi]
   1400144c9:	add    BYTE PTR [rbp+0x0],ch
   1400144cc:	jo     0x1400144ce
   1400144ce:	(bad)  
   1400144cf:	add    BYTE PTR [rsi+0x0],ch
   1400144d2:	jns    0x1400144d4
   1400144d4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400144d8:	ins    DWORD PTR es:[rdi],dx
   1400144d9:	add    BYTE PTR [rbp+0x0],ah
   1400144dc:	add    BYTE PTR [rax],al
   1400144de:	add    BYTE PTR [rax],al
   1400144e0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400144e4:	movsxd eax,DWORD PTR [rax]
   1400144e6:	jb     0x1400144e8
   1400144e8:	outs   dx,DWORD PTR ds:[rsi]
   1400144e9:	add    BYTE PTR [rbx+0x0],dh
   1400144ec:	outs   dx,DWORD PTR ds:[rsi]
   1400144ed:	add    BYTE PTR [rsi+0x0],ah
   1400144f0:	je     0x1400144f2
   1400144f2:	and    BYTE PTR [rax],al
   1400144f4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400144f8:	jb     0x1400144fa
   1400144fa:	jo     0x1400144fc
   1400144fc:	outs   dx,DWORD PTR ds:[rsi]
   1400144fd:	add    BYTE PTR [rdx+0x0],dh
   140014500:	(bad)  
   140014501:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014505:	add    BYTE PTR [rdi+0x0],ch
   140014508:	outs   dx,BYTE PTR ds:[rsi]
   140014509:	add    BYTE PTR [rax],al
   14001450b:	add    BYTE PTR [rax+rax*1+0x1e],ah
   14001450f:	add    BYTE PTR [rcx],al
   140014511:	add    BYTE PTR [rsi+0x0],al
   140014514:	imul   eax,DWORD PTR [rax],0x65006c
   14001451a:	add    BYTE PTR [rbp+0x0],r12b
   14001451e:	jae    0x140014520
   140014520:	movsxd eax,DWORD PTR [rax]
   140014522:	jb     0x140014524
   140014524:	imul   eax,DWORD PTR [rax],0x740070
   14001452a:	imul   eax,DWORD PTR [rax],0x6e006f
   140014530:	add    BYTE PTR [rax],al
   140014532:	add    BYTE PTR [rax],al
   140014534:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014538:	movsxd eax,DWORD PTR [rax]
   14001453a:	jb     0x14001453c
   14001453c:	outs   dx,DWORD PTR ds:[rsi]
   14001453d:	add    BYTE PTR [rbx+0x0],dh
   140014540:	outs   dx,DWORD PTR ds:[rsi]
   140014541:	add    BYTE PTR [rsi+0x0],ah
   140014544:	je     0x140014546
   140014546:	and    BYTE PTR [rax],al
   140014548:	push   rbx
   140014549:	add    BYTE PTR [rax+0x0],dh
   14001454c:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140014551:	add    BYTE PTR [rax],ah
   140014553:	add    BYTE PTR [rbx+0x0],al
   140014556:	push   0x63006500
   14001455b:	add    BYTE PTR [rbx+0x0],ch
   14001455e:	imul   eax,DWORD PTR [rax],0x67006e
   140014564:	and    BYTE PTR [rax],al
   140014566:	rex.W add BYTE PTR [rdi+0x0],bpl
   14001456a:	jae    0x14001456c
   14001456c:	je     0x14001456e
   14001456e:	add    BYTE PTR [rax],al
   140014570:	data16 add BYTE PTR [rbx],ah
   140014573:	add    BYTE PTR [rcx],al
   140014575:	add    BYTE PTR [rsi+0x0],al
   140014578:	imul   eax,DWORD PTR [rax],0x65006c
   14001457e:	push   rsi
   14001457f:	add    BYTE PTR [rbp+0x0],ah
   140014582:	jb     0x140014584
   140014584:	jae    0x140014586
   140014586:	imul   eax,DWORD PTR [rax],0x6e006f
   14001458c:	add    BYTE PTR [rax],al
   14001458e:	add    BYTE PTR [rax],al
   140014590:	xor    DWORD PTR [rax],eax
   140014592:	xor    BYTE PTR [rax],al
   140014594:	add    BYTE PTR cs:[rax],dh
   140014597:	add    BYTE PTR [rsi],ch
   140014599:	add    BYTE PTR [rcx],dh
   14001459b:	add    BYTE PTR [rax],dh
   14001459d:	add    BYTE PTR [rdx],dh
   14001459f:	add    BYTE PTR [rax+rax*1],dh
   1400145a2:	xor    BYTE PTR [rax],al
   1400145a4:	add    BYTE PTR cs:[rcx],dh
   1400145a7:	add    BYTE PTR [rsi],dh
   1400145a9:	add    BYTE PTR [rbx],dh
   1400145ab:	add    BYTE PTR [rax],bh
   1400145ad:	add    BYTE PTR [rax+rax*1],dh
   1400145b0:	and    BYTE PTR [rax],al
   1400145b2:	sub    BYTE PTR [rax],al
   1400145b4:	je     0x1400145b6
   1400145b6:	push   0x2e003100
   1400145bb:	add    BYTE PTR [rcx],dh
   1400145bd:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770175c3
   1400145c3:	add    BYTE PTR [rax],dh
   1400145c5:	add    BYTE PTR [rcx],bh
   1400145c7:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770176cd
   1400145cd:	add    BYTE PTR [rax],dh
   1400145cf:	add    BYTE PTR [rax],dh
   1400145d1:	add    BYTE PTR [rcx],ch
   1400145d3:	add    BYTE PTR [rax],al
   1400145d5:	add    BYTE PTR [rax],al
   1400145d7:	add    BYTE PTR [rax+0x0],cl
   1400145da:	adc    al,0x0
   1400145dc:	add    DWORD PTR [rax],eax
   1400145de:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400145e2:	je     0x1400145e4
   1400145e4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400145e8:	outs   dx,BYTE PTR ds:[rsi]
   1400145e9:	add    BYTE PTR [rcx+0x0],ah
   1400145ec:	ins    BYTE PTR es:[rdi],dx
   1400145ed:	add    BYTE PTR [rsi+0x0],cl
   1400145f0:	(bad)  
   1400145f1:	add    BYTE PTR [rbp+0x0],ch
   1400145f4:	add    BYTE PTR gs:[rax],al
   1400145f7:	add    BYTE PTR [rbp+0x0],cl
   1400145fa:	jae    0x1400145fc
   1400145fc:	push   rbx
   1400145fd:	add    BYTE PTR [rax+0x0],dh
   140014600:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140014605:	add    BYTE PTR [rbx+0x0],al
   140014608:	push   0x63006500
   14001460d:	add    BYTE PTR [rbx+0x0],ch
   140014610:	imul   eax,DWORD PTR [rax],0x67006e
   140014616:	rex.W add BYTE PTR [rdi+0x0],bpl
   14001461a:	jae    0x14001461c
   14001461c:	je     0x14001461e
   14001461e:	add    BYTE PTR [rax],al
   140014620:	add    BYTE PTR [rax],0x2e
   140014623:	add    BYTE PTR [rcx],al
   140014625:	add    BYTE PTR [rax+rax*1+0x65],cl
   140014629:	add    BYTE PTR [rdi+0x0],ah
   14001462c:	(bad)  
   14001462d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140014631:	add    BYTE PTR [rdi+0x0],ch
   140014634:	jo     0x140014636
   140014636:	jns    0x140014638
   140014638:	jb     0x14001463a
   14001463a:	imul   eax,DWORD PTR [rax],0x680067
   140014640:	je     0x140014642
   140014642:	add    BYTE PTR [rax],al
   140014644:	test   eax,0x4d002000
   140014649:	add    BYTE PTR [rcx+0x0],ch
   14001464c:	movsxd eax,DWORD PTR [rax]
   14001464e:	jb     0x140014650
   140014650:	outs   dx,DWORD PTR ds:[rsi]
   140014651:	add    BYTE PTR [rbx+0x0],dh
   140014654:	outs   dx,DWORD PTR ds:[rsi]
   140014655:	add    BYTE PTR [rsi+0x0],ah
   140014658:	je     0x14001465a
   14001465a:	and    BYTE PTR [rax],al
   14001465c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140014660:	jb     0x140014662
   140014662:	jo     0x140014664
   140014664:	outs   dx,DWORD PTR ds:[rsi]
   140014665:	add    BYTE PTR [rdx+0x0],dh
   140014668:	(bad)  
   140014669:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001466d:	add    BYTE PTR [rdi+0x0],ch
   140014670:	outs   dx,BYTE PTR ds:[rsi]
   140014671:	add    BYTE PTR [rsi],ch
   140014673:	add    BYTE PTR [rax],ah
   140014675:	add    BYTE PTR [rcx+0x0],al
   140014678:	ins    BYTE PTR es:[rdi],dx
   140014679:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001467d:	add    BYTE PTR [rdx+0x0],dh
   140014680:	imul   eax,DWORD PTR [rax],0x680067
   140014686:	je     0x140014688
   140014688:	jae    0x14001468a
   14001468a:	and    BYTE PTR [rax],al
   14001468c:	jb     0x14001468e
   14001468e:	add    BYTE PTR gs:[rbx+0x0],dh
   140014692:	add    BYTE PTR gs:[rdx+0x0],dh
   140014696:	jbe    0x140014698
   140014698:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14001469d:	add    BYTE PTR [rax],al
   14001469f:	add    BYTE PTR [rax+0x0],bl
   1400146a2:	sbb    BYTE PTR [rax],al
   1400146a4:	add    DWORD PTR [rax],eax
   1400146a6:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   1400146aa:	imul   eax,DWORD PTR [rax],0x690067
   1400146b0:	outs   dx,BYTE PTR ds:[rsi]
   1400146b1:	add    BYTE PTR [rcx+0x0],ah
   1400146b4:	ins    BYTE PTR es:[rdi],dx
   1400146b5:	add    BYTE PTR [rsi+0x0],al
   1400146b8:	imul   eax,DWORD PTR [rax],0x65006c
   1400146be:	outs   dx,BYTE PTR ds:[rsi]
   1400146bf:	add    BYTE PTR [rcx+0x0],ah
   1400146c2:	ins    DWORD PTR es:[rdi],dx
   1400146c3:	add    BYTE PTR [rbp+0x0],ah
   1400146c6:	add    BYTE PTR [rax],al
   1400146c8:	rex.WRB add BYTE PTR [r11+0x0],r14b
   1400146cc:	push   rbx
   1400146cd:	add    BYTE PTR [rax+0x0],dh
   1400146d0:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   1400146d5:	add    BYTE PTR [rbx+0x0],al
   1400146d8:	push   0x63006500
   1400146dd:	add    BYTE PTR [rbx+0x0],ch
   1400146e0:	imul   eax,DWORD PTR [rax],0x67006e
   1400146e6:	rex.W add BYTE PTR [rdi+0x0],bpl
   1400146ea:	jae    0x1400146ec
   1400146ec:	je     0x1400146ee
   1400146ee:	add    BYTE PTR cs:[rbp+0x0],ah
   1400146f2:	js     0x1400146f4
   1400146f4:	add    BYTE PTR gs:[rax],al
   1400146f7:	add    BYTE PTR [rdx+0x0],ch
   1400146fa:	and    eax,0x50000100
   1400146ff:	add    BYTE PTR [rdx+0x0],dh
   140014702:	outs   dx,DWORD PTR ds:[rsi]
   140014703:	add    BYTE PTR [rax+rax*1+0x75],ah
   140014707:	add    BYTE PTR [rbx+0x0],ah
   14001470a:	je     0x14001470c
   14001470c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014710:	ins    DWORD PTR es:[rdi],dx
   140014711:	add    BYTE PTR [rbp+0x0],ah
   140014714:	add    BYTE PTR [rax],al
   140014716:	add    BYTE PTR [rax],al
   140014718:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001471c:	movsxd eax,DWORD PTR [rax]
   14001471e:	jb     0x140014720
   140014720:	outs   dx,DWORD PTR ds:[rsi]
   140014721:	add    BYTE PTR [rbx+0x0],dh
   140014724:	outs   dx,DWORD PTR ds:[rsi]
   140014725:	add    BYTE PTR [rsi+0x0],ah
   140014728:	je     0x14001472a
   14001472a:	scas   al,BYTE PTR es:[rdi]
   14001472b:	add    BYTE PTR [rax],ah
   14001472d:	add    BYTE PTR [rdi+0x0],dl
   140014730:	imul   eax,DWORD PTR [rax],0x64006e
   140014736:	outs   dx,DWORD PTR ds:[rsi]
   140014737:	add    BYTE PTR [rdi+0x0],dh
   14001473a:	jae    0x14001473c
   14001473c:	scas   al,BYTE PTR es:[rdi]
   14001473d:	add    BYTE PTR [rax],ah
   14001473f:	add    BYTE PTR [rdi+0x0],cl
   140014742:	jo     0x140014744
   140014744:	add    BYTE PTR gs:[rdx+0x0],dh
   140014748:	(bad)  
   140014749:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001474d:	add    BYTE PTR [rsi+0x0],ch
   140014750:	add    BYTE PTR [eax],ah
   140014753:	add    BYTE PTR [rbx+0x0],dl
   140014756:	jns    0x140014758
   140014758:	jae    0x14001475a
   14001475a:	je     0x14001475c
   14001475c:	add    BYTE PTR gs:[rbp+0x0],ch
   140014760:	add    BYTE PTR [rax],al
   140014762:	add    BYTE PTR [rax],al
   140014764:	rex.RX add BYTE PTR [rcx],r10b
   140014767:	add    BYTE PTR [rcx],al
   140014769:	add    BYTE PTR [rax+0x0],dl
   14001476c:	jb     0x14001476e
   14001476e:	outs   dx,DWORD PTR ds:[rsi]
   14001476f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140014773:	add    BYTE PTR [rbx+0x0],ah
   140014776:	je     0x140014778
   140014778:	push   rsi
   140014779:	add    BYTE PTR [rbp+0x0],ah
   14001477c:	jb     0x14001477e
   14001477e:	jae    0x140014780
   140014780:	imul   eax,DWORD PTR [rax],0x6e006f
   140014786:	add    BYTE PTR [rax],al
   140014788:	xor    DWORD PTR [rax],eax
   14001478a:	xor    BYTE PTR [rax],al
   14001478c:	add    BYTE PTR cs:[rax],dh
   14001478f:	add    BYTE PTR [rsi],ch
   140014791:	add    BYTE PTR [rcx],dh
   140014793:	add    BYTE PTR [rax],dh
   140014795:	add    BYTE PTR [rdx],dh
   140014797:	add    BYTE PTR [rax+rax*1],dh
   14001479a:	xor    BYTE PTR [rax],al
   14001479c:	add    BYTE PTR cs:[rcx],dh
   14001479f:	add    BYTE PTR [rsi],dh
   1400147a1:	add    BYTE PTR [rbx],dh
   1400147a3:	add    BYTE PTR [rax],bh
   1400147a5:	add    BYTE PTR [rax+rax*1],dh
   1400147a8:	add    BYTE PTR [rax],al
   1400147aa:	add    BYTE PTR [rax],al
   1400147ac:	add    BYTE PTR [rax],r8b
   1400147af:	add    BYTE PTR [rcx],al
   1400147b1:	add    BYTE PTR [rsi+0x0],dl
   1400147b4:	(bad)  
   1400147b5:	add    BYTE PTR [rdx+0x0],dh
   1400147b8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400147bc:	ins    BYTE PTR es:[rdi],dx
   1400147bd:	add    BYTE PTR [rbp+0x0],ah
   1400147c0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400147c4:	data16 add BYTE PTR [rdi+0x0],ch
   1400147c8:	add    BYTE PTR [rax],al
   1400147ca:	add    BYTE PTR [rax],al
   1400147cc:	and    al,0x0
   1400147ce:	add    al,0x0
   1400147d0:	add    BYTE PTR [rax],al
   1400147d2:	push   rsp
   1400147d3:	add    BYTE PTR [rdx+0x0],dh
   1400147d6:	(bad)  
   1400147d7:	add    BYTE PTR [rsi+0x0],ch
   1400147da:	jae    0x1400147dc
   1400147dc:	ins    BYTE PTR es:[rdi],dx
   1400147dd:	add    BYTE PTR [rcx+0x0],ah
   1400147e0:	je     0x1400147e2
   1400147e2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400147e8:	add    BYTE PTR [rax],al
   1400147ea:	add    BYTE PTR [rax],al
   1400147ec:	or     DWORD PTR [rax+rsi*4],eax
   1400147ef:	add    al,0x43
   1400147f1:	push   rdx
   1400147f2:	rex.WB
   1400147f3:	rex.WRB sbb BYTE PTR [r8],r9b
   1400147f6:	add    BYTE PTR [rax],al
   1400147f8:	add    eax,DWORD PTR [rax]
   1400147fa:	add    DWORD PTR [rax],eax
   1400147fc:	add    DWORD PTR [rax],eax
   1400147fe:	add    BYTE PTR [rax],al
   140014800:	mov    cl,0x2a
   140014802:	ficomp DWORD PTR [rbx]
   140014804:	sar    DWORD PTR [rbx+0x49a84acb],0xc0
   14001480b:	out    dx,eax
   14001480c:	sub    esp,DWORD PTR [rsi+rdx*4]
   14001480f:	jb     0x140014835
   140014811:	add    BYTE PTR [rax],al
   140014813:	add    BYTE PTR [rdi+0x45],dl
   140014816:	push   rsi
   140014817:	push   rsp
   140014818:	hlt    
   140014819:	(bad)  
   14001481a:	add    BYTE PTR [rax],al
   14001481c:	(bad)  
   14001481d:	(bad)  
   14001481e:	(bad)  
   14001481f:	dec    DWORD PTR [rax]
   140014821:	add    BYTE PTR [rax],al
   140014823:	add    BYTE PTR [rip+0xffffffff8c000000],al        # 0xcc014829
   140014829:	add    BYTE PTR [rax],al
   14001482b:	add    BYTE PTR [rsi],al
   14001482d:	add    BYTE PTR [rax],al
   14001482f:	add    BYTE PTR [rcx+rax*1],dh
   140014832:	add    BYTE PTR [rax],al
   140014834:	(bad)  
   140014835:	add    BYTE PTR [rax],al
   140014837:	add    BYTE PTR [rax+0x2000001],bl
   14001483d:	add    BYTE PTR [rax],al
   14001483f:	add    BYTE PTR [rax],ah
   140014841:	(bad)  
   140014842:	add    BYTE PTR [rax],al
   140014844:	add    BYTE PTR [rax],al
   140014846:	add    BYTE PTR [rax],al
   140014848:	pushf  
   140014849:	(bad)  
   14001484a:	add    BYTE PTR [rax],al
   14001484c:	add    DWORD PTR [rax],eax
   14001484e:	add    BYTE PTR [rax],al
   140014850:	add    BYTE PTR [rdi],al
   140014852:	add    BYTE PTR [rax],al
   140014854:	add    eax,DWORD PTR [rax]
   140014856:	add    BYTE PTR [rax],al
   140014858:	or     al,0x7
   14001485a:	add    BYTE PTR [rax],al
   14001485c:	add    al,0x0
   14001485e:	add    BYTE PTR [rax],al
   140014860:	sbb    BYTE PTR [rdi],al
	...
   14001487a:	add    BYTE PTR [rax],al
   14001487c:	rex.XB
   14001487d:	rex.W
   14001487e:	rex.B
   14001487f:	rex.WRX test al,0x0
   140014882:	add    BYTE PTR [rax],al
   140014884:	add    al,BYTE PTR [rax]
   140014886:	add    BYTE PTR [rax],al
   140014888:	add    BYTE PTR [rax],al
   14001488a:	add    BYTE PTR [rax],al
   14001488c:	mov    eax,0x10000000
   140014891:	add    BYTE PTR [rax],al
   140014893:	add    BYTE PTR [rcx],al
   140014895:	add    BYTE PTR [rax],al
   140014897:	nop
   140014898:	add    DWORD PTR [rax],eax
   14001489a:	add    BYTE PTR [rax],al
   14001489c:	sbb    BYTE PTR [rcx],al
   14001489e:	add    BYTE PTR [rax],al
   1400148a0:	or     DWORD PTR [rax],eax
   1400148a2:	add    BYTE PTR [rax],al
   1400148a4:	add    al,BYTE PTR [rax]
   1400148a6:	add    BYTE PTR [rax+0x60],dl
   1400148ac:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400148b0:	movsxd eax,DWORD PTR [rax]
   1400148b2:	jb     0x1400148b4
   1400148b4:	outs   dx,DWORD PTR ds:[rsi]
   1400148b5:	add    BYTE PTR [rbx+0x0],dh
   1400148b8:	outs   dx,DWORD PTR ds:[rsi]
   1400148b9:	add    BYTE PTR [rsi+0x0],ah
   1400148bc:	je     0x1400148be
   1400148be:	sub    eax,0x69005700
   1400148c3:	add    BYTE PTR [rsi+0x0],ch
   1400148c6:	add    BYTE PTR fs:[rdi+0x0],ch
   1400148ca:	ja     0x1400148cc
   1400148cc:	jae    0x1400148ce
   1400148ce:	sub    eax,0x70005300
   1400148d3:	add    BYTE PTR [rbp+0x0],ah
   1400148d6:	ins    BYTE PTR es:[rdi],dx
   1400148d7:	add    BYTE PTR [rax+rax*1+0x63],ch
   1400148db:	add    BYTE PTR [rax+0x0],ch
   1400148de:	add    BYTE PTR gs:[rbx+0x0],ah
   1400148e2:	imul   eax,DWORD PTR [rax],0x69
   1400148e5:	add    BYTE PTR [rsi+0x0],ch
   1400148e8:	add    BYTE PTR [eip+0x6f004800],ch        # 0x1af0190ef
   1400148ef:	add    BYTE PTR [rbx+0x0],dh
   1400148f2:	je     0x1400148f4
   1400148f4:	(bad)  
   1400148f5:	add    BYTE PTR [rcx+0x0],al
   1400148f8:	outs   dx,BYTE PTR ds:[rsi]
   1400148f9:	add    BYTE PTR [rcx+0x0],ah
   1400148fc:	ins    BYTE PTR es:[rdi],dx
   1400148fd:	add    BYTE PTR [rcx+0x0],bh
   140014900:	je     0x140014902
   140014902:	imul   eax,DWORD PTR [rax],0x63
   140014908:	sbb    al,0x0
   14001490a:	add    BYTE PTR [rax],al
   14001490c:	add    BYTE PTR [r8+0x0],sil
   140014910:	jo     0x140014912
   140014912:	ins    BYTE PTR es:[rdi],dx
   140014913:	add    BYTE PTR [rcx+0x0],ch
   140014916:	movsxd eax,DWORD PTR [rax]
   140014918:	(bad)  
   140014919:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001491d:	add    BYTE PTR [rdi+0x0],ch
   140014920:	outs   dx,BYTE PTR ds:[rsi]
   140014921:	add    BYTE PTR [rax],al
   140014923:	add    BYTE PTR [rbp+0x41],cl
   140014926:	push   rax
   140014927:	push   rbx
   140014928:	add    BYTE PTR fs:[rax],al
   14001492b:	add    BYTE PTR [rcx],al
   14001492d:	add    BYTE PTR [rax],al
   14001492f:	add    BYTE PTR [rcx+rax*1+0x0],al
   140014933:	add    BYTE PTR [rsi+0x4d],dl
   140014936:	push   r8
   140014938:	xor    al,0x0
   14001493a:	add    BYTE PTR [rax],al
   14001493c:	js     0x14001493f
   14001493e:	add    BYTE PTR [rax],al
   140014940:	add    BYTE PTR [rax],al
   140014942:	add    BYTE PTR [rax],al
   140014944:	add    al,0x0
   140014946:	add    BYTE PTR [rax],al
   140014948:	add    BYTE PTR [rax],al
   14001494a:	add    BYTE PTR [rax],al
   14001494c:	add    DWORD PTR [rax],eax
   14001494e:	add    al,dl
   140014950:	add    DWORD PTR [rax],eax
   140014952:	add    BYTE PTR [rax],al
   140014954:	add    al,BYTE PTR [rax]
   140014956:	add    al,dl
   140014958:	add    al,BYTE PTR [rax]
   14001495a:	add    BYTE PTR [rax],al
   14001495c:	add    eax,DWORD PTR [rax]
   14001495e:	add    al,dl
   140014960:	add    eax,DWORD PTR [rax]
   140014962:	add    BYTE PTR [rax],al
   140014964:	add    al,0x0
   140014966:	add    al,dl
   140014968:	and    BYTE PTR [rax],al
   14001496a:	add    BYTE PTR [rax],al
   14001496c:	push   rdi
   14001496d:	add    BYTE PTR [rdi+0x0],ch
   140014970:	jb     0x140014972
   140014972:	add    BYTE PTR fs:[rax+rax*1+0x69],ch
   140014977:	add    BYTE PTR [rbx+0x0],dh
   14001497a:	je     0x14001497c
   14001497c:	push   rsp
   14001497d:	add    BYTE PTR [rcx+0x0],bh
   140014980:	jo     0x140014982
   140014982:	add    BYTE PTR gs:[rax],al
   140014985:	add    BYTE PTR [rax],al
   140014987:	add    BYTE PTR [rsp+rdx*2+0x42],dl
   14001498b:	rex.WR mov BYTE PTR [rax+rax*1],r8b
   14001498f:	add    BYTE PTR [rax+rax*1],al
   140014992:	add    BYTE PTR [rax],al
   140014994:	push   rsp
   140014995:	rex.RB
   140014996:	rex.WRB push r8
   140014998:	sbb    BYTE PTR [rcx],al
   14001499a:	add    BYTE PTR [rax],al
   14001499c:	add    al,BYTE PTR [rax]
   14001499e:	add    BYTE PTR [rax],al
   1400149a0:	add    al,BYTE PTR [rax]
   1400149a2:	add    BYTE PTR [rax],al
   1400149a4:	jo     0x1400149a8
   1400149a6:	add    BYTE PTR [rax],al
   1400149a8:	add    DWORD PTR [rax],eax
   1400149aa:	add    BYTE PTR [rax],al
   1400149ac:	add    DWORD PTR [rdi-0x29e21562],0xb1fb761d
   1400149b6:	push   rbx
   1400149b7:	jbe    0x1400149f9
   1400149b9:	rex.RXB
   1400149ba:	rex.XB (bad) 
   1400149bc:	sgdt   [rcx]
   1400149bf:	add    BYTE PTR [rcx],al
   1400149c1:	(bad)  
   1400149c2:	call   QWORD PTR [rsi+0x44000000]
   1400149c8:	(bad)  
   1400149c9:	or     DWORD PTR [rax],eax
   1400149cb:	add    BYTE PTR [r14+0x0],r14b
   1400149cf:	add    BYTE PTR gs:[rsi+0x0],ch
   1400149d3:	je     0x1400149d5
   1400149d5:	add    BYTE PTR [rcx+0x0],r12b
   1400149d9:	je     0x1400149db
   1400149db:	(bad)  
   1400149dc:	add    BYTE PTR [rax],al
   1400149de:	add    BYTE PTR [rdx],al
   1400149e0:	rex.B (bad) 
   1400149e2:	push   QWORD PTR [rip+0xffffffff8a000000]        # 0xca0149e8
   1400149e8:	outs   dx,DWORD PTR ds:[rsi]
   1400149e9:	add    al,0x0
   1400149eb:	add    BYTE PTR [rcx+0x0],r12b
   1400149ef:	je     0x1400149f1
   1400149f1:	(bad)  
   1400149f2:	add    BYTE PTR [rax],al
   1400149f4:	add    BYTE PTR [rip+0x6000000],bl        # 0x1460149fa
   1400149fa:	rex.WXB xchg r13,rax
   1400149fc:	add    al,0x0
   1400149fe:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014a02:	ins    DWORD PTR es:[rdi],dx
   140014a03:	add    BYTE PTR [rbp+0x0],ah
   140014a06:	add    BYTE PTR [rax],al
   140014a08:	add    eax,0x63000501
   140014a0d:	add    BYTE PTR [rax+rax*1+0x73],ch
   140014a11:	add    BYTE PTR [rcx+0x0],ch
   140014a14:	add    BYTE PTR fs:[rdx],al
   140014a17:	or     eax,0x40f0000
   140014a1c:	rex.B (bad) 
   140014a1e:	(bad)  
   140014a1f:	cmp    DWORD PTR [rax],eax
   140014a21:	add    BYTE PTR [rax],al
   140014a23:	mov    ch,BYTE PTR [rdi+0x4]
   140014a26:	add    BYTE PTR [rax+rax*1+0x61],al
   140014a2a:	add    BYTE PTR [rax+rax*1+0x61],dh
   140014a2e:	add    BYTE PTR [rax],al
   140014a30:	add    BYTE PTR [rcx],ah
   140014a32:	add    BYTE PTR [rax],al
   140014a34:	add    BYTE PTR [rsi],al
   140014a36:	rex.WXB xchg r13,rax
   140014a38:	add    al,0x0
   140014a3a:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014a3e:	ins    DWORD PTR es:[rdi],dx
   140014a3f:	add    BYTE PTR [rbp+0x0],ah
   140014a42:	add    BYTE PTR [rax],al
   140014a44:	add    eax,0x68000701
   140014a49:	add    BYTE PTR [rdx+0x0],dh
   140014a4c:	add    BYTE PTR gs:[rbx+0x0],dh
   140014a50:	jne    0x140014a52
   140014a52:	ins    BYTE PTR es:[rdi],dx
   140014a53:	add    BYTE PTR [rax+rax*1+0x2],dh
   140014a57:	or     eax,0x4080001
   140014a5c:	add    al,0x0
   140014a5e:	add    BYTE PTR [rax],al
   140014a60:	add    BYTE PTR [rax],al
   140014a62:	add    BYTE PTR [rax],al
   140014a64:	femms  
	...
   140014a6e:	add    BYTE PTR [rax],al
   140014a70:	cwde   
   140014a71:	add    al,BYTE PTR [rax]
   140014a73:	add    BYTE PTR [rax],al
   140014a75:	add    BYTE PTR [rax],al
   140014a77:	add    BYTE PTR [rax],cl
   140014a79:	sbb    eax,0x0
   140014a7e:	add    BYTE PTR [rax],al
   140014a80:	add    BYTE PTR [rax],al
   140014a82:	add    BYTE PTR [rax],al
   140014a84:	test   al,0x2
   140014a86:	add    BYTE PTR [rax],al
   140014a88:	adc    BYTE PTR [rax],al
   140014a8a:	add    BYTE PTR [rax],al
   140014a8c:	movsxd eax,DWORD PTR [rax]
   140014a8e:	ins    BYTE PTR es:[rdi],dx
   140014a8f:	add    BYTE PTR [rbx+0x0],dh
   140014a92:	imul   eax,DWORD PTR [rax],0x64
   140014a98:	adc    al,0x0
   140014a9a:	add    BYTE PTR [rax],al
   140014a9c:	push   0x65007200
   140014aa1:	add    BYTE PTR [rbx+0x0],dh
   140014aa4:	jne    0x140014aa6
   140014aa6:	ins    BYTE PTR es:[rdi],dx
   140014aa7:	add    BYTE PTR [rax+rax*1+0x0],dh
   140014aab:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   140014aaf:	push   rax
   140014ab0:	sbb    al,0x1
   140014ab2:	add    BYTE PTR [rax],al
   140014ab4:	add    al,BYTE PTR [rax]
   140014ab6:	add    BYTE PTR [rax],al
   140014ab8:	add    al,BYTE PTR [rax]
   140014aba:	add    BYTE PTR [rax],al
   140014abc:	mov    BYTE PTR [rbx],al
   140014abe:	add    BYTE PTR [rax],al
   140014ac0:	add    DWORD PTR [rax],eax
   140014ac2:	add    BYTE PTR [rax],al
   140014ac4:	movabs ds:0x17716aeb00214524,al
   140014acd:	test   DWORD PTR [rbp+0x71],esi
   140014ad0:	pushf  
   140014ad1:	(bad)  
   140014ad2:	xor    ecx,esi
   140014ad4:	sgdt   [rcx]
   140014ad7:	add    BYTE PTR [rcx],al
   140014ad9:	(bad)  
   140014ada:	call   FWORD PTR [rax+0x44000000]
   140014ae0:	(bad)  
   140014ae1:	or     DWORD PTR [rax],eax
   140014ae3:	add    BYTE PTR [r14+0x0],r14b
   140014ae7:	add    BYTE PTR gs:[rsi+0x0],ch
   140014aeb:	je     0x140014aed
   140014aed:	add    BYTE PTR [rcx+0x0],r12b
   140014af1:	je     0x140014af3
   140014af3:	(bad)  
   140014af4:	add    BYTE PTR [rax],al
   140014af6:	add    BYTE PTR [rdx],al
   140014af8:	rex.B (bad) 
   140014afa:	push   QWORD PTR [rdi]
   140014afc:	add    BYTE PTR [rax],al
   140014afe:	add    BYTE PTR [rdx+0x4400046f],cl
   140014b04:	add    BYTE PTR [rcx+0x0],ah
   140014b07:	je     0x140014b09
   140014b09:	(bad)  
   140014b0a:	add    BYTE PTR [rax],al
   140014b0c:	add    BYTE PTR [rdi],bl
   140014b0e:	add    BYTE PTR [rax],al
   140014b10:	add    BYTE PTR [rsi],al
   140014b12:	rex.WXB xchg r13,rax
   140014b14:	add    al,0x0
   140014b16:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014b1a:	ins    DWORD PTR es:[rdi],dx
   140014b1b:	add    BYTE PTR [rbp+0x0],ah
   140014b1e:	add    BYTE PTR [rax],al
   140014b20:	add    eax,0x73000601
   140014b25:	add    BYTE PTR [rax+rax*1+0x72],dh
   140014b29:	add    BYTE PTR [rcx+0x0],ch
   140014b2c:	outs   dx,BYTE PTR ds:[rsi]
   140014b2d:	add    BYTE PTR [rdi+0x0],ah
   140014b30:	add    cl,BYTE PTR [rip+0x4010000]        # 0x144024b36
   140014b36:	rex.B (bad) 
   140014b38:	(bad)  
   140014b39:	cmp    DWORD PTR [rax],eax
   140014b3b:	add    BYTE PTR [rax],al
   140014b3d:	mov    ch,BYTE PTR [rdi+0x4]
   140014b40:	add    BYTE PTR [rax+rax*1+0x61],al
   140014b44:	add    BYTE PTR [rax+rax*1+0x61],dh
   140014b48:	add    BYTE PTR [rax],al
   140014b4a:	add    BYTE PTR [rcx],ah
   140014b4c:	add    BYTE PTR [rax],al
   140014b4e:	add    BYTE PTR [rsi],al
   140014b50:	rex.WXB xchg r13,rax
   140014b52:	add    al,0x0
   140014b54:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014b58:	ins    DWORD PTR es:[rdi],dx
   140014b59:	add    BYTE PTR [rbp+0x0],ah
   140014b5c:	add    BYTE PTR [rax],al
   140014b5e:	add    eax,0x68000701
   140014b63:	add    BYTE PTR [rdx+0x0],dh
   140014b66:	add    BYTE PTR gs:[rbx+0x0],dh
   140014b6a:	jne    0x140014b6c
   140014b6c:	ins    BYTE PTR es:[rdi],dx
   140014b6d:	add    BYTE PTR [rax+rax*1+0x2],dh
   140014b71:	or     eax,0x4080001
   140014b76:	add    al,0x0
   140014b78:	add    BYTE PTR [rax],al
   140014b7a:	add    BYTE PTR [rax],al
   140014b7c:	add    DWORD PTR [rcx],eax
	...
   140014b86:	add    BYTE PTR [rax],al
   140014b88:	mov    al,0x3
   140014b8a:	add    BYTE PTR [rax],al
   140014b8c:	add    BYTE PTR [rax],al
   140014b8e:	add    BYTE PTR [rax],al
   140014b90:	or     BYTE PTR [rip+0x0],bl        # 0x140014b96
   140014b96:	add    BYTE PTR [rax],al
   140014b98:	add    BYTE PTR [rax],al
   140014b9a:	add    BYTE PTR [rax],al
   140014b9c:	(bad)
   140014ba0:	adc    al,0x0
   140014ba2:	add    BYTE PTR [rax],al
   140014ba4:	jae    0x140014ba6
   140014ba6:	je     0x140014ba8
   140014ba8:	jb     0x140014baa
   140014baa:	imul   eax,DWORD PTR [rax],0x67006e
   140014bb0:	add    BYTE PTR [rax],al
   140014bb2:	add    BYTE PTR [rax],al
   140014bb4:	adc    al,0x0
   140014bb6:	add    BYTE PTR [rax],al
   140014bb8:	push   0x65007200
   140014bbd:	add    BYTE PTR [rbx+0x0],dh
   140014bc0:	jne    0x140014bc2
   140014bc2:	ins    BYTE PTR es:[rdi],dx
   140014bc3:	add    BYTE PTR [rax+rax*1+0x0],dh
   140014bc7:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   140014bcb:	push   rax
   140014bcc:	mov    WORD PTR [rcx],es
   140014bce:	add    BYTE PTR [rax],al
   140014bd0:	add    eax,DWORD PTR [rax]
   140014bd2:	add    BYTE PTR [rax],al
   140014bd4:	add    eax,DWORD PTR [rax]
   140014bd6:	add    BYTE PTR [rax],al
   140014bd8:	call   0x141014be1
   140014bdd:	add    BYTE PTR [rax],al
   140014bdf:	add    BYTE PTR [rbx-0x7870ec62],dl
   140014be5:	mov    al,0x8b
   140014be7:	(bad)  
   140014be8:	(bad)  
   140014be9:	sbb    DWORD PTR [rcx+0x8],eax
   140014bec:	cld    
   140014bed:	cmp    al,0x48
   140014bef:	jns    0x140014c00
   140014bf1:	add    DWORD PTR [rcx],eax
   140014bf3:	add    BYTE PTR [rcx],al
   140014bf5:	(bad)  
   140014bf6:	(bad)  
   140014bf7:	fiadd  DWORD PTR [rax]
   140014bf9:	add    BYTE PTR [rax],al
   140014bfb:	rex.R (bad) 
   140014bfd:	or     DWORD PTR [rax],eax
   140014bff:	add    BYTE PTR [r14+0x0],r14b
   140014c03:	add    BYTE PTR gs:[rsi+0x0],ch
   140014c07:	je     0x140014c09
   140014c09:	add    BYTE PTR [rcx+0x0],r12b
   140014c0d:	je     0x140014c0f
   140014c0f:	(bad)  
   140014c10:	add    BYTE PTR [rax],al
   140014c12:	add    BYTE PTR [rdx],al
   140014c14:	rex.B (bad) 
   140014c16:	(bad)  
   140014c17:	cmp    eax,DWORD PTR [rax]
   140014c19:	add    BYTE PTR [rax],al
   140014c1b:	mov    ch,BYTE PTR [rdi+0x4]
   140014c1e:	add    BYTE PTR [rax+rax*1+0x61],al
   140014c22:	add    BYTE PTR [rax+rax*1+0x61],dh
   140014c26:	add    BYTE PTR [rax],al
   140014c28:	add    BYTE PTR [rbx],ah
   140014c2a:	add    BYTE PTR [rax],al
   140014c2c:	add    BYTE PTR [rsi],al
   140014c2e:	rex.WXB xchg r13,rax
   140014c30:	add    al,0x0
   140014c32:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014c36:	ins    DWORD PTR es:[rdi],dx
   140014c37:	add    BYTE PTR [rbp+0x0],ah
   140014c3a:	add    BYTE PTR [rax],al
   140014c3c:	add    eax,0x57000801
   140014c41:	add    BYTE PTR [rdi+0x0],ch
   140014c44:	jb     0x140014c46
   140014c46:	add    BYTE PTR fs:[rax+rax*1+0x69],ch
   140014c4b:	add    BYTE PTR [rbx+0x0],dh
   140014c4e:	je     0x140014c50
   140014c50:	add    cl,BYTE PTR [rip+0x4080000]        # 0x144094c56
   140014c56:	rex.B (bad) 
   140014c58:	push   QWORD PTR [rdi]
   140014c5a:	add    BYTE PTR [rax],al
   140014c5c:	add    BYTE PTR [rdx+0x4400046f],cl
   140014c62:	add    BYTE PTR [rcx+0x0],ah
   140014c65:	je     0x140014c67
   140014c67:	(bad)  
   140014c68:	add    BYTE PTR [rax],al
   140014c6a:	add    BYTE PTR [rdi],bl
   140014c6c:	add    BYTE PTR [rax],al
   140014c6e:	add    BYTE PTR [rsi],al
   140014c70:	rex.WXB xchg r13,rax
   140014c72:	add    al,0x0
   140014c74:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014c78:	ins    DWORD PTR es:[rdi],dx
   140014c79:	add    BYTE PTR [rbp+0x0],ah
   140014c7c:	add    BYTE PTR [rax],al
   140014c7e:	add    eax,0x53000601
   140014c83:	add    BYTE PTR [rax+rax*1+0x72],dh
   140014c87:	add    BYTE PTR [rcx+0x0],ch
   140014c8a:	outs   dx,BYTE PTR ds:[rsi]
   140014c8b:	add    BYTE PTR [rdi+0x0],ah
   140014c8e:	add    cl,BYTE PTR [rip+0x4010001]        # 0x144024c95
   140014c94:	rex.B (bad) 
   140014c96:	(bad)  
   140014c97:	cmp    DWORD PTR [rax],eax
   140014c99:	add    BYTE PTR [rax],al
   140014c9b:	mov    ch,BYTE PTR [rdi+0x4]
   140014c9e:	add    BYTE PTR [rax+rax*1+0x61],al
   140014ca2:	add    BYTE PTR [rax+rax*1+0x61],dh
   140014ca6:	add    BYTE PTR [rax],al
   140014ca8:	add    BYTE PTR [rcx],ah
   140014caa:	add    BYTE PTR [rax],al
   140014cac:	add    BYTE PTR [rsi],al
   140014cae:	rex.WXB xchg r13,rax
   140014cb0:	add    al,0x0
   140014cb2:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014cb6:	ins    DWORD PTR es:[rdi],dx
   140014cb7:	add    BYTE PTR [rbp+0x0],ah
   140014cba:	add    BYTE PTR [rax],al
   140014cbc:	add    eax,0x48000701
   140014cc1:	add    BYTE PTR [rdx+0x0],dh
   140014cc4:	add    BYTE PTR gs:[rbx+0x0],dh
   140014cc8:	jne    0x140014cca
   140014cca:	ins    BYTE PTR es:[rdi],dx
   140014ccb:	add    BYTE PTR [rax+rax*1+0x2],dh
   140014ccf:	or     eax,0x4080002
   140014cd4:	add    al,0x0
   140014cd6:	add    BYTE PTR [rax],al
   140014cd8:	add    BYTE PTR [rax],al
   140014cda:	add    BYTE PTR [rax],al
   140014cdc:	or     BYTE PTR [rax],cl
   140014cde:	add    BYTE PTR [rax],al
   140014ce0:	add    DWORD PTR [rax],r8d
   140014ce3:	add    BYTE PTR [rax],al
   140014ce5:	add    BYTE PTR [rax],al
   140014ce7:	add    BYTE PTR [rax*1+0x0],ah
   140014cee:	add    BYTE PTR [rax],al
   140014cf0:	add    DWORD PTR [rcx],eax
	...
   140014cfa:	add    BYTE PTR [rax],al
   140014cfc:	cmp    al,0x5
   140014cfe:	add    BYTE PTR [rax],al
   140014d00:	add    BYTE PTR [rax],al
   140014d02:	add    BYTE PTR [rax],al
   140014d04:	or     BYTE PTR [rip+0x0],bl        # 0x140014d0a
   140014d0a:	add    BYTE PTR [rax],al
   140014d0c:	add    BYTE PTR [rax],al
   140014d0e:	add    BYTE PTR [rax],al
   140014d10:	push   rax
   140014d11:	add    eax,0x180000
   140014d16:	add    BYTE PTR [rax],al
   140014d18:	push   rdi
   140014d19:	add    BYTE PTR [rdi+0x0],ch
   140014d1c:	jb     0x140014d1e
   140014d1e:	add    BYTE PTR fs:[rax+rax*1+0x69],ch
   140014d23:	add    BYTE PTR [rbx+0x0],dh
   140014d26:	je     0x140014d28
   140014d28:	add    BYTE PTR [rax],al
   140014d2a:	add    BYTE PTR [rax],al
   140014d2c:	adc    al,0x0
   140014d2e:	add    BYTE PTR [rax],al
   140014d30:	push   rbx
   140014d31:	add    BYTE PTR [rax+rax*1+0x72],dh
   140014d35:	add    BYTE PTR [rcx+0x0],ch
   140014d38:	outs   dx,BYTE PTR ds:[rsi]
   140014d39:	add    BYTE PTR [rdi+0x0],ah
   140014d3c:	add    BYTE PTR [rax],al
   140014d3e:	add    BYTE PTR [rax],al
   140014d40:	adc    al,0x0
   140014d42:	add    BYTE PTR [rax],al
   140014d44:	rex.W add BYTE PTR [rdx+0x0],sil
   140014d48:	add    BYTE PTR gs:[rbx+0x0],dh
   140014d4c:	jne    0x140014d4e
   140014d4e:	ins    BYTE PTR es:[rdi],dx
   140014d4f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140014d53:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   140014d57:	push   rax
   140014d58:	mov    esp,0x1000000
   140014d5d:	add    BYTE PTR [rax],al
   140014d5f:	add    BYTE PTR [rcx],al
   140014d61:	add    BYTE PTR [rax],al
   140014d63:	add    ah,dh
   140014d65:	add    eax,0x10000
   140014d6a:	add    BYTE PTR [rax],al
   140014d6c:	xchg   edx,eax
   140014d6d:	fisttp DWORD PTR [rsi+0x50]
   140014d70:	in     eax,dx
   140014d71:	mov    dl,dh
   140014d73:	mov    dh,0xca
   140014d75:	rex.X mov esi,0x789778a3
   140014d7b:	pop    rsi
   140014d7c:	sgdt   [rcx]
   140014d7f:	add    BYTE PTR [rcx],al
   140014d81:	(bad)  
   140014d82:	call   FWORD PTR [rax+rax*1+0x0]
   140014d86:	add    BYTE PTR [rdx+rax*4+0x9],al
   140014d8a:	add    BYTE PTR [rbp+0x0],al
   140014d8d:	jbe    0x140014d8f
   140014d8f:	add    BYTE PTR gs:[rsi+0x0],ch
   140014d93:	je     0x140014d95
   140014d95:	add    BYTE PTR [rcx+0x0],r12b
   140014d99:	je     0x140014d9b
   140014d9b:	(bad)  
   140014d9c:	add    BYTE PTR [rax],al
   140014d9e:	add    BYTE PTR [rdx],al
   140014da0:	rex.B (bad) 
   140014da2:	(bad)  
   140014da3:	cmp    eax,DWORD PTR [rax]
   140014da5:	add    BYTE PTR [rax],al
   140014da7:	mov    ch,BYTE PTR [rdi+0x4]
   140014daa:	add    BYTE PTR [rax+rax*1+0x61],al
   140014dae:	add    BYTE PTR [rax+rax*1+0x61],dh
   140014db2:	add    BYTE PTR [rax],al
   140014db4:	add    BYTE PTR [rbx],ah
   140014db6:	add    BYTE PTR [rax],al
   140014db8:	add    BYTE PTR [rsi],al
   140014dba:	rex.WXB xchg r13,rax
   140014dbc:	add    al,0x0
   140014dbe:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014dc2:	ins    DWORD PTR es:[rdi],dx
   140014dc3:	add    BYTE PTR [rbp+0x0],ah
   140014dc6:	add    BYTE PTR [rax],al
   140014dc8:	add    eax,0x57000801
   140014dcd:	add    BYTE PTR [rdi+0x0],ch
   140014dd0:	jb     0x140014dd2
   140014dd2:	add    BYTE PTR fs:[rax+rax*1+0x69],ch
   140014dd7:	add    BYTE PTR [rbx+0x0],dh
   140014dda:	je     0x140014ddc
   140014ddc:	add    cl,BYTE PTR [rip+0x4080000]        # 0x144094de2
   140014de2:	add    al,0x0
   140014de4:	add    BYTE PTR [rax],al
   140014de6:	add    BYTE PTR [rax],al
   140014de8:	or     BYTE PTR [rax],cl
   140014dea:	add    BYTE PTR [rax],al
   140014dec:	add    DWORD PTR [rax],r8d
   140014def:	add    BYTE PTR [rax],al
   140014df1:	add    BYTE PTR [rax],al
   140014df3:	add    BYTE PTR [rax],cl
   140014df5:	(bad)  
   140014df6:	add    BYTE PTR [rax],al
   140014df8:	sbb    BYTE PTR [rax],al
   140014dfa:	add    BYTE PTR [rax],al
   140014dfc:	push   rdi
   140014dfd:	add    BYTE PTR [rdi+0x0],ch
   140014e00:	jb     0x140014e02
   140014e02:	add    BYTE PTR fs:[rax+rax*1+0x69],ch
   140014e07:	add    BYTE PTR [rbx+0x0],dh
   140014e0a:	je     0x140014e0c
   140014e0c:	add    BYTE PTR [rax],al
   140014e0e:	add    BYTE PTR [rax],al
   140014e10:	rex.WRXB push r8
   140014e12:	rex.XB
   140014e13:	rex.WRXB jl 0x140014e16
   140014e16:	add    BYTE PTR [rax],al
   140014e18:	add    eax,DWORD PTR [rax]
	...
   140014e22:	add    BYTE PTR [rax],dh
   140014e24:	push   rax
   140014e25:	(bad)  
   140014e26:	add    BYTE PTR [rax],al
   140014e28:	add    BYTE PTR [rax],al
   140014e2a:	or     DWORD PTR [rax],eax
   140014e2c:	or     DWORD PTR [rax],eax
   140014e2e:	add    BYTE PTR [rax],dh
   140014e30:	push   0x6
   140014e35:	add    al,dh
   140014e37:	add    al,dh
   140014e39:	add    BYTE PTR [rax],al
   140014e3b:	xor    BYTE PTR [rax+0x18000006],al
   140014e41:	add    BYTE PTR [rax],al
   140014e43:	add    BYTE PTR [rdi+0x0],dh
   140014e46:	imul   eax,DWORD PTR [rax],0x3a006e
   140014e4c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140014e50:	data16 add BYTE PTR [rdi+0x0],ch
   140014e54:	add    BYTE PTR [rax],al
   140014e56:	add    BYTE PTR [rax],al
   140014e58:	sbb    BYTE PTR [rax],al
   140014e5a:	add    BYTE PTR [rax],al
   140014e5c:	ja     0x140014e5e
   140014e5e:	imul   eax,DWORD PTR [rax],0x3a006e
   140014e64:	push   rbx
   140014e65:	add    BYTE PTR [rbp+0x0],ah
   140014e68:	outs   dx,BYTE PTR ds:[rsi]
   140014e69:	add    BYTE PTR [rax+rax*1+0x0],ah
   140014e6d:	add    BYTE PTR [rax],al
   140014e6f:	add    BYTE PTR [rax+rax*1],bl
   140014e72:	add    BYTE PTR [rax],al
   140014e74:	ja     0x140014e76
   140014e76:	imul   eax,DWORD PTR [rax],0x3a006e
   140014e7c:	push   rdx
   140014e7d:	add    BYTE PTR [rbp+0x0],ah
   140014e80:	movsxd eax,DWORD PTR [rax]
   140014e82:	add    BYTE PTR gs:[rcx+0x0],ch
   140014e86:	jbe    0x140014e88
   140014e88:	add    BYTE PTR gs:[rax],al
   140014e8b:	add    BYTE PTR [rbp+rax*2+0x56],cl
   140014e8f:	rex.WR
   140014e90:	add    BYTE PTR fs:[rax],al
   140014e93:	add    BYTE PTR [rdx],al
   140014e95:	add    BYTE PTR [rax],al
   140014e97:	add    BYTE PTR [rdx],al
   140014e99:	add    BYTE PTR [rax],al
   140014e9b:	add    BYTE PTR [rdx],al
   140014e9d:	add    BYTE PTR [rax],al
   140014e9f:	push   rax
   140014ea0:	rol    BYTE PTR [rsi],0x0
   140014ea3:	add    BYTE PTR [rax+rax*1],al
   140014ea6:	add    BYTE PTR [rax],al
   140014ea8:	add    al,0x0
   140014eaa:	add    BYTE PTR [rax-0x28],dl
   140014ead:	(bad)  
   140014eae:	add    BYTE PTR [rax],al
   140014eb0:	sbb    BYTE PTR [rax],al
   140014eb2:	add    BYTE PTR [rax],al
   140014eb4:	ja     0x140014eb6
   140014eb6:	imul   eax,DWORD PTR [rax],0x3a006e
   140014ebc:	add    BYTE PTR [r10+0x0],r14b
   140014ec0:	jb     0x140014ec2
   140014ec2:	outs   dx,DWORD PTR ds:[rsi]
   140014ec3:	add    BYTE PTR [rdx+0x0],dh
   140014ec6:	add    BYTE PTR [rax],al
   140014ec8:	sub    BYTE PTR [rax],al
   140014eca:	add    BYTE PTR [rax],al
   140014ecc:	ja     0x140014ece
   140014ece:	imul   eax,DWORD PTR [rax],0x3a006e
   140014ed4:	rex.WB add BYTE PTR [r14+0x0],bpl
   140014ed8:	data16 add BYTE PTR [rdi+0x0],ch
   140014edc:	jb     0x140014ede
   140014ede:	ins    DWORD PTR es:[rdi],dx
   140014edf:	add    BYTE PTR [rcx+0x0],ah
   140014ee2:	je     0x140014ee4
   140014ee4:	imul   eax,DWORD PTR [rax],0x6e006f
   140014eea:	(bad)  
   140014eeb:	add    BYTE PTR [rax+rax*1+0x0],ch
   140014eef:	add    BYTE PTR [rcx+rax*2+0x53],dl
   140014ef3:	rex.WXB add BYTE PTR [r8],al
   140014ef6:	add    BYTE PTR [rax],al
   140014ef8:	add    BYTE PTR [rax],al
   140014efa:	add    BYTE PTR [rax],al
   140014efc:	rex.WXB
   140014efd:	rex.RB pop r9
   140014eff:	push   rdi
	...
   140014f08:	rex.RB push r14
   140014f0a:	rex.WRX push rsp
   140014f0c:	add    BYTE PTR [rcx],al
   140014f0e:	add    BYTE PTR [rax],al
   140014f10:	add    eax,0x0
   140014f15:	add    BYTE PTR [rax],al
   140014f17:	add    BYTE PTR [rax],al
   140014f19:	add    BYTE PTR [rax],al
   140014f1b:	or     DWORD PTR [rdx],eax
	...
   140014f25:	add    BYTE PTR [rax],al
   140014f27:	add    BYTE PTR [rax],al
   140014f2a:	add    BYTE PTR [rax],al
   140014f2c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014f2d:	add    DWORD PTR [rax],eax
   140014f2f:	add    BYTE PTR [rsi+rax*1],ch
   140014f32:	add    BYTE PTR [rax],al
   140014f34:	test   al,0x6
	...
   140014f42:	add    BYTE PTR [rax],al
   140014f44:	test   al,0x0
   140014f46:	add    BYTE PTR [rax],al
   140014f48:	add    DWORD PTR [rax],eax
   140014f4a:	add    BYTE PTR [rcx],cl
   140014f4c:	add    al,BYTE PTR [rax]
	...
   140014f56:	add    BYTE PTR [rax+0x1],al
   140014f59:	add    BYTE PTR [rax],al
   140014f5b:	add    BYTE PTR [rdx+rax*1+0x62c0000],bh
   140014f62:	add    BYTE PTR [rax],al
   140014f64:	test   al,0x6
	...
   140014f72:	add    BYTE PTR [rax],al
   140014f74:	test   al,0x0
   140014f76:	add    BYTE PTR [rax],al
   140014f78:	add    al,BYTE PTR [rax]
   140014f7a:	add    BYTE PTR [rcx],cl
   140014f7c:	add    al,BYTE PTR [rax]
	...
   140014f86:	add    BYTE PTR [rax+0x2],al
   140014f89:	add    BYTE PTR [rax],al
   140014f8b:	add    al,bl
   140014f8d:	add    eax,DWORD PTR [rax]
   140014f8f:	add    BYTE PTR [rsi+rax*1],ch
   140014f92:	add    BYTE PTR [rax],al
   140014f94:	test   al,0x6
	...
   140014fa2:	add    BYTE PTR [rax],al
   140014fa4:	test   al,0x0
   140014fa6:	add    BYTE PTR [rax],al
   140014fa8:	add    eax,DWORD PTR [rax]
   140014faa:	add    BYTE PTR [rax],dl
   140014fac:	add    al,0x9
	...
   140014fb6:	add    BYTE PTR [rax-0x4ffffffd],al
   140014fbc:	fs add eax,0x6380000
   140014fc2:	add    BYTE PTR [rax],al
   140014fc4:	mov    ah,0x6
	...
   140014fd2:	add    BYTE PTR [rax],al
   140014fd4:	cwde   
   140014fd5:	add    BYTE PTR [rax],al
   140014fd7:	add    BYTE PTR [rax+rax*1],al
   140014fda:	add    BYTE PTR [rax],dl
   140014fdc:	add    al,0xf0
	...
   140014fe6:	add    BYTE PTR [rax-0x4ffffffc],al
   140014fec:	fs add eax,0x6440000
   140014ff2:	add    BYTE PTR [rax],al
   140014ff4:	mov    ah,0x6
	...
   140015002:	add    BYTE PTR [rax],al
   140015004:	cwde   
	...
   14001500d:	add    BYTE PTR [rax],al
   14001500f:	add    BYTE PTR [rax+0x4b],cl
   140015012:	rex.XB push r10
   140015014:	or     eax,0xa0d7b0a
   140015019:	and    BYTE PTR [rax],ah
   14001501b:	and    BYTE PTR [rax],ah
   14001501d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001501f:	push   rdx
   140015020:	gs ins DWORD PTR es:[rdi],dx
   140015022:	outs   dx,DWORD PTR ds:[rsi]
   140015023:	jbe    0x14001508a
   140015025:	and    BYTE PTR [rbx+0x4c],al
   140015028:	push   rbx
   140015029:	rex.WB
   14001502a:	rex.R or eax,0x2020200a
   140015030:	and    BYTE PTR [rbx+0xd],bh
   140015033:	or     ah,BYTE PTR [rax]
   140015035:	and    BYTE PTR [rax],ah
   140015037:	and    BYTE PTR [rax],ah
   140015039:	and    BYTE PTR [rax],ah
   14001503b:	and    BYTE PTR [rsi+0x6f],al
   14001503e:	jb     0x1400150a3
   140015040:	gs push rdx
   140015042:	gs ins DWORD PTR es:[rdi],dx
   140015044:	outs   dx,DWORD PTR ds:[rsi]
   140015045:	jbe    0x1400150ac
   140015047:	and    BYTE PTR [rbx+0x46],bh
   14001504a:	xor    DWORD PTR [rdx+rsi*1],esi
   14001504d:	xor    eax,0x2d373641
   140015052:	xor    DWORD PTR [rip+0x342d3534],esi        # 0x1742e858c
   140015058:	xor    al,0x41
   14001505a:	xor    ch,BYTE PTR [rip+0x39354241]        # 0x1793692a1
   140015060:	sub    eax,0x31464438
   140015065:	xor    BYTE PTR [rdx],dh
   140015067:	xor    BYTE PTR [rsi*1+0x7d394432],dh
   14001506e:	and    BYTE PTR [rip+0x27207320],bh        # 0x16721c394
   140015074:	push   rbx
   140015075:	jo     0x1400150dc
   140015077:	ins    BYTE PTR es:[rdi],dx
   140015078:	ins    BYTE PTR es:[rdi],dx
   140015079:	and    BYTE PTR [rbx+0x68],al
   14001507c:	movsxd ebp,DWORD PTR gs:[rbx+0x69]
   140015080:	outs   dx,BYTE PTR ds:[rsi]
   140015081:	and    BYTE PTR [eax+0x6f],cl
   140015085:	jae    0x1400150fb
   140015087:	and    BYTE PTR [rbx+0x6c],al
   14001508a:	(bad)  
   14001508b:	jae    0x140015100
   14001508d:	(bad)  
   14001508e:	or     eax,0x2020200a
   140015093:	and    BYTE PTR [rax],ah
   140015095:	and    BYTE PTR [rax],ah
   140015097:	and    BYTE PTR [rbx+0xd],bh
   14001509a:	or     ah,BYTE PTR [rax]
   14001509c:	and    BYTE PTR [rax],ah
   14001509e:	and    BYTE PTR [rax],ah
   1400150a0:	and    BYTE PTR [rax],ah
   1400150a2:	and    BYTE PTR [rax],ah
   1400150a4:	and    BYTE PTR [rax],ah
   1400150a6:	and    BYTE PTR [rsi+0x61],dh
   1400150a9:	ins    BYTE PTR es:[rdi],dx
   1400150aa:	and    BYTE PTR [rcx+0x70],al
   1400150ad:	jo     0x1400150f8
   1400150af:	and    BYTE PTR fs:[rip+0x27207320],bh        # 0x16721c3d6
   1400150b6:	jnp    0x1400150fe
   1400150b8:	xor    DWORD PTR [rdx+rsi*1],esi
   1400150bb:	xor    eax,0x2d373641
   1400150c0:	xor    DWORD PTR [rip+0x342d3534],esi        # 0x1742e85fa
   1400150c6:	xor    al,0x41
   1400150c8:	xor    ch,BYTE PTR [rip+0x39354241]        # 0x17936930f
   1400150ce:	sub    eax,0x31464438
   1400150d3:	xor    BYTE PTR [rdx],dh
   1400150d5:	xor    BYTE PTR [rsi*1+0x7d394432],dh
   1400150dc:	(bad)  
   1400150dd:	or     eax,0x200a0d0a
   1400150e2:	and    BYTE PTR [rax],ah
   1400150e4:	and    BYTE PTR [rax],ah
   1400150e6:	and    BYTE PTR [rax],ah
   1400150e8:	and    BYTE PTR [rax],ah
   1400150ea:	and    BYTE PTR [rax],ah
   1400150ec:	and    BYTE PTR [rdi+rbp*2+0x63],cl
   1400150f0:	(bad)  
   1400150f1:	ins    BYTE PTR es:[rdi],dx
   1400150f2:	push   rbx
   1400150f3:	gs jb  0x14001516c
   1400150f6:	gs jb  0x14001512c
   1400150f9:	xor    ah,BYTE PTR [rax]
   1400150fb:	cmp    eax,0x27207320
   140015100:	and    eax,0x55444f4d
   140015105:	rex.WR
   140015106:	rex.RB and eax,0x200a0d27
   14001510c:	and    BYTE PTR [rax],ah
   14001510e:	and    BYTE PTR [rax],ah
   140015110:	and    BYTE PTR [rax],ah
   140015112:	and    BYTE PTR [rax],ah
   140015114:	and    BYTE PTR [rax],ah
   140015116:	and    BYTE PTR [rbx+0xd],bh
   140015119:	or     ah,BYTE PTR [rax]
   14001511b:	and    BYTE PTR [rax],ah
   14001511d:	and    BYTE PTR [rax],ah
   14001511f:	and    BYTE PTR [rax],ah
   140015121:	and    BYTE PTR [rax],ah
   140015123:	and    BYTE PTR [rax],ah
   140015125:	and    BYTE PTR [rax],ah
   140015127:	and    BYTE PTR [rax],ah
   140015129:	and    BYTE PTR [rsi+0x61],dh
   14001512c:	ins    BYTE PTR es:[rdi],dx
   14001512d:	and    BYTE PTR [rax+rbp*2+0x72],dl
   140015131:	gs (bad) 
   140015133:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65646f4d
   14001513b:	ins    BYTE PTR es:[rdi],dx
   14001513c:	and    BYTE PTR [rip+0x27207320],bh        # 0x16721c462
   140015142:	rex.X outs dx,DWORD PTR ds:[rsi]
   140015144:	je     0x1400151ae
   140015146:	(bad)  
   140015147:	or     eax,0x2020200a
   14001514c:	and    BYTE PTR [rax],ah
   14001514e:	and    BYTE PTR [rax],ah
   140015150:	and    BYTE PTR [rax],ah
   140015152:	and    BYTE PTR [rax],ah
   140015154:	and    BYTE PTR [rbp+0xd],bh
   140015157:	or     ah,BYTE PTR [rax]
   140015159:	and    BYTE PTR [rax],ah
   14001515b:	and    BYTE PTR [rax],ah
   14001515d:	and    BYTE PTR [rax],ah
   14001515f:	and    BYTE PTR [rax],ah
   140015161:	and    BYTE PTR [rax],ah
   140015163:	and    BYTE PTR [rsi+0x65],dl
   140015166:	jb     0x1400151db
   140015168:	imul   ebp,DWORD PTR [rdi+0x6e],0x73203d20
   14001516f:	and    BYTE PTR [rdi],ah
   140015171:	xor    DWORD PTR [rsi],ebp
   140015173:	xor    BYTE PTR [rdi],ah
   140015175:	or     eax,0x2020200a
   14001517a:	and    BYTE PTR [rax],ah
   14001517c:	and    BYTE PTR [rax],ah
   14001517e:	and    BYTE PTR [rbp+0xd],bh
   140015181:	or     ah,BYTE PTR [rax]
   140015183:	and    BYTE PTR [rax],ah
   140015185:	and    BYTE PTR [rbp+0xd],bh
   140015188:	or     cl,BYTE PTR [rip+0x2020200a]        # 0x160217198
   14001518e:	and    BYTE PTR [rsi+0x6f],cl
   140015191:	push   rdx
   140015192:	gs ins DWORD PTR es:[rdi],dx
   140015194:	outs   dx,DWORD PTR ds:[rsi]
   140015195:	jbe    0x1400151fc
   140015197:	and    BYTE PTR [rcx+0x70],al
   14001519a:	jo     0x1400151e5
   14001519c:	rex.R or eax,0x2020200a
   1400151a2:	and    BYTE PTR [rbx+0xd],bh
   1400151a5:	or     ah,BYTE PTR [rax]
   1400151a7:	and    BYTE PTR [rax],ah
   1400151a9:	and    BYTE PTR [rax],ah
   1400151ab:	and    BYTE PTR [rax],ah
   1400151ad:	and    BYTE PTR [rsi+0x6f],al
   1400151b0:	jb     0x140015215
   1400151b2:	gs push rdx
   1400151b4:	gs ins DWORD PTR es:[rdi],dx
   1400151b6:	outs   dx,DWORD PTR ds:[rsi]
   1400151b7:	jbe    0x14001521e
   1400151b9:	and    BYTE PTR [rbx+0x46],bh
   1400151bc:	xor    DWORD PTR [rdx+rsi*1],esi
   1400151bf:	xor    eax,0x2d373641
   1400151c4:	xor    DWORD PTR [rip+0x342d3534],esi        # 0x1742e86fe
   1400151ca:	xor    al,0x41
   1400151cc:	xor    ch,BYTE PTR [rip+0x39354241]        # 0x179369413
   1400151d2:	sub    eax,0x31464438
   1400151d7:	xor    BYTE PTR [rdx],dh
   1400151d9:	xor    BYTE PTR [rsi*1+0x7d394432],dh
   1400151e0:	or     eax,0x2020200a
   1400151e5:	and    BYTE PTR [rax],ah
   1400151e7:	and    BYTE PTR [rax],ah
   1400151e9:	and    BYTE PTR [rbx+0xd],bh
   1400151ec:	or     ah,BYTE PTR [rax]
   1400151ee:	and    BYTE PTR [rax],ah
   1400151f0:	and    BYTE PTR [rax],ah
   1400151f2:	and    BYTE PTR [rax],ah
   1400151f4:	and    BYTE PTR [rax],ah
   1400151f6:	and    BYTE PTR [rax],ah
   1400151f8:	and    BYTE PTR [rsi+0x61],dh
   1400151fb:	ins    BYTE PTR es:[rdi],dx
   1400151fc:	and    BYTE PTR [rcx+riz*2+0x75],cl
   140015200:	outs   dx,BYTE PTR ds:[rsi]
   140015201:	movsxd ebp,DWORD PTR [rax+0x50]
   140015204:	gs jb  0x140015274
   140015207:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14001520e:	cmp    eax,0x27206420
   140015213:	xor    BYTE PTR [rcx],dh
   140015215:	xor    BYTE PTR [rax],dh
   140015217:	xor    DWORD PTR [rax+rdi*1],esi
   14001521a:	xor    BYTE PTR [rax],bh
   14001521c:	rex.XB xor BYTE PTR [r8],sil
   14001521f:	xor    BYTE PTR [rax],dh
   140015221:	xor    BYTE PTR [rax],dh
   140015223:	cmp    DWORD PTR [rbx+0x30],eax
   140015226:	xor    BYTE PTR [rax],dh
   140015228:	xor    BYTE PTR [rax],dh
   14001522a:	xor    BYTE PTR [rcx],dh
   14001522c:	xor    al,0x30
   14001522e:	xor    BYTE PTR [rax],dh
   140015230:	xor    BYTE PTR [rax],dh
   140015232:	xor    BYTE PTR [rbx],dh
   140015234:	xor    BYTE PTR [rax],dh
   140015236:	xor    BYTE PTR [rax],dh
   140015238:	xor    BYTE PTR [rax],dh
   14001523a:	xor    BYTE PTR [rax],dh
   14001523c:	xor    dh,BYTE PTR [rax]
   14001523e:	xor    BYTE PTR [rcx],dh
   140015240:	rex.XB xor BYTE PTR [r8],sil
   140015243:	xor    BYTE PTR [rcx],dh
   140015245:	xor    BYTE PTR [rax],dh
   140015247:	xor    BYTE PTR [rax],dh
   140015249:	xor    BYTE PTR [rax],dh
   14001524b:	xor    DWORD PTR [rcx],esi
   14001524d:	xor    BYTE PTR [rax],dh
   14001524f:	xor    DWORD PTR [rax+rsi*1],esi
   140015252:	xor    BYTE PTR [rax],dh
   140015254:	xor    al,0x30
   140015256:	xor    BYTE PTR [rax],dh
   140015258:	xor    BYTE PTR [rax],dh
   14001525a:	xor    BYTE PTR [rax],dh
   14001525c:	xor    DWORD PTR [rax],esi
   14001525e:	xor    DWORD PTR [rax],esi
   140015260:	xor    BYTE PTR [rax],dh
   140015262:	xor    BYTE PTR [rax],dh
   140015264:	xor    BYTE PTR [rax],dh
   140015266:	xor    BYTE PTR [rax],dh
   140015268:	xor    BYTE PTR [rcx],dh
   14001526a:	xor    BYTE PTR [rax],dh
   14001526c:	xor    BYTE PTR [rcx],dh
   14001526e:	xor    BYTE PTR [rax],dh
   140015270:	xor    BYTE PTR [rax],dh
   140015272:	xor    BYTE PTR [rax],dh
   140015274:	xor    dh,BYTE PTR [rax]
   140015276:	xor    BYTE PTR [rip+0x30303043],dh        # 0x1703182bf
   14001527c:	xor    al,0x30
   14001527e:	xor    BYTE PTR [rax],dh
   140015280:	xor    BYTE PTR [rax],dh
   140015282:	xor    BYTE PTR [rax],dh
   140015284:	xor    BYTE PTR [rax],dh
   140015286:	xor    BYTE PTR [rcx],dh
   140015288:	cmp    BYTE PTR [rax],dh
   14001528a:	xor    BYTE PTR [rax],dh
   14001528c:	rex.X xor BYTE PTR [rax],sil
   14001528f:	xor    BYTE PTR [rax],dh
   140015291:	xor    BYTE PTR [rax],dh
   140015293:	xor    BYTE PTR [rcx],dh
   140015295:	xor    BYTE PTR [rdx],dh
   140015297:	xor    BYTE PTR [rax],dh
   140015299:	xor    BYTE PTR [rax],dh
   14001529b:	xor    BYTE PTR [rax],dh
   14001529d:	xor    BYTE PTR [rax],dh
   14001529f:	xor    BYTE PTR [rax],dh
   1400152a1:	xor    BYTE PTR [rsi+0x30],al
   1400152a4:	xor    dh,BYTE PTR [rax]
   1400152a6:	xor    BYTE PTR [rax],dh
   1400152a8:	xor    BYTE PTR [rax],dh
   1400152aa:	xor    BYTE PTR [rax],dh
   1400152ac:	xor    DWORD PTR [rax],esi
   1400152ae:	xor    BYTE PTR [rax],dh
   1400152b0:	xor    BYTE PTR [rax],dh
   1400152b2:	xor    BYTE PTR [rax],dh
   1400152b4:	xor    BYTE PTR [rax],dh
   1400152b6:	xor    BYTE PTR [rcx],dh
   1400152b8:	xor    al,0x30
   1400152ba:	xor    BYTE PTR [rax],dh
   1400152bc:	rex.X xor BYTE PTR [rax],sil
   1400152bf:	xor    BYTE PTR [rax],dh
   1400152c1:	xor    BYTE PTR [rax],dh
   1400152c3:	xor    BYTE PTR [rcx],dh
   1400152c5:	xor    BYTE PTR [rcx],dh
   1400152c7:	xor    BYTE PTR [rax],dh
   1400152c9:	xor    BYTE PTR [rax],dh
   1400152cb:	xor    BYTE PTR [rax],dh
   1400152cd:	xor    BYTE PTR [rax],dh
   1400152cf:	xor    BYTE PTR [rax],dh
   1400152d1:	xor    BYTE PTR [rip+0x30303231],dh        # 0x170318508
   1400152d7:	xor    BYTE PTR [rax],dh
   1400152d9:	xor    BYTE PTR [rax],dh
   1400152db:	xor    BYTE PTR [rax],dh
   1400152dd:	xor    BYTE PTR [rax],dh
   1400152df:	xor    DWORD PTR [rax+rsi*1],esi
   1400152e2:	xor    BYTE PTR [rax],dh
   1400152e4:	rex.X xor BYTE PTR [rax],sil
   1400152e7:	xor    BYTE PTR [rax],dh
   1400152e9:	xor    BYTE PTR [rax],dh
   1400152eb:	xor    BYTE PTR [rcx],dh
   1400152ed:	xor    BYTE PTR [rcx],dh
   1400152ef:	xor    BYTE PTR [rax],dh
   1400152f1:	xor    BYTE PTR [rax],dh
   1400152f3:	xor    BYTE PTR [rax],dh
   1400152f5:	xor    BYTE PTR [rax],dh
   1400152f7:	xor    BYTE PTR [rax],dh
   1400152f9:	xor    BYTE PTR [rip+0x30303430],dh        # 0x17031872f
   1400152ff:	xor    BYTE PTR [rax],dh
   140015301:	xor    BYTE PTR [rax],dh
   140015303:	xor    BYTE PTR [rax],dh
   140015305:	xor    BYTE PTR [rax],dh
   140015307:	xor    DWORD PTR [rax+rsi*1],esi
   14001530a:	xor    BYTE PTR [rax],dh
   14001530c:	rex.X xor BYTE PTR [rax],sil
   14001530f:	xor    BYTE PTR [rax],dh
   140015311:	xor    BYTE PTR [rax],dh
   140015313:	xor    BYTE PTR [rcx],dh
   140015315:	xor    BYTE PTR [rcx],dh
   140015317:	xor    BYTE PTR [rax],dh
   140015319:	xor    BYTE PTR [rax],dh
   14001531b:	xor    BYTE PTR [rax],dh
   14001531d:	xor    BYTE PTR [rax],dh
   14001531f:	xor    BYTE PTR [rax],dh
   140015321:	xor    BYTE PTR [rip+0x30304130],dh        # 0x170319457
   140015327:	xor    BYTE PTR [rax],dh
   140015329:	xor    BYTE PTR [rax],dh
   14001532b:	xor    BYTE PTR [rcx],dh
   14001532d:	xor    BYTE PTR [rdx],dh
   14001532f:	xor    BYTE PTR [rax],dh
   140015331:	xor    BYTE PTR [rax],dh
   140015333:	xor    BYTE PTR [rax],dh
   140015335:	xor    BYTE PTR [rax],dh
   140015337:	xor    BYTE PTR [rax],dh
   140015339:	xor    BYTE PTR [rip+0x30303032],dh        # 0x170318371
   14001533f:	xor    BYTE PTR [rax],dh
   140015341:	xor    BYTE PTR [rax],dh
   140015343:	xor    dh,BYTE PTR [rax]
   140015345:	xor    BYTE PTR [rdx],dh
   140015347:	xor    BYTE PTR [rax],dh
   140015349:	xor    BYTE PTR [rax],dh
   14001534b:	xor    BYTE PTR [rcx],dh
   14001534d:	xor    BYTE PTR [rdx],dh
   14001534f:	xor    BYTE PTR [rax],dh
   140015351:	xor    BYTE PTR [rax],dh
   140015353:	xor    BYTE PTR [rax],dh
   140015355:	xor    BYTE PTR [rax],dh
   140015357:	xor    BYTE PTR [rax],dh
   140015359:	xor    BYTE PTR [rip+0x30303032],dh        # 0x170318391
   14001535f:	xor    BYTE PTR [rax],dh
   140015361:	xor    BYTE PTR [rax],dh
   140015363:	xor    dh,BYTE PTR [rax]
   140015365:	xor    BYTE PTR [rdx],dh
   140015367:	xor    BYTE PTR [rax],dh
   140015369:	xor    BYTE PTR [rax],dh
   14001536b:	(bad)  
   14001536c:	or     eax,0x2020200a
   140015371:	and    BYTE PTR [rax],ah
   140015373:	and    BYTE PTR [rax],ah
   140015375:	and    BYTE PTR [rax],ah
   140015377:	and    BYTE PTR [rax],ah
   140015379:	and    BYTE PTR [rsi+0x61],dh
   14001537c:	ins    BYTE PTR es:[rdi],dx
   14001537d:	and    BYTE PTR [rcx+0x63],al
   140015380:	movsxd esp,DWORD PTR [rbp+0x73]
   140015383:	jae    0x1400153d5
   140015385:	gs jb  0x1400153f5
   140015388:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14001538f:	cmp    eax,0x27206420
   140015394:	xor    BYTE PTR [rcx],dh
   140015396:	xor    BYTE PTR [rax],dh
   140015398:	xor    DWORD PTR [rax+rdi*1],esi
   14001539b:	xor    BYTE PTR [rcx],bh
   14001539d:	xor    BYTE PTR [rax],dh
   14001539f:	xor    BYTE PTR [rax],dh
   1400153a1:	xor    BYTE PTR [rax],dh
   1400153a3:	xor    BYTE PTR [rcx+0x30],al
   1400153a6:	xor    BYTE PTR [rax],dh
   1400153a8:	xor    BYTE PTR [rax],dh
   1400153aa:	xor    BYTE PTR [rax],dh
   1400153ac:	xor    DWORD PTR [rax+rsi*1],esi
   1400153af:	xor    BYTE PTR [rax],dh
   1400153b1:	xor    BYTE PTR [rax],dh
   1400153b3:	xor    BYTE PTR [rbx],dh
   1400153b5:	xor    BYTE PTR [rax],dh
   1400153b7:	xor    BYTE PTR [rax],dh
   1400153b9:	xor    BYTE PTR [rax],dh
   1400153bb:	xor    BYTE PTR [rax],dh
   1400153bd:	xor    dh,BYTE PTR [rax]
   1400153bf:	xor    BYTE PTR [rcx],dh
   1400153c1:	rex.XB xor BYTE PTR [r8],sil
   1400153c4:	xor    BYTE PTR [rcx],dh
   1400153c6:	xor    BYTE PTR [rax],dh
   1400153c8:	xor    BYTE PTR [rax],dh
   1400153ca:	xor    BYTE PTR [rax],dh
   1400153cc:	xor    DWORD PTR [rcx],esi
   1400153ce:	xor    BYTE PTR [rax],dh
   1400153d0:	xor    DWORD PTR [rax+rsi*1],esi
   1400153d3:	xor    BYTE PTR [rax],dh
   1400153d5:	xor    al,0x30
   1400153d7:	xor    BYTE PTR [rax],dh
   1400153d9:	xor    BYTE PTR [rax],dh
   1400153db:	xor    BYTE PTR [rax],dh
   1400153dd:	xor    DWORD PTR [rax],esi
   1400153df:	xor    DWORD PTR [rax],esi
   1400153e1:	xor    BYTE PTR [rax],dh
   1400153e3:	xor    BYTE PTR [rax],dh
   1400153e5:	xor    BYTE PTR [rax],dh
   1400153e7:	xor    BYTE PTR [rax],dh
   1400153e9:	xor    BYTE PTR [rcx],dh
   1400153eb:	xor    BYTE PTR [rax],dh
   1400153ed:	xor    BYTE PTR [rcx],dh
   1400153ef:	xor    BYTE PTR [rax],dh
   1400153f1:	xor    BYTE PTR [rax],dh
   1400153f3:	xor    BYTE PTR [rax],dh
   1400153f5:	xor    dh,BYTE PTR [rax]
   1400153f7:	xor    BYTE PTR [rsi],dh
   1400153f9:	xor    BYTE PTR [rax],dh
   1400153fb:	xor    BYTE PTR [rax],dh
   1400153fd:	xor    al,0x30
   1400153ff:	xor    BYTE PTR [rax],dh
   140015401:	xor    BYTE PTR [rax],dh
   140015403:	xor    BYTE PTR [rax],dh
   140015405:	xor    BYTE PTR [rax],dh
   140015407:	xor    BYTE PTR [rcx],dh
   140015409:	cmp    BYTE PTR [rax],dh
   14001540b:	xor    BYTE PTR [rax],dh
   14001540d:	xor    esi,DWORD PTR [rax]
   14001540f:	xor    BYTE PTR [rax],dh
   140015411:	xor    BYTE PTR [rax],dh
   140015413:	xor    BYTE PTR [rax],dh
   140015415:	xor    DWORD PTR [rax],esi
   140015417:	xor    dh,BYTE PTR [rax]
   140015419:	xor    BYTE PTR [rax],dh
   14001541b:	xor    BYTE PTR [rax],dh
   14001541d:	xor    BYTE PTR [rax],dh
   14001541f:	xor    BYTE PTR [rax],dh
   140015421:	xor    BYTE PTR [rax],dh
   140015423:	rex.RX xor BYTE PTR [rdx],r14b
   140015426:	xor    BYTE PTR [rax],dh
   140015428:	xor    BYTE PTR [rax],dh
   14001542a:	xor    BYTE PTR [rax],dh
   14001542c:	xor    BYTE PTR [rcx],dh
   14001542e:	xor    BYTE PTR [rax],dh
   140015430:	xor    BYTE PTR [rax],dh
   140015432:	xor    BYTE PTR [rax],dh
   140015434:	xor    BYTE PTR [rax],dh
   140015436:	xor    BYTE PTR [rax],dh
   140015438:	xor    DWORD PTR [rax+rsi*1],esi
   14001543b:	xor    BYTE PTR [rax],dh
   14001543d:	xor    esi,DWORD PTR [rax]
   14001543f:	xor    BYTE PTR [rax],dh
   140015441:	xor    BYTE PTR [rax],dh
   140015443:	xor    BYTE PTR [rax],dh
   140015445:	xor    DWORD PTR [rax],esi
   140015447:	xor    DWORD PTR [rax],esi
   140015449:	xor    BYTE PTR [rax],dh
   14001544b:	xor    BYTE PTR [rax],dh
   14001544d:	xor    BYTE PTR [rax],dh
   14001544f:	xor    BYTE PTR [rax],dh
   140015451:	xor    BYTE PTR [rax],dh
   140015453:	xor    eax,0x30304130
   140015458:	xor    BYTE PTR [rax],dh
   14001545a:	xor    BYTE PTR [rax],dh
   14001545c:	xor    BYTE PTR [rax],dh
   14001545e:	xor    BYTE PTR [rax],dh
   140015460:	xor    DWORD PTR [rax+rsi*1],esi
   140015463:	xor    BYTE PTR [rax],dh
   140015465:	xor    esi,DWORD PTR [rax]
   140015467:	xor    BYTE PTR [rax],dh
   140015469:	xor    BYTE PTR [rax],dh
   14001546b:	xor    BYTE PTR [rax],dh
   14001546d:	xor    DWORD PTR [rax],esi
   14001546f:	xor    DWORD PTR [rax],esi
   140015471:	xor    BYTE PTR [rax],dh
   140015473:	xor    BYTE PTR [rax],dh
   140015475:	xor    BYTE PTR [rax],dh
   140015477:	xor    BYTE PTR [rax],dh
   140015479:	xor    BYTE PTR [rax],dh
   14001547b:	xor    eax,0x30303231
   140015480:	xor    BYTE PTR [rax],dh
   140015482:	xor    BYTE PTR [rax],dh
   140015484:	xor    BYTE PTR [rax],dh
   140015486:	xor    BYTE PTR [rax],dh
   140015488:	xor    DWORD PTR [rax],edi
   14001548a:	xor    BYTE PTR [rax],dh
   14001548c:	xor    BYTE PTR [rbx],dh
   14001548e:	xor    BYTE PTR [rax],dh
   140015490:	xor    BYTE PTR [rax],dh
   140015492:	xor    BYTE PTR [rax],dh
   140015494:	xor    BYTE PTR [rcx],dh
   140015496:	xor    BYTE PTR [rdx],dh
   140015498:	xor    BYTE PTR [rax],dh
   14001549a:	xor    BYTE PTR [rax],dh
   14001549c:	xor    BYTE PTR [rax],dh
   14001549e:	xor    BYTE PTR [rax],dh
   1400154a0:	xor    BYTE PTR [rax],dh
   1400154a2:	xor    BYTE PTR [rip+0x30303032],dh        # 0x1703184da
   1400154a8:	xor    BYTE PTR [rax],dh
   1400154aa:	xor    BYTE PTR [rax],dh
   1400154ac:	xor    dh,BYTE PTR [rax]
   1400154ae:	xor    BYTE PTR [rdx],dh
   1400154b0:	xor    BYTE PTR [rax],dh
   1400154b2:	xor    BYTE PTR [rax],dh
   1400154b4:	xor    BYTE PTR [rcx],dh
   1400154b6:	xor    BYTE PTR [rdx],dh
   1400154b8:	xor    BYTE PTR [rax],dh
   1400154ba:	xor    BYTE PTR [rax],dh
   1400154bc:	xor    BYTE PTR [rax],dh
   1400154be:	xor    BYTE PTR [rax],dh
   1400154c0:	xor    BYTE PTR [rax],dh
   1400154c2:	xor    BYTE PTR [rip+0x30303032],dh        # 0x1703184fa
   1400154c8:	xor    BYTE PTR [rax],dh
   1400154ca:	xor    BYTE PTR [rax],dh
   1400154cc:	xor    dh,BYTE PTR [rax]
   1400154ce:	xor    BYTE PTR [rdx],dh
   1400154d0:	xor    BYTE PTR [rax],dh
   1400154d2:	xor    BYTE PTR [rax],dh
   1400154d4:	xor    BYTE PTR [rcx],dh
   1400154d6:	xor    BYTE PTR [rdx],dh
   1400154d8:	xor    BYTE PTR [rax],dh
   1400154da:	xor    BYTE PTR [rax],dh
   1400154dc:	xor    BYTE PTR [rax],dh
   1400154de:	xor    BYTE PTR [rax],dh
   1400154e0:	xor    BYTE PTR [rax],dh
   1400154e2:	xor    BYTE PTR [rip+0x30303032],dh        # 0x17031851a
   1400154e8:	xor    BYTE PTR [rax],dh
   1400154ea:	xor    BYTE PTR [rax],dh
   1400154ec:	xor    dh,BYTE PTR [rax]
   1400154ee:	xor    BYTE PTR [rdx],dh
   1400154f0:	xor    BYTE PTR [rax],dh
   1400154f2:	xor    BYTE PTR [rax],dh
   1400154f4:	(bad)  
   1400154f5:	or     eax,0x2020200a
   1400154fa:	and    BYTE PTR [rax],ah
   1400154fc:	and    BYTE PTR [rax],ah
   1400154fe:	and    BYTE PTR [rbp+0xd],bh
   140015501:	or     ah,BYTE PTR [rax]
   140015503:	and    BYTE PTR [rax],ah
   140015505:	and    BYTE PTR [rbp+0xd],bh
   140015508:	or     bh,BYTE PTR [rbp+0x0]
   14001550b:	add    BYTE PTR [rax],al
   14001550d:	add    BYTE PTR [rax],al
   14001550f:	add    ch,cl
   140015511:	dec    ch
   140015513:	(bad)  
   140015514:	clc    
   140015515:	add    BYTE PTR [rax],al
   140015517:	add    BYTE PTR [rax],al
   140015519:	add    BYTE PTR [rcx],al
   14001551b:	add    BYTE PTR [rax],al
   14001551d:	add    BYTE PTR [rax],al
   14001551f:	add    BYTE PTR [rcx],dl
   140015521:	add    BYTE PTR [rax],al
   140015523:	add    BYTE PTR [rax],al
   140015525:	add    BYTE PTR [rax],al
   140015527:	add    BYTE PTR [rdx],al
   140015529:	add    BYTE PTR [rax],al
   14001552b:	add    BYTE PTR [rbp-0x38],bl
   14001552e:	mov    ch,0xbc
   140015530:	fdivr  st(7),st
   140015532:	push   0x59
   140015534:	mov    ecx,0x64f4d0b0
   140015539:	(bad)  
   14001553a:	(bad)  
   14001553b:	movabs ds:0x6a83631c5e0af7fd,eax
   140015544:	cmp    al,0x69
   140015546:	push   rcx
   140015547:	clc    
   140015548:	push   rcx
   140015549:	mov    al,0x68
   14001554b:	and    al,0x0
	...
   140015561:	add    BYTE PTR [rax],al
   140015563:	add    BYTE PTR [rax+0x3c000000],cl
   140015569:	add    BYTE PTR [rax],al
   14001556b:	add    al,cl
   14001556d:	add    BYTE PTR [rax],al
   14001556f:	add    BYTE PTR [rax],cl
   140015571:	add    BYTE PTR [rax],al
   140015573:	add    al,dl
   140015575:	add    BYTE PTR [rax],al
   140015577:	add    BYTE PTR [rsi],cl
   140015579:	add    BYTE PTR [rax],al
   14001557b:	add    al,ah
   14001557d:	add    BYTE PTR [rax],al
   14001557f:	add    BYTE PTR [rax],cl
	...
   140015589:	add    BYTE PTR [rax],al
   14001558b:	add    al,ch
   14001558d:	add    BYTE PTR [rax],al
   14001558f:	add    BYTE PTR [rax+rax*1],cl
   140015592:	add    BYTE PTR [rax],al
   140015594:	add    BYTE PTR [rax],al
   140015596:	add    BYTE PTR [rax],al
   140015598:	push   rdx
   140015599:	add    BYTE PTR [rbp+0x0],al
   14001559c:	rex.RXB add BYTE PTR [r9+0x0],r9b
   1400155a0:	push   rbx
   1400155a1:	add    BYTE PTR [rax+rax*1+0x52],dl
   1400155a5:	add    BYTE PTR [rcx+0x0],bl
   1400155a8:	add    BYTE PTR [rax],al
   1400155aa:	push   rdi
   1400155ab:	add    BYTE PTR [rbp+0x0],al
   1400155ae:	push   rsi
   1400155af:	add    BYTE PTR [rax+rax*1+0x5f],dl
   1400155b3:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400155b7:	add    BYTE PTR [rbp+0x0],cl
   1400155ba:	push   rax
   1400155bb:	add    BYTE PTR [rax+rax*1+0x41],cl
   1400155bf:	add    BYTE PTR [rax+rax*1+0x45],dl
   1400155c3:	add    BYTE PTR [rax],al
   1400155c5:	add    BYTE PTR [rbp+0x0],cl
   1400155c8:	push   rbp
   1400155c9:	add    BYTE PTR [rcx+0x0],cl
	...
   1400155d8:	adc    BYTE PTR [rax],al
   1400155da:	add    BYTE PTR [rax],al
   1400155dc:	sbb    BYTE PTR [rax],al
   1400155de:	add    BYTE PTR [rax],al
   1400155e0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400155e4:	rex.WB add BYTE PTR [r8],al
	...
   1400155ef:	add    BYTE PTR [rbx],cl
   1400155f1:	add    BYTE PTR [rax],al
   1400155f3:	add    BYTE PTR [rax],dl
   1400155f5:	add    BYTE PTR [rax],al
   1400155f7:	add    BYTE PTR [rbp+0x0],ah
   1400155fa:	outs   dx,BYTE PTR ds:[rsi]
   1400155fb:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301ab01
   140015601:	add    BYTE PTR [rax],al
   140015603:	add    BYTE PTR [rax],al
   140015605:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140016000 <.reloc>:
   140016000:	add    al,dl
   140016002:	add    BYTE PTR [rax],al
   140016004:	cld    
   140016005:	add    BYTE PTR [rax],al
   140016007:	add    BYTE PTR [rax-0x3f5b4f5c],ch
   14001600d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001600e:	enter  0xd0a4,0xa4
   140016012:	fsub   DWORD PTR [rax+riz*8+0xa4e8a4]
   140016019:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001601a:	or     BYTE PTR [rbp-0x59175920],ah
   140016020:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016022:	clc    
   140016023:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016024:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14001602a:	shr    BYTE PTR [rax-0x571f5728],1
   140016030:	call   0x138aa50dd
   140016035:	test   al,0x0
   140016037:	test   eax,0xa910a908
   14001603c:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140016042:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140016048:	test   rax,0xffffffffa958a950
   14001604e:	(bad)  
   14001604f:	test   eax,0xa970a968
   140016054:	js     0x140015fff
   140016056:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14001605d:	test   eax,0xa9a8a9a0
   140016062:	mov    al,0xa9
   140016064:	mov    eax,0xc8a9c0a9
   140016069:	test   eax,0xa9d8a9d0
   14001606e:	loopne 0x140016019
   140016070:	call   0x138ab511e
   140016075:	test   eax,0xaa08aa00
   14001607a:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140016080:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140016086:	stos   BYTE PTR es:[rdi],al
   140016088:	rex.W stos BYTE PTR es:[rdi],al
   14001608a:	push   rax
   14001608b:	stos   BYTE PTR es:[rdi],al
   14001608c:	pop    rax
   14001608d:	stos   BYTE PTR es:[rdi],al
   14001608e:	(bad)  
   14001608f:	stos   BYTE PTR es:[rdi],al
   140016090:	push   0x78aa70aa
   140016095:	stos   BYTE PTR es:[rdi],al
   140016096:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14001609d:	stos   BYTE PTR es:[rdi],al
   14001609e:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400160a7:	stos   BYTE PTR es:[rdi],al
   1400160a8:	enter  0xd0aa,0xaa
   1400160ac:	fsubr  DWORD PTR [rdx-0x55175520]
   1400160b2:	lock stos BYTE PTR es:[rdi],al
   1400160b4:	clc    
   1400160b5:	stos   BYTE PTR es:[rdi],al
   1400160b6:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400160bc:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   1400160c2:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   1400160c8:	stos   QWORD PTR es:[rdi],rax
   1400160ca:	push   rax
   1400160cb:	stos   DWORD PTR es:[rdi],eax
   1400160cc:	pop    rax
   1400160cd:	stos   DWORD PTR es:[rdi],eax
   1400160ce:	(bad)  
   1400160cf:	stos   DWORD PTR es:[rdi],eax
   1400160d0:	push   0x78ab70ab
   1400160d5:	stos   DWORD PTR es:[rdi],eax
   1400160d6:	sub    BYTE PTR [rbx-0x546f5478],0x98
   1400160dd:	stos   DWORD PTR es:[rdi],eax
   1400160de:	movabs al,ds:0xc0abb8abb0aba8ab
   1400160e7:	stos   DWORD PTR es:[rdi],eax
   1400160e8:	enter  0xd0ab,0xab
   1400160ec:	fsubr  DWORD PTR [rbx-0x54175420]
   1400160f2:	lock stos DWORD PTR es:[rdi],eax
   1400160f4:	clc    
   1400160f5:	stos   DWORD PTR es:[rdi],eax
   1400160f6:	add    BYTE PTR [rax+rcx*1+0xac],ch
   1400160fd:	loopne 0x1400160ff
   1400160ff:	add    BYTE PTR [rax+rax*1],bh
   140016102:	add    BYTE PTR [rax],al
   140016104:	adc    BYTE PTR [rax-0x5fcf5fe0],ah
   14001610a:	movabs al,ds:0xa080a070a060a050
   140016114:	nop
   140016115:	movabs al,ds:0xa0d0a0c0a0b0a0a0
   14001611e:	loopne 0x1400160c0
   140016120:	or     BYTE PTR [rdx-0x5d075d20],ah
   140016126:	adc    BYTE PTR [rbx-0x5c3f5c70],ah
   14001612c:	add    BYTE PTR [rax+rbx*4-0x47544f55],ah
   140016133:	stos   DWORD PTR es:[rdi],eax
   140016134:	shr    BYTE PTR [rbx+0x0],0x1
   14001613b:	add    BYTE PTR [rax],dl
   14001613d:	add    BYTE PTR [rax],al
   14001613f:	add    al,dl
   140016141:	test   eax,0xa9e0a9d8
   140016146:	add    BYTE PTR [rax],al
   140016148:	add    BYTE PTR [rax],ah
   14001614a:	add    DWORD PTR [rax],eax
   14001614c:	add    BYTE PTR [rax],r8b
   14001614f:	add    BYTE PTR [rax],al
   140016151:	movabs al,ds:0xa060a058a028a020
   14001615a:	jo     0x1400160fc
   14001615c:	js     0x1400160fe
   14001615e:	test   al,0xa0
   140016160:	mov    al,0xa0
   140016162:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   140016169:	movabs al,ds:0xa140a100a0f8a0f0
   140016172:	movabs rax,ds:0xa1b0a188a160a150
   14001617c:	fsub   DWORD PTR [rcx-0x5dcf5df8]
   140016182:	mov    BYTE PTR [rbx-0x5c2f5c50],ah
   140016188:	lock
   140016189:	.byte 0xa3
	...
