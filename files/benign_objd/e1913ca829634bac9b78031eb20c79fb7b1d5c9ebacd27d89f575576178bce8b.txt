
e1913ca829634bac9b78031eb20c79fb7b1d5c9ebacd27d89f575576178bce8b.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    rax,rsp
   14000100b:	mov    QWORD PTR [rax+0x10],rdx
   14000100f:	mov    QWORD PTR [rax+0x8],rcx
   140001013:	push   rbx
   140001014:	sub    rsp,0x30
   140001018:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140001020:	mov    rbx,rcx
   140001023:	lea    rdx,[rax+0x10]
   140001027:	call   QWORD PTR [rip+0x6183]        # 0x1400071b0
   14000102d:	nop
   14000102e:	lea    rax,[rip+0x64cb]        # 0x140007500
   140001035:	mov    QWORD PTR [rbx],rax
   140001038:	mov    rax,rbx
   14000103b:	add    rsp,0x30
   14000103f:	pop    rbx
   140001040:	ret    
   140001041:	int3   
   140001042:	int3   
   140001043:	int3   
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	mov    QWORD PTR [rsp+0x8],rcx
   14000104d:	sub    rsp,0x38
   140001051:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000105a:	lea    rax,[rip+0x649f]        # 0x140007500
   140001061:	mov    QWORD PTR [rcx],rax
   140001064:	add    rsp,0x38
   140001068:	rex.W jmp QWORD PTR [rip+0x6151]        # 0x1400071c0
   14000106f:	int3   
   140001070:	int3   
   140001071:	int3   
   140001072:	int3   
   140001073:	int3   
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x48
   140001084:	mov    rdx,rcx
   140001087:	lea    rcx,[rsp+0x20]
   14000108c:	call   0x140001100
   140001091:	lea    rdx,[rip+0x7be0]        # 0x140008c78
   140001098:	lea    rcx,[rsp+0x20]
   14000109d:	call   0x140005b88
   1400010a2:	int3   
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400010b5:	push   rdi
   1400010b6:	sub    rsp,0x30
   1400010ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400010c3:	mov    QWORD PTR [rsp+0x48],rbx
   1400010c8:	mov    ebx,edx
   1400010ca:	mov    rdi,rcx
   1400010cd:	lea    rax,[rip+0x642c]        # 0x140007500
   1400010d4:	mov    QWORD PTR [rcx],rax
   1400010d7:	call   QWORD PTR [rip+0x60e3]        # 0x1400071c0
   1400010dd:	test   bl,0x1
   1400010e0:	je     0x1400010ea
   1400010e2:	mov    rcx,rdi
   1400010e5:	call   0x1400016a8
   1400010ea:	mov    rax,rdi
   1400010ed:	mov    rbx,QWORD PTR [rsp+0x48]
   1400010f2:	add    rsp,0x30
   1400010f6:	pop    rdi
   1400010f7:	ret    
   1400010f8:	int3   
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	mov    QWORD PTR [rsp+0x8],rcx
   140001105:	push   rbx
   140001106:	sub    rsp,0x30
   14000110a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001113:	mov    rbx,rcx
   140001116:	call   QWORD PTR [rip+0x5ffc]        # 0x140007118
   14000111c:	nop
   14000111d:	lea    rax,[rip+0x63dc]        # 0x140007500
   140001124:	mov    QWORD PTR [rbx],rax
   140001127:	mov    rax,rbx
   14000112a:	add    rsp,0x30
   14000112e:	pop    rbx
   14000112f:	ret    
   140001130:	int3   
   140001131:	int3   
   140001132:	int3   
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	mov    QWORD PTR [rsp+0x8],rcx
   14000113d:	push   rbx
   14000113e:	sub    rsp,0x30
   140001142:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000114b:	mov    rbx,rcx
   14000114e:	lea    rax,[rip+0x63eb]        # 0x140007540
   140001155:	mov    QWORD PTR [rcx],rax
   140001158:	cmp    QWORD PTR [rcx+0x38],0x10
   14000115d:	jb     0x140001168
   14000115f:	mov    rcx,QWORD PTR [rcx+0x20]
   140001163:	call   0x1400016a8
   140001168:	mov    QWORD PTR [rbx+0x38],0xf
   140001170:	and    QWORD PTR [rbx+0x30],0x0
   140001175:	mov    BYTE PTR [rbx+0x20],0x0
   140001179:	mov    rcx,rbx
   14000117c:	add    rsp,0x30
   140001180:	pop    rbx
   140001181:	rex.W jmp QWORD PTR [rip+0x6038]        # 0x1400071c0
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	cmp    QWORD PTR [rcx+0x38],0x10
   140001195:	jb     0x14000119c
   140001197:	mov    rax,QWORD PTR [rcx+0x20]
   14000119b:	ret    
   14000119c:	lea    rax,[rcx+0x20]
   1400011a0:	ret    
   1400011a1:	int3   
   1400011a2:	int3   
   1400011a3:	int3   
   1400011a4:	int3   
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	sub    rsp,0x78
   1400011b4:	mov    rax,QWORD PTR [rip+0x8e45]        # 0x14000a000
   1400011bb:	xor    rax,rsp
   1400011be:	mov    QWORD PTR [rsp+0x60],rax
   1400011c3:	mov    rdx,rcx
   1400011c6:	lea    rcx,[rsp+0x20]
   1400011cb:	call   0x140001264
   1400011d0:	lea    rdx,[rip+0x7a59]        # 0x140008c30
   1400011d7:	lea    rcx,[rsp+0x20]
   1400011dc:	call   0x140005b88
   1400011e1:	int3   
   1400011e2:	int3   
   1400011e3:	int3   
   1400011e4:	int3   
   1400011e5:	int3   
   1400011e6:	int3   
   1400011e7:	int3   
   1400011e8:	int3   
   1400011e9:	int3   
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400011f5:	push   rdi
   1400011f6:	sub    rsp,0x30
   1400011fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001203:	mov    QWORD PTR [rsp+0x48],rbx
   140001208:	mov    edi,edx
   14000120a:	mov    rbx,rcx
   14000120d:	lea    rax,[rip+0x632c]        # 0x140007540
   140001214:	mov    QWORD PTR [rcx],rax
   140001217:	cmp    QWORD PTR [rcx+0x38],0x10
   14000121c:	jb     0x140001227
   14000121e:	mov    rcx,QWORD PTR [rcx+0x20]
   140001222:	call   0x1400016a8
   140001227:	mov    QWORD PTR [rbx+0x38],0xf
   14000122f:	and    QWORD PTR [rbx+0x30],0x0
   140001234:	mov    BYTE PTR [rbx+0x20],0x0
   140001238:	mov    rcx,rbx
   14000123b:	call   QWORD PTR [rip+0x5f7f]        # 0x1400071c0
   140001241:	test   dil,0x1
   140001245:	je     0x14000124f
   140001247:	mov    rcx,rbx
   14000124a:	call   0x1400016a8
   14000124f:	mov    rax,rbx
   140001252:	mov    rbx,QWORD PTR [rsp+0x48]
   140001257:	add    rsp,0x30
   14000125b:	pop    rdi
   14000125c:	ret    
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	mov    QWORD PTR [rsp+0x8],rcx
   140001269:	push   rdi
   14000126a:	sub    rsp,0x30
   14000126e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001277:	mov    QWORD PTR [rsp+0x48],rbx
   14000127c:	mov    rbx,rdx
   14000127f:	mov    rdi,rcx
   140001282:	call   QWORD PTR [rip+0x5e90]        # 0x140007118
   140001288:	nop
   140001289:	lea    rax,[rip+0x62b0]        # 0x140007540
   140001290:	mov    QWORD PTR [rdi],rax
   140001293:	lea    rcx,[rdi+0x18]
   140001297:	mov    QWORD PTR [rcx+0x20],0xf
   14000129f:	and    QWORD PTR [rcx+0x18],0x0
   1400012a4:	mov    BYTE PTR [rcx+0x8],0x0
   1400012a8:	lea    rdx,[rbx+0x18]
   1400012ac:	or     r9,0xffffffffffffffff
   1400012b0:	xor    r8d,r8d
   1400012b3:	call   0x140001bf8
   1400012b8:	nop
   1400012b9:	mov    rax,rdi
   1400012bc:	mov    rbx,QWORD PTR [rsp+0x48]
   1400012c1:	add    rsp,0x30
   1400012c5:	pop    rdi
   1400012c6:	ret    
   1400012c7:	int3   
   1400012c8:	int3   
   1400012c9:	int3   
   1400012ca:	int3   
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400012d5:	push   rdi
   1400012d6:	sub    rsp,0x30
   1400012da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400012e3:	mov    QWORD PTR [rsp+0x48],rbx
   1400012e8:	mov    rbx,rdx
   1400012eb:	mov    rdi,rcx
   1400012ee:	call   QWORD PTR [rip+0x5ec4]        # 0x1400071b8
   1400012f4:	nop
   1400012f5:	lea    rax,[rip+0x6244]        # 0x140007540
   1400012fc:	mov    QWORD PTR [rdi],rax
   1400012ff:	lea    rcx,[rdi+0x18]
   140001303:	mov    QWORD PTR [rcx+0x20],0xf
   14000130b:	and    QWORD PTR [rcx+0x18],0x0
   140001310:	mov    BYTE PTR [rcx+0x8],0x0
   140001314:	or     r9,0xffffffffffffffff
   140001318:	xor    r8d,r8d
   14000131b:	mov    rdx,rbx
   14000131e:	call   0x140001bf8
   140001323:	nop
   140001324:	lea    rax,[rip+0x61ed]        # 0x140007518
   14000132b:	mov    QWORD PTR [rdi],rax
   14000132e:	mov    rax,rdi
   140001331:	mov    rbx,QWORD PTR [rsp+0x48]
   140001336:	add    rsp,0x30
   14000133a:	pop    rdi
   14000133b:	ret    
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	int3   
   140001341:	int3   
   140001342:	int3   
   140001343:	int3   
   140001344:	mov    QWORD PTR [rsp+0x8],rcx
   140001349:	push   rbx
   14000134a:	sub    rsp,0x30
   14000134e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001357:	mov    rbx,rcx
   14000135a:	lea    rax,[rip+0x61b7]        # 0x140007518
   140001361:	mov    QWORD PTR [rcx],rax
   140001364:	lea    rax,[rip+0x61d5]        # 0x140007540
   14000136b:	mov    QWORD PTR [rcx],rax
   14000136e:	cmp    QWORD PTR [rcx+0x38],0x10
   140001373:	jb     0x14000137e
   140001375:	mov    rcx,QWORD PTR [rcx+0x20]
   140001379:	call   0x1400016a8
   14000137e:	mov    QWORD PTR [rbx+0x38],0xf
   140001386:	and    QWORD PTR [rbx+0x30],0x0
   14000138b:	mov    BYTE PTR [rbx+0x20],0x0
   14000138f:	mov    rcx,rbx
   140001392:	add    rsp,0x30
   140001396:	pop    rbx
   140001397:	rex.W jmp QWORD PTR [rip+0x5e22]        # 0x1400071c0
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	int3   
   1400013a1:	int3   
   1400013a2:	int3   
   1400013a3:	int3   
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	sub    rsp,0x78
   1400013b4:	mov    rax,QWORD PTR [rip+0x8c45]        # 0x14000a000
   1400013bb:	xor    rax,rsp
   1400013be:	mov    QWORD PTR [rsp+0x60],rax
   1400013c3:	mov    rdx,rcx
   1400013c6:	lea    rcx,[rsp+0x20]
   1400013cb:	call   0x140001470
   1400013d0:	lea    rdx,[rip+0x7771]        # 0x140008b48
   1400013d7:	lea    rcx,[rsp+0x20]
   1400013dc:	call   0x140005b88
   1400013e1:	int3   
   1400013e2:	int3   
   1400013e3:	int3   
   1400013e4:	int3   
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400013f5:	push   rdi
   1400013f6:	sub    rsp,0x30
   1400013fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001403:	mov    QWORD PTR [rsp+0x48],rbx
   140001408:	mov    edi,edx
   14000140a:	mov    rbx,rcx
   14000140d:	lea    rax,[rip+0x6104]        # 0x140007518
   140001414:	mov    QWORD PTR [rcx],rax
   140001417:	lea    rax,[rip+0x6122]        # 0x140007540
   14000141e:	mov    QWORD PTR [rcx],rax
   140001421:	cmp    QWORD PTR [rcx+0x38],0x10
   140001426:	jb     0x140001431
   140001428:	mov    rcx,QWORD PTR [rcx+0x20]
   14000142c:	call   0x1400016a8
   140001431:	mov    QWORD PTR [rbx+0x38],0xf
   140001439:	and    QWORD PTR [rbx+0x30],0x0
   14000143e:	mov    BYTE PTR [rbx+0x20],0x0
   140001442:	mov    rcx,rbx
   140001445:	call   QWORD PTR [rip+0x5d75]        # 0x1400071c0
   14000144b:	test   dil,0x1
   14000144f:	je     0x140001459
   140001451:	mov    rcx,rbx
   140001454:	call   0x1400016a8
   140001459:	mov    rax,rbx
   14000145c:	mov    rbx,QWORD PTR [rsp+0x48]
   140001461:	add    rsp,0x30
   140001465:	pop    rdi
   140001466:	ret    
   140001467:	int3   
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	mov    QWORD PTR [rsp+0x8],rcx
   140001475:	push   rdi
   140001476:	sub    rsp,0x30
   14000147a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001483:	mov    QWORD PTR [rsp+0x48],rbx
   140001488:	mov    rbx,rdx
   14000148b:	mov    rdi,rcx
   14000148e:	call   QWORD PTR [rip+0x5c84]        # 0x140007118
   140001494:	nop
   140001495:	lea    rax,[rip+0x60a4]        # 0x140007540
   14000149c:	mov    QWORD PTR [rdi],rax
   14000149f:	lea    rcx,[rdi+0x18]
   1400014a3:	mov    QWORD PTR [rcx+0x20],0xf
   1400014ab:	and    QWORD PTR [rcx+0x18],0x0
   1400014b0:	mov    BYTE PTR [rcx+0x8],0x0
   1400014b4:	lea    rdx,[rbx+0x18]
   1400014b8:	or     r9,0xffffffffffffffff
   1400014bc:	xor    r8d,r8d
   1400014bf:	call   0x140001bf8
   1400014c4:	nop
   1400014c5:	lea    rax,[rip+0x604c]        # 0x140007518
   1400014cc:	mov    QWORD PTR [rdi],rax
   1400014cf:	mov    rax,rdi
   1400014d2:	mov    rbx,QWORD PTR [rsp+0x48]
   1400014d7:	add    rsp,0x30
   1400014db:	pop    rdi
   1400014dc:	ret    
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	int3   
   1400014e1:	int3   
   1400014e2:	int3   
   1400014e3:	int3   
   1400014e4:	mov    rax,rsp
   1400014e7:	mov    DWORD PTR [rax+0x8],ecx
   1400014ea:	mov    QWORD PTR [rax+0x10],rdx
   1400014ee:	mov    QWORD PTR [rax+0x18],r8
   1400014f2:	mov    QWORD PTR [rax+0x20],r9
   1400014f6:	push   rbx
   1400014f7:	push   rsi
   1400014f8:	push   rdi
   1400014f9:	mov    eax,0x2860
   1400014fe:	call   0x140006040
   140001503:	sub    rsp,rax
   140001506:	mov    rax,QWORD PTR [rip+0x8af3]        # 0x14000a000
   14000150d:	xor    rax,rsp
   140001510:	mov    QWORD PTR [rsp+0x2850],rax
   140001518:	call   QWORD PTR [rip+0x5b3a]        # 0x140007058
   14000151e:	xor    edi,edi
   140001520:	mov    ebx,eax
   140001522:	cmp    QWORD PTR [rip+0x8af6],0xffffffffffffffff        # 0x14000a020
   14000152a:	mov    DWORD PTR [rsp+0x40],edi
   14000152e:	jne    0x140001542
   140001530:	mov    ecx,0xfffffff5
   140001535:	call   QWORD PTR [rip+0x5b25]        # 0x140007060
   14000153b:	mov    QWORD PTR [rip+0x8ade],rax        # 0x14000a020
   140001542:	mov    edx,DWORD PTR [rsp+0x2880]
   140001549:	lea    r8,[rip+0x9150]        # 0x14000a6a0
   140001550:	mov    rcx,QWORD PTR [rip+0xe151]        # 0x14000f6a8
   140001557:	mov    r9d,0x2800
   14000155d:	call   QWORD PTR [rip+0x5ba5]        # 0x140007108
   140001563:	test   eax,eax
   140001565:	je     0x14000163d
   14000156b:	mov    esi,0x27ff
   140001570:	lea    r9,[rsp+0x2888]
   140001578:	mov    edx,esi
   14000157a:	lea    r8,[rip+0x911f]        # 0x14000a6a0
   140001581:	lea    rcx,[rip+0xe128]        # 0x14000f6b0
   140001588:	call   QWORD PTR [rip+0x5c42]        # 0x1400071d0
   14000158e:	test   eax,eax
   140001590:	js     0x14000159b
   140001592:	cdqe   
   140001594:	cmp    rax,rsi
   140001597:	ja     0x14000159b
   140001599:	jne    0x1400015a2
   14000159b:	mov    WORD PTR [rip+0x1310c],di        # 0x1400146ae
   1400015a2:	mov    rax,QWORD PTR [rip+0x8a77]        # 0x14000a020
   1400015a9:	dec    rax
   1400015ac:	cmp    rax,0xfffffffffffffffd
   1400015b0:	ja     0x140001629
   1400015b2:	mov    QWORD PTR [rsp+0x38],rdi
   1400015b7:	lea    rax,[rsp+0x50]
   1400015bc:	mov    QWORD PTR [rsp+0x30],rdi
   1400015c1:	lea    r8,[rip+0xe0e8]        # 0x14000f6b0
   1400015c8:	mov    DWORD PTR [rsp+0x28],0x2800
   1400015d0:	or     r9d,0xffffffff
   1400015d4:	xor    edx,edx
   1400015d6:	mov    QWORD PTR [rsp+0x20],rax
   1400015db:	mov    ecx,ebx
   1400015dd:	call   QWORD PTR [rip+0x5a65]        # 0x140007048
   1400015e3:	mov    rcx,QWORD PTR [rip+0x8a36]        # 0x14000a020
   1400015ea:	lea    r9,[rsp+0x40]
   1400015ef:	lea    rdx,[rsp+0x50]
   1400015f4:	mov    QWORD PTR [rsp+0x20],rdi
   1400015f9:	lea    r8d,[rax-0x1]
   1400015fd:	call   QWORD PTR [rip+0x5a3d]        # 0x140007040
   140001603:	mov    rcx,QWORD PTR [rip+0x8a16]        # 0x14000a020
   14000160a:	lea    r9,[rsp+0x40]
   14000160f:	mov    r8d,0x2
   140001615:	mov    QWORD PTR [rsp+0x20],rdi
   14000161a:	lea    rdx,[rip+0x5dc7]        # 0x1400073e8
   140001621:	call   QWORD PTR [rip+0x5a19]        # 0x140007040
   140001627:	jmp    0x14000163d
   140001629:	lea    rdx,[rip+0xe080]        # 0x14000f6b0
   140001630:	lea    rcx,[rip+0x5db5]        # 0x1400073ec
   140001637:	call   QWORD PTR [rip+0x5bab]        # 0x1400071e8
   14000163d:	mov    rcx,QWORD PTR [rsp+0x2850]
   140001645:	xor    rcx,rsp
   140001648:	call   0x140005930
   14000164d:	add    rsp,0x2860
   140001654:	pop    rdi
   140001655:	pop    rsi
   140001656:	pop    rbx
   140001657:	ret    
   140001658:	int3   
   140001659:	int3   
   14000165a:	int3   
   14000165b:	int3   
   14000165c:	int3   
   14000165d:	int3   
   14000165e:	int3   
   14000165f:	int3   
   140001660:	rex push rbx
   140001662:	sub    rsp,0x20
   140001666:	mov    rax,QWORD PTR gs:0x60
   14000166f:	mov    r8,rcx
   140001672:	xor    edx,edx
   140001674:	mov    rcx,QWORD PTR [rax+0x30]
   140001678:	call   QWORD PTR [rip+0x5bb2]        # 0x140007230
   14000167e:	mov    rbx,rax
   140001681:	test   rax,rax
   140001684:	jne    0x140001697
   140001686:	xor    r9d,r9d
   140001689:	lea    ecx,[rax+0xe]
   14000168c:	xor    r8d,r8d
   14000168f:	xor    edx,edx
   140001691:	call   QWORD PTR [rip+0x59b9]        # 0x140007050
   140001697:	mov    rax,rbx
   14000169a:	add    rsp,0x20
   14000169e:	pop    rbx
   14000169f:	ret    
   1400016a0:	int3   
   1400016a1:	int3   
   1400016a2:	int3   
   1400016a3:	int3   
   1400016a4:	int3   
   1400016a5:	int3   
   1400016a6:	int3   
   1400016a7:	int3   
   1400016a8:	sub    rsp,0x28
   1400016ac:	mov    r8,rcx
   1400016af:	test   rcx,rcx
   1400016b2:	je     0x1400016c9
   1400016b4:	mov    rcx,QWORD PTR gs:0x60
   1400016bd:	xor    edx,edx
   1400016bf:	mov    rcx,QWORD PTR [rcx+0x30]
   1400016c3:	call   QWORD PTR [rip+0x5b6f]        # 0x140007238
   1400016c9:	add    rsp,0x28
   1400016cd:	ret    
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	int3   
   1400016d1:	int3   
   1400016d2:	int3   
   1400016d3:	int3   
   1400016d4:	mov    rax,rsp
   1400016d7:	push   rbp
   1400016d8:	push   rsi
   1400016d9:	push   rdi
   1400016da:	push   r12
   1400016dc:	push   r13
   1400016de:	push   r14
   1400016e0:	push   r15
   1400016e2:	sub    rsp,0x40
   1400016e6:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400016ee:	mov    QWORD PTR [rax+0x10],rbx
   1400016f2:	mov    rdi,rdx
   1400016f5:	movsxd rsi,ecx
   1400016f8:	xor    r9d,r9d
   1400016fb:	xor    r8d,r8d
   1400016fe:	lea    r13d,[r9+0x1]
   140001702:	mov    edx,r13d
   140001705:	xor    ecx,ecx
   140001707:	call   QWORD PTR [rip+0x5963]        # 0x140007070
   14000170d:	xor    r8d,r8d
   140001710:	xor    edx,edx
   140001712:	mov    r15d,0x100
   140001718:	mov    ecx,r15d
   14000171b:	call   QWORD PTR [rip+0x5947]        # 0x140007068
   140001721:	xor    ecx,ecx
   140001723:	call   QWORD PTR [rip+0x590f]        # 0x140007038
   140001729:	mov    QWORD PTR [rip+0xdf78],rax        # 0x14000f6a8
   140001730:	lea    ebx,[r13+0x1]
   140001734:	cmp    esi,ebx
   140001736:	jge    0x140001757
   140001738:	mov    ebx,0x2710
   14000173d:	mov    ecx,ebx
   14000173f:	call   0x1400014e4
   140001744:	add    ebx,r13d
   140001747:	cmp    ebx,0x271d
   14000174d:	jbe    0x14000173d
   14000174f:	mov    eax,r13d
   140001752:	jmp    0x140001b6c
   140001757:	xor    eax,eax
   140001759:	mov    ebp,eax
   14000175b:	mov    QWORD PTR [rsp+0x28],rax
   140001760:	mov    r14d,eax
   140001763:	lea    r12d,[rax+0x4]
   140001767:	mov    DWORD PTR [rsp+0x98],eax
   14000176e:	mov    DWORD PTR [rsp+0x80],eax
   140001775:	mov    DWORD PTR [rsp+0x90],eax
   14000177c:	mov    DWORD PTR [rsp+0x20],eax
   140001780:	lea    rdx,[rip+0x5c71]        # 0x1400073f8
   140001787:	mov    rcx,QWORD PTR [rdi+0x8]
   14000178b:	call   QWORD PTR [rip+0x5a67]        # 0x1400071f8
   140001791:	test   eax,eax
   140001793:	jne    0x1400017bf
   140001795:	mov    DWORD PTR [rsp+0x80],r13d
   14000179d:	cmp    esi,0x3
   1400017a0:	jge    0x14000184e
   1400017a6:	mov    ebx,0x2710
   1400017ab:	mov    ecx,ebx
   1400017ad:	call   0x1400014e4
   1400017b2:	add    ebx,r13d
   1400017b5:	cmp    ebx,0x271d
   1400017bb:	jbe    0x1400017ab
   1400017bd:	jmp    0x14000174f
   1400017bf:	lea    rdx,[rip+0x5c42]        # 0x140007408
   1400017c6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400017ca:	call   QWORD PTR [rip+0x5a28]        # 0x1400071f8
   1400017d0:	test   eax,eax
   1400017d2:	je     0x14000182d
   1400017d4:	lea    rdx,[rip+0x5c3d]        # 0x140007418
   1400017db:	mov    rcx,QWORD PTR [rdi+0x8]
   1400017df:	call   QWORD PTR [rip+0x5a13]        # 0x1400071f8
   1400017e5:	test   eax,eax
   1400017e7:	jne    0x140001811
   1400017e9:	mov    DWORD PTR [rsp+0x98],r13d
   1400017f1:	cmp    esi,ebx
   1400017f3:	je     0x14000184e
   1400017f5:	mov    ebx,0x2710
   1400017fa:	mov    ecx,ebx
   1400017fc:	call   0x1400014e4
   140001801:	add    ebx,r13d
   140001804:	cmp    ebx,0x271d
   14000180a:	jbe    0x1400017fa
   14000180c:	jmp    0x14000174f
   140001811:	mov    ebx,0x2710
   140001816:	mov    ecx,ebx
   140001818:	call   0x1400014e4
   14000181d:	add    ebx,r13d
   140001820:	cmp    ebx,0x271d
   140001826:	jbe    0x140001816
   140001828:	jmp    0x14000174f
   14000182d:	cmp    esi,r12d
   140001830:	jge    0x14000184e
   140001832:	mov    ebx,0x2710
   140001837:	mov    ecx,ebx
   140001839:	call   0x1400014e4
   14000183e:	add    ebx,r13d
   140001841:	cmp    ebx,0x271d
   140001847:	jbe    0x140001837
   140001849:	jmp    0x14000174f
   14000184e:	mov    r13,rsi
   140001851:	cmp    rbx,rsi
   140001854:	jge    0x1400019cd
   14000185a:	mov    r8d,0x9
   140001860:	lea    rdx,[rip+0x5bc9]        # 0x140007430
   140001867:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000186b:	call   QWORD PTR [rip+0x597f]        # 0x1400071f0
   140001871:	test   eax,eax
   140001873:	jne    0x140001882
   140001875:	mov    rbp,QWORD PTR [rdi+rbx*8]
   140001879:	add    rbp,0x12
   14000187d:	jmp    0x14000198c
   140001882:	mov    r8d,0x9
   140001888:	lea    rdx,[rip+0x5bb9]        # 0x140007448
   14000188f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140001893:	call   QWORD PTR [rip+0x5957]        # 0x1400071f0
   140001899:	test   eax,eax
   14000189b:	jne    0x1400018aa
   14000189d:	mov    r14,QWORD PTR [rdi+rbx*8]
   1400018a1:	add    r14,0x12
   1400018a5:	jmp    0x14000198c
   1400018aa:	lea    rdx,[rip+0x5baf]        # 0x140007460
   1400018b1:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400018b5:	call   QWORD PTR [rip+0x593d]        # 0x1400071f8
   1400018bb:	test   eax,eax
   1400018bd:	jne    0x1400018c7
   1400018bf:	mov    r12b,0x5
   1400018c2:	jmp    0x14000198c
   1400018c7:	mov    r8d,0x9
   1400018cd:	lea    rdx,[rip+0x5ba4]        # 0x140007478
   1400018d4:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400018d8:	call   QWORD PTR [rip+0x5912]        # 0x1400071f0
   1400018de:	test   eax,eax
   1400018e0:	jne    0x140001923
   1400018e2:	mov    rsi,QWORD PTR [rdi+rbx*8]
   1400018e6:	lea    rdx,[rip+0x5ba3]        # 0x140007490
   1400018ed:	lea    rcx,[rsi+0x12]
   1400018f1:	call   QWORD PTR [rip+0x5901]        # 0x1400071f8
   1400018f7:	test   eax,eax
   1400018f9:	jne    0x140001906
   1400018fb:	mov    r15d,0x100
   140001901:	jmp    0x14000198c
   140001906:	lea    rdx,[rip+0x5b93]        # 0x1400074a0
   14000190d:	lea    rcx,[rsi+0x12]
   140001911:	call   QWORD PTR [rip+0x58e1]        # 0x1400071f8
   140001917:	test   eax,eax
   140001919:	jne    0x140001997
   14000191b:	mov    r15d,0x200
   140001921:	jmp    0x14000198c
   140001923:	mov    r8d,0x8
   140001929:	lea    rdx,[rip+0x5b80]        # 0x1400074b0
   140001930:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140001934:	call   QWORD PTR [rip+0x58b6]        # 0x1400071f0
   14000193a:	test   eax,eax
   14000193c:	jne    0x14000194d
   14000193e:	mov    rax,QWORD PTR [rdi+rbx*8]
   140001942:	add    rax,0x10
   140001946:	mov    QWORD PTR [rsp+0x28],rax
   14000194b:	jmp    0x14000198c
   14000194d:	lea    rdx,[rip+0x5b74]        # 0x1400074c8
   140001954:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140001958:	call   QWORD PTR [rip+0x589a]        # 0x1400071f8
   14000195e:	test   eax,eax
   140001960:	jne    0x14000196f
   140001962:	mov    DWORD PTR [rsp+0x90],0x1
   14000196d:	jmp    0x14000198c
   14000196f:	lea    rdx,[rip+0x5b62]        # 0x1400074d8
   140001976:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000197a:	call   QWORD PTR [rip+0x5878]        # 0x1400071f8
   140001980:	test   eax,eax
   140001982:	jne    0x1400019b2
   140001984:	mov    DWORD PTR [rsp+0x20],0x1
   14000198c:	inc    rbx
   14000198f:	cmp    rbx,r13
   140001992:	jmp    0x140001854
   140001997:	mov    ebx,0x2710
   14000199c:	mov    ecx,ebx
   14000199e:	call   0x1400014e4
   1400019a3:	inc    ebx
   1400019a5:	cmp    ebx,0x271d
   1400019ab:	jbe    0x14000199c
   1400019ad:	jmp    0x140001b67
   1400019b2:	mov    ebx,0x2710
   1400019b7:	mov    ecx,ebx
   1400019b9:	call   0x1400014e4
   1400019be:	inc    ebx
   1400019c0:	cmp    ebx,0x271d
   1400019c6:	jbe    0x1400019b7
   1400019c8:	jmp    0x140001b67
   1400019cd:	xor    edi,edi
   1400019cf:	cmp    DWORD PTR [rsp+0x80],edi
   1400019d6:	je     0x140001a13
   1400019d8:	test   rbp,rbp
   1400019db:	jne    0x1400019f8
   1400019dd:	mov    ebx,0x2710
   1400019e2:	mov    ecx,ebx
   1400019e4:	call   0x1400014e4
   1400019e9:	inc    ebx
   1400019eb:	cmp    ebx,0x271d
   1400019f1:	jbe    0x1400019e2
   1400019f3:	jmp    0x140001b67
   1400019f8:	mov    r9d,DWORD PTR [rsp+0x90]
   140001a00:	mov    r8,rbp
   140001a03:	mov    rdx,r15
   140001a06:	mov    cl,r12b
   140001a09:	call   0x1400025e0
   140001a0e:	jmp    0x140001b4d
   140001a13:	cmp    DWORD PTR [rsp+0x98],edi
   140001a1a:	je     0x140001a26
   140001a1c:	call   0x140002568
   140001a21:	jmp    0x140001b4d
   140001a26:	test   rbp,rbp
   140001a29:	je     0x140001b51
   140001a2f:	test   r14,r14
   140001a32:	je     0x140001b51
   140001a38:	mov    rdx,rbp
   140001a3b:	mov    ecx,0x2725
   140001a40:	call   0x1400014e4
   140001a45:	mov    ebx,0x5000
   140001a4a:	mov    ecx,ebx
   140001a4c:	call   0x140001660
   140001a51:	mov    QWORD PTR [rip+0x13108],rax        # 0x140014b60
   140001a58:	mov    ecx,ebx
   140001a5a:	call   0x140001660
   140001a5f:	mov    QWORD PTR [rip+0x130f2],rax        # 0x140014b58
   140001a66:	mov    ecx,ebx
   140001a68:	call   0x140001660
   140001a6d:	mov    QWORD PTR [rip+0x130d4],rax        # 0x140014b48
   140001a74:	mov    ecx,ebx
   140001a76:	call   0x140001660
   140001a7b:	mov    QWORD PTR [rip+0x130ce],rax        # 0x140014b50
   140001a82:	mov    ecx,0x2800
   140001a87:	call   0x140001660
   140001a8c:	mov    QWORD PTR [rip+0x130ad],rax        # 0x140014b40
   140001a93:	cmp    QWORD PTR [rip+0x130c6],rdi        # 0x140014b60
   140001a9a:	je     0x140001b23
   140001aa0:	cmp    QWORD PTR [rip+0x130b1],rdi        # 0x140014b58
   140001aa7:	je     0x140001b23
   140001aa9:	cmp    QWORD PTR [rip+0x13098],rdi        # 0x140014b48
   140001ab0:	je     0x140001b23
   140001ab2:	cmp    QWORD PTR [rip+0x13097],rdi        # 0x140014b50
   140001ab9:	je     0x140001b23
   140001abb:	test   rax,rax
   140001abe:	je     0x140001b23
   140001ac0:	mov    ecx,0x150
   140001ac5:	call   0x140001660
   140001aca:	mov    rbx,rax
   140001acd:	mov    QWORD PTR [rsp+0x90],rax
   140001ad5:	test   rax,rax
   140001ad8:	je     0x140001b14
   140001ada:	mov    QWORD PTR [rax+0x8],rdi
   140001ade:	mov    QWORD PTR [rax+0x10],rdi
   140001ae2:	mov    QWORD PTR [rax+0x18],rdi
   140001ae6:	mov    QWORD PTR [rax+0x20],r14
   140001aea:	mov    rax,QWORD PTR [rsp+0x28]
   140001aef:	mov    QWORD PTR [rbx+0x28],rax
   140001af3:	mov    eax,DWORD PTR [rsp+0x20]
   140001af7:	mov    DWORD PTR [rbx+0x30],eax
   140001afa:	lea    rcx,[rbx+0x38]
   140001afe:	xor    edx,edx
   140001b00:	mov    r8d,0x118
   140001b06:	call   0x140006002
   140001b0b:	mov    QWORD PTR [rbx+0x138],rdi
   140001b12:	jmp    0x140001b17
   140001b14:	mov    rbx,rdi
   140001b17:	mov    QWORD PTR [rip+0xdb82],rbx        # 0x14000f6a0
   140001b1e:	test   rbx,rbx
   140001b21:	jne    0x140001b2f
   140001b23:	mov    ecx,0x2726
   140001b28:	call   0x1400014e4
   140001b2d:	jmp    0x140001b67
   140001b2f:	mov    rcx,rbp
   140001b32:	call   0x14000284c
   140001b37:	test   eax,eax
   140001b39:	je     0x140001b67
   140001b3b:	call   0x140004368
   140001b40:	mov    rdx,r14
   140001b43:	mov    ecx,0x2727
   140001b48:	call   0x1400014e4
   140001b4d:	xor    eax,eax
   140001b4f:	jmp    0x140001b6c
   140001b51:	mov    ebx,0x2710
   140001b56:	mov    ecx,ebx
   140001b58:	call   0x1400014e4
   140001b5d:	inc    ebx
   140001b5f:	cmp    ebx,0x271d
   140001b65:	jbe    0x140001b56
   140001b67:	mov    eax,0x1
   140001b6c:	mov    rbx,QWORD PTR [rsp+0x88]
   140001b74:	add    rsp,0x40
   140001b78:	pop    r15
   140001b7a:	pop    r14
   140001b7c:	pop    r13
   140001b7e:	pop    r12
   140001b80:	pop    rdi
   140001b81:	pop    rsi
   140001b82:	pop    rbp
   140001b83:	ret    
   140001b84:	int3   
   140001b85:	int3   
   140001b86:	int3   
   140001b87:	int3   
   140001b88:	int3   
   140001b89:	int3   
   140001b8a:	int3   
   140001b8b:	int3   
   140001b8c:	rex push rbx
   140001b8e:	sub    rsp,0x20
   140001b92:	cmp    QWORD PTR [rcx+0x20],0x10
   140001b97:	mov    rbx,rcx
   140001b9a:	jb     0x140001ba5
   140001b9c:	mov    rcx,QWORD PTR [rcx+0x8]
   140001ba0:	call   0x1400016a8
   140001ba5:	and    QWORD PTR [rbx+0x18],0x0
   140001baa:	mov    QWORD PTR [rbx+0x20],0xf
   140001bb2:	mov    BYTE PTR [rbx+0x8],0x0
   140001bb6:	add    rsp,0x20
   140001bba:	pop    rbx
   140001bbb:	ret    
   140001bbc:	int3   
   140001bbd:	int3   
   140001bbe:	int3   
   140001bbf:	int3   
   140001bc0:	int3   
   140001bc1:	int3   
   140001bc2:	int3   
   140001bc3:	int3   
   140001bc4:	rex push rbx
   140001bc6:	sub    rsp,0x20
   140001bca:	mov    rbx,rcx
   140001bcd:	mov    rcx,QWORD PTR [rcx+0x8]
   140001bd1:	test   rcx,rcx
   140001bd4:	je     0x140001bdb
   140001bd6:	call   0x1400016a8
   140001bdb:	and    QWORD PTR [rbx+0x8],0x0
   140001be0:	and    QWORD PTR [rbx+0x10],0x0
   140001be5:	and    QWORD PTR [rbx+0x18],0x0
   140001bea:	add    rsp,0x20
   140001bee:	pop    rbx
   140001bef:	ret    
   140001bf0:	int3   
   140001bf1:	int3   
   140001bf2:	int3   
   140001bf3:	int3   
   140001bf4:	int3   
   140001bf5:	int3   
   140001bf6:	int3   
   140001bf7:	int3   
   140001bf8:	mov    rax,rsp
   140001bfb:	mov    QWORD PTR [rax+0x8],rbx
   140001bff:	mov    QWORD PTR [rax+0x10],rbp
   140001c03:	mov    QWORD PTR [rax+0x18],rsi
   140001c07:	mov    QWORD PTR [rax+0x20],rdi
   140001c0b:	push   r14
   140001c0d:	sub    rsp,0x20
   140001c11:	mov    r14,r9
   140001c14:	mov    rbp,r8
   140001c17:	mov    rsi,rdx
   140001c1a:	mov    rbx,rcx
   140001c1d:	cmp    QWORD PTR [rdx+0x18],r8
   140001c21:	jae    0x140001c28
   140001c23:	call   0x140005584
   140001c28:	mov    rdi,QWORD PTR [rsi+0x18]
   140001c2c:	sub    rdi,rbp
   140001c2f:	cmp    r14,rdi
   140001c32:	cmovb  rdi,r14
   140001c36:	cmp    rbx,rsi
   140001c39:	jne    0x140001c5d
   140001c3b:	lea    rdx,[rdi+rbp*1]
   140001c3f:	or     r8,0xffffffffffffffff
   140001c43:	mov    rcx,rbx
   140001c46:	call   0x140001d7c
   140001c4b:	mov    r8,rbp
   140001c4e:	xor    edx,edx
   140001c50:	mov    rcx,rbx
   140001c53:	call   0x140001d7c
   140001c58:	jmp    0x140001cea
   140001c5d:	cmp    rdi,0xfffffffffffffffe
   140001c61:	jbe    0x140001c68
   140001c63:	call   0x140005528
   140001c68:	xor    r14d,r14d
   140001c6b:	cmp    QWORD PTR [rbx+0x20],rdi
   140001c6f:	jae    0x140001c82
   140001c71:	mov    r8,QWORD PTR [rbx+0x18]
   140001c75:	mov    rdx,rdi
   140001c78:	mov    rcx,rbx
   140001c7b:	call   0x140001ed4
   140001c80:	jmp    0x140001c9f
   140001c82:	test   rdi,rdi
   140001c85:	jne    0x140001ca4
   140001c87:	cmp    QWORD PTR [rbx+0x20],0x10
   140001c8c:	mov    QWORD PTR [rbx+0x18],r14
   140001c90:	jb     0x140001c98
   140001c92:	mov    rax,QWORD PTR [rbx+0x8]
   140001c96:	jmp    0x140001c9c
   140001c98:	lea    rax,[rbx+0x8]
   140001c9c:	mov    BYTE PTR [rax],r14b
   140001c9f:	test   rdi,rdi
   140001ca2:	je     0x140001cea
   140001ca4:	cmp    QWORD PTR [rsi+0x20],0x10
   140001ca9:	jb     0x140001cb1
   140001cab:	mov    rax,QWORD PTR [rsi+0x8]
   140001caf:	jmp    0x140001cb5
   140001cb1:	lea    rax,[rsi+0x8]
   140001cb5:	mov    rdx,QWORD PTR [rbx+0x20]
   140001cb9:	lea    rsi,[rbx+0x8]
   140001cbd:	cmp    rdx,0x10
   140001cc1:	jb     0x140001cc8
   140001cc3:	mov    rcx,QWORD PTR [rsi]
   140001cc6:	jmp    0x140001ccb
   140001cc8:	mov    rcx,rsi
   140001ccb:	lea    r8,[rax+rbp*1]
   140001ccf:	mov    r9,rdi
   140001cd2:	call   QWORD PTR [rip+0x5508]        # 0x1400071e0
   140001cd8:	cmp    QWORD PTR [rbx+0x20],0x10
   140001cdd:	mov    QWORD PTR [rbx+0x18],rdi
   140001ce1:	jb     0x140001ce6
   140001ce3:	mov    rsi,QWORD PTR [rsi]
   140001ce6:	mov    BYTE PTR [rsi+rdi*1],r14b
   140001cea:	mov    rbp,QWORD PTR [rsp+0x38]
   140001cef:	mov    rax,rbx
   140001cf2:	mov    rbx,QWORD PTR [rsp+0x30]
   140001cf7:	mov    rsi,QWORD PTR [rsp+0x40]
   140001cfc:	mov    rdi,QWORD PTR [rsp+0x48]
   140001d01:	add    rsp,0x20
   140001d05:	pop    r14
   140001d07:	ret    
   140001d08:	int3   
   140001d09:	int3   
   140001d0a:	int3   
   140001d0b:	int3   
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	mov    QWORD PTR [rsp+0x8],rbx
   140001d15:	mov    QWORD PTR [rsp+0x10],rsi
   140001d1a:	push   rdi
   140001d1b:	sub    rsp,0x20
   140001d1f:	mov    rdi,r8
   140001d22:	mov    rbx,rcx
   140001d25:	test   dl,dl
   140001d27:	je     0x140001d54
   140001d29:	mov    edx,0x10
   140001d2e:	cmp    QWORD PTR [rcx+0x20],rdx
   140001d32:	jb     0x140001d54
   140001d34:	add    rcx,0x8
   140001d38:	mov    rsi,QWORD PTR [rcx]
   140001d3b:	test   r8,r8
   140001d3e:	je     0x140001d4c
   140001d40:	mov    r9,r8
   140001d43:	mov    r8,rsi
   140001d46:	call   QWORD PTR [rip+0x5494]        # 0x1400071e0
   140001d4c:	mov    rcx,rsi
   140001d4f:	call   0x1400016a8
   140001d54:	mov    rsi,QWORD PTR [rsp+0x38]
   140001d59:	mov    QWORD PTR [rbx+0x20],0xf
   140001d61:	mov    QWORD PTR [rbx+0x18],rdi
   140001d65:	mov    BYTE PTR [rbx+rdi*1+0x8],0x0
   140001d6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d6f:	add    rsp,0x20
   140001d73:	pop    rdi
   140001d74:	ret    
   140001d75:	int3   
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140001d81:	mov    QWORD PTR [rsp+0x10],rbp
   140001d86:	mov    QWORD PTR [rsp+0x18],rsi
   140001d8b:	push   rdi
   140001d8c:	sub    rsp,0x20
   140001d90:	mov    rsi,r8
   140001d93:	mov    rbp,rdx
   140001d96:	mov    rdi,rcx
   140001d99:	cmp    QWORD PTR [rcx+0x18],rdx
   140001d9d:	jae    0x140001da4
   140001d9f:	call   0x140005584
   140001da4:	mov    r9,QWORD PTR [rdi+0x18]
   140001da8:	sub    r9,rbp
   140001dab:	cmp    r9,rsi
   140001dae:	cmovb  rsi,r9
   140001db2:	test   rsi,rsi
   140001db5:	je     0x140001e0b
   140001db7:	mov    rdx,QWORD PTR [rdi+0x20]
   140001dbb:	lea    rbx,[rdi+0x8]
   140001dbf:	cmp    rdx,0x10
   140001dc3:	jb     0x140001dca
   140001dc5:	mov    rcx,QWORD PTR [rbx]
   140001dc8:	jmp    0x140001dcd
   140001dca:	mov    rcx,rbx
   140001dcd:	cmp    rdx,0x10
   140001dd1:	jb     0x140001dd8
   140001dd3:	mov    rax,QWORD PTR [rbx]
   140001dd6:	jmp    0x140001ddb
   140001dd8:	mov    rax,rbx
   140001ddb:	lea    r8,[rcx+rbp*1]
   140001ddf:	sub    r9,rsi
   140001de2:	add    r8,rsi
   140001de5:	lea    rcx,[rax+rbp*1]
   140001de9:	sub    rdx,rbp
   140001dec:	call   QWORD PTR [rip+0x540e]        # 0x140007200
   140001df2:	mov    rax,QWORD PTR [rdi+0x18]
   140001df6:	sub    rax,rsi
   140001df9:	cmp    QWORD PTR [rdi+0x20],0x10
   140001dfe:	mov    QWORD PTR [rdi+0x18],rax
   140001e02:	jb     0x140001e07
   140001e04:	mov    rbx,QWORD PTR [rbx]
   140001e07:	mov    BYTE PTR [rbx+rax*1],0x0
   140001e0b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e10:	mov    rax,rdi
   140001e13:	mov    rbp,QWORD PTR [rsp+0x38]
   140001e18:	mov    rsi,QWORD PTR [rsp+0x40]
   140001e1d:	add    rsp,0x20
   140001e21:	pop    rdi
   140001e22:	ret    
   140001e23:	int3   
   140001e24:	int3   
   140001e25:	int3   
   140001e26:	int3   
   140001e27:	int3   
   140001e28:	int3   
   140001e29:	int3   
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	sub    rsp,0xa8
   140001e33:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001e3c:	mov    rax,QWORD PTR [rip+0x81bd]        # 0x14000a000
   140001e43:	xor    rax,rsp
   140001e46:	mov    QWORD PTR [rsp+0x90],rax
   140001e4e:	lea    rdx,[rip+0x5693]        # 0x1400074e8
   140001e55:	lea    rcx,[rsp+0x28]
   140001e5a:	call   0x140001e98
   140001e5f:	nop
   140001e60:	lea    rdx,[rsp+0x28]
   140001e65:	lea    rcx,[rsp+0x50]
   140001e6a:	call   0x1400012d0
   140001e6f:	lea    rdx,[rip+0x6cd2]        # 0x140008b48
   140001e76:	lea    rcx,[rsp+0x50]
   140001e7b:	call   0x140005b88
   140001e80:	int3   
   140001e81:	int3   
   140001e82:	int3   
   140001e83:	int3   
   140001e84:	int3   
   140001e85:	int3   
   140001e86:	int3   
   140001e87:	int3   
   140001e88:	mov    rcx,rdx
   140001e8b:	jmp    0x1400016a8
   140001e90:	int3   
   140001e91:	int3   
   140001e92:	int3   
   140001e93:	int3   
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	rex push rbx
   140001e9a:	sub    rsp,0x20
   140001e9e:	xor    eax,eax
   140001ea0:	mov    QWORD PTR [rcx+0x20],0xf
   140001ea8:	mov    QWORD PTR [rcx+0x18],rax
   140001eac:	mov    rbx,rcx
   140001eaf:	mov    BYTE PTR [rcx+0x8],al
   140001eb2:	or     r8,0xffffffffffffffff
   140001eb6:	inc    r8
   140001eb9:	cmp    BYTE PTR [rdx+r8*1],al
   140001ebd:	jne    0x140001eb6
   140001ebf:	call   0x14000200c
   140001ec4:	mov    rax,rbx
   140001ec7:	add    rsp,0x20
   140001ecb:	pop    rbx
   140001ecc:	ret    
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	int3   
   140001ed1:	int3   
   140001ed2:	int3   
   140001ed3:	int3   
   140001ed4:	mov    rax,rsp
   140001ed7:	mov    QWORD PTR [rax+0x18],r8
   140001edb:	mov    QWORD PTR [rax+0x10],rdx
   140001edf:	mov    QWORD PTR [rax+0x8],rcx
   140001ee3:	push   rsi
   140001ee4:	push   rdi
   140001ee5:	push   r14
   140001ee7:	sub    rsp,0x60
   140001eeb:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   140001ef3:	mov    QWORD PTR [rax+0x20],rbx
   140001ef7:	mov    rsi,r8
   140001efa:	mov    rdi,rcx
   140001efd:	mov    rbx,rdx
   140001f00:	or     rbx,0xf
   140001f04:	mov    r9,0xfffffffffffffffe
   140001f0b:	cmp    rbx,r9
   140001f0e:	jbe    0x140001f15
   140001f10:	mov    rbx,rdx
   140001f13:	jmp    0x140001f40
   140001f15:	mov    r8,QWORD PTR [rcx+0x20]
   140001f19:	mov    rcx,r8
   140001f1c:	shr    rcx,1
   140001f1f:	movabs rax,0xaaaaaaaaaaaaaaab
   140001f29:	mul    rbx
   140001f2c:	shr    rdx,1
   140001f2f:	cmp    rdx,rcx
   140001f32:	jae    0x140001f40
   140001f34:	sub    r9,rcx
   140001f37:	cmp    r8,r9
   140001f3a:	ja     0x140001f40
   140001f3c:	lea    rbx,[rcx+r8*1]
   140001f40:	lea    rcx,[rbx+0x1]
   140001f44:	test   rcx,rcx
   140001f47:	je     0x140001f75
   140001f49:	xor    edx,edx
   140001f4b:	or     rax,0xffffffffffffffff
   140001f4f:	div    rcx
   140001f52:	cmp    rax,0x1
   140001f56:	jae    0x140001f75
   140001f58:	xor    edx,edx
   140001f5a:	lea    rcx,[rsp+0x30]
   140001f5f:	call   0x140001008
   140001f64:	lea    rdx,[rip+0x6d0d]        # 0x140008c78
   140001f6b:	lea    rcx,[rsp+0x30]
   140001f70:	call   0x140005b88
   140001f75:	call   0x140001660
   140001f7a:	mov    r14,rax
   140001f7d:	mov    QWORD PTR [rsp+0x20],rax
   140001f82:	jmp    0x140001fa1
   140001f84:	mov    rdi,QWORD PTR [rsp+0x80]
   140001f8c:	mov    rsi,QWORD PTR [rsp+0x90]
   140001f94:	mov    rbx,QWORD PTR [rsp+0x88]
   140001f9c:	mov    r14,QWORD PTR [rsp+0x20]
   140001fa1:	test   rsi,rsi
   140001fa4:	je     0x140001fc7
   140001fa6:	cmp    QWORD PTR [rdi+0x20],0x10
   140001fab:	jb     0x140001fb3
   140001fad:	mov    r8,QWORD PTR [rdi+0x8]
   140001fb1:	jmp    0x140001fb7
   140001fb3:	lea    r8,[rdi+0x8]
   140001fb7:	lea    rdx,[rbx+0x1]
   140001fbb:	mov    r9,rsi
   140001fbe:	mov    rcx,r14
   140001fc1:	call   QWORD PTR [rip+0x5219]        # 0x1400071e0
   140001fc7:	cmp    QWORD PTR [rdi+0x20],0x10
   140001fcc:	jb     0x140001fd7
   140001fce:	mov    rcx,QWORD PTR [rdi+0x8]
   140001fd2:	call   0x1400016a8
   140001fd7:	lea    rax,[rdi+0x8]
   140001fdb:	mov    BYTE PTR [rax],0x0
   140001fde:	mov    QWORD PTR [rax],r14
   140001fe1:	mov    QWORD PTR [rdi+0x20],rbx
   140001fe5:	mov    QWORD PTR [rdi+0x18],rsi
   140001fe9:	cmp    rbx,0x10
   140001fed:	cmovae rax,r14
   140001ff1:	mov    BYTE PTR [rax+rsi*1],0x0
   140001ff5:	mov    rbx,QWORD PTR [rsp+0x98]
   140001ffd:	add    rsp,0x60
   140002001:	pop    r14
   140002003:	pop    rdi
   140002004:	pop    rsi
   140002005:	ret    
   140002006:	int3   
   140002007:	int3   
   140002008:	int3   
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	mov    QWORD PTR [rsp+0x8],rbx
   140002011:	mov    QWORD PTR [rsp+0x10],rbp
   140002016:	mov    QWORD PTR [rsp+0x18],rsi
   14000201b:	push   rdi
   14000201c:	sub    rsp,0x20
   140002020:	cmp    QWORD PTR [rcx+0x20],0x10
   140002025:	lea    rbx,[rcx+0x8]
   140002029:	mov    rsi,r8
   14000202c:	mov    rbp,rdx
   14000202f:	mov    rdi,rcx
   140002032:	jb     0x140002039
   140002034:	mov    rax,QWORD PTR [rbx]
   140002037:	jmp    0x14000203c
   140002039:	mov    rax,rbx
   14000203c:	cmp    rdx,rax
   14000203f:	jb     0x140002079
   140002041:	cmp    QWORD PTR [rcx+0x20],0x10
   140002046:	jb     0x14000204d
   140002048:	mov    rcx,QWORD PTR [rbx]
   14000204b:	jmp    0x140002050
   14000204d:	mov    rcx,rbx
   140002050:	add    rcx,QWORD PTR [rdi+0x18]
   140002054:	cmp    rcx,rdx
   140002057:	jbe    0x140002079
   140002059:	cmp    QWORD PTR [rdi+0x20],0x10
   14000205e:	jb     0x140002063
   140002060:	mov    rbx,QWORD PTR [rbx]
   140002063:	sub    rbp,rbx
   140002066:	mov    r9,r8
   140002069:	mov    r8,rbp
   14000206c:	mov    rdx,rdi
   14000206f:	mov    rcx,rdi
   140002072:	call   0x140001bf8
   140002077:	jmp    0x1400020ee
   140002079:	cmp    r8,0xfffffffffffffffe
   14000207d:	jbe    0x140002084
   14000207f:	call   0x140005528
   140002084:	cmp    QWORD PTR [rdi+0x20],rsi
   140002088:	jae    0x14000209b
   14000208a:	mov    r8,QWORD PTR [rdi+0x18]
   14000208e:	mov    rdx,rsi
   140002091:	mov    rcx,rdi
   140002094:	call   0x140001ed4
   140002099:	jmp    0x1400020b6
   14000209b:	test   rsi,rsi
   14000209e:	jne    0x1400020bb
   1400020a0:	and    QWORD PTR [rdi+0x18],rsi
   1400020a4:	cmp    QWORD PTR [rdi+0x20],0x10
   1400020a9:	jb     0x1400020b0
   1400020ab:	mov    rax,QWORD PTR [rbx]
   1400020ae:	jmp    0x1400020b3
   1400020b0:	mov    rax,rbx
   1400020b3:	mov    BYTE PTR [rax],0x0
   1400020b6:	test   rsi,rsi
   1400020b9:	je     0x1400020eb
   1400020bb:	mov    rdx,QWORD PTR [rdi+0x20]
   1400020bf:	cmp    rdx,0x10
   1400020c3:	jb     0x1400020ca
   1400020c5:	mov    rcx,QWORD PTR [rbx]
   1400020c8:	jmp    0x1400020cd
   1400020ca:	mov    rcx,rbx
   1400020cd:	mov    r9,rsi
   1400020d0:	mov    r8,rbp
   1400020d3:	call   QWORD PTR [rip+0x5107]        # 0x1400071e0
   1400020d9:	cmp    QWORD PTR [rdi+0x20],0x10
   1400020de:	mov    QWORD PTR [rdi+0x18],rsi
   1400020e2:	jb     0x1400020e7
   1400020e4:	mov    rbx,QWORD PTR [rbx]
   1400020e7:	mov    BYTE PTR [rbx+rsi*1],0x0
   1400020eb:	mov    rax,rdi
   1400020ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020f3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400020f8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400020fd:	add    rsp,0x20
   140002101:	pop    rdi
   140002102:	ret    
   140002103:	int3   
   140002104:	int3   
   140002105:	int3   
   140002106:	int3   
   140002107:	int3   
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	mov    QWORD PTR [rsp+0x8],rbx
   140002111:	xor    ebx,ebx
   140002113:	lea    rax,[rdx-0x1]
   140002117:	mov    r10d,0x7ffffffe
   14000211d:	mov    r9d,ebx
   140002120:	cmp    rax,r10
   140002123:	mov    r11d,0x80070057
   140002129:	cmova  r9d,r11d
   14000212d:	test   r9d,r9d
   140002130:	js     0x140002171
   140002132:	mov    r9d,ebx
   140002135:	test   rdx,rdx
   140002138:	je     0x140002165
   14000213a:	sub    r10,rdx
   14000213d:	sub    r8,rcx
   140002140:	lea    rax,[r10+rdx*1]
   140002144:	test   rax,rax
   140002147:	je     0x140002160
   140002149:	movzx  eax,WORD PTR [r8+rcx*1]
   14000214e:	test   ax,ax
   140002151:	je     0x140002160
   140002153:	mov    WORD PTR [rcx],ax
   140002156:	add    rcx,0x2
   14000215a:	sub    rdx,0x1
   14000215e:	jne    0x140002140
   140002160:	test   rdx,rdx
   140002163:	jne    0x140002176
   140002165:	sub    rcx,0x2
   140002169:	mov    r9d,0x8007007a
   14000216f:	jmp    0x140002176
   140002171:	test   rdx,rdx
   140002174:	je     0x140002179
   140002176:	mov    WORD PTR [rcx],bx
   140002179:	mov    rbx,QWORD PTR [rsp+0x8]
   14000217e:	mov    eax,r9d
   140002181:	ret    
   140002182:	int3   
   140002183:	int3   
   140002184:	int3   
   140002185:	int3   
   140002186:	int3   
   140002187:	int3   
   140002188:	mov    r9,QWORD PTR [rip+0x129c1]        # 0x140014b50
   14000218f:	mov    ecx,0x2800
   140002194:	mov    eax,ecx
   140002196:	mov    rdx,r9
   140002199:	mov    r10,r8
   14000219c:	xor    r11d,r11d
   14000219f:	cmp    WORD PTR [rdx],r11w
   1400021a3:	je     0x1400021af
   1400021a5:	add    rdx,0x2
   1400021a9:	sub    rax,0x1
   1400021ad:	jne    0x14000219f
   1400021af:	test   rax,rax
   1400021b2:	je     0x140002208
   1400021b4:	mov    r8,rcx
   1400021b7:	mov    edx,r11d
   1400021ba:	sub    r8,rax
   1400021bd:	lea    rax,[r9+r8*2]
   1400021c1:	sub    rcx,r8
   1400021c4:	je     0x1400021f9
   1400021c6:	add    r8,0x7fffd7fe
   1400021cd:	add    r8,rcx
   1400021d0:	sub    r10,rax
   1400021d3:	test   r8,r8
   1400021d6:	je     0x1400021f4
   1400021d8:	movzx  r9d,WORD PTR [r10+rax*1]
   1400021dd:	test   r9w,r9w
   1400021e1:	je     0x1400021f4
   1400021e3:	mov    WORD PTR [rax],r9w
   1400021e7:	dec    r8
   1400021ea:	add    rax,0x2
   1400021ee:	sub    rcx,0x1
   1400021f2:	jne    0x1400021d3
   1400021f4:	test   rcx,rcx
   1400021f7:	jne    0x140002202
   1400021f9:	sub    rax,0x2
   1400021fd:	mov    edx,0x8007007a
   140002202:	mov    WORD PTR [rax],r11w
   140002206:	jmp    0x14000220d
   140002208:	mov    edx,0x80070057
   14000220d:	mov    eax,edx
   14000220f:	ret    
   140002210:	int3   
   140002211:	int3   
   140002212:	int3   
   140002213:	int3   
   140002214:	int3   
   140002215:	int3   
   140002216:	int3   
   140002217:	int3   
   140002218:	mov    QWORD PTR [rsp+0x18],r8
   14000221d:	mov    QWORD PTR [rsp+0x20],r9
   140002222:	push   rbx
   140002223:	push   rbp
   140002224:	push   rsi
   140002225:	push   rdi
   140002226:	sub    rsp,0x28
   14000222a:	xor    ebp,ebp
   14000222c:	lea    rax,[rdx-0x1]
   140002230:	cmp    rax,0x7ffffffe
   140002236:	mov    rsi,rcx
   140002239:	mov    edi,ebp
   14000223b:	mov    ecx,0x80070057
   140002240:	cmova  edi,ecx
   140002243:	test   edi,edi
   140002245:	js     0x14000227c
   140002247:	lea    rbx,[rdx-0x1]
   14000224b:	mov    rcx,rsi
   14000224e:	mov    rdx,rbx
   140002251:	lea    r9,[rsp+0x68]
   140002256:	mov    edi,ebp
   140002258:	call   QWORD PTR [rip+0x4f72]        # 0x1400071d0
   14000225e:	test   eax,eax
   140002260:	js     0x140002271
   140002262:	cdqe   
   140002264:	cmp    rax,rbx
   140002267:	ja     0x140002271
   140002269:	jne    0x140002284
   14000226b:	mov    WORD PTR [rsi+rbx*2],bp
   14000226f:	jmp    0x140002284
   140002271:	mov    WORD PTR [rsi+rbx*2],bp
   140002275:	mov    edi,0x8007007a
   14000227a:	jmp    0x140002284
   14000227c:	test   rdx,rdx
   14000227f:	je     0x140002284
   140002281:	mov    WORD PTR [rsi],bp
   140002284:	mov    eax,edi
   140002286:	add    rsp,0x28
   14000228a:	pop    rdi
   14000228b:	pop    rsi
   14000228c:	pop    rbp
   14000228d:	pop    rbx
   14000228e:	ret    
   14000228f:	int3   
   140002290:	int3   
   140002291:	int3   
   140002292:	int3   
   140002293:	int3   
   140002294:	int3   
   140002295:	int3   
   140002296:	int3   
   140002297:	int3   
   140002298:	mov    QWORD PTR [rsp+0x8],rcx
   14000229d:	push   rbx
   14000229e:	sub    rsp,0x30
   1400022a2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400022ab:	mov    rbx,rcx
   1400022ae:	mov    rcx,QWORD PTR [rcx+0x48]
   1400022b2:	test   rcx,rcx
   1400022b5:	je     0x1400022bc
   1400022b7:	call   0x1400016a8
   1400022bc:	and    QWORD PTR [rbx+0x48],0x0
   1400022c1:	and    QWORD PTR [rbx+0x50],0x0
   1400022c6:	and    QWORD PTR [rbx+0x58],0x0
   1400022cb:	mov    rcx,QWORD PTR [rbx+0x28]
   1400022cf:	test   rcx,rcx
   1400022d2:	je     0x1400022d9
   1400022d4:	call   0x1400016a8
   1400022d9:	and    QWORD PTR [rbx+0x28],0x0
   1400022de:	and    QWORD PTR [rbx+0x30],0x0
   1400022e3:	and    QWORD PTR [rbx+0x38],0x0
   1400022e8:	add    rsp,0x30
   1400022ec:	pop    rbx
   1400022ed:	ret    
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	int3   
   1400022f1:	int3   
   1400022f2:	int3   
   1400022f3:	int3   
   1400022f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400022f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400022fe:	push   rdi
   1400022ff:	sub    rsp,0x20
   140002303:	mov    rdi,QWORD PTR [rip+0x12856]        # 0x140014b60
   14000230a:	mov    rsi,rcx
   14000230d:	mov    ebx,edx
   14000230f:	cmp    edx,0x5000
   140002315:	jb     0x14000233b
   140002317:	mov    rcx,0xffffffffffffffff
   14000231e:	mov    r8d,ebx
   140002321:	shr    r8,1
   140002324:	mov    eax,0x2
   140002329:	mul    r8
   14000232c:	cmovo  rax,rcx
   140002330:	mov    rcx,rax
   140002333:	call   0x140001660
   140002338:	mov    rdi,rax
   14000233b:	mov    r8,rbx
   14000233e:	mov    rdx,rsi
   140002341:	mov    rcx,rdi
   140002344:	call   0x140005ff6
   140002349:	mov    rbx,QWORD PTR [rsp+0x30]
   14000234e:	mov    rax,rdi
   140002351:	mov    rsi,QWORD PTR [rsp+0x38]
   140002356:	add    rsp,0x20
   14000235a:	pop    rdi
   14000235b:	ret    
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	int3   
   140002361:	int3   
   140002362:	int3   
   140002363:	int3   
   140002364:	sub    rsp,0x28
   140002368:	cmp    rcx,QWORD PTR [rip+0x127f1]        # 0x140014b60
   14000236f:	mov    r8,rcx
   140002372:	je     0x14000238e
   140002374:	test   rcx,rcx
   140002377:	je     0x14000238e
   140002379:	mov    rcx,QWORD PTR gs:0x60
   140002382:	xor    edx,edx
   140002384:	mov    rcx,QWORD PTR [rcx+0x30]
   140002388:	call   QWORD PTR [rip+0x4eaa]        # 0x140007238
   14000238e:	add    rsp,0x28
   140002392:	ret    
   140002393:	int3   
   140002394:	int3   
   140002395:	int3   
   140002396:	int3   
   140002397:	int3   
   140002398:	int3   
   140002399:	int3   
   14000239a:	int3   
   14000239b:	int3   
   14000239c:	mov    QWORD PTR [rsp+0x10],rbx
   1400023a1:	push   rdi
   1400023a2:	sub    rsp,0x850
   1400023a9:	mov    rax,QWORD PTR [rip+0x7c50]        # 0x14000a000
   1400023b0:	xor    rax,rsp
   1400023b3:	mov    QWORD PTR [rsp+0x840],rax
   1400023bb:	xor    edi,edi
   1400023bd:	mov    ebx,ecx
   1400023bf:	mov    WORD PTR [rsp+0x40],di
   1400023c4:	call   QWORD PTR [rip+0x4cae]        # 0x140007078
   1400023ca:	mov    QWORD PTR [rsp+0x30],rdi
   1400023cf:	mov    r8d,ebx
   1400023d2:	movzx  r9d,ax
   1400023d6:	xor    edx,edx
   1400023d8:	lea    rax,[rsp+0x40]
   1400023dd:	mov    DWORD PTR [rsp+0x28],0x400
   1400023e5:	mov    ecx,0x1200
   1400023ea:	mov    QWORD PTR [rsp+0x20],rax
   1400023ef:	call   QWORD PTR [rip+0x4c8b]        # 0x140007080
   1400023f5:	cmp    WORD PTR [rsp+0x40],di
   1400023fa:	je     0x140002410
   1400023fc:	lea    rdx,[rsp+0x40]
   140002401:	lea    rcx,[rip+0x5164]        # 0x14000756c
   140002408:	call   QWORD PTR [rip+0x4dda]        # 0x1400071e8
   14000240e:	jmp    0x14000241a
   140002410:	mov    ecx,0x272e
   140002415:	call   0x1400014e4
   14000241a:	mov    rcx,QWORD PTR [rsp+0x840]
   140002422:	xor    rcx,rsp
   140002425:	call   0x140005930
   14000242a:	mov    rbx,QWORD PTR [rsp+0x868]
   140002432:	add    rsp,0x850
   140002439:	pop    rdi
   14000243a:	ret    
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	int3   
   140002441:	int3   
   140002442:	int3   
   140002443:	int3   
   140002444:	mov    QWORD PTR [rsp+0x8],rbx
   140002449:	mov    QWORD PTR [rsp+0x10],rbp
   14000244e:	push   rdi
   14000244f:	sub    rsp,0x20
   140002453:	mov    rdi,rdx
   140002456:	lea    rbp,[rip+0x12253]        # 0x1400146b0
   14000245d:	mov    rbx,rcx
   140002460:	xor    edx,edx
   140002462:	mov    rcx,rbp
   140002465:	mov    r8d,0x488
   14000246b:	call   0x140006002
   140002470:	movups xmm0,XMMWORD PTR [rip+0x5591]        # 0x140007a08
   140002477:	xor    r10d,r10d
   14000247a:	mov    DWORD PTR [rip+0x1222c],0x488        # 0x1400146b0
   140002484:	mov    edx,0x104
   140002489:	mov    DWORD PTR [rip+0x12249],0x20000        # 0x1400146dc
   140002493:	lea    rcx,[rip+0x1228e]        # 0x140014728
   14000249a:	mov    DWORD PTR [rip+0x12234],0x1        # 0x1400146d8
   1400024a4:	lea    r9,[rip+0x50cd]        # 0x140007578
   1400024ab:	mov    DWORD PTR [rip+0x1223e],r10d        # 0x1400146f0
   1400024b2:	movdqu XMMWORD PTR [rip+0x1220e],xmm0        # 0x1400146c8
   1400024ba:	mov    DWORD PTR [rip+0x12260],0x78        # 0x140014724
   1400024c4:	mov    r8d,edx
   1400024c7:	sub    r9,rcx
   1400024ca:	lea    rax,[r8+0x7ffffefa]
   1400024d1:	test   rax,rax
   1400024d4:	je     0x1400024ed
   1400024d6:	movzx  eax,WORD PTR [r9+rcx*1]
   1400024db:	test   ax,ax
   1400024de:	je     0x1400024ed
   1400024e0:	mov    WORD PTR [rcx],ax
   1400024e3:	add    rcx,0x2
   1400024e7:	sub    r8,0x1
   1400024eb:	jne    0x1400024ca
   1400024ed:	test   r8,r8
   1400024f0:	jne    0x1400024f6
   1400024f2:	sub    rcx,0x2
   1400024f6:	mov    WORD PTR [rcx],r10w
   1400024fa:	test   rbx,rbx
   1400024fd:	je     0x140002548
   1400024ff:	cmp    WORD PTR [rbx],r10w
   140002503:	je     0x140002548
   140002505:	lea    rcx,[rip+0x12246]        # 0x140014752
   14000250c:	mov    DWORD PTR [rip+0x1220a],0xa2        # 0x140014720
   140002516:	sub    rbx,rcx
   140002519:	lea    rax,[rdx+0x7ffffefa]
   140002520:	test   rax,rax
   140002523:	je     0x14000253b
   140002525:	movzx  eax,WORD PTR [rbx+rcx*1]
   140002529:	test   ax,ax
   14000252c:	je     0x14000253b
   14000252e:	mov    WORD PTR [rcx],ax
   140002531:	add    rcx,0x2
   140002535:	sub    rdx,0x1
   140002539:	jne    0x140002519
   14000253b:	test   rdx,rdx
   14000253e:	jne    0x140002544
   140002540:	sub    rcx,0x2
   140002544:	mov    WORD PTR [rcx],r10w
   140002548:	mov    rbx,QWORD PTR [rsp+0x30]
   14000254d:	mov    eax,0x1
   140002552:	mov    QWORD PTR [rdi],rbp
   140002555:	mov    rbp,QWORD PTR [rsp+0x38]
   14000255a:	add    rsp,0x20
   14000255e:	pop    rdi
   14000255f:	ret    
   140002560:	int3   
   140002561:	int3   
   140002562:	int3   
   140002563:	int3   
   140002564:	int3   
   140002565:	int3   
   140002566:	int3   
   140002567:	int3   
   140002568:	mov    QWORD PTR [rsp+0x10],rbx
   14000256d:	push   rdi
   14000256e:	sub    rsp,0x20
   140002572:	xor    ebx,ebx
   140002574:	lea    rdx,[rsp+0x30]
   140002579:	xor    ecx,ecx
   14000257b:	mov    QWORD PTR [rsp+0x30],rbx
   140002580:	call   0x140002444
   140002585:	test   eax,eax
   140002587:	je     0x1400025cb
   140002589:	mov    r8,QWORD PTR [rsp+0x30]
   14000258e:	lea    r9d,[rbx+0x1]
   140002592:	mov    rcx,QWORD PTR [rip+0x125cf]        # 0x140014b68
   140002599:	lea    rdx,[rip+0x4fd8]        # 0x140007578
   1400025a0:	call   QWORD PTR [rip+0x4a62]        # 0x140007008
   1400025a6:	mov    edi,eax
   1400025a8:	test   eax,eax
   1400025aa:	je     0x1400025c6
   1400025ac:	lea    rdx,[rip+0x500d]        # 0x1400075c0
   1400025b3:	mov    ecx,0x2728
   1400025b8:	call   0x1400014e4
   1400025bd:	mov    ecx,edi
   1400025bf:	call   0x14000239c
   1400025c4:	jmp    0x1400025cb
   1400025c6:	mov    ebx,0x1
   1400025cb:	mov    eax,ebx
   1400025cd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400025d2:	add    rsp,0x20
   1400025d6:	pop    rdi
   1400025d7:	ret    
   1400025d8:	int3   
   1400025d9:	int3   
   1400025da:	int3   
   1400025db:	int3   
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	mov    rax,rsp
   1400025e3:	mov    QWORD PTR [rax+0x8],rbx
   1400025e7:	mov    QWORD PTR [rax+0x10],rbp
   1400025eb:	mov    QWORD PTR [rax+0x18],rsi
   1400025ef:	mov    QWORD PTR [rax+0x20],rdi
   1400025f3:	push   r14
   1400025f5:	sub    rsp,0x60
   1400025f9:	mov    rbp,rdx
   1400025fc:	mov    r14b,cl
   1400025ff:	mov    edx,0x1
   140002604:	lea    rcx,[rip+0x3a5]        # 0x1400029b0
   14000260b:	mov    esi,r9d
   14000260e:	mov    rdi,r8
   140002611:	call   QWORD PTR [rip+0x4a89]        # 0x1400070a0
   140002617:	test   eax,eax
   140002619:	jne    0x14000263e
   14000261b:	lea    rdx,[rip+0x4fde]        # 0x140007600
   140002622:	mov    ecx,0x2728
   140002627:	call   0x1400014e4
   14000262c:	call   QWORD PTR [rip+0x4a66]        # 0x140007098
   140002632:	mov    ecx,eax
   140002634:	call   0x14000239c
   140002639:	jmp    0x14000275b
   14000263e:	and    QWORD PTR [rsp+0x50],0x0
   140002644:	lea    rdx,[rsp+0x50]
   140002649:	mov    rcx,rdi
   14000264c:	call   0x140002444
   140002651:	test   eax,eax
   140002653:	je     0x14000275b
   140002659:	mov    r8,QWORD PTR [rsp+0x50]
   14000265e:	lea    rdx,[rip+0x4f13]        # 0x140007578
   140002665:	lea    rcx,[rip+0x124fc]        # 0x140014b68
   14000266c:	call   QWORD PTR [rip+0x49a6]        # 0x140007018
   140002672:	mov    ebx,eax
   140002674:	test   eax,eax
   140002676:	je     0x14000268d
   140002678:	lea    rdx,[rip+0x4f29]        # 0x1400075a8
   14000267f:	mov    ecx,0x2728
   140002684:	call   0x1400014e4
   140002689:	mov    ecx,ebx
   14000268b:	jmp    0x140002634
   14000268d:	mov    DWORD PTR [rip+0x124a1],0x1        # 0x140014b38
   140002697:	and    QWORD PTR [rsp+0x40],0x0
   14000269d:	lea    rcx,[rip+0x4e8c]        # 0x140007530
   1400026a4:	and    DWORD PTR [rsp+0x38],0x0
   1400026a9:	mov    r9d,0x1
   1400026af:	and    QWORD PTR [rsp+0x30],0x0
   1400026b5:	xor    edx,edx
   1400026b7:	mov    r8,QWORD PTR [rip+0x124aa]        # 0x140014b68
   1400026be:	mov    QWORD PTR [rsp+0x28],rbp
   1400026c3:	mov    BYTE PTR [rsp+0x20],r14b
   1400026c8:	call   QWORD PTR [rip+0x4932]        # 0x140007000
   1400026ce:	mov    ebx,eax
   1400026d0:	test   eax,eax
   1400026d2:	je     0x1400026dd
   1400026d4:	lea    rdx,[rip+0x4f05]        # 0x1400075e0
   1400026db:	jmp    0x14000267f
   1400026dd:	mov    rdx,rdi
   1400026e0:	mov    ecx,0x2724
   1400026e5:	call   0x1400014e4
   1400026ea:	test   esi,esi
   1400026ec:	jne    0x14000275b
   1400026ee:	mov    ecx,0x272a
   1400026f3:	call   0x1400014e4
   1400026f8:	call   QWORD PTR [rip+0x4a22]        # 0x140007120
   1400026fe:	cmp    eax,0xa
   140002701:	jne    0x1400026f8
   140002703:	and    QWORD PTR [rsp+0x40],0x0
   140002709:	lea    rcx,[rip+0x4e20]        # 0x140007530
   140002710:	and    DWORD PTR [rsp+0x38],0x0
   140002715:	xor    r9d,r9d
   140002718:	and    QWORD PTR [rsp+0x30],0x0
   14000271e:	xor    edx,edx
   140002720:	and    QWORD PTR [rsp+0x28],0x0
   140002726:	mov    r8,QWORD PTR [rip+0x1243b]        # 0x140014b68
   14000272d:	mov    BYTE PTR [rsp+0x20],0x0
   140002732:	call   QWORD PTR [rip+0x48c8]        # 0x140007000
   140002738:	mov    ebx,eax
   14000273a:	test   eax,eax
   14000273c:	je     0x140002756
   14000273e:	lea    rdx,[rip+0x4e9b]        # 0x1400075e0
   140002745:	mov    ecx,0x2728
   14000274a:	call   0x1400014e4
   14000274f:	mov    ecx,ebx
   140002751:	call   0x14000239c
   140002756:	call   0x140002568
   14000275b:	lea    r11,[rsp+0x60]
   140002760:	xor    eax,eax
   140002762:	mov    rbx,QWORD PTR [r11+0x10]
   140002766:	mov    rbp,QWORD PTR [r11+0x18]
   14000276a:	mov    rsi,QWORD PTR [r11+0x20]
   14000276e:	mov    rdi,QWORD PTR [r11+0x28]
   140002772:	mov    rsp,r11
   140002775:	pop    r14
   140002777:	ret    
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	sub    rsp,0x28
   140002784:	mov    rax,QWORD PTR [rcx+0x18]
   140002788:	cmp    rax,QWORD PTR [rip+0x4dc9]        # 0x140007558
   14000278f:	jne    0x14000281d
   140002795:	mov    rax,QWORD PTR [rcx+0x20]
   140002799:	cmp    rax,QWORD PTR [rip+0x4dc0]        # 0x140007560
   1400027a0:	jne    0x14000281d
   1400027a2:	cmp    BYTE PTR [rcx+0x2d],0x0
   1400027a6:	jne    0x14000281d
   1400027a8:	mov    rdx,QWORD PTR [rcx+0x60]
   1400027ac:	mov    eax,0x2
   1400027b1:	mov    rcx,QWORD PTR [rip+0xcee8]        # 0x14000f6a0
   1400027b8:	add    rcx,0x38
   1400027bc:	lea    r8d,[rax+0x7e]
   1400027c0:	movups xmm0,XMMWORD PTR [rdx]
   1400027c3:	movups XMMWORD PTR [rcx],xmm0
   1400027c6:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400027ca:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400027ce:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400027d2:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400027d6:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400027da:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400027de:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400027e2:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400027e6:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400027ea:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400027ee:	movups xmm0,XMMWORD PTR [rdx+0x60]
   1400027f2:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400027f6:	add    rcx,r8
   1400027f9:	movups xmm1,XMMWORD PTR [rdx+0x70]
   1400027fd:	add    rdx,r8
   140002800:	movups XMMWORD PTR [rcx-0x10],xmm1
   140002804:	sub    rax,0x1
   140002808:	jne    0x1400027c0
   14000280a:	movups xmm0,XMMWORD PTR [rdx]
   14000280d:	movups XMMWORD PTR [rcx],xmm0
   140002810:	mov    rax,QWORD PTR [rdx+0x10]
   140002814:	mov    QWORD PTR [rcx+0x10],rax
   140002818:	add    rsp,0x28
   14000281c:	ret    
   14000281d:	mov    rax,QWORD PTR [rcx+0x18]
   140002821:	cmp    rax,QWORD PTR [rip+0x4d08]        # 0x140007530
   140002828:	jne    0x14000283f
   14000282a:	mov    rax,QWORD PTR [rcx+0x20]
   14000282e:	cmp    rax,QWORD PTR [rip+0x4d03]        # 0x140007538
   140002835:	jne    0x14000283f
   140002837:	mov    rdx,rcx
   14000283a:	call   0x140003064
   14000283f:	add    rsp,0x28
   140002843:	ret    
   140002844:	int3   
   140002845:	int3   
   140002846:	int3   
   140002847:	int3   
   140002848:	int3   
   140002849:	int3   
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	mov    QWORD PTR [rsp+0x10],rbx
   140002851:	push   rdi
   140002852:	sub    rsp,0x200
   140002859:	mov    rax,QWORD PTR [rip+0x77a0]        # 0x14000a000
   140002860:	xor    rax,rsp
   140002863:	mov    QWORD PTR [rsp+0x1f0],rax
   14000286b:	or     QWORD PTR [rsp+0x20],0xffffffffffffffff
   140002871:	mov    rdi,rcx
   140002874:	lea    rcx,[rsp+0x30]
   140002879:	xor    edx,edx
   14000287b:	mov    r8d,0x1c0
   140002881:	xor    ebx,ebx
   140002883:	call   0x140006002
   140002888:	lea    rax,[rip+0xfffffffffffffef1]        # 0x140002780
   14000288f:	mov    QWORD PTR [rsp+0x30],rdi
   140002894:	lea    rcx,[rsp+0x30]
   140002899:	mov    QWORD PTR [rsp+0x1d8],rax
   1400028a1:	mov    DWORD PTR [rsp+0x4c],0x10001000
   1400028a9:	call   QWORD PTR [rip+0x4771]        # 0x140007020
   1400028af:	mov    QWORD PTR [rsp+0x20],rax
   1400028b4:	cmp    rax,0xffffffffffffffff
   1400028b8:	jne    0x1400028d6
   1400028ba:	mov    rdx,rdi
   1400028bd:	mov    ecx,0x272b
   1400028c2:	call   0x1400014e4
   1400028c7:	call   QWORD PTR [rip+0x47cb]        # 0x140007098
   1400028cd:	mov    ecx,eax
   1400028cf:	call   0x14000239c
   1400028d4:	jmp    0x140002909
   1400028d6:	xor    r9d,r9d
   1400028d9:	lea    rcx,[rsp+0x20]
   1400028de:	xor    r8d,r8d
   1400028e1:	lea    edi,[r9+0x1]
   1400028e5:	mov    edx,edi
   1400028e7:	call   QWORD PTR [rip+0x473b]        # 0x140007028
   1400028ed:	test   eax,eax
   1400028ef:	je     0x140002907
   1400028f1:	mov    r8d,eax
   1400028f4:	lea    rdx,[rip+0x4d35]        # 0x140007630
   1400028fb:	mov    ecx,0x2728
   140002900:	call   0x1400014e4
   140002905:	jmp    0x140002909
   140002907:	mov    ebx,edi
   140002909:	mov    rcx,QWORD PTR [rsp+0x20]
   14000290e:	cmp    rcx,0xffffffffffffffff
   140002912:	je     0x14000291a
   140002914:	call   QWORD PTR [rip+0x46f6]        # 0x140007010
   14000291a:	mov    eax,ebx
   14000291c:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140002924:	xor    rcx,rsp
   140002927:	call   0x140005930
   14000292c:	mov    rbx,QWORD PTR [rsp+0x218]
   140002934:	add    rsp,0x200
   14000293b:	pop    rdi
   14000293c:	ret    
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	int3   
   140002941:	int3   
   140002942:	int3   
   140002943:	int3   
   140002944:	mov    QWORD PTR [rsp+0x8],rbx
   140002949:	mov    QWORD PTR [rsp+0x10],rsi
   14000294e:	push   rdi
   14000294f:	sub    rsp,0x20
   140002953:	xor    ebx,ebx
   140002955:	mov    rdi,rcx
   140002958:	test   rcx,rcx
   14000295b:	je     0x140002993
   14000295d:	call   QWORD PTR [rip+0x472d]        # 0x140007090
   140002963:	lea    rcx,[rbx-0x1]
   140002967:	lea    esi,[rax+0x1]
   14000296a:	lea    eax,[rbx+0x2]
   14000296d:	mul    rsi
   140002970:	cmovo  rax,rcx
   140002974:	mov    rcx,rax
   140002977:	call   0x140001660
   14000297c:	mov    rbx,rax
   14000297f:	test   rax,rax
   140002982:	je     0x140002993
   140002984:	lea    r8,[rsi+rsi*1]
   140002988:	mov    rdx,rdi
   14000298b:	mov    rcx,rax
   14000298e:	call   0x140005ff6
   140002993:	mov    rsi,QWORD PTR [rsp+0x38]
   140002998:	mov    rax,rbx
   14000299b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029a0:	add    rsp,0x20
   1400029a4:	pop    rdi
   1400029a5:	ret    
   1400029a6:	int3   
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	sub    rsp,0x28
   1400029b4:	cmp    ecx,0x2
   1400029b7:	ja     0x1400029c7
   1400029b9:	cmp    DWORD PTR [rip+0x12178],0x0        # 0x140014b38
   1400029c0:	je     0x1400029c7
   1400029c2:	call   0x140002568
   1400029c7:	xor    eax,eax
   1400029c9:	add    rsp,0x28
   1400029cd:	ret    
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	int3   
   1400029d1:	int3   
   1400029d2:	int3   
   1400029d3:	int3   
   1400029d4:	mov    rax,rsp
   1400029d7:	mov    QWORD PTR [rax+0x8],rbx
   1400029db:	mov    QWORD PTR [rax+0x10],rbp
   1400029df:	push   rsi
   1400029e0:	push   rdi
   1400029e1:	push   r14
   1400029e3:	sub    rsp,0x40
   1400029e7:	xor    ebx,ebx
   1400029e9:	mov    BYTE PTR [rax+0x18],0x9
   1400029ed:	mov    DWORD PTR [rax+0x20],ebx
   1400029f0:	mov    esi,r8d
   1400029f3:	mov    r14,rdx
   1400029f6:	mov    rbp,rcx
   1400029f9:	mov    edi,ebx
   1400029fb:	test   r8d,r8d
   1400029fe:	je     0x140002a28
   140002a00:	lea    r9,[rsp+0x78]
   140002a05:	mov    QWORD PTR [rsp+0x20],rbx
   140002a0a:	mov    r8d,0x1
   140002a10:	lea    rdx,[rsp+0x70]
   140002a15:	mov    rcx,rbp
   140002a18:	call   QWORD PTR [rip+0x4622]        # 0x140007040
   140002a1e:	test   eax,eax
   140002a20:	je     0x140002a8a
   140002a22:	inc    edi
   140002a24:	cmp    edi,esi
   140002a26:	jb     0x140002a00
   140002a28:	mov    rax,QWORD PTR [rip+0x12111]        # 0x140014b40
   140002a2f:	or     r9d,0xffffffff
   140002a33:	mov    QWORD PTR [rsp+0x38],rbx
   140002a38:	mov    r8,r14
   140002a3b:	mov    QWORD PTR [rsp+0x30],rbx
   140002a40:	xor    edx,edx
   140002a42:	mov    DWORD PTR [rsp+0x28],0x2800
   140002a4a:	mov    ecx,0xfde9
   140002a4f:	mov    QWORD PTR [rsp+0x20],rax
   140002a54:	call   QWORD PTR [rip+0x45ee]        # 0x140007048
   140002a5a:	test   eax,eax
   140002a5c:	je     0x140002a8a
   140002a5e:	cmp    eax,0x1
   140002a61:	jbe    0x140002a85
   140002a63:	mov    rdx,QWORD PTR [rip+0x120d6]        # 0x140014b40
   140002a6a:	lea    r8d,[rax-0x1]
   140002a6e:	lea    r9,[rsp+0x78]
   140002a73:	mov    QWORD PTR [rsp+0x20],rbx
   140002a78:	mov    rcx,rbp
   140002a7b:	call   QWORD PTR [rip+0x45bf]        # 0x140007040
   140002a81:	test   eax,eax
   140002a83:	je     0x140002a8a
   140002a85:	mov    ebx,0x1
   140002a8a:	mov    rbp,QWORD PTR [rsp+0x68]
   140002a8f:	mov    eax,ebx
   140002a91:	mov    rbx,QWORD PTR [rsp+0x60]
   140002a96:	add    rsp,0x40
   140002a9a:	pop    r14
   140002a9c:	pop    rdi
   140002a9d:	pop    rsi
   140002a9e:	ret    
   140002a9f:	int3   
   140002aa0:	int3   
   140002aa1:	int3   
   140002aa2:	int3   
   140002aa3:	int3   
   140002aa4:	int3   
   140002aa5:	int3   
   140002aa6:	int3   
   140002aa7:	int3   
   140002aa8:	mov    QWORD PTR [rsp+0x8],rbx
   140002aad:	push   rdi
   140002aae:	sub    rsp,0x30
   140002ab2:	and    DWORD PTR [rsp+0x58],0x0
   140002ab7:	mov    rdi,rcx
   140002aba:	call   0x1400029d4
   140002abf:	mov    ebx,eax
   140002ac1:	test   eax,eax
   140002ac3:	je     0x140002aec
   140002ac5:	and    QWORD PTR [rsp+0x20],0x0
   140002acb:	lea    r9,[rsp+0x58]
   140002ad0:	mov    r8d,0x2
   140002ad6:	lea    rdx,[rip+0x490b]        # 0x1400073e8
   140002add:	mov    rcx,rdi
   140002ae0:	call   QWORD PTR [rip+0x455a]        # 0x140007040
   140002ae6:	neg    eax
   140002ae8:	sbb    ecx,ecx
   140002aea:	and    ebx,ecx
   140002aec:	mov    eax,ebx
   140002aee:	mov    rbx,QWORD PTR [rsp+0x40]
   140002af3:	add    rsp,0x30
   140002af7:	pop    rdi
   140002af8:	ret    
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	mov    QWORD PTR [rsp+0x8],rbp
   140002b05:	mov    QWORD PTR [rsp+0x10],rsi
   140002b0a:	push   rdi
   140002b0b:	sub    rsp,0x20
   140002b0f:	mov    rdi,rcx
   140002b12:	mov    ebp,r9d
   140002b15:	xor    ecx,ecx
   140002b17:	mov    rsi,rdx
   140002b1a:	cmp    DWORD PTR [rdi+0x30],ecx
   140002b1d:	je     0x140002bfc
   140002b23:	mov    r10,QWORD PTR [rip+0x12026]        # 0x140014b50
   140002b2a:	mov    r11d,0x2800
   140002b30:	sub    r8,r10
   140002b33:	lea    rax,[r11+0x7fffd7fe]
   140002b3a:	test   rax,rax
   140002b3d:	je     0x140002b57
   140002b3f:	movzx  eax,WORD PTR [r8+r10*1]
   140002b44:	test   ax,ax
   140002b47:	je     0x140002b57
   140002b49:	mov    WORD PTR [r10],ax
   140002b4d:	add    r10,0x2
   140002b51:	sub    r11,0x1
   140002b55:	jne    0x140002b33
   140002b57:	test   r11,r11
   140002b5a:	jne    0x140002b60
   140002b5c:	sub    r10,0x2
   140002b60:	mov    WORD PTR [r10],cx
   140002b64:	cmp    QWORD PTR [rdi+0x138],rcx
   140002b6b:	je     0x140002bde
   140002b6d:	cmp    QWORD PTR [rsp+0x58],rcx
   140002b72:	je     0x140002bde
   140002b74:	cmp    QWORD PTR [rsp+0x50],rcx
   140002b79:	je     0x140002bde
   140002b7b:	mov    rdx,QWORD PTR [rip+0x11fce]        # 0x140014b50
   140002b82:	mov    r8d,r9d
   140002b85:	mov    rcx,rsi
   140002b88:	call   0x1400029d4
   140002b8d:	movabs rax,0x431bde82d7b634db
   140002b97:	lea    r8,[rip+0x4aca]        # 0x140007668
   140002b9e:	imul   QWORD PTR [rdi+0x138]
   140002ba5:	mov    rcx,rdx
   140002ba8:	xor    edx,edx
   140002baa:	sar    rcx,0x12
   140002bae:	mov    rax,rcx
   140002bb1:	shr    rax,0x3f
   140002bb5:	add    rcx,rax
   140002bb8:	mov    rax,QWORD PTR [rsp+0x58]
   140002bbd:	sub    rax,QWORD PTR [rsp+0x50]
   140002bc2:	div    rcx
   140002bc5:	mov    rcx,QWORD PTR [rip+0x11f84]        # 0x140014b50
   140002bcc:	mov    edx,0x2800
   140002bd1:	mov    r9,rax
   140002bd4:	call   0x140002218
   140002bd9:	xor    r8d,r8d
   140002bdc:	jmp    0x140002bed
   140002bde:	lea    r8,[rip+0x4a6b]        # 0x140007650
   140002be5:	call   0x140002188
   140002bea:	mov    r8d,ebp
   140002bed:	mov    rdx,QWORD PTR [rip+0x11f5c]        # 0x140014b50
   140002bf4:	mov    rcx,rsi
   140002bf7:	call   0x140002aa8
   140002bfc:	mov    rbp,QWORD PTR [rsp+0x30]
   140002c01:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c06:	add    rsp,0x20
   140002c0a:	pop    rdi
   140002c0b:	ret    
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	int3   
   140002c11:	int3   
   140002c12:	int3   
   140002c13:	int3   
   140002c14:	mov    rax,rsp
   140002c17:	mov    QWORD PTR [rax+0x8],rbx
   140002c1b:	mov    QWORD PTR [rax+0x10],rbp
   140002c1f:	mov    QWORD PTR [rax+0x18],rsi
   140002c23:	mov    QWORD PTR [rax+0x20],rdi
   140002c27:	push   r14
   140002c29:	sub    rsp,0x30
   140002c2d:	xor    ebx,ebx
   140002c2f:	mov    rsi,r9
   140002c32:	mov    ebp,r8d
   140002c35:	mov    r14d,edx
   140002c38:	mov    rdi,rcx
   140002c3b:	test   r8d,r8d
   140002c3e:	je     0x140002c57
   140002c40:	movzx  edx,WORD PTR [rcx+0x56]
   140002c44:	mov    rcx,QWORD PTR [rcx+0x60]
   140002c48:	sub    edx,0x4
   140002c4b:	add    rcx,0x4
   140002c4f:	call   0x1400022f4
   140002c54:	mov    rbx,rax
   140002c57:	test   r14d,r14d
   140002c5a:	je     0x140002cb5
   140002c5c:	movzx  edx,WORD PTR [rdi+0x28]
   140002c60:	mov    edi,0x2800
   140002c65:	mov    r8,QWORD PTR [rip+0x11edc]        # 0x140014b48
   140002c6c:	mov    r9d,edi
   140002c6f:	mov    rcx,QWORD PTR [rip+0xca32]        # 0x14000f6a8
   140002c76:	call   QWORD PTR [rip+0x448c]        # 0x140007108
   140002c7c:	test   ebp,ebp
   140002c7e:	je     0x140002ca2
   140002c80:	mov    r9,rbx
   140002c83:	mov    r8,QWORD PTR [rip+0x11ebe]        # 0x140014b48
   140002c8a:	mov    rdx,rdi
   140002c8d:	mov    rcx,QWORD PTR [rip+0x11ebc]        # 0x140014b50
   140002c94:	call   0x140002218
   140002c99:	mov    rcx,QWORD PTR [rip+0x11eb0]        # 0x140014b50
   140002ca0:	jmp    0x140002cb8
   140002ca2:	test   rsi,rsi
   140002ca5:	je     0x140002cac
   140002ca7:	mov    r9,rsi
   140002caa:	jmp    0x140002c83
   140002cac:	mov    rcx,QWORD PTR [rip+0x11e95]        # 0x140014b48
   140002cb3:	jmp    0x140002cb8
   140002cb5:	mov    rcx,rbx
   140002cb8:	call   0x140002944
   140002cbd:	mov    r8,QWORD PTR [rsp+0x60]
   140002cc2:	mov    r9,rax
   140002cc5:	mov    QWORD PTR [rsp+0x20],rax
   140002cca:	mov    rdx,QWORD PTR [r8+0x8]
   140002cce:	test   rdx,rdx
   140002cd1:	jne    0x140002cd7
   140002cd3:	xor    ecx,ecx
   140002cd5:	jmp    0x140002ce2
   140002cd7:	mov    rcx,QWORD PTR [r8+0x10]
   140002cdb:	sub    rcx,rdx
   140002cde:	sar    rcx,0x3
   140002ce2:	test   rdx,rdx
   140002ce5:	je     0x140002d08
   140002ce7:	mov    rax,QWORD PTR [r8+0x18]
   140002ceb:	sub    rax,rdx
   140002cee:	sar    rax,0x3
   140002cf2:	cmp    rcx,rax
   140002cf5:	jae    0x140002d08
   140002cf7:	mov    rax,QWORD PTR [r8+0x10]
   140002cfb:	lea    rcx,[rax+0x8]
   140002cff:	mov    QWORD PTR [rax],r9
   140002d02:	mov    QWORD PTR [r8+0x10],rcx
   140002d06:	jmp    0x140002d19
   140002d08:	mov    rdx,QWORD PTR [r8+0x10]
   140002d0c:	lea    r9,[rsp+0x20]
   140002d11:	mov    rcx,r8
   140002d14:	call   0x140004fd8
   140002d19:	test   rbx,rbx
   140002d1c:	je     0x140002d26
   140002d1e:	mov    rcx,rbx
   140002d21:	call   0x140002364
   140002d26:	mov    rbx,QWORD PTR [rsp+0x40]
   140002d2b:	mov    rbp,QWORD PTR [rsp+0x48]
   140002d30:	mov    rsi,QWORD PTR [rsp+0x50]
   140002d35:	mov    rdi,QWORD PTR [rsp+0x58]
   140002d3a:	add    rsp,0x30
   140002d3e:	pop    r14
   140002d40:	ret    
   140002d41:	int3   
   140002d42:	int3   
   140002d43:	int3   
   140002d44:	int3   
   140002d45:	int3   
   140002d46:	int3   
   140002d47:	int3   
   140002d48:	mov    QWORD PTR [rsp+0x10],rbx
   140002d4d:	mov    QWORD PTR [rsp+0x18],rbp
   140002d52:	mov    QWORD PTR [rsp+0x20],rsi
   140002d57:	push   rdi
   140002d58:	push   r12
   140002d5a:	push   r13
   140002d5c:	push   r14
   140002d5e:	push   r15
   140002d60:	sub    rsp,0x40
   140002d64:	xor    eax,eax
   140002d66:	mov    r14d,edx
   140002d69:	movzx  edx,WORD PTR [rcx+0x28]
   140002d6d:	mov    r12d,eax
   140002d70:	mov    edi,eax
   140002d72:	mov    ebx,eax
   140002d74:	mov    rax,QWORD PTR [rcx+0x60]
   140002d78:	mov    rsi,r9
   140002d7b:	mov    r13d,r8d
   140002d7e:	mov    rbp,rcx
   140002d81:	mov    r8,QWORD PTR [rip+0x11dc0]        # 0x140014b48
   140002d88:	mov    r9d,0x2800
   140002d8e:	mov    rcx,QWORD PTR [rip+0xc913]        # 0x14000f6a8
   140002d95:	mov    r15d,DWORD PTR [rax+0x4]
   140002d99:	call   QWORD PTR [rip+0x4369]        # 0x140007108
   140002d9f:	test   r14d,r14d
   140002da2:	je     0x140002dc3
   140002da4:	movzx  edx,WORD PTR [rbp+0x56]
   140002da8:	mov    rcx,QWORD PTR [rbp+0x60]
   140002dac:	sub    edx,0x8
   140002daf:	add    rcx,0x8
   140002db3:	call   0x1400022f4
   140002db8:	mov    r12,rax
   140002dbb:	mov    rdi,rax
   140002dbe:	dec    r14d
   140002dc1:	jmp    0x140002dde
   140002dc3:	mov    r8,QWORD PTR [rip+0x11d7e]        # 0x140014b48
   140002dca:	mov    r9d,r15d
   140002dcd:	mov    rcx,QWORD PTR [rip+0x11d7c]        # 0x140014b50
   140002dd4:	mov    edx,0x2800
   140002dd9:	call   0x140002218
   140002dde:	or     rbp,0xffffffffffffffff
   140002de2:	xor    ecx,ecx
   140002de4:	test   r14d,r14d
   140002de7:	je     0x140002e02
   140002de9:	mov    rax,rbp
   140002dec:	inc    rax
   140002def:	cmp    WORD PTR [rdi+rax*2],cx
   140002df3:	jne    0x140002dec
   140002df5:	lea    rbx,[rax+0x1]
   140002df9:	dec    r14d
   140002dfc:	lea    rbx,[rdi+rbx*2]
   140002e00:	jmp    0x140002e24
   140002e02:	mov    r8,QWORD PTR [rip+0x11d3f]        # 0x140014b48
   140002e09:	mov    r9d,r15d
   140002e0c:	mov    rcx,QWORD PTR [rip+0x11d3d]        # 0x140014b50
   140002e13:	mov    edx,0x2800
   140002e18:	mov    QWORD PTR [rsp+0x20],rdi
   140002e1d:	call   0x140002218
   140002e22:	xor    ecx,ecx
   140002e24:	test   r14d,r14d
   140002e27:	je     0x140002e7c
   140002e29:	inc    rbp
   140002e2c:	cmp    WORD PTR [rbx+rbp*2],cx
   140002e30:	jne    0x140002e29
   140002e32:	mov    r8,QWORD PTR [rip+0x11d0f]        # 0x140014b48
   140002e39:	lea    rax,[rbp+0x1]
   140002e3d:	mov    rcx,QWORD PTR [rip+0x11d0c]        # 0x140014b50
   140002e44:	lea    rax,[rbx+rax*2]
   140002e48:	mov    r9d,r15d
   140002e4b:	mov    edx,0x2800
   140002e50:	test   r13d,r13d
   140002e53:	jne    0x140002e66
   140002e55:	mov    QWORD PTR [rsp+0x30],rax
   140002e5a:	mov    QWORD PTR [rsp+0x28],rbx
   140002e5f:	mov    QWORD PTR [rsp+0x20],rdi
   140002e64:	jmp    0x140002e75
   140002e66:	mov    QWORD PTR [rsp+0x30],rdi
   140002e6b:	mov    QWORD PTR [rsp+0x28],rbx
   140002e70:	mov    QWORD PTR [rsp+0x20],rax
   140002e75:	call   0x140002218
   140002e7a:	jmp    0x140002eb2
   140002e7c:	mov    r8,QWORD PTR [rip+0x11cc5]        # 0x140014b48
   140002e83:	mov    r9d,r15d
   140002e86:	mov    rcx,QWORD PTR [rip+0x11cc3]        # 0x140014b50
   140002e8d:	mov    edx,0x2800
   140002e92:	test   r13d,r13d
   140002e95:	jne    0x140002ea3
   140002e97:	mov    QWORD PTR [rsp+0x28],rbx
   140002e9c:	mov    QWORD PTR [rsp+0x20],rdi
   140002ea1:	jmp    0x140002ead
   140002ea3:	mov    QWORD PTR [rsp+0x28],rdi
   140002ea8:	mov    QWORD PTR [rsp+0x20],rbx
   140002ead:	call   0x140002218
   140002eb2:	mov    eax,DWORD PTR [rsi+0x58]
   140002eb5:	xor    ebx,ebx
   140002eb7:	test   eax,eax
   140002eb9:	jne    0x140002f23
   140002ebb:	mov    rcx,QWORD PTR [rip+0x11c8e]        # 0x140014b50
   140002ec2:	call   0x140002944
   140002ec7:	lea    r8,[rsi+0xc0]
   140002ece:	mov    QWORD PTR [rsp+0x70],rax
   140002ed3:	mov    rdx,QWORD PTR [r8+0x8]
   140002ed7:	mov    r9,rax
   140002eda:	test   rdx,rdx
   140002edd:	jne    0x140002ee3
   140002edf:	mov    ecx,ebx
   140002ee1:	jmp    0x140002eee
   140002ee3:	mov    rcx,QWORD PTR [r8+0x10]
   140002ee7:	sub    rcx,rdx
   140002eea:	sar    rcx,0x3
   140002eee:	test   rdx,rdx
   140002ef1:	je     0x140002f17
   140002ef3:	mov    rax,QWORD PTR [r8+0x18]
   140002ef7:	sub    rax,rdx
   140002efa:	sar    rax,0x3
   140002efe:	cmp    rcx,rax
   140002f01:	jae    0x140002f17
   140002f03:	mov    rax,QWORD PTR [r8+0x10]
   140002f07:	lea    rcx,[rax+0x8]
   140002f0b:	mov    QWORD PTR [rax],r9
   140002f0e:	mov    QWORD PTR [r8+0x10],rcx
   140002f12:	jmp    0x140003033
   140002f17:	mov    rdx,QWORD PTR [r8+0x10]
   140002f1b:	mov    rcx,r8
   140002f1e:	jmp    0x140003029
   140002f23:	cmp    eax,0x3
   140002f26:	jne    0x140002fbf
   140002f2c:	mov    rax,QWORD PTR [rsi+0x20]
   140002f30:	test   rax,rax
   140002f33:	je     0x140003033
   140002f39:	mov    rax,QWORD PTR [rax+0x80]
   140002f40:	test   rax,rax
   140002f43:	je     0x140003033
   140002f49:	cmp    QWORD PTR [rax+0x18],rbx
   140002f4d:	je     0x140003033
   140002f53:	mov    rcx,QWORD PTR [rip+0x11bf6]        # 0x140014b50
   140002f5a:	call   0x140002944
   140002f5f:	mov    rcx,QWORD PTR [rsi+0x20]
   140002f63:	mov    r9,rax
   140002f66:	mov    QWORD PTR [rsp+0x70],rax
   140002f6b:	mov    rdx,QWORD PTR [rcx+0x80]
   140002f72:	mov    r8,QWORD PTR [rdx+0x18]
   140002f76:	mov    rdx,QWORD PTR [r8+0x30]
   140002f7a:	test   rdx,rdx
   140002f7d:	jne    0x140002f84
   140002f7f:	mov    rcx,rbx
   140002f82:	jmp    0x140002f8f
   140002f84:	mov    rcx,QWORD PTR [r8+0x38]
   140002f88:	sub    rcx,rdx
   140002f8b:	sar    rcx,0x3
   140002f8f:	test   rdx,rdx
   140002f92:	je     0x140002fb5
   140002f94:	mov    rax,QWORD PTR [r8+0x40]
   140002f98:	sub    rax,rdx
   140002f9b:	sar    rax,0x3
   140002f9f:	cmp    rcx,rax
   140002fa2:	jae    0x140002fb5
   140002fa4:	mov    rax,QWORD PTR [r8+0x38]
   140002fa8:	lea    rcx,[rax+0x8]
   140002fac:	mov    QWORD PTR [rax],r9
   140002faf:	mov    QWORD PTR [r8+0x38],rcx
   140002fb3:	jmp    0x140003033
   140002fb5:	mov    rdx,QWORD PTR [r8+0x38]
   140002fb9:	lea    rcx,[r8+0x28]
   140002fbd:	jmp    0x140003029
   140002fbf:	cmp    eax,0x1
   140002fc2:	jne    0x140003033
   140002fc4:	cmp    QWORD PTR [rsi+0x20],rbx
   140002fc8:	je     0x140003033
   140002fca:	mov    rcx,QWORD PTR [rip+0x11b7f]        # 0x140014b50
   140002fd1:	call   0x140002944
   140002fd6:	mov    r8,QWORD PTR [rsi+0x20]
   140002fda:	mov    r9,rax
   140002fdd:	mov    QWORD PTR [rsp+0x70],rax
   140002fe2:	mov    rdx,QWORD PTR [r8+0x50]
   140002fe6:	test   rdx,rdx
   140002fe9:	jne    0x140002ff0
   140002feb:	mov    rcx,rbx
   140002fee:	jmp    0x140002ffb
   140002ff0:	mov    rcx,QWORD PTR [r8+0x58]
   140002ff4:	sub    rcx,rdx
   140002ff7:	sar    rcx,0x3
   140002ffb:	test   rdx,rdx
   140002ffe:	je     0x140003021
   140003000:	mov    rax,QWORD PTR [r8+0x60]
   140003004:	sub    rax,rdx
   140003007:	sar    rax,0x3
   14000300b:	cmp    rcx,rax
   14000300e:	jae    0x140003021
   140003010:	mov    rax,QWORD PTR [r8+0x58]
   140003014:	lea    rcx,[rax+0x8]
   140003018:	mov    QWORD PTR [rax],r9
   14000301b:	mov    QWORD PTR [r8+0x58],rcx
   14000301f:	jmp    0x140003033
   140003021:	mov    rdx,QWORD PTR [r8+0x58]
   140003025:	lea    rcx,[r8+0x48]
   140003029:	lea    r9,[rsp+0x70]
   14000302e:	call   0x140004fd8
   140003033:	test   r12,r12
   140003036:	je     0x140003040
   140003038:	mov    rcx,r12
   14000303b:	call   0x140002364
   140003040:	lea    r11,[rsp+0x40]
   140003045:	mov    rbx,QWORD PTR [r11+0x38]
   140003049:	mov    rbp,QWORD PTR [r11+0x40]
   14000304d:	mov    rsi,QWORD PTR [r11+0x48]
   140003051:	mov    rsp,r11
   140003054:	pop    r15
   140003056:	pop    r14
   140003058:	pop    r13
   14000305a:	pop    r12
   14000305c:	pop    rdi
   14000305d:	ret    
   14000305e:	int3   
   14000305f:	int3   
   140003060:	int3   
   140003061:	int3   
   140003062:	int3   
   140003063:	int3   
   140003064:	mov    rax,rsp
   140003067:	mov    QWORD PTR [rax+0x8],rcx
   14000306b:	push   rbp
   14000306c:	push   rsi
   14000306d:	push   rdi
   14000306e:	push   r12
   140003070:	push   r13
   140003072:	push   r14
   140003074:	push   r15
   140003076:	mov    rbp,rsp
   140003079:	sub    rsp,0x40
   14000307d:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140003085:	mov    QWORD PTR [rax+0x20],rbx
   140003089:	mov    r14,rdx
   14000308c:	mov    rax,QWORD PTR [rdx+0x60]
   140003090:	mov    r9d,DWORD PTR [rdx+0x8]
   140003094:	mov    r8d,DWORD PTR [rdx+0xc]
   140003098:	mov    edx,DWORD PTR [rax]
   14000309a:	call   0x140004180
   14000309f:	mov    rsi,rax
   1400030a2:	xor    r13d,r13d
   1400030a5:	test   rax,rax
   1400030a8:	je     0x140004161
   1400030ae:	movzx  ecx,WORD PTR [r14+0x28]
   1400030b3:	mov    ebx,0xc8
   1400030b8:	lea    r12d,[r13+0x1]
   1400030bc:	cmp    ecx,ebx
   1400030be:	jg     0x140003ac4
   1400030c4:	je     0x1400039c1
   1400030ca:	cmp    ecx,0x79
   1400030cd:	jg     0x140003912
   1400030d3:	je     0x1400038fa
   1400030d9:	cmp    ecx,0x71
   1400030dc:	jg     0x14000377b
   1400030e2:	je     0x140003745
   1400030e8:	cmp    ecx,0x64
   1400030eb:	je     0x140003738
   1400030f1:	cmp    ecx,0x65
   1400030f4:	je     0x14000372b
   1400030fa:	cmp    ecx,0x66
   1400030fd:	je     0x1400032b7
   140003103:	jle    0x14000415e
   140003109:	cmp    ecx,0x68
   14000310c:	jle    0x140003283
   140003112:	cmp    ecx,0x69
   140003115:	je     0x140003272
   14000311b:	cmp    ecx,0x6e
   14000311e:	je     0x140003147
   140003120:	cmp    ecx,0x6f
   140003123:	jne    0x14000415e
   140003129:	mov    rcx,QWORD PTR [rax+0x20]
   14000312d:	test   rcx,rcx
   140003130:	je     0x14000415e
   140003136:	mov    rax,QWORD PTR [r14+0x10]
   14000313a:	mov    QWORD PTR [rcx+0x10],rax
   14000313e:	mov    QWORD PTR [rsi+0x20],r13
   140003142:	jmp    0x14000415e
   140003147:	movzx  edx,WORD PTR [r14+0x56]
   14000314c:	sub    edx,0x4
   14000314f:	mov    rcx,QWORD PTR [r14+0x60]
   140003153:	add    rcx,0x4
   140003157:	call   0x1400022f4
   14000315c:	mov    rdi,rax
   14000315f:	mov    DWORD PTR [rsi+0x58],r12d
   140003163:	mov    rcx,rbx
   140003166:	call   0x140001660
   14000316b:	mov    rdx,rax
   14000316e:	mov    QWORD PTR [rbp+0x40],rax
   140003172:	test   rax,rax
   140003175:	je     0x1400031da
   140003177:	mov    BYTE PTR [rax],r13b
   14000317a:	lea    rcx,[rax+0x8]
   14000317e:	mov    QWORD PTR [rbp+0x48],rcx
   140003182:	mov    QWORD PTR [rcx+0x28],r13
   140003186:	mov    QWORD PTR [rcx+0x30],r13
   14000318a:	mov    QWORD PTR [rcx+0x38],r13
   14000318e:	mov    QWORD PTR [rcx+0x48],r13
   140003192:	mov    QWORD PTR [rcx+0x50],r13
   140003196:	mov    QWORD PTR [rcx+0x58],r13
   14000319a:	mov    QWORD PTR [rcx+0x8],r13
   14000319e:	mov    QWORD PTR [rcx],r13
   1400031a1:	mov    QWORD PTR [rcx+0x10],r13
   1400031a5:	mov    QWORD PTR [rcx+0x18],r13
   1400031a9:	add    rax,0x68
   1400031ad:	mov    QWORD PTR [rbp+0x48],rax
   1400031b1:	mov    QWORD PTR [rax+0x28],r13
   1400031b5:	mov    QWORD PTR [rax+0x30],r13
   1400031b9:	mov    QWORD PTR [rax+0x38],r13
   1400031bd:	mov    QWORD PTR [rax+0x48],r13
   1400031c1:	mov    QWORD PTR [rax+0x50],r13
   1400031c5:	mov    QWORD PTR [rax+0x58],r13
   1400031c9:	mov    QWORD PTR [rax+0x8],r13
   1400031cd:	mov    QWORD PTR [rax],r13
   1400031d0:	mov    QWORD PTR [rax+0x10],r13
   1400031d4:	mov    QWORD PTR [rax+0x18],r13
   1400031d8:	jmp    0x1400031dd
   1400031da:	mov    rdx,r13
   1400031dd:	lea    rbx,[rsi+0x20]
   1400031e1:	mov    QWORD PTR [rbx],rdx
   1400031e4:	test   rdx,rdx
   1400031e7:	je     0x140003265
   1400031e9:	mov    BYTE PTR [rdx],r12b
   1400031ec:	mov    rcx,QWORD PTR [rbx]
   1400031ef:	mov    rax,QWORD PTR [r14+0x10]
   1400031f3:	mov    QWORD PTR [rcx+0x8],rax
   1400031f7:	mov    rcx,rdi
   1400031fa:	call   0x140002944
   1400031ff:	mov    rcx,QWORD PTR [rbx]
   140003202:	mov    QWORD PTR [rcx+0x18],rax
   140003206:	mov    rax,QWORD PTR [rbx]
   140003209:	mov    QWORD PTR [rax+0x20],r13
   14000320d:	add    rsi,0xe0
   140003214:	mov    rdx,QWORD PTR [rsi+0x8]
   140003218:	test   rdx,rdx
   14000321b:	jne    0x140003222
   14000321d:	mov    rcx,r13
   140003220:	jmp    0x14000322d
   140003222:	mov    rcx,QWORD PTR [rsi+0x10]
   140003226:	sub    rcx,rdx
   140003229:	sar    rcx,0x3
   14000322d:	test   rdx,rdx
   140003230:	je     0x140003256
   140003232:	mov    rax,QWORD PTR [rsi+0x18]
   140003236:	sub    rax,rdx
   140003239:	sar    rax,0x3
   14000323d:	cmp    rcx,rax
   140003240:	jae    0x140003256
   140003242:	mov    rcx,QWORD PTR [rsi+0x10]
   140003246:	lea    rdx,[rcx+0x8]
   14000324a:	mov    rax,QWORD PTR [rbx]
   14000324d:	mov    QWORD PTR [rcx],rax
   140003250:	mov    QWORD PTR [rsi+0x10],rdx
   140003254:	jmp    0x140003265
   140003256:	mov    r9,rbx
   140003259:	mov    rdx,QWORD PTR [rsi+0x10]
   14000325d:	mov    rcx,rsi
   140003260:	call   0x140004fd8
   140003265:	mov    rcx,rdi
   140003268:	call   0x140002364
   14000326d:	jmp    0x14000415e
   140003272:	add    rax,0x60
   140003276:	mov    QWORD PTR [rsp+0x20],rax
   14000327b:	xor    r9d,r9d
   14000327e:	jmp    0x140004150
   140003283:	mov    r9d,0x2800
   140003289:	mov    r8,QWORD PTR [rip+0x118b8]        # 0x140014b48
   140003290:	mov    edx,ecx
   140003292:	mov    rcx,QWORD PTR [rip+0xc40f]        # 0x14000f6a8
   140003299:	call   QWORD PTR [rip+0x3e69]        # 0x140007108
   14000329f:	mov    rcx,QWORD PTR [rip+0x118a2]        # 0x140014b48
   1400032a6:	call   0x140002944
   1400032ab:	mov    QWORD PTR [rsi+0x120],rax
   1400032b2:	jmp    0x14000415e
   1400032b7:	movzx  eax,WORD PTR [r14+0x56]
   1400032bc:	lea    r12,[rax-0xa]
   1400032c0:	mov    rcx,QWORD PTR [r14+0x60]
   1400032c4:	mov    ebx,DWORD PTR [rcx+0x4]
   1400032c7:	movzx  edi,WORD PTR [rcx+0x8]
   1400032cb:	lea    edx,[rax-0xa]
   1400032ce:	add    rcx,0xa
   1400032d2:	call   0x1400022f4
   1400032d7:	mov    r15,rax
   1400032da:	mov    QWORD PTR [rbp+0x40],rax
   1400032de:	mov    DWORD PTR [rsi+0x28],ebx
   1400032e1:	mov    WORD PTR [rsi+0x2c],di
   1400032e5:	cmp    WORD PTR [rax],r13w
   1400032e9:	je     0x1400032f9
   1400032eb:	mov    rcx,rax
   1400032ee:	call   0x140002944
   1400032f3:	mov    QWORD PTR [rsi+0x30],rax
   1400032f7:	jmp    0x1400032fd
   1400032f9:	mov    QWORD PTR [rsi+0x30],r13
   1400032fd:	or     rdi,0xffffffffffffffff
   140003301:	mov    rcx,rdi
   140003304:	inc    rcx
   140003307:	cmp    WORD PTR [r15+rcx*2],r13w
   14000330c:	jne    0x140003304
   14000330e:	add    rcx,rcx
   140003311:	mov    rdx,0xfffffffffffffffe
   140003318:	mov    rax,rdx
   14000331b:	sub    rax,rcx
   14000331e:	add    r12,rax
   140003321:	mov    rax,rdi
   140003324:	inc    rax
   140003327:	cmp    WORD PTR [r15+rax*2],r13w
   14000332c:	jne    0x140003324
   14000332e:	lea    r13,[r15+rax*2]
   140003332:	xor    r9d,r9d
   140003335:	cmp    WORD PTR [r13+0x2],r9w
   14000333a:	je     0x14000360c
   140003340:	lea    rcx,[r13+0x2]
   140003344:	call   0x140002944
   140003349:	mov    QWORD PTR [rsi+0x38],rax
   14000334d:	mov    DWORD PTR [rsi+0x58],0x2
   140003354:	mov    ecx,0xc8
   140003359:	call   0x140001660
   14000335e:	mov    rdx,rax
   140003361:	mov    QWORD PTR [rbp+0x48],rax
   140003365:	xor    r9d,r9d
   140003368:	test   rax,rax
   14000336b:	je     0x1400033d0
   14000336d:	mov    BYTE PTR [rax],r9b
   140003370:	lea    rcx,[rax+0x8]
   140003374:	mov    QWORD PTR [rbp+0x50],rcx
   140003378:	mov    QWORD PTR [rcx+0x28],r9
   14000337c:	mov    QWORD PTR [rcx+0x30],r9
   140003380:	mov    QWORD PTR [rcx+0x38],r9
   140003384:	mov    QWORD PTR [rcx+0x48],r9
   140003388:	mov    QWORD PTR [rcx+0x50],r9
   14000338c:	mov    QWORD PTR [rcx+0x58],r9
   140003390:	mov    QWORD PTR [rcx+0x8],r9
   140003394:	mov    QWORD PTR [rcx],r9
   140003397:	mov    QWORD PTR [rcx+0x10],r9
   14000339b:	mov    QWORD PTR [rcx+0x18],r9
   14000339f:	add    rax,0x68
   1400033a3:	mov    QWORD PTR [rbp+0x50],rax
   1400033a7:	mov    QWORD PTR [rax+0x28],r9
   1400033ab:	mov    QWORD PTR [rax+0x30],r9
   1400033af:	mov    QWORD PTR [rax+0x38],r9
   1400033b3:	mov    QWORD PTR [rax+0x48],r9
   1400033b7:	mov    QWORD PTR [rax+0x50],r9
   1400033bb:	mov    QWORD PTR [rax+0x58],r9
   1400033bf:	mov    QWORD PTR [rax+0x8],r9
   1400033c3:	mov    QWORD PTR [rax],r9
   1400033c6:	mov    QWORD PTR [rax+0x10],r9
   1400033ca:	mov    QWORD PTR [rax+0x18],r9
   1400033ce:	jmp    0x1400033d3
   1400033d0:	mov    rdx,r9
   1400033d3:	lea    r15,[rsi+0x20]
   1400033d7:	mov    QWORD PTR [r15],rdx
   1400033da:	test   rdx,rdx
   1400033dd:	je     0x140003612
   1400033e3:	mov    BYTE PTR [rdx],r9b
   1400033e6:	mov    rcx,QWORD PTR [r15]
   1400033e9:	mov    rax,QWORD PTR [r14+0x10]
   1400033ed:	mov    QWORD PTR [rcx+0x68],rax
   1400033f1:	lea    rcx,[r13+0x2]
   1400033f5:	call   0x140002944
   1400033fa:	mov    rcx,QWORD PTR [r15]
   1400033fd:	mov    QWORD PTR [rcx+0x78],rax
   140003401:	lea    r8,[rsi+0xe0]
   140003408:	mov    rdx,QWORD PTR [r8+0x8]
   14000340c:	xor    r9d,r9d
   14000340f:	test   rdx,rdx
   140003412:	jne    0x140003419
   140003414:	mov    ecx,r9d
   140003417:	jmp    0x140003424
   140003419:	mov    rcx,QWORD PTR [r8+0x10]
   14000341d:	sub    rcx,rdx
   140003420:	sar    rcx,0x3
   140003424:	test   rdx,rdx
   140003427:	je     0x14000344d
   140003429:	mov    rax,QWORD PTR [r8+0x18]
   14000342d:	sub    rax,rdx
   140003430:	sar    rax,0x3
   140003434:	cmp    rcx,rax
   140003437:	jae    0x14000344d
   140003439:	mov    rcx,QWORD PTR [r8+0x10]
   14000343d:	lea    rdx,[rcx+0x8]
   140003441:	mov    rax,QWORD PTR [r15]
   140003444:	mov    QWORD PTR [rcx],rax
   140003447:	mov    QWORD PTR [r8+0x10],rdx
   14000344b:	jmp    0x14000345c
   14000344d:	mov    r9,r15
   140003450:	mov    rdx,QWORD PTR [r8+0x10]
   140003454:	mov    rcx,r8
   140003457:	call   0x140004fd8
   14000345c:	mov    ecx,0x40
   140003461:	call   0x140001660
   140003466:	mov    rbx,rax
   140003469:	mov    QWORD PTR [rbp+0x48],rax
   14000346d:	xor    r9d,r9d
   140003470:	test   rax,rax
   140003473:	je     0x140003492
   140003475:	mov    QWORD PTR [rax+0x28],r9
   140003479:	mov    QWORD PTR [rax+0x30],r9
   14000347d:	mov    QWORD PTR [rax+0x38],r9
   140003481:	mov    QWORD PTR [rax+0x8],r9
   140003485:	mov    QWORD PTR [rax],r9
   140003488:	mov    QWORD PTR [rax+0x10],r9
   14000348c:	mov    QWORD PTR [rax+0x18],r9
   140003490:	jmp    0x140003495
   140003492:	mov    rbx,r9
   140003495:	mov    QWORD PTR [rbp+0x48],rbx
   140003499:	test   rbx,rbx
   14000349c:	je     0x140003612
   1400034a2:	mov    rax,QWORD PTR [r14+0x10]
   1400034a6:	mov    QWORD PTR [rbx],rax
   1400034a9:	lea    rcx,[rip+0x4228]        # 0x1400076d8
   1400034b0:	call   0x140002944
   1400034b5:	mov    QWORD PTR [rbx+0x10],rax
   1400034b9:	xor    r9d,r9d
   1400034bc:	mov    QWORD PTR [rbx+0x18],r9
   1400034c0:	mov    rax,QWORD PTR [r15]
   1400034c3:	mov    QWORD PTR [rax+0x80],rbx
   1400034ca:	mov    r8,QWORD PTR [r15]
   1400034cd:	add    r8,0x88
   1400034d4:	mov    rdx,QWORD PTR [r8+0x8]
   1400034d8:	test   rdx,rdx
   1400034db:	jne    0x1400034e2
   1400034dd:	mov    ecx,r9d
   1400034e0:	jmp    0x1400034ed
   1400034e2:	mov    rcx,QWORD PTR [r8+0x10]
   1400034e6:	sub    rcx,rdx
   1400034e9:	sar    rcx,0x3
   1400034ed:	test   rdx,rdx
   1400034f0:	je     0x140003513
   1400034f2:	mov    rax,QWORD PTR [r8+0x18]
   1400034f6:	sub    rax,rdx
   1400034f9:	sar    rax,0x3
   1400034fd:	cmp    rcx,rax
   140003500:	jae    0x140003513
   140003502:	mov    rax,QWORD PTR [r8+0x10]
   140003506:	lea    rcx,[rax+0x8]
   14000350a:	mov    QWORD PTR [rax],rbx
   14000350d:	mov    QWORD PTR [r8+0x10],rcx
   140003511:	jmp    0x140003523
   140003513:	lea    r9,[rbp+0x48]
   140003517:	mov    rdx,QWORD PTR [r8+0x10]
   14000351b:	mov    rcx,r8
   14000351e:	call   0x140004fd8
   140003523:	mov    ecx,0x78
   140003528:	call   0x140001660
   14000352d:	mov    rbx,rax
   140003530:	mov    QWORD PTR [rbp+0x48],rax
   140003534:	xor    r9d,r9d
   140003537:	test   rax,rax
   14000353a:	je     0x140003571
   14000353c:	mov    QWORD PTR [rax+0x30],r9
   140003540:	mov    QWORD PTR [rax+0x38],r9
   140003544:	mov    QWORD PTR [rax+0x40],r9
   140003548:	mov    QWORD PTR [rax+0x60],r9
   14000354c:	mov    QWORD PTR [rax+0x68],r9
   140003550:	mov    QWORD PTR [rax+0x70],r9
   140003554:	mov    QWORD PTR [rax+0x50],r9
   140003558:	mov    QWORD PTR [rax+0x48],r9
   14000355c:	mov    QWORD PTR [rax+0x20],r9
   140003560:	mov    QWORD PTR [rax+0x18],r9
   140003564:	mov    QWORD PTR [rax+0x8],r9
   140003568:	mov    QWORD PTR [rax],r9
   14000356b:	mov    QWORD PTR [rax+0x10],r9
   14000356f:	jmp    0x140003574
   140003571:	mov    rbx,r9
   140003574:	mov    QWORD PTR [rbp+0x48],rbx
   140003578:	test   rbx,rbx
   14000357b:	je     0x140003612
   140003581:	mov    QWORD PTR [rbx+0x10],r9
   140003585:	mov    rax,QWORD PTR [r14+0x10]
   140003589:	mov    QWORD PTR [rbx],rax
   14000358c:	lea    rcx,[rip+0x4145]        # 0x1400076d8
   140003593:	call   0x140002944
   140003598:	mov    QWORD PTR [rbx+0x10],rax
   14000359c:	mov    rax,QWORD PTR [r15]
   14000359f:	mov    rcx,QWORD PTR [rax+0x80]
   1400035a6:	mov    QWORD PTR [rcx+0x18],rbx
   1400035aa:	mov    rax,QWORD PTR [r15]
   1400035ad:	mov    r8,QWORD PTR [rax+0x80]
   1400035b4:	mov    rdx,QWORD PTR [r8+0x28]
   1400035b8:	xor    r9d,r9d
   1400035bb:	test   rdx,rdx
   1400035be:	jne    0x1400035c5
   1400035c0:	mov    ecx,r9d
   1400035c3:	jmp    0x1400035d0
   1400035c5:	mov    rcx,QWORD PTR [r8+0x30]
   1400035c9:	sub    rcx,rdx
   1400035cc:	sar    rcx,0x3
   1400035d0:	test   rdx,rdx
   1400035d3:	je     0x1400035f6
   1400035d5:	mov    rax,QWORD PTR [r8+0x38]
   1400035d9:	sub    rax,rdx
   1400035dc:	sar    rax,0x3
   1400035e0:	cmp    rcx,rax
   1400035e3:	jae    0x1400035f6
   1400035e5:	mov    rax,QWORD PTR [r8+0x30]
   1400035e9:	lea    rcx,[rax+0x8]
   1400035ed:	mov    QWORD PTR [rax],rbx
   1400035f0:	mov    QWORD PTR [r8+0x30],rcx
   1400035f4:	jmp    0x140003612
   1400035f6:	lea    r9,[rbp+0x48]
   1400035fa:	mov    rdx,QWORD PTR [r8+0x30]
   1400035fe:	lea    rcx,[r8+0x20]
   140003602:	call   0x140004fd8
   140003607:	xor    r9d,r9d
   14000360a:	jmp    0x140003612
   14000360c:	mov    QWORD PTR [rsi+0x38],r9
   140003610:	jmp    0x14000361d
   140003612:	mov    r15,QWORD PTR [rbp+0x40]
   140003616:	mov    rdx,0xfffffffffffffffe
   14000361d:	mov    rcx,rdi
   140003620:	inc    rcx
   140003623:	cmp    WORD PTR [r13+rcx*2+0x2],r9w
   140003629:	jne    0x140003620
   14000362b:	add    rcx,rcx
   14000362e:	mov    rax,rdx
   140003631:	sub    rax,rcx
   140003634:	add    r12,rax
   140003637:	mov    rax,rdi
   14000363a:	inc    rax
   14000363d:	cmp    WORD PTR [r13+rax*2+0x2],r9w
   140003643:	jne    0x14000363a
   140003645:	lea    rbx,[r13+0x4]
   140003649:	lea    rbx,[rbx+rax*2]
   14000364d:	cmp    WORD PTR [rbx],r9w
   140003651:	je     0x14000366b
   140003653:	mov    rcx,rbx
   140003656:	call   0x140002944
   14000365b:	mov    QWORD PTR [rsi+0x40],rax
   14000365f:	mov    rdx,0xfffffffffffffffe
   140003666:	xor    r9d,r9d
   140003669:	jmp    0x14000366f
   14000366b:	mov    QWORD PTR [rsi+0x40],r9
   14000366f:	mov    rcx,rdi
   140003672:	inc    rcx
   140003675:	cmp    WORD PTR [rbx+rcx*2],r9w
   14000367a:	jne    0x140003672
   14000367c:	add    rcx,rcx
   14000367f:	mov    rax,rdx
   140003682:	sub    rax,rcx
   140003685:	add    r12,rax
   140003688:	mov    rax,rdi
   14000368b:	inc    rax
   14000368e:	cmp    WORD PTR [rbx+rax*2],r9w
   140003693:	jne    0x14000368b
   140003695:	lea    rbx,[rbx+rax*2]
   140003699:	add    rbx,0x2
   14000369d:	cmp    WORD PTR [rbx],r9w
   1400036a1:	je     0x1400036bb
   1400036a3:	mov    rcx,rbx
   1400036a6:	call   0x140002944
   1400036ab:	mov    QWORD PTR [rsi+0x48],rax
   1400036af:	mov    rdx,0xfffffffffffffffe
   1400036b6:	xor    r9d,r9d
   1400036b9:	jmp    0x1400036bf
   1400036bb:	mov    QWORD PTR [rsi+0x48],r9
   1400036bf:	mov    rax,rdi
   1400036c2:	inc    rax
   1400036c5:	cmp    WORD PTR [rbx+rax*2],r9w
   1400036ca:	jne    0x1400036c2
   1400036cc:	add    rax,rax
   1400036cf:	sub    rdx,rax
   1400036d2:	add    r12,rdx
   1400036d5:	mov    rcx,rdi
   1400036d8:	inc    rcx
   1400036db:	cmp    WORD PTR [rbx+rcx*2],r9w
   1400036e0:	jne    0x1400036d8
   1400036e2:	lea    rbx,[rbx+rcx*2]
   1400036e6:	mov    rcx,r12
   1400036e9:	shr    rcx,1
   1400036ec:	mov    eax,0x2
   1400036f1:	mul    rcx
   1400036f4:	cmovo  rax,rdi
   1400036f8:	mov    rcx,rax
   1400036fb:	call   0x140001660
   140003700:	mov    QWORD PTR [rsi+0x50],rax
   140003704:	test   rax,rax
   140003707:	je     0x140003718
   140003709:	mov    r8,r12
   14000370c:	lea    rdx,[rbx+0x2]
   140003710:	mov    rcx,rax
   140003713:	call   0x140005ff6
   140003718:	mov    rcx,r15
   14000371b:	call   0x140002364
   140003720:	mov    r12d,0x1
   140003726:	jmp    0x14000415e
   14000372b:	mov    rax,QWORD PTR [r14+0x10]
   14000372f:	mov    QWORD PTR [rsi+0x10],rax
   140003733:	jmp    0x14000415e
   140003738:	mov    rax,QWORD PTR [r14+0x10]
   14000373c:	mov    QWORD PTR [rsi+0x8],rax
   140003740:	jmp    0x14000415e
   140003745:	movzx  edx,WORD PTR [r14+0x56]
   14000374a:	sub    edx,0x4
   14000374d:	mov    rcx,QWORD PTR [r14+0x60]
   140003751:	add    rcx,0x4
   140003755:	call   0x1400022f4
   14000375a:	mov    rbx,rax
   14000375d:	cmp    QWORD PTR [rsi+0x20],r13
   140003761:	je     0x140003773
   140003763:	mov    rcx,rax
   140003766:	call   0x140002944
   14000376b:	mov    rcx,QWORD PTR [rsi+0x20]
   14000376f:	mov    QWORD PTR [rcx+0x20],rax
   140003773:	mov    rcx,rbx
   140003776:	jmp    0x140003268
   14000377b:	sub    ecx,0x72
   14000377e:	je     0x1400038d7
   140003784:	sub    ecx,r12d
   140003787:	je     0x140003893
   14000378d:	sub    ecx,r12d
   140003790:	je     0x140003883
   140003796:	sub    ecx,r12d
   140003799:	je     0x140003877
   14000379f:	sub    ecx,0x2
   1400037a2:	je     0x1400037b2
   1400037a4:	cmp    ecx,r12d
   1400037a7:	je     0x140003994
   1400037ad:	jmp    0x14000415e
   1400037b2:	cmp    QWORD PTR [rax+0x20],r13
   1400037b6:	je     0x14000415e
   1400037bc:	mov    r8,QWORD PTR [r14+0x60]
   1400037c0:	add    r8,0x8
   1400037c4:	mov    ebx,0x2800
   1400037c9:	mov    edx,ebx
   1400037cb:	mov    r15,QWORD PTR [rip+0x1138e]        # 0x140014b60
   1400037d2:	mov    rcx,r15
   1400037d5:	call   0x14000210c
   1400037da:	or     rdi,0xffffffffffffffff
   1400037de:	inc    rdi
   1400037e1:	cmp    WORD PTR [r15+rdi*2],r13w
   1400037e6:	jne    0x1400037de
   1400037e8:	mov    r8,QWORD PTR [r14+0x60]
   1400037ec:	add    r8,0xa
   1400037f0:	lea    r8,[r8+rdi*2]
   1400037f4:	mov    rdx,rbx
   1400037f7:	mov    rcx,QWORD PTR [rip+0x1135a]        # 0x140014b58
   1400037fe:	call   0x14000210c
   140003803:	movzx  edx,WORD PTR [r14+0x28]
   140003808:	mov    r9d,ebx
   14000380b:	mov    r8,QWORD PTR [rip+0x11336]        # 0x140014b48
   140003812:	mov    rcx,QWORD PTR [rip+0xbe8f]        # 0x14000f6a8
   140003819:	call   QWORD PTR [rip+0x38e9]        # 0x140007108
   14000381f:	mov    rax,QWORD PTR [rip+0x11332]        # 0x140014b58
   140003826:	mov    QWORD PTR [rsp+0x20],rax
   14000382b:	mov    r9,QWORD PTR [rip+0x1132e]        # 0x140014b60
   140003832:	mov    r8,QWORD PTR [rip+0x1130f]        # 0x140014b48
   140003839:	mov    rdx,rbx
   14000383c:	mov    rcx,QWORD PTR [rip+0x1130d]        # 0x140014b50
   140003843:	call   0x140002218
   140003848:	mov    rcx,QWORD PTR [rip+0x11301]        # 0x140014b50
   14000384f:	call   0x140002944
   140003854:	mov    QWORD PTR [rbp+0x40],rax
   140003858:	test   rax,rax
   14000385b:	je     0x14000415e
   140003861:	mov    rcx,QWORD PTR [rsi+0x20]
   140003865:	add    rcx,0x48
   140003869:	lea    rdx,[rbp+0x40]
   14000386d:	call   0x140004f7c
   140003872:	jmp    0x14000415e
   140003877:	mov    DWORD PTR [rax+0x58],0x3
   14000387e:	jmp    0x14000415e
   140003883:	mov    rax,QWORD PTR [r14+0x10]
   140003887:	mov    QWORD PTR [rsi+0x88],rax
   14000388e:	jmp    0x14000415e
   140003893:	movzx  r8d,WORD PTR [r14+0x56]
   140003898:	sub    r8,0x4
   14000389c:	mov    rdx,QWORD PTR [r14+0x60]
   1400038a0:	add    rdx,0x4
   1400038a4:	mov    rcx,QWORD PTR [rip+0x112b5]        # 0x140014b60
   1400038ab:	call   0x140005ff6
   1400038b0:	mov    DWORD PTR [rsi+0x58],r13d
   1400038b4:	mov    rax,QWORD PTR [r14+0x10]
   1400038b8:	mov    QWORD PTR [rsi+0x80],rax
   1400038bf:	mov    rcx,QWORD PTR [rip+0x1129a]        # 0x140014b60
   1400038c6:	call   0x140002944
   1400038cb:	mov    QWORD PTR [rsi+0x90],rax
   1400038d2:	jmp    0x14000415e
   1400038d7:	mov    rax,QWORD PTR [rax+0x20]
   1400038db:	test   rax,rax
   1400038de:	je     0x14000415e
   1400038e4:	add    rax,0x28
   1400038e8:	mov    QWORD PTR [rsp+0x20],rax
   1400038ed:	xor    r9d,r9d
   1400038f0:	mov    r8d,r12d
   1400038f3:	xor    edx,edx
   1400038f5:	jmp    0x140004156
   1400038fa:	mov    r9,rax
   1400038fd:	mov    edx,0x3
   140003902:	mov    r8d,r12d
   140003905:	mov    rcx,r14
   140003908:	call   0x140002d48
   14000390d:	jmp    0x14000415e
   140003912:	mov    eax,0x93
   140003917:	cmp    ecx,eax
   140003919:	jg     0x14000396e
   14000391b:	je     0x140003fff
   140003921:	cmp    ecx,0x84
   140003927:	jg     0x14000394b
   140003929:	cmp    ecx,0x80
   14000392f:	jge    0x1400039a4
   140003931:	cmp    ecx,0x7a
   140003934:	je     0x140003994
   140003936:	jle    0x14000415e
   14000393c:	cmp    ecx,0x7e
   14000393f:	jle    0x1400039a4
   140003941:	cmp    ecx,0x7f
   140003944:	je     0x1400039b1
   140003946:	jmp    0x14000415e
   14000394b:	cmp    ecx,0x85
   140003951:	je     0x1400039b1
   140003953:	lea    eax,[rcx-0x86]
   140003959:	cmp    eax,0x9
   14000395c:	jbe    0x1400039a4
   14000395e:	lea    eax,[rcx-0x91]
   140003964:	cmp    eax,r12d
   140003967:	jbe    0x1400039a4
   140003969:	jmp    0x14000415e
   14000396e:	sub    ecx,0x95
   140003974:	je     0x1400039b1
   140003976:	sub    ecx,r12d
   140003979:	je     0x1400039a4
   14000397b:	sub    ecx,0x3
   14000397e:	je     0x140003999
   140003980:	sub    ecx,r12d
   140003983:	je     0x1400039b1
   140003985:	sub    ecx,r12d
   140003988:	je     0x140003994
   14000398a:	cmp    ecx,r12d
   14000398d:	je     0x1400039a4
   14000398f:	jmp    0x14000415e
   140003994:	mov    r8d,r12d
   140003997:	jmp    0x1400039b4
   140003999:	mov    r9,rsi
   14000399c:	mov    edx,r12d
   14000399f:	jmp    0x140003902
   1400039a4:	mov    r9,rsi
   1400039a7:	xor    r8d,r8d
   1400039aa:	xor    edx,edx
   1400039ac:	jmp    0x140003905
   1400039b1:	xor    r8d,r8d
   1400039b4:	mov    r9,rsi
   1400039b7:	mov    edx,0x2
   1400039bc:	jmp    0x140003905
   1400039c1:	mov    DWORD PTR [rax+0x58],0x2
   1400039c8:	mov    rcx,rbx
   1400039cb:	call   0x140001660
   1400039d0:	mov    rdx,rax
   1400039d3:	mov    QWORD PTR [rbp+0x40],rax
   1400039d7:	test   rax,rax
   1400039da:	je     0x140003a3f
   1400039dc:	mov    BYTE PTR [rax],r13b
   1400039df:	lea    rcx,[rax+0x8]
   1400039e3:	mov    QWORD PTR [rbp+0x48],rcx
   1400039e7:	mov    QWORD PTR [rcx+0x28],r13
   1400039eb:	mov    QWORD PTR [rcx+0x30],r13
   1400039ef:	mov    QWORD PTR [rcx+0x38],r13
   1400039f3:	mov    QWORD PTR [rcx+0x48],r13
   1400039f7:	mov    QWORD PTR [rcx+0x50],r13
   1400039fb:	mov    QWORD PTR [rcx+0x58],r13
   1400039ff:	mov    QWORD PTR [rcx+0x8],r13
   140003a03:	mov    QWORD PTR [rcx],r13
   140003a06:	mov    QWORD PTR [rcx+0x10],r13
   140003a0a:	mov    QWORD PTR [rcx+0x18],r13
   140003a0e:	add    rax,0x68
   140003a12:	mov    QWORD PTR [rbp+0x48],rax
   140003a16:	mov    QWORD PTR [rax+0x28],r13
   140003a1a:	mov    QWORD PTR [rax+0x30],r13
   140003a1e:	mov    QWORD PTR [rax+0x38],r13
   140003a22:	mov    QWORD PTR [rax+0x48],r13
   140003a26:	mov    QWORD PTR [rax+0x50],r13
   140003a2a:	mov    QWORD PTR [rax+0x58],r13
   140003a2e:	mov    QWORD PTR [rax+0x8],r13
   140003a32:	mov    QWORD PTR [rax],r13
   140003a35:	mov    QWORD PTR [rax+0x10],r13
   140003a39:	mov    QWORD PTR [rax+0x18],r13
   140003a3d:	jmp    0x140003a42
   140003a3f:	mov    rdx,r13
   140003a42:	lea    r9,[rsi+0x20]
   140003a46:	mov    QWORD PTR [r9],rdx
   140003a49:	test   rdx,rdx
   140003a4c:	je     0x14000415e
   140003a52:	mov    BYTE PTR [rdx],r13b
   140003a55:	mov    rcx,QWORD PTR [r9]
   140003a58:	mov    rax,QWORD PTR [r14+0x10]
   140003a5c:	mov    QWORD PTR [rcx+0x68],rax
   140003a60:	mov    rax,QWORD PTR [r9]
   140003a63:	mov    QWORD PTR [rax+0x78],r13
   140003a67:	add    rsi,0xe0
   140003a6e:	mov    rdx,QWORD PTR [rsi+0x8]
   140003a72:	test   rdx,rdx
   140003a75:	jne    0x140003a7c
   140003a77:	mov    rcx,r13
   140003a7a:	jmp    0x140003a87
   140003a7c:	mov    rcx,QWORD PTR [rsi+0x10]
   140003a80:	sub    rcx,rdx
   140003a83:	sar    rcx,0x3
   140003a87:	test   rdx,rdx
   140003a8a:	je     0x140003ab3
   140003a8c:	mov    rax,QWORD PTR [rsi+0x18]
   140003a90:	sub    rax,rdx
   140003a93:	sar    rax,0x3
   140003a97:	cmp    rcx,rax
   140003a9a:	jae    0x140003ab3
   140003a9c:	mov    rcx,QWORD PTR [rsi+0x10]
   140003aa0:	lea    rdx,[rcx+0x8]
   140003aa4:	mov    rax,QWORD PTR [r9]
   140003aa7:	mov    QWORD PTR [rcx],rax
   140003aaa:	mov    QWORD PTR [rsi+0x10],rdx
   140003aae:	jmp    0x14000415e
   140003ab3:	mov    rdx,QWORD PTR [rsi+0x10]
   140003ab7:	mov    rcx,rsi
   140003aba:	call   0x140004fd8
   140003abf:	jmp    0x14000415e
   140003ac4:	cmp    ecx,0xfb
   140003aca:	jg     0x140003fc1
   140003ad0:	cmp    ecx,0xfa
   140003ad6:	jge    0x140003f8e
   140003adc:	mov    eax,0xd0
   140003ae1:	cmp    ecx,eax
   140003ae3:	jg     0x140003e6d
   140003ae9:	je     0x140003d82
   140003aef:	sub    ecx,0xc9
   140003af5:	je     0x140003d68
   140003afb:	sub    ecx,r12d
   140003afe:	je     0x140003c56
   140003b04:	sub    ecx,r12d
   140003b07:	je     0x140003c10
   140003b0d:	sub    ecx,r12d
   140003b10:	je     0x140003bd9
   140003b16:	sub    ecx,r12d
   140003b19:	je     0x140003ba2
   140003b1f:	sub    ecx,r12d
   140003b22:	je     0x140003b64
   140003b24:	cmp    ecx,r12d
   140003b27:	jne    0x14000415e
   140003b2d:	mov    rax,QWORD PTR [rsi+0x20]
   140003b31:	test   rax,rax
   140003b34:	je     0x14000415e
   140003b3a:	mov    rcx,QWORD PTR [rax+0x80]
   140003b41:	test   rcx,rcx
   140003b44:	je     0x14000415e
   140003b4a:	mov    rcx,QWORD PTR [rcx+0x18]
   140003b4e:	test   rcx,rcx
   140003b51:	je     0x14000415e
   140003b57:	mov    rax,QWORD PTR [r14+0x10]
   140003b5b:	mov    QWORD PTR [rcx+0x50],rax
   140003b5f:	jmp    0x14000415e
   140003b64:	mov    DWORD PTR [rsi+0x58],0x4
   140003b6b:	mov    rcx,QWORD PTR [rsi+0x20]
   140003b6f:	test   rcx,rcx
   140003b72:	je     0x14000415e
   140003b78:	mov    rcx,QWORD PTR [rcx+0x80]
   140003b7f:	test   rcx,rcx
   140003b82:	je     0x14000415e
   140003b88:	mov    rcx,QWORD PTR [rcx+0x18]
   140003b8c:	test   rcx,rcx
   140003b8f:	je     0x14000415e
   140003b95:	mov    rax,QWORD PTR [r14+0x10]
   140003b99:	mov    QWORD PTR [rcx+0x48],rax
   140003b9d:	jmp    0x14000415e
   140003ba2:	mov    rax,QWORD PTR [rsi+0x20]
   140003ba6:	test   rax,rax
   140003ba9:	je     0x14000415e
   140003baf:	mov    rcx,QWORD PTR [rax+0x80]
   140003bb6:	test   rcx,rcx
   140003bb9:	je     0x14000415e
   140003bbf:	mov    rcx,QWORD PTR [rcx+0x18]
   140003bc3:	test   rcx,rcx
   140003bc6:	je     0x14000415e
   140003bcc:	mov    rax,QWORD PTR [r14+0x10]
   140003bd0:	mov    QWORD PTR [rcx+0x20],rax
   140003bd4:	jmp    0x14000415e
   140003bd9:	mov    rax,QWORD PTR [rsi+0x20]
   140003bdd:	test   rax,rax
   140003be0:	je     0x14000415e
   140003be6:	mov    rcx,QWORD PTR [rax+0x80]
   140003bed:	test   rcx,rcx
   140003bf0:	je     0x14000415e
   140003bf6:	mov    rcx,QWORD PTR [rcx+0x18]
   140003bfa:	test   rcx,rcx
   140003bfd:	je     0x14000415e
   140003c03:	mov    rax,QWORD PTR [r14+0x10]
   140003c07:	mov    QWORD PTR [rcx+0x18],rax
   140003c0b:	jmp    0x14000415e
   140003c10:	mov    rax,QWORD PTR [rsi+0x20]
   140003c14:	test   rax,rax
   140003c17:	je     0x14000415e
   140003c1d:	mov    rcx,QWORD PTR [rax+0x80]
   140003c24:	test   rcx,rcx
   140003c27:	je     0x14000415e
   140003c2d:	mov    rdx,QWORD PTR [rcx+0x18]
   140003c31:	test   rdx,rdx
   140003c34:	je     0x14000415e
   140003c3a:	mov    rax,QWORD PTR [r14+0x10]
   140003c3e:	mov    QWORD PTR [rdx+0x8],rax
   140003c42:	mov    rax,QWORD PTR [rsi+0x20]
   140003c46:	mov    rcx,QWORD PTR [rax+0x80]
   140003c4d:	mov    QWORD PTR [rcx+0x18],r13
   140003c51:	jmp    0x14000415e
   140003c56:	movzx  edx,WORD PTR [r14+0x56]
   140003c5b:	sub    edx,0x4
   140003c5e:	mov    rcx,QWORD PTR [r14+0x60]
   140003c62:	add    rcx,0x4
   140003c66:	call   0x1400022f4
   140003c6b:	mov    rdi,rax
   140003c6e:	mov    rax,QWORD PTR [rsi+0x20]
   140003c72:	test   rax,rax
   140003c75:	je     0x140003265
   140003c7b:	cmp    QWORD PTR [rax+0x80],r13
   140003c82:	je     0x140003265
   140003c88:	mov    ecx,0x78
   140003c8d:	call   0x140001660
   140003c92:	mov    rbx,rax
   140003c95:	mov    QWORD PTR [rbp+0x40],rax
   140003c99:	test   rax,rax
   140003c9c:	je     0x140003cd3
   140003c9e:	mov    QWORD PTR [rax+0x30],r13
   140003ca2:	mov    QWORD PTR [rax+0x38],r13
   140003ca6:	mov    QWORD PTR [rax+0x40],r13
   140003caa:	mov    QWORD PTR [rax+0x60],r13
   140003cae:	mov    QWORD PTR [rax+0x68],r13
   140003cb2:	mov    QWORD PTR [rax+0x70],r13
   140003cb6:	mov    QWORD PTR [rax+0x50],r13
   140003cba:	mov    QWORD PTR [rax+0x48],r13
   140003cbe:	mov    QWORD PTR [rax+0x20],r13
   140003cc2:	mov    QWORD PTR [rax+0x18],r13
   140003cc6:	mov    QWORD PTR [rax+0x8],r13
   140003cca:	mov    QWORD PTR [rax],r13
   140003ccd:	mov    QWORD PTR [rax+0x10],r13
   140003cd1:	jmp    0x140003cd6
   140003cd3:	mov    rbx,r13
   140003cd6:	test   rbx,rbx
   140003cd9:	je     0x140003265
   140003cdf:	mov    QWORD PTR [rbx+0x10],r13
   140003ce3:	mov    rax,QWORD PTR [r14+0x10]
   140003ce7:	mov    QWORD PTR [rbx],rax
   140003cea:	cmp    WORD PTR [rdi],r13w
   140003cee:	mov    rcx,rdi
   140003cf1:	jne    0x140003cfa
   140003cf3:	lea    rcx,[rip+0x39ee]        # 0x1400076e8
   140003cfa:	call   0x140002944
   140003cff:	mov    QWORD PTR [rbx+0x10],rax
   140003d03:	mov    rax,QWORD PTR [rsi+0x20]
   140003d07:	mov    rcx,QWORD PTR [rax+0x80]
   140003d0e:	mov    QWORD PTR [rcx+0x18],rbx
   140003d12:	mov    rax,QWORD PTR [rsi+0x20]
   140003d16:	mov    rcx,QWORD PTR [rax+0x80]
   140003d1d:	lea    r9,[rcx+0x18]
   140003d21:	lea    r8,[rcx+0x20]
   140003d25:	mov    rdx,QWORD PTR [r8+0x8]
   140003d29:	test   rdx,rdx
   140003d2c:	jne    0x140003d33
   140003d2e:	mov    rcx,r13
   140003d31:	jmp    0x140003d3e
   140003d33:	mov    rcx,QWORD PTR [r8+0x10]
   140003d37:	sub    rcx,rdx
   140003d3a:	sar    rcx,0x3
   140003d3e:	test   rdx,rdx
   140003d41:	je     0x140003d57
   140003d43:	mov    rax,QWORD PTR [r8+0x18]
   140003d47:	sub    rax,rdx
   140003d4a:	sar    rax,0x3
   140003d4e:	cmp    rcx,rax
   140003d51:	jb     0x140003e45
   140003d57:	mov    rdx,QWORD PTR [r8+0x10]
   140003d5b:	mov    rcx,r8
   140003d5e:	call   0x140004fd8
   140003d63:	jmp    0x140003265
   140003d68:	mov    rcx,QWORD PTR [rsi+0x20]
   140003d6c:	test   rcx,rcx
   140003d6f:	je     0x14000415e
   140003d75:	mov    rax,QWORD PTR [r14+0x10]
   140003d79:	mov    QWORD PTR [rcx+0x70],rax
   140003d7d:	jmp    0x14000313e
   140003d82:	movzx  edx,WORD PTR [r14+0x56]
   140003d87:	sub    edx,0x4
   140003d8a:	mov    rcx,QWORD PTR [r14+0x60]
   140003d8e:	add    rcx,0x4
   140003d92:	call   0x1400022f4
   140003d97:	mov    rdi,rax
   140003d9a:	cmp    QWORD PTR [rsi+0x20],r13
   140003d9e:	je     0x140003265
   140003da4:	mov    ecx,0x40
   140003da9:	call   0x140001660
   140003dae:	mov    rbx,rax
   140003db1:	mov    QWORD PTR [rbp+0x40],rax
   140003db5:	test   rax,rax
   140003db8:	je     0x140003dd7
   140003dba:	mov    QWORD PTR [rax+0x28],r13
   140003dbe:	mov    QWORD PTR [rax+0x30],r13
   140003dc2:	mov    QWORD PTR [rax+0x38],r13
   140003dc6:	mov    QWORD PTR [rax+0x8],r13
   140003dca:	mov    QWORD PTR [rax],r13
   140003dcd:	mov    QWORD PTR [rax+0x10],r13
   140003dd1:	mov    QWORD PTR [rax+0x18],r13
   140003dd5:	jmp    0x140003dda
   140003dd7:	mov    rbx,r13
   140003dda:	test   rbx,rbx
   140003ddd:	je     0x140003265
   140003de3:	mov    rax,QWORD PTR [r14+0x10]
   140003de7:	mov    QWORD PTR [rbx],rax
   140003dea:	mov    rcx,rdi
   140003ded:	call   0x140002944
   140003df2:	mov    QWORD PTR [rbx+0x10],rax
   140003df6:	mov    QWORD PTR [rbx+0x18],r13
   140003dfa:	mov    rax,QWORD PTR [rsi+0x20]
   140003dfe:	mov    QWORD PTR [rax+0x80],rbx
   140003e05:	mov    rax,QWORD PTR [rsi+0x20]
   140003e09:	lea    r9,[rax+0x80]
   140003e10:	lea    r8,[rax+0x88]
   140003e17:	mov    rdx,QWORD PTR [r8+0x8]
   140003e1b:	test   rdx,rdx
   140003e1e:	jne    0x140003e25
   140003e20:	mov    rcx,r13
   140003e23:	jmp    0x140003e30
   140003e25:	mov    rcx,QWORD PTR [r8+0x10]
   140003e29:	sub    rcx,rdx
   140003e2c:	sar    rcx,0x3
   140003e30:	test   rdx,rdx
   140003e33:	je     0x140003e5c
   140003e35:	mov    rax,QWORD PTR [r8+0x18]
   140003e39:	sub    rax,rdx
   140003e3c:	sar    rax,0x3
   140003e40:	cmp    rcx,rax
   140003e43:	jae    0x140003e5c
   140003e45:	mov    rcx,QWORD PTR [r8+0x10]
   140003e49:	lea    rdx,[rcx+0x8]
   140003e4d:	mov    rax,QWORD PTR [r9]
   140003e50:	mov    QWORD PTR [rcx],rax
   140003e53:	mov    QWORD PTR [r8+0x10],rdx
   140003e57:	jmp    0x140003265
   140003e5c:	mov    rdx,QWORD PTR [r8+0x10]
   140003e60:	mov    rcx,r8
   140003e63:	call   0x140004fd8
   140003e68:	jmp    0x140003265
   140003e6d:	cmp    ecx,0xd1
   140003e73:	je     0x140003f59
   140003e79:	cmp    ecx,0xdc
   140003e7f:	je     0x140003f22
   140003e85:	mov    eax,0xe6
   140003e8a:	cmp    ecx,eax
   140003e8c:	je     0x140003eb1
   140003e8e:	jle    0x14000415e
   140003e94:	cmp    ecx,0xea
   140003e9a:	jle    0x140003eef
   140003e9c:	cmp    ecx,0xeb
   140003ea2:	je     0x140003eb1
   140003ea4:	cmp    ecx,0xec
   140003eaa:	je     0x140003eef
   140003eac:	jmp    0x14000415e
   140003eb1:	mov    rax,QWORD PTR [rsi+0x20]
   140003eb5:	test   rax,rax
   140003eb8:	je     0x14000415e
   140003ebe:	mov    rcx,QWORD PTR [rax+0x80]
   140003ec5:	test   rcx,rcx
   140003ec8:	je     0x14000415e
   140003ece:	mov    rax,QWORD PTR [rcx+0x18]
   140003ed2:	test   rax,rax
   140003ed5:	je     0x14000415e
   140003edb:	add    rax,0x28
   140003edf:	mov    QWORD PTR [rsp+0x20],rax
   140003ee4:	xor    r9d,r9d
   140003ee7:	mov    r8d,r12d
   140003eea:	jmp    0x140004153
   140003eef:	mov    rax,QWORD PTR [rsi+0x20]
   140003ef3:	test   rax,rax
   140003ef6:	je     0x14000415e
   140003efc:	mov    rcx,QWORD PTR [rax+0x80]
   140003f03:	test   rcx,rcx
   140003f06:	je     0x14000415e
   140003f0c:	mov    rax,QWORD PTR [rcx+0x18]
   140003f10:	test   rax,rax
   140003f13:	je     0x14000415e
   140003f19:	add    rax,0x28
   140003f1d:	jmp    0x140003276
   140003f22:	movzx  edx,WORD PTR [r14+0x56]
   140003f27:	sub    edx,0x4
   140003f2a:	mov    rcx,QWORD PTR [r14+0x60]
   140003f2e:	add    rcx,0x4
   140003f32:	call   0x1400022f4
   140003f37:	mov    rbx,rax
   140003f3a:	cmp    QWORD PTR [rsi+0x20],r13
   140003f3e:	je     0x140003773
   140003f44:	mov    rcx,rax
   140003f47:	call   0x140002944
   140003f4c:	mov    rcx,QWORD PTR [rsi+0x20]
   140003f50:	mov    QWORD PTR [rcx+0x78],rax
   140003f54:	jmp    0x140003773
   140003f59:	mov    rax,QWORD PTR [rsi+0x20]
   140003f5d:	test   rax,rax
   140003f60:	je     0x14000415e
   140003f66:	mov    rcx,QWORD PTR [rax+0x80]
   140003f6d:	test   rcx,rcx
   140003f70:	je     0x14000415e
   140003f76:	mov    rax,QWORD PTR [r14+0x10]
   140003f7a:	mov    QWORD PTR [rcx+0x8],rax
   140003f7e:	mov    rax,QWORD PTR [rsi+0x20]
   140003f82:	mov    QWORD PTR [rax+0x80],r13
   140003f89:	jmp    0x14000415e
   140003f8e:	mov    rax,QWORD PTR [rax+0x20]
   140003f92:	test   rax,rax
   140003f95:	je     0x14000415e
   140003f9b:	mov    rcx,QWORD PTR [rax+0x80]
   140003fa2:	test   rcx,rcx
   140003fa5:	je     0x14000415e
   140003fab:	mov    rax,QWORD PTR [rcx+0x18]
   140003faf:	test   rax,rax
   140003fb2:	je     0x14000415e
   140003fb8:	add    rax,0x58
   140003fbc:	jmp    0x140003edf
   140003fc1:	sub    ecx,0x104
   140003fc7:	je     0x140004125
   140003fcd:	sub    ecx,r12d
   140003fd0:	je     0x14000410a
   140003fd6:	sub    ecx,r12d
   140003fd9:	je     0x1400040e3
   140003fdf:	sub    ecx,r12d
   140003fe2:	je     0x140003f8e
   140003fe4:	sub    ecx,r12d
   140003fe7:	je     0x14000410a
   140003fed:	sub    ecx,0x10
   140003ff0:	je     0x1400040d8
   140003ff6:	cmp    ecx,r12d
   140003ff9:	jne    0x14000415e
   140003fff:	movzx  r8d,WORD PTR [r14+0x56]
   140004004:	sub    r8,0x4
   140004008:	mov    rdx,QWORD PTR [r14+0x60]
   14000400c:	add    rdx,0x4
   140004010:	mov    rcx,QWORD PTR [rip+0x10b49]        # 0x140014b60
   140004017:	call   0x140005ff6
   14000401c:	movzx  edx,WORD PTR [r14+0x28]
   140004021:	mov    ebx,0x2800
   140004026:	mov    r9d,ebx
   140004029:	mov    r8,QWORD PTR [rip+0x10b18]        # 0x140014b48
   140004030:	mov    rcx,QWORD PTR [rip+0xb671]        # 0x14000f6a8
   140004037:	call   QWORD PTR [rip+0x30cb]        # 0x140007108
   14000403d:	mov    r9,QWORD PTR [rip+0x10b1c]        # 0x140014b60
   140004044:	mov    r8,QWORD PTR [rip+0x10afd]        # 0x140014b48
   14000404b:	mov    edx,ebx
   14000404d:	mov    rcx,QWORD PTR [rip+0x10afc]        # 0x140014b50
   140004054:	call   0x140002218
   140004059:	mov    rcx,QWORD PTR [rip+0x10af0]        # 0x140014b50
   140004060:	call   0x140002944
   140004065:	mov    QWORD PTR [rbp+0x40],rax
   140004069:	test   rax,rax
   14000406c:	je     0x14000415e
   140004072:	mov    eax,DWORD PTR [rsi+0x58]
   140004075:	test   eax,eax
   140004077:	jne    0x140004085
   140004079:	lea    rcx,[rsi+0xc0]
   140004080:	jmp    0x140003869
   140004085:	cmp    eax,0x3
   140004088:	jne    0x1400040bd
   14000408a:	mov    rax,QWORD PTR [rsi+0x20]
   14000408e:	test   rax,rax
   140004091:	je     0x14000415e
   140004097:	mov    rcx,QWORD PTR [rax+0x80]
   14000409e:	test   rcx,rcx
   1400040a1:	je     0x14000415e
   1400040a7:	mov    rcx,QWORD PTR [rcx+0x18]
   1400040ab:	test   rcx,rcx
   1400040ae:	je     0x14000415e
   1400040b4:	add    rcx,0x28
   1400040b8:	jmp    0x140003869
   1400040bd:	cmp    eax,r12d
   1400040c0:	jne    0x14000415e
   1400040c6:	mov    rcx,QWORD PTR [rsi+0x20]
   1400040ca:	test   rcx,rcx
   1400040cd:	je     0x14000415e
   1400040d3:	jmp    0x140003865
   1400040d8:	add    rax,0x100
   1400040de:	jmp    0x140003edf
   1400040e3:	mov    rax,QWORD PTR [rax+0x20]
   1400040e7:	test   rax,rax
   1400040ea:	je     0x14000415e
   1400040ec:	mov    rcx,QWORD PTR [rax+0x80]
   1400040f3:	test   rcx,rcx
   1400040f6:	je     0x14000415e
   1400040f8:	mov    rax,QWORD PTR [rcx+0x18]
   1400040fc:	test   rax,rax
   1400040ff:	je     0x14000415e
   140004101:	add    rax,0x58
   140004105:	jmp    0x140003276
   14000410a:	mov    r9,QWORD PTR [rax+0x20]
   14000410e:	test   r9,r9
   140004111:	je     0x14000415e
   140004113:	lea    rax,[r9+0xa8]
   14000411a:	mov    QWORD PTR [rsp+0x20],rax
   14000411f:	mov    r9,QWORD PTR [r9+0x78]
   140004123:	jmp    0x140004150
   140004125:	mov    rax,QWORD PTR [rax+0x20]
   140004129:	test   rax,rax
   14000412c:	je     0x14000415e
   14000412e:	mov    r9,QWORD PTR [rax+0x80]
   140004135:	test   r9,r9
   140004138:	je     0x14000415e
   14000413a:	mov    r9,QWORD PTR [r9+0x18]
   14000413e:	test   r9,r9
   140004141:	je     0x14000415e
   140004143:	lea    rcx,[r9+0x58]
   140004147:	mov    QWORD PTR [rsp+0x20],rcx
   14000414c:	mov    r9,QWORD PTR [r9+0x10]
   140004150:	xor    r8d,r8d
   140004153:	mov    edx,r12d
   140004156:	mov    rcx,r14
   140004159:	call   0x140002c14
   14000415e:	mov    eax,r12d
   140004161:	mov    rbx,QWORD PTR [rsp+0x98]
   140004169:	add    rsp,0x40
   14000416d:	pop    r15
   14000416f:	pop    r14
   140004171:	pop    r13
   140004173:	pop    r12
   140004175:	pop    rdi
   140004176:	pop    rsi
   140004177:	pop    rbp
   140004178:	ret    
   140004179:	int3   
   14000417a:	int3   
   14000417b:	int3   
   14000417c:	int3   
   14000417d:	int3   
   14000417e:	int3   
   14000417f:	int3   
   140004180:	mov    rax,rsp
   140004183:	mov    QWORD PTR [rax+0x8],rcx
   140004187:	push   rdi
   140004188:	push   r14
   14000418a:	push   r15
   14000418c:	sub    rsp,0x30
   140004190:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140004198:	mov    QWORD PTR [rax+0x10],rbx
   14000419c:	mov    QWORD PTR [rax+0x18],rbp
   1400041a0:	mov    QWORD PTR [rax+0x20],rsi
   1400041a4:	mov    esi,r9d
   1400041a7:	mov    ebp,r8d
   1400041aa:	mov    r14d,edx
   1400041ad:	mov    rdi,QWORD PTR [rip+0xb4ec]        # 0x14000f6a0
   1400041b4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400041b8:	xor    r15d,r15d
   1400041bb:	test   rcx,rcx
   1400041be:	je     0x140004201
   1400041c0:	mov    rax,QWORD PTR [rdi+0x10]
   1400041c4:	sub    rax,rcx
   1400041c7:	sar    rax,0x3
   1400041cb:	test   rax,rax
   1400041ce:	je     0x140004201
   1400041d0:	lea    r8,[rcx-0x8]
   1400041d4:	lea    r8,[r8+rax*8]
   1400041d8:	mov    rdx,QWORD PTR [r8]
   1400041db:	cmp    DWORD PTR [rdx],r14d
   1400041de:	jne    0x1400041eb
   1400041e0:	cmp    DWORD PTR [rdx+0x18],ebp
   1400041e3:	jne    0x1400041eb
   1400041e5:	cmp    DWORD PTR [rdx+0x1c],r9d
   1400041e9:	je     0x1400041f7
   1400041eb:	sub    r8,0x8
   1400041ef:	sub    rax,0x1
   1400041f3:	je     0x140004201
   1400041f5:	jmp    0x1400041d8
   1400041f7:	mov    rax,QWORD PTR [rcx+rax*8-0x8]
   1400041fc:	jmp    0x140004348
   140004201:	mov    ecx,0x128
   140004206:	call   0x140001660
   14000420b:	mov    rbx,rax
   14000420e:	mov    QWORD PTR [rsp+0x50],rax
   140004213:	test   rax,rax
   140004216:	je     0x1400042bb
   14000421c:	mov    DWORD PTR [rax+0x28],r15d
   140004220:	mov    WORD PTR [rax+0x2c],r15w
   140004225:	mov    QWORD PTR [rax+0x30],r15
   140004229:	mov    QWORD PTR [rax+0x38],r15
   14000422d:	mov    QWORD PTR [rax+0x40],r15
   140004231:	mov    QWORD PTR [rax+0x48],r15
   140004235:	mov    QWORD PTR [rax+0x50],r15
   140004239:	mov    QWORD PTR [rax+0x68],r15
   14000423d:	mov    QWORD PTR [rax+0x70],r15
   140004241:	mov    QWORD PTR [rax+0x78],r15
   140004245:	sub    rax,0xffffffffffffff80
   140004249:	mov    QWORD PTR [rsp+0x28],rax
   14000424e:	mov    QWORD PTR [rax+0x28],r15
   140004252:	mov    QWORD PTR [rax+0x30],r15
   140004256:	mov    QWORD PTR [rax+0x38],r15
   14000425a:	mov    QWORD PTR [rax+0x48],r15
   14000425e:	mov    QWORD PTR [rax+0x50],r15
   140004262:	mov    QWORD PTR [rax+0x58],r15
   140004266:	mov    QWORD PTR [rax+0x8],r15
   14000426a:	mov    QWORD PTR [rax],r15
   14000426d:	mov    QWORD PTR [rax+0x10],r15
   140004271:	mov    QWORD PTR [rax+0x18],r15
   140004275:	mov    QWORD PTR [rbx+0xe8],r15
   14000427c:	mov    QWORD PTR [rbx+0xf0],r15
   140004283:	mov    QWORD PTR [rbx+0xf8],r15
   14000428a:	mov    QWORD PTR [rbx+0x108],r15
   140004291:	mov    QWORD PTR [rbx+0x110],r15
   140004298:	mov    QWORD PTR [rbx+0x118],r15
   14000429f:	mov    DWORD PTR [rbx],r15d
   1400042a2:	mov    QWORD PTR [rbx+0x10],r15
   1400042a6:	mov    QWORD PTR [rbx+0x8],r15
   1400042aa:	mov    QWORD PTR [rbx+0x18],r15
   1400042ae:	mov    QWORD PTR [rbx+0x20],r15
   1400042b2:	mov    QWORD PTR [rbx+0x120],r15
   1400042b9:	jmp    0x1400042be
   1400042bb:	mov    rbx,r15
   1400042be:	mov    QWORD PTR [rsp+0x50],rbx
   1400042c3:	test   rbx,rbx
   1400042c6:	je     0x140004345
   1400042c8:	mov    DWORD PTR [rbx],r14d
   1400042cb:	xor    eax,eax
   1400042cd:	mov    QWORD PTR [rbx+0x8],rax
   1400042d1:	mov    QWORD PTR [rbx+0x10],rax
   1400042d5:	mov    DWORD PTR [rbx+0x18],ebp
   1400042d8:	mov    DWORD PTR [rbx+0x1c],esi
   1400042db:	mov    QWORD PTR [rbx+0x20],r15
   1400042df:	lea    rcx,[rbx+0x28]
   1400042e3:	xor    edx,edx
   1400042e5:	lea    r8d,[rax+0x30]
   1400042e9:	call   0x140006002
   1400042ee:	mov    QWORD PTR [rbx+0x120],r15
   1400042f5:	mov    rdx,QWORD PTR [rdi+0x8]
   1400042f9:	test   rdx,rdx
   1400042fc:	jne    0x140004303
   1400042fe:	mov    rcx,r15
   140004301:	jmp    0x14000430e
   140004303:	mov    rcx,QWORD PTR [rdi+0x10]
   140004307:	sub    rcx,rdx
   14000430a:	sar    rcx,0x3
   14000430e:	test   rdx,rdx
   140004311:	je     0x140004334
   140004313:	mov    rax,QWORD PTR [rdi+0x18]
   140004317:	sub    rax,rdx
   14000431a:	sar    rax,0x3
   14000431e:	cmp    rcx,rax
   140004321:	jae    0x140004334
   140004323:	mov    rax,QWORD PTR [rdi+0x10]
   140004327:	lea    rcx,[rax+0x8]
   14000432b:	mov    QWORD PTR [rax],rbx
   14000432e:	mov    QWORD PTR [rdi+0x10],rcx
   140004332:	jmp    0x140004345
   140004334:	lea    r9,[rsp+0x50]
   140004339:	mov    rdx,QWORD PTR [rdi+0x10]
   14000433d:	mov    rcx,rdi
   140004340:	call   0x140004fd8
   140004345:	mov    rax,rbx
   140004348:	mov    rbx,QWORD PTR [rsp+0x58]
   14000434d:	mov    rbp,QWORD PTR [rsp+0x60]
   140004352:	mov    rsi,QWORD PTR [rsp+0x68]
   140004357:	add    rsp,0x30
   14000435b:	pop    r15
   14000435d:	pop    r14
   14000435f:	pop    rdi
   140004360:	ret    
   140004361:	int3   
   140004362:	int3   
   140004363:	int3   
   140004364:	int3   
   140004365:	int3   
   140004366:	int3   
   140004367:	int3   
   140004368:	mov    rax,rsp
   14000436b:	mov    QWORD PTR [rax+0x8],rcx
   14000436f:	push   rbx
   140004370:	push   rbp
   140004371:	push   rsi
   140004372:	push   rdi
   140004373:	push   r12
   140004375:	push   r13
   140004377:	push   r14
   140004379:	push   r15
   14000437b:	sub    rsp,0x48
   14000437f:	mov    rbx,QWORD PTR [rip+0xb31a]        # 0x14000f6a0
   140004386:	xor    r13d,r13d
   140004389:	mov    QWORD PTR [rax-0x58],r13
   14000438d:	xor    r9d,r9d
   140004390:	mov    DWORD PTR [rax-0x60],r13d
   140004394:	mov    edx,0x40000000
   140004399:	mov    DWORD PTR [rax+0x20],r13d
   14000439d:	mov    rcx,QWORD PTR [rbx+0x20]
   1400043a1:	lea    r8d,[r13+0x4]
   1400043a5:	mov    DWORD PTR [rax-0x68],0x2
   1400043ac:	call   QWORD PTR [rip+0x2cd6]        # 0x140007088
   1400043b2:	mov    rdi,rax
   1400043b5:	cmp    rax,0xffffffffffffffff
   1400043b9:	jne    0x1400043db
   1400043bb:	mov    rdx,QWORD PTR [rbx+0x20]
   1400043bf:	mov    ecx,0x272d
   1400043c4:	call   0x1400014e4
   1400043c9:	call   QWORD PTR [rip+0x2cc9]        # 0x140007098
   1400043cf:	mov    ecx,eax
   1400043d1:	call   0x14000239c
   1400043d6:	jmp    0x140004f62
   1400043db:	lea    r9,[rsp+0xa8]
   1400043e3:	mov    QWORD PTR [rsp+0x20],r13
   1400043e8:	mov    r8d,0x3
   1400043ee:	lea    rdx,[rip+0x3623]        # 0x140007a18
   1400043f5:	mov    rcx,rax
   1400043f8:	call   QWORD PTR [rip+0x2c42]        # 0x140007040
   1400043fe:	test   eax,eax
   140004400:	je     0x140004f59
   140004406:	mov    r15d,r13d
   140004409:	mov    DWORD PTR [rsp+0xa0],r13d
   140004411:	mov    r14d,0x2800
   140004417:	mov    rcx,QWORD PTR [rbx+0x8]
   14000441b:	test   rcx,rcx
   14000441e:	jne    0x140004425
   140004420:	mov    rax,r13
   140004423:	jmp    0x140004430
   140004425:	mov    rax,QWORD PTR [rbx+0x10]
   140004429:	sub    rax,rcx
   14000442c:	sar    rax,0x3
   140004430:	mov    esi,r15d
   140004433:	cmp    rsi,rax
   140004436:	jae    0x140004f59
   14000443c:	cmp    QWORD PTR [rbx+0x28],r13
   140004440:	je     0x140004474
   140004442:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140004446:	mov    edx,0x5c
   14000444b:	mov    rcx,QWORD PTR [rcx+0x40]
   14000444f:	call   QWORD PTR [rip+0x2d33]        # 0x140007188
   140004455:	test   rax,rax
   140004458:	je     0x14000445e
   14000445a:	add    rax,0x2
   14000445e:	mov    rdx,QWORD PTR [rbx+0x28]
   140004462:	mov    rcx,rax
   140004465:	call   QWORD PTR [rip+0x2d9d]        # 0x140007208
   14000446b:	test   rax,rax
   14000446e:	je     0x140004f49
   140004474:	xor    r8d,r8d
   140004477:	lea    rdx,[rip+0x327a]        # 0x1400076f8
   14000447e:	mov    rcx,rdi
   140004481:	call   0x140002aa8
   140004486:	mov    r8,QWORD PTR [rip+0x106bb]        # 0x140014b48
   14000448d:	mov    r9d,r14d
   140004490:	mov    rcx,QWORD PTR [rip+0xb211]        # 0x14000f6a8
   140004497:	mov    edx,0x64
   14000449c:	call   QWORD PTR [rip+0x2c66]        # 0x140007108
   1400044a2:	mov    rdx,QWORD PTR [rip+0x1069f]        # 0x140014b48
   1400044a9:	xor    r8d,r8d
   1400044ac:	mov    rcx,rdi
   1400044af:	call   0x140002aa8
   1400044b4:	mov    r8,QWORD PTR [rip+0x1068d]        # 0x140014b48
   1400044bb:	mov    r9d,r14d
   1400044be:	mov    rcx,QWORD PTR [rip+0xb1e3]        # 0x14000f6a8
   1400044c5:	mov    edx,0x66
   1400044ca:	call   QWORD PTR [rip+0x2c38]        # 0x140007108
   1400044d0:	mov    rdx,QWORD PTR [rip+0x10671]        # 0x140014b48
   1400044d7:	xor    r8d,r8d
   1400044da:	mov    rcx,rdi
   1400044dd:	call   0x140002aa8
   1400044e2:	mov    rax,QWORD PTR [rbx+0x8]
   1400044e6:	lea    r8,[rip+0x3233]        # 0x140007720
   1400044ed:	mov    rdx,r14
   1400044f0:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400044f4:	mov    r9d,DWORD PTR [rcx+0x28]
   1400044f8:	mov    rcx,QWORD PTR [rip+0x10651]        # 0x140014b50
   1400044ff:	call   0x140002218
   140004504:	mov    rdx,QWORD PTR [rip+0x10645]        # 0x140014b50
   14000450b:	mov    r15d,0x1
   140004511:	mov    r8d,r15d
   140004514:	mov    rcx,rdi
   140004517:	call   0x140002aa8
   14000451c:	mov    rax,QWORD PTR [rbx+0x8]
   140004520:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004524:	movzx  eax,WORD PTR [rcx+0x2c]
   140004528:	test   ax,ax
   14000452b:	jne    0x140004536
   14000452d:	lea    r9,[rip+0x3144]        # 0x140007678
   140004534:	jmp    0x140004597
   140004536:	cmp    ax,0x6
   14000453a:	jne    0x140004545
   14000453c:	lea    r9,[rip+0x313d]        # 0x140007680
   140004543:	jmp    0x140004597
   140004545:	cmp    ax,0x8
   140004549:	jne    0x140004554
   14000454b:	lea    r9,[rip+0x313e]        # 0x140007690
   140004552:	jmp    0x140004597
   140004554:	cmp    ax,0x9
   140004558:	jne    0x140004563
   14000455a:	lea    r9,[rip+0x313f]        # 0x1400076a0
   140004561:	jmp    0x140004597
   140004563:	cmp    ax,0x5
   140004567:	jne    0x140004572
   140004569:	lea    r9,[rip+0x3140]        # 0x1400076b0
   140004570:	jmp    0x140004597
   140004572:	cmp    ax,0xc
   140004576:	jne    0x140004581
   140004578:	lea    r9,[rip+0x3139]        # 0x1400076b8
   14000457f:	jmp    0x140004597
   140004581:	cmp    ax,0xa
   140004585:	lea    r9,[rip+0x313c]        # 0x1400076c8
   14000458c:	lea    rcx,[rip+0x3145]        # 0x1400076d8
   140004593:	cmovne r9,rcx
   140004597:	mov    rcx,QWORD PTR [rip+0x105b2]        # 0x140014b50
   14000459e:	lea    r8,[rip+0x3193]        # 0x140007738
   1400045a5:	mov    rdx,r14
   1400045a8:	call   0x140002218
   1400045ad:	mov    rdx,QWORD PTR [rip+0x1059c]        # 0x140014b50
   1400045b4:	mov    r8d,r15d
   1400045b7:	mov    rcx,rdi
   1400045ba:	call   0x140002aa8
   1400045bf:	mov    r14,QWORD PTR [rip+0x1058a]        # 0x140014b50
   1400045c6:	lea    r8,[rip+0x31a3]        # 0x140007770
   1400045cd:	sub    r8,r14
   1400045d0:	mov    edx,0x2800
   1400045d5:	mov    rcx,r14
   1400045d8:	lea    rax,[rdx+0x7fffd7fe]
   1400045df:	test   rax,rax
   1400045e2:	je     0x1400045fa
   1400045e4:	movzx  eax,WORD PTR [r8+rcx*1]
   1400045e9:	test   ax,ax
   1400045ec:	je     0x1400045fa
   1400045ee:	mov    WORD PTR [rcx],ax
   1400045f1:	add    rcx,0x2
   1400045f5:	sub    rdx,r15
   1400045f8:	jne    0x1400045d8
   1400045fa:	test   rdx,rdx
   1400045fd:	jne    0x140004603
   1400045ff:	sub    rcx,0x2
   140004603:	mov    WORD PTR [rcx],r13w
   140004607:	mov    rax,QWORD PTR [rbx+0x8]
   14000460b:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000460f:	mov    rbp,QWORD PTR [rcx+0x50]
   140004613:	test   rbp,rbp
   140004616:	je     0x140004654
   140004618:	cmp    WORD PTR [rbp+0x0],r13w
   14000461d:	je     0x140004654
   14000461f:	mov    r8,rbp
   140004622:	call   0x140002188
   140004627:	or     rax,0xffffffffffffffff
   14000462b:	inc    rax
   14000462e:	cmp    WORD PTR [rbp+rax*2+0x0],r13w
   140004634:	jne    0x14000462b
   140004636:	lea    rbp,[rbp+rax*2+0x0]
   14000463b:	add    rbp,0x2
   14000463f:	cmp    WORD PTR [rbp+0x0],r13w
   140004644:	je     0x140004654
   140004646:	lea    r8,[rip+0x314b]        # 0x140007798
   14000464d:	call   0x140002188
   140004652:	jmp    0x140004618
   140004654:	mov    r8d,r15d
   140004657:	mov    rdx,r14
   14000465a:	mov    rcx,rdi
   14000465d:	call   0x140002aa8
   140004662:	mov    rax,QWORD PTR [rbx+0x8]
   140004666:	mov    r14d,0x2800
   14000466c:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004670:	mov    r9,QWORD PTR [rcx+0x40]
   140004674:	test   r9,r9
   140004677:	je     0x1400046a1
   140004679:	mov    rcx,QWORD PTR [rip+0x104d0]        # 0x140014b50
   140004680:	lea    r8,[rip+0x3119]        # 0x1400077a0
   140004687:	mov    edx,r14d
   14000468a:	call   0x140002218
   14000468f:	mov    rdx,QWORD PTR [rip+0x104ba]        # 0x140014b50
   140004696:	mov    r8d,r15d
   140004699:	mov    rcx,rdi
   14000469c:	call   0x140002aa8
   1400046a1:	mov    rax,QWORD PTR [rbx+0x8]
   1400046a5:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400046a9:	mov    r9,QWORD PTR [rcx+0x38]
   1400046ad:	test   r9,r9
   1400046b0:	je     0x1400046da
   1400046b2:	mov    rcx,QWORD PTR [rip+0x10497]        # 0x140014b50
   1400046b9:	lea    r8,[rip+0x3108]        # 0x1400077c8
   1400046c0:	mov    rdx,r14
   1400046c3:	call   0x140002218
   1400046c8:	mov    rdx,QWORD PTR [rip+0x10481]        # 0x140014b50
   1400046cf:	mov    r8d,r15d
   1400046d2:	mov    rcx,rdi
   1400046d5:	call   0x140002aa8
   1400046da:	mov    rax,QWORD PTR [rbx+0x8]
   1400046de:	lea    r8,[rip+0x3113]        # 0x1400077f8
   1400046e5:	mov    rcx,QWORD PTR [rip+0x10464]        # 0x140014b50
   1400046ec:	mov    rdx,r14
   1400046ef:	mov    r9,QWORD PTR [rax+rsi*8]
   1400046f3:	mov    r9,QWORD PTR [r9+0x30]
   1400046f7:	call   0x140002218
   1400046fc:	mov    rdx,QWORD PTR [rip+0x1044d]        # 0x140014b50
   140004703:	mov    r8d,r15d
   140004706:	mov    rcx,rdi
   140004709:	call   0x140002aa8
   14000470e:	mov    rax,QWORD PTR [rbx+0x8]
   140004712:	lea    r9,[rip+0x2e4f]        # 0x140007568
   140004719:	lea    r8,[rip+0x3108]        # 0x140007828
   140004720:	mov    rdx,r14
   140004723:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004727:	cmp    QWORD PTR [rcx+0x48],r13
   14000472b:	cmovne r9,QWORD PTR [rcx+0x48]
   140004730:	mov    rcx,QWORD PTR [rip+0x10419]        # 0x140014b50
   140004737:	call   0x140002218
   14000473c:	mov    rdx,QWORD PTR [rip+0x1040d]        # 0x140014b50
   140004743:	mov    r8d,r15d
   140004746:	mov    rcx,rdi
   140004749:	call   0x140002aa8
   14000474e:	xor    r8d,r8d
   140004751:	lea    rdx,[rip+0x3110]        # 0x140007868
   140004758:	mov    rcx,rdi
   14000475b:	call   0x140002aa8
   140004760:	mov    ebp,r13d
   140004763:	mov    rax,QWORD PTR [rbx+0x8]
   140004767:	mov    rdx,QWORD PTR [rax+rsi*8]
   14000476b:	cmp    QWORD PTR [rdx+0x68],r13
   14000476f:	jne    0x140004776
   140004771:	mov    rax,r13
   140004774:	jmp    0x140004782
   140004776:	mov    rax,QWORD PTR [rdx+0x70]
   14000477a:	sub    rax,QWORD PTR [rdx+0x68]
   14000477e:	sar    rax,0x3
   140004782:	mov    ecx,ebp
   140004784:	cmp    rcx,rax
   140004787:	jae    0x1400047a1
   140004789:	mov    rdx,QWORD PTR [rdx+0x68]
   14000478d:	xor    r8d,r8d
   140004790:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140004794:	mov    rcx,rdi
   140004797:	call   0x140002aa8
   14000479c:	add    ebp,r15d
   14000479f:	jmp    0x140004763
   1400047a1:	mov    rax,QWORD PTR [rbx+0x8]
   1400047a5:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400047a9:	cmp    QWORD PTR [rcx+0x48],r13
   1400047ad:	je     0x140004852
   1400047b3:	mov    r8,QWORD PTR [rip+0x1038e]        # 0x140014b48
   1400047ba:	mov    r9d,r14d
   1400047bd:	mov    rcx,QWORD PTR [rip+0xaee4]        # 0x14000f6a8
   1400047c4:	mov    edx,0x73
   1400047c9:	call   QWORD PTR [rip+0x2939]        # 0x140007108
   1400047cf:	mov    rax,QWORD PTR [rbx+0x8]
   1400047d3:	mov    rdx,r14
   1400047d6:	mov    r8,QWORD PTR [rip+0x1036b]        # 0x140014b48
   1400047dd:	mov    rcx,QWORD PTR [rip+0x1036c]        # 0x140014b50
   1400047e4:	mov    r9,QWORD PTR [rax+rsi*8]
   1400047e8:	mov    r9,QWORD PTR [r9+0x90]
   1400047ef:	call   0x140002218
   1400047f4:	mov    rdx,QWORD PTR [rip+0x10355]        # 0x140014b50
   1400047fb:	xor    r8d,r8d
   1400047fe:	mov    rcx,rdi
   140004801:	call   0x140002aa8
   140004806:	mov    ebp,r13d
   140004809:	mov    rax,QWORD PTR [rbx+0x8]
   14000480d:	mov    rdx,QWORD PTR [rax+rsi*8]
   140004811:	mov    rcx,QWORD PTR [rdx+0xc8]
   140004818:	test   rcx,rcx
   14000481b:	jne    0x140004822
   14000481d:	mov    rax,r13
   140004820:	jmp    0x140004830
   140004822:	mov    rax,QWORD PTR [rdx+0xd0]
   140004829:	sub    rax,rcx
   14000482c:	sar    rax,0x3
   140004830:	mov    ecx,ebp
   140004832:	cmp    rcx,rax
   140004835:	jae    0x140004852
   140004837:	mov    rdx,QWORD PTR [rdx+0xc8]
   14000483e:	mov    r8d,r15d
   140004841:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140004845:	mov    rcx,rdi
   140004848:	call   0x140002aa8
   14000484d:	add    ebp,r15d
   140004850:	jmp    0x140004809
   140004852:	mov    r12d,r13d
   140004855:	mov    rax,QWORD PTR [rbx+0x8]
   140004859:	mov    DWORD PTR [rsp+0x98],r12d
   140004861:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004865:	mov    rdx,QWORD PTR [rcx+0xe8]
   14000486c:	test   rdx,rdx
   14000486f:	jne    0x140004876
   140004871:	mov    rax,r13
   140004874:	jmp    0x140004884
   140004876:	mov    rax,QWORD PTR [rcx+0xf0]
   14000487d:	sub    rax,rdx
   140004880:	sar    rax,0x3
   140004884:	mov    ebp,r12d
   140004887:	cmp    rbp,rax
   14000488a:	jae    0x140004e6f
   140004890:	mov    rcx,QWORD PTR [rdx+rbp*8]
   140004894:	mov    r9d,r14d
   140004897:	mov    r8,QWORD PTR [rip+0x102aa]        # 0x140014b48
   14000489e:	cmp    BYTE PTR [rcx],r13b
   1400048a1:	mov    rcx,QWORD PTR [rip+0xae00]        # 0x14000f6a8
   1400048a8:	je     0x140004a8b
   1400048ae:	mov    edx,0x6e
   1400048b3:	call   QWORD PTR [rip+0x284f]        # 0x140007108
   1400048b9:	mov    rax,QWORD PTR [rbx+0x8]
   1400048bd:	mov    rdx,r14
   1400048c0:	mov    r8,QWORD PTR [rip+0x10281]        # 0x140014b48
   1400048c7:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400048cb:	mov    rax,QWORD PTR [rcx+0xe8]
   1400048d2:	mov    rcx,QWORD PTR [rip+0x10277]        # 0x140014b50
   1400048d9:	mov    r9,QWORD PTR [rax+rbp*8]
   1400048dd:	mov    r9,QWORD PTR [r9+0x18]
   1400048e1:	call   0x140002218
   1400048e6:	mov    rdx,QWORD PTR [rip+0x10263]        # 0x140014b50
   1400048ed:	xor    r8d,r8d
   1400048f0:	mov    rcx,rdi
   1400048f3:	call   0x140002aa8
   1400048f8:	mov    r8,QWORD PTR [rip+0x10249]        # 0x140014b48
   1400048ff:	mov    r9d,r14d
   140004902:	mov    rcx,QWORD PTR [rip+0xad9f]        # 0x14000f6a8
   140004909:	mov    edx,0x71
   14000490e:	call   QWORD PTR [rip+0x27f4]        # 0x140007108
   140004914:	mov    rax,QWORD PTR [rbx+0x8]
   140004918:	mov    rdx,r14
   14000491b:	mov    r8,QWORD PTR [rip+0x10226]        # 0x140014b48
   140004922:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004926:	mov    rax,QWORD PTR [rcx+0xe8]
   14000492d:	mov    rcx,QWORD PTR [rip+0x1021c]        # 0x140014b50
   140004934:	mov    r9,QWORD PTR [rax+rbp*8]
   140004938:	mov    r9,QWORD PTR [r9+0x20]
   14000493c:	call   0x140002218
   140004941:	mov    rdx,QWORD PTR [rip+0x10208]        # 0x140014b50
   140004948:	mov    r8d,r15d
   14000494b:	mov    rcx,rdi
   14000494e:	call   0x140002aa8
   140004953:	mov    r15d,r13d
   140004956:	mov    rax,QWORD PTR [rbx+0x8]
   14000495a:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000495e:	mov    rax,QWORD PTR [rcx+0xe8]
   140004965:	mov    rax,QWORD PTR [rax+rbp*8]
   140004969:	mov    rcx,QWORD PTR [rax+0x30]
   14000496d:	test   rcx,rcx
   140004970:	jne    0x140004977
   140004972:	mov    rax,r13
   140004975:	jmp    0x140004982
   140004977:	mov    rax,QWORD PTR [rax+0x38]
   14000497b:	sub    rax,rcx
   14000497e:	sar    rax,0x3
   140004982:	mov    r14d,r15d
   140004985:	cmp    r14,rax
   140004988:	jae    0x1400049f9
   14000498a:	mov    r8,QWORD PTR [rip+0x101b7]        # 0x140014b48
   140004991:	mov    r9d,0x2800
   140004997:	mov    rcx,QWORD PTR [rip+0xad0a]        # 0x14000f6a8
   14000499e:	mov    edx,0x72
   1400049a3:	call   QWORD PTR [rip+0x275f]        # 0x140007108
   1400049a9:	mov    rax,QWORD PTR [rbx+0x8]
   1400049ad:	mov    edx,0x2800
   1400049b2:	mov    r8,QWORD PTR [rip+0x1018f]        # 0x140014b48
   1400049b9:	mov    rcx,QWORD PTR [rax+rsi*8]
   1400049bd:	mov    rax,QWORD PTR [rcx+0xe8]
   1400049c4:	mov    rcx,QWORD PTR [rax+rbp*8]
   1400049c8:	mov    r9,QWORD PTR [rcx+0x30]
   1400049cc:	mov    rcx,QWORD PTR [rip+0x1017d]        # 0x140014b50
   1400049d3:	mov    r9,QWORD PTR [r9+r14*8]
   1400049d7:	call   0x140002218
   1400049dc:	mov    rdx,QWORD PTR [rip+0x1016d]        # 0x140014b50
   1400049e3:	mov    r8d,0x1
   1400049e9:	mov    rcx,rdi
   1400049ec:	call   0x140002aa8
   1400049f1:	inc    r15d
   1400049f4:	jmp    0x140004956
   1400049f9:	mov    r14d,r13d
   1400049fc:	mov    r15d,0x1
   140004a02:	mov    rax,QWORD PTR [rbx+0x8]
   140004a06:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004a0a:	mov    rax,QWORD PTR [rcx+0xe8]
   140004a11:	mov    rdx,QWORD PTR [rax+rbp*8]
   140004a15:	cmp    QWORD PTR [rdx+0x50],r13
   140004a19:	jne    0x140004a20
   140004a1b:	mov    rax,r13
   140004a1e:	jmp    0x140004a2c
   140004a20:	mov    rax,QWORD PTR [rdx+0x58]
   140004a24:	sub    rax,QWORD PTR [rdx+0x50]
   140004a28:	sar    rax,0x3
   140004a2c:	mov    ecx,r14d
   140004a2f:	cmp    rcx,rax
   140004a32:	jae    0x140004a4c
   140004a34:	mov    rdx,QWORD PTR [rdx+0x50]
   140004a38:	mov    r8d,r15d
   140004a3b:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140004a3f:	mov    rcx,rdi
   140004a42:	call   0x140002aa8
   140004a47:	add    r14d,r15d
   140004a4a:	jmp    0x140004a02
   140004a4c:	mov    rax,QWORD PTR [rbx+0x8]
   140004a50:	lea    r8,[rip+0x2e39]        # 0x140007890
   140004a57:	mov    r9d,r15d
   140004a5a:	mov    rdx,rdi
   140004a5d:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004a61:	mov    rax,QWORD PTR [rcx+0xe8]
   140004a68:	mov    rcx,QWORD PTR [rax+rbp*8]
   140004a6c:	mov    rax,QWORD PTR [rcx+0x10]
   140004a70:	mov    QWORD PTR [rsp+0x28],rax
   140004a75:	mov    rax,QWORD PTR [rcx+0x8]
   140004a79:	mov    rcx,rbx
   140004a7c:	mov    QWORD PTR [rsp+0x20],rax
   140004a81:	call   0x140002b00
   140004a86:	jmp    0x140004e61
   140004a8b:	mov    edx,0xc8
   140004a90:	call   QWORD PTR [rip+0x2672]        # 0x140007108
   140004a96:	mov    rax,QWORD PTR [rbx+0x8]
   140004a9a:	mov    rdx,r14
   140004a9d:	mov    r8,QWORD PTR [rip+0x100a4]        # 0x140014b48
   140004aa4:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004aa8:	mov    rax,QWORD PTR [rcx+0xe8]
   140004aaf:	mov    rcx,QWORD PTR [rip+0x1009a]        # 0x140014b50
   140004ab6:	mov    r9,QWORD PTR [rax+rbp*8]
   140004aba:	mov    r9,QWORD PTR [r9+0x78]
   140004abe:	call   0x140002218
   140004ac3:	mov    rdx,QWORD PTR [rip+0x10086]        # 0x140014b50
   140004aca:	xor    r8d,r8d
   140004acd:	mov    rcx,rdi
   140004ad0:	call   0x140002aa8
   140004ad5:	mov    rax,QWORD PTR [rbx+0x8]
   140004ad9:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004add:	mov    rax,QWORD PTR [rcx+0xe8]
   140004ae4:	mov    rcx,QWORD PTR [rax+rbp*8]
   140004ae8:	mov    rdx,QWORD PTR [rcx+0x90]
   140004aef:	test   rdx,rdx
   140004af2:	jne    0x140004af8
   140004af4:	xor    eax,eax
   140004af6:	jmp    0x140004b06
   140004af8:	mov    rax,QWORD PTR [rcx+0x98]
   140004aff:	sub    rax,rdx
   140004b02:	sar    rax,0x3
   140004b06:	mov    r15d,r13d
   140004b09:	cmp    r15,rax
   140004b0c:	jae    0x140004dbd
   140004b12:	mov    r15,QWORD PTR [rdx+r15*8]
   140004b16:	mov    r9d,r14d
   140004b19:	mov    r8,QWORD PTR [rip+0x10028]        # 0x140014b48
   140004b20:	mov    edx,0xd0
   140004b25:	mov    rcx,QWORD PTR [rip+0xab7c]        # 0x14000f6a8
   140004b2c:	call   QWORD PTR [rip+0x25d6]        # 0x140007108
   140004b32:	mov    r9,QWORD PTR [r15+0x10]
   140004b36:	mov    rdx,r14
   140004b39:	mov    r8,QWORD PTR [rip+0x10008]        # 0x140014b48
   140004b40:	mov    rcx,QWORD PTR [rip+0x10009]        # 0x140014b50
   140004b47:	call   0x140002218
   140004b4c:	mov    rdx,QWORD PTR [rip+0xfffd]        # 0x140014b50
   140004b53:	mov    r8d,0x1
   140004b59:	mov    rcx,rdi
   140004b5c:	call   0x140002aa8
   140004b61:	xor    ecx,ecx
   140004b63:	cmp    QWORD PTR [r15+0x28],0x0
   140004b68:	mov    DWORD PTR [rsp+0x90],ecx
   140004b6f:	jne    0x140004b75
   140004b71:	xor    eax,eax
   140004b73:	jmp    0x140004b81
   140004b75:	mov    rax,QWORD PTR [r15+0x30]
   140004b79:	sub    rax,QWORD PTR [r15+0x28]
   140004b7d:	sar    rax,0x3
   140004b81:	mov    r14d,ecx
   140004b84:	cmp    r14,rax
   140004b87:	jae    0x140004d86
   140004b8d:	mov    rax,QWORD PTR [r15+0x28]
   140004b91:	mov    r9d,0x2800
   140004b97:	mov    r8,QWORD PTR [rip+0xffaa]        # 0x140014b48
   140004b9e:	mov    edx,0xca
   140004ba3:	mov    r14,QWORD PTR [rax+rcx*8]
   140004ba7:	mov    rcx,QWORD PTR [rip+0xaafa]        # 0x14000f6a8
   140004bae:	call   QWORD PTR [rip+0x2554]        # 0x140007108
   140004bb4:	mov    r9,QWORD PTR [r14+0x10]
   140004bb8:	mov    edx,0x2800
   140004bbd:	mov    r8,QWORD PTR [rip+0xff84]        # 0x140014b48
   140004bc4:	mov    rcx,QWORD PTR [rip+0xff85]        # 0x140014b50
   140004bcb:	call   0x140002218
   140004bd0:	mov    rdx,QWORD PTR [rip+0xff79]        # 0x140014b50
   140004bd7:	mov    r8d,0x2
   140004bdd:	mov    rcx,rdi
   140004be0:	call   0x140002aa8
   140004be5:	mov    r8,QWORD PTR [rip+0xff5c]        # 0x140014b48
   140004bec:	mov    r9d,0x2800
   140004bf2:	mov    rcx,QWORD PTR [rip+0xaaaf]        # 0x14000f6a8
   140004bf9:	mov    edx,0xcc
   140004bfe:	call   QWORD PTR [rip+0x2504]        # 0x140007108
   140004c04:	mov    rdx,QWORD PTR [rip+0xff3d]        # 0x140014b48
   140004c0b:	mov    r8d,0x3
   140004c11:	mov    rcx,rdi
   140004c14:	call   0x140002aa8
   140004c19:	xor    r12d,r12d
   140004c1c:	cmp    QWORD PTR [r14+0x30],0x0
   140004c21:	jne    0x140004c27
   140004c23:	xor    eax,eax
   140004c25:	jmp    0x140004c33
   140004c27:	mov    rax,QWORD PTR [r14+0x38]
   140004c2b:	sub    rax,QWORD PTR [r14+0x30]
   140004c2f:	sar    rax,0x3
   140004c33:	mov    ecx,r12d
   140004c36:	cmp    rcx,rax
   140004c39:	jae    0x140004c56
   140004c3b:	mov    rdx,QWORD PTR [r14+0x30]
   140004c3f:	mov    r8d,0x4
   140004c45:	mov    rcx,rdi
   140004c48:	mov    rdx,QWORD PTR [rdx+r12*8]
   140004c4c:	call   0x140002aa8
   140004c51:	inc    r12d
   140004c54:	jmp    0x140004c1c
   140004c56:	mov    rax,QWORD PTR [r14+0x20]
   140004c5a:	lea    r8,[rip+0x2c67]        # 0x1400078c8
   140004c61:	mov    QWORD PTR [rsp+0x28],rax
   140004c66:	mov    r9d,0x4
   140004c6c:	mov    rax,QWORD PTR [r14+0x18]
   140004c70:	mov    rdx,rdi
   140004c73:	mov    rcx,rbx
   140004c76:	mov    QWORD PTR [rsp+0x20],rax
   140004c7b:	call   0x140002b00
   140004c80:	mov    r8,QWORD PTR [rip+0xfec1]        # 0x140014b48
   140004c87:	mov    r9d,0x2800
   140004c8d:	mov    rcx,QWORD PTR [rip+0xaa14]        # 0x14000f6a8
   140004c94:	mov    edx,0xce
   140004c99:	call   QWORD PTR [rip+0x2469]        # 0x140007108
   140004c9f:	mov    rdx,QWORD PTR [rip+0xfea2]        # 0x140014b48
   140004ca6:	mov    r8d,0x3
   140004cac:	mov    rcx,rdi
   140004caf:	call   0x140002aa8
   140004cb4:	xor    r12d,r12d
   140004cb7:	cmp    QWORD PTR [r14+0x60],0x0
   140004cbc:	jne    0x140004cc2
   140004cbe:	xor    eax,eax
   140004cc0:	jmp    0x140004cce
   140004cc2:	mov    rax,QWORD PTR [r14+0x68]
   140004cc6:	sub    rax,QWORD PTR [r14+0x60]
   140004cca:	sar    rax,0x3
   140004cce:	mov    ecx,r12d
   140004cd1:	cmp    rcx,rax
   140004cd4:	jae    0x140004cf1
   140004cd6:	mov    rdx,QWORD PTR [r14+0x60]
   140004cda:	mov    r8d,0x4
   140004ce0:	mov    rcx,rdi
   140004ce3:	mov    rdx,QWORD PTR [rdx+r12*8]
   140004ce7:	call   0x140002aa8
   140004cec:	inc    r12d
   140004cef:	jmp    0x140004cb7
   140004cf1:	mov    rax,QWORD PTR [r14+0x50]
   140004cf5:	lea    r8,[rip+0x2bfc]        # 0x1400078f8
   140004cfc:	mov    QWORD PTR [rsp+0x28],rax
   140004d01:	mov    r9d,0x4
   140004d07:	mov    rax,QWORD PTR [r14+0x48]
   140004d0b:	mov    rdx,rdi
   140004d0e:	mov    rcx,rbx
   140004d11:	mov    QWORD PTR [rsp+0x20],rax
   140004d16:	call   0x140002b00
   140004d1b:	mov    r8,QWORD PTR [rip+0xfe26]        # 0x140014b48
   140004d22:	mov    r9d,0x2800
   140004d28:	mov    rcx,QWORD PTR [rip+0xa979]        # 0x14000f6a8
   140004d2f:	mov    edx,0xcf
   140004d34:	call   QWORD PTR [rip+0x23ce]        # 0x140007108
   140004d3a:	mov    rdx,QWORD PTR [rip+0xfe07]        # 0x140014b48
   140004d41:	mov    r8d,0x3
   140004d47:	mov    rcx,rdi
   140004d4a:	call   0x140002aa8
   140004d4f:	mov    rax,QWORD PTR [r14+0x8]
   140004d53:	lea    r8,[rip+0x2bd6]        # 0x140007930
   140004d5a:	mov    QWORD PTR [rsp+0x28],rax
   140004d5f:	mov    r9d,0x3
   140004d65:	mov    rax,QWORD PTR [r14]
   140004d68:	mov    rdx,rdi
   140004d6b:	mov    rcx,rbx
   140004d6e:	mov    QWORD PTR [rsp+0x20],rax
   140004d73:	call   0x140002b00
   140004d78:	mov    ecx,DWORD PTR [rsp+0x90]
   140004d7f:	inc    ecx
   140004d81:	jmp    0x140004b63
   140004d86:	mov    rax,QWORD PTR [r15+0x8]
   140004d8a:	lea    r8,[rip+0x2bdf]        # 0x140007970
   140004d91:	mov    QWORD PTR [rsp+0x28],rax
   140004d96:	mov    r9d,0x2
   140004d9c:	mov    rax,QWORD PTR [r15]
   140004d9f:	mov    rdx,rdi
   140004da2:	mov    rcx,rbx
   140004da5:	mov    QWORD PTR [rsp+0x20],rax
   140004daa:	call   0x140002b00
   140004daf:	inc    r13d
   140004db2:	mov    r14d,0x2800
   140004db8:	jmp    0x140004ad5
   140004dbd:	xor    r13d,r13d
   140004dc0:	mov    r14d,r13d
   140004dc3:	lea    r15d,[r13+0x1]
   140004dc7:	mov    rax,QWORD PTR [rbx+0x8]
   140004dcb:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004dcf:	mov    rax,QWORD PTR [rcx+0xe8]
   140004dd6:	mov    rdx,QWORD PTR [rax+rbp*8]
   140004dda:	mov    rcx,QWORD PTR [rdx+0xb0]
   140004de1:	test   rcx,rcx
   140004de4:	jne    0x140004deb
   140004de6:	mov    rax,r13
   140004de9:	jmp    0x140004df9
   140004deb:	mov    rax,QWORD PTR [rdx+0xb8]
   140004df2:	sub    rax,rcx
   140004df5:	sar    rax,0x3
   140004df9:	mov    ecx,r14d
   140004dfc:	cmp    rcx,rax
   140004dff:	jae    0x140004e59
   140004e01:	mov    rdx,QWORD PTR [rdx+0xb0]
   140004e08:	mov    r8d,r15d
   140004e0b:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140004e0f:	mov    rcx,rdi
   140004e12:	call   0x140002aa8
   140004e17:	mov    rax,QWORD PTR [rbx+0x8]
   140004e1b:	lea    r8,[rip+0x2b96]        # 0x1400079b8
   140004e22:	mov    r9d,r15d
   140004e25:	mov    rdx,rdi
   140004e28:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004e2c:	mov    rax,QWORD PTR [rcx+0xe8]
   140004e33:	mov    rcx,QWORD PTR [rax+rbp*8]
   140004e37:	mov    rax,QWORD PTR [rcx+0x70]
   140004e3b:	mov    QWORD PTR [rsp+0x28],rax
   140004e40:	mov    rax,QWORD PTR [rcx+0x68]
   140004e44:	mov    rcx,rbx
   140004e47:	mov    QWORD PTR [rsp+0x20],rax
   140004e4c:	call   0x140002b00
   140004e51:	add    r14d,r15d
   140004e54:	jmp    0x140004dc7
   140004e59:	mov    r12d,DWORD PTR [rsp+0x98]
   140004e61:	add    r12d,r15d
   140004e64:	mov    r14d,0x2800
   140004e6a:	jmp    0x140004855
   140004e6f:	mov    ebp,r13d
   140004e72:	mov    rax,QWORD PTR [rbx+0x8]
   140004e76:	mov    rdx,QWORD PTR [rax+rsi*8]
   140004e7a:	mov    rcx,QWORD PTR [rdx+0x108]
   140004e81:	test   rcx,rcx
   140004e84:	jne    0x140004e8b
   140004e86:	mov    rax,r13
   140004e89:	jmp    0x140004e99
   140004e8b:	mov    rax,QWORD PTR [rdx+0x110]
   140004e92:	sub    rax,rcx
   140004e95:	sar    rax,0x3
   140004e99:	mov    ecx,ebp
   140004e9b:	xor    r8d,r8d
   140004e9e:	cmp    rcx,rax
   140004ea1:	jae    0x140004ebb
   140004ea3:	mov    rdx,QWORD PTR [rdx+0x108]
   140004eaa:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140004eae:	mov    rcx,rdi
   140004eb1:	call   0x140002aa8
   140004eb6:	add    ebp,r15d
   140004eb9:	jmp    0x140004e72
   140004ebb:	mov    rax,QWORD PTR [rbx+0x8]
   140004ebf:	mov    rcx,rdi
   140004ec2:	mov    rdx,QWORD PTR [rax+rsi*8]
   140004ec6:	mov    rdx,QWORD PTR [rdx+0x120]
   140004ecd:	call   0x140002aa8
   140004ed2:	mov    rax,QWORD PTR [rbx+0x8]
   140004ed6:	lea    r8,[rip+0x2b0b]        # 0x1400079e8
   140004edd:	xor    r9d,r9d
   140004ee0:	mov    rdx,rdi
   140004ee3:	mov    rcx,QWORD PTR [rax+rsi*8]
   140004ee7:	mov    rax,QWORD PTR [rcx+0x10]
   140004eeb:	mov    QWORD PTR [rsp+0x28],rax
   140004ef0:	mov    rax,QWORD PTR [rcx+0x8]
   140004ef4:	mov    rcx,rbx
   140004ef7:	mov    QWORD PTR [rsp+0x20],rax
   140004efc:	call   0x140002b00
   140004f01:	mov    r8,QWORD PTR [rip+0xfc40]        # 0x140014b48
   140004f08:	mov    r9d,r14d
   140004f0b:	mov    rcx,QWORD PTR [rip+0xa796]        # 0x14000f6a8
   140004f12:	mov    edx,0x65
   140004f17:	call   QWORD PTR [rip+0x21eb]        # 0x140007108
   140004f1d:	mov    rdx,QWORD PTR [rip+0xfc24]        # 0x140014b48
   140004f24:	xor    r8d,r8d
   140004f27:	mov    rcx,rdi
   140004f2a:	call   0x140002aa8
   140004f2f:	xor    r8d,r8d
   140004f32:	lea    rdx,[rip+0x262f]        # 0x140007568
   140004f39:	mov    rcx,rdi
   140004f3c:	call   0x140002aa8
   140004f41:	mov    r15d,DWORD PTR [rsp+0xa0]
   140004f49:	inc    r15d
   140004f4c:	mov    DWORD PTR [rsp+0xa0],r15d
   140004f54:	jmp    0x140004417
   140004f59:	mov    rcx,rdi
   140004f5c:	call   QWORD PTR [rip+0x2146]        # 0x1400070a8
   140004f62:	xor    eax,eax
   140004f64:	add    rsp,0x48
   140004f68:	pop    r15
   140004f6a:	pop    r14
   140004f6c:	pop    r13
   140004f6e:	pop    r12
   140004f70:	pop    rdi
   140004f71:	pop    rsi
   140004f72:	pop    rbp
   140004f73:	pop    rbx
   140004f74:	ret    
   140004f75:	int3   
   140004f76:	int3   
   140004f77:	int3   
   140004f78:	int3   
   140004f79:	int3   
   140004f7a:	int3   
   140004f7b:	int3   
   140004f7c:	mov    r9,QWORD PTR [rcx+0x8]
   140004f80:	mov    r10,rdx
   140004f83:	mov    r8,rcx
   140004f86:	test   r9,r9
   140004f89:	jne    0x140004f8f
   140004f8b:	xor    ecx,ecx
   140004f8d:	jmp    0x140004f9a
   140004f8f:	mov    rcx,QWORD PTR [rcx+0x10]
   140004f93:	sub    rcx,r9
   140004f96:	sar    rcx,0x3
   140004f9a:	test   r9,r9
   140004f9d:	je     0x140004fc2
   140004f9f:	mov    rax,QWORD PTR [r8+0x18]
   140004fa3:	sub    rax,r9
   140004fa6:	sar    rax,0x3
   140004faa:	cmp    rcx,rax
   140004fad:	jae    0x140004fc2
   140004faf:	mov    rcx,QWORD PTR [r8+0x10]
   140004fb3:	mov    rax,QWORD PTR [r10]
   140004fb6:	lea    rdx,[rcx+0x8]
   140004fba:	mov    QWORD PTR [rcx],rax
   140004fbd:	mov    QWORD PTR [r8+0x10],rdx
   140004fc1:	ret    
   140004fc2:	mov    r9,rdx
   140004fc5:	mov    rcx,r8
   140004fc8:	mov    rdx,QWORD PTR [r8+0x10]
   140004fcc:	jmp    0x140004fd8
   140004fd1:	int3   
   140004fd2:	int3   
   140004fd3:	int3   
   140004fd4:	int3   
   140004fd5:	int3   
   140004fd6:	int3   
   140004fd7:	int3   
   140004fd8:	mov    rax,rsp
   140004fdb:	mov    QWORD PTR [rax+0x18],r8
   140004fdf:	mov    QWORD PTR [rax+0x10],rdx
   140004fe3:	push   rdi
   140004fe4:	push   r12
   140004fe6:	push   r13
   140004fe8:	push   r14
   140004fea:	push   r15
   140004fec:	sub    rsp,0x60
   140004ff0:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140004ff8:	mov    QWORD PTR [rax+0x8],rbx
   140004ffc:	mov    QWORD PTR [rax+0x20],rsi
   140005000:	mov    r8,rdx
   140005003:	mov    rsi,rcx
   140005006:	mov    r14d,0x1
   14000500c:	mov    r13,QWORD PTR [r9]
   14000500f:	mov    rcx,QWORD PTR [rcx+0x8]
   140005013:	xor    ebx,ebx
   140005015:	test   rcx,rcx
   140005018:	jne    0x14000501e
   14000501a:	mov    edi,ebx
   14000501c:	jmp    0x140005029
   14000501e:	mov    rdi,QWORD PTR [rsi+0x18]
   140005022:	sub    rdi,rcx
   140005025:	sar    rdi,0x3
   140005029:	test   rcx,rcx
   14000502c:	jne    0x140005033
   14000502e:	mov    rdx,rbx
   140005031:	jmp    0x14000503e
   140005033:	mov    rdx,QWORD PTR [rsi+0x10]
   140005037:	sub    rdx,rcx
   14000503a:	sar    rdx,0x3
   14000503e:	movabs r9,0x1fffffffffffffff
   140005048:	mov    rax,r9
   14000504b:	sub    rax,rdx
   14000504e:	cmp    rax,r14
   140005051:	jae    0x140005059
   140005053:	call   0x140001e2c
   140005058:	int3   
   140005059:	test   rcx,rcx
   14000505c:	jne    0x140005063
   14000505e:	mov    rax,rbx
   140005061:	jmp    0x14000506e
   140005063:	mov    rax,QWORD PTR [rsi+0x10]
   140005067:	sub    rax,rcx
   14000506a:	sar    rax,0x3
   14000506e:	inc    rax
   140005071:	cmp    rdi,rax
   140005074:	jae    0x1400051df
   14000507a:	mov    rax,rdi
   14000507d:	shr    rax,1
   140005080:	sub    r9,rax
   140005083:	cmp    r9,rdi
   140005086:	jae    0x14000508d
   140005088:	mov    rdi,rbx
   14000508b:	jmp    0x140005090
   14000508d:	add    rdi,rax
   140005090:	test   rcx,rcx
   140005093:	jne    0x14000509a
   140005095:	mov    rax,rbx
   140005098:	jmp    0x1400050a5
   14000509a:	mov    rax,QWORD PTR [rsi+0x10]
   14000509e:	sub    rax,rcx
   1400050a1:	sar    rax,0x3
   1400050a5:	inc    rax
   1400050a8:	cmp    rdi,rax
   1400050ab:	jae    0x1400050c5
   1400050ad:	test   rcx,rcx
   1400050b0:	jne    0x1400050b7
   1400050b2:	mov    rdi,rbx
   1400050b5:	jmp    0x1400050c2
   1400050b7:	mov    rdi,QWORD PTR [rsi+0x10]
   1400050bb:	sub    rdi,rcx
   1400050be:	sar    rdi,0x3
   1400050c2:	inc    rdi
   1400050c5:	mov    rcx,rdi
   1400050c8:	test   rdi,rdi
   1400050cb:	jne    0x1400050d2
   1400050cd:	mov    rcx,rbx
   1400050d0:	jmp    0x1400050ff
   1400050d2:	xor    edx,edx
   1400050d4:	or     rax,0xffffffffffffffff
   1400050d8:	div    rdi
   1400050db:	cmp    rax,0x8
   1400050df:	jae    0x1400050ff
   1400050e1:	xor    edx,edx
   1400050e3:	lea    rcx,[rsp+0x48]
   1400050e8:	call   0x140001008
   1400050ed:	lea    rdx,[rip+0x3b84]        # 0x140008c78
   1400050f4:	lea    rcx,[rsp+0x48]
   1400050f9:	call   0x140005b88
   1400050fe:	int3   
   1400050ff:	shl    rcx,0x3
   140005103:	call   0x140001660
   140005108:	mov    r12,rax
   14000510b:	mov    QWORD PTR [rsp+0xa0],rax
   140005113:	mov    r8,QWORD PTR [rsp+0x98]
   14000511b:	mov    rcx,r8
   14000511e:	sub    rcx,QWORD PTR [rsi+0x8]
   140005122:	sar    rcx,0x3
   140005126:	mov    rdx,rcx
   140005129:	shl    rdx,0x3
   14000512d:	lea    r15,[rdx+rax*1]
   140005131:	test   rcx,rcx
   140005134:	je     0x14000514e
   140005136:	mov    r9,rdx
   140005139:	mov    r8,QWORD PTR [rsi+0x8]
   14000513d:	mov    rcx,rax
   140005140:	call   QWORD PTR [rip+0x20ba]        # 0x140007200
   140005146:	mov    r8,QWORD PTR [rsp+0x98]
   14000514e:	lea    rcx,[r15+0x8]
   140005152:	mov    rax,r14
   140005155:	mov    QWORD PTR [rsp+0x20],rax
   14000515a:	mov    QWORD PTR [rsp+0x28],r15
   14000515f:	test   rax,rax
   140005162:	je     0x140005182
   140005164:	mov    QWORD PTR [r15],r13
   140005167:	sub    rax,r14
   14000516a:	mov    QWORD PTR [rsp+0x20],rax
   14000516f:	add    r15,0x8
   140005173:	mov    QWORD PTR [rsp+0x28],r15
   140005178:	mov    r8,QWORD PTR [rsp+0x98]
   140005180:	jmp    0x14000515f
   140005182:	mov    rdx,QWORD PTR [rsi+0x10]
   140005186:	sub    rdx,r8
   140005189:	sar    rdx,0x3
   14000518d:	test   rdx,rdx
   140005190:	je     0x1400051a0
   140005192:	shl    rdx,0x3
   140005196:	mov    r9,rdx
   140005199:	call   QWORD PTR [rip+0x2061]        # 0x140007200
   14000519f:	nop
   1400051a0:	mov    rcx,QWORD PTR [rsi+0x8]
   1400051a4:	test   rcx,rcx
   1400051a7:	jne    0x1400051ae
   1400051a9:	mov    rax,rbx
   1400051ac:	jmp    0x1400051b9
   1400051ae:	mov    rax,QWORD PTR [rsi+0x10]
   1400051b2:	sub    rax,rcx
   1400051b5:	sar    rax,0x3
   1400051b9:	add    r14,rax
   1400051bc:	test   rcx,rcx
   1400051bf:	je     0x1400051c6
   1400051c1:	call   0x1400016a8
   1400051c6:	lea    rax,[r12+rdi*8]
   1400051ca:	mov    QWORD PTR [rsi+0x18],rax
   1400051ce:	lea    rax,[r12+r14*8]
   1400051d2:	mov    QWORD PTR [rsi+0x10],rax
   1400051d6:	mov    QWORD PTR [rsi+0x8],r12
   1400051da:	jmp    0x140005322
   1400051df:	mov    rdi,QWORD PTR [rsi+0x10]
   1400051e3:	mov    rax,rdi
   1400051e6:	sub    rax,r8
   1400051e9:	sar    rax,0x3
   1400051ed:	cmp    rax,r14
   1400051f0:	jae    0x1400052a1
   1400051f6:	lea    rcx,[r8+0x8]
   1400051fa:	sub    rdi,r8
   1400051fd:	sar    rdi,0x3
   140005201:	test   rdi,rdi
   140005204:	je     0x140005217
   140005206:	mov    rdx,rdi
   140005209:	shl    rdx,0x3
   14000520d:	mov    r9,rdx
   140005210:	call   QWORD PTR [rip+0x1fea]        # 0x140007200
   140005216:	nop
   140005217:	mov    rdx,QWORD PTR [rsi+0x10]
   14000521b:	mov    rax,rdx
   14000521e:	sub    rax,QWORD PTR [rsp+0x98]
   140005226:	sar    rax,0x3
   14000522a:	mov    rcx,r14
   14000522d:	sub    rcx,rax
   140005230:	mov    QWORD PTR [rsp+0x30],rcx
   140005235:	mov    QWORD PTR [rsp+0x38],rdx
   14000523a:	test   rcx,rcx
   14000523d:	je     0x140005255
   14000523f:	mov    QWORD PTR [rdx],r13
   140005242:	sub    rcx,r14
   140005245:	mov    QWORD PTR [rsp+0x30],rcx
   14000524a:	add    rdx,0x8
   14000524e:	mov    QWORD PTR [rsp+0x38],rdx
   140005253:	jmp    0x14000523a
   140005255:	mov    rax,r14
   140005258:	shl    rax,0x3
   14000525c:	add    QWORD PTR [rsi+0x10],rax
   140005260:	mov    rcx,QWORD PTR [rsi+0x10]
   140005264:	sub    rcx,rax
   140005267:	mov    rax,QWORD PTR [rsp+0x98]
   14000526f:	mov    rdx,rcx
   140005272:	sub    rdx,rax
   140005275:	add    rdx,0x7
   140005279:	shr    rdx,0x3
   14000527d:	cmp    rax,rcx
   140005280:	cmova  rdx,rbx
   140005284:	test   rdx,rdx
   140005287:	je     0x140005322
   14000528d:	mov    QWORD PTR [rax],r13
   140005290:	lea    rax,[rax+0x8]
   140005294:	add    rbx,r14
   140005297:	cmp    rbx,rdx
   14000529a:	jne    0x14000528d
   14000529c:	jmp    0x140005322
   1400052a1:	lea    r14,[rdi-0x8]
   1400052a5:	mov    rax,rdi
   1400052a8:	sub    rax,r14
   1400052ab:	sar    rax,0x3
   1400052af:	mov    rdx,rax
   1400052b2:	shl    rdx,0x3
   1400052b6:	lea    r15,[rdx+rdi*1]
   1400052ba:	test   rax,rax
   1400052bd:	je     0x1400052d6
   1400052bf:	mov    r9,rdx
   1400052c2:	mov    r8,r14
   1400052c5:	mov    rcx,rdi
   1400052c8:	call   QWORD PTR [rip+0x1f32]        # 0x140007200
   1400052ce:	mov    r8,QWORD PTR [rsp+0x98]
   1400052d6:	mov    QWORD PTR [rsi+0x10],r15
   1400052da:	sub    r14,r8
   1400052dd:	sar    r14,0x3
   1400052e1:	test   r14,r14
   1400052e4:	jle    0x140005304
   1400052e6:	mov    rdx,r14
   1400052e9:	shl    rdx,0x3
   1400052ed:	sub    rdi,rdx
   1400052f0:	mov    r9,rdx
   1400052f3:	mov    rcx,rdi
   1400052f6:	call   QWORD PTR [rip+0x1f04]        # 0x140007200
   1400052fc:	mov    r8,QWORD PTR [rsp+0x98]
   140005304:	lea    rax,[r8+0x8]
   140005308:	jmp    0x14000531d
   14000530a:	mov    QWORD PTR [r8],r13
   14000530d:	add    r8,0x8
   140005311:	mov    rax,QWORD PTR [rsp+0x98]
   140005319:	add    rax,0x8
   14000531d:	cmp    r8,rax
   140005320:	jne    0x14000530a
   140005322:	lea    r11,[rsp+0x60]
   140005327:	mov    rbx,QWORD PTR [r11+0x30]
   14000532b:	mov    rsi,QWORD PTR [r11+0x48]
   14000532f:	mov    rsp,r11
   140005332:	pop    r15
   140005334:	pop    r14
   140005336:	pop    r13
   140005338:	pop    r12
   14000533a:	pop    rdi
   14000533b:	ret    
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	int3   
   140005341:	int3   
   140005342:	int3   
   140005343:	int3   
   140005344:	mov    QWORD PTR [rsp+0x8],rcx
   140005349:	push   rdi
   14000534a:	sub    rsp,0x30
   14000534e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005357:	mov    QWORD PTR [rsp+0x48],rbx
   14000535c:	mov    rbx,rdx
   14000535f:	mov    rdi,rcx
   140005362:	call   0x140005984
   140005367:	nop
   140005368:	lea    rax,[rip+0x21d1]        # 0x140007540
   14000536f:	mov    QWORD PTR [rdi],rax
   140005372:	lea    rcx,[rdi+0x18]
   140005376:	mov    QWORD PTR [rcx+0x20],0xf
   14000537e:	and    QWORD PTR [rcx+0x18],0x0
   140005383:	mov    BYTE PTR [rcx+0x8],0x0
   140005387:	lea    rdx,[rbx+0x18]
   14000538b:	or     r9,0xffffffffffffffff
   14000538f:	xor    r8d,r8d
   140005392:	call   0x140001bf8
   140005397:	nop
   140005398:	lea    rax,[rip+0x1ff1]        # 0x140007390
   14000539f:	mov    QWORD PTR [rdi],rax
   1400053a2:	mov    rax,rdi
   1400053a5:	mov    rbx,QWORD PTR [rsp+0x48]
   1400053aa:	add    rsp,0x30
   1400053ae:	pop    rdi
   1400053af:	ret    
   1400053b0:	int3   
   1400053b1:	int3   
   1400053b2:	int3   
   1400053b3:	int3   
   1400053b4:	int3   
   1400053b5:	int3   
   1400053b6:	int3   
   1400053b7:	int3   
   1400053b8:	mov    rax,rsp
   1400053bb:	mov    QWORD PTR [rax+0x8],rcx
   1400053bf:	push   rdi
   1400053c0:	sub    rsp,0x30
   1400053c4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400053cc:	mov    QWORD PTR [rax+0x10],rbx
   1400053d0:	mov    QWORD PTR [rax+0x18],rsi
   1400053d4:	mov    rdi,rdx
   1400053d7:	mov    rsi,rcx
   1400053da:	call   0x140005978
   1400053df:	nop
   1400053e0:	lea    rax,[rip+0x2159]        # 0x140007540
   1400053e7:	mov    QWORD PTR [rsi],rax
   1400053ea:	xor    r8d,r8d
   1400053ed:	xor    edx,edx
   1400053ef:	lea    rcx,[rsi+0x18]
   1400053f3:	call   0x140001d10
   1400053f8:	or     r9,0xffffffffffffffff
   1400053fc:	xor    r8d,r8d
   1400053ff:	mov    rdx,rdi
   140005402:	lea    rcx,[rsi+0x18]
   140005406:	call   0x140001bf8
   14000540b:	nop
   14000540c:	lea    rax,[rip+0x1f7d]        # 0x140007390
   140005413:	mov    QWORD PTR [rsi],rax
   140005416:	mov    rax,rsi
   140005419:	mov    rbx,QWORD PTR [rsp+0x48]
   14000541e:	mov    rsi,QWORD PTR [rsp+0x50]
   140005423:	add    rsp,0x30
   140005427:	pop    rdi
   140005428:	ret    
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	rex push rbx
   140005432:	sub    rsp,0x20
   140005436:	lea    rax,[rip+0x2103]        # 0x140007540
   14000543d:	mov    rbx,rcx
   140005440:	mov    QWORD PTR [rcx],rax
   140005443:	cmp    QWORD PTR [rcx+0x38],0x10
   140005448:	jb     0x140005453
   14000544a:	mov    rcx,QWORD PTR [rcx+0x20]
   14000544e:	call   0x1400016a8
   140005453:	and    QWORD PTR [rbx+0x30],0x0
   140005458:	mov    rcx,rbx
   14000545b:	mov    QWORD PTR [rbx+0x38],0xf
   140005463:	mov    BYTE PTR [rbx+0x20],0x0
   140005467:	add    rsp,0x20
   14000546b:	pop    rbx
   14000546c:	jmp    0x14000596c
   140005471:	int3   
   140005472:	int3   
   140005473:	int3   
   140005474:	int3   
   140005475:	int3   
   140005476:	int3   
   140005477:	int3   
   140005478:	int3   
   140005479:	int3   
   14000547a:	int3   
   14000547b:	int3   
   14000547c:	int3   
   14000547d:	int3   
   14000547e:	int3   
   14000547f:	int3   
   140005480:	mov    QWORD PTR [rsp+0x8],rbx
   140005485:	push   rdi
   140005486:	sub    rsp,0x20
   14000548a:	lea    rax,[rip+0x20af]        # 0x140007540
   140005491:	mov    edi,edx
   140005493:	mov    QWORD PTR [rcx],rax
   140005496:	mov    rbx,rcx
   140005499:	cmp    QWORD PTR [rcx+0x38],0x10
   14000549e:	jb     0x1400054a9
   1400054a0:	mov    rcx,QWORD PTR [rcx+0x20]
   1400054a4:	call   0x1400016a8
   1400054a9:	and    QWORD PTR [rbx+0x30],0x0
   1400054ae:	mov    rcx,rbx
   1400054b1:	mov    QWORD PTR [rbx+0x38],0xf
   1400054b9:	mov    BYTE PTR [rbx+0x20],0x0
   1400054bd:	call   0x14000596c
   1400054c2:	test   dil,0x1
   1400054c6:	je     0x1400054d0
   1400054c8:	mov    rcx,rbx
   1400054cb:	call   0x1400016a8
   1400054d0:	mov    rax,rbx
   1400054d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400054d8:	add    rsp,0x20
   1400054dc:	pop    rdi
   1400054dd:	ret    
   1400054de:	int3   
   1400054df:	int3   
   1400054e0:	int3   
   1400054e1:	int3   
   1400054e2:	int3   
   1400054e3:	int3   
   1400054e4:	int3   
   1400054e5:	int3   
   1400054e6:	int3   
   1400054e7:	int3   
   1400054e8:	int3   
   1400054e9:	int3   
   1400054ea:	int3   
   1400054eb:	int3   
   1400054ec:	int3   
   1400054ed:	int3   
   1400054ee:	int3   
   1400054ef:	int3   
   1400054f0:	sub    rsp,0x78
   1400054f4:	mov    rax,QWORD PTR [rip+0x4b05]        # 0x14000a000
   1400054fb:	xor    rax,rsp
   1400054fe:	mov    QWORD PTR [rsp+0x60],rax
   140005503:	mov    rdx,rcx
   140005506:	lea    rcx,[rsp+0x20]
   14000550b:	call   0x140005344
   140005510:	lea    rdx,[rip+0x35c9]        # 0x140008ae0
   140005517:	lea    rcx,[rsp+0x20]
   14000551c:	call   0x140005b88
   140005521:	int3   
   140005522:	int3   
   140005523:	int3   
   140005524:	int3   
   140005525:	int3   
   140005526:	int3   
   140005527:	int3   
   140005528:	sub    rsp,0xa8
   14000552f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005538:	mov    rax,QWORD PTR [rip+0x4ac1]        # 0x14000a000
   14000553f:	xor    rax,rsp
   140005542:	mov    QWORD PTR [rsp+0x90],rax
   14000554a:	lea    rdx,[rip+0x1e57]        # 0x1400073a8
   140005551:	lea    rcx,[rsp+0x28]
   140005556:	call   0x140001e98
   14000555b:	nop
   14000555c:	lea    rdx,[rsp+0x28]
   140005561:	lea    rcx,[rsp+0x50]
   140005566:	call   0x1400012d0
   14000556b:	lea    rdx,[rip+0x35d6]        # 0x140008b48
   140005572:	lea    rcx,[rsp+0x50]
   140005577:	call   0x140005b88
   14000557c:	int3   
   14000557d:	int3   
   14000557e:	int3   
   14000557f:	int3   
   140005580:	int3   
   140005581:	int3   
   140005582:	int3   
   140005583:	int3   
   140005584:	sub    rsp,0xa8
   14000558b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005594:	mov    rax,QWORD PTR [rip+0x4a65]        # 0x14000a000
   14000559b:	xor    rax,rsp
   14000559e:	mov    QWORD PTR [rsp+0x90],rax
   1400055a6:	lea    rdx,[rip+0x1e0b]        # 0x1400073b8
   1400055ad:	lea    rcx,[rsp+0x28]
   1400055b2:	call   0x140001e98
   1400055b7:	nop
   1400055b8:	xor    r8d,r8d
   1400055bb:	lea    rdx,[rsp+0x28]
   1400055c0:	lea    rcx,[rsp+0x50]
   1400055c5:	call   0x1400053b8
   1400055ca:	lea    rdx,[rip+0x350f]        # 0x140008ae0
   1400055d1:	lea    rcx,[rsp+0x50]
   1400055d6:	call   0x140005b88
   1400055db:	int3   
   1400055dc:	int3   
   1400055dd:	int3   
   1400055de:	int3   
   1400055df:	int3   
   1400055e0:	int3   
   1400055e1:	int3   
   1400055e2:	int3   
   1400055e3:	int3   
   1400055e4:	int3   
   1400055e5:	int3   
   1400055e6:	int3   
   1400055e7:	int3   
   1400055e8:	int3   
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	sub    rsp,0x28
   1400055f4:	mov    eax,0x5a4d
   1400055f9:	cmp    WORD PTR [rip+0xffffffffffffaa00],ax        # 0x140000000
   140005600:	je     0x140005606
   140005602:	xor    eax,eax
   140005604:	jmp    0x140005655
   140005606:	movsxd rcx,DWORD PTR [rip+0xffffffffffffaa2f]        # 0x14000003c
   14000560d:	lea    rax,[rip+0xffffffffffffa9ec]        # 0x140000000
   140005614:	add    rcx,rax
   140005617:	cmp    DWORD PTR [rcx],0x4550
   14000561d:	jne    0x140005602
   14000561f:	movzx  eax,WORD PTR [rcx+0x18]
   140005623:	cmp    eax,0x10b
   140005628:	je     0x140005644
   14000562a:	cmp    eax,0x20b
   14000562f:	jne    0x140005602
   140005631:	xor    eax,eax
   140005633:	cmp    DWORD PTR [rcx+0x84],0xe
   14000563a:	jbe    0x140005655
   14000563c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005642:	jmp    0x140005652
   140005644:	xor    eax,eax
   140005646:	cmp    DWORD PTR [rcx+0x74],0xe
   14000564a:	jbe    0x140005655
   14000564c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005652:	setne  al
   140005655:	mov    ecx,0x1
   14000565a:	mov    DWORD PTR [rip+0x4ab0],eax        # 0x14000a110
   140005660:	call   0x140005d98
   140005665:	mov    ecx,eax
   140005667:	call   QWORD PTR [rip+0x1ae3]        # 0x140007150
   14000566d:	mov    rcx,QWORD PTR [rip+0x1b64]        # 0x1400071d8
   140005674:	or     rax,0xffffffffffffffff
   140005678:	mov    QWORD PTR [rip+0xf4f1],rax        # 0x140014b70
   14000567f:	mov    QWORD PTR [rip+0xf4f2],rax        # 0x140014b78
   140005686:	mov    eax,DWORD PTR [rip+0x5010]        # 0x14000a69c
   14000568c:	mov    DWORD PTR [rcx],eax
   14000568e:	mov    rcx,QWORD PTR [rip+0x1afb]        # 0x140007190
   140005695:	mov    eax,DWORD PTR [rip+0x4ff5]        # 0x14000a690
   14000569b:	mov    DWORD PTR [rcx],eax
   14000569d:	call   0x140005fb0
   1400056a2:	cmp    DWORD PTR [rip+0x4967],0x0        # 0x14000a010
   1400056a9:	jne    0x1400056b8
   1400056ab:	lea    rcx,[rip+0x8fe]        # 0x140005fb0
   1400056b2:	call   QWORD PTR [rip+0x1ab8]        # 0x140007170
   1400056b8:	xor    eax,eax
   1400056ba:	add    rsp,0x28
   1400056be:	ret    
   1400056bf:	int3   
   1400056c0:	int3   
   1400056c1:	int3   
   1400056c2:	int3   
   1400056c3:	int3   
   1400056c4:	int3   
   1400056c5:	int3   
   1400056c6:	int3   
   1400056c7:	int3   
   1400056c8:	int3   
   1400056c9:	int3   
   1400056ca:	int3   
   1400056cb:	int3   
   1400056cc:	int3   
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	sub    rsp,0x38
   1400056d4:	mov    eax,DWORD PTR [rip+0x4fbe]        # 0x14000a698
   1400056da:	lea    r8,[rip+0x4a27]        # 0x14000a108
   1400056e1:	mov    r9d,DWORD PTR [rip+0x4fac]        # 0x14000a694
   1400056e8:	lea    rdx,[rip+0x4a11]        # 0x14000a100
   1400056ef:	mov    DWORD PTR [rip+0x4a1f],eax        # 0x14000a114
   1400056f5:	lea    rcx,[rip+0x49fc]        # 0x14000a0f8
   1400056fc:	lea    rax,[rip+0x4a11]        # 0x14000a114
   140005703:	mov    QWORD PTR [rsp+0x20],rax
   140005708:	call   QWORD PTR [rip+0x1a3a]        # 0x140007148
   14000570e:	mov    DWORD PTR [rip+0x49e8],eax        # 0x14000a0fc
   140005714:	add    rsp,0x38
   140005718:	ret    
   140005719:	int3   
   14000571a:	int3   
   14000571b:	int3   
   14000571c:	int3   
   14000571d:	int3   
   14000571e:	int3   
   14000571f:	int3   
   140005720:	mov    rax,rsp
   140005723:	mov    QWORD PTR [rax+0x8],rbx
   140005727:	mov    QWORD PTR [rax+0x10],rsi
   14000572b:	mov    QWORD PTR [rax+0x18],rdi
   14000572f:	mov    QWORD PTR [rax+0x20],r12
   140005733:	push   r14
   140005735:	sub    rsp,0x30
   140005739:	mov    rax,QWORD PTR gs:0x30
   140005742:	mov    rbx,QWORD PTR [rax+0x8]
   140005746:	xor    r14d,r14d
   140005749:	xor    eax,eax
   14000574b:	lock cmpxchg QWORD PTR [rip+0xf42c],rbx        # 0x140014b80
   140005754:	je     0x140005772
   140005756:	cmp    rax,rbx
   140005759:	jne    0x140005765
   14000575b:	mov    ebx,0x1
   140005760:	mov    r14d,ebx
   140005763:	jmp    0x140005777
   140005765:	mov    ecx,0x3e8
   14000576a:	call   QWORD PTR [rip+0x1958]        # 0x1400070c8
   140005770:	jmp    0x140005749
   140005772:	mov    ebx,0x1
   140005777:	mov    eax,DWORD PTR [rip+0xf40b]        # 0x140014b88
   14000577d:	cmp    eax,ebx
   14000577f:	jne    0x14000578d
   140005781:	mov    ecx,0x1f
   140005786:	call   0x140005de4
   14000578b:	jmp    0x1400057f6
   14000578d:	mov    eax,DWORD PTR [rip+0xf3f5]        # 0x140014b88
   140005793:	test   eax,eax
   140005795:	jne    0x1400057f0
   140005797:	mov    DWORD PTR [rip+0xf3eb],ebx        # 0x140014b88
   14000579d:	lea    r12,[rip+0x1aec]        # 0x140007290
   1400057a4:	lea    rdi,[rip+0x1acd]        # 0x140007278
   1400057ab:	mov    QWORD PTR [rsp+0x28],rdi
   1400057b0:	mov    DWORD PTR [rsp+0x20],eax
   1400057b4:	cmp    rdi,r12
   1400057b7:	jae    0x1400057e2
   1400057b9:	test   eax,eax
   1400057bb:	jne    0x1400057e6
   1400057bd:	mov    rsi,QWORD PTR [rdi]
   1400057c0:	test   rsi,rsi
   1400057c3:	je     0x1400057d7
   1400057c5:	mov    rcx,rsi
   1400057c8:	mov    rax,QWORD PTR [rip+0x1a81]        # 0x140007250
   1400057cf:	call   rax
   1400057d1:	call   rsi
   1400057d3:	mov    DWORD PTR [rsp+0x20],eax
   1400057d7:	add    rdi,0x8
   1400057db:	mov    QWORD PTR [rsp+0x28],rdi
   1400057e0:	jmp    0x1400057b4
   1400057e2:	test   eax,eax
   1400057e4:	je     0x1400057f6
   1400057e6:	mov    eax,0xff
   1400057eb:	jmp    0x1400058d7
   1400057f0:	mov    DWORD PTR [rip+0x48fe],ebx        # 0x14000a0f4
   1400057f6:	mov    eax,DWORD PTR [rip+0xf38c]        # 0x140014b88
   1400057fc:	cmp    eax,ebx
   1400057fe:	jne    0x14000581d
   140005800:	lea    rdx,[rip+0x1a69]        # 0x140007270
   140005807:	lea    rcx,[rip+0x1a52]        # 0x140007260
   14000580e:	call   0x140005fba
   140005813:	mov    DWORD PTR [rip+0xf36b],0x2        # 0x140014b88
   14000581d:	test   r14d,r14d
   140005820:	jne    0x14000582b
   140005822:	xor    eax,eax
   140005824:	xchg   QWORD PTR [rip+0xf355],rax        # 0x140014b80
   14000582b:	cmp    QWORD PTR [rip+0xf35d],0x0        # 0x140014b90
   140005833:	je     0x140005863
   140005835:	lea    rcx,[rip+0xf354]        # 0x140014b90
   14000583c:	call   0x140005e40
   140005841:	test   eax,eax
   140005843:	je     0x140005863
   140005845:	mov    rbx,QWORD PTR [rip+0xf344]        # 0x140014b90
   14000584c:	mov    rcx,rbx
   14000584f:	mov    rax,QWORD PTR [rip+0x19fa]        # 0x140007250
   140005856:	call   rax
   140005858:	xor    r8d,r8d
   14000585b:	lea    edx,[r8+0x2]
   14000585f:	xor    ecx,ecx
   140005861:	call   rbx
   140005863:	mov    r8,QWORD PTR [rip+0x489e]        # 0x14000a108
   14000586a:	mov    rdx,QWORD PTR [rip+0x488f]        # 0x14000a100
   140005871:	mov    ecx,DWORD PTR [rip+0x4881]        # 0x14000a0f8
   140005877:	call   0x1400016d4
   14000587c:	mov    DWORD PTR [rip+0x486e],eax        # 0x14000a0f0
   140005882:	cmp    DWORD PTR [rip+0x4887],0x0        # 0x14000a110
   140005889:	jne    0x140005893
   14000588b:	mov    ecx,eax
   14000588d:	call   QWORD PTR [rip+0x18c5]        # 0x140007158
   140005893:	cmp    DWORD PTR [rip+0x485a],0x0        # 0x14000a0f4
   14000589a:	jne    0x1400058a8
   14000589c:	call   QWORD PTR [rip+0x18c6]        # 0x140007168
   1400058a2:	mov    eax,DWORD PTR [rip+0x4848]        # 0x14000a0f0
   1400058a8:	jmp    0x1400058d7
   1400058aa:	mov    DWORD PTR [rip+0x4840],eax        # 0x14000a0f0
   1400058b0:	cmp    DWORD PTR [rip+0x4859],0x0        # 0x14000a110
   1400058b7:	jne    0x1400058c2
   1400058b9:	mov    ecx,eax
   1400058bb:	call   QWORD PTR [rip+0x189f]        # 0x140007160
   1400058c1:	int3   
   1400058c2:	cmp    DWORD PTR [rip+0x482b],0x0        # 0x14000a0f4
   1400058c9:	jne    0x1400058d7
   1400058cb:	call   QWORD PTR [rip+0x1897]        # 0x140007168
   1400058d1:	mov    eax,DWORD PTR [rip+0x4819]        # 0x14000a0f0
   1400058d7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400058dc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400058e1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400058e6:	mov    r12,QWORD PTR [rsp+0x58]
   1400058eb:	add    rsp,0x30
   1400058ef:	pop    r14
   1400058f1:	ret    
   1400058f2:	int3   
   1400058f3:	int3   
   1400058f4:	int3   
   1400058f5:	int3   
   1400058f6:	int3   
   1400058f7:	int3   
   1400058f8:	int3   
   1400058f9:	int3   
   1400058fa:	int3   
   1400058fb:	int3   
   1400058fc:	int3   
   1400058fd:	int3   
   1400058fe:	int3   
   1400058ff:	int3   
   140005900:	sub    rsp,0x28
   140005904:	call   0x140005ed4
   140005909:	add    rsp,0x28
   14000590d:	jmp    0x140005720
   140005912:	int3   
   140005913:	int3   
   140005914:	int3   
   140005915:	int3   
   140005916:	int3   
   140005917:	int3   
   140005918:	int3   
   140005919:	int3   
   14000591a:	int3   
   14000591b:	int3   
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	int3   
   140005921:	int3   
   140005922:	int3   
   140005923:	int3   
   140005924:	int3   
   140005925:	int3   
   140005926:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005930:	cmp    rcx,QWORD PTR [rip+0x46c9]        # 0x14000a000
   140005937:	jne    0x140005949
   140005939:	rol    rcx,0x10
   14000593d:	test   cx,0xffff
   140005942:	jne    0x140005945
   140005944:	ret    
   140005945:	ror    rcx,0x10
   140005949:	jmp    0x140005a10
   14000594e:	int3   
   14000594f:	int3   
   140005950:	int3   
   140005951:	int3   
   140005952:	int3   
   140005953:	int3   
   140005954:	int3   
   140005955:	int3   
   140005956:	int3   
   140005957:	int3   
   140005958:	int3   
   140005959:	int3   
   14000595a:	int3   
   14000595b:	int3   
   14000595c:	int3   
   14000595d:	int3   
   14000595e:	int3   
   14000595f:	int3   
   140005960:	jmp    QWORD PTR [rip+0x1862]        # 0x1400071c8
   140005966:	int3   
   140005967:	int3   
   140005968:	int3   
   140005969:	int3   
   14000596a:	int3   
   14000596b:	int3   
   14000596c:	jmp    QWORD PTR [rip+0x184e]        # 0x1400071c0
   140005972:	int3   
   140005973:	int3   
   140005974:	int3   
   140005975:	int3   
   140005976:	int3   
   140005977:	int3   
   140005978:	jmp    QWORD PTR [rip+0x183a]        # 0x1400071b8
   14000597e:	int3   
   14000597f:	int3   
   140005980:	int3   
   140005981:	int3   
   140005982:	int3   
   140005983:	int3   
   140005984:	jmp    QWORD PTR [rip+0x178e]        # 0x140007118
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	mov    QWORD PTR [rsp+0x8],rbx
   140005995:	push   rdi
   140005996:	sub    rsp,0x20
   14000599a:	mov    ebx,edx
   14000599c:	mov    rdi,rcx
   14000599f:	call   QWORD PTR [rip+0x17f3]        # 0x140007198
   1400059a5:	test   bl,0x1
   1400059a8:	je     0x1400059b2
   1400059aa:	mov    rcx,rdi
   1400059ad:	call   0x1400016a8
   1400059b2:	mov    rax,rdi
   1400059b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400059ba:	add    rsp,0x20
   1400059be:	pop    rdi
   1400059bf:	ret    
   1400059c0:	int3   
   1400059c1:	int3   
   1400059c2:	int3   
   1400059c3:	int3   
   1400059c4:	int3   
   1400059c5:	int3   
   1400059c6:	int3   
   1400059c7:	int3   
   1400059c8:	rex push rbx
   1400059ca:	sub    rsp,0x20
   1400059ce:	mov    rbx,rcx
   1400059d1:	xor    ecx,ecx
   1400059d3:	call   QWORD PTR [rip+0x16df]        # 0x1400070b8
   1400059d9:	mov    rcx,rbx
   1400059dc:	call   QWORD PTR [rip+0x16de]        # 0x1400070c0
   1400059e2:	call   QWORD PTR [rip+0x16c8]        # 0x1400070b0
   1400059e8:	mov    rcx,rax
   1400059eb:	mov    edx,0xc0000409
   1400059f0:	add    rsp,0x20
   1400059f4:	pop    rbx
   1400059f5:	rex.W jmp QWORD PTR [rip+0x16fc]        # 0x1400070f8
   1400059fc:	int3   
   1400059fd:	int3   
   1400059fe:	int3   
   1400059ff:	int3   
   140005a00:	int3   
   140005a01:	int3   
   140005a02:	int3   
   140005a03:	int3   
   140005a04:	int3   
   140005a05:	int3   
   140005a06:	int3   
   140005a07:	int3   
   140005a08:	int3   
   140005a09:	int3   
   140005a0a:	int3   
   140005a0b:	int3   
   140005a0c:	int3   
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	mov    QWORD PTR [rsp+0x8],rcx
   140005a15:	sub    rsp,0x88
   140005a1c:	lea    rcx,[rip+0x479d]        # 0x14000a1c0
   140005a23:	call   QWORD PTR [rip+0x17ff]        # 0x140007228
   140005a29:	mov    rax,QWORD PTR [rip+0x4888]        # 0x14000a2b8
   140005a30:	mov    QWORD PTR [rsp+0x48],rax
   140005a35:	xor    r8d,r8d
   140005a38:	lea    rdx,[rsp+0x50]
   140005a3d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005a42:	call   QWORD PTR [rip+0x17d8]        # 0x140007220
   140005a48:	mov    QWORD PTR [rsp+0x40],rax
   140005a4d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005a53:	je     0x140005a97
   140005a55:	mov    QWORD PTR [rsp+0x38],0x0
   140005a5e:	lea    rax,[rsp+0x58]
   140005a63:	mov    QWORD PTR [rsp+0x30],rax
   140005a68:	lea    rax,[rsp+0x60]
   140005a6d:	mov    QWORD PTR [rsp+0x28],rax
   140005a72:	lea    rax,[rip+0x4747]        # 0x14000a1c0
   140005a79:	mov    QWORD PTR [rsp+0x20],rax
   140005a7e:	mov    r9,QWORD PTR [rsp+0x40]
   140005a83:	mov    r8,QWORD PTR [rsp+0x48]
   140005a88:	mov    rdx,QWORD PTR [rsp+0x50]
   140005a8d:	xor    ecx,ecx
   140005a8f:	call   QWORD PTR [rip+0x17ab]        # 0x140007240
   140005a95:	jmp    0x140005aba
   140005a97:	mov    rax,QWORD PTR [rip+0x47ba]        # 0x14000a258
   140005a9e:	mov    rax,QWORD PTR [rax]
   140005aa1:	mov    QWORD PTR [rip+0x4810],rax        # 0x14000a2b8
   140005aa8:	mov    rax,QWORD PTR [rip+0x47a9]        # 0x14000a258
   140005aaf:	add    rax,0x8
   140005ab3:	mov    QWORD PTR [rip+0x479e],rax        # 0x14000a258
   140005aba:	mov    rax,QWORD PTR [rip+0x47f7]        # 0x14000a2b8
   140005ac1:	mov    QWORD PTR [rip+0x4668],rax        # 0x14000a130
   140005ac8:	mov    rax,QWORD PTR [rsp+0x90]
   140005ad0:	mov    QWORD PTR [rip+0x4769],rax        # 0x14000a240
   140005ad7:	mov    DWORD PTR [rip+0x463f],0xc0000409        # 0x14000a120
   140005ae1:	mov    DWORD PTR [rip+0x4639],0x1        # 0x14000a124
   140005aeb:	mov    DWORD PTR [rip+0x4643],0x3        # 0x14000a138
   140005af5:	mov    eax,0x8
   140005afa:	imul   rax,rax,0x0
   140005afe:	lea    rcx,[rip+0x463b]        # 0x14000a140
   140005b05:	mov    QWORD PTR [rcx+rax*1],0x2
   140005b0d:	mov    eax,0x8
   140005b12:	imul   rax,rax,0x1
   140005b16:	lea    rcx,[rip+0x4623]        # 0x14000a140
   140005b1d:	mov    rdx,QWORD PTR [rip+0x44dc]        # 0x14000a000
   140005b24:	mov    QWORD PTR [rcx+rax*1],rdx
   140005b28:	mov    eax,0x8
   140005b2d:	imul   rax,rax,0x2
   140005b31:	lea    rcx,[rip+0x4608]        # 0x14000a140
   140005b38:	mov    rdx,QWORD PTR [rip+0x44c9]        # 0x14000a008
   140005b3f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005b43:	mov    eax,0x8
   140005b48:	imul   rax,rax,0x0
   140005b4c:	mov    rcx,QWORD PTR [rip+0x44ad]        # 0x14000a000
   140005b53:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005b58:	mov    eax,0x8
   140005b5d:	imul   rax,rax,0x1
   140005b61:	mov    rcx,QWORD PTR [rip+0x44a0]        # 0x14000a008
   140005b68:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005b6d:	lea    rcx,[rip+0x1864]        # 0x1400073d8
   140005b74:	call   0x1400059c8
   140005b79:	add    rsp,0x88
   140005b80:	ret    
   140005b81:	int3   
   140005b82:	int3   
   140005b83:	int3   
   140005b84:	int3   
   140005b85:	int3   
   140005b86:	int3   
   140005b87:	int3   
   140005b88:	jmp    QWORD PTR [rip+0x159a]        # 0x140007128
   140005b8e:	int3   
   140005b8f:	int3   
   140005b90:	int3   
   140005b91:	int3   
   140005b92:	int3   
   140005b93:	int3   
   140005b94:	jmp    QWORD PTR [rip+0x1596]        # 0x140007130
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	int3   
   140005b9d:	int3   
   140005b9e:	int3   
   140005b9f:	int3   
   140005ba0:	sub    rsp,0x28
   140005ba4:	mov    r8,QWORD PTR [r9+0x38]
   140005ba8:	mov    rcx,rdx
   140005bab:	mov    rdx,r9
   140005bae:	call   0x140005bc4
   140005bb3:	mov    eax,0x1
   140005bb8:	add    rsp,0x28
   140005bbc:	ret    
   140005bbd:	int3   
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	int3   
   140005bc1:	int3   
   140005bc2:	int3   
   140005bc3:	int3   
   140005bc4:	rex push rbx
   140005bc6:	sub    rsp,0x20
   140005bca:	mov    r11d,DWORD PTR [r8]
   140005bcd:	mov    rbx,rdx
   140005bd0:	and    r11d,0xfffffff8
   140005bd4:	mov    r9,rcx
   140005bd7:	test   BYTE PTR [r8],0x4
   140005bdb:	mov    r10,rcx
   140005bde:	je     0x140005bf3
   140005be0:	mov    eax,DWORD PTR [r8+0x8]
   140005be4:	movsxd r10,DWORD PTR [r8+0x4]
   140005be8:	neg    eax
   140005bea:	add    r10,rcx
   140005bed:	movsxd rcx,eax
   140005bf0:	and    r10,rcx
   140005bf3:	movsxd rax,r11d
   140005bf6:	mov    rdx,QWORD PTR [rax+r10*1]
   140005bfa:	mov    rax,QWORD PTR [rbx+0x10]
   140005bfe:	mov    ecx,DWORD PTR [rax+0x8]
   140005c01:	add    rcx,QWORD PTR [rbx+0x8]
   140005c05:	test   BYTE PTR [rcx+0x3],0xf
   140005c09:	je     0x140005c17
   140005c0b:	movzx  eax,BYTE PTR [rcx+0x3]
   140005c0f:	and    eax,0xfffffff0
   140005c12:	cdqe   
   140005c14:	add    r9,rax
   140005c17:	xor    r9,rdx
   140005c1a:	mov    rcx,r9
   140005c1d:	add    rsp,0x20
   140005c21:	pop    rbx
   140005c22:	jmp    0x140005930
   140005c27:	int3   
   140005c28:	int3   
   140005c29:	int3   
   140005c2a:	int3   
   140005c2b:	int3   
   140005c2c:	int3   
   140005c2d:	int3   
   140005c2e:	int3   
   140005c2f:	int3   
   140005c30:	mov    rax,rsp
   140005c33:	mov    QWORD PTR [rax+0x8],rbx
   140005c37:	mov    QWORD PTR [rax+0x10],rbp
   140005c3b:	mov    QWORD PTR [rax+0x18],rsi
   140005c3f:	mov    QWORD PTR [rax+0x20],rdi
   140005c43:	push   r14
   140005c45:	sub    rsp,0x20
   140005c49:	mov    rbx,QWORD PTR [r9+0x38]
   140005c4d:	mov    rsi,rdx
   140005c50:	mov    r14,r8
   140005c53:	mov    rbp,rcx
   140005c56:	mov    rdx,r9
   140005c59:	mov    rcx,rsi
   140005c5c:	mov    rdi,r9
   140005c5f:	lea    r8,[rbx+0x4]
   140005c63:	call   0x140005bc4
   140005c68:	mov    r11d,DWORD PTR [rbx+0x4]
   140005c6c:	mov    r8d,0x1
   140005c72:	mov    r10d,DWORD PTR [rbp+0x4]
   140005c76:	mov    eax,r11d
   140005c79:	and    eax,r8d
   140005c7c:	and    r11d,0x2
   140005c80:	and    r10b,0x66
   140005c84:	cmove  r11d,eax
   140005c88:	test   r11d,r11d
   140005c8b:	je     0x140005ca1
   140005c8d:	mov    r9,rdi
   140005c90:	mov    r8,r14
   140005c93:	mov    rdx,rsi
   140005c96:	mov    rcx,rbp
   140005c99:	call   0x140005b94
   140005c9e:	mov    r8d,eax
   140005ca1:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ca6:	mov    eax,r8d
   140005ca9:	mov    rbp,QWORD PTR [rsp+0x38]
   140005cae:	mov    rsi,QWORD PTR [rsp+0x40]
   140005cb3:	mov    rdi,QWORD PTR [rsp+0x48]
   140005cb8:	add    rsp,0x20
   140005cbc:	pop    r14
   140005cbe:	ret    
   140005cbf:	int3   
   140005cc0:	int3   
   140005cc1:	int3   
   140005cc2:	int3   
   140005cc3:	int3   
   140005cc4:	int3   
   140005cc5:	int3   
   140005cc6:	int3   
   140005cc7:	int3   
   140005cc8:	int3   
   140005cc9:	int3   
   140005cca:	int3   
   140005ccb:	int3   
   140005ccc:	int3   
   140005ccd:	int3   
   140005cce:	int3   
   140005ccf:	int3   
   140005cd0:	sub    rsp,0x28
   140005cd4:	mov    rax,QWORD PTR [rcx]
   140005cd7:	cmp    DWORD PTR [rax],0xe06d7363
   140005cdd:	jne    0x140005d02
   140005cdf:	cmp    DWORD PTR [rax+0x18],0x4
   140005ce3:	jne    0x140005d02
   140005ce5:	mov    ecx,DWORD PTR [rax+0x20]
   140005ce8:	lea    eax,[rcx-0x19930520]
   140005cee:	cmp    eax,0x2
   140005cf1:	jbe    0x140005cfb
   140005cf3:	cmp    ecx,0x1994000
   140005cf9:	jne    0x140005d02
   140005cfb:	call   QWORD PTR [rip+0x149f]        # 0x1400071a0
   140005d01:	int3   
   140005d02:	xor    eax,eax
   140005d04:	add    rsp,0x28
   140005d08:	ret    
   140005d09:	int3   
   140005d0a:	int3   
   140005d0b:	int3   
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	sub    rsp,0x28
   140005d14:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005cd0
   140005d1b:	call   QWORD PTR [rip+0x1397]        # 0x1400070b8
   140005d21:	xor    eax,eax
   140005d23:	add    rsp,0x28
   140005d27:	ret    
   140005d28:	int3   
   140005d29:	int3   
   140005d2a:	int3   
   140005d2b:	int3   
   140005d2c:	int3   
   140005d2d:	int3   
   140005d2e:	jmp    QWORD PTR [rip+0x1404]        # 0x140007138
   140005d34:	int3   
   140005d35:	int3   
   140005d36:	int3   
   140005d37:	int3   
   140005d38:	int3   
   140005d39:	int3   
   140005d3a:	int3   
   140005d3b:	int3   
   140005d3c:	sub    rsp,0x18
   140005d40:	xor    edx,edx
   140005d42:	lea    rax,[rcx-0x1]
   140005d46:	cmp    rax,0xfffffffffffffffd
   140005d4a:	ja     0x140005d88
   140005d4c:	mov    eax,0x5a4d
   140005d51:	cmp    WORD PTR [rcx],ax
   140005d54:	jne    0x140005d80
   140005d56:	cmp    DWORD PTR [rcx+0x3c],edx
   140005d59:	jl     0x140005d80
   140005d5b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005d62:	jae    0x140005d80
   140005d64:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005d68:	add    rax,rcx
   140005d6b:	mov    QWORD PTR [rsp],rax
   140005d6f:	cmp    DWORD PTR [rax],0x4550
   140005d75:	cmovne rax,rdx
   140005d79:	mov    rdx,rax
   140005d7c:	mov    QWORD PTR [rsp],rax
   140005d80:	jmp    0x140005d88
   140005d82:	xor    edx,edx
   140005d84:	mov    QWORD PTR [rsp],rdx
   140005d88:	mov    rax,rdx
   140005d8b:	add    rsp,0x18
   140005d8f:	ret    
   140005d90:	int3   
   140005d91:	int3   
   140005d92:	int3   
   140005d93:	int3   
   140005d94:	int3   
   140005d95:	int3   
   140005d96:	int3   
   140005d97:	int3   
   140005d98:	rex push rbx
   140005d9a:	sub    rsp,0x20
   140005d9e:	mov    ebx,ecx
   140005da0:	xor    ecx,ecx
   140005da2:	call   QWORD PTR [rip+0x1290]        # 0x140007038
   140005da8:	test   rax,rax
   140005dab:	je     0x140005dd5
   140005dad:	mov    rcx,rax
   140005db0:	call   0x140005d3c
   140005db5:	test   rax,rax
   140005db8:	je     0x140005dd5
   140005dba:	mov    ecx,0x2
   140005dbf:	cmp    WORD PTR [rax+0x5c],cx
   140005dc3:	jne    0x140005dc9
   140005dc5:	mov    eax,ecx
   140005dc7:	jmp    0x140005dd7
   140005dc9:	cmp    WORD PTR [rax+0x5c],0x3
   140005dce:	mov    eax,0x1
   140005dd3:	je     0x140005dd7
   140005dd5:	mov    eax,ebx
   140005dd7:	add    rsp,0x20
   140005ddb:	pop    rbx
   140005ddc:	ret    
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	int3   
   140005de1:	int3   
   140005de2:	int3   
   140005de3:	int3   
   140005de4:	jmp    QWORD PTR [rip+0x1356]        # 0x140007140
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005df4:	xor    r9d,r9d
   140005df7:	add    r8,rcx
   140005dfa:	mov    r10,rdx
   140005dfd:	movzx  eax,WORD PTR [r8+0x14]
   140005e02:	movzx  r11d,WORD PTR [r8+0x6]
   140005e07:	add    rax,0x18
   140005e0b:	add    rax,r8
   140005e0e:	test   r11d,r11d
   140005e11:	je     0x140005e31
   140005e13:	mov    edx,DWORD PTR [rax+0xc]
   140005e16:	cmp    r10,rdx
   140005e19:	jb     0x140005e25
   140005e1b:	mov    ecx,DWORD PTR [rax+0x8]
   140005e1e:	add    ecx,edx
   140005e20:	cmp    r10,rcx
   140005e23:	jb     0x140005e33
   140005e25:	inc    r9d
   140005e28:	add    rax,0x28
   140005e2c:	cmp    r9d,r11d
   140005e2f:	jb     0x140005e13
   140005e31:	xor    eax,eax
   140005e33:	ret    
   140005e34:	int3   
   140005e35:	int3   
   140005e36:	int3   
   140005e37:	int3   
   140005e38:	int3   
   140005e39:	int3   
   140005e3a:	int3   
   140005e3b:	int3   
   140005e3c:	int3   
   140005e3d:	int3   
   140005e3e:	int3   
   140005e3f:	int3   
   140005e40:	mov    QWORD PTR [rsp+0x8],rbx
   140005e45:	push   rdi
   140005e46:	sub    rsp,0x20
   140005e4a:	mov    rbx,rcx
   140005e4d:	lea    rdi,[rip+0xffffffffffffa1ac]        # 0x140000000
   140005e54:	mov    rcx,rdi
   140005e57:	call   0x140005ea0
   140005e5c:	test   eax,eax
   140005e5e:	je     0x140005e82
   140005e60:	sub    rbx,rdi
   140005e63:	mov    rdx,rbx
   140005e66:	mov    rcx,rdi
   140005e69:	call   0x140005df0
   140005e6e:	test   rax,rax
   140005e71:	je     0x140005e82
   140005e73:	mov    eax,DWORD PTR [rax+0x24]
   140005e76:	shr    eax,0x1f
   140005e79:	not    eax
   140005e7b:	and    eax,0x1
   140005e7e:	jmp    0x140005e82
   140005e80:	xor    eax,eax
   140005e82:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e87:	add    rsp,0x20
   140005e8b:	pop    rdi
   140005e8c:	ret    
   140005e8d:	int3   
   140005e8e:	int3   
   140005e8f:	int3   
   140005e90:	int3   
   140005e91:	int3   
   140005e92:	int3   
   140005e93:	int3   
   140005e94:	int3   
   140005e95:	int3   
   140005e96:	int3   
   140005e97:	int3   
   140005e98:	int3   
   140005e99:	int3   
   140005e9a:	int3   
   140005e9b:	int3   
   140005e9c:	int3   
   140005e9d:	int3   
   140005e9e:	int3   
   140005e9f:	int3   
   140005ea0:	mov    rax,rcx
   140005ea3:	mov    ecx,0x5a4d
   140005ea8:	cmp    WORD PTR [rax],cx
   140005eab:	je     0x140005eb0
   140005ead:	xor    eax,eax
   140005eaf:	ret    
   140005eb0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005eb4:	add    rcx,rax
   140005eb7:	xor    eax,eax
   140005eb9:	cmp    DWORD PTR [rcx],0x4550
   140005ebf:	jne    0x140005ecd
   140005ec1:	mov    edx,0x20b
   140005ec6:	cmp    WORD PTR [rcx+0x18],dx
   140005eca:	sete   al
   140005ecd:	ret    
   140005ece:	int3   
   140005ecf:	int3   
   140005ed0:	int3   
   140005ed1:	int3   
   140005ed2:	int3   
   140005ed3:	int3   
   140005ed4:	mov    QWORD PTR [rsp+0x20],rbx
   140005ed9:	push   rbp
   140005eda:	mov    rbp,rsp
   140005edd:	sub    rsp,0x20
   140005ee1:	and    QWORD PTR [rbp+0x18],0x0
   140005ee6:	movabs rbx,0x2b992ddfa232
   140005ef0:	mov    rax,QWORD PTR [rip+0x4109]        # 0x14000a000
   140005ef7:	cmp    rax,rbx
   140005efa:	jne    0x140005f8f
   140005f00:	lea    rcx,[rbp+0x18]
   140005f04:	call   QWORD PTR [rip+0x11de]        # 0x1400070e8
   140005f0a:	mov    rax,QWORD PTR [rbp+0x18]
   140005f0e:	mov    QWORD PTR [rbp+0x10],rax
   140005f12:	call   QWORD PTR [rip+0x11c0]        # 0x1400070d8
   140005f18:	mov    eax,eax
   140005f1a:	xor    QWORD PTR [rbp+0x10],rax
   140005f1e:	call   QWORD PTR [rip+0x11bc]        # 0x1400070e0
   140005f24:	mov    eax,eax
   140005f26:	xor    QWORD PTR [rbp+0x10],rax
   140005f2a:	call   QWORD PTR [rip+0x11c0]        # 0x1400070f0
   140005f30:	mov    eax,eax
   140005f32:	shl    rax,0x18
   140005f36:	xor    QWORD PTR [rbp+0x10],rax
   140005f3a:	call   QWORD PTR [rip+0x11b0]        # 0x1400070f0
   140005f40:	mov    eax,eax
   140005f42:	lea    rcx,[rbp+0x10]
   140005f46:	xor    rax,QWORD PTR [rbp+0x10]
   140005f4a:	xor    rax,rcx
   140005f4d:	lea    rcx,[rbp+0x20]
   140005f51:	mov    QWORD PTR [rbp+0x10],rax
   140005f55:	call   QWORD PTR [rip+0x1175]        # 0x1400070d0
   140005f5b:	mov    eax,DWORD PTR [rbp+0x20]
   140005f5e:	movabs rcx,0xffffffffffff
   140005f68:	shl    rax,0x20
   140005f6c:	xor    rax,QWORD PTR [rbp+0x20]
   140005f70:	xor    rax,QWORD PTR [rbp+0x10]
   140005f74:	and    rax,rcx
   140005f77:	movabs rcx,0x2b992ddfa233
   140005f81:	cmp    rax,rbx
   140005f84:	cmove  rax,rcx
   140005f88:	mov    QWORD PTR [rip+0x4071],rax        # 0x14000a000
   140005f8f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005f94:	not    rax
   140005f97:	mov    QWORD PTR [rip+0x406a],rax        # 0x14000a008
   140005f9e:	add    rsp,0x20
   140005fa2:	pop    rbp
   140005fa3:	ret    
   140005fa4:	int3   
   140005fa5:	int3   
   140005fa6:	int3   
   140005fa7:	int3   
   140005fa8:	int3   
   140005fa9:	int3   
   140005faa:	int3   
   140005fab:	int3   
   140005fac:	int3   
   140005fad:	int3   
   140005fae:	int3   
   140005faf:	int3   
   140005fb0:	xor    eax,eax
   140005fb2:	ret    
   140005fb3:	int3   
   140005fb4:	int3   
   140005fb5:	int3   
   140005fb6:	int3   
   140005fb7:	int3   
   140005fb8:	int3   
   140005fb9:	int3   
   140005fba:	jmp    QWORD PTR [rip+0x11b8]        # 0x140007178
   140005fc0:	int3   
   140005fc1:	int3   
   140005fc2:	int3   
   140005fc3:	int3   
   140005fc4:	int3   
   140005fc5:	int3   
   140005fc6:	jmp    QWORD PTR [rip+0x11b4]        # 0x140007180
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	int3   
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	int3   
   140005fd5:	int3   
   140005fd6:	int3   
   140005fd7:	int3   
   140005fd8:	int3   
   140005fd9:	int3   
   140005fda:	int3   
   140005fdb:	int3   
   140005fdc:	int3   
   140005fdd:	int3   
   140005fde:	int3   
   140005fdf:	int3   
   140005fe0:	ret    0x0
   140005fe3:	int3   
   140005fe4:	int3   
   140005fe5:	int3   
   140005fe6:	int3   
   140005fe7:	int3   
   140005fe8:	int3   
   140005fe9:	int3   
   140005fea:	int3   
   140005feb:	int3   
   140005fec:	int3   
   140005fed:	int3   
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	int3   
   140005ff1:	int3   
   140005ff2:	int3   
   140005ff3:	int3   
   140005ff4:	int3   
   140005ff5:	int3   
   140005ff6:	jmp    QWORD PTR [rip+0x11ac]        # 0x1400071a8
   140005ffc:	int3   
   140005ffd:	int3   
   140005ffe:	int3   
   140005fff:	int3   
   140006000:	int3   
   140006001:	int3   
   140006002:	jmp    QWORD PTR [rip+0x1208]        # 0x140007210
   140006008:	int3   
   140006009:	int3   
   14000600a:	int3   
   14000600b:	int3   
   14000600c:	int3   
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	int3   
   140006011:	int3   
   140006012:	int3   
   140006013:	int3   
   140006014:	int3   
   140006015:	int3   
   140006016:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006020:	jmp    rax
   140006022:	int3   
   140006023:	int3   
   140006024:	int3   
   140006025:	int3   
   140006026:	int3   
   140006027:	int3   
   140006028:	int3   
   140006029:	int3   
   14000602a:	int3   
   14000602b:	int3   
   14000602c:	int3   
   14000602d:	int3   
   14000602e:	int3   
   14000602f:	int3   
   140006030:	int3   
   140006031:	int3   
   140006032:	int3   
   140006033:	int3   
   140006034:	int3   
   140006035:	int3   
   140006036:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006040:	sub    rsp,0x10
   140006044:	mov    QWORD PTR [rsp],r10
   140006048:	mov    QWORD PTR [rsp+0x8],r11
   14000604d:	xor    r11,r11
   140006050:	lea    r10,[rsp+0x18]
   140006055:	sub    r10,rax
   140006058:	cmovb  r10,r11
   14000605c:	mov    r11,QWORD PTR gs:0x10
   140006065:	cmp    r10,r11
   140006068:	jae    0x14000607f
   14000606a:	and    r10w,0xf000
   140006070:	lea    r11,[r11-0x1000]
   140006077:	test   BYTE PTR [r11],r11b
   14000607a:	cmp    r10,r11
   14000607d:	jne    0x140006070
   14000607f:	mov    r10,QWORD PTR [rsp]
   140006083:	mov    r11,QWORD PTR [rsp+0x8]
   140006088:	add    rsp,0x10
   14000608c:	ret    
   14000608d:	int3   
   14000608e:	int3   
   14000608f:	int3   
   140006090:	int3   
   140006091:	int3   
   140006092:	int3   
   140006093:	int3   
   140006094:	int3   
   140006095:	int3   
   140006096:	mov    rcx,QWORD PTR [rdx+0x40]
   14000609d:	rex.W jmp QWORD PTR [rip+0x111c]        # 0x1400071c0
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	mov    rcx,QWORD PTR [rdx+0x40]
   1400060b1:	rex.W jmp QWORD PTR [rip+0x1108]        # 0x1400071c0
   1400060b8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400060bf:	add    rcx,0x18
   1400060c3:	jmp    0x140001b8c
   1400060c8:	int3   
   1400060c9:	int3   
   1400060ca:	int3   
   1400060cb:	int3   
   1400060cc:	int3   
   1400060cd:	int3   
   1400060ce:	mov    rcx,QWORD PTR [rdx+0x40]
   1400060d5:	rex.W jmp QWORD PTR [rip+0x10e4]        # 0x1400071c0
   1400060dc:	mov    rcx,QWORD PTR [rdx+0x40]
   1400060e3:	add    rcx,0x18
   1400060e7:	jmp    0x140001b8c
   1400060ec:	mov    rcx,QWORD PTR [rdx+0x40]
   1400060f3:	jmp    0x140001138
   1400060f8:	int3   
   1400060f9:	int3   
   1400060fa:	int3   
   1400060fb:	int3   
   1400060fc:	int3   
   1400060fd:	int3   
   1400060fe:	mov    rcx,QWORD PTR [rdx+0x40]
   140006105:	jmp    0x140001138
   14000610a:	mov    rcx,QWORD PTR [rdx+0x40]
   140006111:	rex.W jmp QWORD PTR [rip+0x10a8]        # 0x1400071c0
   140006118:	mov    rcx,QWORD PTR [rdx+0x40]
   14000611f:	add    rcx,0x18
   140006123:	jmp    0x140001b8c
   140006128:	int3   
   140006129:	int3   
   14000612a:	int3   
   14000612b:	int3   
   14000612c:	int3   
   14000612d:	int3   
   14000612e:	mov    rcx,QWORD PTR [rdx+0x90]
   140006135:	jmp    0x1400016a8
   14000613a:	mov    rcx,QWORD PTR [rdx+0x90]
   140006141:	jmp    0x140001bc4
   140006146:	int3   
   140006147:	int3   
   140006148:	int3   
   140006149:	int3   
   14000614a:	int3   
   14000614b:	int3   
   14000614c:	lea    rcx,[rdx+0x28]
   140006153:	jmp    0x140001b8c
   140006158:	int3   
   140006159:	int3   
   14000615a:	int3   
   14000615b:	int3   
   14000615c:	int3   
   14000615d:	int3   
   14000615e:	mov    QWORD PTR [rsp+0x10],rdx
   140006163:	push   rbp
   140006164:	sub    rsp,0x20
   140006168:	mov    rbp,rdx
   14000616b:	mov    rcx,QWORD PTR [rbp+0x88]
   140006172:	mov    QWORD PTR [rbp+0x88],rcx
   140006179:	add    rcx,0x1
   14000617d:	jne    0x140006181
   14000617f:	jmp    0x1400061ab
   140006181:	xor    edx,edx
   140006183:	or     rax,0xffffffffffffffff
   140006187:	div    rcx
   14000618a:	cmp    rax,0x1
   14000618e:	jae    0x1400061ab
   140006190:	xor    edx,edx
   140006192:	lea    rcx,[rbp+0x48]
   140006196:	call   0x140001008
   14000619b:	lea    rdx,[rip+0x2ad6]        # 0x140008c78
   1400061a2:	lea    rcx,[rbp+0x48]
   1400061a6:	call   0x140005b88
   1400061ab:	call   0x140001660
   1400061b0:	mov    QWORD PTR [rbp+0x20],rax
   1400061b4:	lea    rax,[rip+0xffffffffffffbdc9]        # 0x140001f84
   1400061bb:	add    rsp,0x20
   1400061bf:	pop    rbp
   1400061c0:	ret    
   1400061c1:	int3   
   1400061c2:	mov    QWORD PTR [rsp+0x10],rdx
   1400061c7:	push   rbp
   1400061c8:	sub    rsp,0x20
   1400061cc:	mov    rbp,rdx
   1400061cf:	xor    r8d,r8d
   1400061d2:	mov    dl,0x1
   1400061d4:	mov    rcx,QWORD PTR [rbp+0x80]
   1400061db:	call   0x140001d10
   1400061e0:	xor    edx,edx
   1400061e2:	xor    ecx,ecx
   1400061e4:	call   0x140005b88
   1400061e9:	nop
   1400061ea:	int3   
   1400061eb:	int3   
   1400061ec:	int3   
   1400061ed:	int3   
   1400061ee:	int3   
   1400061ef:	int3   
   1400061f0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400061f7:	add    rcx,0x20
   1400061fb:	jmp    0x140001bc4
   140006200:	mov    rcx,QWORD PTR [rdx+0x40]
   140006207:	add    rcx,0x40
   14000620b:	jmp    0x140001bc4
   140006210:	int3   
   140006211:	int3   
   140006212:	int3   
   140006213:	int3   
   140006214:	int3   
   140006215:	int3   
   140006216:	mov    rcx,QWORD PTR [rdx+0x88]
   14000621d:	jmp    0x1400016a8
   140006222:	mov    rcx,QWORD PTR [rdx+0x90]
   140006229:	add    rcx,0x20
   14000622d:	jmp    0x140001bc4
   140006232:	mov    rcx,QWORD PTR [rdx+0x90]
   140006239:	add    rcx,0x40
   14000623d:	jmp    0x140001bc4
   140006242:	mov    rcx,QWORD PTR [rdx+0x88]
   140006249:	add    rcx,0x8
   14000624d:	jmp    0x140002298
   140006252:	mov    rcx,QWORD PTR [rdx+0x90]
   140006259:	add    rcx,0x20
   14000625d:	jmp    0x140001bc4
   140006262:	mov    rcx,QWORD PTR [rdx+0x90]
   140006269:	add    rcx,0x40
   14000626d:	jmp    0x140001bc4
   140006272:	mov    rcx,QWORD PTR [rdx+0x88]
   140006279:	add    rcx,0x68
   14000627d:	jmp    0x140002298
   140006282:	mov    rcx,QWORD PTR [rdx+0x88]
   140006289:	jmp    0x1400016a8
   14000628e:	mov    rcx,QWORD PTR [rdx+0x88]
   140006295:	add    rcx,0x20
   140006299:	jmp    0x140001bc4
   14000629e:	mov    rcx,QWORD PTR [rdx+0x88]
   1400062a5:	jmp    0x1400016a8
   1400062aa:	mov    rcx,QWORD PTR [rdx+0x88]
   1400062b1:	add    rcx,0x28
   1400062b5:	jmp    0x140001bc4
   1400062ba:	mov    rcx,QWORD PTR [rdx+0x88]
   1400062c1:	add    rcx,0x58
   1400062c5:	jmp    0x140001bc4
   1400062ca:	mov    rcx,QWORD PTR [rdx+0x80]
   1400062d1:	jmp    0x1400016a8
   1400062d6:	mov    rcx,QWORD PTR [rdx+0x88]
   1400062dd:	add    rcx,0x20
   1400062e1:	jmp    0x140001bc4
   1400062e6:	mov    rcx,QWORD PTR [rdx+0x88]
   1400062ed:	add    rcx,0x40
   1400062f1:	jmp    0x140001bc4
   1400062f6:	mov    rcx,QWORD PTR [rdx+0x80]
   1400062fd:	add    rcx,0x8
   140006301:	jmp    0x140002298
   140006306:	mov    rcx,QWORD PTR [rdx+0x88]
   14000630d:	add    rcx,0x20
   140006311:	jmp    0x140001bc4
   140006316:	mov    rcx,QWORD PTR [rdx+0x88]
   14000631d:	add    rcx,0x40
   140006321:	jmp    0x140001bc4
   140006326:	mov    rcx,QWORD PTR [rdx+0x80]
   14000632d:	add    rcx,0x68
   140006331:	jmp    0x140002298
   140006336:	mov    rcx,QWORD PTR [rdx+0x80]
   14000633d:	jmp    0x1400016a8
   140006342:	mov    rcx,QWORD PTR [rdx+0x88]
   140006349:	add    rcx,0x20
   14000634d:	jmp    0x140001bc4
   140006352:	mov    rcx,QWORD PTR [rdx+0x88]
   140006359:	add    rcx,0x40
   14000635d:	jmp    0x140001bc4
   140006362:	mov    rcx,QWORD PTR [rdx+0x80]
   140006369:	add    rcx,0x8
   14000636d:	jmp    0x140002298
   140006372:	mov    rcx,QWORD PTR [rdx+0x88]
   140006379:	add    rcx,0x20
   14000637d:	jmp    0x140001bc4
   140006382:	mov    rcx,QWORD PTR [rdx+0x88]
   140006389:	add    rcx,0x40
   14000638d:	jmp    0x140001bc4
   140006392:	mov    rcx,QWORD PTR [rdx+0x80]
   140006399:	add    rcx,0x68
   14000639d:	jmp    0x140002298
   1400063a2:	mov    rcx,QWORD PTR [rdx+0x80]
   1400063a9:	jmp    0x1400016a8
   1400063ae:	mov    rcx,QWORD PTR [rdx+0x80]
   1400063b5:	add    rcx,0x20
   1400063b9:	jmp    0x140001bc4
   1400063be:	mov    rcx,QWORD PTR [rdx+0x80]
   1400063c5:	jmp    0x1400016a8
   1400063ca:	mov    rcx,QWORD PTR [rdx+0x80]
   1400063d1:	add    rcx,0x28
   1400063d5:	jmp    0x140001bc4
   1400063da:	mov    rcx,QWORD PTR [rdx+0x80]
   1400063e1:	add    rcx,0x58
   1400063e5:	jmp    0x140001bc4
   1400063ea:	int3   
   1400063eb:	int3   
   1400063ec:	int3   
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400063f7:	jmp    0x1400016a8
   1400063fc:	mov    rcx,QWORD PTR [rdx+0x50]
   140006403:	add    rcx,0x60
   140006407:	jmp    0x140001bc4
   14000640c:	mov    rcx,QWORD PTR [rdx+0x28]
   140006413:	add    rcx,0x20
   140006417:	jmp    0x140001bc4
   14000641c:	mov    rcx,QWORD PTR [rdx+0x28]
   140006423:	add    rcx,0x40
   140006427:	jmp    0x140001bc4
   14000642c:	mov    rcx,QWORD PTR [rdx+0x50]
   140006433:	add    rcx,0x80
   14000643a:	jmp    0x140002298
   14000643f:	mov    rcx,QWORD PTR [rdx+0x50]
   140006446:	add    rcx,0xe0
   14000644d:	jmp    0x140001bc4
   140006452:	mov    rcx,QWORD PTR [rdx+0x50]
   140006459:	add    rcx,0x100
   140006460:	jmp    0x140001bc4
   140006465:	int3   
   140006466:	int3   
   140006467:	int3   
   140006468:	int3   
   140006469:	int3   
   14000646a:	int3   
   14000646b:	mov    QWORD PTR [rsp+0x10],rdx
   140006470:	push   rbp
   140006471:	sub    rsp,0x20
   140006475:	mov    rbp,rdx
   140006478:	mov    rdx,QWORD PTR [rbp+0xa0]
   14000647f:	call   0x140001e88
   140006484:	xor    edx,edx
   140006486:	xor    ecx,ecx
   140006488:	call   0x140005b88
   14000648d:	nop
   14000648e:	mov    QWORD PTR [rsp+0x10],rdx
   140006493:	push   rbp
   140006494:	sub    rsp,0x20
   140006498:	mov    rbp,rdx
   14000649b:	xor    edx,edx
   14000649d:	xor    ecx,ecx
   14000649f:	call   0x140005b88
   1400064a4:	nop
   1400064a5:	int3   
   1400064a6:	int3   
   1400064a7:	int3   
   1400064a8:	int3   
   1400064a9:	int3   
   1400064aa:	int3   
   1400064ab:	mov    rcx,QWORD PTR [rdx+0x40]
   1400064b2:	jmp    0x14000596c
   1400064b7:	int3   
   1400064b8:	int3   
   1400064b9:	int3   
   1400064ba:	int3   
   1400064bb:	int3   
   1400064bc:	int3   
   1400064bd:	rex push rbp
   1400064bf:	sub    rsp,0x20
   1400064c3:	mov    rbp,rdx
   1400064c6:	mov    rax,QWORD PTR [rcx]
   1400064c9:	mov    rdx,rcx
   1400064cc:	mov    ecx,DWORD PTR [rax]
   1400064ce:	call   0x140005d2e
   1400064d3:	nop
   1400064d4:	add    rsp,0x20
   1400064d8:	pop    rbp
   1400064d9:	ret    
   1400064da:	int3   
   1400064db:	int3   
   1400064dc:	int3   
   1400064dd:	int3   
   1400064de:	int3   
   1400064df:	int3   
   1400064e0:	int3   
   1400064e1:	int3   
   1400064e2:	int3   
   1400064e3:	int3   
   1400064e4:	int3   
   1400064e5:	int3   
   1400064e6:	int3   
   1400064e7:	int3   
   1400064e8:	int3   
   1400064e9:	int3   
   1400064ea:	int3   
   1400064eb:	int3   
   1400064ec:	int3   
   1400064ed:	int3   
   1400064ee:	int3   
   1400064ef:	int3   
   1400064f0:	rex push rbp
   1400064f2:	sub    rsp,0x20
   1400064f6:	mov    rbp,rdx
   1400064f9:	mov    rax,QWORD PTR [rcx]
   1400064fc:	xor    ecx,ecx
   1400064fe:	cmp    DWORD PTR [rax],0xc0000005
   140006504:	sete   cl
   140006507:	mov    eax,ecx
   140006509:	add    rsp,0x20
   14000650d:	pop    rbp
   14000650e:	ret    
   14000650f:	int3   

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	jo     0x140006f91
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	or     BYTE PTR [rdi+0x0],0x0
   14000700f:	add    BYTE PTR [rax+0x8f],dl
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rsi+0x8f],bl
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   140007026:	add    BYTE PTR [rax],al
   140007028:	(bad)  
   140007029:	pop    QWORD PTR [rax]
	...
   140007037:	add    al,cl
   140007039:	pop    QWORD PTR [rax]
   14000703b:	add    BYTE PTR [rax],al
   14000703d:	add    BYTE PTR [rax],al
   14000703f:	add    ah,bl
   140007041:	pop    QWORD PTR [rax]
   140007043:	add    BYTE PTR [rax],al
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    al,ch
   140007049:	pop    QWORD PTR [rax]
   14000704b:	add    BYTE PTR [rax],al
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	add    dh,bh
   140007051:	pop    QWORD PTR [rax]
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rax],dl
   140007059:	nop
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	add    BYTE PTR [rax],al
   14000705e:	add    BYTE PTR [rax],al
   140007060:	es nop
   140007062:	add    BYTE PTR [rax],al
   140007064:	add    BYTE PTR [rax],al
   140007066:	add    BYTE PTR [rax],al
   140007068:	ss nop
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	add    BYTE PTR [rax],al
   14000706e:	add    BYTE PTR [rax],al
   140007070:	push   rsi
   140007071:	nop
   140007072:	add    BYTE PTR [rax],al
   140007074:	add    BYTE PTR [rax],al
   140007076:	add    BYTE PTR [rax],al
   140007078:	ins    BYTE PTR es:[rdi],dx
   140007079:	nop
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	test   BYTE PTR [rax+0x0],dl
   140007086:	add    BYTE PTR [rax],al
   140007088:	xchg   esi,eax
   140007089:	nop
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	add    BYTE PTR [rax],al
   14000708e:	add    BYTE PTR [rax],al
   140007090:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007091:	nop
   140007092:	add    BYTE PTR [rax],al
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	mov    al,0x90
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	rcl    BYTE PTR [rax+0x0],0x0
   1400070a7:	add    al,bl
   1400070a9:	nop
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    BYTE PTR [rax],al
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	mov    edx,0x93
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    BYTE PTR [rbx+rdx*4+0x0],bl
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	adc    BYTE PTR [rbx+0x0],0x0
   1400070c7:	add    BYTE PTR [rax-0x6d],bh
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	add    BYTE PTR [rax],al
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	loop   0x140007065
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    BYTE PTR [rax],al
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	cld    
   1400070d9:	xchg   ebx,eax
   1400070da:	add    BYTE PTR [rax],al
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	adc    dl,BYTE PTR [rax+rax*1+0x0]
   1400070e7:	add    BYTE PTR [rax],ch
   1400070e9:	xchg   esp,eax
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	rex.X xchg esp,eax
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    BYTE PTR [rax],al
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	(bad)  
   1400070f9:	xchg   ebx,eax
	...
   140007106:	add    BYTE PTR [rax],al
   140007108:	pop    rsi
   140007109:	xchg   ebx,eax
	...
   140007116:	add    BYTE PTR [rax],al
   140007118:	sahf   
   140007119:	xchg   ecx,eax
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	add    BYTE PTR [rax],al
   14000711e:	add    BYTE PTR [rax],al
   140007120:	fcom   QWORD PTR [rcx+0x0]
   140007126:	add    BYTE PTR [rax],al
   140007128:	out    0x91,al
   14000712a:	add    BYTE PTR [rax],al
   14000712c:	add    BYTE PTR [rax],al
   14000712e:	add    BYTE PTR [rax],al
   140007130:	cld    
   140007131:	xchg   ecx,eax
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    BYTE PTR [rax],al
   140007136:	add    BYTE PTR [rax],al
   140007138:	adc    dl,BYTE PTR [rdx+0x0]
   14000713e:	add    BYTE PTR [rax],al
   140007140:	and    BYTE PTR [rdx+0x0],dl
   140007146:	add    BYTE PTR [rax],al
   140007148:	cs xchg edx,eax
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	add    BYTE PTR [rax],al
   14000714e:	add    BYTE PTR [rax],al
   140007150:	rex xchg edx,eax
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	push   rdx
   140007159:	xchg   edx,eax
   14000715a:	add    BYTE PTR [rax],al
   14000715c:	add    BYTE PTR [rax],al
   14000715e:	add    BYTE PTR [rax],al
   140007160:	pop    rdx
   140007161:	xchg   edx,eax
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	(bad)  
   14000716a:	add    BYTE PTR [rax],al
   14000716c:	add    BYTE PTR [rax],al
   14000716e:	add    BYTE PTR [rax],al
   140007170:	ins    BYTE PTR es:[rdi],dx
   140007171:	xchg   edx,eax
   140007172:	add    BYTE PTR [rax],al
   140007174:	add    BYTE PTR [rax],al
   140007176:	add    BYTE PTR [rax],al
   140007178:	adc    BYTE PTR [rdx+0x0],0x0
   14000717f:	add    BYTE PTR [rdx+rdx*4+0x0],cl
   140007186:	add    BYTE PTR [rax],al
   140007188:	enter  0x91,0x0
   14000718c:	add    BYTE PTR [rax],al
   14000718e:	add    BYTE PTR [rax],al
   140007190:	scas   al,BYTE PTR es:[rdi]
   140007191:	xchg   edx,eax
   140007192:	add    BYTE PTR [rax],al
   140007194:	add    BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	(bad)  
   140007199:	xchg   edx,eax
   14000719a:	add    BYTE PTR [rax],al
   14000719c:	add    BYTE PTR [rax],al
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	ficom  WORD PTR [rdx+0x0]
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	push   rdx
   1400071a9:	xchg   esp,eax
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	add    BYTE PTR [rax],al
   1400071ae:	add    BYTE PTR [rax],al
   1400071b0:	jle    0x140007143
   1400071b2:	add    BYTE PTR [rax],al
   1400071b4:	add    BYTE PTR [rax],al
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	xchg   cx,ax
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	rex.WRX xchg rcx,rax
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	xor    BYTE PTR [rcx+0x0],dl
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	and    dl,BYTE PTR [rcx+0x0]
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400071d9:	xchg   edx,eax
   1400071da:	add    BYTE PTR [rax],al
   1400071dc:	add    BYTE PTR [rax],al
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	mov    esp,0x91
   1400071e5:	add    BYTE PTR [rax],al
   1400071e7:	add    BYTE PTR [rax],bl
   1400071e9:	xchg   ecx,eax
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	add    BYTE PTR [rax],al
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	or     al,0x91
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	add    BYTE PTR [rax],al
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	add    BYTE PTR [rcx+0x0],dl
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	hlt    
   140007201:	nop
   140007202:	add    BYTE PTR [rax],al
   140007204:	add    BYTE PTR [rax],al
   140007206:	add    BYTE PTR [rax],al
   140007208:	rcl    BYTE PTR [rcx+0x0],cl
   14000720e:	add    BYTE PTR [rax],al
   140007210:	pop    rsp
   140007211:	xchg   esp,eax
	...
   14000721e:	add    BYTE PTR [rax],al
   140007220:	es xchg ebx,eax
   140007222:	add    BYTE PTR [rax],al
   140007224:	add    BYTE PTR [rax],al
   140007226:	add    BYTE PTR [rax],al
   140007228:	adc    dl,BYTE PTR [rbx+0x0]
   14000722e:	add    BYTE PTR [rax],al
   140007230:	add    BYTE PTR [rbx+0x0],dl
   140007236:	add    BYTE PTR [rax],al
   140007238:	repnz xchg edx,eax
   14000723a:	add    BYTE PTR [rax],al
   14000723c:	add    BYTE PTR [rax],al
   14000723e:	add    BYTE PTR [rax],al
   140007240:	rex xchg ebx,eax
	...
   14000724e:	add    BYTE PTR [rax],al
   140007250:	loopne 0x1400072b1
   140007252:	add    BYTE PTR [rax+0x1],al
   140007255:	add    BYTE PTR [rax],al
   140007257:	add    BYTE PTR [rax],ah
   140007259:	(bad)  
   14000725a:	add    BYTE PTR [rax+0x1],al
	...
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    al,dl
   140007269:	push   rsi
   14000726a:	add    BYTE PTR [rax+0x1],al
	...
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    al,dh
   140007281:	push   rbp
   140007282:	add    BYTE PTR [rax+0x1],al
   140007285:	add    BYTE PTR [rax],al
   140007287:	add    BYTE PTR [rax],dl
   140007289:	pop    rbp
   14000728a:	add    BYTE PTR [rax+0x1],al
	...
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    BYTE PTR [rax-0x4ffffff0],al
   14000729d:	adc    BYTE PTR [rax],al
   14000729f:	add    BYTE PTR [rax-0x4fffffef],dl
   1400072a5:	adc    DWORD PTR [rax],eax
   1400072a7:	add    al,dh
   1400072a9:	adc    DWORD PTR [rax],eax
   1400072ab:	add    BYTE PTR [rax-0xfffffed],dh
   1400072b1:	adc    eax,DWORD PTR [rax]
   1400072b3:	add    BYTE PTR [rax-0x4fffffd9],al
   1400072b9:	sub    DWORD PTR [rax],eax
   1400072bb:	add    BYTE PTR [rax-0xfffffac],al
   1400072c1:	push   rsp
   1400072c2:	add    BYTE PTR [rax],al
   1400072c4:	lock push rbp
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	rcl    BYTE PTR [rsi+0x0],1
   1400072cb:	add    BYTE PTR [rax],al
   1400072cd:	pop    rcx
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	(bad)  
   1400072d1:	pop    rcx
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	nop
   1400072d5:	pop    rcx
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	adc    BYTE PTR [rdx+0x0],bl
   1400072db:	add    al,dl
   1400072dd:	pop    rsp
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	adc    BYTE PTR [rbp+0x0],bl
   1400072e3:	add    BYTE PTR [rax-0x1fffffa1],dh
   1400072e9:	pop    rdi
   1400072ea:	add    BYTE PTR [rax],al
   1400072ec:	add    BYTE PTR [rax],al
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140018c89
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	cmp    BYTE PTR [rbx+0x0],al
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	add    BYTE PTR [rax],al
   140007302:	add    BYTE PTR [rax],al
   140007304:	add    al,BYTE PTR [rax]
   140007306:	add    BYTE PTR [rax],al
   140007308:	or     BYTE PTR [rcx+0x200000],0x0
   14000730f:	add    BYTE PTR [rax],al
   140007311:	add    BYTE PTR [rax],al
   140007313:	add    BYTE PTR [rcx],al
   140007315:	add    BYTE PTR [rax],al
   140007317:	add    BYTE PTR [rdx],ah
   140007319:	add    eax,0x11993
   14000731e:	add    BYTE PTR [rax],al
   140007320:	cmp    BYTE PTR [rbx+0x0],al
   140007326:	add    BYTE PTR [rax],al
   140007328:	add    BYTE PTR [rax],al
   14000732a:	add    BYTE PTR [rax],al
   14000732c:	add    al,BYTE PTR [rax]
   14000732e:	add    BYTE PTR [rax],al
   140007330:	test   al,0x89
   140007332:	add    BYTE PTR [rax],al
   140007334:	and    BYTE PTR [rax],al
   140007336:	add    BYTE PTR [rax],al
   140007338:	add    BYTE PTR [rax],al
   14000733a:	add    BYTE PTR [rax],al
   14000733c:	add    DWORD PTR [rax],eax
   14000733e:	add    BYTE PTR [rax],al
   140007340:	and    al,BYTE PTR [rip+0x11993]        # 0x140018cd9
   140007346:	add    BYTE PTR [rax],al
   140007348:	cld    
   140007349:	mov    DWORD PTR [rax],eax
	...
   140007353:	add    BYTE PTR [rbx],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    al,dl
   140007359:	mov    DWORD PTR [rax],eax
   14000735b:	add    BYTE PTR [rax],ah
   14000735d:	add    BYTE PTR [rax],al
   14000735f:	add    BYTE PTR [rax],al
   140007361:	add    BYTE PTR [rax],al
   140007363:	add    BYTE PTR [rcx],al
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    BYTE PTR [rdx],ah
   140007369:	add    eax,0x11993
   14000736e:	add    BYTE PTR [rax],al
   140007370:	cld    
   140007371:	mov    DWORD PTR [rax],eax
	...
   14000737b:	add    BYTE PTR [rbx],al
   14000737d:	add    BYTE PTR [rax],al
   14000737f:	add    BYTE PTR [rax],cl
   140007381:	mov    al,BYTE PTR [rax]
   140007383:	add    BYTE PTR [rax],ah
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rax],al
   140007389:	add    BYTE PTR [rax],al
   14000738b:	add    BYTE PTR [rcx],al
   14000738d:	add    BYTE PTR [rax],al
   14000738f:	add    BYTE PTR [rax+0x1400054],al
   140007395:	add    BYTE PTR [rax],al
   140007397:	add    BYTE PTR [rax+0x1400011],dl
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    al,dh
   1400073a1:	push   rsp
   1400073a2:	add    BYTE PTR [rax+0x1],al
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rbx+0x74],dh
   1400073aa:	jb     0x140007415
   1400073ac:	outs   dx,BYTE PTR ds:[rsi]
   1400073ad:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   1400073b2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400073b6:	add    BYTE PTR [ecx+0x6e],ch
   1400073ba:	jbe    0x14000741d
   1400073bc:	ins    BYTE PTR es:[rdi],dx
   1400073bd:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   1400073c5:	and    BYTE PTR [eax+0x6f],dh
   1400073c9:	jae    0x140007434
   1400073cb:	je     0x140007436
   1400073cd:	outs   dx,DWORD PTR ds:[rsi]
   1400073ce:	outs   dx,BYTE PTR ds:[rsi]
   1400073cf:	add    BYTE PTR [rax+0x1400059],dl
   1400073d5:	add    BYTE PTR [rax],al
   1400073d7:	add    BYTE PTR [rax],ah
   1400073d9:	movabs eax,ds:0xa1c0000000014000
   1400073e2:	add    BYTE PTR [rax+0x1],al
   1400073e5:	add    BYTE PTR [rax],al
   1400073e7:	add    BYTE PTR [rip+0x2500000a],cl        # 0x1650073f7
   1400073ed:	push   rbx
   1400073ee:	or     eax,0xa
   1400073f3:	add    BYTE PTR [rax],al
   1400073f5:	add    BYTE PTR [rax],al
   1400073f7:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400073fb:	add    BYTE PTR [rcx+0x0],ah
   1400073fe:	movsxd eax,DWORD PTR [rax]
   140007400:	add    BYTE PTR gs:[rax],al
   140007403:	add    BYTE PTR [rax],al
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rax+0x0],dh
   14000740a:	(bad)  
   14000740b:	add    BYTE PTR [rdx+0x0],dh
   14000740e:	jae    0x140007410
   140007410:	add    BYTE PTR gs:[rax],al
   140007413:	add    BYTE PTR [rax],al
   140007415:	add    BYTE PTR [rax],al
   140007417:	add    BYTE PTR [rbx+0x0],dh
   14000741a:	je     0x14000741c
   14000741c:	outs   dx,DWORD PTR ds:[rsi]
   14000741d:	add    BYTE PTR [rax+0x0],dh
   140007420:	je     0x140007422
   140007422:	jb     0x140007424
   140007424:	(bad)  
   140007425:	add    BYTE PTR [rbx+0x0],ah
   140007428:	add    BYTE PTR gs:[rax],al
   14000742b:	add    BYTE PTR [rax],al
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    BYTE PTR [rip+0x6f006c00],ch        # 0x1af00e035
   140007435:	add    BYTE PTR [rdi+0x0],ah
   140007438:	data16 add BYTE PTR [rcx+0x0],ch
   14000743c:	ins    BYTE PTR es:[rdi],dx
   14000743d:	add    BYTE PTR [rbp+0x0],ah
   140007440:	cmp    al,BYTE PTR [rax]
   140007442:	add    BYTE PTR [rax],al
   140007444:	add    BYTE PTR [rax],al
   140007446:	add    BYTE PTR [rax],al
   140007448:	sub    eax,0x75006f00
   14000744d:	add    BYTE PTR [rax+rax*1+0x66],dh
   140007451:	add    BYTE PTR [rcx+0x0],ch
   140007454:	ins    BYTE PTR es:[rdi],dx
   140007455:	add    BYTE PTR [rbp+0x0],ah
   140007458:	cmp    al,BYTE PTR [rax]
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	add    BYTE PTR [rax],al
   14000745e:	add    BYTE PTR [rax],al
   140007460:	sub    eax,0x65007600
   140007465:	add    BYTE PTR [rdx+0x0],dh
   140007468:	(bad)  
   140007469:	add    BYTE PTR [rdi+0x0],ch
   14000746c:	jae    0x14000746e
   14000746e:	add    BYTE PTR gs:[rax],al
   140007471:	add    BYTE PTR [rax],al
   140007473:	add    BYTE PTR [rax],al
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rip+0x65006b00],ch        # 0x1a500df7d
   14000747d:	add    BYTE PTR [rcx+0x0],bh
   140007480:	ja     0x140007482
   140007482:	outs   dx,DWORD PTR ds:[rsi]
   140007483:	add    BYTE PTR [rdx+0x0],dh
   140007486:	add    BYTE PTR fs:[rdx],bh
   140007489:	add    BYTE PTR [rax],al
   14000748b:	add    BYTE PTR [rax],al
   14000748d:	add    BYTE PTR [rax],al
   14000748f:	add    BYTE PTR [rcx+0x0],al
   140007492:	movsxd eax,DWORD PTR [rax]
   140007494:	je     0x140007496
   140007496:	add    BYTE PTR [r8+r8*1+0x78],sil
   14000749b:	add    BYTE PTR [rax],al
   14000749d:	add    BYTE PTR [rax],al
   14000749f:	add    BYTE PTR [rbx+0x0],dl
   1400074a2:	je     0x1400074a4
   1400074a4:	outs   dx,DWORD PTR ds:[rsi]
   1400074a5:	add    BYTE PTR [rdx+0x0],dh
   1400074a8:	add    BYTE PTR gs:[rax],al
   1400074ab:	add    BYTE PTR [rax],al
   1400074ad:	add    BYTE PTR [rax],al
   1400074af:	add    BYTE PTR [rip+0x69006600],ch        # 0x1a900dab5
   1400074b5:	add    BYTE PTR [rax+rax*1+0x74],ch
   1400074b9:	add    BYTE PTR [rbp+0x0],ah
   1400074bc:	jb     0x1400074be
   1400074be:	cmp    al,BYTE PTR [rax]
	...
   1400074c8:	sub    eax,0x6f006e00
   1400074cd:	add    BYTE PTR [rbx+0x0],dh
   1400074d0:	je     0x1400074d2
   1400074d2:	outs   dx,DWORD PTR ds:[rsi]
   1400074d3:	add    BYTE PTR [rax+0x0],dh
   1400074d6:	add    BYTE PTR [rax],al
   1400074d8:	sub    eax,0x65007000
   1400074dd:	add    BYTE PTR [rdx+0x0],dh
   1400074e0:	data16 add BYTE PTR [rax],al
   1400074e3:	add    BYTE PTR [rax],al
   1400074e5:	add    BYTE PTR [rax],al
   1400074e7:	add    BYTE PTR [rsi+0x65],dh
   1400074ea:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400074ee:	cmp    al,0x54
   1400074f0:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   1400074f5:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400074f9:	add    BYTE PTR [eax],al
   1400074fc:	add    BYTE PTR [rax],al
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	mov    al,0x10
   140007502:	add    BYTE PTR [rax+0x1],al
   140007505:	add    BYTE PTR [rax],al
   140007507:	add    BYTE PTR [rax+0x59],ah
   14000750a:	add    BYTE PTR [rax+0x1],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rax+0x1400010],al
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    al,dh
   140007519:	adc    eax,DWORD PTR [rax]
   14000751b:	rex add DWORD PTR [rax],eax
   14000751e:	add    BYTE PTR [rax],al
   140007520:	nop
   140007521:	adc    DWORD PTR [rax],eax
   140007523:	rex add DWORD PTR [rax],eax
   140007526:	add    BYTE PTR [rax],al
   140007528:	mov    al,0x13
   14000752a:	add    BYTE PTR [rax+0x1],al
   14000752d:	add    BYTE PTR [rax],al
   14000752f:	add    al,dl
   140007531:	movabs eax,ds:0xd3bc4a8fac4ca2a3
   14000753a:	fld    TBYTE PTR [rcx-0x5]
   14000753d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000753e:	scas   eax,DWORD PTR es:[rdi]
   14000753f:	cld    
   140007540:	lock adc DWORD PTR [rax],eax
   140007543:	rex add DWORD PTR [rax],eax
   140007546:	add    BYTE PTR [rax],al
   140007548:	nop
   140007549:	adc    DWORD PTR [rax],eax
   14000754b:	rex add DWORD PTR [rax],eax
   14000754e:	add    BYTE PTR [rax],al
   140007550:	mov    al,0x11
   140007552:	add    BYTE PTR [rax+0x1],al
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    BYTE PTR [rax],al
   140007559:	fscale 
   14000755b:	push   0x11d14a3e
   140007560:	test   ah,dh
   140007562:	add    BYTE PTR [rax],al
   140007564:	clc    
   140007565:	add    al,0x64
   140007567:	jrcxz  0x140007569
   140007569:	add    BYTE PTR [rax],al
   14000756b:	add    BYTE PTR [rip+0xa7377],ah        # 0x1400ae8e8
   140007571:	add    BYTE PTR [rax],al
   140007573:	add    BYTE PTR [rax],al
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rdi+0x0],dl
   14000757a:	imul   eax,DWORD PTR [rax],0x53006e
   140007580:	js     0x140007582
   140007582:	jae    0x140007584
   140007584:	and    BYTE PTR [rax],al
   140007586:	push   rsp
   140007587:	add    BYTE PTR [rdx+0x0],dh
   14000758a:	(bad)  
   14000758b:	add    BYTE PTR [rbx+0x0],ah
   14000758e:	add    BYTE PTR gs:[rax],ah
   140007591:	add    BYTE PTR [rbx+0x0],dl
   140007594:	add    BYTE PTR gs:[rbx+0x0],dh
   140007598:	jae    0x14000759a
   14000759a:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   1400075a8:	push   rbx
   1400075a9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400075ad:	add    BYTE PTR [rdx+0x0],dh
   1400075b0:	je     0x1400075b2
   1400075b2:	push   rsp
   1400075b3:	add    BYTE PTR [rdx+0x0],dh
   1400075b6:	(bad)  
   1400075b7:	add    BYTE PTR [rbx+0x0],ah
   1400075ba:	add    BYTE PTR gs:[rax],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    BYTE PTR [rbx+0x0],al
   1400075c2:	outs   dx,DWORD PTR ds:[rsi]
   1400075c3:	add    BYTE PTR [rsi+0x0],ch
   1400075c6:	je     0x1400075c8
   1400075c8:	jb     0x1400075ca
   1400075ca:	outs   dx,DWORD PTR ds:[rsi]
   1400075cb:	add    BYTE PTR [rax+rax*1+0x54],ch
   1400075cf:	add    BYTE PTR [rdx+0x0],dh
   1400075d2:	(bad)  
   1400075d3:	add    BYTE PTR [rbx+0x0],ah
   1400075d6:	add    BYTE PTR gs:[rax],al
   1400075d9:	add    BYTE PTR [rax],al
   1400075db:	add    BYTE PTR [rax],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rbp+0x0],al
   1400075e2:	outs   dx,BYTE PTR ds:[rsi]
   1400075e3:	add    BYTE PTR [rcx+0x0],ah
   1400075e6:	(bad)  
   1400075e7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400075eb:	add    BYTE PTR [rax+rax*1+0x72],dl
   1400075ef:	add    BYTE PTR [rcx+0x0],ah
   1400075f2:	movsxd eax,DWORD PTR [rax]
   1400075f4:	add    BYTE PTR gs:[rbp+0x0],al
   1400075f8:	js     0x1400075fa
   1400075fa:	add    BYTE PTR [rax],al
   1400075fc:	add    BYTE PTR [rax],al
   1400075fe:	add    BYTE PTR [rax],al
   140007600:	push   rbx
   140007601:	add    BYTE PTR [rbp+0x0],ah
   140007604:	je     0x140007606
   140007606:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000760a:	outs   dx,BYTE PTR ds:[rsi]
   14000760b:	add    BYTE PTR [rbx+0x0],dh
   14000760e:	outs   dx,DWORD PTR ds:[rsi]
   14000760f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140007613:	add    BYTE PTR [rbx+0x0],al
   140007616:	je     0x140007618
   140007618:	jb     0x14000761a
   14000761a:	ins    BYTE PTR es:[rdi],dx
   14000761b:	add    BYTE PTR [rax+0x0],cl
   14000761e:	(bad)  
   14000761f:	add    BYTE PTR [rsi+0x0],ch
   140007622:	add    BYTE PTR fs:[rbp+0x0],ah
   140007626:	jb     0x140007628
	...
   140007630:	push   rax
   140007631:	add    BYTE PTR [rdx+0x0],dh
   140007634:	outs   dx,DWORD PTR ds:[rsi]
   140007635:	add    BYTE PTR [rbx+0x0],ah
   140007638:	add    BYTE PTR gs:[rbx+0x0],dh
   14000763c:	jae    0x14000763e
   14000763e:	push   rsp
   14000763f:	add    BYTE PTR [rdx+0x0],dh
   140007642:	(bad)  
   140007643:	add    BYTE PTR [rbx+0x0],ah
   140007646:	add    BYTE PTR gs:[rax],al
   140007649:	add    BYTE PTR [rax],al
   14000764b:	add    BYTE PTR [rax],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rax+rax*1],bh
   140007652:	jne    0x140007654
   140007654:	outs   dx,BYTE PTR ds:[rsi]
   140007655:	add    BYTE PTR [rbx+0x0],ch
   140007658:	outs   dx,BYTE PTR ds:[rsi]
   140007659:	add    BYTE PTR [rdi+0x0],ch
   14000765c:	ja     0x14000765e
   14000765e:	outs   dx,BYTE PTR ds:[rsi]
   14000765f:	add    BYTE PTR [rsi],bh
   140007661:	add    BYTE PTR [rax],al
   140007663:	add    BYTE PTR [rax],al
   140007665:	add    BYTE PTR [rax],al
   140007667:	add    BYTE PTR [rip+0x36004900],ah        # 0x17600bf6d
   14000766d:	add    BYTE PTR [rax+rax*1],dh
   140007670:	add    BYTE PTR fs:[rax],al
   140007673:	add    BYTE PTR [rax],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rax+0x0],bh
   14000767a:	cmp    BYTE PTR [rax],al
   14000767c:	add    BYTE PTR ss:[rax],al
   14000767f:	add    BYTE PTR [rcx+0x0],cl
   140007682:	add    BYTE PTR [r14],sil
   140007685:	add    BYTE PTR [rax+rax*1],dh
	...
   140007690:	rex.WRB add BYTE PTR [r11+0x0],r10b
   140007694:	rex.WB add BYTE PTR [r8+rax*1+0x0],cl
   140007699:	add    BYTE PTR [rax],al
   14000769b:	add    BYTE PTR [rax],al
   14000769d:	add    BYTE PTR [rax],al
   14000769f:	add    BYTE PTR [rcx+0x0],al
   1400076a2:	rex.WRB add BYTE PTR [r8+rax*1+0x36],r8b
   1400076a7:	add    BYTE PTR [rax+rax*1],dh
   1400076aa:	add    BYTE PTR [rax],al
   1400076ac:	add    BYTE PTR [rax],al
   1400076ae:	add    BYTE PTR [rax],al
   1400076b0:	add    BYTE PTR [r10+0x0],dl
   1400076b4:	rex.WRB add BYTE PTR [r8],r8b
   1400076b7:	add    BYTE PTR [rcx+0x0],al
   1400076ba:	push   rdx
   1400076bb:	add    BYTE PTR [rbp+0x0],cl
   1400076be:	add    BYTE PTR ss:[rax+rax*1],dh
   1400076c2:	add    BYTE PTR [rax],al
   1400076c4:	add    BYTE PTR [rax],al
   1400076c6:	add    BYTE PTR [rax],al
   1400076c8:	push   rdi
   1400076c9:	add    BYTE PTR [rdi+0x0],ch
   1400076cc:	ja     0x1400076ce
   1400076ce:	xor    eax,DWORD PTR [rax]
   1400076d0:	xor    al,BYTE PTR [rax]
   1400076d2:	add    BYTE PTR [rax],al
   1400076d4:	add    BYTE PTR [rax],al
   1400076d6:	add    BYTE PTR [rax],al
   1400076d8:	push   rbp
   1400076d9:	add    BYTE PTR [rsi+0x0],ch
   1400076dc:	imul   eax,DWORD PTR [rax],0x6e
   1400076df:	add    BYTE PTR [rdi+0x0],ch
   1400076e2:	ja     0x1400076e4
   1400076e4:	outs   dx,BYTE PTR ds:[rsi]
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    BYTE PTR [rsi+0x0],cl
   1400076ea:	add    BYTE PTR gs:[rbp+0x0],dh
   1400076ee:	je     0x1400076f0
   1400076f0:	jb     0x1400076f2
   1400076f2:	(bad)  
   1400076f3:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400076f7:	add    BYTE PTR [rip+0x3d003d00],bh        # 0x17d00b3fd
   1400076fd:	add    BYTE PTR [rip+0x3d003d00],bh        # 0x17d00b403
   140007703:	add    BYTE PTR [rip+0x3d003d00],bh        # 0x17d00b409
   140007709:	add    BYTE PTR [rip+0x3d003d00],bh        # 0x17d00b40f
   14000770f:	add    BYTE PTR [rip+0x3d003d00],bh        # 0x17d00b415
   140007715:	add    BYTE PTR [rip+0x3d00],bh        # 0x14000b41b
   14000771b:	add    BYTE PTR [rax],al
   14000771d:	add    BYTE PTR [rax],al
   14000771f:	add    BYTE PTR [rsi+0x0],al
   140007722:	ins    BYTE PTR es:[rdi],dx
   140007723:	add    BYTE PTR [rcx+0x0],ah
   140007726:	add    BYTE PTR [ebx+0x0],dh
   14000772a:	and    BYTE PTR [rax],al
   14000772c:	cmp    eax,0x25002000
   140007731:	add    BYTE PTR [rax+rax*1+0x0],ah
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    BYTE PTR [rax+0x0],dl
   14000773a:	jb     0x14000773c
   14000773c:	outs   dx,DWORD PTR ds:[rsi]
   14000773d:	add    BYTE PTR [rbx+0x0],ah
   140007740:	add    BYTE PTR gs:[rbx+0x0],dh
   140007744:	jae    0x140007746
   140007746:	outs   dx,DWORD PTR ds:[rsi]
   140007747:	add    BYTE PTR [rdx+0x0],dh
   14000774a:	add    BYTE PTR [r10+0x0],sil
   14000774e:	movsxd eax,DWORD PTR [rax]
   140007750:	push   0x74006900
   140007755:	add    BYTE PTR [rbp+0x0],ah
   140007758:	movsxd eax,DWORD PTR [rax]
   14000775a:	je     0x14000775c
   14000775c:	jne    0x14000775e
   14000775e:	jb     0x140007760
   140007760:	add    BYTE PTR gs:[rax],ah
   140007763:	add    BYTE PTR [rip+0x25002000],bh        # 0x165009769
   140007769:	add    BYTE PTR [rdi+0x0],dh
   14000776c:	jae    0x14000776e
   14000776e:	add    BYTE PTR [rax],al
   140007770:	rex.XB add BYTE PTR [r13+0x0],sil
   140007774:	ins    BYTE PTR es:[rdi],dx
   140007775:	add    BYTE PTR [rax+rax*1+0x75],dh
   140007779:	add    BYTE PTR [rdx+0x0],dh
   14000777c:	add    BYTE PTR gs:[rsi+0x0],al
   140007780:	(bad)  
   140007781:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140007785:	add    BYTE PTR [rdx+0x0],al
   140007788:	(bad)  
   140007789:	add    BYTE PTR [rbx+0x0],ah
   14000778c:	imul   eax,DWORD PTR [rax],0x73
   14000778f:	add    BYTE PTR [rax],ah
   140007791:	add    BYTE PTR [rip+0x2000],bh        # 0x140009797
   140007797:	add    BYTE PTR [rbx],bh
   140007799:	add    BYTE PTR [rax],al
   14000779b:	add    BYTE PTR [rax],al
   14000779d:	add    BYTE PTR [rax],al
   14000779f:	add    BYTE PTR [rbp+0x0],cl
   1400077a2:	(bad)  
   1400077a3:	add    BYTE PTR [rsi+0x0],ch
   1400077a6:	imul   eax,DWORD PTR [rax],0x650066
   1400077ac:	jae    0x1400077ae
   1400077ae:	je     0x1400077b0
   1400077b0:	push   rax
   1400077b1:	add    BYTE PTR [rcx+0x0],ah
   1400077b4:	je     0x1400077b6
   1400077b6:	push   0x3d002000
   1400077bb:	add    BYTE PTR [rax],ah
   1400077bd:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b300eec3
   1400077c3:	add    BYTE PTR [rax],al
   1400077c5:	add    BYTE PTR [rax],al
   1400077c7:	add    BYTE PTR [rax+rax*1+0x65],dl
   1400077cb:	add    BYTE PTR [rax+0x0],bh
   1400077ce:	je     0x1400077d0
   1400077d0:	jne    0x1400077d2
   1400077d2:	(bad)  
   1400077d3:	add    BYTE PTR [rax+rax*1+0x49],ch
   1400077d7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400077db:	add    BYTE PTR [rsi+0x0],ch
   1400077de:	je     0x1400077e0
   1400077e0:	imul   eax,DWORD PTR [rax],0x790074
   1400077e6:	and    BYTE PTR [rax],al
   1400077e8:	cmp    eax,0x25002000
   1400077ed:	add    BYTE PTR [rdi+0x0],dh
   1400077f0:	jae    0x1400077f2
   1400077f2:	add    BYTE PTR [rax],al
   1400077f4:	add    BYTE PTR [rax],al
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	add    BYTE PTR [r11+0x0],sil
   1400077fc:	jae    0x1400077fe
   1400077fe:	add    BYTE PTR gs:[rbp+0x0],ch
   140007802:	(bad)  
   140007803:	add    BYTE PTR [rax+rax*1+0x79],ch
   140007807:	add    BYTE PTR [rax+rax*1+0x69],al
   14000780b:	add    BYTE PTR [rdx+0x0],dh
   14000780e:	add    BYTE PTR gs:[rbx+0x0],ah
   140007812:	je     0x140007814
   140007814:	outs   dx,DWORD PTR ds:[rsi]
   140007815:	add    BYTE PTR [rdx+0x0],dh
   140007818:	jns    0x14000781a
   14000781a:	and    BYTE PTR [rax],al
   14000781c:	cmp    eax,0x25002000
   140007821:	add    BYTE PTR [rdi+0x0],dh
   140007824:	jae    0x140007826
   140007826:	add    BYTE PTR [rax],al
   140007828:	add    BYTE PTR [r8+0x0],sil
   14000782c:	jo     0x14000782e
   14000782e:	ins    BYTE PTR es:[rdi],dx
   14000782f:	add    BYTE PTR [rcx+0x0],ch
   140007832:	movsxd eax,DWORD PTR [rax]
   140007834:	(bad)  
   140007835:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007839:	add    BYTE PTR [rdi+0x0],ch
   14000783c:	outs   dx,BYTE PTR ds:[rsi]
   14000783d:	add    BYTE PTR [rax],ah
   14000783f:	add    BYTE PTR [rbx+0x0],al
   140007842:	outs   dx,DWORD PTR ds:[rsi]
   140007843:	add    BYTE PTR [rsi+0x0],ch
   140007846:	data16 add BYTE PTR [rcx+0x0],ch
   14000784a:	add    BYTE PTR [eax],ah
   14000784d:	add    BYTE PTR [rsi+0x0],al
   140007850:	imul   eax,DWORD PTR [rax],0x65006c
   140007856:	and    BYTE PTR [rax],al
   140007858:	cmp    eax,0x25002000
   14000785d:	add    BYTE PTR [rdi+0x0],dh
   140007860:	jae    0x140007862
   140007862:	add    BYTE PTR [rax],al
   140007864:	add    BYTE PTR [rax],al
   140007866:	add    BYTE PTR [rax],al
   140007868:	sub    eax,0x2d002d00
   14000786d:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00a573
   140007873:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00a579
   140007879:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00a57f
   14000787f:	add    BYTE PTR [rip+0x2d002d00],ch        # 0x16d00a585
   140007885:	add    BYTE PTR [rip+0x2d00],ch        # 0x14000a58b
   14000788b:	add    BYTE PTR [rax],al
   14000788d:	add    BYTE PTR [rax],al
   14000788f:	add    BYTE PTR [rax+0x0],dl
   140007892:	add    BYTE PTR [r10+0x0],r10b
   140007896:	rex.RX add BYTE PTR [rdx],r15b
   140007899:	add    BYTE PTR [rax],ah
   14000789b:	add    BYTE PTR [rbp+0x0],cl
   14000789e:	(bad)  
   14000789f:	add    BYTE PTR [rsi+0x0],ch
   1400078a2:	imul   eax,DWORD PTR [rax],0x650066
   1400078a8:	jae    0x1400078aa
   1400078aa:	je     0x1400078ac
   1400078ac:	and    BYTE PTR [rax],al
   1400078ae:	push   rax
   1400078af:	add    BYTE PTR [rcx+0x0],ah
   1400078b2:	jb     0x1400078b4
   1400078b4:	jae    0x1400078b6
   1400078b6:	imul   eax,DWORD PTR [rax],0x67006e
   1400078bc:	cmp    al,BYTE PTR [rax]
   1400078be:	and    BYTE PTR [rax],al
	...
   1400078c8:	push   rax
   1400078c9:	add    BYTE PTR [rbp+0x0],al
   1400078cc:	push   rdx
   1400078cd:	add    BYTE PTR [rsi+0x0],al
   1400078d0:	cmp    al,BYTE PTR [rax]
   1400078d2:	and    BYTE PTR [rax],al
   1400078d4:	rex.X add BYTE PTR [rcx+0x0],bpl
   1400078d8:	outs   dx,BYTE PTR ds:[rsi]
   1400078d9:	add    BYTE PTR [rax+rax*1+0x69],ah
   1400078dd:	add    BYTE PTR [rsi+0x0],ch
   1400078e0:	add    BYTE PTR [eax],ah
   1400078e3:	add    BYTE PTR [rax+0x0],dl
   1400078e6:	outs   dx,DWORD PTR ds:[rsi]
   1400078e7:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400078eb:	add    BYTE PTR [rbx+0x0],ah
   1400078ee:	jns    0x1400078f0
   1400078f0:	cmp    al,BYTE PTR [rax]
   1400078f2:	and    BYTE PTR [rax],al
   1400078f4:	add    BYTE PTR [rax],al
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	push   rax
   1400078f9:	add    BYTE PTR [rbp+0x0],al
   1400078fc:	push   rdx
   1400078fd:	add    BYTE PTR [rsi+0x0],al
   140007900:	cmp    al,BYTE PTR [rax]
   140007902:	and    BYTE PTR [rax],al
   140007904:	add    BYTE PTR [r11+0x0],sil
   140007908:	jae    0x14000790a
   14000790a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000790e:	(bad)  
   14000790f:	add    BYTE PTR [rax+rax*1+0x79],ch
   140007913:	add    BYTE PTR [rax],ah
   140007915:	add    BYTE PTR [rax+0x0],dl
   140007918:	jb     0x14000791a
   14000791a:	outs   dx,DWORD PTR ds:[rsi]
   14000791b:	add    BYTE PTR [rdx+0x0],ah
   14000791e:	imul   eax,DWORD PTR [rax],0x67006e
   140007924:	cmp    al,BYTE PTR [rax]
   140007926:	and    BYTE PTR [rax],al
	...
   140007930:	push   rax
   140007931:	add    BYTE PTR [rbp+0x0],al
   140007934:	push   rdx
   140007935:	add    BYTE PTR [rsi+0x0],al
   140007938:	cmp    al,BYTE PTR [rax]
   14000793a:	and    BYTE PTR [rax],al
   14000793c:	push   rsp
   14000793d:	add    BYTE PTR [rdi+0x0],ch
   140007940:	je     0x140007942
   140007942:	(bad)  
   140007943:	add    BYTE PTR [rax+rax*1+0x20],ch
   140007947:	add    BYTE PTR [rbx+0x0],al
   14000794a:	jne    0x14000794c
   14000794c:	ins    BYTE PTR es:[rdi],dx
   14000794d:	add    BYTE PTR [rax+rax*1+0x75],dh
   140007951:	add    BYTE PTR [rdx+0x0],dh
   140007954:	add    BYTE PTR gs:[rax],ah
   140007957:	add    BYTE PTR [rax+0x0],dl
   14000795a:	jb     0x14000795c
   14000795c:	outs   dx,DWORD PTR ds:[rsi]
   14000795d:	add    BYTE PTR [rdx+0x0],ah
   140007960:	imul   eax,DWORD PTR [rax],0x67006e
   140007966:	cmp    al,BYTE PTR [rax]
   140007968:	and    BYTE PTR [rax],al
   14000796a:	add    BYTE PTR [rax],al
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	add    BYTE PTR [rax],al
   140007970:	push   rax
   140007971:	add    BYTE PTR [rbp+0x0],al
   140007974:	push   rdx
   140007975:	add    BYTE PTR [rsi+0x0],al
   140007978:	cmp    al,BYTE PTR [rax]
   14000797a:	and    BYTE PTR [rax],al
   14000797c:	push   rsp
   14000797d:	add    BYTE PTR [rdi+0x0],ch
   140007980:	je     0x140007982
   140007982:	(bad)  
   140007983:	add    BYTE PTR [rax+rax*1+0x20],ch
   140007987:	add    BYTE PTR [rcx+0x0],al
   14000798a:	jb     0x14000798c
   14000798c:	movsxd eax,DWORD PTR [rax]
   14000798e:	push   0x74006900
   140007993:	add    BYTE PTR [rbp+0x0],ah
   140007996:	movsxd eax,DWORD PTR [rax]
   140007998:	je     0x14000799a
   14000799a:	jne    0x14000799c
   14000799c:	jb     0x14000799e
   14000799e:	add    BYTE PTR gs:[rax],ah
   1400079a1:	add    BYTE PTR [rax+0x0],dl
   1400079a4:	jb     0x1400079a6
   1400079a6:	outs   dx,DWORD PTR ds:[rsi]
   1400079a7:	add    BYTE PTR [rdx+0x0],ah
   1400079aa:	imul   eax,DWORD PTR [rax],0x67006e
   1400079b0:	cmp    al,BYTE PTR [rax]
   1400079b2:	and    BYTE PTR [rax],al
   1400079b4:	add    BYTE PTR [rax],al
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	push   rax
   1400079b9:	add    BYTE PTR [rbp+0x0],al
   1400079bc:	push   rdx
   1400079bd:	add    BYTE PTR [rsi+0x0],al
   1400079c0:	cmp    al,BYTE PTR [rax]
   1400079c2:	and    BYTE PTR [rax],al
   1400079c4:	push   rsp
   1400079c5:	add    BYTE PTR [rdi+0x0],ch
   1400079c8:	je     0x1400079ca
   1400079ca:	(bad)  
   1400079cb:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400079cf:	add    BYTE PTR [rax+0x0],dl
   1400079d2:	jb     0x1400079d4
   1400079d4:	outs   dx,DWORD PTR ds:[rsi]
   1400079d5:	add    BYTE PTR [rdx+0x0],ah
   1400079d8:	imul   eax,DWORD PTR [rax],0x67006e
   1400079de:	cmp    al,BYTE PTR [rax]
   1400079e0:	and    BYTE PTR [rax],al
   1400079e2:	add    BYTE PTR [rax],al
   1400079e4:	add    BYTE PTR [rax],al
   1400079e6:	add    BYTE PTR [rax],al
   1400079e8:	push   rax
   1400079e9:	add    BYTE PTR [rbp+0x0],al
   1400079ec:	push   rdx
   1400079ed:	add    BYTE PTR [rsi+0x0],al
   1400079f0:	cmp    al,BYTE PTR [rax]
   1400079f2:	and    BYTE PTR [rax],al
   1400079f4:	push   rsp
   1400079f5:	add    BYTE PTR [rdi+0x0],ch
   1400079f8:	je     0x1400079fa
   1400079fa:	(bad)  
   1400079fb:	add    BYTE PTR [rax+rax*1+0x3a],ch
   1400079ff:	add    BYTE PTR [rax],ah
   140007a01:	add    BYTE PTR [rax],al
   140007a03:	add    BYTE PTR [rax],al
   140007a05:	add    BYTE PTR [rax],al
   140007a07:	add    BYTE PTR [rax-0x4cf3c364],ah
   140007a0d:	mov    esi,0xe79b4f4f
   140007a12:	imul   BYTE PTR cs:[rax-0x1086bb51]
   140007a19:	mov    ebx,0xbf
   140007a1e:	add    BYTE PTR [rax],al
   140007a20:	and    al,BYTE PTR [rip+0x41993]        # 0x1400493b9
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	push   0x2000083
   140007a2d:	add    BYTE PTR [rax],al
   140007a2f:	add    BYTE PTR [rax+0x8000083],cl
   140007a35:	add    BYTE PTR [rax],al
   140007a37:	add    al,ah
   140007a39:	add    DWORD PTR [rax],0x0
   140007a3c:	sub    BYTE PTR [rax],al
	...
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	and    al,BYTE PTR [rip+0x11993]        # 0x1400193e1
   140007a4e:	add    BYTE PTR [rax],al
   140007a50:	cmp    BYTE PTR [rbx+0x0],al
   140007a56:	add    BYTE PTR [rax],al
   140007a58:	add    BYTE PTR [rax],al
   140007a5a:	add    BYTE PTR [rax],al
   140007a5c:	add    al,BYTE PTR [rax]
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	rex add DWORD PTR [rax],0x0
   140007a64:	and    BYTE PTR [rax],al
	...
   140007a6e:	add    BYTE PTR [rax],al
   140007a70:	and    al,BYTE PTR [rip+0x21993]        # 0x140029409
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	mov    al,0x82
	...
   140007a82:	add    BYTE PTR [rax],al
   140007a84:	add    eax,0xc0000000
   140007a89:	(bad)  
   140007a8a:	add    BYTE PTR [rax],al
   140007a8c:	xor    BYTE PTR [rax],al
	...
   140007a96:	add    BYTE PTR [rax],al
   140007a98:	and    al,BYTE PTR [rip+0x31993]        # 0x140039431
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	test   BYTE PTR [rcx+0x0],al
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	add    BYTE PTR [rax],al
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	add    al,0x0
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	rex.W (bad) 
   140007ab2:	add    BYTE PTR [rax],al
   140007ab4:	and    BYTE PTR [rax],al
	...
   140007abe:	add    BYTE PTR [rax],al
   140007ac0:	and    al,BYTE PTR [rip+0x31993]        # 0x140039459
   140007ac6:	add    BYTE PTR [rax],al
   140007ac8:	rol    BYTE PTR [rcx+0x0],1
   140007ace:	add    BYTE PTR [rax],al
   140007ad0:	add    BYTE PTR [rax],al
   140007ad2:	add    BYTE PTR [rax],al
   140007ad4:	add    eax,DWORD PTR [rax]
   140007ad6:	add    BYTE PTR [rax],al
   140007ad8:	sbb    BYTE PTR [rdx+0x200000],al
	...
   140007ae6:	add    BYTE PTR [rax],al
   140007ae8:	and    al,BYTE PTR [rip+0x31993]        # 0x140039481
   140007aee:	add    BYTE PTR [rax],al
   140007af0:	rol    BYTE PTR [rcx+0x0],1
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	add    BYTE PTR [rax],al
   140007afa:	add    BYTE PTR [rax],al
   140007afc:	add    eax,DWORD PTR [rax]
   140007afe:	add    BYTE PTR [rax],al
   140007b00:	call   0x160007b86
	...
   140007b0d:	add    BYTE PTR [rax],al
   140007b0f:	add    BYTE PTR [rdx],ah
   140007b11:	add    eax,0x31993
   140007b16:	add    BYTE PTR [rax],al
   140007b18:	test   BYTE PTR [rcx+0x0],al
   140007b1e:	add    BYTE PTR [rax],al
   140007b20:	add    BYTE PTR [rax],al
   140007b22:	add    BYTE PTR [rax],al
   140007b24:	add    al,0x0
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	movabs al,ds:0x20000081
   140007b31:	add    BYTE PTR [rax],al
   140007b33:	add    BYTE PTR [rax],al
   140007b35:	add    BYTE PTR [rax],al
   140007b37:	add    BYTE PTR [rdx],ah
   140007b39:	add    eax,0x21993
   140007b3e:	add    BYTE PTR [rax],al
   140007b40:	fadd   DWORD PTR [rax+0x0]
   140007b46:	add    BYTE PTR [rax],al
   140007b48:	add    BYTE PTR [rax],al
   140007b4a:	add    BYTE PTR [rax],al
   140007b4c:	add    eax,DWORD PTR [rax]
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	pop    rax
   140007b51:	add    DWORD PTR [rax],0x2000
	...
   140007b5f:	add    BYTE PTR [rdx],ah
   140007b61:	add    eax,0x21993
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	fadd   DWORD PTR [rax+0x0]
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	add    BYTE PTR [rax],al
   140007b72:	add    BYTE PTR [rax],al
   140007b74:	add    eax,DWORD PTR [rax]
   140007b76:	add    BYTE PTR [rax],al
   140007b78:	sub    BYTE PTR [rcx+0x200000],al
	...
   140007b86:	add    BYTE PTR [rax],al
   140007b88:	and    al,BYTE PTR [rip+0x21993]        # 0x140029521
   140007b8e:	add    BYTE PTR [rax],al
   140007b90:	fadd   DWORD PTR [rax+0x0]
   140007b96:	add    BYTE PTR [rax],al
   140007b98:	add    BYTE PTR [rax],al
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	add    eax,DWORD PTR [rax]
   140007b9e:	add    BYTE PTR [rax],al
   140007ba0:	call   0x160007c25
	...
   140007bad:	add    BYTE PTR [rax],al
   140007baf:	add    BYTE PTR [rdx],ah
   140007bb1:	add    eax,0x11993
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	rex add BYTE PTR [rax],0x0
	...
   140007bc4:	add    eax,DWORD PTR [rax]
   140007bc6:	add    BYTE PTR [rax],al
   140007bc8:	mov    al,0x80
   140007bca:	add    BYTE PTR [rax],al
   140007bcc:	and    BYTE PTR [rax],al
	...
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	and    al,BYTE PTR [rip+0x11993]        # 0x140019571
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	rex add BYTE PTR [rax],0x0
	...
   140007bec:	add    DWORD PTR [rax],eax
   140007bee:	add    BYTE PTR [rax],al
   140007bf0:	cwde   
   140007bf1:	add    BYTE PTR [rax],0x0
   140007bf4:	and    BYTE PTR [rax],al
	...
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	and    al,BYTE PTR [rip+0x11993]        # 0x140019599
   140007c06:	add    BYTE PTR [rax],al
   140007c08:	rex add BYTE PTR [rax],0x0
	...
   140007c14:	add    DWORD PTR [rax],eax
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	jo     0x140007b9a
   140007c1a:	add    BYTE PTR [rax],al
   140007c1c:	and    BYTE PTR [rax],al
	...
   140007c26:	add    BYTE PTR [rax],al
   140007c28:	and    al,BYTE PTR [rip+0x11993]        # 0x1400195c1
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	rex add BYTE PTR [rax],0x0
	...
   140007c3c:	add    eax,DWORD PTR [rax]
   140007c3e:	add    BYTE PTR [rax],al
   140007c40:	rex.W add BYTE PTR [rax],0x0
   140007c44:	and    BYTE PTR [rax],al
	...
   140007c4e:	add    BYTE PTR [rax],al
   140007c50:	and    al,BYTE PTR [rip+0x41993]        # 0x1400495e9
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	cwde   
   140007c59:	mov    BYTE PTR [rax],al
   140007c5b:	add    BYTE PTR [rdx],al
   140007c5d:	add    BYTE PTR [rax],al
   140007c5f:	add    BYTE PTR [rax+0x9000088],bh
   140007c65:	add    BYTE PTR [rax],al
   140007c67:	add    BYTE PTR [rax],dl
   140007c69:	mov    DWORD PTR [rax],eax
   140007c6b:	add    BYTE PTR [rax+0x0],al
	...
   140007c76:	add    BYTE PTR [rax],al
   140007c78:	and    al,BYTE PTR [rip+0x71993]        # 0x140079611
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	fadd   DWORD PTR [rdi+0x0]
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	add    BYTE PTR [rax],al
   140007c8a:	add    BYTE PTR [rax],al
   140007c8c:	or     al,BYTE PTR [rax]
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	adc    BYTE PTR [rax+0x200000],cl
	...
   140007c9e:	add    BYTE PTR [rax],al
   140007ca0:	and    al,BYTE PTR [rip+0x1f1993]        # 0x1401f9639
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	push   0x85
   140007cad:	add    BYTE PTR [rax],al
   140007caf:	add    BYTE PTR [rax],al
   140007cb1:	add    BYTE PTR [rax],al
   140007cb3:	add    BYTE PTR [rbx],ch
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    BYTE PTR [rax-0x7a],ah
   140007cba:	add    BYTE PTR [rax],al
   140007cbc:	xor    BYTE PTR [rax],al
	...
   140007cc6:	add    BYTE PTR [rax],al
   140007cc8:	and    al,BYTE PTR [rip+0x21993]        # 0x140029661
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	pop    rax
   140007cd1:	test   BYTE PTR [rax],al
	...
   140007cdb:	add    BYTE PTR [rbx],al
   140007cdd:	add    BYTE PTR [rax],al
   140007cdf:	add    BYTE PTR [rax-0x7c],ch
   140007ce2:	add    BYTE PTR [rax],al
   140007ce4:	and    BYTE PTR [rax],al
	...
   140007cf2:	add    BYTE PTR [rax],al
   140007cf4:	mov    ebx,0x559f38
   140007cf9:	add    BYTE PTR [rax],al
   140007cfb:	add    BYTE PTR [rdx],al
   140007cfd:	add    BYTE PTR [rax],al
   140007cff:	add    BYTE PTR [rip+0xfffffffff0000000],ah        # 0x130007d05
   140007d05:	jge    0x140007d07
   140007d07:	add    al,dh
   140007d09:	add    BYTE PTR [eax],al
   140007d0c:	add    BYTE PTR [rax],al
   140007d0e:	add    BYTE PTR [rax],al
   140007d10:	mov    ebx,0x559f38
   140007d15:	add    BYTE PTR [rax],al
   140007d17:	add    BYTE PTR [rip+0x4000000],cl        # 0x144007d1d
   140007d1d:	add    al,BYTE PTR [rax]
   140007d1f:	add    BYTE PTR [rsi+rdi*2],ch
   140007d22:	add    BYTE PTR [rax],al
   140007d24:	sub    al,0x68
	...
   140007d4e:	add    BYTE PTR [rax],al
   140007d50:	movabs al,ds:0x0
	...
   140007da9:	movabs al,ds:0x14000
	...
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	push   rax
   140007dc1:	jb     0x140007dc3
   140007dc3:	rex add DWORD PTR [rax],eax
   140007dc6:	add    BYTE PTR [rax],al
   140007dc8:	pop    rax
   140007dc9:	jb     0x140007dcb
   140007dcb:	rex add DWORD PTR [rax],eax
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	cwde   
   140007dd1:	jb     0x140007dd3
   140007dd3:	rex add DWORD PTR [rax],eax
   140007dd6:	add    BYTE PTR [rax],al
   140007dd8:	adc    eax,0x0
   140007ddd:	add    BYTE PTR [rax],al
   140007ddf:	add    BYTE PTR [rax],al
   140007de1:	xor    eax,0x0
	...
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	push   rdx
   140007df1:	push   rbx
   140007df2:	rex.R push rbx
   140007df4:	in     al,dx
   140007df5:	stos   DWORD PTR es:[rdi],eax
   140007df6:	and    edi,DWORD PTR [rdx+0x54]
   140007df9:	xchg   ebx,eax
   140007dfa:	sbb    al,0x43
   140007dfc:	stos   DWORD PTR es:[rdi],eax
   140007dfd:	js     0x140007e5e
   140007dff:	clc    
   140007e00:	mov    edi,0x17bafa5
   140007e05:	add    BYTE PTR [rax],al
   140007e07:	add    BYTE PTR [rbx+0x78],dh
   140007e0a:	jae    0x140007e80
   140007e0c:	jb     0x140007e6f
   140007e0e:	movsxd esp,DWORD PTR [rbp+0x2e]
   140007e11:	jo     0x140007e77
   140007e13:	(bad)  
	...
   140007e2c:	rex.RXB
   140007e2d:	rex.XB push r12
   140007e2f:	rex.WR add BYTE PTR [rax],r10b
   140007e32:	add    BYTE PTR [rax],al
   140007e34:	or     BYTE PTR [rax+0x0],dl
   140007e37:	add    BYTE PTR [rsi],ch
   140007e39:	je     0x140007ea0
   140007e3b:	js     0x140007eb1
   140007e3d:	and    al,0x6d
   140007e3f:	outs   dx,BYTE PTR ds:[rsi]
   140007e40:	add    BYTE PTR [rax],al
   140007e42:	add    BYTE PTR [rax],al
   140007e44:	adc    BYTE PTR [rax+0x0],ah
   140007e47:	add    BYTE PTR [rbp+0x0],bh
   140007e4a:	add    BYTE PTR [rax],al
   140007e4c:	cs je  0x140007eb4
   140007e4f:	js     0x140007ec5
   140007e51:	and    al,0x6d
   140007e53:	outs   dx,BYTE PTR ds:[rsi]
   140007e54:	and    al,0x30
   140007e56:	xor    BYTE PTR [rax],al
   140007e58:	nop
   140007e59:	(bad)  
   140007e5a:	add    BYTE PTR [rax],al
   140007e5c:	add    BYTE PTR [rax+rax*1],0x0
   140007e60:	cs je  0x140007ec8
   140007e63:	js     0x140007ed9
   140007e65:	and    al,0x78
   140007e67:	add    BYTE PTR [rax],al
   140007e69:	jo     0x140007e6b
   140007e6b:	add    BYTE PTR [rax+0x2],dl
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140007e79:	add    BYTE PTR [rax],al
   140007e7b:	add    BYTE PTR [rax+0x72],dl
   140007e7e:	add    BYTE PTR [rax],al
   140007e80:	adc    BYTE PTR [rax],al
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	xor    BYTE PTR cs:[rax],dh
   140007e87:	movsxd esp,DWORD PTR [rsi+0x67]
   140007e8a:	add    BYTE PTR [rax],al
   140007e8c:	(bad)  
   140007e8d:	jb     0x140007e8f
   140007e8f:	add    BYTE PTR [rax],cl
   140007e91:	add    BYTE PTR [rax],al
   140007e93:	add    BYTE PTR [rsi],ch
   140007e95:	rex.XB push r10
   140007e97:	push   rsp
   140007e98:	and    al,0x58
   140007e9a:	rex.XB
   140007e9b:	add    BYTE PTR [r8],al
   140007e9e:	add    BYTE PTR [rax],al
   140007ea0:	push   0x8000072
   140007ea5:	add    BYTE PTR [rax],al
   140007ea7:	add    BYTE PTR [rsi],ch
   140007ea9:	rex.XB push r10
   140007eab:	push   rsp
   140007eac:	and    al,0x58
   140007eae:	rex.XB
   140007eaf:	rex.B
   140007eb0:	add    BYTE PTR [r8],al
   140007eb3:	add    BYTE PTR [rax+0x72],dh
   140007eb6:	add    BYTE PTR [rax],al
   140007eb8:	or     BYTE PTR [rax],al
   140007eba:	add    BYTE PTR [rax],al
   140007ebc:	cs rex.XB push r10
   140007ebf:	push   rsp
   140007ec0:	and    al,0x58
   140007ec2:	rex.XB pop r10
   140007ec4:	add    BYTE PTR [rax],al
   140007ec6:	add    BYTE PTR [rax],al
   140007ec8:	js     0x140007f3c
   140007eca:	add    BYTE PTR [rax],al
   140007ecc:	or     BYTE PTR [rax],al
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	cs rex.XB push r10
   140007ed3:	push   rsp
   140007ed4:	and    al,0x58
   140007ed6:	rex.WB
   140007ed7:	add    BYTE PTR [r8],al
   140007eda:	add    BYTE PTR [rax],al
   140007edc:	xor    BYTE PTR [rdx+0x0],0x0
   140007ee0:	or     BYTE PTR [rax],al
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	cs rex.XB push r10
   140007ee7:	push   rsp
   140007ee8:	and    al,0x58
   140007eea:	rex.WB
   140007eeb:	rex.B
   140007eec:	add    BYTE PTR [r8],al
   140007eef:	add    BYTE PTR [rax+0x8000072],cl
   140007ef5:	add    BYTE PTR [rax],al
   140007ef7:	add    BYTE PTR [rsi],ch
   140007ef9:	rex.XB push r10
   140007efb:	push   rsp
   140007efc:	and    al,0x58
   140007efe:	rex.WB pop r9
   140007f00:	add    BYTE PTR [rax],al
   140007f02:	add    BYTE PTR [rax],al
   140007f04:	nop
   140007f05:	jb     0x140007f07
   140007f07:	add    BYTE PTR [rax],cl
   140007f09:	add    BYTE PTR [rax],al
   140007f0b:	add    BYTE PTR [rsi],ch
   140007f0d:	rex.XB push r10
   140007f0f:	push   rsp
   140007f10:	and    al,0x58
   140007f12:	rex.WB pop r10
   140007f14:	add    BYTE PTR [rax],al
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	cwde   
   140007f19:	jb     0x140007f1b
   140007f1b:	add    BYTE PTR [rax+rax*1+0x0],dl
   140007f1f:	add    BYTE PTR [rsi],ch
   140007f21:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140007f29:	add    BYTE PTR [rax],al
   140007f2b:	add    al,dh
   140007f2d:	jb     0x140007f2f
   140007f2f:	add    BYTE PTR [rax],al
   140007f31:	or     eax,DWORD PTR [rax]
   140007f33:	add    BYTE PTR [rsi],ch
   140007f35:	jb     0x140007f9b
   140007f37:	(bad)  
   140007f38:	je     0x140007f9b
   140007f3a:	add    BYTE PTR [rax],al
   140007f3c:	lock jge 0x140007f3f
   140007f3f:	add    BYTE PTR [rax+0x2],al
   140007f42:	add    BYTE PTR [rax],al
   140007f44:	cs jb  0x140007fab
   140007f47:	(bad)  
   140007f48:	je     0x140007fab
   140007f4a:	and    al,0x7a
   140007f4c:	jp     0x140007fc8
   140007f4e:	fs (bad) 
   140007f50:	add    BYTE PTR [eax],al
   140007f53:	add    BYTE PTR [rax],dh
   140007f55:	add    BYTE PTR [rax],0x0
   140007f58:	mov    al,0xa
   140007f5a:	add    BYTE PTR [rax],al
   140007f5c:	cs js  0x140007fc3
   140007f5f:	(bad)  
   140007f60:	je     0x140007fc3
   140007f62:	add    BYTE PTR [rax],al
   140007f64:	loopne 0x140007ef0
   140007f66:	add    BYTE PTR [rax],al
   140007f68:	mov    ah,0x1
   140007f6a:	add    BYTE PTR [rax],al
   140007f6c:	cs js  0x140007fd3
   140007f6f:	(bad)  
   140007f70:	je     0x140007fd3
   140007f72:	and    al,0x78
   140007f74:	add    BYTE PTR [rax],al
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	xchg   esp,eax
   140007f79:	mov    WORD PTR [rax],es
   140007f7b:	add    BYTE PTR [rax+rax*1+0x0],ah
   140007f7f:	add    BYTE PTR [rsi],ch
   140007f81:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140007f89:	add    BYTE PTR [rax],al
   140007f8b:	add    al,bh
   140007f8d:	mov    WORD PTR [rax],es
   140007f8f:	add    BYTE PTR [rax+rax*1],dl
   140007f92:	add    BYTE PTR [rax],al
   140007f94:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007f9d:	add    BYTE PTR [rax],al
   140007f9f:	add    BYTE PTR [rax],dl
   140007fa1:	lea    eax,[rax]
   140007fa3:	add    BYTE PTR [rax+0x2],dl
   140007fa6:	add    BYTE PTR [rax],al
   140007fa8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140007fb1:	add    BYTE PTR [rax],al
   140007fb3:	add    BYTE PTR [rax-0x71],ah
   140007fb6:	add    BYTE PTR [rax],al
   140007fb8:	(bad)  
   140007fb9:	add    eax,0x692e0000
   140007fbe:	fs (bad) 
   140007fc0:	je     0x140008023
   140007fc2:	and    al,0x36
   140007fc4:	add    BYTE PTR [rax],al
   140007fc6:	add    BYTE PTR [rax],al
   140007fc8:	add    BYTE PTR [rax+0x300000],ah
   140007fce:	add    BYTE PTR [rax],al
   140007fd0:	cs fs (bad) 
   140007fd3:	je     0x140008036
   140007fd5:	add    BYTE PTR [rax],al
   140007fd7:	add    BYTE PTR [rax],dh
   140007fd9:	movabs al,ds:0x642e000000be0000
   140007fe2:	(bad)  
   140007fe3:	je     0x140008046
   140007fe5:	and    al,0x72
   140007fe7:	add    al,dh
   140007fe9:	movabs al,ds:0x622e0000aaa80000
   140007ff2:	jae    0x140008067
   140007ff4:	add    BYTE PTR [rax],al
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	add    BYTE PTR [rax+0x1],dl
   140007ffb:	add    ah,cl
   140007ffd:	add    eax,DWORD PTR [rax]
   140007fff:	add    BYTE PTR [rsi],ch
   140008001:	jo     0x140008067
   140008003:	(bad)  
   140008004:	je     0x140008067
   140008006:	add    BYTE PTR [rax],al
   140008008:	add    BYTE PTR [rax+0x1],ah
   14000800b:	add    al,dh
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    BYTE PTR [rsi],ch
   140008011:	jb     0x140008086
   140008013:	jb     0x140008078
   140008015:	and    al,0x30
   140008017:	xor    DWORD PTR [rax],eax
   140008019:	add    BYTE PTR [rax],al
   14000801b:	add    al,dh
   14000801d:	(bad)  
   14000801e:	add    DWORD PTR [rax],eax
   140008020:	clc    
   140008021:	(bad)  
   140008022:	add    BYTE PTR [rax],al
   140008024:	cs jb  0x14000809a
   140008027:	jb     0x14000808c
   140008029:	and    al,0x30
   14000802b:	xor    al,BYTE PTR [rax]
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    BYTE PTR [rcx],dl
   140008031:	sbb    BYTE PTR [rdx],al
   140008033:	add    BYTE PTR [rax],dl
   140008035:	push   rdx
   140008036:	or     al,0x30
   140008038:	xchg   esp,eax
   140008039:	pop    rbx
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	sub    BYTE PTR [rax+rax*1+0x0],bh
   140008040:	(bad)  
   140008041:	(bad)  
   140008042:	(bad)  
   140008043:	call   QWORD PTR [rsi+0x8000060]
   140008049:	adc    BYTE PTR [rax],al
   14000804b:	add    bh,bh
   14000804d:	(bad)  
   14000804e:	(bad)  
   14000804f:	jmp    FWORD PTR [rsi]
   140008051:	adc    BYTE PTR [rax],al
   140008053:	add    BYTE PTR [rax],al
   140008055:	add    BYTE PTR [rax],al
   140008057:	add    BYTE PTR [rax],bh
   140008059:	adc    BYTE PTR [rax],al
   14000805b:	add    bh,bh
   14000805d:	(bad)  
   14000805e:	(bad)  
   14000805f:	call   QWORD PTR [rcx]
   140008061:	adc    al,BYTE PTR [rcx]
   140008063:	add    BYTE PTR [rcx],cl
   140008065:	(bad)  
   140008066:	add    BYTE PTR [rax],al
   140008068:	xchg   esp,eax
   140008069:	pop    rbx
   14000806a:	add    BYTE PTR [rax],al
   14000806c:	add    BYTE PTR [rax+rax*1+0x0],bh
   140008070:	rex.W adc BYTE PTR [rax],al
   140008073:	add    bh,bh
   140008075:	(bad)  
   140008076:	(bad)  
   140008077:	inc    DWORD PTR [rcx]
   140008079:	add    al,0x1
   14000807b:	add    BYTE PTR [rdx+rax*4],al
   14000807e:	add    BYTE PTR [rax],al
   140008080:	adc    DWORD PTR [rax],ebx
   140008082:	add    al,0x0
   140008084:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008087:	add    BYTE PTR [rdx],cl
   140008089:	push   rdx
   14000808a:	(bad)  
   14000808b:	jo     0x140008021
   14000808d:	pop    rbx
   14000808e:	add    BYTE PTR [rax],al
   140008090:	fdivr  DWORD PTR [rbx+0x0]
   140008093:	add    BYTE PTR [rax],al
   140008095:	add    BYTE PTR [rax],al
   140008097:	add    BYTE PTR [rax-0xfffff0],dh
   14000809d:	(bad)  
   14000809e:	(bad)  
   14000809f:	call   QWORD PTR [rcx]
   1400080a1:	adc    eax,DWORD PTR [rdx]
   1400080a3:	add    BYTE PTR [rdx],cl
   1400080a5:	push   rdx
   1400080a6:	(bad)  
   1400080a7:	xor    BYTE PTR [rbx+rbx*2+0x7bb00000],dl
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	add    BYTE PTR [rcx],dl
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	(bad)  
   1400080b5:	(bad)  
   1400080b6:	(bad)  
   1400080b7:	call   FWORD PTR [rip+0x11]        # 0x1400080ce
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rdi],ah
   1400080c1:	adc    DWORD PTR [rax],eax
   1400080c3:	add    bh,bh
   1400080c5:	(bad)  
   1400080c6:	(bad)  
   1400080c7:	call   QWORD PTR [rcx]
   1400080c9:	adc    eax,DWORD PTR [rdx]
   1400080cb:	add    BYTE PTR [rdx],cl
   1400080cd:	push   rdx
   1400080ce:	(bad)  
   1400080cf:	xor    BYTE PTR [rbx+rbx*2+0x7b880000],dl
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	(bad)  
   1400080d9:	(bad)  
   1400080da:	(bad)  
   1400080db:	jmp    FWORD PTR [rdx+0x60]
   1400080e1:	add    BYTE PTR [rax],al
   1400080e3:	add    BYTE PTR [rax+0x38000060],bh
   1400080e9:	adc    DWORD PTR [rax],eax
   1400080eb:	add    bh,bh
   1400080ed:	(bad)  
   1400080ee:	(bad)  
   1400080ef:	call   FWORD PTR [rax+0x11]
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	add    BYTE PTR [rax],al
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	jns    0x14000810b
   1400080fa:	add    BYTE PTR [rax],al
   1400080fc:	(bad)  
   1400080fd:	(bad)  
   1400080fe:	(bad)  
   1400080ff:	call   FWORD PTR [rcx]
   140008101:	adc    eax,DWORD PTR [rcx]
   140008103:	add    BYTE PTR [rdx+riz*8],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	movabs al,ds:0x110000006000005b
   140008111:	sbb    BYTE PTR [rax+rax*1],al
   140008114:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008117:	add    BYTE PTR [rdx],cl
   140008119:	push   rdx
   14000811a:	(bad)  
   14000811b:	jo     0x1400080b1
   14000811d:	pop    rbx
   14000811e:	add    BYTE PTR [rax],al
   140008120:	(bad)  
   140008121:	jnp    0x140008123
   140008123:	add    BYTE PTR [rax],al
   140008125:	add    BYTE PTR [rax],al
   140008127:	add    al,dh
   140008129:	adc    DWORD PTR [rax],eax
   14000812b:	add    bh,bh
   14000812d:	(bad)  
   14000812e:	(bad)  
   14000812f:	call   QWORD PTR [rdi]
   140008131:	adc    al,BYTE PTR [rax]
   140008133:	add    BYTE PTR [rax],al
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    BYTE PTR [rax],bh
   140008139:	adc    al,BYTE PTR [rax]
   14000813b:	add    bh,bh
   14000813d:	(bad)  
   14000813e:	(bad)  
   14000813f:	call   QWORD PTR [rcx]
   140008141:	sbb    BYTE PTR [rax+rax*1],al
   140008144:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008147:	add    BYTE PTR [rdx],cl
   140008149:	push   rdx
   14000814a:	(bad)  
   14000814b:	jo     0x1400080e1
   14000814d:	pop    rbx
   14000814e:	add    BYTE PTR [rax],al
   140008150:	cmp    BYTE PTR [rbx+0x0],bh
   140008153:	add    BYTE PTR [rax],al
   140008155:	add    BYTE PTR [rax],al
   140008157:	add    BYTE PTR [rdx+rdx*1+0x0],ah
   14000815b:	add    bh,bh
   14000815d:	(bad)  
   14000815e:	(bad)  
   14000815f:	dec    DWORD PTR [rcx+0x12]
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    BYTE PTR [rcx-0xffffee],bh
   14000816d:	(bad)  
   14000816e:	(bad)  
   14000816f:	call   QWORD PTR [rcx]
   140008171:	sbb    BYTE PTR [rax+rax*1],al
   140008174:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008177:	add    BYTE PTR [rdx],cl
   140008179:	push   rdx
   14000817a:	(bad)  
   14000817b:	jo     0x140008111
   14000817d:	pop    rbx
   14000817e:	add    BYTE PTR [rax],al
   140008180:	adc    BYTE PTR [rbx+0x0],bh
   140008183:	add    bh,bh
   140008185:	(bad)  
   140008186:	(bad)  
   140008187:	dec    esi
   140008189:	(bad)  
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	add    BYTE PTR [rax],al
   14000818e:	add    BYTE PTR [rax],al
   140008190:	fsub   QWORD PTR [rax+0x0]
   140008193:	add    bh,bh
   140008195:	(bad)  
   140008196:	(bad)  
   140008197:	(bad)  
   140008198:	in     al,dx
   140008199:	(bad)  
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	rcl    BYTE PTR [rdx],1
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	(bad)  
   1400081a5:	(bad)  
   1400081a6:	(bad)  
   1400081a7:	push   rbp
   1400081a9:	adc    al,BYTE PTR [rax]
   1400081ab:	add    BYTE PTR [rax],al
   1400081ad:	add    BYTE PTR [rax],al
   1400081af:	add    BYTE PTR [rbx+rdx*1],ah
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	add    al,BYTE PTR [rax]
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	adc    eax,DWORD PTR cs:[rax]
   1400081bb:	add    bh,bh
   1400081bd:	(bad)  
   1400081be:	(bad)  
   1400081bf:	call   QWORD PTR [rcx]
   1400081c1:	adc    eax,DWORD PTR [rdx]
   1400081c3:	add    BYTE PTR [rdx],cl
   1400081c5:	push   rdx
   1400081c6:	(bad)  
   1400081c7:	xor    BYTE PTR [rbx+rbx*2+0x7ae80000],dl
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	(bad)  
   1400081d1:	(bad)  
   1400081d2:	(bad)  
   1400081d3:	(bad)  
   1400081d4:	(bad)  
   1400081d5:	(bad)  
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	(bad)  
   1400081d9:	(bad)  
   1400081da:	(bad)  
   1400081db:	dec    DWORD PTR [rdx]
   1400081dd:	(bad)  
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	add    DWORD PTR [rax],eax
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	sbb    BYTE PTR [rcx+0x0],ah
   1400081e7:	add    BYTE PTR [rbx+rdx*1+0x0],al
   1400081eb:	add    bh,bh
   1400081ed:	(bad)  
   1400081ee:	(bad)  
   1400081ef:	jmp    FWORD PTR [rsi+0x13]
   1400081f2:	add    BYTE PTR [rax],al
   1400081f4:	add    DWORD PTR [rax],eax
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	(bad)  
   1400081f9:	adc    eax,DWORD PTR [rax]
   1400081fb:	add    bh,bh
   1400081fd:	(bad)  
   1400081fe:	(bad)  
   1400081ff:	call   QWORD PTR [rcx]
   140008201:	sbb    BYTE PTR [rax+rax*1],al
   140008204:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008207:	add    BYTE PTR [rdx],cl
   140008209:	push   rdx
   14000820a:	(bad)  
   14000820b:	jo     0x1400081a1
   14000820d:	pop    rbx
   14000820e:	add    BYTE PTR [rax],al
   140008210:	sar    BYTE PTR [rdx+0x0],0x0
   140008214:	add    BYTE PTR [rax],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	lock adc eax,DWORD PTR [rax]
   14000821b:	add    bh,bh
   14000821d:	(bad)  
   14000821e:	(bad)  
   14000821f:	jmp    QWORD PTR [rcx]
   140008221:	adc    al,0x0
   140008223:	add    BYTE PTR [rcx],al
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rdx+0x14],al
   14000822a:	add    BYTE PTR [rax],al
   14000822c:	(bad)  
   14000822d:	(bad)  
   14000822e:	(bad)  
   14000822f:	call   QWORD PTR [rcx]
   140008231:	sbb    BYTE PTR [rax+rax*1],al
   140008234:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008237:	add    BYTE PTR [rdx],cl
   140008239:	push   rdx
   14000823a:	(bad)  
   14000823b:	jo     0x1400081d1
   14000823d:	pop    rbx
   14000823e:	add    BYTE PTR [rax],al
   140008240:	cwde   
   140008241:	jp     0x140008243
   140008243:	add    BYTE PTR [rax],al
   140008245:	add    BYTE PTR [rax],al
   140008247:	add    BYTE PTR [rax+0x14],dh
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	(bad)  
   14000824d:	(bad)  
   14000824e:	(bad)  
   14000824f:	call   QWORD PTR [rbp+0x14]
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    ch,al
   140008259:	adc    al,0x0
   14000825b:	add    BYTE PTR [rdx],al
   14000825d:	add    BYTE PTR [rax],al
   14000825f:	add    bh,cl
   140008261:	adc    al,0x0
   140008263:	add    bh,bh
   140008265:	(bad)  
   140008266:	(bad)  
   140008267:	call   FWORD PTR [rcx]
   140008269:	xor    al,0x5
   14000826b:	add    BYTE PTR [rdx],ah
   14000826d:	add    DWORD PTR [rax*1+0x60147015],ecx
   140008274:	adc    esi,DWORD PTR [rax]
   140008276:	add    BYTE PTR [rax],al
   140008278:	movabs al,ds:0x10000285000005b
   140008281:	(bad)  
   140008282:	add    al,BYTE PTR [rax]
   140008284:	(bad)  
   140008285:	xor    al,BYTE PTR [rdx]
   140008287:	xor    BYTE PTR [rcx],al
   140008289:	add    al,0x1
   14000828b:	add    BYTE PTR [rdx+rax*2],al
   14000828e:	add    BYTE PTR [rax],al
   140008290:	adc    DWORD PTR [rsi],ebx
   140008292:	or     al,BYTE PTR [rax]
   140008294:	(bad)  
   140008295:	xor    al,0x11
   140008297:	add    BYTE PTR [rdx],dl
   140008299:	jb     0x1400082a9
   14000829b:	lock or al,0xe0
   14000829e:	or     dl,al
   1400082a0:	or     al,al
   1400082a2:	(bad)  
   1400082a3:	jo     0x1400082aa
   1400082a5:	(bad)  
   1400082a6:	add    al,0x50
   1400082a8:	xchg   esp,eax
   1400082a9:	pop    rbx
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	jo     0x140008328
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	(bad)  
   1400082b1:	(bad)  
   1400082b2:	(bad)  
   1400082b3:	jmp    FWORD PTR [rsi]
   1400082b5:	(bad)  
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	add    BYTE PTR [rax],al
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	cmp    ah,BYTE PTR [rcx+0x0]
   1400082bf:	add    ah,dl
   1400082c1:	(bad)  
   1400082c2:	add    BYTE PTR [rax],al
   1400082c4:	(bad)  
   1400082c5:	(bad)  
   1400082c6:	(bad)  
   1400082c7:	call   rbp
   1400082c9:	sbb    al,BYTE PTR [rax]
   1400082cb:	add    BYTE PTR [rax],al
   1400082cd:	add    BYTE PTR [rax],al
   1400082cf:	add    dh,ah
   1400082d1:	sbb    al,BYTE PTR [rax]
   1400082d3:	add    BYTE PTR [rcx],al
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rdx],dl
   1400082d9:	sbb    eax,DWORD PTR [rax]
   1400082db:	add    BYTE PTR [rax],al
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rdi],dl
   1400082e1:	sbb    eax,DWORD PTR [rax]
   1400082e3:	add    bh,bh
   1400082e5:	(bad)  
   1400082e6:	(bad)  
   1400082e7:	inc    DWORD PTR [rcx]
   1400082e9:	sbb    DWORD PTR [rdx],ecx
   1400082eb:	add    BYTE PTR [rcx],bl
   1400082ed:	je     0x1400082f8
   1400082ef:	add    BYTE PTR [rcx],bl
   1400082f1:	or     BYTE PTR fs:[rax],al
   1400082f4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400082f8:	sbb    DWORD PTR [rsi+rax*1],esi
   1400082fb:	add    BYTE PTR [rcx],bl
   1400082fd:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1460f84e3
   140008303:	add    BYTE PTR [rdi],cl
   140008305:	fs (bad) 
   140008307:	add    BYTE PTR [rdi],cl
   140008309:	xor    al,0x6
   14000830b:	add    BYTE PTR [rdi],cl
   14000830d:	xor    cl,BYTE PTR [rbx]
   14000830f:	jo     0x140008312
   140008311:	adc    al,0x8
   140008313:	add    BYTE PTR [rsp+riz*2],dl
   140008316:	or     BYTE PTR [rax],al
   140008318:	adc    al,0x54
   14000831a:	(bad)  
   14000831b:	add    BYTE PTR [rsp+rsi*1],dl
   14000831e:	(bad)  
   14000831f:	add    BYTE PTR [rdx+rsi*1],dl
   140008322:	adc    BYTE PTR [rax+0x19],dh
   140008325:	and    al,BYTE PTR [rdx]
   140008327:	add    BYTE PTR [rdi],al
   140008329:	add    DWORD PTR [rip+0x5c3000],edx        # 0x1405cb32f
   14000832f:	add    BYTE PTR [rax+0x7a],cl
   140008332:	add    BYTE PTR [rax],al
   140008334:	xchg   edx,eax
   140008335:	add    BYTE PTR [rax],al
   140008337:	add    bh,bh
   140008339:	(bad)  
   14000833a:	(bad)  
   14000833b:	dec    DWORD PTR [rcx+riz*2+0x0]
   14000833f:	add    BYTE PTR [rsi+rbx*1],ch
   140008342:	add    BYTE PTR [rax],al
   140008344:	(bad)  
   140008345:	(bad)  
   140008346:	(bad)  
   140008347:	jmp    QWORD PTR [rax+0x1e]
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax],al
   140008350:	sbb    DWORD PTR [rbx],esp
   140008352:	(bad)  
   140008353:	add    BYTE PTR [rbx],ah
   140008355:	xor    al,0x13
   140008357:	add    BYTE PTR [rdi],dl
   140008359:	mov    dl,0x13
   14000835b:	loopne 0x14000836e
   14000835d:	jo     0x14000836f
   14000835f:	(bad)  
   140008360:	xchg   esp,eax
   140008361:	pop    rbx
   140008362:	add    BYTE PTR [rax],al
   140008364:	and    BYTE PTR [rdx+0x0],bh
   140008367:	add    bh,bh
   140008369:	(bad)  
   14000836a:	(bad)  
   14000836b:	inc    DWORD PTR [rax]
   14000836d:	add    BYTE PTR [rax],al
   14000836f:	add    bh,bh
   140008371:	(bad)  
   140008372:	(bad)  
   140008373:	inc    DWORD PTR [rax]
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rcx],al
   140008379:	add    BYTE PTR [rax],al
   14000837b:	add    BYTE PTR [rax],al
   14000837d:	add    BYTE PTR [rax],al
   14000837f:	add    BYTE PTR [rcx],al
	...
   14000838d:	add    BYTE PTR [rax],al
   14000838f:	add    BYTE PTR [rbx],al
   140008391:	add    BYTE PTR [rax],al
   140008393:	add    BYTE PTR [rcx],al
   140008395:	add    BYTE PTR [rax],al
   140008397:	add    BYTE PTR [rax+0x2000083],dh
   14000839d:	add    BYTE PTR [rax],al
   14000839f:	add    BYTE PTR [rdx],al
   1400083a1:	add    BYTE PTR [rax],al
   1400083a3:	add    BYTE PTR [rbx],al
   1400083a5:	add    BYTE PTR [rax],al
   1400083a7:	add    BYTE PTR [rcx],al
   1400083a9:	add    BYTE PTR [rax],al
   1400083ab:	add    ah,al
   1400083ad:	add    DWORD PTR [rax],0x0
	...
   1400083bc:	pop    rsi
   1400083bd:	(bad)  
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	cmp    BYTE PTR [rax],al
	...
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	ret    0x61
   1400083d3:	add    BYTE PTR [rax],bh
	...
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    ah,dl
   1400083e1:	(bad)  
   1400083e2:	add    BYTE PTR [rax],al
   1400083e4:	(bad)  
   1400083e5:	(bad)  
   1400083e6:	(bad)  
   1400083e7:	inc    DWORD PTR [rax+0x1f]
   1400083ea:	add    BYTE PTR [rax],al
   1400083ec:	add    BYTE PTR [rax],al
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	(bad)  
   1400083f1:	(bad)  
   1400083f2:	add    BYTE PTR [rax],al
   1400083f4:	(bad)  
   1400083f5:	(bad)  
   1400083f6:	(bad)  
   1400083f7:	call   FWORD PTR [rsi+0x61]
   1400083fa:	add    BYTE PTR [rax],al
   1400083fc:	add    BYTE PTR [rax],al
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	imul   esp,DWORD PTR [rcx+0x0],0x0
   140008404:	add    DWORD PTR [rax],eax
   140008406:	add    BYTE PTR [rax],al
   140008408:	jns    0x14000846b
   14000840a:	add    BYTE PTR [rax],al
   14000840c:	add    al,BYTE PTR [rax]
   14000840e:	add    BYTE PTR [rax],al
   140008410:	mov    ah,0x61
   140008412:	add    BYTE PTR [rax],al
   140008414:	add    BYTE PTR [rax],al
   140008416:	add    BYTE PTR [rax],al
   140008418:	iret   
   140008419:	(bad)  
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	add    eax,DWORD PTR [rax]
   14000841e:	add    BYTE PTR [rax],al
   140008420:	sbb    DWORD PTR [rdx],ecx
   140008422:	add    al,BYTE PTR [rax]
   140008424:	or     dh,BYTE PTR [rdx]
   140008426:	(bad)  
   140008427:	push   rax
   140008428:	xchg   esp,eax
   140008429:	pop    rbx
   14000842a:	add    BYTE PTR [rax],al
   14000842c:	and    BYTE PTR [rdx+0x0],bh
   14000842f:	add    BYTE PTR [rcx],al
   140008431:	add    eax,0x34050002
   140008436:	add    DWORD PTR [rax],eax
   140008438:	add    DWORD PTR [rdx],edx
   14000843a:	add    eax,0xe421200
   14000843f:	jo     0x14000844e
   140008441:	(bad)  
   140008442:	or     al,0x50
   140008444:	or     esi,DWORD PTR [rax]
   140008446:	add    BYTE PTR [rax],al
   140008448:	adc    DWORD PTR [rbx],edx
   14000844a:	add    al,BYTE PTR [rax]
   14000844c:	or     dl,BYTE PTR [rdx+0x6]
   14000844f:	xor    BYTE PTR [rbx+rbx*2+0x7cc80000],dl
   140008456:	add    BYTE PTR [rax],al
   140008458:	(bad)  
   140008459:	(bad)  
   14000845a:	(bad)  
   14000845b:	push   rax
   14000845d:	(bad)  
   14000845e:	add    BYTE PTR [rax],al
   140008460:	add    BYTE PTR [rax],al
   140008462:	add    BYTE PTR [rax],al
   140008464:	add    BYTE PTR [rdx+0x0],ah
   140008467:	add    BYTE PTR [rax-0xffffde],bl
   14000846d:	(bad)  
   14000846e:	(bad)  
   14000846f:	jmp    FWORD PTR [rsi+0x22]
   140008475:	add    BYTE PTR [rax],al
   140008477:	add    bl,cl
   140008479:	and    al,BYTE PTR [rax]
   14000847b:	add    bh,bh
   14000847d:	(bad)  
   14000847e:	(bad)  
   14000847f:	call   FWORD PTR [rcx]
   140008481:	(bad)  
   140008482:	add    eax,0xd340d00
   140008487:	add    DWORD PTR [rip+0x6010a01],ecx        # 0x146018e8e
   14000848d:	jo     0x14000848f
   14000848f:	add    BYTE PTR [rax+0x4000005b],ah
   140008495:	or     BYTE PTR [rax],al
   140008497:	add    BYTE PTR [rcx],al
   140008499:	clts   
   14000849b:	add    BYTE PTR [rdi],cl
   14000849d:	push   rsp
   14000849e:	(bad)  
   14000849f:	add    BYTE PTR [rdi],cl
   1400084a1:	xor    al,0x6
   1400084a3:	add    BYTE PTR [rdi],cl
   1400084a5:	xor    cl,BYTE PTR [rbx]
   1400084a7:	jo     0x1400084aa
   1400084a9:	or     al,BYTE PTR [rax+rax*1]
   1400084ac:	or     dh,BYTE PTR [rdi+rax*1]
   1400084af:	add    BYTE PTR [rdx],cl
   1400084b1:	xor    al,BYTE PTR [rsi]
   1400084b3:	jo     0x1400084b6
   1400084b5:	sbb    DWORD PTR [rdx],ecx
   1400084b7:	add    BYTE PTR [rcx],bl
   1400084b9:	je     0x1400084cc
   1400084bb:	add    BYTE PTR [rcx],bl
   1400084bd:	adc    BYTE PTR fs:[rax],al
   1400084c0:	sbb    DWORD PTR [rdi+rcx*1+0x0],edx
   1400084c4:	sbb    DWORD PTR [rsi+rcx*1],esi
   1400084c7:	add    BYTE PTR [rcx],bl
   1400084c9:	mov    dl,0x15
   1400084cb:	loopne 0x1400084e6
   1400084cd:	(bad)  
   1400084ce:	add    eax,0x43340d00
   1400084d3:	add    BYTE PTR [rip+0x6004001],cl        # 0x14600c4da
   1400084d9:	jo     0x1400084db
   1400084db:	add    BYTE PTR [rax-0xfffffa5],ah
   1400084e1:	add    DWORD PTR [rax],eax
   1400084e3:	add    BYTE PTR [rcx],al
   1400084e5:	adc    ecx,DWORD PTR [rax]
   1400084e7:	add    BYTE PTR [rbx],dl
   1400084e9:	push   rsp
   1400084ea:	or     eax,0xc341300
   1400084ef:	add    BYTE PTR [rbx],dl
   1400084f1:	jb     0x140008502
   1400084f3:	loopne 0x140008502
   1400084f5:	jo     0x140008503
   1400084f7:	(bad)  
   1400084f8:	add    DWORD PTR [rdx],ecx
   1400084fa:	add    al,0x0
   1400084fc:	or     dh,BYTE PTR [rax+rcx*1]
   1400084ff:	add    BYTE PTR [rdx],cl
   140008501:	push   rdx
   140008502:	(bad)  
   140008503:	jo     0x140008506
   140008505:	clts   
   140008507:	add    BYTE PTR [rdi],cl
   140008509:	fs (bad) 
   14000850b:	add    BYTE PTR [rdi],cl
   14000850d:	push   rsp
   14000850e:	(bad)  
   14000850f:	add    BYTE PTR [rdi],cl
   140008511:	xor    cl,BYTE PTR [rbx]
   140008513:	jo     0x140008516
   140008515:	sbb    DWORD PTR [rdx],ecx
   140008517:	add    BYTE PTR [rcx],bl
   140008519:	je     0x140008526
   14000851b:	add    BYTE PTR [rcx],bl
   14000851d:	or     al,BYTE PTR fs:[rax]
   140008520:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140008524:	sbb    DWORD PTR [rax+rcx*1],esi
   140008527:	add    BYTE PTR [rcx],bl
   140008529:	push   rdx
   14000852a:	adc    eax,0xc1c01e0
   14000852f:	add    BYTE PTR [rsp+riz*2],bl
   140008532:	adc    DWORD PTR [rax],eax
   140008534:	sbb    al,0x54
   140008536:	adc    BYTE PTR [rax],al
   140008538:	sbb    al,0x34
   14000853a:	ltr    WORD PTR [rdx+rsi*2]
   14000853e:	sbb    al,dh
   140008540:	(bad)  
   140008541:	loopne 0x140008557
   140008543:	rcl    BYTE PTR [rdx],1
   140008545:	rcl    BYTE PTR [rax],0x70
   140008548:	adc    DWORD PTR [rip+0x3425000a],esp        # 0x174258558
   14000854e:	adc    eax,DWORD PTR [rax]
   140008550:	sbb    DWORD PTR [rdx+0x12],esi
   140008553:	lock adc al,ah
   140008556:	(bad)  
   140008557:	ror    BYTE PTR [rax+rax*8],1
   14000855a:	or     dh,BYTE PTR [rax+0x9]
   14000855d:	(bad)  
   14000855e:	or     BYTE PTR [rax-0x6c],dl
   140008561:	pop    rbx
   140008562:	add    BYTE PTR [rax],al
   140008564:	movabs al,ds:0x16ffffffff00007c
   14000856d:	(bad)  
   14000856e:	add    BYTE PTR [rax],al
   140008570:	add    BYTE PTR [rax],al
   140008572:	add    BYTE PTR [rax],al
   140008574:	and    ah,BYTE PTR [rdx+0x0]
   140008577:	add    BYTE PTR [rcx],al
   140008579:	add    BYTE PTR [rax],al
   14000857b:	add    BYTE PTR [rdx],dh
   14000857d:	(bad)  
   14000857e:	add    BYTE PTR [rax],al
   140008580:	add    BYTE PTR [rax],al
   140008582:	add    BYTE PTR [rax],al
   140008584:	rex.X (bad) 
   140008586:	add    BYTE PTR [rax],al
   140008588:	add    eax,DWORD PTR [rax]
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	push   rdx
   14000858d:	(bad)  
   14000858e:	add    BYTE PTR [rax],al
   140008590:	add    al,0x0
   140008592:	add    BYTE PTR [rax],al
   140008594:	(bad)  
   140008596:	add    BYTE PTR [rax],al
   140008598:	add    eax,DWORD PTR [rax]
   14000859a:	add    BYTE PTR [rax],al
   14000859c:	jb     0x140008600
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	(bad)  
   1400085a1:	(bad)  
   1400085a2:	(bad)  
   1400085a3:	inc    DWORD PTR [rdx+0x7000062]
   1400085a9:	add    BYTE PTR [rax],al
   1400085ab:	add    BYTE PTR [rsi-0xffff9e],cl
   1400085b1:	(bad)  
   1400085b2:	(bad)  
   1400085b3:	call   FWORD PTR [rsi+0x9000062]
   1400085b9:	add    BYTE PTR [rax],al
   1400085bb:	add    BYTE PTR [rdx+0xa000062],ch
   1400085c1:	add    BYTE PTR [rax],al
   1400085c3:	add    BYTE PTR [rdx-0xffff9e],bh
   1400085c9:	(bad)  
   1400085ca:	(bad)  
   1400085cb:	dec    edx
   1400085cd:	(bad)  
   1400085ce:	add    BYTE PTR [rax],al
   1400085d0:	or     al,0x0
   1400085d2:	add    BYTE PTR [rax],al
   1400085d4:	(bad)  
   1400085d5:	(bad)  
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	or     eax,0xe6000000
   1400085dd:	(bad)  
   1400085de:	add    BYTE PTR [rax],al
   1400085e0:	or     al,0x0
   1400085e2:	add    BYTE PTR [rax],al
   1400085e4:	mul    BYTE PTR [rdx+0x0]
   1400085e7:	add    BYTE PTR [rdi],cl
   1400085e9:	add    BYTE PTR [rax],al
   1400085eb:	add    BYTE PTR [rsi],al
   1400085ed:	movsxd eax,DWORD PTR [rax]
   1400085ef:	add    BYTE PTR [rax],dl
   1400085f1:	add    BYTE PTR [rax],al
   1400085f3:	add    BYTE PTR [rsi],dl
   1400085f5:	movsxd eax,DWORD PTR [rax]
   1400085f7:	add    BYTE PTR [rdi],cl
   1400085f9:	add    BYTE PTR [rax],al
   1400085fb:	add    BYTE PTR [rsi],ah
   1400085fd:	movsxd eax,DWORD PTR [rax]
   1400085ff:	add    bh,bh
   140008601:	(bad)  
   140008602:	(bad)  
   140008603:	push   QWORD PTR [rsi]
   140008605:	movsxd eax,DWORD PTR [rax]
   140008607:	add    BYTE PTR [rbx],dl
   140008609:	add    BYTE PTR [rax],al
   14000860b:	add    BYTE PTR [rdx+0x63],al
   14000860e:	add    BYTE PTR [rax],al
   140008610:	adc    al,0x0
   140008612:	add    BYTE PTR [rax],al
   140008614:	push   rdx
   140008615:	movsxd eax,DWORD PTR [rax]
   140008617:	add    BYTE PTR [rbx],dl
   140008619:	add    BYTE PTR [rax],al
   14000861b:	add    BYTE PTR [rdx+0x63],ah
   14000861e:	add    BYTE PTR [rax],al
   140008620:	(bad)  
   140008621:	add    BYTE PTR [rax],al
   140008623:	add    BYTE PTR [rdx+0x63],dh
   140008626:	add    BYTE PTR [rax],al
   140008628:	(bad)  
   140008629:	add    BYTE PTR [rax],al
   14000862b:	add    BYTE PTR [rdx+0x16000063],al
   140008631:	add    BYTE PTR [rax],al
   140008633:	add    BYTE PTR [rdx-0xffff9d],dl
   140008639:	(bad)  
   14000863a:	(bad)  
   14000863b:	jmp    QWORD PTR [rdx+0x1a000063]
   140008641:	add    BYTE PTR [rax],al
   140008643:	add    BYTE PTR [rsi-0xffff9d],ch
   140008649:	(bad)  
   14000864a:	(bad)  
   14000864b:	(bad)  
   14000864c:	mov    esi,0x1c000063
   140008651:	add    BYTE PTR [rax],al
   140008653:	add    dl,cl
   140008655:	movsxd eax,DWORD PTR [rax]
   140008657:	add    BYTE PTR [rip+0xffffffffda000000],bl        # 0x11a00865d
   14000865d:	movsxd eax,DWORD PTR [rax]
   14000865f:	add    BYTE PTR [rax+rsi*1+0x0],ah
   140008663:	add    bh,bh
   140008665:	(bad)  
   140008666:	(bad)  
   140008667:	push   QWORD PTR [rdx+0x31]
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	or     al,0x0
   14000866e:	add    BYTE PTR [rax],al
   140008670:	mov    ?,WORD PTR [rcx]
   140008672:	add    BYTE PTR [rax],al
   140008674:	or     eax,0x9a000000
   140008679:	xor    DWORD PTR [rax],eax
   14000867b:	add    BYTE PTR [rsi],cl
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    BYTE PTR [rcx+0xf000031],ch
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    BYTE PTR [rbp+0x10000031],bh
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    cl,cl
   140008691:	xor    DWORD PTR [rax],eax
   140008693:	add    BYTE PTR [rcx],dl
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    al,bl
   140008699:	xor    DWORD PTR [rax],eax
   14000869b:	add    BYTE PTR [rax+rax*1],cl
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	fnsave [rcx]
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	(bad)  
   1400086a5:	(bad)  
   1400086a6:	(bad)  
   1400086a7:	jmp    QWORD PTR [rbp+0x33]
   1400086aa:	add    BYTE PTR [rax],al
   1400086ac:	add    BYTE PTR [rax],al
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	test   BYTE PTR [rbx],dh
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	add    DWORD PTR [rax],eax
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	nop
   1400086b9:	xor    eax,DWORD PTR [rax]
   1400086bb:	add    BYTE PTR [rdx],al
   1400086bd:	add    BYTE PTR [rax],al
   1400086bf:	add    BYTE PTR [rdi+0x3000033],bl
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rbx+0x4000033],dh
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    BYTE PTR [rdi+0x5000033],bh
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    dh,cl
   1400086d9:	xor    eax,DWORD PTR [rax]
   1400086db:	add    BYTE PTR [rax],al
   1400086dd:	add    BYTE PTR [rax],al
   1400086df:	add    bl,dl
   1400086e1:	xor    eax,DWORD PTR [rax]
   1400086e3:	add    bh,bh
   1400086e5:	(bad)  
   1400086e6:	(bad)  
   1400086e7:	jmp    FWORD PTR [rbp+0x34]
   1400086ea:	add    BYTE PTR [rax],al
   1400086ec:	(bad)  
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    BYTE PTR [rcx+0x8000034],al
   1400086f5:	add    BYTE PTR [rax],al
   1400086f7:	add    BYTE PTR [rax+0x7000034],dl
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rbp-0xffffcc],dl
   140008705:	(bad)  
   140008706:	(bad)  
   140008707:	push   QWORD PTR [rsi*1+0x90000]
   14000870e:	add    BYTE PTR [rax],al
   140008710:	xor    rax,0xa0000
   140008716:	add    BYTE PTR [rax],al
   140008718:	push   rsp
   140008719:	xor    eax,0xb0000
   14000871e:	add    BYTE PTR [rax],al
   140008720:	outs   dx,DWORD PTR ds:[rsi]
   140008721:	xor    eax,0x90000
   140008726:	add    BYTE PTR [rax],al
   140008728:	je     0x14000875f
   14000872a:	add    BYTE PTR [rax],al
   14000872c:	(bad)  
   14000872d:	(bad)  
   14000872e:	(bad)  
   14000872f:	call   rdi
   140008731:	cmp    DWORD PTR [rax],eax
   140008733:	add    BYTE PTR [rbx],dl
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    bl,dh
   140008739:	cmp    DWORD PTR [rax],eax
   14000873b:	add    BYTE PTR [rax+rax*1],dl
   14000873e:	add    BYTE PTR [rax],al
   140008740:	(bad)  
   140008741:	cmp    DWORD PTR [rax],eax
   140008743:	add    BYTE PTR [rip+0xe000000],dl        # 0x14e008749
   140008749:	cmp    al,BYTE PTR [rax]
   14000874b:	add    BYTE PTR [rsi],dl
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    BYTE PTR [rdx],ah
   140008751:	cmp    al,BYTE PTR [rax]
   140008753:	add    BYTE PTR [rdi],dl
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rsi],ch
   140008759:	cmp    al,BYTE PTR [rax]
   14000875b:	add    BYTE PTR [rax],bl
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    BYTE PTR [rip+0x1300003a],bh        # 0x15300879f
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rdx+0x3a],al
   14000876a:	add    BYTE PTR [rax],al
   14000876c:	(bad)  
   14000876d:	(bad)  
   14000876e:	(bad)  
   14000876f:	call   FWORD PTR [rcx+0x1c00003c]
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    BYTE PTR [rdx+0x1d00003c],ch
   14000877d:	add    BYTE PTR [rax],al
   14000877f:	add    BYTE PTR [rsi+0x1e00003c],dh
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    cl,dl
   140008789:	cmp    al,0x0
   14000878b:	add    BYTE PTR [rax+rax*1],bl
   14000878e:	add    BYTE PTR [rax],al
   140008790:	(bad)  
   140008791:	cmp    al,0x0
   140008793:	add    bh,bh
   140008795:	(bad)  
   140008796:	(bad)  
   140008797:	push   QWORD PTR [rbp+0x1a00003d]
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    dh,al
   1400087a1:	cmp    eax,0x1b0000
   1400087a6:	add    BYTE PTR [rax],al
   1400087a8:	(bad)  
   1400087a9:	cmp    eax,0x1a0000
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	fidivr DWORD PTR [rip+0xffffffffffff0000]        # 0x13fff87b6
   1400087b6:	(bad)  
   1400087b7:	call   QWORD PTR [rcx]
   1400087b9:	and    al,0xa
   1400087bb:	add    BYTE PTR [rsp+riz*2],ah
   1400087be:	or     eax,0xc542000
   1400087c3:	add    BYTE PTR [rsp+rsi*1],bl
   1400087c6:	or     eax,DWORD PTR [rax]
   1400087c8:	adc    BYTE PTR [rdx+0xc],dl
   1400087cb:	lock or ah,al
   1400087ce:	or     BYTE PTR [rax-0x6c],dh
   1400087d1:	pop    rbx
   1400087d2:	add    BYTE PTR [rax],al
   1400087d4:	js     0x140008852
   1400087d6:	add    BYTE PTR [rax],al
   1400087d8:	(bad)  
   1400087d9:	(bad)  
   1400087da:	(bad)  
   1400087db:	push   rax
   1400087dd:	movsxd eax,DWORD PTR [rax]
   1400087df:	add    BYTE PTR [rax],al
   1400087e1:	add    BYTE PTR [rax],al
   1400087e3:	add    ah,bh
   1400087e5:	movsxd eax,DWORD PTR [rax]
   1400087e7:	add    BYTE PTR [rcx],al
   1400087e9:	add    BYTE PTR [rax],al
   1400087eb:	add    BYTE PTR [rsp+riz*2],cl
   1400087ee:	add    BYTE PTR [rax],al
   1400087f0:	add    al,BYTE PTR [rax]
   1400087f2:	add    BYTE PTR [rax],al
   1400087f4:	sbb    al,0x64
   1400087f6:	add    BYTE PTR [rax],al
   1400087f8:	add    DWORD PTR [rax],eax
   1400087fa:	add    BYTE PTR [rax],al
   1400087fc:	sub    al,0x64
   1400087fe:	add    BYTE PTR [rax],al
   140008800:	add    al,0x0
   140008802:	add    BYTE PTR [rax],al
   140008804:	(bad)  
   140008805:	add    BYTE PTR fs:[rax],al
   140008808:	add    eax,0x52000000
   14000880d:	add    BYTE PTR fs:[rax],al
   140008810:	add    BYTE PTR [rcx+0x0],0x0
   140008814:	(bad)  
   140008815:	(bad)  
   140008816:	(bad)  
   140008817:	call   QWORD PTR [rbx]
   140008819:	rex.X add BYTE PTR [rax],al
   14000881c:	add    BYTE PTR [rax],al
   14000881e:	add    BYTE PTR [rax],al
   140008820:	rex.RB
   140008821:	rex.X add BYTE PTR [rax],al
   140008824:	add    DWORD PTR [rax],eax
   140008826:	add    BYTE PTR [rax],al
   140008828:	pop    rdx
   140008829:	rex.X add BYTE PTR [rax],al
   14000882c:	add    al,BYTE PTR [rax]
   14000882e:	add    BYTE PTR [rax],al
   140008830:	data16 rex.X add BYTE PTR [rax],al
   140008834:	add    eax,DWORD PTR [rax]
   140008836:	add    BYTE PTR [rax],al
   140008838:	jne    0x14000887c
   14000883a:	add    BYTE PTR [rax],al
   14000883c:	add    al,0x0
   14000883e:	add    BYTE PTR [rax],al
   140008840:	mov    al,BYTE PTR [rdx+0x0]
   140008843:	add    BYTE PTR [rip+0xffffffff9f000000],al        # 0xdf008849
   140008849:	rex.X add BYTE PTR [rax],al
   14000884c:	(bad)  
   14000884d:	add    BYTE PTR [rax],al
   14000884f:	add    BYTE PTR [rcx+0x42],bh
   140008855:	add    BYTE PTR [rax],al
   140008857:	add    BYTE PTR [rsi-0xffffbe],bh
   14000885d:	(bad)  
   14000885e:	(bad)  
   14000885f:	inc    DWORD PTR [rcx]
   140008861:	(bad)  
   140008862:	or     DWORD PTR [rax],eax
   140008864:	(bad)  
   140008865:	(bad)  
   140008866:	adc    esi,eax
   140008868:	adc    eax,esp
   14000886a:	(bad)  
   14000886c:	or     eax,0xa700bc0
   140008871:	(bad)  
   140008872:	or     DWORD PTR [rax+0x8],edx
   140008875:	xor    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rcx],bl
   140008879:	sub    BYTE PTR [rdx],cl
   14000887b:	add    BYTE PTR [rax],ch
   14000887d:	fs adc eax,0x12342400
   140008883:	add    BYTE PTR [rax],bl
   140008885:	mov    dl,0x14
   140008887:	lock adc ah,al
   14000888a:	adc    al,dl
   14000888c:	(bad)  
   14000888d:	ror    BYTE PTR [rax+rsi*2],0x94
   140008891:	pop    rbx
   140008892:	add    BYTE PTR [rax],al
   140008894:	push   rax
   140008895:	jl     0x140008897
   140008897:	add    bh,bh
   140008899:	(bad)  
   14000889a:	(bad)  
   14000889b:	inc    DWORD PTR [rax]
   14000889d:	add    BYTE PTR [rax],al
   14000889f:	add    bh,bh
   1400088a1:	(bad)  
   1400088a2:	(bad)  
   1400088a3:	inc    DWORD PTR [rax]
   1400088a5:	add    BYTE PTR [rax],al
   1400088a7:	add    bh,bh
   1400088a9:	(bad)  
   1400088aa:	(bad)  
   1400088ab:	inc    DWORD PTR [rax]
   1400088ad:	add    BYTE PTR [rax],al
   1400088af:	add    bh,bh
   1400088b1:	(bad)  
   1400088b2:	(bad)  
   1400088b3:	inc    DWORD PTR [rax]
	...
   1400088bd:	add    BYTE PTR [rax],al
   1400088bf:	add    BYTE PTR [rcx],al
   1400088c1:	add    BYTE PTR [rax],al
   1400088c3:	add    BYTE PTR [rcx],al
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    al,ah
   1400088c9:	mov    BYTE PTR [rax],al
   1400088cb:	add    BYTE PTR [rdx],al
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	add    BYTE PTR [rdx],al
   1400088d1:	add    BYTE PTR [rax],al
   1400088d3:	add    BYTE PTR [rbx],al
   1400088d5:	add    BYTE PTR [rax],al
   1400088d7:	add    BYTE PTR [rcx],al
   1400088d9:	add    BYTE PTR [rax],al
   1400088db:	add    ah,dh
   1400088dd:	mov    BYTE PTR [rax],al
	...
   1400088eb:	add    BYTE PTR [rbx+0x64],ch
   1400088ee:	add    BYTE PTR [rax],al
   1400088f0:	cmp    BYTE PTR [rax],al
	...
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	mov    fs,WORD PTR [rax+rax*1+0x0]
   140008904:	cmp    BYTE PTR [rax],al
	...
   14000890e:	add    BYTE PTR [rax],al
   140008910:	fmul   DWORD PTR [rdi+0x0]
   140008913:	add    bh,bh
   140008915:	(bad)  
   140008916:	(bad)  
   140008917:	call   QWORD PTR [rbx]
   140008919:	push   rcx
   14000891a:	add    BYTE PTR [rax],al
   14000891c:	add    BYTE PTR [rax],al
   14000891e:	add    BYTE PTR [rax],al
   140008920:	movabs al,ds:0x17ffffffff000051
   140008929:	push   rdx
   14000892a:	add    BYTE PTR [rax],al
   14000892c:	add    al,BYTE PTR [rax]
   14000892e:	add    BYTE PTR [rax],al
   140008930:	push   rbp
   140008931:	push   rdx
   140008932:	add    BYTE PTR [rax],al
   140008934:	(bad)  
   140008935:	(bad)  
   140008936:	(bad)  
   140008937:	jmp    FWORD PTR [rbx+0x64]
   14000893a:	add    BYTE PTR [rax],al
   14000893c:	add    BYTE PTR [rax],al
   14000893e:	add    BYTE PTR [rax],al
   140008940:	js     0x1400089a6
   140008942:	add    BYTE PTR [rax],al
   140008944:	add    DWORD PTR [rax],eax
   140008946:	add    BYTE PTR [rax],al
   140008948:	mov    fs,WORD PTR [rax+rax*1+0x0]
   14000894c:	add    BYTE PTR [rax],al
   14000894e:	add    BYTE PTR [rax],al
   140008950:	fwait
   140008951:	add    BYTE PTR fs:[rax],al
   140008954:	add    eax,DWORD PTR [rax]
   140008956:	add    BYTE PTR [rax],al
   140008958:	sbb    DWORD PTR [rdx],ecx
   14000895a:	add    al,BYTE PTR [rax]
   14000895c:	or     dh,BYTE PTR [rdx]
   14000895e:	(bad)  
   14000895f:	push   rax
   140008960:	xchg   esp,eax
   140008961:	pop    rbx
   140008962:	add    BYTE PTR [rax],al
   140008964:	push   rax
   140008965:	jl     0x140008967
   140008967:	add    BYTE PTR [rcx],bl
   140008969:	and    al,BYTE PTR [rdx]
   14000896b:	add    BYTE PTR [rdi],al
   14000896d:	add    DWORD PTR [rip+0x5c3000],edx        # 0x1405cb973
   140008973:	add    al,dh
   140008975:	jb     0x140008977
   140008977:	add    BYTE PTR [rdx+0x0],dl
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    BYTE PTR [rax],ch
   140008981:	push   rbp
   140008982:	add    BYTE PTR [rax],al
   140008984:	(bad)  
   140008985:	(bad)  
   140008986:	(bad)  
   140008987:	call   FWORD PTR [rbp+rdx*2+0x0]
   14000898b:	add    BYTE PTR [rax],al
   14000898d:	add    BYTE PTR [rax],al
   14000898f:	add    BYTE PTR [rcx],bl
   140008991:	and    al,BYTE PTR [rdx]
   140008993:	add    BYTE PTR [rdi],al
   140008995:	add    DWORD PTR [rip+0x5c3000],edx        # 0x1405cb99b
   14000899b:	add    BYTE PTR [rax],bl
   14000899d:	jae    0x14000899f
   14000899f:	add    BYTE PTR [rdx+0x0],dl
   1400089a5:	add    BYTE PTR [rax],al
   1400089a7:	add    BYTE PTR [rbp+rdx*2-0x10000],al
   1400089ae:	(bad)  
   1400089af:	(bad)  
   1400089b0:	mov    eax,0x55
   1400089b5:	add    BYTE PTR [rax],al
   1400089b7:	add    BYTE PTR [rcx],dl
   1400089b9:	sbb    al,0x6
   1400089bb:	add    BYTE PTR [rsp+riz*2],bl
   1400089be:	or     al,BYTE PTR [rax]
   1400089c0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400089c3:	add    BYTE PTR [rdx+rdx*2],cl
   1400089c6:	or     BYTE PTR [rax-0x6c],dh
   1400089c9:	pop    rbx
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	rex jae 0x1400089cf
   1400089cf:	add    BYTE PTR [rax-0xffffad],bh
   1400089d5:	(bad)  
   1400089d6:	(bad)  
   1400089d7:	jmp    rax
   1400089d9:	push   rbx
   1400089da:	add    BYTE PTR [rax],al
   1400089dc:	add    BYTE PTR [rax],al
   1400089de:	add    BYTE PTR [rax],al
   1400089e0:	or     al,0x54
   1400089e2:	add    BYTE PTR [rax],al
   1400089e4:	(bad)  
   1400089e5:	(bad)  
   1400089e6:	(bad)  
   1400089e7:	call   QWORD PTR [rcx]
   1400089e9:	sbb    BYTE PTR [rax+rax*1],al
   1400089ec:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400089ef:	add    BYTE PTR [rdx],cl
   1400089f1:	push   rdx
   1400089f2:	(bad)  
   1400089f3:	jo     0x140008989
   1400089f5:	pop    rbx
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	push   0xffffffffff000073
   1400089fd:	(bad)  
   1400089fe:	(bad)  
   1400089ff:	jmp    FWORD PTR [rbx+0x64]
   140008a05:	add    BYTE PTR [rax],al
   140008a07:	add    BYTE PTR [rbx+rdx*2+0x0],al
   140008a0b:	add    bh,bh
   140008a0d:	(bad)  
   140008a0e:	(bad)  
   140008a0f:	jmp    FWORD PTR [rax+0x53]
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	add    BYTE PTR [rax],al
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	cwde   
   140008a19:	push   rbx
   140008a1a:	add    BYTE PTR [rax],al
   140008a1c:	(bad)  
   140008a1d:	(bad)  
   140008a1e:	(bad)  
   140008a1f:	inc    DWORD PTR [rcx]
   140008a21:	or     al,BYTE PTR [rax+rax*1]
   140008a24:	or     dh,BYTE PTR [rsi+rax*1]
   140008a27:	add    BYTE PTR [rdx],cl
   140008a29:	xor    al,BYTE PTR [rsi]
   140008a2b:	jo     0x140008a2e
   140008a2d:	add    al,0x1
   140008a2f:	add    BYTE PTR [rdx+riz*2],al
   140008a32:	add    BYTE PTR [rax],al
   140008a34:	or     DWORD PTR [rcx],ebx
   140008a36:	or     al,BYTE PTR [rax]
   140008a38:	sbb    esp,eax
   140008a3a:	or     eax,DWORD PTR [rax]
   140008a3c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140008a40:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140008a44:	sbb    DWORD PTR [rax+rcx*1],esi
   140008a47:	add    BYTE PTR [rcx],bl
   140008a49:	push   rdx
   140008a4a:	adc    eax,0x5fc6e0
   140008a4f:	add    BYTE PTR [rcx],al
   140008a51:	add    BYTE PTR [rax],al
   140008a53:	add    BYTE PTR [rcx],bh
   140008a55:	push   rdi
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	stos   BYTE PTR es:[rdi],al
   140008a59:	pop    rax
   140008a5a:	add    BYTE PTR [rax],al
   140008a5c:	mov    ebp,0xaa000064
   140008a61:	pop    rax
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	add    DWORD PTR [rsi],eax
   140008a66:	add    al,BYTE PTR [rax]
   140008a68:	(bad)  
   140008a69:	xor    al,BYTE PTR [rdx]
   140008a6b:	push   rax
   140008a6c:	add    BYTE PTR [rax],al
   140008a6e:	add    BYTE PTR [rax],al
   140008a70:	add    DWORD PTR [rax],eax
   140008a72:	add    BYTE PTR [rax],al
   140008a74:	add    DWORD PTR [rdx+rax*1],ecx
   140008a77:	add    BYTE PTR [rcx+rax*1],cl
   140008a7a:	adc    DWORD PTR [rax],eax
   140008a7c:	or     DWORD PTR [rcx+rax*1],eax
   140008a7f:	add    BYTE PTR [rdx+riz*1],al
   140008a82:	add    BYTE PTR [rax],al
   140008a84:	(bad)  
   140008a85:	pop    rdi
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	add    DWORD PTR [rax],eax
   140008a8a:	add    BYTE PTR [rax],al
   140008a8c:	rex.WR pop rbp
   140008a8e:	add    BYTE PTR [rax],al
   140008a90:	(bad)  
   140008a91:	pop    rbp
   140008a92:	add    BYTE PTR [rax],al
   140008a94:	add    DWORD PTR [rax],eax
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	(bad)  
   140008a99:	pop    rbp
   140008a9a:	add    BYTE PTR [rax],al
   140008a9c:	or     DWORD PTR [rdx],ecx
   140008a9e:	add    al,0x0
   140008aa0:	or     dh,BYTE PTR [rsi+rax*1]
   140008aa3:	add    BYTE PTR [rdx],cl
   140008aa5:	xor    al,BYTE PTR [rsi]
   140008aa7:	jo     0x140008a6f
   140008aa9:	pop    rdi
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	add    DWORD PTR [rax],eax
   140008aae:	add    BYTE PTR [rax],al
   140008ab0:	rex.WRB pop r14
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	sbb    BYTE PTR [rsi+0x0],0x0
   140008ab8:	lock add BYTE PTR fs:[rax],al
   140008abc:	sbb    BYTE PTR [rsi+0x0],0x0
   140008ac0:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d8aca
   140008ac6:	or     DWORD PTR [rax],eax
   140008ac8:	or     eax,0x500632
   140008acd:	add    BYTE PTR [rax],al
   140008acf:	add    BYTE PTR [rcx],al
   140008ad1:	add    BYTE PTR [rax],al
   140008ad3:	add    BYTE PTR [rax],al
   140008ad5:	add    BYTE PTR [rax],al
   140008ad7:	add    BYTE PTR [rcx],al
   140008ad9:	add    al,0x1
   140008adb:	add    BYTE PTR [rdx+rdx*1],al
   140008ade:	add    BYTE PTR [rax],al
   140008ae0:	add    BYTE PTR [rax],al
   140008ae2:	add    BYTE PTR [rax],al
   140008ae4:	xor    BYTE PTR [rax+rax*1+0x0],dl
   140008ae8:	add    BYTE PTR [rax],al
   140008aea:	add    BYTE PTR [rax],al
   140008aec:	add    BYTE PTR [rbx+0x0],cl
	...
   140008afe:	add    BYTE PTR [rax],al
   140008b00:	add    eax,DWORD PTR [rax]
   140008b02:	add    BYTE PTR [rax],al
   140008b04:	and    BYTE PTR [rbx-0x74580000],cl
   140008b0a:	add    BYTE PTR [rax],al
   140008b0c:	push   0x8b
	...
   140008b21:	add    BYTE PTR [rax],al
   140008b23:	add    BYTE PTR [rax],dh
   140008b25:	movabs al,ds:0xffff000000000000
   140008b2e:	(bad)  
   140008b2f:	inc    DWORD PTR [rax]
   140008b31:	add    BYTE PTR [rax],al
   140008b33:	add    BYTE PTR [rax+0x0],al
   140008b36:	add    BYTE PTR [rax],al
   140008b38:	rex.R push rbx
	...
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	adc    r8d,DWORD PTR [rax]
   140008b4f:	add    BYTE PTR [rax],al
   140008b51:	add    BYTE PTR [rax],al
   140008b53:	add    BYTE PTR [rax],dl
   140008b55:	mov    WORD PTR [rax],es
	...
   140008b6b:	add    BYTE PTR [rax-0x60],bl
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	add    BYTE PTR [rax],al
   140008b72:	add    BYTE PTR [rax],al
   140008b74:	(bad)  
   140008b75:	(bad)  
   140008b76:	(bad)  
   140008b77:	inc    DWORD PTR [rax]
   140008b79:	add    BYTE PTR [rax],al
   140008b7b:	add    BYTE PTR [rax],bl
   140008b7d:	add    BYTE PTR [rax],al
   140008b7f:	add    BYTE PTR [rcx+rbx*2+0x0],al
	...
   140008b8e:	add    BYTE PTR [rax],al
   140008b90:	add    al,BYTE PTR [rax]
   140008b92:	add    BYTE PTR [rax],al
   140008b94:	test   al,0x8b
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	push   0x8b
	...
   140008ba9:	add    BYTE PTR [rax],al
   140008bab:	add    al,cl
   140008bad:	movabs al,ds:0xffff000000000000
   140008bb6:	(bad)  
   140008bb7:	inc    DWORD PTR [rax]
   140008bb9:	add    BYTE PTR [rax],al
   140008bbb:	add    BYTE PTR [rax+0x0],al
   140008bbe:	add    BYTE PTR [rax],al
   140008bc0:	adc    al,BYTE PTR fs:[rax]
	...
   140008bcf:	add    BYTE PTR [rdx],al
   140008bd1:	add    BYTE PTR [rax],al
   140008bd3:	add    BYTE PTR [rax-0x74],dl
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	push   0x8b
	...
   140008be9:	add    BYTE PTR [rax],al
   140008beb:	add    BYTE PTR [rax+0xa0],ah
   140008bf1:	add    BYTE PTR [rax],al
   140008bf3:	add    bh,bh
   140008bf5:	(bad)  
   140008bf6:	(bad)  
   140008bf7:	inc    DWORD PTR [rax]
   140008bf9:	add    BYTE PTR [rax],al
   140008bfb:	add    BYTE PTR [rax+0x0],al
   140008bfe:	add    BYTE PTR [rax],al
   140008c00:	jo     0x140008c16
	...
   140008c0e:	add    BYTE PTR [rax],al
   140008c10:	add    eax,DWORD PTR [rax]
   140008c12:	add    BYTE PTR [rax],al
   140008c14:	call   0xe8008ca4
   140008c19:	mov    eax,DWORD PTR [rax]
   140008c1b:	add    BYTE PTR [rax-0x75],ch
	...
   140008c32:	add    BYTE PTR [rax],al
   140008c34:	cmp    BYTE PTR [rcx],dl
   140008c36:	add    BYTE PTR [rax],al
   140008c38:	add    BYTE PTR [rax],al
   140008c3a:	add    BYTE PTR [rax],al
   140008c3c:	nop
   140008c3d:	mov    eax,DWORD PTR [rax]
	...
   140008c4f:	add    BYTE PTR [rax],dl
   140008c51:	add    BYTE PTR [rax],al
   140008c53:	add    BYTE PTR [rax-0x60],bh
   140008c56:	add    BYTE PTR [rax],al
   140008c58:	add    BYTE PTR [rax],al
   140008c5a:	add    BYTE PTR [rax],al
   140008c5c:	(bad)  
   140008c5d:	(bad)  
   140008c5e:	(bad)  
   140008c5f:	inc    DWORD PTR [rax]
   140008c61:	add    BYTE PTR [rax],al
   140008c63:	add    BYTE PTR [rax],bl
   140008c65:	add    BYTE PTR [rax],al
   140008c67:	add    BYTE PTR [rax],al
   140008c69:	adc    DWORD PTR [rax],eax
	...
   140008c7b:	add    BYTE PTR [rax+0x10],cl
   140008c7e:	add    BYTE PTR [rax],al
   140008c80:	add    BYTE PTR [rax],al
   140008c82:	add    BYTE PTR [rax],al
   140008c84:	ror    BYTE PTR [rbx+0x0],1
	...
   140008c92:	add    BYTE PTR [rax],al
   140008c94:	adc    BYTE PTR [rbp+0x0],cl
   140008c9a:	add    BYTE PTR [rax],al
   140008c9c:	add    BYTE PTR [rax],al
   140008c9e:	add    BYTE PTR [rax],al
   140008ca0:	mov    edx,0x8f
   140008ca5:	jo     0x140008ca7
   140008ca7:	add    BYTE PTR [rax-0x73],cl
	...
   140008cb2:	add    BYTE PTR [rax],al
   140008cb4:	out    0x90,al
   140008cb6:	add    BYTE PTR [rax],al
   140008cb8:	cmp    BYTE PTR [rax+0x0],dh
   140008cbb:	add    BYTE PTR [rax],ch
   140008cbd:	mov    es,WORD PTR [rax]
	...
   140008cc7:	add    BYTE PTR [rdx+0x18000092],bh
   140008ccd:	jno    0x140008ccf
   140008ccf:	add    BYTE PTR [rax],dh
   140008cd1:	pop    QWORD PTR [rax]
	...
   140008cdb:	add    BYTE PTR [rbx+rdx*4+0x0],dl
   140008cdf:	add    BYTE PTR [rax],ah
   140008ce1:	jb     0x140008ce3
   140008ce3:	add    BYTE PTR [rax],bl
   140008ce5:	mov    es,WORD PTR [rax]
	...
   140008cef:	add    BYTE PTR [rbx+rdx*4+0x0],ch
   140008cf3:	add    BYTE PTR [rax],cl
   140008cf5:	jno    0x140008cf7
	...
   140008d0f:	add    BYTE PTR [rax-0x71],dh
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	add    BYTE PTR [rax],al
   140008d16:	add    BYTE PTR [rax],al
   140008d18:	or     BYTE PTR [rdi+0x0],0x0
   140008d1f:	add    BYTE PTR [rax+0x8f],dl
   140008d25:	add    BYTE PTR [rax],al
   140008d27:	add    BYTE PTR [rsi+0x8f],bl
   140008d2d:	add    BYTE PTR [rax],al
   140008d2f:	add    BYTE PTR [rdi+rcx*4+0x0],ch
   140008d36:	add    BYTE PTR [rax],al
   140008d38:	(bad)  
   140008d39:	pop    QWORD PTR [rax]
	...
   140008d47:	add    al,cl
   140008d49:	pop    QWORD PTR [rax]
   140008d4b:	add    BYTE PTR [rax],al
   140008d4d:	add    BYTE PTR [rax],al
   140008d4f:	add    ah,bl
   140008d51:	pop    QWORD PTR [rax]
   140008d53:	add    BYTE PTR [rax],al
   140008d55:	add    BYTE PTR [rax],al
   140008d57:	add    al,ch
   140008d59:	pop    QWORD PTR [rax]
   140008d5b:	add    BYTE PTR [rax],al
   140008d5d:	add    BYTE PTR [rax],al
   140008d5f:	add    dh,bh
   140008d61:	pop    QWORD PTR [rax]
   140008d63:	add    BYTE PTR [rax],al
   140008d65:	add    BYTE PTR [rax],al
   140008d67:	add    BYTE PTR [rax],dl
   140008d69:	nop
   140008d6a:	add    BYTE PTR [rax],al
   140008d6c:	add    BYTE PTR [rax],al
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	es nop
   140008d72:	add    BYTE PTR [rax],al
   140008d74:	add    BYTE PTR [rax],al
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	ss nop
   140008d7a:	add    BYTE PTR [rax],al
   140008d7c:	add    BYTE PTR [rax],al
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	push   rsi
   140008d81:	nop
   140008d82:	add    BYTE PTR [rax],al
   140008d84:	add    BYTE PTR [rax],al
   140008d86:	add    BYTE PTR [rax],al
   140008d88:	ins    BYTE PTR es:[rdi],dx
   140008d89:	nop
   140008d8a:	add    BYTE PTR [rax],al
   140008d8c:	add    BYTE PTR [rax],al
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	test   BYTE PTR [rax+0x0],dl
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	xchg   esi,eax
   140008d99:	nop
   140008d9a:	add    BYTE PTR [rax],al
   140008d9c:	add    BYTE PTR [rax],al
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008da1:	nop
   140008da2:	add    BYTE PTR [rax],al
   140008da4:	add    BYTE PTR [rax],al
   140008da6:	add    BYTE PTR [rax],al
   140008da8:	mov    al,0x90
   140008daa:	add    BYTE PTR [rax],al
   140008dac:	add    BYTE PTR [rax],al
   140008dae:	add    BYTE PTR [rax],al
   140008db0:	rcl    BYTE PTR [rax+0x0],0x0
   140008db7:	add    al,bl
   140008db9:	nop
   140008dba:	add    BYTE PTR [rax],al
   140008dbc:	add    BYTE PTR [rax],al
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	mov    edx,0x93
   140008dc5:	add    BYTE PTR [rax],al
   140008dc7:	add    BYTE PTR [rbx+rdx*4+0x0],bl
   140008dce:	add    BYTE PTR [rax],al
   140008dd0:	adc    BYTE PTR [rbx+0x0],0x0
   140008dd7:	add    BYTE PTR [rax-0x6d],bh
   140008dda:	add    BYTE PTR [rax],al
   140008ddc:	add    BYTE PTR [rax],al
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	loop   0x140008d75
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	add    BYTE PTR [rax],al
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	cld    
   140008de9:	xchg   ebx,eax
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	add    BYTE PTR [rax],al
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	adc    dl,BYTE PTR [rax+rax*1+0x0]
   140008df7:	add    BYTE PTR [rax],ch
   140008df9:	xchg   esp,eax
   140008dfa:	add    BYTE PTR [rax],al
   140008dfc:	add    BYTE PTR [rax],al
   140008dfe:	add    BYTE PTR [rax],al
   140008e00:	rex.X xchg esp,eax
   140008e02:	add    BYTE PTR [rax],al
   140008e04:	add    BYTE PTR [rax],al
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	(bad)  
   140008e09:	xchg   ebx,eax
	...
   140008e16:	add    BYTE PTR [rax],al
   140008e18:	pop    rsi
   140008e19:	xchg   ebx,eax
	...
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	sahf   
   140008e29:	xchg   ecx,eax
   140008e2a:	add    BYTE PTR [rax],al
   140008e2c:	add    BYTE PTR [rax],al
   140008e2e:	add    BYTE PTR [rax],al
   140008e30:	fcom   QWORD PTR [rcx+0x0]
   140008e36:	add    BYTE PTR [rax],al
   140008e38:	out    0x91,al
   140008e3a:	add    BYTE PTR [rax],al
   140008e3c:	add    BYTE PTR [rax],al
   140008e3e:	add    BYTE PTR [rax],al
   140008e40:	cld    
   140008e41:	xchg   ecx,eax
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	add    BYTE PTR [rax],al
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	adc    dl,BYTE PTR [rdx+0x0]
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	and    BYTE PTR [rdx+0x0],dl
   140008e56:	add    BYTE PTR [rax],al
   140008e58:	cs xchg edx,eax
   140008e5a:	add    BYTE PTR [rax],al
   140008e5c:	add    BYTE PTR [rax],al
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	rex xchg edx,eax
   140008e62:	add    BYTE PTR [rax],al
   140008e64:	add    BYTE PTR [rax],al
   140008e66:	add    BYTE PTR [rax],al
   140008e68:	push   rdx
   140008e69:	xchg   edx,eax
   140008e6a:	add    BYTE PTR [rax],al
   140008e6c:	add    BYTE PTR [rax],al
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	pop    rdx
   140008e71:	xchg   edx,eax
   140008e72:	add    BYTE PTR [rax],al
   140008e74:	add    BYTE PTR [rax],al
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	(bad)  
   140008e7a:	add    BYTE PTR [rax],al
   140008e7c:	add    BYTE PTR [rax],al
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	ins    BYTE PTR es:[rdi],dx
   140008e81:	xchg   edx,eax
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	add    BYTE PTR [rax],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	adc    BYTE PTR [rdx+0x0],0x0
   140008e8f:	add    BYTE PTR [rdx+rdx*4+0x0],cl
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	enter  0x91,0x0
   140008e9c:	add    BYTE PTR [rax],al
   140008e9e:	add    BYTE PTR [rax],al
   140008ea0:	scas   al,BYTE PTR es:[rdi]
   140008ea1:	xchg   edx,eax
   140008ea2:	add    BYTE PTR [rax],al
   140008ea4:	add    BYTE PTR [rax],al
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	(bad)  
   140008ea9:	xchg   edx,eax
   140008eaa:	add    BYTE PTR [rax],al
   140008eac:	add    BYTE PTR [rax],al
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	ficom  WORD PTR [rdx+0x0]
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	push   rdx
   140008eb9:	xchg   esp,eax
   140008eba:	add    BYTE PTR [rax],al
   140008ebc:	add    BYTE PTR [rax],al
   140008ebe:	add    BYTE PTR [rax],al
   140008ec0:	jle    0x140008e53
   140008ec2:	add    BYTE PTR [rax],al
   140008ec4:	add    BYTE PTR [rax],al
   140008ec6:	add    BYTE PTR [rax],al
   140008ec8:	xchg   cx,ax
   140008eca:	add    BYTE PTR [rax],al
   140008ecc:	add    BYTE PTR [rax],al
   140008ece:	add    BYTE PTR [rax],al
   140008ed0:	rex.WRX xchg rcx,rax
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	add    BYTE PTR [rax],al
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	xor    BYTE PTR [rcx+0x0],dl
   140008ede:	add    BYTE PTR [rax],al
   140008ee0:	and    dl,BYTE PTR [rcx+0x0]
   140008ee6:	add    BYTE PTR [rax],al
   140008ee8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008ee9:	xchg   edx,eax
   140008eea:	add    BYTE PTR [rax],al
   140008eec:	add    BYTE PTR [rax],al
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	mov    esp,0x91
   140008ef5:	add    BYTE PTR [rax],al
   140008ef7:	add    BYTE PTR [rax],bl
   140008ef9:	xchg   ecx,eax
   140008efa:	add    BYTE PTR [rax],al
   140008efc:	add    BYTE PTR [rax],al
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	or     al,0x91
   140008f02:	add    BYTE PTR [rax],al
   140008f04:	add    BYTE PTR [rax],al
   140008f06:	add    BYTE PTR [rax],al
   140008f08:	add    BYTE PTR [rcx+0x0],dl
   140008f0e:	add    BYTE PTR [rax],al
   140008f10:	hlt    
   140008f11:	nop
   140008f12:	add    BYTE PTR [rax],al
   140008f14:	add    BYTE PTR [rax],al
   140008f16:	add    BYTE PTR [rax],al
   140008f18:	rcl    BYTE PTR [rcx+0x0],cl
   140008f1e:	add    BYTE PTR [rax],al
   140008f20:	pop    rsp
   140008f21:	xchg   esp,eax
	...
   140008f2e:	add    BYTE PTR [rax],al
   140008f30:	es xchg ebx,eax
   140008f32:	add    BYTE PTR [rax],al
   140008f34:	add    BYTE PTR [rax],al
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	adc    dl,BYTE PTR [rbx+0x0]
   140008f3e:	add    BYTE PTR [rax],al
   140008f40:	add    BYTE PTR [rbx+0x0],dl
   140008f46:	add    BYTE PTR [rax],al
   140008f48:	repnz xchg edx,eax
   140008f4a:	add    BYTE PTR [rax],al
   140008f4c:	add    BYTE PTR [rax],al
   140008f4e:	add    BYTE PTR [rax],al
   140008f50:	rex xchg ebx,eax
	...
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	add    dl,BYTE PTR [rax+0x72]
   140008f64:	outs   dx,DWORD PTR ds:[rsi]
   140008f65:	movsxd esp,DWORD PTR [rbp+0x73]
   140008f68:	jae    0x140008fbe
   140008f6a:	jb     0x140008fcd
   140008f6c:	movsxd esp,DWORD PTR [rbp+0x0]
   140008f6f:	add    BYTE PTR [rsi],al
   140008f71:	add    DWORD PTR [rbp+0x6e],eax
   140008f74:	(bad)  
   140008f75:	(bad)  
   140008f76:	ins    BYTE PTR es:[rdi],dx
   140008f77:	gs push rsp
   140008f79:	jb     0x140008fdc
   140008f7b:	movsxd esp,DWORD PTR [rbp+0x45]
   140008f7e:	js     0x140008f80
   140008f80:	outs   dx,BYTE PTR ds:[rsi]
   140008f81:	add    BYTE PTR [rbx+0x6f],al
   140008f84:	outs   dx,BYTE PTR ds:[rsi]
   140008f85:	je     0x140008ff9
   140008f87:	outs   dx,DWORD PTR ds:[rsi]
   140008f88:	ins    BYTE PTR es:[rdi],dx
   140008f89:	push   rsp
   140008f8a:	jb     0x140008fed
   140008f8c:	movsxd esp,DWORD PTR [rbp+0x57]
   140008f8f:	add    BYTE PTR [rdi+0x0],ah
   140008f92:	rex.XB ins BYTE PTR es:[rdi],dx
   140008f94:	outs   dx,DWORD PTR ds:[rsi]
   140008f95:	jae    0x140008ffc
   140008f97:	push   rsp
   140008f98:	jb     0x140008ffb
   140008f9a:	movsxd esp,DWORD PTR [rbp+0x0]
   140008f9d:	add    ch,dh
   140008f9f:	add    dl,BYTE PTR [rbx+0x74]
   140008fa2:	(bad)  
   140008fa3:	jb     0x140009019
   140008fa5:	push   rsp
   140008fa6:	jb     0x140009009
   140008fa8:	movsxd esp,DWORD PTR [rbp+0x57]
   140008fab:	add    BYTE PTR [rbx],bl
   140008fad:	add    cl,BYTE PTR [rdi+0x70]
   140008fb0:	outs   dx,BYTE PTR gs:[rsi]
   140008fb2:	push   rsp
   140008fb3:	jb     0x140009016
   140008fb5:	movsxd esp,DWORD PTR [rbp+0x57]
   140008fb8:	add    BYTE PTR [rax],al
   140008fba:	rex.B
   140008fbb:	rex.R push rsi
   140008fbd:	push   r8
   140008fbf:	xor    rsi,QWORD PTR [r10]
   140008fc2:	cs fs ins BYTE PTR es:[rdi],dx
   140008fc5:	ins    BYTE PTR es:[rdi],dx
   140008fc6:	add    BYTE PTR [rax],al
   140008fc8:	outs   dx,BYTE PTR ds:[rsi]
   140008fc9:	add    al,BYTE PTR [rdi+0x65]
   140008fcc:	je     0x14000901b
   140008fce:	outs   dx,DWORD PTR ds:[rsi]
   140008fcf:	fs jne 0x14000903e
   140008fd2:	gs rex.W (bad) 
   140008fd5:	outs   dx,BYTE PTR ds:[rsi]
   140008fd6:	fs ins BYTE PTR es:[rdi],dx
   140008fd8:	gs push rdi
   140008fda:	add    BYTE PTR [rax],al
   140008fdc:	add    BYTE PTR [rsi],al
   140008fde:	push   rdi
   140008fdf:	jb     0x14000904a
   140008fe1:	je     0x140009048
   140008fe3:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x695705ec
   140008fec:	fs gs rex.XB push 0x6f547261
   140008ff4:	rex.WRB jne 0x140009063
   140008ff7:	je     0x140009062
   140008ff9:	rex.X jns 0x140009070
   140008ffc:	add    BYTE PTR gs:[rsp+rax*1+0x52],cl
   140009001:	(bad)  
   140009002:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140009009:	jo     0x14000907f
   14000900b:	imul   ebp,DWORD PTR [rdi+0x6e],0x1f90000
   140009012:	rex.RXB
   140009013:	gs je  0x140009059
   140009016:	outs   dx,DWORD PTR ds:[rsi]
   140009017:	outs   dx,BYTE PTR ds:[rsi]
   140009018:	jae    0x140009089
   14000901a:	ins    BYTE PTR es:[rdi],dx
   14000901b:	gs rex.WRXB jne 0x140009093
   14000901f:	jo     0x140009096
   140009021:	je     0x140009066
   140009023:	push   rax
   140009024:	add    BYTE PTR [rax],al
   140009026:	leave  
   140009027:	add    al,BYTE PTR [rdi+0x65]
   14000902a:	je     0x14000907f
   14000902c:	je     0x140009092
   14000902e:	rex.W (bad) 
   140009030:	outs   dx,BYTE PTR ds:[rsi]
   140009031:	fs ins BYTE PTR es:[rdi],dx
   140009033:	add    BYTE PTR gs:[rax],al
   140009036:	rex.WRB add rax,0x54746553
   14000903c:	push   0x64616572
   140009041:	push   rax
   140009042:	jb     0x1400090a9
   140009044:	data16 gs jb 0x1400090ba
   140009048:	gs fs push rbp
   14000904b:	rex.WB
   14000904c:	rex.WR (bad) 
   14000904e:	outs   dx,BYTE PTR ds:[rsi]
   14000904f:	addr32 jne 0x1400090b3
   140009052:	addr32 gs jae 0x140009056
   140009056:	add    r9d,DWORD PTR [rax+0x65]
   14000905a:	(bad)  
   14000905b:	jo     0x1400090b0
   14000905d:	gs je  0x1400090a9
   140009060:	outs   dx,BYTE PTR ds:[rsi]
   140009061:	outs   dx,WORD PTR ds:[rsi]
   140009063:	jb     0x1400090d2
   140009065:	(bad)  
   140009066:	je     0x1400090d1
   140009068:	outs   dx,DWORD PTR ds:[rsi]
   140009069:	outs   dx,BYTE PTR ds:[rsi]
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	or     al,BYTE PTR [rbx]
   14000906e:	rex.RXB
   14000906f:	gs je  0x1400090c7
   140009072:	jae    0x1400090d9
   140009074:	jb     0x1400090ba
   140009076:	gs data16 (bad) 
   140009079:	jne    0x1400090e7
   14000907b:	je     0x1400090c9
   14000907d:	(bad)  
   14000907e:	outs   dx,BYTE PTR ds:[rsi]
   14000907f:	addr32 rex.WB
   140009081:	add    BYTE PTR [rax],r8b
   140009084:	movabs al,ds:0x4d74616d726f4601
   14000908d:	gs jae 0x140009103
   140009090:	(bad)  
   140009091:	addr32 gs push rdi
   140009094:	add    BYTE PTR [rax],al
   140009096:	rol    BYTE PTR [rax],0x43
   140009099:	jb     0x140009100
   14000909b:	(bad)  
   14000909c:	je     0x140009103
   14000909e:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x6c062e00
   1400090a7:	jae    0x14000911d
   1400090a9:	jb     0x140009117
   1400090ab:	outs   dx,BYTE PTR gs:[rsi]
   1400090ad:	push   rdi
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	push   rdi
   1400090b1:	add    al,BYTE PTR [rdi+0x65]
   1400090b4:	je     0x140009102
   1400090b6:	(bad)  
   1400090b7:	jae    0x14000912d
   1400090b9:	rex.RB jb 0x14000912e
   1400090bc:	outs   dx,DWORD PTR ds:[rsi]
   1400090bd:	jb     0x1400090bf
   1400090bf:	add    bl,bl
   1400090c1:	add    al,0x53
   1400090c3:	gs je  0x140009109
   1400090c6:	outs   dx,DWORD PTR ds:[rsi]
   1400090c7:	outs   dx,BYTE PTR ds:[rsi]
   1400090c8:	jae    0x140009139
   1400090ca:	ins    BYTE PTR es:[rdi],dx
   1400090cb:	gs rex.XB je 0x140009141
   1400090cf:	ins    BYTE PTR es:[rdi],dx
   1400090d0:	rex.W (bad) 
   1400090d2:	outs   dx,BYTE PTR ds:[rsi]
   1400090d3:	fs ins BYTE PTR es:[rdi],dx
   1400090d5:	gs jb  0x1400090d8
   1400090d8:	jge    0x1400090da
   1400090da:	rex.XB ins BYTE PTR es:[rdi],dx
   1400090dc:	outs   dx,DWORD PTR ds:[rsi]
   1400090dd:	jae    0x140009144
   1400090df:	rex.W (bad) 
   1400090e1:	outs   dx,BYTE PTR ds:[rsi]
   1400090e2:	fs ins BYTE PTR es:[rdi],dx
   1400090e4:	add    BYTE PTR gs:[rbx+0x45],cl
   1400090e8:	push   rdx
   1400090e9:	rex.WRX
   1400090ea:	rex.RB
   1400090eb:	xor    r14,QWORD PTR [rdx]
   1400090ee:	cs fs ins BYTE PTR es:[rdi],dx
   1400090f1:	ins    BYTE PTR es:[rdi],dx
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	xchg   ebp,eax
   1400090f5:	add    al,0x6d
   1400090f7:	gs ins DWORD PTR es:[rdi],dx
   1400090f9:	ins    DWORD PTR es:[rdi],dx
   1400090fa:	outs   dx,DWORD PTR ds:[rsi]
   1400090fb:	jbe    0x140009162
   1400090fd:	pop    rdi
   1400090fe:	jae    0x140009100
   140009100:	mov    al,BYTE PTR [rbx]
   140009102:	pop    rdi
   140009103:	ja     0x140009168
   140009105:	jae    0x140009170
   140009107:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	xchg   esp,eax
   14000910d:	add    ebx,DWORD PTR [rdi+0x77]
   140009110:	movsxd esi,DWORD PTR [rbx+0x6e]
   140009113:	imul   esp,DWORD PTR [rbx+0x6d],0x49d0070
   14000911a:	jo     0x14000918e
   14000911c:	imul   ebp,DWORD PTR [rsi+0x74],0x69000066
   140009123:	add    ebx,DWORD PTR [rdi+0x76]
   140009126:	jae    0x140009196
   140009128:	ja     0x14000919a
   14000912a:	jb     0x140009195
   14000912c:	outs   dx,BYTE PTR ds:[rsi]
   14000912d:	je     0x140009195
   14000912f:	add    BYTE PTR [rcx],dh
   140009131:	add    BYTE PTR [rdi],bh
   140009133:	ja     0x14000919d
   140009135:	(bad)  
   140009136:	je     0x140009178
   140009138:	gs js  0x14000919e
   14000913b:	gs jo  0x1400091b2
   14000913e:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   140009145:	rex.X
   140009146:	push   r8
   140009148:	rex.RB
   140009149:	rex.X
   14000914a:	rex.R pop rax
   14000914c:	pop    rdx
   14000914d:	add    BYTE PTR [rcx],dl
   14000914f:	add    BYTE PTR [rdi],bh
   140009151:	(bad)  
   140009152:	xor    DWORD PTR [rbp+0x78],esp
   140009155:	movsxd esp,DWORD PTR [rbp+0x70]
   140009158:	je     0x1400091c3
   14000915a:	outs   dx,DWORD PTR ds:[rsi]
   14000915b:	outs   dx,BYTE PTR ds:[rsi]
   14000915c:	rex
   14000915d:	rex push rbp
   14000915f:	rex.RB
   140009160:	rex.B
   140009161:	rex.B
   140009162:	rex pop rax
   140009164:	pop    rdx
   140009165:	add    BYTE PTR [rip+0x303f3f00],cl        # 0x1703fd06b
   14000916b:	gs js  0x1400091d1
   14000916e:	gs jo  0x1400091e5
   140009171:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   140009178:	rex.B
   140009179:	rex.B
   14000917a:	rex pop rax
   14000917c:	pop    rdx
   14000917d:	add    BYTE PTR [rdx],cl
   14000917f:	add    BYTE PTR [rdi],bh
   140009181:	(bad)  
   140009182:	xor    BYTE PTR [rbp+0x78],ah
   140009185:	movsxd esp,DWORD PTR [rbp+0x70]
   140009188:	je     0x1400091f3
   14000918a:	outs   dx,DWORD PTR ds:[rsi]
   14000918b:	outs   dx,BYTE PTR ds:[rsi]
   14000918c:	rex
   14000918d:	rex push rcx
   14000918f:	rex.RB
   140009190:	rex.B
   140009191:	rex.B
   140009192:	rex
   140009193:	rex.B
   140009194:	rex.RB
   140009195:	rex.X push rcx
   140009197:	rex.RB
   140009198:	rex.X
   140009199:	rex.R
   14000919a:	rex pop rdx
   14000919c:	add    BYTE PTR [rax],al
   14000919e:	or     al,0x0
   1400091a0:	(bad)  
   1400091a1:	(bad)  
   1400091a2:	xor    BYTE PTR [rbp+0x78],ah
   1400091a5:	movsxd esp,DWORD PTR [rbp+0x70]
   1400091a8:	je     0x140009213
   1400091aa:	outs   dx,DWORD PTR ds:[rsi]
   1400091ab:	outs   dx,BYTE PTR ds:[rsi]
   1400091ac:	rex
   1400091ad:	rex push rcx
   1400091af:	rex.RB
   1400091b0:	rex.B
   1400091b1:	rex.B
   1400091b2:	rex
   1400091b3:	rex.B
   1400091b4:	rex.RB
   1400091b5:	rex.X push rsi
   1400091b7:	xor    BYTE PTR [rax+0x40],al
   1400091ba:	pop    rdx
   1400091bb:	add    BYTE PTR [rbx+0x6d656d04],dl
   1400091c1:	movsxd esi,DWORD PTR [rax+0x79]
   1400091c4:	pop    rdi
   1400091c5:	jae    0x1400091c7
   1400091c7:	add    BYTE PTR [rax],dl
   1400091c9:	add    eax,0x72736377
   1400091ce:	movsxd ebp,DWORD PTR [rax+0x72]
   1400091d1:	add    BYTE PTR [rax*1+0x73736377],dl
   1400091d8:	je     0x14000924c
   1400091da:	add    BYTE PTR [rax],al
   1400091dc:	pop    rbx
   1400091dd:	add    al,0x67
   1400091df:	gs je  0x140009245
   1400091e2:	push   0x4b007261
   1400091e7:	add    BYTE PTR [rdi+0x43],bl
   1400091ea:	js     0x140009264
   1400091ec:	push   rsp
   1400091ed:	push   0x45776f72
   1400091f2:	js     0x140009257
   1400091f4:	gs jo  0x14000926b
   1400091f7:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   1400091fe:	pop    rdi
   1400091ff:	pop    rdi
   140009200:	rex.XB js 0x14000927b
   140009203:	rex.RX jb 0x140009267
   140009206:	ins    DWORD PTR es:[rdi],dx
   140009207:	gs rex.W (bad) 
   14000920a:	outs   dx,BYTE PTR ds:[rsi]
   14000920b:	fs ins BYTE PTR es:[rdi],dx
   14000920d:	gs jb  0x140009243
   140009210:	add    BYTE PTR [rax],al
   140009212:	push   rbp
   140009213:	add    BYTE PTR [rdi+0x58],bl
   140009216:	movsxd esi,DWORD PTR [rax+0x74]
   140009219:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140009222:	pop    rdi
   140009223:	(bad)  
   140009224:	ins    DWORD PTR es:[rdi],dx
   140009225:	jae    0x14000928e
   140009227:	pop    rdi
   140009228:	gs js  0x140009294
   14000922b:	je     0x14000922d
   14000922d:	add    BYTE PTR [rbp+0x775f5f00],bl
   140009233:	addr32 gs je 0x1400092a4
   140009237:	(bad)  
   140009238:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000923f:	add    BYTE PTR [rsi+0x735f5f00],cl
   140009245:	gs je  0x1400092a7
   140009248:	(bad)  
   140009249:	jo     0x1400092bb
   14000924b:	pop    rdi
   14000924c:	je     0x1400092c7
   14000924e:	jo     0x1400092b5
   140009250:	add    BYTE PTR [rax],al
   140009252:	xor    al,BYTE PTR [riz*2+0x746978]
   140009259:	add    BYTE PTR [rsi],cl
   14000925b:	add    DWORD PTR [rdi+0x65],ebx
   14000925e:	js     0x1400092c9
   140009260:	je     0x140009262
   140009262:	rol    DWORD PTR [rax],0x5f
   140009265:	movsxd esp,DWORD PTR [rbp+0x78]
   140009268:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140009270:	jae    0x1400092d7
   140009272:	je     0x1400092e9
   140009274:	jae    0x1400092db
   140009276:	jb     0x1400092e5
   140009278:	(bad)  
   140009279:	je     0x1400092e3
   14000927b:	gs jb  0x1400092f0
   14000927e:	add    BYTE PTR [rax],al
   140009280:	jge    0x140009283
   140009282:	pop    rdi
   140009283:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000928a:	ins    DWORD PTR es:[rdi],dx
   14000928b:	add    BYTE PTR [rdi+0x0],dl
   14000928e:	pop    rdi
   14000928f:	pop    rdi
   140009290:	rex.XB pop r15
   140009292:	jae    0x140009304
   140009294:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140009298:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000929f:	ins    BYTE PTR es:[rdi],dx
   1400092a0:	gs jb  0x1400092a3
   1400092a3:	add    BYTE PTR [rdi],ah
   1400092a5:	add    DWORD PTR [rdi+0x66],ebx
   1400092a8:	ins    DWORD PTR es:[rdi],dx
   1400092a9:	outs   dx,DWORD PTR ds:[rsi]
   1400092aa:	fs add BYTE PTR gs:[rax],al
   1400092ae:	rol    BYTE PTR [rax],cl
   1400092b0:	pop    rdi
   1400092b1:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400092b4:	ins    DWORD PTR es:[rdi],dx
   1400092b5:	outs   dx,DWORD PTR ds:[rsi]
   1400092b6:	fs add BYTE PTR gs:[rax],al
   1400092ba:	ins    DWORD PTR es:[rdi],dx
   1400092bb:	jae    0x140009333
   1400092bd:	movsxd esi,DWORD PTR [rdx+0x74]
   1400092c0:	cs fs ins BYTE PTR es:[rdi],dx
   1400092c3:	ins    BYTE PTR es:[rdi],dx
   1400092c4:	add    BYTE PTR [rax],al
   1400092c6:	adc    al,BYTE PTR [rax]
   1400092c8:	(bad)  
   1400092c9:	(bad)  
   1400092ca:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   1400092ce:	gs pop rdi
   1400092d0:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   1400092d7:	rex.RB
   1400092d8:	rex.B
   1400092d9:	rex.B
   1400092da:	rex pop rax
   1400092dc:	pop    rdx
   1400092dd:	add    BYTE PTR [rdi],ch
   1400092df:	add    BYTE PTR [rdi],bh
   1400092e1:	je     0x140009348
   1400092e3:	jb     0x140009352
   1400092e5:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400092ec:	pop    rcx
   1400092ed:	pop    r8
   1400092ef:	pop    rax
   1400092f0:	pop    rdx
   1400092f1:	add    BYTE PTR [rbx+0x6c745203],ch
   1400092f7:	rex.RX jb 0x14000935f
   1400092fa:	gs rex.W
   1400092fc:	gs (bad) 
   1400092fe:	jo     0x140009300
   140009300:	stos   BYTE PTR es:[rdi],al
   140009301:	add    dl,BYTE PTR [rdx+0x74]
   140009304:	ins    BYTE PTR es:[rdi],dx
   140009305:	rex.B ins BYTE PTR es:[rdi],dx
   140009307:	ins    BYTE PTR es:[rdi],dx
   140009308:	outs   dx,DWORD PTR ds:[rsi]
   140009309:	movsxd esp,DWORD PTR [rcx+0x74]
   14000930c:	gs rex.W
   14000930e:	gs (bad) 
   140009310:	jo     0x140009312
   140009312:	mov    BYTE PTR [rdx],0x52
   140009315:	je     0x140009383
   140009317:	rex.XB (bad) 
   140009319:	jo     0x14000938f
   14000931b:	jne    0x14000938f
   14000931d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009320:	outs   dx,BYTE PTR ds:[rsi]
   140009321:	je     0x140009388
   140009323:	js     0x140009399
   140009325:	add    BYTE PTR [rdi+0x4],dh
   140009328:	push   rdx
   140009329:	je     0x140009397
   14000932b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000932d:	outs   dx,DWORD PTR ds:[rsi]
   14000932e:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140009332:	jne    0x1400093a2
   140009334:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140009338:	outs   dx,BYTE PTR ds:[rsi]
   140009339:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000933b:	je     0x1400093af
   14000933d:	jns    0x14000933f
   14000933f:	add    BYTE PTR [rbx+0x6c745205],cl
   140009345:	push   rsi
   140009346:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000934d:	outs   dx,BYTE PTR ds:[rsi]
   14000934e:	ja     0x1400093b9
   140009350:	outs   dx,BYTE PTR ds:[rsi]
   140009351:	add    BYTE PTR fs:[rax],al
   140009354:	outs   dx,BYTE PTR ds:[rsi]
   140009355:	je     0x1400093bb
   140009357:	ins    BYTE PTR es:[rdi],dx
   140009358:	ins    BYTE PTR es:[rdi],dx
   140009359:	cs fs ins BYTE PTR es:[rdi],dx
   14000935c:	ins    BYTE PTR es:[rdi],dx
   14000935d:	add    BYTE PTR [rbx+0x2],al
   140009360:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009362:	(bad)  
   140009363:	fs push rbx
   140009365:	je     0x1400093d9
   140009367:	imul   ebp,DWORD PTR [rsi+0x67],0x53550057
   14000936e:	rex.RB push r10
   140009370:	xor    esi,DWORD PTR [rdx]
   140009372:	cs fs ins BYTE PTR es:[rdi],dx
   140009375:	ins    BYTE PTR es:[rdi],dx
   140009376:	add    BYTE PTR [rax],al
   140009378:	ins    DWORD PTR es:[rdi],dx
   140009379:	add    eax,0x65656c53
   14000937e:	jo     0x140009380
   140009380:	sahf   
   140009381:	add    eax,0x61686e55
   140009386:	outs   dx,BYTE PTR ds:[rsi]
   140009387:	fs ins BYTE PTR es:[rdi],dx
   140009389:	gs fs rex.RB js 0x1400093f1
   14000938e:	gs jo  0x140009405
   140009391:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009398:	gs jb  0x14000939b
   14000939b:	add    BYTE PTR [rsi+0x5],bl
   14000939e:	push   rbx
   14000939f:	gs je  0x1400093f7
   1400093a2:	outs   dx,BYTE PTR ds:[rsi]
   1400093a3:	push   0x6c646e61
   1400093a8:	gs fs rex.RB js 0x140009410
   1400093ad:	gs jo  0x140009424
   1400093b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400093b7:	gs jb  0x1400093ba
   1400093ba:	adc    BYTE PTR [rdx],al
   1400093bc:	rex.RXB
   1400093bd:	gs je  0x140009403
   1400093c0:	jne    0x140009434
   1400093c2:	jb     0x140009429
   1400093c4:	outs   dx,BYTE PTR ds:[rsi]
   1400093c5:	je     0x140009417
   1400093c7:	jb     0x140009438
   1400093c9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400093cc:	jae    0x1400093ce
   1400093ce:	jl     0x1400093d5
   1400093d0:	push   rsp
   1400093d1:	gs jb  0x140009441
   1400093d4:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400093db:	outs   dx,DWORD PTR ds:[rsi]
   1400093dc:	movsxd esp,DWORD PTR [rbp+0x73]
   1400093df:	jae    0x1400093e1
   1400093e1:	add    BYTE PTR [rsi],dh
   1400093e3:	add    al,0x51
   1400093e5:	jne    0x14000944c
   1400093e7:	jb     0x140009462
   1400093e9:	push   rax
   1400093ea:	gs jb  0x140009453
   1400093ed:	outs   dx,DWORD PTR ds:[rsi]
   1400093ee:	jb     0x14000945d
   1400093f0:	(bad)  
   1400093f1:	outs   dx,BYTE PTR ds:[rsi]
   1400093f2:	movsxd esp,DWORD PTR [rbp+0x43]
   1400093f5:	outs   dx,DWORD PTR ds:[rsi]
   1400093f6:	jne    0x140009466
   1400093f8:	je     0x14000945f
   1400093fa:	jb     0x1400093fc
   1400093fc:	adc    DWORD PTR [rdx],eax
   1400093fe:	rex.RXB
   1400093ff:	gs je  0x140009445
   140009402:	jne    0x140009476
   140009404:	jb     0x14000946b
   140009406:	outs   dx,BYTE PTR ds:[rsi]
   140009407:	je     0x140009459
   140009409:	jb     0x14000947a
   14000940b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000940e:	jae    0x140009459
   140009410:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465db19
   140009417:	rex.XB jne 0x14000948c
   14000941a:	jb     0x140009481
   14000941c:	outs   dx,BYTE PTR ds:[rsi]
   14000941d:	je     0x140009473
   14000941f:	push   0x64616572
   140009424:	rex.WB
   140009425:	add    BYTE PTR fs:[rax],al
   140009428:	loopne 0x14000942c
   14000942a:	rex.RXB
   14000942b:	gs je  0x140009481
   14000942e:	jns    0x1400094a3
   140009430:	je     0x140009497
   140009432:	ins    DWORD PTR es:[rdi],dx
   140009433:	push   rsp
   140009434:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000943b:	ins    BYTE PTR es:[rdi],dx
   14000943c:	gs push rsp
   14000943e:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140009445:	gs je  0x14000949c
   140009448:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000944f:	je     0x140009451
   140009451:	add    BYTE PTR [rdx+0x6d656d04],dl
   140009457:	movsxd esi,DWORD PTR [rax+0x79]
   14000945a:	add    BYTE PTR [rax],al
   14000945c:	xchg   esi,eax
   14000945d:	add    al,0x6d
   14000945f:	gs ins DWORD PTR es:[rdi],dx
   140009461:	jae    0x1400094c8
   140009463:	je     0x140009465
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	int    0x5d
   14000a00a:	and    dl,dl
   14000a00c:	data16 (bad) 
   14000a00e:	(bad)  
   14000a00f:	inc    DWORD PTR [rcx]
	...
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    bh,bh
   14000a021:	(bad)  
   14000a022:	(bad)  
   14000a023:	(bad)  
   14000a024:	(bad)  
   14000a025:	(bad)  
   14000a026:	(bad)  
   14000a027:	inc    DWORD PTR [rax]
   14000a029:	add    BYTE PTR [rax],al
   14000a02b:	add    BYTE PTR [rax],al
   14000a02d:	add    BYTE PTR [rax],al
   14000a02f:	add    al,dl
   14000a031:	jae    0x14000a033
   14000a033:	rex add DWORD PTR [rax],eax
	...
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	cs (bad) 
   14000a042:	push   r14
   14000a044:	outs   dx,DWORD PTR ds:[rsi]
   14000a045:	jne    0x14000a0bb
   14000a047:	pop    rdi
   14000a048:	outs   dx,DWORD PTR ds:[rsi]
   14000a049:	pop    di
   14000a04b:	jb     0x14000a0ae
   14000a04d:	outs   dx,BYTE PTR ds:[rsi]
   14000a04e:	addr32 gs rex jae 0x14000a0c7
   14000a053:	fs rex
   14000a055:	add    BYTE PTR [rax],al
   14000a058:	shl    BYTE PTR [rbx+0x0],1
   14000a05b:	rex add DWORD PTR [rax],eax
	...
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	cs (bad) 
   14000a06a:	push   r14
   14000a06c:	gs js  0x14000a0d2
   14000a06f:	gs jo  0x14000a0e6
   14000a072:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0004040
   14000a079:	jae    0x14000a07b
   14000a07b:	rex add DWORD PTR [rax],eax
	...
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	cs (bad) 
   14000a08a:	push   r14
   14000a08c:	(bad)
   14000a091:	ins    BYTE PTR es:[rdi],dx
   14000a092:	ins    BYTE PTR es:[rdi],dx
   14000a093:	outs   dx,DWORD PTR ds:[rsi]
   14000a094:	movsxd eax,DWORD PTR [rax+0x73]
   14000a097:	je     0x14000a0fd
   14000a099:	rex
   14000a09a:	add    BYTE PTR [rax],al
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    al,dl
   14000a0a1:	jae    0x14000a0a3
   14000a0a3:	rex add DWORD PTR [rax],eax
	...
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	cs (bad) 
   14000a0b2:	push   r14
   14000a0b4:	ins    BYTE PTR es:[rdi],dx
   14000a0b5:	outs   dx,BYTE PTR gs:[rsi]
   14000a0b7:	addr32 je 0x14000a122
   14000a0ba:	pop    rdi
   14000a0bb:	gs jb  0x14000a130
   14000a0be:	outs   dx,DWORD PTR ds:[rsi]
   14000a0bf:	jb     0x14000a101
   14000a0c1:	jae    0x14000a137
   14000a0c3:	fs rex
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c8:	shl    BYTE PTR [rbx+0x0],1
   14000a0cb:	rex add DWORD PTR [rax],eax
	...
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	cs (bad) 
   14000a0da:	push   r14
   14000a0dc:	ins    BYTE PTR es:[rdi],dx
   14000a0dd:	outs   dx,DWORD PTR ds:[rsi]
   14000a0de:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000a0e6:	jb     0x14000a128
   14000a0e8:	jae    0x14000a15e
   14000a0ea:	fs rex
   14000a0ec:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140015000 <.pdata>:
   140015000:	or     BYTE PTR [rax],dl
   140015002:	add    BYTE PTR [rax],al
   140015004:	adc    BYTE PTR [r8],al
   140015007:	add    BYTE PTR [rax],dh
   140015009:	add    BYTE PTR [rax],0x0
   14001500c:	rex.W adc BYTE PTR [rax],al
   14001500f:	add    BYTE PTR [rdi+0x10],ch
   140015012:	add    BYTE PTR [rax],al
   140015014:	(bad)  
   140015015:	add    BYTE PTR [rax],0x0
   140015018:	adc    BYTE PTR [rax],0x0
   14001501b:	add    BYTE PTR [rbx+0x78000010],ah
   140015021:	add    BYTE PTR [rax],0x0
   140015024:	mov    al,0x10
   140015026:	add    BYTE PTR [rax],al
   140015028:	clc    
   140015029:	adc    BYTE PTR [rax],al
   14001502b:	add    BYTE PTR [rax+0x80],al
   140015031:	adc    DWORD PTR [rax],eax
   140015033:	add    BYTE PTR [rax],dh
   140015035:	adc    DWORD PTR [rax],eax
   140015037:	add    BYTE PTR [rax+0x38000080],ah
   14001503d:	adc    DWORD PTR [rax],eax
   14001503f:	add    BYTE PTR [rax-0x37ffffef],cl
   140015045:	add    BYTE PTR [rax],0x0
   140015048:	mov    al,0x11
   14001504a:	add    BYTE PTR [rax],al
   14001504c:	loop   0x14001505f
   14001504e:	add    BYTE PTR [rax],al
   140015050:	add    BYTE PTR [rcx+0x11f00000],al
   140015056:	add    BYTE PTR [rax],al
   140015058:	pop    rbp
   140015059:	adc    al,BYTE PTR [rax]
   14001505b:	add    BYTE PTR [rax],dl
   14001505d:	add    DWORD PTR [rax],0x126400
   140015063:	add    bh,al
   140015065:	adc    al,BYTE PTR [rax]
   140015067:	add    BYTE PTR [rax-0x7f],al
   14001506a:	add    BYTE PTR [rax],al
   14001506c:	rcl    BYTE PTR [rdx],1
   14001506e:	add    BYTE PTR [rax],al
   140015070:	cmp    al,0x13
   140015072:	add    BYTE PTR [rax],al
   140015074:	jo     0x140014ff7
   140015076:	add    BYTE PTR [rax],al
   140015078:	adc    r8d,DWORD PTR [rax]
   14001507b:	add    BYTE PTR [rsi-0x3fffffed],bl
   140015081:	add    DWORD PTR [rax],0x13b000
   140015087:	add    dl,ah
   140015089:	adc    eax,DWORD PTR [rax]
   14001508b:	add    BYTE PTR [rax],al
   14001508d:	add    DWORD PTR [rax],0x13f000
   140015093:	add    BYTE PTR [rdi+0x14],ah
   140015096:	add    BYTE PTR [rax],al
   140015098:	add    BYTE PTR [rdx+0x14700000],al
   14001509e:	add    BYTE PTR [rax],al
   1400150a0:	fst    QWORD PTR [rax+rax*1]
   1400150a3:	add    BYTE PTR [rax],dh
   1400150a5:	(bad)  
   1400150a6:	add    BYTE PTR [rax],al
   1400150a8:	in     al,0x14
   1400150aa:	add    BYTE PTR [rax],al
   1400150ac:	pop    rax
   1400150ad:	(bad)  
   1400150ae:	add    BYTE PTR [rax],al
   1400150b0:	push   0x60000082
   1400150b5:	(bad)  
   1400150b6:	add    BYTE PTR [rax],al
   1400150b8:	movabs al,ds:0xa800008280000016
   1400150c1:	(bad)  
   1400150c2:	add    BYTE PTR [rax],al
   1400150c4:	(bad)  
   1400150c5:	(bad)  
   1400150c6:	add    BYTE PTR [rax],al
   1400150c8:	mov    BYTE PTR [rdx+0x16d40000],al
   1400150ce:	add    BYTE PTR [rax],al
   1400150d0:	test   BYTE PTR [rbx],bl
   1400150d2:	add    BYTE PTR [rax],al
   1400150d4:	nop
   1400150d5:	(bad)  
   1400150d6:	add    BYTE PTR [rax],al
   1400150d8:	mov    WORD PTR [rbx],ds
   1400150da:	add    BYTE PTR [rax],al
   1400150dc:	mov    esp,0x8000001b
   1400150e1:	(bad)  
   1400150e2:	add    BYTE PTR [rax],al
   1400150e4:	(bad)  
   1400150e5:	sbb    eax,DWORD PTR [rax]
   1400150e7:	add    al,dh
   1400150e9:	sbb    eax,DWORD PTR [rax]
   1400150eb:	add    BYTE PTR [rax-0x7ffff7e],al
   1400150f1:	sbb    eax,DWORD PTR [rax]
   1400150f3:	add    BYTE PTR [rax],cl
   1400150f5:	sbb    eax,0x82e80000
   1400150fa:	add    BYTE PTR [rax],al
   1400150fc:	adc    BYTE PTR [rip+0x1d750000],bl        # 0x15d765102
   140015102:	add    BYTE PTR [rax],al
   140015104:	add    BYTE PTR [rbx+0x1d7c0000],al
   14001510a:	add    BYTE PTR [rax],al
   14001510c:	and    ebx,DWORD PTR [rsi]
   14001510e:	add    BYTE PTR [rax],al
   140015110:	adc    BYTE PTR [rbx+0x1e2c0000],al
   140015116:	add    BYTE PTR [rax],al
   140015118:	sbb    DWORD PTR [rsi],0x83240000
   14001511e:	add    BYTE PTR [rax],al
   140015120:	cwde   
   140015121:	(bad)  
   140015122:	add    BYTE PTR [rax],al
   140015124:	int    0x1e
   140015126:	add    BYTE PTR [rax],al
   140015128:	add    BYTE PTR [rdx+0x1ed40000],0x0
   14001512f:	add    BYTE PTR [rsi],al
   140015131:	and    BYTE PTR [rax],al
   140015133:	add    BYTE PTR [rax-0x7d],dl
   140015136:	add    BYTE PTR [rax],al
   140015138:	or     al,0x20
   14001513a:	add    BYTE PTR [rax],al
   14001513c:	add    esp,DWORD PTR [rcx]
   14001513e:	add    BYTE PTR [rax],al
   140015140:	adc    BYTE PTR [rbx+0x210c0000],al
   140015146:	add    BYTE PTR [rax],al
   140015148:	(bad)  
   140015149:	and    DWORD PTR [rax],eax
   14001514b:	add    BYTE PTR [rax],dh
   14001514d:	test   BYTE PTR [rax],al
   14001514f:	add    BYTE PTR [rax],bl
   140015151:	and    al,BYTE PTR [rax]
   140015153:	add    BYTE PTR [rdi+0x38000022],cl
   140015159:	test   BYTE PTR [rax],al
   14001515b:	add    BYTE PTR [rax-0x11ffffde],bl
   140015161:	and    al,BYTE PTR [rax]
   140015163:	add    BYTE PTR [rax-0x7c],cl
   140015166:	add    BYTE PTR [rax],al
   140015168:	hlt    
   140015169:	and    al,BYTE PTR [rax]
   14001516b:	add    BYTE PTR [rbx+riz*1+0x0],bl
   14001516f:	add    BYTE PTR [rax],al
   140015171:	add    DWORD PTR [rax],0x0
   140015174:	and    eax,DWORD PTR fs:[rax]
   140015177:	add    BYTE PTR [rbx-0x77ffffdd],dl
   14001517d:	(bad)  
   14001517e:	add    BYTE PTR [rax],al
   140015180:	pushf  
   140015181:	and    eax,DWORD PTR [rax]
   140015183:	add    BYTE PTR [rbx],bh
   140015185:	and    al,0x0
   140015187:	add    BYTE PTR [rax+0x44000084],al
   14001518d:	and    al,0x0
   14001518f:	add    BYTE PTR [rax+0x25],ah
   140015192:	add    BYTE PTR [rax],al
   140015194:	cwde   
   140015195:	test   BYTE PTR [rax],al
   140015197:	add    BYTE PTR [rax+0x25],ch
   14001519a:	add    BYTE PTR [rax],al
   14001519c:	fsub   DWORD PTR [rip+0xffffffff84a80000]        # 0xc4a951a2
   1400151a2:	add    BYTE PTR [rax],al
   1400151a4:	loopne 0x1400151cb
   1400151a6:	add    BYTE PTR [rax],al
   1400151a8:	js     0x1400151d1
   1400151aa:	add    BYTE PTR [rax],al
   1400151ac:	mov    ah,0x84
   1400151ae:	add    BYTE PTR [rax],al
   1400151b0:	and    BYTE PTR [rdi],0x0
   1400151b3:	add    BYTE PTR [rax+rbp*1+0x0],al
   1400151b7:	add    BYTE PTR [rax+0x4c000082],cl
   1400151bd:	sub    BYTE PTR [rax],al
   1400151bf:	add    BYTE PTR [rip+0xffffffffcc000029],bh        # 0x10c0151ee
   1400151c5:	test   BYTE PTR [rax],al
   1400151c7:	add    BYTE PTR [rcx+rbp*1+0x0],al
   1400151cb:	add    BYTE PTR [rsi+0x29],ah
   1400151d1:	add    DWORD PTR [rax],0x0
   1400151d4:	mov    al,0x29
   1400151d6:	add    BYTE PTR [rax],al
   1400151d8:	(bad)  
   1400151d9:	sub    DWORD PTR [rax],eax
   1400151db:	add    BYTE PTR [rax-0x2bffff7e],cl
   1400151e1:	sub    DWORD PTR [rax],eax
   1400151e3:	add    BYTE PTR [rdi-0x1bffffd6],bl
   1400151e9:	test   BYTE PTR [rax],al
   1400151eb:	add    BYTE PTR [rax-0x6ffffd6],ch
   1400151f1:	sub    al,BYTE PTR [rax]
   1400151f3:	add    al,bh
   1400151f5:	test   BYTE PTR [rax],al
   1400151f7:	add    BYTE PTR [rax],al
   1400151f9:	sub    eax,DWORD PTR [rax]
   1400151fb:	add    BYTE PTR [rsp+rbp*1],cl
   1400151fe:	add    BYTE PTR [rax],al
   140015200:	add    al,0x85
   140015202:	add    BYTE PTR [rax],al
   140015204:	adc    al,0x2c
   140015206:	add    BYTE PTR [rax],al
   140015208:	rex.B sub eax,0x85140000
   14001520e:	add    BYTE PTR [rax],al
   140015210:	sub    rax,0x305e0000
   140015216:	add    BYTE PTR [rax],al
   140015218:	sub    al,0x85
   14001521a:	add    BYTE PTR [rax],al
   14001521c:	xor    BYTE PTR fs:[rax],al
   14001521f:	add    BYTE PTR [rcx+0x41],bh
   140015222:	add    BYTE PTR [rax],al
   140015224:	test   QWORD PTR [rax],rax
   140015227:	add    BYTE PTR [rax+0x61000041],al
   14001522d:	rex.XB add BYTE PTR [r8],al
   140015230:	mov    eax,0x68000087
   140015235:	rex.XB add BYTE PTR [r8],al
   140015238:	jne    0x140015289
   14001523a:	add    BYTE PTR [rax],al
   14001523c:	(bad)  
   14001523d:	mov    BYTE PTR [rax],al
   14001523f:	add    al,bl
   140015241:	rex.WRXB add BYTE PTR [r8],r8b
   140015244:	cmp    al,0x53
   140015246:	add    BYTE PTR [rax],al
   140015248:	js     0x1400151d2
   14001524a:	add    BYTE PTR [rax],al
   14001524c:	rex.R push rbx
   14001524e:	add    BYTE PTR [rax],al
   140015250:	mov    al,0x53
   140015252:	add    BYTE PTR [rax],al
   140015254:	call   0xf80152e2
   140015259:	push   rbx
   14001525a:	add    BYTE PTR [rax],al
   14001525c:	sub    DWORD PTR [rax+rax*1+0x0],edx
   140015260:	mov    eax,0x30000089
   140015265:	push   rsp
   140015266:	add    BYTE PTR [rax],al
   140015268:	jno    0x1400152be
   14001526a:	add    BYTE PTR [rax],al
   14001526c:	add    BYTE PTR [rdx+0x54800000],0x0
   140015273:	add    dh,bl
   140015275:	push   rsp
   140015276:	add    BYTE PTR [rax],al
   140015278:	and    BYTE PTR [rdx+0x54f00000],cl
   14001527e:	add    BYTE PTR [rax],al
   140015280:	and    dl,BYTE PTR [rbp+0x0]
   140015283:	add    BYTE PTR [rax],al
   140015285:	add    DWORD PTR [rax],0x552800
   14001528b:	add    BYTE PTR [rbp+0x55],bh
   14001528e:	add    BYTE PTR [rax],al
   140015290:	push   0xffffffff84000089
   140015295:	push   rbp
   140015296:	add    BYTE PTR [rax],al
   140015298:	fcom   QWORD PTR [rbp+0x0]
   14001529b:	add    BYTE PTR [rax-0xfffff77],dl
   1400152a1:	push   rbp
   1400152a2:	add    BYTE PTR [rax],al
   1400152a4:	mov    edi,0x88000056
   1400152a9:	(bad)  
   1400152aa:	add    BYTE PTR [rax],al
   1400152ac:	rcl    BYTE PTR [rsi+0x0],1
   1400152af:	add    BYTE PTR [rcx],bl
   1400152b1:	push   rdi
   1400152b2:	add    BYTE PTR [rax],al
   1400152b4:	sub    al,0x8a
   1400152b6:	add    BYTE PTR [rax],al
   1400152b8:	and    BYTE PTR [rdi+0x0],dl
   1400152bb:	add    dl,dh
   1400152bd:	pop    rax
   1400152be:	add    BYTE PTR [rax],al
   1400152c0:	xor    al,0x8a
   1400152c2:	add    BYTE PTR [rax],al
   1400152c4:	add    BYTE PTR [rcx+0x0],bl
   1400152c7:	add    BYTE PTR [rdx],dl
   1400152c9:	pop    rcx
   1400152ca:	add    BYTE PTR [rax],al
   1400152cc:	mov    BYTE PTR [rdx+0x59300000],al
   1400152d2:	add    BYTE PTR [rax],al
   1400152d4:	rex.WRX pop rcx
   1400152d6:	add    BYTE PTR [rax],al
   1400152d8:	jo     0x140015264
   1400152da:	add    BYTE PTR [rax],al
   1400152dc:	nop
   1400152dd:	pop    rcx
   1400152de:	add    BYTE PTR [rax],al
   1400152e0:	rcr    BYTE PTR [rcx+0x0],0x0
   1400152e4:	and    BYTE PTR [rdx+0x59c80000],cl
   1400152ea:	add    BYTE PTR [rax],al
   1400152ec:	cld    
   1400152ed:	pop    rcx
   1400152ee:	add    BYTE PTR [rax],al
   1400152f0:	add    BYTE PTR [rdx+0x5a100000],0x0
   1400152f7:	add    BYTE PTR [rcx+0x7400005b],al
   1400152fd:	mov    al,BYTE PTR [rax]
   1400152ff:	add    BYTE PTR [rax-0x42ffffa5],ah
   140015305:	pop    rbx
   140015306:	add    BYTE PTR [rax],al
   140015308:	mov    BYTE PTR [rdx+0x5bc40000],al
   14001530e:	add    BYTE PTR [rax],al
   140015310:	(bad)  
   140015311:	pop    rsp
   140015312:	add    BYTE PTR [rax],al
   140015314:	add    BYTE PTR [rdx+0x5c300000],0x0
   14001531b:	add    BYTE PTR [rdi-0x17ffffa4],bh
   140015321:	(bad)  
   140015322:	add    BYTE PTR [rax],al
   140015324:	rcr    BYTE PTR [rax+rax*1+0x0],1
   140015328:	or     DWORD PTR [rbp+0x0],ebx
   14001532b:	add    BYTE PTR [rax+0x10000082],cl
   140015331:	pop    rbp
   140015332:	add    BYTE PTR [rax],al
   140015334:	sub    BYTE PTR [rbp+0x0],bl
   140015337:	add    BYTE PTR [rax+0x3c000082],cl
   14001533d:	pop    rbp
   14001533e:	add    BYTE PTR [rax],al
   140015340:	nop
   140015341:	pop    rbp
   140015342:	add    BYTE PTR [rax],al
   140015344:	jl     0x1400152d0
   140015346:	add    BYTE PTR [rax],al
   140015348:	cwde   
   140015349:	pop    rbp
   14001534a:	add    BYTE PTR [rax],al
   14001534c:	fstp   QWORD PTR [rbp+0x0]
   14001534f:	add    BYTE PTR [rax+0x40000082],al
   140015355:	pop    rsi
   140015356:	add    BYTE PTR [rax],al
   140015358:	lea    ebx,[rsi+0x0]
   14001535b:	add    BYTE PTR [rdx+rcx*4+0x5ed40000],bl
   140015362:	add    BYTE PTR [rax],al
   140015364:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015365:	pop    rdi
   140015366:	add    BYTE PTR [rax],al
   140015368:	ror    BYTE PTR [rdx+0x60200000],0x0
   14001536f:	add    BYTE PTR [rdx],ah
   140015371:	(bad)  
   140015372:	add    BYTE PTR [rax],al
   140015374:	ror    BYTE PTR [rdx+0x60400000],1
   14001537a:	add    BYTE PTR [rax],al
   14001537c:	lea    esp,[rax+0x0]
   14001537f:	add    al,bl
   140015381:	mov    al,BYTE PTR [rax]
   140015383:	add    BYTE PTR [rsi+0x61],bl
   140015386:	add    BYTE PTR [rax],al
   140015388:	ret    0x61
   14001538b:	add    BYTE PTR [rax],ah
   14001538d:	test   BYTE PTR [rax],al
   14001538f:	add    dl,al
   140015391:	(bad)  
   140015392:	add    BYTE PTR [rax],al
   140015394:	(bad)  
   140015395:	(bad)  
   140015396:	add    BYTE PTR [rax],al
   140015398:	and    BYTE PTR [rax+rax*1+0x646b00],al
   14001539f:	add    BYTE PTR [rsi+0x58000064],cl
   1400153a5:	mov    DWORD PTR [rax],eax
   1400153a7:	add    BYTE PTR [rsi-0x5affff9c],cl
   1400153ad:	add    BYTE PTR fs:[rax],al
   1400153b0:	pop    rax
   1400153b1:	mov    DWORD PTR [rax],eax
   1400153b3:	add    BYTE PTR [rbp-0x24ffff9c],bh
   1400153b9:	add    BYTE PTR fs:[rax],al
   1400153bc:	mov    al,BYTE PTR fs:[rax]
   1400153bf:	add    al,dh
   1400153c1:	add    BYTE PTR fs:[rax],al
   1400153c4:	adc    BYTE PTR [rbp+0x0],ah
   1400153c7:	add    BYTE PTR [rdx+rcx*4+0x0],ah
	...

Disassembly of section .rsrc:

0000000140016000 <.rsrc>:
	...
   14001600c:	add    DWORD PTR [rax],eax
   14001600e:	add    al,BYTE PTR [rax]
   140016010:	call   0x168816015
   140016015:	add    BYTE PTR [rax],al
   140016017:	adc    BYTE PTR [rax],0x0
   14001601a:	add    BYTE PTR [rax],al
   14001601c:	add    BYTE PTR [rax],al
   14001601f:	sbb    BYTE PTR [rax],0x0
   140016022:	add    BYTE PTR [rax],al
   140016024:	pop    rax
   140016025:	add    BYTE PTR [rax],al
   140016027:	add    BYTE PTR [rax],0x0
	...
   140016036:	add    DWORD PTR [rax],eax
   140016038:	add    DWORD PTR [rax],eax
   14001603a:	add    BYTE PTR [rax],al
   14001603c:	jo     0x14001603e
   14001603e:	add    BYTE PTR [rax+0x0],al
	...
   14001604c:	add    BYTE PTR [rax],al
   14001604e:	add    DWORD PTR [rax],eax
   140016050:	add    DWORD PTR [rax],eax
   140016052:	add    BYTE PTR [rax],al
   140016054:	mov    BYTE PTR [rax],al
   140016056:	add    BYTE PTR [rax+0x0],al
	...
   140016064:	add    BYTE PTR [rax],al
   140016066:	add    DWORD PTR [rax],eax
   140016068:	add    DWORD PTR [rax],eax
   14001606a:	add    BYTE PTR [rax],al
   14001606c:	movabs al,ds:0x800000
	...
   14001607d:	add    BYTE PTR [rcx],al
   14001607f:	add    BYTE PTR [rcx],cl
   140016081:	add    al,0x0
   140016083:	add    BYTE PTR [rax+0x0],bh
	...
   140016095:	add    BYTE PTR [rcx],al
   140016097:	add    BYTE PTR [rcx],cl
   140016099:	add    al,0x0
   14001609b:	add    al,cl
	...
   1400160ad:	add    BYTE PTR [rcx],al
   1400160af:	add    BYTE PTR [rcx],cl
   1400160b1:	add    al,0x0
   1400160b3:	add    al,bl
   1400160b5:	add    BYTE PTR [rax],al
   1400160b7:	add    BYTE PTR [rax],ah
   1400160b9:	add    DWORD PTR [eax],eax
   1400160bc:	enter  0x0,0x0
	...
   1400160c8:	nop
   1400160c9:	movsxd eax,DWORD PTR [rcx]
   1400160cb:	add    BYTE PTR [rax+0x3],dl
   1400160d1:	add    BYTE PTR [rax],al
   1400160d3:	add    BYTE PTR [rax],al
   1400160d5:	add    BYTE PTR [rax],al
   1400160d7:	add    al,dh
   1400160d9:	(bad)  
   1400160da:	add    DWORD PTR [rax],eax
   1400160dc:	sahf   
   1400160dd:	add    al,BYTE PTR [rax]
	...
   1400160e7:	add    BYTE PTR [rbx],al
   1400160e9:	add    BYTE PTR [rbp+0x0],cl
   1400160ec:	push   rbp
   1400160ed:	add    BYTE PTR [rcx+0x0],cl
   1400160f0:	cmp    al,0x3f
   1400160f2:	js     0x140016161
   1400160f4:	ins    BYTE PTR es:[rdi],dx
   1400160f5:	and    BYTE PTR [rsi+0x65],dh
   1400160f8:	jb     0x14001616d
   1400160fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140016101:	xor    BYTE PTR [rdx],ah
   140016103:	and    BYTE PTR [rbp+0x6e],ah
   140016106:	movsxd ebp,DWORD PTR [rdi+0x64]
   140016109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140016110:	rex.RX sub eax,0x73202238
   140016116:	je     0x140016179
   140016118:	outs   dx,BYTE PTR ds:[rsi]
   140016119:	fs (bad) 
   14001611b:	ins    BYTE PTR es:[rdi],dx
   14001611c:	outs   dx,DWORD PTR ds:[rsi]
   14001611d:	outs   dx,BYTE PTR ds:[rsi]
   14001611e:	gs cmp eax,0x73657922
   140016124:	and    bh,BYTE PTR [rdi]
   140016126:	ds or  eax,0x2d213c0a
   14001612c:	sub    eax,0x706f4320
   140016131:	jns    0x1400161a5
   140016133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001613a:	sub    DWORD PTR [rax],esp
   14001613c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140016144:	je     0x140016166
   140016146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016148:	jb     0x1400161ba
   14001614a:	outs   dx,DWORD PTR ds:[rsi]
   14001614b:	jb     0x1400161ae
   14001614d:	je     0x1400161b8
   14001614f:	outs   dx,DWORD PTR ds:[rsi]
   140016150:	outs   dx,BYTE PTR ds:[rsi]
   140016151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e9f84
   140016157:	cmp    al,0x61
   140016159:	jae    0x1400161ce
   14001615b:	gs ins DWORD PTR es:[rdi],dx
   14001615d:	(bad)  
   14001615e:	ins    BYTE PTR es:[rdi],dx
   14001615f:	jns    0x140016181
   140016161:	js     0x1400161d0
   140016163:	ins    BYTE PTR es:[rdi],dx
   140016164:	outs   dx,BYTE PTR ds:[rsi]
   140016165:	jae    0x1400161a4
   140016167:	and    dh,BYTE PTR [rbp+0x72]
   14001616a:	outs   dx,BYTE PTR ds:[rsi]
   14001616b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001616e:	push   0x73616d65
   140016173:	sub    eax,0x7263696d
   140016178:	outs   dx,DWORD PTR ds:[rsi]
   140016179:	jae    0x1400161ea
   14001617b:	data16 je 0x1400161ab
   14001617e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140016181:	cmp    ah,BYTE PTR [rcx+0x73]
   140016184:	ins    DWORD PTR es:[rdi],dx
   140016185:	cs jbe 0x1400161b9
   140016188:	and    ah,BYTE PTR [rax]
   14001618a:	ins    DWORD PTR es:[rdi],dx
   14001618b:	(bad)  
   14001618c:	outs   dx,BYTE PTR ds:[rsi]
   14001618d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140016194:	jb     0x140016209
   140016196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001619d:	xor    BYTE PTR [rdx],ah
   14001619f:	ds or  eax,0x73613c0a
   1400161a5:	jae    0x14001620c
   1400161a7:	ins    DWORD PTR es:[rdi],dx
   1400161a8:	(bad)  
   1400161a9:	ins    BYTE PTR es:[rdi],dx
   1400161aa:	jns    0x1400161f5
   1400161ac:	fs outs dx,BYTE PTR gs:[rsi]
   1400161af:	je     0x14001621a
   1400161b1:	je     0x14001622c
   1400161b3:	or     eax,0x2020200a
   1400161b8:	and    BYTE PTR [rsi+0x65],dh
   1400161bb:	jb     0x140016230
   1400161bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400161c4:	xor    DWORD PTR [rsi],ebp
   1400161c6:	xor    BYTE PTR [rsi],ch
   1400161c8:	xor    BYTE PTR [rdx],ah
   1400161ca:	or     eax,0x2020200a
   1400161cf:	and    BYTE PTR [rax+0x72],dh
   1400161d2:	outs   dx,DWORD PTR ds:[rsi]
   1400161d3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400161d6:	jae    0x140016247
   1400161d8:	jb     0x14001621b
   1400161da:	jb     0x14001623f
   1400161dc:	push   0x63657469
   1400161e1:	je     0x140016258
   1400161e3:	jb     0x14001624a
   1400161e5:	cmp    eax,0x646d6122
   1400161ea:	ss xor al,0x22
   1400161ed:	or     eax,0x2020200a
   1400161f2:	and    BYTE PTR [rsi+0x61],ch
   1400161f5:	ins    DWORD PTR es:[rdi],dx
   1400161f6:	gs cmp eax,0x63694d22
   1400161fc:	jb     0x14001626d
   1400161fe:	jae    0x14001626f
   140016200:	data16 je 0x140016231
   140016203:	push   rdi
   140016204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001620b:	rex.RX jne 0x140016281
   14001620e:	imul   ebp,DWORD PTR [rdi+0x6e],0x5378532e
   140016215:	push   rsp
   140016216:	jb     0x140016279
   140016218:	movsxd esp,DWORD PTR [rbp+0x22]
   14001621b:	or     eax,0x2020200a
   140016220:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140016224:	gs cmp eax,0x6e697722
   14001622a:	xor    esi,DWORD PTR [rdx]
   14001622c:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f913c
   140016232:	or     bh,BYTE PTR [rsp+riz*2]
   140016235:	gs jae 0x14001629b
   140016238:	jb     0x1400162a3
   14001623a:	jo     0x1400162b0
   14001623c:	imul   ebp,DWORD PTR [rdi+0x6e],0x7378533e
   140016243:	and    BYTE PTR [rdx+rsi*2+0x61],dl
   140016247:	movsxd ebp,DWORD PTR [rcx+0x6e]
   14001624a:	and    BYTE PTR [edi+ebp*2+0x6f],dl
   14001624f:	ins    BYTE PTR es:[rdi],dx
   140016250:	cmp    al,0x2f
   140016252:	fs gs jae 0x1400162b9
   140016256:	jb     0x1400162c1
   140016258:	jo     0x1400162ce
   14001625a:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   140016261:	or     bh,BYTE PTR [rsp+rsi*2]
   140016264:	jb     0x1400162db
   140016266:	jae    0x1400162dc
   140016268:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001626a:	outs   dx,WORD PTR ds:[rsi]
   14001626c:	and    BYTE PTR [rax+0x6d],bh
   14001626f:	ins    BYTE PTR es:[rdi],dx
   140016270:	outs   dx,BYTE PTR ds:[rsi]
   140016271:	jae    0x1400162b0
   140016273:	and    dh,BYTE PTR [rbp+0x72]
   140016276:	outs   dx,BYTE PTR ds:[rsi]
   140016277:	cmp    dh,BYTE PTR [rbx+0x63]
   14001627a:	push   0x73616d65
   14001627f:	sub    eax,0x7263696d
   140016284:	outs   dx,DWORD PTR ds:[rsi]
   140016285:	jae    0x1400162f6
   140016287:	data16 je 0x1400162b7
   14001628a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001628d:	cmp    ah,BYTE PTR [rcx+0x73]
   140016290:	ins    DWORD PTR es:[rdi],dx
   140016291:	cs jbe 0x1400162c7
   140016294:	and    bh,BYTE PTR [rsi]
   140016296:	or     eax,0x2020200a
   14001629b:	and    BYTE PTR [rbx+rsi*2],bh
   14001629e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400162a2:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400162aa:	and    BYTE PTR [rax],ah
   1400162ac:	and    BYTE PTR [rax],ah
   1400162ae:	and    BYTE PTR [rax],ah
   1400162b0:	cmp    al,0x72
   1400162b2:	gs jno 0x14001632a
   1400162b5:	gs jae 0x14001632c
   1400162b8:	gs fs push rax
   1400162bb:	jb     0x140016326
   1400162bd:	jbe    0x140016328
   1400162bf:	ins    BYTE PTR es:[rdi],dx
   1400162c0:	gs addr32 gs jae 0x140016303
   1400162c5:	or     eax,0x2020200a
   1400162ca:	and    BYTE PTR [rax],ah
   1400162cc:	and    BYTE PTR [rax],ah
   1400162ce:	and    BYTE PTR [rax],ah
   1400162d0:	and    BYTE PTR [rax],ah
   1400162d2:	and    BYTE PTR [rdx+rsi*2],bh
   1400162d5:	gs jno 0x14001634d
   1400162d8:	gs jae 0x14001634f
   1400162db:	gs fs rex.RB js 0x140016345
   1400162e0:	movsxd esi,DWORD PTR [rbp+0x74]
   1400162e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400162ea:	ins    BYTE PTR es:[rdi],dx
   1400162eb:	or     eax,0x2020200a
   1400162f0:	and    BYTE PTR [rax],ah
   1400162f2:	and    BYTE PTR [rax],ah
   1400162f4:	and    BYTE PTR [rax],ah
   1400162f6:	and    BYTE PTR [rax],ah
   1400162f8:	and    BYTE PTR [rax],ah
   1400162fa:	and    BYTE PTR [rax],ah
   1400162fc:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140016300:	gs ins BYTE PTR es:[rdi],dx
   140016302:	cmp    eax,0x49736122
   140016307:	outs   dx,BYTE PTR ds:[rsi]
   140016308:	jbe    0x140016379
   14001630a:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001630e:	or     eax,0x2020200a
   140016313:	and    BYTE PTR [rax],ah
   140016315:	and    BYTE PTR [rax],ah
   140016317:	and    BYTE PTR [rax],ah
   140016319:	and    BYTE PTR [rax],ah
   14001631b:	and    BYTE PTR [rax],ah
   14001631d:	and    BYTE PTR [rax],ah
   14001631f:	and    BYTE PTR [rbp+0x69],dh
   140016322:	movsxd esp,DWORD PTR [r11+0x65]
   140016326:	jae    0x14001639b
   140016328:	cmp    eax,0x6c616622
   14001632d:	jae    0x140016394
   14001632f:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021833f
   140016335:	and    BYTE PTR [rax],ah
   140016337:	and    BYTE PTR [rax],ah
   140016339:	and    BYTE PTR [rax],ah
   14001633b:	and    BYTE PTR [rax],ah
   14001633d:	and    BYTE PTR [rdi],ch
   14001633f:	ds or  eax,0x2020200a
   140016345:	and    BYTE PTR [rax],ah
   140016347:	and    BYTE PTR [rax],ah
   140016349:	and    BYTE PTR [rdi+rbp*1],bh
   14001634c:	jb     0x1400163b3
   14001634e:	jno    0x1400163c5
   140016350:	gs jae 0x1400163c7
   140016353:	gs fs push rax
   140016356:	jb     0x1400163c1
   140016358:	jbe    0x1400163c3
   14001635a:	ins    BYTE PTR es:[rdi],dx
   14001635b:	gs addr32 gs jae 0x14001639e
   140016360:	or     eax,0x2020200a
   140016365:	and    BYTE PTR [rdi+rbp*1],bh
   140016368:	jae    0x1400163cf
   14001636a:	movsxd esi,DWORD PTR [rbp+0x72]
   14001636d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140016375:	je     0x1400163e9
   140016377:	jne    0x1400163ec
   140016379:	je     0x1400163c4
   14001637b:	outs   dx,BYTE PTR ds:[rsi]
   14001637c:	outs   dx,WORD PTR ds:[rsi]
   14001637e:	ds or  eax,0x612f3c0a
   140016384:	jae    0x1400163f9
   140016386:	gs ins DWORD PTR es:[rdi],dx
   140016388:	(bad)  
   140016389:	ins    BYTE PTR es:[rdi],dx
   14001638a:	jns    0x1400163ca
   14001638c:	or     eax,0x9000000a
   140016391:	add    esi,DWORD PTR [rax+rax*1]
   140016394:	add    BYTE PTR [rax],al
   140016396:	push   rsi
   140016397:	add    BYTE PTR [rbx+0x0],dl
   14001639a:	pop    rdi
   14001639b:	add    BYTE PTR [rsi+0x0],dl
   14001639e:	add    BYTE PTR [r10+0x0],r10b
   1400163a2:	push   rbx
   1400163a3:	add    BYTE PTR [rcx+0x0],cl
   1400163a6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400163aa:	pop    rdi
   1400163ab:	add    BYTE PTR [rcx+0x0],cl
   1400163ae:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400163b2:	rex.WRXB add BYTE PTR [r8],r8b
   1400163b5:	add    BYTE PTR [rax],al
   1400163b7:	add    BYTE PTR [rbp+0xfeef04],bh
   1400163bd:	add    BYTE PTR [rcx],al
   1400163bf:	add    BYTE PTR [rax],al
   1400163c1:	add    BYTE PTR [rdx],cl
   1400163c3:	add    BYTE PTR [rax],al
   1400163c5:	add    BYTE PTR [rax],bpl
   1400163c8:	add    BYTE PTR [rax],al
   1400163ca:	or     al,BYTE PTR [rax]
   1400163cc:	add    BYTE PTR [rax+0x0],al
   1400163cf:	sub    BYTE PTR [rdi],bh
   1400163d1:	add    BYTE PTR [rax],al
   1400163d3:	add    BYTE PTR [rax],al
   1400163d5:	add    BYTE PTR [rax],al
   1400163d7:	add    BYTE PTR [rax+rax*1],al
   1400163da:	add    al,0x0
   1400163dc:	add    DWORD PTR [rax],eax
	...
   1400163ea:	add    BYTE PTR [rax],al
   1400163ec:	out    dx,al
   1400163ed:	add    al,BYTE PTR [rax]
   1400163ef:	add    BYTE PTR [rcx],al
   1400163f1:	add    BYTE PTR [rbx+0x0],dl
   1400163f4:	je     0x1400163f6
   1400163f6:	jb     0x1400163f8
   1400163f8:	imul   eax,DWORD PTR [rax],0x67006e
   1400163fe:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140016402:	ins    BYTE PTR es:[rdi],dx
   140016403:	add    BYTE PTR [rbp+0x0],ah
   140016406:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001640a:	data16 add BYTE PTR [rdi+0x0],ch
   14001640e:	add    BYTE PTR [rax],al
   140016410:	retf   0x2
   140016413:	add    BYTE PTR [rcx],al
   140016415:	add    BYTE PTR [rax],dh
   140016417:	add    BYTE PTR [rax+rax*1],dh
   14001641a:	xor    BYTE PTR [rax],al
   14001641c:	cmp    DWORD PTR [rax],eax
   14001641e:	xor    BYTE PTR [rax],al
   140016420:	xor    al,0x0
   140016422:	rex.X add BYTE PTR [rax],sil
   140016425:	add    BYTE PTR [rax],al
   140016427:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001642b:	add    BYTE PTR [rcx],al
   14001642d:	add    BYTE PTR [rbx+0x0],al
   140016430:	outs   dx,DWORD PTR ds:[rsi]
   140016431:	add    BYTE PTR [rbp+0x0],ch
   140016434:	jo     0x140016436
   140016436:	(bad)  
   140016437:	add    BYTE PTR [rsi+0x0],ch
   14001643a:	jns    0x14001643c
   14001643c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140016440:	ins    DWORD PTR es:[rdi],dx
   140016441:	add    BYTE PTR [rbp+0x0],ah
   140016444:	add    BYTE PTR [rax],al
   140016446:	add    BYTE PTR [rax],al
   140016448:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001644c:	movsxd eax,DWORD PTR [rax]
   14001644e:	jb     0x140016450
   140016450:	outs   dx,DWORD PTR ds:[rsi]
   140016451:	add    BYTE PTR [rbx+0x0],dh
   140016454:	outs   dx,DWORD PTR ds:[rsi]
   140016455:	add    BYTE PTR [rsi+0x0],ah
   140016458:	je     0x14001645a
   14001645a:	and    BYTE PTR [rax],al
   14001645c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140016460:	jb     0x140016462
   140016462:	jo     0x140016464
   140016464:	outs   dx,DWORD PTR ds:[rsi]
   140016465:	add    BYTE PTR [rdx+0x0],dh
   140016468:	(bad)  
   140016469:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001646d:	add    BYTE PTR [rdi+0x0],ch
   140016470:	outs   dx,BYTE PTR ds:[rsi]
   140016471:	add    BYTE PTR [rax],al
   140016473:	add    BYTE PTR [rdx+0x0],cl
   140016476:	adc    DWORD PTR [rax],eax
   140016478:	add    DWORD PTR [rax],eax
   14001647a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001647e:	ins    BYTE PTR es:[rdi],dx
   14001647f:	add    BYTE PTR [rbp+0x0],ah
   140016482:	add    BYTE PTR [rbp+0x0],r12b
   140016486:	jae    0x140016488
   140016488:	movsxd eax,DWORD PTR [rax]
   14001648a:	jb     0x14001648c
   14001648c:	imul   eax,DWORD PTR [rax],0x740070
   140016492:	imul   eax,DWORD PTR [rax],0x6e006f
   140016498:	add    BYTE PTR [rax],al
   14001649a:	add    BYTE PTR [rax],al
   14001649c:	push   rbx
   14001649d:	add    BYTE PTR [rax+0x0],bh
   1400164a0:	jae    0x1400164a2
   1400164a2:	and    BYTE PTR [rax],al
   1400164a4:	push   rsp
   1400164a5:	add    BYTE PTR [rdx+0x0],dh
   1400164a8:	(bad)  
   1400164a9:	add    BYTE PTR [rbx+0x0],ah
   1400164ac:	imul   eax,DWORD PTR [rax],0x67006e
   1400164b2:	and    BYTE PTR [rax],al
   1400164b4:	push   rsp
   1400164b5:	add    BYTE PTR [rdi+0x0],ch
   1400164b8:	outs   dx,DWORD PTR ds:[rsi]
   1400164b9:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400164bd:	add    BYTE PTR [rax],al
   1400164bf:	add    BYTE PTR [rsi+0x0],ah
   1400164c2:	and    eax,DWORD PTR [rax]
   1400164c4:	add    DWORD PTR [rax],eax
   1400164c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400164ca:	ins    BYTE PTR es:[rdi],dx
   1400164cb:	add    BYTE PTR [rbp+0x0],ah
   1400164ce:	push   rsi
   1400164cf:	add    BYTE PTR [rbp+0x0],ah
   1400164d2:	jb     0x1400164d4
   1400164d4:	jae    0x1400164d6
   1400164d6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400164dc:	add    BYTE PTR [rax],al
   1400164de:	add    BYTE PTR [rax],al
   1400164e0:	xor    DWORD PTR [rax],eax
   1400164e2:	xor    BYTE PTR [rax],al
   1400164e4:	add    BYTE PTR cs:[rax],dh
   1400164e7:	add    BYTE PTR [rsi],ch
   1400164e9:	add    BYTE PTR [rcx],dh
   1400164eb:	add    BYTE PTR [rax],dh
   1400164ed:	add    BYTE PTR [rdx],dh
   1400164ef:	add    BYTE PTR [rax+rax*1],dh
   1400164f2:	xor    BYTE PTR [rax],al
   1400164f4:	add    BYTE PTR cs:[rcx],dh
   1400164f7:	add    BYTE PTR [rsi],dh
   1400164f9:	add    BYTE PTR [rbx],dh
   1400164fb:	add    BYTE PTR [rax],bh
   1400164fd:	add    BYTE PTR [rax+rax*1],dh
   140016500:	and    BYTE PTR [rax],al
   140016502:	sub    BYTE PTR [rax],al
   140016504:	je     0x140016506
   140016506:	push   0x2e003100
   14001650b:	add    BYTE PTR [rcx],dh
   14001650d:	add    BYTE PTR [rip+0x37003000],dh        # 0x177019513
   140016513:	add    BYTE PTR [rax],dh
   140016515:	add    BYTE PTR [rcx],bh
   140016517:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701961d
   14001651d:	add    BYTE PTR [rax],dh
   14001651f:	add    BYTE PTR [rax],dh
   140016521:	add    BYTE PTR [rcx],ch
   140016523:	add    BYTE PTR [rax],al
   140016525:	add    BYTE PTR [rax],al
   140016527:	add    BYTE PTR [rdx],bh
   140016529:	add    BYTE PTR [rip+0x49000100],cl        # 0x18901662f
   14001652f:	add    BYTE PTR [rsi+0x0],ch
   140016532:	je     0x140016534
   140016534:	add    BYTE PTR gs:[rdx+0x0],dh
   140016538:	outs   dx,BYTE PTR ds:[rsi]
   140016539:	add    BYTE PTR [rcx+0x0],ah
   14001653c:	ins    BYTE PTR es:[rdi],dx
   14001653d:	add    BYTE PTR [rsi+0x0],cl
   140016540:	(bad)  
   140016541:	add    BYTE PTR [rbp+0x0],ch
   140016544:	add    BYTE PTR gs:[rax],al
   140016547:	add    BYTE PTR [rbx+0x0],dh
   14001654a:	js     0x14001654c
   14001654c:	jae    0x14001654e
   14001654e:	je     0x140016550
   140016550:	jb     0x140016552
   140016552:	(bad)  
   140016553:	add    BYTE PTR [rbx+0x0],ah
   140016556:	add    BYTE PTR gs:[rsi],ch
   140016559:	add    BYTE PTR [rbp+0x0],ah
   14001655c:	js     0x14001655e
   14001655e:	add    BYTE PTR gs:[rax],al
   140016561:	add    BYTE PTR [rax],al
   140016563:	add    BYTE PTR [rax+0x1002e00],al
   140016569:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001656d:	add    BYTE PTR [rdi+0x0],ah
   140016570:	(bad)  
   140016571:	add    BYTE PTR [rax+rax*1+0x43],ch
   140016575:	add    BYTE PTR [rdi+0x0],ch
   140016578:	jo     0x14001657a
   14001657a:	jns    0x14001657c
   14001657c:	jb     0x14001657e
   14001657e:	imul   eax,DWORD PTR [rax],0x680067
   140016584:	je     0x140016586
   140016586:	add    BYTE PTR [rax],al
   140016588:	test   eax,0x4d002000
   14001658d:	add    BYTE PTR [rcx+0x0],ch
   140016590:	movsxd eax,DWORD PTR [rax]
   140016592:	jb     0x140016594
   140016594:	outs   dx,DWORD PTR ds:[rsi]
   140016595:	add    BYTE PTR [rbx+0x0],dh
   140016598:	outs   dx,DWORD PTR ds:[rsi]
   140016599:	add    BYTE PTR [rsi+0x0],ah
   14001659c:	je     0x14001659e
   14001659e:	and    BYTE PTR [rax],al
   1400165a0:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400165a4:	jb     0x1400165a6
   1400165a6:	jo     0x1400165a8
   1400165a8:	outs   dx,DWORD PTR ds:[rsi]
   1400165a9:	add    BYTE PTR [rdx+0x0],dh
   1400165ac:	(bad)  
   1400165ad:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400165b1:	add    BYTE PTR [rdi+0x0],ch
   1400165b4:	outs   dx,BYTE PTR ds:[rsi]
   1400165b5:	add    BYTE PTR [rsi],ch
   1400165b7:	add    BYTE PTR [rax],ah
   1400165b9:	add    BYTE PTR [rcx+0x0],al
   1400165bc:	ins    BYTE PTR es:[rdi],dx
   1400165bd:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400165c1:	add    BYTE PTR [rdx+0x0],dh
   1400165c4:	imul   eax,DWORD PTR [rax],0x680067
   1400165ca:	je     0x1400165cc
   1400165cc:	jae    0x1400165ce
   1400165ce:	and    BYTE PTR [rax],al
   1400165d0:	jb     0x1400165d2
   1400165d2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400165d6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400165da:	jbe    0x1400165dc
   1400165dc:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400165e1:	add    BYTE PTR [rax],al
   1400165e3:	add    BYTE PTR [rdx+0x0],al
   1400165e6:	or     eax,0x4f000100
   1400165eb:	add    BYTE PTR [rdx+0x0],dh
   1400165ee:	imul   eax,DWORD PTR [rax],0x690067
   1400165f4:	outs   dx,BYTE PTR ds:[rsi]
   1400165f5:	add    BYTE PTR [rcx+0x0],ah
   1400165f8:	ins    BYTE PTR es:[rdi],dx
   1400165f9:	add    BYTE PTR [rsi+0x0],al
   1400165fc:	imul   eax,DWORD PTR [rax],0x65006c
   140016602:	outs   dx,BYTE PTR ds:[rsi]
   140016603:	add    BYTE PTR [rcx+0x0],ah
   140016606:	ins    DWORD PTR es:[rdi],dx
   140016607:	add    BYTE PTR [rbp+0x0],ah
   14001660a:	add    BYTE PTR [rax],al
   14001660c:	jae    0x14001660e
   14001660e:	js     0x140016610
   140016610:	jae    0x140016612
   140016612:	je     0x140016614
   140016614:	jb     0x140016616
   140016616:	(bad)  
   140016617:	add    BYTE PTR [rbx+0x0],ah
   14001661a:	add    BYTE PTR gs:[rsi],ch
   14001661d:	add    BYTE PTR [rbp+0x0],ah
   140016620:	js     0x140016622
   140016622:	add    BYTE PTR gs:[rax],al
   140016625:	add    BYTE PTR [rax],al
   140016627:	add    BYTE PTR [rdx+0x0],ch
   14001662a:	and    eax,0x50000100
   14001662f:	add    BYTE PTR [rdx+0x0],dh
   140016632:	outs   dx,DWORD PTR ds:[rsi]
   140016633:	add    BYTE PTR [rax+rax*1+0x75],ah
   140016637:	add    BYTE PTR [rbx+0x0],ah
   14001663a:	je     0x14001663c
   14001663c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140016640:	ins    DWORD PTR es:[rdi],dx
   140016641:	add    BYTE PTR [rbp+0x0],ah
   140016644:	add    BYTE PTR [rax],al
   140016646:	add    BYTE PTR [rax],al
   140016648:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001664c:	movsxd eax,DWORD PTR [rax]
   14001664e:	jb     0x140016650
   140016650:	outs   dx,DWORD PTR ds:[rsi]
   140016651:	add    BYTE PTR [rbx+0x0],dh
   140016654:	outs   dx,DWORD PTR ds:[rsi]
   140016655:	add    BYTE PTR [rsi+0x0],ah
   140016658:	je     0x14001665a
   14001665a:	scas   al,BYTE PTR es:[rdi]
   14001665b:	add    BYTE PTR [rax],ah
   14001665d:	add    BYTE PTR [rdi+0x0],dl
   140016660:	imul   eax,DWORD PTR [rax],0x64006e
   140016666:	outs   dx,DWORD PTR ds:[rsi]
   140016667:	add    BYTE PTR [rdi+0x0],dh
   14001666a:	jae    0x14001666c
   14001666c:	scas   al,BYTE PTR es:[rdi]
   14001666d:	add    BYTE PTR [rax],ah
   14001666f:	add    BYTE PTR [rdi+0x0],cl
   140016672:	jo     0x140016674
   140016674:	add    BYTE PTR gs:[rdx+0x0],dh
   140016678:	(bad)  
   140016679:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001667d:	add    BYTE PTR [rsi+0x0],ch
   140016680:	add    BYTE PTR [eax],ah
   140016683:	add    BYTE PTR [rbx+0x0],dl
   140016686:	jns    0x140016688
   140016688:	jae    0x14001668a
   14001668a:	je     0x14001668c
   14001668c:	add    BYTE PTR gs:[rbp+0x0],ch
   140016690:	add    BYTE PTR [rax],al
   140016692:	add    BYTE PTR [rax],al
   140016694:	rex.RX add BYTE PTR [rcx],r10b
   140016697:	add    BYTE PTR [rcx],al
   140016699:	add    BYTE PTR [rax+0x0],dl
   14001669c:	jb     0x14001669e
   14001669e:	outs   dx,DWORD PTR ds:[rsi]
   14001669f:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400166a3:	add    BYTE PTR [rbx+0x0],ah
   1400166a6:	je     0x1400166a8
   1400166a8:	push   rsi
   1400166a9:	add    BYTE PTR [rbp+0x0],ah
   1400166ac:	jb     0x1400166ae
   1400166ae:	jae    0x1400166b0
   1400166b0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400166b6:	add    BYTE PTR [rax],al
   1400166b8:	xor    DWORD PTR [rax],eax
   1400166ba:	xor    BYTE PTR [rax],al
   1400166bc:	add    BYTE PTR cs:[rax],dh
   1400166bf:	add    BYTE PTR [rsi],ch
   1400166c1:	add    BYTE PTR [rcx],dh
   1400166c3:	add    BYTE PTR [rax],dh
   1400166c5:	add    BYTE PTR [rdx],dh
   1400166c7:	add    BYTE PTR [rax+rax*1],dh
   1400166ca:	xor    BYTE PTR [rax],al
   1400166cc:	add    BYTE PTR cs:[rcx],dh
   1400166cf:	add    BYTE PTR [rsi],dh
   1400166d1:	add    BYTE PTR [rbx],dh
   1400166d3:	add    BYTE PTR [rax],bh
   1400166d5:	add    BYTE PTR [rax+rax*1],dh
   1400166d8:	add    BYTE PTR [rax],al
   1400166da:	add    BYTE PTR [rax],al
   1400166dc:	add    BYTE PTR [rax],r8b
   1400166df:	add    BYTE PTR [rcx],al
   1400166e1:	add    BYTE PTR [rsi+0x0],dl
   1400166e4:	(bad)  
   1400166e5:	add    BYTE PTR [rdx+0x0],dh
   1400166e8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400166ec:	ins    BYTE PTR es:[rdi],dx
   1400166ed:	add    BYTE PTR [rbp+0x0],ah
   1400166f0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400166f4:	data16 add BYTE PTR [rdi+0x0],ch
   1400166f8:	add    BYTE PTR [rax],al
   1400166fa:	add    BYTE PTR [rax],al
   1400166fc:	and    al,0x0
   1400166fe:	add    al,0x0
   140016700:	add    BYTE PTR [rax],al
   140016702:	push   rsp
   140016703:	add    BYTE PTR [rdx+0x0],dh
   140016706:	(bad)  
   140016707:	add    BYTE PTR [rsi+0x0],ch
   14001670a:	jae    0x14001670c
   14001670c:	ins    BYTE PTR es:[rdi],dx
   14001670d:	add    BYTE PTR [rcx+0x0],ah
   140016710:	je     0x140016712
   140016712:	imul   eax,DWORD PTR [rax],0x6e006f
   140016718:	add    BYTE PTR [rax],al
   14001671a:	add    BYTE PTR [rax],al
   14001671c:	or     DWORD PTR [rax+rsi*4],eax
   14001671f:	add    al,0xcd
   140016721:	dec    ch
   140016723:	dec    al
   140016725:	add    BYTE PTR [rax],al
   140016727:	add    BYTE PTR [rax],al
   140016729:	add    BYTE PTR [rcx],al
   14001672b:	add    BYTE PTR [rax],al
   14001672d:	add    BYTE PTR [rax],al
   14001672f:	add    BYTE PTR [rcx],dl
   140016731:	add    BYTE PTR [rax],al
   140016733:	add    BYTE PTR [rax],al
   140016735:	add    BYTE PTR [rax],al
   140016737:	add    BYTE PTR [rdx],al
   140016739:	add    BYTE PTR [rax],al
   14001673b:	add    bl,bl
   14001673d:	sbb    eax,0xa6ee298c
   140016742:	fsub   st(2),st
   140016744:	(bad)  
   140016746:	mov    WORD PTR [rsi-0x7cca3f43],?
   14001674c:	lods   eax,DWORD PTR ds:[rsi]
   14001674d:	outs   dx,BYTE PTR ds:[rsi]
   14001674e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001674f:	(bad)  
   140016750:	rex.WB popf 
   140016752:	adc    DWORD PTR [rdi+rcx*4-0x55],esi
   140016756:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016757:	test   DWORD PTR [rbx],ebx
   140016759:	mov    bh,0xe0
   14001675b:	pop    rcx
	...
   140016774:	mov    BYTE PTR [rax],al
   140016776:	add    BYTE PTR [rax],al
   140016778:	(bad)  
   140016779:	add    BYTE PTR [rax],al
   14001677b:	add    BYTE PTR [rax+0x8000000],bl
   140016781:	add    BYTE PTR [rax],al
   140016783:	add    BYTE PTR [rax+0xe000000],ah
   140016789:	add    BYTE PTR [rax],al
   14001678b:	add    BYTE PTR [rax+0x8000000],dh
	...
   140016799:	add    BYTE PTR [rax],al
   14001679b:	add    BYTE PTR [rax+0xc000000],bh
   1400167a1:	add    BYTE PTR [rax],al
   1400167a3:	add    BYTE PTR [rax],al
   1400167a5:	add    BYTE PTR [rax],al
   1400167a7:	add    BYTE PTR [rbp+0x0],cl
   1400167aa:	push   rbp
   1400167ab:	add    BYTE PTR [rcx+0x0],cl
	...
   1400167b6:	add    BYTE PTR [rax],al
   1400167b8:	adc    BYTE PTR [rax],al
   1400167ba:	add    BYTE PTR [rax],al
   1400167bc:	sbb    BYTE PTR [rax],al
   1400167be:	add    BYTE PTR [rax],al
   1400167c0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400167c4:	rex.WB add BYTE PTR [r8],al
	...
   1400167cf:	add    BYTE PTR [rsi],al
   1400167d1:	add    BYTE PTR [rax],al
   1400167d3:	add    BYTE PTR [rax],dl
   1400167d5:	add    BYTE PTR [rax],al
   1400167d7:	add    BYTE PTR [rbp+0x0],ah
   1400167da:	outs   dx,BYTE PTR ds:[rsi]
   1400167db:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301bce1
   1400167e1:	add    BYTE PTR [rax],al
   1400167e3:	add    BYTE PTR [rax],al
   1400167e5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140017000 <.reloc>:
   140017000:	add    BYTE PTR [rax+0x0],dh
   140017003:	add    BYTE PTR [rax],bh
   140017005:	add    BYTE PTR [rax],al
   140017007:	add    BYTE PTR [rax-0x5e],dl
   14001700a:	pop    rax
   14001700b:	movabs ds:0xa390a288a280a268,al
   140017014:	cwde   
   140017015:	movabs ds:0xa3e0a3d8a3d0a3a0,eax
   14001701e:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140017024:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14001702a:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001702c:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001702e:	push   rax
   14001702f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017030:	test   al,0xad
   140017032:	shr    BYTE PTR [rbp-0x522f5238],0x0
   140017039:	movabs al,ds:0xa030000000140000
   140017042:	pop    rax
   140017043:	movabs al,ds:0xa0c8a0a0a078
