
65293714661fb07c84040ccf481e8472ed6665e881e33dab299b6392cabc9dd2.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x8b19]        # 0x140009b20
   140001007:	jmp    0x140009168
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x8ae9]        # 0x140009b00
   140001017:	jmp    0x140009168
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x8ab9]        # 0x140009ae0
   140001027:	jmp    0x140009168
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	lea    rcx,[rip+0x8b09]        # 0x140009b40
   140001037:	jmp    0x140009168
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	lea    rcx,[rip+0x8b59]        # 0x140009ba0
   140001047:	jmp    0x140009168
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	lea    rcx,[rip+0x8b69]        # 0x140009bc0
   140001057:	jmp    0x140009168
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	int3   
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	rex push rbx
   140001072:	sub    rsp,0x20
   140001076:	lea    rax,[rip+0xa9fb]        # 0x14000ba78
   14000107d:	mov    rbx,rcx
   140001080:	mov    QWORD PTR [rcx],rax
   140001083:	test   dl,0x1
   140001086:	je     0x14000108e
   140001088:	call   QWORD PTR [rip+0x92fa]        # 0x14000a388
   14000108e:	mov    rax,rbx
   140001091:	add    rsp,0x20
   140001095:	pop    rbx
   140001096:	ret    
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	mov    DWORD PTR [rdx],r8d
   1400010a3:	mov    rax,rdx
   1400010a6:	mov    QWORD PTR [rdx+0x8],rcx
   1400010aa:	ret    
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	int3   
   1400010b1:	int3   
   1400010b2:	int3   
   1400010b3:	int3   
   1400010b4:	int3   
   1400010b5:	int3   
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400010ca:	mov    QWORD PTR [rsp+0x18],rdi
   1400010cf:	push   r14
   1400010d1:	sub    rsp,0x30
   1400010d5:	mov    rax,QWORD PTR [rcx]
   1400010d8:	mov    rsi,rcx
   1400010db:	mov    r14,r8
   1400010de:	mov    edi,edx
   1400010e0:	mov    rbx,QWORD PTR [rax+0x18]
   1400010e4:	mov    rcx,rbx
   1400010e7:	call   QWORD PTR [rip+0x940b]        # 0x14000a4f8
   1400010ed:	mov    r8d,edi
   1400010f0:	lea    rdx,[rsp+0x20]
   1400010f5:	mov    rcx,rsi
   1400010f8:	call   rbx
   1400010fa:	mov    rcx,QWORD PTR [r14+0x8]
   1400010fe:	cmp    QWORD PTR [rax+0x8],rcx
   140001102:	jne    0x140001112
   140001104:	mov    ecx,DWORD PTR [r14]
   140001107:	cmp    DWORD PTR [rax],ecx
   140001109:	jne    0x140001112
   14000110b:	mov    eax,0x1
   140001110:	jmp    0x140001114
   140001112:	xor    eax,eax
   140001114:	mov    rbx,QWORD PTR [rsp+0x40]
   140001119:	mov    rsi,QWORD PTR [rsp+0x48]
   14000111e:	mov    rdi,QWORD PTR [rsp+0x50]
   140001123:	add    rsp,0x30
   140001127:	pop    r14
   140001129:	ret    
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	cmp    rcx,QWORD PTR [rdx+0x8]
   140001134:	jne    0x140001141
   140001136:	cmp    DWORD PTR [rdx],r8d
   140001139:	jne    0x140001141
   14000113b:	mov    eax,0x1
   140001140:	ret    
   140001141:	xor    eax,eax
   140001143:	ret    
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	lea    rax,[rip+0xa821]        # 0x14000b978
   140001157:	ret    
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    QWORD PTR [rsp+0x8],rbx
   140001165:	push   rdi
   140001166:	sub    rsp,0x30
   14000116a:	xor    ebx,ebx
   14000116c:	mov    ecx,r8d
   14000116f:	mov    DWORD PTR [rsp+0x20],ebx
   140001173:	mov    rdi,rdx
   140001176:	call   0x140008a5c
   14000117b:	test   rax,rax
   14000117e:	mov    QWORD PTR [rdi+0x18],0xf
   140001186:	mov    QWORD PTR [rdi+0x10],rbx
   14000118a:	lea    rdx,[rip+0xa7ef]        # 0x14000b980
   140001191:	cmovne rdx,rax
   140001195:	mov    BYTE PTR [rdi],bl
   140001197:	cmp    BYTE PTR [rdx],bl
   140001199:	je     0x1400011aa
   14000119b:	or     rax,0xffffffffffffffff
   14000119f:	inc    rax
   1400011a2:	cmp    BYTE PTR [rdx+rax*1],bl
   1400011a5:	jne    0x14000119f
   1400011a7:	mov    rbx,rax
   1400011aa:	mov    r8,rbx
   1400011ad:	mov    rcx,rdi
   1400011b0:	call   0x140001358
   1400011b5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400011ba:	mov    rax,rdi
   1400011bd:	add    rsp,0x30
   1400011c1:	pop    rdi
   1400011c2:	ret    
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	lea    rax,[rip+0xa7b9]        # 0x14000b990
   1400011d7:	ret    
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	rex push rbx
   1400011e2:	sub    rsp,0x30
   1400011e6:	xor    eax,eax
   1400011e8:	mov    rbx,rdx
   1400011eb:	mov    DWORD PTR [rsp+0x20],eax
   1400011ef:	cmp    r8d,0x1
   1400011f3:	jne    0x140001218
   1400011f5:	mov    QWORD PTR [rdx+0x18],0xf
   1400011fd:	lea    r8d,[rax+0x15]
   140001201:	mov    QWORD PTR [rdx+0x10],rax
   140001205:	mov    rcx,rbx
   140001208:	mov    BYTE PTR [rdx],al
   14000120a:	lea    rdx,[rip+0xa78f]        # 0x14000b9a0
   140001211:	call   0x140001358
   140001216:	jmp    0x14000121d
   140001218:	call   0x140001160
   14000121d:	mov    rax,rbx
   140001220:	add    rsp,0x30
   140001224:	pop    rbx
   140001225:	ret    
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	lea    rax,[rip+0xa781]        # 0x14000b9b8
   140001237:	ret    
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	mov    QWORD PTR [rsp+0x8],rbx
   140001245:	push   rdi
   140001246:	sub    rsp,0x30
   14000124a:	xor    ebx,ebx
   14000124c:	mov    ecx,r8d
   14000124f:	mov    DWORD PTR [rsp+0x20],ebx
   140001253:	mov    rdi,rdx
   140001256:	call   0x140008a8c
   14000125b:	test   rax,rax
   14000125e:	mov    QWORD PTR [rdi+0x18],0xf
   140001266:	mov    QWORD PTR [rdi+0x10],rbx
   14000126a:	lea    rdx,[rip+0xa70f]        # 0x14000b980
   140001271:	cmovne rdx,rax
   140001275:	mov    BYTE PTR [rdi],bl
   140001277:	cmp    BYTE PTR [rdx],bl
   140001279:	je     0x14000128a
   14000127b:	or     rax,0xffffffffffffffff
   14000127f:	inc    rax
   140001282:	cmp    BYTE PTR [rdx+rax*1],bl
   140001285:	jne    0x14000127f
   140001287:	mov    rbx,rax
   14000128a:	mov    r8,rbx
   14000128d:	mov    rcx,rdi
   140001290:	call   0x140001358
   140001295:	mov    rbx,QWORD PTR [rsp+0x40]
   14000129a:	mov    rax,rdi
   14000129d:	add    rsp,0x30
   1400012a1:	pop    rdi
   1400012a2:	ret    
   1400012a3:	int3   
   1400012a4:	int3   
   1400012a5:	int3   
   1400012a6:	int3   
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400012b5:	push   rdi
   1400012b6:	sub    rsp,0x20
   1400012ba:	mov    ecx,r8d
   1400012bd:	mov    edi,r8d
   1400012c0:	mov    rbx,rdx
   1400012c3:	call   0x140008a5c
   1400012c8:	test   rax,rax
   1400012cb:	mov    DWORD PTR [rbx],edi
   1400012cd:	lea    rax,[rip+0xe06c]        # 0x14000f340
   1400012d4:	jne    0x1400012dd
   1400012d6:	lea    rax,[rip+0xe053]        # 0x14000f330
   1400012dd:	mov    QWORD PTR [rbx+0x8],rax
   1400012e1:	mov    rax,rbx
   1400012e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012e9:	add    rsp,0x20
   1400012ed:	pop    rdi
   1400012ee:	ret    
   1400012ef:	int3   
   1400012f0:	int3   
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400012fd:	mov    QWORD PTR [rsp+0x10],rsi
   140001302:	push   rdi
   140001303:	sub    rsp,0x20
   140001307:	mov    rdi,r8
   14000130a:	mov    rbx,rcx
   14000130d:	test   dl,dl
   14000130f:	je     0x140001331
   140001311:	cmp    QWORD PTR [rcx+0x18],0x10
   140001316:	jb     0x140001331
   140001318:	mov    rsi,QWORD PTR [rcx]
   14000131b:	test   r8,r8
   14000131e:	je     0x140001328
   140001320:	mov    rdx,rsi
   140001323:	call   0x14000947e
   140001328:	mov    rcx,rsi
   14000132b:	call   QWORD PTR [rip+0x9057]        # 0x14000a388
   140001331:	mov    rsi,QWORD PTR [rsp+0x38]
   140001336:	mov    QWORD PTR [rbx+0x18],0xf
   14000133e:	mov    QWORD PTR [rbx+0x10],rdi
   140001342:	mov    BYTE PTR [rdi+rbx*1],0x0
   140001346:	mov    rbx,QWORD PTR [rsp+0x30]
   14000134b:	add    rsp,0x20
   14000134f:	pop    rdi
   140001350:	ret    
   140001351:	int3   
   140001352:	int3   
   140001353:	int3   
   140001354:	int3   
   140001355:	int3   
   140001356:	int3   
   140001357:	int3   
   140001358:	mov    QWORD PTR [rsp+0x8],rbx
   14000135d:	mov    QWORD PTR [rsp+0x10],rsi
   140001362:	push   rdi
   140001363:	sub    rsp,0x20
   140001367:	mov    rdi,r8
   14000136a:	mov    rsi,rdx
   14000136d:	mov    rbx,rcx
   140001370:	test   rdx,rdx
   140001373:	je     0x1400013c1
   140001375:	cmp    QWORD PTR [rcx+0x18],0x10
   14000137a:	jb     0x140001381
   14000137c:	mov    rax,QWORD PTR [rcx]
   14000137f:	jmp    0x140001384
   140001381:	mov    rax,rcx
   140001384:	cmp    rdx,rax
   140001387:	jb     0x1400013c1
   140001389:	cmp    QWORD PTR [rcx+0x18],0x10
   14000138e:	jb     0x140001393
   140001390:	mov    rcx,QWORD PTR [rcx]
   140001393:	add    rcx,QWORD PTR [rbx+0x10]
   140001397:	cmp    rcx,rdx
   14000139a:	jbe    0x1400013c1
   14000139c:	cmp    QWORD PTR [rbx+0x18],0x10
   1400013a1:	jb     0x1400013a8
   1400013a3:	mov    rax,QWORD PTR [rbx]
   1400013a6:	jmp    0x1400013ab
   1400013a8:	mov    rax,rbx
   1400013ab:	sub    rsi,rax
   1400013ae:	mov    r9,r8
   1400013b1:	mov    r8,rsi
   1400013b4:	mov    rdx,rbx
   1400013b7:	mov    rcx,rbx
   1400013ba:	call   0x140001474
   1400013bf:	jmp    0x14000143b
   1400013c1:	cmp    r8,0xfffffffffffffffe
   1400013c5:	ja     0x14000144b
   1400013cb:	cmp    QWORD PTR [rbx+0x18],r8
   1400013cf:	jae    0x1400013e2
   1400013d1:	mov    r8,QWORD PTR [rbx+0x10]
   1400013d5:	mov    rdx,rdi
   1400013d8:	mov    rcx,rbx
   1400013db:	call   0x14000163c
   1400013e0:	jmp    0x1400013fd
   1400013e2:	test   r8,r8
   1400013e5:	jne    0x1400013fd
   1400013e7:	and    QWORD PTR [rbx+0x10],r8
   1400013eb:	cmp    QWORD PTR [rbx+0x18],0x10
   1400013f0:	jb     0x1400013f7
   1400013f2:	mov    rax,QWORD PTR [rbx]
   1400013f5:	jmp    0x1400013fa
   1400013f7:	mov    rax,rbx
   1400013fa:	mov    BYTE PTR [rax],0x0
   1400013fd:	test   rdi,rdi
   140001400:	je     0x140001438
   140001402:	cmp    QWORD PTR [rbx+0x18],0x10
   140001407:	jb     0x14000140e
   140001409:	mov    rcx,QWORD PTR [rbx]
   14000140c:	jmp    0x140001411
   14000140e:	mov    rcx,rbx
   140001411:	test   rdi,rdi
   140001414:	je     0x140001421
   140001416:	mov    r8,rdi
   140001419:	mov    rdx,rsi
   14000141c:	call   0x14000947e
   140001421:	cmp    QWORD PTR [rbx+0x18],0x10
   140001426:	mov    QWORD PTR [rbx+0x10],rdi
   14000142a:	jb     0x140001431
   14000142c:	mov    rax,QWORD PTR [rbx]
   14000142f:	jmp    0x140001434
   140001431:	mov    rax,rbx
   140001434:	mov    BYTE PTR [rax+rdi*1],0x0
   140001438:	mov    rax,rbx
   14000143b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001440:	mov    rsi,QWORD PTR [rsp+0x38]
   140001445:	add    rsp,0x20
   140001449:	pop    rdi
   14000144a:	ret    
   14000144b:	mov    rcx,rbx
   14000144e:	call   0x140001588
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	sub    rsp,0x28
   140001460:	lea    rcx,[rip+0xa559]        # 0x14000b9c0
   140001467:	call   0x140008c7c
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	int3   
   140001471:	int3   
   140001472:	int3   
   140001473:	int3   
   140001474:	mov    QWORD PTR [rsp+0x8],rbx
   140001479:	mov    QWORD PTR [rsp+0x10],rbp
   14000147e:	mov    QWORD PTR [rsp+0x18],rsi
   140001483:	push   rdi
   140001484:	sub    rsp,0x20
   140001488:	mov    rdi,QWORD PTR [rdx+0x10]
   14000148c:	mov    rbp,r8
   14000148f:	mov    rsi,rdx
   140001492:	mov    rbx,rcx
   140001495:	cmp    rdi,r8
   140001498:	jb     0x140001570
   14000149e:	sub    rdi,r8
   1400014a1:	cmp    r9,rdi
   1400014a4:	cmovb  rdi,r9
   1400014a8:	cmp    rcx,rdx
   1400014ab:	jne    0x1400014d9
   1400014ad:	lea    rax,[rdi+r8*1]
   1400014b1:	cmp    QWORD PTR [rcx+0x10],rax
   1400014b5:	jb     0x140001576
   1400014bb:	cmp    QWORD PTR [rcx+0x18],0x10
   1400014c0:	mov    QWORD PTR [rcx+0x10],rax
   1400014c4:	jb     0x1400014c9
   1400014c6:	mov    rcx,QWORD PTR [rcx]
   1400014c9:	mov    BYTE PTR [rcx+rax*1],0x0
   1400014cd:	xor    edx,edx
   1400014cf:	mov    rcx,rbx
   1400014d2:	call   0x1400015a0
   1400014d7:	jmp    0x140001558
   1400014d9:	cmp    rdi,0xfffffffffffffffe
   1400014dd:	ja     0x14000157c
   1400014e3:	cmp    QWORD PTR [rcx+0x18],rdi
   1400014e7:	jae    0x1400014f7
   1400014e9:	mov    r8,QWORD PTR [rcx+0x10]
   1400014ed:	mov    rdx,rdi
   1400014f0:	call   0x14000163c
   1400014f5:	jmp    0x140001512
   1400014f7:	test   rdi,rdi
   1400014fa:	jne    0x140001517
   1400014fc:	and    QWORD PTR [rcx+0x10],rdi
   140001500:	cmp    QWORD PTR [rcx+0x18],0x10
   140001505:	jb     0x14000150c
   140001507:	mov    rax,QWORD PTR [rcx]
   14000150a:	jmp    0x14000150f
   14000150c:	mov    rax,rcx
   14000150f:	mov    BYTE PTR [rax],0x0
   140001512:	test   rdi,rdi
   140001515:	je     0x140001558
   140001517:	cmp    QWORD PTR [rsi+0x18],0x10
   14000151c:	jb     0x140001521
   14000151e:	mov    rsi,QWORD PTR [rsi]
   140001521:	cmp    QWORD PTR [rbx+0x18],0x10
   140001526:	jb     0x14000152d
   140001528:	mov    rcx,QWORD PTR [rbx]
   14000152b:	jmp    0x140001530
   14000152d:	mov    rcx,rbx
   140001530:	test   rdi,rdi
   140001533:	je     0x140001541
   140001535:	lea    rdx,[rsi+rbp*1]
   140001539:	mov    r8,rdi
   14000153c:	call   0x14000947e
   140001541:	cmp    QWORD PTR [rbx+0x18],0x10
   140001546:	mov    QWORD PTR [rbx+0x10],rdi
   14000154a:	jb     0x140001551
   14000154c:	mov    rax,QWORD PTR [rbx]
   14000154f:	jmp    0x140001554
   140001551:	mov    rax,rbx
   140001554:	mov    BYTE PTR [rax+rdi*1],0x0
   140001558:	mov    rbp,QWORD PTR [rsp+0x38]
   14000155d:	mov    rax,rbx
   140001560:	mov    rbx,QWORD PTR [rsp+0x30]
   140001565:	mov    rsi,QWORD PTR [rsp+0x40]
   14000156a:	add    rsp,0x20
   14000156e:	pop    rdi
   14000156f:	ret    
   140001570:	call   0x14000145c
   140001575:	int3   
   140001576:	call   0x14000145c
   14000157b:	int3   
   14000157c:	call   0x140001588
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	sub    rsp,0x28
   14000158c:	lea    rcx,[rip+0xa445]        # 0x14000b9d8
   140001593:	call   0x140008c50
   140001598:	int3   
   140001599:	int3   
   14000159a:	int3   
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015a5:	push   rdi
   1400015a6:	sub    rsp,0x20
   1400015aa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400015ae:	mov    rbx,rcx
   1400015b1:	cmp    rdi,rdx
   1400015b4:	jb     0x14000162f
   1400015b6:	mov    rax,rdi
   1400015b9:	sub    rax,rdx
   1400015bc:	cmp    rax,r8
   1400015bf:	ja     0x1400015da
   1400015c1:	cmp    QWORD PTR [rcx+0x18],0x10
   1400015c6:	mov    QWORD PTR [rcx+0x10],rdx
   1400015ca:	jb     0x1400015d1
   1400015cc:	mov    rax,QWORD PTR [rcx]
   1400015cf:	jmp    0x1400015d4
   1400015d1:	mov    rax,rcx
   1400015d4:	mov    BYTE PTR [rax+rdx*1],0x0
   1400015d8:	jmp    0x140001621
   1400015da:	test   r8,r8
   1400015dd:	je     0x140001621
   1400015df:	cmp    QWORD PTR [rcx+0x18],0x10
   1400015e4:	jb     0x1400015eb
   1400015e6:	mov    rax,QWORD PTR [rcx]
   1400015e9:	jmp    0x1400015ee
   1400015eb:	mov    rax,rcx
   1400015ee:	sub    rdi,r8
   1400015f1:	lea    rcx,[rax+rdx*1]
   1400015f5:	mov    rax,rdi
   1400015f8:	sub    rax,rdx
   1400015fb:	je     0x14000160a
   1400015fd:	lea    rdx,[rcx+r8*1]
   140001601:	mov    r8,rax
   140001604:	call   QWORD PTR [rip+0x8db6]        # 0x14000a3c0
   14000160a:	cmp    QWORD PTR [rbx+0x18],0x10
   14000160f:	mov    QWORD PTR [rbx+0x10],rdi
   140001613:	jb     0x14000161a
   140001615:	mov    rax,QWORD PTR [rbx]
   140001618:	jmp    0x14000161d
   14000161a:	mov    rax,rbx
   14000161d:	mov    BYTE PTR [rax+rdi*1],0x0
   140001621:	mov    rax,rbx
   140001624:	mov    rbx,QWORD PTR [rsp+0x30]
   140001629:	add    rsp,0x20
   14000162d:	pop    rdi
   14000162e:	ret    
   14000162f:	call   0x14000145c
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	mov    rax,rsp
   14000163f:	mov    QWORD PTR [rax+0x18],r8
   140001643:	mov    QWORD PTR [rax+0x10],rdx
   140001647:	mov    QWORD PTR [rax+0x8],rcx
   14000164b:	push   rbx
   14000164c:	push   rsi
   14000164d:	push   rdi
   14000164e:	push   r14
   140001650:	sub    rsp,0x38
   140001654:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000165c:	mov    rsi,r8
   14000165f:	mov    rbx,rcx
   140001662:	mov    rdi,rdx
   140001665:	or     rdi,0xf
   140001669:	mov    r9,0xfffffffffffffffe
   140001670:	cmp    rdi,r9
   140001673:	jbe    0x14000167a
   140001675:	mov    rdi,rdx
   140001678:	jmp    0x1400016ab
   14000167a:	mov    r8,QWORD PTR [rcx+0x18]
   14000167e:	mov    rcx,r8
   140001681:	shr    rcx,1
   140001684:	movabs rax,0xaaaaaaaaaaaaaaab
   14000168e:	mul    rdi
   140001691:	shr    rdx,1
   140001694:	cmp    rcx,rdx
   140001697:	jbe    0x1400016ab
   140001699:	mov    rax,r9
   14000169c:	sub    rax,rcx
   14000169f:	cmp    r8,rax
   1400016a2:	lea    rdi,[rcx+r8*1]
   1400016a6:	jbe    0x1400016ab
   1400016a8:	mov    rdi,r9
   1400016ab:	lea    rcx,[rdi+0x1]
   1400016af:	xor    r14d,r14d
   1400016b2:	test   rcx,rcx
   1400016b5:	je     0x1400016d0
   1400016b7:	cmp    rcx,0xffffffffffffffff
   1400016bb:	ja     0x1400016ca
   1400016bd:	call   0x140008ca8
   1400016c2:	mov    r14,rax
   1400016c5:	test   rax,rax
   1400016c8:	jne    0x1400016d0
   1400016ca:	call   0x140008c28
   1400016cf:	nop
   1400016d0:	jmp    0x1400016e6
   1400016d2:	mov    rbx,QWORD PTR [rsp+0x60]
   1400016d7:	mov    rsi,QWORD PTR [rsp+0x70]
   1400016dc:	mov    rdi,QWORD PTR [rsp+0x68]
   1400016e1:	mov    r14,QWORD PTR [rsp+0x78]
   1400016e6:	test   rsi,rsi
   1400016e9:	je     0x14000170a
   1400016eb:	cmp    QWORD PTR [rbx+0x18],0x10
   1400016f0:	jb     0x1400016f7
   1400016f2:	mov    rdx,QWORD PTR [rbx]
   1400016f5:	jmp    0x1400016fa
   1400016f7:	mov    rdx,rbx
   1400016fa:	test   rsi,rsi
   1400016fd:	je     0x14000170a
   1400016ff:	mov    r8,rsi
   140001702:	mov    rcx,r14
   140001705:	call   0x14000947e
   14000170a:	cmp    QWORD PTR [rbx+0x18],0x10
   14000170f:	jb     0x14000171a
   140001711:	mov    rcx,QWORD PTR [rbx]
   140001714:	call   QWORD PTR [rip+0x8c6e]        # 0x14000a388
   14000171a:	mov    BYTE PTR [rbx],0x0
   14000171d:	mov    QWORD PTR [rbx],r14
   140001720:	mov    QWORD PTR [rbx+0x18],rdi
   140001724:	mov    QWORD PTR [rbx+0x10],rsi
   140001728:	cmp    rdi,0x10
   14000172c:	jb     0x140001731
   14000172e:	mov    rbx,r14
   140001731:	mov    BYTE PTR [rbx+rsi*1],0x0
   140001735:	add    rsp,0x38
   140001739:	pop    r14
   14000173b:	pop    rdi
   14000173c:	pop    rsi
   14000173d:	pop    rbx
   14000173e:	ret    
   14000173f:	int3   
   140001740:	int3   
   140001741:	int3   
   140001742:	int3   
   140001743:	int3   
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	mov    rax,rsp
   14000174b:	mov    QWORD PTR [rax+0x8],rbx
   14000174f:	mov    QWORD PTR [rax+0x10],rsi
   140001753:	mov    QWORD PTR [rax+0x18],rdi
   140001757:	mov    QWORD PTR [rax+0x20],r14
   14000175b:	push   rbp
   14000175c:	lea    rbp,[rax-0x598]
   140001763:	sub    rsp,0x690
   14000176a:	mov    rax,QWORD PTR [rip+0xd897]        # 0x14000f008
   140001771:	xor    rax,rsp
   140001774:	mov    QWORD PTR [rbp+0x580],rax
   14000177b:	mov    eax,DWORD PTR [rip+0xe297]        # 0x14000fa18
   140001781:	xor    esi,esi
   140001783:	lea    r14d,[rsi+0x1]
   140001787:	test   r14b,al
   14000178a:	jne    0x1400017c0
   14000178c:	or     eax,r14d
   14000178f:	mov    DWORD PTR [rsp+0x30],esi
   140001793:	lea    rcx,[rsp+0x30]
   140001798:	mov    DWORD PTR [rip+0xe27a],eax        # 0x14000fa18
   14000179e:	call   0x14000857c
   1400017a3:	test   eax,eax
   1400017a5:	mov    eax,esi
   1400017a7:	je     0x1400017b4
   1400017a9:	cmp    DWORD PTR [rsp+0x30],0x3000
   1400017b1:	setae  al
   1400017b4:	mov    DWORD PTR [rip+0xe25a],eax        # 0x14000fa14
   1400017ba:	mov    eax,DWORD PTR [rip+0xe258]        # 0x14000fa18
   1400017c0:	test   al,0x2
   1400017c2:	jne    0x1400017f8
   1400017c4:	or     eax,0x2
   1400017c7:	mov    DWORD PTR [rsp+0x30],esi
   1400017cb:	lea    rcx,[rsp+0x30]
   1400017d0:	mov    DWORD PTR [rip+0xe242],eax        # 0x14000fa18
   1400017d6:	call   0x14000857c
   1400017db:	test   eax,eax
   1400017dd:	mov    eax,esi
   1400017df:	je     0x1400017ec
   1400017e1:	cmp    DWORD PTR [rsp+0x30],0x2000
   1400017e9:	setb   al
   1400017ec:	mov    DWORD PTR [rip+0xe21e],eax        # 0x14000fa10
   1400017f2:	mov    eax,DWORD PTR [rip+0xe220]        # 0x14000fa18
   1400017f8:	test   al,0x4
   1400017fa:	jne    0x140001810
   1400017fc:	or     eax,0x4
   1400017ff:	mov    DWORD PTR [rip+0xe213],eax        # 0x14000fa18
   140001805:	call   0x1400086b0
   14000180a:	mov    DWORD PTR [rip+0xe1fc],eax        # 0x14000fa0c
   140001810:	mov    QWORD PTR [rsp+0x40],rsi
   140001815:	mov    edi,esi
   140001817:	mov    QWORD PTR [rsp+0x48],rsi
   14000181c:	mov    WORD PTR [rsp+0x50],si
   140001821:	mov    QWORD PTR [rsp+0x38],rsi
   140001826:	mov    DWORD PTR [rsp+0x30],0x200
   14000182e:	call   QWORD PTR [rip+0x886c]        # 0x14000a0a0
   140001834:	lea    r8,[rsp+0x38]
   140001839:	mov    edx,0x8
   14000183e:	mov    rcx,rax
   140001841:	call   QWORD PTR [rip+0x87c1]        # 0x14000a008
   140001847:	test   eax,eax
   140001849:	je     0x1400019d2
   14000184f:	mov    r9d,DWORD PTR [rsp+0x30]
   140001854:	lea    rax,[rsp+0x30]
   140001859:	mov    rcx,QWORD PTR [rsp+0x38]
   14000185e:	lea    r8,[rip+0xe26b]        # 0x14000fad0
   140001865:	mov    edx,r14d
   140001868:	mov    QWORD PTR [rsp+0x20],rax
   14000186d:	call   QWORD PTR [rip+0x87ad]        # 0x14000a020
   140001873:	test   eax,eax
   140001875:	jne    0x14000188d
   140001877:	call   QWORD PTR [rip+0x8953]        # 0x14000a1d0
   14000187d:	mov    rcx,QWORD PTR [rsp+0x38]
   140001882:	call   QWORD PTR [rip+0x8910]        # 0x14000a198
   140001888:	jmp    0x1400019d2
   14000188d:	mov    rcx,QWORD PTR [rsp+0x38]
   140001892:	call   QWORD PTR [rip+0x8900]        # 0x14000a198
   140001898:	mov    rbx,QWORD PTR [rip+0xe231]        # 0x14000fad0
   14000189f:	test   rbx,rbx
   1400018a2:	je     0x1400019d2
   1400018a8:	mov    rcx,rbx
   1400018ab:	call   QWORD PTR [rip+0x877f]        # 0x14000a030
   1400018b1:	test   eax,eax
   1400018b3:	je     0x1400019d2
   1400018b9:	lea    rdx,[rsp+0x48]
   1400018be:	mov    rcx,rbx
   1400018c1:	call   QWORD PTR [rip+0x8781]        # 0x14000a048
   1400018c7:	mov    ebx,0x104
   1400018cc:	test   eax,eax
   1400018ce:	je     0x1400018ed
   1400018d0:	mov    r8,QWORD PTR [rsp+0x48]
   1400018d5:	lea    rcx,[rsp+0x50]
   1400018da:	or     r9,0xffffffffffffffff
   1400018de:	mov    edx,ebx
   1400018e0:	call   QWORD PTR [rip+0x8a92]        # 0x14000a378
   1400018e6:	cmp    eax,0x50
   1400018e9:	cmovne edi,r14d
   1400018ed:	mov    rcx,QWORD PTR [rsp+0x48]
   1400018f2:	test   rcx,rcx
   1400018f5:	je     0x1400018fd
   1400018f7:	call   QWORD PTR [rip+0x88ab]        # 0x14000a1a8
   1400018fd:	test   edi,edi
   1400018ff:	je     0x1400019d2
   140001905:	lea    rax,[rsp+0x50]
   14000190a:	mov    rdx,rbx
   14000190d:	lea    r9,[rsp+0x50]
   140001912:	mov    QWORD PTR [rsp+0x20],rax
   140001917:	lea    r8,[rip+0xa1c2]        # 0x14000bae0
   14000191e:	lea    rcx,[rbp+0x370]
   140001925:	call   0x140001b34
   14000192a:	test   eax,eax
   14000192c:	js     0x1400019d2
   140001932:	cmp    DWORD PTR [rip+0xe120],esi        # 0x14000fa58
   140001938:	jne    0x140001943
   14000193a:	call   0x1400089b4
   14000193f:	test   eax,eax
   140001941:	je     0x140001954
   140001943:	cmp    DWORD PTR [rip+0xe127],esi        # 0x14000fa70
   140001949:	je     0x140001954
   14000194b:	lea    r8,[rip+0xa1fe]        # 0x14000bb50
   140001952:	jmp    0x140001972
   140001954:	cmp    DWORD PTR [rip+0xe0b2],esi        # 0x14000fa0c
   14000195a:	je     0x14000196b
   14000195c:	cmp    DWORD PTR [rip+0xe0ae],esi        # 0x14000fa10
   140001962:	lea    r8,[rip+0xa297]        # 0x14000bc00
   140001969:	jne    0x140001972
   14000196b:	lea    r8,[rip+0xa31e]        # 0x14000bc90
   140001972:	lea    rax,[rsp+0x50]
   140001977:	mov    rdx,rbx
   14000197a:	lea    r9,[rsp+0x50]
   14000197f:	mov    QWORD PTR [rsp+0x20],rax
   140001984:	lea    rcx,[rbp+0x160]
   14000198b:	call   0x140001b34
   140001990:	test   eax,eax
   140001992:	js     0x1400019d2
   140001994:	xor    r9d,r9d
   140001997:	lea    r8,[rsp+0x40]
   14000199c:	mov    edx,r14d
   14000199f:	lea    rcx,[rbp+0x160]
   1400019a6:	call   QWORD PTR [rip+0x8654]        # 0x14000a000
   1400019ac:	test   eax,eax
   1400019ae:	jne    0x1400019d2
   1400019b0:	xor    r9d,r9d
   1400019b3:	lea    r8,[rsp+0x40]
   1400019b8:	mov    edx,r14d
   1400019bb:	lea    rcx,[rbp+0x370]
   1400019c2:	call   QWORD PTR [rip+0x8638]        # 0x14000a000
   1400019c8:	neg    eax
   1400019ca:	sbb    rcx,rcx
   1400019cd:	and    QWORD PTR [rsp+0x40],rcx
   1400019d2:	mov    rax,QWORD PTR [rsp+0x40]
   1400019d7:	mov    rcx,QWORD PTR [rbp+0x580]
   1400019de:	xor    rcx,rsp
   1400019e1:	call   0x1400090a0
   1400019e6:	lea    r11,[rsp+0x690]
   1400019ee:	mov    rbx,QWORD PTR [r11+0x10]
   1400019f2:	mov    rsi,QWORD PTR [r11+0x18]
   1400019f6:	mov    rdi,QWORD PTR [r11+0x20]
   1400019fa:	mov    r14,QWORD PTR [r11+0x28]
   1400019fe:	mov    rsp,r11
   140001a01:	pop    rbp
   140001a02:	ret    
   140001a03:	int3   
   140001a04:	int3   
   140001a05:	int3   
   140001a06:	int3   
   140001a07:	int3   
   140001a08:	int3   
   140001a09:	int3   
   140001a0a:	int3   
   140001a0b:	int3   
   140001a0c:	sub    rsp,0x28
   140001a10:	mov    eax,DWORD PTR [rip+0xdff2]        # 0x14000fa08
   140001a16:	test   al,0x1
   140001a18:	jne    0x140001a79
   140001a1a:	and    QWORD PTR [rip+0xdfde],0x0        # 0x14000fa00
   140001a22:	or     eax,0x1
   140001a25:	mov    DWORD PTR [rip+0xdfdd],eax        # 0x14000fa08
   140001a2b:	xor    eax,eax
   140001a2d:	mov    QWORD PTR [rip+0xdfb4],rax        # 0x14000f9e8
   140001a34:	mov    DWORD PTR [rip+0xdfaa],0x18        # 0x14000f9e8
   140001a3e:	mov    QWORD PTR [rip+0xdfab],rax        # 0x14000f9f0
   140001a45:	mov    QWORD PTR [rip+0xdfac],rax        # 0x14000f9f8
   140001a4c:	call   0x140001748
   140001a51:	and    DWORD PTR [rip+0xdfa0],0x0        # 0x14000f9f8
   140001a58:	lea    rcx,[rip+0x8101]        # 0x140009b60
   140001a5f:	mov    QWORD PTR [rip+0xdf8a],rax        # 0x14000f9f0
   140001a66:	lea    rax,[rip+0xdf7b]        # 0x14000f9e8
   140001a6d:	mov    QWORD PTR [rip+0xdf8c],rax        # 0x14000fa00
   140001a74:	call   0x140009168
   140001a79:	mov    rax,QWORD PTR [rip+0xdf80]        # 0x14000fa00
   140001a80:	add    rsp,0x28
   140001a84:	ret    
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	mov    QWORD PTR [rsp+0x8],rbx
   140001a91:	push   rdi
   140001a92:	sub    rsp,0x40
   140001a96:	mov    rbx,rdx
   140001a99:	mov    rdi,rcx
   140001a9c:	call   0x140001a0c
   140001aa1:	and    QWORD PTR [rsp+0x30],0x0
   140001aa7:	mov    r9,rax
   140001aaa:	mov    DWORD PTR [rsp+0x28],0x80
   140001ab2:	mov    edx,0x80000000
   140001ab7:	mov    r8d,0x1
   140001abd:	mov    DWORD PTR [rsp+0x20],0x3
   140001ac5:	mov    rcx,rbx
   140001ac8:	call   QWORD PTR [rip+0x86c2]        # 0x14000a190
   140001ace:	mov    QWORD PTR [rdi],rax
   140001ad1:	cmp    rax,0xffffffffffffffff
   140001ad5:	jne    0x140001adb
   140001ad7:	xor    eax,eax
   140001ad9:	jmp    0x140001b22
   140001adb:	call   0x140001a0c
   140001ae0:	and    QWORD PTR [rsp+0x28],0x0
   140001ae6:	xor    r9d,r9d
   140001ae9:	mov    rcx,QWORD PTR [rdi]
   140001aec:	mov    rdx,rax
   140001aef:	and    DWORD PTR [rsp+0x20],0x0
   140001af4:	lea    r8d,[r9+0x2]
   140001af8:	call   QWORD PTR [rip+0x868a]        # 0x14000a188
   140001afe:	mov    QWORD PTR [rdi+0x10],rax
   140001b02:	test   rax,rax
   140001b05:	jne    0x140001b16
   140001b07:	mov    rcx,QWORD PTR [rdi]
   140001b0a:	call   QWORD PTR [rip+0x8688]        # 0x14000a198
   140001b10:	and    QWORD PTR [rdi],0x0
   140001b14:	jmp    0x140001ad7
   140001b16:	mov    DWORD PTR [rdi+0x8],0x1
   140001b1d:	mov    eax,0x1
   140001b22:	mov    rbx,QWORD PTR [rsp+0x50]
   140001b27:	add    rsp,0x40
   140001b2b:	pop    rdi
   140001b2c:	ret    
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	int3   
   140001b31:	int3   
   140001b32:	int3   
   140001b33:	int3   
   140001b34:	mov    r11,rsp
   140001b37:	mov    QWORD PTR [r11+0x18],r8
   140001b3b:	mov    QWORD PTR [r11+0x20],r9
   140001b3f:	sub    rsp,0x38
   140001b43:	lea    rax,[r11+0x20]
   140001b47:	mov    r9,r8
   140001b4a:	or     r8,0xffffffffffffffff
   140001b4e:	mov    QWORD PTR [r11-0x18],rax
   140001b52:	call   QWORD PTR [rip+0x8828]        # 0x14000a380
   140001b58:	xor    ecx,ecx
   140001b5a:	mov    edx,0x8007007a
   140001b5f:	cmp    eax,0xffffffff
   140001b62:	cmove  ecx,edx
   140001b65:	mov    eax,ecx
   140001b67:	add    rsp,0x38
   140001b6b:	ret    
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	int3   
   140001b71:	int3   
   140001b72:	int3   
   140001b73:	int3   
   140001b74:	mov    QWORD PTR [rsp+0x10],rbx
   140001b79:	push   rsi
   140001b7a:	sub    rsp,0x150
   140001b81:	mov    rax,QWORD PTR [rip+0xd480]        # 0x14000f008
   140001b88:	xor    rax,rsp
   140001b8b:	mov    QWORD PTR [rsp+0x140],rax
   140001b93:	xor    esi,esi
   140001b95:	mov    rbx,rcx
   140001b98:	mov    QWORD PTR [rcx+0x8],rsi
   140001b9c:	xor    edx,edx
   140001b9e:	mov    QWORD PTR [rcx+0x10],rsi
   140001ba2:	mov    r8d,0x11c
   140001ba8:	mov    QWORD PTR [rcx+0x18],rsi
   140001bac:	mov    QWORD PTR [rcx+0x20],rsi
   140001bb0:	mov    DWORD PTR [rcx+0x28],esi
   140001bb3:	mov    QWORD PTR [rcx+0x30],rsi
   140001bb7:	mov    QWORD PTR [rcx+0x38],rsi
   140001bbb:	mov    WORD PTR [rcx+0x248],si
   140001bc2:	mov    QWORD PTR [rcx+0x24c],rsi
   140001bc9:	mov    QWORD PTR [rcx+0x258],rsi
   140001bd0:	mov    WORD PTR [rcx+0x40],si
   140001bd4:	mov    QWORD PTR [rcx],rsi
   140001bd7:	lea    rcx,[rsp+0x20]
   140001bdc:	call   0x1400098c6
   140001be1:	lea    rcx,[rsp+0x20]
   140001be6:	mov    DWORD PTR [rsp+0x20],0x11c
   140001bee:	call   QWORD PTR [rip+0x8584]        # 0x14000a178
   140001bf4:	test   eax,eax
   140001bf6:	jne    0x140001c0f
   140001bf8:	lea    rcx,[rsp+0x20]
   140001bfd:	mov    DWORD PTR [rsp+0x20],0x114
   140001c05:	call   QWORD PTR [rip+0x856d]        # 0x14000a178
   140001c0b:	test   eax,eax
   140001c0d:	je     0x140001c1c
   140001c0f:	mov    ecx,DWORD PTR [rsp+0x24]
   140001c13:	mov    DWORD PTR [rbx],ecx
   140001c15:	mov    ecx,DWORD PTR [rsp+0x28]
   140001c19:	mov    DWORD PTR [rbx+0x4],ecx
   140001c1c:	mov    rax,rbx
   140001c1f:	mov    rcx,QWORD PTR [rsp+0x140]
   140001c27:	xor    rcx,rsp
   140001c2a:	call   0x1400090a0
   140001c2f:	mov    rbx,QWORD PTR [rsp+0x168]
   140001c37:	add    rsp,0x150
   140001c3e:	pop    rsi
   140001c3f:	ret    
   140001c40:	int3   
   140001c41:	int3   
   140001c42:	int3   
   140001c43:	int3   
   140001c44:	int3   
   140001c45:	int3   
   140001c46:	int3   
   140001c47:	int3   
   140001c48:	mov    rax,rsp
   140001c4b:	mov    QWORD PTR [rax+0x8],rcx
   140001c4f:	push   rbp
   140001c50:	push   rdi
   140001c51:	push   r13
   140001c53:	push   r14
   140001c55:	push   r15
   140001c57:	mov    rbp,rsp
   140001c5a:	sub    rsp,0x60
   140001c5e:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140001c66:	mov    QWORD PTR [rax+0x10],rbx
   140001c6a:	mov    QWORD PTR [rax+0x18],rsi
   140001c6e:	mov    r13,QWORD PTR [rip+0xddbb]        # 0x14000fa30
   140001c75:	lea    rax,[rip+0x9e2c]        # 0x14000baa8
   140001c7c:	mov    QWORD PTR [rbp-0x28],rax
   140001c80:	and    QWORD PTR [rbp-0x20],0x0
   140001c85:	lea    rax,[rip+0x9e1c]        # 0x14000baa8
   140001c8c:	mov    QWORD PTR [rbp-0x18],rax
   140001c90:	and    QWORD PTR [rbp-0x10],0x0
   140001c95:	xor    ecx,ecx
   140001c97:	call   QWORD PTR [rip+0x8843]        # 0x14000a4e0
   140001c9d:	xor    r15d,r15d
   140001ca0:	test   eax,eax
   140001ca2:	setns  r15b
   140001ca6:	mov    rdi,QWORD PTR [rbp-0x10]
   140001caa:	test   rdi,rdi
   140001cad:	je     0x140001cc9
   140001caf:	and    QWORD PTR [rbp-0x10],0x0
   140001cb4:	mov    rax,QWORD PTR [rdi]
   140001cb7:	mov    rbx,QWORD PTR [rax+0x10]
   140001cbb:	mov    rcx,rbx
   140001cbe:	call   QWORD PTR [rip+0x8834]        # 0x14000a4f8
   140001cc4:	mov    rcx,rdi
   140001cc7:	call   rbx
   140001cc9:	lea    rax,[rbp-0x10]
   140001ccd:	mov    QWORD PTR [rsp+0x20],rax
   140001cd2:	lea    r9,[rip+0xa04f]        # 0x14000bd28
   140001cd9:	xor    edx,edx
   140001cdb:	lea    r8d,[rdx+0x1]
   140001cdf:	lea    rcx,[rip+0xa022]        # 0x14000bd08
   140001ce6:	call   QWORD PTR [rip+0x87ec]        # 0x14000a4d8
   140001cec:	mov    r14d,eax
   140001cef:	mov    rdi,QWORD PTR [rbp-0x20]
   140001cf3:	test   eax,eax
   140001cf5:	js     0x140001e5d
   140001cfb:	cmp    QWORD PTR [rbp-0x10],0x0
   140001d00:	je     0x140001e5d
   140001d06:	test   rdi,rdi
   140001d09:	je     0x140001d25
   140001d0b:	and    QWORD PTR [rbp-0x20],0x0
   140001d10:	mov    rax,QWORD PTR [rdi]
   140001d13:	mov    rbx,QWORD PTR [rax+0x10]
   140001d17:	mov    rcx,rbx
   140001d1a:	call   QWORD PTR [rip+0x87d8]        # 0x14000a4f8
   140001d20:	mov    rcx,rdi
   140001d23:	call   rbx
   140001d25:	xor    edi,edi
   140001d27:	mov    QWORD PTR [rbp-0x20],rdi
   140001d2b:	mov    rsi,QWORD PTR [rbp-0x10]
   140001d2f:	test   rsi,rsi
   140001d32:	je     0x140001d5c
   140001d34:	mov    rax,QWORD PTR [rsi]
   140001d37:	mov    rbx,QWORD PTR [rax]
   140001d3a:	mov    rcx,rbx
   140001d3d:	call   QWORD PTR [rip+0x87b5]        # 0x14000a4f8
   140001d43:	lea    r8,[rbp-0x20]
   140001d47:	lea    rdx,[rip+0x9fca]        # 0x14000bd18
   140001d4e:	mov    rcx,rsi
   140001d51:	call   rbx
   140001d53:	mov    r14d,eax
   140001d56:	mov    rdi,QWORD PTR [rbp-0x20]
   140001d5a:	jmp    0x140001d62
   140001d5c:	mov    r14d,0x80004005
   140001d62:	test   r14d,r14d
   140001d65:	js     0x140001e5d
   140001d6b:	test   rdi,rdi
   140001d6e:	je     0x140001e80
   140001d74:	mov    rax,QWORD PTR [rdi]
   140001d77:	mov    rbx,QWORD PTR [rax+0x28]
   140001d7b:	mov    rcx,rbx
   140001d7e:	call   QWORD PTR [rip+0x8774]        # 0x14000a4f8
   140001d84:	mov    esi,0x1
   140001d89:	mov    edx,esi
   140001d8b:	mov    rcx,rdi
   140001d8e:	call   rbx
   140001d90:	mov    r14d,eax
   140001d93:	mov    rdi,QWORD PTR [rbp-0x20]
   140001d97:	test   eax,eax
   140001d99:	js     0x140001e5d
   140001d9f:	test   rdi,rdi
   140001da2:	je     0x140001dca
   140001da4:	mov    rax,QWORD PTR [rdi]
   140001da7:	mov    rbx,QWORD PTR [rax+0x48]
   140001dab:	mov    rcx,rbx
   140001dae:	call   QWORD PTR [rip+0x8744]        # 0x14000a4f8
   140001db4:	mov    r8d,esi
   140001db7:	mov    edx,0x14c
   140001dbc:	mov    rcx,rdi
   140001dbf:	call   rbx
   140001dc1:	mov    r14d,eax
   140001dc4:	mov    rdi,QWORD PTR [rbp-0x20]
   140001dc8:	jmp    0x140001dd0
   140001dca:	mov    r14d,0x80004005
   140001dd0:	test   r14d,r14d
   140001dd3:	js     0x140001e5d
   140001dd9:	mov    esi,0x404
   140001dde:	mov    eax,esi
   140001de0:	mov    DWORD PTR [rbp+0x30],eax
   140001de3:	test   rdi,rdi
   140001de6:	je     0x140001e12
   140001de8:	mov    rax,QWORD PTR [rdi]
   140001deb:	mov    rbx,QWORD PTR [rax+0x18]
   140001def:	mov    rcx,rbx
   140001df2:	call   QWORD PTR [rip+0x8700]        # 0x14000a4f8
   140001df8:	lea    r8,[rbp+0x30]
   140001dfc:	mov    edx,0x159
   140001e01:	mov    rcx,rdi
   140001e04:	call   rbx
   140001e06:	mov    r14d,eax
   140001e09:	mov    rdi,QWORD PTR [rbp-0x20]
   140001e0d:	mov    eax,DWORD PTR [rbp+0x30]
   140001e10:	jmp    0x140001e18
   140001e12:	mov    r14d,0x80004005
   140001e18:	test   r14d,r14d
   140001e1b:	js     0x140001e5d
   140001e1d:	mov    ecx,0xffff
   140001e22:	cmp    cx,ax
   140001e25:	jne    0x140001e55
   140001e27:	call   QWORD PTR [rip+0x8343]        # 0x14000a170
   140001e2d:	movzx  ecx,ax
   140001e30:	sub    cx,si
   140001e33:	mov    edx,0xe7ff
   140001e38:	test   dx,cx
   140001e3b:	jne    0x140001e4c
   140001e3d:	mov    ecx,0x1c04
   140001e42:	cmp    ax,cx
   140001e45:	je     0x140001e4c
   140001e47:	movzx  eax,si
   140001e4a:	jmp    0x140001e51
   140001e4c:	mov    eax,0x409
   140001e51:	mov    rdi,QWORD PTR [rbp-0x20]
   140001e55:	mov    WORD PTR [r13+0x248],ax
   140001e5d:	test   rdi,rdi
   140001e60:	je     0x140001e80
   140001e62:	and    QWORD PTR [rbp-0x20],0x0
   140001e67:	mov    rax,QWORD PTR [rdi]
   140001e6a:	mov    rbx,QWORD PTR [rax+0x10]
   140001e6e:	mov    rcx,rbx
   140001e71:	call   QWORD PTR [rip+0x8681]        # 0x14000a4f8
   140001e77:	mov    rcx,rdi
   140001e7a:	call   rbx
   140001e7c:	mov    rdi,QWORD PTR [rbp-0x20]
   140001e80:	mov    rsi,QWORD PTR [rbp-0x10]
   140001e84:	test   rsi,rsi
   140001e87:	je     0x140001ea7
   140001e89:	and    QWORD PTR [rbp-0x10],0x0
   140001e8e:	mov    rax,QWORD PTR [rsi]
   140001e91:	mov    rbx,QWORD PTR [rax+0x10]
   140001e95:	mov    rcx,rbx
   140001e98:	call   QWORD PTR [rip+0x865a]        # 0x14000a4f8
   140001e9e:	mov    rcx,rsi
   140001ea1:	call   rbx
   140001ea3:	mov    rdi,QWORD PTR [rbp-0x20]
   140001ea7:	test   r15d,r15d
   140001eaa:	je     0x140001eb6
   140001eac:	call   QWORD PTR [rip+0x8636]        # 0x14000a4e8
   140001eb2:	mov    rdi,QWORD PTR [rbp-0x20]
   140001eb6:	lea    rax,[rip+0x9beb]        # 0x14000baa8
   140001ebd:	mov    QWORD PTR [rbp-0x18],rax
   140001ec1:	mov    rsi,QWORD PTR [rbp-0x10]
   140001ec5:	test   rsi,rsi
   140001ec8:	je     0x140001ee8
   140001eca:	and    QWORD PTR [rbp-0x10],0x0
   140001ecf:	mov    rax,QWORD PTR [rsi]
   140001ed2:	mov    rbx,QWORD PTR [rax+0x10]
   140001ed6:	mov    rcx,rbx
   140001ed9:	call   QWORD PTR [rip+0x8619]        # 0x14000a4f8
   140001edf:	mov    rcx,rsi
   140001ee2:	call   rbx
   140001ee4:	mov    rdi,QWORD PTR [rbp-0x20]
   140001ee8:	lea    rax,[rip+0x9bb9]        # 0x14000baa8
   140001eef:	mov    QWORD PTR [rbp-0x28],rax
   140001ef3:	test   rdi,rdi
   140001ef6:	je     0x140001f12
   140001ef8:	and    QWORD PTR [rbp-0x20],0x0
   140001efd:	mov    rax,QWORD PTR [rdi]
   140001f00:	mov    rbx,QWORD PTR [rax+0x10]
   140001f04:	mov    rcx,rbx
   140001f07:	call   QWORD PTR [rip+0x85eb]        # 0x14000a4f8
   140001f0d:	mov    rcx,rdi
   140001f10:	call   rbx
   140001f12:	mov    eax,r14d
   140001f15:	lea    r11,[rsp+0x60]
   140001f1a:	mov    rbx,QWORD PTR [r11+0x38]
   140001f1e:	mov    rsi,QWORD PTR [r11+0x40]
   140001f22:	mov    rsp,r11
   140001f25:	pop    r15
   140001f27:	pop    r14
   140001f29:	pop    r13
   140001f2b:	pop    rdi
   140001f2c:	pop    rbp
   140001f2d:	ret    
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	int3   
   140001f31:	int3   
   140001f32:	int3   
   140001f33:	int3   
   140001f34:	mov    QWORD PTR [rsp+0x8],rbx
   140001f39:	push   rdi
   140001f3a:	sub    rsp,0x20
   140001f3e:	mov    rdi,QWORD PTR [rcx+0x8]
   140001f42:	lea    rax,[rip+0x9b5f]        # 0x14000baa8
   140001f49:	mov    QWORD PTR [rcx],rax
   140001f4c:	test   rdi,rdi
   140001f4f:	je     0x140001f6b
   140001f51:	and    QWORD PTR [rcx+0x8],0x0
   140001f56:	mov    rax,QWORD PTR [rdi]
   140001f59:	mov    rbx,QWORD PTR [rax+0x10]
   140001f5d:	mov    rcx,rbx
   140001f60:	call   QWORD PTR [rip+0x8592]        # 0x14000a4f8
   140001f66:	mov    rcx,rdi
   140001f69:	call   rbx
   140001f6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f70:	add    rsp,0x20
   140001f74:	pop    rdi
   140001f75:	ret    
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    QWORD PTR [rsp+0x8],rbx
   140001f85:	mov    QWORD PTR [rsp+0x10],rbp
   140001f8a:	mov    QWORD PTR [rsp+0x18],rsi
   140001f8f:	push   rdi
   140001f90:	sub    rsp,0x20
   140001f94:	mov    rsi,QWORD PTR [rcx+0x8]
   140001f98:	lea    rax,[rip+0x9b09]        # 0x14000baa8
   140001f9f:	mov    QWORD PTR [rcx],rax
   140001fa2:	mov    ebp,edx
   140001fa4:	mov    rdi,rcx
   140001fa7:	test   rsi,rsi
   140001faa:	je     0x140001fc6
   140001fac:	and    QWORD PTR [rcx+0x8],0x0
   140001fb1:	mov    rax,QWORD PTR [rsi]
   140001fb4:	mov    rbx,QWORD PTR [rax+0x10]
   140001fb8:	mov    rcx,rbx
   140001fbb:	call   QWORD PTR [rip+0x8537]        # 0x14000a4f8
   140001fc1:	mov    rcx,rsi
   140001fc4:	call   rbx
   140001fc6:	test   bpl,0x1
   140001fca:	je     0x140001fd5
   140001fcc:	mov    rcx,rdi
   140001fcf:	call   QWORD PTR [rip+0x83b3]        # 0x14000a388
   140001fd5:	mov    rbx,QWORD PTR [rsp+0x30]
   140001fda:	mov    rax,rdi
   140001fdd:	mov    rbp,QWORD PTR [rsp+0x38]
   140001fe2:	mov    rsi,QWORD PTR [rsp+0x40]
   140001fe7:	add    rsp,0x20
   140001feb:	pop    rdi
   140001fec:	ret    
   140001fed:	int3   
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	int3   
   140001ff1:	int3   
   140001ff2:	int3   
   140001ff3:	int3   
   140001ff4:	int3   
   140001ff5:	int3   
   140001ff6:	int3   
   140001ff7:	int3   
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	rex push rbx
   140002002:	sub    rsp,0x30
   140002006:	mov    rbx,rcx
   140002009:	sub    edx,0x10
   14000200c:	je     0x14000202e
   14000200e:	sub    edx,0x100
   140002014:	je     0x140002083
   140002016:	cmp    edx,0x1
   140002019:	jne    0x140002027
   14000201b:	movzx  ecx,r8w
   14000201f:	sub    ecx,edx
   140002021:	je     0x140002041
   140002023:	cmp    ecx,edx
   140002025:	je     0x14000202b
   140002027:	xor    eax,eax
   140002029:	jmp    0x14000203b
   14000202b:	mov    rcx,rbx
   14000202e:	xor    edx,edx
   140002030:	call   QWORD PTR [rip+0x82c2]        # 0x14000a2f8
   140002036:	mov    eax,0x1
   14000203b:	add    rsp,0x30
   14000203f:	pop    rbx
   140002040:	ret    
   140002041:	and    QWORD PTR [rsp+0x20],0x0
   140002047:	xor    r9d,r9d
   14000204a:	mov    edx,0x3fa
   14000204f:	mov    r8d,0x147
   140002055:	mov    rcx,rbx
   140002058:	call   QWORD PTR [rip+0x82a2]        # 0x14000a300
   14000205e:	and    QWORD PTR [rsp+0x20],0x0
   140002064:	mov    edx,0x3fa
   140002069:	movsxd r9,eax
   14000206c:	mov    r8d,0x150
   140002072:	mov    rcx,rbx
   140002075:	call   QWORD PTR [rip+0x8285]        # 0x14000a300
   14000207b:	movsxd rdx,eax
   14000207e:	mov    rcx,rbx
   140002081:	jmp    0x140002030
   140002083:	mov    rdx,rcx
   140002086:	call   0x140002094
   14000208b:	jmp    0x140002036
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	int3   
   140002091:	int3   
   140002092:	int3   
   140002093:	int3   
   140002094:	mov    QWORD PTR [rsp+0x8],rbx
   140002099:	push   rsi
   14000209a:	sub    rsp,0x30
   14000209e:	mov    rbx,rdx
   1400020a1:	lea    rax,[rip+0x9c90]        # 0x14000bd38
   1400020a8:	mov    esi,0x3fa
   1400020ad:	mov    QWORD PTR [rsp+0x20],rax
   1400020b2:	mov    edx,esi
   1400020b4:	mov    rcx,rbx
   1400020b7:	xor    r9d,r9d
   1400020ba:	mov    r8d,0x143
   1400020c0:	call   QWORD PTR [rip+0x823a]        # 0x14000a300
   1400020c6:	lea    rax,[rip+0x9ca3]        # 0x14000bd70
   1400020cd:	xor    r9d,r9d
   1400020d0:	mov    r8d,0x143
   1400020d6:	mov    QWORD PTR [rsp+0x20],rax
   1400020db:	mov    edx,esi
   1400020dd:	mov    rcx,rbx
   1400020e0:	call   QWORD PTR [rip+0x821a]        # 0x14000a300
   1400020e6:	xor    r9d,r9d
   1400020e9:	mov    QWORD PTR [rsp+0x20],0x3b6
   1400020f2:	mov    r8d,0x151
   1400020f8:	mov    edx,esi
   1400020fa:	mov    rcx,rbx
   1400020fd:	call   QWORD PTR [rip+0x81fd]        # 0x14000a300
   140002103:	mov    r9d,0x1
   140002109:	mov    QWORD PTR [rsp+0x20],0x3a8
   140002112:	mov    r8d,0x151
   140002118:	mov    edx,esi
   14000211a:	mov    rcx,rbx
   14000211d:	call   QWORD PTR [rip+0x81dd]        # 0x14000a300
   140002123:	and    QWORD PTR [rsp+0x20],0x0
   140002129:	xor    r9d,r9d
   14000212c:	mov    r8d,0x14e
   140002132:	mov    edx,esi
   140002134:	mov    rcx,rbx
   140002137:	call   QWORD PTR [rip+0x81c3]        # 0x14000a300
   14000213d:	mov    rbx,QWORD PTR [rsp+0x40]
   140002142:	add    rsp,0x30
   140002146:	pop    rsi
   140002147:	ret    
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	sub    rsp,0x38
   140002154:	mov    rax,QWORD PTR [rip+0xd8d5]        # 0x14000fa30
   14000215b:	mov    QWORD PTR [rsp+0x20],r9
   140002160:	mov    r9,r8
   140002163:	mov    r8d,edx
   140002166:	mov    rdx,rcx
   140002169:	mov    rcx,QWORD PTR [rax+0x10]
   14000216d:	call   0x140003e88
   140002172:	add    rsp,0x38
   140002176:	ret    
   140002177:	int3   
   140002178:	int3   
   140002179:	int3   
   14000217a:	int3   
   14000217b:	int3   
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	sub    rsp,0x38
   140002184:	mov    rax,QWORD PTR [rip+0xd8a5]        # 0x14000fa30
   14000218b:	mov    r8d,edx
   14000218e:	mov    rdx,rcx
   140002191:	mov    QWORD PTR [rsp+0x20],r9
   140002196:	mov    rcx,QWORD PTR [rax+0x10]
   14000219a:	call   0x140005168
   14000219f:	add    rsp,0x38
   1400021a3:	ret    
   1400021a4:	int3   
   1400021a5:	int3   
   1400021a6:	int3   
   1400021a7:	int3   
   1400021a8:	int3   
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	sub    rsp,0x38
   1400021b4:	mov    rax,QWORD PTR [rip+0xd875]        # 0x14000fa30
   1400021bb:	mov    r8d,edx
   1400021be:	mov    rdx,rcx
   1400021c1:	mov    QWORD PTR [rsp+0x20],r9
   1400021c6:	mov    rcx,QWORD PTR [rax+0x10]
   1400021ca:	call   0x140005898
   1400021cf:	add    rsp,0x38
   1400021d3:	ret    
   1400021d4:	int3   
   1400021d5:	int3   
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400021e5:	mov    QWORD PTR [rsp+0x18],rdi
   1400021ea:	push   rbp
   1400021eb:	lea    rbp,[rsp-0x160]
   1400021f3:	sub    rsp,0x260
   1400021fa:	mov    rax,QWORD PTR [rip+0xce07]        # 0x14000f008
   140002201:	xor    rax,rsp
   140002204:	mov    QWORD PTR [rbp+0x150],rax
   14000220b:	mov    rbx,rcx
   14000220e:	cmp    edx,0x1
   140002211:	jne    0x1400022e7
   140002217:	xor    edi,edi
   140002219:	test   rcx,rcx
   14000221c:	je     0x1400022e7
   140002222:	call   QWORD PTR [rip+0x80c8]        # 0x14000a2f0
   140002228:	test   eax,eax
   14000222a:	je     0x1400022e7
   140002230:	xor    edx,edx
   140002232:	mov    DWORD PTR [rsp+0x30],0x104
   14000223a:	mov    r8d,0x206
   140002240:	mov    WORD PTR [rsp+0x40],di
   140002245:	lea    rcx,[rsp+0x42]
   14000224a:	call   0x1400098c6
   14000224f:	mov    rax,QWORD PTR [rip+0xd7da]        # 0x14000fa30
   140002256:	lea    r9,[rsp+0x30]
   14000225b:	lea    r8,[rsp+0x40]
   140002260:	lea    edx,[rdi+0x1f]
   140002263:	movzx  ecx,WORD PTR [rax+0x248]
   14000226a:	mov    WORD PTR [rsp+0x20],cx
   14000226f:	mov    rcx,QWORD PTR [rax+0x8]
   140002273:	call   0x1400080d8
   140002278:	test   eax,eax
   14000227a:	je     0x140002296
   14000227c:	cmp    di,WORD PTR [rsp+0x40]
   140002281:	je     0x140002296
   140002283:	lea    r8,[rsp+0x40]
   140002288:	mov    edx,0x3024
   14000228d:	mov    rcx,rbx
   140002290:	call   QWORD PTR [rip+0x7ff2]        # 0x14000a288
   140002296:	mov    rax,QWORD PTR [rip+0xd793]        # 0x14000fa30
   14000229d:	lea    r9,[rsp+0x30]
   1400022a2:	lea    r8,[rsp+0x40]
   1400022a7:	mov    DWORD PTR [rsp+0x30],0x104
   1400022af:	mov    edx,0x20
   1400022b4:	movzx  ecx,WORD PTR [rax+0x248]
   1400022bb:	mov    WORD PTR [rsp+0x20],cx
   1400022c0:	mov    rcx,QWORD PTR [rax+0x8]
   1400022c4:	call   0x1400080d8
   1400022c9:	test   eax,eax
   1400022cb:	je     0x1400022e7
   1400022cd:	cmp    di,WORD PTR [rsp+0x40]
   1400022d2:	je     0x1400022e7
   1400022d4:	lea    r8,[rsp+0x40]
   1400022d9:	mov    edx,0x2
   1400022de:	mov    rcx,rbx
   1400022e1:	call   QWORD PTR [rip+0x7fa1]        # 0x14000a288
   1400022e7:	xor    eax,eax
   1400022e9:	mov    rcx,QWORD PTR [rbp+0x150]
   1400022f0:	xor    rcx,rsp
   1400022f3:	call   0x1400090a0
   1400022f8:	lea    r11,[rsp+0x260]
   140002300:	mov    rbx,QWORD PTR [r11+0x18]
   140002304:	mov    rdi,QWORD PTR [r11+0x20]
   140002308:	mov    rsp,r11
   14000230b:	pop    rbp
   14000230c:	ret    
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	int3   
   140002311:	int3   
   140002312:	int3   
   140002313:	int3   
   140002314:	mov    rax,rsp
   140002317:	mov    QWORD PTR [rax+0x10],rbx
   14000231b:	mov    QWORD PTR [rax+0x18],rsi
   14000231f:	mov    QWORD PTR [rax+0x20],rdi
   140002323:	push   rbp
   140002324:	push   r12
   140002326:	push   r13
   140002328:	push   r14
   14000232a:	push   r15
   14000232c:	lea    rbp,[rax-0x288]
   140002333:	sub    rsp,0x360
   14000233a:	mov    rax,QWORD PTR [rip+0xccc7]        # 0x14000f008
   140002341:	xor    rax,rsp
   140002344:	mov    QWORD PTR [rbp+0x250],rax
   14000234b:	xor    edi,edi
   14000234d:	mov    QWORD PTR [rsp+0x30],rcx
   140002352:	xor    edx,edx
   140002354:	mov    DWORD PTR [rsp+0x40],edi
   140002358:	lea    rcx,[rsp+0x54]
   14000235d:	mov    DWORD PTR [rsp+0x50],edi
   140002361:	lea    r8d,[rdi+0x64]
   140002365:	call   0x1400098c6
   14000236a:	xor    eax,eax
   14000236c:	mov    QWORD PTR [rbp+0x20],rdi
   140002370:	xor    edx,edx
   140002372:	mov    QWORD PTR [rbp+0x28],rax
   140002376:	lea    r8d,[rdi+0x5c]
   14000237a:	mov    QWORD PTR [rbp+0x30],rax
   14000237e:	lea    rcx,[rbp-0x3c]
   140002382:	mov    DWORD PTR [rbp-0x40],edi
   140002385:	call   0x1400098c6
   14000238a:	mov    r14d,edi
   14000238d:	mov    esi,edi
   14000238f:	mov    r13d,edi
   140002392:	mov    r12d,edi
   140002395:	mov    r15d,edi
   140002398:	call   QWORD PTR [rip+0x7dd2]        # 0x14000a170
   14000239e:	mov    ecx,0x404
   1400023a3:	cmp    ax,cx
   1400023a6:	je     0x1400023d4
   1400023a8:	mov    ecx,0xc04
   1400023ad:	cmp    ax,cx
   1400023b0:	je     0x1400023d4
   1400023b2:	mov    ecx,0x1404
   1400023b7:	cmp    ax,cx
   1400023ba:	je     0x1400023d4
   1400023bc:	mov    ecx,0x409
   1400023c1:	cmp    ax,cx
   1400023c4:	je     0x1400023d4
   1400023c6:	mov    ecx,0x804
   1400023cb:	cmp    ax,cx
   1400023ce:	jne    0x140002975
   1400023d4:	mov    rcx,QWORD PTR [rip+0xd655]        # 0x14000fa30
   1400023db:	lea    r9,[rsp+0x38]
   1400023e0:	xor    r8d,r8d
   1400023e3:	mov    DWORD PTR [rsp+0x38],edi
   1400023e7:	movzx  eax,WORD PTR [rcx+0x248]
   1400023ee:	mov    rcx,QWORD PTR [rcx+0x8]
   1400023f2:	lea    edx,[r8+0x6]
   1400023f6:	mov    WORD PTR [rsp+0x20],ax
   1400023fb:	call   0x1400080d8
   140002400:	movsxd rax,DWORD PTR [rsp+0x38]
   140002405:	test   eax,eax
   140002407:	je     0x140002975
   14000240d:	mov    rcx,rax
   140002410:	mov    eax,0x2
   140002415:	mul    rcx
   140002418:	mov    rcx,0xffffffffffffffff
   14000241f:	cmovo  rax,rcx
   140002423:	mov    rcx,rax
   140002426:	call   0x140008ce0
   14000242b:	mov    rbx,rax
   14000242e:	test   rax,rax
   140002431:	je     0x140002975
   140002437:	mov    rcx,QWORD PTR [rip+0xd5f2]        # 0x14000fa30
   14000243e:	lea    r9,[rsp+0x38]
   140002443:	mov    r8,rbx
   140002446:	mov    edx,0x6
   14000244b:	movzx  eax,WORD PTR [rcx+0x248]
   140002452:	mov    rcx,QWORD PTR [rcx+0x8]
   140002456:	mov    WORD PTR [rsp+0x20],ax
   14000245b:	call   0x1400080d8
   140002460:	mov    rdx,rbx
   140002463:	lea    rcx,[rip+0x993e]        # 0x14000bda8
   14000246a:	call   QWORD PTR [rip+0x7db8]        # 0x14000a228
   140002470:	mov    rcx,rbx
   140002473:	mov    rdi,rax
   140002476:	call   QWORD PTR [rip+0x7ef4]        # 0x14000a370
   14000247c:	test   rdi,rdi
   14000247f:	je     0x14000248f
   140002481:	mov    rcx,rdi
   140002484:	call   QWORD PTR [rip+0x7da6]        # 0x14000a230
   14000248a:	jmp    0x140002975
   14000248f:	mov    ecx,0x28
   140002494:	call   0x140008ca8
   140002499:	mov    QWORD PTR [rsp+0x38],rax
   14000249e:	mov    rcx,rax
   1400024a1:	test   rax,rax
   1400024a4:	je     0x1400024b9
   1400024a6:	and    QWORD PTR [rax+0x8],rsi
   1400024aa:	and    DWORD PTR [rax+0x10],esi
   1400024ad:	and    QWORD PTR [rax+0x18],rsi
   1400024b1:	and    QWORD PTR [rax],rsi
   1400024b4:	and    DWORD PTR [rax+0x20],esi
   1400024b7:	jmp    0x1400024bb
   1400024b9:	xor    ecx,ecx
   1400024bb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024c0:	mov    QWORD PTR [rbx+0x1078],rcx
   1400024c7:	test   rcx,rcx
   1400024ca:	je     0x1400028f1
   1400024d0:	mov    rax,QWORD PTR [rip+0xd559]        # 0x14000fa30
   1400024d7:	mov    rdx,QWORD PTR [rax+0x258]
   1400024de:	call   0x140008310
   1400024e3:	test   eax,eax
   1400024e5:	je     0x1400028f1
   1400024eb:	mov    rcx,QWORD PTR [rip+0xd53e]        # 0x14000fa30
   1400024f2:	lea    r9,[rsp+0x38]
   1400024f7:	and    DWORD PTR [rsp+0x38],esi
   1400024fb:	xor    r8d,r8d
   1400024fe:	movzx  eax,WORD PTR [rcx+0x248]
   140002505:	mov    rcx,QWORD PTR [rcx+0x8]
   140002509:	lea    edx,[r8+0x1]
   14000250d:	mov    WORD PTR [rsp+0x20],ax
   140002512:	call   0x1400080d8
   140002517:	mov    rcx,QWORD PTR [rip+0xd512]        # 0x14000fa30
   14000251e:	lea    r9,[rsp+0x30]
   140002523:	and    DWORD PTR [rsp+0x30],esi
   140002527:	xor    r8d,r8d
   14000252a:	movzx  eax,WORD PTR [rcx+0x248]
   140002531:	mov    rcx,QWORD PTR [rcx+0x8]
   140002535:	lea    r14d,[r8+0x2]
   140002539:	mov    edx,r14d
   14000253c:	mov    WORD PTR [rsp+0x20],ax
   140002541:	call   0x1400080d8
   140002546:	mov    rcx,QWORD PTR [rip+0xd4e3]        # 0x14000fa30
   14000254d:	lea    r9,[rsp+0x30]
   140002552:	mov    edi,DWORD PTR [rsp+0x38]
   140002556:	lea    edx,[r14+0x1]
   14000255a:	cmp    DWORD PTR [rsp+0x30],edi
   14000255e:	movzx  eax,WORD PTR [rcx+0x248]
   140002565:	cmovg  edi,DWORD PTR [rsp+0x30]
   14000256a:	xor    r8d,r8d
   14000256d:	mov    rcx,QWORD PTR [rcx+0x8]
   140002571:	mov    WORD PTR [rsp+0x20],ax
   140002576:	mov    DWORD PTR [rsp+0x30],esi
   14000257a:	call   0x1400080d8
   14000257f:	mov    rcx,QWORD PTR [rip+0xd4aa]        # 0x14000fa30
   140002586:	lea    r9,[rsp+0x30]
   14000258b:	cmp    DWORD PTR [rsp+0x30],edi
   14000258f:	lea    edx,[r14+0x2]
   140002593:	cmovg  edi,DWORD PTR [rsp+0x30]
   140002598:	xor    r8d,r8d
   14000259b:	movzx  eax,WORD PTR [rcx+0x248]
   1400025a2:	mov    rcx,QWORD PTR [rcx+0x8]
   1400025a6:	mov    WORD PTR [rsp+0x20],ax
   1400025ab:	mov    DWORD PTR [rsp+0x30],esi
   1400025af:	call   0x1400080d8
   1400025b4:	mov    rcx,QWORD PTR [rip+0xd475]        # 0x14000fa30
   1400025bb:	lea    r9,[rsp+0x30]
   1400025c0:	cmp    DWORD PTR [rsp+0x30],edi
   1400025c4:	lea    edx,[r14+0x3]
   1400025c8:	cmovg  edi,DWORD PTR [rsp+0x30]
   1400025cd:	xor    r8d,r8d
   1400025d0:	movzx  eax,WORD PTR [rcx+0x248]
   1400025d7:	mov    rcx,QWORD PTR [rcx+0x8]
   1400025db:	mov    WORD PTR [rsp+0x20],ax
   1400025e0:	mov    DWORD PTR [rsp+0x30],esi
   1400025e4:	call   0x1400080d8
   1400025e9:	cmp    DWORD PTR [rsp+0x30],edi
   1400025ed:	cmovg  edi,DWORD PTR [rsp+0x30]
   1400025f2:	test   edi,edi
   1400025f4:	je     0x140002975
   1400025fa:	lea    rcx,[r14-0x3]
   1400025fe:	movsxd rbx,edi
   140002601:	mov    eax,r14d
   140002604:	mul    rbx
   140002607:	cmovo  rax,rcx
   14000260b:	mov    rcx,rax
   14000260e:	call   0x140008ce0
   140002613:	mov    r14,rax
   140002616:	test   rax,rax
   140002619:	je     0x140002975
   14000261f:	mov    rcx,0xffffffffffffffff
   140002626:	mov    eax,0x2
   14000262b:	mul    rbx
   14000262e:	cmovo  rax,rcx
   140002632:	mov    rcx,rax
   140002635:	call   0x140008ce0
   14000263a:	mov    rsi,rax
   14000263d:	test   rax,rax
   140002640:	je     0x14000292f
   140002646:	mov    rcx,0xffffffffffffffff
   14000264d:	mov    eax,0x2
   140002652:	mul    rbx
   140002655:	cmovo  rax,rcx
   140002659:	mov    rcx,rax
   14000265c:	call   0x140008ce0
   140002661:	mov    r13,rax
   140002664:	test   rax,rax
   140002667:	je     0x14000292f
   14000266d:	mov    rcx,0xffffffffffffffff
   140002674:	mov    eax,0x2
   140002679:	mul    rbx
   14000267c:	cmovo  rax,rcx
   140002680:	mov    rcx,rax
   140002683:	call   0x140008ce0
   140002688:	mov    r12,rax
   14000268b:	test   rax,rax
   14000268e:	je     0x14000292f
   140002694:	mov    rcx,0xffffffffffffffff
   14000269b:	mov    eax,0x2
   1400026a0:	mul    rbx
   1400026a3:	cmovo  rax,rcx
   1400026a7:	mov    rcx,rax
   1400026aa:	call   0x140008ce0
   1400026af:	mov    r15,rax
   1400026b2:	test   rax,rax
   1400026b5:	je     0x14000292f
   1400026bb:	mov    r10,QWORD PTR [rip+0xd36e]        # 0x14000fa30
   1400026c2:	lea    r9,[rsp+0x30]
   1400026c7:	mov    r8,r14
   1400026ca:	mov    DWORD PTR [rsp+0x30],edi
   1400026ce:	mov    edx,0x1
   1400026d3:	movzx  ecx,WORD PTR [r10+0x248]
   1400026db:	mov    WORD PTR [rsp+0x20],cx
   1400026e0:	mov    rcx,QWORD PTR [r10+0x8]
   1400026e4:	call   0x1400080d8
   1400026e9:	mov    rcx,QWORD PTR [rip+0xd340]        # 0x14000fa30
   1400026f0:	lea    r9,[rsp+0x30]
   1400026f5:	mov    r8,rsi
   1400026f8:	mov    DWORD PTR [rsp+0x30],edi
   1400026fc:	mov    edx,0x2
   140002701:	movzx  eax,WORD PTR [rcx+0x248]
   140002708:	mov    rcx,QWORD PTR [rcx+0x8]
   14000270c:	mov    WORD PTR [rsp+0x20],ax
   140002711:	call   0x1400080d8
   140002716:	mov    rcx,QWORD PTR [rip+0xd313]        # 0x14000fa30
   14000271d:	lea    r9,[rsp+0x30]
   140002722:	mov    r8,r13
   140002725:	mov    DWORD PTR [rsp+0x30],edi
   140002729:	mov    edx,0x3
   14000272e:	movzx  eax,WORD PTR [rcx+0x248]
   140002735:	mov    rcx,QWORD PTR [rcx+0x8]
   140002739:	mov    WORD PTR [rsp+0x20],ax
   14000273e:	call   0x1400080d8
   140002743:	mov    rcx,QWORD PTR [rip+0xd2e6]        # 0x14000fa30
   14000274a:	lea    r9,[rsp+0x30]
   14000274f:	mov    r8,r12
   140002752:	mov    DWORD PTR [rsp+0x30],edi
   140002756:	mov    edx,0x4
   14000275b:	movzx  eax,WORD PTR [rcx+0x248]
   140002762:	mov    rcx,QWORD PTR [rcx+0x8]
   140002766:	mov    WORD PTR [rsp+0x20],ax
   14000276b:	call   0x1400080d8
   140002770:	mov    rcx,QWORD PTR [rip+0xd2b9]        # 0x14000fa30
   140002777:	lea    r9,[rsp+0x30]
   14000277c:	mov    r8,r15
   14000277f:	mov    DWORD PTR [rsp+0x30],edi
   140002783:	mov    edx,0x5
   140002788:	movzx  eax,WORD PTR [rcx+0x248]
   14000278f:	mov    rcx,QWORD PTR [rcx+0x8]
   140002793:	mov    WORD PTR [rsp+0x20],ax
   140002798:	call   0x1400080d8
   14000279d:	mov    rcx,QWORD PTR [rip+0xd28c]        # 0x14000fa30
   1400027a4:	mov    edi,0x68
   1400027a9:	mov    DWORD PTR [rsp+0x50],edi
   1400027ad:	mov    ebx,0x3080
   1400027b2:	mov    DWORD PTR [rsp+0x54],ebx
   1400027b6:	mov    rax,QWORD PTR [rcx+0x8]
   1400027ba:	mov    QWORD PTR [rsp+0x58],rax
   1400027bf:	lea    rax,[rip+0xfffffffffffff98a]        # 0x140002150
   1400027c6:	mov    QWORD PTR [rbp-0x80],rcx
   1400027ca:	lea    rcx,[rsp+0x50]
   1400027cf:	mov    QWORD PTR [rsp+0x78],rax
   1400027d4:	mov    QWORD PTR [rbp-0x68],r14
   1400027d8:	mov    QWORD PTR [rbp-0x60],rsi
   1400027dc:	mov    QWORD PTR [rsp+0x60],0x65
   1400027e5:	call   QWORD PTR [rip+0x786d]        # 0x14000a058
   1400027eb:	mov    rcx,QWORD PTR [rip+0xd23e]        # 0x14000fa30
   1400027f2:	mov    QWORD PTR [rbp+0x20],rax
   1400027f6:	mov    DWORD PTR [rsp+0x50],edi
   1400027fa:	mov    DWORD PTR [rsp+0x54],ebx
   1400027fe:	mov    rax,QWORD PTR [rcx+0x8]
   140002802:	mov    QWORD PTR [rsp+0x58],rax
   140002807:	lea    rax,[rip+0xfffffffffffff972]        # 0x140002180
   14000280e:	mov    QWORD PTR [rbp-0x80],rcx
   140002812:	lea    rcx,[rsp+0x50]
   140002817:	mov    QWORD PTR [rsp+0x78],rax
   14000281c:	mov    QWORD PTR [rbp-0x68],r13
   140002820:	mov    QWORD PTR [rbp-0x60],r12
   140002824:	mov    QWORD PTR [rsp+0x60],0x66
   14000282d:	call   QWORD PTR [rip+0x7825]        # 0x14000a058
   140002833:	mov    rcx,QWORD PTR [rip+0xd1f6]        # 0x14000fa30
   14000283a:	mov    QWORD PTR [rbp+0x28],rax
   14000283e:	mov    DWORD PTR [rsp+0x50],edi
   140002842:	mov    DWORD PTR [rsp+0x54],0x1080
   14000284a:	mov    rax,QWORD PTR [rcx+0x8]
   14000284e:	mov    QWORD PTR [rsp+0x58],rax
   140002853:	mov    QWORD PTR [rbp-0x80],rcx
   140002857:	lea    rax,[rip+0x98f6]        # 0x14000c154
   14000285e:	mov    QWORD PTR [rbp-0x68],r15
   140002862:	mov    QWORD PTR [rbp-0x60],rax
   140002866:	lea    rcx,[rsp+0x50]
   14000286b:	lea    rax,[rip+0xfffffffffffff93e]        # 0x1400021b0
   140002872:	mov    QWORD PTR [rsp+0x60],0x67
   14000287b:	mov    QWORD PTR [rsp+0x78],rax
   140002880:	call   QWORD PTR [rip+0x77d2]        # 0x14000a058
   140002886:	mov    QWORD PTR [rbp+0x30],rax
   14000288a:	mov    rax,QWORD PTR [rip+0xd19f]        # 0x14000fa30
   140002891:	mov    DWORD PTR [rbp-0x40],0x60
   140002898:	mov    rcx,QWORD PTR [rax+0x8]
   14000289c:	lea    rax,[rbp+0x20]
   1400028a0:	and    QWORD PTR [rbp-0x38],0x0
   1400028a5:	and    DWORD PTR [rbp-0x10],0x0
   1400028a9:	mov    QWORD PTR [rbp-0x8],rax
   1400028ad:	lea    rax,[rip+0x9504]        # 0x14000bdb8
   1400028b4:	mov    QWORD PTR [rbp+0x18],rax
   1400028b8:	lea    rax,[rip+0x9519]        # 0x14000bdd8
   1400028bf:	mov    QWORD PTR [rbp-0x28],rax
   1400028c3:	lea    rax,[rip+0xfffffffffffff916]        # 0x1400021e0
   1400028ca:	mov    QWORD PTR [rbp-0x30],rcx
   1400028ce:	lea    rcx,[rbp-0x40]
   1400028d2:	mov    QWORD PTR [rbp+0x0],rax
   1400028d6:	mov    DWORD PTR [rbp-0x3c],0x1080184
   1400028dd:	mov    DWORD PTR [rbp-0x18],0x3
   1400028e4:	call   QWORD PTR [rip+0x7776]        # 0x14000a060
   1400028ea:	mov    QWORD PTR [rsp+0x40],rax
   1400028ef:	jmp    0x14000292f
   1400028f1:	mov    rcx,QWORD PTR [rip+0xd138]        # 0x14000fa30
   1400028f8:	lea    r9,[rsp+0x38]
   1400028fd:	lea    r8,[rbp+0x40]
   140002901:	mov    DWORD PTR [rsp+0x38],0x104
   140002909:	mov    edx,0x1c
   14000290e:	movzx  eax,WORD PTR [rcx+0x248]
   140002915:	mov    rcx,QWORD PTR [rcx+0x8]
   140002919:	mov    WORD PTR [rsp+0x20],ax
   14000291e:	call   0x1400080d8
   140002923:	lea    rdx,[rbp+0x40]
   140002927:	mov    rcx,rbx
   14000292a:	call   0x1400029b0
   14000292f:	test   r14,r14
   140002932:	je     0x14000293d
   140002934:	mov    rcx,r14
   140002937:	call   QWORD PTR [rip+0x7a33]        # 0x14000a370
   14000293d:	test   rsi,rsi
   140002940:	je     0x14000294b
   140002942:	mov    rcx,rsi
   140002945:	call   QWORD PTR [rip+0x7a25]        # 0x14000a370
   14000294b:	test   r13,r13
   14000294e:	je     0x140002959
   140002950:	mov    rcx,r13
   140002953:	call   QWORD PTR [rip+0x7a17]        # 0x14000a370
   140002959:	test   r12,r12
   14000295c:	je     0x140002967
   14000295e:	mov    rcx,r12
   140002961:	call   QWORD PTR [rip+0x7a09]        # 0x14000a370
   140002967:	test   r15,r15
   14000296a:	je     0x140002975
   14000296c:	mov    rcx,r15
   14000296f:	call   QWORD PTR [rip+0x79fb]        # 0x14000a370
   140002975:	mov    eax,DWORD PTR [rsp+0x40]
   140002979:	mov    rcx,QWORD PTR [rbp+0x250]
   140002980:	xor    rcx,rsp
   140002983:	call   0x1400090a0
   140002988:	lea    r11,[rsp+0x360]
   140002990:	mov    rbx,QWORD PTR [r11+0x38]
   140002994:	mov    rsi,QWORD PTR [r11+0x40]
   140002998:	mov    rdi,QWORD PTR [r11+0x48]
   14000299c:	mov    rsp,r11
   14000299f:	pop    r15
   1400029a1:	pop    r14
   1400029a3:	pop    r13
   1400029a5:	pop    r12
   1400029a7:	pop    rbp
   1400029a8:	ret    
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    rax,rsp
   1400029b3:	mov    QWORD PTR [rax+0x8],rbx
   1400029b7:	mov    QWORD PTR [rax+0x10],rbp
   1400029bb:	mov    QWORD PTR [rax+0x20],rsi
   1400029bf:	push   rdi
   1400029c0:	sub    rsp,0x30
   1400029c4:	mov    rsi,rcx
   1400029c7:	lea    r9,[rsp+0x50]
   1400029cc:	mov    rcx,QWORD PTR [rip+0xd05d]        # 0x14000fa30
   1400029d3:	xor    ebx,ebx
   1400029d5:	mov    DWORD PTR [rax+0x18],ebx
   1400029d8:	mov    rbp,rdx
   1400029db:	xor    r8d,r8d
   1400029de:	movzx  eax,WORD PTR [rcx+0x248]
   1400029e5:	lea    edx,[rbx+0x6]
   1400029e8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400029ec:	mov    WORD PTR [rsp+0x20],ax
   1400029f1:	call   0x1400080d8
   1400029f6:	cmp    DWORD PTR [rsp+0x50],ebx
   1400029fa:	je     0x140002a71
   1400029fc:	movsxd rcx,DWORD PTR [rsp+0x50]
   140002a01:	lea    eax,[rbx+0x2]
   140002a04:	mul    rcx
   140002a07:	lea    rcx,[rbx-0x1]
   140002a0b:	cmovo  rax,rcx
   140002a0f:	mov    rcx,rax
   140002a12:	call   0x140008ce0
   140002a17:	mov    rdi,rax
   140002a1a:	test   rax,rax
   140002a1d:	je     0x140002a71
   140002a1f:	mov    rcx,QWORD PTR [rip+0xd00a]        # 0x14000fa30
   140002a26:	lea    r9,[rsp+0x50]
   140002a2b:	mov    r8,rdi
   140002a2e:	lea    edx,[rbx+0x6]
   140002a31:	movzx  eax,WORD PTR [rcx+0x248]
   140002a38:	mov    rcx,QWORD PTR [rcx+0x8]
   140002a3c:	mov    WORD PTR [rsp+0x20],ax
   140002a41:	call   0x1400080d8
   140002a46:	mov    eax,DWORD PTR [rsi+0x1038]
   140002a4c:	lea    r9d,[rbx+0x10]
   140002a50:	dec    eax
   140002a52:	mov    r8,rdi
   140002a55:	mov    rdx,rbp
   140002a58:	mov    rcx,QWORD PTR [rsi+rax*8+0x1020]
   140002a60:	call   QWORD PTR [rip+0x77e2]        # 0x14000a248
   140002a66:	mov    ebx,eax
   140002a68:	mov    rcx,rdi
   140002a6b:	call   QWORD PTR [rip+0x78ff]        # 0x14000a370
   140002a71:	mov    rbp,QWORD PTR [rsp+0x48]
   140002a76:	mov    eax,ebx
   140002a78:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a7d:	mov    rsi,QWORD PTR [rsp+0x58]
   140002a82:	add    rsp,0x30
   140002a86:	pop    rdi
   140002a87:	ret    
   140002a88:	int3   
   140002a89:	int3   
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	rex push rbx
   140002a92:	sub    rsp,0x20
   140002a96:	xor    ebx,ebx
   140002a98:	sub    edx,0x10
   140002a9b:	je     0x140002abb
   140002a9d:	sub    edx,0x100
   140002aa3:	je     0x140002ada
   140002aa5:	cmp    edx,0x1
   140002aa8:	jne    0x140002acb
   140002aaa:	movzx  edx,r8w
   140002aae:	sub    edx,0x3f6
   140002ab4:	je     0x140002ad3
   140002ab6:	cmp    edx,0x1
   140002ab9:	jne    0x140002acb
   140002abb:	mov    edx,0x7
   140002ac0:	call   QWORD PTR [rip+0x7832]        # 0x14000a2f8
   140002ac6:	mov    ebx,0x1
   140002acb:	mov    eax,ebx
   140002acd:	add    rsp,0x20
   140002ad1:	pop    rbx
   140002ad2:	ret    
   140002ad3:	mov    edx,0x6
   140002ad8:	jmp    0x140002ac0
   140002ada:	mov    edx,0x3f7
   140002adf:	call   QWORD PTR [rip+0x7773]        # 0x14000a258
   140002ae5:	mov    rcx,rax
   140002ae8:	call   QWORD PTR [rip+0x7762]        # 0x14000a250
   140002aee:	jmp    0x140002acb
   140002af0:	int3   
   140002af1:	int3   
   140002af2:	int3   
   140002af3:	int3   
   140002af4:	int3   
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	mov    QWORD PTR [rsp+0x8],rbx
   140002b05:	mov    QWORD PTR [rsp+0x18],rbp
   140002b0a:	mov    QWORD PTR [rsp+0x20],rsi
   140002b0f:	push   rdi
   140002b10:	push   r12
   140002b12:	push   r14
   140002b14:	sub    rsp,0x30
   140002b18:	xor    ebx,ebx
   140002b1a:	mov    rsi,rcx
   140002b1d:	sub    edx,0x10
   140002b20:	je     0x140002b3a
   140002b22:	sub    edx,0x100
   140002b28:	je     0x140002b62
   140002b2a:	cmp    edx,0x1
   140002b2d:	jne    0x140002b47
   140002b2f:	mov    eax,0x3f5
   140002b34:	cmp    r8w,ax
   140002b38:	jne    0x140002b47
   140002b3a:	mov    ebx,0x1
   140002b3f:	mov    edx,ebx
   140002b41:	call   QWORD PTR [rip+0x77b1]        # 0x14000a2f8
   140002b47:	mov    rbp,QWORD PTR [rsp+0x60]
   140002b4c:	mov    eax,ebx
   140002b4e:	mov    rbx,QWORD PTR [rsp+0x50]
   140002b53:	mov    rsi,QWORD PTR [rsp+0x68]
   140002b58:	add    rsp,0x30
   140002b5c:	pop    r14
   140002b5e:	pop    r12
   140002b60:	pop    rdi
   140002b61:	ret    
   140002b62:	mov    rcx,QWORD PTR [rip+0xcec7]        # 0x14000fa30
   140002b69:	lea    r9,[rsp+0x58]
   140002b6e:	xor    r8d,r8d
   140002b71:	mov    DWORD PTR [rsp+0x58],ebx
   140002b75:	movzx  eax,WORD PTR [rcx+0x248]
   140002b7c:	mov    rcx,QWORD PTR [rcx+0x8]
   140002b80:	lea    edi,[r8+0x1a]
   140002b84:	mov    edx,edi
   140002b86:	mov    WORD PTR [rsp+0x20],ax
   140002b8b:	call   0x1400080d8
   140002b90:	cmp    DWORD PTR [rsp+0x58],ebx
   140002b94:	je     0x140002b47
   140002b96:	movsxd rcx,DWORD PTR [rsp+0x58]
   140002b9b:	lea    eax,[rdi-0x18]
   140002b9e:	mul    rcx
   140002ba1:	mov    r12,0xffffffffffffffff
   140002ba8:	cmovo  rax,r12
   140002bac:	mov    rcx,rax
   140002baf:	call   0x140008ce0
   140002bb4:	mov    rbp,rax
   140002bb7:	test   rax,rax
   140002bba:	je     0x140002b47
   140002bbc:	mov    rcx,QWORD PTR [rip+0xce6d]        # 0x14000fa30
   140002bc3:	lea    r9,[rsp+0x58]
   140002bc8:	mov    r8,rbp
   140002bcb:	mov    edx,edi
   140002bcd:	movzx  eax,WORD PTR [rcx+0x248]
   140002bd4:	mov    rcx,QWORD PTR [rcx+0x8]
   140002bd8:	mov    WORD PTR [rsp+0x20],ax
   140002bdd:	call   0x1400080d8
   140002be2:	mov    eax,DWORD PTR [rsp+0x58]
   140002be6:	add    eax,0xb
   140002be9:	movsxd r14,eax
   140002bec:	lea    eax,[rdi-0x18]
   140002bef:	mul    r14
   140002bf2:	cmovo  rax,r12
   140002bf6:	mov    rcx,rax
   140002bf9:	call   0x140008ce0
   140002bfe:	mov    rdi,rax
   140002c01:	test   rax,rax
   140002c04:	je     0x140002c3e
   140002c06:	mov    rax,QWORD PTR [rip+0xce23]        # 0x14000fa30
   140002c0d:	mov    r8,rbp
   140002c10:	mov    rdx,r14
   140002c13:	mov    rcx,rdi
   140002c16:	mov    r9d,DWORD PTR [rax+0x28]
   140002c1a:	call   0x140001b34
   140002c1f:	test   eax,eax
   140002c21:	js     0x140002c3e
   140002c23:	xor    r9d,r9d
   140002c26:	mov    QWORD PTR [rsp+0x20],rdi
   140002c2b:	mov    edx,0x3f6
   140002c30:	lea    r8d,[r12+0xd]
   140002c35:	mov    rcx,rsi
   140002c38:	call   QWORD PTR [rip+0x76c2]        # 0x14000a300
   140002c3e:	mov    rcx,rbp
   140002c41:	call   QWORD PTR [rip+0x7729]        # 0x14000a370
   140002c47:	test   rdi,rdi
   140002c4a:	je     0x140002b47
   140002c50:	mov    rcx,rdi
   140002c53:	call   QWORD PTR [rip+0x7717]        # 0x14000a370
   140002c59:	jmp    0x140002b47
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	int3   
   140002c61:	int3   
   140002c62:	int3   
   140002c63:	int3   
   140002c64:	rex push rbp
   140002c66:	push   rbx
   140002c67:	push   rsi
   140002c68:	push   rdi
   140002c69:	push   r12
   140002c6b:	push   r13
   140002c6d:	push   r14
   140002c6f:	push   r15
   140002c71:	lea    rbp,[rsp-0x3a8]
   140002c79:	sub    rsp,0x4a8
   140002c80:	mov    rax,QWORD PTR [rip+0xc381]        # 0x14000f008
   140002c87:	xor    rax,rsp
   140002c8a:	mov    QWORD PTR [rbp+0x390],rax
   140002c91:	mov    r13,QWORD PTR [rbp+0x410]
   140002c98:	xor    edi,edi
   140002c9a:	mov    r11,rdx
   140002c9d:	mov    QWORD PTR [rsp+0x38],r9
   140002ca2:	mov    QWORD PTR [rsp+0x48],rdx
   140002ca7:	mov    r10,r9
   140002caa:	mov    rdx,QWORD PTR [rbp+0x418]
   140002cb1:	mov    r9d,edi
   140002cb4:	mov    QWORD PTR [rsp+0x50],r8
   140002cb9:	lea    ebx,[rdi+0x1]
   140002cbc:	mov    DWORD PTR [rsp+0x5c],ebx
   140002cc0:	mov    r14,rcx
   140002cc3:	mov    QWORD PTR [rsp+0x60],rdx
   140002cc8:	mov    r15,rcx
   140002ccb:	mov    DWORD PTR [rsp+0x30],edi
   140002ccf:	mov    esi,edi
   140002cd1:	mov    QWORD PTR [rsp+0x40],r9
   140002cd6:	mov    r12d,edi
   140002cd9:	mov    ecx,edi
   140002cdb:	test   r11,r11
   140002cde:	je     0x140002cf0
   140002ce0:	test   r10,r10
   140002ce3:	je     0x140002cf0
   140002ce5:	cmp    DWORD PTR [r8],edi
   140002ce8:	je     0x140002cf0
   140002cea:	cmp    DWORD PTR [r13+0x0],edi
   140002cee:	jne    0x140002cfb
   140002cf0:	mov    DWORD PTR [r8],edi
   140002cf3:	mov    DWORD PTR [r13+0x0],edi
   140002cf7:	mov    DWORD PTR [rsp+0x30],ebx
   140002cfb:	test   r11,r11
   140002cfe:	je     0x140002d04
   140002d00:	mov    WORD PTR [r11],di
   140002d04:	test   r10,r10
   140002d07:	je     0x140002d0d
   140002d09:	mov    WORD PTR [r10],di
   140002d0d:	or     rbx,0xffffffffffffffff
   140002d11:	mov    DWORD PTR [rdx],edi
   140002d13:	test   r14,r14
   140002d16:	je     0x140002d27
   140002d18:	mov    rax,rbx
   140002d1b:	inc    rax
   140002d1e:	cmp    WORD PTR [r14+rax*2],di
   140002d23:	jne    0x140002d1b
   140002d25:	jmp    0x140002d2a
   140002d27:	mov    rax,rdi
   140002d2a:	test   rax,rax
   140002d2d:	je     0x14000316d
   140002d33:	test   r14,r14
   140002d36:	je     0x140002d47
   140002d38:	mov    rax,rbx
   140002d3b:	inc    rax
   140002d3e:	cmp    WORD PTR [r14+rax*2],di
   140002d43:	jne    0x140002d3b
   140002d45:	jmp    0x140002d4a
   140002d47:	mov    rax,rdi
   140002d4a:	cmp    rax,0x3e8
   140002d50:	ja     0x14000316d
   140002d56:	mov    rax,r14
   140002d59:	cmp    di,WORD PTR [rax]
   140002d5c:	jne    0x140002d66
   140002d5e:	inc    ecx
   140002d60:	cmp    di,WORD PTR [rax+0x2]
   140002d64:	je     0x140002d6c
   140002d66:	add    rax,0x2
   140002d6a:	jmp    0x140002d59
   140002d6c:	mov    DWORD PTR [rsp+0x58],ecx
   140002d70:	cmp    ecx,0x1
   140002d73:	jbe    0x140002d7b
   140002d75:	dec    ecx
   140002d77:	mov    DWORD PTR [rsp+0x58],ecx
   140002d7b:	test   ecx,ecx
   140002d7d:	jne    0x140002d89
   140002d7f:	mov    esi,0x80030003
   140002d84:	jmp    0x14000305a
   140002d89:	mov    edi,0x80004005
   140002d8e:	inc    DWORD PTR [rdx]
   140002d90:	cmp    DWORD PTR [rsp+0x5c],r9d
   140002d95:	je     0x140002e3f
   140002d9b:	cmp    ecx,0x1
   140002d9e:	jbe    0x14000307d
   140002da4:	test   r14,r14
   140002da7:	je     0x140002dbd
   140002da9:	mov    rax,rbx
   140002dac:	inc    rax
   140002daf:	cmp    WORD PTR [r14+rax*2],r9w
   140002db4:	jne    0x140002dac
   140002db6:	mov    QWORD PTR [rsp+0x40],rax
   140002dbb:	jmp    0x140002dc2
   140002dbd:	mov    DWORD PTR [rsp+0x40],r9d
   140002dc2:	cmp    DWORD PTR [rsp+0x30],r9d
   140002dc7:	jne    0x140002e0a
   140002dc9:	test   r14,r14
   140002dcc:	je     0x140002ddd
   140002dce:	mov    rax,rbx
   140002dd1:	inc    rax
   140002dd4:	cmp    WORD PTR [r14+rax*2],r9w
   140002dd9:	jne    0x140002dd1
   140002ddb:	jmp    0x140002de0
   140002ddd:	mov    rax,r9
   140002de0:	cmp    DWORD PTR [r8],eax
   140002de3:	jae    0x140002def
   140002de5:	mov    DWORD PTR [rsp+0x30],0x1
   140002ded:	mov    esi,edi
   140002def:	mov    edx,DWORD PTR [r8]
   140002df2:	mov    r9,rbx
   140002df5:	mov    r8,r14
   140002df8:	mov    rcx,r11
   140002dfb:	call   QWORD PTR [rip+0x7577]        # 0x14000a378
   140002e01:	cmp    eax,0x50
   140002e04:	je     0x140003051
   140002e0a:	mov    r9,rbx
   140002e0d:	lea    rcx,[rbp+0x180]
   140002e14:	mov    r8,r14
   140002e17:	mov    edx,0x104
   140002e1c:	call   QWORD PTR [rip+0x7556]        # 0x14000a378
   140002e22:	cmp    eax,0x50
   140002e25:	je     0x140003051
   140002e2b:	mov    rdx,QWORD PTR [rsp+0x60]
   140002e30:	mov    r10,QWORD PTR [rsp+0x38]
   140002e35:	dec    DWORD PTR [rdx]
   140002e37:	xor    r9d,r9d
   140002e3a:	mov    DWORD PTR [rsp+0x5c],r9d
   140002e3f:	cmp    DWORD PTR [rdx],r9d
   140002e42:	jbe    0x140002ff9
   140002e48:	cmp    DWORD PTR [rsp+0x30],r9d
   140002e4d:	je     0x140002ed9
   140002e53:	test   r15,r15
   140002e56:	je     0x140002e67
   140002e58:	mov    rax,rbx
   140002e5b:	inc    rax
   140002e5e:	cmp    WORD PTR [r15+rax*2],r9w
   140002e63:	jne    0x140002e5b
   140002e65:	jmp    0x140002e6a
   140002e67:	mov    rax,r9
   140002e6a:	lea    rdx,[rbp+0x180]
   140002e71:	mov    rcx,rbx
   140002e74:	inc    rcx
   140002e77:	cmp    WORD PTR [rdx+rcx*2],r9w
   140002e7c:	jne    0x140002e74
   140002e7e:	mov    r9d,ecx
   140002e81:	mov    DWORD PTR [rsp+0x28],eax
   140002e85:	lea    rcx,[rsp+0x70]
   140002e8a:	mov    QWORD PTR [rsp+0x20],r15
   140002e8f:	lea    r8,[rbp+0x180]
   140002e96:	call   0x1400081c0
   140002e9b:	mov    rdx,QWORD PTR [rsp+0x60]
   140002ea0:	lea    rcx,[rsp+0x70]
   140002ea5:	xor    r9d,r9d
   140002ea8:	mov    rax,rbx
   140002eab:	cmp    DWORD PTR [rdx],0x1
   140002eae:	jne    0x140002ec3
   140002eb0:	inc    rax
   140002eb3:	cmp    WORD PTR [rcx+rax*2],r9w
   140002eb8:	jne    0x140002eb0
   140002eba:	lea    r12d,[rax+0x2]
   140002ebe:	jmp    0x140002ff9
   140002ec3:	inc    rax
   140002ec6:	cmp    WORD PTR [rcx+rax*2],r9w
   140002ecb:	jne    0x140002ec3
   140002ecd:	add    r12d,0x3
   140002ed1:	add    r12d,eax
   140002ed4:	jmp    0x140002ff9
   140002ed9:	test   r10,r10
   140002edc:	je     0x140002eed
   140002ede:	mov    rcx,rbx
   140002ee1:	inc    rcx
   140002ee4:	cmp    WORD PTR [r10+rcx*2],r9w
   140002ee9:	jne    0x140002ee1
   140002eeb:	jmp    0x140002ef0
   140002eed:	mov    rcx,r9
   140002ef0:	test   r15,r15
   140002ef3:	je     0x140002f04
   140002ef5:	mov    rax,rbx
   140002ef8:	inc    rax
   140002efb:	cmp    WORD PTR [r15+rax*2],r9w
   140002f00:	jne    0x140002ef8
   140002f02:	jmp    0x140002f07
   140002f04:	mov    rax,r9
   140002f07:	add    eax,0x3
   140002f0a:	add    eax,ecx
   140002f0c:	cmp    eax,DWORD PTR [r13+0x0]
   140002f10:	ja     0x140003161
   140002f16:	cmp    DWORD PTR [rdx],0x1
   140002f19:	jbe    0x140002f40
   140002f1b:	mov    edx,DWORD PTR [r13+0x0]
   140002f1f:	lea    r8,[rip+0x8ef2]        # 0x14000be18
   140002f26:	mov    r9,rbx
   140002f29:	mov    rcx,r10
   140002f2c:	call   QWORD PTR [rip+0x7436]        # 0x14000a368
   140002f32:	cmp    eax,0x50
   140002f35:	je     0x140003153
   140002f3b:	mov    r10,QWORD PTR [rsp+0x38]
   140002f40:	mov    edx,DWORD PTR [r13+0x0]
   140002f44:	lea    r8,[rip+0x8ed1]        # 0x14000be1c
   140002f4b:	mov    r9,rbx
   140002f4e:	mov    rcx,r10
   140002f51:	call   QWORD PTR [rip+0x7411]        # 0x14000a368
   140002f57:	cmp    eax,0x50
   140002f5a:	je     0x140003153
   140002f60:	xor    r8d,r8d
   140002f63:	test   r15,r15
   140002f66:	je     0x140002f77
   140002f68:	mov    rcx,rbx
   140002f6b:	inc    rcx
   140002f6e:	cmp    WORD PTR [r15+rcx*2],r8w
   140002f73:	jne    0x140002f6b
   140002f75:	jmp    0x140002f7a
   140002f77:	mov    rcx,r8
   140002f7a:	mov    rdx,QWORD PTR [rsp+0x48]
   140002f7f:	test   rdx,rdx
   140002f82:	je     0x140002f93
   140002f84:	mov    rax,rbx
   140002f87:	inc    rax
   140002f8a:	cmp    WORD PTR [rdx+rax*2],r8w
   140002f8f:	jne    0x140002f87
   140002f91:	jmp    0x140002f96
   140002f93:	mov    rax,r8
   140002f96:	mov    DWORD PTR [rsp+0x28],ecx
   140002f9a:	mov    r9d,eax
   140002f9d:	lea    rcx,[rsp+0x70]
   140002fa2:	mov    QWORD PTR [rsp+0x20],r15
   140002fa7:	mov    r8,rdx
   140002faa:	call   0x1400081c0
   140002faf:	mov    edx,DWORD PTR [r13+0x0]
   140002fb3:	lea    r8,[rsp+0x70]
   140002fb8:	mov    rcx,QWORD PTR [rsp+0x38]
   140002fbd:	mov    r9,rbx
   140002fc0:	call   QWORD PTR [rip+0x73a2]        # 0x14000a368
   140002fc6:	cmp    eax,0x50
   140002fc9:	je     0x140003153
   140002fcf:	mov    edx,DWORD PTR [r13+0x0]
   140002fd3:	lea    r8,[rip+0x8e42]        # 0x14000be1c
   140002fda:	mov    rcx,QWORD PTR [rsp+0x38]
   140002fdf:	mov    r9,rbx
   140002fe2:	call   QWORD PTR [rip+0x7380]        # 0x14000a368
   140002fe8:	cmp    eax,0x50
   140002feb:	je     0x140003153
   140002ff1:	mov    rdx,QWORD PTR [rsp+0x60]
   140002ff6:	xor    r9d,r9d
   140002ff9:	test   r15,r15
   140002ffc:	je     0x14000300d
   140002ffe:	mov    rax,rbx
   140003001:	inc    rax
   140003004:	cmp    WORD PTR [r15+rax*2],r9w
   140003009:	jne    0x140003001
   14000300b:	jmp    0x140003010
   14000300d:	mov    rax,r9
   140003010:	lea    r15,[r15+rax*2]
   140003014:	add    r15,0x2
   140003018:	je     0x140003029
   14000301a:	mov    rax,rbx
   14000301d:	inc    rax
   140003020:	cmp    WORD PTR [r15+rax*2],r9w
   140003025:	jne    0x14000301d
   140003027:	jmp    0x14000302c
   140003029:	mov    rax,r9
   14000302c:	test   rax,rax
   14000302f:	je     0x140003053
   140003031:	cmp    DWORD PTR [rdx],0xc8
   140003037:	jae    0x140003053
   140003039:	mov    r10,QWORD PTR [rsp+0x38]
   14000303e:	mov    ecx,DWORD PTR [rsp+0x58]
   140003042:	mov    r11,QWORD PTR [rsp+0x48]
   140003047:	mov    r8,QWORD PTR [rsp+0x50]
   14000304c:	jmp    0x140002d8e
   140003051:	mov    esi,edi
   140003053:	mov    r9,QWORD PTR [rsp+0x40]
   140003058:	xor    edi,edi
   14000305a:	cmp    DWORD PTR [rsp+0x30],edi
   14000305e:	je     0x140003177
   140003064:	mov    rcx,QWORD PTR [rsp+0x50]
   140003069:	lea    eax,[r9+0x1]
   14000306d:	mov    DWORD PTR [rcx],eax
   14000306f:	lea    eax,[r12+0x1]
   140003074:	mov    DWORD PTR [r13+0x0],eax
   140003078:	jmp    0x1400031a6
   14000307d:	mov    r9,rbx
   140003080:	lea    rcx,[rsp+0x70]
   140003085:	mov    r8,r14
   140003088:	mov    edx,0x104
   14000308d:	call   QWORD PTR [rip+0x72e5]        # 0x14000a378
   140003093:	cmp    eax,0x50
   140003096:	je     0x140003051
   140003098:	lea    rcx,[rsp+0x70]
   14000309d:	call   QWORD PTR [rip+0x7175]        # 0x14000a218
   1400030a3:	lea    rcx,[rsp+0x70]
   1400030a8:	mov    rax,rbx
   1400030ab:	xor    r8d,r8d
   1400030ae:	inc    rax
   1400030b1:	cmp    WORD PTR [rcx+rax*2],r8w
   1400030b6:	jne    0x1400030ae
   1400030b8:	mov    r9d,eax
   1400030bb:	test   r14,r14
   1400030be:	je     0x1400030cf
   1400030c0:	mov    r12,rbx
   1400030c3:	inc    r12
   1400030c6:	cmp    WORD PTR [r14+r12*2],r8w
   1400030cb:	jne    0x1400030c3
   1400030cd:	jmp    0x1400030d2
   1400030cf:	mov    r12,r8
   1400030d2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400030d7:	cmp    DWORD PTR [rsp+0x30],r8d
   1400030dc:	jne    0x140003069
   1400030de:	cmp    DWORD PTR [rcx],eax
   1400030e0:	jb     0x14000314c
   1400030e2:	cmp    DWORD PTR [r13+0x0],r12d
   1400030e6:	jb     0x14000314c
   1400030e8:	mov    edx,DWORD PTR [rcx]
   1400030ea:	lea    r8,[rsp+0x70]
   1400030ef:	mov    r15,QWORD PTR [rsp+0x48]
   1400030f4:	mov    r9,rbx
   1400030f7:	mov    rcx,r15
   1400030fa:	call   QWORD PTR [rip+0x7278]        # 0x14000a378
   140003100:	cmp    eax,0x50
   140003103:	jne    0x14000312b
   140003105:	mov    r14,QWORD PTR [rsp+0x38]
   14000310a:	mov    esi,edi
   14000310c:	xor    edi,edi
   14000310e:	mov    rcx,QWORD PTR [rsp+0x50]
   140003113:	cmp    DWORD PTR [rcx],edi
   140003115:	je     0x140003188
   140003117:	test   r15,r15
   14000311a:	je     0x140003183
   14000311c:	mov    rax,rbx
   14000311f:	inc    rax
   140003122:	cmp    WORD PTR [r15+rax*2],di
   140003127:	jne    0x14000311f
   140003129:	jmp    0x140003186
   14000312b:	mov    edx,DWORD PTR [r13+0x0]
   14000312f:	mov    r8,r14
   140003132:	mov    r14,QWORD PTR [rsp+0x38]
   140003137:	mov    r9,rbx
   14000313a:	mov    rcx,r14
   14000313d:	call   QWORD PTR [rip+0x7235]        # 0x14000a378
   140003143:	cmp    eax,0x50
   140003146:	jne    0x14000310c
   140003148:	mov    esi,edi
   14000314a:	jmp    0x14000310c
   14000314c:	mov    esi,edi
   14000314e:	jmp    0x140003069
   140003153:	mov    r14,QWORD PTR [rsp+0x38]
   140003158:	mov    esi,edi
   14000315a:	mov    r15,QWORD PTR [rsp+0x48]
   14000315f:	jmp    0x14000310c
   140003161:	mov    r9,QWORD PTR [rsp+0x40]
   140003166:	mov    esi,edi
   140003168:	jmp    0x140003064
   14000316d:	mov    esi,0x80004005
   140003172:	jmp    0x14000305a
   140003177:	mov    r14,QWORD PTR [rsp+0x38]
   14000317c:	mov    r15,QWORD PTR [rsp+0x48]
   140003181:	jmp    0x14000310e
   140003183:	mov    rax,rdi
   140003186:	mov    DWORD PTR [rcx],eax
   140003188:	cmp    DWORD PTR [r13+0x0],edi
   14000318c:	je     0x1400031a6
   14000318e:	test   r14,r14
   140003191:	je     0x14000319f
   140003193:	inc    rbx
   140003196:	cmp    WORD PTR [r14+rbx*2],di
   14000319b:	jne    0x140003193
   14000319d:	jmp    0x1400031a2
   14000319f:	mov    rbx,rdi
   1400031a2:	mov    DWORD PTR [r13+0x0],ebx
   1400031a6:	mov    eax,esi
   1400031a8:	mov    rcx,QWORD PTR [rbp+0x390]
   1400031af:	xor    rcx,rsp
   1400031b2:	call   0x1400090a0
   1400031b7:	add    rsp,0x4a8
   1400031be:	pop    r15
   1400031c0:	pop    r14
   1400031c2:	pop    r13
   1400031c4:	pop    r12
   1400031c6:	pop    rdi
   1400031c7:	pop    rsi
   1400031c8:	pop    rbx
   1400031c9:	pop    rbp
   1400031ca:	ret    
   1400031cb:	int3   
   1400031cc:	int3   
   1400031cd:	int3   
   1400031ce:	int3   
   1400031cf:	int3   
   1400031d0:	int3   
   1400031d1:	int3   
   1400031d2:	int3   
   1400031d3:	int3   
   1400031d4:	mov    QWORD PTR [rsp+0x18],rbx
   1400031d9:	push   rbp
   1400031da:	push   rsi
   1400031db:	push   rdi
   1400031dc:	push   r12
   1400031de:	push   r13
   1400031e0:	push   r14
   1400031e2:	push   r15
   1400031e4:	sub    rsp,0x240
   1400031eb:	mov    rax,QWORD PTR [rip+0xbe16]        # 0x14000f008
   1400031f2:	xor    rax,rsp
   1400031f5:	mov    QWORD PTR [rsp+0x230],rax
   1400031fd:	xor    ebp,ebp
   1400031ff:	or     r12,0xffffffffffffffff
   140003203:	mov    rdi,rdx
   140003206:	mov    rsi,rcx
   140003209:	mov    ebx,ebp
   14000320b:	test   rdx,rdx
   14000320e:	je     0x14000321f
   140003210:	mov    r15,r12
   140003213:	inc    r15
   140003216:	cmp    WORD PTR [rdx+r15*2],bp
   14000321b:	jne    0x140003213
   14000321d:	jmp    0x140003222
   14000321f:	mov    r15,rbp
   140003222:	mov    r14d,ebp
   140003225:	mov    r13d,ebp
   140003228:	test   rdx,rdx
   14000322b:	je     0x1400034e6
   140003231:	test   r15d,r15d
   140003234:	je     0x1400034e6
   14000323a:	mov    r8,rdx
   14000323d:	mov    r9,r12
   140003240:	mov    edx,0x3e8
   140003245:	call   QWORD PTR [rip+0x712d]        # 0x14000a378
   14000324b:	cmp    eax,0x50
   14000324e:	je     0x1400033f6
   140003254:	mov    edx,0x22
   140003259:	mov    rcx,rdi
   14000325c:	call   QWORD PTR [rip+0x70e6]        # 0x14000a348
   140003262:	test   rax,rax
   140003265:	jne    0x140003296
   140003267:	lea    rbp,[rsi+0x7d0]
   14000326e:	mov    r9,r12
   140003271:	mov    rcx,rbp
   140003274:	mov    r8,rdi
   140003277:	mov    edx,0x104
   14000327c:	call   QWORD PTR [rip+0x70f6]        # 0x14000a378
   140003282:	cmp    eax,0x50
   140003285:	je     0x1400034df
   14000328b:	mov    rcx,rbp
   14000328e:	call   QWORD PTR [rip+0x6f84]        # 0x14000a218
   140003294:	xor    ebp,ebp
   140003296:	lea    rdx,[rsi+0x7d0]
   14000329d:	test   rdx,rdx
   1400032a0:	je     0x1400032b0
   1400032a2:	mov    rax,r12
   1400032a5:	inc    rax
   1400032a8:	cmp    WORD PTR [rdx+rax*2],bp
   1400032ac:	jne    0x1400032a5
   1400032ae:	jmp    0x1400032b3
   1400032b0:	mov    rax,rbp
   1400032b3:	cmp    rax,0x2
   1400032b7:	jae    0x1400032c4
   1400032b9:	mov    ecx,0x104
   1400032be:	call   QWORD PTR [rip+0x6ea4]        # 0x14000a168
   1400032c4:	mov    DWORD PTR [rsi+0x1018],ebp
   1400032ca:	xor    edx,edx
   1400032cc:	lea    rbp,[rsi+0x9d8]
   1400032d3:	mov    r8d,0x640
   1400032d9:	mov    rcx,rbp
   1400032dc:	call   0x1400098c6
   1400032e1:	mov    edx,0x22
   1400032e6:	mov    rcx,rdi
   1400032e9:	call   QWORD PTR [rip+0x7059]        # 0x14000a348
   1400032ef:	xor    r12d,r12d
   1400032f2:	test   rax,rax
   1400032f5:	jne    0x140003375
   1400032f7:	mov    rcx,rdi
   1400032fa:	call   QWORD PTR [rip+0x6f00]        # 0x14000a200
   140003300:	test   eax,eax
   140003302:	je     0x1400034e4
   140003308:	or     r14,0xffffffffffffffff
   14000330c:	mov    rcx,r14
   14000330f:	inc    rcx
   140003312:	cmp    WORD PTR [rdi+rcx*2],r12w
   140003317:	jne    0x14000330f
   140003319:	inc    rcx
   14000331c:	mov    eax,0x2
   140003321:	mul    rcx
   140003324:	cmovo  rax,r14
   140003328:	mov    rcx,rax
   14000332b:	call   0x140008ce0
   140003330:	mov    QWORD PTR [rbp+0x0],rax
   140003334:	xor    ebp,ebp
   140003336:	test   rax,rax
   140003339:	je     0x1400034e6
   14000333f:	mov    rdx,r14
   140003342:	inc    rdx
   140003345:	cmp    WORD PTR [rdi+rdx*2],bp
   140003349:	jne    0x140003342
   14000334b:	inc    rdx
   14000334e:	mov    r9,r14
   140003351:	mov    r8,rdi
   140003354:	mov    rcx,rax
   140003357:	call   QWORD PTR [rip+0x701b]        # 0x14000a378
   14000335d:	cmp    eax,0x50
   140003360:	je     0x1400033f6
   140003366:	mov    DWORD PTR [rsi+0x1018],0x1
   140003370:	jmp    0x1400034e6
   140003375:	xor    ebp,ebp
   140003377:	mov    eax,ebp
   140003379:	lea    ecx,[rbp+0x20]
   14000337c:	mov    edx,0x22
   140003381:	test   rax,rax
   140003384:	jne    0x1400033b1
   140003386:	cmp    dx,WORD PTR [rdi]
   140003389:	jne    0x1400033a9
   14000338b:	test   r14d,r14d
   14000338e:	je     0x14000339e
   140003390:	mov    rax,rbp
   140003393:	mov    r14d,ebp
   140003396:	mov    r13d,ebp
   140003399:	jmp    0x1400034ce
   14000339e:	mov    r14d,0x1
   1400033a4:	jmp    0x1400034ce
   1400033a9:	mov    rax,rdi
   1400033ac:	jmp    0x1400034c6
   1400033b1:	cmp    dx,WORD PTR [rdi]
   1400033b4:	je     0x1400033bf
   1400033b6:	cmp    bp,WORD PTR [rdi]
   1400033b9:	jne    0x1400034c6
   1400033bf:	test   r14d,r14d
   1400033c2:	je     0x1400033cd
   1400033c4:	cmp    cx,WORD PTR [rdi]
   1400033c7:	je     0x1400034c6
   1400033cd:	mov    ecx,0x104
   1400033d2:	mov    r9d,r13d
   1400033d5:	mov    edx,ecx
   1400033d7:	cmp    r9,rcx
   1400033da:	lea    rcx,[rsp+0x20]
   1400033df:	mov    r8,rax
   1400033e2:	jb     0x140003400
   1400033e4:	or     r14,0xffffffffffffffff
   1400033e8:	mov    r9,r14
   1400033eb:	call   QWORD PTR [rip+0x6f87]        # 0x14000a378
   1400033f1:	cmp    eax,0x50
   1400033f4:	jne    0x14000340a
   1400033f6:	mov    ebx,0x80004005
   1400033fb:	jmp    0x1400034e6
   140003400:	call   QWORD PTR [rip+0x6f72]        # 0x14000a378
   140003406:	or     r14,0xffffffffffffffff
   14000340a:	lea    rcx,[rsp+0x20]
   14000340f:	call   QWORD PTR [rip+0x6deb]        # 0x14000a200
   140003415:	test   eax,eax
   140003417:	je     0x140003475
   140003419:	lea    ebp,[r13+0x1]
   14000341d:	mov    eax,0x2
   140003422:	mul    rbp
   140003425:	cmovo  rax,r14
   140003429:	mov    rcx,rax
   14000342c:	call   0x140008ce0
   140003431:	mov    ecx,DWORD PTR [rsi+0x1018]
   140003437:	mov    QWORD PTR [rsi+rcx*8+0x9d8],rax
   14000343f:	mov    eax,DWORD PTR [rsi+0x1018]
   140003445:	mov    rcx,QWORD PTR [rsi+rax*8+0x9d8]
   14000344d:	test   rcx,rcx
   140003450:	je     0x1400034df
   140003456:	mov    r9,r14
   140003459:	lea    r8,[rsp+0x20]
   14000345e:	mov    edx,ebp
   140003460:	call   QWORD PTR [rip+0x6f12]        # 0x14000a378
   140003466:	cmp    eax,0x50
   140003469:	je     0x1400034df
   14000346b:	inc    DWORD PTR [rsi+0x1018]
   140003471:	xor    ebp,ebp
   140003473:	jmp    0x1400034b8
   140003475:	lea    rax,[rsp+0x20]
   14000347a:	lea    rdx,[rsp+0x20]
   14000347f:	test   rax,rax
   140003482:	je     0x1400034b3
   140003484:	lea    rcx,[rsp+0x20]
   140003489:	mov    rax,r14
   14000348c:	inc    rax
   14000348f:	cmp    WORD PTR [rcx+rax*2],bp
   140003493:	jne    0x14000348c
   140003495:	test   eax,eax
   140003497:	je     0x1400034b3
   140003499:	mov    ecx,ebp
   14000349b:	mov    r8d,0x20
   1400034a1:	cmp    WORD PTR [rdx],r8w
   1400034a5:	jne    0x1400034b3
   1400034a7:	inc    ecx
   1400034a9:	add    rdx,0x2
   1400034ad:	cmp    ecx,eax
   1400034af:	jb     0x1400034a1
   1400034b1:	jmp    0x1400034b8
   1400034b3:	mov    ebx,0x80030002
   1400034b8:	mov    rax,rbp
   1400034bb:	mov    r13d,ebp
   1400034be:	mov    r14d,ebp
   1400034c1:	mov    ecx,0x20
   1400034c6:	test   rax,rax
   1400034c9:	je     0x1400034ce
   1400034cb:	inc    r13d
   1400034ce:	inc    r12d
   1400034d1:	add    rdi,0x2
   1400034d5:	cmp    r12d,r15d
   1400034d8:	ja     0x1400034e6
   1400034da:	jmp    0x14000337c
   1400034df:	mov    ebx,0x80004005
   1400034e4:	xor    ebp,ebp
   1400034e6:	cmp    DWORD PTR [rsi+0x1018],ebp
   1400034ec:	mov    eax,0x80030001
   1400034f1:	cmove  ebx,eax
   1400034f4:	mov    eax,ebx
   1400034f6:	mov    rcx,QWORD PTR [rsp+0x230]
   1400034fe:	xor    rcx,rsp
   140003501:	call   0x1400090a0
   140003506:	mov    rbx,QWORD PTR [rsp+0x290]
   14000350e:	add    rsp,0x240
   140003515:	pop    r15
   140003517:	pop    r14
   140003519:	pop    r13
   14000351b:	pop    r12
   14000351d:	pop    rdi
   14000351e:	pop    rsi
   14000351f:	pop    rbp
   140003520:	ret    
   140003521:	int3   
   140003522:	int3   
   140003523:	int3   
   140003524:	int3   
   140003525:	int3   
   140003526:	int3   
   140003527:	int3   
   140003528:	mov    rax,rsp
   14000352b:	mov    QWORD PTR [rax+0x8],rbx
   14000352f:	mov    QWORD PTR [rax+0x10],rbp
   140003533:	mov    QWORD PTR [rax+0x18],rsi
   140003537:	mov    QWORD PTR [rax+0x20],rdi
   14000353b:	push   r12
   14000353d:	push   r14
   14000353f:	push   r15
   140003541:	sub    rsp,0x30
   140003545:	mov    rax,QWORD PTR [rip+0xc4e4]        # 0x14000fa30
   14000354c:	mov    r15d,edx
   14000354f:	mov    r14,rcx
   140003552:	mov    ebx,0x1
   140003557:	cmp    DWORD PTR [rax],0x5
   14000355a:	jb     0x14000356b
   14000355c:	jne    0x140003564
   14000355e:	cmp    DWORD PTR [rax+0x4],0x0
   140003562:	je     0x14000356b
   140003564:	mov    edi,0x7f
   140003569:	jmp    0x140003570
   14000356b:	mov    edi,0x409
   140003570:	xor    ebp,ebp
   140003572:	test   edx,edx
   140003574:	je     0x140003664
   14000357a:	or     r12d,0xffffffff
   14000357e:	mov    rcx,QWORD PTR [r14]
   140003581:	call   QWORD PTR [rip+0x6c81]        # 0x14000a208
   140003587:	mov    rsi,rax
   14000358a:	test   rax,rax
   14000358d:	je     0x140003655
   140003593:	lea    rax,[rip+0x8886]        # 0x14000be20
   14000359a:	mov    DWORD PTR [rsp+0x28],r12d
   14000359f:	mov    r9d,r12d
   1400035a2:	mov    QWORD PTR [rsp+0x20],rax
   1400035a7:	mov    r8,rsi
   1400035aa:	mov    edx,ebx
   1400035ac:	mov    ecx,edi
   1400035ae:	call   QWORD PTR [rip+0x6bac]        # 0x14000a160
   1400035b4:	cmp    eax,0x2
   1400035b7:	je     0x140003655
   1400035bd:	lea    rax,[rip+0x886c]        # 0x14000be30
   1400035c4:	mov    DWORD PTR [rsp+0x28],r12d
   1400035c9:	mov    r9d,r12d
   1400035cc:	mov    QWORD PTR [rsp+0x20],rax
   1400035d1:	mov    r8,rsi
   1400035d4:	mov    edx,ebx
   1400035d6:	mov    ecx,edi
   1400035d8:	call   QWORD PTR [rip+0x6b82]        # 0x14000a160
   1400035de:	cmp    eax,0x2
   1400035e1:	je     0x140003655
   1400035e3:	lea    rax,[rip+0x8856]        # 0x14000be40
   1400035ea:	mov    DWORD PTR [rsp+0x28],r12d
   1400035ef:	mov    r9d,r12d
   1400035f2:	mov    QWORD PTR [rsp+0x20],rax
   1400035f7:	mov    r8,rsi
   1400035fa:	mov    edx,ebx
   1400035fc:	mov    ecx,edi
   1400035fe:	call   QWORD PTR [rip+0x6b5c]        # 0x14000a160
   140003604:	cmp    eax,0x2
   140003607:	je     0x140003655
   140003609:	lea    rax,[rip+0x8840]        # 0x14000be50
   140003610:	mov    DWORD PTR [rsp+0x28],r12d
   140003615:	mov    r9d,r12d
   140003618:	mov    QWORD PTR [rsp+0x20],rax
   14000361d:	mov    r8,rsi
   140003620:	mov    edx,ebx
   140003622:	mov    ecx,edi
   140003624:	call   QWORD PTR [rip+0x6b36]        # 0x14000a160
   14000362a:	cmp    eax,0x2
   14000362d:	je     0x140003655
   14000362f:	lea    rax,[rip+0x882a]        # 0x14000be60
   140003636:	mov    DWORD PTR [rsp+0x28],r12d
   14000363b:	mov    r9d,r12d
   14000363e:	mov    QWORD PTR [rsp+0x20],rax
   140003643:	mov    r8,rsi
   140003646:	mov    edx,ebx
   140003648:	mov    ecx,edi
   14000364a:	call   QWORD PTR [rip+0x6b10]        # 0x14000a160
   140003650:	cmp    eax,0x2
   140003653:	jne    0x140003666
   140003655:	add    ebp,ebx
   140003657:	add    r14,0x8
   14000365b:	cmp    ebp,r15d
   14000365e:	jb     0x14000357e
   140003664:	xor    ebx,ebx
   140003666:	mov    rbp,QWORD PTR [rsp+0x58]
   14000366b:	mov    eax,ebx
   14000366d:	mov    rbx,QWORD PTR [rsp+0x50]
   140003672:	mov    rsi,QWORD PTR [rsp+0x60]
   140003677:	mov    rdi,QWORD PTR [rsp+0x68]
   14000367c:	add    rsp,0x30
   140003680:	pop    r15
   140003682:	pop    r14
   140003684:	pop    r12
   140003686:	ret    
   140003687:	int3   
   140003688:	int3   
   140003689:	int3   
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	mov    rax,rsp
   140003693:	mov    QWORD PTR [rax+0x8],rbx
   140003697:	mov    QWORD PTR [rax+0x10],rbp
   14000369b:	mov    QWORD PTR [rax+0x18],rsi
   14000369f:	mov    QWORD PTR [rax+0x20],rdi
   1400036a3:	push   r13
   1400036a5:	push   r14
   1400036a7:	push   r15
   1400036a9:	sub    rsp,0x30
   1400036ad:	mov    rax,QWORD PTR [rip+0xc37c]        # 0x14000fa30
   1400036b4:	mov    rdi,rcx
   1400036b7:	cmp    DWORD PTR [rax],0x5
   1400036ba:	jb     0x1400036cb
   1400036bc:	jne    0x1400036c4
   1400036be:	cmp    DWORD PTR [rax+0x4],0x0
   1400036c2:	je     0x1400036cb
   1400036c4:	mov    esi,0x7f
   1400036c9:	jmp    0x1400036d0
   1400036cb:	mov    esi,0x409
   1400036d0:	xor    ebx,ebx
   1400036d2:	lea    r15d,[rbx+0x1]
   1400036d6:	cmp    DWORD PTR [rcx+0x1018],ebx
   1400036dc:	jbe    0x140003846
   1400036e2:	or     r13d,0xffffffff
   1400036e6:	mov    rcx,QWORD PTR [rdi+rbx*8+0x9d8]
   1400036ee:	call   QWORD PTR [rip+0x6b14]        # 0x14000a208
   1400036f4:	mov    rbp,rax
   1400036f7:	test   rax,rax
   1400036fa:	je     0x140003837
   140003700:	lea    rax,[rip+0x8719]        # 0x14000be20
   140003707:	mov    DWORD PTR [rsp+0x28],r13d
   14000370c:	mov    r9d,r13d
   14000370f:	mov    QWORD PTR [rsp+0x20],rax
   140003714:	mov    r8,rbp
   140003717:	mov    edx,r15d
   14000371a:	mov    ecx,esi
   14000371c:	call   QWORD PTR [rip+0x6a3e]        # 0x14000a160
   140003722:	cmp    eax,0x2
   140003725:	je     0x140003837
   14000372b:	lea    rax,[rip+0x86fe]        # 0x14000be30
   140003732:	mov    DWORD PTR [rsp+0x28],r13d
   140003737:	mov    r9d,r13d
   14000373a:	mov    QWORD PTR [rsp+0x20],rax
   14000373f:	mov    r8,rbp
   140003742:	mov    edx,r15d
   140003745:	mov    ecx,esi
   140003747:	call   QWORD PTR [rip+0x6a13]        # 0x14000a160
   14000374d:	cmp    eax,0x2
   140003750:	je     0x140003837
   140003756:	lea    rax,[rip+0x86e3]        # 0x14000be40
   14000375d:	mov    DWORD PTR [rsp+0x28],r13d
   140003762:	mov    r9d,r13d
   140003765:	mov    QWORD PTR [rsp+0x20],rax
   14000376a:	mov    r8,rbp
   14000376d:	mov    edx,r15d
   140003770:	mov    ecx,esi
   140003772:	call   QWORD PTR [rip+0x69e8]        # 0x14000a160
   140003778:	cmp    eax,0x2
   14000377b:	je     0x140003837
   140003781:	lea    rax,[rip+0x86c8]        # 0x14000be50
   140003788:	mov    DWORD PTR [rsp+0x28],r13d
   14000378d:	mov    r9d,r13d
   140003790:	mov    QWORD PTR [rsp+0x20],rax
   140003795:	mov    r8,rbp
   140003798:	mov    edx,r15d
   14000379b:	mov    ecx,esi
   14000379d:	call   QWORD PTR [rip+0x69bd]        # 0x14000a160
   1400037a3:	cmp    eax,0x2
   1400037a6:	je     0x140003837
   1400037ac:	lea    rax,[rip+0x86ad]        # 0x14000be60
   1400037b3:	mov    DWORD PTR [rsp+0x28],r13d
   1400037b8:	mov    r9d,r13d
   1400037bb:	mov    QWORD PTR [rsp+0x20],rax
   1400037c0:	mov    r8,rbp
   1400037c3:	mov    edx,r15d
   1400037c6:	mov    ecx,esi
   1400037c8:	call   QWORD PTR [rip+0x6992]        # 0x14000a160
   1400037ce:	cmp    eax,0x2
   1400037d1:	je     0x140003837
   1400037d3:	mov    eax,DWORD PTR [rdi+0x1018]
   1400037d9:	dec    eax
   1400037db:	cmp    ebx,eax
   1400037dd:	ja     0x140003835
   1400037df:	mov    rcx,QWORD PTR [rdi+rbx*8+0x9d8]
   1400037e7:	test   rcx,rcx
   1400037ea:	je     0x140003835
   1400037ec:	mov    edx,ebx
   1400037ee:	cmp    ebx,eax
   1400037f0:	jae    0x140003817
   1400037f2:	lea    r8d,[rdx+0x1]
   1400037f6:	mov    rax,QWORD PTR [rdi+r8*8+0x9d8]
   1400037fe:	mov    QWORD PTR [rdi+rdx*8+0x9d8],rax
   140003806:	mov    eax,DWORD PTR [rdi+0x1018]
   14000380c:	sub    eax,r15d
   14000380f:	mov    edx,r8d
   140003812:	cmp    r8d,eax
   140003815:	jb     0x1400037f2
   140003817:	call   QWORD PTR [rip+0x6b53]        # 0x14000a370
   14000381d:	mov    ecx,DWORD PTR [rdi+0x1018]
   140003823:	sub    ecx,r15d
   140003826:	and    QWORD PTR [rdi+rcx*8+0x9d8],0x0
   14000382f:	dec    DWORD PTR [rdi+0x1018]
   140003835:	dec    ebx
   140003837:	add    ebx,r15d
   14000383a:	cmp    ebx,DWORD PTR [rdi+0x1018]
   140003840:	jb     0x1400036e6
   140003846:	mov    rbx,QWORD PTR [rsp+0x50]
   14000384b:	mov    eax,r15d
   14000384e:	mov    rbp,QWORD PTR [rsp+0x58]
   140003853:	mov    rsi,QWORD PTR [rsp+0x60]
   140003858:	mov    rdi,QWORD PTR [rsp+0x68]
   14000385d:	add    rsp,0x30
   140003861:	pop    r15
   140003863:	pop    r14
   140003865:	pop    r13
   140003867:	ret    
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	mov    QWORD PTR [rsp+0x10],rbx
   140003875:	mov    QWORD PTR [rsp+0x18],rbp
   14000387a:	mov    QWORD PTR [rsp+0x20],rsi
   14000387f:	push   rdi
   140003880:	sub    rsp,0x260
   140003887:	mov    rax,QWORD PTR [rip+0xb77a]        # 0x14000f008
   14000388e:	xor    rax,rsp
   140003891:	mov    QWORD PTR [rsp+0x250],rax
   140003899:	xor    ebx,ebx
   14000389b:	xor    edi,edi
   14000389d:	mov    rsi,rcx
   1400038a0:	cmp    DWORD PTR [rcx+0x1018],ebx
   1400038a6:	jbe    0x140003933
   1400038ac:	mov    r8,QWORD PTR [rsi+rdi*8+0x9d8]
   1400038b4:	lea    rcx,[rsp+0x40]
   1400038b9:	or     r9,0xffffffffffffffff
   1400038bd:	mov    edx,0x104
   1400038c2:	call   QWORD PTR [rip+0x6ab0]        # 0x14000a378
   1400038c8:	cmp    eax,0x50
   1400038cb:	je     0x140003931
   1400038cd:	call   0x140001a0c
   1400038d2:	and    QWORD PTR [rsp+0x30],0x0
   1400038d8:	lea    rcx,[rsp+0x40]
   1400038dd:	and    DWORD PTR [rsp+0x28],0x0
   1400038e2:	mov    r9,rax
   1400038e5:	mov    edx,0x80000000
   1400038ea:	mov    DWORD PTR [rsp+0x20],0x3
   1400038f2:	mov    r8d,0x1
   1400038f8:	call   QWORD PTR [rip+0x6892]        # 0x14000a190
   1400038fe:	mov    rbp,rax
   140003901:	cmp    rax,0xffffffffffffffff
   140003905:	je     0x140003922
   140003907:	xor    edx,edx
   140003909:	mov    rcx,rax
   14000390c:	call   QWORD PTR [rip+0x6846]        # 0x14000a158
   140003912:	cmp    eax,0xffffffff
   140003915:	je     0x140003919
   140003917:	add    ebx,eax
   140003919:	mov    rcx,rbp
   14000391c:	call   QWORD PTR [rip+0x6876]        # 0x14000a198
   140003922:	inc    edi
   140003924:	cmp    edi,DWORD PTR [rsi+0x1018]
   14000392a:	jae    0x140003933
   14000392c:	jmp    0x1400038ac
   140003931:	xor    ebx,ebx
   140003933:	mov    eax,ebx
   140003935:	mov    rcx,QWORD PTR [rsp+0x250]
   14000393d:	xor    rcx,rsp
   140003940:	call   0x1400090a0
   140003945:	lea    r11,[rsp+0x260]
   14000394d:	mov    rbx,QWORD PTR [r11+0x18]
   140003951:	mov    rbp,QWORD PTR [r11+0x20]
   140003955:	mov    rsi,QWORD PTR [r11+0x28]
   140003959:	mov    rsp,r11
   14000395c:	pop    rdi
   14000395d:	ret    
   14000395e:	int3   
   14000395f:	int3   
   140003960:	int3   
   140003961:	int3   
   140003962:	int3   
   140003963:	int3   
   140003964:	int3   
   140003965:	int3   
   140003966:	int3   
   140003967:	int3   
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    rax,QWORD PTR [rip+0xc0b9]        # 0x14000fa30
   140003977:	mov    rcx,QWORD PTR [rax+0x38]
   14000397b:	jmp    0x140006940
   140003980:	int3   
   140003981:	int3   
   140003982:	int3   
   140003983:	int3   
   140003984:	int3   
   140003985:	int3   
   140003986:	int3   
   140003987:	int3   
   140003988:	int3   
   140003989:	int3   
   14000398a:	int3   
   14000398b:	int3   
   14000398c:	int3   
   14000398d:	int3   
   14000398e:	int3   
   14000398f:	int3   
   140003990:	mov    QWORD PTR [rsp+0x18],rbx
   140003995:	mov    QWORD PTR [rsp+0x20],rbp
   14000399a:	push   rsi
   14000399b:	push   rdi
   14000399c:	push   r12
   14000399e:	push   r14
   1400039a0:	push   r15
   1400039a2:	sub    rsp,0x80
   1400039a9:	mov    rax,QWORD PTR [rip+0xb658]        # 0x14000f008
   1400039b0:	xor    rax,rsp
   1400039b3:	mov    QWORD PTR [rsp+0x70],rax
   1400039b8:	mov    rax,QWORD PTR [rip+0xc071]        # 0x14000fa30
   1400039bf:	mov    r15,rdx
   1400039c2:	mov    r14,rcx
   1400039c5:	mov    ebx,0x1
   1400039ca:	mov    edi,DWORD PTR [rax]
   1400039cc:	mov    esi,DWORD PTR [rax+0x4]
   1400039cf:	call   QWORD PTR [rip+0x688b]        # 0x14000a260
   1400039d5:	cmp    rax,QWORD PTR [r15]
   1400039d8:	jne    0x140003a99
   1400039de:	xor    r12d,r12d
   1400039e1:	cmp    edi,0x5
   1400039e4:	jb     0x1400039f3
   1400039e6:	jne    0x1400039ec
   1400039e8:	test   esi,esi
   1400039ea:	je     0x1400039f3
   1400039ec:	mov    edi,0x7f
   1400039f1:	jmp    0x1400039f8
   1400039f3:	mov    edi,0x409
   1400039f8:	mov    ecx,0x200
   1400039fd:	call   0x140008ce0
   140003a02:	mov    rbp,rax
   140003a05:	test   rax,rax
   140003a08:	je     0x140003a99
   140003a0e:	lea    rdx,[rsp+0x30]
   140003a13:	mov    DWORD PTR [rsp+0x30],0x3c
   140003a1b:	mov    rcx,r14
   140003a1e:	call   QWORD PTR [rip+0x6844]        # 0x14000a268
   140003a24:	test   eax,eax
   140003a26:	je     0x140003a90
   140003a28:	mov    r8d,0x100
   140003a2e:	mov    rdx,rbp
   140003a31:	mov    rcx,r14
   140003a34:	call   QWORD PTR [rip+0x6836]        # 0x14000a270
   140003a3a:	test   eax,eax
   140003a3c:	je     0x140003a90
   140003a3e:	or     r9d,0xffffffff
   140003a42:	lea    rax,[rip+0x8427]        # 0x14000be70
   140003a49:	mov    DWORD PTR [rsp+0x28],r9d
   140003a4e:	mov    r8,rbp
   140003a51:	mov    edx,ebx
   140003a53:	mov    QWORD PTR [rsp+0x20],rax
   140003a58:	mov    ecx,edi
   140003a5a:	call   QWORD PTR [rip+0x6700]        # 0x14000a160
   140003a60:	cmp    eax,0x2
   140003a63:	jne    0x140003a90
   140003a65:	lea    rdi,[r15+0x8]
   140003a69:	mov    esi,r12d
   140003a6c:	cmp    DWORD PTR [rdi],r12d
   140003a6f:	je     0x140003a7e
   140003a71:	add    rdi,0x4
   140003a75:	add    esi,ebx
   140003a77:	cmp    esi,0x5
   140003a7a:	jl     0x140003a6c
   140003a7c:	jmp    0x140003a89
   140003a7e:	mov    rcx,r14
   140003a81:	call   QWORD PTR [rip+0x67f1]        # 0x14000a278
   140003a87:	mov    DWORD PTR [rdi],eax
   140003a89:	cmp    esi,0x4
   140003a8c:	cmove  ebx,r12d
   140003a90:	mov    rcx,rbp
   140003a93:	call   QWORD PTR [rip+0x68d7]        # 0x14000a370
   140003a99:	mov    eax,ebx
   140003a9b:	mov    rcx,QWORD PTR [rsp+0x70]
   140003aa0:	xor    rcx,rsp
   140003aa3:	call   0x1400090a0
   140003aa8:	lea    r11,[rsp+0x80]
   140003ab0:	mov    rbx,QWORD PTR [r11+0x40]
   140003ab4:	mov    rbp,QWORD PTR [r11+0x48]
   140003ab8:	mov    rsp,r11
   140003abb:	pop    r15
   140003abd:	pop    r14
   140003abf:	pop    r12
   140003ac1:	pop    rdi
   140003ac2:	pop    rsi
   140003ac3:	ret    
   140003ac4:	int3   
   140003ac5:	int3   
   140003ac6:	int3   
   140003ac7:	int3   
   140003ac8:	int3   
   140003ac9:	int3   
   140003aca:	int3   
   140003acb:	int3   
   140003acc:	int3   
   140003acd:	int3   
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	rex push rbp
   140003ad2:	push   rbx
   140003ad3:	push   rsi
   140003ad4:	push   rdi
   140003ad5:	push   r12
   140003ad7:	push   r13
   140003ad9:	push   r14
   140003adb:	push   r15
   140003add:	lea    rbp,[rsp-0xf28]
   140003ae5:	mov    eax,0x1028
   140003aea:	call   0x140009900
   140003aef:	sub    rsp,rax
   140003af2:	mov    rax,QWORD PTR [rip+0xb50f]        # 0x14000f008
   140003af9:	xor    rax,rsp
   140003afc:	mov    QWORD PTR [rbp+0xf10],rax
   140003b03:	mov    r13d,edx
   140003b06:	mov    QWORD PTR [rsp+0x40],r9
   140003b0b:	mov    edx,0xffffffeb
   140003b10:	mov    r12,r8
   140003b13:	mov    r15,rcx
   140003b16:	call   QWORD PTR [rip+0x6764]        # 0x14000a280
   140003b1c:	xor    esi,esi
   140003b1e:	lea    rcx,[rsp+0x52]
   140003b23:	xor    edx,edx
   140003b25:	mov    QWORD PTR [rsp+0x38],rax
   140003b2a:	mov    r8d,0x7d0
   140003b30:	mov    WORD PTR [rsp+0x50],si
   140003b35:	call   0x1400098c6
   140003b3a:	mov    edi,esi
   140003b3c:	mov    r14d,esi
   140003b3f:	cmp    r13d,0x82
   140003b46:	je     0x140003e67
   140003b4c:	cmp    r13d,0x233
   140003b53:	jne    0x140003be0
   140003b59:	mov    rcx,r15
   140003b5c:	call   QWORD PTR [rip+0x66fe]        # 0x14000a260
   140003b62:	mov    edx,0x3ec
   140003b67:	lea    r8d,[rsi+0xd]
   140003b6b:	mov    rcx,rax
   140003b6e:	lea    rax,[rsp+0x50]
   140003b73:	mov    QWORD PTR [rsp+0x20],rax
   140003b78:	lea    r9d,[rdx-0x3]
   140003b7c:	call   QWORD PTR [rip+0x677e]        # 0x14000a300
   140003b82:	xor    r9d,r9d
   140003b85:	xor    r8d,r8d
   140003b88:	or     edx,0xffffffff
   140003b8b:	mov    rcx,r12
   140003b8e:	call   QWORD PTR [rip+0x665c]        # 0x14000a1f0
   140003b94:	mov    DWORD PTR [rsp+0x30],eax
   140003b98:	test   eax,eax
   140003b9a:	je     0x140003be0
   140003b9c:	xor    r9d,r9d
   140003b9f:	xor    r8d,r8d
   140003ba2:	mov    edx,esi
   140003ba4:	mov    rcx,r12
   140003ba7:	call   QWORD PTR [rip+0x6643]        # 0x14000a1f0
   140003bad:	cmp    eax,r14d
   140003bb0:	jbe    0x140003c3c
   140003bb6:	lea    ebx,[rax+0x1]
   140003bb9:	mov    r14d,eax
   140003bbc:	add    rbx,rbx
   140003bbf:	call   QWORD PTR [rip+0x6583]        # 0x14000a148
   140003bc5:	xor    edx,edx
   140003bc7:	mov    rcx,rax
   140003bca:	test   rdi,rdi
   140003bcd:	jne    0x140003c24
   140003bcf:	mov    r8,rbx
   140003bd2:	call   QWORD PTR [rip+0x6578]        # 0x14000a150
   140003bd8:	mov    rdi,rax
   140003bdb:	test   rax,rax
   140003bde:	jne    0x140003c3c
   140003be0:	mov    rbx,QWORD PTR [rsp+0x38]
   140003be5:	mov    rax,QWORD PTR [rsp+0x40]
   140003bea:	mov    r9,r12
   140003bed:	mov    r8d,r13d
   140003bf0:	mov    QWORD PTR [rsp+0x20],rax
   140003bf5:	mov    rdx,r15
   140003bf8:	mov    rcx,rbx
   140003bfb:	call   QWORD PTR [rip+0x668f]        # 0x14000a290
   140003c01:	mov    rcx,QWORD PTR [rbp+0xf10]
   140003c08:	xor    rcx,rsp
   140003c0b:	call   0x1400090a0
   140003c10:	add    rsp,0x1028
   140003c17:	pop    r15
   140003c19:	pop    r14
   140003c1b:	pop    r13
   140003c1d:	pop    r12
   140003c1f:	pop    rdi
   140003c20:	pop    rsi
   140003c21:	pop    rbx
   140003c22:	pop    rbp
   140003c23:	ret    
   140003c24:	mov    r9,rbx
   140003c27:	mov    r8,rdi
   140003c2a:	call   QWORD PTR [rip+0x6510]        # 0x14000a140
   140003c30:	test   rax,rax
   140003c33:	je     0x140003e45
   140003c39:	mov    rdi,rax
   140003c3c:	lea    r9d,[r14+0x1]
   140003c40:	mov    r8,rdi
   140003c43:	mov    edx,esi
   140003c45:	mov    rcx,r12
   140003c48:	call   QWORD PTR [rip+0x65a2]        # 0x14000a1f0
   140003c4e:	or     rbx,0xffffffffffffffff
   140003c52:	lea    rdx,[rsp+0x50]
   140003c57:	xor    ecx,ecx
   140003c59:	inc    rbx
   140003c5c:	cmp    WORD PTR [rdx+rbx*2],cx
   140003c60:	jne    0x140003c59
   140003c62:	add    eax,ebx
   140003c64:	cmp    eax,0x3e8
   140003c69:	ja     0x140003d1e
   140003c6f:	test   esi,esi
   140003c71:	jne    0x140003cd6
   140003c73:	test   ebx,ebx
   140003c75:	je     0x140003cd6
   140003c77:	lea    edx,[rsi+0x22]
   140003c7a:	lea    rcx,[rsp+0x50]
   140003c7f:	call   QWORD PTR [rip+0x66c3]        # 0x14000a348
   140003c85:	test   rax,rax
   140003c88:	jne    0x140003cd6
   140003c8a:	or     r9,0xffffffffffffffff
   140003c8e:	lea    r8,[rsp+0x50]
   140003c93:	mov    edx,0x3e9
   140003c98:	lea    rcx,[rbp+0x730]
   140003c9f:	call   QWORD PTR [rip+0x66d3]        # 0x14000a378
   140003ca5:	cmp    eax,0x50
   140003ca8:	je     0x140003e45
   140003cae:	lea    r9,[rbp+0x730]
   140003cb5:	mov    edx,0x3e9
   140003cba:	lea    r8,[rip+0x81bf]        # 0x14000be80
   140003cc1:	lea    rcx,[rsp+0x50]
   140003cc6:	call   0x140001b34
   140003ccb:	test   eax,eax
   140003ccd:	js     0x140003e45
   140003cd3:	add    ebx,0x2
   140003cd6:	mov    eax,ebx
   140003cd8:	lea    rcx,[rip+0x81b1]        # 0x14000be90
   140003cdf:	test   ebx,ebx
   140003ce1:	lea    r8,[rip+0x8198]        # 0x14000be80
   140003ce8:	mov    edx,0x3e9
   140003ced:	mov    r9,rdi
   140003cf0:	cmovne r8,rcx
   140003cf4:	lea    rcx,[rsp+0x50]
   140003cf9:	lea    rcx,[rcx+rax*2]
   140003cfd:	sub    rdx,rax
   140003d00:	call   0x140001b34
   140003d05:	test   eax,eax
   140003d07:	js     0x140003e45
   140003d0d:	inc    esi
   140003d0f:	cmp    esi,DWORD PTR [rsp+0x30]
   140003d13:	jae    0x140003e19
   140003d19:	jmp    0x140003b9c
   140003d1e:	mov    DWORD PTR [rsp+0x30],ecx
   140003d22:	lea    r9,[rsp+0x30]
   140003d27:	mov    rcx,QWORD PTR [rip+0xbd02]        # 0x14000fa30
   140003d2e:	xor    r8d,r8d
   140003d31:	movzx  eax,WORD PTR [rcx+0x248]
   140003d38:	lea    edx,[r8+0x17]
   140003d3c:	mov    rcx,QWORD PTR [rcx+0x8]
   140003d40:	mov    WORD PTR [rsp+0x20],ax
   140003d45:	call   0x1400080d8
   140003d4a:	movsxd rbx,DWORD PTR [rsp+0x30]
   140003d4f:	test   ebx,ebx
   140003d51:	je     0x140003e19
   140003d57:	mov    rcx,0xffffffffffffffff
   140003d5e:	mov    eax,0x2
   140003d63:	mul    rbx
   140003d66:	cmovo  rax,rcx
   140003d6a:	mov    rcx,rax
   140003d6d:	call   0x140008ce0
   140003d72:	mov    r14,rax
   140003d75:	test   rax,rax
   140003d78:	je     0x140003e19
   140003d7e:	lea    ecx,[rbx+0xb]
   140003d81:	mov    eax,0x2
   140003d86:	movsxd rdx,ecx
   140003d89:	mov    rcx,0xffffffffffffffff
   140003d90:	mul    rdx
   140003d93:	cmovo  rax,rcx
   140003d97:	mov    rcx,rax
   140003d9a:	call   0x140008ce0
   140003d9f:	mov    rbx,rax
   140003da2:	test   rax,rax
   140003da5:	je     0x140003e02
   140003da7:	mov    rcx,QWORD PTR [rip+0xbc82]        # 0x14000fa30
   140003dae:	lea    r9,[rsp+0x30]
   140003db3:	mov    r8,r14
   140003db6:	movzx  edx,WORD PTR [rcx+0x248]
   140003dbd:	mov    rcx,QWORD PTR [rcx+0x8]
   140003dc1:	mov    WORD PTR [rsp+0x20],dx
   140003dc6:	mov    edx,0x17
   140003dcb:	call   0x1400080d8
   140003dd0:	mov    ecx,DWORD PTR [rsp+0x30]
   140003dd4:	mov    r9d,0x3e8
   140003dda:	add    ecx,0xb
   140003ddd:	mov    r8,r14
   140003de0:	movsxd rdx,ecx
   140003de3:	mov    rcx,rbx
   140003de6:	call   0x140001b34
   140003deb:	test   eax,eax
   140003ded:	js     0x140003e02
   140003def:	mov    rcx,QWORD PTR [rip+0xbc3a]        # 0x14000fa30
   140003df6:	mov    rdx,rbx
   140003df9:	mov    rcx,QWORD PTR [rcx+0x10]
   140003dfd:	call   0x1400029b0
   140003e02:	mov    rcx,r14
   140003e05:	call   QWORD PTR [rip+0x6565]        # 0x14000a370
   140003e0b:	test   rbx,rbx
   140003e0e:	je     0x140003e19
   140003e10:	mov    rcx,rbx
   140003e13:	call   QWORD PTR [rip+0x6557]        # 0x14000a370
   140003e19:	test   esi,esi
   140003e1b:	je     0x140003e45
   140003e1d:	mov    rcx,r15
   140003e20:	call   QWORD PTR [rip+0x643a]        # 0x14000a260
   140003e26:	xor    r9d,r9d
   140003e29:	mov    edx,0x3ec
   140003e2e:	mov    rcx,rax
   140003e31:	lea    rax,[rsp+0x50]
   140003e36:	mov    QWORD PTR [rsp+0x20],rax
   140003e3b:	lea    r8d,[r9+0xc]
   140003e3f:	call   QWORD PTR [rip+0x64bb]        # 0x14000a300
   140003e45:	test   rdi,rdi
   140003e48:	je     0x140003be0
   140003e4e:	call   QWORD PTR [rip+0x62f4]        # 0x14000a148
   140003e54:	mov    r8,rdi
   140003e57:	xor    edx,edx
   140003e59:	mov    rcx,rax
   140003e5c:	call   QWORD PTR [rip+0x62d6]        # 0x14000a138
   140003e62:	jmp    0x140003be0
   140003e67:	mov    rbx,QWORD PTR [rsp+0x38]
   140003e6c:	mov    edx,0xfffffffc
   140003e71:	mov    r8,rbx
   140003e74:	mov    rcx,r15
   140003e77:	call   QWORD PTR [rip+0x648b]        # 0x14000a308
   140003e7d:	jmp    0x140003be5
   140003e82:	int3   
   140003e83:	int3   
   140003e84:	int3   
   140003e85:	int3   
   140003e86:	int3   
   140003e87:	int3   
   140003e88:	mov    QWORD PTR [rsp+0x18],rbx
   140003e8d:	push   rbp
   140003e8e:	push   rsi
   140003e8f:	push   rdi
   140003e90:	push   r12
   140003e92:	push   r13
   140003e94:	push   r14
   140003e96:	push   r15
   140003e98:	lea    rbp,[rsp-0x1010]
   140003ea0:	mov    eax,0x1110
   140003ea5:	call   0x140009900
   140003eaa:	sub    rsp,rax
   140003ead:	mov    rax,QWORD PTR [rip+0xb154]        # 0x14000f008
   140003eb4:	xor    rax,rsp
   140003eb7:	mov    QWORD PTR [rbp+0x1000],rax
   140003ebe:	xor    r13d,r13d
   140003ec1:	mov    QWORD PTR [rsp+0x60],rdx
   140003ec6:	mov    DWORD PTR [rsp+0x48],r13d
   140003ecb:	mov    r14,rcx
   140003ece:	mov    DWORD PTR [rsp+0x58],r13d
   140003ed3:	mov    rdi,r9
   140003ed6:	mov    DWORD PTR [rsp+0x44],r13d
   140003edb:	mov    r12,rdx
   140003ede:	mov    DWORD PTR [rsp+0x50],r13d
   140003ee3:	lea    ecx,[r13+0x1]
   140003ee7:	mov    DWORD PTR [r14+0x1038],ecx
   140003eee:	mov    r15d,r13d
   140003ef1:	mov    QWORD PTR [r14+0x1020],rdx
   140003ef8:	mov    esi,r13d
   140003efb:	sub    r8d,0x4e
   140003eff:	je     0x140004c1f
   140003f05:	sub    r8d,0xc2
   140003f0c:	je     0x140004869
   140003f12:	cmp    r8d,ecx
   140003f15:	jne    0x140005046
   140003f1b:	mov    ecx,0x400
   140003f20:	lea    r13d,[rsi+0x2]
   140003f24:	mov    rax,r9
   140003f27:	shr    rax,0x10
   140003f2b:	lea    ebx,[rcx+0x70]
   140003f2e:	cmp    ax,cx
   140003f31:	jne    0x140003f7b
   140003f33:	xor    eax,eax
   140003f35:	lea    edx,[rcx-0x14]
   140003f38:	mov    rcx,r12
   140003f3b:	mov    QWORD PTR [rsp+0x20],rax
   140003f40:	xor    r9d,r9d
   140003f43:	lea    r8d,[rsi+0xe]
   140003f47:	call   QWORD PTR [rip+0x63b3]        # 0x14000a300
   140003f4d:	mov    rcx,r12
   140003f50:	test   eax,eax
   140003f52:	je     0x140003f5f
   140003f54:	call   QWORD PTR [rip+0x6306]        # 0x14000a260
   140003f5a:	mov    r9d,r13d
   140003f5d:	jmp    0x140003f68
   140003f5f:	call   QWORD PTR [rip+0x62fb]        # 0x14000a260
   140003f65:	xor    r9d,r9d
   140003f68:	xor    r8d,r8d
   140003f6b:	mov    edx,ebx
   140003f6d:	mov    rcx,rax
   140003f70:	call   QWORD PTR [rip+0x6342]        # 0x14000a2b8
   140003f76:	mov    ecx,0x400
   140003f7b:	mov    edx,0x3ed
   140003f80:	cmp    di,dx
   140003f83:	jne    0x140005046
   140003f89:	mov    rax,QWORD PTR [rip+0xbaa0]        # 0x14000fa30
   140003f90:	lea    r9,[rsp+0x40]
   140003f95:	mov    DWORD PTR [rsp+0x40],ecx
   140003f99:	lea    r8,[rbp+0x800]
   140003fa0:	mov    edx,0x10
   140003fa5:	movzx  ecx,WORD PTR [rax+0x248]
   140003fac:	mov    WORD PTR [rsp+0x20],cx
   140003fb1:	mov    rcx,QWORD PTR [rax+0x8]
   140003fb5:	call   0x1400080d8
   140003fba:	xor    edi,edi
   140003fbc:	test   eax,eax
   140003fbe:	je     0x140005046
   140003fc4:	movsxd rdx,DWORD PTR [rsp+0x40]
   140003fc9:	cmp    edx,0x400
   140003fcf:	jge    0x140004008
   140003fd1:	lea    eax,[rdx-0x1]
   140003fd4:	mov    r8d,0x800
   140003fda:	movsxd rcx,eax
   140003fdd:	add    rcx,rcx
   140003fe0:	cmp    rcx,r8
   140003fe3:	jae    0x14000507a
   140003fe9:	mov    rax,rdx
   140003fec:	mov    WORD PTR [rbp+rcx*1+0x800],di
   140003ff4:	add    rax,rax
   140003ff7:	cmp    rax,r8
   140003ffa:	jae    0x140005074
   140004000:	mov    WORD PTR [rbp+rax*1+0x800],di
   140004008:	mov    ebx,0x98
   14000400d:	lea    rcx,[rsp+0x70]
   140004012:	mov    r8d,ebx
   140004015:	xor    edx,edx
   140004017:	call   0x1400098c6
   14000401c:	lea    rax,[rbp+0x800]
   140004023:	mov    WORD PTR [r14],di
   140004027:	mov    QWORD PTR [rbp-0x78],rax
   14000402b:	lea    rcx,[rsp+0x70]
   140004030:	mov    eax,0x1
   140004035:	mov    DWORD PTR [rsp+0x70],ebx
   140004039:	mov    DWORD PTR [rbp-0x64],eax
   14000403c:	mov    QWORD PTR [rsp+0x78],r12
   140004041:	mov    QWORD PTR [rbp-0x60],r14
   140004045:	mov    DWORD PTR [rbp-0x58],0x3e8
   14000404c:	mov    QWORD PTR [rbp-0x50],rdi
   140004050:	mov    DWORD PTR [rbp-0x48],edi
   140004053:	mov    QWORD PTR [rbp-0x40],rdi
   140004057:	mov    DWORD PTR [rbp-0x30],0x81a04
   14000405e:	call   QWORD PTR [rip+0x6014]        # 0x14000a078
   140004064:	test   eax,eax
   140004066:	jne    0x14000454a
   14000406c:	call   QWORD PTR [rip+0x5ffe]        # 0x14000a070
   140004072:	mov    ebx,eax
   140004074:	test   eax,eax
   140004076:	je     0x14000454a
   14000407c:	mov    DWORD PTR [rsp+0x40],edi
   140004080:	mov    r12d,edi
   140004083:	mov    r15d,0x16
   140004089:	cmp    eax,0xc
   14000408c:	jbe    0x1400040b6
   14000408e:	cmp    eax,0x3001
   140004093:	je     0x1400040b6
   140004095:	cmp    eax,0x3002
   14000409a:	je     0x1400041cd
   1400040a0:	cmp    eax,0x3003
   1400040a5:	je     0x14000419f
   1400040ab:	cmp    eax,0xffff
   1400040b0:	jne    0x140005046
   1400040b6:	mov    rcx,QWORD PTR [rip+0xb973]        # 0x14000fa30
   1400040bd:	lea    r9,[rsp+0x40]
   1400040c2:	xor    r8d,r8d
   1400040c5:	movzx  eax,WORD PTR [rcx+0x248]
   1400040cc:	mov    rcx,QWORD PTR [rcx+0x8]
   1400040d0:	lea    edx,[r8+0x1d]
   1400040d4:	mov    WORD PTR [rsp+0x20],ax
   1400040d9:	call   0x1400080d8
   1400040de:	mov    r12d,0x17
   1400040e4:	mov    eax,DWORD PTR [rsp+0x40]
   1400040e8:	test   eax,eax
   1400040ea:	je     0x140005046
   1400040f0:	lea    ecx,[r12+rax*1]
   1400040f4:	mov    rdi,0xffffffffffffffff
   1400040fb:	mov    rax,r13
   1400040fe:	mul    rcx
   140004101:	cmovo  rax,rdi
   140004105:	mov    rcx,rax
   140004108:	call   0x140008ce0
   14000410d:	mov    rsi,rax
   140004110:	test   rax,rax
   140004113:	je     0x140005046
   140004119:	mov    ecx,0x3001
   14000411e:	cmp    ebx,ecx
   140004120:	ja     0x1400044a9
   140004126:	je     0x140004477
   14000412c:	cmp    ebx,0x6
   14000412f:	ja     0x140004310
   140004135:	je     0x1400042db
   14000413b:	test   ebx,ebx
   14000413d:	je     0x1400042a6
   140004143:	sub    ebx,0x1
   140004146:	je     0x140004271
   14000414c:	sub    ebx,0x1
   14000414f:	je     0x14000423c
   140004155:	sub    ebx,0x1
   140004158:	je     0x140004207
   14000415e:	sub    ebx,0x1
   140004161:	je     0x1400041d2
   140004163:	cmp    ebx,0x1
   140004166:	jne    0x14000453a
   14000416c:	mov    rcx,QWORD PTR [rip+0xb8bd]        # 0x14000fa30
   140004173:	lea    r9,[rsp+0x40]
   140004178:	mov    r8,rsi
   14000417b:	lea    edx,[rdi+0x1e]
   14000417e:	movzx  eax,WORD PTR [rcx+0x248]
   140004185:	mov    rcx,QWORD PTR [rcx+0x8]
   140004189:	mov    WORD PTR [rsp+0x20],ax
   14000418e:	call   0x1400080d8
   140004193:	lea    r8,[rip+0x7dfe]        # 0x14000bf98
   14000419a:	jmp    0x1400044ee
   14000419f:	mov    edx,0x1e
   1400041a4:	mov    rcx,QWORD PTR [rip+0xb885]        # 0x14000fa30
   1400041ab:	lea    r9,[rsp+0x40]
   1400041b0:	xor    r8d,r8d
   1400041b3:	movzx  eax,WORD PTR [rcx+0x248]
   1400041ba:	mov    rcx,QWORD PTR [rcx+0x8]
   1400041be:	mov    WORD PTR [rsp+0x20],ax
   1400041c3:	call   0x1400080d8
   1400041c8:	jmp    0x1400040e4
   1400041cd:	mov    edx,r15d
   1400041d0:	jmp    0x1400041a4
   1400041d2:	mov    rcx,QWORD PTR [rip+0xb857]        # 0x14000fa30
   1400041d9:	lea    r9,[rsp+0x40]
   1400041de:	mov    r8,rsi
   1400041e1:	mov    edx,0x1d
   1400041e6:	movzx  eax,WORD PTR [rcx+0x248]
   1400041ed:	mov    rcx,QWORD PTR [rcx+0x8]
   1400041f1:	mov    WORD PTR [rsp+0x20],ax
   1400041f6:	call   0x1400080d8
   1400041fb:	lea    r8,[rip+0x7d6e]        # 0x14000bf70
   140004202:	jmp    0x1400044ee
   140004207:	mov    rcx,QWORD PTR [rip+0xb822]        # 0x14000fa30
   14000420e:	lea    r9,[rsp+0x40]
   140004213:	mov    r8,rsi
   140004216:	mov    edx,0x1d
   14000421b:	movzx  eax,WORD PTR [rcx+0x248]
   140004222:	mov    rcx,QWORD PTR [rcx+0x8]
   140004226:	mov    WORD PTR [rsp+0x20],ax
   14000422b:	call   0x1400080d8
   140004230:	lea    r8,[rip+0x7d11]        # 0x14000bf48
   140004237:	jmp    0x1400044ee
   14000423c:	mov    rcx,QWORD PTR [rip+0xb7ed]        # 0x14000fa30
   140004243:	lea    r9,[rsp+0x40]
   140004248:	mov    r8,rsi
   14000424b:	mov    edx,0x1d
   140004250:	movzx  eax,WORD PTR [rcx+0x248]
   140004257:	mov    rcx,QWORD PTR [rcx+0x8]
   14000425b:	mov    WORD PTR [rsp+0x20],ax
   140004260:	call   0x1400080d8
   140004265:	lea    r8,[rip+0x7cac]        # 0x14000bf18
   14000426c:	jmp    0x1400044ee
   140004271:	mov    rcx,QWORD PTR [rip+0xb7b8]        # 0x14000fa30
   140004278:	lea    r9,[rsp+0x40]
   14000427d:	mov    r8,rsi
   140004280:	mov    edx,0x1d
   140004285:	movzx  eax,WORD PTR [rcx+0x248]
   14000428c:	mov    rcx,QWORD PTR [rcx+0x8]
   140004290:	mov    WORD PTR [rsp+0x20],ax
   140004295:	call   0x1400080d8
   14000429a:	lea    r8,[rip+0x7c4f]        # 0x14000bef0
   1400042a1:	jmp    0x1400044ee
   1400042a6:	mov    rcx,QWORD PTR [rip+0xb783]        # 0x14000fa30
   1400042ad:	lea    r9,[rsp+0x40]
   1400042b2:	mov    r8,rsi
   1400042b5:	mov    edx,0x1d
   1400042ba:	movzx  eax,WORD PTR [rcx+0x248]
   1400042c1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400042c5:	mov    WORD PTR [rsp+0x20],ax
   1400042ca:	call   0x1400080d8
   1400042cf:	lea    r8,[rip+0x7bf2]        # 0x14000bec8
   1400042d6:	jmp    0x1400044ee
   1400042db:	mov    rcx,QWORD PTR [rip+0xb74e]        # 0x14000fa30
   1400042e2:	lea    r9,[rsp+0x40]
   1400042e7:	mov    r8,rsi
   1400042ea:	mov    edx,0x1d
   1400042ef:	movzx  eax,WORD PTR [rcx+0x248]
   1400042f6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400042fa:	mov    WORD PTR [rsp+0x20],ax
   1400042ff:	call   0x1400080d8
   140004304:	lea    r8,[rip+0x7cbd]        # 0x14000bfc8
   14000430b:	jmp    0x1400044ee
   140004310:	sub    ebx,0x7
   140004313:	je     0x140004445
   140004319:	sub    ebx,0x1
   14000431c:	je     0x140004410
   140004322:	sub    ebx,0x1
   140004325:	je     0x1400043db
   14000432b:	sub    ebx,0x1
   14000432e:	je     0x1400043a6
   140004330:	sub    ebx,0x1
   140004333:	je     0x140004371
   140004335:	cmp    ebx,0x1
   140004338:	jne    0x14000453a
   14000433e:	mov    rcx,QWORD PTR [rip+0xb6eb]        # 0x14000fa30
   140004345:	lea    r9,[rsp+0x40]
   14000434a:	mov    r8,rsi
   14000434d:	lea    edx,[rbx+0x1c]
   140004350:	movzx  eax,WORD PTR [rcx+0x248]
   140004357:	mov    rcx,QWORD PTR [rcx+0x8]
   14000435b:	mov    WORD PTR [rsp+0x20],ax
   140004360:	call   0x1400080d8
   140004365:	lea    r8,[rip+0x7d6c]        # 0x14000c0d8
   14000436c:	jmp    0x1400044ee
   140004371:	mov    rcx,QWORD PTR [rip+0xb6b8]        # 0x14000fa30
   140004378:	lea    r9,[rsp+0x40]
   14000437d:	mov    r8,rsi
   140004380:	mov    edx,0x1d
   140004385:	movzx  eax,WORD PTR [rcx+0x248]
   14000438c:	mov    rcx,QWORD PTR [rcx+0x8]
   140004390:	mov    WORD PTR [rsp+0x20],ax
   140004395:	call   0x1400080d8
   14000439a:	lea    r8,[rip+0x7d17]        # 0x14000c0b8
   1400043a1:	jmp    0x1400044ee
   1400043a6:	mov    rcx,QWORD PTR [rip+0xb683]        # 0x14000fa30
   1400043ad:	lea    r9,[rsp+0x40]
   1400043b2:	mov    r8,rsi
   1400043b5:	mov    edx,0x1d
   1400043ba:	movzx  eax,WORD PTR [rcx+0x248]
   1400043c1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400043c5:	mov    WORD PTR [rsp+0x20],ax
   1400043ca:	call   0x1400080d8
   1400043cf:	lea    r8,[rip+0x7cb2]        # 0x14000c088
   1400043d6:	jmp    0x1400044ee
   1400043db:	mov    rcx,QWORD PTR [rip+0xb64e]        # 0x14000fa30
   1400043e2:	lea    r9,[rsp+0x40]
   1400043e7:	mov    r8,rsi
   1400043ea:	mov    edx,0x1d
   1400043ef:	movzx  eax,WORD PTR [rcx+0x248]
   1400043f6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400043fa:	mov    WORD PTR [rsp+0x20],ax
   1400043ff:	call   0x1400080d8
   140004404:	lea    r8,[rip+0x7c4d]        # 0x14000c058
   14000440b:	jmp    0x1400044ee
   140004410:	mov    rcx,QWORD PTR [rip+0xb619]        # 0x14000fa30
   140004417:	lea    r9,[rsp+0x40]
   14000441c:	mov    r8,rsi
   14000441f:	mov    edx,0x1d
   140004424:	movzx  eax,WORD PTR [rcx+0x248]
   14000442b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000442f:	mov    WORD PTR [rsp+0x20],ax
   140004434:	call   0x1400080d8
   140004439:	lea    r8,[rip+0x7be8]        # 0x14000c028
   140004440:	jmp    0x1400044ee
   140004445:	mov    rcx,QWORD PTR [rip+0xb5e4]        # 0x14000fa30
   14000444c:	lea    r9,[rsp+0x40]
   140004451:	mov    r8,rsi
   140004454:	mov    edx,0x1d
   140004459:	movzx  eax,WORD PTR [rcx+0x248]
   140004460:	mov    rcx,QWORD PTR [rcx+0x8]
   140004464:	mov    WORD PTR [rsp+0x20],ax
   140004469:	call   0x1400080d8
   14000446e:	lea    r8,[rip+0x7b83]        # 0x14000bff8
   140004475:	jmp    0x1400044ee
   140004477:	mov    rcx,QWORD PTR [rip+0xb5b2]        # 0x14000fa30
   14000447e:	lea    r9,[rsp+0x40]
   140004483:	mov    r8,rsi
   140004486:	mov    edx,0x1d
   14000448b:	movzx  eax,WORD PTR [rcx+0x248]
   140004492:	mov    rcx,QWORD PTR [rcx+0x8]
   140004496:	mov    WORD PTR [rsp+0x20],ax
   14000449b:	call   0x1400080d8
   1400044a0:	lea    r8,[rip+0x7c61]        # 0x14000c108
   1400044a7:	jmp    0x1400044ee
   1400044a9:	sub    ebx,0x3002
   1400044af:	je     0x140004513
   1400044b1:	sub    ebx,0x1
   1400044b4:	je     0x14000450c
   1400044b6:	cmp    ebx,0xcffc
   1400044bc:	jne    0x14000453a
   1400044be:	mov    rcx,QWORD PTR [rip+0xb56b]        # 0x14000fa30
   1400044c5:	lea    r9,[rsp+0x40]
   1400044ca:	mov    r8,rsi
   1400044cd:	mov    edx,0x1d
   1400044d2:	movzx  eax,WORD PTR [rcx+0x248]
   1400044d9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400044dd:	mov    WORD PTR [rsp+0x20],ax
   1400044e2:	call   0x1400080d8
   1400044e7:	lea    r8,[rip+0x79b2]        # 0x14000bea0
   1400044ee:	mov    edx,DWORD PTR [rsp+0x40]
   1400044f2:	mov    r9,rdi
   1400044f5:	add    edx,r12d
   1400044f8:	mov    rcx,rsi
   1400044fb:	call   QWORD PTR [rip+0x5e67]        # 0x14000a368
   140004501:	cmp    eax,0x50
   140004504:	je     0x140005038
   14000450a:	jmp    0x14000453a
   14000450c:	mov    edx,0x1e
   140004511:	jmp    0x140004516
   140004513:	mov    edx,r15d
   140004516:	mov    rcx,QWORD PTR [rip+0xb513]        # 0x14000fa30
   14000451d:	lea    r9,[rsp+0x40]
   140004522:	mov    r8,rsi
   140004525:	movzx  eax,WORD PTR [rcx+0x248]
   14000452c:	mov    rcx,QWORD PTR [rcx+0x8]
   140004530:	mov    WORD PTR [rsp+0x20],ax
   140004535:	call   0x1400080d8
   14000453a:	mov    rdx,rsi
   14000453d:	mov    rcx,r14
   140004540:	call   0x1400029b0
   140004545:	jmp    0x14000503d
   14000454a:	mov    rcx,QWORD PTR [rbp-0x60]
   14000454e:	lea    rax,[rsp+0x50]
   140004553:	mov    QWORD PTR [rsp+0x28],rax
   140004558:	lea    r8,[rsp+0x58]
   14000455d:	lea    rax,[rsp+0x44]
   140004562:	xor    r9d,r9d
   140004565:	xor    edx,edx
   140004567:	mov    QWORD PTR [rsp+0x20],rax
   14000456c:	call   0x140002c64
   140004571:	test   eax,eax
   140004573:	jne    0x140005046
   140004579:	mov    ecx,DWORD PTR [rsp+0x44]
   14000457d:	mov    rax,r13
   140004580:	mul    rcx
   140004583:	mov    rdi,0xffffffffffffffff
   14000458a:	cmovo  rax,rdi
   14000458e:	mov    rcx,rax
   140004591:	call   0x140008ce0
   140004596:	mov    rbx,rax
   140004599:	test   rax,rax
   14000459c:	je     0x140005046
   1400045a2:	mov    rcx,QWORD PTR [rbp-0x60]
   1400045a6:	lea    rax,[rsp+0x50]
   1400045ab:	mov    QWORD PTR [rsp+0x28],rax
   1400045b0:	lea    rdx,[r14+0x7d0]
   1400045b7:	lea    rax,[rsp+0x44]
   1400045bc:	mov    DWORD PTR [rsp+0x58],0x104
   1400045c4:	mov    r9,rbx
   1400045c7:	mov    QWORD PTR [rsp+0x20],rax
   1400045cc:	lea    r8,[rsp+0x58]
   1400045d1:	call   0x140002c64
   1400045d6:	mov    edx,0x3ec
   1400045db:	lea    rax,[rbp+0x20]
   1400045df:	lea    r8d,[rdi+0xe]
   1400045e3:	mov    QWORD PTR [rsp+0x20],rax
   1400045e8:	mov    rcx,r12
   1400045eb:	lea    r9d,[rdx-0x4]
   1400045ef:	call   QWORD PTR [rip+0x5d0b]        # 0x14000a300
   1400045f5:	mov    rcx,rax
   1400045f8:	mov    QWORD PTR [rsp+0x50],rax
   1400045fd:	mov    eax,DWORD PTR [rsp+0x44]
   140004601:	test   eax,eax
   140004603:	je     0x14000474d
   140004609:	add    eax,r13d
   14000460c:	add    eax,ecx
   14000460e:	cmp    eax,0x3e8
   140004613:	jbe    0x14000474d
   140004619:	lea    edx,[rdi+0x23]
   14000461c:	mov    rcx,rbx
   14000461f:	call   QWORD PTR [rip+0x5d1b]        # 0x14000a340
   140004625:	test   rax,rax
   140004628:	je     0x140004678
   14000462a:	sub    rax,rbx
   14000462d:	sar    rax,1
   140004630:	cdq    
   140004631:	mov    r15d,eax
   140004634:	xor    r15d,edx
   140004637:	sub    r15d,edx
   14000463a:	cmp    r15d,r13d
   14000463d:	jle    0x140004678
   14000463f:	mov    rax,QWORD PTR [rsp+0x50]
   140004644:	mov    esi,0x3e9
   140004649:	test   eax,eax
   14000464b:	je     0x140004663
   14000464d:	mov    r9,rdi
   140004650:	lea    r8,[rip+0x77c1]        # 0x14000be18
   140004657:	mov    edx,esi
   140004659:	lea    rcx,[rbp+0x20]
   14000465d:	call   QWORD PTR [rip+0x5d05]        # 0x14000a368
   140004663:	lea    r9d,[r15+0x1]
   140004667:	mov    r8,rbx
   14000466a:	mov    rdx,rsi
   14000466d:	lea    rcx,[rbp+0x20]
   140004671:	call   0x140005c50
   140004676:	xor    esi,esi
   140004678:	mov    rcx,QWORD PTR [rip+0xb3b1]        # 0x14000fa30
   14000467f:	lea    r9,[rsp+0x40]
   140004684:	xor    r8d,r8d
   140004687:	mov    DWORD PTR [rsp+0x40],esi
   14000468b:	movzx  eax,WORD PTR [rcx+0x248]
   140004692:	mov    rcx,QWORD PTR [rcx+0x8]
   140004696:	lea    r12d,[r8+0x17]
   14000469a:	mov    edx,r12d
   14000469d:	mov    WORD PTR [rsp+0x20],ax
   1400046a2:	call   0x1400080d8
   1400046a7:	movsxd rbx,DWORD PTR [rsp+0x40]
   1400046ac:	test   ebx,ebx
   1400046ae:	je     0x140005046
   1400046b4:	mov    rax,r13
   1400046b7:	mul    rbx
   1400046ba:	cmovo  rax,rdi
   1400046be:	mov    rcx,rax
   1400046c1:	call   0x140008ce0
   1400046c6:	mov    r15,rax
   1400046c9:	test   rax,rax
   1400046cc:	je     0x140005046
   1400046d2:	lea    eax,[rbx+0xb]
   1400046d5:	movsxd rcx,eax
   1400046d8:	mov    rax,r13
   1400046db:	mul    rcx
   1400046de:	cmovo  rax,rdi
   1400046e2:	mov    rcx,rax
   1400046e5:	call   0x140008ce0
   1400046ea:	mov    rsi,rax
   1400046ed:	test   rax,rax
   1400046f0:	je     0x14000502a
   1400046f6:	mov    rcx,QWORD PTR [rip+0xb333]        # 0x14000fa30
   1400046fd:	lea    r9,[rsp+0x40]
   140004702:	mov    r8,r15
   140004705:	mov    edx,r12d
   140004708:	movzx  eax,WORD PTR [rcx+0x248]
   14000470f:	mov    rcx,QWORD PTR [rcx+0x8]
   140004713:	mov    WORD PTR [rsp+0x20],ax
   140004718:	call   0x1400080d8
   14000471d:	mov    eax,DWORD PTR [rsp+0x40]
   140004721:	mov    r9d,0x3e8
   140004727:	add    eax,0xb
   14000472a:	mov    r8,r15
   14000472d:	movsxd rdx,eax
   140004730:	mov    rcx,rsi
   140004733:	call   0x140001b34
   140004738:	mov    rdx,rsi
   14000473b:	mov    rcx,r14
   14000473e:	call   0x1400029b0
   140004743:	mov    r12,QWORD PTR [rsp+0x60]
   140004748:	jmp    0x140004829
   14000474d:	test   ecx,ecx
   14000474f:	je     0x140004814
   140004755:	mov    edx,0x22
   14000475a:	mov    rcx,rbx
   14000475d:	call   QWORD PTR [rip+0x5be5]        # 0x14000a348
   140004763:	mov    r14d,0x3e9
   140004769:	test   rax,rax
   14000476c:	jne    0x1400047cc
   14000476e:	mov    rax,QWORD PTR [rsp+0x50]
   140004773:	add    eax,r13d
   140004776:	cmp    eax,0x3e8
   14000477b:	jae    0x1400047cc
   14000477d:	mov    ecx,0x7d0
   140004782:	call   0x140008ce0
   140004787:	mov    QWORD PTR [rsp+0x60],rax
   14000478c:	test   rax,rax
   14000478f:	je     0x140005046
   140004795:	mov    r9,rdi
   140004798:	lea    r8,[rbp+0x20]
   14000479c:	lea    edx,[r14-0x1]
   1400047a0:	mov    rcx,rax
   1400047a3:	call   QWORD PTR [rip+0x5bcf]        # 0x14000a378
   1400047a9:	mov    r9,QWORD PTR [rsp+0x60]
   1400047ae:	lea    r8,[rip+0x76cb]        # 0x14000be80
   1400047b5:	mov    edx,r14d
   1400047b8:	lea    rcx,[rbp+0x20]
   1400047bc:	call   0x140001b34
   1400047c1:	mov    rcx,QWORD PTR [rsp+0x60]
   1400047c6:	call   QWORD PTR [rip+0x5ba4]        # 0x14000a370
   1400047cc:	mov    edx,0x22
   1400047d1:	mov    rcx,rbx
   1400047d4:	call   QWORD PTR [rip+0x5b6e]        # 0x14000a348
   1400047da:	test   rax,rax
   1400047dd:	jne    0x1400047f6
   1400047df:	mov    eax,DWORD PTR [rsp+0x44]
   1400047e3:	add    eax,r13d
   1400047e6:	cmp    eax,0x3e8
   1400047eb:	jae    0x140004829
   1400047ed:	lea    r8,[rip+0x7944]        # 0x14000c138
   1400047f4:	jmp    0x1400047fd
   1400047f6:	lea    r8,[rip+0x794b]        # 0x14000c148
   1400047fd:	lea    r9,[rbp+0x20]
   140004801:	mov    QWORD PTR [rsp+0x20],rbx
   140004806:	mov    rdx,r14
   140004809:	lea    rcx,[rbp+0x20]
   14000480d:	call   0x140001b34
   140004812:	jmp    0x140004829
   140004814:	mov    r9,rdi
   140004817:	lea    rcx,[rbp+0x20]
   14000481b:	mov    r8,rbx
   14000481e:	mov    edx,0x3e9
   140004823:	call   QWORD PTR [rip+0x5b4f]        # 0x14000a378
   140004829:	xor    r9d,r9d
   14000482c:	lea    rax,[rbp+0x20]
   140004830:	mov    edx,0x3ec
   140004835:	mov    QWORD PTR [rsp+0x20],rax
   14000483a:	mov    rcx,r12
   14000483d:	lea    r8d,[r9+0xc]
   140004841:	call   QWORD PTR [rip+0x5ab9]        # 0x14000a300
   140004847:	mov    rcx,r12
   14000484a:	call   QWORD PTR [rip+0x5a10]        # 0x14000a260
   140004850:	mov    r9,r13
   140004853:	xor    r8d,r8d
   140004856:	mov    rcx,rax
   140004859:	mov    edx,0x470
   14000485e:	call   QWORD PTR [rip+0x5a54]        # 0x14000a2b8
   140004864:	jmp    0x14000502a
   140004869:	mov    eax,ecx
   14000486b:	lea    rbx,[r14+0x1050]
   140004872:	sub    eax,ecx
   140004874:	mov    rcx,QWORD PTR [r14+rax*8+0x1020]
   14000487c:	call   QWORD PTR [rip+0x59de]        # 0x14000a260
   140004882:	mov    QWORD PTR [rbx],rax
   140004885:	mov    edi,0x1
   14000488a:	mov    eax,DWORD PTR [r14+0x1038]
   140004891:	sub    eax,edi
   140004893:	mov    rcx,QWORD PTR [r14+rax*8+0x1020]
   14000489b:	call   QWORD PTR [rip+0x59bf]        # 0x14000a260
   1400048a1:	mov    r8,rbx
   1400048a4:	lea    rdx,[rip+0xfffffffffffff0e5]        # 0x140003990
   1400048ab:	mov    rcx,rax
   1400048ae:	call   QWORD PTR [rip+0x59e4]        # 0x14000a298
   1400048b4:	cmp    DWORD PTR [r14+0x1058],0x3023
   1400048bf:	mov    eax,r13d
   1400048c2:	lea    r13d,[rdi+0x1]
   1400048c6:	jne    0x1400048f6
   1400048c8:	cmp    DWORD PTR [r14+0x105c],0x3024
   1400048d3:	jne    0x1400048f6
   1400048d5:	cmp    DWORD PTR [r14+0x1060],0x3025
   1400048e0:	jne    0x1400048f6
   1400048e2:	cmp    DWORD PTR [r14+0x1064],r13d
   1400048e9:	jne    0x1400048f6
   1400048eb:	cmp    DWORD PTR [r14+0x1068],0x9
   1400048f3:	cmove  eax,edi
   1400048f6:	mov    rcx,QWORD PTR [rip+0xb133]        # 0x14000fa30
   1400048fd:	lea    r9,[rsp+0x40]
   140004902:	mov    DWORD PTR [r14+0x1070],eax
   140004909:	xor    edi,edi
   14000490b:	xor    r8d,r8d
   14000490e:	mov    DWORD PTR [rsp+0x40],edi
   140004912:	movzx  eax,WORD PTR [rcx+0x248]
   140004919:	mov    rcx,QWORD PTR [rcx+0x8]
   14000491d:	lea    edx,[rdi+0x6]
   140004920:	mov    WORD PTR [rsp+0x20],ax
   140004925:	call   0x1400080d8
   14000492a:	mov    rcx,QWORD PTR [rip+0xb0ff]        # 0x14000fa30
   140004931:	lea    r9,[rsp+0x44]
   140004936:	xor    r8d,r8d
   140004939:	mov    DWORD PTR [rsp+0x44],edi
   14000493d:	lea    edx,[rdi+0x7]
   140004940:	movzx  eax,WORD PTR [rcx+0x248]
   140004947:	mov    rcx,QWORD PTR [rcx+0x8]
   14000494b:	mov    WORD PTR [rsp+0x20],ax
   140004950:	call   0x1400080d8
   140004955:	mov    rcx,QWORD PTR [rip+0xb0d4]        # 0x14000fa30
   14000495c:	lea    r9,[rsp+0x44]
   140004961:	mov    ebx,DWORD PTR [rsp+0x40]
   140004965:	lea    edx,[rdi+0x8]
   140004968:	cmp    DWORD PTR [rsp+0x44],ebx
   14000496c:	movzx  eax,WORD PTR [rcx+0x248]
   140004973:	cmovg  ebx,DWORD PTR [rsp+0x44]
   140004978:	xor    r8d,r8d
   14000497b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000497f:	mov    WORD PTR [rsp+0x20],ax
   140004984:	mov    DWORD PTR [rsp+0x44],edi
   140004988:	call   0x1400080d8
   14000498d:	mov    rcx,QWORD PTR [rip+0xb09c]        # 0x14000fa30
   140004994:	lea    r9,[rsp+0x44]
   140004999:	cmp    DWORD PTR [rsp+0x44],ebx
   14000499d:	lea    edx,[rdi+0x9]
   1400049a0:	cmovg  ebx,DWORD PTR [rsp+0x44]
   1400049a5:	xor    r8d,r8d
   1400049a8:	movzx  eax,WORD PTR [rcx+0x248]
   1400049af:	mov    rcx,QWORD PTR [rcx+0x8]
   1400049b3:	mov    WORD PTR [rsp+0x20],ax
   1400049b8:	mov    DWORD PTR [rsp+0x44],edi
   1400049bc:	call   0x1400080d8
   1400049c1:	cmp    DWORD PTR [rsp+0x44],ebx
   1400049c5:	cmovg  ebx,DWORD PTR [rsp+0x44]
   1400049ca:	test   ebx,ebx
   1400049cc:	je     0x140005046
   1400049d2:	movsxd rcx,ebx
   1400049d5:	mov    rax,r13
   1400049d8:	mul    rcx
   1400049db:	mov    rdi,0xffffffffffffffff
   1400049e2:	cmovo  rax,rdi
   1400049e6:	mov    rcx,rax
   1400049e9:	call   0x140008ce0
   1400049ee:	mov    r15,rax
   1400049f1:	test   rax,rax
   1400049f4:	je     0x140004b11
   1400049fa:	mov    rcx,QWORD PTR [rip+0xb02f]        # 0x14000fa30
   140004a01:	lea    r9,[rsp+0x44]
   140004a06:	mov    r8,r15
   140004a09:	mov    DWORD PTR [rsp+0x44],ebx
   140004a0d:	lea    edx,[rdi+0x7]
   140004a10:	movzx  eax,WORD PTR [rcx+0x248]
   140004a17:	mov    rcx,QWORD PTR [rcx+0x8]
   140004a1b:	mov    WORD PTR [rsp+0x20],ax
   140004a20:	call   0x1400080d8
   140004a25:	mov    rcx,r12
   140004a28:	call   QWORD PTR [rip+0x5832]        # 0x14000a260
   140004a2e:	mov    r9,r15
   140004a31:	xor    r8d,r8d
   140004a34:	mov    rcx,rax
   140004a37:	mov    edx,0x478
   140004a3c:	call   QWORD PTR [rip+0x585e]        # 0x14000a2a0
   140004a42:	mov    rcx,QWORD PTR [rip+0xafe7]        # 0x14000fa30
   140004a49:	lea    r9,[rsp+0x44]
   140004a4e:	mov    r8,r15
   140004a51:	mov    DWORD PTR [rsp+0x44],ebx
   140004a55:	lea    edx,[rdi+0x8]
   140004a58:	movzx  eax,WORD PTR [rcx+0x248]
   140004a5f:	mov    rcx,QWORD PTR [rcx+0x8]
   140004a63:	mov    WORD PTR [rsp+0x20],ax
   140004a68:	call   0x1400080d8
   140004a6d:	xor    r9d,r9d
   140004a70:	mov    QWORD PTR [rsp+0x20],r15
   140004a75:	mov    edx,0x3ea
   140004a7a:	lea    r8d,[rdi+0xd]
   140004a7e:	mov    rcx,r12
   140004a81:	call   QWORD PTR [rip+0x5879]        # 0x14000a300
   140004a87:	mov    rcx,QWORD PTR [rip+0xafa2]        # 0x14000fa30
   140004a8e:	lea    r9,[rsp+0x44]
   140004a93:	mov    r8,r15
   140004a96:	mov    DWORD PTR [rsp+0x44],ebx
   140004a9a:	lea    edx,[rdi+0x9]
   140004a9d:	movzx  eax,WORD PTR [rcx+0x248]
   140004aa4:	mov    rcx,QWORD PTR [rcx+0x8]
   140004aa8:	mov    WORD PTR [rsp+0x20],ax
   140004aad:	call   0x1400080d8
   140004ab2:	xor    r9d,r9d
   140004ab5:	mov    QWORD PTR [rsp+0x20],r15
   140004aba:	mov    edx,0x3eb
   140004abf:	lea    r8d,[rdi+0xd]
   140004ac3:	mov    rcx,r12
   140004ac6:	call   QWORD PTR [rip+0x5834]        # 0x14000a300
   140004acc:	mov    rcx,QWORD PTR [rip+0xaf5d]        # 0x14000fa30
   140004ad3:	lea    r9,[rsp+0x44]
   140004ad8:	mov    r8,r15
   140004adb:	mov    DWORD PTR [rsp+0x44],ebx
   140004adf:	lea    edx,[rdi+0xa]
   140004ae2:	movzx  eax,WORD PTR [rcx+0x248]
   140004ae9:	mov    rcx,QWORD PTR [rcx+0x8]
   140004aed:	mov    WORD PTR [rsp+0x20],ax
   140004af2:	call   0x1400080d8
   140004af7:	xor    r9d,r9d
   140004afa:	mov    QWORD PTR [rsp+0x20],r15
   140004aff:	mov    edx,0x3ed
   140004b04:	lea    r8d,[rdi+0xd]
   140004b08:	mov    rcx,r12
   140004b0b:	call   QWORD PTR [rip+0x57ef]        # 0x14000a300
   140004b11:	mov    ebx,0x3e8
   140004b16:	mov    rcx,r12
   140004b19:	mov    edx,ebx
   140004b1b:	call   QWORD PTR [rip+0x5737]        # 0x14000a258
   140004b21:	mov    r13d,0x1
   140004b27:	mov    rcx,rax
   140004b2a:	mov    edx,r13d
   140004b2d:	call   QWORD PTR [rip+0x56b5]        # 0x14000a1e8
   140004b33:	mov    edx,ebx
   140004b35:	mov    rcx,r12
   140004b38:	call   QWORD PTR [rip+0x571a]        # 0x14000a258
   140004b3e:	lea    edi,[r13-0x5]
   140004b42:	mov    rcx,rax
   140004b45:	mov    edx,edi
   140004b47:	call   QWORD PTR [rip+0x5733]        # 0x14000a280
   140004b4d:	mov    edx,ebx
   140004b4f:	mov    rcx,r12
   140004b52:	mov    QWORD PTR [rip+0xaf6f],rax        # 0x14000fac8
   140004b59:	call   QWORD PTR [rip+0x56f9]        # 0x14000a258
   140004b5f:	lea    r8,[rip+0xffffffffffffef6a]        # 0x140003ad0
   140004b66:	mov    edx,edi
   140004b68:	mov    rcx,rax
   140004b6b:	call   QWORD PTR [rip+0x5797]        # 0x14000a308
   140004b71:	mov    edx,ebx
   140004b73:	mov    rcx,r12
   140004b76:	call   QWORD PTR [rip+0x56dc]        # 0x14000a258
   140004b7c:	mov    r8,QWORD PTR [rip+0xaf45]        # 0x14000fac8
   140004b83:	lea    edx,[rdi-0x11]
   140004b86:	mov    rcx,rax
   140004b89:	call   QWORD PTR [rip+0x5779]        # 0x14000a308
   140004b8f:	xor    eax,eax
   140004b91:	lea    edx,[rbx+0x4]
   140004b94:	mov    r9d,ebx
   140004b97:	mov    QWORD PTR [rsp+0x20],rax
   140004b9c:	mov    r8d,0xc5
   140004ba2:	mov    rcx,r12
   140004ba5:	call   QWORD PTR [rip+0x5755]        # 0x14000a300
   140004bab:	mov    eax,DWORD PTR [r14+0x1038]
   140004bb2:	mov    edx,ebx
   140004bb4:	sub    eax,r13d
   140004bb7:	mov    rcx,QWORD PTR [r14+rax*8+0x1020]
   140004bbf:	call   QWORD PTR [rip+0x5693]        # 0x14000a258
   140004bc5:	mov    rcx,rax
   140004bc8:	lea    rdx,[rbp+0x10]
   140004bcc:	call   QWORD PTR [rip+0x56d6]        # 0x14000a2a8
   140004bd2:	mov    eax,DWORD PTR [r14+0x1038]
   140004bd9:	mov    edx,0x3e9
   140004bde:	mov    edi,DWORD PTR [rbp+0x1c]
   140004be1:	sub    eax,r13d
   140004be4:	mov    ebx,DWORD PTR [rbp+0x18]
   140004be7:	dec    edi
   140004be9:	dec    ebx
   140004beb:	mov    rcx,QWORD PTR [r14+rax*8+0x1020]
   140004bf3:	call   QWORD PTR [rip+0x565f]        # 0x14000a258
   140004bf9:	mov    DWORD PTR [rsp+0x30],0x6
   140004c01:	xor    r9d,r9d
   140004c04:	mov    rcx,rax
   140004c07:	mov    DWORD PTR [rsp+0x28],edi
   140004c0b:	xor    r8d,r8d
   140004c0e:	mov    DWORD PTR [rsp+0x20],ebx
   140004c12:	xor    edx,edx
   140004c14:	call   QWORD PTR [rip+0x5696]        # 0x14000a2b0
   140004c1a:	jmp    0x14000502a
   140004c1f:	mov    rax,QWORD PTR [rbp+0x1070]
   140004c26:	cmp    DWORD PTR [rax+0x10],0xffffff31
   140004c2d:	je     0x140004c8a
   140004c2f:	cmp    DWORD PTR [rax+0x10],0xffffff38
   140004c36:	jne    0x140005046
   140004c3c:	mov    rcx,rdx
   140004c3f:	call   QWORD PTR [rip+0x561b]        # 0x14000a260
   140004c45:	xor    r9d,r9d
   140004c48:	xor    r8d,r8d
   140004c4b:	mov    rcx,rax
   140004c4e:	mov    edx,0x470
   140004c53:	call   QWORD PTR [rip+0x565f]        # 0x14000a2b8
   140004c59:	cmp    DWORD PTR [r14+0x1070],r13d
   140004c60:	je     0x140005046
   140004c66:	mov    edx,DWORD PTR [r14+0x1058]
   140004c6d:	mov    rcx,QWORD PTR [r14+0x1050]
   140004c74:	call   QWORD PTR [rip+0x55de]        # 0x14000a258
   140004c7a:	mov    rcx,rax
   140004c7d:	xor    edx,edx
   140004c7f:	call   QWORD PTR [rip+0x55bb]        # 0x14000a240
   140004c85:	jmp    0x140005046
   140004c8a:	xor    r9d,r9d
   140004c8d:	mov    QWORD PTR [rsp+0x20],r13
   140004c92:	mov    edi,0x3ec
   140004c97:	mov    rcx,r12
   140004c9a:	mov    edx,edi
   140004c9c:	lea    r8d,[r9+0xe]
   140004ca0:	call   QWORD PTR [rip+0x565a]        # 0x14000a300
   140004ca6:	lea    ebx,[rdi-0x4]
   140004ca9:	mov    r8d,0xd
   140004caf:	cmp    eax,ebx
   140004cb1:	mov    edx,edi
   140004cb3:	mov    rcx,r12
   140004cb6:	cmova  eax,ebx
   140004cb9:	mov    r9d,eax
   140004cbc:	lea    rax,[rbp+0x20]
   140004cc0:	inc    r9
   140004cc3:	mov    QWORD PTR [rsp+0x20],rax
   140004cc8:	call   QWORD PTR [rip+0x5632]        # 0x14000a300
   140004cce:	lea    rdx,[rbp+0x20]
   140004cd2:	mov    rcx,r14
   140004cd5:	call   0x1400031d4
   140004cda:	cmp    eax,0x80030001
   140004cdf:	je     0x140004f83
   140004ce5:	or     rdi,0xffffffffffffffff
   140004ce9:	mov    r13d,0x2
   140004cef:	cmp    eax,0x80030002
   140004cf4:	jne    0x140004d82
   140004cfa:	mov    rcx,QWORD PTR [rip+0xad2f]        # 0x14000fa30
   140004d01:	lea    r9,[rsp+0x40]
   140004d06:	xor    r8d,r8d
   140004d09:	mov    DWORD PTR [rsp+0x40],r15d
   140004d0e:	lea    edx,[rdi+0x17]
   140004d11:	movzx  eax,WORD PTR [rcx+0x248]
   140004d18:	mov    rcx,QWORD PTR [rcx+0x8]
   140004d1c:	mov    WORD PTR [rsp+0x20],ax
   140004d21:	call   0x1400080d8
   140004d26:	movsxd rax,DWORD PTR [rsp+0x40]
   140004d2b:	test   eax,eax
   140004d2d:	je     0x140005046
   140004d33:	mov    rcx,rax
   140004d36:	mov    eax,r13d
   140004d39:	mul    rcx
   140004d3c:	cmovo  rax,rdi
   140004d40:	mov    rcx,rax
   140004d43:	call   0x140008ce0
   140004d48:	mov    r15,rax
   140004d4b:	test   rax,rax
   140004d4e:	je     0x140004d82
   140004d50:	mov    rcx,QWORD PTR [rip+0xacd9]        # 0x14000fa30
   140004d57:	lea    r9,[rsp+0x40]
   140004d5c:	mov    r8,r15
   140004d5f:	lea    edx,[rdi+0x17]
   140004d62:	movzx  eax,WORD PTR [rcx+0x248]
   140004d69:	mov    rcx,QWORD PTR [rcx+0x8]
   140004d6d:	mov    WORD PTR [rsp+0x20],ax
   140004d72:	call   0x1400080d8
   140004d77:	mov    rdx,r15
   140004d7a:	mov    rcx,r14
   140004d7d:	call   0x1400029b0
   140004d82:	mov    edx,DWORD PTR [r14+0x1018]
   140004d89:	lea    rcx,[r14+0x9d8]
   140004d90:	call   0x140003528
   140004d95:	xor    ecx,ecx
   140004d97:	test   eax,eax
   140004d99:	je     0x140004e33
   140004d9f:	mov    DWORD PTR [rsp+0x40],ecx
   140004da3:	lea    r9,[rsp+0x40]
   140004da8:	mov    rcx,QWORD PTR [rip+0xac81]        # 0x14000fa30
   140004daf:	xor    r8d,r8d
   140004db2:	movzx  eax,WORD PTR [rcx+0x248]
   140004db9:	lea    edx,[r8+0x14]
   140004dbd:	mov    rcx,QWORD PTR [rcx+0x8]
   140004dc1:	mov    WORD PTR [rsp+0x20],ax
   140004dc6:	call   0x1400080d8
   140004dcb:	test   r15,r15
   140004dce:	jne    0x14000502f
   140004dd4:	movsxd rcx,DWORD PTR [rsp+0x40]
   140004dd9:	mov    rax,r13
   140004ddc:	mul    rcx
   140004ddf:	cmovo  rax,rdi
   140004de3:	mov    rcx,rax
   140004de6:	call   0x140008ce0
   140004deb:	mov    r15,rax
   140004dee:	test   rax,rax
   140004df1:	je     0x140005046
   140004df7:	mov    rcx,QWORD PTR [rip+0xac32]        # 0x14000fa30
   140004dfe:	lea    r9,[rsp+0x40]
   140004e03:	mov    r8,r15
   140004e06:	mov    edx,0x14
   140004e0b:	movzx  eax,WORD PTR [rcx+0x248]
   140004e12:	mov    rcx,QWORD PTR [rcx+0x8]
   140004e16:	mov    WORD PTR [rsp+0x20],ax
   140004e1b:	call   0x1400080d8
   140004e20:	mov    rdx,r15
   140004e23:	mov    rcx,r14
   140004e26:	call   0x1400029b0
   140004e2b:	mov    rcx,r14
   140004e2e:	call   0x140003690
   140004e33:	mov    ecx,DWORD PTR [r14+0x1018]
   140004e3a:	xor    eax,eax
   140004e3c:	test   ecx,ecx
   140004e3e:	je     0x140005014
   140004e44:	mov    DWORD PTR [rsp+0x50],eax
   140004e48:	mov    eax,eax
   140004e4a:	lea    rcx,[rbp+0x20]
   140004e4e:	mov    r9,rdi
   140004e51:	mov    rdx,rbx
   140004e54:	mov    r8,QWORD PTR [r14+rax*8+0x9d8]
   140004e5c:	call   QWORD PTR [rip+0x5516]        # 0x14000a378
   140004e62:	cmp    eax,0x50
   140004e65:	je     0x14000502a
   140004e6b:	lea    rcx,[rbp+0x20]
   140004e6f:	call   QWORD PTR [rip+0x538b]        # 0x14000a200
   140004e75:	test   eax,eax
   140004e77:	je     0x140004e92
   140004e79:	mov    eax,DWORD PTR [rsp+0x50]
   140004e7d:	inc    eax
   140004e7f:	mov    DWORD PTR [rsp+0x50],eax
   140004e83:	cmp    eax,DWORD PTR [r14+0x1018]
   140004e8a:	jae    0x14000502a
   140004e90:	jmp    0x140004e48
   140004e92:	mov    rcx,QWORD PTR [rip+0xab97]        # 0x14000fa30
   140004e99:	lea    r9,[rsp+0x40]
   140004e9e:	xor    eax,eax
   140004ea0:	xor    r8d,r8d
   140004ea3:	mov    DWORD PTR [rsp+0x40],eax
   140004ea7:	movzx  eax,WORD PTR [rcx+0x248]
   140004eae:	mov    rcx,QWORD PTR [rcx+0x8]
   140004eb2:	lea    edx,[r8+0x12]
   140004eb6:	mov    WORD PTR [rsp+0x20],ax
   140004ebb:	call   0x1400080d8
   140004ec0:	movsxd rax,DWORD PTR [rsp+0x40]
   140004ec5:	test   eax,eax
   140004ec7:	je     0x14000502a
   140004ecd:	mov    rbx,rax
   140004ed0:	mov    rax,r13
   140004ed3:	mul    rbx
   140004ed6:	cmovo  rax,rdi
   140004eda:	mov    rcx,rax
   140004edd:	call   0x140008ce0
   140004ee2:	mov    r15,rax
   140004ee5:	xor    eax,eax
   140004ee7:	test   r15,r15
   140004eea:	je     0x140005046
   140004ef0:	lea    rdx,[rbp+0x20]
   140004ef4:	mov    rcx,rdi
   140004ef7:	inc    rcx
   140004efa:	cmp    WORD PTR [rdx+rcx*2],ax
   140004efe:	jne    0x140004ef7
   140004f00:	add    rcx,rbx
   140004f03:	mov    rax,r13
   140004f06:	mul    rcx
   140004f09:	cmovo  rax,rdi
   140004f0d:	mov    rcx,rax
   140004f10:	call   0x140008ce0
   140004f15:	mov    rsi,rax
   140004f18:	test   rax,rax
   140004f1b:	je     0x14000502a
   140004f21:	mov    rcx,QWORD PTR [rip+0xab08]        # 0x14000fa30
   140004f28:	lea    r9,[rsp+0x40]
   140004f2d:	mov    r8,r15
   140004f30:	mov    edx,0x12
   140004f35:	movzx  eax,WORD PTR [rcx+0x248]
   140004f3c:	mov    rcx,QWORD PTR [rcx+0x8]
   140004f40:	mov    WORD PTR [rsp+0x20],ax
   140004f45:	call   0x1400080d8
   140004f4a:	lea    rcx,[rbp+0x20]
   140004f4e:	mov    rdx,rdi
   140004f51:	xor    eax,eax
   140004f53:	inc    rdx
   140004f56:	cmp    WORD PTR [rcx+rdx*2],ax
   140004f5a:	jne    0x140004f53
   140004f5c:	movsxd rax,DWORD PTR [rsp+0x40]
   140004f61:	lea    r9,[rbp+0x20]
   140004f65:	add    rdx,rax
   140004f68:	mov    r8,r15
   140004f6b:	mov    rcx,rsi
   140004f6e:	call   0x140001b34
   140004f73:	test   eax,eax
   140004f75:	js     0x14000502a
   140004f7b:	mov    rdx,rsi
   140004f7e:	jmp    0x14000500c
   140004f83:	mov    rcx,QWORD PTR [rip+0xaaa6]        # 0x14000fa30
   140004f8a:	lea    r9,[rsp+0x40]
   140004f8f:	xor    r8d,r8d
   140004f92:	mov    DWORD PTR [rsp+0x40],r13d
   140004f97:	movzx  eax,WORD PTR [rcx+0x248]
   140004f9e:	mov    rcx,QWORD PTR [rcx+0x8]
   140004fa2:	lea    ebx,[r8+0x11]
   140004fa6:	mov    edx,ebx
   140004fa8:	mov    WORD PTR [rsp+0x20],ax
   140004fad:	call   0x1400080d8
   140004fb2:	movsxd rax,DWORD PTR [rsp+0x40]
   140004fb7:	test   eax,eax
   140004fb9:	je     0x140005046
   140004fbf:	mov    rcx,rax
   140004fc2:	mov    rdi,0xffffffffffffffff
   140004fc9:	lea    eax,[rbx-0xf]
   140004fcc:	mul    rcx
   140004fcf:	cmovo  rax,rdi
   140004fd3:	mov    rcx,rax
   140004fd6:	call   0x140008ce0
   140004fdb:	mov    r15,rax
   140004fde:	test   rax,rax
   140004fe1:	je     0x140005014
   140004fe3:	mov    rcx,QWORD PTR [rip+0xaa46]        # 0x14000fa30
   140004fea:	lea    r9,[rsp+0x40]
   140004fef:	mov    r8,r15
   140004ff2:	mov    edx,ebx
   140004ff4:	movzx  eax,WORD PTR [rcx+0x248]
   140004ffb:	mov    rcx,QWORD PTR [rcx+0x8]
   140004fff:	mov    WORD PTR [rsp+0x20],ax
   140005004:	call   0x1400080d8
   140005009:	mov    rdx,r15
   14000500c:	mov    rcx,r14
   14000500f:	call   0x1400029b0
   140005014:	mov    r8,rdi
   140005017:	xor    edx,edx
   140005019:	mov    rcx,r12
   14000501c:	call   QWORD PTR [rip+0x52e6]        # 0x14000a308
   140005022:	mov    DWORD PTR [rsp+0x48],0x1
   14000502a:	test   r15,r15
   14000502d:	je     0x140005038
   14000502f:	mov    rcx,r15
   140005032:	call   QWORD PTR [rip+0x5338]        # 0x14000a370
   140005038:	test   rsi,rsi
   14000503b:	je     0x140005046
   14000503d:	mov    rcx,rsi
   140005040:	call   QWORD PTR [rip+0x532a]        # 0x14000a370
   140005046:	mov    eax,DWORD PTR [rsp+0x48]
   14000504a:	mov    rcx,QWORD PTR [rbp+0x1000]
   140005051:	xor    rcx,rsp
   140005054:	call   0x1400090a0
   140005059:	mov    rbx,QWORD PTR [rsp+0x1160]
   140005061:	add    rsp,0x1110
   140005068:	pop    r15
   14000506a:	pop    r14
   14000506c:	pop    r13
   14000506e:	pop    r12
   140005070:	pop    rdi
   140005071:	pop    rsi
   140005072:	pop    rbp
   140005073:	ret    
   140005074:	call   0x140009368
   140005079:	int3   
   14000507a:	call   0x140009368
   14000507f:	int3   
   140005080:	int3   
   140005081:	int3   
   140005082:	int3   
   140005083:	int3   
   140005084:	int3   
   140005085:	int3   
   140005086:	int3   
   140005087:	int3   
   140005088:	mov    QWORD PTR [rsp+0x8],rbx
   14000508d:	push   rdi
   14000508e:	sub    rsp,0x20
   140005092:	xor    ebx,ebx
   140005094:	mov    rdi,rcx
   140005097:	test   edx,edx
   140005099:	je     0x140005105
   14000509b:	cmp    QWORD PTR [rip+0xa986],rbx        # 0x14000fa28
   1400050a2:	jne    0x140005156
   1400050a8:	cmp    QWORD PTR [rip+0xa971],rbx        # 0x14000fa20
   1400050af:	jne    0x140005156
   1400050b5:	mov    edx,0x7f8a
   1400050ba:	xor    ecx,ecx
   1400050bc:	call   QWORD PTR [rip+0x51fe]        # 0x14000a2c0
   1400050c2:	mov    edx,0xfffffff4
   1400050c7:	mov    rcx,rdi
   1400050ca:	mov    r8,rax
   1400050cd:	mov    rbx,rax
   1400050d0:	call   QWORD PTR [rip+0x51f2]        # 0x14000a2c8
   1400050d6:	mov    edx,0x3f3
   1400050db:	mov    rcx,rdi
   1400050de:	mov    QWORD PTR [rip+0xa943],rax        # 0x14000fa28
   1400050e5:	call   QWORD PTR [rip+0x516d]        # 0x14000a258
   1400050eb:	mov    r8,rbx
   1400050ee:	mov    edx,0xfffffff4
   1400050f3:	mov    rcx,rax
   1400050f6:	call   QWORD PTR [rip+0x51cc]        # 0x14000a2c8
   1400050fc:	mov    QWORD PTR [rip+0xa91d],rax        # 0x14000fa20
   140005103:	jmp    0x140005156
   140005105:	mov    r8,QWORD PTR [rip+0xa91c]        # 0x14000fa28
   14000510c:	test   r8,r8
   14000510f:	je     0x140005156
   140005111:	cmp    QWORD PTR [rip+0xa908],rbx        # 0x14000fa20
   140005118:	je     0x140005156
   14000511a:	mov    edx,0xfffffff4
   14000511f:	call   QWORD PTR [rip+0x51a3]        # 0x14000a2c8
   140005125:	mov    edx,0x3f3
   14000512a:	mov    rcx,rdi
   14000512d:	call   QWORD PTR [rip+0x5125]        # 0x14000a258
   140005133:	mov    r8,QWORD PTR [rip+0xa8e6]        # 0x14000fa20
   14000513a:	mov    edx,0xfffffff4
   14000513f:	mov    rcx,rax
   140005142:	call   QWORD PTR [rip+0x5180]        # 0x14000a2c8
   140005148:	mov    QWORD PTR [rip+0xa8d9],rbx        # 0x14000fa28
   14000514f:	mov    QWORD PTR [rip+0xa8ca],rbx        # 0x14000fa20
   140005156:	mov    rbx,QWORD PTR [rsp+0x30]
   14000515b:	add    rsp,0x20
   14000515f:	pop    rdi
   140005160:	ret    
   140005161:	int3   
   140005162:	int3   
   140005163:	int3   
   140005164:	int3   
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	mov    QWORD PTR [rsp+0x20],r9
   14000516d:	push   rbp
   14000516e:	push   rbx
   14000516f:	push   rsi
   140005170:	push   rdi
   140005171:	push   r12
   140005173:	push   r13
   140005175:	push   r14
   140005177:	push   r15
   140005179:	mov    rbp,rsp
   14000517c:	sub    rsp,0x68
   140005180:	xor    r12d,r12d
   140005183:	mov    DWORD PTR [rcx+0x1038],0x2
   14000518d:	mov    rsi,rdx
   140005190:	mov    rdi,rcx
   140005193:	mov    r15d,r12d
   140005196:	mov    r14d,r12d
   140005199:	lea    r13d,[r12+0x1]
   14000519e:	mov    DWORD PTR [rbp+0x48],r13d
   1400051a2:	mov    QWORD PTR [rcx+0x1028],rdx
   1400051a9:	sub    r8d,0x4e
   1400051ad:	je     0x14000562a
   1400051b3:	sub    r8d,0xc2
   1400051ba:	je     0x14000539c
   1400051c0:	sub    r8d,0x7ef1
   1400051c7:	je     0x1400051f0
   1400051c9:	cmp    r8d,r13d
   1400051cc:	jne    0x14000587c
   1400051d2:	mov    rax,QWORD PTR [rip+0xa857]        # 0x14000fa30
   1400051d9:	mov    edx,r13d
   1400051dc:	mov    rcx,rsi
   1400051df:	mov    DWORD PTR [rax+0x24c],r13d
   1400051e6:	call   0x140005088
   1400051eb:	jmp    0x14000587c
   1400051f0:	mov    r8,QWORD PTR [rip+0xa831]        # 0x14000fa28
   1400051f7:	test   r8,r8
   1400051fa:	je     0x140005243
   1400051fc:	cmp    QWORD PTR [rip+0xa81d],r12        # 0x14000fa20
   140005203:	je     0x140005243
   140005205:	mov    ebx,0xfffffff4
   14000520a:	mov    rcx,rsi
   14000520d:	mov    edx,ebx
   14000520f:	call   QWORD PTR [rip+0x50b3]        # 0x14000a2c8
   140005215:	mov    edx,0x3f3
   14000521a:	mov    rcx,rsi
   14000521d:	call   QWORD PTR [rip+0x5035]        # 0x14000a258
   140005223:	mov    r8,QWORD PTR [rip+0xa7f6]        # 0x14000fa20
   14000522a:	mov    edx,ebx
   14000522c:	mov    rcx,rax
   14000522f:	call   QWORD PTR [rip+0x5093]        # 0x14000a2c8
   140005235:	mov    QWORD PTR [rip+0xa7ec],r12        # 0x14000fa28
   14000523c:	mov    QWORD PTR [rip+0xa7dd],r12        # 0x14000fa20
   140005243:	mov    rcx,QWORD PTR [rdi+0x1040]
   14000524a:	test   rcx,rcx
   14000524d:	je     0x1400052a8
   14000524f:	jmp    0x140005286
   140005251:	cmp    DWORD PTR [rbp+0x60],0x103
   140005258:	jne    0x140005294
   14000525a:	xor    r9d,r9d
   14000525d:	mov    DWORD PTR [rsp+0x20],r13d
   140005262:	xor    r8d,r8d
   140005265:	lea    rcx,[rbp-0x38]
   140005269:	xor    edx,edx
   14000526b:	call   QWORD PTR [rip+0x505f]        # 0x14000a2d0
   140005271:	test   eax,eax
   140005273:	je     0x14000527f
   140005275:	lea    rcx,[rbp-0x38]
   140005279:	call   QWORD PTR [rip+0x5059]        # 0x14000a2d8
   14000527f:	mov    rcx,QWORD PTR [rdi+0x1040]
   140005286:	lea    rdx,[rbp+0x60]
   14000528a:	call   QWORD PTR [rip+0x4e88]        # 0x14000a118
   140005290:	test   eax,eax
   140005292:	jne    0x140005251
   140005294:	mov    rcx,QWORD PTR [rdi+0x1040]
   14000529b:	call   QWORD PTR [rip+0x4ef7]        # 0x14000a198
   1400052a1:	mov    QWORD PTR [rdi+0x1040],r12
   1400052a8:	mov    rax,QWORD PTR [rip+0xa781]        # 0x14000fa30
   1400052af:	mov    rcx,QWORD PTR [rax+0x38]
   1400052b3:	test   rcx,rcx
   1400052b6:	je     0x1400052c9
   1400052b8:	call   QWORD PTR [rip+0x50ca]        # 0x14000a388
   1400052be:	mov    rax,QWORD PTR [rip+0xa76b]        # 0x14000fa30
   1400052c5:	mov    QWORD PTR [rax+0x38],r12
   1400052c9:	mov    rcx,rsi
   1400052cc:	call   QWORD PTR [rip+0x4f8e]        # 0x14000a260
   1400052d2:	mov    r9d,0x2
   1400052d8:	xor    r8d,r8d
   1400052db:	mov    rcx,rax
   1400052de:	mov    edx,0x470
   1400052e3:	call   QWORD PTR [rip+0x4fcf]        # 0x14000a2b8
   1400052e9:	cmp    DWORD PTR [rdi+0x1070],r12d
   1400052f0:	je     0x14000587c
   1400052f6:	mov    rcx,QWORD PTR [rip+0xa733]        # 0x14000fa30
   1400052fd:	lea    r9,[rbp+0x58]
   140005301:	xor    r8d,r8d
   140005304:	mov    DWORD PTR [rbp+0x58],r12d
   140005308:	movzx  eax,WORD PTR [rcx+0x248]
   14000530f:	mov    rcx,QWORD PTR [rcx+0x8]
   140005313:	lea    ebx,[r8+0x19]
   140005317:	mov    edx,ebx
   140005319:	mov    WORD PTR [rsp+0x20],ax
   14000531e:	call   0x1400080d8
   140005323:	movsxd rcx,DWORD PTR [rbp+0x58]
   140005327:	lea    eax,[rbx-0x17]
   14000532a:	mul    rcx
   14000532d:	mov    rcx,0xffffffffffffffff
   140005334:	cmovo  rax,rcx
   140005338:	mov    rcx,rax
   14000533b:	call   0x140008ce0
   140005340:	mov    r14,rax
   140005343:	test   rax,rax
   140005346:	je     0x14000587c
   14000534c:	mov    rcx,QWORD PTR [rip+0xa6dd]        # 0x14000fa30
   140005353:	lea    r9,[rbp+0x58]
   140005357:	mov    r8,r14
   14000535a:	mov    edx,ebx
   14000535c:	movzx  eax,WORD PTR [rcx+0x248]
   140005363:	mov    rcx,QWORD PTR [rcx+0x8]
   140005367:	mov    WORD PTR [rsp+0x20],ax
   14000536c:	call   0x1400080d8
   140005371:	mov    edx,DWORD PTR [rdi+0x1064]
   140005377:	mov    rcx,QWORD PTR [rdi+0x1050]
   14000537e:	call   QWORD PTR [rip+0x4ed4]        # 0x14000a258
   140005384:	mov    rcx,rax
   140005387:	mov    rdx,r14
   14000538a:	call   QWORD PTR [rip+0x4f50]        # 0x14000a2e0
   140005390:	mov    DWORD PTR [rdi+0x1074],r13d
   140005397:	jmp    0x14000586e
   14000539c:	mov    rcx,QWORD PTR [rip+0xa68d]        # 0x14000fa30
   1400053a3:	lea    r9,[rbp+0x68]
   1400053a7:	xor    r8d,r8d
   1400053aa:	mov    DWORD PTR [rbp+0x68],r12d
   1400053ae:	movzx  eax,WORD PTR [rcx+0x248]
   1400053b5:	mov    DWORD PTR [rcx+0x24c],r12d
   1400053bc:	lea    edx,[r8+0xa]
   1400053c0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400053c4:	mov    WORD PTR [rsp+0x20],ax
   1400053c9:	call   0x1400080d8
   1400053ce:	mov    rcx,QWORD PTR [rip+0xa65b]        # 0x14000fa30
   1400053d5:	lea    r9,[rbp+0x58]
   1400053d9:	xor    r8d,r8d
   1400053dc:	mov    DWORD PTR [rbp+0x58],r12d
   1400053e0:	movzx  eax,WORD PTR [rcx+0x248]
   1400053e7:	mov    rcx,QWORD PTR [rcx+0x8]
   1400053eb:	lea    edx,[r8+0xb]
   1400053ef:	mov    WORD PTR [rsp+0x20],ax
   1400053f4:	call   0x1400080d8
   1400053f9:	mov    rcx,QWORD PTR [rip+0xa630]        # 0x14000fa30
   140005400:	lea    r9,[rbp+0x58]
   140005404:	mov    ebx,DWORD PTR [rbp+0x68]
   140005407:	cmp    DWORD PTR [rbp+0x58],ebx
   14000540a:	cmovg  ebx,DWORD PTR [rbp+0x58]
   14000540e:	xor    r8d,r8d
   140005411:	movzx  eax,WORD PTR [rcx+0x248]
   140005418:	mov    rcx,QWORD PTR [rcx+0x8]
   14000541c:	mov    DWORD PTR [rbp+0x58],r12d
   140005420:	lea    r13d,[r8+0xc]
   140005424:	mov    WORD PTR [rsp+0x20],ax
   140005429:	mov    edx,r13d
   14000542c:	call   0x1400080d8
   140005431:	mov    rcx,QWORD PTR [rip+0xa5f8]        # 0x14000fa30
   140005438:	lea    r9,[rbp+0x58]
   14000543c:	cmp    DWORD PTR [rbp+0x58],ebx
   14000543f:	lea    edx,[r13+0x2]
   140005443:	cmovg  ebx,DWORD PTR [rbp+0x58]
   140005447:	xor    r8d,r8d
   14000544a:	movzx  eax,WORD PTR [rcx+0x248]
   140005451:	mov    rcx,QWORD PTR [rcx+0x8]
   140005455:	mov    WORD PTR [rsp+0x20],ax
   14000545a:	mov    DWORD PTR [rbp+0x58],r12d
   14000545e:	call   0x1400080d8
   140005463:	cmp    DWORD PTR [rbp+0x58],ebx
   140005466:	cmovg  ebx,DWORD PTR [rbp+0x58]
   14000546a:	test   ebx,ebx
   14000546c:	je     0x14000587c
   140005472:	movsxd rcx,ebx
   140005475:	lea    eax,[r13-0xa]
   140005479:	mul    rcx
   14000547c:	mov    rcx,0xffffffffffffffff
   140005483:	cmovo  rax,rcx
   140005487:	mov    rcx,rax
   14000548a:	call   0x140008ce0
   14000548f:	mov    r14,rax
   140005492:	test   rax,rax
   140005495:	je     0x1400055a6
   14000549b:	mov    rcx,QWORD PTR [rip+0xa58e]        # 0x14000fa30
   1400054a2:	lea    r9,[rbp+0x58]
   1400054a6:	mov    r8,r14
   1400054a9:	mov    DWORD PTR [rbp+0x58],ebx
   1400054ac:	lea    edx,[r13-0x2]
   1400054b0:	movzx  eax,WORD PTR [rcx+0x248]
   1400054b7:	mov    rcx,QWORD PTR [rcx+0x8]
   1400054bb:	mov    WORD PTR [rsp+0x20],ax
   1400054c0:	call   0x1400080d8
   1400054c5:	xor    r9d,r9d
   1400054c8:	mov    QWORD PTR [rsp+0x20],r14
   1400054cd:	mov    r8d,r13d
   1400054d0:	mov    edx,0x3ed
   1400054d5:	mov    rcx,rsi
   1400054d8:	call   QWORD PTR [rip+0x4e22]        # 0x14000a300
   1400054de:	mov    rcx,QWORD PTR [rip+0xa54b]        # 0x14000fa30
   1400054e5:	lea    r9,[rbp+0x58]
   1400054e9:	mov    r8,r14
   1400054ec:	mov    DWORD PTR [rbp+0x58],ebx
   1400054ef:	lea    edx,[r13-0x1]
   1400054f3:	movzx  eax,WORD PTR [rcx+0x248]
   1400054fa:	mov    rcx,QWORD PTR [rcx+0x8]
   1400054fe:	mov    WORD PTR [rsp+0x20],ax
   140005503:	call   0x1400080d8
   140005508:	xor    r9d,r9d
   14000550b:	mov    QWORD PTR [rsp+0x20],r14
   140005510:	mov    r8d,r13d
   140005513:	mov    edx,0x3ef
   140005518:	mov    rcx,rsi
   14000551b:	call   QWORD PTR [rip+0x4ddf]        # 0x14000a300
   140005521:	mov    rcx,QWORD PTR [rip+0xa508]        # 0x14000fa30
   140005528:	lea    r9,[rbp+0x58]
   14000552c:	mov    r8,r14
   14000552f:	mov    DWORD PTR [rbp+0x58],ebx
   140005532:	mov    edx,r13d
   140005535:	movzx  eax,WORD PTR [rcx+0x248]
   14000553c:	mov    rcx,QWORD PTR [rcx+0x8]
   140005540:	mov    WORD PTR [rsp+0x20],ax
   140005545:	call   0x1400080d8
   14000554a:	xor    r9d,r9d
   14000554d:	mov    QWORD PTR [rsp+0x20],r14
   140005552:	mov    r8d,r13d
   140005555:	mov    edx,0x3f0
   14000555a:	mov    rcx,rsi
   14000555d:	call   QWORD PTR [rip+0x4d9d]        # 0x14000a300
   140005563:	mov    rcx,QWORD PTR [rip+0xa4c6]        # 0x14000fa30
   14000556a:	lea    r9,[rbp+0x58]
   14000556e:	mov    r8,r14
   140005571:	mov    DWORD PTR [rbp+0x58],ebx
   140005574:	lea    edx,[r13+0x2]
   140005578:	movzx  eax,WORD PTR [rcx+0x248]
   14000557f:	mov    rcx,QWORD PTR [rcx+0x8]
   140005583:	mov    WORD PTR [rsp+0x20],ax
   140005588:	call   0x1400080d8
   14000558d:	xor    r9d,r9d
   140005590:	mov    QWORD PTR [rsp+0x20],r14
   140005595:	mov    r8d,r13d
   140005598:	mov    edx,0x3f1
   14000559d:	mov    rcx,rsi
   1400055a0:	call   QWORD PTR [rip+0x4d5a]        # 0x14000a300
   1400055a6:	mov    rax,QWORD PTR [rip+0xa483]        # 0x14000fa30
   1400055ad:	mov    rcx,rdi
   1400055b0:	mov    DWORD PTR [rax+0x20],r12d
   1400055b4:	call   0x140003870
   1400055b9:	mov    DWORD PTR [rdi+0x1048],eax
   1400055bf:	mov    ecx,0x14
   1400055c4:	mov    rax,QWORD PTR [rip+0xa465]        # 0x14000fa30
   1400055cb:	mov    DWORD PTR [rax+0x1c],r12d
   1400055cf:	call   0x140008ca8
   1400055d4:	mov    QWORD PTR [rbp+0x68],rax
   1400055d8:	mov    rcx,rax
   1400055db:	test   rax,rax
   1400055de:	je     0x1400055ed
   1400055e0:	mov    QWORD PTR [rax],r12
   1400055e3:	mov    QWORD PTR [rax+0x8],r12
   1400055e7:	mov    DWORD PTR [rax+0x10],r12d
   1400055eb:	jmp    0x1400055f0
   1400055ed:	mov    rcx,r12
   1400055f0:	mov    rax,QWORD PTR [rip+0xa439]        # 0x14000fa30
   1400055f7:	lea    r9,[rbp+0x48]
   1400055fb:	lea    r8,[rip+0xffffffffffffe36e]        # 0x140003970
   140005602:	xor    edx,edx
   140005604:	mov    QWORD PTR [rax+0x38],rcx
   140005608:	lea    rax,[rbp+0x50]
   14000560c:	mov    QWORD PTR [rsp+0x28],rax
   140005611:	xor    ecx,ecx
   140005613:	mov    DWORD PTR [rsp+0x20],r12d
   140005618:	call   QWORD PTR [rip+0x4b12]        # 0x14000a130
   14000561e:	mov    QWORD PTR [rdi+0x1040],rax
   140005625:	jmp    0x14000586e
   14000562a:	mov    rax,QWORD PTR [rbp+0x68]
   14000562e:	cmp    DWORD PTR [rax+0x10],0xffffff2f
   140005635:	je     0x140005690
   140005637:	cmp    DWORD PTR [rax+0x10],0xffffff38
   14000563e:	jne    0x14000587c
   140005644:	mov    rcx,rdx
   140005647:	call   QWORD PTR [rip+0x4c13]        # 0x14000a260
   14000564d:	xor    r9d,r9d
   140005650:	xor    r8d,r8d
   140005653:	mov    rcx,rax
   140005656:	mov    edx,0x470
   14000565b:	call   QWORD PTR [rip+0x4c57]        # 0x14000a2b8
   140005661:	cmp    DWORD PTR [rdi+0x1070],r12d
   140005668:	je     0x140005688
   14000566a:	mov    edx,DWORD PTR [rdi+0x1058]
   140005670:	mov    rcx,QWORD PTR [rdi+0x1050]
   140005677:	call   QWORD PTR [rip+0x4bdb]        # 0x14000a258
   14000567d:	mov    rcx,rax
   140005680:	xor    edx,edx
   140005682:	call   QWORD PTR [rip+0x4bb8]        # 0x14000a240
   140005688:	mov    r15d,r13d
   14000568b:	jmp    0x14000587c
   140005690:	mov    r8,QWORD PTR [rip+0xa391]        # 0x14000fa28
   140005697:	test   r8,r8
   14000569a:	je     0x1400056e3
   14000569c:	cmp    QWORD PTR [rip+0xa37d],r12        # 0x14000fa20
   1400056a3:	je     0x1400056e3
   1400056a5:	mov    ebx,0xfffffff4
   1400056aa:	mov    rcx,rsi
   1400056ad:	mov    edx,ebx
   1400056af:	call   QWORD PTR [rip+0x4c13]        # 0x14000a2c8
   1400056b5:	mov    edx,0x3f3
   1400056ba:	mov    rcx,rsi
   1400056bd:	call   QWORD PTR [rip+0x4b95]        # 0x14000a258
   1400056c3:	mov    r8,QWORD PTR [rip+0xa356]        # 0x14000fa20
   1400056ca:	mov    edx,ebx
   1400056cc:	mov    rcx,rax
   1400056cf:	call   QWORD PTR [rip+0x4bf3]        # 0x14000a2c8
   1400056d5:	mov    QWORD PTR [rip+0xa34c],r12        # 0x14000fa28
   1400056dc:	mov    QWORD PTR [rip+0xa33d],r12        # 0x14000fa20
   1400056e3:	cmp    DWORD PTR [rdi+0x1070],r12d
   1400056ea:	je     0x140005718
   1400056ec:	cmp    DWORD PTR [rdi+0x1074],r12d
   1400056f3:	je     0x140005718
   1400056f5:	mov    rcx,rsi
   1400056f8:	call   QWORD PTR [rip+0x4b62]        # 0x14000a260
   1400056fe:	xor    r9d,r9d
   140005701:	mov    edx,0x471
   140005706:	mov    rcx,rax
   140005709:	lea    r8d,[r9+0x2]
   14000570d:	call   QWORD PTR [rip+0x4ba5]        # 0x14000a2b8
   140005713:	jmp    0x14000587c
   140005718:	mov    rcx,QWORD PTR [rdi+0x1040]
   14000571f:	call   QWORD PTR [rip+0x4a03]        # 0x14000a128
   140005725:	mov    rax,QWORD PTR [rip+0xa304]        # 0x14000fa30
   14000572c:	mov    rbx,QWORD PTR [rax+0x8]
   140005730:	mov    eax,DWORD PTR [rdi+0x1038]
   140005736:	sub    eax,r13d
   140005739:	mov    rcx,QWORD PTR [rdi+rax*8+0x1020]
   140005741:	call   QWORD PTR [rip+0x4b19]        # 0x14000a260
   140005747:	lea    r9,[rip+0xffffffffffffd342]        # 0x140002a90
   14000574e:	mov    QWORD PTR [rsp+0x20],r12
   140005753:	mov    r8,rax
   140005756:	mov    edx,0x69
   14000575b:	mov    rcx,rbx
   14000575e:	call   QWORD PTR [rip+0x4bac]        # 0x14000a310
   140005764:	cmp    eax,0x6
   140005767:	jne    0x140005845
   14000576d:	mov    rcx,QWORD PTR [rdi+0x1040]
   140005774:	call   QWORD PTR [rip+0x49a6]        # 0x14000a120
   14000577a:	mov    rbx,QWORD PTR [rip+0xa2af]        # 0x14000fa30
   140005781:	mov    DWORD PTR [rbx+0x1c],r13d
   140005785:	mov    rcx,QWORD PTR [rdi+0x1040]
   14000578c:	test   rcx,rcx
   14000578f:	je     0x1400057f1
   140005791:	jmp    0x1400057c8
   140005793:	cmp    DWORD PTR [rbp+0x60],0x103
   14000579a:	jne    0x1400057d6
   14000579c:	xor    r9d,r9d
   14000579f:	mov    DWORD PTR [rsp+0x20],r13d
   1400057a4:	xor    r8d,r8d
   1400057a7:	lea    rcx,[rbp-0x38]
   1400057ab:	xor    edx,edx
   1400057ad:	call   QWORD PTR [rip+0x4b1d]        # 0x14000a2d0
   1400057b3:	test   eax,eax
   1400057b5:	je     0x1400057c1
   1400057b7:	lea    rcx,[rbp-0x38]
   1400057bb:	call   QWORD PTR [rip+0x4b17]        # 0x14000a2d8
   1400057c1:	mov    rcx,QWORD PTR [rdi+0x1040]
   1400057c8:	lea    rdx,[rbp+0x60]
   1400057cc:	call   QWORD PTR [rip+0x4946]        # 0x14000a118
   1400057d2:	test   eax,eax
   1400057d4:	jne    0x140005793
   1400057d6:	mov    rcx,QWORD PTR [rdi+0x1040]
   1400057dd:	call   QWORD PTR [rip+0x49b5]        # 0x14000a198
   1400057e3:	mov    rbx,QWORD PTR [rip+0xa246]        # 0x14000fa30
   1400057ea:	mov    QWORD PTR [rdi+0x1040],r12
   1400057f1:	mov    rcx,QWORD PTR [rbx+0x38]
   1400057f5:	test   rcx,rcx
   1400057f8:	je     0x14000580b
   1400057fa:	call   QWORD PTR [rip+0x4b88]        # 0x14000a388
   140005800:	mov    rbx,QWORD PTR [rip+0xa229]        # 0x14000fa30
   140005807:	mov    QWORD PTR [rbx+0x38],r12
   14000580b:	mov    eax,DWORD PTR [rdi+0x1038]
   140005811:	mov    rbx,QWORD PTR [rbx+0x8]
   140005815:	sub    eax,r13d
   140005818:	mov    rcx,QWORD PTR [rdi+rax*8+0x1020]
   140005820:	call   QWORD PTR [rip+0x4a3a]        # 0x14000a260
   140005826:	lea    r9,[rip+0xffffffffffffd2d3]        # 0x140002b00
   14000582d:	mov    QWORD PTR [rsp+0x20],r12
   140005832:	mov    r8,rax
   140005835:	mov    edx,0x6b
   14000583a:	mov    rcx,rbx
   14000583d:	call   QWORD PTR [rip+0x4acd]        # 0x14000a310
   140005843:	jmp    0x14000586b
   140005845:	mov    edx,r13d
   140005848:	mov    rcx,rsi
   14000584b:	call   0x140005088
   140005850:	mov    rcx,QWORD PTR [rdi+0x1040]
   140005857:	call   QWORD PTR [rip+0x48c3]        # 0x14000a120
   14000585d:	mov    r8,r13
   140005860:	xor    edx,edx
   140005862:	mov    rcx,rsi
   140005865:	call   QWORD PTR [rip+0x4a9d]        # 0x14000a308
   14000586b:	mov    r15d,r13d
   14000586e:	test   r14,r14
   140005871:	je     0x14000587c
   140005873:	mov    rcx,r14
   140005876:	call   QWORD PTR [rip+0x4af4]        # 0x14000a370
   14000587c:	mov    eax,r15d
   14000587f:	add    rsp,0x68
   140005883:	pop    r15
   140005885:	pop    r14
   140005887:	pop    r13
   140005889:	pop    r12
   14000588b:	pop    rdi
   14000588c:	pop    rsi
   14000588d:	pop    rbx
   14000588e:	pop    rbp
   14000588f:	ret    
   140005890:	int3   
   140005891:	int3   
   140005892:	int3   
   140005893:	int3   
   140005894:	int3   
   140005895:	int3   
   140005896:	int3   
   140005897:	int3   
   140005898:	mov    QWORD PTR [rsp+0x8],rbx
   14000589d:	mov    QWORD PTR [rsp+0x10],rbp
   1400058a2:	push   rsi
   1400058a3:	push   rdi
   1400058a4:	push   r15
   1400058a6:	sub    rsp,0x30
   1400058aa:	xor    esi,esi
   1400058ac:	mov    DWORD PTR [rcx+0x1038],0x3
   1400058b6:	xor    edi,edi
   1400058b8:	mov    QWORD PTR [rcx+0x1030],rdx
   1400058bf:	mov    rbp,rdx
   1400058c2:	mov    rbx,rcx
   1400058c5:	cmp    r8d,0x4e
   1400058c9:	je     0x1400059d4
   1400058cf:	cmp    r8d,0x110
   1400058d6:	jne    0x140005a9d
   1400058dc:	mov    rcx,QWORD PTR [rip+0xa14d]        # 0x14000fa30
   1400058e3:	lea    r9,[rsp+0x60]
   1400058e8:	and    DWORD PTR [rsp+0x60],esi
   1400058ec:	lea    edx,[rsi+0xd]
   1400058ef:	xor    r8d,r8d
   1400058f2:	movzx  eax,WORD PTR [rcx+0x248]
   1400058f9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400058fd:	mov    WORD PTR [rsp+0x20],ax
   140005902:	call   0x1400080d8
   140005907:	movsxd rdi,DWORD PTR [rsp+0x60]
   14000590c:	test   edi,edi
   14000590e:	je     0x140005a9d
   140005914:	lea    ebx,[rsi+0x2]
   140005917:	mov    eax,ebx
   140005919:	lea    r15,[rsi-0x1]
   14000591d:	mul    rdi
   140005920:	cmovo  rax,r15
   140005924:	mov    rcx,rax
   140005927:	call   0x140008ce0
   14000592c:	mov    rsi,rax
   14000592f:	test   rax,rax
   140005932:	je     0x140005a9d
   140005938:	lea    ecx,[rdi+0xb]
   14000593b:	mov    eax,ebx
   14000593d:	movsxd rdx,ecx
   140005940:	mul    rdx
   140005943:	cmovo  rax,r15
   140005947:	mov    rcx,rax
   14000594a:	call   0x140008ce0
   14000594f:	mov    rdi,rax
   140005952:	test   rax,rax
   140005955:	je     0x140005a81
   14000595b:	mov    rcx,QWORD PTR [rip+0xa0ce]        # 0x14000fa30
   140005962:	lea    r9,[rsp+0x60]
   140005967:	lea    edx,[rbx+0xb]
   14000596a:	movzx  r8d,WORD PTR [rcx+0x248]
   140005972:	mov    rcx,QWORD PTR [rcx+0x8]
   140005976:	mov    WORD PTR [rsp+0x20],r8w
   14000597c:	mov    r8,rsi
   14000597f:	call   0x1400080d8
   140005984:	mov    rcx,QWORD PTR [rip+0xa0a5]        # 0x14000fa30
   14000598b:	mov    r8,rsi
   14000598e:	mov    eax,DWORD PTR [rsp+0x60]
   140005992:	add    eax,0xb
   140005995:	movsxd rdx,eax
   140005998:	mov    eax,DWORD PTR [rcx+0x28]
   14000599b:	mov    r9d,DWORD PTR [rcx+0x24]
   14000599f:	mov    DWORD PTR [rsp+0x28],eax
   1400059a3:	mov    eax,DWORD PTR [rcx+0x20]
   1400059a6:	mov    rcx,rdi
   1400059a9:	shr    r9d,1
   1400059ac:	mov    DWORD PTR [rsp+0x20],eax
   1400059b0:	call   0x140001b34
   1400059b5:	xor    r9d,r9d
   1400059b8:	mov    QWORD PTR [rsp+0x20],rdi
   1400059bd:	mov    edx,0x3f5
   1400059c2:	lea    r8d,[rbx+0xa]
   1400059c6:	mov    rcx,rbp
   1400059c9:	call   QWORD PTR [rip+0x4931]        # 0x14000a300
   1400059cf:	jmp    0x140005a81
   1400059d4:	mov    rax,QWORD PTR [rsp+0x70]
   1400059d9:	cmp    DWORD PTR [rax+0x10],0xffffff2f
   1400059e0:	je     0x140005a53
   1400059e2:	cmp    DWORD PTR [rax+0x10],0xffffff38
   1400059e9:	jne    0x140005a9d
   1400059ef:	cmp    DWORD PTR [rcx+0x1070],esi
   1400059f5:	mov    rcx,rdx
   1400059f8:	je     0x140005a34
   1400059fa:	call   QWORD PTR [rip+0x4860]        # 0x14000a260
   140005a00:	xor    r9d,r9d
   140005a03:	xor    r8d,r8d
   140005a06:	mov    rcx,rax
   140005a09:	mov    edx,0x470
   140005a0e:	call   QWORD PTR [rip+0x48a4]        # 0x14000a2b8
   140005a14:	mov    edx,DWORD PTR [rbx+0x1058]
   140005a1a:	mov    rcx,QWORD PTR [rbx+0x1050]
   140005a21:	call   QWORD PTR [rip+0x4831]        # 0x14000a258
   140005a27:	mov    rcx,rax
   140005a2a:	xor    edx,edx
   140005a2c:	call   QWORD PTR [rip+0x480e]        # 0x14000a240
   140005a32:	jmp    0x140005a9d
   140005a34:	call   QWORD PTR [rip+0x4826]        # 0x14000a260
   140005a3a:	mov    r9d,0x4
   140005a40:	xor    r8d,r8d
   140005a43:	mov    rcx,rax
   140005a46:	mov    edx,0x470
   140005a4b:	call   QWORD PTR [rip+0x4867]        # 0x14000a2b8
   140005a51:	jmp    0x140005a9d
   140005a53:	cmp    DWORD PTR [rcx+0x1070],esi
   140005a59:	je     0x140005a9d
   140005a5b:	cmp    DWORD PTR [rcx+0x1074],esi
   140005a61:	je     0x140005a9d
   140005a63:	mov    rcx,rdx
   140005a66:	call   QWORD PTR [rip+0x47f4]        # 0x14000a260
   140005a6c:	xor    r9d,r9d
   140005a6f:	mov    edx,0x471
   140005a74:	mov    rcx,rax
   140005a77:	lea    r8d,[r9+0x2]
   140005a7b:	call   QWORD PTR [rip+0x4837]        # 0x14000a2b8
   140005a81:	test   rsi,rsi
   140005a84:	je     0x140005a8f
   140005a86:	mov    rcx,rsi
   140005a89:	call   QWORD PTR [rip+0x48e1]        # 0x14000a370
   140005a8f:	test   rdi,rdi
   140005a92:	je     0x140005a9d
   140005a94:	mov    rcx,rdi
   140005a97:	call   QWORD PTR [rip+0x48d3]        # 0x14000a370
   140005a9d:	mov    rbx,QWORD PTR [rsp+0x50]
   140005aa2:	xor    eax,eax
   140005aa4:	mov    rbp,QWORD PTR [rsp+0x58]
   140005aa9:	add    rsp,0x30
   140005aad:	pop    r15
   140005aaf:	pop    rdi
   140005ab0:	pop    rsi
   140005ab1:	ret    
   140005ab2:	int3   
   140005ab3:	int3   
   140005ab4:	int3   
   140005ab5:	int3   
   140005ab6:	int3   
   140005ab7:	int3   
   140005ab8:	mov    QWORD PTR [rsp+0x8],rbx
   140005abd:	push   rbp
   140005abe:	push   rsi
   140005abf:	push   rdi
   140005ac0:	push   r12
   140005ac2:	push   r13
   140005ac4:	push   r14
   140005ac6:	push   r15
   140005ac8:	sub    rsp,0x30
   140005acc:	mov    rbp,rdx
   140005acf:	mov    r13,rcx
   140005ad2:	mov    r12d,0x80004005
   140005ad8:	cmp    r8d,0x1
   140005adc:	jb     0x140005c32
   140005ae2:	mov    rax,QWORD PTR [rcx+0x1078]
   140005ae9:	mov    rdi,QWORD PTR [rax+0x8]
   140005aed:	mov    esi,DWORD PTR [rax+0x10]
   140005af0:	mov    rax,QWORD PTR [rdi]
   140005af3:	mov    rbx,QWORD PTR [rax+0x18]
   140005af7:	mov    rcx,rbx
   140005afa:	call   QWORD PTR [rip+0x49f8]        # 0x14000a4f8
   140005b00:	mov    rcx,rdi
   140005b03:	call   rbx
   140005b05:	mov    DWORD PTR [rsp+0x80],eax
   140005b0c:	mov    rcx,0xffffffffffffffff
   140005b13:	mov    eax,0x2
   140005b18:	mov    QWORD PTR [rsp+0x88],rsi
   140005b20:	mul    rsi
   140005b23:	cmovo  rax,rcx
   140005b27:	mov    rcx,rax
   140005b2a:	call   0x140008ce0
   140005b2f:	xor    ecx,ecx
   140005b31:	mov    r14,rax
   140005b34:	test   rax,rax
   140005b37:	je     0x140005c32
   140005b3d:	mov    WORD PTR [rax],cx
   140005b40:	mov    r15,QWORD PTR [r13+0x1078]
   140005b47:	mov    rsi,QWORD PTR [r15+0x8]
   140005b4b:	mov    ebx,DWORD PTR [r15+0x10]
   140005b4f:	mov    rax,QWORD PTR [rsi]
   140005b52:	mov    rdi,QWORD PTR [rax+0x50]
   140005b56:	mov    rcx,rdi
   140005b59:	call   QWORD PTR [rip+0x4999]        # 0x14000a4f8
   140005b5f:	mov    r8,QWORD PTR [r15+0x18]
   140005b63:	lea    r9d,[rbx+0x1]
   140005b67:	mov    rdx,rbp
   140005b6a:	mov    rcx,rsi
   140005b6d:	call   rdi
   140005b6f:	xor    edx,edx
   140005b71:	test   eax,eax
   140005b73:	je     0x140005b7b
   140005b75:	mov    rbx,QWORD PTR [r15+0x18]
   140005b79:	jmp    0x140005b7e
   140005b7b:	mov    rbx,rdx
   140005b7e:	mov    r15,QWORD PTR [rsp+0x88]
   140005b86:	mov    edi,edx
   140005b88:	test   rbp,rbp
   140005b8b:	je     0x140005b9d
   140005b8d:	or     rcx,0xffffffffffffffff
   140005b91:	inc    rcx
   140005b94:	cmp    WORD PTR [rbp+rcx*2+0x0],dx
   140005b99:	jne    0x140005b91
   140005b9b:	jmp    0x140005ba0
   140005b9d:	mov    rcx,rdx
   140005ba0:	mov    eax,edi
   140005ba2:	cmp    rax,rcx
   140005ba5:	jae    0x140005bee
   140005ba7:	test   rbx,rbx
   140005baa:	je     0x140005c29
   140005bac:	mov    esi,DWORD PTR [rsp+0x80]
   140005bb3:	mov    r8,rbx
   140005bb6:	mov    r9d,esi
   140005bb9:	mov    rdx,r15
   140005bbc:	mov    rcx,r14
   140005bbf:	call   0x140005c50
   140005bc4:	test   eax,eax
   140005bc6:	js     0x140005c29
   140005bc8:	or     r9,0xffffffffffffffff
   140005bcc:	lea    r8,[rip+0x6245]        # 0x14000be18
   140005bd3:	mov    rdx,r15
   140005bd6:	mov    rcx,r14
   140005bd9:	call   QWORD PTR [rip+0x4789]        # 0x14000a368
   140005bdf:	cmp    eax,0x50
   140005be2:	je     0x140005c29
   140005be4:	inc    edi
   140005be6:	lea    rbx,[rbx+rsi*2]
   140005bea:	xor    edx,edx
   140005bec:	jmp    0x140005b88
   140005bee:	mov    rax,QWORD PTR [r13+0x1078]
   140005bf5:	mov    rdi,QWORD PTR [rax+0x8]
   140005bf9:	mov    rax,QWORD PTR [rdi]
   140005bfc:	mov    rbx,QWORD PTR [rax+0x78]
   140005c00:	mov    rcx,rbx
   140005c03:	call   QWORD PTR [rip+0x48ef]        # 0x14000a4f8
   140005c09:	lea    rax,[rip+0x6544]        # 0x14000c154
   140005c10:	mov    r9,r14
   140005c13:	mov    r8,rbp
   140005c16:	mov    QWORD PTR [rsp+0x20],rax
   140005c1b:	xor    edx,edx
   140005c1d:	mov    rcx,rdi
   140005c20:	call   rbx
   140005c22:	neg    eax
   140005c24:	sbb    ecx,ecx
   140005c26:	and    r12d,ecx
   140005c29:	mov    rcx,r14
   140005c2c:	call   QWORD PTR [rip+0x473e]        # 0x14000a370
   140005c32:	mov    eax,r12d
   140005c35:	mov    rbx,QWORD PTR [rsp+0x70]
   140005c3a:	add    rsp,0x30
   140005c3e:	pop    r15
   140005c40:	pop    r14
   140005c42:	pop    r13
   140005c44:	pop    r12
   140005c46:	pop    rdi
   140005c47:	pop    rsi
   140005c48:	pop    rbp
   140005c49:	ret    
   140005c4a:	int3   
   140005c4b:	int3   
   140005c4c:	int3   
   140005c4d:	int3   
   140005c4e:	int3   
   140005c4f:	int3   
   140005c50:	mov    rax,rsp
   140005c53:	mov    QWORD PTR [rax+0x8],rbx
   140005c57:	mov    QWORD PTR [rax+0x10],rbp
   140005c5b:	mov    QWORD PTR [rax+0x18],rsi
   140005c5f:	mov    QWORD PTR [rax+0x20],rdi
   140005c63:	push   r12
   140005c65:	push   r14
   140005c67:	push   r15
   140005c69:	sub    rsp,0x20
   140005c6d:	mov    rbp,r8
   140005c70:	mov    r14,rdx
   140005c73:	mov    r15,rcx
   140005c76:	cmp    r9,0x7ffffffe
   140005c7d:	jbe    0x140005c86
   140005c7f:	mov    eax,0x8007000e
   140005c84:	jmp    0x140005cec
   140005c86:	lea    rsi,[r9+0x1]
   140005c8a:	mov    eax,0x2
   140005c8f:	mul    rsi
   140005c92:	mov    r12,0xffffffffffffffff
   140005c99:	cmovo  rax,r12
   140005c9d:	mov    rcx,rax
   140005ca0:	call   0x140008ce0
   140005ca5:	xor    edi,edi
   140005ca7:	mov    rbx,rax
   140005caa:	test   rax,rax
   140005cad:	je     0x140005c7f
   140005caf:	mov    r9,r12
   140005cb2:	mov    r8,rbp
   140005cb5:	mov    rdx,rsi
   140005cb8:	mov    rcx,rax
   140005cbb:	call   QWORD PTR [rip+0x46b7]        # 0x14000a378
   140005cc1:	mov    r9,r12
   140005cc4:	mov    r8,rbx
   140005cc7:	mov    rdx,r14
   140005cca:	mov    rcx,r15
   140005ccd:	call   QWORD PTR [rip+0x4695]        # 0x14000a368
   140005cd3:	cmp    eax,0x50
   140005cd6:	mov    rcx,rbx
   140005cd9:	sete   dil
   140005cdd:	call   QWORD PTR [rip+0x468d]        # 0x14000a370
   140005ce3:	neg    edi
   140005ce5:	sbb    eax,eax
   140005ce7:	and    eax,0x8007007a
   140005cec:	mov    rbx,QWORD PTR [rsp+0x40]
   140005cf1:	mov    rbp,QWORD PTR [rsp+0x48]
   140005cf6:	mov    rsi,QWORD PTR [rsp+0x50]
   140005cfb:	mov    rdi,QWORD PTR [rsp+0x58]
   140005d00:	add    rsp,0x20
   140005d04:	pop    r15
   140005d06:	pop    r14
   140005d08:	pop    r12
   140005d0a:	ret    
   140005d0b:	int3   
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	int3   
   140005d11:	int3   
   140005d12:	int3   
   140005d13:	int3   
   140005d14:	int3   
   140005d15:	int3   
   140005d16:	int3   
   140005d17:	int3   
   140005d18:	int3   
   140005d19:	int3   
   140005d1a:	int3   
   140005d1b:	int3   
   140005d1c:	int3   
   140005d1d:	int3   
   140005d1e:	int3   
   140005d1f:	int3   
   140005d20:	mov    QWORD PTR [rsp+0x18],rbx
   140005d25:	push   rbp
   140005d26:	push   rsi
   140005d27:	push   rdi
   140005d28:	sub    rsp,0x70
   140005d2c:	mov    rax,QWORD PTR [rip+0x92d5]        # 0x14000f008
   140005d33:	xor    rax,rsp
   140005d36:	mov    QWORD PTR [rsp+0x68],rax
   140005d3b:	xor    ebx,ebx
   140005d3d:	mov    rsi,rdx
   140005d40:	mov    WORD PTR [rsp+0x20],bx
   140005d45:	test   rdx,rdx
   140005d48:	jne    0x140005d51
   140005d4a:	xor    eax,eax
   140005d4c:	jmp    0x140005e71
   140005d51:	lea    rdi,[rcx+0x8]
   140005d55:	cmp    QWORD PTR [rdi],rbx
   140005d58:	je     0x140005d63
   140005d5a:	mov    rcx,QWORD PTR [rdi]
   140005d5d:	call   QWORD PTR [rip+0x45cd]        # 0x14000a330
   140005d63:	lea    r8,[rip+0x63ee]        # 0x14000c158
   140005d6a:	mov    rdx,rsi
   140005d6d:	mov    rcx,rdi
   140005d70:	call   QWORD PTR [rip+0x4702]        # 0x14000a478
   140005d76:	test   eax,eax
   140005d78:	jne    0x140005dae
   140005d7a:	cmp    QWORD PTR [rdi],rbx
   140005d7d:	je     0x140005dae
   140005d7f:	mov    r9,QWORD PTR [rdi]
   140005d82:	lea    edx,[rax+0x2]
   140005d85:	lea    r8d,[rax+0x1]
   140005d89:	lea    rcx,[rsp+0x20]
   140005d8e:	call   QWORD PTR [rip+0x471c]        # 0x14000a4b0
   140005d94:	mov    rcx,QWORD PTR [rdi]
   140005d97:	call   QWORD PTR [rip+0x45c3]        # 0x14000a360
   140005d9d:	test   eax,eax
   140005d9f:	jne    0x140005e6f
   140005da5:	mov    rcx,QWORD PTR [rdi]
   140005da8:	call   QWORD PTR [rip+0x4582]        # 0x14000a330
   140005dae:	mov    ebp,0xfeff
   140005db3:	mov    rdx,rsi
   140005db6:	mov    rcx,rdi
   140005db9:	cmp    bp,WORD PTR [rsp+0x20]
   140005dbe:	jne    0x140005ddf
   140005dc0:	lea    r8,[rip+0x6399]        # 0x14000c160
   140005dc7:	call   QWORD PTR [rip+0x46ab]        # 0x14000a478
   140005dcd:	test   eax,eax
   140005dcf:	jne    0x140005e6f
   140005dd5:	cmp    QWORD PTR [rdi],rbx
   140005dd8:	jne    0x140005e0f
   140005dda:	jmp    0x140005e6f
   140005ddf:	lea    r8,[rip+0x6382]        # 0x14000c168
   140005de6:	call   QWORD PTR [rip+0x468c]        # 0x14000a478
   140005dec:	test   eax,eax
   140005dee:	jne    0x140005e6f
   140005df0:	cmp    QWORD PTR [rdi],rbx
   140005df3:	je     0x140005e6f
   140005df5:	mov    r9,QWORD PTR [rdi]
   140005df8:	lea    edx,[rax+0x2]
   140005dfb:	lea    r8d,[rax+0x1]
   140005dff:	mov    WORD PTR [rsp+0x20],bp
   140005e04:	lea    rcx,[rsp+0x20]
   140005e09:	call   QWORD PTR [rip+0x4541]        # 0x14000a350
   140005e0f:	mov    ebx,0x10
   140005e14:	lea    rcx,[rsp+0x28]
   140005e19:	mov    edx,ebx
   140005e1b:	call   QWORD PTR [rip+0x4697]        # 0x14000a4b8
   140005e21:	mov    rdx,QWORD PTR [rdi]
   140005e24:	lea    rcx,[rsp+0x28]
   140005e29:	call   QWORD PTR [rip+0x4679]        # 0x14000a4a8
   140005e2f:	mov    rdx,QWORD PTR [rdi]
   140005e32:	lea    rcx,[rip+0x5fdf]        # 0x14000be18
   140005e39:	call   QWORD PTR [rip+0x4669]        # 0x14000a4a8
   140005e3f:	mov    edx,ebx
   140005e41:	lea    rcx,[rsp+0x48]
   140005e46:	call   QWORD PTR [rip+0x4654]        # 0x14000a4a0
   140005e4c:	mov    rdx,QWORD PTR [rdi]
   140005e4f:	lea    rcx,[rsp+0x48]
   140005e54:	call   QWORD PTR [rip+0x464e]        # 0x14000a4a8
   140005e5a:	mov    rdx,QWORD PTR [rdi]
   140005e5d:	lea    rcx,[rip+0x630c]        # 0x14000c170
   140005e64:	call   QWORD PTR [rip+0x463e]        # 0x14000a4a8
   140005e6a:	mov    ebx,0x1
   140005e6f:	mov    eax,ebx
   140005e71:	mov    rcx,QWORD PTR [rsp+0x68]
   140005e76:	xor    rcx,rsp
   140005e79:	call   0x1400090a0
   140005e7e:	mov    rbx,QWORD PTR [rsp+0xa0]
   140005e86:	add    rsp,0x70
   140005e8a:	pop    rdi
   140005e8b:	pop    rsi
   140005e8c:	pop    rbp
   140005e8d:	ret    
   140005e8e:	int3   
   140005e8f:	int3   
   140005e90:	int3   
   140005e91:	int3   
   140005e92:	int3   
   140005e93:	int3   
   140005e94:	int3   
   140005e95:	int3   
   140005e96:	int3   
   140005e97:	int3   
   140005e98:	int3   
   140005e99:	int3   
   140005e9a:	int3   
   140005e9b:	int3   
   140005e9c:	int3   
   140005e9d:	int3   
   140005e9e:	int3   
   140005e9f:	int3   
   140005ea0:	rex push rbx
   140005ea2:	sub    rsp,0x20
   140005ea6:	mov    rbx,rcx
   140005ea9:	test   rcx,rcx
   140005eac:	je     0x140005eda
   140005eae:	lea    rax,[rip+0x5bfb]        # 0x14000bab0
   140005eb5:	mov    QWORD PTR [rcx],rax
   140005eb8:	mov    rcx,QWORD PTR [rcx+0x8]
   140005ebc:	test   rcx,rcx
   140005ebf:	je     0x140005ed1
   140005ec1:	call   QWORD PTR [rip+0x4471]        # 0x14000a338
   140005ec7:	mov    rcx,QWORD PTR [rbx+0x8]
   140005ecb:	call   QWORD PTR [rip+0x445f]        # 0x14000a330
   140005ed1:	mov    rcx,rbx
   140005ed4:	call   QWORD PTR [rip+0x44ae]        # 0x14000a388
   140005eda:	mov    eax,0x1
   140005edf:	add    rsp,0x20
   140005ee3:	pop    rbx
   140005ee4:	ret    
   140005ee5:	int3   
   140005ee6:	int3   
   140005ee7:	int3   
   140005ee8:	int3   
   140005ee9:	int3   
   140005eea:	int3   
   140005eeb:	int3   
   140005eec:	int3   
   140005eed:	int3   
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ef5:	mov    QWORD PTR [rsp+0x10],rsi
   140005efa:	push   rdi
   140005efb:	sub    rsp,0x20
   140005eff:	xor    ebx,ebx
   140005f01:	mov    rsi,rdx
   140005f04:	mov    rdi,rcx
   140005f07:	cmp    QWORD PTR [rcx+0x8],rbx
   140005f0b:	jne    0x140005f1d
   140005f0d:	lea    rdx,[rip+0x6264]        # 0x14000c178
   140005f14:	call   0x140005d20
   140005f19:	test   eax,eax
   140005f1b:	je     0x140005f34
   140005f1d:	mov    rdx,QWORD PTR [rdi+0x8]
   140005f21:	test   rdx,rdx
   140005f24:	je     0x140005f34
   140005f26:	mov    rcx,rsi
   140005f29:	call   QWORD PTR [rip+0x4579]        # 0x14000a4a8
   140005f2f:	mov    ebx,0x1
   140005f34:	mov    rsi,QWORD PTR [rsp+0x38]
   140005f39:	mov    eax,ebx
   140005f3b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005f40:	add    rsp,0x20
   140005f44:	pop    rdi
   140005f45:	ret    
   140005f46:	int3   
   140005f47:	int3   
   140005f48:	int3   
   140005f49:	int3   
   140005f4a:	int3   
   140005f4b:	int3   
   140005f4c:	mov    QWORD PTR [rsp+0x18],rbx
   140005f51:	push   rbp
   140005f52:	push   rsi
   140005f53:	push   rdi
   140005f54:	push   r12
   140005f56:	push   r13
   140005f58:	push   r14
   140005f5a:	push   r15
   140005f5c:	sub    rsp,0xe0
   140005f63:	mov    rax,QWORD PTR [rip+0x909e]        # 0x14000f008
   140005f6a:	xor    rax,rsp
   140005f6d:	mov    QWORD PTR [rsp+0xd0],rax
   140005f75:	xor    eax,eax
   140005f77:	mov    DWORD PTR [rsp+0x38],r8d
   140005f7c:	mov    rbp,rdx
   140005f7f:	mov    DWORD PTR [rsp+0x34],r9d
   140005f84:	mov    rdi,rcx
   140005f87:	mov    DWORD PTR [rsp+0x30],eax
   140005f8b:	xor    edx,edx
   140005f8d:	mov    WORD PTR [rsp+0x60],ax
   140005f92:	lea    r8d,[rax+0x64]
   140005f96:	mov    r13d,r9d
   140005f99:	lea    rcx,[rsp+0x62]
   140005f9e:	mov    ebx,eax
   140005fa0:	mov    esi,eax
   140005fa2:	call   0x1400098c6
   140005fa7:	mov    r10,QWORD PTR [rip+0x9a82]        # 0x14000fa30
   140005fae:	xor    r9d,r9d
   140005fb1:	mov    r15d,r9d
   140005fb4:	mov    r12d,r9d
   140005fb7:	mov    rax,QWORD PTR [r10+0x10]
   140005fbb:	mov    r14,QWORD PTR [rax+0x1028]
   140005fc2:	mov    QWORD PTR [rsp+0x40],r14
   140005fc7:	movabs rdx,0x100002601
   140005fd1:	cmp    DWORD PTR [r10+0x1c],r9d
   140005fd5:	jne    0x140006248
   140005fdb:	movzx  ecx,WORD PTR [rbp+0x0]
   140005fdf:	test   rsi,rsi
   140005fe2:	jne    0x14000600b
   140005fe4:	cmp    ecx,0x20
   140005fe7:	ja     0x140005ff3
   140005fe9:	bt     rdx,rcx
   140005fed:	jb     0x140006138
   140005ff3:	mov    edx,r13d
   140005ff6:	call   0x140008048
   140005ffb:	test   eax,eax
   140005ffd:	je     0x140006138
   140006003:	mov    rsi,rbp
   140006006:	jmp    0x140006138
   14000600b:	cmp    ecx,0x20
   14000600e:	ja     0x140006016
   140006010:	bt     rdx,rcx
   140006014:	jb     0x14000602c
   140006016:	mov    edx,r13d
   140006019:	call   0x140008048
   14000601e:	test   eax,eax
   140006020:	je     0x14000602c
   140006022:	cmp    r15d,0x32
   140006026:	jb     0x140006138
   14000602c:	mov    r8,rsi
   14000602f:	cmp    r13d,0x2
   140006033:	jne    0x140006054
   140006035:	mov    r9d,r15d
   140006038:	lea    edx,[r13+0x31]
   14000603c:	lea    rcx,[rsp+0x60]
   140006041:	cmp    r9,rdx
   140006044:	jb     0x14000604a
   140006046:	or     r9,0xffffffffffffffff
   14000604a:	call   QWORD PTR [rip+0x4328]        # 0x14000a378
   140006050:	xor    esi,esi
   140006052:	jmp    0x140006090
   140006054:	mov    ecx,DWORD PTR [r10+0x18]
   140006058:	lea    rax,[rsp+0x60]
   14000605d:	lea    r9d,[r15+r15*1]
   140006061:	mov    DWORD PTR [rsp+0x28],0x32
   140006069:	mov    edx,0x2
   14000606e:	mov    QWORD PTR [rsp+0x20],rax
   140006073:	call   QWORD PTR [rip+0x4097]        # 0x14000a110
   140006079:	mov    eax,r15d
   14000607c:	add    rax,rax
   14000607f:	cmp    rax,0x66
   140006083:	jae    0x140006277
   140006089:	xor    esi,esi
   14000608b:	mov    WORD PTR [rsp+rax*1+0x60],si
   140006090:	cmp    DWORD PTR [rsp+0x140],esi
   140006097:	je     0x1400060de
   140006099:	mov    rax,QWORD PTR [rip+0x9990]        # 0x14000fa30
   1400060a0:	lea    rcx,[rsp+0x60]
   1400060a5:	or     rsi,0xffffffffffffffff
   1400060a9:	mov    r14,QWORD PTR [rax+0x30]
   1400060ad:	xor    eax,eax
   1400060af:	inc    rsi
   1400060b2:	cmp    WORD PTR [rcx+rsi*2],ax
   1400060b6:	jne    0x1400060af
   1400060b8:	mov    rax,QWORD PTR [r14]
   1400060bb:	mov    rbx,QWORD PTR [rax+0x10]
   1400060bf:	mov    rcx,rbx
   1400060c2:	call   QWORD PTR [rip+0x4430]        # 0x14000a4f8
   1400060c8:	mov    r8d,esi
   1400060cb:	lea    rdx,[rsp+0x60]
   1400060d0:	mov    rcx,r14
   1400060d3:	call   rbx
   1400060d5:	mov    r14,QWORD PTR [rsp+0x40]
   1400060da:	mov    ebx,DWORD PTR [rsp+0x30]
   1400060de:	mov    rax,QWORD PTR [rip+0x994b]        # 0x14000fa30
   1400060e5:	lea    r8,[rip+0x61bc]        # 0x14000c2a8
   1400060ec:	mov    edx,0xb
   1400060f1:	lea    rcx,[rsp+0x48]
   1400060f6:	inc    DWORD PTR [rax+0x24]
   1400060f9:	mov    r9d,DWORD PTR [rax+0x24]
   1400060fd:	shr    r9d,1
   140006100:	call   0x140001b34
   140006105:	test   eax,eax
   140006107:	js     0x140006248
   14000610d:	xor    r9d,r9d
   140006110:	lea    rax,[rsp+0x48]
   140006115:	mov    edx,0x3f2
   14000611a:	mov    QWORD PTR [rsp+0x20],rax
   14000611f:	mov    rcx,r14
   140006122:	lea    r8d,[r9+0xc]
   140006126:	call   QWORD PTR [rip+0x41d4]        # 0x14000a300
   14000612c:	xor    r9d,r9d
   14000612f:	inc    ebx
   140006131:	mov    esi,r9d
   140006134:	mov    DWORD PTR [rsp+0x30],ebx
   140006138:	cmp    r13d,0x1
   14000613c:	jne    0x14000614d
   14000613e:	test   rsi,rsi
   140006141:	jne    0x14000614d
   140006143:	inc    DWORD PTR [rdi]
   140006145:	inc    rbp
   140006148:	inc    DWORD PTR [rdi+0x8]
   14000614b:	jmp    0x140006160
   14000614d:	add    DWORD PTR [rdi],0x2
   140006150:	add    rbp,0x2
   140006154:	add    DWORD PTR [rdi+0x8],0x2
   140006158:	inc    r12d
   14000615b:	test   rsi,rsi
   14000615e:	jne    0x140006165
   140006160:	mov    r15d,r9d
   140006163:	jmp    0x140006168
   140006165:	inc    r15d
   140006168:	mov    edx,0x3f4
   14000616d:	mov    QWORD PTR [rsp+0x20],r9
   140006172:	xor    r9d,r9d
   140006175:	mov    rcx,r14
   140006178:	lea    r8d,[rdx+0x14]
   14000617c:	call   QWORD PTR [rip+0x417e]        # 0x14000a300
   140006182:	mov    rbx,rax
   140006185:	cmp    eax,0x64
   140006188:	jae    0x1400061ca
   14000618a:	mov    eax,DWORD PTR [rdi+0xc]
   14000618d:	imul   ebx,eax
   140006190:	cmp    ebx,DWORD PTR [rdi+0x8]
   140006193:	jae    0x1400061ca
   140006195:	xor    r13d,r13d
   140006198:	mov    ecx,DWORD PTR [rdi+0x8]
   14000619b:	sub    ecx,ebx
   14000619d:	cmp    ecx,eax
   14000619f:	jbe    0x1400061c5
   1400061a1:	mov    edx,0x3f4
   1400061a6:	mov    QWORD PTR [rsp+0x20],r13
   1400061ab:	xor    r9d,r9d
   1400061ae:	mov    rcx,r14
   1400061b1:	lea    r8d,[rdx+0x11]
   1400061b5:	call   QWORD PTR [rip+0x4145]        # 0x14000a300
   1400061bb:	mov    eax,DWORD PTR [rdi+0xc]
   1400061be:	add    ebx,eax
   1400061c0:	cmp    ebx,DWORD PTR [rdi+0x8]
   1400061c3:	jb     0x140006198
   1400061c5:	mov    r13d,DWORD PTR [rsp+0x34]
   1400061ca:	mov    edx,0x3f3
   1400061cf:	xor    eax,eax
   1400061d1:	xor    r9d,r9d
   1400061d4:	mov    QWORD PTR [rsp+0x20],rax
   1400061d9:	mov    rcx,r14
   1400061dc:	lea    r8d,[rdx+0x15]
   1400061e0:	call   QWORD PTR [rip+0x411a]        # 0x14000a300
   1400061e6:	mov    rbx,rax
   1400061e9:	cmp    eax,0x61
   1400061ec:	jae    0x14000622b
   1400061ee:	mov    eax,DWORD PTR [rdi+0x4]
   1400061f1:	imul   ebx,eax
   1400061f4:	cmp    ebx,DWORD PTR [rdi]
   1400061f6:	jae    0x14000622b
   1400061f8:	xor    r13d,r13d
   1400061fb:	mov    ecx,DWORD PTR [rdi]
   1400061fd:	sub    ecx,ebx
   1400061ff:	cmp    ecx,eax
   140006201:	jbe    0x140006226
   140006203:	mov    edx,0x3f3
   140006208:	mov    QWORD PTR [rsp+0x20],r13
   14000620d:	xor    r9d,r9d
   140006210:	mov    rcx,r14
   140006213:	lea    r8d,[rdx+0x12]
   140006217:	call   QWORD PTR [rip+0x40e3]        # 0x14000a300
   14000621d:	mov    eax,DWORD PTR [rdi+0x4]
   140006220:	add    ebx,eax
   140006222:	cmp    ebx,DWORD PTR [rdi]
   140006224:	jb     0x1400061fb
   140006226:	mov    r13d,DWORD PTR [rsp+0x34]
   14000622b:	inc    r12d
   14000622e:	cmp    r12d,DWORD PTR [rsp+0x38]
   140006233:	ja     0x140006248
   140006235:	mov    r10,QWORD PTR [rip+0x97f4]        # 0x14000fa30
   14000623c:	xor    r9d,r9d
   14000623f:	mov    ebx,DWORD PTR [rsp+0x30]
   140006243:	jmp    0x140005fc7
   140006248:	mov    eax,DWORD PTR [rsp+0x30]
   14000624c:	mov    rcx,QWORD PTR [rsp+0xd0]
   140006254:	xor    rcx,rsp
   140006257:	call   0x1400090a0
   14000625c:	mov    rbx,QWORD PTR [rsp+0x130]
   140006264:	add    rsp,0xe0
   14000626b:	pop    r15
   14000626d:	pop    r14
   14000626f:	pop    r13
   140006271:	pop    r12
   140006273:	pop    rdi
   140006274:	pop    rsi
   140006275:	pop    rbp
   140006276:	ret    
   140006277:	call   0x140009368
   14000627c:	int3   
   14000627d:	int3   
   14000627e:	int3   
   14000627f:	int3   
   140006280:	int3   
   140006281:	int3   
   140006282:	int3   
   140006283:	int3   
   140006284:	rex push rbx
   140006286:	push   rbp
   140006287:	push   rsi
   140006288:	push   rdi
   140006289:	push   r12
   14000628b:	push   r14
   14000628d:	push   r15
   14000628f:	sub    rsp,0x2a0
   140006296:	mov    rax,QWORD PTR [rip+0x8d6b]        # 0x14000f008
   14000629d:	xor    rax,rsp
   1400062a0:	mov    QWORD PTR [rsp+0x290],rax
   1400062a8:	mov    rax,QWORD PTR [rdx]
   1400062ab:	mov    r15,rcx
   1400062ae:	xor    r12d,r12d
   1400062b1:	mov    ebp,r9d
   1400062b4:	mov    r14,r8
   1400062b7:	mov    DWORD PTR [rsp+0x30],r12d
   1400062bc:	mov    rdi,rdx
   1400062bf:	mov    esi,0x80004005
   1400062c4:	mov    rbx,QWORD PTR [rax+0x18]
   1400062c8:	mov    rcx,rbx
   1400062cb:	call   QWORD PTR [rip+0x4227]        # 0x14000a4f8
   1400062d1:	lea    rax,[rsp+0x34]
   1400062d6:	xor    r9d,r9d
   1400062d9:	xor    r8d,r8d
   1400062dc:	mov    QWORD PTR [rsp+0x20],rax
   1400062e1:	xor    edx,edx
   1400062e3:	mov    rcx,rdi
   1400062e6:	call   rbx
   1400062e8:	test   eax,eax
   1400062ea:	jne    0x140006405
   1400062f0:	mov    rax,QWORD PTR [rdi]
   1400062f3:	mov    rbx,QWORD PTR [rax+0x20]
   1400062f7:	mov    rcx,rbx
   1400062fa:	call   QWORD PTR [rip+0x41f8]        # 0x14000a4f8
   140006300:	lea    rdx,[rsp+0x40]
   140006305:	mov    rcx,rdi
   140006308:	call   rbx
   14000630a:	lea    ecx,[rax+0x7ffbe8fd]
   140006310:	test   ecx,0xfffffff7
   140006316:	je     0x140006405
   14000631c:	mov    DWORD PTR [r14],r12d
   14000631f:	cmp    eax,0x80041700
   140006324:	je     0x140006402
   14000632a:	add    eax,0x7ffbe8f9
   14000632f:	cmp    eax,0x1
   140006332:	jbe    0x1400063e3
   140006338:	cmp    DWORD PTR [rsp+0x48],0x1
   14000633d:	jne    0x1400063e3
   140006343:	mov    ebx,r12d
   140006346:	cmp    ebx,0x80041701
   14000634c:	je     0x1400063e3
   140006352:	mov    rax,QWORD PTR [rdi]
   140006355:	mov    DWORD PTR [rsp+0x30],0x100
   14000635d:	mov    rbx,QWORD PTR [rax+0x28]
   140006361:	mov    rcx,rbx
   140006364:	call   QWORD PTR [rip+0x418e]        # 0x14000a4f8
   14000636a:	lea    r8,[rsp+0x80]
   140006372:	mov    rcx,rdi
   140006375:	lea    rdx,[rsp+0x30]
   14000637a:	call   rbx
   14000637c:	mov    ebx,eax
   14000637e:	test   eax,eax
   140006380:	je     0x140006389
   140006382:	cmp    eax,0x41709
   140006387:	jne    0x140006405
   140006389:	mov    r8d,DWORD PTR [rsp+0x30]
   14000638e:	cmp    r8d,0x100
   140006395:	ja     0x140006405
   140006397:	mov    eax,r8d
   14000639a:	add    rax,rax
   14000639d:	cmp    rax,0x202
   1400063a3:	jae    0x140006429
   1400063a9:	lea    r8d,[r8*2+0x2]
   1400063b1:	mov    WORD PTR [rsp+rax*1+0x80],r12w
   1400063ba:	mov    r9d,0x2
   1400063c0:	mov    DWORD PTR [rsp+0x20],ebp
   1400063c4:	lea    rdx,[rsp+0x80]
   1400063cc:	mov    rcx,r15
   1400063cf:	call   0x140005f4c
   1400063d4:	add    DWORD PTR [r14],eax
   1400063d7:	cmp    ebx,0x41709
   1400063dd:	jne    0x140006346
   1400063e3:	mov    rax,QWORD PTR [rdi]
   1400063e6:	mov    rbx,QWORD PTR [rax+0x20]
   1400063ea:	mov    rcx,rbx
   1400063ed:	call   QWORD PTR [rip+0x4105]        # 0x14000a4f8
   1400063f3:	lea    rdx,[rsp+0x40]
   1400063f8:	mov    rcx,rdi
   1400063fb:	call   rbx
   1400063fd:	jmp    0x14000631f
   140006402:	mov    esi,r12d
   140006405:	mov    eax,esi
   140006407:	mov    rcx,QWORD PTR [rsp+0x290]
   14000640f:	xor    rcx,rsp
   140006412:	call   0x1400090a0
   140006417:	add    rsp,0x2a0
   14000641e:	pop    r15
   140006420:	pop    r14
   140006422:	pop    r12
   140006424:	pop    rdi
   140006425:	pop    rsi
   140006426:	pop    rbp
   140006427:	pop    rbx
   140006428:	ret    
   140006429:	call   0x140009368
   14000642e:	int3   
   14000642f:	int3   
   140006430:	int3   
   140006431:	int3   
   140006432:	int3   
   140006433:	int3   
   140006434:	int3   
   140006435:	int3   
   140006436:	int3   
   140006437:	int3   
   140006438:	mov    rax,rsp
   14000643b:	mov    QWORD PTR [rax+0x8],rbx
   14000643f:	mov    QWORD PTR [rax+0x10],rbp
   140006443:	mov    QWORD PTR [rax+0x18],rsi
   140006447:	mov    QWORD PTR [rax+0x20],rdi
   14000644b:	push   r12
   14000644d:	push   r14
   14000644f:	push   r15
   140006451:	sub    rsp,0x40
   140006455:	mov    r12,rcx
   140006458:	mov    ebp,r9d
   14000645b:	xor    ecx,ecx
   14000645d:	mov    r15,r8
   140006460:	mov    r14,rdx
   140006463:	xor    esi,esi
   140006465:	call   QWORD PTR [rip+0x4075]        # 0x14000a4e0
   14000646b:	and    QWORD PTR [rsp+0x30],rsi
   140006470:	and    QWORD PTR [rsp+0x38],rsi
   140006475:	test   eax,eax
   140006477:	js     0x140006557
   14000647d:	lea    rax,[rsp+0x30]
   140006482:	xor    edx,edx
   140006484:	lea    r9,[rip+0x60d5]        # 0x14000c560
   14000648b:	mov    QWORD PTR [rsp+0x20],rax
   140006490:	lea    r8d,[rsi+0x17]
   140006494:	lea    rcx,[rip+0x8b85]        # 0x14000f020
   14000649b:	call   QWORD PTR [rip+0x4037]        # 0x14000a4d8
   1400064a1:	test   eax,eax
   1400064a3:	js     0x140006513
   1400064a5:	mov    rdi,QWORD PTR [rsp+0x30]
   1400064aa:	mov    rax,QWORD PTR [rdi]
   1400064ad:	mov    rbx,QWORD PTR [rax]
   1400064b0:	mov    rcx,rbx
   1400064b3:	call   QWORD PTR [rip+0x403f]        # 0x14000a4f8
   1400064b9:	lea    r8,[rsp+0x38]
   1400064be:	mov    rcx,rdi
   1400064c1:	lea    rdx,[rip+0x60a8]        # 0x14000c570
   1400064c8:	call   rbx
   1400064ca:	test   eax,eax
   1400064cc:	js     0x140006513
   1400064ce:	mov    rdi,QWORD PTR [rsp+0x38]
   1400064d3:	mov    rax,QWORD PTR [rdi]
   1400064d6:	mov    rbx,QWORD PTR [rax+0x28]
   1400064da:	mov    rcx,rbx
   1400064dd:	call   QWORD PTR [rip+0x4015]        # 0x14000a4f8
   1400064e3:	xor    r8d,r8d
   1400064e6:	mov    rdx,r14
   1400064e9:	mov    rcx,rdi
   1400064ec:	call   rbx
   1400064ee:	test   eax,eax
   1400064f0:	je     0x1400064f6
   1400064f2:	test   ebp,ebp
   1400064f4:	jne    0x140006513
   1400064f6:	mov    rdx,QWORD PTR [rsp+0x30]
   1400064fb:	mov    r9d,ebp
   1400064fe:	mov    r8,r15
   140006501:	mov    rcx,r12
   140006504:	call   0x140006284
   140006509:	test   eax,eax
   14000650b:	mov    ecx,0x1
   140006510:	cmove  esi,ecx
   140006513:	mov    rdi,QWORD PTR [rsp+0x38]
   140006518:	test   rdi,rdi
   14000651b:	je     0x140006532
   14000651d:	mov    rax,QWORD PTR [rdi]
   140006520:	mov    rbx,QWORD PTR [rax+0x10]
   140006524:	mov    rcx,rbx
   140006527:	call   QWORD PTR [rip+0x3fcb]        # 0x14000a4f8
   14000652d:	mov    rcx,rdi
   140006530:	call   rbx
   140006532:	mov    rdi,QWORD PTR [rsp+0x30]
   140006537:	test   rdi,rdi
   14000653a:	je     0x140006551
   14000653c:	mov    rdx,QWORD PTR [rdi]
   14000653f:	mov    rbx,QWORD PTR [rdx+0x10]
   140006543:	mov    rcx,rbx
   140006546:	call   QWORD PTR [rip+0x3fac]        # 0x14000a4f8
   14000654c:	mov    rcx,rdi
   14000654f:	call   rbx
   140006551:	call   QWORD PTR [rip+0x3f91]        # 0x14000a4e8
   140006557:	mov    rbx,QWORD PTR [rsp+0x60]
   14000655c:	mov    eax,esi
   14000655e:	mov    rsi,QWORD PTR [rsp+0x70]
   140006563:	mov    rbp,QWORD PTR [rsp+0x68]
   140006568:	mov    rdi,QWORD PTR [rsp+0x78]
   14000656d:	add    rsp,0x40
   140006571:	pop    r15
   140006573:	pop    r14
   140006575:	pop    r12
   140006577:	ret    
   140006578:	int3   
   140006579:	int3   
   14000657a:	int3   
   14000657b:	int3   
   14000657c:	int3   
   14000657d:	int3   
   14000657e:	int3   
   14000657f:	int3   
   140006580:	mov    QWORD PTR [rsp+0x20],rbx
   140006585:	push   rbp
   140006586:	push   rsi
   140006587:	push   rdi
   140006588:	push   r12
   14000658a:	push   r13
   14000658c:	push   r14
   14000658e:	push   r15
   140006590:	mov    eax,0x1050
   140006595:	call   0x140009900
   14000659a:	sub    rsp,rax
   14000659d:	mov    rax,QWORD PTR [rip+0x8a64]        # 0x14000f008
   1400065a4:	xor    rax,rsp
   1400065a7:	mov    QWORD PTR [rsp+0x1040],rax
   1400065af:	mov    r15,rcx
   1400065b2:	xor    r12d,r12d
   1400065b5:	mov    ecx,0x270
   1400065ba:	mov    esi,r12d
   1400065bd:	mov    ebp,r9d
   1400065c0:	mov    r14,r8
   1400065c3:	mov    rbx,rdx
   1400065c6:	call   0x140008ca8
   1400065cb:	mov    QWORD PTR [rsp+0x30],rax
   1400065d0:	mov    rdi,rax
   1400065d3:	test   rax,rax
   1400065d6:	je     0x14000664d
   1400065d8:	mov    QWORD PTR [rax+0x208],r12
   1400065df:	mov    rcx,rax
   1400065e2:	mov    QWORD PTR [rax+0x210],r12
   1400065e9:	mov    DWORD PTR [rax+0x218],r12d
   1400065f0:	mov    WORD PTR [rax],r12w
   1400065f4:	mov    QWORD PTR [rax+0x220],r12
   1400065fb:	mov    QWORD PTR [rax+0x228],r12
   140006602:	mov    DWORD PTR [rax+0x230],0x3b6
   14000660c:	mov    WORD PTR [rax+0x234],0x400
   140006615:	mov    DWORD PTR [rax+0x258],r12d
   14000661c:	mov    QWORD PTR [rax+0x23c],r12
   140006623:	mov    QWORD PTR [rax+0x250],r12
   14000662a:	mov    QWORD PTR [rax+0x244],r12
   140006631:	mov    DWORD PTR [rax+0x24c],r12d
   140006638:	mov    DWORD PTR [rax+0x268],r12d
   14000663f:	mov    QWORD PTR [rax+0x260],r12
   140006646:	call   0x1400072a0
   14000664b:	jmp    0x140006650
   14000664d:	mov    rdi,r12
   140006650:	test   rdi,rdi
   140006653:	je     0x1400067a7
   140006659:	mov    rdx,rbx
   14000665c:	mov    rcx,rdi
   14000665f:	call   0x14000797c
   140006664:	mov    ecx,0x800
   140006669:	mov    DWORD PTR [r14],r12d
   14000666c:	mov    r13d,0x41709
   140006672:	cmp    esi,r13d
   140006675:	je     0x140006743
   14000667b:	lea    rax,[rsp+0x40]
   140006680:	mov    ebx,ecx
   140006682:	mov    esi,0x80004005
   140006687:	test   rax,rax
   14000668a:	je     0x140006719
   140006690:	mov    ebx,r12d
   140006693:	mov    DWORD PTR [rsp+0x30],ebx
   140006697:	cmp    QWORD PTR [rdi+0x220],r12
   14000669e:	je     0x1400066bb
   1400066a0:	lea    rdx,[rsp+0x30]
   1400066a5:	mov    rcx,rdi
   1400066a8:	call   0x140007348
   1400066ad:	mov    ebx,DWORD PTR [rsp+0x30]
   1400066b1:	mov    r8,rax
   1400066b4:	mov    ecx,0x800
   1400066b9:	jmp    0x1400066be
   1400066bb:	mov    r8,r12
   1400066be:	test   ebx,ebx
   1400066c0:	jne    0x1400066d0
   1400066c2:	mov    WORD PTR [rsp+0x40],r12w
   1400066c8:	mov    ebx,r12d
   1400066cb:	mov    esi,r13d
   1400066ce:	jmp    0x140006719
   1400066d0:	mov    rax,QWORD PTR [rip+0x9359]        # 0x14000fa30
   1400066d7:	cmp    ebx,ecx
   1400066d9:	mov    edx,0x2
   1400066de:	cmova  ebx,ecx
   1400066e1:	lea    rcx,[rsp+0x40]
   1400066e6:	mov    DWORD PTR [rsp+0x28],ebx
   1400066ea:	mov    r9d,ebx
   1400066ed:	mov    QWORD PTR [rsp+0x20],rcx
   1400066f2:	mov    ecx,DWORD PTR [rax+0x18]
   1400066f5:	call   QWORD PTR [rip+0x3a15]        # 0x14000a110
   1400066fb:	movsxd rcx,eax
   1400066fe:	mov    esi,r12d
   140006701:	mov    WORD PTR [rsp+rcx*2+0x40],r12w
   140006707:	mov    rax,QWORD PTR [rdi+0x228]
   14000670e:	cmp    QWORD PTR [rdi+0x220],rax
   140006715:	cmove  esi,r13d
   140006719:	mov    r9d,0x2
   14000671f:	mov    DWORD PTR [rsp+0x20],ebp
   140006723:	mov    r8d,ebx
   140006726:	lea    rdx,[rsp+0x40]
   14000672b:	mov    rcx,r15
   14000672e:	call   0x140005f4c
   140006733:	mov    DWORD PTR [r14],eax
   140006736:	mov    ecx,0x800
   14000673b:	test   esi,esi
   14000673d:	jns    0x140006672
   140006743:	mov    esi,0x1
   140006748:	mov    rbx,QWORD PTR [rdi+0x250]
   14000674f:	test   rbx,rbx
   140006752:	je     0x140006768
   140006754:	call   QWORD PTR [rip+0x39ee]        # 0x14000a148
   14000675a:	mov    r8,rbx
   14000675d:	xor    edx,edx
   14000675f:	mov    rcx,rax
   140006762:	call   QWORD PTR [rip+0x39d0]        # 0x14000a138
   140006768:	cmp    QWORD PTR [rdi+0x260],r12
   14000676f:	je     0x14000678d
   140006771:	mov    rcx,QWORD PTR [rdi+0x260]
   140006778:	mov    rbx,QWORD PTR [rcx]
   14000677b:	call   QWORD PTR [rip+0x3d17]        # 0x14000a498
   140006781:	mov    QWORD PTR [rdi+0x260],rbx
   140006788:	test   rbx,rbx
   14000678b:	jne    0x140006771
   14000678d:	cmp    QWORD PTR [rdi+0x210],r12
   140006794:	je     0x14000679e
   140006796:	mov    rcx,rdi
   140006799:	call   0x140007bcc
   14000679e:	mov    rcx,rdi
   1400067a1:	call   QWORD PTR [rip+0x3be1]        # 0x14000a388
   1400067a7:	mov    eax,esi
   1400067a9:	mov    rcx,QWORD PTR [rsp+0x1040]
   1400067b1:	xor    rcx,rsp
   1400067b4:	call   0x1400090a0
   1400067b9:	mov    rbx,QWORD PTR [rsp+0x10a8]
   1400067c1:	add    rsp,0x1050
   1400067c8:	pop    r15
   1400067ca:	pop    r14
   1400067cc:	pop    r13
   1400067ce:	pop    r12
   1400067d0:	pop    rdi
   1400067d1:	pop    rsi
   1400067d2:	pop    rbp
   1400067d3:	ret    
   1400067d4:	int3   
   1400067d5:	int3   
   1400067d6:	int3   
   1400067d7:	int3   
   1400067d8:	int3   
   1400067d9:	int3   
   1400067da:	int3   
   1400067db:	int3   
   1400067dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400067e1:	mov    QWORD PTR [rsp+0x10],rbp
   1400067e6:	mov    QWORD PTR [rsp+0x18],rsi
   1400067eb:	push   rdi
   1400067ec:	push   r14
   1400067ee:	push   r15
   1400067f0:	sub    rsp,0x40
   1400067f4:	mov    r15,rcx
   1400067f7:	xor    edi,edi
   1400067f9:	mov    ebp,r9d
   1400067fc:	mov    r14,r8
   1400067ff:	mov    rsi,rdx
   140006802:	lea    ecx,[rdi+0x20]
   140006805:	call   0x140008ca8
   14000680a:	mov    QWORD PTR [rsp+0x30],rax
   14000680f:	mov    rbx,rax
   140006812:	test   rax,rax
   140006815:	je     0x140006827
   140006817:	and    DWORD PTR [rax+0x8],edi
   14000681a:	and    QWORD PTR [rax],rdi
   14000681d:	and    QWORD PTR [rax+0x10],rdi
   140006821:	and    QWORD PTR [rax+0x18],rdi
   140006825:	jmp    0x140006829
   140006827:	xor    ebx,ebx
   140006829:	test   rbx,rbx
   14000682c:	jne    0x14000685d
   14000682e:	mov    rax,QWORD PTR [rip+0x91fb]        # 0x14000fa30
   140006835:	lea    r9d,[rbx+0x10]
   140006839:	lea    r8,[rip+0x5cc0]        # 0x14000c500
   140006840:	lea    rdx,[rip+0x5949]        # 0x14000c190
   140006847:	mov    rcx,QWORD PTR [rax+0x10]
   14000684b:	mov    rcx,QWORD PTR [rcx+0x1028]
   140006852:	call   QWORD PTR [rip+0x39f0]        # 0x14000a248
   140006858:	jmp    0x14000691c
   14000685d:	mov    rdx,rsi
   140006860:	mov    rcx,rbx
   140006863:	call   0x140001a8c
   140006868:	test   eax,eax
   14000686a:	je     0x1400068e6
   14000686c:	mov    rcx,QWORD PTR [rbx]
   14000686f:	xor    edx,edx
   140006871:	call   QWORD PTR [rip+0x38e1]        # 0x14000a158
   140006877:	mov    esi,eax
   140006879:	cmp    eax,0xffffffff
   14000687c:	je     0x1400068e6
   14000687e:	cmp    DWORD PTR [rbx+0x8],0x0
   140006882:	mov    edi,0x1
   140006887:	jne    0x14000688d
   140006889:	xor    edx,edx
   14000688b:	jmp    0x1400068d1
   14000688d:	cmp    QWORD PTR [rbx+0x18],0x0
   140006892:	jne    0x1400068b8
   140006894:	and    QWORD PTR [rsp+0x28],0x0
   14000689a:	xor    r9d,r9d
   14000689d:	and    QWORD PTR [rsp+0x20],0x0
   1400068a3:	xor    r8d,r8d
   1400068a6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400068aa:	lea    edx,[r9+0x4]
   1400068ae:	call   QWORD PTR [rip+0x38cc]        # 0x14000a180
   1400068b4:	mov    QWORD PTR [rbx+0x18],rax
   1400068b8:	mov    rdx,QWORD PTR [rbx+0x18]
   1400068bc:	test   rdx,rdx
   1400068bf:	je     0x1400068d1
   1400068c1:	mov    eax,0xfeff
   1400068c6:	mov    r9d,0x2
   1400068cc:	cmp    ax,WORD PTR [rdx]
   1400068cf:	je     0x1400068d4
   1400068d1:	mov    r9d,edi
   1400068d4:	mov    r8d,esi
   1400068d7:	mov    DWORD PTR [rsp+0x20],ebp
   1400068db:	mov    rcx,r15
   1400068de:	call   0x140005f4c
   1400068e3:	mov    DWORD PTR [r14],eax
   1400068e6:	mov    rcx,QWORD PTR [rbx+0x18]
   1400068ea:	test   rcx,rcx
   1400068ed:	je     0x1400068f5
   1400068ef:	call   QWORD PTR [rip+0x38ab]        # 0x14000a1a0
   1400068f5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400068f9:	test   rcx,rcx
   1400068fc:	je     0x140006904
   1400068fe:	call   QWORD PTR [rip+0x3894]        # 0x14000a198
   140006904:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   140006908:	je     0x140006913
   14000690a:	mov    rcx,QWORD PTR [rbx]
   14000690d:	call   QWORD PTR [rip+0x3885]        # 0x14000a198
   140006913:	mov    rcx,rbx
   140006916:	call   QWORD PTR [rip+0x3a6c]        # 0x14000a388
   14000691c:	mov    rbx,QWORD PTR [rsp+0x60]
   140006921:	mov    eax,edi
   140006923:	mov    rbp,QWORD PTR [rsp+0x68]
   140006928:	mov    rsi,QWORD PTR [rsp+0x70]
   14000692d:	add    rsp,0x40
   140006931:	pop    r15
   140006933:	pop    r14
   140006935:	pop    rdi
   140006936:	ret    
   140006937:	int3   
   140006938:	int3   
   140006939:	int3   
   14000693a:	int3   
   14000693b:	int3   
   14000693c:	int3   
   14000693d:	int3   
   14000693e:	int3   
   14000693f:	int3   
   140006940:	mov    rax,rsp
   140006943:	mov    QWORD PTR [rax+0x10],rbx
   140006947:	mov    QWORD PTR [rax+0x18],rsi
   14000694b:	mov    QWORD PTR [rax+0x20],rdi
   14000694f:	push   rbp
   140006950:	push   r12
   140006952:	push   r13
   140006954:	push   r14
   140006956:	push   r15
   140006958:	lea    rbp,[rax-0xc28]
   14000695f:	sub    rsp,0xd00
   140006966:	mov    rax,QWORD PTR [rip+0x869b]        # 0x14000f008
   14000696d:	xor    rax,rsp
   140006970:	mov    QWORD PTR [rbp+0xbf0],rax
   140006977:	mov    rbx,QWORD PTR [rip+0x90b2]        # 0x14000fa30
   14000697e:	mov    r13,rcx
   140006981:	xor    r15d,r15d
   140006984:	lea    rcx,[rbp+0x5e2]
   14000698b:	xor    edx,edx
   14000698d:	mov    DWORD PTR [rsp+0x40],r15d
   140006992:	mov    r8d,0x3fe
   140006998:	mov    rdi,QWORD PTR [rbx+0x10]
   14000699c:	mov    QWORD PTR [rsp+0x68],rdi
   1400069a1:	mov    r14,QWORD PTR [rdi+0x1028]
   1400069a8:	mov    WORD PTR [rbp+0x5e0],r15w
   1400069b0:	call   0x1400098c6
   1400069b5:	mov    esi,0x206
   1400069ba:	mov    WORD PTR [rbp+0x3d0],r15w
   1400069c2:	mov    r8d,esi
   1400069c5:	lea    rcx,[rbp+0x3d2]
   1400069cc:	xor    edx,edx
   1400069ce:	call   0x1400098c6
   1400069d3:	mov    r8d,esi
   1400069d6:	mov    WORD PTR [rbp-0x50],r15w
   1400069db:	xor    edx,edx
   1400069dd:	lea    rcx,[rbp-0x4e]
   1400069e1:	call   0x1400098c6
   1400069e6:	mov    eax,DWORD PTR [rbx]
   1400069e8:	mov    r12d,r15d
   1400069eb:	mov    DWORD PTR [rsp+0x60],eax
   1400069ef:	mov    esi,r15d
   1400069f2:	mov    eax,DWORD PTR [rbx+0x4]
   1400069f5:	mov    DWORD PTR [rsp+0x5c],eax
   1400069f9:	mov    DWORD PTR [rsp+0x44],r15d
   1400069fe:	mov    QWORD PTR [rsp+0x50],r15
   140006a03:	mov    DWORD PTR [rsp+0x48],r15d
   140006a08:	test   r14,r14
   140006a0b:	je     0x140007250
   140006a11:	mov    ecx,DWORD PTR [rdi+0x1048]
   140006a17:	mov    eax,0x51eb851f
   140006a1c:	add    ecx,ecx
   140006a1e:	mov    QWORD PTR [rsp+0x20],0x640000
   140006a27:	mul    ecx
   140006a29:	mov    ebx,0x3f3
   140006a2e:	xor    r9d,r9d
   140006a31:	shr    edx,0x5
   140006a34:	mov    rcx,r14
   140006a37:	inc    edx
   140006a39:	mov    DWORD PTR [r13+0x4],edx
   140006a3d:	mov    edx,ebx
   140006a3f:	lea    r8d,[rbx+0xe]
   140006a43:	call   QWORD PTR [rip+0x38b7]        # 0x14000a300
   140006a49:	xor    edi,edi
   140006a4b:	lea    r9d,[r15+0x1]
   140006a4f:	lea    r8d,[rbx+0x11]
   140006a53:	mov    QWORD PTR [rsp+0x20],rdi
   140006a58:	mov    edx,ebx
   140006a5a:	mov    rcx,r14
   140006a5d:	call   QWORD PTR [rip+0x389d]        # 0x14000a300
   140006a63:	lea    ecx,[rdi+0x8]
   140006a66:	call   0x140008ca8
   140006a6b:	mov    r15,rax
   140006a6e:	mov    QWORD PTR [rsp+0x70],rax
   140006a73:	lea    rax,[rip+0x504e]        # 0x14000bac8
   140006a7a:	test   r15,r15
   140006a7d:	je     0x140006a84
   140006a7f:	mov    QWORD PTR [r15],rax
   140006a82:	jmp    0x140006a8c
   140006a84:	mov    r15,rdi
   140006a87:	mov    QWORD PTR [rsp+0x70],rdi
   140006a8c:	lea    rbx,[rip+0x501d]        # 0x14000bab0
   140006a93:	test   r15,r15
   140006a96:	je     0x1400071de
   140006a9c:	mov    ecx,0x10
   140006aa1:	call   0x140008ca8
   140006aa6:	mov    QWORD PTR [rbp-0x80],rax
   140006aaa:	mov    rsi,rax
   140006aad:	mov    QWORD PTR [rsp+0x78],rax
   140006ab2:	test   rax,rax
   140006ab5:	je     0x140006ac0
   140006ab7:	mov    QWORD PTR [rax],rbx
   140006aba:	mov    QWORD PTR [rax+0x8],rdi
   140006abe:	jmp    0x140006ac7
   140006ac0:	mov    rsi,rdi
   140006ac3:	mov    QWORD PTR [rbp-0x80],rdi
   140006ac7:	test   rsi,rsi
   140006aca:	je     0x1400071cb
   140006ad0:	xor    edx,edx
   140006ad2:	mov    rcx,rsi
   140006ad5:	call   0x140005d20
   140006ada:	mov    r8,QWORD PTR [rip+0x8f4f]        # 0x14000fa30
   140006ae1:	or     rbx,0xffffffffffffffff
   140006ae5:	mov    QWORD PTR [rbp-0x78],r15
   140006ae9:	mov    eax,0x5
   140006aee:	mov    QWORD PTR [rbp-0x58],rsi
   140006af2:	mov    DWORD PTR [rbp-0x70],0x3e8
   140006af9:	mov    DWORD PTR [rbp-0x6c],0x30009
   140006b00:	mov    WORD PTR [rbp-0x68],ax
   140006b04:	mov    DWORD PTR [rbp-0x64],0x3f4ccccd
   140006b0b:	mov    DWORD PTR [rbp-0x60],0x3f4ccccd
   140006b12:	add    r8,0x40
   140006b16:	je     0x140006b27
   140006b18:	mov    rax,rbx
   140006b1b:	inc    rax
   140006b1e:	cmp    WORD PTR [r8+rax*2],di
   140006b23:	jne    0x140006b1b
   140006b25:	jmp    0x140006b2a
   140006b27:	mov    rax,rdi
   140006b2a:	dec    eax
   140006b2c:	cmp    eax,0x103
   140006b31:	ja     0x140006b48
   140006b33:	mov    r9,rbx
   140006b36:	lea    rcx,[rbp+0x1c0]
   140006b3d:	mov    edx,0x104
   140006b42:	call   QWORD PTR [rip+0x3830]        # 0x14000a378
   140006b48:	lea    rcx,[rbp+0x1c0]
   140006b4f:	call   QWORD PTR [rip+0x36c3]        # 0x14000a218
   140006b55:	lea    rcx,[rbp+0x1c0]
   140006b5c:	mov    rax,rbx
   140006b5f:	inc    rax
   140006b62:	cmp    WORD PTR [rcx+rax*2],di
   140006b66:	jne    0x140006b5f
   140006b68:	lea    rcx,[rip+0x5681]        # 0x14000c1f0
   140006b6f:	mov    DWORD PTR [rsp+0x28],0xc
   140006b77:	mov    QWORD PTR [rsp+0x20],rcx
   140006b7c:	lea    r8,[rbp+0x1c0]
   140006b83:	lea    rcx,[rbp+0x1c0]
   140006b8a:	mov    r9d,eax
   140006b8d:	call   0x1400081c0
   140006b92:	lea    rcx,[rbp+0x1c0]
   140006b99:	call   QWORD PTR [rip+0x3569]        # 0x14000a108
   140006b9f:	mov    QWORD PTR [rsp+0x78],rax
   140006ba4:	mov    r12,rax
   140006ba7:	test   rax,rax
   140006baa:	je     0x1400071ae
   140006bb0:	lea    rdx,[rip+0x5659]        # 0x14000c210
   140006bb7:	mov    rcx,rax
   140006bba:	call   QWORD PTR [rip+0x3540]        # 0x14000a100
   140006bc0:	mov    rbx,rax
   140006bc3:	test   rax,rax
   140006bc6:	je     0x1400071ae
   140006bcc:	mov    rcx,rax
   140006bcf:	call   QWORD PTR [rip+0x3923]        # 0x14000a4f8
   140006bd5:	lea    rcx,[rsp+0x50]
   140006bda:	call   rbx
   140006bdc:	test   eax,eax
   140006bde:	je     0x1400071ae
   140006be4:	mov    rdi,QWORD PTR [rsp+0x50]
   140006be9:	mov    rax,QWORD PTR [rdi]
   140006bec:	mov    rbx,QWORD PTR [rax]
   140006bef:	mov    rcx,rbx
   140006bf2:	call   QWORD PTR [rip+0x3900]        # 0x14000a4f8
   140006bf8:	lea    rdx,[rbp-0x78]
   140006bfc:	mov    rcx,rdi
   140006bff:	call   rbx
   140006c01:	xor    edi,edi
   140006c03:	test   eax,eax
   140006c05:	je     0x1400071ae
   140006c0b:	mov    rcx,QWORD PTR [rsp+0x50]
   140006c10:	or     r9,0xffffffffffffffff
   140006c14:	mov    rax,QWORD PTR [rip+0x8e15]        # 0x14000fa30
   140006c1b:	mov    edx,0x104
   140006c20:	mov    rbx,QWORD PTR [rsp+0x68]
   140006c25:	mov    QWORD PTR [rax+0x30],rcx
   140006c29:	lea    rcx,[rbp+0x3d0]
   140006c30:	lea    r8,[rbx+0x7d0]
   140006c37:	call   QWORD PTR [rip+0x373b]        # 0x14000a378
   140006c3d:	cmp    eax,0x50
   140006c40:	je     0x140006c71
   140006c42:	mov    r9d,DWORD PTR [rbx+0x1018]
   140006c49:	lea    r8,[rip+0x5618]        # 0x14000c268
   140006c50:	mov    edx,0x104
   140006c55:	lea    rcx,[rbp+0x9e0]
   140006c5c:	call   0x140001b34
   140006c61:	jmp    0x140006c71
   140006c63:	xor    r8d,r8d
   140006c66:	mov    edx,0x8002
   140006c6b:	call   QWORD PTR [rip+0x362f]        # 0x14000a2a0
   140006c71:	mov    rax,QWORD PTR [rip+0x8db8]        # 0x14000fa30
   140006c78:	xor    r9d,r9d
   140006c7b:	mov    rcx,r14
   140006c7e:	cmp    DWORD PTR [rax+0x24c],edi
   140006c84:	je     0x140006c63
   140006c86:	lea    rax,[rip+0x5617]        # 0x14000c2a4
   140006c8d:	mov    edx,0x3f2
   140006c92:	lea    r8d,[r9+0xc]
   140006c96:	mov    QWORD PTR [rsp+0x20],rax
   140006c9b:	call   QWORD PTR [rip+0x365f]        # 0x14000a300
   140006ca1:	cmp    DWORD PTR [rbx+0x1018],edi
   140006ca7:	jbe    0x140007183
   140006cad:	mov    r15d,edi
   140006cb0:	mov    r12d,edi
   140006cb3:	mov    esi,edi
   140006cb5:	mov    eax,r15d
   140006cb8:	lea    rcx,[rbp-0x50]
   140006cbc:	or     r9,0xffffffffffffffff
   140006cc0:	mov    edx,0x104
   140006cc5:	mov    r8,QWORD PTR [rbx+rax*8+0x9d8]
   140006ccd:	call   QWORD PTR [rip+0x36a5]        # 0x14000a378
   140006cd3:	cmp    eax,0x50
   140006cd6:	je     0x140007175
   140006cdc:	or     r9,0xffffffffffffffff
   140006ce0:	lea    r8,[rbp-0x50]
   140006ce4:	mov    edx,0x200
   140006ce9:	lea    rcx,[rbp+0x5e0]
   140006cf0:	call   QWORD PTR [rip+0x3682]        # 0x14000a378
   140006cf6:	cmp    eax,0x50
   140006cf9:	je     0x140007175
   140006cff:	mov    rcx,r14
   140006d02:	call   QWORD PTR [rip+0x35e0]        # 0x14000a2e8
   140006d08:	mov    r8d,0xc8
   140006d0e:	lea    rdx,[rbp+0x5e0]
   140006d15:	mov    rcx,rax
   140006d18:	call   QWORD PTR [rip+0x34f2]        # 0x14000a210
   140006d1e:	xor    r9d,r9d
   140006d21:	lea    rax,[rbp+0x5e0]
   140006d28:	mov    edx,0x3ee
   140006d2d:	mov    QWORD PTR [rsp+0x20],rax
   140006d32:	mov    rcx,r14
   140006d35:	lea    r8d,[r9+0xc]
   140006d39:	call   QWORD PTR [rip+0x35c1]        # 0x14000a300
   140006d3f:	call   0x140001a0c
   140006d44:	mov    QWORD PTR [rsp+0x30],rdi
   140006d49:	lea    rcx,[rbp-0x50]
   140006d4d:	mov    r9,rax
   140006d50:	mov    DWORD PTR [rsp+0x28],edi
   140006d54:	mov    edx,0x80000000
   140006d59:	mov    DWORD PTR [rsp+0x20],0x3
   140006d61:	mov    r8d,0x1
   140006d67:	call   QWORD PTR [rip+0x3423]        # 0x14000a190
   140006d6d:	mov    rbx,rax
   140006d70:	cmp    rax,0xffffffffffffffff
   140006d74:	je     0x140006d99
   140006d76:	xor    edx,edx
   140006d78:	mov    rcx,rax
   140006d7b:	call   QWORD PTR [rip+0x33d7]        # 0x14000a158
   140006d81:	mov    r12d,eax
   140006d84:	cmp    eax,0xffffffff
   140006d87:	je     0x140006d90
   140006d89:	lea    esi,[rsi+rax*2]
   140006d8c:	mov    DWORD PTR [rsp+0x44],esi
   140006d90:	mov    rcx,rbx
   140006d93:	call   QWORD PTR [rip+0x33ff]        # 0x14000a198
   140006d99:	lea    ecx,[r12+r12*1]
   140006d9d:	mov    QWORD PTR [rsp+0x20],0x640000
   140006da6:	mov    eax,0x51eb851f
   140006dab:	mov    ebx,0x3f4
   140006db0:	mul    ecx
   140006db2:	xor    r9d,r9d
   140006db5:	lea    r8d,[rbx+0xd]
   140006db9:	shr    edx,0x5
   140006dbc:	mov    rcx,r14
   140006dbf:	inc    edx
   140006dc1:	mov    DWORD PTR [r13+0xc],edx
   140006dc5:	mov    edx,ebx
   140006dc7:	call   QWORD PTR [rip+0x3533]        # 0x14000a300
   140006dcd:	mov    r9d,0x1
   140006dd3:	mov    QWORD PTR [rsp+0x20],rdi
   140006dd8:	lea    r8d,[rbx+0x10]
   140006ddc:	mov    edx,ebx
   140006dde:	mov    rcx,r14
   140006de1:	call   QWORD PTR [rip+0x3519]        # 0x14000a300
   140006de7:	xor    r9d,r9d
   140006dea:	mov    QWORD PTR [rsp+0x20],rdi
   140006def:	lea    r8d,[rbx+0xe]
   140006df3:	mov    edx,ebx
   140006df5:	mov    rcx,r14
   140006df8:	call   QWORD PTR [rip+0x3502]        # 0x14000a300
   140006dfe:	lea    rcx,[rbp-0x50]
   140006e02:	call   QWORD PTR [rip+0x3400]        # 0x14000a208
   140006e08:	mov    rdi,rax
   140006e0b:	mov    eax,DWORD PTR [rsp+0x60]
   140006e0f:	cmp    eax,0x5
   140006e12:	jb     0x140006e24
   140006e14:	jne    0x140006e1d
   140006e16:	cmp    DWORD PTR [rsp+0x5c],0x0
   140006e1b:	je     0x140006e24
   140006e1d:	mov    ebx,0x7f
   140006e22:	jmp    0x140006e29
   140006e24:	mov    ebx,0x409
   140006e29:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006e2e:	lea    rax,[rip+0x501b]        # 0x14000be50
   140006e35:	or     r9d,0xffffffff
   140006e39:	mov    QWORD PTR [rsp+0x20],rax
   140006e3e:	mov    r8,rdi
   140006e41:	mov    ecx,ebx
   140006e43:	lea    edx,[r9+0x2]
   140006e47:	call   QWORD PTR [rip+0x3313]        # 0x14000a160
   140006e4d:	cmp    eax,0x2
   140006e50:	je     0x140006f14
   140006e56:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006e5b:	lea    rax,[rip+0x4ffe]        # 0x14000be60
   140006e62:	or     r9d,0xffffffff
   140006e66:	mov    QWORD PTR [rsp+0x20],rax
   140006e6b:	mov    r8,rdi
   140006e6e:	mov    ecx,ebx
   140006e70:	lea    edx,[r9+0x2]
   140006e74:	call   QWORD PTR [rip+0x32e6]        # 0x14000a160
   140006e7a:	cmp    eax,0x2
   140006e7d:	je     0x140006f14
   140006e83:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006e88:	lea    rax,[rip+0x4f91]        # 0x14000be20
   140006e8f:	or     r9d,0xffffffff
   140006e93:	mov    QWORD PTR [rsp+0x20],rax
   140006e98:	mov    r8,rdi
   140006e9b:	mov    ecx,ebx
   140006e9d:	lea    edx,[r9+0x2]
   140006ea1:	call   QWORD PTR [rip+0x32b9]        # 0x14000a160
   140006ea7:	cmp    eax,0x2
   140006eaa:	je     0x140006efe
   140006eac:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006eb1:	lea    rax,[rip+0x4f78]        # 0x14000be30
   140006eb8:	or     r9d,0xffffffff
   140006ebc:	mov    QWORD PTR [rsp+0x20],rax
   140006ec1:	mov    r8,rdi
   140006ec4:	mov    ecx,ebx
   140006ec6:	lea    edx,[r9+0x2]
   140006eca:	call   QWORD PTR [rip+0x3290]        # 0x14000a160
   140006ed0:	cmp    eax,0x2
   140006ed3:	je     0x140006efe
   140006ed5:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006eda:	lea    rax,[rip+0x4f5f]        # 0x14000be40
   140006ee1:	or     r9d,0xffffffff
   140006ee5:	mov    QWORD PTR [rsp+0x20],rax
   140006eea:	mov    r8,rdi
   140006eed:	mov    ecx,ebx
   140006eef:	lea    edx,[r9+0x2]
   140006ef3:	call   QWORD PTR [rip+0x3267]        # 0x14000a160
   140006ef9:	cmp    eax,0x2
   140006efc:	jne    0x140006f4e
   140006efe:	xor    r9d,r9d
   140006f01:	lea    r8,[rsp+0x40]
   140006f06:	lea    rdx,[rbp-0x50]
   140006f0a:	mov    rcx,r13
   140006f0d:	call   0x1400067dc
   140006f12:	jmp    0x140006f4e
   140006f14:	xor    r9d,r9d
   140006f17:	lea    r8,[rsp+0x40]
   140006f1c:	lea    rdx,[rbp-0x50]
   140006f20:	mov    rcx,r13
   140006f23:	call   0x140006438
   140006f28:	test   eax,eax
   140006f2a:	jne    0x140006f46
   140006f2c:	and    DWORD PTR [rsp+0x48],eax
   140006f30:	lea    r8,[rsp+0x40]
   140006f35:	xor    r9d,r9d
   140006f38:	lea    rdx,[rbp-0x50]
   140006f3c:	mov    rcx,r13
   140006f3f:	call   0x140006580
   140006f44:	jmp    0x140006f4e
   140006f46:	mov    DWORD PTR [rsp+0x48],0x1
   140006f4e:	mov    rax,QWORD PTR [rip+0x8adb]        # 0x14000fa30
   140006f55:	cmp    DWORD PTR [rax+0x1c],0x0
   140006f59:	jne    0x140007173
   140006f5f:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006f64:	lea    rax,[rip+0x4ee5]        # 0x14000be50
   140006f6b:	or     r9d,0xffffffff
   140006f6f:	mov    QWORD PTR [rsp+0x20],rax
   140006f74:	mov    r8,rdi
   140006f77:	mov    ecx,ebx
   140006f79:	lea    edx,[r9+0x2]
   140006f7d:	call   QWORD PTR [rip+0x31dd]        # 0x14000a160
   140006f83:	cmp    eax,0x2
   140006f86:	je     0x1400070a4
   140006f8c:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006f91:	lea    rax,[rip+0x4ec8]        # 0x14000be60
   140006f98:	or     r9d,0xffffffff
   140006f9c:	mov    QWORD PTR [rsp+0x20],rax
   140006fa1:	mov    r8,rdi
   140006fa4:	mov    ecx,ebx
   140006fa6:	lea    edx,[r9+0x2]
   140006faa:	call   QWORD PTR [rip+0x31b0]        # 0x14000a160
   140006fb0:	cmp    eax,0x2
   140006fb3:	je     0x1400070a4
   140006fb9:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006fbe:	lea    rax,[rip+0x4e5b]        # 0x14000be20
   140006fc5:	or     r9d,0xffffffff
   140006fc9:	mov    QWORD PTR [rsp+0x20],rax
   140006fce:	mov    r8,rdi
   140006fd1:	mov    ecx,ebx
   140006fd3:	lea    edx,[r9+0x2]
   140006fd7:	call   QWORD PTR [rip+0x3183]        # 0x14000a160
   140006fdd:	cmp    eax,0x2
   140006fe0:	je     0x140007034
   140006fe2:	or     DWORD PTR [rsp+0x28],0xffffffff
   140006fe7:	lea    rax,[rip+0x4e42]        # 0x14000be30
   140006fee:	or     r9d,0xffffffff
   140006ff2:	mov    QWORD PTR [rsp+0x20],rax
   140006ff7:	mov    r8,rdi
   140006ffa:	mov    ecx,ebx
   140006ffc:	lea    edx,[r9+0x2]
   140007000:	call   QWORD PTR [rip+0x315a]        # 0x14000a160
   140007006:	cmp    eax,0x2
   140007009:	je     0x140007034
   14000700b:	or     DWORD PTR [rsp+0x28],0xffffffff
   140007010:	lea    rax,[rip+0x4e29]        # 0x14000be40
   140007017:	or     r9d,0xffffffff
   14000701b:	mov    QWORD PTR [rsp+0x20],rax
   140007020:	mov    r8,rdi
   140007023:	mov    ecx,ebx
   140007025:	lea    edx,[r9+0x2]
   140007029:	call   QWORD PTR [rip+0x3131]        # 0x14000a160
   14000702f:	cmp    eax,0x2
   140007032:	jne    0x14000704b
   140007034:	mov    r9d,0x1
   14000703a:	lea    r8,[rsp+0x40]
   14000703f:	lea    rdx,[rbp-0x50]
   140007043:	mov    rcx,r13
   140007046:	call   0x1400067dc
   14000704b:	xor    edi,edi
   14000704d:	mov    rax,QWORD PTR [rip+0x89dc]        # 0x14000fa30
   140007054:	cmp    DWORD PTR [rax+0x1c],edi
   140007057:	jne    0x140007175
   14000705d:	mov    ebx,0x3f4
   140007062:	mov    QWORD PTR [rsp+0x20],rdi
   140007067:	mov    r9d,0x64
   14000706d:	mov    edx,ebx
   14000706f:	mov    rcx,r14
   140007072:	lea    r8d,[rbx+0xe]
   140007076:	call   QWORD PTR [rip+0x3284]        # 0x14000a300
   14000707c:	xor    r9d,r9d
   14000707f:	mov    QWORD PTR [rsp+0x20],rdi
   140007084:	lea    r8d,[rbx+0x14]
   140007088:	mov    edx,ebx
   14000708a:	mov    rcx,r14
   14000708d:	call   QWORD PTR [rip+0x326d]        # 0x14000a300
   140007093:	mov    rbx,rax
   140007096:	cmp    eax,0x64
   140007099:	jae    0x1400070f8
   14000709b:	mov    eax,DWORD PTR [r13+0xc]
   14000709f:	imul   ebx,eax
   1400070a2:	jmp    0x1400070f3
   1400070a4:	xor    edi,edi
   1400070a6:	lea    r8,[rsp+0x40]
   1400070ab:	lea    rdx,[rbp-0x50]
   1400070af:	mov    rcx,r13
   1400070b2:	lea    r9d,[rdi+0x1]
   1400070b6:	cmp    DWORD PTR [rsp+0x48],edi
   1400070ba:	je     0x1400070c3
   1400070bc:	call   0x140006438
   1400070c1:	jmp    0x14000704d
   1400070c3:	call   0x140006580
   1400070c8:	jmp    0x14000704d
   1400070ca:	mov    ecx,r12d
   1400070cd:	sub    ecx,ebx
   1400070cf:	cmp    ecx,eax
   1400070d1:	jbe    0x1400070f8
   1400070d3:	mov    edx,0x3f4
   1400070d8:	mov    QWORD PTR [rsp+0x20],rdi
   1400070dd:	xor    r9d,r9d
   1400070e0:	mov    rcx,r14
   1400070e3:	lea    r8d,[rdx+0x11]
   1400070e7:	call   QWORD PTR [rip+0x3213]        # 0x14000a300
   1400070ed:	mov    eax,DWORD PTR [r13+0xc]
   1400070f1:	add    ebx,eax
   1400070f3:	cmp    ebx,r12d
   1400070f6:	jb     0x1400070ca
   1400070f8:	mov    edx,0x3f3
   1400070fd:	mov    QWORD PTR [rsp+0x20],rdi
   140007102:	xor    r9d,r9d
   140007105:	mov    rcx,r14
   140007108:	lea    r8d,[rdx+0x15]
   14000710c:	call   QWORD PTR [rip+0x31ee]        # 0x14000a300
   140007112:	mov    rbx,rax
   140007115:	cmp    eax,0x61
   140007118:	jae    0x140007158
   14000711a:	mov    eax,DWORD PTR [r13+0x4]
   14000711e:	mov    edi,DWORD PTR [rsp+0x44]
   140007122:	imul   ebx,eax
   140007125:	cmp    ebx,edi
   140007127:	jae    0x140007154
   140007129:	mov    ecx,edi
   14000712b:	sub    ecx,ebx
   14000712d:	cmp    ecx,eax
   14000712f:	jbe    0x140007154
   140007131:	and    QWORD PTR [rsp+0x20],0x0
   140007137:	mov    edx,0x3f3
   14000713c:	xor    r9d,r9d
   14000713f:	mov    rcx,r14
   140007142:	lea    r8d,[rdx+0x12]
   140007146:	call   QWORD PTR [rip+0x31b4]        # 0x14000a300
   14000714c:	mov    eax,DWORD PTR [r13+0x4]
   140007150:	add    ebx,eax
   140007152:	jmp    0x140007125
   140007154:	mov    esi,edi
   140007156:	xor    edi,edi
   140007158:	mov    rbx,QWORD PTR [rsp+0x68]
   14000715d:	inc    r15d
   140007160:	mov    DWORD PTR [r13+0x8],edi
   140007164:	cmp    r15d,DWORD PTR [rbx+0x1018]
   14000716b:	jb     0x140006cb5
   140007171:	jmp    0x140007175
   140007173:	xor    edi,edi
   140007175:	mov    rsi,QWORD PTR [rbp-0x80]
   140007179:	mov    r15,QWORD PTR [rsp+0x70]
   14000717e:	mov    r12,QWORD PTR [rsp+0x78]
   140007183:	mov    rax,QWORD PTR [rip+0x88a6]        # 0x14000fa30
   14000718a:	cmp    DWORD PTR [rax+0x1c],edi
   14000718d:	jne    0x1400071cb
   14000718f:	mov    edx,0x3f3
   140007194:	mov    QWORD PTR [rsp+0x20],rdi
   140007199:	mov    r9d,0x64
   14000719f:	mov    rcx,r14
   1400071a2:	lea    r8d,[rdx+0xf]
   1400071a6:	call   QWORD PTR [rip+0x3154]        # 0x14000a300
   1400071ac:	jmp    0x1400071cb
   1400071ae:	mov    r9d,0x10
   1400071b4:	lea    r8,[rip+0x5345]        # 0x14000c500
   1400071bb:	lea    rdx,[rip+0x505e]        # 0x14000c220
   1400071c2:	mov    rcx,r14
   1400071c5:	call   QWORD PTR [rip+0x307d]        # 0x14000a248
   1400071cb:	lea    rax,[rip+0x48f6]        # 0x14000bac8
   1400071d2:	mov    rcx,r15
   1400071d5:	mov    QWORD PTR [r15],rax
   1400071d8:	call   QWORD PTR [rip+0x31aa]        # 0x14000a388
   1400071de:	cmp    QWORD PTR [rsp+0x50],rdi
   1400071e3:	je     0x140007211
   1400071e5:	mov    rax,QWORD PTR [rip+0x8844]        # 0x14000fa30
   1400071ec:	mov    QWORD PTR [rax+0x30],rdi
   1400071f0:	mov    rdi,QWORD PTR [rsp+0x50]
   1400071f5:	mov    rax,QWORD PTR [rdi]
   1400071f8:	mov    rbx,QWORD PTR [rax+0x8]
   1400071fc:	mov    rcx,rbx
   1400071ff:	call   QWORD PTR [rip+0x32f3]        # 0x14000a4f8
   140007205:	mov    rcx,rdi
   140007208:	call   rbx
   14000720a:	xor    edi,edi
   14000720c:	mov    QWORD PTR [rsp+0x50],rdi
   140007211:	test   rsi,rsi
   140007214:	je     0x140007242
   140007216:	mov    rcx,QWORD PTR [rsi+0x8]
   14000721a:	lea    rax,[rip+0x488f]        # 0x14000bab0
   140007221:	mov    QWORD PTR [rsi],rax
   140007224:	test   rcx,rcx
   140007227:	je     0x140007239
   140007229:	call   QWORD PTR [rip+0x3109]        # 0x14000a338
   14000722f:	mov    rcx,QWORD PTR [rsi+0x8]
   140007233:	call   QWORD PTR [rip+0x30f7]        # 0x14000a330
   140007239:	mov    rcx,rsi
   14000723c:	call   QWORD PTR [rip+0x3146]        # 0x14000a388
   140007242:	test   r12,r12
   140007245:	je     0x140007250
   140007247:	mov    rcx,r12
   14000724a:	call   QWORD PTR [rip+0x2ea8]        # 0x14000a0f8
   140007250:	xor    r9d,r9d
   140007253:	xor    r8d,r8d
   140007256:	mov    edx,0x8001
   14000725b:	mov    rcx,r14
   14000725e:	call   QWORD PTR [rip+0x3054]        # 0x14000a2b8
   140007264:	mov    eax,DWORD PTR [rsp+0x40]
   140007268:	mov    rcx,QWORD PTR [rbp+0xbf0]
   14000726f:	xor    rcx,rsp
   140007272:	call   0x1400090a0
   140007277:	lea    r11,[rsp+0xd00]
   14000727f:	mov    rbx,QWORD PTR [r11+0x38]
   140007283:	mov    rsi,QWORD PTR [r11+0x40]
   140007287:	mov    rdi,QWORD PTR [r11+0x48]
   14000728b:	mov    rsp,r11
   14000728e:	pop    r15
   140007290:	pop    r14
   140007292:	pop    r13
   140007294:	pop    r12
   140007296:	pop    rbp
   140007297:	ret    
   140007298:	int3   
   140007299:	int3   
   14000729a:	int3   
   14000729b:	int3   
   14000729c:	int3   
   14000729d:	int3   
   14000729e:	int3   
   14000729f:	int3   
   1400072a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400072a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400072aa:	push   rdi
   1400072ab:	sub    rsp,0x20
   1400072af:	mov    rsi,QWORD PTR [rcx+0x250]
   1400072b6:	mov    rdi,rcx
   1400072b9:	test   rsi,rsi
   1400072bc:	je     0x1400072fe
   1400072be:	mov    ebx,DWORD PTR [rcx+0x244]
   1400072c4:	add    ebx,0x50
   1400072c7:	add    rbx,rbx
   1400072ca:	call   QWORD PTR [rip+0x2e78]        # 0x14000a148
   1400072d0:	mov    r9,rbx
   1400072d3:	mov    r8,rsi
   1400072d6:	mov    rcx,rax
   1400072d9:	mov    edx,0x8
   1400072de:	call   QWORD PTR [rip+0x2e5c]        # 0x14000a140
   1400072e4:	test   rax,rax
   1400072e7:	je     0x140007330
   1400072e9:	add    DWORD PTR [rdi+0x244],0x50
   1400072f0:	mov    QWORD PTR [rdi+0x250],rax
   1400072f7:	mov    eax,0x1
   1400072fc:	jmp    0x140007332
   1400072fe:	call   QWORD PTR [rip+0x2e44]        # 0x14000a148
   140007304:	mov    edx,0x8
   140007309:	mov    r8d,0xa0
   14000730f:	mov    rcx,rax
   140007312:	call   QWORD PTR [rip+0x2e38]        # 0x14000a150
   140007318:	mov    QWORD PTR [rdi+0x250],rax
   14000731f:	test   rax,rax
   140007322:	je     0x140007330
   140007324:	mov    DWORD PTR [rdi+0x244],0x50
   14000732e:	jmp    0x1400072f7
   140007330:	xor    eax,eax
   140007332:	mov    rbx,QWORD PTR [rsp+0x30]
   140007337:	mov    rsi,QWORD PTR [rsp+0x38]
   14000733c:	add    rsp,0x20
   140007340:	pop    rdi
   140007341:	ret    
   140007342:	int3   
   140007343:	int3   
   140007344:	int3   
   140007345:	int3   
   140007346:	int3   
   140007347:	int3   
   140007348:	mov    rax,rsp
   14000734b:	mov    QWORD PTR [rax+0x8],rbx
   14000734f:	mov    QWORD PTR [rax+0x10],rbp
   140007353:	mov    QWORD PTR [rax+0x18],rsi
   140007357:	mov    QWORD PTR [rax+0x20],rdi
   14000735b:	push   r14
   14000735d:	sub    rsp,0x20
   140007361:	mov    rax,QWORD PTR [rcx+0x228]
   140007368:	xor    esi,esi
   14000736a:	mov    r14,rdx
   14000736d:	mov    rbx,rcx
   140007370:	mov    ebp,0x2
   140007375:	cmp    QWORD PTR [rcx+0x220],rax
   14000737c:	jb     0x140007385
   14000737e:	xor    eax,eax
   140007380:	jmp    0x14000755c
   140007385:	and    DWORD PTR [rcx+0x240],esi
   14000738b:	and    DWORD PTR [rcx+0x268],esi
   140007391:	cmp    DWORD PTR [rbx+0x268],0x0
   140007398:	jne    0x140007544
   14000739e:	mov    rax,QWORD PTR [rbx+0x220]
   1400073a5:	movzx  edi,BYTE PTR [rax]
   1400073a8:	inc    rax
   1400073ab:	mov    QWORD PTR [rbx+0x220],rax
   1400073b2:	mov    al,BYTE PTR [rbx+0x234]
   1400073b8:	cmp    al,0x1
   1400073ba:	jne    0x1400073cb
   1400073bc:	mov    edx,edi
   1400073be:	mov    rcx,rbx
   1400073c1:	call   0x1400075a0
   1400073c6:	jmp    0x140007528
   1400073cb:	cmp    edi,0xa
   1400073ce:	je     0x140007530
   1400073d4:	cmp    edi,0xd
   1400073d7:	je     0x140007530
   1400073dd:	cmp    edi,0x5c
   1400073e0:	je     0x140007520
   1400073e6:	cmp    edi,0x7b
   1400073e9:	je     0x1400074d5
   1400073ef:	cmp    edi,0x7d
   1400073f2:	je     0x140007465
   1400073f4:	test   al,al
   1400073f6:	je     0x1400073bc
   1400073f8:	cmp    al,0x2
   1400073fa:	jne    0x140007577
   140007400:	mov    ecx,edi
   140007402:	shl    esi,0x4
   140007405:	call   QWORD PTR [rip+0x3085]        # 0x14000a490
   14000740b:	test   eax,eax
   14000740d:	je     0x140007414
   14000740f:	add    esi,0xffffffd0
   140007412:	jmp    0x14000742c
   140007414:	lea    eax,[rdi-0x61]
   140007417:	cmp    eax,0x5
   14000741a:	ja     0x140007421
   14000741c:	add    esi,0xffffffa9
   14000741f:	jmp    0x14000742c
   140007421:	lea    eax,[rdi-0x41]
   140007424:	cmp    eax,0x5
   140007427:	ja     0x140007430
   140007429:	add    esi,0xffffffc9
   14000742c:	add    esi,edi
   14000742e:	jmp    0x140007437
   140007430:	mov    esi,0x20
   140007435:	xor    ebp,ebp
   140007437:	sub    ebp,0x1
   14000743a:	jne    0x140007530
   140007440:	mov    edx,esi
   140007442:	mov    rcx,rbx
   140007445:	call   0x1400075a0
   14000744a:	test   eax,eax
   14000744c:	je     0x14000737e
   140007452:	xor    esi,esi
   140007454:	mov    ebp,0x2
   140007459:	mov    BYTE PTR [rbx+0x234],sil
   140007460:	jmp    0x140007530
   140007465:	cmp    QWORD PTR [rbx+0x260],0x0
   14000746d:	jne    0x140007490
   14000746f:	mov    r9d,0x10
   140007475:	lea    r8,[rip+0x5084]        # 0x14000c500
   14000747c:	lea    rdx,[rip+0x500d]        # 0x14000c490
   140007483:	xor    ecx,ecx
   140007485:	call   QWORD PTR [rip+0x2dbd]        # 0x14000a248
   14000748b:	jmp    0x140007530
   140007490:	xor    edx,edx
   140007492:	mov    rax,QWORD PTR [rbx+0x260]
   140007499:	mov    cl,BYTE PTR [rax+rdx*1+0x8]
   14000749d:	mov    BYTE PTR [rbx+rdx*1+0x234],cl
   1400074a4:	inc    rdx
   1400074a7:	cmp    rdx,0x2
   1400074ab:	jl     0x140007492
   1400074ad:	mov    rcx,QWORD PTR [rbx+0x260]
   1400074b4:	mov    eax,DWORD PTR [rcx+0xc]
   1400074b7:	mov    DWORD PTR [rbx+0x230],eax
   1400074bd:	mov    rax,QWORD PTR [rcx]
   1400074c0:	dec    DWORD PTR [rbx+0x24c]
   1400074c6:	mov    QWORD PTR [rbx+0x260],rax
   1400074cd:	call   QWORD PTR [rip+0x2fc5]        # 0x14000a498
   1400074d3:	jmp    0x140007530
   1400074d5:	mov    ecx,0x10
   1400074da:	call   QWORD PTR [rip+0x2fe0]        # 0x14000a4c0
   1400074e0:	test   rax,rax
   1400074e3:	je     0x140007530
   1400074e5:	mov    rcx,QWORD PTR [rbx+0x260]
   1400074ec:	mov    BYTE PTR [rbx+0x234],0x0
   1400074f3:	mov    QWORD PTR [rax],rcx
   1400074f6:	mov    cl,BYTE PTR [rbx+0x234]
   1400074fc:	mov    BYTE PTR [rax+0x8],cl
   1400074ff:	mov    cl,BYTE PTR [rbx+0x235]
   140007505:	mov    BYTE PTR [rax+0x9],cl
   140007508:	mov    ecx,DWORD PTR [rbx+0x230]
   14000750e:	mov    DWORD PTR [rax+0xc],ecx
   140007511:	inc    DWORD PTR [rbx+0x24c]
   140007517:	mov    QWORD PTR [rbx+0x260],rax
   14000751e:	jmp    0x140007530
   140007520:	mov    rcx,rbx
   140007523:	call   0x140007650
   140007528:	test   eax,eax
   14000752a:	je     0x14000737e
   140007530:	mov    rax,QWORD PTR [rbx+0x228]
   140007537:	cmp    QWORD PTR [rbx+0x220],rax
   14000753e:	jb     0x140007391
   140007544:	mov    eax,DWORD PTR [rbx+0x240]
   14000754a:	mov    DWORD PTR [r14],eax
   14000754d:	test   eax,eax
   14000754f:	je     0x14000737e
   140007555:	mov    rax,QWORD PTR [rbx+0x250]
   14000755c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007561:	mov    rbp,QWORD PTR [rsp+0x38]
   140007566:	mov    rsi,QWORD PTR [rsp+0x40]
   14000756b:	mov    rdi,QWORD PTR [rsp+0x48]
   140007570:	add    rsp,0x20
   140007574:	pop    r14
   140007576:	ret    
   140007577:	mov    r9d,0x10
   14000757d:	lea    r8,[rip+0x4f7c]        # 0x14000c500
   140007584:	lea    rdx,[rip+0x4ea5]        # 0x14000c430
   14000758b:	xor    ecx,ecx
   14000758d:	call   QWORD PTR [rip+0x2cb5]        # 0x14000a248
   140007593:	jmp    0x14000737e
   140007598:	int3   
   140007599:	int3   
   14000759a:	int3   
   14000759b:	int3   
   14000759c:	int3   
   14000759d:	int3   
   14000759e:	int3   
   14000759f:	int3   
   1400075a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400075a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400075aa:	push   rdi
   1400075ab:	sub    rsp,0x20
   1400075af:	mov    edi,0x1
   1400075b4:	mov    esi,edx
   1400075b6:	mov    rbx,rcx
   1400075b9:	cmp    BYTE PTR [rcx+0x234],dil
   1400075c0:	jne    0x1400075d4
   1400075c2:	add    DWORD PTR [rcx+0x248],0xffffffff
   1400075c9:	jne    0x140007635
   1400075cb:	mov    BYTE PTR [rcx+0x234],0x0
   1400075d2:	jmp    0x140007635
   1400075d4:	cmp    BYTE PTR [rcx+0x235],0x3
   1400075db:	je     0x140007635
   1400075dd:	cmp    edx,0xd
   1400075e0:	ja     0x140007603
   1400075e2:	mov    eax,0x2401
   1400075e7:	bt     eax,edx
   1400075ea:	jae    0x140007603
   1400075ec:	cmp    DWORD PTR [rcx+0x240],0x0
   1400075f3:	jbe    0x140007635
   1400075f5:	add    DWORD PTR [rcx+0x23c],edi
   1400075fb:	mov    DWORD PTR [rcx+0x268],edi
   140007601:	jmp    0x140007635
   140007603:	mov    eax,DWORD PTR [rcx+0x240]
   140007609:	cmp    DWORD PTR [rcx+0x244],eax
   14000760f:	ja     0x14000761e
   140007611:	call   0x1400072a0
   140007616:	test   eax,eax
   140007618:	jne    0x14000761e
   14000761a:	xor    edi,edi
   14000761c:	jmp    0x140007635
   14000761e:	mov    edx,DWORD PTR [rbx+0x240]
   140007624:	mov    rcx,QWORD PTR [rbx+0x250]
   14000762b:	mov    BYTE PTR [rdx+rcx*1],sil
   14000762f:	add    DWORD PTR [rbx+0x240],edi
   140007635:	mov    rbx,QWORD PTR [rsp+0x30]
   14000763a:	mov    eax,edi
   14000763c:	mov    rsi,QWORD PTR [rsp+0x38]
   140007641:	add    rsp,0x20
   140007645:	pop    rdi
   140007646:	ret    
   140007647:	int3   
   140007648:	int3   
   140007649:	int3   
   14000764a:	int3   
   14000764b:	int3   
   14000764c:	int3   
   14000764d:	int3   
   14000764e:	int3   
   14000764f:	int3   
   140007650:	mov    QWORD PTR [rsp+0x10],rbx
   140007655:	mov    QWORD PTR [rsp+0x18],rbp
   14000765a:	push   rsi
   14000765b:	push   rdi
   14000765c:	push   r12
   14000765e:	push   r14
   140007660:	push   r15
   140007662:	sub    rsp,0x80
   140007669:	mov    rax,QWORD PTR [rip+0x7998]        # 0x14000f008
   140007670:	xor    rax,rsp
   140007673:	mov    QWORD PTR [rsp+0x70],rax
   140007678:	mov    rax,QWORD PTR [rcx+0x220]
   14000767f:	xor    edi,edi
   140007681:	mov    rbx,rcx
   140007684:	mov    BYTE PTR [rsp+0x20],dil
   140007689:	xor    r12d,r12d
   14000768c:	mov    BYTE PTR [rsp+0x48],dil
   140007691:	xor    r15d,r15d
   140007694:	lea    rcx,[rax+0x1]
   140007698:	cmp    rcx,QWORD PTR [rbx+0x228]
   14000769f:	jb     0x1400076a8
   1400076a1:	xor    eax,eax
   1400076a3:	jmp    0x1400077f8
   1400076a8:	movzx  esi,BYTE PTR [rax]
   1400076ab:	mov    QWORD PTR [rbx+0x220],rcx
   1400076b2:	mov    r14d,esi
   1400076b5:	mov    ecx,esi
   1400076b7:	call   QWORD PTR [rip+0x2dcb]        # 0x14000a488
   1400076bd:	test   eax,eax
   1400076bf:	jne    0x1400076d6
   1400076c1:	xor    r9d,r9d
   1400076c4:	mov    BYTE PTR [rsp+0x20],sil
   1400076c9:	xor    r8d,r8d
   1400076cc:	mov    BYTE PTR [rsp+0x21],dil
   1400076d1:	jmp    0x1400077eb
   1400076d6:	mov    ecx,r14d
   1400076d9:	xor    ebp,ebp
   1400076db:	call   QWORD PTR [rip+0x2da7]        # 0x14000a488
   1400076e1:	lea    r14d,[rbp+0x1]
   1400076e5:	test   eax,eax
   1400076e7:	je     0x140007725
   1400076e9:	mov    rcx,QWORD PTR [rbx+0x220]
   1400076f0:	cmp    rcx,QWORD PTR [rbx+0x228]
   1400076f7:	jae    0x140007720
   1400076f9:	cmp    ebp,0x21
   1400076fc:	jae    0x14000772a
   1400076fe:	lea    rax,[rcx+0x1]
   140007702:	mov    BYTE PTR [rsp+rbp*1+0x20],sil
   140007707:	movzx  esi,BYTE PTR [rcx]
   14000770a:	add    ebp,r14d
   14000770d:	mov    ecx,esi
   14000770f:	mov    QWORD PTR [rbx+0x220],rax
   140007716:	call   QWORD PTR [rip+0x2d6c]        # 0x14000a488
   14000771c:	test   eax,eax
   14000771e:	jne    0x1400076e9
   140007720:	cmp    ebp,0x21
   140007723:	jae    0x14000772a
   140007725:	mov    BYTE PTR [rsp+rbp*1+0x20],dil
   14000772a:	mov    rax,QWORD PTR [rbx+0x220]
   140007731:	mov    rcx,QWORD PTR [rbx+0x228]
   140007738:	cmp    rax,rcx
   14000773b:	jae    0x1400076a1
   140007741:	cmp    sil,0x2d
   140007745:	jne    0x140007757
   140007747:	mov    sil,BYTE PTR [rax]
   14000774a:	mov    r15d,r14d
   14000774d:	inc    rax
   140007750:	mov    QWORD PTR [rbx+0x220],rax
   140007757:	cmp    QWORD PTR [rbx+0x220],rcx
   14000775e:	jae    0x1400076a1
   140007764:	movzx  ebp,sil
   140007768:	mov    ecx,ebp
   14000776a:	call   QWORD PTR [rip+0x2d20]        # 0x14000a490
   140007770:	test   eax,eax
   140007772:	je     0x1400077d8
   140007774:	mov    ecx,ebp
   140007776:	mov    r12d,r14d
   140007779:	call   QWORD PTR [rip+0x2d11]        # 0x14000a490
   14000777f:	test   eax,eax
   140007781:	je     0x1400077bf
   140007783:	mov    rcx,QWORD PTR [rbx+0x220]
   14000778a:	cmp    rcx,QWORD PTR [rbx+0x228]
   140007791:	jae    0x1400077ba
   140007793:	cmp    edi,0x21
   140007796:	jae    0x1400077c4
   140007798:	mov    BYTE PTR [rsp+rdi*1+0x48],sil
   14000779d:	lea    rax,[rcx+0x1]
   1400077a1:	movzx  esi,BYTE PTR [rcx]
   1400077a4:	add    edi,r14d
   1400077a7:	mov    ecx,esi
   1400077a9:	mov    QWORD PTR [rbx+0x220],rax
   1400077b0:	call   QWORD PTR [rip+0x2cda]        # 0x14000a490
   1400077b6:	test   eax,eax
   1400077b8:	jne    0x140007783
   1400077ba:	cmp    edi,0x21
   1400077bd:	jae    0x1400077c4
   1400077bf:	mov    BYTE PTR [rsp+rdi*1+0x48],0x0
   1400077c4:	lea    rcx,[rsp+0x48]
   1400077c9:	call   QWORD PTR [rip+0x2cb1]        # 0x14000a480
   1400077cf:	mov    edi,eax
   1400077d1:	test   r15d,r15d
   1400077d4:	je     0x1400077d8
   1400077d6:	neg    edi
   1400077d8:	cmp    sil,0x20
   1400077dc:	je     0x1400077e5
   1400077de:	dec    QWORD PTR [rbx+0x220]
   1400077e5:	mov    r9d,r12d
   1400077e8:	mov    r8d,edi
   1400077eb:	lea    rdx,[rsp+0x20]
   1400077f0:	mov    rcx,rbx
   1400077f3:	call   0x140007828
   1400077f8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400077fd:	xor    rcx,rsp
   140007800:	call   0x1400090a0
   140007805:	lea    r11,[rsp+0x80]
   14000780d:	mov    rbx,QWORD PTR [r11+0x38]
   140007811:	mov    rbp,QWORD PTR [r11+0x40]
   140007815:	mov    rsp,r11
   140007818:	pop    r15
   14000781a:	pop    r14
   14000781c:	pop    r12
   14000781e:	pop    rdi
   14000781f:	pop    rsi
   140007820:	ret    
   140007821:	int3   
   140007822:	int3   
   140007823:	int3   
   140007824:	int3   
   140007825:	int3   
   140007826:	int3   
   140007827:	int3   
   140007828:	mov    QWORD PTR [rsp+0x8],rbx
   14000782d:	mov    QWORD PTR [rsp+0x10],rsi
   140007832:	mov    QWORD PTR [rsp+0x18],rdi
   140007837:	push   r15
   140007839:	sub    rsp,0x20
   14000783d:	lea    r15,[rip+0x77ec]        # 0x14000f030
   140007844:	mov    edi,r9d
   140007847:	mov    r11,r15
   14000784a:	mov    ebx,r8d
   14000784d:	mov    rsi,rdx
   140007850:	xor    r10d,r10d
   140007853:	test   rsi,rsi
   140007856:	lea    rax,[rip+0x4c99]        # 0x14000c4f6
   14000785d:	lea    r9,[rip+0x4c92]        # 0x14000c4f6
   140007864:	cmovne rax,rsi
   140007868:	cmp    QWORD PTR [r11],0x0
   14000786c:	cmovne r9,QWORD PTR [r11]
   140007870:	sub    r9,rax
   140007873:	movzx  edx,BYTE PTR [rax]
   140007876:	movzx  r8d,BYTE PTR [rax+r9*1]
   14000787b:	sub    edx,r8d
   14000787e:	jne    0x140007888
   140007880:	inc    rax
   140007883:	test   r8d,r8d
   140007886:	jne    0x140007873
   140007888:	test   edx,edx
   14000788a:	je     0x14000789f
   14000788c:	inc    r10d
   14000788f:	lea    rax,[rip+0x7a9a]        # 0x14000f330
   140007896:	add    r11,0x10
   14000789a:	cmp    r11,rax
   14000789d:	jl     0x140007853
   14000789f:	cmp    r10d,0x30
   1400078a3:	jne    0x1400078c1
   1400078a5:	cmp    DWORD PTR [rcx+0x258],0x0
   1400078ac:	je     0x1400078b5
   1400078ae:	mov    BYTE PTR [rcx+0x235],0x3
   1400078b5:	and    DWORD PTR [rcx+0x258],0x0
   1400078bc:	jmp    0x140007958
   1400078c1:	and    DWORD PTR [rcx+0x258],0x0
   1400078c8:	movsxd r8,r10d
   1400078cb:	add    r8,r8
   1400078ce:	mov    edx,DWORD PTR [r15+r8*8+0x8]
   1400078d3:	test   edx,edx
   1400078d5:	je     0x140007946
   1400078d7:	sub    edx,0x1
   1400078da:	je     0x14000793a
   1400078dc:	sub    edx,0x1
   1400078df:	je     0x14000791d
   1400078e1:	cmp    edx,0x1
   1400078e4:	jne    0x140007958
   1400078e6:	mov    eax,DWORD PTR [r15+r8*8+0xc]
   1400078eb:	cmp    eax,0x4
   1400078ee:	jne    0x1400078fe
   1400078f0:	mov    BYTE PTR [rcx+0x234],dl
   1400078f6:	mov    DWORD PTR [rcx+0x248],ebx
   1400078fc:	jmp    0x140007958
   1400078fe:	cmp    eax,0x2
   140007901:	jne    0x14000790f
   140007903:	mov    DWORD PTR [rcx+0x258],0x1
   14000790d:	jmp    0x140007958
   14000790f:	cmp    eax,0x3
   140007912:	jne    0x140007958
   140007914:	mov    BYTE PTR [rcx+0x234],0x2
   14000791b:	jmp    0x140007958
   14000791d:	cmp    DWORD PTR [r15+r8*8+0xc],0x5
   140007923:	mov    edx,0xa
   140007928:	setne  al
   14000792b:	add    al,0x3
   14000792d:	mov    BYTE PTR [rcx+0x235],al
   140007933:	call   0x1400075a0
   140007938:	jmp    0x140007958
   14000793a:	mov    edx,DWORD PTR [r15+r8*8+0xc]
   14000793f:	call   0x1400075a0
   140007944:	jmp    0x14000795d
   140007946:	test   edi,edi
   140007948:	je     0x140007958
   14000794a:	cmp    DWORD PTR [r15+r8*8+0xc],0x1
   140007950:	jne    0x140007958
   140007952:	mov    DWORD PTR [rcx+0x230],ebx
   140007958:	mov    eax,0x1
   14000795d:	mov    rbx,QWORD PTR [rsp+0x30]
   140007962:	mov    rsi,QWORD PTR [rsp+0x38]
   140007967:	mov    rdi,QWORD PTR [rsp+0x40]
   14000796c:	add    rsp,0x20
   140007970:	pop    r15
   140007972:	ret    
   140007973:	int3   
   140007974:	int3   
   140007975:	int3   
   140007976:	int3   
   140007977:	int3   
   140007978:	int3   
   140007979:	int3   
   14000797a:	int3   
   14000797b:	int3   
   14000797c:	mov    QWORD PTR [rsp+0x8],rbx
   140007981:	mov    QWORD PTR [rsp+0x18],rbp
   140007986:	mov    QWORD PTR [rsp+0x20],rsi
   14000798b:	push   rdi
   14000798c:	push   r12
   14000798e:	push   r13
   140007990:	push   r14
   140007992:	push   r15
   140007994:	sub    rsp,0x30
   140007998:	or     r13,0xffffffffffffffff
   14000799c:	xor    r12d,r12d
   14000799f:	mov    rsi,rdx
   1400079a2:	mov    rdi,rcx
   1400079a5:	mov    ebx,0x80004005
   1400079aa:	test   rdx,rdx
   1400079ad:	je     0x1400079be
   1400079af:	mov    rcx,r13
   1400079b2:	inc    rcx
   1400079b5:	cmp    WORD PTR [rdx+rcx*2],r12w
   1400079ba:	jne    0x1400079b2
   1400079bc:	jmp    0x1400079c1
   1400079be:	mov    rcx,r12
   1400079c1:	mov    rax,QWORD PTR [rip+0x8068]        # 0x14000fa30
   1400079c8:	mov    ebp,DWORD PTR [rax]
   1400079ca:	mov    r15d,DWORD PTR [rax+0x4]
   1400079ce:	test   rdx,rdx
   1400079d1:	je     0x140007ba5
   1400079d7:	test   ecx,ecx
   1400079d9:	je     0x140007ba5
   1400079df:	cmp    ecx,0x103
   1400079e5:	jle    0x1400079f1
   1400079e7:	mov    ebx,0x80010100
   1400079ec:	jmp    0x140007ba5
   1400079f1:	mov    rcx,rdx
   1400079f4:	call   QWORD PTR [rip+0x280e]        # 0x14000a208
   1400079fa:	mov    r14,rax
   1400079fd:	cmp    ebp,0x5
   140007a00:	jb     0x140007a10
   140007a02:	jne    0x140007a09
   140007a04:	test   r15d,r15d
   140007a07:	je     0x140007a10
   140007a09:	mov    ebp,0x7f
   140007a0e:	jmp    0x140007a15
   140007a10:	mov    ebp,0x409
   140007a15:	test   rax,rax
   140007a18:	je     0x140007ba0
   140007a1e:	lea    rax,[rip+0x443b]        # 0x14000be60
   140007a25:	mov    DWORD PTR [rsp+0x28],r13d
   140007a2a:	mov    r15d,0x1
   140007a30:	mov    QWORD PTR [rsp+0x20],rax
   140007a35:	mov    edx,r15d
   140007a38:	mov    r9d,r13d
   140007a3b:	mov    r8,r14
   140007a3e:	mov    ecx,ebp
   140007a40:	call   QWORD PTR [rip+0x271a]        # 0x14000a160
   140007a46:	cmp    eax,0x2
   140007a49:	je     0x140007a76
   140007a4b:	lea    rax,[rip+0x43fe]        # 0x14000be50
   140007a52:	mov    DWORD PTR [rsp+0x28],r13d
   140007a57:	mov    r9d,r13d
   140007a5a:	mov    QWORD PTR [rsp+0x20],rax
   140007a5f:	mov    r8,r14
   140007a62:	mov    edx,r15d
   140007a65:	mov    ecx,ebp
   140007a67:	call   QWORD PTR [rip+0x26f3]        # 0x14000a160
   140007a6d:	cmp    eax,0x2
   140007a70:	jne    0x140007ba0
   140007a76:	mov    rcx,rsi
   140007a79:	call   QWORD PTR [rip+0x2781]        # 0x14000a200
   140007a7f:	test   eax,eax
   140007a81:	jne    0x140007a8d
   140007a83:	mov    ebx,0x80010102
   140007a88:	jmp    0x140007ba5
   140007a8d:	cmp    QWORD PTR [rdi+0x210],r12
   140007a94:	je     0x140007a9e
   140007a96:	mov    rcx,rdi
   140007a99:	call   0x140007bcc
   140007a9e:	cmp    QWORD PTR [rdi+0x208],r12
   140007aa5:	jne    0x140007ba5
   140007aab:	mov    r9,r13
   140007aae:	mov    r8,rsi
   140007ab1:	mov    edx,0x104
   140007ab6:	mov    rcx,rdi
   140007ab9:	call   QWORD PTR [rip+0x28b9]        # 0x14000a378
   140007abf:	cmp    eax,0x50
   140007ac2:	je     0x140007ba5
   140007ac8:	mov    ecx,0x20
   140007acd:	call   0x140008ca8
   140007ad2:	mov    QWORD PTR [rsp+0x68],rax
   140007ad7:	test   rax,rax
   140007ada:	je     0x140007aed
   140007adc:	mov    DWORD PTR [rax+0x8],r12d
   140007ae0:	mov    QWORD PTR [rax],r12
   140007ae3:	mov    QWORD PTR [rax+0x10],r12
   140007ae7:	mov    QWORD PTR [rax+0x18],r12
   140007aeb:	jmp    0x140007af0
   140007aed:	mov    rax,r12
   140007af0:	mov    QWORD PTR [rdi+0x210],rax
   140007af7:	test   rax,rax
   140007afa:	jne    0x140007b06
   140007afc:	mov    ebx,0x8007000e
   140007b01:	jmp    0x140007ba5
   140007b06:	mov    rdx,rdi
   140007b09:	mov    rcx,rax
   140007b0c:	call   0x140001a8c
   140007b11:	test   eax,eax
   140007b13:	jne    0x140007b1f
   140007b15:	mov    ebx,0x80010103
   140007b1a:	jmp    0x140007ba5
   140007b1f:	mov    rbx,QWORD PTR [rdi+0x210]
   140007b26:	cmp    DWORD PTR [rbx+0x8],r12d
   140007b2a:	jne    0x140007b31
   140007b2c:	mov    rax,r12
   140007b2f:	jmp    0x140007b5d
   140007b31:	cmp    QWORD PTR [rbx+0x18],r12
   140007b35:	jne    0x140007b59
   140007b37:	mov    rcx,QWORD PTR [rbx+0x10]
   140007b3b:	xor    r9d,r9d
   140007b3e:	mov    QWORD PTR [rsp+0x28],r12
   140007b43:	xor    r8d,r8d
   140007b46:	mov    QWORD PTR [rsp+0x20],r12
   140007b4b:	lea    edx,[r9+0x4]
   140007b4f:	call   QWORD PTR [rip+0x262b]        # 0x14000a180
   140007b55:	mov    QWORD PTR [rbx+0x18],rax
   140007b59:	mov    rax,QWORD PTR [rbx+0x18]
   140007b5d:	mov    QWORD PTR [rdi+0x208],rax
   140007b64:	test   rax,rax
   140007b67:	je     0x140007afc
   140007b69:	mov    rcx,QWORD PTR [rdi+0x210]
   140007b70:	xor    edx,edx
   140007b72:	mov    rcx,QWORD PTR [rcx]
   140007b75:	call   QWORD PTR [rip+0x25dd]        # 0x14000a158
   140007b7b:	mov    ecx,eax
   140007b7d:	mov    ebx,r12d
   140007b80:	mov    rax,QWORD PTR [rdi+0x208]
   140007b87:	mov    DWORD PTR [rdi+0x218],ecx
   140007b8d:	add    rcx,rax
   140007b90:	mov    QWORD PTR [rdi+0x228],rcx
   140007b97:	mov    QWORD PTR [rdi+0x220],rax
   140007b9e:	jmp    0x140007ba5
   140007ba0:	mov    ebx,0x80010101
   140007ba5:	mov    rbp,QWORD PTR [rsp+0x70]
   140007baa:	mov    eax,ebx
   140007bac:	mov    rbx,QWORD PTR [rsp+0x60]
   140007bb1:	mov    rsi,QWORD PTR [rsp+0x78]
   140007bb6:	add    rsp,0x30
   140007bba:	pop    r15
   140007bbc:	pop    r14
   140007bbe:	pop    r13
   140007bc0:	pop    r12
   140007bc2:	pop    rdi
   140007bc3:	ret    
   140007bc4:	int3   
   140007bc5:	int3   
   140007bc6:	int3   
   140007bc7:	int3   
   140007bc8:	int3   
   140007bc9:	int3   
   140007bca:	int3   
   140007bcb:	int3   
   140007bcc:	mov    QWORD PTR [rsp+0x8],rbx
   140007bd1:	mov    QWORD PTR [rsp+0x10],rsi
   140007bd6:	push   rdi
   140007bd7:	sub    rsp,0x20
   140007bdb:	mov    rdi,QWORD PTR [rcx+0x210]
   140007be2:	xor    esi,esi
   140007be4:	mov    rbx,rcx
   140007be7:	mov    eax,0x80004005
   140007bec:	test   rdi,rdi
   140007bef:	je     0x140007c51
   140007bf1:	cmp    QWORD PTR [rcx+0x208],rsi
   140007bf8:	je     0x140007c51
   140007bfa:	mov    rcx,QWORD PTR [rdi+0x18]
   140007bfe:	test   rcx,rcx
   140007c01:	je     0x140007c09
   140007c03:	call   QWORD PTR [rip+0x2597]        # 0x14000a1a0
   140007c09:	mov    rcx,QWORD PTR [rdi+0x10]
   140007c0d:	test   rcx,rcx
   140007c10:	je     0x140007c18
   140007c12:	call   QWORD PTR [rip+0x2580]        # 0x14000a198
   140007c18:	cmp    QWORD PTR [rdi],0xffffffffffffffff
   140007c1c:	je     0x140007c27
   140007c1e:	mov    rcx,QWORD PTR [rdi]
   140007c21:	call   QWORD PTR [rip+0x2571]        # 0x14000a198
   140007c27:	mov    rcx,rdi
   140007c2a:	call   QWORD PTR [rip+0x2758]        # 0x14000a388
   140007c30:	mov    QWORD PTR [rbx+0x220],rsi
   140007c37:	mov    eax,esi
   140007c39:	mov    QWORD PTR [rbx+0x228],rsi
   140007c40:	mov    QWORD PTR [rbx+0x208],rsi
   140007c47:	mov    QWORD PTR [rbx+0x210],rsi
   140007c4e:	mov    WORD PTR [rbx],si
   140007c51:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c56:	mov    rsi,QWORD PTR [rsp+0x38]
   140007c5b:	add    rsp,0x20
   140007c5f:	pop    rdi
   140007c60:	ret    
   140007c61:	int3   
   140007c62:	int3   
   140007c63:	int3   
   140007c64:	int3   
   140007c65:	int3   
   140007c66:	int3   
   140007c67:	int3   
   140007c68:	int3   
   140007c69:	int3   
   140007c6a:	int3   
   140007c6b:	int3   
   140007c6c:	int3   
   140007c6d:	int3   
   140007c6e:	int3   
   140007c6f:	int3   
   140007c70:	cmp    r8d,0x104
   140007c77:	jae    0x140007d12
   140007c7d:	mov    QWORD PTR [rsp+0x8],rbx
   140007c82:	mov    QWORD PTR [rsp+0x20],rsi
   140007c87:	push   rdi
   140007c88:	sub    rsp,0x240
   140007c8f:	mov    rax,QWORD PTR [rip+0x7372]        # 0x14000f008
   140007c96:	xor    rax,rsp
   140007c99:	mov    QWORD PTR [rsp+0x230],rax
   140007ca1:	mov    edi,r8d
   140007ca4:	lea    rcx,[rsp+0x20]
   140007ca9:	lea    rbx,[rdi+rdi*1]
   140007cad:	mov    r8,rbx
   140007cb0:	call   0x14000947e
   140007cb5:	cmp    rbx,0x208
   140007cbc:	jae    0x140007d13
   140007cbe:	mov    rcx,QWORD PTR [rip+0x7d6b]        # 0x14000fa30
   140007cc5:	lea    rdx,[rsp+0x20]
   140007cca:	xor    esi,esi
   140007ccc:	mov    r8d,edi
   140007ccf:	mov    WORD PTR [rsp+rbx*1+0x20],si
   140007cd4:	inc    DWORD PTR [rcx+0x20]
   140007cd7:	mov    rcx,QWORD PTR [rcx+0x10]
   140007cdb:	call   0x140005ab8
   140007ce0:	test   eax,eax
   140007ce2:	jne    0x140007cee
   140007ce4:	mov    rax,QWORD PTR [rip+0x7d45]        # 0x14000fa30
   140007ceb:	inc    DWORD PTR [rax+0x28]
   140007cee:	mov    rcx,QWORD PTR [rsp+0x230]
   140007cf6:	xor    rcx,rsp
   140007cf9:	call   0x1400090a0
   140007cfe:	lea    r11,[rsp+0x240]
   140007d06:	mov    rbx,QWORD PTR [r11+0x10]
   140007d0a:	mov    rsi,QWORD PTR [r11+0x28]
   140007d0e:	mov    rsp,r11
   140007d11:	pop    rdi
   140007d12:	ret    
   140007d13:	call   0x140009368
   140007d18:	int3   
   140007d19:	int3   
   140007d1a:	int3   
   140007d1b:	int3   
   140007d1c:	int3   
   140007d1d:	int3   
   140007d1e:	int3   
   140007d1f:	int3   
   140007d20:	ret    0x0
   140007d23:	int3   
   140007d24:	int3   
   140007d25:	int3   
   140007d26:	int3   
   140007d27:	int3   
   140007d28:	int3   
   140007d29:	int3   
   140007d2a:	int3   
   140007d2b:	int3   
   140007d2c:	int3   
   140007d2d:	int3   
   140007d2e:	int3   
   140007d2f:	int3   
   140007d30:	xor    eax,eax
   140007d32:	ret    
   140007d33:	int3   
   140007d34:	int3   
   140007d35:	int3   
   140007d36:	int3   
   140007d37:	int3   
   140007d38:	int3   
   140007d39:	int3   
   140007d3a:	int3   
   140007d3b:	int3   
   140007d3c:	mov    QWORD PTR [rsp+0x10],rbx
   140007d41:	push   rbp
   140007d42:	push   rsi
   140007d43:	push   rdi
   140007d44:	push   r14
   140007d46:	push   r15
   140007d48:	sub    rsp,0x250
   140007d4f:	mov    rax,QWORD PTR [rip+0x72b2]        # 0x14000f008
   140007d56:	xor    rax,rsp
   140007d59:	mov    QWORD PTR [rsp+0x240],rax
   140007d61:	mov    rbx,rcx
   140007d64:	xor    r15d,r15d
   140007d67:	mov    ecx,0x260
   140007d6c:	mov    ebp,r15d
   140007d6f:	mov    rsi,r8
   140007d72:	call   0x140008ca8
   140007d77:	test   rax,rax
   140007d7a:	je     0x140007d86
   140007d7c:	mov    rcx,rax
   140007d7f:	call   0x140001b74
   140007d84:	jmp    0x140007d89
   140007d86:	mov    rax,r15
   140007d89:	mov    QWORD PTR [rip+0x7ca0],rax        # 0x14000fa30
   140007d90:	test   rax,rax
   140007d93:	je     0x140008017
   140007d99:	mov    edi,0x104
   140007d9e:	mov    QWORD PTR [rax+0x8],rbx
   140007da2:	mov    r8d,edi
   140007da5:	lea    rdx,[rsp+0x30]
   140007daa:	mov    rcx,rbx
   140007dad:	call   QWORD PTR [rip+0x233d]        # 0x14000a0f0
   140007db3:	mov    rcx,QWORD PTR [rip+0x7c76]        # 0x14000fa30
   140007dba:	lea    rdx,[rsp+0x30]
   140007dbf:	or     r9,0xffffffffffffffff
   140007dc3:	mov    rax,r9
   140007dc6:	inc    rax
   140007dc9:	cmp    WORD PTR [rdx+rax*2],r15w
   140007dce:	jne    0x140007dc6
   140007dd0:	cmp    eax,edi
   140007dd2:	ja     0x140007de6
   140007dd4:	add    rcx,0x40
   140007dd8:	lea    r8,[rsp+0x30]
   140007ddd:	mov    rdx,rdi
   140007de0:	call   QWORD PTR [rip+0x2592]        # 0x14000a378
   140007de6:	mov    ecx,0x1080
   140007deb:	call   0x140008ca8
   140007df0:	mov    rdi,rax
   140007df3:	test   rax,rax
   140007df6:	je     0x140007e71
   140007df8:	mov    DWORD PTR [rax+0x1018],r15d
   140007dff:	lea    rcx,[rax+0x9d8]
   140007e06:	mov    DWORD PTR [rax+0x1038],r15d
   140007e0d:	xor    edx,edx
   140007e0f:	mov    QWORD PTR [rax+0x1040],r15
   140007e16:	mov    r8d,0x640
   140007e1c:	mov    DWORD PTR [rax+0x1048],r15d
   140007e23:	mov    QWORD PTR [rax+0x1070],r15
   140007e2a:	mov    WORD PTR [rax+0x7d0],r15w
   140007e32:	mov    QWORD PTR [rax+0x1078],r15
   140007e39:	mov    QWORD PTR [rax+0x1020],r15
   140007e40:	mov    QWORD PTR [rax+0x1028],r15
   140007e47:	mov    QWORD PTR [rax+0x1030],r15
   140007e4e:	call   0x1400098c6
   140007e53:	mov    QWORD PTR [rdi+0x1050],r15
   140007e5a:	mov    QWORD PTR [rdi+0x1058],r15
   140007e61:	mov    QWORD PTR [rdi+0x1060],r15
   140007e68:	mov    DWORD PTR [rdi+0x1068],r15d
   140007e6f:	jmp    0x140007e74
   140007e71:	mov    rdi,r15
   140007e74:	test   rdi,rdi
   140007e77:	je     0x140007ffe
   140007e7d:	mov    rax,QWORD PTR [rip+0x7bac]        # 0x14000fa30
   140007e84:	lea    rcx,[rip+0x3f6d]        # 0x14000bdf8
   140007e8b:	xor    edx,edx
   140007e8d:	mov    QWORD PTR [rax+0x10],rdi
   140007e91:	call   QWORD PTR [rip+0x2391]        # 0x14000a228
   140007e97:	mov    rbx,rax
   140007e9a:	test   rax,rax
   140007e9d:	je     0x140007ec8
   140007e9f:	mov    rcx,rax
   140007ea2:	call   QWORD PTR [rip+0x2390]        # 0x14000a238
   140007ea8:	test   eax,eax
   140007eaa:	je     0x140007eba
   140007eac:	mov    edx,0x9
   140007eb1:	mov    rcx,rbx
   140007eb4:	call   QWORD PTR [rip+0x2386]        # 0x14000a240
   140007eba:	mov    rcx,rbx
   140007ebd:	call   QWORD PTR [rip+0x236d]        # 0x14000a230
   140007ec3:	jmp    0x140007f5c
   140007ec8:	call   0x140001c48
   140007ecd:	mov    ebp,0x3b6
   140007ed2:	lea    r14d,[rbp-0xe]
   140007ed6:	test   rsi,rsi
   140007ed9:	je     0x140007ef3
   140007edb:	mov    rcx,rsi
   140007ede:	call   QWORD PTR [rip+0x259c]        # 0x14000a480
   140007ee4:	mov    edx,eax
   140007ee6:	test   eax,eax
   140007ee8:	jle    0x140007ef3
   140007eea:	cmp    eax,ebp
   140007eec:	je     0x140007f2c
   140007eee:	cmp    eax,r14d
   140007ef1:	je     0x140007f2c
   140007ef3:	mov    rax,QWORD PTR [rip+0x7b36]        # 0x14000fa30
   140007efa:	mov    rbx,QWORD PTR [rax+0x8]
   140007efe:	call   QWORD PTR [rip+0x2414]        # 0x14000a318
   140007f04:	lea    r9,[rip+0xffffffffffffa0f5]        # 0x140002000
   140007f0b:	mov    QWORD PTR [rsp+0x20],r15
   140007f10:	mov    r8,rax
   140007f13:	mov    edx,0x6c
   140007f18:	mov    rcx,rbx
   140007f1b:	call   QWORD PTR [rip+0x23ef]        # 0x14000a310
   140007f21:	mov    rdx,rax
   140007f24:	test   eax,eax
   140007f26:	jle    0x140007f2a
   140007f28:	jne    0x140007f2c
   140007f2a:	mov    edx,ebp
   140007f2c:	mov    rcx,QWORD PTR [rip+0x7afd]        # 0x14000fa30
   140007f33:	cmp    edx,r14d
   140007f36:	mov    r8,0xffffffffe00e0804
   140007f3d:	mov    rax,0xffffffffe00c0404
   140007f44:	cmove  rax,r8
   140007f48:	mov    DWORD PTR [rcx+0x18],edx
   140007f4b:	mov    QWORD PTR [rcx+0x258],rax
   140007f52:	mov    rcx,rdi
   140007f55:	call   0x140002314
   140007f5a:	mov    ebp,eax
   140007f5c:	mov    ebx,r15d
   140007f5f:	cmp    DWORD PTR [rdi+0x1018],r15d
   140007f66:	jbe    0x140007f8f
   140007f68:	mov    esi,ebx
   140007f6a:	mov    rcx,QWORD PTR [rdi+rsi*8+0x9d8]
   140007f72:	test   rcx,rcx
   140007f75:	je     0x140007f85
   140007f77:	call   QWORD PTR [rip+0x240b]        # 0x14000a388
   140007f7d:	mov    QWORD PTR [rdi+rsi*8+0x9d8],r15
   140007f85:	inc    ebx
   140007f87:	cmp    ebx,DWORD PTR [rdi+0x1018]
   140007f8d:	jb     0x140007f68
   140007f8f:	mov    rsi,QWORD PTR [rdi+0x1078]
   140007f96:	test   rsi,rsi
   140007f99:	je     0x140007ff5
   140007f9b:	mov    r14,QWORD PTR [rsi+0x8]
   140007f9f:	test   r14,r14
   140007fa2:	je     0x140007fbc
   140007fa4:	mov    rax,QWORD PTR [r14]
   140007fa7:	mov    rbx,QWORD PTR [rax]
   140007faa:	mov    rcx,rbx
   140007fad:	call   QWORD PTR [rip+0x2545]        # 0x14000a4f8
   140007fb3:	mov    rcx,r14
   140007fb6:	call   rbx
   140007fb8:	mov    QWORD PTR [rsi+0x8],r15
   140007fbc:	mov    rcx,QWORD PTR [rsi+0x18]
   140007fc0:	test   rcx,rcx
   140007fc3:	je     0x140007fcb
   140007fc5:	call   QWORD PTR [rip+0x23a5]        # 0x14000a370
   140007fcb:	mov    rcx,QWORD PTR [rsi]
   140007fce:	test   rcx,rcx
   140007fd1:	je     0x140007fd9
   140007fd3:	call   QWORD PTR [rip+0x211f]        # 0x14000a0f8
   140007fd9:	cmp    DWORD PTR [rsi+0x20],r15d
   140007fdd:	je     0x140007fe5
   140007fdf:	call   QWORD PTR [rip+0x2503]        # 0x14000a4e8
   140007fe5:	mov    rcx,rsi
   140007fe8:	call   QWORD PTR [rip+0x239a]        # 0x14000a388
   140007fee:	mov    QWORD PTR [rdi+0x1078],r15
   140007ff5:	mov    rcx,rdi
   140007ff8:	call   QWORD PTR [rip+0x238a]        # 0x14000a388
   140007ffe:	mov    rcx,QWORD PTR [rip+0x7a2b]        # 0x14000fa30
   140008005:	test   rcx,rcx
   140008008:	je     0x140008017
   14000800a:	call   QWORD PTR [rip+0x2378]        # 0x14000a388
   140008010:	mov    QWORD PTR [rip+0x7a19],r15        # 0x14000fa30
   140008017:	mov    eax,ebp
   140008019:	mov    rcx,QWORD PTR [rsp+0x240]
   140008021:	xor    rcx,rsp
   140008024:	call   0x1400090a0
   140008029:	mov    rbx,QWORD PTR [rsp+0x288]
   140008031:	add    rsp,0x250
   140008038:	pop    r15
   14000803a:	pop    r14
   14000803c:	pop    rdi
   14000803d:	pop    rsi
   14000803e:	pop    rbp
   14000803f:	ret    
   140008040:	int3   
   140008041:	int3   
   140008042:	int3   
   140008043:	int3   
   140008044:	int3   
   140008045:	int3   
   140008046:	int3   
   140008047:	int3   
   140008048:	xor    r8d,r8d
   14000804b:	mov    WORD PTR [rsp+0x8],cx
   140008050:	sub    edx,0x1
   140008053:	je     0x140008071
   140008055:	cmp    edx,0x1
   140008058:	jne    0x1400080ce
   14000805a:	mov    eax,0x4e00
   14000805f:	sub    cx,ax
   140008062:	mov    eax,0x51a5
   140008067:	cmp    cx,ax
   14000806a:	ja     0x1400080ce
   14000806c:	mov    r8d,edx
   14000806f:	jmp    0x1400080ce
   140008071:	lea    eax,[rcx+0x5f]
   140008074:	cmp    al,0x5d
   140008076:	ja     0x1400080ce
   140008078:	mov    dl,BYTE PTR [rsp+0x9]
   14000807c:	lea    eax,[rdx-0x40]
   14000807f:	cmp    al,0x3e
   140008081:	jbe    0x14000808a
   140008083:	lea    eax,[rdx+0x5f]
   140008086:	cmp    al,0x5d
   140008088:	ja     0x1400080ce
   14000808a:	mov    WORD PTR [rsp+0x10],r8w
   140008090:	mov    eax,0x5ec0
   140008095:	mov    BYTE PTR [rsp+0x11],cl
   140008099:	mov    ecx,0x2a0
   14000809e:	mov    BYTE PTR [rsp+0x10],dl
   1400080a2:	movzx  edx,WORD PTR [rsp+0x10]
   1400080a7:	add    eax,edx
   1400080a9:	cmp    ax,cx
   1400080ac:	jbe    0x1400080ce
   1400080ae:	mov    ecx,r8d
   1400080b1:	mov    eax,0x395f
   1400080b6:	add    dx,ax
   1400080b9:	mov    r8d,0x1
   1400080bf:	mov    eax,0x25d
   1400080c4:	cmp    dx,ax
   1400080c7:	cmova  ecx,r8d
   1400080cb:	mov    r8d,ecx
   1400080ce:	mov    eax,r8d
   1400080d1:	ret    
   1400080d2:	int3   
   1400080d3:	int3   
   1400080d4:	int3   
   1400080d5:	int3   
   1400080d6:	int3   
   1400080d7:	int3   
   1400080d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400080dd:	mov    QWORD PTR [rsp+0x10],rbp
   1400080e2:	mov    QWORD PTR [rsp+0x18],rsi
   1400080e7:	push   rdi
   1400080e8:	push   r14
   1400080ea:	push   r15
   1400080ec:	sub    rsp,0x20
   1400080f0:	mov    eax,edx
   1400080f2:	xor    edi,edi
   1400080f4:	shr    eax,0x4
   1400080f7:	mov    rsi,r9
   1400080fa:	movzx  r9d,WORD PTR [rsp+0x60]
   140008100:	mov    rbp,r8
   140008103:	mov    ebx,edx
   140008105:	mov    r14,rcx
   140008108:	lea    r15d,[rdi+0x1]
   14000810c:	add    ax,r15w
   140008110:	lea    edx,[rdi+0x6]
   140008113:	movzx  r8d,ax
   140008117:	call   QWORD PTR [rip+0x1fcb]        # 0x14000a0e8
   14000811d:	test   rax,rax
   140008120:	je     0x14000819e
   140008122:	mov    rdx,rax
   140008125:	mov    rcx,r14
   140008128:	call   QWORD PTR [rip+0x1fb2]        # 0x14000a0e0
   14000812e:	test   rax,rax
   140008131:	je     0x14000819e
   140008133:	mov    rcx,rax
   140008136:	call   QWORD PTR [rip+0x1f9c]        # 0x14000a0d8
   14000813c:	mov    rcx,rax
   14000813f:	test   rax,rax
   140008142:	je     0x14000819e
   140008144:	and    ebx,0xf
   140008147:	jbe    0x14000815c
   140008149:	mov    edx,ebx
   14000814b:	movzx  eax,WORD PTR [rcx]
   14000814e:	add    eax,r15d
   140008151:	cdqe   
   140008153:	lea    rcx,[rcx+rax*2]
   140008157:	sub    rdx,r15
   14000815a:	jne    0x14000814b
   14000815c:	test   rbp,rbp
   14000815f:	je     0x140008196
   140008161:	mov    eax,DWORD PTR [rsi]
   140008163:	test   eax,eax
   140008165:	je     0x140008196
   140008167:	movzx  ebx,WORD PTR [rcx]
   14000816a:	dec    eax
   14000816c:	cmp    ebx,eax
   14000816e:	jg     0x140008196
   140008170:	inc    ebx
   140008172:	lea    rdx,[rcx+0x2]
   140008176:	mov    rcx,rbp
   140008179:	mov    DWORD PTR [rsi],ebx
   14000817b:	lea    eax,[rbx-0x1]
   14000817e:	movsxd r8,eax
   140008181:	add    r8,r8
   140008184:	call   0x14000947e
   140008189:	movsxd rax,ebx
   14000818c:	mov    WORD PTR [rbp+rax*2-0x2],di
   140008191:	mov    edi,r15d
   140008194:	jmp    0x14000819e
   140008196:	movzx  ecx,WORD PTR [rcx]
   140008199:	add    ecx,r15d
   14000819c:	mov    DWORD PTR [rsi],ecx
   14000819e:	mov    rbx,QWORD PTR [rsp+0x40]
   1400081a3:	mov    eax,edi
   1400081a5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400081aa:	mov    rsi,QWORD PTR [rsp+0x50]
   1400081af:	add    rsp,0x20
   1400081b3:	pop    r15
   1400081b5:	pop    r14
   1400081b7:	pop    rdi
   1400081b8:	ret    
   1400081b9:	int3   
   1400081ba:	int3   
   1400081bb:	int3   
   1400081bc:	int3   
   1400081bd:	int3   
   1400081be:	int3   
   1400081bf:	int3   
   1400081c0:	mov    rax,rsp
   1400081c3:	mov    QWORD PTR [rax+0x8],rbx
   1400081c7:	mov    QWORD PTR [rax+0x18],rbp
   1400081cb:	mov    DWORD PTR [rax+0x10],edx
   1400081ce:	push   rsi
   1400081cf:	push   rdi
   1400081d0:	push   r12
   1400081d2:	push   r14
   1400081d4:	push   r15
   1400081d6:	sub    rsp,0x20
   1400081da:	mov    edx,DWORD PTR [rsp+0x78]
   1400081de:	xor    edi,edi
   1400081e0:	mov    rbp,r8
   1400081e3:	mov    r12d,0x104
   1400081e9:	mov    r8,QWORD PTR [rsp+0x70]
   1400081ee:	mov    rsi,rcx
   1400081f1:	mov    r15,r8
   1400081f4:	mov    r14d,edi
   1400081f7:	lea    r10d,[rdi+0x5c]
   1400081fb:	mov    DWORD PTR [rax+0x10],r10d
   1400081ff:	lea    eax,[r9+rdx*1]
   140008203:	cmp    eax,r12d
   140008206:	ja     0x1400082f0
   14000820c:	cmp    r9d,edx
   14000820f:	mov    ecx,edx
   140008211:	mov    r11d,edi
   140008214:	cmovb  ecx,r9d
   140008218:	test   ecx,ecx
   14000821a:	je     0x140008242
   14000821c:	mov    rbx,rbp
   14000821f:	mov    r10,r8
   140008222:	sub    rbx,r8
   140008225:	movzx  eax,WORD PTR [r10]
   140008229:	cmp    WORD PTR [rbx+r10*1],ax
   14000822e:	jne    0x14000823c
   140008230:	inc    r11d
   140008233:	add    r10,0x2
   140008237:	cmp    r11d,ecx
   14000823a:	jb     0x140008225
   14000823c:	mov    r10d,0x5c
   140008242:	cmp    r11d,ecx
   140008245:	jne    0x14000824f
   140008247:	mov    r14d,0x1
   14000824d:	jmp    0x140008269
   14000824f:	lea    ecx,[r9-0x1]
   140008253:	cmp    r10w,WORD PTR [rbp+rcx*2+0x0]
   140008259:	cmove  r9d,ecx
   14000825d:	cmp    r10w,WORD PTR [r8]
   140008261:	jne    0x140008269
   140008263:	lea    r15,[r8+0x2]
   140008267:	dec    edx
   140008269:	lea    eax,[rdx+0x2]
   14000826c:	add    eax,r9d
   14000826f:	cmp    eax,r12d
   140008272:	ja     0x1400082f0
   140008274:	mov    rcx,rsi
   140008277:	test   r14d,r14d
   14000827a:	je     0x140008293
   14000827c:	cmp    r9d,edx
   14000827f:	mov    rdx,r12
   140008282:	jbe    0x140008287
   140008284:	mov    r8,rbp
   140008287:	or     r9,0xffffffffffffffff
   14000828b:	call   QWORD PTR [rip+0x20e7]        # 0x14000a378
   140008291:	jmp    0x1400082e6
   140008293:	mov    r9d,r9d
   140008296:	or     rbx,0xffffffffffffffff
   14000829a:	mov    r8,rbp
   14000829d:	mov    rdx,r12
   1400082a0:	cmp    r9,r12
   1400082a3:	jb     0x1400082b5
   1400082a5:	mov    r9,rbx
   1400082a8:	call   QWORD PTR [rip+0x20ca]        # 0x14000a378
   1400082ae:	cmp    eax,0x50
   1400082b1:	je     0x1400082f0
   1400082b3:	jmp    0x1400082bb
   1400082b5:	call   QWORD PTR [rip+0x20bd]        # 0x14000a378
   1400082bb:	mov    r9,rbx
   1400082be:	lea    r8,[rsp+0x58]
   1400082c3:	mov    rdx,r12
   1400082c6:	mov    rcx,rsi
   1400082c9:	call   QWORD PTR [rip+0x2099]        # 0x14000a368
   1400082cf:	cmp    eax,0x50
   1400082d2:	je     0x1400082f0
   1400082d4:	mov    r9,rbx
   1400082d7:	mov    r8,r15
   1400082da:	mov    rdx,r12
   1400082dd:	mov    rcx,rsi
   1400082e0:	call   QWORD PTR [rip+0x2082]        # 0x14000a368
   1400082e6:	cmp    eax,0x50
   1400082e9:	je     0x1400082f0
   1400082eb:	mov    edi,0x1
   1400082f0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400082f5:	mov    eax,edi
   1400082f7:	mov    rbp,QWORD PTR [rsp+0x60]
   1400082fc:	add    rsp,0x20
   140008300:	pop    r15
   140008302:	pop    r14
   140008304:	pop    r12
   140008306:	pop    rdi
   140008307:	pop    rsi
   140008308:	ret    
   140008309:	int3   
   14000830a:	int3   
   14000830b:	int3   
   14000830c:	int3   
   14000830d:	int3   
   14000830e:	int3   
   14000830f:	int3   
   140008310:	mov    QWORD PTR [rsp+0x10],rbx
   140008315:	mov    QWORD PTR [rsp+0x18],rbp
   14000831a:	mov    QWORD PTR [rsp+0x20],rsi
   14000831f:	push   rdi
   140008320:	push   r14
   140008322:	push   r15
   140008324:	sub    rsp,0x270
   14000832b:	mov    rax,QWORD PTR [rip+0x6cd6]        # 0x14000f008
   140008332:	xor    rax,rsp
   140008335:	mov    QWORD PTR [rsp+0x260],rax
   14000833d:	xor    ebp,ebp
   14000833f:	lea    r15,[rcx+0x8]
   140008343:	mov    rbx,rdx
   140008346:	mov    r14,rcx
   140008349:	cmp    QWORD PTR [r15],rbp
   14000834c:	je     0x140008356
   14000834e:	lea    eax,[rbp+0x1]
   140008351:	jmp    0x140008524
   140008356:	xor    edx,edx
   140008358:	mov    WORD PTR [rsp+0x50],bp
   14000835d:	mov    r8d,0x206
   140008363:	lea    rcx,[rsp+0x52]
   140008368:	call   0x1400098c6
   14000836d:	mov    eax,0xe00e0804
   140008372:	cmp    rbx,rax
   140008375:	jne    0x140008380
   140008377:	movups xmm0,XMMWORD PTR [rip+0x41b2]        # 0x14000c530
   14000837e:	jmp    0x140008387
   140008380:	movups xmm0,XMMWORD PTR [rip+0x4199]        # 0x14000c520
   140008387:	xor    ecx,ecx
   140008389:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   14000838f:	call   QWORD PTR [rip+0x214b]        # 0x14000a4e0
   140008395:	mov    ecx,ebp
   140008397:	test   eax,eax
   140008399:	setns  cl
   14000839c:	mov    DWORD PTR [r14+0x20],ecx
   1400083a0:	test   ecx,ecx
   1400083a2:	je     0x1400084d8
   1400083a8:	xor    edx,edx
   1400083aa:	lea    rax,[rsp+0x30]
   1400083af:	lea    r9,[rip+0x418a]        # 0x14000c540
   1400083b6:	mov    QWORD PTR [rsp+0x20],rax
   1400083bb:	lea    rcx,[rsp+0x38]
   1400083c0:	lea    r8d,[rdx+0x1]
   1400083c4:	call   QWORD PTR [rip+0x210e]        # 0x14000a4d8
   1400083ca:	test   eax,eax
   1400083cc:	js     0x1400084d8
   1400083d2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400083d7:	mov    rax,QWORD PTR [rdi]
   1400083da:	mov    rbx,QWORD PTR [rax+0x18]
   1400083de:	mov    rcx,rbx
   1400083e1:	call   QWORD PTR [rip+0x2111]        # 0x14000a4f8
   1400083e7:	mov    r9d,0x104
   1400083ed:	lea    r8,[rsp+0x50]
   1400083f2:	mov    edx,0x8
   1400083f7:	mov    rcx,rdi
   1400083fa:	call   rbx
   1400083fc:	mov    rdi,QWORD PTR [rsp+0x30]
   140008401:	mov    esi,eax
   140008403:	mov    rax,QWORD PTR [rdi]
   140008406:	mov    rbx,QWORD PTR [rax+0x10]
   14000840a:	mov    rcx,rbx
   14000840d:	call   QWORD PTR [rip+0x20e5]        # 0x14000a4f8
   140008413:	mov    rcx,rdi
   140008416:	call   rbx
   140008418:	test   esi,esi
   14000841a:	js     0x1400084d8
   140008420:	lea    rcx,[rsp+0x50]
   140008425:	call   QWORD PTR [rip+0x1cdd]        # 0x14000a108
   14000842b:	mov    QWORD PTR [r14],rax
   14000842e:	test   rax,rax
   140008431:	je     0x1400084d8
   140008437:	lea    rdx,[rip+0x40d2]        # 0x14000c510
   14000843e:	mov    rcx,rax
   140008441:	call   QWORD PTR [rip+0x1cb9]        # 0x14000a100
   140008447:	mov    rbx,rax
   14000844a:	test   rax,rax
   14000844d:	je     0x1400084d8
   140008453:	mov    rcx,rax
   140008456:	call   QWORD PTR [rip+0x209c]        # 0x14000a4f8
   14000845c:	xor    r8d,r8d
   14000845f:	lea    rcx,[rip+0x40ea]        # 0x14000c550
   140008466:	mov    rdx,r15
   140008469:	call   rbx
   14000846b:	test   eax,eax
   14000846d:	js     0x1400084d8
   14000846f:	cmp    QWORD PTR [r15],rbp
   140008472:	je     0x1400084d8
   140008474:	mov    rsi,QWORD PTR [r15]
   140008477:	mov    rax,QWORD PTR [rsi]
   14000847a:	mov    rbx,QWORD PTR [rax+0x18]
   14000847e:	mov    rcx,rbx
   140008481:	call   QWORD PTR [rip+0x2071]        # 0x14000a4f8
   140008487:	mov    rcx,rsi
   14000848a:	call   rbx
   14000848c:	mov    edi,eax
   14000848e:	mov    rax,QWORD PTR [rsi]
   140008491:	mov    rbx,QWORD PTR [rax+0x8]
   140008495:	mov    rcx,rbx
   140008498:	call   QWORD PTR [rip+0x205a]        # 0x14000a4f8
   14000849e:	mov    rcx,rsi
   1400084a1:	call   rbx
   1400084a3:	imul   edi,eax
   1400084a6:	mov    eax,0x2
   1400084ab:	mov    DWORD PTR [r14+0x10],edi
   1400084af:	lea    ecx,[rdi+0x1]
   1400084b2:	mul    rcx
   1400084b5:	mov    rcx,0xffffffffffffffff
   1400084bc:	cmovo  rax,rcx
   1400084c0:	mov    rcx,rax
   1400084c3:	call   0x140008ce0
   1400084c8:	mov    QWORD PTR [r14+0x18],rax
   1400084cc:	test   rax,rax
   1400084cf:	je     0x1400084d8
   1400084d1:	mov    ebp,0x1
   1400084d6:	jmp    0x140008522
   1400084d8:	mov    rdi,QWORD PTR [r15]
   1400084db:	test   rdi,rdi
   1400084de:	je     0x1400084f7
   1400084e0:	mov    rax,QWORD PTR [rdi]
   1400084e3:	mov    rbx,QWORD PTR [rax]
   1400084e6:	mov    rcx,rbx
   1400084e9:	call   QWORD PTR [rip+0x2009]        # 0x14000a4f8
   1400084ef:	mov    rcx,rdi
   1400084f2:	call   rbx
   1400084f4:	mov    QWORD PTR [r15],rbp
   1400084f7:	cmp    QWORD PTR [r14],rbp
   1400084fa:	je     0x140008508
   1400084fc:	mov    rcx,QWORD PTR [r14]
   1400084ff:	call   QWORD PTR [rip+0x1bf3]        # 0x14000a0f8
   140008505:	mov    QWORD PTR [r14],rbp
   140008508:	mov    rcx,QWORD PTR [r14+0x18]
   14000850c:	test   rcx,rcx
   14000850f:	je     0x140008517
   140008511:	call   QWORD PTR [rip+0x1e59]        # 0x14000a370
   140008517:	mov    QWORD PTR [r15],rbp
   14000851a:	mov    DWORD PTR [r14+0x10],ebp
   14000851e:	mov    QWORD PTR [r14+0x18],rbp
   140008522:	mov    eax,ebp
   140008524:	mov    rcx,QWORD PTR [rsp+0x260]
   14000852c:	xor    rcx,rsp
   14000852f:	call   0x1400090a0
   140008534:	lea    r11,[rsp+0x270]
   14000853c:	mov    rbx,QWORD PTR [r11+0x28]
   140008540:	mov    rbp,QWORD PTR [r11+0x30]
   140008544:	mov    rsi,QWORD PTR [r11+0x38]
   140008548:	mov    rsp,r11
   14000854b:	pop    r15
   14000854d:	pop    r14
   14000854f:	pop    rdi
   140008550:	ret    
   140008551:	int3   
   140008552:	int3   
   140008553:	int3   
   140008554:	int3   
   140008555:	int3   
   140008556:	int3   
   140008557:	int3   
   140008558:	sub    rsp,0x28
   14000855c:	mov    rcx,QWORD PTR [rcx]
   14000855f:	lea    rax,[rcx-0x1]
   140008563:	cmp    rax,0xfffffffffffffffd
   140008567:	ja     0x14000856f
   140008569:	call   QWORD PTR [rip+0x1c29]        # 0x14000a198
   14000856f:	add    rsp,0x28
   140008573:	ret    
   140008574:	int3   
   140008575:	int3   
   140008576:	int3   
   140008577:	int3   
   140008578:	int3   
   140008579:	int3   
   14000857a:	int3   
   14000857b:	int3   
   14000857c:	mov    rax,rsp
   14000857f:	push   rbp
   140008580:	push   rdi
   140008581:	push   r14
   140008583:	mov    rbp,rsp
   140008586:	sub    rsp,0x50
   14000858a:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140008592:	mov    QWORD PTR [rax+0x18],rbx
   140008596:	mov    QWORD PTR [rax+0x20],rsi
   14000859a:	mov    r14,rcx
   14000859d:	xor    ebx,ebx
   14000859f:	and    QWORD PTR [rbp+0x28],rbx
   1400085a3:	test   rcx,rcx
   1400085a6:	je     0x14000867d
   1400085ac:	call   QWORD PTR [rip+0x1aee]        # 0x14000a0a0
   1400085b2:	mov    rcx,rax
   1400085b5:	lea    r8,[rbp+0x28]
   1400085b9:	lea    edx,[rbx+0x18]
   1400085bc:	call   QWORD PTR [rip+0x1a46]        # 0x14000a008
   1400085c2:	test   eax,eax
   1400085c4:	je     0x14000867d
   1400085ca:	and    DWORD PTR [rbp+0x20],ebx
   1400085cd:	lea    rax,[rbp+0x20]
   1400085d1:	mov    QWORD PTR [rsp+0x20],rax
   1400085d6:	xor    r9d,r9d
   1400085d9:	xor    r8d,r8d
   1400085dc:	lea    esi,[rbx+0x19]
   1400085df:	mov    edx,esi
   1400085e1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400085e5:	call   QWORD PTR [rip+0x1a35]        # 0x14000a020
   1400085eb:	mov    eax,DWORD PTR [rbp+0x20]
   1400085ee:	test   eax,eax
   1400085f0:	je     0x14000867d
   1400085f6:	xorps  xmm0,xmm0
   1400085f9:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   1400085fe:	and    QWORD PTR [rbp-0x8],rbx
   140008602:	mov    edx,eax
   140008604:	lea    rcx,[rbp-0x18]
   140008608:	call   0x1400087e8
   14000860d:	lea    rax,[rbp+0x20]
   140008611:	mov    QWORD PTR [rsp+0x20],rax
   140008616:	mov    r9d,DWORD PTR [rbp+0x20]
   14000861a:	mov    rdi,QWORD PTR [rbp-0x18]
   14000861e:	mov    r8,rdi
   140008621:	mov    edx,esi
   140008623:	mov    rcx,QWORD PTR [rbp+0x28]
   140008627:	call   QWORD PTR [rip+0x19f3]        # 0x14000a020
   14000862d:	test   eax,eax
   14000862f:	je     0x14000866b
   140008631:	test   rdi,rdi
   140008634:	je     0x14000866b
   140008636:	mov    rsi,QWORD PTR [rdi]
   140008639:	mov    rcx,rsi
   14000863c:	call   QWORD PTR [rip+0x19ee]        # 0x14000a030
   140008642:	test   eax,eax
   140008644:	je     0x14000866b
   140008646:	mov    rcx,rsi
   140008649:	call   QWORD PTR [rip+0x19c9]        # 0x14000a018
   14000864f:	cmp    BYTE PTR [rax],0x1
   140008652:	jb     0x14000866d
   140008654:	xor    edx,edx
   140008656:	mov    rcx,rsi
   140008659:	call   QWORD PTR [rip+0x19b1]        # 0x14000a010
   14000865f:	mov    ecx,DWORD PTR [rax]
   140008661:	mov    DWORD PTR [r14],ecx
   140008664:	mov    ebx,0x1
   140008669:	jmp    0x14000866d
   14000866b:	xor    ebx,ebx
   14000866d:	test   rdi,rdi
   140008670:	je     0x14000867f
   140008672:	mov    rcx,rdi
   140008675:	call   QWORD PTR [rip+0x1d0d]        # 0x14000a388
   14000867b:	jmp    0x14000867f
   14000867d:	xor    ebx,ebx
   14000867f:	mov    rcx,QWORD PTR [rbp+0x28]
   140008683:	lea    rdx,[rcx-0x1]
   140008687:	cmp    rdx,0xfffffffffffffffd
   14000868b:	ja     0x140008693
   14000868d:	call   QWORD PTR [rip+0x1b05]        # 0x14000a198
   140008693:	mov    eax,ebx
   140008695:	lea    r11,[rsp+0x50]
   14000869a:	mov    rbx,QWORD PTR [r11+0x30]
   14000869e:	mov    rsi,QWORD PTR [r11+0x38]
   1400086a2:	mov    rsp,r11
   1400086a5:	pop    r14
   1400086a7:	pop    rdi
   1400086a8:	pop    rbp
   1400086a9:	ret    
   1400086aa:	int3   
   1400086ab:	int3   
   1400086ac:	int3   
   1400086ad:	int3   
   1400086ae:	int3   
   1400086af:	int3   
   1400086b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400086b5:	mov    QWORD PTR [rsp+0x10],rdi
   1400086ba:	push   rbp
   1400086bb:	lea    rbp,[rsp-0x70]
   1400086c0:	sub    rsp,0x170
   1400086c7:	mov    rax,QWORD PTR [rip+0x693a]        # 0x14000f008
   1400086ce:	xor    rax,rsp
   1400086d1:	mov    QWORD PTR [rbp+0x60],rax
   1400086d5:	lea    rcx,[rsp+0x40]
   1400086da:	mov    DWORD PTR [rsp+0x40],0x11c
   1400086e2:	call   QWORD PTR [rip+0x1a90]        # 0x14000a178
   1400086e8:	xor    edi,edi
   1400086ea:	test   eax,eax
   1400086ec:	setne  al
   1400086ef:	mov    BYTE PTR [rbp+0x5c],al
   1400086f2:	test   al,al
   1400086f4:	je     0x14000878a
   1400086fa:	cmp    DWORD PTR [rsp+0x44],0x6
   1400086ff:	jb     0x14000878a
   140008705:	lea    rax,[rsp+0x38]
   14000870a:	mov    QWORD PTR [rsp+0x38],rdi
   14000870f:	mov    r9d,0x20019
   140008715:	mov    QWORD PTR [rsp+0x20],rax
   14000871a:	xor    r8d,r8d
   14000871d:	lea    rdx,[rip+0x3e5c]        # 0x14000c580
   140008724:	mov    rcx,0xffffffff80000002
   14000872b:	lea    ebx,[rdi+0x1]
   14000872e:	call   QWORD PTR [rip+0x1904]        # 0x14000a038
   140008734:	test   eax,eax
   140008736:	jne    0x140008786
   140008738:	mov    rcx,QWORD PTR [rsp+0x38]
   14000873d:	lea    rax,[rsp+0x34]
   140008742:	mov    QWORD PTR [rsp+0x28],rax
   140008747:	lea    rdx,[rip+0x3eaa]        # 0x14000c5f8
   14000874e:	lea    rax,[rsp+0x30]
   140008753:	mov    DWORD PTR [rsp+0x30],edi
   140008757:	xor    r9d,r9d
   14000875a:	mov    QWORD PTR [rsp+0x20],rax
   14000875f:	xor    r8d,r8d
   140008762:	mov    DWORD PTR [rsp+0x34],0x4
   14000876a:	call   QWORD PTR [rip+0x18b8]        # 0x14000a028
   140008770:	test   eax,eax
   140008772:	jne    0x14000877b
   140008774:	cmp    DWORD PTR [rsp+0x30],edi
   140008778:	cmove  ebx,edi
   14000877b:	mov    rcx,QWORD PTR [rsp+0x38]
   140008780:	call   QWORD PTR [rip+0x18ba]        # 0x14000a040
   140008786:	mov    eax,ebx
   140008788:	jmp    0x14000878c
   14000878a:	xor    eax,eax
   14000878c:	mov    rcx,QWORD PTR [rbp+0x60]
   140008790:	xor    rcx,rsp
   140008793:	call   0x1400090a0
   140008798:	lea    r11,[rsp+0x170]
   1400087a0:	mov    rbx,QWORD PTR [r11+0x10]
   1400087a4:	mov    rdi,QWORD PTR [r11+0x18]
   1400087a8:	mov    rsp,r11
   1400087ab:	pop    rbp
   1400087ac:	ret    
   1400087ad:	int3   
   1400087ae:	int3   
   1400087af:	int3   
   1400087b0:	int3   
   1400087b1:	int3   
   1400087b2:	int3   
   1400087b3:	int3   
   1400087b4:	rex push rbx
   1400087b6:	sub    rsp,0x20
   1400087ba:	mov    rbx,rcx
   1400087bd:	mov    rcx,QWORD PTR [rcx]
   1400087c0:	test   rcx,rcx
   1400087c3:	je     0x1400087d9
   1400087c5:	call   QWORD PTR [rip+0x1bbd]        # 0x14000a388
   1400087cb:	and    QWORD PTR [rbx],0x0
   1400087cf:	and    QWORD PTR [rbx+0x8],0x0
   1400087d4:	and    QWORD PTR [rbx+0x10],0x0
   1400087d9:	add    rsp,0x20
   1400087dd:	pop    rbx
   1400087de:	ret    
   1400087df:	int3   
   1400087e0:	int3   
   1400087e1:	int3   
   1400087e2:	int3   
   1400087e3:	int3   
   1400087e4:	int3   
   1400087e5:	int3   
   1400087e6:	int3   
   1400087e7:	int3   
   1400087e8:	mov    rax,rsp
   1400087eb:	mov    QWORD PTR [rax+0x8],rcx
   1400087ef:	push   rdi
   1400087f0:	sub    rsp,0x30
   1400087f4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400087fc:	mov    QWORD PTR [rax+0x10],rbx
   140008800:	mov    QWORD PTR [rax+0x18],rsi
   140008804:	mov    rbx,rdx
   140008807:	mov    rsi,rcx
   14000880a:	mov    rax,QWORD PTR [rcx+0x8]
   14000880e:	mov    r8,QWORD PTR [rcx]
   140008811:	mov    r9,rax
   140008814:	sub    r9,r8
   140008817:	cmp    r9,rdx
   14000881a:	jbe    0x140008855
   14000881c:	add    rbx,r8
   14000881f:	cmp    rbx,r8
   140008822:	jne    0x14000882d
   140008824:	mov    QWORD PTR [rcx+0x8],r8
   140008828:	jmp    0x1400088ce
   14000882d:	cmp    rbx,rax
   140008830:	je     0x1400088ce
   140008836:	mov    rdi,rax
   140008839:	sub    rdi,rax
   14000883c:	mov    r8,rdi
   14000883f:	mov    rdx,rax
   140008842:	mov    rcx,rbx
   140008845:	call   QWORD PTR [rip+0x1b75]        # 0x14000a3c0
   14000884b:	lea    rax,[rdi+rbx*1]
   14000884f:	mov    QWORD PTR [rsi+0x8],rax
   140008853:	jmp    0x1400088ce
   140008855:	jae    0x1400088ce
   140008857:	mov    r10,r8
   14000885a:	sub    r10,rax
   14000885d:	lea    r11,[r10+rdx*1]
   140008861:	mov    rdx,QWORD PTR [rcx+0x10]
   140008865:	mov    rcx,rdx
   140008868:	sub    rcx,rax
   14000886b:	cmp    rcx,r11
   14000886e:	jae    0x1400088af
   140008870:	lea    rax,[r10-0x1]
   140008874:	cmp    rax,r11
   140008877:	jae    0x14000887f
   140008879:	call   0x14000898c
   14000887e:	int3   
   14000887f:	lea    r10,[r9+r11*1]
   140008883:	sub    rdx,r8
   140008886:	mov    rcx,rdx
   140008889:	shr    rcx,1
   14000888c:	or     rax,0xffffffffffffffff
   140008890:	sub    rax,rcx
   140008893:	cmp    rax,rdx
   140008896:	jae    0x14000889c
   140008898:	xor    edx,edx
   14000889a:	jmp    0x14000889f
   14000889c:	add    rdx,rcx
   14000889f:	cmp    rdx,r10
   1400088a2:	cmovb  rdx,r10
   1400088a6:	mov    rcx,rsi
   1400088a9:	call   0x1400088e4
   1400088ae:	nop
   1400088af:	mov    rcx,QWORD PTR [rsi+0x8]
   1400088b3:	mov    r8,QWORD PTR [rsi]
   1400088b6:	sub    r8,rcx
   1400088b9:	add    r8,rbx
   1400088bc:	xor    edx,edx
   1400088be:	call   0x1400098c6
   1400088c3:	nop
   1400088c4:	mov    rcx,QWORD PTR [rsi]
   1400088c7:	add    rcx,rbx
   1400088ca:	mov    QWORD PTR [rsi+0x8],rcx
   1400088ce:	mov    rbx,QWORD PTR [rsp+0x48]
   1400088d3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400088d8:	add    rsp,0x30
   1400088dc:	pop    rdi
   1400088dd:	ret    
   1400088de:	int3   
   1400088df:	int3   
   1400088e0:	int3   
   1400088e1:	int3   
   1400088e2:	int3   
   1400088e3:	int3   
   1400088e4:	mov    rax,rsp
   1400088e7:	push   r14
   1400088e9:	sub    rsp,0x30
   1400088ed:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400088f5:	mov    QWORD PTR [rax+0x8],rbx
   1400088f9:	mov    QWORD PTR [rax+0x18],rsi
   1400088fd:	mov    QWORD PTR [rax+0x20],rdi
   140008901:	mov    rsi,rdx
   140008904:	mov    rdi,rcx
   140008907:	xor    ebx,ebx
   140008909:	mov    QWORD PTR [rsp+0x48],rbx
   14000890e:	test   rdx,rdx
   140008911:	je     0x140008934
   140008913:	cmp    rdx,0xffffffffffffffff
   140008917:	ja     0x14000892e
   140008919:	mov    rcx,rdx
   14000891c:	call   0x140008ca8
   140008921:	mov    rbx,rax
   140008924:	mov    QWORD PTR [rsp+0x48],rax
   140008929:	test   rax,rax
   14000892c:	jne    0x140008934
   14000892e:	call   0x140008c28
   140008933:	nop
   140008934:	mov    r8,QWORD PTR [rdi+0x8]
   140008938:	sub    r8,QWORD PTR [rdi]
   14000893b:	mov    rdx,QWORD PTR [rdi]
   14000893e:	mov    rcx,rbx
   140008941:	call   QWORD PTR [rip+0x1a79]        # 0x14000a3c0
   140008947:	nop
   140008948:	mov    rcx,QWORD PTR [rdi]
   14000894b:	mov    r14,QWORD PTR [rdi+0x8]
   14000894f:	sub    r14,rcx
   140008952:	test   rcx,rcx
   140008955:	je     0x14000895d
   140008957:	call   QWORD PTR [rip+0x1a2b]        # 0x14000a388
   14000895d:	lea    rax,[rbx+rsi*1]
   140008961:	mov    QWORD PTR [rdi+0x10],rax
   140008965:	lea    rax,[rbx+r14*1]
   140008969:	mov    QWORD PTR [rdi+0x8],rax
   14000896d:	mov    QWORD PTR [rdi],rbx
   140008970:	mov    rbx,QWORD PTR [rsp+0x40]
   140008975:	mov    rsi,QWORD PTR [rsp+0x50]
   14000897a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000897f:	add    rsp,0x30
   140008983:	pop    r14
   140008985:	ret    
   140008986:	int3   
   140008987:	int3   
   140008988:	int3   
   140008989:	int3   
   14000898a:	int3   
   14000898b:	int3   
   14000898c:	sub    rsp,0x28
   140008990:	lea    rcx,[rip+0x3c79]        # 0x14000c610
   140008997:	call   0x140008c50
   14000899c:	int3   
   14000899d:	int3   
   14000899e:	int3   
   14000899f:	int3   
   1400089a0:	int3   
   1400089a1:	int3   
   1400089a2:	int3   
   1400089a3:	int3   
   1400089a4:	mov    rcx,rdx
   1400089a7:	rex.W jmp QWORD PTR [rip+0x19da]        # 0x14000a388
   1400089ae:	int3   
   1400089af:	int3   
   1400089b0:	int3   
   1400089b1:	int3   
   1400089b2:	int3   
   1400089b3:	int3   
   1400089b4:	mov    QWORD PTR [rsp+0x8],rcx
   1400089b9:	push   rbx
   1400089ba:	sub    rsp,0x30
   1400089be:	mov    rax,QWORD PTR [rip+0x709b]        # 0x14000fa60
   1400089c5:	xor    ebx,ebx
   1400089c7:	test   rax,rax
   1400089ca:	jne    0x1400089d9
   1400089cc:	call   QWORD PTR [rip+0x16ce]        # 0x14000a0a0
   1400089d2:	mov    QWORD PTR [rip+0x7087],rax        # 0x14000fa60
   1400089d9:	lea    r8,[rip+0x7088]        # 0x14000fa68
   1400089e0:	mov    QWORD PTR [rip+0x7081],rbx        # 0x14000fa68
   1400089e7:	mov    edx,0x18
   1400089ec:	mov    rcx,rax
   1400089ef:	call   QWORD PTR [rip+0x1613]        # 0x14000a008
   1400089f5:	cmp    eax,0x1
   1400089f8:	jne    0x140008a41
   1400089fa:	mov    rcx,QWORD PTR [rip+0x7067]        # 0x14000fa68
   140008a01:	lea    rax,[rsp+0x48]
   140008a06:	mov    r9d,0x4
   140008a0c:	mov    DWORD PTR [rsp+0x40],ebx
   140008a10:	lea    r8,[rsp+0x40]
   140008a15:	mov    QWORD PTR [rsp+0x20],rax
   140008a1a:	lea    edx,[r9+0x19]
   140008a1e:	call   QWORD PTR [rip+0x15fc]        # 0x14000a020
   140008a24:	test   eax,eax
   140008a26:	je     0x140008a48
   140008a28:	cmp    DWORD PTR [rsp+0x40],ebx
   140008a2c:	mov    DWORD PTR [rip+0x7022],0x1        # 0x14000fa58
   140008a36:	setne  bl
   140008a39:	mov    DWORD PTR [rip+0x7031],ebx        # 0x14000fa70
   140008a3f:	jmp    0x140008a48
   140008a41:	mov    QWORD PTR [rip+0x7020],rbx        # 0x14000fa68
   140008a48:	mov    eax,DWORD PTR [rip+0x700a]        # 0x14000fa58
   140008a4e:	add    rsp,0x30
   140008a52:	pop    rbx
   140008a53:	ret    
   140008a54:	int3   
   140008a55:	int3   
   140008a56:	int3   
   140008a57:	int3   
   140008a58:	int3   
   140008a59:	int3   
   140008a5a:	int3   
   140008a5b:	int3   
   140008a5c:	cmp    QWORD PTR [rip+0x24d4],0x0        # 0x14000af38
   140008a64:	lea    rax,[rip+0x24c5]        # 0x14000af30
   140008a6b:	je     0x140008a7c
   140008a6d:	cmp    DWORD PTR [rax],ecx
   140008a6f:	je     0x140008a7f
   140008a71:	add    rax,0x10
   140008a75:	cmp    QWORD PTR [rax+0x8],0x0
   140008a7a:	jne    0x140008a6d
   140008a7c:	xor    eax,eax
   140008a7e:	ret    
   140008a7f:	mov    rax,QWORD PTR [rax+0x8]
   140008a83:	ret    
   140008a84:	int3   
   140008a85:	int3   
   140008a86:	int3   
   140008a87:	int3   
   140008a88:	int3   
   140008a89:	int3   
   140008a8a:	int3   
   140008a8b:	int3   
   140008a8c:	cmp    QWORD PTR [rip+0x1bb4],0x0        # 0x14000a648
   140008a94:	lea    rax,[rip+0x1ba5]        # 0x14000a640
   140008a9b:	je     0x140008aac
   140008a9d:	cmp    DWORD PTR [rax],ecx
   140008a9f:	je     0x140008aaf
   140008aa1:	add    rax,0x10
   140008aa5:	cmp    QWORD PTR [rax+0x8],0x0
   140008aaa:	jne    0x140008a9d
   140008aac:	xor    eax,eax
   140008aae:	ret    
   140008aaf:	mov    rax,QWORD PTR [rax+0x8]
   140008ab3:	ret    
   140008ab4:	int3   
   140008ab5:	int3   
   140008ab6:	int3   
   140008ab7:	int3   
   140008ab8:	int3   
   140008ab9:	int3   
   140008aba:	int3   
   140008abb:	int3   
   140008abc:	rex push rbx
   140008abe:	sub    rsp,0x20
   140008ac2:	mov    rbx,rcx
   140008ac5:	call   0x1400094a2
   140008aca:	lea    rax,[rip+0x2e5f]        # 0x14000b930
   140008ad1:	mov    QWORD PTR [rbx],rax
   140008ad4:	mov    rax,rbx
   140008ad7:	add    rsp,0x20
   140008adb:	pop    rbx
   140008adc:	ret    
   140008add:	int3   
   140008ade:	int3   
   140008adf:	int3   
   140008ae0:	int3   
   140008ae1:	int3   
   140008ae2:	int3   
   140008ae3:	int3   
   140008ae4:	rex push rbx
   140008ae6:	sub    rsp,0x20
   140008aea:	lea    rax,[rip+0x2e4f]        # 0x14000b940
   140008af1:	mov    r8d,0x1
   140008af7:	lea    rdx,[rsp+0x30]
   140008afc:	mov    QWORD PTR [rsp+0x30],rax
   140008b01:	mov    rbx,rcx
   140008b04:	call   0x140009496
   140008b09:	lea    rax,[rip+0x2e20]        # 0x14000b930
   140008b10:	mov    QWORD PTR [rbx],rax
   140008b13:	mov    rax,rbx
   140008b16:	add    rsp,0x20
   140008b1a:	pop    rbx
   140008b1b:	ret    
   140008b1c:	int3   
   140008b1d:	int3   
   140008b1e:	int3   
   140008b1f:	int3   
   140008b20:	int3   
   140008b21:	int3   
   140008b22:	int3   
   140008b23:	int3   
   140008b24:	rex push rbx
   140008b26:	sub    rsp,0x20
   140008b2a:	mov    rbx,rcx
   140008b2d:	call   0x1400094a2
   140008b32:	lea    rax,[rip+0x2e17]        # 0x14000b950
   140008b39:	mov    QWORD PTR [rbx],rax
   140008b3c:	mov    rax,rbx
   140008b3f:	add    rsp,0x20
   140008b43:	pop    rbx
   140008b44:	ret    
   140008b45:	int3   
   140008b46:	int3   
   140008b47:	int3   
   140008b48:	int3   
   140008b49:	int3   
   140008b4a:	int3   
   140008b4b:	int3   
   140008b4c:	mov    QWORD PTR [rsp+0x8],rcx
   140008b51:	push   rbx
   140008b52:	sub    rsp,0x20
   140008b56:	mov    QWORD PTR [rsp+0x30],rdx
   140008b5b:	mov    rbx,rcx
   140008b5e:	lea    rdx,[rsp+0x30]
   140008b63:	call   0x14000948a
   140008b68:	lea    rax,[rip+0x2de1]        # 0x14000b950
   140008b6f:	mov    QWORD PTR [rbx],rax
   140008b72:	mov    rax,rbx
   140008b75:	add    rsp,0x20
   140008b79:	pop    rbx
   140008b7a:	ret    
   140008b7b:	int3   
   140008b7c:	int3   
   140008b7d:	int3   
   140008b7e:	int3   
   140008b7f:	int3   
   140008b80:	int3   
   140008b81:	int3   
   140008b82:	int3   
   140008b83:	int3   
   140008b84:	lea    rax,[rip+0x2da5]        # 0x14000b930
   140008b8b:	mov    QWORD PTR [rcx],rax
   140008b8e:	jmp    0x1400094ae
   140008b93:	int3   
   140008b94:	int3   
   140008b95:	int3   
   140008b96:	int3   
   140008b97:	int3   
   140008b98:	int3   
   140008b99:	int3   
   140008b9a:	int3   
   140008b9b:	int3   
   140008b9c:	jmp    0x1400094ae
   140008ba1:	int3   
   140008ba2:	int3   
   140008ba3:	int3   
   140008ba4:	int3   
   140008ba5:	int3   
   140008ba6:	int3   
   140008ba7:	int3   
   140008ba8:	int3   
   140008ba9:	int3   
   140008baa:	int3   
   140008bab:	int3   
   140008bac:	int3   
   140008bad:	int3   
   140008bae:	int3   
   140008baf:	int3   
   140008bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140008bb5:	push   rdi
   140008bb6:	sub    rsp,0x20
   140008bba:	lea    rax,[rip+0x2d6f]        # 0x14000b930
   140008bc1:	mov    ebx,edx
   140008bc3:	mov    QWORD PTR [rcx],rax
   140008bc6:	mov    rdi,rcx
   140008bc9:	call   0x1400094ae
   140008bce:	test   bl,0x1
   140008bd1:	je     0x140008bdb
   140008bd3:	mov    rcx,rdi
   140008bd6:	call   0x14000919c
   140008bdb:	mov    rax,rdi
   140008bde:	mov    rbx,QWORD PTR [rsp+0x30]
   140008be3:	add    rsp,0x20
   140008be7:	pop    rdi
   140008be8:	ret    
   140008be9:	int3   
   140008bea:	int3   
   140008beb:	int3   
   140008bec:	int3   
   140008bed:	int3   
   140008bee:	int3   
   140008bef:	int3   
   140008bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140008bf5:	push   rdi
   140008bf6:	sub    rsp,0x20
   140008bfa:	mov    ebx,edx
   140008bfc:	mov    rdi,rcx
   140008bff:	call   0x1400094ae
   140008c04:	test   bl,0x1
   140008c07:	je     0x140008c11
   140008c09:	mov    rcx,rdi
   140008c0c:	call   0x14000919c
   140008c11:	mov    rax,rdi
   140008c14:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c19:	add    rsp,0x20
   140008c1d:	pop    rdi
   140008c1e:	ret    
   140008c1f:	int3   
   140008c20:	int3   
   140008c21:	int3   
   140008c22:	int3   
   140008c23:	int3   
   140008c24:	int3   
   140008c25:	int3   
   140008c26:	int3   
   140008c27:	int3   
   140008c28:	sub    rsp,0x48
   140008c2c:	lea    rcx,[rsp+0x20]
   140008c31:	call   0x140008ae4
   140008c36:	lea    rdx,[rip+0x464b]        # 0x14000d288
   140008c3d:	lea    rcx,[rsp+0x20]
   140008c42:	call   0x140009466
   140008c47:	int3   
   140008c48:	int3   
   140008c49:	int3   
   140008c4a:	int3   
   140008c4b:	int3   
   140008c4c:	int3   
   140008c4d:	int3   
   140008c4e:	int3   
   140008c4f:	int3   
   140008c50:	sub    rsp,0x48
   140008c54:	mov    rdx,rcx
   140008c57:	lea    rcx,[rsp+0x20]
   140008c5c:	call   0x140008b4c
   140008c61:	lea    rdx,[rip+0x46d0]        # 0x14000d338
   140008c68:	lea    rcx,[rsp+0x20]
   140008c6d:	call   0x140009466
   140008c72:	int3   
   140008c73:	int3   
   140008c74:	int3   
   140008c75:	int3   
   140008c76:	int3   
   140008c77:	int3   
   140008c78:	int3   
   140008c79:	int3   
   140008c7a:	int3   
   140008c7b:	int3   
   140008c7c:	sub    rsp,0x48
   140008c80:	mov    rdx,rcx
   140008c83:	lea    rcx,[rsp+0x20]
   140008c88:	call   0x140008b4c
   140008c8d:	lea    rdx,[rip+0x470c]        # 0x14000d3a0
   140008c94:	lea    rcx,[rsp+0x20]
   140008c99:	call   0x140009466
   140008c9e:	int3   
   140008c9f:	int3   
   140008ca0:	int3   
   140008ca1:	int3   
   140008ca2:	int3   
   140008ca3:	int3   
   140008ca4:	int3   
   140008ca5:	int3   
   140008ca6:	int3   
   140008ca7:	int3   
   140008ca8:	rex push rbx
   140008caa:	sub    rsp,0x20
   140008cae:	mov    rbx,rcx
   140008cb1:	jmp    0x140008cc2
   140008cb3:	mov    rcx,rbx
   140008cb6:	call   0x140009506
   140008cbb:	test   eax,eax
   140008cbd:	je     0x140008cd3
   140008cbf:	mov    rcx,rbx
   140008cc2:	call   QWORD PTR [rip+0x17f8]        # 0x14000a4c0
   140008cc8:	test   rax,rax
   140008ccb:	je     0x140008cb3
   140008ccd:	add    rsp,0x20
   140008cd1:	pop    rbx
   140008cd2:	ret    
   140008cd3:	call   0x140008c28
   140008cd8:	int3   
   140008cd9:	int3   
   140008cda:	int3   
   140008cdb:	int3   
   140008cdc:	int3   
   140008cdd:	int3   
   140008cde:	int3   
   140008cdf:	int3   
   140008ce0:	jmp    0x140008ca8
   140008ce5:	int3   
   140008ce6:	int3   
   140008ce7:	int3   
   140008ce8:	int3   
   140008ce9:	int3   
   140008cea:	int3   
   140008ceb:	int3   
   140008cec:	int3   
   140008ced:	int3   
   140008cee:	int3   
   140008cef:	int3   
   140008cf0:	sub    rsp,0x28
   140008cf4:	mov    eax,0x5a4d
   140008cf9:	cmp    WORD PTR [rip+0xffffffffffff7300],ax        # 0x140000000
   140008d00:	je     0x140008d06
   140008d02:	xor    eax,eax
   140008d04:	jmp    0x140008d55
   140008d06:	movsxd rcx,DWORD PTR [rip+0xffffffffffff732f]        # 0x14000003c
   140008d0d:	lea    rax,[rip+0xffffffffffff72ec]        # 0x140000000
   140008d14:	add    rcx,rax
   140008d17:	cmp    DWORD PTR [rcx],0x4550
   140008d1d:	jne    0x140008d02
   140008d1f:	movzx  eax,WORD PTR [rcx+0x18]
   140008d23:	cmp    eax,0x10b
   140008d28:	je     0x140008d44
   140008d2a:	cmp    eax,0x20b
   140008d2f:	jne    0x140008d02
   140008d31:	xor    eax,eax
   140008d33:	cmp    DWORD PTR [rcx+0x84],0xe
   140008d3a:	jbe    0x140008d55
   140008d3c:	cmp    DWORD PTR [rcx+0xf8],eax
   140008d42:	jmp    0x140008d52
   140008d44:	xor    eax,eax
   140008d46:	cmp    DWORD PTR [rcx+0x74],0xe
   140008d4a:	jbe    0x140008d55
   140008d4c:	cmp    DWORD PTR [rcx+0xe8],eax
   140008d52:	setne  al
   140008d55:	mov    ecx,0x2
   140008d5a:	mov    DWORD PTR [rip+0x66f0],eax        # 0x14000f450
   140008d60:	call   0x1400095e8
   140008d65:	mov    ecx,eax
   140008d67:	call   QWORD PTR [rip+0x16a3]        # 0x14000a410
   140008d6d:	mov    rcx,QWORD PTR [rip+0x1654]        # 0x14000a3c8
   140008d74:	or     rax,0xffffffffffffffff
   140008d78:	mov    QWORD PTR [rip+0x6f61],rax        # 0x14000fce0
   140008d7f:	mov    QWORD PTR [rip+0x6f62],rax        # 0x14000fce8
   140008d86:	mov    eax,DWORD PTR [rip+0x6c50]        # 0x14000f9dc
   140008d8c:	mov    DWORD PTR [rcx],eax
   140008d8e:	mov    rcx,QWORD PTR [rip+0x1623]        # 0x14000a3b8
   140008d95:	mov    eax,DWORD PTR [rip+0x6c35]        # 0x14000f9d0
   140008d9b:	mov    DWORD PTR [rcx],eax
   140008d9d:	call   0x140007d30
   140008da2:	cmp    DWORD PTR [rip+0x6257],0x0        # 0x14000f000
   140008da9:	jne    0x140008db8
   140008dab:	lea    rcx,[rip+0xffffffffffffef7e]        # 0x140007d30
   140008db2:	call   QWORD PTR [rip+0x1630]        # 0x14000a3e8
   140008db8:	xor    eax,eax
   140008dba:	add    rsp,0x28
   140008dbe:	ret    
   140008dbf:	int3   
   140008dc0:	int3   
   140008dc1:	int3   
   140008dc2:	int3   
   140008dc3:	int3   
   140008dc4:	int3   
   140008dc5:	int3   
   140008dc6:	int3   
   140008dc7:	int3   
   140008dc8:	int3   
   140008dc9:	int3   
   140008dca:	int3   
   140008dcb:	int3   
   140008dcc:	int3   
   140008dcd:	int3   
   140008dce:	int3   
   140008dcf:	int3   
   140008dd0:	sub    rsp,0x38
   140008dd4:	mov    eax,DWORD PTR [rip+0x6bfe]        # 0x14000f9d8
   140008dda:	lea    r8,[rip+0x6667]        # 0x14000f448
   140008de1:	mov    r9d,DWORD PTR [rip+0x6bec]        # 0x14000f9d4
   140008de8:	lea    rdx,[rip+0x6651]        # 0x14000f440
   140008def:	mov    DWORD PTR [rip+0x665f],eax        # 0x14000f454
   140008df5:	lea    rcx,[rip+0x663c]        # 0x14000f438
   140008dfc:	lea    rax,[rip+0x6651]        # 0x14000f454
   140008e03:	mov    QWORD PTR [rsp+0x20],rax
   140008e08:	call   QWORD PTR [rip+0x160a]        # 0x14000a418
   140008e0e:	mov    DWORD PTR [rip+0x6628],eax        # 0x14000f43c
   140008e14:	add    rsp,0x38
   140008e18:	ret    
   140008e19:	int3   
   140008e1a:	int3   
   140008e1b:	int3   
   140008e1c:	int3   
   140008e1d:	int3   
   140008e1e:	int3   
   140008e1f:	int3   
   140008e20:	sub    rsp,0x28
   140008e24:	call   0x140009724
   140008e29:	add    rsp,0x28
   140008e2d:	jmp    0x140008e38
   140008e32:	int3   
   140008e33:	int3   
   140008e34:	int3   
   140008e35:	int3   
   140008e36:	int3   
   140008e37:	int3   
   140008e38:	mov    rax,rsp
   140008e3b:	mov    QWORD PTR [rax+0x8],rbx
   140008e3f:	mov    QWORD PTR [rax+0x10],rsi
   140008e43:	mov    QWORD PTR [rax+0x18],rdi
   140008e47:	push   r15
   140008e49:	sub    rsp,0xb0
   140008e50:	and    DWORD PTR [rsp+0x20],0x0
   140008e55:	lea    rcx,[rax-0x78]
   140008e59:	call   QWORD PTR [rip+0x1269]        # 0x14000a0c8
   140008e5f:	nop
   140008e60:	mov    rax,QWORD PTR gs:0x30
   140008e69:	mov    rbx,QWORD PTR [rax+0x8]
   140008e6d:	xor    esi,esi
   140008e6f:	xor    eax,eax
   140008e71:	lock cmpxchg QWORD PTR [rip+0x6e56],rbx        # 0x14000fcd0
   140008e7a:	je     0x140008e95
   140008e7c:	cmp    rax,rbx
   140008e7f:	jne    0x140008e88
   140008e81:	mov    esi,0x1
   140008e86:	jmp    0x140008e95
   140008e88:	mov    ecx,0x3e8
   140008e8d:	call   QWORD PTR [rip+0x123d]        # 0x14000a0d0
   140008e93:	jmp    0x140008e6f
   140008e95:	mov    eax,DWORD PTR [rip+0x6e3d]        # 0x14000fcd8
   140008e9b:	cmp    eax,0x1
   140008e9e:	jne    0x140008eaa
   140008ea0:	lea    ecx,[rax+0x1e]
   140008ea3:	call   0x140009634
   140008ea8:	jmp    0x140008f1b
   140008eaa:	mov    eax,DWORD PTR [rip+0x6e28]        # 0x14000fcd8
   140008eb0:	test   eax,eax
   140008eb2:	jne    0x140008f11
   140008eb4:	mov    DWORD PTR [rip+0x6e1a],0x1        # 0x14000fcd8
   140008ebe:	lea    r15,[rip+0x16a3]        # 0x14000a568
   140008ec5:	lea    rbx,[rip+0x1684]        # 0x14000a550
   140008ecc:	mov    QWORD PTR [rsp+0x38],rbx
   140008ed1:	mov    DWORD PTR [rsp+0x30],eax
   140008ed5:	cmp    rbx,r15
   140008ed8:	jae    0x140008f03
   140008eda:	test   eax,eax
   140008edc:	jne    0x140008f07
   140008ede:	mov    rdi,QWORD PTR [rbx]
   140008ee1:	test   rdi,rdi
   140008ee4:	je     0x140008ef8
   140008ee6:	mov    rcx,rdi
   140008ee9:	mov    rax,QWORD PTR [rip+0x1608]        # 0x14000a4f8
   140008ef0:	call   rax
   140008ef2:	call   rdi
   140008ef4:	mov    DWORD PTR [rsp+0x30],eax
   140008ef8:	add    rbx,0x8
   140008efc:	mov    QWORD PTR [rsp+0x38],rbx
   140008f01:	jmp    0x140008ed5
   140008f03:	test   eax,eax
   140008f05:	je     0x140008f1b
   140008f07:	mov    eax,0xff
   140008f0c:	jmp    0x140009074
   140008f11:	mov    DWORD PTR [rip+0x6515],0x1        # 0x14000f430
   140008f1b:	mov    eax,DWORD PTR [rip+0x6db7]        # 0x14000fcd8
   140008f21:	cmp    eax,0x1
   140008f24:	jne    0x140008f43
   140008f26:	lea    rdx,[rip+0x161b]        # 0x14000a548
   140008f2d:	lea    rcx,[rip+0x15d4]        # 0x14000a508
   140008f34:	call   0x1400097fa
   140008f39:	mov    DWORD PTR [rip+0x6d95],0x2        # 0x14000fcd8
   140008f43:	test   esi,esi
   140008f45:	jne    0x140008f50
   140008f47:	xor    eax,eax
   140008f49:	xchg   QWORD PTR [rip+0x6d80],rax        # 0x14000fcd0
   140008f50:	cmp    QWORD PTR [rip+0x6d98],0x0        # 0x14000fcf0
   140008f58:	je     0x140008f88
   140008f5a:	lea    rcx,[rip+0x6d8f]        # 0x14000fcf0
   140008f61:	call   0x140009690
   140008f66:	test   eax,eax
   140008f68:	je     0x140008f88
   140008f6a:	mov    rbx,QWORD PTR [rip+0x6d7f]        # 0x14000fcf0
   140008f71:	mov    rcx,rbx
   140008f74:	mov    rax,QWORD PTR [rip+0x157d]        # 0x14000a4f8
   140008f7b:	call   rax
   140008f7d:	xor    r8d,r8d
   140008f80:	lea    edx,[r8+0x2]
   140008f84:	xor    ecx,ecx
   140008f86:	call   rbx
   140008f88:	mov    rax,QWORD PTR [rip+0x1441]        # 0x14000a3d0
   140008f8f:	mov    rbx,QWORD PTR [rax]
   140008f92:	mov    QWORD PTR [rsp+0x28],rbx
   140008f97:	mov    edi,DWORD PTR [rsp+0x20]
   140008f9b:	cmp    BYTE PTR [rbx],0x20
   140008f9e:	ja     0x140009013
   140008fa0:	cmp    BYTE PTR [rbx],0x0
   140008fa3:	je     0x140008fa9
   140008fa5:	test   edi,edi
   140008fa7:	jne    0x140009013
   140008fa9:	mov    al,BYTE PTR [rbx]
   140008fab:	dec    al
   140008fad:	cmp    al,0x1f
   140008faf:	ja     0x140008fbb
   140008fb1:	inc    rbx
   140008fb4:	mov    QWORD PTR [rsp+0x28],rbx
   140008fb9:	jmp    0x140008fa9
   140008fbb:	mov    ecx,DWORD PTR [rsp+0x7c]
   140008fbf:	movzx  eax,WORD PTR [rsp+0x80]
   140008fc7:	mov    r9d,0xa
   140008fcd:	and    cl,0x1
   140008fd0:	cmovne r9d,eax
   140008fd4:	mov    r8,rbx
   140008fd7:	xor    edx,edx
   140008fd9:	lea    rcx,[rip+0xffffffffffff7020]        # 0x140000000
   140008fe0:	call   0x140007d3c
   140008fe5:	mov    DWORD PTR [rip+0x6441],eax        # 0x14000f42c
   140008feb:	cmp    DWORD PTR [rip+0x645e],0x0        # 0x14000f450
   140008ff2:	jne    0x140008ffc
   140008ff4:	mov    ecx,eax
   140008ff6:	call   QWORD PTR [rip+0x140c]        # 0x14000a408
   140008ffc:	cmp    DWORD PTR [rip+0x642d],0x0        # 0x14000f430
   140009003:	jne    0x140009011
   140009005:	call   QWORD PTR [rip+0x13ed]        # 0x14000a3f8
   14000900b:	mov    eax,DWORD PTR [rip+0x641b]        # 0x14000f42c
   140009011:	jmp    0x140009074
   140009013:	cmp    BYTE PTR [rbx],0x22
   140009016:	jne    0x140009025
   140009018:	xor    eax,eax
   14000901a:	test   edi,edi
   14000901c:	sete   al
   14000901f:	mov    edi,eax
   140009021:	mov    DWORD PTR [rsp+0x20],eax
   140009025:	movzx  ecx,BYTE PTR [rbx]
   140009028:	call   QWORD PTR [rip+0x13c2]        # 0x14000a3f0
   14000902e:	test   eax,eax
   140009030:	je     0x14000903a
   140009032:	inc    rbx
   140009035:	mov    QWORD PTR [rsp+0x28],rbx
   14000903a:	inc    rbx
   14000903d:	mov    QWORD PTR [rsp+0x28],rbx
   140009042:	jmp    0x140008f9b
   140009047:	mov    DWORD PTR [rip+0x63df],eax        # 0x14000f42c
   14000904d:	cmp    DWORD PTR [rip+0x63fc],0x0        # 0x14000f450
   140009054:	jne    0x14000905f
   140009056:	mov    ecx,eax
   140009058:	call   QWORD PTR [rip+0x13a2]        # 0x14000a400
   14000905e:	int3   
   14000905f:	cmp    DWORD PTR [rip+0x63ca],0x0        # 0x14000f430
   140009066:	jne    0x140009074
   140009068:	call   QWORD PTR [rip+0x138a]        # 0x14000a3f8
   14000906e:	mov    eax,DWORD PTR [rip+0x63b8]        # 0x14000f42c
   140009074:	lea    r11,[rsp+0xb0]
   14000907c:	mov    rbx,QWORD PTR [r11+0x10]
   140009080:	mov    rsi,QWORD PTR [r11+0x18]
   140009084:	mov    rdi,QWORD PTR [r11+0x20]
   140009088:	mov    rsp,r11
   14000908b:	pop    r15
   14000908d:	ret    
   14000908e:	int3   
   14000908f:	int3   
   140009090:	int3   
   140009091:	int3   
   140009092:	int3   
   140009093:	int3   
   140009094:	int3   
   140009095:	int3   
   140009096:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400090a0:	cmp    rcx,QWORD PTR [rip+0x5f61]        # 0x14000f008
   1400090a7:	jne    0x1400090b9
   1400090a9:	rol    rcx,0x10
   1400090ad:	test   cx,0xffff
   1400090b2:	jne    0x1400090b5
   1400090b4:	ret    
   1400090b5:	ror    rcx,0x10
   1400090b9:	jmp    0x1400091f0
   1400090be:	int3   
   1400090bf:	int3   
   1400090c0:	int3   
   1400090c1:	int3   
   1400090c2:	int3   
   1400090c3:	int3   
   1400090c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400090c9:	push   rdi
   1400090ca:	sub    rsp,0x20
   1400090ce:	mov    rdi,rcx
   1400090d1:	mov    rax,QWORD PTR [rip+0x6c10]        # 0x14000fce8
   1400090d8:	mov    QWORD PTR [rsp+0x38],rax
   1400090dd:	cmp    rax,0xffffffffffffffff
   1400090e1:	jne    0x1400090fa
   1400090e3:	mov    rbx,QWORD PTR [rip+0x12ae]        # 0x14000a398
   1400090ea:	mov    rcx,rbx
   1400090ed:	call   QWORD PTR [rip+0x1405]        # 0x14000a4f8
   1400090f3:	mov    rcx,rdi
   1400090f6:	call   rbx
   1400090f8:	jmp    0x140009157
   1400090fa:	mov    ecx,0x8
   1400090ff:	call   0x140009812
   140009104:	nop
   140009105:	mov    rax,QWORD PTR [rip+0x6bdc]        # 0x14000fce8
   14000910c:	mov    QWORD PTR [rsp+0x38],rax
   140009111:	mov    rax,QWORD PTR [rip+0x6bc8]        # 0x14000fce0
   140009118:	mov    QWORD PTR [rsp+0x40],rax
   14000911d:	lea    r8,[rsp+0x40]
   140009122:	lea    rdx,[rsp+0x38]
   140009127:	mov    rcx,rdi
   14000912a:	call   0x14000982a
   14000912f:	mov    rbx,rax
   140009132:	mov    rdx,QWORD PTR [rsp+0x38]
   140009137:	mov    QWORD PTR [rip+0x6baa],rdx        # 0x14000fce8
   14000913e:	mov    rdx,QWORD PTR [rsp+0x40]
   140009143:	mov    QWORD PTR [rip+0x6b96],rdx        # 0x14000fce0
   14000914a:	mov    ecx,0x8
   14000914f:	call   0x14000981e
   140009154:	mov    rax,rbx
   140009157:	mov    rbx,QWORD PTR [rsp+0x30]
   14000915c:	add    rsp,0x20
   140009160:	pop    rdi
   140009161:	ret    
   140009162:	int3   
   140009163:	int3   
   140009164:	int3   
   140009165:	int3   
   140009166:	int3   
   140009167:	int3   
   140009168:	sub    rsp,0x28
   14000916c:	call   0x1400090c4
   140009171:	neg    rax
   140009174:	sbb    eax,eax
   140009176:	neg    eax
   140009178:	dec    eax
   14000917a:	add    rsp,0x28
   14000917e:	ret    
   14000917f:	int3   
   140009180:	int3   
   140009181:	int3   
   140009182:	int3   
   140009183:	int3   
   140009184:	int3   
   140009185:	int3   
   140009186:	int3   
   140009187:	int3   
   140009188:	int3   
   140009189:	int3   
   14000918a:	int3   
   14000918b:	int3   
   14000918c:	int3   
   14000918d:	int3   
   14000918e:	int3   
   14000918f:	int3   
   140009190:	jmp    QWORD PTR [rip+0x11fa]        # 0x14000a390
   140009196:	int3   
   140009197:	int3   
   140009198:	int3   
   140009199:	int3   
   14000919a:	int3   
   14000919b:	int3   
   14000919c:	jmp    QWORD PTR [rip+0x11e6]        # 0x14000a388
   1400091a2:	int3   
   1400091a3:	int3   
   1400091a4:	int3   
   1400091a5:	int3   
   1400091a6:	int3   
   1400091a7:	int3   
   1400091a8:	rex push rbx
   1400091aa:	sub    rsp,0x20
   1400091ae:	mov    rbx,rcx
   1400091b1:	xor    ecx,ecx
   1400091b3:	call   QWORD PTR [rip+0xff7]        # 0x14000a1b0
   1400091b9:	mov    rcx,rbx
   1400091bc:	call   QWORD PTR [rip+0xee6]        # 0x14000a0a8
   1400091c2:	call   QWORD PTR [rip+0xed8]        # 0x14000a0a0
   1400091c8:	mov    rcx,rax
   1400091cb:	mov    edx,0xc0000409
   1400091d0:	add    rsp,0x20
   1400091d4:	pop    rbx
   1400091d5:	rex.W jmp QWORD PTR [rip+0xebc]        # 0x14000a098
   1400091dc:	int3   
   1400091dd:	int3   
   1400091de:	int3   
   1400091df:	int3   
   1400091e0:	int3   
   1400091e1:	int3   
   1400091e2:	int3   
   1400091e3:	int3   
   1400091e4:	int3   
   1400091e5:	int3   
   1400091e6:	int3   
   1400091e7:	int3   
   1400091e8:	int3   
   1400091e9:	int3   
   1400091ea:	int3   
   1400091eb:	int3   
   1400091ec:	int3   
   1400091ed:	int3   
   1400091ee:	int3   
   1400091ef:	int3   
   1400091f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400091f5:	sub    rsp,0x88
   1400091fc:	lea    rcx,[rip+0x62fd]        # 0x14000f500
   140009203:	call   QWORD PTR [rip+0xeb7]        # 0x14000a0c0
   140009209:	mov    rax,QWORD PTR [rip+0x63e8]        # 0x14000f5f8
   140009210:	mov    QWORD PTR [rsp+0x48],rax
   140009215:	xor    r8d,r8d
   140009218:	lea    rdx,[rsp+0x50]
   14000921d:	mov    rcx,QWORD PTR [rsp+0x48]
   140009222:	call   QWORD PTR [rip+0xe90]        # 0x14000a0b8
   140009228:	mov    QWORD PTR [rsp+0x40],rax
   14000922d:	cmp    QWORD PTR [rsp+0x40],0x0
   140009233:	je     0x140009277
   140009235:	mov    QWORD PTR [rsp+0x38],0x0
   14000923e:	lea    rax,[rsp+0x58]
   140009243:	mov    QWORD PTR [rsp+0x30],rax
   140009248:	lea    rax,[rsp+0x60]
   14000924d:	mov    QWORD PTR [rsp+0x28],rax
   140009252:	lea    rax,[rip+0x62a7]        # 0x14000f500
   140009259:	mov    QWORD PTR [rsp+0x20],rax
   14000925e:	mov    r9,QWORD PTR [rsp+0x40]
   140009263:	mov    r8,QWORD PTR [rsp+0x48]
   140009268:	mov    rdx,QWORD PTR [rsp+0x50]
   14000926d:	xor    ecx,ecx
   14000926f:	call   QWORD PTR [rip+0xe3b]        # 0x14000a0b0
   140009275:	jmp    0x14000929a
   140009277:	mov    rax,QWORD PTR [rip+0x631a]        # 0x14000f598
   14000927e:	mov    rax,QWORD PTR [rax]
   140009281:	mov    QWORD PTR [rip+0x6370],rax        # 0x14000f5f8
   140009288:	mov    rax,QWORD PTR [rip+0x6309]        # 0x14000f598
   14000928f:	add    rax,0x8
   140009293:	mov    QWORD PTR [rip+0x62fe],rax        # 0x14000f598
   14000929a:	mov    rax,QWORD PTR [rip+0x6357]        # 0x14000f5f8
   1400092a1:	mov    QWORD PTR [rip+0x61c8],rax        # 0x14000f470
   1400092a8:	mov    rax,QWORD PTR [rsp+0x90]
   1400092b0:	mov    QWORD PTR [rip+0x62c9],rax        # 0x14000f580
   1400092b7:	mov    DWORD PTR [rip+0x619f],0xc0000409        # 0x14000f460
   1400092c1:	mov    DWORD PTR [rip+0x6199],0x1        # 0x14000f464
   1400092cb:	mov    DWORD PTR [rip+0x61a3],0x3        # 0x14000f478
   1400092d5:	mov    eax,0x8
   1400092da:	imul   rax,rax,0x0
   1400092de:	lea    rcx,[rip+0x619b]        # 0x14000f480
   1400092e5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400092ed:	mov    eax,0x8
   1400092f2:	imul   rax,rax,0x1
   1400092f6:	lea    rcx,[rip+0x6183]        # 0x14000f480
   1400092fd:	mov    rdx,QWORD PTR [rip+0x5d04]        # 0x14000f008
   140009304:	mov    QWORD PTR [rcx+rax*1],rdx
   140009308:	mov    eax,0x8
   14000930d:	imul   rax,rax,0x2
   140009311:	lea    rcx,[rip+0x6168]        # 0x14000f480
   140009318:	mov    rdx,QWORD PTR [rip+0x5cf1]        # 0x14000f010
   14000931f:	mov    QWORD PTR [rcx+rax*1],rdx
   140009323:	mov    eax,0x8
   140009328:	imul   rax,rax,0x0
   14000932c:	mov    rcx,QWORD PTR [rip+0x5cd5]        # 0x14000f008
   140009333:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140009338:	mov    eax,0x8
   14000933d:	imul   rax,rax,0x1
   140009341:	mov    rcx,QWORD PTR [rip+0x5cc8]        # 0x14000f010
   140009348:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000934d:	lea    rcx,[rip+0x260c]        # 0x14000b960
   140009354:	call   0x1400091a8
   140009359:	add    rsp,0x88
   140009360:	ret    
   140009361:	int3   
   140009362:	int3   
   140009363:	int3   
   140009364:	int3   
   140009365:	int3   
   140009366:	int3   
   140009367:	int3   
   140009368:	sub    rsp,0x78
   14000936c:	lea    rcx,[rip+0x618d]        # 0x14000f500
   140009373:	call   QWORD PTR [rip+0xd47]        # 0x14000a0c0
   140009379:	mov    rax,QWORD PTR [rip+0x6278]        # 0x14000f5f8
   140009380:	mov    QWORD PTR [rsp+0x48],rax
   140009385:	xor    r8d,r8d
   140009388:	lea    rdx,[rsp+0x50]
   14000938d:	mov    rcx,QWORD PTR [rsp+0x48]
   140009392:	call   QWORD PTR [rip+0xd20]        # 0x14000a0b8
   140009398:	mov    QWORD PTR [rsp+0x40],rax
   14000939d:	cmp    QWORD PTR [rsp+0x40],0x0
   1400093a3:	je     0x1400093e7
   1400093a5:	mov    QWORD PTR [rsp+0x38],0x0
   1400093ae:	lea    rax,[rsp+0x58]
   1400093b3:	mov    QWORD PTR [rsp+0x30],rax
   1400093b8:	lea    rax,[rsp+0x60]
   1400093bd:	mov    QWORD PTR [rsp+0x28],rax
   1400093c2:	lea    rax,[rip+0x6137]        # 0x14000f500
   1400093c9:	mov    QWORD PTR [rsp+0x20],rax
   1400093ce:	mov    r9,QWORD PTR [rsp+0x40]
   1400093d3:	mov    r8,QWORD PTR [rsp+0x48]
   1400093d8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400093dd:	xor    ecx,ecx
   1400093df:	call   QWORD PTR [rip+0xccb]        # 0x14000a0b0
   1400093e5:	jmp    0x14000940a
   1400093e7:	mov    rax,QWORD PTR [rip+0x61aa]        # 0x14000f598
   1400093ee:	mov    rax,QWORD PTR [rax]
   1400093f1:	mov    QWORD PTR [rip+0x6200],rax        # 0x14000f5f8
   1400093f8:	mov    rax,QWORD PTR [rip+0x6199]        # 0x14000f598
   1400093ff:	add    rax,0x8
   140009403:	mov    QWORD PTR [rip+0x618e],rax        # 0x14000f598
   14000940a:	mov    rax,QWORD PTR [rip+0x61e7]        # 0x14000f5f8
   140009411:	mov    QWORD PTR [rip+0x6058],rax        # 0x14000f470
   140009418:	mov    DWORD PTR [rip+0x603e],0xc0000409        # 0x14000f460
   140009422:	mov    DWORD PTR [rip+0x6038],0x1        # 0x14000f464
   14000942c:	mov    DWORD PTR [rip+0x6042],0x1        # 0x14000f478
   140009436:	mov    eax,0x8
   14000943b:	imul   rax,rax,0x0
   14000943f:	lea    rcx,[rip+0x603a]        # 0x14000f480
   140009446:	mov    QWORD PTR [rcx+rax*1],0x8
   14000944e:	lea    rcx,[rip+0x250b]        # 0x14000b960
   140009455:	call   0x1400091a8
   14000945a:	add    rsp,0x78
   14000945e:	ret    
   14000945f:	int3   
   140009460:	int3   
   140009461:	int3   
   140009462:	int3   
   140009463:	int3   
   140009464:	int3   
   140009465:	int3   
   140009466:	jmp    QWORD PTR [rip+0x1004]        # 0x14000a470
   14000946c:	int3   
   14000946d:	int3   
   14000946e:	int3   
   14000946f:	int3   
   140009470:	int3   
   140009471:	int3   
   140009472:	jmp    QWORD PTR [rip+0xff0]        # 0x14000a468
   140009478:	int3   
   140009479:	int3   
   14000947a:	int3   
   14000947b:	int3   
   14000947c:	int3   
   14000947d:	int3   
   14000947e:	jmp    QWORD PTR [rip+0xfdc]        # 0x14000a460
   140009484:	int3   
   140009485:	int3   
   140009486:	int3   
   140009487:	int3   
   140009488:	int3   
   140009489:	int3   
   14000948a:	jmp    QWORD PTR [rip+0xfc8]        # 0x14000a458
   140009490:	int3   
   140009491:	int3   
   140009492:	int3   
   140009493:	int3   
   140009494:	int3   
   140009495:	int3   
   140009496:	jmp    QWORD PTR [rip+0xfb4]        # 0x14000a450
   14000949c:	int3   
   14000949d:	int3   
   14000949e:	int3   
   14000949f:	int3   
   1400094a0:	int3   
   1400094a1:	int3   
   1400094a2:	jmp    QWORD PTR [rip+0xfa0]        # 0x14000a448
   1400094a8:	int3   
   1400094a9:	int3   
   1400094aa:	int3   
   1400094ab:	int3   
   1400094ac:	int3   
   1400094ad:	int3   
   1400094ae:	jmp    QWORD PTR [rip+0xf8c]        # 0x14000a440
   1400094b4:	int3   
   1400094b5:	int3   
   1400094b6:	int3   
   1400094b7:	int3   
   1400094b8:	int3   
   1400094b9:	int3   
   1400094ba:	int3   
   1400094bb:	int3   
   1400094bc:	int3   
   1400094bd:	int3   
   1400094be:	int3   
   1400094bf:	int3   
   1400094c0:	jmp    QWORD PTR [rip+0xf72]        # 0x14000a438
   1400094c6:	int3   
   1400094c7:	int3   
   1400094c8:	int3   
   1400094c9:	int3   
   1400094ca:	int3   
   1400094cb:	int3   
   1400094cc:	int3   
   1400094cd:	int3   
   1400094ce:	int3   
   1400094cf:	int3   
   1400094d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400094d5:	push   rdi
   1400094d6:	sub    rsp,0x20
   1400094da:	mov    ebx,edx
   1400094dc:	mov    rdi,rcx
   1400094df:	call   QWORD PTR [rip+0xe73]        # 0x14000a358
   1400094e5:	test   bl,0x1
   1400094e8:	je     0x1400094f2
   1400094ea:	mov    rcx,rdi
   1400094ed:	call   0x14000919c
   1400094f2:	mov    rax,rdi
   1400094f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094fa:	add    rsp,0x20
   1400094fe:	pop    rdi
   1400094ff:	ret    
   140009500:	int3   
   140009501:	int3   
   140009502:	int3   
   140009503:	int3   
   140009504:	int3   
   140009505:	int3   
   140009506:	jmp    QWORD PTR [rip+0xf24]        # 0x14000a430
   14000950c:	int3   
   14000950d:	int3   
   14000950e:	int3   
   14000950f:	int3   
   140009510:	int3   
   140009511:	int3   
   140009512:	int3   
   140009513:	int3   
   140009514:	int3   
   140009515:	int3   
   140009516:	int3   
   140009517:	int3   
   140009518:	int3   
   140009519:	int3   
   14000951a:	int3   
   14000951b:	int3   
   14000951c:	int3   
   14000951d:	int3   
   14000951e:	int3   
   14000951f:	int3   
   140009520:	sub    rsp,0x28
   140009524:	mov    rax,QWORD PTR [rcx]
   140009527:	cmp    DWORD PTR [rax],0xe06d7363
   14000952d:	jne    0x140009552
   14000952f:	cmp    DWORD PTR [rax+0x18],0x4
   140009533:	jne    0x140009552
   140009535:	mov    ecx,DWORD PTR [rax+0x20]
   140009538:	lea    eax,[rcx-0x19930520]
   14000953e:	cmp    eax,0x2
   140009541:	jbe    0x14000954b
   140009543:	cmp    ecx,0x1994000
   140009549:	jne    0x140009552
   14000954b:	call   QWORD PTR [rip+0xdd7]        # 0x14000a328
   140009551:	int3   
   140009552:	xor    eax,eax
   140009554:	add    rsp,0x28
   140009558:	ret    
   140009559:	int3   
   14000955a:	int3   
   14000955b:	int3   
   14000955c:	int3   
   14000955d:	int3   
   14000955e:	int3   
   14000955f:	int3   
   140009560:	sub    rsp,0x28
   140009564:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140009520
   14000956b:	call   QWORD PTR [rip+0xc3f]        # 0x14000a1b0
   140009571:	xor    eax,eax
   140009573:	add    rsp,0x28
   140009577:	ret    
   140009578:	int3   
   140009579:	int3   
   14000957a:	int3   
   14000957b:	int3   
   14000957c:	int3   
   14000957d:	int3   
   14000957e:	jmp    QWORD PTR [rip+0xea4]        # 0x14000a428
   140009584:	int3   
   140009585:	int3   
   140009586:	int3   
   140009587:	int3   
   140009588:	int3   
   140009589:	int3   
   14000958a:	int3   
   14000958b:	int3   
   14000958c:	sub    rsp,0x18
   140009590:	xor    edx,edx
   140009592:	lea    rax,[rcx-0x1]
   140009596:	cmp    rax,0xfffffffffffffffd
   14000959a:	ja     0x1400095d8
   14000959c:	mov    eax,0x5a4d
   1400095a1:	cmp    WORD PTR [rcx],ax
   1400095a4:	jne    0x1400095d0
   1400095a6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400095a9:	jl     0x1400095d0
   1400095ab:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400095b2:	jae    0x1400095d0
   1400095b4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400095b8:	add    rax,rcx
   1400095bb:	mov    QWORD PTR [rsp],rax
   1400095bf:	cmp    DWORD PTR [rax],0x4550
   1400095c5:	cmovne rax,rdx
   1400095c9:	mov    rdx,rax
   1400095cc:	mov    QWORD PTR [rsp],rax
   1400095d0:	jmp    0x1400095d8
   1400095d2:	xor    edx,edx
   1400095d4:	mov    QWORD PTR [rsp],rdx
   1400095d8:	mov    rax,rdx
   1400095db:	add    rsp,0x18
   1400095df:	ret    
   1400095e0:	int3   
   1400095e1:	int3   
   1400095e2:	int3   
   1400095e3:	int3   
   1400095e4:	int3   
   1400095e5:	int3   
   1400095e6:	int3   
   1400095e7:	int3   
   1400095e8:	rex push rbx
   1400095ea:	sub    rsp,0x20
   1400095ee:	mov    ebx,ecx
   1400095f0:	xor    ecx,ecx
   1400095f2:	call   QWORD PTR [rip+0xa98]        # 0x14000a090
   1400095f8:	test   rax,rax
   1400095fb:	je     0x140009625
   1400095fd:	mov    rcx,rax
   140009600:	call   0x14000958c
   140009605:	test   rax,rax
   140009608:	je     0x140009625
   14000960a:	mov    ecx,0x2
   14000960f:	cmp    WORD PTR [rax+0x5c],cx
   140009613:	jne    0x140009619
   140009615:	mov    eax,ecx
   140009617:	jmp    0x140009627
   140009619:	cmp    WORD PTR [rax+0x5c],0x3
   14000961e:	mov    eax,0x1
   140009623:	je     0x140009627
   140009625:	mov    eax,ebx
   140009627:	add    rsp,0x20
   14000962b:	pop    rbx
   14000962c:	ret    
   14000962d:	int3   
   14000962e:	int3   
   14000962f:	int3   
   140009630:	int3   
   140009631:	int3   
   140009632:	int3   
   140009633:	int3   
   140009634:	jmp    QWORD PTR [rip+0xde6]        # 0x14000a420
   14000963a:	int3   
   14000963b:	int3   
   14000963c:	int3   
   14000963d:	int3   
   14000963e:	int3   
   14000963f:	int3   
   140009640:	movsxd r8,DWORD PTR [rcx+0x3c]
   140009644:	xor    r9d,r9d
   140009647:	add    r8,rcx
   14000964a:	mov    r10,rdx
   14000964d:	movzx  eax,WORD PTR [r8+0x14]
   140009652:	movzx  r11d,WORD PTR [r8+0x6]
   140009657:	add    rax,0x18
   14000965b:	add    rax,r8
   14000965e:	test   r11d,r11d
   140009661:	je     0x140009681
   140009663:	mov    edx,DWORD PTR [rax+0xc]
   140009666:	cmp    r10,rdx
   140009669:	jb     0x140009675
   14000966b:	mov    ecx,DWORD PTR [rax+0x8]
   14000966e:	add    ecx,edx
   140009670:	cmp    r10,rcx
   140009673:	jb     0x140009683
   140009675:	inc    r9d
   140009678:	add    rax,0x28
   14000967c:	cmp    r9d,r11d
   14000967f:	jb     0x140009663
   140009681:	xor    eax,eax
   140009683:	ret    
   140009684:	int3   
   140009685:	int3   
   140009686:	int3   
   140009687:	int3   
   140009688:	int3   
   140009689:	int3   
   14000968a:	int3   
   14000968b:	int3   
   14000968c:	int3   
   14000968d:	int3   
   14000968e:	int3   
   14000968f:	int3   
   140009690:	mov    QWORD PTR [rsp+0x8],rbx
   140009695:	push   rdi
   140009696:	sub    rsp,0x20
   14000969a:	mov    rbx,rcx
   14000969d:	lea    rdi,[rip+0xffffffffffff695c]        # 0x140000000
   1400096a4:	mov    rcx,rdi
   1400096a7:	call   0x1400096f0
   1400096ac:	test   eax,eax
   1400096ae:	je     0x1400096d2
   1400096b0:	sub    rbx,rdi
   1400096b3:	mov    rdx,rbx
   1400096b6:	mov    rcx,rdi
   1400096b9:	call   0x140009640
   1400096be:	test   rax,rax
   1400096c1:	je     0x1400096d2
   1400096c3:	mov    eax,DWORD PTR [rax+0x24]
   1400096c6:	shr    eax,0x1f
   1400096c9:	not    eax
   1400096cb:	and    eax,0x1
   1400096ce:	jmp    0x1400096d2
   1400096d0:	xor    eax,eax
   1400096d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096d7:	add    rsp,0x20
   1400096db:	pop    rdi
   1400096dc:	ret    
   1400096dd:	int3   
   1400096de:	int3   
   1400096df:	int3   
   1400096e0:	int3   
   1400096e1:	int3   
   1400096e2:	int3   
   1400096e3:	int3   
   1400096e4:	int3   
   1400096e5:	int3   
   1400096e6:	int3   
   1400096e7:	int3   
   1400096e8:	int3   
   1400096e9:	int3   
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	mov    rax,rcx
   1400096f3:	mov    ecx,0x5a4d
   1400096f8:	cmp    WORD PTR [rax],cx
   1400096fb:	je     0x140009700
   1400096fd:	xor    eax,eax
   1400096ff:	ret    
   140009700:	movsxd rcx,DWORD PTR [rax+0x3c]
   140009704:	add    rcx,rax
   140009707:	xor    eax,eax
   140009709:	cmp    DWORD PTR [rcx],0x4550
   14000970f:	jne    0x14000971d
   140009711:	mov    edx,0x20b
   140009716:	cmp    WORD PTR [rcx+0x18],dx
   14000971a:	sete   al
   14000971d:	ret    
   14000971e:	int3   
   14000971f:	int3   
   140009720:	int3   
   140009721:	int3   
   140009722:	int3   
   140009723:	int3   
   140009724:	mov    QWORD PTR [rsp+0x20],rbx
   140009729:	push   rbp
   14000972a:	mov    rbp,rsp
   14000972d:	sub    rsp,0x20
   140009731:	and    QWORD PTR [rbp+0x18],0x0
   140009736:	movabs rbx,0x2b992ddfa232
   140009740:	mov    rax,QWORD PTR [rip+0x58c1]        # 0x14000f008
   140009747:	cmp    rax,rbx
   14000974a:	jne    0x1400097df
   140009750:	lea    rcx,[rbp+0x18]
   140009754:	call   QWORD PTR [rip+0xa66]        # 0x14000a1c0
   14000975a:	mov    rax,QWORD PTR [rbp+0x18]
   14000975e:	mov    QWORD PTR [rbp+0x10],rax
   140009762:	call   QWORD PTR [rip+0xa70]        # 0x14000a1d8
   140009768:	mov    eax,eax
   14000976a:	xor    QWORD PTR [rbp+0x10],rax
   14000976e:	call   QWORD PTR [rip+0xa44]        # 0x14000a1b8
   140009774:	mov    eax,eax
   140009776:	xor    QWORD PTR [rbp+0x10],rax
   14000977a:	call   QWORD PTR [rip+0xa48]        # 0x14000a1c8
   140009780:	mov    eax,eax
   140009782:	shl    rax,0x18
   140009786:	xor    QWORD PTR [rbp+0x10],rax
   14000978a:	call   QWORD PTR [rip+0xa38]        # 0x14000a1c8
   140009790:	mov    eax,eax
   140009792:	lea    rcx,[rbp+0x10]
   140009796:	xor    rax,QWORD PTR [rbp+0x10]
   14000979a:	xor    rax,rcx
   14000979d:	lea    rcx,[rbp+0x20]
   1400097a1:	mov    QWORD PTR [rbp+0x10],rax
   1400097a5:	call   QWORD PTR [rip+0x8dd]        # 0x14000a088
   1400097ab:	mov    eax,DWORD PTR [rbp+0x20]
   1400097ae:	movabs rcx,0xffffffffffff
   1400097b8:	shl    rax,0x20
   1400097bc:	xor    rax,QWORD PTR [rbp+0x20]
   1400097c0:	xor    rax,QWORD PTR [rbp+0x10]
   1400097c4:	and    rax,rcx
   1400097c7:	movabs rcx,0x2b992ddfa233
   1400097d1:	cmp    rax,rbx
   1400097d4:	cmove  rax,rcx
   1400097d8:	mov    QWORD PTR [rip+0x5829],rax        # 0x14000f008
   1400097df:	mov    rbx,QWORD PTR [rsp+0x48]
   1400097e4:	not    rax
   1400097e7:	mov    QWORD PTR [rip+0x5822],rax        # 0x14000f010
   1400097ee:	add    rsp,0x20
   1400097f2:	pop    rbp
   1400097f3:	ret    
   1400097f4:	int3   
   1400097f5:	int3   
   1400097f6:	int3   
   1400097f7:	int3   
   1400097f8:	int3   
   1400097f9:	int3   
   1400097fa:	jmp    QWORD PTR [rip+0xbe0]        # 0x14000a3e0
   140009800:	int3   
   140009801:	int3   
   140009802:	int3   
   140009803:	int3   
   140009804:	int3   
   140009805:	int3   
   140009806:	jmp    QWORD PTR [rip+0xbcc]        # 0x14000a3d8
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	int3   
   140009811:	int3   
   140009812:	jmp    QWORD PTR [rip+0xb98]        # 0x14000a3b0
   140009818:	int3   
   140009819:	int3   
   14000981a:	int3   
   14000981b:	int3   
   14000981c:	int3   
   14000981d:	int3   
   14000981e:	jmp    QWORD PTR [rip+0xb84]        # 0x14000a3a8
   140009824:	int3   
   140009825:	int3   
   140009826:	int3   
   140009827:	int3   
   140009828:	int3   
   140009829:	int3   
   14000982a:	jmp    QWORD PTR [rip+0xb70]        # 0x14000a3a0
   140009830:	int3   
   140009831:	int3   
   140009832:	int3   
   140009833:	int3   
   140009834:	int3   
   140009835:	int3   
   140009836:	int3   
   140009837:	int3   
   140009838:	sub    rsp,0x28
   14000983c:	mov    r8,QWORD PTR [r9+0x38]
   140009840:	mov    rcx,rdx
   140009843:	mov    rdx,r9
   140009846:	call   0x14000985c
   14000984b:	mov    eax,0x1
   140009850:	add    rsp,0x28
   140009854:	ret    
   140009855:	int3   
   140009856:	int3   
   140009857:	int3   
   140009858:	int3   
   140009859:	int3   
   14000985a:	int3   
   14000985b:	int3   
   14000985c:	rex push rbx
   14000985e:	sub    rsp,0x20
   140009862:	mov    r11d,DWORD PTR [r8]
   140009865:	mov    rbx,rdx
   140009868:	and    r11d,0xfffffff8
   14000986c:	mov    r9,rcx
   14000986f:	test   BYTE PTR [r8],0x4
   140009873:	mov    r10,rcx
   140009876:	je     0x14000988b
   140009878:	mov    eax,DWORD PTR [r8+0x8]
   14000987c:	movsxd r10,DWORD PTR [r8+0x4]
   140009880:	neg    eax
   140009882:	add    r10,rcx
   140009885:	movsxd rcx,eax
   140009888:	and    r10,rcx
   14000988b:	movsxd rax,r11d
   14000988e:	mov    rdx,QWORD PTR [rax+r10*1]
   140009892:	mov    rax,QWORD PTR [rbx+0x10]
   140009896:	mov    ecx,DWORD PTR [rax+0x8]
   140009899:	add    rcx,QWORD PTR [rbx+0x8]
   14000989d:	test   BYTE PTR [rcx+0x3],0xf
   1400098a1:	je     0x1400098af
   1400098a3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400098a7:	and    eax,0xfffffff0
   1400098aa:	cdqe   
   1400098ac:	add    r9,rax
   1400098af:	xor    r9,rdx
   1400098b2:	mov    rcx,r9
   1400098b5:	add    rsp,0x20
   1400098b9:	pop    rbx
   1400098ba:	jmp    0x1400090a0
   1400098bf:	int3   
   1400098c0:	int3   
   1400098c1:	int3   
   1400098c2:	int3   
   1400098c3:	int3   
   1400098c4:	int3   
   1400098c5:	int3   
   1400098c6:	jmp    QWORD PTR [rip+0xbfc]        # 0x14000a4c8
   1400098cc:	int3   
   1400098cd:	int3   
   1400098ce:	int3   
   1400098cf:	int3   
   1400098d0:	int3   
   1400098d1:	int3   
   1400098d2:	int3   
   1400098d3:	int3   
   1400098d4:	int3   
   1400098d5:	int3   
   1400098d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400098e0:	jmp    rax
   1400098e2:	int3   
   1400098e3:	int3   
   1400098e4:	int3   
   1400098e5:	int3   
   1400098e6:	int3   
   1400098e7:	int3   
   1400098e8:	int3   
   1400098e9:	int3   
   1400098ea:	int3   
   1400098eb:	int3   
   1400098ec:	int3   
   1400098ed:	int3   
   1400098ee:	int3   
   1400098ef:	int3   
   1400098f0:	int3   
   1400098f1:	int3   
   1400098f2:	int3   
   1400098f3:	int3   
   1400098f4:	int3   
   1400098f5:	int3   
   1400098f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009900:	sub    rsp,0x10
   140009904:	mov    QWORD PTR [rsp],r10
   140009908:	mov    QWORD PTR [rsp+0x8],r11
   14000990d:	xor    r11,r11
   140009910:	lea    r10,[rsp+0x18]
   140009915:	sub    r10,rax
   140009918:	cmovb  r10,r11
   14000991c:	mov    r11,QWORD PTR gs:0x10
   140009925:	cmp    r10,r11
   140009928:	jae    0x14000993f
   14000992a:	and    r10w,0xf000
   140009930:	lea    r11,[r11-0x1000]
   140009937:	test   BYTE PTR [r11],r11b
   14000993a:	cmp    r10,r11
   14000993d:	jne    0x140009930
   14000993f:	mov    r10,QWORD PTR [rsp]
   140009943:	mov    r11,QWORD PTR [rsp+0x8]
   140009948:	add    rsp,0x10
   14000994c:	ret    
   14000994d:	int3   
   14000994e:	int3   
   14000994f:	int3   
   140009950:	int3   
   140009951:	int3   
   140009952:	int3   
   140009953:	int3   
   140009954:	int3   
   140009955:	int3   
   140009956:	mov    QWORD PTR [rsp+0x10],rdx
   14000995b:	push   rbp
   14000995c:	sub    rsp,0x20
   140009960:	mov    rbp,rdx
   140009963:	mov    rcx,QWORD PTR [rbp+0x68]
   140009967:	mov    QWORD PTR [rbp+0x68],rcx
   14000996b:	xor    eax,eax
   14000996d:	add    rcx,0x1
   140009971:	je     0x140009988
   140009973:	cmp    rcx,0xffffffffffffffff
   140009977:	ja     0x140009983
   140009979:	call   0x140008ca8
   14000997e:	test   rax,rax
   140009981:	jne    0x140009988
   140009983:	call   0x140008c28
   140009988:	mov    QWORD PTR [rbp+0x78],rax
   14000998c:	lea    rax,[rip+0xffffffffffff7d3f]        # 0x1400016d2
   140009993:	add    rsp,0x20
   140009997:	pop    rbp
   140009998:	ret    
   140009999:	int3   
   14000999a:	mov    QWORD PTR [rsp+0x10],rdx
   14000999f:	push   rbp
   1400099a0:	sub    rsp,0x20
   1400099a4:	mov    rbp,rdx
   1400099a7:	xor    r8d,r8d
   1400099aa:	mov    dl,0x1
   1400099ac:	mov    rcx,QWORD PTR [rbp+0x60]
   1400099b0:	call   0x1400012f8
   1400099b5:	xor    edx,edx
   1400099b7:	xor    ecx,ecx
   1400099b9:	call   0x140009466
   1400099be:	nop
   1400099bf:	int3   
   1400099c0:	int3   
   1400099c1:	int3   
   1400099c2:	int3   
   1400099c3:	int3   
   1400099c4:	int3   
   1400099c5:	lea    rcx,[rdx+0x38]
   1400099cc:	jmp    0x140001f34
   1400099d1:	lea    rcx,[rdx+0x38]
   1400099d8:	jmp    0x140001f34
   1400099dd:	lea    rcx,[rdx+0x48]
   1400099e4:	jmp    0x140001f34
   1400099e9:	lea    rcx,[rdx+0x48]
   1400099f0:	jmp    0x140001f34
   1400099f5:	int3   
   1400099f6:	int3   
   1400099f7:	int3   
   1400099f8:	int3   
   1400099f9:	int3   
   1400099fa:	int3   
   1400099fb:	lea    rcx,[rdx+0x78]
   140009a02:	jmp    0x140008558
   140009a07:	lea    rcx,[rdx+0x38]
   140009a0e:	jmp    0x1400087b4
   140009a13:	int3   
   140009a14:	int3   
   140009a15:	int3   
   140009a16:	int3   
   140009a17:	int3   
   140009a18:	int3   
   140009a19:	mov    QWORD PTR [rsp+0x10],rdx
   140009a1e:	push   rbp
   140009a1f:	sub    rsp,0x20
   140009a23:	mov    rbp,rdx
   140009a26:	mov    rcx,QWORD PTR [rbp+0x40]
   140009a2a:	call   0x1400087b4
   140009a2f:	xor    edx,edx
   140009a31:	xor    ecx,ecx
   140009a33:	call   0x140009466
   140009a38:	nop
   140009a39:	int3   
   140009a3a:	int3   
   140009a3b:	int3   
   140009a3c:	int3   
   140009a3d:	int3   
   140009a3e:	int3   
   140009a3f:	mov    QWORD PTR [rsp+0x10],rdx
   140009a44:	push   rbp
   140009a45:	sub    rsp,0x20
   140009a49:	mov    rbp,rdx
   140009a4c:	mov    rdx,QWORD PTR [rbp+0x48]
   140009a50:	call   0x1400089a4
   140009a55:	xor    edx,edx
   140009a57:	xor    ecx,ecx
   140009a59:	call   0x140009466
   140009a5e:	nop
   140009a5f:	int3   
   140009a60:	int3   
   140009a61:	int3   
   140009a62:	int3   
   140009a63:	int3   
   140009a64:	int3   
   140009a65:	rex push rbp
   140009a67:	sub    rsp,0x20
   140009a6b:	mov    rbp,rdx
   140009a6e:	mov    rax,QWORD PTR [rcx]
   140009a71:	mov    rdx,rcx
   140009a74:	mov    ecx,DWORD PTR [rax]
   140009a76:	call   0x14000957e
   140009a7b:	nop
   140009a7c:	add    rsp,0x20
   140009a80:	pop    rbp
   140009a81:	ret    
   140009a82:	int3   
   140009a83:	int3   
   140009a84:	int3   
   140009a85:	int3   
   140009a86:	int3   
   140009a87:	int3   
   140009a88:	int3   
   140009a89:	rex push rbp
   140009a8b:	sub    rsp,0x20
   140009a8f:	mov    rbp,rdx
   140009a92:	mov    ecx,0x8
   140009a97:	call   0x14000981e
   140009a9c:	nop
   140009a9d:	add    rsp,0x20
   140009aa1:	pop    rbp
   140009aa2:	ret    
   140009aa3:	int3   
   140009aa4:	int3   
   140009aa5:	int3   
   140009aa6:	int3   
   140009aa7:	int3   
   140009aa8:	int3   
   140009aa9:	int3   
   140009aaa:	int3   
   140009aab:	int3   
   140009aac:	int3   
   140009aad:	int3   
   140009aae:	int3   
   140009aaf:	int3   
   140009ab0:	rex push rbp
   140009ab2:	sub    rsp,0x20
   140009ab6:	mov    rbp,rdx
   140009ab9:	mov    rax,QWORD PTR [rcx]
   140009abc:	xor    ecx,ecx
   140009abe:	cmp    DWORD PTR [rax],0xc0000005
   140009ac4:	sete   cl
   140009ac7:	mov    eax,ecx
   140009ac9:	add    rsp,0x20
   140009acd:	pop    rbp
   140009ace:	ret    
   140009acf:	int3   
   140009ad0:	int3   
   140009ad1:	int3   
   140009ad2:	int3   
   140009ad3:	int3   
   140009ad4:	int3   
   140009ad5:	int3   
   140009ad6:	int3   
   140009ad7:	int3   
   140009ad8:	int3   
   140009ad9:	int3   
   140009ada:	int3   
   140009adb:	int3   
   140009adc:	int3   
   140009add:	int3   
   140009ade:	int3   
   140009adf:	int3   
   140009ae0:	lea    rax,[rip+0x1f91]        # 0x14000ba78
   140009ae7:	mov    QWORD PTR [rip+0x5842],rax        # 0x14000f330
   140009aee:	ret    
   140009aef:	int3   
   140009af0:	int3   
   140009af1:	int3   
   140009af2:	int3   
   140009af3:	int3   
   140009af4:	int3   
   140009af5:	int3   
   140009af6:	int3   
   140009af7:	int3   
   140009af8:	int3   
   140009af9:	int3   
   140009afa:	int3   
   140009afb:	int3   
   140009afc:	int3   
   140009afd:	int3   
   140009afe:	int3   
   140009aff:	int3   
   140009b00:	lea    rax,[rip+0x1f71]        # 0x14000ba78
   140009b07:	mov    QWORD PTR [rip+0x582a],rax        # 0x14000f338
   140009b0e:	ret    
   140009b0f:	int3   
   140009b10:	int3   
   140009b11:	int3   
   140009b12:	int3   
   140009b13:	int3   
   140009b14:	int3   
   140009b15:	int3   
   140009b16:	int3   
   140009b17:	int3   
   140009b18:	int3   
   140009b19:	int3   
   140009b1a:	int3   
   140009b1b:	int3   
   140009b1c:	int3   
   140009b1d:	int3   
   140009b1e:	int3   
   140009b1f:	int3   
   140009b20:	lea    rax,[rip+0x1f51]        # 0x14000ba78
   140009b27:	mov    QWORD PTR [rip+0x5812],rax        # 0x14000f340
   140009b2e:	ret    
   140009b2f:	int3   
   140009b30:	int3   
   140009b31:	int3   
   140009b32:	int3   
   140009b33:	int3   
   140009b34:	int3   
   140009b35:	int3   
   140009b36:	int3   
   140009b37:	int3   
   140009b38:	int3   
   140009b39:	int3   
   140009b3a:	int3   
   140009b3b:	int3   
   140009b3c:	int3   
   140009b3d:	int3   
   140009b3e:	int3   
   140009b3f:	int3   
   140009b40:	mov    rcx,QWORD PTR [rip+0x5f21]        # 0x14000fa68
   140009b47:	rex.W jmp QWORD PTR [rip+0x64a]        # 0x14000a198
   140009b4e:	int3   
   140009b4f:	int3   
   140009b50:	int3   
   140009b51:	int3   
   140009b52:	int3   
   140009b53:	int3   
   140009b54:	int3   
   140009b55:	int3   
   140009b56:	int3   
   140009b57:	int3   
   140009b58:	int3   
   140009b59:	int3   
   140009b5a:	int3   
   140009b5b:	int3   
   140009b5c:	int3   
   140009b5d:	int3   
   140009b5e:	int3   
   140009b5f:	int3   
   140009b60:	sub    rsp,0x28
   140009b64:	mov    rax,QWORD PTR [rip+0x5e95]        # 0x14000fa00
   140009b6b:	test   rax,rax
   140009b6e:	je     0x140009b8b
   140009b70:	mov    rcx,QWORD PTR [rax+0x8]
   140009b74:	test   rcx,rcx
   140009b77:	je     0x140009b86
   140009b79:	call   QWORD PTR [rip+0x629]        # 0x14000a1a8
   140009b7f:	mov    rax,QWORD PTR [rip+0x5e7a]        # 0x14000fa00
   140009b86:	and    QWORD PTR [rax+0x8],0x0
   140009b8b:	add    rsp,0x28
   140009b8f:	ret    
   140009b90:	int3   
   140009b91:	int3   
   140009b92:	int3   
   140009b93:	int3   
   140009b94:	int3   
   140009b95:	int3   
   140009b96:	int3   
   140009b97:	int3   
   140009b98:	int3   
   140009b99:	int3   
   140009b9a:	int3   
   140009b9b:	int3   
   140009b9c:	int3   
   140009b9d:	int3   
   140009b9e:	int3   
   140009b9f:	int3   
   140009ba0:	mov    rcx,QWORD PTR [rip+0x5ee1]        # 0x14000fa88
   140009ba7:	rex.W jmp QWORD PTR [rip+0x5ea]        # 0x14000a198
   140009bae:	int3   
   140009baf:	int3   
   140009bb0:	int3   
   140009bb1:	int3   
   140009bb2:	int3   
   140009bb3:	int3   
   140009bb4:	int3   
   140009bb5:	int3   
   140009bb6:	int3   
   140009bb7:	int3   
   140009bb8:	int3   
   140009bb9:	int3   
   140009bba:	int3   
   140009bbb:	int3   
   140009bbc:	int3   
   140009bbd:	int3   
   140009bbe:	int3   
   140009bbf:	int3   
   140009bc0:	mov    rcx,QWORD PTR [rip+0x5ee1]        # 0x14000faa8
   140009bc7:	rex.W jmp QWORD PTR [rip+0x5ca]        # 0x14000a198

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	enter  0xd9,0x0
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,dl
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	add    BYTE PTR [rax],al
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	rex.RX loop 0x14000a013
   14000a013:	add    BYTE PTR [rax],al
   14000a015:	add    BYTE PTR [rax],al
   14000a017:	add    BYTE PTR [rdx+riz*8+0x0],bl
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rsi-0x1e],dh
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	add    BYTE PTR [rax],al
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	mov    edx,fs
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	movabs al,ds:0xae000000000000e2
   14000a039:	loop   0x14000a03b
   14000a03b:	add    BYTE PTR [rax],al
   14000a03d:	add    BYTE PTR [rax],al
   14000a03f:	add    BYTE PTR [rsi+0xe2],bh
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    ah,cl
   14000a049:	loop   0x14000a04b
	...
   14000a057:	add    BYTE PTR [rax+0xe1],bl
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    BYTE PTR [rcx+riz*8+0x0],dh
	...
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	jb     0x14000a053
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	add    BYTE PTR [rax],al
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	pop    rsi
   14000a079:	loope  0x14000a07b
	...
   14000a087:	add    BYTE PTR [rax+0xe3],bh
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rbx+riz*8+0x0],ah
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	nop
   14000a099:	jrcxz  0x14000a09b
   14000a09b:	add    BYTE PTR [rax],al
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    BYTE PTR [rbx+riz*8+0x0],bh
   14000a0a3:	add    BYTE PTR [rax],al
   14000a0a5:	add    BYTE PTR [rax],al
   14000a0a7:	add    BYTE PTR [rdx-0x1d],al
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	add    BYTE PTR [rax],al
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	cs jrcxz 0x14000a0b3
   14000a0b3:	add    BYTE PTR [rax],al
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    BYTE PTR [rbx+riz*8],dl
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	add    bl,ah
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	out    dx,al
   14000a0c9:	loop   0x14000a0cb
   14000a0cb:	add    BYTE PTR [rax],al
   14000a0cd:	add    BYTE PTR [rax],al
   14000a0cf:	add    dh,ah
   14000a0d1:	loop   0x14000a0d3
   14000a0d3:	add    BYTE PTR [rax],al
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    dh,cl
   14000a0d9:	fild   DWORD PTR [rax]
   14000a0db:	add    BYTE PTR [rax],al
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    BYTE PTR [rsi+0xdb],bh
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rbx+rbx*8+0x0],ch
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	xchg   esi,eax
   14000a0f1:	fild   DWORD PTR [rax]
   14000a0f3:	add    BYTE PTR [rax],al
   14000a0f5:	add    BYTE PTR [rax],al
   14000a0f7:	add    BYTE PTR [rax+0xdb],cl
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rsi-0x25],dh
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	data16 fild DWORD PTR [rax]
   14000a10b:	add    BYTE PTR [rax],al
   14000a10d:	add    BYTE PTR [rax],al
   14000a10f:	add    BYTE PTR [rax-0x25],dl
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	add    BYTE PTR [rax],al
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	cmp    al,0xdb
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    BYTE PTR [rax],al
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	sub    al,0xdb
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rax],al
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	sbb    al,0xdb
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	add    BYTE PTR [rax],al
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	or     al,0xdb
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	add    bl,bl
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	repnz fiadd DWORD PTR [rax]
   14000a143:	add    BYTE PTR [rax],al
   14000a145:	add    BYTE PTR [rax],al
   14000a147:	add    al,ah
   14000a149:	fiadd  DWORD PTR [rax]
   14000a14b:	add    BYTE PTR [rax],al
   14000a14d:	add    BYTE PTR [rax],al
   14000a14f:	add    ah,dl
   14000a151:	fiadd  DWORD PTR [rax]
   14000a153:	add    BYTE PTR [rax],al
   14000a155:	add    BYTE PTR [rax],al
   14000a157:	add    dh,al
   14000a159:	fiadd  DWORD PTR [rax]
   14000a15b:	add    BYTE PTR [rax],al
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    BYTE PTR [rdx+rbx*8+0x0],dh
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	pushf  
   14000a169:	fiadd  DWORD PTR [rax]
   14000a16b:	add    BYTE PTR [rax],al
   14000a16d:	add    BYTE PTR [rax],al
   14000a16f:	add    BYTE PTR [rax+0xda],al
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rax-0x26],dh
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	pop    rsi
   14000a181:	fiadd  DWORD PTR [rax]
   14000a183:	add    BYTE PTR [rax],al
   14000a185:	add    BYTE PTR [rax],al
   14000a187:	add    BYTE PTR [rax-0x26],cl
   14000a18a:	add    BYTE PTR [rax],al
   14000a18c:	add    BYTE PTR [rax],al
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	cmp    bl,dl
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	add    BYTE PTR [rax],al
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	sub    al,0xda
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	sbb    bl,dl
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	add    BYTE PTR [rax],al
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	(bad)  
   14000a1a9:	fiadd  DWORD PTR [rax]
   14000a1ab:	add    BYTE PTR [rax],al
   14000a1ad:	add    BYTE PTR [rax],al
   14000a1af:	add    BYTE PTR [rsi-0x1d],bl
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	call   0x14000a2a0
   14000a1bd:	add    BYTE PTR [rax],al
   14000a1bf:	add    dh,bh
   14000a1c1:	jrcxz  0x14000a1c3
   14000a1c3:	add    BYTE PTR [rax],al
   14000a1c5:	add    BYTE PTR [rax],al
   14000a1c7:	add    BYTE PTR [rax],bl
   14000a1c9:	in     al,0x0
   14000a1cb:	add    BYTE PTR [rax],al
   14000a1cd:	add    BYTE PTR [rax],al
   14000a1cf:	add    BYTE PTR [rax],ch
   14000a1d1:	in     al,0x0
   14000a1d3:	add    BYTE PTR [rax],al
   14000a1d5:	add    BYTE PTR [rax],al
   14000a1d7:	add    dl,dl
   14000a1d9:	jrcxz  0x14000a1db
	...
   14000a1e7:	add    BYTE PTR [rax-0x1f],al
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	add    BYTE PTR [rax],al
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	cs loope 0x14000a1f3
	...
   14000a1ff:	add    ah,dl
   14000a201:	loope  0x14000a203
   14000a203:	add    BYTE PTR [rax],al
   14000a205:	add    BYTE PTR [rax],al
   14000a207:	add    ah,bh
   14000a209:	loope  0x14000a20b
   14000a20b:	add    BYTE PTR [rax],al
   14000a20d:	add    BYTE PTR [rax],al
   14000a20f:	add    BYTE PTR [rdx],dl
   14000a211:	loop   0x14000a213
   14000a213:	add    BYTE PTR [rax],al
   14000a215:	add    BYTE PTR [rax],al
   14000a217:	add    dh,ah
   14000a219:	loope  0x14000a21b
	...
   14000a227:	add    BYTE PTR [rdx-0x24],dl
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	(bad)  
   14000a231:	fadd   QWORD PTR [rax]
   14000a233:	add    BYTE PTR [rax],al
   14000a235:	add    BYTE PTR [rax],al
   14000a237:	add    BYTE PTR [rsi-0x24],dh
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	(bad)  
   14000a241:	fadd   QWORD PTR [rax]
   14000a243:	add    BYTE PTR [rax],al
   14000a245:	add    BYTE PTR [rax],al
   14000a247:	add    BYTE PTR [rax+0xdc],dl
   14000a24d:	add    BYTE PTR [rax],al
   14000a24f:	add    BYTE PTR [rsi+0xdc],bl
   14000a255:	add    BYTE PTR [rax],al
   14000a257:	add    BYTE PTR [rdx+0xdc],ch
   14000a25d:	add    BYTE PTR [rax],al
   14000a25f:	add    BYTE PTR [rax+0xdc],bh
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    ah,al
   14000a269:	fadd   QWORD PTR [rax]
   14000a26b:	add    BYTE PTR [rax],al
   14000a26d:	add    BYTE PTR [rax],al
   14000a26f:	add    ah,dl
   14000a271:	fadd   QWORD PTR [rax]
   14000a273:	add    BYTE PTR [rax],al
   14000a275:	add    BYTE PTR [rax],al
   14000a277:	add    ah,ah
   14000a279:	fadd   QWORD PTR [rax]
   14000a27b:	add    BYTE PTR [rax],al
   14000a27d:	add    BYTE PTR [rax],al
   14000a27f:	add    ah,dh
   14000a281:	fadd   QWORD PTR [rax]
   14000a283:	add    BYTE PTR [rax],al
   14000a285:	add    BYTE PTR [rax],al
   14000a287:	add    BYTE PTR [rax-0x24],al
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	add    BYTE PTR [rax],al
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	sbb    al,0xdd
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	add    BYTE PTR [rax],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	fld    QWORD PTR cs:[rax]
   14000a29b:	add    BYTE PTR [rax],al
   14000a29d:	add    BYTE PTR [rax],al
   14000a29f:	add    BYTE PTR [rdx-0x23],al
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    BYTE PTR [rax],al
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	push   rdx
   14000a2a9:	fld    QWORD PTR [rax]
   14000a2ab:	add    BYTE PTR [rax],al
   14000a2ad:	add    BYTE PTR [rax],al
   14000a2af:	add    BYTE PTR [rdx-0x23],ah
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	add    BYTE PTR [rax],al
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	jb     0x14000a297
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	(bad)  
   14000a2c1:	fld    QWORD PTR [rax]
   14000a2c3:	add    BYTE PTR [rax],al
   14000a2c5:	add    BYTE PTR [rax],al
   14000a2c7:	add    BYTE PTR [rax+0xdd],dl
   14000a2cd:	add    BYTE PTR [rax],al
   14000a2cf:	add    BYTE PTR [rbp+rbx*8+0x0],ah
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	mov    ah,0xdd
   14000a2da:	add    BYTE PTR [rax],al
   14000a2dc:	add    BYTE PTR [rax],al
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	enter  0xdd,0x0
   14000a2e4:	add    BYTE PTR [rax],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	fcmovu st,st(5)
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	add    BYTE PTR [rax],al
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	xor    al,0xdc
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    BYTE PTR [rax],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	sub    ah,bl
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],al
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	adc    bl,ah
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	add    BYTE PTR [rax],al
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	or     ch,bl
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	add    BYTE PTR [rax],al
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	in     al,dx
   14000a311:	fild   DWORD PTR [rax]
   14000a313:	add    BYTE PTR [rax],al
   14000a315:	add    BYTE PTR [rax],al
   14000a317:	add    dh,bh
   14000a319:	fild   DWORD PTR [rax]
	...
   14000a327:	add    dl,bl
   14000a329:	loopne 0x14000a32b
   14000a32b:	add    BYTE PTR [rax],al
   14000a32d:	add    BYTE PTR [rax],al
   14000a32f:	add    BYTE PTR [rdx-0x22],dh
   14000a332:	add    BYTE PTR [rax],al
   14000a334:	add    BYTE PTR [rax],al
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	push   0xde
   14000a33d:	add    BYTE PTR [rax],al
   14000a33f:	add    BYTE PTR [rsi-0x22],bl
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	add    BYTE PTR [rax],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	push   rsp
   14000a349:	fiadd  WORD PTR [rax]
   14000a34b:	add    BYTE PTR [rax],al
   14000a34d:	add    BYTE PTR [rax],al
   14000a34f:	add    BYTE PTR [rdx+0xde],bl
   14000a355:	add    BYTE PTR [rax],al
   14000a357:	add    dl,al
   14000a359:	loopne 0x14000a35b
   14000a35b:	add    BYTE PTR [rax],al
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rax+0xde],dl
   14000a365:	add    BYTE PTR [rax],al
   14000a367:	add    BYTE PTR [rax-0x22],cl
   14000a36a:	add    BYTE PTR [rax],al
   14000a36c:	add    BYTE PTR [rax],al
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	fiadd  WORD PTR ss:[rax]
   14000a373:	add    BYTE PTR [rax],al
   14000a375:	add    BYTE PTR [rax],al
   14000a377:	add    BYTE PTR [rdx],ch
   14000a379:	fiadd  WORD PTR [rax]
   14000a37b:	add    BYTE PTR [rax],al
   14000a37d:	add    BYTE PTR [rax],al
   14000a37f:	add    BYTE PTR [rdx],bl
   14000a381:	fiadd  WORD PTR [rax]
   14000a383:	add    BYTE PTR [rax],al
   14000a385:	add    BYTE PTR [rax],al
   14000a387:	add    BYTE PTR [rdx],cl
   14000a389:	fiadd  WORD PTR [rax]
   14000a38b:	add    BYTE PTR [rax],al
   14000a38d:	add    BYTE PTR [rax],al
   14000a38f:	add    dh,bh
   14000a391:	fld    QWORD PTR [rax]
   14000a393:	add    BYTE PTR [rax],al
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    BYTE PTR [rax+0xe0],bh
   14000a39d:	add    BYTE PTR [rax],al
   14000a39f:	add    BYTE PTR [rdx+0xe0],ch
   14000a3a5:	add    BYTE PTR [rax],al
   14000a3a7:	add    BYTE PTR [rax+0xe0],ah
   14000a3ad:	add    BYTE PTR [rax],al
   14000a3af:	add    BYTE PTR [rax+0xe0],bl
   14000a3b5:	add    BYTE PTR [rax],al
   14000a3b7:	add    BYTE PTR [rax+0xe0],al
   14000a3bd:	add    BYTE PTR [rax],al
   14000a3bf:	add    ah,dh
   14000a3c1:	fld    QWORD PTR [rax]
   14000a3c3:	add    BYTE PTR [rax],al
   14000a3c5:	add    BYTE PTR [rax],al
   14000a3c7:	add    BYTE PTR [rsi-0x20],dh
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	add    BYTE PTR [rax],al
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	ins    BYTE PTR es:[rdi],dx
   14000a3d1:	loopne 0x14000a3d3
   14000a3d3:	add    BYTE PTR [rax],al
   14000a3d5:	add    BYTE PTR [rax],al
   14000a3d7:	add    BYTE PTR [rax+riz*8+0x0],dl
   14000a3db:	add    BYTE PTR [rax],al
   14000a3dd:	add    BYTE PTR [rax],al
   14000a3df:	add    BYTE PTR [rax-0x20],cl
   14000a3e2:	add    BYTE PTR [rax],al
   14000a3e4:	add    BYTE PTR [rax],al
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	xor    al,0xe0
   14000a3ea:	add    BYTE PTR [rax],al
   14000a3ec:	add    BYTE PTR [rax],al
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	es loopne 0x14000a3f3
   14000a3f3:	add    BYTE PTR [rax],al
   14000a3f5:	add    BYTE PTR [rax],al
   14000a3f7:	add    BYTE PTR [rax+riz*8],bl
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	add    BYTE PTR [rax],al
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	adc    al,0xe0
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	add    BYTE PTR [rax],al
   14000a406:	add    BYTE PTR [rax],al
   14000a408:	or     al,0xe0
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	add    BYTE PTR [rax],al
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	cli    
   14000a411:	fild   WORD PTR [rax]
   14000a413:	add    BYTE PTR [rax],al
   14000a415:	add    BYTE PTR [rax],al
   14000a417:	add    dl,ch
   14000a419:	fild   WORD PTR [rax]
   14000a41b:	add    BYTE PTR [rax],al
   14000a41d:	add    BYTE PTR [rax],al
   14000a41f:	add    ah,bl
   14000a421:	fild   WORD PTR [rax]
   14000a423:	add    BYTE PTR [rax],al
   14000a425:	add    BYTE PTR [rax],al
   14000a427:	add    dh,cl
   14000a429:	fild   WORD PTR [rax]
   14000a42b:	add    BYTE PTR [rax],al
   14000a42d:	add    BYTE PTR [rax],al
   14000a42f:	add    dl,al
   14000a431:	fild   WORD PTR [rax]
   14000a433:	add    BYTE PTR [rax],al
   14000a435:	add    BYTE PTR [rax],al
   14000a437:	add    BYTE PTR [rdi+rbx*8+0x0],ah
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	mov    edi,ds
   14000a442:	add    BYTE PTR [rax],al
   14000a444:	add    BYTE PTR [rax],al
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	outs   dx,BYTE PTR ds:[rsi]
   14000a449:	fild   WORD PTR [rax]
   14000a44b:	add    BYTE PTR [rax],al
   14000a44d:	add    BYTE PTR [rax],al
   14000a44f:	add    BYTE PTR [rsi-0x21],cl
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	add    BYTE PTR [rax],al
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	fild   WORD PTR cs:[rax]
   14000a45b:	add    BYTE PTR [rax],al
   14000a45d:	add    BYTE PTR [rax],al
   14000a45f:	add    BYTE PTR [rdi+rbx*8],ah
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	add    BYTE PTR [rax],al
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	(bad)  
   14000a469:	fild   WORD PTR [rax]
   14000a46b:	add    BYTE PTR [rax],al
   14000a46d:	add    BYTE PTR [rax],al
   14000a46f:	add    al,bh
   14000a471:	fiadd  WORD PTR [rax]
   14000a473:	add    BYTE PTR [rax],al
   14000a475:	add    BYTE PTR [rax],al
   14000a477:	add    BYTE PTR [rsi+rbx*8+0x0],bh
   14000a47b:	add    BYTE PTR [rax],al
   14000a47d:	add    BYTE PTR [rax],al
   14000a47f:	add    dh,ah
   14000a481:	fiadd  WORD PTR [rax]
   14000a483:	add    BYTE PTR [rax],al
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    ah,bl
   14000a489:	fiadd  WORD PTR [rax]
   14000a48b:	add    BYTE PTR [rax],al
   14000a48d:	add    BYTE PTR [rax],al
   14000a48f:	add    dl,dl
   14000a491:	fiadd  WORD PTR [rax]
   14000a493:	add    BYTE PTR [rax],al
   14000a495:	add    BYTE PTR [rax],al
   14000a497:	add    dl,cl
   14000a499:	fiadd  WORD PTR [rax]
   14000a49b:	add    BYTE PTR [rax],al
   14000a49d:	add    BYTE PTR [rax],al
   14000a49f:	add    BYTE PTR [rsi+rbx*8+0x0],bh
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	mov    dl,0xde
   14000a4aa:	add    BYTE PTR [rax],al
   14000a4ac:	add    BYTE PTR [rax],al
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	mov    dh,bl
   14000a4b2:	add    BYTE PTR [rax],al
   14000a4b4:	add    BYTE PTR [rax],al
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a4b9:	fiadd  WORD PTR [rax]
   14000a4bb:	add    BYTE PTR [rax],al
   14000a4bd:	add    BYTE PTR [rax],al
   14000a4bf:	add    dh,ch
   14000a4c1:	fiadd  WORD PTR [rax]
   14000a4c3:	add    BYTE PTR [rax],al
   14000a4c5:	add    BYTE PTR [rax],al
   14000a4c7:	add    BYTE PTR [rax],bh
   14000a4c9:	in     al,0x0
	...
   14000a4d7:	add    dh,bh
   14000a4d9:	loopne 0x14000a4db
   14000a4db:	add    BYTE PTR [rax],al
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    dh,ch
   14000a4e1:	loopne 0x14000a4e3
   14000a4e3:	add    BYTE PTR [rax],al
   14000a4e5:	add    BYTE PTR [rax],al
   14000a4e7:	add    BYTE PTR [rdx],dl
   14000a4e9:	loope  0x14000a4eb
	...
   14000a4f7:	add    BYTE PTR [rax],ah
   14000a4f9:	jge    0x14000a4fb
   14000a4fb:	rex add DWORD PTR [rax],eax
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	loopne 0x14000a49a
   14000a502:	add    BYTE PTR [rax+0x1],al
	...
   14000a50d:	add    BYTE PTR [rax],al
   14000a50f:	add    al,dl
   14000a511:	lea    eax,[rax]
   14000a513:	rex add DWORD PTR [rax],eax
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	add    BYTE PTR [rax],dl
   14000a51a:	add    BYTE PTR [rax+0x1],al
   14000a51d:	add    BYTE PTR [rax],al
   14000a51f:	add    BYTE PTR [rax],dl
   14000a521:	adc    BYTE PTR [rax],al
   14000a523:	rex add DWORD PTR [rax],eax
   14000a526:	add    BYTE PTR [rax],al
   14000a528:	and    BYTE PTR [rax],dl
   14000a52a:	add    BYTE PTR [rax+0x1],al
   14000a52d:	add    BYTE PTR [rax],al
   14000a52f:	add    BYTE PTR [rax],dh
   14000a531:	adc    BYTE PTR [rax],al
   14000a533:	rex add DWORD PTR [rax],eax
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	adc    BYTE PTR [rax],al
   14000a53b:	rex add DWORD PTR [rax],eax
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	push   rax
   14000a541:	adc    BYTE PTR [rax],al
   14000a543:	rex add DWORD PTR [rax],eax
	...
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	lock mov WORD PTR [rax],es
   14000a55b:	rex add DWORD PTR [rax],eax
   14000a55e:	add    BYTE PTR [rax],al
   14000a560:	(bad)  
   14000a561:	xchg   ebp,eax
   14000a562:	add    BYTE PTR [rax+0x1],al
	...
   14000a571:	adc    BYTE PTR [rax],al
   14000a573:	add    BYTE PTR [rax],dl
   14000a575:	adc    BYTE PTR [rax],al
   14000a577:	add    BYTE PTR [rax],ah
   14000a579:	adc    BYTE PTR [rax],al
   14000a57b:	add    BYTE PTR [rax],dh
   14000a57d:	adc    BYTE PTR [rax],al
   14000a57f:	add    BYTE PTR [rax+0x10],al
   14000a582:	add    BYTE PTR [rax],al
   14000a584:	push   rax
   14000a585:	adc    BYTE PTR [rax],al
   14000a587:	add    BYTE PTR [rax+0x10],dh
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	movabs al,ds:0x30000010c0000010
   14000a595:	adc    DWORD PTR [rax],eax
   14000a597:	add    BYTE PTR [rax+0x11],dl
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	(bad)  
   14000a59d:	adc    DWORD PTR [rax],eax
   14000a59f:	add    al,dl
   14000a5a1:	adc    DWORD PTR [rax],eax
   14000a5a3:	add    al,ah
   14000a5a5:	adc    DWORD PTR [rax],eax
   14000a5a7:	add    BYTE PTR [rax],dh
   14000a5a9:	adc    al,BYTE PTR [rax]
   14000a5ab:	add    BYTE PTR [rax+0x12],al
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	mov    al,0x12
   14000a5b2:	add    BYTE PTR [rax],al
   14000a5b4:	sbb    BYTE PTR [rdi],0x0
   14000a5b7:	add    BYTE PTR [rax],al
   14000a5b9:	and    BYTE PTR [rax],al
   14000a5bb:	add    BYTE PTR [rax+0x21],dl
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	and    BYTE PTR [rcx],0x0
   14000a5c3:	add    BYTE PTR [rax-0x1fffffdf],dh
   14000a5c9:	and    DWORD PTR [rax],eax
   14000a5cb:	add    BYTE PTR [rax+0x2a],dl
   14000a5d1:	sub    eax,DWORD PTR [rax]
   14000a5d3:	add    BYTE PTR [rax+0x39],dh
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	nop
   14000a5d9:	cmp    DWORD PTR [rax],eax
   14000a5db:	add    al,dl
   14000a5dd:	cmp    al,BYTE PTR [rax]
   14000a5df:	add    BYTE PTR [rax],ah
   14000a5e1:	pop    rbp
   14000a5e2:	add    BYTE PTR [rax],al
   14000a5e4:	movabs al,ds:0x7000005ef000005e
   14000a5ed:	jl     0x14000a5ef
   14000a5ef:	add    BYTE PTR [rax],ah
   14000a5f1:	jge    0x14000a5f3
   14000a5f3:	add    BYTE PTR [rax],dh
   14000a5f5:	jge    0x14000a5f7
   14000a5f7:	add    BYTE PTR [rax-0xfffff75],dh
   14000a5fd:	mov    eax,DWORD PTR [rax]
   14000a5ff:	add    al,dh
   14000a601:	mov    WORD PTR [rax],es
   14000a603:	add    al,dl
   14000a605:	lea    eax,[rax]
   14000a607:	add    BYTE PTR [rax],ah
   14000a609:	mov    es,WORD PTR [rax]
   14000a60b:	add    BYTE PTR [rax-0xfffff6f],dl
   14000a611:	xchg   ecx,eax
   14000a612:	add    BYTE PTR [rax],al
   14000a614:	rcl    BYTE PTR [rax+rax*1+0x94d000],0x0
   14000a61c:	and    BYTE PTR [rbp-0x6aa00000],dl
   14000a622:	add    BYTE PTR [rax],al
   14000a624:	loopne 0x14000a5c0
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	add    BYTE PTR [rbx-0x64e00000],bl
   14000a62e:	add    BYTE PTR [rax],al
   14000a630:	rex
   14000a631:	fwait
   14000a632:	add    BYTE PTR [rax],al
   14000a634:	(bad)  
   14000a635:	fwait
   14000a636:	add    BYTE PTR [rax],al
   14000a638:	movabs al,ds:0x500009bc000009b
   14000a641:	add    BYTE PTR [rax],al
   14000a643:	add    BYTE PTR [rax],al
   14000a645:	add    BYTE PTR [rax],al
   14000a647:	add    al,dh
   14000a649:	stos   BYTE PTR es:[rdi],al
   14000a64a:	add    BYTE PTR [rax+0x1],al
   14000a64d:	add    BYTE PTR [rax],al
   14000a64f:	add    BYTE PTR [rdi+0x0],dh
   14000a655:	add    BYTE PTR [rax],al
   14000a657:	add    BYTE PTR [rax],cl
   14000a659:	stos   DWORD PTR es:[rdi],eax
   14000a65a:	add    BYTE PTR [rax+0x1],al
   14000a65d:	add    BYTE PTR [rax],al
   14000a65f:	add    BYTE PTR [rax+rax*1],dl
   14000a662:	add    BYTE PTR [rax],al
   14000a664:	add    BYTE PTR [rax],al
   14000a666:	add    BYTE PTR [rax],al
   14000a668:	sbb    BYTE PTR [rbx+0x14000],ch
   14000a66e:	add    BYTE PTR [rax],al
   14000a670:	outs   dx,DWORD PTR ds:[rsi]
   14000a671:	add    BYTE PTR [rax],al
   14000a673:	add    BYTE PTR [rax],al
   14000a675:	add    BYTE PTR [rax],al
   14000a677:	add    BYTE PTR [rax],ch
   14000a679:	stos   DWORD PTR es:[rdi],eax
   14000a67a:	add    BYTE PTR [rax+0x1],al
   14000a67d:	add    BYTE PTR [rax],al
   14000a67f:	add    BYTE PTR [rdx+0x0],ch
   14000a685:	add    BYTE PTR [rax],al
   14000a687:	add    BYTE PTR [rax-0x55],al
   14000a68a:	add    BYTE PTR [rax+0x1],al
   14000a68d:	add    BYTE PTR [rax],al
   14000a68f:	add    BYTE PTR [rsi+0x0],cl
   14000a695:	add    BYTE PTR [rax],al
   14000a697:	add    BYTE PTR [rax-0x55],al
   14000a69a:	add    BYTE PTR [rax+0x1],al
   14000a69d:	add    BYTE PTR [rax],al
   14000a69f:	add    BYTE PTR [rdx+0x0],dl
   14000a6a2:	add    BYTE PTR [rax],al
   14000a6a4:	add    BYTE PTR [rax],al
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	lock stos BYTE PTR es:[rdi],al
   14000a6aa:	add    BYTE PTR [rax+0x1],al
   14000a6ad:	add    BYTE PTR [rax],al
   14000a6af:	add    bl,dh
   14000a6b1:	add    eax,DWORD PTR [rax]
   14000a6b3:	add    BYTE PTR [rax],al
   14000a6b5:	add    BYTE PTR [rax],al
   14000a6b7:	add    BYTE PTR [rax-0x55],bl
   14000a6ba:	add    BYTE PTR [rax+0x1],al
   14000a6bd:	add    BYTE PTR [rax],al
   14000a6bf:	add    ah,dh
   14000a6c1:	add    eax,DWORD PTR [rax]
   14000a6c3:	add    BYTE PTR [rax],al
   14000a6c5:	add    BYTE PTR [rax],al
   14000a6c7:	add    BYTE PTR [rax-0x55],bl
   14000a6ca:	add    BYTE PTR [rax+0x1],al
   14000a6cd:	add    BYTE PTR [rax],al
   14000a6cf:	add    ch,dh
   14000a6d1:	add    eax,DWORD PTR [rax]
   14000a6d3:	add    BYTE PTR [rax],al
   14000a6d5:	add    BYTE PTR [rax],al
   14000a6d7:	add    BYTE PTR [rax-0x55],bl
   14000a6da:	add    BYTE PTR [rax+0x1],al
   14000a6dd:	add    BYTE PTR [rax],al
   14000a6df:	add    BYTE PTR [rax],dl
   14000a6e1:	add    BYTE PTR [rax],al
   14000a6e3:	add    BYTE PTR [rax],al
   14000a6e5:	add    BYTE PTR [rax],al
   14000a6e7:	add    al,dh
   14000a6e9:	stos   BYTE PTR es:[rdi],al
   14000a6ea:	add    BYTE PTR [rax+0x1],al
   14000a6ed:	add    BYTE PTR [rax],al
   14000a6ef:	add    BYTE PTR [rdi],dh
   14000a6f1:	add    BYTE PTR [rax],al
   14000a6f3:	add    BYTE PTR [rax],al
   14000a6f5:	add    BYTE PTR [rax],al
   14000a6f7:	add    BYTE PTR [rax],bl
   14000a6f9:	stos   DWORD PTR es:[rdi],eax
   14000a6fa:	add    BYTE PTR [rax+0x1],al
   14000a6fd:	add    BYTE PTR [rax],al
   14000a6ff:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   14000a703:	add    BYTE PTR [rax],al
   14000a705:	add    BYTE PTR [rax],al
   14000a707:	add    BYTE PTR [rax-0x55],al
   14000a70a:	add    BYTE PTR [rax+0x1],al
   14000a70d:	add    BYTE PTR [rax],al
   14000a70f:	add    BYTE PTR [rcx+0x0],dl
   14000a715:	add    BYTE PTR [rax],al
   14000a717:	add    BYTE PTR [rax-0x55],ch
   14000a71a:	add    BYTE PTR [rax+0x1],al
   14000a71d:	add    BYTE PTR [rax],al
   14000a71f:	add    BYTE PTR [rbx],cl
   14000a721:	add    DWORD PTR [rax],eax
   14000a723:	add    BYTE PTR [rax],al
   14000a725:	add    BYTE PTR [rax],al
   14000a727:	add    BYTE PTR [rax+0x14000ab],al
   14000a72d:	add    BYTE PTR [rax],al
   14000a72f:	add    BYTE PTR [rax+0x0],dh
   14000a732:	add    BYTE PTR [rax],al
   14000a734:	add    BYTE PTR [rax],al
   14000a736:	add    BYTE PTR [rax],al
   14000a738:	cwde   
   14000a739:	stos   DWORD PTR es:[rdi],eax
   14000a73a:	add    BYTE PTR [rax+0x1],al
   14000a73d:	add    BYTE PTR [rax],al
   14000a73f:	add    BYTE PTR [rax+0x0],dl
   14000a742:	add    BYTE PTR [rax],al
   14000a744:	add    BYTE PTR [rax],al
   14000a746:	add    BYTE PTR [rax],al
   14000a748:	or     BYTE PTR [rbx+0x14000],ch
   14000a74e:	add    BYTE PTR [rax],al
   14000a750:	add    al,BYTE PTR [rax]
   14000a752:	add    BYTE PTR [rax],al
   14000a754:	add    BYTE PTR [rax],al
   14000a756:	add    BYTE PTR [rax],al
   14000a758:	mov    al,0xab
   14000a75a:	add    BYTE PTR [rax+0x1],al
   14000a75d:	add    BYTE PTR [rax],al
   14000a75f:	add    BYTE PTR [rdi],ah
   14000a761:	add    BYTE PTR [rax],al
   14000a763:	add    BYTE PTR [rax],al
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    BYTE PTR [rax+0x14000ab],bl
   14000a76d:	add    BYTE PTR [rax],al
   14000a76f:	add    BYTE PTR [rax+rax*1],cl
   14000a772:	add    BYTE PTR [rax],al
   14000a774:	add    BYTE PTR [rax],al
   14000a776:	add    BYTE PTR [rax],al
   14000a778:	lock stos BYTE PTR es:[rdi],al
   14000a77a:	add    BYTE PTR [rax+0x1],al
   14000a77d:	add    BYTE PTR [rax],al
   14000a77f:	add    BYTE PTR [rdi],cl
   14000a781:	add    BYTE PTR [rax],al
   14000a783:	add    BYTE PTR [rax],al
   14000a785:	add    BYTE PTR [rax],al
   14000a787:	add    BYTE PTR [rax],bl
   14000a789:	stos   DWORD PTR es:[rdi],eax
   14000a78a:	add    BYTE PTR [rax+0x1],al
   14000a78d:	add    BYTE PTR [rax],al
   14000a78f:	add    BYTE PTR [rcx],al
   14000a791:	add    BYTE PTR [rax],al
   14000a793:	add    BYTE PTR [rax],al
   14000a795:	add    BYTE PTR [rax],al
   14000a797:	add    al,dl
   14000a799:	stos   DWORD PTR es:[rdi],eax
   14000a79a:	add    BYTE PTR [rax+0x1],al
   14000a79d:	add    BYTE PTR [rax],al
   14000a79f:	add    BYTE PTR [rsi],al
   14000a7a1:	add    BYTE PTR [rax],al
   14000a7a3:	add    BYTE PTR [rax],al
   14000a7a5:	add    BYTE PTR [rax],al
   14000a7a7:	add    BYTE PTR [rax+0x14000ab],al
   14000a7ad:	add    BYTE PTR [rax],al
   14000a7af:	add    BYTE PTR [rbx+0x0],bh
   14000a7b2:	add    BYTE PTR [rax],al
   14000a7b4:	add    BYTE PTR [rax],al
   14000a7b6:	add    BYTE PTR [rax],al
   14000a7b8:	sub    BYTE PTR [rbx+0x14000],0x0
   14000a7bf:	add    BYTE PTR [rcx],ah
   14000a7c1:	add    BYTE PTR [rax],al
   14000a7c3:	add    BYTE PTR [rax],al
   14000a7c5:	add    BYTE PTR [rax],al
   14000a7c7:	add    al,ch
   14000a7c9:	stos   DWORD PTR es:[rdi],eax
   14000a7ca:	add    BYTE PTR [rax+0x1],al
   14000a7cd:	add    BYTE PTR [rax],al
   14000a7cf:	add    ah,dl
   14000a7d1:	add    BYTE PTR [rax],al
   14000a7d3:	add    BYTE PTR [rax],al
   14000a7d5:	add    BYTE PTR [rax],al
   14000a7d7:	add    al,ch
   14000a7d9:	stos   DWORD PTR es:[rdi],eax
   14000a7da:	add    BYTE PTR [rax+0x1],al
   14000a7dd:	add    BYTE PTR [rax],al
   14000a7df:	add    BYTE PTR [rbx+0x0],al
   14000a7e5:	add    BYTE PTR [rax],al
   14000a7e7:	add    BYTE PTR [rax+0x14000ab],al
   14000a7ed:	add    BYTE PTR [rax],al
   14000a7ef:	add    dh,ah
   14000a7f1:	add    eax,DWORD PTR [rax]
   14000a7f3:	add    BYTE PTR [rax],al
   14000a7f5:	add    BYTE PTR [rax],al
   14000a7f7:	add    al,dh
   14000a7f9:	stos   BYTE PTR es:[rdi],al
   14000a7fa:	add    BYTE PTR [rax+0x1],al
   14000a7fd:	add    BYTE PTR [rax],al
   14000a7ff:	add    BYTE PTR [rax],cl
	...
   14000a809:	lods   al,BYTE PTR ds:[rsi]
   14000a80a:	add    BYTE PTR [rax+0x1],al
   14000a80d:	add    BYTE PTR [rax],al
   14000a80f:	add    BYTE PTR [rip+0x0],dl        # 0x14000a815
   14000a815:	add    BYTE PTR [rax],al
   14000a817:	add    BYTE PTR [rax],bl
   14000a819:	lods   al,BYTE PTR ds:[rsi]
   14000a81a:	add    BYTE PTR [rax+0x1],al
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    BYTE PTR [rcx],dl
   14000a821:	add    BYTE PTR [rax],al
   14000a823:	add    BYTE PTR [rax],al
   14000a825:	add    BYTE PTR [rax],al
   14000a827:	add    BYTE PTR [rax],bh
   14000a829:	lods   al,BYTE PTR ds:[rsi]
   14000a82a:	add    BYTE PTR [rax+0x1],al
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rsi+0x0],ch
   14000a832:	add    BYTE PTR [rax],al
   14000a834:	add    BYTE PTR [rax],al
   14000a836:	add    BYTE PTR [rax],al
   14000a838:	pop    rax
   14000a839:	stos   DWORD PTR es:[rdi],eax
   14000a83a:	add    BYTE PTR [rax+0x1],al
   14000a83d:	add    BYTE PTR [rax],al
   14000a83f:	add    BYTE PTR [rcx+0x9],ah
   14000a842:	add    BYTE PTR [rax],al
   14000a844:	add    BYTE PTR [rax],al
   14000a846:	add    BYTE PTR [rax],al
   14000a848:	rex stos DWORD PTR es:[rdi],eax
   14000a84a:	add    BYTE PTR [rax+0x1],al
   14000a84d:	add    BYTE PTR [rax],al
   14000a84f:	add    bl,ah
   14000a851:	add    eax,DWORD PTR [rax]
   14000a853:	add    BYTE PTR [rax],al
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    BYTE PTR [rax-0x54],dl
   14000a85a:	add    BYTE PTR [rax+0x1],al
   14000a85d:	add    BYTE PTR [rax],al
   14000a85f:	add    BYTE PTR [rsi],cl
	...
   14000a869:	lods   al,BYTE PTR ds:[rsi]
   14000a86a:	add    BYTE PTR [rax+0x1],al
   14000a86d:	add    BYTE PTR [rax],al
   14000a86f:	add    BYTE PTR [rbx],al
   14000a871:	add    BYTE PTR [rax],al
   14000a873:	add    BYTE PTR [rax],al
   14000a875:	add    BYTE PTR [rax],al
   14000a877:	add    BYTE PTR [rax+0x14000ab],dh
   14000a87d:	add    BYTE PTR [rax],al
   14000a87f:	add    BYTE PTR [rsi],bl
   14000a881:	add    BYTE PTR [rax],al
   14000a883:	add    BYTE PTR [rax],al
   14000a885:	add    BYTE PTR [rax],al
   14000a887:	add    BYTE PTR [rax-0x55],bl
   14000a88a:	add    BYTE PTR [rax+0x1],al
   14000a88d:	add    BYTE PTR [rax],al
   14000a88f:	add    ch,dl
   14000a891:	add    al,0x0
   14000a893:	add    BYTE PTR [rax],al
   14000a895:	add    BYTE PTR [rax],al
   14000a897:	add    BYTE PTR [rax],bl
   14000a899:	lods   al,BYTE PTR ds:[rsi]
   14000a89a:	add    BYTE PTR [rax+0x1],al
   14000a89d:	add    BYTE PTR [rax],al
   14000a89f:	add    BYTE PTR [rcx],bl
   14000a8a1:	add    BYTE PTR [rax],al
   14000a8a3:	add    BYTE PTR [rax],al
   14000a8a5:	add    BYTE PTR [rax],al
   14000a8a7:	add    BYTE PTR [rax-0x55],bl
   14000a8aa:	add    BYTE PTR [rax+0x1],al
   14000a8ad:	add    BYTE PTR [rax],al
   14000a8af:	add    BYTE PTR [rax],ah
   14000a8b1:	add    BYTE PTR [rax],al
   14000a8b3:	add    BYTE PTR [rax],al
   14000a8b5:	add    BYTE PTR [rax],al
   14000a8b7:	add    al,dh
   14000a8b9:	stos   BYTE PTR es:[rdi],al
   14000a8ba:	add    BYTE PTR [rax+0x1],al
   14000a8bd:	add    BYTE PTR [rax],al
   14000a8bf:	add    BYTE PTR [rax+rax*1],al
   14000a8c2:	add    BYTE PTR [rax],al
   14000a8c4:	add    BYTE PTR [rax],al
   14000a8c6:	add    BYTE PTR [rax],al
   14000a8c8:	push   0x14000ac
   14000a8cd:	add    BYTE PTR [rax],al
   14000a8cf:	add    BYTE PTR [rip+0x0],bl        # 0x14000a8d5
   14000a8d5:	add    BYTE PTR [rax],al
   14000a8d7:	add    BYTE PTR [rax-0x55],bl
   14000a8da:	add    BYTE PTR [rax+0x1],al
   14000a8dd:	add    BYTE PTR [rax],al
   14000a8df:	add    BYTE PTR [rbx],dl
   14000a8e1:	add    BYTE PTR [rax],al
   14000a8e3:	add    BYTE PTR [rax],al
   14000a8e5:	add    BYTE PTR [rax],al
   14000a8e7:	add    al,dh
   14000a8e9:	stos   BYTE PTR es:[rdi],al
   14000a8ea:	add    BYTE PTR [rax+0x1],al
   14000a8ed:	add    BYTE PTR [rax],al
   14000a8ef:	add    BYTE PTR [rip+0x27],bl        # 0x14000a91c
   14000a8f5:	add    BYTE PTR [rax],al
   14000a8f7:	add    BYTE PTR [rax+0x14000ac],al
   14000a8fd:	add    BYTE PTR [rax],al
   14000a8ff:	add    BYTE PTR [rax+0x27],al
   14000a902:	add    BYTE PTR [rax],al
   14000a904:	add    BYTE PTR [rax],al
   14000a906:	add    BYTE PTR [rax],al
   14000a908:	cwde   
   14000a909:	lods   al,BYTE PTR ds:[rsi]
   14000a90a:	add    BYTE PTR [rax+0x1],al
   14000a90d:	add    BYTE PTR [rax],al
   14000a90f:	add    BYTE PTR [rcx+0x27],al
   14000a912:	add    BYTE PTR [rax],al
   14000a914:	add    BYTE PTR [rax],al
   14000a916:	add    BYTE PTR [rax],al
   14000a918:	test   al,0xac
   14000a91a:	add    BYTE PTR [rax+0x1],al
   14000a91d:	add    BYTE PTR [rax],al
   14000a91f:	add    BYTE PTR [rdi],bh
   14000a921:	(bad)  
   14000a922:	add    BYTE PTR [rax],al
   14000a924:	add    BYTE PTR [rax],al
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	shr    BYTE PTR [rax+rax*1+0x140],0x0
   14000a930:	xor    eax,0x27
   14000a935:	add    BYTE PTR [rax],al
   14000a937:	add    al,ah
   14000a939:	lods   al,BYTE PTR ds:[rsi]
   14000a93a:	add    BYTE PTR [rax+0x1],al
   14000a93d:	add    BYTE PTR [rax],al
   14000a93f:	add    BYTE PTR [rcx],bl
   14000a941:	(bad)  
   14000a942:	add    BYTE PTR [rax],al
   14000a944:	add    BYTE PTR [rax],al
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	add    BYTE PTR [rbp+0x14000],ch
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	rex.RB (bad) 
   14000a952:	add    BYTE PTR [rax],al
   14000a954:	add    BYTE PTR [rax],al
   14000a956:	add    BYTE PTR [rax],al
   14000a958:	sbb    BYTE PTR [rbp+0x14000],ch
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	rex.WRB (bad) 
   14000a962:	add    BYTE PTR [rax],al
   14000a964:	add    BYTE PTR [rax],al
   14000a966:	add    BYTE PTR [rax],al
   14000a968:	xor    BYTE PTR [rbp+0x14000],ch
   14000a96e:	add    BYTE PTR [rax],al
   14000a970:	rex.RX (bad) 
   14000a972:	add    BYTE PTR [rax],al
   14000a974:	add    BYTE PTR [rax],al
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	lods   rax,QWORD PTR ds:[rsi]
   14000a97a:	add    BYTE PTR [rax+0x1],al
   14000a97d:	add    BYTE PTR [rax],al
   14000a97f:	add    BYTE PTR [rdi],dh
   14000a981:	(bad)  
   14000a982:	add    BYTE PTR [rax],al
   14000a984:	add    BYTE PTR [rax],al
   14000a986:	add    BYTE PTR [rax],al
   14000a988:	(bad)  
   14000a989:	lods   eax,DWORD PTR ds:[rsi]
   14000a98a:	add    BYTE PTR [rax+0x1],al
   14000a98d:	add    BYTE PTR [rax],al
   14000a98f:	add    BYTE PTR [rsi],bl
   14000a991:	(bad)  
   14000a992:	add    BYTE PTR [rax],al
   14000a994:	add    BYTE PTR [rax],al
   14000a996:	add    BYTE PTR [rax],al
   14000a998:	sub    BYTE PTR [rbp+0x14000],0x0
   14000a99f:	add    BYTE PTR [rcx+0x27],dl
   14000a9a2:	add    BYTE PTR [rax],al
   14000a9a4:	add    BYTE PTR [rax],al
   14000a9a6:	add    BYTE PTR [rax],al
   14000a9a8:	nop
   14000a9a9:	lods   eax,DWORD PTR ds:[rsi]
   14000a9aa:	add    BYTE PTR [rax+0x1],al
   14000a9ad:	add    BYTE PTR [rax],al
   14000a9af:	add    BYTE PTR [rdi+riz*1],dh
   14000a9b2:	add    BYTE PTR [rax],al
   14000a9b4:	add    BYTE PTR [rax],al
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	test   al,0xad
   14000a9ba:	add    BYTE PTR [rax+0x1],al
   14000a9bd:	add    BYTE PTR [rax],al
   14000a9bf:	add    BYTE PTR [rdi+riz*1],dl
   14000a9c2:	add    BYTE PTR [rax],al
   14000a9c4:	add    BYTE PTR [rax],al
   14000a9c6:	add    BYTE PTR [rax],al
   14000a9c8:	shr    BYTE PTR [rbp+0x14000],0x0
   14000a9cf:	add    BYTE PTR [rsi],ah
   14000a9d1:	(bad)  
   14000a9d2:	add    BYTE PTR [rax],al
   14000a9d4:	add    BYTE PTR [rax],al
   14000a9d6:	add    BYTE PTR [rax],al
   14000a9d8:	shr    BYTE PTR [rbp+0x14000],1
   14000a9de:	add    BYTE PTR [rax],al
   14000a9e0:	rex.W (bad) 
   14000a9e2:	add    BYTE PTR [rax],al
   14000a9e4:	add    BYTE PTR [rax],al
   14000a9e6:	add    BYTE PTR [rax],al
   14000a9e8:	call   0x14140aa9a
   14000a9ed:	add    BYTE PTR [rax],al
   14000a9ef:	add    BYTE PTR [rax],ch
   14000a9f1:	(bad)  
   14000a9f2:	add    BYTE PTR [rax],al
   14000a9f4:	add    BYTE PTR [rax],al
   14000a9f6:	add    BYTE PTR [rax],al
   14000a9f8:	add    BYTE PTR [rsi+0x14000],ch
   14000a9fe:	add    BYTE PTR [rax],al
   14000aa00:	cmp    BYTE PTR [rdi],ah
   14000aa02:	add    BYTE PTR [rax],al
   14000aa04:	add    BYTE PTR [rax],al
   14000aa06:	add    BYTE PTR [rax],al
   14000aa08:	sbb    BYTE PTR [rsi+0x14000],ch
   14000aa0e:	add    BYTE PTR [rax],al
   14000aa10:	rex.WRXB (bad) 
   14000aa12:	add    BYTE PTR [rax],al
   14000aa14:	add    BYTE PTR [rax],al
   14000aa16:	add    BYTE PTR [rax],al
   14000aa18:	sub    BYTE PTR [rsi+0x14000],ch
   14000aa1e:	add    BYTE PTR [rax],al
   14000aa20:	rex.X (bad) 
   14000aa22:	add    BYTE PTR [rax],al
   14000aa24:	add    BYTE PTR [rax],al
   14000aa26:	add    BYTE PTR [rax],al
   14000aa28:	scas   al,BYTE PTR es:[rdi]
   14000aa2a:	add    BYTE PTR [rax+0x1],al
   14000aa2d:	add    BYTE PTR [rax],al
   14000aa2f:	add    BYTE PTR [rdi+riz*1+0x0],al
   14000aa33:	add    BYTE PTR [rax],al
   14000aa35:	add    BYTE PTR [rax],al
   14000aa37:	add    BYTE PTR [rax-0x52],dl
   14000aa3a:	add    BYTE PTR [rax+0x1],al
   14000aa3d:	add    BYTE PTR [rax],al
   14000aa3f:	add    BYTE PTR [rbx+0x27],al
   14000aa42:	add    BYTE PTR [rax],al
   14000aa44:	add    BYTE PTR [rax],al
   14000aa46:	add    BYTE PTR [rax],al
   14000aa48:	(bad)  
   14000aa49:	scas   al,BYTE PTR es:[rdi]
   14000aa4a:	add    BYTE PTR [rax+0x1],al
   14000aa4d:	add    BYTE PTR [rax],al
   14000aa4f:	add    BYTE PTR [rdi+0x27],al
   14000aa52:	add    BYTE PTR [rax],al
   14000aa54:	add    BYTE PTR [rax],al
   14000aa56:	add    BYTE PTR [rax],al
   14000aa58:	js     0x14000aa08
   14000aa5a:	add    BYTE PTR [rax+0x1],al
   14000aa5d:	add    BYTE PTR [rax],al
   14000aa5f:	add    BYTE PTR [rdx],bh
   14000aa61:	(bad)  
   14000aa62:	add    BYTE PTR [rax],al
   14000aa64:	add    BYTE PTR [rax],al
   14000aa66:	add    BYTE PTR [rax],al
   14000aa68:	mov    BYTE PTR [rsi+0x14000],ch
   14000aa6e:	add    BYTE PTR [rax],al
   14000aa70:	rex.WB (bad) 
   14000aa72:	add    BYTE PTR [rax],al
   14000aa74:	add    BYTE PTR [rax],al
   14000aa76:	add    BYTE PTR [rax],al
   14000aa78:	movabs al,ds:0x36000000014000ae
   14000aa81:	(bad)  
   14000aa82:	add    BYTE PTR [rax],al
   14000aa84:	add    BYTE PTR [rax],al
   14000aa86:	add    BYTE PTR [rax],al
   14000aa88:	mov    al,0xae
   14000aa8a:	add    BYTE PTR [rax+0x1],al
   14000aa8d:	add    BYTE PTR [rax],al
   14000aa8f:	add    BYTE PTR [rip+0x27],bh        # 0x14000aabc
   14000aa95:	add    BYTE PTR [rax],al
   14000aa97:	add    al,al
   14000aa99:	scas   al,BYTE PTR es:[rdi]
   14000aa9a:	add    BYTE PTR [rax+0x1],al
   14000aa9d:	add    BYTE PTR [rax],al
   14000aa9f:	add    BYTE PTR [rbx],bh
   14000aaa1:	(bad)  
   14000aaa2:	add    BYTE PTR [rax],al
   14000aaa4:	add    BYTE PTR [rax],al
   14000aaa6:	add    BYTE PTR [rax],al
   14000aaa8:	fsubr  DWORD PTR [rsi+0x14000]
   14000aaae:	add    BYTE PTR [rax],al
   14000aab0:	cmp    DWORD PTR [rdi],esp
   14000aab2:	add    BYTE PTR [rax],al
   14000aab4:	add    BYTE PTR [rax],al
   14000aab6:	add    BYTE PTR [rax],al
   14000aab8:	lock scas al,BYTE PTR es:[rdi]
   14000aaba:	add    BYTE PTR [rax+0x1],al
   14000aabd:	add    BYTE PTR [rax],al
   14000aabf:	add    BYTE PTR [rdi+riz*1+0x0],cl
   14000aac3:	add    BYTE PTR [rax],al
   14000aac5:	add    BYTE PTR [rax],al
   14000aac7:	add    BYTE PTR [rax],cl
   14000aac9:	scas   eax,DWORD PTR es:[rdi]
   14000aaca:	add    BYTE PTR [rax+0x1],al
   14000aacd:	add    BYTE PTR [rax],al
   14000aacf:	add    BYTE PTR [rbx],dh
   14000aad1:	(bad)  
   14000aad2:	add    BYTE PTR [rax],al
   14000aad4:	add    BYTE PTR [rax],al
   14000aad6:	add    BYTE PTR [rax],al
   14000aad8:	sbb    BYTE PTR [rdi+0x14000],ch
	...
   14000aaee:	add    BYTE PTR [rax],al
   14000aaf0:	jo     0x14000ab57
   14000aaf2:	jb     0x14000ab61
   14000aaf4:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14000aafb:	fs outs dx,BYTE PTR gs:[rsi]
   14000aafe:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14000ab05:	add    BYTE PTR [rax],al
   14000ab07:	add    BYTE PTR [rsi+0x69],ah
   14000ab0a:	ins    BYTE PTR es:[rdi],dx
   14000ab0b:	and    BYTE PTR gs:[rbp+0x78],ah
   14000ab0f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   14000ab16:	add    BYTE PTR [rax],al
   14000ab18:	outs   dx,BYTE PTR ds:[rsi]
   14000ab19:	outs   dx,DWORD PTR ds:[rsi]
   14000ab1a:	and    BYTE PTR [rbx+0x75],dh
   14000ab1d:	movsxd ebp,DWORD PTR [rax+0x20]
   14000ab20:	fs gs jbe 0x14000ab8d
   14000ab24:	movsxd esp,DWORD PTR [rbp+0x0]
   14000ab27:	add    BYTE PTR [rsi+0x69],ah
   14000ab2a:	ins    BYTE PTR es:[rdi],dx
   14000ab2b:	outs   dx,BYTE PTR gs:[rsi]
   14000ab2d:	(bad)  
   14000ab2e:	ins    DWORD PTR es:[rdi],dx
   14000ab2f:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14000ab34:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000ab38:	add    BYTE PTR [eax],al
   14000ab3b:	add    BYTE PTR [rax],al
   14000ab3d:	add    BYTE PTR [rax],al
   14000ab3f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   14000ab43:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   14000ab4a:	jb     0x14000abb1
   14000ab4c:	jae    0x14000abbd
   14000ab4e:	jne    0x14000abc2
   14000ab50:	movsxd esp,DWORD PTR [rbp+0x20]
   14000ab53:	(bad)  
   14000ab54:	jne    0x14000abc9
   14000ab56:	jns    0x14000ab58
   14000ab58:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   14000ab5f:	jb     0x14000ab61
   14000ab61:	add    BYTE PTR [rax],al
   14000ab63:	add    BYTE PTR [rax],al
   14000ab65:	add    BYTE PTR [rax],al
   14000ab67:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   14000ab6b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000ab70:	jns    0x14000ab92
   14000ab72:	outs   dx,BYTE PTR ds:[rsi]
   14000ab73:	outs   dx,DWORD PTR ds:[rsi]
   14000ab74:	je     0x14000ab96
   14000ab76:	gs ins DWORD PTR es:[rdi],dx
   14000ab78:	jo     0x14000abee
   14000ab7a:	jns    0x14000ab7c
   14000ab7c:	add    BYTE PTR [rax],al
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000ab87:	and    BYTE PTR [rcx+0x72],ah
   14000ab8a:	addr32 jne 0x14000abfa
   14000ab8d:	outs   dx,BYTE PTR gs:[rsi]
   14000ab8f:	je     0x14000ab91
   14000ab91:	add    BYTE PTR [rax],al
   14000ab93:	add    BYTE PTR [rax],al
   14000ab95:	add    BYTE PTR [rax],al
   14000ab97:	add    BYTE PTR [rsi+0x6f],ch
   14000ab9a:	and    BYTE PTR [rbx+0x70],dh
   14000ab9d:	(bad)  
   14000ab9e:	movsxd esp,DWORD PTR [rbp+0x20]
   14000aba1:	outs   dx,DWORD PTR ds:[rsi]
   14000aba2:	outs   dx,BYTE PTR ds:[rsi]
   14000aba3:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14000aba7:	imul   esp,DWORD PTR [rbx+0x65],0x0
   14000abae:	add    BYTE PTR [rax],al
   14000abb0:	outs   dx,BYTE PTR ds:[rsi]
   14000abb1:	outs   dx,DWORD PTR ds:[rsi]
   14000abb2:	and    BYTE PTR [rbx+0x75],dh
   14000abb5:	movsxd ebp,DWORD PTR [rax+0x20]
   14000abb8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   14000abbf:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14000abc3:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000abc8:	jns    0x14000abca
   14000abca:	add    BYTE PTR [rax],al
   14000abcc:	add    BYTE PTR [rax],al
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	data16 jne 0x14000ac41
   14000abd3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000abd7:	outs   dx,BYTE PTR ds:[rsi]
   14000abd8:	and    BYTE PTR [rsi+0x6f],ch
   14000abdb:	je     0x14000abfd
   14000abdd:	jae    0x14000ac54
   14000abdf:	jo     0x14000ac51
   14000abe1:	outs   dx,DWORD PTR ds:[rsi]
   14000abe2:	jb     0x14000ac58
   14000abe4:	gs add BYTE PTR fs:[rax],al
   14000abe8:	outs   dx,BYTE PTR ds:[rsi]
   14000abe9:	outs   dx,DWORD PTR ds:[rsi]
   14000abea:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14000abee:	imul   esp,DWORD PTR [rax],0x61
   14000abf1:	jbe    0x14000ac54
   14000abf3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14000abfb:	add    BYTE PTR [rax],al
   14000abfd:	add    BYTE PTR [rax],al
   14000abff:	add    BYTE PTR [rsi+0x6f],ch
   14000ac02:	je     0x14000ac24
   14000ac04:	outs   dx,BYTE PTR gs:[rsi]
   14000ac06:	outs   dx,DWORD PTR ds:[rsi]
   14000ac07:	jne    0x14000ac70
   14000ac09:	push   0x6d656d20
   14000ac0e:	outs   dx,DWORD PTR ds:[rsi]
   14000ac0f:	jb     0x14000ac8a
   14000ac11:	add    BYTE PTR [rax],al
   14000ac13:	add    BYTE PTR [rax],al
   14000ac15:	add    BYTE PTR [rax],al
   14000ac17:	add    BYTE PTR [rdx+0x65],dh
   14000ac1a:	jae    0x14000ac8b
   14000ac1c:	jne    0x14000ac90
   14000ac1e:	movsxd esp,DWORD PTR [rbp+0x20]
   14000ac21:	jne    0x14000ac91
   14000ac23:	(bad)  
   14000ac24:	jbe    0x14000ac87
   14000ac26:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   14000ac2e:	jb     0x14000aca9
   14000ac30:	and    BYTE PTR [rcx+0x67],ah
   14000ac33:	(bad)  
   14000ac34:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   14000ac3b:	jae    0x14000acb0
   14000ac3d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14000ac41:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   14000ac48:	imul   eax,DWORD PTR [rax],0x0
   14000ac4b:	add    BYTE PTR [rax],al
   14000ac4d:	add    BYTE PTR [rax],al
   14000ac4f:	add    BYTE PTR [rdi+0x70],ch
   14000ac52:	gs jb  0x14000acb6
   14000ac55:	je     0x14000acc0
   14000ac57:	outs   dx,DWORD PTR ds:[rsi]
   14000ac58:	outs   dx,BYTE PTR ds:[rsi]
   14000ac59:	and    BYTE PTR [rbx+0x61],ah
   14000ac5c:	outs   dx,BYTE PTR ds:[rsi]
   14000ac5d:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000ac60:	gs add BYTE PTR fs:[rax],al
   14000ac64:	add    BYTE PTR [rax],al
   14000ac66:	add    BYTE PTR [rax],al
   14000ac68:	je     0x14000acd9
   14000ac6a:	outs   dx,DWORD PTR ds:[rsi]
   14000ac6b:	and    BYTE PTR [rbp+0x61],ch
   14000ac6e:	outs   dx,BYTE PTR ds:[rsi]
   14000ac6f:	jns    0x14000ac91
   14000ac71:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   14000ac78:	jo     0x14000acdf
   14000ac7a:	outs   dx,BYTE PTR ds:[rsi]
   14000ac7b:	add    BYTE PTR [rax],al
   14000ac7d:	add    BYTE PTR [rax],al
   14000ac7f:	add    BYTE PTR [rax+0x65],dh
   14000ac82:	jb     0x14000acf1
   14000ac84:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   14000ac8b:	fs outs dx,BYTE PTR gs:[rsi]
   14000ac8e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14000ac95:	add    BYTE PTR [rax],al
   14000ac97:	add    BYTE PTR [rcx+0x64],ah
   14000ac9a:	fs jb  0x14000ad02
   14000ac9d:	jae    0x14000ad12
   14000ac9f:	pop    rdi
   14000aca0:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   14000aca7:	add    BYTE PTR [rcx+0x64],ah
   14000acaa:	fs jb  0x14000ad12
   14000acad:	jae    0x14000ad22
   14000acaf:	pop    rdi
   14000acb0:	outs   dx,BYTE PTR ds:[rsi]
   14000acb1:	outs   dx,DWORD PTR ds:[rsi]
   14000acb2:	je     0x14000ad13
   14000acb4:	(bad)  
   14000acb5:	jbe    0x14000ad18
   14000acb7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14000acbf:	add    BYTE PTR [rcx+0x64],ah
   14000acc2:	fs jb  0x14000ad2a
   14000acc5:	jae    0x14000ad3a
   14000acc7:	pop    rdi
   14000acc8:	data16 (bad) 
   14000acca:	ins    DWORD PTR es:[rdi],dx
   14000accb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   14000acd3:	jae    0x14000ad4a
   14000acd5:	jo     0x14000ad47
   14000acd7:	outs   dx,DWORD PTR ds:[rsi]
   14000acd8:	jb     0x14000ad4e
   14000acda:	gs add BYTE PTR fs:[rax],al
   14000acde:	add    BYTE PTR [rax],al
   14000ace0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000ace3:	outs   dx,BYTE PTR ds:[rsi]
   14000ace4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ace9:	outs   dx,BYTE PTR ds:[rsi]
   14000acea:	pop    rdi
   14000aceb:	(bad)  
   14000acec:	ins    BYTE PTR es:[rdi],dx
   14000aced:	jb     0x14000ad54
   14000acef:	(bad)  
   14000acf0:	fs jns 0x14000ad52
   14000acf3:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14000acfa:	jb     0x14000ad61
   14000acfc:	jae    0x14000ad71
   14000acfe:	add    BYTE PTR [rax],al
   14000ad00:	(bad)
   14000ad05:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   14000ad0d:	jb     0x14000ad78
   14000ad0f:	jo     0x14000ad85
   14000ad11:	outs   dx,DWORD PTR ds:[rsi]
   14000ad12:	jb     0x14000ad14
   14000ad14:	add    BYTE PTR [rax],al
   14000ad16:	add    BYTE PTR [rax],al
   14000ad18:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000ad1b:	outs   dx,BYTE PTR ds:[rsi]
   14000ad1c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ad21:	outs   dx,BYTE PTR ds:[rsi]
   14000ad22:	pop    rdi
   14000ad23:	(bad)  
   14000ad24:	(bad)  
   14000ad25:	outs   dx,DWORD PTR ds:[rsi]
   14000ad26:	jb     0x14000ad9c
   14000ad28:	gs add BYTE PTR fs:[rax],al
   14000ad2c:	add    BYTE PTR [rax],al
   14000ad2e:	add    BYTE PTR [rax],al
   14000ad30:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000ad33:	outs   dx,BYTE PTR ds:[rsi]
   14000ad34:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ad39:	outs   dx,BYTE PTR ds:[rsi]
   14000ad3a:	pop    rdi
   14000ad3b:	jb     0x14000ada2
   14000ad3d:	data16 jne 0x14000adb3
   14000ad40:	gs add BYTE PTR fs:[rax],al
   14000ad44:	add    BYTE PTR [rax],al
   14000ad46:	add    BYTE PTR [rax],al
   14000ad48:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000ad4b:	outs   dx,BYTE PTR ds:[rsi]
   14000ad4c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ad51:	outs   dx,BYTE PTR ds:[rsi]
   14000ad52:	pop    rdi
   14000ad53:	jb     0x14000adba
   14000ad55:	jae    0x14000adbc
   14000ad57:	je     0x14000ad59
   14000ad59:	add    BYTE PTR [rax],al
   14000ad5b:	add    BYTE PTR [rax],al
   14000ad5d:	add    BYTE PTR [rax],al
   14000ad5f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   14000ad63:	je     0x14000adce
   14000ad65:	outs   dx,BYTE PTR ds:[rsi]
   14000ad66:	(bad)  
   14000ad67:	je     0x14000add2
   14000ad69:	outs   dx,DWORD PTR ds:[rsi]
   14000ad6a:	outs   dx,BYTE PTR ds:[rsi]
   14000ad6b:	pop    rdi
   14000ad6c:	(bad)  
   14000ad6d:	fs fs jb 0x14000add6
   14000ad71:	jae    0x14000ade6
   14000ad73:	pop    rdi
   14000ad74:	jb     0x14000addb
   14000ad76:	jno    0x14000aded
   14000ad78:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14000ad7f:	add    BYTE PTR [rdx+0x61],ah
   14000ad82:	fs pop rdi
   14000ad84:	(bad)  
   14000ad85:	fs fs jb 0x14000adee
   14000ad89:	jae    0x14000adfe
   14000ad8b:	add    BYTE PTR [rax],al
   14000ad8d:	add    BYTE PTR [rax],al
   14000ad8f:	add    BYTE PTR [rax+0x6f],ch
   14000ad92:	jae    0x14000ae08
   14000ad94:	pop    rdi
   14000ad95:	jne    0x14000ae05
   14000ad97:	jb     0x14000adfe
   14000ad99:	(bad)  
   14000ad9a:	movsxd ebp,DWORD PTR [rax+0x61]
   14000ad9d:	(bad)  
   14000ad9e:	ins    BYTE PTR es:[rdi],dx
   14000ad9f:	add    BYTE PTR gs:[rax],al
   14000ada2:	add    BYTE PTR [rax],al
   14000ada4:	add    BYTE PTR [rax],al
   14000ada6:	add    BYTE PTR [rax],al
   14000ada8:	outs   dx,DWORD PTR ds:[rsi]
   14000ada9:	jo     0x14000ae10
   14000adab:	jb     0x14000ae0e
   14000adad:	je     0x14000ae18
   14000adaf:	outs   dx,DWORD PTR ds:[rsi]
   14000adb0:	outs   dx,BYTE PTR ds:[rsi]
   14000adb1:	pop    rdi
   14000adb2:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   14000adb9:	jb     0x14000ae20
   14000adbb:	jae    0x14000ae30
   14000adbd:	add    BYTE PTR [rax],al
   14000adbf:	add    BYTE PTR [rcx+0x6e],ch
   14000adc2:	je     0x14000ae29
   14000adc4:	jb     0x14000ae38
   14000adc6:	jne    0x14000ae38
   14000adc8:	je     0x14000ae2f
   14000adca:	add    BYTE PTR fs:[rax],al
   14000adcd:	add    BYTE PTR [rax],al
   14000adcf:	add    BYTE PTR [rcx+0x6e],ch
   14000add2:	jbe    0x14000ae35
   14000add4:	ins    BYTE PTR es:[rdi],dx
   14000add5:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   14000addd:	outs   dx,BYTE PTR gs:[rsi]
   14000addf:	je     0x14000ade1
   14000ade1:	add    BYTE PTR [rax],al
   14000ade3:	add    BYTE PTR [rax],al
   14000ade5:	add    BYTE PTR [rax],al
   14000ade7:	add    BYTE PTR [rcx+0x6c],ah
   14000adea:	jb     0x14000ae51
   14000adec:	(bad)  
   14000aded:	fs jns 0x14000ae4f
   14000adf0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000adf3:	outs   dx,BYTE PTR ds:[rsi]
   14000adf4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000adf9:	add    BYTE PTR [rax],al
   14000adfb:	add    BYTE PTR [rax],al
   14000adfd:	add    BYTE PTR [rax],al
   14000adff:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000ae03:	pop    rdi
   14000ae04:	ins    DWORD PTR es:[rdi],dx
   14000ae05:	(bad)  
   14000ae06:	outs   dx,BYTE PTR ds:[rsi]
   14000ae07:	jns    0x14000ae68
   14000ae09:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   14000ae10:	jo     0x14000ae77
   14000ae12:	outs   dx,BYTE PTR ds:[rsi]
   14000ae13:	add    BYTE PTR [rax],al
   14000ae15:	add    BYTE PTR [rax],al
   14000ae17:	add    BYTE PTR [rbp+0x65],ch
   14000ae1a:	jae    0x14000ae8f
   14000ae1c:	(bad)  
   14000ae1d:	addr32 gs pop rdi
   14000ae20:	jae    0x14000ae8b
   14000ae22:	jp     0x14000ae89
   14000ae24:	add    BYTE PTR [rax],al
   14000ae26:	add    BYTE PTR [rax],al
   14000ae28:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   14000ae2f:	gs pop rdi
   14000ae31:	je     0x14000aea2
   14000ae33:	outs   dx,DWORD PTR ds:[rsi]
   14000ae34:	pop    rdi
   14000ae35:	ins    BYTE PTR es:[rdi],dx
   14000ae36:	outs   dx,DWORD PTR ds:[rsi]
   14000ae37:	outs   dx,BYTE PTR ds:[rsi]
   14000ae38:	add    BYTE PTR [eax],al
   14000ae3b:	add    BYTE PTR [rax],al
   14000ae3d:	add    BYTE PTR [rax],al
   14000ae3f:	add    BYTE PTR [rsi+0x65],ch
   14000ae42:	je     0x14000aebb
   14000ae44:	outs   dx,DWORD PTR ds:[rsi]
   14000ae45:	jb     0x14000aeb2
   14000ae47:	pop    rdi
   14000ae48:	outs   dx,DWORD PTR fs:[rsi]
   14000ae4a:	ja     0x14000aeba
   14000ae4c:	add    BYTE PTR [rax],al
   14000ae4e:	add    BYTE PTR [rax],al
   14000ae50:	outs   dx,BYTE PTR ds:[rsi]
   14000ae51:	gs je  0x14000aecb
   14000ae54:	outs   dx,DWORD PTR ds:[rsi]
   14000ae55:	jb     0x14000aec2
   14000ae57:	pop    rdi
   14000ae58:	jb     0x14000aebf
   14000ae5a:	jae    0x14000aec1
   14000ae5c:	je     0x14000ae5e
   14000ae5e:	add    BYTE PTR [rax],al
   14000ae60:	outs   dx,BYTE PTR ds:[rsi]
   14000ae61:	gs je  0x14000aedb
   14000ae64:	outs   dx,DWORD PTR ds:[rsi]
   14000ae65:	jb     0x14000aed2
   14000ae67:	pop    rdi
   14000ae68:	jne    0x14000aed8
   14000ae6a:	jb     0x14000aed1
   14000ae6c:	(bad)  
   14000ae6d:	movsxd ebp,DWORD PTR [rax+0x61]
   14000ae70:	(bad)  
   14000ae71:	ins    BYTE PTR es:[rdi],dx
   14000ae72:	add    BYTE PTR gs:[rax],al
   14000ae75:	add    BYTE PTR [rax],al
   14000ae77:	add    BYTE PTR [rsi+0x6f],ch
   14000ae7a:	pop    rdi
   14000ae7b:	(bad)  
   14000ae7c:	jne    0x14000aee4
   14000ae7e:	data16 gs jb 0x14000aee1
   14000ae82:	jae    0x14000aef4
   14000ae84:	(bad)  
   14000ae85:	movsxd esp,DWORD PTR [rbp+0x0]
   14000ae88:	outs   dx,BYTE PTR ds:[rsi]
   14000ae89:	outs   dx,DWORD PTR ds:[rsi]
   14000ae8a:	pop    rdi
   14000ae8b:	jo     0x14000aeff
   14000ae8d:	outs   dx,DWORD PTR ds:[rsi]
   14000ae8e:	je     0x14000aeff
   14000ae90:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000ae93:	pop    rdi
   14000ae94:	outs   dx,DWORD PTR ds:[rsi]
   14000ae95:	jo     0x14000af0b
   14000ae97:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000ae9e:	add    BYTE PTR [rax],al
   14000aea0:	outs   dx,BYTE PTR ds:[rsi]
   14000aea1:	outs   dx,DWORD PTR ds:[rsi]
   14000aea2:	je     0x14000af03
   14000aea4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000aea7:	outs   dx,BYTE PTR ds:[rsi]
   14000aea8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000aead:	add    BYTE PTR [rax],al
   14000aeaf:	add    BYTE PTR [rsi+0x6f],ch
   14000aeb2:	je     0x14000af13
   14000aeb4:	(bad)  
   14000aeb5:	pop    rdi
   14000aeb6:	jae    0x14000af27
   14000aeb8:	movsxd ebp,DWORD PTR [rbx+0x65]
   14000aebb:	je     0x14000aebd
   14000aebd:	add    BYTE PTR [rax],al
   14000aebf:	add    BYTE PTR [rdi+0x70],ch
   14000aec2:	gs jb  0x14000af26
   14000aec5:	je     0x14000af30
   14000aec7:	outs   dx,DWORD PTR ds:[rsi]
   14000aec8:	outs   dx,BYTE PTR ds:[rsi]
   14000aec9:	pop    rdi
   14000aeca:	outs   dx,BYTE PTR ds:[rsi]
   14000aecb:	outs   dx,DWORD PTR ds:[rsi]
   14000aecc:	je     0x14000af2d
   14000aece:	jae    0x14000af45
   14000aed0:	jo     0x14000af42
   14000aed2:	outs   dx,DWORD PTR ds:[rsi]
   14000aed3:	jb     0x14000af49
   14000aed5:	gs add BYTE PTR fs:[rax+0x72],dh
   14000aeda:	outs   dx,DWORD PTR ds:[rsi]
   14000aedb:	je     0x14000af4c
   14000aedd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000aee0:	pop    rdi
   14000aee1:	outs   dx,BYTE PTR ds:[rsi]
   14000aee2:	outs   dx,DWORD PTR ds:[rsi]
   14000aee3:	je     0x14000af44
   14000aee5:	jae    0x14000af5c
   14000aee7:	jo     0x14000af59
   14000aee9:	outs   dx,DWORD PTR ds:[rsi]
   14000aeea:	jb     0x14000af60
   14000aeec:	gs add BYTE PTR fs:[rax],al
   14000aef0:	ja     0x14000af64
   14000aef2:	outs   dx,DWORD PTR ds:[rsi]
   14000aef3:	outs   dx,BYTE PTR ds:[rsi]
   14000aef4:	addr32 pop rdi
   14000aef6:	jo     0x14000af6a
   14000aef8:	outs   dx,DWORD PTR ds:[rsi]
   14000aef9:	je     0x14000af6a
   14000aefb:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000aefe:	pop    rdi
   14000aeff:	je     0x14000af7a
   14000af01:	jo     0x14000af68
   14000af03:	add    BYTE PTR [rax],al
   14000af05:	add    BYTE PTR [rax],al
   14000af07:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   14000af0b:	gs fs pop rdi
   14000af0e:	outs   dx,DWORD PTR ds:[rsi]
   14000af0f:	jne    0x14000af85
   14000af11:	add    BYTE PTR [rax],al
   14000af13:	add    BYTE PTR [rax],al
   14000af15:	add    BYTE PTR [rax],al
   14000af17:	add    BYTE PTR [rdi+0x70],ch
   14000af1a:	gs jb  0x14000af7e
   14000af1d:	je     0x14000af88
   14000af1f:	outs   dx,DWORD PTR ds:[rsi]
   14000af20:	outs   dx,BYTE PTR ds:[rsi]
   14000af21:	pop    rdi
   14000af22:	ja     0x14000af93
   14000af24:	jne    0x14000af92
   14000af26:	fs pop rdi
   14000af28:	(bad)  
   14000af29:	ins    BYTE PTR es:[rdi],dx
   14000af2a:	outs   dx,DWORD PTR ds:[rsi]
   14000af2b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000af2e:	add    BYTE PTR [rax],al
   14000af30:	data16 add BYTE PTR [rax],al
   14000af33:	add    BYTE PTR [rax],al
   14000af35:	add    BYTE PTR [rax],al
   14000af37:	add    BYTE PTR [rax],ah
   14000af39:	mov    ah,0x0
   14000af3b:	rex add DWORD PTR [rax],eax
   14000af3e:	add    BYTE PTR [rax],al
   14000af40:	add    BYTE PTR fs:[rax],al
   14000af43:	add    BYTE PTR [rax],al
   14000af45:	add    BYTE PTR [rax],al
   14000af47:	add    BYTE PTR [rax-0x4c],al
   14000af4a:	add    BYTE PTR [rax+0x1],al
   14000af4d:	add    BYTE PTR [rax],al
   14000af4f:	add    BYTE PTR [rbp+0x0],ah
   14000af52:	add    BYTE PTR [rax],al
   14000af54:	add    BYTE PTR [rax],al
   14000af56:	add    BYTE PTR [rax],al
   14000af58:	push   rax
   14000af59:	mov    ah,0x0
   14000af5b:	rex add DWORD PTR [rax],eax
   14000af5e:	add    BYTE PTR [rax],al
   14000af60:	jno    0x14000af62
   14000af62:	add    BYTE PTR [rax],al
   14000af64:	add    BYTE PTR [rax],al
   14000af66:	add    BYTE PTR [rax],al
   14000af68:	push   0x14000b4
   14000af6d:	add    BYTE PTR [rax],al
   14000af6f:	add    BYTE PTR [rdi],al
   14000af71:	add    BYTE PTR [rax],al
   14000af73:	add    BYTE PTR [rax],al
   14000af75:	add    BYTE PTR [rax],al
   14000af77:	add    BYTE PTR [rax+0x14000b4],al
   14000af7d:	add    BYTE PTR [rax],al
   14000af7f:	add    BYTE PTR [rcx],ah
   14000af81:	add    BYTE PTR [rax],al
   14000af83:	add    BYTE PTR [rax],al
   14000af85:	add    BYTE PTR [rax],al
   14000af87:	add    BYTE PTR [rax+0x14000b4],bl
   14000af8d:	add    BYTE PTR [rax],al
   14000af8f:	add    BYTE PTR [rsi],cl
   14000af91:	add    BYTE PTR [rax],al
   14000af93:	add    BYTE PTR [rax],al
   14000af95:	add    BYTE PTR [rax],al
   14000af97:	add    BYTE PTR [rax+0x14000b4],dh
   14000af9d:	add    BYTE PTR [rax],al
   14000af9f:	add    BYTE PTR [rcx],cl
   14000afa1:	add    BYTE PTR [rax],al
   14000afa3:	add    BYTE PTR [rax],al
   14000afa5:	add    BYTE PTR [rax],al
   14000afa7:	add    al,al
   14000afa9:	mov    ah,0x0
   14000afab:	rex add DWORD PTR [rax],eax
   14000afae:	add    BYTE PTR [rax],al
   14000afb0:	push   0x0
   14000afb5:	add    BYTE PTR [rax],al
   14000afb7:	add    al,bl
   14000afb9:	mov    ah,0x0
   14000afbb:	rex add DWORD PTR [rax],eax
   14000afbe:	add    BYTE PTR [rax],al
   14000afc0:	and    BYTE PTR [rax],al
   14000afc2:	add    BYTE PTR [rax],al
   14000afc4:	add    BYTE PTR [rax],al
   14000afc6:	add    BYTE PTR [rax],al
   14000afc8:	call   0x14140b081
   14000afcd:	add    BYTE PTR [rax],al
   14000afcf:	add    BYTE PTR [rdx+0x0],ch
   14000afd2:	add    BYTE PTR [rax],al
   14000afd4:	add    BYTE PTR [rax],al
   14000afd6:	add    BYTE PTR [rax],al
   14000afd8:	clc    
   14000afd9:	mov    ah,0x0
   14000afdb:	rex add DWORD PTR [rax],eax
   14000afde:	add    BYTE PTR [rax],al
   14000afe0:	add    BYTE PTR [eax],al
   14000afe3:	add    BYTE PTR [rax],al
   14000afe5:	add    BYTE PTR [rax],al
   14000afe7:	add    BYTE PTR [rax],dl
   14000afe9:	mov    ch,0x0
   14000afeb:	rex add DWORD PTR [rax],eax
   14000afee:	add    BYTE PTR [rax],al
   14000aff0:	imul   eax,DWORD PTR [rax],0x0
   14000aff3:	add    BYTE PTR [rax],al
   14000aff5:	add    BYTE PTR [rax],al
   14000aff7:	add    BYTE PTR [rax],dh
   14000aff9:	mov    ch,0x0
   14000affb:	rex add DWORD PTR [rax],eax
   14000affe:	add    BYTE PTR [rax],al
   14000b000:	ins    BYTE PTR es:[rdi],dx
   14000b001:	add    BYTE PTR [rax],al
   14000b003:	add    BYTE PTR [rax],al
   14000b005:	add    BYTE PTR [rax],al
   14000b007:	add    BYTE PTR [rax-0x4b],cl
   14000b00a:	add    BYTE PTR [rax+0x1],al
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rdx],dl
   14000b011:	add    BYTE PTR [rax],al
   14000b013:	add    BYTE PTR [rax],al
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    BYTE PTR [rax],bh
   14000b019:	lods   al,BYTE PTR ds:[rsi]
   14000b01a:	add    BYTE PTR [rax+0x1],al
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    BYTE PTR [rbp+0x0],ch
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	add    BYTE PTR [rax],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	(bad)  
   14000b029:	mov    ch,0x0
   14000b02b:	rex add DWORD PTR [rax],eax
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	adc    BYTE PTR [rax],al
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	add    BYTE PTR [rax],al
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	rex stos DWORD PTR es:[rdi],eax
   14000b03a:	add    BYTE PTR [rax+0x1],al
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rcx],ch
   14000b041:	add    BYTE PTR [rax],al
   14000b043:	add    BYTE PTR [rax],al
   14000b045:	add    BYTE PTR [rax],al
   14000b047:	add    BYTE PTR [rax-0x55],ch
   14000b04a:	add    BYTE PTR [rax+0x1],al
   14000b04d:	add    BYTE PTR [rax],al
   14000b04f:	add    BYTE PTR [rax],cl
   14000b051:	add    BYTE PTR [rax],al
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    BYTE PTR [rax+0x14000b5],al
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	add    BYTE PTR [rcx],dl
   14000b061:	add    BYTE PTR [rax],al
   14000b063:	add    BYTE PTR [rax],al
   14000b065:	add    BYTE PTR [rax],al
   14000b067:	add    BYTE PTR [rax],cl
   14000b069:	stos   DWORD PTR es:[rdi],eax
   14000b06a:	add    BYTE PTR [rax+0x1],al
   14000b06d:	add    BYTE PTR [rax],al
   14000b06f:	add    BYTE PTR [rbx],bl
   14000b071:	add    BYTE PTR [rax],al
   14000b073:	add    BYTE PTR [rax],al
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    BYTE PTR [rax+0x14000b5],bl
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    BYTE PTR [rsi],ah
   14000b081:	add    BYTE PTR [rax],al
   14000b083:	add    BYTE PTR [rax],al
   14000b085:	add    BYTE PTR [rax],al
   14000b087:	add    BYTE PTR [rax],ch
   14000b089:	stos   DWORD PTR es:[rdi],eax
   14000b08a:	add    BYTE PTR [rax+0x1],al
   14000b08d:	add    BYTE PTR [rax],al
   14000b08f:	add    BYTE PTR [rax],ch
   14000b091:	add    BYTE PTR [rax],al
   14000b093:	add    BYTE PTR [rax],al
   14000b095:	add    BYTE PTR [rax],al
   14000b097:	add    al,dl
   14000b099:	stos   DWORD PTR es:[rdi],eax
   14000b09a:	add    BYTE PTR [rax+0x1],al
   14000b09d:	add    BYTE PTR [rax],al
   14000b09f:	add    BYTE PTR [rsi+0x0],ch
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	add    BYTE PTR [rax],al
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	test   al,0xb5
   14000b0aa:	add    BYTE PTR [rax+0x1],al
   14000b0ad:	add    BYTE PTR [rax],al
   14000b0af:	add    BYTE PTR [rdi+0x0],ch
   14000b0b2:	add    BYTE PTR [rax],al
   14000b0b4:	add    BYTE PTR [rax],al
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	shl    BYTE PTR [rbp+0x14000],0x0
   14000b0bf:	add    BYTE PTR [rdx],ch
   14000b0c1:	add    BYTE PTR [rax],al
   14000b0c3:	add    BYTE PTR [rax],al
   14000b0c5:	add    BYTE PTR [rax],al
   14000b0c7:	add    al,bl
   14000b0c9:	mov    ch,0x0
   14000b0cb:	rex add DWORD PTR [rax],eax
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	sbb    DWORD PTR [rax],eax
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	add    BYTE PTR [rax],al
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	lock mov ch,0x0
   14000b0db:	rex add DWORD PTR [rax],eax
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	add    al,0x0
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	add    BYTE PTR [rax],al
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	shr    BYTE PTR [rbp+0x14000],0x0
   14000b0ef:	add    BYTE PTR [rsi],dl
   14000b0f1:	add    BYTE PTR [rax],al
   14000b0f3:	add    BYTE PTR [rax],al
   14000b0f5:	add    BYTE PTR [rax],al
   14000b0f7:	add    BYTE PTR [rax+0x14000ab],al
   14000b0fd:	add    BYTE PTR [rax],al
   14000b0ff:	add    BYTE PTR [rip+0x0],bl        # 0x14000b105
   14000b105:	add    BYTE PTR [rax],al
   14000b107:	add    BYTE PTR [rax],bl
   14000b109:	mov    dh,0x0
   14000b10b:	rex add DWORD PTR [rax],eax
   14000b10e:	add    BYTE PTR [rax],al
   14000b110:	add    eax,0x0
   14000b115:	add    BYTE PTR [rax],al
   14000b117:	add    BYTE PTR [rax-0x55],bl
   14000b11a:	add    BYTE PTR [rax+0x1],al
   14000b11d:	add    BYTE PTR [rax],al
   14000b11f:	add    BYTE PTR [rip+0x0],dl        # 0x14000b125
   14000b125:	add    BYTE PTR [rax],al
   14000b127:	add    BYTE PTR [rax],ch
   14000b129:	mov    dh,0x0
   14000b12b:	rex add DWORD PTR [rax],eax
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	jae    0x14000b132
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	add    BYTE PTR [rax],al
   14000b136:	add    BYTE PTR [rax],al
   14000b138:	cmp    BYTE PTR [rsi+0x14000],dh
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	je     0x14000b142
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	add    BYTE PTR [rax],al
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	rex.W mov sil,0x0
   14000b14b:	rex add DWORD PTR [rax],eax
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	jne    0x14000b152
   14000b152:	add    BYTE PTR [rax],al
   14000b154:	add    BYTE PTR [rax],al
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	pop    rax
   14000b159:	mov    dh,0x0
   14000b15b:	rex add DWORD PTR [rax],eax
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	jbe    0x14000b162
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	add    BYTE PTR [rax],al
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	push   0x14000b6
   14000b16d:	add    BYTE PTR [rax],al
   14000b16f:	add    BYTE PTR [rdi+0x0],dh
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	add    BYTE PTR [rax],al
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	xor    BYTE PTR [rsi+0x14000],0x0
   14000b17f:	add    BYTE PTR [rdx],cl
   14000b181:	add    BYTE PTR [rax],al
   14000b183:	add    BYTE PTR [rax],al
   14000b185:	add    BYTE PTR [rax],al
   14000b187:	add    BYTE PTR [rax+0x14000b6],dl
   14000b18d:	add    BYTE PTR [rax],al
   14000b18f:	add    BYTE PTR [rcx+0x0],bh
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	add    BYTE PTR [rax],al
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	test   al,0xb6
   14000b19a:	add    BYTE PTR [rax+0x1],al
   14000b19d:	add    BYTE PTR [rax],al
   14000b19f:	add    BYTE PTR [rdi],ah
   14000b1a1:	add    BYTE PTR [rax],al
   14000b1a3:	add    BYTE PTR [rax],al
   14000b1a5:	add    BYTE PTR [rax],al
   14000b1a7:	add    al,ch
   14000b1a9:	stos   DWORD PTR es:[rdi],eax
   14000b1aa:	add    BYTE PTR [rax+0x1],al
   14000b1ad:	add    BYTE PTR [rax],al
   14000b1af:	add    BYTE PTR [rax+0x0],bh
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	add    BYTE PTR [rax],al
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	mov    al,0xb6
   14000b1ba:	add    BYTE PTR [rax+0x1],al
   14000b1bd:	add    BYTE PTR [rax],al
   14000b1bf:	add    BYTE PTR [rdx+0x0],bh
   14000b1c2:	add    BYTE PTR [rax],al
   14000b1c4:	add    BYTE PTR [rax],al
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	enter  0xb6,0x40
   14000b1cc:	add    DWORD PTR [rax],eax
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	jnp    0x14000b1d2
   14000b1d2:	add    BYTE PTR [rax],al
   14000b1d4:	add    BYTE PTR [rax],al
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	fdiv   DWORD PTR [rsi+0x14000]
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	sbb    al,0x0
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	add    BYTE PTR [rax],al
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	cwde   
   14000b1e9:	stos   DWORD PTR es:[rdi],eax
   14000b1ea:	add    BYTE PTR [rax+0x1],al
   14000b1ed:	add    BYTE PTR [rax],al
   14000b1ef:	add    BYTE PTR [rax+rax*1+0x0],bh
   14000b1f3:	add    BYTE PTR [rax],al
   14000b1f5:	add    BYTE PTR [rax],al
   14000b1f7:	add    al,dh
   14000b1f9:	mov    dh,0x0
   14000b1fb:	rex add DWORD PTR [rax],eax
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	(bad)  
   14000b201:	add    BYTE PTR [rax],al
   14000b203:	add    BYTE PTR [rax],al
   14000b205:	add    BYTE PTR [rax],al
   14000b207:	add    BYTE PTR [rax],cl
   14000b209:	mov    bh,0x0
   14000b20b:	rex add DWORD PTR [rax],eax
   14000b20e:	add    BYTE PTR [rax],al
   14000b210:	adc    eax,DWORD PTR [rax]
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	add    BYTE PTR [rax],al
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	sbb    BYTE PTR [rbx+0x14000],ch
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	add    al,BYTE PTR [rax]
   14000b222:	add    BYTE PTR [rax],al
   14000b224:	add    BYTE PTR [rax],al
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	mov    al,0xab
   14000b22a:	add    BYTE PTR [rax+0x1],al
   14000b22d:	add    BYTE PTR [rax],al
   14000b22f:	add    BYTE PTR [rbx],al
   14000b231:	add    BYTE PTR [rax],al
   14000b233:	add    BYTE PTR [rax],al
   14000b235:	add    BYTE PTR [rax],al
   14000b237:	add    BYTE PTR [rax],ch
   14000b239:	mov    bh,0x0
   14000b23b:	rex add DWORD PTR [rax],eax
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	adc    al,0x0
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	add    BYTE PTR [rax],al
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	cmp    BYTE PTR [rdi+0x14000],dh
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	add    BYTE PTR [rax],0x0
   14000b253:	add    BYTE PTR [rax],al
   14000b255:	add    BYTE PTR [rax],al
   14000b257:	add    BYTE PTR [rax-0x49],cl
   14000b25a:	add    BYTE PTR [rax+0x1],al
   14000b25d:	add    BYTE PTR [rax],al
   14000b25f:	add    BYTE PTR [rbp+0x0],bh
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	add    BYTE PTR [rax],al
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	pop    rax
   14000b269:	mov    bh,0x0
   14000b26b:	rex add DWORD PTR [rax],eax
   14000b26e:	add    BYTE PTR [rax],al
   14000b270:	jle    0x14000b272
   14000b272:	add    BYTE PTR [rax],al
   14000b274:	add    BYTE PTR [rax],al
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	push   0x14000b7
   14000b27d:	add    BYTE PTR [rax],al
   14000b27f:	add    BYTE PTR [rax+rax*1],cl
   14000b282:	add    BYTE PTR [rax],al
   14000b284:	add    BYTE PTR [rax],al
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	add    BYTE PTR [rax+rax*1+0x140],ch
   14000b28f:	add    BYTE PTR [rcx+0x0],al
   14000b295:	add    BYTE PTR [rax],al
   14000b297:	add    BYTE PTR [rax-0x49],bh
   14000b29a:	add    BYTE PTR [rax+0x1],al
   14000b29d:	add    BYTE PTR [rax],al
   14000b29f:	add    BYTE PTR [rcx+0x0],ch
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	add    BYTE PTR [rax],al
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	push   rax
   14000b2a9:	lods   al,BYTE PTR ds:[rsi]
   14000b2aa:	add    BYTE PTR [rax+0x1],al
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rax+0x0],dh
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	add    BYTE PTR [rax],al
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	mov    BYTE PTR [rdi+0x14000],dh
   14000b2be:	add    BYTE PTR [rax],al
   14000b2c0:	add    DWORD PTR [rax],eax
   14000b2c2:	add    BYTE PTR [rax],al
   14000b2c4:	add    BYTE PTR [rax],al
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	movabs al,ds:0x82000000014000b7
   14000b2d1:	add    BYTE PTR [rax],al
   14000b2d3:	add    BYTE PTR [rax],al
   14000b2d5:	add    BYTE PTR [rax],al
   14000b2d7:	add    BYTE PTR [rax+0x14000b7],bh
   14000b2dd:	add    BYTE PTR [rax],al
   14000b2df:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	shl    BYTE PTR [rdi+0x14000],1
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	test   DWORD PTR [rax],eax
   14000b2f2:	add    BYTE PTR [rax],al
   14000b2f4:	add    BYTE PTR [rax],al
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	call   0x14140b3b4
   14000b2fd:	add    BYTE PTR [rax],al
   14000b2ff:	add    BYTE PTR [rip+0x0],cl        # 0x14000b305
   14000b305:	add    BYTE PTR [rax],al
   14000b307:	add    al,dh
   14000b309:	stos   BYTE PTR es:[rdi],al
   14000b30a:	add    BYTE PTR [rax+0x1],al
   14000b30d:	add    BYTE PTR [rax],al
   14000b30f:	add    BYTE PTR [rsi+0x0],al
   14000b315:	add    BYTE PTR [rax],al
   14000b317:	add    al,bh
   14000b319:	mov    bh,0x0
   14000b31b:	rex add DWORD PTR [rax],eax
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	xchg   DWORD PTR [rax],eax
   14000b322:	add    BYTE PTR [rax],al
   14000b324:	add    BYTE PTR [rax],al
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	or     BYTE PTR [rax+0x14000],bh
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	(bad)  
   14000b331:	add    BYTE PTR [rax],al
   14000b333:	add    BYTE PTR [rax],al
   14000b335:	add    BYTE PTR [rax],al
   14000b337:	add    BYTE PTR [rax],ah
   14000b339:	mov    eax,0x14000
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	and    al,0x0
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	add    BYTE PTR [rax],al
   14000b346:	add    BYTE PTR [rax],al
   14000b348:	cmp    BYTE PTR [rax+0x14000],bh
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	or     eax,DWORD PTR [rax]
   14000b352:	add    BYTE PTR [rax],al
   14000b354:	add    BYTE PTR [rax],al
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	sbb    BYTE PTR [rax+rax*1+0x140],ch
   14000b35f:	add    BYTE PTR [rdx],ah
   14000b361:	add    BYTE PTR [rax],al
   14000b363:	add    BYTE PTR [rax],al
   14000b365:	add    BYTE PTR [rax],al
   14000b367:	add    BYTE PTR [rax-0x48],bl
   14000b36a:	add    BYTE PTR [rax+0x1],al
   14000b36d:	add    BYTE PTR [rax],al
   14000b36f:	add    BYTE PTR [rdi+0x0],bh
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	add    BYTE PTR [rax],al
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	jo     0x14000b332
   14000b37a:	add    BYTE PTR [rax+0x1],al
   14000b37d:	add    BYTE PTR [rax],al
   14000b37f:	add    BYTE PTR [rcx+0x0],cl
   14000b385:	add    BYTE PTR [rax],al
   14000b387:	add    BYTE PTR [rax+0x14000b8],cl
   14000b38d:	add    BYTE PTR [rax],al
   14000b38f:	add    BYTE PTR [rbx+0x0],cl
   14000b395:	add    BYTE PTR [rax],al
   14000b397:	add    BYTE PTR [rax+0x14000b8],bl
   14000b39d:	add    BYTE PTR [rax],al
   14000b39f:	add    BYTE PTR [rdx+0x0],cl
   14000b3a5:	add    BYTE PTR [rax],al
   14000b3a7:	add    BYTE PTR [rax+0x14000b8],ch
   14000b3ad:	add    BYTE PTR [rax],al
   14000b3af:	add    BYTE PTR [rdi],dl
   14000b3b1:	add    BYTE PTR [rax],al
   14000b3b3:	add    BYTE PTR [rax],al
   14000b3b5:	add    BYTE PTR [rax],al
   14000b3b7:	add    BYTE PTR [rax+0x14000b8],bh
   14000b3bd:	add    BYTE PTR [rax],al
   14000b3bf:	add    BYTE PTR [rax],bl
   14000b3c1:	add    BYTE PTR [rax],al
   14000b3c3:	add    BYTE PTR [rax],al
   14000b3c5:	add    BYTE PTR [rax],al
   14000b3c7:	add    BYTE PTR [rax-0x54],ch
   14000b3ca:	add    BYTE PTR [rax+0x1],al
   14000b3cd:	add    BYTE PTR [rax],al
   14000b3cf:	add    BYTE PTR [rdi],bl
   14000b3d1:	add    BYTE PTR [rax],al
   14000b3d3:	add    BYTE PTR [rax],al
   14000b3d5:	add    BYTE PTR [rax],al
   14000b3d7:	add    al,bl
   14000b3d9:	mov    eax,0x14000
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	jb     0x14000b3e2
   14000b3e2:	add    BYTE PTR [rax],al
   14000b3e4:	add    BYTE PTR [rax],al
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	call   0x14140b4a5
   14000b3ed:	add    BYTE PTR [rax],al
   14000b3ef:	add    BYTE PTR [rax+rax*1+0x0],al
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	or     BYTE PTR [rcx+0x14000],bh
   14000b3fe:	add    BYTE PTR [rax],al
   14000b400:	mov    BYTE PTR [rax],al
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	add    BYTE PTR [rax],al
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	sbb    BYTE PTR [rcx+0x14000],bh
	...
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	(bad)  
   14000b421:	fs fs jb 0x14000b48a
   14000b425:	jae    0x14000b49a
   14000b427:	and    BYTE PTR [rsi+0x61],ah
   14000b42a:	ins    DWORD PTR es:[rdi],dx
   14000b42b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   14000b433:	jae    0x14000b4aa
   14000b435:	jo     0x14000b4a7
   14000b437:	outs   dx,DWORD PTR ds:[rsi]
   14000b438:	jb     0x14000b4ae
   14000b43a:	gs add BYTE PTR fs:[rax],al
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	(bad)  
   14000b441:	fs fs jb 0x14000b4aa
   14000b445:	jae    0x14000b4ba
   14000b447:	and    BYTE PTR [rcx+0x6e],ch
   14000b44a:	and    BYTE PTR [rbp+0x73],dh
   14000b44d:	add    BYTE PTR gs:[rax],al
   14000b450:	(bad)  
   14000b451:	fs fs jb 0x14000b4ba
   14000b455:	jae    0x14000b4ca
   14000b457:	and    BYTE PTR [rsi+0x6f],ch
   14000b45a:	je     0x14000b47c
   14000b45c:	(bad)  
   14000b45d:	jbe    0x14000b4c0
   14000b45f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14000b467:	add    BYTE PTR [rcx+0x6c],ah
   14000b46a:	jb     0x14000b4d1
   14000b46c:	(bad)  
   14000b46d:	fs jns 0x14000b490
   14000b470:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000b473:	outs   dx,BYTE PTR ds:[rsi]
   14000b474:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000b479:	add    BYTE PTR [rax],al
   14000b47b:	add    BYTE PTR [rax],al
   14000b47d:	add    BYTE PTR [rax],al
   14000b47f:	add    BYTE PTR [rcx+0x72],ah
   14000b482:	addr32 jne 0x14000b4f2
   14000b485:	outs   dx,BYTE PTR gs:[rsi]
   14000b487:	je     0x14000b4a9
   14000b489:	ins    BYTE PTR es:[rdi],dx
   14000b48a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   14000b491:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000b495:	add    BYTE PTR [eax],al
   14000b498:	(bad)  
   14000b499:	jb     0x14000b502
   14000b49b:	jne    0x14000b50a
   14000b49d:	outs   dx,BYTE PTR gs:[rsi]
   14000b49f:	je     0x14000b4c1
   14000b4a1:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a2:	jne    0x14000b518
   14000b4a4:	and    BYTE PTR [rdi+0x66],ch
   14000b4a7:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   14000b4ab:	(bad)  
   14000b4ac:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   14000b4b3:	and    BYTE PTR [rcx+0x64],ah
   14000b4b6:	fs jb  0x14000b51e
   14000b4b9:	jae    0x14000b52e
   14000b4bb:	add    BYTE PTR [rax],al
   14000b4bd:	add    BYTE PTR [rax],al
   14000b4bf:	add    BYTE PTR [rdx+0x61],ah
   14000b4c2:	and    BYTE PTR fs:[rsi+0x69],ah
   14000b4c6:	ins    BYTE PTR es:[rdi],dx
   14000b4c7:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14000b4cc:	movsxd esi,DWORD PTR [rdx+0x69]
   14000b4cf:	jo     0x14000b545
   14000b4d1:	outs   dx,DWORD PTR ds:[rsi]
   14000b4d2:	jb     0x14000b4d4
   14000b4d4:	add    BYTE PTR [rax],al
   14000b4d6:	add    BYTE PTR [rax],al
   14000b4d8:	(bad)
   14000b4dd:	gs jae 0x14000b553
   14000b4e0:	(bad)  
   14000b4e1:	add    BYTE PTR gs:[eax],al
   14000b4e5:	add    BYTE PTR [rax],al
   14000b4e7:	add    BYTE PTR [rdx+0x72],ah
   14000b4ea:	outs   dx,DWORD PTR ds:[rsi]
   14000b4eb:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14000b4ef:	jo     0x14000b55a
   14000b4f1:	jo     0x14000b558
   14000b4f3:	add    BYTE PTR [rax],al
   14000b4f5:	add    BYTE PTR [rax],al
   14000b4f7:	add    BYTE PTR [rbx+0x6f],ah
   14000b4fa:	outs   dx,BYTE PTR ds:[rsi]
   14000b4fb:	outs   dx,BYTE PTR ds:[rsi]
   14000b4fc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b501:	outs   dx,BYTE PTR ds:[rsi]
   14000b502:	and    BYTE PTR [rcx+0x62],ah
   14000b505:	outs   dx,DWORD PTR ds:[rsi]
   14000b506:	jb     0x14000b57c
   14000b508:	gs add BYTE PTR fs:[rax],al
   14000b50c:	add    BYTE PTR [rax],al
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000b513:	outs   dx,BYTE PTR ds:[rsi]
   14000b514:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b519:	outs   dx,BYTE PTR ds:[rsi]
   14000b51a:	and    BYTE PTR [rcx+0x6c],ah
   14000b51d:	jb     0x14000b584
   14000b51f:	(bad)  
   14000b520:	fs jns 0x14000b543
   14000b523:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   14000b52a:	jb     0x14000b591
   14000b52c:	jae    0x14000b5a1
   14000b52e:	add    BYTE PTR [rax],al
   14000b530:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000b533:	outs   dx,BYTE PTR ds:[rsi]
   14000b534:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b539:	outs   dx,BYTE PTR ds:[rsi]
   14000b53a:	and    BYTE PTR [rdx+0x65],dh
   14000b53d:	data16 jne 0x14000b5b3
   14000b540:	gs add BYTE PTR fs:[rax],al
   14000b544:	add    BYTE PTR [rax],al
   14000b546:	add    BYTE PTR [rax],al
   14000b548:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000b54b:	outs   dx,BYTE PTR ds:[rsi]
   14000b54c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b551:	outs   dx,BYTE PTR ds:[rsi]
   14000b552:	and    BYTE PTR [rdx+0x65],dh
   14000b555:	jae    0x14000b5bc
   14000b557:	je     0x14000b559
   14000b559:	add    BYTE PTR [rax],al
   14000b55b:	add    BYTE PTR [rax],al
   14000b55d:	add    BYTE PTR [rax],al
   14000b55f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   14000b563:	je     0x14000b5ce
   14000b565:	outs   dx,BYTE PTR ds:[rsi]
   14000b566:	(bad)  
   14000b567:	je     0x14000b5d2
   14000b569:	outs   dx,DWORD PTR ds:[rsi]
   14000b56a:	outs   dx,BYTE PTR ds:[rsi]
   14000b56b:	and    BYTE PTR [rcx+0x64],ah
   14000b56e:	fs jb  0x14000b5d6
   14000b571:	jae    0x14000b5e6
   14000b573:	and    BYTE PTR [rdx+0x65],dh
   14000b576:	jno    0x14000b5ed
   14000b578:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14000b57f:	add    BYTE PTR [rbp+0x78],ah
   14000b582:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   14000b586:	(bad)  
   14000b587:	(bad)  
   14000b588:	ins    BYTE PTR es:[rdi],dx
   14000b589:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000b58d:	jb     0x14000b5fc
   14000b58f:	(bad)  
   14000b590:	je     0x14000b5b2
   14000b592:	gs jb  0x14000b607
   14000b595:	outs   dx,DWORD PTR ds:[rsi]
   14000b596:	jb     0x14000b598
   14000b598:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14000b59f:	outs   dx,DWORD PTR ds:[rsi]
   14000b5a0:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14000b5a4:	add    BYTE PTR gs:[eax],al
   14000b5a8:	push   0x2074736f
   14000b5ad:	jne    0x14000b61d
   14000b5af:	jb     0x14000b616
   14000b5b1:	(bad)  
   14000b5b2:	movsxd ebp,DWORD PTR [rax+0x61]
   14000b5b5:	(bad)  
   14000b5b6:	ins    BYTE PTR es:[rdi],dx
   14000b5b7:	add    BYTE PTR gs:[rax],al
   14000b5ba:	add    BYTE PTR [rax],al
   14000b5bc:	add    BYTE PTR [rax],al
   14000b5be:	add    BYTE PTR [rax],al
   14000b5c0:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   14000b5c8:	gs jb  0x14000b5eb
   14000b5cb:	jb     0x14000b632
   14000b5cd:	ins    DWORD PTR es:[rdi],dx
   14000b5ce:	outs   dx,DWORD PTR ds:[rsi]
   14000b5cf:	jbe    0x14000b636
   14000b5d1:	add    BYTE PTR fs:[rax],al
   14000b5d4:	add    BYTE PTR [rax],al
   14000b5d6:	add    BYTE PTR [rax],al
   14000b5d8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   14000b5e0:	(bad)  
   14000b5e1:	jns    0x14000b657
   14000b5e3:	and    BYTE PTR gs:[rbx+0x65],dh
   14000b5e7:	jno    0x14000b65e
   14000b5e9:	outs   dx,BYTE PTR gs:[rsi]
   14000b5eb:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b5ee:	add    BYTE PTR [rax],al
   14000b5f0:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   14000b5f7:	jo     0x14000b66b
   14000b5f9:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   14000b600:	and    BYTE PTR [rbx+0x6f],ah
   14000b603:	outs   dx,BYTE PTR ds:[rsi]
   14000b604:	je     0x14000b678
   14000b606:	outs   dx,DWORD PTR ds:[rsi]
   14000b607:	ins    BYTE PTR es:[rdi],dx
   14000b608:	and    BYTE PTR [rdi+0x70],ch
   14000b60b:	gs jb  0x14000b66f
   14000b60e:	je     0x14000b679
   14000b610:	outs   dx,DWORD PTR ds:[rsi]
   14000b611:	outs   dx,BYTE PTR ds:[rsi]
   14000b612:	add    BYTE PTR [rax],al
   14000b614:	add    BYTE PTR [rax],al
   14000b616:	add    BYTE PTR [rax],al
   14000b618:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000b61f:	and    BYTE PTR [rbx+0x65],dh
   14000b622:	imul   eax,DWORD PTR gs:[rax],0x0
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   14000b62f:	jb     0x14000b696
   14000b631:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b635:	jns    0x14000b637
   14000b637:	add    BYTE PTR [rbp+0x65],ch
   14000b63a:	jae    0x14000b6af
   14000b63c:	(bad)  
   14000b63d:	and    BYTE PTR gs:[ebx+0x69],dh
   14000b642:	jp     0x14000b6a9
   14000b644:	add    BYTE PTR [rax],al
   14000b646:	add    BYTE PTR [rax],al
   14000b648:	outs   dx,BYTE PTR ds:[rsi]
   14000b649:	gs je  0x14000b6c3
   14000b64c:	outs   dx,DWORD PTR ds:[rsi]
   14000b64d:	jb     0x14000b6ba
   14000b64f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   14000b653:	outs   dx,BYTE PTR ds:[rsi]
   14000b654:	add    BYTE PTR [rax],al
   14000b656:	add    BYTE PTR [rax],al
   14000b658:	outs   dx,BYTE PTR ds:[rsi]
   14000b659:	gs je  0x14000b6d3
   14000b65c:	outs   dx,DWORD PTR ds:[rsi]
   14000b65d:	jb     0x14000b6ca
   14000b65f:	and    BYTE PTR [rdx+0x65],dh
   14000b662:	jae    0x14000b6c9
   14000b664:	je     0x14000b666
   14000b666:	add    BYTE PTR [rax],al
   14000b668:	outs   dx,BYTE PTR ds:[rsi]
   14000b669:	gs je  0x14000b6e3
   14000b66c:	outs   dx,DWORD PTR ds:[rsi]
   14000b66d:	jb     0x14000b6da
   14000b66f:	and    BYTE PTR [rbp+0x6e],dh
   14000b672:	jb     0x14000b6d9
   14000b674:	(bad)  
   14000b675:	movsxd ebp,DWORD PTR [rax+0x61]
   14000b678:	(bad)  
   14000b679:	ins    BYTE PTR es:[rdi],dx
   14000b67a:	add    BYTE PTR gs:[rax],al
   14000b67d:	add    BYTE PTR [rax],al
   14000b67f:	add    BYTE PTR [rsi+0x6f],ch
   14000b682:	and    BYTE PTR [rdx+0x75],ah
   14000b685:	data16 data16 gs jb 0x14000b6aa
   14000b68a:	jae    0x14000b6fc
   14000b68c:	(bad)  
   14000b68d:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b690:	outs   dx,BYTE PTR ds:[rsi]
   14000b691:	outs   dx,DWORD PTR ds:[rsi]
   14000b692:	and    BYTE PTR [rbx+0x68],ah
   14000b695:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14000b69d:	gs jae 0x14000b713
	...
   14000b6a8:	outs   dx,BYTE PTR ds:[rsi]
   14000b6a9:	outs   dx,DWORD PTR ds:[rsi]
   14000b6aa:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14000b6ae:	imul   eax,DWORD PTR [rax],0x6e
   14000b6b1:	outs   dx,DWORD PTR ds:[rsi]
   14000b6b2:	and    BYTE PTR [rbp+0x65],ch
   14000b6b5:	jae    0x14000b72a
   14000b6b7:	(bad)  
   14000b6b8:	and    BYTE PTR gs:[ecx+0x76],ah
   14000b6bd:	(bad)  
   14000b6be:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14000b6c6:	add    BYTE PTR [rax],al
   14000b6c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b6c9:	outs   dx,DWORD PTR ds:[rsi]
   14000b6ca:	and    BYTE PTR [rbp+0x65],ch
   14000b6cd:	jae    0x14000b742
   14000b6cf:	(bad)  
   14000b6d0:	add    BYTE PTR gs:[eax],al
   14000b6d4:	add    BYTE PTR [rax],al
   14000b6d6:	add    BYTE PTR [rax],al
   14000b6d8:	outs   dx,BYTE PTR ds:[rsi]
   14000b6d9:	outs   dx,DWORD PTR ds:[rsi]
   14000b6da:	and    BYTE PTR [rax+0x72],dh
   14000b6dd:	outs   dx,DWORD PTR ds:[rsi]
   14000b6de:	je     0x14000b74f
   14000b6e0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000b6e3:	and    BYTE PTR [rdi+0x70],ch
   14000b6e6:	je     0x14000b751
   14000b6e8:	outs   dx,DWORD PTR ds:[rsi]
   14000b6e9:	outs   dx,BYTE PTR ds:[rsi]
   14000b6ea:	add    BYTE PTR [rax],al
   14000b6ec:	add    BYTE PTR [rax],al
   14000b6ee:	add    BYTE PTR [rax],al
   14000b6f0:	outs   dx,BYTE PTR ds:[rsi]
   14000b6f1:	outs   dx,DWORD PTR ds:[rsi]
   14000b6f2:	and    BYTE PTR [rbx+0x74],dh
   14000b6f5:	jb     0x14000b75c
   14000b6f7:	(bad)  
   14000b6f8:	ins    DWORD PTR es:[rdi],dx
   14000b6f9:	and    BYTE PTR [rdx+0x65],dh
   14000b6fc:	jae    0x14000b76d
   14000b6fe:	jne    0x14000b772
   14000b700:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b703:	add    BYTE PTR [rax],al
   14000b705:	add    BYTE PTR [rax],al
   14000b707:	add    BYTE PTR [rsi+0x6f],ch
   14000b70a:	and    BYTE PTR [rbx+0x75],dh
   14000b70d:	movsxd ebp,DWORD PTR [rax+0x20]
   14000b710:	fs gs jbe 0x14000b77d
   14000b714:	movsxd esp,DWORD PTR [rbp+0x20]
   14000b717:	outs   dx,DWORD PTR ds:[rsi]
   14000b718:	jb     0x14000b73a
   14000b71a:	(bad)  
   14000b71b:	fs fs jb 0x14000b784
   14000b71f:	jae    0x14000b794
   14000b721:	add    BYTE PTR [rax],al
   14000b723:	add    BYTE PTR [rax],al
   14000b725:	add    BYTE PTR [rax],al
   14000b727:	add    BYTE PTR [rsi+0x6f],ch
   14000b72a:	and    BYTE PTR [rbx+0x75],dh
   14000b72d:	movsxd ebp,DWORD PTR [rax+0x20]
   14000b730:	jo     0x14000b7a4
   14000b732:	outs   dx,DWORD PTR ds:[rsi]
   14000b733:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b736:	jae    0x14000b738
   14000b738:	outs   dx,BYTE PTR ds:[rsi]
   14000b739:	outs   dx,DWORD PTR ds:[rsi]
   14000b73a:	je     0x14000b75c
   14000b73c:	(bad)  
   14000b73d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14000b741:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b746:	jns    0x14000b748
   14000b748:	outs   dx,BYTE PTR ds:[rsi]
   14000b749:	outs   dx,DWORD PTR ds:[rsi]
   14000b74a:	je     0x14000b76c
   14000b74c:	(bad)  
   14000b74d:	and    BYTE PTR [rbx+0x6f],dh
   14000b750:	movsxd ebp,DWORD PTR [rbx+0x65]
   14000b753:	je     0x14000b755
   14000b755:	add    BYTE PTR [rax],al
   14000b757:	add    BYTE PTR [rsi+0x6f],ch
   14000b75a:	je     0x14000b77c
   14000b75c:	(bad)  
   14000b75d:	and    BYTE PTR [rbx+0x74],dh
   14000b760:	jb     0x14000b7c7
   14000b762:	(bad)  
   14000b763:	ins    DWORD PTR es:[rdi],dx
   14000b764:	add    BYTE PTR [rax],al
   14000b766:	add    BYTE PTR [rax],al
   14000b768:	outs   dx,BYTE PTR ds:[rsi]
   14000b769:	outs   dx,DWORD PTR ds:[rsi]
   14000b76a:	je     0x14000b78c
   14000b76c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000b76f:	outs   dx,BYTE PTR ds:[rsi]
   14000b770:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000b775:	add    BYTE PTR [rax],al
   14000b777:	add    BYTE PTR [rsi+0x6f],ch
   14000b77a:	je     0x14000b79c
   14000b77c:	jae    0x14000b7f3
   14000b77e:	jo     0x14000b7f0
   14000b780:	outs   dx,DWORD PTR ds:[rsi]
   14000b781:	jb     0x14000b7f7
   14000b783:	gs add BYTE PTR fs:[rax],al
   14000b787:	add    BYTE PTR [rdi+0x70],ch
   14000b78a:	gs jb  0x14000b7ee
   14000b78d:	je     0x14000b7f8
   14000b78f:	outs   dx,DWORD PTR ds:[rsi]
   14000b790:	outs   dx,BYTE PTR ds:[rsi]
   14000b791:	and    BYTE PTR [rcx+0x6e],ch
   14000b794:	and    BYTE PTR [rax+0x72],dh
   14000b797:	outs   dx,DWORD PTR ds:[rsi]
   14000b798:	addr32 jb 0x14000b800
   14000b79b:	jae    0x14000b810
   14000b79d:	add    BYTE PTR [rax],al
   14000b79f:	add    BYTE PTR [rdi+0x70],ch
   14000b7a2:	gs jb  0x14000b806
   14000b7a5:	je     0x14000b810
   14000b7a7:	outs   dx,DWORD PTR ds:[rsi]
   14000b7a8:	outs   dx,BYTE PTR ds:[rsi]
   14000b7a9:	and    BYTE PTR [rsi+0x6f],ch
   14000b7ac:	je     0x14000b7ce
   14000b7ae:	jo     0x14000b815
   14000b7b0:	jb     0x14000b81f
   14000b7b2:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   14000b7ba:	gs jb  0x14000b81e
   14000b7bd:	je     0x14000b828
   14000b7bf:	outs   dx,DWORD PTR ds:[rsi]
   14000b7c0:	outs   dx,BYTE PTR ds:[rsi]
   14000b7c1:	and    BYTE PTR [rsi+0x6f],ch
   14000b7c4:	je     0x14000b7e6
   14000b7c6:	jae    0x14000b83d
   14000b7c8:	jo     0x14000b83a
   14000b7ca:	outs   dx,DWORD PTR ds:[rsi]
   14000b7cb:	jb     0x14000b841
   14000b7cd:	gs add BYTE PTR fs:[rdi+0x70],ch
   14000b7d2:	gs jb  0x14000b836
   14000b7d5:	je     0x14000b840
   14000b7d7:	outs   dx,DWORD PTR ds:[rsi]
   14000b7d8:	outs   dx,BYTE PTR ds:[rsi]
   14000b7d9:	and    BYTE PTR [rdi+0x6f],dh
   14000b7dc:	jne    0x14000b84a
   14000b7de:	and    BYTE PTR fs:[rdx+0x6c],ah
   14000b7e2:	outs   dx,DWORD PTR ds:[rsi]
   14000b7e3:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b7e6:	add    BYTE PTR [rax],al
   14000b7e8:	outs   dx,DWORD PTR ds:[rsi]
   14000b7e9:	ja     0x14000b859
   14000b7eb:	gs jb  0x14000b80e
   14000b7ee:	fs gs (bad) 
   14000b7f1:	add    BYTE PTR fs:[rax],al
   14000b7f4:	add    BYTE PTR [rax],al
   14000b7f6:	add    BYTE PTR [rax],al
   14000b7f8:	jo     0x14000b86c
   14000b7fa:	outs   dx,DWORD PTR ds:[rsi]
   14000b7fb:	je     0x14000b86c
   14000b7fd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000b800:	and    BYTE PTR [rbp+0x72],ah
   14000b803:	jb     0x14000b874
   14000b805:	jb     0x14000b807
   14000b807:	add    BYTE PTR [rax+0x72],dh
   14000b80a:	outs   dx,DWORD PTR ds:[rsi]
   14000b80b:	je     0x14000b87c
   14000b80d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000b810:	and    BYTE PTR [rsi+0x6f],ch
   14000b813:	je     0x14000b835
   14000b815:	jae    0x14000b88c
   14000b817:	jo     0x14000b889
   14000b819:	outs   dx,DWORD PTR ds:[rsi]
   14000b81a:	jb     0x14000b890
   14000b81c:	gs add BYTE PTR fs:[rax],al
   14000b820:	jb     0x14000b887
   14000b822:	(bad)  
   14000b823:	and    BYTE PTR fs:[rdi+0x6e],ch
   14000b827:	ins    BYTE PTR es:[rdi],dx
   14000b828:	jns    0x14000b84a
   14000b82a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   14000b831:	jae    0x14000b8a7
   14000b833:	gs ins DWORD PTR es:[rdi],dx
   14000b835:	add    BYTE PTR [rax],al
   14000b837:	add    BYTE PTR [rdx+0x65],dh
   14000b83a:	jae    0x14000b8ab
   14000b83c:	jne    0x14000b8b0
   14000b83e:	movsxd esp,DWORD PTR [rbp+0x20]
   14000b841:	fs gs (bad) 
   14000b844:	fs ins BYTE PTR es:[rdi],dx
   14000b846:	outs   dx,DWORD PTR ds:[rsi]
   14000b847:	movsxd ebp,DWORD PTR [rbx+0x20]
   14000b84a:	ja     0x14000b8bb
   14000b84c:	jne    0x14000b8ba
   14000b84e:	and    BYTE PTR fs:[rdi+0x63],ch
   14000b852:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b855:	add    BYTE PTR [rax],al
   14000b857:	add    BYTE PTR [rdx+0x65],dh
   14000b85a:	jae    0x14000b8d1
   14000b85c:	ins    BYTE PTR es:[rdi],dx
   14000b85d:	je     0x14000b87f
   14000b85f:	outs   dx,DWORD PTR ds:[rsi]
   14000b860:	jne    0x14000b8d6
   14000b862:	and    BYTE PTR [rdi+0x66],ch
   14000b865:	and    BYTE PTR [rdx+0x61],dh
   14000b868:	outs   dx,BYTE PTR ds:[rsi]
   14000b869:	add    BYTE PTR gs:[eax],al
   14000b86d:	add    BYTE PTR [rax],al
   14000b86f:	add    BYTE PTR [rbx+0x74],dh
   14000b872:	(bad)  
   14000b873:	je     0x14000b8da
   14000b875:	and    BYTE PTR [rsi+0x6f],ch
   14000b878:	je     0x14000b89a
   14000b87a:	jb     0x14000b8e1
   14000b87c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000b87f:	gs jb  0x14000b8e3
   14000b882:	(bad)  
   14000b883:	ins    BYTE PTR es:[rdi],dx
   14000b884:	add    BYTE PTR gs:[rax],al
   14000b887:	add    BYTE PTR [rbx+0x74],dh
   14000b88a:	jb     0x14000b8f1
   14000b88c:	(bad)  
   14000b88d:	ins    DWORD PTR es:[rdi],dx
   14000b88e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   14000b892:	outs   dx,DWORD PTR gs:[rsi]
   14000b894:	jne    0x14000b90a
   14000b896:	add    BYTE PTR [rax],al
   14000b898:	je     0x14000b8ff
   14000b89a:	js     0x14000b910
   14000b89c:	and    BYTE PTR [rsi+0x69],ah
   14000b89f:	ins    BYTE PTR es:[rdi],dx
   14000b8a0:	and    BYTE PTR gs:[rdx+0x75],ah
   14000b8a4:	jae    0x14000b91f
   14000b8a6:	add    BYTE PTR [rax],al
   14000b8a8:	je     0x14000b913
   14000b8aa:	ins    DWORD PTR es:[rdi],dx
   14000b8ab:	gs and BYTE PTR fs:[rdi+0x75],ch
   14000b8b0:	je     0x14000b8b2
   14000b8b2:	add    BYTE PTR [rax],al
   14000b8b4:	add    BYTE PTR [rax],al
   14000b8b6:	add    BYTE PTR [rax],al
   14000b8b8:	je     0x14000b929
   14000b8ba:	outs   dx,DWORD PTR ds:[rsi]
   14000b8bb:	and    BYTE PTR [rbp+0x61],ch
   14000b8be:	outs   dx,BYTE PTR ds:[rsi]
   14000b8bf:	jns    0x14000b8e1
   14000b8c1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   14000b8c8:	jo     0x14000b92f
   14000b8ca:	outs   dx,BYTE PTR ds:[rsi]
   14000b8cb:	and    BYTE PTR [rcx+0x6e],ch
   14000b8ce:	and    BYTE PTR [rbx+0x79],dh
   14000b8d1:	jae    0x14000b947
   14000b8d3:	gs ins DWORD PTR es:[rdi],dx
   14000b8d5:	add    BYTE PTR [rax],al
   14000b8d7:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000b8db:	and    BYTE PTR [rbp+0x61],ch
   14000b8de:	outs   dx,BYTE PTR ds:[rsi]
   14000b8df:	jns    0x14000b901
   14000b8e1:	ins    BYTE PTR es:[rdi],dx
   14000b8e2:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   14000b8e9:	outs   dx,DWORD PTR ds:[rsi]
   14000b8ea:	outs   dx,DWORD PTR ds:[rsi]
   14000b8eb:	and    BYTE PTR [rbp+0x61],ch
   14000b8ee:	outs   dx,BYTE PTR ds:[rsi]
   14000b8ef:	jns    0x14000b911
   14000b8f1:	jae    0x14000b96c
   14000b8f3:	ins    DWORD PTR es:[rdi],dx
   14000b8f4:	(bad)  
   14000b8f5:	outs   dx,DWORD PTR ds:[rsi]
   14000b8f6:	ins    BYTE PTR es:[rdi],dx
   14000b8f7:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14000b8fe:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000b902:	gs ins BYTE PTR es:[rdi],dx
   14000b904:	jae    0x14000b906
   14000b906:	add    BYTE PTR [rax],al
   14000b908:	jbe    0x14000b96b
   14000b90a:	ins    BYTE PTR es:[rdi],dx
   14000b90b:	jne    0x14000b972
   14000b90d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000b911:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14000b915:	add    BYTE PTR gs:[edi+0x72],dh
   14000b91a:	outs   dx,DWORD PTR ds:[rsi]
   14000b91b:	outs   dx,BYTE PTR ds:[rsi]
   14000b91c:	and    BYTE PTR [eax+0x72],dh
   14000b920:	outs   dx,DWORD PTR ds:[rsi]
   14000b921:	je     0x14000b992
   14000b923:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000b926:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000b92a:	add    BYTE PTR gs:[rax],al
   14000b92d:	add    BYTE PTR [rax],al
   14000b92f:	add    BYTE PTR [rax+0x140008b],dh
   14000b935:	add    BYTE PTR [rax],al
   14000b937:	add    al,al
   14000b939:	xchg   esp,eax
   14000b93a:	add    BYTE PTR [rax+0x1],al
   14000b93d:	add    BYTE PTR [rax],al
   14000b93f:	add    BYTE PTR [rdx+0x61],ah
   14000b942:	and    BYTE PTR fs:[rcx+0x6c],ah
   14000b946:	ins    BYTE PTR es:[rdi],dx
   14000b947:	outs   dx,DWORD PTR ds:[rsi]
   14000b948:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b94b:	imul   ebp,DWORD PTR [rdi+0x6e],0x8bf00000
   14000b952:	add    BYTE PTR [rax+0x1],al
   14000b955:	add    BYTE PTR [rax],al
   14000b957:	add    al,al
   14000b959:	xchg   esp,eax
   14000b95a:	add    BYTE PTR [rax+0x1],al
   14000b95d:	add    BYTE PTR [rax],al
   14000b95f:	add    BYTE PTR [rax-0xc],ah
   14000b962:	add    BYTE PTR [rax+0x1],al
   14000b965:	add    BYTE PTR [rax],al
   14000b967:	add    BYTE PTR [rax],al
   14000b969:	cmc    
   14000b96a:	add    BYTE PTR [rax+0x1],al
   14000b96d:	add    BYTE PTR [rax],al
   14000b96f:	add    al,dl
   14000b971:	xchg   esp,eax
   14000b972:	add    BYTE PTR [rax+0x1],al
   14000b975:	add    BYTE PTR [rax],al
   14000b977:	add    BYTE PTR [rdi+0x65],ah
   14000b97a:	outs   dx,BYTE PTR ds:[rsi]
   14000b97b:	gs jb  0x14000b9e7
   14000b97e:	movsxd eax,DWORD PTR [rax]
   14000b980:	jne    0x14000b9f0
   14000b982:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000b986:	outs   dx,BYTE PTR ds:[rsi]
   14000b987:	and    BYTE PTR [rbp+0x72],ah
   14000b98a:	jb     0x14000b9fb
   14000b98c:	jb     0x14000b98e
   14000b98e:	add    BYTE PTR [rax],al
   14000b990:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000b997:	ins    DWORD PTR es:[rdi],dx
	...
   14000b9a0:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000b9a7:	ins    DWORD PTR es:[rdi],dx
   14000b9a8:	and    BYTE PTR [rbx+0x74],dh
   14000b9ab:	jb     0x14000ba12
   14000b9ad:	(bad)  
   14000b9ae:	ins    DWORD PTR es:[rdi],dx
   14000b9af:	and    BYTE PTR [rbp+0x72],ah
   14000b9b2:	jb     0x14000ba23
   14000b9b4:	jb     0x14000b9b6
   14000b9b6:	add    BYTE PTR [rax],al
   14000b9b8:	jae    0x14000ba33
   14000b9ba:	jae    0x14000ba30
   14000b9bc:	gs ins DWORD PTR es:[rdi],dx
   14000b9be:	add    BYTE PTR [rax],al
   14000b9c0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000b9c7:	and    BYTE PTR [rbx+0x74],dh
   14000b9ca:	jb     0x14000ba35
   14000b9cc:	outs   dx,BYTE PTR ds:[rsi]
   14000b9cd:	and    BYTE PTR [eax+0x6f],dh
   14000b9d1:	jae    0x14000ba3c
   14000b9d3:	je     0x14000ba3e
   14000b9d5:	outs   dx,DWORD PTR ds:[rsi]
   14000b9d6:	outs   dx,BYTE PTR ds:[rsi]
   14000b9d7:	add    BYTE PTR [rbx+0x74],dh
   14000b9da:	jb     0x14000ba45
   14000b9dc:	outs   dx,BYTE PTR ds:[rsi]
   14000b9dd:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000b9e2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000b9e6:	add    BYTE PTR [eax+0x10],dh
   14000b9ea:	add    BYTE PTR [rax+0x1],al
   14000b9ed:	add    BYTE PTR [rax],al
   14000b9ef:	add    BYTE PTR [rax+0x11],dl
   14000b9f2:	add    BYTE PTR [rax+0x1],al
   14000b9f5:	add    BYTE PTR [rax],al
   14000b9f7:	add    BYTE PTR [rax+0x11],ah
   14000b9fa:	add    BYTE PTR [rax+0x1],al
   14000b9fd:	add    BYTE PTR [rax],al
   14000b9ff:	add    BYTE PTR [rax+0x1400010],ah
   14000ba05:	add    BYTE PTR [rax],al
   14000ba07:	add    BYTE PTR [rax],dh
   14000ba09:	adc    DWORD PTR [rax],eax
   14000ba0b:	rex add DWORD PTR [rax],eax
   14000ba0e:	add    BYTE PTR [rax],al
   14000ba10:	rcl    BYTE PTR [rax],0x0
   14000ba13:	rex add DWORD PTR [rax],eax
   14000ba16:	add    BYTE PTR [rax],al
   14000ba18:	jo     0x14000ba2a
   14000ba1a:	add    BYTE PTR [rax+0x1],al
   14000ba1d:	add    BYTE PTR [rax],al
   14000ba1f:	add    BYTE PTR [rax],dh
   14000ba21:	adc    al,BYTE PTR [rax]
   14000ba23:	rex add DWORD PTR [rax],eax
   14000ba26:	add    BYTE PTR [rax],al
   14000ba28:	adc    al,BYTE PTR [rax]
   14000ba2b:	rex add DWORD PTR [rax],eax
   14000ba2e:	add    BYTE PTR [rax],al
   14000ba30:	mov    al,0x12
   14000ba32:	add    BYTE PTR [rax+0x1],al
   14000ba35:	add    BYTE PTR [rax],al
   14000ba37:	add    BYTE PTR [rax],dh
   14000ba39:	adc    DWORD PTR [rax],eax
   14000ba3b:	rex add DWORD PTR [rax],eax
   14000ba3e:	add    BYTE PTR [rax],al
   14000ba40:	rcl    BYTE PTR [rax],0x0
   14000ba43:	rex add DWORD PTR [rax],eax
   14000ba46:	add    BYTE PTR [rax],al
   14000ba48:	jo     0x14000ba5a
   14000ba4a:	add    BYTE PTR [rax+0x1],al
   14000ba4d:	add    BYTE PTR [rax],al
   14000ba4f:	add    al,dl
   14000ba51:	adc    DWORD PTR [rax],eax
   14000ba53:	rex add DWORD PTR [rax],eax
   14000ba56:	add    BYTE PTR [rax],al
   14000ba58:	loopne 0x14000ba6b
   14000ba5a:	add    BYTE PTR [rax+0x1],al
   14000ba5d:	add    BYTE PTR [rax],al
   14000ba5f:	add    BYTE PTR [rax+0x1400010],ah
   14000ba65:	add    BYTE PTR [rax],al
   14000ba67:	add    BYTE PTR [rax],dh
   14000ba69:	adc    DWORD PTR [rax],eax
   14000ba6b:	rex add DWORD PTR [rax],eax
   14000ba6e:	add    BYTE PTR [rax],al
   14000ba70:	rcl    BYTE PTR [rax],0x0
   14000ba73:	rex add DWORD PTR [rax],eax
   14000ba76:	add    BYTE PTR [rax],al
   14000ba78:	jo     0x14000ba8a
   14000ba7a:	add    BYTE PTR [rax+0x1],al
   14000ba7d:	add    BYTE PTR [rax],al
   14000ba7f:	add    BYTE PTR [rax+0x1400091],dl
   14000ba85:	add    BYTE PTR [rax],al
   14000ba87:	add    BYTE PTR [rax+0x1400091],dl
   14000ba8d:	add    BYTE PTR [rax],al
   14000ba8f:	add    BYTE PTR [rax+0x1400010],ah
   14000ba95:	add    BYTE PTR [rax],al
   14000ba97:	add    BYTE PTR [rax],dh
   14000ba99:	adc    DWORD PTR [rax],eax
   14000ba9b:	rex add DWORD PTR [rax],eax
   14000ba9e:	add    BYTE PTR [rax],al
   14000baa0:	rcl    BYTE PTR [rax],0x0
   14000baa3:	rex add DWORD PTR [rax],eax
   14000baa6:	add    BYTE PTR [rax],al
   14000baa8:	sbb    BYTE PTR [rdi],0x0
   14000baab:	rex add DWORD PTR [rax],eax
   14000baae:	add    BYTE PTR [rax],al
   14000bab0:	and    BYTE PTR [rbp+0x0],bl
   14000bab3:	rex add DWORD PTR [rax],eax
   14000bab6:	add    BYTE PTR [rax],al
   14000bab8:	movabs al,ds:0xf00000000140005e
   14000bac1:	pop    rsi
   14000bac2:	add    BYTE PTR [rax+0x1],al
   14000bac5:	add    BYTE PTR [rax],al
   14000bac7:	add    BYTE PTR [rax+0x7c],dh
   14000baca:	add    BYTE PTR [rax+0x1],al
   14000bacd:	add    BYTE PTR [rax],al
   14000bacf:	add    BYTE PTR [rax],ah
   14000bad1:	jge    0x14000bad3
   14000bad3:	rex add DWORD PTR [rax],eax
   14000bad6:	add    BYTE PTR [rax],al
   14000bad8:	xor    BYTE PTR [rbp+0x0],bh
   14000badb:	rex add DWORD PTR [rax],eax
   14000bade:	add    BYTE PTR [rax],al
   14000bae0:	rex.WRXB add BYTE PTR [r10],r15b
   14000bae3:	add    BYTE PTR [rip+0x44007300],ah        # 0x184012de9
   14000bae9:	add    BYTE PTR [rdx],bh
   14000baeb:	add    BYTE PTR [rax],ch
   14000baed:	add    BYTE PTR [rcx+0x0],al
   14000baf0:	cmp    eax,DWORD PTR [rax]
   14000baf2:	cmp    eax,DWORD PTR [rax]
   14000baf4:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000baf8:	cmp    eax,DWORD PTR [rax]
   14000bafa:	cmp    eax,DWORD PTR [rax]
   14000bafc:	cmp    eax,DWORD PTR [rax]
   14000bafe:	rex.X add BYTE PTR [rcx+0x0],al
   14000bb02:	sub    DWORD PTR [rax],eax
   14000bb04:	sub    BYTE PTR [rax],al
   14000bb06:	add    BYTE PTR [r11],dil
   14000bb09:	add    BYTE PTR [rbx],bh
   14000bb0b:	add    BYTE PTR [rdi+0x0],al
   14000bb0e:	add    BYTE PTR [r11],dil
   14000bb11:	add    BYTE PTR [rbx],bh
   14000bb13:	add    BYTE PTR [rbx],bh
   14000bb15:	add    BYTE PTR [rbx+0x0],dl
   14000bb18:	pop    rcx
   14000bb19:	add    BYTE PTR [rcx],ch
   14000bb1b:	add    BYTE PTR [rax],ch
   14000bb1d:	add    BYTE PTR [rcx+0x0],al
   14000bb20:	cmp    eax,DWORD PTR [rax]
   14000bb22:	cmp    eax,DWORD PTR [rax]
   14000bb24:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bb28:	cmp    eax,DWORD PTR [rax]
   14000bb2a:	cmp    eax,DWORD PTR [rax]
   14000bb2c:	cmp    eax,DWORD PTR [rax]
   14000bb2e:	and    eax,0x29007300
   14000bb33:	add    BYTE PTR [rax],ch
   14000bb35:	add    BYTE PTR [rcx+0x0],al
   14000bb38:	cmp    eax,DWORD PTR [rax]
   14000bb3a:	cmp    eax,DWORD PTR [rax]
   14000bb3c:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bb40:	cmp    eax,DWORD PTR [rax]
   14000bb42:	cmp    eax,DWORD PTR [rax]
   14000bb44:	cmp    eax,DWORD PTR [rax]
   14000bb46:	push   rdx
   14000bb47:	add    BYTE PTR [rbx+0x0],al
   14000bb4a:	sub    DWORD PTR [rax],eax
   14000bb4c:	add    BYTE PTR [rax],al
   14000bb4e:	add    BYTE PTR [rax],al
   14000bb50:	rex.WRXB add BYTE PTR [r10],r15b
   14000bb53:	add    BYTE PTR [rip+0x44007300],ah        # 0x184012e59
   14000bb59:	add    BYTE PTR [rdx],bh
   14000bb5b:	add    BYTE PTR [rax],ch
   14000bb5d:	add    BYTE PTR [rcx+0x0],al
   14000bb60:	cmp    eax,DWORD PTR [rax]
   14000bb62:	cmp    eax,DWORD PTR [rax]
   14000bb64:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bb68:	cmp    eax,DWORD PTR [rax]
   14000bb6a:	cmp    eax,DWORD PTR [rax]
   14000bb6c:	cmp    eax,DWORD PTR [rax]
   14000bb6e:	rex.X add BYTE PTR [rcx+0x0],al
   14000bb72:	sub    DWORD PTR [rax],eax
   14000bb74:	sub    BYTE PTR [rax],al
   14000bb76:	add    BYTE PTR [r11],dil
   14000bb79:	add    BYTE PTR [rbx],bh
   14000bb7b:	add    BYTE PTR [rdi+0x0],al
   14000bb7e:	add    BYTE PTR [r11],dil
   14000bb81:	add    BYTE PTR [rbx],bh
   14000bb83:	add    BYTE PTR [rbx],bh
   14000bb85:	add    BYTE PTR [rbx+0x0],dl
   14000bb88:	pop    rcx
   14000bb89:	add    BYTE PTR [rcx],ch
   14000bb8b:	add    BYTE PTR [rax],ch
   14000bb8d:	add    BYTE PTR [rcx+0x0],al
   14000bb90:	cmp    eax,DWORD PTR [rax]
   14000bb92:	cmp    eax,DWORD PTR [rax]
   14000bb94:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bb98:	cmp    eax,DWORD PTR [rax]
   14000bb9a:	cmp    eax,DWORD PTR [rax]
   14000bb9c:	cmp    eax,DWORD PTR [rax]
   14000bb9e:	and    eax,0x29007300
   14000bba3:	add    BYTE PTR [rax],ch
   14000bba5:	add    BYTE PTR [rcx+0x0],al
   14000bba8:	cmp    eax,DWORD PTR [rax]
   14000bbaa:	cmp    eax,DWORD PTR [rax]
   14000bbac:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bbb0:	cmp    eax,DWORD PTR [rax]
   14000bbb2:	cmp    eax,DWORD PTR [rax]
   14000bbb4:	cmp    eax,DWORD PTR [rax]
   14000bbb6:	push   rdx
   14000bbb7:	add    BYTE PTR [rbx+0x0],al
   14000bbba:	sub    DWORD PTR [rax],eax
   14000bbbc:	sub    BYTE PTR [rax],al
   14000bbbe:	add    BYTE PTR [r11],dil
   14000bbc1:	add    BYTE PTR [rbx],bh
   14000bbc3:	add    BYTE PTR [rdi+0x0],al
   14000bbc6:	add    BYTE PTR [r11],dil
   14000bbc9:	add    BYTE PTR [rbx],bh
   14000bbcb:	add    BYTE PTR [rbx],bh
   14000bbcd:	add    BYTE PTR [rcx+0x0],al
   14000bbd0:	rex.XB add BYTE PTR [r9],bpl
   14000bbd3:	add    BYTE PTR [rbx+0x0],dl
   14000bbd6:	cmp    al,BYTE PTR [rax]
   14000bbd8:	sub    BYTE PTR [rax],al
   14000bbda:	rex.WRB add BYTE PTR [r8+rax*1+0x3b],r9b
   14000bbdf:	add    BYTE PTR [rbx],bh
   14000bbe1:	add    BYTE PTR [rax],dh
   14000bbe3:	add    BYTE PTR [rax+0x0],bh
   14000bbe6:	xor    DWORD PTR [rax],eax
   14000bbe8:	cmp    eax,DWORD PTR [rax]
   14000bbea:	cmp    eax,DWORD PTR [rax]
   14000bbec:	cmp    eax,DWORD PTR [rax]
   14000bbee:	rex.WR add BYTE PTR [rdi+0x0],r10b
   14000bbf2:	sub    DWORD PTR [rax],eax
	...
   14000bc00:	rex.WRXB add BYTE PTR [r10],r15b
   14000bc03:	add    BYTE PTR [rip+0x44007300],ah        # 0x184012f09
   14000bc09:	add    BYTE PTR [rdx],bh
   14000bc0b:	add    BYTE PTR [rax],ch
   14000bc0d:	add    BYTE PTR [rcx+0x0],al
   14000bc10:	cmp    eax,DWORD PTR [rax]
   14000bc12:	cmp    eax,DWORD PTR [rax]
   14000bc14:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bc18:	cmp    eax,DWORD PTR [rax]
   14000bc1a:	cmp    eax,DWORD PTR [rax]
   14000bc1c:	cmp    eax,DWORD PTR [rax]
   14000bc1e:	rex.X add BYTE PTR [rcx+0x0],al
   14000bc22:	sub    DWORD PTR [rax],eax
   14000bc24:	sub    BYTE PTR [rax],al
   14000bc26:	add    BYTE PTR [r11],dil
   14000bc29:	add    BYTE PTR [rbx],bh
   14000bc2b:	add    BYTE PTR [rdi+0x0],al
   14000bc2e:	add    BYTE PTR [r11],dil
   14000bc31:	add    BYTE PTR [rbx],bh
   14000bc33:	add    BYTE PTR [rbx],bh
   14000bc35:	add    BYTE PTR [rbx+0x0],dl
   14000bc38:	pop    rcx
   14000bc39:	add    BYTE PTR [rcx],ch
   14000bc3b:	add    BYTE PTR [rax],ch
   14000bc3d:	add    BYTE PTR [rcx+0x0],al
   14000bc40:	cmp    eax,DWORD PTR [rax]
   14000bc42:	cmp    eax,DWORD PTR [rax]
   14000bc44:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bc48:	cmp    eax,DWORD PTR [rax]
   14000bc4a:	cmp    eax,DWORD PTR [rax]
   14000bc4c:	cmp    eax,DWORD PTR [rax]
   14000bc4e:	and    eax,0x29007300
   14000bc53:	add    BYTE PTR [rax],ch
   14000bc55:	add    BYTE PTR [rcx+0x0],al
   14000bc58:	cmp    eax,DWORD PTR [rax]
   14000bc5a:	cmp    eax,DWORD PTR [rax]
   14000bc5c:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bc60:	cmp    eax,DWORD PTR [rax]
   14000bc62:	cmp    eax,DWORD PTR [rax]
   14000bc64:	cmp    eax,DWORD PTR [rax]
   14000bc66:	push   rdx
   14000bc67:	add    BYTE PTR [rbx+0x0],al
   14000bc6a:	sub    DWORD PTR [rax],eax
   14000bc6c:	push   rbx
   14000bc6d:	add    BYTE PTR [rdx],bh
   14000bc6f:	add    BYTE PTR [rax],ch
   14000bc71:	add    BYTE PTR [rbp+0x0],cl
   14000bc74:	rex.WR add BYTE PTR [rbx],r15b
   14000bc77:	add    BYTE PTR [rbx],bh
   14000bc79:	add    BYTE PTR [rax],dh
   14000bc7b:	add    BYTE PTR [rax+0x0],bh
   14000bc7e:	xor    DWORD PTR [rax],eax
   14000bc80:	cmp    eax,DWORD PTR [rax]
   14000bc82:	cmp    eax,DWORD PTR [rax]
   14000bc84:	cmp    eax,DWORD PTR [rax]
   14000bc86:	rex.WR add BYTE PTR [rdi+0x0],r10b
   14000bc8a:	sub    DWORD PTR [rax],eax
   14000bc8c:	add    BYTE PTR [rax],al
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	rex.WRXB add BYTE PTR [r10],r15b
   14000bc93:	add    BYTE PTR [rip+0x44007300],ah        # 0x184012f99
   14000bc99:	add    BYTE PTR [rdx],bh
   14000bc9b:	add    BYTE PTR [rax],ch
   14000bc9d:	add    BYTE PTR [rcx+0x0],al
   14000bca0:	cmp    eax,DWORD PTR [rax]
   14000bca2:	cmp    eax,DWORD PTR [rax]
   14000bca4:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bca8:	cmp    eax,DWORD PTR [rax]
   14000bcaa:	cmp    eax,DWORD PTR [rax]
   14000bcac:	cmp    eax,DWORD PTR [rax]
   14000bcae:	rex.X add BYTE PTR [rcx+0x0],al
   14000bcb2:	sub    DWORD PTR [rax],eax
   14000bcb4:	sub    BYTE PTR [rax],al
   14000bcb6:	add    BYTE PTR [r11],dil
   14000bcb9:	add    BYTE PTR [rbx],bh
   14000bcbb:	add    BYTE PTR [rdi+0x0],al
   14000bcbe:	add    BYTE PTR [r11],dil
   14000bcc1:	add    BYTE PTR [rbx],bh
   14000bcc3:	add    BYTE PTR [rbx],bh
   14000bcc5:	add    BYTE PTR [rbx+0x0],dl
   14000bcc8:	pop    rcx
   14000bcc9:	add    BYTE PTR [rcx],ch
   14000bccb:	add    BYTE PTR [rax],ch
   14000bccd:	add    BYTE PTR [rcx+0x0],al
   14000bcd0:	cmp    eax,DWORD PTR [rax]
   14000bcd2:	cmp    eax,DWORD PTR [rax]
   14000bcd4:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000bcd8:	cmp    eax,DWORD PTR [rax]
   14000bcda:	cmp    eax,DWORD PTR [rax]
   14000bcdc:	cmp    eax,DWORD PTR [rax]
   14000bcde:	and    eax,0x29007300
   14000bce3:	add    BYTE PTR [rbx+0x0],dl
   14000bce6:	cmp    al,BYTE PTR [rax]
   14000bce8:	sub    BYTE PTR [rax],al
   14000bcea:	rex.WRB add BYTE PTR [r8+rax*1+0x3b],r9b
   14000bcef:	add    BYTE PTR [rbx],bh
   14000bcf1:	add    BYTE PTR [rax],dh
   14000bcf3:	add    BYTE PTR [rax+0x0],bh
   14000bcf6:	xor    DWORD PTR [rax],eax
   14000bcf8:	cmp    eax,DWORD PTR [rax]
   14000bcfa:	cmp    eax,DWORD PTR [rax]
   14000bcfc:	cmp    eax,DWORD PTR [rax]
   14000bcfe:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000bd02:	sub    DWORD PTR [rax],eax
   14000bd04:	add    BYTE PTR [rax],al
   14000bd06:	add    BYTE PTR [rax],al
   14000bd08:	xlat   BYTE PTR ds:[rbx]
   14000bd09:	loopne 0x14000bd46
   14000bd0b:	(bad)  
   14000bd0c:	(bad)  
   14000bd0d:	add    esp,DWORD PTR [rbx-0x27ee56b4]
   14000bd13:	outs   dx,BYTE PTR ds:[rsi]
   14000bd14:	and    al,0xae
   14000bd16:	or     bh,BYTE PTR [rsp+rcx*8]
   14000bd19:	scas   al,BYTE PTR es:[rdi]
   14000bd1a:	push   rsp
   14000bd1b:	stos   BYTE PTR es:[rdi],al
   14000bd1c:	out    dx,eax
   14000bd1d:	rcr    DWORD PTR [rip+0x663ba243],0x34        # 0x1a63c5f67
   14000bd24:	jnp    0x14000bcdf
   14000bd26:	adc    esp,DWORD PTR [rbx]
   14000bd28:	sub    esi,esp
   14000bd2a:	pop    rdi
   14000bd2b:	std    
   14000bd2c:	rex.WXB cmp r12,rsi
   14000bd2f:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000bd31:	mov    edi,0x3f115e67
   14000bd36:	mov    esp,0x68004369
   14000bd3b:	add    BYTE PTR [rcx+0x0],ch
   14000bd3e:	outs   dx,BYTE PTR ds:[rsi]
   14000bd3f:	add    BYTE PTR [rbp+0x0],ah
   14000bd42:	jae    0x14000bd44
   14000bd44:	add    BYTE PTR gs:[rax],ah
   14000bd47:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000bd4b:	add    BYTE PTR [rcx+0x0],ah
   14000bd4e:	add    BYTE PTR fs:[rcx+0x0],ch
   14000bd52:	je     0x14000bd54
   14000bd54:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bd5a:	(bad)  
   14000bd5b:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000bd5f:	add    BYTE PTR [rax],ch
   14000bd61:	add    BYTE PTR [rdx+0x0],al
   14000bd64:	imul   eax,DWORD PTR [rax],0x350067
   14000bd6a:	sub    DWORD PTR [rax],eax
   14000bd6c:	add    BYTE PTR [rax],al
   14000bd6e:	add    BYTE PTR [rax],al
   14000bd70:	rex.XB add BYTE PTR [r8+0x0],bpl
   14000bd74:	imul   eax,DWORD PTR [rax],0x65006e
   14000bd7a:	jae    0x14000bd7c
   14000bd7c:	add    BYTE PTR gs:[rax],ah
   14000bd7f:	add    BYTE PTR [rbx+0x0],dl
   14000bd82:	imul   eax,DWORD PTR [rax],0x70006d
   14000bd88:	ins    BYTE PTR es:[rdi],dx
   14000bd89:	add    BYTE PTR [rcx+0x0],ch
   14000bd8c:	data16 add BYTE PTR [rcx+0x0],ch
   14000bd90:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000bd95:	add    BYTE PTR [rax],ch
   14000bd97:	add    BYTE PTR [rdi+0x0],al
   14000bd9a:	rex.X add BYTE PTR [rdx],sil
   14000bd9d:	add    BYTE PTR [rbx],dh
   14000bd9f:	add    BYTE PTR [rcx],dh
   14000bda1:	add    BYTE PTR [rdx],dh
   14000bda3:	add    BYTE PTR [rcx],ch
   14000bda5:	add    BYTE PTR [rax],al
   14000bda7:	add    BYTE PTR [rbx],ah
   14000bda9:	add    BYTE PTR [rbx],dh
   14000bdab:	add    BYTE PTR [rdx],dh
   14000bdad:	add    BYTE PTR [rdi],dh
   14000bdaf:	add    BYTE PTR [rdi],dh
   14000bdb1:	add    BYTE PTR [rax],dh
   14000bdb3:	add    BYTE PTR [rax],al
   14000bdb5:	add    BYTE PTR [rax],al
   14000bdb7:	add    BYTE PTR [rcx+0x0],cl
   14000bdba:	add    BYTE PTR [rdx+0x0],r8b
   14000bdbe:	pop    rdi
   14000bdbf:	add    BYTE PTR [rdx+0x0],al
   14000bdc2:	add    BYTE PTR [r14+0x0],cl
   14000bdc6:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000bdca:	push   rdx
   14000bdcb:	add    BYTE PTR [rdi+0x0],bl
   14000bdce:	xor    al,BYTE PTR [rax]
   14000bdd0:	xor    eax,0x3600
   14000bdd5:	add    BYTE PTR [rax],al
   14000bdd7:	add    BYTE PTR [rcx+0x0],cl
   14000bdda:	add    BYTE PTR [rcx+0x0],r9b
   14000bdde:	pop    rdi
   14000bddf:	add    BYTE PTR [rax+rax*1+0x49],dl
   14000bde3:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14000bde7:	add    BYTE PTR [rbp+0x0],al
   14000bdea:	rex.X add BYTE PTR [rcx+0x0],al
   14000bdee:	push   rdx
   14000bdef:	add    BYTE PTR [rdi+0x0],bl
   14000bdf2:	xor    eax,DWORD PTR [rax]
   14000bdf4:	xor    al,BYTE PTR [rax]
   14000bdf6:	add    BYTE PTR [rax],al
   14000bdf8:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14000bdfc:	push   rax
   14000bdfd:	add    BYTE PTR [rcx+0x0],bl
   14000be00:	pop    rdi
   14000be01:	add    BYTE PTR [rax+0x0],dl
   14000be04:	rex.W add BYTE PTR [rdx+0x0],dl
   14000be08:	add    BYTE PTR [r11+0x0],dl
   14000be0c:	add    BYTE PTR [r15+0x0],r11b
   14000be10:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000be14:	rex.WRX add BYTE PTR [rax],r8b
   14000be17:	add    BYTE PTR [rax],ah
   14000be19:	add    BYTE PTR [rax],al
   14000be1b:	add    BYTE PTR [rdx],ah
   14000be1d:	add    BYTE PTR [rax],al
   14000be1f:	add    BYTE PTR [rsi],ch
   14000be21:	add    BYTE PTR [rax+rax*1+0x78],dh
   14000be25:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000be29:	add    BYTE PTR [rax],al
   14000be2b:	add    BYTE PTR [rax],al
   14000be2d:	add    BYTE PTR [rax],al
   14000be2f:	add    BYTE PTR [rsi],ch
   14000be31:	add    BYTE PTR [rax+0x0],ch
   14000be34:	je     0x14000be36
   14000be36:	ins    DWORD PTR es:[rdi],dx
	...
   14000be3f:	add    BYTE PTR [rsi],ch
   14000be41:	add    BYTE PTR [rax+0x0],ch
   14000be44:	je     0x14000be46
   14000be46:	ins    DWORD PTR es:[rdi],dx
   14000be47:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000be4b:	add    BYTE PTR [rax],al
   14000be4d:	add    BYTE PTR [rax],al
   14000be4f:	add    BYTE PTR [rsi],ch
   14000be51:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000be55:	add    BYTE PTR [rbx+0x0],ah
	...
   14000be60:	add    BYTE PTR cs:[rdx+0x0],dh
   14000be64:	je     0x14000be66
   14000be66:	data16 add BYTE PTR [rax],al
   14000be69:	add    BYTE PTR [rax],al
   14000be6b:	add    BYTE PTR [rax],al
   14000be6d:	add    BYTE PTR [rax],al
   14000be6f:	add    BYTE PTR [rdx+0x0],al
   14000be72:	jne    0x14000be74
   14000be74:	je     0x14000be76
   14000be76:	je     0x14000be78
   14000be78:	outs   dx,DWORD PTR ds:[rsi]
   14000be79:	add    BYTE PTR [rsi+0x0],ch
   14000be7c:	add    BYTE PTR [rax],al
   14000be7e:	add    BYTE PTR [rax],al
   14000be80:	and    al,BYTE PTR [rax]
   14000be82:	and    eax,0x22007300
	...
   14000be8f:	add    BYTE PTR [rax],ah
   14000be91:	add    BYTE PTR [rdx],ah
   14000be93:	add    BYTE PTR [rip+0x22007300],ah        # 0x162013199
   14000be99:	add    BYTE PTR [rax],al
   14000be9b:	add    BYTE PTR [rax],al
   14000be9d:	add    BYTE PTR [rax],al
   14000be9f:	add    BYTE PTR [rbx+0x0],al
   14000bea2:	add    BYTE PTR [rbp+0x0],r8b
   14000bea6:	push   rdx
   14000bea7:	add    BYTE PTR [rdx+0x0],dl
   14000beaa:	pop    rdi
   14000beab:	add    BYTE PTR [rax+rax*1+0x49],al
   14000beaf:	add    BYTE PTR [rcx+0x0],al
   14000beb2:	rex.WR add BYTE PTR [rdi+0x0],r9b
   14000beb6:	rex.RXB add BYTE PTR [r14+0x0],r8b
   14000beba:	add    BYTE PTR [r9+0x0],cl
   14000bebe:	rex.WR add BYTE PTR [rbp+0x0],r10b
   14000bec2:	push   rdx
   14000bec3:	add    BYTE PTR [rbp+0x0],al
   14000bec6:	add    BYTE PTR [rax],al
   14000bec8:	add    BYTE PTR [r8+r8*1+0x45],al
   14000becd:	add    BYTE PTR [rdx+0x0],dl
   14000bed0:	push   rdx
   14000bed1:	add    BYTE PTR [rdi+0x0],bl
   14000bed4:	rex.RXB add BYTE PTR [r13+0x0],r8b
   14000bed8:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000bedc:	push   rdx
   14000bedd:	add    BYTE PTR [rcx+0x0],al
   14000bee0:	rex.WR add BYTE PTR [rbx+0x0],r8b
   14000bee4:	rex.WRXB add BYTE PTR [r8+r8*1+0x45],r8b
   14000bee9:	add    BYTE PTR [rbx+0x0],dl
   14000beec:	add    BYTE PTR [rax],al
   14000beee:	add    BYTE PTR [rax],al
   14000bef0:	add    BYTE PTR [r8+r8*1+0x45],al
   14000bef5:	add    BYTE PTR [rdx+0x0],dl
   14000bef8:	push   rdx
   14000bef9:	add    BYTE PTR [rdi+0x0],bl
   14000befc:	push   rbx
   14000befd:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000bf01:	add    BYTE PTR [rbp+0x0],dl
   14000bf04:	add    BYTE PTR [r8+r8*1+0x53],dl
   14000bf09:	add    BYTE PTR [rcx+0x0],cl
   14000bf0c:	pop    rdx
   14000bf0d:	add    BYTE PTR [rbp+0x0],al
	...
   14000bf18:	add    BYTE PTR [r8+r8*1+0x45],al
   14000bf1d:	add    BYTE PTR [rdx+0x0],dl
   14000bf20:	push   rdx
   14000bf21:	add    BYTE PTR [rdi+0x0],bl
   14000bf24:	rex.WB add BYTE PTR [r14+0x0],cl
   14000bf28:	rex.WB add BYTE PTR [r8+rax*1+0x49],dl
   14000bf2d:	add    BYTE PTR [rcx+0x0],al
   14000bf30:	rex.WR add BYTE PTR [rcx+0x0],r9b
   14000bf34:	pop    rdx
   14000bf35:	add    BYTE PTR [rcx+0x0],al
   14000bf38:	push   rsp
   14000bf39:	add    BYTE PTR [rcx+0x0],cl
   14000bf3c:	rex.WRXB add BYTE PTR [r14+0x0],r9b
	...
   14000bf48:	add    BYTE PTR [r8+r8*1+0x45],al
   14000bf4d:	add    BYTE PTR [rdx+0x0],dl
   14000bf50:	push   rdx
   14000bf51:	add    BYTE PTR [rdi+0x0],bl
   14000bf54:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   14000bf58:	push   rsp
   14000bf59:	add    BYTE PTR [rbp+0x0],al
   14000bf5c:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14000bf60:	rex.WR add BYTE PTR [rcx+0x0],r8b
   14000bf64:	push   rsp
   14000bf65:	add    BYTE PTR [rbp+0x0],al
	...
   14000bf70:	add    BYTE PTR [r8+r8*1+0x45],al
   14000bf75:	add    BYTE PTR [rdx+0x0],dl
   14000bf78:	push   rdx
   14000bf79:	add    BYTE PTR [rdi+0x0],bl
   14000bf7c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   14000bf80:	rex.W add BYTE PTR [rcx+0x0],cl
   14000bf84:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   14000bf88:	push   rsp
   14000bf89:	add    BYTE PTR [rcx+0x0],al
   14000bf8c:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   14000bf90:	add    BYTE PTR [r8],r8b
   14000bf93:	add    BYTE PTR [rax],al
   14000bf95:	add    BYTE PTR [rax],al
   14000bf97:	add    BYTE PTR [rbx+0x0],al
   14000bf9a:	add    BYTE PTR [rbp+0x0],r8b
   14000bf9e:	push   rdx
   14000bf9f:	add    BYTE PTR [rdx+0x0],dl
   14000bfa2:	pop    rdi
   14000bfa3:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000bfa7:	add    BYTE PTR [rcx+0x0],al
   14000bfaa:	add    BYTE PTR [rbx+0x0],r10b
   14000bfae:	push   rsp
   14000bfaf:	add    BYTE PTR [rdx+0x0],dl
   14000bfb2:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14000bfb6:	rex.WB add BYTE PTR [r8+rax*1+0x55],cl
   14000bfbb:	add    BYTE PTR [rdx+0x0],dl
   14000bfbe:	add    BYTE PTR [r8],r8b
   14000bfc1:	add    BYTE PTR [rax],al
   14000bfc3:	add    BYTE PTR [rax],al
   14000bfc5:	add    BYTE PTR [rax],al
   14000bfc7:	add    BYTE PTR [rbx+0x0],al
   14000bfca:	add    BYTE PTR [rbp+0x0],r8b
   14000bfce:	push   rdx
   14000bfcf:	add    BYTE PTR [rdx+0x0],dl
   14000bfd2:	pop    rdi
   14000bfd3:	add    BYTE PTR [rsi+0x0],al
   14000bfd6:	rex.WB add BYTE PTR [r14+0x0],cl
   14000bfda:	add    BYTE PTR [rdx+0x0],r10b
   14000bfde:	add    BYTE PTR [r11+0x0],r10b
   14000bfe2:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14000bfe6:	rex.WB add BYTE PTR [r8+rax*1+0x55],cl
   14000bfeb:	add    BYTE PTR [rdx+0x0],dl
   14000bfee:	add    BYTE PTR [r8],r8b
   14000bff1:	add    BYTE PTR [rax],al
   14000bff3:	add    BYTE PTR [rax],al
   14000bff5:	add    BYTE PTR [rax],al
   14000bff7:	add    BYTE PTR [rbx+0x0],al
   14000bffa:	add    BYTE PTR [rbp+0x0],r8b
   14000bffe:	push   rdx
   14000bfff:	add    BYTE PTR [rdx+0x0],dl
   14000c002:	pop    rdi
   14000c003:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000c007:	add    BYTE PTR [rcx+0x0],al
   14000c00a:	add    BYTE PTR [rdx+0x0],r10b
   14000c00e:	add    BYTE PTR [r11+0x0],r10b
   14000c012:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14000c016:	rex.WB add BYTE PTR [r8+rax*1+0x55],cl
   14000c01b:	add    BYTE PTR [rdx+0x0],dl
   14000c01e:	add    BYTE PTR [r8],r8b
   14000c021:	add    BYTE PTR [rax],al
   14000c023:	add    BYTE PTR [rax],al
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rbx+0x0],al
   14000c02a:	add    BYTE PTR [rbp+0x0],r8b
   14000c02e:	push   rdx
   14000c02f:	add    BYTE PTR [rdx+0x0],dl
   14000c032:	pop    rdi
   14000c033:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000c037:	add    BYTE PTR [rbx+0x0],al
   14000c03a:	rex.WXB add BYTE PTR [r10+0x0],dl
   14000c03e:	add    BYTE PTR [r11+0x0],r10b
   14000c042:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14000c046:	rex.WB add BYTE PTR [r8+rax*1+0x55],cl
   14000c04b:	add    BYTE PTR [rdx+0x0],dl
   14000c04e:	add    BYTE PTR [r8],r8b
   14000c051:	add    BYTE PTR [rax],al
   14000c053:	add    BYTE PTR [rax],al
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    BYTE PTR [rbx+0x0],al
   14000c05a:	add    BYTE PTR [rbp+0x0],r8b
   14000c05e:	push   rdx
   14000c05f:	add    BYTE PTR [rdx+0x0],dl
   14000c062:	pop    rdi
   14000c063:	add    BYTE PTR [rbp+0x0],cl
   14000c066:	add    BYTE PTR [r13+0x0],r9b
   14000c06a:	add    BYTE PTR [r8+rax*1+0x4c],cl
   14000c06f:	add    BYTE PTR [rdi+0x0],cl
   14000c072:	rex.XB add BYTE PTR [r14+0x0],al
   14000c076:	add    BYTE PTR [r9+0x0],cl
   14000c07a:	rex.WR add BYTE PTR [rbp+0x0],r10b
   14000c07e:	push   rdx
   14000c07f:	add    BYTE PTR [rbp+0x0],al
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	add    BYTE PTR [rax],al
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	add    BYTE PTR [r8+r8*1+0x45],al
   14000c08d:	add    BYTE PTR [rdx+0x0],dl
   14000c090:	push   rdx
   14000c091:	add    BYTE PTR [rdi+0x0],bl
   14000c094:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000c098:	rex.WRB add BYTE PTR [r8+rax*1+0x4f],r9b
   14000c09d:	add    BYTE PTR [rbx+0x0],al
   14000c0a0:	rex.WXB add BYTE PTR [r14+0x0],al
   14000c0a4:	add    BYTE PTR [r9+0x0],cl
   14000c0a8:	rex.WR add BYTE PTR [rbp+0x0],r10b
   14000c0ac:	push   rdx
   14000c0ad:	add    BYTE PTR [rbp+0x0],al
	...
   14000c0b8:	add    BYTE PTR [r8+r8*1+0x45],al
   14000c0bd:	add    BYTE PTR [rdx+0x0],dl
   14000c0c0:	push   rdx
   14000c0c1:	add    BYTE PTR [rdi+0x0],bl
   14000c0c4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   14000c0c8:	rex.W add BYTE PTR [rdi+0x0],cl
   14000c0cc:	rex.WRXB add BYTE PTR [r11+0x0],r9b
	...
   14000c0d8:	add    BYTE PTR [r8+r8*1+0x45],al
   14000c0dd:	add    BYTE PTR [rdx+0x0],dl
   14000c0e0:	push   rdx
   14000c0e1:	add    BYTE PTR [rdi+0x0],bl
   14000c0e4:	push   rdx
   14000c0e5:	add    BYTE PTR [rbp+0x0],al
   14000c0e8:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14000c0ec:	push   rbx
   14000c0ed:	add    BYTE PTR [rax+rax*1+0x45],dl
   14000c0f1:	add    BYTE PTR [rdx+0x0],dl
   14000c0f4:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14000c0f8:	rex.RXB add BYTE PTR [r14+0x0],r8b
   14000c0fc:	add    BYTE PTR [r9+0x0],cl
   14000c100:	rex.WR add BYTE PTR [rax],r8b
   14000c103:	add    BYTE PTR [rax],al
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    BYTE PTR [rsi+0x0],al
   14000c10a:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000c10e:	push   rdx
   14000c10f:	add    BYTE PTR [rdx+0x0],dl
   14000c112:	pop    rdi
   14000c113:	add    BYTE PTR [rbx+0x0],dl
   14000c116:	push   rbp
   14000c117:	add    BYTE PTR [rdx+0x0],al
   14000c11a:	add    BYTE PTR [r8+r8*1+0x41],cl
   14000c11f:	add    BYTE PTR [rbx+0x0],dl
   14000c122:	push   rbx
   14000c123:	add    BYTE PTR [rsi+0x0],al
   14000c126:	add    BYTE PTR [r9+0x0],cl
   14000c12a:	rex.WR add BYTE PTR [rbp+0x0],r10b
   14000c12e:	push   rdx
   14000c12f:	add    BYTE PTR [rbp+0x0],al
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	add    BYTE PTR [rax],al
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	and    eax,0x20007300
   14000c13d:	add    BYTE PTR [rdx],ah
   14000c13f:	add    BYTE PTR [rip+0x22007300],ah        # 0x162013445
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rip+0x20007300],ah        # 0x16001344d
   14000c14d:	add    BYTE PTR [rip+0x7300],ah        # 0x140013453
   14000c153:	add    BYTE PTR [rax],al
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	add    BYTE PTR [rdx+0x0],dh
   14000c15a:	(bad)  
   14000c15b:	add    BYTE PTR [rax],al
   14000c15d:	add    BYTE PTR [rax],al
   14000c15f:	add    BYTE PTR [rcx+0x0],ah
   14000c162:	(bad)  
   14000c163:	add    BYTE PTR [rbx],ch
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rdi+0x0],dh
   14000c16a:	(bad)  
   14000c16b:	add    BYTE PTR [rax],al
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    BYTE PTR [rdx],cl
   14000c171:	add    BYTE PTR [rax],al
   14000c173:	add    BYTE PTR [rax],al
   14000c175:	add    BYTE PTR [rax],al
   14000c177:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c17b:	add    BYTE PTR [rsi+0x0],ah
   14000c17e:	(bad)  
   14000c17f:	add    BYTE PTR [rbp+0x0],dh
   14000c182:	ins    BYTE PTR es:[rdi],dx
   14000c183:	add    BYTE PTR [rax+rax*1+0x2e],dh
   14000c187:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000c18b:	add    BYTE PTR [rdi+0x0],ah
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	or     al,BYTE PTR [rax]
   14000c192:	add    BYTE PTR [r10+0x0],r14b
   14000c196:	jb     0x14000c198
   14000c198:	outs   dx,DWORD PTR ds:[rsi]
   14000c199:	add    BYTE PTR [rdx+0x0],dh
   14000c19c:	cmp    al,BYTE PTR [rax]
   14000c19e:	and    BYTE PTR [rax],al
   14000c1a0:	push   rax
   14000c1a1:	add    BYTE PTR [rcx+0x0],ah
   14000c1a4:	jb     0x14000c1a6
   14000c1a6:	jae    0x14000c1a8
   14000c1a8:	add    BYTE PTR gs:[rax+rax*1+0x65],dl
   14000c1ad:	add    BYTE PTR [rax+0x0],bh
   14000c1b0:	je     0x14000c1b2
   14000c1b2:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c1b6:	ins    BYTE PTR es:[rdi],dx
   14000c1b7:	add    BYTE PTR [rbp+0x0],ah
   14000c1ba:	sub    BYTE PTR [rax],al
   14000c1bc:	add    BYTE PTR cs:[rsi],ch
   14000c1bf:	add    BYTE PTR [rsi],ch
   14000c1c1:	add    BYTE PTR [rcx],ch
   14000c1c3:	add    BYTE PTR [rax],ah
   14000c1c5:	add    BYTE PTR [rcx+0x0],ch
   14000c1c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c1c9:	add    BYTE PTR [rbx+0x0],dh
   14000c1cc:	jne    0x14000c1ce
   14000c1ce:	data16 add BYTE PTR [rsi+0x0],ah
   14000c1d2:	imul   eax,DWORD PTR [rax],0x690063
   14000c1d8:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c1dc:	je     0x14000c1de
   14000c1de:	and    BYTE PTR [rax],al
   14000c1e0:	ins    DWORD PTR es:[rdi],dx
   14000c1e1:	add    BYTE PTR [rbp+0x0],ah
   14000c1e4:	ins    DWORD PTR es:[rdi],dx
   14000c1e5:	add    BYTE PTR [rdi+0x0],ch
   14000c1e8:	jb     0x14000c1ea
   14000c1ea:	jns    0x14000c1ec
   14000c1ec:	and    DWORD PTR [rax],eax
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	rex.WB add BYTE PTR [r13+0x0],cl
   14000c1f4:	push   rsp
   14000c1f5:	add    BYTE PTR [rbx+0x0],al
   14000c1f8:	push   rsp
   14000c1f9:	add    BYTE PTR [rdx+0x0],dl
   14000c1fc:	rex.WR add BYTE PTR [rsi+0x0],r9b
   14000c200:	add    BYTE PTR cs:[rax+rax*1+0x4c],al
   14000c205:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000c209:	add    BYTE PTR [rax],al
   14000c20b:	add    BYTE PTR [rax],al
   14000c20d:	add    BYTE PTR [rax],al
   14000c20f:	add    BYTE PTR [rbx+0x72],al
   14000c212:	gs (bad) 
   14000c214:	je     0x14000c27b
   14000c216:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c218:	jae    0x14000c28e
   14000c21a:	(bad)  
   14000c21b:	outs   dx,BYTE PTR ds:[rsi]
   14000c21c:	movsxd esp,DWORD PTR [rbp+0x0]
   14000c21f:	add    BYTE PTR [rdx],cl
   14000c221:	add    BYTE PTR [rbp+0x0],al
   14000c224:	jb     0x14000c226
   14000c226:	jb     0x14000c228
   14000c228:	outs   dx,DWORD PTR ds:[rsi]
   14000c229:	add    BYTE PTR [rdx+0x0],dh
   14000c22c:	cmp    al,BYTE PTR [rax]
   14000c22e:	and    BYTE PTR [rax],al
   14000c230:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c234:	jne    0x14000c236
   14000c236:	ins    BYTE PTR es:[rdi],dx
   14000c237:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c23b:	add    BYTE PTR [rsi+0x0],ch
   14000c23e:	outs   dx,DWORD PTR ds:[rsi]
   14000c23f:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000c243:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000c247:	add    BYTE PTR [rcx+0x0],ah
   14000c24a:	add    BYTE PTR fs:[rax],ah
   14000c24d:	add    BYTE PTR [rcx+0x0],cl
   14000c250:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r10b
   14000c255:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000c259:	add    BYTE PTR [rax+rax*1+0x4e],cl
   14000c25d:	add    BYTE PTR [rsi],ch
   14000c25f:	add    BYTE PTR [rax+rax*1+0x4c],al
   14000c263:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000c267:	add    BYTE PTR [rdx],cl
   14000c269:	add    BYTE PTR [rsi+0x0],cl
   14000c26c:	jne    0x14000c26e
   14000c26e:	ins    DWORD PTR es:[rdi],dx
   14000c26f:	add    BYTE PTR [rdx+0x0],ah
   14000c272:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c276:	and    BYTE PTR [rax],al
   14000c278:	outs   dx,DWORD PTR ds:[rsi]
   14000c279:	add    BYTE PTR [rsi+0x0],ah
   14000c27c:	and    BYTE PTR [rax],al
   14000c27e:	data16 add BYTE PTR [rcx+0x0],ch
   14000c282:	ins    BYTE PTR es:[rdi],dx
   14000c283:	add    BYTE PTR [rbp+0x0],ah
   14000c286:	jae    0x14000c288
   14000c288:	and    BYTE PTR [rax],al
   14000c28a:	je     0x14000c28c
   14000c28c:	outs   dx,DWORD PTR ds:[rsi]
   14000c28d:	add    BYTE PTR [rax],ah
   14000c28f:	add    BYTE PTR [rax+0x0],dh
   14000c292:	(bad)  
   14000c293:	add    BYTE PTR [rdx+0x0],dh
   14000c296:	jae    0x14000c298
   14000c298:	add    BYTE PTR gs:[rdx],bh
   14000c29b:	add    BYTE PTR [rax],ah
   14000c29d:	add    BYTE PTR [rip+0x6400],ah        # 0x1400126a3
   14000c2a3:	add    BYTE PTR [rax],dh
   14000c2a5:	add    BYTE PTR [rax],al
   14000c2a7:	add    BYTE PTR [rip+0x6400],ah        # 0x1400126ad
   14000c2ad:	add    BYTE PTR [rax],al
   14000c2af:	add    BYTE PTR [rcx+0x6e],ah
   14000c2b2:	jae    0x14000c31d
   14000c2b4:	movsxd esi,DWORD PTR [rax+0x67]
   14000c2b7:	add    BYTE PTR [rax+0x61],dh
   14000c2ba:	jb     0x14000c2bc
   14000c2bc:	add    BYTE PTR [rax+0x30],bh
   14000c2bf:	(bad)  
   14000c2c0:	add    BYTE PTR [rax],al
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	add    BYTE PTR [rax+0x30],bh
   14000c2c7:	add    BYTE PTR fs:[rax],al
   14000c2ca:	add    BYTE PTR [rax],al
   14000c2cc:	je     0x14000c32f
   14000c2ce:	(bad)  
   14000c2cf:	add    BYTE PTR [rsp+riz*2+0x62],ch
   14000c2d3:	ins    BYTE PTR es:[rdi],dx
   14000c2d4:	jno    0x14000c34b
   14000c2d6:	outs   dx,DWORD PTR ds:[rsi]
   14000c2d7:	je     0x14000c33e
   14000c2d9:	add    BYTE PTR [rax],al
   14000c2db:	add    BYTE PTR [rax],al
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rdx+0x64],dh
   14000c2e2:	(bad)  
   14000c2e3:	ins    BYTE PTR es:[rdi],dx
   14000c2e4:	jno    0x14000c35b
   14000c2e6:	outs   dx,DWORD PTR ds:[rsi]
   14000c2e7:	je     0x14000c34e
   14000c2e9:	add    BYTE PTR [rax],al
   14000c2eb:	add    BYTE PTR [rdx+0x69],ah
   14000c2ee:	outs   dx,BYTE PTR ds:[rsi]
   14000c2ef:	add    BYTE PTR [rdi],ah
   14000c2f1:	add    BYTE PTR [rax],al
   14000c2f3:	add    BYTE PTR [rbx+0x0],bh
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	jge    0x14000c2fa
   14000c2fa:	add    BYTE PTR [rax],al
   14000c2fc:	pop    rsp
   14000c2fd:	add    BYTE PTR [rax],al
   14000c2ff:	add    BYTE PTR [rcx+0x75],ah
   14000c302:	je     0x14000c36c
   14000c304:	outs   dx,DWORD PTR ds:[rsi]
   14000c305:	jb     0x14000c307
   14000c307:	add    BYTE PTR [rbx+0x6f],ah
   14000c30a:	ins    DWORD PTR es:[rdi],dx
   14000c30b:	ins    DWORD PTR es:[rdi],dx
   14000c30c:	outs   dx,BYTE PTR gs:[rsi]
   14000c30e:	je     0x14000c310
   14000c310:	outs   dx,DWORD PTR fs:[rsi]
   14000c312:	movsxd esp,DWORD PTR [rbx+0x6f]
   14000c315:	ins    DWORD PTR es:[rdi],dx
   14000c316:	ins    DWORD PTR es:[rdi],dx
   14000c317:	add    BYTE PTR [rsi+0x6f],ah
   14000c31a:	outs   dx,DWORD PTR ds:[rsi]
   14000c31b:	je     0x14000c382
   14000c31d:	jb     0x14000c31f
   14000c31f:	add    BYTE PTR [rsi+0x6f],ah
   14000c322:	outs   dx,DWORD PTR ds:[rsi]
   14000c323:	je     0x14000c38a
   14000c325:	jb     0x14000c38d
   14000c327:	add    BYTE PTR [rsi+0x6f],ah
   14000c32a:	outs   dx,DWORD PTR ds:[rsi]
   14000c32b:	je     0x14000c392
   14000c32d:	jb     0x14000c39b
   14000c32f:	add    BYTE PTR [rsi+0x6f],ah
   14000c332:	outs   dx,DWORD PTR ds:[rsi]
   14000c333:	je     0x14000c39a
   14000c335:	jb     0x14000c3a9
   14000c337:	add    BYTE PTR [rsi+0x6f],ah
   14000c33a:	outs   dx,DWORD PTR ds:[rsi]
   14000c33b:	je     0x14000c3ab
   14000c33d:	outs   dx,DWORD PTR ds:[rsi]
   14000c33e:	je     0x14000c3a5
   14000c340:	add    BYTE PTR [rax],al
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	push   0x65646165
   14000c349:	jb     0x14000c34b
   14000c34b:	add    BYTE PTR [rax],al
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    BYTE PTR [rax+0x65],ch
   14000c352:	(bad)  
   14000c353:	fs gs jb 0x14000c3bd
   14000c357:	add    BYTE PTR [rax+0x65],ch
   14000c35a:	(bad)  
   14000c35b:	fs gs jb 0x14000c3cb
   14000c35f:	add    BYTE PTR [rax+0x65],ch
   14000c362:	(bad)  
   14000c363:	fs gs jb 0x14000c3d9
   14000c367:	add    BYTE PTR [rcx+rbp*2+0x74],dh
   14000c36b:	ins    BYTE PTR es:[rdi],dx
   14000c36c:	add    BYTE PTR gs:[rax],al
   14000c36f:	add    BYTE PTR [rcx+0x6e],ch
   14000c372:	outs   dx,WORD PTR ds:[rsi]
   14000c374:	add    BYTE PTR [rax],al
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	jae    0x14000c3ef
   14000c37a:	(bad)  
   14000c37b:	push   0x65
   14000c37d:	movsxd esi,DWORD PTR [rax+rax*1+0x63]
   14000c381:	outs   dx,DWORD PTR ds:[rsi]
   14000c382:	ins    DWORD PTR es:[rdi],dx
   14000c383:	jo     0x14000c3e6
   14000c385:	outs   dx,BYTE PTR ds:[rsi]
   14000c386:	jns    0x14000c388
   14000c388:	outs   dx,DWORD PTR ds:[rsi]
   14000c389:	(bad)  
   14000c38a:	push   0x65
   14000c38c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000c390:	(bad)  
   14000c391:	jne    0x14000c403
   14000c393:	je     0x14000c3fe
   14000c395:	ins    DWORD PTR es:[rdi],dx
   14000c396:	add    BYTE PTR [rax],al
   14000c398:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000c39b:	outs   dx,DWORD PTR ds:[rsi]
   14000c39c:	jb     0x14000c412
   14000c39e:	(bad)  
   14000c39f:	ins    BYTE PTR es:[rdi],dx
	...
   14000c3a8:	movsxd esi,DWORD PTR [rdx+0x65]
   14000c3ab:	(bad)  
   14000c3ac:	je     0x14000c417
   14000c3ae:	ins    DWORD PTR es:[rdi],dx
   14000c3af:	add    BYTE PTR [rsi+0x6f],ah
   14000c3b2:	outs   dx,BYTE PTR ds:[rsi]
   14000c3b3:	je     0x14000c429
   14000c3b5:	(bad)  
   14000c3b6:	ins    BYTE PTR es:[rdi],dx
   14000c3b7:	add    BYTE PTR [rsi+0x74],ah
   14000c3ba:	outs   dx,BYTE PTR ds:[rsi]
   14000c3bb:	movsxd ebp,DWORD PTR [rsi+0x0]
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	data16 je 0x14000c431
   14000c3c3:	jae    0x14000c42a
   14000c3c5:	jo     0x14000c3c7
   14000c3c7:	add    BYTE PTR [rsi+0x74],ah
   14000c3ca:	outs   dx,BYTE PTR ds:[rsi]
   14000c3cb:	jae    0x14000c432
   14000c3cd:	jo     0x14000c432
   14000c3cf:	add    BYTE PTR [rbx+0x65],ch
   14000c3d2:	jns    0x14000c44b
   14000c3d4:	outs   dx,DWORD PTR ds:[rsi]
   14000c3d5:	jb     0x14000c43b
   14000c3d7:	jae    0x14000c3d9
   14000c3d9:	add    BYTE PTR [rax],al
   14000c3db:	add    BYTE PTR [rax],al
   14000c3dd:	add    BYTE PTR [rax],al
   14000c3df:	add    BYTE PTR [rdi+0x70],ch
   14000c3e2:	gs jb  0x14000c446
   14000c3e5:	je     0x14000c456
   14000c3e7:	jb     0x14000c3e9
   14000c3e9:	add    BYTE PTR [rax],al
   14000c3eb:	add    BYTE PTR [rax+0x69],dh
   14000c3ee:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000c3f2:	add    BYTE PTR [rax],al
   14000c3f4:	add    BYTE PTR [rax],al
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	jo     0x14000c46c
   14000c3fa:	imul   ebp,DWORD PTR [rsi+0x74],0x70006d69
   14000c401:	jb     0x14000c46c
   14000c403:	jbe    0x14000c466
   14000c405:	je     0x14000c46c
   14000c407:	xor    DWORD PTR [rax],eax
   14000c409:	add    BYTE PTR [rax],al
   14000c40b:	add    BYTE PTR [rdx+0x65],dh
   14000c40e:	jbe    0x14000c484
   14000c410:	imul   ebp,DWORD PTR [rbp+0x0],0x65787200
   14000c417:	add    BYTE PTR [rbx+0x74],dh
   14000c41a:	jns    0x14000c488
   14000c41c:	gs jae 0x14000c487
   14000c41f:	gs gs je 0x14000c423
   14000c423:	add    BYTE PTR [rbx+riz*2+0x0],dh
   14000c427:	add    BYTE PTR [rax+rdi*2+0x65],dh
   14000c42b:	add    BYTE PTR [rax+0x65],bh
   14000c42e:	add    BYTE PTR [rax],al
   14000c430:	add    BYTE PTR [r10+0x0],r14b
   14000c434:	jb     0x14000c436
   14000c436:	outs   dx,DWORD PTR ds:[rsi]
   14000c437:	add    BYTE PTR [rdx+0x0],dh
   14000c43a:	cmp    al,BYTE PTR [rax]
   14000c43c:	and    BYTE PTR [rax],al
   14000c43e:	ja     0x14000c440
   14000c440:	push   0x6e006500
   14000c445:	add    BYTE PTR [rax],ah
   14000c447:	add    BYTE PTR [rax+0x0],dh
   14000c44a:	(bad)  
   14000c44b:	add    BYTE PTR [rdx+0x0],dh
   14000c44e:	jae    0x14000c450
   14000c450:	imul   eax,DWORD PTR [rax],0x67006e
   14000c456:	and    BYTE PTR [rax],al
   14000c458:	push   0x78006500
   14000c45d:	add    BYTE PTR [rax],ah
   14000c45f:	add    BYTE PTR [rcx+0x0],ch
   14000c462:	outs   dx,BYTE PTR ds:[rsi]
   14000c463:	add    BYTE PTR [rax],ah
   14000c465:	add    BYTE PTR [rdx+0x0],dl
   14000c468:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c46c:	add    BYTE PTR fs:[rax+rax*1+0x69],cl
   14000c471:	add    BYTE PTR [rsi+0x0],ch
   14000c474:	add    BYTE PTR gs:[rax],ch
   14000c477:	add    BYTE PTR [rsi],ch
   14000c479:	add    BYTE PTR [rsi],ch
   14000c47b:	add    BYTE PTR [rsi],ch
   14000c47d:	add    BYTE PTR [rcx],ch
	...
   14000c48f:	add    BYTE PTR [rbp+0x0],al
   14000c492:	jb     0x14000c494
   14000c494:	jb     0x14000c496
   14000c496:	outs   dx,DWORD PTR ds:[rsi]
   14000c497:	add    BYTE PTR [rdx+0x0],dh
   14000c49a:	cmp    al,BYTE PTR [rax]
   14000c49c:	and    BYTE PTR [rax],al
   14000c49e:	jo     0x14000c4a0
   14000c4a0:	outs   dx,DWORD PTR ds:[rsi]
   14000c4a1:	add    BYTE PTR [rcx+0x0],ch
   14000c4a4:	outs   dx,BYTE PTR ds:[rsi]
   14000c4a5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c4a9:	add    BYTE PTR [rdx+0x0],dh
   14000c4ac:	and    BYTE PTR [rax],al
   14000c4ae:	jae    0x14000c4b0
   14000c4b0:	push   0x75006f00
   14000c4b5:	add    BYTE PTR [rax+rax*1+0x64],ch
   14000c4b9:	add    BYTE PTR [rax],ah
   14000c4bb:	add    BYTE PTR [rsi+0x0],ch
   14000c4be:	outs   dx,DWORD PTR ds:[rsi]
   14000c4bf:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000c4c3:	add    BYTE PTR [rdx+0x0],ah
   14000c4c6:	add    BYTE PTR gs:[rax],ah
   14000c4c9:	add    BYTE PTR [rsi+0x0],cl
   14000c4cc:	push   rbp
   14000c4cd:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14000c4d1:	add    BYTE PTR [rax],ah
   14000c4d3:	add    BYTE PTR [rcx+0x0],ch
   14000c4d6:	outs   dx,BYTE PTR ds:[rsi]
   14000c4d7:	add    BYTE PTR [rax],ah
   14000c4d9:	add    BYTE PTR [rax+0x0],dl
   14000c4dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c4dd:	add    BYTE PTR [rax+0x0],dh
   14000c4e0:	push   rbx
   14000c4e1:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000c4e5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c4e9:	add    BYTE PTR [rax],ch
   14000c4eb:	add    BYTE PTR [rsi],ch
   14000c4ed:	add    BYTE PTR [rsi],ch
   14000c4ef:	add    BYTE PTR [rsi],ch
   14000c4f1:	add    BYTE PTR [rcx],ch
   14000c4f3:	add    BYTE PTR [rax],al
   14000c4f5:	add    BYTE PTR [rax],al
   14000c4f7:	add    BYTE PTR [rdx],ch
   14000c4f9:	add    BYTE PTR [rax],al
   14000c4fb:	add    BYTE PTR [rax],al
   14000c4fd:	add    BYTE PTR [rax],al
   14000c4ff:	add    BYTE PTR [rbp+0x0],al
   14000c502:	jb     0x14000c504
   14000c504:	jb     0x14000c506
   14000c506:	outs   dx,DWORD PTR ds:[rsi]
   14000c507:	add    BYTE PTR [rdx+0x0],dh
   14000c50a:	and    DWORD PTR [rax],eax
   14000c50c:	and    DWORD PTR [rax],eax
   14000c50e:	add    BYTE PTR [rax],al
   14000c510:	rex.XB jb 0x14000c578
   14000c513:	(bad)  
   14000c514:	je     0x14000c57b
   14000c516:	push   rbp
   14000c517:	imul   r12d,DWORD PTR [rbx+0x50],0x79786f72
   14000c51f:	add    bh,dl
   14000c521:	loopne 0x14000c55e
   14000c523:	(bad)  
   14000c524:	(bad)  
   14000c525:	add    esp,DWORD PTR [rbx-0x27ee56b4]
   14000c52b:	outs   dx,BYTE PTR ds:[rsi]
   14000c52c:	and    al,0xae
   14000c52e:	or     bh,BYTE PTR [rcx+rax*4]
   14000c531:	or     edi,esp
   14000c533:	rex.WB ins BYTE PTR es:[rdi],dx
   14000c535:	and    BYTE PTR [rdi+0x40],bh
   14000c538:	lahf   
   14000c539:	pop    rbx
   14000c53a:	adc    BYTE PTR [rsi+0x5a],ch
   14000c53d:	ds loop 0x14000c517
   14000c540:	sub    esi,esp
   14000c542:	pop    rdi
   14000c543:	std    
   14000c544:	rex.WXB cmp r12,rsi
   14000c547:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000c549:	mov    edi,0x3f115e67
   14000c54e:	mov    esp,0x2080269
   14000c553:	and    BYTE PTR [rip+0xffffffff97003009],ah        # 0xd700f562
   14000c559:	cli    
   14000c55a:	add    BYTE PTR [rax+0x7e6882c8],al
   14000c560:	mov    dil,0xbc
   14000c563:	mov    DWORD PTR [rcx],ebx
   14000c565:	(bad)  
   14000c566:	sbb    dl,BYTE PTR [rax]
   14000c568:	mov    esp,0x1dd00b7
   14000c56d:	(bad)  
   14000c56e:	push   rbp
   14000c56f:	scas   eax,DWORD PTR es:[rdi]
   14000c570:	or     eax,DWORD PTR [rcx]
   14000c572:	add    BYTE PTR [rax],al
   14000c574:	add    BYTE PTR [rax],al
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	rol    BYTE PTR [rax],0x0
   14000c57b:	add    BYTE PTR [rax],al
   14000c57d:	add    BYTE PTR [rax],al
   14000c57f:	rex.RX push rbx
   14000c581:	add    BYTE PTR [rdi+0x0],ch
   14000c584:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000c589:	add    BYTE PTR [rcx+0x0],ah
   14000c58c:	jb     0x14000c58e
   14000c58e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000c593:	add    BYTE PTR [rcx+0x0],ch
   14000c596:	movsxd eax,DWORD PTR [rax]
   14000c598:	jb     0x14000c59a
   14000c59a:	outs   dx,DWORD PTR ds:[rsi]
   14000c59b:	add    BYTE PTR [rbx+0x0],dh
   14000c59e:	outs   dx,DWORD PTR ds:[rsi]
   14000c59f:	add    BYTE PTR [rsi+0x0],ah
   14000c5a2:	je     0x14000c5a4
   14000c5a4:	pop    rsp
   14000c5a5:	add    BYTE PTR [rdi+0x0],dl
   14000c5a8:	imul   eax,DWORD PTR [rax],0x64006e
   14000c5ae:	outs   dx,DWORD PTR ds:[rsi]
   14000c5af:	add    BYTE PTR [rdi+0x0],dh
   14000c5b2:	jae    0x14000c5b4
   14000c5b4:	pop    rsp
   14000c5b5:	add    BYTE PTR [rbx+0x0],al
   14000c5b8:	jne    0x14000c5ba
   14000c5ba:	jb     0x14000c5bc
   14000c5bc:	jb     0x14000c5be
   14000c5be:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c5c2:	je     0x14000c5c4
   14000c5c4:	push   rsi
   14000c5c5:	add    BYTE PTR [rbp+0x0],ah
   14000c5c8:	jb     0x14000c5ca
   14000c5ca:	jae    0x14000c5cc
   14000c5cc:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c5d2:	pop    rsp
   14000c5d3:	add    BYTE PTR [rax+0x0],dl
   14000c5d6:	outs   dx,DWORD PTR ds:[rsi]
   14000c5d7:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c5db:	add    BYTE PTR [rbx+0x0],ah
   14000c5de:	imul   eax,DWORD PTR [rax],0x730065
   14000c5e4:	pop    rsp
   14000c5e5:	add    BYTE PTR [rbx+0x0],dl
   14000c5e8:	jns    0x14000c5ea
   14000c5ea:	jae    0x14000c5ec
   14000c5ec:	je     0x14000c5ee
   14000c5ee:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c5f2:	add    BYTE PTR [rax],al
   14000c5f4:	add    BYTE PTR [rax],al
   14000c5f6:	add    BYTE PTR [rax],al
   14000c5f8:	add    BYTE PTR [r14+0x0],r13b
   14000c5fc:	(bad)  
   14000c5fd:	add    BYTE PTR [rdx+0x0],ah
   14000c600:	ins    BYTE PTR es:[rdi],dx
   14000c601:	add    BYTE PTR [rbp+0x0],ah
   14000c604:	rex.WR add BYTE PTR [rbp+0x0],r10b
   14000c608:	add    BYTE PTR [r8],al
   14000c60b:	add    BYTE PTR [rax],al
   14000c60d:	add    BYTE PTR [rax],al
   14000c60f:	add    BYTE PTR [rsi+0x65],dh
   14000c612:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000c616:	cmp    al,0x54
   14000c618:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14000c61d:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000c621:	add    BYTE PTR [eax],al
   14000c624:	add    BYTE PTR [rax],al
   14000c626:	add    BYTE PTR [rax],al
   14000c628:	and    al,BYTE PTR [rip+0x41993]        # 0x14004dfc1
   14000c62e:	add    BYTE PTR [rax],al
   14000c630:	lock retf 0x0
   14000c634:	add    al,BYTE PTR [rax]
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	adc    bl,cl
   14000c63a:	add    BYTE PTR [rax],al
   14000c63c:	or     BYTE PTR [rax],al
   14000c63e:	add    BYTE PTR [rax],al
   14000c640:	(bad)  
   14000c641:	retf   
   14000c642:	add    BYTE PTR [rax],al
   14000c644:	and    BYTE PTR [rax],al
   14000c646:	add    BYTE PTR [rax],al
   14000c648:	add    BYTE PTR [rax],al
   14000c64a:	add    BYTE PTR [rax],al
   14000c64c:	add    DWORD PTR [rax],eax
   14000c64e:	add    BYTE PTR [rax],al
   14000c650:	and    al,BYTE PTR [rip+0x41993]        # 0x14004dfe9
   14000c656:	add    BYTE PTR [rax],al
   14000c658:	and    ah,cl
	...
   14000c662:	add    BYTE PTR [rax],al
   14000c664:	add    eax,0x40000000
   14000c669:	int3   
   14000c66a:	add    BYTE PTR [rax],al
   14000c66c:	xor    BYTE PTR [rax],al
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	add    BYTE PTR [rax],al
   14000c672:	add    BYTE PTR [rax],al
   14000c674:	add    DWORD PTR [rax],eax
   14000c676:	add    BYTE PTR [rax],al
   14000c678:	and    al,BYTE PTR [rip+0x21993]        # 0x14002e011
   14000c67e:	add    BYTE PTR [rax],al
   14000c680:	lods   al,BYTE PTR ds:[rsi]
   14000c681:	rol    BYTE PTR [rax],1
   14000c683:	add    BYTE PTR [rcx],al
   14000c685:	add    BYTE PTR [rax],al
   14000c687:	add    BYTE PTR [rcx+rdx*8],bh
   14000c68a:	add    BYTE PTR [rax],al
   14000c68c:	add    eax,0x68000000
   14000c691:	rol    DWORD PTR [rax],1
   14000c693:	add    BYTE PTR [rax],ah
   14000c695:	add    BYTE PTR [rax],al
   14000c697:	add    BYTE PTR [rax],al
   14000c699:	add    BYTE PTR [rax],al
   14000c69b:	add    BYTE PTR [rcx],al
   14000c69d:	add    BYTE PTR [rax],al
   14000c69f:	add    BYTE PTR [rdx],ah
   14000c6a1:	add    eax,0x21993
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	lods   al,BYTE PTR ds:[rsi]
   14000c6a9:	rol    BYTE PTR [rax],1
   14000c6ab:	add    BYTE PTR [rcx],al
   14000c6ad:	add    BYTE PTR [rax],al
   14000c6af:	add    BYTE PTR [rax+rdx*8+0x50000],bh
   14000c6b6:	add    BYTE PTR [rax],al
   14000c6b8:	call   0x16000c78d
   14000c6bd:	add    BYTE PTR [rax],al
   14000c6bf:	add    BYTE PTR [rax],al
   14000c6c1:	add    BYTE PTR [rax],al
   14000c6c3:	add    BYTE PTR [rcx],al
   14000c6c5:	add    BYTE PTR [rax],al
   14000c6c7:	add    BYTE PTR [rdx],ah
   14000c6c9:	add    eax,0x21993
   14000c6ce:	add    BYTE PTR [rax],al
   14000c6d0:	cmp    al,0xd0
	...
   14000c6da:	add    BYTE PTR [rax],al
   14000c6dc:	add    eax,0x50000000
   14000c6e1:	rol    BYTE PTR [rax],1
   14000c6e3:	add    BYTE PTR [rax],dh
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rax],al
   14000c6e9:	add    BYTE PTR [rax],al
   14000c6eb:	add    BYTE PTR [rcx],al
   14000c6ed:	add    BYTE PTR [rax],al
   14000c6ef:	add    BYTE PTR [rax],al
   14000c6f1:	add    BYTE PTR [rax],al
   14000c6f3:	add    BYTE PTR [rcx],bh
   14000c6f5:	cmp    DWORD PTR [rdi+0x55],ebx
   14000c6fb:	add    BYTE PTR [rdx],al
   14000c6fd:	add    BYTE PTR [rax],al
   14000c6ff:	add    BYTE PTR [rip+0xfffffffff0000000],ah        # 0x13000c705
   14000c705:	mov    DWORD PTR [rax],0xb7f000
   14000c70b:	add    BYTE PTR [rax],al
   14000c70d:	add    BYTE PTR [rax],al
   14000c70f:	add    BYTE PTR [rcx],bh
   14000c711:	cmp    DWORD PTR [rdi+0x55],ebx
   14000c717:	add    BYTE PTR [rip+0x40000000],cl        # 0x18000c71d
   14000c71d:	add    al,BYTE PTR [rax]
   14000c71f:	add    BYTE PTR [rax+rcx*8],ch
   14000c722:	add    BYTE PTR [rax],al
   14000c724:	sub    al,0xb8
	...
   14000c74e:	add    BYTE PTR [rax],al
   14000c750:	movabs al,ds:0x0
	...
   14000c7a5:	add    BYTE PTR [rax],al
   14000c7a7:	add    BYTE PTR [rax],cl
   14000c7a9:	lock add BYTE PTR [rax+0x1],al
	...
   14000c7bd:	add    BYTE PTR [rax],al
   14000c7bf:	add    al,bh
   14000c7c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c7c2:	add    BYTE PTR [rax+0x1],al
   14000c7c5:	add    BYTE PTR [rax],al
   14000c7c7:	add    BYTE PTR [rax],al
   14000c7c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c7ca:	add    BYTE PTR [rax+0x1],al
   14000c7cd:	add    BYTE PTR [rax],al
   14000c7cf:	add    BYTE PTR [rax-0x5b],dh
   14000c7d2:	add    BYTE PTR [rax+0x1],al
   14000c7d5:	add    BYTE PTR [rax],al
   14000c7d7:	add    BYTE PTR [rax+rax*1],dh
   14000c7da:	add    BYTE PTR [rax],al
   14000c7dc:	add    BYTE PTR [rax],al
   14000c7de:	add    BYTE PTR [rax],al
   14000c7e0:	add    BYTE PTR [rip+0x0],dh        # 0x14000c7e6
	...
   14000c7ee:	add    BYTE PTR [rax],al
   14000c7f0:	push   rdx
   14000c7f1:	push   rbx
   14000c7f2:	rex.R push rbx
   14000c7f4:	rex.WR or al,0x1b
   14000c7f7:	movabs ds:0x4c5d95a74530bece,al
   14000c800:	sub    edi,DWORD PTR [rbp+0x133db]
   14000c806:	add    BYTE PTR [rax],al
   14000c808:	rex.WB
   14000c809:	rex.WRB push r12
   14000c80b:	rex.XB
   14000c80c:	rex.WR
   14000c80d:	rex.WRX push rdi
   14000c80f:	pop    rdx
   14000c810:	cs jo  0x14000c877
   14000c813:	(bad)  
	...
   14000c82c:	rex.RXB
   14000c82d:	rex.XB push r12
   14000c82f:	rex.WR add BYTE PTR [rax],r10b
   14000c832:	add    BYTE PTR [rax],al
   14000c834:	pop    rsp
   14000c835:	add    BYTE PTR [rax],al
   14000c837:	add    BYTE PTR [rsi],ch
   14000c839:	je     0x14000c8a0
   14000c83b:	js     0x14000c8b1
   14000c83d:	and    al,0x64
   14000c83f:	imul   eax,DWORD PTR [rax],0x60000000
   14000c845:	adc    BYTE PTR [rax],al
   14000c847:	add    BYTE PTR [rax+rcx*4+0x0],ch
   14000c84b:	add    BYTE PTR [rsi],ch
   14000c84d:	je     0x14000c8b4
   14000c84f:	js     0x14000c8c5
   14000c851:	and    al,0x6d
   14000c853:	outs   dx,BYTE PTR ds:[rsi]
   14000c854:	add    BYTE PTR [rax],al
   14000c856:	add    BYTE PTR [rax],al
   14000c858:	rcr    BYTE PTR [rax+0x7d0000],1
   14000c85e:	add    BYTE PTR [rax],al
   14000c860:	cs je  0x14000c8c8
   14000c863:	js     0x14000c8d9
   14000c865:	and    al,0x6d
   14000c867:	outs   dx,BYTE PTR ds:[rsi]
   14000c868:	and    al,0x30
   14000c86a:	xor    BYTE PTR [rax],al
   14000c86c:	push   rax
   14000c86d:	cdq    
   14000c86e:	add    BYTE PTR [rax],al
   14000c870:	add    BYTE PTR [rcx],0x0
   14000c873:	add    BYTE PTR [rsi],ch
   14000c875:	je     0x14000c8dc
   14000c877:	js     0x14000c8ed
   14000c879:	and    al,0x78
   14000c87b:	add    al,dl
   14000c87d:	(bad)  
   14000c87e:	add    BYTE PTR [rax],al
   14000c880:	inc    BYTE PTR [rax]
   14000c882:	add    BYTE PTR [rax],al
   14000c884:	cs je  0x14000c8ec
   14000c887:	js     0x14000c8fd
   14000c889:	and    al,0x79
   14000c88b:	add    BYTE PTR fs:[rax],al
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	add    BYTE PTR [rax+0x4f80000],ah
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000c8a1:	add    BYTE PTR [rax],al
   14000c8a3:	add    al,bh
   14000c8a5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c8a6:	add    BYTE PTR [rax],al
   14000c8a8:	adc    BYTE PTR [rax],al
   14000c8aa:	add    BYTE PTR [rax],al
   14000c8ac:	xor    BYTE PTR cs:[rax],dh
   14000c8af:	movsxd esp,DWORD PTR [rsi+0x67]
   14000c8b2:	add    BYTE PTR [rax],al
   14000c8b4:	or     BYTE PTR [rbp+0x80000],ah
   14000c8ba:	add    BYTE PTR [rax],al
   14000c8bc:	cs rex.XB push r10
   14000c8bf:	push   rsp
   14000c8c0:	and    al,0x58
   14000c8c2:	rex.XB
   14000c8c3:	add    BYTE PTR [r8],al
   14000c8c6:	add    BYTE PTR [rax],al
   14000c8c8:	adc    BYTE PTR [rbp+0x80000],ah
   14000c8ce:	add    BYTE PTR [rax],al
   14000c8d0:	cs rex.XB push r10
   14000c8d3:	push   rsp
   14000c8d4:	and    al,0x58
   14000c8d6:	rex.XB
   14000c8d7:	rex.B
   14000c8d8:	add    BYTE PTR [r8],al
   14000c8db:	add    BYTE PTR [rax],bl
   14000c8dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c8de:	add    BYTE PTR [rax],al
   14000c8e0:	xor    BYTE PTR [rax],al
   14000c8e2:	add    BYTE PTR [rax],al
   14000c8e4:	cs rex.XB push r10
   14000c8e7:	push   rsp
   14000c8e8:	and    al,0x58
   14000c8ea:	rex.XB push r13
   14000c8ec:	add    BYTE PTR [rax],al
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000c8f2:	add    BYTE PTR [rax],al
   14000c8f4:	or     BYTE PTR [rax],al
   14000c8f6:	add    BYTE PTR [rax],al
   14000c8f8:	cs rex.XB push r10
   14000c8fb:	push   rsp
   14000c8fc:	and    al,0x58
   14000c8fe:	rex.XB pop r10
   14000c900:	add    BYTE PTR [rax],al
   14000c902:	add    BYTE PTR [rax],al
   14000c904:	push   rax
   14000c905:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c906:	add    BYTE PTR [rax],al
   14000c908:	or     BYTE PTR [rax],al
   14000c90a:	add    BYTE PTR [rax],al
   14000c90c:	cs rex.XB push r10
   14000c90f:	push   rsp
   14000c910:	and    al,0x58
   14000c912:	rex.WB
   14000c913:	add    BYTE PTR [r8],al
   14000c916:	add    BYTE PTR [rax],al
   14000c918:	pop    rax
   14000c919:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c91a:	add    BYTE PTR [rax],al
   14000c91c:	or     BYTE PTR [rax],al
   14000c91e:	add    BYTE PTR [rax],al
   14000c920:	cs rex.XB push r10
   14000c923:	push   rsp
   14000c924:	and    al,0x58
   14000c926:	rex.WB
   14000c927:	rex.B
   14000c928:	add    BYTE PTR [r8],al
   14000c92b:	add    BYTE PTR [rax-0x5b],ah
   14000c92e:	add    BYTE PTR [rax],al
   14000c930:	or     BYTE PTR [rax],al
   14000c932:	add    BYTE PTR [rax],al
   14000c934:	cs rex.XB push r10
   14000c937:	push   rsp
   14000c938:	and    al,0x58
   14000c93a:	rex.WB pop r9
   14000c93c:	add    BYTE PTR [rax],al
   14000c93e:	add    BYTE PTR [rax],al
   14000c940:	push   0x80000a5
   14000c945:	add    BYTE PTR [rax],al
   14000c947:	add    BYTE PTR [rsi],ch
   14000c949:	rex.XB push r10
   14000c94b:	push   rsp
   14000c94c:	and    al,0x58
   14000c94e:	rex.WB pop r10
   14000c950:	add    BYTE PTR [rax],al
   14000c952:	add    BYTE PTR [rax],al
   14000c954:	jo     0x14000c8fb
   14000c956:	add    BYTE PTR [rax],al
   14000c958:	rol    BYTE PTR [rax],1
   14000c95a:	add    BYTE PTR [rax],al
   14000c95c:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000c965:	add    BYTE PTR [rax],al
   14000c967:	add    BYTE PTR [rax-0x5a],al
   14000c96a:	add    BYTE PTR [rax],al
   14000c96c:	mov    al,0x21
   14000c96e:	add    BYTE PTR [rax],al
   14000c970:	cs jb  0x14000c9d7
   14000c973:	(bad)  
   14000c974:	je     0x14000c9d7
   14000c976:	add    BYTE PTR [rax],al
   14000c978:	lock mov DWORD PTR [rax],0x27c00
   14000c97f:	add    BYTE PTR [rsi],ch
   14000c981:	jb     0x14000c9e7
   14000c983:	(bad)  
   14000c984:	je     0x14000c9e7
   14000c986:	and    al,0x7a
   14000c988:	jp     0x14000ca04
   14000c98a:	fs (bad) 
   14000c98c:	add    BYTE PTR [eax],al
   14000c98f:	add    BYTE PTR [rax-0x36],dh
   14000c992:	add    BYTE PTR [rax],al
   14000c994:	sbb    BYTE PTR [rax],cl
   14000c996:	add    BYTE PTR [rax],al
   14000c998:	cs js  0x14000c9ff
   14000c99b:	(bad)  
   14000c99c:	je     0x14000c9ff
   14000c99e:	add    BYTE PTR [rax],al
   14000c9a0:	mov    dl,dl
   14000c9a2:	add    BYTE PTR [rax],al
   14000c9a4:	jl     0x14000c9a7
   14000c9a6:	add    BYTE PTR [rax],al
   14000c9a8:	cs js  0x14000ca0f
   14000c9ab:	(bad)  
   14000c9ac:	je     0x14000ca0f
   14000c9ae:	and    al,0x78
   14000c9b0:	add    BYTE PTR [rax],al
   14000c9b2:	add    BYTE PTR [rax],al
   14000c9b4:	add    al,0xd4
   14000c9b6:	add    BYTE PTR [rax],al
   14000c9b8:	mov    ah,0x0
   14000c9ba:	add    BYTE PTR [rax],al
   14000c9bc:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000c9c5:	add    BYTE PTR [rax],al
   14000c9c7:	add    BYTE PTR [rax+0x140000d4],bh
   14000c9cd:	add    BYTE PTR [rax],al
   14000c9cf:	add    BYTE PTR [rsi],ch
   14000c9d1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   14000c9d9:	add    BYTE PTR [rax],al
   14000c9db:	add    al,dl
   14000c9dd:	(bad)  
   14000c9de:	add    BYTE PTR [rax],al
   14000c9e0:	clc    
   14000c9e1:	add    al,0x0
   14000c9e3:	add    BYTE PTR [rsi],ch
   14000c9e5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000c9ed:	add    BYTE PTR [rax],al
   14000c9ef:	add    al,cl
   14000c9f1:	fld    DWORD PTR [rax]
   14000c9f3:	add    BYTE PTR [rdx+0xa],bh
   14000c9f6:	add    BYTE PTR [rax],al
   14000c9f8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000ca01:	add    BYTE PTR [rax],al
   14000ca03:	add    BYTE PTR [rax],al
   14000ca05:	lock add BYTE PTR [rax],al
   14000ca08:	push   rax
   14000ca09:	add    eax,DWORD PTR [rax]
   14000ca0b:	add    BYTE PTR [rsi],ch
   14000ca0d:	fs (bad) 
   14000ca0f:	je     0x14000ca72
   14000ca11:	add    BYTE PTR [rax],al
   14000ca13:	add    BYTE PTR [rax-0xd],dl
   14000ca16:	add    BYTE PTR [rax],al
   14000ca18:	mov    edi,0x2e000000
   14000ca1d:	fs (bad) 
   14000ca1f:	je     0x14000ca82
   14000ca21:	and    al,0x72
   14000ca23:	add    BYTE PTR [rax],dl
   14000ca25:	hlt    
   14000ca26:	add    BYTE PTR [rax],al
   14000ca28:	call   0x16e00ca35
   14000ca2d:	(bad)  
   14000ca2f:	jae    0x14000ca31
   14000ca31:	add    BYTE PTR [rax],al
   14000ca33:	add    BYTE PTR [rax],al
   14000ca35:	add    BYTE PTR [rcx],al
   14000ca37:	add    BYTE PTR [rax+0x5],al
   14000ca3a:	add    BYTE PTR [rax],al
   14000ca3c:	cs jo  0x14000caa3
   14000ca3f:	(bad)  
   14000ca40:	je     0x14000caa3
   14000ca42:	add    BYTE PTR [rax],al
   14000ca44:	add    BYTE PTR [rax],dl
   14000ca46:	add    DWORD PTR [rax],eax
   14000ca48:	xor    al,0x5
   14000ca4a:	add    BYTE PTR [rax],al
   14000ca4c:	cs jb  0x14000cac2
   14000ca4f:	jb     0x14000cab4
   14000ca51:	and    al,0x30
   14000ca53:	xor    DWORD PTR [rax],eax
   14000ca55:	add    BYTE PTR [rax],al
   14000ca57:	add    BYTE PTR [rax+0x15],al
   14000ca5a:	add    DWORD PTR [rax],eax
   14000ca5c:	sub    BYTE PTR [rcx+0x0],bl
   14000ca5f:	add    BYTE PTR [rsi],ch
   14000ca61:	jb     0x14000cad6
   14000ca63:	jb     0x14000cac8
   14000ca65:	and    al,0x30
   14000ca67:	xor    al,BYTE PTR [rax]
   14000ca69:	add    BYTE PTR [rax],al
   14000ca6b:	add    BYTE PTR [rax],al
   14000ca6d:	add    BYTE PTR [rax],al
   14000ca6f:	add    BYTE PTR [rcx],al
   14000ca71:	(bad)  
   14000ca72:	add    al,BYTE PTR [rax]
   14000ca74:	(bad)  
   14000ca75:	xor    al,BYTE PTR [rdx]
   14000ca77:	xor    BYTE PTR [rcx],al
   14000ca79:	adc    eax,0x74150008
   14000ca7e:	or     al,BYTE PTR [rax]
   14000ca80:	adc    eax,0x15000964
   14000ca85:	xor    al,0x8
   14000ca87:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0dbdf
   14000ca8d:	or     al,BYTE PTR [rax+rax*1]
   14000ca90:	or     dh,BYTE PTR [rax+rcx*1]
   14000ca93:	add    BYTE PTR [rdx],cl
   14000ca95:	push   rdx
   14000ca96:	(bad)  
   14000ca97:	jo     0x14000ca9a
   14000ca99:	(bad)  
   14000ca9a:	add    al,BYTE PTR [rax]
   14000ca9c:	(bad)  
   14000ca9d:	push   rdx
   14000ca9e:	add    dh,BYTE PTR [rax]
   14000caa0:	add    DWORD PTR [rdx],ecx
   14000caa2:	add    al,0x0
   14000caa4:	or     dh,BYTE PTR [rsi+rax*1]
   14000caa7:	add    BYTE PTR [rdx],cl
   14000caa9:	xor    al,BYTE PTR [rsi]
   14000caab:	jo     0x14000caae
   14000caad:	clts   
   14000caaf:	add    BYTE PTR [rdi],cl
   14000cab1:	fs (bad) 
   14000cab3:	add    BYTE PTR [rdi],cl
   14000cab5:	xor    al,0x6
   14000cab7:	add    BYTE PTR [rdi],cl
   14000cab9:	xor    cl,BYTE PTR [rbx]
   14000cabb:	jo     0x14000cabe
   14000cabd:	add    al,0x1
   14000cabf:	add    BYTE PTR [rdx+rax*2],al
   14000cac2:	add    BYTE PTR [rax],al
   14000cac4:	add    DWORD PTR [rax+rcx*1],edx
   14000cac7:	add    BYTE PTR [rsp+riz*2],dl
   14000caca:	or     BYTE PTR [rax],al
   14000cacc:	adc    al,0x54
   14000cace:	(bad)  
   14000cacf:	add    BYTE PTR [rsp+rsi*1],dl
   14000cad2:	(bad)  
   14000cad3:	add    BYTE PTR [rdx+rsi*1],dl
   14000cad6:	adc    BYTE PTR [rax+0x19],dh
   14000cad9:	and    BYTE PTR [rip+0x14621800],al        # 0x15462e2df
   14000cadf:	loopne 0x14000caf3
   14000cae1:	jo     0x14000caf4
   14000cae3:	(bad)  
   14000cae4:	adc    BYTE PTR [rax],dh
   14000cae6:	add    BYTE PTR [rax],al
   14000cae8:	jb     0x14000ca7e
   14000caea:	add    BYTE PTR [rax],al
   14000caec:	sub    dh,al
   14000caee:	add    BYTE PTR [rax],al
   14000caf0:	(bad)  
   14000caf1:	(bad)  
   14000caf2:	(bad)  
   14000caf3:	inc    DWORD PTR [rax]
   14000caf5:	add    BYTE PTR [rax],al
   14000caf7:	add    bh,bh
   14000caf9:	(bad)  
   14000cafa:	(bad)  
   14000cafb:	inc    DWORD PTR [rax]
   14000cafd:	add    BYTE PTR [rax],al
   14000caff:	add    BYTE PTR [rcx],al
   14000cb01:	add    BYTE PTR [rax],al
   14000cb03:	add    BYTE PTR [rax],al
   14000cb05:	add    BYTE PTR [rax],al
   14000cb07:	add    BYTE PTR [rcx],al
	...
   14000cb15:	add    BYTE PTR [rax],al
   14000cb17:	add    BYTE PTR [rbx],al
   14000cb19:	add    BYTE PTR [rax],al
   14000cb1b:	add    BYTE PTR [rcx],al
   14000cb1d:	add    BYTE PTR [rax],al
   14000cb1f:	add    BYTE PTR [rax],bh
   14000cb21:	retf   
   14000cb22:	add    BYTE PTR [rax],al
   14000cb24:	add    al,BYTE PTR [rax]
   14000cb26:	add    BYTE PTR [rax],al
   14000cb28:	add    al,BYTE PTR [rax]
   14000cb2a:	add    BYTE PTR [rax],al
   14000cb2c:	add    eax,DWORD PTR [rax]
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	add    DWORD PTR [rax],eax
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	rex.WR retf 
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	add    BYTE PTR [rax],al
	...
   14000cb43:	add    BYTE PTR [rsi-0x67],dl
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	cmp    BYTE PTR [rax],al
   14000cb4a:	add    BYTE PTR [rax],al
   14000cb4c:	add    BYTE PTR [rax],al
	...
   14000cb57:	add    BYTE PTR [rdx+0x38000099],bl
   14000cb5d:	add    BYTE PTR [rax],al
   14000cb5f:	add    BYTE PTR [rsi+rdx*1],bh
   14000cb62:	add    BYTE PTR [rax],al
   14000cb64:	(bad)  
   14000cb65:	(bad)  
   14000cb66:	(bad)  
   14000cb67:	jmp    FWORD PTR [rbx+0x16]
   14000cb6d:	add    BYTE PTR [rax],al
   14000cb6f:	add    al,dl
   14000cb71:	(bad)  
   14000cb72:	add    BYTE PTR [rax],al
   14000cb74:	(bad)  
   14000cb75:	(bad)  
   14000cb76:	(bad)  
   14000cb77:	call   QWORD PTR [rsi-0x67]
   14000cb7a:	add    BYTE PTR [rax],al
   14000cb7c:	add    BYTE PTR [rax],al
   14000cb7e:	add    BYTE PTR [rax],al
   14000cb80:	movsxd ebx,DWORD PTR [rcx+0x10000]
   14000cb86:	add    BYTE PTR [rax],al
   14000cb88:	imul   ebx,DWORD PTR [rcx+0x20000],0x0
   14000cb8f:	add    BYTE PTR [rcx+rbx*4+0x0],cl
   14000cb96:	add    BYTE PTR [rax],al
   14000cb98:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cb99:	cdq    
   14000cb9a:	add    BYTE PTR [rax],al
   14000cb9c:	add    eax,DWORD PTR [rax]
   14000cb9e:	add    BYTE PTR [rax],al
   14000cba0:	sbb    DWORD PTR [rdx],ecx
   14000cba2:	add    al,BYTE PTR [rax]
   14000cba4:	or     dh,BYTE PTR [rdx]
   14000cba6:	(bad)  
   14000cba7:	push   rax
   14000cba8:	jb     0x14000cb3e
   14000cbaa:	add    BYTE PTR [rax],al
   14000cbac:	sub    dh,al
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	sbb    DWORD PTR [rbx],esi
   14000cbb2:	or     eax,DWORD PTR [rax]
   14000cbb4:	and    ah,ah
   14000cbb6:	xlat   BYTE PTR ds:[rbx]
   14000cbb7:	add    BYTE PTR [rdx],ah
   14000cbb9:	je     0x14000cb91
   14000cbbb:	add    BYTE PTR [rdx],ah
   14000cbbd:	fs (bad) 
   14000cbbf:	add    BYTE PTR [rdx],ah
   14000cbc1:	xor    al,0xd4
   14000cbc3:	add    BYTE PTR [rdx],ah
   14000cbc5:	add    edx,edx
   14000cbc7:	add    BYTE PTR [rax+rdx*2],dl
   14000cbca:	add    BYTE PTR [rax],al
   14000cbcc:	cmp    BYTE PTR [rax+0x6800000],bl
   14000cbd2:	add    BYTE PTR [rax],al
   14000cbd4:	add    DWORD PTR [rdx],ecx
   14000cbd6:	add    al,0x0
   14000cbd8:	or     dh,BYTE PTR [rdx+rcx*1]
   14000cbdb:	add    BYTE PTR [rdx],cl
   14000cbdd:	jb     0x14000cbe5
   14000cbdf:	jo     0x14000cbe2
   14000cbe1:	sgdt   [rax]
   14000cbe4:	punpckldq mm0,DWORD PTR [rax]
   14000cbe7:	add    BYTE PTR [rcx],bl
   14000cbe9:	(bad)  
   14000cbea:	add    eax,0x2d340d00
   14000cbef:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14600f5f6
   14000cbf5:	(bad)  
   14000cbf6:	add    BYTE PTR [rax],al
   14000cbf8:	cmp    BYTE PTR [rax+0x1400000],bl
   14000cbfe:	add    BYTE PTR [rax],al
   14000cc00:	adc    DWORD PTR [rsi],esp
   14000cc02:	or     al,BYTE PTR [rax]
   14000cc04:	es fs adc al,0x0
   14000cc08:	and    dh,BYTE PTR [rbx+rdx*1]
   14000cc0b:	add    BYTE PTR [rsi],dl
   14000cc0d:	mov    dl,0xf
   14000cc0f:	lock or eax,0x9d00be0
   14000cc15:	jo     0x14000cc1f
   14000cc17:	push   rax
   14000cc18:	jb     0x14000cbae
   14000cc1a:	add    BYTE PTR [rax],al
   14000cc1c:	push   rax
   14000cc1d:	mov    BYTE PTR [rax],0x0
   14000cc20:	(bad)  
   14000cc21:	(bad)  
   14000cc22:	(bad)  
   14000cc23:	inc    ebp
   14000cc25:	cdq    
   14000cc26:	add    BYTE PTR [rax],al
   14000cc28:	(bad)  
   14000cc29:	(bad)  
   14000cc2a:	(bad)  
   14000cc2b:	call   rcx
   14000cc2d:	cdq    
   14000cc2e:	add    BYTE PTR [rax],al
   14000cc30:	add    DWORD PTR [rax],eax
   14000cc32:	add    BYTE PTR [rax],al
   14000cc34:	fstp   QWORD PTR [rcx+0x10000]
   14000cc3a:	add    BYTE PTR [rax],al
   14000cc3c:	jmp    0x18800ccda
   14000cc41:	sbb    al,0x0
   14000cc43:	add    bh,bh
   14000cc45:	(bad)  
   14000cc46:	(bad)  
   14000cc47:	inc    DWORD PTR [rbp+0x100001c]
   14000cc4d:	add    BYTE PTR [rax],al
   14000cc4f:	add    BYTE PTR [rbp+0x300001c],dl
   14000cc55:	add    BYTE PTR [rax],al
   14000cc57:	add    BYTE PTR [rsi+0x100001e],dh
   14000cc5d:	add    BYTE PTR [rax],al
   14000cc5f:	add    al,ch
   14000cc61:	(bad)  
   14000cc62:	add    BYTE PTR [rax],al
   14000cc64:	(bad)  
   14000cc65:	(bad)  
   14000cc66:	(bad)  
   14000cc67:	inc    DWORD PTR [rcx]
   14000cc69:	or     al,BYTE PTR [rax+rax*1]
   14000cc6c:	or     dh,BYTE PTR [rax+rcx*1]
   14000cc6f:	add    BYTE PTR [rdx],cl
   14000cc71:	push   rdx
   14000cc72:	(bad)  
   14000cc73:	(bad)  
   14000cc74:	add    DWORD PTR [rcx+rax*1],eax
   14000cc77:	add    BYTE PTR [rdx+riz*2],al
   14000cc7a:	add    BYTE PTR [rax],al
   14000cc7c:	sbb    DWORD PTR [rbx],ebp
   14000cc7e:	(bad)  
   14000cc7f:	add    BYTE PTR [rdx],bl
   14000cc81:	je     0x14000ccd3
   14000cc83:	add    BYTE PTR [rdx],bl
   14000cc85:	xor    al,0x4f
   14000cc87:	add    BYTE PTR [rdx],bl
   14000cc89:	add    DWORD PTR [rax+rax*1+0xb],ecx
   14000cc8d:	push   rax
   14000cc8e:	add    BYTE PTR [rax],al
   14000cc90:	cmp    BYTE PTR [rax+0x2500000],bl
   14000cc96:	add    BYTE PTR [rax],al
   14000cc98:	sbb    DWORD PTR [rdi],esi
   14000cc9a:	or     eax,0x75742600
   14000cc9f:	add    BYTE PTR [rsi],ah
   14000cca1:	fs je  0x14000cca4
   14000cca4:	es xor al,0x73
   14000cca7:	add    BYTE PTR [rsi],ah
   14000cca9:	add    DWORD PTR [rax+rax*1+0x18],ebp
   14000ccad:	lock (bad) 
   14000ccaf:	loopne 0x14000ccc5
   14000ccb1:	rcl    BYTE PTR [rdx],1
   14000ccb3:	rcl    BYTE PTR [rax],0x50
   14000ccb6:	add    BYTE PTR [rax],al
   14000ccb8:	cmp    BYTE PTR [rax+0x3500000],bl
   14000ccbe:	add    BYTE PTR [rax],al
   14000ccc0:	add    DWORD PTR [rax+rcx*1],edx
   14000ccc3:	add    BYTE PTR [rsp+riz*2],dl
   14000ccc6:	or     eax,DWORD PTR [rax]
   14000ccc8:	adc    al,0x54
   14000ccca:	or     DWORD PTR [rax],eax
   14000cccc:	adc    al,0x34
   14000ccce:	or     BYTE PTR [rax],al
   14000ccd0:	adc    al,0x52
   14000ccd2:	adc    BYTE PTR [rax+0x1],dh
   14000ccd5:	sbb    BYTE PTR [rdx],cl
   14000ccd7:	add    BYTE PTR [rax],bl
   14000ccd9:	fs or  eax,0xc541800
   14000ccdf:	add    BYTE PTR [rax],bl
   14000cce1:	xor    al,0xa
   14000cce3:	add    BYTE PTR [rax],bl
   14000cce5:	push   rdx
   14000cce6:	adc    al,0xe0
   14000cce8:	adc    al,al
   14000ccea:	adc    BYTE PTR [rax+0x19],dh
   14000cced:	sub    eax,0x11c000a
   14000ccf2:	xchg   ebp,eax
   14000ccf3:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0d8e9
   14000ccf9:	rol    BYTE PTR [rdi],1
   14000ccfb:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d172
   14000cd02:	add    dl,BYTE PTR [rax+0x38]
   14000cd05:	cwde   
   14000cd06:	add    BYTE PTR [rax],al
   14000cd08:	nop
   14000cd09:	add    al,0x0
   14000cd0b:	add    BYTE PTR [rcx],bl
   14000cd0d:	sub    DWORD PTR [rbx],ecx
   14000cd0f:	add    BYTE PTR [rdi],dl
   14000cd11:	xor    al,0x52
   14000cd13:	add    BYTE PTR [rdi],dl
   14000cd15:	add    DWORD PTR [rax+0x0],ecx
   14000cd18:	adc    al,dh
   14000cd1a:	(bad)  
   14000cd1b:	loopne 0x14000cd29
   14000cd1d:	ror    BYTE PTR [rdx],1
   14000cd1f:	ror    BYTE PTR [rax],0x70
   14000cd22:	(bad)  
   14000cd23:	(bad)  
   14000cd24:	(bad)  
   14000cd25:	push   rax
   14000cd26:	add    BYTE PTR [rax],al
   14000cd28:	cmp    BYTE PTR [rax+0x2300000],bl
   14000cd2e:	add    BYTE PTR [rax],al
   14000cd30:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41dcd42
   14000cd36:	or     eax,0xc641d00
   14000cd3b:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d00d895
   14000cd41:	xor    al,0xa
   14000cd43:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f0e69b
   14000cd49:	loopne 0x14000cd60
   14000cd4b:	rol    BYTE PTR [rcx],0x1d
   14000cd4e:	or     al,0x0
   14000cd50:	sbb    eax,0x1d000d74
   14000cd55:	fs or  al,0x0
   14000cd58:	sbb    eax,0x1d000b54
   14000cd5d:	xor    al,0xa
   14000cd5f:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f0e6b7
   14000cd65:	loopne 0x14000cd7c
   14000cd67:	rcr    BYTE PTR [rcx],1
   14000cd69:	sub    DWORD PTR [rcx],ecx
   14000cd6b:	add    BYTE PTR [rdi],dl
   14000cd6d:	fs push rcx
   14000cd6f:	add    BYTE PTR [rdi],dl
   14000cd71:	push   rsp
   14000cd72:	push   rax
   14000cd73:	add    BYTE PTR [rdi],dl
   14000cd75:	xor    al,0x4f
   14000cd77:	add    BYTE PTR [rdi],dl
   14000cd79:	add    DWORD PTR [rax+rax*1+0x10],ecx
   14000cd7d:	jo     0x14000cd7f
   14000cd7f:	add    BYTE PTR [rax],bh
   14000cd81:	cwde   
   14000cd82:	add    BYTE PTR [rax],al
   14000cd84:	push   rax
   14000cd85:	add    al,BYTE PTR [rax]
   14000cd87:	add    BYTE PTR [rcx],bl
   14000cd89:	sub    BYTE PTR [rdx],cl
   14000cd8b:	add    BYTE PTR [rcx],bl
   14000cd8d:	push   rsp
   14000cd8e:	sbb    DWORD PTR [rax],eax
   14000cd90:	sbb    DWORD PTR [rax+rbx*1],esi
   14000cd93:	add    BYTE PTR [rcx],bl
   14000cd95:	repnz adc dh,al
   14000cd98:	adc    al,ah
   14000cd9a:	(bad)  
   14000cd9b:	ror    BYTE PTR [rax+rsi*2],0xb
   14000cd9f:	(bad)  
   14000cda0:	cmp    BYTE PTR [rax+0x700000],bl
   14000cda6:	add    BYTE PTR [rax],al
   14000cda8:	sbb    DWORD PTR [rbx],esi
   14000cdaa:	or     al,BYTE PTR [rax]
   14000cdac:	and    al,BYTE PTR [rcx]
   14000cdae:	add    eax,0xbf00d02
   14000cdb3:	loopne 0x14000cdbe
   14000cdb5:	rol    BYTE PTR [rdi],1
   14000cdb7:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d22e
   14000cdbe:	add    dl,BYTE PTR [rax+0x38]
   14000cdc1:	cwde   
   14000cdc2:	add    BYTE PTR [rax],al
   14000cdc4:	adc    BYTE PTR [rax],dl
   14000cdc6:	add    BYTE PTR [rax],al
   14000cdc8:	sbb    DWORD PTR [rsi],esi
   14000cdca:	or     eax,DWORD PTR [rax]
   14000cdcc:	and    eax,0x25022c34
   14000cdd1:	add    DWORD PTR [rdx],esp
   14000cdd3:	add    dl,BYTE PTR [rax]
   14000cdd5:	lock (bad) 
   14000cdd7:	loopne 0x14000cde5
   14000cdd9:	ror    BYTE PTR [rdx],1
   14000cddb:	ror    BYTE PTR [rax],0x70
   14000cdde:	(bad)  
   14000cddf:	(bad)  
   14000cde0:	(bad)  
   14000cde1:	push   rax
   14000cde2:	add    BYTE PTR [rax],al
   14000cde4:	cmp    BYTE PTR [rax+0x11000000],bl
   14000cdea:	add    BYTE PTR [rax],al
   14000cdec:	add    DWORD PTR [rax],ebx
   14000cdee:	or     DWORD PTR [rax],eax
   14000cdf0:	sbb    dl,al
   14000cdf2:	adc    eax,esi
   14000cdf4:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c0d9cb
   14000cdfb:	jo     0x14000ce05
   14000cdfd:	(bad)  
   14000cdfe:	(bad)  
   14000cdff:	xor    BYTE PTR [rsi],al
   14000ce01:	push   rax
   14000ce02:	add    BYTE PTR [rax],al
   14000ce04:	add    DWORD PTR [rdx],edx
   14000ce06:	or     BYTE PTR [rax],al
   14000ce08:	adc    dl,BYTE PTR [rbx+rcx*1+0x0]
   14000ce0c:	adc    dh,BYTE PTR [rdx+rcx*1]
   14000ce0f:	add    BYTE PTR [rdx],dl
   14000ce11:	push   rdx
   14000ce12:	(bad)  
   14000ce13:	lock or al,0x70
   14000ce16:	or     esp,DWORD PTR [rax+0x1]
   14000ce19:	adc    al,0xa
   14000ce1b:	add    BYTE PTR [rsp+rsi*1],dl
   14000ce1e:	(bad)  
   14000ce1f:	add    BYTE PTR [rdx+rdx*2],dl
   14000ce22:	adc    al,dh
   14000ce24:	(bad)  
   14000ce25:	loopne 0x14000ce33
   14000ce27:	ror    BYTE PTR [rdx],1
   14000ce29:	ror    BYTE PTR [rax],0x70
   14000ce2c:	(bad)  
   14000ce2d:	(bad)  
   14000ce2e:	(bad)  
   14000ce2f:	push   rax
   14000ce30:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41dce42
   14000ce36:	or     eax,DWORD PTR [rax]
   14000ce38:	sbb    eax,0x1d000a64
   14000ce3d:	push   rsp
   14000ce3e:	or     DWORD PTR [rax],eax
   14000ce40:	sbb    eax,0x1d000834
   14000ce45:	xor    bl,BYTE PTR [rcx]
   14000ce47:	lock (bad) 
   14000ce49:	loopne 0x14000ce60
   14000ce4b:	rcr    BYTE PTR [rcx],0x1b
   14000ce4e:	(bad)  
   14000ce4f:	add    BYTE PTR [rsp+rsi*1],cl
   14000ce52:	adc    al,0x0
   14000ce54:	or     al,0xd2
   14000ce56:	or     BYTE PTR [rax+0x7],dh
   14000ce59:	(bad)  
   14000ce5a:	(bad)  
   14000ce5b:	push   rax
   14000ce5c:	cmp    BYTE PTR [rax+0x680000],bl
   14000ce62:	add    BYTE PTR [rax],al
   14000ce64:	sbb    DWORD PTR [rcx],ebp
   14000ce66:	or     eax,DWORD PTR [rax]
   14000ce68:	(bad)  
   14000ce69:	xor    al,0x26
   14000ce6b:	add    BYTE PTR [rdi],dl
   14000ce6d:	add    DWORD PTR [rax+rax*1],ebx
   14000ce70:	adc    al,dh
   14000ce72:	(bad)  
   14000ce73:	loopne 0x14000ce81
   14000ce75:	ror    BYTE PTR [rdx],1
   14000ce77:	ror    BYTE PTR [rax],0x70
   14000ce7a:	(bad)  
   14000ce7b:	(bad)  
   14000ce7c:	(bad)  
   14000ce7d:	push   rax
   14000ce7e:	add    BYTE PTR [rax],al
   14000ce80:	cmp    BYTE PTR [rax+0xd00000],bl
   14000ce86:	add    BYTE PTR [rax],al
   14000ce88:	sbb    DWORD PTR [rcx+rcx*1],esp
   14000ce8b:	add    BYTE PTR [rdx],dl
   14000ce8d:	add    DWORD PTR [rax+rax*1+0xb],edx
   14000ce91:	lock or eax,esp
   14000ce94:	(bad)  
   14000ce95:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360d30c
   14000ce9c:	add    dh,BYTE PTR [rax]
   14000ce9e:	add    BYTE PTR [rax],al
   14000cea0:	cmp    BYTE PTR [rax+0x2900000],bl
   14000cea6:	add    BYTE PTR [rax],al
   14000cea8:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41dceba
   14000ceae:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00dd19
   14000ceb5:	push   rsp
   14000ceb6:	or     eax,0xc341d00
   14000cebb:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0e833
   14000cec1:	loopne 0x14000ced8
   14000cec3:	rcr    BYTE PTR [rcx],0x2f
   14000cec6:	or     eax,DWORD PTR [rax]
   14000cec8:	sbb    eax,0x1d021534
   14000cecd:	add    DWORD PTR [rdx],ecx
   14000cecf:	add    dl,BYTE PTR [rax]
   14000ced1:	lock (bad) 
   14000ced3:	loopne 0x14000cee1
   14000ced5:	ror    BYTE PTR [rdx],1
   14000ced7:	ror    BYTE PTR [rax],0x70
   14000ceda:	(bad)  
   14000cedb:	(bad)  
   14000cedc:	(bad)  
   14000cedd:	push   rax
   14000cede:	add    BYTE PTR [rax],al
   14000cee0:	cmp    BYTE PTR [rax+0x10400000],bl
   14000cee6:	add    BYTE PTR [rax],al
   14000cee8:	add    DWORD PTR [rax],ebx
   14000ceea:	or     al,BYTE PTR [rax]
   14000ceec:	sbb    BYTE PTR [rsi+rcx*1+0x0],ah
   14000cef0:	sbb    BYTE PTR [rbp+rcx*1+0x0],dl
   14000cef4:	sbb    BYTE PTR [rsp+rcx*1],dh
   14000cef7:	add    BYTE PTR [rax],bl
   14000cef9:	jb     0x14000cf0f
   14000cefb:	lock adc ah,al
   14000cefe:	adc    BYTE PTR [rax+0x19],dh
   14000cf01:	(bad)  
   14000cf02:	or     eax,0xa9742600
   14000cf07:	add    DWORD PTR [rsi],esp
   14000cf09:	fs test al,0x1
   14000cf0c:	es xor al,0xa7
   14000cf0f:	add    DWORD PTR [rsi],esp
   14000cf11:	add    DWORD PTR [rax+0x16f01801],esp
   14000cf17:	loopne 0x14000cf2d
   14000cf19:	rcl    BYTE PTR [rdx],1
   14000cf1b:	rcl    BYTE PTR [rax],0x50
   14000cf1e:	add    BYTE PTR [rax],al
   14000cf20:	cmp    BYTE PTR [rax+0xcf00000],bl
   14000cf26:	add    BYTE PTR [rax],al
   14000cf28:	add    DWORD PTR [rcx],ebx
   14000cf2a:	or     al,BYTE PTR [rax]
   14000cf2c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000cf30:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000cf34:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000cf38:	sbb    DWORD PTR [rsi+rax*1],esi
   14000cf3b:	add    BYTE PTR [rcx],bl
   14000cf3d:	xor    dl,BYTE PTR [rip+0xa2819e0]        # 0x14a28e923
   14000cf43:	add    BYTE PTR [rcx],bl
   14000cf45:	push   rsp
   14000cf46:	sbb    BYTE PTR [rax],al
   14000cf48:	sbb    DWORD PTR [rdi+rdx*1],esi
   14000cf4b:	add    BYTE PTR [rcx],bl
   14000cf4d:	repnz adc dh,al
   14000cf50:	adc    al,ah
   14000cf52:	(bad)  
   14000cf53:	ror    BYTE PTR [rax+rsi*2],0xb
   14000cf57:	(bad)  
   14000cf58:	cmp    BYTE PTR [rax+0x700000],bl
   14000cf5e:	add    BYTE PTR [rax],al
   14000cf60:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415cf6e
   14000cf66:	or     BYTE PTR [rax],al
   14000cf68:	adc    eax,0x15000764
   14000cf6d:	xor    al,0x6
   14000cf6f:	add    BYTE PTR [rip+0x1f01132],dl        # 0x141f0e0a7
   14000cf75:	sbb    al,0xc
   14000cf77:	add    BYTE PTR [rsp+riz*2],bl
   14000cf7a:	ltr    WORD PTR [rsp+rdx*2]
   14000cf7e:	(bad)  
   14000cf7f:	add    BYTE PTR [rsp+rsi*1],bl
   14000cf82:	or     al,0x0
   14000cf84:	sbb    al,0x52
   14000cf86:	sbb    al,dh
   14000cf88:	(bad)  
   14000cf89:	loopne 0x14000cf9f
   14000cf8b:	rcl    BYTE PTR [rdx],1
   14000cf8d:	rcl    BYTE PTR [rax],0x70
   14000cf90:	sbb    DWORD PTR [rcx],esi
   14000cf92:	(bad)  
   14000cf93:	add    BYTE PTR [rdi],bl
   14000cf95:	rex.WRB add BYTE PTR fs:[r15],r11b
   14000cf99:	xor    al,0x4a
   14000cf9b:	add    BYTE PTR [rdi],bl
   14000cf9d:	add    DWORD PTR [rax+0x0],ecx
   14000cfa0:	sbb    BYTE PTR [rax+0x0],dh
   14000cfa3:	add    BYTE PTR [rax],bh
   14000cfa5:	cwde   
   14000cfa6:	add    BYTE PTR [rax],al
   14000cfa8:	xor    BYTE PTR [rdx],al
   14000cfaa:	add    BYTE PTR [rax],al
   14000cfac:	sbb    DWORD PTR [rip+0x34130009],esp        # 0x17413cfbb
   14000cfb2:	push   rcx
   14000cfb3:	add    BYTE PTR [rbx],dl
   14000cfb5:	add    DWORD PTR [rdx+0x0],ecx
   14000cfb8:	or     al,0xf0
   14000cfba:	or     ah,al
   14000cfbc:	or     BYTE PTR [rax+0x7],dh
   14000cfbf:	(bad)  
   14000cfc0:	(bad)  
   14000cfc1:	push   rax
   14000cfc2:	add    BYTE PTR [rax],al
   14000cfc4:	cmp    BYTE PTR [rax+0x2400000],bl
   14000cfca:	add    BYTE PTR [rax],al
   14000cfcc:	add    DWORD PTR [rax],ebx
   14000cfce:	or     al,BYTE PTR [rax]
   14000cfd0:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14000cfd4:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000cfd8:	sbb    BYTE PTR [rax+rcx*1],dh
   14000cfdb:	add    BYTE PTR [rax],bl
   14000cfdd:	xor    dl,BYTE PTR [rax+rsi*8]
   14000cfe0:	adc    ah,al
   14000cfe2:	adc    BYTE PTR [rax+0x1],dh
   14000cfe5:	sbb    cl,BYTE PTR [rdx]
   14000cfe7:	add    BYTE PTR [rdx],bl
   14000cfe9:	push   rsp
   14000cfea:	or     al,0x0
   14000cfec:	sbb    dh,BYTE PTR [rdx+rcx*1]
   14000cfef:	add    BYTE PTR [rdx],bl
   14000cff1:	xor    dl,BYTE PTR [rsi]
   14000cff3:	lock adc al,0xe0
   14000cff6:	adc    al,al
   14000cff8:	adc    BYTE PTR [rax+0xf],dh
   14000cffb:	(bad)  
   14000cffc:	sbb    DWORD PTR [rip+0x641b000b],ebp        # 0x1a41bd00d
   14000d002:	push   rbp
   14000d003:	add    BYTE PTR [rbx],bl
   14000d005:	push   rsp
   14000d006:	push   rsp
   14000d007:	add    BYTE PTR [rbx],bl
   14000d009:	xor    al,0x53
   14000d00b:	add    BYTE PTR [rbx],bl
   14000d00d:	add    DWORD PTR [rsi+0x0],ecx
   14000d010:	adc    al,0xf0
   14000d012:	adc    ah,al
   14000d014:	adc    BYTE PTR [rax+0x0],dh
   14000d017:	add    BYTE PTR [rax],bh
   14000d019:	cwde   
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	(bad)  
   14000d01d:	add    al,BYTE PTR [rax]
   14000d01f:	add    BYTE PTR [rcx],dl
   14000d021:	(bad)  
   14000d022:	or     BYTE PTR [rax],al
   14000d024:	(bad)  
   14000d025:	adc    DWORD PTR fs:[rax],eax
   14000d028:	sbb    dh,BYTE PTR [rax+rdx*1]
   14000d02b:	add    BYTE PTR [rsi],cl
   14000d02d:	xchg   edx,eax
   14000d02e:	(bad)  
   14000d02f:	loopne 0x14000d036
   14000d031:	jo     0x14000d037
   14000d033:	push   rax
   14000d034:	jb     0x14000cfca
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	enter  0xc6,0x0
   14000d03c:	(bad)  
   14000d03d:	(bad)  
   14000d03e:	(bad)  
   14000d03f:	(bad)  
   14000d040:	sti    
   14000d041:	cdq    
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	add    BYTE PTR [rax],al
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	(bad)  
   14000d049:	(bad)  
   14000d04a:	add    BYTE PTR [rax],al
   14000d04c:	add    BYTE PTR [rax],al
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	jl     0x14000cfd7
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	(bad)  
   14000d055:	(bad)  
   14000d056:	(bad)  
   14000d057:	jmp    QWORD PTR [rbx+0x85]
   14000d05d:	add    BYTE PTR [rax],al
   14000d05f:	add    BYTE PTR [rdx],al
   14000d061:	xchg   BYTE PTR [rax],al
   14000d063:	add    BYTE PTR [rcx],al
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    BYTE PTR [rbp-0x7a],ch
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	add    BYTE PTR [rax],al
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	jg     0x14000cff8
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	(bad)  
   14000d075:	(bad)  
   14000d076:	(bad)  
   14000d077:	call   FWORD PTR [rcx]
   14000d079:	and    eax,0x74170007
   14000d07e:	xor    DWORD PTR [rax],eax
   14000d080:	(bad)  
   14000d081:	xor    al,0x30
   14000d083:	add    BYTE PTR [rdi],dl
   14000d085:	add    DWORD PTR [rsi],ebp
   14000d087:	add    BYTE PTR [rbx],cl
   14000d089:	push   rax
   14000d08a:	add    BYTE PTR [rax],al
   14000d08c:	cmp    BYTE PTR [rax+0x1600000],bl
   14000d092:	add    BYTE PTR [rax],al
   14000d094:	sbb    DWORD PTR [rsi+rax*1],ebx
   14000d097:	add    BYTE PTR [rsp+riz*2],bl
   14000d09a:	or     al,BYTE PTR [rax]
   14000d09c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000d09f:	add    BYTE PTR [rdx+rdx*2],cl
   14000d0a2:	or     BYTE PTR [rax+0x72],dh
   14000d0a5:	xchg   esp,eax
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	movabs al,ds:0xffffffff0000c6
   14000d0b1:	add    BYTE PTR [rax],al
   14000d0b3:	add    bh,bh
   14000d0b5:	(bad)  
   14000d0b6:	(bad)  
   14000d0b7:	inc    DWORD PTR [rax]
	...
   14000d0c1:	add    BYTE PTR [rax],al
   14000d0c3:	add    BYTE PTR [rcx],al
   14000d0c5:	add    BYTE PTR [rax],al
   14000d0c7:	add    BYTE PTR [rcx],al
   14000d0c9:	add    BYTE PTR [rax],al
   14000d0cb:	add    al,dl
   14000d0cd:	rol    BYTE PTR [rax],1
   14000d0cf:	add    BYTE PTR [rax+0x0],al
	...
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	sbb    DWORD PTR [rdx+0x380000],ebx
   14000d0e2:	add    BYTE PTR [rax],al
   14000d0e4:	add    BYTE PTR [rax],al
   14000d0e6:	add    BYTE PTR [rax],al
   14000d0e8:	call   0x13f00d174
   14000d0ed:	(bad)  
   14000d0ee:	(bad)  
   14000d0ef:	jmp    FWORD PTR [rdi+0x88]
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    ah,al
   14000d0f9:	mov    BYTE PTR [rax],al
   14000d0fb:	add    bh,bh
   14000d0fd:	(bad)  
   14000d0fe:	(bad)  
   14000d0ff:	call   FWORD PTR [rcx]
   14000d101:	(bad)  
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	add    BYTE PTR [rax],al
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	es (bad) 
   14000d10a:	add    BYTE PTR [rax],al
   14000d10c:	add    DWORD PTR [rax],eax
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	sbb    DWORD PTR [rdx],ecx
   14000d112:	add    al,BYTE PTR [rax]
   14000d114:	or     dh,BYTE PTR [rdx]
   14000d116:	(bad)  
   14000d117:	push   rax
   14000d118:	jb     0x14000d0ae
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	movabs al,ds:0x1d00081d190000c6
   14000d125:	je     0x14000d132
   14000d127:	add    BYTE PTR [rcx],bl
   14000d129:	or     al,BYTE PTR fs:[rax]
   14000d12c:	adc    eax,0x9000834
   14000d131:	push   rdx
   14000d132:	add    eax,0x9472e0
   14000d137:	add    BYTE PTR [rax-0x3a],bh
	...
   14000d142:	add    BYTE PTR [rax],al
   14000d144:	add    DWORD PTR [rax],eax
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	add    DWORD PTR [rax],eax
   14000d14a:	add    BYTE PTR [rax],al
   14000d14c:	push   rax
   14000d14d:	rol    DWORD PTR [rax],1
   14000d14f:	add    BYTE PTR [rax+0x0],al
	...
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	(bad)  
   14000d15d:	(bad)  
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	cmp    BYTE PTR [rax],al
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	add    BYTE PTR [rax],al
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	in     al,0x88
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	(bad)  
   14000d16d:	(bad)  
   14000d16e:	(bad)  
   14000d16f:	push   QWORD PTR [rcx+rcx*4]
   14000d172:	add    BYTE PTR [rax],al
   14000d174:	add    BYTE PTR [rax],al
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	mov    QWORD PTR [rax],rax
   14000d17b:	add    bh,bh
   14000d17d:	(bad)  
   14000d17e:	(bad)  
   14000d17f:	(bad)  
   14000d180:	(bad)  
   14000d181:	(bad)  
   14000d182:	add    BYTE PTR [rax],al
   14000d184:	add    BYTE PTR [rax],al
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	rex.WR (bad) 
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	add    DWORD PTR [rax],eax
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	sbb    DWORD PTR [rdx],ecx
   14000d192:	add    al,BYTE PTR [rax]
   14000d194:	or     dh,BYTE PTR [rdx]
   14000d196:	(bad)  
   14000d197:	push   rax
   14000d198:	jb     0x14000d12e
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	js     0x14000d164
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	add    DWORD PTR [rdx],ecx
   14000d1a2:	add    al,BYTE PTR [rax]
   14000d1a4:	or     dl,BYTE PTR [rdx+0x6]
   14000d1a7:	xor    BYTE PTR [rcx],al
   14000d1a9:	add    al,0x1
   14000d1ab:	add    BYTE PTR [rdx+rax*4],al
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	add    DWORD PTR [rdx],ecx
   14000d1b2:	add    al,BYTE PTR [rax]
   14000d1b4:	or     dh,BYTE PTR [rdx]
   14000d1b6:	(bad)  
   14000d1b7:	xor    BYTE PTR [rcx],cl
   14000d1b9:	sbb    BYTE PTR [rcx],cl
   14000d1bb:	add    BYTE PTR [rax],bl
   14000d1bd:	je     0x14000d1d9
   14000d1bf:	add    BYTE PTR [rax],bl
   14000d1c1:	sbb    DWORD PTR fs:[rax],eax
   14000d1c4:	sbb    BYTE PTR [rax+rbx*1],dh
   14000d1c7:	add    BYTE PTR [rax],bl
   14000d1c9:	add    DWORD PTR [rsi],edx
   14000d1cb:	add    BYTE PTR [rcx],dl
   14000d1cd:	lock add BYTE PTR [rax],al
   14000d1d0:	(bad)  
   14000d1d1:	cwde   
   14000d1d2:	add    BYTE PTR [rax],al
   14000d1d4:	add    DWORD PTR [rax],eax
   14000d1d6:	add    BYTE PTR [rax],al
   14000d1d8:	(bad)  
   14000d1d9:	mov    es,WORD PTR [rax]
   14000d1db:	add    BYTE PTR [rdi-0x70],al
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	gs (bad) 
   14000d1e2:	add    BYTE PTR [rax],al
   14000d1e4:	rex.RXB xchg r8d,eax
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	add    DWORD PTR [rax],eax
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	adc    DWORD PTR [rdx],ecx
   14000d1ee:	add    al,0x0
   14000d1f0:	or     dh,BYTE PTR [rsi+rax*1]
   14000d1f3:	add    BYTE PTR [rdx],cl
   14000d1f5:	xor    al,BYTE PTR [rsi]
   14000d1f7:	jo     0x14000d1ff
   14000d1f9:	cwde   
   14000d1fa:	add    BYTE PTR [rax],al
   14000d1fc:	add    DWORD PTR [rax],eax
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	add    eax,0x4a000091
   14000d205:	xchg   ecx,eax
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	mov    DWORD PTR [rdx+0x0],ebx
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	add    DWORD PTR [rsi],eax
   14000d212:	add    al,BYTE PTR [rax]
   14000d214:	(bad)  
   14000d215:	xor    al,BYTE PTR [rdx]
   14000d217:	push   rax
   14000d218:	add    DWORD PTR [rcx+rax*1],eax
   14000d21b:	add    BYTE PTR [rdx+riz*8],al
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	add    DWORD PTR [rdx+rax*1],ecx
   14000d223:	add    BYTE PTR [rcx+rax*1],cl
   14000d226:	adc    DWORD PTR [rax],eax
   14000d228:	or     DWORD PTR [rcx+rax*1],eax
   14000d22b:	add    BYTE PTR [rdx+riz*1],al
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	(bad)  
   14000d231:	cwde   
   14000d232:	add    BYTE PTR [rax],al
   14000d234:	add    DWORD PTR [rax],eax
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	pushf  
   14000d239:	xchg   ebp,eax
   14000d23a:	add    BYTE PTR [rax],al
   14000d23c:	rcl    BYTE PTR [rbp+0x10000],cl
   14000d242:	add    BYTE PTR [rax],al
   14000d244:	rcl    BYTE PTR [rbp+0xa090000],cl
   14000d24a:	add    al,0x0
   14000d24c:	or     dh,BYTE PTR [rsi+rax*1]
   14000d24f:	add    BYTE PTR [rdx],cl
   14000d251:	xor    al,BYTE PTR [rsi]
   14000d253:	jo     0x14000d25b
   14000d255:	cwde   
   14000d256:	add    BYTE PTR [rax],al
   14000d258:	add    DWORD PTR [rax],eax
   14000d25a:	add    BYTE PTR [rax],al
   14000d25c:	popf   
   14000d25d:	xchg   esi,eax
   14000d25e:	add    BYTE PTR [rax],al
   14000d260:	rcl    BYTE PTR [rsi-0x65500000],1
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	rcl    BYTE PTR [rsi+0xd010000],1
   14000d26e:	add    al,0x0
   14000d270:	or     eax,0xd000934
   14000d275:	xor    al,BYTE PTR [rsi]
   14000d277:	push   rax
   14000d278:	add    DWORD PTR [rax],eax
   14000d27a:	add    BYTE PTR [rax],al
   14000d27c:	add    BYTE PTR [rax],al
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	add    DWORD PTR [rcx+rax*1],eax
   14000d283:	add    BYTE PTR [rdx+rdx*1],al
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	add    BYTE PTR [rax],al
   14000d28a:	add    BYTE PTR [rax],al
   14000d28c:	test   BYTE PTR [rbx+0x0],cl
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	test   al,0xd2
	...
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	add    al,BYTE PTR [rax]
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	rcl    dl,0x0
   14000d2af:	add    al,ch
   14000d2b1:	rol    BYTE PTR [rax],cl
	...
   14000d2bf:	add    BYTE PTR [rax],dl
   14000d2c1:	add    BYTE PTR [rax],al
   14000d2c3:	add    BYTE PTR [rax-0xd],dl
   14000d2c6:	add    BYTE PTR [rax],al
   14000d2c8:	add    BYTE PTR [rax],al
   14000d2ca:	add    BYTE PTR [rax],al
   14000d2cc:	(bad)  
   14000d2cd:	(bad)  
   14000d2ce:	(bad)  
   14000d2cf:	inc    DWORD PTR [rax]
   14000d2d1:	add    BYTE PTR [rax],al
   14000d2d3:	add    BYTE PTR [rax],bl
   14000d2d5:	add    BYTE PTR [rax],al
   14000d2d7:	add    BYTE PTR [rdx+rcx*4+0x0],bh
	...
   14000d2ea:	add    BYTE PTR [rax],al
   14000d2ec:	js     0x14000d2e1
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	add    BYTE PTR [rax],al
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	(bad)  
   14000d2f5:	(bad)  
   14000d2f6:	(bad)  
   14000d2f7:	inc    DWORD PTR [rax]
   14000d2f9:	add    BYTE PTR [rax],al
   14000d2fb:	add    BYTE PTR [rax],bl
   14000d2fd:	add    BYTE PTR [rax],al
   14000d2ff:	add    BYTE PTR [rdx+0x94],ah
	...
   14000d311:	add    BYTE PTR [rax],al
   14000d313:	add    BYTE PTR [rax+0xf3],bl
   14000d319:	add    BYTE PTR [rax],al
   14000d31b:	add    bh,bh
   14000d31d:	(bad)  
   14000d31e:	(bad)  
   14000d31f:	inc    DWORD PTR [rax]
   14000d321:	add    BYTE PTR [rax],al
   14000d323:	add    BYTE PTR [rax],bl
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rbx+rcx*4],ah
	...
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	pushf  
   14000d33d:	mov    eax,DWORD PTR [rax]
   14000d33f:	add    BYTE PTR [rax],al
   14000d341:	add    BYTE PTR [rax],al
   14000d343:	add    BYTE PTR [rax-0x2d],bl
	...
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	add    eax,DWORD PTR [rax]
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	js     0x14000d331
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	adc    bl,dl
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	call   0x14000d43b
	...
   14000d379:	add    BYTE PTR [rax],al
   14000d37b:	add    al,al
   14000d37d:	repz add BYTE PTR [rax],al
   14000d380:	add    BYTE PTR [rax],al
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	(bad)  
   14000d385:	(bad)  
   14000d386:	(bad)  
   14000d387:	inc    DWORD PTR [rax]
   14000d389:	add    BYTE PTR [rax],al
   14000d38b:	add    BYTE PTR [rax],bl
   14000d38d:	add    BYTE PTR [rax],al
   14000d38f:	add    BYTE PTR [rbx+rcx*4],ah
	...
   14000d3a2:	add    BYTE PTR [rax],al
   14000d3a4:	pushf  
   14000d3a5:	mov    eax,DWORD PTR [rax]
   14000d3a7:	add    BYTE PTR [rax],al
   14000d3a9:	add    BYTE PTR [rax],al
   14000d3ab:	add    al,al
   14000d3ad:	rol    DWORD PTR [rax],cl
	...
   14000d3bf:	add    BYTE PTR [rbx],al
   14000d3c1:	add    BYTE PTR [rax],al
   14000d3c3:	add    al,ah
   14000d3c5:	rol    DWORD PTR [rax],cl
   14000d3c7:	add    BYTE PTR [rax],dl
   14000d3c9:	rol    DWORD PTR [rax],cl
   14000d3cb:	add    al,ch
   14000d3cd:	rol    BYTE PTR [rax],cl
	...
   14000d3e3:	add    al,ch
   14000d3e5:	repz add BYTE PTR [rax],al
   14000d3e8:	add    BYTE PTR [rax],al
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	(bad)  
   14000d3ed:	(bad)  
   14000d3ee:	(bad)  
   14000d3ef:	inc    DWORD PTR [rax]
   14000d3f1:	add    BYTE PTR [rax],al
   14000d3f3:	add    BYTE PTR [rax],bl
   14000d3f5:	add    BYTE PTR [rax],al
   14000d3f7:	add    BYTE PTR [rbx+rcx*4],ah
	...
   14000d402:	add    BYTE PTR [rax],al
   14000d404:	rcl    ah,1
	...
   14000d40e:	add    BYTE PTR [rax],al
   14000d410:	add    dl,bl
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	add    BYTE PTR [rax-0x2aa80000],ah
	...
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	(bad)  
   14000d426:	add    BYTE PTR [rax],al
   14000d428:	mov    BYTE PTR [rax-0x29080000],ah
	...
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	call   0x16800d51a
   14000d43d:	movabs ds:0xd7f80000,al
   14000d446:	add    BYTE PTR [rax],al
   14000d448:	add    BYTE PTR [rax],al
   14000d44a:	add    BYTE PTR [rax],al
   14000d44c:	mov    eax,fs
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	sub    BYTE PTR [rbx-0x26580000],ah
	...
   14000d45e:	add    BYTE PTR [rax],al
   14000d460:	and    al,0xe1
   14000d462:	add    BYTE PTR [rax],al
   14000d464:	fsub   DWORD PTR [rax+rax*1+0xd6b800]
	...
   14000d473:	add    BYTE PTR [rdx-0x1f],dl
   14000d476:	add    BYTE PTR [rax],al
   14000d478:	call   0x18000d51e
   14000d47d:	(bad)  
	...
   14000d486:	add    BYTE PTR [rax],al
   14000d488:	mov    ah,cl
   14000d48a:	add    BYTE PTR [rax],al
   14000d48c:	jo     0x14000d42e
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	sub    ch,dl
	...
   14000d49a:	add    BYTE PTR [rax],al
   14000d49c:	(bad)  
   14000d49d:	loope  0x14000d49f
   14000d49f:	add    BYTE PTR [rax-0x60],bl
   14000d4a2:	add    BYTE PTR [rax],al
   14000d4a4:	rcl    dh,1
	...
   14000d4ae:	add    BYTE PTR [rax],al
   14000d4b0:	es loop 0x14000d4b3
   14000d4b3:	add    BYTE PTR [rax],al
   14000d4b5:	movabs ds:0x0,al
	...
   14000d4ce:	add    BYTE PTR [rax],al
   14000d4d0:	enter  0xd9,0x0
   14000d4d4:	add    BYTE PTR [rax],al
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	xor    ah,dl
   14000d4da:	add    BYTE PTR [rax],al
   14000d4dc:	add    BYTE PTR [rax],al
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	rex.RX loop 0x14000d4e3
   14000d4e3:	add    BYTE PTR [rax],al
   14000d4e5:	add    BYTE PTR [rax],al
   14000d4e7:	add    BYTE PTR [rdx+riz*8+0x0],bl
   14000d4eb:	add    BYTE PTR [rax],al
   14000d4ed:	add    BYTE PTR [rax],al
   14000d4ef:	add    BYTE PTR [rsi-0x1e],dh
   14000d4f2:	add    BYTE PTR [rax],al
   14000d4f4:	add    BYTE PTR [rax],al
   14000d4f6:	add    BYTE PTR [rax],al
   14000d4f8:	mov    edx,fs
   14000d4fa:	add    BYTE PTR [rax],al
   14000d4fc:	add    BYTE PTR [rax],al
   14000d4fe:	add    BYTE PTR [rax],al
   14000d500:	movabs al,ds:0xae000000000000e2
   14000d509:	loop   0x14000d50b
   14000d50b:	add    BYTE PTR [rax],al
   14000d50d:	add    BYTE PTR [rax],al
   14000d50f:	add    BYTE PTR [rsi+0xe2],bh
   14000d515:	add    BYTE PTR [rax],al
   14000d517:	add    ah,cl
   14000d519:	loop   0x14000d51b
	...
   14000d527:	add    BYTE PTR [rax+0xe1],bl
   14000d52d:	add    BYTE PTR [rax],al
   14000d52f:	add    BYTE PTR [rcx+riz*8+0x0],dh
	...
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	jb     0x14000d523
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	add    BYTE PTR [rax],al
   14000d546:	add    BYTE PTR [rax],al
   14000d548:	pop    rsi
   14000d549:	loope  0x14000d54b
	...
   14000d557:	add    BYTE PTR [rax+0xe3],bh
   14000d55d:	add    BYTE PTR [rax],al
   14000d55f:	add    BYTE PTR [rbx+riz*8+0x0],ah
   14000d566:	add    BYTE PTR [rax],al
   14000d568:	nop
   14000d569:	jrcxz  0x14000d56b
   14000d56b:	add    BYTE PTR [rax],al
   14000d56d:	add    BYTE PTR [rax],al
   14000d56f:	add    BYTE PTR [rbx+riz*8+0x0],bh
   14000d573:	add    BYTE PTR [rax],al
   14000d575:	add    BYTE PTR [rax],al
   14000d577:	add    BYTE PTR [rdx-0x1d],al
   14000d57a:	add    BYTE PTR [rax],al
   14000d57c:	add    BYTE PTR [rax],al
   14000d57e:	add    BYTE PTR [rax],al
   14000d580:	cs jrcxz 0x14000d583
   14000d583:	add    BYTE PTR [rax],al
   14000d585:	add    BYTE PTR [rax],al
   14000d587:	add    BYTE PTR [rbx+riz*8],dl
   14000d58a:	add    BYTE PTR [rax],al
   14000d58c:	add    BYTE PTR [rax],al
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	add    bl,ah
   14000d592:	add    BYTE PTR [rax],al
   14000d594:	add    BYTE PTR [rax],al
   14000d596:	add    BYTE PTR [rax],al
   14000d598:	out    dx,al
   14000d599:	loop   0x14000d59b
   14000d59b:	add    BYTE PTR [rax],al
   14000d59d:	add    BYTE PTR [rax],al
   14000d59f:	add    dh,ah
   14000d5a1:	loop   0x14000d5a3
   14000d5a3:	add    BYTE PTR [rax],al
   14000d5a5:	add    BYTE PTR [rax],al
   14000d5a7:	add    dh,cl
   14000d5a9:	fild   DWORD PTR [rax]
   14000d5ab:	add    BYTE PTR [rax],al
   14000d5ad:	add    BYTE PTR [rax],al
   14000d5af:	add    BYTE PTR [rsi+0xdb],bh
   14000d5b5:	add    BYTE PTR [rax],al
   14000d5b7:	add    BYTE PTR [rbx+rbx*8+0x0],ch
   14000d5be:	add    BYTE PTR [rax],al
   14000d5c0:	xchg   esi,eax
   14000d5c1:	fild   DWORD PTR [rax]
   14000d5c3:	add    BYTE PTR [rax],al
   14000d5c5:	add    BYTE PTR [rax],al
   14000d5c7:	add    BYTE PTR [rax+0xdb],cl
   14000d5cd:	add    BYTE PTR [rax],al
   14000d5cf:	add    BYTE PTR [rsi-0x25],dh
   14000d5d2:	add    BYTE PTR [rax],al
   14000d5d4:	add    BYTE PTR [rax],al
   14000d5d6:	add    BYTE PTR [rax],al
   14000d5d8:	data16 fild DWORD PTR [rax]
   14000d5db:	add    BYTE PTR [rax],al
   14000d5dd:	add    BYTE PTR [rax],al
   14000d5df:	add    BYTE PTR [rax-0x25],dl
   14000d5e2:	add    BYTE PTR [rax],al
   14000d5e4:	add    BYTE PTR [rax],al
   14000d5e6:	add    BYTE PTR [rax],al
   14000d5e8:	cmp    al,0xdb
   14000d5ea:	add    BYTE PTR [rax],al
   14000d5ec:	add    BYTE PTR [rax],al
   14000d5ee:	add    BYTE PTR [rax],al
   14000d5f0:	sub    al,0xdb
   14000d5f2:	add    BYTE PTR [rax],al
   14000d5f4:	add    BYTE PTR [rax],al
   14000d5f6:	add    BYTE PTR [rax],al
   14000d5f8:	sbb    al,0xdb
   14000d5fa:	add    BYTE PTR [rax],al
   14000d5fc:	add    BYTE PTR [rax],al
   14000d5fe:	add    BYTE PTR [rax],al
   14000d600:	or     al,0xdb
   14000d602:	add    BYTE PTR [rax],al
   14000d604:	add    BYTE PTR [rax],al
   14000d606:	add    BYTE PTR [rax],al
   14000d608:	add    bl,bl
   14000d60a:	add    BYTE PTR [rax],al
   14000d60c:	add    BYTE PTR [rax],al
   14000d60e:	add    BYTE PTR [rax],al
   14000d610:	repnz fiadd DWORD PTR [rax]
   14000d613:	add    BYTE PTR [rax],al
   14000d615:	add    BYTE PTR [rax],al
   14000d617:	add    al,ah
   14000d619:	fiadd  DWORD PTR [rax]
   14000d61b:	add    BYTE PTR [rax],al
   14000d61d:	add    BYTE PTR [rax],al
   14000d61f:	add    ah,dl
   14000d621:	fiadd  DWORD PTR [rax]
   14000d623:	add    BYTE PTR [rax],al
   14000d625:	add    BYTE PTR [rax],al
   14000d627:	add    dh,al
   14000d629:	fiadd  DWORD PTR [rax]
   14000d62b:	add    BYTE PTR [rax],al
   14000d62d:	add    BYTE PTR [rax],al
   14000d62f:	add    BYTE PTR [rdx+rbx*8+0x0],dh
   14000d636:	add    BYTE PTR [rax],al
   14000d638:	pushf  
   14000d639:	fiadd  DWORD PTR [rax]
   14000d63b:	add    BYTE PTR [rax],al
   14000d63d:	add    BYTE PTR [rax],al
   14000d63f:	add    BYTE PTR [rax+0xda],al
   14000d645:	add    BYTE PTR [rax],al
   14000d647:	add    BYTE PTR [rax-0x26],dh
   14000d64a:	add    BYTE PTR [rax],al
   14000d64c:	add    BYTE PTR [rax],al
   14000d64e:	add    BYTE PTR [rax],al
   14000d650:	pop    rsi
   14000d651:	fiadd  DWORD PTR [rax]
   14000d653:	add    BYTE PTR [rax],al
   14000d655:	add    BYTE PTR [rax],al
   14000d657:	add    BYTE PTR [rax-0x26],cl
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	add    BYTE PTR [rax],al
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	cmp    bl,dl
   14000d662:	add    BYTE PTR [rax],al
   14000d664:	add    BYTE PTR [rax],al
   14000d666:	add    BYTE PTR [rax],al
   14000d668:	sub    al,0xda
   14000d66a:	add    BYTE PTR [rax],al
   14000d66c:	add    BYTE PTR [rax],al
   14000d66e:	add    BYTE PTR [rax],al
   14000d670:	sbb    bl,dl
   14000d672:	add    BYTE PTR [rax],al
   14000d674:	add    BYTE PTR [rax],al
   14000d676:	add    BYTE PTR [rax],al
   14000d678:	(bad)  
   14000d679:	fiadd  DWORD PTR [rax]
   14000d67b:	add    BYTE PTR [rax],al
   14000d67d:	add    BYTE PTR [rax],al
   14000d67f:	add    BYTE PTR [rsi-0x1d],bl
   14000d682:	add    BYTE PTR [rax],al
   14000d684:	add    BYTE PTR [rax],al
   14000d686:	add    BYTE PTR [rax],al
   14000d688:	call   0x14000d770
   14000d68d:	add    BYTE PTR [rax],al
   14000d68f:	add    dh,bh
   14000d691:	jrcxz  0x14000d693
   14000d693:	add    BYTE PTR [rax],al
   14000d695:	add    BYTE PTR [rax],al
   14000d697:	add    BYTE PTR [rax],bl
   14000d699:	in     al,0x0
   14000d69b:	add    BYTE PTR [rax],al
   14000d69d:	add    BYTE PTR [rax],al
   14000d69f:	add    BYTE PTR [rax],ch
   14000d6a1:	in     al,0x0
   14000d6a3:	add    BYTE PTR [rax],al
   14000d6a5:	add    BYTE PTR [rax],al
   14000d6a7:	add    dl,dl
   14000d6a9:	jrcxz  0x14000d6ab
	...
   14000d6b7:	add    BYTE PTR [rax-0x1f],al
   14000d6ba:	add    BYTE PTR [rax],al
   14000d6bc:	add    BYTE PTR [rax],al
   14000d6be:	add    BYTE PTR [rax],al
   14000d6c0:	cs loope 0x14000d6c3
	...
   14000d6cf:	add    ah,dl
   14000d6d1:	loope  0x14000d6d3
   14000d6d3:	add    BYTE PTR [rax],al
   14000d6d5:	add    BYTE PTR [rax],al
   14000d6d7:	add    ah,bh
   14000d6d9:	loope  0x14000d6db
   14000d6db:	add    BYTE PTR [rax],al
   14000d6dd:	add    BYTE PTR [rax],al
   14000d6df:	add    BYTE PTR [rdx],dl
   14000d6e1:	loop   0x14000d6e3
   14000d6e3:	add    BYTE PTR [rax],al
   14000d6e5:	add    BYTE PTR [rax],al
   14000d6e7:	add    dh,ah
   14000d6e9:	loope  0x14000d6eb
	...
   14000d6f7:	add    BYTE PTR [rdx-0x24],dl
   14000d6fa:	add    BYTE PTR [rax],al
   14000d6fc:	add    BYTE PTR [rax],al
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	(bad)  
   14000d701:	fadd   QWORD PTR [rax]
   14000d703:	add    BYTE PTR [rax],al
   14000d705:	add    BYTE PTR [rax],al
   14000d707:	add    BYTE PTR [rsi-0x24],dh
   14000d70a:	add    BYTE PTR [rax],al
   14000d70c:	add    BYTE PTR [rax],al
   14000d70e:	add    BYTE PTR [rax],al
   14000d710:	(bad)  
   14000d711:	fadd   QWORD PTR [rax]
   14000d713:	add    BYTE PTR [rax],al
   14000d715:	add    BYTE PTR [rax],al
   14000d717:	add    BYTE PTR [rax+0xdc],dl
   14000d71d:	add    BYTE PTR [rax],al
   14000d71f:	add    BYTE PTR [rsi+0xdc],bl
   14000d725:	add    BYTE PTR [rax],al
   14000d727:	add    BYTE PTR [rdx+0xdc],ch
   14000d72d:	add    BYTE PTR [rax],al
   14000d72f:	add    BYTE PTR [rax+0xdc],bh
   14000d735:	add    BYTE PTR [rax],al
   14000d737:	add    ah,al
   14000d739:	fadd   QWORD PTR [rax]
   14000d73b:	add    BYTE PTR [rax],al
   14000d73d:	add    BYTE PTR [rax],al
   14000d73f:	add    ah,dl
   14000d741:	fadd   QWORD PTR [rax]
   14000d743:	add    BYTE PTR [rax],al
   14000d745:	add    BYTE PTR [rax],al
   14000d747:	add    ah,ah
   14000d749:	fadd   QWORD PTR [rax]
   14000d74b:	add    BYTE PTR [rax],al
   14000d74d:	add    BYTE PTR [rax],al
   14000d74f:	add    ah,dh
   14000d751:	fadd   QWORD PTR [rax]
   14000d753:	add    BYTE PTR [rax],al
   14000d755:	add    BYTE PTR [rax],al
   14000d757:	add    BYTE PTR [rax-0x24],al
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	add    BYTE PTR [rax],al
   14000d75e:	add    BYTE PTR [rax],al
   14000d760:	sbb    al,0xdd
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	add    BYTE PTR [rax],al
   14000d766:	add    BYTE PTR [rax],al
   14000d768:	fld    QWORD PTR cs:[rax]
   14000d76b:	add    BYTE PTR [rax],al
   14000d76d:	add    BYTE PTR [rax],al
   14000d76f:	add    BYTE PTR [rdx-0x23],al
   14000d772:	add    BYTE PTR [rax],al
   14000d774:	add    BYTE PTR [rax],al
   14000d776:	add    BYTE PTR [rax],al
   14000d778:	push   rdx
   14000d779:	fld    QWORD PTR [rax]
   14000d77b:	add    BYTE PTR [rax],al
   14000d77d:	add    BYTE PTR [rax],al
   14000d77f:	add    BYTE PTR [rdx-0x23],ah
   14000d782:	add    BYTE PTR [rax],al
   14000d784:	add    BYTE PTR [rax],al
   14000d786:	add    BYTE PTR [rax],al
   14000d788:	jb     0x14000d767
   14000d78a:	add    BYTE PTR [rax],al
   14000d78c:	add    BYTE PTR [rax],al
   14000d78e:	add    BYTE PTR [rax],al
   14000d790:	(bad)  
   14000d791:	fld    QWORD PTR [rax]
   14000d793:	add    BYTE PTR [rax],al
   14000d795:	add    BYTE PTR [rax],al
   14000d797:	add    BYTE PTR [rax+0xdd],dl
   14000d79d:	add    BYTE PTR [rax],al
   14000d79f:	add    BYTE PTR [rbp+rbx*8+0x0],ah
   14000d7a6:	add    BYTE PTR [rax],al
   14000d7a8:	mov    ah,0xdd
   14000d7aa:	add    BYTE PTR [rax],al
   14000d7ac:	add    BYTE PTR [rax],al
   14000d7ae:	add    BYTE PTR [rax],al
   14000d7b0:	enter  0xdd,0x0
   14000d7b4:	add    BYTE PTR [rax],al
   14000d7b6:	add    BYTE PTR [rax],al
   14000d7b8:	fcmovu st,st(5)
   14000d7ba:	add    BYTE PTR [rax],al
   14000d7bc:	add    BYTE PTR [rax],al
   14000d7be:	add    BYTE PTR [rax],al
   14000d7c0:	xor    al,0xdc
   14000d7c2:	add    BYTE PTR [rax],al
   14000d7c4:	add    BYTE PTR [rax],al
   14000d7c6:	add    BYTE PTR [rax],al
   14000d7c8:	sub    ah,bl
   14000d7ca:	add    BYTE PTR [rax],al
   14000d7cc:	add    BYTE PTR [rax],al
   14000d7ce:	add    BYTE PTR [rax],al
   14000d7d0:	adc    bl,ah
   14000d7d2:	add    BYTE PTR [rax],al
   14000d7d4:	add    BYTE PTR [rax],al
   14000d7d6:	add    BYTE PTR [rax],al
   14000d7d8:	or     ch,bl
   14000d7da:	add    BYTE PTR [rax],al
   14000d7dc:	add    BYTE PTR [rax],al
   14000d7de:	add    BYTE PTR [rax],al
   14000d7e0:	in     al,dx
   14000d7e1:	fild   DWORD PTR [rax]
   14000d7e3:	add    BYTE PTR [rax],al
   14000d7e5:	add    BYTE PTR [rax],al
   14000d7e7:	add    dh,bh
   14000d7e9:	fild   DWORD PTR [rax]
	...
   14000d7f7:	add    dl,bl
   14000d7f9:	loopne 0x14000d7fb
   14000d7fb:	add    BYTE PTR [rax],al
   14000d7fd:	add    BYTE PTR [rax],al
   14000d7ff:	add    BYTE PTR [rdx-0x22],dh
   14000d802:	add    BYTE PTR [rax],al
   14000d804:	add    BYTE PTR [rax],al
   14000d806:	add    BYTE PTR [rax],al
   14000d808:	push   0xde
   14000d80d:	add    BYTE PTR [rax],al
   14000d80f:	add    BYTE PTR [rsi-0x22],bl
   14000d812:	add    BYTE PTR [rax],al
   14000d814:	add    BYTE PTR [rax],al
   14000d816:	add    BYTE PTR [rax],al
   14000d818:	push   rsp
   14000d819:	fiadd  WORD PTR [rax]
   14000d81b:	add    BYTE PTR [rax],al
   14000d81d:	add    BYTE PTR [rax],al
   14000d81f:	add    BYTE PTR [rdx+0xde],bl
   14000d825:	add    BYTE PTR [rax],al
   14000d827:	add    dl,al
   14000d829:	loopne 0x14000d82b
   14000d82b:	add    BYTE PTR [rax],al
   14000d82d:	add    BYTE PTR [rax],al
   14000d82f:	add    BYTE PTR [rax+0xde],dl
   14000d835:	add    BYTE PTR [rax],al
   14000d837:	add    BYTE PTR [rax-0x22],cl
   14000d83a:	add    BYTE PTR [rax],al
   14000d83c:	add    BYTE PTR [rax],al
   14000d83e:	add    BYTE PTR [rax],al
   14000d840:	fiadd  WORD PTR ss:[rax]
   14000d843:	add    BYTE PTR [rax],al
   14000d845:	add    BYTE PTR [rax],al
   14000d847:	add    BYTE PTR [rdx],ch
   14000d849:	fiadd  WORD PTR [rax]
   14000d84b:	add    BYTE PTR [rax],al
   14000d84d:	add    BYTE PTR [rax],al
   14000d84f:	add    BYTE PTR [rdx],bl
   14000d851:	fiadd  WORD PTR [rax]
   14000d853:	add    BYTE PTR [rax],al
   14000d855:	add    BYTE PTR [rax],al
   14000d857:	add    BYTE PTR [rdx],cl
   14000d859:	fiadd  WORD PTR [rax]
   14000d85b:	add    BYTE PTR [rax],al
   14000d85d:	add    BYTE PTR [rax],al
   14000d85f:	add    dh,bh
   14000d861:	fld    QWORD PTR [rax]
   14000d863:	add    BYTE PTR [rax],al
   14000d865:	add    BYTE PTR [rax],al
   14000d867:	add    BYTE PTR [rax+0xe0],bh
   14000d86d:	add    BYTE PTR [rax],al
   14000d86f:	add    BYTE PTR [rdx+0xe0],ch
   14000d875:	add    BYTE PTR [rax],al
   14000d877:	add    BYTE PTR [rax+0xe0],ah
   14000d87d:	add    BYTE PTR [rax],al
   14000d87f:	add    BYTE PTR [rax+0xe0],bl
   14000d885:	add    BYTE PTR [rax],al
   14000d887:	add    BYTE PTR [rax+0xe0],al
   14000d88d:	add    BYTE PTR [rax],al
   14000d88f:	add    ah,dh
   14000d891:	fld    QWORD PTR [rax]
   14000d893:	add    BYTE PTR [rax],al
   14000d895:	add    BYTE PTR [rax],al
   14000d897:	add    BYTE PTR [rsi-0x20],dh
   14000d89a:	add    BYTE PTR [rax],al
   14000d89c:	add    BYTE PTR [rax],al
   14000d89e:	add    BYTE PTR [rax],al
   14000d8a0:	ins    BYTE PTR es:[rdi],dx
   14000d8a1:	loopne 0x14000d8a3
   14000d8a3:	add    BYTE PTR [rax],al
   14000d8a5:	add    BYTE PTR [rax],al
   14000d8a7:	add    BYTE PTR [rax+riz*8+0x0],dl
   14000d8ab:	add    BYTE PTR [rax],al
   14000d8ad:	add    BYTE PTR [rax],al
   14000d8af:	add    BYTE PTR [rax-0x20],cl
   14000d8b2:	add    BYTE PTR [rax],al
   14000d8b4:	add    BYTE PTR [rax],al
   14000d8b6:	add    BYTE PTR [rax],al
   14000d8b8:	xor    al,0xe0
   14000d8ba:	add    BYTE PTR [rax],al
   14000d8bc:	add    BYTE PTR [rax],al
   14000d8be:	add    BYTE PTR [rax],al
   14000d8c0:	es loopne 0x14000d8c3
   14000d8c3:	add    BYTE PTR [rax],al
   14000d8c5:	add    BYTE PTR [rax],al
   14000d8c7:	add    BYTE PTR [rax+riz*8],bl
   14000d8ca:	add    BYTE PTR [rax],al
   14000d8cc:	add    BYTE PTR [rax],al
   14000d8ce:	add    BYTE PTR [rax],al
   14000d8d0:	adc    al,0xe0
   14000d8d2:	add    BYTE PTR [rax],al
   14000d8d4:	add    BYTE PTR [rax],al
   14000d8d6:	add    BYTE PTR [rax],al
   14000d8d8:	or     al,0xe0
   14000d8da:	add    BYTE PTR [rax],al
   14000d8dc:	add    BYTE PTR [rax],al
   14000d8de:	add    BYTE PTR [rax],al
   14000d8e0:	cli    
   14000d8e1:	fild   WORD PTR [rax]
   14000d8e3:	add    BYTE PTR [rax],al
   14000d8e5:	add    BYTE PTR [rax],al
   14000d8e7:	add    dl,ch
   14000d8e9:	fild   WORD PTR [rax]
   14000d8eb:	add    BYTE PTR [rax],al
   14000d8ed:	add    BYTE PTR [rax],al
   14000d8ef:	add    ah,bl
   14000d8f1:	fild   WORD PTR [rax]
   14000d8f3:	add    BYTE PTR [rax],al
   14000d8f5:	add    BYTE PTR [rax],al
   14000d8f7:	add    dh,cl
   14000d8f9:	fild   WORD PTR [rax]
   14000d8fb:	add    BYTE PTR [rax],al
   14000d8fd:	add    BYTE PTR [rax],al
   14000d8ff:	add    dl,al
   14000d901:	fild   WORD PTR [rax]
   14000d903:	add    BYTE PTR [rax],al
   14000d905:	add    BYTE PTR [rax],al
   14000d907:	add    BYTE PTR [rdi+rbx*8+0x0],ah
   14000d90e:	add    BYTE PTR [rax],al
   14000d910:	mov    edi,ds
   14000d912:	add    BYTE PTR [rax],al
   14000d914:	add    BYTE PTR [rax],al
   14000d916:	add    BYTE PTR [rax],al
   14000d918:	outs   dx,BYTE PTR ds:[rsi]
   14000d919:	fild   WORD PTR [rax]
   14000d91b:	add    BYTE PTR [rax],al
   14000d91d:	add    BYTE PTR [rax],al
   14000d91f:	add    BYTE PTR [rsi-0x21],cl
   14000d922:	add    BYTE PTR [rax],al
   14000d924:	add    BYTE PTR [rax],al
   14000d926:	add    BYTE PTR [rax],al
   14000d928:	fild   WORD PTR cs:[rax]
   14000d92b:	add    BYTE PTR [rax],al
   14000d92d:	add    BYTE PTR [rax],al
   14000d92f:	add    BYTE PTR [rdi+rbx*8],ah
   14000d932:	add    BYTE PTR [rax],al
   14000d934:	add    BYTE PTR [rax],al
   14000d936:	add    BYTE PTR [rax],al
   14000d938:	(bad)  
   14000d939:	fild   WORD PTR [rax]
   14000d93b:	add    BYTE PTR [rax],al
   14000d93d:	add    BYTE PTR [rax],al
   14000d93f:	add    al,bh
   14000d941:	fiadd  WORD PTR [rax]
   14000d943:	add    BYTE PTR [rax],al
   14000d945:	add    BYTE PTR [rax],al
   14000d947:	add    BYTE PTR [rsi+rbx*8+0x0],bh
   14000d94b:	add    BYTE PTR [rax],al
   14000d94d:	add    BYTE PTR [rax],al
   14000d94f:	add    dh,ah
   14000d951:	fiadd  WORD PTR [rax]
   14000d953:	add    BYTE PTR [rax],al
   14000d955:	add    BYTE PTR [rax],al
   14000d957:	add    ah,bl
   14000d959:	fiadd  WORD PTR [rax]
   14000d95b:	add    BYTE PTR [rax],al
   14000d95d:	add    BYTE PTR [rax],al
   14000d95f:	add    dl,dl
   14000d961:	fiadd  WORD PTR [rax]
   14000d963:	add    BYTE PTR [rax],al
   14000d965:	add    BYTE PTR [rax],al
   14000d967:	add    dl,cl
   14000d969:	fiadd  WORD PTR [rax]
   14000d96b:	add    BYTE PTR [rax],al
   14000d96d:	add    BYTE PTR [rax],al
   14000d96f:	add    BYTE PTR [rsi+rbx*8+0x0],bh
   14000d976:	add    BYTE PTR [rax],al
   14000d978:	mov    dl,0xde
   14000d97a:	add    BYTE PTR [rax],al
   14000d97c:	add    BYTE PTR [rax],al
   14000d97e:	add    BYTE PTR [rax],al
   14000d980:	mov    dh,bl
   14000d982:	add    BYTE PTR [rax],al
   14000d984:	add    BYTE PTR [rax],al
   14000d986:	add    BYTE PTR [rax],al
   14000d988:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d989:	fiadd  WORD PTR [rax]
   14000d98b:	add    BYTE PTR [rax],al
   14000d98d:	add    BYTE PTR [rax],al
   14000d98f:	add    dh,ch
   14000d991:	fiadd  WORD PTR [rax]
   14000d993:	add    BYTE PTR [rax],al
   14000d995:	add    BYTE PTR [rax],al
   14000d997:	add    BYTE PTR [rax],bh
   14000d999:	in     al,0x0
	...
   14000d9a7:	add    dh,bh
   14000d9a9:	loopne 0x14000d9ab
   14000d9ab:	add    BYTE PTR [rax],al
   14000d9ad:	add    BYTE PTR [rax],al
   14000d9af:	add    dh,ch
   14000d9b1:	loopne 0x14000d9b3
   14000d9b3:	add    BYTE PTR [rax],al
   14000d9b5:	add    BYTE PTR [rax],al
   14000d9b7:	add    BYTE PTR [rdx],dl
   14000d9b9:	loope  0x14000d9bb
	...
   14000d9c7:	add    BYTE PTR [rcx+0x6e6f4300],al
   14000d9cd:	jbe    0x14000da34
   14000d9cf:	jb     0x14000da45
   14000d9d1:	push   rbx
   14000d9d2:	je     0x14000da46
   14000d9d4:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   14000d9db:	jb     0x14000da46
   14000d9dd:	je     0x14000da58
   14000d9df:	rex.R
   14000d9e0:	gs jae 0x14000da46
   14000d9e3:	jb     0x14000da4e
   14000d9e5:	jo     0x14000da5b
   14000d9e7:	outs   dx,DWORD PTR ds:[rsi]
   14000d9e8:	jb     0x14000da3e
   14000d9ea:	outs   dx,DWORD PTR ds:[rsi]
   14000d9eb:	push   rbx
   14000d9ec:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000d9f0:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000d9f8:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   14000d9ff:	add    BYTE PTR [rcx+0x44],al
   14000da02:	push   rsi
   14000da03:	push   r8
   14000da05:	xor    rsi,QWORD PTR [r10]
   14000da08:	cs fs ins BYTE PTR es:[rdi],dx
   14000da0b:	ins    BYTE PTR es:[rdi],dx
   14000da0c:	add    BYTE PTR [rax],al
   14000da0e:	mov    ecx,0x636f4c03
   14000da13:	(bad)  
   14000da14:	ins    BYTE PTR es:[rdi],dx
   14000da15:	rex.RX jb 0x14000da7d
   14000da18:	add    BYTE PTR gs:[rcx+0x6d6e5505],ah
   14000da1f:	(bad)  
   14000da20:	jo     0x14000da78
   14000da22:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   14000da29:	ins    BYTE PTR es:[rdi],dx
   14000da2a:	add    BYTE PTR gs:[rbp+0x0],bh
   14000da2e:	rex.XB ins BYTE PTR es:[rdi],dx
   14000da30:	outs   dx,DWORD PTR ds:[rsi]
   14000da31:	jae    0x14000da98
   14000da33:	rex.W (bad) 
   14000da35:	outs   dx,BYTE PTR ds:[rsi]
   14000da36:	fs ins BYTE PTR es:[rdi],dx
   14000da38:	gs add al,al
   14000da3b:	add    BYTE PTR [rbx+0x72],al
   14000da3e:	gs (bad) 
   14000da40:	je     0x14000daa7
   14000da42:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4300bd00
   14000da4b:	jb     0x14000dab2
   14000da4d:	(bad)  
   14000da4e:	je     0x14000dab5
   14000da50:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   14000da59:	outs   dx,BYTE PTR ds:[rsi]
   14000da5a:	addr32 push rdi
   14000da5c:	add    BYTE PTR [rax],al
   14000da5e:	enter  0x4d03,0x61
   14000da62:	jo     0x14000daba
   14000da64:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   14000da6b:	ins    BYTE PTR es:[rdi],dx
   14000da6c:	gs rex.RB js 0x14000da70
   14000da70:	adc    al,BYTE PTR [rbx]
   14000da72:	rex.RXB
   14000da73:	gs je  0x14000dacc
   14000da76:	gs jb  0x14000daec
   14000da79:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   14000da80:	or     al,0x3
   14000da82:	rex.RXB
   14000da83:	gs je  0x14000dadb
   14000da86:	jae    0x14000daed
   14000da88:	jb     0x14000dace
   14000da8a:	gs data16 (bad) 
   14000da8d:	jne    0x14000dafb
   14000da8f:	je     0x14000dae6
   14000da91:	rex.WB
   14000da92:	rex.WR (bad) 
   14000da94:	outs   dx,BYTE PTR ds:[rsi]
   14000da95:	addr32 jne 0x14000daf9
   14000da98:	add    BYTE PTR gs:[eax],al
   14000da9c:	or     al,BYTE PTR [rdx]
   14000da9e:	rex.RXB
   14000da9f:	gs je  0x14000dae5
   14000daa2:	jne    0x14000db16
   14000daa4:	jb     0x14000db0b
   14000daa6:	outs   dx,BYTE PTR ds:[rsi]
   14000daa7:	je     0x14000daed
   14000daa9:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   14000dab0:	jns    0x14000db09
   14000dab2:	add    BYTE PTR [rax],al
   14000dab4:	xchg   ecx,eax
   14000dab5:	add    BYTE PTR [rbx+0x6f],al
   14000dab8:	ins    DWORD PTR es:[rdi],dx
   14000dab9:	jo     0x14000db1c
   14000dabb:	jb     0x14000db22
   14000dabd:	push   rbx
   14000dabe:	je     0x14000db32
   14000dac0:	imul   ebp,DWORD PTR [rsi+0x67],0x43000057
   14000dac7:	add    al,BYTE PTR [rdi+0x65]
   14000daca:	je     0x14000db12
   14000dacc:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14000dad4:	cmp    al,0x3
   14000dad6:	rex.W
   14000dad7:	gs (bad) 
   14000dad9:	jo     0x14000db1c
   14000dadb:	ins    BYTE PTR es:[rdi],dx
   14000dadc:	ins    BYTE PTR es:[rdi],dx
   14000dadd:	outs   dx,DWORD PTR ds:[rsi]
   14000dade:	movsxd eax,DWORD PTR [rax]
   14000dae0:	stos   DWORD PTR es:[rdi],eax
   14000dae1:	add    al,BYTE PTR [rdi+0x65]
   14000dae4:	je     0x14000db36
   14000dae6:	jb     0x14000db57
   14000dae8:	movsxd esp,DWORD PTR [rbp+0x73]
   14000daeb:	jae    0x14000db35
   14000daed:	gs (bad) 
   14000daef:	jo     0x14000daf1
   14000daf1:	add    BYTE PTR [rbx+0x3],al
   14000daf4:	rex.W
   14000daf5:	gs (bad) 
   14000daf7:	jo     0x14000db4b
   14000daf9:	gs rex.B ins BYTE PTR es:[rdi],dx
   14000dafc:	ins    BYTE PTR es:[rdi],dx
   14000dafd:	outs   dx,DWORD PTR ds:[rsi]
   14000dafe:	movsxd eax,DWORD PTR [rax]
   14000db00:	rex add ecx,DWORD PTR [rax+0x65]
   14000db04:	(bad)  
   14000db05:	jo     0x14000db4d
   14000db07:	jb     0x14000db6e
   14000db09:	add    BYTE PTR gs:[rax],al
   14000db0c:	out    0x0,al
   14000db0e:	rex.XB jb 0x14000db76
   14000db11:	(bad)  
   14000db12:	je     0x14000db79
   14000db14:	push   rsp
   14000db15:	push   0x64616572
   14000db1a:	add    BYTE PTR [rax],al
   14000db1c:	jne    0x14000db23
   14000db1e:	push   rbx
   14000db1f:	jne    0x14000db94
   14000db21:	jo     0x14000db88
   14000db23:	outs   dx,BYTE PTR ds:[rsi]
   14000db24:	fs push rsp
   14000db26:	push   0x64616572
   14000db2b:	add    BYTE PTR [rbp+0x73655204],dh
   14000db31:	jne    0x14000dba0
   14000db33:	gs push rsp
   14000db35:	push   0x64616572
   14000db3a:	add    BYTE PTR [rax],al
   14000db3c:	xor    eax,0x74654702
   14000db41:	rex.RB js 0x14000dbad
   14000db44:	je     0x14000db89
   14000db46:	outs   dx,DWORD PTR ds:[rsi]
   14000db47:	fs gs push rsp
   14000db4a:	push   0x64616572
   14000db4f:	add    al,bl
   14000db51:	add    ecx,DWORD PTR [rbp+0x75]
   14000db54:	ins    BYTE PTR es:[rdi],dx
   14000db55:	je     0x14000dbc0
   14000db57:	rex.X jns 0x14000dbce
   14000db5a:	gs push rsp
   14000db5c:	outs   dx,DWORD PTR ds:[rsi]
   14000db5d:	push   rdi
   14000db5e:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000db66:	scas   eax,DWORD PTR es:[rdi]
   14000db67:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000db6b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14000db74:	add    BYTE PTR [rax],al
   14000db76:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000db77:	add    al,BYTE PTR [rdi+0x65]
   14000db7a:	je     0x14000dbcc
   14000db7c:	jb     0x14000dbed
   14000db7e:	movsxd eax,DWORD PTR [rcx+0x64]
   14000db81:	fs jb  0x14000dbe9
   14000db84:	jae    0x14000dbf9
   14000db86:	add    BYTE PTR [rax],al
   14000db88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000db89:	add    DWORD PTR [rsi+0x72],eax
   14000db8c:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000db96:	push   0x2
   14000db98:	rex.RXB
   14000db99:	gs je  0x14000dbe9
   14000db9c:	outs   dx,DWORD PTR ds:[rsi]
   14000db9d:	fs jne 0x14000dc0c
   14000dba0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000dbaa:	add    BYTE PTR [rax],al
   14000dbac:	mov    es,WORD PTR [rcx]
   14000dbae:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x6f736552
   14000dbb6:	jne    0x14000dc2a
   14000dbb8:	movsxd esp,DWORD PTR [rbp+0x45]
   14000dbbb:	js     0x14000dc14
   14000dbbd:	add    BYTE PTR [rdx+0x616f4c03],dh
   14000dbc3:	fs push rdx
   14000dbc5:	gs jae 0x14000dc37
   14000dbc8:	jne    0x14000dc3c
   14000dbca:	movsxd esp,DWORD PTR [rbp+0x0]
   14000dbcd:	add    ah,al
   14000dbcf:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14000dbd3:	imul   edx,DWORD PTR [rdx+0x65],0x73
   14000dbd7:	outs   dx,DWORD PTR ds:[rsi]
   14000dbd8:	jne    0x14000dc4c
   14000dbda:	movsxd esp,DWORD PTR [rbp+0x0]
   14000dbdd:	add    BYTE PTR [rbx+0x45],cl
   14000dbe0:	push   rdx
   14000dbe1:	rex.WRX
   14000dbe2:	rex.RB
   14000dbe3:	xor    r14,QWORD PTR [rdx]
   14000dbe6:	cs fs ins BYTE PTR es:[rdi],dx
   14000dbe9:	ins    BYTE PTR es:[rdi],dx
   14000dbea:	add    BYTE PTR [rax],al
   14000dbec:	mov    bl,0x0
   14000dbee:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f42676f
   14000dbf6:	js     0x14000dc48
   14000dbf8:	(bad)  
   14000dbf9:	jb     0x14000dc5c
   14000dbfb:	ins    DWORD PTR es:[rdi],dx
   14000dbfc:	push   rdi
   14000dbfd:	add    BYTE PTR [rbx],bh
   14000dbff:	add    DWORD PTR [rdi+0x65],eax
   14000dc02:	je     0x14000dc48
   14000dc04:	gs jae 0x14000dc72
   14000dc07:	je     0x14000dc78
   14000dc09:	jo     0x14000dc62
   14000dc0b:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000dc12:	fld    DWORD PTR [rdx]
   14000dc14:	push   rbx
   14000dc15:	outs   dx,BYTE PTR gs:[rsi]
   14000dc17:	fs rex.R ins BYTE PTR es:[rdi],dx
   14000dc1a:	addr32 rex.WB je 0x14000dc83
   14000dc1e:	ins    DWORD PTR es:[rdi],dx
   14000dc1f:	rex.WRB
   14000dc20:	gs jae 0x14000dc96
   14000dc23:	(bad)  
   14000dc24:	addr32 gs push rdi
   14000dc27:	add    cl,ch
   14000dc29:	add    BYTE PTR [rbp+0x6e],al
   14000dc2c:	imul   r12d,DWORD PTR fs:[rcx+0x6c],0x2200676f
   14000dc35:	add    cl,BYTE PTR [rcx+0x73]
   14000dc38:	push   rdi
   14000dc39:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000dc40:	cli    
   14000dc41:	add    dl,BYTE PTR [rbx+0x65]
   14000dc44:	je     0x14000dc8a
   14000dc46:	ins    BYTE PTR es:[rdi],dx
   14000dc47:	addr32 rex.WB je 0x14000dcb0
   14000dc4b:	ins    DWORD PTR es:[rdi],dx
   14000dc4c:	push   rsp
   14000dc4d:	gs js  0x14000dcc4
   14000dc50:	push   rdi
   14000dc51:	add    BYTE PTR [rbx],cl
   14000dc53:	add    DWORD PTR [rsi+0x69],eax
   14000dc56:	outs   dx,BYTE PTR ds:[rsi]
   14000dc57:	fs push rdi
   14000dc59:	imul   ebp,DWORD PTR [rsi+0x64],0x57776f
   14000dc60:	inc    BYTE PTR [rdx]
   14000dc62:	push   rbx
   14000dc63:	gs je  0x14000dcac
   14000dc66:	outs   dx,DWORD PTR ds:[rsi]
   14000dc67:	jb     0x14000dcce
   14000dc69:	addr32 jb 0x14000dcdb
   14000dc6c:	jne    0x14000dcdc
   14000dc6e:	fs push rdi
   14000dc70:	imul   ebp,DWORD PTR [rsi+0x64],0x1300776f
   14000dc77:	add    cl,BYTE PTR [rcx+0x73]
   14000dc7a:	movsxd rbp,DWORD PTR [r15+0x6e]
   14000dc7e:	imul   esp,DWORD PTR [rbx+0x0],0x53034c00
   14000dc85:	push   0x6957776f
   14000dc8a:	outs   dx,BYTE PTR ds:[rsi]
   14000dc8b:	outs   dx,DWORD PTR fs:[rsi]
   14000dc8d:	ja     0x14000dc8f
   14000dc8f:	add    BYTE PTR [rax+0x2],ah
   14000dc92:	rex.WRB
   14000dc93:	gs jae 0x14000dd09
   14000dc96:	(bad)  
   14000dc97:	rex.X outs dx,DWORD PTR gs:[esi]
   14000dc9b:	js     0x14000dcf4
   14000dc9d:	add    ch,bh
   14000dc9f:	add    dl,BYTE PTR [rbx+0x65]
   14000dca2:	je     0x14000dcea
   14000dca4:	outs   dx,DWORD PTR ds:[rsi]
   14000dca5:	movsxd esi,DWORD PTR [rbp+0x73]
   14000dca8:	add    BYTE PTR [rax],al
   14000dcaa:	rex add DWORD PTR [rdi+0x65],eax
   14000dcae:	je     0x14000dcf4
   14000dcb0:	ins    BYTE PTR es:[rdi],dx
   14000dcb1:	addr32 rex.WB je 0x14000dd1a
   14000dcb5:	ins    DWORD PTR es:[rdi],dx
   14000dcb6:	add    BYTE PTR [rax],al
   14000dcb8:	jg     0x14000dcbb
   14000dcba:	rex.RXB
   14000dcbb:	gs je  0x14000dd0e
   14000dcbe:	(bad)  
   14000dcbf:	jb     0x14000dd26
   14000dcc1:	outs   dx,BYTE PTR ds:[rsi]
   14000dcc2:	je     0x14000dcc4
   14000dcc4:	retf   0x4701
   14000dcc7:	gs je  0x14000dd21
   14000dcca:	imul   ebp,DWORD PTR [rsi+0x64],0x6e49776f
   14000dcd1:	outs   dx,WORD PTR ds:[rsi]
   14000dcd3:	add    BYTE PTR [rdi],ah
   14000dcd5:	add    DWORD PTR [rdi+0x65],eax
   14000dcd8:	je     0x14000dd1d
   14000dcda:	ins    BYTE PTR es:[rdi],dx
   14000dcdb:	(bad)  
   14000dcdc:	jae    0x14000dd51
   14000dcde:	rex.WRX (bad) 
   14000dce0:	ins    DWORD PTR es:[rdi],dx
   14000dce1:	gs push rdi
   14000dce3:	add    BYTE PTR [rdi],bh
   14000dce5:	add    DWORD PTR [rdi+0x65],eax
   14000dce8:	je     0x14000dd2e
   14000dcea:	ins    BYTE PTR es:[rdi],dx
   14000dceb:	addr32 rex.XB je 0x14000dd61
   14000dcef:	ins    BYTE PTR es:[rdi],dx
   14000dcf0:	rex.WB
   14000dcf1:	add    BYTE PTR [rax],r8b
   14000dcf4:	int    0x1
   14000dcf6:	rex.RXB
   14000dcf7:	gs je  0x14000dd51
   14000dcfa:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14000dd01:	outs   dx,BYTE PTR ds:[rsi]
   14000dd02:	addr32 push rax
   14000dd04:	je     0x14000dd78
   14000dd06:	push   rdi
   14000dd07:	add    BYTE PTR [rax],bh
   14000dd09:	add    edx,DWORD PTR [rbx+0x65]
   14000dd0c:	je     0x14000dd65
   14000dd0e:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14000dd15:	outs   dx,BYTE PTR ds:[rsi]
   14000dd16:	addr32 push rax
   14000dd18:	je     0x14000dd8c
   14000dd1a:	push   rdi
   14000dd1b:	add    BYTE PTR [rsi],bl
   14000dd1d:	add    BYTE PTR [rbx+0x61],al
   14000dd20:	ins    BYTE PTR es:[rdi],dx
   14000dd21:	ins    BYTE PTR es:[rdi],dx
   14000dd22:	push   rdi
   14000dd23:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   14000dd2a:	outs   dx,DWORD PTR ds:[rsi]
   14000dd2b:	movsxd edx,DWORD PTR [rdi+0x0]
   14000dd2e:	out    dx,al
   14000dd2f:	add    BYTE PTR [rbp+0x6e],al
   14000dd32:	jne    0x14000dda1
   14000dd34:	rex.XB push 0x57646c69
   14000dd3a:	imul   ebp,DWORD PTR [rsi+0x64],0x73776f
   14000dd41:	add    dl,ah
   14000dd43:	add    dl,BYTE PTR [rbx+0x65]
   14000dd46:	outs   dx,BYTE PTR ds:[rsi]
   14000dd47:	fs rex.WRB
   14000dd49:	gs jae 0x14000ddbf
   14000dd4c:	(bad)  
   14000dd4d:	addr32 gs push rdi
   14000dd50:	add    BYTE PTR [rax],al
   14000dd52:	sub    DWORD PTR [rcx],eax
   14000dd54:	rex.RXB
   14000dd55:	gs je  0x14000dd9b
   14000dd58:	ins    BYTE PTR es:[rdi],dx
   14000dd59:	imul   esp,DWORD PTR [rbp+0x6e],0x63655274
   14000dd60:	je     0x14000dd62
   14000dd62:	cmp    eax,DWORD PTR [rbx]
   14000dd64:	push   rbx
   14000dd65:	gs je  0x14000ddbf
   14000dd68:	imul   ebp,DWORD PTR [rsi+0x64],0x6f50776f
   14000dd6f:	jae    0x14000dd71
   14000dd71:	add    BYTE PTR [rbx+0x736f5002],al
   14000dd77:	je     0x14000ddc6
   14000dd79:	gs jae 0x14000ddef
   14000dd7c:	(bad)  
   14000dd7d:	addr32 gs push rdi
   14000dd80:	add    BYTE PTR [rax],al
   14000dd82:	xor    al,0x2
   14000dd84:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000dd86:	(bad)  
   14000dd87:	fs rex.XB jne 0x14000ddfd
   14000dd8b:	jae    0x14000ddfc
   14000dd8d:	jb     0x14000dde6
   14000dd8f:	add    bl,ch
   14000dd91:	add    dl,BYTE PTR [rbx+0x65]
   14000dd94:	je     0x14000ddd9
   14000dd96:	ins    BYTE PTR es:[rdi],dx
   14000dd97:	(bad)  
   14000dd98:	jae    0x14000de0d
   14000dd9a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000dd9c:	outs   dx,BYTE PTR ds:[rsi]
   14000dd9d:	addr32 push rax
   14000dd9f:	je     0x14000de13
   14000dda1:	push   rdi
   14000dda2:	add    BYTE PTR [rax],al
   14000dda4:	jg     0x14000dda8
   14000dda6:	push   rax
   14000dda7:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   14000ddad:	jae    0x14000de10
   14000ddaf:	addr32 gs push rdi
   14000ddb2:	add    BYTE PTR [rax],al
   14000ddb4:	mov    dh,0x0
   14000ddb6:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000ddbe:	rex.WRB
   14000ddbf:	gs jae 0x14000de35
   14000ddc2:	(bad)  
   14000ddc3:	addr32 gs push rdi
   14000ddc6:	add    BYTE PTR [rax],al
   14000ddc8:	rex add edx,DWORD PTR [rbx+0x65]
   14000ddcc:	je     0x14000de25
   14000ddce:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   14000ddd5:	js     0x14000de4b
   14000ddd7:	push   rdi
   14000ddd8:	add    BYTE PTR [rax],al
   14000ddda:	mov    BYTE PTR [rcx],0x47
   14000dddd:	gs je  0x14000de37
   14000dde0:	imul   ebp,DWORD PTR [rsi+0x64],0x4344776f
   14000dde7:	add    BYTE PTR [rbp+0x53],dl
   14000ddea:	rex.RB push r10
   14000ddec:	xor    esi,DWORD PTR [rdx]
   14000ddee:	cs fs ins BYTE PTR es:[rdi],dx
   14000ddf1:	ins    BYTE PTR es:[rdi],dx
   14000ddf2:	add    BYTE PTR [rax],al
   14000ddf4:	xchg   esp,eax
   14000ddf5:	add    al,0x6d
   14000ddf7:	gs ins DWORD PTR es:[rdi],dx
   14000ddf9:	ins    DWORD PTR es:[rdi],dx
   14000ddfa:	outs   dx,DWORD PTR ds:[rsi]
   14000ddfb:	jbe    0x14000de62
   14000ddfd:	add    BYTE PTR [rsi+0x75705f02],bl
   14000de03:	jb     0x14000de6a
   14000de05:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000de08:	ins    BYTE PTR es:[rdi],dx
   14000de09:	add    BYTE PTR [rax+rax*1],dl
   14000de0c:	(bad)  
   14000de0d:	(bad)  
   14000de0e:	xor    eax,DWORD PTR [rax+0x59]
   14000de11:	pop    r8
   14000de13:	push   rax
   14000de14:	rex.RB
   14000de15:	pop    r8
   14000de17:	rex pop rdx
   14000de19:	add    BYTE PTR [rbx+0x3],ch
   14000de1c:	pop    rdi
   14000de1d:	jbe    0x14000de92
   14000de1f:	outs   dx,BYTE PTR ds:[rsi]
   14000de20:	ja     0x14000de92
   14000de22:	jb     0x14000de8d
   14000de24:	outs   dx,BYTE PTR ds:[rsi]
   14000de25:	je     0x14000de8d
   14000de27:	pop    rdi
   14000de28:	jae    0x14000de2a
   14000de2a:	or     eax,0x73637705
   14000de2f:	outs   dx,BYTE PTR ds:[rsi]
   14000de30:	movsxd esi,DWORD PTR [rax+0x79]
   14000de33:	pop    rdi
   14000de34:	jae    0x14000de36
   14000de36:	and    eax,DWORD PTR [rax]
   14000de38:	(bad)  
   14000de39:	(bad)  
   14000de3a:	pop    rdi
   14000de3b:	push   rsi
   14000de3c:	rex pop rcx
   14000de3e:	pop    r8
   14000de40:	push   rax
   14000de41:	rex.RB
   14000de42:	pop    r8
   14000de44:	rex pop rdx
   14000de46:	add    BYTE PTR [rax],al
   14000de48:	or     al,BYTE PTR [rip+0x6e736377]        # 0x1ae7441c5
   14000de4e:	movsxd esp,DWORD PTR [rcx+0x74]
   14000de51:	pop    rdi
   14000de52:	jae    0x14000de54
   14000de54:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a37441d1
   14000de5a:	push   0x10000072
   14000de5f:	add    eax,0x72736377
   14000de64:	movsxd ebp,DWORD PTR [rax+0x72]
   14000de67:	add    BYTE PTR [rcx],bh
   14000de69:	add    al,0x66
   14000de6b:	data16 ins BYTE PTR es:[rdi],dx
   14000de6d:	jne    0x14000dee2
   14000de6f:	push   0x4360000
   14000de74:	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
   14000de79:	add    BYTE PTR gs:[rax],al
   14000de7c:	(bad)
   14000de80:	outs   dx,WORD PTR ds:[rsi]
   14000de82:	jo     0x14000dee9
   14000de84:	outs   dx,BYTE PTR ds:[rsi]
   14000de85:	pop    rdi
   14000de86:	jae    0x14000de88
   14000de88:	rex.WXB add al,0x66
   14000de8b:	jb     0x14000def2
   14000de8d:	(bad)  
   14000de8e:	add    BYTE PTR fs:[rax],bh
   14000de91:	add    al,0x66
   14000de93:	gs jb  0x14000df08
   14000de96:	outs   dx,DWORD PTR ds:[rsi]
   14000de97:	jb     0x14000de99
   14000de99:	add    BYTE PTR [rdi+0x4],dl
   14000de9c:	data16 ja 0x14000df11
   14000de9f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x5f03fb00
   14000dea7:	ja     0x14000df1c
   14000dea9:	je     0x14000df1d
   14000deab:	fs (bad) 
   14000dead:	je     0x14000df14
   14000deaf:	pop    rdi
   14000deb0:	jae    0x14000deb2
   14000deb2:	rex.WX add al,0x66
   14000deb5:	jo     0x14000df2c
   14000deb7:	je     0x14000df30
   14000deb9:	jae    0x14000debb
   14000debb:	add    ch,bh
   14000debd:	add    ebx,DWORD PTR [rdi+0x77]
   14000dec0:	jae    0x14000df36
   14000dec2:	jb     0x14000df38
   14000dec4:	imul   ebp,DWORD PTR [rbp+0x65],0x4c00735f
   14000decb:	add    al,0x66
   14000decd:	jb     0x14000df34
   14000decf:	add    BYTE PTR gs:[rax],al
   14000ded2:	data16 add al,0x69
   14000ded5:	jae    0x14000df3b
   14000ded7:	imul   esp,DWORD PTR [rdi+0x69],0x4640074
   14000dede:	imul   esi,DWORD PTR [rbx+0x61],0x6168706c
   14000dee5:	add    BYTE PTR [rax],ah
   14000dee7:	add    al,0x61
   14000dee9:	je     0x14000df5a
   14000deeb:	imul   eax,DWORD PTR [rax],0x6d048600
   14000def1:	(bad)  
   14000def2:	ins    BYTE PTR es:[rdi],dx
   14000def3:	ins    BYTE PTR es:[rdi],dx
   14000def4:	outs   dx,DWORD PTR ds:[rsi]
   14000def5:	movsxd eax,DWORD PTR [rax]
   14000def7:	add    BYTE PTR [rbx+0x0],cl
   14000defa:	pop    rdi
   14000defb:	rex.XB js 0x14000df76
   14000defe:	push   rsp
   14000deff:	push   0x45776f72
   14000df04:	js     0x14000df69
   14000df06:	gs jo  0x14000df7d
   14000df09:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14000df10:	pop    rdi
   14000df11:	pop    rdi
   14000df12:	rex.XB js 0x14000df8d
   14000df15:	rex.RX jb 0x14000df79
   14000df18:	ins    DWORD PTR es:[rdi],dx
   14000df19:	gs rex.W (bad) 
   14000df1c:	outs   dx,BYTE PTR ds:[rsi]
   14000df1d:	fs ins BYTE PTR es:[rdi],dx
   14000df1f:	gs jb  0x14000df55
   14000df22:	add    BYTE PTR [rax],al
   14000df24:	xchg   edx,eax
   14000df25:	add    al,0x6d
   14000df27:	gs ins DWORD PTR es:[rdi],dx
   14000df29:	movsxd esi,DWORD PTR [rax+0x79]
   14000df2c:	add    BYTE PTR [rax],al
   14000df2e:	or     al,BYTE PTR [rax]
   14000df30:	(bad)  
   14000df31:	(bad)  
   14000df32:	xor    BYTE PTR [rbp+0x78],ah
   14000df35:	movsxd esp,DWORD PTR [rbp+0x70]
   14000df38:	je     0x14000dfa3
   14000df3a:	outs   dx,DWORD PTR ds:[rsi]
   14000df3b:	outs   dx,BYTE PTR ds:[rsi]
   14000df3c:	rex
   14000df3d:	rex push rcx
   14000df3f:	rex.RB
   14000df40:	rex.B
   14000df41:	rex.B
   14000df42:	rex
   14000df43:	rex.B
   14000df44:	rex.RB
   14000df45:	rex.X push rcx
   14000df47:	rex.RB
   14000df48:	rex.X
   14000df49:	rex.R
   14000df4a:	rex pop rdx
   14000df4c:	add    BYTE PTR [rax],al
   14000df4e:	or     eax,DWORD PTR [rax]
   14000df50:	(bad)  
   14000df51:	(bad)  
   14000df52:	xor    BYTE PTR [rbp+0x78],ah
   14000df55:	movsxd esp,DWORD PTR [rbp+0x70]
   14000df58:	je     0x14000dfc3
   14000df5a:	outs   dx,DWORD PTR ds:[rsi]
   14000df5b:	outs   dx,BYTE PTR ds:[rsi]
   14000df5c:	rex
   14000df5d:	rex push rcx
   14000df5f:	rex.RB
   14000df60:	rex.B
   14000df61:	rex.B
   14000df62:	rex
   14000df63:	rex.B
   14000df64:	rex.RB
   14000df65:	rex.X push rcx
   14000df67:	rex.RB
   14000df68:	rex.X
   14000df69:	rex.R
   14000df6a:	rex.W
   14000df6b:	rex pop rdx
   14000df6d:	add    BYTE PTR [rax+rax*1],cl
   14000df70:	(bad)  
   14000df71:	(bad)  
   14000df72:	xor    BYTE PTR [rbp+0x78],ah
   14000df75:	movsxd esp,DWORD PTR [rbp+0x70]
   14000df78:	je     0x14000dfe3
   14000df7a:	outs   dx,DWORD PTR ds:[rsi]
   14000df7b:	outs   dx,BYTE PTR ds:[rsi]
   14000df7c:	rex
   14000df7d:	rex push rcx
   14000df7f:	rex.RB
   14000df80:	rex.B
   14000df81:	rex.B
   14000df82:	rex
   14000df83:	rex.B
   14000df84:	rex.RB
   14000df85:	rex.X push rsi
   14000df87:	xor    BYTE PTR [rax+0x40],al
   14000df8a:	pop    rdx
   14000df8b:	add    BYTE PTR [rcx],dl
   14000df8d:	add    BYTE PTR [rdi],bh
   14000df8f:	(bad)  
   14000df90:	xor    DWORD PTR [rbp+0x78],esp
   14000df93:	movsxd esp,DWORD PTR [rbp+0x70]
   14000df96:	je     0x14000e001
   14000df98:	outs   dx,DWORD PTR ds:[rsi]
   14000df99:	outs   dx,BYTE PTR ds:[rsi]
   14000df9a:	rex
   14000df9b:	rex push rbp
   14000df9d:	rex.RB
   14000df9e:	rex.B
   14000df9f:	rex.B
   14000dfa0:	rex pop rax
   14000dfa2:	pop    rdx
   14000dfa3:	add    BYTE PTR [rcx],dh
   14000dfa5:	add    BYTE PTR [rdi],bh
   14000dfa7:	ja     0x14000e011
   14000dfa9:	(bad)  
   14000dfaa:	je     0x14000dfec
   14000dfac:	gs js  0x14000e012
   14000dfaf:	gs jo  0x14000e026
   14000dfb2:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000dfb9:	rex.X
   14000dfba:	push   r8
   14000dfbc:	rex.RB
   14000dfbd:	rex.X
   14000dfbe:	rex.R pop rax
   14000dfc0:	pop    rdx
   14000dfc1:	add    BYTE PTR [rdi+0x61635f00],bh
   14000dfc7:	ins    BYTE PTR es:[rdi],dx
   14000dfc8:	ins    BYTE PTR es:[rdi],dx
   14000dfc9:	outs   dx,BYTE PTR ds:[rsi]
   14000dfca:	gs ja  0x14000e035
   14000dfcd:	add    BYTE PTR [rbp+0x0],dl
   14000dfd0:	pop    rdi
   14000dfd1:	pop    rax
   14000dfd2:	movsxd esi,DWORD PTR [rax+0x74]
   14000dfd5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000dfde:	pop    rdi
   14000dfdf:	(bad)  
   14000dfe0:	ins    DWORD PTR es:[rdi],dx
   14000dfe1:	jae    0x14000e04a
   14000dfe3:	pop    rdi
   14000dfe4:	gs js  0x14000e050
   14000dfe7:	je     0x14000dfe9
   14000dfe9:	add    BYTE PTR [rdi+0x0],bh
   14000dfec:	pop    rdi
   14000dfed:	pop    rdi
   14000dfee:	addr32 gs je 0x14000e05f
   14000dff2:	(bad)  
   14000dff3:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000dffa:	mov    es,WORD PTR [rax]
   14000dffc:	pop    rdi
   14000dffd:	pop    rdi
   14000dffe:	jae    0x14000e065
   14000e000:	je     0x14000e061
   14000e002:	(bad)  
   14000e003:	jo     0x14000e075
   14000e005:	pop    rdi
   14000e006:	je     0x14000e081
   14000e008:	jo     0x14000e06f
   14000e00a:	add    BYTE PTR [rax],al
   14000e00c:	xor    al,BYTE PTR [riz*2+0x746978]
   14000e013:	add    BYTE PTR [rsi],cl
   14000e015:	add    DWORD PTR [rdi+0x65],ebx
   14000e018:	js     0x14000e083
   14000e01a:	je     0x14000e01c
   14000e01c:	rol    DWORD PTR [rax],0x5f
   14000e01f:	movsxd esp,DWORD PTR [rbp+0x78]
   14000e022:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   14000e02a:	jae    0x14000e099
   14000e02c:	(bad)
   14000e031:	add    BYTE PTR fs:[rax],al
   14000e034:	nop
   14000e035:	add    BYTE PTR [rdi+0x5f],bl
   14000e038:	jae    0x14000e09f
   14000e03a:	je     0x14000e0b1
   14000e03c:	jae    0x14000e0a3
   14000e03e:	jb     0x14000e0ad
   14000e040:	(bad)  
   14000e041:	je     0x14000e0ab
   14000e043:	gs jb  0x14000e0b8
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	jge    0x14000e04b
   14000e04a:	pop    rdi
   14000e04b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000e052:	ins    DWORD PTR es:[rdi],dx
   14000e053:	add    BYTE PTR [rdi+0x0],dl
   14000e056:	pop    rdi
   14000e057:	pop    rdi
   14000e058:	rex.XB pop r15
   14000e05a:	jae    0x14000e0cc
   14000e05c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000e060:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000e067:	ins    BYTE PTR es:[rdi],dx
   14000e068:	gs jb  0x14000e06b
   14000e06b:	add    BYTE PTR [rdx+0x63615f00],ah
   14000e071:	ins    DWORD PTR es:[rdi],dx
   14000e072:	fs ins BYTE PTR es:[rdi],dx
   14000e074:	outs   dx,BYTE PTR ds:[rsi]
   14000e075:	add    BYTE PTR [rdi],ah
   14000e077:	add    DWORD PTR [rdi+0x66],ebx
   14000e07a:	ins    DWORD PTR es:[rdi],dx
   14000e07b:	outs   dx,DWORD PTR ds:[rsi]
   14000e07c:	fs add BYTE PTR gs:[rax],al
   14000e080:	rol    BYTE PTR [rax],cl
   14000e082:	pop    rdi
   14000e083:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e086:	ins    DWORD PTR es:[rdi],dx
   14000e087:	outs   dx,DWORD PTR ds:[rsi]
   14000e088:	fs add BYTE PTR gs:[rax],al
   14000e08c:	ins    DWORD PTR es:[rdi],dx
   14000e08d:	jae    0x14000e105
   14000e08f:	movsxd esi,DWORD PTR [rdx+0x74]
   14000e092:	cs fs ins BYTE PTR es:[rdi],dx
   14000e095:	ins    BYTE PTR es:[rdi],dx
   14000e096:	add    BYTE PTR [rax],al
   14000e098:	out    0x1,al
   14000e09a:	pop    rdi
   14000e09b:	ins    BYTE PTR es:[rdi],dx
   14000e09c:	outs   dx,DWORD PTR ds:[rsi]
   14000e09d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000e0a0:	add    ebx,DWORD PTR [r15+0x75]
   14000e0a4:	outs   dx,BYTE PTR ds:[rsi]
   14000e0a5:	ins    BYTE PTR es:[rdi],dx
   14000e0a6:	outs   dx,DWORD PTR ds:[rsi]
   14000e0a7:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000e0aa:	jnp    0x14000e0ac
   14000e0ac:	pop    rdi
   14000e0ad:	pop    rdi
   14000e0ae:	fs ins BYTE PTR es:[rdi],dx
   14000e0b0:	ins    BYTE PTR es:[rdi],dx
   14000e0b1:	outs   dx,DWORD PTR ds:[rsi]
   14000e0b2:	outs   dx,BYTE PTR ds:[rsi]
   14000e0b3:	gs js  0x14000e11f
   14000e0b6:	je     0x14000e0b8
   14000e0b8:	nop
   14000e0b9:	add    bl,BYTE PTR [rdi+0x6f]
   14000e0bc:	outs   dx,BYTE PTR ds:[rsi]
   14000e0bd:	gs js  0x14000e129
   14000e0c0:	je     0x14000e0c2
   14000e0c2:	adc    al,BYTE PTR [rax]
   14000e0c4:	(bad)  
   14000e0c5:	(bad)  
   14000e0c6:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000e0ca:	gs pop rdi
   14000e0cc:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000e0d3:	rex.RB
   14000e0d4:	rex.B
   14000e0d5:	rex.B
   14000e0d6:	rex pop rax
   14000e0d8:	pop    rdx
   14000e0d9:	add    BYTE PTR [rdi],ch
   14000e0db:	add    BYTE PTR [rdi],bh
   14000e0dd:	je     0x14000e144
   14000e0df:	jb     0x14000e14e
   14000e0e1:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000e0e8:	pop    rcx
   14000e0e9:	pop    r8
   14000e0eb:	pop    rax
   14000e0ec:	pop    rdx
   14000e0ed:	add    BYTE PTR [rax+0x0],ah
   14000e0f0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e0f2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e0f4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000e0fc:	add    BYTE PTR [rax],al
   14000e0fe:	sub    eax,DWORD PTR [rax]
   14000e100:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e102:	rex.XB jb 0x14000e16a
   14000e105:	(bad)  
   14000e106:	je     0x14000e16d
   14000e108:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e10a:	jae    0x14000e180
   14000e10c:	(bad)  
   14000e10d:	outs   dx,BYTE PTR ds:[rsi]
   14000e10e:	movsxd esp,DWORD PTR [rbp+0x0]
   14000e111:	add    BYTE PTR [rax+0x556f4300],dl
   14000e117:	outs   dx,BYTE PTR ds:[rsi]
   14000e118:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000e11f:	imul   edi,DWORD PTR [rdx+0x65],0x6c6f0000
   14000e126:	xor    esi,DWORD PTR gs:[rdx]
   14000e129:	cs fs ins BYTE PTR es:[rdi],dx
   14000e12c:	ins    BYTE PTR es:[rdi],dx
   14000e12d:	add    BYTE PTR [rax],ch
   14000e12f:	add    BYTE PTR [rdx+rsi*2+0x61],al
   14000e133:	addr32 push rcx
   14000e135:	jne    0x14000e19c
   14000e137:	jb     0x14000e1b2
   14000e139:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x230000
   14000e142:	rex.R jb 0x14000e1a6
   14000e145:	movsxd esp,DWORD PTR [r11d+0x65]
   14000e14a:	jo     0x14000e1c0
   14000e14c:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x45485300
   14000e155:	rex.WR
   14000e156:	xor    r14,QWORD PTR [rdx]
   14000e159:	cs fs ins BYTE PTR es:[rdi],dx
   14000e15c:	ins    BYTE PTR es:[rdi],dx
   14000e15d:	add    BYTE PTR [rax+rax*1],cl
   14000e160:	rex.RXB
   14000e161:	gs je  0x14000e1b3
   14000e164:	jo     0x14000e1cb
   14000e166:	outs   dx,BYTE PTR ds:[rsi]
   14000e167:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x57656d61
   14000e170:	add    BYTE PTR [rax],al
   14000e172:	add    al,0x0
   14000e174:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e176:	ins    DWORD PTR es:[rdi],dx
   14000e177:	ins    DWORD PTR es:[rdi],dx
   14000e178:	rex.R ins BYTE PTR es:[rdi],dx
   14000e17a:	addr32 rex.RB js 0x14000e1f2
   14000e17e:	outs   dx,BYTE PTR gs:[rsi]
   14000e180:	fs gs fs rex.RB jb 0x14000e1f8
   14000e186:	outs   dx,DWORD PTR ds:[rsi]
   14000e187:	jb     0x14000e189
   14000e189:	add    BYTE PTR [rbx+0x4f],al
   14000e18c:	rex.WRB
   14000e18d:	rex.R
   14000e18e:	rex.WR
   14000e18f:	rex.RXB xor r14d,DWORD PTR [r10]
   14000e192:	cs fs ins BYTE PTR es:[rdi],dx
   14000e195:	ins    BYTE PTR es:[rdi],dx
   14000e196:	add    BYTE PTR [rax],al
   14000e198:	or     DWORD PTR [rax],eax
   14000e19a:	rex.XB jb 0x14000e202
   14000e19d:	(bad)  
   14000e19e:	je     0x14000e205
   14000e1a0:	push   rax
   14000e1a1:	jb     0x14000e212
   14000e1a3:	jo     0x14000e20a
   14000e1a5:	jb     0x14000e21b
   14000e1a7:	jns    0x14000e1fc
   14000e1a9:	push   0x50746565
   14000e1ae:	(bad)  
   14000e1af:	addr32 gs push rdi
   14000e1b2:	add    BYTE PTR [rax],al
   14000e1b4:	xchg   BYTE PTR [rax],al
   14000e1b6:	push   rax
   14000e1b7:	jb     0x14000e228
   14000e1b9:	jo     0x14000e220
   14000e1bb:	jb     0x14000e231
   14000e1bd:	jns    0x14000e212
   14000e1bf:	push   0x57746565
   14000e1c4:	add    BYTE PTR [rax],al
   14000e1c6:	rex.XB
   14000e1c7:	rex.WRXB
   14000e1c8:	rex.WRB
   14000e1c9:	rex.XB push r12
   14000e1cb:	xor    r14,QWORD PTR [rdx]
   14000e1ce:	cs fs ins BYTE PTR es:[rdi],dx
   14000e1d1:	ins    BYTE PTR es:[rdi],dx
   14000e1d2:	add    BYTE PTR [rax],al
   14000e1d4:	rex.WB add BYTE PTR [r8+0x61],dl
   14000e1d8:	je     0x14000e242
   14000e1da:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
   14000e1e3:	jae    0x14000e23c
   14000e1e5:	add    BYTE PTR [rdi+0x74615000],cl
   14000e1eb:	push   0x6f6d6552
   14000e1f0:	jbe    0x14000e257
   14000e1f2:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x57636570
   14000e1fb:	add    BYTE PTR [rbx+0x0],cl
   14000e1fe:	push   rax
   14000e1ff:	(bad)  
   14000e200:	je     0x14000e26a
   14000e202:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x65747845
   14000e20a:	outs   dx,BYTE PTR ds:[rsi]
   14000e20b:	jae    0x14000e276
   14000e20d:	outs   dx,DWORD PTR ds:[rsi]
   14000e20e:	outs   dx,BYTE PTR ds:[rsi]
   14000e20f:	push   rdi
   14000e210:	add    BYTE PTR [rax],al
   14000e212:	rex.XB add BYTE PTR [r8+0x61],dl
   14000e216:	je     0x14000e280
   14000e218:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e21a:	ins    DWORD PTR es:[rdi],dx
   14000e21b:	jo     0x14000e27e
   14000e21d:	movsxd esi,DWORD PTR [rax+rdx*2+0x61]
   14000e221:	je     0x14000e28b
   14000e223:	push   rdi
   14000e224:	add    BYTE PTR [rax],al
   14000e226:	push   rbx
   14000e227:	rex.W
   14000e228:	rex.WR push rdi
   14000e22a:	push   r8
   14000e22c:	rex.WB
   14000e22d:	cs fs ins BYTE PTR es:[rdi],dx
   14000e230:	ins    BYTE PTR es:[rdi],dx
   14000e231:	add    BYTE PTR [rbx],dl
   14000e233:	add    cl,BYTE PTR [rdi+0x70]
   14000e236:	outs   dx,BYTE PTR gs:[rsi]
   14000e238:	push   rax
   14000e239:	jb     0x14000e2aa
   14000e23b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e23e:	jae    0x14000e294
   14000e240:	outs   dx,DWORD PTR ds:[rsi]
   14000e241:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000e245:	add    BYTE PTR [rbx+0x1],ch
   14000e248:	rex.RXB
   14000e249:	gs je  0x14000e29f
   14000e24c:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   14000e254:	push   0x7469726f
   14000e259:	jns    0x14000e25b
   14000e25b:	add    BYTE PTR [rcx+rax*1+0x47],ch
   14000e25f:	gs je  0x14000e2b5
   14000e262:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   14000e26a:	push   0x7469726f
   14000e26f:	jns    0x14000e2b4
   14000e271:	outs   dx,DWORD PTR ds:[rsi]
   14000e272:	jne    0x14000e2e2
   14000e274:	je     0x14000e276
   14000e276:	outs   dx,DWORD PTR ds:[rsi]
   14000e277:	add    DWORD PTR [rdi+0x65],eax
   14000e27a:	je     0x14000e2d0
   14000e27c:	outs   dx,DWORD PTR ds:[rsi]
   14000e27d:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000e281:	outs   dx,BYTE PTR ds:[rsi]
   14000e282:	outs   dx,WORD PTR ds:[rsi]
   14000e284:	jb     0x14000e2f3
   14000e286:	(bad)  
   14000e287:	je     0x14000e2f2
   14000e289:	outs   dx,DWORD PTR ds:[rsi]
   14000e28a:	outs   dx,BYTE PTR ds:[rsi]
   14000e28b:	add    BYTE PTR [rbx+0x67655202],dl
   14000e291:	push   rcx
   14000e292:	jne    0x14000e2f9
   14000e294:	jb     0x14000e30f
   14000e296:	push   rsi
   14000e297:	(bad)  
   14000e298:	ins    BYTE PTR es:[rdi],dx
   14000e299:	jne    0x14000e300
   14000e29b:	rex.RB js 0x14000e2f5
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	pushf  
   14000e2a1:	add    DWORD PTR [rcx+0x73],ecx
   14000e2a4:	push   rsi
   14000e2a5:	(bad)  
   14000e2a6:	ins    BYTE PTR es:[rdi],dx
   14000e2a7:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0x86000064
   14000e2af:	add    dl,BYTE PTR [rdx+0x65]
   14000e2b2:	addr32 rex.WRXB jo 0x14000e31b
   14000e2b6:	outs   dx,BYTE PTR ds:[rsi]
   14000e2b7:	rex.WXB
   14000e2b8:	gs jns 0x14000e300
   14000e2bb:	js     0x14000e314
   14000e2bd:	add    BYTE PTR [rbp+0x2],dl
   14000e2c0:	push   rdx
   14000e2c1:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000e2c5:	outs   dx,DWORD PTR ds:[rsi]
   14000e2c6:	jae    0x14000e32d
   14000e2c8:	rex.WXB
   14000e2c9:	gs jns 0x14000e2cc
   14000e2cc:	jnp    0x14000e2ce
   14000e2ce:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e2d0:	outs   dx,BYTE PTR ds:[rsi]
   14000e2d1:	jbe    0x14000e338
   14000e2d3:	jb     0x14000e349
   14000e2d5:	push   rbx
   14000e2d6:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   14000e2de:	outs   dx,BYTE PTR ds:[rsi]
   14000e2df:	addr32 push rbx
   14000e2e1:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x53056d00
   14000e2e9:	ins    BYTE PTR es:[rdi],dx
   14000e2ea:	gs gs jo 0x14000e2ee
   14000e2ee:	mov    DWORD PTR [rdx],0x53746547
   14000e2f4:	je     0x14000e357
   14000e2f6:	jb     0x14000e36c
   14000e2f8:	jne    0x14000e36a
   14000e2fa:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e2fc:	outs   dx,WORD PTR ds:[rsi]
   14000e2fe:	push   rdi
   14000e2ff:	add    BYTE PTR [rdi+0x6c745204],dh
   14000e305:	rex.XB (bad) 
   14000e307:	jo     0x14000e37d
   14000e309:	jne    0x14000e37d
   14000e30b:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000e30e:	outs   dx,BYTE PTR ds:[rsi]
   14000e30f:	je     0x14000e376
   14000e311:	js     0x14000e387
   14000e313:	add    BYTE PTR [rsi+0x6c745204],bh
   14000e319:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000e31b:	outs   dx,DWORD PTR ds:[rsi]
   14000e31c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000e320:	jne    0x14000e390
   14000e322:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000e326:	outs   dx,BYTE PTR ds:[rsi]
   14000e327:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000e329:	je     0x14000e39d
   14000e32b:	jns    0x14000e32d
   14000e32d:	add    ch,al
   14000e32f:	add    al,0x52
   14000e331:	je     0x14000e39f
   14000e333:	push   rsi
   14000e334:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000e33b:	outs   dx,BYTE PTR ds:[rsi]
   14000e33c:	ja     0x14000e3a7
   14000e33e:	outs   dx,BYTE PTR ds:[rsi]
   14000e33f:	add    BYTE PTR fs:[rax],al
   14000e342:	sahf   
   14000e343:	add    eax,0x61686e55
   14000e348:	outs   dx,BYTE PTR ds:[rsi]
   14000e349:	fs ins BYTE PTR es:[rdi],dx
   14000e34b:	gs fs rex.RB js 0x14000e3b3
   14000e350:	gs jo  0x14000e3c7
   14000e353:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000e35a:	gs jb  0x14000e35d
   14000e35d:	add    BYTE PTR [rsi+0x5],bl
   14000e360:	push   rbx
   14000e361:	gs je  0x14000e3b9
   14000e364:	outs   dx,BYTE PTR ds:[rsi]
   14000e365:	push   0x6c646e61
   14000e36a:	gs fs rex.RB js 0x14000e3d2
   14000e36f:	gs jo  0x14000e3e6
   14000e372:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000e379:	gs jb  0x14000e37c
   14000e37c:	adc    BYTE PTR [rdx],al
   14000e37e:	rex.RXB
   14000e37f:	gs je  0x14000e3c5
   14000e382:	jne    0x14000e3f6
   14000e384:	jb     0x14000e3eb
   14000e386:	outs   dx,BYTE PTR ds:[rsi]
   14000e387:	je     0x14000e3d9
   14000e389:	jb     0x14000e3fa
   14000e38b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e38e:	jae    0x14000e390
   14000e390:	jl     0x14000e397
   14000e392:	push   rsp
   14000e393:	gs jb  0x14000e403
   14000e396:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000e39d:	outs   dx,DWORD PTR ds:[rsi]
   14000e39e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e3a1:	jae    0x14000e3a3
   14000e3a3:	add    BYTE PTR [rsi+0x2],ch
   14000e3a6:	rex.RXB
   14000e3a7:	gs je  0x14000e3f7
   14000e3aa:	outs   dx,DWORD PTR ds:[rsi]
   14000e3ab:	fs jne 0x14000e41a
   14000e3ae:	gs rex.W (bad) 
   14000e3b1:	outs   dx,BYTE PTR ds:[rsi]
   14000e3b2:	fs ins BYTE PTR es:[rdi],dx
   14000e3b4:	gs push rdi
   14000e3b6:	add    BYTE PTR [rax],al
   14000e3b8:	ss add al,0x51
   14000e3bb:	jne    0x14000e422
   14000e3bd:	jb     0x14000e438
   14000e3bf:	push   rax
   14000e3c0:	gs jb  0x14000e429
   14000e3c3:	outs   dx,DWORD PTR ds:[rsi]
   14000e3c4:	jb     0x14000e433
   14000e3c6:	(bad)  
   14000e3c7:	outs   dx,BYTE PTR ds:[rsi]
   14000e3c8:	movsxd esp,DWORD PTR [rbp+0x43]
   14000e3cb:	outs   dx,DWORD PTR ds:[rsi]
   14000e3cc:	jne    0x14000e43c
   14000e3ce:	je     0x14000e435
   14000e3d0:	jb     0x14000e3d2
   14000e3d2:	adc    DWORD PTR [rdx],eax
   14000e3d4:	rex.RXB
   14000e3d5:	gs je  0x14000e41b
   14000e3d8:	jne    0x14000e44c
   14000e3da:	jb     0x14000e441
   14000e3dc:	outs   dx,BYTE PTR ds:[rsi]
   14000e3dd:	je     0x14000e42f
   14000e3df:	jb     0x14000e450
   14000e3e1:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e3e4:	jae    0x14000e42f
   14000e3e6:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b4662aef
   14000e3ed:	rex.XB jne 0x14000e462
   14000e3f0:	jb     0x14000e457
   14000e3f2:	outs   dx,BYTE PTR ds:[rsi]
   14000e3f3:	je     0x14000e449
   14000e3f5:	push   0x64616572
   14000e3fa:	rex.WB
   14000e3fb:	add    BYTE PTR fs:[rax],al
   14000e3fe:	loopne 0x14000e402
   14000e400:	rex.RXB
   14000e401:	gs je  0x14000e457
   14000e404:	jns    0x14000e479
   14000e406:	je     0x14000e46d
   14000e408:	ins    DWORD PTR es:[rdi],dx
   14000e409:	push   rsp
   14000e40a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000e411:	ins    BYTE PTR es:[rdi],dx
   14000e412:	gs push rsp
   14000e414:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000e41b:	gs je  0x14000e472
   14000e41e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000e425:	je     0x14000e427
   14000e427:	add    BYTE PTR [rdi+0x2],dl
   14000e42a:	rex.RXB
   14000e42b:	gs je  0x14000e47a
   14000e42e:	(bad)  
   14000e42f:	jae    0x14000e4a5
   14000e431:	rex.RB jb 0x14000e4a6
   14000e434:	outs   dx,DWORD PTR ds:[rsi]
   14000e435:	jb     0x14000e437
   14000e437:	add    BYTE PTR [rsi+0x6d656d04],dl
   14000e43d:	jae    0x14000e4a4
   14000e43f:	je     0x14000e441
	...

Disassembly of section .data:

000000014000f000 <.data>:
   14000f000:	add    DWORD PTR [rax],eax
   14000f002:	add    BYTE PTR [rax],al
   14000f004:	add    BYTE PTR [rax],al
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	int    0x5d
   14000f012:	and    dl,dl
   14000f014:	data16 (bad) 
   14000f016:	(bad)  
   14000f017:	inc    DWORD PTR [rax]
   14000f019:	add    BYTE PTR [rax],al
   14000f01b:	add    BYTE PTR [rax],al
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rax],ah
   14000f021:	cmp    DWORD PTR [rdi-0x10],edi
   14000f024:	mov    WORD PTR [rbx-0x31],?
   14000f027:	adc    DWORD PTR [rbx+0xaa00e8],ebx
   14000f02d:	rex.WXB cqo 
   14000f02f:	xchg   BYTE PTR [rax+0x14000c2],dh
   14000f035:	add    BYTE PTR [rax],al
   14000f037:	add    BYTE PTR [rax],al
   14000f039:	add    BYTE PTR [rax],al
   14000f03b:	add    BYTE PTR [rcx],al
   14000f03d:	add    BYTE PTR [rax],al
   14000f03f:	add    BYTE PTR [rax+0x14000c2],bh
   14000f045:	add    BYTE PTR [rax],al
   14000f047:	add    BYTE PTR [rcx],al
   14000f049:	add    BYTE PTR [rax],al
   14000f04b:	add    BYTE PTR [rdx],cl
   14000f04d:	add    BYTE PTR [rax],al
   14000f04f:	add    BYTE PTR [rdx+rax*8+0x14000],bh
   14000f056:	add    BYTE PTR [rax],al
   14000f058:	add    DWORD PTR [rax],eax
   14000f05a:	add    BYTE PTR [rax],al
   14000f05c:	or     al,BYTE PTR [rax]
   14000f05e:	add    BYTE PTR [rax],al
   14000f060:	(bad)
   14000f064:	add    DWORD PTR [rax],eax
   14000f066:	add    BYTE PTR [rax],al
   14000f068:	add    DWORD PTR [rax],eax
   14000f06a:	add    BYTE PTR [rax],al
   14000f06c:	or     al,BYTE PTR [rax]
   14000f06e:	add    BYTE PTR [rax],al
   14000f070:	int3   
   14000f071:	ret    0x4000
   14000f074:	add    DWORD PTR [rax],eax
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	add    DWORD PTR [rax],eax
   14000f07a:	add    BYTE PTR [rax],al
   14000f07c:	and    BYTE PTR [rax],al
   14000f07e:	add    BYTE PTR [rax],al
   14000f080:	rol    dl,1
   14000f082:	add    BYTE PTR [rax+0x1],al
   14000f085:	add    BYTE PTR [rax],al
   14000f087:	add    BYTE PTR [rcx],al
   14000f089:	add    BYTE PTR [rax],al
   14000f08b:	add    BYTE PTR [rdx],ah
   14000f08d:	add    BYTE PTR [rax],al
   14000f08f:	add    al,ah
   14000f091:	ret    0x4000
   14000f094:	add    DWORD PTR [rax],eax
   14000f096:	add    BYTE PTR [rax],al
   14000f098:	add    DWORD PTR [rax],eax
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	and    al,BYTE PTR [rax]
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	in     al,dx
   14000f0a1:	ret    0x4000
   14000f0a4:	add    DWORD PTR [rax],eax
   14000f0a6:	add    BYTE PTR [rax],al
   14000f0a8:	add    eax,DWORD PTR [rax]
   14000f0aa:	add    BYTE PTR [rax],al
   14000f0ac:	add    al,0x0
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	clc    
   14000f0b1:	(bad)  
   14000f0b2:	add    BYTE PTR [rax+0x1],al
   14000f0b5:	add    BYTE PTR [rax],al
   14000f0b7:	add    BYTE PTR [rbx],al
   14000f0b9:	add    BYTE PTR [rax],al
   14000f0bb:	add    BYTE PTR [rdx],al
   14000f0bd:	add    BYTE PTR [rax],al
   14000f0bf:	add    al,dh
   14000f0c1:	ret    0x4000
   14000f0c4:	add    DWORD PTR [rax],eax
   14000f0c6:	add    BYTE PTR [rax],al
   14000f0c8:	add    eax,DWORD PTR [rax]
   14000f0ca:	add    BYTE PTR [rax],al
   14000f0cc:	add    eax,DWORD PTR [rax]
   14000f0ce:	add    BYTE PTR [rax],al
   14000f0d0:	hlt    
   14000f0d1:	ret    0x4000
   14000f0d4:	add    DWORD PTR [rax],eax
   14000f0d6:	add    BYTE PTR [rax],al
   14000f0d8:	add    DWORD PTR [rax],eax
   14000f0da:	add    BYTE PTR [rax],al
   14000f0dc:	jnp    0x14000f0de
   14000f0de:	add    BYTE PTR [rax],al
   14000f0e0:	clc    
   14000f0e1:	ret    0x4000
   14000f0e4:	add    DWORD PTR [rax],eax
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	add    DWORD PTR [rax],eax
   14000f0ea:	add    BYTE PTR [rax],al
   14000f0ec:	jge    0x14000f0ee
   14000f0ee:	add    BYTE PTR [rax],al
   14000f0f0:	cld    
   14000f0f1:	ret    0x4000
   14000f0f4:	add    DWORD PTR [rax],eax
   14000f0f6:	add    BYTE PTR [rax],al
   14000f0f8:	add    DWORD PTR [rax],eax
   14000f0fa:	add    BYTE PTR [rax],al
   14000f0fc:	pop    rsp
   14000f0fd:	add    BYTE PTR [rax],al
   14000f0ff:	add    BYTE PTR [rax],al
   14000f101:	ret    
   14000f102:	add    BYTE PTR [rax+0x1],al
   14000f105:	add    BYTE PTR [rax],al
   14000f107:	add    BYTE PTR [rdx],al
   14000f109:	add    BYTE PTR [rax],al
   14000f10b:	add    BYTE PTR [rax],al
   14000f10d:	add    BYTE PTR [rax],al
   14000f10f:	add    BYTE PTR [rax],cl
   14000f111:	ret    
   14000f112:	add    BYTE PTR [rax+0x1],al
   14000f115:	add    BYTE PTR [rax],al
   14000f117:	add    BYTE PTR [rdx],al
   14000f119:	add    BYTE PTR [rax],al
   14000f11b:	add    BYTE PTR [rax],al
   14000f11d:	add    BYTE PTR [rax],al
   14000f11f:	add    BYTE PTR [rax],dl
   14000f121:	ret    
   14000f122:	add    BYTE PTR [rax+0x1],al
   14000f125:	add    BYTE PTR [rax],al
   14000f127:	add    BYTE PTR [rdx],al
   14000f129:	add    BYTE PTR [rax],al
   14000f12b:	add    BYTE PTR [rax],al
   14000f12d:	add    BYTE PTR [rax],al
   14000f12f:	add    BYTE PTR [rax],bl
   14000f131:	ret    
   14000f132:	add    BYTE PTR [rax+0x1],al
   14000f135:	add    BYTE PTR [rax],al
   14000f137:	add    BYTE PTR [rdx],al
   14000f139:	add    BYTE PTR [rax],al
   14000f13b:	add    BYTE PTR [rax],al
   14000f13d:	add    BYTE PTR [rax],al
   14000f13f:	add    BYTE PTR [rax],ah
   14000f141:	ret    
   14000f142:	add    BYTE PTR [rax+0x1],al
   14000f145:	add    BYTE PTR [rax],al
   14000f147:	add    BYTE PTR [rdx],al
   14000f149:	add    BYTE PTR [rax],al
   14000f14b:	add    BYTE PTR [rax],al
   14000f14d:	add    BYTE PTR [rax],al
   14000f14f:	add    BYTE PTR [rax],ch
   14000f151:	ret    
   14000f152:	add    BYTE PTR [rax+0x1],al
   14000f155:	add    BYTE PTR [rax],al
   14000f157:	add    BYTE PTR [rdx],al
   14000f159:	add    BYTE PTR [rax],al
   14000f15b:	add    BYTE PTR [rax],al
   14000f15d:	add    BYTE PTR [rax],al
   14000f15f:	add    BYTE PTR [rax],dh
   14000f161:	ret    
   14000f162:	add    BYTE PTR [rax+0x1],al
   14000f165:	add    BYTE PTR [rax],al
   14000f167:	add    BYTE PTR [rdx],al
   14000f169:	add    BYTE PTR [rax],al
   14000f16b:	add    BYTE PTR [rax],al
   14000f16d:	add    BYTE PTR [rax],al
   14000f16f:	add    BYTE PTR [rax],bh
   14000f171:	ret    
   14000f172:	add    BYTE PTR [rax+0x1],al
   14000f175:	add    BYTE PTR [rax],al
   14000f177:	add    BYTE PTR [rdx],al
   14000f179:	add    BYTE PTR [rax],al
   14000f17b:	add    BYTE PTR [rax],al
   14000f17d:	add    BYTE PTR [rax],al
   14000f17f:	add    BYTE PTR [rbx+rax*8+0x0],al
   14000f183:	rex add DWORD PTR [rax],eax
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	add    al,BYTE PTR [rax]
   14000f18a:	add    BYTE PTR [rax],al
   14000f18c:	add    BYTE PTR [rax],al
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	push   rax
   14000f191:	ret    
   14000f192:	add    BYTE PTR [rax+0x1],al
   14000f195:	add    BYTE PTR [rax],al
   14000f197:	add    BYTE PTR [rdx],al
   14000f199:	add    BYTE PTR [rax],al
   14000f19b:	add    BYTE PTR [rax],al
   14000f19d:	add    BYTE PTR [rax],al
   14000f19f:	add    BYTE PTR [rax-0x3d],bl
   14000f1a2:	add    BYTE PTR [rax+0x1],al
   14000f1a5:	add    BYTE PTR [rax],al
   14000f1a7:	add    BYTE PTR [rdx],al
   14000f1a9:	add    BYTE PTR [rax],al
   14000f1ab:	add    BYTE PTR [rax],al
   14000f1ad:	add    BYTE PTR [rax],al
   14000f1af:	add    BYTE PTR [rax-0x3d],ah
   14000f1b2:	add    BYTE PTR [rax+0x1],al
   14000f1b5:	add    BYTE PTR [rax],al
   14000f1b7:	add    BYTE PTR [rdx],al
   14000f1b9:	add    BYTE PTR [rax],al
   14000f1bb:	add    BYTE PTR [rax],al
   14000f1bd:	add    BYTE PTR [rax],al
   14000f1bf:	add    BYTE PTR [rax-0x3d],ch
   14000f1c2:	add    BYTE PTR [rax+0x1],al
   14000f1c5:	add    BYTE PTR [rax],al
   14000f1c7:	add    BYTE PTR [rdx],al
   14000f1c9:	add    BYTE PTR [rax],al
   14000f1cb:	add    BYTE PTR [rax],al
   14000f1cd:	add    BYTE PTR [rax],al
   14000f1cf:	add    BYTE PTR [rax-0x3d],dh
   14000f1d2:	add    BYTE PTR [rax+0x1],al
   14000f1d5:	add    BYTE PTR [rax],al
   14000f1d7:	add    BYTE PTR [rdx],al
   14000f1d9:	add    BYTE PTR [rax],al
   14000f1db:	add    BYTE PTR [rax],al
   14000f1dd:	add    BYTE PTR [rax],al
   14000f1df:	add    BYTE PTR [rax-0x3d],bh
   14000f1e2:	add    BYTE PTR [rax+0x1],al
   14000f1e5:	add    BYTE PTR [rax],al
   14000f1e7:	add    BYTE PTR [rdx],al
   14000f1e9:	add    BYTE PTR [rax],al
   14000f1eb:	add    BYTE PTR [rax],al
   14000f1ed:	add    BYTE PTR [rax],al
   14000f1ef:	add    BYTE PTR [rax+0x14000c3],al
   14000f1f5:	add    BYTE PTR [rax],al
   14000f1f7:	add    BYTE PTR [rdx],al
   14000f1f9:	add    BYTE PTR [rax],al
   14000f1fb:	add    BYTE PTR [rax],al
   14000f1fd:	add    BYTE PTR [rax],al
   14000f1ff:	add    BYTE PTR [rax+0x14000c3],cl
   14000f205:	add    BYTE PTR [rax],al
   14000f207:	add    BYTE PTR [rdx],al
   14000f209:	add    BYTE PTR [rax],al
   14000f20b:	add    BYTE PTR [rip+0xffffffff90000000],al        # 0xd000f211
   14000f211:	ret    
   14000f212:	add    BYTE PTR [rax+0x1],al
   14000f215:	add    BYTE PTR [rax],al
   14000f217:	add    BYTE PTR [rdx],al
   14000f219:	add    BYTE PTR [rax],al
   14000f21b:	add    BYTE PTR [rip+0xffffffff98000000],al        # 0xd800f221
   14000f221:	ret    
   14000f222:	add    BYTE PTR [rax+0x1],al
   14000f225:	add    BYTE PTR [rax],al
   14000f227:	add    BYTE PTR [rdx],al
   14000f229:	add    BYTE PTR [rax],al
   14000f22b:	add    BYTE PTR [rip+0xffffffffa8000000],al        # 0xe800f231
   14000f231:	ret    
   14000f232:	add    BYTE PTR [rax+0x1],al
   14000f235:	add    BYTE PTR [rax],al
   14000f237:	add    BYTE PTR [rdx],al
   14000f239:	add    BYTE PTR [rax],al
   14000f23b:	add    BYTE PTR [rip+0xffffffffb0000000],al        # 0xf000f241
   14000f241:	ret    
   14000f242:	add    BYTE PTR [rax+0x1],al
   14000f245:	add    BYTE PTR [rax],al
   14000f247:	add    BYTE PTR [rdx],al
   14000f249:	add    BYTE PTR [rax],al
   14000f24b:	add    BYTE PTR [rip+0xffffffffb8000000],al        # 0xf800f251
   14000f251:	ret    
   14000f252:	add    BYTE PTR [rax+0x1],al
   14000f255:	add    BYTE PTR [rax],al
   14000f257:	add    BYTE PTR [rdx],al
   14000f259:	add    BYTE PTR [rax],al
   14000f25b:	add    BYTE PTR [rip+0xffffffffc0000000],al        # 0x10000f261
   14000f261:	ret    
   14000f262:	add    BYTE PTR [rax+0x1],al
   14000f265:	add    BYTE PTR [rax],al
   14000f267:	add    BYTE PTR [rdx],al
   14000f269:	add    BYTE PTR [rax],al
   14000f26b:	add    BYTE PTR [rip+0xffffffffc8000000],al        # 0x10800f271
   14000f271:	ret    
   14000f272:	add    BYTE PTR [rax+0x1],al
   14000f275:	add    BYTE PTR [rax],al
   14000f277:	add    BYTE PTR [rdx],al
   14000f279:	add    BYTE PTR [rax],al
   14000f27b:	add    BYTE PTR [rip+0xffffffffd0000000],al        # 0x11000f281
   14000f281:	ret    
   14000f282:	add    BYTE PTR [rax+0x1],al
   14000f285:	add    BYTE PTR [rax],al
   14000f287:	add    BYTE PTR [rdx],al
   14000f289:	add    BYTE PTR [rax],al
   14000f28b:	add    BYTE PTR [rip+0xffffffffe0000000],al        # 0x12000f291
   14000f291:	ret    
   14000f292:	add    BYTE PTR [rax+0x1],al
   14000f295:	add    BYTE PTR [rax],al
   14000f297:	add    BYTE PTR [rdx],al
   14000f299:	add    BYTE PTR [rax],al
   14000f29b:	add    BYTE PTR [rip+0xffffffffec000000],al        # 0x12c00f2a1
   14000f2a1:	ret    
   14000f2a2:	add    BYTE PTR [rax+0x1],al
   14000f2a5:	add    BYTE PTR [rax],al
   14000f2a7:	add    BYTE PTR [rdx],al
   14000f2a9:	add    BYTE PTR [rax],al
   14000f2ab:	add    BYTE PTR [rip+0xfffffffff8000000],al        # 0x13800f2b1
   14000f2b1:	ret    
   14000f2b2:	add    BYTE PTR [rax+0x1],al
   14000f2b5:	add    BYTE PTR [rax],al
   14000f2b7:	add    BYTE PTR [rdx],al
   14000f2b9:	add    BYTE PTR [rax],al
   14000f2bb:	add    BYTE PTR [rip+0x0],al        # 0x14000f2c1
   14000f2c1:	(bad)  
   14000f2c2:	add    BYTE PTR [rax+0x1],al
   14000f2c5:	add    BYTE PTR [rax],al
   14000f2c7:	add    BYTE PTR [rdx],al
   14000f2c9:	add    BYTE PTR [rax],al
   14000f2cb:	add    BYTE PTR [rip+0xc000000],al        # 0x14c00f2d1
   14000f2d1:	(bad)  
   14000f2d2:	add    BYTE PTR [rax+0x1],al
   14000f2d5:	add    BYTE PTR [rax],al
   14000f2d7:	add    BYTE PTR [rdx],al
   14000f2d9:	add    BYTE PTR [rax],al
   14000f2db:	add    BYTE PTR [rip+0x14000000],al        # 0x15400f2e1
   14000f2e1:	(bad)  
   14000f2e2:	add    BYTE PTR [rax+0x1],al
   14000f2e5:	add    BYTE PTR [rax],al
   14000f2e7:	add    BYTE PTR [rdx],al
   14000f2e9:	add    BYTE PTR [rax],al
   14000f2eb:	add    BYTE PTR [rip+0x18000000],al        # 0x15800f2f1
   14000f2f1:	(bad)  
   14000f2f2:	add    BYTE PTR [rax+0x1],al
   14000f2f5:	add    BYTE PTR [rax],al
   14000f2f7:	add    BYTE PTR [rdx],al
   14000f2f9:	add    BYTE PTR [rax],al
   14000f2fb:	add    BYTE PTR [rip+0x24000000],al        # 0x16400f301
   14000f301:	(bad)  
   14000f302:	add    BYTE PTR [rax+0x1],al
   14000f305:	add    BYTE PTR [rax],al
   14000f307:	add    BYTE PTR [rdx],al
   14000f309:	add    BYTE PTR [rax],al
   14000f30b:	add    BYTE PTR [rip+0x28000000],al        # 0x16800f311
   14000f311:	(bad)  
   14000f312:	add    BYTE PTR [rax+0x1],al
   14000f315:	add    BYTE PTR [rax],al
   14000f317:	add    BYTE PTR [rdx],al
   14000f319:	add    BYTE PTR [rax],al
   14000f31b:	add    BYTE PTR [rip+0x2c000000],al        # 0x16c00f321
   14000f321:	(bad)  
   14000f322:	add    BYTE PTR [rax+0x1],al
   14000f325:	add    BYTE PTR [rax],al
   14000f327:	add    BYTE PTR [rdx],al
   14000f329:	add    BYTE PTR [rax],al
   14000f32b:	add    BYTE PTR [rip+0x18000000],al        # 0x15800f331
   14000f331:	mov    edx,0x14000
   14000f336:	add    BYTE PTR [rax],al
   14000f338:	movabs rdx,0xb9e8000000014000
   14000f342:	add    BYTE PTR [rax+0x1],al
	...
   14000f34d:	add    BYTE PTR [rax],al
   14000f34f:	add    BYTE PTR [rax-0x47],dh
   14000f352:	add    BYTE PTR [rax+0x1],al
	...
   14000f35d:	add    BYTE PTR [rax],al
   14000f35f:	add    BYTE PTR [rsi],ch
   14000f361:	(bad)  
   14000f362:	push   r14
   14000f364:	(bad)
   14000f369:	ins    BYTE PTR es:[rdi],dx
   14000f36a:	ins    BYTE PTR es:[rdi],dx
   14000f36b:	outs   dx,DWORD PTR ds:[rsi]
   14000f36c:	movsxd eax,DWORD PTR [rax+0x73]
   14000f36f:	je     0x14000f3d5
   14000f371:	rex
   14000f372:	add    BYTE PTR [rax],al
   14000f375:	add    BYTE PTR [rax],al
   14000f377:	add    BYTE PTR [rax-0x47],dh
   14000f37a:	add    BYTE PTR [rax+0x1],al
	...
   14000f385:	add    BYTE PTR [rax],al
   14000f387:	add    BYTE PTR [rsi],ch
   14000f389:	(bad)  
   14000f38a:	push   r14
   14000f38c:	gs js  0x14000f3f2
   14000f38f:	gs jo  0x14000f406
   14000f392:	imul   ebp,DWORD PTR [rdi+0x6e],0x70004040
   14000f399:	mov    ecx,0x14000
	...
   14000f3a6:	add    BYTE PTR [rax],al
   14000f3a8:	cs (bad) 
   14000f3aa:	push   r14
   14000f3ac:	ins    BYTE PTR es:[rdi],dx
   14000f3ad:	outs   dx,DWORD PTR ds:[rsi]
   14000f3ae:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000f3b6:	jb     0x14000f3f8
   14000f3b8:	jae    0x14000f42e
   14000f3ba:	fs rex
   14000f3bc:	add    BYTE PTR [rax],al
   14000f3bf:	add    BYTE PTR [rax-0x47],dh
   14000f3c2:	add    BYTE PTR [rax+0x1],al
	...
   14000f3cd:	add    BYTE PTR [rax],al
   14000f3cf:	add    BYTE PTR [rsi],ch
   14000f3d1:	(bad)  
   14000f3d2:	push   r14
   14000f3d4:	ins    BYTE PTR es:[rdi],dx
   14000f3d5:	outs   dx,BYTE PTR gs:[rsi]
   14000f3d7:	addr32 je 0x14000f442
   14000f3da:	pop    rdi
   14000f3db:	gs jb  0x14000f450
   14000f3de:	outs   dx,DWORD PTR ds:[rsi]
   14000f3df:	jb     0x14000f421
   14000f3e1:	jae    0x14000f457
   14000f3e3:	fs rex
   14000f3e5:	add    BYTE PTR [rax],al
   14000f3e8:	jo     0x14000f3a3
   14000f3ea:	add    BYTE PTR [rax+0x1],al
	...
   14000f3f5:	add    BYTE PTR [rax],al
   14000f3f7:	add    BYTE PTR [rsi],ch
   14000f3f9:	(bad)  
   14000f3fa:	push   r14
   14000f3fc:	outs   dx,DWORD PTR ds:[rsi]
   14000f3fd:	jne    0x14000f473
   14000f3ff:	pop    rdi
   14000f400:	outs   dx,DWORD PTR ds:[rsi]
   14000f401:	pop    di
   14000f403:	jb     0x14000f466
   14000f405:	outs   dx,BYTE PTR ds:[rsi]
   14000f406:	addr32 gs rex jae 0x14000f47f
   14000f40b:	fs rex
   14000f40d:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140010000 <.pdata>:
   140010000:	jo     0x140010012
   140010002:	add    BYTE PTR [rax],al
   140010004:	xchg   edi,eax
   140010005:	adc    BYTE PTR [rax],al
   140010007:	add    BYTE PTR [rax-0x36],dh
   14001000a:	add    BYTE PTR [rax],al
   14001000c:	rcl    BYTE PTR [rax],0x0
   14001000f:	add    BYTE PTR [rdx],ch
   140010011:	adc    DWORD PTR [rax],eax
   140010013:	add    BYTE PTR [rax-0x36],bh
   140010016:	add    BYTE PTR [rax],al
   140010018:	(bad)  
   140010019:	adc    DWORD PTR [rax],eax
   14001001b:	add    bl,al
   14001001d:	adc    DWORD PTR [rax],eax
   14001001f:	add    BYTE PTR [rdx+rcx*8+0x11e00000],cl
   140010026:	add    BYTE PTR [rax],al
   140010028:	adc    al,BYTE PTR es:[rax]
   14001002b:	add    BYTE PTR [rax+0x400000ca],bl
   140010031:	adc    al,BYTE PTR [rax]
   140010033:	add    BYTE PTR [rbx-0x73ffffee],ah
   140010039:	retf   0x0
   14001003c:	mov    al,0x12
   14001003e:	add    BYTE PTR [rax],al
   140010040:	out    dx,eax
   140010041:	adc    al,BYTE PTR [rax]
   140010043:	add    BYTE PTR [rax-0x7ffff36],ah
   140010049:	adc    al,BYTE PTR [rax]
   14001004b:	add    BYTE PTR [rcx+0x13],dl
   14001004e:	add    BYTE PTR [rax],al
   140010050:	lods   al,BYTE PTR ds:[rsi]
   140010051:	retf   0x0
   140010054:	pop    rax
   140010055:	adc    eax,DWORD PTR [rax]
   140010057:	add    BYTE PTR [rsp+rdx*1+0x0],dl
   14001005b:	add    BYTE PTR [rdx+rcx*8+0x145c0000],ch
   140010062:	add    BYTE PTR [rax],al
   140010064:	ins    DWORD PTR es:[rdi],dx
   140010065:	adc    al,0x0
   140010067:	add    BYTE PTR [rdx+rcx*8+0x14740000],bh
   14001006e:	add    BYTE PTR [rax],al
   140010070:	(bad)  
   140010071:	adc    eax,0xcac40000
   140010076:	add    BYTE PTR [rax],al
   140010078:	mov    BYTE PTR [rip+0x15990000],dl        # 0x1559a007e
   14001007e:	add    BYTE PTR [rax],al
   140010080:	mov    esp,0xa00000ca
   140010085:	adc    eax,0x16350000
   14001008a:	add    BYTE PTR [rax],al
   14001008c:	movabs al,ds:0x3f0000163c0000ca
   140010095:	(bad)  
   140010096:	add    BYTE PTR [rax],al
   140010098:	fmul   st,st(2)
   14001009a:	add    BYTE PTR [rax],al
   14001009c:	rex.W (bad) 
   14001009e:	add    BYTE PTR [rax],al
   1400100a0:	add    ebx,DWORD PTR [rdx]
   1400100a2:	add    BYTE PTR [rax],al
   1400100a4:	mov    al,0xcb
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	or     al,0x1a
   1400100aa:	add    BYTE PTR [rax],al
   1400100ac:	test   DWORD PTR [rdx],ebx
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	mov    esp,0x8c0000ca
   1400100b5:	sbb    al,BYTE PTR [rax]
   1400100b7:	add    BYTE PTR [rip+0xffffffffd400001b],ch        # 0x1140100d8
   1400100bd:	retf   
   1400100be:	add    BYTE PTR [rax],al
   1400100c0:	xor    al,0x1b
   1400100c2:	add    BYTE PTR [rax],al
   1400100c4:	ins    BYTE PTR es:[rdi],dx
   1400100c5:	sbb    eax,DWORD PTR [rax]
   1400100c7:	add    al,ah
   1400100c9:	retf   
   1400100ca:	add    BYTE PTR [rax],al
   1400100cc:	je     0x1400100e9
   1400100ce:	add    BYTE PTR [rax],al
   1400100d0:	sbb    al,0x0
   1400100d3:	add    al,ch
   1400100d5:	retf   
   1400100d6:	add    BYTE PTR [rax],al
   1400100d8:	rex.W sbb al,0x0
   1400100db:	add    BYTE PTR [rsi],ch
   1400100dd:	(bad)  
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	add    ah,cl
   1400100e2:	add    BYTE PTR [rax],al
   1400100e4:	xor    al,0x1f
   1400100e6:	add    BYTE PTR [rax],al
   1400100e8:	jbe    0x140010109
   1400100ea:	add    BYTE PTR [rax],al
   1400100ec:	movabs al,ds:0xed00001f800000ca
   1400100f5:	(bad)  
   1400100f6:	add    BYTE PTR [rax],al
   1400100f8:	(bad)  
   1400100f9:	retf   0x0
   1400100fc:	add    BYTE PTR [rax],ah
   1400100fe:	add    BYTE PTR [rax],al
   140010100:	lea    esp,[rax]
   140010102:	add    BYTE PTR [rax],al
   140010104:	cwde   
   140010105:	retf   0x0
   140010108:	xchg   esp,eax
   140010109:	and    BYTE PTR [rax],al
   14001010b:	add    BYTE PTR [rax+0x21],cl
   14001010e:	add    BYTE PTR [rax],al
   140010110:	push   0x500000cc
   140010115:	and    DWORD PTR [rax],eax
   140010117:	add    BYTE PTR [rdi+0x21],dh
   14001011a:	add    BYTE PTR [rax],al
   14001011c:	je     0x1400100ea
   14001011e:	add    BYTE PTR [rax],al
   140010120:	and    BYTE PTR [rcx],0x0
   140010123:	add    BYTE PTR [rcx+riz*1-0x338c0000],ah
   14001012a:	add    BYTE PTR [rax],al
   14001012c:	mov    al,0x21
   14001012e:	add    BYTE PTR [rax],al
   140010130:	(bad)  
   140010131:	and    DWORD PTR [rax],eax
   140010133:	add    BYTE PTR [rsp+rcx*8+0x0],dh
   140010137:	add    al,ah
   140010139:	and    DWORD PTR [rax],eax
   14001013b:	add    BYTE PTR [rip+0x7c000023],cl        # 0x1bc010164
   140010141:	int3   
   140010142:	add    BYTE PTR [rax],al
   140010144:	adc    al,0x23
   140010146:	add    BYTE PTR [rax],al
   140010148:	test   eax,0x98000029
   14001014d:	int3   
   14001014e:	add    BYTE PTR [rax],al
   140010150:	mov    al,0x29
   140010152:	add    BYTE PTR [rax],al
   140010154:	mov    BYTE PTR [rdx],ch
   140010156:	add    BYTE PTR [rax],al
   140010158:	ror    ah,0x0
   14001015b:	add    BYTE PTR [rax-0xfffffd6],dl
   140010161:	sub    al,BYTE PTR [rax]
   140010163:	add    BYTE PTR [rax-0x36],dh
   140010166:	add    BYTE PTR [rax],al
   140010168:	add    BYTE PTR [rbx],ch
   14001016a:	add    BYTE PTR [rax],al
   14001016c:	pop    rsi
   14001016d:	sub    al,0x0
   14001016f:	add    ah,dl
   140010171:	int3   
   140010172:	add    BYTE PTR [rax],al
   140010174:	fs sub al,0x0
   140010177:	add    bl,cl
   140010179:	xor    DWORD PTR [rax],eax
   14001017b:	add    ah,ch
   14001017d:	int3   
   14001017e:	add    BYTE PTR [rax],al
   140010180:	(bad)  
   140010181:	xor    DWORD PTR [rax],eax
   140010183:	add    BYTE PTR [rcx],ah
   140010185:	xor    eax,0xcd0c0000
   14001018a:	add    BYTE PTR [rax],al
   14001018c:	sub    BYTE PTR [rip+0x36870000],dh        # 0x176880192
   140010192:	add    BYTE PTR [rax],al
   140010194:	xor    ch,cl
   140010196:	add    BYTE PTR [rax],al
   140010198:	nop
   140010199:	add    BYTE PTR ss:[rax],al
   14001019c:	push   0x4c000038
   1400101a1:	int    0x0
   1400101a3:	add    BYTE PTR [rax+0x38],dh
   1400101a6:	add    BYTE PTR [rax],al
   1400101a8:	pop    rsi
   1400101a9:	cmp    DWORD PTR [rax],eax
   1400101ab:	add    BYTE PTR [rax-0x33],ch
   1400101ae:	add    BYTE PTR [rax],al
   1400101b0:	nop
   1400101b1:	cmp    DWORD PTR [rax],eax
   1400101b3:	add    ah,al
   1400101b5:	cmp    al,BYTE PTR [rax]
   1400101b7:	add    BYTE PTR [rax-0x2fffff33],cl
   1400101bd:	cmp    al,BYTE PTR [rax]
   1400101bf:	add    BYTE PTR [rdx-0x57ffffc2],al
   1400101c5:	int    0x0
   1400101c7:	add    BYTE PTR [rax-0x7fffffc2],cl
   1400101cd:	push   rax
   1400101ce:	add    BYTE PTR [rax],al
   1400101d0:	enter  0xcd,0x0
   1400101d4:	mov    BYTE PTR [rax+0x0],dl
   1400101d7:	add    BYTE PTR [rcx+0x51],ah
   1400101da:	add    BYTE PTR [rax],al
   1400101dc:	movabs al,ds:0x90000051680000ca
   1400101e5:	pop    rax
   1400101e6:	add    BYTE PTR [rax],al
   1400101e8:	in     al,dx
   1400101e9:	int    0x0
   1400101eb:	add    BYTE PTR [rax-0x4dffffa8],bl
   1400101f1:	pop    rdx
   1400101f2:	add    BYTE PTR [rax],al
   1400101f4:	add    al,0xce
   1400101f6:	add    BYTE PTR [rax],al
   1400101f8:	mov    eax,0x4a00005a
   1400101fd:	pop    rsp
   1400101fe:	add    BYTE PTR [rax],al
   140010200:	sbb    dh,cl
   140010202:	add    BYTE PTR [rax],al
   140010204:	push   rax
   140010205:	pop    rsp
   140010206:	add    BYTE PTR [rax],al
   140010208:	or     ebx,DWORD PTR [rbp+0x0]
   14001020b:	add    BYTE PTR [rax],dh
   14001020d:	(bad)  
   14001020e:	add    BYTE PTR [rax],al
   140010210:	and    BYTE PTR [rbp+0x0],bl
   140010213:	add    BYTE PTR [rsi+0x4c00005e],cl
   140010219:	(bad)  
   14001021a:	add    BYTE PTR [rax],al
   14001021c:	movabs al,ds:0x7000005ee500005e
   140010225:	retf   0x0
   140010228:	lock pop rsi
   14001022a:	add    BYTE PTR [rax],al
   14001022c:	rex.RX pop rdi
   14001022e:	add    BYTE PTR [rax],al
   140010230:	lods   al,BYTE PTR ds:[rsi]
   140010231:	retf   0x0
   140010234:	rex.WR pop rdi
   140010236:	add    BYTE PTR [rax],al
   140010238:	jge    0x14001029c
   14001023a:	add    BYTE PTR [rax],al
   14001023c:	fs (bad) 
   14001023e:	add    BYTE PTR [rax],al
   140010240:	test   BYTE PTR [rdx+0x0],ah
   140010243:	add    BYTE PTR [rdi],ch
   140010245:	add    BYTE PTR fs:[rax],al
   140010248:	mov    dh,cl
   14001024a:	add    BYTE PTR [rax],al
   14001024c:	cmp    BYTE PTR [rax+rax*1+0x0],ah
   140010250:	js     0x1400102b7
   140010252:	add    BYTE PTR [rax],al
   140010254:	test   al,0xce
   140010256:	add    BYTE PTR [rax],al
   140010258:	and    BYTE PTR [rbp+0x0],0x0
   14001025c:	(bad)  
   14001025d:	add    BYTE PTR [eax],al
   140010260:	(bad)  
   140010261:	(bad)  
   140010262:	add    BYTE PTR [rax],al
   140010264:	fsub   QWORD PTR [rdi+0x0]
   140010267:	add    BYTE PTR [rdi],dh
   140010269:	imul   eax,DWORD PTR [rax],0xcee800
   14001026f:	add    BYTE PTR [rax+0x69],al
   140010272:	add    BYTE PTR [rax],al
   140010274:	cwde   
   140010275:	jb     0x140010277
   140010277:	add    BYTE PTR [rax],al
   140010279:	iret   
   14001027a:	add    BYTE PTR [rax],al
   14001027c:	movabs al,ds:0xac00007342000072
   140010285:	retf   0x0
   140010288:	rex.W jae 0x14001028b
   14001028b:	add    BYTE PTR [rax+0x28000075],bl
   140010291:	iret   
   140010292:	add    BYTE PTR [rax],al
   140010294:	movabs al,ds:0xac00007647000075
   14001029d:	retf   0x0
   1400102a0:	push   rax
   1400102a1:	jbe    0x1400102a3
   1400102a3:	add    BYTE PTR [rcx],ah
   1400102a5:	js     0x1400102a7
   1400102a7:	add    BYTE PTR [rax-0x31],al
   1400102aa:	add    BYTE PTR [rax],al
   1400102ac:	sub    BYTE PTR [rax+0x0],bh
   1400102af:	add    BYTE PTR [rbx+0x79],dh
   1400102b2:	add    BYTE PTR [rax],al
   1400102b4:	(bad)  
   1400102b5:	iret   
   1400102b6:	add    BYTE PTR [rax],al
   1400102b8:	jl     0x140010333
   1400102ba:	add    BYTE PTR [rax],al
   1400102bc:	(bad)  
   1400102bd:	jnp    0x1400102bf
   1400102bf:	add    BYTE PTR [rdi+rcx*8+0x0],dh
   1400102c3:	add    ah,cl
   1400102c5:	jnp    0x1400102c7
   1400102c7:	add    BYTE PTR [rcx+0x7c],ah
   1400102ca:	add    BYTE PTR [rax],al
   1400102cc:	lods   al,BYTE PTR ds:[rsi]
   1400102cd:	retf   0x0
   1400102d0:	jo     0x14001034e
   1400102d2:	add    BYTE PTR [rax],al
   1400102d4:	sbb    DWORD PTR [rbp+0x0],edi
   1400102d7:	add    BYTE PTR [rax+0x3c0000cf],dl
   1400102dd:	jge    0x1400102df
   1400102df:	add    BYTE PTR [rax-0x80],al
   1400102e2:	add    BYTE PTR [rax],al
   1400102e4:	lods   al,BYTE PTR ds:[rsi]
   1400102e5:	iret   
   1400102e6:	add    BYTE PTR [rax],al
   1400102e8:	fadd   DWORD PTR [rax-0x7e470000]
   1400102ee:	add    BYTE PTR [rax],al
   1400102f0:	int3   
   1400102f1:	iret   
   1400102f2:	add    BYTE PTR [rax],al
   1400102f4:	rol    BYTE PTR [rcx-0x7cf70000],0x0
   1400102fb:	add    ah,ah
   1400102fd:	iret   
   1400102fe:	add    BYTE PTR [rax],al
   140010300:	adc    BYTE PTR [rbx-0x7aaf0000],al
   140010306:	add    BYTE PTR [rax],al
   140010308:	cld    
   140010309:	iret   
   14001030a:	add    BYTE PTR [rax],al
   14001030c:	pop    rax
   14001030d:	test   DWORD PTR [rax],eax
   14001030f:	add    BYTE PTR [rbp+rax*4+0x0],dh
   140010313:	add    BYTE PTR [rdx+rcx*8-0x7a840000],bh
   14001031a:	add    BYTE PTR [rax],al
   14001031c:	stos   BYTE PTR es:[rdi],al
   14001031d:	xchg   BYTE PTR [rax],al
   14001031f:	add    BYTE PTR [rax],ah
   140010321:	rol    BYTE PTR [rax],1
   140010323:	add    BYTE PTR [rax-0x52ffff7a],dh
   140010329:	xchg   DWORD PTR [rax],eax
   14001032b:	add    BYTE PTR [rax-0x30],bh
   14001032e:	add    BYTE PTR [rax],al
   140010330:	mov    ah,0x87
   140010332:	add    BYTE PTR [rax],al
   140010334:	fild   WORD PTR [rdi-0x35900000]
   14001033a:	add    BYTE PTR [rax],al
   14001033c:	call   0x11e0103c8
   140010341:	mov    BYTE PTR [rax],al
   140010343:	add    BYTE PTR [rax+rdx*8-0x771c0000],dl
   14001034a:	add    BYTE PTR [rax],al
   14001034c:	xchg   BYTE PTR [rcx-0x2ee00000],cl
   140010352:	add    BYTE PTR [rax],al
   140010354:	mov    WORD PTR [rcx-0x76630000],cs
   14001035a:	add    BYTE PTR [rax],al
   14001035c:	mov    esp,0xb40000ca
   140010361:	mov    DWORD PTR [rax],eax
   140010363:	add    BYTE PTR [rdx+rcx*4+0x0],dl
   140010367:	add    BYTE PTR [rax-0x43ffff2f],ah
   14001036d:	mov    al,BYTE PTR [rax]
   14001036f:	add    ch,bl
   140010371:	mov    al,BYTE PTR [rax]
   140010373:	add    BYTE PTR [rax-0x36],dh
   140010376:	add    BYTE PTR [rax],al
   140010378:	in     al,0x8a
   14001037a:	add    BYTE PTR [rax],al
   14001037c:	sbb    al,0x8b
   14001037e:	add    BYTE PTR [rax],al
   140010380:	jo     0x14001034c
   140010382:	add    BYTE PTR [rax],al
   140010384:	and    al,0x8b
   140010386:	add    BYTE PTR [rax],al
   140010388:	mov    r8d,DWORD PTR [r8]
   14001038b:	add    BYTE PTR [rax-0x36],dh
   14001038e:	add    BYTE PTR [rax],al
   140010390:	mov    r8,QWORD PTR [rax]
   140010393:	add    BYTE PTR [rbx-0x75],bh
   140010396:	add    BYTE PTR [rax],al
   140010398:	mov    al,0xd1
   14001039a:	add    BYTE PTR [rax],al
   14001039c:	mov    al,0x8b
   14001039e:	add    BYTE PTR [rax],al
   1400103a0:	jmp    0xe0010430
   1400103a5:	retf   0x0
   1400103a8:	lock mov eax,DWORD PTR [rax]
   1400103ab:	add    BYTE PTR [rdi],bl
   1400103ad:	mov    WORD PTR [rax],es
   1400103af:	add    BYTE PTR [rax+0x280000ca],ah
   1400103b5:	mov    WORD PTR [rax],es
   1400103b7:	add    BYTE PTR [rax-0x74],cl
   1400103ba:	add    BYTE PTR [rax],al
   1400103bc:	test   al,0xd1
   1400103be:	add    BYTE PTR [rax],al
   1400103c0:	push   rax
   1400103c1:	mov    WORD PTR [rax],es
   1400103c3:	add    BYTE PTR [rbx-0x74],dh
   1400103c6:	add    BYTE PTR [rax],al
   1400103c8:	test   al,0xd1
   1400103ca:	add    BYTE PTR [rax],al
   1400103cc:	jl     0x14001035a
   1400103ce:	add    BYTE PTR [rax],al
   1400103d0:	lahf   
   1400103d1:	mov    WORD PTR [rax],es
   1400103d3:	add    BYTE PTR [rax-0x57ffff2f],ch
   1400103d9:	mov    WORD PTR [rax],es
   1400103db:	add    cl,bl
   1400103dd:	mov    WORD PTR [rax],es
   1400103df:	add    BYTE PTR [rax-0x36],dh
   1400103e2:	add    BYTE PTR [rax],al
   1400103e4:	lock mov WORD PTR [rax],es
   1400103e7:	add    BYTE PTR [rdi-0x43ffff73],bh
   1400103ed:	retf   0x0
   1400103f0:	ror    BYTE PTR [rbp-0x71e70000],1
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	je     0x1400103c6
   1400103fa:	add    BYTE PTR [rax],al
   1400103fc:	and    BYTE PTR [rsi-0x71ce0000],cl
   140010402:	add    BYTE PTR [rax],al
   140010404:	mov    esp,0x380000ca
   140010409:	mov    es,WORD PTR [rax]
   14001040b:	add    BYTE PTR [rsi-0x47ffff70],cl
   140010411:	rol    DWORD PTR [rax],1
   140010413:	add    BYTE PTR [rax-0x41ffff70],ah
   140010419:	nop
   14001041a:	add    BYTE PTR [rax],al
   14001041c:	call   0x1040104f2
   140010421:	nop
   140010422:	add    BYTE PTR [rax],al
   140010424:	(bad)  
   140010426:	add    BYTE PTR [rax],al
   140010428:	in     al,dx
   140010429:	rol    DWORD PTR [rax],1
   14001042b:	add    BYTE PTR [rax-0x6f],ch
   14001042e:	add    BYTE PTR [rax],al
   140010430:	jg     0x1400103c3
   140010432:	add    BYTE PTR [rax],al
   140010434:	mov    esp,0xa80000ca
   140010439:	xchg   ecx,eax
   14001043a:	add    BYTE PTR [rax],al
   14001043c:	fcom   QWORD PTR [rcx-0x35900000]
   140010442:	add    BYTE PTR [rax],al
   140010444:	lock xchg ecx,eax
   140010446:	add    BYTE PTR [rax],al
   140010448:	(bad)  
   140010449:	xchg   ebx,eax
   14001044a:	add    BYTE PTR [rax],al
   14001044c:	and    dl,dl
   14001044e:	add    BYTE PTR [rax],al
   140010450:	push   0x5f000093
   140010455:	xchg   esp,eax
   140010456:	add    BYTE PTR [rax],al
   140010458:	sbb    dl,dl
   14001045a:	add    BYTE PTR [rax],al
   14001045c:	rcl    BYTE PTR [rax+rax*1+0x950000],1
   140010463:	add    BYTE PTR [rax+0x200000ca],ah
   140010469:	xchg   ebp,eax
   14001046a:	add    BYTE PTR [rax],al
   14001046c:	pop    rcx
   14001046d:	xchg   ebp,eax
   14001046e:	add    BYTE PTR [rax],al
   140010470:	mov    esp,0x600000ca
   140010475:	xchg   ebp,eax
   140010476:	add    BYTE PTR [rax],al
   140010478:	js     0x14001040f
   14001047a:	add    BYTE PTR [rax],al
   14001047c:	mov    esp,0x8c0000ca
   140010481:	xchg   ebp,eax
   140010482:	add    BYTE PTR [rax],al
   140010484:	loopne 0x14001041b
   140010486:	add    BYTE PTR [rax],al
   140010488:	sub    dl,dl
   14001048a:	add    BYTE PTR [rax],al
   14001048c:	call   0x16d010526
   140010491:	xchg   esi,eax
   140010492:	add    BYTE PTR [rax],al
   140010494:	jo     0x140010460
   140010496:	add    BYTE PTR [rax],al
   140010498:	nop
   140010499:	xchg   esi,eax
   14001049a:	add    BYTE PTR [rax],al
   14001049c:	fst    QWORD PTR [rsi-0x2db80000]
   1400104a2:	add    BYTE PTR [rax],al
   1400104a4:	and    al,0x97
   1400104a6:	add    BYTE PTR [rax],al
   1400104a8:	hlt    
   1400104a9:	xchg   edi,eax
   1400104aa:	add    BYTE PTR [rax],al
   1400104ac:	ins    BYTE PTR es:[rdi],dx
   1400104ad:	rol    BYTE PTR [rax],cl
   1400104af:	add    BYTE PTR [rax],bh
   1400104b1:	cwde   
   1400104b2:	add    BYTE PTR [rax],al
   1400104b4:	push   rbp
   1400104b5:	cwde   
   1400104b6:	add    BYTE PTR [rax],al
   1400104b8:	mov    esp,0x5c0000ca
   1400104bd:	cwde   
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	mov    edi,0x70000098
   1400104c5:	retf   0x0
   1400104c8:	loopne 0x140010462
   1400104ca:	add    BYTE PTR [rax],al
   1400104cc:	loop   0x140010466
   1400104ce:	add    BYTE PTR [rax],al
   1400104d0:	js     0x1400104a4
   1400104d2:	add    BYTE PTR [rax],al
   1400104d4:	add    BYTE PTR [rcx-0x66b30000],bl
   1400104da:	add    BYTE PTR [rax],al
   1400104dc:	adc    dl,0x0
   1400104df:	add    BYTE PTR [rsi-0x67],dl
   1400104e2:	add    BYTE PTR [rax],al
   1400104e4:	(bad)  
   1400104e5:	cdq    
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	movabs al,ds:0xbf0000999a0000cb
   1400104f1:	cdq    
   1400104f2:	add    BYTE PTR [rax],al
   1400104f4:	movabs al,ds:0x3900009a190000cb
   1400104fd:	(bad)  
   1400104fe:	add    BYTE PTR [rax],al
   140010500:	adc    cl,dl
   140010502:	add    BYTE PTR [rax],al
   140010504:	(bad)  
   140010505:	(bad)  
   140010506:	add    BYTE PTR [rax],al
   140010508:	pop    rdi
   140010509:	(bad)  
   14001050a:	add    BYTE PTR [rax],al
   14001050c:	nop
   14001050d:	rol    DWORD PTR [rax],1
   14001050f:	add    BYTE PTR [rbp-0x66],ah
   140010512:	add    BYTE PTR [rax],al
   140010514:	sbb    DWORD PTR [rdx-0x2df00000],0x0
   14001051b:	add    BYTE PTR [rcx-0x5bffff66],cl
   140010521:	(bad)  
   140010522:	add    BYTE PTR [rax],al
   140010524:	adc    dl,dl
   140010526:	add    BYTE PTR [rax],al
   140010528:	mov    al,0x9a
   14001052a:	add    BYTE PTR [rax],al
   14001052c:	rcr    BYTE PTR [rdx-0x2df00000],1
   140010532:	add    BYTE PTR [rax],al
   140010534:	(bad)  
   140010535:	fwait
   140010536:	add    BYTE PTR [rax],al
   140010538:	nop
   140010539:	fwait
   14001053a:	add    BYTE PTR [rax],al
   14001053c:	.byte 0xbc
   14001053d:	retf   0x0

Disassembly of section .rsrc:

0000000140011000 <.rsrc>:
	...
   14001100c:	add    BYTE PTR [rax],al
   14001100e:	(bad)  
   14001100f:	add    BYTE PTR [rdx],al
   140011011:	add    BYTE PTR [rax],al
   140011013:	add    BYTE PTR [rax+0x0],cl
   140011016:	add    BYTE PTR [rax+0x3],al
   14001101c:	push   0x5800000
   140011021:	add    BYTE PTR [rax],al
   140011023:	add    BYTE PTR [rax+0x6800000],bl
   140011029:	add    BYTE PTR [rax],al
   14001102b:	add    al,bl
   14001102d:	add    BYTE PTR [rax],al
   14001102f:	or     BYTE PTR [rsi],0x0
   140011032:	add    BYTE PTR [rax],al
   140011034:	add    BYTE PTR [rcx],al
   140011036:	add    BYTE PTR [rax+0x10],al
   14001103c:	sbb    BYTE PTR [rcx],al
   14001103e:	add    BYTE PTR [rax+0x18],al
   140011044:	xor    BYTE PTR [rcx],al
   140011046:	add    BYTE PTR [rax+0x0],al
	...
   140011054:	add    al,BYTE PTR [rax]
   140011056:	add    BYTE PTR [rax],al
   140011058:	fadd   DWORD PTR [rax+rax*1]
   14001105b:	or     BYTE PTR [rax+0x1],0x0
   14001105f:	xor    dh,0x4
   140011062:	add    BYTE PTR [rax-0x7ffffea0],al
	...
   140011074:	add    BYTE PTR [rax],al
   140011076:	add    al,0x0
   140011078:	add    DWORD PTR [rax],eax
   14001107a:	add    BYTE PTR [rax],al
   14001107c:	js     0x14001107f
   14001107e:	add    BYTE PTR [rax+0x2],al
   140011084:	nop
   140011085:	add    DWORD PTR [rax],eax
   140011087:	add    BYTE PTR [rbx],0x0
   14001108a:	add    BYTE PTR [rax],al
   14001108c:	test   al,0x1
   14001108e:	add    BYTE PTR [rax+0x4],al
   140011094:	rol    BYTE PTR [rcx],0x0
   140011097:	add    BYTE PTR [rax],0x0
	...
   1400110a6:	(bad)  
   1400110a7:	add    BYTE PTR [rbp+0x0],ah
   1400110aa:	add    BYTE PTR [rax],al
   1400110ac:	fadd   DWORD PTR [rcx]
   1400110ae:	add    BYTE PTR [rax+0x66],al
   1400110b4:	clc    
   1400110b5:	add    DWORD PTR [rax],eax
   1400110b7:	and    BYTE PTR [rdi+0x0],0x0
   1400110bb:	add    BYTE PTR [rax],bl
   1400110bd:	add    al,BYTE PTR [rax]
   1400110bf:	sub    BYTE PTR [rcx+0x0],0x0
   1400110c3:	add    BYTE PTR [rax],bh
   1400110c5:	add    al,BYTE PTR [rax]
   1400110c7:	sub    BYTE PTR [rbx+0x0],0x0
   1400110cb:	add    BYTE PTR [rax+0x2],bl
   1400110ce:	add    BYTE PTR [rax+0x6c],al
   1400110d4:	js     0x1400110d8
   1400110d6:	add    BYTE PTR [rax+0x0],al
	...
   1400110e4:	add    BYTE PTR [rax],al
   1400110e6:	add    eax,DWORD PTR [rax]
   1400110e8:	add    DWORD PTR [rax],eax
   1400110ea:	add    BYTE PTR [rax],al
   1400110ec:	nop
   1400110ed:	add    al,BYTE PTR [rax]
   1400110ef:	add    BYTE PTR [rdx],0x0
   1400110f2:	add    BYTE PTR [rax],al
   1400110f4:	mov    al,0x2
   1400110f6:	add    BYTE PTR [rax+0x3],al
   1400110fc:	rol    BYTE PTR [rdx],1
   1400110fe:	add    BYTE PTR [rax+0x0],al
	...
   14001110c:	add    DWORD PTR [rax],eax
   14001110e:	add    BYTE PTR [rax],al
   140011110:	adc    al,BYTE PTR [rip+0x2f08000]        # 0x142f19116
   140011116:	add    BYTE PTR [rax+0x0],al
	...
   140011124:	add    BYTE PTR [rax],al
   140011126:	add    DWORD PTR [rax],eax
   140011128:	add    DWORD PTR [rax],eax
   14001112a:	add    BYTE PTR [rax],al
   14001112c:	or     BYTE PTR [rbx],al
   14001112e:	add    BYTE PTR [rax+0x0],al
	...
   14001113c:	add    BYTE PTR [rax],al
   14001113e:	add    DWORD PTR [rax],eax
   140011140:	add    DWORD PTR [rax],eax
   140011142:	add    BYTE PTR [rax],al
   140011144:	and    BYTE PTR [rbx],al
   140011146:	add    BYTE PTR [rax+0x0],al
	...
   140011154:	add    BYTE PTR [rax],al
   140011156:	add    DWORD PTR [rax],eax
   140011158:	add    al,0x4
   14001115a:	add    BYTE PTR [rax],al
   14001115c:	cmp    BYTE PTR [rbx],al
	...
   14001116e:	add    DWORD PTR [rax],eax
   140011170:	add    al,0x4
   140011172:	add    BYTE PTR [rax],al
   140011174:	add    rax,QWORD PTR [rax]
	...
   140011183:	add    BYTE PTR [rax],al
   140011185:	add    BYTE PTR [rcx],al
   140011187:	add    BYTE PTR [rsp+rax*1],al
   14001118a:	add    BYTE PTR [rax],al
   14001118c:	pop    rax
   14001118d:	add    eax,DWORD PTR [rax]
	...
   14001119b:	add    BYTE PTR [rax],al
   14001119d:	add    BYTE PTR [rcx],al
   14001119f:	add    BYTE PTR [rsp+rax*1],al
   1400111a2:	add    BYTE PTR [rax],al
   1400111a4:	push   0x3
	...
   1400111b5:	add    BYTE PTR [rcx],al
   1400111b7:	add    BYTE PTR [rsp+rax*1],al
   1400111ba:	add    BYTE PTR [rax],al
   1400111bc:	js     0x1400111c1
	...
   1400111ce:	add    DWORD PTR [rax],eax
   1400111d0:	add    al,0x4
   1400111d2:	add    BYTE PTR [rax],al
   1400111d4:	mov    BYTE PTR [rbx],al
	...
   1400111e6:	add    al,BYTE PTR [rax]
   1400111e8:	add    al,0x4
   1400111ea:	add    BYTE PTR [rax],al
   1400111ec:	cwde   
   1400111ed:	add    eax,DWORD PTR [rax]
   1400111ef:	add    BYTE PTR [rcx],cl
   1400111f1:	add    al,0x0
   1400111f3:	add    BYTE PTR [rax+0x3],ch
	...
   140011205:	add    BYTE PTR [rdx],al
   140011207:	add    BYTE PTR [rsp+rax*1],al
   14001120a:	add    BYTE PTR [rax],al
   14001120c:	mov    eax,0x9000003
   140011211:	add    al,0x0
   140011213:	add    al,cl
   140011215:	add    eax,DWORD PTR [rax]
	...
   140011223:	add    BYTE PTR [rax],al
   140011225:	add    BYTE PTR [rdx],al
   140011227:	add    BYTE PTR [rsp+rax*1],al
   14001122a:	add    BYTE PTR [rax],al
   14001122c:	fadd   DWORD PTR [rbx]
   14001122e:	add    BYTE PTR [rax],al
   140011230:	or     DWORD PTR [rax+rax*1],eax
   140011233:	add    al,ch
   140011235:	add    eax,DWORD PTR [rax]
	...
   140011243:	add    BYTE PTR [rax],al
   140011245:	add    BYTE PTR [rdx],al
   140011247:	add    BYTE PTR [rsp+rax*1],al
   14001124a:	add    BYTE PTR [rax],al
   14001124c:	clc    
   14001124d:	add    eax,DWORD PTR [rax]
   14001124f:	add    BYTE PTR [rcx],cl
   140011251:	add    al,0x0
   140011253:	add    BYTE PTR [rax],cl
   140011255:	add    al,0x0
	...
   140011263:	add    BYTE PTR [rax],al
   140011265:	add    BYTE PTR [rdx],al
   140011267:	add    BYTE PTR [rsp+rax*1],al
   14001126a:	add    BYTE PTR [rax],al
   14001126c:	sbb    BYTE PTR [rax+rax*1],al
   14001126f:	add    BYTE PTR [rcx],cl
   140011271:	add    al,0x0
   140011273:	add    BYTE PTR [rax],ch
   140011275:	add    al,0x0
	...
   140011283:	add    BYTE PTR [rax],al
   140011285:	add    BYTE PTR [rcx],al
   140011287:	add    BYTE PTR [rsp+rax*1],al
   14001128a:	add    BYTE PTR [rax],al
   14001128c:	cmp    BYTE PTR [rax+rax*1],al
	...
   14001129b:	add    BYTE PTR [rax],al
   14001129d:	add    BYTE PTR [rdx],al
   14001129f:	add    BYTE PTR [rsp+rax*1],al
   1400112a2:	add    BYTE PTR [rax],al
   1400112a4:	rex.W add al,0x0
   1400112a7:	add    BYTE PTR [rcx],cl
   1400112a9:	add    al,0x0
   1400112ab:	add    BYTE PTR [rax+0x4],bl
	...
   1400112be:	add    al,BYTE PTR [rax]
   1400112c0:	add    al,0x4
   1400112c2:	add    BYTE PTR [rax],al
   1400112c4:	push   0x9000004
   1400112c9:	add    al,0x0
   1400112cb:	add    BYTE PTR [rax+0x4],bh
	...
   1400112de:	add    al,BYTE PTR [rax]
   1400112e0:	add    al,0x4
   1400112e2:	add    BYTE PTR [rax],al
   1400112e4:	mov    BYTE PTR [rax+rax*1],al
   1400112e7:	add    BYTE PTR [rcx],cl
   1400112e9:	add    al,0x0
   1400112eb:	add    BYTE PTR [rax+0x4],bl
	...
   1400112fd:	add    BYTE PTR [rcx],al
   1400112ff:	add    BYTE PTR [rsp+rax*1],al
   140011302:	add    BYTE PTR [rax],al
   140011304:	test   al,0x4
	...
   140011316:	add    DWORD PTR [rax],eax
   140011318:	or     DWORD PTR [rax+rax*1],eax
   14001131b:	add    BYTE PTR [rax+0x4],bh
	...
   14001132d:	add    BYTE PTR [rcx],al
   14001132f:	add    BYTE PTR [rcx],cl
   140011331:	add    al,0x0
   140011333:	add    al,cl
   140011335:	add    al,0x0
   140011337:	add    BYTE PTR [rax+0x1b],dh
   14001133a:	add    DWORD PTR [rax],eax
   14001133c:	sbb    al,0xe
	...
   140011346:	add    BYTE PTR [rax],al
   140011348:	nop
   140011349:	sub    DWORD PTR [rcx],eax
   14001134b:	add    BYTE PTR [rax],ch
   14001134d:	adc    al,0x0
	...
   140011357:	add    BYTE PTR [rax-0x17fffec3],bh
   14001135d:	add    al,BYTE PTR [rax]
	...
   140011367:	add    BYTE PTR [rax-0x57fffec0],ah
   14001136d:	or     BYTE PTR [rax],al
	...
   140011377:	add    BYTE PTR [rax+0x49],cl
   14001137a:	add    DWORD PTR [rax],eax
   14001137c:	sub    BYTE PTR [rcx],al
	...
   140011386:	add    BYTE PTR [rax],al
   140011388:	jo     0x1400113d4
   14001138a:	add    DWORD PTR [rax],eax
   14001138c:	push   0x5
   140011391:	add    BYTE PTR [rax],al
   140011393:	add    BYTE PTR [rax],al
   140011395:	add    BYTE PTR [rax],al
   140011397:	add    BYTE PTR [rax+0x51],dl
   14001139a:	add    DWORD PTR [rax],eax
   14001139c:	jo     0x14001139f
	...
   1400113a6:	add    BYTE PTR [rax],al
   1400113a8:	fcom   DWORD PTR [rsi+0x1]
   1400113ab:	add    BYTE PTR [rax+0x1],dh
	...
   1400113b6:	add    BYTE PTR [rax],al
   1400113b8:	rcl    BYTE PTR [rdx+0x1],0x0
   1400113bc:	(bad)  
   1400113bd:	add    DWORD PTR [rax],eax
	...
   1400113c7:	add    BYTE PTR [rax+0x58],cl
   1400113ca:	add    DWORD PTR [rax],eax
   1400113cc:	(bad)  
   1400113cd:	add    DWORD PTR [rax],eax
	...
   1400113d7:	add    BYTE PTR [rax+0x72000154],bl
	...
   1400113e5:	add    BYTE PTR [rax],al
   1400113e7:	add    BYTE PTR [rax],ah
   1400113e9:	pop    rdx
   1400113ea:	add    DWORD PTR [rax],eax
   1400113ec:	jb     0x1400113ee
	...
   1400113f6:	add    BYTE PTR [rax],al
   1400113f8:	adc    BYTE PTR [rbp+0x1],dl
   1400113fb:	add    dl,bh
	...
   140011405:	add    BYTE PTR [rax],al
   140011407:	add    BYTE PTR [rax+0x2e00015a],bl
   14001140d:	add    DWORD PTR [rax],eax
	...
   140011417:	add    BYTE PTR [rax],dl
   140011419:	push   rsi
   14001141a:	add    DWORD PTR [rax],eax
   14001141c:	enter  0x0,0x0
	...
   140011428:	enter  0x15b,0x0
   14001142c:	(bad)  
   14001142d:	add    DWORD PTR [rax],eax
	...
   140011437:	add    BYTE PTR [rax],bl
   140011439:	push   rax
   14001143a:	add    DWORD PTR [rax],eax
   14001143c:	cmp    BYTE PTR [rcx],al
	...
   140011446:	add    BYTE PTR [rax],al
   140011448:	rcr    BYTE PTR [rcx+rax*1+0x0],1
   14001144c:	test   al,0x1
	...
   140011456:	add    BYTE PTR [rax],al
   140011458:	and    BYTE PTR [rdx+0x1],0x0
   14001145c:	mov    edx,0x4
   140011461:	add    BYTE PTR [rax],al
   140011463:	add    BYTE PTR [rax],al
   140011465:	add    BYTE PTR [rax],al
   140011467:	add    BYTE PTR [rax+0x5e],bh
   14001146a:	add    DWORD PTR [rax],eax
   14001146c:	fiadd  WORD PTR [rbx]
	...
   140011476:	add    BYTE PTR [rax],al
   140011478:	rex
   140011479:	add    DWORD PTR [eax],eax
   14001147c:	hlt    
   14001147d:	(bad)  
	...
   140011486:	add    BYTE PTR [rax],al
   140011488:	pop    rax
   140011489:	(bad)  
   14001148b:	add    BYTE PTR [rax+rax*1],ah
	...
   140011496:	add    BYTE PTR [rax],al
   140011498:	cmp    BYTE PTR [rsi+0x1],ch
   14001149b:	add    BYTE PTR [rax+rax*1],ch
	...
   1400114a6:	add    BYTE PTR [rax],al
   1400114a8:	fmul   DWORD PTR [rdi+0x1]
   1400114ab:	add    BYTE PTR [rsi],bh
	...
   1400114b5:	add    BYTE PTR [rax],al
   1400114b7:	add    al,dh
   1400114b9:	(bad)  
   1400114ba:	add    DWORD PTR [rax],eax
   1400114bc:	add    BYTE PTR [rax+rax*1],0x0
	...
   1400114c8:	rex adc eax,0x1b00001
	...
   1400114d6:	add    BYTE PTR [rax],al
   1400114d8:	(bad)  
   1400114d9:	add    BYTE PTR [rcx+0x0],cl
   1400114dc:	add    BYTE PTR [rdx+0x0],r8b
   1400114e0:	pop    rdi
   1400114e1:	add    BYTE PTR [rdx+0x0],al
   1400114e4:	add    BYTE PTR [r14+0x0],cl
   1400114e8:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   1400114ec:	push   rdx
   1400114ed:	add    BYTE PTR [rdi+0x0],bl
   1400114f0:	xor    al,BYTE PTR [rax]
   1400114f2:	xor    eax,0xd003600
   1400114f7:	add    BYTE PTR [rcx+0x0],cl
   1400114fa:	add    BYTE PTR [rdx+0x0],r8b
   1400114fe:	pop    rdi
   1400114ff:	add    BYTE PTR [rax+0x0],cl
   140011502:	add    BYTE PTR [r14+0x0],cl
   140011506:	add    BYTE PTR [rdi+0x0],r11b
   14001150a:	add    BYTE PTR [rdx+0x0],r10b
   14001150e:	rex.WRXB add BYTE PTR [r8+0x0],r10b
   140011512:	str    WORD PTR [rcx+0x0]
   140011516:	add    BYTE PTR [rcx+0x0],r9b
   14001151a:	pop    rdi
   14001151b:	add    BYTE PTR [rax+rax*1+0x49],dl
   14001151f:	add    BYTE PTR [rax+rax*1+0x4c],dl
   140011523:	add    BYTE PTR [rbp+0x0],al
   140011526:	rex.X add BYTE PTR [rcx+0x0],al
   14001152a:	push   rdx
   14001152b:	add    BYTE PTR [rdi+0x0],bl
   14001152e:	xor    eax,DWORD PTR [rax]
   140011530:	xor    al,BYTE PTR [rax]
	...
   14001153e:	add    BYTE PTR [rax],al
   140011540:	cmp    al,0x3f
   140011542:	js     0x1400115b1
   140011544:	ins    BYTE PTR es:[rdi],dx
   140011545:	and    BYTE PTR [rsi+0x65],dh
   140011548:	jb     0x1400115bd
   14001154a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140011551:	xor    BYTE PTR [rdx],ah
   140011553:	and    BYTE PTR [rbp+0x6e],ah
   140011556:	movsxd ebp,DWORD PTR [rdi+0x64]
   140011559:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140011560:	rex.RX sub eax,0x73202238
   140011566:	je     0x1400115c9
   140011568:	outs   dx,BYTE PTR ds:[rsi]
   140011569:	fs (bad) 
   14001156b:	ins    BYTE PTR es:[rdi],dx
   14001156c:	outs   dx,DWORD PTR ds:[rsi]
   14001156d:	outs   dx,BYTE PTR ds:[rsi]
   14001156e:	gs cmp eax,0x73657922
   140011574:	and    bh,BYTE PTR [rdi]
   140011576:	ds or  eax,0x2d213c0a
   14001157c:	sub    eax,0x706f4320
   140011581:	jns    0x1400115f5
   140011583:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001158a:	sub    DWORD PTR [rax],esp
   14001158c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140011594:	je     0x1400115b6
   140011596:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011598:	jb     0x14001160a
   14001159a:	outs   dx,DWORD PTR ds:[rsi]
   14001159b:	jb     0x1400115fe
   14001159d:	je     0x140011608
   14001159f:	outs   dx,DWORD PTR ds:[rsi]
   1400115a0:	outs   dx,BYTE PTR ds:[rsi]
   1400115a1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e53d4
   1400115a7:	cmp    al,0x61
   1400115a9:	jae    0x14001161e
   1400115ab:	gs ins DWORD PTR es:[rdi],dx
   1400115ad:	(bad)  
   1400115ae:	ins    BYTE PTR es:[rdi],dx
   1400115af:	jns    0x1400115d1
   1400115b1:	js     0x140011620
   1400115b3:	ins    BYTE PTR es:[rdi],dx
   1400115b4:	outs   dx,BYTE PTR ds:[rsi]
   1400115b5:	jae    0x1400115f4
   1400115b7:	and    dh,BYTE PTR [rbp+0x72]
   1400115ba:	outs   dx,BYTE PTR ds:[rsi]
   1400115bb:	cmp    dh,BYTE PTR [rbx+0x63]
   1400115be:	push   0x73616d65
   1400115c3:	sub    eax,0x7263696d
   1400115c8:	outs   dx,DWORD PTR ds:[rsi]
   1400115c9:	jae    0x14001163a
   1400115cb:	data16 je 0x1400115fb
   1400115ce:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400115d1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400115d4:	ins    DWORD PTR es:[rdi],dx
   1400115d5:	cs jbe 0x140011609
   1400115d8:	and    ah,BYTE PTR [rax]
   1400115da:	ins    DWORD PTR es:[rdi],dx
   1400115db:	(bad)  
   1400115dc:	outs   dx,BYTE PTR ds:[rsi]
   1400115dd:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400115e4:	jb     0x140011659
   1400115e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400115ed:	xor    BYTE PTR [rdx],ah
   1400115ef:	ds or  eax,0x72743c0a
   1400115f5:	jne    0x14001166a
   1400115f7:	je     0x140011642
   1400115f9:	outs   dx,BYTE PTR ds:[rsi]
   1400115fa:	outs   dx,WORD PTR ds:[rsi]
   1400115fc:	and    BYTE PTR [rax+0x6d],bh
   1400115ff:	ins    BYTE PTR es:[rdi],dx
   140011600:	outs   dx,BYTE PTR ds:[rsi]
   140011601:	jae    0x140011640
   140011603:	and    dh,BYTE PTR [rbp+0x72]
   140011606:	outs   dx,BYTE PTR ds:[rsi]
   140011607:	cmp    dh,BYTE PTR [rbx+0x63]
   14001160a:	push   0x73616d65
   14001160f:	sub    eax,0x7263696d
   140011614:	outs   dx,DWORD PTR ds:[rsi]
   140011615:	jae    0x140011686
   140011617:	data16 je 0x140011647
   14001161a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001161d:	cmp    ah,BYTE PTR [rcx+0x73]
   140011620:	ins    DWORD PTR es:[rdi],dx
   140011621:	cs jbe 0x140011657
   140011624:	and    bh,BYTE PTR [rsi]
   140011626:	or     eax,0x2020200a
   14001162b:	and    BYTE PTR [rbx+rsi*2],bh
   14001162e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140011632:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001163a:	and    BYTE PTR [rax],ah
   14001163c:	and    BYTE PTR [rax],ah
   14001163e:	and    BYTE PTR [rax],ah
   140011640:	cmp    al,0x72
   140011642:	gs jno 0x1400116ba
   140011645:	gs jae 0x1400116bc
   140011648:	gs fs push rax
   14001164b:	jb     0x1400116b6
   14001164d:	jbe    0x1400116b8
   14001164f:	ins    BYTE PTR es:[rdi],dx
   140011650:	gs addr32 gs jae 0x140011693
   140011655:	or     eax,0x2020200a
   14001165a:	and    BYTE PTR [rax],ah
   14001165c:	and    BYTE PTR [rax],ah
   14001165e:	and    BYTE PTR [rax],ah
   140011660:	and    BYTE PTR [rax],ah
   140011662:	and    BYTE PTR [rdx+rsi*2],bh
   140011665:	gs jno 0x1400116dd
   140011668:	gs jae 0x1400116df
   14001166b:	gs fs rex.RB js 0x1400116d5
   140011670:	movsxd esi,DWORD PTR [rbp+0x74]
   140011673:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001167a:	ins    BYTE PTR es:[rdi],dx
   14001167b:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001167f:	gs ins BYTE PTR es:[rdi],dx
   140011681:	cmp    eax,0x49736122
   140011686:	outs   dx,BYTE PTR ds:[rsi]
   140011687:	jbe    0x1400116f8
   140011689:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001168d:	and    BYTE PTR [rbp+0x69],dh
   140011690:	movsxd esp,DWORD PTR [r11+0x65]
   140011694:	jae    0x140011709
   140011696:	cmp    eax,0x6c616622
   14001169b:	jae    0x140011702
   14001169d:	and    ch,BYTE PTR [rdi]
   14001169f:	ds or  eax,0x2020200a
   1400116a5:	and    BYTE PTR [rax],ah
   1400116a7:	and    BYTE PTR [rax],ah
   1400116a9:	and    BYTE PTR [rdi+rbp*1],bh
   1400116ac:	jb     0x140011713
   1400116ae:	jno    0x140011725
   1400116b0:	gs jae 0x140011727
   1400116b3:	gs fs push rax
   1400116b6:	jb     0x140011721
   1400116b8:	jbe    0x140011723
   1400116ba:	ins    BYTE PTR es:[rdi],dx
   1400116bb:	gs addr32 gs jae 0x1400116fe
   1400116c0:	or     eax,0x2020200a
   1400116c5:	and    BYTE PTR [rdi+rbp*1],bh
   1400116c8:	jae    0x14001172f
   1400116ca:	movsxd esi,DWORD PTR [rbp+0x72]
   1400116cd:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   1400116d5:	je     0x140011749
   1400116d7:	jne    0x14001174c
   1400116d9:	je     0x140011724
   1400116db:	outs   dx,BYTE PTR ds:[rsi]
   1400116dc:	outs   dx,WORD PTR ds:[rsi]
   1400116de:	ds or  eax,0x612f3c0a
   1400116e4:	jae    0x140011759
   1400116e6:	gs ins DWORD PTR es:[rdi],dx
   1400116e8:	(bad)  
   1400116e9:	ins    BYTE PTR es:[rdi],dx
   1400116ea:	jns    0x14001172a
   1400116ec:	or     eax,0x800a0d0a
   1400116f1:	add    al,0x34
   1400116f3:	add    BYTE PTR [rax],al
   1400116f5:	add    BYTE PTR [rsi+0x0],dl
   1400116f8:	push   rbx
   1400116f9:	add    BYTE PTR [rdi+0x0],bl
   1400116fc:	push   rsi
   1400116fd:	add    BYTE PTR [rbp+0x0],al
   140011700:	push   rdx
   140011701:	add    BYTE PTR [rbx+0x0],dl
   140011704:	rex.WB add BYTE PTR [r15+0x0],cl
   140011708:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14001170c:	rex.WB add BYTE PTR [r14+0x0],cl
   140011710:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140011714:	add    BYTE PTR [rax],al
   140011716:	add    BYTE PTR [rax],al
   140011718:	mov    ebp,0xfeef04
   14001171d:	add    BYTE PTR [rcx],al
   14001171f:	add    BYTE PTR [rax],al
   140011721:	add    BYTE PTR [rdi],cl
   140011723:	add    BYTE PTR [rax],al
   140011725:	add    BYTE PTR [rax],bpl
   140011728:	add    BYTE PTR [rax],al
   14001172a:	sldt   WORD PTR [rax]
   14001172d:	add    BYTE PTR [rbx],bl
   14001172f:	(bad)  
   140011730:	(bad)  
   140011731:	add    BYTE PTR [rax],al
   140011733:	add    BYTE PTR [rax],al
   140011735:	add    BYTE PTR [rax],al
   140011737:	add    BYTE PTR [rax+rax*1],al
   14001173a:	add    al,0x0
   14001173c:	add    DWORD PTR [rax],eax
	...
   14001174a:	add    BYTE PTR [rax],al
   14001174c:	fiadd  WORD PTR [rbx]
   14001174e:	add    BYTE PTR [rax],al
   140011750:	add    DWORD PTR [rax],eax
   140011752:	push   rbx
   140011753:	add    BYTE PTR [rax+rax*1+0x72],dh
   140011757:	add    BYTE PTR [rcx+0x0],ch
   14001175a:	outs   dx,BYTE PTR ds:[rsi]
   14001175b:	add    BYTE PTR [rdi+0x0],ah
   14001175e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140011762:	ins    BYTE PTR es:[rdi],dx
   140011763:	add    BYTE PTR [rbp+0x0],ah
   140011766:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001176a:	data16 add BYTE PTR [rdi+0x0],ch
   14001176e:	add    BYTE PTR [rax],al
   140011770:	mov    edx,0x1000003
   140011775:	add    BYTE PTR [rax],dh
   140011777:	add    BYTE PTR [rax],dh
   140011779:	add    BYTE PTR [rax],dh
   14001177b:	add    BYTE PTR [rax],dh
   14001177d:	add    BYTE PTR [rax],dh
   14001177f:	add    BYTE PTR [rax+rax*1],dh
   140011782:	add    BYTE PTR [r8+rax*1],r14b
   140011786:	add    BYTE PTR [rax],al
   140011788:	rex.WR add BYTE PTR [rsi],r10b
   14001178b:	add    BYTE PTR [rcx],al
   14001178d:	add    BYTE PTR [rbx+0x0],al
   140011790:	outs   dx,DWORD PTR ds:[rsi]
   140011791:	add    BYTE PTR [rbp+0x0],ch
   140011794:	jo     0x140011796
   140011796:	(bad)  
   140011797:	add    BYTE PTR [rsi+0x0],ch
   14001179a:	jns    0x14001179c
   14001179c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400117a0:	ins    DWORD PTR es:[rdi],dx
   1400117a1:	add    BYTE PTR [rbp+0x0],ah
   1400117a4:	add    BYTE PTR [rax],al
   1400117a6:	add    BYTE PTR [rax],al
   1400117a8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400117ac:	movsxd eax,DWORD PTR [rax]
   1400117ae:	jb     0x1400117b0
   1400117b0:	outs   dx,DWORD PTR ds:[rsi]
   1400117b1:	add    BYTE PTR [rbx+0x0],dh
   1400117b4:	outs   dx,DWORD PTR ds:[rsi]
   1400117b5:	add    BYTE PTR [rsi+0x0],ah
   1400117b8:	je     0x1400117ba
   1400117ba:	and    BYTE PTR [rax],al
   1400117bc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400117c0:	jb     0x1400117c2
   1400117c2:	jo     0x1400117c4
   1400117c4:	outs   dx,DWORD PTR ds:[rsi]
   1400117c5:	add    BYTE PTR [rdx+0x0],dh
   1400117c8:	(bad)  
   1400117c9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400117cd:	add    BYTE PTR [rdi+0x0],ch
   1400117d0:	outs   dx,BYTE PTR ds:[rsi]
   1400117d1:	add    BYTE PTR [rax],al
   1400117d3:	add    BYTE PTR [rsi+0x0],cl
   1400117d6:	adc    eax,DWORD PTR [rax]
   1400117d8:	add    DWORD PTR [rax],eax
   1400117da:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400117de:	ins    BYTE PTR es:[rdi],dx
   1400117df:	add    BYTE PTR [rbp+0x0],ah
   1400117e2:	add    BYTE PTR [rbp+0x0],r12b
   1400117e6:	jae    0x1400117e8
   1400117e8:	movsxd eax,DWORD PTR [rax]
   1400117ea:	jb     0x1400117ec
   1400117ec:	imul   eax,DWORD PTR [rax],0x740070
   1400117f2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400117f8:	add    BYTE PTR [rax],al
   1400117fa:	add    BYTE PTR [rax],al
   1400117fc:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011800:	movsxd eax,DWORD PTR [rax]
   140011802:	jb     0x140011804
   140011804:	outs   dx,DWORD PTR ds:[rsi]
   140011805:	add    BYTE PTR [rbx+0x0],dh
   140011808:	outs   dx,DWORD PTR ds:[rsi]
   140011809:	add    BYTE PTR [rsi+0x0],ah
   14001180c:	je     0x14001180e
   14001180e:	and    BYTE PTR [rax],al
   140011810:	rex.WB add BYTE PTR [r13+0x0],cl
   140011814:	add    BYTE PTR [r8],r12b
   140011817:	add    BYTE PTR [rdx],dh
   140011819:	add    BYTE PTR [rax],dh
   14001181b:	add    BYTE PTR [rcx],dh
   14001181d:	add    BYTE PTR [rdx],dh
   14001181f:	add    BYTE PTR [rax],al
   140011821:	add    BYTE PTR [rax],al
   140011823:	add    BYTE PTR [rdx+0x0],al
   140011826:	adc    DWORD PTR [rax],eax
   140011828:	add    DWORD PTR [rax],eax
   14001182a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001182e:	ins    BYTE PTR es:[rdi],dx
   14001182f:	add    BYTE PTR [rbp+0x0],ah
   140011832:	push   rsi
   140011833:	add    BYTE PTR [rbp+0x0],ah
   140011836:	jb     0x140011838
   140011838:	jae    0x14001183a
   14001183a:	imul   eax,DWORD PTR [rax],0x6e006f
   140011840:	add    BYTE PTR [rax],al
   140011842:	add    BYTE PTR [rax],al
   140011844:	xor    DWORD PTR [rax],eax
   140011846:	xor    eax,0x30002e00
   14001184b:	add    BYTE PTR [rsi],ch
   14001184d:	add    BYTE PTR [rcx],dh
   14001184f:	add    BYTE PTR [rax],dh
   140011851:	add    BYTE PTR [rdx],dh
   140011853:	add    BYTE PTR [rax+rax*1],dh
   140011856:	xor    BYTE PTR [rax],al
   140011858:	add    BYTE PTR cs:[rcx],dh
   14001185b:	add    BYTE PTR [rsi],dh
   14001185d:	add    BYTE PTR [rbx],dh
   14001185f:	add    BYTE PTR [rax],bh
   140011861:	add    BYTE PTR [rax+rax*1],dh
   140011864:	add    BYTE PTR [rax],al
   140011866:	add    BYTE PTR [rax],al
   140011868:	cmp    al,BYTE PTR [rax]
   14001186a:	or     eax,0x49000100
   14001186f:	add    BYTE PTR [rsi+0x0],ch
   140011872:	je     0x140011874
   140011874:	add    BYTE PTR gs:[rdx+0x0],dh
   140011878:	outs   dx,BYTE PTR ds:[rsi]
   140011879:	add    BYTE PTR [rcx+0x0],ah
   14001187c:	ins    BYTE PTR es:[rdi],dx
   14001187d:	add    BYTE PTR [rsi+0x0],cl
   140011880:	(bad)  
   140011881:	add    BYTE PTR [rbp+0x0],ch
   140011884:	add    BYTE PTR gs:[rax],al
   140011887:	add    BYTE PTR [rcx+0x0],cl
   14001188a:	rex.WRB add BYTE PTR [r8+rax*1+0x43],r10b
   14001188f:	add    BYTE PTR [rax+rax*1+0x4e],cl
   140011893:	add    BYTE PTR [rdi+0x0],dl
   140011896:	pop    rdx
   140011897:	add    BYTE PTR [rsi],ch
   140011899:	add    BYTE PTR [rbp+0x0],ah
   14001189c:	js     0x14001189e
   14001189e:	add    BYTE PTR gs:[rax],al
   1400118a1:	add    BYTE PTR [rax],al
   1400118a3:	add    BYTE PTR [rax+rax*1+0x10034],cl
   1400118aa:	rex.WR add BYTE PTR [rbp+0x0],r12b
   1400118ae:	add    BYTE PTR [ecx+0x0],ah
   1400118b2:	ins    BYTE PTR es:[rdi],dx
   1400118b3:	add    BYTE PTR [rbx+0x0],al
   1400118b6:	outs   dx,DWORD PTR ds:[rsi]
   1400118b7:	add    BYTE PTR [rax+0x0],dh
   1400118ba:	jns    0x1400118bc
   1400118bc:	jb     0x1400118be
   1400118be:	imul   eax,DWORD PTR [rax],0x680067
   1400118c4:	je     0x1400118c6
   1400118c6:	add    BYTE PTR [rax],al
   1400118c8:	test   eax,0x32002000
   1400118cd:	add    BYTE PTR [rax],dh
   1400118cf:	add    BYTE PTR [rcx],dh
   1400118d1:	add    BYTE PTR [rdx],dh
   1400118d3:	add    BYTE PTR [rax],ah
   1400118d5:	add    BYTE PTR [rbp+0x0],cl
   1400118d8:	imul   eax,DWORD PTR [rax],0x720063
   1400118de:	outs   dx,DWORD PTR ds:[rsi]
   1400118df:	add    BYTE PTR [rbx+0x0],dh
   1400118e2:	outs   dx,DWORD PTR ds:[rsi]
   1400118e3:	add    BYTE PTR [rsi+0x0],ah
   1400118e6:	je     0x1400118e8
   1400118e8:	and    BYTE PTR [rax],al
   1400118ea:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400118ee:	jb     0x1400118f0
   1400118f0:	jo     0x1400118f2
   1400118f2:	outs   dx,DWORD PTR ds:[rsi]
   1400118f3:	add    BYTE PTR [rdx+0x0],dh
   1400118f6:	(bad)  
   1400118f7:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400118fb:	add    BYTE PTR [rdi+0x0],ch
   1400118fe:	outs   dx,BYTE PTR ds:[rsi]
   1400118ff:	add    BYTE PTR [rsi],ch
   140011901:	add    BYTE PTR [rax],ah
   140011903:	add    BYTE PTR [rax],ah
   140011905:	add    BYTE PTR [rcx+0x0],al
   140011908:	ins    BYTE PTR es:[rdi],dx
   140011909:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001190d:	add    BYTE PTR [rdx+0x0],dh
   140011910:	imul   eax,DWORD PTR [rax],0x680067
   140011916:	je     0x140011918
   140011918:	jae    0x14001191a
   14001191a:	and    BYTE PTR [rax],al
   14001191c:	jb     0x14001191e
   14001191e:	add    BYTE PTR gs:[rbx+0x0],dh
   140011922:	add    BYTE PTR gs:[rdx+0x0],dh
   140011926:	jbe    0x140011928
   140011928:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14001192d:	add    BYTE PTR [rax],al
   14001192f:	add    BYTE PTR [rax],ch
   140011931:	add    DWORD PTR [rax+0x4c000100],eax
   140011937:	add    BYTE PTR [rbp+0x0],ah
   14001193a:	add    BYTE PTR [ecx+0x0],ah
   14001193e:	ins    BYTE PTR es:[rdi],dx
   14001193f:	add    BYTE PTR [rax+rax*1+0x72],dl
   140011943:	add    BYTE PTR [rcx+0x0],ah
   140011946:	add    BYTE PTR fs:[rbp+0x0],ah
   14001194a:	ins    DWORD PTR es:[rdi],dx
   14001194b:	add    BYTE PTR [rcx+0x0],ah
   14001194e:	jb     0x140011950
   140011950:	imul   eax,DWORD PTR [rax],0x73
   140011953:	add    BYTE PTR [rax],al
   140011955:	add    BYTE PTR [rax],al
   140011957:	add    BYTE PTR [rbp+0x0],cl
   14001195a:	imul   eax,DWORD PTR [rax],0x720063
   140011960:	outs   dx,DWORD PTR ds:[rsi]
   140011961:	add    BYTE PTR [rbx+0x0],dh
   140011964:	outs   dx,DWORD PTR ds:[rsi]
   140011965:	add    BYTE PTR [rsi+0x0],ah
   140011968:	je     0x14001196a
   14001196a:	sub    BYTE PTR [rax],al
   14001196c:	push   rdx
   14001196d:	add    BYTE PTR [rcx],ch
   14001196f:	add    BYTE PTR [rax],ah
   140011971:	add    BYTE PTR [rcx+0x0],ch
   140011974:	jae    0x140011976
   140011976:	and    BYTE PTR [rax],al
   140011978:	(bad)  
   140011979:	add    BYTE PTR [rax],ah
   14001197b:	add    BYTE PTR [rdx+0x0],dh
   14001197e:	add    BYTE PTR gs:[rdi+0x0],ah
   140011982:	imul   eax,DWORD PTR [rax],0x740073
   140011988:	add    BYTE PTR gs:[rdx+0x0],dh
   14001198c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140011991:	add    BYTE PTR [rax+rax*1+0x72],dh
   140011995:	add    BYTE PTR [rcx+0x0],ah
   140011998:	add    BYTE PTR fs:[rbp+0x0],ah
   14001199c:	ins    DWORD PTR es:[rdi],dx
   14001199d:	add    BYTE PTR [rcx+0x0],ah
   1400119a0:	jb     0x1400119a2
   1400119a2:	imul   eax,DWORD PTR [rax],0x20
   1400119a5:	add    BYTE PTR [rdi+0x0],ch
   1400119a8:	data16 add BYTE PTR [rax],ah
   1400119ab:	add    BYTE PTR [rbp+0x0],cl
   1400119ae:	imul   eax,DWORD PTR [rax],0x720063
   1400119b4:	outs   dx,DWORD PTR ds:[rsi]
   1400119b5:	add    BYTE PTR [rbx+0x0],dh
   1400119b8:	outs   dx,DWORD PTR ds:[rsi]
   1400119b9:	add    BYTE PTR [rsi+0x0],ah
   1400119bc:	je     0x1400119be
   1400119be:	and    BYTE PTR [rax],al
   1400119c0:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400119c4:	jb     0x1400119c6
   1400119c6:	jo     0x1400119c8
   1400119c8:	outs   dx,DWORD PTR ds:[rsi]
   1400119c9:	add    BYTE PTR [rdx+0x0],dh
   1400119cc:	(bad)  
   1400119cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400119d1:	add    BYTE PTR [rdi+0x0],ch
   1400119d4:	outs   dx,BYTE PTR ds:[rsi]
   1400119d5:	add    BYTE PTR [rsi],ch
   1400119d7:	add    BYTE PTR [rax],ah
   1400119d9:	add    BYTE PTR [rdi+0x0],dl
   1400119dc:	imul   eax,DWORD PTR [rax],0x64006e
   1400119e2:	outs   dx,DWORD PTR ds:[rsi]
   1400119e3:	add    BYTE PTR [rdi+0x0],dh
   1400119e6:	jae    0x1400119e8
   1400119e8:	sub    BYTE PTR [rax],al
   1400119ea:	push   rdx
   1400119eb:	add    BYTE PTR [rcx],ch
   1400119ed:	add    BYTE PTR [rax],ah
   1400119ef:	add    BYTE PTR [rcx+0x0],ch
   1400119f2:	jae    0x1400119f4
   1400119f4:	and    BYTE PTR [rax],al
   1400119f6:	(bad)  
   1400119f7:	add    BYTE PTR [rax],ah
   1400119f9:	add    BYTE PTR [rdx+0x0],dh
   1400119fc:	add    BYTE PTR gs:[rdi+0x0],ah
   140011a00:	imul   eax,DWORD PTR [rax],0x740073
   140011a06:	add    BYTE PTR gs:[rdx+0x0],dh
   140011a0a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140011a0f:	add    BYTE PTR [rax+rax*1+0x72],dh
   140011a13:	add    BYTE PTR [rcx+0x0],ah
   140011a16:	add    BYTE PTR fs:[rbp+0x0],ah
   140011a1a:	ins    DWORD PTR es:[rdi],dx
   140011a1b:	add    BYTE PTR [rcx+0x0],ah
   140011a1e:	jb     0x140011a20
   140011a20:	imul   eax,DWORD PTR [rax],0x20
   140011a23:	add    BYTE PTR [rdi+0x0],ch
   140011a26:	data16 add BYTE PTR [rax],ah
   140011a29:	add    BYTE PTR [rbp+0x0],cl
   140011a2c:	imul   eax,DWORD PTR [rax],0x720063
   140011a32:	outs   dx,DWORD PTR ds:[rsi]
   140011a33:	add    BYTE PTR [rbx+0x0],dh
   140011a36:	outs   dx,DWORD PTR ds:[rsi]
   140011a37:	add    BYTE PTR [rsi+0x0],ah
   140011a3a:	je     0x140011a3c
   140011a3c:	and    BYTE PTR [rax],al
   140011a3e:	rex.XB add BYTE PTR [r15+0x0],bpl
   140011a42:	jb     0x140011a44
   140011a44:	jo     0x140011a46
   140011a46:	outs   dx,DWORD PTR ds:[rsi]
   140011a47:	add    BYTE PTR [rdx+0x0],dh
   140011a4a:	(bad)  
   140011a4b:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011a4f:	add    BYTE PTR [rdi+0x0],ch
   140011a52:	outs   dx,BYTE PTR ds:[rsi]
   140011a53:	add    BYTE PTR [rsi],ch
   140011a55:	add    BYTE PTR [rax],al
   140011a57:	add    BYTE PTR [rdx+0x0],al
   140011a5a:	or     eax,0x4f000100
   140011a5f:	add    BYTE PTR [rdx+0x0],dh
   140011a62:	imul   eax,DWORD PTR [rax],0x690067
   140011a68:	outs   dx,BYTE PTR ds:[rsi]
   140011a69:	add    BYTE PTR [rcx+0x0],ah
   140011a6c:	ins    BYTE PTR es:[rdi],dx
   140011a6d:	add    BYTE PTR [rsi+0x0],al
   140011a70:	imul   eax,DWORD PTR [rax],0x65006c
   140011a76:	outs   dx,BYTE PTR ds:[rsi]
   140011a77:	add    BYTE PTR [rcx+0x0],ah
   140011a7a:	ins    DWORD PTR es:[rdi],dx
   140011a7b:	add    BYTE PTR [rbp+0x0],ah
   140011a7e:	add    BYTE PTR [rax],al
   140011a80:	rex.WB add BYTE PTR [r13+0x0],cl
   140011a84:	push   rsp
   140011a85:	add    BYTE PTR [rbx+0x0],al
   140011a88:	rex.WR add BYTE PTR [rsi+0x0],r9b
   140011a8c:	push   rdi
   140011a8d:	add    BYTE PTR [rdx+0x0],bl
   140011a90:	add    BYTE PTR cs:[rbp+0x0],ah
   140011a94:	js     0x140011a96
   140011a96:	add    BYTE PTR gs:[rax],al
   140011a99:	add    BYTE PTR [rax],al
   140011a9b:	add    BYTE PTR [rsi+0x0],al
   140011a9e:	adc    eax,DWORD PTR [rax]
   140011aa0:	add    DWORD PTR [rax],eax
   140011aa2:	push   rax
   140011aa3:	add    BYTE PTR [rdx+0x0],dh
   140011aa6:	outs   dx,DWORD PTR ds:[rsi]
   140011aa7:	add    BYTE PTR [rax+rax*1+0x75],ah
   140011aab:	add    BYTE PTR [rbx+0x0],ah
   140011aae:	je     0x140011ab0
   140011ab0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011ab4:	ins    DWORD PTR es:[rdi],dx
   140011ab5:	add    BYTE PTR [rbp+0x0],ah
   140011ab8:	add    BYTE PTR [rax],al
   140011aba:	add    BYTE PTR [rax],al
   140011abc:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011ac0:	movsxd eax,DWORD PTR [rax]
   140011ac2:	jb     0x140011ac4
   140011ac4:	outs   dx,DWORD PTR ds:[rsi]
   140011ac5:	add    BYTE PTR [rbx+0x0],dh
   140011ac8:	outs   dx,DWORD PTR ds:[rsi]
   140011ac9:	add    BYTE PTR [rsi+0x0],ah
   140011acc:	je     0x140011ace
   140011ace:	and    BYTE PTR [rax],al
   140011ad0:	rex.WB add BYTE PTR [r13+0x0],cl
   140011ad4:	add    BYTE PTR [r8],r12b
   140011ad7:	add    BYTE PTR [rdx],dh
   140011ad9:	add    BYTE PTR [rax],dh
   140011adb:	add    BYTE PTR [rcx],dh
   140011add:	add    BYTE PTR [rdx],dh
   140011adf:	add    BYTE PTR [rax],al
   140011ae1:	add    BYTE PTR [rax],al
   140011ae3:	add    BYTE PTR [rsi+0x0],al
   140011ae6:	adc    DWORD PTR [rax],eax
   140011ae8:	add    DWORD PTR [rax],eax
   140011aea:	push   rax
   140011aeb:	add    BYTE PTR [rdx+0x0],dh
   140011aee:	outs   dx,DWORD PTR ds:[rsi]
   140011aef:	add    BYTE PTR [rax+rax*1+0x75],ah
   140011af3:	add    BYTE PTR [rbx+0x0],ah
   140011af6:	je     0x140011af8
   140011af8:	push   rsi
   140011af9:	add    BYTE PTR [rbp+0x0],ah
   140011afc:	jb     0x140011afe
   140011afe:	jae    0x140011b00
   140011b00:	imul   eax,DWORD PTR [rax],0x6e006f
   140011b06:	add    BYTE PTR [rax],al
   140011b08:	xor    DWORD PTR [rax],eax
   140011b0a:	xor    eax,0x30002e00
   140011b0f:	add    BYTE PTR [rsi],ch
   140011b11:	add    BYTE PTR [rcx],dh
   140011b13:	add    BYTE PTR [rax],dh
   140011b15:	add    BYTE PTR [rdx],dh
   140011b17:	add    BYTE PTR [rax+rax*1],dh
   140011b1a:	xor    BYTE PTR [rax],al
   140011b1c:	add    BYTE PTR cs:[rcx],dh
   140011b1f:	add    BYTE PTR [rsi],dh
   140011b21:	add    BYTE PTR [rbx],dh
   140011b23:	add    BYTE PTR [rax],bh
   140011b25:	add    BYTE PTR [rax+rax*1],dh
   140011b28:	add    BYTE PTR [rax],al
   140011b2a:	add    BYTE PTR [rax],al
   140011b2c:	add    BYTE PTR [rax],r8b
   140011b2f:	add    BYTE PTR [rcx],al
   140011b31:	add    BYTE PTR [rsi+0x0],dl
   140011b34:	(bad)  
   140011b35:	add    BYTE PTR [rdx+0x0],dh
   140011b38:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140011b3c:	ins    BYTE PTR es:[rdi],dx
   140011b3d:	add    BYTE PTR [rbp+0x0],ah
   140011b40:	rex.WB add BYTE PTR [r14+0x0],bpl
   140011b44:	data16 add BYTE PTR [rdi+0x0],ch
   140011b48:	add    BYTE PTR [rax],al
   140011b4a:	add    BYTE PTR [rax],al
   140011b4c:	and    al,0x0
   140011b4e:	add    al,0x0
   140011b50:	add    BYTE PTR [rax],al
   140011b52:	push   rsp
   140011b53:	add    BYTE PTR [rdx+0x0],dh
   140011b56:	(bad)  
   140011b57:	add    BYTE PTR [rsi+0x0],ch
   140011b5a:	jae    0x140011b5c
   140011b5c:	ins    BYTE PTR es:[rdi],dx
   140011b5d:	add    BYTE PTR [rcx+0x0],ah
   140011b60:	je     0x140011b62
   140011b62:	imul   eax,DWORD PTR [rax],0x6e006f
   140011b68:	add    BYTE PTR [rax],al
   140011b6a:	add    BYTE PTR [rax],al
   140011b6c:	add    BYTE PTR [rax],al
   140011b6e:	in     al,0x4
   140011b70:	sub    BYTE PTR [rax],al
   140011b72:	add    BYTE PTR [rax],al
   140011b74:	xor    DWORD PTR [rax],eax
   140011b76:	add    BYTE PTR [rax],al
   140011b78:	xor    DWORD PTR [rax],eax
   140011b7a:	add    BYTE PTR [rax],al
   140011b7c:	add    DWORD PTR [rax],eax
   140011b7e:	or     BYTE PTR [rax],al
   140011b80:	add    BYTE PTR [rax],al
   140011b82:	add    BYTE PTR [rax],al
   140011b84:	hlt    
   140011b85:	or     DWORD PTR [rax],eax
   140011b87:	add    ah,al
   140011b89:	(bad)  
   140011b8a:	add    BYTE PTR [rax],al
   140011b8c:	(bad)  
   140011b8d:	(bad)  
	...
   140011b9e:	add    BYTE PTR [rax],0x0
   140011ba1:	add    BYTE PTR [rax],0x0
   140011ba4:	add    BYTE PTR [rax+0x800080],al
   140011baa:	add    BYTE PTR [rax],al
   140011bac:	add    BYTE PTR [rax],0x80
   140011baf:	add    BYTE PTR [rax-0x3fffff80],al
   140011bb5:	rol    al,0x0
   140011bb8:	rcr    ah,0xc0
   140011bbb:	add    al,dh
   140011bbd:	retf   0xa6
   140011bc0:	add    al,0x4
   140011bc2:	add    al,0x0
   140011bc4:	or     BYTE PTR [rax],cl
   140011bc6:	or     BYTE PTR [rax],al
   140011bc8:	or     al,0xc
   140011bca:	or     al,0x0
   140011bcc:	adc    DWORD PTR [rcx],edx
   140011bce:	adc    DWORD PTR [rax],eax
   140011bd0:	(bad)  
   140011bd1:	(bad)  
   140011bd2:	(bad)  
   140011bd3:	add    BYTE PTR [rsp+rbx*1],bl
   140011bd6:	sbb    al,0x0
   140011bd8:	and    ah,BYTE PTR [rdx]
   140011bda:	and    al,BYTE PTR [rax]
   140011bdc:	sub    DWORD PTR [rcx],ebp
   140011bde:	sub    DWORD PTR [rax],eax
   140011be0:	push   rbp
   140011be1:	push   rbp
   140011be2:	push   rbp
   140011be3:	add    BYTE PTR [rbp+0x4d],cl
   140011be6:	rex.WRB add BYTE PTR [r10+0x42],r8b
   140011bea:	rex.X add BYTE PTR [rcx],dil
   140011bed:	cmp    DWORD PTR [rcx],edi
   140011bef:	add    BYTE PTR [rax+0x5000ff7c],al
   140011bf5:	push   rax
   140011bf6:	inc    DWORD PTR [rax]
   140011bf8:	xchg   ebx,eax
   140011bf9:	add    dh,dl
   140011bfb:	add    bh,bh
   140011bfd:	in     al,dx
   140011bfe:	int3   
   140011bff:	add    dh,al
   140011c01:	(bad)  
   140011c02:	out    dx,eax
   140011c03:	add    dh,dl
   140011c05:	out    0xe7,eax
   140011c07:	add    BYTE PTR [rax+0xada9],dl
   140011c0d:	add    BYTE PTR [rbx],dh
   140011c0f:	add    BYTE PTR [rax],al
   140011c11:	add    BYTE PTR [rsi+0x0],ah
   140011c14:	add    BYTE PTR [rax],al
   140011c16:	cdq    
   140011c17:	add    BYTE PTR [rax],al
   140011c19:	add    ah,cl
   140011c1b:	add    BYTE PTR [rax],al
   140011c1d:	xor    eax,DWORD PTR [rax]
   140011c1f:	add    BYTE PTR [rax],al
   140011c21:	xor    esi,DWORD PTR [rbx]
   140011c23:	add    BYTE PTR [rax],al
   140011c25:	xor    esp,DWORD PTR [rsi+0x0]
   140011c28:	add    BYTE PTR [rbx],dh
   140011c2a:	cdq    
   140011c2b:	add    BYTE PTR [rax],al
   140011c2d:	xor    ecx,esp
   140011c2f:	add    BYTE PTR [rax],al
   140011c31:	xor    edi,edi
   140011c33:	add    BYTE PTR [rax],al
   140011c35:	data16 add BYTE PTR [rax],al
   140011c38:	add    BYTE PTR [rsi+0x33],ah
   140011c3b:	add    BYTE PTR [rax],al
   140011c3d:	data16 data16 add BYTE PTR [rax],al
   140011c41:	cwd    
   140011c43:	add    BYTE PTR [rax],al
   140011c45:	data16 int3 
   140011c47:	add    BYTE PTR [rax],al
   140011c49:	inc    WORD PTR [rax]
   140011c4c:	add    BYTE PTR [rcx-0x67000000],bl
   140011c52:	xor    eax,DWORD PTR [rax]
   140011c54:	add    BYTE PTR [rcx-0x66ffff9a],bl
   140011c5a:	cdq    
   140011c5b:	add    BYTE PTR [rax],al
   140011c5d:	cdq    
   140011c5e:	int3   
   140011c5f:	add    BYTE PTR [rax],al
   140011c61:	cdq    
   140011c62:	inc    DWORD PTR [rax]
   140011c64:	add    ah,cl
   140011c66:	add    BYTE PTR [rax],al
   140011c68:	add    ah,cl
   140011c6a:	xor    eax,DWORD PTR [rax]
   140011c6c:	add    ah,cl
   140011c6e:	data16 add BYTE PTR [rax],al
   140011c71:	int3   
   140011c72:	cdq    
   140011c73:	add    BYTE PTR [rax],al
   140011c75:	int3   
   140011c76:	int3   
   140011c77:	add    BYTE PTR [rax],al
   140011c79:	int3   
   140011c7a:	inc    DWORD PTR [rax]
   140011c7c:	add    bh,bh
   140011c7e:	data16 add BYTE PTR [rax],al
   140011c81:	call   FWORD PTR [rcx-0x33010000]
   140011c87:	add    BYTE PTR [rbx],dh
   140011c89:	add    BYTE PTR [rax],al
   140011c8b:	add    BYTE PTR [rbx],dh
   140011c8d:	add    BYTE PTR [rbx],dh
   140011c8f:	add    BYTE PTR [rbx],dh
   140011c91:	add    BYTE PTR [rsi+0x0],ah
   140011c94:	xor    eax,DWORD PTR [rax]
   140011c96:	cdq    
   140011c97:	add    BYTE PTR [rbx],dh
   140011c99:	add    ah,cl
   140011c9b:	add    BYTE PTR [rbx],dh
   140011c9d:	add    bh,bh
   140011c9f:	add    BYTE PTR [rbx],dh
   140011ca1:	xor    eax,DWORD PTR [rax]
   140011ca3:	add    BYTE PTR [rbx],dh
   140011ca5:	xor    esi,DWORD PTR [rbx]
   140011ca7:	add    BYTE PTR [rbx],dh
   140011ca9:	xor    esp,DWORD PTR [rsi+0x0]
   140011cac:	xor    esi,DWORD PTR [rbx]
   140011cae:	cdq    
   140011caf:	add    BYTE PTR [rbx],dh
   140011cb1:	xor    ecx,esp
   140011cb3:	add    BYTE PTR [rbx],dh
   140011cb5:	xor    edi,edi
   140011cb7:	add    BYTE PTR [rbx],dh
   140011cb9:	data16 add BYTE PTR [rax],al
   140011cbc:	xor    esp,DWORD PTR [rsi+0x33]
   140011cbf:	add    BYTE PTR [rbx],dh
   140011cc1:	data16 data16 add BYTE PTR [rbx],dh
   140011cc5:	cwd    
   140011cc7:	add    BYTE PTR [rbx],dh
   140011cc9:	data16 int3 
   140011ccb:	add    BYTE PTR [rbx],dh
   140011ccd:	inc    WORD PTR [rax]
   140011cd0:	xor    ebx,DWORD PTR [rcx-0x66cd0000]
   140011cd6:	xor    eax,DWORD PTR [rax]
   140011cd8:	xor    ebx,DWORD PTR [rcx-0x66ccff9a]
   140011cde:	cdq    
   140011cdf:	add    BYTE PTR [rbx],dh
   140011ce1:	cdq    
   140011ce2:	int3   
   140011ce3:	add    BYTE PTR [rbx],dh
   140011ce5:	cdq    
   140011ce6:	inc    DWORD PTR [rax]
   140011ce8:	xor    ecx,esp
   140011cea:	add    BYTE PTR [rax],al
   140011cec:	xor    ecx,esp
   140011cee:	xor    eax,DWORD PTR [rax]
   140011cf0:	xor    ecx,esp
   140011cf2:	data16 add BYTE PTR [rbx],dh
   140011cf5:	int3   
   140011cf6:	cdq    
   140011cf7:	add    BYTE PTR [rbx],dh
   140011cf9:	int3   
   140011cfa:	int3   
   140011cfb:	add    BYTE PTR [rbx],dh
   140011cfd:	int3   
   140011cfe:	inc    DWORD PTR [rax]
   140011d00:	xor    edi,edi
   140011d02:	xor    eax,DWORD PTR [rax]
   140011d04:	xor    edi,edi
   140011d06:	data16 add BYTE PTR [rbx],dh
   140011d09:	call   FWORD PTR [rcx-0x3300cd00]
   140011d0f:	add    BYTE PTR [rbx],dh
   140011d11:	(bad)  
   140011d12:	inc    DWORD PTR [rax]
   140011d14:	data16 add BYTE PTR [rax],al
   140011d17:	add    BYTE PTR [rsi+0x0],ah
   140011d1a:	xor    eax,DWORD PTR [rax]
   140011d1c:	data16 add BYTE PTR [rsi+0x0],ah
   140011d20:	data16 add BYTE PTR [rcx-0x33ff9a00],bl
   140011d27:	add    BYTE PTR [rsi+0x0],ah
   140011d2a:	inc    DWORD PTR [rax]
   140011d2c:	xor    ax,WORD PTR [rax]
   140011d2f:	add    BYTE PTR [rsi+0x33],ah
   140011d32:	xor    eax,DWORD PTR [rax]
   140011d34:	xor    sp,WORD PTR [rsi+0x0]
   140011d38:	xor    bx,WORD PTR [rcx-0x33cc9a00]
   140011d3f:	add    BYTE PTR [rsi+0x33],ah
   140011d42:	inc    DWORD PTR [rax]
   140011d44:	data16 data16 add BYTE PTR [rax],al
   140011d48:	data16 xor ax,WORD PTR [rax]
   140011d4c:	data16 data16 data16 add BYTE PTR [rsi+0x66],ah
   140011d52:	cdq    
   140011d53:	add    BYTE PTR [rsi+0x66],ah
   140011d56:	int3   
   140011d57:	add    BYTE PTR [rsi-0x67],ah
   140011d5a:	add    BYTE PTR [rax],al
   140011d5c:	cwd    
   140011d5e:	xor    eax,DWORD PTR [rax]
   140011d60:	cwd    
   140011d62:	data16 add BYTE PTR [rsi-0x67],ah
   140011d66:	cdq    
   140011d67:	add    BYTE PTR [rsi-0x67],ah
   140011d6a:	int3   
   140011d6b:	add    BYTE PTR [rsi-0x67],ah
   140011d6e:	inc    DWORD PTR [rax]
   140011d70:	data16 int3 
   140011d72:	add    BYTE PTR [rax],al
   140011d74:	data16 int3 
   140011d76:	xor    eax,DWORD PTR [rax]
   140011d78:	data16 int3 
   140011d7a:	cdq    
   140011d7b:	add    BYTE PTR [rsi-0x34],ah
   140011d7e:	int3   
   140011d7f:	add    BYTE PTR [rsi-0x34],ah
   140011d82:	inc    DWORD PTR [rax]
   140011d84:	inc    WORD PTR [rax]
   140011d87:	add    BYTE PTR [rsi-0x1],ah
   140011d8a:	xor    eax,DWORD PTR [rax]
   140011d8c:	call   DWORD PTR [rcx-0x33009a00]
   140011d93:	add    ah,cl
   140011d95:	add    bh,bh
   140011d97:	add    bh,bh
   140011d99:	add    ah,cl
   140011d9b:	add    BYTE PTR [rcx-0x66ffff67],bl
   140011da1:	xor    ebx,DWORD PTR [rcx-0x66ff6700]
   140011da7:	add    BYTE PTR [rcx-0x66ff3400],bl
   140011dad:	add    BYTE PTR [rax],al
   140011daf:	add    BYTE PTR [rcx-0x66ffcccd],bl
   140011db5:	add    BYTE PTR [rsi+0x0],ah
   140011db8:	cdq    
   140011db9:	xor    ecx,esp
   140011dbb:	add    BYTE PTR [rcx-0x66ff0100],bl
   140011dc1:	data16 add BYTE PTR [rax],al
   140011dc4:	cdq    
   140011dc5:	xor    ax,WORD PTR [rax]
   140011dc8:	cdq    
   140011dc9:	xor    esp,DWORD PTR [rsi+0x0]
   140011dcc:	cdq    
   140011dcd:	cwd    
   140011dcf:	add    BYTE PTR [rcx-0x66ff339a],bl
   140011dd5:	xor    edi,edi
   140011dd7:	add    BYTE PTR [rcx-0x66ffcc67],bl
   140011ddd:	cdq    
   140011dde:	data16 add BYTE PTR [rcx-0x66ff6667],bl
   140011de5:	cdq    
   140011de6:	int3   
   140011de7:	add    BYTE PTR [rcx-0x66ff0067],bl
   140011ded:	int3   
   140011dee:	add    BYTE PTR [rax],al
   140011df0:	cdq    
   140011df1:	int3   
   140011df2:	xor    eax,DWORD PTR [rax]
   140011df4:	data16 int3 
   140011df6:	data16 add BYTE PTR [rcx-0x66ff6634],bl
   140011dfd:	int3   
   140011dfe:	int3   
   140011dff:	add    BYTE PTR [rcx-0x66ff0034],bl
   140011e05:	inc    DWORD PTR [rax]
   140011e07:	add    BYTE PTR [rcx-0x66ffcc01],bl
   140011e0d:	int3   
   140011e0e:	data16 add BYTE PTR [rcx-0x66ff6601],bl
   140011e15:	dec    esp
   140011e17:	add    BYTE PTR [rcx-0x33ff0001],bl
   140011e1d:	add    BYTE PTR [rax],al
   140011e1f:	add    BYTE PTR [rcx-0x33ffcd00],bl
   140011e25:	add    BYTE PTR [rsi+0x0],ah
   140011e28:	int3   
   140011e29:	add    BYTE PTR [rcx-0x33ff3400],bl
   140011e2f:	add    BYTE PTR [rcx-0x33ffffcd],bl
   140011e35:	xor    esi,DWORD PTR [rbx]
   140011e37:	add    ah,cl
   140011e39:	xor    esp,DWORD PTR [rsi+0x0]
   140011e3c:	int3   
   140011e3d:	xor    ebx,DWORD PTR [rcx-0x33cc3400]
   140011e43:	add    ah,cl
   140011e45:	xor    edi,edi
   140011e47:	add    ah,cl
   140011e49:	data16 add BYTE PTR [rax],al
   140011e4c:	int3   
   140011e4d:	xor    ax,WORD PTR [rax]
   140011e50:	cdq    
   140011e51:	data16 data16 add ah,cl
   140011e55:	cwd    
   140011e57:	add    ah,cl
   140011e59:	data16 int3 
   140011e5b:	add    BYTE PTR [rcx-0x33ff009a],bl
   140011e61:	cdq    
   140011e62:	add    BYTE PTR [rax],al
   140011e64:	int3   
   140011e65:	cdq    
   140011e66:	xor    eax,DWORD PTR [rax]
   140011e68:	int3   
   140011e69:	cdq    
   140011e6a:	data16 add ah,cl
   140011e6d:	cdq    
   140011e6e:	cdq    
   140011e6f:	add    ah,cl
   140011e71:	cdq    
   140011e72:	int3   
   140011e73:	add    ah,cl
   140011e75:	cdq    
   140011e76:	inc    DWORD PTR [rax]
   140011e78:	int3   
   140011e79:	int3   
   140011e7a:	add    BYTE PTR [rax],al
   140011e7c:	int3   
   140011e7d:	int3   
   140011e7e:	xor    eax,DWORD PTR [rax]
   140011e80:	int3   
   140011e81:	int3   
   140011e82:	data16 add ah,cl
   140011e85:	int3   
   140011e86:	cdq    
   140011e87:	add    ah,cl
   140011e89:	int3   
   140011e8a:	int3   
   140011e8b:	add    ah,cl
   140011e8d:	int3   
   140011e8e:	inc    DWORD PTR [rax]
   140011e90:	int3   
   140011e91:	inc    DWORD PTR [rax]
   140011e93:	add    ah,cl
   140011e95:	push   QWORD PTR [rbx]
   140011e97:	add    BYTE PTR [rcx-0x33ff9901],bl
   140011e9d:	call   FWORD PTR [rcx-0x33003400]
   140011ea3:	add    ah,cl
   140011ea5:	(bad)  
   140011ea6:	inc    DWORD PTR [rax]
   140011ea8:	int3   
   140011ea9:	add    BYTE PTR [rbx],dh
   140011eab:	add    bh,bh
   140011ead:	add    BYTE PTR [rsi+0x0],ah
   140011eb0:	inc    DWORD PTR [rax]
   140011eb2:	cdq    
   140011eb3:	add    ah,cl
   140011eb5:	xor    eax,DWORD PTR [rax]
   140011eb7:	add    bh,bh
   140011eb9:	xor    esi,DWORD PTR [rbx]
   140011ebb:	add    bh,bh
   140011ebd:	xor    esp,DWORD PTR [rsi+0x0]
   140011ec0:	push   QWORD PTR [rbx]
   140011ec2:	cdq    
   140011ec3:	add    bh,bh
   140011ec5:	xor    ecx,esp
   140011ec7:	add    bh,bh
   140011ec9:	xor    edi,edi
   140011ecb:	add    bh,bh
   140011ecd:	data16 add BYTE PTR [rax],al
   140011ed0:	jmp    QWORD PTR [rsi+0x33]
   140011ed3:	add    ah,cl
   140011ed5:	data16 data16 add bh,bh
   140011ed9:	cwd    
   140011edb:	add    bh,bh
   140011edd:	data16 int3 
   140011edf:	add    ah,cl
   140011ee1:	inc    WORD PTR [rax]
   140011ee4:	call   FWORD PTR [rcx-0x66010000]
   140011eea:	xor    eax,DWORD PTR [rax]
   140011eec:	call   FWORD PTR [rcx-0x6600ff9a]
   140011ef2:	cdq    
   140011ef3:	add    bh,bh
   140011ef5:	cdq    
   140011ef6:	int3   
   140011ef7:	add    bh,bh
   140011ef9:	cdq    
   140011efa:	inc    DWORD PTR [rax]
   140011efc:	dec    esp
   140011efe:	add    BYTE PTR [rax],al
   140011f00:	dec    esp
   140011f02:	xor    eax,DWORD PTR [rax]
   140011f04:	dec    esp
   140011f06:	data16 add bh,bh
   140011f09:	int3   
   140011f0a:	cdq    
   140011f0b:	add    bh,bh
   140011f0d:	int3   
   140011f0e:	int3   
   140011f0f:	add    bh,bh
   140011f11:	int3   
   140011f12:	inc    DWORD PTR [rax]
   140011f14:	(bad)  
   140011f15:	push   QWORD PTR [rbx]
   140011f17:	add    ah,cl
   140011f19:	jmp    QWORD PTR [rsi+0x0]
   140011f1c:	(bad)  
   140011f1d:	call   FWORD PTR [rcx-0x33000100]
   140011f23:	add    BYTE PTR [rsi+0x66],ah
   140011f26:	inc    DWORD PTR [rax]
   140011f28:	jmp    WORD PTR [rsi+0x0]
   140011f2c:	data16 (bad) 
   140011f2e:	inc    DWORD PTR [rax]
   140011f30:	jmp    QWORD PTR [rsi+0x66]
   140011f33:	add    bh,bh
   140011f35:	inc    WORD PTR [rax]
   140011f38:	(bad)  
   140011f39:	jmp    QWORD PTR [rsi+0x0]
   140011f3c:	and    DWORD PTR [rax],eax
   140011f3e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011f3f:	add    BYTE PTR [rdi+0x5f],bl
   140011f42:	pop    rdi
   140011f43:	add    BYTE PTR [rdi+0x77],dh
   140011f46:	ja     0x140011f48
   140011f48:	xchg   BYTE PTR [rsi-0x6969ff7a],al
   140011f4e:	xchg   esi,eax
   140011f4f:	add    bl,cl
   140011f51:	retf   
   140011f52:	retf   
   140011f53:	add    BYTE PTR [rdx-0x28ff4d4e],dh
   140011f59:	xlat   BYTE PTR ds:[rbx]
   140011f5a:	xlat   BYTE PTR ds:[rbx]
   140011f5b:	add    ch,bl
   140011f5d:	fstp   st(5)
   140011f5f:	add    bl,ah
   140011f61:	jrcxz  0x140011f46
   140011f63:	add    dl,ch
   140011f65:	(bad)  
   140011f66:	(bad)  
   140011f67:	add    cl,dh
   140011f69:	icebp  
   140011f6a:	icebp  
   140011f6b:	add    al,bh
   140011f6d:	clc    
   140011f6e:	clc    
   140011f6f:	add    al,dh
   140011f71:	sti    
   140011f72:	inc    DWORD PTR [rax]
   140011f74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011f75:	movabs al,ds:0x80808000a0
   140011f7e:	inc    DWORD PTR [rax]
   140011f80:	add    bh,bh
   140011f82:	add    BYTE PTR [rax],al
   140011f84:	add    bh,bh
   140011f86:	inc    DWORD PTR [rax]
   140011f88:	inc    DWORD PTR [rax]
   140011f8a:	add    BYTE PTR [rax],al
   140011f8c:	inc    DWORD PTR [rax]
   140011f8e:	inc    DWORD PTR [rax]
   140011f90:	(bad)  
   140011f91:	inc    DWORD PTR [rax]
   140011f93:	add    bh,bh
   140011f95:	(bad)  
   140011f96:	inc    DWORD PTR [rax]
   140011f98:	(bad)  
   140011f99:	(bad)  
   140011f9a:	(bad)  
   140011f9b:	(bad)  
   140011f9c:	(bad)  
   140011f9d:	(bad)  
   140011f9e:	(bad)  
   140011f9f:	(bad)  
   140011fa0:	(bad)  
   140011fa1:	(bad)  
   140011fa2:	(bad)  
   140011fa3:	(bad)  
   140011fa4:	(bad)  
   140011fa5:	(bad)  
   140011fa6:	(bad)  
   140011fa7:	(bad)  
   140011fa8:	(bad)  
   140011fa9:	(bad)  
   140011faa:	(bad)  
   140011fab:	(bad)  
   140011fac:	(bad)  
   140011fad:	(bad)  
   140011fae:	(bad)  
   140011faf:	(bad)  
   140011fb0:	(bad)  
   140011fb1:	(bad)  
   140011fb2:	(bad)  
   140011fb3:	(bad)  
   140011fb4:	(bad)  
   140011fb5:	(bad)  
   140011fb6:	(bad)  
   140011fb7:	(bad)  
   140011fb8:	(bad)  
   140011fb9:	(bad)  
   140011fba:	(bad)  
   140011fbb:	(bad)  
   140011fbc:	(bad)  
   140011fbd:	(bad)  
   140011fbe:	(bad)  
   140011fbf:	(bad)  
   140011fc0:	(bad)  
   140011fc1:	(bad)  
   140011fc2:	(bad)  
   140011fc3:	(bad)  
   140011fc4:	(bad)  
   140011fc5:	(bad)  
   140011fc6:	(bad)  
   140011fc7:	(bad)  
   140011fc8:	inc    DWORD PTR [rax]
   140011fca:	add    BYTE PTR [rax],al
   140011fcc:	(bad)  
   140011fcd:	(bad)  
   140011fce:	(bad)  
   140011fcf:	(bad)  
   140011fd0:	(bad)  
   140011fd1:	(bad)  
   140011fd2:	(bad)  
   140011fd3:	(bad)  
   140011fd4:	(bad)  
   140011fd5:	(bad)  
   140011fd6:	(bad)  
   140011fd7:	(bad)  
   140011fd8:	dec    DWORD PTR [rdx]
   140011fda:	or     cl,BYTE PTR [rdx]
   140011fdc:	or     cl,BYTE PTR [rdx]
   140011fde:	or     cl,BYTE PTR [rdx]
   140011fe0:	or     cl,BYTE PTR [rdx]
   140011fe2:	or     cl,BYTE PTR [rdx]
   140011fe4:	or     cl,BYTE PTR [rdx]
   140011fe6:	or     cl,BYTE PTR [rdx]
   140011fe8:	or     cl,BYTE PTR [rdx]
   140011fea:	or     cl,BYTE PTR [rdx]
   140011fec:	or     cl,BYTE PTR [rdx]
   140011fee:	or     cl,BYTE PTR [rdx]
   140011ff0:	or     cl,BYTE PTR [rdx]
   140011ff2:	or     bh,bh
   140011ff4:	(bad)  
   140011ff5:	(bad)  
   140011ff6:	(bad)  
   140011ff7:	(bad)  
   140011ff8:	(bad)  
   140011ff9:	(bad)  
   140011ffa:	(bad)  
   140011ffb:	(bad)  
   140011ffc:	inc    DWORD PTR [rax]
   140011ffe:	add    BYTE PTR [rax],al
   140012000:	(bad)  
   140012001:	(bad)  
   140012002:	(bad)  
   140012003:	(bad)  
   140012004:	(bad)  
   140012005:	(bad)  
   140012006:	(bad)  
   140012007:	(bad)  
   140012008:	(bad)  
   140012009:	(bad)  
   14001200a:	(bad)  
   14001200b:	(bad)  
   14001200c:	dec    DWORD PTR [rdx]
   14001200e:	or     cl,BYTE PTR [rdx]
   140012010:	or     cl,BYTE PTR [rdx]
   140012012:	or     cl,BYTE PTR [rdx]
   140012014:	or     cl,BYTE PTR [rdx]
   140012016:	or     cl,BYTE PTR [rdx]
   140012018:	or     cl,BYTE PTR [rdx]
   14001201a:	or     cl,BYTE PTR [rdx]
   14001201c:	or     cl,BYTE PTR [rdx]
   14001201e:	or     cl,BYTE PTR [rdx]
   140012020:	or     cl,BYTE PTR [rdx]
   140012022:	or     cl,BYTE PTR [rdx]
   140012024:	or     cl,BYTE PTR [rdx]
   140012026:	or     bh,bh
   140012028:	(bad)  
   140012029:	(bad)  
   14001202a:	(bad)  
   14001202b:	(bad)  
   14001202c:	(bad)  
   14001202d:	(bad)  
   14001202e:	(bad)  
   14001202f:	(bad)  
   140012030:	inc    DWORD PTR [rax]
   140012032:	add    BYTE PTR [rax],al
   140012034:	(bad)  
   140012035:	(bad)  
   140012036:	(bad)  
   140012037:	(bad)  
   140012038:	(bad)  
   140012039:	(bad)  
   14001203a:	(bad)  
   14001203b:	(bad)  
   14001203c:	(bad)  
   14001203d:	(bad)  
   14001203e:	(bad)  
   14001203f:	dec    DWORD PTR [rdx]
   140012041:	(bad)  
   140012042:	(bad)  
   140012043:	(bad)  
   140012044:	cmp    al,0xc
   140012046:	cmp    al,0xc
   140012048:	cmp    al,0xc
   14001204a:	cmp    al,0xc
   14001204c:	cmp    al,0xc
   14001204e:	cmp    al,0xc
   140012050:	cmp    al,0xc
   140012052:	cmp    al,0xc
   140012054:	cmp    al,0xc
   140012056:	cmp    al,0xc
   140012058:	cmp    al,0xc
   14001205a:	cmp    al,0xa
   14001205c:	(bad)  
   14001205d:	(bad)  
   14001205e:	(bad)  
   14001205f:	(bad)  
   140012060:	(bad)  
   140012061:	(bad)  
   140012062:	(bad)  
   140012063:	(bad)  
   140012064:	inc    DWORD PTR [rax]
   140012066:	add    BYTE PTR [rax],al
   140012068:	(bad)  
   140012069:	(bad)  
   14001206a:	(bad)  
   14001206b:	(bad)  
   14001206c:	(bad)  
   14001206d:	(bad)  
   14001206e:	(bad)  
   14001206f:	(bad)  
   140012070:	(bad)  
   140012071:	(bad)  
   140012072:	(bad)  
   140012073:	dec    DWORD PTR [rdi]
   140012075:	adc    BYTE PTR [rax],dl
   140012077:	adc    BYTE PTR [rax],dl
   140012079:	adc    BYTE PTR [rax],dl
   14001207b:	adc    BYTE PTR [rax],dl
   14001207d:	adc    BYTE PTR [rax],dl
   14001207f:	adc    BYTE PTR [rax],dl
   140012081:	adc    BYTE PTR [rax],dl
   140012083:	adc    BYTE PTR [rax],dl
   140012085:	adc    BYTE PTR [rax],dl
   140012087:	adc    BYTE PTR [rax],dl
   140012089:	adc    BYTE PTR [rax],dl
   14001208b:	adc    BYTE PTR [rax],dl
   14001208d:	adc    BYTE PTR [rdi+0xa],bl
   140012090:	(bad)  
   140012091:	(bad)  
   140012092:	(bad)  
   140012093:	(bad)  
   140012094:	(bad)  
   140012095:	(bad)  
   140012096:	(bad)  
   140012097:	(bad)  
   140012098:	inc    DWORD PTR [rax]
   14001209a:	add    BYTE PTR [rax],al
   14001209c:	(bad)  
   14001209d:	(bad)  
   14001209e:	(bad)  
   14001209f:	(bad)  
   1400120a0:	(bad)  
   1400120a1:	(bad)  
   1400120a2:	(bad)  
   1400120a3:	(bad)  
   1400120a4:	(bad)  
   1400120a5:	(bad)  
   1400120a6:	(bad)  
   1400120a7:	dec    DWORD PTR [rdi]
   1400120a9:	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
   1400120b7:	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 pop di
   1400120c3:	or     bh,bh
   1400120c5:	(bad)  
   1400120c6:	(bad)  
   1400120c7:	(bad)  
   1400120c8:	(bad)  
   1400120c9:	(bad)  
   1400120ca:	(bad)  
   1400120cb:	(bad)  
   1400120cc:	inc    DWORD PTR [rax]
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	(bad)  
   1400120d1:	(bad)  
   1400120d2:	(bad)  
   1400120d3:	(bad)  
   1400120d4:	(bad)  
   1400120d5:	(bad)  
   1400120d6:	(bad)  
   1400120d7:	(bad)  
   1400120d8:	(bad)  
   1400120d9:	(bad)  
   1400120da:	(bad)  
   1400120db:	call   QWORD PTR [rax]
   1400120dd:	(bad)  
   1400120de:	(bad)  
   1400120df:	or     ch,ah
   1400120e1:	in     al,dx
   1400120e2:	in     al,dx
   1400120e3:	in     al,dx
   1400120e4:	in     al,dx
   1400120e5:	in     al,dx
   1400120e6:	in     al,dx
   1400120e7:	in     al,dx
   1400120e8:	in     al,dx
   1400120e9:	in     al,dx
   1400120ea:	in     al,dx
   1400120eb:	in     al,dx
   1400120ec:	in     al,dx
   1400120ed:	in     al,dx
   1400120ee:	in     al,dx
   1400120ef:	in     al,dx
   1400120f0:	in     al,dx
   1400120f1:	in     al,dx
   1400120f2:	in     al,dx
   1400120f3:	in     al,dx
   1400120f4:	or     dl,BYTE PTR [rax]
   1400120f6:	data16 or bh,bh
   1400120f9:	(bad)  
   1400120fa:	(bad)  
   1400120fb:	(bad)  
   1400120fc:	(bad)  
   1400120fd:	(bad)  
   1400120fe:	(bad)  
   1400120ff:	(bad)  
   140012100:	inc    DWORD PTR [rax]
   140012102:	add    BYTE PTR [rax],al
   140012104:	(bad)  
   140012105:	(bad)  
   140012106:	(bad)  
   140012107:	(bad)  
   140012108:	(bad)  
   140012109:	(bad)  
   14001210a:	(bad)  
   14001210b:	(bad)  
   14001210c:	(bad)  
   14001210d:	(bad)  
   14001210e:	(bad)  
   14001210f:	dec    DWORD PTR [rdx]
   140012111:	data16 scas al,BYTE PTR es:[rdi]
   140012113:	or     bl,ch
   140012115:	fstp   st(5)
   140012117:	repz repz hlt 
   14001211a:	(bad)  
   14001211b:	(bad)  
   14001211c:	(bad)  
   14001211d:	(bad)  
   14001211e:	(bad)  
   14001211f:	(bad)  
   140012120:	(bad)  
   140012121:	(bad)  
   140012122:	(bad)  
   140012123:	(bad)  
   140012124:	(bad)  
   140012125:	push   rsp
   140012127:	hlt    
   140012128:	or     dl,BYTE PTR [rax]
   14001212a:	data16 or bh,bh
   14001212d:	(bad)  
   14001212e:	(bad)  
   14001212f:	(bad)  
   140012130:	(bad)  
   140012131:	(bad)  
   140012132:	(bad)  
   140012133:	(bad)  
   140012134:	inc    DWORD PTR [rax]
   140012136:	add    BYTE PTR [rax],al
   140012138:	(bad)  
   140012139:	(bad)  
   14001213a:	(bad)  
   14001213b:	(bad)  
   14001213c:	(bad)  
   14001213d:	(bad)  
   14001213e:	(bad)  
   14001213f:	(bad)  
   140012140:	(bad)  
   140012141:	(bad)  
   140012142:	(bad)  
   140012143:	dec    DWORD PTR [rdx]
   140012145:	data16 scas al,BYTE PTR es:[rdi]
   140012147:	or     bl,ch
   140012149:	fstp   st(5)
   14001214b:	repz repz hlt 
   14001214e:	(bad)  
   14001214f:	(bad)  
   140012150:	(bad)  
   140012151:	(bad)  
   140012152:	(bad)  
   140012153:	(bad)  
   140012154:	(bad)  
   140012155:	(bad)  
   140012156:	(bad)  
   140012157:	(bad)  
   140012158:	(bad)  
   140012159:	push   rsp
   14001215b:	hlt    
   14001215c:	or     dl,BYTE PTR [rax]
   14001215e:	data16 or bh,bh
   140012161:	(bad)  
   140012162:	(bad)  
   140012163:	(bad)  
   140012164:	(bad)  
   140012165:	(bad)  
   140012166:	(bad)  
   140012167:	(bad)  
   140012168:	inc    DWORD PTR [rax]
   14001216a:	add    BYTE PTR [rax],al
   14001216c:	(bad)  
   14001216d:	(bad)  
   14001216e:	(bad)  
   14001216f:	(bad)  
   140012170:	(bad)  
   140012171:	(bad)  
   140012172:	(bad)  
   140012173:	(bad)  
   140012174:	(bad)  
   140012175:	(bad)  
   140012176:	dec    DWORD PTR [rdx]
   140012178:	data16 scas al,BYTE PTR es:[rdi]
   14001217a:	or     ch,BYTE PTR [rsi-0xc222223]
   140012180:	repz hlt 
   140012182:	(bad)  
   140012183:	(bad)  
   140012184:	(bad)  
   140012185:	(bad)  
   140012186:	(bad)  
   140012187:	(bad)  
   140012188:	(bad)  
   140012189:	(bad)  
   14001218a:	(bad)  
   14001218b:	(bad)  
   14001218c:	(bad)  
   14001218d:	push   rsp
   14001218f:	hlt    
   140012190:	or     dl,BYTE PTR [rax]
   140012192:	data16 or bh,bh
   140012195:	(bad)  
   140012196:	(bad)  
   140012197:	(bad)  
   140012198:	(bad)  
   140012199:	(bad)  
   14001219a:	(bad)  
   14001219b:	(bad)  
   14001219c:	inc    DWORD PTR [rax]
   14001219e:	add    BYTE PTR [rax],al
   1400121a0:	(bad)  
   1400121a1:	(bad)  
   1400121a2:	(bad)  
   1400121a3:	(bad)  
   1400121a4:	(bad)  
   1400121a5:	(bad)  
   1400121a6:	(bad)  
   1400121a7:	(bad)  
   1400121a8:	(bad)  
   1400121a9:	(bad)  
   1400121aa:	dec    DWORD PTR [rdx]
   1400121ac:	data16 scas al,BYTE PTR es:[rdi]
   1400121ae:	or     ch,BYTE PTR [rsi-0xc222223]
   1400121b4:	repz hlt 
   1400121b6:	(bad)  
   1400121b7:	(bad)  
   1400121b8:	(bad)  
   1400121b9:	(bad)  
   1400121ba:	(bad)  
   1400121bb:	(bad)  
   1400121bc:	(bad)  
   1400121bd:	(bad)  
   1400121be:	(bad)  
   1400121bf:	(bad)  
   1400121c0:	(bad)  
   1400121c1:	push   rsp
   1400121c3:	hlt    
   1400121c4:	or     dl,BYTE PTR [rax]
   1400121c6:	data16 or bh,bh
   1400121c9:	(bad)  
   1400121ca:	(bad)  
   1400121cb:	(bad)  
   1400121cc:	(bad)  
   1400121cd:	(bad)  
   1400121ce:	(bad)  
   1400121cf:	(bad)  
   1400121d0:	inc    DWORD PTR [rax]
   1400121d2:	add    BYTE PTR [rax],al
   1400121d4:	(bad)  
   1400121d5:	(bad)  
   1400121d6:	(bad)  
   1400121d7:	(bad)  
   1400121d8:	(bad)  
   1400121d9:	(bad)  
   1400121da:	(bad)  
   1400121db:	(bad)  
   1400121dc:	(bad)  
   1400121dd:	dec    DWORD PTR [rdx]
   1400121df:	data16 scas al,BYTE PTR es:[rdi]
   1400121e1:	or     bl,ch
   1400121e3:	scas   al,BYTE PTR es:[rdi]
   1400121e4:	fstp   st(5)
   1400121e6:	(bad)  
   1400121e8:	repz hlt 
   1400121ea:	(bad)  
   1400121eb:	(bad)  
   1400121ec:	(bad)  
   1400121ed:	(bad)  
   1400121ee:	(bad)  
   1400121ef:	(bad)  
   1400121f0:	(bad)  
   1400121f1:	(bad)  
   1400121f2:	(bad)  
   1400121f3:	(bad)  
   1400121f4:	(bad)  
   1400121f5:	push   rsp
   1400121f7:	hlt    
   1400121f8:	or     dl,BYTE PTR [rax]
   1400121fa:	data16 or bh,bh
   1400121fd:	(bad)  
   1400121fe:	(bad)  
   1400121ff:	(bad)  
   140012200:	(bad)  
   140012201:	(bad)  
   140012202:	(bad)  
   140012203:	(bad)  
   140012204:	inc    DWORD PTR [rax]
   140012206:	add    BYTE PTR [rax],al
   140012208:	(bad)  
   140012209:	(bad)  
   14001220a:	(bad)  
   14001220b:	(bad)  
   14001220c:	(bad)  
   14001220d:	(bad)  
   14001220e:	(bad)  
   14001220f:	(bad)  
   140012210:	dec    DWORD PTR [rdx]
   140012212:	adc    BYTE PTR [rsi-0x52],ah
   140012215:	or     bl,ch
   140012217:	scas   al,BYTE PTR es:[rdi]
   140012218:	fstp   st(5)
   14001221a:	(bad)  
   14001221c:	repz hlt 
   14001221e:	(bad)  
   14001221f:	(bad)  
   140012220:	(bad)  
   140012221:	(bad)  
   140012222:	(bad)  
   140012223:	(bad)  
   140012224:	(bad)  
   140012225:	(bad)  
   140012226:	(bad)  
   140012227:	(bad)  
   140012228:	(bad)  
   140012229:	push   rsp
   14001222b:	hlt    
   14001222c:	or     dl,BYTE PTR [rax]
   14001222e:	data16 or bh,bh
   140012231:	(bad)  
   140012232:	(bad)  
   140012233:	(bad)  
   140012234:	(bad)  
   140012235:	(bad)  
   140012236:	(bad)  
   140012237:	(bad)  
   140012238:	inc    DWORD PTR [rax]
   14001223a:	add    BYTE PTR [rax],al
   14001223c:	(bad)  
   14001223d:	(bad)  
   14001223e:	(bad)  
   14001223f:	(bad)  
   140012240:	(bad)  
   140012241:	(bad)  
   140012242:	(bad)  
   140012243:	dec    DWORD PTR [rdx]
   140012245:	adc    BYTE PTR [rsi-0x52],ah
   140012248:	or     bl,ch
   14001224a:	(bad)  [rsi-0xc222223]
   140012250:	repz hlt 
   140012252:	(bad)  
   140012253:	(bad)  
   140012254:	(bad)  
   140012255:	(bad)  
   140012256:	(bad)  
   140012257:	(bad)  
   140012258:	(bad)  
   140012259:	(bad)  
   14001225a:	(bad)  
   14001225b:	(bad)  
   14001225c:	(bad)  
   14001225d:	push   rsp
   14001225f:	hlt    
   140012260:	or     dl,BYTE PTR [rax]
   140012262:	data16 or bh,bh
   140012265:	(bad)  
   140012266:	(bad)  
   140012267:	(bad)  
   140012268:	(bad)  
   140012269:	(bad)  
   14001226a:	(bad)  
   14001226b:	(bad)  
   14001226c:	inc    DWORD PTR [rax]
   14001226e:	add    BYTE PTR [rax],al
   140012270:	(bad)  
   140012271:	(bad)  
   140012272:	(bad)  
   140012273:	(bad)  
   140012274:	(bad)  
   140012275:	(bad)  
   140012276:	dec    DWORD PTR [rdx]
   140012278:	adc    BYTE PTR [rsi+0x66],ah
   14001227b:	scas   al,BYTE PTR es:[rdi]
   14001227c:	or     bl,ch
   14001227e:	(bad)  [rsi-0xc222223]
   140012284:	repz hlt 
   140012286:	(bad)  
   140012287:	(bad)  
   140012288:	(bad)  
   140012289:	(bad)  
   14001228a:	(bad)  
   14001228b:	(bad)  
   14001228c:	(bad)  
   14001228d:	(bad)  
   14001228e:	(bad)  
   14001228f:	(bad)  
   140012290:	(bad)  
   140012291:	push   rsp
   140012293:	hlt    
   140012294:	or     dl,BYTE PTR [rax]
   140012296:	data16 or bh,bh
   140012299:	(bad)  
   14001229a:	(bad)  
   14001229b:	(bad)  
   14001229c:	(bad)  
   14001229d:	(bad)  
   14001229e:	(bad)  
   14001229f:	(bad)  
   1400122a0:	inc    DWORD PTR [rax]
   1400122a2:	add    BYTE PTR [rax],al
   1400122a4:	(bad)  
   1400122a5:	(bad)  
   1400122a6:	(bad)  
   1400122a7:	dec    DWORD PTR [rdx]
   1400122a9:	or     cl,BYTE PTR [rdx]
   1400122ab:	adc    BYTE PTR [rax],dl
   1400122ad:	data16 scas al,BYTE PTR es:[rdi]
   1400122af:	or     bl,ch
   1400122b1:	fstp   st(5)
   1400122b3:	scas   al,BYTE PTR es:[rdi]
   1400122b4:	fstp   st(5)
   1400122b6:	(bad)  
   1400122b8:	repz hlt 
   1400122ba:	(bad)  
   1400122bb:	(bad)  
   1400122bc:	(bad)  
   1400122bd:	(bad)  
   1400122be:	(bad)  
   1400122bf:	(bad)  
   1400122c0:	(bad)  
   1400122c1:	(bad)  
   1400122c2:	(bad)  
   1400122c3:	(bad)  
   1400122c4:	(bad)  
   1400122c5:	push   rsp
   1400122c7:	hlt    
   1400122c8:	or     dl,BYTE PTR [rax]
   1400122ca:	data16 or bh,bh
   1400122cd:	(bad)  
   1400122ce:	(bad)  
   1400122cf:	(bad)  
   1400122d0:	(bad)  
   1400122d1:	(bad)  
   1400122d2:	(bad)  
   1400122d3:	(bad)  
   1400122d4:	inc    DWORD PTR [rax]
   1400122d6:	add    BYTE PTR [rax],al
   1400122d8:	dec    DWORD PTR [rdx]
   1400122da:	or     cl,BYTE PTR [rdx]
   1400122dc:	(bad)  
   1400122dd:	pcmpgtd mm4,QWORD PTR [rsi+0x66]
   1400122e1:	scas   al,BYTE PTR es:[rdi]
   1400122e2:	or     dh,bl
   1400122e4:	fstp   st(5)
   1400122e6:	(bad)  [rsi-0xc222223]
   1400122ec:	repz hlt 
   1400122ee:	(bad)  
   1400122ef:	(bad)  
   1400122f0:	(bad)  
   1400122f1:	(bad)  
   1400122f2:	(bad)  
   1400122f3:	(bad)  
   1400122f4:	(bad)  
   1400122f5:	(bad)  
   1400122f6:	(bad)  
   1400122f7:	(bad)  
   1400122f8:	(bad)  
   1400122f9:	push   rsp
   1400122fb:	hlt    
   1400122fc:	or     dl,BYTE PTR [rax]
   1400122fe:	data16 or bh,bh
   140012301:	(bad)  
   140012302:	(bad)  
   140012303:	(bad)  
   140012304:	(bad)  
   140012305:	(bad)  
   140012306:	(bad)  
   140012307:	(bad)  
   140012308:	inc    DWORD PTR [rax]
   14001230a:	add    BYTE PTR [rax],al
   14001230c:	or     ah,BYTE PTR [rsi+0x66]
   14001230f:	data16 data16 data16 scas al,BYTE PTR es:[rdi]
   140012313:	scas   al,BYTE PTR es:[rdi]
   140012314:	scas   al,BYTE PTR es:[rdi]
   140012315:	or     dh,bl
   140012317:	repz fstp st(5)
   14001231a:	(bad)  [rsi-0xc222223]
   140012320:	repz hlt 
   140012322:	(bad)  
   140012323:	(bad)  
   140012324:	(bad)  
   140012325:	(bad)  
   140012326:	(bad)  
   140012327:	(bad)  
   140012328:	(bad)  
   140012329:	(bad)  
   14001232a:	(bad)  
   14001232b:	(bad)  
   14001232c:	(bad)  
   14001232d:	push   rsp
   14001232f:	hlt    
   140012330:	or     dl,BYTE PTR [rax]
   140012332:	data16 or bh,bh
   140012335:	(bad)  
   140012336:	(bad)  
   140012337:	(bad)  
   140012338:	(bad)  
   140012339:	(bad)  
   14001233a:	(bad)  
   14001233b:	(bad)  
   14001233c:	inc    DWORD PTR [rax]
   14001233e:	add    BYTE PTR [rax],al
   140012340:	pcmpgtd mm4,QWORD PTR [rsi-0x52]
   140012344:	scas   al,BYTE PTR es:[rdi]
   140012345:	scas   al,BYTE PTR es:[rdi]
   140012346:	or     cl,BYTE PTR [rdx]
   140012348:	or     dh,ah
   14001234a:	repz repz fstp st(5)
   14001234e:	(bad)  [rsi-0xc222223]
   140012354:	repz hlt 
   140012356:	(bad)  
   140012357:	(bad)  
   140012358:	(bad)  
   140012359:	(bad)  
   14001235a:	(bad)  
   14001235b:	(bad)  
   14001235c:	(bad)  
   14001235d:	(bad)  
   14001235e:	(bad)  
   14001235f:	(bad)  
   140012360:	(bad)  
   140012361:	push   rsp
   140012363:	hlt    
   140012364:	or     dl,BYTE PTR [rax]
   140012366:	data16 or bh,bh
   140012369:	(bad)  
   14001236a:	(bad)  
   14001236b:	(bad)  
   14001236c:	(bad)  
   14001236d:	(bad)  
   14001236e:	(bad)  
   14001236f:	(bad)  
   140012370:	inc    DWORD PTR [rax]
   140012372:	add    BYTE PTR [rax],al
   140012374:	pcmpgtd mm5,QWORD PTR [rsi-0xf5f5f6]
   14001237b:	(bad)  
   14001237c:	push   rsp
   14001237e:	repz repz fstp st(5)
   140012382:	(bad)  [rsi-0xc222223]
   140012388:	repz hlt 
   14001238a:	(bad)  
   14001238b:	(bad)  
   14001238c:	(bad)  
   14001238d:	(bad)  
   14001238e:	(bad)  
   14001238f:	(bad)  
   140012390:	(bad)  
   140012391:	(bad)  
   140012392:	(bad)  
   140012393:	(bad)  
   140012394:	(bad)  
   140012395:	push   rsp
   140012397:	hlt    
   140012398:	or     dl,BYTE PTR [rax]
   14001239a:	data16 or bh,bh
   14001239d:	(bad)  
   14001239e:	(bad)  
   14001239f:	(bad)  
   1400123a0:	(bad)  
   1400123a1:	(bad)  
   1400123a2:	(bad)  
   1400123a3:	(bad)  
   1400123a4:	inc    DWORD PTR [rax]
   1400123a6:	add    BYTE PTR [rax],al
   1400123a8:	pcmpgtd mm5,QWORD PTR [rsi-0xf6]
   1400123af:	(bad)  
   1400123b0:	push   rsp
   1400123b2:	repz repz fstp st(5)
   1400123b6:	(bad)  [rsi-0xc222223]
   1400123bc:	repz hlt 
   1400123be:	(bad)  
   1400123bf:	(bad)  
   1400123c0:	(bad)  
   1400123c1:	(bad)  
   1400123c2:	(bad)  
   1400123c3:	(bad)  
   1400123c4:	(bad)  
   1400123c5:	(bad)  
   1400123c6:	(bad)  
   1400123c7:	(bad)  
   1400123c8:	(bad)  
   1400123c9:	push   rsp
   1400123cb:	hlt    
   1400123cc:	or     dl,BYTE PTR [rax]
   1400123ce:	data16 or bh,bh
   1400123d1:	(bad)  
   1400123d2:	(bad)  
   1400123d3:	(bad)  
   1400123d4:	(bad)  
   1400123d5:	(bad)  
   1400123d6:	(bad)  
   1400123d7:	(bad)  
   1400123d8:	inc    DWORD PTR [rax]
   1400123da:	add    BYTE PTR [rax],al
   1400123dc:	adc    al,0x66
   1400123de:	in     al,dx
   1400123df:	or     bh,bh
   1400123e1:	(bad)  
   1400123e2:	(bad)  
   1400123e3:	(bad)  
   1400123e4:	push   rsp
   1400123e6:	repz repz fstp st(5)
   1400123ea:	(bad)  [rsi-0xc222223]
   1400123f0:	repz hlt 
   1400123f2:	(bad)  
   1400123f3:	(bad)  
   1400123f4:	push   rsp
   1400123f6:	hlt    
   1400123f7:	repz icebp 
   1400123f9:	icebp  
   1400123fa:	icebp  
   1400123fb:	icebp  
   1400123fc:	icebp  
   1400123fd:	icebp  
   1400123fe:	icebp  
   1400123ff:	icebp  
   140012400:	or     dl,BYTE PTR [rax]
   140012402:	data16 or bh,bh
   140012405:	(bad)  
   140012406:	(bad)  
   140012407:	(bad)  
   140012408:	(bad)  
   140012409:	(bad)  
   14001240a:	(bad)  
   14001240b:	(bad)  
   14001240c:	inc    DWORD PTR [rax]
   14001240e:	add    BYTE PTR [rax],al
   140012410:	rex.XB
   140012411:	data16 in al,dx
   140012413:	or     bh,bh
   140012415:	(bad)  
   140012416:	(bad)  
   140012417:	(bad)  
   140012418:	push   rsp
   14001241a:	repz repz fstp st(5)
   14001241e:	(bad)  [rsi-0xc222223]
   140012424:	repz hlt 
   140012426:	(bad)  
   140012427:	(bad)  
   140012428:	push   rbx
   14001242a:	repz out dx,eax
   14001242c:	in     eax,dx
   14001242d:	in     eax,dx
   14001242e:	in     al,dx
   14001242f:	in     al,dx
   140012430:	in     al,dx
   140012431:	in     al,dx
   140012432:	in     al,dx
   140012433:	in     al,dx
   140012434:	or     dl,BYTE PTR [rax]
   140012436:	data16 or bh,bh
   140012439:	(bad)  
   14001243a:	(bad)  
   14001243b:	(bad)  
   14001243c:	(bad)  
   14001243d:	(bad)  
   14001243e:	(bad)  
   14001243f:	(bad)  
   140012440:	inc    DWORD PTR [rax]
   140012442:	add    BYTE PTR [rax],al
   140012444:	rex.XB
   140012445:	data16 in al,dx
   140012447:	or     bh,bh
   140012449:	(bad)  
   14001244a:	(bad)  
   14001244b:	(bad)  
   14001244c:	push   rsp
   14001244e:	repz repz fstp st(5)
   140012452:	(bad)  [rsi-0xc222223]
   140012458:	repz hlt 
   14001245a:	(bad)  
   14001245b:	(bad)  
   14001245c:	push   rbx
   14001245e:	repz out dx,eax
   140012460:	in     eax,dx
   140012461:	in     eax,dx
   140012462:	in     al,dx
   140012463:	in     al,dx
   140012464:	in     al,dx
   140012465:	in     al,dx
   140012466:	in     al,dx
   140012467:	in     al,dx
   140012468:	or     dl,BYTE PTR [rax]
   14001246a:	data16 or bh,bh
   14001246d:	(bad)  
   14001246e:	(bad)  
   14001246f:	(bad)  
   140012470:	(bad)  
   140012471:	(bad)  
   140012472:	(bad)  
   140012473:	(bad)  
   140012474:	inc    DWORD PTR [rax]
   140012476:	add    BYTE PTR [rax],al
   140012478:	rex.XB
   140012479:	data16 in al,dx
   14001247b:	or     bh,bh
   14001247d:	(bad)  
   14001247e:	(bad)  
   14001247f:	(bad)  
   140012480:	push   rsp
   140012482:	repz repz fstp st(5)
   140012486:	(bad)  [rsi-0xc222223]
   14001248c:	repz hlt 
   14001248e:	(bad)  
   14001248f:	(bad)  
   140012490:	push   rsp
   140012492:	hlt    
   140012493:	repz mov esp,0x6d6dedbc
   140012499:	ins    DWORD PTR es:[rdi],dx
   14001249a:	ins    DWORD PTR es:[rdi],dx
   14001249b:	ins    DWORD PTR es:[rdi],dx
   14001249c:	or     dl,BYTE PTR [rax]
   14001249e:	data16 or bh,bh
   1400124a1:	(bad)  
   1400124a2:	(bad)  
   1400124a3:	(bad)  
   1400124a4:	(bad)  
   1400124a5:	(bad)  
   1400124a6:	(bad)  
   1400124a7:	(bad)  
   1400124a8:	inc    DWORD PTR [rax]
   1400124aa:	add    BYTE PTR [rax],al
   1400124ac:	adc    al,0x66
   1400124ae:	in     al,dx
   1400124af:	or     bh,bh
   1400124b1:	(bad)  
   1400124b2:	(bad)  
   1400124b3:	(bad)  
   1400124b4:	push   rsp
   1400124b6:	repz repz fstp st(5)
   1400124ba:	(bad)  [rsi-0xc222223]
   1400124c0:	repz hlt 
   1400124c2:	(bad)  
   1400124c3:	push   rsp
   1400124c5:	push   rsp
   1400124c7:	hlt    
   1400124c8:	repz mov esp,0x6d6dedbc
   1400124ce:	ins    DWORD PTR es:[rdi],dx
   1400124cf:	ins    DWORD PTR es:[rdi],dx
   1400124d0:	ins    DWORD PTR es:[rdi],dx
   1400124d1:	or     cl,BYTE PTR [rdx]
   1400124d3:	or     bh,bh
   1400124d5:	(bad)  
   1400124d6:	(bad)  
   1400124d7:	(bad)  
   1400124d8:	(bad)  
   1400124d9:	(bad)  
   1400124da:	(bad)  
   1400124db:	(bad)  
   1400124dc:	inc    DWORD PTR [rax]
   1400124de:	add    BYTE PTR [rax],al
   1400124e0:	adc    al,0x66
   1400124e2:	in     al,dx
   1400124e3:	or     bh,bh
   1400124e5:	(bad)  
   1400124e6:	(bad)  
   1400124e7:	(bad)  
   1400124e8:	push   rsp
   1400124ea:	repz repz fstp st(5)
   1400124ee:	(bad)  [rsi-0xc222223]
   1400124f4:	repz hlt 
   1400124f6:	(bad)  
   1400124f7:	dec    DWORD PTR [rdx]
   1400124f9:	or     cl,BYTE PTR [rdx]
   1400124fb:	or     cl,BYTE PTR [rdx]
   1400124fd:	or     cl,BYTE PTR [rdx]
   1400124ff:	or     cl,BYTE PTR [rdx]
   140012501:	or     cl,BYTE PTR [rdx]
   140012503:	or     al,0xa
   140012505:	or     cl,BYTE PTR [rdx]
   140012507:	or     bh,bh
   140012509:	(bad)  
   14001250a:	(bad)  
   14001250b:	(bad)  
   14001250c:	(bad)  
   14001250d:	(bad)  
   14001250e:	(bad)  
   14001250f:	(bad)  
   140012510:	inc    DWORD PTR [rax]
   140012512:	add    BYTE PTR [rax],al
   140012514:	adc    al,0x66
   140012516:	in     al,dx
   140012517:	or     bh,bh
   140012519:	(bad)  
   14001251a:	(bad)  
   14001251b:	(bad)  
   14001251c:	push   rsp
   14001251e:	repz repz fstp st(5)
   140012522:	(bad)  [rsi-0xc222223]
   140012528:	repz hlt 
   14001252a:	or     cl,BYTE PTR [rdx]
   14001252c:	xor    BYTE PTR [rdi],dh
   14001252e:	xor    BYTE PTR [rbx],al
   140012530:	sub    DWORD PTR [rdx],esp
   140012532:	and    ah,BYTE PTR [rdx]
   140012534:	and    ah,BYTE PTR [rdx]
   140012536:	and    bl,BYTE PTR [rip+0xa232923]        # 0x14a244e5f
   14001253c:	(bad)  
   14001253d:	(bad)  
   14001253e:	(bad)  
   14001253f:	(bad)  
   140012540:	(bad)  
   140012541:	(bad)  
   140012542:	(bad)  
   140012543:	(bad)  
   140012544:	inc    DWORD PTR [rax]
   140012546:	add    BYTE PTR [rax],al
   140012548:	rex.XB
   140012549:	data16 in al,dx
   14001254b:	or     bh,bh
   14001254d:	(bad)  
   14001254e:	(bad)  
   14001254f:	(bad)  
   140012550:	push   rsp
   140012552:	repz repz fstp st(5)
   140012556:	(bad)  [rsi-0xc222223]
   14001255c:	repz hlt 
   14001255e:	(bad)  
   14001255f:	dec    DWORD PTR [rdx]
   140012561:	jns    0x1400125bb
   140012563:	pop    rsi
   140012564:	(bad)  
   140012565:	xor    BYTE PTR [rbx],al
   140012567:	add    ebp,DWORD PTR [rcx]
   140012569:	sub    ch,BYTE PTR [rdx]
   14001256b:	xor    BYTE PTR [rcx],dh
   14001256d:	sub    cl,BYTE PTR [rdx]
   14001256f:	or     bh,bh
   140012571:	(bad)  
   140012572:	(bad)  
   140012573:	(bad)  
   140012574:	(bad)  
   140012575:	(bad)  
   140012576:	(bad)  
   140012577:	(bad)  
   140012578:	inc    DWORD PTR [rax]
   14001257a:	add    BYTE PTR [rax],al
   14001257c:	rex.XB
   14001257d:	data16 in al,dx
   14001257f:	or     bh,bh
   140012581:	(bad)  
   140012582:	(bad)  
   140012583:	(bad)  
   140012584:	push   rsp
   140012586:	repz repz fstp st(5)
   14001258a:	(bad)  [rsi-0xc222223]
   140012590:	repz hlt 
   140012592:	(bad)  
   140012593:	(bad)  
   140012594:	dec    DWORD PTR [rdx]
   140012596:	or     bh,BYTE PTR [rcx-0x1b]
   140012599:	pop    rsi
   14001259a:	(bad)  
   14001259b:	(bad)  
   14001259c:	(bad)  
   14001259d:	xor    DWORD PTR [rdx+0x52],edx
   1400125a0:	or     cl,BYTE PTR [rdx]
   1400125a2:	or     cl,BYTE PTR [rdx]
   1400125a4:	(bad)  
   1400125a5:	(bad)  
   1400125a6:	(bad)  
   1400125a7:	(bad)  
   1400125a8:	(bad)  
   1400125a9:	(bad)  
   1400125aa:	(bad)  
   1400125ab:	(bad)  
   1400125ac:	inc    DWORD PTR [rax]
   1400125ae:	add    BYTE PTR [rax],al
   1400125b0:	rex.XB
   1400125b1:	data16 in al,dx
   1400125b3:	or     bh,bh
   1400125b5:	(bad)  
   1400125b6:	(bad)  
   1400125b7:	(bad)  
   1400125b8:	push   rsp
   1400125ba:	repz repz fstp st(5)
   1400125be:	(bad)  [rsi-0xc222223]
   1400125c4:	repz hlt 
   1400125c6:	hlt    
   1400125c7:	hlt    
   1400125c8:	repz mov esp,0x7e9a0abc
   1400125ce:	jp     0x140012628
   1400125d0:	xor    BYTE PTR [rax],dh
   1400125d2:	or     cl,BYTE PTR [rdx]
   1400125d4:	or     ah,BYTE PTR [rsi+0x66]
   1400125d7:	or     bh,bh
   1400125d9:	(bad)  
   1400125da:	(bad)  
   1400125db:	(bad)  
   1400125dc:	(bad)  
   1400125dd:	(bad)  
   1400125de:	(bad)  
   1400125df:	(bad)  
   1400125e0:	inc    DWORD PTR [rax]
   1400125e2:	add    BYTE PTR [rax],al
   1400125e4:	rex.XB
   1400125e5:	data16 mov ch,0xa
   1400125e8:	(bad)  
   1400125e9:	(bad)  
   1400125ea:	(bad)  
   1400125eb:	(bad)  
   1400125ec:	push   rsp
   1400125ee:	repz repz fstp st(5)
   1400125f2:	(bad)  [rsi-0x22222223]
   1400125f8:	(bad)  
   1400125fa:	mov    esp,0xececedbc
   1400125ff:	ins    DWORD PTR es:[rdi],dx
   140012600:	or     cl,BYTE PTR [rdx]
   140012602:	pop    rax
   140012603:	xor    BYTE PTR [rdx],ch
   140012605:	or     ch,BYTE PTR [rbp+0x6d]
   140012608:	or     dh,BYTE PTR [rbp-0xf54b]
   14001260e:	(bad)  
   14001260f:	(bad)  
   140012610:	(bad)  
   140012611:	(bad)  
   140012612:	(bad)  
   140012613:	(bad)  
   140012614:	inc    DWORD PTR [rax]
   140012616:	add    BYTE PTR [rax],al
   140012618:	rex.XB
   140012619:	data16 mov ch,0xa
   14001261c:	(bad)  
   14001261d:	(bad)  
   14001261e:	(bad)  
   14001261f:	(bad)  
   140012620:	push   rsp
   140012622:	repz repz fstp st(5)
   140012626:	(bad)  [rsi-0x22222223]
   14001262c:	(bad)  
   14001262e:	mov    esp,0xececedbc
   140012633:	ins    DWORD PTR es:[rdi],dx
   140012634:	or     cl,BYTE PTR [rdx]
   140012636:	(bad)  
   140012637:	sub    ah,BYTE PTR [rdx]
   140012639:	or     ch,BYTE PTR [rbp+0x6d]
   14001263c:	or     dh,BYTE PTR [rbp-0xf54b]
   140012642:	(bad)  
   140012643:	(bad)  
   140012644:	(bad)  
   140012645:	(bad)  
   140012646:	(bad)  
   140012647:	(bad)  
   140012648:	inc    DWORD PTR [rax]
   14001264a:	add    BYTE PTR [rax],al
   14001264c:	adc    al,0x66
   14001264e:	in     al,dx
   14001264f:	or     bh,bh
   140012651:	(bad)  
   140012652:	(bad)  
   140012653:	(bad)  
   140012654:	push   rsp
   140012656:	repz repz fstp st(5)
   14001265a:	(bad)  [rsi-0x13f82223]
   140012660:	in     al,dx
   140012661:	in     al,dx
   140012662:	in     al,dx
   140012663:	in     al,dx
   140012664:	or     cl,BYTE PTR [rdx]
   140012666:	or     cl,BYTE PTR [rdx]
   140012668:	xor    BYTE PTR [rax],dh
   14001266a:	add    ebp,DWORD PTR [rcx]
   14001266c:	sub    DWORD PTR [rdx],esp
   14001266e:	or     cl,BYTE PTR [rdx]
   140012670:	or     cl,BYTE PTR [rdx]
   140012672:	or     cl,BYTE PTR [rdx]
   140012674:	or     cl,BYTE PTR [rdx]
   140012676:	or     cl,BYTE PTR [rdx]
   140012678:	or     bh,bh
   14001267a:	(bad)  
   14001267b:	(bad)  
   14001267c:	inc    DWORD PTR [rax]
   14001267e:	add    BYTE PTR [rax],al
   140012680:	rex.XB
   140012681:	data16 mov ch,0xa
   140012684:	(bad)  
   140012685:	(bad)  
   140012686:	(bad)  
   140012687:	(bad)  
   140012688:	push   rsp
   14001268a:	repz repz fstp st(5)
   14001268e:	fucomp st(5)
   140012690:	in     eax,dx
   140012691:	in     eax,dx
   140012692:	in     al,dx
   140012693:	ins    DWORD PTR es:[rdi],dx
   140012694:	ins    DWORD PTR es:[rdi],dx
   140012695:	ins    DWORD PTR es:[rdi],dx
   140012696:	ins    DWORD PTR es:[rdi],dx
   140012697:	or     ah,BYTE PTR [rbx]
   140012699:	and    ch,BYTE PTR [rcx]
   14001269b:	sub    DWORD PTR [rax],esi
   14001269d:	(bad)  
   14001269e:	(bad)  
   14001269f:	xor    BYTE PTR [rbx],al
   1400126a1:	and    esp,DWORD PTR [rdx]
   1400126a3:	and    ah,BYTE PTR [rdx]
   1400126a5:	or     cl,BYTE PTR [rdx]
   1400126a7:	and    ah,BYTE PTR [rbx]
   1400126a9:	and    ah,BYTE PTR [rdx]
   1400126ab:	and    ah,BYTE PTR [rdx]
   1400126ad:	or     bh,bh
   1400126af:	(bad)  
   1400126b0:	inc    DWORD PTR [rax]
   1400126b2:	add    BYTE PTR [rax],al
   1400126b4:	rex.XB
   1400126b5:	data16 mov ch,0xa
   1400126b8:	(bad)  
   1400126b9:	(bad)  
   1400126ba:	(bad)  
   1400126bb:	(bad)  
   1400126bc:	push   rsp
   1400126be:	repz repz fstp st(5)
   1400126c2:	sbb    ebp,ebp
   1400126c4:	in     eax,dx
   1400126c5:	in     eax,dx
   1400126c6:	in     al,dx
   1400126c7:	ins    DWORD PTR es:[rdi],dx
   1400126c8:	ins    DWORD PTR es:[rdi],dx
   1400126c9:	or     cl,BYTE PTR [rdx]
   1400126cb:	and    ebp,DWORD PTR [rcx]
   1400126cd:	sub    DWORD PTR [rbx],eax
   1400126cf:	xor    DWORD PTR [rdi],esi
   1400126d1:	(bad)  
   1400126d2:	sti    
   1400126d3:	(bad)  
   1400126d4:	(bad)  
   1400126d5:	add    ebp,DWORD PTR [rcx]
   1400126d7:	and    esp,DWORD PTR [rdx]
   1400126d9:	or     ah,BYTE PTR [rbx]
   1400126db:	and    esp,DWORD PTR [rbx]
   1400126dd:	rex.WX
   1400126de:	rex.WXB sub QWORD PTR [r11],rsp
   1400126e1:	or     bh,bh
   1400126e3:	(bad)  
   1400126e4:	inc    DWORD PTR [rax]
   1400126e6:	add    BYTE PTR [rax],al
   1400126e8:	rex.XB
   1400126e9:	data16 in al,dx
   1400126eb:	or     bh,bh
   1400126ed:	(bad)  
   1400126ee:	(bad)  
   1400126ef:	(bad)  
   1400126f0:	push   rsp
   1400126f2:	repz repz fstp QWORD PTR [rcx]
   1400126f6:	sbb    DWORD PTR [rbp-0x14],ebp
   1400126f9:	in     al,dx
   1400126fa:	or     cl,BYTE PTR [rdx]
   1400126fc:	or     ah,BYTE PTR [rbx]
   1400126fe:	sub    DWORD PTR [rbx],eax
   140012700:	xor    BYTE PTR [rdi],dh
   140012702:	(bad)  
   140012703:	cmp    edi,ebx
   140012705:	sti    
   140012706:	sti    
   140012707:	sti    
   140012708:	sti    
   140012709:	(bad)  
   14001270a:	xor    BYTE PTR [rcx],ch
   14001270c:	sub    DWORD PTR [rbx],eax
   14001270e:	sub    DWORD PTR [rbx],esp
   140012710:	or     cl,BYTE PTR [rdx]
   140012712:	or     cl,BYTE PTR [rbx+0x29]
   140012715:	and    cl,BYTE PTR [rdx]
   140012717:	(bad)  
   140012718:	inc    DWORD PTR [rax]
   14001271a:	add    BYTE PTR [rax],al
   14001271c:	adc    al,0x66
   14001271e:	mov    ch,0xa
   140012720:	(bad)  
   140012721:	(bad)  
   140012722:	(bad)  
   140012723:	(bad)  
   140012724:	push   rsp
   140012726:	repz repz fisttp QWORD PTR [rdx]
   14001272a:	or     cl,BYTE PTR [rdx]
   14001272c:	or     cl,BYTE PTR [rdx]
   14001272e:	and    ah,BYTE PTR [rbx]
   140012730:	and    ebp,DWORD PTR [rcx]
   140012732:	xor    BYTE PTR [rax],dh
   140012734:	(bad)  
   140012735:	sti    
   140012736:	sti    
   140012737:	sti    
   140012738:	sti    
   140012739:	sti    
   14001273a:	sti    
   14001273b:	sti    
   14001273c:	sti    
   14001273d:	cmp    esi,DWORD PTR [rdi]
   14001273f:	xor    BYTE PTR [rax],dh
   140012741:	add    eax,DWORD PTR [rbx]
   140012743:	or     bh,bh
   140012745:	(bad)  
   140012746:	dec    DWORD PTR [rdx]
   140012748:	and    r12d,DWORD PTR [rdx]
   14001274b:	or     bh,bh
   14001274d:	add    BYTE PTR [rax],al
   14001274f:	add    BYTE PTR [rsi+riz*2],dl
   140012752:	mov    ch,0xa
   140012754:	(bad)  
   140012755:	(bad)  
   140012756:	(bad)  
   140012757:	(bad)  
   140012758:	push   rsp
   14001275a:	repz repz or ch,BYTE PTR [rdx]
   14001275e:	sub    ah,BYTE PTR [rcx+rbp*1]
   140012761:	sub    DWORD PTR [rdx],ebp
   140012763:	xor    BYTE PTR [rax],dh
   140012765:	(bad)  
   140012766:	(bad)  
   140012767:	sti    
   140012768:	pop    rsi
   140012769:	pop    rsi
   14001276a:	pop    rsi
   14001276b:	sti    
   14001276c:	sti    
   14001276d:	sti    
   14001276e:	sti    
   14001276f:	sti    
   140012770:	sti    
   140012771:	sti    
   140012772:	(bad)  
   140012773:	(bad)  
   140012774:	xor    BYTE PTR [rax],dh
   140012776:	sub    DWORD PTR [rdx],ecx
   140012778:	(bad)  
   140012779:	(bad)  
   14001277a:	dec    DWORD PTR [rdx]
   14001277c:	rex.WX and rsp,QWORD PTR [rdx]
   14001277f:	or     bh,bh
   140012781:	add    BYTE PTR [rax],al
   140012783:	add    BYTE PTR [rbx+0x66],al
   140012786:	mov    ch,0xa
   140012788:	(bad)  
   140012789:	(bad)  
   14001278a:	(bad)  
   14001278b:	(bad)  
   14001278c:	push   rsp
   14001278e:	or     cl,BYTE PTR [rdx]
   140012790:	fcmovnu st,st(3)
   140012792:	push   rcx
   140012793:	push   rcx
   140012794:	push   rcx
   140012795:	push   rdx
   140012796:	pop    rax
   140012797:	jle    0x1400127f7
   140012799:	in     eax,0x5e
   14001279b:	in     eax,0xa0
   14001279d:	movabs al,ds:0xfbfbfbfbfbfbfb5e
   1400127a6:	sti    
   1400127a7:	(bad)  
   1400127a8:	xor    BYTE PTR [rax],dh
   1400127aa:	add    esi,DWORD PTR [rdi]
   1400127ac:	or     cl,BYTE PTR [rdx]
   1400127ae:	dec    DWORD PTR [rdx]
   1400127b0:	add    esp,DWORD PTR [rbx]
   1400127b2:	and    cl,BYTE PTR [rdx]
   1400127b4:	inc    DWORD PTR [rax]
   1400127b6:	add    BYTE PTR [rax],al
   1400127b8:	rex.XB
   1400127b9:	data16 mov ch,0xa
   1400127bc:	(bad)  
   1400127bd:	(bad)  
   1400127be:	(bad)  
   1400127bf:	(bad)  
   1400127c0:	dec    DWORD PTR [rdx]
   1400127c2:	(bad)  
   1400127c4:	(bad)  
   1400127c6:	fstp   TBYTE PTR [rcx+0x79]
   1400127c9:	jns    0x140012844
   1400127cb:	in     eax,0xe5
   1400127cd:	in     eax,0xa0
   1400127cf:	in     eax,0xa0
   1400127d1:	mov    ebp,0x37375899
   1400127d6:	cmp    BYTE PTR [rdi],dh
   1400127d8:	(bad)  
   1400127d9:	(bad)  
   1400127da:	xor    DWORD PTR [rax],esi
   1400127dc:	xor    BYTE PTR [rsi],dh
   1400127de:	xor    DWORD PTR [rdx],ecx
   1400127e0:	(bad)  
   1400127e1:	add    ecx,DWORD PTR [rdx]
   1400127e3:	or     ch,BYTE PTR [rcx]
   1400127e5:	sub    DWORD PTR [rdx],esp
   1400127e7:	and    edi,edi
   1400127e9:	add    BYTE PTR [rax],al
   1400127eb:	add    BYTE PTR [rbx+0x66],al
   1400127ee:	mov    ch,0xa
   1400127f0:	(bad)  
   1400127f1:	(bad)  
   1400127f2:	(bad)  
   1400127f3:	(bad)  
   1400127f4:	dec    DWORD PTR [rdx]
   1400127f6:	(bad)  
   1400127f8:	(bad)  
   1400127fa:	or     cl,BYTE PTR [rdx]
   1400127fc:	or     cl,BYTE PTR [rdx]
   1400127fe:	or     cl,BYTE PTR [rdx]
   140012800:	or     cl,BYTE PTR [rdx]
   140012802:	or     cl,BYTE PTR [rdx]
   140012804:	movabs al,ds:0x292323294a294b72
   14001280d:	and    ch,BYTE PTR [rcx]
   14001280f:	and    eax,DWORD PTR [rcx+rbp*1+0x58]
   140012813:	or     bl,BYTE PTR [rsi-0x5]
   140012816:	xor    BYTE PTR [rbx],al
   140012818:	add    eax,DWORD PTR [rbx]
   14001281a:	sub    DWORD PTR [rip+0xff],ebx        # 0x14001291f
   140012820:	rex.XB
   140012821:	data16 (bad) 
   140012823:	or     bh,bh
   140012825:	(bad)  
   140012826:	dec    DWORD PTR [rdx]
   140012828:	or     bl,BYTE PTR [rcx]
   14001282a:	sbb    DWORD PTR [rcx],ebx
   14001282c:	sbb    esp,ebx
   14001282e:	(bad)  
   140012830:	or     cl,BYTE PTR [rdx]
   140012832:	(bad)  
   140012833:	(bad)  
   140012834:	(bad)  
   140012835:	(bad)  
   140012836:	(bad)  
   140012837:	jmp    QWORD PTR [rbx]
   140012839:	movabs al,ds:0x3131375858587ae5
   140012842:	push   rcx
   140012843:	push   rcx
   140012844:	push   rcx
   140012845:	or     cl,BYTE PTR [rdx]
   140012847:	(bad)  
   140012848:	in     al,dx
   140012849:	in     eax,0x79
   14001284b:	pop    rax
   14001284c:	push   rcx
   14001284d:	sub    DWORD PTR [rcx],ebp
   14001284f:	and    edi,edi
   140012851:	add    BYTE PTR [rax],al
   140012853:	add    BYTE PTR [rbx+0x66],al
   140012856:	mov    esp,0xaffff0a
   14001285b:	sbb    DWORD PTR [rcx],ebx
   14001285d:	sbb    ebx,esi
   14001285f:	repz sbb DWORD PTR [rcx],ebx
   140012862:	sbb    esp,ebx
   140012864:	(bad)  
   140012866:	or     bh,bh
   140012868:	(bad)  
   140012869:	(bad)  
   14001286a:	(bad)  
   14001286b:	(bad)  
   14001286c:	jmp    QWORD PTR [rbx]
   14001286e:	movabs al,ds:0x515858585de5e5e5
   140012877:	push   rcx
   140012878:	or     bh,bh
   14001287a:	(bad)  
   14001287b:	(bad)  
   14001287c:	(bad)  
   14001287d:	in     al,dx
   14001287e:	movabs al,ds:0xffff235879e5
   140012887:	add    BYTE PTR [rbx+0x66],al
   14001288a:	mov    esp,0xaffff0a
   14001288f:	sbb    DWORD PTR [rcx],ebx
   140012891:	repz (bad) 
   140012893:	push   rbx
   140012895:	sbb    DWORD PTR [rcx],ebx
   140012897:	(bad)  
   140012899:	fmul   QWORD PTR [rdx]
   14001289b:	(bad)  
   14001289c:	(bad)  
   14001289d:	(bad)  
   14001289e:	(bad)  
   14001289f:	(bad)  
   1400128a0:	(bad)  
   1400128a1:	jmp    QWORD PTR [rbx]
   1400128a3:	and    esp,DWORD PTR [rax+0x58587ae5]
   1400128a9:	push   rcx
   1400128aa:	or     cl,BYTE PTR [rdx]
   1400128ac:	(bad)  
   1400128ad:	(bad)  
   1400128ae:	(bad)  
   1400128af:	(bad)  
   1400128b0:	(bad)  
   1400128b1:	(bad)  
   1400128b2:	in     al,dx
   1400128b3:	and    ebx,DWORD PTR [rip+0xffffffffffffff23]        # 0x1400127dc
   1400128b9:	add    BYTE PTR [rax],al
   1400128bb:	add    BYTE PTR [rbp+0x66],ch
   1400128be:	repz rex.XB (bad) 
   1400128c1:	dec    DWORD PTR [rdx]
   1400128c3:	sbb    DWORD PTR [rcx],ebx
   1400128c5:	repz (bad) 
   1400128c7:	push   rbx
   1400128c9:	sbb    DWORD PTR [rcx],ebx
   1400128cb:	sbb    esp,ebx
   1400128cd:	fmul   QWORD PTR [rdx]
   1400128cf:	(bad)  
   1400128d0:	(bad)  
   1400128d1:	(bad)  
   1400128d2:	(bad)  
   1400128d3:	(bad)  
   1400128d4:	(bad)  
   1400128d5:	(bad)  
   1400128d6:	(bad)  
   1400128d7:	jmp    QWORD PTR [rbx]
   1400128d9:	and    esp,DWORD PTR [rax-0xf5ae87]
   1400128df:	(bad)  
   1400128e0:	(bad)  
   1400128e1:	(bad)  
   1400128e2:	(bad)  
   1400128e3:	(bad)  
   1400128e4:	(bad)  
   1400128e5:	(bad)  
   1400128e6:	(bad)  
   1400128e7:	(bad)  
   1400128e8:	(bad)  
   1400128e9:	(bad)  
   1400128ea:	(bad)  
   1400128eb:	(bad)  
   1400128ec:	inc    DWORD PTR [rax]
   1400128ee:	add    BYTE PTR [rax],al
   1400128f0:	(bad)  
   1400128f1:	out    dx,eax
   1400128f2:	out    dx,eax
   1400128f3:	rex.XB (bad) 
   1400128f5:	dec    DWORD PTR [rdx]
   1400128f7:	sbb    DWORD PTR [rcx],ebx
   1400128f9:	repz (bad) 
   1400128fb:	push   rbx
   1400128fd:	sbb    DWORD PTR [rcx],ebx
   1400128ff:	sbb    DWORD PTR [rbx-0xf54b],edi
   140012905:	(bad)  
   140012906:	(bad)  
   140012907:	(bad)  
   140012908:	(bad)  
   140012909:	(bad)  
   14001290a:	(bad)  
   14001290b:	(bad)  
   14001290c:	(bad)  
   14001290d:	dec    DWORD PTR [rdx]
   14001290f:	je     0x14001291b
   140012911:	(bad)  
   140012912:	(bad)  
   140012913:	(bad)  
   140012914:	(bad)  
   140012915:	(bad)  
   140012916:	(bad)  
   140012917:	(bad)  
   140012918:	(bad)  
   140012919:	(bad)  
   14001291a:	(bad)  
   14001291b:	(bad)  
   14001291c:	(bad)  
   14001291d:	(bad)  
   14001291e:	(bad)  
   14001291f:	(bad)  
   140012920:	inc    DWORD PTR [rax]
   140012922:	add    BYTE PTR [rax],al
   140012924:	(bad)  
   140012925:	(bad)  
   140012926:	(bad)  
   140012927:	in     eax,dx
   140012928:	(bad)  
   140012929:	call   QWORD PTR [rbx]
   14001292b:	or     cl,BYTE PTR [rdx]
   14001292d:	sbb    ebx,esi
   14001292f:	repz sbb DWORD PTR [rcx],ebx
   140012932:	sbb    DWORD PTR [rcx],ebx
   140012934:	or     cl,BYTE PTR [rdx]
   140012936:	(bad)  
   140012937:	(bad)  
   140012938:	(bad)  
   140012939:	(bad)  
   14001293a:	(bad)  
   14001293b:	(bad)  
   14001293c:	(bad)  
   14001293d:	(bad)  
   14001293e:	(bad)  
   14001293f:	(bad)  
   140012940:	(bad)  
   140012941:	(bad)  
   140012942:	dec    DWORD PTR [rdx]
   140012944:	(bad)  
   140012945:	(bad)  
   140012946:	(bad)  
   140012947:	(bad)  
   140012948:	(bad)  
   140012949:	(bad)  
   14001294a:	(bad)  
   14001294b:	(bad)  
   14001294c:	(bad)  
   14001294d:	(bad)  
   14001294e:	(bad)  
   14001294f:	(bad)  
   140012950:	(bad)  
   140012951:	(bad)  
   140012952:	(bad)  
   140012953:	(bad)  
   140012954:	inc    DWORD PTR [rax]
   140012956:	add    BYTE PTR [rax],al
   140012958:	(bad)  
   140012959:	(bad)  
   14001295a:	(bad)  
   14001295b:	in     eax,dx
   14001295c:	in     eax,dx
   14001295d:	in     eax,dx
   14001295e:	(bad)  
   14001295f:	(bad)  
   140012960:	dec    DWORD PTR [rdx]
   140012962:	or     cl,BYTE PTR [rdx]
   140012964:	or     cl,BYTE PTR [rdx]
   140012966:	or     cl,BYTE PTR [rdx]
   140012968:	(bad)  
   140012969:	(bad)  
   14001296a:	(bad)  
   14001296b:	(bad)  
   14001296c:	(bad)  
   14001296d:	(bad)  
   14001296e:	(bad)  
   14001296f:	(bad)  
   140012970:	(bad)  
   140012971:	(bad)  
   140012972:	(bad)  
   140012973:	(bad)  
   140012974:	(bad)  
   140012975:	(bad)  
   140012976:	(bad)  
   140012977:	(bad)  
   140012978:	(bad)  
   140012979:	(bad)  
   14001297a:	(bad)  
   14001297b:	(bad)  
   14001297c:	(bad)  
   14001297d:	(bad)  
   14001297e:	(bad)  
   14001297f:	(bad)  
   140012980:	(bad)  
   140012981:	(bad)  
   140012982:	(bad)  
   140012983:	(bad)  
   140012984:	(bad)  
   140012985:	(bad)  
   140012986:	(bad)  
   140012987:	(bad)  
   140012988:	inc    DWORD PTR [rax]
   14001298a:	add    BYTE PTR [rax],al
   14001298c:	add    BYTE PTR [rax],al
   14001298e:	add    BYTE PTR [rax],al
   140012990:	sub    BYTE PTR [rax],al
   140012992:	add    BYTE PTR [rax],al
   140012994:	add    BYTE PTR [rax],al
   140012997:	add    BYTE PTR [rax+0x0],al
   14001299a:	add    BYTE PTR [rax],al
   14001299c:	add    DWORD PTR [rax],eax
   14001299e:	or     BYTE PTR [rax],al
   1400129a0:	add    BYTE PTR [rax],al
   1400129a2:	add    BYTE PTR [rax],al
   1400129a4:	add    BYTE PTR [rax],dl
	...
   1400129ae:	add    BYTE PTR [rax],al
   1400129b0:	add    BYTE PTR [rcx],al
	...
   1400129ba:	add    BYTE PTR [rax],al
   1400129bc:	add    DWORD PTR [rcx],eax
   1400129be:	add    DWORD PTR [rax],eax
   1400129c0:	add    al,BYTE PTR [rdx]
   1400129c2:	add    al,BYTE PTR [rax]
   1400129c4:	add    eax,DWORD PTR [rbx]
   1400129c6:	add    eax,DWORD PTR [rax]
   1400129c8:	add    al,0x4
   1400129ca:	add    al,0x0
   1400129cc:	add    eax,0x6000505
   1400129d1:	(bad)  
   1400129d2:	(bad)  
   1400129d3:	add    BYTE PTR [rdi],al
   1400129d5:	(bad)  
   1400129d6:	(bad)  
   1400129d7:	add    BYTE PTR [rax],cl
   1400129d9:	or     BYTE PTR [rax],cl
   1400129db:	add    BYTE PTR [rcx],cl
   1400129dd:	or     DWORD PTR [rcx],ecx
   1400129df:	add    BYTE PTR [rdx],cl
   1400129e1:	or     cl,BYTE PTR [rdx]
   1400129e3:	add    BYTE PTR [rbx],cl
   1400129e5:	or     ecx,DWORD PTR [rbx]
   1400129e7:	add    BYTE PTR [rsp+rcx*1],cl
   1400129ea:	or     al,0x0
   1400129ec:	or     eax,0xe000d0d
   1400129f1:	(bad)  
   1400129f2:	(bad)  
   1400129f3:	add    BYTE PTR [rdi],cl
   1400129f5:	(bad)  
   1400129f6:	lldt   WORD PTR [rax]
   1400129f9:	adc    BYTE PTR [rax],dl
   1400129fb:	add    BYTE PTR [rcx],dl
   1400129fd:	adc    DWORD PTR [rcx],edx
   1400129ff:	add    BYTE PTR [rdx],dl
   140012a01:	adc    dl,BYTE PTR [rdx]
   140012a03:	add    BYTE PTR [rbx],dl
   140012a05:	adc    edx,DWORD PTR [rbx]
   140012a07:	add    BYTE PTR [rsp+rdx*1],dl
   140012a0a:	adc    al,0x0
   140012a0c:	adc    eax,0x16001515
   140012a11:	(bad)  
   140012a12:	(bad)  
   140012a13:	add    BYTE PTR [rdi],dl
   140012a15:	(bad)  
   140012a16:	(bad)  
   140012a17:	add    BYTE PTR [rax],bl
   140012a19:	sbb    BYTE PTR [rax],bl
   140012a1b:	add    BYTE PTR [rcx],bl
   140012a1d:	sbb    DWORD PTR [rcx],ebx
   140012a1f:	add    BYTE PTR [rdx],bl
   140012a21:	sbb    bl,BYTE PTR [rdx]
   140012a23:	add    BYTE PTR [rbx],bl
   140012a25:	sbb    ebx,DWORD PTR [rbx]
   140012a27:	add    BYTE PTR [rsp+rbx*1],bl
   140012a2a:	sbb    al,0x0
   140012a2c:	sbb    eax,0x1e001d1d
   140012a31:	(bad)  
   140012a32:	(bad)  
   140012a33:	add    BYTE PTR [rdi],bl
   140012a35:	(bad)  
   140012a36:	(bad)  
   140012a37:	add    BYTE PTR [rax],ah
   140012a39:	and    BYTE PTR [rax],ah
   140012a3b:	add    BYTE PTR [rcx],ah
   140012a3d:	and    DWORD PTR [rcx],esp
   140012a3f:	add    BYTE PTR [rdx],ah
   140012a41:	and    ah,BYTE PTR [rdx]
   140012a43:	add    BYTE PTR [rbx],ah
   140012a45:	and    esp,DWORD PTR [rbx]
   140012a47:	add    BYTE PTR [rsp],ah
   140012a4a:	and    al,0x0
   140012a4c:	and    eax,0x26002525
   140012a51:	es add BYTE PTR es:[rdi],ah
   140012a55:	(bad)  
   140012a56:	(bad)  
   140012a57:	add    BYTE PTR [rax],ch
   140012a59:	sub    BYTE PTR [rax],ch
   140012a5b:	add    BYTE PTR [rcx],ch
   140012a5d:	sub    DWORD PTR [rcx],ebp
   140012a5f:	add    BYTE PTR [rdx],ch
   140012a61:	sub    ch,BYTE PTR [rdx]
   140012a63:	add    BYTE PTR [rbx],ch
   140012a65:	sub    ebp,DWORD PTR [rbx]
   140012a67:	add    BYTE PTR [rsp+rbp*1],ch
   140012a6a:	sub    al,0x0
   140012a6c:	sub    eax,0x2e002d2d
   140012a71:	cs add BYTE PTR cs:[rdi],ch
   140012a75:	(bad)  
   140012a76:	(bad)  
   140012a77:	add    BYTE PTR [rax],dh
   140012a79:	xor    BYTE PTR [rax],dh
   140012a7b:	add    BYTE PTR [rcx],dh
   140012a7d:	xor    DWORD PTR [rcx],esi
   140012a7f:	add    BYTE PTR [rdx],dh
   140012a81:	xor    dh,BYTE PTR [rdx]
   140012a83:	add    BYTE PTR [rbx],dh
   140012a85:	xor    esi,DWORD PTR [rbx]
   140012a87:	add    BYTE PTR [rsp+rsi*1],dh
   140012a8a:	xor    al,0x0
   140012a8c:	xor    eax,0x36003535
   140012a91:	ss add BYTE PTR ss:[rdi],dh
   140012a95:	(bad)  
   140012a96:	(bad)  
   140012a97:	add    BYTE PTR [rax],bh
   140012a99:	cmp    BYTE PTR [rax],bh
   140012a9b:	add    BYTE PTR [rcx],bh
   140012a9d:	cmp    DWORD PTR [rcx],edi
   140012a9f:	add    BYTE PTR [rdx],bh
   140012aa1:	cmp    bh,BYTE PTR [rdx]
   140012aa3:	add    BYTE PTR [rbx],bh
   140012aa5:	cmp    edi,DWORD PTR [rbx]
   140012aa7:	add    BYTE PTR [rsp+rdi*1],bh
   140012aaa:	cmp    al,0x0
   140012aac:	cmp    eax,0x3e003d3d
   140012ab1:	ds add BYTE PTR ds:[rdi],bh
   140012ab5:	(bad)  
   140012ab6:	(bad)  
   140012ab7:	add    BYTE PTR [rax+0x40],al
   140012aba:	add    BYTE PTR [rcx+0x41],al
   140012abe:	add    BYTE PTR [r10+0x42],al
   140012ac2:	rex.X add BYTE PTR [rbx+0x43],al
   140012ac6:	add    BYTE PTR [r12+r8*2+0x44],al
   140012acb:	add    BYTE PTR [rbp+0x45],al
   140012ace:	add    BYTE PTR [r14+0x46],r8b
   140012ad2:	rex.RX add BYTE PTR [rdi+0x47],r8b
   140012ad6:	rex.RXB add BYTE PTR [r8+0x48],r9b
   140012ada:	rex.W add BYTE PTR [rcx+0x49],cl
   140012ade:	rex.WB add BYTE PTR [r10+0x4a],cl
   140012ae2:	rex.WX add BYTE PTR [rbx+0x4b],cl
   140012ae6:	rex.WXB add BYTE PTR [r12+r9*2+0x4c],cl
   140012aeb:	add    BYTE PTR [rbp+0x4d],cl
   140012aee:	rex.WRB add BYTE PTR [r14+0x4e],r9b
   140012af2:	rex.WRX add BYTE PTR [rdi+0x4f],r9b
   140012af6:	rex.WRXB add BYTE PTR [r8+0x50],r10b
   140012afa:	push   rax
   140012afb:	add    BYTE PTR [rcx+0x51],dl
   140012afe:	push   rcx
   140012aff:	add    BYTE PTR [rdx+0x52],dl
   140012b02:	push   rdx
   140012b03:	add    BYTE PTR [rbx+0x53],dl
   140012b06:	push   rbx
   140012b07:	add    BYTE PTR [rsp+rdx*2+0x54],dl
   140012b0b:	add    BYTE PTR [rbp+0x55],dl
   140012b0e:	push   rbp
   140012b0f:	add    BYTE PTR [rsi+0x56],dl
   140012b12:	push   rsi
   140012b13:	add    BYTE PTR [rdi+0x57],dl
   140012b16:	push   rdi
   140012b17:	add    BYTE PTR [rax+0x58],bl
   140012b1a:	pop    rax
   140012b1b:	add    BYTE PTR [rcx+0x59],bl
   140012b1e:	pop    rcx
   140012b1f:	add    BYTE PTR [rdx+0x5a],bl
   140012b22:	pop    rdx
   140012b23:	add    BYTE PTR [rbx+0x5b],bl
   140012b26:	pop    rbx
   140012b27:	add    BYTE PTR [rsp+rbx*2+0x5c],bl
   140012b2b:	add    BYTE PTR [rbp+0x5d],bl
   140012b2e:	pop    rbp
   140012b2f:	add    BYTE PTR [rsi+0x5e],bl
   140012b32:	pop    rsi
   140012b33:	add    BYTE PTR [rdi+0x5f],bl
   140012b36:	pop    rdi
   140012b37:	add    BYTE PTR [rax+0x60],ah
   140012b3a:	(bad)  
   140012b3b:	add    BYTE PTR [rcx+0x61],ah
   140012b3e:	(bad)  
   140012b3f:	add    BYTE PTR [rdx+0x62],ah
   140012b42:	(bad)  
   140012b43:	add    BYTE PTR [rbx+0x63],ah
   140012b46:	movsxd eax,DWORD PTR [rax]
   140012b48:	fs fs add BYTE PTR fs:[rbp+0x65],ah
   140012b4e:	add    BYTE PTR gs:[rsi+0x66],ah
   140012b52:	data16 add BYTE PTR [rdi+0x67],ah
   140012b56:	add    BYTE PTR [eax+0x68],ch
   140012b5a:	push   0x69696900
   140012b5f:	add    BYTE PTR [rdx+0x6a],ch
   140012b62:	push   0x0
   140012b64:	imul   ebp,DWORD PTR [rbx+0x6b],0x0
   140012b68:	ins    BYTE PTR es:[rdi],dx
   140012b69:	ins    BYTE PTR es:[rdi],dx
   140012b6a:	ins    BYTE PTR es:[rdi],dx
   140012b6b:	add    BYTE PTR [rbp+0x6d],ch
   140012b6e:	ins    DWORD PTR es:[rdi],dx
   140012b6f:	add    BYTE PTR [rsi+0x6e],ch
   140012b72:	outs   dx,BYTE PTR ds:[rsi]
   140012b73:	add    BYTE PTR [rdi+0x6f],ch
   140012b76:	outs   dx,DWORD PTR ds:[rsi]
   140012b77:	add    BYTE PTR [rax+0x70],dh
   140012b7a:	jo     0x140012b7c
   140012b7c:	jno    0x140012bef
   140012b7e:	jno    0x140012b80
   140012b80:	jb     0x140012bf4
   140012b82:	jb     0x140012b84
   140012b84:	jae    0x140012bf9
   140012b86:	jae    0x140012b88
   140012b88:	je     0x140012bfe
   140012b8a:	je     0x140012b8c
   140012b8c:	jne    0x140012c03
   140012b8e:	jne    0x140012b90
   140012b90:	jbe    0x140012c08
   140012b92:	jbe    0x140012b94
   140012b94:	ja     0x140012c0d
   140012b96:	ja     0x140012b98
   140012b98:	js     0x140012c12
   140012b9a:	js     0x140012b9c
   140012b9c:	jns    0x140012c17
   140012b9e:	jns    0x140012ba0
   140012ba0:	jp     0x140012c1c
   140012ba2:	jp     0x140012ba4
   140012ba4:	jnp    0x140012c21
   140012ba6:	jnp    0x140012ba8
   140012ba8:	jl     0x140012c26
   140012baa:	jl     0x140012bac
   140012bac:	jge    0x140012c2b
   140012bae:	jge    0x140012bb0
   140012bb0:	jle    0x140012c30
   140012bb2:	jle    0x140012bb4
   140012bb4:	jg     0x140012c35
   140012bb6:	jg     0x140012bb8
   140012bb8:	add    BYTE PTR [rax-0x7e7eff80],0x81
   140012bbf:	add    BYTE PTR [rdx-0x7cff7d7e],al
   140012bc5:	add    DWORD PTR [rbx-0x7b7b7c00],0x0
   140012bcc:	test   DWORD PTR [rbp-0x7979ff7b],eax
   140012bd2:	xchg   BYTE PTR [rax],al
   140012bd4:	xchg   DWORD PTR [rdi-0x7777ff79],eax
   140012bda:	mov    BYTE PTR [rax],al
   140012bdc:	mov    DWORD PTR [rcx-0x7575ff77],ecx
   140012be2:	mov    al,BYTE PTR [rax]
   140012be4:	mov    ecx,DWORD PTR [rbx-0x7373ff75]
   140012bea:	mov    WORD PTR [rax],es
   140012bec:	lea    ecx,[rbp-0x7171ff73]
   140012bf2:	mov    es,WORD PTR [rax]
   140012bf4:	(bad)  
   140012bf5:	(bad)  
   140012bf6:	pop    QWORD PTR [rax]
   140012bf8:	nop
   140012bf9:	nop
   140012bfa:	nop
   140012bfb:	add    BYTE PTR [rcx-0x6dff6e6f],dl
   140012c01:	xchg   edx,eax
   140012c02:	xchg   edx,eax
   140012c03:	add    BYTE PTR [rbx-0x6bff6c6d],dl
   140012c09:	xchg   esp,eax
   140012c0a:	xchg   esp,eax
   140012c0b:	add    BYTE PTR [rbp-0x69ff6a6b],dl
   140012c11:	xchg   esi,eax
   140012c12:	xchg   esi,eax
   140012c13:	add    BYTE PTR [rdi-0x67ff6869],dl
   140012c19:	cwde   
   140012c1a:	cwde   
   140012c1b:	add    BYTE PTR [rcx-0x65ff6667],bl
   140012c21:	(bad)  
   140012c22:	(bad)  
   140012c23:	add    BYTE PTR [rbx-0x63ff6465],bl
   140012c29:	pushf  
   140012c2a:	pushf  
   140012c2b:	add    BYTE PTR [rbp-0x61ff6263],bl
   140012c31:	sahf   
   140012c32:	sahf   
   140012c33:	add    BYTE PTR [rdi-0x5fff6061],bl
   140012c39:	movabs al,ds:0xa2a200a1a1a100a0
   140012c42:	movabs ds:0xa4a4a400a3a3a300,al
   140012c4b:	add    BYTE PTR [rbp-0x59ff5a5b],ah
   140012c51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012c52:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012c53:	add    BYTE PTR [rdi-0x57ff5859],ah
   140012c59:	test   al,0xa8
   140012c5b:	add    BYTE PTR [rcx-0x55ff5657],ch
   140012c61:	stos   BYTE PTR es:[rdi],al
   140012c62:	stos   BYTE PTR es:[rdi],al
   140012c63:	add    BYTE PTR [rbx-0x53ff5455],ch
   140012c69:	lods   al,BYTE PTR ds:[rsi]
   140012c6a:	lods   al,BYTE PTR ds:[rsi]
   140012c6b:	add    BYTE PTR [rbp-0x51ff5253],ch
   140012c71:	scas   al,BYTE PTR es:[rdi]
   140012c72:	scas   al,BYTE PTR es:[rdi]
   140012c73:	add    BYTE PTR [rdi-0x4fff5051],ch
   140012c79:	mov    al,0xb0
   140012c7b:	add    BYTE PTR [rcx-0x4dff4e4f],dh
   140012c81:	mov    dl,0xb2
   140012c83:	add    BYTE PTR [rbx-0x4bff4c4d],dh
   140012c89:	mov    ah,0xb4
   140012c8b:	add    BYTE PTR [rbp-0x49ff4a4b],dh
   140012c91:	mov    dh,0xb6
   140012c93:	add    BYTE PTR [rdi-0x47ff4849],dh
   140012c99:	mov    eax,0xb9b900b8
   140012c9e:	mov    ecx,0xbababa00
   140012ca3:	add    BYTE PTR [rbx-0x43ff4445],bh
   140012ca9:	mov    esp,0xbdbd00bc
   140012cae:	mov    ebp,0xbebebe00
   140012cb3:	add    BYTE PTR [rdi-0x3fff4041],bh
   140012cb9:	rol    al,0x0
   140012cbc:	rol    ecx,0xc1
   140012cbf:	add    dl,al
   140012cc1:	ret    0xc2
   140012cc4:	ret    
   140012cc5:	ret    
   140012cc6:	ret    
   140012cc7:	add    ah,al
   140012cc9:	(bad)  
   140012cca:	(bad)  
   140012ccb:	add    ch,al
   140012ccd:	(bad)
   140012cd0:	mov    dh,0xc6
   140012cd3:	add    bh,al
   140012cd5:	mov    edi,0xc8c8c800
   140012cdb:	add    cl,cl
   140012cdd:	leave  
   140012cde:	leave  
   140012cdf:	add    dl,cl
   140012ce1:	retf   0xca
   140012ce4:	retf   
   140012ce5:	retf   
   140012ce6:	retf   
   140012ce7:	add    ah,cl
   140012ce9:	int3   
   140012cea:	int3   
   140012ceb:	add    ch,cl
   140012ced:	int    0xcd
   140012cef:	add    dh,cl
   140012cf1:	(bad)  
   140012cf2:	(bad)  
   140012cf3:	add    bh,cl
   140012cf5:	iret   
   140012cf6:	iret   
   140012cf7:	add    al,dl
   140012cf9:	rcl    al,1
   140012cfb:	add    cl,dl
   140012cfd:	rcl    ecx,1
   140012cff:	add    dl,dl
   140012d01:	rcl    dl,cl
   140012d03:	add    bl,dl
   140012d05:	rcl    ebx,cl
   140012d07:	add    ah,dl
   140012d09:	(bad)  
   140012d0a:	(bad)  
   140012d0b:	add    ch,dl
   140012d0d:	(bad)  
   140012d0e:	(bad)  
   140012d0f:	add    dh,dl
   140012d11:	(bad)  
   140012d12:	(bad)  
   140012d13:	add    bh,dl
   140012d15:	xlat   BYTE PTR ds:[rbx]
   140012d16:	xlat   BYTE PTR ds:[rbx]
   140012d17:	add    al,bl
   140012d19:	fcomp  st(0)
   140012d1b:	add    cl,bl
   140012d1d:	(bad)  
   140012d1f:	add    dl,bl
   140012d21:	fcmovu st,st(2)
   140012d23:	add    bl,bl
   140012d25:	fcmovnu st,st(3)
   140012d27:	add    ah,bl
   140012d29:	(bad)  
   140012d2b:	add    ch,bl
   140012d2d:	fstp   st(5)
   140012d2f:	add    dh,bl
   140012d31:	(bad)  
   140012d33:	add    bh,bl
   140012d35:	(bad)  
   140012d37:	add    al,ah
   140012d39:	loopne 0x140012d1b
   140012d3b:	add    cl,ah
   140012d3d:	loope  0x140012d20
   140012d3f:	add    dl,ah
   140012d41:	loop   0x140012d25
   140012d43:	add    bl,ah
   140012d45:	jrcxz  0x140012d2a
   140012d47:	add    ah,ah
   140012d49:	in     al,0xe4
   140012d4b:	add    ch,ah
   140012d4d:	in     eax,0xe5
   140012d4f:	add    dh,ah
   140012d51:	out    0xe6,al
   140012d53:	add    bh,ah
   140012d55:	out    0xe7,eax
   140012d57:	add    al,ch
   140012d59:	call   0x129ea2e46
   140012d5e:	jmp    0x12aec1763
   140012d63:	add    bl,ch
   140012d65:	jmp    0x140012d52
   140012d67:	add    ah,ch
   140012d69:	in     al,dx
   140012d6a:	in     al,dx
   140012d6b:	add    ch,ch
   140012d6d:	in     eax,dx
   140012d6e:	in     eax,dx
   140012d6f:	add    dh,ch
   140012d71:	out    dx,al
   140012d72:	out    dx,al
   140012d73:	add    bh,ch
   140012d75:	out    dx,eax
   140012d76:	out    dx,eax
   140012d77:	add    al,dh
   140012d79:	lock lock add cl,dh
   140012d7d:	icebp  
   140012d7e:	icebp  
   140012d7f:	add    dl,dh
   140012d81:	repnz repnz add bl,dh
   140012d85:	repz repz add ah,dh
   140012d89:	hlt    
   140012d8a:	hlt    
   140012d8b:	add    ch,dh
   140012d8d:	cmc    
   140012d8e:	cmc    
   140012d8f:	add    dh,dh
   140012d91:	div    dh
   140012d93:	add    bh,dh
   140012d95:	div    edi
   140012d97:	add    al,bh
   140012d99:	clc    
   140012d9a:	clc    
   140012d9b:	add    cl,bh
   140012d9d:	stc    
   140012d9e:	stc    
   140012d9f:	add    dl,bh
   140012da1:	cli    
   140012da2:	cli    
   140012da3:	add    bl,bh
   140012da5:	sti    
   140012da6:	sti    
   140012da7:	add    ah,bh
   140012da9:	cld    
   140012daa:	cld    
   140012dab:	add    ch,bh
   140012dad:	std    
   140012dae:	std    
   140012daf:	add    dh,bh
   140012db1:	(bad)  
   140012db2:	inc    BYTE PTR [rax]
   140012db4:	(bad)  
   140012db5:	(bad)  
   140012db6:	inc    DWORD PTR [rax]
   140012db8:	(bad)  
   140012db9:	(bad)  
   140012dba:	(bad)  
   140012dbb:	(bad)  
   140012dbc:	(bad)  
   140012dbd:	(bad)  
   140012dbe:	(bad)  
   140012dbf:	(bad)  
   140012dc0:	(bad)  
   140012dc1:	(bad)  
   140012dc2:	(bad)  
   140012dc3:	(bad)  
   140012dc4:	(bad)  
   140012dc5:	(bad)  
   140012dc6:	inc    DWORD PTR [rax]
	...
   140012dec:	add    BYTE PTR [rdi],cl
   140012dee:	pop    rdi
   140012def:	(bad)  
	...
   140012df8:	(bad)  
   140012df9:	(bad)  
   140012dfa:	(bad)  
   140012dfb:	(bad)  
   140012dfc:	(bad)  
   140012dfd:	(bad)  
   140012dfe:	(bad)  
   140012dff:	(bad)  
   140012e00:	(bad)  
   140012e01:	(bad)  
   140012e02:	(bad)  
   140012e03:	(bad)  
   140012e04:	(bad)  
   140012e05:	(bad)  
   140012e06:	inc    DWORD PTR [rax]
	...
   140012e28:	add    BYTE PTR [rax],al
   140012e2a:	maxps  xmm5,XMMWORD PTR [rdi+0x6f8fdf]
   140012e31:	add    BYTE PTR [rax],al
   140012e33:	add    BYTE PTR [rax],al
   140012e35:	add    BYTE PTR [rax],al
   140012e37:	add    bh,bh
   140012e39:	(bad)  
   140012e3a:	(bad)  
   140012e3b:	(bad)  
   140012e3c:	(bad)  
   140012e3d:	(bad)  
   140012e3e:	(bad)  
   140012e3f:	(bad)  
   140012e40:	(bad)  
   140012e41:	(bad)  
   140012e42:	(bad)  
   140012e43:	(bad)  
   140012e44:	(bad)  
   140012e45:	(bad)  
   140012e46:	inc    DWORD PTR [rax]
	...
   140012e64:	add    BYTE PTR [rax],al
   140012e66:	add    BYTE PTR [rdi],cl
   140012e68:	pop    rdi
   140012e69:	scas   eax,DWORD PTR es:[rdi]
   140012e6a:	fisttp WORD PTR [rdi-0x5befdfd1]
	...
   140012e78:	(bad)  
   140012e79:	(bad)  
   140012e7a:	(bad)  
   140012e7b:	(bad)  
   140012e7c:	(bad)  
   140012e7d:	(bad)  
   140012e7e:	(bad)  
   140012e7f:	(bad)  
   140012e80:	(bad)  
   140012e81:	(bad)  
   140012e82:	(bad)  
   140012e83:	(bad)  
   140012e84:	(bad)  
   140012e85:	(bad)  
   140012e86:	inc    DWORD PTR [rax]
	...
   140012ea4:	add    BYTE PTR [rdi-0x61],cl
   140012ea7:	ror    DWORD PTR [rdi-0x1f7fcfc1],1
   140012ead:	jmp    QWORD PTR [rax-0x41]
	...
   140012eb8:	(bad)  
   140012eb9:	(bad)  
   140012eba:	(bad)  
   140012ebb:	(bad)  
   140012ebc:	(bad)  
   140012ebd:	(bad)  
   140012ebe:	(bad)  
   140012ebf:	(bad)  
   140012ec0:	(bad)  
   140012ec1:	(bad)  
   140012ec2:	(bad)  
   140012ec3:	(bad)  
   140012ec4:	(bad)  
   140012ec5:	(bad)  
   140012ec6:	inc    DWORD PTR [rax]
	...
   140012ee0:	add    BYTE PTR [rax],al
   140012ee2:	rex.WRXB lahf 
   140012ee4:	ror    DWORD PTR [rdi-0x1f6fcfd1],1
   140012eea:	(bad)  
   140012eeb:	(bad)  
   140012eec:	(bad)  
   140012eed:	push   QWORD PTR [rax+0x4f6f]
   140012ef3:	add    BYTE PTR [rax],al
   140012ef5:	add    BYTE PTR [rax],al
   140012ef7:	add    bh,bh
   140012ef9:	(bad)  
   140012efa:	(bad)  
   140012efb:	(bad)  
   140012efc:	(bad)  
   140012efd:	(bad)  
   140012efe:	(bad)  
   140012eff:	(bad)  
   140012f00:	(bad)  
   140012f01:	(bad)  
   140012f02:	(bad)  
   140012f03:	(bad)  
   140012f04:	(bad)  
   140012f05:	(bad)  
   140012f06:	inc    DWORD PTR [rax]
	...
   140012f1c:	add    BYTE PTR [rax],al
   140012f1e:	add    BYTE PTR [rdi-0x61],cl
   140012f21:	rcr    DWORD PTR [rdi-0x1f6fcfc1],1
   140012f27:	(bad)  
   140012f28:	(bad)  
   140012f29:	(bad)  
   140012f2a:	(bad)  
   140012f2b:	(bad)  
   140012f2c:	(bad)  
   140012f2d:	push   rax
   140012f2f:	sub    eax,0x8f
   140012f34:	add    BYTE PTR [rax],al
   140012f36:	add    BYTE PTR [rax],al
   140012f38:	(bad)  
   140012f39:	(bad)  
   140012f3a:	(bad)  
   140012f3b:	(bad)  
   140012f3c:	(bad)  
   140012f3d:	(bad)  
   140012f3e:	(bad)  
   140012f3f:	(bad)  
   140012f40:	(bad)  
   140012f41:	(bad)  
   140012f42:	(bad)  
   140012f43:	(bad)  
   140012f44:	(bad)  
   140012f45:	(bad)  
   140012f46:	inc    DWORD PTR [rax]
	...
   140012f5c:	(bad)  
   140012f5d:	pop    rdx
   140012f5f:	jg     0x140012f90
   140012f61:	and    BYTE PTR [rax-0x20],dl
   140012f67:	(bad)  
   140012f68:	(bad)  
   140012f69:	(bad)  
   140012f6a:	(bad)  
   140012f6b:	(bad)  
   140012f6c:	(bad)  
   140012f6d:	(bad)  
   140012f6e:	call   QWORD PTR [rax-0x3d]
   140012f71:	add    BYTE PTR [rax],al
   140012f73:	add    BYTE PTR [rax],al
   140012f75:	add    BYTE PTR [rax],al
   140012f77:	add    bh,bh
   140012f79:	(bad)  
   140012f7a:	(bad)  
   140012f7b:	(bad)  
   140012f7c:	(bad)  
   140012f7d:	(bad)  
   140012f7e:	(bad)  
   140012f7f:	(bad)  
   140012f80:	(bad)  
   140012f81:	(bad)  
   140012f82:	(bad)  
   140012f83:	(bad)  
   140012f84:	(bad)  
   140012f85:	(bad)  
   140012f86:	inc    DWORD PTR [rax]
	...
   140012f98:	add    BYTE PTR [rdi],ch
   140012f9a:	pop    rbx
   140012f9c:	(bad)  
   140012f9d:	(bad)  
   140012f9e:	and    BYTE PTR [rax-0x30],dh
   140012fa1:	(bad)  
   140012fa2:	(bad)  
   140012fa3:	(bad)  
   140012fa4:	(bad)  
   140012fa5:	(bad)  
   140012fa6:	(bad)  
   140012fa7:	(bad)  
   140012fa8:	(bad)  
   140012fa9:	(bad)  
   140012faa:	(bad)  
   140012fab:	(bad)  
   140012fac:	(bad)  
   140012fad:	(bad)  
   140012fae:	call   QWORD PTR [rax+0x2f5f]
   140012fb4:	add    BYTE PTR [rax],al
   140012fb6:	add    BYTE PTR [rax],al
   140012fb8:	(bad)  
   140012fb9:	(bad)  
   140012fba:	(bad)  
   140012fbb:	(bad)  
   140012fbc:	(bad)  
   140012fbd:	(bad)  
   140012fbe:	(bad)  
   140012fbf:	(bad)  
   140012fc0:	(bad)  
   140012fc1:	(bad)  
   140012fc2:	(bad)  
   140012fc3:	(bad)  
   140012fc4:	(bad)  
   140012fc5:	(bad)  
   140012fc6:	inc    DWORD PTR [rax]
	...
   140012fd4:	add    BYTE PTR [rax],al
   140012fd6:	(bad)  
   140012fd7:	(bad)  
   140012fd8:	fild   QWORD PTR [rdi-0x2f8fefb1]
   140012fde:	(bad)  
   140012fdf:	(bad)  
   140012fe0:	(bad)  
   140012fe1:	(bad)  
   140012fe2:	(bad)  
   140012fe3:	(bad)  
   140012fe4:	(bad)  
   140012fe5:	(bad)  
   140012fe6:	(bad)  
   140012fe7:	(bad)  
   140012fe8:	(bad)  
   140012fe9:	(bad)  
   140012fea:	(bad)  
   140012feb:	(bad)  
   140012fec:	(bad)  
   140012fed:	(bad)  
   140012fee:	call   rax
   140012ff0:	movq   mm0,QWORD PTR [rax]
   140012ff3:	add    BYTE PTR [rax],al
   140012ff5:	add    BYTE PTR [rax],al
   140012ff7:	add    bh,bh
   140012ff9:	(bad)  
   140012ffa:	(bad)  
   140012ffb:	(bad)  
   140012ffc:	(bad)  
   140012ffd:	(bad)  
   140012ffe:	(bad)  
   140012fff:	(bad)  
   140013000:	(bad)  
   140013001:	(bad)  
   140013002:	(bad)  
   140013003:	(bad)  
   140013004:	(bad)  
   140013005:	(bad)  
   140013006:	inc    DWORD PTR [rax]
	...
   140013010:	add    BYTE PTR [rax],al
   140013012:	add    BYTE PTR [rdi],bl
   140013014:	jg     0x140012ff5
   140013016:	fistp  QWORD PTR [rdi+0x2d]
   140013019:	(bad)  
   14001301a:	mov    al,0xff
   14001301c:	(bad)  
   14001301d:	(bad)  
   14001301e:	(bad)  
   14001301f:	(bad)  
   140013020:	(bad)  
   140013021:	(bad)  
   140013022:	(bad)  
   140013023:	(bad)  
   140013024:	(bad)  
   140013025:	(bad)  
   140013026:	(bad)  
   140013027:	(bad)  
   140013028:	(bad)  
   140013029:	(bad)  
   14001302a:	(bad)  
   14001302b:	(bad)  
   14001302c:	(bad)  
   14001302d:	(bad)  
   14001302e:	(bad)  
   14001302f:	jmp    QWORD PTR [rax]
   140013031:	pop    QWORD PTR [rax]
   140013033:	add    BYTE PTR [rax],al
   140013035:	add    BYTE PTR [rax],al
   140013037:	add    bh,bh
   140013039:	(bad)  
   14001303a:	(bad)  
   14001303b:	(bad)  
   14001303c:	(bad)  
   14001303d:	(bad)  
   14001303e:	(bad)  
   14001303f:	(bad)  
   140013040:	(bad)  
   140013041:	(bad)  
   140013042:	(bad)  
   140013043:	(bad)  
   140013044:	(bad)  
   140013045:	(bad)  
   140013046:	inc    DWORD PTR [rax]
	...
   140013050:	(bad)  
   140013051:	outs   dx,DWORD PTR ds:[rsi]
   140013052:	iret   
   140013053:	iret   
   140013054:	jg     0x140013085
   140013056:	push   rax
   140013057:	mov    al,0xff
   140013059:	(bad)  
   14001305a:	(bad)  
   14001305b:	(bad)  
   14001305c:	(bad)  
   14001305d:	(bad)  
   14001305e:	(bad)  
   14001305f:	(bad)  
   140013060:	(bad)  
   140013061:	(bad)  
   140013062:	(bad)  
   140013063:	(bad)  
   140013064:	(bad)  
   140013065:	(bad)  
   140013066:	(bad)  
   140013067:	(bad)  
   140013068:	(bad)  
   140013069:	(bad)  
   14001306a:	(bad)  
   14001306b:	(bad)  
   14001306c:	(bad)  
   14001306d:	(bad)  
   14001306e:	(bad)  
   14001306f:	jmp    QWORD PTR [rax-0x71]
   140013072:	sldt   WORD PTR [rax]
   140013075:	add    BYTE PTR [rax],al
   140013077:	add    bh,bh
   140013079:	(bad)  
   14001307a:	(bad)  
   14001307b:	(bad)  
   14001307c:	(bad)  
   14001307d:	(bad)  
   14001307e:	(bad)  
   14001307f:	(bad)  
   140013080:	(bad)  
   140013081:	(bad)  
   140013082:	(bad)  
   140013083:	(bad)  
   140013084:	(bad)  
   140013085:	(bad)  
   140013086:	inc    DWORD PTR [rax]
   140013088:	add    BYTE PTR [rax],al
   14001308a:	add    BYTE PTR [rax],al
   14001308c:	add    BYTE PTR [rax],al
   14001308e:	outs   dx,DWORD PTR ds:[rsi]
   14001308f:	iret   
   140013090:	iret   
   140013091:	(bad)  
   140013092:	(bad)  
   140013093:	xor    BYTE PTR [rax-0x10],ah
   140013099:	(bad)  
   14001309a:	(bad)  
   14001309b:	(bad)  
   14001309c:	(bad)  
   14001309d:	(bad)  
   14001309e:	(bad)  
   14001309f:	(bad)  
   1400130a0:	(bad)  
   1400130a1:	(bad)  
   1400130a2:	(bad)  
   1400130a3:	(bad)  
   1400130a4:	(bad)  
   1400130a5:	(bad)  
   1400130a6:	(bad)  
   1400130a7:	(bad)  
   1400130a8:	(bad)  
   1400130a9:	(bad)  
   1400130aa:	(bad)  
   1400130ab:	(bad)  
   1400130ac:	(bad)  
   1400130ad:	(bad)  
   1400130ae:	(bad)  
   1400130af:	inc    eax
   1400130b1:	rex.WRXB
   1400130b2:	rex.WRXB add BYTE PTR [r8],r8b
   1400130b5:	add    BYTE PTR [rax],al
   1400130b7:	add    bh,bh
   1400130b9:	(bad)  
   1400130ba:	(bad)  
   1400130bb:	(bad)  
   1400130bc:	(bad)  
   1400130bd:	(bad)  
   1400130be:	(bad)  
   1400130bf:	(bad)  
   1400130c0:	(bad)  
   1400130c1:	(bad)  
   1400130c2:	(bad)  
   1400130c3:	(bad)  
   1400130c4:	(bad)  
   1400130c5:	(bad)  
   1400130c6:	inc    DWORD PTR [rax]
   1400130c8:	add    BYTE PTR [rax],al
   1400130ca:	add    BYTE PTR [rax],al
   1400130cc:	add    BYTE PTR [rax],al
   1400130ce:	iret   
   1400130cf:	(bad)  
   1400130d0:	and    BYTE PTR [rax-0x20],dl
   1400130d6:	(bad)  
   1400130d7:	(bad)  
   1400130d8:	(bad)  
   1400130d9:	(bad)  
   1400130da:	(bad)  
   1400130db:	(bad)  
   1400130dc:	(bad)  
   1400130dd:	(bad)  
   1400130de:	(bad)  
   1400130df:	(bad)  
   1400130e0:	(bad)  
   1400130e1:	(bad)  
   1400130e2:	(bad)  
   1400130e3:	(bad)  
   1400130e4:	(bad)  
   1400130e5:	(bad)  
   1400130e6:	(bad)  
   1400130e7:	(bad)  
   1400130e8:	(bad)  
   1400130e9:	(bad)  
   1400130ea:	(bad)  
   1400130eb:	(bad)  
   1400130ec:	(bad)  
   1400130ed:	(bad)  
   1400130ee:	(bad)  
   1400130ef:	(bad)  
   1400130f0:	call   QWORD PTR [rax]
   1400130f2:	lahf   
   1400130f3:	add    BYTE PTR [rax],al
   1400130f5:	add    BYTE PTR [rax],al
   1400130f7:	add    bh,bh
   1400130f9:	(bad)  
   1400130fa:	(bad)  
   1400130fb:	(bad)  
   1400130fc:	(bad)  
   1400130fd:	(bad)  
   1400130fe:	(bad)  
   1400130ff:	(bad)  
   140013100:	(bad)  
   140013101:	(bad)  
   140013102:	(bad)  
   140013103:	(bad)  
   140013104:	(bad)  
   140013105:	(bad)  
   140013106:	inc    DWORD PTR [rax]
   140013108:	add    BYTE PTR [rax],al
   14001310a:	add    BYTE PTR [rax],al
   14001310c:	add    BYTE PTR [rax],al
   14001310e:	(bad)  
   14001310f:	pop    rdi
   140013110:	sar    bh,1
   140013112:	(bad)  
   140013113:	(bad)  
   140013114:	(bad)  
   140013115:	(bad)  
   140013116:	(bad)  
   140013117:	(bad)  
   140013118:	(bad)  
   140013119:	(bad)  
   14001311a:	(bad)  
   14001311b:	(bad)  
   14001311c:	(bad)  
   14001311d:	(bad)  
   14001311e:	(bad)  
   14001311f:	(bad)  
   140013120:	(bad)  
   140013121:	(bad)  
   140013122:	(bad)  
   140013123:	(bad)  
   140013124:	(bad)  
   140013125:	(bad)  
   140013126:	(bad)  
   140013127:	(bad)  
   140013128:	(bad)  
   140013129:	(bad)  
   14001312a:	(bad)  
   14001312b:	(bad)  
   14001312c:	(bad)  
   14001312d:	(bad)  
   14001312e:	(bad)  
   14001312f:	(bad)  
   140013130:	jmp    QWORD PTR [rax-0x5c]
   140013133:	add    BYTE PTR [rax],al
   140013135:	add    BYTE PTR [rax],al
   140013137:	add    bh,bh
   140013139:	(bad)  
   14001313a:	(bad)  
   14001313b:	(bad)  
   14001313c:	(bad)  
   14001313d:	(bad)  
   14001313e:	(bad)  
   14001313f:	(bad)  
   140013140:	(bad)  
   140013141:	(bad)  
   140013142:	(bad)  
   140013143:	(bad)  
   140013144:	(bad)  
   140013145:	(bad)  
   140013146:	inc    DWORD PTR [rax]
   140013148:	add    BYTE PTR [rax],al
   14001314a:	add    BYTE PTR [rax],al
   14001314c:	add    BYTE PTR [rax],al
   14001314e:	(bad)  
   14001314f:	lahf   
   140013150:	movabs al,ds:0xffffffffffffffff
   140013159:	(bad)  
   14001315a:	(bad)  
   14001315b:	(bad)  
   14001315c:	(bad)  
   14001315d:	(bad)  
   14001315e:	(bad)  
   14001315f:	(bad)  
   140013160:	(bad)  
   140013161:	(bad)  
   140013162:	(bad)  
   140013163:	(bad)  
   140013164:	(bad)  
   140013165:	(bad)  
   140013166:	(bad)  
   140013167:	(bad)  
   140013168:	(bad)  
   140013169:	(bad)  
   14001316a:	(bad)  
   14001316b:	(bad)  
   14001316c:	(bad)  
   14001316d:	(bad)  
   14001316e:	(bad)  
   14001316f:	(bad)  
   140013170:	push   QWORD PTR [rax+0x2f5f]
   140013176:	add    BYTE PTR [rax],al
   140013178:	(bad)  
   140013179:	(bad)  
   14001317a:	(bad)  
   14001317b:	(bad)  
   14001317c:	(bad)  
   14001317d:	(bad)  
   14001317e:	(bad)  
   14001317f:	(bad)  
   140013180:	(bad)  
   140013181:	(bad)  
   140013182:	(bad)  
   140013183:	(bad)  
   140013184:	(bad)  
   140013185:	(bad)  
   140013186:	inc    DWORD PTR [rax]
   140013188:	add    BYTE PTR [rax],al
   14001318a:	add    BYTE PTR [rax],al
   14001318c:	add    BYTE PTR [rax],al
   14001318e:	add    al,ah
   140013190:	push   rax
   140013191:	(bad)  
   140013192:	(bad)  
   140013193:	(bad)  
   140013194:	(bad)  
   140013195:	(bad)  
   140013196:	(bad)  
   140013197:	(bad)  
   140013198:	(bad)  
   140013199:	(bad)  
   14001319a:	(bad)  
   14001319b:	(bad)  
   14001319c:	(bad)  
   14001319d:	(bad)  
   14001319e:	(bad)  
   14001319f:	(bad)  
   1400131a0:	(bad)  
   1400131a1:	(bad)  
   1400131a2:	(bad)  
   1400131a3:	(bad)  
   1400131a4:	(bad)  
   1400131a5:	(bad)  
   1400131a6:	(bad)  
   1400131a7:	(bad)  
   1400131a8:	(bad)  
   1400131a9:	(bad)  
   1400131aa:	(bad)  
   1400131ab:	(bad)  
   1400131ac:	(bad)  
   1400131ad:	(bad)  
   1400131ae:	(bad)  
   1400131af:	(bad)  
   1400131b0:	(bad)  
   1400131b1:	call   FWORD PTR [rsi]
   1400131b3:	jg     0x1400131b5
   1400131b5:	add    BYTE PTR [rax],al
   1400131b7:	add    bh,bh
   1400131b9:	(bad)  
   1400131ba:	(bad)  
   1400131bb:	(bad)  
   1400131bc:	(bad)  
   1400131bd:	(bad)  
   1400131be:	(bad)  
   1400131bf:	(bad)  
   1400131c0:	(bad)  
   1400131c1:	(bad)  
   1400131c2:	(bad)  
   1400131c3:	(bad)  
   1400131c4:	(bad)  
   1400131c5:	(bad)  
   1400131c6:	inc    DWORD PTR [rax]
   1400131c8:	add    BYTE PTR [rax],al
   1400131ca:	add    BYTE PTR [rax],al
   1400131cc:	add    BYTE PTR [rax],al
   1400131ce:	add    BYTE PTR [rdi-0xd1],bl
   1400131d4:	(bad)  
   1400131d5:	(bad)  
   1400131d6:	(bad)  
   1400131d7:	(bad)  
   1400131d8:	(bad)  
   1400131d9:	(bad)  
   1400131da:	(bad)  
   1400131db:	(bad)  
   1400131dc:	(bad)  
   1400131dd:	(bad)  
   1400131de:	(bad)  
   1400131df:	(bad)  
   1400131e0:	(bad)  
   1400131e1:	(bad)  
   1400131e2:	(bad)  
   1400131e3:	(bad)  
   1400131e4:	(bad)  
   1400131e5:	(bad)  
   1400131e6:	(bad)  
   1400131e7:	(bad)  
   1400131e8:	(bad)  
   1400131e9:	(bad)  
   1400131ea:	(bad)  
   1400131eb:	(bad)  
   1400131ec:	(bad)  
   1400131ed:	(bad)  
   1400131ee:	(bad)  
   1400131ef:	(bad)  
   1400131f0:	(bad)  
   1400131f1:	call   QWORD PTR [rax-0x58]
   1400131f4:	add    BYTE PTR [rax],al
   1400131f6:	add    BYTE PTR [rax],al
   1400131f8:	(bad)  
   1400131f9:	(bad)  
   1400131fa:	(bad)  
   1400131fb:	(bad)  
   1400131fc:	(bad)  
   1400131fd:	(bad)  
   1400131fe:	(bad)  
   1400131ff:	(bad)  
   140013200:	(bad)  
   140013201:	(bad)  
   140013202:	(bad)  
   140013203:	(bad)  
   140013204:	(bad)  
   140013205:	(bad)  
   140013206:	inc    DWORD PTR [rax]
   140013208:	add    BYTE PTR [rax],al
   14001320a:	add    BYTE PTR [rax],al
   14001320c:	add    BYTE PTR [rax],al
   14001320e:	add    BYTE PTR [rdi+0x5f],cl
   140013211:	mov    al,0xff
   140013213:	(bad)  
   140013214:	(bad)  
   140013215:	(bad)  
   140013216:	(bad)  
   140013217:	(bad)  
   140013218:	(bad)  
   140013219:	(bad)  
   14001321a:	(bad)  
   14001321b:	(bad)  
   14001321c:	(bad)  
   14001321d:	(bad)  
   14001321e:	(bad)  
   14001321f:	(bad)  
   140013220:	(bad)  
   140013221:	(bad)  
   140013222:	(bad)  
   140013223:	(bad)  
   140013224:	(bad)  
   140013225:	(bad)  
   140013226:	(bad)  
   140013227:	(bad)  
   140013228:	(bad)  
   140013229:	(bad)  
   14001322a:	(bad)  
   14001322b:	(bad)  
   14001322c:	(bad)  
   14001322d:	(bad)  
   14001322e:	(bad)  
   14001322f:	(bad)  
   140013230:	(bad)  
   140013231:	call   QWORD PTR [rax+0xf8f]
   140013237:	add    bh,bh
   140013239:	(bad)  
   14001323a:	(bad)  
   14001323b:	(bad)  
   14001323c:	(bad)  
   14001323d:	(bad)  
   14001323e:	(bad)  
   14001323f:	(bad)  
   140013240:	(bad)  
   140013241:	(bad)  
   140013242:	(bad)  
   140013243:	(bad)  
   140013244:	(bad)  
   140013245:	(bad)  
   140013246:	inc    DWORD PTR [rax]
   140013248:	add    BYTE PTR [rax],al
   14001324a:	add    BYTE PTR [rax],al
   14001324c:	add    BYTE PTR [rax],al
   14001324e:	add    BYTE PTR [rdi],cl
   140013250:	scas   eax,DWORD PTR es:[rdi]
   140013251:	jo     0x140013252
   140013253:	(bad)  
   140013254:	(bad)  
   140013255:	(bad)  
   140013256:	(bad)  
   140013257:	(bad)  
   140013258:	(bad)  
   140013259:	(bad)  
   14001325a:	(bad)  
   14001325b:	(bad)  
   14001325c:	(bad)  
   14001325d:	(bad)  
   14001325e:	(bad)  
   14001325f:	(bad)  
   140013260:	(bad)  
   140013261:	(bad)  
   140013262:	(bad)  
   140013263:	(bad)  
   140013264:	(bad)  
   140013265:	(bad)  
   140013266:	(bad)  
   140013267:	(bad)  
   140013268:	(bad)  
   140013269:	(bad)  
   14001326a:	(bad)  
   14001326b:	(bad)  
   14001326c:	(bad)  
   14001326d:	(bad)  
   14001326e:	(bad)  
   14001326f:	(bad)  
   140013270:	(bad)  
   140013271:	call   rax
   140013273:	(bad)  
   140013274:	pop    rdi
   140013275:	add    BYTE PTR [rax],al
   140013277:	add    bh,bh
   140013279:	(bad)  
   14001327a:	(bad)  
   14001327b:	(bad)  
   14001327c:	(bad)  
   14001327d:	(bad)  
   14001327e:	(bad)  
   14001327f:	(bad)  
   140013280:	(bad)  
   140013281:	(bad)  
   140013282:	(bad)  
   140013283:	(bad)  
   140013284:	(bad)  
   140013285:	(bad)  
   140013286:	inc    DWORD PTR [rax]
	...
   140013290:	scas   eax,DWORD PTR es:[rdi]
   140013291:	sub    eax,0xffffffff
   140013296:	(bad)  
   140013297:	(bad)  
   140013298:	(bad)  
   140013299:	(bad)  
   14001329a:	(bad)  
   14001329b:	(bad)  
   14001329c:	(bad)  
   14001329d:	(bad)  
   14001329e:	(bad)  
   14001329f:	(bad)  
   1400132a0:	(bad)  
   1400132a1:	(bad)  
   1400132a2:	(bad)  
   1400132a3:	(bad)  
   1400132a4:	(bad)  
   1400132a5:	(bad)  
   1400132a6:	(bad)  
   1400132a7:	(bad)  
   1400132a8:	(bad)  
   1400132a9:	(bad)  
   1400132aa:	(bad)  
   1400132ab:	(bad)  
   1400132ac:	(bad)  
   1400132ad:	(bad)  
   1400132ae:	(bad)  
   1400132af:	(bad)  
   1400132b0:	(bad)  
   1400132b1:	(bad)  
   1400132b2:	jmp    QWORD PTR [rax]
   1400132b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400132b5:	add    BYTE PTR [rax],al
   1400132b7:	add    bh,bh
   1400132b9:	(bad)  
   1400132ba:	(bad)  
   1400132bb:	(bad)  
   1400132bc:	(bad)  
   1400132bd:	(bad)  
   1400132be:	(bad)  
   1400132bf:	(bad)  
   1400132c0:	(bad)  
   1400132c1:	(bad)  
   1400132c2:	(bad)  
   1400132c3:	(bad)  
   1400132c4:	(bad)  
   1400132c5:	(bad)  
   1400132c6:	inc    DWORD PTR [rax]
	...
   1400132d0:	jg     0x140013321
   1400132d2:	sar    bh,1
   1400132d4:	(bad)  
   1400132d5:	(bad)  
   1400132d6:	(bad)  
   1400132d7:	(bad)  
   1400132d8:	(bad)  
   1400132d9:	(bad)  
   1400132da:	(bad)  
   1400132db:	(bad)  
   1400132dc:	(bad)  
   1400132dd:	(bad)  
   1400132de:	(bad)  
   1400132df:	(bad)  
   1400132e0:	(bad)  
   1400132e1:	(bad)  
   1400132e2:	(bad)  
   1400132e3:	(bad)  
   1400132e4:	(bad)  
   1400132e5:	(bad)  
   1400132e6:	(bad)  
   1400132e7:	(bad)  
   1400132e8:	(bad)  
   1400132e9:	(bad)  
   1400132ea:	(bad)  
   1400132eb:	(bad)  
   1400132ec:	(bad)  
   1400132ed:	(bad)  
   1400132ee:	(bad)  
   1400132ef:	(bad)  
   1400132f0:	(bad)  
   1400132f1:	(bad)  
   1400132f2:	jmp    QWORD PTR [rax-0x7a]
   1400132f5:	add    BYTE PTR [rax],al
   1400132f7:	add    bh,bh
   1400132f9:	(bad)  
   1400132fa:	(bad)  
   1400132fb:	(bad)  
   1400132fc:	(bad)  
   1400132fd:	(bad)  
   1400132fe:	(bad)  
   1400132ff:	(bad)  
   140013300:	(bad)  
   140013301:	(bad)  
   140013302:	(bad)  
   140013303:	(bad)  
   140013304:	(bad)  
   140013305:	(bad)  
   140013306:	inc    DWORD PTR [rax]
	...
   140013310:	mov    edi,0xffff907f
   140013315:	(bad)  
   140013316:	(bad)  
   140013317:	(bad)  
   140013318:	(bad)  
   140013319:	(bad)  
   14001331a:	(bad)  
   14001331b:	(bad)  
   14001331c:	(bad)  
   14001331d:	(bad)  
   14001331e:	(bad)  
   14001331f:	(bad)  
   140013320:	(bad)  
   140013321:	(bad)  
   140013322:	(bad)  
   140013323:	(bad)  
   140013324:	(bad)  
   140013325:	(bad)  
   140013326:	(bad)  
   140013327:	(bad)  
   140013328:	(bad)  
   140013329:	(bad)  
   14001332a:	(bad)  
   14001332b:	(bad)  
   14001332c:	(bad)  
   14001332d:	(bad)  
   14001332e:	(bad)  
   14001332f:	push   rax
   140013331:	movabs al,ds:0xffff00003faf0f50
   14001333a:	(bad)  
   14001333b:	(bad)  
   14001333c:	(bad)  
   14001333d:	(bad)  
   14001333e:	(bad)  
   14001333f:	(bad)  
   140013340:	(bad)  
   140013341:	(bad)  
   140013342:	(bad)  
   140013343:	(bad)  
   140013344:	(bad)  
   140013345:	(bad)  
   140013346:	inc    DWORD PTR [rax]
   140013348:	add    BYTE PTR [rax],al
   14001334a:	add    BYTE PTR [rax],al
   14001334c:	add    BYTE PTR [rax],al
   14001334e:	add    BYTE PTR [rdi],bh
   140013350:	outs   dx,DWORD PTR ds:[rsi]
   140013351:	xor    BYTE PTR [rdi+rdi*8-0x1],cl
   140013355:	(bad)  
   140013356:	(bad)  
   140013357:	(bad)  
   140013358:	(bad)  
   140013359:	(bad)  
   14001335a:	(bad)  
   14001335b:	(bad)  
   14001335c:	(bad)  
   14001335d:	(bad)  
   14001335e:	(bad)  
   14001335f:	(bad)  
   140013360:	(bad)  
   140013361:	(bad)  
   140013362:	(bad)  
   140013363:	(bad)  
   140013364:	(bad)  
   140013365:	(bad)  
   140013366:	(bad)  
   140013367:	(bad)  
   140013368:	(bad)  
   140013369:	(bad)  
   14001336a:	(bad)  
   14001336b:	(bad)  
   14001336c:	(bad)  
   14001336d:	push   QWORD PTR [rax-0x50a0e1a0]
   140013373:	iret   
   140013374:	outs   dx,DWORD PTR ds:[rsi]
   140013375:	sldt   WORD PTR [rax]
   140013378:	(bad)  
   140013379:	(bad)  
   14001337a:	(bad)  
   14001337b:	(bad)  
   14001337c:	(bad)  
   14001337d:	(bad)  
   14001337e:	(bad)  
   14001337f:	(bad)  
   140013380:	(bad)  
   140013381:	(bad)  
   140013382:	(bad)  
   140013383:	(bad)  
   140013384:	(bad)  
   140013385:	(bad)  
   140013386:	inc    DWORD PTR [rax]
   140013388:	add    BYTE PTR [rax],al
   14001338a:	(bad)  
   14001338b:	(bad)  
   14001338c:	mov    edi,0xefffdf
   140013391:	call   rax
   140013393:	lock (bad) 
   140013395:	(bad)  
   140013396:	(bad)  
   140013397:	(bad)  
   140013398:	(bad)  
   140013399:	(bad)  
   14001339a:	(bad)  
   14001339b:	(bad)  
   14001339c:	(bad)  
   14001339d:	(bad)  
   14001339e:	(bad)  
   14001339f:	(bad)  
   1400133a0:	(bad)  
   1400133a1:	(bad)  
   1400133a2:	(bad)  
   1400133a3:	(bad)  
   1400133a4:	(bad)  
   1400133a5:	(bad)  
   1400133a6:	(bad)  
   1400133a7:	(bad)  
   1400133a8:	(bad)  
   1400133a9:	(bad)  
   1400133aa:	call   rax
   1400133ac:	jo     0x1400133cc
   1400133ae:	pop    rdi
   1400133af:	scas   eax,DWORD PTR es:[rdi]
   1400133b0:	fistp  QWORD PTR [rdi+0x1f]
   1400133b3:	add    BYTE PTR [rax],al
   1400133b5:	add    BYTE PTR [rax],al
   1400133b7:	add    bh,bh
   1400133b9:	(bad)  
   1400133ba:	(bad)  
   1400133bb:	(bad)  
   1400133bc:	(bad)  
   1400133bd:	(bad)  
   1400133be:	(bad)  
   1400133bf:	(bad)  
   1400133c0:	(bad)  
   1400133c1:	(bad)  
   1400133c2:	(bad)  
   1400133c3:	(bad)  
   1400133c4:	(bad)  
   1400133c5:	(bad)  
   1400133c6:	inc    DWORD PTR [rax]
   1400133c8:	add    BYTE PTR [rax],al
   1400133ca:	lahf   
   1400133cb:	rex.WRXB (bad) 
   1400133cd:	(bad)  
   1400133ce:	nop    DWORD PTR [rax-0x5b]
   1400133d2:	inc    esp
   1400133d4:	(bad)  
   1400133d5:	(bad)  
   1400133d6:	(bad)  
   1400133d7:	(bad)  
   1400133d8:	(bad)  
   1400133d9:	(bad)  
   1400133da:	(bad)  
   1400133db:	(bad)  
   1400133dc:	(bad)  
   1400133dd:	(bad)  
   1400133de:	(bad)  
   1400133df:	(bad)  
   1400133e0:	(bad)  
   1400133e1:	(bad)  
   1400133e2:	(bad)  
   1400133e3:	(bad)  
   1400133e4:	(bad)  
   1400133e5:	(bad)  
   1400133e6:	(bad)  
   1400133e7:	jmp    rax
   1400133e9:	jo     0x14001340b
   1400133eb:	rex.WRXB scas rax,QWORD PTR es:[rdi]
   1400133ed:	fisttp WORD PTR [rdi+0x2f]
   1400133f3:	add    BYTE PTR [rax],al
   1400133f5:	add    BYTE PTR [rax],al
   1400133f7:	add    bh,bh
   1400133f9:	(bad)  
   1400133fa:	(bad)  
   1400133fb:	(bad)  
   1400133fc:	(bad)  
   1400133fd:	(bad)  
   1400133fe:	(bad)  
   1400133ff:	(bad)  
   140013400:	(bad)  
   140013401:	(bad)  
   140013402:	(bad)  
   140013403:	(bad)  
   140013404:	(bad)  
   140013405:	(bad)  
   140013406:	jmp    FWORD PTR [rdi-0x21]
   140013409:	iret   
   14001340a:	lahf   
   14001340b:	rol    al,0xc0
   14001340f:	rcl    BYTE PTR [rax-0x6f4c4d10],0x50
   140013416:	xor    BYTE PTR [rax],dh
   140013418:	sar    bh,0xff
   14001341b:	(bad)  
   14001341c:	(bad)  
   14001341d:	(bad)  
   14001341e:	(bad)  
   14001341f:	(bad)  
   140013420:	(bad)  
   140013421:	(bad)  
   140013422:	(bad)  
   140013423:	(bad)  
   140013424:	jmp    rax
   140013426:	nop
   140013427:	xor    BYTE PTR [rdi-0x61],cl
   14001342a:	loopne 0x1400133cb
   14001342c:	(bad)  
	...
   140013435:	add    BYTE PTR [rax],al
   140013437:	add    bh,bh
   140013439:	(bad)  
   14001343a:	(bad)  
   14001343b:	(bad)  
   14001343c:	(bad)  
   14001343d:	(bad)  
   14001343e:	(bad)  
   14001343f:	(bad)  
   140013440:	(bad)  
   140013441:	(bad)  
   140013442:	(bad)  
   140013443:	(bad)  
   140013444:	(bad)  
   140013445:	(bad)  
   140013446:	jmp    FWORD PTR [rdi-0x6b7fdf01]
   14001344c:	rol    al,0xff
   14001344f:	call   FWORD PTR [rbp+0x1058f0ff]
   140013455:	xor    BYTE PTR [rax-0x70],ah
   140013458:	xor    al,al
   14001345a:	(bad)  
   14001345b:	(bad)  
   14001345c:	(bad)  
   14001345d:	(bad)  
   14001345e:	(bad)  
   14001345f:	(bad)  
   140013460:	(bad)  
   140013461:	jmp    rax
   140013463:	nop
   140013464:	xor    BYTE PTR [rdi],ch
   140013466:	(bad)  
   140013467:	loopne 0x140013408
   140013469:	rex.WRXB add BYTE PTR [r8],r8b
	...
   140013478:	(bad)  
   140013479:	(bad)  
   14001347a:	(bad)  
   14001347b:	(bad)  
   14001347c:	(bad)  
   14001347d:	(bad)  
   14001347e:	(bad)  
   14001347f:	(bad)  
   140013480:	(bad)  
   140013481:	(bad)  
   140013482:	(bad)  
   140013483:	(bad)  
   140013484:	(bad)  
   140013485:	(bad)  
   140013486:	jmp    FWORD PTR [rdi-0x1]
   140013489:	and    al,ah
   14001348b:	enter  0xffff,0xff
   14001348f:	push   rax
   140013491:	rex.WR jo 0x14001341c
   140013494:	loopne 0x14001346c
   140013496:	(bad)  
   140013497:	push   rax
   140013499:	push   rdi
   14001349a:	(bad)  
   14001349b:	(bad)  
   14001349c:	(bad)  
   14001349d:	(bad)  
   14001349e:	push   rax
   1400134a0:	movabs al,ds:0x5fafdf6f1f50
	...
   1400134b5:	add    BYTE PTR [rax],al
   1400134b7:	add    bh,bh
   1400134b9:	(bad)  
   1400134ba:	(bad)  
   1400134bb:	(bad)  
   1400134bc:	(bad)  
   1400134bd:	(bad)  
   1400134be:	(bad)  
   1400134bf:	(bad)  
   1400134c0:	(bad)  
   1400134c1:	(bad)  
   1400134c2:	(bad)  
   1400134c3:	(bad)  
   1400134c4:	(bad)  
   1400134c5:	(bad)  
   1400134c6:	dec    DWORD PTR [rdi]
   1400134c8:	out    dx,eax
   1400134c9:	rcr    BYTE PTR gs:[rax-0x4e],1
   1400134d0:	lock fs sar bh,1
   1400134d4:	mov    eax,0xffffffff
   1400134d9:	rcl    al,1
   1400134db:	(bad)  
   1400134dc:	jmp    QWORD PTR [rsi-0x40b0ef82]
   1400134e2:	iret   
   1400134e3:	outs   dx,DWORD PTR ds:[rsi]
   1400134e4:	(bad)  
	...
   1400134f5:	add    BYTE PTR [rax],al
   1400134f7:	add    bh,bh
   1400134f9:	(bad)  
   1400134fa:	(bad)  
   1400134fb:	(bad)  
   1400134fc:	(bad)  
   1400134fd:	(bad)  
   1400134fe:	(bad)  
   1400134ff:	(bad)  
   140013500:	(bad)  
   140013501:	(bad)  
   140013502:	(bad)  
   140013503:	(bad)  
   140013504:	(bad)  
   140013505:	(bad)  
   140013506:	inc    DWORD PTR [rax]
   140013508:	pop    rdi
   140013509:	lahf   
   14001350a:	nop
   14001350b:	push   rax
   14001350d:	xchg   edx,eax
   14001350e:	mov    al,0x80
   140013510:	rex.WX
   140013511:	lock (bad) 
   140013513:	call   rax
   140013515:	(bad)  
   140013516:	(bad)  
   140013517:	(bad)  
   140013518:	push   rax
   14001351a:	sbb    DWORD PTR [rax+rcx*4+0x3f30904a],0xaf
	...
   140013535:	add    BYTE PTR [rax],al
   140013537:	add    bh,bh
   140013539:	(bad)  
   14001353a:	(bad)  
   14001353b:	(bad)  
   14001353c:	(bad)  
   14001353d:	(bad)  
   14001353e:	(bad)  
   14001353f:	(bad)  
   140013540:	(bad)  
   140013541:	(bad)  
   140013542:	(bad)  
   140013543:	(bad)  
   140013544:	(bad)  
   140013545:	(bad)  
   140013546:	inc    DWORD PTR [rax]
   140013548:	add    BYTE PTR [rdi+0x4f],bh
   14001354b:	(bad)  
   14001354c:	add    BYTE PTR [rax-0xfcfe0],0xff
   140013553:	(bad)  
   140013554:	mov    eax,0xffffffff
   140013559:	mov    edx,0xffffffd0
   14001355e:	rol    BYTE PTR [rax+0x0],0xcf
	...
   140013576:	add    BYTE PTR [rax],al
   140013578:	(bad)  
   140013579:	(bad)  
   14001357a:	(bad)  
   14001357b:	(bad)  
   14001357c:	(bad)  
   14001357d:	(bad)  
   14001357e:	(bad)  
   14001357f:	(bad)  
   140013580:	(bad)  
   140013581:	(bad)  
   140013582:	(bad)  
   140013583:	(bad)  
   140013584:	(bad)  
   140013585:	(bad)  
   140013586:	dec    DWORD PTR [rdi]
   140013588:	add    BYTE PTR [rdi-0x21],cl
   14001358b:	rex
   14001358c:	lock adc BYTE PTR [rax],dl
   14001358f:	loopne 0x140013590
   140013591:	(bad)  
   140013592:	(bad)  
   140013593:	(bad)  
   140013594:	jmp    QWORD PTR [rbp-0x1f4d2f01]
   14001359a:	(bad)  
   14001359b:	(bad)  
   14001359c:	(bad)  
   14001359d:	(bad)  
   14001359e:	(bad)  
   14001359f:	jmp    QWORD PTR [rax+0x5f]
   1400135a2:	(bad)  
   1400135a3:	(bad)  
   1400135a4:	(bad)  
   1400135a5:	(bad)  
   1400135a6:	(bad)  
   1400135a7:	(bad)  
   1400135a8:	(bad)  
   1400135a9:	(bad)  
   1400135aa:	(bad)  
   1400135ab:	(bad)  
   1400135ac:	(bad)  
   1400135ad:	(bad)  
   1400135ae:	(bad)  
   1400135af:	(bad)  
   1400135b0:	(bad)  
   1400135b1:	(bad)  
   1400135b2:	(bad)  
   1400135b3:	(bad)  
   1400135b4:	(bad)  
   1400135b5:	(bad)  
   1400135b6:	(bad)  
   1400135b7:	(bad)  
   1400135b8:	(bad)  
   1400135b9:	(bad)  
   1400135ba:	(bad)  
   1400135bb:	(bad)  
   1400135bc:	(bad)  
   1400135bd:	(bad)  
   1400135be:	(bad)  
   1400135bf:	(bad)  
   1400135c0:	(bad)  
   1400135c1:	(bad)  
   1400135c2:	(bad)  
   1400135c3:	(bad)  
   1400135c4:	(bad)  
   1400135c5:	(bad)  
   1400135c6:	(bad)  
   1400135c7:	(bad)  
   1400135c8:	(bad)  
   1400135c9:	(bad)  
   1400135ca:	call   FWORD PTR [rdi-0x700000]
   1400135d0:	(bad)  
   1400135d1:	(bad)  
   1400135d2:	(bad)  
   1400135d3:	(bad)  
   1400135d4:	push   rax
   1400135d6:	adc    al,0xff
   1400135d9:	(bad)  
   1400135da:	(bad)  
   1400135db:	(bad)  
   1400135dc:	(bad)  
   1400135dd:	(bad)  
   1400135de:	(bad)  
   1400135df:	(bad)  
   1400135e0:	dec    DWORD PTR [rbx-0x1]
   1400135e3:	(bad)  
   1400135e4:	(bad)  
   1400135e5:	(bad)  
   1400135e6:	(bad)  
   1400135e7:	(bad)  
   1400135e8:	(bad)  
   1400135e9:	(bad)  
   1400135ea:	(bad)  
   1400135eb:	(bad)  
   1400135ec:	(bad)  
   1400135ed:	(bad)  
   1400135ee:	(bad)  
   1400135ef:	(bad)  
   1400135f0:	(bad)  
   1400135f1:	(bad)  
   1400135f2:	(bad)  
   1400135f3:	(bad)  
   1400135f4:	(bad)  
   1400135f5:	(bad)  
   1400135f6:	(bad)  
   1400135f7:	(bad)  
   1400135f8:	(bad)  
   1400135f9:	(bad)  
   1400135fa:	(bad)  
   1400135fb:	(bad)  
   1400135fc:	(bad)  
   1400135fd:	(bad)  
   1400135fe:	(bad)  
   1400135ff:	(bad)  
   140013600:	(bad)  
   140013601:	(bad)  
   140013602:	(bad)  
   140013603:	(bad)  
   140013604:	(bad)  
   140013605:	(bad)  
   140013606:	(bad)  
   140013607:	(bad)  
   140013608:	(bad)  
   140013609:	(bad)  
   14001360a:	(bad)  
   14001360b:	out    dx,eax
   14001360c:	(bad)  
   14001360d:	(bad)  
   14001360e:	(bad)  
   14001360f:	(bad)  
   140013610:	(bad)  
   140013611:	(bad)  
   140013612:	(bad)  
   140013613:	(bad)  
   140013614:	(bad)  
   140013615:	(bad)  
   140013616:	(bad)  
   140013617:	push   rax
   140013619:	(bad)  
   14001361a:	(bad)  
   14001361b:	(bad)  
   14001361c:	(bad)  
   14001361d:	(bad)  
   14001361e:	(bad)  
   14001361f:	(bad)  
   140013620:	inc    DWORD PTR [rax-0x61]
   140013626:	(bad)  
   140013627:	(bad)  
   140013628:	(bad)  
   140013629:	(bad)  
   14001362a:	(bad)  
   14001362b:	(bad)  
   14001362c:	(bad)  
   14001362d:	(bad)  
   14001362e:	(bad)  
   14001362f:	(bad)  
   140013630:	(bad)  
   140013631:	(bad)  
   140013632:	(bad)  
   140013633:	(bad)  
   140013634:	(bad)  
   140013635:	(bad)  
   140013636:	(bad)  
   140013637:	(bad)  
   140013638:	(bad)  
   140013639:	(bad)  
   14001363a:	(bad)  
   14001363b:	(bad)  
   14001363c:	(bad)  
   14001363d:	(bad)  
   14001363e:	(bad)  
   14001363f:	(bad)  
   140013640:	(bad)  
   140013641:	(bad)  
   140013642:	(bad)  
   140013643:	(bad)  
   140013644:	(bad)  
   140013645:	(bad)  
   140013646:	(bad)  
   140013647:	(bad)  
   140013648:	(bad)  
   140013649:	out    dx,eax
   14001364a:	jg     0x14001365b
   14001364c:	jo     0x14001364d
   14001364e:	(bad)  
   14001364f:	(bad)  
   140013650:	(bad)  
   140013651:	(bad)  
   140013652:	(bad)  
   140013653:	(bad)  
   140013654:	(bad)  
   140013655:	(bad)  
   140013656:	jmp    FWORD PTR [rsp+rbp*4-0x1]
   14001365d:	(bad)  
   14001365e:	(bad)  
   14001365f:	(bad)  
   140013660:	call   QWORD PTR [rax-0xd3]
   140013666:	(bad)  
   140013667:	(bad)  
   140013668:	(bad)  
   140013669:	(bad)  
   14001366a:	(bad)  
   14001366b:	(bad)  
   14001366c:	(bad)  
   14001366d:	(bad)  
   14001366e:	(bad)  
   14001366f:	(bad)  
   140013670:	(bad)  
   140013671:	(bad)  
   140013672:	(bad)  
   140013673:	(bad)  
   140013674:	(bad)  
   140013675:	(bad)  
   140013676:	(bad)  
   140013677:	(bad)  
   140013678:	(bad)  
   140013679:	(bad)  
   14001367a:	(bad)  
   14001367b:	(bad)  
   14001367c:	(bad)  
   14001367d:	(bad)  
   14001367e:	(bad)  
   14001367f:	(bad)  
   140013680:	(bad)  
   140013681:	(bad)  
   140013682:	(bad)  
   140013683:	(bad)  
   140013684:	(bad)  
   140013685:	(bad)  
   140013686:	(bad)  
   140013687:	mov    edi,0xc060105f
   14001368c:	(bad)  
   14001368d:	(bad)  
   14001368e:	(bad)  
   14001368f:	(bad)  
   140013690:	(bad)  
   140013691:	(bad)  
   140013692:	(bad)  
   140013693:	(bad)  
   140013694:	(bad)  
   140013695:	inc    DWORD PTR [rax-0xfafcfe0]
   14001369b:	(bad)  
   14001369c:	(bad)  
   14001369d:	(bad)  
   14001369e:	(bad)  
   14001369f:	(bad)  
   1400136a0:	inc    DWORD PTR [rax-0x7080]
   1400136a6:	(bad)  
   1400136a7:	(bad)  
   1400136a8:	(bad)  
   1400136a9:	(bad)  
   1400136aa:	(bad)  
   1400136ab:	(bad)  
   1400136ac:	(bad)  
   1400136ad:	(bad)  
   1400136ae:	(bad)  
   1400136af:	(bad)  
   1400136b0:	(bad)  
   1400136b1:	(bad)  
   1400136b2:	(bad)  
   1400136b3:	(bad)  
   1400136b4:	(bad)  
   1400136b5:	(bad)  
   1400136b6:	(bad)  
   1400136b7:	(bad)  
   1400136b8:	(bad)  
   1400136b9:	(bad)  
   1400136ba:	(bad)  
   1400136bb:	(bad)  
   1400136bc:	(bad)  
   1400136bd:	(bad)  
   1400136be:	(bad)  
   1400136bf:	(bad)  
   1400136c0:	(bad)  
   1400136c1:	(bad)  
   1400136c2:	(bad)  
   1400136c3:	(bad)  
   1400136c4:	(bad)  
   1400136c5:	out    dx,eax
   1400136c6:	rex.WRXB xor BYTE PTR [r8-0x1],r12b
   1400136cd:	(bad)  
   1400136ce:	(bad)  
   1400136cf:	(bad)  
   1400136d0:	(bad)  
   1400136d1:	(bad)  
   1400136d2:	(bad)  
   1400136d3:	(bad)  
   1400136d4:	jmp    FWORD PTR [rcx-0x71]
   1400136d7:	out    dx,eax
   1400136d8:	pop    rdi
   1400136d9:	adc    bh,bh
   1400136db:	(bad)  
   1400136dc:	(bad)  
   1400136dd:	(bad)  
   1400136de:	(bad)  
   1400136df:	(bad)  
   1400136e0:	(bad)  
   1400136e1:	mov    eax,0xffef1e90
   1400136e6:	(bad)  
   1400136e7:	(bad)  
   1400136e8:	(bad)  
   1400136e9:	(bad)  
   1400136ea:	(bad)  
   1400136eb:	(bad)  
   1400136ec:	(bad)  
   1400136ed:	(bad)  
   1400136ee:	(bad)  
   1400136ef:	(bad)  
   1400136f0:	(bad)  
   1400136f1:	(bad)  
   1400136f2:	(bad)  
   1400136f3:	(bad)  
   1400136f4:	(bad)  
   1400136f5:	(bad)  
   1400136f6:	(bad)  
   1400136f7:	(bad)  
   1400136f8:	(bad)  
   1400136f9:	(bad)  
   1400136fa:	(bad)  
   1400136fb:	(bad)  
   1400136fc:	(bad)  
   1400136fd:	(bad)  
   1400136fe:	(bad)  
   1400136ff:	(bad)  
   140013700:	fild   QWORD PTR [rdi+0x2f]
   140013703:	add    BYTE PTR [rdi],bh
   140013705:	(bad)  
   140013706:	nop
   140013707:	(bad)  
   140013708:	(bad)  
   140013709:	(bad)  
   14001370a:	(bad)  
   14001370b:	(bad)  
   14001370c:	(bad)  
   14001370d:	(bad)  
   14001370e:	(bad)  
   14001370f:	(bad)  
   140013710:	(bad)  
   140013711:	(bad)  
   140013712:	(bad)  
   140013713:	call   QWORD PTR [rax-0x40000061]
   140013719:	jo     0x14001371a
   14001371b:	(bad)  
   14001371c:	(bad)  
   14001371d:	(bad)  
   14001371e:	(bad)  
   14001371f:	(bad)  
   140013720:	inc    eax
   140013722:	mov    es,WORD PTR [rax-0x61]
   140013728:	(bad)  
   140013729:	(bad)  
   14001372a:	(bad)  
   14001372b:	(bad)  
   14001372c:	(bad)  
   14001372d:	(bad)  
   14001372e:	(bad)  
   14001372f:	(bad)  
   140013730:	(bad)  
   140013731:	(bad)  
   140013732:	(bad)  
   140013733:	(bad)  
   140013734:	(bad)  
   140013735:	(bad)  
   140013736:	(bad)  
   140013737:	(bad)  
   140013738:	(bad)  
   140013739:	(bad)  
   14001373a:	(bad)  
   14001373b:	(bad)  
   14001373c:	jmp    FWORD PTR [rdi-0x3f9fc391]
   140013742:	(bad)  
   140013743:	call   QWORD PTR [rax-0x78]
   140013749:	(bad)  
   14001374a:	(bad)  
   14001374b:	(bad)  
   14001374c:	(bad)  
   14001374d:	(bad)  
   14001374e:	(bad)  
   14001374f:	(bad)  
   140013750:	(bad)  
   140013751:	(bad)  
   140013752:	inc    DWORD PTR [rax-0x71]
   140013758:	jg     0x1400136ea
   14001375a:	(bad)  
   14001375b:	(bad)  
   14001375c:	(bad)  
   14001375d:	(bad)  
   14001375e:	(bad)  
   14001375f:	(bad)  
   140013760:	inc    eax
   140013762:	mov    ch,0xe0
   140013764:	rex.WXB (bad) 
   140013766:	(bad)  
   140013767:	(bad)  
   140013768:	(bad)  
   140013769:	(bad)  
   14001376a:	(bad)  
   14001376b:	(bad)  
   14001376c:	(bad)  
   14001376d:	(bad)  
   14001376e:	(bad)  
   14001376f:	(bad)  
   140013770:	(bad)  
   140013771:	(bad)  
   140013772:	(bad)  
   140013773:	(bad)  
   140013774:	(bad)  
   140013775:	(bad)  
   140013776:	(bad)  
   140013777:	(bad)  
   140013778:	(bad)  
   140013779:	call   FWORD PTR [rdi-0x3f8fbfc1]
   14001377f:	(bad)  
   140013780:	call   rax
   140013782:	and    BYTE PTR [rax],al
   140013784:	rex.WX (bad) 
   140013786:	(bad)  
   140013787:	(bad)  
   140013788:	(bad)  
   140013789:	(bad)  
   14001378a:	(bad)  
   14001378b:	(bad)  
   14001378c:	(bad)  
   14001378d:	(bad)  
   14001378e:	(bad)  
   14001378f:	(bad)  
   140013790:	(bad)  
   140013791:	inc    DWORD PTR [rax-0xc1]
   140013797:	(bad)  
   140013798:	jg     0x14001375a
   14001379a:	(bad)  
   14001379b:	(bad)  
   14001379c:	(bad)  
   14001379d:	(bad)  
   14001379e:	(bad)  
   14001379f:	(bad)  
   1400137a0:	inc    esp
   1400137a2:	mov    edx,0xffff57be
   1400137a7:	(bad)  
   1400137a8:	(bad)  
   1400137a9:	(bad)  
   1400137aa:	(bad)  
   1400137ab:	(bad)  
   1400137ac:	(bad)  
   1400137ad:	(bad)  
   1400137ae:	(bad)  
   1400137af:	(bad)  
   1400137b0:	(bad)  
   1400137b1:	(bad)  
   1400137b2:	(bad)  
   1400137b3:	(bad)  
   1400137b4:	(bad)  
   1400137b5:	(bad)  
   1400137b6:	(bad)  
   1400137b7:	(bad)  
   1400137b8:	dec    DWORD PTR [rdi-0x1fa0]
   1400137be:	(bad)  
   1400137bf:	call   rax
   1400137c1:	adc    BYTE PTR [rax],al
   1400137c3:	add    BYTE PTR [rax-0x1],ah
   1400137c9:	(bad)  
   1400137ca:	(bad)  
   1400137cb:	(bad)  
   1400137cc:	(bad)  
   1400137cd:	(bad)  
   1400137ce:	(bad)  
   1400137cf:	push   rax
   1400137d1:	movabs al,ds:0xc07fffffffef0fd0
   1400137da:	(bad)  
   1400137db:	(bad)  
   1400137dc:	(bad)  
   1400137dd:	(bad)  
   1400137de:	(bad)  
   1400137df:	(bad)  
   1400137e0:	call   rax
   1400137e2:	(bad)  
   1400137e3:	ror    BYTE PTR [rdi],0xff
   1400137e6:	(bad)  
   1400137e7:	(bad)  
   1400137e8:	(bad)  
   1400137e9:	(bad)  
   1400137ea:	(bad)  
   1400137eb:	(bad)  
   1400137ec:	(bad)  
   1400137ed:	(bad)  
   1400137ee:	(bad)  
   1400137ef:	(bad)  
   1400137f0:	(bad)  
   1400137f1:	(bad)  
   1400137f2:	(bad)  
   1400137f3:	(bad)  
   1400137f4:	(bad)  
   1400137f5:	(bad)  
   1400137f6:	(bad)  
   1400137f7:	(bad)  
   1400137f8:	jmp    FWORD PTR [rip+0xfffffffffffffff0]        # 0x1400137ee
   1400137fe:	push   rax
   140013800:	adc    BYTE PTR [rax],al
   140013802:	add    BYTE PTR [rax],dl
   140013804:	lock (bad) 
   140013806:	(bad)  
   140013807:	(bad)  
   140013808:	(bad)  
   140013809:	(bad)  
   14001380a:	(bad)  
   14001380b:	(bad)  
   14001380c:	(bad)  
   14001380d:	(bad)  
   14001380e:	(bad)  
   14001380f:	inc    eax
   140013811:	(bad)  
   140013812:	call   QWORD PTR [rax-0x200000d1]
   140013818:	rex.WRXB sar r15b,0xff
   14001381c:	(bad)  
   14001381d:	(bad)  
   14001381e:	(bad)  
   14001381f:	(bad)  
   140013820:	dec    esp
   140013822:	push   rax
   140013824:	xor    bh,bl
   140013826:	(bad)  
   140013827:	(bad)  
   140013828:	(bad)  
   140013829:	(bad)  
   14001382a:	(bad)  
   14001382b:	(bad)  
   14001382c:	(bad)  
   14001382d:	(bad)  
   14001382e:	(bad)  
   14001382f:	(bad)  
   140013830:	(bad)  
   140013831:	(bad)  
   140013832:	(bad)  
   140013833:	(bad)  
   140013834:	(bad)  
   140013835:	(bad)  
   140013836:	(bad)  
   140013837:	(bad)  
   140013838:	mov    edi,0xffffff70
   14001383d:	(bad)  
   14001383e:	inc    DWORD PTR [rax+0x0]
   140013841:	add    BYTE PTR [rax],al
   140013843:	cmp    bh,0xff
   140013846:	(bad)  
   140013847:	(bad)  
   140013848:	(bad)  
   140013849:	(bad)  
   14001384a:	(bad)  
   14001384b:	(bad)  
   14001384c:	(bad)  
   14001384d:	(bad)  
   14001384e:	(bad)  
   14001384f:	push   rax
   140013851:	(bad)  
   140013852:	(bad)  
   140013853:	call   QWORD PTR [rax+0x6f]
   140013856:	outs   dx,DWORD PTR ds:[rsi]
   140013857:	add    BYTE PTR [rax-0x1],ah
   14001385a:	(bad)  
   14001385b:	(bad)  
   14001385c:	(bad)  
   14001385d:	(bad)  
   14001385e:	(bad)  
   14001385f:	(bad)  
   140013860:	push   rax
   140013862:	call   rax
   140013864:	nop
   140013865:	jg     0x140013866
   140013867:	(bad)  
   140013868:	(bad)  
   140013869:	(bad)  
   14001386a:	(bad)  
   14001386b:	(bad)  
   14001386c:	(bad)  
   14001386d:	(bad)  
   14001386e:	(bad)  
   14001386f:	(bad)  
   140013870:	(bad)  
   140013871:	(bad)  
   140013872:	(bad)  
   140013873:	(bad)  
   140013874:	(bad)  
   140013875:	(bad)  
   140013876:	(bad)  
   140013877:	(bad)  
   140013878:	jg     0x14001382a
   14001387a:	(bad)  
   14001387b:	(bad)  
   14001387c:	(bad)  
   14001387d:	inc    eax
   14001387f:	add    BYTE PTR [rax],al
   140013881:	add    BYTE PTR [rax],al
   140013883:	lock (bad) 
   140013885:	(bad)  
   140013886:	(bad)  
   140013887:	(bad)  
   140013888:	(bad)  
   140013889:	(bad)  
   14001388a:	(bad)  
   14001388b:	(bad)  
   14001388c:	(bad)  
   14001388d:	(bad)  
   14001388e:	(bad)  
   14001388f:	(bad)  
   140013890:	(bad)  
   140013891:	(bad)  
   140013892:	(bad)  
   140013893:	push   rax
   140013895:	xor    BYTE PTR [rax],dh
   140013897:	rex (bad) 
   140013899:	(bad)  
   14001389a:	(bad)  
   14001389b:	(bad)  
   14001389c:	(bad)  
   14001389d:	(bad)  
   14001389e:	(bad)  
   14001389f:	push   rax
   1400138a1:	(bad)  
   1400138a2:	inc    ecx
   1400138a4:	loopne 0x140013915
   1400138a6:	(bad)  
   1400138a7:	(bad)  
   1400138a8:	(bad)  
   1400138a9:	(bad)  
   1400138aa:	(bad)  
   1400138ab:	(bad)  
   1400138ac:	(bad)  
   1400138ad:	(bad)  
   1400138ae:	(bad)  
   1400138af:	(bad)  
   1400138b0:	(bad)  
   1400138b1:	(bad)  
   1400138b2:	(bad)  
   1400138b3:	(bad)  
   1400138b4:	(bad)  
   1400138b5:	(bad)  
   1400138b6:	(bad)  
   1400138b7:	call   FWORD PTR [rdi-0x30]
   1400138ba:	(bad)  
   1400138bb:	(bad)  
   1400138bc:	(bad)  
   1400138bd:	call   QWORD PTR [rax+0x0]
   1400138c0:	add    BYTE PTR [rax],dl
   1400138c2:	push   rax
   1400138c3:	(bad)  
   1400138c4:	(bad)  
   1400138c5:	(bad)  
   1400138c6:	(bad)  
   1400138c7:	(bad)  
   1400138c8:	(bad)  
   1400138c9:	(bad)  
   1400138ca:	(bad)  
   1400138cb:	(bad)  
   1400138cc:	(bad)  
   1400138cd:	(bad)  
   1400138ce:	(bad)  
   1400138cf:	(bad)  
   1400138d0:	(bad)  
   1400138d1:	(bad)  
   1400138d2:	(bad)  
   1400138d3:	(bad)  
   1400138d4:	jmp    rax
   1400138d6:	call   rax
   1400138d8:	(bad)  
   1400138d9:	(bad)  
   1400138da:	(bad)  
   1400138db:	(bad)  
   1400138dc:	(bad)  
   1400138dd:	(bad)  
   1400138de:	(bad)  
   1400138df:	inc    eax
   1400138e1:	(bad)  
   1400138e2:	inc    esp
   1400138e4:	lock jg 0x1400138e6
   1400138e7:	(bad)  
   1400138e8:	(bad)  
   1400138e9:	(bad)  
   1400138ea:	(bad)  
   1400138eb:	(bad)  
   1400138ec:	(bad)  
   1400138ed:	(bad)  
   1400138ee:	(bad)  
   1400138ef:	(bad)  
   1400138f0:	(bad)  
   1400138f1:	(bad)  
   1400138f2:	(bad)  
   1400138f3:	(bad)  
   1400138f4:	(bad)  
   1400138f5:	(bad)  
   1400138f6:	(bad)  
   1400138f7:	(bad)  
   1400138f8:	(bad)  
   1400138f9:	(bad)  
   1400138fa:	(bad)  
   1400138fb:	(bad)  
   1400138fc:	(bad)  
   1400138fd:	call   FWORD PTR [rdi]
   1400138ff:	mov    al,0xff
   140013901:	(bad)  
   140013902:	(bad)  
   140013903:	(bad)  
   140013904:	(bad)  
   140013905:	(bad)  
   140013906:	(bad)  
   140013907:	(bad)  
   140013908:	(bad)  
   140013909:	(bad)  
   14001390a:	(bad)  
   14001390b:	(bad)  
   14001390c:	(bad)  
   14001390d:	(bad)  
   14001390e:	(bad)  
   14001390f:	(bad)  
   140013910:	(bad)  
   140013911:	(bad)  
   140013912:	(bad)  
   140013913:	(bad)  
   140013914:	(bad)  
   140013915:	(bad)  
   140013916:	(bad)  
   140013917:	(bad)  
   140013918:	(bad)  
   140013919:	(bad)  
   14001391a:	(bad)  
   14001391b:	(bad)  
   14001391c:	(bad)  
   14001391d:	(bad)  
   14001391e:	(bad)  
   14001391f:	inc    eax
   140013921:	(bad)  
   140013922:	push   rax
   140013924:	movabs al,ds:0xffffffffffffffaf
   14001392d:	(bad)  
   14001392e:	(bad)  
   14001392f:	(bad)  
   140013930:	(bad)  
   140013931:	(bad)  
   140013932:	(bad)  
   140013933:	(bad)  
   140013934:	(bad)  
   140013935:	(bad)  
   140013936:	(bad)  
   140013937:	(bad)  
   140013938:	cmp    al,0xff
   14001393a:	(bad)  
   14001393b:	(bad)  
   14001393c:	inc    eax
   14001393e:	cmp    bh,0xff
   140013941:	(bad)  
   140013942:	(bad)  
   140013943:	(bad)  
   140013944:	(bad)  
   140013945:	(bad)  
   140013946:	(bad)  
   140013947:	(bad)  
   140013948:	(bad)  
   140013949:	(bad)  
   14001394a:	(bad)  
   14001394b:	(bad)  
   14001394c:	(bad)  
   14001394d:	(bad)  
   14001394e:	(bad)  
   14001394f:	(bad)  
   140013950:	(bad)  
   140013951:	(bad)  
   140013952:	(bad)  
   140013953:	(bad)  
   140013954:	(bad)  
   140013955:	(bad)  
   140013956:	(bad)  
   140013957:	(bad)  
   140013958:	(bad)  
   140013959:	(bad)  
   14001395a:	(bad)  
   14001395b:	(bad)  
   14001395c:	(bad)  
   14001395d:	(bad)  
   14001395e:	(bad)  
   14001395f:	call   rax
   140013961:	(bad)  
   140013962:	(bad)  
   140013963:	(bad)  
   140013964:	cmp    eax,0xffffffdf
   140013969:	(bad)  
   14001396a:	(bad)  
   14001396b:	(bad)  
   14001396c:	(bad)  
   14001396d:	(bad)  
   14001396e:	(bad)  
   14001396f:	(bad)  
   140013970:	(bad)  
   140013971:	(bad)  
   140013972:	(bad)  
   140013973:	(bad)  
   140013974:	(bad)  
   140013975:	(bad)  
   140013976:	(bad)  
   140013977:	inc    DWORD PTR [rax-0x1]
   14001397a:	(bad)  
   14001397b:	(bad)  
   14001397c:	inc    eax
   14001397e:	sar    bh,1
   140013980:	(bad)  
   140013981:	(bad)  
   140013982:	(bad)  
   140013983:	(bad)  
   140013984:	(bad)  
   140013985:	(bad)  
   140013986:	(bad)  
   140013987:	(bad)  
   140013988:	(bad)  
   140013989:	(bad)  
   14001398a:	(bad)  
   14001398b:	(bad)  
   14001398c:	(bad)  
   14001398d:	(bad)  
   14001398e:	(bad)  
   14001398f:	(bad)  
   140013990:	(bad)  
   140013991:	(bad)  
   140013992:	(bad)  
   140013993:	(bad)  
   140013994:	(bad)  
   140013995:	(bad)  
   140013996:	push   rax
   140013998:	(bad)  
   140013999:	(bad)  
   14001399a:	(bad)  
   14001399b:	(bad)  
   14001399c:	(bad)  
   14001399d:	(bad)  
   14001399e:	(bad)  
   14001399f:	(bad)  
   1400139a0:	call   rbx
   1400139a2:	(bad)  
   1400139a3:	inc    DWORD PTR [rax-0x1]
   1400139a9:	(bad)  
   1400139aa:	(bad)  
   1400139ab:	(bad)  
   1400139ac:	(bad)  
   1400139ad:	(bad)  
   1400139ae:	(bad)  
   1400139af:	(bad)  
   1400139b0:	(bad)  
   1400139b1:	(bad)  
   1400139b2:	(bad)  
   1400139b3:	(bad)  
   1400139b4:	(bad)  
   1400139b5:	(bad)  
   1400139b6:	(bad)  
   1400139b7:	inc    DWORD PTR [rax-0x1]
   1400139ba:	(bad)  
   1400139bb:	(bad)  
   1400139bc:	inc    DWORD PTR [rax-0x1]
   1400139c2:	(bad)  
   1400139c3:	(bad)  
   1400139c4:	(bad)  
   1400139c5:	(bad)  
   1400139c6:	(bad)  
   1400139c7:	(bad)  
   1400139c8:	(bad)  
   1400139c9:	(bad)  
   1400139ca:	(bad)  
   1400139cb:	(bad)  
   1400139cc:	(bad)  
   1400139cd:	(bad)  
   1400139ce:	(bad)  
   1400139cf:	(bad)  
   1400139d0:	(bad)  
   1400139d1:	(bad)  
   1400139d2:	(bad)  
   1400139d3:	(bad)  
   1400139d4:	(bad)  
   1400139d5:	(bad)  
   1400139d6:	(bad)  
   1400139d7:	(bad)  
   1400139d8:	(bad)  
   1400139d9:	(bad)  
   1400139da:	(bad)  
   1400139db:	(bad)  
   1400139dc:	(bad)  
   1400139dd:	(bad)  
   1400139de:	(bad)  
   1400139df:	(bad)  
   1400139e0:	call   rax
   1400139e2:	(bad)  
   1400139e3:	inc    DWORD PTR [rax-0x31]
   1400139e9:	(bad)  
   1400139ea:	(bad)  
   1400139eb:	(bad)  
   1400139ec:	(bad)  
   1400139ed:	(bad)  
   1400139ee:	(bad)  
   1400139ef:	(bad)  
   1400139f0:	(bad)  
   1400139f1:	(bad)  
   1400139f2:	(bad)  
   1400139f3:	(bad)  
   1400139f4:	(bad)  
   1400139f5:	(bad)  
   1400139f6:	(bad)  
   1400139f7:	inc    DWORD PTR [rax-0x1]
   1400139fa:	(bad)  
   1400139fb:	(bad)  
   1400139fc:	call   FWORD PTR [rax-0x1]
   140013a02:	(bad)  
   140013a03:	(bad)  
   140013a04:	(bad)  
   140013a05:	(bad)  
   140013a06:	(bad)  
   140013a07:	(bad)  
   140013a08:	(bad)  
   140013a09:	(bad)  
   140013a0a:	(bad)  
   140013a0b:	(bad)  
   140013a0c:	(bad)  
   140013a0d:	(bad)  
   140013a0e:	(bad)  
   140013a0f:	(bad)  
   140013a10:	(bad)  
   140013a11:	(bad)  
   140013a12:	(bad)  
   140013a13:	(bad)  
   140013a14:	(bad)  
   140013a15:	(bad)  
   140013a16:	(bad)  
   140013a17:	(bad)  
   140013a18:	(bad)  
   140013a19:	(bad)  
   140013a1a:	(bad)  
   140013a1b:	(bad)  
   140013a1c:	(bad)  
   140013a1d:	(bad)  
   140013a1e:	(bad)  
   140013a1f:	(bad)  
   140013a20:	dec    ecx
   140013a22:	(bad)  
   140013a23:	inc    eax
   140013a25:	mov    edi,0xffffffff
   140013a2a:	(bad)  
   140013a2b:	(bad)  
   140013a2c:	(bad)  
   140013a2d:	(bad)  
   140013a2e:	(bad)  
   140013a2f:	(bad)  
   140013a30:	(bad)  
   140013a31:	(bad)  
   140013a32:	(bad)  
   140013a33:	(bad)  
   140013a34:	(bad)  
   140013a35:	(bad)  
   140013a36:	(bad)  
   140013a37:	inc    DWORD PTR [rax-0x1]
   140013a3a:	(bad)  
   140013a3b:	(bad)  
   140013a3c:	(bad)  
   140013a3d:	mov    edi,0xffffffff
   140013a42:	(bad)  
   140013a43:	(bad)  
   140013a44:	(bad)  
   140013a45:	(bad)  
   140013a46:	(bad)  
   140013a47:	(bad)  
   140013a48:	(bad)  
   140013a49:	(bad)  
   140013a4a:	(bad)  
   140013a4b:	(bad)  
   140013a4c:	(bad)  
   140013a4d:	(bad)  
   140013a4e:	(bad)  
   140013a4f:	(bad)  
   140013a50:	(bad)  
   140013a51:	(bad)  
   140013a52:	(bad)  
   140013a53:	(bad)  
   140013a54:	(bad)  
   140013a55:	(bad)  
   140013a56:	(bad)  
   140013a57:	(bad)  
   140013a58:	(bad)  
   140013a59:	(bad)  
   140013a5a:	(bad)  
   140013a5b:	(bad)  
   140013a5c:	(bad)  
   140013a5d:	(bad)  
   140013a5e:	(bad)  
   140013a5f:	(bad)  
   140013a60:	inc    eax
   140013a62:	(bad)  
   140013a63:	inc    DWORD PTR [rax-0x21]
   140013a69:	(bad)  
   140013a6a:	(bad)  
   140013a6b:	(bad)  
   140013a6c:	(bad)  
   140013a6d:	(bad)  
   140013a6e:	(bad)  
   140013a6f:	(bad)  
   140013a70:	(bad)  
   140013a71:	(bad)  
   140013a72:	(bad)  
   140013a73:	(bad)  
   140013a74:	(bad)  
   140013a75:	(bad)  
   140013a76:	(bad)  
   140013a77:	inc    DWORD PTR [rax-0x1]
   140013a7a:	(bad)  
   140013a7b:	(bad)  
   140013a7c:	inc    eax
   140013a7e:	(bad)  
   140013a7f:	(bad)  
   140013a80:	(bad)  
   140013a81:	(bad)  
   140013a82:	(bad)  
   140013a83:	(bad)  
   140013a84:	(bad)  
   140013a85:	(bad)  
   140013a86:	(bad)  
   140013a87:	(bad)  
   140013a88:	(bad)  
   140013a89:	(bad)  
   140013a8a:	(bad)  
   140013a8b:	(bad)  
   140013a8c:	(bad)  
   140013a8d:	(bad)  
   140013a8e:	(bad)  
   140013a8f:	(bad)  
   140013a90:	(bad)  
   140013a91:	(bad)  
   140013a92:	(bad)  
   140013a93:	(bad)  
   140013a94:	(bad)  
   140013a95:	(bad)  
   140013a96:	(bad)  
   140013a97:	(bad)  
   140013a98:	(bad)  
   140013a99:	(bad)  
   140013a9a:	(bad)  
   140013a9b:	(bad)  
   140013a9c:	(bad)  
   140013a9d:	(bad)  
   140013a9e:	(bad)  
   140013a9f:	(bad)  
   140013aa0:	inc    eax
   140013aa2:	jmp    rax
   140013aa4:	sub    eax,0xffffffff
   140013aa9:	(bad)  
   140013aaa:	(bad)  
   140013aab:	(bad)  
   140013aac:	(bad)  
   140013aad:	(bad)  
   140013aae:	(bad)  
   140013aaf:	(bad)  
   140013ab0:	(bad)  
   140013ab1:	(bad)  
   140013ab2:	(bad)  
   140013ab3:	(bad)  
   140013ab4:	(bad)  
   140013ab5:	(bad)  
   140013ab6:	(bad)  
   140013ab7:	call   QWORD PTR [rax]
   140013ab9:	(bad)  
   140013aba:	(bad)  
   140013abb:	(bad)  
   140013abc:	(bad)  
   140013abd:	jmp    rax
   140013abf:	(bad)  
   140013ac0:	(bad)  
   140013ac1:	(bad)  
   140013ac2:	(bad)  
   140013ac3:	(bad)  
   140013ac4:	(bad)  
   140013ac5:	(bad)  
   140013ac6:	(bad)  
   140013ac7:	(bad)  
   140013ac8:	(bad)  
   140013ac9:	(bad)  
   140013aca:	(bad)  
   140013acb:	(bad)  
   140013acc:	(bad)  
   140013acd:	(bad)  
   140013ace:	(bad)  
   140013acf:	(bad)  
   140013ad0:	(bad)  
   140013ad1:	(bad)  
   140013ad2:	(bad)  
   140013ad3:	(bad)  
   140013ad4:	(bad)  
   140013ad5:	(bad)  
   140013ad6:	(bad)  
   140013ad7:	(bad)  
   140013ad8:	(bad)  
   140013ad9:	(bad)  
   140013ada:	(bad)  
   140013adb:	(bad)  
   140013adc:	(bad)  
   140013add:	(bad)  
   140013ade:	(bad)  
   140013adf:	(bad)  
   140013ae0:	inc    eax
   140013ae2:	mov    al,0x1e
   140013ae4:	iret   
   140013ae5:	(bad)  
   140013ae6:	(bad)  
   140013ae7:	(bad)  
   140013ae8:	(bad)  
   140013ae9:	(bad)  
   140013aea:	(bad)  
   140013aeb:	(bad)  
   140013aec:	(bad)  
   140013aed:	(bad)  
   140013aee:	(bad)  
   140013aef:	(bad)  
   140013af0:	(bad)  
   140013af1:	(bad)  
   140013af2:	(bad)  
   140013af3:	(bad)  
   140013af4:	(bad)  
   140013af5:	(bad)  
   140013af6:	(bad)  
   140013af7:	(bad)  
   140013af8:	(bad)  
   140013af9:	loopne 0x140013afa
   140013afb:	(bad)  
   140013afc:	(bad)  
   140013afd:	(bad)  
   140013afe:	mov    edi,0xffffffff
   140013b03:	(bad)  
   140013b04:	(bad)  
   140013b05:	(bad)  
   140013b06:	(bad)  
   140013b07:	(bad)  
   140013b08:	(bad)  
   140013b09:	(bad)  
   140013b0a:	(bad)  
   140013b0b:	(bad)  
   140013b0c:	(bad)  
   140013b0d:	(bad)  
   140013b0e:	(bad)  
   140013b0f:	(bad)  
   140013b10:	(bad)  
   140013b11:	(bad)  
   140013b12:	(bad)  
   140013b13:	(bad)  
   140013b14:	(bad)  
   140013b15:	(bad)  
   140013b16:	(bad)  
   140013b17:	(bad)  
   140013b18:	(bad)  
   140013b19:	(bad)  
   140013b1a:	(bad)  
   140013b1b:	(bad)  
   140013b1c:	(bad)  
   140013b1d:	(bad)  
   140013b1e:	(bad)  
   140013b1f:	(bad)  
   140013b20:	jmp    FWORD PTR [rsi]
   140013b22:	rex.WRXB out dx,eax
   140013b24:	(bad)  
   140013b25:	(bad)  
   140013b26:	(bad)  
   140013b27:	(bad)  
   140013b28:	(bad)  
   140013b29:	(bad)  
   140013b2a:	(bad)  
   140013b2b:	(bad)  
   140013b2c:	(bad)  
   140013b2d:	(bad)  
   140013b2e:	(bad)  
   140013b2f:	(bad)  
   140013b30:	(bad)  
   140013b31:	(bad)  
   140013b32:	(bad)  
   140013b33:	(bad)  
   140013b34:	(bad)  
   140013b35:	(bad)  
   140013b36:	(bad)  
   140013b37:	call   FWORD PTR [rdi-0x70]
   140013b3a:	(bad)  
   140013b3b:	(bad)  
   140013b3c:	(bad)  
   140013b3d:	inc    ecx
   140013b3f:	(bad)  
   140013b40:	(bad)  
   140013b41:	(bad)  
   140013b42:	(bad)  
   140013b43:	(bad)  
   140013b44:	(bad)  
   140013b45:	(bad)  
   140013b46:	(bad)  
   140013b47:	(bad)  
   140013b48:	(bad)  
   140013b49:	(bad)  
   140013b4a:	(bad)  
   140013b4b:	(bad)  
   140013b4c:	(bad)  
   140013b4d:	(bad)  
   140013b4e:	(bad)  
   140013b4f:	(bad)  
   140013b50:	(bad)  
   140013b51:	(bad)  
   140013b52:	(bad)  
   140013b53:	(bad)  
   140013b54:	(bad)  
   140013b55:	(bad)  
   140013b56:	(bad)  
   140013b57:	(bad)  
   140013b58:	(bad)  
   140013b59:	(bad)  
   140013b5a:	(bad)  
   140013b5b:	(bad)  
   140013b5c:	(bad)  
   140013b5d:	(bad)  
   140013b5e:	(bad)  
   140013b5f:	call   QWORD PTR [rax-0x81]
   140013b65:	(bad)  
   140013b66:	(bad)  
   140013b67:	(bad)  
   140013b68:	(bad)  
   140013b69:	(bad)  
   140013b6a:	(bad)  
   140013b6b:	(bad)  
   140013b6c:	(bad)  
   140013b6d:	(bad)  
   140013b6e:	(bad)  
   140013b6f:	(bad)  
   140013b70:	(bad)  
   140013b71:	(bad)  
   140013b72:	(bad)  
   140013b73:	(bad)  
   140013b74:	(bad)  
   140013b75:	(bad)  
   140013b76:	(bad)  
   140013b77:	(bad)  
   140013b78:	mov    edi,0xffffff60
   140013b7d:	jmp    rsp
   140013b7f:	(bad)  
   140013b80:	(bad)  
   140013b81:	(bad)  
   140013b82:	(bad)  
   140013b83:	(bad)  
   140013b84:	(bad)  
   140013b85:	(bad)  
   140013b86:	(bad)  
   140013b87:	(bad)  
   140013b88:	(bad)  
   140013b89:	(bad)  
   140013b8a:	(bad)  
   140013b8b:	(bad)  
   140013b8c:	(bad)  
   140013b8d:	(bad)  
   140013b8e:	(bad)  
   140013b8f:	(bad)  
   140013b90:	(bad)  
   140013b91:	(bad)  
   140013b92:	(bad)  
   140013b93:	(bad)  
   140013b94:	(bad)  
   140013b95:	(bad)  
   140013b96:	(bad)  
   140013b97:	(bad)  
   140013b98:	(bad)  
   140013b99:	(bad)  
   140013b9a:	(bad)  
   140013b9b:	(bad)  
   140013b9c:	inc    eax
   140013b9e:	nop
   140013b9f:	rex.WXB outs dx,DWORD PTR ds:[rsi]
   140013ba1:	(bad)  
   140013ba2:	(bad)  
   140013ba3:	(bad)  
   140013ba4:	(bad)  
   140013ba5:	(bad)  
   140013ba6:	(bad)  
   140013ba7:	(bad)  
   140013ba8:	(bad)  
   140013ba9:	(bad)  
   140013baa:	(bad)  
   140013bab:	(bad)  
   140013bac:	(bad)  
   140013bad:	(bad)  
   140013bae:	(bad)  
   140013baf:	(bad)  
   140013bb0:	(bad)  
   140013bb1:	(bad)  
   140013bb2:	(bad)  
   140013bb3:	(bad)  
   140013bb4:	(bad)  
   140013bb5:	(bad)  
   140013bb6:	(bad)  
   140013bb7:	(bad)  
   140013bb8:	jmp    FWORD PTR [rip+0xffffffffffffffff]        # 0x140013bbd
   140013bbe:	(bad)  
   140013bbf:	mov    esi,0xffffffff
   140013bc4:	(bad)  
   140013bc5:	(bad)  
   140013bc6:	(bad)  
   140013bc7:	(bad)  
   140013bc8:	(bad)  
   140013bc9:	(bad)  
   140013bca:	(bad)  
   140013bcb:	(bad)  
   140013bcc:	(bad)  
   140013bcd:	(bad)  
   140013bce:	(bad)  
   140013bcf:	(bad)  
   140013bd0:	(bad)  
   140013bd1:	(bad)  
   140013bd2:	(bad)  
   140013bd3:	(bad)  
   140013bd4:	(bad)  
   140013bd5:	jmp    rax
   140013bd7:	mov    al,0x80
   140013bd9:	rex
   140013bda:	rex (bad) 
   140013bdd:	jg     0x140013b9e
   140013bdf:	(bad)  
   140013be0:	(bad)  
   140013be1:	(bad)  
   140013be2:	(bad)  
   140013be3:	(bad)  
   140013be4:	(bad)  
   140013be5:	(bad)  
   140013be6:	(bad)  
   140013be7:	(bad)  
   140013be8:	(bad)  
   140013be9:	(bad)  
   140013bea:	(bad)  
   140013beb:	(bad)  
   140013bec:	(bad)  
   140013bed:	(bad)  
   140013bee:	(bad)  
   140013bef:	(bad)  
   140013bf0:	(bad)  
   140013bf1:	(bad)  
   140013bf2:	(bad)  
   140013bf3:	(bad)  
   140013bf4:	(bad)  
   140013bf5:	(bad)  
   140013bf6:	(bad)  
   140013bf7:	(bad)  
   140013bf8:	call   FWORD PTR [rdi-0x60]
   140013bfb:	(bad)  
   140013bfc:	(bad)  
   140013bfd:	(bad)  
   140013bfe:	call   rsi
   140013c00:	(bad)  
   140013c01:	(bad)  
   140013c02:	(bad)  
   140013c03:	(bad)  
   140013c04:	(bad)  
   140013c05:	(bad)  
   140013c06:	(bad)  
   140013c07:	(bad)  
   140013c08:	(bad)  
   140013c09:	(bad)  
   140013c0a:	(bad)  
   140013c0b:	(bad)  
   140013c0c:	(bad)  
   140013c0d:	(bad)  
   140013c0e:	(bad)  
   140013c0f:	(bad)  
   140013c10:	(bad)  
   140013c11:	push   rax
   140013c13:	movabs al,ds:0xffdfbf8f5f2f2070
   140013c1c:	(bad)  
   140013c1d:	(bad)  
   140013c1e:	(bad)  
   140013c1f:	(bad)  
   140013c20:	(bad)  
   140013c21:	(bad)  
   140013c22:	(bad)  
   140013c23:	(bad)  
   140013c24:	(bad)  
   140013c25:	(bad)  
   140013c26:	(bad)  
   140013c27:	(bad)  
   140013c28:	(bad)  
   140013c29:	(bad)  
   140013c2a:	(bad)  
   140013c2b:	(bad)  
   140013c2c:	(bad)  
   140013c2d:	(bad)  
   140013c2e:	(bad)  
   140013c2f:	(bad)  
   140013c30:	(bad)  
   140013c31:	(bad)  
   140013c32:	(bad)  
   140013c33:	(bad)  
   140013c34:	(bad)  
   140013c35:	(bad)  
   140013c36:	(bad)  
   140013c37:	(bad)  
   140013c38:	(bad)  
   140013c39:	mov    edi,0xffffff60
   140013c3e:	(bad)  
   140013c3f:	call   QWORD PTR [rdx-0x1]
   140013c45:	(bad)  
   140013c46:	(bad)  
   140013c47:	(bad)  
   140013c48:	(bad)  
   140013c49:	(bad)  
   140013c4a:	(bad)  
   140013c4b:	(bad)  
   140013c4c:	(bad)  
   140013c4d:	(bad)  
   140013c4e:	push   QWORD PTR [rax-0x7090b690]
   140013c54:	iret   
   140013c55:	(bad)  
   140013c56:	(bad)  
   140013c57:	(bad)  
   140013c58:	(bad)  
   140013c59:	(bad)  
   140013c5a:	(bad)  
   140013c5b:	(bad)  
   140013c5c:	(bad)  
   140013c5d:	(bad)  
   140013c5e:	(bad)  
   140013c5f:	(bad)  
   140013c60:	(bad)  
   140013c61:	(bad)  
   140013c62:	(bad)  
   140013c63:	(bad)  
   140013c64:	(bad)  
   140013c65:	(bad)  
   140013c66:	(bad)  
   140013c67:	(bad)  
   140013c68:	(bad)  
   140013c69:	(bad)  
   140013c6a:	(bad)  
   140013c6b:	(bad)  
   140013c6c:	(bad)  
   140013c6d:	(bad)  
   140013c6e:	(bad)  
   140013c6f:	(bad)  
   140013c70:	(bad)  
   140013c71:	(bad)  
   140013c72:	(bad)  
   140013c73:	(bad)  
   140013c74:	(bad)  
   140013c75:	(bad)  
   140013c76:	(bad)  
   140013c77:	(bad)  
   140013c78:	(bad)  
   140013c79:	(bad)  
   140013c7a:	(bad)  
   140013c7b:	sar    bh,0xff
   140013c7e:	(bad)  
   140013c7f:	push   rax
   140013c81:	mov    dl,0xff
   140013c83:	(bad)  
   140013c84:	(bad)  
   140013c85:	(bad)  
   140013c86:	(bad)  
   140013c87:	(bad)  
   140013c88:	(bad)  
   140013c89:	(bad)  
   140013c8a:	jmp    rax
   140013c8c:	nop
   140013c8d:	xor    BYTE PTR [rdi],bl
   140013c8f:	outs   dx,DWORD PTR ds:[rsi]
   140013c90:	(bad)  
   140013c92:	(bad)  
   140013c93:	(bad)  
   140013c94:	(bad)  
   140013c95:	(bad)  
   140013c96:	(bad)  
   140013c97:	(bad)  
   140013c98:	(bad)  
   140013c99:	(bad)  
   140013c9a:	(bad)  
   140013c9b:	(bad)  
   140013c9c:	(bad)  
   140013c9d:	(bad)  
   140013c9e:	(bad)  
   140013c9f:	(bad)  
   140013ca0:	(bad)  
   140013ca1:	(bad)  
   140013ca2:	(bad)  
   140013ca3:	(bad)  
   140013ca4:	(bad)  
   140013ca5:	(bad)  
   140013ca6:	(bad)  
   140013ca7:	(bad)  
   140013ca8:	(bad)  
   140013ca9:	(bad)  
   140013caa:	(bad)  
   140013cab:	(bad)  
   140013cac:	(bad)  
   140013cad:	(bad)  
   140013cae:	(bad)  
   140013caf:	(bad)  
   140013cb0:	(bad)  
   140013cb1:	(bad)  
   140013cb2:	(bad)  
   140013cb3:	(bad)  
   140013cb4:	(bad)  
   140013cb5:	(bad)  
   140013cb6:	(bad)  
   140013cb7:	(bad)  
   140013cb8:	(bad)  
   140013cb9:	dec    edi
   140013cbb:	xor    bh,bh
   140013cbd:	(bad)  
   140013cbe:	(bad)  
   140013cbf:	(bad)  
   140013cc0:	(bad)  
   140013cc1:	push   QWORD PTR [rax-0x30]
   140013cc7:	rcl    BYTE PTR [rax-0x70a0c3a0],0xcf
   140013cce:	(bad)  
   140013ccf:	(bad)  
   140013cd0:	(bad)  
   140013cd1:	(bad)  
   140013cd2:	(bad)  
   140013cd3:	(bad)  
   140013cd4:	(bad)  
   140013cd5:	(bad)  
   140013cd6:	(bad)  
   140013cd7:	(bad)  
   140013cd8:	(bad)  
   140013cd9:	(bad)  
   140013cda:	(bad)  
   140013cdb:	(bad)  
   140013cdc:	(bad)  
   140013cdd:	(bad)  
   140013cde:	(bad)  
   140013cdf:	(bad)  
   140013ce0:	(bad)  
   140013ce1:	(bad)  
   140013ce2:	(bad)  
   140013ce3:	(bad)  
   140013ce4:	(bad)  
   140013ce5:	(bad)  
   140013ce6:	(bad)  
   140013ce7:	(bad)  
   140013ce8:	(bad)  
   140013ce9:	(bad)  
   140013cea:	(bad)  
   140013ceb:	(bad)  
   140013cec:	(bad)  
   140013ced:	(bad)  
   140013cee:	(bad)  
   140013cef:	(bad)  
   140013cf0:	(bad)  
   140013cf1:	(bad)  
   140013cf2:	(bad)  
   140013cf3:	(bad)  
   140013cf4:	(bad)  
   140013cf5:	(bad)  
   140013cf6:	(bad)  
   140013cf7:	(bad)  
   140013cf8:	(bad)  
   140013cf9:	(bad)  
   140013cfa:	(bad)  
   140013cfb:	jg     0x140013d6d
   140013cfd:	(bad)  
   140013cfe:	(bad)  
   140013cff:	(bad)  
   140013d00:	(bad)  
   140013d01:	(bad)  
   140013d02:	push   rax
   140013d04:	lods   al,BYTE PTR ds:[rsi]
   140013d05:	movabs al,ds:0xffffffffef9f1f58
   140013d0e:	(bad)  
   140013d0f:	(bad)  
   140013d10:	(bad)  
   140013d11:	(bad)  
   140013d12:	(bad)  
   140013d13:	(bad)  
   140013d14:	(bad)  
   140013d15:	(bad)  
   140013d16:	(bad)  
   140013d17:	(bad)  
   140013d18:	(bad)  
   140013d19:	(bad)  
   140013d1a:	(bad)  
   140013d1b:	(bad)  
   140013d1c:	(bad)  
   140013d1d:	(bad)  
   140013d1e:	(bad)  
   140013d1f:	(bad)  
   140013d20:	(bad)  
   140013d21:	(bad)  
   140013d22:	(bad)  
   140013d23:	(bad)  
   140013d24:	(bad)  
   140013d25:	(bad)  
   140013d26:	(bad)  
   140013d27:	(bad)  
   140013d28:	(bad)  
   140013d29:	(bad)  
   140013d2a:	(bad)  
   140013d2b:	(bad)  
   140013d2c:	(bad)  
   140013d2d:	(bad)  
   140013d2e:	(bad)  
   140013d2f:	(bad)  
   140013d30:	(bad)  
   140013d31:	(bad)  
   140013d32:	(bad)  
   140013d33:	(bad)  
   140013d34:	(bad)  
   140013d35:	(bad)  
   140013d36:	(bad)  
   140013d37:	(bad)  
   140013d38:	(bad)  
   140013d39:	(bad)  
   140013d3a:	(bad)  
   140013d3b:	call   FWORD PTR [rdi+0x60]
   140013d3e:	(bad)  
   140013d3f:	(bad)  
   140013d40:	(bad)  
   140013d41:	call   rax
   140013d43:	nop
   140013d44:	push   rax
   140013d45:	add    BYTE PTR [rdi],bl
   140013d47:	scas   eax,DWORD PTR es:[rdi]
   140013d48:	(bad)  
   140013d49:	(bad)  
   140013d4a:	(bad)  
   140013d4b:	(bad)  
   140013d4c:	(bad)  
   140013d4d:	(bad)  
   140013d4e:	(bad)  
   140013d4f:	(bad)  
   140013d50:	(bad)  
   140013d51:	(bad)  
   140013d52:	(bad)  
   140013d53:	(bad)  
   140013d54:	(bad)  
   140013d55:	(bad)  
   140013d56:	(bad)  
   140013d57:	(bad)  
   140013d58:	(bad)  
   140013d59:	(bad)  
   140013d5a:	(bad)  
   140013d5b:	(bad)  
   140013d5c:	(bad)  
   140013d5d:	(bad)  
   140013d5e:	(bad)  
   140013d5f:	(bad)  
   140013d60:	(bad)  
   140013d61:	(bad)  
   140013d62:	(bad)  
   140013d63:	(bad)  
   140013d64:	(bad)  
   140013d65:	(bad)  
   140013d66:	(bad)  
   140013d67:	(bad)  
   140013d68:	(bad)  
   140013d69:	(bad)  
   140013d6a:	(bad)  
   140013d6b:	(bad)  
   140013d6c:	(bad)  
   140013d6d:	(bad)  
   140013d6e:	(bad)  
   140013d6f:	(bad)  
   140013d70:	(bad)  
   140013d71:	(bad)  
   140013d72:	(bad)  
   140013d73:	(bad)  
   140013d74:	(bad)  
   140013d75:	(bad)  
   140013d76:	(bad)  
   140013d77:	(bad)  
   140013d78:	(bad)  
   140013d79:	(bad)  
   140013d7a:	(bad)  
   140013d7b:	(bad)  
   140013d7c:	(bad)  
   140013d7d:	jg     0x140013dba
   140013d7f:	adc    BYTE PTR [rdi],bpl
   140013d82:	outs   dx,DWORD PTR ds:[rsi]
   140013d83:	scas   eax,DWORD PTR es:[rdi]
   140013d84:	out    dx,eax
   140013d85:	(bad)  
   140013d86:	(bad)  
   140013d87:	(bad)  
   140013d88:	(bad)  
   140013d89:	(bad)  
   140013d8a:	(bad)  
   140013d8b:	(bad)  
   140013d8c:	(bad)  
   140013d8d:	(bad)  
   140013d8e:	(bad)  
   140013d8f:	(bad)  
   140013d90:	(bad)  
   140013d91:	(bad)  
   140013d92:	(bad)  
   140013d93:	(bad)  
   140013d94:	(bad)  
   140013d95:	(bad)  
   140013d96:	(bad)  
   140013d97:	(bad)  
   140013d98:	(bad)  
   140013d99:	(bad)  
   140013d9a:	(bad)  
   140013d9b:	(bad)  
   140013d9c:	(bad)  
   140013d9d:	(bad)  
   140013d9e:	(bad)  
   140013d9f:	(bad)  
   140013da0:	(bad)  
   140013da1:	(bad)  
   140013da2:	(bad)  
   140013da3:	(bad)  
   140013da4:	(bad)  
   140013da5:	(bad)  
   140013da6:	(bad)  
   140013da7:	(bad)  
   140013da8:	(bad)  
   140013da9:	(bad)  
   140013daa:	(bad)  
   140013dab:	(bad)  
   140013dac:	(bad)  
   140013dad:	(bad)  
   140013dae:	(bad)  
   140013daf:	(bad)  
   140013db0:	(bad)  
   140013db1:	(bad)  
   140013db2:	(bad)  
   140013db3:	(bad)  
   140013db4:	(bad)  
   140013db5:	(bad)  
   140013db6:	(bad)  
   140013db7:	jmp    FWORD PTR [rax]
   140013db9:	add    BYTE PTR [rax],al
   140013dbb:	add    BYTE PTR [rax],ah
   140013dbd:	add    BYTE PTR [rax],al
   140013dbf:	add    BYTE PTR [rax+0x0],al
   140013dc2:	add    BYTE PTR [rax],al
   140013dc4:	add    DWORD PTR [rax],eax
   140013dc6:	add    al,0x0
   140013dc8:	add    BYTE PTR [rax],al
   140013dca:	add    BYTE PTR [rax],al
   140013dcc:	add    BYTE PTR [rdx],0x0
	...
   140013de3:	add    BYTE PTR [rax],al
   140013de5:	add    BYTE PTR [rax+0x800000],al
   140013deb:	add    BYTE PTR [rax],al
   140013ded:	add    BYTE PTR [rax+0x8000],0x0
   140013df4:	add    BYTE PTR [rax],0x80
   140013df7:	add    BYTE PTR [rax-0x3fffff80],al
   140013dfd:	rol    al,0x0
   140013e00:	add    BYTE PTR [rax+0x80],0xff
   140013e07:	add    BYTE PTR [rax],al
   140013e09:	inc    DWORD PTR [rax]
   140013e0b:	add    BYTE PTR [rax],al
   140013e0d:	(bad)  
   140013e0e:	inc    DWORD PTR [rax]
   140013e10:	inc    DWORD PTR [rax]
   140013e12:	add    BYTE PTR [rax],al
   140013e14:	inc    DWORD PTR [rax]
   140013e16:	inc    DWORD PTR [rax]
   140013e18:	(bad)  
   140013e19:	inc    DWORD PTR [rax]
   140013e1b:	add    bh,bh
   140013e1d:	(bad)  
   140013e1e:	inc    DWORD PTR [rax]
	...
   140013e44:	add    al,0x0
   140013e46:	add    BYTE PTR [rax],al
   140013e48:	add    BYTE PTR [rax],al
   140013e4a:	add    BYTE PTR [rax],al
   140013e4c:	(bad)  
   140013e4d:	add    BYTE PTR [rax],al
   140013e4f:	add    BYTE PTR [rax],al
   140013e51:	add    BYTE PTR [rax],al
   140013e53:	add    BYTE PTR [rax+rcx*1],cl
   140013e56:	mov    BYTE PTR [rax-0x77777778],cl
   140013e5c:	add    al,0x0
   140013e5e:	add    BYTE PTR [rax],al
   140013e60:	add    BYTE PTR [rax],al
   140013e62:	add    BYTE PTR [rax],al
   140013e64:	add    al,0x7
   140013e66:	ja     0x140013ee7
   140013e68:	(bad)  
   140013e69:	(bad)  
   140013e6a:	(bad)  
   140013e6b:	inc    DWORD PTR [rax+rax*1]
   140013e6e:	add    BYTE PTR [rax],al
   140013e70:	add    BYTE PTR [rax],al
   140013e72:	add    BYTE PTR [rax],al
   140013e74:	or     BYTE PTR [rdi-0x9],r14b
   140013e78:	(bad)  
   140013e79:	(bad)  
   140013e7a:	(bad)  
   140013e7b:	inc    DWORD PTR [rax+rax*1]
   140013e7e:	add    BYTE PTR [rax],al
   140013e80:	add    BYTE PTR [rax],al
   140013e82:	add    BYTE PTR [rax],al
   140013e84:	rex xchg DWORD PTR [rdi+0x7f],esi
   140013e88:	(bad)  
   140013e89:	(bad)  
   140013e8a:	(bad)  
   140013e8b:	inc    DWORD PTR [rax+rax*1]
   140013e8e:	add    BYTE PTR [rax],al
   140013e90:	add    BYTE PTR [rax],al
   140013e92:	add    BYTE PTR [rax+rax*2],al
   140013e95:	mov    BYTE PTR [rdi-0x9],dh
   140013e98:	(bad)  
   140013e99:	(bad)  
   140013e9a:	(bad)  
   140013e9b:	inc    DWORD PTR [rax+rax*1]
   140013e9e:	add    BYTE PTR [rax],al
   140013ea0:	add    BYTE PTR [rax],al
   140013ea2:	add    BYTE PTR [rax+rcx*1-0x79],al
   140013ea6:	ja     0x140013f27
   140013ea8:	(bad)  
   140013ea9:	(bad)  
   140013eaa:	(bad)  
   140013eab:	inc    DWORD PTR [rax+rax*1]
   140013eae:	add    BYTE PTR [rax],al
   140013eb0:	add    BYTE PTR [rax],al
   140013eb2:	add    al,0x40
   140013eb4:	ja     0x140013e3e
   140013eb6:	ja     0x140013eaf
   140013eb8:	(bad)  
   140013eb9:	(bad)  
   140013eba:	(bad)  
   140013ebb:	inc    DWORD PTR [rax+rax*1]
   140013ebe:	add    BYTE PTR [rax],al
   140013ec0:	add    BYTE PTR [rsp+rax*2],al
   140013ec3:	(bad)  
   140013ec4:	js     0x140013e4d
   140013ec6:	ja     0x140013f47
   140013ec8:	(bad)  
   140013ec9:	(bad)  
   140013eca:	(bad)  
   140013ecb:	inc    DWORD PTR [rax+rax*1]
   140013ece:	add    BYTE PTR [rax],al
   140013ed0:	add    al,0x44
   140013ed2:	add    BYTE PTR [rdi+0x77],dh
   140013ed5:	mov    BYTE PTR [rdi-0x9],dh
   140013ed8:	(bad)  
   140013ed9:	(bad)  
   140013eda:	(bad)  
   140013edb:	inc    DWORD PTR [rax+rax*1]
   140013ede:	add    BYTE PTR [rax],al
   140013ee0:	add    al,0x0
   140013ee2:	div    edi
   140013ee4:	js     0x140013e6d
   140013ee6:	ja     0x140013f67
   140013ee8:	(bad)  
   140013ee9:	(bad)  
   140013eea:	(bad)  
   140013eeb:	inc    DWORD PTR [rax+rax*1]
   140013eee:	add    BYTE PTR [rax],al
   140013ef0:	(bad)  
   140013ef1:	ud0    esi,DWORD PTR [rdi+0x77]
   140013ef5:	mov    BYTE PTR [rdi-0x9],dh
   140013ef8:	ja     0x140013e82
   140013efa:	mov    BYTE PTR [rax+0x4],cl
   140013f00:	or     BYTE PTR [rdi],cl
   140013f02:	div    edi
   140013f04:	js     0x140013e8d
   140013f06:	ja     0x140013f87
   140013f08:	div    DWORD PTR [rdi-0x78]
   140013f0b:	mov    BYTE PTR [rax+rax*1],al
   140013f0e:	add    BYTE PTR [rax],al
   140013f10:	or     BYTE PTR [rdi],cl
   140013f12:	push   QWORD PTR [rdi+0x77]
   140013f15:	mov    BYTE PTR [rdi-0x9],dh
   140013f18:	push   QWORD PTR [rdi-0x78]
   140013f1b:	mov    BYTE PTR [rax+rax*1],al
   140013f1e:	add    BYTE PTR [rax],al
   140013f20:	or     BYTE PTR [rdi],cl
   140013f22:	div    edi
   140013f24:	js     0x140013ead
   140013f26:	ja     0x140013fa7
	...
   140013f30:	or     BYTE PTR [rdi],cl
   140013f32:	push   QWORD PTR [rdi+0x77]
   140013f35:	mov    BYTE PTR [rdi-0x10],dh
   140013f38:	jnp    0x140013fb5
   140013f3a:	jae    0x140013faf
   140013f3c:	jno    0x140013f3e
   140013f3e:	add    BYTE PTR [rax],al
   140013f40:	or     BYTE PTR [rdi],cl
   140013f42:	div    edi
   140013f44:	js     0x140013ecd
   140013f46:	ja     0x140013fc7
   140013f48:	add    BYTE PTR [rdi+0x37b7],dh
   140013f4e:	add    BYTE PTR [rax],al
   140013f50:	or     BYTE PTR [rdi],cl
   140013f52:	push   QWORD PTR [rdi+0x77]
   140013f55:	mov    BYTE PTR [rdi-0x9],dh
   140013f58:	dec    DWORD PTR [rbx]
   140013f5a:	mov    ebx,0x430
   140013f5f:	add    BYTE PTR [rdi],al
   140013f61:	maskmovq mm6,mm7
   140013f64:	js     0x140013eed
   140013f66:	ja     0x140013fdf
   140013f68:	js     0x140013eea
   140013f6a:	mov    ebx,0x408
   140013f6f:	add    BYTE PTR [rax],cl
   140013f71:	ud0    esi,DWORD PTR [rdi+0x77]
   140013f75:	mov    BYTE PTR [rdi-0x78],dh
   140013f78:	add    BYTE PTR [rdi],al
   140013f7a:	(bad)  
   140013f7b:	xor    BYTE PTR [rax+rax*1],al
   140013f7e:	add    BYTE PTR [rax],al
   140013f80:	(bad)  
   140013f81:	maskmovq mm6,mm7
   140013f84:	js     0x140013f0d
   140013f86:	mov    BYTE PTR [rax],al
   140013f88:	xor    esi,DWORD PTR [rdi-0x49]
   140013f8b:	(bad)  
   140013f8c:	xor    BYTE PTR [rbx+0xf0800b3],bh
   140013f92:	push   QWORD PTR [rdi+0x77]
   140013f95:	mov    BYTE PTR [rax],al
   140013f97:	xor    esi,DWORD PTR [rdi-0x45]
   140013f9a:	mov    ebx,0xb707373
   140013f9f:	xor    BYTE PTR [rdi],al
   140013fa1:	maskmovq mm6,mm7
   140013fa4:	add    BYTE PTR [rax],al
   140013fa6:	(bad)  
   140013fa7:	jnp    0x140013f64
   140013fa9:	sti    
   140013faa:	mov    ebx,0x37b7
   140013faf:	mov    al,0x8
   140013fb1:	ud0    esi,DWORD PTR [rax+0x77]
   140013fb5:	cmp    edi,DWORD PTR [rbx-0x44000045]
   140013fbb:	mov    bh,0x37
   140013fbd:	xor    BYTE PTR [rax],al
   140013fbf:	mov    al,0x7
   140013fc1:	maskmovq mm0,(bad)
   140013fc2:	test   DWORD PTR [rdi],0x70
   140013fc8:	add    BYTE PTR [rbx],dh
   140013fca:	adc    edx,DWORD PTR [rcx]
   140013fcc:	adc    BYTE PTR [rbx],cl
   140013fce:	add    BYTE PTR [rcx-0x100ff0f9],dh
   140013fd4:	out    0xe0,eax
   140013fd6:	add    BYTE PTR [rax],al
   140013fd8:	(bad)  
   140013fd9:	mov    edi,0x130b3bb
   140013fde:	mov    ebx,0xe0f0731
   140013fe3:	idiv   esi
   140013fe5:	jle    0x140013fe7
   140013fe7:	add    BYTE PTR [rcx],al
   140013fe9:	sbb    edi,DWORD PTR [rbx+0x11000030]
   140013fef:	adc    BYTE PTR [rdi+0x7f7f0f0f],al
   140013ff5:	out    0x0,eax
   140013ff7:	add    BYTE PTR [rax],al
   140013ff9:	add    BYTE PTR [rbx+0x0],bh
   140013fff:	add    BYTE PTR [rdi-0x108ff71],al
   140014005:	lock add BYTE PTR [rax],al
	...
   140014010:	add    BYTE PTR [rax+0x0],bh
	...
   14001401f:	add    bh,bh
   140014021:	add    BYTE PTR [rax],0x3f
   140014024:	inc    DWORD PTR [rax]
   140014026:	add    BYTE PTR [rdi],bl
   140014028:	inc    DWORD PTR [rax]
   14001402a:	add    BYTE PTR [rdi],bl
   14001402c:	inc    DWORD PTR [rax]
   14001402e:	add    BYTE PTR [rdi],bl
   140014030:	inc    DWORD PTR [rax]
   140014032:	add    BYTE PTR [rdi],bl
   140014034:	inc    BYTE PTR [rax]
   140014036:	add    BYTE PTR [rdi],bl
   140014038:	inc    BYTE PTR [rax]
   14001403a:	add    BYTE PTR [rdi],bl
   14001403c:	cld    
   14001403d:	add    BYTE PTR [rax],al
   14001403f:	(bad)  
   140014040:	clc    
   140014041:	add    BYTE PTR [rax],al
   140014043:	(bad)  
   140014044:	loopne 0x140014046
   140014046:	add    BYTE PTR [rdi],bl
   140014048:	add    BYTE PTR [rax],0x0
   14001404b:	(bad)  
   14001404c:	add    BYTE PTR [rax],al
   14001404e:	add    BYTE PTR [rdi],bl
   140014050:	add    BYTE PTR [rax],al
   140014052:	add    BYTE PTR [rdi],bl
   140014054:	add    BYTE PTR [rax],al
   140014056:	add    BYTE PTR [rdi],bl
   140014058:	add    BYTE PTR [rax],al
   14001405a:	add    BYTE PTR [rdi],bl
   14001405c:	add    BYTE PTR [rax],al
   14001405e:	add    BYTE PTR [rdi],bl
   140014060:	add    BYTE PTR [rax],al
   140014062:	add    BYTE PTR [rdi],bl
   140014064:	add    BYTE PTR [rax],al
   140014066:	add    BYTE PTR [rdi],bl
   140014068:	add    BYTE PTR [rax],al
   14001406a:	add    BYTE PTR [rdi],bl
   14001406c:	add    BYTE PTR [rax],al
   14001406e:	add    BYTE PTR [rdi],bl
   140014070:	add    BYTE PTR [rax],al
   140014072:	add    BYTE PTR [rdi],bl
   140014074:	add    BYTE PTR [rax],al
   140014076:	add    BYTE PTR [rbx],al
   140014078:	add    BYTE PTR [rax],al
   14001407a:	add    BYTE PTR [rcx],al
   14001407c:	add    BYTE PTR [rax],al
   14001407e:	add    BYTE PTR [rax],al
   140014080:	add    BYTE PTR [rax],al
   140014082:	add    BYTE PTR [rax],bl
   140014084:	add    BYTE PTR [rax],al
   140014086:	add    BYTE PTR [rax],cl
   140014088:	add    BYTE PTR [rax],al
   14001408a:	add    BYTE PTR [rax],al
   14001408c:	add    BYTE PTR [rdi],cl
   14001408e:	add    BYTE PTR [rax],ah
   140014090:	add    BYTE PTR [rdi],al
   140014092:	xor    BYTE PTR [rcx+0x0],0x7
   140014096:	loope  0x140014097
   140014098:	add    BYTE PTR [rdi],cl
   14001409a:	repz dec esp
   14001409d:	(bad)  
   14001409e:	(bad)  
   14001409f:	jmp    FWORD PTR [rax]
   1400140a1:	add    BYTE PTR [rax],al
   1400140a3:	add    BYTE PTR [rax],ah
   1400140a5:	add    BYTE PTR [rax],al
   1400140a7:	add    BYTE PTR [rax+0x0],al
   1400140aa:	add    BYTE PTR [rax],al
   1400140ac:	add    DWORD PTR [rax],eax
   1400140ae:	or     BYTE PTR [rax],al
   1400140b0:	add    BYTE PTR [rax],al
   1400140b2:	add    BYTE PTR [rax],al
   1400140b4:	add    BYTE PTR [rax+rax*1],al
	...
   1400140cb:	add    BYTE PTR [rax],al
   1400140cd:	add    BYTE PTR [rax+0x800000],al
   1400140d3:	add    BYTE PTR [rax],al
   1400140d5:	add    BYTE PTR [rax+0x8000],0x0
   1400140dc:	add    BYTE PTR [rax],0x80
   1400140df:	add    BYTE PTR [rax-0x3fffff80],al
   1400140e5:	rol    al,0x0
   1400140e8:	rcr    ah,0xc0
   1400140eb:	add    al,dh
   1400140ed:	retf   0xa6
   1400140f0:	add    al,0x4
   1400140f2:	add    al,0x0
   1400140f4:	or     BYTE PTR [rax],cl
   1400140f6:	or     BYTE PTR [rax],al
   1400140f8:	or     al,0xc
   1400140fa:	or     al,0x0
   1400140fc:	adc    DWORD PTR [rcx],edx
   1400140fe:	adc    DWORD PTR [rax],eax
   140014100:	(bad)  
   140014101:	(bad)  
   140014102:	(bad)  
   140014103:	add    BYTE PTR [rsp+rbx*1],bl
   140014106:	sbb    al,0x0
   140014108:	and    ah,BYTE PTR [rdx]
   14001410a:	and    al,BYTE PTR [rax]
   14001410c:	sub    DWORD PTR [rcx],ebp
   14001410e:	sub    DWORD PTR [rax],eax
   140014110:	push   rbp
   140014111:	push   rbp
   140014112:	push   rbp
   140014113:	add    BYTE PTR [rbp+0x4d],cl
   140014116:	rex.WRB add BYTE PTR [r10+0x42],r8b
   14001411a:	rex.X add BYTE PTR [rcx],dil
   14001411d:	cmp    DWORD PTR [rcx],edi
   14001411f:	add    BYTE PTR [rax+0x5000ff7c],al
   140014125:	push   rax
   140014126:	inc    DWORD PTR [rax]
   140014128:	xchg   ebx,eax
   140014129:	add    dh,dl
   14001412b:	add    bh,bh
   14001412d:	in     al,dx
   14001412e:	int3   
   14001412f:	add    dh,al
   140014131:	(bad)  
   140014132:	out    dx,eax
   140014133:	add    dh,dl
   140014135:	out    0xe7,eax
   140014137:	add    BYTE PTR [rax+0xada9],dl
   14001413d:	add    BYTE PTR [rbx],dh
   14001413f:	add    BYTE PTR [rax],al
   140014141:	add    BYTE PTR [rsi+0x0],ah
   140014144:	add    BYTE PTR [rax],al
   140014146:	cdq    
   140014147:	add    BYTE PTR [rax],al
   140014149:	add    ah,cl
   14001414b:	add    BYTE PTR [rax],al
   14001414d:	xor    eax,DWORD PTR [rax]
   14001414f:	add    BYTE PTR [rax],al
   140014151:	xor    esi,DWORD PTR [rbx]
   140014153:	add    BYTE PTR [rax],al
   140014155:	xor    esp,DWORD PTR [rsi+0x0]
   140014158:	add    BYTE PTR [rbx],dh
   14001415a:	cdq    
   14001415b:	add    BYTE PTR [rax],al
   14001415d:	xor    ecx,esp
   14001415f:	add    BYTE PTR [rax],al
   140014161:	xor    edi,edi
   140014163:	add    BYTE PTR [rax],al
   140014165:	data16 add BYTE PTR [rax],al
   140014168:	add    BYTE PTR [rsi+0x33],ah
   14001416b:	add    BYTE PTR [rax],al
   14001416d:	data16 data16 add BYTE PTR [rax],al
   140014171:	cwd    
   140014173:	add    BYTE PTR [rax],al
   140014175:	data16 int3 
   140014177:	add    BYTE PTR [rax],al
   140014179:	inc    WORD PTR [rax]
   14001417c:	add    BYTE PTR [rcx-0x67000000],bl
   140014182:	xor    eax,DWORD PTR [rax]
   140014184:	add    BYTE PTR [rcx-0x66ffff9a],bl
   14001418a:	cdq    
   14001418b:	add    BYTE PTR [rax],al
   14001418d:	cdq    
   14001418e:	int3   
   14001418f:	add    BYTE PTR [rax],al
   140014191:	cdq    
   140014192:	inc    DWORD PTR [rax]
   140014194:	add    ah,cl
   140014196:	add    BYTE PTR [rax],al
   140014198:	add    ah,cl
   14001419a:	xor    eax,DWORD PTR [rax]
   14001419c:	add    ah,cl
   14001419e:	data16 add BYTE PTR [rax],al
   1400141a1:	int3   
   1400141a2:	cdq    
   1400141a3:	add    BYTE PTR [rax],al
   1400141a5:	int3   
   1400141a6:	int3   
   1400141a7:	add    BYTE PTR [rax],al
   1400141a9:	int3   
   1400141aa:	inc    DWORD PTR [rax]
   1400141ac:	add    bh,bh
   1400141ae:	data16 add BYTE PTR [rax],al
   1400141b1:	call   FWORD PTR [rcx-0x33010000]
   1400141b7:	add    BYTE PTR [rbx],dh
   1400141b9:	add    BYTE PTR [rax],al
   1400141bb:	add    BYTE PTR [rbx],dh
   1400141bd:	add    BYTE PTR [rbx],dh
   1400141bf:	add    BYTE PTR [rbx],dh
   1400141c1:	add    BYTE PTR [rsi+0x0],ah
   1400141c4:	xor    eax,DWORD PTR [rax]
   1400141c6:	cdq    
   1400141c7:	add    BYTE PTR [rbx],dh
   1400141c9:	add    ah,cl
   1400141cb:	add    BYTE PTR [rbx],dh
   1400141cd:	add    bh,bh
   1400141cf:	add    BYTE PTR [rbx],dh
   1400141d1:	xor    eax,DWORD PTR [rax]
   1400141d3:	add    BYTE PTR [rbx],dh
   1400141d5:	xor    esi,DWORD PTR [rbx]
   1400141d7:	add    BYTE PTR [rbx],dh
   1400141d9:	xor    esp,DWORD PTR [rsi+0x0]
   1400141dc:	xor    esi,DWORD PTR [rbx]
   1400141de:	cdq    
   1400141df:	add    BYTE PTR [rbx],dh
   1400141e1:	xor    ecx,esp
   1400141e3:	add    BYTE PTR [rbx],dh
   1400141e5:	xor    edi,edi
   1400141e7:	add    BYTE PTR [rbx],dh
   1400141e9:	data16 add BYTE PTR [rax],al
   1400141ec:	xor    esp,DWORD PTR [rsi+0x33]
   1400141ef:	add    BYTE PTR [rbx],dh
   1400141f1:	data16 data16 add BYTE PTR [rbx],dh
   1400141f5:	cwd    
   1400141f7:	add    BYTE PTR [rbx],dh
   1400141f9:	data16 int3 
   1400141fb:	add    BYTE PTR [rbx],dh
   1400141fd:	inc    WORD PTR [rax]
   140014200:	xor    ebx,DWORD PTR [rcx-0x66cd0000]
   140014206:	xor    eax,DWORD PTR [rax]
   140014208:	xor    ebx,DWORD PTR [rcx-0x66ccff9a]
   14001420e:	cdq    
   14001420f:	add    BYTE PTR [rbx],dh
   140014211:	cdq    
   140014212:	int3   
   140014213:	add    BYTE PTR [rbx],dh
   140014215:	cdq    
   140014216:	inc    DWORD PTR [rax]
   140014218:	xor    ecx,esp
   14001421a:	add    BYTE PTR [rax],al
   14001421c:	xor    ecx,esp
   14001421e:	xor    eax,DWORD PTR [rax]
   140014220:	xor    ecx,esp
   140014222:	data16 add BYTE PTR [rbx],dh
   140014225:	int3   
   140014226:	cdq    
   140014227:	add    BYTE PTR [rbx],dh
   140014229:	int3   
   14001422a:	int3   
   14001422b:	add    BYTE PTR [rbx],dh
   14001422d:	int3   
   14001422e:	inc    DWORD PTR [rax]
   140014230:	xor    edi,edi
   140014232:	xor    eax,DWORD PTR [rax]
   140014234:	xor    edi,edi
   140014236:	data16 add BYTE PTR [rbx],dh
   140014239:	call   FWORD PTR [rcx-0x3300cd00]
   14001423f:	add    BYTE PTR [rbx],dh
   140014241:	(bad)  
   140014242:	inc    DWORD PTR [rax]
   140014244:	data16 add BYTE PTR [rax],al
   140014247:	add    BYTE PTR [rsi+0x0],ah
   14001424a:	xor    eax,DWORD PTR [rax]
   14001424c:	data16 add BYTE PTR [rsi+0x0],ah
   140014250:	data16 add BYTE PTR [rcx-0x33ff9a00],bl
   140014257:	add    BYTE PTR [rsi+0x0],ah
   14001425a:	inc    DWORD PTR [rax]
   14001425c:	xor    ax,WORD PTR [rax]
   14001425f:	add    BYTE PTR [rsi+0x33],ah
   140014262:	xor    eax,DWORD PTR [rax]
   140014264:	xor    sp,WORD PTR [rsi+0x0]
   140014268:	xor    bx,WORD PTR [rcx-0x33cc9a00]
   14001426f:	add    BYTE PTR [rsi+0x33],ah
   140014272:	inc    DWORD PTR [rax]
   140014274:	data16 data16 add BYTE PTR [rax],al
   140014278:	data16 xor ax,WORD PTR [rax]
   14001427c:	data16 data16 data16 add BYTE PTR [rsi+0x66],ah
   140014282:	cdq    
   140014283:	add    BYTE PTR [rsi+0x66],ah
   140014286:	int3   
   140014287:	add    BYTE PTR [rsi-0x67],ah
   14001428a:	add    BYTE PTR [rax],al
   14001428c:	cwd    
   14001428e:	xor    eax,DWORD PTR [rax]
   140014290:	cwd    
   140014292:	data16 add BYTE PTR [rsi-0x67],ah
   140014296:	cdq    
   140014297:	add    BYTE PTR [rsi-0x67],ah
   14001429a:	int3   
   14001429b:	add    BYTE PTR [rsi-0x67],ah
   14001429e:	inc    DWORD PTR [rax]
   1400142a0:	data16 int3 
   1400142a2:	add    BYTE PTR [rax],al
   1400142a4:	data16 int3 
   1400142a6:	xor    eax,DWORD PTR [rax]
   1400142a8:	data16 int3 
   1400142aa:	cdq    
   1400142ab:	add    BYTE PTR [rsi-0x34],ah
   1400142ae:	int3   
   1400142af:	add    BYTE PTR [rsi-0x34],ah
   1400142b2:	inc    DWORD PTR [rax]
   1400142b4:	inc    WORD PTR [rax]
   1400142b7:	add    BYTE PTR [rsi-0x1],ah
   1400142ba:	xor    eax,DWORD PTR [rax]
   1400142bc:	call   DWORD PTR [rcx-0x33009a00]
   1400142c3:	add    ah,cl
   1400142c5:	add    bh,bh
   1400142c7:	add    bh,bh
   1400142c9:	add    ah,cl
   1400142cb:	add    BYTE PTR [rcx-0x66ffff67],bl
   1400142d1:	xor    ebx,DWORD PTR [rcx-0x66ff6700]
   1400142d7:	add    BYTE PTR [rcx-0x66ff3400],bl
   1400142dd:	add    BYTE PTR [rax],al
   1400142df:	add    BYTE PTR [rcx-0x66ffcccd],bl
   1400142e5:	add    BYTE PTR [rsi+0x0],ah
   1400142e8:	cdq    
   1400142e9:	xor    ecx,esp
   1400142eb:	add    BYTE PTR [rcx-0x66ff0100],bl
   1400142f1:	data16 add BYTE PTR [rax],al
   1400142f4:	cdq    
   1400142f5:	xor    ax,WORD PTR [rax]
   1400142f8:	cdq    
   1400142f9:	xor    esp,DWORD PTR [rsi+0x0]
   1400142fc:	cdq    
   1400142fd:	cwd    
   1400142ff:	add    BYTE PTR [rcx-0x66ff339a],bl
   140014305:	xor    edi,edi
   140014307:	add    BYTE PTR [rcx-0x66ffcc67],bl
   14001430d:	cdq    
   14001430e:	data16 add BYTE PTR [rcx-0x66ff6667],bl
   140014315:	cdq    
   140014316:	int3   
   140014317:	add    BYTE PTR [rcx-0x66ff0067],bl
   14001431d:	int3   
   14001431e:	add    BYTE PTR [rax],al
   140014320:	cdq    
   140014321:	int3   
   140014322:	xor    eax,DWORD PTR [rax]
   140014324:	data16 int3 
   140014326:	data16 add BYTE PTR [rcx-0x66ff6634],bl
   14001432d:	int3   
   14001432e:	int3   
   14001432f:	add    BYTE PTR [rcx-0x66ff0034],bl
   140014335:	inc    DWORD PTR [rax]
   140014337:	add    BYTE PTR [rcx-0x66ffcc01],bl
   14001433d:	int3   
   14001433e:	data16 add BYTE PTR [rcx-0x66ff6601],bl
   140014345:	dec    esp
   140014347:	add    BYTE PTR [rcx-0x33ff0001],bl
   14001434d:	add    BYTE PTR [rax],al
   14001434f:	add    BYTE PTR [rcx-0x33ffcd00],bl
   140014355:	add    BYTE PTR [rsi+0x0],ah
   140014358:	int3   
   140014359:	add    BYTE PTR [rcx-0x33ff3400],bl
   14001435f:	add    BYTE PTR [rcx-0x33ffffcd],bl
   140014365:	xor    esi,DWORD PTR [rbx]
   140014367:	add    ah,cl
   140014369:	xor    esp,DWORD PTR [rsi+0x0]
   14001436c:	int3   
   14001436d:	xor    ebx,DWORD PTR [rcx-0x33cc3400]
   140014373:	add    ah,cl
   140014375:	xor    edi,edi
   140014377:	add    ah,cl
   140014379:	data16 add BYTE PTR [rax],al
   14001437c:	int3   
   14001437d:	xor    ax,WORD PTR [rax]
   140014380:	cdq    
   140014381:	data16 data16 add ah,cl
   140014385:	cwd    
   140014387:	add    ah,cl
   140014389:	data16 int3 
   14001438b:	add    BYTE PTR [rcx-0x33ff009a],bl
   140014391:	cdq    
   140014392:	add    BYTE PTR [rax],al
   140014394:	int3   
   140014395:	cdq    
   140014396:	xor    eax,DWORD PTR [rax]
   140014398:	int3   
   140014399:	cdq    
   14001439a:	data16 add ah,cl
   14001439d:	cdq    
   14001439e:	cdq    
   14001439f:	add    ah,cl
   1400143a1:	cdq    
   1400143a2:	int3   
   1400143a3:	add    ah,cl
   1400143a5:	cdq    
   1400143a6:	inc    DWORD PTR [rax]
   1400143a8:	int3   
   1400143a9:	int3   
   1400143aa:	add    BYTE PTR [rax],al
   1400143ac:	int3   
   1400143ad:	int3   
   1400143ae:	xor    eax,DWORD PTR [rax]
   1400143b0:	int3   
   1400143b1:	int3   
   1400143b2:	data16 add ah,cl
   1400143b5:	int3   
   1400143b6:	cdq    
   1400143b7:	add    ah,cl
   1400143b9:	int3   
   1400143ba:	int3   
   1400143bb:	add    ah,cl
   1400143bd:	int3   
   1400143be:	inc    DWORD PTR [rax]
   1400143c0:	int3   
   1400143c1:	inc    DWORD PTR [rax]
   1400143c3:	add    ah,cl
   1400143c5:	push   QWORD PTR [rbx]
   1400143c7:	add    BYTE PTR [rcx-0x33ff9901],bl
   1400143cd:	call   FWORD PTR [rcx-0x33003400]
   1400143d3:	add    ah,cl
   1400143d5:	(bad)  
   1400143d6:	inc    DWORD PTR [rax]
   1400143d8:	int3   
   1400143d9:	add    BYTE PTR [rbx],dh
   1400143db:	add    bh,bh
   1400143dd:	add    BYTE PTR [rsi+0x0],ah
   1400143e0:	inc    DWORD PTR [rax]
   1400143e2:	cdq    
   1400143e3:	add    ah,cl
   1400143e5:	xor    eax,DWORD PTR [rax]
   1400143e7:	add    bh,bh
   1400143e9:	xor    esi,DWORD PTR [rbx]
   1400143eb:	add    bh,bh
   1400143ed:	xor    esp,DWORD PTR [rsi+0x0]
   1400143f0:	push   QWORD PTR [rbx]
   1400143f2:	cdq    
   1400143f3:	add    bh,bh
   1400143f5:	xor    ecx,esp
   1400143f7:	add    bh,bh
   1400143f9:	xor    edi,edi
   1400143fb:	add    bh,bh
   1400143fd:	data16 add BYTE PTR [rax],al
   140014400:	jmp    QWORD PTR [rsi+0x33]
   140014403:	add    ah,cl
   140014405:	data16 data16 add bh,bh
   140014409:	cwd    
   14001440b:	add    bh,bh
   14001440d:	data16 int3 
   14001440f:	add    ah,cl
   140014411:	inc    WORD PTR [rax]
   140014414:	call   FWORD PTR [rcx-0x66010000]
   14001441a:	xor    eax,DWORD PTR [rax]
   14001441c:	call   FWORD PTR [rcx-0x6600ff9a]
   140014422:	cdq    
   140014423:	add    bh,bh
   140014425:	cdq    
   140014426:	int3   
   140014427:	add    bh,bh
   140014429:	cdq    
   14001442a:	inc    DWORD PTR [rax]
   14001442c:	dec    esp
   14001442e:	add    BYTE PTR [rax],al
   140014430:	dec    esp
   140014432:	xor    eax,DWORD PTR [rax]
   140014434:	dec    esp
   140014436:	data16 add bh,bh
   140014439:	int3   
   14001443a:	cdq    
   14001443b:	add    bh,bh
   14001443d:	int3   
   14001443e:	int3   
   14001443f:	add    bh,bh
   140014441:	int3   
   140014442:	inc    DWORD PTR [rax]
   140014444:	(bad)  
   140014445:	push   QWORD PTR [rbx]
   140014447:	add    ah,cl
   140014449:	jmp    QWORD PTR [rsi+0x0]
   14001444c:	(bad)  
   14001444d:	call   FWORD PTR [rcx-0x33000100]
   140014453:	add    BYTE PTR [rsi+0x66],ah
   140014456:	inc    DWORD PTR [rax]
   140014458:	jmp    WORD PTR [rsi+0x0]
   14001445c:	data16 (bad) 
   14001445e:	inc    DWORD PTR [rax]
   140014460:	jmp    QWORD PTR [rsi+0x66]
   140014463:	add    bh,bh
   140014465:	inc    WORD PTR [rax]
   140014468:	(bad)  
   140014469:	jmp    QWORD PTR [rsi+0x0]
   14001446c:	and    DWORD PTR [rax],eax
   14001446e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001446f:	add    BYTE PTR [rdi+0x5f],bl
   140014472:	pop    rdi
   140014473:	add    BYTE PTR [rdi+0x77],dh
   140014476:	ja     0x140014478
   140014478:	xchg   BYTE PTR [rsi-0x6969ff7a],al
   14001447e:	xchg   esi,eax
   14001447f:	add    bl,cl
   140014481:	retf   
   140014482:	retf   
   140014483:	add    BYTE PTR [rdx-0x28ff4d4e],dh
   140014489:	xlat   BYTE PTR ds:[rbx]
   14001448a:	xlat   BYTE PTR ds:[rbx]
   14001448b:	add    ch,bl
   14001448d:	fstp   st(5)
   14001448f:	add    bl,ah
   140014491:	jrcxz  0x140014476
   140014493:	add    dl,ch
   140014495:	(bad)  
   140014496:	(bad)  
   140014497:	add    cl,dh
   140014499:	icebp  
   14001449a:	icebp  
   14001449b:	add    al,bh
   14001449d:	clc    
   14001449e:	clc    
   14001449f:	add    al,dh
   1400144a1:	sti    
   1400144a2:	inc    DWORD PTR [rax]
   1400144a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400144a5:	movabs al,ds:0x80808000a0
   1400144ae:	inc    DWORD PTR [rax]
   1400144b0:	add    bh,bh
   1400144b2:	add    BYTE PTR [rax],al
   1400144b4:	add    bh,bh
   1400144b6:	inc    DWORD PTR [rax]
   1400144b8:	inc    DWORD PTR [rax]
   1400144ba:	add    BYTE PTR [rax],al
   1400144bc:	inc    DWORD PTR [rax]
   1400144be:	inc    DWORD PTR [rax]
   1400144c0:	(bad)  
   1400144c1:	inc    DWORD PTR [rax]
   1400144c3:	add    bh,bh
   1400144c5:	(bad)  
   1400144c6:	inc    DWORD PTR [rax]
   1400144c8:	or     cl,BYTE PTR [rdx]
   1400144ca:	or     cl,BYTE PTR [rdx]
   1400144cc:	or     cl,BYTE PTR [rdx]
   1400144ce:	or     cl,BYTE PTR [rdx]
   1400144d0:	or     cl,BYTE PTR [rdx]
   1400144d2:	or     cl,BYTE PTR [rdx]
   1400144d4:	or     cl,BYTE PTR [rdx]
   1400144d6:	or     cl,BYTE PTR [rdx]
   1400144d8:	or     cl,BYTE PTR [rdx]
   1400144da:	or     cl,BYTE PTR [rdx]
   1400144dc:	or     cl,BYTE PTR [rdx]
   1400144de:	or     cl,BYTE PTR [rdx]
   1400144e0:	or     cl,BYTE PTR [rdx]
   1400144e2:	or     cl,BYTE PTR [rdx]
   1400144e4:	or     cl,BYTE PTR [rdx]
   1400144e6:	or     cl,BYTE PTR [rdx]
   1400144e8:	or     cl,BYTE PTR [rdx]
   1400144ea:	or     cl,BYTE PTR [rdx]
   1400144ec:	or     cl,BYTE PTR [rdx]
   1400144ee:	or     cl,BYTE PTR [rdx]
   1400144f0:	or     cl,BYTE PTR [rsi]
   1400144f2:	(bad)  
   1400144f3:	cmp    al,0xe
   1400144f5:	cmp    al,0xe
   1400144f7:	cmp    al,0xe
   1400144f9:	cmp    al,0xe
   1400144fb:	cmp    al,0xe
   1400144fd:	cmp    al,0xe
   1400144ff:	cmp    al,0xc
   140014501:	or     al,0xa
   140014503:	or     cl,BYTE PTR [rdx]
   140014505:	or     cl,BYTE PTR [rdx]
   140014507:	or     cl,BYTE PTR [rdx]
   140014509:	or     cl,BYTE PTR [rdx]
   14001450b:	or     cl,BYTE PTR [rdx]
   14001450d:	or     cl,BYTE PTR [rdx]
   14001450f:	or     cl,BYTE PTR [rdi]
   140014511:	data16 adc BYTE PTR [rax],dl
   140014514:	adc    BYTE PTR [rax],dl
   140014516:	adc    BYTE PTR [rax],dl
   140014518:	adc    BYTE PTR [rax],dl
   14001451a:	adc    BYTE PTR [rax],dl
   14001451c:	adc    BYTE PTR [rax],dl
   14001451e:	adc    BYTE PTR [rax],dl
   140014520:	xchg   BYTE PTR [rdi+0xa],bl
   140014523:	or     cl,BYTE PTR [rdx]
   140014525:	or     cl,BYTE PTR [rdx]
   140014527:	or     cl,BYTE PTR [rdx]
   140014529:	or     cl,BYTE PTR [rdx]
   14001452b:	or     cl,BYTE PTR [rdx]
   14001452d:	or     cl,BYTE PTR [rdx]
   14001452f:	or     dl,BYTE PTR [rax]
   140014531:	(bad)  
   140014532:	or     bh,al
   140014534:	clc    
   140014535:	clc    
   140014536:	clc    
   140014537:	clc    
   140014538:	clc    
   140014539:	clc    
   14001453a:	clc    
   14001453b:	clc    
   14001453c:	clc    
   14001453d:	clc    
   14001453e:	clc    
   14001453f:	clc    
   140014540:	or     ah,BYTE PTR [rsi+0xa]
   140014543:	or     cl,BYTE PTR [rdx]
   140014545:	or     cl,BYTE PTR [rdx]
   140014547:	or     cl,BYTE PTR [rdx]
   140014549:	or     cl,BYTE PTR [rdx]
   14001454b:	or     cl,BYTE PTR [rdx]
   14001454d:	or     cl,BYTE PTR [rdx]
   14001454f:	or     cl,BYTE PTR [rdx]
   140014551:	data16 or bl,ch
   140014554:	(bad)  
   140014556:	hlt    
   140014557:	(bad)  
   140014558:	(bad)  
   140014559:	(bad)  
   14001455a:	(bad)  
   14001455b:	(bad)  
   14001455c:	(bad)  
   14001455d:	(bad)  
   14001455e:	push   rsp
   140014560:	or     ah,BYTE PTR [rsi+0xa]
   140014563:	or     cl,BYTE PTR [rdx]
   140014565:	or     cl,BYTE PTR [rdx]
   140014567:	or     cl,BYTE PTR [rdx]
   140014569:	or     cl,BYTE PTR [rdx]
   14001456b:	or     cl,BYTE PTR [rdx]
   14001456d:	or     cl,BYTE PTR [rdx]
   14001456f:	or     ah,BYTE PTR [rsi+0x66]
   140014572:	or     bl,ch
   140014574:	(bad)  
   140014576:	hlt    
   140014577:	(bad)  
   140014578:	(bad)  
   140014579:	(bad)  
   14001457a:	(bad)  
   14001457b:	(bad)  
   14001457c:	(bad)  
   14001457d:	(bad)  
   14001457e:	push   rsp
   140014580:	or     ah,BYTE PTR [rsi+0xa]
   140014583:	or     cl,BYTE PTR [rdx]
   140014585:	or     cl,BYTE PTR [rdx]
   140014587:	or     cl,BYTE PTR [rdx]
   140014589:	or     cl,BYTE PTR [rdx]
   14001458b:	or     cl,BYTE PTR [rdx]
   14001458d:	or     cl,BYTE PTR [rdx]
   14001458f:	or     ah,BYTE PTR [rsi+0xa]
   140014592:	scas   al,BYTE PTR es:[rdi]
   140014593:	fstp   st(5)
   140014595:	repz hlt 
   140014597:	(bad)  
   140014598:	(bad)  
   140014599:	(bad)  
   14001459a:	(bad)  
   14001459b:	(bad)  
   14001459c:	(bad)  
   14001459d:	(bad)  
   14001459e:	push   rsp
   1400145a0:	or     ah,BYTE PTR [rsi+0xa]
   1400145a3:	or     cl,BYTE PTR [rdx]
   1400145a5:	or     cl,BYTE PTR [rdx]
   1400145a7:	or     cl,BYTE PTR [rdx]
   1400145a9:	or     cl,BYTE PTR [rdx]
   1400145ab:	or     cl,BYTE PTR [rdx]
   1400145ad:	or     cl,BYTE PTR [rdx]
   1400145af:	data16 data16 or ch,BYTE PTR [rsi-0xb0c2223]
   1400145b7:	(bad)  
   1400145b8:	(bad)  
   1400145b9:	(bad)  
   1400145ba:	(bad)  
   1400145bb:	(bad)  
   1400145bc:	(bad)  
   1400145bd:	(bad)  
   1400145be:	push   rsp
   1400145c0:	or     ah,BYTE PTR [rsi+0xa]
   1400145c3:	or     cl,BYTE PTR [rdx]
   1400145c5:	or     cl,BYTE PTR [rdx]
   1400145c7:	or     cl,BYTE PTR [rdx]
   1400145c9:	or     cl,BYTE PTR [rdx]
   1400145cb:	or     cl,BYTE PTR [rdx]
   1400145cd:	or     dl,BYTE PTR [rax]
   1400145cf:	data16 or bl,ch
   1400145d2:	scas   al,BYTE PTR es:[rdi]
   1400145d3:	fstp   st(5)
   1400145d5:	repz hlt 
   1400145d7:	(bad)  
   1400145d8:	(bad)  
   1400145d9:	(bad)  
   1400145da:	(bad)  
   1400145db:	(bad)  
   1400145dc:	(bad)  
   1400145dd:	(bad)  
   1400145de:	push   rsp
   1400145e0:	or     ah,BYTE PTR [rsi+0xa]
   1400145e3:	or     cl,BYTE PTR [rdx]
   1400145e5:	or     cl,BYTE PTR [rdx]
   1400145e7:	or     cl,BYTE PTR [rdx]
   1400145e9:	or     cl,BYTE PTR [rdx]
   1400145eb:	or     cl,BYTE PTR [rdx]
   1400145ed:	adc    BYTE PTR [rsi+0xa],ah
   1400145f0:	fstp   st(5)
   1400145f2:	scas   al,BYTE PTR es:[rdi]
   1400145f3:	fstp   st(5)
   1400145f5:	repz hlt 
   1400145f7:	(bad)  
   1400145f8:	(bad)  
   1400145f9:	(bad)  
   1400145fa:	(bad)  
   1400145fb:	(bad)  
   1400145fc:	(bad)  
   1400145fd:	(bad)  
   1400145fe:	push   rsp
   140014600:	or     ah,BYTE PTR [rsi+0xa]
   140014603:	or     cl,BYTE PTR [rdx]
   140014605:	or     cl,BYTE PTR [rdx]
   140014607:	or     cl,BYTE PTR [rdx]
   140014609:	or     cl,BYTE PTR [rdx]
   14001460b:	pcmpgtd mm4,QWORD PTR [rsi+0xa]
   14001460f:	repz fstp st(5)
   140014612:	scas   al,BYTE PTR es:[rdi]
   140014613:	fstp   st(5)
   140014615:	repz hlt 
   140014617:	(bad)  
   140014618:	(bad)  
   140014619:	(bad)  
   14001461a:	(bad)  
   14001461b:	(bad)  
   14001461c:	(bad)  
   14001461d:	(bad)  
   14001461e:	push   rsp
   140014620:	or     ah,BYTE PTR [rsi+0xa]
   140014623:	or     cl,BYTE PTR [rdx]
   140014625:	or     cl,BYTE PTR [rdx]
   140014627:	or     cl,BYTE PTR [rdx]
   140014629:	data16 data16 data16 or cl,BYTE PTR [rdx]
   14001462e:	hlt    
   14001462f:	repz fstp st(5)
   140014632:	scas   al,BYTE PTR es:[rdi]
   140014633:	fstp   st(5)
   140014635:	repz hlt 
   140014637:	(bad)  
   140014638:	(bad)  
   140014639:	(bad)  
   14001463a:	(bad)  
   14001463b:	(bad)  
   14001463c:	(bad)  
   14001463d:	(bad)  
   14001463e:	push   rsp
   140014640:	or     ah,BYTE PTR [rsi+0xa]
   140014643:	or     cl,BYTE PTR [rdx]
   140014645:	or     cl,BYTE PTR [rdx]
   140014647:	or     cl,BYTE PTR [rdi]
   140014649:	scas   al,BYTE PTR es:[rdi]
   14001464a:	or     cl,BYTE PTR [rdx]
   14001464c:	(bad)  
   14001464d:	push   rsp
   14001464f:	repz fstp st(5)
   140014652:	scas   al,BYTE PTR es:[rdi]
   140014653:	fstp   st(5)
   140014655:	repz hlt 
   140014657:	(bad)  
   140014658:	(bad)  
   140014659:	(bad)  
   14001465a:	(bad)  
   14001465b:	(bad)  
   14001465c:	(bad)  
   14001465d:	(bad)  
   14001465e:	push   rsp
   140014660:	or     ah,BYTE PTR [rsi+0xa]
   140014663:	or     cl,BYTE PTR [rdx]
   140014665:	or     cl,BYTE PTR [rdx]
   140014667:	or     dl,BYTE PTR [rsp+rbp*8]
   14001466a:	or     bh,bh
   14001466c:	(bad)  
   14001466d:	push   rsp
   14001466f:	repz fstp st(5)
   140014672:	scas   al,BYTE PTR es:[rdi]
   140014673:	fstp   st(5)
   140014675:	repz hlt 
   140014677:	(bad)  
   140014678:	push   rsp
   14001467a:	repz icebp 
   14001467c:	icebp  
   14001467d:	icebp  
   14001467e:	icebp  
   14001467f:	icebp  
   140014680:	or     ah,BYTE PTR [rsi+0xa]
   140014683:	or     cl,BYTE PTR [rdx]
   140014685:	or     cl,BYTE PTR [rdx]
   140014687:	or     al,BYTE PTR [rbx-0x14]
   14001468a:	or     bh,bh
   14001468c:	(bad)  
   14001468d:	push   rsp
   14001468f:	repz fstp st(5)
   140014692:	scas   al,BYTE PTR es:[rdi]
   140014693:	fstp   st(5)
   140014695:	repz hlt 
   140014697:	(bad)  
   140014698:	push   rbx
   14001469a:	out    dx,eax
   14001469b:	in     eax,dx
   14001469c:	in     al,dx
   14001469d:	in     al,dx
   14001469e:	in     al,dx
   14001469f:	clc    
   1400146a0:	or     ah,BYTE PTR [rsi+0xa]
   1400146a3:	or     cl,BYTE PTR [rdx]
   1400146a5:	or     cl,BYTE PTR [rdx]
   1400146a7:	or     al,BYTE PTR [rbx-0x14]
   1400146aa:	or     bh,bh
   1400146ac:	(bad)  
   1400146ad:	push   rsp
   1400146af:	repz fstp st(5)
   1400146b2:	scas   al,BYTE PTR es:[rdi]
   1400146b3:	fstp   st(5)
   1400146b5:	repz hlt 
   1400146b7:	(bad)  
   1400146b8:	push   rsp
   1400146ba:	repz mov esp,0x6d6d6ded
   1400146c0:	or     ah,BYTE PTR [rsi+0xa]
   1400146c3:	or     cl,BYTE PTR [rdx]
   1400146c5:	or     cl,BYTE PTR [rdx]
   1400146c7:	or     dl,BYTE PTR [rsp+rbp*8]
   1400146ca:	or     bh,bh
   1400146cc:	(bad)  
   1400146cd:	push   rsp
   1400146cf:	repz fstp st(5)
   1400146d2:	scas   al,BYTE PTR es:[rdi]
   1400146d3:	fstp   st(5)
   1400146d5:	repz hlt 
   1400146d7:	dec    DWORD PTR [rdx]
   1400146d9:	or     cl,BYTE PTR [rdx]
   1400146db:	or     cl,BYTE PTR [rdx]
   1400146dd:	or     cl,BYTE PTR [rdx]
   1400146df:	or     cl,BYTE PTR [rdx]
   1400146e1:	or     cl,BYTE PTR [rdx]
   1400146e3:	or     cl,BYTE PTR [rdx]
   1400146e5:	or     cl,BYTE PTR [rdx]
   1400146e7:	or     dl,BYTE PTR [rsp+rbp*8]
   1400146ea:	or     bh,bh
   1400146ec:	(bad)  
   1400146ed:	push   rsp
   1400146ef:	repz fstp st(5)
   1400146f2:	scas   al,BYTE PTR es:[rdi]
   1400146f3:	fstp   st(5)
   1400146f5:	repz hlt 
   1400146f7:	or     dh,BYTE PTR [rax]
   1400146f9:	(bad)  
   1400146fa:	sti    
   1400146fb:	xor    BYTE PTR [rdx],ch
   1400146fd:	sub    ah,BYTE PTR [rbx]
   1400146ff:	and    ebp,DWORD PTR [rdx]
   140014701:	sub    cl,BYTE PTR [rdx]
   140014703:	or     cl,BYTE PTR [rdx]
   140014705:	or     cl,BYTE PTR [rdx]
   140014707:	or     al,BYTE PTR [rbx-0x14]
   14001470a:	or     bh,bh
   14001470c:	(bad)  
   14001470d:	push   rsp
   14001470f:	repz fstp st(5)
   140014712:	scas   al,BYTE PTR es:[rdi]
   140014713:	fstp   st(5)
   140014715:	repz hlt 
   140014717:	dec    DWORD PTR [rdx]
   140014719:	or     dh,BYTE PTR [rdi]
   14001471b:	sti    
   14001471c:	(bad)  
   14001471d:	(bad)  
   14001471e:	xor    DWORD PTR [rcx],esi
   140014720:	or     cl,BYTE PTR [rdx]
   140014722:	or     cl,BYTE PTR [rdx]
   140014724:	or     cl,BYTE PTR [rdx]
   140014726:	or     cl,BYTE PTR [rdx]
   140014728:	rex.XB in al,dx
   14001472a:	or     bh,bh
   14001472c:	(bad)  
   14001472d:	push   rsp
   14001472f:	repz fstp st(5)
   140014732:	scas   al,BYTE PTR es:[rdi]
   140014733:	fstp   st(5)
   140014735:	repz hlt 
   140014737:	hlt    
   140014738:	repz mov esp,0x37fb370a
   14001473e:	add    ecx,DWORD PTR [rdx]
   140014740:	or     ah,BYTE PTR [rsi+0xa]
   140014743:	or     cl,BYTE PTR [rdx]
   140014745:	or     cl,BYTE PTR [rdx]
   140014747:	or     al,BYTE PTR [rbx-0x4b]
   14001474a:	or     bh,bh
   14001474c:	(bad)  
   14001474d:	push   rsp
   14001474f:	repz fstp st(5)
   140014752:	scas   al,BYTE PTR es:[rdi]
   140014753:	fstp   st(5)
   140014755:	(bad)  
   140014757:	mov    esp,0xa6df8ed
   14001475c:	(bad)  
   14001475d:	and    ecx,DWORD PTR [rdx]
   14001475f:	ins    DWORD PTR es:[rdi],dx
   140014760:	or     dh,BYTE PTR [rbp+0xa0a0a0a]
   140014766:	or     cl,BYTE PTR [rdx]
   140014768:	adc    al,0xec
   14001476a:	or     bh,bh
   14001476c:	(bad)  
   14001476d:	push   rsp
   14001476f:	repz fstp st(5)
   140014772:	scas   al,BYTE PTR es:[rdi]
   140014773:	fld    QWORD PTR [rdi]
   140014775:	in     al,dx
   140014776:	clc    
   140014777:	clc    
   140014778:	or     cl,BYTE PTR [rdx]
   14001477a:	or     dh,BYTE PTR [rdi]
   14001477c:	add    ebp,DWORD PTR [rdx]
   14001477e:	sub    DWORD PTR [rdx],ecx
   140014780:	or     cl,BYTE PTR [rdx]
   140014782:	or     cl,BYTE PTR [rdx]
   140014784:	or     cl,BYTE PTR [rdx]
   140014786:	or     cl,BYTE PTR [rdx]
   140014788:	rex.XB mov r13b,0xa
   14001478b:	(bad)  
   14001478c:	(bad)  
   14001478d:	push   rsp
   14001478f:	repz fstp QWORD PTR [rcx]
   140014792:	in     eax,dx
   140014793:	in     eax,dx
   140014794:	in     al,dx
   140014795:	ins    DWORD PTR es:[rdi],dx
   140014796:	or     cl,BYTE PTR [rdx]
   140014798:	sub    dh,BYTE PTR [rax]
   14001479a:	(bad)  
   14001479b:	sti    
   14001479c:	(bad)  
   14001479d:	(bad)  
   14001479e:	xor    BYTE PTR [rcx],dh
   1400147a0:	sub    cl,BYTE PTR [rdx]
   1400147a2:	and    esp,DWORD PTR [rbx]
   1400147a4:	and    eax,DWORD PTR [rbx]
   1400147a6:	or     cl,BYTE PTR [rdx]
   1400147a8:	rex.XB in al,dx
   1400147aa:	or     bh,bh
   1400147ac:	(bad)  
   1400147ad:	push   rsp
   1400147af:	repz fstp QWORD PTR [rcx]
   1400147b2:	ins    DWORD PTR es:[rdi],dx
   1400147b3:	in     al,dx
   1400147b4:	or     cl,BYTE PTR [rdx]
   1400147b6:	sub    dh,BYTE PTR [rax]
   1400147b8:	(bad)  
   1400147b9:	(bad)  
   1400147ba:	sti    
   1400147bb:	sti    
   1400147bc:	sti    
   1400147bd:	sti    
   1400147be:	(bad)  
   1400147bf:	add    esi,DWORD PTR [rdi]
   1400147c1:	xor    BYTE PTR [rbx],ah
   1400147c3:	or     cl,BYTE PTR [rdx]
   1400147c5:	and    eax,DWORD PTR [rbx]
   1400147c7:	or     dl,BYTE PTR [rsi*4-0xf6]
   1400147ce:	hlt    
   1400147cf:	repz or cl,BYTE PTR [rdx]
   1400147d2:	or     cl,BYTE PTR [rdx]
   1400147d4:	sub    ch,BYTE PTR [rdx]
   1400147d6:	xor    BYTE PTR [rdi],dh
   1400147d8:	sti    
   1400147d9:	sti    
   1400147da:	sti    
   1400147db:	sti    
   1400147dc:	sti    
   1400147dd:	sti    
   1400147de:	sti    
   1400147df:	(bad)  
   1400147e0:	xor    BYTE PTR [rdi],dh
   1400147e2:	or     cl,BYTE PTR [rdx]
   1400147e4:	or     cl,BYTE PTR [rdx]
   1400147e6:	and    ecx,DWORD PTR [rdx]
   1400147e8:	rex.XB mov r13b,0xa
   1400147eb:	(bad)  
   1400147ec:	(bad)  
   1400147ed:	push   rsp
   1400147ef:	or     bl,bl
   1400147f1:	fild   DWORD PTR [rbx]
   1400147f3:	xor    BYTE PTR [rdi],dh
   1400147f5:	(bad)  
   1400147f6:	sti    
   1400147f7:	sti    
   1400147f8:	(bad)  
   1400147f9:	(bad)  
   1400147fa:	sti    
   1400147fb:	sti    
   1400147fc:	sti    
   1400147fd:	sti    
   1400147fe:	sti    
   1400147ff:	xor    BYTE PTR [rdi],dh
   140014801:	xor    BYTE PTR [rdi],dh
   140014803:	or     cl,BYTE PTR [rdx]
   140014805:	or     ah,BYTE PTR [rbx]
   140014807:	or     al,BYTE PTR [rbx-0x4b]
   14001480a:	or     bh,bh
   14001480c:	(bad)  
   14001480d:	dec    DWORD PTR [rdx]
   14001480f:	(bad)  
   140014811:	or     cl,BYTE PTR [rdx]
   140014813:	or     cl,BYTE PTR [rdx]
   140014815:	or     cl,BYTE PTR [rdx]
   140014817:	or     bh,bl
   140014819:	sub    DWORD PTR [rbx],esp
   14001481b:	and    esp,DWORD PTR [rbx]
   14001481d:	and    esp,DWORD PTR [rbx]
   14001481f:	and    esp,DWORD PTR [rbx]
   140014821:	(bad)  
   140014822:	or     bh,bl
   140014824:	or     cl,BYTE PTR [rdx]
   140014826:	add    eax,DWORD PTR [rcx]
   140014828:	rex.XB (bad) 
   14001482a:	or     bh,bh
   14001482c:	dec    DWORD PTR [rdx]
   14001482e:	sbb    DWORD PTR [rcx],ebx
   140014830:	sbb    esp,ebx
   140014832:	fmul   QWORD PTR [rdx]
   140014834:	or     cl,BYTE PTR [rdx]
   140014836:	or     cl,BYTE PTR [rdx]
   140014838:	and    edi,ebx
   14001483a:	sti    
   14001483b:	sti    
   14001483c:	(bad)  
   14001483d:	(bad)  
   14001483e:	sub    DWORD PTR [rcx],ebp
   140014840:	xor    BYTE PTR [rdx],cl
   140014842:	or     bh,al
   140014844:	sti    
   140014845:	add    eax,DWORD PTR [rbx]
   140014847:	add    DWORD PTR [rbx-0x44],eax
   14001484a:	or     bh,bh
   14001484c:	or     bl,BYTE PTR [rcx]
   14001484e:	sbb    ebx,esi
   140014850:	sbb    DWORD PTR [rcx],ebx
   140014852:	(bad)  
   140014854:	or     cl,BYTE PTR [rdx]
   140014856:	or     cl,BYTE PTR [rdx]
   140014858:	or     ah,BYTE PTR [rbx]
   14001485a:	and    edi,ebx
   14001485c:	sti    
   14001485d:	(bad)  
   14001485e:	sub    DWORD PTR [rdx],ecx
   140014860:	or     cl,BYTE PTR [rdx]
   140014862:	or     cl,BYTE PTR [rdx]
   140014864:	clc    
   140014865:	add    DWORD PTR [rcx],eax
   140014867:	or     ch,BYTE PTR [rbp-0xd]
   14001486a:	rex.XB dec DWORD PTR [r10]
   14001486d:	sbb    ebx,esi
   14001486f:	push   rbx
   140014871:	sbb    DWORD PTR [rcx],ebx
   140014873:	fmul   QWORD PTR [rdx]
   140014875:	or     cl,BYTE PTR [rdx]
   140014877:	or     cl,BYTE PTR [rdx]
   140014879:	or     cl,BYTE PTR [rdx]
   14001487b:	and    esi,DWORD PTR [rdi]
   14001487d:	sub    cl,BYTE PTR [rdx]
   14001487f:	or     cl,BYTE PTR [rdx]
   140014881:	or     cl,BYTE PTR [rdx]
   140014883:	or     cl,BYTE PTR [rdx]
   140014885:	or     cl,BYTE PTR [rdx]
   140014887:	or     dh,bh
   140014889:	out    dx,eax
   14001488a:	in     eax,dx
   14001488b:	dec    DWORD PTR [rdx]
   14001488d:	or     bl,BYTE PTR [rcx]
   14001488f:	repz sbb DWORD PTR [rcx],ebx
   140014892:	sbb    DWORD PTR [rdx],ecx
   140014894:	or     cl,BYTE PTR [rdx]
   140014896:	or     cl,BYTE PTR [rdx]
   140014898:	or     cl,BYTE PTR [rdx]
   14001489a:	or     cl,BYTE PTR [rdx]
   14001489c:	or     cl,BYTE PTR [rdx]
   14001489e:	or     cl,BYTE PTR [rdx]
   1400148a0:	or     cl,BYTE PTR [rdx]
   1400148a2:	or     cl,BYTE PTR [rdx]
   1400148a4:	or     cl,BYTE PTR [rdx]
   1400148a6:	or     cl,BYTE PTR [rdx]
   1400148a8:	or     cl,BYTE PTR [rdx]
   1400148aa:	out    dx,eax
   1400148ab:	jmp    0x1400148b7
   1400148ad:	or     cl,BYTE PTR [rdx]
   1400148af:	or     cl,BYTE PTR [rdx]
   1400148b1:	or     cl,BYTE PTR [rdx]
   1400148b3:	or     cl,BYTE PTR [rdx]
   1400148b5:	or     cl,BYTE PTR [rdx]
   1400148b7:	or     cl,BYTE PTR [rdx]
   1400148b9:	or     cl,BYTE PTR [rdx]
   1400148bb:	or     cl,BYTE PTR [rdx]
   1400148bd:	or     cl,BYTE PTR [rdx]
   1400148bf:	or     cl,BYTE PTR [rdx]
   1400148c1:	or     cl,BYTE PTR [rdx]
   1400148c3:	or     cl,BYTE PTR [rdx]
   1400148c5:	or     cl,BYTE PTR [rdx]
   1400148c7:	or     bh,bh
   1400148c9:	add    BYTE PTR [rax],0x3f
   1400148cc:	inc    DWORD PTR [rax]
   1400148ce:	add    BYTE PTR [rdi],bl
   1400148d0:	inc    DWORD PTR [rax]
   1400148d2:	add    BYTE PTR [rdi],bl
   1400148d4:	inc    DWORD PTR [rax]
   1400148d6:	add    BYTE PTR [rdi],bl
   1400148d8:	inc    DWORD PTR [rax]
   1400148da:	add    BYTE PTR [rdi],bl
   1400148dc:	inc    BYTE PTR [rax]
   1400148de:	add    BYTE PTR [rdi],bl
   1400148e0:	inc    BYTE PTR [rax]
   1400148e2:	add    BYTE PTR [rdi],bl
   1400148e4:	cld    
   1400148e5:	add    BYTE PTR [rax],al
   1400148e7:	(bad)  
   1400148e8:	clc    
   1400148e9:	add    BYTE PTR [rax],al
   1400148eb:	(bad)  
   1400148ec:	loopne 0x1400148ee
   1400148ee:	add    BYTE PTR [rdi],bl
   1400148f0:	add    BYTE PTR [rax],0x0
   1400148f3:	(bad)  
   1400148f4:	add    BYTE PTR [rax],al
   1400148f6:	add    BYTE PTR [rdi],bl
   1400148f8:	add    BYTE PTR [rax],al
   1400148fa:	add    BYTE PTR [rdi],bl
   1400148fc:	add    BYTE PTR [rax],al
   1400148fe:	add    BYTE PTR [rdi],bl
   140014900:	add    BYTE PTR [rax],al
   140014902:	add    BYTE PTR [rdi],bl
   140014904:	add    BYTE PTR [rax],al
   140014906:	add    BYTE PTR [rdi],bl
   140014908:	add    BYTE PTR [rax],al
   14001490a:	add    BYTE PTR [rdi],bl
   14001490c:	add    BYTE PTR [rax],al
   14001490e:	add    BYTE PTR [rdi],bl
   140014910:	add    BYTE PTR [rax],al
   140014912:	add    BYTE PTR [rdi],bl
   140014914:	add    BYTE PTR [rax],al
   140014916:	add    BYTE PTR [rdi],bl
   140014918:	add    BYTE PTR [rax],al
   14001491a:	add    BYTE PTR [rdi],bl
   14001491c:	add    BYTE PTR [rax],al
   14001491e:	add    BYTE PTR [rbx],al
   140014920:	add    BYTE PTR [rax],al
   140014922:	add    BYTE PTR [rcx],al
   140014924:	add    BYTE PTR [rax],al
   140014926:	add    BYTE PTR [rax],al
   140014928:	add    BYTE PTR [rax],al
   14001492a:	add    BYTE PTR [rax],bl
   14001492c:	add    BYTE PTR [rax],al
   14001492e:	add    BYTE PTR [rax],cl
   140014930:	add    BYTE PTR [rax],al
   140014932:	add    BYTE PTR [rax],al
   140014934:	add    BYTE PTR [rdi],cl
   140014936:	add    BYTE PTR [rax],ah
   140014938:	add    BYTE PTR [rdi],al
   14001493a:	xor    BYTE PTR [rcx+0x0],0x7
   14001493e:	loope  0x14001493f
   140014940:	add    BYTE PTR [rdi],cl
   140014942:	repz dec esp
   140014945:	(bad)  
   140014946:	(bad)  
   140014947:	jmp    FWORD PTR [rax]
   140014949:	add    BYTE PTR [rax],al
   14001494b:	add    BYTE PTR [rax],dl
   14001494d:	add    BYTE PTR [rax],al
   14001494f:	add    BYTE PTR [rax],ah
   140014951:	add    BYTE PTR [rax],al
   140014953:	add    BYTE PTR [rcx],al
   140014955:	add    BYTE PTR [rax+rax*1],al
   140014958:	add    BYTE PTR [rax],al
   14001495a:	add    BYTE PTR [rax],al
   14001495c:	rol    BYTE PTR [rax],0x0
	...
   140014973:	add    BYTE PTR [rax],al
   140014975:	add    BYTE PTR [rax+0x800000],al
   14001497b:	add    BYTE PTR [rax],al
   14001497d:	add    BYTE PTR [rax+0x8000],0x0
   140014984:	add    BYTE PTR [rax],0x80
   140014987:	add    BYTE PTR [rax-0x3fffff80],al
   14001498d:	rol    al,0x0
   140014990:	add    BYTE PTR [rax+0x80],0xff
   140014997:	add    BYTE PTR [rax],al
   140014999:	inc    DWORD PTR [rax]
   14001499b:	add    BYTE PTR [rax],al
   14001499d:	(bad)  
   14001499e:	inc    DWORD PTR [rax]
   1400149a0:	inc    DWORD PTR [rax]
   1400149a2:	add    BYTE PTR [rax],al
   1400149a4:	inc    DWORD PTR [rax]
   1400149a6:	inc    DWORD PTR [rax]
   1400149a8:	(bad)  
   1400149a9:	inc    DWORD PTR [rax]
   1400149ab:	add    bh,bh
   1400149ad:	(bad)  
   1400149ae:	inc    DWORD PTR [rax]
   1400149b0:	add    BYTE PTR [rax],al
   1400149b2:	rex.R
   1400149b3:	rex.R
   1400149b4:	rex.R
   1400149b5:	rex.R
   1400149b6:	rex.R
   1400149b7:	add    BYTE PTR [rax+rcx*4],al
   1400149bb:	mov    BYTE PTR [rax+0x408888],cl
   1400149c1:	rex.W cmp BYTE PTR [rdi+0x7f],sil
   1400149c5:	push   rdi
   1400149c7:	rex
   1400149c8:	rex.R (bad) 
   1400149ca:	js     0x140014953
   1400149cc:	idiv   edi
   1400149ce:	test   DWORD PTR [rax-0x71],0x7f7738f7
   1400149d5:	push   rdi
   1400149d7:	rex (bad) 
   1400149d9:	jg     0x140014a53
   1400149db:	xchg   edi,esi
   1400149dd:	push   rdi
   1400149df:	rex (bad) 
   1400149e1:	idiv   DWORD PTR [rax]
   1400149e3:	ja     0x140014a64
   1400149e5:	push   rdi
   1400149e7:	rex (bad) 
   1400149e9:	jg     0x140014a63
   1400149eb:	xchg   DWORD PTR [rcx],esi
   1400149ed:	adc    BYTE PTR [rax],al
   1400149ef:	add    BYTE PTR [rdi+0x7f7738f7],cl
   1400149f5:	adc    ebx,DWORD PTR [rax]
   1400149f7:	rex (bad) 
   1400149f9:	jg     0x140014a73
   1400149fb:	xchg   ecx,esi
   1400149fd:	mov    bl,0x31
   1400149ff:	add    BYTE PTR [rdi+0x3b11ccf7],cl
   140014a05:	mov    ebx,0xcc8f3130
   140014a0a:	lock mov ebx,0xb1b3fbbb
   140014a10:	int3   
   140014a11:	(bad)  
   140014a12:	cld    
   140014a13:	adc    BYTE PTR [rax],al
   140014a15:	adc    DWORD PTR [rax],edx
   140014a17:	mov    cl,0xcf
   140014a19:	inc    eax
   140014a1b:	add    BYTE PTR [rax],al
   140014a1d:	mov    ebx,0xffcc0030
   140014a22:	cld    
   140014a23:	add    BYTE PTR [rax],al
   140014a25:	adc    BYTE PTR [rax],al
   140014a27:	add    BYTE PTR [rax],bh
   140014a29:	int3   
   140014a2a:	rol    BYTE PTR [rax],0x0
   140014a2d:	add    BYTE PTR [rax],al
   140014a2f:	add    al,dh
   140014a31:	add    DWORD PTR [rax],eax
   140014a33:	add    al,ah
   140014a35:	add    DWORD PTR [rax],eax
   140014a37:	add    al,al
   140014a39:	add    DWORD PTR [rax],eax
   140014a3b:	add    BYTE PTR [rax],al
   140014a3d:	add    DWORD PTR [rax],eax
   140014a3f:	add    BYTE PTR [rax],al
   140014a41:	add    DWORD PTR [rax],eax
   140014a43:	add    BYTE PTR [rax],al
   140014a45:	add    DWORD PTR [rax],eax
   140014a47:	add    BYTE PTR [rax],al
   140014a49:	add    DWORD PTR [rax],eax
   140014a4b:	add    BYTE PTR [rax],al
   140014a4d:	add    DWORD PTR [rax],eax
   140014a4f:	add    BYTE PTR [rax],al
   140014a51:	add    DWORD PTR [rax],eax
   140014a53:	add    BYTE PTR [rax],al
   140014a55:	add    DWORD PTR [rax],eax
	...
   140014a63:	add    BYTE PTR [rdi],al
   140014a65:	add    DWORD PTR [rax],0xc70300
   140014a6b:	add    BYTE PTR [rdi],al
   140014a6d:	inc    DWORD PTR [rax]
   140014a6f:	add    BYTE PTR [rax],ch
   140014a71:	add    BYTE PTR [rax],al
   140014a73:	add    BYTE PTR [rax],dl
   140014a75:	add    BYTE PTR [rax],al
   140014a77:	add    BYTE PTR [rax],ah
   140014a79:	add    BYTE PTR [rax],al
   140014a7b:	add    BYTE PTR [rcx],al
   140014a7d:	add    BYTE PTR [rax],cl
   140014a7f:	add    BYTE PTR [rax],al
   140014a81:	add    BYTE PTR [rax],al
   140014a83:	add    BYTE PTR [rax+0x1],al
	...
   140014a9e:	add    BYTE PTR [rax],0x0
   140014aa1:	add    BYTE PTR [rax],0x0
   140014aa4:	add    BYTE PTR [rax+0x800080],al
   140014aaa:	add    BYTE PTR [rax],al
   140014aac:	add    BYTE PTR [rax],0x80
   140014aaf:	add    BYTE PTR [rax-0x3fffff80],al
   140014ab5:	rol    al,0x0
   140014ab8:	rcr    ah,0xc0
   140014abb:	add    al,dh
   140014abd:	retf   0xa6
   140014ac0:	add    al,0x4
   140014ac2:	add    al,0x0
   140014ac4:	or     BYTE PTR [rax],cl
   140014ac6:	or     BYTE PTR [rax],al
   140014ac8:	or     al,0xc
   140014aca:	or     al,0x0
   140014acc:	adc    DWORD PTR [rcx],edx
   140014ace:	adc    DWORD PTR [rax],eax
   140014ad0:	(bad)  
   140014ad1:	(bad)  
   140014ad2:	(bad)  
   140014ad3:	add    BYTE PTR [rsp+rbx*1],bl
   140014ad6:	sbb    al,0x0
   140014ad8:	and    ah,BYTE PTR [rdx]
   140014ada:	and    al,BYTE PTR [rax]
   140014adc:	sub    DWORD PTR [rcx],ebp
   140014ade:	sub    DWORD PTR [rax],eax
   140014ae0:	push   rbp
   140014ae1:	push   rbp
   140014ae2:	push   rbp
   140014ae3:	add    BYTE PTR [rbp+0x4d],cl
   140014ae6:	rex.WRB add BYTE PTR [r10+0x42],r8b
   140014aea:	rex.X add BYTE PTR [rcx],dil
   140014aed:	cmp    DWORD PTR [rcx],edi
   140014aef:	add    BYTE PTR [rax+0x5000ff7c],al
   140014af5:	push   rax
   140014af6:	inc    DWORD PTR [rax]
   140014af8:	xchg   ebx,eax
   140014af9:	add    dh,dl
   140014afb:	add    bh,bh
   140014afd:	in     al,dx
   140014afe:	int3   
   140014aff:	add    dh,al
   140014b01:	(bad)  
   140014b02:	out    dx,eax
   140014b03:	add    dh,dl
   140014b05:	out    0xe7,eax
   140014b07:	add    BYTE PTR [rax+0xada9],dl
   140014b0d:	add    BYTE PTR [rbx],dh
   140014b0f:	add    BYTE PTR [rax],al
   140014b11:	add    BYTE PTR [rsi+0x0],ah
   140014b14:	add    BYTE PTR [rax],al
   140014b16:	cdq    
   140014b17:	add    BYTE PTR [rax],al
   140014b19:	add    ah,cl
   140014b1b:	add    BYTE PTR [rax],al
   140014b1d:	xor    eax,DWORD PTR [rax]
   140014b1f:	add    BYTE PTR [rax],al
   140014b21:	xor    esi,DWORD PTR [rbx]
   140014b23:	add    BYTE PTR [rax],al
   140014b25:	xor    esp,DWORD PTR [rsi+0x0]
   140014b28:	add    BYTE PTR [rbx],dh
   140014b2a:	cdq    
   140014b2b:	add    BYTE PTR [rax],al
   140014b2d:	xor    ecx,esp
   140014b2f:	add    BYTE PTR [rax],al
   140014b31:	xor    edi,edi
   140014b33:	add    BYTE PTR [rax],al
   140014b35:	data16 add BYTE PTR [rax],al
   140014b38:	add    BYTE PTR [rsi+0x33],ah
   140014b3b:	add    BYTE PTR [rax],al
   140014b3d:	data16 data16 add BYTE PTR [rax],al
   140014b41:	cwd    
   140014b43:	add    BYTE PTR [rax],al
   140014b45:	data16 int3 
   140014b47:	add    BYTE PTR [rax],al
   140014b49:	inc    WORD PTR [rax]
   140014b4c:	add    BYTE PTR [rcx-0x67000000],bl
   140014b52:	xor    eax,DWORD PTR [rax]
   140014b54:	add    BYTE PTR [rcx-0x66ffff9a],bl
   140014b5a:	cdq    
   140014b5b:	add    BYTE PTR [rax],al
   140014b5d:	cdq    
   140014b5e:	int3   
   140014b5f:	add    BYTE PTR [rax],al
   140014b61:	cdq    
   140014b62:	inc    DWORD PTR [rax]
   140014b64:	add    ah,cl
   140014b66:	add    BYTE PTR [rax],al
   140014b68:	add    ah,cl
   140014b6a:	xor    eax,DWORD PTR [rax]
   140014b6c:	add    ah,cl
   140014b6e:	data16 add BYTE PTR [rax],al
   140014b71:	int3   
   140014b72:	cdq    
   140014b73:	add    BYTE PTR [rax],al
   140014b75:	int3   
   140014b76:	int3   
   140014b77:	add    BYTE PTR [rax],al
   140014b79:	int3   
   140014b7a:	inc    DWORD PTR [rax]
   140014b7c:	add    bh,bh
   140014b7e:	data16 add BYTE PTR [rax],al
   140014b81:	call   FWORD PTR [rcx-0x33010000]
   140014b87:	add    BYTE PTR [rbx],dh
   140014b89:	add    BYTE PTR [rax],al
   140014b8b:	add    BYTE PTR [rbx],dh
   140014b8d:	add    BYTE PTR [rbx],dh
   140014b8f:	add    BYTE PTR [rbx],dh
   140014b91:	add    BYTE PTR [rsi+0x0],ah
   140014b94:	xor    eax,DWORD PTR [rax]
   140014b96:	cdq    
   140014b97:	add    BYTE PTR [rbx],dh
   140014b99:	add    ah,cl
   140014b9b:	add    BYTE PTR [rbx],dh
   140014b9d:	add    bh,bh
   140014b9f:	add    BYTE PTR [rbx],dh
   140014ba1:	xor    eax,DWORD PTR [rax]
   140014ba3:	add    BYTE PTR [rbx],dh
   140014ba5:	xor    esi,DWORD PTR [rbx]
   140014ba7:	add    BYTE PTR [rbx],dh
   140014ba9:	xor    esp,DWORD PTR [rsi+0x0]
   140014bac:	xor    esi,DWORD PTR [rbx]
   140014bae:	cdq    
   140014baf:	add    BYTE PTR [rbx],dh
   140014bb1:	xor    ecx,esp
   140014bb3:	add    BYTE PTR [rbx],dh
   140014bb5:	xor    edi,edi
   140014bb7:	add    BYTE PTR [rbx],dh
   140014bb9:	data16 add BYTE PTR [rax],al
   140014bbc:	xor    esp,DWORD PTR [rsi+0x33]
   140014bbf:	add    BYTE PTR [rbx],dh
   140014bc1:	data16 data16 add BYTE PTR [rbx],dh
   140014bc5:	cwd    
   140014bc7:	add    BYTE PTR [rbx],dh
   140014bc9:	data16 int3 
   140014bcb:	add    BYTE PTR [rbx],dh
   140014bcd:	inc    WORD PTR [rax]
   140014bd0:	xor    ebx,DWORD PTR [rcx-0x66cd0000]
   140014bd6:	xor    eax,DWORD PTR [rax]
   140014bd8:	xor    ebx,DWORD PTR [rcx-0x66ccff9a]
   140014bde:	cdq    
   140014bdf:	add    BYTE PTR [rbx],dh
   140014be1:	cdq    
   140014be2:	int3   
   140014be3:	add    BYTE PTR [rbx],dh
   140014be5:	cdq    
   140014be6:	inc    DWORD PTR [rax]
   140014be8:	xor    ecx,esp
   140014bea:	add    BYTE PTR [rax],al
   140014bec:	xor    ecx,esp
   140014bee:	xor    eax,DWORD PTR [rax]
   140014bf0:	xor    ecx,esp
   140014bf2:	data16 add BYTE PTR [rbx],dh
   140014bf5:	int3   
   140014bf6:	cdq    
   140014bf7:	add    BYTE PTR [rbx],dh
   140014bf9:	int3   
   140014bfa:	int3   
   140014bfb:	add    BYTE PTR [rbx],dh
   140014bfd:	int3   
   140014bfe:	inc    DWORD PTR [rax]
   140014c00:	xor    edi,edi
   140014c02:	xor    eax,DWORD PTR [rax]
   140014c04:	xor    edi,edi
   140014c06:	data16 add BYTE PTR [rbx],dh
   140014c09:	call   FWORD PTR [rcx-0x3300cd00]
   140014c0f:	add    BYTE PTR [rbx],dh
   140014c11:	(bad)  
   140014c12:	inc    DWORD PTR [rax]
   140014c14:	data16 add BYTE PTR [rax],al
   140014c17:	add    BYTE PTR [rsi+0x0],ah
   140014c1a:	xor    eax,DWORD PTR [rax]
   140014c1c:	data16 add BYTE PTR [rsi+0x0],ah
   140014c20:	data16 add BYTE PTR [rcx-0x33ff9a00],bl
   140014c27:	add    BYTE PTR [rsi+0x0],ah
   140014c2a:	inc    DWORD PTR [rax]
   140014c2c:	xor    ax,WORD PTR [rax]
   140014c2f:	add    BYTE PTR [rsi+0x33],ah
   140014c32:	xor    eax,DWORD PTR [rax]
   140014c34:	xor    sp,WORD PTR [rsi+0x0]
   140014c38:	xor    bx,WORD PTR [rcx-0x33cc9a00]
   140014c3f:	add    BYTE PTR [rsi+0x33],ah
   140014c42:	inc    DWORD PTR [rax]
   140014c44:	data16 data16 add BYTE PTR [rax],al
   140014c48:	data16 xor ax,WORD PTR [rax]
   140014c4c:	data16 data16 data16 add BYTE PTR [rsi+0x66],ah
   140014c52:	cdq    
   140014c53:	add    BYTE PTR [rsi+0x66],ah
   140014c56:	int3   
   140014c57:	add    BYTE PTR [rsi-0x67],ah
   140014c5a:	add    BYTE PTR [rax],al
   140014c5c:	cwd    
   140014c5e:	xor    eax,DWORD PTR [rax]
   140014c60:	cwd    
   140014c62:	data16 add BYTE PTR [rsi-0x67],ah
   140014c66:	cdq    
   140014c67:	add    BYTE PTR [rsi-0x67],ah
   140014c6a:	int3   
   140014c6b:	add    BYTE PTR [rsi-0x67],ah
   140014c6e:	inc    DWORD PTR [rax]
   140014c70:	data16 int3 
   140014c72:	add    BYTE PTR [rax],al
   140014c74:	data16 int3 
   140014c76:	xor    eax,DWORD PTR [rax]
   140014c78:	data16 int3 
   140014c7a:	cdq    
   140014c7b:	add    BYTE PTR [rsi-0x34],ah
   140014c7e:	int3   
   140014c7f:	add    BYTE PTR [rsi-0x34],ah
   140014c82:	inc    DWORD PTR [rax]
   140014c84:	inc    WORD PTR [rax]
   140014c87:	add    BYTE PTR [rsi-0x1],ah
   140014c8a:	xor    eax,DWORD PTR [rax]
   140014c8c:	call   DWORD PTR [rcx-0x33009a00]
   140014c93:	add    ah,cl
   140014c95:	add    bh,bh
   140014c97:	add    bh,bh
   140014c99:	add    ah,cl
   140014c9b:	add    BYTE PTR [rcx-0x66ffff67],bl
   140014ca1:	xor    ebx,DWORD PTR [rcx-0x66ff6700]
   140014ca7:	add    BYTE PTR [rcx-0x66ff3400],bl
   140014cad:	add    BYTE PTR [rax],al
   140014caf:	add    BYTE PTR [rcx-0x66ffcccd],bl
   140014cb5:	add    BYTE PTR [rsi+0x0],ah
   140014cb8:	cdq    
   140014cb9:	xor    ecx,esp
   140014cbb:	add    BYTE PTR [rcx-0x66ff0100],bl
   140014cc1:	data16 add BYTE PTR [rax],al
   140014cc4:	cdq    
   140014cc5:	xor    ax,WORD PTR [rax]
   140014cc8:	cdq    
   140014cc9:	xor    esp,DWORD PTR [rsi+0x0]
   140014ccc:	cdq    
   140014ccd:	cwd    
   140014ccf:	add    BYTE PTR [rcx-0x66ff339a],bl
   140014cd5:	xor    edi,edi
   140014cd7:	add    BYTE PTR [rcx-0x66ffcc67],bl
   140014cdd:	cdq    
   140014cde:	data16 add BYTE PTR [rcx-0x66ff6667],bl
   140014ce5:	cdq    
   140014ce6:	int3   
   140014ce7:	add    BYTE PTR [rcx-0x66ff0067],bl
   140014ced:	int3   
   140014cee:	add    BYTE PTR [rax],al
   140014cf0:	cdq    
   140014cf1:	int3   
   140014cf2:	xor    eax,DWORD PTR [rax]
   140014cf4:	data16 int3 
   140014cf6:	data16 add BYTE PTR [rcx-0x66ff6634],bl
   140014cfd:	int3   
   140014cfe:	int3   
   140014cff:	add    BYTE PTR [rcx-0x66ff0034],bl
   140014d05:	inc    DWORD PTR [rax]
   140014d07:	add    BYTE PTR [rcx-0x66ffcc01],bl
   140014d0d:	int3   
   140014d0e:	data16 add BYTE PTR [rcx-0x66ff6601],bl
   140014d15:	dec    esp
   140014d17:	add    BYTE PTR [rcx-0x33ff0001],bl
   140014d1d:	add    BYTE PTR [rax],al
   140014d1f:	add    BYTE PTR [rcx-0x33ffcd00],bl
   140014d25:	add    BYTE PTR [rsi+0x0],ah
   140014d28:	int3   
   140014d29:	add    BYTE PTR [rcx-0x33ff3400],bl
   140014d2f:	add    BYTE PTR [rcx-0x33ffffcd],bl
   140014d35:	xor    esi,DWORD PTR [rbx]
   140014d37:	add    ah,cl
   140014d39:	xor    esp,DWORD PTR [rsi+0x0]
   140014d3c:	int3   
   140014d3d:	xor    ebx,DWORD PTR [rcx-0x33cc3400]
   140014d43:	add    ah,cl
   140014d45:	xor    edi,edi
   140014d47:	add    ah,cl
   140014d49:	data16 add BYTE PTR [rax],al
   140014d4c:	int3   
   140014d4d:	xor    ax,WORD PTR [rax]
   140014d50:	cdq    
   140014d51:	data16 data16 add ah,cl
   140014d55:	cwd    
   140014d57:	add    ah,cl
   140014d59:	data16 int3 
   140014d5b:	add    BYTE PTR [rcx-0x33ff009a],bl
   140014d61:	cdq    
   140014d62:	add    BYTE PTR [rax],al
   140014d64:	int3   
   140014d65:	cdq    
   140014d66:	xor    eax,DWORD PTR [rax]
   140014d68:	int3   
   140014d69:	cdq    
   140014d6a:	data16 add ah,cl
   140014d6d:	cdq    
   140014d6e:	cdq    
   140014d6f:	add    ah,cl
   140014d71:	cdq    
   140014d72:	int3   
   140014d73:	add    ah,cl
   140014d75:	cdq    
   140014d76:	inc    DWORD PTR [rax]
   140014d78:	int3   
   140014d79:	int3   
   140014d7a:	add    BYTE PTR [rax],al
   140014d7c:	int3   
   140014d7d:	int3   
   140014d7e:	xor    eax,DWORD PTR [rax]
   140014d80:	int3   
   140014d81:	int3   
   140014d82:	data16 add ah,cl
   140014d85:	int3   
   140014d86:	cdq    
   140014d87:	add    ah,cl
   140014d89:	int3   
   140014d8a:	int3   
   140014d8b:	add    ah,cl
   140014d8d:	int3   
   140014d8e:	inc    DWORD PTR [rax]
   140014d90:	int3   
   140014d91:	inc    DWORD PTR [rax]
   140014d93:	add    ah,cl
   140014d95:	push   QWORD PTR [rbx]
   140014d97:	add    BYTE PTR [rcx-0x33ff9901],bl
   140014d9d:	call   FWORD PTR [rcx-0x33003400]
   140014da3:	add    ah,cl
   140014da5:	(bad)  
   140014da6:	inc    DWORD PTR [rax]
   140014da8:	int3   
   140014da9:	add    BYTE PTR [rbx],dh
   140014dab:	add    bh,bh
   140014dad:	add    BYTE PTR [rsi+0x0],ah
   140014db0:	inc    DWORD PTR [rax]
   140014db2:	cdq    
   140014db3:	add    ah,cl
   140014db5:	xor    eax,DWORD PTR [rax]
   140014db7:	add    bh,bh
   140014db9:	xor    esi,DWORD PTR [rbx]
   140014dbb:	add    bh,bh
   140014dbd:	xor    esp,DWORD PTR [rsi+0x0]
   140014dc0:	push   QWORD PTR [rbx]
   140014dc2:	cdq    
   140014dc3:	add    bh,bh
   140014dc5:	xor    ecx,esp
   140014dc7:	add    bh,bh
   140014dc9:	xor    edi,edi
   140014dcb:	add    bh,bh
   140014dcd:	data16 add BYTE PTR [rax],al
   140014dd0:	jmp    QWORD PTR [rsi+0x33]
   140014dd3:	add    ah,cl
   140014dd5:	data16 data16 add bh,bh
   140014dd9:	cwd    
   140014ddb:	add    bh,bh
   140014ddd:	data16 int3 
   140014ddf:	add    ah,cl
   140014de1:	inc    WORD PTR [rax]
   140014de4:	call   FWORD PTR [rcx-0x66010000]
   140014dea:	xor    eax,DWORD PTR [rax]
   140014dec:	call   FWORD PTR [rcx-0x6600ff9a]
   140014df2:	cdq    
   140014df3:	add    bh,bh
   140014df5:	cdq    
   140014df6:	int3   
   140014df7:	add    bh,bh
   140014df9:	cdq    
   140014dfa:	inc    DWORD PTR [rax]
   140014dfc:	dec    esp
   140014dfe:	add    BYTE PTR [rax],al
   140014e00:	dec    esp
   140014e02:	xor    eax,DWORD PTR [rax]
   140014e04:	dec    esp
   140014e06:	data16 add bh,bh
   140014e09:	int3   
   140014e0a:	cdq    
   140014e0b:	add    bh,bh
   140014e0d:	int3   
   140014e0e:	int3   
   140014e0f:	add    bh,bh
   140014e11:	int3   
   140014e12:	inc    DWORD PTR [rax]
   140014e14:	(bad)  
   140014e15:	push   QWORD PTR [rbx]
   140014e17:	add    ah,cl
   140014e19:	jmp    QWORD PTR [rsi+0x0]
   140014e1c:	(bad)  
   140014e1d:	call   FWORD PTR [rcx-0x33000100]
   140014e23:	add    BYTE PTR [rsi+0x66],ah
   140014e26:	inc    DWORD PTR [rax]
   140014e28:	jmp    WORD PTR [rsi+0x0]
   140014e2c:	data16 (bad) 
   140014e2e:	inc    DWORD PTR [rax]
   140014e30:	jmp    QWORD PTR [rsi+0x66]
   140014e33:	add    bh,bh
   140014e35:	inc    WORD PTR [rax]
   140014e38:	(bad)  
   140014e39:	jmp    QWORD PTR [rsi+0x0]
   140014e3c:	and    DWORD PTR [rax],eax
   140014e3e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014e3f:	add    BYTE PTR [rdi+0x5f],bl
   140014e42:	pop    rdi
   140014e43:	add    BYTE PTR [rdi+0x77],dh
   140014e46:	ja     0x140014e48
   140014e48:	xchg   BYTE PTR [rsi-0x6969ff7a],al
   140014e4e:	xchg   esi,eax
   140014e4f:	add    bl,cl
   140014e51:	retf   
   140014e52:	retf   
   140014e53:	add    BYTE PTR [rdx-0x28ff4d4e],dh
   140014e59:	xlat   BYTE PTR ds:[rbx]
   140014e5a:	xlat   BYTE PTR ds:[rbx]
   140014e5b:	add    ch,bl
   140014e5d:	fstp   st(5)
   140014e5f:	add    bl,ah
   140014e61:	jrcxz  0x140014e46
   140014e63:	add    dl,ch
   140014e65:	(bad)  
   140014e66:	(bad)  
   140014e67:	add    cl,dh
   140014e69:	icebp  
   140014e6a:	icebp  
   140014e6b:	add    al,bh
   140014e6d:	clc    
   140014e6e:	clc    
   140014e6f:	add    al,dh
   140014e71:	sti    
   140014e72:	inc    DWORD PTR [rax]
   140014e74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014e75:	movabs al,ds:0x80808000a0
   140014e7e:	inc    DWORD PTR [rax]
   140014e80:	add    bh,bh
   140014e82:	add    BYTE PTR [rax],al
   140014e84:	add    bh,bh
   140014e86:	inc    DWORD PTR [rax]
   140014e88:	inc    DWORD PTR [rax]
   140014e8a:	add    BYTE PTR [rax],al
   140014e8c:	inc    DWORD PTR [rax]
   140014e8e:	inc    DWORD PTR [rax]
   140014e90:	(bad)  
   140014e91:	inc    DWORD PTR [rax]
   140014e93:	add    bh,bh
   140014e95:	(bad)  
   140014e96:	inc    DWORD PTR [rax]
   140014e98:	or     cl,BYTE PTR [rdx]
   140014e9a:	or     cl,BYTE PTR [rdx]
   140014e9c:	data16 xchg BYTE PTR [rsi-0x7a],ah
   140014ea0:	xchg   BYTE PTR [rsi-0x7a],ah
   140014ea3:	data16 xchg BYTE PTR [rsi-0x7a],ah
   140014ea7:	or     cl,BYTE PTR [rdx]
   140014ea9:	or     cl,BYTE PTR [rdx]
   140014eab:	data16 scas al,BYTE PTR es:[rdi]
   140014ead:	(bad)  
   140014eae:	jmp    0x140014e5e
   140014eb0:	jmp    0x140014e60
   140014eb2:	jmp    0x140014e62
   140014eb4:	jmp    0x140014e64
   140014eb6:	xchg   BYTE PTR [rdx],cl
   140014eb8:	or     cl,BYTE PTR [rdx]
   140014eba:	xchg   bl,ch
   140014ebc:	(bad)  
   140014ebd:	scas   al,BYTE PTR es:[rdi]
   140014ebe:	fstp   st(5)
   140014ec0:	repz hlt 
   140014ec2:	(bad)  
   140014ec3:	(bad)  
   140014ec4:	(bad)  
   140014ec5:	in     eax,dx
   140014ec6:	xchg   BYTE PTR [rdx],cl
   140014ec8:	xchg   BYTE PTR [rsi-0x15],ah
   140014ecb:	xlat   BYTE PTR ds:[rbx]
   140014ecc:	(bad)  
   140014ecd:	scas   al,BYTE PTR es:[rdi]
   140014ece:	fstp   st(5)
   140014ed0:	repz hlt 
   140014ed2:	(bad)  
   140014ed3:	(bad)  
   140014ed4:	(bad)  
   140014ed5:	in     eax,dx
   140014ed6:	xchg   BYTE PTR [rdx],cl
   140014ed8:	scas   al,BYTE PTR es:[rdi]
   140014ed9:	fstp   st(5)
   140014edb:	or     esi,edx
   140014edd:	scas   al,BYTE PTR es:[rdi]
   140014ede:	fstp   st(5)
   140014ee0:	repz hlt 
   140014ee2:	(bad)  
   140014ee3:	(bad)  
   140014ee4:	(bad)  
   140014ee5:	in     eax,dx
   140014ee6:	xchg   BYTE PTR [rdx],cl
   140014ee8:	scas   al,BYTE PTR es:[rdi]
   140014ee9:	repnz fst st(7)
   140014eec:	(bad)  
   140014eed:	scas   al,BYTE PTR es:[rdi]
   140014eee:	fstp   st(5)
   140014ef0:	repnz hlt 
   140014ef2:	(bad)  
   140014ef3:	(bad)  
   140014ef4:	(bad)  
   140014ef5:	in     eax,dx
   140014ef6:	xchg   BYTE PTR [rdx],cl
   140014ef8:	scas   al,BYTE PTR es:[rdi]
   140014ef9:	sbb    ebp,ebx
   140014efb:	or     esi,edx
   140014efd:	scas   al,BYTE PTR es:[rdi]
   140014efe:	fstp   st(5)
   140014f00:	repz hlt 
   140014f02:	(bad)  
   140014f03:	(bad)  
   140014f04:	(bad)  
   140014f05:	in     eax,dx
   140014f06:	xchg   BYTE PTR [rdx],cl
   140014f08:	scas   al,BYTE PTR es:[rdi]
   140014f09:	fstp   st(5)
   140014f0b:	xlat   BYTE PTR ds:[rbx]
   140014f0c:	(bad)  
   140014f0d:	scas   al,BYTE PTR es:[rdi]
   140014f0e:	fstp   st(5)
   140014f10:	sub    ah,BYTE PTR [rbx]
   140014f12:	and    esp,DWORD PTR [rdx]
   140014f14:	and    ah,BYTE PTR [rdx]
   140014f16:	and    cl,BYTE PTR [rdx]
   140014f18:	scas   al,BYTE PTR es:[rdi]
   140014f19:	sbb    ebp,ebx
   140014f1b:	or     esi,edx
   140014f1d:	scas   al,BYTE PTR es:[rdi]
   140014f1e:	fstp   st(5)
   140014f20:	repz hlt 
   140014f22:	and    ebp,DWORD PTR [rdx]
   140014f24:	and    ebp,ebp
   140014f26:	xchg   BYTE PTR [rdx],cl
   140014f28:	scas   al,BYTE PTR es:[rdi]
   140014f29:	(bad)  
   140014f2a:	fst    st(7)
   140014f2c:	(bad)  
   140014f2d:	scas   al,BYTE PTR es:[rdi]
   140014f2e:	fstp   st(5)
   140014f30:	repz and edi,DWORD PTR [rax]
   140014f33:	xor    DWORD PTR [rdx],ebp
   140014f35:	and    edx,DWORD PTR [rax]
   140014f37:	or     ch,BYTE PTR [rsi-0x3af622e7]
   140014f3d:	(bad)
   140014f40:	sub    bh,BYTE PTR [rax]
   140014f42:	cmp    BYTE PTR [rax],bh
   140014f44:	xor    DWORD PTR [rdx],esp
   140014f46:	xor    DWORD PTR [rbx],esp
   140014f48:	scas   al,BYTE PTR es:[rdi]
   140014f49:	inc    ebp
   140014f4b:	(bad)
   140014f4e:	sti    
   140014f4f:	sti    
   140014f50:	sti    
   140014f51:	cmp    bh,bh
   140014f53:	sti    
   140014f54:	sti    
   140014f55:	xor    ebx,edi
   140014f57:	and    ebp,DWORD PTR [rsi-0x1d1d0b3b]
   140014f5d:	(bad)
   140014f60:	and    ah,BYTE PTR [rdx]
   140014f62:	and    esp,DWORD PTR [rbx]
   140014f64:	and    esp,DWORD PTR [rdx]
   140014f66:	sti    
   140014f67:	and    eax,ebp
   140014f69:	hlt    
   140014f6a:	push   rsp
   140014f6c:	(bad)
   140014f6f:	or     cl,BYTE PTR [rdx]
   140014f71:	and    bh,bl
   140014f73:	sti    
   140014f74:	xor    DWORD PTR [rdx],esp
   140014f76:	and    cl,BYTE PTR [rdx]
   140014f78:	scas   al,BYTE PTR es:[rdi]
   140014f79:	(bad)
   140014f7c:	loop   0x140014f43
   140014f7e:	or     cl,BYTE PTR [rdx]
   140014f80:	or     cl,BYTE PTR [rdx]
   140014f82:	and    esp,DWORD PTR [rdx]
   140014f84:	and    cl,BYTE PTR [rdx]
   140014f86:	or     cl,BYTE PTR [rdx]
   140014f88:	scas   al,BYTE PTR es:[rdi]
   140014f89:	out    0xc5,al
   140014f8b:	(bad)
   140014f8e:	or     cl,BYTE PTR [rdx]
   140014f90:	or     cl,BYTE PTR [rdx]
   140014f92:	or     cl,BYTE PTR [rdx]
   140014f94:	or     cl,BYTE PTR [rdx]
   140014f96:	or     cl,BYTE PTR [rdx]
   140014f98:	lock add DWORD PTR [rax],eax
   140014f9b:	add    al,ah
   140014f9d:	add    DWORD PTR [rax],eax
   140014f9f:	add    al,al
   140014fa1:	add    DWORD PTR [rax],eax
   140014fa3:	add    BYTE PTR [rax],al
   140014fa5:	add    DWORD PTR [rax],eax
   140014fa7:	add    BYTE PTR [rax],al
   140014fa9:	add    DWORD PTR [rax],eax
   140014fab:	add    BYTE PTR [rax],al
   140014fad:	add    DWORD PTR [rax],eax
   140014faf:	add    BYTE PTR [rax],al
   140014fb1:	add    DWORD PTR [rax],eax
   140014fb3:	add    BYTE PTR [rax],al
   140014fb5:	add    DWORD PTR [rax],eax
   140014fb7:	add    BYTE PTR [rax],al
   140014fb9:	add    DWORD PTR [rax],eax
   140014fbb:	add    BYTE PTR [rax],al
   140014fbd:	add    DWORD PTR [rax],eax
	...
   140014fcb:	add    BYTE PTR [rdi],al
   140014fcd:	add    DWORD PTR [rax],0xc70300
   140014fd3:	add    BYTE PTR [rdi],al
   140014fd5:	inc    DWORD PTR [rax]
   140014fd7:	add    BYTE PTR [rax],al
   140014fd9:	add    BYTE PTR [rcx],al
   140014fdb:	add    BYTE PTR [rax+rax*1],al
   140014fde:	and    BYTE PTR [rax],ah
   140014fe0:	adc    BYTE PTR [rax],al
   140014fe2:	add    DWORD PTR [rax],eax
   140014fe4:	add    al,0x0
   140014fe6:	call   0x141014fed
   140014feb:	add    BYTE PTR [rax],ah
   140014fed:	and    BYTE PTR [rax],al
   140014fef:	add    BYTE PTR [rcx],al
   140014ff1:	add    BYTE PTR [rax],cl
   140014ff3:	add    BYTE PTR [rax+0x2000008],ch
   140014ff9:	add    BYTE PTR [rax],dl
   140014ffb:	adc    BYTE PTR [rax],dl
   140014ffd:	add    BYTE PTR [rcx],al
   140014fff:	add    BYTE PTR [rax+rax*1],al
   140015002:	sub    BYTE PTR [rcx],al
   140015004:	add    BYTE PTR [rax],al
   140015006:	add    eax,DWORD PTR [rax]
   140015008:	adc    BYTE PTR [rax],dl
   14001500a:	add    BYTE PTR [rax],al
   14001500c:	add    DWORD PTR [rax],eax
   14001500e:	or     BYTE PTR [rax],al
   140015010:	push   0x4000005
   140015015:	add    BYTE PTR [rax],al
   140015017:	add    ah,al
   140015019:	or     al,cl
   14001501b:	nop
   14001501c:	add    BYTE PTR [rax],al
   14001501e:	add    BYTE PTR [rax],al
   140015020:	add    al,0x0
   140015022:	and    BYTE PTR [rax],al
   140015024:	sub    BYTE PTR [rax],al
   140015026:	sub    al,0x1
   140015028:	add    BYTE PTR fs:[rax],al
   14001502b:	add    BYTE PTR [rax],al
   14001502d:	add    BYTE PTR [rax-0x70],bh
   140015030:	(bad)  
   140015031:	add    BYTE PTR fs:[r14+0x0],cl
   140015036:	push   rbx
   140015037:	add    BYTE PTR [rcx+0x0],cl
   14001503a:	xchg   DWORD PTR [rbp-0xa],esp
   14001503d:	rex.WRX test BYTE PTR [rsi-0x62],r14b
   140015041:	mov    al,BYTE PTR [rax]
   140015043:	mov    al,BYTE PTR [rax]
   140015045:	add    BYTE PTR [rcx],cl
   140015047:	add    BYTE PTR [rax+0xe7d3065],dh
   14001504d:	data16 (bad) 
   14001504f:	(bad)  
   140015050:	add    BYTE PTR [rax],al
   140015052:	add    BYTE PTR [rax],al
   140015054:	add    BYTE PTR [rax],al
   140015056:	add    dl,BYTE PTR [rax+0x0]
   140015059:	add    BYTE PTR [rax],al
   14001505b:	add    BYTE PTR [rax+rax*1],cl
   14001505e:	or     BYTE PTR [rax],al
   140015060:	sbb    BYTE PTR [rcx],al
   140015062:	sbb    BYTE PTR [rax],al
   140015064:	(bad)  
   140015065:	(bad)  
   140015066:	(bad)  
   140015067:	inc    DWORD PTR [rdx-0x63a67e00]
   14001506d:	addr32 (bad) 
   14001506f:	rex.WRXB
   140015070:	rex (bad) 
   140015073:	mov    edx,ebp
   140015075:	adc    ebp,0xd25b7852
   14001507b:	jg     0x140015001
   14001507d:	jbe    0x140015006
   14001507f:	test   BYTE PTR gs:[rsi+0x2f],0x66
   140015084:	push   rbp
   140015085:	add    BYTE PTR [rsi+0x0],ch
   140015088:	imul   eax,DWORD PTR [rax],0x6f0063
   14001508e:	add    BYTE PTR fs:[rbp+0x0],ah
   140015092:	or     al,0xff
   140015094:	rex.RXB push r10
   140015096:	out    dx,eax
   140015097:	push   rbx
   140015098:	repz lea ecx,[rsi-0x70]
   14001509c:	imul   edi,DWORD PTR fs:[rax-0x70],0x5
   1400150a1:	cwde   
   1400150a2:	add    dh,BYTE PTR [rax]
   1400150a4:	add    BYTE PTR [rsi+0x2c],cl
   1400150a7:	(bad)  
   1400150a8:	sub    al,BYTE PTR [rax]
   1400150aa:	add    BYTE PTR cs:[rax+rax*1+0x78],dh
   1400150af:	add    BYTE PTR [rax+rax*1+0x16],dh
   1400150b3:	(bad)  
   1400150b4:	sub    al,BYTE PTR [rax]
   1400150b6:	add    BYTE PTR cs:[rax+0x0],ch
   1400150ba:	je     0x1400150bc
   1400150bc:	ins    DWORD PTR es:[rdi],dx
   1400150bd:	add    ch,al
   1400150bf:	pop    rdi
   1400150c0:	or     BYTE PTR [rax+0x64c79078],bl
   1400150c6:	add    BYTE PTR [rsi+0xb],cl
   1400150c9:	push   rax
   1400150ca:	sahf   
   1400150cb:	mov    al,BYTE PTR [rax]
   1400150cd:	mov    cl,BYTE PTR [rdi+rdi*8]
   1400150d0:	sub    al,BYTE PTR [rax]
   1400150d2:	add    BYTE PTR cs:[rax+rax*1+0x6f],ah
   1400150d7:	add    BYTE PTR [rbx+0x0],ah
   1400150da:	(bad)  
   1400150db:	(bad)  
   1400150dc:	sub    al,BYTE PTR [rax]
   1400150de:	add    BYTE PTR cs:[rdx+0x0],dh
   1400150e2:	je     0x1400150e4
   1400150e4:	data16 add BYTE PTR [rdi+0x52],al
   1400150e8:	out    dx,eax
   1400150e9:	push   rbx
   1400150ea:	repz lea ecx,[rsi-0x70]
   1400150ee:	add    dh,BYTE PTR [rax]
   1400150f0:	add    BYTE PTR [rax],al
   1400150f2:	add    BYTE PTR [rax],al
   1400150f4:	add    eax,DWORD PTR [rax]
   1400150f6:	and    DWORD PTR [rax+0x0],edx
   1400150f9:	add    BYTE PTR [rax],al
   1400150fb:	add    BYTE PTR [rax+rax*1],cl
   1400150fe:	and    al,0x0
   140015100:	fadd   QWORD PTR [rax]
   140015102:	and    al,0x0
   140015104:	cli    
   140015105:	add    edi,edi
   140015107:	inc    DWORD PTR [rbp+0x0]
   14001510d:	add    BYTE PTR [rax],al
   14001510f:	add    BYTE PTR [rax],al
   140015111:	add    BYTE PTR [rbx],al
   140015113:	push   rax
   140015114:	add    BYTE PTR [rax],al
   140015116:	add    BYTE PTR [rax],al
   140015118:	stos   BYTE PTR es:[rdi],al
   140015119:	add    BYTE PTR [rsi+0x0],cl
   14001511c:	xor    al,0x0
   14001511e:	adc    BYTE PTR [rax],al
   140015120:	add    al,BYTE PTR [rax]
   140015122:	(bad)  
   140015123:	inc    DWORD PTR [rax+0x4e8df300]
   140015129:	nop
   14001512a:	add    BYTE PTR [rax],al
   14001512c:	add    BYTE PTR [rax],al
   14001512e:	add    BYTE PTR [rax],al
   140015130:	add    DWORD PTR [rax],eax
   140015132:	add    DWORD PTR [rax+0x0],edx
   140015135:	add    BYTE PTR [rax],al
   140015137:	add    al,ch
   140015139:	add    BYTE PTR [rsi+0x0],cl
   14001513c:	xor    al,0x0
   14001513e:	adc    BYTE PTR [rax],al
   140015140:	add    DWORD PTR [rax],eax
   140015142:	(bad)  
   140015143:	inc    DWORD PTR [rax+0x4f002600]
   140015149:	add    BYTE PTR [rbx+0x0],cl
   14001514c:	add    BYTE PTR [rax],al
   14001514e:	add    BYTE PTR [rax],al
   140015150:	add    DWORD PTR [rax],eax
   140015152:	(bad)  
   140015153:	inc    DWORD PTR [rax]
   140015155:	add    BYTE PTR [rax],al
   140015157:	add    BYTE PTR [rax],al
   140015159:	add    BYTE PTR [rax],al
   14001515b:	add    BYTE PTR [rax+rax*1+0x0],al
   14001515f:	push   rax
   140015160:	(bad)  
   140015161:	add    BYTE PTR [rax],al
   140015163:	add    BYTE PTR [rax],al
   140015165:	add    BYTE PTR [rip+0x8f01],bh        # 0x14001e06c
   14001516b:	add    BYTE PTR [rax],al
   14001516d:	add    BYTE PTR [rax],al
   14001516f:	add    BYTE PTR [rax],cl
   140015171:	add    BYTE PTR [rax],al
   140015173:	add    BYTE PTR [rax],al
   140015175:	add    BYTE PTR [rbp+0x0],cl
   140015178:	push   rbx
   140015179:	add    BYTE PTR [rax],ah
   14001517b:	add    BYTE PTR [rbx+0x0],dl
   14001517e:	push   0x6c006500
   140015183:	add    BYTE PTR [rax+rax*1+0x20],ch
   140015187:	add    BYTE PTR [rax+rax*1+0x6c],al
   14001518b:	add    BYTE PTR [rdi+0x0],ah
	...
   14001519a:	add    dl,BYTE PTR [rax+0x3f]
   14001519d:	add    BYTE PTR [rip+0x2100f700],bl        # 0x1610248a3
   1400151a3:	add    dl,ch
   1400151a5:	add    eax,DWORD PTR [rax]
   1400151a7:	add    bh,bh
   1400151a9:	inc    DWORD PTR [rdx+0x2d003c00]
   1400151af:	add    BYTE PTR [rax],ah
   1400151b1:	add    BYTE PTR [rax+rax*1+0x72],al
   1400151b5:	add    BYTE PTR [rdi+0x0],ch
   1400151b8:	jo     0x1400151ba
   1400151ba:	and    BYTE PTR [rax],al
   1400151bc:	(bad)  
   1400151bd:	add    BYTE PTR [rax],ah
   1400151bf:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400151c3:	add    BYTE PTR [rax+0x0],bh
   1400151c6:	je     0x1400151c8
   1400151c8:	and    BYTE PTR [rax],al
   1400151ca:	data16 add BYTE PTR [rcx+0x0],ch
   1400151ce:	ins    BYTE PTR es:[rdi],dx
   1400151cf:	add    BYTE PTR [rbp+0x0],ah
   1400151d2:	and    BYTE PTR [rax],al
   1400151d4:	push   0x72006500
   1400151d9:	add    BYTE PTR [rbp+0x0],ah
   1400151dc:	and    DWORD PTR [rax],eax
	...
   1400151ea:	add    BYTE PTR [rax],al
   1400151ec:	(bad)  
   1400151ed:	adc    BYTE PTR [rax],al
   1400151ef:	push   rax
   1400151f0:	or     BYTE PTR [rax],al
   1400151f2:	verw   WORD PTR [rip+0xffffffffe8002a00]        # 0x128017bf9
   1400151f9:	add    eax,DWORD PTR [rax]
   1400151fb:	add    bh,bh
   1400151fd:	inc    DWORD PTR [rdx+0x0]
	...
   14001520b:	add    BYTE PTR [rsi],cl
   14001520d:	add    BYTE PTR [rax],al
   14001520f:	push   rax
   140015210:	or     DWORD PTR [rax],eax
   140015212:	adc    BYTE PTR [rax],al
   140015214:	sub    eax,0xe9002a00
   140015219:	add    eax,DWORD PTR [rax]
   14001521b:	add    bh,bh
   14001521d:	inc    DWORD PTR [rdx+0x44004900]
   140015223:	add    BYTE PTR [rdx+0x0],al
   140015226:	pop    rdi
   140015227:	add    BYTE PTR [rax+0x0],cl
   14001522a:	add    BYTE PTR [r14+0x0],cl
   14001522e:	add    BYTE PTR [rdi+0x0],r11b
   140015232:	add    BYTE PTR [rdx+0x0],r10b
   140015236:	rex.WRXB add BYTE PTR [r8+0x0],r10b
	...
   14001524a:	add    dl,BYTE PTR [rax+0x7]
   14001524d:	add    BYTE PTR [rcx+0x0],cl
   140015250:	add    BYTE PTR fs:[rax],cl
   140015253:	add    bl,ch
   140015255:	add    eax,DWORD PTR [rax]
   140015257:	add    bh,bh
   140015259:	inc    DWORD PTR [rdx+0x69004600]
   14001525f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140015263:	add    BYTE PTR [rax],ah
   140015265:	add    BYTE PTR [rsi+0x0],ch
   140015268:	(bad)  
   140015269:	add    BYTE PTR [rbp+0x0],ch
   14001526c:	add    BYTE PTR gs:[rdx],bh
	...
   14001527b:	add    BYTE PTR [rax+0x15508100],al
   140015281:	add    BYTE PTR [rax+rax*1-0x1a],dl
   140015285:	add    BYTE PTR [rsi],cl
   140015287:	add    ah,ch
   140015289:	add    eax,DWORD PTR [rax]
   14001528b:	add    bh,bh
   14001528d:	inc    DWORD PTR [rcx+0x0]
	...
   14001529b:	add    BYTE PTR [rcx],al
   14001529d:	add    BYTE PTR [rcx],al
   14001529f:	push   rax
   1400152a0:	std    
   1400152a1:	add    BYTE PTR [rax+rax*1+0x32],dl
   1400152a5:	add    BYTE PTR [rsi],cl
   1400152a7:	add    ch,ch
   1400152a9:	add    eax,DWORD PTR [rax]
   1400152ab:	add    bh,bh
   1400152ad:	inc    DWORD PTR [rax+0x72004200]
   1400152b3:	add    BYTE PTR [rdi+0x0],ch
   1400152b6:	ja     0x1400152b8
   1400152b8:	jae    0x1400152ba
   1400152ba:	add    BYTE PTR gs:[rax],al
   1400152bd:	add    BYTE PTR [rax],al
   1400152bf:	add    BYTE PTR [rax+rax*1+0x0],al
   1400152c3:	push   rax
   1400152c4:	add    BYTE PTR [rax],al
   1400152c6:	add    BYTE PTR [rax],al
   1400152c8:	or     BYTE PTR [rax],al
   1400152ca:	add    BYTE PTR [rax],al
   1400152cc:	add    BYTE PTR [rax],al
   1400152ce:	cmp    eax,0x8f01
   1400152d3:	add    BYTE PTR [rax],al
   1400152d5:	add    BYTE PTR [rax],al
   1400152d7:	add    BYTE PTR [rax],cl
   1400152d9:	add    BYTE PTR [rbp+0x0],cl
   1400152dc:	push   rbx
   1400152dd:	add    BYTE PTR [rax],ah
   1400152df:	add    BYTE PTR [rbx+0x0],dl
   1400152e2:	push   0x6c006500
   1400152e7:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400152eb:	add    BYTE PTR [rax+rax*1+0x6c],al
   1400152ef:	add    BYTE PTR [rdi+0x0],ah
   1400152f2:	add    BYTE PTR [rax],al
   1400152f4:	add    BYTE PTR [rax],al
   1400152f6:	add    dl,BYTE PTR [rax+0x0]
   1400152f9:	add    BYTE PTR [rax],al
   1400152fb:	add    BYTE PTR [rdi],al
   1400152fd:	add    BYTE PTR [rbx],dl
   1400152ff:	add    BYTE PTR [rip+0xffffffffed000800],ah        # 0x12d015b05
   140015305:	add    edi,edi
   140015307:	inc    DWORD PTR [rdx+0x6f004400]
   14001530d:	add    BYTE PTR [rbx+0x0],ah
   140015310:	jne    0x140015312
   140015312:	ins    DWORD PTR es:[rdi],dx
   140015313:	add    BYTE PTR [rbp+0x0],ah
   140015316:	outs   dx,BYTE PTR ds:[rsi]
   140015317:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001531b:	add    BYTE PTR [rax],al
   14001531d:	add    BYTE PTR [rax],al
   14001531f:	add    BYTE PTR [rax],al
   140015321:	add    BYTE PTR [rdx],al
   140015323:	push   rax
   140015324:	add    BYTE PTR [rax],al
   140015326:	add    BYTE PTR [rax],al
   140015328:	sub    al,0x0
   14001532a:	adc    eax,DWORD PTR [rax]
   14001532c:	or     al,BYTE PTR [rcx]
   14001532e:	or     BYTE PTR [rax],al
   140015330:	out    dx,al
   140015331:	add    edi,edi
   140015333:	inc    DWORD PTR [rdx+0x0]
   140015339:	add    BYTE PTR [rax],al
   14001533b:	add    BYTE PTR [rax],al
   14001533d:	add    BYTE PTR [rdx],al
   14001533f:	push   rax
   140015340:	add    BYTE PTR [rax],al
   140015342:	add    BYTE PTR [rax],al
   140015344:	(bad)  
   140015345:	add    BYTE PTR [rax+rax*1],ch
   140015348:	pop    rsi
   140015349:	add    BYTE PTR [rax],cl
   14001534b:	add    bh,ch
   14001534d:	add    edi,edi
   14001534f:	inc    DWORD PTR [rdx+0x78004500]
   140015355:	add    BYTE PTR [rax+rax*1+0x72],dh
   140015359:	add    BYTE PTR [rcx+0x0],ah
   14001535c:	movsxd eax,DWORD PTR [rax]
   14001535e:	je     0x140015360
   140015360:	and    BYTE PTR [rax],al
   140015362:	push   rax
   140015363:	add    BYTE PTR [rax+0x0],ch
   140015366:	jb     0x140015368
   140015368:	(bad)  
   140015369:	add    BYTE PTR [rbx+0x0],dh
   14001536c:	add    BYTE PTR gs:[rbx+0x0],dh
   140015370:	add    BYTE PTR [rax],al
   140015372:	add    BYTE PTR [rax],al
   140015374:	add    BYTE PTR [rax],al
   140015376:	add    dl,BYTE PTR [rax+0x0]
   140015379:	add    BYTE PTR [rax],al
   14001537b:	add    BYTE PTR [rdi],al
   14001537d:	add    BYTE PTR [rbp+0x0],cl
   140015380:	jb     0x140015382
   140015382:	or     BYTE PTR [rax],al
   140015384:	lock add edi,edi
   140015387:	inc    DWORD PTR [rdx+0x65004c00]
   14001538d:	add    BYTE PTR [rcx+0x0],ah
   140015390:	jb     0x140015392
   140015392:	outs   dx,BYTE PTR ds:[rsi]
   140015393:	add    BYTE PTR [rax],ah
   140015395:	add    BYTE PTR [rax+0x0],dl
   140015398:	push   0x61007200
   14001539d:	add    BYTE PTR [rbx+0x0],dh
   1400153a0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400153a4:	add    BYTE PTR [rax],al
   1400153a6:	add    BYTE PTR [rax],al
   1400153a8:	add    BYTE PTR [rax],al
   1400153aa:	adc    BYTE PTR [rax+0x0],0x0
   1400153ae:	add    BYTE PTR [rax],al
   1400153b0:	adc    al,0x0
   1400153b2:	cmp    BYTE PTR [rax],al
   1400153b4:	and    al,BYTE PTR [rcx]
   1400153b6:	(bad)  
   1400153b7:	add    bl,dh
   1400153b9:	add    ebp,DWORD PTR [rbp+0x0]
   1400153bc:	jae    0x1400153be
   1400153be:	movsxd eax,DWORD PTR [rax]
   1400153c0:	je     0x1400153c2
   1400153c2:	ins    BYTE PTR es:[rdi],dx
   1400153c3:	add    BYTE PTR [rbx+0x0],dh
   1400153c6:	pop    rdi
   1400153c7:	add    BYTE PTR [rax+0x0],dh
   1400153ca:	jb     0x1400153cc
   1400153cc:	outs   dx,DWORD PTR ds:[rsi]
   1400153cd:	add    BYTE PTR [rdi+0x0],ah
   1400153d0:	jb     0x1400153d2
   1400153d2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400153d6:	jae    0x1400153d8
   1400153d8:	xor    eax,DWORD PTR [rax]
   1400153da:	xor    al,BYTE PTR [rax]
   1400153dc:	add    BYTE PTR [rax],al
   1400153de:	push   rax
   1400153df:	add    BYTE PTR [rdx+0x0],dh
   1400153e2:	outs   dx,DWORD PTR ds:[rsi]
   1400153e3:	add    BYTE PTR [rdi+0x0],ah
   1400153e6:	jb     0x1400153e8
   1400153e8:	add    BYTE PTR gs:[rbx+0x0],dh
   1400153ec:	jae    0x1400153ee
   1400153ee:	xor    DWORD PTR [rax],eax
   1400153f0:	add    BYTE PTR [rax],al
   1400153f2:	add    BYTE PTR [rax],al
   1400153f4:	add    BYTE PTR [rax],al
   1400153f6:	adc    BYTE PTR [rax+0x0],0x0
   1400153fa:	add    BYTE PTR [rax],al
   1400153fc:	adc    al,0x0
   1400153fe:	pop    rdx
   1400153ff:	add    BYTE PTR [rdx],ah
   140015401:	add    DWORD PTR [rsi],ecx
   140015403:	add    ah,dh
   140015405:	add    ebp,DWORD PTR [rbp+0x0]
   140015408:	jae    0x14001540a
   14001540a:	movsxd eax,DWORD PTR [rax]
   14001540c:	je     0x14001540e
   14001540e:	ins    BYTE PTR es:[rdi],dx
   14001540f:	add    BYTE PTR [rbx+0x0],dh
   140015412:	pop    rdi
   140015413:	add    BYTE PTR [rax+0x0],dh
   140015416:	jb     0x140015418
   140015418:	outs   dx,DWORD PTR ds:[rsi]
   140015419:	add    BYTE PTR [rdi+0x0],ah
   14001541c:	jb     0x14001541e
   14001541e:	add    BYTE PTR gs:[rbx+0x0],dh
   140015422:	jae    0x140015424
   140015424:	xor    eax,DWORD PTR [rax]
   140015426:	xor    al,BYTE PTR [rax]
   140015428:	add    BYTE PTR [rax],al
   14001542a:	push   rax
   14001542b:	add    BYTE PTR [rdx+0x0],dh
   14001542e:	outs   dx,DWORD PTR ds:[rsi]
   14001542f:	add    BYTE PTR [rdi+0x0],ah
   140015432:	jb     0x140015434
   140015434:	add    BYTE PTR gs:[rbx+0x0],dh
   140015438:	jae    0x14001543a
   14001543a:	xor    al,BYTE PTR [rax]
   14001543c:	add    BYTE PTR [rax],al
   14001543e:	add    BYTE PTR [rax],al
   140015440:	add    BYTE PTR [rax],al
   140015442:	add    dl,BYTE PTR [rax+0x0]
   140015445:	add    BYTE PTR [rax],al
   140015447:	add    BYTE PTR [rdi],al
   140015449:	add    BYTE PTR [rsi+0x0],ch
   14001544c:	cmp    al,0x0
   14001544e:	or     BYTE PTR [rax],al
   140015450:	icebp  
   140015451:	add    edi,edi
   140015453:	inc    DWORD PTR [rdx+0x65005300]
   140015459:	add    BYTE PTR [rsi+0x0],ch
   14001545c:	je     0x14001545e
   14001545e:	add    BYTE PTR gs:[rsi+0x0],ch
   140015462:	movsxd eax,DWORD PTR [rax]
   140015464:	add    BYTE PTR gs:[rax],ah
   140015467:	add    BYTE PTR [rax+0x0],dl
   14001546a:	(bad)  
   14001546b:	add    BYTE PTR [rdx+0x0],dh
   14001546e:	jae    0x140015470
   140015470:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
	...
   14001547d:	add    BYTE PTR [rdx],al
   14001547f:	push   rax
   140015480:	add    BYTE PTR [rax],al
   140015482:	add    BYTE PTR [rax],al
   140015484:	rex.XB add BYTE PTR [r14+0x0],bpl
   140015488:	enter  0x800,0x0
   14001548c:	repnz add edi,edi
   14001548f:	inc    DWORD PTR [rdx+0x0]
   140015495:	add    BYTE PTR [rax],al
   140015497:	add    BYTE PTR [rax+rax*1+0x0],al
   14001549b:	push   rax
   14001549c:	add    BYTE PTR [rax],al
   14001549e:	add    BYTE PTR [rax],al
   1400154a0:	add    DWORD PTR [rax],eax
   1400154a2:	add    BYTE PTR [rax],al
   1400154a4:	add    BYTE PTR [rax],al
   1400154a6:	cmp    eax,0x8f01
   1400154ab:	add    BYTE PTR [rax],al
   1400154ad:	add    BYTE PTR [rax],al
   1400154af:	add    BYTE PTR [rax],cl
   1400154b1:	add    BYTE PTR [rbp+0x0],cl
   1400154b4:	push   rbx
   1400154b5:	add    BYTE PTR [rax],ah
   1400154b7:	add    BYTE PTR [rbx+0x0],dl
   1400154ba:	push   0x6c006500
   1400154bf:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400154c3:	add    BYTE PTR [rax+rax*1+0x6c],al
   1400154c7:	add    BYTE PTR [rdi+0x0],ah
   1400154ca:	add    BYTE PTR [rax],al
   1400154cc:	add    BYTE PTR [rax],al
   1400154ce:	add    dl,BYTE PTR [rax+0x0]
   1400154d1:	add    BYTE PTR [rax],al
   1400154d3:	add    BYTE PTR [rdi],al
   1400154d5:	add    BYTE PTR [rdi],al
   1400154d7:	add    BYTE PTR [rax],bl
   1400154d9:	add    DWORD PTR [rax],esp
   1400154db:	add    ch,dh
   1400154dd:	add    edi,edi
   1400154df:	inc    DWORD PTR [rdx+0x65005200]
   1400154e5:	add    BYTE PTR [rdi+0x0],ah
   1400154e8:	imul   eax,DWORD PTR [rax],0x740073
   1400154ee:	add    BYTE PTR gs:[rdx+0x0],dh
   1400154f2:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400154f7:	add    BYTE PTR [rip+0x77002000],ch        # 0x1b70174fd
   1400154fd:	add    BYTE PTR [rdi+0x0],ch
   140015500:	jb     0x140015502
   140015502:	add    BYTE PTR fs:[rbx+0x0],dh
	...
   14001550e:	add    BYTE PTR [rax],al
   140015510:	add    DWORD PTR [rax],eax
   140015512:	(bad)  
   140015513:	inc    DWORD PTR [rax]
   140015515:	add    BYTE PTR [rax],al
   140015517:	add    BYTE PTR [rax],al
   140015519:	add    BYTE PTR [rax],al
   14001551b:	add    ah,cl
   14001551d:	or     al,cl
   14001551f:	nop
   140015520:	add    al,0x0
   140015522:	add    BYTE PTR [rax],al
   140015524:	add    BYTE PTR [rax],al
   140015526:	mov    cl,0x0
   140015528:	cmp    DWORD PTR [rax],eax
   14001552a:	add    BYTE PTR [rax],al
   14001552c:	add    BYTE PTR [rax],al
   14001552e:	(bad)  
   14001552f:	push   rbx
   140015530:	mov    BYTE PTR [rbp+0x78],ch
   140015533:	pop    rbx
   140015534:	sar    BYTE PTR [rdi+0x0],cl
   140015537:	add    BYTE PTR [rax],cl
   140015539:	add    BYTE PTR [rax],al
   14001553b:	add    BYTE PTR [rax],al
   14001553d:	add    BYTE PTR [rbp+0x0],cl
   140015540:	push   rbx
   140015541:	add    BYTE PTR [rax],ah
   140015543:	add    BYTE PTR [rbx+0x0],dl
   140015546:	push   0x6c006500
   14001554b:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001554f:	add    BYTE PTR [rax+rax*1+0x6c],al
   140015553:	add    BYTE PTR [rdi+0x0],ah
	...
   14001555e:	add    BYTE PTR [rax],al
   140015560:	add    eax,DWORD PTR [rax]
   140015562:	add    BYTE PTR [rax+0xa],dl
   140015565:	add    BYTE PTR [rdx],cl
   140015567:	add    BYTE PTR [rip+0xfffffffff8001400],dl        # 0x13801696d
   14001556d:	add    eax,DWORD PTR [rax]
   14001556f:	add    bh,bh
   140015571:	inc    DWORD PTR [rdx+0x2ffff00]
   140015577:	jg     0x140015579
	...
   140015585:	add    BYTE PTR [rdx],al
   140015587:	push   rax
   140015588:	and    al,0x0
   14001558a:	or     al,BYTE PTR [rax]
   14001558c:	add    DWORD PTR [rax],0x16
   14001558f:	add    cl,bh
   140015591:	add    eax,DWORD PTR [rax]
   140015593:	add    bh,bh
   140015595:	inc    DWORD PTR [rdx-0x65874600]
   14001559b:	pop    rbx
   14001559c:	retf   
   14001559d:	jp     0x140015612
   14001559f:	push   rbx
   1400155a0:	pop    rsp
   1400155a1:	push   rax
   1400155a2:	(bad)  
   1400155a3:	imul   edi,DWORD PTR [rax+0x5b],0xffffffd2
   1400155a7:	jg     0x140015559
   1400155a9:	gs pop rsi
   1400155ab:	mov    bl,BYTE PTR [rdi]
   1400155ad:	inc    DWORD PTR [rax]
	...
   1400155bb:	add    BYTE PTR [rax],al
   1400155bd:	add    BYTE PTR [rcx],al
   1400155bf:	push   rax
   1400155c0:	and    al,0x0
   1400155c2:	and    DWORD PTR [rax],eax
   1400155c4:	xor    al,BYTE PTR [rax]
   1400155c6:	(bad)  
   1400155c7:	add    dh,dh
   1400155c9:	add    eax,DWORD PTR [rax]
   1400155cb:	add    bh,bh
   1400155cd:	inc    DWORD PTR [rax+0x28662f00]
   1400155d3:	add    BYTE PTR [rsi],ah
   1400155d5:	add    BYTE PTR [rcx+0x0],bl
   1400155d8:	sub    DWORD PTR [rax],eax
	...
   1400155e6:	add    BYTE PTR [rax],al
   1400155e8:	add    DWORD PTR [rax],eax
   1400155ea:	add    DWORD PTR [rax+0x5c],edx
   1400155ed:	add    BYTE PTR [rcx],ah
   1400155ef:	add    BYTE PTR [rdx],dh
   1400155f1:	add    BYTE PTR [rsi],cl
   1400155f3:	add    bh,dh
   1400155f5:	add    eax,DWORD PTR [rax]
   1400155f7:	add    bh,bh
   1400155f9:	inc    DWORD PTR [rax+0x28542600]
   1400155ff:	add    BYTE PTR [rsi],ah
   140015601:	add    BYTE PTR [rsi+0x0],cl
   140015604:	sub    DWORD PTR [rax],eax
	...
   14001560e:	add    BYTE PTR [rax],al
   140015610:	add    DWORD PTR [rax],eax
   140015612:	(bad)  
   140015613:	inc    DWORD PTR [rax]
   140015615:	add    BYTE PTR [rax],al
   140015617:	add    BYTE PTR [rax],al
   140015619:	add    BYTE PTR [rax],al
   14001561b:	add    ah,cl
   14001561d:	or     al,cl
   14001561f:	nop
   140015620:	add    eax,DWORD PTR [rax]
   140015622:	add    BYTE PTR [rax],al
   140015624:	add    BYTE PTR [rax],al
   140015626:	mov    cl,0x0
   140015628:	cmp    DWORD PTR [rax],eax
   14001562a:	add    BYTE PTR [rax],al
   14001562c:	add    BYTE PTR [rax],al
   14001562e:	js     0x14001568b
   140015630:	sar    BYTE PTR [rdi+0x2d],cl
   140015633:	rex.WRX adc al,0x90
   140015636:	pop    rsp
   140015637:	push   rax
   140015638:	(bad)  
   140015639:	imul   eax,DWORD PTR [rax],0x0
   14001563c:	or     BYTE PTR [rax],al
   14001563e:	add    BYTE PTR [rax],al
   140015640:	add    BYTE PTR [rax],al
   140015642:	rex.WRB add BYTE PTR [r11+0x0],r10b
   140015646:	and    BYTE PTR [rax],al
   140015648:	push   rbx
   140015649:	add    BYTE PTR [rax+0x0],ch
   14001564c:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140015651:	add    BYTE PTR [rax],ah
   140015653:	add    BYTE PTR [rax+rax*1+0x6c],al
   140015657:	add    BYTE PTR [rdi+0x0],ah
	...
   140015662:	add    BYTE PTR [rax],al
   140015664:	add    eax,DWORD PTR [rax]
   140015666:	add    BYTE PTR [rax+0xa],dl
   140015669:	add    BYTE PTR [rdx],cl
   14001566b:	add    BYTE PTR [rip+0xfffffffff8001400],dl        # 0x138016a71
   140015671:	add    eax,DWORD PTR [rax]
   140015673:	add    bh,bh
   140015675:	inc    DWORD PTR [rdx+0x4ffff00]
   14001567b:	jg     0x14001567d
	...
   140015689:	add    BYTE PTR [rdx],al
   14001568b:	push   rax
   14001568c:	and    al,0x0
   14001568e:	or     al,BYTE PTR [rax]
   140015690:	add    DWORD PTR [rax],0x16
   140015693:	add    dh,dh
   140015695:	add    eax,DWORD PTR [rax]
   140015697:	add    bh,bh
   140015699:	inc    DWORD PTR [rdx+0x5e65b000]
   14001569f:	mov    bh,BYTE PTR [rax+0x5b]
   1400156a2:	sar    BYTE PTR [rdi+0x5c],cl
   1400156a5:	push   rax
   1400156a6:	(bad)  
   1400156a7:	imul   eax,DWORD PTR [rax],0x0
	...
   1400156b2:	add    BYTE PTR [rax],al
   1400156b4:	add    DWORD PTR [rax],eax
   1400156b6:	add    DWORD PTR [rax+0x3f],edx
   1400156b9:	add    BYTE PTR [rcx],ah
   1400156bb:	add    BYTE PTR [rdx],dh
   1400156bd:	add    BYTE PTR [rsi],cl
   1400156bf:	add    ch,dh
   1400156c1:	add    eax,DWORD PTR [rax]
   1400156c3:	add    bh,bh
   1400156c5:	inc    DWORD PTR [rax-0x65874600]
   1400156cb:	pop    rbx
   1400156cc:	sub    BYTE PTR [rax],al
   1400156ce:	add    BYTE PTR es:[rdi+0x0],cl
   1400156d2:	sub    DWORD PTR [rax],eax
   1400156d4:	add    BYTE PTR [rax],al
   1400156d6:	add    BYTE PTR [rax],al
   1400156d8:	add    DWORD PTR [rax],eax
   1400156da:	(bad)  
   1400156db:	inc    DWORD PTR [rax]
   1400156dd:	add    BYTE PTR [rax],al
   1400156df:	add    BYTE PTR [rax],al
   1400156e1:	add    BYTE PTR [rax],al
   1400156e3:	add    BYTE PTR [rax+0x0],cl
   1400156e6:	ror    BYTE PTR [rax+0x6],0x0
   1400156ea:	add    BYTE PTR [rax],al
   1400156ec:	add    BYTE PTR [rax],al
   1400156ee:	cmp    eax,0x8f01
   1400156f3:	add    BYTE PTR [rax],al
   1400156f5:	add    BYTE PTR [rax],al
   1400156f7:	add    BYTE PTR [rax],cl
   1400156f9:	add    BYTE PTR [rax],al
   1400156fb:	add    BYTE PTR [rax],al
   1400156fd:	add    BYTE PTR [rbp+0x0],cl
   140015700:	push   rbx
   140015701:	add    BYTE PTR [rax],ah
   140015703:	add    BYTE PTR [rbx+0x0],dl
   140015706:	push   0x6c006500
   14001570b:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001570f:	add    BYTE PTR [rax+rax*1+0x6c],al
   140015713:	add    BYTE PTR [rdi+0x0],ah
	...
   140015722:	add    dl,BYTE PTR [rax+0x3f]
   140015725:	add    BYTE PTR [rip+0x2100f700],bl        # 0x161024e2b
   14001572b:	add    dl,ch
   14001572d:	add    eax,DWORD PTR [rax]
   14001572f:	add    bh,bh
   140015731:	inc    DWORD PTR [rdx+0x2d003c00]
   140015737:	add    BYTE PTR [rax],ah
   140015739:	add    BYTE PTR [rax+rax*1+0x72],al
   14001573d:	add    BYTE PTR [rdi+0x0],ch
   140015740:	jo     0x140015742
   140015742:	and    BYTE PTR [rax],al
   140015744:	(bad)  
   140015745:	add    BYTE PTR [rax],ah
   140015747:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001574b:	add    BYTE PTR [rax+0x0],bh
   14001574e:	je     0x140015750
   140015750:	and    BYTE PTR [rax],al
   140015752:	data16 add BYTE PTR [rcx+0x0],ch
   140015756:	ins    BYTE PTR es:[rdi],dx
   140015757:	add    BYTE PTR [rbp+0x0],ah
   14001575a:	and    BYTE PTR [rax],al
   14001575c:	push   0x72006500
   140015761:	add    BYTE PTR [rbp+0x0],ah
   140015764:	and    DWORD PTR [rax],eax
	...
   140015772:	add    BYTE PTR [rax],al
   140015774:	(bad)  
   140015775:	adc    BYTE PTR [rax],al
   140015777:	push   rax
   140015778:	or     BYTE PTR [rax],al
   14001577a:	verw   WORD PTR [rip+0xffffffffe8002a00]        # 0x128018181
   140015781:	add    eax,DWORD PTR [rax]
   140015783:	add    bh,bh
   140015785:	inc    DWORD PTR [rdx+0x0]
	...
   140015793:	add    BYTE PTR [rsi],cl
   140015795:	add    BYTE PTR [rax],al
   140015797:	push   rax
   140015798:	or     DWORD PTR [rax],eax
   14001579a:	adc    BYTE PTR [rax],al
   14001579c:	sub    eax,0xe9002a00
   1400157a1:	add    eax,DWORD PTR [rax]
   1400157a3:	add    bh,bh
   1400157a5:	inc    DWORD PTR [rdx+0x44004900]
   1400157ab:	add    BYTE PTR [rdx+0x0],al
   1400157ae:	pop    rdi
   1400157af:	add    BYTE PTR [rax+0x0],cl
   1400157b2:	add    BYTE PTR [r14+0x0],cl
   1400157b6:	add    BYTE PTR [rdi+0x0],r11b
   1400157ba:	add    BYTE PTR [rdx+0x0],r10b
   1400157be:	rex.WRXB add BYTE PTR [r8+0x0],r10b
	...
   1400157d2:	add    dl,BYTE PTR [rax+0x7]
   1400157d5:	add    BYTE PTR [rcx+0x0],cl
   1400157d8:	add    BYTE PTR fs:[rax],cl
   1400157db:	add    bl,ch
   1400157dd:	add    eax,DWORD PTR [rax]
   1400157df:	add    bh,bh
   1400157e1:	inc    DWORD PTR [rdx+0x69004600]
   1400157e7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400157eb:	add    BYTE PTR [rax],ah
   1400157ed:	add    BYTE PTR [rsi+0x0],ch
   1400157f0:	(bad)  
   1400157f1:	add    BYTE PTR [rbp+0x0],ch
   1400157f4:	add    BYTE PTR gs:[rdx],bh
	...
   140015803:	add    BYTE PTR [rax+0x15508100],al
   140015809:	add    BYTE PTR [rax+rax*1-0x1a],dl
   14001580d:	add    BYTE PTR [rsi],cl
   14001580f:	add    ah,ch
   140015811:	add    eax,DWORD PTR [rax]
   140015813:	add    bh,bh
   140015815:	inc    DWORD PTR [rcx+0x0]
	...
   140015823:	add    BYTE PTR [rcx],al
   140015825:	add    BYTE PTR [rcx],al
   140015827:	push   rax
   140015828:	std    
   140015829:	add    BYTE PTR [rax+rax*1+0x32],dl
   14001582d:	add    BYTE PTR [rsi],cl
   14001582f:	add    ch,ch
   140015831:	add    eax,DWORD PTR [rax]
   140015833:	add    bh,bh
   140015835:	inc    DWORD PTR [rax+0x72004200]
   14001583b:	add    BYTE PTR [rdi+0x0],ch
   14001583e:	ja     0x140015840
   140015840:	jae    0x140015842
   140015842:	add    BYTE PTR gs:[rax],al
   140015845:	add    BYTE PTR [rax],al
   140015847:	add    BYTE PTR [rax+0x0],al
   14001584a:	ror    BYTE PTR [rax+0x0],0x0
   14001584e:	add    BYTE PTR [rax],al
   140015850:	or     BYTE PTR [rax],al
   140015852:	add    BYTE PTR [rax],al
   140015854:	add    BYTE PTR [rax],al
   140015856:	cmp    eax,0x8f01
   14001585b:	add    BYTE PTR [rax],al
   14001585d:	add    BYTE PTR [rax],al
   14001585f:	add    BYTE PTR [rax],cl
   140015861:	add    BYTE PTR [rbp+0x0],cl
   140015864:	push   rbx
   140015865:	add    BYTE PTR [rax],ah
   140015867:	add    BYTE PTR [rbx+0x0],dl
   14001586a:	push   0x6c006500
   14001586f:	add    BYTE PTR [rax+rax*1+0x20],ch
   140015873:	add    BYTE PTR [rax+rax*1+0x6c],al
   140015877:	add    BYTE PTR [rdi+0x0],ah
   14001587a:	add    BYTE PTR [rax],al
   14001587c:	add    BYTE PTR [rax],al
   14001587e:	add    dl,BYTE PTR [rax+0x0]
   140015881:	add    BYTE PTR [rax],al
   140015883:	add    BYTE PTR [rdi],al
   140015885:	add    BYTE PTR [rbx],dl
   140015887:	add    BYTE PTR [rip+0xffffffffed000800],ah        # 0x12d01608d
   14001588d:	add    edi,edi
   14001588f:	inc    DWORD PTR [rdx+0x6f004400]
   140015895:	add    BYTE PTR [rbx+0x0],ah
   140015898:	jne    0x14001589a
   14001589a:	ins    DWORD PTR es:[rdi],dx
   14001589b:	add    BYTE PTR [rbp+0x0],ah
   14001589e:	outs   dx,BYTE PTR ds:[rsi]
   14001589f:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400158a3:	add    BYTE PTR [rax],al
   1400158a5:	add    BYTE PTR [rax],al
   1400158a7:	add    BYTE PTR [rax],al
   1400158a9:	add    BYTE PTR [rdx],al
   1400158ab:	push   rax
   1400158ac:	add    BYTE PTR [rax],al
   1400158ae:	add    BYTE PTR [rax],al
   1400158b0:	sub    al,0x0
   1400158b2:	adc    eax,DWORD PTR [rax]
   1400158b4:	or     al,BYTE PTR [rcx]
   1400158b6:	or     BYTE PTR [rax],al
   1400158b8:	out    dx,al
   1400158b9:	add    edi,edi
   1400158bb:	inc    DWORD PTR [rdx+0x0]
   1400158c1:	add    BYTE PTR [rax],al
   1400158c3:	add    BYTE PTR [rax],al
   1400158c5:	add    BYTE PTR [rdx],al
   1400158c7:	push   rax
   1400158c8:	add    BYTE PTR [rax],al
   1400158ca:	add    BYTE PTR [rax],al
   1400158cc:	(bad)  
   1400158cd:	add    BYTE PTR [rax+rax*1],ch
   1400158d0:	pop    rsi
   1400158d1:	add    BYTE PTR [rax],cl
   1400158d3:	add    bh,ch
   1400158d5:	add    edi,edi
   1400158d7:	inc    DWORD PTR [rdx+0x78004500]
   1400158dd:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400158e1:	add    BYTE PTR [rcx+0x0],ah
   1400158e4:	movsxd eax,DWORD PTR [rax]
   1400158e6:	je     0x1400158e8
   1400158e8:	and    BYTE PTR [rax],al
   1400158ea:	push   rax
   1400158eb:	add    BYTE PTR [rax+0x0],ch
   1400158ee:	jb     0x1400158f0
   1400158f0:	(bad)  
   1400158f1:	add    BYTE PTR [rbx+0x0],dh
   1400158f4:	add    BYTE PTR gs:[rbx+0x0],dh
   1400158f8:	add    BYTE PTR [rax],al
   1400158fa:	add    BYTE PTR [rax],al
   1400158fc:	add    BYTE PTR [rax],al
   1400158fe:	add    dl,BYTE PTR [rax+0x0]
   140015901:	add    BYTE PTR [rax],al
   140015903:	add    BYTE PTR [rdi],al
   140015905:	add    BYTE PTR [rbp+0x0],cl
   140015908:	jb     0x14001590a
   14001590a:	or     BYTE PTR [rax],al
   14001590c:	lock add edi,edi
   14001590f:	inc    DWORD PTR [rdx+0x65004c00]
   140015915:	add    BYTE PTR [rcx+0x0],ah
   140015918:	jb     0x14001591a
   14001591a:	outs   dx,BYTE PTR ds:[rsi]
   14001591b:	add    BYTE PTR [rax],ah
   14001591d:	add    BYTE PTR [rax+0x0],dl
   140015920:	push   0x61007200
   140015925:	add    BYTE PTR [rbx+0x0],dh
   140015928:	add    BYTE PTR gs:[rbx+0x0],dh
   14001592c:	add    BYTE PTR [rax],al
   14001592e:	add    BYTE PTR [rax],al
   140015930:	add    BYTE PTR [rax],al
   140015932:	adc    BYTE PTR [rax+0x0],0x0
   140015936:	add    BYTE PTR [rax],al
   140015938:	adc    al,0x0
   14001593a:	cmp    BYTE PTR [rax],al
   14001593c:	and    al,BYTE PTR [rcx]
   14001593e:	(bad)  
   14001593f:	add    bl,dh
   140015941:	add    ebp,DWORD PTR [rbp+0x0]
   140015944:	jae    0x140015946
   140015946:	movsxd eax,DWORD PTR [rax]
   140015948:	je     0x14001594a
   14001594a:	ins    BYTE PTR es:[rdi],dx
   14001594b:	add    BYTE PTR [rbx+0x0],dh
   14001594e:	pop    rdi
   14001594f:	add    BYTE PTR [rax+0x0],dh
   140015952:	jb     0x140015954
   140015954:	outs   dx,DWORD PTR ds:[rsi]
   140015955:	add    BYTE PTR [rdi+0x0],ah
   140015958:	jb     0x14001595a
   14001595a:	add    BYTE PTR gs:[rbx+0x0],dh
   14001595e:	jae    0x140015960
   140015960:	xor    eax,DWORD PTR [rax]
   140015962:	xor    al,BYTE PTR [rax]
   140015964:	add    BYTE PTR [rax],al
   140015966:	push   rax
   140015967:	add    BYTE PTR [rdx+0x0],dh
   14001596a:	outs   dx,DWORD PTR ds:[rsi]
   14001596b:	add    BYTE PTR [rdi+0x0],ah
   14001596e:	jb     0x140015970
   140015970:	add    BYTE PTR gs:[rbx+0x0],dh
   140015974:	jae    0x140015976
   140015976:	xor    DWORD PTR [rax],eax
   140015978:	add    BYTE PTR [rax],al
   14001597a:	add    BYTE PTR [rax],al
   14001597c:	add    BYTE PTR [rax],al
   14001597e:	adc    BYTE PTR [rax+0x0],0x0
   140015982:	add    BYTE PTR [rax],al
   140015984:	adc    al,0x0
   140015986:	pop    rdx
   140015987:	add    BYTE PTR [rdx],ah
   140015989:	add    DWORD PTR [rsi],ecx
   14001598b:	add    ah,dh
   14001598d:	add    ebp,DWORD PTR [rbp+0x0]
   140015990:	jae    0x140015992
   140015992:	movsxd eax,DWORD PTR [rax]
   140015994:	je     0x140015996
   140015996:	ins    BYTE PTR es:[rdi],dx
   140015997:	add    BYTE PTR [rbx+0x0],dh
   14001599a:	pop    rdi
   14001599b:	add    BYTE PTR [rax+0x0],dh
   14001599e:	jb     0x1400159a0
   1400159a0:	outs   dx,DWORD PTR ds:[rsi]
   1400159a1:	add    BYTE PTR [rdi+0x0],ah
   1400159a4:	jb     0x1400159a6
   1400159a6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400159aa:	jae    0x1400159ac
   1400159ac:	xor    eax,DWORD PTR [rax]
   1400159ae:	xor    al,BYTE PTR [rax]
   1400159b0:	add    BYTE PTR [rax],al
   1400159b2:	push   rax
   1400159b3:	add    BYTE PTR [rdx+0x0],dh
   1400159b6:	outs   dx,DWORD PTR ds:[rsi]
   1400159b7:	add    BYTE PTR [rdi+0x0],ah
   1400159ba:	jb     0x1400159bc
   1400159bc:	add    BYTE PTR gs:[rbx+0x0],dh
   1400159c0:	jae    0x1400159c2
   1400159c2:	xor    al,BYTE PTR [rax]
   1400159c4:	add    BYTE PTR [rax],al
   1400159c6:	add    BYTE PTR [rax],al
   1400159c8:	add    BYTE PTR [rax],al
   1400159ca:	add    dl,BYTE PTR [rax+0x0]
   1400159cd:	add    BYTE PTR [rax],al
   1400159cf:	add    BYTE PTR [rdi],al
   1400159d1:	add    BYTE PTR [rsi+0x0],ch
   1400159d4:	cmp    al,0x0
   1400159d6:	or     BYTE PTR [rax],al
   1400159d8:	icebp  
   1400159d9:	add    edi,edi
   1400159db:	inc    DWORD PTR [rdx+0x65005300]
   1400159e1:	add    BYTE PTR [rsi+0x0],ch
   1400159e4:	je     0x1400159e6
   1400159e6:	add    BYTE PTR gs:[rsi+0x0],ch
   1400159ea:	movsxd eax,DWORD PTR [rax]
   1400159ec:	add    BYTE PTR gs:[rax],ah
   1400159ef:	add    BYTE PTR [rax+0x0],dl
   1400159f2:	(bad)  
   1400159f3:	add    BYTE PTR [rdx+0x0],dh
   1400159f6:	jae    0x1400159f8
   1400159f8:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
	...
   140015a05:	add    BYTE PTR [rdx],al
   140015a07:	push   rax
   140015a08:	add    BYTE PTR [rax],al
   140015a0a:	add    BYTE PTR [rax],al
   140015a0c:	rex.XB add BYTE PTR [r14+0x0],bpl
   140015a10:	enter  0x800,0x0
   140015a14:	repnz add edi,edi
   140015a17:	inc    DWORD PTR [rdx+0x0]
   140015a1d:	add    BYTE PTR [rax],al
   140015a1f:	add    BYTE PTR [rax+0x0],al
   140015a22:	ror    BYTE PTR [rax+0x0],0x0
   140015a26:	add    BYTE PTR [rax],al
   140015a28:	add    DWORD PTR [rax],eax
   140015a2a:	add    BYTE PTR [rax],al
   140015a2c:	add    BYTE PTR [rax],al
   140015a2e:	cmp    eax,0x8f01
   140015a33:	add    BYTE PTR [rax],al
   140015a35:	add    BYTE PTR [rax],al
   140015a37:	add    BYTE PTR [rax],cl
   140015a39:	add    BYTE PTR [rbp+0x0],cl
   140015a3c:	push   rbx
   140015a3d:	add    BYTE PTR [rax],ah
   140015a3f:	add    BYTE PTR [rbx+0x0],dl
   140015a42:	push   0x6c006500
   140015a47:	add    BYTE PTR [rax+rax*1+0x20],ch
   140015a4b:	add    BYTE PTR [rax+rax*1+0x6c],al
   140015a4f:	add    BYTE PTR [rdi+0x0],ah
   140015a52:	add    BYTE PTR [rax],al
   140015a54:	add    BYTE PTR [rax],al
   140015a56:	add    dl,BYTE PTR [rax+0x0]
   140015a59:	add    BYTE PTR [rax],al
   140015a5b:	add    BYTE PTR [rdi],al
   140015a5d:	add    BYTE PTR [rdi],al
   140015a5f:	add    BYTE PTR [rax],bl
   140015a61:	add    DWORD PTR [rax],esp
   140015a63:	add    ch,dh
   140015a65:	add    edi,edi
   140015a67:	inc    DWORD PTR [rdx+0x65005200]
   140015a6d:	add    BYTE PTR [rdi+0x0],ah
   140015a70:	imul   eax,DWORD PTR [rax],0x740073
   140015a76:	add    BYTE PTR gs:[rdx+0x0],dh
   140015a7a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140015a7f:	add    BYTE PTR [rip+0x77002000],ch        # 0x1b7017a85
   140015a85:	add    BYTE PTR [rdi+0x0],ch
   140015a88:	jb     0x140015a8a
   140015a8a:	add    BYTE PTR fs:[rbx+0x0],dh
	...
   140015a96:	add    BYTE PTR [rax],al
   140015a98:	add    DWORD PTR [rax],eax
   140015a9a:	(bad)  
   140015a9b:	inc    DWORD PTR [rax]
   140015a9d:	add    BYTE PTR [rax],al
   140015a9f:	add    BYTE PTR [rax],al
   140015aa1:	add    BYTE PTR [rax],al
   140015aa3:	add    ah,cl
   140015aa5:	or     al,cl
   140015aa7:	nop
   140015aa8:	add    al,0x0
   140015aaa:	add    BYTE PTR [rax],al
   140015aac:	add    BYTE PTR [rax],al
   140015aae:	mov    cl,0x0
   140015ab0:	cmp    DWORD PTR [rax],eax
   140015ab2:	add    BYTE PTR [rax],al
   140015ab4:	add    BYTE PTR [rax],al
   140015ab6:	push   rsp
   140015ab7:	add    BYTE PTR [rbp+0x0],ah
   140015aba:	jb     0x140015abc
   140015abc:	ins    DWORD PTR es:[rdi],dx
   140015abd:	add    BYTE PTR [rcx+0x0],ch
   140015ac0:	outs   dx,BYTE PTR ds:[rsi]
   140015ac1:	add    BYTE PTR [rcx+0x0],ah
   140015ac4:	je     0x140015ac6
   140015ac6:	add    BYTE PTR gs:[rax],ah
   140015ac9:	add    BYTE PTR [rax+rax*1+0x65],cl
   140015acd:	add    BYTE PTR [rcx+0x0],ah
   140015ad0:	jb     0x140015ad2
   140015ad2:	outs   dx,BYTE PTR ds:[rsi]
   140015ad3:	add    BYTE PTR [rcx+0x0],ch
   140015ad6:	outs   dx,BYTE PTR ds:[rsi]
   140015ad7:	add    BYTE PTR [rdi+0x0],ah
   140015ada:	add    BYTE PTR [rax],al
   140015adc:	or     BYTE PTR [rax],al
   140015ade:	add    BYTE PTR [rax],al
   140015ae0:	add    BYTE PTR [rax],al
   140015ae2:	rex.WRB add BYTE PTR [r11+0x0],r10b
   140015ae6:	and    BYTE PTR [rax],al
   140015ae8:	push   rbx
   140015ae9:	add    BYTE PTR [rax+0x0],ch
   140015aec:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140015af1:	add    BYTE PTR [rax],ah
   140015af3:	add    BYTE PTR [rax+rax*1+0x6c],al
   140015af7:	add    BYTE PTR [rdi+0x0],ah
	...
   140015b02:	add    BYTE PTR [rax],al
   140015b04:	add    eax,DWORD PTR [rax]
   140015b06:	add    BYTE PTR [rax+0xa],dl
   140015b09:	add    BYTE PTR [rdx],cl
   140015b0b:	add    BYTE PTR [rax+rax*1],dl
   140015b0e:	adc    al,0x0
   140015b10:	clc    
   140015b11:	add    eax,DWORD PTR [rax]
   140015b13:	add    bh,bh
   140015b15:	inc    DWORD PTR [rdx+0x2ffff00]
   140015b1b:	jg     0x140015b1d
	...
   140015b29:	add    BYTE PTR [rdx],al
   140015b2b:	push   rax
   140015b2c:	and    al,0x0
   140015b2e:	or     al,BYTE PTR [rax]
   140015b30:	pop    QWORD PTR [rax]
   140015b32:	(bad)  
   140015b33:	add    cl,bh
   140015b35:	add    eax,DWORD PTR [rax]
   140015b37:	add    bh,bh
   140015b39:	inc    DWORD PTR [rdx+0x65005400]
   140015b3f:	add    BYTE PTR [rdx+0x0],dh
   140015b42:	ins    DWORD PTR es:[rdi],dx
   140015b43:	add    BYTE PTR [rcx+0x0],ch
   140015b46:	outs   dx,BYTE PTR ds:[rsi]
   140015b47:	add    BYTE PTR [rcx+0x0],ah
   140015b4a:	je     0x140015b4c
   140015b4c:	add    BYTE PTR gs:[rax],ah
   140015b4f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140015b53:	add    BYTE PTR [rcx+0x0],ah
   140015b56:	jb     0x140015b58
   140015b58:	outs   dx,BYTE PTR ds:[rsi]
   140015b59:	add    BYTE PTR [rcx+0x0],ch
   140015b5c:	outs   dx,BYTE PTR ds:[rsi]
   140015b5d:	add    BYTE PTR [rdi+0x0],ah
   140015b60:	and    BYTE PTR [rax],al
   140015b62:	jo     0x140015b64
   140015b64:	jb     0x140015b66
   140015b66:	outs   dx,DWORD PTR ds:[rsi]
   140015b67:	add    BYTE PTR [rbx+0x0],ah
   140015b6a:	add    BYTE PTR gs:[rbx+0x0],dh
   140015b6e:	jae    0x140015b70
   140015b70:	(bad)  
	...
   140015b81:	add    BYTE PTR [rcx],al
   140015b83:	push   rax
   140015b84:	and    al,0x0
   140015b86:	and    DWORD PTR [rax],eax
   140015b88:	xor    al,BYTE PTR [rax]
   140015b8a:	(bad)  
   140015b8b:	add    dh,dh
   140015b8d:	add    eax,DWORD PTR [rax]
   140015b8f:	add    bh,bh
   140015b91:	inc    DWORD PTR [rax+0x59002600]
   140015b97:	add    BYTE PTR [rbp+0x0],ah
   140015b9a:	jae    0x140015b9c
	...
   140015ba8:	add    DWORD PTR [rax],eax
   140015baa:	add    DWORD PTR [rax+0x5c],edx
   140015bad:	add    BYTE PTR [rcx],ah
   140015baf:	add    BYTE PTR [rdx],dh
   140015bb1:	add    BYTE PTR [rsi],cl
   140015bb3:	add    bh,dh
   140015bb5:	add    eax,DWORD PTR [rax]
   140015bb7:	add    bh,bh
   140015bb9:	inc    DWORD PTR [rax+0x4e002600]
   140015bbf:	add    BYTE PTR [rdi+0x0],ch
   140015bc2:	add    BYTE PTR [rax],al
   140015bc4:	add    BYTE PTR [rax],al
   140015bc6:	add    BYTE PTR [rax],al
   140015bc8:	add    DWORD PTR [rax],eax
   140015bca:	(bad)  
   140015bcb:	inc    DWORD PTR [rax]
   140015bcd:	add    BYTE PTR [rax],al
   140015bcf:	add    BYTE PTR [rax],al
   140015bd1:	add    BYTE PTR [rax],al
   140015bd3:	add    ah,cl
   140015bd5:	or     al,cl
   140015bd7:	nop
   140015bd8:	add    eax,DWORD PTR [rax]
   140015bda:	add    BYTE PTR [rax],al
   140015bdc:	add    BYTE PTR [rax],al
   140015bde:	mov    cl,0x0
   140015be0:	cmp    DWORD PTR [rax],eax
   140015be2:	add    BYTE PTR [rax],al
   140015be4:	add    BYTE PTR [rax],al
   140015be6:	rex.WR add BYTE PTR [rbp+0x0],r12b
   140015bea:	(bad)  
   140015beb:	add    BYTE PTR [rdx+0x0],dh
   140015bee:	outs   dx,BYTE PTR ds:[rsi]
   140015bef:	add    BYTE PTR [rcx+0x0],ch
   140015bf2:	outs   dx,BYTE PTR ds:[rsi]
   140015bf3:	add    BYTE PTR [rdi+0x0],ah
   140015bf6:	and    BYTE PTR [rax],al
   140015bf8:	push   rdi
   140015bf9:	add    BYTE PTR [rcx+0x0],ch
   140015bfc:	jp     0x140015bfe
   140015bfe:	(bad)  
   140015bff:	add    BYTE PTR [rdx+0x0],dh
   140015c02:	add    BYTE PTR fs:[rax],ah
   140015c05:	add    BYTE PTR [rcx+0x0],dl
   140015c08:	jne    0x140015c0a
   140015c0a:	imul   eax,DWORD PTR [rax],0x740074
   140015c10:	imul   eax,DWORD PTR [rax],0x67006e
   140015c16:	add    BYTE PTR [rax],al
   140015c18:	or     BYTE PTR [rax],al
   140015c1a:	add    BYTE PTR [rax],al
   140015c1c:	add    BYTE PTR [rax],al
   140015c1e:	rex.WRB add BYTE PTR [r11+0x0],r10b
   140015c22:	and    BYTE PTR [rax],al
   140015c24:	push   rbx
   140015c25:	add    BYTE PTR [rax+0x0],ch
   140015c28:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140015c2d:	add    BYTE PTR [rax],ah
   140015c2f:	add    BYTE PTR [rax+rax*1+0x6c],al
   140015c33:	add    BYTE PTR [rdi+0x0],ah
	...
   140015c3e:	add    BYTE PTR [rax],al
   140015c40:	add    eax,DWORD PTR [rax]
   140015c42:	add    BYTE PTR [rax+0xa],dl
   140015c45:	add    BYTE PTR [rdx],cl
   140015c47:	add    BYTE PTR [rip+0xfffffffff8001400],dl        # 0x13801704d
   140015c4d:	add    eax,DWORD PTR [rax]
   140015c4f:	add    bh,bh
   140015c51:	inc    DWORD PTR [rdx+0x4ffff00]
   140015c57:	jg     0x140015c59
	...
   140015c65:	add    BYTE PTR [rdx],al
   140015c67:	push   rax
   140015c68:	and    al,0x0
   140015c6a:	or     al,BYTE PTR [rax]
   140015c6c:	add    DWORD PTR [rax],0x16
   140015c6f:	add    dh,dh
   140015c71:	add    eax,DWORD PTR [rax]
   140015c73:	add    bh,bh
   140015c75:	inc    DWORD PTR [rdx+0x65004c00]
   140015c7b:	add    BYTE PTR [rcx+0x0],ah
   140015c7e:	jb     0x140015c80
   140015c80:	outs   dx,BYTE PTR ds:[rsi]
   140015c81:	add    BYTE PTR [rax],ah
   140015c83:	add    BYTE PTR [rdi+0x0],dl
   140015c86:	imul   eax,DWORD PTR [rax],0x61007a
   140015c8c:	jb     0x140015c8e
   140015c8e:	add    BYTE PTR fs:[rax],ah
   140015c91:	add    BYTE PTR [rcx+0x0],dh
   140015c94:	jne    0x140015c96
   140015c96:	imul   eax,DWORD PTR [rax],0x740074
   140015c9c:	imul   eax,DWORD PTR [rax],0x67006e
	...
   140015cae:	add    BYTE PTR [rax],al
   140015cb0:	add    DWORD PTR [rax],eax
   140015cb2:	add    DWORD PTR [rax+0x3f],edx
   140015cb5:	add    BYTE PTR [rcx],ah
   140015cb7:	add    BYTE PTR [rdx],dh
   140015cb9:	add    BYTE PTR [rsi],cl
   140015cbb:	add    ch,dh
   140015cbd:	add    eax,DWORD PTR [rax]
   140015cbf:	add    bh,bh
   140015cc1:	inc    DWORD PTR [rax+0x4f002600]
   140015cc7:	add    BYTE PTR [rbx+0x0],ch
	...
   140015cd2:	verr   WORD PTR [rcx+0x6b]
   140015cd6:	(bad)  
   140015cd7:	(bad)  
   140015cd8:	jg     0x140015d29
   140015cda:	sub    BYTE PTR [rbp-0x52],dh
   140015cdd:	pop    rdi
   140015cde:	fisttp WORD PTR [rsi-0x680c9318]
   140015ce4:	cmp    BYTE PTR [rdi+0x6cd55165],cl
   140015cea:	js     0x140015d47
   140015cec:	sar    BYTE PTR [rdi-0x42],cl
   140015cef:	jl     0x140015d39
   140015cf1:	xchg   edi,eax
   140015cf2:	sbb    DWORD PTR [rax],eax
   140015cf4:	js     0x140015d51
   140015cf6:	sar    BYTE PTR [rdi-0x42],cl
   140015cf9:	jl     0x140015d43
   140015cfb:	xchg   edi,eax
   140015cfc:	out    dx,eax
   140015cfd:	push   rbx
   140015cfe:	in     eax,0x4e
   140015d00:	jrcxz  0x140015c8b
   140015d02:	nop
   140015d03:	addr32 or eax,0x84540c4e
   140015d09:	jbe    0x140015c92
   140015d0b:	test   BYTE PTR gs:[rsi-0x1b],0x4e
   140015d10:	sahf   
   140015d11:	pop    rax
   140015d12:	movabs al,ds:0x496cd551658f3852
   140015d1b:	(bad)  
   140015d1c:	(bad)  [rbx-0x7c]
   140015d1f:	jbe    0x140015d84
   140015d21:	imul   edi,DWORD PTR [rdx+0x8602778],0x0
   140015d28:	jrcxz  0x140015cb3
   140015d2a:	nop
   140015d2b:	addr32 mov al,0x65
   140015d2e:	pop    rsi
   140015d2f:	mov    ch,BYTE PTR [rip+0x2e002e4e]        # 0x16e018b83
   140015d35:	add    BYTE PTR [rsi],ch
   140015d37:	add    BYTE PTR [rip+0x658b8000],cl        # 0x1a58cdd3d
   140015d3d:	push   rcx
   140015d3e:	xchg   esp,eax
   140015d3f:	push   0x48
   140015d41:	push   0xffffffff89e34e26
   140015d46:	nop
   140015d47:	addr32 mov al,0x65
   140015d4a:	pop    rsi
   140015d4b:	mov    ch,BYTE PTR [rip+0x2e002e4e]        # 0x16e018b9f
   140015d51:	add    BYTE PTR [rsi],ch
   140015d53:	add    BYTE PTR [rip+0xffffffffd25b7800],al        # 0x1125cd559
   140015d59:	jg     0x140015ce7
   140015d5b:	pop    rbx
   140015d5c:	(bad)  
   140015d5d:	jne    0x140015d60
   140015d5f:	dec    DWORD PTR [rbx]
   140015d61:	add    BYTE PTR [rsi-0x177120a1],ch
   140015d67:	ins    BYTE PTR es:[rdi],dx
   140015d68:	repz xchg edi,eax
   140015d6a:	cmp    BYTE PTR [rdi+0x6cd55165],cl
   140015d70:	js     0x140015dcd
   140015d72:	sar    BYTE PTR [rdi-0x42],cl
   140015d75:	jl     0x140015dbf
   140015d77:	xchg   edi,eax
   140015d78:	sub    eax,0x875c0700
   140015d7d:	test   BYTE PTR gs:[rsi-0x2a],0x62
   140015d82:	ds repz adc DWORD PTR gs:[rsi],0x16793a57
   140015d8b:	(bad)  
   140015d8c:	jg     0x140015ddd
   140015d8e:	sub    BYTE PTR [rbp+0xb],dh
   140015d91:	rex.WRX (bad) 
   140015d93:	xchg   edi,eax
   140015d94:	test   BYTE PTR [rsi+0xf],dh
   140015d97:	jo     0x140015d56
   140015d99:	mov    DWORD PTR [rcx],ecx
   140015d9b:	movsxd edx,DWORD PTR [rip+0xffffffffc7907892]        # 0x10791d633
   140015da1:	fs xchg esp,eax
   140015da3:	push   0x48
   140015da5:	push   0x5b783002
   140015daa:	sar    BYTE PTR [rdi-0x42],cl
   140015dad:	jl     0x140015df7
   140015daf:	xchg   edi,eax
   140015db0:	add    esp,DWORD PTR [rdi-0x16]
   140015db3:	adc    ebp,0x9089e352
   140015db9:	xchg   DWORD PTR [ebp-0xa],esp
   140015dbd:	rex.WRX or al,0xff
   140015dc0:	es rex.WRX js 0x140015e1f
   140015dc4:	sar    BYTE PTR [rdi+0x60],cl
   140015dc7:	rex.WRXB cmp BYTE PTR [r14+0x28],r11b
   140015dcb:	jne    0x140015d51
   140015dcd:	jbe    0x140015e2d
   140015dcf:	mov    bl,BYTE PTR [rcx+0x5f]
   140015dd2:	add    dh,BYTE PTR [rax]
   140015dd4:	add    eax,0x486a9400
   140015dd9:	push   0x7a31540d
   140015dde:	sbb    bh,bh
   140015de0:	or     DWORD PTR [rax],eax
   140015de2:	pshufw mm7,QWORD PTR [rbp+0x26002889],0x0
   140015dea:	rex.X add BYTE PTR [rcx],bpl
   140015ded:	add    BYTE PTR [rsi],ch
   140015def:	add    BYTE PTR [rsi],ch
   140015df1:	add    BYTE PTR [rsi],ch
   140015df3:	add    BYTE PTR [rbx],al
   140015df5:	add    BYTE PTR [rdi+0x1a4ef665],al
   140015dfb:	inc    DWORD PTR [rip+0xffffffffd4657400]        # 0x11466d201
   140015e01:	(bad)  
   140015e02:	xor    dl,BYTE PTR [rax-0xe5a15a]
   140015e08:	add    eax,0xf6658700
   140015e0d:	rex.WRX xor r10b,BYTE PTR [rax-0xe5a15a]
   140015e14:	sub    BYTE PTR [rax],al
   140015e16:	cmp    eax,0xe351717e
   140015e1b:	mov    DWORD PTR [rax+0x25002067],edx
   140015e21:	add    BYTE PTR [rax+rax*1+0x20],ah
   140015e25:	add    BYTE PTR [rbx],cl
   140015e27:	push   rax
   140015e28:	in     eax,0x53
   140015e2a:	push   rax
   140015e2b:	pop    rbx
   140015e2c:	or     al,0xff
   140015e2e:	mov    al,0x65
   140015e30:	lods   eax,DWORD PTR ds:[rsi]
   140015e31:	(bad)  
   140015e32:	pop    rcx
   140015e33:	pop    rdi
   140015e34:	and    BYTE PTR [rax],al
   140015e36:	and    eax,0x20006400
   140015e3b:	add    BYTE PTR [rbx],cl
   140015e3d:	push   rax
   140015e3e:	or     al,0xff
   140015e40:	sbb    BYTE PTR [rdx+0x209304],cl
   140015e46:	and    eax,0x20006400
   140015e4b:	add    BYTE PTR [rbx],cl
   140015e4d:	push   rax
   140015e4e:	mov    al,0x65
   140015e50:	pop    rsi
   140015e51:	mov    ch,BYTE PTR [rax]
   140015e53:	push   rdi
   140015e54:	jg     0x140015ea5
   140015e56:	sub    BYTE PTR [rbp+0x5],dh
   140015e59:	and    BYTE PTR [rax],0x90
   140015e5c:	pop    rsi
   140015e5d:	mov    ah,ch
   140015e5f:	pop    rbp
   140015e60:	ja     0x140015eb3
   140015e62:	sub    eax,0x730024e
   140015e67:	add    ch,ah
   140015e69:	push   rbx
   140015e6a:	push   rax
   140015e6b:	pop    rbx
   140015e6c:	jrcxz  0x140015df7
   140015e6e:	nop
   140015e6f:	addr32 cmp eax,0x1a65787e
   140015e75:	inc    DWORD PTR [rax]
   140015e77:	add    BYTE PTR [rcx+0x9624000],bh
   140015e7d:	addr32 out dx,eax
   140015e7f:	push   rbx
   140015e80:	in     eax,0x4e
   140015e82:	js     0x140015edf
   140015e84:	sar    BYTE PTR [rdi-0x7c],cl
   140015e87:	jbe    0x140015e1d
   140015e89:	push   0x48
   140015e8b:	push   0x280020
   140015e90:	sub    al,BYTE PTR [rax]
   140015e92:	add    BYTE PTR cs:[rax+rax*1+0x78],dh
   140015e97:	add    BYTE PTR [rax+rax*1+0x3b],dh
   140015e9b:	add    BYTE PTR [rax],ah
   140015e9d:	add    BYTE PTR [rdx],ch
   140015e9f:	add    BYTE PTR [rsi],ch
   140015ea1:	add    BYTE PTR [rax+0x0],ch
   140015ea4:	je     0x140015ea6
   140015ea6:	ins    DWORD PTR es:[rdi],dx
   140015ea7:	add    BYTE PTR [rbx],bh
   140015ea9:	add    BYTE PTR [rax],ah
   140015eab:	add    BYTE PTR [rdx],ch
   140015ead:	add    BYTE PTR [rsi],ch
   140015eaf:	add    BYTE PTR [rax+0x0],ch
   140015eb2:	je     0x140015eb4
   140015eb4:	ins    DWORD PTR es:[rdi],dx
   140015eb5:	add    BYTE PTR [rax+rax*1+0x3b],ch
   140015eb9:	add    BYTE PTR [rax],ah
   140015ebb:	add    BYTE PTR [rdx],ch
   140015ebd:	add    BYTE PTR [rsi],ch
   140015ebf:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140015ec3:	add    BYTE PTR [rbx+0x0],ah
   140015ec6:	cmp    eax,DWORD PTR [rax]
   140015ec8:	and    BYTE PTR [rax],al
   140015eca:	sub    al,BYTE PTR [rax]
   140015ecc:	add    BYTE PTR cs:[rdx+0x0],dh
   140015ed0:	je     0x140015ed2
   140015ed2:	data16 add BYTE PTR [rcx],ch
   140015ed5:	add    BYTE PTR [rax],al
   140015ed7:	add    BYTE PTR [rdx],ch
   140015ed9:	add    BYTE PTR [rsi],ch
   140015edb:	add    BYTE PTR [rax+rax*1+0x58],dl
   140015edf:	add    BYTE PTR [rax+rax*1+0x3b],dl
   140015ee3:	add    BYTE PTR [rdx],ch
   140015ee5:	add    BYTE PTR [rsi],ch
   140015ee7:	add    BYTE PTR [rax+0x0],cl
   140015eea:	push   rsp
   140015eeb:	add    BYTE PTR [rbp+0x0],cl
   140015eee:	cmp    eax,DWORD PTR [rax]
   140015ef0:	sub    al,BYTE PTR [rax]
   140015ef2:	add    BYTE PTR cs:[rax+0x0],cl
   140015ef6:	push   rsp
   140015ef7:	add    BYTE PTR [rbp+0x0],cl
   140015efa:	rex.WR add BYTE PTR [rbx],r15b
   140015efd:	add    BYTE PTR [rdx],ch
   140015eff:	add    BYTE PTR [rsi],ch
   140015f01:	add    BYTE PTR [rax+rax*1+0x4f],al
   140015f05:	add    BYTE PTR [rbx+0x0],al
   140015f08:	cmp    eax,DWORD PTR [rax]
   140015f0a:	sub    al,BYTE PTR [rax]
   140015f0c:	add    BYTE PTR cs:[rdx+0x0],dl
   140015f10:	push   rsp
   140015f11:	add    BYTE PTR [rsi+0x0],al
   140015f14:	add    BYTE PTR [rax],al
   140015f16:	adc    al,0x7d
   140015f18:	xchg   DWORD PTR [rbp+0x57],esp
   140015f1b:	pop    rbx
   140015f1c:	xchg   esp,eax
   140015f1d:	push   0x20
   140015f1f:	add    BYTE PTR [rax],ch
   140015f21:	add    BYTE PTR [rdx],ch
   140015f23:	add    BYTE PTR [rsi],ch
   140015f25:	add    BYTE PTR [rax+rax*1+0x78],dh
   140015f29:	add    BYTE PTR [rax+rax*1+0x29],dh
   140015f2d:	add    BYTE PTR [rax],al
   140015f2f:	add    BYTE PTR [rdx],ch
   140015f31:	add    BYTE PTR [rsi],ch
   140015f33:	add    BYTE PTR [rax+rax*1+0x58],dl
   140015f37:	add    BYTE PTR [rax+rax*1+0x0],dl
   140015f3b:	add    BYTE PTR [rdx+0x2098017d],dh
   140015f41:	add    BYTE PTR [rax],ch
   140015f43:	add    BYTE PTR [rdx],ch
   140015f45:	add    BYTE PTR [rsi],ch
   140015f47:	add    BYTE PTR [rax+0x0],ch
   140015f4a:	je     0x140015f4c
   140015f4c:	ins    DWORD PTR es:[rdi],dx
   140015f4d:	add    BYTE PTR [rbx],bh
   140015f4f:	add    BYTE PTR [rax],ah
   140015f51:	add    BYTE PTR [rdx],ch
   140015f53:	add    BYTE PTR [rsi],ch
   140015f55:	add    BYTE PTR [rax+0x0],ch
   140015f58:	je     0x140015f5a
   140015f5a:	ins    DWORD PTR es:[rdi],dx
   140015f5b:	add    BYTE PTR [rax+rax*1+0x29],ch
   140015f5f:	add    BYTE PTR [rax],al
   140015f61:	add    BYTE PTR [rdx],ch
   140015f63:	add    BYTE PTR [rsi],ch
   140015f65:	add    BYTE PTR [rax+0x0],cl
   140015f68:	push   rsp
   140015f69:	add    BYTE PTR [rbp+0x0],cl
   140015f6c:	cmp    eax,DWORD PTR [rax]
   140015f6e:	sub    al,BYTE PTR [rax]
   140015f70:	add    BYTE PTR cs:[rax+0x0],cl
   140015f74:	push   rsp
   140015f75:	add    BYTE PTR [rbp+0x0],cl
   140015f78:	rex.WR add BYTE PTR [rax],r8b
   140015f7b:	add    BYTE PTR [rdi+0x0],dl
   140015f7e:	outs   dx,DWORD PTR ds:[rsi]
   140015f7f:	add    BYTE PTR [rdx+0x0],dh
   140015f82:	add    BYTE PTR fs:[rax],ah
   140015f85:	add    BYTE PTR [rdi+0x204ef665],al
   140015f8b:	add    BYTE PTR [rax],ch
   140015f8d:	add    BYTE PTR [rdx],ch
   140015f8f:	add    BYTE PTR [rsi],ch
   140015f91:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140015f95:	add    BYTE PTR [rbx+0x0],ah
   140015f98:	sub    DWORD PTR [rax],eax
   140015f9a:	add    BYTE PTR [rax],al
   140015f9c:	sub    al,BYTE PTR [rax]
   140015f9e:	add    BYTE PTR cs:[rax+rax*1+0x4f],al
   140015fa3:	add    BYTE PTR [rbx+0x0],al
   140015fa6:	add    BYTE PTR [rax],al
   140015fa8:	push   rdx
   140015fa9:	add    BYTE PTR [rcx+0x0],ch
   140015fac:	movsxd eax,DWORD PTR [rax]
   140015fae:	push   0x54002000
   140015fb3:	add    BYTE PTR [rbp+0x0],ah
   140015fb6:	js     0x140015fb8
   140015fb8:	je     0x140015fba
   140015fba:	and    BYTE PTR [rax],al
   140015fbc:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140015fc0:	jb     0x140015fc2
   140015fc2:	ins    DWORD PTR es:[rdi],dx
   140015fc3:	add    BYTE PTR [rcx+0x0],ah
   140015fc6:	je     0x140015fc8
   140015fc8:	and    BYTE PTR [rax],al
   140015fca:	xchg   DWORD PTR [rbp+0x57],esp
   140015fcd:	pop    rbx
   140015fce:	xchg   esp,eax
   140015fcf:	push   0x20
   140015fd1:	add    BYTE PTR [rax],ch
   140015fd3:	add    BYTE PTR [rdx],ch
   140015fd5:	add    BYTE PTR [rsi],ch
   140015fd7:	add    BYTE PTR [rdx+0x0],dh
   140015fda:	je     0x140015fdc
   140015fdc:	data16 add BYTE PTR [rcx],ch
   140015fdf:	add    BYTE PTR [rax],al
   140015fe1:	add    BYTE PTR [rdx],ch
   140015fe3:	add    BYTE PTR [rsi],ch
   140015fe5:	add    BYTE PTR [rdx+0x0],dl
   140015fe8:	push   rsp
   140015fe9:	add    BYTE PTR [rsi+0x0],al
   140015fec:	or     BYTE PTR [rax],al
   140015fee:	xchg   esp,eax
   140015fef:	push   0x48
   140015ff1:	push   0x7a31540d
   140015ff6:	or     eax,0xba6b634e
   140015ffb:	js     0x140015ffe
   140015ffd:	jmp    QWORD PTR [rcx]
   140015fff:	add    BYTE PTR [rsi+0x62],bh
   140016002:	or     eax,0x9452304e
   140016007:	push   0x48
   140016009:	push   0x730025
   14001600e:	or     al,0xff
   140016010:	retf   
   140016011:	mov    bh,BYTE PTR [rdx-0x6ba46588]
   140016017:	push   0x48
   140016019:	push   0x7a31540d
   14001601e:	movsxd ebp,DWORD PTR [rbx-0x46]
   140016021:	js     0x14001602f
   140016023:	call   QWORD PTR [rsi+rcx*2]
   140016026:	xchg   edx,eax
   140016027:	ins    BYTE PTR es:[rdi],dx
   140016028:	or     DWORD PTR [rdi+0x76],esp
   14001602b:	push   rcx
   14001602c:	(bad)  
   14001602d:	rex.WRX fisttp WORD PTR [rsi+0x6b639ad4]
   140016034:	sub    BYTE PTR [rdi+0x7f],dl
   140016037:	rex.WRXB sub BYTE PTR [r13+0x64],r14b
   14001603b:	imul   edx,DWORD PTR [rdx+rbp*2+0x30026848],0x14
   140016043:	add    BYTE PTR [rip+0x980fd4e],cl        # 0x149825d97
   140016049:	(bad)  
   14001604a:	gs push rcx
   14001604c:	and    BYTE PTR [rax],al
   14001604e:	push   rdx
   14001604f:	add    BYTE PTR [rax+rax*1+0x46],dl
   140016053:	add    BYTE PTR [rax+0x0],dl
   140016056:	(bad)  
   140016057:	add    BYTE PTR [rdx+0x0],dh
   14001605a:	jae    0x14001605c
   14001605c:	add    BYTE PTR gs:[rdx+0x0],dh
   140016060:	add    BYTE PTR cs:[rax+rax*1+0x4c],al
   140016065:	add    BYTE PTR [rax+rax*1+0x20],cl
   140016069:	add    BYTE PTR [rcx],al
   14001606b:	inc    DWORD PTR [rax+0x0]
   14001606e:	or     DWORD PTR [rdi+0x0],esp
   140016071:	rex.WRX or r10,QWORD PTR [rax-0x1b]
   140016075:	rex.WRX or r9b,BYTE PTR [rsi-0x7c]
   140016079:	jbe    0x14001600f
   14001607b:	push   0x48
   14001607d:	push   0xffffffff985e7a2e
   140016082:	or     eax,0xf4652f4e
   140016087:	movsxd eax,DWORD PTR [rcx]
   140016089:	dec    DWORD PTR [rdx]
   14001608b:	add    BYTE PTR [rax+0x5b],bh
   14001608e:	sar    BYTE PTR [rdi-0x42],cl
   140016091:	jl     0x1400160db
   140016093:	xchg   edi,eax
   140016094:	rex (bad) 
   140016096:	(bad)  
   140016097:	gs hlt 
   140016099:	movsxd eax,DWORD PTR [rsi+rsi*2+0x53056a94]
   1400160a0:	in     al,dx
   1400160a1:	(bad)  
   1400160a2:	and    BYTE PTR [rax],al
   1400160a4:	sub    al,BYTE PTR [rax]
   1400160a6:	add    BYTE PTR cs:[rax+rax*1+0x78],dh
   1400160ab:	add    BYTE PTR [rax+rax*1+0x2c],dh
   1400160af:	add    BYTE PTR [rax],ah
   1400160b1:	add    BYTE PTR [rdx],ch
   1400160b3:	add    BYTE PTR [rsi],ch
   1400160b5:	add    BYTE PTR [rax+0x0],ch
   1400160b8:	je     0x1400160ba
   1400160ba:	ins    DWORD PTR es:[rdi],dx
   1400160bb:	add    BYTE PTR [rax+rax*1],ch
   1400160be:	and    BYTE PTR [rax],al
   1400160c0:	sub    al,BYTE PTR [rax]
   1400160c2:	add    BYTE PTR cs:[rax+0x0],ch
   1400160c6:	je     0x1400160c8
   1400160c8:	ins    DWORD PTR es:[rdi],dx
   1400160c9:	add    BYTE PTR [rax+rax*1+0x2c],ch
   1400160cd:	add    BYTE PTR [rax],ah
   1400160cf:	add    BYTE PTR [rdx],ch
   1400160d1:	add    BYTE PTR [rsi],ch
   1400160d3:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400160d7:	add    BYTE PTR [rbx+0x0],ah
   1400160da:	sub    al,0x0
   1400160dc:	and    BYTE PTR [rax],al
   1400160de:	mov    WORD PTR [rax+riz*1+0x0],ss
   1400160e2:	sub    al,BYTE PTR [rax]
   1400160e4:	add    BYTE PTR cs:[rdx+0x0],dh
   1400160e8:	je     0x1400160ea
   1400160ea:	data16 add BYTE PTR [rdx],al
   1400160ed:	xor    BYTE PTR [rbx],al
   1400160ef:	add    BYTE PTR [rdi],ch
   1400160f1:	xchg   ebx,eax
   1400160f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400160f3:	mov    ah,BYTE PTR [rcx]
   1400160f5:	add    BYTE PTR [rsi],bl
   1400160f7:	add    BYTE PTR [rcx],cl
   1400160f9:	add    BYTE PTR [esi+0xb],cl
   1400160fd:	push   rax
   1400160fe:	in     eax,0x4e
   140016100:	or     cl,BYTE PTR [rsi-0x7c]
   140016103:	jbe    0x140016099
   140016105:	push   0x48
   140016107:	push   0x6cd57121
   14001610c:	mov    edx,DWORD PTR [rbp-0xf3aaa1]
   140016112:	retf   
   140016113:	mov    cl,BYTE PTR [rcx]
   140016115:	movsxd edi,DWORD PTR [rdx+0x7c5b9a78]
   14001611b:	jle    0x1400160a9
   14001611d:	jle    0x140016145
   14001611f:	rex.WRX movabs rdx,0x94670962408a8d78
   140016129:	push   0xd
   14001612b:	push   rsp
   14001612c:	std    
   14001612d:	nop
   14001612e:	or     DWORD PTR [rdi+0x48],esp
   140016131:	add    dh,BYTE PTR gs:[rax]
   140016134:	(bad)  
   140016135:	add    BYTE PTR [rdx+rbp*2+0x540d6848],dl
   14001613c:	xor    DWORD PTR [rdx+0x77],edi
   14001613f:	xchg   ebp,eax
   140016140:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016141:	pop    rsi
   140016142:	test   DWORD PTR [rbp+0x2551fa],ecx
   140016148:	add    BYTE PTR fs:[rbx],cl
   14001614b:	push   rax
   14001614c:	push   rdi
   14001614d:	pop    rbx
   14001614e:	rex.XB push r9
   140016150:	or     al,0xff
   140016152:	add    esp,DWORD PTR [rdi+0x2a]
   140016155:	push   rdx
   140016156:	fs xchg esi,eax
   140016158:	test   DWORD PTR [rbp+0x4e4b51fa],ecx
   14001615e:	xchg   esp,eax
   14001615f:	push   0xd
   140016161:	push   rsp
   140016162:	add    dh,BYTE PTR [rax]
   140016164:	add    al,BYTE PTR [rax]
   140016166:	mov    edx,0x28a8d78
   14001616b:	add    BYTE PTR [rbx+rbx*2+0xc6210],cl
   140016172:	js     0x1400161cf
   140016174:	sar    BYTE PTR [rdi+0x30],cl
   140016177:	push   rdx
   140016178:	and    BYTE PTR [rax],al
   14001617a:	and    eax,0x20006400
   14001617f:	add    BYTE PTR [rbx],cl
   140016181:	push   rax
   140016182:	mov    al,0x65
   140016184:	lods   eax,DWORD PTR ds:[rsi]
   140016185:	(bad)  
   140016186:	pop    rcx
   140016187:	pop    rdi
   140016188:	add    dh,BYTE PTR [rax]
   14001618a:	sub    BYTE PTR [rax],al
   14001618c:	jne    0x1400161de
   14001618e:	sub    al,0x6e
   140016190:	xor    BYTE PTR [rdx-0x30],dl
   140016193:	addr32 fwait
   140016195:	rex.WRX pop rsi
   140016197:	mov    bh,BYTE PTR [rip+0xfffffffff265787e]        # 0x13266da1b
   14001619d:	pop    rbp
   14001619e:	xor    BYTE PTR [rdx+0x54],dl
   1400161a1:	nop
   1400161a2:	add    BYTE PTR [rdi+0x27],ah
   1400161a5:	pop    rcx
   1400161a6:	push   r9
   1400161a8:	xor    DWORD PTR [rdx+0x76ee6578],ecx
   1400161ae:	and    eax,0xc006400
   1400161b3:	inc    DWORD PTR [rdx-0x738183a7]
   1400161b9:	jle    0x14001623a
   1400161bb:	rex.WRXB sub BYTE PTR [r13+0x78],r14b
   1400161bf:	pop    rbx
   1400161c0:	sar    BYTE PTR [rdi-0x42],cl
   1400161c3:	jl     0x14001620d
   1400161c5:	xchg   edi,eax
   1400161c6:	or     al,0xff
   1400161c8:	or     DWORD PTR [rdi-0x11],esp
   1400161cb:	push   rbx
   1400161cc:	std    
   1400161cd:	and    BYTE PTR [rcx],0x71
   1400161d0:	(bad)  
   1400161d1:	ins    BYTE PTR es:[rdi],dx
   1400161d2:	adc    BYTE PTR [rdx-0x61],ah
   1400161d5:	push   rdx
   1400161d6:	js     0x140016233
   1400161d8:	sar    BYTE PTR [rdi+0x2],cl
   1400161db:	xor    BYTE PTR [rax],dl
   1400161dd:	add    BYTE PTR [rsi+rsi*2+0x1f],bh
   1400161e1:	jne    0x140016197
   1400161e3:	push   rsi
   1400161e4:	int    0x91
   1400161e6:	(bad)  
   1400161e7:	xchg   ebx,eax
   1400161e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400161e9:	mov    cl,BYTE PTR [rdi+rdi*8]
   1400161ec:	and    DWORD PTR [rcx-0x2b],esi
   1400161ef:	ins    BYTE PTR es:[rdi],dx
   1400161f0:	pop    rdi
   1400161f1:	push   rbp
   1400161f2:	(bad)  
   1400161f3:	push   rdx
   1400161f4:	js     0x140016251
   1400161f6:	sar    BYTE PTR [rdi-0x42],cl
   1400161f9:	jl     0x140016243
   1400161fb:	xchg   edi,eax
   1400161fc:	add    dh,BYTE PTR [rax]
   1400161fe:	(bad)  
   1400161ff:	add    BYTE PTR [rsi+rsi*2+0x1f],bh
   140016203:	jne    0x14001626c
   140016205:	push   rcx
   140016206:	call   0xe494919b
   14001620b:	mov    cl,BYTE PTR [rdi+rdi*8]
   14001620e:	(bad)  
   14001620f:	xchg   ebx,eax
   140016210:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016211:	mov    ah,bl
   140016213:	rex.WRX movabs rsp,0x130020003a70ba78
   14001621d:	add    BYTE PTR [rax-0x296f87a0],ch
   140016223:	push   rbx
   140016224:	rex.WRX xchg rax,rax
   140016226:	sbb    bl,BYTE PTR [rcx-0x6c]
   140016229:	push   0x48
   14001622b:	push   0xffffffff8acbff0c
   140016230:	sbb    ebp,DWORD PTR [rsi+0x11]
   140016233:	pop    rsp
   140016234:	js     0x1400161c6
   140016236:	(bad)  
   140016237:	push   rbx
   140016238:	js     0x14001629f
   14001623a:	iret   
   14001623b:	xchg   ecx,eax
   14001623c:	es rex.WRX int 0x91
   140016240:	data16 mov al,BYTE PTR [rdx]
   140016243:	xor    BYTE PTR [rax],cl
   140016245:	add    BYTE PTR [rbx],cl
   140016247:	rex.WRX add BYTE PTR [rsi+0x65],r9b
   14001624b:	imul   ebp,DWORD PTR [rax],0x0
   14001624e:	add    BYTE PTR es:[rsi+0x0],cl
   140016252:	sub    DWORD PTR [rax],eax
   140016254:	add    BYTE PTR ds:[rax],al
   140016257:	add    BYTE PTR [rdx],al
   140016259:	add    dh,dl
   14001625b:	push   rbx
   14001625c:	mov    BYTE PTR [rbp+0x0],ch
	...
   14001627f:	add    BYTE PTR [rax],al
   140016281:	add    BYTE PTR [rip+0x65005700],ch        # 0x1a501b987
   140016287:	add    BYTE PTR [rax+rax*1+0x63],ch
   14001628b:	add    BYTE PTR [rdi+0x0],ch
   14001628e:	ins    DWORD PTR es:[rdi],dx
   14001628f:	add    BYTE PTR [rbp+0x0],ah
   140016292:	and    BYTE PTR [rax],al
   140016294:	je     0x140016296
   140016296:	outs   dx,DWORD PTR ds:[rsi]
   140016297:	add    BYTE PTR [rax],ah
   140016299:	add    BYTE PTR [rbp+0x0],cl
   14001629c:	imul   eax,DWORD PTR [rax],0x720063
   1400162a2:	outs   dx,DWORD PTR ds:[rsi]
   1400162a3:	add    BYTE PTR [rbx+0x0],dh
   1400162a6:	outs   dx,DWORD PTR ds:[rsi]
   1400162a7:	add    BYTE PTR [rsi+0x0],ah
   1400162aa:	je     0x1400162ac
   1400162ac:	and    BYTE PTR [rax],al
   1400162ae:	rex.X add BYTE PTR [rdi+0x0],bpl
   1400162b2:	jo     0x1400162b4
   1400162b4:	outs   dx,DWORD PTR ds:[rsi]
   1400162b5:	add    BYTE PTR [rbp+0x0],ch
   1400162b8:	outs   dx,DWORD PTR ds:[rsi]
   1400162b9:	add    BYTE PTR [rsi+0x0],ah
   1400162bc:	outs   dx,DWORD PTR ds:[rsi]
   1400162bd:	add    BYTE PTR [rax],ah
   1400162bf:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400162c3:	add    BYTE PTR [rcx+0x0],ah
   1400162c6:	jb     0x1400162c8
   1400162c8:	outs   dx,BYTE PTR ds:[rsi]
   1400162c9:	add    BYTE PTR [rcx+0x0],ch
   1400162cc:	outs   dx,BYTE PTR ds:[rsi]
   1400162cd:	add    BYTE PTR [rdi+0x0],ah
   1400162d0:	and    BYTE PTR [rax],al
   1400162d2:	push   rdi
   1400162d3:	add    BYTE PTR [rcx+0x0],ch
   1400162d6:	jp     0x1400162d8
   1400162d8:	(bad)  
   1400162d9:	add    BYTE PTR [rdx+0x0],dh
   1400162dc:	add    BYTE PTR fs:[rbx+0x0],dl
   1400162e0:	rex.WR add BYTE PTR [rbp+0x0],r12b
   1400162e4:	(bad)  
   1400162e5:	add    BYTE PTR [rdx+0x0],dh
   1400162e8:	outs   dx,BYTE PTR ds:[rsi]
   1400162e9:	add    BYTE PTR [rcx+0x0],ch
   1400162ec:	outs   dx,BYTE PTR ds:[rsi]
   1400162ed:	add    BYTE PTR [rdi+0x0],ah
   1400162f0:	and    BYTE PTR [rax],al
   1400162f2:	ja     0x1400162f4
   1400162f4:	imul   eax,DWORD PTR [rax],0x61007a
   1400162fa:	jb     0x1400162fc
   1400162fc:	add    BYTE PTR fs:[rax],ah
   1400162ff:	add    BYTE PTR [rcx+0x0],ah
   140016302:	outs   dx,BYTE PTR ds:[rsi]
   140016303:	add    BYTE PTR [rcx+0x0],ah
   140016306:	ins    BYTE PTR es:[rdi],dx
   140016307:	add    BYTE PTR [rcx+0x0],bh
   14001630a:	jp     0x14001630c
   14001630c:	add    BYTE PTR gs:[rbx+0x0],dh
   140016310:	and    BYTE PTR [rax],al
   140016312:	(bad)  
   140016313:	add    BYTE PTR [rax],ah
   140016315:	add    BYTE PTR [rsi+0x0],dh
   140016318:	(bad)  
   140016319:	add    BYTE PTR [rdx+0x0],dh
   14001631c:	imul   eax,DWORD PTR [rax],0x740065
   140016322:	jns    0x140016324
   140016324:	and    BYTE PTR [rax],al
   140016326:	outs   dx,DWORD PTR ds:[rsi]
   140016327:	add    BYTE PTR [rsi+0x0],ah
   14001632a:	and    BYTE PTR [rax],al
   14001632c:	add    BYTE PTR fs:[rdi+0x0],ch
   140016330:	movsxd eax,DWORD PTR [rax]
   140016332:	jne    0x140016334
   140016334:	ins    DWORD PTR es:[rdi],dx
   140016335:	add    BYTE PTR [rbp+0x0],ah
   140016338:	outs   dx,BYTE PTR ds:[rsi]
   140016339:	add    BYTE PTR [rax+rax*1+0x73],dh
   14001633d:	add    BYTE PTR [rax],ah
   14001633f:	add    BYTE PTR [rsi+0x0],ah
   140016342:	outs   dx,DWORD PTR ds:[rsi]
   140016343:	add    BYTE PTR [rdx+0x0],dh
   140016346:	and    BYTE PTR [rax],al
   140016348:	imul   eax,DWORD PTR [rax],0x63006e
   14001634e:	jb     0x140016350
   140016350:	add    BYTE PTR gs:[rcx+0x0],ah
   140016354:	jae    0x140016356
   140016356:	imul   eax,DWORD PTR [rax],0x67006e
   14001635c:	and    BYTE PTR [rax],al
   14001635e:	movsxd eax,DWORD PTR [rax]
   140016360:	outs   dx,DWORD PTR ds:[rsi]
   140016361:	add    BYTE PTR [rsi+0x0],ch
   140016364:	jbe    0x140016366
   140016366:	add    BYTE PTR gs:[rdx+0x0],dh
   14001636a:	jae    0x14001636c
   14001636c:	imul   eax,DWORD PTR [rax],0x6e006f
   140016372:	and    BYTE PTR [rax],al
   140016374:	(bad)  
   140016375:	add    BYTE PTR [rbx+0x0],ah
   140016378:	movsxd eax,DWORD PTR [rax]
   14001637a:	jne    0x14001637c
   14001637c:	jb     0x14001637e
   14001637e:	(bad)  
   14001637f:	add    BYTE PTR [rbx+0x0],ah
   140016382:	jns    0x140016384
   140016384:	add    BYTE PTR cs:[rcx],bl
   140016387:	add    BYTE PTR [rbp+0x0],al
   14001638a:	js     0x14001638c
   14001638c:	je     0x14001638e
   14001638e:	jb     0x140016390
   140016390:	(bad)  
   140016391:	add    BYTE PTR [rbx+0x0],ah
   140016394:	je     0x140016396
   140016396:	imul   eax,DWORD PTR [rax],0x67006e
   14001639c:	and    BYTE PTR [rax],al
   14001639e:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   1400163a2:	ja     0x1400163a4
   1400163a4:	and    BYTE PTR [rax],al
   1400163a6:	push   rax
   1400163a7:	add    BYTE PTR [rax+0x0],ch
   1400163aa:	jb     0x1400163ac
   1400163ac:	(bad)  
   1400163ad:	add    BYTE PTR [rbx+0x0],dh
   1400163b0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400163b4:	add    BYTE PTR cs:[rsi],ch
   1400163b7:	add    BYTE PTR [rsi],ch
   1400163b9:	add    BYTE PTR [rbx],bh
   1400163bb:	add    BYTE PTR [rdx+0x0],dl
   1400163be:	add    BYTE PTR gs:[rcx+0x0],ah
   1400163c2:	add    BYTE PTR fs:[rcx+0x0],ch
   1400163c6:	outs   dx,BYTE PTR ds:[rsi]
   1400163c7:	add    BYTE PTR [rdi+0x0],ah
   1400163ca:	and    BYTE PTR [rax],al
   1400163cc:	add    BYTE PTR fs:[rdi+0x0],ch
   1400163d0:	movsxd eax,DWORD PTR [rax]
   1400163d2:	jne    0x1400163d4
   1400163d4:	ins    DWORD PTR es:[rdi],dx
   1400163d5:	add    BYTE PTR [rbp+0x0],ah
   1400163d8:	outs   dx,BYTE PTR ds:[rsi]
   1400163d9:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400163dd:	add    BYTE PTR [rcx+0x0],ah
   1400163e0:	outs   dx,BYTE PTR ds:[rsi]
   1400163e1:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400163e5:	add    BYTE PTR [rbp+0x0],ah
   1400163e8:	js     0x1400163ea
   1400163ea:	je     0x1400163ec
   1400163ec:	jb     0x1400163ee
   1400163ee:	(bad)  
   1400163ef:	add    BYTE PTR [rbx+0x0],ah
   1400163f2:	je     0x1400163f4
   1400163f4:	imul   eax,DWORD PTR [rax],0x67006e
   1400163fa:	and    BYTE PTR [rax],al
   1400163fc:	outs   dx,BYTE PTR ds:[rsi]
   1400163fd:	add    BYTE PTR [rbp+0x0],ah
   140016400:	ja     0x140016402
   140016402:	and    BYTE PTR [rax],al
   140016404:	jo     0x140016406
   140016406:	push   0x61007200
   14001640b:	add    BYTE PTR [rbx+0x0],dh
   14001640e:	add    BYTE PTR gs:[rbx+0x0],dh
   140016412:	sub    al,0x0
   140016414:	and    BYTE PTR [rax],al
   140016416:	jo     0x140016418
   140016418:	ins    BYTE PTR es:[rdi],dx
   140016419:	add    BYTE PTR [rbp+0x0],ah
   14001641c:	(bad)  
   14001641d:	add    BYTE PTR [rbx+0x0],dh
   140016420:	add    BYTE PTR gs:[rax],ah
   140016423:	add    BYTE PTR [rdi+0x0],dh
   140016426:	(bad)  
   140016427:	add    BYTE PTR [rcx+0x0],ch
   14001642a:	je     0x14001642c
   14001642c:	add    BYTE PTR cs:[rsi],ch
   14001642f:	add    BYTE PTR [rsi],ch
   140016431:	add    BYTE PTR [rdx],dl
   140016433:	add    BYTE PTR [rax+rax*1+0x65],cl
   140016437:	add    BYTE PTR [rcx+0x0],ah
   14001643a:	jb     0x14001643c
   14001643c:	outs   dx,BYTE PTR ds:[rsi]
   14001643d:	add    BYTE PTR [rcx+0x0],ch
   140016440:	outs   dx,BYTE PTR ds:[rsi]
   140016441:	add    BYTE PTR [rdi+0x0],ah
   140016444:	and    BYTE PTR [rax],al
   140016446:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001644a:	ins    DWORD PTR es:[rdi],dx
   14001644b:	add    BYTE PTR [rax+0x0],dh
   14001644e:	ins    BYTE PTR es:[rdi],dx
   14001644f:	add    BYTE PTR [rbp+0x0],ah
   140016452:	je     0x140016454
   140016454:	add    BYTE PTR gs:[rcx],ah
   140016457:	add    BYTE PTR [rdx],ah
   140016459:	add    BYTE PTR [rbp+0x0],cl
   14001645c:	imul   eax,DWORD PTR [rax],0x720063
   140016462:	outs   dx,DWORD PTR ds:[rsi]
   140016463:	add    BYTE PTR [rbx+0x0],dh
   140016466:	outs   dx,DWORD PTR ds:[rsi]
   140016467:	add    BYTE PTR [rsi+0x0],ah
   14001646a:	je     0x14001646c
   14001646c:	and    BYTE PTR [rax],al
   14001646e:	rex.X add BYTE PTR [rdi+0x0],bpl
   140016472:	jo     0x140016474
   140016474:	outs   dx,DWORD PTR ds:[rsi]
   140016475:	add    BYTE PTR [rbp+0x0],ch
   140016478:	outs   dx,DWORD PTR ds:[rsi]
   140016479:	add    BYTE PTR [rsi+0x0],ah
   14001647c:	outs   dx,DWORD PTR ds:[rsi]
   14001647d:	add    BYTE PTR [rax],ah
   14001647f:	add    BYTE PTR [rax+rax*1+0x65],cl
   140016483:	add    BYTE PTR [rcx+0x0],ah
   140016486:	jb     0x140016488
   140016488:	outs   dx,BYTE PTR ds:[rsi]
   140016489:	add    BYTE PTR [rcx+0x0],ch
   14001648c:	outs   dx,BYTE PTR ds:[rsi]
   14001648d:	add    BYTE PTR [rdi+0x0],ah
   140016490:	and    BYTE PTR [rax],al
   140016492:	push   rdi
   140016493:	add    BYTE PTR [rcx+0x0],ch
   140016496:	jp     0x140016498
   140016498:	(bad)  
   140016499:	add    BYTE PTR [rdx+0x0],dh
   14001649c:	add    BYTE PTR fs:[rax+0x72004400],bl
   1400164a3:	add    BYTE PTR [rdi+0x0],ch
   1400164a6:	jo     0x1400164a8
   1400164a8:	and    BYTE PTR [rax],al
   1400164aa:	(bad)  
   1400164ab:	add    BYTE PTR [rax],ah
   1400164ad:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400164b1:	add    BYTE PTR [rbx+0x0],ah
   1400164b4:	jne    0x1400164b6
   1400164b6:	ins    DWORD PTR es:[rdi],dx
   1400164b7:	add    BYTE PTR [rbp+0x0],ah
   1400164ba:	outs   dx,BYTE PTR ds:[rsi]
   1400164bb:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400164bf:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400164c3:	add    BYTE PTR [rax],ah
   1400164c5:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400164c9:	add    BYTE PTR [rbp+0x0],ah
   1400164cc:	and    BYTE PTR [rax],al
   1400164ce:	imul   eax,DWORD PTR [rax],0x6f0063
   1400164d4:	outs   dx,BYTE PTR ds:[rsi]
   1400164d5:	add    BYTE PTR [rax],ah
   1400164d7:	add    BYTE PTR [rdi+0x0],ch
   1400164da:	jb     0x1400164dc
   1400164dc:	and    BYTE PTR [rax],al
   1400164de:	jns    0x1400164e0
   1400164e0:	outs   dx,DWORD PTR ds:[rsi]
   1400164e1:	add    BYTE PTR [rbp+0x0],dh
   1400164e4:	and    BYTE PTR [rax],al
   1400164e6:	movsxd eax,DWORD PTR [rax]
   1400164e8:	outs   dx,DWORD PTR ds:[rsi]
   1400164e9:	add    BYTE PTR [rbp+0x0],dh
   1400164ec:	ins    BYTE PTR es:[rdi],dx
   1400164ed:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400164f1:	add    BYTE PTR [rbp+0x0],dh
   1400164f4:	jae    0x1400164f6
   1400164f6:	add    BYTE PTR gs:[rax],ah
   1400164f9:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400164fd:	add    BYTE PTR [rbp+0x0],ah
   140016500:	and    BYTE PTR [rax],al
   140016502:	rex.X add BYTE PTR [rdx+0x0],sil
   140016506:	outs   dx,DWORD PTR ds:[rsi]
   140016507:	add    BYTE PTR [rdi+0x0],dh
   14001650a:	jae    0x14001650c
   14001650c:	add    BYTE PTR gs:[rax],ah
   14001650f:	add    BYTE PTR [rdx+0x0],ah
   140016512:	jne    0x140016514
   140016514:	je     0x140016516
   140016516:	je     0x140016518
   140016518:	outs   dx,DWORD PTR ds:[rsi]
   140016519:	add    BYTE PTR [rsi+0x0],ch
   14001651c:	and    BYTE PTR [rax],al
   14001651e:	(bad)  
   14001651f:	add    BYTE PTR [rbp+0x0],ah
   140016522:	ins    BYTE PTR es:[rdi],dx
   140016523:	add    BYTE PTR [rdi+0x0],ch
   140016526:	ja     0x140016528
   140016528:	and    BYTE PTR [rax],al
   14001652a:	je     0x14001652c
   14001652c:	outs   dx,DWORD PTR ds:[rsi]
   14001652d:	add    BYTE PTR [rax],ah
   14001652f:	add    BYTE PTR [rbx+0x0],dh
   140016532:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140016537:	add    BYTE PTR [rbx+0x0],ah
   14001653a:	je     0x14001653c
   14001653c:	and    BYTE PTR [rax],al
   14001653e:	data16 add BYTE PTR [rcx+0x0],ch
   140016542:	ins    BYTE PTR es:[rdi],dx
   140016543:	add    BYTE PTR [rbp+0x0],ah
   140016546:	sub    BYTE PTR [rax],al
   140016548:	jae    0x14001654a
   14001654a:	sub    DWORD PTR [rax],eax
   14001654c:	add    BYTE PTR cs:[rax],ah
   14001654f:	add    BYTE PTR [rax+rax*1+0x65],cl
   140016553:	add    BYTE PTR [rcx+0x0],ah
   140016556:	jb     0x140016558
   140016558:	outs   dx,BYTE PTR ds:[rsi]
   140016559:	add    BYTE PTR [rcx+0x0],ch
   14001655c:	outs   dx,BYTE PTR ds:[rsi]
   14001655d:	add    BYTE PTR [rdi+0x0],ah
   140016560:	and    BYTE PTR [rax],al
   140016562:	push   rdi
   140016563:	add    BYTE PTR [rcx+0x0],ch
   140016566:	jp     0x140016568
   140016568:	(bad)  
   140016569:	add    BYTE PTR [rdx+0x0],dh
   14001656c:	add    BYTE PTR fs:[rax],ah
   14001656f:	add    BYTE PTR [rdi+0x0],dh
   140016572:	imul   eax,DWORD PTR [rax],0x6c006c
   140016578:	and    BYTE PTR [rax],al
   14001657a:	add    BYTE PTR gs:[rax+0x0],bh
   14001657e:	je     0x140016580
   140016580:	jb     0x140016582
   140016582:	(bad)  
   140016583:	add    BYTE PTR [rbx+0x0],ah
   140016586:	je     0x140016588
   140016588:	and    BYTE PTR [rax],al
   14001658a:	je     0x14001658c
   14001658c:	push   0x20006500
   140016591:	add    BYTE PTR [rsi+0x0],ah
   140016594:	jb     0x140016596
   140016596:	add    BYTE PTR gs:[rcx+0x0],dh
   14001659a:	jne    0x14001659c
   14001659c:	add    BYTE PTR gs:[rsi+0x0],ch
   1400165a0:	je     0x1400165a2
   1400165a2:	and    BYTE PTR [rax],al
   1400165a4:	jo     0x1400165a6
   1400165a6:	push   0x61007200
   1400165ab:	add    BYTE PTR [rbx+0x0],dh
   1400165ae:	add    BYTE PTR gs:[rbx+0x0],dh
   1400165b2:	and    BYTE PTR [rax],al
   1400165b4:	(bad)  
   1400165b5:	add    BYTE PTR [rbp+0x0],dh
   1400165b8:	je     0x1400165ba
   1400165ba:	outs   dx,DWORD PTR ds:[rsi]
   1400165bb:	add    BYTE PTR [rbp+0x0],ch
   1400165be:	(bad)  
   1400165bf:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400165c3:	add    BYTE PTR [rbx+0x0],ah
   1400165c6:	(bad)  
   1400165c7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400165cb:	add    BYTE PTR [rcx+0x0],bh
   1400165ce:	add    BYTE PTR cs:[rdx],cl
   1400165d1:	add    BYTE PTR [rsi+0x0],al
   1400165d4:	imul   eax,DWORD PTR [rax],0x65006c
   1400165da:	and    BYTE PTR [rax],al
   1400165dc:	outs   dx,BYTE PTR ds:[rsi]
   1400165dd:	add    BYTE PTR [rcx+0x0],ah
   1400165e0:	ins    DWORD PTR es:[rdi],dx
   1400165e1:	add    BYTE PTR [rbp+0x0],ah
   1400165e4:	cmp    al,BYTE PTR [rax]
   1400165e6:	or     al,BYTE PTR [rax]
   1400165e8:	add    BYTE PTR es:[rdx+0x0],al
   1400165ec:	jb     0x1400165ee
   1400165ee:	outs   dx,DWORD PTR ds:[rsi]
   1400165ef:	add    BYTE PTR [rdi+0x0],dh
   1400165f2:	jae    0x1400165f4
   1400165f4:	add    BYTE PTR gs:[rsi],ch
   1400165f7:	add    BYTE PTR [rsi],ch
   1400165f9:	add    BYTE PTR [rsi],ch
   1400165fb:	add    BYTE PTR [rcx],cl
   1400165fd:	add    BYTE PTR [rax+rax*1+0x6f],al
   140016601:	add    BYTE PTR [rbx+0x0],ah
   140016604:	jne    0x140016606
   140016606:	ins    DWORD PTR es:[rdi],dx
   140016607:	add    BYTE PTR [rbp+0x0],ah
   14001660a:	outs   dx,BYTE PTR ds:[rsi]
   14001660b:	add    BYTE PTR [rax+rax*1+0x3a],dh
   14001660f:	add    BYTE PTR [rdi],cl
   140016611:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140016615:	add    BYTE PTR [rax+rax*1+0x61],dh
   140016619:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001661d:	add    BYTE PTR [rax+0x0],dl
   140016620:	jb     0x140016622
   140016622:	outs   dx,DWORD PTR ds:[rsi]
   140016623:	add    BYTE PTR [rdi+0x0],ah
   140016626:	jb     0x140016628
   140016628:	add    BYTE PTR gs:[rbx+0x0],dh
   14001662c:	jae    0x14001662e
   14001662e:	cmp    al,BYTE PTR [rax]
   140016630:	adc    al,BYTE PTR [rax]
   140016632:	add    BYTE PTR [rdi+0x0],r13b
   140016636:	movsxd eax,DWORD PTR [rax]
   140016638:	jne    0x14001663a
   14001663a:	ins    DWORD PTR es:[rdi],dx
   14001663b:	add    BYTE PTR [rbp+0x0],ah
   14001663e:	outs   dx,BYTE PTR ds:[rsi]
   14001663f:	add    BYTE PTR [rax+rax*1+0x20],dh
   140016643:	add    BYTE PTR [rax+0x0],dl
   140016646:	jb     0x140016648
   140016648:	outs   dx,DWORD PTR ds:[rsi]
   140016649:	add    BYTE PTR [rdi+0x0],ah
   14001664c:	jb     0x14001664e
   14001664e:	add    BYTE PTR gs:[rbx+0x0],dh
   140016652:	jae    0x140016654
   140016654:	cmp    al,BYTE PTR [rax]
   140016656:	pop    rdi
   140016657:	add    BYTE PTR [rax+0x0],dl
   14001665a:	(bad)  
   14001665b:	add    BYTE PTR [rdx+0x0],dh
   14001665e:	jae    0x140016660
   140016660:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140016665:	add    BYTE PTR [rip+0x20006400],ah        # 0x16001ca6b
   14001666b:	add    BYTE PTR [rbx+0x0],dh
   14001666e:	add    BYTE PTR gs:[rsi+0x0],ch
   140016672:	je     0x140016674
   140016674:	add    BYTE PTR gs:[rsi+0x0],ch
   140016678:	movsxd eax,DWORD PTR [rax]
   14001667a:	add    BYTE PTR gs:[rbx+0x0],dh
   14001667e:	sub    al,0x0
   140016680:	and    BYTE PTR [rax],al
   140016682:	add    BYTE PTR gs:[rax+0x0],bh
   140016686:	je     0x140016688
   140016688:	jb     0x14001668a
   14001668a:	(bad)  
   14001668b:	add    BYTE PTR [rbx+0x0],ah
   14001668e:	je     0x140016690
   140016690:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140016695:	add    BYTE PTR [rip+0x20006400],ah        # 0x16001ca9b
   14001669b:	add    BYTE PTR [rax+0x0],dh
   14001669e:	push   0x61007200
   1400166a3:	add    BYTE PTR [rbx+0x0],dh
   1400166a6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400166aa:	sub    al,0x0
   1400166ac:	and    BYTE PTR [rax],al
   1400166ae:	(bad)  
   1400166af:	add    BYTE PTR [rsi+0x0],ch
   1400166b2:	add    BYTE PTR fs:[rax],ah
   1400166b5:	add    BYTE PTR [rbx+0x0],dh
   1400166b8:	(bad)  
   1400166b9:	add    BYTE PTR [rsi+0x0],dh
   1400166bc:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400166c1:	add    BYTE PTR [rip+0x20006400],ah        # 0x16001cac7
   1400166c7:	add    BYTE PTR [rdi+0x0],ch
   1400166ca:	data16 add BYTE PTR [rax],ah
   1400166cd:	add    BYTE PTR [rsi+0x0],ch
   1400166d0:	add    BYTE PTR gs:[rdi+0x0],dh
   1400166d4:	and    BYTE PTR [rax],al
   1400166d6:	jo     0x1400166d8
   1400166d8:	push   0x61007200
   1400166dd:	add    BYTE PTR [rbx+0x0],dh
   1400166e0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400166e4:	and    BYTE PTR [rax],al
   1400166e6:	imul   eax,DWORD PTR [rax],0x74006e
   1400166ec:	outs   dx,DWORD PTR ds:[rsi]
   1400166ed:	add    BYTE PTR [rax],ah
   1400166ef:	add    BYTE PTR [rbp+0x0],al
   1400166f2:	push   rbp
   1400166f3:	add    BYTE PTR [rax+rax*1+0x50],al
   1400166f7:	add    BYTE PTR [rax],ah
   1400166f9:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400166fd:	add    BYTE PTR [rdi+0x0],ch
   140016700:	ins    BYTE PTR es:[rdi],dx
   140016701:	add    BYTE PTR [rax],ah
   140016703:	add    BYTE PTR [rcx+0x0],ch
   140016706:	outs   dx,BYTE PTR ds:[rsi]
   140016707:	add    BYTE PTR [rax],ah
   140016709:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14001670d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140016711:	add    BYTE PTR [rax+rax*1+0x2e],ch
   140016715:	add    BYTE PTR [rax],dl
   140016717:	add    BYTE PTR [rbx+0x0],dl
   14001671a:	add    BYTE PTR gs:[rsi+0x0],ch
   14001671e:	je     0x140016720
   140016720:	add    BYTE PTR gs:[rsi+0x0],ch
   140016724:	movsxd eax,DWORD PTR [rax]
   140016726:	add    BYTE PTR gs:[rax],ah
   140016729:	add    BYTE PTR [rax+0x0],dl
   14001672c:	(bad)  
   14001672d:	add    BYTE PTR [rdx+0x0],dh
   140016730:	jae    0x140016732
   140016732:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
	...
   14001673f:	add    bl,dl
   140016741:	add    BYTE PTR [rcx+0x0],al
   140016744:	ins    BYTE PTR es:[rdi],dx
   140016745:	add    BYTE PTR [rax+rax*1+0x20],ch
   140016749:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001674d:	add    BYTE PTR [rcx+0x0],ah
   140016750:	jb     0x140016752
   140016752:	outs   dx,BYTE PTR ds:[rsi]
   140016753:	add    BYTE PTR [rax],ah
   140016755:	add    BYTE PTR [rdi+0x0],dl
   140016758:	imul   eax,DWORD PTR [rax],0x61007a
   14001675e:	jb     0x140016760
   140016760:	add    BYTE PTR fs:[rax],ah
   140016763:	add    BYTE PTR [rsi+0x0],ah
   140016766:	imul   eax,DWORD PTR [rax],0x65006c
   14001676c:	jae    0x14001676e
   14001676e:	and    BYTE PTR [rax],al
   140016770:	sub    BYTE PTR [rax],al
   140016772:	sub    al,BYTE PTR [rax]
   140016774:	add    BYTE PTR cs:[rax+rax*1+0x78],dh
   140016779:	add    BYTE PTR [rax+rax*1+0x3b],dh
   14001677d:	add    BYTE PTR [rax],ah
   14001677f:	add    BYTE PTR [rdx],ch
   140016781:	add    BYTE PTR [rsi],ch
   140016783:	add    BYTE PTR [rax+0x0],ch
   140016786:	je     0x140016788
   140016788:	ins    DWORD PTR es:[rdi],dx
   140016789:	add    BYTE PTR [rbx],bh
   14001678b:	add    BYTE PTR [rax],ah
   14001678d:	add    BYTE PTR [rdx],ch
   14001678f:	add    BYTE PTR [rsi],ch
   140016791:	add    BYTE PTR [rax+0x0],ch
   140016794:	je     0x140016796
   140016796:	ins    DWORD PTR es:[rdi],dx
   140016797:	add    BYTE PTR [rax+rax*1+0x3b],ch
   14001679b:	add    BYTE PTR [rax],ah
   14001679d:	add    BYTE PTR [rdx],ch
   14001679f:	add    BYTE PTR [rsi],ch
   1400167a1:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400167a5:	add    BYTE PTR [rbx+0x0],ah
   1400167a8:	cmp    eax,DWORD PTR [rax]
   1400167aa:	and    BYTE PTR [rax],al
   1400167ac:	sub    al,BYTE PTR [rax]
   1400167ae:	add    BYTE PTR cs:[rdx+0x0],dh
   1400167b2:	je     0x1400167b4
   1400167b4:	data16 add BYTE PTR [rcx],ch
   1400167b7:	add    BYTE PTR [rax],al
   1400167b9:	add    BYTE PTR [rdx],ch
   1400167bb:	add    BYTE PTR [rsi],ch
   1400167bd:	add    BYTE PTR [rax+rax*1+0x58],dl
   1400167c1:	add    BYTE PTR [rax+rax*1+0x3b],dl
   1400167c5:	add    BYTE PTR [rdx],ch
   1400167c7:	add    BYTE PTR [rsi],ch
   1400167c9:	add    BYTE PTR [rax+0x0],cl
   1400167cc:	push   rsp
   1400167cd:	add    BYTE PTR [rbp+0x0],cl
   1400167d0:	cmp    eax,DWORD PTR [rax]
   1400167d2:	sub    al,BYTE PTR [rax]
   1400167d4:	add    BYTE PTR cs:[rax+0x0],cl
   1400167d8:	push   rsp
   1400167d9:	add    BYTE PTR [rbp+0x0],cl
   1400167dc:	rex.WR add BYTE PTR [rbx],r15b
   1400167df:	add    BYTE PTR [rdx],ch
   1400167e1:	add    BYTE PTR [rsi],ch
   1400167e3:	add    BYTE PTR [rax+rax*1+0x4f],al
   1400167e7:	add    BYTE PTR [rbx+0x0],al
   1400167ea:	cmp    eax,DWORD PTR [rax]
   1400167ec:	sub    al,BYTE PTR [rax]
   1400167ee:	add    BYTE PTR cs:[rdx+0x0],dl
   1400167f2:	push   rsp
   1400167f3:	add    BYTE PTR [rsi+0x0],al
   1400167f6:	add    BYTE PTR [rax],al
   1400167f8:	push   rsp
   1400167f9:	add    BYTE PTR [rbp+0x0],ah
   1400167fc:	js     0x1400167fe
   1400167fe:	je     0x140016800
   140016800:	and    BYTE PTR [rax],al
   140016802:	data16 add BYTE PTR [rcx+0x0],ch
   140016806:	ins    BYTE PTR es:[rdi],dx
   140016807:	add    BYTE PTR [rbp+0x0],ah
   14001680a:	and    BYTE PTR [rax],al
   14001680c:	sub    BYTE PTR [rax],al
   14001680e:	sub    al,BYTE PTR [rax]
   140016810:	add    BYTE PTR cs:[rax+rax*1+0x78],dh
   140016815:	add    BYTE PTR [rax+rax*1+0x29],dh
   140016819:	add    BYTE PTR [rax],al
   14001681b:	add    BYTE PTR [rdx],ch
   14001681d:	add    BYTE PTR [rsi],ch
   14001681f:	add    BYTE PTR [rax+rax*1+0x58],dl
   140016823:	add    BYTE PTR [rax+rax*1+0x0],dl
   140016827:	add    BYTE PTR [rdi+0x0],dl
   14001682a:	add    BYTE PTR gs:[rdx+0x0],ah
   14001682e:	and    BYTE PTR [rax],al
   140016830:	jo     0x140016832
   140016832:	(bad)  
   140016833:	add    BYTE PTR [rdi+0x0],ah
   140016836:	add    BYTE PTR gs:[rax],ah
   140016839:	add    BYTE PTR [rax],ch
   14001683b:	add    BYTE PTR [rdx],ch
   14001683d:	add    BYTE PTR [rsi],ch
   14001683f:	add    BYTE PTR [rax+0x0],ch
   140016842:	je     0x140016844
   140016844:	ins    DWORD PTR es:[rdi],dx
   140016845:	add    BYTE PTR [rbx],bh
   140016847:	add    BYTE PTR [rax],ah
   140016849:	add    BYTE PTR [rdx],ch
   14001684b:	add    BYTE PTR [rsi],ch
   14001684d:	add    BYTE PTR [rax+0x0],ch
   140016850:	je     0x140016852
   140016852:	ins    DWORD PTR es:[rdi],dx
   140016853:	add    BYTE PTR [rax+rax*1+0x29],ch
   140016857:	add    BYTE PTR [rax],al
   140016859:	add    BYTE PTR [rdx],ch
   14001685b:	add    BYTE PTR [rsi],ch
   14001685d:	add    BYTE PTR [rax+0x0],cl
   140016860:	push   rsp
   140016861:	add    BYTE PTR [rbp+0x0],cl
   140016864:	cmp    eax,DWORD PTR [rax]
   140016866:	sub    al,BYTE PTR [rax]
   140016868:	add    BYTE PTR cs:[rax+0x0],cl
   14001686c:	push   rsp
   14001686d:	add    BYTE PTR [rbp+0x0],cl
   140016870:	rex.WR add BYTE PTR [rax],r8b
   140016873:	add    BYTE PTR [rdi+0x0],dl
   140016876:	outs   dx,DWORD PTR ds:[rsi]
   140016877:	add    BYTE PTR [rdx+0x0],dh
   14001687a:	add    BYTE PTR fs:[rax],ah
   14001687d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140016881:	add    BYTE PTR [rbx+0x0],ah
   140016884:	jne    0x140016886
   140016886:	ins    DWORD PTR es:[rdi],dx
   140016887:	add    BYTE PTR [rbp+0x0],ah
   14001688a:	outs   dx,BYTE PTR ds:[rsi]
   14001688b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001688f:	add    BYTE PTR [rax],ch
   140016891:	add    BYTE PTR [rdx],ch
   140016893:	add    BYTE PTR [rsi],ch
   140016895:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140016899:	add    BYTE PTR [rbx+0x0],ah
   14001689c:	sub    DWORD PTR [rax],eax
   14001689e:	add    BYTE PTR [rax],al
   1400168a0:	sub    al,BYTE PTR [rax]
   1400168a2:	add    BYTE PTR cs:[rax+rax*1+0x4f],al
   1400168a7:	add    BYTE PTR [rbx+0x0],al
   1400168aa:	add    BYTE PTR [rax],al
   1400168ac:	push   rdx
   1400168ad:	add    BYTE PTR [rcx+0x0],ch
   1400168b0:	movsxd eax,DWORD PTR [rax]
   1400168b2:	push   0x54002000
   1400168b7:	add    BYTE PTR [rbp+0x0],ah
   1400168ba:	js     0x1400168bc
   1400168bc:	je     0x1400168be
   1400168be:	and    BYTE PTR [rax],al
   1400168c0:	rex.RX add BYTE PTR [rdi+0x0],r13b
   1400168c4:	jb     0x1400168c6
   1400168c6:	ins    DWORD PTR es:[rdi],dx
   1400168c7:	add    BYTE PTR [rcx+0x0],ah
   1400168ca:	je     0x1400168cc
   1400168cc:	and    BYTE PTR [rax],al
   1400168ce:	sub    BYTE PTR [rax],al
   1400168d0:	sub    al,BYTE PTR [rax]
   1400168d2:	add    BYTE PTR cs:[rdx+0x0],dh
   1400168d6:	je     0x1400168d8
   1400168d8:	data16 add BYTE PTR [rcx],ch
   1400168db:	add    BYTE PTR [rax],al
   1400168dd:	add    BYTE PTR [rdx],ch
   1400168df:	add    BYTE PTR [rsi],ch
   1400168e1:	add    BYTE PTR [rdx+0x0],dl
   1400168e4:	push   rsp
   1400168e5:	add    BYTE PTR [rsi+0x0],al
   1400168e8:	adc    al,BYTE PTR [rax]
   1400168ea:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400168ee:	jbe    0x1400168f0
   1400168f0:	(bad)  
   1400168f1:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400168f5:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400168f9:	add    BYTE PTR [rsi+0x0],ah
   1400168fc:	imul   eax,DWORD PTR [rax],0x65006c
   140016902:	and    BYTE PTR [rax],al
   140016904:	outs   dx,BYTE PTR ds:[rsi]
   140016905:	add    BYTE PTR [rcx+0x0],ah
   140016908:	ins    DWORD PTR es:[rdi],dx
   140016909:	add    BYTE PTR [rbp+0x0],ah
   14001690c:	and    DWORD PTR [rax],eax
   14001690e:	jne    0x140016910
   140016910:	rex.XB add BYTE PTR [r9+0x0],spl
   140016914:	outs   dx,BYTE PTR ds:[rsi]
   140016915:	add    BYTE PTR [rax],ah
   140016917:	add    BYTE PTR [rsi+0x0],cl
   14001691a:	rex.WRXB add BYTE PTR [r8+r8*1+0x20],r10b
   14001691f:	add    BYTE PTR [rsi+0x0],ah
   140016922:	imul   eax,DWORD PTR [rax],0x64006e
   140016928:	and    BYTE PTR [rax],al
   14001692a:	data16 add BYTE PTR [rcx+0x0],ch
   14001692e:	ins    BYTE PTR es:[rdi],dx
   14001692f:	add    BYTE PTR [rbp+0x0],ah
   140016932:	and    BYTE PTR [rax],al
   140016934:	and    eax,0x2e007300
   140016939:	add    BYTE PTR [rax],ah
   14001693b:	add    BYTE PTR [rax],ah
   14001693d:	add    BYTE PTR [rax+0x0],dl
   140016940:	ins    BYTE PTR es:[rdi],dx
   140016941:	add    BYTE PTR [rbp+0x0],ah
   140016944:	(bad)  
   140016945:	add    BYTE PTR [rbx+0x0],dh
   140016948:	add    BYTE PTR gs:[rax],ah
   14001694b:	add    BYTE PTR [rbp+0x0],ch
   14001694e:	(bad)  
   14001694f:	add    BYTE PTR [rbx+0x0],ch
   140016952:	add    BYTE PTR gs:[rax],ah
   140016955:	add    BYTE PTR [rbx+0x0],dh
   140016958:	jne    0x14001695a
   14001695a:	jb     0x14001695c
   14001695c:	add    BYTE PTR gs:[rax],ah
   14001695f:	add    BYTE PTR [rax+rax*1+0x68],dh
   140016963:	add    BYTE PTR [rbp+0x0],ah
   140016966:	and    BYTE PTR [rax],al
   140016968:	data16 add BYTE PTR [rcx+0x0],ch
   14001696c:	ins    BYTE PTR es:[rdi],dx
   14001696d:	add    BYTE PTR [rbp+0x0],ah
   140016970:	and    BYTE PTR [rax],al
   140016972:	outs   dx,BYTE PTR ds:[rsi]
   140016973:	add    BYTE PTR [rcx+0x0],ah
   140016976:	ins    DWORD PTR es:[rdi],dx
   140016977:	add    BYTE PTR [rbp+0x0],ah
   14001697a:	and    BYTE PTR [rax],al
   14001697c:	imul   eax,DWORD PTR [rax],0x200073
   140016982:	movsxd eax,DWORD PTR [rax]
   140016984:	outs   dx,DWORD PTR ds:[rsi]
   140016985:	add    BYTE PTR [rdx+0x0],dh
   140016988:	jb     0x14001698a
   14001698a:	add    BYTE PTR gs:[rbx+0x0],ah
   14001698e:	je     0x140016990
   140016990:	and    BYTE PTR [rax],al
   140016992:	(bad)  
   140016993:	add    BYTE PTR [rsi+0x0],ch
   140016996:	add    BYTE PTR fs:[rax],ah
   140016999:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001699d:	add    BYTE PTR [rbp+0x0],ah
   1400169a0:	and    BYTE PTR [rax],al
   1400169a2:	data16 add BYTE PTR [rcx+0x0],ch
   1400169a6:	ins    BYTE PTR es:[rdi],dx
   1400169a7:	add    BYTE PTR [rbp+0x0],ah
   1400169aa:	and    BYTE PTR [rax],al
   1400169ac:	imul   eax,DWORD PTR [rax],0x200073
   1400169b2:	outs   dx,BYTE PTR ds:[rsi]
   1400169b3:	add    BYTE PTR [rdi+0x0],ch
   1400169b6:	je     0x1400169b8
   1400169b8:	and    BYTE PTR [rax],al
   1400169ba:	movsxd eax,DWORD PTR [rax]
   1400169bc:	jne    0x1400169be
   1400169be:	jb     0x1400169c0
   1400169c0:	jb     0x1400169c2
   1400169c2:	add    BYTE PTR gs:[rsi+0x0],ch
   1400169c6:	je     0x1400169c8
   1400169c8:	ins    BYTE PTR es:[rdi],dx
   1400169c9:	add    BYTE PTR [rcx+0x0],bh
   1400169cc:	and    BYTE PTR [rax],al
   1400169ce:	jne    0x1400169d0
   1400169d0:	jae    0x1400169d2
   1400169d2:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400169d7:	add    BYTE PTR [rdx+0x0],ah
   1400169da:	jns    0x1400169dc
   1400169dc:	and    BYTE PTR [rax],al
   1400169de:	outs   dx,DWORD PTR ds:[rsi]
   1400169df:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400169e3:	add    BYTE PTR [rbp+0x0],ah
   1400169e6:	jb     0x1400169e8
   1400169e8:	and    BYTE PTR [rax],al
   1400169ea:	jo     0x1400169ec
   1400169ec:	jb     0x1400169ee
   1400169ee:	outs   dx,DWORD PTR ds:[rsi]
   1400169ef:	add    BYTE PTR [rdi+0x0],ah
   1400169f2:	jb     0x1400169f4
   1400169f4:	(bad)  
   1400169f5:	add    BYTE PTR [rbp+0x0],ch
   1400169f8:	add    BYTE PTR cs:[rip+0x6f004300],bl        # 0x1af01acff
   1400169ff:	add    BYTE PTR [rbp+0x0],dh
   140016a02:	ins    BYTE PTR es:[rdi],dx
   140016a03:	add    BYTE PTR [rax+rax*1+0x20],ah
   140016a07:	add    BYTE PTR [rsi+0x0],cl
   140016a0a:	rex.WRXB add BYTE PTR [r8+r8*1+0x20],r10b
   140016a0f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140016a13:	add    BYTE PTR [rcx+0x0],ah
   140016a16:	add    BYTE PTR fs:[rax],ah
   140016a19:	add    BYTE PTR [rdx+0x0],dl
   140016a1c:	push   rsp
   140016a1d:	add    BYTE PTR [rsi+0x0],al
   140016a20:	push   rax
   140016a21:	add    BYTE PTR [rcx+0x0],ah
   140016a24:	jb     0x140016a26
   140016a26:	jae    0x140016a28
   140016a28:	add    BYTE PTR gs:[rdx+0x0],dh
   140016a2c:	add    BYTE PTR cs:[rax+rax*1+0x4c],al
   140016a31:	add    BYTE PTR [rax+rax*1+0x21],cl
   140016a35:	add    BYTE PTR [rbp+0x0],ch
   140016a38:	add    BYTE PTR [r8+rax*1+0x20],sil
   140016a3d:	add    BYTE PTR [rax+rax*1+0x65],ch
   140016a41:	add    BYTE PTR [rcx+0x0],ah
   140016a44:	jae    0x140016a46
   140016a46:	je     0x140016a48
   140016a48:	and    BYTE PTR [rax],al
   140016a4a:	xor    DWORD PTR [rax],eax
   140016a4c:	and    BYTE PTR [rax],al
   140016a4e:	data16 add BYTE PTR [rcx+0x0],ch
   140016a52:	ins    BYTE PTR es:[rdi],dx
   140016a53:	add    BYTE PTR [rbp+0x0],ah
   140016a56:	and    BYTE PTR [rax],al
   140016a58:	je     0x140016a5a
   140016a5a:	jns    0x140016a5c
   140016a5c:	jo     0x140016a5e
   140016a5e:	add    BYTE PTR gs:[rax],ah
   140016a61:	add    BYTE PTR [rcx+0x0],ch
   140016a64:	jae    0x140016a66
   140016a66:	and    BYTE PTR [rax],al
   140016a68:	jne    0x140016a6a
   140016a6a:	outs   dx,BYTE PTR ds:[rsi]
   140016a6b:	add    BYTE PTR [rbx+0x0],dh
   140016a6e:	jne    0x140016a70
   140016a70:	jo     0x140016a72
   140016a72:	jo     0x140016a74
   140016a74:	outs   dx,DWORD PTR ds:[rsi]
   140016a75:	add    BYTE PTR [rdx+0x0],dh
   140016a78:	je     0x140016a7a
   140016a7a:	add    BYTE PTR gs:[rax+rax*1+0x21],ah
   140016a7f:	add    BYTE PTR [rdx],cl
   140016a81:	add    BYTE PTR [rax+rax*1+0x65],cl
   140016a85:	add    BYTE PTR [rcx+0x0],ah
   140016a88:	jb     0x140016a8a
   140016a8a:	outs   dx,BYTE PTR ds:[rsi]
   140016a8b:	add    BYTE PTR [rax],ah
   140016a8d:	add    BYTE PTR [rdi+0x0],dl
   140016a90:	imul   eax,DWORD PTR [rax],0x61007a
   140016a96:	jb     0x140016a98
   140016a98:	add    BYTE PTR fs:[rax],ah
   140016a9b:	add    BYTE PTR [rbx+0x0],dh
   140016a9e:	jne    0x140016aa0
   140016aa0:	jo     0x140016aa2
   140016aa2:	jo     0x140016aa4
   140016aa4:	outs   dx,DWORD PTR ds:[rsi]
   140016aa5:	add    BYTE PTR [rdx+0x0],dh
   140016aa8:	je     0x140016aaa
   140016aaa:	jae    0x140016aac
   140016aac:	and    BYTE PTR [rax],al
   140016aae:	sub    al,BYTE PTR [rax]
   140016ab0:	add    BYTE PTR cs:[rax+rax*1+0x78],dh
   140016ab5:	add    BYTE PTR [rax+rax*1+0x2c],dh
   140016ab9:	add    BYTE PTR [rax],ah
   140016abb:	add    BYTE PTR [rdx],ch
   140016abd:	add    BYTE PTR [rsi],ch
   140016abf:	add    BYTE PTR [rax+0x0],ch
   140016ac2:	je     0x140016ac4
   140016ac4:	ins    DWORD PTR es:[rdi],dx
   140016ac5:	add    BYTE PTR [rax+rax*1],ch
   140016ac8:	and    BYTE PTR [rax],al
   140016aca:	sub    al,BYTE PTR [rax]
   140016acc:	add    BYTE PTR cs:[rax+0x0],ch
   140016ad0:	je     0x140016ad2
   140016ad2:	ins    DWORD PTR es:[rdi],dx
   140016ad3:	add    BYTE PTR [rax+rax*1+0x2c],ch
   140016ad7:	add    BYTE PTR [rax],ah
   140016ad9:	add    BYTE PTR [rdx],ch
   140016adb:	add    BYTE PTR [rsi],ch
   140016add:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140016ae1:	add    BYTE PTR [rbx+0x0],ah
   140016ae4:	sub    al,0x0
   140016ae6:	and    BYTE PTR [rax],al
   140016ae8:	(bad)  
   140016ae9:	add    BYTE PTR [rsi+0x0],ch
   140016aec:	add    BYTE PTR fs:[rax],ah
   140016aef:	add    BYTE PTR [rdx],ch
   140016af1:	add    BYTE PTR [rsi],ch
   140016af3:	add    BYTE PTR [rdx+0x0],dh
   140016af6:	je     0x140016af8
   140016af8:	data16 add BYTE PTR [rax],ah
   140016afb:	add    BYTE PTR [rsi+0x0],ah
   140016afe:	imul   eax,DWORD PTR [rax],0x65006c
   140016b04:	and    BYTE PTR [rax],al
   140016b06:	je     0x140016b08
   140016b08:	jns    0x140016b0a
   140016b0a:	jo     0x140016b0c
   140016b0c:	add    BYTE PTR gs:[rbx+0x0],dh
   140016b10:	add    BYTE PTR cs:[rsi],al
   140016b13:	add    BYTE PTR [rbp+0x0],al
   140016b16:	jb     0x140016b18
   140016b18:	jb     0x140016b1a
   140016b1a:	outs   dx,DWORD PTR ds:[rsi]
   140016b1b:	add    BYTE PTR [rdx+0x0],dh
   140016b1e:	and    DWORD PTR [rax],eax
   140016b20:	(bad)  
   140016b21:	add    BYTE PTR [rbx+0x0],al
   140016b24:	(bad)  
   140016b25:	add    BYTE PTR [rsi+0x0],ch
   140016b28:	and    BYTE PTR [rax],al
   140016b2a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   140016b2e:	push   rsp
   140016b2f:	add    BYTE PTR [rax],ah
   140016b31:	add    BYTE PTR [rdi+0x0],ch
   140016b34:	jo     0x140016b36
   140016b36:	add    BYTE PTR gs:[rsi+0x0],ch
   140016b3a:	and    BYTE PTR [rax],al
   140016b3c:	outs   dx,DWORD PTR ds:[rsi]
   140016b3d:	add    BYTE PTR [rsi+0x0],ch
   140016b40:	add    BYTE PTR gs:[rax],ah
   140016b43:	add    BYTE PTR [rdi+0x0],ch
   140016b46:	jb     0x140016b48
   140016b48:	and    BYTE PTR [rax],al
   140016b4a:	ins    DWORD PTR es:[rdi],dx
   140016b4b:	add    BYTE PTR [rdi+0x0],ch
   140016b4e:	jb     0x140016b50
   140016b50:	add    BYTE PTR gs:[rax],ah
   140016b53:	add    BYTE PTR [rsi+0x0],ah
   140016b56:	imul   eax,DWORD PTR [rax],0x65006c
   140016b5c:	jae    0x140016b5e
   140016b5e:	sub    al,0x0
   140016b60:	and    BYTE PTR [rax],al
   140016b62:	jo     0x140016b64
   140016b64:	jb     0x140016b66
   140016b66:	add    BYTE PTR gs:[rbx+0x0],dh
   140016b6a:	jae    0x140016b6c
   140016b6c:	and    BYTE PTR [rax],al
   140016b6e:	pop    rbx
   140016b6f:	add    BYTE PTR [rdi+0x0],cl
   140016b72:	rex.WXB add BYTE PTR [r13+0x0],bl
   140016b76:	and    BYTE PTR [rax],al
   140016b78:	je     0x140016b7a
   140016b7a:	outs   dx,DWORD PTR ds:[rsi]
   140016b7b:	add    BYTE PTR [rax],ah
   140016b7d:	add    BYTE PTR [rbx+0x0],ah
   140016b80:	outs   dx,DWORD PTR ds:[rsi]
   140016b81:	add    BYTE PTR [rsi+0x0],ch
   140016b84:	je     0x140016b86
   140016b86:	imul   eax,DWORD PTR [rax],0x75006e
   140016b8c:	add    BYTE PTR gs:[rcx],ah
   140016b8f:	add    BYTE PTR [rdx+0x0],cl
   140016b92:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140016b96:	ins    BYTE PTR es:[rdi],dx
   140016b97:	add    BYTE PTR [rbp+0x0],ah
   140016b9a:	and    BYTE PTR [rax],al
   140016b9c:	outs   dx,BYTE PTR ds:[rsi]
   140016b9d:	add    BYTE PTR [rcx+0x0],ah
   140016ba0:	ins    DWORD PTR es:[rdi],dx
   140016ba1:	add    BYTE PTR [rbp+0x0],ah
   140016ba4:	and    BYTE PTR [rax],al
   140016ba6:	add    BYTE PTR gs:[rax+0x0],bh
   140016baa:	movsxd eax,DWORD PTR [rax]
   140016bac:	add    BYTE PTR gs:[rbp+0x0],ah
   140016bb0:	add    BYTE PTR fs:[rbx+0x0],dh
   140016bb4:	and    BYTE PTR [rax],al
   140016bb6:	and    eax,0x20006400
   140016bbb:	add    BYTE PTR [rbx+0x0],ah
   140016bbe:	push   0x72006100
   140016bc3:	add    BYTE PTR [rcx+0x0],ah
   140016bc6:	movsxd eax,DWORD PTR [rax]
   140016bc8:	je     0x140016bca
   140016bca:	add    BYTE PTR gs:[rdx+0x0],dh
   140016bce:	jae    0x140016bd0
   140016bd0:	add    BYTE PTR cs:[rax],ah
   140016bd3:	add    BYTE PTR [rax],ah
   140016bd5:	add    BYTE PTR [rax+0x0],dl
   140016bd8:	(bad)  
   140016bd9:	add    BYTE PTR [rdx+0x0],dh
   140016bdc:	je     0x140016bde
   140016bde:	and    BYTE PTR [rax],al
   140016be0:	outs   dx,DWORD PTR ds:[rsi]
   140016be1:	add    BYTE PTR [rsi+0x0],ah
   140016be4:	and    BYTE PTR [rax],al
   140016be6:	je     0x140016be8
   140016be8:	push   0x20006500
   140016bed:	add    BYTE PTR [rsi+0x0],ah
   140016bf0:	imul   eax,DWORD PTR [rax],0x65006c
   140016bf6:	and    BYTE PTR [rax],al
   140016bf8:	outs   dx,BYTE PTR ds:[rsi]
   140016bf9:	add    BYTE PTR [rcx+0x0],ah
   140016bfc:	ins    DWORD PTR es:[rdi],dx
   140016bfd:	add    BYTE PTR [rbp+0x0],ah
   140016c00:	and    BYTE PTR [rax],al
   140016c02:	imul   eax,DWORD PTR [rax],0x200073
   140016c08:	(bad)  
   140016c09:	add    BYTE PTR [rbp+0x0],ah
   140016c0c:	add    BYTE PTR gs:[rsi+0x0],ch
   140016c10:	and    BYTE PTR [rax],al
   140016c12:	je     0x140016c14
   140016c14:	jb     0x140016c16
   140016c16:	jne    0x140016c18
   140016c18:	outs   dx,BYTE PTR ds:[rsi]
   140016c19:	add    BYTE PTR [rbx+0x0],ah
   140016c1c:	(bad)  
   140016c1d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140016c21:	add    BYTE PTR [rax+rax*1+0x21],ah
   140016c25:	add    BYTE PTR [rax+rax*1],cl
   140016c28:	rex.XB add BYTE PTR [r15+0x0],bpl
   140016c2c:	outs   dx,BYTE PTR ds:[rsi]
   140016c2d:	add    BYTE PTR [rsi+0x0],ah
   140016c30:	imul   eax,DWORD PTR [rax],0x6d0072
   140016c36:	(bad)  
   140016c37:	add    BYTE PTR [rax+rax*1+0x69],dh
   140016c3b:	add    BYTE PTR [rdi+0x0],ch
   140016c3e:	outs   dx,BYTE PTR ds:[rsi]
   140016c3f:	add    BYTE PTR [rdi],al
   140016c41:	add    BYTE PTR [rsi],ah
   140016c43:	add    BYTE PTR [rsi+0x0],al
   140016c46:	imul   eax,DWORD PTR [rax],0x69006e
   140016c4c:	jae    0x140016c4e
   140016c4e:	push   0x4c001300
   140016c53:	add    BYTE PTR [rbp+0x0],ah
   140016c56:	(bad)  
   140016c57:	add    BYTE PTR [rdx+0x0],dh
   140016c5a:	outs   dx,BYTE PTR ds:[rsi]
   140016c5b:	add    BYTE PTR [rbp+0x0],ah
   140016c5e:	add    BYTE PTR fs:[rax],ah
   140016c61:	add    BYTE PTR [rip+0x20006400],ah        # 0x16001d067
   140016c67:	add    BYTE PTR [rax+0x0],dl
   140016c6a:	push   0x61007200
   140016c6f:	add    BYTE PTR [rbx+0x0],dh
   140016c72:	add    BYTE PTR gs:[rbx+0x0],dh
   140016c76:	add    BYTE PTR cs:[rdx+0x0],ch
   140016c7a:	push   rax
   140016c7b:	add    BYTE PTR [rdi+0x0],ch
   140016c7e:	jb     0x140016c80
   140016c80:	je     0x140016c82
   140016c82:	imul   eax,DWORD PTR [rax],0x6e006f
   140016c88:	and    BYTE PTR [rax],al
   140016c8a:	outs   dx,DWORD PTR ds:[rsi]
   140016c8b:	add    BYTE PTR [rsi+0x0],ah
   140016c8e:	and    BYTE PTR [rax],al
   140016c90:	jo     0x140016c92
   140016c92:	push   0x61007200
   140016c97:	add    BYTE PTR [rbx+0x0],dh
   140016c9a:	add    BYTE PTR gs:[rbx+0x0],dh
   140016c9e:	and    BYTE PTR [rax],al
   140016ca0:	jb     0x140016ca2
   140016ca2:	add    BYTE PTR gs:[rcx+0x0],ah
   140016ca6:	movsxd eax,DWORD PTR [rax]
   140016ca8:	push   0x64006500
   140016cad:	add    BYTE PTR [rax],ah
   140016caf:	add    BYTE PTR [rbp+0x0],ch
   140016cb2:	(bad)  
   140016cb3:	add    BYTE PTR [rax+0x0],bh
   140016cb6:	imul   eax,DWORD PTR [rax],0x75006d
   140016cbc:	ins    DWORD PTR es:[rdi],dx
   140016cbd:	add    BYTE PTR [rax],ah
   140016cbf:	add    BYTE PTR [rcx+0x0],ah
   140016cc2:	ins    BYTE PTR es:[rdi],dx
   140016cc3:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140016cc7:	add    BYTE PTR [rdi+0x0],dh
   140016cca:	(bad)  
   140016ccb:	add    BYTE PTR [rdx+0x0],ah
   140016cce:	ins    BYTE PTR es:[rdi],dx
   140016ccf:	add    BYTE PTR [rbp+0x0],ah
   140016cd2:	and    BYTE PTR [rax],al
   140016cd4:	jo     0x140016cd6
   140016cd6:	push   0x61007200
   140016cdb:	add    BYTE PTR [rbx+0x0],dh
   140016cde:	add    BYTE PTR gs:[rax],ah
   140016ce1:	add    BYTE PTR [rbx+0x0],ah
   140016ce4:	outs   dx,DWORD PTR ds:[rsi]
   140016ce5:	add    BYTE PTR [rbp+0x0],dh
   140016ce8:	outs   dx,BYTE PTR ds:[rsi]
   140016ce9:	add    BYTE PTR [rax+rax*1+0x20],dh
   140016ced:	add    BYTE PTR [rip+0x2e006400],ah        # 0x16e01d0f3
   140016cf3:	add    BYTE PTR [rax],ah
   140016cf5:	add    BYTE PTR [rax],ah
   140016cf7:	add    BYTE PTR [rsi+0x0],cl
   140016cfa:	add    BYTE PTR gs:[rdi+0x0],dh
   140016cfe:	and    BYTE PTR [rax],al
   140016d00:	jo     0x140016d02
   140016d02:	push   0x61007200
   140016d07:	add    BYTE PTR [rbx+0x0],dh
   140016d0a:	add    BYTE PTR gs:[rbx+0x0],dh
   140016d0e:	and    BYTE PTR [rax],al
   140016d10:	ins    DWORD PTR es:[rdi],dx
   140016d11:	add    BYTE PTR [rcx+0x0],ch
   140016d14:	add    BYTE PTR [eax+0x0],ch
   140016d18:	je     0x140016d1a
   140016d1a:	and    BYTE PTR [rax],al
   140016d1c:	outs   dx,BYTE PTR ds:[rsi]
   140016d1d:	add    BYTE PTR [rdi+0x0],ch
   140016d20:	je     0x140016d22
   140016d22:	and    BYTE PTR [rax],al
   140016d24:	(bad)  
   140016d25:	add    BYTE PTR [rbp+0x0],ah
   140016d28:	and    BYTE PTR [rax],al
   140016d2a:	ins    BYTE PTR es:[rdi],dx
   140016d2b:	add    BYTE PTR [rbp+0x0],ah
   140016d2e:	(bad)  
   140016d2f:	add    BYTE PTR [rdx+0x0],dh
   140016d32:	outs   dx,BYTE PTR ds:[rsi]
   140016d33:	add    BYTE PTR [rbp+0x0],ah
   140016d36:	add    BYTE PTR fs:[rax],ah
   140016d39:	add    BYTE PTR [rcx+0x0],ah
   140016d3c:	outs   dx,BYTE PTR ds:[rsi]
   140016d3d:	add    BYTE PTR [rax+rax*1+0x20],ah
   140016d41:	add    BYTE PTR [rbx+0x0],dh
   140016d44:	(bad)  
   140016d45:	add    BYTE PTR [rsi+0x0],dh
   140016d48:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140016d4d:	add    BYTE PTR [rax],al
   140016d4f:	add    BYTE PTR [rip+0x6e004900],bl        # 0x1ae01b655
   140016d55:	add    BYTE PTR [rax+rax*1+0x65],dh
   140016d59:	add    BYTE PTR [rdx+0x0],dh
   140016d5c:	outs   dx,BYTE PTR ds:[rsi]
   140016d5d:	add    BYTE PTR [rcx+0x0],ah
   140016d60:	ins    BYTE PTR es:[rdi],dx
   140016d61:	add    BYTE PTR [rax],ah
   140016d63:	add    BYTE PTR [rbp+0x0],ah
   140016d66:	jb     0x140016d68
   140016d68:	jb     0x140016d6a
   140016d6a:	outs   dx,DWORD PTR ds:[rsi]
   140016d6b:	add    BYTE PTR [rdx+0x0],dh
   140016d6e:	jae    0x140016d70
   140016d70:	add    BYTE PTR cs:[rax],ah
   140016d73:	add    BYTE PTR [rbp+0x0],al
   140016d76:	jb     0x140016d78
   140016d78:	jb     0x140016d7a
   140016d7a:	outs   dx,DWORD PTR ds:[rsi]
   140016d7b:	add    BYTE PTR [rdx+0x0],dh
   140016d7e:	and    BYTE PTR [rax],al
   140016d80:	movsxd eax,DWORD PTR [rax]
   140016d82:	outs   dx,DWORD PTR ds:[rsi]
   140016d83:	add    BYTE PTR [rax+rax*1+0x65],ah
   140016d87:	add    BYTE PTR [rdx],bh
   140016d89:	add    BYTE PTR [rax],ah
   140016d8b:	add    BYTE PTR [rax+rax*1+0x59],cl
   140016d8f:	add    BYTE PTR [rdi+0x0],ch
   140016d92:	jne    0x140016d94
   140016d94:	and    BYTE PTR [rax],al
   140016d96:	push   0x76006100
   140016d9b:	add    BYTE PTR [rbp+0x0],ah
   140016d9e:	and    BYTE PTR [rax],al
   140016da0:	jae    0x140016da2
   140016da2:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140016da7:	add    BYTE PTR [rbx+0x0],ah
   140016daa:	je     0x140016dac
   140016dac:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140016db1:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140016db5:	add    BYTE PTR [rdi+0x0],ch
   140016db8:	and    BYTE PTR [rax],al
   140016dba:	ins    DWORD PTR es:[rdi],dx
   140016dbb:	add    BYTE PTR [rcx+0x0],ah
   140016dbe:	outs   dx,BYTE PTR ds:[rsi]
   140016dbf:	add    BYTE PTR [rcx+0x0],bh
   140016dc2:	and    BYTE PTR [rax],al
   140016dc4:	data16 add BYTE PTR [rcx+0x0],ch
   140016dc8:	ins    BYTE PTR es:[rdi],dx
   140016dc9:	add    BYTE PTR [rbp+0x0],ah
   140016dcc:	jae    0x140016dce
   140016dce:	add    BYTE PTR cs:[rax],ah
   140016dd1:	add    BYTE PTR [rax+0x0],dl
   140016dd4:	ins    BYTE PTR es:[rdi],dx
   140016dd5:	add    BYTE PTR [rbp+0x0],ah
   140016dd8:	(bad)  
   140016dd9:	add    BYTE PTR [rbx+0x0],dh
   140016ddc:	add    BYTE PTR gs:[rax],ah
   140016ddf:	add    BYTE PTR [rdx+0x0],dh
   140016de2:	add    BYTE PTR gs:[rax+rax*1+0x75],ah
   140016de7:	add    BYTE PTR [rbx+0x0],ah
   140016dea:	add    BYTE PTR gs:[rax],ah
   140016ded:	add    BYTE PTR [rax+rax*1+0x68],dh
   140016df1:	add    BYTE PTR [rbp+0x0],ah
   140016df4:	and    BYTE PTR [rax],al
   140016df6:	jae    0x140016df8
   140016df8:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140016dfd:	add    BYTE PTR [rbx+0x0],ah
   140016e00:	je     0x140016e02
   140016e02:	imul   eax,DWORD PTR [rax],0x6e006f
   140016e08:	and    BYTE PTR [rax],al
   140016e0a:	(bad)  
   140016e0b:	add    BYTE PTR [rsi+0x0],ch
   140016e0e:	add    BYTE PTR fs:[rax],ah
   140016e11:	add    BYTE PTR [rax+rax*1+0x72],dh
   140016e15:	add    BYTE PTR [rcx+0x0],bh
   140016e18:	and    BYTE PTR [rax],al
   140016e1a:	(bad)  
   140016e1b:	add    BYTE PTR [rdi+0x0],ah
   140016e1e:	(bad)  
   140016e1f:	add    BYTE PTR [rcx+0x0],ch
   140016e22:	outs   dx,BYTE PTR ds:[rsi]
   140016e23:	add    BYTE PTR [rsi],ch
   140016e25:	add    BYTE PTR [rsi],al
   140016e27:	add    BYTE PTR [rsi],ah
   140016e29:	add    BYTE PTR [rsi+0x0],cl
   140016e2c:	add    BYTE PTR gs:[rax+0x0],bh
   140016e30:	je     0x140016e32
   140016e32:	add    BYTE PTR ds:[rax],al
   140016e35:	add    BYTE PTR [rax],al
   140016e37:	add    BYTE PTR [rsi],al
   140016e39:	add    BYTE PTR [rbx+0x0],al
   140016e3c:	(bad)  
   140016e3d:	add    BYTE PTR [rsi+0x0],ch
   140016e40:	movsxd eax,DWORD PTR [rax]
   140016e42:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
	...

Disassembly of section .reloc:

0000000140017000 <.reloc>:
   140017000:	add    BYTE PTR [rax+0xcc0000],ah
   140017006:	add    BYTE PTR [rax],al
   140017008:	clc    
   140017009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001700a:	add    BYTE PTR [rbp-0x5ae75af0],ah
   140017010:	and    BYTE PTR [rbp-0x5acf5ad8],ah
   140017016:	cmp    BYTE PTR [rbp-0x5aa75ac0],ah
   14001701c:	(bad)  
   14001701d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001701e:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017020:	pop    rax
   140017021:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017022:	push   0xffffffff88a678a6
   140017027:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017028:	cwde   
   140017029:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001702a:	test   al,0xa6
   14001702c:	mov    eax,0xd8a6c8a6
   140017031:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017032:	call   0x148a868dd
   140017037:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017038:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   14001703e:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140017040:	pop    rax
   140017041:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017042:	push   0xffffffff88a778a7
   140017047:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017048:	cwde   
   140017049:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001704a:	test   al,0xa7
   14001704c:	mov    eax,0xd8a7c8a7
   140017051:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017052:	call   0x148a968fe
   140017057:	test   al,0x18
   140017059:	test   al,0x28
   14001705b:	test   al,0x38
   14001705d:	test   al,0x48
   14001705f:	test   al,0x58
   140017061:	test   al,0x68
   140017063:	test   al,0x78
   140017065:	test   al,0x88
   140017067:	test   al,0x98
   140017069:	test   al,0xa8
   14001706b:	test   al,0xb8
   14001706d:	test   al,0xc8
   14001706f:	test   al,0xd8
   140017071:	test   al,0xe8
   140017073:	test   al,0xf8
   140017075:	test   al,0x8
   140017077:	test   eax,0xa928a918
   14001707c:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   140017082:	push   0xffffffff88a978a9
   140017087:	test   eax,0xa9a8a998
   14001708c:	mov    eax,0xd8a9c8a9
   140017091:	test   eax,0xa9f8a9e8
   140017096:	or     BYTE PTR [rdx-0x55d755e8],ch
   14001709c:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   1400170a2:	push   0xffffffff88aa78aa
   1400170a7:	stos   BYTE PTR es:[rdi],al
   1400170a8:	cwde   
   1400170a9:	stos   BYTE PTR es:[rdi],al
   1400170aa:	test   al,0xaa
   1400170ac:	mov    eax,0xd8aac8aa
   1400170b1:	stos   BYTE PTR es:[rdi],al
   1400170b2:	cmp    BYTE PTR [rdi-0x50a750b8],ch
   1400170b8:	push   0xffffffff88af78af
   1400170bd:	scas   eax,DWORD PTR es:[rdi]
   1400170be:	cwde   
   1400170bf:	scas   eax,DWORD PTR es:[rdi]
   1400170c0:	test   al,0xaf
   1400170c2:	mov    eax,0xd8afc8af
   1400170c7:	scas   eax,DWORD PTR es:[rdi]
   1400170c8:	call   0x140b1697c
   1400170cd:	mov    al,0x0
   1400170cf:	add    al,bl
   1400170d1:	add    BYTE PTR [rax],al
   1400170d3:	add    BYTE PTR [rax],cl
   1400170d5:	movabs al,ds:0xa048a038a028a018
   1400170de:	pop    rax
   1400170df:	movabs al,ds:0xa098a088a078a068
   1400170e8:	test   al,0xa0
   1400170ea:	mov    eax,0xd8a0c8a0
   1400170ef:	movabs al,ds:0xa118a108a0f8a0e8
   1400170f8:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   1400170fe:	pop    rax
   1400170ff:	movabs eax,ds:0xa198a188a178a168
   140017108:	test   al,0xa1
   14001710a:	mov    eax,0xd8a1c8a1
   14001710f:	movabs eax,ds:0xa218a208a1f8a1e8
   140017118:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   14001711e:	pop    rax
   14001711f:	movabs ds:0xa298a288a278a268,al
   140017128:	test   al,0xa2
   14001712a:	mov    eax,0xd8a2c8a2
   14001712f:	movabs ds:0xa318a308a2f8a2e8,al
   140017138:	sub    BYTE PTR [rbx-0x5cb75cc8],ah
   14001713e:	pop    rax
   14001713f:	movabs ds:0xa398a388a378a368,eax
   140017148:	test   al,0xa3
   14001714a:	mov    eax,0xd8a3c8a3
   14001714f:	movabs ds:0xa930a408a3f8a3e8,eax
   140017158:	cmp    BYTE PTR [rcx-0x56a756b0],ch
   14001715e:	(bad)  
   14001715f:	test   eax,0xa970a968
   140017164:	call   0x138ab6212
   140017169:	test   eax,0xaa08aa00
   14001716e:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140017174:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14001717a:	stos   BYTE PTR es:[rdi],al
   14001717c:	rex.W stos BYTE PTR es:[rdi],al
   14001717e:	push   rax
   14001717f:	stos   BYTE PTR es:[rdi],al
   140017180:	pop    rax
   140017181:	stos   BYTE PTR es:[rdi],al
   140017182:	(bad)  
   140017183:	stos   BYTE PTR es:[rdi],al
   140017184:	push   0x78aa70aa
   140017189:	stos   BYTE PTR es:[rdi],al
   14001718a:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140017191:	stos   BYTE PTR es:[rdi],al
   140017192:	movabs al,ds:0xc0aab8aab0aaa8aa
   14001719b:	stos   BYTE PTR es:[rdi],al
   14001719c:	enter  0xd0aa,0xaa
   1400171a0:	fsubr  DWORD PTR [rdx-0x40000000]
   1400171a6:	add    BYTE PTR [rax],al
   1400171a8:	adc    BYTE PTR [rax],al
   1400171aa:	add    BYTE PTR [rax],al
   1400171ac:	test   al,0xa7
   1400171ae:	shl    BYTE PTR [rdi-0x582f5838],0x0
   1400171b5:	lock add BYTE PTR [rax],al
   1400171b8:	js     0x1400171ba
   1400171ba:	add    BYTE PTR [rax],al
   1400171bc:	xor    BYTE PTR [rax-0x5faf5fc0],ah
   1400171c2:	(bad)  
   1400171c3:	movabs al,ds:0xa0a0a090a080a070
   1400171cc:	mov    al,0xa0
   1400171ce:	shl    BYTE PTR [rax-0x5f1f5f30],0xf0
   1400171d5:	movabs al,ds:0xa130a120a110a100
   1400171de:	rex movabs eax,ds:0xa180a170a160a150
   1400171e8:	nop
   1400171e9:	movabs eax,ds:0xa1d0a1c0a1b0a1a0
   1400171f2:	loopne 0x140017195
   1400171f4:	lock movabs eax,ds:0xa230a220a210a200
   1400171fe:	movabs ds:0xa280a270a260a250,al
   140017208:	nop
   140017209:	movabs ds:0xa2d0a2c0a2b0a2a0,al
   140017212:	loopne 0x1400171b6
   140017214:	lock movabs ds:0xa330a320a310a300,al
   14001721e:	cmp    BYTE PTR [rbx-0x5caf5cc0],ah
   140017224:	js     0x1400171c9
   140017226:	cwde   
   140017227:	.byte 0xa3
   140017228:	.byte 0xc0
   140017229:	.byte 0xa3
   14001722a:	.byte 0xe8
   14001722b:	.byte 0xa3
