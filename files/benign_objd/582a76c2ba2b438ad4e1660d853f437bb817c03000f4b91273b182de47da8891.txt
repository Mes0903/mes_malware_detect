
582a76c2ba2b438ad4e1660d853f437bb817c03000f4b91273b182de47da8891.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x7419]        # 0x140008420
   140001007:	jmp    0x1400072e8
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x7419]        # 0x140008430
   140001017:	jmp    0x1400072e8
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x7419]        # 0x140008440
   140001027:	jmp    0x1400072e8
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	lea    rcx,[rip+0xd68d]        # 0x14000e6c8
   14000103b:	call   0x140001b40
   140001040:	lea    rcx,[rip+0x7409]        # 0x140008450
   140001047:	add    rsp,0x28
   14000104b:	jmp    0x1400072e8
   140001050:	sub    rsp,0x28
   140001054:	lea    rcx,[rip+0xd67d]        # 0x14000e6d8
   14000105b:	call   0x140001f50
   140001060:	lea    rcx,[rip+0x7429]        # 0x140008490
   140001067:	add    rsp,0x28
   14000106b:	jmp    0x1400072e8
   140001070:	mov    rax,QWORD PTR [rip+0x80a1]        # 0x140009118
   140001077:	mov    QWORD PTR [rip+0xd62a],rax        # 0x14000e6a8
   14000107e:	ret    
   14000107f:	int3   
   140001080:	mov    rax,QWORD PTR [rip+0x8099]        # 0x140009120
   140001087:	mov    QWORD PTR [rip+0xd60a],rax        # 0x14000e698
   14000108e:	ret    
   14000108f:	int3   
   140001090:	sub    rsp,0x28
   140001094:	call   QWORD PTR [rip+0x8136]        # 0x1400091d0
   14000109a:	mov    QWORD PTR [rip+0xd5df],rax        # 0x14000e680
   1400010a1:	add    rsp,0x28
   1400010a5:	ret    
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	sub    rsp,0x28
   1400010b4:	call   QWORD PTR [rip+0x811e]        # 0x1400091d8
   1400010ba:	mov    QWORD PTR [rip+0xd5c7],rax        # 0x14000e688
   1400010c1:	add    rsp,0x28
   1400010c5:	ret    
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	sub    rsp,0x28
   1400010d4:	call   QWORD PTR [rip+0x80f6]        # 0x1400091d0
   1400010da:	mov    QWORD PTR [rip+0xd5cf],rax        # 0x14000e6b0
   1400010e1:	add    rsp,0x28
   1400010e5:	ret    
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400010f5:	push   rbx
   1400010f6:	sub    rsp,0x30
   1400010fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001103:	mov    rbx,rcx
   140001106:	test   rdx,rdx
   140001109:	jne    0x14000110f
   14000110b:	xor    eax,eax
   14000110d:	jmp    0x14000111e
   14000110f:	mov    rax,QWORD PTR [rdx+0x40]
   140001113:	movsxd rcx,DWORD PTR [rax+0x4]
   140001117:	lea    rax,[rdx+0x40]
   14000111b:	add    rax,rcx
   14000111e:	mov    QWORD PTR [rbx],rax
   140001121:	lea    r8,[rbx+0x8]
   140001125:	mov    QWORD PTR [r8],0x0
   14000112c:	mov    rcx,rbx
   14000112f:	call   0x1400023c0
   140001134:	nop
   140001135:	mov    rax,rbx
   140001138:	add    rsp,0x30
   14000113c:	pop    rbx
   14000113d:	ret    
   14000113e:	int3   
   14000113f:	int3   
   140001140:	mov    QWORD PTR [rsp+0x10],rdx
   140001145:	push   rdi
   140001146:	sub    rsp,0x30
   14000114a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001153:	mov    QWORD PTR [rsp+0x40],rbx
   140001158:	mov    rdi,rdx
   14000115b:	mov    rbx,rcx
   14000115e:	mov    QWORD PTR [rcx],0x0
   140001165:	mov    ecx,0x18
   14000116a:	call   0x1400071dc
   14000116f:	test   rax,rax
   140001172:	je     0x140001190
   140001174:	mov    DWORD PTR [rax+0x8],0x1
   14000117b:	mov    DWORD PTR [rax+0xc],0x1
   140001182:	lea    rcx,[rip+0x8d0f]        # 0x140009e98
   140001189:	mov    QWORD PTR [rax],rcx
   14000118c:	mov    QWORD PTR [rax+0x10],rdi
   140001190:	mov    QWORD PTR [rbx],rax
   140001193:	mov    rax,rbx
   140001196:	mov    rbx,QWORD PTR [rsp+0x40]
   14000119b:	add    rsp,0x30
   14000119f:	pop    rdi
   1400011a0:	ret    
   1400011a1:	int3   
   1400011a2:	int3   
   1400011a3:	int3   
   1400011a4:	int3   
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400011b5:	push   rbx
   1400011b6:	sub    rsp,0x30
   1400011ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400011c3:	mov    rbx,rcx
   1400011c6:	test   rdx,rdx
   1400011c9:	jne    0x1400011cf
   1400011cb:	xor    eax,eax
   1400011cd:	jmp    0x1400011de
   1400011cf:	mov    rax,QWORD PTR [rdx+0x40]
   1400011d3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011d7:	lea    rax,[rdx+0x40]
   1400011db:	add    rax,rcx
   1400011de:	mov    QWORD PTR [rbx],rax
   1400011e1:	lea    r8,[rbx+0x8]
   1400011e5:	mov    QWORD PTR [r8],0x0
   1400011ec:	mov    rcx,rbx
   1400011ef:	call   0x140002440
   1400011f4:	nop
   1400011f5:	mov    rax,rbx
   1400011f8:	add    rsp,0x30
   1400011fc:	pop    rbx
   1400011fd:	ret    
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    QWORD PTR [rsp+0x10],rdx
   140001205:	push   rdi
   140001206:	sub    rsp,0x30
   14000120a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001213:	mov    QWORD PTR [rsp+0x40],rbx
   140001218:	mov    rdi,rdx
   14000121b:	mov    rbx,rcx
   14000121e:	mov    QWORD PTR [rcx],0x0
   140001225:	mov    ecx,0x18
   14000122a:	call   0x1400071dc
   14000122f:	test   rax,rax
   140001232:	je     0x140001250
   140001234:	mov    DWORD PTR [rax+0x8],0x1
   14000123b:	mov    DWORD PTR [rax+0xc],0x1
   140001242:	lea    rcx,[rip+0x8c7f]        # 0x140009ec8
   140001249:	mov    QWORD PTR [rax],rcx
   14000124c:	mov    QWORD PTR [rax+0x10],rdi
   140001250:	mov    QWORD PTR [rbx],rax
   140001253:	mov    rax,rbx
   140001256:	mov    rbx,QWORD PTR [rsp+0x40]
   14000125b:	add    rsp,0x30
   14000125f:	pop    rdi
   140001260:	ret    
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    rax,QWORD PTR [rdx]
   140001273:	mov    QWORD PTR [rcx+0x18],rax
   140001277:	mov    rax,rcx
   14000127a:	ret    
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	mov    rax,QWORD PTR [rdx]
   140001283:	mov    QWORD PTR [rcx+0x10],rax
   140001287:	mov    rax,rcx
   14000128a:	ret    
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	mov    eax,DWORD PTR [rdx]
   140001292:	mov    DWORD PTR [rcx+0x20],eax
   140001295:	mov    rax,rcx
   140001298:	ret    
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    rax,QWORD PTR [rdx]
   1400012a3:	mov    QWORD PTR [rcx+0x18],rax
   1400012a7:	mov    rax,rcx
   1400012aa:	ret    
   1400012ab:	int3   
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	mov    rax,QWORD PTR [rdx]
   1400012b3:	mov    QWORD PTR [rcx+0x10],rax
   1400012b7:	mov    rax,rcx
   1400012ba:	ret    
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	mov    eax,DWORD PTR [rdx]
   1400012c2:	mov    DWORD PTR [rcx+0x20],eax
   1400012c5:	mov    rax,rcx
   1400012c8:	ret    
   1400012c9:	int3   
   1400012ca:	int3   
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	sub    rsp,0x28
   1400012d4:	xor    eax,eax
   1400012d6:	test   rcx,rcx
   1400012d9:	je     0x1400012f2
   1400012db:	cmp    rcx,0xffffffffffffffff
   1400012df:	ja     0x1400012eb
   1400012e1:	call   0x1400071dc
   1400012e6:	test   rax,rax
   1400012e9:	jne    0x1400012f2
   1400012eb:	call   QWORD PTR [rip+0x7d7f]        # 0x140009070
   1400012f1:	int3   
   1400012f2:	add    rsp,0x28
   1400012f6:	ret    
   1400012f7:	int3   
   1400012f8:	int3   
   1400012f9:	int3   
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	sub    rsp,0x28
   140001304:	xor    eax,eax
   140001306:	test   rcx,rcx
   140001309:	je     0x14000132f
   14000130b:	movabs rax,0x7ffffffffffffff
   140001315:	cmp    rcx,rax
   140001318:	ja     0x140001328
   14000131a:	shl    rcx,0x5
   14000131e:	call   0x1400071dc
   140001323:	test   rax,rax
   140001326:	jne    0x14000132f
   140001328:	call   QWORD PTR [rip+0x7d42]        # 0x140009070
   14000132e:	int3   
   14000132f:	add    rsp,0x28
   140001333:	ret    
   140001334:	int3   
   140001335:	int3   
   140001336:	int3   
   140001337:	int3   
   140001338:	int3   
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	sub    rsp,0x28
   140001344:	xor    eax,eax
   140001346:	test   rcx,rcx
   140001349:	je     0x14000136e
   14000134b:	movabs rax,0x7fffffffffffffff
   140001355:	cmp    rcx,rax
   140001358:	ja     0x140001367
   14000135a:	add    rcx,rcx
   14000135d:	call   0x1400071dc
   140001362:	test   rax,rax
   140001365:	jne    0x14000136e
   140001367:	call   QWORD PTR [rip+0x7d03]        # 0x140009070
   14000136d:	int3   
   14000136e:	add    rsp,0x28
   140001372:	ret    
   140001373:	int3   
   140001374:	int3   
   140001375:	int3   
   140001376:	int3   
   140001377:	int3   
   140001378:	int3   
   140001379:	int3   
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	cmp    rcx,rdx
   140001383:	je     0x1400013d6
   140001385:	mov    QWORD PTR [rsp+0x10],rbx
   14000138a:	push   rdi
   14000138b:	sub    rsp,0x20
   14000138f:	mov    QWORD PTR [rsp+0x30],rsi
   140001394:	mov    rdi,rdx
   140001397:	mov    rbx,rcx
   14000139a:	xor    esi,esi
   14000139c:	nop    DWORD PTR [rax+0x0]
   1400013a0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400013a5:	jb     0x1400013af
   1400013a7:	mov    rcx,QWORD PTR [rbx]
   1400013aa:	call   0x1400071e2
   1400013af:	mov    QWORD PTR [rbx+0x18],0xf
   1400013b7:	mov    QWORD PTR [rbx+0x10],rsi
   1400013bb:	mov    BYTE PTR [rbx],sil
   1400013be:	add    rbx,0x20
   1400013c2:	cmp    rbx,rdi
   1400013c5:	jne    0x1400013a0
   1400013c7:	mov    rsi,QWORD PTR [rsp+0x30]
   1400013cc:	mov    rbx,QWORD PTR [rsp+0x38]
   1400013d1:	add    rsp,0x20
   1400013d5:	pop    rdi
   1400013d6:	ret    
   1400013d7:	int3   
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	cmp    rcx,rdx
   1400013e3:	je     0x140001436
   1400013e5:	mov    QWORD PTR [rsp+0x10],rbx
   1400013ea:	push   rdi
   1400013eb:	sub    rsp,0x20
   1400013ef:	mov    QWORD PTR [rsp+0x30],rsi
   1400013f4:	mov    rdi,rdx
   1400013f7:	mov    rbx,rcx
   1400013fa:	xor    esi,esi
   1400013fc:	nop    DWORD PTR [rax+0x0]
   140001400:	cmp    QWORD PTR [rbx+0x18],0x10
   140001405:	jb     0x14000140f
   140001407:	mov    rcx,QWORD PTR [rbx]
   14000140a:	call   0x1400071e2
   14000140f:	mov    QWORD PTR [rbx+0x18],0xf
   140001417:	mov    QWORD PTR [rbx+0x10],rsi
   14000141b:	mov    BYTE PTR [rbx],sil
   14000141e:	add    rbx,0x20
   140001422:	cmp    rbx,rdi
   140001425:	jne    0x140001400
   140001427:	mov    rsi,QWORD PTR [rsp+0x30]
   14000142c:	mov    rbx,QWORD PTR [rsp+0x38]
   140001431:	add    rsp,0x20
   140001435:	pop    rdi
   140001436:	ret    
   140001437:	int3   
   140001438:	int3   
   140001439:	int3   
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	cmp    rcx,rdx
   140001443:	je     0x140001496
   140001445:	mov    QWORD PTR [rsp+0x10],rbx
   14000144a:	push   rdi
   14000144b:	sub    rsp,0x20
   14000144f:	mov    QWORD PTR [rsp+0x30],rsi
   140001454:	mov    rdi,rdx
   140001457:	mov    rbx,rcx
   14000145a:	xor    esi,esi
   14000145c:	nop    DWORD PTR [rax+0x0]
   140001460:	cmp    QWORD PTR [rbx+0x18],0x8
   140001465:	jb     0x14000146f
   140001467:	mov    rcx,QWORD PTR [rbx]
   14000146a:	call   0x1400071e2
   14000146f:	mov    QWORD PTR [rbx+0x18],0x7
   140001477:	mov    QWORD PTR [rbx+0x10],rsi
   14000147b:	mov    WORD PTR [rbx],si
   14000147e:	add    rbx,0x20
   140001482:	cmp    rbx,rdi
   140001485:	jne    0x140001460
   140001487:	mov    rsi,QWORD PTR [rsp+0x30]
   14000148c:	mov    rbx,QWORD PTR [rsp+0x38]
   140001491:	add    rsp,0x20
   140001495:	pop    rdi
   140001496:	ret    
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	cmp    rcx,rdx
   1400014a3:	je     0x1400014f6
   1400014a5:	mov    QWORD PTR [rsp+0x10],rbx
   1400014aa:	push   rdi
   1400014ab:	sub    rsp,0x20
   1400014af:	mov    QWORD PTR [rsp+0x30],rsi
   1400014b4:	mov    rdi,rdx
   1400014b7:	mov    rbx,rcx
   1400014ba:	xor    esi,esi
   1400014bc:	nop    DWORD PTR [rax+0x0]
   1400014c0:	cmp    QWORD PTR [rbx+0x18],0x8
   1400014c5:	jb     0x1400014cf
   1400014c7:	mov    rcx,QWORD PTR [rbx]
   1400014ca:	call   0x1400071e2
   1400014cf:	mov    QWORD PTR [rbx+0x18],0x7
   1400014d7:	mov    QWORD PTR [rbx+0x10],rsi
   1400014db:	mov    WORD PTR [rbx],si
   1400014de:	add    rbx,0x20
   1400014e2:	cmp    rbx,rdi
   1400014e5:	jne    0x1400014c0
   1400014e7:	mov    rsi,QWORD PTR [rsp+0x30]
   1400014ec:	mov    rbx,QWORD PTR [rsp+0x38]
   1400014f1:	add    rsp,0x20
   1400014f5:	pop    rdi
   1400014f6:	ret    
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	movzx  eax,BYTE PTR [rsp+0x18]
   140001505:	ret    
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	movzx  eax,BYTE PTR [rsp+0x18]
   140001515:	ret    
   140001516:	int3   
   140001517:	int3   
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	int3   
   14000151f:	int3   
   140001520:	mov    QWORD PTR [rcx],rdx
   140001523:	mov    rax,rcx
   140001526:	ret    
   140001527:	int3   
   140001528:	int3   
   140001529:	int3   
   14000152a:	int3   
   14000152b:	int3   
   14000152c:	int3   
   14000152d:	int3   
   14000152e:	int3   
   14000152f:	int3   
   140001530:	rex push rbx
   140001532:	sub    rsp,0x30
   140001536:	movzx  eax,BYTE PTR [rsp+0x58]
   14000153b:	mov    r10,r9
   14000153e:	mov    r11,r8
   140001541:	mov    rcx,rdx
   140001544:	mov    BYTE PTR [rsp+0x28],al
   140001548:	lea    r9,[rsp+0x58]
   14000154d:	mov    r8,r10
   140001550:	mov    rdx,r11
   140001553:	mov    QWORD PTR [rsp+0x20],0x0
   14000155c:	call   0x1400015a0
   140001561:	add    rsp,0x30
   140001565:	pop    rbx
   140001566:	ret    
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	mov    rax,rcx
   140001573:	ret    
   140001574:	int3   
   140001575:	int3   
   140001576:	int3   
   140001577:	int3   
   140001578:	int3   
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	sub    rsp,0x48
   140001584:	movzx  eax,BYTE PTR [rsp+0x30]
   140001589:	mov    BYTE PTR [rsp+0x28],al
   14000158d:	mov    QWORD PTR [rsp+0x20],0x0
   140001596:	call   0x1400015a0
   14000159b:	add    rsp,0x48
   14000159f:	ret    
   1400015a0:	mov    QWORD PTR [rsp+0x20],r9
   1400015a5:	mov    QWORD PTR [rsp+0x18],r8
   1400015aa:	push   rsi
   1400015ab:	push   rdi
   1400015ac:	push   r14
   1400015ae:	sub    rsp,0x30
   1400015b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400015bb:	mov    QWORD PTR [rsp+0x58],rbx
   1400015c0:	mov    r14,r9
   1400015c3:	mov    rbx,r8
   1400015c6:	mov    rsi,rdx
   1400015c9:	mov    rdi,rcx
   1400015cc:	mov    QWORD PTR [rsp+0x50],rbx
   1400015d1:	cmp    rdi,rsi
   1400015d4:	je     0x1400015f3
   1400015d6:	mov    r8,rdi
   1400015d9:	mov    rdx,rbx
   1400015dc:	mov    rcx,r14
   1400015df:	call   0x140001710
   1400015e4:	add    rbx,0x20
   1400015e8:	mov    QWORD PTR [rsp+0x60],rbx
   1400015ed:	add    rdi,0x20
   1400015f1:	jmp    0x1400015d1
   1400015f3:	mov    rax,rbx
   1400015f6:	mov    rbx,QWORD PTR [rsp+0x58]
   1400015fb:	add    rsp,0x30
   1400015ff:	pop    r14
   140001601:	pop    rdi
   140001602:	pop    rsi
   140001603:	ret    
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	sub    rsp,0x38
   140001614:	movzx  eax,BYTE PTR [rsp+0x50]
   140001619:	mov    BYTE PTR [rsp+0x28],al
   14000161d:	mov    QWORD PTR [rsp+0x20],0x0
   140001626:	call   0x1400015a0
   14000162b:	add    rsp,0x38
   14000162f:	ret    
   140001630:	xor    eax,eax
   140001632:	ret    
   140001633:	int3   
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    rax,rcx
   140001643:	ret    
   140001644:	int3   
   140001645:	int3   
   140001646:	int3   
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	mov    rax,rcx
   140001653:	ret    
   140001654:	int3   
   140001655:	int3   
   140001656:	int3   
   140001657:	int3   
   140001658:	int3   
   140001659:	int3   
   14000165a:	int3   
   14000165b:	int3   
   14000165c:	int3   
   14000165d:	int3   
   14000165e:	int3   
   14000165f:	int3   
   140001660:	mov    rax,rcx
   140001663:	ret    
   140001664:	int3   
   140001665:	int3   
   140001666:	int3   
   140001667:	int3   
   140001668:	int3   
   140001669:	int3   
   14000166a:	int3   
   14000166b:	int3   
   14000166c:	int3   
   14000166d:	int3   
   14000166e:	int3   
   14000166f:	int3   
   140001670:	test   rcx,rcx
   140001673:	je     0x140001680
   140001675:	mov    rax,QWORD PTR [rcx]
   140001678:	mov    edx,0x1
   14000167d:	rex.W jmp QWORD PTR [rax]
   140001680:	ret    
   140001681:	int3   
   140001682:	int3   
   140001683:	int3   
   140001684:	int3   
   140001685:	int3   
   140001686:	int3   
   140001687:	int3   
   140001688:	int3   
   140001689:	int3   
   14000168a:	int3   
   14000168b:	int3   
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	test   rcx,rcx
   140001693:	je     0x1400016a0
   140001695:	mov    rax,QWORD PTR [rcx]
   140001698:	mov    edx,0x1
   14000169d:	rex.W jmp QWORD PTR [rax]
   1400016a0:	ret    
   1400016a1:	int3   
   1400016a2:	int3   
   1400016a3:	int3   
   1400016a4:	int3   
   1400016a5:	int3   
   1400016a6:	int3   
   1400016a7:	int3   
   1400016a8:	int3   
   1400016a9:	int3   
   1400016aa:	int3   
   1400016ab:	int3   
   1400016ac:	int3   
   1400016ad:	int3   
   1400016ae:	int3   
   1400016af:	int3   
   1400016b0:	test   rdx,rdx
   1400016b3:	je     0x1400016bb
   1400016b5:	mov    rax,QWORD PTR [r8]
   1400016b8:	mov    QWORD PTR [rdx],rax
   1400016bb:	ret    
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	test   rdx,rdx
   1400016c3:	je     0x1400016cb
   1400016c5:	mov    rax,QWORD PTR [r8]
   1400016c8:	mov    QWORD PTR [rdx],rax
   1400016cb:	ret    
   1400016cc:	int3   
   1400016cd:	int3   
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	test   rdx,rdx
   1400016d3:	je     0x1400016db
   1400016d5:	mov    rax,QWORD PTR [r8]
   1400016d8:	mov    QWORD PTR [rdx],rax
   1400016db:	ret    
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	test   rdx,rdx
   1400016e3:	je     0x1400016eb
   1400016e5:	mov    rax,QWORD PTR [r8]
   1400016e8:	mov    QWORD PTR [rdx],rax
   1400016eb:	ret    
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	test   rdx,rdx
   1400016f3:	je     0x1400016fb
   1400016f5:	mov    rax,QWORD PTR [r8]
   1400016f8:	mov    QWORD PTR [rdx],rax
   1400016fb:	ret    
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	test   rdx,rdx
   140001703:	je     0x14000170b
   140001705:	mov    rax,QWORD PTR [r8]
   140001708:	mov    QWORD PTR [rdx],rax
   14000170b:	ret    
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    QWORD PTR [rsp+0x10],rdx
   140001715:	push   rdi
   140001716:	sub    rsp,0x30
   14000171a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001723:	mov    QWORD PTR [rsp+0x40],rbx
   140001728:	mov    rdi,r8
   14000172b:	mov    rbx,rdx
   14000172e:	mov    QWORD PTR [rsp+0x58],rdx
   140001733:	test   rdx,rdx
   140001736:	je     0x140001799
   140001738:	mov    QWORD PTR [rdx+0x18],0xf
   140001740:	mov    QWORD PTR [rdx+0x10],0x0
   140001748:	mov    BYTE PTR [rdx],0x0
   14000174b:	cmp    QWORD PTR [r8+0x18],0x10
   140001750:	jae    0x140001769
   140001752:	mov    r8,QWORD PTR [r8+0x10]
   140001756:	inc    r8
   140001759:	je     0x140001776
   14000175b:	mov    rdx,rdi
   14000175e:	mov    rcx,rbx
   140001761:	call   QWORD PTR [rip+0x7961]        # 0x1400090c8
   140001767:	jmp    0x140001776
   140001769:	mov    rax,QWORD PTR [r8]
   14000176c:	mov    QWORD PTR [rdx],rax
   14000176f:	mov    QWORD PTR [r8],0x0
   140001776:	mov    rax,QWORD PTR [rdi+0x10]
   14000177a:	mov    QWORD PTR [rbx+0x10],rax
   14000177e:	mov    rax,QWORD PTR [rdi+0x18]
   140001782:	mov    QWORD PTR [rbx+0x18],rax
   140001786:	mov    QWORD PTR [rdi+0x18],0xf
   14000178e:	mov    QWORD PTR [rdi+0x10],0x0
   140001796:	mov    BYTE PTR [rdi],0x0
   140001799:	mov    rbx,QWORD PTR [rsp+0x40]
   14000179e:	add    rsp,0x30
   1400017a2:	pop    rdi
   1400017a3:	ret    
   1400017a4:	int3   
   1400017a5:	int3   
   1400017a6:	int3   
   1400017a7:	int3   
   1400017a8:	int3   
   1400017a9:	int3   
   1400017aa:	int3   
   1400017ab:	int3   
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	test   rdx,rdx
   1400017b3:	je     0x140001830
   1400017b5:	mov    QWORD PTR [rsp+0x8],rbx
   1400017ba:	push   rdi
   1400017bb:	sub    rsp,0x20
   1400017bf:	mov    QWORD PTR [rdx+0x18],0xf
   1400017c7:	mov    QWORD PTR [rdx+0x10],0x0
   1400017cf:	mov    BYTE PTR [rdx],0x0
   1400017d2:	cmp    QWORD PTR [r8+0x18],0x10
   1400017d7:	mov    rbx,r8
   1400017da:	mov    rdi,rdx
   1400017dd:	jae    0x1400017f6
   1400017df:	mov    r8,QWORD PTR [r8+0x10]
   1400017e3:	inc    r8
   1400017e6:	je     0x140001803
   1400017e8:	mov    rdx,rbx
   1400017eb:	mov    rcx,rdi
   1400017ee:	call   QWORD PTR [rip+0x78d4]        # 0x1400090c8
   1400017f4:	jmp    0x140001803
   1400017f6:	mov    rax,QWORD PTR [r8]
   1400017f9:	mov    QWORD PTR [rdx],rax
   1400017fc:	mov    QWORD PTR [r8],0x0
   140001803:	mov    rax,QWORD PTR [rbx+0x10]
   140001807:	mov    QWORD PTR [rdi+0x10],rax
   14000180b:	mov    rax,QWORD PTR [rbx+0x18]
   14000180f:	mov    QWORD PTR [rdi+0x18],rax
   140001813:	mov    QWORD PTR [rbx+0x18],0xf
   14000181b:	mov    QWORD PTR [rbx+0x10],0x0
   140001823:	mov    BYTE PTR [rbx],0x0
   140001826:	mov    rbx,QWORD PTR [rsp+0x30]
   14000182b:	add    rsp,0x20
   14000182f:	pop    rdi
   140001830:	ret    
   140001831:	int3   
   140001832:	int3   
   140001833:	int3   
   140001834:	int3   
   140001835:	int3   
   140001836:	int3   
   140001837:	int3   
   140001838:	int3   
   140001839:	int3   
   14000183a:	int3   
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	mov    QWORD PTR [rsp+0x10],rdx
   140001845:	push   rdi
   140001846:	sub    rsp,0x30
   14000184a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001853:	mov    QWORD PTR [rsp+0x40],rbx
   140001858:	mov    rdi,r8
   14000185b:	mov    rbx,rdx
   14000185e:	mov    QWORD PTR [rsp+0x58],rdx
   140001863:	test   rdx,rdx
   140001866:	je     0x1400018c9
   140001868:	mov    QWORD PTR [rdx+0x18],0xf
   140001870:	mov    QWORD PTR [rdx+0x10],0x0
   140001878:	mov    BYTE PTR [rdx],0x0
   14000187b:	cmp    QWORD PTR [r8+0x18],0x10
   140001880:	jae    0x140001899
   140001882:	mov    r8,QWORD PTR [r8+0x10]
   140001886:	inc    r8
   140001889:	je     0x1400018a6
   14000188b:	mov    rdx,rdi
   14000188e:	mov    rcx,rbx
   140001891:	call   QWORD PTR [rip+0x7831]        # 0x1400090c8
   140001897:	jmp    0x1400018a6
   140001899:	mov    rax,QWORD PTR [r8]
   14000189c:	mov    QWORD PTR [rdx],rax
   14000189f:	mov    QWORD PTR [r8],0x0
   1400018a6:	mov    rax,QWORD PTR [rdi+0x10]
   1400018aa:	mov    QWORD PTR [rbx+0x10],rax
   1400018ae:	mov    rax,QWORD PTR [rdi+0x18]
   1400018b2:	mov    QWORD PTR [rbx+0x18],rax
   1400018b6:	mov    QWORD PTR [rdi+0x18],0xf
   1400018be:	mov    QWORD PTR [rdi+0x10],0x0
   1400018c6:	mov    BYTE PTR [rdi],0x0
   1400018c9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400018ce:	add    rsp,0x30
   1400018d2:	pop    rdi
   1400018d3:	ret    
   1400018d4:	int3   
   1400018d5:	int3   
   1400018d6:	int3   
   1400018d7:	int3   
   1400018d8:	int3   
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	ret    0x0
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	ret    0x0
   1400018f3:	int3   
   1400018f4:	int3   
   1400018f5:	int3   
   1400018f6:	int3   
   1400018f7:	int3   
   1400018f8:	int3   
   1400018f9:	int3   
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	ret    0x0
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	ret    0x0
   140001913:	int3   
   140001914:	int3   
   140001915:	int3   
   140001916:	int3   
   140001917:	int3   
   140001918:	int3   
   140001919:	int3   
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	ret    0x0
   140001923:	int3   
   140001924:	int3   
   140001925:	int3   
   140001926:	int3   
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	ret    0x0
   140001933:	int3   
   140001934:	int3   
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	int3   
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	rex push rbx
   140001942:	sub    rsp,0x20
   140001946:	cmp    QWORD PTR [rdx+0x18],0x10
   14000194b:	mov    rbx,rdx
   14000194e:	jb     0x140001958
   140001950:	mov    rcx,QWORD PTR [rdx]
   140001953:	call   0x1400071e2
   140001958:	mov    QWORD PTR [rbx+0x18],0xf
   140001960:	mov    QWORD PTR [rbx+0x10],0x0
   140001968:	mov    BYTE PTR [rbx],0x0
   14000196b:	add    rsp,0x20
   14000196f:	pop    rbx
   140001970:	ret    
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	rex push rbx
   140001982:	sub    rsp,0x20
   140001986:	cmp    QWORD PTR [rdx+0x18],0x10
   14000198b:	mov    rbx,rdx
   14000198e:	jb     0x140001998
   140001990:	mov    rcx,QWORD PTR [rdx]
   140001993:	call   0x1400071e2
   140001998:	mov    QWORD PTR [rbx+0x18],0xf
   1400019a0:	mov    QWORD PTR [rbx+0x10],0x0
   1400019a8:	mov    BYTE PTR [rbx],0x0
   1400019ab:	add    rsp,0x20
   1400019af:	pop    rbx
   1400019b0:	ret    
   1400019b1:	int3   
   1400019b2:	int3   
   1400019b3:	int3   
   1400019b4:	int3   
   1400019b5:	int3   
   1400019b6:	int3   
   1400019b7:	int3   
   1400019b8:	int3   
   1400019b9:	int3   
   1400019ba:	int3   
   1400019bb:	int3   
   1400019bc:	int3   
   1400019bd:	int3   
   1400019be:	int3   
   1400019bf:	int3   
   1400019c0:	rex push rbx
   1400019c2:	sub    rsp,0x20
   1400019c6:	cmp    QWORD PTR [rdx+0x18],0x10
   1400019cb:	mov    rbx,rdx
   1400019ce:	jb     0x1400019d8
   1400019d0:	mov    rcx,QWORD PTR [rdx]
   1400019d3:	call   0x1400071e2
   1400019d8:	mov    QWORD PTR [rbx+0x18],0xf
   1400019e0:	mov    QWORD PTR [rbx+0x10],0x0
   1400019e8:	mov    BYTE PTR [rbx],0x0
   1400019eb:	add    rsp,0x20
   1400019ef:	pop    rbx
   1400019f0:	ret    
   1400019f1:	int3   
   1400019f2:	int3   
   1400019f3:	int3   
   1400019f4:	int3   
   1400019f5:	int3   
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	int3   
   1400019f9:	int3   
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	rex push rbx
   140001a02:	sub    rsp,0x20
   140001a06:	cmp    QWORD PTR [rdx+0x18],0x8
   140001a0b:	mov    rbx,rdx
   140001a0e:	jb     0x140001a18
   140001a10:	mov    rcx,QWORD PTR [rdx]
   140001a13:	call   0x1400071e2
   140001a18:	xor    eax,eax
   140001a1a:	mov    QWORD PTR [rbx+0x18],0x7
   140001a22:	mov    QWORD PTR [rbx+0x10],rax
   140001a26:	mov    WORD PTR [rbx],ax
   140001a29:	add    rsp,0x20
   140001a2d:	pop    rbx
   140001a2e:	ret    
   140001a2f:	int3   
   140001a30:	rex push rbx
   140001a32:	sub    rsp,0x20
   140001a36:	cmp    QWORD PTR [rdx+0x18],0x8
   140001a3b:	mov    rbx,rdx
   140001a3e:	jb     0x140001a48
   140001a40:	mov    rcx,QWORD PTR [rdx]
   140001a43:	call   0x1400071e2
   140001a48:	xor    eax,eax
   140001a4a:	mov    QWORD PTR [rbx+0x18],0x7
   140001a52:	mov    QWORD PTR [rbx+0x10],rax
   140001a56:	mov    WORD PTR [rbx],ax
   140001a59:	add    rsp,0x20
   140001a5d:	pop    rbx
   140001a5e:	ret    
   140001a5f:	int3   
   140001a60:	rex push rbx
   140001a62:	sub    rsp,0x20
   140001a66:	cmp    QWORD PTR [rdx+0x18],0x8
   140001a6b:	mov    rbx,rdx
   140001a6e:	jb     0x140001a78
   140001a70:	mov    rcx,QWORD PTR [rdx]
   140001a73:	call   0x1400071e2
   140001a78:	xor    eax,eax
   140001a7a:	mov    QWORD PTR [rbx+0x18],0x7
   140001a82:	mov    QWORD PTR [rbx+0x10],rax
   140001a86:	mov    WORD PTR [rbx],ax
   140001a89:	add    rsp,0x20
   140001a8d:	pop    rbx
   140001a8e:	ret    
   140001a8f:	int3   
   140001a90:	rex push rbx
   140001a92:	sub    rsp,0x30
   140001a96:	mov    r8d,0x1
   140001a9c:	mov    rbx,rcx
   140001a9f:	mov    DWORD PTR [rsp+0x20],0x0
   140001aa7:	call   0x1400028e0
   140001aac:	mov    rax,rbx
   140001aaf:	add    rsp,0x30
   140001ab3:	pop    rbx
   140001ab4:	ret    
   140001ab5:	int3   
   140001ab6:	int3   
   140001ab7:	int3   
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ac5:	push   rdi
   140001ac6:	sub    rsp,0x30
   140001aca:	xor    edi,edi
   140001acc:	mov    rbx,rcx
   140001acf:	mov    DWORD PTR [rsp+0x20],edi
   140001ad3:	call   0x1400034d0
   140001ad8:	mov    QWORD PTR [rbx+0x50],rdi
   140001adc:	mov    QWORD PTR [rbx+0x58],rdi
   140001ae0:	mov    QWORD PTR [rbx+0x60],rdi
   140001ae4:	mov    DWORD PTR [rbx+0x68],0xffffffff
   140001aeb:	lea    rax,[rip+0x80e6]        # 0x140009bd8
   140001af2:	mov    QWORD PTR [rbx],rax
   140001af5:	lea    rax,[rip+0x80f4]        # 0x140009bf0
   140001afc:	mov    QWORD PTR [rbx+0x48],rax
   140001b00:	mov    rax,rbx
   140001b03:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b08:	add    rsp,0x30
   140001b0c:	pop    rdi
   140001b0d:	ret    
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	mov    rax,rcx
   140001b13:	ret    
   140001b14:	int3   
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	mov    rax,rcx
   140001b23:	ret    
   140001b24:	int3   
   140001b25:	int3   
   140001b26:	int3   
   140001b27:	int3   
   140001b28:	int3   
   140001b29:	int3   
   140001b2a:	int3   
   140001b2b:	int3   
   140001b2c:	int3   
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	mov    rax,rcx
   140001b33:	ret    
   140001b34:	int3   
   140001b35:	int3   
   140001b36:	int3   
   140001b37:	int3   
   140001b38:	int3   
   140001b39:	int3   
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	rex push rbp
   140001b42:	push   rbx
   140001b43:	push   rsi
   140001b44:	push   rdi
   140001b45:	push   r12
   140001b47:	push   r13
   140001b49:	push   r14
   140001b4b:	push   r15
   140001b4d:	lea    rbp,[rsp-0x1f]
   140001b52:	sub    rsp,0xf8
   140001b59:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   140001b61:	mov    r14,rcx
   140001b64:	xor    r15d,r15d
   140001b67:	mov    DWORD PTR [rsp+0x20],r15d
   140001b6c:	lea    r12,[rip+0x7eed]        # 0x140009a60
   140001b73:	mov    QWORD PTR [rbp-0x39],r12
   140001b77:	mov    QWORD PTR [rbp-0x31],r15
   140001b7b:	xorps  xmm0,xmm0
   140001b7e:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140001b83:	or     esi,0xffffffff
   140001b86:	mov    DWORD PTR [rbp-0x19],esi
   140001b89:	lea    rax,[rip+0x7d68]        # 0x1400098f8
   140001b90:	mov    QWORD PTR [rbp+0x6f],rax
   140001b94:	lea    r8d,[r15+0x1]
   140001b98:	lea    rdx,[rbp+0x6f]
   140001b9c:	lea    rcx,[rbp-0x11]
   140001ba0:	call   QWORD PTR [rip+0x7532]        # 0x1400090d8
   140001ba6:	lea    r13,[rip+0x7f13]        # 0x140009ac0
   140001bad:	mov    QWORD PTR [rbp-0x39],r13
   140001bb1:	lea    rax,[rip+0x7f18]        # 0x140009ad0
   140001bb8:	mov    QWORD PTR [rbp-0x11],rax
   140001bbc:	lea    rdi,[rip+0x80cd]        # 0x140009c90
   140001bc3:	mov    QWORD PTR [rbp-0x59],rdi
   140001bc7:	lea    rax,[rip+0x7ea2]        # 0x140009a70
   140001bce:	mov    QWORD PTR [rbp-0x49],rax
   140001bd2:	mov    DWORD PTR [rsp+0x20],0x2
   140001bda:	mov    QWORD PTR [rsp+0x40],r12
   140001bdf:	mov    rcx,QWORD PTR [rbp-0x31]
   140001be3:	mov    QWORD PTR [rsp+0x48],rcx
   140001be8:	test   rcx,rcx
   140001beb:	je     0x140001bf3
   140001bed:	mov    rax,QWORD PTR [rcx]
   140001bf0:	call   QWORD PTR [rax+0x18]
   140001bf3:	mov    rax,QWORD PTR [rbp-0x29]
   140001bf7:	mov    QWORD PTR [rsp+0x50],rax
   140001bfc:	mov    rax,QWORD PTR [rbp-0x21]
   140001c00:	mov    QWORD PTR [rsp+0x58],rax
   140001c05:	mov    eax,DWORD PTR [rbp-0x19]
   140001c08:	mov    DWORD PTR [rbp-0x79],eax
   140001c0b:	lea    rdx,[rbp-0x11]
   140001c0f:	lea    rcx,[rbp-0x71]
   140001c13:	call   QWORD PTR [rip+0x74c7]        # 0x1400090e0
   140001c19:	nop
   140001c1a:	lea    rax,[rip+0x802f]        # 0x140009c50
   140001c21:	mov    QWORD PTR [rsp+0x40],rax
   140001c26:	lea    rax,[rip+0x8033]        # 0x140009c60
   140001c2d:	mov    QWORD PTR [rbp-0x71],rax
   140001c31:	mov    rax,QWORD PTR [rbp-0x59]
   140001c35:	movsxd rcx,DWORD PTR [rax+0x4]
   140001c39:	lea    rax,[rip+0x8038]        # 0x140009c78
   140001c40:	mov    QWORD PTR [rbp+rcx*1-0x59],rax
   140001c45:	mov    rax,QWORD PTR [rbp-0x59]
   140001c49:	movsxd rcx,DWORD PTR [rax+0x4]
   140001c4d:	lea    edx,[rcx-0x10]
   140001c50:	mov    DWORD PTR [rbp+rcx*1-0x5d],edx
   140001c54:	mov    rbx,r15
   140001c57:	mov    QWORD PTR [rbp+0x77],rbx
   140001c5b:	mov    rcx,QWORD PTR [rbp-0x31]
   140001c5f:	test   rcx,rcx
   140001c62:	je     0x140001ca2
   140001c64:	mov    rax,QWORD PTR [rcx]
   140001c67:	lea    rdx,[rbp+0x67]
   140001c6b:	call   QWORD PTR [rax+0x28]
   140001c6e:	nop
   140001c6f:	mov    rbx,QWORD PTR [rax]
   140001c72:	mov    QWORD PTR [rbp+0x77],rbx
   140001c76:	test   rbx,rbx
   140001c79:	je     0x140001c85
   140001c7b:	mov    rax,QWORD PTR [rbx]
   140001c7e:	mov    rcx,rbx
   140001c81:	call   QWORD PTR [rax+0x18]
   140001c84:	nop
   140001c85:	mov    rcx,QWORD PTR [rbp+0x67]
   140001c89:	test   rcx,rcx
   140001c8c:	je     0x140001ca2
   140001c8e:	mov    rax,QWORD PTR [rcx]
   140001c91:	call   QWORD PTR [rax+0x20]
   140001c94:	mov    rcx,QWORD PTR [rbp+0x67]
   140001c98:	test   al,al
   140001c9a:	cmovne rcx,r15
   140001c9e:	mov    QWORD PTR [rbp+0x67],rcx
   140001ca2:	mov    rax,QWORD PTR [rbp-0x21]
   140001ca6:	mov    QWORD PTR [rsp+0x58],rax
   140001cab:	mov    eax,DWORD PTR [rbp-0x19]
   140001cae:	mov    DWORD PTR [rbp-0x79],eax
   140001cb1:	mov    rax,QWORD PTR [rbp-0x29]
   140001cb5:	mov    QWORD PTR [rsp+0x50],rax
   140001cba:	mov    rcx,QWORD PTR [rsp+0x48]
   140001cbf:	test   rcx,rcx
   140001cc2:	je     0x140001cca
   140001cc4:	mov    rax,QWORD PTR [rcx]
   140001cc7:	call   QWORD PTR [rax+0x20]
   140001cca:	mov    QWORD PTR [rsp+0x48],rbx
   140001ccf:	test   rbx,rbx
   140001cd2:	je     0x140001cde
   140001cd4:	mov    rax,QWORD PTR [rbx]
   140001cd7:	mov    rcx,rbx
   140001cda:	call   QWORD PTR [rax+0x18]
   140001cdd:	nop
   140001cde:	test   rbx,rbx
   140001ce1:	je     0x140001ced
   140001ce3:	mov    rax,QWORD PTR [rbx]
   140001ce6:	mov    rcx,rbx
   140001ce9:	call   QWORD PTR [rax+0x20]
   140001cec:	nop
   140001ced:	lea    rax,[rip+0x801c]        # 0x140009d10
   140001cf4:	mov    QWORD PTR [rsp+0x50],rax
   140001cf9:	lea    rax,[rip+0x7fa0]        # 0x140009ca0
   140001d00:	mov    QWORD PTR [rsp+0x58],rax
   140001d05:	mov    DWORD PTR [rbp-0x79],0x80
   140001d0c:	mov    eax,DWORD PTR [rip+0xc9e6]        # 0x14000e6f8
   140001d12:	test   al,0x1
   140001d14:	jne    0x140001e67
   140001d1a:	or     eax,0x1
   140001d1d:	mov    DWORD PTR [rip+0xc9d5],eax        # 0x14000e6f8
   140001d23:	mov    ecx,0x58
   140001d28:	call   0x1400071dc
   140001d2d:	mov    rbx,rax
   140001d30:	mov    QWORD PTR [rbp+0x7f],rax
   140001d34:	test   rax,rax
   140001d37:	je     0x140001d95
   140001d39:	mov    QWORD PTR [rax+0x40],rdi
   140001d3d:	lea    rax,[rip+0x7d2c]        # 0x140009a70
   140001d44:	mov    QWORD PTR [rbx+0x50],rax
   140001d48:	mov    DWORD PTR [rsp+0x20],0x6
   140001d50:	lea    rdx,[rsp+0x40]
   140001d55:	mov    rcx,rbx
   140001d58:	call   0x1400030a0
   140001d5d:	lea    rax,[rip+0x7eec]        # 0x140009c50
   140001d64:	mov    QWORD PTR [rbx],rax
   140001d67:	lea    rax,[rip+0x7ef2]        # 0x140009c60
   140001d6e:	mov    QWORD PTR [rbx+0x28],rax
   140001d72:	mov    rax,QWORD PTR [rbx+0x40]
   140001d76:	movsxd rcx,DWORD PTR [rax+0x4]
   140001d7a:	lea    rax,[rip+0x7ef7]        # 0x140009c78
   140001d81:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140001d86:	mov    rax,QWORD PTR [rbx+0x40]
   140001d8a:	movsxd rcx,DWORD PTR [rax+0x4]
   140001d8e:	mov    DWORD PTR [rcx+rbx*1+0x3c],r15d
   140001d93:	jmp    0x140001d98
   140001d95:	mov    rbx,r15
   140001d98:	test   rbx,rbx
   140001d9b:	jne    0x140001da4
   140001d9d:	mov    QWORD PTR [rsp+0x28],r15
   140001da2:	jmp    0x140001db8
   140001da4:	mov    rax,QWORD PTR [rbx+0x40]
   140001da8:	movsxd rcx,DWORD PTR [rax+0x4]
   140001dac:	lea    rax,[rbx+0x40]
   140001db0:	add    rax,rcx
   140001db3:	mov    QWORD PTR [rsp+0x28],rax
   140001db8:	mov    QWORD PTR [rsp+0x30],r15
   140001dbd:	mov    rdx,rbx
   140001dc0:	lea    rcx,[rbp+0x7f]
   140001dc4:	call   0x140001140
   140001dc9:	mov    rdx,QWORD PTR [rsp+0x30]
   140001dce:	mov    rcx,QWORD PTR [rax]
   140001dd1:	mov    QWORD PTR [rsp+0x30],rcx
   140001dd6:	mov    QWORD PTR [rax],rdx
   140001dd9:	mov    rdi,QWORD PTR [rbp+0x7f]
   140001ddd:	test   rdi,rdi
   140001de0:	je     0x140001e00
   140001de2:	lock dec DWORD PTR [rdi+0x8]
   140001de6:	jne    0x140001e00
   140001de8:	mov    rax,QWORD PTR [rdi]
   140001deb:	mov    rcx,rdi
   140001dee:	call   QWORD PTR [rax+0x8]
   140001df1:	lock dec DWORD PTR [rdi+0xc]
   140001df5:	jne    0x140001e00
   140001df7:	mov    rax,QWORD PTR [rdi]
   140001dfa:	mov    rcx,rdi
   140001dfd:	call   QWORD PTR [rax+0x10]
   140001e00:	mov    r8,rbx
   140001e03:	mov    rdx,rbx
   140001e06:	lea    rcx,[rsp+0x28]
   140001e0b:	call   0x140006c10
   140001e10:	nop
   140001e11:	mov    rax,QWORD PTR [rsp+0x28]
   140001e16:	mov    QWORD PTR [rip+0xc8cb],rax        # 0x14000e6e8
   140001e1d:	mov    rax,QWORD PTR [rsp+0x30]
   140001e22:	mov    QWORD PTR [rip+0xc8c7],rax        # 0x14000e6f0
   140001e29:	test   rax,rax
   140001e2c:	je     0x140001e5a
   140001e2e:	lock inc DWORD PTR [rax+0x8]
   140001e32:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e37:	test   rbx,rbx
   140001e3a:	je     0x140001e5a
   140001e3c:	lock dec DWORD PTR [rbx+0x8]
   140001e40:	jne    0x140001e5a
   140001e42:	mov    rax,QWORD PTR [rbx]
   140001e45:	mov    rcx,rbx
   140001e48:	call   QWORD PTR [rax+0x8]
   140001e4b:	lock dec DWORD PTR [rbx+0xc]
   140001e4f:	jne    0x140001e5a
   140001e51:	mov    rax,QWORD PTR [rbx]
   140001e54:	mov    rcx,rbx
   140001e57:	call   QWORD PTR [rax+0x10]
   140001e5a:	lea    rcx,[rip+0x666f]        # 0x1400084d0
   140001e61:	call   0x1400072e8
   140001e66:	nop
   140001e67:	mov    rax,QWORD PTR [rip+0xc87a]        # 0x14000e6e8
   140001e6e:	mov    QWORD PTR [r14],rax
   140001e71:	mov    rax,QWORD PTR [rip+0xc878]        # 0x14000e6f0
   140001e78:	mov    QWORD PTR [r14+0x8],rax
   140001e7c:	test   rax,rax
   140001e7f:	je     0x140001e85
   140001e81:	lock inc DWORD PTR [rax+0x8]
   140001e85:	lea    rax,[rip+0x7dc4]        # 0x140009c50
   140001e8c:	mov    QWORD PTR [rsp+0x40],rax
   140001e91:	lea    rax,[rip+0x7dc8]        # 0x140009c60
   140001e98:	mov    QWORD PTR [rbp-0x71],rax
   140001e9c:	mov    rax,QWORD PTR [rbp-0x59]
   140001ea0:	movsxd rcx,DWORD PTR [rax+0x4]
   140001ea4:	lea    rax,[rip+0x7dcd]        # 0x140009c78
   140001eab:	mov    QWORD PTR [rbp+rcx*1-0x59],rax
   140001eb0:	mov    rax,QWORD PTR [rbp-0x59]
   140001eb4:	movsxd rcx,DWORD PTR [rax+0x4]
   140001eb8:	lea    edx,[rcx-0x10]
   140001ebb:	mov    DWORD PTR [rbp+rcx*1-0x5d],edx
   140001ebf:	mov    QWORD PTR [rsp+0x40],r13
   140001ec4:	lea    rbx,[rip+0x7a1d]        # 0x1400098e8
   140001ecb:	mov    QWORD PTR [rbp-0x71],rbx
   140001ecf:	lea    rcx,[rbp-0x71]
   140001ed3:	call   QWORD PTR [rip+0x720f]        # 0x1400090e8
   140001ed9:	mov    QWORD PTR [rsp+0x40],r12
   140001ede:	mov    rcx,QWORD PTR [rsp+0x48]
   140001ee3:	test   rcx,rcx
   140001ee6:	je     0x140001efe
   140001ee8:	mov    rax,QWORD PTR [rcx]
   140001eeb:	call   QWORD PTR [rax+0x20]
   140001eee:	mov    rcx,QWORD PTR [rsp+0x48]
   140001ef3:	test   al,al
   140001ef5:	cmovne rcx,r15
   140001ef9:	mov    QWORD PTR [rsp+0x48],rcx
   140001efe:	lea    rax,[rip+0x7b6b]        # 0x140009a70
   140001f05:	mov    QWORD PTR [rbp-0x49],rax
   140001f09:	mov    QWORD PTR [rbp-0x39],r13
   140001f0d:	mov    QWORD PTR [rbp-0x11],rbx
   140001f11:	lea    rcx,[rbp-0x11]
   140001f15:	call   QWORD PTR [rip+0x71cd]        # 0x1400090e8
   140001f1b:	mov    QWORD PTR [rbp-0x39],r12
   140001f1f:	mov    rcx,QWORD PTR [rbp-0x31]
   140001f23:	test   rcx,rcx
   140001f26:	je     0x140001f2e
   140001f28:	mov    rax,QWORD PTR [rcx]
   140001f2b:	call   QWORD PTR [rax+0x20]
   140001f2e:	mov    rax,r14
   140001f31:	add    rsp,0xf8
   140001f38:	pop    r15
   140001f3a:	pop    r14
   140001f3c:	pop    r13
   140001f3e:	pop    r12
   140001f40:	pop    rdi
   140001f41:	pop    rsi
   140001f42:	pop    rbx
   140001f43:	pop    rbp
   140001f44:	ret    
   140001f45:	int3   
   140001f46:	int3   
   140001f47:	int3   
   140001f48:	int3   
   140001f49:	int3   
   140001f4a:	int3   
   140001f4b:	int3   
   140001f4c:	int3   
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	rex push rbp
   140001f52:	push   rbx
   140001f53:	push   rsi
   140001f54:	push   rdi
   140001f55:	push   r12
   140001f57:	push   r13
   140001f59:	push   r14
   140001f5b:	push   r15
   140001f5d:	lea    rbp,[rsp-0x1f]
   140001f62:	sub    rsp,0xf8
   140001f69:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   140001f71:	mov    r14,rcx
   140001f74:	xor    r15d,r15d
   140001f77:	mov    DWORD PTR [rsp+0x20],r15d
   140001f7c:	lea    r12,[rip+0x7add]        # 0x140009a60
   140001f83:	mov    QWORD PTR [rbp-0x39],r12
   140001f87:	mov    QWORD PTR [rbp-0x31],r15
   140001f8b:	xorps  xmm0,xmm0
   140001f8e:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140001f93:	or     esi,0xffffffff
   140001f96:	mov    DWORD PTR [rbp-0x19],esi
   140001f99:	lea    rax,[rip+0x7ee0]        # 0x140009e80
   140001fa0:	mov    QWORD PTR [rbp+0x6f],rax
   140001fa4:	lea    rdx,[rbp+0x6f]
   140001fa8:	lea    rcx,[rbp-0x11]
   140001fac:	call   QWORD PTR [rip+0x711e]        # 0x1400090d0
   140001fb2:	lea    r13,[rip+0x7b2f]        # 0x140009ae8
   140001fb9:	mov    QWORD PTR [rbp-0x39],r13
   140001fbd:	lea    rax,[rip+0x7b34]        # 0x140009af8
   140001fc4:	mov    QWORD PTR [rbp-0x11],rax
   140001fc8:	lea    rdi,[rip+0x7e19]        # 0x140009de8
   140001fcf:	mov    QWORD PTR [rbp-0x59],rdi
   140001fd3:	lea    rax,[rip+0x7a96]        # 0x140009a70
   140001fda:	mov    QWORD PTR [rbp-0x49],rax
   140001fde:	mov    DWORD PTR [rsp+0x20],0x2
   140001fe6:	mov    QWORD PTR [rsp+0x40],r12
   140001feb:	mov    rcx,QWORD PTR [rbp-0x31]
   140001fef:	mov    QWORD PTR [rsp+0x48],rcx
   140001ff4:	test   rcx,rcx
   140001ff7:	je     0x140001fff
   140001ff9:	mov    rax,QWORD PTR [rcx]
   140001ffc:	call   QWORD PTR [rax+0x18]
   140001fff:	mov    rax,QWORD PTR [rbp-0x29]
   140002003:	mov    QWORD PTR [rsp+0x50],rax
   140002008:	mov    rax,QWORD PTR [rbp-0x21]
   14000200c:	mov    QWORD PTR [rsp+0x58],rax
   140002011:	mov    eax,DWORD PTR [rbp-0x19]
   140002014:	mov    DWORD PTR [rbp-0x79],eax
   140002017:	lea    rdx,[rbp-0x11]
   14000201b:	lea    rcx,[rbp-0x71]
   14000201f:	call   QWORD PTR [rip+0x70bb]        # 0x1400090e0
   140002025:	nop
   140002026:	lea    rax,[rip+0x7d7b]        # 0x140009da8
   14000202d:	mov    QWORD PTR [rsp+0x40],rax
   140002032:	lea    rax,[rip+0x7d7f]        # 0x140009db8
   140002039:	mov    QWORD PTR [rbp-0x71],rax
   14000203d:	mov    rax,QWORD PTR [rbp-0x59]
   140002041:	movsxd rcx,DWORD PTR [rax+0x4]
   140002045:	lea    rax,[rip+0x7d84]        # 0x140009dd0
   14000204c:	mov    QWORD PTR [rbp+rcx*1-0x59],rax
   140002051:	mov    rax,QWORD PTR [rbp-0x59]
   140002055:	movsxd rcx,DWORD PTR [rax+0x4]
   140002059:	lea    edx,[rcx-0x10]
   14000205c:	mov    DWORD PTR [rbp+rcx*1-0x5d],edx
   140002060:	mov    rbx,r15
   140002063:	mov    QWORD PTR [rbp+0x77],rbx
   140002067:	mov    rcx,QWORD PTR [rbp-0x31]
   14000206b:	test   rcx,rcx
   14000206e:	je     0x1400020ae
   140002070:	mov    rax,QWORD PTR [rcx]
   140002073:	lea    rdx,[rbp+0x67]
   140002077:	call   QWORD PTR [rax+0x28]
   14000207a:	nop
   14000207b:	mov    rbx,QWORD PTR [rax]
   14000207e:	mov    QWORD PTR [rbp+0x77],rbx
   140002082:	test   rbx,rbx
   140002085:	je     0x140002091
   140002087:	mov    rax,QWORD PTR [rbx]
   14000208a:	mov    rcx,rbx
   14000208d:	call   QWORD PTR [rax+0x18]
   140002090:	nop
   140002091:	mov    rcx,QWORD PTR [rbp+0x67]
   140002095:	test   rcx,rcx
   140002098:	je     0x1400020ae
   14000209a:	mov    rax,QWORD PTR [rcx]
   14000209d:	call   QWORD PTR [rax+0x20]
   1400020a0:	mov    rcx,QWORD PTR [rbp+0x67]
   1400020a4:	test   al,al
   1400020a6:	cmovne rcx,r15
   1400020aa:	mov    QWORD PTR [rbp+0x67],rcx
   1400020ae:	mov    rax,QWORD PTR [rbp-0x21]
   1400020b2:	mov    QWORD PTR [rsp+0x58],rax
   1400020b7:	mov    eax,DWORD PTR [rbp-0x19]
   1400020ba:	mov    DWORD PTR [rbp-0x79],eax
   1400020bd:	mov    rax,QWORD PTR [rbp-0x29]
   1400020c1:	mov    QWORD PTR [rsp+0x50],rax
   1400020c6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400020cb:	test   rcx,rcx
   1400020ce:	je     0x1400020d6
   1400020d0:	mov    rax,QWORD PTR [rcx]
   1400020d3:	call   QWORD PTR [rax+0x20]
   1400020d6:	mov    QWORD PTR [rsp+0x48],rbx
   1400020db:	test   rbx,rbx
   1400020de:	je     0x1400020ea
   1400020e0:	mov    rax,QWORD PTR [rbx]
   1400020e3:	mov    rcx,rbx
   1400020e6:	call   QWORD PTR [rax+0x18]
   1400020e9:	nop
   1400020ea:	test   rbx,rbx
   1400020ed:	je     0x1400020f9
   1400020ef:	mov    rax,QWORD PTR [rbx]
   1400020f2:	mov    rcx,rbx
   1400020f5:	call   QWORD PTR [rax+0x20]
   1400020f8:	nop
   1400020f9:	lea    rax,[rip+0x7cf0]        # 0x140009df0
   140002100:	mov    QWORD PTR [rsp+0x50],rax
   140002105:	lea    rax,[rip+0x7b94]        # 0x140009ca0
   14000210c:	mov    QWORD PTR [rsp+0x58],rax
   140002111:	mov    DWORD PTR [rbp-0x79],0x80
   140002118:	mov    eax,DWORD PTR [rip+0xc5f2]        # 0x14000e710
   14000211e:	test   al,0x1
   140002120:	jne    0x140002273
   140002126:	or     eax,0x1
   140002129:	mov    DWORD PTR [rip+0xc5e1],eax        # 0x14000e710
   14000212f:	mov    ecx,0x58
   140002134:	call   0x1400071dc
   140002139:	mov    rbx,rax
   14000213c:	mov    QWORD PTR [rbp+0x7f],rax
   140002140:	test   rax,rax
   140002143:	je     0x1400021a1
   140002145:	mov    QWORD PTR [rax+0x40],rdi
   140002149:	lea    rax,[rip+0x7920]        # 0x140009a70
   140002150:	mov    QWORD PTR [rbx+0x50],rax
   140002154:	mov    DWORD PTR [rsp+0x20],0x6
   14000215c:	lea    rdx,[rsp+0x40]
   140002161:	mov    rcx,rbx
   140002164:	call   0x140003200
   140002169:	lea    rax,[rip+0x7c38]        # 0x140009da8
   140002170:	mov    QWORD PTR [rbx],rax
   140002173:	lea    rax,[rip+0x7c3e]        # 0x140009db8
   14000217a:	mov    QWORD PTR [rbx+0x28],rax
   14000217e:	mov    rax,QWORD PTR [rbx+0x40]
   140002182:	movsxd rcx,DWORD PTR [rax+0x4]
   140002186:	lea    rax,[rip+0x7c43]        # 0x140009dd0
   14000218d:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140002192:	mov    rax,QWORD PTR [rbx+0x40]
   140002196:	movsxd rcx,DWORD PTR [rax+0x4]
   14000219a:	mov    DWORD PTR [rcx+rbx*1+0x3c],r15d
   14000219f:	jmp    0x1400021a4
   1400021a1:	mov    rbx,r15
   1400021a4:	test   rbx,rbx
   1400021a7:	jne    0x1400021b0
   1400021a9:	mov    QWORD PTR [rsp+0x28],r15
   1400021ae:	jmp    0x1400021c4
   1400021b0:	mov    rax,QWORD PTR [rbx+0x40]
   1400021b4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400021b8:	lea    rax,[rbx+0x40]
   1400021bc:	add    rax,rcx
   1400021bf:	mov    QWORD PTR [rsp+0x28],rax
   1400021c4:	mov    QWORD PTR [rsp+0x30],r15
   1400021c9:	mov    rdx,rbx
   1400021cc:	lea    rcx,[rbp+0x7f]
   1400021d0:	call   0x140001200
   1400021d5:	mov    rdx,QWORD PTR [rsp+0x30]
   1400021da:	mov    rcx,QWORD PTR [rax]
   1400021dd:	mov    QWORD PTR [rsp+0x30],rcx
   1400021e2:	mov    QWORD PTR [rax],rdx
   1400021e5:	mov    rdi,QWORD PTR [rbp+0x7f]
   1400021e9:	test   rdi,rdi
   1400021ec:	je     0x14000220c
   1400021ee:	lock dec DWORD PTR [rdi+0x8]
   1400021f2:	jne    0x14000220c
   1400021f4:	mov    rax,QWORD PTR [rdi]
   1400021f7:	mov    rcx,rdi
   1400021fa:	call   QWORD PTR [rax+0x8]
   1400021fd:	lock dec DWORD PTR [rdi+0xc]
   140002201:	jne    0x14000220c
   140002203:	mov    rax,QWORD PTR [rdi]
   140002206:	mov    rcx,rdi
   140002209:	call   QWORD PTR [rax+0x10]
   14000220c:	mov    r8,rbx
   14000220f:	mov    rdx,rbx
   140002212:	lea    rcx,[rsp+0x28]
   140002217:	call   0x140006c10
   14000221c:	nop
   14000221d:	mov    rax,QWORD PTR [rsp+0x28]
   140002222:	mov    QWORD PTR [rip+0xc4d7],rax        # 0x14000e700
   140002229:	mov    rax,QWORD PTR [rsp+0x30]
   14000222e:	mov    QWORD PTR [rip+0xc4d3],rax        # 0x14000e708
   140002235:	test   rax,rax
   140002238:	je     0x140002266
   14000223a:	lock inc DWORD PTR [rax+0x8]
   14000223e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002243:	test   rbx,rbx
   140002246:	je     0x140002266
   140002248:	lock dec DWORD PTR [rbx+0x8]
   14000224c:	jne    0x140002266
   14000224e:	mov    rax,QWORD PTR [rbx]
   140002251:	mov    rcx,rbx
   140002254:	call   QWORD PTR [rax+0x8]
   140002257:	lock dec DWORD PTR [rbx+0xc]
   14000225b:	jne    0x140002266
   14000225d:	mov    rax,QWORD PTR [rbx]
   140002260:	mov    rcx,rbx
   140002263:	call   QWORD PTR [rax+0x10]
   140002266:	lea    rcx,[rip+0x62a3]        # 0x140008510
   14000226d:	call   0x1400072e8
   140002272:	nop
   140002273:	mov    rax,QWORD PTR [rip+0xc486]        # 0x14000e700
   14000227a:	mov    QWORD PTR [r14],rax
   14000227d:	mov    rax,QWORD PTR [rip+0xc484]        # 0x14000e708
   140002284:	mov    QWORD PTR [r14+0x8],rax
   140002288:	test   rax,rax
   14000228b:	je     0x140002291
   14000228d:	lock inc DWORD PTR [rax+0x8]
   140002291:	lea    rax,[rip+0x7b10]        # 0x140009da8
   140002298:	mov    QWORD PTR [rsp+0x40],rax
   14000229d:	lea    rax,[rip+0x7b14]        # 0x140009db8
   1400022a4:	mov    QWORD PTR [rbp-0x71],rax
   1400022a8:	mov    rax,QWORD PTR [rbp-0x59]
   1400022ac:	movsxd rcx,DWORD PTR [rax+0x4]
   1400022b0:	lea    rax,[rip+0x7b19]        # 0x140009dd0
   1400022b7:	mov    QWORD PTR [rbp+rcx*1-0x59],rax
   1400022bc:	mov    rax,QWORD PTR [rbp-0x59]
   1400022c0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400022c4:	lea    edx,[rcx-0x10]
   1400022c7:	mov    DWORD PTR [rbp+rcx*1-0x5d],edx
   1400022cb:	mov    QWORD PTR [rsp+0x40],r13
   1400022d0:	lea    rbx,[rip+0x75f9]        # 0x1400098d0
   1400022d7:	mov    QWORD PTR [rbp-0x71],rbx
   1400022db:	lea    rcx,[rbp-0x71]
   1400022df:	call   QWORD PTR [rip+0x6e03]        # 0x1400090e8
   1400022e5:	mov    QWORD PTR [rsp+0x40],r12
   1400022ea:	mov    rcx,QWORD PTR [rsp+0x48]
   1400022ef:	test   rcx,rcx
   1400022f2:	je     0x14000230a
   1400022f4:	mov    rax,QWORD PTR [rcx]
   1400022f7:	call   QWORD PTR [rax+0x20]
   1400022fa:	mov    rcx,QWORD PTR [rsp+0x48]
   1400022ff:	test   al,al
   140002301:	cmovne rcx,r15
   140002305:	mov    QWORD PTR [rsp+0x48],rcx
   14000230a:	lea    rax,[rip+0x775f]        # 0x140009a70
   140002311:	mov    QWORD PTR [rbp-0x49],rax
   140002315:	mov    QWORD PTR [rbp-0x39],r13
   140002319:	mov    QWORD PTR [rbp-0x11],rbx
   14000231d:	lea    rcx,[rbp-0x11]
   140002321:	call   QWORD PTR [rip+0x6dc1]        # 0x1400090e8
   140002327:	mov    QWORD PTR [rbp-0x39],r12
   14000232b:	mov    rcx,QWORD PTR [rbp-0x31]
   14000232f:	test   rcx,rcx
   140002332:	je     0x14000233a
   140002334:	mov    rax,QWORD PTR [rcx]
   140002337:	call   QWORD PTR [rax+0x20]
   14000233a:	mov    rax,r14
   14000233d:	add    rsp,0xf8
   140002344:	pop    r15
   140002346:	pop    r14
   140002348:	pop    r13
   14000234a:	pop    r12
   14000234c:	pop    rdi
   14000234d:	pop    rsi
   14000234e:	pop    rbx
   14000234f:	pop    rbp
   140002350:	ret    
   140002351:	int3   
   140002352:	int3   
   140002353:	int3   
   140002354:	int3   
   140002355:	int3   
   140002356:	int3   
   140002357:	int3   
   140002358:	int3   
   140002359:	int3   
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	mov    rax,QWORD PTR [rdx]
   140002363:	mov    QWORD PTR [rcx+0x18],rax
   140002367:	mov    rax,rcx
   14000236a:	ret    
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	mov    rax,QWORD PTR [rdx]
   140002373:	mov    QWORD PTR [rcx+0x10],rax
   140002377:	mov    rax,rcx
   14000237a:	ret    
   14000237b:	int3   
   14000237c:	int3   
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	mov    eax,DWORD PTR [rdx]
   140002382:	mov    DWORD PTR [rcx+0x20],eax
   140002385:	mov    rax,rcx
   140002388:	ret    
   140002389:	int3   
   14000238a:	int3   
   14000238b:	int3   
   14000238c:	int3   
   14000238d:	int3   
   14000238e:	int3   
   14000238f:	int3   
   140002390:	mov    rax,QWORD PTR [rdx]
   140002393:	mov    QWORD PTR [rcx+0x18],rax
   140002397:	mov    rax,rcx
   14000239a:	ret    
   14000239b:	int3   
   14000239c:	int3   
   14000239d:	int3   
   14000239e:	int3   
   14000239f:	int3   
   1400023a0:	mov    rax,QWORD PTR [rdx]
   1400023a3:	mov    QWORD PTR [rcx+0x10],rax
   1400023a7:	mov    rax,rcx
   1400023aa:	ret    
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	mov    eax,DWORD PTR [rdx]
   1400023b2:	mov    DWORD PTR [rcx+0x20],eax
   1400023b5:	mov    rax,rcx
   1400023b8:	ret    
   1400023b9:	int3   
   1400023ba:	int3   
   1400023bb:	int3   
   1400023bc:	int3   
   1400023bd:	int3   
   1400023be:	int3   
   1400023bf:	int3   
   1400023c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400023c5:	mov    QWORD PTR [rsp+0x20],rbp
   1400023ca:	push   rsi
   1400023cb:	sub    rsp,0x20
   1400023cf:	mov    rbp,rcx
   1400023d2:	lea    rcx,[rsp+0x40]
   1400023d7:	mov    rbx,r8
   1400023da:	mov    rsi,rdx
   1400023dd:	call   0x140001140
   1400023e2:	mov    r10,QWORD PTR [rbx]
   1400023e5:	mov    r9,QWORD PTR [rax]
   1400023e8:	mov    QWORD PTR [rbx],r9
   1400023eb:	mov    QWORD PTR [rax],r10
   1400023ee:	mov    rbx,QWORD PTR [rsp+0x40]
   1400023f3:	test   rbx,rbx
   1400023f6:	je     0x140002420
   1400023f8:	lock dec DWORD PTR [rbx+0x8]
   1400023fc:	mov    QWORD PTR [rsp+0x30],rdi
   140002401:	jne    0x14000241b
   140002403:	mov    rax,QWORD PTR [rbx]
   140002406:	mov    rcx,rbx
   140002409:	call   QWORD PTR [rax+0x8]
   14000240c:	lock dec DWORD PTR [rbx+0xc]
   140002410:	jne    0x14000241b
   140002412:	mov    rax,QWORD PTR [rbx]
   140002415:	mov    rcx,rbx
   140002418:	call   QWORD PTR [rax+0x10]
   14000241b:	mov    rdi,QWORD PTR [rsp+0x30]
   140002420:	mov    r8,rsi
   140002423:	mov    rdx,rsi
   140002426:	mov    rcx,rbp
   140002429:	mov    rbx,QWORD PTR [rsp+0x38]
   14000242e:	mov    rbp,QWORD PTR [rsp+0x48]
   140002433:	add    rsp,0x20
   140002437:	pop    rsi
   140002438:	jmp    0x140006c10
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	mov    QWORD PTR [rsp+0x10],rbx
   140002445:	mov    QWORD PTR [rsp+0x20],rbp
   14000244a:	push   rsi
   14000244b:	sub    rsp,0x20
   14000244f:	mov    rbp,rcx
   140002452:	lea    rcx,[rsp+0x40]
   140002457:	mov    rbx,r8
   14000245a:	mov    rsi,rdx
   14000245d:	call   0x140001200
   140002462:	mov    r10,QWORD PTR [rbx]
   140002465:	mov    r9,QWORD PTR [rax]
   140002468:	mov    QWORD PTR [rbx],r9
   14000246b:	mov    QWORD PTR [rax],r10
   14000246e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002473:	test   rbx,rbx
   140002476:	je     0x1400024a0
   140002478:	lock dec DWORD PTR [rbx+0x8]
   14000247c:	mov    QWORD PTR [rsp+0x30],rdi
   140002481:	jne    0x14000249b
   140002483:	mov    rax,QWORD PTR [rbx]
   140002486:	mov    rcx,rbx
   140002489:	call   QWORD PTR [rax+0x8]
   14000248c:	lock dec DWORD PTR [rbx+0xc]
   140002490:	jne    0x14000249b
   140002492:	mov    rax,QWORD PTR [rbx]
   140002495:	mov    rcx,rbx
   140002498:	call   QWORD PTR [rax+0x10]
   14000249b:	mov    rdi,QWORD PTR [rsp+0x30]
   1400024a0:	mov    r8,rsi
   1400024a3:	mov    rdx,rsi
   1400024a6:	mov    rcx,rbp
   1400024a9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400024ae:	mov    rbp,QWORD PTR [rsp+0x48]
   1400024b3:	add    rsp,0x20
   1400024b7:	pop    rsi
   1400024b8:	jmp    0x140006c10
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	sub    rsp,0x128
   1400024c7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400024d0:	mov    rdx,rcx
   1400024d3:	lea    rcx,[rsp+0xb0]
   1400024db:	call   0x140001ac0
   1400024e0:	nop
   1400024e1:	mov    rdx,rax
   1400024e4:	lea    rcx,[rsp+0x28]
   1400024e9:	call   0x140001a90
   1400024ee:	lea    rdx,[rip+0xa4c3]        # 0x14000c9b8
   1400024f5:	lea    rcx,[rsp+0x28]
   1400024fa:	call   0x140007330
   1400024ff:	int3   
   140002500:	xor    eax,eax
   140002502:	mov    QWORD PTR [rcx+0x10],rax
   140002506:	mov    QWORD PTR [rcx+0x18],rax
   14000250a:	mov    rax,rcx
   14000250d:	ret    
   14000250e:	int3   
   14000250f:	int3   
   140002510:	xor    eax,eax
   140002512:	mov    QWORD PTR [rcx+0x10],rax
   140002516:	mov    QWORD PTR [rcx+0x18],rax
   14000251a:	mov    rax,rcx
   14000251d:	ret    
   14000251e:	int3   
   14000251f:	int3   
   140002520:	xor    eax,eax
   140002522:	mov    QWORD PTR [rcx+0x10],rax
   140002526:	mov    QWORD PTR [rcx+0x18],rax
   14000252a:	mov    rax,rcx
   14000252d:	ret    
   14000252e:	int3   
   14000252f:	int3   
   140002530:	xor    eax,eax
   140002532:	mov    QWORD PTR [rcx+0x10],rax
   140002536:	mov    QWORD PTR [rcx+0x18],rax
   14000253a:	mov    rax,rcx
   14000253d:	ret    
   14000253e:	int3   
   14000253f:	int3   
   140002540:	xor    eax,eax
   140002542:	mov    QWORD PTR [rcx],rax
   140002545:	mov    QWORD PTR [rcx+0x8],rax
   140002549:	mov    QWORD PTR [rcx+0x10],rax
   14000254d:	mov    rax,rcx
   140002550:	ret    
   140002551:	int3   
   140002552:	int3   
   140002553:	int3   
   140002554:	int3   
   140002555:	int3   
   140002556:	int3   
   140002557:	int3   
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	xor    eax,eax
   140002562:	mov    QWORD PTR [rcx],rax
   140002565:	mov    QWORD PTR [rcx+0x8],rax
   140002569:	mov    QWORD PTR [rcx+0x10],rax
   14000256d:	mov    rax,rcx
   140002570:	ret    
   140002571:	int3   
   140002572:	int3   
   140002573:	int3   
   140002574:	int3   
   140002575:	int3   
   140002576:	int3   
   140002577:	int3   
   140002578:	int3   
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    rax,rcx
   140002583:	ret    
   140002584:	int3   
   140002585:	int3   
   140002586:	int3   
   140002587:	int3   
   140002588:	int3   
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	mov    rax,rcx
   140002593:	ret    
   140002594:	int3   
   140002595:	int3   
   140002596:	int3   
   140002597:	int3   
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    rax,rcx
   1400025a3:	ret    
   1400025a4:	int3   
   1400025a5:	int3   
   1400025a6:	int3   
   1400025a7:	int3   
   1400025a8:	int3   
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    rax,rcx
   1400025b3:	ret    
   1400025b4:	int3   
   1400025b5:	int3   
   1400025b6:	int3   
   1400025b7:	int3   
   1400025b8:	int3   
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    rax,rcx
   1400025c3:	ret    
   1400025c4:	int3   
   1400025c5:	int3   
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	mov    rax,rcx
   1400025d3:	ret    
   1400025d4:	int3   
   1400025d5:	int3   
   1400025d6:	int3   
   1400025d7:	int3   
   1400025d8:	int3   
   1400025d9:	int3   
   1400025da:	int3   
   1400025db:	int3   
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	mov    rax,rcx
   1400025e3:	ret    
   1400025e4:	int3   
   1400025e5:	int3   
   1400025e6:	int3   
   1400025e7:	int3   
   1400025e8:	int3   
   1400025e9:	int3   
   1400025ea:	int3   
   1400025eb:	int3   
   1400025ec:	int3   
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	mov    rax,rcx
   1400025f3:	ret    
   1400025f4:	int3   
   1400025f5:	int3   
   1400025f6:	int3   
   1400025f7:	int3   
   1400025f8:	int3   
   1400025f9:	int3   
   1400025fa:	int3   
   1400025fb:	int3   
   1400025fc:	int3   
   1400025fd:	int3   
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	mov    rax,rcx
   140002603:	ret    
   140002604:	int3   
   140002605:	int3   
   140002606:	int3   
   140002607:	int3   
   140002608:	int3   
   140002609:	int3   
   14000260a:	int3   
   14000260b:	int3   
   14000260c:	int3   
   14000260d:	int3   
   14000260e:	int3   
   14000260f:	int3   
   140002610:	mov    rax,rcx
   140002613:	ret    
   140002614:	int3   
   140002615:	int3   
   140002616:	int3   
   140002617:	int3   
   140002618:	int3   
   140002619:	int3   
   14000261a:	int3   
   14000261b:	int3   
   14000261c:	int3   
   14000261d:	int3   
   14000261e:	int3   
   14000261f:	int3   
   140002620:	mov    rax,rcx
   140002623:	ret    
   140002624:	int3   
   140002625:	int3   
   140002626:	int3   
   140002627:	int3   
   140002628:	int3   
   140002629:	int3   
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    rax,rcx
   140002633:	ret    
   140002634:	int3   
   140002635:	int3   
   140002636:	int3   
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	mov    rax,rcx
   140002643:	ret    
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	mov    rax,rcx
   140002653:	ret    
   140002654:	int3   
   140002655:	int3   
   140002656:	int3   
   140002657:	int3   
   140002658:	int3   
   140002659:	int3   
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	mov    rax,rcx
   140002663:	ret    
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	mov    rax,rcx
   140002673:	ret    
   140002674:	int3   
   140002675:	int3   
   140002676:	int3   
   140002677:	int3   
   140002678:	int3   
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	mov    rax,rcx
   140002683:	ret    
   140002684:	int3   
   140002685:	int3   
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	mov    rax,rcx
   140002693:	ret    
   140002694:	int3   
   140002695:	int3   
   140002696:	int3   
   140002697:	int3   
   140002698:	int3   
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	mov    rax,rcx
   1400026a3:	ret    
   1400026a4:	int3   
   1400026a5:	int3   
   1400026a6:	int3   
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026b5:	push   rdi
   1400026b6:	sub    rsp,0x20
   1400026ba:	mov    QWORD PTR [rcx+0x18],0xf
   1400026c2:	mov    QWORD PTR [rcx+0x10],0x0
   1400026ca:	mov    BYTE PTR [rcx],0x0
   1400026cd:	cmp    QWORD PTR [rdx+0x18],0x10
   1400026d2:	mov    rbx,rdx
   1400026d5:	mov    rdi,rcx
   1400026d8:	jae    0x1400026eb
   1400026da:	mov    r8,QWORD PTR [rdx+0x10]
   1400026de:	inc    r8
   1400026e1:	je     0x1400026f8
   1400026e3:	call   QWORD PTR [rip+0x69df]        # 0x1400090c8
   1400026e9:	jmp    0x1400026f8
   1400026eb:	mov    rax,QWORD PTR [rdx]
   1400026ee:	mov    QWORD PTR [rcx],rax
   1400026f1:	mov    QWORD PTR [rdx],0x0
   1400026f8:	mov    rax,QWORD PTR [rbx+0x10]
   1400026fc:	mov    QWORD PTR [rdi+0x10],rax
   140002700:	mov    rax,QWORD PTR [rbx+0x18]
   140002704:	mov    QWORD PTR [rdi+0x18],rax
   140002708:	mov    QWORD PTR [rbx+0x18],0xf
   140002710:	mov    QWORD PTR [rbx+0x10],0x0
   140002718:	mov    BYTE PTR [rbx],0x0
   14000271b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002720:	mov    rax,rdi
   140002723:	add    rsp,0x20
   140002727:	pop    rdi
   140002728:	ret    
   140002729:	int3   
   14000272a:	int3   
   14000272b:	int3   
   14000272c:	int3   
   14000272d:	int3   
   14000272e:	int3   
   14000272f:	int3   
   140002730:	rex push rbx
   140002732:	sub    rsp,0x20
   140002736:	mov    QWORD PTR [rcx+0x18],0xf
   14000273e:	mov    QWORD PTR [rcx+0x10],0x0
   140002746:	or     r9,0xffffffffffffffff
   14000274a:	xor    r8d,r8d
   14000274d:	mov    rbx,rcx
   140002750:	mov    BYTE PTR [rcx],0x0
   140002753:	call   0x1400055d0
   140002758:	mov    rax,rbx
   14000275b:	add    rsp,0x20
   14000275f:	pop    rbx
   140002760:	ret    
   140002761:	int3   
   140002762:	int3   
   140002763:	int3   
   140002764:	int3   
   140002765:	int3   
   140002766:	int3   
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	rex push rbx
   140002772:	sub    rsp,0x20
   140002776:	xor    r8d,r8d
   140002779:	mov    QWORD PTR [rcx+0x18],0xf
   140002781:	mov    rbx,rcx
   140002784:	mov    QWORD PTR [rcx+0x10],r8
   140002788:	mov    BYTE PTR [rcx],r8b
   14000278b:	cmp    BYTE PTR [rdx],r8b
   14000278e:	je     0x14000279e
   140002790:	or     r8,0xffffffffffffffff
   140002794:	inc    r8
   140002797:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000279c:	jne    0x140002794
   14000279e:	call   0x140005720
   1400027a3:	mov    rax,rbx
   1400027a6:	add    rsp,0x20
   1400027aa:	pop    rbx
   1400027ab:	ret    
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	mov    QWORD PTR [rcx+0x18],0xf
   1400027b8:	mov    QWORD PTR [rcx+0x10],0x0
   1400027c0:	mov    rax,rcx
   1400027c3:	mov    BYTE PTR [rcx],0x0
   1400027c6:	ret    
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	rex push rbx
   1400027d2:	sub    rsp,0x20
   1400027d6:	xor    r8d,r8d
   1400027d9:	mov    QWORD PTR [rcx+0x18],0x7
   1400027e1:	mov    rbx,rcx
   1400027e4:	mov    QWORD PTR [rcx+0x10],r8
   1400027e8:	mov    WORD PTR [rcx],r8w
   1400027ec:	cmp    WORD PTR [rdx],r8w
   1400027f0:	je     0x14000280b
   1400027f2:	or     r8,0xffffffffffffffff
   1400027f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002800:	inc    r8
   140002803:	cmp    WORD PTR [rdx+r8*2],0x0
   140002809:	jne    0x140002800
   14000280b:	call   0x1400059c0
   140002810:	mov    rax,rbx
   140002813:	add    rsp,0x20
   140002817:	pop    rbx
   140002818:	ret    
   140002819:	int3   
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	mov    QWORD PTR [rsp+0x8],rcx
   140002825:	push   rdi
   140002826:	sub    rsp,0x30
   14000282a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002833:	mov    QWORD PTR [rsp+0x48],rbx
   140002838:	mov    QWORD PTR [rsp+0x50],rsi
   14000283d:	mov    rsi,rdx
   140002840:	mov    rbx,rcx
   140002843:	xor    edi,edi
   140002845:	mov    DWORD PTR [rsp+0x58],edi
   140002849:	test   r9d,r9d
   14000284c:	je     0x14000286f
   14000284e:	lea    rax,[rip+0x73eb]        # 0x140009c40
   140002855:	mov    QWORD PTR [rcx+0x70],rax
   140002859:	lea    rax,[rip+0x7210]        # 0x140009a70
   140002860:	mov    QWORD PTR [rcx+0x80],rax
   140002867:	mov    DWORD PTR [rsp+0x58],0x1
   14000286f:	call   0x140002e40
   140002874:	nop
   140002875:	lea    rax,[rip+0x7384]        # 0x140009c00
   14000287c:	mov    QWORD PTR [rbx],rax
   14000287f:	lea    rax,[rip+0x7392]        # 0x140009c18
   140002886:	mov    QWORD PTR [rbx+0x48],rax
   14000288a:	mov    rax,QWORD PTR [rbx+0x70]
   14000288e:	movsxd rcx,DWORD PTR [rax+0x4]
   140002892:	lea    rax,[rip+0x738f]        # 0x140009c28
   140002899:	mov    QWORD PTR [rcx+rbx*1+0x70],rax
   14000289e:	mov    rax,QWORD PTR [rbx+0x70]
   1400028a2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400028a6:	lea    edx,[rcx-0x10]
   1400028a9:	mov    DWORD PTR [rcx+rbx*1+0x6c],edx
   1400028ad:	test   rsi,rsi
   1400028b0:	je     0x1400028b6
   1400028b2:	lea    rdi,[rsi+0x48]
   1400028b6:	mov    rdx,rdi
   1400028b9:	lea    rcx,[rbx+0x48]
   1400028bd:	call   0x140005de0
   1400028c2:	nop
   1400028c3:	mov    rax,rbx
   1400028c6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400028cb:	mov    rsi,QWORD PTR [rsp+0x50]
   1400028d0:	add    rsp,0x30
   1400028d4:	pop    rdi
   1400028d5:	ret    
   1400028d6:	int3   
   1400028d7:	int3   
   1400028d8:	int3   
   1400028d9:	int3   
   1400028da:	int3   
   1400028db:	int3   
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400028e5:	push   rdi
   1400028e6:	sub    rsp,0x30
   1400028ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400028f3:	mov    QWORD PTR [rsp+0x48],rbx
   1400028f8:	mov    QWORD PTR [rsp+0x58],rsi
   1400028fd:	mov    rsi,rdx
   140002900:	mov    rbx,rcx
   140002903:	xor    edi,edi
   140002905:	mov    DWORD PTR [rsp+0x50],edi
   140002909:	test   r8d,r8d
   14000290c:	je     0x14000292f
   14000290e:	lea    rax,[rip+0x732b]        # 0x140009c40
   140002915:	mov    QWORD PTR [rcx+0x70],rax
   140002919:	lea    rax,[rip+0x7150]        # 0x140009a70
   140002920:	mov    QWORD PTR [rcx+0x80],rax
   140002927:	mov    DWORD PTR [rsp+0x50],0x1
   14000292f:	call   0x140002e40
   140002934:	nop
   140002935:	lea    rax,[rip+0x72c4]        # 0x140009c00
   14000293c:	mov    QWORD PTR [rbx],rax
   14000293f:	lea    rax,[rip+0x72d2]        # 0x140009c18
   140002946:	mov    QWORD PTR [rbx+0x48],rax
   14000294a:	mov    rax,QWORD PTR [rbx+0x70]
   14000294e:	movsxd rcx,DWORD PTR [rax+0x4]
   140002952:	lea    rax,[rip+0x72cf]        # 0x140009c28
   140002959:	mov    QWORD PTR [rcx+rbx*1+0x70],rax
   14000295e:	mov    rax,QWORD PTR [rbx+0x70]
   140002962:	movsxd rcx,DWORD PTR [rax+0x4]
   140002966:	lea    edx,[rcx-0x10]
   140002969:	mov    DWORD PTR [rcx+rbx*1+0x6c],edx
   14000296d:	test   rsi,rsi
   140002970:	je     0x140002976
   140002972:	lea    rdi,[rsi+0x48]
   140002976:	mov    rdx,rdi
   140002979:	lea    rcx,[rbx+0x48]
   14000297d:	call   0x140005de0
   140002982:	nop
   140002983:	mov    rax,rbx
   140002986:	mov    rbx,QWORD PTR [rsp+0x48]
   14000298b:	mov    rsi,QWORD PTR [rsp+0x58]
   140002990:	add    rsp,0x30
   140002994:	pop    rdi
   140002995:	ret    
   140002996:	int3   
   140002997:	int3   
   140002998:	int3   
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400029a5:	push   rbx
   1400029a6:	sub    rsp,0x30
   1400029aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400029b3:	mov    rbx,rcx
   1400029b6:	mov    DWORD PTR [rsp+0x50],0x0
   1400029be:	test   r8d,r8d
   1400029c1:	je     0x1400029e4
   1400029c3:	lea    rax,[rip+0x7276]        # 0x140009c40
   1400029ca:	mov    QWORD PTR [rcx+0x70],rax
   1400029ce:	lea    rax,[rip+0x709b]        # 0x140009a70
   1400029d5:	mov    QWORD PTR [rcx+0x80],rax
   1400029dc:	mov    DWORD PTR [rsp+0x50],0x1
   1400029e4:	call   0x140002e40
   1400029e9:	lea    rax,[rip+0x7210]        # 0x140009c00
   1400029f0:	mov    QWORD PTR [rbx],rax
   1400029f3:	lea    rax,[rip+0x721e]        # 0x140009c18
   1400029fa:	mov    QWORD PTR [rbx+0x48],rax
   1400029fe:	mov    rax,QWORD PTR [rbx+0x70]
   140002a02:	movsxd rcx,DWORD PTR [rax+0x4]
   140002a06:	lea    rax,[rip+0x721b]        # 0x140009c28
   140002a0d:	mov    QWORD PTR [rcx+rbx*1+0x70],rax
   140002a12:	mov    rax,QWORD PTR [rbx+0x70]
   140002a16:	movsxd rcx,DWORD PTR [rax+0x4]
   140002a1a:	mov    DWORD PTR [rcx+rbx*1+0x6c],0x0
   140002a22:	mov    rax,rbx
   140002a25:	add    rsp,0x30
   140002a29:	pop    rbx
   140002a2a:	ret    
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	mov    QWORD PTR [rsp+0x8],rcx
   140002a35:	push   rdi
   140002a36:	sub    rsp,0x30
   140002a3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002a43:	mov    QWORD PTR [rsp+0x48],rbx
   140002a48:	mov    rdi,rdx
   140002a4b:	mov    rbx,rcx
   140002a4e:	mov    DWORD PTR [rsp+0x58],0x0
   140002a56:	test   r9d,r9d
   140002a59:	je     0x140002a79
   140002a5b:	lea    rax,[rip+0x722e]        # 0x140009c90
   140002a62:	mov    QWORD PTR [rcx+0x40],rax
   140002a66:	lea    rax,[rip+0x7003]        # 0x140009a70
   140002a6d:	mov    QWORD PTR [rcx+0x50],rax
   140002a71:	mov    DWORD PTR [rsp+0x58],0x1
   140002a79:	call   0x1400030a0
   140002a7e:	nop
   140002a7f:	lea    rax,[rip+0x71ca]        # 0x140009c50
   140002a86:	mov    QWORD PTR [rbx],rax
   140002a89:	lea    rax,[rip+0x71d0]        # 0x140009c60
   140002a90:	mov    QWORD PTR [rbx+0x28],rax
   140002a94:	mov    rax,QWORD PTR [rbx+0x40]
   140002a98:	movsxd rcx,DWORD PTR [rax+0x4]
   140002a9c:	lea    rax,[rip+0x71d5]        # 0x140009c78
   140002aa3:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140002aa8:	mov    rax,QWORD PTR [rbx+0x40]
   140002aac:	movsxd rcx,DWORD PTR [rax+0x4]
   140002ab0:	lea    edx,[rcx-0x10]
   140002ab3:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140002ab7:	mov    rdx,rdi
   140002aba:	mov    rcx,rbx
   140002abd:	call   0x140005de0
   140002ac2:	nop
   140002ac3:	mov    rax,rbx
   140002ac6:	mov    rbx,QWORD PTR [rsp+0x48]
   140002acb:	add    rsp,0x30
   140002acf:	pop    rdi
   140002ad0:	ret    
   140002ad1:	int3   
   140002ad2:	int3   
   140002ad3:	int3   
   140002ad4:	int3   
   140002ad5:	int3   
   140002ad6:	int3   
   140002ad7:	int3   
   140002ad8:	int3   
   140002ad9:	int3   
   140002ada:	int3   
   140002adb:	int3   
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	mov    QWORD PTR [rsp+0x8],rcx
   140002ae5:	push   rdi
   140002ae6:	sub    rsp,0x30
   140002aea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002af3:	mov    QWORD PTR [rsp+0x48],rbx
   140002af8:	mov    rdi,rdx
   140002afb:	mov    rbx,rcx
   140002afe:	mov    DWORD PTR [rsp+0x50],0x0
   140002b06:	test   r8d,r8d
   140002b09:	je     0x140002b29
   140002b0b:	lea    rax,[rip+0x717e]        # 0x140009c90
   140002b12:	mov    QWORD PTR [rcx+0x40],rax
   140002b16:	lea    rax,[rip+0x6f53]        # 0x140009a70
   140002b1d:	mov    QWORD PTR [rcx+0x50],rax
   140002b21:	mov    DWORD PTR [rsp+0x50],0x1
   140002b29:	call   0x1400030a0
   140002b2e:	nop
   140002b2f:	lea    rax,[rip+0x711a]        # 0x140009c50
   140002b36:	mov    QWORD PTR [rbx],rax
   140002b39:	lea    rax,[rip+0x7120]        # 0x140009c60
   140002b40:	mov    QWORD PTR [rbx+0x28],rax
   140002b44:	mov    rax,QWORD PTR [rbx+0x40]
   140002b48:	movsxd rcx,DWORD PTR [rax+0x4]
   140002b4c:	lea    rax,[rip+0x7125]        # 0x140009c78
   140002b53:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140002b58:	mov    rax,QWORD PTR [rbx+0x40]
   140002b5c:	movsxd rcx,DWORD PTR [rax+0x4]
   140002b60:	lea    edx,[rcx-0x10]
   140002b63:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140002b67:	mov    rdx,rdi
   140002b6a:	mov    rcx,rbx
   140002b6d:	call   0x140005de0
   140002b72:	nop
   140002b73:	mov    rax,rbx
   140002b76:	mov    rbx,QWORD PTR [rsp+0x48]
   140002b7b:	add    rsp,0x30
   140002b7f:	pop    rdi
   140002b80:	ret    
   140002b81:	int3   
   140002b82:	int3   
   140002b83:	int3   
   140002b84:	int3   
   140002b85:	int3   
   140002b86:	int3   
   140002b87:	int3   
   140002b88:	int3   
   140002b89:	int3   
   140002b8a:	int3   
   140002b8b:	int3   
   140002b8c:	int3   
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	mov    QWORD PTR [rsp+0x8],rcx
   140002b95:	push   rbx
   140002b96:	sub    rsp,0x30
   140002b9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002ba3:	mov    rbx,rcx
   140002ba6:	mov    DWORD PTR [rsp+0x50],0x0
   140002bae:	test   r8d,r8d
   140002bb1:	je     0x140002bd1
   140002bb3:	lea    rax,[rip+0x70d6]        # 0x140009c90
   140002bba:	mov    QWORD PTR [rcx+0x40],rax
   140002bbe:	lea    rax,[rip+0x6eab]        # 0x140009a70
   140002bc5:	mov    QWORD PTR [rcx+0x50],rax
   140002bc9:	mov    DWORD PTR [rsp+0x50],0x1
   140002bd1:	call   0x1400030a0
   140002bd6:	lea    rax,[rip+0x7073]        # 0x140009c50
   140002bdd:	mov    QWORD PTR [rbx],rax
   140002be0:	lea    rax,[rip+0x7079]        # 0x140009c60
   140002be7:	mov    QWORD PTR [rbx+0x28],rax
   140002beb:	mov    rax,QWORD PTR [rbx+0x40]
   140002bef:	movsxd rcx,DWORD PTR [rax+0x4]
   140002bf3:	lea    rax,[rip+0x707e]        # 0x140009c78
   140002bfa:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140002bff:	mov    rax,QWORD PTR [rbx+0x40]
   140002c03:	movsxd rcx,DWORD PTR [rax+0x4]
   140002c07:	mov    DWORD PTR [rcx+rbx*1+0x3c],0x0
   140002c0f:	mov    rax,rbx
   140002c12:	add    rsp,0x30
   140002c16:	pop    rbx
   140002c17:	ret    
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	mov    QWORD PTR [rsp+0x8],rcx
   140002c25:	push   rdi
   140002c26:	sub    rsp,0x30
   140002c2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002c33:	mov    QWORD PTR [rsp+0x48],rbx
   140002c38:	mov    rdi,rdx
   140002c3b:	mov    rbx,rcx
   140002c3e:	mov    DWORD PTR [rsp+0x58],0x0
   140002c46:	test   r9d,r9d
   140002c49:	je     0x140002c69
   140002c4b:	lea    rax,[rip+0x7196]        # 0x140009de8
   140002c52:	mov    QWORD PTR [rcx+0x40],rax
   140002c56:	lea    rax,[rip+0x6e13]        # 0x140009a70
   140002c5d:	mov    QWORD PTR [rcx+0x50],rax
   140002c61:	mov    DWORD PTR [rsp+0x58],0x1
   140002c69:	call   0x140003200
   140002c6e:	nop
   140002c6f:	lea    rax,[rip+0x7132]        # 0x140009da8
   140002c76:	mov    QWORD PTR [rbx],rax
   140002c79:	lea    rax,[rip+0x7138]        # 0x140009db8
   140002c80:	mov    QWORD PTR [rbx+0x28],rax
   140002c84:	mov    rax,QWORD PTR [rbx+0x40]
   140002c88:	movsxd rcx,DWORD PTR [rax+0x4]
   140002c8c:	lea    rax,[rip+0x713d]        # 0x140009dd0
   140002c93:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140002c98:	mov    rax,QWORD PTR [rbx+0x40]
   140002c9c:	movsxd rcx,DWORD PTR [rax+0x4]
   140002ca0:	lea    edx,[rcx-0x10]
   140002ca3:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140002ca7:	mov    rdx,rdi
   140002caa:	mov    rcx,rbx
   140002cad:	call   0x140005de0
   140002cb2:	nop
   140002cb3:	mov    rax,rbx
   140002cb6:	mov    rbx,QWORD PTR [rsp+0x48]
   140002cbb:	add    rsp,0x30
   140002cbf:	pop    rdi
   140002cc0:	ret    
   140002cc1:	int3   
   140002cc2:	int3   
   140002cc3:	int3   
   140002cc4:	int3   
   140002cc5:	int3   
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	mov    QWORD PTR [rsp+0x8],rcx
   140002cd5:	push   rdi
   140002cd6:	sub    rsp,0x30
   140002cda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002ce3:	mov    QWORD PTR [rsp+0x48],rbx
   140002ce8:	mov    rdi,rdx
   140002ceb:	mov    rbx,rcx
   140002cee:	mov    DWORD PTR [rsp+0x50],0x0
   140002cf6:	test   r8d,r8d
   140002cf9:	je     0x140002d19
   140002cfb:	lea    rax,[rip+0x70e6]        # 0x140009de8
   140002d02:	mov    QWORD PTR [rcx+0x40],rax
   140002d06:	lea    rax,[rip+0x6d63]        # 0x140009a70
   140002d0d:	mov    QWORD PTR [rcx+0x50],rax
   140002d11:	mov    DWORD PTR [rsp+0x50],0x1
   140002d19:	call   0x140003200
   140002d1e:	nop
   140002d1f:	lea    rax,[rip+0x7082]        # 0x140009da8
   140002d26:	mov    QWORD PTR [rbx],rax
   140002d29:	lea    rax,[rip+0x7088]        # 0x140009db8
   140002d30:	mov    QWORD PTR [rbx+0x28],rax
   140002d34:	mov    rax,QWORD PTR [rbx+0x40]
   140002d38:	movsxd rcx,DWORD PTR [rax+0x4]
   140002d3c:	lea    rax,[rip+0x708d]        # 0x140009dd0
   140002d43:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140002d48:	mov    rax,QWORD PTR [rbx+0x40]
   140002d4c:	movsxd rcx,DWORD PTR [rax+0x4]
   140002d50:	lea    edx,[rcx-0x10]
   140002d53:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140002d57:	mov    rdx,rdi
   140002d5a:	mov    rcx,rbx
   140002d5d:	call   0x140005de0
   140002d62:	nop
   140002d63:	mov    rax,rbx
   140002d66:	mov    rbx,QWORD PTR [rsp+0x48]
   140002d6b:	add    rsp,0x30
   140002d6f:	pop    rdi
   140002d70:	ret    
   140002d71:	int3   
   140002d72:	int3   
   140002d73:	int3   
   140002d74:	int3   
   140002d75:	int3   
   140002d76:	int3   
   140002d77:	int3   
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	mov    QWORD PTR [rsp+0x8],rcx
   140002d85:	push   rbx
   140002d86:	sub    rsp,0x30
   140002d8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002d93:	mov    rbx,rcx
   140002d96:	mov    DWORD PTR [rsp+0x50],0x0
   140002d9e:	test   r8d,r8d
   140002da1:	je     0x140002dc1
   140002da3:	lea    rax,[rip+0x703e]        # 0x140009de8
   140002daa:	mov    QWORD PTR [rcx+0x40],rax
   140002dae:	lea    rax,[rip+0x6cbb]        # 0x140009a70
   140002db5:	mov    QWORD PTR [rcx+0x50],rax
   140002db9:	mov    DWORD PTR [rsp+0x50],0x1
   140002dc1:	call   0x140003200
   140002dc6:	lea    rax,[rip+0x6fdb]        # 0x140009da8
   140002dcd:	mov    QWORD PTR [rbx],rax
   140002dd0:	lea    rax,[rip+0x6fe1]        # 0x140009db8
   140002dd7:	mov    QWORD PTR [rbx+0x28],rax
   140002ddb:	mov    rax,QWORD PTR [rbx+0x40]
   140002ddf:	movsxd rcx,DWORD PTR [rax+0x4]
   140002de3:	lea    rax,[rip+0x6fe6]        # 0x140009dd0
   140002dea:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140002def:	mov    rax,QWORD PTR [rbx+0x40]
   140002df3:	movsxd rcx,DWORD PTR [rax+0x4]
   140002df7:	mov    DWORD PTR [rcx+rbx*1+0x3c],0x0
   140002dff:	mov    rax,rbx
   140002e02:	add    rsp,0x30
   140002e06:	pop    rbx
   140002e07:	ret    
   140002e08:	int3   
   140002e09:	int3   
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	mov    QWORD PTR [rcx],rdx
   140002e13:	mov    rax,rcx
   140002e16:	ret    
   140002e17:	int3   
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    QWORD PTR [rcx],rdx
   140002e23:	mov    rax,rcx
   140002e26:	ret    
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    DWORD PTR [rcx],edx
   140002e32:	mov    rax,rcx
   140002e35:	ret    
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    QWORD PTR [rsp+0x8],rcx
   140002e45:	push   rdi
   140002e46:	sub    rsp,0x30
   140002e4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002e53:	mov    QWORD PTR [rsp+0x48],rbx
   140002e58:	mov    rdi,rdx
   140002e5b:	mov    rbx,rcx
   140002e5e:	call   0x1400034d0
   140002e63:	lea    rax,[rip+0x6cd6]        # 0x140009b40
   140002e6a:	mov    QWORD PTR [rbx],rax
   140002e6d:	test   rdi,rdi
   140002e70:	je     0x140002e76
   140002e72:	add    rdi,0x48
   140002e76:	lea    rax,[rip+0x6be3]        # 0x140009a60
   140002e7d:	mov    QWORD PTR [rbx+0x48],rax
   140002e81:	mov    rcx,QWORD PTR [rdi+0x8]
   140002e85:	mov    QWORD PTR [rbx+0x50],rcx
   140002e89:	test   rcx,rcx
   140002e8c:	je     0x140002e94
   140002e8e:	mov    rax,QWORD PTR [rcx]
   140002e91:	call   QWORD PTR [rax+0x18]
   140002e94:	mov    rax,QWORD PTR [rdi+0x10]
   140002e98:	mov    QWORD PTR [rbx+0x58],rax
   140002e9c:	mov    rax,QWORD PTR [rdi+0x18]
   140002ea0:	mov    QWORD PTR [rbx+0x60],rax
   140002ea4:	mov    eax,DWORD PTR [rdi+0x20]
   140002ea7:	mov    DWORD PTR [rbx+0x68],eax
   140002eaa:	lea    rax,[rip+0x6d27]        # 0x140009bd8
   140002eb1:	mov    QWORD PTR [rbx],rax
   140002eb4:	lea    rax,[rip+0x6d35]        # 0x140009bf0
   140002ebb:	mov    QWORD PTR [rbx+0x48],rax
   140002ebf:	mov    rax,rbx
   140002ec2:	mov    rbx,QWORD PTR [rsp+0x48]
   140002ec7:	add    rsp,0x30
   140002ecb:	pop    rdi
   140002ecc:	ret    
   140002ecd:	int3   
   140002ece:	int3   
   140002ecf:	int3   
   140002ed0:	rex push rbx
   140002ed2:	sub    rsp,0x20
   140002ed6:	mov    rbx,rcx
   140002ed9:	call   0x1400034d0
   140002ede:	xor    eax,eax
   140002ee0:	mov    QWORD PTR [rbx+0x50],rax
   140002ee4:	mov    QWORD PTR [rbx+0x58],rax
   140002ee8:	mov    QWORD PTR [rbx+0x60],rax
   140002eec:	lea    rax,[rip+0x6ce5]        # 0x140009bd8
   140002ef3:	mov    DWORD PTR [rbx+0x68],0xffffffff
   140002efa:	mov    QWORD PTR [rbx],rax
   140002efd:	lea    rax,[rip+0x6cec]        # 0x140009bf0
   140002f04:	mov    QWORD PTR [rbx+0x48],rax
   140002f08:	mov    rax,rbx
   140002f0b:	add    rsp,0x20
   140002f0f:	pop    rbx
   140002f10:	ret    
   140002f11:	int3   
   140002f12:	int3   
   140002f13:	int3   
   140002f14:	int3   
   140002f15:	int3   
   140002f16:	int3   
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	rex push rbx
   140002f22:	sub    rsp,0x20
   140002f26:	mov    rbx,rcx
   140002f29:	mov    rcx,QWORD PTR [rdx]
   140002f2c:	mov    QWORD PTR [rbx],rcx
   140002f2f:	test   rcx,rcx
   140002f32:	je     0x140002f3a
   140002f34:	mov    rax,QWORD PTR [rcx]
   140002f37:	call   QWORD PTR [rax+0x18]
   140002f3a:	mov    rax,rbx
   140002f3d:	add    rsp,0x20
   140002f41:	pop    rbx
   140002f42:	ret    
   140002f43:	int3   
   140002f44:	int3   
   140002f45:	int3   
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	mov    QWORD PTR [rcx],0x0
   140002f57:	mov    rax,rcx
   140002f5a:	ret    
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    rax,QWORD PTR [rdx]
   140002f63:	mov    QWORD PTR [rcx],rax
   140002f66:	mov    rax,QWORD PTR [rdx+0x8]
   140002f6a:	mov    QWORD PTR [rcx+0x8],rax
   140002f6e:	test   rax,rax
   140002f71:	je     0x140002f77
   140002f73:	lock inc DWORD PTR [rax+0x8]
   140002f77:	mov    rax,rcx
   140002f7a:	ret    
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	xor    eax,eax
   140002f82:	mov    QWORD PTR [rcx],rax
   140002f85:	mov    QWORD PTR [rcx+0x8],rax
   140002f89:	mov    rax,rcx
   140002f8c:	ret    
   140002f8d:	int3   
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	lea    rax,[rip+0x6f01]        # 0x140009e98
   140002f97:	mov    DWORD PTR [rcx+0x8],0x1
   140002f9e:	mov    DWORD PTR [rcx+0xc],0x1
   140002fa5:	mov    QWORD PTR [rcx],rax
   140002fa8:	mov    rax,rcx
   140002fab:	mov    QWORD PTR [rcx+0x10],rdx
   140002faf:	ret    
   140002fb0:	lea    rax,[rip+0x6f11]        # 0x140009ec8
   140002fb7:	mov    DWORD PTR [rcx+0x8],0x1
   140002fbe:	mov    DWORD PTR [rcx+0xc],0x1
   140002fc5:	mov    QWORD PTR [rcx],rax
   140002fc8:	mov    rax,rcx
   140002fcb:	mov    QWORD PTR [rcx+0x10],rdx
   140002fcf:	ret    
   140002fd0:	xor    eax,eax
   140002fd2:	mov    QWORD PTR [rcx],rax
   140002fd5:	mov    QWORD PTR [rcx+0x8],rax
   140002fd9:	mov    QWORD PTR [rcx+0x10],rax
   140002fdd:	mov    rax,rcx
   140002fe0:	ret    
   140002fe1:	int3   
   140002fe2:	int3   
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	lea    rax,[rip+0x6979]        # 0x140009970
   140002ff7:	mov    QWORD PTR [rcx],rax
   140002ffa:	mov    rax,rcx
   140002ffd:	ret    
   140002ffe:	int3   
   140002fff:	int3   
   140003000:	mov    rax,rcx
   140003003:	ret    
   140003004:	int3   
   140003005:	int3   
   140003006:	int3   
   140003007:	int3   
   140003008:	int3   
   140003009:	int3   
   14000300a:	int3   
   14000300b:	int3   
   14000300c:	int3   
   14000300d:	int3   
   14000300e:	int3   
   14000300f:	int3   
   140003010:	lea    rax,[rip+0x69a9]        # 0x1400099c0
   140003017:	mov    QWORD PTR [rcx],rax
   14000301a:	mov    rax,rcx
   14000301d:	ret    
   14000301e:	int3   
   14000301f:	int3   
   140003020:	lea    rax,[rip+0x69f9]        # 0x140009a20
   140003027:	mov    QWORD PTR [rcx],rax
   14000302a:	mov    rax,rcx
   14000302d:	ret    
   14000302e:	int3   
   14000302f:	int3   
   140003030:	rex push rbx
   140003032:	sub    rsp,0x20
   140003036:	mov    rbx,rcx
   140003039:	call   QWORD PTR [rip+0x60a1]        # 0x1400090e0
   14000303f:	lea    rax,[rip+0x68a2]        # 0x1400098e8
   140003046:	mov    QWORD PTR [rbx],rax
   140003049:	mov    rax,rbx
   14000304c:	add    rsp,0x20
   140003050:	pop    rbx
   140003051:	ret    
   140003052:	int3   
   140003053:	int3   
   140003054:	int3   
   140003055:	int3   
   140003056:	int3   
   140003057:	int3   
   140003058:	int3   
   140003059:	int3   
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	int3   
   14000305d:	int3   
   14000305e:	int3   
   14000305f:	int3   
   140003060:	rex push rbx
   140003062:	sub    rsp,0x20
   140003066:	lea    rax,[rip+0x688b]        # 0x1400098f8
   14000306d:	lea    rdx,[rsp+0x30]
   140003072:	mov    r8d,0x1
   140003078:	mov    QWORD PTR [rsp+0x30],rax
   14000307d:	mov    rbx,rcx
   140003080:	call   QWORD PTR [rip+0x6052]        # 0x1400090d8
   140003086:	lea    rax,[rip+0x685b]        # 0x1400098e8
   14000308d:	mov    QWORD PTR [rbx],rax
   140003090:	mov    rax,rbx
   140003093:	add    rsp,0x20
   140003097:	pop    rbx
   140003098:	ret    
   140003099:	int3   
   14000309a:	int3   
   14000309b:	int3   
   14000309c:	int3   
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400030a5:	push   rdi
   1400030a6:	sub    rsp,0x30
   1400030aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400030b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400030b8:	mov    rbx,rdx
   1400030bb:	mov    rdi,rcx
   1400030be:	lea    rax,[rip+0x699b]        # 0x140009a60
   1400030c5:	mov    QWORD PTR [rcx],rax
   1400030c8:	mov    rcx,QWORD PTR [rdx+0x8]
   1400030cc:	mov    QWORD PTR [rdi+0x8],rcx
   1400030d0:	test   rcx,rcx
   1400030d3:	je     0x1400030db
   1400030d5:	mov    rax,QWORD PTR [rcx]
   1400030d8:	call   QWORD PTR [rax+0x18]
   1400030db:	mov    rax,QWORD PTR [rbx+0x10]
   1400030df:	mov    QWORD PTR [rdi+0x10],rax
   1400030e3:	mov    rax,QWORD PTR [rbx+0x18]
   1400030e7:	mov    QWORD PTR [rdi+0x18],rax
   1400030eb:	mov    eax,DWORD PTR [rbx+0x20]
   1400030ee:	mov    DWORD PTR [rdi+0x20],eax
   1400030f1:	lea    rdx,[rbx+0x28]
   1400030f5:	lea    rcx,[rdi+0x28]
   1400030f9:	call   QWORD PTR [rip+0x5fe1]        # 0x1400090e0
   1400030ff:	lea    rax,[rip+0x69ba]        # 0x140009ac0
   140003106:	mov    QWORD PTR [rdi],rax
   140003109:	lea    rax,[rip+0x69c0]        # 0x140009ad0
   140003110:	mov    QWORD PTR [rdi+0x28],rax
   140003114:	mov    rax,rdi
   140003117:	mov    rbx,QWORD PTR [rsp+0x48]
   14000311c:	add    rsp,0x30
   140003120:	pop    rdi
   140003121:	ret    
   140003122:	int3   
   140003123:	int3   
   140003124:	int3   
   140003125:	int3   
   140003126:	int3   
   140003127:	int3   
   140003128:	int3   
   140003129:	int3   
   14000312a:	int3   
   14000312b:	int3   
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	mov    QWORD PTR [rsp+0x10],rbx
   140003135:	push   rdi
   140003136:	sub    rsp,0x20
   14000313a:	lea    rax,[rip+0x691f]        # 0x140009a60
   140003141:	mov    rdi,rcx
   140003144:	lea    rdx,[rsp+0x30]
   140003149:	mov    QWORD PTR [rcx],rax
   14000314c:	xor    eax,eax
   14000314e:	mov    r8d,0x1
   140003154:	mov    QWORD PTR [rcx+0x8],rax
   140003158:	mov    QWORD PTR [rcx+0x10],rax
   14000315c:	mov    QWORD PTR [rcx+0x18],rax
   140003160:	lea    rax,[rip+0x6791]        # 0x1400098f8
   140003167:	mov    DWORD PTR [rcx+0x20],0xffffffff
   14000316e:	add    rcx,0x28
   140003172:	mov    QWORD PTR [rsp+0x30],rax
   140003177:	call   QWORD PTR [rip+0x5f5b]        # 0x1400090d8
   14000317d:	mov    rbx,QWORD PTR [rsp+0x38]
   140003182:	lea    rax,[rip+0x6937]        # 0x140009ac0
   140003189:	mov    QWORD PTR [rdi],rax
   14000318c:	lea    rax,[rip+0x693d]        # 0x140009ad0
   140003193:	mov    QWORD PTR [rdi+0x28],rax
   140003197:	mov    rax,rdi
   14000319a:	add    rsp,0x20
   14000319e:	pop    rdi
   14000319f:	ret    
   1400031a0:	rex push rbx
   1400031a2:	sub    rsp,0x20
   1400031a6:	mov    rbx,rcx
   1400031a9:	call   QWORD PTR [rip+0x5f31]        # 0x1400090e0
   1400031af:	lea    rax,[rip+0x671a]        # 0x1400098d0
   1400031b6:	mov    QWORD PTR [rbx],rax
   1400031b9:	mov    rax,rbx
   1400031bc:	add    rsp,0x20
   1400031c0:	pop    rbx
   1400031c1:	ret    
   1400031c2:	int3   
   1400031c3:	int3   
   1400031c4:	int3   
   1400031c5:	int3   
   1400031c6:	int3   
   1400031c7:	int3   
   1400031c8:	int3   
   1400031c9:	int3   
   1400031ca:	int3   
   1400031cb:	int3   
   1400031cc:	int3   
   1400031cd:	int3   
   1400031ce:	int3   
   1400031cf:	int3   
   1400031d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400031d5:	push   rbx
   1400031d6:	sub    rsp,0x20
   1400031da:	lea    rdx,[rsp+0x38]
   1400031df:	mov    rbx,rcx
   1400031e2:	call   QWORD PTR [rip+0x5ee8]        # 0x1400090d0
   1400031e8:	lea    rax,[rip+0x66e1]        # 0x1400098d0
   1400031ef:	mov    QWORD PTR [rbx],rax
   1400031f2:	mov    rax,rbx
   1400031f5:	add    rsp,0x20
   1400031f9:	pop    rbx
   1400031fa:	ret    
   1400031fb:	int3   
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	mov    QWORD PTR [rsp+0x8],rcx
   140003205:	push   rdi
   140003206:	sub    rsp,0x30
   14000320a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003213:	mov    QWORD PTR [rsp+0x48],rbx
   140003218:	mov    rbx,rdx
   14000321b:	mov    rdi,rcx
   14000321e:	lea    rax,[rip+0x683b]        # 0x140009a60
   140003225:	mov    QWORD PTR [rcx],rax
   140003228:	mov    rcx,QWORD PTR [rdx+0x8]
   14000322c:	mov    QWORD PTR [rdi+0x8],rcx
   140003230:	test   rcx,rcx
   140003233:	je     0x14000323b
   140003235:	mov    rax,QWORD PTR [rcx]
   140003238:	call   QWORD PTR [rax+0x18]
   14000323b:	mov    rax,QWORD PTR [rbx+0x10]
   14000323f:	mov    QWORD PTR [rdi+0x10],rax
   140003243:	mov    rax,QWORD PTR [rbx+0x18]
   140003247:	mov    QWORD PTR [rdi+0x18],rax
   14000324b:	mov    eax,DWORD PTR [rbx+0x20]
   14000324e:	mov    DWORD PTR [rdi+0x20],eax
   140003251:	lea    rdx,[rbx+0x28]
   140003255:	lea    rcx,[rdi+0x28]
   140003259:	call   QWORD PTR [rip+0x5e81]        # 0x1400090e0
   14000325f:	lea    rax,[rip+0x6882]        # 0x140009ae8
   140003266:	mov    QWORD PTR [rdi],rax
   140003269:	lea    rax,[rip+0x6888]        # 0x140009af8
   140003270:	mov    QWORD PTR [rdi+0x28],rax
   140003274:	mov    rax,rdi
   140003277:	mov    rbx,QWORD PTR [rsp+0x48]
   14000327c:	add    rsp,0x30
   140003280:	pop    rdi
   140003281:	ret    
   140003282:	int3   
   140003283:	int3   
   140003284:	int3   
   140003285:	int3   
   140003286:	int3   
   140003287:	int3   
   140003288:	int3   
   140003289:	int3   
   14000328a:	int3   
   14000328b:	int3   
   14000328c:	int3   
   14000328d:	int3   
   14000328e:	int3   
   14000328f:	int3   
   140003290:	mov    QWORD PTR [rsp+0x10],rbx
   140003295:	push   rdi
   140003296:	sub    rsp,0x20
   14000329a:	lea    rax,[rip+0x67bf]        # 0x140009a60
   1400032a1:	mov    rdi,rcx
   1400032a4:	lea    rdx,[rsp+0x30]
   1400032a9:	mov    QWORD PTR [rcx],rax
   1400032ac:	xor    eax,eax
   1400032ae:	add    rcx,0x28
   1400032b2:	mov    QWORD PTR [rcx-0x20],rax
   1400032b6:	mov    QWORD PTR [rcx-0x18],rax
   1400032ba:	mov    QWORD PTR [rcx-0x10],rax
   1400032be:	lea    rax,[rip+0x6bbb]        # 0x140009e80
   1400032c5:	mov    DWORD PTR [rcx-0x8],0xffffffff
   1400032cc:	mov    QWORD PTR [rsp+0x30],rax
   1400032d1:	call   QWORD PTR [rip+0x5df9]        # 0x1400090d0
   1400032d7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400032dc:	lea    rax,[rip+0x6805]        # 0x140009ae8
   1400032e3:	mov    QWORD PTR [rdi],rax
   1400032e6:	lea    rax,[rip+0x680b]        # 0x140009af8
   1400032ed:	mov    QWORD PTR [rdi+0x28],rax
   1400032f1:	mov    rax,rdi
   1400032f4:	add    rsp,0x20
   1400032f8:	pop    rdi
   1400032f9:	ret    
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	lea    rax,[rip+0x6769]        # 0x140009a70
   140003307:	mov    QWORD PTR [rcx],rax
   14000330a:	mov    rax,rcx
   14000330d:	ret    
   14000330e:	int3   
   14000330f:	int3   
   140003310:	lea    rax,[rip+0x6759]        # 0x140009a70
   140003317:	mov    QWORD PTR [rcx],rax
   14000331a:	mov    rax,rcx
   14000331d:	ret    
   14000331e:	int3   
   14000331f:	int3   
   140003320:	lea    rax,[rip+0x6609]        # 0x140009930
   140003327:	mov    QWORD PTR [rcx],rax
   14000332a:	mov    rax,rcx
   14000332d:	ret    
   14000332e:	int3   
   14000332f:	int3   
   140003330:	mov    DWORD PTR [rcx],edx
   140003332:	mov    QWORD PTR [rcx+0x8],r8
   140003336:	mov    rax,rcx
   140003339:	ret    
   14000333a:	int3   
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	mov    DWORD PTR [rcx],edx
   140003342:	mov    QWORD PTR [rcx+0x8],r8
   140003346:	mov    rax,rcx
   140003349:	ret    
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	lea    rax,[rip+0x6709]        # 0x140009a60
   140003357:	mov    QWORD PTR [rcx],rax
   14000335a:	xor    eax,eax
   14000335c:	mov    QWORD PTR [rcx+0x8],rax
   140003360:	mov    QWORD PTR [rcx+0x10],rax
   140003364:	mov    QWORD PTR [rcx+0x18],rax
   140003368:	mov    rax,rcx
   14000336b:	mov    DWORD PTR [rcx+0x20],0xffffffff
   140003372:	ret    
   140003373:	int3   
   140003374:	int3   
   140003375:	int3   
   140003376:	int3   
   140003377:	int3   
   140003378:	int3   
   140003379:	int3   
   14000337a:	int3   
   14000337b:	int3   
   14000337c:	int3   
   14000337d:	int3   
   14000337e:	int3   
   14000337f:	int3   
   140003380:	mov    QWORD PTR [rsp+0x8],rbx
   140003385:	push   rdi
   140003386:	sub    rsp,0x20
   14000338a:	mov    rbx,rcx
   14000338d:	lea    rax,[rip+0x66cc]        # 0x140009a60
   140003394:	mov    rdi,rdx
   140003397:	mov    QWORD PTR [rcx],rax
   14000339a:	mov    rcx,QWORD PTR [rdx+0x8]
   14000339e:	mov    QWORD PTR [rbx+0x8],rcx
   1400033a2:	test   rcx,rcx
   1400033a5:	je     0x1400033ad
   1400033a7:	mov    rax,QWORD PTR [rcx]
   1400033aa:	call   QWORD PTR [rax+0x18]
   1400033ad:	mov    rax,QWORD PTR [rdi+0x10]
   1400033b1:	mov    QWORD PTR [rbx+0x10],rax
   1400033b5:	mov    rax,QWORD PTR [rdi+0x18]
   1400033b9:	mov    QWORD PTR [rbx+0x18],rax
   1400033bd:	mov    eax,DWORD PTR [rdi+0x20]
   1400033c0:	mov    DWORD PTR [rbx+0x20],eax
   1400033c3:	mov    rax,rbx
   1400033c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033cb:	add    rsp,0x20
   1400033cf:	pop    rdi
   1400033d0:	ret    
   1400033d1:	int3   
   1400033d2:	int3   
   1400033d3:	int3   
   1400033d4:	int3   
   1400033d5:	int3   
   1400033d6:	int3   
   1400033d7:	int3   
   1400033d8:	int3   
   1400033d9:	int3   
   1400033da:	int3   
   1400033db:	int3   
   1400033dc:	int3   
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	mov    rax,QWORD PTR [rdx]
   1400033e3:	mov    QWORD PTR [rcx],rax
   1400033e6:	mov    rax,QWORD PTR [rdx+0x8]
   1400033ea:	mov    QWORD PTR [rcx+0x8],rax
   1400033ee:	test   rax,rax
   1400033f1:	je     0x1400033f7
   1400033f3:	lock inc DWORD PTR [rax+0x8]
   1400033f7:	mov    rax,rcx
   1400033fa:	ret    
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    rax,QWORD PTR [rdx]
   140003403:	mov    QWORD PTR [rcx],rax
   140003406:	mov    rax,QWORD PTR [rdx+0x8]
   14000340a:	mov    QWORD PTR [rcx+0x8],rax
   14000340e:	test   rax,rax
   140003411:	je     0x140003417
   140003413:	lock inc DWORD PTR [rax+0x8]
   140003417:	mov    rax,rcx
   14000341a:	ret    
   14000341b:	int3   
   14000341c:	int3   
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	rex push rbx
   140003422:	sub    rsp,0x20
   140003426:	mov    rbx,rcx
   140003429:	call   QWORD PTR [rip+0x5cb1]        # 0x1400090e0
   14000342f:	lea    rax,[rip+0x64da]        # 0x140009910
   140003436:	mov    QWORD PTR [rbx],rax
   140003439:	mov    rax,rbx
   14000343c:	add    rsp,0x20
   140003440:	pop    rbx
   140003441:	ret    
   140003442:	int3   
   140003443:	int3   
   140003444:	int3   
   140003445:	int3   
   140003446:	int3   
   140003447:	int3   
   140003448:	int3   
   140003449:	int3   
   14000344a:	int3   
   14000344b:	int3   
   14000344c:	int3   
   14000344d:	int3   
   14000344e:	int3   
   14000344f:	int3   
   140003450:	mov    QWORD PTR [rsp+0x10],rdx
   140003455:	push   rbx
   140003456:	sub    rsp,0x20
   14000345a:	lea    rdx,[rsp+0x38]
   14000345f:	mov    rbx,rcx
   140003462:	call   QWORD PTR [rip+0x5c68]        # 0x1400090d0
   140003468:	lea    rax,[rip+0x64a1]        # 0x140009910
   14000346f:	mov    QWORD PTR [rbx],rax
   140003472:	mov    rax,rbx
   140003475:	add    rsp,0x20
   140003479:	pop    rbx
   14000347a:	ret    
   14000347b:	int3   
   14000347c:	int3   
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	mov    rax,QWORD PTR [rdx]
   140003483:	mov    QWORD PTR [rcx],rax
   140003486:	test   rax,rax
   140003489:	je     0x14000348f
   14000348b:	lock inc DWORD PTR [rax+0x8]
   14000348f:	mov    rax,rcx
   140003492:	ret    
   140003493:	int3   
   140003494:	int3   
   140003495:	int3   
   140003496:	int3   
   140003497:	int3   
   140003498:	int3   
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	int3   
   14000349d:	int3   
   14000349e:	int3   
   14000349f:	int3   
   1400034a0:	mov    QWORD PTR [rcx],0x0
   1400034a7:	mov    rax,rcx
   1400034aa:	ret    
   1400034ab:	int3   
   1400034ac:	int3   
   1400034ad:	int3   
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	lea    rax,[rip+0x65d9]        # 0x140009a90
   1400034b7:	mov    DWORD PTR [rcx+0x8],0x1
   1400034be:	mov    DWORD PTR [rcx+0xc],0x1
   1400034c5:	mov    QWORD PTR [rcx],rax
   1400034c8:	mov    rax,rcx
   1400034cb:	ret    
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400034d5:	push   rdi
   1400034d6:	sub    rsp,0x30
   1400034da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400034e3:	mov    QWORD PTR [rsp+0x48],rbx
   1400034e8:	mov    rbx,rdx
   1400034eb:	mov    rdi,rcx
   1400034ee:	call   QWORD PTR [rip+0x5bec]        # 0x1400090e0
   1400034f4:	nop
   1400034f5:	lea    rax,[rip+0x6614]        # 0x140009b10
   1400034fc:	mov    QWORD PTR [rdi],rax
   1400034ff:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140003503:	movups XMMWORD PTR [rdi+0x18],xmm0
   140003507:	lea    rcx,[rdi+0x28]
   14000350b:	mov    QWORD PTR [rcx+0x18],0xf
   140003513:	mov    QWORD PTR [rcx+0x10],0x0
   14000351b:	mov    BYTE PTR [rcx],0x0
   14000351e:	lea    rdx,[rbx+0x28]
   140003522:	or     r9,0xffffffffffffffff
   140003526:	xor    r8d,r8d
   140003529:	call   0x1400055d0
   14000352e:	nop
   14000352f:	mov    rax,rdi
   140003532:	mov    rbx,QWORD PTR [rsp+0x48]
   140003537:	add    rsp,0x30
   14000353b:	pop    rdi
   14000353c:	ret    
   14000353d:	int3   
   14000353e:	int3   
   14000353f:	int3   
   140003540:	mov    QWORD PTR [rsp+0x10],rbx
   140003545:	push   rdi
   140003546:	sub    rsp,0x20
   14000354a:	mov    rbx,rdx
   14000354d:	lea    rdx,[rsp+0x30]
   140003552:	mov    rdi,rcx
   140003555:	mov    QWORD PTR [rsp+0x30],r8
   14000355a:	call   QWORD PTR [rip+0x5b70]        # 0x1400090d0
   140003560:	lea    rax,[rip+0x65a9]        # 0x140009b10
   140003567:	mov    QWORD PTR [rdi],rax
   14000356a:	mov    rax,rdi
   14000356d:	movups xmm0,XMMWORD PTR [rbx]
   140003570:	mov    rbx,QWORD PTR [rsp+0x38]
   140003575:	movups XMMWORD PTR [rdi+0x18],xmm0
   140003579:	mov    QWORD PTR [rdi+0x40],0xf
   140003581:	mov    QWORD PTR [rdi+0x38],0x0
   140003589:	mov    BYTE PTR [rdi+0x28],0x0
   14000358d:	add    rsp,0x20
   140003591:	pop    rdi
   140003592:	ret    
   140003593:	int3   
   140003594:	int3   
   140003595:	int3   
   140003596:	int3   
   140003597:	int3   
   140003598:	int3   
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	int3   
   14000359d:	int3   
   14000359e:	int3   
   14000359f:	int3   
   1400035a0:	rex push rbx
   1400035a2:	sub    rsp,0x20
   1400035a6:	mov    rbx,rcx
   1400035a9:	call   0x1400034d0
   1400035ae:	lea    rax,[rip+0x6573]        # 0x140009b28
   1400035b5:	mov    QWORD PTR [rbx],rax
   1400035b8:	mov    rax,rbx
   1400035bb:	add    rsp,0x20
   1400035bf:	pop    rbx
   1400035c0:	ret    
   1400035c1:	int3   
   1400035c2:	int3   
   1400035c3:	int3   
   1400035c4:	int3   
   1400035c5:	int3   
   1400035c6:	int3   
   1400035c7:	int3   
   1400035c8:	int3   
   1400035c9:	int3   
   1400035ca:	int3   
   1400035cb:	int3   
   1400035cc:	int3   
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400035d5:	push   rdi
   1400035d6:	sub    rsp,0x30
   1400035da:	mov    rbx,r8
   1400035dd:	mov    rdi,rcx
   1400035e0:	mov    DWORD PTR [rsp+0x20],edx
   1400035e4:	call   QWORD PTR [rip+0x5bee]        # 0x1400091d8
   1400035ea:	lea    rdx,[rsp+0x40]
   1400035ef:	mov    rcx,rdi
   1400035f2:	mov    QWORD PTR [rsp+0x28],rax
   1400035f7:	mov    QWORD PTR [rsp+0x40],rbx
   1400035fc:	call   QWORD PTR [rip+0x5ace]        # 0x1400090d0
   140003602:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140003607:	mov    rbx,QWORD PTR [rsp+0x48]
   14000360c:	movups XMMWORD PTR [rdi+0x18],xmm0
   140003610:	lea    rax,[rip+0x6511]        # 0x140009b28
   140003617:	mov    QWORD PTR [rdi+0x40],0xf
   14000361f:	mov    QWORD PTR [rdi+0x38],0x0
   140003627:	mov    BYTE PTR [rdi+0x28],0x0
   14000362b:	mov    QWORD PTR [rdi],rax
   14000362e:	mov    rax,rdi
   140003631:	add    rsp,0x30
   140003635:	pop    rdi
   140003636:	ret    
   140003637:	int3   
   140003638:	int3   
   140003639:	int3   
   14000363a:	int3   
   14000363b:	int3   
   14000363c:	int3   
   14000363d:	int3   
   14000363e:	int3   
   14000363f:	int3   
   140003640:	rex push rbx
   140003642:	sub    rsp,0x20
   140003646:	mov    rbx,rcx
   140003649:	call   0x1400034d0
   14000364e:	lea    rax,[rip+0x64eb]        # 0x140009b40
   140003655:	mov    QWORD PTR [rbx],rax
   140003658:	mov    rax,rbx
   14000365b:	add    rsp,0x20
   14000365f:	pop    rbx
   140003660:	ret    
   140003661:	int3   
   140003662:	int3   
   140003663:	int3   
   140003664:	int3   
   140003665:	int3   
   140003666:	int3   
   140003667:	int3   
   140003668:	int3   
   140003669:	int3   
   14000366a:	int3   
   14000366b:	int3   
   14000366c:	int3   
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	rex push rbx
   140003672:	sub    rsp,0x30
   140003676:	mov    rbx,rcx
   140003679:	mov    DWORD PTR [rsp+0x20],0xb
   140003681:	call   QWORD PTR [rip+0x5b51]        # 0x1400091d8
   140003687:	mov    QWORD PTR [rsp+0x28],rax
   14000368c:	lea    rax,[rip+0x64bd]        # 0x140009b50
   140003693:	lea    rdx,[rsp+0x40]
   140003698:	mov    rcx,rbx
   14000369b:	mov    QWORD PTR [rsp+0x40],rax
   1400036a0:	call   QWORD PTR [rip+0x5a2a]        # 0x1400090d0
   1400036a6:	lea    rax,[rip+0x6493]        # 0x140009b40
   1400036ad:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400036b2:	movups XMMWORD PTR [rbx+0x18],xmm0
   1400036b6:	mov    QWORD PTR [rbx+0x40],0xf
   1400036be:	mov    QWORD PTR [rbx+0x38],0x0
   1400036c6:	mov    BYTE PTR [rbx+0x28],0x0
   1400036ca:	mov    QWORD PTR [rbx],rax
   1400036cd:	mov    rax,rbx
   1400036d0:	add    rsp,0x30
   1400036d4:	pop    rbx
   1400036d5:	ret    
   1400036d6:	int3   
   1400036d7:	int3   
   1400036d8:	int3   
   1400036d9:	int3   
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	rex push rbx
   1400036e2:	sub    rsp,0x20
   1400036e6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400036eb:	mov    rbx,rcx
   1400036ee:	jb     0x1400036f8
   1400036f0:	mov    rcx,QWORD PTR [rcx]
   1400036f3:	call   0x1400071e2
   1400036f8:	mov    QWORD PTR [rbx+0x18],0xf
   140003700:	mov    QWORD PTR [rbx+0x10],0x0
   140003708:	mov    BYTE PTR [rbx],0x0
   14000370b:	add    rsp,0x20
   14000370f:	pop    rbx
   140003710:	ret    
   140003711:	int3   
   140003712:	int3   
   140003713:	int3   
   140003714:	int3   
   140003715:	int3   
   140003716:	int3   
   140003717:	int3   
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	rex push rbx
   140003722:	sub    rsp,0x20
   140003726:	cmp    QWORD PTR [rcx+0x18],0x8
   14000372b:	mov    rbx,rcx
   14000372e:	jb     0x140003738
   140003730:	mov    rcx,QWORD PTR [rcx]
   140003733:	call   0x1400071e2
   140003738:	xor    eax,eax
   14000373a:	mov    QWORD PTR [rbx+0x18],0x7
   140003742:	mov    QWORD PTR [rbx+0x10],rax
   140003746:	mov    WORD PTR [rbx],ax
   140003749:	add    rsp,0x20
   14000374d:	pop    rbx
   14000374e:	ret    
   14000374f:	int3   
   140003750:	lea    rax,[rip+0x64a9]        # 0x140009c00
   140003757:	mov    QWORD PTR [rcx],rax
   14000375a:	lea    rax,[rip+0x64b7]        # 0x140009c18
   140003761:	mov    QWORD PTR [rcx+0x48],rax
   140003765:	mov    rax,QWORD PTR [rcx+0x70]
   140003769:	movsxd rdx,DWORD PTR [rax+0x4]
   14000376d:	lea    rax,[rip+0x64b4]        # 0x140009c28
   140003774:	mov    QWORD PTR [rdx+rcx*1+0x70],rax
   140003779:	mov    rax,QWORD PTR [rcx+0x70]
   14000377d:	movsxd rdx,DWORD PTR [rax+0x4]
   140003781:	lea    r8d,[rdx-0x10]
   140003785:	mov    DWORD PTR [rdx+rcx*1+0x6c],r8d
   14000378a:	jmp    0x1400038b0
   14000378f:	int3   
   140003790:	rex push rbx
   140003792:	sub    rsp,0x20
   140003796:	mov    rbx,rcx
   140003799:	add    rcx,0x28
   14000379d:	lea    rax,[rip+0x64ac]        # 0x140009c50
   1400037a4:	mov    QWORD PTR [rcx-0x28],rax
   1400037a8:	lea    rax,[rip+0x64b1]        # 0x140009c60
   1400037af:	mov    QWORD PTR [rcx],rax
   1400037b2:	mov    rax,QWORD PTR [rbx+0x40]
   1400037b6:	movsxd rdx,DWORD PTR [rax+0x4]
   1400037ba:	lea    rax,[rip+0x64b7]        # 0x140009c78
   1400037c1:	mov    QWORD PTR [rdx+rbx*1+0x40],rax
   1400037c6:	mov    rax,QWORD PTR [rbx+0x40]
   1400037ca:	movsxd rdx,DWORD PTR [rax+0x4]
   1400037ce:	lea    rax,[rip+0x62eb]        # 0x140009ac0
   1400037d5:	lea    r8d,[rdx-0x10]
   1400037d9:	mov    DWORD PTR [rdx+rbx*1+0x3c],r8d
   1400037de:	mov    QWORD PTR [rbx],rax
   1400037e1:	lea    rax,[rip+0x6100]        # 0x1400098e8
   1400037e8:	mov    QWORD PTR [rcx],rax
   1400037eb:	call   QWORD PTR [rip+0x58f7]        # 0x1400090e8
   1400037f1:	lea    rax,[rip+0x6268]        # 0x140009a60
   1400037f8:	mov    QWORD PTR [rbx],rax
   1400037fb:	mov    rcx,QWORD PTR [rbx+0x8]
   1400037ff:	test   rcx,rcx
   140003802:	je     0x140003816
   140003804:	mov    rax,QWORD PTR [rcx]
   140003807:	call   QWORD PTR [rax+0x20]
   14000380a:	test   al,al
   14000380c:	je     0x140003816
   14000380e:	mov    QWORD PTR [rbx+0x8],0x0
   140003816:	add    rsp,0x20
   14000381a:	pop    rbx
   14000381b:	ret    
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	rex push rbx
   140003822:	sub    rsp,0x20
   140003826:	mov    rbx,rcx
   140003829:	add    rcx,0x28
   14000382d:	lea    rax,[rip+0x6574]        # 0x140009da8
   140003834:	mov    QWORD PTR [rcx-0x28],rax
   140003838:	lea    rax,[rip+0x6579]        # 0x140009db8
   14000383f:	mov    QWORD PTR [rcx],rax
   140003842:	mov    rax,QWORD PTR [rbx+0x40]
   140003846:	movsxd rdx,DWORD PTR [rax+0x4]
   14000384a:	lea    rax,[rip+0x657f]        # 0x140009dd0
   140003851:	mov    QWORD PTR [rdx+rbx*1+0x40],rax
   140003856:	mov    rax,QWORD PTR [rbx+0x40]
   14000385a:	movsxd rdx,DWORD PTR [rax+0x4]
   14000385e:	lea    rax,[rip+0x6283]        # 0x140009ae8
   140003865:	lea    r8d,[rdx-0x10]
   140003869:	mov    DWORD PTR [rdx+rbx*1+0x3c],r8d
   14000386e:	mov    QWORD PTR [rbx],rax
   140003871:	lea    rax,[rip+0x6058]        # 0x1400098d0
   140003878:	mov    QWORD PTR [rcx],rax
   14000387b:	call   QWORD PTR [rip+0x5867]        # 0x1400090e8
   140003881:	lea    rax,[rip+0x61d8]        # 0x140009a60
   140003888:	mov    QWORD PTR [rbx],rax
   14000388b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000388f:	test   rcx,rcx
   140003892:	je     0x1400038a6
   140003894:	mov    rax,QWORD PTR [rcx]
   140003897:	call   QWORD PTR [rax+0x20]
   14000389a:	test   al,al
   14000389c:	je     0x1400038a6
   14000389e:	mov    QWORD PTR [rbx+0x8],0x0
   1400038a6:	add    rsp,0x20
   1400038aa:	pop    rbx
   1400038ab:	ret    
   1400038ac:	int3   
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	rex push rbx
   1400038b2:	sub    rsp,0x20
   1400038b6:	lea    rax,[rip+0x631b]        # 0x140009bd8
   1400038bd:	mov    rbx,rcx
   1400038c0:	mov    QWORD PTR [rcx],rax
   1400038c3:	lea    rax,[rip+0x6196]        # 0x140009a60
   1400038ca:	mov    QWORD PTR [rcx+0x48],rax
   1400038ce:	mov    rcx,QWORD PTR [rcx+0x50]
   1400038d2:	test   rcx,rcx
   1400038d5:	je     0x1400038e9
   1400038d7:	mov    rax,QWORD PTR [rcx]
   1400038da:	call   QWORD PTR [rax+0x20]
   1400038dd:	test   al,al
   1400038df:	je     0x1400038e9
   1400038e1:	mov    QWORD PTR [rbx+0x50],0x0
   1400038e9:	lea    rax,[rip+0x6220]        # 0x140009b10
   1400038f0:	mov    QWORD PTR [rbx],rax
   1400038f3:	cmp    QWORD PTR [rbx+0x40],0x10
   1400038f8:	jb     0x140003903
   1400038fa:	mov    rcx,QWORD PTR [rbx+0x28]
   1400038fe:	call   0x1400071e2
   140003903:	mov    QWORD PTR [rbx+0x40],0xf
   14000390b:	mov    QWORD PTR [rbx+0x38],0x0
   140003913:	mov    rcx,rbx
   140003916:	mov    BYTE PTR [rbx+0x28],0x0
   14000391a:	add    rsp,0x20
   14000391e:	pop    rbx
   14000391f:	rex.W jmp QWORD PTR [rip+0x57c2]        # 0x1400090e8
   140003926:	int3   
   140003927:	int3   
   140003928:	int3   
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	rex push rbx
   140003932:	sub    rsp,0x20
   140003936:	mov    rbx,rcx
   140003939:	mov    rcx,QWORD PTR [rcx]
   14000393c:	test   rcx,rcx
   14000393f:	je     0x140003952
   140003941:	mov    rax,QWORD PTR [rcx]
   140003944:	call   QWORD PTR [rax+0x20]
   140003947:	test   al,al
   140003949:	je     0x140003952
   14000394b:	mov    QWORD PTR [rbx],0x0
   140003952:	add    rsp,0x20
   140003956:	pop    rbx
   140003957:	ret    
   140003958:	int3   
   140003959:	int3   
   14000395a:	int3   
   14000395b:	int3   
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	rex push rbx
   140003962:	sub    rsp,0x20
   140003966:	mov    rbx,QWORD PTR [rcx+0x8]
   14000396a:	test   rbx,rbx
   14000396d:	je     0x140003997
   14000396f:	lock dec DWORD PTR [rbx+0x8]
   140003973:	mov    QWORD PTR [rsp+0x30],rdi
   140003978:	jne    0x140003992
   14000397a:	mov    rax,QWORD PTR [rbx]
   14000397d:	mov    rcx,rbx
   140003980:	call   QWORD PTR [rax+0x8]
   140003983:	lock dec DWORD PTR [rbx+0xc]
   140003987:	jne    0x140003992
   140003989:	mov    rax,QWORD PTR [rbx]
   14000398c:	mov    rcx,rbx
   14000398f:	call   QWORD PTR [rax+0x10]
   140003992:	mov    rdi,QWORD PTR [rsp+0x30]
   140003997:	add    rsp,0x20
   14000399b:	pop    rbx
   14000399c:	ret    
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	rex push rbx
   1400039a2:	sub    rsp,0x20
   1400039a6:	mov    rbx,QWORD PTR [rcx+0x8]
   1400039aa:	test   rbx,rbx
   1400039ad:	je     0x1400039d7
   1400039af:	lock dec DWORD PTR [rbx+0x8]
   1400039b3:	mov    QWORD PTR [rsp+0x30],rdi
   1400039b8:	jne    0x1400039d2
   1400039ba:	mov    rax,QWORD PTR [rbx]
   1400039bd:	mov    rcx,rbx
   1400039c0:	call   QWORD PTR [rax+0x8]
   1400039c3:	lock dec DWORD PTR [rbx+0xc]
   1400039c7:	jne    0x1400039d2
   1400039c9:	mov    rax,QWORD PTR [rbx]
   1400039cc:	mov    rcx,rbx
   1400039cf:	call   QWORD PTR [rax+0x10]
   1400039d2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400039d7:	add    rsp,0x20
   1400039db:	pop    rbx
   1400039dc:	ret    
   1400039dd:	int3   
   1400039de:	int3   
   1400039df:	int3   
   1400039e0:	lea    rax,[rip+0x60a9]        # 0x140009a90
   1400039e7:	mov    QWORD PTR [rcx],rax
   1400039ea:	ret    
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	lea    rax,[rip+0x6099]        # 0x140009a90
   1400039f7:	mov    QWORD PTR [rcx],rax
   1400039fa:	ret    
   1400039fb:	int3   
   1400039fc:	int3   
   1400039fd:	int3   
   1400039fe:	int3   
   1400039ff:	int3   
   140003a00:	sub    rsp,0x28
   140003a04:	cmp    BYTE PTR [rcx+0x8],0x0
   140003a08:	je     0x140003a3d
   140003a0a:	mov    rcx,QWORD PTR [rcx]
   140003a0d:	mov    eax,0x80000000
   140003a12:	lock xadd DWORD PTR [rcx],eax
   140003a16:	bt     eax,0x1e
   140003a1a:	jb     0x140003a3d
   140003a1c:	cmp    eax,0x80000000
   140003a21:	jle    0x140003a3d
   140003a23:	lock bts DWORD PTR [rcx],0x1e
   140003a28:	jb     0x140003a3d
   140003a2a:	call   0x140006340
   140003a2f:	mov    rcx,rax
   140003a32:	add    rsp,0x28
   140003a36:	rex.W jmp QWORD PTR [rip+0x55f3]        # 0x140009030
   140003a3d:	add    rsp,0x28
   140003a41:	ret    
   140003a42:	int3   
   140003a43:	int3   
   140003a44:	int3   
   140003a45:	int3   
   140003a46:	int3   
   140003a47:	int3   
   140003a48:	int3   
   140003a49:	int3   
   140003a4a:	int3   
   140003a4b:	int3   
   140003a4c:	int3   
   140003a4d:	int3   
   140003a4e:	int3   
   140003a4f:	int3   
   140003a50:	jmp    0x140004fb0
   140003a55:	int3   
   140003a56:	int3   
   140003a57:	int3   
   140003a58:	int3   
   140003a59:	int3   
   140003a5a:	int3   
   140003a5b:	int3   
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	jmp    0x140005030
   140003a65:	int3   
   140003a66:	int3   
   140003a67:	int3   
   140003a68:	int3   
   140003a69:	int3   
   140003a6a:	int3   
   140003a6b:	int3   
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	lea    rax,[rip+0x5eb9]        # 0x140009930
   140003a77:	mov    QWORD PTR [rcx],rax
   140003a7a:	ret    
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	lea    rax,[rip+0x5ea9]        # 0x140009930
   140003a87:	mov    QWORD PTR [rcx],rax
   140003a8a:	ret    
   140003a8b:	int3   
   140003a8c:	int3   
   140003a8d:	int3   
   140003a8e:	int3   
   140003a8f:	int3   
   140003a90:	lea    rax,[rip+0x5e99]        # 0x140009930
   140003a97:	mov    QWORD PTR [rcx],rax
   140003a9a:	ret    
   140003a9b:	int3   
   140003a9c:	int3   
   140003a9d:	int3   
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	lea    rax,[rip+0x5e41]        # 0x1400098e8
   140003aa7:	mov    QWORD PTR [rcx],rax
   140003aaa:	rex.W jmp QWORD PTR [rip+0x5637]        # 0x1400090e8
   140003ab1:	int3   
   140003ab2:	int3   
   140003ab3:	int3   
   140003ab4:	int3   
   140003ab5:	int3   
   140003ab6:	int3   
   140003ab7:	int3   
   140003ab8:	int3   
   140003ab9:	int3   
   140003aba:	int3   
   140003abb:	int3   
   140003abc:	int3   
   140003abd:	int3   
   140003abe:	int3   
   140003abf:	int3   
   140003ac0:	rex push rbx
   140003ac2:	sub    rsp,0x20
   140003ac6:	lea    rax,[rip+0x5ff3]        # 0x140009ac0
   140003acd:	mov    rbx,rcx
   140003ad0:	add    rcx,0x28
   140003ad4:	mov    QWORD PTR [rcx-0x28],rax
   140003ad8:	lea    rax,[rip+0x5e09]        # 0x1400098e8
   140003adf:	mov    QWORD PTR [rcx],rax
   140003ae2:	call   QWORD PTR [rip+0x5600]        # 0x1400090e8
   140003ae8:	lea    rax,[rip+0x5f71]        # 0x140009a60
   140003aef:	mov    QWORD PTR [rbx],rax
   140003af2:	mov    rcx,QWORD PTR [rbx+0x8]
   140003af6:	test   rcx,rcx
   140003af9:	je     0x140003b0d
   140003afb:	mov    rax,QWORD PTR [rcx]
   140003afe:	call   QWORD PTR [rax+0x20]
   140003b01:	test   al,al
   140003b03:	je     0x140003b0d
   140003b05:	mov    QWORD PTR [rbx+0x8],0x0
   140003b0d:	add    rsp,0x20
   140003b11:	pop    rbx
   140003b12:	ret    
   140003b13:	int3   
   140003b14:	int3   
   140003b15:	int3   
   140003b16:	int3   
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	lea    rax,[rip+0x5da9]        # 0x1400098d0
   140003b27:	mov    QWORD PTR [rcx],rax
   140003b2a:	rex.W jmp QWORD PTR [rip+0x55b7]        # 0x1400090e8
   140003b31:	int3   
   140003b32:	int3   
   140003b33:	int3   
   140003b34:	int3   
   140003b35:	int3   
   140003b36:	int3   
   140003b37:	int3   
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	rex push rbx
   140003b42:	sub    rsp,0x20
   140003b46:	lea    rax,[rip+0x5f9b]        # 0x140009ae8
   140003b4d:	mov    rbx,rcx
   140003b50:	add    rcx,0x28
   140003b54:	mov    QWORD PTR [rcx-0x28],rax
   140003b58:	lea    rax,[rip+0x5d71]        # 0x1400098d0
   140003b5f:	mov    QWORD PTR [rcx],rax
   140003b62:	call   QWORD PTR [rip+0x5580]        # 0x1400090e8
   140003b68:	lea    rax,[rip+0x5ef1]        # 0x140009a60
   140003b6f:	mov    QWORD PTR [rbx],rax
   140003b72:	mov    rcx,QWORD PTR [rbx+0x8]
   140003b76:	test   rcx,rcx
   140003b79:	je     0x140003b8d
   140003b7b:	mov    rax,QWORD PTR [rcx]
   140003b7e:	call   QWORD PTR [rax+0x20]
   140003b81:	test   al,al
   140003b83:	je     0x140003b8d
   140003b85:	mov    QWORD PTR [rbx+0x8],0x0
   140003b8d:	add    rsp,0x20
   140003b91:	pop    rbx
   140003b92:	ret    
   140003b93:	int3   
   140003b94:	int3   
   140003b95:	int3   
   140003b96:	int3   
   140003b97:	int3   
   140003b98:	int3   
   140003b99:	int3   
   140003b9a:	int3   
   140003b9b:	int3   
   140003b9c:	int3   
   140003b9d:	int3   
   140003b9e:	int3   
   140003b9f:	int3   
   140003ba0:	lea    rax,[rip+0x5ec9]        # 0x140009a70
   140003ba7:	mov    QWORD PTR [rcx],rax
   140003baa:	ret    
   140003bab:	int3   
   140003bac:	int3   
   140003bad:	int3   
   140003bae:	int3   
   140003baf:	int3   
   140003bb0:	lea    rax,[rip+0x5d79]        # 0x140009930
   140003bb7:	mov    QWORD PTR [rcx],rax
   140003bba:	ret    
   140003bbb:	int3   
   140003bbc:	int3   
   140003bbd:	int3   
   140003bbe:	int3   
   140003bbf:	int3   
   140003bc0:	rex push rbx
   140003bc2:	sub    rsp,0x20
   140003bc6:	lea    rax,[rip+0x5e93]        # 0x140009a60
   140003bcd:	mov    rbx,rcx
   140003bd0:	mov    QWORD PTR [rcx],rax
   140003bd3:	mov    rcx,QWORD PTR [rcx+0x8]
   140003bd7:	test   rcx,rcx
   140003bda:	je     0x140003bee
   140003bdc:	mov    rax,QWORD PTR [rcx]
   140003bdf:	call   QWORD PTR [rax+0x20]
   140003be2:	test   al,al
   140003be4:	je     0x140003bee
   140003be6:	mov    QWORD PTR [rbx+0x8],0x0
   140003bee:	add    rsp,0x20
   140003bf2:	pop    rbx
   140003bf3:	ret    
   140003bf4:	int3   
   140003bf5:	int3   
   140003bf6:	int3   
   140003bf7:	int3   
   140003bf8:	int3   
   140003bf9:	int3   
   140003bfa:	int3   
   140003bfb:	int3   
   140003bfc:	int3   
   140003bfd:	int3   
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	rex push rbx
   140003c02:	sub    rsp,0x20
   140003c06:	mov    rbx,QWORD PTR [rcx+0x8]
   140003c0a:	test   rbx,rbx
   140003c0d:	je     0x140003c37
   140003c0f:	lock dec DWORD PTR [rbx+0x8]
   140003c13:	mov    QWORD PTR [rsp+0x30],rdi
   140003c18:	jne    0x140003c32
   140003c1a:	mov    rax,QWORD PTR [rbx]
   140003c1d:	mov    rcx,rbx
   140003c20:	call   QWORD PTR [rax+0x8]
   140003c23:	lock dec DWORD PTR [rbx+0xc]
   140003c27:	jne    0x140003c32
   140003c29:	mov    rax,QWORD PTR [rbx]
   140003c2c:	mov    rcx,rbx
   140003c2f:	call   QWORD PTR [rax+0x10]
   140003c32:	mov    rdi,QWORD PTR [rsp+0x30]
   140003c37:	add    rsp,0x20
   140003c3b:	pop    rbx
   140003c3c:	ret    
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	rex.W jmp QWORD PTR [rip+0x54a1]        # 0x1400090e8
   140003c47:	int3   
   140003c48:	int3   
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	int3   
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	rex push rbx
   140003c52:	sub    rsp,0x20
   140003c56:	mov    rbx,QWORD PTR [rcx]
   140003c59:	test   rbx,rbx
   140003c5c:	je     0x140003c86
   140003c5e:	lock dec DWORD PTR [rbx+0x8]
   140003c62:	mov    QWORD PTR [rsp+0x30],rdi
   140003c67:	jne    0x140003c81
   140003c69:	mov    rax,QWORD PTR [rbx]
   140003c6c:	mov    rcx,rbx
   140003c6f:	call   QWORD PTR [rax+0x8]
   140003c72:	lock dec DWORD PTR [rbx+0xc]
   140003c76:	jne    0x140003c81
   140003c78:	mov    rax,QWORD PTR [rbx]
   140003c7b:	mov    rcx,rbx
   140003c7e:	call   QWORD PTR [rax+0x10]
   140003c81:	mov    rdi,QWORD PTR [rsp+0x30]
   140003c86:	add    rsp,0x20
   140003c8a:	pop    rbx
   140003c8b:	ret    
   140003c8c:	int3   
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	lea    rax,[rip+0x5df9]        # 0x140009a90
   140003c97:	mov    QWORD PTR [rcx],rax
   140003c9a:	ret    
   140003c9b:	int3   
   140003c9c:	int3   
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	rex push rbx
   140003ca2:	sub    rsp,0x20
   140003ca6:	lea    rax,[rip+0x5e63]        # 0x140009b10
   140003cad:	mov    rbx,rcx
   140003cb0:	mov    QWORD PTR [rcx],rax
   140003cb3:	cmp    QWORD PTR [rcx+0x40],0x10
   140003cb8:	jb     0x140003cc3
   140003cba:	mov    rcx,QWORD PTR [rcx+0x28]
   140003cbe:	call   0x1400071e2
   140003cc3:	mov    QWORD PTR [rbx+0x40],0xf
   140003ccb:	mov    QWORD PTR [rbx+0x38],0x0
   140003cd3:	mov    rcx,rbx
   140003cd6:	mov    BYTE PTR [rbx+0x28],0x0
   140003cda:	add    rsp,0x20
   140003cde:	pop    rbx
   140003cdf:	rex.W jmp QWORD PTR [rip+0x5402]        # 0x1400090e8
   140003ce6:	int3   
   140003ce7:	int3   
   140003ce8:	int3   
   140003ce9:	int3   
   140003cea:	int3   
   140003ceb:	int3   
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	rex push rbx
   140003cf2:	sub    rsp,0x20
   140003cf6:	lea    rax,[rip+0x5e13]        # 0x140009b10
   140003cfd:	mov    rbx,rcx
   140003d00:	mov    QWORD PTR [rcx],rax
   140003d03:	cmp    QWORD PTR [rcx+0x40],0x10
   140003d08:	jb     0x140003d13
   140003d0a:	mov    rcx,QWORD PTR [rcx+0x28]
   140003d0e:	call   0x1400071e2
   140003d13:	mov    QWORD PTR [rbx+0x40],0xf
   140003d1b:	mov    QWORD PTR [rbx+0x38],0x0
   140003d23:	mov    rcx,rbx
   140003d26:	mov    BYTE PTR [rbx+0x28],0x0
   140003d2a:	add    rsp,0x20
   140003d2e:	pop    rbx
   140003d2f:	rex.W jmp QWORD PTR [rip+0x53b2]        # 0x1400090e8
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	rex push rbx
   140003d42:	sub    rsp,0x20
   140003d46:	lea    rax,[rip+0x5dc3]        # 0x140009b10
   140003d4d:	mov    rbx,rcx
   140003d50:	mov    QWORD PTR [rcx],rax
   140003d53:	cmp    QWORD PTR [rcx+0x40],0x10
   140003d58:	jb     0x140003d63
   140003d5a:	mov    rcx,QWORD PTR [rcx+0x28]
   140003d5e:	call   0x1400071e2
   140003d63:	mov    QWORD PTR [rbx+0x40],0xf
   140003d6b:	mov    QWORD PTR [rbx+0x38],0x0
   140003d73:	mov    rcx,rbx
   140003d76:	mov    BYTE PTR [rbx+0x28],0x0
   140003d7a:	add    rsp,0x20
   140003d7e:	pop    rbx
   140003d7f:	rex.W jmp QWORD PTR [rip+0x5362]        # 0x1400090e8
   140003d86:	int3   
   140003d87:	int3   
   140003d88:	int3   
   140003d89:	int3   
   140003d8a:	int3   
   140003d8b:	int3   
   140003d8c:	int3   
   140003d8d:	int3   
   140003d8e:	int3   
   140003d8f:	int3   
   140003d90:	mov    rax,rdx
   140003d93:	ret    
   140003d94:	int3   
   140003d95:	int3   
   140003d96:	int3   
   140003d97:	int3   
   140003d98:	int3   
   140003d99:	int3   
   140003d9a:	int3   
   140003d9b:	int3   
   140003d9c:	int3   
   140003d9d:	int3   
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	ret    0x0
   140003da3:	int3   
   140003da4:	int3   
   140003da5:	int3   
   140003da6:	int3   
   140003da7:	int3   
   140003da8:	int3   
   140003da9:	int3   
   140003daa:	int3   
   140003dab:	int3   
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	cmp    BYTE PTR [rdx],0x0
   140003db3:	jne    0x140003dbd
   140003db5:	xor    r8d,r8d
   140003db8:	jmp    0x140005720
   140003dbd:	or     r8,0xffffffffffffffff
   140003dc1:	inc    r8
   140003dc4:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003dc9:	jne    0x140003dc1
   140003dcb:	jmp    0x140005720
   140003dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140003dd5:	push   rdi
   140003dd6:	sub    rsp,0x20
   140003dda:	mov    rdi,QWORD PTR [rdx]
   140003ddd:	mov    rbx,rcx
   140003de0:	mov    rcx,QWORD PTR [rcx]
   140003de3:	test   rcx,rcx
   140003de6:	je     0x140003df9
   140003de8:	mov    rax,QWORD PTR [rcx]
   140003deb:	call   QWORD PTR [rax+0x20]
   140003dee:	test   al,al
   140003df0:	je     0x140003df9
   140003df2:	mov    QWORD PTR [rbx],0x0
   140003df9:	mov    QWORD PTR [rbx],rdi
   140003dfc:	test   rdi,rdi
   140003dff:	je     0x140003e0a
   140003e01:	mov    rax,QWORD PTR [rdi]
   140003e04:	mov    rcx,rdi
   140003e07:	call   QWORD PTR [rax+0x18]
   140003e0a:	mov    rax,rbx
   140003e0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e12:	add    rsp,0x20
   140003e16:	pop    rdi
   140003e17:	ret    
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	cmp    rcx,rdx
   140003e23:	sete   al
   140003e26:	ret    
   140003e27:	int3   
   140003e28:	int3   
   140003e29:	int3   
   140003e2a:	int3   
   140003e2b:	int3   
   140003e2c:	int3   
   140003e2d:	int3   
   140003e2e:	int3   
   140003e2f:	int3   
   140003e30:	mov    rax,QWORD PTR [rdx+0x8]
   140003e34:	cmp    QWORD PTR [rcx+0x8],rax
   140003e38:	jne    0x140003e43
   140003e3a:	mov    eax,DWORD PTR [rdx]
   140003e3c:	cmp    DWORD PTR [rcx],eax
   140003e3e:	jne    0x140003e43
   140003e40:	mov    al,0x1
   140003e42:	ret    
   140003e43:	xor    al,al
   140003e45:	ret    
   140003e46:	int3   
   140003e47:	int3   
   140003e48:	int3   
   140003e49:	int3   
   140003e4a:	int3   
   140003e4b:	int3   
   140003e4c:	int3   
   140003e4d:	int3   
   140003e4e:	int3   
   140003e4f:	int3   
   140003e50:	or     r9,0xffffffffffffffff
   140003e54:	xor    r8d,r8d
   140003e57:	jmp    0x140005340
   140003e5c:	int3   
   140003e5d:	int3   
   140003e5e:	int3   
   140003e5f:	int3   
   140003e60:	cmp    BYTE PTR [rdx],0x0
   140003e63:	jne    0x140003e6d
   140003e65:	xor    r8d,r8d
   140003e68:	jmp    0x140005480
   140003e6d:	or     r8,0xffffffffffffffff
   140003e71:	inc    r8
   140003e74:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003e79:	jne    0x140003e71
   140003e7b:	jmp    0x140005480
   140003e80:	rex push rbx
   140003e82:	sub    rsp,0x20
   140003e86:	lea    rax,[rip+0x5d73]        # 0x140009c00
   140003e8d:	mov    rbx,rcx
   140003e90:	mov    QWORD PTR [rcx],rax
   140003e93:	lea    rax,[rip+0x5d7e]        # 0x140009c18
   140003e9a:	mov    QWORD PTR [rcx+0x48],rax
   140003e9e:	mov    rax,QWORD PTR [rcx+0x70]
   140003ea2:	movsxd rdx,DWORD PTR [rax+0x4]
   140003ea6:	lea    rax,[rip+0x5d7b]        # 0x140009c28
   140003ead:	mov    QWORD PTR [rdx+rcx*1+0x70],rax
   140003eb2:	mov    rax,QWORD PTR [rcx+0x70]
   140003eb6:	movsxd rdx,DWORD PTR [rax+0x4]
   140003eba:	lea    r8d,[rdx-0x10]
   140003ebe:	mov    DWORD PTR [rdx+rcx*1+0x6c],r8d
   140003ec3:	call   0x1400038b0
   140003ec8:	lea    rax,[rip+0x5ba1]        # 0x140009a70
   140003ecf:	mov    QWORD PTR [rbx+0x80],rax
   140003ed6:	add    rsp,0x20
   140003eda:	pop    rbx
   140003edb:	ret    
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	rex push rbx
   140003ee2:	sub    rsp,0x20
   140003ee6:	mov    rbx,rcx
   140003ee9:	call   0x140003790
   140003eee:	lea    rax,[rip+0x5b7b]        # 0x140009a70
   140003ef5:	mov    QWORD PTR [rbx+0x50],rax
   140003ef9:	add    rsp,0x20
   140003efd:	pop    rbx
   140003efe:	ret    
   140003eff:	int3   
   140003f00:	rex push rbx
   140003f02:	sub    rsp,0x20
   140003f06:	mov    rbx,rcx
   140003f09:	call   0x140003820
   140003f0e:	lea    rax,[rip+0x5b5b]        # 0x140009a70
   140003f15:	mov    QWORD PTR [rbx+0x50],rax
   140003f19:	add    rsp,0x20
   140003f1d:	pop    rbx
   140003f1e:	ret    
   140003f1f:	int3   
   140003f20:	movsxd rax,DWORD PTR [rcx-0x4]
   140003f24:	sub    rcx,rax
   140003f27:	sub    rcx,0x80
   140003f2e:	jmp    0x1400040f0
   140003f33:	int3   
   140003f34:	sub    rcx,0x48
   140003f38:	jmp    0x1400040f0
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	movsxd rax,DWORD PTR [rcx-0x4]
   140003f44:	sub    rcx,rax
   140003f47:	sub    rcx,0x50
   140003f4b:	jmp    0x140004170
   140003f50:	sub    rcx,0x28
   140003f54:	jmp    0x140004170
   140003f59:	int3   
   140003f5a:	int3   
   140003f5b:	int3   
   140003f5c:	movsxd rax,DWORD PTR [rcx-0x4]
   140003f60:	sub    rcx,rax
   140003f63:	sub    rcx,0x50
   140003f67:	jmp    0x1400041b0
   140003f6c:	sub    rcx,0x28
   140003f70:	jmp    0x1400041b0
   140003f75:	int3   
   140003f76:	int3   
   140003f77:	int3   
   140003f78:	sub    rcx,0x48
   140003f7c:	jmp    0x1400041f0
   140003f81:	int3   
   140003f82:	int3   
   140003f83:	int3   
   140003f84:	int3   
   140003f85:	int3   
   140003f86:	int3   
   140003f87:	int3   
   140003f88:	int3   
   140003f89:	int3   
   140003f8a:	int3   
   140003f8b:	int3   
   140003f8c:	int3   
   140003f8d:	int3   
   140003f8e:	int3   
   140003f8f:	int3   
   140003f90:	mov    QWORD PTR [rsp+0x10],rbx
   140003f95:	push   rsi
   140003f96:	sub    rsp,0x20
   140003f9a:	mov    esi,edx
   140003f9c:	mov    rbx,rcx
   140003f9f:	test   dl,0x2
   140003fa2:	je     0x140003fe1
   140003fa4:	mov    r8d,DWORD PTR [rcx-0x8]
   140003fa8:	lea    r9,[rip+0xfffffffffffffa51]        # 0x140003a00
   140003faf:	mov    edx,0x10
   140003fb4:	mov    QWORD PTR [rsp+0x30],rdi
   140003fb9:	call   0x140007110
   140003fbe:	test   sil,0x1
   140003fc2:	je     0x140003fcd
   140003fc4:	lea    rcx,[rbx-0x8]
   140003fc8:	call   0x14000732a
   140003fcd:	lea    rax,[rbx-0x8]
   140003fd1:	mov    rdi,QWORD PTR [rsp+0x30]
   140003fd6:	mov    rbx,QWORD PTR [rsp+0x38]
   140003fdb:	add    rsp,0x20
   140003fdf:	pop    rsi
   140003fe0:	ret    
   140003fe1:	cmp    BYTE PTR [rcx+0x8],0x0
   140003fe5:	je     0x140004015
   140003fe7:	mov    rcx,QWORD PTR [rcx]
   140003fea:	mov    eax,0x80000000
   140003fef:	lock xadd DWORD PTR [rcx],eax
   140003ff3:	bt     eax,0x1e
   140003ff7:	jb     0x140004015
   140003ff9:	cmp    eax,0x80000000
   140003ffe:	jle    0x140004015
   140004000:	lock bts DWORD PTR [rcx],0x1e
   140004005:	jb     0x140004015
   140004007:	call   0x140006340
   14000400c:	mov    rcx,rax
   14000400f:	call   QWORD PTR [rip+0x501b]        # 0x140009030
   140004015:	test   sil,0x1
   140004019:	je     0x140004023
   14000401b:	mov    rcx,rbx
   14000401e:	call   0x1400071e2
   140004023:	mov    rax,rbx
   140004026:	mov    rbx,QWORD PTR [rsp+0x38]
   14000402b:	add    rsp,0x20
   14000402f:	pop    rsi
   140004030:	ret    
   140004031:	int3   
   140004032:	int3   
   140004033:	int3   
   140004034:	sub    rcx,0x28
   140004038:	jmp    0x140004350
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	sub    rcx,0x28
   140004044:	jmp    0x140004400
   140004049:	int3   
   14000404a:	int3   
   14000404b:	int3   
   14000404c:	int3   
   14000404d:	int3   
   14000404e:	int3   
   14000404f:	int3   
   140004050:	mov    QWORD PTR [rsp+0x8],rbx
   140004055:	push   rdi
   140004056:	sub    rsp,0x20
   14000405a:	cmp    QWORD PTR [rcx+0x18],0x10
   14000405f:	mov    edi,edx
   140004061:	mov    rbx,rcx
   140004064:	jb     0x14000406e
   140004066:	mov    rcx,QWORD PTR [rcx]
   140004069:	call   0x1400071e2
   14000406e:	mov    QWORD PTR [rbx+0x18],0xf
   140004076:	mov    QWORD PTR [rbx+0x10],0x0
   14000407e:	mov    BYTE PTR [rbx],0x0
   140004081:	test   dil,0x1
   140004085:	je     0x14000408f
   140004087:	mov    rcx,rbx
   14000408a:	call   0x1400071e2
   14000408f:	mov    rax,rbx
   140004092:	mov    rbx,QWORD PTR [rsp+0x30]
   140004097:	add    rsp,0x20
   14000409b:	pop    rdi
   14000409c:	ret    
   14000409d:	int3   
   14000409e:	int3   
   14000409f:	int3   
   1400040a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040a5:	push   rdi
   1400040a6:	sub    rsp,0x20
   1400040aa:	cmp    QWORD PTR [rcx+0x18],0x8
   1400040af:	mov    edi,edx
   1400040b1:	mov    rbx,rcx
   1400040b4:	jb     0x1400040be
   1400040b6:	mov    rcx,QWORD PTR [rcx]
   1400040b9:	call   0x1400071e2
   1400040be:	xor    eax,eax
   1400040c0:	mov    QWORD PTR [rbx+0x18],0x7
   1400040c8:	mov    QWORD PTR [rbx+0x10],rax
   1400040cc:	mov    WORD PTR [rbx],ax
   1400040cf:	test   dil,0x1
   1400040d3:	je     0x1400040dd
   1400040d5:	mov    rcx,rbx
   1400040d8:	call   0x1400071e2
   1400040dd:	mov    rax,rbx
   1400040e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040e5:	add    rsp,0x20
   1400040e9:	pop    rdi
   1400040ea:	ret    
   1400040eb:	int3   
   1400040ec:	int3   
   1400040ed:	int3   
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040f5:	push   rdi
   1400040f6:	sub    rsp,0x20
   1400040fa:	lea    rax,[rip+0x5aff]        # 0x140009c00
   140004101:	mov    ebx,edx
   140004103:	mov    rdi,rcx
   140004106:	mov    QWORD PTR [rcx],rax
   140004109:	lea    rax,[rip+0x5b08]        # 0x140009c18
   140004110:	mov    QWORD PTR [rcx+0x48],rax
   140004114:	mov    rax,QWORD PTR [rcx+0x70]
   140004118:	movsxd r8,DWORD PTR [rax+0x4]
   14000411c:	lea    rax,[rip+0x5b05]        # 0x140009c28
   140004123:	mov    QWORD PTR [r8+rcx*1+0x70],rax
   140004128:	mov    rax,QWORD PTR [rcx+0x70]
   14000412c:	movsxd r8,DWORD PTR [rax+0x4]
   140004130:	lea    r9d,[r8-0x10]
   140004134:	mov    DWORD PTR [r8+rcx*1+0x6c],r9d
   140004139:	call   0x1400038b0
   14000413e:	lea    rax,[rip+0x592b]        # 0x140009a70
   140004145:	mov    QWORD PTR [rdi+0x80],rax
   14000414c:	test   bl,0x1
   14000414f:	je     0x140004159
   140004151:	mov    rcx,rdi
   140004154:	call   0x1400071e2
   140004159:	mov    rax,rdi
   14000415c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004161:	add    rsp,0x20
   140004165:	pop    rdi
   140004166:	ret    
   140004167:	int3   
   140004168:	int3   
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	mov    QWORD PTR [rsp+0x8],rbx
   140004175:	push   rdi
   140004176:	sub    rsp,0x20
   14000417a:	mov    ebx,edx
   14000417c:	mov    rdi,rcx
   14000417f:	call   0x140003790
   140004184:	lea    rax,[rip+0x58e5]        # 0x140009a70
   14000418b:	mov    QWORD PTR [rdi+0x50],rax
   14000418f:	test   bl,0x1
   140004192:	je     0x14000419c
   140004194:	mov    rcx,rdi
   140004197:	call   0x1400071e2
   14000419c:	mov    rax,rdi
   14000419f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041a4:	add    rsp,0x20
   1400041a8:	pop    rdi
   1400041a9:	ret    
   1400041aa:	int3   
   1400041ab:	int3   
   1400041ac:	int3   
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041b5:	push   rdi
   1400041b6:	sub    rsp,0x20
   1400041ba:	mov    ebx,edx
   1400041bc:	mov    rdi,rcx
   1400041bf:	call   0x140003820
   1400041c4:	lea    rax,[rip+0x58a5]        # 0x140009a70
   1400041cb:	mov    QWORD PTR [rdi+0x50],rax
   1400041cf:	test   bl,0x1
   1400041d2:	je     0x1400041dc
   1400041d4:	mov    rcx,rdi
   1400041d7:	call   0x1400071e2
   1400041dc:	mov    rax,rdi
   1400041df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041e4:	add    rsp,0x20
   1400041e8:	pop    rdi
   1400041e9:	ret    
   1400041ea:	int3   
   1400041eb:	int3   
   1400041ec:	int3   
   1400041ed:	int3   
   1400041ee:	int3   
   1400041ef:	int3   
   1400041f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041f5:	push   rdi
   1400041f6:	sub    rsp,0x20
   1400041fa:	mov    ebx,edx
   1400041fc:	mov    rdi,rcx
   1400041ff:	call   0x1400038b0
   140004204:	test   bl,0x1
   140004207:	je     0x140004211
   140004209:	mov    rcx,rdi
   14000420c:	call   0x1400071e2
   140004211:	mov    rax,rdi
   140004214:	mov    rbx,QWORD PTR [rsp+0x30]
   140004219:	add    rsp,0x20
   14000421d:	pop    rdi
   14000421e:	ret    
   14000421f:	int3   
   140004220:	rex push rbx
   140004222:	sub    rsp,0x20
   140004226:	lea    rax,[rip+0x5863]        # 0x140009a90
   14000422d:	mov    rbx,rcx
   140004230:	mov    QWORD PTR [rcx],rax
   140004233:	test   dl,0x1
   140004236:	je     0x14000423d
   140004238:	call   0x1400071e2
   14000423d:	mov    rax,rbx
   140004240:	add    rsp,0x20
   140004244:	pop    rbx
   140004245:	ret    
   140004246:	int3   
   140004247:	int3   
   140004248:	int3   
   140004249:	int3   
   14000424a:	int3   
   14000424b:	int3   
   14000424c:	int3   
   14000424d:	int3   
   14000424e:	int3   
   14000424f:	int3   
   140004250:	rex push rbx
   140004252:	sub    rsp,0x20
   140004256:	lea    rax,[rip+0x5833]        # 0x140009a90
   14000425d:	mov    rbx,rcx
   140004260:	mov    QWORD PTR [rcx],rax
   140004263:	test   dl,0x1
   140004266:	je     0x14000426d
   140004268:	call   0x1400071e2
   14000426d:	mov    rax,rbx
   140004270:	add    rsp,0x20
   140004274:	pop    rbx
   140004275:	ret    
   140004276:	int3   
   140004277:	int3   
   140004278:	int3   
   140004279:	int3   
   14000427a:	int3   
   14000427b:	int3   
   14000427c:	int3   
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	rex push rbx
   140004282:	sub    rsp,0x20
   140004286:	lea    rax,[rip+0x56a3]        # 0x140009930
   14000428d:	mov    rbx,rcx
   140004290:	mov    QWORD PTR [rcx],rax
   140004293:	test   dl,0x1
   140004296:	je     0x14000429d
   140004298:	call   0x1400071e2
   14000429d:	mov    rax,rbx
   1400042a0:	add    rsp,0x20
   1400042a4:	pop    rbx
   1400042a5:	ret    
   1400042a6:	int3   
   1400042a7:	int3   
   1400042a8:	int3   
   1400042a9:	int3   
   1400042aa:	int3   
   1400042ab:	int3   
   1400042ac:	int3   
   1400042ad:	int3   
   1400042ae:	int3   
   1400042af:	int3   
   1400042b0:	rex push rbx
   1400042b2:	sub    rsp,0x20
   1400042b6:	lea    rax,[rip+0x5673]        # 0x140009930
   1400042bd:	mov    rbx,rcx
   1400042c0:	mov    QWORD PTR [rcx],rax
   1400042c3:	test   dl,0x1
   1400042c6:	je     0x1400042cd
   1400042c8:	call   0x1400071e2
   1400042cd:	mov    rax,rbx
   1400042d0:	add    rsp,0x20
   1400042d4:	pop    rbx
   1400042d5:	ret    
   1400042d6:	int3   
   1400042d7:	int3   
   1400042d8:	int3   
   1400042d9:	int3   
   1400042da:	int3   
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	rex push rbx
   1400042e2:	sub    rsp,0x20
   1400042e6:	lea    rax,[rip+0x5643]        # 0x140009930
   1400042ed:	mov    rbx,rcx
   1400042f0:	mov    QWORD PTR [rcx],rax
   1400042f3:	test   dl,0x1
   1400042f6:	je     0x1400042fd
   1400042f8:	call   0x1400071e2
   1400042fd:	mov    rax,rbx
   140004300:	add    rsp,0x20
   140004304:	pop    rbx
   140004305:	ret    
   140004306:	int3   
   140004307:	int3   
   140004308:	int3   
   140004309:	int3   
   14000430a:	int3   
   14000430b:	int3   
   14000430c:	int3   
   14000430d:	int3   
   14000430e:	int3   
   14000430f:	int3   
   140004310:	mov    QWORD PTR [rsp+0x8],rbx
   140004315:	push   rdi
   140004316:	sub    rsp,0x20
   14000431a:	lea    rax,[rip+0x55c7]        # 0x1400098e8
   140004321:	mov    ebx,edx
   140004323:	mov    rdi,rcx
   140004326:	mov    QWORD PTR [rcx],rax
   140004329:	call   QWORD PTR [rip+0x4db9]        # 0x1400090e8
   14000432f:	test   bl,0x1
   140004332:	je     0x14000433c
   140004334:	mov    rcx,rdi
   140004337:	call   0x1400071e2
   14000433c:	mov    rax,rdi
   14000433f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004344:	add    rsp,0x20
   140004348:	pop    rdi
   140004349:	ret    
   14000434a:	int3   
   14000434b:	int3   
   14000434c:	int3   
   14000434d:	int3   
   14000434e:	int3   
   14000434f:	int3   
   140004350:	mov    QWORD PTR [rsp+0x8],rbx
   140004355:	push   rdi
   140004356:	sub    rsp,0x20
   14000435a:	lea    rax,[rip+0x575f]        # 0x140009ac0
   140004361:	mov    rbx,rcx
   140004364:	add    rcx,0x28
   140004368:	mov    QWORD PTR [rcx-0x28],rax
   14000436c:	lea    rax,[rip+0x5575]        # 0x1400098e8
   140004373:	mov    edi,edx
   140004375:	mov    QWORD PTR [rcx],rax
   140004378:	call   QWORD PTR [rip+0x4d6a]        # 0x1400090e8
   14000437e:	lea    rax,[rip+0x56db]        # 0x140009a60
   140004385:	mov    QWORD PTR [rbx],rax
   140004388:	mov    rcx,QWORD PTR [rbx+0x8]
   14000438c:	test   rcx,rcx
   14000438f:	je     0x1400043a3
   140004391:	mov    rax,QWORD PTR [rcx]
   140004394:	call   QWORD PTR [rax+0x20]
   140004397:	test   al,al
   140004399:	je     0x1400043a3
   14000439b:	mov    QWORD PTR [rbx+0x8],0x0
   1400043a3:	test   dil,0x1
   1400043a7:	je     0x1400043b1
   1400043a9:	mov    rcx,rbx
   1400043ac:	call   0x1400071e2
   1400043b1:	mov    rax,rbx
   1400043b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043b9:	add    rsp,0x20
   1400043bd:	pop    rdi
   1400043be:	ret    
   1400043bf:	int3   
   1400043c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043c5:	push   rdi
   1400043c6:	sub    rsp,0x20
   1400043ca:	lea    rax,[rip+0x54ff]        # 0x1400098d0
   1400043d1:	mov    ebx,edx
   1400043d3:	mov    rdi,rcx
   1400043d6:	mov    QWORD PTR [rcx],rax
   1400043d9:	call   QWORD PTR [rip+0x4d09]        # 0x1400090e8
   1400043df:	test   bl,0x1
   1400043e2:	je     0x1400043ec
   1400043e4:	mov    rcx,rdi
   1400043e7:	call   0x1400071e2
   1400043ec:	mov    rax,rdi
   1400043ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043f4:	add    rsp,0x20
   1400043f8:	pop    rdi
   1400043f9:	ret    
   1400043fa:	int3   
   1400043fb:	int3   
   1400043fc:	int3   
   1400043fd:	int3   
   1400043fe:	int3   
   1400043ff:	int3   
   140004400:	mov    QWORD PTR [rsp+0x8],rbx
   140004405:	push   rdi
   140004406:	sub    rsp,0x20
   14000440a:	lea    rax,[rip+0x56d7]        # 0x140009ae8
   140004411:	mov    rbx,rcx
   140004414:	add    rcx,0x28
   140004418:	mov    QWORD PTR [rcx-0x28],rax
   14000441c:	lea    rax,[rip+0x54ad]        # 0x1400098d0
   140004423:	mov    edi,edx
   140004425:	mov    QWORD PTR [rcx],rax
   140004428:	call   QWORD PTR [rip+0x4cba]        # 0x1400090e8
   14000442e:	lea    rax,[rip+0x562b]        # 0x140009a60
   140004435:	mov    QWORD PTR [rbx],rax
   140004438:	mov    rcx,QWORD PTR [rbx+0x8]
   14000443c:	test   rcx,rcx
   14000443f:	je     0x140004453
   140004441:	mov    rax,QWORD PTR [rcx]
   140004444:	call   QWORD PTR [rax+0x20]
   140004447:	test   al,al
   140004449:	je     0x140004453
   14000444b:	mov    QWORD PTR [rbx+0x8],0x0
   140004453:	test   dil,0x1
   140004457:	je     0x140004461
   140004459:	mov    rcx,rbx
   14000445c:	call   0x1400071e2
   140004461:	mov    rax,rbx
   140004464:	mov    rbx,QWORD PTR [rsp+0x30]
   140004469:	add    rsp,0x20
   14000446d:	pop    rdi
   14000446e:	ret    
   14000446f:	int3   
   140004470:	rex push rbx
   140004472:	sub    rsp,0x20
   140004476:	lea    rax,[rip+0x55f3]        # 0x140009a70
   14000447d:	mov    rbx,rcx
   140004480:	mov    QWORD PTR [rcx],rax
   140004483:	test   dl,0x1
   140004486:	je     0x14000448d
   140004488:	call   0x1400071e2
   14000448d:	mov    rax,rbx
   140004490:	add    rsp,0x20
   140004494:	pop    rbx
   140004495:	ret    
   140004496:	int3   
   140004497:	int3   
   140004498:	int3   
   140004499:	int3   
   14000449a:	int3   
   14000449b:	int3   
   14000449c:	int3   
   14000449d:	int3   
   14000449e:	int3   
   14000449f:	int3   
   1400044a0:	rex push rbx
   1400044a2:	sub    rsp,0x20
   1400044a6:	lea    rax,[rip+0x5483]        # 0x140009930
   1400044ad:	mov    rbx,rcx
   1400044b0:	mov    QWORD PTR [rcx],rax
   1400044b3:	test   dl,0x1
   1400044b6:	je     0x1400044bd
   1400044b8:	call   0x1400071e2
   1400044bd:	mov    rax,rbx
   1400044c0:	add    rsp,0x20
   1400044c4:	pop    rbx
   1400044c5:	ret    
   1400044c6:	int3   
   1400044c7:	int3   
   1400044c8:	int3   
   1400044c9:	int3   
   1400044ca:	int3   
   1400044cb:	int3   
   1400044cc:	int3   
   1400044cd:	int3   
   1400044ce:	int3   
   1400044cf:	int3   
   1400044d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400044d5:	push   rdi
   1400044d6:	sub    rsp,0x20
   1400044da:	mov    ebx,edx
   1400044dc:	mov    rdi,rcx
   1400044df:	call   QWORD PTR [rip+0x4c03]        # 0x1400090e8
   1400044e5:	test   bl,0x1
   1400044e8:	je     0x1400044f2
   1400044ea:	mov    rcx,rdi
   1400044ed:	call   0x1400071e2
   1400044f2:	mov    rax,rdi
   1400044f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044fa:	add    rsp,0x20
   1400044fe:	pop    rdi
   1400044ff:	ret    
   140004500:	rex push rbx
   140004502:	sub    rsp,0x20
   140004506:	lea    rax,[rip+0x5583]        # 0x140009a90
   14000450d:	mov    rbx,rcx
   140004510:	mov    QWORD PTR [rcx],rax
   140004513:	test   dl,0x1
   140004516:	je     0x14000451d
   140004518:	call   0x1400071e2
   14000451d:	mov    rax,rbx
   140004520:	add    rsp,0x20
   140004524:	pop    rbx
   140004525:	ret    
   140004526:	int3   
   140004527:	int3   
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	mov    QWORD PTR [rsp+0x8],rbx
   140004535:	push   rdi
   140004536:	sub    rsp,0x20
   14000453a:	lea    rax,[rip+0x55cf]        # 0x140009b10
   140004541:	mov    edi,edx
   140004543:	mov    rbx,rcx
   140004546:	mov    QWORD PTR [rcx],rax
   140004549:	cmp    QWORD PTR [rcx+0x40],0x10
   14000454e:	jb     0x140004559
   140004550:	mov    rcx,QWORD PTR [rcx+0x28]
   140004554:	call   0x1400071e2
   140004559:	mov    QWORD PTR [rbx+0x40],0xf
   140004561:	mov    QWORD PTR [rbx+0x38],0x0
   140004569:	mov    rcx,rbx
   14000456c:	mov    BYTE PTR [rbx+0x28],0x0
   140004570:	call   QWORD PTR [rip+0x4b72]        # 0x1400090e8
   140004576:	test   dil,0x1
   14000457a:	je     0x140004584
   14000457c:	mov    rcx,rbx
   14000457f:	call   0x1400071e2
   140004584:	mov    rax,rbx
   140004587:	mov    rbx,QWORD PTR [rsp+0x30]
   14000458c:	add    rsp,0x20
   140004590:	pop    rdi
   140004591:	ret    
   140004592:	int3   
   140004593:	int3   
   140004594:	int3   
   140004595:	int3   
   140004596:	int3   
   140004597:	int3   
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400045a5:	push   rdi
   1400045a6:	sub    rsp,0x20
   1400045aa:	lea    rax,[rip+0x555f]        # 0x140009b10
   1400045b1:	mov    edi,edx
   1400045b3:	mov    rbx,rcx
   1400045b6:	mov    QWORD PTR [rcx],rax
   1400045b9:	cmp    QWORD PTR [rcx+0x40],0x10
   1400045be:	jb     0x1400045c9
   1400045c0:	mov    rcx,QWORD PTR [rcx+0x28]
   1400045c4:	call   0x1400071e2
   1400045c9:	mov    QWORD PTR [rbx+0x40],0xf
   1400045d1:	mov    QWORD PTR [rbx+0x38],0x0
   1400045d9:	mov    rcx,rbx
   1400045dc:	mov    BYTE PTR [rbx+0x28],0x0
   1400045e0:	call   QWORD PTR [rip+0x4b02]        # 0x1400090e8
   1400045e6:	test   dil,0x1
   1400045ea:	je     0x1400045f4
   1400045ec:	mov    rcx,rbx
   1400045ef:	call   0x1400071e2
   1400045f4:	mov    rax,rbx
   1400045f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045fc:	add    rsp,0x20
   140004600:	pop    rdi
   140004601:	ret    
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	mov    QWORD PTR [rsp+0x8],rbx
   140004615:	push   rdi
   140004616:	sub    rsp,0x20
   14000461a:	lea    rax,[rip+0x54ef]        # 0x140009b10
   140004621:	mov    edi,edx
   140004623:	mov    rbx,rcx
   140004626:	mov    QWORD PTR [rcx],rax
   140004629:	cmp    QWORD PTR [rcx+0x40],0x10
   14000462e:	jb     0x140004639
   140004630:	mov    rcx,QWORD PTR [rcx+0x28]
   140004634:	call   0x1400071e2
   140004639:	mov    QWORD PTR [rbx+0x40],0xf
   140004641:	mov    QWORD PTR [rbx+0x38],0x0
   140004649:	mov    rcx,rbx
   14000464c:	mov    BYTE PTR [rbx+0x28],0x0
   140004650:	call   QWORD PTR [rip+0x4a92]        # 0x1400090e8
   140004656:	test   dil,0x1
   14000465a:	je     0x140004664
   14000465c:	mov    rcx,rbx
   14000465f:	call   0x1400071e2
   140004664:	mov    rax,rbx
   140004667:	mov    rbx,QWORD PTR [rsp+0x30]
   14000466c:	add    rsp,0x20
   140004670:	pop    rdi
   140004671:	ret    
   140004672:	int3   
   140004673:	int3   
   140004674:	int3   
   140004675:	int3   
   140004676:	int3   
   140004677:	int3   
   140004678:	int3   
   140004679:	int3   
   14000467a:	int3   
   14000467b:	int3   
   14000467c:	int3   
   14000467d:	int3   
   14000467e:	int3   
   14000467f:	int3   
   140004680:	mov    QWORD PTR [rsp+0x8],rbx
   140004685:	push   rdi
   140004686:	sub    rsp,0x20
   14000468a:	cmp    QWORD PTR [rdx+0x18],0x10
   14000468f:	mov    rbx,rdx
   140004692:	mov    rdi,rcx
   140004695:	jae    0x1400046a8
   140004697:	mov    r8,QWORD PTR [rdx+0x10]
   14000469b:	inc    r8
   14000469e:	je     0x1400046ba
   1400046a0:	call   QWORD PTR [rip+0x4a22]        # 0x1400090c8
   1400046a6:	jmp    0x1400046ba
   1400046a8:	test   rcx,rcx
   1400046ab:	je     0x1400046b3
   1400046ad:	mov    rax,QWORD PTR [rdx]
   1400046b0:	mov    QWORD PTR [rcx],rax
   1400046b3:	mov    QWORD PTR [rdx],0x0
   1400046ba:	mov    rax,QWORD PTR [rbx+0x10]
   1400046be:	mov    QWORD PTR [rdi+0x10],rax
   1400046c2:	mov    rax,QWORD PTR [rbx+0x18]
   1400046c6:	mov    QWORD PTR [rdi+0x18],rax
   1400046ca:	mov    QWORD PTR [rbx+0x18],0xf
   1400046d2:	mov    QWORD PTR [rbx+0x10],0x0
   1400046da:	mov    BYTE PTR [rbx],0x0
   1400046dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046e2:	add    rsp,0x20
   1400046e6:	pop    rdi
   1400046e7:	ret    
   1400046e8:	int3   
   1400046e9:	int3   
   1400046ea:	int3   
   1400046eb:	int3   
   1400046ec:	int3   
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	mov    QWORD PTR [rsp+0x18],r8
   1400046f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400046fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400046ff:	push   rbx
   140004700:	push   rsi
   140004701:	push   rdi
   140004702:	push   r14
   140004704:	sub    rsp,0x38
   140004708:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004711:	mov    rsi,r8
   140004714:	mov    rbx,rcx
   140004717:	mov    rdi,rdx
   14000471a:	or     rdi,0xf
   14000471e:	cmp    rdi,0xfffffffffffffffe
   140004722:	jbe    0x140004729
   140004724:	mov    rdi,rdx
   140004727:	jmp    0x14000475e
   140004729:	mov    r8,QWORD PTR [rcx+0x18]
   14000472d:	mov    rcx,r8
   140004730:	shr    rcx,1
   140004733:	movabs rax,0xaaaaaaaaaaaaaaab
   14000473d:	mul    rdi
   140004740:	shr    rdx,1
   140004743:	cmp    rcx,rdx
   140004746:	jbe    0x14000475e
   140004748:	mov    rdi,0xfffffffffffffffe
   14000474f:	mov    rax,rdi
   140004752:	sub    rax,rcx
   140004755:	cmp    r8,rax
   140004758:	ja     0x14000475e
   14000475a:	lea    rdi,[rcx+r8*1]
   14000475e:	lea    rcx,[rdi+0x1]
   140004762:	xor    r14d,r14d
   140004765:	test   rcx,rcx
   140004768:	je     0x140004784
   14000476a:	cmp    rcx,0xffffffffffffffff
   14000476e:	ja     0x14000477d
   140004770:	call   0x1400071dc
   140004775:	mov    r14,rax
   140004778:	test   rax,rax
   14000477b:	jne    0x140004784
   14000477d:	call   QWORD PTR [rip+0x48ed]        # 0x140009070
   140004783:	nop
   140004784:	jmp    0x14000479a
   140004786:	mov    rbx,QWORD PTR [rsp+0x60]
   14000478b:	mov    rsi,QWORD PTR [rsp+0x70]
   140004790:	mov    rdi,QWORD PTR [rsp+0x68]
   140004795:	mov    r14,QWORD PTR [rsp+0x78]
   14000479a:	test   rsi,rsi
   14000479d:	je     0x1400047be
   14000479f:	cmp    QWORD PTR [rbx+0x18],0x10
   1400047a4:	jb     0x1400047ab
   1400047a6:	mov    rdx,QWORD PTR [rbx]
   1400047a9:	jmp    0x1400047ae
   1400047ab:	mov    rdx,rbx
   1400047ae:	test   rsi,rsi
   1400047b1:	je     0x1400047be
   1400047b3:	mov    r8,rsi
   1400047b6:	mov    rcx,r14
   1400047b9:	call   0x14000733c
   1400047be:	cmp    QWORD PTR [rbx+0x18],0x10
   1400047c3:	jb     0x1400047cd
   1400047c5:	mov    rcx,QWORD PTR [rbx]
   1400047c8:	call   0x1400071e2
   1400047cd:	mov    BYTE PTR [rbx],0x0
   1400047d0:	mov    QWORD PTR [rbx],r14
   1400047d3:	mov    QWORD PTR [rbx+0x18],rdi
   1400047d7:	mov    QWORD PTR [rbx+0x10],rsi
   1400047db:	cmp    rdi,0x10
   1400047df:	jb     0x1400047e4
   1400047e1:	mov    rbx,r14
   1400047e4:	mov    BYTE PTR [rbx+rsi*1],0x0
   1400047e8:	add    rsp,0x38
   1400047ec:	pop    r14
   1400047ee:	pop    rdi
   1400047ef:	pop    rsi
   1400047f0:	pop    rbx
   1400047f1:	ret    
   1400047f2:	int3   
   1400047f3:	int3   
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	int3   
   1400047f9:	int3   
   1400047fa:	int3   
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	mov    QWORD PTR [rsp+0x18],r8
   140004805:	mov    QWORD PTR [rsp+0x10],rdx
   14000480a:	mov    QWORD PTR [rsp+0x8],rcx
   14000480f:	push   rbx
   140004810:	push   rsi
   140004811:	push   rdi
   140004812:	push   r14
   140004814:	push   r15
   140004816:	sub    rsp,0x30
   14000481a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004823:	mov    rsi,r8
   140004826:	mov    rbx,rcx
   140004829:	mov    rdi,rdx
   14000482c:	or     rdi,0x7
   140004830:	movabs r9,0x7ffffffffffffffe
   14000483a:	cmp    rdi,r9
   14000483d:	jbe    0x140004844
   14000483f:	mov    rdi,rdx
   140004842:	jmp    0x140004875
   140004844:	mov    r8,QWORD PTR [rcx+0x18]
   140004848:	mov    rcx,r8
   14000484b:	shr    rcx,1
   14000484e:	movabs rax,0xaaaaaaaaaaaaaaab
   140004858:	mul    rdi
   14000485b:	shr    rdx,1
   14000485e:	cmp    rcx,rdx
   140004861:	jbe    0x140004875
   140004863:	mov    rax,r9
   140004866:	sub    rax,rcx
   140004869:	cmp    r8,rax
   14000486c:	lea    rdi,[rcx+r8*1]
   140004870:	jbe    0x140004875
   140004872:	mov    rdi,r9
   140004875:	lea    rcx,[rdi+0x1]
   140004879:	xor    r15d,r15d
   14000487c:	mov    r14d,r15d
   14000487f:	test   rcx,rcx
   140004882:	je     0x1400048aa
   140004884:	movabs rax,0x7fffffffffffffff
   14000488e:	cmp    rcx,rax
   140004891:	ja     0x1400048a3
   140004893:	add    rcx,rcx
   140004896:	call   0x1400071dc
   14000489b:	mov    r14,rax
   14000489e:	test   rax,rax
   1400048a1:	jne    0x1400048aa
   1400048a3:	call   QWORD PTR [rip+0x47c7]        # 0x140009070
   1400048a9:	nop
   1400048aa:	jmp    0x1400048c3
   1400048ac:	xor    r15d,r15d
   1400048af:	mov    rbx,QWORD PTR [rsp+0x60]
   1400048b4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400048b9:	mov    rdi,QWORD PTR [rsp+0x68]
   1400048be:	mov    r14,QWORD PTR [rsp+0x78]
   1400048c3:	test   rsi,rsi
   1400048c6:	je     0x1400048e8
   1400048c8:	cmp    QWORD PTR [rbx+0x18],0x8
   1400048cd:	jb     0x1400048d4
   1400048cf:	mov    rdx,QWORD PTR [rbx]
   1400048d2:	jmp    0x1400048d7
   1400048d4:	mov    rdx,rbx
   1400048d7:	test   rsi,rsi
   1400048da:	je     0x1400048e8
   1400048dc:	lea    r8,[rsi+rsi*1]
   1400048e0:	mov    rcx,r14
   1400048e3:	call   0x14000733c
   1400048e8:	cmp    QWORD PTR [rbx+0x18],0x8
   1400048ed:	jb     0x1400048f7
   1400048ef:	mov    rcx,QWORD PTR [rbx]
   1400048f2:	call   0x1400071e2
   1400048f7:	mov    QWORD PTR [rbx],r14
   1400048fa:	mov    QWORD PTR [rbx+0x18],rdi
   1400048fe:	mov    QWORD PTR [rbx+0x10],rsi
   140004902:	cmp    rdi,0x8
   140004906:	jb     0x14000490b
   140004908:	mov    rbx,r14
   14000490b:	mov    WORD PTR [rbx+rsi*2],r15w
   140004910:	add    rsp,0x30
   140004914:	pop    r15
   140004916:	pop    r14
   140004918:	pop    rdi
   140004919:	pop    rsi
   14000491a:	pop    rbx
   14000491b:	ret    
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	cmp    rdx,r8
   140004923:	je     0x140004976
   140004925:	mov    QWORD PTR [rsp+0x10],rbx
   14000492a:	push   rdi
   14000492b:	sub    rsp,0x20
   14000492f:	mov    QWORD PTR [rsp+0x30],rsi
   140004934:	mov    rdi,r8
   140004937:	mov    rbx,rdx
   14000493a:	xor    esi,esi
   14000493c:	nop    DWORD PTR [rax+0x0]
   140004940:	cmp    QWORD PTR [rbx+0x18],0x10
   140004945:	jb     0x14000494f
   140004947:	mov    rcx,QWORD PTR [rbx]
   14000494a:	call   0x1400071e2
   14000494f:	mov    QWORD PTR [rbx+0x18],0xf
   140004957:	mov    QWORD PTR [rbx+0x10],rsi
   14000495b:	mov    BYTE PTR [rbx],sil
   14000495e:	add    rbx,0x20
   140004962:	cmp    rbx,rdi
   140004965:	jne    0x140004940
   140004967:	mov    rsi,QWORD PTR [rsp+0x30]
   14000496c:	mov    rbx,QWORD PTR [rsp+0x38]
   140004971:	add    rsp,0x20
   140004975:	pop    rdi
   140004976:	ret    
   140004977:	int3   
   140004978:	int3   
   140004979:	int3   
   14000497a:	int3   
   14000497b:	int3   
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	cmp    rdx,r8
   140004983:	je     0x1400049d6
   140004985:	mov    QWORD PTR [rsp+0x10],rbx
   14000498a:	push   rdi
   14000498b:	sub    rsp,0x20
   14000498f:	mov    QWORD PTR [rsp+0x30],rsi
   140004994:	mov    rdi,r8
   140004997:	mov    rbx,rdx
   14000499a:	xor    esi,esi
   14000499c:	nop    DWORD PTR [rax+0x0]
   1400049a0:	cmp    QWORD PTR [rbx+0x18],0x8
   1400049a5:	jb     0x1400049af
   1400049a7:	mov    rcx,QWORD PTR [rbx]
   1400049aa:	call   0x1400071e2
   1400049af:	mov    QWORD PTR [rbx+0x18],0x7
   1400049b7:	mov    QWORD PTR [rbx+0x10],rsi
   1400049bb:	mov    WORD PTR [rbx],si
   1400049be:	add    rbx,0x20
   1400049c2:	cmp    rbx,rdi
   1400049c5:	jne    0x1400049a0
   1400049c7:	mov    rsi,QWORD PTR [rsp+0x30]
   1400049cc:	mov    rbx,QWORD PTR [rsp+0x38]
   1400049d1:	add    rsp,0x20
   1400049d5:	pop    rdi
   1400049d6:	ret    
   1400049d7:	int3   
   1400049d8:	int3   
   1400049d9:	int3   
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400049e5:	mov    QWORD PTR [rcx+0x10],rdx
   1400049e9:	jb     0x1400049f3
   1400049eb:	mov    rax,QWORD PTR [rcx]
   1400049ee:	mov    BYTE PTR [rax+rdx*1],0x0
   1400049f2:	ret    
   1400049f3:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400049f7:	ret    
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	int3   
   1400049fd:	int3   
   1400049fe:	int3   
   1400049ff:	int3   
   140004a00:	cmp    QWORD PTR [rcx+0x18],0x8
   140004a05:	mov    rax,rcx
   140004a08:	mov    QWORD PTR [rcx+0x10],rdx
   140004a0c:	jb     0x140004a11
   140004a0e:	mov    rax,QWORD PTR [rcx]
   140004a11:	xor    ecx,ecx
   140004a13:	mov    WORD PTR [rax+rdx*2],cx
   140004a17:	ret    
   140004a18:	int3   
   140004a19:	int3   
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	mov    rax,rdx
   140004a23:	ret    
   140004a24:	int3   
   140004a25:	int3   
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	int3   
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	mov    rax,rdx
   140004a33:	ret    
   140004a34:	int3   
   140004a35:	int3   
   140004a36:	int3   
   140004a37:	int3   
   140004a38:	int3   
   140004a39:	int3   
   140004a3a:	int3   
   140004a3b:	int3   
   140004a3c:	int3   
   140004a3d:	int3   
   140004a3e:	int3   
   140004a3f:	int3   
   140004a40:	mov    rax,rdx
   140004a43:	ret    
   140004a44:	int3   
   140004a45:	int3   
   140004a46:	int3   
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    rax,rdx
   140004a53:	ret    
   140004a54:	int3   
   140004a55:	int3   
   140004a56:	int3   
   140004a57:	int3   
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	mov    QWORD PTR [rsp+0x20],rbx
   140004a65:	push   rdi
   140004a66:	sub    rsp,0x20
   140004a6a:	mov    rdi,rdx
   140004a6d:	mov    rbx,rcx
   140004a70:	cmp    rdx,0xfffffffffffffffe
   140004a74:	jbe    0x140004a84
   140004a76:	lea    rcx,[rip+0x512b]        # 0x140009ba8
   140004a7d:	call   QWORD PTR [rip+0x45cd]        # 0x140009050
   140004a83:	int3   
   140004a84:	mov    rax,QWORD PTR [rcx+0x18]
   140004a88:	mov    QWORD PTR [rsp+0x30],rbp
   140004a8d:	xor    ebp,ebp
   140004a8f:	cmp    rax,rdx
   140004a92:	jae    0x140004a9f
   140004a94:	mov    r8,QWORD PTR [rcx+0x10]
   140004a98:	call   0x1400046f0
   140004a9d:	jmp    0x140004b11
   140004a9f:	test   r8b,r8b
   140004aa2:	je     0x140004afc
   140004aa4:	cmp    rdx,0x10
   140004aa8:	jae    0x140004afc
   140004aaa:	mov    QWORD PTR [rsp+0x38],rsi
   140004aaf:	mov    rsi,QWORD PTR [rcx+0x10]
   140004ab3:	cmp    rdx,rsi
   140004ab6:	cmovb  rsi,rdx
   140004aba:	cmp    rax,0x10
   140004abe:	jb     0x140004ae5
   140004ac0:	mov    QWORD PTR [rsp+0x40],r14
   140004ac5:	mov    r14,QWORD PTR [rcx]
   140004ac8:	test   rsi,rsi
   140004acb:	je     0x140004ad8
   140004acd:	mov    r8,rsi
   140004ad0:	mov    rdx,r14
   140004ad3:	call   0x14000733c
   140004ad8:	mov    rcx,r14
   140004adb:	call   0x1400071e2
   140004ae0:	mov    r14,QWORD PTR [rsp+0x40]
   140004ae5:	mov    QWORD PTR [rbx+0x10],rsi
   140004ae9:	mov    QWORD PTR [rbx+0x18],0xf
   140004af1:	mov    BYTE PTR [rsi+rbx*1],bpl
   140004af5:	mov    rsi,QWORD PTR [rsp+0x38]
   140004afa:	jmp    0x140004b11
   140004afc:	test   rdx,rdx
   140004aff:	jne    0x140004b11
   140004b01:	mov    QWORD PTR [rcx+0x10],rbp
   140004b05:	cmp    rax,0x10
   140004b09:	jb     0x140004b0e
   140004b0b:	mov    rbx,QWORD PTR [rcx]
   140004b0e:	mov    BYTE PTR [rbx],bpl
   140004b11:	mov    rbp,QWORD PTR [rsp+0x30]
   140004b16:	mov    rbx,QWORD PTR [rsp+0x48]
   140004b1b:	test   rdi,rdi
   140004b1e:	setne  al
   140004b21:	add    rsp,0x20
   140004b25:	pop    rdi
   140004b26:	ret    
   140004b27:	int3   
   140004b28:	int3   
   140004b29:	int3   
   140004b2a:	int3   
   140004b2b:	int3   
   140004b2c:	int3   
   140004b2d:	int3   
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	mov    QWORD PTR [rsp+0x20],rbx
   140004b35:	push   rdi
   140004b36:	sub    rsp,0x20
   140004b3a:	movabs rax,0x7ffffffffffffffe
   140004b44:	mov    rdi,rdx
   140004b47:	mov    rbx,rcx
   140004b4a:	cmp    rdx,rax
   140004b4d:	jbe    0x140004b5d
   140004b4f:	lea    rcx,[rip+0x5052]        # 0x140009ba8
   140004b56:	call   QWORD PTR [rip+0x44f4]        # 0x140009050
   140004b5c:	int3   
   140004b5d:	mov    rax,QWORD PTR [rcx+0x18]
   140004b61:	mov    QWORD PTR [rsp+0x38],rsi
   140004b66:	xor    esi,esi
   140004b68:	cmp    rax,rdx
   140004b6b:	jae    0x140004b78
   140004b6d:	mov    r8,QWORD PTR [rcx+0x10]
   140004b71:	call   0x140004800
   140004b76:	jmp    0x140004bec
   140004b78:	test   r8b,r8b
   140004b7b:	je     0x140004bd7
   140004b7d:	cmp    rdx,0x8
   140004b81:	jae    0x140004bd7
   140004b83:	mov    QWORD PTR [rsp+0x40],r14
   140004b88:	mov    r14,QWORD PTR [rcx+0x10]
   140004b8c:	cmp    rdx,r14
   140004b8f:	cmovb  r14,rdx
   140004b93:	cmp    rax,0x8
   140004b97:	jb     0x140004bbf
   140004b99:	mov    QWORD PTR [rsp+0x30],rbp
   140004b9e:	mov    rbp,QWORD PTR [rcx]
   140004ba1:	test   r14,r14
   140004ba4:	je     0x140004bb2
   140004ba6:	lea    r8,[r14+r14*1]
   140004baa:	mov    rdx,rbp
   140004bad:	call   0x14000733c
   140004bb2:	mov    rcx,rbp
   140004bb5:	call   0x1400071e2
   140004bba:	mov    rbp,QWORD PTR [rsp+0x30]
   140004bbf:	mov    QWORD PTR [rbx+0x10],r14
   140004bc3:	mov    QWORD PTR [rbx+0x18],0x7
   140004bcb:	mov    WORD PTR [rbx+r14*2],si
   140004bd0:	mov    r14,QWORD PTR [rsp+0x40]
   140004bd5:	jmp    0x140004bec
   140004bd7:	test   rdx,rdx
   140004bda:	jne    0x140004bec
   140004bdc:	mov    QWORD PTR [rcx+0x10],rsi
   140004be0:	cmp    rax,0x8
   140004be4:	jb     0x140004be9
   140004be6:	mov    rbx,QWORD PTR [rcx]
   140004be9:	mov    WORD PTR [rbx],si
   140004bec:	mov    rsi,QWORD PTR [rsp+0x38]
   140004bf1:	mov    rbx,QWORD PTR [rsp+0x48]
   140004bf6:	test   rdi,rdi
   140004bf9:	setne  al
   140004bfc:	add    rsp,0x20
   140004c00:	pop    rdi
   140004c01:	ret    
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	int3   
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    r8,QWORD PTR [rcx+0x10]
   140004c14:	movabs rax,0x7ffffffffffffff
   140004c1e:	sub    r8,QWORD PTR [rcx]
   140004c21:	sar    r8,0x5
   140004c25:	mov    rcx,r8
   140004c28:	shr    rcx,1
   140004c2b:	sub    rax,rcx
   140004c2e:	cmp    rax,r8
   140004c31:	jae    0x140004c41
   140004c33:	xor    r8d,r8d
   140004c36:	cmp    r8,rdx
   140004c39:	cmovb  r8,rdx
   140004c3d:	mov    rax,r8
   140004c40:	ret    
   140004c41:	add    r8,rcx
   140004c44:	cmp    r8,rdx
   140004c47:	cmovb  r8,rdx
   140004c4b:	mov    rax,r8
   140004c4e:	ret    
   140004c4f:	int3   
   140004c50:	test   rdx,rdx
   140004c53:	je     0x140004c8a
   140004c55:	mov    rax,QWORD PTR [rcx+0x18]
   140004c59:	cmp    rax,0x10
   140004c5d:	jb     0x140004c64
   140004c5f:	mov    r8,QWORD PTR [rcx]
   140004c62:	jmp    0x140004c67
   140004c64:	mov    r8,rcx
   140004c67:	cmp    rdx,r8
   140004c6a:	jb     0x140004c8a
   140004c6c:	cmp    rax,0x10
   140004c70:	jb     0x140004c77
   140004c72:	mov    r8,QWORD PTR [rcx]
   140004c75:	jmp    0x140004c7a
   140004c77:	mov    r8,rcx
   140004c7a:	mov    rax,QWORD PTR [rcx+0x10]
   140004c7e:	lea    rcx,[r8+rax*1]
   140004c82:	cmp    rcx,rdx
   140004c85:	jbe    0x140004c8a
   140004c87:	mov    al,0x1
   140004c89:	ret    
   140004c8a:	xor    al,al
   140004c8c:	ret    
   140004c8d:	int3   
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	test   rdx,rdx
   140004c93:	je     0x140004cca
   140004c95:	mov    rax,QWORD PTR [rcx+0x18]
   140004c99:	cmp    rax,0x8
   140004c9d:	jb     0x140004ca4
   140004c9f:	mov    r8,QWORD PTR [rcx]
   140004ca2:	jmp    0x140004ca7
   140004ca4:	mov    r8,rcx
   140004ca7:	cmp    rdx,r8
   140004caa:	jb     0x140004cca
   140004cac:	cmp    rax,0x8
   140004cb0:	jb     0x140004cb7
   140004cb2:	mov    r8,QWORD PTR [rcx]
   140004cb5:	jmp    0x140004cba
   140004cb7:	mov    r8,rcx
   140004cba:	mov    rax,QWORD PTR [rcx+0x10]
   140004cbe:	lea    rcx,[r8+rax*2]
   140004cc2:	cmp    rcx,rdx
   140004cc5:	jbe    0x140004cca
   140004cc7:	mov    al,0x1
   140004cc9:	ret    
   140004cca:	xor    al,al
   140004ccc:	ret    
   140004ccd:	int3   
   140004cce:	int3   
   140004ccf:	int3   
   140004cd0:	cmp    rdx,QWORD PTR [rcx+0x8]
   140004cd4:	jae    0x140004cde
   140004cd6:	cmp    QWORD PTR [rcx],rdx
   140004cd9:	ja     0x140004cde
   140004cdb:	mov    al,0x1
   140004cdd:	ret    
   140004cde:	xor    al,al
   140004ce0:	ret    
   140004ce1:	int3   
   140004ce2:	int3   
   140004ce3:	int3   
   140004ce4:	int3   
   140004ce5:	int3   
   140004ce6:	int3   
   140004ce7:	int3   
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	cmp    QWORD PTR [rcx+0x18],0x10
   140004cf5:	jb     0x140004cfb
   140004cf7:	mov    rax,QWORD PTR [rcx]
   140004cfa:	ret    
   140004cfb:	mov    rax,rcx
   140004cfe:	ret    
   140004cff:	int3   
   140004d00:	cmp    QWORD PTR [rcx+0x18],0x10
   140004d05:	jb     0x140004d0b
   140004d07:	mov    rax,QWORD PTR [rcx]
   140004d0a:	ret    
   140004d0b:	mov    rax,rcx
   140004d0e:	ret    
   140004d0f:	int3   
   140004d10:	cmp    QWORD PTR [rcx+0x18],0x8
   140004d15:	jb     0x140004d1b
   140004d17:	mov    rax,QWORD PTR [rcx]
   140004d1a:	ret    
   140004d1b:	mov    rax,rcx
   140004d1e:	ret    
   140004d1f:	int3   
   140004d20:	cmp    QWORD PTR [rcx+0x18],0x8
   140004d25:	jb     0x140004d2b
   140004d27:	mov    rax,QWORD PTR [rcx]
   140004d2a:	ret    
   140004d2b:	mov    rax,rcx
   140004d2e:	ret    
   140004d2f:	int3   
   140004d30:	ret    0x0
   140004d33:	int3   
   140004d34:	int3   
   140004d35:	int3   
   140004d36:	int3   
   140004d37:	int3   
   140004d38:	int3   
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	int3   
   140004d3d:	int3   
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	rex push rdi
   140004d42:	push   r12
   140004d44:	push   r13
   140004d46:	push   r14
   140004d48:	push   r15
   140004d4a:	sub    rsp,0x40
   140004d4e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140004d57:	mov    QWORD PTR [rsp+0x70],rbx
   140004d5c:	mov    QWORD PTR [rsp+0x88],rsi
   140004d64:	mov    rdi,rdx
   140004d67:	mov    r15,rcx
   140004d6a:	xor    r13d,r13d
   140004d6d:	mov    esi,r13d
   140004d70:	mov    QWORD PTR [rsp+0x80],r13
   140004d78:	test   rdx,rdx
   140004d7b:	je     0x140004daf
   140004d7d:	movabs rax,0x7ffffffffffffff
   140004d87:	cmp    rdx,rax
   140004d8a:	ja     0x140004da8
   140004d8c:	mov    rcx,rdx
   140004d8f:	shl    rcx,0x5
   140004d93:	call   0x1400071dc
   140004d98:	mov    rsi,rax
   140004d9b:	mov    QWORD PTR [rsp+0x80],rax
   140004da3:	test   rax,rax
   140004da6:	jne    0x140004daf
   140004da8:	call   QWORD PTR [rip+0x42c2]        # 0x140009070
   140004dae:	nop
   140004daf:	movzx  eax,BYTE PTR [rsp+0x78]
   140004db4:	mov    BYTE PTR [rsp+0x28],al
   140004db8:	mov    QWORD PTR [rsp+0x20],r13
   140004dbd:	lea    r9,[rsp+0x78]
   140004dc2:	mov    r8,rsi
   140004dc5:	mov    rdx,QWORD PTR [r15+0x8]
   140004dc9:	mov    rcx,QWORD PTR [r15]
   140004dcc:	call   0x1400015a0
   140004dd1:	nop
   140004dd2:	mov    r12,QWORD PTR [r15+0x8]
   140004dd6:	mov    rbx,QWORD PTR [r15]
   140004dd9:	mov    r14,r12
   140004ddc:	sub    r14,rbx
   140004ddf:	test   rbx,rbx
   140004de2:	je     0x140004e1f
   140004de4:	cmp    rbx,r12
   140004de7:	je     0x140004e17
   140004de9:	nop    DWORD PTR [rax+0x0]
   140004df0:	cmp    QWORD PTR [rbx+0x18],0x10
   140004df5:	jb     0x140004dff
   140004df7:	mov    rcx,QWORD PTR [rbx]
   140004dfa:	call   0x1400071e2
   140004dff:	mov    QWORD PTR [rbx+0x18],0xf
   140004e07:	mov    QWORD PTR [rbx+0x10],r13
   140004e0b:	mov    BYTE PTR [rbx],0x0
   140004e0e:	add    rbx,0x20
   140004e12:	cmp    rbx,r12
   140004e15:	jne    0x140004df0
   140004e17:	mov    rcx,QWORD PTR [r15]
   140004e1a:	call   0x1400071e2
   140004e1f:	shl    rdi,0x5
   140004e23:	add    rdi,rsi
   140004e26:	mov    QWORD PTR [r15+0x10],rdi
   140004e2a:	and    r14,0xffffffffffffffe0
   140004e2e:	add    r14,rsi
   140004e31:	mov    QWORD PTR [r15+0x8],r14
   140004e35:	mov    QWORD PTR [r15],rsi
   140004e38:	mov    rbx,QWORD PTR [rsp+0x70]
   140004e3d:	mov    rsi,QWORD PTR [rsp+0x88]
   140004e45:	add    rsp,0x40
   140004e49:	pop    r15
   140004e4b:	pop    r14
   140004e4d:	pop    r13
   140004e4f:	pop    r12
   140004e51:	pop    rdi
   140004e52:	ret    
   140004e53:	int3   
   140004e54:	int3   
   140004e55:	int3   
   140004e56:	int3   
   140004e57:	int3   
   140004e58:	int3   
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	sub    rsp,0x28
   140004e64:	mov    r8,QWORD PTR [rcx+0x8]
   140004e68:	mov    r9,rdx
   140004e6b:	mov    rdx,QWORD PTR [rcx+0x10]
   140004e6f:	mov    rax,rdx
   140004e72:	sub    rax,r8
   140004e75:	sar    rax,0x5
   140004e79:	cmp    rax,r9
   140004e7c:	jae    0x140004ee6
   140004e7e:	sub    r8,QWORD PTR [rcx]
   140004e81:	movabs r10,0x7ffffffffffffff
   140004e8b:	sar    r8,0x5
   140004e8f:	mov    rax,r10
   140004e92:	sub    rax,r8
   140004e95:	cmp    rax,r9
   140004e98:	jae    0x140004ea8
   140004e9a:	lea    rcx,[rip+0x4cef]        # 0x140009b90
   140004ea1:	call   QWORD PTR [rip+0x41a9]        # 0x140009050
   140004ea7:	int3   
   140004ea8:	sub    rdx,QWORD PTR [rcx]
   140004eab:	lea    r11,[r8+r9*1]
   140004eaf:	sar    rdx,0x5
   140004eb3:	mov    rax,rdx
   140004eb6:	shr    rax,1
   140004eb9:	sub    r10,rax
   140004ebc:	cmp    r10,rdx
   140004ebf:	jae    0x140004ed3
   140004ec1:	xor    edx,edx
   140004ec3:	cmp    rdx,r11
   140004ec6:	cmovb  rdx,r11
   140004eca:	add    rsp,0x28
   140004ece:	jmp    0x140004d40
   140004ed3:	add    rdx,rax
   140004ed6:	cmp    rdx,r11
   140004ed9:	cmovb  rdx,r11
   140004edd:	add    rsp,0x28
   140004ee1:	jmp    0x140004d40
   140004ee6:	add    rsp,0x28
   140004eea:	ret    
   140004eeb:	int3   
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	mov    QWORD PTR [rsp+0x10],rbx
   140004ef5:	push   rdi
   140004ef6:	sub    rsp,0x20
   140004efa:	mov    rdi,r8
   140004efd:	mov    rbx,rcx
   140004f00:	test   dl,dl
   140004f02:	je     0x140004f2d
   140004f04:	cmp    QWORD PTR [rcx+0x18],0x10
   140004f09:	jb     0x140004f2d
   140004f0b:	mov    QWORD PTR [rsp+0x30],rsi
   140004f10:	mov    rsi,QWORD PTR [rcx]
   140004f13:	test   r8,r8
   140004f16:	je     0x140004f20
   140004f18:	mov    rdx,rsi
   140004f1b:	call   0x14000733c
   140004f20:	mov    rcx,rsi
   140004f23:	call   0x1400071e2
   140004f28:	mov    rsi,QWORD PTR [rsp+0x30]
   140004f2d:	mov    QWORD PTR [rbx+0x18],0xf
   140004f35:	mov    QWORD PTR [rbx+0x10],rdi
   140004f39:	mov    BYTE PTR [rdi+rbx*1],0x0
   140004f3d:	mov    rbx,QWORD PTR [rsp+0x38]
   140004f42:	add    rsp,0x20
   140004f46:	pop    rdi
   140004f47:	ret    
   140004f48:	int3   
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	mov    QWORD PTR [rsp+0x10],rbx
   140004f55:	push   rdi
   140004f56:	sub    rsp,0x20
   140004f5a:	mov    rdi,r8
   140004f5d:	mov    rbx,rcx
   140004f60:	test   dl,dl
   140004f62:	je     0x140004f90
   140004f64:	cmp    QWORD PTR [rcx+0x18],0x8
   140004f69:	jb     0x140004f90
   140004f6b:	mov    QWORD PTR [rsp+0x30],rsi
   140004f70:	mov    rsi,QWORD PTR [rcx]
   140004f73:	test   r8,r8
   140004f76:	je     0x140004f83
   140004f78:	add    r8,r8
   140004f7b:	mov    rdx,rsi
   140004f7e:	call   0x14000733c
   140004f83:	mov    rcx,rsi
   140004f86:	call   0x1400071e2
   140004f8b:	mov    rsi,QWORD PTR [rsp+0x30]
   140004f90:	mov    QWORD PTR [rbx+0x18],0x7
   140004f98:	mov    QWORD PTR [rbx+0x10],rdi
   140004f9c:	xor    eax,eax
   140004f9e:	mov    WORD PTR [rbx+rdi*2],ax
   140004fa2:	mov    rbx,QWORD PTR [rsp+0x38]
   140004fa7:	add    rsp,0x20
   140004fab:	pop    rdi
   140004fac:	ret    
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	mov    QWORD PTR [rsp+0x18],rbx
   140004fb5:	push   rdi
   140004fb6:	sub    rsp,0x20
   140004fba:	mov    rbx,QWORD PTR [rcx]
   140004fbd:	mov    rdi,rcx
   140004fc0:	test   rbx,rbx
   140004fc3:	je     0x140005024
   140004fc5:	mov    QWORD PTR [rsp+0x30],rbp
   140004fca:	mov    QWORD PTR [rsp+0x38],rsi
   140004fcf:	mov    rsi,QWORD PTR [rcx+0x8]
   140004fd3:	xor    ebp,ebp
   140004fd5:	cmp    rbx,rsi
   140004fd8:	je     0x140005007
   140004fda:	nop    WORD PTR [rax+rax*1+0x0]
   140004fe0:	cmp    QWORD PTR [rbx+0x18],0x10
   140004fe5:	jb     0x140004fef
   140004fe7:	mov    rcx,QWORD PTR [rbx]
   140004fea:	call   0x1400071e2
   140004fef:	mov    QWORD PTR [rbx+0x18],0xf
   140004ff7:	mov    QWORD PTR [rbx+0x10],rbp
   140004ffb:	mov    BYTE PTR [rbx],bpl
   140004ffe:	add    rbx,0x20
   140005002:	cmp    rbx,rsi
   140005005:	jne    0x140004fe0
   140005007:	mov    rcx,QWORD PTR [rdi]
   14000500a:	call   0x1400071e2
   14000500f:	mov    rsi,QWORD PTR [rsp+0x38]
   140005014:	mov    QWORD PTR [rdi],rbp
   140005017:	mov    QWORD PTR [rdi+0x8],rbp
   14000501b:	mov    QWORD PTR [rdi+0x10],rbp
   14000501f:	mov    rbp,QWORD PTR [rsp+0x30]
   140005024:	mov    rbx,QWORD PTR [rsp+0x40]
   140005029:	add    rsp,0x20
   14000502d:	pop    rdi
   14000502e:	ret    
   14000502f:	int3   
   140005030:	mov    QWORD PTR [rsp+0x18],rbx
   140005035:	push   rdi
   140005036:	sub    rsp,0x20
   14000503a:	mov    rbx,QWORD PTR [rcx]
   14000503d:	mov    rdi,rcx
   140005040:	test   rbx,rbx
   140005043:	je     0x1400050a4
   140005045:	mov    QWORD PTR [rsp+0x30],rbp
   14000504a:	mov    QWORD PTR [rsp+0x38],rsi
   14000504f:	mov    rsi,QWORD PTR [rcx+0x8]
   140005053:	xor    ebp,ebp
   140005055:	cmp    rbx,rsi
   140005058:	je     0x140005087
   14000505a:	nop    WORD PTR [rax+rax*1+0x0]
   140005060:	cmp    QWORD PTR [rbx+0x18],0x8
   140005065:	jb     0x14000506f
   140005067:	mov    rcx,QWORD PTR [rbx]
   14000506a:	call   0x1400071e2
   14000506f:	mov    QWORD PTR [rbx+0x18],0x7
   140005077:	mov    QWORD PTR [rbx+0x10],rbp
   14000507b:	mov    WORD PTR [rbx],bp
   14000507e:	add    rbx,0x20
   140005082:	cmp    rbx,rsi
   140005085:	jne    0x140005060
   140005087:	mov    rcx,QWORD PTR [rdi]
   14000508a:	call   0x1400071e2
   14000508f:	mov    rsi,QWORD PTR [rsp+0x38]
   140005094:	mov    QWORD PTR [rdi],rbp
   140005097:	mov    QWORD PTR [rdi+0x8],rbp
   14000509b:	mov    QWORD PTR [rdi+0x10],rbp
   14000509f:	mov    rbp,QWORD PTR [rsp+0x30]
   1400050a4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400050a9:	add    rsp,0x20
   1400050ad:	pop    rdi
   1400050ae:	ret    
   1400050af:	int3   
   1400050b0:	mov    rax,QWORD PTR [rcx+0x10]
   1400050b4:	sub    rax,QWORD PTR [rcx+0x8]
   1400050b8:	sar    rax,0x5
   1400050bc:	ret    
   1400050bd:	int3   
   1400050be:	int3   
   1400050bf:	int3   
   1400050c0:	sub    rsp,0x28
   1400050c4:	lea    rcx,[rip+0x4add]        # 0x140009ba8
   1400050cb:	call   QWORD PTR [rip+0x3f7f]        # 0x140009050
   1400050d1:	int3   
   1400050d2:	int3   
   1400050d3:	int3   
   1400050d4:	int3   
   1400050d5:	int3   
   1400050d6:	int3   
   1400050d7:	int3   
   1400050d8:	int3   
   1400050d9:	int3   
   1400050da:	int3   
   1400050db:	int3   
   1400050dc:	int3   
   1400050dd:	int3   
   1400050de:	int3   
   1400050df:	int3   
   1400050e0:	sub    rsp,0x28
   1400050e4:	lea    rcx,[rip+0x4abd]        # 0x140009ba8
   1400050eb:	call   QWORD PTR [rip+0x3f5f]        # 0x140009050
   1400050f1:	int3   
   1400050f2:	int3   
   1400050f3:	int3   
   1400050f4:	int3   
   1400050f5:	int3   
   1400050f6:	int3   
   1400050f7:	int3   
   1400050f8:	int3   
   1400050f9:	int3   
   1400050fa:	int3   
   1400050fb:	int3   
   1400050fc:	int3   
   1400050fd:	int3   
   1400050fe:	int3   
   1400050ff:	int3   
   140005100:	sub    rsp,0x28
   140005104:	lea    rcx,[rip+0x4a85]        # 0x140009b90
   14000510b:	call   QWORD PTR [rip+0x3f3f]        # 0x140009050
   140005111:	int3   
   140005112:	int3   
   140005113:	int3   
   140005114:	int3   
   140005115:	int3   
   140005116:	int3   
   140005117:	int3   
   140005118:	int3   
   140005119:	int3   
   14000511a:	int3   
   14000511b:	int3   
   14000511c:	int3   
   14000511d:	int3   
   14000511e:	int3   
   14000511f:	int3   
   140005120:	sub    rsp,0x28
   140005124:	lea    rcx,[rip+0x4a8d]        # 0x140009bb8
   14000512b:	call   QWORD PTR [rip+0x3f37]        # 0x140009068
   140005131:	int3   
   140005132:	int3   
   140005133:	int3   
   140005134:	int3   
   140005135:	int3   
   140005136:	int3   
   140005137:	int3   
   140005138:	int3   
   140005139:	int3   
   14000513a:	int3   
   14000513b:	int3   
   14000513c:	int3   
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	sub    rsp,0x28
   140005144:	lea    rcx,[rip+0x4a6d]        # 0x140009bb8
   14000514b:	call   QWORD PTR [rip+0x3f17]        # 0x140009068
   140005151:	int3   
   140005152:	int3   
   140005153:	int3   
   140005154:	int3   
   140005155:	int3   
   140005156:	int3   
   140005157:	int3   
   140005158:	int3   
   140005159:	int3   
   14000515a:	int3   
   14000515b:	int3   
   14000515c:	int3   
   14000515d:	int3   
   14000515e:	int3   
   14000515f:	int3   
   140005160:	mov    rcx,QWORD PTR [rcx]
   140005163:	test   rcx,rcx
   140005166:	je     0x14000516f
   140005168:	mov    rax,QWORD PTR [rcx]
   14000516b:	rex.W jmp QWORD PTR [rax+0x18]
   14000516f:	ret    
   140005170:	lock inc DWORD PTR [rcx+0x8]
   140005174:	ret    
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	mov    QWORD PTR [rsp+0x8],rbx
   140005185:	push   rdi
   140005186:	sub    rsp,0x20
   14000518a:	mov    rdi,rcx
   14000518d:	mov    rcx,QWORD PTR [rcx]
   140005190:	mov    rbx,rdx
   140005193:	test   rcx,rcx
   140005196:	je     0x1400051a9
   140005198:	mov    rax,QWORD PTR [rcx]
   14000519b:	call   QWORD PTR [rax+0x20]
   14000519e:	test   al,al
   1400051a0:	je     0x1400051a9
   1400051a2:	mov    QWORD PTR [rdi],0x0
   1400051a9:	mov    QWORD PTR [rdi],rbx
   1400051ac:	test   rbx,rbx
   1400051af:	je     0x1400051ba
   1400051b1:	mov    rax,QWORD PTR [rbx]
   1400051b4:	mov    rcx,rbx
   1400051b7:	call   QWORD PTR [rax+0x18]
   1400051ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400051bf:	add    rsp,0x20
   1400051c3:	pop    rdi
   1400051c4:	ret    
   1400051c5:	int3   
   1400051c6:	int3   
   1400051c7:	int3   
   1400051c8:	int3   
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	sub    rsp,0x28
   1400051d4:	xor    eax,eax
   1400051d6:	test   rdx,rdx
   1400051d9:	je     0x1400051f5
   1400051db:	cmp    rdx,0xffffffffffffffff
   1400051df:	ja     0x1400051ee
   1400051e1:	mov    rcx,rdx
   1400051e4:	call   0x1400071dc
   1400051e9:	test   rax,rax
   1400051ec:	jne    0x1400051f5
   1400051ee:	call   QWORD PTR [rip+0x3e7c]        # 0x140009070
   1400051f4:	int3   
   1400051f5:	add    rsp,0x28
   1400051f9:	ret    
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	int3   
   1400051fd:	int3   
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	sub    rsp,0x28
   140005204:	xor    eax,eax
   140005206:	test   rdx,rdx
   140005209:	je     0x140005232
   14000520b:	movabs rax,0x7ffffffffffffff
   140005215:	cmp    rdx,rax
   140005218:	ja     0x14000522b
   14000521a:	shl    rdx,0x5
   14000521e:	mov    rcx,rdx
   140005221:	call   0x1400071dc
   140005226:	test   rax,rax
   140005229:	jne    0x140005232
   14000522b:	call   QWORD PTR [rip+0x3e3f]        # 0x140009070
   140005231:	int3   
   140005232:	add    rsp,0x28
   140005236:	ret    
   140005237:	int3   
   140005238:	int3   
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	sub    rsp,0x28
   140005244:	xor    eax,eax
   140005246:	test   rdx,rdx
   140005249:	je     0x14000526f
   14000524b:	movabs rax,0x7fffffffffffffff
   140005255:	cmp    rdx,rax
   140005258:	ja     0x140005268
   14000525a:	lea    rcx,[rdx+rdx*1]
   14000525e:	call   0x1400071dc
   140005263:	test   rax,rax
   140005266:	jne    0x14000526f
   140005268:	call   QWORD PTR [rip+0x3e02]        # 0x140009070
   14000526e:	int3   
   14000526f:	add    rsp,0x28
   140005273:	ret    
   140005274:	int3   
   140005275:	int3   
   140005276:	int3   
   140005277:	int3   
   140005278:	int3   
   140005279:	int3   
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	sub    rsp,0x28
   140005284:	xor    eax,eax
   140005286:	test   rdx,rdx
   140005289:	je     0x1400052a5
   14000528b:	cmp    rdx,0xffffffffffffffff
   14000528f:	ja     0x14000529e
   140005291:	mov    rcx,rdx
   140005294:	call   0x1400071dc
   140005299:	test   rax,rax
   14000529c:	jne    0x1400052a5
   14000529e:	call   QWORD PTR [rip+0x3dcc]        # 0x140009070
   1400052a4:	int3   
   1400052a5:	add    rsp,0x28
   1400052a9:	ret    
   1400052aa:	int3   
   1400052ab:	int3   
   1400052ac:	int3   
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	sub    rsp,0x28
   1400052b4:	xor    eax,eax
   1400052b6:	test   rdx,rdx
   1400052b9:	je     0x1400052e2
   1400052bb:	movabs rax,0x7ffffffffffffff
   1400052c5:	cmp    rdx,rax
   1400052c8:	ja     0x1400052db
   1400052ca:	shl    rdx,0x5
   1400052ce:	mov    rcx,rdx
   1400052d1:	call   0x1400071dc
   1400052d6:	test   rax,rax
   1400052d9:	jne    0x1400052e2
   1400052db:	call   QWORD PTR [rip+0x3d8f]        # 0x140009070
   1400052e1:	int3   
   1400052e2:	add    rsp,0x28
   1400052e6:	ret    
   1400052e7:	int3   
   1400052e8:	int3   
   1400052e9:	int3   
   1400052ea:	int3   
   1400052eb:	int3   
   1400052ec:	int3   
   1400052ed:	int3   
   1400052ee:	int3   
   1400052ef:	int3   
   1400052f0:	sub    rsp,0x28
   1400052f4:	xor    eax,eax
   1400052f6:	test   rdx,rdx
   1400052f9:	je     0x14000531f
   1400052fb:	movabs rax,0x7fffffffffffffff
   140005305:	cmp    rdx,rax
   140005308:	ja     0x140005318
   14000530a:	lea    rcx,[rdx+rdx*1]
   14000530e:	call   0x1400071dc
   140005313:	test   rax,rax
   140005316:	jne    0x14000531f
   140005318:	call   QWORD PTR [rip+0x3d52]        # 0x140009070
   14000531e:	int3   
   14000531f:	add    rsp,0x28
   140005323:	ret    
   140005324:	int3   
   140005325:	int3   
   140005326:	int3   
   140005327:	int3   
   140005328:	int3   
   140005329:	int3   
   14000532a:	int3   
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	or     r9,0xffffffffffffffff
   140005334:	xor    r8d,r8d
   140005337:	jmp    0x140005340
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x10],rbx
   140005345:	mov    QWORD PTR [rsp+0x18],rbp
   14000534a:	mov    QWORD PTR [rsp+0x20],rsi
   14000534f:	push   r14
   140005351:	sub    rsp,0x20
   140005355:	mov    rax,QWORD PTR [rdx+0x10]
   140005359:	mov    rsi,r9
   14000535c:	mov    rbp,r8
   14000535f:	mov    r14,rdx
   140005362:	mov    rbx,rcx
   140005365:	cmp    rax,r8
   140005368:	jae    0x140005378
   14000536a:	lea    rcx,[rip+0x4847]        # 0x140009bb8
   140005371:	call   QWORD PTR [rip+0x3cf1]        # 0x140009068
   140005377:	int3   
   140005378:	sub    rax,r8
   14000537b:	mov    r8,QWORD PTR [rcx+0x10]
   14000537f:	cmp    rax,r9
   140005382:	cmovb  rsi,rax
   140005386:	or     rax,0xffffffffffffffff
   14000538a:	sub    rax,r8
   14000538d:	cmp    rax,rsi
   140005390:	ja     0x1400053a0
   140005392:	lea    rcx,[rip+0x480f]        # 0x140009ba8
   140005399:	call   QWORD PTR [rip+0x3cb1]        # 0x140009050
   14000539f:	int3   
   1400053a0:	mov    QWORD PTR [rsp+0x30],rdi
   1400053a5:	test   rsi,rsi
   1400053a8:	je     0x140005440
   1400053ae:	lea    rdi,[r8+rsi*1]
   1400053b2:	cmp    rdi,0xfffffffffffffffe
   1400053b6:	jbe    0x1400053c6
   1400053b8:	lea    rcx,[rip+0x47e9]        # 0x140009ba8
   1400053bf:	call   QWORD PTR [rip+0x3c8b]        # 0x140009050
   1400053c5:	int3   
   1400053c6:	mov    rax,QWORD PTR [rcx+0x18]
   1400053ca:	cmp    rax,rdi
   1400053cd:	jae    0x1400053f2
   1400053cf:	mov    rdx,rdi
   1400053d2:	call   0x1400046f0
   1400053d7:	test   rdi,rdi
   1400053da:	je     0x140005440
   1400053dc:	cmp    QWORD PTR [r14+0x18],0x10
   1400053e1:	jb     0x1400053e6
   1400053e3:	mov    r14,QWORD PTR [r14]
   1400053e6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400053eb:	jb     0x140005411
   1400053ed:	mov    rcx,QWORD PTR [rbx]
   1400053f0:	jmp    0x140005414
   1400053f2:	test   rdi,rdi
   1400053f5:	jne    0x1400053dc
   1400053f7:	mov    QWORD PTR [rcx+0x10],rdi
   1400053fb:	cmp    rax,0x10
   1400053ff:	jb     0x140005409
   140005401:	mov    rax,QWORD PTR [rcx]
   140005404:	mov    BYTE PTR [rax],dil
   140005407:	jmp    0x140005440
   140005409:	mov    rax,rcx
   14000540c:	mov    BYTE PTR [rcx],0x0
   14000540f:	jmp    0x140005440
   140005411:	mov    rcx,rbx
   140005414:	test   rsi,rsi
   140005417:	je     0x140005429
   140005419:	add    rcx,QWORD PTR [rbx+0x10]
   14000541d:	lea    rdx,[r14+rbp*1]
   140005421:	mov    r8,rsi
   140005424:	call   0x14000733c
   140005429:	cmp    QWORD PTR [rbx+0x18],0x10
   14000542e:	mov    QWORD PTR [rbx+0x10],rdi
   140005432:	jb     0x140005439
   140005434:	mov    rax,QWORD PTR [rbx]
   140005437:	jmp    0x14000543c
   140005439:	mov    rax,rbx
   14000543c:	mov    BYTE PTR [rax+rdi*1],0x0
   140005440:	mov    rdi,QWORD PTR [rsp+0x30]
   140005445:	mov    rbp,QWORD PTR [rsp+0x40]
   14000544a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000544f:	mov    rax,rbx
   140005452:	mov    rbx,QWORD PTR [rsp+0x38]
   140005457:	add    rsp,0x20
   14000545b:	pop    r14
   14000545d:	ret    
   14000545e:	int3   
   14000545f:	int3   
   140005460:	cmp    BYTE PTR [rdx],0x0
   140005463:	jne    0x14000546d
   140005465:	xor    r8d,r8d
   140005468:	jmp    0x140005480
   14000546d:	or     r8,0xffffffffffffffff
   140005471:	inc    r8
   140005474:	cmp    BYTE PTR [rdx+r8*1],0x0
   140005479:	jne    0x140005471
   14000547b:	jmp    0x140005480
   140005480:	mov    QWORD PTR [rsp+0x10],rbx
   140005485:	mov    QWORD PTR [rsp+0x18],rbp
   14000548a:	push   rsi
   14000548b:	sub    rsp,0x20
   14000548f:	mov    rsi,r8
   140005492:	mov    rbp,rdx
   140005495:	mov    rbx,rcx
   140005498:	test   rdx,rdx
   14000549b:	je     0x1400054f7
   14000549d:	mov    r8,QWORD PTR [rcx+0x18]
   1400054a1:	cmp    r8,0x10
   1400054a5:	jb     0x1400054ac
   1400054a7:	mov    rax,QWORD PTR [rcx]
   1400054aa:	jmp    0x1400054af
   1400054ac:	mov    rax,rcx
   1400054af:	cmp    rdx,rax
   1400054b2:	jb     0x1400054f7
   1400054b4:	cmp    r8,0x10
   1400054b8:	jb     0x1400054bd
   1400054ba:	mov    rcx,QWORD PTR [rcx]
   1400054bd:	add    rcx,QWORD PTR [rbx+0x10]
   1400054c1:	cmp    rcx,rdx
   1400054c4:	jbe    0x1400054f7
   1400054c6:	cmp    r8,0x10
   1400054ca:	jb     0x1400054d1
   1400054cc:	mov    rax,QWORD PTR [rbx]
   1400054cf:	jmp    0x1400054d4
   1400054d1:	mov    rax,rbx
   1400054d4:	sub    rbp,rax
   1400054d7:	mov    r9,rsi
   1400054da:	mov    rdx,rbx
   1400054dd:	mov    r8,rbp
   1400054e0:	mov    rcx,rbx
   1400054e3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400054e8:	mov    rbp,QWORD PTR [rsp+0x40]
   1400054ed:	add    rsp,0x20
   1400054f1:	pop    rsi
   1400054f2:	jmp    0x140005340
   1400054f7:	mov    r8,QWORD PTR [rbx+0x10]
   1400054fb:	or     rax,0xffffffffffffffff
   1400054ff:	sub    rax,r8
   140005502:	cmp    rax,rsi
   140005505:	ja     0x140005515
   140005507:	lea    rcx,[rip+0x469a]        # 0x140009ba8
   14000550e:	call   QWORD PTR [rip+0x3b3c]        # 0x140009050
   140005514:	int3   
   140005515:	mov    QWORD PTR [rsp+0x30],rdi
   14000551a:	test   rsi,rsi
   14000551d:	je     0x1400055ad
   140005523:	lea    rdi,[r8+rsi*1]
   140005527:	cmp    rdi,0xfffffffffffffffe
   14000552b:	jbe    0x14000553b
   14000552d:	lea    rcx,[rip+0x4674]        # 0x140009ba8
   140005534:	call   QWORD PTR [rip+0x3b16]        # 0x140009050
   14000553a:	int3   
   14000553b:	mov    rax,QWORD PTR [rbx+0x18]
   14000553f:	cmp    rax,rdi
   140005542:	jae    0x140005560
   140005544:	mov    rdx,rdi
   140005547:	mov    rcx,rbx
   14000554a:	call   0x1400046f0
   14000554f:	test   rdi,rdi
   140005552:	je     0x1400055ad
   140005554:	cmp    QWORD PTR [rbx+0x18],0x10
   140005559:	jb     0x14000557f
   14000555b:	mov    rcx,QWORD PTR [rbx]
   14000555e:	jmp    0x140005582
   140005560:	test   rdi,rdi
   140005563:	jne    0x140005554
   140005565:	mov    QWORD PTR [rbx+0x10],rdi
   140005569:	cmp    rax,0x10
   14000556d:	jb     0x140005577
   14000556f:	mov    rax,QWORD PTR [rbx]
   140005572:	mov    BYTE PTR [rax],dil
   140005575:	jmp    0x1400055ad
   140005577:	mov    rax,rbx
   14000557a:	mov    BYTE PTR [rbx],0x0
   14000557d:	jmp    0x1400055ad
   14000557f:	mov    rcx,rbx
   140005582:	test   rsi,rsi
   140005585:	je     0x140005596
   140005587:	add    rcx,QWORD PTR [rbx+0x10]
   14000558b:	mov    r8,rsi
   14000558e:	mov    rdx,rbp
   140005591:	call   0x14000733c
   140005596:	cmp    QWORD PTR [rbx+0x18],0x10
   14000559b:	mov    QWORD PTR [rbx+0x10],rdi
   14000559f:	jb     0x1400055a6
   1400055a1:	mov    rax,QWORD PTR [rbx]
   1400055a4:	jmp    0x1400055a9
   1400055a6:	mov    rax,rbx
   1400055a9:	mov    BYTE PTR [rax+rdi*1],0x0
   1400055ad:	mov    rdi,QWORD PTR [rsp+0x30]
   1400055b2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400055b7:	mov    rax,rbx
   1400055ba:	mov    rbx,QWORD PTR [rsp+0x38]
   1400055bf:	add    rsp,0x20
   1400055c3:	pop    rsi
   1400055c4:	ret    
   1400055c5:	int3   
   1400055c6:	int3   
   1400055c7:	int3   
   1400055c8:	int3   
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400055d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400055da:	mov    QWORD PTR [rsp+0x18],rsi
   1400055df:	push   rdi
   1400055e0:	sub    rsp,0x20
   1400055e4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400055e8:	mov    rbp,r8
   1400055eb:	mov    rsi,rdx
   1400055ee:	mov    rbx,rcx
   1400055f1:	cmp    rdi,r8
   1400055f4:	jae    0x140005604
   1400055f6:	lea    rcx,[rip+0x45bb]        # 0x140009bb8
   1400055fd:	call   QWORD PTR [rip+0x3a65]        # 0x140009068
   140005603:	int3   
   140005604:	sub    rdi,r8
   140005607:	cmp    r9,rdi
   14000560a:	cmovb  rdi,r9
   14000560e:	cmp    rcx,rdx
   140005611:	jne    0x14000564c
   140005613:	lea    rax,[rdi+r8*1]
   140005617:	cmp    QWORD PTR [rcx+0x10],rax
   14000561b:	jae    0x14000562b
   14000561d:	lea    rcx,[rip+0x4594]        # 0x140009bb8
   140005624:	call   QWORD PTR [rip+0x3a3e]        # 0x140009068
   14000562a:	int3   
   14000562b:	cmp    QWORD PTR [rcx+0x18],0x10
   140005630:	mov    QWORD PTR [rcx+0x10],rax
   140005634:	jb     0x140005639
   140005636:	mov    rcx,QWORD PTR [rcx]
   140005639:	mov    BYTE PTR [rcx+rax*1],0x0
   14000563d:	xor    edx,edx
   14000563f:	mov    rcx,rbx
   140005642:	call   0x1400060f0
   140005647:	jmp    0x1400056da
   14000564c:	cmp    rdi,0xfffffffffffffffe
   140005650:	jbe    0x140005660
   140005652:	lea    rcx,[rip+0x454f]        # 0x140009ba8
   140005659:	call   QWORD PTR [rip+0x39f1]        # 0x140009050
   14000565f:	int3   
   140005660:	mov    rax,QWORD PTR [rcx+0x18]
   140005664:	cmp    rax,rdi
   140005667:	jae    0x140005690
   140005669:	mov    r8,QWORD PTR [rcx+0x10]
   14000566d:	mov    rdx,rdi
   140005670:	call   0x1400046f0
   140005675:	test   rdi,rdi
   140005678:	je     0x1400056da
   14000567a:	cmp    QWORD PTR [rsi+0x18],0x10
   14000567f:	jb     0x140005684
   140005681:	mov    rsi,QWORD PTR [rsi]
   140005684:	cmp    QWORD PTR [rbx+0x18],0x10
   140005689:	jb     0x1400056af
   14000568b:	mov    rcx,QWORD PTR [rbx]
   14000568e:	jmp    0x1400056b2
   140005690:	test   rdi,rdi
   140005693:	jne    0x14000567a
   140005695:	mov    QWORD PTR [rcx+0x10],rdi
   140005699:	cmp    rax,0x10
   14000569d:	jb     0x1400056a7
   14000569f:	mov    rax,QWORD PTR [rcx]
   1400056a2:	mov    BYTE PTR [rax],dil
   1400056a5:	jmp    0x1400056da
   1400056a7:	mov    rax,rcx
   1400056aa:	mov    BYTE PTR [rcx],0x0
   1400056ad:	jmp    0x1400056da
   1400056af:	mov    rcx,rbx
   1400056b2:	test   rdi,rdi
   1400056b5:	je     0x1400056c3
   1400056b7:	lea    rdx,[rsi+rbp*1]
   1400056bb:	mov    r8,rdi
   1400056be:	call   0x14000733c
   1400056c3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400056c8:	mov    QWORD PTR [rbx+0x10],rdi
   1400056cc:	jb     0x1400056d3
   1400056ce:	mov    rax,QWORD PTR [rbx]
   1400056d1:	jmp    0x1400056d6
   1400056d3:	mov    rax,rbx
   1400056d6:	mov    BYTE PTR [rax+rdi*1],0x0
   1400056da:	mov    rbp,QWORD PTR [rsp+0x38]
   1400056df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400056e4:	mov    rax,rbx
   1400056e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056ec:	add    rsp,0x20
   1400056f0:	pop    rdi
   1400056f1:	ret    
   1400056f2:	int3   
   1400056f3:	int3   
   1400056f4:	int3   
   1400056f5:	int3   
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	cmp    BYTE PTR [rdx],0x0
   140005703:	jne    0x14000570d
   140005705:	xor    r8d,r8d
   140005708:	jmp    0x140005720
   14000570d:	or     r8,0xffffffffffffffff
   140005711:	inc    r8
   140005714:	cmp    BYTE PTR [rdx+r8*1],0x0
   140005719:	jne    0x140005711
   14000571b:	jmp    0x140005720
   140005720:	mov    QWORD PTR [rsp+0x8],rbx
   140005725:	mov    QWORD PTR [rsp+0x10],rsi
   14000572a:	push   rdi
   14000572b:	sub    rsp,0x20
   14000572f:	mov    rdi,r8
   140005732:	mov    rsi,rdx
   140005735:	mov    rbx,rcx
   140005738:	test   rdx,rdx
   14000573b:	je     0x140005797
   14000573d:	mov    rdx,QWORD PTR [rcx+0x18]
   140005741:	cmp    rdx,0x10
   140005745:	jb     0x14000574c
   140005747:	mov    rax,QWORD PTR [rcx]
   14000574a:	jmp    0x14000574f
   14000574c:	mov    rax,rcx
   14000574f:	cmp    rsi,rax
   140005752:	jb     0x140005797
   140005754:	cmp    rdx,0x10
   140005758:	jb     0x14000575d
   14000575a:	mov    rcx,QWORD PTR [rcx]
   14000575d:	add    rcx,QWORD PTR [rbx+0x10]
   140005761:	cmp    rcx,rsi
   140005764:	jbe    0x140005797
   140005766:	cmp    rdx,0x10
   14000576a:	jb     0x140005771
   14000576c:	mov    rax,QWORD PTR [rbx]
   14000576f:	jmp    0x140005774
   140005771:	mov    rax,rbx
   140005774:	sub    rsi,rax
   140005777:	mov    r9,r8
   14000577a:	mov    rdx,rbx
   14000577d:	mov    r8,rsi
   140005780:	mov    rcx,rbx
   140005783:	mov    rbx,QWORD PTR [rsp+0x30]
   140005788:	mov    rsi,QWORD PTR [rsp+0x38]
   14000578d:	add    rsp,0x20
   140005791:	pop    rdi
   140005792:	jmp    0x1400055d0
   140005797:	cmp    r8,0xfffffffffffffffe
   14000579b:	jbe    0x1400057ab
   14000579d:	lea    rcx,[rip+0x4404]        # 0x140009ba8
   1400057a4:	call   QWORD PTR [rip+0x38a6]        # 0x140009050
   1400057aa:	int3   
   1400057ab:	mov    rax,QWORD PTR [rbx+0x18]
   1400057af:	cmp    rax,r8
   1400057b2:	jae    0x1400057d4
   1400057b4:	mov    r8,QWORD PTR [rbx+0x10]
   1400057b8:	mov    rdx,rdi
   1400057bb:	mov    rcx,rbx
   1400057be:	call   0x1400046f0
   1400057c3:	test   rdi,rdi
   1400057c6:	je     0x14000583c
   1400057c8:	cmp    QWORD PTR [rbx+0x18],0x10
   1400057cd:	jb     0x140005812
   1400057cf:	mov    rcx,QWORD PTR [rbx]
   1400057d2:	jmp    0x140005815
   1400057d4:	test   r8,r8
   1400057d7:	jne    0x1400057c3
   1400057d9:	mov    QWORD PTR [rbx+0x10],r8
   1400057dd:	cmp    rax,0x10
   1400057e1:	jb     0x1400057fc
   1400057e3:	mov    rax,QWORD PTR [rbx]
   1400057e6:	mov    BYTE PTR [rax],r8b
   1400057e9:	mov    rax,rbx
   1400057ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057f1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400057f6:	add    rsp,0x20
   1400057fa:	pop    rdi
   1400057fb:	ret    
   1400057fc:	mov    rax,rbx
   1400057ff:	mov    BYTE PTR [rbx],0x0
   140005802:	mov    rbx,QWORD PTR [rsp+0x30]
   140005807:	mov    rsi,QWORD PTR [rsp+0x38]
   14000580c:	add    rsp,0x20
   140005810:	pop    rdi
   140005811:	ret    
   140005812:	mov    rcx,rbx
   140005815:	test   rdi,rdi
   140005818:	je     0x140005825
   14000581a:	mov    r8,rdi
   14000581d:	mov    rdx,rsi
   140005820:	call   0x14000733c
   140005825:	cmp    QWORD PTR [rbx+0x18],0x10
   14000582a:	mov    QWORD PTR [rbx+0x10],rdi
   14000582e:	jb     0x140005835
   140005830:	mov    rax,QWORD PTR [rbx]
   140005833:	jmp    0x140005838
   140005835:	mov    rax,rbx
   140005838:	mov    BYTE PTR [rax+rdi*1],0x0
   14000583c:	mov    rsi,QWORD PTR [rsp+0x38]
   140005841:	mov    rax,rbx
   140005844:	mov    rbx,QWORD PTR [rsp+0x30]
   140005849:	add    rsp,0x20
   14000584d:	pop    rdi
   14000584e:	ret    
   14000584f:	int3   
   140005850:	mov    QWORD PTR [rsp+0x8],rbx
   140005855:	mov    QWORD PTR [rsp+0x10],rbp
   14000585a:	mov    QWORD PTR [rsp+0x18],rsi
   14000585f:	push   rdi
   140005860:	sub    rsp,0x20
   140005864:	mov    rdi,QWORD PTR [rdx+0x10]
   140005868:	mov    rbp,r8
   14000586b:	mov    rsi,rdx
   14000586e:	mov    rbx,rcx
   140005871:	cmp    rdi,r8
   140005874:	jae    0x140005884
   140005876:	lea    rcx,[rip+0x433b]        # 0x140009bb8
   14000587d:	call   QWORD PTR [rip+0x37e5]        # 0x140009068
   140005883:	int3   
   140005884:	sub    rdi,r8
   140005887:	cmp    r9,rdi
   14000588a:	cmovb  rdi,r9
   14000588e:	cmp    rcx,rdx
   140005891:	jne    0x1400058d3
   140005893:	lea    rcx,[rdi+r8*1]
   140005897:	cmp    QWORD PTR [rbx+0x10],rcx
   14000589b:	jae    0x1400058ab
   14000589d:	lea    rcx,[rip+0x4314]        # 0x140009bb8
   1400058a4:	call   QWORD PTR [rip+0x37be]        # 0x140009068
   1400058aa:	int3   
   1400058ab:	cmp    QWORD PTR [rbx+0x18],0x8
   1400058b0:	mov    QWORD PTR [rbx+0x10],rcx
   1400058b4:	jb     0x1400058bb
   1400058b6:	mov    rdx,QWORD PTR [rbx]
   1400058b9:	jmp    0x1400058be
   1400058bb:	mov    rdx,rbx
   1400058be:	xor    eax,eax
   1400058c0:	mov    WORD PTR [rdx+rcx*2],ax
   1400058c4:	xor    edx,edx
   1400058c6:	mov    rcx,rbx
   1400058c9:	call   0x140006200
   1400058ce:	jmp    0x140005972
   1400058d3:	movabs rax,0x7ffffffffffffffe
   1400058dd:	cmp    rdi,rax
   1400058e0:	jbe    0x1400058f0
   1400058e2:	lea    rcx,[rip+0x42bf]        # 0x140009ba8
   1400058e9:	call   QWORD PTR [rip+0x3761]        # 0x140009050
   1400058ef:	int3   
   1400058f0:	mov    rcx,QWORD PTR [rcx+0x18]
   1400058f4:	cmp    rcx,rdi
   1400058f7:	jae    0x140005923
   1400058f9:	mov    r8,QWORD PTR [rbx+0x10]
   1400058fd:	mov    rdx,rdi
   140005900:	mov    rcx,rbx
   140005903:	call   0x140004800
   140005908:	test   rdi,rdi
   14000590b:	je     0x140005972
   14000590d:	cmp    QWORD PTR [rsi+0x18],0x8
   140005912:	jb     0x140005917
   140005914:	mov    rsi,QWORD PTR [rsi]
   140005917:	cmp    QWORD PTR [rbx+0x18],0x8
   14000591c:	jb     0x140005944
   14000591e:	mov    rcx,QWORD PTR [rbx]
   140005921:	jmp    0x140005947
   140005923:	test   rdi,rdi
   140005926:	jne    0x14000590d
   140005928:	xor    eax,eax
   14000592a:	mov    QWORD PTR [rbx+0x10],rax
   14000592e:	cmp    rcx,0x8
   140005932:	jb     0x14000593c
   140005934:	mov    rcx,QWORD PTR [rbx]
   140005937:	mov    WORD PTR [rcx],ax
   14000593a:	jmp    0x140005972
   14000593c:	mov    rcx,rbx
   14000593f:	mov    WORD PTR [rbx],ax
   140005942:	jmp    0x140005972
   140005944:	mov    rcx,rbx
   140005947:	test   rdi,rdi
   14000594a:	je     0x140005959
   14000594c:	lea    r8,[rdi+rdi*1]
   140005950:	lea    rdx,[rsi+rbp*2]
   140005954:	call   0x14000733c
   140005959:	cmp    QWORD PTR [rbx+0x18],0x8
   14000595e:	mov    QWORD PTR [rbx+0x10],rdi
   140005962:	jb     0x140005969
   140005964:	mov    rcx,QWORD PTR [rbx]
   140005967:	jmp    0x14000596c
   140005969:	mov    rcx,rbx
   14000596c:	xor    eax,eax
   14000596e:	mov    WORD PTR [rcx+rdi*2],ax
   140005972:	mov    rbp,QWORD PTR [rsp+0x38]
   140005977:	mov    rsi,QWORD PTR [rsp+0x40]
   14000597c:	mov    rax,rbx
   14000597f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005984:	add    rsp,0x20
   140005988:	pop    rdi
   140005989:	ret    
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	cmp    WORD PTR [rdx],0x0
   140005994:	jne    0x14000599e
   140005996:	xor    r8d,r8d
   140005999:	jmp    0x1400059c0
   14000599e:	or     r8,0xffffffffffffffff
   1400059a2:	inc    r8
   1400059a5:	cmp    WORD PTR [rdx+r8*2],0x0
   1400059ab:	jne    0x1400059a2
   1400059ad:	jmp    0x1400059c0
   1400059b2:	int3   
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	int3   
   1400059c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400059c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400059ca:	push   rdi
   1400059cb:	sub    rsp,0x20
   1400059cf:	mov    rdi,r8
   1400059d2:	mov    rsi,rdx
   1400059d5:	mov    rbx,rcx
   1400059d8:	test   rdx,rdx
   1400059db:	je     0x140005a3e
   1400059dd:	mov    rdx,QWORD PTR [rcx+0x18]
   1400059e1:	cmp    rdx,0x8
   1400059e5:	jb     0x1400059ec
   1400059e7:	mov    rax,QWORD PTR [rcx]
   1400059ea:	jmp    0x1400059ef
   1400059ec:	mov    rax,rcx
   1400059ef:	cmp    rsi,rax
   1400059f2:	jb     0x140005a3e
   1400059f4:	cmp    rdx,0x8
   1400059f8:	jb     0x1400059fd
   1400059fa:	mov    rcx,QWORD PTR [rcx]
   1400059fd:	mov    rax,QWORD PTR [rbx+0x10]
   140005a01:	lea    rcx,[rcx+rax*2]
   140005a05:	cmp    rcx,rsi
   140005a08:	jbe    0x140005a3e
   140005a0a:	cmp    rdx,0x8
   140005a0e:	jb     0x140005a15
   140005a10:	mov    rax,QWORD PTR [rbx]
   140005a13:	jmp    0x140005a18
   140005a15:	mov    rax,rbx
   140005a18:	sub    rsi,rax
   140005a1b:	mov    r9,r8
   140005a1e:	mov    rdx,rbx
   140005a21:	sar    rsi,1
   140005a24:	mov    rcx,rbx
   140005a27:	mov    r8,rsi
   140005a2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a2f:	mov    rsi,QWORD PTR [rsp+0x38]
   140005a34:	add    rsp,0x20
   140005a38:	pop    rdi
   140005a39:	jmp    0x140005850
   140005a3e:	movabs rax,0x7ffffffffffffffe
   140005a48:	cmp    r8,rax
   140005a4b:	jbe    0x140005a5b
   140005a4d:	lea    rcx,[rip+0x4154]        # 0x140009ba8
   140005a54:	call   QWORD PTR [rip+0x35f6]        # 0x140009050
   140005a5a:	int3   
   140005a5b:	mov    rcx,QWORD PTR [rbx+0x18]
   140005a5f:	cmp    rcx,r8
   140005a62:	jae    0x140005a84
   140005a64:	mov    r8,QWORD PTR [rbx+0x10]
   140005a68:	mov    rdx,rdi
   140005a6b:	mov    rcx,rbx
   140005a6e:	call   0x140004800
   140005a73:	test   rdi,rdi
   140005a76:	je     0x140005af4
   140005a78:	cmp    QWORD PTR [rbx+0x18],0x8
   140005a7d:	jb     0x140005ac7
   140005a7f:	mov    rcx,QWORD PTR [rbx]
   140005a82:	jmp    0x140005aca
   140005a84:	test   r8,r8
   140005a87:	jne    0x140005a73
   140005a89:	xor    eax,eax
   140005a8b:	mov    QWORD PTR [rbx+0x10],rax
   140005a8f:	cmp    rcx,0x8
   140005a93:	jb     0x140005aae
   140005a95:	mov    rcx,QWORD PTR [rbx]
   140005a98:	mov    WORD PTR [rcx],ax
   140005a9b:	mov    rax,rbx
   140005a9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005aa3:	mov    rsi,QWORD PTR [rsp+0x38]
   140005aa8:	add    rsp,0x20
   140005aac:	pop    rdi
   140005aad:	ret    
   140005aae:	mov    WORD PTR [rbx],ax
   140005ab1:	mov    rcx,rbx
   140005ab4:	mov    rax,rbx
   140005ab7:	mov    rbx,QWORD PTR [rsp+0x30]
   140005abc:	mov    rsi,QWORD PTR [rsp+0x38]
   140005ac1:	add    rsp,0x20
   140005ac5:	pop    rdi
   140005ac6:	ret    
   140005ac7:	mov    rcx,rbx
   140005aca:	test   rdi,rdi
   140005acd:	je     0x140005adb
   140005acf:	lea    r8,[rdi+rdi*1]
   140005ad3:	mov    rdx,rsi
   140005ad6:	call   0x14000733c
   140005adb:	cmp    QWORD PTR [rbx+0x18],0x8
   140005ae0:	mov    QWORD PTR [rbx+0x10],rdi
   140005ae4:	jb     0x140005aeb
   140005ae6:	mov    rcx,QWORD PTR [rbx]
   140005ae9:	jmp    0x140005aee
   140005aeb:	mov    rcx,rbx
   140005aee:	xor    eax,eax
   140005af0:	mov    WORD PTR [rcx+rdi*2],ax
   140005af4:	mov    rsi,QWORD PTR [rsp+0x38]
   140005af9:	mov    rax,rbx
   140005afc:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b01:	add    rsp,0x20
   140005b05:	pop    rdi
   140005b06:	ret    
   140005b07:	int3   
   140005b08:	int3   
   140005b09:	int3   
   140005b0a:	int3   
   140005b0b:	int3   
   140005b0c:	int3   
   140005b0d:	int3   
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	movzx  eax,BYTE PTR [rdx]
   140005b13:	mov    BYTE PTR [rcx],al
   140005b15:	ret    
   140005b16:	int3   
   140005b17:	int3   
   140005b18:	int3   
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	int3   
   140005b1d:	int3   
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	movzx  eax,WORD PTR [rdx]
   140005b23:	mov    WORD PTR [rcx],ax
   140005b26:	ret    
   140005b27:	int3   
   140005b28:	int3   
   140005b29:	int3   
   140005b2a:	int3   
   140005b2b:	int3   
   140005b2c:	int3   
   140005b2d:	int3   
   140005b2e:	int3   
   140005b2f:	int3   
   140005b30:	cmp    QWORD PTR [rcx+0x18],0x10
   140005b35:	jb     0x140005b3b
   140005b37:	mov    rax,QWORD PTR [rcx]
   140005b3a:	ret    
   140005b3b:	mov    rax,rcx
   140005b3e:	ret    
   140005b3f:	int3   
   140005b40:	mov    rax,QWORD PTR [rcx+0x10]
   140005b44:	sub    rax,QWORD PTR [rcx]
   140005b47:	sar    rax,0x5
   140005b4b:	ret    
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	mov    rax,QWORD PTR [rcx+0x8]
   140005b54:	ret    
   140005b55:	int3   
   140005b56:	int3   
   140005b57:	int3   
   140005b58:	int3   
   140005b59:	int3   
   140005b5a:	int3   
   140005b5b:	int3   
   140005b5c:	int3   
   140005b5d:	int3   
   140005b5e:	int3   
   140005b5f:	int3   
   140005b60:	mov    rax,QWORD PTR [rcx+0x8]
   140005b64:	ret    
   140005b65:	int3   
   140005b66:	int3   
   140005b67:	int3   
   140005b68:	movsxd rax,DWORD PTR [rcx-0x4]
   140005b6c:	sub    rcx,rax
   140005b6f:	jmp    0x140005b80
   140005b74:	int3   
   140005b75:	int3   
   140005b76:	int3   
   140005b77:	int3   
   140005b78:	int3   
   140005b79:	int3   
   140005b7a:	int3   
   140005b7b:	int3   
   140005b7c:	int3   
   140005b7d:	int3   
   140005b7e:	int3   
   140005b7f:	int3   
   140005b80:	rex push rbx
   140005b82:	sub    rsp,0x30
   140005b86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005b8f:	mov    rbx,rcx
   140005b92:	mov    ecx,0x88
   140005b97:	call   0x1400071dc
   140005b9c:	mov    QWORD PTR [rsp+0x48],rax
   140005ba1:	test   rax,rax
   140005ba4:	je     0x140005bc1
   140005ba6:	xor    ecx,ecx
   140005ba8:	lea    rdx,[rbx-0x80]
   140005bac:	lea    r9d,[rcx+0x1]
   140005bb0:	movzx  r8d,cl
   140005bb4:	mov    rcx,rax
   140005bb7:	call   0x140002820
   140005bbc:	mov    rdx,rax
   140005bbf:	jmp    0x140005bc3
   140005bc1:	xor    edx,edx
   140005bc3:	test   rdx,rdx
   140005bc6:	jne    0x140005bcc
   140005bc8:	xor    eax,eax
   140005bca:	jmp    0x140005bdb
   140005bcc:	mov    rax,QWORD PTR [rdx+0x70]
   140005bd0:	movsxd rcx,DWORD PTR [rax+0x4]
   140005bd4:	lea    rax,[rdx+0x70]
   140005bd8:	add    rax,rcx
   140005bdb:	add    rsp,0x30
   140005bdf:	pop    rbx
   140005be0:	ret    
   140005be1:	int3   
   140005be2:	int3   
   140005be3:	int3   
   140005be4:	movsxd rax,DWORD PTR [rcx-0x4]
   140005be8:	sub    rcx,rax
   140005beb:	jmp    0x140005bf0
   140005bf0:	rex push rdi
   140005bf2:	sub    rsp,0x30
   140005bf6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005bff:	mov    QWORD PTR [rsp+0x40],rbx
   140005c04:	mov    rbx,rcx
   140005c07:	mov    DWORD PTR [rsp+0x48],0x0
   140005c0f:	mov    ecx,0x58
   140005c14:	call   0x1400071dc
   140005c19:	mov    rdi,rax
   140005c1c:	mov    QWORD PTR [rsp+0x50],rax
   140005c21:	test   rax,rax
   140005c24:	je     0x140005c9a
   140005c26:	lea    rax,[rip+0x4063]        # 0x140009c90
   140005c2d:	mov    QWORD PTR [rdi+0x40],rax
   140005c31:	lea    rax,[rip+0x3e38]        # 0x140009a70
   140005c38:	mov    QWORD PTR [rdi+0x50],rax
   140005c3c:	mov    DWORD PTR [rsp+0x48],0x1
   140005c44:	lea    rdx,[rbx-0x50]
   140005c48:	mov    rcx,rdi
   140005c4b:	call   0x1400030a0
   140005c50:	nop
   140005c51:	lea    rax,[rip+0x3ff8]        # 0x140009c50
   140005c58:	mov    QWORD PTR [rdi],rax
   140005c5b:	lea    rax,[rip+0x3ffe]        # 0x140009c60
   140005c62:	mov    QWORD PTR [rdi+0x28],rax
   140005c66:	mov    rax,QWORD PTR [rdi+0x40]
   140005c6a:	movsxd rcx,DWORD PTR [rax+0x4]
   140005c6e:	lea    rax,[rip+0x4003]        # 0x140009c78
   140005c75:	mov    QWORD PTR [rcx+rdi*1+0x40],rax
   140005c7a:	mov    rax,QWORD PTR [rdi+0x40]
   140005c7e:	movsxd rcx,DWORD PTR [rax+0x4]
   140005c82:	lea    r8d,[rcx-0x10]
   140005c86:	mov    DWORD PTR [rcx+rdi*1+0x3c],r8d
   140005c8b:	lea    rdx,[rbx-0x50]
   140005c8f:	mov    rcx,rdi
   140005c92:	call   0x140005de0
   140005c97:	nop
   140005c98:	jmp    0x140005c9c
   140005c9a:	xor    edi,edi
   140005c9c:	test   rdi,rdi
   140005c9f:	jne    0x140005ca5
   140005ca1:	xor    eax,eax
   140005ca3:	jmp    0x140005cb4
   140005ca5:	mov    rax,QWORD PTR [rdi+0x40]
   140005ca9:	movsxd rcx,DWORD PTR [rax+0x4]
   140005cad:	lea    rax,[rdi+0x40]
   140005cb1:	add    rax,rcx
   140005cb4:	mov    rbx,QWORD PTR [rsp+0x40]
   140005cb9:	add    rsp,0x30
   140005cbd:	pop    rdi
   140005cbe:	ret    
   140005cbf:	int3   
   140005cc0:	movsxd rax,DWORD PTR [rcx-0x4]
   140005cc4:	sub    rcx,rax
   140005cc7:	jmp    0x140005cd0
   140005ccc:	int3   
   140005ccd:	int3   
   140005cce:	int3   
   140005ccf:	int3   
   140005cd0:	rex push rdi
   140005cd2:	sub    rsp,0x30
   140005cd6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005cdf:	mov    QWORD PTR [rsp+0x40],rbx
   140005ce4:	mov    rbx,rcx
   140005ce7:	mov    DWORD PTR [rsp+0x48],0x0
   140005cef:	mov    ecx,0x58
   140005cf4:	call   0x1400071dc
   140005cf9:	mov    rdi,rax
   140005cfc:	mov    QWORD PTR [rsp+0x50],rax
   140005d01:	test   rax,rax
   140005d04:	je     0x140005d7a
   140005d06:	lea    rax,[rip+0x40db]        # 0x140009de8
   140005d0d:	mov    QWORD PTR [rdi+0x40],rax
   140005d11:	lea    rax,[rip+0x3d58]        # 0x140009a70
   140005d18:	mov    QWORD PTR [rdi+0x50],rax
   140005d1c:	mov    DWORD PTR [rsp+0x48],0x1
   140005d24:	lea    rdx,[rbx-0x50]
   140005d28:	mov    rcx,rdi
   140005d2b:	call   0x140003200
   140005d30:	nop
   140005d31:	lea    rax,[rip+0x4070]        # 0x140009da8
   140005d38:	mov    QWORD PTR [rdi],rax
   140005d3b:	lea    rax,[rip+0x4076]        # 0x140009db8
   140005d42:	mov    QWORD PTR [rdi+0x28],rax
   140005d46:	mov    rax,QWORD PTR [rdi+0x40]
   140005d4a:	movsxd rcx,DWORD PTR [rax+0x4]
   140005d4e:	lea    rax,[rip+0x407b]        # 0x140009dd0
   140005d55:	mov    QWORD PTR [rcx+rdi*1+0x40],rax
   140005d5a:	mov    rax,QWORD PTR [rdi+0x40]
   140005d5e:	movsxd rcx,DWORD PTR [rax+0x4]
   140005d62:	lea    r8d,[rcx-0x10]
   140005d66:	mov    DWORD PTR [rcx+rdi*1+0x3c],r8d
   140005d6b:	lea    rdx,[rbx-0x50]
   140005d6f:	mov    rcx,rdi
   140005d72:	call   0x140005de0
   140005d77:	nop
   140005d78:	jmp    0x140005d7c
   140005d7a:	xor    edi,edi
   140005d7c:	test   rdi,rdi
   140005d7f:	jne    0x140005d85
   140005d81:	xor    eax,eax
   140005d83:	jmp    0x140005d94
   140005d85:	mov    rax,QWORD PTR [rdi+0x40]
   140005d89:	movsxd rcx,DWORD PTR [rax+0x4]
   140005d8d:	lea    rax,[rdi+0x40]
   140005d91:	add    rax,rcx
   140005d94:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d99:	add    rsp,0x30
   140005d9d:	pop    rdi
   140005d9e:	ret    
   140005d9f:	int3   
   140005da0:	rex push rbx
   140005da2:	sub    rsp,0x20
   140005da6:	mov    rbx,rcx
   140005da9:	test   r8,r8
   140005dac:	je     0x140005db3
   140005dae:	call   0x14000733c
   140005db3:	mov    rax,rbx
   140005db6:	add    rsp,0x20
   140005dba:	pop    rbx
   140005dbb:	ret    
   140005dbc:	int3   
   140005dbd:	int3   
   140005dbe:	int3   
   140005dbf:	int3   
   140005dc0:	rex push rbx
   140005dc2:	sub    rsp,0x20
   140005dc6:	mov    rbx,rcx
   140005dc9:	test   r8,r8
   140005dcc:	je     0x140005dd6
   140005dce:	add    r8,r8
   140005dd1:	call   0x14000733c
   140005dd6:	mov    rax,rbx
   140005dd9:	add    rsp,0x20
   140005ddd:	pop    rbx
   140005dde:	ret    
   140005ddf:	int3   
   140005de0:	rex push rdi
   140005de2:	sub    rsp,0x30
   140005de6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005def:	mov    QWORD PTR [rsp+0x50],rbx
   140005df4:	mov    QWORD PTR [rsp+0x58],rsi
   140005df9:	mov    rsi,rdx
   140005dfc:	mov    rdi,rcx
   140005dff:	xor    ebx,ebx
   140005e01:	mov    QWORD PTR [rsp+0x40],rbx
   140005e06:	mov    rcx,QWORD PTR [rdx+0x8]
   140005e0a:	test   rcx,rcx
   140005e0d:	je     0x140005e42
   140005e0f:	mov    rax,QWORD PTR [rcx]
   140005e12:	lea    rdx,[rsp+0x48]
   140005e17:	call   QWORD PTR [rax+0x28]
   140005e1a:	nop
   140005e1b:	mov    rbx,QWORD PTR [rax]
   140005e1e:	mov    QWORD PTR [rsp+0x40],rbx
   140005e23:	test   rbx,rbx
   140005e26:	je     0x140005e32
   140005e28:	mov    rax,QWORD PTR [rbx]
   140005e2b:	mov    rcx,rbx
   140005e2e:	call   QWORD PTR [rax+0x18]
   140005e31:	nop
   140005e32:	mov    rcx,QWORD PTR [rsp+0x48]
   140005e37:	test   rcx,rcx
   140005e3a:	je     0x140005e42
   140005e3c:	mov    rax,QWORD PTR [rcx]
   140005e3f:	call   QWORD PTR [rax+0x20]
   140005e42:	mov    rax,QWORD PTR [rsi+0x18]
   140005e46:	mov    QWORD PTR [rdi+0x18],rax
   140005e4a:	mov    eax,DWORD PTR [rsi+0x20]
   140005e4d:	mov    DWORD PTR [rdi+0x20],eax
   140005e50:	mov    rax,QWORD PTR [rsi+0x10]
   140005e54:	mov    QWORD PTR [rdi+0x10],rax
   140005e58:	mov    rcx,QWORD PTR [rdi+0x8]
   140005e5c:	test   rcx,rcx
   140005e5f:	je     0x140005e73
   140005e61:	mov    rax,QWORD PTR [rcx]
   140005e64:	call   QWORD PTR [rax+0x20]
   140005e67:	test   al,al
   140005e69:	je     0x140005e73
   140005e6b:	mov    QWORD PTR [rdi+0x8],0x0
   140005e73:	mov    QWORD PTR [rdi+0x8],rbx
   140005e77:	test   rbx,rbx
   140005e7a:	je     0x140005e86
   140005e7c:	mov    rax,QWORD PTR [rbx]
   140005e7f:	mov    rcx,rbx
   140005e82:	call   QWORD PTR [rax+0x18]
   140005e85:	nop
   140005e86:	test   rbx,rbx
   140005e89:	je     0x140005e94
   140005e8b:	mov    rax,QWORD PTR [rbx]
   140005e8e:	mov    rcx,rbx
   140005e91:	call   QWORD PTR [rax+0x20]
   140005e94:	mov    rbx,QWORD PTR [rsp+0x50]
   140005e99:	mov    rsi,QWORD PTR [rsp+0x58]
   140005e9e:	add    rsp,0x30
   140005ea2:	pop    rdi
   140005ea3:	ret    
   140005ea4:	int3   
   140005ea5:	int3   
   140005ea6:	int3   
   140005ea7:	int3   
   140005ea8:	int3   
   140005ea9:	int3   
   140005eaa:	int3   
   140005eab:	int3   
   140005eac:	int3   
   140005ead:	int3   
   140005eae:	int3   
   140005eaf:	int3   
   140005eb0:	sub    rsp,0x88
   140005eb7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005ec0:	xor    r9d,r9d
   140005ec3:	mov    r8d,edx
   140005ec6:	mov    edx,ecx
   140005ec8:	xor    ecx,ecx
   140005eca:	call   QWORD PTR [rip+0x3170]        # 0x140009040
   140005ed0:	test   rax,rax
   140005ed3:	jne    0x140005f42
   140005ed5:	call   QWORD PTR [rip+0x32fd]        # 0x1400091d8
   140005edb:	mov    DWORD PTR [rsp+0x28],0xb
   140005ee3:	mov    QWORD PTR [rsp+0x30],rax
   140005ee8:	lea    rax,[rip+0x3c61]        # 0x140009b50
   140005eef:	mov    QWORD PTR [rsp+0xa0],rax
   140005ef7:	lea    rdx,[rsp+0xa0]
   140005eff:	lea    rcx,[rsp+0x38]
   140005f04:	call   QWORD PTR [rip+0x31c6]        # 0x1400090d0
   140005f0a:	movups xmm0,XMMWORD PTR [rsp+0x28]
   140005f0f:	movups XMMWORD PTR [rsp+0x50],xmm0
   140005f14:	mov    QWORD PTR [rsp+0x78],0xf
   140005f1d:	mov    QWORD PTR [rsp+0x70],0x0
   140005f26:	mov    BYTE PTR [rsp+0x60],0x0
   140005f2b:	lea    rax,[rip+0x3c0e]        # 0x140009b40
   140005f32:	mov    QWORD PTR [rsp+0x38],rax
   140005f37:	lea    rcx,[rsp+0x38]
   140005f3c:	call   0x1400024c0
   140005f41:	nop
   140005f42:	add    rsp,0x88
   140005f49:	ret    
   140005f4a:	int3   
   140005f4b:	int3   
   140005f4c:	int3   
   140005f4d:	int3   
   140005f4e:	int3   
   140005f4f:	int3   
   140005f50:	mov    rcx,rdx
   140005f53:	jmp    0x1400071e2
   140005f58:	int3   
   140005f59:	int3   
   140005f5a:	int3   
   140005f5b:	int3   
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	mov    rcx,rdx
   140005f63:	jmp    0x1400071e2
   140005f68:	int3   
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	int3   
   140005f6d:	int3   
   140005f6e:	int3   
   140005f6f:	int3   
   140005f70:	mov    rcx,rdx
   140005f73:	jmp    0x1400071e2
   140005f78:	int3   
   140005f79:	int3   
   140005f7a:	int3   
   140005f7b:	int3   
   140005f7c:	int3   
   140005f7d:	int3   
   140005f7e:	int3   
   140005f7f:	int3   
   140005f80:	mov    rcx,rdx
   140005f83:	jmp    0x1400071e2
   140005f88:	int3   
   140005f89:	int3   
   140005f8a:	int3   
   140005f8b:	int3   
   140005f8c:	int3   
   140005f8d:	int3   
   140005f8e:	int3   
   140005f8f:	int3   
   140005f90:	mov    rcx,rdx
   140005f93:	jmp    0x1400071e2
   140005f98:	int3   
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	mov    rcx,rdx
   140005fa3:	jmp    0x1400071e2
   140005fa8:	int3   
   140005fa9:	int3   
   140005faa:	int3   
   140005fab:	int3   
   140005fac:	int3   
   140005fad:	int3   
   140005fae:	int3   
   140005faf:	int3   
   140005fb0:	mov    rcx,rdx
   140005fb3:	jmp    0x1400071e2
   140005fb8:	int3   
   140005fb9:	int3   
   140005fba:	int3   
   140005fbb:	int3   
   140005fbc:	int3   
   140005fbd:	int3   
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	mov    rcx,rdx
   140005fc3:	jmp    0x1400071e2
   140005fc8:	int3   
   140005fc9:	int3   
   140005fca:	int3   
   140005fcb:	int3   
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140005fd5:	push   rdi
   140005fd6:	sub    rsp,0x20
   140005fda:	mov    ecx,r8d
   140005fdd:	mov    edi,r8d
   140005fe0:	mov    rbx,rdx
   140005fe3:	call   QWORD PTR [rip+0x306f]        # 0x140009058
   140005fe9:	mov    DWORD PTR [rbx],edi
   140005feb:	test   rax,rax
   140005fee:	lea    rax,[rip+0x800b]        # 0x14000e000
   140005ff5:	jne    0x140005ffe
   140005ff7:	lea    rax,[rip+0x8012]        # 0x14000e010
   140005ffe:	mov    QWORD PTR [rbx+0x8],rax
   140006002:	mov    rax,rbx
   140006005:	mov    rbx,QWORD PTR [rsp+0x30]
   14000600a:	add    rsp,0x20
   14000600e:	pop    rdi
   14000600f:	ret    
   140006010:	mov    DWORD PTR [rdx],r8d
   140006013:	mov    QWORD PTR [rdx+0x8],rcx
   140006017:	mov    rax,rdx
   14000601a:	ret    
   14000601b:	int3   
   14000601c:	int3   
   14000601d:	int3   
   14000601e:	int3   
   14000601f:	int3   
   140006020:	test   rcx,rcx
   140006023:	je     0x140006030
   140006025:	mov    rax,QWORD PTR [rcx]
   140006028:	mov    edx,0x1
   14000602d:	rex.W jmp QWORD PTR [rax]
   140006030:	ret    
   140006031:	int3   
   140006032:	int3   
   140006033:	int3   
   140006034:	int3   
   140006035:	int3   
   140006036:	int3   
   140006037:	int3   
   140006038:	int3   
   140006039:	int3   
   14000603a:	int3   
   14000603b:	int3   
   14000603c:	int3   
   14000603d:	int3   
   14000603e:	int3   
   14000603f:	int3   
   140006040:	mov    rcx,QWORD PTR [rcx+0x10]
   140006044:	test   rcx,rcx
   140006047:	je     0x140006054
   140006049:	mov    rax,QWORD PTR [rcx]
   14000604c:	mov    edx,0x1
   140006051:	rex.W jmp QWORD PTR [rax]
   140006054:	ret    
   140006055:	int3   
   140006056:	int3   
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	int3   
   14000605d:	int3   
   14000605e:	int3   
   14000605f:	int3   
   140006060:	mov    rcx,QWORD PTR [rcx+0x10]
   140006064:	test   rcx,rcx
   140006067:	je     0x140006074
   140006069:	mov    rax,QWORD PTR [rcx]
   14000606c:	mov    edx,0x1
   140006071:	rex.W jmp QWORD PTR [rax]
   140006074:	ret    
   140006075:	int3   
   140006076:	int3   
   140006077:	int3   
   140006078:	int3   
   140006079:	int3   
   14000607a:	int3   
   14000607b:	int3   
   14000607c:	int3   
   14000607d:	int3   
   14000607e:	int3   
   14000607f:	int3   
   140006080:	xor    eax,eax
   140006082:	cmp    QWORD PTR [rcx+0x10],rax
   140006086:	sete   al
   140006089:	ret    
   14000608a:	int3   
   14000608b:	int3   
   14000608c:	int3   
   14000608d:	int3   
   14000608e:	int3   
   14000608f:	int3   
   140006090:	cmp    rcx,QWORD PTR [rdx+0x8]
   140006094:	jne    0x14000609e
   140006096:	cmp    DWORD PTR [rdx],r8d
   140006099:	jne    0x14000609e
   14000609b:	mov    al,0x1
   14000609d:	ret    
   14000609e:	xor    al,al
   1400060a0:	ret    
   1400060a1:	int3   
   1400060a2:	int3   
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	int3   
   1400060ad:	int3   
   1400060ae:	int3   
   1400060af:	int3   
   1400060b0:	rex push rbx
   1400060b2:	sub    rsp,0x30
   1400060b6:	mov    rax,QWORD PTR [rcx]
   1400060b9:	mov    rbx,r8
   1400060bc:	mov    r8d,edx
   1400060bf:	lea    rdx,[rsp+0x20]
   1400060c4:	call   QWORD PTR [rax+0x18]
   1400060c7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400060cb:	cmp    QWORD PTR [rax+0x8],rcx
   1400060cf:	jne    0x1400060df
   1400060d1:	mov    ecx,DWORD PTR [rbx]
   1400060d3:	cmp    DWORD PTR [rax],ecx
   1400060d5:	jne    0x1400060df
   1400060d7:	mov    al,0x1
   1400060d9:	add    rsp,0x30
   1400060dd:	pop    rbx
   1400060de:	ret    
   1400060df:	xor    al,al
   1400060e1:	add    rsp,0x30
   1400060e5:	pop    rbx
   1400060e6:	ret    
   1400060e7:	int3   
   1400060e8:	int3   
   1400060e9:	int3   
   1400060ea:	int3   
   1400060eb:	int3   
   1400060ec:	int3   
   1400060ed:	int3   
   1400060ee:	int3   
   1400060ef:	int3   
   1400060f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060f5:	push   rdi
   1400060f6:	sub    rsp,0x20
   1400060fa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400060fe:	mov    rbx,rcx
   140006101:	cmp    rdi,rdx
   140006104:	jae    0x140006114
   140006106:	lea    rcx,[rip+0x3aab]        # 0x140009bb8
   14000610d:	call   QWORD PTR [rip+0x2f55]        # 0x140009068
   140006113:	int3   
   140006114:	mov    rax,rdi
   140006117:	sub    rax,rdx
   14000611a:	cmp    rax,r8
   14000611d:	ja     0x140006154
   14000611f:	cmp    QWORD PTR [rcx+0x18],0x10
   140006124:	mov    QWORD PTR [rcx+0x10],rdx
   140006128:	jb     0x14000613f
   14000612a:	mov    rax,QWORD PTR [rcx]
   14000612d:	mov    BYTE PTR [rax+rdx*1],0x0
   140006131:	mov    rax,rbx
   140006134:	mov    rbx,QWORD PTR [rsp+0x30]
   140006139:	add    rsp,0x20
   14000613d:	pop    rdi
   14000613e:	ret    
   14000613f:	mov    rax,rcx
   140006142:	mov    BYTE PTR [rcx+rdx*1],0x0
   140006146:	mov    rax,rbx
   140006149:	mov    rbx,QWORD PTR [rsp+0x30]
   14000614e:	add    rsp,0x20
   140006152:	pop    rdi
   140006153:	ret    
   140006154:	test   r8,r8
   140006157:	je     0x1400061ab
   140006159:	cmp    QWORD PTR [rcx+0x18],0x10
   14000615e:	jb     0x140006165
   140006160:	mov    rax,QWORD PTR [rcx]
   140006163:	jmp    0x140006168
   140006165:	mov    rax,rcx
   140006168:	sub    rdi,r8
   14000616b:	lea    rcx,[rax+rdx*1]
   14000616f:	mov    rax,rdi
   140006172:	sub    rax,rdx
   140006175:	je     0x140006184
   140006177:	lea    rdx,[rcx+r8*1]
   14000617b:	mov    r8,rax
   14000617e:	call   QWORD PTR [rip+0x2f44]        # 0x1400090c8
   140006184:	cmp    QWORD PTR [rbx+0x18],0x10
   140006189:	mov    QWORD PTR [rbx+0x10],rdi
   14000618d:	jb     0x1400061a4
   14000618f:	mov    rax,QWORD PTR [rbx]
   140006192:	mov    BYTE PTR [rax+rdi*1],0x0
   140006196:	mov    rax,rbx
   140006199:	mov    rbx,QWORD PTR [rsp+0x30]
   14000619e:	add    rsp,0x20
   1400061a2:	pop    rdi
   1400061a3:	ret    
   1400061a4:	mov    rax,rbx
   1400061a7:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400061ab:	mov    rax,rbx
   1400061ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061b3:	add    rsp,0x20
   1400061b7:	pop    rdi
   1400061b8:	ret    
   1400061b9:	int3   
   1400061ba:	int3   
   1400061bb:	int3   
   1400061bc:	int3   
   1400061bd:	int3   
   1400061be:	int3   
   1400061bf:	int3   
   1400061c0:	sub    rsp,0x28
   1400061c4:	cmp    QWORD PTR [rcx+0x10],rdx
   1400061c8:	jae    0x1400061d8
   1400061ca:	lea    rcx,[rip+0x39e7]        # 0x140009bb8
   1400061d1:	call   QWORD PTR [rip+0x2e91]        # 0x140009068
   1400061d7:	int3   
   1400061d8:	cmp    QWORD PTR [rcx+0x18],0x10
   1400061dd:	mov    QWORD PTR [rcx+0x10],rdx
   1400061e1:	jb     0x1400061f2
   1400061e3:	mov    rax,QWORD PTR [rcx]
   1400061e6:	mov    BYTE PTR [rax+rdx*1],0x0
   1400061ea:	mov    rax,rcx
   1400061ed:	add    rsp,0x28
   1400061f1:	ret    
   1400061f2:	mov    rax,rcx
   1400061f5:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400061f9:	add    rsp,0x28
   1400061fd:	ret    
   1400061fe:	int3   
   1400061ff:	int3   
   140006200:	mov    QWORD PTR [rsp+0x8],rbx
   140006205:	push   rdi
   140006206:	sub    rsp,0x20
   14000620a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000620e:	mov    r9,r8
   140006211:	mov    rbx,rcx
   140006214:	cmp    rdi,rdx
   140006217:	jae    0x140006227
   140006219:	lea    rcx,[rip+0x3998]        # 0x140009bb8
   140006220:	call   QWORD PTR [rip+0x2e42]        # 0x140009068
   140006226:	int3   
   140006227:	mov    rax,rdi
   14000622a:	sub    rax,rdx
   14000622d:	cmp    rax,r8
   140006230:	ja     0x140006254
   140006232:	cmp    QWORD PTR [rcx+0x18],0x8
   140006237:	mov    QWORD PTR [rcx+0x10],rdx
   14000623b:	jb     0x140006240
   14000623d:	mov    rcx,QWORD PTR [rcx]
   140006240:	xor    eax,eax
   140006242:	mov    WORD PTR [rcx+rdx*2],ax
   140006246:	mov    rax,rbx
   140006249:	mov    rbx,QWORD PTR [rsp+0x30]
   14000624e:	add    rsp,0x20
   140006252:	pop    rdi
   140006253:	ret    
   140006254:	test   r8,r8
   140006257:	je     0x14000629d
   140006259:	cmp    QWORD PTR [rcx+0x18],0x8
   14000625e:	jb     0x140006265
   140006260:	mov    rax,QWORD PTR [rcx]
   140006263:	jmp    0x140006268
   140006265:	mov    rax,rcx
   140006268:	sub    rdi,r8
   14000626b:	lea    rcx,[rax+rdx*2]
   14000626f:	mov    r8,rdi
   140006272:	sub    r8,rdx
   140006275:	je     0x140006284
   140006277:	lea    rdx,[rcx+r9*2]
   14000627b:	add    r8,r8
   14000627e:	call   QWORD PTR [rip+0x2e44]        # 0x1400090c8
   140006284:	cmp    QWORD PTR [rbx+0x18],0x8
   140006289:	mov    QWORD PTR [rbx+0x10],rdi
   14000628d:	jb     0x140006294
   14000628f:	mov    rcx,QWORD PTR [rbx]
   140006292:	jmp    0x140006297
   140006294:	mov    rcx,rbx
   140006297:	xor    eax,eax
   140006299:	mov    WORD PTR [rcx+rdi*2],ax
   14000629d:	mov    rax,rbx
   1400062a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062a5:	add    rsp,0x20
   1400062a9:	pop    rdi
   1400062aa:	ret    
   1400062ab:	int3   
   1400062ac:	int3   
   1400062ad:	int3   
   1400062ae:	int3   
   1400062af:	int3   
   1400062b0:	sub    rsp,0x28
   1400062b4:	cmp    QWORD PTR [rcx+0x10],rdx
   1400062b8:	jae    0x1400062c8
   1400062ba:	lea    rcx,[rip+0x38f7]        # 0x140009bb8
   1400062c1:	call   QWORD PTR [rip+0x2da1]        # 0x140009068
   1400062c7:	int3   
   1400062c8:	cmp    QWORD PTR [rcx+0x18],0x8
   1400062cd:	mov    QWORD PTR [rcx+0x10],rdx
   1400062d1:	jb     0x1400062e6
   1400062d3:	mov    rax,QWORD PTR [rcx]
   1400062d6:	xor    r8d,r8d
   1400062d9:	mov    WORD PTR [rax+rdx*2],r8w
   1400062de:	mov    rax,rcx
   1400062e1:	add    rsp,0x28
   1400062e5:	ret    
   1400062e6:	xor    r8d,r8d
   1400062e9:	mov    rax,rcx
   1400062ec:	mov    WORD PTR [rcx+rdx*2],r8w
   1400062f1:	add    rsp,0x28
   1400062f5:	ret    
   1400062f6:	int3   
   1400062f7:	int3   
   1400062f8:	int3   
   1400062f9:	int3   
   1400062fa:	int3   
   1400062fb:	int3   
   1400062fc:	int3   
   1400062fd:	int3   
   1400062fe:	int3   
   1400062ff:	int3   
   140006300:	lea    rax,[rip+0x7cf9]        # 0x14000e000
   140006307:	ret    
   140006308:	int3   
   140006309:	int3   
   14000630a:	int3   
   14000630b:	int3   
   14000630c:	int3   
   14000630d:	int3   
   14000630e:	int3   
   14000630f:	int3   
   140006310:	mov    rax,QWORD PTR [rcx]
   140006313:	ret    
   140006314:	int3   
   140006315:	int3   
   140006316:	int3   
   140006317:	int3   
   140006318:	int3   
   140006319:	int3   
   14000631a:	int3   
   14000631b:	int3   
   14000631c:	int3   
   14000631d:	int3   
   14000631e:	int3   
   14000631f:	int3   
   140006320:	xor    eax,eax
   140006322:	ret    
   140006323:	int3   
   140006324:	int3   
   140006325:	int3   
   140006326:	int3   
   140006327:	int3   
   140006328:	int3   
   140006329:	int3   
   14000632a:	int3   
   14000632b:	int3   
   14000632c:	int3   
   14000632d:	int3   
   14000632e:	int3   
   14000632f:	int3   
   140006330:	xor    eax,eax
   140006332:	ret    
   140006333:	int3   
   140006334:	int3   
   140006335:	int3   
   140006336:	int3   
   140006337:	int3   
   140006338:	int3   
   140006339:	int3   
   14000633a:	int3   
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	rex push rbx
   140006342:	sub    rsp,0x20
   140006346:	mov    rbx,rcx
   140006349:	mov    rax,QWORD PTR [rcx+0x8]
   14000634d:	test   rax,rax
   140006350:	jne    0x140006380
   140006352:	xor    edx,edx
   140006354:	xor    ecx,ecx
   140006356:	call   0x140005eb0
   14000635b:	mov    rdx,rax
   14000635e:	xor    eax,eax
   140006360:	lock cmpxchg QWORD PTR [rbx+0x8],rdx
   140006366:	mov    rbx,rax
   140006369:	je     0x14000637d
   14000636b:	mov    rcx,rdx
   14000636e:	call   QWORD PTR [rip+0x2cc4]        # 0x140009038
   140006374:	mov    rax,rbx
   140006377:	add    rsp,0x20
   14000637b:	pop    rbx
   14000637c:	ret    
   14000637d:	mov    rax,rdx
   140006380:	add    rsp,0x20
   140006384:	pop    rbx
   140006385:	ret    
   140006386:	int3   
   140006387:	int3   
   140006388:	int3   
   140006389:	int3   
   14000638a:	int3   
   14000638b:	int3   
   14000638c:	int3   
   14000638d:	int3   
   14000638e:	int3   
   14000638f:	int3   
   140006390:	xor    eax,eax
   140006392:	ret    
   140006393:	int3   
   140006394:	int3   
   140006395:	int3   
   140006396:	int3   
   140006397:	int3   
   140006398:	int3   
   140006399:	int3   
   14000639a:	int3   
   14000639b:	int3   
   14000639c:	int3   
   14000639d:	int3   
   14000639e:	int3   
   14000639f:	int3   
   1400063a0:	xor    eax,eax
   1400063a2:	ret    
   1400063a3:	int3   
   1400063a4:	int3   
   1400063a5:	int3   
   1400063a6:	int3   
   1400063a7:	int3   
   1400063a8:	int3   
   1400063a9:	int3   
   1400063aa:	int3   
   1400063ab:	int3   
   1400063ac:	int3   
   1400063ad:	int3   
   1400063ae:	int3   
   1400063af:	int3   
   1400063b0:	lock bts DWORD PTR [rcx],edx
   1400063b4:	setb   al
   1400063b7:	ret    
   1400063b8:	int3   
   1400063b9:	int3   
   1400063ba:	int3   
   1400063bb:	int3   
   1400063bc:	int3   
   1400063bd:	int3   
   1400063be:	int3   
   1400063bf:	int3   
   1400063c0:	mov    rax,QWORD PTR [rcx]
   1400063c3:	ret    
   1400063c4:	int3   
   1400063c5:	int3   
   1400063c6:	int3   
   1400063c7:	int3   
   1400063c8:	int3   
   1400063c9:	int3   
   1400063ca:	int3   
   1400063cb:	int3   
   1400063cc:	int3   
   1400063cd:	int3   
   1400063ce:	int3   
   1400063cf:	int3   
   1400063d0:	cmp    BYTE PTR [rcx],0x0
   1400063d3:	jne    0x1400063d8
   1400063d5:	xor    eax,eax
   1400063d7:	ret    
   1400063d8:	or     rax,0xffffffffffffffff
   1400063dc:	nop    DWORD PTR [rax+0x0]
   1400063e0:	inc    rax
   1400063e3:	cmp    BYTE PTR [rcx+rax*1],0x0
   1400063e7:	jne    0x1400063e0
   1400063e9:	ret    
   1400063ea:	int3   
   1400063eb:	int3   
   1400063ec:	int3   
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	cmp    WORD PTR [rcx],0x0
   1400063f4:	jne    0x1400063f9
   1400063f6:	xor    eax,eax
   1400063f8:	ret    
   1400063f9:	or     rax,0xffffffffffffffff
   1400063fd:	nop    DWORD PTR [rax]
   140006400:	inc    rax
   140006403:	cmp    WORD PTR [rcx+rax*2],0x0
   140006408:	jne    0x140006400
   14000640a:	ret    
   14000640b:	int3   
   14000640c:	int3   
   14000640d:	int3   
   14000640e:	int3   
   14000640f:	int3   
   140006410:	or     rax,0xffffffffffffffff
   140006414:	ret    
   140006415:	int3   
   140006416:	int3   
   140006417:	int3   
   140006418:	int3   
   140006419:	int3   
   14000641a:	int3   
   14000641b:	int3   
   14000641c:	int3   
   14000641d:	int3   
   14000641e:	int3   
   14000641f:	int3   
   140006420:	movabs rax,0x7ffffffffffffff
   14000642a:	ret    
   14000642b:	int3   
   14000642c:	int3   
   14000642d:	int3   
   14000642e:	int3   
   14000642f:	int3   
   140006430:	movabs rax,0x7fffffffffffffff
   14000643a:	ret    
   14000643b:	int3   
   14000643c:	int3   
   14000643d:	int3   
   14000643e:	int3   
   14000643f:	int3   
   140006440:	or     rax,0xffffffffffffffff
   140006444:	ret    
   140006445:	int3   
   140006446:	int3   
   140006447:	int3   
   140006448:	int3   
   140006449:	int3   
   14000644a:	int3   
   14000644b:	int3   
   14000644c:	int3   
   14000644d:	int3   
   14000644e:	int3   
   14000644f:	int3   
   140006450:	movabs rax,0x7ffffffffffffff
   14000645a:	ret    
   14000645b:	int3   
   14000645c:	int3   
   14000645d:	int3   
   14000645e:	int3   
   14000645f:	int3   
   140006460:	movabs rax,0x7fffffffffffffff
   14000646a:	ret    
   14000646b:	int3   
   14000646c:	int3   
   14000646d:	int3   
   14000646e:	int3   
   14000646f:	int3   
   140006470:	or     rax,0xffffffffffffffff
   140006474:	ret    
   140006475:	int3   
   140006476:	int3   
   140006477:	int3   
   140006478:	int3   
   140006479:	int3   
   14000647a:	int3   
   14000647b:	int3   
   14000647c:	int3   
   14000647d:	int3   
   14000647e:	int3   
   14000647f:	int3   
   140006480:	movabs rax,0x7ffffffffffffff
   14000648a:	ret    
   14000648b:	int3   
   14000648c:	int3   
   14000648d:	int3   
   14000648e:	int3   
   14000648f:	int3   
   140006490:	movabs rax,0x7fffffffffffffff
   14000649a:	ret    
   14000649b:	int3   
   14000649c:	int3   
   14000649d:	int3   
   14000649e:	int3   
   14000649f:	int3   
   1400064a0:	mov    rax,0xfffffffffffffffe
   1400064a7:	ret    
   1400064a8:	int3   
   1400064a9:	int3   
   1400064aa:	int3   
   1400064ab:	int3   
   1400064ac:	int3   
   1400064ad:	int3   
   1400064ae:	int3   
   1400064af:	int3   
   1400064b0:	movabs rax,0x7ffffffffffffffe
   1400064ba:	ret    
   1400064bb:	int3   
   1400064bc:	int3   
   1400064bd:	int3   
   1400064be:	int3   
   1400064bf:	int3   
   1400064c0:	movabs rax,0x7ffffffffffffff
   1400064ca:	ret    
   1400064cb:	int3   
   1400064cc:	int3   
   1400064cd:	int3   
   1400064ce:	int3   
   1400064cf:	int3   
   1400064d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400064d5:	push   rdi
   1400064d6:	sub    rsp,0x30
   1400064da:	xor    ebx,ebx
   1400064dc:	mov    ecx,r8d
   1400064df:	mov    rdi,rdx
   1400064e2:	mov    DWORD PTR [rsp+0x20],ebx
   1400064e6:	call   QWORD PTR [rip+0x2b6c]        # 0x140009058
   1400064ec:	mov    QWORD PTR [rdi+0x18],0xf
   1400064f4:	test   rax,rax
   1400064f7:	mov    QWORD PTR [rdi+0x10],rbx
   1400064fb:	lea    rdx,[rip+0x34a6]        # 0x1400099a8
   140006502:	cmovne rdx,rax
   140006506:	mov    BYTE PTR [rdi],bl
   140006508:	cmp    BYTE PTR [rdx],bl
   14000650a:	je     0x140006519
   14000650c:	or     rbx,0xffffffffffffffff
   140006510:	inc    rbx
   140006513:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140006517:	jne    0x140006510
   140006519:	mov    r8,rbx
   14000651c:	mov    rcx,rdi
   14000651f:	call   0x140005720
   140006524:	mov    rbx,QWORD PTR [rsp+0x40]
   140006529:	mov    rax,rdi
   14000652c:	add    rsp,0x30
   140006530:	pop    rdi
   140006531:	ret    
   140006532:	int3   
   140006533:	int3   
   140006534:	int3   
   140006535:	int3   
   140006536:	int3   
   140006537:	int3   
   140006538:	int3   
   140006539:	int3   
   14000653a:	int3   
   14000653b:	int3   
   14000653c:	int3   
   14000653d:	int3   
   14000653e:	int3   
   14000653f:	int3   
   140006540:	rex push rbx
   140006542:	sub    rsp,0x30
   140006546:	xor    eax,eax
   140006548:	mov    rbx,rdx
   14000654b:	mov    DWORD PTR [rsp+0x20],eax
   14000654f:	cmp    r8d,0x1
   140006553:	jne    0x14000657f
   140006555:	mov    QWORD PTR [rdx+0x18],0xf
   14000655d:	mov    QWORD PTR [rdx+0x10],rax
   140006561:	mov    BYTE PTR [rdx],al
   140006563:	lea    rdx,[rip+0x3496]        # 0x140009a00
   14000656a:	lea    r8d,[rax+0x15]
   14000656e:	mov    rcx,rbx
   140006571:	call   0x140005720
   140006576:	mov    rax,rbx
   140006579:	add    rsp,0x30
   14000657d:	pop    rbx
   14000657e:	ret    
   14000657f:	call   0x1400064d0
   140006584:	mov    rax,rbx
   140006587:	add    rsp,0x30
   14000658b:	pop    rbx
   14000658c:	ret    
   14000658d:	int3   
   14000658e:	int3   
   14000658f:	int3   
   140006590:	mov    QWORD PTR [rsp+0x8],rbx
   140006595:	push   rdi
   140006596:	sub    rsp,0x30
   14000659a:	xor    ebx,ebx
   14000659c:	mov    ecx,r8d
   14000659f:	mov    rdi,rdx
   1400065a2:	mov    DWORD PTR [rsp+0x20],ebx
   1400065a6:	call   QWORD PTR [rip+0x2ab4]        # 0x140009060
   1400065ac:	mov    QWORD PTR [rdi+0x18],0xf
   1400065b4:	test   rax,rax
   1400065b7:	mov    QWORD PTR [rdi+0x10],rbx
   1400065bb:	lea    rdx,[rip+0x33e6]        # 0x1400099a8
   1400065c2:	cmovne rdx,rax
   1400065c6:	mov    BYTE PTR [rdi],bl
   1400065c8:	cmp    BYTE PTR [rdx],bl
   1400065ca:	je     0x1400065d9
   1400065cc:	or     rbx,0xffffffffffffffff
   1400065d0:	inc    rbx
   1400065d3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   1400065d7:	jne    0x1400065d0
   1400065d9:	mov    r8,rbx
   1400065dc:	mov    rcx,rdi
   1400065df:	call   0x140005720
   1400065e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400065e9:	mov    rax,rdi
   1400065ec:	add    rsp,0x30
   1400065f0:	pop    rdi
   1400065f1:	ret    
   1400065f2:	int3   
   1400065f3:	int3   
   1400065f4:	int3   
   1400065f5:	int3   
   1400065f6:	int3   
   1400065f7:	int3   
   1400065f8:	int3   
   1400065f9:	int3   
   1400065fa:	int3   
   1400065fb:	int3   
   1400065fc:	int3   
   1400065fd:	int3   
   1400065fe:	int3   
   1400065ff:	int3   
   140006600:	rex push rbx
   140006602:	sub    rsp,0x30
   140006606:	mov    r8d,DWORD PTR [rcx]
   140006609:	mov    rcx,QWORD PTR [rcx+0x8]
   14000660d:	mov    rbx,rdx
   140006610:	mov    rax,QWORD PTR [rcx]
   140006613:	mov    DWORD PTR [rsp+0x20],0x0
   14000661b:	call   QWORD PTR [rax+0x10]
   14000661e:	mov    rax,rbx
   140006621:	add    rsp,0x30
   140006625:	pop    rbx
   140006626:	ret    
   140006627:	int3   
   140006628:	int3   
   140006629:	int3   
   14000662a:	int3   
   14000662b:	int3   
   14000662c:	int3   
   14000662d:	int3   
   14000662e:	int3   
   14000662f:	int3   
   140006630:	test   r8,r8
   140006633:	jne    0x140006639
   140006635:	mov    rax,rcx
   140006638:	ret    
   140006639:	rex.W jmp QWORD PTR [rip+0x2a88]        # 0x1400090c8
   140006640:	test   r8,r8
   140006643:	jne    0x140006649
   140006645:	mov    rax,rcx
   140006648:	ret    
   140006649:	add    r8,r8
   14000664c:	rex.W jmp QWORD PTR [rip+0x2a75]        # 0x1400090c8
   140006653:	int3   
   140006654:	int3   
   140006655:	int3   
   140006656:	int3   
   140006657:	int3   
   140006658:	int3   
   140006659:	int3   
   14000665a:	int3   
   14000665b:	int3   
   14000665c:	int3   
   14000665d:	int3   
   14000665e:	int3   
   14000665f:	int3   
   140006660:	lea    rax,[rip+0x3339]        # 0x1400099a0
   140006667:	ret    
   140006668:	int3   
   140006669:	int3   
   14000666a:	int3   
   14000666b:	int3   
   14000666c:	int3   
   14000666d:	int3   
   14000666e:	int3   
   14000666f:	int3   
   140006670:	lea    rax,[rip+0x3379]        # 0x1400099f0
   140006677:	ret    
   140006678:	int3   
   140006679:	int3   
   14000667a:	int3   
   14000667b:	int3   
   14000667c:	int3   
   14000667d:	int3   
   14000667e:	int3   
   14000667f:	int3   
   140006680:	lea    rax,[rip+0x33c9]        # 0x140009a50
   140006687:	ret    
   140006688:	int3   
   140006689:	int3   
   14000668a:	int3   
   14000668b:	int3   
   14000668c:	int3   
   14000668d:	int3   
   14000668e:	int3   
   14000668f:	int3   
   140006690:	movzx  eax,BYTE PTR [rcx+0x8]
   140006694:	ret    
   140006695:	int3   
   140006696:	int3   
   140006697:	int3   
   140006698:	int3   
   140006699:	int3   
   14000669a:	int3   
   14000669b:	int3   
   14000669c:	int3   
   14000669d:	int3   
   14000669e:	int3   
   14000669f:	int3   
   1400066a0:	rex push rbp
   1400066a2:	push   rsi
   1400066a3:	push   rdi
   1400066a4:	sub    rsp,0x30
   1400066a8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400066b1:	mov    QWORD PTR [rsp+0x60],rbx
   1400066b6:	mov    rbx,rdx
   1400066b9:	mov    rdi,rcx
   1400066bc:	mov    rax,QWORD PTR [rcx+0x8]
   1400066c0:	cmp    rdx,rax
   1400066c3:	jae    0x14000675e
   1400066c9:	mov    rcx,QWORD PTR [rcx]
   1400066cc:	cmp    rcx,rdx
   1400066cf:	ja     0x14000675e
   1400066d5:	sub    rbx,rcx
   1400066d8:	cmp    rax,QWORD PTR [rdi+0x10]
   1400066dc:	jne    0x1400066eb
   1400066de:	mov    edx,0x1
   1400066e3:	mov    rcx,rdi
   1400066e6:	call   0x140004e60
   1400066eb:	and    rbx,0xffffffffffffffe0
   1400066ef:	add    rbx,QWORD PTR [rdi]
   1400066f2:	mov    rsi,QWORD PTR [rdi+0x8]
   1400066f6:	mov    QWORD PTR [rsp+0x50],rsi
   1400066fb:	mov    QWORD PTR [rsp+0x58],rsi
   140006700:	test   rsi,rsi
   140006703:	je     0x14000675c
   140006705:	mov    QWORD PTR [rsi+0x18],0xf
   14000670d:	xor    ebp,ebp
   14000670f:	mov    QWORD PTR [rsi+0x10],rbp
   140006713:	mov    BYTE PTR [rsi],bpl
   140006716:	cmp    QWORD PTR [rbx+0x18],0x10
   14000671b:	jae    0x140006734
   14000671d:	mov    r8,QWORD PTR [rbx+0x10]
   140006721:	inc    r8
   140006724:	je     0x14000673d
   140006726:	mov    rdx,rbx
   140006729:	mov    rcx,rsi
   14000672c:	call   QWORD PTR [rip+0x2996]        # 0x1400090c8
   140006732:	jmp    0x14000673d
   140006734:	mov    rax,QWORD PTR [rbx]
   140006737:	mov    QWORD PTR [rsi],rax
   14000673a:	mov    QWORD PTR [rbx],rbp
   14000673d:	mov    rax,QWORD PTR [rbx+0x10]
   140006741:	mov    QWORD PTR [rsi+0x10],rax
   140006745:	mov    rax,QWORD PTR [rbx+0x18]
   140006749:	mov    QWORD PTR [rsi+0x18],rax
   14000674d:	mov    QWORD PTR [rbx+0x18],0xf
   140006755:	mov    QWORD PTR [rbx+0x10],rbp
   140006759:	mov    BYTE PTR [rbx],bpl
   14000675c:	jmp    0x1400067db
   14000675e:	cmp    rax,QWORD PTR [rdi+0x10]
   140006762:	jne    0x140006771
   140006764:	mov    edx,0x1
   140006769:	mov    rcx,rdi
   14000676c:	call   0x140004e60
   140006771:	mov    rsi,QWORD PTR [rdi+0x8]
   140006775:	mov    QWORD PTR [rsp+0x50],rsi
   14000677a:	mov    QWORD PTR [rsp+0x58],rsi
   14000677f:	test   rsi,rsi
   140006782:	je     0x1400067db
   140006784:	mov    QWORD PTR [rsi+0x18],0xf
   14000678c:	xor    ebp,ebp
   14000678e:	mov    QWORD PTR [rsi+0x10],rbp
   140006792:	mov    BYTE PTR [rsi],bpl
   140006795:	cmp    QWORD PTR [rbx+0x18],0x10
   14000679a:	jae    0x1400067b3
   14000679c:	mov    r8,QWORD PTR [rbx+0x10]
   1400067a0:	inc    r8
   1400067a3:	je     0x1400067bc
   1400067a5:	mov    rdx,rbx
   1400067a8:	mov    rcx,rsi
   1400067ab:	call   QWORD PTR [rip+0x2917]        # 0x1400090c8
   1400067b1:	jmp    0x1400067bc
   1400067b3:	mov    rax,QWORD PTR [rbx]
   1400067b6:	mov    QWORD PTR [rsi],rax
   1400067b9:	mov    QWORD PTR [rbx],rbp
   1400067bc:	mov    rax,QWORD PTR [rbx+0x10]
   1400067c0:	mov    QWORD PTR [rsi+0x10],rax
   1400067c4:	mov    rax,QWORD PTR [rbx+0x18]
   1400067c8:	mov    QWORD PTR [rsi+0x18],rax
   1400067cc:	mov    QWORD PTR [rbx+0x18],0xf
   1400067d4:	mov    QWORD PTR [rbx+0x10],rbp
   1400067d8:	mov    BYTE PTR [rbx],bpl
   1400067db:	add    QWORD PTR [rdi+0x8],0x20
   1400067e0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400067e5:	add    rsp,0x30
   1400067e9:	pop    rdi
   1400067ea:	pop    rsi
   1400067eb:	pop    rbp
   1400067ec:	ret    
   1400067ed:	int3   
   1400067ee:	int3   
   1400067ef:	int3   
   1400067f0:	rex push rbx
   1400067f2:	sub    rsp,0x20
   1400067f6:	mov    rbx,rcx
   1400067f9:	mov    rcx,QWORD PTR [rcx]
   1400067fc:	test   rcx,rcx
   1400067ff:	je     0x140006812
   140006801:	mov    rax,QWORD PTR [rcx]
   140006804:	call   QWORD PTR [rax+0x20]
   140006807:	test   al,al
   140006809:	je     0x140006812
   14000680b:	mov    QWORD PTR [rbx],0x0
   140006812:	add    rsp,0x20
   140006816:	pop    rbx
   140006817:	ret    
   140006818:	int3   
   140006819:	int3   
   14000681a:	int3   
   14000681b:	int3   
   14000681c:	int3   
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	mov    QWORD PTR [rsp+0x8],rbx
   140006825:	push   rdi
   140006826:	sub    rsp,0x20
   14000682a:	lock dec DWORD PTR [rcx+0x8]
   14000682e:	mov    rbx,rcx
   140006831:	jne    0x140006848
   140006833:	mov    rax,QWORD PTR [rcx]
   140006836:	call   QWORD PTR [rax+0x8]
   140006839:	lock dec DWORD PTR [rbx+0xc]
   14000683d:	jne    0x140006848
   14000683f:	mov    rax,QWORD PTR [rbx]
   140006842:	mov    rcx,rbx
   140006845:	call   QWORD PTR [rax+0x10]
   140006848:	mov    rbx,QWORD PTR [rsp+0x30]
   14000684d:	add    rsp,0x20
   140006851:	pop    rdi
   140006852:	ret    
   140006853:	int3   
   140006854:	int3   
   140006855:	int3   
   140006856:	int3   
   140006857:	int3   
   140006858:	int3   
   140006859:	int3   
   14000685a:	int3   
   14000685b:	int3   
   14000685c:	int3   
   14000685d:	int3   
   14000685e:	int3   
   14000685f:	int3   
   140006860:	sub    rsp,0x28
   140006864:	mov    rax,QWORD PTR [rcx+0x10]
   140006868:	sub    rax,QWORD PTR [rcx]
   14000686b:	sar    rax,0x5
   14000686f:	cmp    rax,rdx
   140006872:	jae    0x14000689a
   140006874:	movabs rax,0x7ffffffffffffff
   14000687e:	cmp    rdx,rax
   140006881:	jbe    0x140006891
   140006883:	lea    rcx,[rip+0x3306]        # 0x140009b90
   14000688a:	call   QWORD PTR [rip+0x27c0]        # 0x140009050
   140006890:	int3   
   140006891:	add    rsp,0x28
   140006895:	jmp    0x140004d40
   14000689a:	add    rsp,0x28
   14000689e:	ret    
   14000689f:	int3   
   1400068a0:	movsxd rax,DWORD PTR [rcx-0x4]
   1400068a4:	sub    rcx,rax
   1400068a7:	jmp    0x1400068b0
   1400068ac:	int3   
   1400068ad:	int3   
   1400068ae:	int3   
   1400068af:	int3   
   1400068b0:	rex push rbp
   1400068b2:	lea    rbp,[rsp-0x57]
   1400068b7:	sub    rsp,0xb0
   1400068be:	mov    QWORD PTR [rbp+0x4f],0xfffffffffffffffe
   1400068c6:	mov    QWORD PTR [rsp+0xc8],rbx
   1400068ce:	mov    DWORD PTR [rbp+0x67],0x0
   1400068d5:	lea    rbx,[rcx-0x80]
   1400068d9:	lea    rax,[rip+0x3360]        # 0x140009c40
   1400068e0:	mov    QWORD PTR [rbp+0x37],rax
   1400068e4:	lea    rax,[rip+0x3185]        # 0x140009a70
   1400068eb:	mov    QWORD PTR [rbp+0x47],rax
   1400068ef:	mov    DWORD PTR [rbp+0x67],0x1
   1400068f6:	mov    rdx,rbx
   1400068f9:	lea    rcx,[rbp-0x39]
   1400068fd:	call   QWORD PTR [rip+0x27dd]        # 0x1400090e0
   140006903:	nop
   140006904:	lea    rax,[rip+0x3205]        # 0x140009b10
   14000690b:	mov    QWORD PTR [rbp-0x39],rax
   14000690f:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140006913:	movups XMMWORD PTR [rbp-0x21],xmm0
   140006917:	mov    QWORD PTR [rbp+0x7],0xf
   14000691f:	mov    QWORD PTR [rbp-0x1],0x0
   140006927:	mov    BYTE PTR [rbp-0x11],0x0
   14000692b:	lea    rdx,[rbx+0x28]
   14000692f:	or     r9,0xffffffffffffffff
   140006933:	xor    r8d,r8d
   140006936:	lea    rcx,[rbp-0x11]
   14000693a:	call   0x1400055d0
   14000693f:	nop
   140006940:	lea    rax,[rip+0x31f9]        # 0x140009b40
   140006947:	mov    QWORD PTR [rbp-0x39],rax
   14000694b:	lea    rax,[rip+0x310e]        # 0x140009a60
   140006952:	mov    QWORD PTR [rbp+0xf],rax
   140006956:	mov    rcx,QWORD PTR [rbx+0x50]
   14000695a:	mov    QWORD PTR [rbp+0x17],rcx
   14000695e:	test   rcx,rcx
   140006961:	je     0x140006969
   140006963:	mov    rax,QWORD PTR [rcx]
   140006966:	call   QWORD PTR [rax+0x18]
   140006969:	mov    rax,QWORD PTR [rbx+0x58]
   14000696d:	mov    QWORD PTR [rbp+0x1f],rax
   140006971:	mov    rax,QWORD PTR [rbx+0x60]
   140006975:	mov    QWORD PTR [rbp+0x27],rax
   140006979:	mov    eax,DWORD PTR [rbx+0x68]
   14000697c:	mov    DWORD PTR [rbp+0x2f],eax
   14000697f:	lea    rax,[rip+0x327a]        # 0x140009c00
   140006986:	mov    QWORD PTR [rbp-0x39],rax
   14000698a:	lea    rax,[rip+0x3287]        # 0x140009c18
   140006991:	mov    QWORD PTR [rbp+0xf],rax
   140006995:	mov    rax,QWORD PTR [rbp+0x37]
   140006999:	movsxd rcx,DWORD PTR [rax+0x4]
   14000699d:	lea    rax,[rip+0x3284]        # 0x140009c28
   1400069a4:	mov    QWORD PTR [rbp+rcx*1+0x37],rax
   1400069a9:	mov    rax,QWORD PTR [rbp+0x37]
   1400069ad:	movsxd rcx,DWORD PTR [rax+0x4]
   1400069b1:	mov    DWORD PTR [rbp+rcx*1+0x33],0x0
   1400069b9:	lea    rdx,[rip+0x5ff8]        # 0x14000c9b8
   1400069c0:	lea    rcx,[rbp-0x39]
   1400069c4:	call   0x140007330
   1400069c9:	int3   
   1400069ca:	int3   
   1400069cb:	int3   
   1400069cc:	movsxd rax,DWORD PTR [rcx-0x4]
   1400069d0:	sub    rcx,rax
   1400069d3:	jmp    0x1400069e0
   1400069d8:	int3   
   1400069d9:	int3   
   1400069da:	int3   
   1400069db:	int3   
   1400069dc:	int3   
   1400069dd:	int3   
   1400069de:	int3   
   1400069df:	int3   
   1400069e0:	mov    r11,rsp
   1400069e3:	push   rbx
   1400069e4:	sub    rsp,0x80
   1400069eb:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   1400069f3:	mov    rbx,rcx
   1400069f6:	mov    DWORD PTR [r11+0x8],0x0
   1400069fe:	lea    rax,[rip+0x328b]        # 0x140009c90
   140006a05:	mov    QWORD PTR [r11-0x20],rax
   140006a09:	lea    rax,[rip+0x3060]        # 0x140009a70
   140006a10:	mov    QWORD PTR [r11-0x10],rax
   140006a14:	mov    DWORD PTR [r11+0x8],0x1
   140006a1c:	lea    rax,[rip+0x303d]        # 0x140009a60
   140006a23:	mov    QWORD PTR [r11-0x60],rax
   140006a27:	mov    rcx,QWORD PTR [rcx-0x48]
   140006a2b:	mov    QWORD PTR [r11-0x58],rcx
   140006a2f:	test   rcx,rcx
   140006a32:	je     0x140006a3a
   140006a34:	mov    rax,QWORD PTR [rcx]
   140006a37:	call   QWORD PTR [rax+0x18]
   140006a3a:	mov    rax,QWORD PTR [rbx-0x40]
   140006a3e:	mov    QWORD PTR [rsp+0x38],rax
   140006a43:	mov    rax,QWORD PTR [rbx-0x38]
   140006a47:	mov    QWORD PTR [rsp+0x40],rax
   140006a4c:	mov    eax,DWORD PTR [rbx-0x30]
   140006a4f:	mov    DWORD PTR [rsp+0x48],eax
   140006a53:	lea    rdx,[rbx-0x28]
   140006a57:	lea    rcx,[rsp+0x50]
   140006a5c:	call   QWORD PTR [rip+0x267e]        # 0x1400090e0
   140006a62:	nop
   140006a63:	lea    rax,[rip+0x31e6]        # 0x140009c50
   140006a6a:	mov    QWORD PTR [rsp+0x28],rax
   140006a6f:	lea    rax,[rip+0x31ea]        # 0x140009c60
   140006a76:	mov    QWORD PTR [rsp+0x50],rax
   140006a7b:	mov    rax,QWORD PTR [rsp+0x68]
   140006a80:	movsxd rcx,DWORD PTR [rax+0x4]
   140006a84:	lea    rax,[rip+0x31ed]        # 0x140009c78
   140006a8b:	mov    QWORD PTR [rsp+rcx*1+0x68],rax
   140006a90:	mov    rax,QWORD PTR [rsp+0x68]
   140006a95:	movsxd rcx,DWORD PTR [rax+0x4]
   140006a99:	mov    DWORD PTR [rsp+rcx*1+0x64],0x0
   140006aa1:	lea    rdx,[rip+0x60a0]        # 0x14000cb48
   140006aa8:	lea    rcx,[rsp+0x28]
   140006aad:	call   0x140007330
   140006ab2:	int3   
   140006ab3:	int3   
   140006ab4:	movsxd rax,DWORD PTR [rcx-0x4]
   140006ab8:	sub    rcx,rax
   140006abb:	jmp    0x140006ac0
   140006ac0:	mov    r11,rsp
   140006ac3:	push   rbx
   140006ac4:	sub    rsp,0x80
   140006acb:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   140006ad3:	mov    rbx,rcx
   140006ad6:	mov    DWORD PTR [r11+0x8],0x0
   140006ade:	lea    rax,[rip+0x3303]        # 0x140009de8
   140006ae5:	mov    QWORD PTR [r11-0x20],rax
   140006ae9:	lea    rax,[rip+0x2f80]        # 0x140009a70
   140006af0:	mov    QWORD PTR [r11-0x10],rax
   140006af4:	mov    DWORD PTR [r11+0x8],0x1
   140006afc:	lea    rax,[rip+0x2f5d]        # 0x140009a60
   140006b03:	mov    QWORD PTR [r11-0x60],rax
   140006b07:	mov    rcx,QWORD PTR [rcx-0x48]
   140006b0b:	mov    QWORD PTR [r11-0x58],rcx
   140006b0f:	test   rcx,rcx
   140006b12:	je     0x140006b1a
   140006b14:	mov    rax,QWORD PTR [rcx]
   140006b17:	call   QWORD PTR [rax+0x18]
   140006b1a:	mov    rax,QWORD PTR [rbx-0x40]
   140006b1e:	mov    QWORD PTR [rsp+0x38],rax
   140006b23:	mov    rax,QWORD PTR [rbx-0x38]
   140006b27:	mov    QWORD PTR [rsp+0x40],rax
   140006b2c:	mov    eax,DWORD PTR [rbx-0x30]
   140006b2f:	mov    DWORD PTR [rsp+0x48],eax
   140006b33:	lea    rdx,[rbx-0x28]
   140006b37:	lea    rcx,[rsp+0x50]
   140006b3c:	call   QWORD PTR [rip+0x259e]        # 0x1400090e0
   140006b42:	nop
   140006b43:	lea    rax,[rip+0x325e]        # 0x140009da8
   140006b4a:	mov    QWORD PTR [rsp+0x28],rax
   140006b4f:	lea    rax,[rip+0x3262]        # 0x140009db8
   140006b56:	mov    QWORD PTR [rsp+0x50],rax
   140006b5b:	mov    rax,QWORD PTR [rsp+0x68]
   140006b60:	movsxd rcx,DWORD PTR [rax+0x4]
   140006b64:	lea    rax,[rip+0x3265]        # 0x140009dd0
   140006b6b:	mov    QWORD PTR [rsp+rcx*1+0x68],rax
   140006b70:	mov    rax,QWORD PTR [rsp+0x68]
   140006b75:	movsxd rcx,DWORD PTR [rax+0x4]
   140006b79:	mov    DWORD PTR [rsp+rcx*1+0x64],0x0
   140006b81:	lea    rdx,[rip+0x6090]        # 0x14000cc18
   140006b88:	lea    rcx,[rsp+0x28]
   140006b8d:	call   0x140007330
   140006b92:	int3   
   140006b93:	int3   
   140006b94:	int3   
   140006b95:	int3   
   140006b96:	int3   
   140006b97:	int3   
   140006b98:	int3   
   140006b99:	int3   
   140006b9a:	int3   
   140006b9b:	int3   
   140006b9c:	int3   
   140006b9d:	int3   
   140006b9e:	int3   
   140006b9f:	int3   
   140006ba0:	lea    rax,[rip+0x2d79]        # 0x140009920
   140006ba7:	test   rcx,rcx
   140006baa:	cmovne rax,rcx
   140006bae:	ret    
   140006baf:	int3   
   140006bb0:	mov    rax,rdx
   140006bb3:	ret    
   140006bb4:	int3   
   140006bb5:	int3   
   140006bb6:	int3   
   140006bb7:	int3   
   140006bb8:	int3   
   140006bb9:	int3   
   140006bba:	int3   
   140006bbb:	int3   
   140006bbc:	int3   
   140006bbd:	int3   
   140006bbe:	int3   
   140006bbf:	int3   
   140006bc0:	mov    rax,rdx
   140006bc3:	ret    
   140006bc4:	int3   
   140006bc5:	int3   
   140006bc6:	int3   
   140006bc7:	int3   
   140006bc8:	int3   
   140006bc9:	int3   
   140006bca:	int3   
   140006bcb:	int3   
   140006bcc:	int3   
   140006bcd:	int3   
   140006bce:	int3   
   140006bcf:	int3   
   140006bd0:	mov    rax,rcx
   140006bd3:	ret    
   140006bd4:	int3   
   140006bd5:	int3   
   140006bd6:	int3   
   140006bd7:	int3   
   140006bd8:	int3   
   140006bd9:	int3   
   140006bda:	int3   
   140006bdb:	int3   
   140006bdc:	int3   
   140006bdd:	int3   
   140006bde:	int3   
   140006bdf:	int3   
   140006be0:	mov    rax,QWORD PTR [rcx+0x10]
   140006be4:	ret    
   140006be5:	int3   
   140006be6:	int3   
   140006be7:	int3   
   140006be8:	int3   
   140006be9:	int3   
   140006bea:	int3   
   140006beb:	int3   
   140006bec:	int3   
   140006bed:	int3   
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	mov    rax,QWORD PTR [rcx+0x10]
   140006bf4:	ret    
   140006bf5:	int3   
   140006bf6:	int3   
   140006bf7:	int3   
   140006bf8:	int3   
   140006bf9:	int3   
   140006bfa:	int3   
   140006bfb:	int3   
   140006bfc:	int3   
   140006bfd:	int3   
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	mov    rax,QWORD PTR [rcx+0x8]
   140006c04:	sub    rax,QWORD PTR [rcx]
   140006c07:	sar    rax,0x5
   140006c0b:	ret    
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	mov    QWORD PTR [rsp+0x8],rcx
   140006c15:	mov    QWORD PTR [rsp+0x10],rdx
   140006c1a:	mov    QWORD PTR [rsp+0x18],r8
   140006c1f:	mov    QWORD PTR [rsp+0x20],r9
   140006c24:	ret    
   140006c25:	int3   
   140006c26:	int3   
   140006c27:	int3   
   140006c28:	int3   
   140006c29:	int3   
   140006c2a:	int3   
   140006c2b:	int3   
   140006c2c:	int3   
   140006c2d:	int3   
   140006c2e:	int3   
   140006c2f:	int3   
   140006c30:	mov    rax,QWORD PTR [rcx]
   140006c33:	mov    r8,QWORD PTR [rdx]
   140006c36:	mov    QWORD PTR [rdx],rax
   140006c39:	mov    QWORD PTR [rcx],r8
   140006c3c:	ret    
   140006c3d:	int3   
   140006c3e:	int3   
   140006c3f:	int3   
   140006c40:	lea    rax,[rip+0x73c9]        # 0x14000e010
   140006c47:	ret    
   140006c48:	int3   
   140006c49:	int3   
   140006c4a:	int3   
   140006c4b:	int3   
   140006c4c:	int3   
   140006c4d:	int3   
   140006c4e:	int3   
   140006c4f:	int3   
   140006c50:	ret    0x0
   140006c53:	int3   
   140006c54:	int3   
   140006c55:	int3   
   140006c56:	int3   
   140006c57:	int3   
   140006c58:	int3   
   140006c59:	int3   
   140006c5a:	int3   
   140006c5b:	int3   
   140006c5c:	int3   
   140006c5d:	int3   
   140006c5e:	int3   
   140006c5f:	int3   
   140006c60:	sub    rsp,0x28
   140006c64:	mov    eax,0x80000000
   140006c69:	lock xadd DWORD PTR [rcx],eax
   140006c6d:	bt     eax,0x1e
   140006c71:	jb     0x140006c94
   140006c73:	cmp    eax,0x80000000
   140006c78:	jle    0x140006c94
   140006c7a:	lock bts DWORD PTR [rcx],0x1e
   140006c7f:	jb     0x140006c94
   140006c81:	call   0x140006340
   140006c86:	mov    rcx,rax
   140006c89:	add    rsp,0x28
   140006c8d:	rex.W jmp QWORD PTR [rip+0x239c]        # 0x140009030
   140006c94:	add    rsp,0x28
   140006c98:	ret    
   140006c99:	int3   
   140006c9a:	int3   
   140006c9b:	int3   
   140006c9c:	int3   
   140006c9d:	int3   
   140006c9e:	int3   
   140006c9f:	int3   
   140006ca0:	mov    eax,DWORD PTR [rcx]
   140006ca2:	ret    
   140006ca3:	int3   
   140006ca4:	int3   
   140006ca5:	int3   
   140006ca6:	int3   
   140006ca7:	int3   
   140006ca8:	int3   
   140006ca9:	int3   
   140006caa:	int3   
   140006cab:	int3   
   140006cac:	int3   
   140006cad:	int3   
   140006cae:	int3   
   140006caf:	int3   
   140006cb0:	mov    eax,DWORD PTR [rcx]
   140006cb2:	ret    
   140006cb3:	int3   
   140006cb4:	int3   
   140006cb5:	int3   
   140006cb6:	int3   
   140006cb7:	int3   
   140006cb8:	int3   
   140006cb9:	int3   
   140006cba:	int3   
   140006cbb:	int3   
   140006cbc:	int3   
   140006cbd:	int3   
   140006cbe:	int3   
   140006cbf:	int3   
   140006cc0:	mov    eax,DWORD PTR [rcx]
   140006cc2:	ret    
   140006cc3:	int3   
   140006cc4:	int3   
   140006cc5:	int3   
   140006cc6:	int3   
   140006cc7:	int3   
   140006cc8:	int3   
   140006cc9:	int3   
   140006cca:	int3   
   140006ccb:	int3   
   140006ccc:	int3   
   140006ccd:	int3   
   140006cce:	int3   
   140006ccf:	int3   
   140006cd0:	lock dec DWORD PTR [rcx+0xc]
   140006cd4:	jne    0x140006cdd
   140006cd6:	mov    rax,QWORD PTR [rcx]
   140006cd9:	rex.W jmp QWORD PTR [rax+0x10]
   140006cdd:	ret    
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	mov    QWORD PTR [rsp+0x8],rcx
   140006ce5:	push   rdi
   140006ce6:	sub    rsp,0x50
   140006cea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006cf3:	mov    QWORD PTR [rsp+0x68],rbx
   140006cf8:	mov    rbx,rcx
   140006cfb:	cmp    QWORD PTR [rcx+0x38],0x0
   140006d00:	jne    0x140006d91
   140006d06:	call   QWORD PTR [rip+0x23e4]        # 0x1400090f0
   140006d0c:	cmp    BYTE PTR [rax],0x0
   140006d0f:	jne    0x140006d16
   140006d11:	xor    r8d,r8d
   140006d14:	jmp    0x140006d2a
   140006d16:	or     r8,0xffffffffffffffff
   140006d1a:	nop    WORD PTR [rax+rax*1+0x0]
   140006d20:	inc    r8
   140006d23:	cmp    BYTE PTR [rax+r8*1],0x0
   140006d28:	jne    0x140006d20
   140006d2a:	mov    rdx,rax
   140006d2d:	lea    rcx,[rbx+0x28]
   140006d31:	call   0x140005720
   140006d36:	cmp    QWORD PTR [rbx+0x38],0x0
   140006d3b:	je     0x140006d53
   140006d3d:	mov    r8d,0x2
   140006d43:	lea    rdx,[rip+0x2c16]        # 0x140009960
   140006d4a:	lea    rcx,[rbx+0x28]
   140006d4e:	call   0x140005480
   140006d53:	lea    rcx,[rbx+0x18]
   140006d57:	lea    rdx,[rsp+0x28]
   140006d5c:	call   0x140006600
   140006d61:	nop
   140006d62:	or     r9,0xffffffffffffffff
   140006d66:	xor    r8d,r8d
   140006d69:	mov    rdx,rax
   140006d6c:	lea    rcx,[rbx+0x28]
   140006d70:	call   0x140005340
   140006d75:	nop
   140006d76:	cmp    QWORD PTR [rsp+0x40],0x10
   140006d7c:	jb     0x140006d88
   140006d7e:	mov    rcx,QWORD PTR [rsp+0x28]
   140006d83:	call   0x1400071e2
   140006d88:	jmp    0x140006d91
   140006d8a:	mov    rax,QWORD PTR [rsp+0x60]
   140006d8f:	jmp    0x140006d9f
   140006d91:	lea    rax,[rbx+0x28]
   140006d95:	cmp    QWORD PTR [rax+0x18],0x10
   140006d9a:	jb     0x140006d9f
   140006d9c:	mov    rax,QWORD PTR [rax]
   140006d9f:	mov    rbx,QWORD PTR [rsp+0x68]
   140006da4:	add    rsp,0x50
   140006da8:	pop    rdi
   140006da9:	ret    
   140006daa:	int3   
   140006dab:	int3   
   140006dac:	int3   
   140006dad:	int3   
   140006dae:	int3   
   140006daf:	int3   
   140006db0:	mov    rax,rsp
   140006db3:	push   r14
   140006db5:	sub    rsp,0x1f0
   140006dbc:	mov    QWORD PTR [rax-0x160],0xfffffffffffffffe
   140006dc7:	mov    QWORD PTR [rax+0x8],rbx
   140006dcb:	mov    QWORD PTR [rax+0x10],rsi
   140006dcf:	mov    QWORD PTR [rax+0x18],rdi
   140006dd3:	xorps  xmm0,xmm0
   140006dd6:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   140006ddc:	xor    edi,edi
   140006dde:	mov    QWORD PTR [rsp+0x68],rdi
   140006de3:	mov    rdx,QWORD PTR [rip+0x78be]        # 0x14000e6a8
   140006dea:	mov    eax,DWORD PTR [rdx]
   140006dec:	mov    ecx,edi
   140006dee:	test   eax,eax
   140006df0:	cmovg  ecx,eax
   140006df3:	movsxd rax,ecx
   140006df6:	test   ecx,ecx
   140006df8:	je     0x140006e2b
   140006dfa:	movabs rcx,0x7ffffffffffffff
   140006e04:	cmp    rax,rcx
   140006e07:	jbe    0x140006e17
   140006e09:	lea    rcx,[rip+0x2d80]        # 0x140009b90
   140006e10:	call   QWORD PTR [rip+0x223a]        # 0x140009050
   140006e16:	int3   
   140006e17:	mov    rdx,rax
   140006e1a:	lea    rcx,[rsp+0x58]
   140006e1f:	call   0x140004d40
   140006e24:	mov    rdx,QWORD PTR [rip+0x787d]        # 0x14000e6a8
   140006e2b:	mov    ebx,edi
   140006e2d:	cmp    DWORD PTR [rdx],ebx
   140006e2f:	jle    0x140006ecc
   140006e35:	mov    rsi,rdi
   140006e38:	nop    DWORD PTR [rax+rax*1+0x0]
   140006e40:	mov    rax,QWORD PTR [rip+0x7851]        # 0x14000e698
   140006e47:	mov    rcx,QWORD PTR [rax]
   140006e4a:	mov    rax,QWORD PTR [rsi+rcx*1]
   140006e4e:	lea    rdx,[rip+0x2acb]        # 0x140009920
   140006e55:	test   rax,rax
   140006e58:	cmovne rdx,rax
   140006e5c:	mov    QWORD PTR [rsp+0x48],0xf
   140006e65:	mov    QWORD PTR [rsp+0x40],rdi
   140006e6a:	mov    BYTE PTR [rsp+0x30],0x0
   140006e6f:	cmp    BYTE PTR [rdx],0x0
   140006e72:	jne    0x140006e79
   140006e74:	mov    r8,rdi
   140006e77:	jmp    0x140006e8a
   140006e79:	or     r8,0xffffffffffffffff
   140006e7d:	nop    DWORD PTR [rax]
   140006e80:	inc    r8
   140006e83:	cmp    BYTE PTR [rdx+r8*1],0x0
   140006e88:	jne    0x140006e80
   140006e8a:	lea    rcx,[rsp+0x30]
   140006e8f:	call   0x140005720
   140006e94:	nop
   140006e95:	lea    rdx,[rsp+0x30]
   140006e9a:	lea    rcx,[rsp+0x58]
   140006e9f:	call   0x1400066a0
   140006ea4:	nop
   140006ea5:	cmp    QWORD PTR [rsp+0x48],0x10
   140006eab:	jb     0x140006eb7
   140006ead:	mov    rcx,QWORD PTR [rsp+0x30]
   140006eb2:	call   0x1400071e2
   140006eb7:	inc    ebx
   140006eb9:	add    rsi,0x8
   140006ebd:	mov    rax,QWORD PTR [rip+0x77e4]        # 0x14000e6a8
   140006ec4:	cmp    ebx,DWORD PTR [rax]
   140006ec6:	jl     0x140006e40
   140006ecc:	mov    QWORD PTR [rsp+0x48],0x7
   140006ed5:	mov    QWORD PTR [rsp+0x40],rdi
   140006eda:	mov    WORD PTR [rsp+0x30],di
   140006edf:	mov    r8d,0xd
   140006ee5:	lea    rdx,[rip+0x2c84]        # 0x140009b70
   140006eec:	lea    rcx,[rsp+0x30]
   140006ef1:	call   0x1400059c0
   140006ef6:	nop
   140006ef7:	lea    rcx,[rsp+0x30]
   140006efc:	call   QWORD PTR [rip+0x22e6]        # 0x1400091e8
   140006f02:	nop
   140006f03:	cmp    QWORD PTR [rsp+0x48],0x8
   140006f09:	jb     0x140006f15
   140006f0b:	mov    rcx,QWORD PTR [rsp+0x30]
   140006f10:	call   0x1400071e2
   140006f15:	lea    rdx,[rsp+0x58]
   140006f1a:	lea    rcx,[rsp+0x30]
   140006f1f:	call   QWORD PTR [rip+0x22d3]        # 0x1400091f8
   140006f25:	nop
   140006f26:	mov    DWORD PTR [rsp+0x20],0x4
   140006f2e:	mov    r9,rax
   140006f31:	xor    r8d,r8d
   140006f34:	lea    edx,[r8+0x1]
   140006f38:	lea    rcx,[rsp+0xa0]
   140006f40:	call   QWORD PTR [rip+0x22da]        # 0x140009220
   140006f46:	nop
   140006f47:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f4c:	test   rbx,rbx
   140006f4f:	je     0x140006fa2
   140006f51:	mov    rsi,QWORD PTR [rsp+0x38]
   140006f56:	cmp    rbx,rsi
   140006f59:	je     0x140006f8c
   140006f5b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006f60:	cmp    QWORD PTR [rbx+0x18],0x8
   140006f65:	jb     0x140006f6f
   140006f67:	mov    rcx,QWORD PTR [rbx]
   140006f6a:	call   0x1400071e2
   140006f6f:	mov    QWORD PTR [rbx+0x18],0x7
   140006f77:	mov    QWORD PTR [rbx+0x10],rdi
   140006f7b:	mov    WORD PTR [rbx],di
   140006f7e:	add    rbx,0x20
   140006f82:	cmp    rbx,rsi
   140006f85:	jne    0x140006f60
   140006f87:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f8c:	mov    rcx,rbx
   140006f8f:	call   0x1400071e2
   140006f94:	xorps  xmm0,xmm0
   140006f97:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140006f9d:	mov    QWORD PTR [rsp+0x40],rdi
   140006fa2:	xorps  xmm0,xmm0
   140006fa5:	movdqu XMMWORD PTR [rsp+0x70],xmm0
   140006fab:	lea    r8,[rsp+0x70]
   140006fb0:	lea    rdx,[rsp+0xa0]
   140006fb8:	lea    rcx,[rsp+0x80]
   140006fc0:	call   QWORD PTR [rip+0x224a]        # 0x140009210
   140006fc6:	nop
   140006fc7:	lea    rcx,[rsp+0x80]
   140006fcf:	call   QWORD PTR [rip+0x222b]        # 0x140009200
   140006fd5:	mov    r14d,eax
   140006fd8:	jmp    0x140006fe1
   140006fda:	xor    edi,edi
   140006fdc:	mov    r14d,DWORD PTR [rsp+0x50]
   140006fe1:	lea    rcx,[rsp+0x80]
   140006fe9:	call   QWORD PTR [rip+0x2219]        # 0x140009208
   140006fef:	nop
   140006ff0:	lea    rcx,[rsp+0xa0]
   140006ff8:	call   QWORD PTR [rip+0x221a]        # 0x140009218
   140006ffe:	nop
   140006fff:	mov    rbx,QWORD PTR [rsp+0x58]
   140007004:	test   rbx,rbx
   140007007:	je     0x140007047
   140007009:	mov    rsi,QWORD PTR [rsp+0x60]
   14000700e:	cmp    rbx,rsi
   140007011:	je     0x14000703f
   140007013:	cmp    QWORD PTR [rbx+0x18],0x10
   140007018:	jb     0x140007022
   14000701a:	mov    rcx,QWORD PTR [rbx]
   14000701d:	call   0x1400071e2
   140007022:	mov    QWORD PTR [rbx+0x18],0xf
   14000702a:	mov    QWORD PTR [rbx+0x10],rdi
   14000702e:	mov    BYTE PTR [rbx],0x0
   140007031:	add    rbx,0x20
   140007035:	cmp    rbx,rsi
   140007038:	jne    0x140007013
   14000703a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000703f:	mov    rcx,rbx
   140007042:	call   0x1400071e2
   140007047:	mov    eax,r14d
   14000704a:	lea    r11,[rsp+0x1f0]
   140007052:	mov    rbx,QWORD PTR [r11+0x10]
   140007056:	mov    rsi,QWORD PTR [r11+0x18]
   14000705a:	mov    rdi,QWORD PTR [r11+0x20]
   14000705e:	mov    rsp,r11
   140007061:	pop    r14
   140007063:	ret    
   140007064:	int3   
   140007065:	int3   
   140007066:	int3   
   140007067:	int3   
   140007068:	int3   
   140007069:	int3   
   14000706a:	int3   
   14000706b:	int3   
   14000706c:	int3   
   14000706d:	int3   
   14000706e:	int3   
   14000706f:	int3   
   140007070:	rex.W jmp QWORD PTR [rip+0x2049]        # 0x1400090c0
   140007077:	int3   
   140007078:	int3   
   140007079:	int3   
   14000707a:	int3   
   14000707b:	int3   
   14000707c:	int3   
   14000707d:	int3   
   14000707e:	int3   
   14000707f:	int3   
   140007080:	rex push rbx
   140007082:	sub    rsp,0x20
   140007086:	add    r8,r8
   140007089:	mov    rbx,rcx
   14000708c:	call   0x14000733c
   140007091:	mov    rax,rbx
   140007094:	add    rsp,0x20
   140007098:	pop    rbx
   140007099:	ret    
   14000709a:	int3   
   14000709b:	int3   
   14000709c:	int3   
   14000709d:	int3   
   14000709e:	int3   
   14000709f:	int3   
   1400070a0:	add    r8,r8
   1400070a3:	rex.W jmp QWORD PTR [rip+0x201e]        # 0x1400090c8
   1400070aa:	jmp    QWORD PTR [rip+0x2170]        # 0x140009220
   1400070b0:	jmp    QWORD PTR [rip+0x2162]        # 0x140009218
   1400070b6:	jmp    QWORD PTR [rip+0x2154]        # 0x140009210
   1400070bc:	jmp    QWORD PTR [rip+0x2146]        # 0x140009208
   1400070c2:	jmp    QWORD PTR [rip+0x2138]        # 0x140009200
   1400070c8:	jmp    QWORD PTR [rip+0x212a]        # 0x1400091f8
   1400070ce:	jmp    QWORD PTR [rip+0x2114]        # 0x1400091e8
   1400070d4:	jmp    QWORD PTR [rip+0x20fe]        # 0x1400091d8
   1400070da:	jmp    QWORD PTR [rip+0x20f0]        # 0x1400091d0
   1400070e0:	jmp    QWORD PTR [rip+0x1f5a]        # 0x140009040
   1400070e6:	jmp    QWORD PTR [rip+0x1f4c]        # 0x140009038
   1400070ec:	jmp    QWORD PTR [rip+0x1f3e]        # 0x140009030
   1400070f2:	jmp    QWORD PTR [rip+0x1f78]        # 0x140009070
   1400070f8:	jmp    QWORD PTR [rip+0x1f52]        # 0x140009050
   1400070fe:	jmp    QWORD PTR [rip+0x1f64]        # 0x140009068
   140007104:	jmp    QWORD PTR [rip+0x1f4e]        # 0x140009058
   14000710a:	jmp    QWORD PTR [rip+0x1f50]        # 0x140009060
   140007110:	mov    rax,rsp
   140007113:	mov    QWORD PTR [rax+0x20],r9
   140007117:	mov    DWORD PTR [rax+0x18],r8d
   14000711b:	mov    QWORD PTR [rax+0x10],rdx
   14000711f:	push   rbx
   140007120:	push   rsi
   140007121:	push   rdi
   140007122:	push   r14
   140007124:	sub    rsp,0x38
   140007128:	mov    r14,r9
   14000712b:	movsxd rdi,r8d
   14000712e:	mov    rsi,rdx
   140007131:	and    DWORD PTR [rax-0x38],0x0
   140007135:	mov    rbx,rdi
   140007138:	imul   rbx,rdx
   14000713c:	add    rbx,rcx
   14000713f:	mov    QWORD PTR [rax+0x8],rbx
   140007143:	dec    edi
   140007145:	mov    DWORD PTR [rsp+0x70],edi
   140007149:	js     0x14000715b
   14000714b:	sub    rbx,rsi
   14000714e:	mov    QWORD PTR [rsp+0x60],rbx
   140007153:	mov    rcx,rbx
   140007156:	call   r14
   140007159:	jmp    0x140007143
   14000715b:	mov    DWORD PTR [rsp+0x20],0x1
   140007163:	add    rsp,0x38
   140007167:	pop    r14
   140007169:	pop    rdi
   14000716a:	pop    rsi
   14000716b:	pop    rbx
   14000716c:	ret    
   14000716d:	int3   
   14000716e:	int3   
   14000716f:	int3   
   140007170:	sub    rsp,0x28
   140007174:	mov    rax,QWORD PTR [rcx]
   140007177:	cmp    DWORD PTR [rax],0xe06d7363
   14000717d:	je     0x140007186
   14000717f:	xor    eax,eax
   140007181:	add    rsp,0x28
   140007185:	ret    
   140007186:	call   0x14000774a
   14000718b:	int3   
   14000718c:	mov    QWORD PTR [rsp+0x10],rbx
   140007191:	mov    DWORD PTR [rsp+0x18],r8d
   140007196:	mov    QWORD PTR [rsp+0x8],rcx
   14000719b:	push   rsi
   14000719c:	push   rdi
   14000719d:	push   r14
   14000719f:	sub    rsp,0x40
   1400071a3:	mov    rsi,r9
   1400071a6:	mov    edi,r8d
   1400071a9:	mov    r14,rdx
   1400071ac:	mov    rbx,rcx
   1400071af:	dec    edi
   1400071b1:	mov    DWORD PTR [rsp+0x70],edi
   1400071b5:	js     0x1400071c6
   1400071b7:	sub    rbx,r14
   1400071ba:	mov    QWORD PTR [rsp+0x60],rbx
   1400071bf:	mov    rcx,rbx
   1400071c2:	call   rsi
   1400071c4:	jmp    0x1400071af
   1400071c6:	jmp    0x1400071c8
   1400071c8:	mov    rbx,QWORD PTR [rsp+0x68]
   1400071cd:	add    rsp,0x40
   1400071d1:	pop    r14
   1400071d3:	pop    rdi
   1400071d4:	pop    rsi
   1400071d5:	ret    
   1400071d6:	jmp    QWORD PTR [rip+0x1ecc]        # 0x1400090a8
   1400071dc:	jmp    QWORD PTR [rip+0x1ece]        # 0x1400090b0
   1400071e2:	jmp    QWORD PTR [rip+0x1ed0]        # 0x1400090b8
   1400071e8:	rex push rbx
   1400071ea:	sub    rsp,0x20
   1400071ee:	cmp    QWORD PTR [rip+0x757a],0x0        # 0x14000e770
   1400071f6:	jne    0x14000722e
   1400071f8:	mov    edx,0x8
   1400071fd:	lea    ecx,[rdx+0x18]
   140007200:	call   QWORD PTR [rip+0x1f42]        # 0x140009148
   140007206:	mov    rcx,rax
   140007209:	mov    rbx,rax
   14000720c:	call   QWORD PTR [rip+0x1e16]        # 0x140009028
   140007212:	mov    QWORD PTR [rip+0x7557],rax        # 0x14000e770
   140007219:	mov    QWORD PTR [rip+0x7548],rax        # 0x14000e768
   140007220:	test   rbx,rbx
   140007223:	jne    0x14000722a
   140007225:	lea    eax,[rbx+0x18]
   140007228:	jmp    0x140007230
   14000722a:	and    QWORD PTR [rbx],0x0
   14000722e:	xor    eax,eax
   140007230:	add    rsp,0x20
   140007234:	pop    rbx
   140007235:	ret    
   140007236:	int3   
   140007237:	int3   
   140007238:	rex push rbx
   14000723a:	sub    rsp,0x20
   14000723e:	mov    rbx,rcx
   140007241:	mov    rcx,QWORD PTR [rip+0x7528]        # 0x14000e770
   140007248:	call   QWORD PTR [rip+0x1dd2]        # 0x140009020
   14000724e:	mov    QWORD PTR [rsp+0x38],rax
   140007253:	cmp    rax,0xffffffffffffffff
   140007257:	jne    0x140007264
   140007259:	mov    rcx,rbx
   14000725c:	call   QWORD PTR [rip+0x1ef6]        # 0x140009158
   140007262:	jmp    0x1400072e2
   140007264:	mov    ecx,0x8
   140007269:	call   0x140007756
   14000726e:	nop
   14000726f:	mov    rcx,QWORD PTR [rip+0x74fa]        # 0x14000e770
   140007276:	call   QWORD PTR [rip+0x1da4]        # 0x140009020
   14000727c:	mov    QWORD PTR [rsp+0x38],rax
   140007281:	mov    rcx,QWORD PTR [rip+0x74e0]        # 0x14000e768
   140007288:	call   QWORD PTR [rip+0x1d92]        # 0x140009020
   14000728e:	mov    QWORD PTR [rsp+0x40],rax
   140007293:	mov    rcx,rbx
   140007296:	call   QWORD PTR [rip+0x1d8c]        # 0x140009028
   14000729c:	mov    rcx,rax
   14000729f:	lea    r8,[rsp+0x40]
   1400072a4:	lea    rdx,[rsp+0x38]
   1400072a9:	call   0x140007768
   1400072ae:	mov    rbx,rax
   1400072b1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400072b6:	call   QWORD PTR [rip+0x1d6c]        # 0x140009028
   1400072bc:	mov    QWORD PTR [rip+0x74ad],rax        # 0x14000e770
   1400072c3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400072c8:	call   QWORD PTR [rip+0x1d5a]        # 0x140009028
   1400072ce:	mov    QWORD PTR [rip+0x7493],rax        # 0x14000e768
   1400072d5:	mov    ecx,0x8
   1400072da:	call   0x14000775c
   1400072df:	mov    rax,rbx
   1400072e2:	add    rsp,0x20
   1400072e6:	pop    rbx
   1400072e7:	ret    
   1400072e8:	sub    rsp,0x28
   1400072ec:	call   0x140007238
   1400072f1:	neg    rax
   1400072f4:	sbb    eax,eax
   1400072f6:	neg    eax
   1400072f8:	dec    eax
   1400072fa:	add    rsp,0x28
   1400072fe:	ret    
   1400072ff:	int3   
   140007300:	jmp    QWORD PTR [rip+0x1dba]        # 0x1400090c0
   140007306:	jmp    QWORD PTR [rip+0x1dbc]        # 0x1400090c8
   14000730c:	jmp    QWORD PTR [rip+0x1dbe]        # 0x1400090d0
   140007312:	jmp    QWORD PTR [rip+0x1dc0]        # 0x1400090d8
   140007318:	jmp    QWORD PTR [rip+0x1dc2]        # 0x1400090e0
   14000731e:	jmp    QWORD PTR [rip+0x1dc4]        # 0x1400090e8
   140007324:	jmp    QWORD PTR [rip+0x1dc6]        # 0x1400090f0
   14000732a:	jmp    QWORD PTR [rip+0x1dc8]        # 0x1400090f8
   140007330:	jmp    QWORD PTR [rip+0x1dca]        # 0x140009100
   140007336:	jmp    QWORD PTR [rip+0x1dcc]        # 0x140009108
   14000733c:	jmp    QWORD PTR [rip+0x1dce]        # 0x140009110
   140007342:	int3   
   140007343:	int3   
   140007344:	lea    rax,[rip+0x2be5]        # 0x140009f30
   14000734b:	mov    QWORD PTR [rcx],rax
   14000734e:	mov    rax,rcx
   140007351:	ret    
   140007352:	int3   
   140007353:	int3   
   140007354:	mov    rax,rcx
   140007357:	ret    
   140007358:	mov    QWORD PTR [rsp+0x8],rbx
   14000735d:	mov    QWORD PTR [rsp+0x10],rsi
   140007362:	push   rdi
   140007363:	sub    rsp,0x20
   140007367:	mov    esi,edx
   140007369:	mov    rbx,rcx
   14000736c:	test   dl,0x2
   14000736f:	je     0x14000739c
   140007371:	lea    rdi,[rcx-0x8]
   140007375:	lea    r9,[rip+0x694]        # 0x140007a10
   14000737c:	mov    edx,0x18
   140007381:	mov    r8d,DWORD PTR [rdi]
   140007384:	call   0x140007110
   140007389:	test   sil,0x1
   14000738d:	je     0x140007397
   14000738f:	mov    rcx,rdi
   140007392:	call   0x1400071e2
   140007397:	mov    rax,rdi
   14000739a:	jmp    0x1400073b2
   14000739c:	call   0x140007a10
   1400073a1:	test   sil,0x1
   1400073a5:	je     0x1400073af
   1400073a7:	mov    rcx,rbx
   1400073aa:	call   0x1400071e2
   1400073af:	mov    rax,rbx
   1400073b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400073b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400073bc:	add    rsp,0x20
   1400073c0:	pop    rdi
   1400073c1:	ret    
   1400073c2:	int3   
   1400073c3:	int3   
   1400073c4:	sub    rsp,0x28
   1400073c8:	mov    eax,0x5a4d
   1400073cd:	cmp    WORD PTR [rip+0xffffffffffff8c2c],ax        # 0x140000000
   1400073d4:	je     0x1400073da
   1400073d6:	xor    ecx,ecx
   1400073d8:	jmp    0x140007412
   1400073da:	movsxd rax,DWORD PTR [rip+0xffffffffffff8c5b]        # 0x14000003c
   1400073e1:	lea    rcx,[rip+0xffffffffffff8c18]        # 0x140000000
   1400073e8:	add    rax,rcx
   1400073eb:	cmp    DWORD PTR [rax],0x4550
   1400073f1:	jne    0x1400073d6
   1400073f3:	mov    ecx,0x20b
   1400073f8:	cmp    WORD PTR [rax+0x18],cx
   1400073fc:	jne    0x1400073d6
   1400073fe:	xor    ecx,ecx
   140007400:	cmp    DWORD PTR [rax+0x84],0xe
   140007407:	jbe    0x140007412
   140007409:	cmp    DWORD PTR [rax+0xf8],ecx
   14000740f:	setne  cl
   140007412:	mov    DWORD PTR [rip+0x7308],ecx        # 0x14000e720
   140007418:	mov    ecx,0x2
   14000741d:	call   QWORD PTR [rip+0x1d5d]        # 0x140009180
   140007423:	or     rcx,0xffffffffffffffff
   140007427:	call   QWORD PTR [rip+0x1bfb]        # 0x140009028
   14000742d:	mov    rcx,QWORD PTR [rip+0x1c6c]        # 0x1400090a0
   140007434:	mov    QWORD PTR [rip+0x732d],rax        # 0x14000e768
   14000743b:	mov    QWORD PTR [rip+0x732e],rax        # 0x14000e770
   140007442:	mov    eax,DWORD PTR [rip+0x7304]        # 0x14000e74c
   140007448:	mov    DWORD PTR [rcx],eax
   14000744a:	mov    rdx,QWORD PTR [rip+0x1c2f]        # 0x140009080
   140007451:	mov    eax,DWORD PTR [rip+0x72e9]        # 0x14000e740
   140007457:	mov    DWORD PTR [rdx],eax
   140007459:	call   0x140007988
   14000745e:	call   0x1400077d4
   140007463:	cmp    DWORD PTR [rip+0x6bca],0x0        # 0x14000e034
   14000746a:	jne    0x140007479
   14000746c:	lea    rcx,[rip+0x509]        # 0x14000797c
   140007473:	call   QWORD PTR [rip+0x1d37]        # 0x1400091b0
   140007479:	cmp    DWORD PTR [rip+0x6bb8],0xffffffff        # 0x14000e038
   140007480:	jne    0x14000748b
   140007482:	or     ecx,0xffffffff
   140007485:	call   QWORD PTR [rip+0x1d1d]        # 0x1400091a8
   14000748b:	xor    eax,eax
   14000748d:	add    rsp,0x28
   140007491:	ret    
   140007492:	int3   
   140007493:	int3   
   140007494:	sub    rsp,0x38
   140007498:	lea    rcx,[rip+0x521]        # 0x1400079c0
   14000749f:	call   0x1400072e8
   1400074a4:	mov    eax,DWORD PTR [rip+0x729e]        # 0x14000e748
   1400074aa:	mov    r9d,DWORD PTR [rip+0x7293]        # 0x14000e744
   1400074b1:	mov    DWORD PTR [rip+0x7285],eax        # 0x14000e73c
   1400074b7:	lea    rax,[rip+0x727e]        # 0x14000e73c
   1400074be:	lea    r8,[rip+0x726b]        # 0x14000e730
   1400074c5:	lea    rdx,[rip+0x725c]        # 0x14000e728
   1400074cc:	lea    rcx,[rip+0x7251]        # 0x14000e724
   1400074d3:	mov    QWORD PTR [rsp+0x20],rax
   1400074d8:	call   QWORD PTR [rip+0x1c9a]        # 0x140009178
   1400074de:	mov    DWORD PTR [rip+0x7254],eax        # 0x14000e738
   1400074e4:	test   eax,eax
   1400074e6:	jns    0x1400074f2
   1400074e8:	mov    ecx,0x8
   1400074ed:	call   0x1400077cc
   1400074f2:	add    rsp,0x38
   1400074f6:	ret    
   1400074f7:	int3   
   1400074f8:	mov    rax,QWORD PTR gs:0x30
   140007501:	ret    
   140007502:	int3   
   140007503:	int3   
   140007504:	sub    rsp,0x28
   140007508:	call   0x1400078d0
   14000750d:	add    rsp,0x28
   140007511:	jmp    0x140007518
   140007516:	int3   
   140007517:	int3   
   140007518:	mov    rax,rsp
   14000751b:	mov    QWORD PTR [rax+0x8],rbx
   14000751f:	mov    QWORD PTR [rax+0x10],rsi
   140007523:	push   rdi
   140007524:	sub    rsp,0x30
   140007528:	and    QWORD PTR [rax-0x10],0x0
   14000752d:	and    DWORD PTR [rax-0x18],0x0
   140007531:	call   QWORD PTR [rip+0x1c31]        # 0x140009168
   140007537:	movzx  esi,ax
   14000753a:	mov    rcx,QWORD PTR gs:0x30
   140007543:	mov    rdx,QWORD PTR [rcx+0x8]
   140007547:	xor    ebx,ebx
   140007549:	xor    eax,eax
   14000754b:	lock cmpxchg QWORD PTR [rip+0x71fc],rdx        # 0x14000e750
   140007554:	je     0x140007564
   140007556:	cmp    rax,rdx
   140007559:	jne    0x140007562
   14000755b:	mov    ebx,0x1
   140007560:	jmp    0x140007564
   140007562:	jmp    0x140007549
   140007564:	mov    eax,DWORD PTR [rip+0x71ee]        # 0x14000e758
   14000756a:	cmp    eax,0x1
   14000756d:	jne    0x140007579
   14000756f:	lea    ecx,[rax+0x1e]
   140007572:	call   0x1400077cc
   140007577:	jmp    0x1400075b8
   140007579:	mov    eax,DWORD PTR [rip+0x71d9]        # 0x14000e758
   14000757f:	test   eax,eax
   140007581:	jne    0x1400075ae
   140007583:	mov    DWORD PTR [rip+0x71cb],0x1        # 0x14000e758
   14000758d:	lea    rdx,[rip+0x1d24]        # 0x1400092b8
   140007594:	lea    rcx,[rip+0x1cfd]        # 0x140009298
   14000759b:	call   0x140007a04
   1400075a0:	test   eax,eax
   1400075a2:	je     0x1400075b8
   1400075a4:	mov    eax,0xff
   1400075a9:	jmp    0x1400076f0
   1400075ae:	mov    DWORD PTR [rip+0x7160],0x1        # 0x14000e718
   1400075b8:	mov    eax,DWORD PTR [rip+0x719a]        # 0x14000e758
   1400075be:	cmp    eax,0x1
   1400075c1:	jne    0x1400075e0
   1400075c3:	lea    rdx,[rip+0x1cc6]        # 0x140009290
   1400075ca:	lea    rcx,[rip+0x1c5f]        # 0x140009230
   1400075d1:	call   0x140007a0a
   1400075d6:	mov    DWORD PTR [rip+0x7178],0x2        # 0x14000e758
   1400075e0:	test   ebx,ebx
   1400075e2:	jne    0x1400075ed
   1400075e4:	xor    eax,eax
   1400075e6:	xchg   QWORD PTR [rip+0x7163],rax        # 0x14000e750
   1400075ed:	cmp    QWORD PTR [rip+0x716b],0x0        # 0x14000e760
   1400075f5:	je     0x140007619
   1400075f7:	lea    rcx,[rip+0x7162]        # 0x14000e760
   1400075fe:	call   0x140007840
   140007603:	test   eax,eax
   140007605:	je     0x140007619
   140007607:	xor    r8d,r8d
   14000760a:	lea    edx,[r8+0x2]
   14000760e:	xor    ecx,ecx
   140007610:	mov    rax,QWORD PTR [rip+0x7149]        # 0x14000e760
   140007617:	call   rax
   140007619:	mov    rax,QWORD PTR [rip+0x1a78]        # 0x140009098
   140007620:	mov    rbx,QWORD PTR [rax]
   140007623:	mov    QWORD PTR [rsp+0x28],rbx
   140007628:	mov    edi,DWORD PTR [rsp+0x20]
   14000762c:	cmp    BYTE PTR [rbx],0x20
   14000762f:	ja     0x14000768f
   140007631:	cmp    BYTE PTR [rbx],0x0
   140007634:	je     0x14000763a
   140007636:	test   edi,edi
   140007638:	jne    0x14000768f
   14000763a:	mov    al,BYTE PTR [rbx]
   14000763c:	dec    al
   14000763e:	cmp    al,0x1f
   140007640:	ja     0x14000764c
   140007642:	inc    rbx
   140007645:	mov    QWORD PTR [rsp+0x28],rbx
   14000764a:	jmp    0x14000763a
   14000764c:	movzx  r9d,si
   140007650:	mov    r8,rbx
   140007653:	xor    edx,edx
   140007655:	lea    rcx,[rip+0xffffffffffff89a4]        # 0x140000000
   14000765c:	call   0x140006db0
   140007661:	mov    DWORD PTR [rip+0x70b5],eax        # 0x14000e71c
   140007667:	cmp    DWORD PTR [rip+0x70b2],0x0        # 0x14000e720
   14000766e:	jne    0x140007678
   140007670:	mov    ecx,eax
   140007672:	call   QWORD PTR [rip+0x1b10]        # 0x140009188
   140007678:	cmp    DWORD PTR [rip+0x7099],0x0        # 0x14000e718
   14000767f:	jne    0x14000768d
   140007681:	call   QWORD PTR [rip+0x1b11]        # 0x140009198
   140007687:	mov    eax,DWORD PTR [rip+0x708f]        # 0x14000e71c
   14000768d:	jmp    0x1400076f0
   14000768f:	cmp    BYTE PTR [rbx],0x22
   140007692:	jne    0x1400076a1
   140007694:	xor    eax,eax
   140007696:	test   edi,edi
   140007698:	sete   al
   14000769b:	mov    edi,eax
   14000769d:	mov    DWORD PTR [rsp+0x20],eax
   1400076a1:	movzx  ecx,BYTE PTR [rbx]
   1400076a4:	call   QWORD PTR [rip+0x1af6]        # 0x1400091a0
   1400076aa:	test   eax,eax
   1400076ac:	je     0x1400076b6
   1400076ae:	inc    rbx
   1400076b1:	mov    QWORD PTR [rsp+0x28],rbx
   1400076b6:	inc    rbx
   1400076b9:	mov    QWORD PTR [rsp+0x28],rbx
   1400076be:	jmp    0x14000762c
   1400076c3:	mov    DWORD PTR [rip+0x7053],eax        # 0x14000e71c
   1400076c9:	cmp    DWORD PTR [rip+0x7050],0x0        # 0x14000e720
   1400076d0:	jne    0x1400076db
   1400076d2:	mov    ecx,eax
   1400076d4:	call   QWORD PTR [rip+0x1ab6]        # 0x140009190
   1400076da:	int3   
   1400076db:	cmp    DWORD PTR [rip+0x7036],0x0        # 0x14000e718
   1400076e2:	jne    0x1400076f0
   1400076e4:	call   QWORD PTR [rip+0x1aae]        # 0x140009198
   1400076ea:	mov    eax,DWORD PTR [rip+0x702c]        # 0x14000e71c
   1400076f0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400076f5:	mov    rsi,QWORD PTR [rsp+0x48]
   1400076fa:	add    rsp,0x30
   1400076fe:	pop    rdi
   1400076ff:	ret    
   140007700:	mov    eax,0x5a4d
   140007705:	cmp    WORD PTR [rip+0xffffffffffff88f4],ax        # 0x140000000
   14000770c:	je     0x140007711
   14000770e:	xor    eax,eax
   140007710:	ret    
   140007711:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8924]        # 0x14000003c
   140007718:	lea    rax,[rip+0xffffffffffff88e1]        # 0x140000000
   14000771f:	add    rcx,rax
   140007722:	cmp    DWORD PTR [rcx],0x4550
   140007728:	jne    0x14000770e
   14000772a:	mov    eax,0x20b
   14000772f:	cmp    WORD PTR [rcx+0x18],ax
   140007733:	jne    0x14000770e
   140007735:	xor    eax,eax
   140007737:	cmp    DWORD PTR [rcx+0x84],0xe
   14000773e:	jbe    0x140007749
   140007740:	cmp    DWORD PTR [rcx+0xf8],eax
   140007746:	setne  al
   140007749:	ret    
   14000774a:	jmp    QWORD PTR [rip+0x19d8]        # 0x140009128
   140007750:	jmp    QWORD PTR [rip+0x19da]        # 0x140009130
   140007756:	jmp    QWORD PTR [rip+0x19dc]        # 0x140009138
   14000775c:	jmp    QWORD PTR [rip+0x19de]        # 0x140009140
   140007762:	jmp    QWORD PTR [rip+0x19e0]        # 0x140009148
   140007768:	jmp    QWORD PTR [rip+0x19e2]        # 0x140009150
   14000776e:	int3   
   14000776f:	int3   
   140007770:	sub    rsp,0x28
   140007774:	mov    rax,QWORD PTR [rcx]
   140007777:	cmp    DWORD PTR [rax],0xe06d7363
   14000777d:	jne    0x14000779b
   14000777f:	cmp    DWORD PTR [rax+0x18],0x4
   140007783:	jne    0x14000779b
   140007785:	mov    ecx,DWORD PTR [rax+0x20]
   140007788:	lea    eax,[rcx-0x19930520]
   14000778e:	cmp    eax,0x2
   140007791:	jbe    0x1400077a2
   140007793:	cmp    ecx,0x1994000
   140007799:	je     0x1400077a2
   14000779b:	xor    eax,eax
   14000779d:	add    rsp,0x28
   1400077a1:	ret    
   1400077a2:	call   0x14000774a
   1400077a7:	int3   
   1400077a8:	sub    rsp,0x28
   1400077ac:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140007770
   1400077b3:	call   0x140007a16
   1400077b8:	xor    eax,eax
   1400077ba:	add    rsp,0x28
   1400077be:	ret    
   1400077bf:	int3   
   1400077c0:	jmp    QWORD PTR [rip+0x199a]        # 0x140009160
   1400077c6:	jmp    QWORD PTR [rip+0x199c]        # 0x140009168
   1400077cc:	jmp    QWORD PTR [rip+0x199e]        # 0x140009170
   1400077d2:	int3   
   1400077d3:	int3   
   1400077d4:	xor    eax,eax
   1400077d6:	ret    
   1400077d7:	int3   
   1400077d8:	jmp    QWORD PTR [rip+0x199a]        # 0x140009178
   1400077de:	jmp    QWORD PTR [rip+0x199c]        # 0x140009180
   1400077e4:	int3   
   1400077e5:	int3   
   1400077e6:	int3   
   1400077e7:	int3   
   1400077e8:	int3   
   1400077e9:	int3   
   1400077ea:	int3   
   1400077eb:	int3   
   1400077ec:	int3   
   1400077ed:	int3   
   1400077ee:	int3   
   1400077ef:	int3   
   1400077f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400077f4:	xor    r9d,r9d
   1400077f7:	mov    r10,rdx
   1400077fa:	add    r8,rcx
   1400077fd:	movzx  eax,WORD PTR [r8+0x14]
   140007802:	movzx  r11d,WORD PTR [r8+0x6]
   140007807:	add    rax,0x18
   14000780b:	add    rax,r8
   14000780e:	test   r11d,r11d
   140007811:	je     0x140007831
   140007813:	mov    edx,DWORD PTR [rax+0xc]
   140007816:	cmp    r10,rdx
   140007819:	jb     0x140007825
   14000781b:	mov    ecx,DWORD PTR [rax+0x8]
   14000781e:	add    ecx,edx
   140007820:	cmp    r10,rcx
   140007823:	jb     0x140007833
   140007825:	inc    r9d
   140007828:	add    rax,0x28
   14000782c:	cmp    r9d,r11d
   14000782f:	jb     0x140007813
   140007831:	xor    eax,eax
   140007833:	ret    
   140007834:	int3   
   140007835:	int3   
   140007836:	int3   
   140007837:	int3   
   140007838:	int3   
   140007839:	int3   
   14000783a:	int3   
   14000783b:	int3   
   14000783c:	int3   
   14000783d:	int3   
   14000783e:	int3   
   14000783f:	int3   
   140007840:	mov    QWORD PTR [rsp+0x8],rbx
   140007845:	push   rdi
   140007846:	sub    rsp,0x20
   14000784a:	mov    rbx,rcx
   14000784d:	lea    rdi,[rip+0xffffffffffff87ac]        # 0x140000000
   140007854:	mov    rcx,rdi
   140007857:	call   0x140007890
   14000785c:	test   eax,eax
   14000785e:	je     0x140007882
   140007860:	sub    rbx,rdi
   140007863:	mov    rdx,rbx
   140007866:	mov    rcx,rdi
   140007869:	call   0x1400077f0
   14000786e:	test   rax,rax
   140007871:	je     0x140007882
   140007873:	mov    eax,DWORD PTR [rax+0x24]
   140007876:	shr    eax,0x1f
   140007879:	not    eax
   14000787b:	and    eax,0x1
   14000787e:	jmp    0x140007882
   140007880:	xor    eax,eax
   140007882:	mov    rbx,QWORD PTR [rsp+0x30]
   140007887:	add    rsp,0x20
   14000788b:	pop    rdi
   14000788c:	ret    
   14000788d:	int3   
   14000788e:	int3   
   14000788f:	int3   
   140007890:	mov    rax,rcx
   140007893:	mov    ecx,0x5a4d
   140007898:	cmp    WORD PTR [rax],cx
   14000789b:	je     0x1400078a0
   14000789d:	xor    eax,eax
   14000789f:	ret    
   1400078a0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400078a4:	add    rcx,rax
   1400078a7:	xor    eax,eax
   1400078a9:	cmp    DWORD PTR [rcx],0x4550
   1400078af:	jne    0x1400078bd
   1400078b1:	mov    edx,0x20b
   1400078b6:	cmp    WORD PTR [rcx+0x18],dx
   1400078ba:	sete   al
   1400078bd:	ret    
   1400078be:	jmp    QWORD PTR [rip+0x18c4]        # 0x140009188
   1400078c4:	jmp    QWORD PTR [rip+0x18c6]        # 0x140009190
   1400078ca:	jmp    QWORD PTR [rip+0x18c8]        # 0x140009198
   1400078d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400078d5:	push   rbp
   1400078d6:	mov    rbp,rsp
   1400078d9:	sub    rsp,0x20
   1400078dd:	mov    rax,QWORD PTR [rip+0x675c]        # 0x14000e040
   1400078e4:	and    QWORD PTR [rbp+0x18],0x0
   1400078e9:	movabs rbx,0x2b992ddfa232
   1400078f3:	cmp    rax,rbx
   1400078f6:	jne    0x140007967
   1400078f8:	lea    rcx,[rbp+0x18]
   1400078fc:	call   QWORD PTR [rip+0x16fe]        # 0x140009000
   140007902:	mov    rax,QWORD PTR [rbp+0x18]
   140007906:	mov    QWORD PTR [rbp+0x10],rax
   14000790a:	call   QWORD PTR [rip+0x16f8]        # 0x140009008
   140007910:	mov    eax,eax
   140007912:	xor    QWORD PTR [rbp+0x10],rax
   140007916:	call   QWORD PTR [rip+0x16f4]        # 0x140009010
   14000791c:	lea    rcx,[rbp+0x20]
   140007920:	mov    eax,eax
   140007922:	xor    QWORD PTR [rbp+0x10],rax
   140007926:	call   QWORD PTR [rip+0x16ec]        # 0x140009018
   14000792c:	mov    eax,DWORD PTR [rbp+0x20]
   14000792f:	shl    rax,0x20
   140007933:	lea    rcx,[rbp+0x10]
   140007937:	xor    rax,QWORD PTR [rbp+0x20]
   14000793b:	xor    rax,QWORD PTR [rbp+0x10]
   14000793f:	xor    rax,rcx
   140007942:	movabs rcx,0xffffffffffff
   14000794c:	and    rax,rcx
   14000794f:	movabs rcx,0x2b992ddfa233
   140007959:	cmp    rax,rbx
   14000795c:	cmove  rax,rcx
   140007960:	mov    QWORD PTR [rip+0x66d9],rax        # 0x14000e040
   140007967:	mov    rbx,QWORD PTR [rsp+0x48]
   14000796c:	not    rax
   14000796f:	mov    QWORD PTR [rip+0x66d2],rax        # 0x14000e048
   140007976:	add    rsp,0x20
   14000797a:	pop    rbp
   14000797b:	ret    
   14000797c:	xor    eax,eax
   14000797e:	ret    
   14000797f:	int3   
   140007980:	jmp    QWORD PTR [rip+0x181a]        # 0x1400091a0
   140007986:	int3   
   140007987:	int3   
   140007988:	mov    QWORD PTR [rsp+0x8],rbx
   14000798d:	push   rdi
   14000798e:	sub    rsp,0x20
   140007992:	lea    rbx,[rip+0x3507]        # 0x14000aea0
   140007999:	lea    rdi,[rip+0x3500]        # 0x14000aea0
   1400079a0:	jmp    0x1400079b0
   1400079a2:	mov    rax,QWORD PTR [rbx]
   1400079a5:	test   rax,rax
   1400079a8:	je     0x1400079ac
   1400079aa:	call   rax
   1400079ac:	add    rbx,0x8
   1400079b0:	cmp    rbx,rdi
   1400079b3:	jb     0x1400079a2
   1400079b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079ba:	add    rsp,0x20
   1400079be:	pop    rdi
   1400079bf:	ret    
   1400079c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400079c5:	push   rdi
   1400079c6:	sub    rsp,0x20
   1400079ca:	lea    rbx,[rip+0x34df]        # 0x14000aeb0
   1400079d1:	lea    rdi,[rip+0x34d8]        # 0x14000aeb0
   1400079d8:	jmp    0x1400079e8
   1400079da:	mov    rax,QWORD PTR [rbx]
   1400079dd:	test   rax,rax
   1400079e0:	je     0x1400079e4
   1400079e2:	call   rax
   1400079e4:	add    rbx,0x8
   1400079e8:	cmp    rbx,rdi
   1400079eb:	jb     0x1400079da
   1400079ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079f2:	add    rsp,0x20
   1400079f6:	pop    rdi
   1400079f7:	ret    
   1400079f8:	jmp    QWORD PTR [rip+0x17aa]        # 0x1400091a8
   1400079fe:	jmp    QWORD PTR [rip+0x17ac]        # 0x1400091b0
   140007a04:	jmp    QWORD PTR [rip+0x17ae]        # 0x1400091b8
   140007a0a:	jmp    QWORD PTR [rip+0x17b0]        # 0x1400091c0
   140007a10:	jmp    QWORD PTR [rip+0x1672]        # 0x140009088
   140007a16:	jmp    QWORD PTR [rip+0x1674]        # 0x140009090
   140007a1c:	jmp    QWORD PTR [rip+0x1606]        # 0x140009028
   140007a22:	jmp    QWORD PTR [rip+0x15f8]        # 0x140009020
   140007a28:	jmp    QWORD PTR [rip+0x15ea]        # 0x140009018
   140007a2e:	jmp    QWORD PTR [rip+0x15dc]        # 0x140009010
   140007a34:	jmp    QWORD PTR [rip+0x15ce]        # 0x140009008
   140007a3a:	jmp    QWORD PTR [rip+0x15c0]        # 0x140009000
   140007a40:	mov    rcx,QWORD PTR [rdx+0x40]
   140007a47:	add    rcx,0x8
   140007a4b:	jmp    0x140003c50
   140007a50:	mov    QWORD PTR [rsp+0x10],rdx
   140007a55:	push   rbp
   140007a56:	sub    rsp,0x20
   140007a5a:	mov    rbp,rdx
   140007a5d:	mov    rcx,QWORD PTR [rbp+0x48]
   140007a61:	test   rcx,rcx
   140007a64:	je     0x140007a70
   140007a66:	mov    rax,QWORD PTR [rcx]
   140007a69:	mov    edx,0x1
   140007a6e:	call   QWORD PTR [rax]
   140007a70:	xor    edx,edx
   140007a72:	xor    ecx,ecx
   140007a74:	call   0x140007330
   140007a79:	nop
   140007a7a:	int3   
   140007a7b:	int3   
   140007a7c:	int3   
   140007a7d:	int3   
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	mov    rcx,QWORD PTR [rdx+0x40]
   140007a87:	add    rcx,0x8
   140007a8b:	jmp    0x140003c50
   140007a90:	mov    QWORD PTR [rsp+0x10],rdx
   140007a95:	push   rbp
   140007a96:	sub    rsp,0x20
   140007a9a:	mov    rbp,rdx
   140007a9d:	mov    rcx,QWORD PTR [rbp+0x48]
   140007aa1:	test   rcx,rcx
   140007aa4:	je     0x140007ab0
   140007aa6:	mov    rax,QWORD PTR [rcx]
   140007aa9:	mov    edx,0x1
   140007aae:	call   QWORD PTR [rax]
   140007ab0:	xor    edx,edx
   140007ab2:	xor    ecx,ecx
   140007ab4:	call   0x140007330
   140007ab9:	nop
   140007aba:	int3   
   140007abb:	int3   
   140007abc:	int3   
   140007abd:	int3   
   140007abe:	int3   
   140007abf:	int3   
   140007ac0:	mov    QWORD PTR [rsp+0x10],rdx
   140007ac5:	push   rbx
   140007ac6:	push   rbp
   140007ac7:	push   rsi
   140007ac8:	push   rdi
   140007ac9:	sub    rsp,0x28
   140007acd:	mov    rbp,rdx
   140007ad0:	mov    rbx,QWORD PTR [rbp+0x50]
   140007ad4:	mov    rdi,QWORD PTR [rbp+0x60]
   140007ad8:	cmp    rbx,rdi
   140007adb:	je     0x140007af5
   140007add:	mov    rsi,QWORD PTR [rbp+0x68]
   140007ae1:	mov    rdx,rbx
   140007ae4:	mov    rcx,rsi
   140007ae7:	call   0x140001940
   140007aec:	add    rbx,0x20
   140007af0:	cmp    rbx,rdi
   140007af3:	jne    0x140007ae1
   140007af5:	xor    edx,edx
   140007af7:	xor    ecx,ecx
   140007af9:	call   0x140007330
   140007afe:	nop
   140007aff:	int3   
   140007b00:	rex push rbp
   140007b02:	sub    rsp,0x20
   140007b06:	mov    rbp,rdx
   140007b09:	mov    rdx,QWORD PTR [rbp+0x48]
   140007b0d:	mov    rcx,QWORD PTR [rbp+0x58]
   140007b11:	call   0x140003da0
   140007b16:	add    rsp,0x20
   140007b1a:	pop    rbp
   140007b1b:	ret    
   140007b1c:	int3   
   140007b1d:	int3   
   140007b1e:	int3   
   140007b1f:	int3   
   140007b20:	rex push rbp
   140007b22:	sub    rsp,0x20
   140007b26:	mov    rbp,rdx
   140007b29:	mov    rdx,QWORD PTR [rbp+0x48]
   140007b2d:	mov    rcx,QWORD PTR [rbp+0x58]
   140007b31:	call   0x140003da0
   140007b36:	add    rsp,0x20
   140007b3a:	pop    rbp
   140007b3b:	ret    
   140007b3c:	int3   
   140007b3d:	int3   
   140007b3e:	int3   
   140007b3f:	int3   
   140007b40:	lea    rcx,[rdx+0xa0]
   140007b47:	jmp    0x140003bc0
   140007b4c:	lea    rcx,[rdx+0xa0]
   140007b53:	jmp    0x140003ac0
   140007b58:	rex push rbp
   140007b5a:	sub    rsp,0x20
   140007b5e:	mov    rbp,rdx
   140007b61:	mov    eax,DWORD PTR [rbp+0x20]
   140007b64:	and    eax,0x2
   140007b67:	test   eax,eax
   140007b69:	je     0x140007b7c
   140007b6b:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140007b6f:	lea    rcx,[rbp+0x40]
   140007b73:	add    rcx,0x50
   140007b77:	call   0x140003ba0
   140007b7c:	add    rsp,0x20
   140007b80:	pop    rbp
   140007b81:	ret    
   140007b82:	lea    rcx,[rdx+0x40]
   140007b89:	jmp    0x140003bc0
   140007b8e:	lea    rcx,[rdx+0x40]
   140007b95:	jmp    0x140003ac0
   140007b9a:	lea    rcx,[rdx+0x150]
   140007ba1:	jmp    0x140003930
   140007ba6:	lea    rcx,[rdx+0x140]
   140007bad:	jmp    0x140003930
   140007bb2:	lea    rcx,[rdx+0x40]
   140007bb9:	jmp    0x140003ee0
   140007bbe:	rex push rbp
   140007bc0:	mov    rbp,rdx
   140007bc3:	mov    eax,DWORD PTR [rip+0x6b2f]        # 0x14000e6f8
   140007bc9:	and    eax,0xfffffffe
   140007bcc:	mov    DWORD PTR [rip+0x6b26],eax        # 0x14000e6f8
   140007bd2:	pop    rbp
   140007bd3:	ret    
   140007bd4:	mov    rcx,QWORD PTR [rdx+0x158]
   140007bdb:	jmp    0x1400071e2
   140007be0:	rex push rbp
   140007be2:	sub    rsp,0x20
   140007be6:	mov    rbp,rdx
   140007be9:	mov    eax,DWORD PTR [rbp+0x20]
   140007bec:	and    eax,0x4
   140007bef:	test   eax,eax
   140007bf1:	je     0x140007c07
   140007bf3:	and    DWORD PTR [rbp+0x20],0xfffffffb
   140007bf7:	mov    rcx,QWORD PTR [rbp+0x158]
   140007bfe:	add    rcx,0x50
   140007c02:	call   0x140003ba0
   140007c07:	add    rsp,0x20
   140007c0b:	pop    rbp
   140007c0c:	ret    
   140007c0d:	lea    rcx,[rdx+0x28]
   140007c14:	add    rcx,0x8
   140007c18:	jmp    0x140003c50
   140007c1d:	int3   
   140007c1e:	int3   
   140007c1f:	int3   
   140007c20:	lea    rcx,[rdx+0xa0]
   140007c27:	jmp    0x140003bc0
   140007c2c:	lea    rcx,[rdx+0xa0]
   140007c33:	jmp    0x140003b40
   140007c38:	rex push rbp
   140007c3a:	sub    rsp,0x20
   140007c3e:	mov    rbp,rdx
   140007c41:	mov    eax,DWORD PTR [rbp+0x20]
   140007c44:	and    eax,0x2
   140007c47:	test   eax,eax
   140007c49:	je     0x140007c5c
   140007c4b:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140007c4f:	lea    rcx,[rbp+0x40]
   140007c53:	add    rcx,0x50
   140007c57:	call   0x140003ba0
   140007c5c:	add    rsp,0x20
   140007c60:	pop    rbp
   140007c61:	ret    
   140007c62:	lea    rcx,[rdx+0x40]
   140007c69:	jmp    0x140003bc0
   140007c6e:	lea    rcx,[rdx+0x40]
   140007c75:	jmp    0x140003b40
   140007c7a:	lea    rcx,[rdx+0x150]
   140007c81:	jmp    0x140003930
   140007c86:	lea    rcx,[rdx+0x140]
   140007c8d:	jmp    0x140003930
   140007c92:	lea    rcx,[rdx+0x40]
   140007c99:	jmp    0x140003f00
   140007c9e:	rex push rbp
   140007ca0:	mov    rbp,rdx
   140007ca3:	mov    eax,DWORD PTR [rip+0x6a67]        # 0x14000e710
   140007ca9:	and    eax,0xfffffffe
   140007cac:	mov    DWORD PTR [rip+0x6a5e],eax        # 0x14000e710
   140007cb2:	pop    rbp
   140007cb3:	ret    
   140007cb4:	mov    rcx,QWORD PTR [rdx+0x158]
   140007cbb:	jmp    0x1400071e2
   140007cc0:	rex push rbp
   140007cc2:	sub    rsp,0x20
   140007cc6:	mov    rbp,rdx
   140007cc9:	mov    eax,DWORD PTR [rbp+0x20]
   140007ccc:	and    eax,0x4
   140007ccf:	test   eax,eax
   140007cd1:	je     0x140007ce7
   140007cd3:	and    DWORD PTR [rbp+0x20],0xfffffffb
   140007cd7:	mov    rcx,QWORD PTR [rbp+0x158]
   140007cde:	add    rcx,0x50
   140007ce2:	call   0x140003ba0
   140007ce7:	add    rsp,0x20
   140007ceb:	pop    rbp
   140007cec:	ret    
   140007ced:	lea    rcx,[rdx+0x28]
   140007cf4:	add    rcx,0x8
   140007cf8:	jmp    0x140003c50
   140007cfd:	int3   
   140007cfe:	int3   
   140007cff:	int3   
   140007d00:	lea    rcx,[rdx+0xb0]
   140007d07:	jmp    0x1400038b0
   140007d0c:	int3   
   140007d0d:	int3   
   140007d0e:	int3   
   140007d0f:	int3   
   140007d10:	rex push rbp
   140007d12:	sub    rsp,0x20
   140007d16:	mov    rbp,rdx
   140007d19:	mov    eax,DWORD PTR [rbp+0x58]
   140007d1c:	and    eax,0x1
   140007d1f:	test   eax,eax
   140007d21:	je     0x140007d37
   140007d23:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140007d27:	mov    rcx,QWORD PTR [rbp+0x40]
   140007d2b:	add    rcx,0x80
   140007d32:	call   0x140003ba0
   140007d37:	add    rsp,0x20
   140007d3b:	pop    rbp
   140007d3c:	ret    
   140007d3d:	mov    rcx,QWORD PTR [rdx+0x40]
   140007d44:	jmp    0x1400038b0
   140007d49:	int3   
   140007d4a:	int3   
   140007d4b:	int3   
   140007d4c:	int3   
   140007d4d:	int3   
   140007d4e:	int3   
   140007d4f:	int3   
   140007d50:	rex push rbp
   140007d52:	sub    rsp,0x20
   140007d56:	mov    rbp,rdx
   140007d59:	mov    eax,DWORD PTR [rbp+0x50]
   140007d5c:	and    eax,0x1
   140007d5f:	test   eax,eax
   140007d61:	je     0x140007d77
   140007d63:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140007d67:	mov    rcx,QWORD PTR [rbp+0x40]
   140007d6b:	add    rcx,0x80
   140007d72:	call   0x140003ba0
   140007d77:	add    rsp,0x20
   140007d7b:	pop    rbp
   140007d7c:	ret    
   140007d7d:	mov    rcx,QWORD PTR [rdx+0x40]
   140007d84:	jmp    0x1400038b0
   140007d89:	int3   
   140007d8a:	int3   
   140007d8b:	int3   
   140007d8c:	int3   
   140007d8d:	int3   
   140007d8e:	int3   
   140007d8f:	int3   
   140007d90:	rex push rbp
   140007d92:	sub    rsp,0x20
   140007d96:	mov    rbp,rdx
   140007d99:	mov    eax,DWORD PTR [rbp+0x50]
   140007d9c:	and    eax,0x1
   140007d9f:	test   eax,eax
   140007da1:	je     0x140007db7
   140007da3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140007da7:	mov    rcx,QWORD PTR [rbp+0x40]
   140007dab:	add    rcx,0x80
   140007db2:	call   0x140003ba0
   140007db7:	add    rsp,0x20
   140007dbb:	pop    rbp
   140007dbc:	ret    
   140007dbd:	int3   
   140007dbe:	int3   
   140007dbf:	int3   
   140007dc0:	rex push rbp
   140007dc2:	sub    rsp,0x20
   140007dc6:	mov    rbp,rdx
   140007dc9:	mov    eax,DWORD PTR [rbp+0x58]
   140007dcc:	and    eax,0x1
   140007dcf:	test   eax,eax
   140007dd1:	je     0x140007de4
   140007dd3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140007dd7:	mov    rcx,QWORD PTR [rbp+0x40]
   140007ddb:	add    rcx,0x50
   140007ddf:	call   0x140003ba0
   140007de4:	add    rsp,0x20
   140007de8:	pop    rbp
   140007de9:	ret    
   140007dea:	mov    rcx,QWORD PTR [rdx+0x40]
   140007df1:	jmp    0x140003ac0
   140007df6:	int3   
   140007df7:	int3   
   140007df8:	int3   
   140007df9:	int3   
   140007dfa:	int3   
   140007dfb:	int3   
   140007dfc:	int3   
   140007dfd:	int3   
   140007dfe:	int3   
   140007dff:	int3   
   140007e00:	rex push rbp
   140007e02:	sub    rsp,0x20
   140007e06:	mov    rbp,rdx
   140007e09:	mov    eax,DWORD PTR [rbp+0x50]
   140007e0c:	and    eax,0x1
   140007e0f:	test   eax,eax
   140007e11:	je     0x140007e24
   140007e13:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140007e17:	mov    rcx,QWORD PTR [rbp+0x40]
   140007e1b:	add    rcx,0x50
   140007e1f:	call   0x140003ba0
   140007e24:	add    rsp,0x20
   140007e28:	pop    rbp
   140007e29:	ret    
   140007e2a:	mov    rcx,QWORD PTR [rdx+0x40]
   140007e31:	jmp    0x140003ac0
   140007e36:	int3   
   140007e37:	int3   
   140007e38:	int3   
   140007e39:	int3   
   140007e3a:	int3   
   140007e3b:	int3   
   140007e3c:	int3   
   140007e3d:	int3   
   140007e3e:	int3   
   140007e3f:	int3   
   140007e40:	rex push rbp
   140007e42:	sub    rsp,0x20
   140007e46:	mov    rbp,rdx
   140007e49:	mov    eax,DWORD PTR [rbp+0x50]
   140007e4c:	and    eax,0x1
   140007e4f:	test   eax,eax
   140007e51:	je     0x140007e64
   140007e53:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140007e57:	mov    rcx,QWORD PTR [rbp+0x40]
   140007e5b:	add    rcx,0x50
   140007e5f:	call   0x140003ba0
   140007e64:	add    rsp,0x20
   140007e68:	pop    rbp
   140007e69:	ret    
   140007e6a:	int3   
   140007e6b:	int3   
   140007e6c:	int3   
   140007e6d:	int3   
   140007e6e:	int3   
   140007e6f:	int3   
   140007e70:	rex push rbp
   140007e72:	sub    rsp,0x20
   140007e76:	mov    rbp,rdx
   140007e79:	mov    eax,DWORD PTR [rbp+0x58]
   140007e7c:	and    eax,0x1
   140007e7f:	test   eax,eax
   140007e81:	je     0x140007e94
   140007e83:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140007e87:	mov    rcx,QWORD PTR [rbp+0x40]
   140007e8b:	add    rcx,0x50
   140007e8f:	call   0x140003ba0
   140007e94:	add    rsp,0x20
   140007e98:	pop    rbp
   140007e99:	ret    
   140007e9a:	mov    rcx,QWORD PTR [rdx+0x40]
   140007ea1:	jmp    0x140003b40
   140007ea6:	int3   
   140007ea7:	int3   
   140007ea8:	int3   
   140007ea9:	int3   
   140007eaa:	int3   
   140007eab:	int3   
   140007eac:	int3   
   140007ead:	int3   
   140007eae:	int3   
   140007eaf:	int3   
   140007eb0:	rex push rbp
   140007eb2:	sub    rsp,0x20
   140007eb6:	mov    rbp,rdx
   140007eb9:	mov    eax,DWORD PTR [rbp+0x50]
   140007ebc:	and    eax,0x1
   140007ebf:	test   eax,eax
   140007ec1:	je     0x140007ed4
   140007ec3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140007ec7:	mov    rcx,QWORD PTR [rbp+0x40]
   140007ecb:	add    rcx,0x50
   140007ecf:	call   0x140003ba0
   140007ed4:	add    rsp,0x20
   140007ed8:	pop    rbp
   140007ed9:	ret    
   140007eda:	mov    rcx,QWORD PTR [rdx+0x40]
   140007ee1:	jmp    0x140003b40
   140007ee6:	int3   
   140007ee7:	int3   
   140007ee8:	int3   
   140007ee9:	int3   
   140007eea:	int3   
   140007eeb:	int3   
   140007eec:	int3   
   140007eed:	int3   
   140007eee:	int3   
   140007eef:	int3   
   140007ef0:	rex push rbp
   140007ef2:	sub    rsp,0x20
   140007ef6:	mov    rbp,rdx
   140007ef9:	mov    eax,DWORD PTR [rbp+0x50]
   140007efc:	and    eax,0x1
   140007eff:	test   eax,eax
   140007f01:	je     0x140007f14
   140007f03:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140007f07:	mov    rcx,QWORD PTR [rbp+0x40]
   140007f0b:	add    rcx,0x50
   140007f0f:	call   0x140003ba0
   140007f14:	add    rsp,0x20
   140007f18:	pop    rbp
   140007f19:	ret    
   140007f1a:	int3   
   140007f1b:	int3   
   140007f1c:	int3   
   140007f1d:	int3   
   140007f1e:	int3   
   140007f1f:	int3   
   140007f20:	mov    rcx,QWORD PTR [rdx+0x40]
   140007f27:	jmp    0x140003d40
   140007f2c:	int3   
   140007f2d:	int3   
   140007f2e:	int3   
   140007f2f:	int3   
   140007f30:	mov    rcx,QWORD PTR [rdx+0x40]
   140007f37:	jmp    0x140003bc0
   140007f3c:	int3   
   140007f3d:	int3   
   140007f3e:	int3   
   140007f3f:	int3   
   140007f40:	mov    rcx,QWORD PTR [rdx+0x40]
   140007f47:	jmp    0x140003bc0
   140007f4c:	int3   
   140007f4d:	int3   
   140007f4e:	int3   
   140007f4f:	int3   
   140007f50:	mov    rcx,QWORD PTR [rdx+0x40]
   140007f57:	jmp    0x140003c40
   140007f5c:	int3   
   140007f5d:	int3   
   140007f5e:	int3   
   140007f5f:	int3   
   140007f60:	mov    QWORD PTR [rsp+0x10],rdx
   140007f65:	push   rbp
   140007f66:	sub    rsp,0x20
   140007f6a:	mov    rbp,rdx
   140007f6d:	mov    rcx,QWORD PTR [rbp+0x68]
   140007f71:	mov    QWORD PTR [rbp+0x68],rcx
   140007f75:	xor    eax,eax
   140007f77:	inc    rcx
   140007f7a:	je     0x140007f92
   140007f7c:	cmp    rcx,0xffffffffffffffff
   140007f80:	ja     0x140007f8c
   140007f82:	call   0x1400071dc
   140007f87:	test   rax,rax
   140007f8a:	jne    0x140007f92
   140007f8c:	call   QWORD PTR [rip+0x10de]        # 0x140009070
   140007f92:	mov    QWORD PTR [rbp+0x78],rax
   140007f96:	lea    rax,[rip+0xffffffffffffc7e9]        # 0x140004786
   140007f9d:	add    rsp,0x20
   140007fa1:	pop    rbp
   140007fa2:	ret    
   140007fa3:	int3   
   140007fa4:	mov    QWORD PTR [rsp+0x10],rdx
   140007fa9:	push   rbx
   140007faa:	push   rbp
   140007fab:	sub    rsp,0x28
   140007faf:	mov    rbp,rdx
   140007fb2:	mov    rbx,QWORD PTR [rbp+0x60]
   140007fb6:	cmp    QWORD PTR [rbx+0x18],0x10
   140007fbb:	jb     0x140007fc5
   140007fbd:	mov    rcx,QWORD PTR [rbx]
   140007fc0:	call   0x1400071e2
   140007fc5:	mov    QWORD PTR [rbx+0x18],0xf
   140007fcd:	mov    QWORD PTR [rbx+0x10],0x0
   140007fd5:	mov    BYTE PTR [rbx],0x0
   140007fd8:	xor    edx,edx
   140007fda:	xor    ecx,ecx
   140007fdc:	call   0x140007330
   140007fe1:	nop
   140007fe2:	int3   
   140007fe3:	int3   
   140007fe4:	int3   
   140007fe5:	int3   
   140007fe6:	int3   
   140007fe7:	int3   
   140007fe8:	int3   
   140007fe9:	int3   
   140007fea:	int3   
   140007feb:	int3   
   140007fec:	int3   
   140007fed:	int3   
   140007fee:	int3   
   140007fef:	int3   
   140007ff0:	mov    QWORD PTR [rsp+0x10],rdx
   140007ff5:	push   rbp
   140007ff6:	sub    rsp,0x20
   140007ffa:	mov    rbp,rdx
   140007ffd:	mov    rcx,QWORD PTR [rbp+0x68]
   140008001:	mov    QWORD PTR [rbp+0x68],rcx
   140008005:	xor    eax,eax
   140008007:	inc    rcx
   14000800a:	je     0x14000802e
   14000800c:	movabs rax,0x7fffffffffffffff
   140008016:	cmp    rcx,rax
   140008019:	ja     0x140008028
   14000801b:	add    rcx,rcx
   14000801e:	call   0x1400071dc
   140008023:	test   rax,rax
   140008026:	jne    0x14000802e
   140008028:	call   QWORD PTR [rip+0x1042]        # 0x140009070
   14000802e:	mov    QWORD PTR [rbp+0x78],rax
   140008032:	lea    rax,[rip+0xffffffffffffc873]        # 0x1400048ac
   140008039:	add    rsp,0x20
   14000803d:	pop    rbp
   14000803e:	ret    
   14000803f:	int3   
   140008040:	mov    QWORD PTR [rsp+0x10],rdx
   140008045:	push   rbx
   140008046:	push   rbp
   140008047:	sub    rsp,0x28
   14000804b:	mov    rbp,rdx
   14000804e:	mov    rbx,QWORD PTR [rbp+0x60]
   140008052:	cmp    QWORD PTR [rbx+0x18],0x8
   140008057:	jb     0x140008061
   140008059:	mov    rcx,QWORD PTR [rbx]
   14000805c:	call   0x1400071e2
   140008061:	mov    QWORD PTR [rbx+0x18],0x7
   140008069:	mov    QWORD PTR [rbx+0x10],0x0
   140008071:	xor    eax,eax
   140008073:	mov    WORD PTR [rbx],ax
   140008076:	xor    edx,edx
   140008078:	xor    ecx,ecx
   14000807a:	call   0x140007330
   14000807f:	nop
   140008080:	mov    QWORD PTR [rsp+0x10],rdx
   140008085:	push   rbp
   140008086:	sub    rsp,0x30
   14000808a:	mov    rbp,rdx
   14000808d:	mov    rcx,QWORD PTR [rbp+0x80]
   140008094:	call   0x1400071e2
   140008099:	xor    edx,edx
   14000809b:	xor    ecx,ecx
   14000809d:	call   0x140007330
   1400080a2:	nop
   1400080a3:	int3   
   1400080a4:	int3   
   1400080a5:	int3   
   1400080a6:	int3   
   1400080a7:	int3   
   1400080a8:	int3   
   1400080a9:	int3   
   1400080aa:	int3   
   1400080ab:	int3   
   1400080ac:	int3   
   1400080ad:	int3   
   1400080ae:	int3   
   1400080af:	int3   
   1400080b0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400080b7:	jmp    0x1400071e2
   1400080bc:	int3   
   1400080bd:	int3   
   1400080be:	int3   
   1400080bf:	int3   
   1400080c0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400080c7:	jmp    0x1400071e2
   1400080cc:	rex push rbp
   1400080ce:	sub    rsp,0x20
   1400080d2:	mov    rbp,rdx
   1400080d5:	mov    eax,DWORD PTR [rbp+0x48]
   1400080d8:	and    eax,0x1
   1400080db:	test   eax,eax
   1400080dd:	je     0x1400080f0
   1400080df:	and    DWORD PTR [rbp+0x48],0xfffffffe
   1400080e3:	mov    rcx,QWORD PTR [rbp+0x50]
   1400080e7:	add    rcx,0x50
   1400080eb:	call   0x140003ba0
   1400080f0:	add    rsp,0x20
   1400080f4:	pop    rbp
   1400080f5:	ret    
   1400080f6:	mov    rcx,QWORD PTR [rdx+0x50]
   1400080fd:	jmp    0x140003ac0
   140008102:	int3   
   140008103:	int3   
   140008104:	int3   
   140008105:	int3   
   140008106:	int3   
   140008107:	int3   
   140008108:	int3   
   140008109:	int3   
   14000810a:	int3   
   14000810b:	int3   
   14000810c:	int3   
   14000810d:	int3   
   14000810e:	int3   
   14000810f:	int3   
   140008110:	mov    rcx,QWORD PTR [rdx+0x50]
   140008117:	jmp    0x1400071e2
   14000811c:	rex push rbp
   14000811e:	sub    rsp,0x20
   140008122:	mov    rbp,rdx
   140008125:	mov    eax,DWORD PTR [rbp+0x48]
   140008128:	and    eax,0x1
   14000812b:	test   eax,eax
   14000812d:	je     0x140008140
   14000812f:	and    DWORD PTR [rbp+0x48],0xfffffffe
   140008133:	mov    rcx,QWORD PTR [rbp+0x50]
   140008137:	add    rcx,0x50
   14000813b:	call   0x140003ba0
   140008140:	add    rsp,0x20
   140008144:	pop    rbp
   140008145:	ret    
   140008146:	mov    rcx,QWORD PTR [rdx+0x50]
   14000814d:	jmp    0x140003b40
   140008152:	int3   
   140008153:	int3   
   140008154:	int3   
   140008155:	int3   
   140008156:	int3   
   140008157:	int3   
   140008158:	int3   
   140008159:	int3   
   14000815a:	int3   
   14000815b:	int3   
   14000815c:	int3   
   14000815d:	int3   
   14000815e:	int3   
   14000815f:	int3   
   140008160:	lea    rcx,[rdx+0x40]
   140008167:	jmp    0x140003930
   14000816c:	lea    rcx,[rdx+0x48]
   140008173:	jmp    0x140003930
   140008178:	int3   
   140008179:	int3   
   14000817a:	int3   
   14000817b:	int3   
   14000817c:	int3   
   14000817d:	int3   
   14000817e:	int3   
   14000817f:	int3   
   140008180:	lea    rcx,[rdx+0x38]
   140008187:	jmp    0x140003d40
   14000818c:	int3   
   14000818d:	int3   
   14000818e:	int3   
   14000818f:	int3   
   140008190:	rex push rbp
   140008192:	sub    rsp,0x20
   140008196:	mov    rbp,rdx
   140008199:	mov    rdx,QWORD PTR [rbp+0x50]
   14000819d:	mov    rcx,QWORD PTR [rbp+0x58]
   1400081a1:	call   0x140003da0
   1400081a6:	add    rsp,0x20
   1400081aa:	pop    rbp
   1400081ab:	ret    
   1400081ac:	rex push rbp
   1400081ae:	sub    rsp,0x20
   1400081b2:	mov    rbp,rdx
   1400081b5:	mov    rdx,QWORD PTR [rbp+0x50]
   1400081b9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400081bd:	call   0x140003da0
   1400081c2:	add    rsp,0x20
   1400081c6:	pop    rbp
   1400081c7:	ret    
   1400081c8:	int3   
   1400081c9:	int3   
   1400081ca:	int3   
   1400081cb:	int3   
   1400081cc:	int3   
   1400081cd:	int3   
   1400081ce:	int3   
   1400081cf:	int3   
   1400081d0:	rex push rbp
   1400081d2:	sub    rsp,0x20
   1400081d6:	mov    rbp,rdx
   1400081d9:	mov    eax,DWORD PTR [rbp+0xc0]
   1400081df:	and    eax,0x1
   1400081e2:	test   eax,eax
   1400081e4:	je     0x1400081fd
   1400081e6:	and    DWORD PTR [rbp+0xc0],0xfffffffe
   1400081ed:	lea    rcx,[rbp+0x20]
   1400081f1:	add    rcx,0x80
   1400081f8:	call   0x140003ba0
   1400081fd:	add    rsp,0x20
   140008201:	pop    rbp
   140008202:	ret    
   140008203:	lea    rcx,[rdx+0x20]
   14000820a:	jmp    0x140003c40
   14000820f:	lea    rcx,[rdx+0x20]
   140008216:	jmp    0x140003d40
   14000821b:	int3   
   14000821c:	int3   
   14000821d:	int3   
   14000821e:	int3   
   14000821f:	int3   
   140008220:	rex push rbp
   140008222:	sub    rsp,0x20
   140008226:	mov    rbp,rdx
   140008229:	mov    eax,DWORD PTR [rbp+0x90]
   14000822f:	and    eax,0x1
   140008232:	test   eax,eax
   140008234:	je     0x14000824a
   140008236:	and    DWORD PTR [rbp+0x90],0xfffffffe
   14000823d:	lea    rcx,[rbp+0x28]
   140008241:	add    rcx,0x50
   140008245:	call   0x140003ba0
   14000824a:	add    rsp,0x20
   14000824e:	pop    rbp
   14000824f:	ret    
   140008250:	lea    rcx,[rdx+0x28]
   140008257:	jmp    0x140003bc0
   14000825c:	int3   
   14000825d:	int3   
   14000825e:	int3   
   14000825f:	int3   
   140008260:	rex push rbp
   140008262:	sub    rsp,0x20
   140008266:	mov    rbp,rdx
   140008269:	mov    eax,DWORD PTR [rbp+0x90]
   14000826f:	and    eax,0x1
   140008272:	test   eax,eax
   140008274:	je     0x14000828a
   140008276:	and    DWORD PTR [rbp+0x90],0xfffffffe
   14000827d:	lea    rcx,[rbp+0x28]
   140008281:	add    rcx,0x50
   140008285:	call   0x140003ba0
   14000828a:	add    rsp,0x20
   14000828e:	pop    rbp
   14000828f:	ret    
   140008290:	lea    rcx,[rdx+0x28]
   140008297:	jmp    0x140003bc0
   14000829c:	int3   
   14000829d:	int3   
   14000829e:	int3   
   14000829f:	int3   
   1400082a0:	lea    rcx,[rdx+0x28]
   1400082a7:	jmp    0x1400036e0
   1400082ac:	mov    QWORD PTR [rsp+0x10],rdx
   1400082b1:	push   rbp
   1400082b2:	sub    rsp,0x20
   1400082b6:	mov    rbp,rdx
   1400082b9:	mov    rcx,QWORD PTR [rbp+0x60]
   1400082bd:	call   QWORD PTR [rip+0xe2d]        # 0x1400090f0
   1400082c3:	mov    QWORD PTR [rbp+0x60],rax
   1400082c7:	lea    rax,[rip+0xffffffffffffeabc]        # 0x140006d8a
   1400082ce:	add    rsp,0x20
   1400082d2:	pop    rbp
   1400082d3:	ret    
   1400082d4:	int3   
   1400082d5:	int3   
   1400082d6:	int3   
   1400082d7:	int3   
   1400082d8:	int3   
   1400082d9:	int3   
   1400082da:	int3   
   1400082db:	int3   
   1400082dc:	int3   
   1400082dd:	int3   
   1400082de:	int3   
   1400082df:	int3   
   1400082e0:	lea    rcx,[rdx+0x58]
   1400082e7:	jmp    0x140003a50
   1400082ec:	lea    rcx,[rdx+0x30]
   1400082f3:	jmp    0x1400036e0
   1400082f8:	lea    rcx,[rdx+0x30]
   1400082ff:	jmp    0x140003720
   140008304:	lea    rcx,[rdx+0x30]
   14000830b:	jmp    0x140003a60
   140008310:	lea    rcx,[rdx+0xa0]
   140008317:	rex.W jmp QWORD PTR [rip+0xefa]        # 0x140009218
   14000831e:	lea    rcx,[rdx+0x80]
   140008325:	rex.W jmp QWORD PTR [rip+0xedc]        # 0x140009208
   14000832c:	mov    QWORD PTR [rsp+0x10],rdx
   140008331:	push   rbp
   140008332:	sub    rsp,0x30
   140008336:	mov    rbp,rdx
   140008339:	mov    DWORD PTR [rbp+0x50],0x1
   140008340:	lea    rax,[rip+0xffffffffffffec93]        # 0x140006fda
   140008347:	add    rsp,0x30
   14000834b:	pop    rbp
   14000834c:	ret    
   14000834d:	int3   
   14000834e:	rex push rbp
   140008350:	sub    rsp,0x20
   140008354:	mov    rbp,rdx
   140008357:	cmp    DWORD PTR [rbp+0x20],0x0
   14000835b:	jne    0x140008373
   14000835d:	mov    r9,QWORD PTR [rbp+0x78]
   140008361:	mov    r8d,DWORD PTR [rbp+0x70]
   140008365:	mov    rdx,QWORD PTR [rbp+0x68]
   140008369:	mov    rcx,QWORD PTR [rbp+0x60]
   14000836d:	call   0x14000718c
   140008372:	nop
   140008373:	add    rsp,0x20
   140008377:	pop    rbp
   140008378:	ret    
   140008379:	int3   
   14000837a:	rex push rbp
   14000837c:	sub    rsp,0x20
   140008380:	mov    rbp,rdx
   140008383:	mov    QWORD PTR [rbp+0x38],rcx
   140008387:	mov    QWORD PTR [rbp+0x28],rcx
   14000838b:	mov    rax,QWORD PTR [rbp+0x28]
   14000838f:	mov    rcx,QWORD PTR [rax]
   140008392:	mov    QWORD PTR [rbp+0x30],rcx
   140008396:	mov    rax,QWORD PTR [rbp+0x30]
   14000839a:	cmp    DWORD PTR [rax],0xe06d7363
   1400083a0:	je     0x1400083ae
   1400083a2:	mov    DWORD PTR [rbp+0x20],0x0
   1400083a9:	mov    eax,DWORD PTR [rbp+0x20]
   1400083ac:	jmp    0x1400083b4
   1400083ae:	call   0x14000774a
   1400083b3:	nop
   1400083b4:	add    rsp,0x20
   1400083b8:	pop    rbp
   1400083b9:	ret    
   1400083ba:	int3   
   1400083bb:	rex push rbp
   1400083bd:	sub    rsp,0x20
   1400083c1:	mov    rbp,rdx
   1400083c4:	mov    ecx,0x8
   1400083c9:	call   0x14000775c
   1400083ce:	nop
   1400083cf:	add    rsp,0x20
   1400083d3:	pop    rbp
   1400083d4:	ret    
   1400083d5:	int3   
   1400083d6:	rex push rbp
   1400083d8:	sub    rsp,0x20
   1400083dc:	mov    rbp,rdx
   1400083df:	mov    rax,QWORD PTR [rcx]
   1400083e2:	mov    rdx,rcx
   1400083e5:	mov    ecx,DWORD PTR [rax]
   1400083e7:	call   0x1400077c0
   1400083ec:	nop
   1400083ed:	add    rsp,0x20
   1400083f1:	pop    rbp
   1400083f2:	ret    
   1400083f3:	int3   
   1400083f4:	int3   
   1400083f5:	int3   
   1400083f6:	int3   
   1400083f7:	int3   
   1400083f8:	int3   
   1400083f9:	int3   
   1400083fa:	int3   
   1400083fb:	int3   
   1400083fc:	int3   
   1400083fd:	int3   
   1400083fe:	int3   
   1400083ff:	int3   
   140008400:	rex push rbp
   140008402:	sub    rsp,0x20
   140008406:	mov    rbp,rdx
   140008409:	mov    rax,QWORD PTR [rcx]
   14000840c:	xor    ecx,ecx
   14000840e:	cmp    DWORD PTR [rax],0xc0000005
   140008414:	sete   cl
   140008417:	mov    eax,ecx
   140008419:	add    rsp,0x20
   14000841d:	pop    rbp
   14000841e:	ret    
   14000841f:	int3   
   140008420:	lea    rax,[rip+0x1509]        # 0x140009930
   140008427:	mov    QWORD PTR [rip+0x5bd2],rax        # 0x14000e000
   14000842e:	ret    
   14000842f:	int3   
   140008430:	lea    rax,[rip+0x14f9]        # 0x140009930
   140008437:	mov    QWORD PTR [rip+0x5bca],rax        # 0x14000e008
   14000843e:	ret    
   14000843f:	int3   
   140008440:	lea    rax,[rip+0x14e9]        # 0x140009930
   140008447:	mov    QWORD PTR [rip+0x5bc2],rax        # 0x14000e010
   14000844e:	ret    
   14000844f:	int3   
   140008450:	rex push rbx
   140008452:	sub    rsp,0x20
   140008456:	mov    rbx,QWORD PTR [rip+0x6273]        # 0x14000e6d0
   14000845d:	test   rbx,rbx
   140008460:	je     0x14000848a
   140008462:	lock dec DWORD PTR [rbx+0x8]
   140008466:	mov    QWORD PTR [rsp+0x30],rdi
   14000846b:	jne    0x140008485
   14000846d:	mov    rax,QWORD PTR [rbx]
   140008470:	mov    rcx,rbx
   140008473:	call   QWORD PTR [rax+0x8]
   140008476:	lock dec DWORD PTR [rbx+0xc]
   14000847a:	jne    0x140008485
   14000847c:	mov    rax,QWORD PTR [rbx]
   14000847f:	mov    rcx,rbx
   140008482:	call   QWORD PTR [rax+0x10]
   140008485:	mov    rdi,QWORD PTR [rsp+0x30]
   14000848a:	add    rsp,0x20
   14000848e:	pop    rbx
   14000848f:	ret    
   140008490:	rex push rbx
   140008492:	sub    rsp,0x20
   140008496:	mov    rbx,QWORD PTR [rip+0x6243]        # 0x14000e6e0
   14000849d:	test   rbx,rbx
   1400084a0:	je     0x1400084ca
   1400084a2:	lock dec DWORD PTR [rbx+0x8]
   1400084a6:	mov    QWORD PTR [rsp+0x30],rdi
   1400084ab:	jne    0x1400084c5
   1400084ad:	mov    rax,QWORD PTR [rbx]
   1400084b0:	mov    rcx,rbx
   1400084b3:	call   QWORD PTR [rax+0x8]
   1400084b6:	lock dec DWORD PTR [rbx+0xc]
   1400084ba:	jne    0x1400084c5
   1400084bc:	mov    rax,QWORD PTR [rbx]
   1400084bf:	mov    rcx,rbx
   1400084c2:	call   QWORD PTR [rax+0x10]
   1400084c5:	mov    rdi,QWORD PTR [rsp+0x30]
   1400084ca:	add    rsp,0x20
   1400084ce:	pop    rbx
   1400084cf:	ret    
   1400084d0:	rex push rbx
   1400084d2:	sub    rsp,0x20
   1400084d6:	mov    rbx,QWORD PTR [rip+0x6213]        # 0x14000e6f0
   1400084dd:	test   rbx,rbx
   1400084e0:	je     0x14000850a
   1400084e2:	lock dec DWORD PTR [rbx+0x8]
   1400084e6:	mov    QWORD PTR [rsp+0x30],rdi
   1400084eb:	jne    0x140008505
   1400084ed:	mov    rax,QWORD PTR [rbx]
   1400084f0:	mov    rcx,rbx
   1400084f3:	call   QWORD PTR [rax+0x8]
   1400084f6:	lock dec DWORD PTR [rbx+0xc]
   1400084fa:	jne    0x140008505
   1400084fc:	mov    rax,QWORD PTR [rbx]
   1400084ff:	mov    rcx,rbx
   140008502:	call   QWORD PTR [rax+0x10]
   140008505:	mov    rdi,QWORD PTR [rsp+0x30]
   14000850a:	add    rsp,0x20
   14000850e:	pop    rbx
   14000850f:	ret    
   140008510:	rex push rbx
   140008512:	sub    rsp,0x20
   140008516:	mov    rbx,QWORD PTR [rip+0x61eb]        # 0x14000e708
   14000851d:	test   rbx,rbx
   140008520:	je     0x14000854a
   140008522:	lock dec DWORD PTR [rbx+0x8]
   140008526:	mov    QWORD PTR [rsp+0x30],rdi
   14000852b:	jne    0x140008545
   14000852d:	mov    rax,QWORD PTR [rbx]
   140008530:	mov    rcx,rbx
   140008533:	call   QWORD PTR [rax+0x8]
   140008536:	lock dec DWORD PTR [rbx+0xc]
   14000853a:	jne    0x140008545
   14000853c:	mov    rax,QWORD PTR [rbx]
   14000853f:	mov    rcx,rbx
   140008542:	call   QWORD PTR [rax+0x10]
   140008545:	mov    rdi,QWORD PTR [rsp+0x30]
   14000854a:	add    rsp,0x20
   14000854e:	pop    rbx
   14000854f:	ret    

Disassembly of section .rdata:

0000000140009000 <.rdata>:
   140009000:	(bad)  
   140009001:	fadd   DWORD PTR [rax]
   140009003:	add    BYTE PTR [rax],al
   140009005:	add    BYTE PTR [rax],al
   140009007:	add    BYTE PTR [rsi+0xd8],bh
   14000900d:	add    BYTE PTR [rax],al
   14000900f:	add    BYTE PTR [rax+0xd8],ch
   140009015:	add    BYTE PTR [rax],al
   140009017:	add    BYTE PTR [rsi+0xd8],cl
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rsi-0x28],bh
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	outs   dx,BYTE PTR ds:[rsi]
   140009029:	fadd   DWORD PTR [rax]
   14000902b:	add    BYTE PTR [rax],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rax+0xd4],dh
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rdx+0xd4],ah
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    BYTE PTR [rdx+0xd4],dl
	...
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    ah,ah
   140009051:	(bad)  
   140009052:	add    BYTE PTR [rax],al
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax],al
   140009058:	sub    ch,dl
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    BYTE PTR [rax],al
   140009060:	rex.W (bad) 
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	(bad)  
   140009069:	(bad)  
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	retf   0xd4
	...
   14000907f:	add    BYTE PTR [rax],cl
   140009081:	fadd   DWORD PTR [rax]
   140009083:	add    BYTE PTR [rax],al
   140009085:	add    BYTE PTR [rax],al
   140009087:	add    BYTE PTR [rax+rbx*8],dl
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	rex.WX fadd DWORD PTR [rax]
   140009093:	add    BYTE PTR [rax],al
   140009095:	add    BYTE PTR [rax],al
   140009097:	add    ah,dh
   140009099:	xlat   BYTE PTR ds:[rbx]
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	add    BYTE PTR [rax],al
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	(bad)  
   1400090a1:	xlat   BYTE PTR ds:[rbx]
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	jbe    0x14000907f
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	add    BYTE PTR [rax],al
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	(bad)  
   1400090b1:	(bad)  
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	xchg   esp,eax
   1400090b9:	(bad)  
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	add    BYTE PTR [rax],al
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400090c1:	(bad)  
   1400090c2:	add    BYTE PTR [rax],al
   1400090c4:	add    BYTE PTR [rax],al
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	scas   al,BYTE PTR es:[rdi]
   1400090c9:	(bad)  
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	add    BYTE PTR [rax],al
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	mov    eax,0xd5
   1400090d5:	add    BYTE PTR [rax],al
   1400090d7:	add    ah,bl
   1400090d9:	(bad)  
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	add    BYTE PTR [rax],al
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	add    dh,dl
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	add    BYTE PTR [rax],al
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	and    al,0xd6
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	add    BYTE PTR [rax],al
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	rex (bad) 
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	(bad)  
   1400090f9:	(bad)  
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	je     0x1400090d8
   140009102:	add    BYTE PTR [rax],al
   140009104:	add    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	mov    dl,dh
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	add    BYTE PTR [rax],al
   140009110:	movabs al,ds:0xaa000000000000d6
   140009119:	(bad)  
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	mov    ah,0xd6
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	mov    esi,0xd6
   14000912d:	add    BYTE PTR [rax],al
   14000912f:	add    dl,dl
   140009131:	(bad)  
   140009132:	add    BYTE PTR [rax],al
   140009134:	add    BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	clc    
   140009139:	(bad)  
   14000913a:	add    BYTE PTR [rax],al
   14000913c:	add    BYTE PTR [rax],al
   14000913e:	add    BYTE PTR [rax],al
   140009140:	add    bh,dl
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	or     dl,bh
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	add    BYTE PTR [rax],al
   14000914e:	add    BYTE PTR [rax],al
   140009150:	sbb    bh,dl
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	xlat   BYTE PTR es:[rbx]
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	add    BYTE PTR [rax],al
   14000915e:	add    BYTE PTR [rax],al
   140009160:	xor    bh,dl
   140009162:	add    BYTE PTR [rax],al
   140009164:	add    BYTE PTR [rax],al
   140009166:	add    BYTE PTR [rax],al
   140009168:	xlat   BYTE PTR ds:[rbx]
   14000916a:	add    BYTE PTR [rax],al
   14000916c:	add    BYTE PTR [rax],al
   14000916e:	add    BYTE PTR [rax],al
   140009170:	pop    rax
   140009171:	xlat   BYTE PTR ds:[rbx]
   140009172:	add    BYTE PTR [rax],al
   140009174:	add    BYTE PTR [rax],al
   140009176:	add    BYTE PTR [rax],al
   140009178:	data16 xlat BYTE PTR ds:[rbx]
   14000917a:	add    BYTE PTR [rax],al
   14000917c:	add    BYTE PTR [rax],al
   14000917e:	add    BYTE PTR [rax],al
   140009180:	jbe    0x140009159
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	mov    bh,dl
   14000918a:	add    BYTE PTR [rax],al
   14000918c:	add    BYTE PTR [rax],al
   14000918e:	add    BYTE PTR [rax],al
   140009190:	nop
   140009191:	xlat   BYTE PTR ds:[rbx]
   140009192:	add    BYTE PTR [rax],al
   140009194:	add    BYTE PTR [rax],al
   140009196:	add    BYTE PTR [rax],al
   140009198:	cwde   
   140009199:	xlat   BYTE PTR ds:[rbx]
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	add    BYTE PTR [rax],al
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	movabs ds:0xb0000000000000d7,al
   1400091a9:	xlat   BYTE PTR ds:[rbx]
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	(bad)  
   1400091b1:	xlat   BYTE PTR ds:[rbx]
   1400091b2:	add    BYTE PTR [rax],al
   1400091b4:	add    BYTE PTR [rax],al
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	fcmovbe st,st(7)
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	add    BYTE PTR [rax],al
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	call   0x14000929c
	...
   1400091cd:	add    BYTE PTR [rax],al
   1400091cf:	add    BYTE PTR [rsp+rdx*8],dh
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	add    BYTE PTR [rax],al
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	clc    
   1400091d9:	rol    DWORD PTR [rax],cl
	...
   1400091e7:	add    BYTE PTR [rsi-0x2d],bh
	...
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	(bad)  
   1400091f9:	rol    BYTE PTR [rax],cl
   1400091fb:	add    BYTE PTR [rax],al
   1400091fd:	add    BYTE PTR [rax],al
   1400091ff:	add    dh,bl
   140009201:	rol    DWORD PTR [rax],1
   140009203:	add    BYTE PTR [rax],al
   140009205:	add    BYTE PTR [rax],al
   140009207:	add    BYTE PTR [rcx+rdx*8+0x0],bh
   14000920e:	add    BYTE PTR [rax],al
   140009210:	push   rax
   140009211:	rol    DWORD PTR [rax],1
   140009213:	add    BYTE PTR [rax],al
   140009215:	add    BYTE PTR [rax],al
   140009217:	add    BYTE PTR [rsi],ch
   140009219:	rol    DWORD PTR [rax],1
   14000921b:	add    BYTE PTR [rax],al
   14000921d:	add    BYTE PTR [rax],al
   14000921f:	add    BYTE PTR [rax],bh
   140009221:	rol    BYTE PTR [rax],1
	...
   140009237:	add    BYTE PTR [rsp+rsi*2+0x14000],dl
   14000923e:	add    BYTE PTR [rax],al
   140009240:	rcl    BYTE PTR [rax],1
   140009242:	add    BYTE PTR [rax+0x1],al
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    BYTE PTR [rax+0x1400010],dl
   14000924d:	add    BYTE PTR [rax],al
   14000924f:	add    BYTE PTR [rax+0x1400010],dh
   140009255:	add    BYTE PTR [rax],al
   140009257:	add    BYTE PTR [rax+0x1400010],al
   14000925d:	add    BYTE PTR [rax],al
   14000925f:	add    BYTE PTR [rax+0x10],dh
   140009262:	add    BYTE PTR [rax+0x1],al
   140009265:	add    BYTE PTR [rax],al
   140009267:	add    BYTE PTR [rax],al
   140009269:	adc    BYTE PTR [rax],al
   14000926b:	rex add DWORD PTR [rax],eax
   14000926e:	add    BYTE PTR [rax],al
   140009270:	adc    BYTE PTR [rax],dl
   140009272:	add    BYTE PTR [rax+0x1],al
   140009275:	add    BYTE PTR [rax],al
   140009277:	add    BYTE PTR [rax],ah
   140009279:	adc    BYTE PTR [rax],al
   14000927b:	rex add DWORD PTR [rax],eax
   14000927e:	add    BYTE PTR [rax],al
   140009280:	xor    BYTE PTR [rax],dl
   140009282:	add    BYTE PTR [rax+0x1],al
   140009285:	add    BYTE PTR [rax],al
   140009287:	add    BYTE PTR [rax+0x10],dl
   14000928a:	add    BYTE PTR [rax+0x1],al
	...
   14000929d:	add    BYTE PTR [rax],al
   14000929f:	add    ah,al
   1400092a1:	jae    0x1400092a3
   1400092a3:	rex add DWORD PTR [rax],eax
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	call   0x14140931e
   1400092ad:	add    BYTE PTR [rax],al
   1400092af:	add    BYTE PTR [rax+0x1400077],ch
	...
   1400092c1:	add    BYTE PTR [rax],al
   1400092c3:	add    BYTE PTR [rbx+0x1c],al
   1400092c6:	sbb    DWORD PTR [rax+0x0],0x2000000
   1400092cd:	add    BYTE PTR [rax],al
   1400092cf:	add    BYTE PTR [rdi],dh
   1400092d1:	add    BYTE PTR [rax],al
   1400092d3:	add    al,al
   1400092d5:	lahf   
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	ror    BYTE PTR [rcx+0x0],0x0
   1400092df:	add    BYTE PTR [rbx+0x1c],al
   1400092e2:	sbb    DWORD PTR [rax+0x0],0xc000000
   1400092e9:	add    BYTE PTR [rax],al
   1400092eb:	add    BYTE PTR [rax+rax*1],dl
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	clc    
   1400092f1:	lahf   
   1400092f2:	add    BYTE PTR [rax],al
   1400092f4:	clc    
   1400092f5:	mov    DWORD PTR [rax],eax
	...
   1400092ff:	add    BYTE PTR [rdx],ah
   140009301:	add    eax,0x41993
   140009306:	add    BYTE PTR [rax],al
   140009308:	int3   
   140009309:	scas   eax,DWORD PTR es:[rdi]
   14000930a:	add    BYTE PTR [rax],al
   14000930c:	add    al,BYTE PTR [rax]
   14000930e:	add    BYTE PTR [rax],al
   140009310:	in     al,dx
   140009311:	scas   eax,DWORD PTR es:[rdi]
   140009312:	add    BYTE PTR [rax],al
   140009314:	or     BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	mov    al,0x0
   14000931b:	add    BYTE PTR [rax],ah
   14000931d:	add    BYTE PTR [rax],al
   14000931f:	add    BYTE PTR [rax],al
   140009321:	add    BYTE PTR [rax],al
   140009323:	add    BYTE PTR [rcx],al
   140009325:	add    BYTE PTR [rax],al
   140009327:	add    BYTE PTR [rdx],ah
   140009329:	add    eax,0x41993
   14000932e:	add    BYTE PTR [rax],al
   140009330:	sub    BYTE PTR [rdx+0x20000],dh
   140009336:	add    BYTE PTR [rax],al
   140009338:	rex.W mov dl,0x0
   14000933b:	add    BYTE PTR [rax],cl
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    BYTE PTR [rax+0x200000b2],ah
   140009345:	add    BYTE PTR [rax],al
   140009347:	add    BYTE PTR [rax],al
   140009349:	add    BYTE PTR [rax],al
   14000934b:	add    BYTE PTR [rcx],al
   14000934d:	add    BYTE PTR [rax],al
   14000934f:	add    BYTE PTR [rdx],ah
   140009351:	add    eax,0x21993
   140009356:	add    BYTE PTR [rax],al
   140009358:	shl    BYTE PTR [rbx+0x0],0x0
   14000935f:	add    BYTE PTR [rax],al
   140009361:	add    BYTE PTR [rax],al
   140009363:	add    BYTE PTR [rip+0xffffffffd0000000],al        # 0x110009369
   140009369:	mov    bl,0x0
   14000936b:	add    BYTE PTR [rax],ah
   14000936d:	add    BYTE PTR [rax],al
   14000936f:	add    BYTE PTR [rax],al
   140009371:	add    BYTE PTR [rax],al
   140009373:	add    BYTE PTR [rcx],al
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    BYTE PTR [rdx],ah
   140009379:	add    eax,0x21993
   14000937e:	add    BYTE PTR [rax],al
   140009380:	adc    BYTE PTR [rbp+0x0],dh
   140009386:	add    BYTE PTR [rax],al
   140009388:	add    BYTE PTR [rax],al
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	add    eax,0x20000000
   140009391:	mov    ch,0x0
   140009393:	add    BYTE PTR [rax],ah
   140009395:	add    BYTE PTR [rax],al
   140009397:	add    BYTE PTR [rax],al
   140009399:	add    BYTE PTR [rax],al
   14000939b:	add    BYTE PTR [rcx],al
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rdx],ah
   1400093a1:	add    eax,0x21993
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	mov    al,0xb5
   1400093aa:	add    BYTE PTR [rax],al
   1400093ac:	add    DWORD PTR [rax],eax
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	shl    BYTE PTR [rbp+0x50000],0x0
   1400093b7:	add    al,ch
   1400093b9:	mov    ch,0x0
   1400093bb:	add    BYTE PTR [rax],dh
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rax],al
   1400093c1:	add    BYTE PTR [rax],al
   1400093c3:	add    BYTE PTR [rcx],al
   1400093c5:	add    BYTE PTR [rax],al
   1400093c7:	add    BYTE PTR [rdx],ah
   1400093c9:	add    eax,0x11993
   1400093ce:	add    BYTE PTR [rax],al
   1400093d0:	in     al,0xb6
	...
   1400093da:	add    BYTE PTR [rax],al
   1400093dc:	add    eax,DWORD PTR [rax]
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	lock mov dh,0x0
   1400093e3:	add    BYTE PTR [rax],ah
   1400093e5:	add    BYTE PTR [rax],al
   1400093e7:	add    BYTE PTR [rax],al
   1400093e9:	add    BYTE PTR [rax],al
   1400093eb:	add    BYTE PTR [rcx],al
   1400093ed:	add    BYTE PTR [rax],al
   1400093ef:	add    BYTE PTR [rdx],ah
   1400093f1:	add    eax,0x11993
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	cmp    al,0xb7
	...
   140009402:	add    BYTE PTR [rax],al
   140009404:	add    eax,DWORD PTR [rax]
   140009406:	add    BYTE PTR [rax],al
   140009408:	rex.W mov dil,0x0
   14000940b:	add    BYTE PTR [rax],ah
   14000940d:	add    BYTE PTR [rax],al
   14000940f:	add    BYTE PTR [rax],al
   140009411:	add    BYTE PTR [rax],al
   140009413:	add    BYTE PTR [rcx],al
   140009415:	add    BYTE PTR [rax],al
   140009417:	add    BYTE PTR [rdx],ah
   140009419:	add    eax,0x31993
   14000941e:	add    BYTE PTR [rax],al
   140009420:	mov    ah,0xb7
   140009422:	add    BYTE PTR [rax],al
   140009424:	add    DWORD PTR [rax],eax
   140009426:	add    BYTE PTR [rax],al
   140009428:	int3   
   140009429:	mov    bh,0x0
   14000942b:	add    BYTE PTR [rax],cl
   14000942d:	add    BYTE PTR [rax],al
   14000942f:	add    BYTE PTR [rax],al
   140009431:	mov    eax,0x200000
   140009436:	add    BYTE PTR [rax],al
   140009438:	add    BYTE PTR [rax],al
   14000943a:	add    BYTE PTR [rax],al
   14000943c:	add    DWORD PTR [rax],eax
   14000943e:	add    BYTE PTR [rax],al
   140009440:	and    al,BYTE PTR [rip+0x11993]        # 0x14001add9
   140009446:	add    BYTE PTR [rax],al
   140009448:	fs mov eax,0x0
   14000944e:	add    BYTE PTR [rax],al
   140009450:	add    BYTE PTR [rax],al
   140009452:	add    BYTE PTR [rax],al
   140009454:	add    eax,DWORD PTR [rax]
   140009456:	add    BYTE PTR [rax],al
   140009458:	jo     0x140009412
   14000945a:	add    BYTE PTR [rax],al
   14000945c:	and    BYTE PTR [rax],al
   14000945e:	add    BYTE PTR [rax],al
   140009460:	add    BYTE PTR [rax],al
   140009462:	add    BYTE PTR [rax],al
   140009464:	add    DWORD PTR [rax],eax
   140009466:	add    BYTE PTR [rax],al
   140009468:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ae01
   14000946e:	add    BYTE PTR [rax],al
   140009470:	lock mov eax,0x0
   140009476:	add    BYTE PTR [rax],al
   140009478:	add    BYTE PTR [rax],al
   14000947a:	add    BYTE PTR [rax],al
   14000947c:	add    eax,DWORD PTR [rax]
   14000947e:	add    BYTE PTR [rax],al
   140009480:	clc    
   140009481:	mov    eax,0x200000
   140009486:	add    BYTE PTR [rax],al
   140009488:	add    BYTE PTR [rax],al
   14000948a:	add    BYTE PTR [rax],al
   14000948c:	add    DWORD PTR [rax],eax
   14000948e:	add    BYTE PTR [rax],al
   140009490:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ae29
   140009496:	add    BYTE PTR [rax],al
   140009498:	and    BYTE PTR [rcx+0x0],bh
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	add    BYTE PTR [rax],al
   1400094a2:	add    BYTE PTR [rax],al
   1400094a4:	add    al,BYTE PTR [rax]
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	sub    BYTE PTR [rcx+0x200000],bh
   1400094ae:	add    BYTE PTR [rax],al
   1400094b0:	add    BYTE PTR [rax],al
   1400094b2:	add    BYTE PTR [rax],al
   1400094b4:	add    DWORD PTR [rax],eax
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	and    al,BYTE PTR [rip+0x91993]        # 0x14009ae51
   1400094be:	add    BYTE PTR [rax],al
   1400094c0:	int3   
   1400094c1:	mov    ecx,0x10000
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	adc    al,0xba
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	adc    BYTE PTR [rax],al
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	rex mov edx,0x980000
   1400094d6:	add    BYTE PTR [rax],al
   1400094d8:	add    BYTE PTR [rax],al
   1400094da:	add    BYTE PTR [rax],al
   1400094dc:	add    DWORD PTR [rax],eax
   1400094de:	add    BYTE PTR [rax],al
   1400094e0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001ae79
   1400094e6:	add    BYTE PTR [rax],al
   1400094e8:	in     al,0xba
	...
   1400094f2:	add    BYTE PTR [rax],al
   1400094f4:	add    eax,DWORD PTR [rax]
   1400094f6:	add    BYTE PTR [rax],al
   1400094f8:	lock mov edx,0x200000
   1400094fe:	add    BYTE PTR [rax],al
   140009500:	add    BYTE PTR [rax],al
   140009502:	add    BYTE PTR [rax],al
   140009504:	add    DWORD PTR [rax],eax
   140009506:	add    BYTE PTR [rax],al
   140009508:	and    al,BYTE PTR [rip+0xc1993]        # 0x1400caea1
   14000950e:	add    BYTE PTR [rax],al
   140009510:	mov    al,0xbb
	...
   14000951a:	add    BYTE PTR [rax],al
   14000951c:	adc    eax,0x10000000
   140009521:	mov    esp,0xe00000
   140009526:	add    BYTE PTR [rax],al
   140009528:	add    BYTE PTR [rax],al
   14000952a:	add    BYTE PTR [rax],al
   14000952c:	add    DWORD PTR [rax],eax
   14000952e:	add    BYTE PTR [rax],al
   140009530:	and    al,BYTE PTR [rip+0xc1993]        # 0x1400caec9
   140009536:	add    BYTE PTR [rax],al
   140009538:	and    al,0xbd
	...
   140009542:	add    BYTE PTR [rax],al
   140009544:	adc    eax,0x90000000
   140009549:	mov    ebp,0xe00000
   14000954e:	add    BYTE PTR [rax],al
   140009550:	add    BYTE PTR [rax],al
   140009552:	add    BYTE PTR [rax],al
   140009554:	add    DWORD PTR [rax],eax
   140009556:	add    BYTE PTR [rax],al
   140009558:	and    al,BYTE PTR [rip+0x11993]        # 0x14001aef1
   14000955e:	add    BYTE PTR [rax],al
   140009560:	mov    ah,0xbe
	...
   14000956a:	add    BYTE PTR [rax],al
   14000956c:	add    eax,DWORD PTR [rax]
   14000956e:	add    BYTE PTR [rax],al
   140009570:	sar    BYTE PTR [rsi+0x200000],0x0
   140009577:	add    BYTE PTR [rax],al
   140009579:	add    BYTE PTR [rax],al
   14000957b:	add    BYTE PTR [rcx],al
   14000957d:	add    BYTE PTR [rax],al
   14000957f:	add    BYTE PTR [rdx],ah
   140009581:	add    eax,0x21993
   140009586:	add    BYTE PTR [rax],al
   140009588:	add    al,0xbf
	...
   140009592:	add    BYTE PTR [rax],al
   140009594:	add    al,0x0
   140009596:	add    BYTE PTR [rax],al
   140009598:	sbb    BYTE PTR [rdi+0x200000],bh
   14000959e:	add    BYTE PTR [rax],al
   1400095a0:	add    BYTE PTR [rax],al
   1400095a2:	add    BYTE PTR [rax],al
   1400095a4:	add    DWORD PTR [rax],eax
   1400095a6:	add    BYTE PTR [rax],al
   1400095a8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002af41
   1400095ae:	add    BYTE PTR [rax],al
   1400095b0:	pop    rax
   1400095b1:	mov    edi,0x0
   1400095b6:	add    BYTE PTR [rax],al
   1400095b8:	add    BYTE PTR [rax],al
   1400095ba:	add    BYTE PTR [rax],al
   1400095bc:	add    al,0x0
   1400095be:	add    BYTE PTR [rax],al
   1400095c0:	push   0x200000bf
   1400095c5:	add    BYTE PTR [rax],al
   1400095c7:	add    BYTE PTR [rax],al
   1400095c9:	add    BYTE PTR [rax],al
   1400095cb:	add    BYTE PTR [rcx],al
   1400095cd:	add    BYTE PTR [rax],al
   1400095cf:	add    BYTE PTR [rdx],ah
   1400095d1:	add    eax,0x11993
   1400095d6:	add    BYTE PTR [rax],al
   1400095d8:	movabs al,ds:0xbf
   1400095e1:	add    BYTE PTR [rax],al
   1400095e3:	add    BYTE PTR [rbx],al
   1400095e5:	add    BYTE PTR [rax],al
   1400095e7:	add    BYTE PTR [rax+0x200000bf],ch
   1400095ed:	add    BYTE PTR [rax],al
   1400095ef:	add    BYTE PTR [rax],al
   1400095f1:	add    BYTE PTR [rax],al
   1400095f3:	add    BYTE PTR [rcx],al
   1400095f5:	add    BYTE PTR [rax],al
   1400095f7:	add    BYTE PTR [rdx],ah
   1400095f9:	add    eax,0x31993
   1400095fe:	add    BYTE PTR [rax],al
   140009600:	fdivr  DWORD PTR [rdi+0x0]
   140009606:	add    BYTE PTR [rax],al
   140009608:	add    BYTE PTR [rax],al
   14000960a:	add    BYTE PTR [rax],al
   14000960c:	(bad)  
   14000960d:	add    BYTE PTR [rax],al
   14000960f:	add    al,dh
   140009611:	mov    edi,0xa80000
   140009616:	add    BYTE PTR [rax],al
   140009618:	add    BYTE PTR [rax],al
   14000961a:	add    BYTE PTR [rax],al
   14000961c:	add    DWORD PTR [rax],eax
   14000961e:	add    BYTE PTR [rax],al
   140009620:	and    al,BYTE PTR [rip+0x11993]        # 0x14001afb9
   140009626:	add    BYTE PTR [rax],al
   140009628:	rex rol BYTE PTR [rax],0x0
	...
   140009634:	add    eax,DWORD PTR [rax]
   140009636:	add    BYTE PTR [rax],al
   140009638:	rex.W rol BYTE PTR [rax],0x0
   14000963c:	and    BYTE PTR [rax],al
   14000963e:	add    BYTE PTR [rax],al
   140009640:	add    BYTE PTR [rax],al
   140009642:	add    BYTE PTR [rax],al
   140009644:	add    DWORD PTR [rax],eax
   140009646:	add    BYTE PTR [rax],al
   140009648:	and    al,BYTE PTR [rip+0x11993]        # 0x14001afe1
   14000964e:	add    BYTE PTR [rax],al
   140009650:	nop
   140009651:	rol    BYTE PTR [rax],0x0
	...
   14000965c:	add    eax,DWORD PTR [rax]
   14000965e:	add    BYTE PTR [rax],al
   140009660:	cwde   
   140009661:	rol    BYTE PTR [rax],0x0
   140009664:	and    BYTE PTR [rax],al
   140009666:	add    BYTE PTR [rax],al
   140009668:	add    BYTE PTR [rax],al
   14000966a:	add    BYTE PTR [rax],al
   14000966c:	add    DWORD PTR [rax],eax
   14000966e:	add    BYTE PTR [rax],al
   140009670:	and    al,BYTE PTR [rip+0x21993]        # 0x14002b009
   140009676:	add    BYTE PTR [rax],al
   140009678:	xor    al,0xc1
	...
   140009682:	add    BYTE PTR [rax],al
   140009684:	add    al,0x0
   140009686:	add    BYTE PTR [rax],al
   140009688:	rol    QWORD PTR [rax],0x0
   14000968c:	and    BYTE PTR [rax],al
   14000968e:	add    BYTE PTR [rax],al
   140009690:	add    BYTE PTR [rax],al
   140009692:	add    BYTE PTR [rax],al
   140009694:	add    DWORD PTR [rax],eax
   140009696:	add    BYTE PTR [rax],al
   140009698:	and    al,BYTE PTR [rip+0x21993]        # 0x14002b031
   14000969e:	add    BYTE PTR [rax],al
   1400096a0:	test   cl,al
	...
   1400096aa:	add    BYTE PTR [rax],al
   1400096ac:	add    al,0x0
   1400096ae:	add    BYTE PTR [rax],al
   1400096b0:	cwde   
   1400096b1:	rol    DWORD PTR [rax],0x0
   1400096b4:	and    BYTE PTR [rax],al
   1400096b6:	add    BYTE PTR [rax],al
   1400096b8:	add    BYTE PTR [rax],al
   1400096ba:	add    BYTE PTR [rax],al
   1400096bc:	add    DWORD PTR [rax],eax
   1400096be:	add    BYTE PTR [rax],al
   1400096c0:	and    al,BYTE PTR [rip+0x31993]        # 0x14003b059
   1400096c6:	add    BYTE PTR [rax],al
   1400096c8:	fadd   st(1),st
	...
   1400096d2:	add    BYTE PTR [rax],al
   1400096d4:	(bad)  
   1400096d5:	add    BYTE PTR [rax],al
   1400096d7:	add    al,bh
   1400096d9:	rol    DWORD PTR [rax],0x0
   1400096dc:	and    BYTE PTR [rax],al
   1400096de:	add    BYTE PTR [rax],al
   1400096e0:	add    BYTE PTR [rax],al
   1400096e2:	add    BYTE PTR [rax],al
   1400096e4:	add    DWORD PTR [rax],eax
   1400096e6:	add    BYTE PTR [rax],al
   1400096e8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002b081
   1400096ee:	add    BYTE PTR [rax],al
   1400096f0:	rex ret 0x0
	...
   1400096fc:	add    eax,0x50000000
   140009701:	ret    0x0
   140009704:	and    BYTE PTR [rax],al
   140009706:	add    BYTE PTR [rax],al
   140009708:	add    BYTE PTR [rax],al
   14000970a:	add    BYTE PTR [rax],al
   14000970c:	add    DWORD PTR [rax],eax
   14000970e:	add    BYTE PTR [rax],al
   140009710:	and    al,BYTE PTR [rip+0x11993]        # 0x14001b0a9
   140009716:	add    BYTE PTR [rax],al
   140009718:	nop
   140009719:	ret    0x0
	...
   140009724:	add    eax,DWORD PTR [rax]
   140009726:	add    BYTE PTR [rax],al
   140009728:	cwde   
   140009729:	ret    0x0
   14000972c:	and    BYTE PTR [rax],al
   14000972e:	add    BYTE PTR [rax],al
   140009730:	add    BYTE PTR [rax],al
   140009732:	add    BYTE PTR [rax],al
   140009734:	add    DWORD PTR [rax],eax
   140009736:	add    BYTE PTR [rax],al
   140009738:	and    al,BYTE PTR [rip+0x11993]        # 0x14001b0d1
   14000973e:	add    BYTE PTR [rax],al
   140009740:	fadd   st(2),st
	...
   14000974a:	add    BYTE PTR [rax],al
   14000974c:	add    eax,DWORD PTR [rax]
   14000974e:	add    BYTE PTR [rax],al
   140009750:	call   0x160009817
   140009755:	add    BYTE PTR [rax],al
   140009757:	add    BYTE PTR [rax],al
   140009759:	add    BYTE PTR [rax],al
   14000975b:	add    BYTE PTR [rcx],al
   14000975d:	add    BYTE PTR [rax],al
   14000975f:	add    BYTE PTR [rdx],ah
   140009761:	add    eax,0x21993
   140009766:	add    BYTE PTR [rax],al
   140009768:	rex ret 
	...
   140009772:	add    BYTE PTR [rax],al
   140009774:	add    al,0x0
   140009776:	add    BYTE PTR [rax],al
   140009778:	push   rax
   140009779:	ret    
   14000977a:	add    BYTE PTR [rax],al
   14000977c:	and    BYTE PTR [rax],al
   14000977e:	add    BYTE PTR [rax],al
   140009780:	add    BYTE PTR [rax],al
   140009782:	add    BYTE PTR [rax],al
   140009784:	add    DWORD PTR [rax],eax
   140009786:	add    BYTE PTR [rax],al
   140009788:	and    al,BYTE PTR [rip+0x21993]        # 0x14002b121
   14000978e:	add    BYTE PTR [rax],al
   140009790:	mov    ebx,es
	...
   14000979a:	add    BYTE PTR [rax],al
   14000979c:	add    al,0x0
   14000979e:	add    BYTE PTR [rax],al
   1400097a0:	movabs al,ds:0x200000c3
   1400097a9:	add    BYTE PTR [rax],al
   1400097ab:	add    BYTE PTR [rcx],al
   1400097ad:	add    BYTE PTR [rax],al
   1400097af:	add    BYTE PTR [rdx],ah
   1400097b1:	add    eax,0x31993
   1400097b6:	add    BYTE PTR [rax],al
   1400097b8:	in     al,0xc3
	...
   1400097c2:	add    BYTE PTR [rax],al
   1400097c4:	(bad)  
   1400097c5:	add    BYTE PTR [rax],al
   1400097c7:	add    BYTE PTR [rax],al
   1400097c9:	(bad)  
   1400097ca:	add    BYTE PTR [rax],al
   1400097cc:	and    BYTE PTR [rax],al
   1400097ce:	add    BYTE PTR [rax],al
   1400097d0:	add    BYTE PTR [rax],al
   1400097d2:	add    BYTE PTR [rax],al
   1400097d4:	add    DWORD PTR [rax],eax
   1400097d6:	add    BYTE PTR [rax],al
   1400097d8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002b171
   1400097de:	add    BYTE PTR [rax],al
   1400097e0:	rex.W (bad) 
	...
   1400097ea:	add    BYTE PTR [rax],al
   1400097ec:	add    eax,0x58000000
   1400097f1:	(bad)  
   1400097f2:	add    BYTE PTR [rax],al
   1400097f4:	and    BYTE PTR [rax],al
   1400097f6:	add    BYTE PTR [rax],al
   1400097f8:	add    BYTE PTR [rax],al
   1400097fa:	add    BYTE PTR [rax],al
   1400097fc:	add    DWORD PTR [rax],eax
   1400097fe:	add    BYTE PTR [rax],al
   140009800:	and    al,BYTE PTR [rip+0x11993]        # 0x14001b199
   140009806:	add    BYTE PTR [rax],al
   140009808:	cwde   
   140009809:	(bad)  
	...
   140009812:	add    BYTE PTR [rax],al
   140009814:	add    eax,DWORD PTR [rax]
   140009816:	add    BYTE PTR [rax],al
   140009818:	movabs al,ds:0x200000c4
   140009821:	add    BYTE PTR [rax],al
   140009823:	add    BYTE PTR [rcx],al
   140009825:	add    BYTE PTR [rax],al
   140009827:	add    BYTE PTR [rdx],ah
   140009829:	add    eax,0x11993
   14000982e:	add    BYTE PTR [rax],al
   140009830:	in     al,0xc4
	...
   14000983a:	add    BYTE PTR [rax],al
   14000983c:	add    eax,DWORD PTR [rax]
   14000983e:	add    BYTE PTR [rax],al
   140009840:	lock (bad) 
   140009842:	add    BYTE PTR [rax],al
   140009844:	and    BYTE PTR [rax],al
   140009846:	add    BYTE PTR [rax],al
   140009848:	add    BYTE PTR [rax],al
   14000984a:	add    BYTE PTR [rax],al
   14000984c:	add    DWORD PTR [rax],eax
   14000984e:	add    BYTE PTR [rax],al
   140009850:	and    al,BYTE PTR [rip+0x21993]        # 0x14002b1e9
   140009856:	add    BYTE PTR [rax],al
   140009858:	fadd   st,st(5)
   14000985a:	add    BYTE PTR [rax],al
   14000985c:	add    DWORD PTR [rax],eax
   14000985e:	add    BYTE PTR [rax],al
   140009860:	call   0x14500992a
   140009865:	add    BYTE PTR [rax],al
   140009867:	add    BYTE PTR [rax],dl
   140009869:	mov    BYTE PTR [rax],0x0
   14000986c:	and    BYTE PTR [rax],al
   14000986e:	add    BYTE PTR [rax],al
   140009870:	add    BYTE PTR [rax],al
   140009872:	add    BYTE PTR [rax],al
   140009874:	add    DWORD PTR [rax],eax
   140009876:	add    BYTE PTR [rax],al
   140009878:	and    al,BYTE PTR [rip+0x21993]        # 0x14002b211
   14000987e:	add    BYTE PTR [rax],al
   140009880:	je     0x140009848
   140009882:	add    BYTE PTR [rax],al
   140009884:	add    DWORD PTR [rax],eax
   140009886:	add    BYTE PTR [rax],al
   140009888:	test   dh,al
   14000988a:	add    BYTE PTR [rax],al
   14000988c:	add    eax,0xb0000000
   140009891:	mov    BYTE PTR [rax],0x0
   140009894:	and    BYTE PTR [rax],al
   140009896:	add    BYTE PTR [rax],al
   140009898:	add    BYTE PTR [rax],al
   14000989a:	add    BYTE PTR [rax],al
   14000989c:	add    DWORD PTR [rax],eax
   14000989e:	add    BYTE PTR [rax],al
   1400098a0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002b239
   1400098a6:	add    BYTE PTR [rax],al
   1400098a8:	cld    
   1400098a9:	mov    BYTE PTR [rax],0x0
   1400098ac:	add    DWORD PTR [rax],eax
   1400098ae:	add    BYTE PTR [rax],al
   1400098b0:	or     al,0xc7
   1400098b2:	add    BYTE PTR [rax],al
   1400098b4:	add    eax,0x38000000
   1400098b9:	mov    DWORD PTR [rax],0x2000
   1400098bf:	add    BYTE PTR [rax],al
   1400098c1:	add    BYTE PTR [rax],al
   1400098c3:	add    BYTE PTR [rcx],al
   1400098c5:	add    BYTE PTR [rax],al
   1400098c7:	add    BYTE PTR [rax],dl
   1400098c9:	movabs al,ds:0x43c0000000014000
   1400098d2:	add    BYTE PTR [rax+0x1],al
   1400098d5:	add    BYTE PTR [rax],al
   1400098d7:	add    BYTE PTR [rbx+rsi*2],ah
   1400098da:	add    BYTE PTR [rax+0x1],al
   1400098dd:	add    BYTE PTR [rax],al
   1400098df:	add    al,ah
   1400098e1:	movabs al,ds:0x4310000000014000
   1400098ea:	add    BYTE PTR [rax+0x1],al
   1400098ed:	add    BYTE PTR [rax],al
   1400098ef:	add    BYTE PTR [rbx+rsi*2],ah
   1400098f2:	add    BYTE PTR [rax+0x1],al
   1400098f5:	add    BYTE PTR [rax],al
   1400098f7:	add    BYTE PTR [rdx+0x61],ah
   1400098fa:	and    BYTE PTR fs:[rcx+0x6c],ah
   1400098fe:	ins    BYTE PTR es:[rdi],dx
   1400098ff:	outs   dx,DWORD PTR ds:[rsi]
   140009900:	movsxd esp,DWORD PTR [rcx+0x74]
   140009903:	imul   ebp,DWORD PTR [rdi+0x6e],0xa1600000
   14000990a:	add    BYTE PTR [rax+0x1],al
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    al,dl
   140009911:	add    BYTE PTR [rax+0x1],r8b
   140009915:	add    BYTE PTR [rax],al
   140009917:	add    BYTE PTR [rbx+rsi*2],ah
   14000991a:	add    BYTE PTR [rax+0x1],al
	...
   140009925:	add    BYTE PTR [rax],al
   140009927:	add    al,ah
   140009929:	movabs eax,ds:0x44a0000000014000
   140009932:	add    BYTE PTR [rax+0x1],al
   140009935:	add    BYTE PTR [rax],al
   140009937:	add    dh,dl
   140009939:	jno    0x14000993b
   14000993b:	rex add DWORD PTR [rax],eax
   14000993e:	add    BYTE PTR [rax],al
   140009940:	(bad)  
   140009941:	jno    0x140009943
   140009943:	rex add DWORD PTR [rax],eax
   140009946:	add    BYTE PTR [rax],al
   140009948:	adc    BYTE PTR [rax+0x0],ah
   14000994b:	rex add DWORD PTR [rax],eax
   14000994e:	add    BYTE PTR [rax],al
   140009950:	nop
   140009951:	(bad)  
   140009952:	add    BYTE PTR [rax+0x1],al
   140009955:	add    BYTE PTR [rax],al
   140009957:	add    BYTE PTR [rax+0x1400060],dh
   14000995d:	add    BYTE PTR [rax],al
   14000995f:	add    BYTE PTR [rdx],bh
   140009961:	and    BYTE PTR [rax],al
   140009963:	add    BYTE PTR [rax],al
   140009965:	add    BYTE PTR [rax],al
   140009967:	add    BYTE PTR [rax-0x5e],bl
   14000996a:	add    BYTE PTR [rax+0x1],al
   14000996d:	add    BYTE PTR [rax],al
   14000996f:	add    BYTE PTR [rax+0x1400042],al
   140009975:	add    BYTE PTR [rax],al
   140009977:	add    BYTE PTR [rax+0x66],ah
   14000997a:	add    BYTE PTR [rax+0x1],al
   14000997d:	add    BYTE PTR [rax],al
   14000997f:	add    al,dl
   140009981:	add    BYTE PTR fs:[rax+0x1],al
   140009985:	add    BYTE PTR [rax],al
   140009987:	add    BYTE PTR [rax],dl
   140009989:	(bad)  
   14000998a:	add    BYTE PTR [rax+0x1],al
   14000998d:	add    BYTE PTR [rax],al
   14000998f:	add    BYTE PTR [rax+0x1400060],dl
   140009995:	add    BYTE PTR [rax],al
   140009997:	add    BYTE PTR [rax+0x1400060],dh
   14000999d:	add    BYTE PTR [rax],al
   14000999f:	add    BYTE PTR [rdi+0x65],ah
   1400099a2:	outs   dx,BYTE PTR ds:[rsi]
   1400099a3:	gs jb  0x140009a0f
   1400099a6:	movsxd eax,DWORD PTR [rax]
   1400099a8:	jne    0x140009a18
   1400099aa:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400099ae:	outs   dx,BYTE PTR ds:[rsi]
   1400099af:	and    BYTE PTR [rbp+0x72],ah
   1400099b2:	jb     0x140009a23
   1400099b4:	jb     0x1400099b6
   1400099b6:	add    BYTE PTR [rax],al
   1400099b8:	fsub   DWORD PTR [rdx+0x14000]
   1400099be:	add    BYTE PTR [rax],al
   1400099c0:	mov    al,0x42
   1400099c2:	add    BYTE PTR [rax+0x1],al
   1400099c5:	add    BYTE PTR [rax],al
   1400099c7:	add    BYTE PTR [rax+0x66],dh
   1400099ca:	add    BYTE PTR [rax+0x1],al
   1400099cd:	add    BYTE PTR [rax],al
   1400099cf:	add    BYTE PTR [rax+0x65],al
   1400099d2:	add    BYTE PTR [rax+0x1],al
   1400099d5:	add    BYTE PTR [rax],al
   1400099d7:	add    BYTE PTR [rax],dl
   1400099d9:	(bad)  
   1400099da:	add    BYTE PTR [rax+0x1],al
   1400099dd:	add    BYTE PTR [rax],al
   1400099df:	add    BYTE PTR [rax+0x1400060],dl
   1400099e5:	add    BYTE PTR [rax],al
   1400099e7:	add    BYTE PTR [rax+0x1400060],dh
   1400099ed:	add    BYTE PTR [rax],al
   1400099ef:	add    BYTE PTR [rcx+0x6f],ch
   1400099f2:	jae    0x140009a68
   1400099f4:	jb     0x140009a5b
   1400099f6:	(bad)  
   1400099f7:	ins    DWORD PTR es:[rdi],dx
	...
   140009a00:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140009a07:	ins    DWORD PTR es:[rdi],dx
   140009a08:	and    BYTE PTR [rbx+0x74],dh
   140009a0b:	jb     0x140009a72
   140009a0d:	(bad)  
   140009a0e:	ins    DWORD PTR es:[rdi],dx
   140009a0f:	and    BYTE PTR [rbp+0x72],ah
   140009a12:	jb     0x140009a83
   140009a14:	jb     0x140009a16
   140009a16:	add    BYTE PTR [rax],al
   140009a18:	(bad)  
   140009a19:	movabs ds:0x42e0000000014000,eax
   140009a22:	add    BYTE PTR [rax+0x1],al
   140009a25:	add    BYTE PTR [rax],al
   140009a27:	add    BYTE PTR [rax+0x1400066],al
   140009a2d:	add    BYTE PTR [rax],al
   140009a2f:	add    BYTE PTR [rax+0x1400065],dl
   140009a35:	add    BYTE PTR [rax],al
   140009a37:	add    al,dl
   140009a39:	pop    rdi
   140009a3a:	add    BYTE PTR [rax+0x1],al
   140009a3d:	add    BYTE PTR [rax],al
   140009a3f:	add    BYTE PTR [rax+0x1400060],dl
   140009a45:	add    BYTE PTR [rax],al
   140009a47:	add    BYTE PTR [rax+0x1400060],dh
   140009a4d:	add    BYTE PTR [rax],al
   140009a4f:	add    BYTE PTR [rbx+0x79],dh
   140009a52:	jae    0x140009ac8
   140009a54:	gs ins DWORD PTR es:[rdi],dx
   140009a56:	add    BYTE PTR [rax],al
   140009a58:	call   0x141409b00
   140009a5d:	add    BYTE PTR [rax],al
   140009a5f:	add    dh,dl
   140009a61:	jno    0x140009a63
   140009a63:	rex add DWORD PTR [rax],eax
   140009a66:	add    BYTE PTR [rax],al
   140009a68:	(bad)  
   140009a69:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a6a:	add    BYTE PTR [rax+0x1],al
   140009a6d:	add    BYTE PTR [rax],al
   140009a6f:	add    dh,dl
   140009a71:	jno    0x140009a73
   140009a73:	rex add DWORD PTR [rax],eax
   140009a76:	add    BYTE PTR [rax],al
   140009a78:	(bad)  
   140009a79:	jno    0x140009a7b
   140009a7b:	rex add DWORD PTR [rax],eax
   140009a7e:	add    BYTE PTR [rax],al
   140009a80:	jo     0x140009ac6
   140009a82:	add    BYTE PTR [rax+0x1],al
   140009a85:	add    BYTE PTR [rax],al
   140009a87:	add    al,bl
   140009a89:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009a8a:	add    BYTE PTR [rax+0x1],al
   140009a8d:	add    BYTE PTR [rax],al
   140009a8f:	add    BYTE PTR [rax],al
   140009a91:	add    BYTE PTR [r8+0x1],r8b
   140009a95:	add    BYTE PTR [rax],al
   140009a97:	add    dh,dl
   140009a99:	jno    0x140009a9b
   140009a9b:	rex add DWORD PTR [rax],eax
   140009a9e:	add    BYTE PTR [rax],al
   140009aa0:	and    BYTE PTR [rax+0x0],ah
   140009aa3:	rex add DWORD PTR [rax],eax
   140009aa6:	add    BYTE PTR [rax],al
   140009aa8:	(bad)  
   140009aa9:	jno    0x140009aab
   140009aab:	rex add DWORD PTR [rax],eax
   140009aae:	add    BYTE PTR [rax],al
   140009ab0:	(bad)  
   140009ab1:	jno    0x140009ab3
   140009ab3:	rex add DWORD PTR [rax],eax
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	push   rax
   140009ab9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009aba:	add    BYTE PTR [rax+0x1],al
   140009abd:	add    BYTE PTR [rax],al
   140009abf:	add    BYTE PTR [rax+0x43],dl
   140009ac2:	add    BYTE PTR [rax+0x1],al
   140009ac5:	add    BYTE PTR [rax],al
   140009ac7:	add    BYTE PTR [rax],dh
   140009ac9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009aca:	add    BYTE PTR [rax+0x1],al
   140009acd:	add    BYTE PTR [rax],al
   140009acf:	add    BYTE PTR [rax+rax*2],dh
   140009ad2:	add    BYTE PTR [rax+0x1],al
   140009ad5:	add    BYTE PTR [rax],al
   140009ad7:	add    BYTE PTR [rbx+rsi*2],ah
   140009ada:	add    BYTE PTR [rax+0x1],al
   140009add:	add    BYTE PTR [rax],al
   140009adf:	add    BYTE PTR [rax-0x5a],bl
   140009ae2:	add    BYTE PTR [rax+0x1],al
   140009ae5:	add    BYTE PTR [rax],al
   140009ae7:	add    BYTE PTR [rax],al
   140009ae9:	add    BYTE PTR [rax+0x1],r8b
   140009aed:	add    BYTE PTR [rax],al
   140009aef:	add    BYTE PTR [rax],dl
   140009af1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009af2:	add    BYTE PTR [rax+0x1],al
   140009af5:	add    BYTE PTR [rax],al
   140009af7:	add    BYTE PTR [rax+0x40],al
   140009afa:	add    BYTE PTR [rax+0x1],al
   140009afd:	add    BYTE PTR [rax],al
   140009aff:	add    BYTE PTR [rbx+rsi*2],ah
   140009b02:	add    BYTE PTR [rax+0x1],al
   140009b05:	add    BYTE PTR [rax],al
   140009b07:	add    BYTE PTR [rax],bh
   140009b09:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009b0a:	add    BYTE PTR [rax+0x1],al
   140009b0d:	add    BYTE PTR [rax],al
   140009b0f:	add    BYTE PTR [rax],dh
   140009b11:	add    BYTE PTR [r8+0x1],r8b
   140009b15:	add    BYTE PTR [rax],al
   140009b17:	add    al,ah
   140009b19:	ins    BYTE PTR es:[rdi],dx
   140009b1a:	add    BYTE PTR [rax+0x1],al
   140009b1d:	add    BYTE PTR [rax],al
   140009b1f:	add    al,al
   140009b21:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009b22:	add    BYTE PTR [rax+0x1],al
   140009b25:	add    BYTE PTR [rax],al
   140009b27:	add    BYTE PTR [rax+0x1400045],ah
   140009b2d:	add    BYTE PTR [rax],al
   140009b2f:	add    al,ah
   140009b31:	ins    BYTE PTR es:[rdi],dx
   140009b32:	add    BYTE PTR [rax+0x1],al
   140009b35:	add    BYTE PTR [rax],al
   140009b37:	add    BYTE PTR [rax-0x58],dl
   140009b3a:	add    BYTE PTR [rax+0x1],al
   140009b3d:	add    BYTE PTR [rax],al
   140009b3f:	add    BYTE PTR [rax],dl
   140009b41:	rex.RX add BYTE PTR [rax+0x1],r8b
   140009b45:	add    BYTE PTR [rax],al
   140009b47:	add    al,ah
   140009b49:	ins    BYTE PTR es:[rdi],dx
   140009b4a:	add    BYTE PTR [rax+0x1],al
   140009b4d:	add    BYTE PTR [rax],al
   140009b4f:	add    BYTE PTR [rdx+0x6f],ah
   140009b52:	outs   dx,DWORD PTR ds:[rsi]
   140009b53:	jae    0x140009bc9
   140009b55:	cmp    bh,BYTE PTR [rdx]
   140009b57:	je     0x140009bc1
   140009b59:	jb     0x140009bc0
   140009b5b:	(bad)  
   140009b5c:	fs pop rdi
   140009b5e:	jb     0x140009bc5
   140009b60:	jae    0x140009bd1
   140009b62:	jne    0x140009bd6
   140009b64:	movsxd esp,DWORD PTR [rbp+0x5f]
   140009b67:	gs jb  0x140009bdc
   140009b6a:	outs   dx,DWORD PTR ds:[rsi]
   140009b6b:	jb     0x140009b6d
   140009b6d:	add    BYTE PTR [rax],al
   140009b6f:	add    BYTE PTR [rax+rax*1+0x69],ch
   140009b73:	add    BYTE PTR [rdx+0x0],ah
   140009b76:	ins    DWORD PTR es:[rdi],dx
   140009b77:	add    BYTE PTR [rdi+0x0],dh
   140009b7a:	ins    BYTE PTR es:[rdi],dx
   140009b7b:	add    BYTE PTR [rbp+0x0],ch
   140009b7e:	add    BYTE PTR [edx+0x0],dh
   140009b82:	imul   eax,DWORD PTR [rax],0x70006d
   140009b88:	ins    BYTE PTR es:[rdi],dx
   140009b89:	add    BYTE PTR [rax],al
   140009b8b:	add    BYTE PTR [rax],al
   140009b8d:	add    BYTE PTR [rax],al
   140009b8f:	add    BYTE PTR [rsi+0x65],dh
   140009b92:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140009b96:	cmp    al,0x54
   140009b98:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   140009b9d:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140009ba1:	add    BYTE PTR [eax],al
   140009ba4:	add    BYTE PTR [rax],al
   140009ba6:	add    BYTE PTR [rax],al
   140009ba8:	jae    0x140009c1e
   140009baa:	jb     0x140009c15
   140009bac:	outs   dx,BYTE PTR ds:[rsi]
   140009bad:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140009bb2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140009bb6:	add    BYTE PTR [ecx+0x6e],ch
   140009bba:	jbe    0x140009c1d
   140009bbc:	ins    BYTE PTR es:[rdi],dx
   140009bbd:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   140009bc5:	and    BYTE PTR [eax+0x6f],dh
   140009bc9:	jae    0x140009c34
   140009bcb:	je     0x140009c36
   140009bcd:	outs   dx,DWORD PTR ds:[rsi]
   140009bce:	outs   dx,BYTE PTR ds:[rsi]
   140009bcf:	add    BYTE PTR [rax],dl
   140009bd1:	test   eax,0x14000
   140009bd6:	add    BYTE PTR [rax],al
   140009bd8:	lock add BYTE PTR [r8+0x1],al
   140009bdd:	add    BYTE PTR [rax],al
   140009bdf:	add    al,ah
   140009be1:	ins    BYTE PTR es:[rdi],dx
   140009be2:	add    BYTE PTR [rax+0x1],al
   140009be5:	add    BYTE PTR [rax],al
   140009be7:	add    al,ah
   140009be9:	test   eax,0x14000
   140009bee:	add    BYTE PTR [rax],al
   140009bf0:	js     0x140009c31
   140009bf2:	add    BYTE PTR [rax+0x1],al
   140009bf5:	add    BYTE PTR [rax],al
   140009bf7:	add    BYTE PTR [rax],cl
   140009bf9:	stos   BYTE PTR es:[rdi],al
   140009bfa:	add    BYTE PTR [rax+0x1],al
   140009bfd:	add    BYTE PTR [rax],al
   140009bff:	add    al,dh
   140009c01:	add    BYTE PTR [rax+0x1],al
   140009c05:	add    BYTE PTR [rax],al
   140009c07:	add    al,ah
   140009c09:	ins    BYTE PTR es:[rdi],dx
   140009c0a:	add    BYTE PTR [rax+0x1],al
   140009c0d:	add    BYTE PTR [rax],al
   140009c0f:	add    al,dh
   140009c11:	stos   BYTE PTR es:[rdi],al
   140009c12:	add    BYTE PTR [rax+0x1],al
   140009c15:	add    BYTE PTR [rax],al
   140009c17:	add    BYTE PTR [rdi+rdi*1],dh
   140009c1a:	add    BYTE PTR [rax+0x1],al
   140009c1d:	add    BYTE PTR [rax],al
   140009c1f:	add    BYTE PTR [rax],bl
   140009c21:	stos   DWORD PTR es:[rdi],eax
   140009c22:	add    BYTE PTR [rax+0x1],al
   140009c25:	add    BYTE PTR [rax],al
   140009c27:	add    BYTE PTR [rax+0x5b],ch
   140009c2a:	add    BYTE PTR [rax+0x1],al
   140009c2d:	add    BYTE PTR [rax],al
   140009c2f:	add    BYTE PTR [rax+0x1400068],ah
   140009c35:	add    BYTE PTR [rax],al
   140009c37:	add    BYTE PTR [rax],ah
   140009c39:	(bad)  
   140009c3a:	add    BYTE PTR [rax+0x1],al
   140009c3d:	add    BYTE PTR [rax],al
   140009c3f:	add    BYTE PTR [rax+0x10ffffff],dl
   140009c45:	add    BYTE PTR [rax],al
   140009c47:	add    BYTE PTR [rax-0x55],al
   140009c4a:	add    BYTE PTR [rax+0x1],al
   140009c4d:	add    BYTE PTR [rax],al
   140009c4f:	add    BYTE PTR [rax+0x41],dh
   140009c52:	add    BYTE PTR [rax+0x1],al
   140009c55:	add    BYTE PTR [rax],al
   140009c57:	add    al,ah
   140009c59:	stos   DWORD PTR es:[rdi],eax
   140009c5a:	add    BYTE PTR [rax+0x1],al
   140009c5d:	add    BYTE PTR [rax],al
   140009c5f:	add    BYTE PTR [rax+0x3f],dl
   140009c62:	add    BYTE PTR [rax+0x1],al
   140009c65:	add    BYTE PTR [rax],al
   140009c67:	add    BYTE PTR [rbx+rsi*2],ah
   140009c6a:	add    BYTE PTR [rax+0x1],al
   140009c6d:	add    BYTE PTR [rax],al
   140009c6f:	add    BYTE PTR [rax],cl
   140009c71:	lods   al,BYTE PTR ds:[rsi]
   140009c72:	add    BYTE PTR [rax+0x1],al
   140009c75:	add    BYTE PTR [rax],al
   140009c77:	add    ah,ah
   140009c79:	pop    rbx
   140009c7a:	add    BYTE PTR [rax+0x1],al
   140009c7d:	add    BYTE PTR [rax],al
   140009c7f:	add    ah,cl
   140009c81:	imul   eax,DWORD PTR [rax],0x140
   140009c87:	add    BYTE PTR [rax+0x3f],al
   140009c8a:	add    BYTE PTR [rax+0x1],al
   140009c8d:	add    BYTE PTR [rax],al
   140009c8f:	add    al,al
   140009c91:	(bad)  
   140009c92:	(bad)  
   140009c93:	call   QWORD PTR [rax]
	...
   140009c9d:	add    BYTE PTR [rax],al
   140009c9f:	add    BYTE PTR [rbp+rbp*2+0x61],bl
   140009ca3:	je     0x140009d0d
   140009ca5:	ja     0x140009d16
   140009ca7:	jb     0x140009d14
   140009ca9:	jae    0x140009d07
   140009cab:	push   0x335c6275
   140009cb0:	jb     0x140009d16
   140009cb2:	jo     0x140009d15
   140009cb4:	jb     0x140009d2a
   140009cb6:	jns    0x140009d14
   140009cb8:	jb     0x140009cec
   140009cba:	xor    BYTE PTR [rcx],dh
   140009cbc:	(bad)  
   140009cbd:	(bad)  
   140009cbe:	pop    rsp
   140009cbf:	xor    DWORD PTR [rcx],edi
   140009cc1:	(bad)  
   140009cc2:	xor    DWORD PTR [rax],esi
   140009cc4:	(bad)  
   140009cc5:	cmp    DWORD PTR [rdi+rsi*2+0x69],ebx
   140009cc9:	outs   dx,BYTE PTR ds:[rsi]
   140009cca:	ss xor al,0x5c
   140009ccd:	(bad)  
   140009cce:	outs   dx,DWORD PTR ds:[rsi]
   140009ccf:	outs   dx,DWORD PTR ds:[rsi]
   140009cd0:	jae    0x140009d46
   140009cd2:	pop    rsp
   140009cd3:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
   140009cda:	pop    rsp
   140009cdb:	(bad)  
   140009cdc:	outs   dx,DWORD PTR ds:[rsi]
   140009cdd:	outs   dx,DWORD PTR ds:[rsi]
   140009cde:	jae    0x140009d54
   140009ce0:	sub    eax,0x36355f31
   140009ce5:	pop    rsp
   140009ce6:	(bad)  
   140009ce7:	outs   dx,DWORD PTR ds:[rsi]
   140009ce8:	outs   dx,DWORD PTR ds:[rsi]
   140009ce9:	jae    0x140009d5f
   140009ceb:	pop    rsp
   140009cec:	gs js  0x140009d52
   140009cef:	gs jo  0x140009d66
   140009cf2:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645c
   140009cf9:	(bad)  
   140009cfa:	imul   ebp,DWORD PTR [rsp+rbx*2+0x65],0x70656378
   140009d02:	je     0x140009d6d
   140009d04:	outs   dx,DWORD PTR ds:[rsi]
   140009d05:	outs   dx,BYTE PTR ds:[rsi]
   140009d06:	pop    rdi
   140009d07:	jo     0x140009d7d
   140009d09:	jb     0x140009d39
   140009d0b:	push   0x7070
   140009d10:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   140009d14:	jae    0x140009d36
   140009d16:	(bad)  
   140009d17:	outs   dx,DWORD PTR ds:[rsi]
   140009d18:	outs   dx,DWORD PTR ds:[rsi]
   140009d19:	jae    0x140009d8f
   140009d1b:	cmp    bh,BYTE PTR [rdx]
   140009d1d:	gs js  0x140009d83
   140009d20:	gs jo  0x140009d97
   140009d23:	imul   ebp,DWORD PTR [rdi+0x6e],0x7274705f
   140009d2a:	and    BYTE PTR [rdi+0x5f],bl
   140009d2d:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   140009d31:	ins    BYTE PTR es:[rdi],dx
   140009d32:	and    BYTE PTR [rdx+0x6f],ah
   140009d35:	outs   dx,DWORD PTR ds:[rsi]
   140009d36:	jae    0x140009dac
   140009d38:	cmp    bh,BYTE PTR [rdx]
   140009d3a:	gs js  0x140009da0
   140009d3d:	gs jo  0x140009db4
   140009d40:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   140009d47:	(bad)  
   140009d48:	imul   ebp,DWORD PTR [rdx+rdi*1+0x3a],0x5f746567
   140009d50:	jae    0x140009dc6
   140009d52:	(bad)  
   140009d53:	je     0x140009dbe
   140009d55:	movsxd ebx,DWORD PTR [rdi+0x65]
   140009d58:	js     0x140009dbd
   140009d5a:	gs jo  0x140009dd1
   140009d5d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6a626f5f
   140009d64:	movsxd esi,DWORD PTR gs:[rsp+rdi*1+0x73]
   140009d69:	je     0x140009ddd
   140009d6b:	jne    0x140009dd0
   140009d6d:	je     0x140009d8f
   140009d6f:	(bad)  
   140009d70:	outs   dx,DWORD PTR ds:[rsi]
   140009d71:	outs   dx,DWORD PTR ds:[rsi]
   140009d72:	jae    0x140009de8
   140009d74:	cmp    bh,BYTE PTR [rdx]
   140009d76:	gs js  0x140009ddc
   140009d79:	gs jo  0x140009df0
   140009d7c:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   140009d83:	(bad)  
   140009d84:	imul   ebp,DWORD PTR [rdx+rdi*1+0x3a],0x5f646162
   140009d8c:	(bad)  
   140009d8d:	ins    BYTE PTR es:[rdi],dx
   140009d8e:	ins    BYTE PTR es:[rdi],dx
   140009d8f:	outs   dx,DWORD PTR ds:[rsi]
   140009d90:	movsxd ebx,DWORD PTR [rdi+0x3e]
   140009d93:	sub    BYTE PTR [rsi+0x6f],dh
   140009d96:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x0
   140009d9e:	add    BYTE PTR [rax],al
   140009da0:	xor    BYTE PTR [rax+rax*1+0x140],ch
   140009da7:	add    BYTE PTR [rax+0x1400041],dh
   140009dad:	add    BYTE PTR [rax],al
   140009daf:	add    al,dl
   140009db1:	lods   al,BYTE PTR ds:[rsi]
   140009db2:	add    BYTE PTR [rax+0x1],al
   140009db5:	add    BYTE PTR [rax],al
   140009db7:	add    BYTE PTR [rdi+rdi*1+0x0],ch
   140009dbb:	rex add DWORD PTR [rax],eax
   140009dbe:	add    BYTE PTR [rax],al
   140009dc0:	and    al,0x73
   140009dc2:	add    BYTE PTR [rax+0x1],al
   140009dc5:	add    BYTE PTR [rax],al
   140009dc7:	add    al,bh
   140009dc9:	lods   al,BYTE PTR ds:[rsi]
   140009dca:	add    BYTE PTR [rax+0x1],al
   140009dcd:	add    BYTE PTR [rax],al
   140009dcf:	add    al,al
   140009dd1:	pop    rsp
   140009dd2:	add    BYTE PTR [rax+0x1],al
   140009dd5:	add    BYTE PTR [rax],al
   140009dd7:	add    BYTE PTR [rdx+rbp*2+0x14000],dh
   140009dde:	add    BYTE PTR [rax],al
   140009de0:	pop    rsp
   140009de1:	(bad)  
   140009de2:	add    BYTE PTR [rax+0x1],al
   140009de5:	add    BYTE PTR [rax],al
   140009de7:	add    al,al
   140009de9:	(bad)  
   140009dea:	(bad)  
   140009deb:	call   QWORD PTR [rax]
   140009ded:	add    BYTE PTR [rax],al
   140009def:	add    BYTE PTR [rbx+0x6c],ah
   140009df2:	(bad)  
   140009df3:	jae    0x140009e68
   140009df5:	and    BYTE PTR [rdx+0x6f],ah
   140009df8:	outs   dx,DWORD PTR ds:[rsi]
   140009df9:	jae    0x140009e6f
   140009dfb:	cmp    bh,BYTE PTR [rdx]
   140009dfd:	gs js  0x140009e63
   140009e00:	gs jo  0x140009e77
   140009e03:	imul   ebp,DWORD PTR [rdi+0x6e],0x7274705f
   140009e0a:	and    BYTE PTR [rdi+0x5f],bl
   140009e0d:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   140009e11:	ins    BYTE PTR es:[rdi],dx
   140009e12:	and    BYTE PTR [rdx+0x6f],ah
   140009e15:	outs   dx,DWORD PTR ds:[rsi]
   140009e16:	jae    0x140009e8c
   140009e18:	cmp    bh,BYTE PTR [rdx]
   140009e1a:	gs js  0x140009e80
   140009e1d:	gs jo  0x140009e94
   140009e20:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   140009e27:	(bad)  
   140009e28:	imul   ebp,DWORD PTR [rdx+rdi*1+0x3a],0x5f746567
   140009e30:	jae    0x140009ea6
   140009e32:	(bad)  
   140009e33:	je     0x140009e9e
   140009e35:	movsxd ebx,DWORD PTR [rdi+0x65]
   140009e38:	js     0x140009e9d
   140009e3a:	gs jo  0x140009eb1
   140009e3d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6a626f5f
   140009e44:	movsxd esi,DWORD PTR gs:[rsp+rdi*1+0x73]
   140009e49:	je     0x140009ebd
   140009e4b:	jne    0x140009eb0
   140009e4d:	je     0x140009e6f
   140009e4f:	(bad)  
   140009e50:	outs   dx,DWORD PTR ds:[rsi]
   140009e51:	outs   dx,DWORD PTR ds:[rsi]
   140009e52:	jae    0x140009ec8
   140009e54:	cmp    bh,BYTE PTR [rdx]
   140009e56:	gs js  0x140009ebc
   140009e59:	gs jo  0x140009ed0
   140009e5c:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   140009e63:	(bad)  
   140009e64:	imul   ebp,DWORD PTR [rdx+rdi*1+0x3a],0x5f646162
   140009e6c:	gs js  0x140009ed2
   140009e6f:	gs jo  0x140009ee6
   140009e72:	imul   ebp,DWORD PTR [rdi+0x6e],0x76283e5f
   140009e79:	outs   dx,DWORD PTR ds:[rsi]
   140009e7a:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x61620000
   140009e82:	and    BYTE PTR fs:[rbp+0x78],ah
   140009e86:	movsxd esp,DWORD PTR [rbp+0x70]
   140009e89:	je     0x140009ef4
   140009e8b:	outs   dx,DWORD PTR ds:[rsi]
   140009e8c:	outs   dx,BYTE PTR ds:[rsi]
   140009e8d:	add    BYTE PTR [rax],al
   140009e8f:	add    BYTE PTR [rax],ah
   140009e91:	lods   eax,DWORD PTR ds:[rsi]
   140009e92:	add    BYTE PTR [rax+0x1],al
   140009e95:	add    BYTE PTR [rax],al
   140009e97:	add    BYTE PTR [rax],ah
   140009e99:	rex.X add BYTE PTR [rax+0x1],al
   140009e9d:	add    BYTE PTR [rax],al
   140009e9f:	add    BYTE PTR [rax+0x60],al
   140009ea2:	add    BYTE PTR [rax+0x1],al
   140009ea5:	add    BYTE PTR [rax],al
   140009ea7:	add    BYTE PTR [rax],ah
   140009ea9:	(bad)  
   140009eaa:	add    BYTE PTR [rax+0x1],al
   140009ead:	add    BYTE PTR [rax],al
   140009eaf:	add    BYTE PTR [rax],ah
   140009eb1:	movsxd eax,DWORD PTR [rax]
   140009eb3:	rex add DWORD PTR [rax],eax
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	nop
   140009eb9:	movsxd eax,DWORD PTR [rax]
   140009ebb:	rex add DWORD PTR [rax],eax
   140009ebe:	add    BYTE PTR [rax],al
   140009ec0:	movabs al,ds:0x50000000014000ad
   140009ec9:	rex.X add BYTE PTR [rax+0x1],al
   140009ecd:	add    BYTE PTR [rax],al
   140009ecf:	add    BYTE PTR [rax+0x60],ah
   140009ed2:	add    BYTE PTR [rax+0x1],al
   140009ed5:	add    BYTE PTR [rax],al
   140009ed7:	add    BYTE PTR [rax],ah
   140009ed9:	(bad)  
   140009eda:	add    BYTE PTR [rax+0x1],al
   140009edd:	add    BYTE PTR [rax],al
   140009edf:	add    BYTE PTR [rax],dh
   140009ee1:	movsxd eax,DWORD PTR [rax]
   140009ee3:	rex add DWORD PTR [rax],eax
   140009ee6:	add    BYTE PTR [rax],al
   140009ee8:	movabs al,ds:0x3900000001400063
   140009ef1:	xor    ch,BYTE PTR cs:[rsi]
   140009ef4:	xor    BYTE PTR [rsi],ch
   140009ef6:	xor    eax,0x34363831
   140009efb:	xor    DWORD PTR [rax],eax
   140009efd:	add    BYTE PTR [rax],al
   140009eff:	add    BYTE PTR [rdx+0x61],cl
   140009f02:	outs   dx,BYTE PTR ds:[rsi]
   140009f03:	and    BYTE PTR [rcx],dh
   140009f05:	cmp    DWORD PTR [rax],esp
   140009f07:	xor    dh,BYTE PTR [rax]
   140009f09:	xor    DWORD PTR [rdi],esi
   140009f0b:	add    BYTE PTR [rax],al
   140009f0d:	add    BYTE PTR [rax],al
   140009f0f:	add    BYTE PTR [rdx+0x69],ah
   140009f12:	outs   dx,BYTE PTR ds:[rsi]
   140009f13:	pop    rsp
   140009f14:	ja     0x140009f7f
   140009f16:	outs   dx,BYTE PTR ds:[rsi]
   140009f17:	ss xor al,0x5c
   140009f1a:	rex.WRB
   140009f1b:	push   r12
   140009f1d:	rex.WR
   140009f1e:	rex.B
   140009f1f:	rex.X
   140009f20:	cs gs js 0x140009f89
   140009f24:	add    BYTE PTR [rax],al
   140009f26:	add    DWORD PTR [rax],eax
   140009f28:	and    BYTE PTR [rsi+0x14000],ch
   140009f2e:	add    BYTE PTR [rax],al
   140009f30:	pop    rax
   140009f31:	jae    0x140009f33
   140009f33:	rex add DWORD PTR [rax],eax
   140009f36:	add    BYTE PTR [rax],al
   140009f38:	add    BYTE PTR [rax],al
   140009f3a:	add    BYTE PTR [rax],al
   140009f3c:	add    DWORD PTR [rax],eax
   140009f3e:	add    BYTE PTR [rax],al
   140009f40:	add    al,BYTE PTR [rax]
   140009f42:	add    BYTE PTR [rax],al
   140009f44:	add    eax,DWORD PTR [rax]
   140009f46:	add    BYTE PTR [rax],al
   140009f48:	add    al,0x0
   140009f4a:	add    BYTE PTR [rax],al
   140009f4c:	add    BYTE PTR [rax],al
   140009f4e:	add    BYTE PTR [rax],al
   140009f50:	jo     0x140009f52
	...
   140009fa6:	add    BYTE PTR [rax],al
   140009fa8:	rex loopne 0x140009fab
   140009fab:	rex add DWORD PTR [rax],eax
	...
   140009fbe:	add    BYTE PTR [rax],al
   140009fc0:	push   rdx
   140009fc1:	push   rbx
   140009fc2:	rex.R push rbx
   140009fc4:	jmp    0x140009fcd
   140009fc6:	iret   
   140009fc7:	sub    eax,0x42cd6f3c
   140009fcc:	mov    edx,0x6349d48e
   140009fd1:	(bad)  
   140009fd2:	sbb    cl,0x1
   140009fd5:	add    BYTE PTR [rax],al
   140009fd7:	add    BYTE PTR [rdx+0x3a],al
   140009fda:	pop    rsp
   140009fdb:	ins    DWORD PTR es:[rdi],dx
   140009fdc:	(bad)  
   140009fdd:	je     0x14000a04b
   140009fdf:	(bad)  
   140009fe0:	(bad)  
   140009fe1:	pop    rsp
   140009fe2:	(bad)  
   140009fe3:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140009fea:	xor    al,0x5c
   140009fec:	rex.WRB
   140009fed:	push   r12
   140009fef:	rex.WR
   140009ff0:	rex.B
   140009ff1:	rex.X
   140009ff2:	cs jo  0x14000a059
   140009ff5:	(bad)  
   140009ff6:	add    BYTE PTR [rax],al
   140009ff8:	add    BYTE PTR [rax],al
   140009ffa:	add    BYTE PTR [rax],al
   140009ffc:	(bad)  
   140009ffd:	add    BYTE PTR [rax],al
   140009fff:	add    BYTE PTR [rax+rax*1],dl
	...
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	add    DWORD PTR [rax],eax
	...
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	sub    cl,ah
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	cmp    BYTE PTR [rax-0x5ff00000],ah
	...
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	add    al,BYTE PTR [rax]
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	push   rax
   14000a045:	movabs al,ds:0x0
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	push   0xffffffff900000a0
   14000a055:	movabs al,ds:0x0
	...
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	sub    cl,ah
   14000a06a:	add    BYTE PTR [rax],al
   14000a06c:	add    DWORD PTR [rax],eax
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	add    BYTE PTR [rax],al
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	(bad)  
   14000a075:	(bad)  
   14000a076:	(bad)  
   14000a077:	inc    DWORD PTR [rax]
   14000a079:	add    BYTE PTR [rax],al
   14000a07b:	add    BYTE PTR [rax+0x0],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	cmp    BYTE PTR [rax+0x0],ah
	...
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	js     0x14000a072
	...
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	(bad)  
   14000a09d:	(bad)  
   14000a09e:	(bad)  
   14000a09f:	inc    DWORD PTR [rax]
   14000a0a1:	add    BYTE PTR [rax],al
   14000a0a3:	add    BYTE PTR [rax+0x0],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	mov    eax,0xa0
	...
   14000a0bd:	add    BYTE PTR [rax],al
   14000a0bf:	add    BYTE PTR [rcx],al
   14000a0c1:	add    BYTE PTR [rax],al
   14000a0c3:	add    al,dl
   14000a0c5:	movabs al,ds:0x0
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	nop
   14000a0d1:	movabs al,ds:0x0
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	add    BYTE PTR [rax],al
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	add    DWORD PTR [rax],eax
	...
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	add    cl,ah
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	or     BYTE PTR [rcx-0x5f200000],ah
	...
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	add    al,BYTE PTR [rax]
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	and    BYTE PTR [rcx+0x0],ah
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    BYTE PTR [rax],al
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	cmp    BYTE PTR [rcx-0x5f700000],ah
	...
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	add    cl,ah
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    DWORD PTR [rax],eax
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	add    BYTE PTR [rax],al
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	(bad)  
   14000a145:	(bad)  
   14000a146:	(bad)  
   14000a147:	inc    DWORD PTR [rax]
   14000a149:	add    BYTE PTR [rax],al
   14000a14b:	add    BYTE PTR [rax+0x0],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	or     BYTE PTR [rcx+0x0],ah
	...
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	add    DWORD PTR [rax],eax
	...
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	push   rax
   14000a16d:	loopne 0x14000a16f
   14000a16f:	add    BYTE PTR [rax+0x600000a1],cl
   14000a175:	movabs eax,ds:0x0
	...
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	add    al,BYTE PTR [rax]
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	movabs al,ds:0xa1
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rax-0x6fffff5f],bh
   14000a1a5:	movabs al,ds:0x0
	...
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	push   rax
   14000a1b9:	loopne 0x14000a1bb
   14000a1bb:	add    BYTE PTR [rcx],al
   14000a1bd:	add    BYTE PTR [rax],al
   14000a1bf:	add    BYTE PTR [rax],al
   14000a1c1:	add    BYTE PTR [rax],al
   14000a1c3:	add    bh,bh
   14000a1c5:	(bad)  
   14000a1c6:	(bad)  
   14000a1c7:	inc    DWORD PTR [rax]
   14000a1c9:	add    BYTE PTR [rax],al
   14000a1cb:	add    BYTE PTR [rax+0x0],al
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	mov    BYTE PTR [rcx+0x0],ah
	...
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	add    DWORD PTR [rax],eax
	...
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	sub    ah,ah
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	or     BYTE PTR [rdx-0x5e200000],ah
	...
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	add    DWORD PTR [rax],eax
   14000a212:	add    BYTE PTR [rax],al
   14000a214:	and    BYTE PTR [rdx+0x0],ah
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	add    BYTE PTR [rax],al
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	xor    BYTE PTR [rdx+0x0],ah
	...
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	sub    ah,ah
	...
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	(bad)  
   14000a23d:	(bad)  
   14000a23e:	(bad)  
   14000a23f:	inc    DWORD PTR [rax]
   14000a241:	add    BYTE PTR [rax],al
   14000a243:	add    BYTE PTR [rax+0x0],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	or     BYTE PTR [rdx+0x0],ah
	...
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	add    DWORD PTR [rax],eax
	...
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	pop    rax
   14000a265:	in     al,0x0
   14000a267:	add    BYTE PTR [rax+0x580000a2],al
   14000a26d:	movabs ds:0x0,al
	...
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	add    al,BYTE PTR [rax]
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	cwde   
   14000a28d:	movabs ds:0x0,al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	mov    al,0xa2
   14000a29a:	add    BYTE PTR [rax],al
   14000a29c:	xor    BYTE PTR [rdx+0x0],ah
	...
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	pop    rax
   14000a2b1:	in     al,0x0
   14000a2b3:	add    BYTE PTR [rcx],al
   14000a2b5:	add    BYTE PTR [rax],al
   14000a2b7:	add    BYTE PTR [rax],al
   14000a2b9:	add    BYTE PTR [rax],al
   14000a2bb:	add    bh,bh
   14000a2bd:	(bad)  
   14000a2be:	(bad)  
   14000a2bf:	inc    DWORD PTR [rax]
   14000a2c1:	add    BYTE PTR [rax],al
   14000a2c3:	add    BYTE PTR [rax+0x0],al
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	and    BYTE PTR [rdx+0x0],0x0
	...
   14000a2d7:	add    BYTE PTR [rcx],al
	...
   14000a2e1:	add    BYTE PTR [rax],al
   14000a2e3:	add    BYTE PTR [rax+0xe4],dl
   14000a2e9:	movabs ds:0xa2d80000,eax
	...
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	add    eax,DWORD PTR [rax]
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	sbb    BYTE PTR [rbx+0x0],ah
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	add    BYTE PTR [rax],al
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	cmp    BYTE PTR [rbx-0x5d500000],ah
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	xor    BYTE PTR [rdx+0x0],ah
	...
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	nop
   14000a339:	in     al,0x0
   14000a33b:	add    BYTE PTR [rdx],al
   14000a33d:	add    BYTE PTR [rax],al
   14000a33f:	add    BYTE PTR [rax],al
   14000a341:	add    BYTE PTR [rax],al
   14000a343:	add    bh,bh
   14000a345:	(bad)  
   14000a346:	(bad)  
   14000a347:	inc    DWORD PTR [rax]
   14000a349:	add    BYTE PTR [rax],al
   14000a34b:	add    BYTE PTR [rax+0x0],al
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	add    BYTE PTR [rbx+0x0],ah
	...
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	add    DWORD PTR [rax],eax
	...
   14000a36a:	add    BYTE PTR [rax],al
   14000a36c:	enter  0xe4,0x0
   14000a370:	mov    BYTE PTR [rbx-0x5ca00000],ah
	...
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	add    eax,DWORD PTR [rax]
   14000a392:	add    BYTE PTR [rax],al
   14000a394:	movabs al,ds:0xa3
   14000a39d:	add    BYTE PTR [rax],al
   14000a39f:	add    al,al
   14000a3a1:	movabs ds:0xa2300000a2b00000,eax
	...
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	enter  0xe4,0x0
   14000a3c4:	add    al,BYTE PTR [rax]
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	add    BYTE PTR [rax],al
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	(bad)  
   14000a3cd:	(bad)  
   14000a3ce:	(bad)  
   14000a3cf:	inc    DWORD PTR [rax]
   14000a3d1:	add    BYTE PTR [rax],al
   14000a3d3:	add    BYTE PTR [rax+0x0],al
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	mov    BYTE PTR [rbx+0x0],ah
	...
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	add    DWORD PTR [rax],eax
	...
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	movabs al,ds:0xe80000a4100000e0
   14000a3fd:	movabs ds:0x0,eax
	...
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	add    DWORD PTR [rax],eax
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	sub    BYTE PTR [rax+rax*1+0x0],ah
   14000a423:	add    BYTE PTR [rax],al
   14000a425:	add    BYTE PTR [rax],al
   14000a427:	add    BYTE PTR [rax],bh
   14000a429:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	movabs al,ds:0xe0
   14000a441:	add    BYTE PTR [rax],al
   14000a443:	add    bh,bh
   14000a445:	(bad)  
   14000a446:	(bad)  
   14000a447:	inc    DWORD PTR [rax]
   14000a449:	add    BYTE PTR [rax],al
   14000a44b:	add    BYTE PTR [rax+0x0],al
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	adc    BYTE PTR [rax+rax*1+0x0],ah
	...
   14000a45f:	add    BYTE PTR [rcx],al
	...
   14000a469:	add    BYTE PTR [rax],al
   14000a46b:	add    al,cl
   14000a46d:	loopne 0x14000a46f
   14000a46f:	add    BYTE PTR [rax+0x600000a4],cl
   14000a475:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	add    DWORD PTR [rax],eax
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	movabs al,ds:0xa4
   14000a49d:	add    BYTE PTR [rax],al
   14000a49f:	add    BYTE PTR [rax+0xa4],dh
	...
   14000a4ad:	add    BYTE PTR [rax],al
   14000a4af:	add    al,cl
   14000a4b1:	loopne 0x14000a4b3
	...
   14000a4bb:	add    bh,bh
   14000a4bd:	(bad)  
   14000a4be:	(bad)  
   14000a4bf:	inc    DWORD PTR [rax]
   14000a4c1:	add    BYTE PTR [rax],al
   14000a4c3:	add    BYTE PTR [rax+0x0],al
   14000a4c6:	add    BYTE PTR [rax],al
   14000a4c8:	mov    BYTE PTR [rax+rax*1+0x0],ah
	...
   14000a4d7:	add    BYTE PTR [rcx],al
	...
   14000a4e5:	in     eax,0x0
   14000a4e7:	add    BYTE PTR [rax],al
   14000a4e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a4ea:	add    BYTE PTR [rax],al
   14000a4ec:	fsub   DWORD PTR [rax+rax*1+0x0]
	...
   14000a507:	add    BYTE PTR [rcx],al
   14000a509:	add    BYTE PTR [rax],al
   14000a50b:	add    BYTE PTR [rax],bl
   14000a50d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	sub    BYTE PTR [rbp+0x0],ah
	...
   14000a526:	add    BYTE PTR [rax],al
   14000a528:	add    ch,ah
	...
   14000a532:	add    BYTE PTR [rax],al
   14000a534:	(bad)  
   14000a535:	(bad)  
   14000a536:	(bad)  
   14000a537:	inc    DWORD PTR [rax]
   14000a539:	add    BYTE PTR [rax],al
   14000a53b:	add    BYTE PTR [rax+0x0],al
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	add    BYTE PTR [rbp+0x0],ah
	...
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	add    DWORD PTR [rax],eax
	...
   14000a55a:	add    BYTE PTR [rax],al
   14000a55c:	rex jrcxz 0x14000a55f
   14000a55f:	add    BYTE PTR [rax-0x5b],bh
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	push   rax
   14000a565:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a57a:	add    BYTE PTR [rax],al
   14000a57c:	add    DWORD PTR [rax],eax
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	add    al,0x0
   14000a582:	add    BYTE PTR [rax],al
   14000a584:	nop
   14000a585:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
   14000a58e:	add    BYTE PTR [rax],al
   14000a590:	mov    eax,0x380000a5
   14000a595:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a596:	add    BYTE PTR [rax],al
   14000a598:	loopne 0x14000a53f
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	or     BYTE PTR [rsi+0x0],ah
	...
   14000a5b6:	add    BYTE PTR [rax],al
   14000a5b8:	rex jrcxz 0x14000a5bb
   14000a5bb:	add    BYTE PTR [rbx],al
   14000a5bd:	add    BYTE PTR [rax],al
   14000a5bf:	add    BYTE PTR [rax],al
   14000a5c1:	add    BYTE PTR [rax],al
   14000a5c3:	add    bh,bh
   14000a5c5:	(bad)  
   14000a5c6:	(bad)  
   14000a5c7:	inc    DWORD PTR [rax]
   14000a5c9:	add    BYTE PTR [rax],al
   14000a5cb:	add    BYTE PTR [rax+0x0],al
   14000a5ce:	add    BYTE PTR [rax],al
   14000a5d0:	js     0x14000a577
	...
   14000a5de:	add    BYTE PTR [rax],al
   14000a5e0:	add    cl,ah
   14000a5e2:	add    BYTE PTR [rax],al
   14000a5e4:	add    DWORD PTR [rax],eax
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	sub    BYTE PTR [rax],al
   14000a5ea:	add    BYTE PTR [rax],al
   14000a5ec:	(bad)  
   14000a5ed:	(bad)  
   14000a5ee:	(bad)  
   14000a5ef:	inc    DWORD PTR [rax]
   14000a5f1:	add    BYTE PTR [rax],al
   14000a5f3:	add    BYTE PTR [rax+0x0],al
   14000a5f6:	add    BYTE PTR [rax],al
   14000a5f8:	or     BYTE PTR [rcx+0x0],ah
	...
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	js     0x14000a5ea
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	add    BYTE PTR [rax],al
   14000a60e:	add    BYTE PTR [rax],al
   14000a610:	sub    BYTE PTR [rax],al
   14000a612:	add    BYTE PTR [rax],al
   14000a614:	(bad)  
   14000a615:	(bad)  
   14000a616:	(bad)  
   14000a617:	inc    DWORD PTR [rax]
   14000a619:	add    BYTE PTR [rax],al
   14000a61b:	add    BYTE PTR [rax+0x0],al
   14000a61e:	add    BYTE PTR [rax],al
   14000a620:	mov    eax,0xa0
	...
   14000a62d:	add    BYTE PTR [rax],al
   14000a62f:	add    BYTE PTR [rcx],al
   14000a631:	add    BYTE PTR [rax],al
   14000a633:	add    BYTE PTR [rax],ch
   14000a635:	add    BYTE PTR [rax],al
   14000a637:	add    BYTE PTR [rax],al
   14000a639:	add    BYTE PTR [rax],al
   14000a63b:	add    BYTE PTR [rax-0x1d],al
   14000a63e:	add    BYTE PTR [rax],al
   14000a640:	js     0x14000a5e7
   14000a642:	add    BYTE PTR [rax],al
   14000a644:	xor    BYTE PTR [rsi+0x0],ah
	...
   14000a656:	add    BYTE PTR [rax],al
   14000a658:	add    DWORD PTR [rax],eax
	...
   14000a662:	add    BYTE PTR [rax],al
   14000a664:	call   0xc000a74c
   14000a669:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a66a:	add    BYTE PTR [rax],al
   14000a66c:	pop    rax
   14000a66d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   14000a682:	add    BYTE PTR [rax],al
   14000a684:	add    DWORD PTR [rax],eax
   14000a686:	add    BYTE PTR [rax],al
   14000a688:	add    al,0x0
   14000a68a:	add    BYTE PTR [rax],al
   14000a68c:	cwde   
   14000a68d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   14000a696:	add    BYTE PTR [rax],al
   14000a698:	shl    BYTE PTR [rsi-0x5bc80000],0x0
   14000a69f:	add    al,ch
   14000a6a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a6a2:	add    BYTE PTR [rax],al
   14000a6a4:	or     BYTE PTR [rsi+0x0],ah
	...
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	call   0x14300a7a8
   14000a6c5:	add    BYTE PTR [rax],al
   14000a6c7:	add    BYTE PTR [rax],al
   14000a6c9:	add    BYTE PTR [rax],al
   14000a6cb:	add    bh,bh
   14000a6cd:	(bad)  
   14000a6ce:	(bad)  
   14000a6cf:	inc    DWORD PTR [rax]
   14000a6d1:	add    BYTE PTR [rax],al
   14000a6d3:	add    BYTE PTR [rax+0x0],al
   14000a6d6:	add    BYTE PTR [rax],al
   14000a6d8:	and    BYTE PTR [rsi+0x0],0x0
	...
   14000a6e7:	add    BYTE PTR [rax],ch
   14000a6e9:	loope  0x14000a6eb
   14000a6eb:	add    BYTE PTR [rcx],al
   14000a6ed:	add    BYTE PTR [rax],al
   14000a6ef:	add    BYTE PTR [rax],ch
   14000a6f1:	add    BYTE PTR [rax],al
   14000a6f3:	add    bh,bh
   14000a6f5:	(bad)  
   14000a6f6:	(bad)  
   14000a6f7:	inc    DWORD PTR [rax]
   14000a6f9:	add    BYTE PTR [rax],al
   14000a6fb:	add    BYTE PTR [rax+0x0],al
   14000a6fe:	add    BYTE PTR [rax],al
   14000a700:	cmp    BYTE PTR [rax+0x0],ah
	...
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	add    DWORD PTR [rax],eax
   14000a712:	add    BYTE PTR [rax],al
   14000a714:	sub    BYTE PTR [rax],al
   14000a716:	add    BYTE PTR [rax],al
   14000a718:	add    BYTE PTR [rax],al
   14000a71a:	add    BYTE PTR [rax],al
   14000a71c:	call   0xc000a804
   14000a721:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a722:	add    BYTE PTR [rax],al
   14000a724:	adc    BYTE PTR [rdi+0x0],ah
	...
   14000a736:	add    BYTE PTR [rax],al
   14000a738:	add    DWORD PTR [rax],eax
	...
   14000a742:	add    BYTE PTR [rax],al
   14000a744:	mov    al,0xe2
   14000a746:	add    BYTE PTR [rax],al
   14000a748:	(bad)  
   14000a749:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a74a:	add    BYTE PTR [rax],al
   14000a74c:	cmp    BYTE PTR [rdi+0x0],ah
	...
   14000a766:	add    BYTE PTR [rax],al
   14000a768:	add    eax,DWORD PTR [rax]
   14000a76a:	add    BYTE PTR [rax],al
   14000a76c:	js     0x14000a715
	...
   14000a776:	add    BYTE PTR [rax],al
   14000a778:	cwde   
   14000a779:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a77a:	add    BYTE PTR [rax],al
   14000a77c:	mov    eax,0x900000a1
   14000a781:	movabs al,ds:0x0
	...
   14000a796:	add    BYTE PTR [rax],al
   14000a798:	mov    al,0xe2
   14000a79a:	add    BYTE PTR [rax],al
   14000a79c:	add    al,BYTE PTR [rax]
   14000a79e:	add    BYTE PTR [rax],al
   14000a7a0:	add    BYTE PTR [rax],al
   14000a7a2:	add    BYTE PTR [rax],al
   14000a7a4:	(bad)  
   14000a7a5:	(bad)  
   14000a7a6:	(bad)  
   14000a7a7:	inc    DWORD PTR [rax]
   14000a7a9:	add    BYTE PTR [rax],al
   14000a7ab:	add    BYTE PTR [rax+0x0],al
   14000a7ae:	add    BYTE PTR [rax],al
   14000a7b0:	(bad)  
   14000a7b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
   14000a7be:	add    BYTE PTR [rax],al
   14000a7c0:	add    DWORD PTR [rax],eax
	...
   14000a7ca:	add    BYTE PTR [rax],al
   14000a7cc:	and    dl,0x0
   14000a7cf:	add    al,ch
   14000a7d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a7d2:	add    BYTE PTR [rax],al
   14000a7d4:	shl    BYTE PTR [rdi+0x0],0x0
	...
   14000a7ef:	add    BYTE PTR [rax+rax*1],al
   14000a7f2:	add    BYTE PTR [rax],al
   14000a7f4:	add    BYTE PTR [rax+0x0],ch
   14000a7fa:	add    BYTE PTR [rax],al
   14000a7fc:	add    BYTE PTR [rax],al
   14000a7fe:	add    BYTE PTR [rax],al
   14000a800:	sub    BYTE PTR [rax-0x58680000],ch
   14000a806:	add    BYTE PTR [rax],al
   14000a808:	mov    eax,0x900000a1
   14000a80d:	movabs al,ds:0x0
	...
   14000a826:	add    BYTE PTR [rax],al
   14000a828:	and    dl,0x0
   14000a82b:	add    BYTE PTR [rbx],al
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rax],al
   14000a831:	add    BYTE PTR [rax],al
   14000a833:	add    bh,bh
   14000a835:	(bad)  
   14000a836:	(bad)  
   14000a837:	inc    DWORD PTR [rax]
   14000a839:	add    BYTE PTR [rax],al
   14000a83b:	add    BYTE PTR [rax+0x0],al
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	call   0x14000a8ec
	...
   14000a84d:	add    BYTE PTR [rax],al
   14000a84f:	add    BYTE PTR [rcx],al
	...
   14000a859:	add    BYTE PTR [rax],al
   14000a85b:	add    BYTE PTR [rax-0x1e],cl
   14000a85e:	add    BYTE PTR [rax],al
   14000a860:	js     0x14000a80a
   14000a862:	add    BYTE PTR [rax],al
   14000a864:	push   rax
   14000a865:	test   al,0x0
	...
   14000a87f:	add    BYTE PTR [rip+0xffffffff90000000],al        # 0xd000a885
   14000a885:	test   al,0x0
	...
   14000a88f:	add    al,al
   14000a891:	test   al,0x0
   14000a893:	add    BYTE PTR [rax],ch
   14000a895:	test   al,0x0
   14000a897:	add    BYTE PTR [rax-0x47ffff59],bl
   14000a89d:	movabs eax,ds:0xa0900000
	...
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	rex.W loop 0x14000a8c3
   14000a8c3:	add    BYTE PTR [rax+rax*1],al
   14000a8c6:	add    BYTE PTR [rax],al
   14000a8c8:	add    BYTE PTR [rax],al
   14000a8ca:	add    BYTE PTR [rax],al
   14000a8cc:	(bad)  
   14000a8cd:	(bad)  
   14000a8ce:	(bad)  
   14000a8cf:	inc    DWORD PTR [rax]
   14000a8d1:	add    BYTE PTR [rax],al
   14000a8d3:	add    BYTE PTR [rax+0x0],al
   14000a8d6:	add    BYTE PTR [rax],al
   14000a8d8:	js     0x14000a882
	...
   14000a8e6:	add    BYTE PTR [rax],al
   14000a8e8:	enter  0xe0,0x0
	...
   14000a8f4:	add    BYTE PTR [rax],al
   14000a8f7:	add    BYTE PTR [rax+rax*1],al
   14000a8fa:	add    BYTE PTR [rax],al
   14000a8fc:	push   rax
   14000a8fd:	add    BYTE PTR [rax],al
   14000a8ff:	add    BYTE PTR [rax+0xa4],cl
	...
   14000a90d:	add    BYTE PTR [rax],al
   14000a90f:	add    BYTE PTR [rcx],al
	...
   14000a919:	add    BYTE PTR [rax],al
   14000a91b:	add    al,ah
   14000a91d:	loope  0x14000a91f
   14000a91f:	add    BYTE PTR [rax],bh
   14000a921:	test   eax,0xa9100000
	...
   14000a93a:	add    BYTE PTR [rax],al
   14000a93c:	add    DWORD PTR [rax],eax
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	(bad)  
   14000a941:	add    BYTE PTR [rax],al
   14000a943:	add    BYTE PTR [rax-0x57],dl
	...
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	nop
   14000a951:	test   eax,0xa8c00000
   14000a956:	add    BYTE PTR [rax],al
   14000a958:	sub    BYTE PTR [rax-0x58680000],ch
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	mov    eax,0x900000a1
   14000a965:	movabs al,ds:0xa9b80000
	...
   14000a98e:	add    BYTE PTR [rax],al
   14000a990:	loopne 0x14000a973
   14000a992:	add    BYTE PTR [rax],al
   14000a994:	(bad)  
   14000a995:	add    BYTE PTR [rax],al
   14000a997:	add    BYTE PTR [rax],al
   14000a999:	add    BYTE PTR [rax],al
   14000a99b:	add    bh,bh
   14000a99d:	(bad)  
   14000a99e:	(bad)  
   14000a99f:	inc    DWORD PTR [rax]
   14000a9a1:	add    BYTE PTR [rax],al
   14000a9a3:	add    BYTE PTR [rax+0x0],al
   14000a9a6:	add    BYTE PTR [rax],al
   14000a9a8:	cmp    BYTE PTR [rcx+0x0],ch
	...
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	movabs al,ds:0x48000000000000e0
   14000a9c1:	add    BYTE PTR [rax],al
   14000a9c3:	add    bh,bh
   14000a9c5:	(bad)  
   14000a9c6:	(bad)  
   14000a9c7:	inc    DWORD PTR [rax]
   14000a9c9:	add    BYTE PTR [rax],al
   14000a9cb:	add    BYTE PTR [rax+0x0],al
   14000a9ce:	add    BYTE PTR [rax],al
   14000a9d0:	adc    BYTE PTR [rax+rax*1+0x0],ah
	...
   14000a9df:	add    BYTE PTR [rcx],al
   14000a9e1:	add    BYTE PTR [rax],al
   14000a9e3:	add    BYTE PTR [rax+0x0],cl
   14000a9e6:	add    BYTE PTR [rax],al
   14000a9e8:	add    BYTE PTR [rax],al
   14000a9ea:	add    BYTE PTR [rax],al
   14000a9ec:	loopne 0x14000a9cf
   14000a9ee:	add    BYTE PTR [rax],al
   14000a9f0:	cmp    BYTE PTR [rcx-0x56200000],ch
	...
   14000aa06:	add    BYTE PTR [rax],al
   14000aa08:	add    DWORD PTR [rax],eax
	...
   14000aa12:	add    BYTE PTR [rax],al
   14000aa14:	push   rax
   14000aa15:	loope  0x14000aa17
   14000aa17:	add    BYTE PTR [rax],dh
   14000aa19:	stos   BYTE PTR es:[rdi],al
   14000aa1a:	add    BYTE PTR [rax],al
   14000aa1c:	or     BYTE PTR [rdx+0x0],ch
	...
   14000aa32:	add    BYTE PTR [rax],al
   14000aa34:	add    eax,DWORD PTR [rax]
   14000aa36:	add    BYTE PTR [rax],al
   14000aa38:	or     DWORD PTR [rax],eax
   14000aa3a:	add    BYTE PTR [rax],al
   14000aa3c:	push   rax
   14000aa3d:	stos   BYTE PTR es:[rdi],al
	...
   14000aa4e:	add    BYTE PTR [rax],al
   14000aa50:	movabs al,ds:0xc00000a9900000aa
   14000aa59:	test   al,0x0
   14000aa5b:	add    BYTE PTR [rax],ch
   14000aa5d:	test   al,0x0
   14000aa5f:	add    BYTE PTR [rax-0x47ffff59],bl
   14000aa65:	movabs eax,ds:0xa9b80000a0900000
   14000aa6e:	add    BYTE PTR [rax],al
   14000aa70:	enter  0xaa,0x0
	...
   14000aaa0:	push   rax
   14000aaa1:	loope  0x14000aaa3
   14000aaa3:	add    BYTE PTR [rax],cl
   14000aaa5:	add    BYTE PTR [rax],al
   14000aaa7:	add    BYTE PTR [rax],al
   14000aaa9:	add    BYTE PTR [rax],al
   14000aaab:	add    bh,bh
   14000aaad:	(bad)  
   14000aaae:	(bad)  
   14000aaaf:	inc    DWORD PTR [rax]
   14000aab1:	add    BYTE PTR [rax],al
   14000aab3:	add    BYTE PTR [rax+0x0],al
   14000aab6:	add    BYTE PTR [rax],al
   14000aab8:	xor    BYTE PTR [rdx+0x0],ch
	...
   14000aac6:	add    BYTE PTR [rax],al
   14000aac8:	enter  0xe0,0x0
	...
   14000aad4:	jo     0x14000aad6
   14000aad6:	add    BYTE PTR [rax],al
   14000aad8:	add    al,0x0
   14000aada:	add    BYTE PTR [rax],al
   14000aadc:	push   rax
   14000aadd:	add    BYTE PTR [rax],al
   14000aadf:	add    BYTE PTR [rax+0xa4],cl
	...
   14000aaed:	add    BYTE PTR [rax],al
   14000aaef:	add    BYTE PTR [rcx],al
   14000aaf1:	add    BYTE PTR [rax],al
   14000aaf3:	add    BYTE PTR [rax+0x0],cl
   14000aaf6:	add    BYTE PTR [rax],al
   14000aaf8:	add    BYTE PTR [rax],al
   14000aafa:	add    BYTE PTR [rax],al
   14000aafc:	push   rax
   14000aafd:	loope  0x14000aaff
   14000aaff:	add    BYTE PTR [rax],dh
   14000ab01:	stos   BYTE PTR es:[rdi],al
   14000ab02:	add    BYTE PTR [rax],al
   14000ab04:	lock stos BYTE PTR es:[rdi],al
	...
   14000ab16:	add    BYTE PTR [rax],al
   14000ab18:	add    DWORD PTR [rax],eax
   14000ab1a:	add    BYTE PTR [rax],al
   14000ab1c:	add    BYTE PTR [rax],0x0
   14000ab1f:	add    BYTE PTR [rax+rax*1],al
   14000ab22:	add    BYTE PTR [rax],al
   14000ab24:	push   rax
   14000ab25:	loope  0x14000ab27
   14000ab27:	add    BYTE PTR [rax],dh
   14000ab29:	stos   BYTE PTR es:[rdi],al
   14000ab2a:	add    BYTE PTR [rax],al
   14000ab2c:	sbb    BYTE PTR [rbx+0x0],ch
	...
   14000ab3e:	add    BYTE PTR [rax],al
   14000ab40:	add    DWORD PTR [rax],eax
	...
   14000ab4a:	add    BYTE PTR [rax],al
   14000ab4c:	loopne 0x14000ab30
   14000ab4e:	add    BYTE PTR [rax],al
   14000ab50:	push   0x400000ab
   14000ab55:	stos   DWORD PTR es:[rdi],eax
	...
   14000ab6a:	add    BYTE PTR [rax],al
   14000ab6c:	add    eax,DWORD PTR [rax]
   14000ab6e:	add    BYTE PTR [rax],al
   14000ab70:	(bad)  
   14000ab71:	add    BYTE PTR [rax],al
   14000ab73:	add    BYTE PTR [rax+0xab],al
   14000ab79:	add    BYTE PTR [rax],al
   14000ab7b:	add    BYTE PTR [rax],al
   14000ab7d:	add    BYTE PTR [rax],al
   14000ab7f:	add    BYTE PTR [rax-0x47ffff55],bh
   14000ab85:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ab86:	add    BYTE PTR [rax],al
   14000ab88:	cmp    BYTE PTR [rax+rax*1+0xa5e000],ah
   14000ab8f:	add    BYTE PTR [rax],cl
   14000ab91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ab92:	add    BYTE PTR [rax],al
   14000ab94:	call   0x14000ac41
	...
   14000abb5:	add    BYTE PTR [rax],al
   14000abb7:	add    al,ah
   14000abb9:	loop   0x14000abbb
   14000abbb:	add    BYTE PTR [rip+0x0],al        # 0x14000abc1
   14000abc1:	add    BYTE PTR [rax],al
   14000abc3:	add    bh,bh
   14000abc5:	(bad)  
   14000abc6:	(bad)  
   14000abc7:	inc    DWORD PTR [rax]
   14000abc9:	add    BYTE PTR [rax],al
   14000abcb:	add    BYTE PTR [rax+0x0],al
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	push   0xab
	...
   14000abdd:	add    BYTE PTR [rax],al
   14000abdf:	add    BYTE PTR [rcx],al
   14000abe1:	add    BYTE PTR [rax],al
   14000abe3:	add    BYTE PTR [rax],ch
   14000abe5:	add    BYTE PTR [rax],al
   14000abe7:	add    BYTE PTR [rax],al
   14000abe9:	add    BYTE PTR [rax],al
   14000abeb:	add    al,ah
   14000abed:	loop   0x14000abef
   14000abef:	add    BYTE PTR [rax-0x55],ch
   14000abf2:	add    BYTE PTR [rax],al
   14000abf4:	loopne 0x14000aba1
	...
   14000ac06:	add    BYTE PTR [rax],al
   14000ac08:	add    DWORD PTR [rax],eax
   14000ac0a:	add    BYTE PTR [rax],al
   14000ac0c:	push   rax
   14000ac0d:	add    BYTE PTR [rax],al
   14000ac0f:	add    BYTE PTR [rax+rax*1],al
   14000ac12:	add    BYTE PTR [rax],al
   14000ac14:	loopne 0x14000abf8
   14000ac16:	add    BYTE PTR [rax],al
   14000ac18:	push   0x80000ab
   14000ac1d:	lods   al,BYTE PTR ds:[rsi]
	...
   14000ac2e:	add    BYTE PTR [rax],al
   14000ac30:	add    DWORD PTR [rax],eax
	...
   14000ac3a:	add    BYTE PTR [rax],al
   14000ac3c:	and    bl,0x0
   14000ac3f:	add    BYTE PTR [rax-0x54],bl
   14000ac42:	add    BYTE PTR [rax],al
   14000ac44:	xor    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000ac5b:	add    BYTE PTR [rbx],al
   14000ac5d:	add    BYTE PTR [rax],al
   14000ac5f:	add    BYTE PTR [rsi],al
   14000ac61:	add    BYTE PTR [rax],al
   14000ac63:	add    BYTE PTR [rax-0x54],dh
	...
   14000ac6e:	add    BYTE PTR [rax],al
   14000ac70:	test   al,0xac
   14000ac72:	add    BYTE PTR [rax],al
   14000ac74:	shl    BYTE PTR [rsi-0x5bc80000],0x0
   14000ac7b:	add    al,ch
   14000ac7d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ac7e:	add    BYTE PTR [rax],al
   14000ac80:	or     BYTE PTR [rsi-0x57180000],ah
	...
   14000aca6:	add    BYTE PTR [rax],al
   14000aca8:	and    bl,0x0
   14000acab:	add    BYTE PTR [rip+0x0],al        # 0x14000acb1
   14000acb1:	add    BYTE PTR [rax],al
   14000acb3:	add    bh,bh
   14000acb5:	(bad)  
   14000acb6:	(bad)  
   14000acb7:	inc    DWORD PTR [rax]
   14000acb9:	add    BYTE PTR [rax],al
   14000acbb:	add    BYTE PTR [rax+0x0],al
   14000acbe:	add    BYTE PTR [rax],al
   14000acc0:	pop    rax
   14000acc1:	lods   al,BYTE PTR ds:[rsi]
	...
   14000acce:	add    BYTE PTR [rax],al
   14000acd0:	add    DWORD PTR [rax],eax
   14000acd2:	add    BYTE PTR [rax],al
   14000acd4:	sub    BYTE PTR [rax],al
   14000acd6:	add    BYTE PTR [rax],al
   14000acd8:	add    BYTE PTR [rax],al
   14000acda:	add    BYTE PTR [rax],al
   14000acdc:	and    bl,0x0
   14000acdf:	add    BYTE PTR [rax-0x54],bl
   14000ace2:	add    BYTE PTR [rax],al
   14000ace4:	shr    BYTE PTR [rax+rax*1+0x0],1
	...
   14000acf7:	add    BYTE PTR [rcx],al
   14000acf9:	add    BYTE PTR [rax],al
   14000acfb:	add    BYTE PTR [rax+0x0],dl
   14000acfe:	add    BYTE PTR [rax],al
   14000ad00:	add    al,0x0
   14000ad02:	add    BYTE PTR [rax],al
   14000ad04:	and    bl,0x0
   14000ad07:	add    BYTE PTR [rax-0x54],bl
   14000ad0a:	add    BYTE PTR [rax],al
   14000ad0c:	clc    
   14000ad0d:	lods   al,BYTE PTR ds:[rsi]
	...
   14000ad1e:	add    BYTE PTR [rax],al
   14000ad20:	add    DWORD PTR [rax],eax
	...
   14000ad2a:	add    BYTE PTR [rax],al
   14000ad2c:	rex in eax,0x0
   14000ad2f:	add    BYTE PTR [rax-0x53],cl
   14000ad32:	add    BYTE PTR [rax],al
   14000ad34:	and    BYTE PTR [rbp+0x0],ch
	...
   14000ad4e:	add    BYTE PTR [rax],al
   14000ad50:	add    al,BYTE PTR [rax]
   14000ad52:	add    BYTE PTR [rax],al
   14000ad54:	(bad)  
   14000ad55:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000ad5e:	add    BYTE PTR [rax],al
   14000ad60:	js     0x14000ad0f
   14000ad62:	add    BYTE PTR [rax],al
   14000ad64:	sub    BYTE PTR [rbp+0x0],ah
	...
   14000ad76:	add    BYTE PTR [rax],al
   14000ad78:	rex in eax,0x0
   14000ad7b:	add    BYTE PTR [rcx],al
   14000ad7d:	add    BYTE PTR [rax],al
   14000ad7f:	add    BYTE PTR [rax],al
   14000ad81:	add    BYTE PTR [rax],al
   14000ad83:	add    bh,bh
   14000ad85:	(bad)  
   14000ad86:	(bad)  
   14000ad87:	inc    DWORD PTR [rax]
   14000ad89:	add    BYTE PTR [rax],al
   14000ad8b:	add    BYTE PTR [rax+0x0],al
   14000ad8e:	add    BYTE PTR [rax],al
   14000ad90:	lods   rax,QWORD PTR ds:[rsi]
	...
   14000ad9e:	add    BYTE PTR [rax],al
   14000ada0:	add    DWORD PTR [rax],eax
	...
   14000adaa:	add    BYTE PTR [rax],al
   14000adac:	shl    ch,1
   14000adae:	add    BYTE PTR [rax],al
   14000adb0:	enter  0xad,0x0
   14000adb4:	movabs al,ds:0xad
	...
   14000adcd:	add    BYTE PTR [rax],al
   14000adcf:	add    BYTE PTR [rdx],al
   14000add1:	add    BYTE PTR [rax],al
   14000add3:	add    al,ah
   14000add5:	lods   eax,DWORD PTR ds:[rsi]
	...
   14000adde:	add    BYTE PTR [rax],al
   14000ade0:	clc    
   14000ade1:	lods   eax,DWORD PTR ds:[rsi]
   14000ade2:	add    BYTE PTR [rax],al
   14000ade4:	sub    BYTE PTR [rbp+0x0],ah
	...
   14000adf6:	add    BYTE PTR [rax],al
   14000adf8:	shl    ch,1
   14000adfa:	add    BYTE PTR [rax],al
   14000adfc:	add    DWORD PTR [rax],eax
   14000adfe:	add    BYTE PTR [rax],al
   14000ae00:	add    BYTE PTR [rax],al
   14000ae02:	add    BYTE PTR [rax],al
   14000ae04:	(bad)  
   14000ae05:	(bad)  
   14000ae06:	(bad)  
   14000ae07:	inc    DWORD PTR [rax]
   14000ae09:	add    BYTE PTR [rax],al
   14000ae0b:	add    BYTE PTR [rax+0x0],al
   14000ae0e:	add    BYTE PTR [rax],al
   14000ae10:	enter  0xad,0x0
	...
   14000ae20:	add    DWORD PTR [rax],eax
	...
   14000ae2a:	add    BYTE PTR [rax],al
   14000ae2c:	pop    rax
   14000ae2d:	out    0x0,al
   14000ae2f:	add    BYTE PTR [rax-0x52],cl
   14000ae32:	add    BYTE PTR [rax],al
   14000ae34:	and    BYTE PTR [rsi+0x0],ch
	...
   14000ae4e:	add    BYTE PTR [rax],al
   14000ae50:	add    DWORD PTR [rax],eax
   14000ae52:	add    BYTE PTR [rax],al
   14000ae54:	(bad)  
   14000ae55:	scas   al,BYTE PTR es:[rdi]
	...
   14000ae5e:	add    BYTE PTR [rax],al
   14000ae60:	jo     0x14000ae10
	...
   14000ae6e:	add    BYTE PTR [rax],al
   14000ae70:	pop    rax
   14000ae71:	out    0x0,al
	...
   14000ae7b:	add    bh,bh
   14000ae7d:	(bad)  
   14000ae7e:	(bad)  
   14000ae7f:	inc    DWORD PTR [rax]
   14000ae81:	add    BYTE PTR [rax],al
   14000ae83:	add    BYTE PTR [rax+0x0],al
   14000ae86:	add    BYTE PTR [rax],al
   14000ae88:	rex.W scas al,BYTE PTR es:[rdi]
	...
   14000aebe:	add    BYTE PTR [rax],al
   14000aec0:	add    DWORD PTR [rdx],ecx
   14000aec2:	add    al,BYTE PTR [rax]
   14000aec4:	or     dh,BYTE PTR [rdx]
   14000aec6:	(bad)  
   14000aec7:	xor    BYTE PTR [rcx],al
   14000aec9:	(bad)  
   14000aeca:	add    al,BYTE PTR [rax]
   14000aecc:	(bad)  
   14000aecd:	xor    al,BYTE PTR [rdx]
   14000aecf:	xor    BYTE PTR [rcx],al
   14000aed1:	or     al,BYTE PTR [rax+rax*1]
   14000aed4:	or     dh,BYTE PTR [rsi+rax*1]
   14000aed7:	add    BYTE PTR [rdx],cl
   14000aed9:	xor    al,BYTE PTR [rsi]
   14000aedb:	jo     0x14000aede
   14000aedd:	(bad)  
   14000aede:	add    al,BYTE PTR [rax]
   14000aee0:	(bad)  
   14000aee1:	xor    al,BYTE PTR [rdx]
   14000aee3:	xor    BYTE PTR [rcx],al
   14000aee5:	(bad)  
   14000aee6:	add    al,BYTE PTR [rax]
   14000aee8:	(bad)  
   14000aee9:	xor    al,BYTE PTR [rdx]
   14000aeeb:	xor    BYTE PTR [rcx],al
   14000aeed:	or     al,BYTE PTR [rax+rax*1]
   14000aef0:	or     dh,BYTE PTR [rsi+rax*1]
   14000aef3:	add    BYTE PTR [rdx],cl
   14000aef5:	xor    al,BYTE PTR [rsi]
   14000aef7:	jo     0x14000aefa
   14000aef9:	(bad)  
   14000aefa:	add    al,BYTE PTR [rax]
   14000aefc:	(bad)  
   14000aefd:	xor    al,BYTE PTR [rdx]
   14000aeff:	xor    BYTE PTR [rcx],al
   14000af01:	(bad)  
   14000af02:	add    al,BYTE PTR [rax]
   14000af04:	(bad)  
   14000af05:	xor    al,BYTE PTR [rdx]
   14000af07:	xor    BYTE PTR [rcx],al
   14000af09:	(bad)  
   14000af0a:	add    al,BYTE PTR [rax]
   14000af0c:	(bad)  
   14000af0d:	xor    al,BYTE PTR [rdx]
   14000af0f:	xor    BYTE PTR [rcx],al
   14000af11:	add    al,0x1
   14000af13:	add    BYTE PTR [rdx+rax*2],al
   14000af16:	add    BYTE PTR [rax],al
   14000af18:	add    DWORD PTR [rcx+rax*1],eax
   14000af1b:	add    BYTE PTR [rdx+rax*2],al
   14000af1e:	add    BYTE PTR [rax],al
   14000af20:	add    DWORD PTR [rsi],eax
   14000af22:	add    al,BYTE PTR [rax]
   14000af24:	(bad)  
   14000af25:	xor    al,BYTE PTR [rdx]
   14000af27:	xor    BYTE PTR [rcx],al
   14000af29:	(bad)  
   14000af2a:	add    al,BYTE PTR [rax]
   14000af2c:	(bad)  
   14000af2d:	xor    al,BYTE PTR [rdx]
   14000af2f:	xor    BYTE PTR [rcx],al
   14000af31:	or     al,BYTE PTR [rax+rax*1]
   14000af34:	or     dh,BYTE PTR [rsi+rax*1]
   14000af37:	add    BYTE PTR [rdx],cl
   14000af39:	xor    al,BYTE PTR [rsi]
   14000af3b:	jo     0x14000af3e
   14000af3d:	or     al,BYTE PTR [rax+rax*1]
   14000af40:	or     dh,BYTE PTR [rsi+rax*1]
   14000af43:	add    BYTE PTR [rdx],cl
   14000af45:	xor    al,BYTE PTR [rsi]
   14000af47:	jo     0x14000af4a
   14000af49:	(bad)  
   14000af4a:	add    al,BYTE PTR [rax]
   14000af4c:	(bad)  
   14000af4d:	xor    al,BYTE PTR [rdx]
   14000af4f:	xor    BYTE PTR [rcx],al
   14000af51:	or     al,BYTE PTR gs:[rax]
   14000af54:	gs je  0x14000af5d
   14000af57:	add    BYTE PTR [rip+0x15000964],dl        # 0x15500b8c1
   14000af5d:	push   rsp
   14000af5e:	or     BYTE PTR [rax],al
   14000af60:	adc    eax,0x15000734
   14000af65:	xor    dl,BYTE PTR [rcx]
   14000af67:	loopne 0x14000af6a
   14000af69:	(bad)  
   14000af6a:	or     BYTE PTR [rax],al
   14000af6c:	(bad)  
   14000af6d:	je     0x14000af75
   14000af6f:	add    BYTE PTR [rdi],cl
   14000af71:	push   rsp
   14000af72:	or     BYTE PTR [rax],al
   14000af74:	sysenter 
   14000af76:	(bad)  
   14000af77:	add    BYTE PTR [rdi],cl
   14000af79:	xor    cl,BYTE PTR [rbx]
   14000af7b:	(bad)  
   14000af7c:	add    DWORD PTR [rax+rcx*1],edx
   14000af7f:	add    BYTE PTR [rsp+riz*2],dl
   14000af82:	or     BYTE PTR [rax],al
   14000af84:	adc    al,0x54
   14000af86:	(bad)  
   14000af87:	add    BYTE PTR [rsp+rsi*1],dl
   14000af8a:	(bad)  
   14000af8b:	add    BYTE PTR [rdx+rsi*1],dl
   14000af8e:	adc    BYTE PTR [rax+0x1],dh
   14000af91:	clts   
   14000af93:	add    BYTE PTR [rdi],cl
   14000af95:	fs (bad) 
   14000af97:	add    BYTE PTR [rdi],cl
   14000af99:	xor    al,0x6
   14000af9b:	add    BYTE PTR [rdi],cl
   14000af9d:	xor    cl,BYTE PTR [rbx]
   14000af9f:	jo     0x14000afa2
   14000afa1:	add    al,0x1
   14000afa3:	add    BYTE PTR [rdx+rax*2],al
   14000afa6:	add    BYTE PTR [rax],al
   14000afa8:	add    DWORD PTR [rdx],ecx
   14000afaa:	add    al,0x0
   14000afac:	or     dh,BYTE PTR [rsi+rax*1]
   14000afaf:	add    BYTE PTR [rdx],cl
   14000afb1:	xor    al,BYTE PTR [rsi]
   14000afb3:	jo     0x14000afce
   14000afb5:	and    DWORD PTR [rip+0x14621800],eax        # 0x15462c7bb
   14000afbb:	loopne 0x14000afcf
   14000afbd:	jo     0x14000afd0
   14000afbf:	(bad)  
   14000afc0:	adc    BYTE PTR [rax],dh
   14000afc2:	add    BYTE PTR [rax],al
   14000afc4:	ss jae 0x14000afc7
   14000afc7:	add    BYTE PTR [rax],al
   14000afc9:	xchg   ebx,eax
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	(bad)  
   14000afcd:	(bad)  
   14000afce:	(bad)  
   14000afcf:	inc    DWORD PTR [rax]
   14000afd1:	add    BYTE PTR [rax],al
   14000afd3:	add    bh,bh
   14000afd5:	(bad)  
   14000afd6:	(bad)  
   14000afd7:	inc    DWORD PTR [rax]
   14000afd9:	add    BYTE PTR [rax],al
   14000afdb:	add    BYTE PTR [rcx],al
   14000afdd:	add    BYTE PTR [rax],al
   14000afdf:	add    BYTE PTR [rax],al
   14000afe1:	add    BYTE PTR [rax],al
   14000afe3:	add    BYTE PTR [rcx],al
	...
   14000aff1:	add    BYTE PTR [rax],al
   14000aff3:	add    BYTE PTR [rbx],al
   14000aff5:	add    BYTE PTR [rax],al
   14000aff7:	add    BYTE PTR [rcx],al
   14000aff9:	add    BYTE PTR [rax],al
   14000affb:	add    BYTE PTR [rax+rsi*4],dl
   14000affe:	add    BYTE PTR [rax],al
   14000b000:	add    al,BYTE PTR [rax]
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	add    al,BYTE PTR [rax]
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	add    eax,DWORD PTR [rax]
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	add    DWORD PTR [rax],eax
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	sub    BYTE PTR [rax+0x400000],dh
	...
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	(bad)  
   14000b021:	jg     0x14000b023
   14000b023:	add    BYTE PTR [rax],bh
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    BYTE PTR [rax+0x0],al
	...
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b035:	jg     0x14000b037
   14000b037:	add    BYTE PTR [rax+0x0],cl
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	add    BYTE PTR [rax],al
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	lock rex.RX add BYTE PTR [rax],r8b
   14000b044:	(bad)  
   14000b045:	(bad)  
   14000b046:	(bad)  
   14000b047:	call   FWORD PTR [rsi+0x47]
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	test   BYTE PTR [rdi+0x0],al
   14000b053:	add    bh,bh
   14000b055:	(bad)  
   14000b056:	(bad)  
   14000b057:	jmp    QWORD PTR [rax+0x7f]
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	add    BYTE PTR [rax],al
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	ins    DWORD PTR es:[rdi],dx
   14000b061:	jg     0x14000b063
   14000b063:	add    BYTE PTR [rcx],al
   14000b065:	add    BYTE PTR [rax],al
   14000b067:	add    BYTE PTR [rbp+0x7f],dh
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	add    al,BYTE PTR [rax]
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	xchg   esi,eax
   14000b071:	jg     0x14000b073
   14000b073:	add    BYTE PTR [rax],al
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    BYTE PTR [rdx+0x300007f],dh
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    BYTE PTR [rcx],bl
   14000b081:	or     al,BYTE PTR [rdx]
   14000b083:	add    BYTE PTR [rdx],cl
   14000b085:	xor    al,BYTE PTR [rsi]
   14000b087:	push   rax
   14000b088:	ss jae 0x14000b08b
   14000b08b:	add    BYTE PTR [rax],al
   14000b08d:	xchg   ebx,eax
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	sbb    DWORD PTR [rbx],ecx
   14000b092:	add    eax,DWORD PTR [rax]
   14000b094:	or     eax,DWORD PTR [rdx+0x7]
   14000b097:	push   rax
   14000b098:	(bad)  
   14000b099:	xor    BYTE PTR [rax],al
   14000b09b:	add    BYTE PTR [rsi],dh
   14000b09d:	jae    0x14000b09f
   14000b09f:	add    BYTE PTR [rax],al
   14000b0a1:	xchg   ebx,eax
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	add    DWORD PTR [rip+0x542d0006],ebp        # 0x1942db0b0
   14000b0aa:	(bad)  
   14000b0ab:	add    BYTE PTR [rdx],cl
   14000b0ad:	xor    al,0x9
   14000b0af:	add    BYTE PTR [rdx],cl
   14000b0b1:	xor    al,BYTE PTR [rsi]
   14000b0b3:	jo     0x14000b0d6
   14000b0b5:	add    eax,0x64050002
   14000b0ba:	(bad)  
   14000b0bb:	add    BYTE PTR [rax+0x4a],ah
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	stos   BYTE PTR es:[rdi],al
   14000b0c1:	rex.WX add BYTE PTR [rax],al
   14000b0c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b0c5:	mov    al,0x0
   14000b0c7:	add    BYTE PTR [rcx],ah
   14000b0c9:	add    eax,0xe4050002
   14000b0ce:	or     BYTE PTR [rax],al
   14000b0d0:	stos   BYTE PTR es:[rdi],al
   14000b0d1:	rex.WX add BYTE PTR [rax],al
   14000b0d4:	ror    BYTE PTR [rdx+0x0],0x0
   14000b0d8:	mov    ah,0xb0
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	and    DWORD PTR [rax],eax
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	stos   BYTE PTR es:[rdi],al
   14000b0e1:	rex.WX add BYTE PTR [rax],al
   14000b0e4:	ror    BYTE PTR [rdx+0x0],0x0
   14000b0e8:	mov    ah,0xb0
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	and    DWORD PTR [rax],eax
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	(bad)  
   14000b0f1:	rex.WX add BYTE PTR [rax],al
   14000b0f4:	stos   BYTE PTR es:[rdi],al
   14000b0f5:	rex.WX add BYTE PTR [rax],al
   14000b0f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b0f9:	mov    al,0x0
   14000b0fb:	add    BYTE PTR [rcx],al
   14000b0fd:	or     al,BYTE PTR [rax+rax*1]
   14000b100:	or     dh,BYTE PTR [rdi+rax*1]
   14000b103:	add    BYTE PTR [rdx],cl
   14000b105:	xor    al,BYTE PTR [rsi]
   14000b107:	jo     0x14000b12a
   14000b109:	add    eax,0x64050002
   14000b10e:	(bad)  
   14000b10f:	add    al,dh
   14000b111:	rex.WRX add BYTE PTR [rax],r8b
   14000b114:	or     ecx,DWORD PTR [rdi+0x0]
   14000b117:	add    ah,bh
   14000b119:	mov    al,0x0
   14000b11b:	add    BYTE PTR [rcx],ah
   14000b11d:	add    BYTE PTR [rax],al
   14000b11f:	add    al,dh
   14000b121:	rex.WRX add BYTE PTR [rax],r8b
   14000b124:	or     ecx,DWORD PTR [rdi+0x0]
   14000b127:	add    ah,bh
   14000b129:	mov    al,0x0
   14000b12b:	add    BYTE PTR [rcx],al
   14000b12d:	add    al,0x1
   14000b12f:	add    BYTE PTR [rdx+rax*2],al
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	add    DWORD PTR [rcx+rax*1],eax
   14000b137:	add    BYTE PTR [rdx+rax*2],al
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	add    DWORD PTR [rdx],ecx
   14000b13e:	add    al,0x0
   14000b140:	or     dh,BYTE PTR [rsi+rax*1]
   14000b143:	add    BYTE PTR [rdx],cl
   14000b145:	xor    al,BYTE PTR [rsi]
   14000b147:	jo     0x14000b14a
   14000b149:	or     al,BYTE PTR [rdx]
   14000b14b:	add    BYTE PTR [rdx],cl
   14000b14d:	xor    al,BYTE PTR [rsi]
   14000b14f:	xor    BYTE PTR [rcx],al
   14000b151:	(bad)  
   14000b152:	add    al,BYTE PTR [rax]
   14000b154:	(bad)  
   14000b155:	xor    al,BYTE PTR [rdx]
   14000b157:	xor    BYTE PTR [rcx],al
   14000b159:	or     al,BYTE PTR [rax+rax*1]
   14000b15c:	or     dh,BYTE PTR [rsi+rax*1]
   14000b15f:	add    BYTE PTR [rdx],cl
   14000b161:	xor    al,BYTE PTR [rsi]
   14000b163:	jo     0x14000b166
   14000b165:	(bad)  
   14000b166:	add    al,BYTE PTR [rax]
   14000b168:	(bad)  
   14000b169:	push   rdx
   14000b16a:	add    dh,BYTE PTR [rax]
   14000b16c:	add    DWORD PTR [rsi],eax
   14000b16e:	add    al,BYTE PTR [rax]
   14000b170:	(bad)  
   14000b171:	xor    al,BYTE PTR [rdx]
   14000b173:	xor    BYTE PTR [rcx],al
   14000b175:	or     al,BYTE PTR [rax+rax*1]
   14000b178:	or     dh,BYTE PTR [rax+rcx*1]
   14000b17b:	add    BYTE PTR [rdx],cl
   14000b17d:	push   rdx
   14000b17e:	(bad)  
   14000b17f:	jo     0x14000b182
   14000b181:	(bad)  
   14000b182:	add    al,BYTE PTR [rax]
   14000b184:	(bad)  
   14000b185:	xor    al,BYTE PTR [rdx]
   14000b187:	xor    BYTE PTR [rcx],al
   14000b189:	(bad)  
   14000b18a:	add    al,BYTE PTR [rax]
   14000b18c:	(bad)  
   14000b18d:	push   rdx
   14000b18e:	add    dh,BYTE PTR [rax]
   14000b190:	add    DWORD PTR [rsi],eax
   14000b192:	add    al,BYTE PTR [rax]
   14000b194:	(bad)  
   14000b195:	xor    al,BYTE PTR [rdx]
   14000b197:	xor    BYTE PTR [rcx],al
   14000b199:	or     al,BYTE PTR [rax+rax*1]
   14000b19c:	or     dh,BYTE PTR [rax+rcx*1]
   14000b19f:	add    BYTE PTR [rdx],cl
   14000b1a1:	push   rdx
   14000b1a2:	(bad)  
   14000b1a3:	jo     0x14000b1a6
   14000b1a5:	or     al,BYTE PTR [rax+rax*1]
   14000b1a8:	or     dh,BYTE PTR [rsi+rax*1]
   14000b1ab:	add    BYTE PTR [rdx],cl
   14000b1ad:	xor    al,BYTE PTR [rsi]
   14000b1af:	jo     0x14000b1b2
   14000b1b1:	(bad)  
   14000b1b2:	add    al,BYTE PTR [rax]
   14000b1b4:	(bad)  
   14000b1b5:	xor    al,BYTE PTR [rdx]
   14000b1b7:	xor    BYTE PTR [rcx],al
   14000b1b9:	add    al,0x1
   14000b1bb:	add    BYTE PTR [rdx+rax*2],al
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	add    DWORD PTR [rcx+rax*1],eax
   14000b1c3:	add    BYTE PTR [rdx+rax*2],al
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	add    DWORD PTR [rsi],eax
   14000b1ca:	add    al,BYTE PTR [rax]
   14000b1cc:	(bad)  
   14000b1cd:	xor    al,BYTE PTR [rdx]
   14000b1cf:	xor    BYTE PTR [rcx],al
   14000b1d1:	(bad)  
   14000b1d2:	add    al,BYTE PTR [rax]
   14000b1d4:	(bad)  
   14000b1d5:	xor    al,BYTE PTR [rdx]
   14000b1d7:	xor    BYTE PTR [rcx],al
   14000b1d9:	adc    al,0x8
   14000b1db:	add    BYTE PTR [rsp+riz*2],dl
   14000b1de:	or     BYTE PTR [rax],al
   14000b1e0:	adc    al,0x54
   14000b1e2:	(bad)  
   14000b1e3:	add    BYTE PTR [rsp+rsi*1],dl
   14000b1e6:	(bad)  
   14000b1e7:	add    BYTE PTR [rdx+rsi*1],dl
   14000b1ea:	adc    BYTE PTR [rax+0x1],dh
   14000b1ed:	clts   
   14000b1ef:	add    BYTE PTR [rdi],cl
   14000b1f1:	fs (bad) 
   14000b1f3:	add    BYTE PTR [rdi],cl
   14000b1f5:	xor    al,0x6
   14000b1f7:	add    BYTE PTR [rdi],cl
   14000b1f9:	xor    cl,BYTE PTR [rbx]
   14000b1fb:	jo     0x14000b1fe
   14000b1fd:	add    al,0x1
   14000b1ff:	add    BYTE PTR [rdx+rax*2],al
   14000b202:	add    BYTE PTR [rax],al
   14000b204:	add    DWORD PTR [rdx],ecx
   14000b206:	add    al,0x0
   14000b208:	or     dh,BYTE PTR [rsi+rax*1]
   14000b20b:	add    BYTE PTR [rdx],cl
   14000b20d:	xor    al,BYTE PTR [rsi]
   14000b20f:	jo     0x14000b22a
   14000b211:	and    eax,DWORD PTR [rsi]
   14000b213:	add    BYTE PTR [rdx],bl
   14000b215:	push   rdx
   14000b216:	(bad)  
   14000b217:	lock adc al,0xe0
   14000b21a:	adc    dh,BYTE PTR [rax+0x11]
   14000b21d:	(bad)  
   14000b21e:	adc    BYTE PTR [rax],dh
   14000b220:	ss jae 0x14000b223
   14000b223:	add    BYTE PTR [rax],ch
   14000b225:	xchg   ebx,eax
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	(bad)  
   14000b229:	(bad)  
   14000b22a:	(bad)  
   14000b22b:	inc    DWORD PTR [rax]
   14000b22d:	add    BYTE PTR [rax],al
   14000b22f:	add    bh,bh
   14000b231:	(bad)  
   14000b232:	(bad)  
   14000b233:	inc    DWORD PTR [rax]
   14000b235:	add    BYTE PTR [rax],al
   14000b237:	add    BYTE PTR [rcx],al
   14000b239:	add    BYTE PTR [rax],al
   14000b23b:	add    BYTE PTR [rax],al
   14000b23d:	add    BYTE PTR [rax],al
   14000b23f:	add    BYTE PTR [rcx],al
	...
   14000b24d:	add    BYTE PTR [rax],al
   14000b24f:	add    BYTE PTR [rbx],al
   14000b251:	add    BYTE PTR [rax],al
   14000b253:	add    BYTE PTR [rcx],al
   14000b255:	add    BYTE PTR [rax],al
   14000b257:	add    BYTE PTR [rax-0x4e],dh
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	add    al,BYTE PTR [rax]
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	add    al,BYTE PTR [rax]
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	add    eax,DWORD PTR [rax]
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	add    DWORD PTR [rax],eax
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	test   BYTE PTR [rdx+0x400000],dh
	...
   14000b27a:	add    BYTE PTR [rax],al
   14000b27c:	lock jg 0x14000b27f
   14000b27f:	add    BYTE PTR [rax],bh
   14000b281:	add    BYTE PTR [rax],al
   14000b283:	add    BYTE PTR [rax+0x0],al
	...
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	rex add BYTE PTR [rax],0x0
   14000b294:	rex.W add BYTE PTR [rax],al
	...
   14000b29f:	add    BYTE PTR [rax],al
   14000b2a1:	rex.W add BYTE PTR [rax],al
   14000b2a4:	(bad)  
   14000b2a5:	(bad)  
   14000b2a6:	(bad)  
   14000b2a7:	push   QWORD PTR [rbp+0x48]
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	add    BYTE PTR [rax],al
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	stos   BYTE PTR es:[rdi],al
   14000b2b1:	rex.W add BYTE PTR [rax],al
   14000b2b4:	(bad)  
   14000b2b5:	(bad)  
   14000b2b6:	(bad)  
   14000b2b7:	push   rax
   14000b2b9:	jg     0x14000b2bb
   14000b2bb:	add    BYTE PTR [rax],al
   14000b2bd:	add    BYTE PTR [rax],al
   14000b2bf:	add    ch,bh
   14000b2c1:	jg     0x14000b2c3
   14000b2c3:	add    BYTE PTR [rcx],al
   14000b2c5:	add    BYTE PTR [rax],al
   14000b2c7:	add    BYTE PTR [rip+0x2000080],al        # 0x14200b34d
   14000b2cd:	add    BYTE PTR [rax],al
   14000b2cf:	add    BYTE PTR [rdx],dh
   14000b2d1:	add    BYTE PTR [rax],0x0
   14000b2d4:	add    BYTE PTR [rax],al
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	rex.WRX add BYTE PTR [rax],0x0
   14000b2dc:	add    eax,DWORD PTR [rax]
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	sbb    DWORD PTR [rdx],ecx
   14000b2e2:	add    al,BYTE PTR [rax]
   14000b2e4:	or     dh,BYTE PTR [rdx]
   14000b2e6:	(bad)  
   14000b2e7:	push   rax
   14000b2e8:	ss jae 0x14000b2eb
   14000b2eb:	add    BYTE PTR [rax],ch
   14000b2ed:	xchg   ebx,eax
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	sbb    DWORD PTR [rbx],ecx
   14000b2f2:	add    eax,DWORD PTR [rax]
   14000b2f4:	or     eax,DWORD PTR [rdx+0x7]
   14000b2f7:	push   rax
   14000b2f8:	(bad)  
   14000b2f9:	xor    BYTE PTR [rax],al
   14000b2fb:	add    BYTE PTR [rsi],dh
   14000b2fd:	jae    0x14000b2ff
   14000b2ff:	add    BYTE PTR [rax],ch
   14000b301:	xchg   ebx,eax
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	add    DWORD PTR [rsi],esi
   14000b306:	(bad)  
   14000b307:	add    BYTE PTR [rsi],dh
   14000b309:	fs (bad) 
   14000b30b:	add    BYTE PTR [rdx],cl
   14000b30d:	xor    al,0x9
   14000b30f:	add    BYTE PTR [rdx],cl
   14000b311:	xor    al,BYTE PTR [rsi]
   14000b313:	jo     0x14000b336
   14000b315:	add    eax,0xe4050002
   14000b31a:	or     BYTE PTR [rax],al
   14000b31c:	xor    BYTE PTR [rbx+0x0],cl
   14000b31f:	add    BYTE PTR [rbx+0x400004b],al
   14000b325:	mov    bl,0x0
   14000b327:	add    BYTE PTR [rcx],ah
   14000b329:	add    eax,0x54050002
   14000b32e:	(bad)  
   14000b32f:	add    BYTE PTR [rbx-0x66ffffb5],al
   14000b335:	rex.WXB add BYTE PTR [r8],al
   14000b338:	adc    al,0xb3
   14000b33a:	add    BYTE PTR [rax],al
   14000b33c:	and    DWORD PTR [rax],eax
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	or     DWORD PTR [rbx+0x0],0x0
   14000b344:	cdq    
   14000b345:	rex.WXB add BYTE PTR [r8],al
   14000b348:	adc    al,0xb3
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	and    DWORD PTR [rax],eax
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	xor    BYTE PTR [rbx+0x0],cl
   14000b353:	add    BYTE PTR [rbx+0x400004b],al
   14000b359:	mov    bl,0x0
   14000b35b:	add    BYTE PTR [rcx],al
   14000b35d:	or     al,BYTE PTR [rax+rax*1]
   14000b360:	or     dh,BYTE PTR [rdi+rax*1]
   14000b363:	add    BYTE PTR [rdx],cl
   14000b365:	xor    al,BYTE PTR [rsi]
   14000b367:	jo     0x14000b38a
   14000b369:	add    eax,0x64050002
   14000b36e:	(bad)  
   14000b36f:	add    BYTE PTR [rax+0x4f],dl
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	imul   ecx,DWORD PTR [rdi+0x0],0x0
   14000b378:	pop    rsp
   14000b379:	mov    bl,0x0
   14000b37b:	add    BYTE PTR [rcx],ah
   14000b37d:	add    BYTE PTR [rax],al
   14000b37f:	add    BYTE PTR [rax+0x4f],dl
   14000b382:	add    BYTE PTR [rax],al
   14000b384:	imul   ecx,DWORD PTR [rdi+0x0],0x0
   14000b388:	pop    rsp
   14000b389:	mov    bl,0x0
   14000b38b:	add    BYTE PTR [rcx],al
   14000b38d:	add    al,0x1
   14000b38f:	add    BYTE PTR [rdx+rax*2],al
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	add    DWORD PTR [rcx+rax*1],eax
   14000b397:	add    BYTE PTR [rdx+rax*2],al
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	add    DWORD PTR [rdx],ecx
   14000b39e:	add    al,0x0
   14000b3a0:	or     dh,BYTE PTR [rsi+rax*1]
   14000b3a3:	add    BYTE PTR [rdx],cl
   14000b3a5:	xor    al,BYTE PTR [rsi]
   14000b3a7:	jo     0x14000b3ba
   14000b3a9:	sbb    DWORD PTR [rsi],eax
   14000b3ab:	add    BYTE PTR [rcx],bl
   14000b3ad:	or     eax,DWORD PTR fs:[rax]
   14000b3b0:	adc    al,0x34
   14000b3b2:	or     al,BYTE PTR [rax]
   14000b3b4:	(bad)  
   14000b3b5:	push   rdx
   14000b3b6:	add    dh,BYTE PTR [rax+0x36]
   14000b3b9:	jae    0x14000b3bb
   14000b3bb:	add    BYTE PTR [rax-0x6d],dl
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	(bad)  
   14000b3c1:	(bad)  
   14000b3c2:	(bad)  
   14000b3c3:	jmp    QWORD PTR [rax-0x7f]
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	add    BYTE PTR [rax],al
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	ins    BYTE PTR es:[rdi],dx
   14000b3cd:	add    DWORD PTR [rax],0x5de000
   14000b3d3:	add    bh,bh
   14000b3d5:	(bad)  
   14000b3d6:	(bad)  
   14000b3d7:	inc    DWORD PTR [rsi]
   14000b3d9:	pop    rsi
   14000b3da:	add    BYTE PTR [rax],al
   14000b3dc:	add    BYTE PTR [rax],al
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	sbb    ebx,DWORD PTR [rsi+0x0]
   14000b3e3:	add    BYTE PTR [rcx],al
   14000b3e5:	add    BYTE PTR [rax],al
   14000b3e7:	add    BYTE PTR [rdx],dh
   14000b3e9:	pop    rsi
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	add    BYTE PTR [rax],al
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	xchg   BYTE PTR [rsi+0x0],bl
   14000b3f3:	add    bh,bh
   14000b3f5:	(bad)  
   14000b3f6:	(bad)  
   14000b3f7:	inc    DWORD PTR [rcx]
   14000b3f9:	(bad)  
   14000b3fa:	add    al,BYTE PTR [rax]
   14000b3fc:	(bad)  
   14000b3fd:	xor    al,BYTE PTR [rdx]
   14000b3ff:	xor    BYTE PTR [rcx],al
   14000b401:	(bad)  
   14000b402:	add    al,BYTE PTR [rax]
   14000b404:	(bad)  
   14000b405:	xor    al,BYTE PTR [rdx]
   14000b407:	xor    BYTE PTR [rcx],al
   14000b409:	(bad)  
   14000b40a:	add    al,BYTE PTR [rax]
   14000b40c:	(bad)  
   14000b40d:	xor    al,BYTE PTR [rdx]
   14000b40f:	xor    BYTE PTR [rcx],al
   14000b411:	or     al,BYTE PTR [rax+rax*1]
   14000b414:	or     dh,BYTE PTR [rsi+rax*1]
   14000b417:	add    BYTE PTR [rdx],cl
   14000b419:	xor    al,BYTE PTR [rsi]
   14000b41b:	jo     0x14000b41e
   14000b41d:	or     al,BYTE PTR [rax+rax*1]
   14000b420:	or     dh,BYTE PTR [rsi+rax*1]
   14000b423:	add    BYTE PTR [rdx],cl
   14000b425:	xor    al,BYTE PTR [rsi]
   14000b427:	jo     0x14000b42a
   14000b429:	(bad)  
   14000b42a:	add    al,BYTE PTR [rax]
   14000b42c:	(bad)  
   14000b42d:	xor    al,BYTE PTR [rdx]
   14000b42f:	xor    BYTE PTR [rcx],al
   14000b431:	or     al,BYTE PTR [rax+rax*1]
   14000b434:	or     dh,BYTE PTR [rsi+rax*1]
   14000b437:	add    BYTE PTR [rdx],cl
   14000b439:	xor    al,BYTE PTR [rsi]
   14000b43b:	jo     0x14000b43e
   14000b43d:	(bad)  
   14000b43e:	add    al,BYTE PTR [rax]
   14000b440:	(bad)  
   14000b441:	xor    al,BYTE PTR [rdx]
   14000b443:	xor    BYTE PTR [rcx],al
   14000b445:	or     al,BYTE PTR [rax+rax*1]
   14000b448:	or     dh,BYTE PTR [rsi+rax*1]
   14000b44b:	add    BYTE PTR [rdx],cl
   14000b44d:	xor    al,BYTE PTR [rsi]
   14000b44f:	jo     0x14000b452
   14000b451:	(bad)  
   14000b452:	add    al,BYTE PTR [rax]
   14000b454:	(bad)  
   14000b455:	xor    al,BYTE PTR [rdx]
   14000b457:	xor    BYTE PTR [rcx],al
   14000b459:	(bad)  
   14000b45a:	add    al,BYTE PTR [rax]
   14000b45c:	(bad)  
   14000b45d:	xor    al,BYTE PTR [rdx]
   14000b45f:	xor    BYTE PTR [rcx],ah
   14000b461:	add    eax,0x74050002
   14000b466:	(bad)  
   14000b467:	add    BYTE PTR [rax+0x3c],dl
   14000b46a:	add    BYTE PTR [rax],al
   14000b46c:	(bad)  
   14000b46d:	cmp    al,0x0
   14000b46f:	add    BYTE PTR [rax-0x4c],bl
   14000b472:	add    BYTE PTR [rax],al
   14000b474:	and    DWORD PTR [rax],eax
   14000b476:	add    BYTE PTR [rax],al
   14000b478:	push   rax
   14000b479:	cmp    al,0x0
   14000b47b:	add    BYTE PTR [rdx+0x3c],ah
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	pop    rax
   14000b481:	mov    ah,0x0
   14000b483:	add    BYTE PTR [rcx],al
   14000b485:	(bad)  
   14000b487:	add    BYTE PTR [rdi],cl
   14000b489:	xor    al,0x7
   14000b48b:	add    BYTE PTR [rdi],cl
   14000b48d:	xor    cl,BYTE PTR [rbx]
   14000b48f:	jo     0x14000b4b2
   14000b491:	add    eax,0x64050002
   14000b496:	(bad)  
   14000b497:	add    BYTE PTR [rax-0x70ffffb7],al
   14000b49d:	rex.WB add BYTE PTR [r8],al
   14000b4a0:	test   BYTE PTR [rax+rax*1+0x2100],dh
   14000b4a7:	add    BYTE PTR [rax-0x70ffffb7],al
   14000b4ad:	rex.WB add BYTE PTR [r8],al
   14000b4b0:	test   BYTE PTR [rax+rax*1+0x40a0100],dh
   14000b4b7:	add    BYTE PTR [rdx],cl
   14000b4b9:	xor    al,0x8
   14000b4bb:	add    BYTE PTR [rdx],cl
   14000b4bd:	xor    al,BYTE PTR [rsi]
   14000b4bf:	jo     0x14000b4e2
   14000b4c1:	or     al,BYTE PTR [rax+rax*1]
   14000b4c4:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   14000b4c8:	add    eax,0x30000654
   14000b4cd:	push   rax
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	rex.RB push r8
   14000b4d2:	add    BYTE PTR [rax],al
   14000b4d4:	mov    ah,0xb4
   14000b4d6:	add    BYTE PTR [rax],al
   14000b4d8:	and    DWORD PTR [rax],eax
   14000b4da:	add    BYTE PTR [rax],al
   14000b4dc:	xor    BYTE PTR [rax+0x0],dl
   14000b4df:	add    BYTE PTR [rbp+0x50],al
   14000b4e2:	add    BYTE PTR [rax],al
   14000b4e4:	mov    ah,0xb4
   14000b4e6:	add    BYTE PTR [rax],al
   14000b4e8:	add    DWORD PTR [rcx+rax*1],eax
   14000b4eb:	add    BYTE PTR [rdx+rax*2],al
   14000b4ee:	add    BYTE PTR [rax],al
   14000b4f0:	add    DWORD PTR [rcx+rax*1],eax
   14000b4f3:	add    BYTE PTR [rdx+rax*2],al
   14000b4f6:	add    BYTE PTR [rax],al
   14000b4f8:	adc    DWORD PTR [rsi],edx
   14000b4fa:	(bad)  
   14000b4fb:	add    BYTE PTR [rsi],dl
   14000b4fd:	xor    al,0xc
   14000b4ff:	add    BYTE PTR [rax],cl
   14000b501:	push   rdx
   14000b502:	add    al,0x70
   14000b504:	add    esp,DWORD PTR [rax+0x2]
   14000b507:	push   rax
   14000b508:	ss jae 0x14000b50b
   14000b50b:	add    BYTE PTR [rax-0x6d],bh
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	(bad)  
   14000b511:	(bad)  
   14000b512:	(bad)  
   14000b513:	call   QWORD PTR [rax-0xffff7f]
   14000b519:	(bad)  
   14000b51a:	(bad)  
   14000b51b:	jmp    FWORD PTR [rcx+rax*4+0x66a00000]
   14000b522:	add    BYTE PTR [rax],al
   14000b524:	(bad)  
   14000b525:	(bad)  
   14000b526:	(bad)  
   14000b527:	inc    DWORD PTR [rax]
   14000b529:	add    BYTE PTR [eax],al
   14000b52c:	add    BYTE PTR [rax],al
   14000b52e:	add    BYTE PTR [rax],al
   14000b530:	pop    rsp
   14000b531:	add    BYTE PTR [eax],al
   14000b534:	(bad)  
   14000b535:	(bad)  
   14000b536:	(bad)  
   14000b537:	(bad)  
   14000b538:	jg     0x14000b5a1
   14000b53a:	add    BYTE PTR [rax],al
   14000b53c:	add    DWORD PTR [rax],eax
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	(bad)  [rdi+0x0]
   14000b543:	add    bh,bh
   14000b545:	(bad)  
   14000b546:	(bad)  
   14000b547:	inc    DWORD PTR [rcx]
   14000b549:	(bad)  
   14000b54a:	add    al,BYTE PTR [rax]
   14000b54c:	(bad)  
   14000b54d:	xor    al,BYTE PTR [rdx]
   14000b54f:	push   rax
   14000b550:	add    DWORD PTR [rsi],eax
   14000b552:	add    al,BYTE PTR [rax]
   14000b554:	(bad)  
   14000b555:	xor    al,BYTE PTR [rdx]
   14000b557:	push   rax
   14000b558:	add    DWORD PTR [rcx+rax*1],eax
   14000b55b:	add    BYTE PTR [rdx+rax*2],al
   14000b55e:	add    BYTE PTR [rax],al
   14000b560:	add    DWORD PTR [rdi],ecx
   14000b562:	add    al,0x0
   14000b564:	sysenter 
   14000b566:	(bad)  
   14000b567:	add    BYTE PTR [rdi],cl
   14000b569:	xor    cl,BYTE PTR [rbx]
   14000b56b:	jo     0x14000b58e
   14000b56d:	add    eax,0x64050002
   14000b572:	(bad)  
   14000b573:	add    BYTE PTR [rax],ah
   14000b575:	rex.WB add BYTE PTR [r8],al
   14000b578:	(bad)  
   14000b579:	rex.WB add BYTE PTR [r8],al
   14000b57c:	(bad)  
   14000b57d:	mov    ch,0x0
   14000b57f:	add    BYTE PTR [rcx],ah
   14000b581:	add    BYTE PTR [rax],al
   14000b583:	add    BYTE PTR [rax],ah
   14000b585:	rex.WB add BYTE PTR [r8],al
   14000b588:	(bad)  
   14000b589:	rex.WB add BYTE PTR [r8],al
   14000b58c:	(bad)  
   14000b58d:	mov    ch,0x0
   14000b58f:	add    BYTE PTR [rcx],bl
   14000b591:	and    al,0xa
   14000b593:	add    BYTE PTR [rsp+riz*2],ah
   14000b596:	adc    DWORD PTR [rax],eax
   14000b598:	sbb    al,0x34
   14000b59a:	(bad)  
   14000b59b:	add    BYTE PTR [rsi],cl
   14000b59d:	jb     0x14000b5a9
   14000b59f:	lock or al,ah
   14000b5a2:	(bad)  
   14000b5a3:	rol    BYTE PTR [rax+rax*8],1
   14000b5a6:	add    dh,BYTE PTR [rax+0x36]
   14000b5a9:	jae    0x14000b5ab
   14000b5ab:	add    BYTE PTR [rax-0xffff6d],ah
   14000b5b1:	(bad)  
   14000b5b2:	(bad)  
   14000b5b3:	inc    DWORD PTR [rax]
   14000b5b5:	add    BYTE PTR [rax],al
   14000b5b7:	add    bh,bh
   14000b5b9:	(bad)  
   14000b5ba:	(bad)  
   14000b5bb:	inc    DWORD PTR [rax]
	...
   14000b5c5:	add    BYTE PTR [rax],al
   14000b5c7:	add    BYTE PTR [rcx],al
   14000b5c9:	add    BYTE PTR [rax],al
   14000b5cb:	add    BYTE PTR [rcx],al
   14000b5cd:	add    BYTE PTR [rax],al
   14000b5cf:	add    ah,dl
   14000b5d1:	mov    ch,0x0
   14000b5d3:	add    BYTE PTR [rax+0x0],al
	...
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	add    BYTE PTR [rax+0x480000],0x0
   14000b5e7:	add    BYTE PTR [rax+0x4d],al
   14000b5ea:	add    BYTE PTR [rax],al
   14000b5ec:	(bad)  
   14000b5ed:	(bad)  
   14000b5ee:	(bad)  
   14000b5ef:	jmp    FWORD PTR [rdi+0x4d]
   14000b5f5:	add    BYTE PTR [rax],al
   14000b5f7:	add    dl,dl
   14000b5f9:	rex.WRB add BYTE PTR [r8],r8b
   14000b5fc:	(bad)  
   14000b5fd:	(bad)  
   14000b5fe:	(bad)  
   14000b5ff:	inc    DWORD PTR [rax+0x80]
   14000b605:	add    BYTE PTR [rax],al
   14000b607:	add    BYTE PTR [rbp+0x1000080],cl
   14000b60d:	add    BYTE PTR [rax],al
   14000b60f:	add    BYTE PTR [rcx],bl
   14000b611:	or     al,BYTE PTR [rdx]
   14000b613:	add    BYTE PTR [rdx],cl
   14000b615:	push   rdx
   14000b616:	(bad)  
   14000b617:	push   rax
   14000b618:	ss jae 0x14000b61b
   14000b61b:	add    BYTE PTR [rax+0x1000093],ah
   14000b621:	add    al,0x1
   14000b623:	add    BYTE PTR [rdx+rax*2],al
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	add    DWORD PTR [rdx],ecx
   14000b62a:	add    al,0x0
   14000b62c:	or     dh,BYTE PTR [rax+rcx*1]
   14000b62f:	add    BYTE PTR [rdx],cl
   14000b631:	xor    al,BYTE PTR [rsi]
   14000b633:	jo     0x14000b656
   14000b635:	or     al,BYTE PTR [rax+rax*1]
   14000b638:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   14000b63c:	add    eax,0xb0000654
   14000b641:	rex.WRXB add BYTE PTR [r8],r8b
   14000b644:	(bad)
   14000b647:	add    BYTE PTR [rax],ch
   14000b649:	mov    dh,0x0
   14000b64b:	add    BYTE PTR [rcx],ah
   14000b64d:	add    BYTE PTR [rax],al
   14000b64f:	add    BYTE PTR [rax-0x3affffb1],dh
   14000b655:	rex.WRXB add BYTE PTR [r8],r8b
   14000b658:	sub    BYTE PTR [rsi+0x4010000],dh
   14000b65e:	add    DWORD PTR [rax],eax
   14000b660:	add    al,0x42
   14000b662:	add    BYTE PTR [rax],al
   14000b664:	add    DWORD PTR [rsi],eax
   14000b666:	add    al,BYTE PTR [rax]
   14000b668:	(bad)  
   14000b669:	xor    al,BYTE PTR [rdx]
   14000b66b:	xor    BYTE PTR [rcx],ah
   14000b66d:	add    eax,0x74050002
   14000b672:	(bad)  
   14000b673:	add    BYTE PTR [rax+0x39],ah
   14000b676:	add    BYTE PTR [rax],al
   14000b678:	jae    0x14000b6b3
   14000b67a:	add    BYTE PTR [rax],al
   14000b67c:	fs mov dh,0x0
   14000b67f:	add    BYTE PTR [rcx],ah
   14000b681:	add    BYTE PTR [rax],al
   14000b683:	add    BYTE PTR [rax+0x39],ah
   14000b686:	add    BYTE PTR [rax],al
   14000b688:	jae    0x14000b6c3
   14000b68a:	add    BYTE PTR [rax],al
   14000b68c:	fs mov dh,0x0
   14000b68f:	add    BYTE PTR [rcx],al
   14000b691:	(bad)  
   14000b692:	add    al,BYTE PTR [rax]
   14000b694:	(bad)  
   14000b695:	xor    al,BYTE PTR [rdx]
   14000b697:	xor    BYTE PTR [rcx],ah
   14000b699:	add    eax,0x74050002
   14000b69e:	(bad)  
   14000b69f:	add    BYTE PTR [rax],al
   14000b6a1:	cmp    al,0x0
   14000b6a3:	add    BYTE PTR [rbx],dl
   14000b6a5:	cmp    al,0x0
   14000b6a7:	add    BYTE PTR [rax+0x210000b6],dl
   14000b6ad:	add    BYTE PTR [rax],al
   14000b6af:	add    BYTE PTR [rax],al
   14000b6b1:	cmp    al,0x0
   14000b6b3:	add    BYTE PTR [rbx],dl
   14000b6b5:	cmp    al,0x0
   14000b6b7:	add    BYTE PTR [rax+0x10000b6],dl
   14000b6bd:	(bad)  
   14000b6be:	add    al,BYTE PTR [rax]
   14000b6c0:	(bad)  
   14000b6c1:	xor    al,BYTE PTR [rdx]
   14000b6c3:	xor    BYTE PTR [rcx],al
   14000b6c5:	or     al,BYTE PTR [rax+rax*1]
   14000b6c8:	or     dh,BYTE PTR [rdi+rax*1]
   14000b6cb:	add    BYTE PTR [rdx],cl
   14000b6cd:	xor    al,BYTE PTR [rsi]
   14000b6cf:	jo     0x14000b6e2
   14000b6d1:	sbb    BYTE PTR [rax+rax*1],al
   14000b6d4:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000b6d7:	add    BYTE PTR [rdx],cl
   14000b6d9:	push   rdx
   14000b6da:	(bad)  
   14000b6db:	jo     0x14000b713
   14000b6dd:	jae    0x14000b6df
   14000b6df:	add    al,cl
   14000b6e1:	xchg   ebx,eax
   14000b6e2:	add    BYTE PTR [rax],al
   14000b6e4:	(bad)  
   14000b6e5:	(bad)  
   14000b6e6:	(bad)  
   14000b6e7:	push   QWORD PTR [rax]
   14000b6e9:	jg     0x14000b6eb
   14000b6eb:	add    BYTE PTR [rax],al
   14000b6ed:	add    BYTE PTR [rax],al
   14000b6ef:	add    BYTE PTR [rax-0xffffd0],ah
   14000b6f5:	(bad)  
   14000b6f6:	(bad)  
   14000b6f7:	push   rcx
   14000b6f9:	xor    BYTE PTR [rax],al
   14000b6fb:	add    BYTE PTR [rax],al
   14000b6fd:	add    BYTE PTR [rax],al
   14000b6ff:	add    BYTE PTR [rcx+rsi*1],dl
   14000b702:	add    BYTE PTR [rax],al
   14000b704:	(bad)  
   14000b705:	(bad)  
   14000b706:	(bad)  
   14000b707:	inc    DWORD PTR [rcx]
   14000b709:	or     al,BYTE PTR [rax+rax*1]
   14000b70c:	or     dh,BYTE PTR [rsi+rax*1]
   14000b70f:	add    BYTE PTR [rdx],cl
   14000b711:	xor    al,BYTE PTR [rsi]
   14000b713:	jo     0x14000b716
   14000b715:	(bad)  
   14000b716:	add    al,BYTE PTR [rax]
   14000b718:	(bad)  
   14000b719:	xor    al,BYTE PTR [rdx]
   14000b71b:	xor    BYTE PTR [rcx],al
   14000b71d:	or     al,BYTE PTR [rax+rax*1]
   14000b720:	or     dh,BYTE PTR [rdi+rax*1]
   14000b723:	add    BYTE PTR [rdx],cl
   14000b725:	xor    al,BYTE PTR [rsi]
   14000b727:	jo     0x14000b73a
   14000b729:	sbb    BYTE PTR [rax+rax*1],al
   14000b72c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000b72f:	add    BYTE PTR [rdx],cl
   14000b731:	push   rdx
   14000b732:	(bad)  
   14000b733:	jo     0x14000b76b
   14000b735:	jae    0x14000b737
   14000b737:	add    al,dh
   14000b739:	xchg   ebx,eax
   14000b73a:	add    BYTE PTR [rax],al
   14000b73c:	(bad)  
   14000b73d:	(bad)  
   14000b73e:	(bad)  
   14000b73f:	inc    DWORD PTR [rax+0x7f]
   14000b742:	add    BYTE PTR [rax],al
   14000b744:	add    BYTE PTR [rax],al
   14000b746:	add    BYTE PTR [rax],al
   14000b748:	add    BYTE PTR [rdx],dh
   14000b74a:	add    BYTE PTR [rax],al
   14000b74c:	(bad)  
   14000b74d:	(bad)  
   14000b74e:	(bad)  
   14000b74f:	call   QWORD PTR [rcx+0x32]
   14000b752:	add    BYTE PTR [rax],al
   14000b754:	add    BYTE PTR [rax],al
   14000b756:	add    BYTE PTR [rax],al
   14000b758:	je     0x14000b78c
   14000b75a:	add    BYTE PTR [rax],al
   14000b75c:	(bad)  
   14000b75d:	(bad)  
   14000b75e:	(bad)  
   14000b75f:	inc    DWORD PTR [rcx]
   14000b761:	or     al,BYTE PTR [rax+rax*1]
   14000b764:	or     dh,BYTE PTR [rsi+rax*1]
   14000b767:	add    BYTE PTR [rdx],cl
   14000b769:	xor    al,BYTE PTR [rsi]
   14000b76b:	jo     0x14000b76e
   14000b76d:	add    al,0x1
   14000b76f:	add    BYTE PTR [rdx+rax*2],al
   14000b772:	add    BYTE PTR [rax],al
   14000b774:	add    DWORD PTR [rcx+rax*1],eax
   14000b777:	add    BYTE PTR [rdx+rax*2],al
   14000b77a:	add    BYTE PTR [rax],al
   14000b77c:	add    DWORD PTR [rcx+rax*1],eax
   14000b77f:	add    BYTE PTR [rdx+rax*2],al
   14000b782:	add    BYTE PTR [rax],al
   14000b784:	add    DWORD PTR [rsi],eax
   14000b786:	add    al,BYTE PTR [rax]
   14000b788:	(bad)  
   14000b789:	push   rdx
   14000b78a:	add    dh,BYTE PTR [rax]
   14000b78c:	add    DWORD PTR [rdx],ecx
   14000b78e:	add    al,0x0
   14000b790:	or     dh,BYTE PTR [rdi+rax*1]
   14000b793:	add    BYTE PTR [rdx],cl
   14000b795:	xor    al,BYTE PTR [rsi]
   14000b797:	jo     0x14000b79a
   14000b799:	(bad)  
   14000b79a:	add    al,BYTE PTR [rax]
   14000b79c:	(bad)  
   14000b79d:	xor    al,BYTE PTR [rdx]
   14000b79f:	xor    BYTE PTR [rcx],bl
   14000b7a1:	sbb    BYTE PTR [rax+rax*1],al
   14000b7a4:	sbb    BYTE PTR [rcx*1+0x6920a00],dh
   14000b7ab:	jo     0x14000b7e3
   14000b7ad:	jae    0x14000b7af
   14000b7af:	add    BYTE PTR [rax],bl
   14000b7b1:	xchg   esp,eax
   14000b7b2:	add    BYTE PTR [rax],al
   14000b7b4:	(bad)  
   14000b7b5:	(bad)  
   14000b7b6:	(bad)  
   14000b7b7:	inc    DWORD PTR [rax]
   14000b7b9:	add    BYTE PTR [rax],al
   14000b7bb:	add    BYTE PTR [rax],al
   14000b7bd:	add    BYTE PTR [rax],al
   14000b7bf:	add    BYTE PTR [rax-0xffff7e],ah
   14000b7c5:	(bad)  
   14000b7c6:	(bad)  
   14000b7c7:	inc    DWORD PTR [rax]
   14000b7c9:	add    BYTE PTR [rax],al
   14000b7cb:	add    BYTE PTR [rax],al
   14000b7cd:	add    BYTE PTR [rax],al
   14000b7cf:	add    BYTE PTR [rcx],al
   14000b7d1:	add    BYTE PTR [rax],al
   14000b7d3:	add    BYTE PTR [rdx],al
   14000b7d5:	add    BYTE PTR [rax],al
   14000b7d7:	add    BYTE PTR [rcx],al
   14000b7d9:	add    BYTE PTR [rax],al
   14000b7db:	add    al,ah
   14000b7dd:	mov    bh,0x0
   14000b7df:	add    BYTE PTR [rax+0x0],al
	...
   14000b7ea:	add    BYTE PTR [rax],al
   14000b7ec:	lods   al,BYTE PTR ds:[rsi]
   14000b7ed:	(bad)  
   14000b7ee:	add    BYTE PTR [rax],al
   14000b7f0:	cmp    BYTE PTR [rax],al
	...
   14000b7fe:	add    BYTE PTR [rax],al
   14000b800:	loopne 0x14000b86e
   14000b802:	add    BYTE PTR [rax],al
   14000b804:	(bad)  
   14000b805:	(bad)  
   14000b806:	(bad)  
   14000b807:	inc    DWORD PTR [rsi]
   14000b809:	ins    DWORD PTR es:[rdi],dx
   14000b80a:	add    BYTE PTR [rax],al
   14000b80c:	add    BYTE PTR [rax],al
   14000b80e:	add    BYTE PTR [rax],al
   14000b810:	(bad)  
   14000b811:	ins    DWORD PTR es:[rdi],dx
   14000b812:	add    BYTE PTR [rax],al
   14000b814:	add    DWORD PTR [rax],eax
   14000b816:	add    BYTE PTR [rax],al
   14000b818:	jbe    0x14000b887
   14000b81a:	add    BYTE PTR [rax],al
   14000b81c:	add    BYTE PTR [rax],al
   14000b81e:	add    BYTE PTR [rax],al
   14000b820:	mov    ch,BYTE PTR [rbp+0x0]
   14000b823:	add    bh,bh
   14000b825:	(bad)  
   14000b826:	(bad)  
   14000b827:	jmp    FWORD PTR [rdx+rax*4+0x0]
   14000b82e:	add    BYTE PTR [rax],al
   14000b830:	mov    ecx,0x2000082
   14000b835:	add    BYTE PTR [rax],al
   14000b837:	add    bh,al
   14000b839:	(bad)  
   14000b83a:	add    BYTE PTR [rax],al
   14000b83c:	add    BYTE PTR [rax],al
   14000b83e:	add    BYTE PTR [rax],al
   14000b840:	sbb    DWORD PTR [rdx],ecx
   14000b842:	add    al,BYTE PTR [rax]
   14000b844:	or     dh,BYTE PTR [rdx]
   14000b846:	(bad)  
   14000b847:	push   rax
   14000b848:	ss jae 0x14000b84b
   14000b84b:	add    BYTE PTR [rax],bl
   14000b84d:	xchg   esp,eax
   14000b84e:	add    BYTE PTR [rax],al
   14000b850:	adc    DWORD PTR [rax],ebx
   14000b852:	add    al,0x0
   14000b854:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000b857:	add    BYTE PTR [rdx],cl
   14000b859:	push   rdx
   14000b85a:	(bad)  
   14000b85b:	jo     0x14000b893
   14000b85d:	jae    0x14000b85f
   14000b85f:	add    BYTE PTR [rax-0x6c],al
   14000b862:	add    BYTE PTR [rax],al
   14000b864:	(bad)  
   14000b865:	(bad)  
   14000b866:	(bad)  
   14000b867:	call   QWORD PTR [rax+0x7f]
   14000b86a:	add    BYTE PTR [rax],al
   14000b86c:	add    BYTE PTR [rax],al
   14000b86e:	add    BYTE PTR [rax],al
   14000b870:	shl    BYTE PTR [rax+rax*1],1
   14000b873:	add    bh,bh
   14000b875:	(bad)  
   14000b876:	(bad)  
   14000b877:	push   rbp
   14000b879:	xor    al,0x0
   14000b87b:	add    BYTE PTR [rax],al
   14000b87d:	add    BYTE PTR [rax],al
   14000b87f:	add    BYTE PTR [rdi],ch
   14000b881:	xor    eax,0xffff0000
   14000b886:	(bad)  
   14000b887:	inc    DWORD PTR [rcx]
   14000b889:	or     al,BYTE PTR [rax+rax*1]
   14000b88c:	or     dh,BYTE PTR [rsi+rax*1]
   14000b88f:	add    BYTE PTR [rdx],cl
   14000b891:	xor    al,BYTE PTR [rsi]
   14000b893:	jo     0x14000b896
   14000b895:	or     al,BYTE PTR [rax+rax*1]
   14000b898:	or     dh,BYTE PTR [rcx+rcx*1]
   14000b89b:	add    BYTE PTR [rdx],cl
   14000b89d:	push   rdx
   14000b89e:	(bad)  
   14000b89f:	jo     0x14000b8a2
   14000b8a1:	(bad)  
   14000b8a2:	add    al,BYTE PTR [rax]
   14000b8a4:	(bad)  
   14000b8a5:	xor    al,BYTE PTR [rdx]
   14000b8a7:	xor    BYTE PTR [rcx],al
   14000b8a9:	(bad)  
   14000b8aa:	add    al,BYTE PTR [rax]
   14000b8ac:	(bad)  
   14000b8ad:	xor    al,BYTE PTR [rdx]
   14000b8af:	xor    BYTE PTR [rcx],al
   14000b8b1:	or     al,BYTE PTR [rax+rax*1]
   14000b8b4:	or     dh,BYTE PTR [rsi+rax*1]
   14000b8b7:	add    BYTE PTR [rdx],cl
   14000b8b9:	xor    al,BYTE PTR [rsi]
   14000b8bb:	jo     0x14000b8be
   14000b8bd:	(bad)  
   14000b8be:	add    al,BYTE PTR [rax]
   14000b8c0:	(bad)  
   14000b8c1:	push   rdx
   14000b8c2:	add    dh,BYTE PTR [rax]
   14000b8c4:	add    DWORD PTR [rsi],eax
   14000b8c6:	add    al,BYTE PTR [rax]
   14000b8c8:	(bad)  
   14000b8c9:	xor    al,BYTE PTR [rdx]
   14000b8cb:	xor    BYTE PTR [rcx],al
   14000b8cd:	(bad)  
   14000b8ce:	add    al,BYTE PTR [rax]
   14000b8d0:	(bad)  
   14000b8d1:	xor    al,BYTE PTR [rdx]
   14000b8d3:	xor    BYTE PTR [rcx],al
   14000b8d5:	or     al,BYTE PTR [rax+rax*1]
   14000b8d8:	or     dh,BYTE PTR [rsi+rax*1]
   14000b8db:	add    BYTE PTR [rdx],cl
   14000b8dd:	xor    al,BYTE PTR [rsi]
   14000b8df:	jo     0x14000b8f2
   14000b8e1:	adc    BYTE PTR [rdx],al
   14000b8e3:	add    BYTE PTR [rdi],al
   14000b8e5:	add    DWORD PTR [rcx],edx
   14000b8e7:	add    BYTE PTR [rsi],dh
   14000b8e9:	jae    0x14000b8eb
   14000b8eb:	add    BYTE PTR [rax-0x6c],ch
   14000b8ee:	add    BYTE PTR [rax],al
   14000b8f0:	(bad)  
   14000b8f1:	(bad)  
   14000b8f2:	(bad)  
   14000b8f3:	inc    DWORD PTR [rax-0x4fffff7f]
   14000b8f9:	pop    rsi
   14000b8fa:	add    BYTE PTR [rax],al
   14000b8fc:	(bad)  
   14000b8fd:	(bad)  
   14000b8fe:	(bad)  
   14000b8ff:	push   QWORD PTR [rdi]
   14000b901:	pop    rdi
   14000b902:	add    BYTE PTR [rax],al
   14000b904:	add    BYTE PTR [rax],al
   14000b906:	add    BYTE PTR [rax],al
   14000b908:	rex.X pop rdi
   14000b90a:	add    BYTE PTR [rax],al
   14000b90c:	(bad)  
   14000b90d:	(bad)  
   14000b90e:	(bad)  
   14000b90f:	call   QWORD PTR [rcx]
   14000b911:	adc    BYTE PTR [rdx],al
   14000b913:	add    BYTE PTR [rdi],al
   14000b915:	add    DWORD PTR [rip+0x733600],esp        # 0x14073ef1b
   14000b91b:	add    BYTE PTR [rax-0xffff6c],dl
   14000b921:	(bad)  
   14000b922:	(bad)  
   14000b923:	inc    DWORD PTR [rax]
   14000b925:	jge    0x14000b927
   14000b927:	add    al,al
   14000b929:	and    al,0x0
   14000b92b:	add    bh,bh
   14000b92d:	(bad)  
   14000b92e:	(bad)  
   14000b92f:	jmp    rcx
   14000b931:	and    al,0x0
   14000b933:	add    BYTE PTR [rax],al
   14000b935:	add    BYTE PTR [rax],al
   14000b937:	add    BYTE PTR [rcx],al
   14000b939:	add    al,0x1
   14000b93b:	add    BYTE PTR [rdx+rax*2],al
   14000b93e:	add    BYTE PTR [rax],al
   14000b940:	add    DWORD PTR [rsi],eax
   14000b942:	add    al,BYTE PTR [rax]
   14000b944:	(bad)  
   14000b945:	xor    al,BYTE PTR [rdx]
   14000b947:	xor    BYTE PTR [rcx],al
   14000b949:	add    al,0x1
   14000b94b:	add    BYTE PTR [rdx+rax*2],al
   14000b94e:	add    BYTE PTR [rax],al
   14000b950:	add    DWORD PTR [rdx],ecx
   14000b952:	add    al,0x0
   14000b954:	or     dh,BYTE PTR [rdi+rax*1]
   14000b957:	add    BYTE PTR [rdx],cl
   14000b959:	xor    al,BYTE PTR [rsi]
   14000b95b:	(bad)  
   14000b95c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405b964
   14000b962:	(bad)  
   14000b963:	add    BYTE PTR [rax-0x4bffffc1],dl
   14000b969:	(bad)  
   14000b96a:	add    BYTE PTR [rax],al
   14000b96c:	push   rax
   14000b96d:	mov    ecx,0x210000
   14000b972:	add    BYTE PTR [rax],al
   14000b974:	nop
   14000b975:	(bad)  
   14000b976:	add    BYTE PTR [rax],al
   14000b978:	mov    ah,0x3f
   14000b97a:	add    BYTE PTR [rax],al
   14000b97c:	push   rax
   14000b97d:	mov    ecx,0x6010000
   14000b982:	add    al,BYTE PTR [rax]
   14000b984:	(bad)  
   14000b985:	xor    al,BYTE PTR [rdx]
   14000b987:	xor    BYTE PTR [rcx],ah
   14000b989:	add    eax,0x74050002
   14000b98e:	(bad)  
   14000b98f:	add    BYTE PTR [rax-0x4cffffc7],ah
   14000b995:	cmp    DWORD PTR [rax],eax
   14000b997:	add    BYTE PTR [rax+0x210000b9],al
   14000b99d:	add    BYTE PTR [rax],al
   14000b99f:	add    BYTE PTR [rax-0x4cffffc7],ah
   14000b9a5:	cmp    DWORD PTR [rax],eax
   14000b9a7:	add    BYTE PTR [rax+0x190000b9],al
   14000b9ad:	and    ecx,DWORD PTR [rcx]
   14000b9af:	add    BYTE PTR [rbx],ah
   14000b9b1:	je     0x14000b9f5
   14000b9b3:	add    BYTE PTR [rdi],bl
   14000b9b5:	add    BYTE PTR fs:[r11],bl
   14000b9b9:	xor    al,0x40
   14000b9bb:	add    BYTE PTR [rcx+rax*1],cl
   14000b9be:	add    BYTE PTR ds:[rip+0x360000e0],al        # 0x17600baa5
   14000b9c5:	jae    0x14000b9c7
   14000b9c7:	add    BYTE PTR [rax-0xffff6c],bh
   14000b9cd:	(bad)  
   14000b9ce:	(bad)  
   14000b9cf:	jmp    rax
   14000b9d1:	(bad)  
   14000b9d2:	add    BYTE PTR [rax],al
   14000b9d4:	add    BYTE PTR [rax],al
   14000b9d6:	add    BYTE PTR [rax],al
   14000b9d8:	in     al,dx
   14000b9d9:	(bad)  
   14000b9da:	add    BYTE PTR [rax],al
   14000b9dc:	add    BYTE PTR [rax],al
   14000b9de:	add    BYTE PTR [rax],al
   14000b9e0:	clc    
   14000b9e1:	(bad)  
   14000b9e2:	add    BYTE PTR [rax],al
   14000b9e4:	add    BYTE PTR [rax],al
   14000b9e6:	add    BYTE PTR [rax],al
   14000b9e8:	add    al,0x83
   14000b9ea:	add    BYTE PTR [rax],al
   14000b9ec:	add    eax,DWORD PTR [rax]
   14000b9ee:	add    BYTE PTR [rax],al
   14000b9f0:	adc    BYTE PTR [rbx+0x0],al
   14000b9f6:	add    BYTE PTR [rax],al
   14000b9f8:	adc    BYTE PTR [rbx+0x50000],al
   14000b9fe:	add    BYTE PTR [rax],al
   14000ba00:	(bad)  
   14000ba01:	add    DWORD PTR [rax],0x0
   14000ba04:	(bad)  
   14000ba05:	add    BYTE PTR [rax],al
   14000ba07:	add    BYTE PTR [rax],al
   14000ba09:	add    BYTE PTR [rax],al
   14000ba0b:	add    BYTE PTR [rsi],al
   14000ba0d:	add    BYTE PTR [rax],al
   14000ba0f:	add    BYTE PTR [rax],al
   14000ba11:	add    BYTE PTR [rax],al
   14000ba13:	add    BYTE PTR [rdi],al
   14000ba15:	add    BYTE PTR [rax],al
   14000ba17:	add    BYTE PTR [rdi],al
   14000ba19:	add    BYTE PTR [rax],al
   14000ba1b:	add    BYTE PTR [rax],cl
   14000ba1d:	add    BYTE PTR [rax],al
   14000ba1f:	add    BYTE PTR [rcx],al
   14000ba21:	add    BYTE PTR [rax],al
   14000ba23:	add    BYTE PTR [rax],ch
   14000ba25:	mov    edx,0x400000
	...
   14000ba32:	add    BYTE PTR [rax],al
   14000ba34:	sub    al,0x83
   14000ba36:	add    BYTE PTR [rax],al
   14000ba38:	rex.W add BYTE PTR [rax],al
   14000ba3b:	add    BYTE PTR [rax],al
   14000ba3d:	add    BYTE PTR [rax],al
   14000ba3f:	add    BYTE PTR [rax-0xffff93],dh
   14000ba45:	(bad)  
   14000ba46:	(bad)  
   14000ba47:	jmp    rbx
   14000ba49:	ins    DWORD PTR es:[rdi],dx
   14000ba4a:	add    BYTE PTR [rax],al
   14000ba4c:	add    BYTE PTR [rax],al
   14000ba4e:	add    BYTE PTR [rax],al
   14000ba50:	xchg   ebp,eax
   14000ba51:	outs   dx,BYTE PTR ds:[rsi]
   14000ba52:	add    BYTE PTR [rax],al
   14000ba54:	add    DWORD PTR [rax],eax
   14000ba56:	add    BYTE PTR [rax],al
   14000ba58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ba59:	outs   dx,BYTE PTR ds:[rsi]
   14000ba5a:	add    BYTE PTR [rax],al
   14000ba5c:	add    BYTE PTR [rax],al
   14000ba5e:	add    BYTE PTR [rax],al
   14000ba60:	imul   DWORD PTR [rsi+0x0]
   14000ba63:	add    BYTE PTR [rdx],al
   14000ba65:	add    BYTE PTR [rax],al
   14000ba67:	add    BYTE PTR [rbx],al
   14000ba69:	outs   dx,DWORD PTR ds:[rsi]
   14000ba6a:	add    BYTE PTR [rax],al
   14000ba6c:	add    BYTE PTR [rax],al
   14000ba6e:	add    BYTE PTR [rax],al
   14000ba70:	outs   dx,DWORD PTR es:[rsi]
   14000ba72:	add    BYTE PTR [rax],al
   14000ba74:	add    eax,DWORD PTR [rax]
   14000ba76:	add    BYTE PTR [rax],al
   14000ba78:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14000ba7a:	add    BYTE PTR [rax],al
   14000ba7c:	add    eax,0xc7000000
   14000ba81:	outs   dx,DWORD PTR ds:[rsi]
   14000ba82:	add    BYTE PTR [rax],al
   14000ba84:	(bad)  
   14000ba85:	add    BYTE PTR [rax],al
   14000ba87:	add    al,bl
   14000ba89:	outs   dx,DWORD PTR ds:[rsi]
   14000ba8a:	add    BYTE PTR [rax],al
   14000ba8c:	(bad)  
   14000ba8d:	add    BYTE PTR [rax],al
   14000ba8f:	add    cl,ah
   14000ba91:	outs   dx,DWORD PTR ds:[rsi]
   14000ba92:	add    BYTE PTR [rax],al
   14000ba94:	add    eax,0xf0000000
   14000ba99:	outs   dx,DWORD PTR ds:[rsi]
   14000ba9a:	add    BYTE PTR [rax],al
   14000ba9c:	add    BYTE PTR [rax],al
   14000ba9e:	add    BYTE PTR [rax],al
   14000baa0:	jmp    FWORD PTR [rdi+0x0]
   14000baa3:	add    bh,bh
   14000baa5:	(bad)  
   14000baa6:	(bad)  
   14000baa7:	jmp    FWORD PTR [rbx+rax*4]
   14000baaa:	add    BYTE PTR [rax],al
   14000baac:	add    BYTE PTR [rax],al
   14000baae:	add    BYTE PTR [rax],al
   14000bab0:	cmp    DWORD PTR [rbx+0x80000],eax
   14000bab6:	add    BYTE PTR [rax],al
   14000bab8:	rex add DWORD PTR [rax],0x0
   14000babc:	add    BYTE PTR [rax],al
   14000babe:	add    BYTE PTR [rax],al
   14000bac0:	sbb    DWORD PTR [rdx],ecx
   14000bac2:	add    al,BYTE PTR [rax]
   14000bac4:	or     dl,BYTE PTR [rdx+0x6]
   14000bac7:	push   rax
   14000bac8:	ss jae 0x14000bacb
   14000bacb:	add    BYTE PTR [rax+0x11000094],bh
   14000bad1:	sbb    BYTE PTR [rax+rax*1],al
   14000bad4:	sbb    BYTE PTR [rax+rcx*1],dh
   14000bad7:	add    BYTE PTR [rdx],cl
   14000bad9:	push   rdx
   14000bada:	(bad)  
   14000badb:	jo     0x14000bb13
   14000badd:	jae    0x14000badf
   14000badf:	add    al,ah
   14000bae1:	xchg   esp,eax
   14000bae2:	add    BYTE PTR [rax],al
   14000bae4:	(bad)  
   14000bae5:	(bad)  
   14000bae6:	(bad)  
   14000bae7:	inc    DWORD PTR [rax]
   14000bae9:	jnp    0x14000baeb
   14000baeb:	add    BYTE PTR [rax],al
   14000baed:	add    BYTE PTR [rax],al
   14000baef:	add    BYTE PTR [rax],dl
   14000baf1:	(bad)  
   14000baf2:	add    BYTE PTR [rax],al
   14000baf4:	(bad)  
   14000baf5:	(bad)  
   14000baf6:	(bad)  
   14000baf7:	push   QWORD PTR [rbx]
   14000baf9:	(bad)  
   14000bafa:	add    BYTE PTR [rax],al
   14000bafc:	add    BYTE PTR [rax],al
   14000bafe:	add    BYTE PTR [rax],al
   14000bb00:	cdq    
   14000bb01:	(bad)  
   14000bb02:	add    BYTE PTR [rax],al
   14000bb04:	(bad)  
   14000bb05:	(bad)  
   14000bb06:	(bad)  
   14000bb07:	inc    DWORD PTR [rcx]
   14000bb09:	(bad)  
   14000bb0a:	add    al,BYTE PTR [rax]
   14000bb0c:	(bad)  
   14000bb0d:	xor    al,BYTE PTR [rdx]
   14000bb0f:	push   rax
   14000bb10:	add    DWORD PTR [rcx+rax*1],eax
   14000bb13:	add    BYTE PTR [rdx+rax*2],al
   14000bb16:	add    BYTE PTR [rax],al
   14000bb18:	add    DWORD PTR [rsi],eax
   14000bb1a:	add    al,BYTE PTR [rax]
   14000bb1c:	(bad)  
   14000bb1d:	push   rdx
   14000bb1e:	add    dh,BYTE PTR [rax]
   14000bb20:	add    DWORD PTR [rdi],ecx
   14000bb22:	add    al,0x0
   14000bb24:	sysenter 
   14000bb26:	(bad)  
   14000bb27:	add    BYTE PTR [rdi],cl
   14000bb29:	xor    cl,BYTE PTR [rbx]
   14000bb2b:	jo     0x14000bb4e
   14000bb2d:	add    eax,0x64050002
   14000bb32:	(bad)  
   14000bb33:	add    BYTE PTR [rax+0x14],al
   14000bb36:	add    BYTE PTR [rax],al
   14000bb38:	rex.WRXB adc al,0x0
   14000bb3b:	add    BYTE PTR [rax],ah
   14000bb3d:	mov    ebx,0x210000
   14000bb42:	add    BYTE PTR [rax],al
   14000bb44:	adc    al,0x0
   14000bb47:	add    BYTE PTR [rdi+0x14],cl
   14000bb4a:	add    BYTE PTR [rax],al
   14000bb4c:	and    BYTE PTR [rbx+0xf010000],bh
   14000bb52:	add    al,0x0
   14000bb54:	sysenter 
   14000bb56:	(bad)  
   14000bb57:	add    BYTE PTR [rdi],cl
   14000bb59:	xor    cl,BYTE PTR [rbx]
   14000bb5b:	jo     0x14000bb7e
   14000bb5d:	add    eax,0x64050002
   14000bb62:	(bad)  
   14000bb63:	add    BYTE PTR [rax-0x70ffffed],al
   14000bb69:	adc    eax,DWORD PTR [rax]
   14000bb6b:	add    BYTE PTR [rax-0x45],dl
   14000bb6e:	add    BYTE PTR [rax],al
   14000bb70:	and    DWORD PTR [rax],eax
   14000bb72:	add    BYTE PTR [rax],al
   14000bb74:	adc    BYTE PTR [rbx],0x0
   14000bb77:	add    BYTE PTR [rdi+0x50000013],cl
   14000bb7d:	mov    ebx,0x4010000
   14000bb82:	add    DWORD PTR [rax],eax
   14000bb84:	add    al,0x42
   14000bb86:	add    BYTE PTR [rax],al
   14000bb88:	add    DWORD PTR [rcx+rax*1],eax
   14000bb8b:	add    BYTE PTR [rdx+rax*2],al
   14000bb8e:	add    BYTE PTR [rax],al
   14000bb90:	adc    DWORD PTR [rcx],esp
   14000bb92:	or     al,BYTE PTR [rax]
   14000bb94:	sbb    DWORD PTR [rcx],eax
   14000bb96:	(bad)  
   14000bb97:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0c78d
   14000bb9d:	rol    BYTE PTR [rdi],1
   14000bb9f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360c016
   14000bba6:	add    dl,BYTE PTR [rax+0x36]
   14000bba9:	jae    0x14000bbab
   14000bbab:	add    BYTE PTR [rax],cl
   14000bbad:	xchg   ebp,eax
   14000bbae:	add    BYTE PTR [rax],al
   14000bbb0:	(bad)  
   14000bbb1:	(bad)  
   14000bbb2:	(bad)  
   14000bbb3:	inc    DWORD PTR [rax+0x7b]
   14000bbb6:	add    BYTE PTR [rax],al
   14000bbb8:	(bad)  
   14000bbb9:	(bad)  
   14000bbba:	(bad)  
   14000bbbb:	dec    DWORD PTR [rbx+rdi*2+0x0]
   14000bbbf:	add    BYTE PTR [rcx],al
   14000bbc1:	add    BYTE PTR [rax],al
   14000bbc3:	add    BYTE PTR [rax+0x7b],bl
   14000bbc6:	add    BYTE PTR [rax],al
   14000bbc8:	add    al,BYTE PTR [rax]
   14000bbca:	add    BYTE PTR [rax],al
   14000bbcc:	(bad)  
   14000bbcd:	jnp    0x14000bbcf
   14000bbcf:	add    BYTE PTR [rdx],al
   14000bbd1:	add    BYTE PTR [rax],al
   14000bbd3:	add    BYTE PTR [rsi+0x400007b],cl
   14000bbd9:	add    BYTE PTR [rax],al
   14000bbdb:	add    BYTE PTR [rdx+0x500007b],bl
   14000bbe1:	add    BYTE PTR [rax],al
   14000bbe3:	add    BYTE PTR [rsi+0x100007b],ah
   14000bbe9:	add    BYTE PTR [rax],al
   14000bbeb:	add    BYTE PTR [rdx+0x700007b],dh
   14000bbf1:	add    BYTE PTR [rax],al
   14000bbf3:	add    BYTE PTR [rsi+0x800007b],bh
   14000bbf9:	add    BYTE PTR [rax],al
   14000bbfb:	add    ah,dl
   14000bbfd:	jnp    0x14000bbff
   14000bbff:	add    BYTE PTR [rcx],cl
   14000bc01:	add    BYTE PTR [rax],al
   14000bc03:	add    al,ah
   14000bc05:	jnp    0x14000bc07
   14000bc07:	add    BYTE PTR [rax],cl
   14000bc09:	add    BYTE PTR [rax],al
   14000bc0b:	add    BYTE PTR [rip+0x4000007c],cl        # 0x18000bc8d
   14000bc11:	sbb    eax,DWORD PTR [rax]
   14000bc13:	add    bh,bh
   14000bc15:	(bad)  
   14000bc16:	(bad)  
   14000bc17:	dec    DWORD PTR [rcx+0x1b]
   14000bc1d:	add    BYTE PTR [rax],al
   14000bc1f:	add    BYTE PTR [rbx+rbx*1+0x10000],bh
   14000bc26:	add    BYTE PTR [rax],al
   14000bc28:	rcr    BYTE PTR [rbx],cl
   14000bc2a:	add    BYTE PTR [rax],al
   14000bc2c:	add    al,BYTE PTR [rax]
   14000bc2e:	add    BYTE PTR [rax],al
   14000bc30:	or     ebx,DWORD PTR [rax+rax*1]
   14000bc33:	add    BYTE PTR [rbx],al
   14000bc35:	add    BYTE PTR [rax],al
   14000bc37:	add    BYTE PTR [rdx],bl
   14000bc39:	sbb    al,0x0
   14000bc3b:	add    BYTE PTR [rax+rax*1],al
   14000bc3e:	add    BYTE PTR [rax],al
   14000bc40:	pop    rbx
   14000bc41:	sbb    al,0x0
   14000bc43:	add    BYTE PTR [rip+0x6f000000],al        # 0x1af00bc49
   14000bc49:	sbb    al,0x0
   14000bc4b:	add    BYTE PTR [rsi],al
   14000bc4d:	add    BYTE PTR [rax],al
   14000bc4f:	add    BYTE PTR [rbp+0x500001c],al
   14000bc55:	add    BYTE PTR [rax],al
   14000bc57:	add    dh,bl
   14000bc59:	sbb    al,0x0
   14000bc5b:	add    BYTE PTR [rax+rax*1],al
   14000bc5e:	add    BYTE PTR [rax],al
   14000bc60:	in     eax,dx
   14000bc61:	sbb    al,0x0
   14000bc63:	add    BYTE PTR [rdi],al
   14000bc65:	add    BYTE PTR [rax],al
   14000bc67:	add    BYTE PTR [rbx],ah
   14000bc69:	sbb    eax,0x80000
   14000bc6e:	add    BYTE PTR [rax],al
   14000bc70:	xor    al,0x1d
   14000bc72:	add    BYTE PTR [rax],al
   14000bc74:	or     DWORD PTR [rax],eax
   14000bc76:	add    BYTE PTR [rax],al
   14000bc78:	sbb    rax,0xa0000
   14000bc7e:	add    BYTE PTR [rax],al
   14000bc80:	xchg   ebx,eax
   14000bc81:	sbb    eax,0x90000
   14000bc86:	add    BYTE PTR [rax],al
   14000bc88:	cwde   
   14000bc89:	sbb    eax,0x80000
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	mov    ebp,0xb00001d
   14000bc95:	add    BYTE PTR [rax],al
   14000bc97:	add    BYTE PTR [rcx],dl
   14000bc99:	(bad)  
   14000bc9a:	add    BYTE PTR [rax],al
   14000bc9c:	or     BYTE PTR [rax],al
   14000bc9e:	add    BYTE PTR [rax],al
   14000bca0:	addr32 (bad) 
   14000bca2:	add    BYTE PTR [rax],al
   14000bca4:	(bad)  
   14000bca5:	add    BYTE PTR [rax],al
   14000bca7:	add    BYTE PTR [rbp+0x100001e],al
   14000bcad:	add    BYTE PTR [rax],al
   14000bcaf:	add    BYTE PTR [rcx],cl
   14000bcb1:	(bad)  
   14000bcb2:	add    BYTE PTR [rax],al
   14000bcb4:	(bad)  
   14000bcb5:	(bad)  
   14000bcb6:	(bad)  
   14000bcb7:	inc    DWORD PTR [rcx]
   14000bcb9:	(bad)  
   14000bcba:	add    al,BYTE PTR [rax]
   14000bcbc:	(bad)  
   14000bcbd:	xor    al,BYTE PTR [rdx]
   14000bcbf:	push   rax
   14000bcc0:	add    DWORD PTR [rdx],eax
   14000bcc2:	add    DWORD PTR [rax],eax
   14000bcc4:	add    dl,BYTE PTR [rax+0x0]
   14000bcc7:	add    BYTE PTR [rcx],al
   14000bcc9:	(bad)  
   14000bcca:	add    al,BYTE PTR [rax]
   14000bccc:	(bad)  
   14000bccd:	xor    al,BYTE PTR [rdx]
   14000bccf:	push   rax
   14000bcd0:	add    DWORD PTR [rcx+rax*1],eax
   14000bcd3:	add    BYTE PTR [rdx+rax*2],al
   14000bcd6:	add    BYTE PTR [rax],al
   14000bcd8:	add    DWORD PTR [rsi],eax
   14000bcda:	add    al,BYTE PTR [rax]
   14000bcdc:	(bad)  
   14000bcdd:	xor    al,BYTE PTR [rdx]
   14000bcdf:	xor    BYTE PTR [rcx],ah
   14000bce1:	add    eax,0x74050002
   14000bce6:	(bad)  
   14000bce7:	add    BYTE PTR [rax-0x7c],dl
   14000bcea:	add    BYTE PTR [rax],al
   14000bcec:	data16 test BYTE PTR [rax],al
   14000bcef:	add    al,bl
   14000bcf1:	mov    esp,0x210000
   14000bcf6:	add    BYTE PTR [rax],al
   14000bcf8:	push   rax
   14000bcf9:	test   BYTE PTR [rax],al
   14000bcfb:	add    BYTE PTR [rsi-0x7c],ah
   14000bcfe:	add    BYTE PTR [rax],al
   14000bd00:	fdivr  DWORD PTR [rax+rax*1+0xa211100]
   14000bd07:	add    BYTE PTR [rcx],bl
   14000bd09:	add    DWORD PTR [rdi],ebx
   14000bd0b:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0c901
   14000bd11:	rol    BYTE PTR [rdi],1
   14000bd13:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360c18a
   14000bd1a:	add    dl,BYTE PTR [rax+0x36]
   14000bd1d:	jae    0x14000bd1f
   14000bd1f:	add    BYTE PTR [rax],dh
   14000bd21:	xchg   ebp,eax
   14000bd22:	add    BYTE PTR [rax],al
   14000bd24:	(bad)  
   14000bd25:	(bad)  
   14000bd26:	(bad)  
   14000bd27:	jmp    QWORD PTR [rax]
   14000bd29:	jl     0x14000bd2b
   14000bd2b:	add    bh,bh
   14000bd2d:	(bad)  
   14000bd2e:	(bad)  
   14000bd2f:	jmp    FWORD PTR [rsp+rdi*2]
   14000bd32:	add    BYTE PTR [rax],al
   14000bd34:	add    DWORD PTR [rax],eax
   14000bd36:	add    BYTE PTR [rax],al
   14000bd38:	cmp    BYTE PTR [rax+rax*1+0x0],bh
   14000bd3c:	add    al,BYTE PTR [rax]
   14000bd3e:	add    BYTE PTR [rax],al
   14000bd40:	(bad)  
   14000bd41:	jl     0x14000bd43
   14000bd43:	add    BYTE PTR [rdx],al
   14000bd45:	add    BYTE PTR [rax],al
   14000bd47:	add    BYTE PTR [rsi+0x7c],ch
   14000bd4a:	add    BYTE PTR [rax],al
   14000bd4c:	add    al,0x0
   14000bd4e:	add    BYTE PTR [rax],al
   14000bd50:	jp     0x14000bdce
   14000bd52:	add    BYTE PTR [rax],al
   14000bd54:	add    eax,0x86000000
   14000bd59:	jl     0x14000bd5b
   14000bd5b:	add    BYTE PTR [rcx],al
   14000bd5d:	add    BYTE PTR [rax],al
   14000bd5f:	add    BYTE PTR [rdx+0x700007c],dl
   14000bd65:	add    BYTE PTR [rax],al
   14000bd67:	add    BYTE PTR [rsi+0x800007c],bl
   14000bd6d:	add    BYTE PTR [rax],al
   14000bd6f:	add    BYTE PTR [rsp+rdi*2+0x90000],dh
   14000bd76:	add    BYTE PTR [rax],al
   14000bd78:	sar    BYTE PTR [rax+rax*1+0x0],0x8
   14000bd7d:	add    BYTE PTR [rax],al
   14000bd7f:	add    ch,ch
   14000bd81:	jl     0x14000bd83
	...
   14000bd8f:	add    BYTE PTR [rax+0x1f],dl
   14000bd92:	add    BYTE PTR [rax],al
   14000bd94:	(bad)  
   14000bd95:	(bad)  
   14000bd96:	(bad)  
   14000bd97:	call   FWORD PTR [rcx+0x1f]
   14000bd9d:	add    BYTE PTR [rax],al
   14000bd9f:	add    al,cl
   14000bda1:	(bad)  
   14000bda2:	add    BYTE PTR [rax],al
   14000bda4:	add    DWORD PTR [rax],eax
   14000bda6:	add    BYTE PTR [rax],al
   14000bda8:	ficomp WORD PTR [rdi]
   14000bdaa:	add    BYTE PTR [rax],al
   14000bdac:	add    al,BYTE PTR [rax]
   14000bdae:	add    BYTE PTR [rax],al
   14000bdb0:	(bad)  
   14000bdb1:	and    BYTE PTR [rax],al
   14000bdb3:	add    BYTE PTR [rbx],al
   14000bdb5:	add    BYTE PTR [rax],al
   14000bdb7:	add    BYTE PTR [rsi],ah
   14000bdb9:	and    BYTE PTR [rax],al
   14000bdbb:	add    BYTE PTR [rax+rax*1],al
   14000bdbe:	add    BYTE PTR [rax],al
   14000bdc0:	and    BYTE PTR [eax],al
   14000bdc3:	add    BYTE PTR [rip+0x7b000000],al        # 0x1bb00bdc9
   14000bdc9:	and    BYTE PTR [rax],al
   14000bdcb:	add    BYTE PTR [rsi],al
   14000bdcd:	add    BYTE PTR [rax],al
   14000bdcf:	add    BYTE PTR [rcx+0x5000020],dl
   14000bdd5:	add    BYTE PTR [rax],al
   14000bdd7:	add    dl,ch
   14000bdd9:	and    BYTE PTR [rax],al
   14000bddb:	add    BYTE PTR [rax+rax*1],al
   14000bdde:	add    BYTE PTR [rax],al
   14000bde0:	stc    
   14000bde1:	and    BYTE PTR [rax],al
   14000bde3:	add    BYTE PTR [rdi],al
   14000bde5:	add    BYTE PTR [rax],al
   14000bde7:	add    BYTE PTR [rdi],ch
   14000bde9:	and    DWORD PTR [rax],eax
   14000bdeb:	add    BYTE PTR [rax],cl
   14000bded:	add    BYTE PTR [rax],al
   14000bdef:	add    BYTE PTR [rax+0x21],al
   14000bdf2:	add    BYTE PTR [rax],al
   14000bdf4:	or     DWORD PTR [rax],eax
   14000bdf6:	add    BYTE PTR [rax],al
   14000bdf8:	push   rsp
   14000bdf9:	and    DWORD PTR [rax],eax
   14000bdfb:	add    BYTE PTR [rdx],cl
   14000bdfd:	add    BYTE PTR [rax],al
   14000bdff:	add    BYTE PTR [rdi+0x9000021],bl
   14000be05:	add    BYTE PTR [rax],al
   14000be07:	add    BYTE PTR [rcx+riz*1+0x80000],ah
   14000be0e:	add    BYTE PTR [rax],al
   14000be10:	leave  
   14000be11:	and    DWORD PTR [rax],eax
   14000be13:	add    BYTE PTR [rbx],cl
   14000be15:	add    BYTE PTR [rax],al
   14000be17:	add    BYTE PTR [rip+0x8000022],bl        # 0x14800be3f
   14000be1d:	add    BYTE PTR [rax],al
   14000be1f:	add    BYTE PTR [rbx+0x22],dh
   14000be22:	add    BYTE PTR [rax],al
   14000be24:	(bad)  
   14000be25:	add    BYTE PTR [rax],al
   14000be27:	add    BYTE PTR [rcx+0x1000022],dl
   14000be2d:	add    BYTE PTR [rax],al
   14000be2f:	add    BYTE PTR [rip+0xffffffffff000023],dl        # 0x13f00be58
   14000be35:	(bad)  
   14000be36:	(bad)  
   14000be37:	inc    DWORD PTR [rcx]
   14000be39:	(bad)  
   14000be3a:	add    al,BYTE PTR [rax]
   14000be3c:	(bad)  
   14000be3d:	xor    al,BYTE PTR [rdx]
   14000be3f:	push   rax
   14000be40:	add    DWORD PTR [rdx],eax
   14000be42:	add    DWORD PTR [rax],eax
   14000be44:	add    dl,BYTE PTR [rax+0x0]
   14000be47:	add    BYTE PTR [rcx],al
   14000be49:	(bad)  
   14000be4a:	add    al,BYTE PTR [rax]
   14000be4c:	(bad)  
   14000be4d:	xor    al,BYTE PTR [rdx]
   14000be4f:	push   rax
   14000be50:	add    DWORD PTR [rcx+rax*1],eax
   14000be53:	add    BYTE PTR [rdx+rax*2],al
   14000be56:	add    BYTE PTR [rax],al
   14000be58:	add    DWORD PTR [rsi],eax
   14000be5a:	add    al,BYTE PTR [rax]
   14000be5c:	(bad)  
   14000be5d:	xor    al,BYTE PTR [rdx]
   14000be5f:	xor    BYTE PTR [rcx],ah
   14000be61:	add    eax,0x74050002
   14000be66:	(bad)  
   14000be67:	add    BYTE PTR [rax-0x59ffff7c],dl
   14000be6d:	test   BYTE PTR [rax],al
   14000be6f:	add    BYTE PTR [rax-0x42],bl
   14000be72:	add    BYTE PTR [rax],al
   14000be74:	and    DWORD PTR [rax],eax
   14000be76:	add    BYTE PTR [rax],al
   14000be78:	nop
   14000be79:	test   BYTE PTR [rax],al
   14000be7b:	add    BYTE PTR [rsi+0x58000084],ah
   14000be81:	mov    esi,0xa010000
   14000be86:	add    al,0x0
   14000be88:	or     dh,BYTE PTR [rax+rcx*1]
   14000be8b:	add    BYTE PTR [rdx],cl
   14000be8d:	push   rdx
   14000be8e:	(bad)  
   14000be8f:	jo     0x14000be92
   14000be91:	(bad)  
   14000be92:	add    al,BYTE PTR [rax]
   14000be94:	(bad)  
   14000be95:	xor    al,BYTE PTR [rdx]
   14000be97:	xor    BYTE PTR [rcx],al
   14000be99:	(bad)  
   14000be9a:	add    al,BYTE PTR [rax]
   14000be9c:	(bad)  
   14000be9d:	xor    al,BYTE PTR [rdx]
   14000be9f:	xor    BYTE PTR [rcx],dl
   14000bea1:	sbb    BYTE PTR [rax+rax*1],al
   14000bea4:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000bea7:	add    BYTE PTR [rdx],cl
   14000bea9:	push   rdx
   14000beaa:	(bad)  
   14000beab:	jo     0x14000bee3
   14000bead:	jae    0x14000beaf
   14000beaf:	add    BYTE PTR [rax-0x6b],bl
   14000beb2:	add    BYTE PTR [rax],al
   14000beb4:	(bad)  
   14000beb5:	(bad)  
   14000beb6:	(bad)  
   14000beb7:	jmp    QWORD PTR [rax]
   14000beb9:	jg     0x14000bebb
   14000bebb:	add    BYTE PTR [rax],al
   14000bebd:	add    BYTE PTR [rax],al
   14000bebf:	add    BYTE PTR [rax+0x2e],al
   14000bec2:	add    BYTE PTR [rax],al
   14000bec4:	(bad)  
   14000bec5:	(bad)  
   14000bec6:	(bad)  
   14000bec7:	jmp    FWORD PTR [rbp+0x2e]
   14000beca:	add    BYTE PTR [rax],al
   14000becc:	add    BYTE PTR [rax],al
   14000bece:	add    BYTE PTR [rax],al
   14000bed0:	mov    edi,0xff00002e
   14000bed5:	(bad)  
   14000bed6:	(bad)  
   14000bed7:	inc    DWORD PTR [rcx]
   14000bed9:	or     al,BYTE PTR [rax+rax*1]
   14000bedc:	or     dh,BYTE PTR [rsi+rax*1]
   14000bedf:	add    BYTE PTR [rdx],cl
   14000bee1:	xor    al,BYTE PTR [rsi]
   14000bee3:	jo     0x14000bee6
   14000bee5:	(bad)  
   14000bee6:	add    al,BYTE PTR [rax]
   14000bee8:	(bad)  
   14000bee9:	push   rdx
   14000beea:	add    dh,BYTE PTR [rax]
   14000beec:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41dbef8
   14000bef2:	or     al,BYTE PTR [rax]
   14000bef4:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000bef7:	add    BYTE PTR [rdx],cl
   14000bef9:	push   rdx
   14000befa:	(bad)  
   14000befb:	jo     0x14000bf33
   14000befd:	jae    0x14000beff
   14000beff:	add    BYTE PTR [rax-0xffff6b],al
   14000bf05:	(bad)  
   14000bf06:	(bad)  
   14000bf07:	call   QWORD PTR [rax]
   14000bf09:	jge    0x14000bf0b
   14000bf0b:	add    BYTE PTR [rax],al
   14000bf0d:	add    BYTE PTR [rax],al
   14000bf0f:	add    BYTE PTR [rip+0x7d],bh        # 0x14000bf92
   14000bf15:	add    BYTE PTR [rax],al
   14000bf17:	add    BYTE PTR [rax],ah
   14000bf19:	sub    BYTE PTR [rax],al
   14000bf1b:	add    bh,bh
   14000bf1d:	(bad)  
   14000bf1e:	(bad)  
   14000bf1f:	jmp    QWORD PTR [rdi+0x28]
   14000bf22:	add    BYTE PTR [rax],al
   14000bf24:	add    BYTE PTR [rax],al
   14000bf26:	add    BYTE PTR [rax],al
   14000bf28:	jne    0x14000bf52
   14000bf2a:	add    BYTE PTR [rax],al
   14000bf2c:	add    DWORD PTR [rax],eax
   14000bf2e:	add    BYTE PTR [rax],al
   14000bf30:	ret    
   14000bf31:	sub    BYTE PTR [rax],al
   14000bf33:	add    bh,bh
   14000bf35:	(bad)  
   14000bf36:	(bad)  
   14000bf37:	inc    DWORD PTR [rcx]
   14000bf39:	(bad)  
   14000bf3a:	add    al,BYTE PTR [rax]
   14000bf3c:	(bad)  
   14000bf3d:	xor    al,BYTE PTR [rdx]
   14000bf3f:	push   rax
   14000bf40:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41dbf4c
   14000bf46:	or     eax,DWORD PTR [rax]
   14000bf48:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000bf4b:	add    BYTE PTR [rdx],cl
   14000bf4d:	push   rdx
   14000bf4e:	(bad)  
   14000bf4f:	jo     0x14000bf87
   14000bf51:	jae    0x14000bf53
   14000bf53:	add    BYTE PTR [rax-0xffff6b],ch
   14000bf59:	(bad)  
   14000bf5a:	(bad)  
   14000bf5b:	call   QWORD PTR [rax+0x7d]
   14000bf5e:	add    BYTE PTR [rax],al
   14000bf60:	add    BYTE PTR [rax],al
   14000bf62:	add    BYTE PTR [rax],al
   14000bf64:	jge    0x14000bfe3
   14000bf66:	add    BYTE PTR [rax],al
   14000bf68:	loopne 0x14000bf92
   14000bf6a:	add    BYTE PTR [rax],al
   14000bf6c:	(bad)  
   14000bf6d:	(bad)  
   14000bf6e:	(bad)  
   14000bf6f:	jmp    QWORD PTR [rdi]
   14000bf71:	sub    DWORD PTR [rax],eax
   14000bf73:	add    BYTE PTR [rax],al
   14000bf75:	add    BYTE PTR [rax],al
   14000bf77:	add    BYTE PTR [rip+0x1000029],dh        # 0x14100bfa6
   14000bf7d:	add    BYTE PTR [rax],al
   14000bf7f:	add    BYTE PTR [rbx-0xffffd7],al
   14000bf85:	(bad)  
   14000bf86:	(bad)  
   14000bf87:	inc    DWORD PTR [rcx]
   14000bf89:	(bad)  
   14000bf8a:	add    al,BYTE PTR [rax]
   14000bf8c:	(bad)  
   14000bf8d:	xor    al,BYTE PTR [rdx]
   14000bf8f:	push   rax
   14000bf90:	adc    DWORD PTR [rdi],ecx
   14000bf92:	add    al,BYTE PTR [rax]
   14000bf94:	(bad)  
   14000bf95:	push   rdx
   14000bf96:	add    dh,BYTE PTR [rax]
   14000bf98:	ss jae 0x14000bf9b
   14000bf9b:	add    al,dl
   14000bf9d:	xchg   ebp,eax
   14000bf9e:	add    BYTE PTR [rax],al
   14000bfa0:	(bad)  
   14000bfa1:	(bad)  
   14000bfa2:	(bad)  
   14000bfa3:	push   QWORD PTR [rax-0x7fffff80]
   14000bfa9:	pop    rbx
   14000bfaa:	add    BYTE PTR [rax],al
   14000bfac:	(bad)  
   14000bfad:	(bad)  
   14000bfae:	(bad)  
   14000bfaf:	jmp    QWORD PTR [rcx+0x5b]
   14000bfb5:	add    BYTE PTR [rax],al
   14000bfb7:	add    bl,al
   14000bfb9:	pop    rbx
   14000bfba:	add    BYTE PTR [rax],al
   14000bfbc:	(bad)  
   14000bfbd:	(bad)  
   14000bfbe:	(bad)  
   14000bfbf:	call   QWORD PTR [rcx]
   14000bfc1:	(bad)  
   14000bfc2:	add    eax,0x19341e00
   14000bfc7:	add    BYTE PTR [rsi],cl
   14000bfc9:	add    DWORD PTR [rsi],edx
   14000bfcb:	add    BYTE PTR [rdx],al
   14000bfcd:	push   rax
   14000bfce:	add    BYTE PTR [rax],al
   14000bfd0:	ss jae 0x14000bfd3
   14000bfd3:	add    al,bh
   14000bfd5:	xchg   ebp,eax
   14000bfd6:	add    BYTE PTR [rax],al
   14000bfd8:	(bad)  
   14000bfd9:	(bad)  
   14000bfda:	(bad)  
   14000bfdb:	call   rax
   14000bfdd:	add    DWORD PTR [rax],0x0
   14000bfe3:	add    BYTE PTR [rbx],al
   14000bfe5:	(bad)  
   14000bfe6:	add    BYTE PTR [rax],al
   14000bfe8:	add    BYTE PTR [rax],al
   14000bfea:	add    BYTE PTR [rax],al
   14000bfec:	jb     0x1a8b0bff2
   14000bff2:	add    BYTE PTR [rax],al
   14000bff4:	(bad)  
   14000bff5:	(bad)  
   14000bff6:	(bad)  
   14000bff7:	(bad)  
   14000bff8:	out    dx,eax
   14000bff9:	push   0x0
   14000bffe:	add    BYTE PTR [rax],al
   14000c000:	add    al,0x69
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    DWORD PTR [rax],eax
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	rex imul eax,DWORD PTR [rax],0x0
   14000c00f:	add    BYTE PTR [rbx+0x69],cl
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	add    al,BYTE PTR [rax]
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	jg     0x14000c083
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	mov    ecx,0xff000069
   14000c025:	(bad)  
   14000c026:	(bad)  
   14000c027:	inc    DWORD PTR [rcx]
   14000c029:	(bad)  
   14000c02a:	add    al,BYTE PTR [rax]
   14000c02c:	(bad)  
   14000c02d:	xor    al,BYTE PTR [rdx]
   14000c02f:	push   rax
   14000c030:	adc    DWORD PTR [rbx],edx
   14000c032:	add    al,BYTE PTR [rax]
   14000c034:	or     dl,BYTE PTR [rdx+0x6]
   14000c037:	xor    BYTE PTR [rsi],dh
   14000c039:	jae    0x14000c03b
   14000c03b:	add    BYTE PTR [rax],ah
   14000c03d:	xchg   esi,eax
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	(bad)  
   14000c041:	(bad)  
   14000c042:	(bad)  
   14000c043:	call   QWORD PTR [rax-0x5fffff83]
   14000c049:	sub    DWORD PTR [rax],eax
   14000c04b:	add    bh,bh
   14000c04d:	(bad)  
   14000c04e:	(bad)  
   14000c04f:	(bad)  
   14000c050:	fsubr  QWORD PTR [rcx]
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	add    BYTE PTR [rax],al
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	and    ch,BYTE PTR [rdx]
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	(bad)  
   14000c05d:	(bad)  
   14000c05e:	(bad)  
   14000c05f:	inc    DWORD PTR [rcx]
   14000c061:	(bad)  
   14000c062:	add    al,BYTE PTR [rax]
   14000c064:	(bad)  
   14000c065:	xor    al,BYTE PTR [rdx]
   14000c067:	push   rax
   14000c068:	add    DWORD PTR [rdx],ecx
   14000c06a:	add    al,0x0
   14000c06c:	or     dh,BYTE PTR [rsi+rax*1]
   14000c06f:	add    BYTE PTR [rdx],cl
   14000c071:	xor    al,BYTE PTR [rsi]
   14000c073:	jo     0x14000c076
   14000c075:	(bad)  
   14000c076:	add    al,BYTE PTR [rax]
   14000c078:	(bad)  
   14000c079:	xor    al,BYTE PTR [rdx]
   14000c07b:	xor    BYTE PTR [rcx],dl
   14000c07d:	sbb    BYTE PTR [rax+rax*1],al
   14000c080:	sbb    BYTE PTR [rax+rcx*1],dh
   14000c083:	add    BYTE PTR [rdx],cl
   14000c085:	push   rdx
   14000c086:	(bad)  
   14000c087:	jo     0x14000c0bf
   14000c089:	jae    0x14000c08b
   14000c08b:	add    BYTE PTR [rax-0x6a],cl
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	(bad)  
   14000c091:	(bad)  
   14000c092:	(bad)  
   14000c093:	jmp    QWORD PTR [rax]
   14000c095:	jnp    0x14000c097
   14000c097:	add    BYTE PTR [rax+0x18],al
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	(bad)  
   14000c09d:	(bad)  
   14000c09e:	(bad)  
   14000c09f:	jmp    QWORD PTR [rbx+0x18]
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	add    BYTE PTR [rax],al
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	leave  
   14000c0a9:	sbb    BYTE PTR [rax],al
   14000c0ab:	add    bh,bh
   14000c0ad:	(bad)  
   14000c0ae:	(bad)  
   14000c0af:	inc    DWORD PTR [rcx]
   14000c0b1:	(bad)  
   14000c0b2:	add    al,BYTE PTR [rax]
   14000c0b4:	(bad)  
   14000c0b5:	xor    al,BYTE PTR [rdx]
   14000c0b7:	push   rax
   14000c0b8:	add    DWORD PTR [rcx+rax*1],eax
   14000c0bb:	add    BYTE PTR [rdx+riz*2],al
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	add    DWORD PTR [rdi],ecx
   14000c0c2:	add    al,0x0
   14000c0c4:	sysenter 
   14000c0c6:	(bad)  
   14000c0c7:	add    BYTE PTR [rdi],cl
   14000c0c9:	xor    cl,BYTE PTR [rbx]
   14000c0cb:	jo     0x14000c0ee
   14000c0cd:	add    eax,0x64050002
   14000c0d2:	(bad)  
   14000c0d3:	add    BYTE PTR [rax-0x50ffffec],ah
   14000c0d9:	adc    al,0x0
   14000c0db:	add    al,al
   14000c0dd:	rol    BYTE PTR [rax],0x0
   14000c0e0:	and    DWORD PTR [rax],eax
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	movabs al,ds:0xc0000014af000014
   14000c0ed:	rol    BYTE PTR [rax],0x0
   14000c0f0:	add    DWORD PTR [rdi],ecx
   14000c0f2:	add    al,0x0
   14000c0f4:	sysenter 
   14000c0f6:	(bad)  
   14000c0f7:	add    BYTE PTR [rdi],cl
   14000c0f9:	xor    cl,BYTE PTR [rbx]
   14000c0fb:	jo     0x14000c11e
   14000c0fd:	add    eax,0x64050002
   14000c102:	(bad)  
   14000c103:	add    al,ah
   14000c105:	adc    eax,DWORD PTR [rax]
   14000c107:	add    bh,ch
   14000c109:	adc    eax,DWORD PTR [rax]
   14000c10b:	add    al,dh
   14000c10d:	rol    BYTE PTR [rax],0x0
   14000c110:	and    DWORD PTR [rax],eax
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	loopne 0x14000c129
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	out    dx,eax
   14000c119:	adc    eax,DWORD PTR [rax]
   14000c11b:	add    al,dh
   14000c11d:	rol    BYTE PTR [rax],0x0
   14000c120:	adc    DWORD PTR [rax],ebx
   14000c122:	add    al,0x0
   14000c124:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c127:	add    BYTE PTR [rdx],cl
   14000c129:	push   rdx
   14000c12a:	(bad)  
   14000c12b:	jo     0x14000c163
   14000c12d:	jae    0x14000c12f
   14000c12f:	add    BYTE PTR [rax-0x6a],dh
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	(bad)  
   14000c135:	(bad)  
   14000c136:	(bad)  
   14000c137:	inc    eax
   14000c139:	jge    0x14000c13b
   14000c13b:	add    BYTE PTR [rax],al
   14000c13d:	add    BYTE PTR [rax],al
   14000c13f:	add    dl,ch
   14000c141:	jge    0x14000c143
   14000c143:	add    BYTE PTR [rax],al
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rax],dh
   14000c149:	sub    al,BYTE PTR [rax]
   14000c14b:	add    bh,bh
   14000c14d:	(bad)  
   14000c14e:	(bad)  
   14000c14f:	push   QWORD PTR [rcx+0x2a]
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	add    BYTE PTR [rax],al
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	jg     0x14000c184
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	add    DWORD PTR [rax],eax
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	ret    
   14000c161:	sub    al,BYTE PTR [rax]
   14000c163:	add    bh,bh
   14000c165:	(bad)  
   14000c166:	(bad)  
   14000c167:	inc    DWORD PTR [rcx]
   14000c169:	(bad)  
   14000c16a:	add    al,BYTE PTR [rax]
   14000c16c:	(bad)  
   14000c16d:	xor    al,BYTE PTR [rdx]
   14000c16f:	push   rax
   14000c170:	adc    DWORD PTR [rax],ebx
   14000c172:	add    al,0x0
   14000c174:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c177:	add    BYTE PTR [rdx],cl
   14000c179:	push   rdx
   14000c17a:	(bad)  
   14000c17b:	jo     0x14000c1b3
   14000c17d:	jae    0x14000c17f
   14000c17f:	add    BYTE PTR [rax-0xffff6a],bl
   14000c185:	(bad)  
   14000c186:	(bad)  
   14000c187:	inc    DWORD PTR [rax]
   14000c189:	jle    0x14000c18b
   14000c18b:	add    BYTE PTR [rax],al
   14000c18d:	add    BYTE PTR [rax],al
   14000c18f:	add    BYTE PTR [rdx],ch
   14000c191:	jle    0x14000c193
   14000c193:	add    BYTE PTR [rax],al
   14000c195:	add    BYTE PTR [rax],al
   14000c197:	add    al,ah
   14000c199:	sub    al,BYTE PTR [rax]
   14000c19b:	add    bh,bh
   14000c19d:	(bad)  
   14000c19e:	(bad)  
   14000c19f:	jmp    QWORD PTR [rcx]
   14000c1a1:	sub    eax,DWORD PTR [rax]
   14000c1a3:	add    BYTE PTR [rax],al
   14000c1a5:	add    BYTE PTR [rax],al
   14000c1a7:	add    BYTE PTR [rdi],ch
   14000c1a9:	sub    eax,DWORD PTR [rax]
   14000c1ab:	add    BYTE PTR [rcx],al
   14000c1ad:	add    BYTE PTR [rax],al
   14000c1af:	add    BYTE PTR [rbx+0x2b],dh
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	(bad)  
   14000c1b5:	(bad)  
   14000c1b6:	(bad)  
   14000c1b7:	inc    DWORD PTR [rcx]
   14000c1b9:	(bad)  
   14000c1ba:	add    al,BYTE PTR [rax]
   14000c1bc:	(bad)  
   14000c1bd:	xor    al,BYTE PTR [rdx]
   14000c1bf:	push   rax
   14000c1c0:	add    DWORD PTR [rsi],eax
   14000c1c2:	add    al,BYTE PTR [rax]
   14000c1c4:	(bad)  
   14000c1c5:	xor    al,BYTE PTR [rdx]
   14000c1c7:	xor    BYTE PTR [rcx],dl
   14000c1c9:	adc    al,0x4
   14000c1cb:	add    BYTE PTR [rsp+rsi*1],dl
   14000c1ce:	or     BYTE PTR [rax],al
   14000c1d0:	(bad)  
   14000c1d1:	push   rdx
   14000c1d2:	add    dh,BYTE PTR [rax+0x36]
   14000c1d5:	jae    0x14000c1d7
   14000c1d7:	add    al,al
   14000c1d9:	xchg   esi,eax
   14000c1da:	add    BYTE PTR [rax],al
   14000c1dc:	(bad)  
   14000c1dd:	(bad)  
   14000c1de:	(bad)  
   14000c1df:	inc    eax
   14000c1e1:	add    BYTE PTR [rax],0x0
   14000c1e4:	add    BYTE PTR [rax],al
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	int3   
   14000c1e9:	add    BYTE PTR [rax],0x0
   14000c1ec:	add    DWORD PTR [rax],eax
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	test   BYTE PTR [rax+0x0],0x0
   14000c1f7:	add    al,dh
   14000c1f9:	pop    rbx
   14000c1fa:	add    BYTE PTR [rax],al
   14000c1fc:	(bad)  
   14000c1fd:	(bad)  
   14000c1fe:	(bad)  
   14000c1ff:	jmp    QWORD PTR [rcx]
   14000c201:	pop    rsp
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	add    BYTE PTR [rax],al
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	cmp    al,0x5c
   14000c20a:	add    BYTE PTR [rax],al
   14000c20c:	add    DWORD PTR [rax],eax
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	push   rcx
   14000c211:	pop    rsp
   14000c212:	add    BYTE PTR [rax],al
   14000c214:	add    al,BYTE PTR [rax]
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	cwde   
   14000c219:	pop    rsp
   14000c21a:	add    BYTE PTR [rax],al
   14000c21c:	add    BYTE PTR [rax],al
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	pushf  
   14000c221:	pop    rsp
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	(bad)  
   14000c225:	(bad)  
   14000c226:	(bad)  
   14000c227:	inc    DWORD PTR [rcx]
   14000c229:	(bad)  
   14000c22a:	add    al,BYTE PTR [rax]
   14000c22c:	(bad)  
   14000c22d:	xor    al,BYTE PTR [rdx]
   14000c22f:	push   rax
   14000c230:	adc    DWORD PTR [rbx],edx
   14000c232:	add    al,BYTE PTR [rax]
   14000c234:	or     esi,edx
   14000c236:	add    al,0x30
   14000c238:	ss jae 0x14000c23b
   14000c23b:	add    al,ch
   14000c23d:	xchg   esi,eax
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	(bad)  
   14000c241:	(bad)  
   14000c242:	(bad)  
   14000c243:	jmp    QWORD PTR [rax]
   14000c245:	(bad)  
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	add    BYTE PTR [rax],al
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	push   rax
   14000c24d:	(bad)  
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	loopne 0x14000c2bb
   14000c252:	add    BYTE PTR [rax],al
   14000c254:	(bad)  
   14000c255:	(bad)  
   14000c256:	(bad)  
   14000c257:	call   QWORD PTR [rdx+rbp*2]
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	add    BYTE PTR [rax],al
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	push   rbx
   14000c261:	push   0x0
   14000c263:	add    BYTE PTR [rcx],al
   14000c265:	add    BYTE PTR [rax],al
   14000c267:	add    BYTE PTR [rbx+0x6a],ah
   14000c26a:	add    BYTE PTR [rax],al
   14000c26c:	add    BYTE PTR [rax],al
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	movabs eax,ds:0x1ffffffff00006a
   14000c279:	(bad)  
   14000c27a:	add    al,BYTE PTR [rax]
   14000c27c:	(bad)  
   14000c27d:	xor    al,BYTE PTR [rdx]
   14000c27f:	push   rax
   14000c280:	adc    DWORD PTR [rbx],edx
   14000c282:	add    al,BYTE PTR [rax]
   14000c284:	or     dl,BYTE PTR [rdx+0x6]
   14000c287:	xor    BYTE PTR [rsi],dh
   14000c289:	jae    0x14000c28b
   14000c28b:	add    BYTE PTR [rax],dl
   14000c28d:	xchg   edi,eax
   14000c28e:	add    BYTE PTR [rax],al
   14000c290:	(bad)  
   14000c291:	(bad)  
   14000c292:	(bad)  
   14000c293:	inc    DWORD PTR [rax+0x7e]
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	nop
   14000c299:	sub    eax,DWORD PTR [rax]
   14000c29b:	add    bh,bh
   14000c29d:	(bad)  
   14000c29e:	(bad)  
   14000c29f:	dec    ecx
   14000c2a1:	sub    eax,DWORD PTR [rax]
   14000c2a3:	add    BYTE PTR [rax],al
   14000c2a5:	add    BYTE PTR [rax],al
   14000c2a7:	add    BYTE PTR [rdi],cl
   14000c2a9:	sub    al,0x0
   14000c2ab:	add    bh,bh
   14000c2ad:	(bad)  
   14000c2ae:	(bad)  
   14000c2af:	inc    DWORD PTR [rcx]
   14000c2b1:	(bad)  
   14000c2b2:	add    al,BYTE PTR [rax]
   14000c2b4:	(bad)  
   14000c2b5:	xor    al,BYTE PTR [rdx]
   14000c2b7:	push   rax
   14000c2b8:	add    DWORD PTR [rdx],ecx
   14000c2ba:	add    al,0x0
   14000c2bc:	or     dh,BYTE PTR [rsi+rax*1]
   14000c2bf:	add    BYTE PTR [rdx],cl
   14000c2c1:	xor    al,BYTE PTR [rsi]
   14000c2c3:	jo     0x14000c2c6
   14000c2c5:	(bad)  
   14000c2c6:	add    al,BYTE PTR [rax]
   14000c2c8:	(bad)  
   14000c2c9:	xor    al,BYTE PTR [rdx]
   14000c2cb:	xor    BYTE PTR [rcx],dl
   14000c2cd:	adc    eax,DWORD PTR [rdx]
   14000c2cf:	add    BYTE PTR [rdx],cl
   14000c2d1:	push   rdx
   14000c2d2:	(bad)  
   14000c2d3:	xor    BYTE PTR [rsi],dh
   14000c2d5:	jae    0x14000c2d7
   14000c2d7:	add    BYTE PTR [rax],bh
   14000c2d9:	xchg   edi,eax
   14000c2da:	add    BYTE PTR [rax],al
   14000c2dc:	(bad)  
   14000c2dd:	(bad)  
   14000c2de:	(bad)  
   14000c2df:	inc    DWORD PTR [rax+0x7a]
   14000c2e2:	add    BYTE PTR [rax],al
   14000c2e4:	add    BYTE PTR [rax],al
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	lock adc BYTE PTR [rax],al
   14000c2eb:	add    bh,bh
   14000c2ed:	(bad)  
   14000c2ee:	(bad)  
   14000c2ef:	jmp    FWORD PTR [rcx+rdx*1]
   14000c2f2:	add    BYTE PTR [rax],al
   14000c2f4:	add    BYTE PTR [rax],al
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	xor    eax,0xff000011
   14000c2fd:	(bad)  
   14000c2fe:	(bad)  
   14000c2ff:	inc    DWORD PTR [rcx]
   14000c301:	(bad)  
   14000c302:	add    al,BYTE PTR [rax]
   14000c304:	(bad)  
   14000c305:	xor    al,BYTE PTR [rdx]
   14000c307:	xor    BYTE PTR [rcx],ah
   14000c309:	add    eax,0x74050002
   14000c30e:	(bad)  
   14000c30f:	add    al,dl
   14000c311:	test   BYTE PTR [rax],al
   14000c313:	add    dh,ah
   14000c315:	test   BYTE PTR [rax],al
   14000c317:	add    BYTE PTR [rax],al
   14000c319:	ret    
   14000c31a:	add    BYTE PTR [rax],al
   14000c31c:	and    DWORD PTR [rax],eax
   14000c31e:	add    BYTE PTR [rax],al
   14000c320:	rol    BYTE PTR [rax+rax*1+0x84e600],1
   14000c327:	add    BYTE PTR [rax],al
   14000c329:	ret    
   14000c32a:	add    BYTE PTR [rax],al
   14000c32c:	adc    DWORD PTR [rax],ebx
   14000c32e:	add    al,0x0
   14000c330:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c333:	add    BYTE PTR [rdx],cl
   14000c335:	push   rdx
   14000c336:	(bad)  
   14000c337:	jo     0x14000c36f
   14000c339:	jae    0x14000c33b
   14000c33b:	add    BYTE PTR [rax-0x69],ah
   14000c33e:	add    BYTE PTR [rax],al
   14000c340:	(bad)  
   14000c341:	(bad)  
   14000c342:	(bad)  
   14000c343:	push   QWORD PTR [rax+0x7e]
   14000c346:	add    BYTE PTR [rax],al
   14000c348:	add    BYTE PTR [rax],al
   14000c34a:	add    BYTE PTR [rax],al
   14000c34c:	(bad)  
   14000c34d:	jle    0x14000c34f
   14000c34f:	add    BYTE PTR [rax],ah
   14000c351:	sub    al,0x0
   14000c353:	add    bh,bh
   14000c355:	(bad)  
   14000c356:	(bad)  
   14000c357:	jmp    QWORD PTR [rcx+0x2c]
   14000c35a:	add    BYTE PTR [rax],al
   14000c35c:	add    BYTE PTR [rax],al
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	outs   dx,DWORD PTR ds:[rsi]
   14000c361:	sub    al,0x0
   14000c363:	add    BYTE PTR [rcx],al
   14000c365:	add    BYTE PTR [rax],al
   14000c367:	add    BYTE PTR [rbx-0xffffd4],dh
   14000c36d:	(bad)  
   14000c36e:	(bad)  
   14000c36f:	inc    DWORD PTR [rcx]
   14000c371:	(bad)  
   14000c372:	add    al,BYTE PTR [rax]
   14000c374:	(bad)  
   14000c375:	xor    al,BYTE PTR [rdx]
   14000c377:	push   rax
   14000c378:	adc    DWORD PTR [rax],ebx
   14000c37a:	add    al,0x0
   14000c37c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c37f:	add    BYTE PTR [rdx],cl
   14000c381:	push   rdx
   14000c382:	(bad)  
   14000c383:	jo     0x14000c3bb
   14000c385:	jae    0x14000c387
   14000c387:	add    BYTE PTR [rax-0xffff69],cl
   14000c38d:	(bad)  
   14000c38e:	(bad)  
   14000c38f:	push   QWORD PTR [rax+0x7e]
   14000c395:	add    BYTE PTR [rax],al
   14000c397:	add    dl,bl
   14000c399:	jle    0x14000c39b
   14000c39b:	add    BYTE PTR [rax],al
   14000c39d:	add    BYTE PTR [rax],al
   14000c39f:	add    al,dl
   14000c3a1:	sub    al,0x0
   14000c3a3:	add    bh,bh
   14000c3a5:	(bad)  
   14000c3a6:	(bad)  
   14000c3a7:	call   QWORD PTR [rcx]
   14000c3a9:	sub    eax,0x0
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	(bad)  
   14000c3b1:	sub    eax,0x10000
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	movsxd ebp,DWORD PTR [rip+0xffffffffffff0000]        # 0x13fffc3be
   14000c3be:	(bad)  
   14000c3bf:	inc    DWORD PTR [rcx]
   14000c3c1:	(bad)  
   14000c3c2:	add    al,BYTE PTR [rax]
   14000c3c4:	(bad)  
   14000c3c5:	xor    al,BYTE PTR [rdx]
   14000c3c7:	push   rax
   14000c3c8:	add    DWORD PTR [rsi],eax
   14000c3ca:	add    al,BYTE PTR [rax]
   14000c3cc:	(bad)  
   14000c3cd:	xor    al,BYTE PTR [rdx]
   14000c3cf:	xor    BYTE PTR [rcx],dl
   14000c3d1:	adc    al,0x4
   14000c3d3:	add    BYTE PTR [rsp+rsi*1],dl
   14000c3d6:	or     BYTE PTR [rax],al
   14000c3d8:	(bad)  
   14000c3d9:	push   rdx
   14000c3da:	add    dh,BYTE PTR [rax+0x36]
   14000c3dd:	jae    0x14000c3df
   14000c3df:	add    BYTE PTR [rax-0xffff69],dh
   14000c3e5:	(bad)  
   14000c3e6:	(bad)  
   14000c3e7:	call   QWORD PTR [rax]
   14000c3e9:	add    DWORD PTR [rax],0x0
   14000c3ef:	add    BYTE PTR [rcx+rax*4],bl
   14000c3f2:	add    BYTE PTR [rax],al
   14000c3f4:	add    DWORD PTR [rax],eax
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	rex.RX add DWORD PTR [rax],0x0
   14000c3ff:	add    al,dl
   14000c401:	pop    rsp
   14000c402:	add    BYTE PTR [rax],al
   14000c404:	(bad)  
   14000c405:	(bad)  
   14000c406:	(bad)  
   14000c407:	inc    DWORD PTR [rcx]
   14000c409:	pop    rbp
   14000c40a:	add    BYTE PTR [rax],al
   14000c40c:	add    BYTE PTR [rax],al
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	sbb    al,0x5d
   14000c412:	add    BYTE PTR [rax],al
   14000c414:	add    DWORD PTR [rax],eax
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	xor    DWORD PTR [rbp+0x0],ebx
   14000c41b:	add    BYTE PTR [rdx],al
   14000c41d:	add    BYTE PTR [rax],al
   14000c41f:	add    BYTE PTR [rax+0x5d],bh
   14000c422:	add    BYTE PTR [rax],al
   14000c424:	add    BYTE PTR [rax],al
   14000c426:	add    BYTE PTR [rax],al
   14000c428:	jl     0x14000c487
   14000c42a:	add    BYTE PTR [rax],al
   14000c42c:	(bad)  
   14000c42d:	(bad)  
   14000c42e:	(bad)  
   14000c42f:	inc    DWORD PTR [rcx]
   14000c431:	(bad)  
   14000c432:	add    al,BYTE PTR [rax]
   14000c434:	(bad)  
   14000c435:	xor    al,BYTE PTR [rdx]
   14000c437:	push   rax
   14000c438:	adc    DWORD PTR [rbx],edx
   14000c43a:	add    al,BYTE PTR [rax]
   14000c43c:	or     esi,edx
   14000c43e:	add    al,0x30
   14000c440:	ss jae 0x14000c443
   14000c443:	add    al,bl
   14000c445:	xchg   edi,eax
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	(bad)  
   14000c449:	(bad)  
   14000c44a:	(bad)  
   14000c44b:	jmp    QWORD PTR [rax-0x7e]
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	add    BYTE PTR [rax],al
   14000c452:	add    BYTE PTR [rax],al
   14000c454:	nop
   14000c455:	(bad)  
   14000c456:	add    BYTE PTR [rax],al
   14000c458:	shr    BYTE PTR [rdx+0x0],0x0
   14000c45c:	(bad)  
   14000c45d:	(bad)  
   14000c45e:	(bad)  
   14000c45f:	push   rsp
   14000c461:	push   0x0
   14000c463:	add    BYTE PTR [rax],al
   14000c465:	add    BYTE PTR [rax],al
   14000c467:	add    BYTE PTR [rbx],dh
   14000c469:	imul   eax,DWORD PTR [rax],0x0
   14000c46c:	add    DWORD PTR [rax],eax
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	rex.XB imul eax,DWORD PTR [r8],0x0
   14000c474:	add    BYTE PTR [rax],al
   14000c476:	add    BYTE PTR [rax],al
   14000c478:	sub    DWORD PTR [rbx+0x0],0xffffff00
   14000c47f:	inc    DWORD PTR [rcx]
   14000c481:	(bad)  
   14000c482:	add    al,BYTE PTR [rax]
   14000c484:	(bad)  
   14000c485:	xor    al,BYTE PTR [rdx]
   14000c487:	push   rax
   14000c488:	adc    DWORD PTR [rbx],edx
   14000c48a:	add    al,BYTE PTR [rax]
   14000c48c:	or     dl,BYTE PTR [rdx+0x6]
   14000c48f:	xor    BYTE PTR [rsi],dh
   14000c491:	jae    0x14000c493
   14000c493:	add    BYTE PTR [rax],al
   14000c495:	cwde   
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	(bad)  
   14000c499:	(bad)  
   14000c49a:	(bad)  
   14000c49b:	push   rax
   14000c49d:	jle    0x14000c49f
   14000c49f:	add    BYTE PTR [rax-0xffffd3],al
   14000c4a5:	(bad)  
   14000c4a6:	(bad)  
   14000c4a7:	(bad)  
   14000c4a8:	mov    ecx,0x2d
   14000c4ad:	add    BYTE PTR [rax],al
   14000c4af:	add    bh,bh
   14000c4b1:	sub    eax,0xffff0000
   14000c4b6:	(bad)  
   14000c4b7:	inc    DWORD PTR [rcx]
   14000c4b9:	(bad)  
   14000c4ba:	add    al,BYTE PTR [rax]
   14000c4bc:	(bad)  
   14000c4bd:	xor    al,BYTE PTR [rdx]
   14000c4bf:	push   rax
   14000c4c0:	add    DWORD PTR [rdx],ecx
   14000c4c2:	add    al,0x0
   14000c4c4:	or     dh,BYTE PTR [rsi+rax*1]
   14000c4c7:	add    BYTE PTR [rdx],cl
   14000c4c9:	xor    al,BYTE PTR [rsi]
   14000c4cb:	jo     0x14000c4ce
   14000c4cd:	(bad)  
   14000c4ce:	add    al,BYTE PTR [rax]
   14000c4d0:	(bad)  
   14000c4d1:	xor    al,BYTE PTR [rdx]
   14000c4d3:	xor    BYTE PTR [rcx],dl
   14000c4d5:	adc    eax,DWORD PTR [rdx]
   14000c4d7:	add    BYTE PTR [rdx],cl
   14000c4d9:	push   rdx
   14000c4da:	(bad)  
   14000c4db:	xor    BYTE PTR [rsi],dh
   14000c4dd:	jae    0x14000c4df
   14000c4df:	add    BYTE PTR [rax],ch
   14000c4e1:	cwde   
   14000c4e2:	add    BYTE PTR [rax],al
   14000c4e4:	(bad)  
   14000c4e5:	(bad)  
   14000c4e6:	(bad)  
   14000c4e7:	inc    DWORD PTR [rax+0x7a]
   14000c4ed:	add    BYTE PTR [rax],al
   14000c4ef:	add    BYTE PTR [rax-0xffffef],dh
   14000c4f5:	(bad)  
   14000c4f6:	(bad)  
   14000c4f7:	(bad)  
   14000c4f8:	in     al,dx
   14000c4f9:	adc    DWORD PTR [rax],eax
   14000c4fb:	add    BYTE PTR [rax],al
   14000c4fd:	add    BYTE PTR [rax],al
   14000c4ff:	add    ch,dh
   14000c501:	adc    DWORD PTR [rax],eax
   14000c503:	add    bh,bh
   14000c505:	(bad)  
   14000c506:	(bad)  
   14000c507:	inc    DWORD PTR [rcx]
   14000c509:	(bad)  
   14000c50a:	add    al,BYTE PTR [rax]
   14000c50c:	(bad)  
   14000c50d:	xor    al,BYTE PTR [rdx]
   14000c50f:	xor    BYTE PTR [rcx],ah
   14000c511:	add    eax,0x74050002
   14000c516:	(bad)  
   14000c517:	add    BYTE PTR [rax],dl
   14000c519:	test   DWORD PTR [rax],eax
   14000c51b:	add    BYTE PTR [rsi],ah
   14000c51d:	test   DWORD PTR [rax],eax
   14000c51f:	add    BYTE PTR [rax],cl
   14000c521:	(bad)
   14000c524:	and    DWORD PTR [rax],eax
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	adc    BYTE PTR [rbp-0x7ada0000],al
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	or     ch,al
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	add    DWORD PTR [rdi],ecx
   14000c536:	add    al,0x0
   14000c538:	sysenter 
   14000c53a:	(bad)  
   14000c53b:	add    BYTE PTR [rdi],cl
   14000c53d:	xor    cl,BYTE PTR [rbx]
   14000c53f:	jo     0x14000c542
   14000c541:	add    al,0x1
   14000c543:	add    BYTE PTR [rdx+rax*4],al
   14000c546:	add    BYTE PTR [rax],al
   14000c548:	add    DWORD PTR [rsi],eax
   14000c54a:	add    al,BYTE PTR [rax]
   14000c54c:	(bad)  
   14000c54d:	xor    al,BYTE PTR [rdx]
   14000c54f:	xor    BYTE PTR [rcx],al
   14000c551:	(bad)  
   14000c552:	add    al,BYTE PTR [rax]
   14000c554:	(bad)  
   14000c555:	xor    al,BYTE PTR [rdx]
   14000c557:	xor    BYTE PTR [rcx],al
   14000c559:	clts   
   14000c55b:	add    BYTE PTR [rdi],cl
   14000c55d:	push   rsp
   14000c55e:	or     DWORD PTR [rax],eax
   14000c560:	sysenter 
   14000c562:	(bad)  
   14000c563:	add    BYTE PTR [rdi],cl
   14000c565:	xor    cl,BYTE PTR [rbx]
   14000c567:	(bad)  
   14000c568:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405c570
   14000c56e:	(bad)  
   14000c56f:	add    al,al
   14000c571:	and    eax,DWORD PTR [rax]
   14000c573:	add    ah,bh
   14000c575:	and    eax,DWORD PTR [rax]
   14000c577:	add    BYTE PTR [rax-0x3b],bl
   14000c57a:	add    BYTE PTR [rax],al
   14000c57c:	and    DWORD PTR [rax],eax
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	shl    BYTE PTR [rbx],0x0
   14000c583:	add    ah,bh
   14000c585:	and    eax,DWORD PTR [rax]
   14000c587:	add    BYTE PTR [rax-0x3b],bl
   14000c58a:	add    BYTE PTR [rax],al
   14000c58c:	add    DWORD PTR [rdi],ecx
   14000c58e:	(bad)  
   14000c58f:	add    BYTE PTR [rdi],cl
   14000c591:	push   rsp
   14000c592:	or     DWORD PTR [rax],eax
   14000c594:	sysenter 
   14000c596:	(bad)  
   14000c597:	add    BYTE PTR [rdi],cl
   14000c599:	xor    cl,BYTE PTR [rbx]
   14000c59b:	(bad)  
   14000c59c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405c5a4
   14000c5a2:	(bad)  
   14000c5a3:	add    BYTE PTR [rax+0x24],al
   14000c5a6:	add    BYTE PTR [rax],al
   14000c5a8:	jl     0x14000c5ce
   14000c5aa:	add    BYTE PTR [rax],al
   14000c5ac:	mov    ebp,es
   14000c5ae:	add    BYTE PTR [rax],al
   14000c5b0:	and    DWORD PTR [rax],eax
   14000c5b2:	add    BYTE PTR [rax],al
   14000c5b4:	and    al,0x0
   14000c5b7:	add    BYTE PTR [rsp+0x0],bh
   14000c5bb:	add    BYTE PTR [rbp+rax*8+0x20190000],cl
   14000c5c2:	(bad)  
   14000c5c3:	add    BYTE PTR [rax],ah
   14000c5c5:	xor    al,0xb
   14000c5c7:	add    BYTE PTR [rdx],dl
   14000c5c9:	push   rdx
   14000c5ca:	(bad)  
   14000c5cb:	loopne 0x14000c5d9
   14000c5cd:	jo     0x14000c5da
   14000c5cf:	(bad)  
   14000c5d0:	ss jae 0x14000c5d3
   14000c5d3:	add    BYTE PTR [rax-0x68],dl
   14000c5d6:	add    BYTE PTR [rax],al
   14000c5d8:	(bad)  
   14000c5d9:	(bad)  
   14000c5da:	(bad)  
   14000c5db:	inc    DWORD PTR [rax]
   14000c5dd:	add    BYTE PTR [rax],al
   14000c5df:	add    bh,bh
   14000c5e1:	(bad)  
   14000c5e2:	(bad)  
   14000c5e3:	inc    DWORD PTR [rax]
	...
   14000c5ed:	add    BYTE PTR [rax],al
   14000c5ef:	add    BYTE PTR [rcx],al
   14000c5f1:	add    BYTE PTR [rax],al
   14000c5f3:	add    BYTE PTR [rcx],al
   14000c5f5:	add    BYTE PTR [rax],al
   14000c5f7:	add    ah,bh
   14000c5f9:	(bad)
   14000c5fc:	add    BYTE PTR [rax],al
	...
   14000c607:	add    al,al
   14000c609:	jp     0x14000c60b
   14000c60b:	add    BYTE PTR [rax+0x0],bl
   14000c60e:	add    BYTE PTR [rax],al
   14000c610:	movabs al,ds:0xd1ffffffff000015
   14000c619:	adc    eax,0x0
   14000c61e:	add    BYTE PTR [rax],al
   14000c620:	repz adc eax,0xffff0000
   14000c626:	(bad)  
   14000c627:	inc    eax
   14000c629:	jp     0x14000c62b
   14000c62b:	add    BYTE PTR [rax],al
   14000c62d:	add    BYTE PTR [rax],al
   14000c62f:	add    al,dl
   14000c631:	jp     0x14000c633
   14000c633:	add    BYTE PTR [rcx],al
   14000c635:	add    BYTE PTR [rax],al
   14000c637:	add    BYTE PTR [rcx],bl
   14000c639:	or     eax,0x420d0005
   14000c63e:	or     DWORD PTR [rax+0x8],esi
   14000c641:	(bad)  
   14000c642:	(bad)  
   14000c643:	push   rax
   14000c644:	(bad)  
   14000c645:	xor    BYTE PTR [rax],al
   14000c647:	add    BYTE PTR [rsi],dh
   14000c649:	jae    0x14000c64b
   14000c64b:	add    BYTE PTR [rax-0x68],dl
   14000c64e:	add    BYTE PTR [rax],al
   14000c650:	add    DWORD PTR [rsi],eax
   14000c652:	add    al,BYTE PTR [rax]
   14000c654:	(bad)  
   14000c655:	xor    al,BYTE PTR [rdx]
   14000c657:	xor    BYTE PTR [rcx],al
   14000c659:	(bad)  
   14000c65a:	add    al,BYTE PTR [rax]
   14000c65c:	(bad)  
   14000c65d:	xor    al,BYTE PTR [rdx]
   14000c65f:	xor    BYTE PTR [rcx],bl
   14000c661:	sbb    BYTE PTR [rax+rax*1],al
   14000c664:	sbb    BYTE PTR [rax+rcx*1],dh
   14000c667:	add    BYTE PTR [rdx],cl
   14000c669:	push   rdx
   14000c66a:	(bad)  
   14000c66b:	jo     0x14000c6a3
   14000c66d:	jae    0x14000c66f
   14000c66f:	add    BYTE PTR [rax-0x68],bh
   14000c672:	add    BYTE PTR [rax],al
   14000c674:	(bad)  
   14000c675:	(bad)  
   14000c676:	(bad)  
   14000c677:	inc    DWORD PTR [rax]
   14000c679:	add    BYTE PTR [rax],al
   14000c67b:	add    bh,bh
   14000c67d:	(bad)  
   14000c67e:	(bad)  
   14000c67f:	inc    DWORD PTR [rax]
	...
   14000c689:	add    BYTE PTR [rax],al
   14000c68b:	add    BYTE PTR [rcx],al
   14000c68d:	add    BYTE PTR [rax],al
   14000c68f:	add    BYTE PTR [rcx],al
   14000c691:	add    BYTE PTR [rax],al
   14000c693:	add    BYTE PTR [rax+0x400000c6],bl
	...
   14000c6a1:	add    BYTE PTR [rax],al
   14000c6a3:	add    BYTE PTR [rax+0x7a],dl
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	cmp    BYTE PTR [rax],al
   14000c6aa:	add    BYTE PTR [rax],al
   14000c6ac:	add    BYTE PTR [rax],al
   14000c6ae:	add    BYTE PTR [rax],al
   14000c6b0:	rex adc DWORD PTR [rax],eax
   14000c6b3:	add    bh,bh
   14000c6b5:	(bad)  
   14000c6b6:	(bad)  
   14000c6b7:	jmp    QWORD PTR [rbp+0x11]
   14000c6ba:	add    BYTE PTR [rax],al
   14000c6bc:	add    BYTE PTR [rax],al
   14000c6be:	add    BYTE PTR [rax],al
   14000c6c0:	xchg   ebx,eax
   14000c6c1:	adc    DWORD PTR [rax],eax
   14000c6c3:	add    bh,bh
   14000c6c5:	(bad)  
   14000c6c6:	(bad)  
   14000c6c7:	call   QWORD PTR [rax+0x7a]
   14000c6ca:	add    BYTE PTR [rax],al
   14000c6cc:	add    BYTE PTR [rax],al
   14000c6ce:	add    BYTE PTR [rax],al
   14000c6d0:	pop    rbp
   14000c6d1:	jp     0x14000c6d3
   14000c6d3:	add    BYTE PTR [rcx],al
   14000c6d5:	add    BYTE PTR [rax],al
   14000c6d7:	add    BYTE PTR [rcx],bl
   14000c6d9:	or     al,BYTE PTR [rdx]
   14000c6db:	add    BYTE PTR [rdx],cl
   14000c6dd:	xor    al,BYTE PTR [rsi]
   14000c6df:	push   rax
   14000c6e0:	ss jae 0x14000c6e3
   14000c6e3:	add    BYTE PTR [rax-0x68],bh
   14000c6e6:	add    BYTE PTR [rax],al
   14000c6e8:	sbb    DWORD PTR [rax],ebx
   14000c6ea:	add    al,0x0
   14000c6ec:	sbb    BYTE PTR [rax+rcx*1],dh
   14000c6ef:	add    BYTE PTR [rdx],cl
   14000c6f1:	push   rdx
   14000c6f2:	(bad)  
   14000c6f3:	jo     0x14000c72b
   14000c6f5:	jae    0x14000c6f7
   14000c6f7:	add    BYTE PTR [rax-0xffff68],ah
   14000c6fd:	(bad)  
   14000c6fe:	(bad)  
   14000c6ff:	inc    DWORD PTR [rax]
   14000c701:	add    BYTE PTR [rax],al
   14000c703:	add    bh,bh
   14000c705:	(bad)  
   14000c706:	(bad)  
   14000c707:	inc    DWORD PTR [rax]
	...
   14000c711:	add    BYTE PTR [rax],al
   14000c713:	add    BYTE PTR [rcx],al
   14000c715:	add    BYTE PTR [rax],al
   14000c717:	add    BYTE PTR [rcx],al
   14000c719:	add    BYTE PTR [rax],al
   14000c71b:	add    BYTE PTR [rax],ah
   14000c71d:	mov    DWORD PTR [rax],0x4000
	...
   14000c72b:	add    BYTE PTR [rax+0x3800007a],dl
	...
   14000c739:	adc    al,BYTE PTR [rax]
   14000c73b:	add    bh,bh
   14000c73d:	(bad)  
   14000c73e:	(bad)  
   14000c73f:	jmp    QWORD PTR [rip+0x12]        # 0x14000c757
   14000c745:	add    BYTE PTR [rax],al
   14000c747:	add    BYTE PTR [rbx+0x12],dl
   14000c74a:	add    BYTE PTR [rax],al
   14000c74c:	(bad)  
   14000c74d:	(bad)  
   14000c74e:	(bad)  
   14000c74f:	call   QWORD PTR [rax+0x7a]
   14000c755:	add    BYTE PTR [rax],al
   14000c757:	add    BYTE PTR [rbp+0x100007a],bl
   14000c75d:	add    BYTE PTR [rax],al
   14000c75f:	add    BYTE PTR [rcx],bl
   14000c761:	or     al,BYTE PTR [rdx]
   14000c763:	add    BYTE PTR [rdx],cl
   14000c765:	xor    al,BYTE PTR [rsi]
   14000c767:	push   rax
   14000c768:	ss jae 0x14000c76b
   14000c76b:	add    BYTE PTR [rax+0x1000098],ah
   14000c771:	(bad)  
   14000c772:	add    al,BYTE PTR [rax]
   14000c774:	(bad)  
   14000c775:	xor    al,BYTE PTR [rdx]
   14000c777:	xor    BYTE PTR [rcx],al
   14000c779:	(bad)  
   14000c77a:	add    al,BYTE PTR [rax]
   14000c77c:	(bad)  
   14000c77d:	xor    al,BYTE PTR [rdx]
   14000c77f:	xor    BYTE PTR [rcx],al
   14000c781:	(bad)  
   14000c782:	add    al,BYTE PTR [rax]
   14000c784:	(bad)  
   14000c785:	xor    al,BYTE PTR [rdx]
   14000c787:	xor    BYTE PTR [rcx],al
   14000c789:	(bad)  
   14000c78a:	add    al,BYTE PTR [rax]
   14000c78c:	(bad)  
   14000c78d:	xor    al,BYTE PTR [rdx]
   14000c78f:	xor    BYTE PTR [rcx],dl
   14000c791:	sbb    BYTE PTR [rip+0x14621800],al        # 0x15462df97
   14000c797:	loopne 0x14000c7ab
   14000c799:	jo     0x14000c7ac
   14000c79b:	(bad)  
   14000c79c:	adc    BYTE PTR [rax],dh
   14000c79e:	add    BYTE PTR [rax],al
   14000c7a0:	push   rax
   14000c7a1:	ja     0x14000c7a3
   14000c7a3:	add    BYTE PTR [rcx],al
   14000c7a5:	add    BYTE PTR [rax],al
   14000c7a7:	add    BYTE PTR [rbx+0x71],al
   14000c7aa:	add    BYTE PTR [rax],al
   14000c7ac:	movsxd esi,DWORD PTR [rcx+0x0]
   14000c7af:	add    BYTE PTR [rsi-0x7d],cl
   14000c7b2:	add    BYTE PTR [rax],al
   14000c7b4:	add    BYTE PTR [rax],al
   14000c7b6:	add    BYTE PTR [rax],al
   14000c7b8:	add    DWORD PTR [rsi],eax
   14000c7ba:	add    al,BYTE PTR [rax]
   14000c7bc:	(bad)  
   14000c7bd:	xor    al,BYTE PTR [rdx]
   14000c7bf:	push   rax
   14000c7c0:	or     DWORD PTR [rdi],edx
   14000c7c2:	(bad)  
   14000c7c3:	add    BYTE PTR [rdi],dl
   14000c7c5:	xor    al,0xd
   14000c7c7:	add    BYTE PTR [rdi],dl
   14000c7c9:	jb     0x14000c7de
   14000c7cb:	loopne 0x14000c7de
   14000c7cd:	jo     0x14000c7df
   14000c7cf:	(bad)  
   14000c7d0:	push   rax
   14000c7d1:	ja     0x14000c7d3
   14000c7d3:	add    BYTE PTR [rcx],al
   14000c7d5:	add    BYTE PTR [rax],al
   14000c7d7:	add    BYTE PTR [rdi-0x37ffff8f],ch
   14000c7dd:	jno    0x14000c7df
   14000c7df:	add    BYTE PTR [rdx-0x7d],bh
   14000c7e2:	add    BYTE PTR [rax],al
   14000c7e4:	enter  0x71,0x0
   14000c7e8:	add    DWORD PTR [rsi],eax
   14000c7ea:	add    al,BYTE PTR [rax]
   14000c7ec:	(bad)  
   14000c7ed:	xor    al,BYTE PTR [rdx]
   14000c7ef:	push   rax
   14000c7f0:	add    DWORD PTR [rcx+rax*1],eax
   14000c7f3:	add    BYTE PTR [rdx+rax*2],al
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	add    DWORD PTR [rcx+rax*1],eax
   14000c7fb:	add    BYTE PTR [rdx+rax*2],al
   14000c7fe:	add    BYTE PTR [rax],al
   14000c800:	adc    DWORD PTR [rsi],eax
   14000c802:	add    al,BYTE PTR [rax]
   14000c804:	(bad)  
   14000c805:	xor    al,BYTE PTR [rdx]
   14000c807:	xor    BYTE PTR [rax+0x77],dl
   14000c80a:	add    BYTE PTR [rax],al
   14000c80c:	add    DWORD PTR [rax],eax
   14000c80e:	add    BYTE PTR [rax],al
   14000c810:	outs   dx,DWORD PTR ds:[rsi]
   14000c811:	jb     0x14000c813
   14000c813:	add    ch,dl
   14000c815:	jb     0x14000c817
   14000c817:	add    BYTE PTR [rbx+0x83],bh
   14000c81d:	add    BYTE PTR [rax],al
   14000c81f:	add    BYTE PTR [rcx],al
   14000c821:	(bad)  
   14000c822:	add    al,BYTE PTR [rax]
   14000c824:	(bad)  
   14000c825:	xor    al,BYTE PTR [rdx]
   14000c827:	push   rax
   14000c828:	add    DWORD PTR [rsi],eax
   14000c82a:	add    al,BYTE PTR [rax]
   14000c82c:	(bad)  
   14000c82d:	xor    al,BYTE PTR [rdx]
   14000c82f:	xor    BYTE PTR [rcx],al
   14000c831:	clts   
   14000c833:	add    BYTE PTR [rdi],cl
   14000c835:	fs (bad) 
   14000c837:	add    BYTE PTR [rdi],cl
   14000c839:	xor    al,0x6
   14000c83b:	add    BYTE PTR [rdi],cl
   14000c83d:	xor    cl,BYTE PTR [rbx]
   14000c83f:	jo     0x14000c842
   14000c841:	add    al,0x1
   14000c843:	add    BYTE PTR [rdx+rax*2],al
   14000c846:	add    BYTE PTR [rax],al
   14000c848:	add    DWORD PTR [rcx+rax*1],eax
   14000c84b:	add    BYTE PTR [rdx+riz*2],al
   14000c84e:	add    BYTE PTR [rax],al
   14000c850:	or     DWORD PTR [rax],edx
   14000c852:	(bad)  
   14000c853:	add    BYTE PTR [rax],dl
   14000c855:	or     DWORD PTR fs:[rax],eax
   14000c858:	adc    BYTE PTR [rax+rcx*1],dh
   14000c85b:	add    BYTE PTR [rax],dl
   14000c85d:	push   rdx
   14000c85e:	or     al,0x70
   14000c860:	push   rax
   14000c861:	ja     0x14000c863
   14000c863:	add    BYTE PTR [rcx],al
   14000c865:	add    BYTE PTR [rax],al
   14000c867:	add    BYTE PTR [rdx],bh
   14000c869:	jne    0x14000c86b
   14000c86b:	add    bl,al
   14000c86d:	jbe    0x14000c86f
   14000c86f:	add    dh,dl
   14000c871:	add    DWORD PTR [rax],0x0
   14000c874:	ret    
   14000c875:	jbe    0x14000c877
   14000c877:	add    BYTE PTR [rcx],al
   14000c879:	(bad)  
   14000c87a:	add    al,BYTE PTR [rax]
   14000c87c:	(bad)  
   14000c87d:	xor    al,BYTE PTR [rdx]
   14000c87f:	push   rax
   14000c880:	add    DWORD PTR [rcx+rax*1],eax
   14000c883:	add    BYTE PTR [rdx+rax*2],al
   14000c886:	add    BYTE PTR [rax],al
   14000c888:	add    DWORD PTR [rcx+rax*1],eax
   14000c88b:	add    BYTE PTR [rdx+rax*2],al
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	add    DWORD PTR [rcx+rax*1],eax
   14000c893:	add    BYTE PTR [rdx+rax*2],al
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	or     DWORD PTR [rdx],ecx
   14000c89a:	add    al,0x0
   14000c89c:	or     dh,BYTE PTR [rsi+rax*1]
   14000c89f:	add    BYTE PTR [rdx],cl
   14000c8a1:	xor    al,BYTE PTR [rsi]
   14000c8a3:	jo     0x14000c8f5
   14000c8a5:	ja     0x14000c8a7
   14000c8a7:	add    BYTE PTR [rcx],al
   14000c8a9:	add    BYTE PTR [rax],al
   14000c8ab:	add    BYTE PTR [rbp+0x78],cl
   14000c8ae:	add    BYTE PTR [rax],al
   14000c8b0:	cmp    BYTE PTR [rax+0x0],0x0
   14000c8b4:	add    BYTE PTR [rax+rax*1+0x788000],al
   14000c8bb:	add    BYTE PTR [rcx],al
   14000c8bd:	(bad)  
   14000c8be:	add    al,BYTE PTR [rax]
   14000c8c0:	(bad)  
   14000c8c1:	xor    al,BYTE PTR [rdx]
   14000c8c3:	push   rax
   14000c8c4:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dc8ce
   14000c8ca:	or     DWORD PTR [rax],eax
   14000c8cc:	or     eax,0x1500632
   14000c8d1:	or     al,BYTE PTR [rax+rax*1]
   14000c8d4:	or     dh,BYTE PTR [rsi+rax*1]
   14000c8d7:	add    BYTE PTR [rdx],cl
   14000c8d9:	xor    al,BYTE PTR [rsi]
   14000c8db:	jo     0x14000c8de
   14000c8dd:	or     al,BYTE PTR [rax+rax*1]
   14000c8e0:	or     dh,BYTE PTR [rsi+rax*1]
   14000c8e3:	add    BYTE PTR [rdx],cl
   14000c8e5:	xor    al,BYTE PTR [rsi]
   14000c8e7:	jo     0x14000c8e9
	...
   14000c8f1:	add    BYTE PTR [rax],al
   14000c8f3:	add    BYTE PTR [rax-0x20],dl
   14000c8f6:	add    BYTE PTR [rax],al
   14000c8f8:	add    BYTE PTR [rax],al
   14000c8fa:	add    BYTE PTR [rax],al
   14000c8fc:	(bad)  
   14000c8fd:	(bad)  
   14000c8fe:	(bad)  
   14000c8ff:	inc    DWORD PTR [rax]
   14000c901:	add    BYTE PTR [rax],al
   14000c903:	add    BYTE PTR [rax],bl
   14000c905:	add    BYTE PTR [rax],al
   14000c907:	add    BYTE PTR [rax],ah
   14000c909:	xor    al,0x0
	...
   14000c91b:	add    BYTE PTR [rax-0x20],bh
   14000c91e:	add    BYTE PTR [rax],al
   14000c920:	add    BYTE PTR [rax],al
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	(bad)  
   14000c925:	(bad)  
   14000c926:	(bad)  
   14000c927:	inc    DWORD PTR [rax]
   14000c929:	add    BYTE PTR [rax],al
   14000c92b:	add    BYTE PTR [rax],bl
   14000c92d:	add    BYTE PTR [rax],al
   14000c92f:	add    BYTE PTR [rax],bl
   14000c931:	jae    0x14000c933
	...
   14000c943:	add    al,cl
   14000c945:	loopne 0x14000c947
   14000c947:	add    BYTE PTR [rax],al
   14000c949:	add    BYTE PTR [rax],al
   14000c94b:	add    BYTE PTR [rax+0x0],al
   14000c94e:	add    BYTE PTR [rax],al
   14000c950:	add    al,0x0
   14000c952:	add    BYTE PTR [rax],al
   14000c954:	or     BYTE PTR [rax],al
   14000c956:	add    BYTE PTR [rax],al
   14000c958:	add    BYTE PTR [rbx],dh
	...
   14000c96a:	add    BYTE PTR [rax],al
   14000c96c:	movabs al,ds:0xff000000000000e0
   14000c975:	(bad)  
   14000c976:	(bad)  
   14000c977:	inc    DWORD PTR [rax]
   14000c979:	add    BYTE PTR [rax],al
   14000c97b:	add    BYTE PTR [rax],ch
   14000c97d:	add    BYTE PTR [rax],al
   14000c97f:	add    BYTE PTR [rax+0x33],al
	...
   14000c991:	add    BYTE PTR [rax],al
   14000c993:	add    BYTE PTR [rax-0x20],bh
   14000c996:	add    BYTE PTR [rax],al
   14000c998:	sub    BYTE PTR [rax],al
   14000c99a:	add    BYTE PTR [rax],al
   14000c99c:	(bad)  
   14000c99d:	(bad)  
   14000c99e:	(bad)  
   14000c99f:	inc    DWORD PTR [rax]
   14000c9a1:	add    BYTE PTR [rax],al
   14000c9a3:	add    BYTE PTR [rax],bl
   14000c9a5:	add    BYTE PTR [rax],al
   14000c9a7:	add    BYTE PTR [rax],bl
   14000c9a9:	jae    0x14000c9ab
	...
   14000c9bb:	add    BYTE PTR [rax+0x3e],al
   14000c9c1:	add    BYTE PTR [rax],al
   14000c9c3:	add    al,ah
   14000c9c5:	leave  
	...
   14000c9de:	add    BYTE PTR [rax],al
   14000c9e0:	or     DWORD PTR [rax],eax
   14000c9e2:	add    BYTE PTR [rax],al
   14000c9e4:	xor    dl,cl
   14000c9e6:	add    BYTE PTR [rax],al
   14000c9e8:	pop    rax
   14000c9e9:	retf   0x0
   14000c9ec:	or     dl,0x0
   14000c9ef:	add    BYTE PTR [rax-0x2fffff36],ch
   14000c9f5:	retf   0x0
   14000c9f8:	lock enter 0x0,0x18
   14000c9fd:	leave  
   14000c9fe:	add    BYTE PTR [rax],al
   14000ca00:	clc    
   14000ca01:	retf   0x0
   14000ca04:	and    bl,cl
	...
   14000ca2e:	add    BYTE PTR [rax],al
   14000ca30:	add    al,0x0
   14000ca32:	add    BYTE PTR [rax],al
   14000ca34:	push   rax
   14000ca35:	loope  0x14000ca37
   14000ca37:	add    BYTE PTR [rax],al
   14000ca39:	add    BYTE PTR [rax],al
   14000ca3b:	add    bh,bh
   14000ca3d:	(bad)  
   14000ca3e:	(bad)  
   14000ca3f:	inc    DWORD PTR [rax]
   14000ca41:	add    BYTE PTR [rax],al
   14000ca43:	add    BYTE PTR [rax-0x60000000],cl
   14000ca49:	sub    DWORD PTR [rax],eax
	...
   14000ca5b:	add    al,ah
   14000ca5d:	loope  0x14000ca5f
   14000ca5f:	add    BYTE PTR [rax],al
   14000ca61:	add    BYTE PTR [rax],al
   14000ca63:	add    bh,bh
   14000ca65:	(bad)  
   14000ca66:	(bad)  
   14000ca67:	inc    DWORD PTR [rax]
   14000ca69:	add    BYTE PTR [rax],al
   14000ca6b:	add    BYTE PTR [rax+0x0],dh
   14000ca6e:	add    BYTE PTR [rax],al
   14000ca70:	rex
   14000ca71:	add    BYTE PTR cs:[rax],al
	...
   14000ca84:	rex.W loop 0x14000ca87
   14000ca87:	add    BYTE PTR [rax],al
   14000ca89:	add    BYTE PTR [rax],al
   14000ca8b:	add    bh,bh
   14000ca8d:	(bad)  
   14000ca8e:	(bad)  
   14000ca8f:	inc    DWORD PTR [rax]
   14000ca91:	add    BYTE PTR [rax],al
   14000ca93:	add    BYTE PTR [rax+0x0],cl
   14000ca96:	add    BYTE PTR [rax],al
   14000ca98:	rex
   14000ca99:	add    BYTE PTR ss:[rax],al
	...
   14000caac:	and    dl,0x0
   14000caaf:	add    BYTE PTR [rax],al
   14000cab1:	add    BYTE PTR [rax],al
   14000cab3:	add    bh,bh
   14000cab5:	(bad)  
   14000cab6:	(bad)  
   14000cab7:	inc    DWORD PTR [rax]
   14000cab9:	add    BYTE PTR [rax],al
   14000cabb:	add    BYTE PTR [rax+0x0],cl
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	movabs al,ds:0x35
	...
   14000cad1:	add    BYTE PTR [rax],al
   14000cad3:	add    BYTE PTR [rax+0xe2],dh
   14000cad9:	add    BYTE PTR [rax],al
   14000cadb:	add    bh,bh
   14000cadd:	(bad)  
   14000cade:	(bad)  
   14000cadf:	inc    DWORD PTR [rax]
   14000cae1:	add    BYTE PTR [rax],al
   14000cae3:	add    BYTE PTR [rax+0x0],cl
   14000cae6:	add    BYTE PTR [rax],al
   14000cae8:	shl    BYTE PTR [rax+rax*1],1
	...
   14000cafb:	add    BYTE PTR [rax+0x480000e0],ah
   14000cb01:	add    BYTE PTR [rax],al
   14000cb03:	add    bh,bh
   14000cb05:	(bad)  
   14000cb06:	(bad)  
   14000cb07:	inc    DWORD PTR [rax]
   14000cb09:	add    BYTE PTR [rax],al
   14000cb0b:	add    BYTE PTR [rax],ch
   14000cb0d:	add    BYTE PTR [rax],al
   14000cb0f:	add    BYTE PTR [rax+0x33],al
	...
   14000cb21:	add    BYTE PTR [rax],al
   14000cb23:	add    al,cl
   14000cb25:	loopne 0x14000cb27
   14000cb27:	add    BYTE PTR [rax],al
   14000cb29:	add    BYTE PTR [rax],al
   14000cb2b:	add    BYTE PTR [rax+0x0],dh
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	add    al,0x0
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	or     BYTE PTR [rax],al
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	add    BYTE PTR [rbx],dh
	...
   14000cb4a:	add    BYTE PTR [rax],al
   14000cb4c:	loopne 0x14000cb8c
   14000cb4e:	add    BYTE PTR [rax],al
   14000cb50:	add    BYTE PTR [rax],al
   14000cb52:	add    BYTE PTR [rax],al
   14000cb54:	push   0xcb
	...
   14000cb65:	add    BYTE PTR [rax],al
   14000cb67:	add    BYTE PTR [rsi],al
   14000cb69:	add    BYTE PTR [rax],al
   14000cb6b:	add    BYTE PTR [rax-0x37ffff35],ah
   14000cb71:	retf   
   14000cb72:	add    BYTE PTR [rax],al
   14000cb74:	push   0xfffffffff00000c9
   14000cb79:	retf   
   14000cb7a:	add    BYTE PTR [rax],al
   14000cb7c:	nop
   14000cb7d:	leave  
   14000cb7e:	add    BYTE PTR [rax],al
   14000cb80:	rex leave 
	...
   14000cb9e:	add    BYTE PTR [rax],al
   14000cba0:	add    al,0x0
   14000cba2:	add    BYTE PTR [rax],al
   14000cba4:	loopne 0x14000cb88
   14000cba6:	add    BYTE PTR [rax],al
   14000cba8:	add    BYTE PTR [rax],al
   14000cbaa:	add    BYTE PTR [rax],al
   14000cbac:	(bad)  
   14000cbad:	(bad)  
   14000cbae:	(bad)  
   14000cbaf:	inc    DWORD PTR [rax]
   14000cbb1:	add    BYTE PTR [rax],al
   14000cbb3:	add    BYTE PTR [rax+0x0],bl
   14000cbb6:	add    BYTE PTR [rax],al
   14000cbb8:	nop
   14000cbb9:	sub    eax,DWORD PTR [rax]
	...
   14000cbcb:	add    BYTE PTR [rax-0x1d],al
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	add    BYTE PTR [rax],al
   14000cbd2:	add    BYTE PTR [rax],al
   14000cbd4:	(bad)  
   14000cbd5:	(bad)  
   14000cbd6:	(bad)  
   14000cbd7:	inc    DWORD PTR [rax]
   14000cbd9:	add    BYTE PTR [rax],al
   14000cbdb:	add    BYTE PTR [rax+0x0],al
   14000cbde:	add    BYTE PTR [rax],al
   14000cbe0:	movabs al,ds:0x30
   14000cbe9:	add    BYTE PTR [rax],al
   14000cbeb:	add    BYTE PTR [rax],al
   14000cbed:	add    BYTE PTR [rax],al
   14000cbef:	add    BYTE PTR [rax],dl
   14000cbf1:	add    BYTE PTR [rax],al
   14000cbf3:	add    BYTE PTR [rax],al
   14000cbf5:	loope  0x14000cbf7
   14000cbf7:	add    BYTE PTR [rax],ch
   14000cbf9:	add    BYTE PTR [rax],al
   14000cbfb:	add    bh,bh
   14000cbfd:	(bad)  
   14000cbfe:	(bad)  
   14000cbff:	inc    DWORD PTR [rax]
   14000cc01:	add    BYTE PTR [rax],al
   14000cc03:	add    BYTE PTR [rax],bl
   14000cc05:	add    BYTE PTR [rax],al
   14000cc07:	add    BYTE PTR [rax],dh
   14000cc09:	xor    BYTE PTR [rax],al
	...
   14000cc1b:	add    BYTE PTR [rax],al
   14000cc1d:	(bad)  
   14000cc1e:	add    BYTE PTR [rax],al
   14000cc20:	add    BYTE PTR [rax],al
   14000cc22:	add    BYTE PTR [rax],al
   14000cc24:	cmp    ah,cl
	...
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	(bad)  
   14000cc39:	add    BYTE PTR [rax],al
   14000cc3b:	add    BYTE PTR [rax-0x34],dh
   14000cc3e:	add    BYTE PTR [rax],al
   14000cc40:	cwde   
   14000cc41:	int3   
   14000cc42:	add    BYTE PTR [rax],al
   14000cc44:	push   0xffffffffc00000c9
   14000cc49:	int3   
   14000cc4a:	add    BYTE PTR [rax],al
   14000cc4c:	nop
   14000cc4d:	leave  
   14000cc4e:	add    BYTE PTR [rax],al
   14000cc50:	rex leave 
	...
   14000cc6e:	add    BYTE PTR [rax],al
   14000cc70:	add    al,0x0
   14000cc72:	add    BYTE PTR [rax],al
   14000cc74:	and    bl,0x0
   14000cc77:	add    BYTE PTR [rax],al
   14000cc79:	add    BYTE PTR [rax],al
   14000cc7b:	add    bh,bh
   14000cc7d:	(bad)  
   14000cc7e:	(bad)  
   14000cc7f:	inc    DWORD PTR [rax]
   14000cc81:	add    BYTE PTR [rax],al
   14000cc83:	add    BYTE PTR [rax+0x0],bl
   14000cc86:	add    BYTE PTR [rax],al
   14000cc88:	sub    BYTE PTR [rip+0x0],0x0        # 0x14000cc8f
	...
   14000cc9b:	add    al,ch
   14000cc9d:	jrcxz  0x14000cc9f
   14000cc9f:	add    BYTE PTR [rax],al
   14000cca1:	add    BYTE PTR [rax],al
   14000cca3:	add    bh,bh
   14000cca5:	(bad)  
   14000cca6:	(bad)  
   14000cca7:	inc    DWORD PTR [rax]
   14000cca9:	add    BYTE PTR [rax],al
   14000ccab:	add    BYTE PTR [rax+0x0],al
   14000ccae:	add    BYTE PTR [rax],al
   14000ccb0:	add    BYTE PTR [rdx],dh
	...
   14000ccc2:	add    BYTE PTR [rax],al
   14000ccc4:	sub    cl,ah
   14000ccc6:	add    BYTE PTR [rax],al
   14000ccc8:	sub    BYTE PTR [rax],al
   14000ccca:	add    BYTE PTR [rax],al
   14000cccc:	(bad)  
   14000cccd:	(bad)  
   14000ccce:	(bad)  
   14000cccf:	inc    DWORD PTR [rax]
   14000ccd1:	add    BYTE PTR [rax],al
   14000ccd3:	add    BYTE PTR [rax],bl
   14000ccd5:	add    BYTE PTR [rax],al
   14000ccd7:	add    BYTE PTR [rax+0x31],ah
	...
   14000ccf1:	add    BYTE PTR [rax],al
   14000ccf3:	add    BYTE PTR [rdx+0x1c],al
   14000ccf6:	sbb    DWORD PTR [rax+0x0],0x36000000
   14000ccfd:	int    0x0
   14000ccff:	add    BYTE PTR [rcx],al
   14000cd01:	add    BYTE PTR [rax],al
   14000cd03:	add    BYTE PTR [rbx],al
   14000cd05:	add    BYTE PTR [rax],al
   14000cd07:	add    BYTE PTR [rbx],al
   14000cd09:	add    BYTE PTR [rax],al
   14000cd0b:	add    BYTE PTR [rax],bl
   14000cd0d:	int    0x0
   14000cd0f:	add    BYTE PTR [rcx*8-0x32d00000],ah
   14000cd16:	add    BYTE PTR [rax],al
   14000cd18:	and    al,ah
   14000cd1a:	add    BYTE PTR [rax],al
   14000cd1c:	sub    al,ah
   14000cd1e:	add    BYTE PTR [rax],al
   14000cd20:	sbb    al,ah
   14000cd22:	add    BYTE PTR [rax],al
   14000cd24:	rex.B int 0x0
   14000cd27:	add    BYTE PTR [rbx-0x33],dl
   14000cd2a:	add    BYTE PTR [rax],al
   14000cd2c:	push   0xcd
   14000cd31:	add    BYTE PTR [rcx],al
   14000cd33:	add    BYTE PTR [rdx],al
   14000cd35:	add    BYTE PTR [rbp+0x41],cl
   14000cd38:	push   rsp
   14000cd39:	rex.WR
   14000cd3a:	rex.B
   14000cd3b:	rex.X
   14000cd3c:	cs gs js 0x14000cda5
   14000cd40:	add    BYTE PTR [rbp+0x41],cl
   14000cd43:	push   rsp
   14000cd44:	rex.WR
   14000cd45:	rex.B
   14000cd46:	rex.X pop rdi
   14000cd48:	(bad)  
   14000cd49:	jne    0x14000cdb4
   14000cd4b:	ins    BYTE PTR es:[rdi],dx
   14000cd4c:	fs pop rdi
   14000cd4e:	fs (bad) 
   14000cd50:	je     0x14000cdb7
   14000cd52:	add    BYTE PTR [rbp+0x41],cl
   14000cd55:	push   rsp
   14000cd56:	rex.WR
   14000cd57:	rex.B
   14000cd58:	rex.X pop rdi
   14000cd5a:	jb     0x14000cdc1
   14000cd5c:	ins    BYTE PTR es:[rdi],dx
   14000cd5d:	(bad)  
   14000cd5e:	je     0x14000cdc9
   14000cd60:	jbe    0x14000cdc7
   14000cd62:	pop    rdi
   14000cd63:	jo     0x14000cdc6
   14000cd65:	je     0x14000cdcf
   14000cd67:	add    BYTE PTR [rbp+0x41],cl
   14000cd6a:	push   rsp
   14000cd6b:	rex.WR
   14000cd6c:	rex.B
   14000cd6d:	rex.X pop rdi
   14000cd6f:	jbe    0x14000cdd6
   14000cd71:	jb     0x14000cde6
   14000cd73:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0000000
	...
   14000cd82:	add    BYTE PTR [rax],al
   14000cd84:	jbe    0x14000cd59
   14000cd86:	add    BYTE PTR [rax],al
   14000cd88:	clc    
   14000cd89:	xchg   ecx,eax
   14000cd8a:	add    BYTE PTR [rax],al
   14000cd8c:	lock iret 
	...
   14000cd96:	add    BYTE PTR [rax],al
   14000cd98:	out    0xd3,al
   14000cd9a:	add    BYTE PTR [rax],al
   14000cd9c:	call   0x11800ce32
   14000cda1:	iret   
	...
   14000cdaa:	add    BYTE PTR [rax],al
   14000cdac:	jb     0x14000cd82
   14000cdae:	add    BYTE PTR [rax],al
   14000cdb0:	rcl    BYTE PTR [rcx-0x31f80000],1
	...
   14000cdbe:	add    BYTE PTR [rax],al
   14000cdc0:	mov    esp,0xd4
   14000cdc5:	nop
   14000cdc6:	add    BYTE PTR [rax],al
   14000cdc8:	pop    rax
   14000cdc9:	(bad)  
	...
   14000cdd2:	add    BYTE PTR [rax],al
   14000cdd4:	push   0x500000d5
   14000cdd9:	nop
   14000cdda:	add    BYTE PTR [rax],al
   14000cddc:	mov    dh,cl
	...
   14000cde6:	add    BYTE PTR [rax],al
   14000cde8:	(bad)  
   14000cde9:	(bad)  
   14000cdea:	add    BYTE PTR [rax],al
   14000cdec:	adc    BYTE PTR [rax+0x0],0x0
	...
   14000ce07:	add    ah,dl
   14000ce09:	fadd   DWORD PTR [rax]
   14000ce0b:	add    BYTE PTR [rax],al
   14000ce0d:	add    BYTE PTR [rax],al
   14000ce0f:	add    BYTE PTR [rsi+0xd8],bh
   14000ce15:	add    BYTE PTR [rax],al
   14000ce17:	add    BYTE PTR [rax+0xd8],ch
   14000ce1d:	add    BYTE PTR [rax],al
   14000ce1f:	add    BYTE PTR [rsi+0xd8],cl
   14000ce25:	add    BYTE PTR [rax],al
   14000ce27:	add    BYTE PTR [rsi-0x28],bh
   14000ce2a:	add    BYTE PTR [rax],al
   14000ce2c:	add    BYTE PTR [rax],al
   14000ce2e:	add    BYTE PTR [rax],al
   14000ce30:	outs   dx,BYTE PTR ds:[rsi]
   14000ce31:	fadd   DWORD PTR [rax]
   14000ce33:	add    BYTE PTR [rax],al
   14000ce35:	add    BYTE PTR [rax],al
   14000ce37:	add    BYTE PTR [rax+0xd4],dh
   14000ce3d:	add    BYTE PTR [rax],al
   14000ce3f:	add    BYTE PTR [rdx+0xd4],ah
   14000ce45:	add    BYTE PTR [rax],al
   14000ce47:	add    BYTE PTR [rdx+0xd4],dl
	...
   14000ce55:	add    BYTE PTR [rax],al
   14000ce57:	add    ah,ah
   14000ce59:	(bad)  
   14000ce5a:	add    BYTE PTR [rax],al
   14000ce5c:	add    BYTE PTR [rax],al
   14000ce5e:	add    BYTE PTR [rax],al
   14000ce60:	sub    ch,dl
   14000ce62:	add    BYTE PTR [rax],al
   14000ce64:	add    BYTE PTR [rax],al
   14000ce66:	add    BYTE PTR [rax],al
   14000ce68:	rex.W (bad) 
   14000ce6a:	add    BYTE PTR [rax],al
   14000ce6c:	add    BYTE PTR [rax],al
   14000ce6e:	add    BYTE PTR [rax],al
   14000ce70:	(bad)  
   14000ce71:	(bad)  
   14000ce72:	add    BYTE PTR [rax],al
   14000ce74:	add    BYTE PTR [rax],al
   14000ce76:	add    BYTE PTR [rax],al
   14000ce78:	retf   0xd4
	...
   14000ce87:	add    BYTE PTR [rax],cl
   14000ce89:	fadd   DWORD PTR [rax]
   14000ce8b:	add    BYTE PTR [rax],al
   14000ce8d:	add    BYTE PTR [rax],al
   14000ce8f:	add    BYTE PTR [rax+rbx*8],dl
   14000ce92:	add    BYTE PTR [rax],al
   14000ce94:	add    BYTE PTR [rax],al
   14000ce96:	add    BYTE PTR [rax],al
   14000ce98:	rex.WX fadd DWORD PTR [rax]
   14000ce9b:	add    BYTE PTR [rax],al
   14000ce9d:	add    BYTE PTR [rax],al
   14000ce9f:	add    ah,dh
   14000cea1:	xlat   BYTE PTR ds:[rbx]
   14000cea2:	add    BYTE PTR [rax],al
   14000cea4:	add    BYTE PTR [rax],al
   14000cea6:	add    BYTE PTR [rax],al
   14000cea8:	(bad)  
   14000cea9:	xlat   BYTE PTR ds:[rbx]
   14000ceaa:	add    BYTE PTR [rax],al
   14000ceac:	add    BYTE PTR [rax],al
   14000ceae:	add    BYTE PTR [rax],al
   14000ceb0:	jbe    0x14000ce87
   14000ceb2:	add    BYTE PTR [rax],al
   14000ceb4:	add    BYTE PTR [rax],al
   14000ceb6:	add    BYTE PTR [rax],al
   14000ceb8:	(bad)  
   14000ceb9:	(bad)  
   14000ceba:	add    BYTE PTR [rax],al
   14000cebc:	add    BYTE PTR [rax],al
   14000cebe:	add    BYTE PTR [rax],al
   14000cec0:	xchg   esp,eax
   14000cec1:	(bad)  
   14000cec2:	add    BYTE PTR [rax],al
   14000cec4:	add    BYTE PTR [rax],al
   14000cec6:	add    BYTE PTR [rax],al
   14000cec8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cec9:	(bad)  
   14000ceca:	add    BYTE PTR [rax],al
   14000cecc:	add    BYTE PTR [rax],al
   14000cece:	add    BYTE PTR [rax],al
   14000ced0:	scas   al,BYTE PTR es:[rdi]
   14000ced1:	(bad)  
   14000ced2:	add    BYTE PTR [rax],al
   14000ced4:	add    BYTE PTR [rax],al
   14000ced6:	add    BYTE PTR [rax],al
   14000ced8:	mov    eax,0xd5
   14000cedd:	add    BYTE PTR [rax],al
   14000cedf:	add    ah,bl
   14000cee1:	(bad)  
   14000cee2:	add    BYTE PTR [rax],al
   14000cee4:	add    BYTE PTR [rax],al
   14000cee6:	add    BYTE PTR [rax],al
   14000cee8:	add    dh,dl
   14000ceea:	add    BYTE PTR [rax],al
   14000ceec:	add    BYTE PTR [rax],al
   14000ceee:	add    BYTE PTR [rax],al
   14000cef0:	and    al,0xd6
   14000cef2:	add    BYTE PTR [rax],al
   14000cef4:	add    BYTE PTR [rax],al
   14000cef6:	add    BYTE PTR [rax],al
   14000cef8:	rex (bad) 
   14000cefa:	add    BYTE PTR [rax],al
   14000cefc:	add    BYTE PTR [rax],al
   14000cefe:	add    BYTE PTR [rax],al
   14000cf00:	(bad)  
   14000cf01:	(bad)  
   14000cf02:	add    BYTE PTR [rax],al
   14000cf04:	add    BYTE PTR [rax],al
   14000cf06:	add    BYTE PTR [rax],al
   14000cf08:	je     0x14000cee0
   14000cf0a:	add    BYTE PTR [rax],al
   14000cf0c:	add    BYTE PTR [rax],al
   14000cf0e:	add    BYTE PTR [rax],al
   14000cf10:	mov    dl,dh
   14000cf12:	add    BYTE PTR [rax],al
   14000cf14:	add    BYTE PTR [rax],al
   14000cf16:	add    BYTE PTR [rax],al
   14000cf18:	movabs al,ds:0xaa000000000000d6
   14000cf21:	(bad)  
   14000cf22:	add    BYTE PTR [rax],al
   14000cf24:	add    BYTE PTR [rax],al
   14000cf26:	add    BYTE PTR [rax],al
   14000cf28:	mov    ah,0xd6
   14000cf2a:	add    BYTE PTR [rax],al
   14000cf2c:	add    BYTE PTR [rax],al
   14000cf2e:	add    BYTE PTR [rax],al
   14000cf30:	mov    esi,0xd6
   14000cf35:	add    BYTE PTR [rax],al
   14000cf37:	add    dl,dl
   14000cf39:	(bad)  
   14000cf3a:	add    BYTE PTR [rax],al
   14000cf3c:	add    BYTE PTR [rax],al
   14000cf3e:	add    BYTE PTR [rax],al
   14000cf40:	clc    
   14000cf41:	(bad)  
   14000cf42:	add    BYTE PTR [rax],al
   14000cf44:	add    BYTE PTR [rax],al
   14000cf46:	add    BYTE PTR [rax],al
   14000cf48:	add    bh,dl
   14000cf4a:	add    BYTE PTR [rax],al
   14000cf4c:	add    BYTE PTR [rax],al
   14000cf4e:	add    BYTE PTR [rax],al
   14000cf50:	or     dl,bh
   14000cf52:	add    BYTE PTR [rax],al
   14000cf54:	add    BYTE PTR [rax],al
   14000cf56:	add    BYTE PTR [rax],al
   14000cf58:	sbb    bh,dl
   14000cf5a:	add    BYTE PTR [rax],al
   14000cf5c:	add    BYTE PTR [rax],al
   14000cf5e:	add    BYTE PTR [rax],al
   14000cf60:	xlat   BYTE PTR es:[rbx]
   14000cf62:	add    BYTE PTR [rax],al
   14000cf64:	add    BYTE PTR [rax],al
   14000cf66:	add    BYTE PTR [rax],al
   14000cf68:	xor    bh,dl
   14000cf6a:	add    BYTE PTR [rax],al
   14000cf6c:	add    BYTE PTR [rax],al
   14000cf6e:	add    BYTE PTR [rax],al
   14000cf70:	xlat   BYTE PTR ds:[rbx]
   14000cf72:	add    BYTE PTR [rax],al
   14000cf74:	add    BYTE PTR [rax],al
   14000cf76:	add    BYTE PTR [rax],al
   14000cf78:	pop    rax
   14000cf79:	xlat   BYTE PTR ds:[rbx]
   14000cf7a:	add    BYTE PTR [rax],al
   14000cf7c:	add    BYTE PTR [rax],al
   14000cf7e:	add    BYTE PTR [rax],al
   14000cf80:	data16 xlat BYTE PTR ds:[rbx]
   14000cf82:	add    BYTE PTR [rax],al
   14000cf84:	add    BYTE PTR [rax],al
   14000cf86:	add    BYTE PTR [rax],al
   14000cf88:	jbe    0x14000cf61
   14000cf8a:	add    BYTE PTR [rax],al
   14000cf8c:	add    BYTE PTR [rax],al
   14000cf8e:	add    BYTE PTR [rax],al
   14000cf90:	mov    bh,dl
   14000cf92:	add    BYTE PTR [rax],al
   14000cf94:	add    BYTE PTR [rax],al
   14000cf96:	add    BYTE PTR [rax],al
   14000cf98:	nop
   14000cf99:	xlat   BYTE PTR ds:[rbx]
   14000cf9a:	add    BYTE PTR [rax],al
   14000cf9c:	add    BYTE PTR [rax],al
   14000cf9e:	add    BYTE PTR [rax],al
   14000cfa0:	cwde   
   14000cfa1:	xlat   BYTE PTR ds:[rbx]
   14000cfa2:	add    BYTE PTR [rax],al
   14000cfa4:	add    BYTE PTR [rax],al
   14000cfa6:	add    BYTE PTR [rax],al
   14000cfa8:	movabs ds:0xb0000000000000d7,al
   14000cfb1:	xlat   BYTE PTR ds:[rbx]
   14000cfb2:	add    BYTE PTR [rax],al
   14000cfb4:	add    BYTE PTR [rax],al
   14000cfb6:	add    BYTE PTR [rax],al
   14000cfb8:	(bad)  
   14000cfb9:	xlat   BYTE PTR ds:[rbx]
   14000cfba:	add    BYTE PTR [rax],al
   14000cfbc:	add    BYTE PTR [rax],al
   14000cfbe:	add    BYTE PTR [rax],al
   14000cfc0:	fcmovbe st,st(7)
   14000cfc2:	add    BYTE PTR [rax],al
   14000cfc4:	add    BYTE PTR [rax],al
   14000cfc6:	add    BYTE PTR [rax],al
   14000cfc8:	call   0x14000d0a4
	...
   14000cfd5:	add    BYTE PTR [rax],al
   14000cfd7:	add    BYTE PTR [rsp+rdx*8],dh
   14000cfda:	add    BYTE PTR [rax],al
   14000cfdc:	add    BYTE PTR [rax],al
   14000cfde:	add    BYTE PTR [rax],al
   14000cfe0:	clc    
   14000cfe1:	rol    DWORD PTR [rax],cl
	...
   14000cfef:	add    BYTE PTR [rsi-0x2d],bh
	...
   14000cffe:	add    BYTE PTR [rax],al
   14000d000:	(bad)  
   14000d001:	rol    BYTE PTR [rax],cl
   14000d003:	add    BYTE PTR [rax],al
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    dh,bl
   14000d009:	rol    DWORD PTR [rax],1
   14000d00b:	add    BYTE PTR [rax],al
   14000d00d:	add    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rcx+rdx*8+0x0],bh
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	push   rax
   14000d019:	rol    DWORD PTR [rax],1
   14000d01b:	add    BYTE PTR [rax],al
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	add    BYTE PTR [rsi],ch
   14000d021:	rol    DWORD PTR [rax],1
   14000d023:	add    BYTE PTR [rax],al
   14000d025:	add    BYTE PTR [rax],al
   14000d027:	add    BYTE PTR [rax],bh
   14000d029:	rol    BYTE PTR [rax],1
	...
   14000d037:	add    BYTE PTR [rax+0x303f3f00],ch
   14000d03d:	push   rbx
   14000d03e:	gs jae 0x14000d0b4
   14000d041:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   14000d048:	outs   dx,DWORD PTR ds:[rsi]
   14000d049:	outs   dx,BYTE PTR ds:[rsi]
   14000d04a:	jae    0x14000d08c
   14000d04c:	ins    DWORD PTR es:[rdi],dx
   14000d04d:	jbe    0x14000d0bc
   14000d04f:	rex
   14000d050:	rex push rcx
   14000d052:	rex.RB
   14000d053:	rex.B
   14000d054:	rex.B
   14000d055:	rex push rdi
   14000d057:	xor    al,0x50
   14000d059:	jb     0x14000d0c4
   14000d05b:	ins    DWORD PTR es:[rdi],dx
   14000d05c:	(bad)  
   14000d05d:	jb     0x14000d0d8
   14000d05f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000d061:	fs rex xor DWORD PTR gs:[rax+0x57],eax
   14000d067:	xor    al,0x53
   14000d069:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
   14000d06d:	fs (bad) 
   14000d06f:	jb     0x14000d0ea
   14000d071:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000d073:	fs rex xor DWORD PTR gs:[rax+0x41],eax
   14000d079:	rex.RB
   14000d07a:	rex.X push rsi
   14000d07c:	(bad)  
   14000d07d:	and    al,0x76
   14000d07f:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000d084:	rex push rsi
   14000d086:	(bad)  
   14000d087:	and    al,0x62
   14000d089:	(bad)  
   14000d08a:	jae    0x14000d0f5
   14000d08c:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000d08f:	je     0x14000d103
   14000d091:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14000d098:	(bad)  
   14000d099:	and    al,0x63
   14000d09b:	push   0x745f7261
   14000d0a0:	jb     0x14000d103
   14000d0a2:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14000d0aa:	je     0x14000d110
   14000d0ac:	rex
   14000d0ad:	rex push rsi
   14000d0af:	(bad)  
   14000d0b0:	and    al,0x61
   14000d0b2:	ins    BYTE PTR es:[rdi],dx
   14000d0b3:	ins    BYTE PTR es:[rdi],dx
   14000d0b4:	outs   dx,DWORD PTR ds:[rsi]
   14000d0b5:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d0b8:	outs   dx,DWORD PTR ds:[rsi]
   14000d0b9:	jb     0x14000d0fb
   14000d0bb:	pop    rdi
   14000d0bc:	push   rdi
   14000d0bd:	xor    al,BYTE PTR [rax+0x40]
   14000d0c1:	jae    0x14000d137
   14000d0c3:	fs rex
   14000d0c5:	rex push rsi
   14000d0c7:	(bad)  
   14000d0c8:	and    al,0x61
   14000d0ca:	ins    BYTE PTR es:[rdi],dx
   14000d0cb:	ins    BYTE PTR es:[rdi],dx
   14000d0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000d0cd:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d0d0:	outs   dx,DWORD PTR ds:[rsi]
   14000d0d1:	jb     0x14000d113
   14000d0d3:	push   rsi
   14000d0d4:	(bad)  
   14000d0d5:	and    al,0x62
   14000d0d7:	(bad)  
   14000d0d8:	jae    0x14000d143
   14000d0da:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000d0dd:	je     0x14000d151
   14000d0df:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14000d0e6:	(bad)  
   14000d0e7:	and    al,0x63
   14000d0e9:	push   0x745f7261
   14000d0ee:	jb     0x14000d151
   14000d0f0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14000d0f8:	je     0x14000d15e
   14000d0fa:	rex
   14000d0fb:	rex push rsi
   14000d0fd:	(bad)  
   14000d0fe:	and    al,0x61
   14000d100:	ins    BYTE PTR es:[rdi],dx
   14000d101:	ins    BYTE PTR es:[rdi],dx
   14000d102:	outs   dx,DWORD PTR ds:[rsi]
   14000d103:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d106:	outs   dx,DWORD PTR ds:[rsi]
   14000d107:	jb     0x14000d149
   14000d109:	pop    rdi
   14000d10a:	push   rdi
   14000d10b:	xor    al,BYTE PTR [rax+0x40]
   14000d10f:	jae    0x14000d185
   14000d111:	fs rex
   14000d113:	rex
   14000d114:	xor    al,BYTE PTR [rax+0x40]
   14000d118:	jae    0x14000d18e
   14000d11a:	fs rex
   14000d11c:	rex push rdi
   14000d11e:	xor    al,0x4a
   14000d120:	(bad)  
   14000d121:	jbe    0x14000d184
   14000d123:	rex.WR
   14000d124:	gs jbe 0x14000d18c
   14000d127:	ins    BYTE PTR es:[rdi],dx
   14000d128:	rex xor DWORD PTR [rax+0x40],eax
   14000d12c:	pop    rdx
   14000d12d:	add    al,bl
   14000d12f:	add    BYTE PTR [rdi],bh
   14000d131:	(bad)  
   14000d132:	xor    DWORD PTR [rbx+0x65],edx
   14000d135:	jae    0x14000d1aa
   14000d137:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   14000d13e:	outs   dx,DWORD PTR ds:[rsi]
   14000d13f:	outs   dx,BYTE PTR ds:[rsi]
   14000d140:	jae    0x14000d182
   14000d142:	ins    DWORD PTR es:[rdi],dx
   14000d143:	jbe    0x14000d1b2
   14000d145:	rex
   14000d146:	rex push rcx
   14000d148:	rex.RB
   14000d149:	rex.B
   14000d14a:	rex.B
   14000d14b:	rex pop rax
   14000d14d:	pop    rdx
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	sahf   
   14000d151:	add    BYTE PTR [rdi],bh
   14000d153:	(bad)  
   14000d154:	xor    BYTE PTR [rax+0x72],dl
   14000d157:	outs   dx,DWORD PTR ds:[rsi]
   14000d158:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d15b:	jae    0x14000d1b0
   14000d15d:	gs jae 0x14000d1d3
   14000d160:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d766d40
   14000d167:	rex
   14000d168:	rex push rcx
   14000d16a:	rex.RB
   14000d16b:	rex.B
   14000d16c:	rex.B
   14000d16d:	rex
   14000d16e:	rex.B
   14000d16f:	rex.RB
   14000d170:	rex.X push rbp
   14000d172:	push   rbx
   14000d173:	gs jae 0x14000d1e9
   14000d176:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   14000d17d:	outs   dx,DWORD PTR ds:[rsi]
   14000d17e:	outs   dx,BYTE PTR ds:[rsi]
   14000d17f:	jae    0x14000d1c1
   14000d181:	xor    DWORD PTR [rax+0x56],eax
   14000d184:	(bad)  
   14000d185:	and    al,0x73
   14000d187:	push   0x64657261
   14000d18c:	pop    rdi
   14000d18d:	jo     0x14000d203
   14000d18f:	jb     0x14000d1d1
   14000d191:	push   rsi
   14000d192:	rex.WX (bad) 
   14000d194:	jbe    0x14000d1f7
   14000d196:	push   rsi
   14000d197:	rex.WRB
   14000d198:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d19a:	outs   dx,BYTE PTR ds:[rsi]
   14000d19b:	imul   sp,WORD PTR [rdi+0x40],0x6f63
   14000d1a1:	outs   dx,BYTE PTR ds:[rsi]
   14000d1a2:	imul   sp,WORD PTR [rdi+0x40],0x6573
   14000d1a8:	jb     0x14000d220
   14000d1aa:	imul   esp,DWORD PTR [rbx+0x65],0x40404073
   14000d1b1:	(bad)  
   14000d1b2:	outs   dx,DWORD PTR ds:[rsi]
   14000d1b3:	outs   dx,DWORD PTR ds:[rsi]
   14000d1b4:	jae    0x14000d22a
   14000d1b6:	rex
   14000d1b7:	rex
   14000d1b8:	rex pop rdx
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	rol    DWORD PTR [rax],cl
   14000d1be:	(bad)  
   14000d1bf:	(bad)  
   14000d1c0:	xor    DWORD PTR [rax+0x72],edx
   14000d1c3:	outs   dx,DWORD PTR ds:[rsi]
   14000d1c4:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d1c7:	jae    0x14000d21c
   14000d1c9:	gs jae 0x14000d23f
   14000d1cc:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d766d40
   14000d1d3:	rex
   14000d1d4:	rex push rbp
   14000d1d6:	rex.RB
   14000d1d7:	rex.B
   14000d1d8:	rex.B
   14000d1d9:	rex pop rax
   14000d1db:	pop    rdx
   14000d1dc:	add    BYTE PTR [rax],al
   14000d1de:	leave  
   14000d1df:	(bad)  
   14000d1e0:	(bad)  
   14000d1e1:	jb     0x14000d258
   14000d1e3:	outs   dx,BYTE PTR ds:[rsi]
   14000d1e4:	rex.WRB (bad) 
   14000d1e6:	je     0x14000d254
   14000d1e8:	(bad)  
   14000d1e9:	(bad)  
   14000d1ea:	rex.R
   14000d1eb:	gs jae 0x14000d259
   14000d1ee:	je     0x14000d25f
   14000d1f0:	jo     0x14000d232
   14000d1f2:	push   rax
   14000d1f3:	jb     0x14000d264
   14000d1f5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d1f8:	jae    0x14000d24d
   14000d1fa:	gs jae 0x14000d270
   14000d1fd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d766d40
   14000d204:	rex
   14000d205:	rex push rbp
   14000d207:	rex.RB
   14000d208:	rex.B
   14000d209:	rex.B
   14000d20a:	rex.W pop rax
   14000d20c:	pop    rdx
   14000d20d:	add    BYTE PTR [rdi+0x2],ch
   14000d210:	(bad)  
   14000d211:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000d214:	je     0x14000d277
   14000d216:	imul   ebp,DWORD PTR [rsi+0x65],0x556f5472
   14000d21d:	jae    0x14000d293
   14000d21f:	jb     0x14000d28a
   14000d221:	outs   dx,BYTE PTR ds:[rsi]
   14000d222:	addr32 rex
   14000d224:	fs gs je 0x14000d289
   14000d228:	imul   ebp,DWORD PTR [rax+rax*2+0x6d],0x40406d76
   14000d230:	pop    rcx
   14000d231:	rex.B (bad) 
   14000d233:	push   r14
   14000d235:	(bad)  
   14000d236:	and    al,0x76
   14000d238:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000d23d:	rex push rsi
   14000d23f:	(bad)  
   14000d240:	and    al,0x62
   14000d242:	(bad)  
   14000d243:	jae    0x14000d2ae
   14000d245:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000d248:	je     0x14000d2bc
   14000d24a:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14000d251:	(bad)  
   14000d252:	and    al,0x63
   14000d254:	push   0x745f7261
   14000d259:	jb     0x14000d2bc
   14000d25b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14000d263:	je     0x14000d2c9
   14000d265:	rex
   14000d266:	rex push rsi
   14000d268:	(bad)  
   14000d269:	and    al,0x61
   14000d26b:	ins    BYTE PTR es:[rdi],dx
   14000d26c:	ins    BYTE PTR es:[rdi],dx
   14000d26d:	outs   dx,DWORD PTR ds:[rsi]
   14000d26e:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d271:	outs   dx,DWORD PTR ds:[rsi]
   14000d272:	jb     0x14000d2b4
   14000d274:	pop    rdi
   14000d275:	push   rdi
   14000d276:	xor    al,BYTE PTR [rax+0x40]
   14000d27a:	jae    0x14000d2f0
   14000d27c:	fs rex
   14000d27e:	rex push rsi
   14000d280:	(bad)  
   14000d281:	and    al,0x61
   14000d283:	ins    BYTE PTR es:[rdi],dx
   14000d284:	ins    BYTE PTR es:[rdi],dx
   14000d285:	outs   dx,DWORD PTR ds:[rsi]
   14000d286:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d289:	outs   dx,DWORD PTR ds:[rsi]
   14000d28a:	jb     0x14000d2cc
   14000d28c:	push   rsi
   14000d28d:	(bad)  
   14000d28e:	and    al,0x62
   14000d290:	(bad)  
   14000d291:	jae    0x14000d2fc
   14000d293:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000d296:	je     0x14000d30a
   14000d298:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14000d29f:	(bad)  
   14000d2a0:	and    al,0x63
   14000d2a2:	push   0x745f7261
   14000d2a7:	jb     0x14000d30a
   14000d2a9:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14000d2b1:	je     0x14000d317
   14000d2b3:	rex
   14000d2b4:	rex push rsi
   14000d2b6:	(bad)  
   14000d2b7:	and    al,0x61
   14000d2b9:	ins    BYTE PTR es:[rdi],dx
   14000d2ba:	ins    BYTE PTR es:[rdi],dx
   14000d2bb:	outs   dx,DWORD PTR ds:[rsi]
   14000d2bc:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d2bf:	outs   dx,DWORD PTR ds:[rsi]
   14000d2c0:	jb     0x14000d302
   14000d2c2:	pop    rdi
   14000d2c3:	push   rdi
   14000d2c4:	xor    al,BYTE PTR [rax+0x40]
   14000d2c8:	jae    0x14000d33e
   14000d2ca:	fs rex
   14000d2cc:	rex
   14000d2cd:	xor    al,BYTE PTR [rax+0x40]
   14000d2d1:	jae    0x14000d347
   14000d2d3:	fs rex
   14000d2d5:	rex
   14000d2d6:	rex.B
   14000d2d7:	rex.RB
   14000d2d8:	rex.X push rsi
   14000d2da:	(bad)  
   14000d2db:	and    al,0x76
   14000d2dd:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000d2e2:	rex push rsi
   14000d2e4:	(bad)  
   14000d2e5:	and    al,0x62
   14000d2e7:	(bad)  
   14000d2e8:	jae    0x14000d353
   14000d2ea:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000d2ed:	je     0x14000d361
   14000d2ef:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000d2f6:	and    al,0x63
   14000d2f8:	push   0x745f7261
   14000d2fd:	jb     0x14000d360
   14000d2ff:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000d307:	fs rex
   14000d309:	rex push rsi
   14000d30b:	(bad)  
   14000d30c:	and    al,0x61
   14000d30e:	ins    BYTE PTR es:[rdi],dx
   14000d30f:	ins    BYTE PTR es:[rdi],dx
   14000d310:	outs   dx,DWORD PTR ds:[rsi]
   14000d311:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d314:	outs   dx,DWORD PTR ds:[rsi]
   14000d315:	jb     0x14000d357
   14000d317:	rex.R
   14000d318:	xor    al,BYTE PTR [rax+0x40]
   14000d31c:	jae    0x14000d392
   14000d31e:	fs rex
   14000d320:	rex push rsi
   14000d322:	(bad)  
   14000d323:	and    al,0x61
   14000d325:	ins    BYTE PTR es:[rdi],dx
   14000d326:	ins    BYTE PTR es:[rdi],dx
   14000d327:	outs   dx,DWORD PTR ds:[rsi]
   14000d328:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d32b:	outs   dx,DWORD PTR ds:[rsi]
   14000d32c:	jb     0x14000d36e
   14000d32e:	push   rsi
   14000d32f:	(bad)  
   14000d330:	and    al,0x62
   14000d332:	(bad)  
   14000d333:	jae    0x14000d39e
   14000d335:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000d338:	je     0x14000d3ac
   14000d33a:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000d341:	and    al,0x63
   14000d343:	push   0x745f7261
   14000d348:	jb     0x14000d3ab
   14000d34a:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000d352:	fs rex
   14000d354:	rex push rsi
   14000d356:	(bad)  
   14000d357:	and    al,0x61
   14000d359:	ins    BYTE PTR es:[rdi],dx
   14000d35a:	ins    BYTE PTR es:[rdi],dx
   14000d35b:	outs   dx,DWORD PTR ds:[rsi]
   14000d35c:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d35f:	outs   dx,DWORD PTR ds:[rsi]
   14000d360:	jb     0x14000d3a2
   14000d362:	rex.R
   14000d363:	xor    al,BYTE PTR [rax+0x40]
   14000d367:	jae    0x14000d3dd
   14000d369:	fs rex
   14000d36b:	rex
   14000d36c:	xor    al,BYTE PTR [rax+0x40]
   14000d370:	xor    al,0x40
   14000d372:	rex pop rdx
   14000d374:	add    BYTE PTR [rax],al
   14000d376:	ins    DWORD PTR es:[rdi],dx
   14000d377:	jbe    0x14000d3e6
   14000d379:	cs fs ins BYTE PTR es:[rdi],dx
   14000d37c:	ins    BYTE PTR es:[rdi],dx
   14000d37d:	add    ah,bl
   14000d37f:	add    eax,0x6765723f
   14000d384:	imul   esi,DWORD PTR [rbx+0x74],0x6d4c7265
   14000d38b:	addr32 jb 0x14000d3ce
   14000d38e:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000d391:	imul   sp,WORD PTR [rdi+0x40],0x6d6c
   14000d397:	addr32 jb 0x14000d3da
   14000d39a:	rex pop rcx
   14000d39c:	pop    r8
   14000d39e:	rex.B
   14000d39f:	rex.RB
   14000d3a0:	rex.X push rsi
   14000d3a2:	(bad)  
   14000d3a3:	and    al,0x62
   14000d3a5:	(bad)  
   14000d3a6:	jae    0x14000d411
   14000d3a8:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000d3ab:	je     0x14000d41f
   14000d3ad:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14000d3b4:	(bad)  
   14000d3b5:	and    al,0x63
   14000d3b7:	push   0x745f7261
   14000d3bc:	jb     0x14000d41f
   14000d3be:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14000d3c6:	je     0x14000d42c
   14000d3c8:	rex
   14000d3c9:	rex push rsi
   14000d3cb:	(bad)  
   14000d3cc:	and    al,0x61
   14000d3ce:	ins    BYTE PTR es:[rdi],dx
   14000d3cf:	ins    BYTE PTR es:[rdi],dx
   14000d3d0:	outs   dx,DWORD PTR ds:[rsi]
   14000d3d1:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d3d4:	outs   dx,DWORD PTR ds:[rsi]
   14000d3d5:	jb     0x14000d417
   14000d3d7:	pop    rdi
   14000d3d8:	push   rdi
   14000d3d9:	xor    al,BYTE PTR [rax+0x40]
   14000d3dd:	jae    0x14000d453
   14000d3df:	fs rex
   14000d3e1:	rex
   14000d3e2:	rex pop rdx
   14000d3e4:	add    BYTE PTR [rax],al
   14000d3e6:	ins    BYTE PTR es:[rdi],dx
   14000d3e7:	imul   esp,DWORD PTR [rdx+0x6d],0x72657377
   14000d3ee:	jbe    0x14000d459
   14000d3f0:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d3f3:	cs fs ins BYTE PTR es:[rdi],dx
   14000d3f6:	ins    BYTE PTR es:[rdi],dx
   14000d3f7:	add    BYTE PTR [rcx],al
   14000d3f9:	add    BYTE PTR [rdi],bh
   14000d3fb:	jae    0x14000d476
   14000d3fd:	jae    0x14000d473
   14000d3ff:	gs ins DWORD PTR es:[rdi],dx
   14000d401:	pop    rdi
   14000d402:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d405:	outs   dx,DWORD PTR gs:[esi]
   14000d408:	jb     0x14000d483
   14000d40a:	rex jae 0x14000d486
   14000d40d:	jae    0x14000d483
   14000d40f:	gs ins DWORD PTR es:[rdi],dx
   14000d411:	rex (bad) 
   14000d413:	outs   dx,DWORD PTR ds:[rsi]
   14000d414:	outs   dx,DWORD PTR ds:[rsi]
   14000d415:	jae    0x14000d48b
   14000d417:	rex
   14000d418:	rex pop rcx
   14000d41a:	rex.B
   14000d41b:	rex.B
   14000d41c:	rex.RB
   14000d41d:	rex.X push rsi
   14000d41f:	gs jb  0x14000d494
   14000d422:	outs   dx,DWORD PTR ds:[rsi]
   14000d423:	jb     0x14000d484
   14000d425:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d428:	outs   dx,DWORD PTR gs:[esi]
   14000d42b:	jb     0x14000d4a6
   14000d42d:	rex xor DWORD PTR [rdx],esi
   14000d430:	rex pop rax
   14000d432:	pop    rdx
   14000d433:	add    BYTE PTR [rax],al
   14000d435:	add    BYTE PTR [rdi],bh
   14000d437:	outs   dx,BYTE PTR gs:[esi]
   14000d43a:	gs jb  0x14000d4a6
   14000d43d:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000d440:	(bad)  
   14000d441:	je     0x14000d4a8
   14000d443:	outs   dx,DWORD PTR ds:[esi]
   14000d445:	jb     0x14000d4c0
   14000d447:	rex jae 0x14000d4c3
   14000d44a:	jae    0x14000d4c0
   14000d44c:	gs ins DWORD PTR es:[rdi],dx
   14000d44e:	rex (bad) 
   14000d450:	outs   dx,DWORD PTR ds:[rsi]
   14000d451:	outs   dx,DWORD PTR ds:[rsi]
   14000d452:	jae    0x14000d4c8
   14000d454:	rex
   14000d455:	rex pop rcx
   14000d457:	rex.B
   14000d458:	rex.B
   14000d459:	rex.RB
   14000d45a:	rex.X push rsi
   14000d45c:	gs jb  0x14000d4d1
   14000d45f:	outs   dx,DWORD PTR ds:[rsi]
   14000d460:	jb     0x14000d4c1
   14000d462:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d465:	outs   dx,DWORD PTR gs:[esi]
   14000d468:	jb     0x14000d4e3
   14000d46a:	rex xor DWORD PTR [rdx],esi
   14000d46d:	rex pop rax
   14000d46f:	pop    rdx
   14000d470:	add    BYTE PTR [rax],al
   14000d472:	(bad)  
   14000d473:	outs   dx,DWORD PTR ds:[rsi]
   14000d474:	outs   dx,DWORD PTR ds:[rsi]
   14000d475:	jae    0x14000d4eb
   14000d477:	pop    rdi
   14000d478:	jae    0x14000d4f3
   14000d47a:	jae    0x14000d4f0
   14000d47c:	gs ins DWORD PTR es:[rdi],dx
   14000d47e:	sub    eax,0x32316376
   14000d483:	xor    BYTE PTR [rip+0x312d746d],ch        # 0x1712e48f6
   14000d489:	pop    rdi
   14000d48a:	xor    eax,0x6c642e36
   14000d48f:	ins    BYTE PTR es:[rdi],dx
   14000d490:	add    BYTE PTR [rax],al
   14000d492:	mov    bl,0x0
   14000d494:	rex.XB jb 0x14000d4fc
   14000d497:	(bad)  
   14000d498:	je     0x14000d4ff
   14000d49a:	rex.RB jbe 0x14000d502
   14000d49d:	outs   dx,BYTE PTR ds:[rsi]
   14000d49e:	je     0x14000d4e1
   14000d4a0:	add    BYTE PTR [rax],al
   14000d4a2:	jg     0x14000d4a4
   14000d4a4:	rex.XB ins BYTE PTR es:[rdi],dx
   14000d4a6:	outs   dx,DWORD PTR ds:[rsi]
   14000d4a7:	jae    0x14000d50e
   14000d4a9:	rex.W (bad) 
   14000d4ab:	outs   dx,BYTE PTR ds:[rsi]
   14000d4ac:	fs ins BYTE PTR es:[rdi],dx
   14000d4ae:	gs add bh,bh
   14000d4b1:	add    al,0x53
   14000d4b3:	gs je  0x14000d4fb
   14000d4b6:	jbe    0x14000d51d
   14000d4b8:	outs   dx,BYTE PTR ds:[rsi]
   14000d4b9:	je     0x14000d4bb
   14000d4bb:	add    BYTE PTR [rbx+0x45],cl
   14000d4be:	push   rdx
   14000d4bf:	rex.WRX
   14000d4c0:	rex.RB
   14000d4c1:	xor    r14,QWORD PTR [rdx]
   14000d4c4:	cs fs ins BYTE PTR es:[rdi],dx
   14000d4c7:	ins    BYTE PTR es:[rdi],dx
   14000d4c8:	add    BYTE PTR [rax],al
   14000d4ca:	leave  
   14000d4cb:	add    bh,BYTE PTR [rdi]
   14000d4cd:	pop    rdi
   14000d4ce:	pop    rax
   14000d4cf:	(bad)
   14000d4d4:	ins    BYTE PTR es:[rdi],dx
   14000d4d5:	ins    BYTE PTR es:[rdi],dx
   14000d4d6:	outs   dx,DWORD PTR ds:[rsi]
   14000d4d7:	movsxd eax,DWORD PTR [rax+0x73]
   14000d4da:	je     0x14000d540
   14000d4dc:	rex
   14000d4dd:	rex pop rcx
   14000d4df:	pop    r8
   14000d4e1:	pop    rax
   14000d4e2:	pop    rdx
   14000d4e3:	add    ah,cl
   14000d4e5:	add    bh,BYTE PTR [rdi]
   14000d4e7:	pop    rdi
   14000d4e8:	pop    rax
   14000d4e9:	ins    BYTE PTR es:[rdi],dx
   14000d4ea:	outs   dx,BYTE PTR gs:[rsi]
   14000d4ec:	addr32 je 0x14000d557
   14000d4ef:	pop    rdi
   14000d4f0:	gs jb  0x14000d565
   14000d4f3:	outs   dx,DWORD PTR ds:[rsi]
   14000d4f4:	jb     0x14000d536
   14000d4f6:	jae    0x14000d56c
   14000d4f8:	fs rex
   14000d4fa:	rex pop rcx
   14000d4fc:	pop    r8
   14000d4fe:	push   rax
   14000d4ff:	rex.RB
   14000d500:	rex.X
   14000d501:	rex.R
   14000d502:	rex pop rdx
   14000d504:	add    BYTE PTR [rax],al
   14000d506:	int    0x2
   14000d508:	(bad)  
   14000d509:	pop    rdi
   14000d50a:	pop    rax
   14000d50b:	outs   dx,DWORD PTR ds:[rsi]
   14000d50c:	jne    0x14000d582
   14000d50e:	pop    rdi
   14000d50f:	outs   dx,DWORD PTR ds:[rsi]
   14000d510:	pop    di
   14000d512:	jb     0x14000d575
   14000d514:	outs   dx,BYTE PTR ds:[rsi]
   14000d515:	addr32 gs rex jae 0x14000d58e
   14000d51a:	fs rex
   14000d51c:	rex pop rcx
   14000d51e:	pop    r8
   14000d520:	push   rax
   14000d521:	rex.RB
   14000d522:	rex.X
   14000d523:	rex.R
   14000d524:	rex pop rdx
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	mov    al,0x2
   14000d52a:	(bad)  
   14000d52b:	pop    rdi
   14000d52c:	push   rbx
   14000d52d:	jns    0x14000d5a2
   14000d52f:	gs jb  0x14000d5a4
   14000d532:	outs   dx,DWORD PTR ds:[rsi]
   14000d533:	jb     0x14000d594
   14000d535:	ins    DWORD PTR es:[rdi],dx
   14000d536:	(bad)  
   14000d537:	jo     0x14000d579
   14000d539:	jae    0x14000d5af
   14000d53b:	fs rex
   14000d53d:	rex pop rcx
   14000d53f:	push   r8
   14000d541:	rex.RB
   14000d542:	rex.X
   14000d543:	rex.R
   14000d544:	rex.W
   14000d545:	rex pop rdx
   14000d547:	add    ch,al
   14000d549:	add    bh,BYTE PTR [rdi]
   14000d54b:	pop    rdi
   14000d54c:	push   rdi
   14000d54d:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   14000d554:	pop    rdi
   14000d555:	ins    DWORD PTR es:[rdi],dx
   14000d556:	(bad)  
   14000d557:	jo     0x14000d599
   14000d559:	jae    0x14000d5cf
   14000d55b:	fs rex
   14000d55d:	rex pop rcx
   14000d55f:	push   r8
   14000d561:	rex.RB
   14000d562:	rex.X
   14000d563:	rex.R
   14000d564:	rex.W
   14000d565:	rex pop rdx
   14000d567:	add    BYTE PTR [rbp+0x53],cl
   14000d56a:	push   rsi
   14000d56b:	rex.XB push r8
   14000d56d:	xor    DWORD PTR [rdx],esi
   14000d56f:	xor    BYTE PTR [rsi],ch
   14000d571:	fs ins BYTE PTR es:[rdi],dx
   14000d573:	ins    BYTE PTR es:[rdi],dx
   14000d574:	add    BYTE PTR [rax],al
   14000d576:	(bad)  
   14000d577:	add    al,0x5f
   14000d579:	jo     0x14000d5f0
   14000d57b:	jb     0x14000d5e2
   14000d57d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d580:	ins    BYTE PTR es:[rdi],dx
   14000d581:	add    BYTE PTR [rax+0x0],dh
   14000d584:	(bad)  
   14000d585:	(bad)  
   14000d586:	xor    al,BYTE PTR [rax+0x59]
   14000d589:	push   r8
   14000d58b:	rex.RB
   14000d58c:	pop    r8
   14000d58e:	pop    rdi
   14000d58f:	rex.WXB
   14000d590:	rex pop rdx
   14000d592:	add    BYTE PTR [rax],al
   14000d594:	jb     0x14000d596
   14000d596:	(bad)  
   14000d597:	(bad)  
   14000d598:	xor    eax,DWORD PTR [rax+0x59]
   14000d59b:	pop    r8
   14000d59d:	push   rax
   14000d59e:	rex.RB
   14000d59f:	pop    r8
   14000d5a1:	rex pop rdx
   14000d5a3:	add    dl,bl
   14000d5a5:	add    bl,BYTE PTR [rdi+0x68]
   14000d5a8:	jns    0x14000d61a
   14000d5aa:	outs   dx,DWORD PTR ds:[rsi]
   14000d5ab:	je     0x14000d5ad
   14000d5ad:	add    BYTE PTR [rdi+0x6d656d06],dh
   14000d5b3:	ins    DWORD PTR es:[rdi],dx
   14000d5b4:	outs   dx,DWORD PTR ds:[rsi]
   14000d5b5:	jbe    0x14000d61c
   14000d5b7:	add    BYTE PTR [rdx],ch
   14000d5b9:	add    BYTE PTR [rdi],bh
   14000d5bb:	(bad)  
   14000d5bc:	xor    BYTE PTR [rbp+0x78],ah
   14000d5bf:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d5c2:	je     0x14000d62d
   14000d5c4:	outs   dx,DWORD PTR ds:[rsi]
   14000d5c5:	outs   dx,BYTE PTR ds:[rsi]
   14000d5c6:	rex jae 0x14000d63d
   14000d5c9:	fs rex
   14000d5cb:	rex push rcx
   14000d5cd:	rex.RB
   14000d5ce:	rex.B
   14000d5cf:	rex.B
   14000d5d0:	rex
   14000d5d1:	rex.B
   14000d5d2:	rex.RB
   14000d5d3:	rex.X push rcx
   14000d5d5:	rex.RB
   14000d5d6:	rex.X
   14000d5d7:	rex.R
   14000d5d8:	rex pop rdx
   14000d5da:	add    BYTE PTR [rax],al
   14000d5dc:	sub    eax,DWORD PTR [rax]
   14000d5de:	(bad)  
   14000d5df:	(bad)  
   14000d5e0:	xor    BYTE PTR [rbp+0x78],ah
   14000d5e3:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d5e6:	je     0x14000d651
   14000d5e8:	outs   dx,DWORD PTR ds:[rsi]
   14000d5e9:	outs   dx,BYTE PTR ds:[rsi]
   14000d5ea:	rex jae 0x14000d661
   14000d5ed:	fs rex
   14000d5ef:	rex push rcx
   14000d5f1:	rex.RB
   14000d5f2:	rex.B
   14000d5f3:	rex.B
   14000d5f4:	rex
   14000d5f5:	rex.B
   14000d5f6:	rex.RB
   14000d5f7:	rex.X push rcx
   14000d5f9:	rex.RB
   14000d5fa:	rex.X
   14000d5fb:	rex.R
   14000d5fc:	rex.W
   14000d5fd:	rex pop rdx
   14000d5ff:	add    BYTE PTR [rax+rax*1],ch
   14000d602:	(bad)  
   14000d603:	(bad)  
   14000d604:	xor    BYTE PTR [rbp+0x78],ah
   14000d607:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d60a:	je     0x14000d675
   14000d60c:	outs   dx,DWORD PTR ds:[rsi]
   14000d60d:	outs   dx,BYTE PTR ds:[rsi]
   14000d60e:	rex jae 0x14000d685
   14000d611:	fs rex
   14000d613:	rex push rcx
   14000d615:	rex.RB
   14000d616:	rex.B
   14000d617:	rex.B
   14000d618:	rex
   14000d619:	rex.B
   14000d61a:	rex.RB
   14000d61b:	rex.X push rsi
   14000d61d:	xor    BYTE PTR [rcx],dh
   14000d61f:	rex
   14000d620:	rex pop rdx
   14000d622:	add    BYTE PTR [rax],al
   14000d624:	push   0x0
   14000d626:	(bad)  
   14000d627:	(bad)  
   14000d628:	xor    DWORD PTR [rbp+0x78],esp
   14000d62b:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d62e:	je     0x14000d699
   14000d630:	outs   dx,DWORD PTR ds:[rsi]
   14000d631:	outs   dx,BYTE PTR ds:[rsi]
   14000d632:	rex jae 0x14000d6a9
   14000d635:	fs rex
   14000d637:	rex push rbp
   14000d639:	rex.RB
   14000d63a:	rex.B
   14000d63b:	rex.B
   14000d63c:	rex pop rax
   14000d63e:	pop    rdx
   14000d63f:	add    BYTE PTR [rax+0x1],al
   14000d642:	(bad)  
   14000d643:	ja     0x14000d6ad
   14000d645:	(bad)  
   14000d646:	je     0x14000d688
   14000d648:	gs js  0x14000d6ae
   14000d64b:	gs jo  0x14000d6c2
   14000d64e:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000d655:	rex
   14000d656:	rex push rbp
   14000d658:	rex.RB
   14000d659:	rex.X
   14000d65a:	push   r8
   14000d65c:	rex.RB
   14000d65d:	rex.X
   14000d65e:	rex.R pop rax
   14000d660:	pop    rdx
   14000d661:	add    BYTE PTR [rcx+0x5f3f3f00],cl
   14000d667:	push   rsi
   14000d668:	rex pop rcx
   14000d66a:	pop    r8
   14000d66c:	push   rax
   14000d66d:	rex.RB
   14000d66e:	pop    r8
   14000d670:	rex pop rdx
   14000d672:	add    BYTE PTR [rax],al
   14000d674:	add    DWORD PTR [r15+0x43],r11d
   14000d678:	js     0x14000d6f2
   14000d67a:	push   rsp
   14000d67b:	push   0x45776f72
   14000d680:	js     0x14000d6e5
   14000d682:	gs jo  0x14000d6f9
   14000d685:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   14000d68c:	pop    rdi
   14000d68d:	pop    rdi
   14000d68e:	rex.XB js 0x14000d709
   14000d691:	rex.RX jb 0x14000d6f5
   14000d694:	ins    DWORD PTR es:[rdi],dx
   14000d695:	gs rex.W (bad) 
   14000d698:	outs   dx,BYTE PTR ds:[rsi]
   14000d699:	fs ins BYTE PTR es:[rdi],dx
   14000d69b:	gs jb  0x14000d6d1
   14000d69e:	add    BYTE PTR [rax],al
   14000d6a0:	mov    ch,0x6
   14000d6a2:	ins    DWORD PTR es:[rdi],dx
   14000d6a3:	gs ins DWORD PTR es:[rdi],dx
   14000d6a5:	movsxd esi,DWORD PTR [rax+0x79]
   14000d6a8:	add    BYTE PTR [rax],al
   14000d6aa:	js     0x14000d6ad
   14000d6ac:	pop    rdi
   14000d6ad:	pop    rdi
   14000d6ae:	(bad)  
   14000d6af:	jb     0x14000d718
   14000d6b1:	movsxd eax,DWORD PTR [rax]
   14000d6b3:	add    BYTE PTR [rcx+0x1],bh
   14000d6b6:	pop    rdi
   14000d6b7:	pop    rdi
   14000d6b8:	(bad)  
   14000d6b9:	jb     0x14000d722
   14000d6bb:	jbe    0x14000d6bd
   14000d6bd:	add    BYTE PTR [rbx],dh
   14000d6bf:	add    DWORD PTR [rdi],edi
   14000d6c1:	je     0x14000d728
   14000d6c3:	jb     0x14000d732
   14000d6c5:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000d6cc:	pop    rcx
   14000d6cd:	pop    r8
   14000d6cf:	pop    rax
   14000d6d0:	pop    rdx
   14000d6d1:	add    BYTE PTR [rcx+rax*1+0x5f],bl
   14000d6d5:	pop    rdi
   14000d6d6:	rex.XB pop r15
   14000d6d8:	jae    0x14000d74a
   14000d6da:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000d6de:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000d6e5:	ins    BYTE PTR es:[rdi],dx
   14000d6e6:	gs jb  0x14000d6e9
   14000d6e9:	add    BYTE PTR [rbp+0x53],cl
   14000d6ec:	push   rsi
   14000d6ed:	rex.XB push r10
   14000d6ef:	xor    DWORD PTR [rdx],esi
   14000d6f1:	xor    BYTE PTR [rsi],ch
   14000d6f3:	fs ins BYTE PTR es:[rdi],dx
   14000d6f5:	ins    BYTE PTR es:[rdi],dx
   14000d6f6:	add    BYTE PTR [rax],al
   14000d6f8:	pop    rbx
   14000d6f9:	add    ebx,DWORD PTR [rdi+0x6c]
   14000d6fc:	outs   dx,DWORD PTR ds:[rsi]
   14000d6fd:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d700:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14000d707:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d70a:	or     DWORD PTR [rdx],eax
   14000d70c:	pop    rdi
   14000d70d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d710:	ins    BYTE PTR es:[rdi],dx
   14000d711:	outs   dx,DWORD PTR ds:[rsi]
   14000d712:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000d715:	jb     0x14000d78b
   14000d717:	add    BYTE PTR [rdi+0x645f5f01],bl
   14000d71d:	ins    BYTE PTR es:[rdi],dx
   14000d71e:	ins    BYTE PTR es:[rdi],dx
   14000d71f:	outs   dx,DWORD PTR ds:[rsi]
   14000d720:	outs   dx,BYTE PTR ds:[rsi]
   14000d721:	gs js  0x14000d78d
   14000d724:	je     0x14000d726
   14000d726:	add    al,BYTE PTR [rdi+rbx*2]
   14000d729:	outs   dx,DWORD PTR ds:[rsi]
   14000d72a:	outs   dx,BYTE PTR ds:[rsi]
   14000d72b:	gs js  0x14000d797
   14000d72e:	je     0x14000d730
   14000d730:	pop    rax
   14000d731:	add    DWORD PTR [rdi+0x58],ebx
   14000d734:	movsxd esi,DWORD PTR [rax+0x74]
   14000d737:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x18d0072
   14000d740:	pop    rdi
   14000d741:	pop    rdi
   14000d742:	movsxd esi,DWORD PTR [rdx+0x74]
   14000d745:	rex.RXB
   14000d746:	gs je  0x14000d79c
   14000d749:	push   0x6957776f
   14000d74e:	outs   dx,BYTE PTR ds:[rsi]
   14000d74f:	outs   dx,DWORD PTR fs:[rsi]
   14000d751:	ja     0x14000d7a0
   14000d753:	outs   dx,DWORD PTR ds:[rsi]
   14000d754:	fs add BYTE PTR gs:[rax],al
   14000d758:	repnz add DWORD PTR [rdi+0x61],ebx
   14000d75c:	ins    DWORD PTR es:[rdi],dx
   14000d75d:	jae    0x14000d7c6
   14000d75f:	pop    rdi
   14000d760:	gs js  0x14000d7cc
   14000d763:	je     0x14000d765
   14000d765:	add    BYTE PTR [rdi+0x675f5f01],ah
   14000d76b:	gs je  0x14000d7db
   14000d76e:	(bad)  
   14000d76f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000d776:	(bad)  
   14000d777:	add    DWORD PTR [rdi+0x5f],ebx
   14000d77a:	jae    0x14000d7e1
   14000d77c:	je     0x14000d7dd
   14000d77e:	(bad)  
   14000d77f:	jo     0x14000d7f1
   14000d781:	pop    rdi
   14000d782:	je     0x14000d7fd
   14000d784:	jo     0x14000d7eb
   14000d786:	add    BYTE PTR [rax],al
   14000d788:	sbb    BYTE PTR [rsi],al
   14000d78a:	gs js  0x14000d7f6
   14000d78d:	je     0x14000d78f
   14000d78f:	add    BYTE PTR [rax+0x2],bl
   14000d792:	pop    rdi
   14000d793:	gs js  0x14000d7ff
   14000d796:	je     0x14000d798
   14000d798:	or     al,BYTE PTR [rdx]
   14000d79a:	pop    rdi
   14000d79b:	movsxd esp,DWORD PTR [rbp+0x78]
   14000d79e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0303
   14000d7a6:	jae    0x14000d815
   14000d7a8:	(bad)
   14000d7ad:	add    BYTE PTR fs:[rax],al
   14000d7b0:	sbb    al,BYTE PTR [rdx]
   14000d7b2:	pop    rdi
   14000d7b3:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000d7b6:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000d7bc:	gs (bad) 
   14000d7be:	fs ins BYTE PTR es:[rdi],dx
   14000d7c0:	outs   dx,DWORD PTR ds:[rsi]
   14000d7c1:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d7c4:	gs add al,dl
   14000d7c7:	add    DWORD PTR [rdi+0x5f],ebx
   14000d7ca:	jae    0x14000d831
   14000d7cc:	je     0x14000d843
   14000d7ce:	jae    0x14000d835
   14000d7d0:	jb     0x14000d83f
   14000d7d2:	(bad)  
   14000d7d3:	je     0x14000d83d
   14000d7d5:	gs jb  0x14000d84a
   14000d7d8:	add    BYTE PTR [rax],al
   14000d7da:	loop   0x14000d7de
   14000d7dc:	pop    rdi
   14000d7dd:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000d7e4:	ins    DWORD PTR es:[rdi],dx
   14000d7e5:	pop    rdi
   14000d7e6:	gs add cl,ah
   14000d7e9:	add    bl,BYTE PTR [rdi+0x69]
   14000d7ec:	outs   dx,BYTE PTR ds:[rsi]
   14000d7ed:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xe9006d72
   14000d7f5:	add    DWORD PTR [rdi+0x61],ebx
   14000d7f8:	movsxd ebp,DWORD PTR [rbp+0x64]
   14000d7fb:	ins    BYTE PTR es:[rdi],dx
   14000d7fc:	outs   dx,BYTE PTR ds:[rsi]
   14000d7fd:	add    BYTE PTR [rax+0x2],bh
   14000d800:	pop    rdi
   14000d801:	ins    WORD PTR es:[rdi],dx
   14000d803:	outs   dx,DWORD PTR ds:[rsi]
   14000d804:	fs add BYTE PTR gs:[rax],al
   14000d808:	sbb    DWORD PTR [rdx],eax
   14000d80a:	pop    rdi
   14000d80b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d80e:	ins    DWORD PTR es:[rdi],dx
   14000d80f:	outs   dx,DWORD PTR ds:[rsi]
   14000d810:	fs add BYTE PTR gs:[rax],al
   14000d814:	sbb    eax,DWORD PTR [rcx]
   14000d816:	(bad)  
   14000d817:	pop    rdi
   14000d818:	je     0x14000d893
   14000d81a:	jo     0x14000d881
   14000d81c:	pop    rdi
   14000d81d:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14000d824:	outs   dx,DWORD PTR ds:[rsi]
   14000d825:	jb     0x14000d886
   14000d827:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000d82e:	ins    BYTE PTR es:[rdi],dx
   14000d82f:	pop    rdi
   14000d830:	ins    DWORD PTR es:[rdi],dx
   14000d831:	gs je  0x14000d89c
   14000d834:	outs   dx,DWORD PTR ds:[rsi]
   14000d835:	fs rex je 0x14000d8b2
   14000d839:	jo     0x14000d8a0
   14000d83b:	pop    rdi
   14000d83c:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14000d843:	rex.RB
   14000d844:	rex.B
   14000d845:	pop    r8
   14000d847:	pop    rax
   14000d848:	pop    rdx
   14000d849:	add    BYTE PTR [rcx+0x635f5f01],bl
   14000d84f:	jb     0x14000d8c5
   14000d851:	push   rbx
   14000d852:	gs je  0x14000d8aa
   14000d855:	outs   dx,BYTE PTR ds:[rsi]
   14000d856:	push   0x6c646e61
   14000d85b:	gs fs rex.RB js 0x14000d8c3
   14000d860:	gs jo  0x14000d8d7
   14000d863:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d86a:	gs jb  0x14000d86d
   14000d86d:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36f1d74
   14000d873:	outs   dx,DWORD PTR ds:[rsi]
   14000d874:	fs gs push rax
   14000d877:	outs   dx,DWORD PTR ds:[rsi]
   14000d878:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   14000d87f:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000d883:	outs   dx,DWORD PTR ds:[rsi]
   14000d884:	fs gs push rax
   14000d887:	outs   dx,DWORD PTR ds:[rsi]
   14000d888:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   14000d88f:	add    al,0x51
   14000d891:	jne    0x14000d8f8
   14000d893:	jb     0x14000d90e
   14000d895:	push   rax
   14000d896:	gs jb  0x14000d8ff
   14000d899:	outs   dx,DWORD PTR ds:[rsi]
   14000d89a:	jb     0x14000d909
   14000d89c:	(bad)  
   14000d89d:	outs   dx,BYTE PTR ds:[rsi]
   14000d89e:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d8a1:	outs   dx,DWORD PTR ds:[rsi]
   14000d8a2:	jne    0x14000d912
   14000d8a4:	je     0x14000d90b
   14000d8a6:	jb     0x14000d8a8
   14000d8a8:	adc    BYTE PTR [rdx],al
   14000d8aa:	rex.RXB
   14000d8ab:	gs je  0x14000d8f1
   14000d8ae:	jne    0x14000d922
   14000d8b0:	jb     0x14000d917
   14000d8b2:	outs   dx,BYTE PTR ds:[rsi]
   14000d8b3:	je     0x14000d905
   14000d8b5:	jb     0x14000d926
   14000d8b7:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d8ba:	jae    0x14000d905
   14000d8bc:	add    BYTE PTR fs:[rdx+rax*1],dl
   14000d8c0:	rex.RXB
   14000d8c1:	gs je  0x14000d907
   14000d8c4:	jne    0x14000d938
   14000d8c6:	jb     0x14000d92d
   14000d8c8:	outs   dx,BYTE PTR ds:[rsi]
   14000d8c9:	je     0x14000d91f
   14000d8cb:	push   0x64616572
   14000d8d0:	rex.WB
   14000d8d1:	add    BYTE PTR fs:[rax],al
   14000d8d4:	fld    QWORD PTR [rdx]
   14000d8d6:	rex.RXB
   14000d8d7:	gs je  0x14000d92d
   14000d8da:	jns    0x14000d94f
   14000d8dc:	je     0x14000d943
   14000d8de:	ins    DWORD PTR es:[rdi],dx
   14000d8df:	push   rsp
   14000d8e0:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000d8e7:	ins    BYTE PTR es:[rdi],dx
   14000d8e8:	gs push rsp
   14000d8ea:	.byte 0x69
   14000d8eb:	ins    DWORD PTR es:[rdi],dx
   14000d8ec:	gs
	...

Disassembly of section .data:

000000014000e000 <.data>:
   14000e000:	jo     0x14000df9b
   14000e002:	add    BYTE PTR [rax+0x1],al
   14000e005:	add    BYTE PTR [rax],al
   14000e007:	add    al,al
   14000e009:	cdq    
   14000e00a:	add    BYTE PTR [rax+0x1],al
   14000e00d:	add    BYTE PTR [rax],al
   14000e00f:	add    BYTE PTR [rax],ah
   14000e011:	(bad)  
   14000e012:	add    BYTE PTR [rax+0x1],al
   14000e015:	add    BYTE PTR [rax],al
   14000e017:	add    al,dh
   14000e019:	sahf   
   14000e01a:	add    BYTE PTR [rax+0x1],al
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    BYTE PTR [rax],al
   14000e021:	lahf   
   14000e022:	add    BYTE PTR [rax+0x1],al
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rax],dl
   14000e029:	lahf   
   14000e02a:	add    BYTE PTR [rax+0x1],al
   14000e02d:	add    BYTE PTR [rax],al
   14000e02f:	add    BYTE PTR [rbp-0x68],dh
   14000e032:	add    BYTE PTR [rax],al
   14000e034:	add    DWORD PTR [rax],eax
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	(bad)  
   14000e039:	(bad)  
   14000e03a:	(bad)  
   14000e03b:	(bad)  
   14000e03c:	(bad)  
   14000e03d:	(bad)  
   14000e03e:	(bad)  
   14000e03f:	push   QWORD PTR [rdx]
   14000e041:	movabs ds:0x5dcd00002b992ddf,al
   14000e04a:	and    dl,dl
   14000e04c:	data16 (bad) 
   14000e04e:	(bad)  
   14000e04f:	push   QWORD PTR [rax]
   14000e051:	lahf   
   14000e052:	add    BYTE PTR [rax+0x1],al
	...
   14000e05d:	add    BYTE PTR [rax],al
   14000e05f:	add    BYTE PTR [rsi],ch
   14000e061:	(bad)  
   14000e062:	push   r14
   14000e064:	jb     0x14000e0db
   14000e066:	outs   dx,BYTE PTR ds:[rsi]
   14000e067:	je     0x14000e0d2
   14000e069:	ins    DWORD PTR es:[rdi],dx
   14000e06a:	gs pop rdi
   14000e06c:	gs jb  0x14000e0e1
   14000e06f:	outs   dx,DWORD PTR ds:[rsi]
   14000e070:	jb     0x14000e0b2
   14000e072:	jae    0x14000e0e8
   14000e074:	fs rex
   14000e076:	add    BYTE PTR [rax],sil
   14000e079:	lahf   
   14000e07a:	add    BYTE PTR [rax+0x1],al
	...
   14000e085:	add    BYTE PTR [rax],al
   14000e087:	add    BYTE PTR [rsi],ch
   14000e089:	(bad)  
   14000e08a:	push   r14
   14000e08c:	gs js  0x14000e0f2
   14000e08f:	gs jo  0x14000e106
   14000e092:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000e099:	rex
   14000e09a:	add    BYTE PTR [rax],al
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    BYTE PTR [rax],dh
   14000e0a1:	lahf   
   14000e0a2:	add    BYTE PTR [rax+0x1],al
	...
   14000e0ad:	add    BYTE PTR [rax],al
   14000e0af:	add    BYTE PTR [rsi],ch
   14000e0b1:	(bad)  
   14000e0b2:	push   r14
   14000e0b4:	gs js  0x14000e11a
   14000e0b7:	gs jo  0x14000e12e
   14000e0ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f6240
   14000e0c1:	jae    0x14000e137
   14000e0c3:	rex
   14000e0c4:	add    BYTE PTR [rax],al
   14000e0c7:	add    BYTE PTR [rax],dh
   14000e0c9:	lahf   
   14000e0ca:	add    BYTE PTR [rax+0x1],al
	...
   14000e0d5:	add    BYTE PTR [rax],al
   14000e0d7:	add    BYTE PTR [rsi],ch
   14000e0d9:	(bad)  
   14000e0da:	push   r14
   14000e0dc:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x6e]
   14000e0e0:	gs pop rdi
   14000e0e2:	(bad)  
   14000e0e4:	jae    0x14000e14b
   14000e0e6:	rex
   14000e0e7:	gs js  0x14000e14d
   14000e0ea:	gs jo  0x14000e161
   14000e0ed:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e0f4:	(bad)  
   14000e0f5:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e0fd:	rex
   14000e0fe:	add    BYTE PTR [rax],sil
   14000e101:	lahf   
   14000e102:	add    BYTE PTR [rax+0x1],al
	...
   14000e10d:	add    BYTE PTR [rax],al
   14000e10f:	add    BYTE PTR [rsi],ch
   14000e111:	(bad)  
   14000e112:	push   r14
   14000e114:	(bad)
   14000e119:	ins    BYTE PTR es:[rdi],dx
   14000e11a:	ins    BYTE PTR es:[rdi],dx
   14000e11b:	outs   dx,DWORD PTR ds:[rsi]
   14000e11c:	movsxd eax,DWORD PTR [rax+0x73]
   14000e11f:	je     0x14000e185
   14000e121:	rex
   14000e122:	add    BYTE PTR [rax],al
   14000e125:	add    BYTE PTR [rax],al
   14000e127:	add    BYTE PTR [rax],dh
   14000e129:	lahf   
   14000e12a:	add    BYTE PTR [rax+0x1],al
	...
   14000e135:	add    BYTE PTR [rax],al
   14000e137:	add    BYTE PTR [rsi],ch
   14000e139:	(bad)  
   14000e13a:	push   r14
   14000e13c:	(bad)
   14000e141:	js     0x14000e1a6
   14000e143:	gs jo  0x14000e1ba
   14000e146:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000e14d:	rex
   14000e14e:	add    BYTE PTR [rax],sil
   14000e151:	lahf   
   14000e152:	add    BYTE PTR [rax+0x1],al
	...
   14000e15d:	add    BYTE PTR [rax],al
   14000e15f:	add    BYTE PTR [rsi],ch
   14000e161:	(bad)  
   14000e162:	push   r14
   14000e164:	(bad)  
   14000e165:	and    al,0x63
   14000e167:	ins    BYTE PTR es:[rdi],dx
   14000e168:	outs   dx,DWORD PTR ds:[rsi]
   14000e169:	outs   dx,BYTE PTR ds:[rsi]
   14000e16a:	gs pop rdi
   14000e16c:	imul   ebp,DWORD PTR [rbp+0x70],0x3f55406c
   14000e173:	and    al,0x65
   14000e175:	jb     0x14000e1e9
   14000e177:	outs   dx,DWORD PTR ds:[rsi]
   14000e178:	jb     0x14000e1d9
   14000e17a:	imul   ebp,DWORD PTR [rsi+0x66],0x6e695f6f
   14000e181:	push   0x65
   14000e183:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000e187:	rex push rsi
   14000e189:	je     0x14000e1f3
   14000e18b:	jb     0x14000e1f2
   14000e18d:	(bad)  
   14000e18e:	fs pop rdi
   14000e190:	jb     0x14000e1f7
   14000e192:	jae    0x14000e203
   14000e194:	jne    0x14000e208
   14000e196:	movsxd esp,DWORD PTR [rbp+0x5f]
   14000e199:	gs jb  0x14000e20e
   14000e19c:	outs   dx,DWORD PTR ds:[rsi]
   14000e19d:	jb     0x14000e1df
   14000e19f:	(bad)  
   14000e1a0:	outs   dx,DWORD PTR ds:[rsi]
   14000e1a1:	outs   dx,DWORD PTR ds:[rsi]
   14000e1a2:	jae    0x14000e218
   14000e1a4:	rex
   14000e1a5:	rex
   14000e1a6:	rex
   14000e1a7:	gs js  0x14000e20d
   14000e1aa:	gs jo  0x14000e221
   14000e1ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e1b4:	(bad)  
   14000e1b5:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e1bd:	rex
   14000e1be:	rex
   14000e1bf:	rex
   14000e1c0:	gs js  0x14000e226
   14000e1c3:	gs jo  0x14000e23a
   14000e1c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e1cd:	(bad)  
   14000e1ce:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e1d6:	rex
   14000e1d7:	add    BYTE PTR [rax],al
   14000e1da:	add    BYTE PTR [rax],al
   14000e1dc:	add    BYTE PTR [rax],al
   14000e1de:	add    BYTE PTR [rax],al
   14000e1e0:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e1ee:	add    BYTE PTR [rax],al
   14000e1f0:	cs (bad) 
   14000e1f2:	push   r13
   14000e1f4:	(bad)  
   14000e1f5:	and    al,0x65
   14000e1f7:	jb     0x14000e26b
   14000e1f9:	outs   dx,DWORD PTR ds:[rsi]
   14000e1fa:	jb     0x14000e25b
   14000e1fc:	imul   ebp,DWORD PTR [rsi+0x66],0x6e695f6f
   14000e203:	push   0x65
   14000e205:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000e209:	rex push rsi
   14000e20b:	je     0x14000e275
   14000e20d:	jb     0x14000e274
   14000e20f:	(bad)  
   14000e210:	fs pop rdi
   14000e212:	jb     0x14000e279
   14000e214:	jae    0x14000e285
   14000e216:	jne    0x14000e28a
   14000e218:	movsxd esp,DWORD PTR [rbp+0x5f]
   14000e21b:	gs jb  0x14000e290
   14000e21e:	outs   dx,DWORD PTR ds:[rsi]
   14000e21f:	jb     0x14000e261
   14000e221:	(bad)  
   14000e222:	outs   dx,DWORD PTR ds:[rsi]
   14000e223:	outs   dx,DWORD PTR ds:[rsi]
   14000e224:	jae    0x14000e29a
   14000e226:	rex
   14000e227:	rex
   14000e228:	rex
   14000e229:	gs js  0x14000e28f
   14000e22c:	gs jo  0x14000e2a3
   14000e22f:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e236:	(bad)  
   14000e237:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e23f:	rex
   14000e240:	add    BYTE PTR [rax],al
   14000e243:	add    BYTE PTR [rax],al
   14000e245:	add    BYTE PTR [rax],al
   14000e247:	add    BYTE PTR [rax],dh
   14000e249:	lahf   
   14000e24a:	add    BYTE PTR [rax+0x1],al
	...
   14000e255:	add    BYTE PTR [rax],al
   14000e257:	add    BYTE PTR [rsi],ch
   14000e259:	(bad)  
   14000e25a:	push   r14
   14000e25c:	je     0x14000e2c6
   14000e25e:	jb     0x14000e2c5
   14000e260:	(bad)  
   14000e261:	fs pop rdi
   14000e263:	jb     0x14000e2ca
   14000e265:	jae    0x14000e2d6
   14000e267:	jne    0x14000e2db
   14000e269:	movsxd esp,DWORD PTR [rbp+0x5f]
   14000e26c:	gs jb  0x14000e2e1
   14000e26f:	outs   dx,DWORD PTR ds:[rsi]
   14000e270:	jb     0x14000e2b2
   14000e272:	(bad)  
   14000e273:	outs   dx,DWORD PTR ds:[rsi]
   14000e274:	outs   dx,DWORD PTR ds:[rsi]
   14000e275:	jae    0x14000e2eb
   14000e277:	rex
   14000e278:	add    BYTE PTR [rax],al
   14000e27b:	add    BYTE PTR [rax],al
   14000e27d:	add    BYTE PTR [rax],al
   14000e27f:	add    BYTE PTR [rax],dh
   14000e281:	lahf   
   14000e282:	add    BYTE PTR [rax+0x1],al
	...
   14000e28d:	add    BYTE PTR [rax],al
   14000e28f:	add    BYTE PTR [rsi],ch
   14000e291:	(bad)  
   14000e292:	push   r14
   14000e294:	je     0x14000e2fe
   14000e296:	jb     0x14000e2fd
   14000e298:	(bad)  
   14000e299:	fs pop rdi
   14000e29b:	gs js  0x14000e301
   14000e29e:	gs jo  0x14000e315
   14000e2a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f6240
   14000e2a8:	jae    0x14000e31e
   14000e2aa:	rex
   14000e2ab:	add    BYTE PTR [rax],al
   14000e2ae:	add    BYTE PTR [rax],al
   14000e2b0:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e2be:	add    BYTE PTR [rax],al
   14000e2c0:	cs (bad) 
   14000e2c2:	push   r14
   14000e2c4:	jae    0x14000e33f
   14000e2c6:	jae    0x14000e33c
   14000e2c8:	gs ins DWORD PTR es:[rdi],dx
   14000e2ca:	pop    rdi
   14000e2cb:	gs jb  0x14000e340
   14000e2ce:	outs   dx,DWORD PTR ds:[rsi]
   14000e2cf:	jb     0x14000e311
   14000e2d1:	jae    0x14000e34c
   14000e2d3:	jae    0x14000e349
   14000e2d5:	gs ins DWORD PTR es:[rdi],dx
   14000e2d7:	rex (bad) 
   14000e2d9:	outs   dx,DWORD PTR ds:[rsi]
   14000e2da:	outs   dx,DWORD PTR ds:[rsi]
   14000e2db:	jae    0x14000e351
   14000e2dd:	rex
   14000e2de:	add    BYTE PTR [rax],sil
   14000e2e1:	lahf   
   14000e2e2:	add    BYTE PTR [rax+0x1],al
	...
   14000e2ed:	add    BYTE PTR [rax],al
   14000e2ef:	add    BYTE PTR [rsi],ch
   14000e2f1:	(bad)  
   14000e2f2:	push   r14
   14000e2f4:	(bad)  
   14000e2f5:	and    al,0x63
   14000e2f7:	ins    BYTE PTR es:[rdi],dx
   14000e2f8:	outs   dx,DWORD PTR ds:[rsi]
   14000e2f9:	outs   dx,BYTE PTR ds:[rsi]
   14000e2fa:	gs pop rdi
   14000e2fc:	imul   ebp,DWORD PTR [rbp+0x70],0x6255406c
   14000e303:	(bad)  
   14000e304:	fs pop rdi
   14000e306:	(bad)  
   14000e307:	ins    BYTE PTR es:[rdi],dx
   14000e308:	ins    BYTE PTR es:[rdi],dx
   14000e309:	outs   dx,DWORD PTR ds:[rsi]
   14000e30a:	movsxd ebx,DWORD PTR [rdi+0x40]
   14000e30d:	gs js  0x14000e373
   14000e310:	gs jo  0x14000e387
   14000e313:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e31a:	(bad)  
   14000e31b:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e323:	rex
   14000e324:	rex
   14000e325:	rex
   14000e326:	gs js  0x14000e38c
   14000e329:	gs jo  0x14000e3a0
   14000e32c:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e333:	(bad)  
   14000e334:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e33c:	rex
   14000e33d:	add    BYTE PTR [rax],al
   14000e340:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e34e:	add    BYTE PTR [rax],al
   14000e350:	cs (bad) 
   14000e352:	push   r13
   14000e354:	(bad)
   14000e359:	ins    BYTE PTR es:[rdi],dx
   14000e35a:	ins    BYTE PTR es:[rdi],dx
   14000e35b:	outs   dx,DWORD PTR ds:[rsi]
   14000e35c:	movsxd ebx,DWORD PTR [rdi+0x40]
   14000e35f:	gs js  0x14000e3c5
   14000e362:	gs jo  0x14000e3d9
   14000e365:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e36c:	(bad)  
   14000e36d:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e375:	rex
   14000e376:	add    BYTE PTR [rax],al
   14000e379:	add    BYTE PTR [rax],al
   14000e37b:	add    BYTE PTR [rax],al
   14000e37d:	add    BYTE PTR [rax],al
   14000e37f:	add    BYTE PTR [rax],dh
   14000e381:	lahf   
   14000e382:	add    BYTE PTR [rax+0x1],al
	...
   14000e38d:	add    BYTE PTR [rax],al
   14000e38f:	add    BYTE PTR [rsi],ch
   14000e391:	(bad)  
   14000e392:	push   r14
   14000e394:	(bad)  
   14000e395:	and    al,0x63
   14000e397:	ins    BYTE PTR es:[rdi],dx
   14000e398:	outs   dx,DWORD PTR ds:[rsi]
   14000e399:	outs   dx,BYTE PTR ds:[rsi]
   14000e39a:	gs pop rdi
   14000e39c:	imul   ebp,DWORD PTR [rbp+0x70],0x6255406c
   14000e3a3:	(bad)  
   14000e3a4:	fs pop rdi
   14000e3a6:	gs js  0x14000e40c
   14000e3a9:	gs jo  0x14000e420
   14000e3ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x7865405f
   14000e3b3:	movsxd esp,DWORD PTR [rbp+0x70]
   14000e3b6:	je     0x14000e421
   14000e3b8:	outs   dx,DWORD PTR ds:[rsi]
   14000e3b9:	outs   dx,BYTE PTR ds:[rsi]
   14000e3ba:	pop    rdi
   14000e3bb:	fs gs je 0x14000e420
   14000e3bf:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e3c7:	rex
   14000e3c8:	rex
   14000e3c9:	rex
   14000e3ca:	gs js  0x14000e430
   14000e3cd:	gs jo  0x14000e444
   14000e3d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e3d7:	(bad)  
   14000e3d8:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e3e0:	rex
   14000e3e1:	add    BYTE PTR [rax],al
   14000e3e4:	add    BYTE PTR [rax],al
   14000e3e6:	add    BYTE PTR [rax],al
   14000e3e8:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e3f6:	add    BYTE PTR [rax],al
   14000e3f8:	cs (bad) 
   14000e3fa:	push   r13
   14000e3fc:	(bad)
   14000e401:	js     0x14000e466
   14000e403:	gs jo  0x14000e47a
   14000e406:	imul   ebp,DWORD PTR [rdi+0x6e],0x7865405f
   14000e40d:	movsxd esp,DWORD PTR [rbp+0x70]
   14000e410:	je     0x14000e47b
   14000e412:	outs   dx,DWORD PTR ds:[rsi]
   14000e413:	outs   dx,BYTE PTR ds:[rsi]
   14000e414:	pop    rdi
   14000e415:	fs gs je 0x14000e47a
   14000e419:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e421:	rex
   14000e422:	add    BYTE PTR [rax],al
   14000e425:	add    BYTE PTR [rax],al
   14000e427:	add    BYTE PTR [rax],dh
   14000e429:	lahf   
   14000e42a:	add    BYTE PTR [rax+0x1],al
	...
   14000e435:	add    BYTE PTR [rax],al
   14000e437:	add    BYTE PTR [rsi],ch
   14000e439:	(bad)  
   14000e43a:	push   r14
   14000e43c:	gs jb  0x14000e4b1
   14000e43f:	outs   dx,DWORD PTR ds:[rsi]
   14000e440:	jb     0x14000e4a1
   14000e442:	movsxd esp,DWORD PTR [rcx+0x74]
   14000e445:	outs   dx,DWORD PTR gs:[esi]
   14000e448:	jb     0x14000e4c3
   14000e44a:	rex jae 0x14000e4c1
   14000e44d:	fs rex
   14000e44f:	add    BYTE PTR [rax],al
   14000e452:	add    BYTE PTR [rax],al
   14000e454:	add    BYTE PTR [rax],al
   14000e456:	add    BYTE PTR [rax],al
   14000e458:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e466:	add    BYTE PTR [rax],al
   14000e468:	cs (bad) 
   14000e46a:	push   r14
   14000e46c:	pop    rdi
   14000e46d:	rex.RXB
   14000e46e:	outs   dx,BYTE PTR gs:[rsi]
   14000e470:	gs jb  0x14000e4dc
   14000e473:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000e476:	jb     0x14000e4ea
   14000e478:	outs   dx,DWORD PTR ds:[rsi]
   14000e479:	jb     0x14000e4da
   14000e47b:	movsxd esp,DWORD PTR [rcx+0x74]
   14000e47e:	outs   dx,DWORD PTR gs:[esi]
   14000e481:	jb     0x14000e4fc
   14000e483:	rex jae 0x14000e4fa
   14000e486:	fs rex
   14000e488:	add    BYTE PTR [rax],al
   14000e48b:	add    BYTE PTR [rax],al
   14000e48d:	add    BYTE PTR [rax],al
   14000e48f:	add    BYTE PTR [rax],dh
   14000e491:	lahf   
   14000e492:	add    BYTE PTR [rax+0x1],al
	...
   14000e49d:	add    BYTE PTR [rax],al
   14000e49f:	add    BYTE PTR [rsi],ch
   14000e4a1:	(bad)  
   14000e4a2:	push   r14
   14000e4a4:	pop    rdi
   14000e4a5:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000e4a7:	jae    0x14000e51d
   14000e4a9:	jb     0x14000e510
   14000e4ab:	(bad)  
   14000e4ac:	ins    DWORD PTR es:[rdi],dx
   14000e4ad:	pop    rdi
   14000e4ae:	gs jb  0x14000e523
   14000e4b1:	outs   dx,DWORD PTR ds:[rsi]
   14000e4b2:	jb     0x14000e513
   14000e4b4:	movsxd esp,DWORD PTR [rcx+0x74]
   14000e4b7:	outs   dx,DWORD PTR gs:[esi]
   14000e4ba:	jb     0x14000e535
   14000e4bc:	rex jae 0x14000e533
   14000e4bf:	fs rex
   14000e4c1:	add    BYTE PTR [rax],al
   14000e4c4:	add    BYTE PTR [rax],al
   14000e4c6:	add    BYTE PTR [rax],al
   14000e4c8:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e4d6:	add    BYTE PTR [rax],al
   14000e4d8:	cs (bad) 
   14000e4da:	push   r14
   14000e4dc:	pop    rdi
   14000e4dd:	push   rbx
   14000e4de:	jns    0x14000e553
   14000e4e0:	je     0x14000e547
   14000e4e2:	ins    DWORD PTR es:[rdi],dx
   14000e4e3:	pop    rdi
   14000e4e4:	gs jb  0x14000e559
   14000e4e7:	outs   dx,DWORD PTR ds:[rsi]
   14000e4e8:	jb     0x14000e549
   14000e4ea:	movsxd esp,DWORD PTR [rcx+0x74]
   14000e4ed:	outs   dx,DWORD PTR gs:[esi]
   14000e4f0:	jb     0x14000e56b
   14000e4f2:	rex jae 0x14000e569
   14000e4f5:	fs rex
   14000e4f7:	add    BYTE PTR [rax],al
   14000e4fa:	add    BYTE PTR [rax],al
   14000e4fc:	add    BYTE PTR [rax],al
   14000e4fe:	add    BYTE PTR [rax],al
   14000e500:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e50e:	add    BYTE PTR [rax],al
   14000e510:	cs (bad) 
   14000e512:	push   r14
   14000e514:	jae    0x14000e586
   14000e516:	pop    rdi
   14000e517:	movsxd ebp,DWORD PTR [rdi+0x75]
   14000e51a:	outs   dx,BYTE PTR ds:[rsi]
   14000e51b:	je     0x14000e582
   14000e51d:	fs pop rdi
   14000e51f:	(bad)  
   14000e521:	jae    0x14000e588
   14000e523:	rex
   14000e524:	fs gs je 0x14000e589
   14000e528:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e530:	rex
   14000e531:	add    BYTE PTR [rax],al
	...
   14000e540:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e54e:	add    BYTE PTR [rax],al
   14000e550:	cs (bad) 
   14000e552:	push   r14
   14000e554:	(bad)  
   14000e555:	and    al,0x73
   14000e557:	jo     0x14000e5b8
   14000e559:	movsxd ebp,DWORD PTR [rdi+0x75]
   14000e55c:	outs   dx,BYTE PTR ds:[rsi]
   14000e55d:	je     0x14000e5c4
   14000e55f:	fs pop rdi
   14000e561:	imul   ebp,DWORD PTR [rbp+0x70],0x40705f6c
   14000e568:	push   rsi
   14000e569:	(bad)  
   14000e56a:	and    al,0x63
   14000e56c:	ins    BYTE PTR es:[rdi],dx
   14000e56d:	outs   dx,DWORD PTR ds:[rsi]
   14000e56e:	outs   dx,BYTE PTR ds:[rsi]
   14000e56f:	gs pop rdi
   14000e571:	imul   ebp,DWORD PTR [rbp+0x70],0x6255406c
   14000e578:	(bad)  
   14000e579:	fs pop rdi
   14000e57b:	(bad)  
   14000e57c:	ins    BYTE PTR es:[rdi],dx
   14000e57d:	ins    BYTE PTR es:[rdi],dx
   14000e57e:	outs   dx,DWORD PTR ds:[rsi]
   14000e57f:	movsxd ebx,DWORD PTR [rdi+0x40]
   14000e582:	gs js  0x14000e5e8
   14000e585:	gs jo  0x14000e5fc
   14000e588:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e58f:	(bad)  
   14000e590:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e598:	rex
   14000e599:	rex
   14000e59a:	rex
   14000e59b:	gs js  0x14000e601
   14000e59e:	gs jo  0x14000e615
   14000e5a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e5a8:	(bad)  
   14000e5a9:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e5b1:	rex
   14000e5b2:	rex
   14000e5b3:	rex
   14000e5b4:	fs gs je 0x14000e619
   14000e5b8:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e5c0:	rex
   14000e5c1:	add    BYTE PTR [rax],al
	...
   14000e5d0:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e5de:	add    BYTE PTR [rax],al
   14000e5e0:	cs (bad) 
   14000e5e2:	push   r14
   14000e5e4:	(bad)  
   14000e5e5:	and    al,0x73
   14000e5e7:	jo     0x14000e648
   14000e5e9:	movsxd ebp,DWORD PTR [rdi+0x75]
   14000e5ec:	outs   dx,BYTE PTR ds:[rsi]
   14000e5ed:	je     0x14000e654
   14000e5ef:	fs pop rdi
   14000e5f1:	imul   ebp,DWORD PTR [rbp+0x70],0x40705f6c
   14000e5f8:	push   rsi
   14000e5f9:	(bad)  
   14000e5fa:	and    al,0x63
   14000e5fc:	ins    BYTE PTR es:[rdi],dx
   14000e5fd:	outs   dx,DWORD PTR ds:[rsi]
   14000e5fe:	outs   dx,BYTE PTR ds:[rsi]
   14000e5ff:	gs pop rdi
   14000e601:	imul   ebp,DWORD PTR [rbp+0x70],0x6255406c
   14000e608:	(bad)  
   14000e609:	fs pop rdi
   14000e60b:	gs js  0x14000e671
   14000e60e:	gs jo  0x14000e685
   14000e611:	imul   ebp,DWORD PTR [rdi+0x6e],0x7865405f
   14000e618:	movsxd esp,DWORD PTR [rbp+0x70]
   14000e61b:	je     0x14000e686
   14000e61d:	outs   dx,DWORD PTR ds:[rsi]
   14000e61e:	outs   dx,BYTE PTR ds:[rsi]
   14000e61f:	pop    rdi
   14000e620:	fs gs je 0x14000e685
   14000e624:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e62c:	rex
   14000e62d:	rex
   14000e62e:	rex
   14000e62f:	gs js  0x14000e695
   14000e632:	gs jo  0x14000e6a9
   14000e635:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465645f
   14000e63c:	(bad)  
   14000e63d:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e645:	rex
   14000e646:	rex
   14000e647:	rex
   14000e648:	fs gs je 0x14000e6ad
   14000e64c:	imul   ebp,DWORD PTR [rax+rax*2+0x62],0x74736f6f
   14000e654:	rex
   14000e655:	add    BYTE PTR [rax],al
   14000e658:	xor    BYTE PTR [rdi+0x14000],bl
	...
   14000e666:	add    BYTE PTR [rax],al
   14000e668:	cs (bad) 
   14000e66a:	push   r14
   14000e66c:	je     0x14000e6e7
   14000e66e:	jo     0x14000e6d5
   14000e670:	pop    rdi
   14000e671:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014000f000 <.pdata>:
   14000f000:	xor    BYTE PTR [rax],dl
   14000f002:	add    BYTE PTR [rax],al
   14000f004:	push   rax
   14000f005:	adc    BYTE PTR [rax],al
   14000f007:	add    al,dl
   14000f009:	mov    esp,0x10500000
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	jo     0x14000f022
   14000f012:	add    BYTE PTR [rax],al
   14000f014:	push   rax
   14000f015:	mov    esi,0x10900000
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f01d:	adc    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rdi+rsi*4+0x0],dh
   14000f023:	add    BYTE PTR [rax-0x39fffff0],dh
   14000f029:	adc    BYTE PTR [rax],al
   14000f02b:	add    BYTE PTR [rdi+rsi*4+0x0],bh
   14000f02f:	add    al,dl
   14000f031:	adc    BYTE PTR [rax],al
   14000f033:	add    dh,ah
   14000f035:	adc    BYTE PTR [rax],al
   14000f037:	add    BYTE PTR [rdi+rsi*4+0x0],ch
   14000f03b:	add    al,dh
   14000f03d:	adc    BYTE PTR [rax],al
   14000f03f:	add    BYTE PTR [rsi],bh
   14000f041:	adc    DWORD PTR [rax],eax
   14000f043:	add    ah,cl
   14000f045:	ret    0x0
   14000f048:	rex adc DWORD PTR [rax],eax
   14000f04b:	add    BYTE PTR [rcx+0x60000011],ah
   14000f051:	mov    BYTE PTR [rax],0x0
   14000f054:	mov    al,0x11
   14000f056:	add    BYTE PTR [rax],al
   14000f058:	(bad)  
   14000f059:	adc    DWORD PTR [rax],eax
   14000f05b:	add    ah,dl
   14000f05d:	(bad)  
   14000f05e:	add    BYTE PTR [rax],al
   14000f060:	add    BYTE PTR [rdx],dl
   14000f062:	add    BYTE PTR [rax],al
   14000f064:	(bad)  
   14000f065:	adc    al,BYTE PTR [rax]
   14000f067:	add    al,ch
   14000f069:	mov    BYTE PTR [rax],0x0
   14000f06c:	rcl    BYTE PTR [rdx],1
   14000f06e:	add    BYTE PTR [rax],al
   14000f070:	not    DWORD PTR [rdx]
   14000f072:	add    BYTE PTR [rax],al
   14000f074:	adc    BYTE PTR [rbx+0x13000000],bh
   14000f07a:	add    BYTE PTR [rax],al
   14000f07c:	xor    al,0x13
   14000f07e:	add    BYTE PTR [rax],al
   14000f080:	cmp    BYTE PTR [rbx+0x13400000],0x0
   14000f087:	add    BYTE PTR [rbx+0x13],dh
   14000f08a:	add    BYTE PTR [rax],al
   14000f08c:	mov    BYTE PTR [rbx+0x13800000],bh
   14000f092:	add    BYTE PTR [rax],al
   14000f094:	(bad)  
   14000f095:	adc    eax,DWORD PTR [rax]
   14000f097:	add    BYTE PTR [rax-0x45],dl
   14000f09a:	add    BYTE PTR [rax],al
   14000f09c:	(bad)  
   14000f09d:	adc    eax,DWORD PTR [rax]
   14000f09f:	add    dh,dl
   14000f0a1:	adc    eax,DWORD PTR [rax]
   14000f0a3:	add    BYTE PTR [rbx+rdi*4+0x0],bl
   14000f0a7:	add    dh,dl
   14000f0a9:	adc    eax,DWORD PTR [rax]
   14000f0ab:	add    bh,dl
   14000f0ad:	adc    eax,DWORD PTR [rax]
   14000f0af:	add    BYTE PTR [rax-0x45],dh
   14000f0b2:	add    BYTE PTR [rax],al
   14000f0b4:	loopne 0x14000f0c9
   14000f0b6:	add    BYTE PTR [rax],al
   14000f0b8:	out    dx,eax
   14000f0b9:	adc    eax,DWORD PTR [rax]
   14000f0bb:	add    al,dh
   14000f0bd:	rol    BYTE PTR [rax],0x0
   14000f0c0:	out    dx,eax
   14000f0c1:	adc    eax,DWORD PTR [rax]
   14000f0c3:	add    BYTE PTR [rsi],dh
   14000f0c5:	adc    al,0x0
   14000f0c7:	add    ah,bh
   14000f0c9:	rol    BYTE PTR [rax],0x0
   14000f0cc:	ss adc al,0x0
   14000f0cf:	add    BYTE PTR [rdi],dh
   14000f0d1:	adc    al,0x0
   14000f0d3:	add    BYTE PTR [rax],dl
   14000f0d5:	rol    DWORD PTR [rax],0x0
   14000f0d8:	adc    al,0x0
   14000f0db:	add    BYTE PTR [rdi+0x14],cl
   14000f0de:	add    BYTE PTR [rax],al
   14000f0e0:	and    BYTE PTR [rbx+0x144f0000],bh
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	xchg   esi,eax
   14000f0e9:	adc    al,0x0
   14000f0eb:	add    BYTE PTR [rbx+rdi*4],ch
   14000f0ee:	add    BYTE PTR [rax],al
   14000f0f0:	xchg   esi,eax
   14000f0f1:	adc    al,0x0
   14000f0f3:	add    BYTE PTR [rdi+0x40000014],dl
   14000f0f9:	mov    ebx,0x14a00000
   14000f0fe:	add    BYTE PTR [rax],al
   14000f100:	scas   eax,DWORD PTR es:[rdi]
   14000f101:	adc    al,0x0
   14000f103:	add    al,al
   14000f105:	rol    BYTE PTR [rax],0x0
   14000f108:	scas   eax,DWORD PTR es:[rdi]
   14000f109:	adc    al,0x0
   14000f10b:	add    dh,dh
   14000f10d:	adc    al,0x0
   14000f10f:	add    ah,cl
   14000f111:	rol    BYTE PTR [rax],0x0
   14000f114:	not    BYTE PTR [rax+rax*1]
   14000f117:	add    bh,dh
   14000f119:	adc    al,0x0
   14000f11b:	add    al,ah
   14000f11d:	rol    BYTE PTR [rax],0x0
   14000f120:	xor    BYTE PTR [rip+0x15670000],dl        # 0x15567f126
   14000f126:	add    BYTE PTR [rax],al
   14000f128:	sbb    BYTE PTR [rbx+0x15800000],bh
   14000f12e:	add    BYTE PTR [rax],al
   14000f130:	movabs al,ds:0xa00000c540000015
   14000f139:	adc    eax,0x16040000
   14000f13e:	add    BYTE PTR [rax],al
   14000f140:	rol    ch,0x0
   14000f143:	add    BYTE PTR [rax],dl
   14000f145:	(bad)  
   14000f146:	add    BYTE PTR [rax],al
   14000f148:	xor    BYTE PTR [rsi],dl
   14000f14a:	add    BYTE PTR [rax],al
   14000f14c:	mov    eax,0x100000c0
   14000f151:	(bad)  
   14000f152:	add    BYTE PTR [rax],al
   14000f154:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f155:	(bad)  
   14000f156:	add    BYTE PTR [rax],al
   14000f158:	sar    BYTE PTR [rdx+0x17b00000],1
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	xor    DWORD PTR [rax],ebx
   14000f162:	add    BYTE PTR [rax],al
   14000f164:	xor    al,0xc5
   14000f166:	add    BYTE PTR [rax],al
   14000f168:	sbb    BYTE PTR [rax],al
   14000f16b:	add    ah,dl
   14000f16d:	sbb    BYTE PTR [rax],al
   14000f16f:	add    BYTE PTR [rax+rax*8+0x0],bh
   14000f173:	add    BYTE PTR [rax+0x19],al
   14000f176:	add    BYTE PTR [rax],al
   14000f178:	jno    0x14000f193
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	push   rax
   14000f17d:	(bad)
   14000f180:	sbb    BYTE PTR [rcx],0x0
   14000f183:	add    BYTE PTR [rcx+0x78000019],dh
   14000f189:	mov    DWORD PTR [rax],0x19c000
   14000f18f:	add    cl,dh
   14000f191:	sbb    DWORD PTR [rax],eax
   14000f193:	add    BYTE PTR [rax-0x3a],bl
   14000f196:	add    BYTE PTR [rax],al
   14000f198:	add    BYTE PTR [rdx],bl
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	(bad)  
   14000f19d:	sbb    al,BYTE PTR [rax]
   14000f19f:	add    BYTE PTR [rax-0x3b],cl
   14000f1a2:	add    BYTE PTR [rax],al
   14000f1a4:	xor    BYTE PTR [rdx],bl
   14000f1a6:	add    BYTE PTR [rax],al
   14000f1a8:	pop    rdi
   14000f1a9:	sbb    al,BYTE PTR [rax]
   14000f1ab:	add    BYTE PTR [rax-0x39],dh
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	(bad)  
   14000f1b1:	sbb    al,BYTE PTR [rax]
   14000f1b3:	add    BYTE PTR [rdi+0x5000001a],cl
   14000f1b9:	mov    BYTE PTR [rax],0x0
   14000f1bc:	nop
   14000f1bd:	sbb    al,BYTE PTR [rax]
   14000f1bf:	add    BYTE PTR [rbp-0x1bffffe6],dh
   14000f1c5:	mov    esi,0x1ac00000
   14000f1ca:	add    BYTE PTR [rax],al
   14000f1cc:	(bad)  
   14000f1cd:	sbb    eax,DWORD PTR [rax]
   14000f1cf:	add    BYTE PTR [rsi+rdi*4+0x1b400000],al
   14000f1d6:	add    BYTE PTR [rax],al
   14000f1d8:	rex.RB (bad) 
   14000f1da:	add    BYTE PTR [rax],al
   14000f1dc:	nop
   14000f1dd:	mov    ebx,0x1f500000
   14000f1e2:	add    BYTE PTR [rax],al
   14000f1e4:	push   rcx
   14000f1e5:	and    eax,DWORD PTR [rax]
   14000f1e7:	add    BYTE PTR [rdi*4+0x23c00000],al
   14000f1ee:	add    BYTE PTR [rax],al
   14000f1f0:	cld    
   14000f1f1:	and    eax,DWORD PTR [rax]
   14000f1f3:	add    BYTE PTR [rax-0x3b],bl
   14000f1f6:	add    BYTE PTR [rax],al
   14000f1f8:	cld    
   14000f1f9:	and    eax,DWORD PTR [rax]
   14000f1fb:	add    BYTE PTR [rax],ah
   14000f1fd:	and    al,0x0
   14000f1ff:	add    BYTE PTR [rax-0x3b],ch
   14000f202:	add    BYTE PTR [rax],al
   14000f204:	and    BYTE PTR [rax+rax*1],ah
   14000f207:	add    BYTE PTR [rip+0x7c000024],bh        # 0x1bc00f231
   14000f20d:	(bad)
   14000f210:	and    al,0x0
   14000f213:	add    BYTE PTR [rsp+0x0],bh
   14000f217:	add    BYTE PTR [rbp+rax*8+0x247c0000],cl
   14000f21e:	add    BYTE PTR [rax],al
   14000f220:	movabs al,ds:0xa00000c59c000024
   14000f229:	and    al,0x0
   14000f22b:	add    BYTE PTR [rbp-0x4fffffdc],bh
   14000f231:	(bad)
   14000f234:	shl    BYTE PTR [rax+rax*1],0x0
   14000f238:	add    BYTE PTR [rip+0xffffffffb9100000],ah        # 0xf910f23e
   14000f23e:	add    BYTE PTR [rax],al
   14000f240:	mov    al,0x26
   14000f242:	add    BYTE PTR [rax],al
   14000f244:	sub    DWORD PTR [rdi],esp
   14000f246:	add    BYTE PTR [rax],al
   14000f248:	xor    BYTE PTR [rdi+0x27300000],ch
   14000f24e:	add    BYTE PTR [rax],al
   14000f250:	(bad)  
   14000f251:	(bad)  
   14000f252:	add    BYTE PTR [rax],al
   14000f254:	and    BYTE PTR [rdi+0x27700000],ch
   14000f25a:	add    BYTE PTR [rax],al
   14000f25c:	lods   al,BYTE PTR ds:[rsi]
   14000f25d:	(bad)  
   14000f25e:	add    BYTE PTR [rax],al
   14000f260:	sub    BYTE PTR [rdi+0x27d00000],ch
   14000f266:	add    BYTE PTR [rax],al
   14000f268:	sbb    DWORD PTR [rax],ebp
   14000f26a:	add    BYTE PTR [rax],al
   14000f26c:	enter  0xb1,0x0
   14000f270:	and    BYTE PTR [rax],ch
   14000f272:	add    BYTE PTR [rax],al
   14000f274:	(bad)  
   14000f275:	sub    BYTE PTR [rax],al
   14000f277:	add    ah,ch
   14000f279:	mov    esi,0x28e00000
   14000f27e:	add    BYTE PTR [rax],al
   14000f280:	xchg   esi,eax
   14000f281:	sub    DWORD PTR [rax],eax
   14000f283:	add    BYTE PTR [rax-0x41],al
   14000f286:	add    BYTE PTR [rax],al
   14000f288:	movabs al,ds:0x3000002a2b000029
   14000f291:	rol    BYTE PTR [rax],0x0
   14000f294:	xor    BYTE PTR [rdx],ch
   14000f296:	add    BYTE PTR [rax],al
   14000f298:	shr    DWORD PTR [rdx],1
   14000f29a:	add    BYTE PTR [rax],al
   14000f29c:	and    cl,al
   14000f29e:	add    BYTE PTR [rax],al
   14000f2a0:	loopne 0x14000f2cc
   14000f2a2:	add    BYTE PTR [rax],al
   14000f2a4:	sub    DWORD PTR [rbx],0xc1700000
   14000f2aa:	add    BYTE PTR [rax],al
   14000f2ac:	nop
   14000f2ad:	sub    eax,DWORD PTR [rax]
   14000f2af:	add    BYTE PTR [rax],bl
   14000f2b1:	sub    al,0x0
   14000f2b3:	add    BYTE PTR [rax+0x200000c2],al
   14000f2b9:	sub    al,0x0
   14000f2bb:	add    cl,al
   14000f2bd:	sub    al,0x0
   14000f2bf:	add    BYTE PTR [rbx+rax*8],ch
   14000f2c2:	add    BYTE PTR [rax],al
   14000f2c4:	shr    BYTE PTR [rax+rax*1],1
   14000f2c7:	add    BYTE PTR [rcx+0x2d],dh
   14000f2ca:	add    BYTE PTR [rax],al
   14000f2cc:	js     0x14000f291
   14000f2ce:	add    BYTE PTR [rax],al
   14000f2d0:	sub    BYTE PTR [rip+0x2e080000],0x0        # 0x16e08f2d7
   14000f2d7:	add    BYTE PTR [rax+0x400000c4],cl
   14000f2dd:	add    BYTE PTR cs:[rax],al
   14000f2e0:	int    0x2e
   14000f2e2:	add    BYTE PTR [rax],al
   14000f2e4:	movabs al,ds:0x1100002ed00000be
   14000f2ed:	(bad)  
   14000f2ee:	add    BYTE PTR [rax],al
   14000f2f0:	nop
   14000f2f1:	mov    esi,0x2f200000
   14000f2f6:	add    BYTE PTR [rax],al
   14000f2f8:	rex.XB (bad) 
   14000f2fa:	add    BYTE PTR [rax],al
   14000f2fc:	or     BYTE PTR [rax+rax*1+0x303000],dh
   14000f303:	add    BYTE PTR [rdx+0x30],dl
   14000f306:	add    BYTE PTR [rax],al
   14000f308:	in     al,0xae
   14000f30a:	add    BYTE PTR [rax],al
   14000f30c:	(bad)  
   14000f30d:	xor    BYTE PTR [rax],al
   14000f30f:	add    BYTE PTR [rcx-0x23ffffd0],bl
   14000f315:	scas   al,BYTE PTR es:[rdi]
   14000f316:	add    BYTE PTR [rax],al
   14000f318:	movabs al,ds:0xd000003122000030
   14000f321:	mov    dh,0x0
   14000f323:	add    BYTE PTR [rax],dh
   14000f325:	xor    DWORD PTR [rax],eax
   14000f327:	add    BYTE PTR [rax-0x3bffffcf],ah
   14000f32d:	mov    dh,0x0
   14000f32f:	add    BYTE PTR [rax-0x3dffffcf],ah
   14000f335:	xor    DWORD PTR [rax],eax
   14000f337:	add    al,cl
   14000f339:	scas   al,BYTE PTR es:[rdi]
   14000f33a:	add    BYTE PTR [rax],al
   14000f33c:	shl    BYTE PTR [rcx],1
   14000f33e:	add    BYTE PTR [rax],al
   14000f340:	sti    
   14000f341:	xor    DWORD PTR [rax],eax
   14000f343:	add    al,al
   14000f345:	scas   al,BYTE PTR es:[rdi]
   14000f346:	add    BYTE PTR [rax],al
   14000f348:	add    BYTE PTR [rdx],dh
   14000f34a:	add    BYTE PTR [rax],al
   14000f34c:	(bad)  
   14000f34d:	xor    al,BYTE PTR [rax]
   14000f34f:	add    BYTE PTR [rax],ch
   14000f351:	mov    bh,0x0
   14000f353:	add    BYTE PTR [rax-0x5ffffce],dl
   14000f359:	xor    al,BYTE PTR [rax]
   14000f35b:	add    BYTE PTR [rdi+rsi*4],bl
   14000f35e:	add    BYTE PTR [rax],al
   14000f360:	xor    BYTE PTR [rbx],0x0
   14000f363:	add    cl,dl
   14000f365:	xor    eax,DWORD PTR [rax]
   14000f367:	add    BYTE PTR [rax],dh
   14000f369:	mov    ah,0x0
   14000f36b:	add    BYTE PTR [rax],ah
   14000f36d:	xor    al,0x0
   14000f36f:	add    BYTE PTR [rdx+0x34],al
   14000f372:	add    BYTE PTR [rax],al
   14000f374:	push   rax
   14000f375:	mov    cl,0x0
   14000f377:	add    BYTE PTR [rax+0x34],dl
   14000f37a:	add    BYTE PTR [rax],al
   14000f37c:	jnp    0x14000f3b2
   14000f37e:	add    BYTE PTR [rax],al
   14000f380:	rex.W mov cl,0x0
   14000f383:	add    al,dl
   14000f385:	xor    al,0x0
   14000f387:	add    BYTE PTR [rip+0x50000035],bh        # 0x19000f3c2
   14000f38d:	mov    eax,0x35400000
   14000f392:	add    BYTE PTR [rax],al
   14000f394:	xchg   ebx,eax
   14000f395:	xor    eax,0xb78c0000
   14000f39a:	add    BYTE PTR [rax],al
   14000f39c:	movabs al,ds:0xa8000035c1000035
   14000f3a5:	mov    eax,0x35d00000
   14000f3aa:	add    BYTE PTR [rax],al
   14000f3ac:	(bad)  
   14000f3ad:	add    BYTE PTR ss:[rax],al
   14000f3b0:	xchg   esp,eax
   14000f3b1:	mov    eax,0x36400000
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	(bad)  
   14000f3b9:	add    BYTE PTR ss:[rax],al
   14000f3bc:	int3   
   14000f3bd:	mov    eax,0x36700000
   14000f3c2:	add    BYTE PTR [rax],al
   14000f3c4:	(bad)  
   14000f3c5:	add    BYTE PTR ss:[rax],al
   14000f3c8:	mov    esp,0xe00000b8
   14000f3cd:	add    BYTE PTR ss:[rax],al
   14000f3d0:	adc    DWORD PTR [rdi],esi
   14000f3d2:	add    BYTE PTR [rax],al
   14000f3d4:	scas   rax,QWORD PTR es:[rdi]
   14000f3d6:	add    BYTE PTR [rax],al
   14000f3d8:	and    BYTE PTR [rdi],dh
   14000f3da:	add    BYTE PTR [rax],al
   14000f3dc:	rex.WRXB (bad) 
   14000f3de:	add    BYTE PTR [rax],al
   14000f3e0:	shl    BYTE PTR [rcx+0x37900000],1
   14000f3e6:	add    BYTE PTR [rax],al
   14000f3e8:	sbb    al,0x38
   14000f3ea:	add    BYTE PTR [rax],al
   14000f3ec:	rol    cl,0x0
   14000f3ef:	add    BYTE PTR [rax],ah
   14000f3f1:	cmp    BYTE PTR [rax],al
   14000f3f3:	add    BYTE PTR [rax+rdi*1-0x3c380000],ch
   14000f3fa:	add    BYTE PTR [rax],al
   14000f3fc:	mov    al,0x38
   14000f3fe:	add    BYTE PTR [rax],al
   14000f400:	cmp    DWORD PTR es:[rax],eax
   14000f403:	add    BYTE PTR [rax+0x300000be],bl
   14000f409:	cmp    DWORD PTR [rax],eax
   14000f40b:	add    BYTE PTR [rax+0x39],bl
   14000f40e:	add    BYTE PTR [rax],al
   14000f410:	add    BYTE PTR [rax+rax*1+0x396000],dh
   14000f417:	add    BYTE PTR [rbx+0x39],dh
   14000f41a:	add    BYTE PTR [rax],al
   14000f41c:	fs mov dh,0x0
   14000f41f:	add    BYTE PTR [rbx+0x39],dh
   14000f422:	add    BYTE PTR [rax],al
   14000f424:	xchg   edi,eax
   14000f425:	cmp    DWORD PTR [rax],eax
   14000f427:	add    BYTE PTR [rsi+rsi*4+0x0],ch
   14000f42b:	add    BYTE PTR [rdi-0x62ffffc7],dl
   14000f431:	cmp    DWORD PTR [rax],eax
   14000f433:	add    BYTE PTR [rax-0x5fffff4a],al
   14000f439:	cmp    DWORD PTR [rax],eax
   14000f43b:	add    BYTE PTR [rbx-0x7fffffc7],dh
   14000f441:	mov    ecx,0x39b30000
   14000f446:	add    BYTE PTR [rax],al
   14000f448:	xlat   BYTE PTR ds:[rbx]
   14000f449:	cmp    DWORD PTR [rax],eax
   14000f44b:	add    BYTE PTR [rax-0x28ffff47],cl
   14000f451:	cmp    DWORD PTR [rax],eax
   14000f453:	add    ch,bl
   14000f455:	cmp    DWORD PTR [rax],eax
   14000f457:	add    BYTE PTR [rcx+rdi*4+0x3a000000],bl
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	rex.X cmp al,BYTE PTR [rax]
   14000f463:	add    BYTE PTR [rax-0x47],cl
   14000f466:	add    BYTE PTR [rax],al
   14000f468:	sar    BYTE PTR [rdx],0x0
   14000f46b:	add    BYTE PTR [rbx],dl
   14000f46d:	cmp    eax,DWORD PTR [rax]
   14000f46f:	add    BYTE PTR [rsi+rsi*4+0x3b400000],bh
   14000f476:	add    BYTE PTR [rax],al
   14000f478:	xchg   ebx,eax
   14000f479:	cmp    eax,DWORD PTR [rax]
   14000f47b:	add    BYTE PTR [rdi+rsi*4],dl
   14000f47e:	add    BYTE PTR [rax],al
   14000f480:	sar    BYTE PTR [rbx],0x0
   14000f483:	add    ah,dh
   14000f485:	cmp    eax,DWORD PTR [rax]
   14000f487:	add    al,bh
   14000f489:	mov    bl,0x0
   14000f48b:	add    BYTE PTR [rax],al
   14000f48d:	cmp    al,0x0
   14000f48f:	add    BYTE PTR [rbx],dl
   14000f491:	cmp    al,0x0
   14000f493:	add    BYTE PTR [rax+0x130000b6],dl
   14000f499:	cmp    al,0x0
   14000f49b:	add    BYTE PTR [rdi],dh
   14000f49d:	cmp    al,0x0
   14000f49f:	add    BYTE PTR [rax+0x370000b6],bl
   14000f4a5:	cmp    al,0x0
   14000f4a7:	add    BYTE PTR [rip+0xffffffffac00003c],bh        # 0xec00f4e9
   14000f4ad:	mov    dh,0x0
   14000f4af:	add    BYTE PTR [rax+0x3c],dl
   14000f4b2:	add    BYTE PTR [rax],al
   14000f4b4:	(bad)  
   14000f4b5:	cmp    al,0x0
   14000f4b7:	add    BYTE PTR [rax-0x4c],bl
   14000f4ba:	add    BYTE PTR [rax],al
   14000f4bc:	(bad)  
   14000f4bd:	cmp    al,0x0
   14000f4bf:	add    BYTE PTR [rsi+0x6000003c],al
   14000f4c5:	mov    ah,0x0
   14000f4c7:	add    BYTE PTR [rsi-0x73ffffc4],al
   14000f4cd:	cmp    al,0x0
   14000f4cf:	add    BYTE PTR [rsp+rsi*4+0x0],dh
   14000f4d3:	add    BYTE PTR [rax-0x19ffffc4],ah
   14000f4d9:	cmp    al,0x0
   14000f4db:	add    BYTE PTR [rax-0xfffff49],bl
   14000f4e1:	cmp    al,0x0
   14000f4e3:	add    BYTE PTR [rsi],dh
   14000f4e5:	cmp    eax,0xb8a00000
   14000f4ea:	add    BYTE PTR [rax],al
   14000f4ec:	rex cmp eax,0x3d860000
   14000f4f2:	add    BYTE PTR [rax],al
   14000f4f4:	(bad)  
   14000f4f5:	mov    eax,0x3dd00000
   14000f4fa:	add    BYTE PTR [rax],al
   14000f4fc:	sbb    BYTE PTR [rsi],bh
   14000f4fe:	add    BYTE PTR [rax],al
   14000f500:	adc    BYTE PTR [rax+rax*1+0x3e8000],dh
   14000f507:	add    ah,bl
   14000f509:	add    BYTE PTR ds:[rax],al
   14000f50c:	je     0x14000f4ce
   14000f50e:	add    BYTE PTR [rax],al
   14000f510:	loopne 0x14000f550
   14000f512:	add    BYTE PTR [rax],al
   14000f514:	(bad)  
   14000f515:	add    BYTE PTR ds:[rax],al
   14000f518:	(bad)
   14000f51c:	add    BYTE PTR [rdi],bh
   14000f51e:	add    BYTE PTR [rax],al
   14000f520:	(bad)  
   14000f521:	(bad)  
   14000f522:	add    BYTE PTR [rax],al
   14000f524:	int3   
   14000f525:	(bad)  
   14000f526:	add    BYTE PTR [rax],al
   14000f528:	nop
   14000f529:	(bad)  
   14000f52a:	add    BYTE PTR [rax],al
   14000f52c:	mov    ah,0x3f
   14000f52e:	add    BYTE PTR [rax],al
   14000f530:	push   rax
   14000f531:	mov    ecx,0x3fb40000
   14000f536:	add    BYTE PTR [rax],al
   14000f538:	loope  0x14000f579
   14000f53a:	add    BYTE PTR [rax],al
   14000f53c:	pop    rsp
   14000f53d:	mov    ecx,0x3fe10000
   14000f542:	add    BYTE PTR [rax],al
   14000f544:	xor    DWORD PTR [rax+0x0],eax
   14000f547:	add    BYTE PTR [rax-0x47],dh
   14000f54a:	add    BYTE PTR [rax],al
   14000f54c:	push   rax
   14000f54d:	add    BYTE PTR [rax],al
   14000f550:	popf   
   14000f551:	add    BYTE PTR [rax],al
   14000f554:	cmp    al,0xb1
   14000f556:	add    BYTE PTR [rax],al
   14000f558:	movabs al,ds:0x9c000040eb000040
   14000f561:	mov    bl,0x0
   14000f563:	add    al,dh
   14000f565:	add    BYTE PTR [rax],al
   14000f568:	add    BYTE PTR [r8d],al
   14000f56c:	push   0x700000c0
   14000f571:	add    BYTE PTR [r8],al
   14000f574:	stos   BYTE PTR es:[rdi],al
   14000f575:	add    BYTE PTR [r8],al
   14000f578:	mov    eax,0xb00000c2
   14000f57d:	add    BYTE PTR [r8],al
   14000f580:	(bad)  
   14000f581:	add    BYTE PTR [r8],al
   14000f584:	rol    ah,0x0
   14000f587:	add    al,dh
   14000f589:	add    BYTE PTR [r8],al
   14000f58c:	(bad)  
   14000f58d:	rex.X add BYTE PTR [rax],al
   14000f590:	fdivr  DWORD PTR [rsi+0x42200000]
   14000f596:	add    BYTE PTR [rax],al
   14000f598:	rex.RX
   14000f599:	rex.X add BYTE PTR [rax],al
   14000f59c:	add    bh,0x0
   14000f59f:	add    BYTE PTR [rax+0x42],dl
   14000f5a2:	add    BYTE PTR [rax],al
   14000f5a4:	jbe    0x14000f5e8
   14000f5a6:	add    BYTE PTR [rax],al
   14000f5a8:	mov    bh,al
   14000f5aa:	add    BYTE PTR [rax],al
   14000f5ac:	add    BYTE PTR [rdx+0x0],0x0
   14000f5b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f5b1:	rex.X add BYTE PTR [rax],al
   14000f5b4:	xor    BYTE PTR [rcx+0x42b00000],0x0
   14000f5bb:	add    dh,dl
   14000f5bd:	rex.X add BYTE PTR [rax],al
   14000f5c0:	nop
   14000f5c1:	mov    cl,0x0
   14000f5c3:	add    al,ah
   14000f5c5:	rex.X add BYTE PTR [rax],al
   14000f5c8:	(bad)  
   14000f5c9:	rex.XB add BYTE PTR [r8],al
   14000f5cc:	mov    al,0xb1
   14000f5ce:	add    BYTE PTR [rax],al
   14000f5d0:	adc    BYTE PTR [rbx+0x0],al
   14000f5d3:	add    BYTE PTR [rdx+0x43],cl
   14000f5d6:	add    BYTE PTR [rax],al
   14000f5d8:	in     al,dx
   14000f5d9:	scas   al,BYTE PTR es:[rdi]
   14000f5da:	add    BYTE PTR [rax],al
   14000f5dc:	push   rax
   14000f5dd:	rex.XB add BYTE PTR [r8],al
   14000f5e0:	mov    edi,0x8000043
   14000f5e5:	mov    bh,0x0
   14000f5e7:	add    al,al
   14000f5e9:	rex.XB add BYTE PTR [r8],al
   14000f5ec:	cli    
   14000f5ed:	rex.XB add BYTE PTR [r8],al
   14000f5f0:	shr    BYTE PTR [rsi+0x44000000],1
   14000f5f6:	add    BYTE PTR [rax],al
   14000f5f8:	outs   dx,DWORD PTR ds:[rsi]
   14000f5f9:	add    BYTE PTR [rax],r8b
   14000f5fc:	(bad)  
   14000f5fd:	mov    bh,0x0
   14000f5ff:	add    BYTE PTR [rax+0x44],dh
   14000f602:	add    BYTE PTR [rax],al
   14000f604:	xchg   esi,eax
   14000f605:	add    BYTE PTR [rax],r8b
   14000f608:	cmp    al,0xb4
   14000f60a:	add    BYTE PTR [rax],al
   14000f60c:	movabs al,ds:0x6c000044c6000044
   14000f615:	mov    cl,0x0
   14000f617:	add    al,dl
   14000f619:	add    BYTE PTR [rax],r8b
   14000f61c:	add    BYTE PTR [rbp+0x0],al
   14000f61f:	add    BYTE PTR [rax-0x4f],bl
   14000f622:	add    BYTE PTR [rax],al
   14000f624:	add    BYTE PTR [rbp+0x0],al
   14000f627:	add    BYTE PTR [rsi],ah
   14000f629:	add    BYTE PTR [r8],r8b
   14000f62c:	push   rax
   14000f62d:	mov    ah,0x0
   14000f62f:	add    BYTE PTR [rax],dh
   14000f631:	add    BYTE PTR [r8],r8b
   14000f634:	xchg   edx,eax
   14000f635:	add    BYTE PTR [r8],r8b
   14000f638:	mov    BYTE PTR [rax+0x45a00000],bh
   14000f63e:	add    BYTE PTR [rax],al
   14000f640:	add    al,BYTE PTR [rsi+0x0]
   14000f643:	add    BYTE PTR [rax+0x100000b8],dh
   14000f649:	rex.RX add BYTE PTR [rax],r8b
   14000f64c:	jb     0x14000f694
   14000f64e:	add    BYTE PTR [rax],al
   14000f650:	(bad)  
   14000f651:	mov    eax,0x46800000
   14000f656:	add    BYTE PTR [rax],al
   14000f658:	call   0x17c00f6a3
   14000f65d:	scas   eax,DWORD PTR es:[rdi]
   14000f65e:	add    BYTE PTR [rax],al
   14000f660:	lock rex.RX add BYTE PTR [rax],r8b
   14000f664:	repnz rex.RXB add BYTE PTR [r8],r8b
   14000f668:	mov    ah,0xaf
   14000f66a:	add    BYTE PTR [rax],al
   14000f66c:	add    BYTE PTR [rax+0x0],cl
   14000f66f:	add    BYTE PTR [rcx+rcx*2],bl
   14000f672:	add    BYTE PTR [rax],al
   14000f674:	adc    BYTE PTR [rdx+0x49200000],dh
   14000f67a:	add    BYTE PTR [rax],al
   14000f67c:	(bad)  
   14000f67d:	rex.WB add BYTE PTR [r8],al
   14000f680:	(bad)  
   14000f681:	mov    ch,0x0
   14000f683:	add    BYTE PTR [rdi],ch
   14000f685:	rex.WB add BYTE PTR [r8],al
   14000f688:	jbe    0x14000f6d3
   14000f68a:	add    BYTE PTR [rax],al
   14000f68c:	ins    BYTE PTR es:[rdi],dx
   14000f68d:	mov    ch,0x0
   14000f68f:	add    BYTE PTR [rsi+0x49],dh
   14000f692:	add    BYTE PTR [rax],al
   14000f694:	ja     0x14000f6df
   14000f696:	add    BYTE PTR [rax],al
   14000f698:	xor    BYTE PTR [rbp+0x49800000],0x0
   14000f69f:	add    BYTE PTR [rdi-0x7bffffb7],cl
   14000f6a5:	mov    ah,0x0
   14000f6a7:	add    BYTE PTR [rdi-0x29ffffb7],cl
   14000f6ad:	rex.WB add BYTE PTR [r8],al
   14000f6b0:	nop
   14000f6b1:	mov    ah,0x0
   14000f6b3:	add    dh,dl
   14000f6b5:	rex.WB add BYTE PTR [r8],al
   14000f6b8:	xlat   BYTE PTR ds:[rbx]
   14000f6b9:	rex.WB add BYTE PTR [r8],al
   14000f6bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f6bd:	mov    ah,0x0
   14000f6bf:	add    BYTE PTR [rax+0x4a],ah
   14000f6c2:	add    BYTE PTR [rax],al
   14000f6c4:	stos   BYTE PTR es:[rdi],al
   14000f6c5:	rex.WX add BYTE PTR [rax],al
   14000f6c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f6c9:	mov    al,0x0
   14000f6cb:	add    BYTE PTR [rdx-0x3fffffb6],ch
   14000f6d1:	rex.WX add BYTE PTR [rax],al
   14000f6d4:	mov    ah,0xb0
   14000f6d6:	add    BYTE PTR [rax],al
   14000f6d8:	ror    BYTE PTR [rdx+0x0],0x0
   14000f6dc:	in     eax,0x4a
   14000f6de:	add    BYTE PTR [rax],al
   14000f6e0:	enter  0xb0,0x0
   14000f6e4:	in     eax,0x4a
   14000f6e6:	add    BYTE PTR [rax],al
   14000f6e8:	cld    
   14000f6e9:	rex.WX add BYTE PTR [rax],al
   14000f6ec:	fdiv   QWORD PTR [rax+0x4afc0000]
   14000f6f2:	add    BYTE PTR [rax],al
   14000f6f4:	(bad)  
   14000f6f5:	rex.WXB add BYTE PTR [r8],al
   14000f6f8:	in     al,dx
   14000f6f9:	mov    al,0x0
   14000f6fb:	add    BYTE PTR [rax],dh
   14000f6fd:	rex.WXB add BYTE PTR [r8],al
   14000f700:	or     DWORD PTR [rbx+0x0],0x0
   14000f704:	add    al,0xb3
   14000f706:	add    BYTE PTR [rax],al
   14000f708:	or     DWORD PTR [rbx+0x0],0x0
   14000f70c:	cdq    
   14000f70d:	rex.WXB add BYTE PTR [r8],al
   14000f710:	adc    al,0xb3
   14000f712:	add    BYTE PTR [rax],al
   14000f714:	cdq    
   14000f715:	rex.WXB add BYTE PTR [r8],al
   14000f718:	mov    edi,0x2800004b
   14000f71d:	mov    bl,0x0
   14000f71f:	add    BYTE PTR [rdi-0x28ffffb5],bh
   14000f725:	rex.WXB add BYTE PTR [r8],al
   14000f728:	cmp    al,0xb3
   14000f72a:	add    BYTE PTR [rax],al
   14000f72c:	xlat   BYTE PTR ds:[rbx]
   14000f72d:	rex.WXB add BYTE PTR [r8],al
   14000f730:	add    cl,BYTE PTR [rax+rax*1+0x0]
   14000f734:	rex.WR mov bl,0x0
   14000f737:	add    BYTE PTR [rax+0x4d],al
   14000f73a:	add    BYTE PTR [rax],al
   14000f73c:	push   rbx
   14000f73d:	rex.WRX add BYTE PTR [rax],r8b
   14000f740:	nop
   14000f741:	mov    ch,0x0
   14000f743:	add    BYTE PTR [rax+0x4e],ah
   14000f746:	add    BYTE PTR [rax],al
   14000f748:	jmp    0x14000f798
   14000f74a:	add    BYTE PTR [rax],al
   14000f74c:	and    BYTE PTR [rsi+0x4ef00000],dh
   14000f752:	add    BYTE PTR [rax],al
   14000f754:	or     ecx,DWORD PTR [rdi+0x0]
   14000f757:	add    ah,bh
   14000f759:	mov    al,0x0
   14000f75b:	add    BYTE PTR [rbx],cl
   14000f75d:	rex.WRXB add BYTE PTR [r8],r8b
   14000f760:	sub    eax,0x800004f
   14000f765:	mov    cl,0x0
   14000f767:	add    BYTE PTR [rip+0x4800004f],ch        # 0x18800f7bc
   14000f76d:	rex.WRXB add BYTE PTR [r8],r8b
   14000f770:	sbb    al,0xb1
   14000f772:	add    BYTE PTR [rax],al
   14000f774:	push   rax
   14000f775:	rex.WRXB add BYTE PTR [r8],r8b
   14000f778:	imul   ecx,DWORD PTR [rdi+0x0],0x0
   14000f77c:	pop    rsp
   14000f77d:	mov    bl,0x0
   14000f77f:	add    BYTE PTR [rbx+0x4f],ch
   14000f782:	add    BYTE PTR [rax],al
   14000f784:	nop
   14000f785:	rex.WRXB add BYTE PTR [r8],r8b
   14000f788:	push   0xffffffff900000b3
   14000f78d:	rex.WRXB add BYTE PTR [r8],r8b
   14000f790:	lods   eax,DWORD PTR ds:[rsi]
   14000f791:	rex.WRXB add BYTE PTR [r8],r8b
   14000f794:	jl     0x14000f749
   14000f796:	add    BYTE PTR [rax],al
   14000f798:	mov    al,0x4f
   14000f79a:	add    BYTE PTR [rax],al
   14000f79c:	(bad)
   14000f79f:	add    BYTE PTR [rax],ch
   14000f7a1:	mov    dh,0x0
   14000f7a3:	add    ch,al
   14000f7a5:	rex.WRXB add BYTE PTR [r8],r8b
   14000f7a8:	and    al,0x50
   14000f7aa:	add    BYTE PTR [rax],al
   14000f7ac:	xor    al,0xb6
   14000f7ae:	add    BYTE PTR [rax],al
   14000f7b0:	and    al,0x50
   14000f7b2:	add    BYTE PTR [rax],al
   14000f7b4:	(bad)  
   14000f7b5:	push   rax
   14000f7b6:	add    BYTE PTR [rax],al
   14000f7b8:	rex.WR mov sil,0x0
   14000f7bb:	add    BYTE PTR [rax],dh
   14000f7bd:	push   rax
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	rex.RB push r8
   14000f7c2:	add    BYTE PTR [rax],al
   14000f7c4:	mov    ah,0xb4
   14000f7c6:	add    BYTE PTR [rax],al
   14000f7c8:	rex.RB push r8
   14000f7ca:	add    BYTE PTR [rax],al
   14000f7cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f7cd:	push   rax
   14000f7ce:	add    BYTE PTR [rax],al
   14000f7d0:	shl    BYTE PTR [rax+rax*1+0x50a400],0x0
   14000f7d8:	scas   eax,DWORD PTR es:[rdi]
   14000f7d9:	push   rax
   14000f7da:	add    BYTE PTR [rax],al
   14000f7dc:	fdiv   DWORD PTR [rax+rax*1+0x50c000]
   14000f7e3:	add    dl,dl
   14000f7e5:	push   rax
   14000f7e6:	add    BYTE PTR [rax],al
   14000f7e8:	sub    al,0xb1
   14000f7ea:	add    BYTE PTR [rax],al
   14000f7ec:	loopne 0x14000f83e
   14000f7ee:	add    BYTE PTR [rax],al
   14000f7f0:	repnz push rax
   14000f7f2:	add    BYTE PTR [rax],al
   14000f7f4:	mov    WORD PTR [rbx+0x51000000],?
   14000f7fa:	add    BYTE PTR [rax],al
   14000f7fc:	adc    dl,BYTE PTR [rcx+0x0]
   14000f7ff:	add    BYTE PTR [rsi+rsi*4+0x0],bl
   14000f803:	add    BYTE PTR [rax],ah
   14000f805:	push   rcx
   14000f806:	add    BYTE PTR [rax],al
   14000f808:	xor    dl,BYTE PTR [rcx+0x0]
   14000f80b:	add    BYTE PTR [rcx+rsi*4],dh
   14000f80e:	add    BYTE PTR [rax],al
   14000f810:	rex push rcx
   14000f812:	add    BYTE PTR [rax],al
   14000f814:	push   rdx
   14000f815:	push   rcx
   14000f816:	add    BYTE PTR [rax],al
   14000f818:	xchg   esp,eax
   14000f819:	mov    bl,0x0
   14000f81b:	add    BYTE PTR [rax-0x3affffaf],al
   14000f821:	push   rcx
   14000f822:	add    BYTE PTR [rax],al
   14000f824:	sbb    al,0xb4
   14000f826:	add    BYTE PTR [rax],al
   14000f828:	rcl    BYTE PTR [rcx+0x0],1
   14000f82b:	add    dl,bh
   14000f82d:	push   rcx
   14000f82e:	add    BYTE PTR [rax],al
   14000f830:	sbb    BYTE PTR [rdi+0x52000000],ch
   14000f836:	add    BYTE PTR [rax],al
   14000f838:	(bad)  
   14000f839:	push   rdx
   14000f83a:	add    BYTE PTR [rax],al
   14000f83c:	lock mov ah,0x0
   14000f83f:	add    BYTE PTR [rax+0x52],al
   14000f842:	add    BYTE PTR [rax],al
   14000f844:	je     0x14000f898
   14000f846:	add    BYTE PTR [rax],al
   14000f848:	shl    BYTE PTR [rcx+0x52800000],0x0
   14000f84f:	add    BYTE PTR [rdx+0x10000052],ch
   14000f855:	scas   eax,DWORD PTR es:[rdi]
   14000f856:	add    BYTE PTR [rax],al
   14000f858:	mov    al,0x52
   14000f85a:	add    BYTE PTR [rax],al
   14000f85c:	out    0x52,eax
   14000f85e:	add    BYTE PTR [rax],al
   14000f860:	call   0x13000f919
   14000f865:	push   rdx
   14000f866:	add    BYTE PTR [rax],al
   14000f868:	and    al,0x53
   14000f86a:	add    BYTE PTR [rax],al
   14000f86c:	mov    eax,0x400000b1
   14000f871:	push   rbx
   14000f872:	add    BYTE PTR [rax],al
   14000f874:	pop    rsi
   14000f875:	push   rsp
   14000f876:	add    BYTE PTR [rax],al
   14000f878:	push   rax
   14000f879:	scas   eax,DWORD PTR es:[rdi]
   14000f87a:	add    BYTE PTR [rax],al
   14000f87c:	adc    BYTE PTR [rax+rax*1+0x0],0xc5
   14000f881:	push   rbp
   14000f882:	add    BYTE PTR [rax],al
   14000f884:	push   0xffffffffd00000af
   14000f889:	push   rbp
   14000f88a:	add    BYTE PTR [rax],al
   14000f88c:	repnz push rsi
   14000f88e:	add    BYTE PTR [rax],al
   14000f890:	jl     0x14000f841
   14000f892:	add    BYTE PTR [rax],al
   14000f894:	and    BYTE PTR [rdi+0x0],dl
   14000f897:	add    BYTE PTR [rdi+0x58],cl
   14000f89a:	add    BYTE PTR [rax],al
   14000f89c:	nop
   14000f89d:	scas   eax,DWORD PTR es:[rdi]
   14000f89e:	add    BYTE PTR [rax],al
   14000f8a0:	push   rax
   14000f8a1:	pop    rax
   14000f8a2:	add    BYTE PTR [rax],al
   14000f8a4:	mov    bl,BYTE PTR [rcx+0x0]
   14000f8a7:	add    al,bl
   14000f8a9:	mov    cl,0x0
   14000f8ab:	add    al,al
   14000f8ad:	pop    rcx
   14000f8ae:	add    BYTE PTR [rax],al
   14000f8b0:	(bad)  
   14000f8b1:	pop    rbx
   14000f8b2:	add    BYTE PTR [rax],al
   14000f8b4:	in     al,dx
   14000f8b5:	mov    cl,0x0
   14000f8b7:	add    BYTE PTR [rax-0x1effffa5],al
   14000f8bd:	pop    rbx
   14000f8be:	add    BYTE PTR [rax],al
   14000f8c0:	nop
   14000f8c1:	mov    edi,0x5bf00000
   14000f8c6:	add    BYTE PTR [rax],al
   14000f8c8:	mov    edi,0xc800005c
   14000f8cd:	rol    DWORD PTR [rax],0x0
   14000f8d0:	rcr    BYTE PTR [rax+rax*1+0x0],1
   14000f8d4:	lahf   
   14000f8d5:	pop    rbp
   14000f8d6:	add    BYTE PTR [rax],al
   14000f8d8:	rol    bl,1
   14000f8da:	add    BYTE PTR [rax],al
   14000f8dc:	movabs al,ds:0x800005dbc00005d
   14000f8e5:	scas   eax,DWORD PTR es:[rdi]
   14000f8e6:	add    BYTE PTR [rax],al
   14000f8e8:	rcr    BYTE PTR [rbp+0x0],0x0
   14000f8ec:	fistp  WORD PTR [rbp+0x0]
   14000f8ef:	add    BYTE PTR [rax],al
   14000f8f1:	scas   eax,DWORD PTR es:[rdi]
   14000f8f2:	add    BYTE PTR [rax],al
   14000f8f4:	loopne 0x14000f953
   14000f8f6:	add    BYTE PTR [rax],al
   14000f8f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f8f9:	pop    rsi
   14000f8fa:	add    BYTE PTR [rax],al
   14000f8fc:	test   al,0xb3
   14000f8fe:	add    BYTE PTR [rax],al
   14000f900:	mov    al,0x5e
   14000f902:	add    BYTE PTR [rax],al
   14000f904:	rex.WX pop rdi
   14000f906:	add    BYTE PTR [rax],al
   14000f908:	loopne 0x14000f8c2
   14000f90a:	add    BYTE PTR [rax],al
   14000f90c:	rcr    BYTE PTR [rdi+0x0],1
   14000f90f:	add    BYTE PTR [rax],dl
   14000f911:	(bad)  
   14000f912:	add    BYTE PTR [rax],al
   14000f914:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f915:	mov    cl,0x0
   14000f917:	add    BYTE PTR [rax-0x18ffffa0],dh
   14000f91d:	(bad)  
   14000f91e:	add    BYTE PTR [rax],al
   14000f920:	fs mov cl,0x0
   14000f923:	add    al,dh
   14000f925:	(bad)  
   14000f926:	add    BYTE PTR [rax],al
   14000f928:	mov    ecx,0xa8000061
   14000f92d:	scas   eax,DWORD PTR es:[rdi]
   14000f92e:	add    BYTE PTR [rax],al
   14000f930:	shl    BYTE PTR [rcx+0x0],0x0
   14000f934:	(bad)  
   14000f935:	(bad)  
   14000f936:	add    BYTE PTR [rax],al
   14000f938:	movabs al,ds:0xab000062000000af
   14000f941:	(bad)  
   14000f942:	add    BYTE PTR [rax],al
   14000f944:	add    al,0xb2
   14000f946:	add    BYTE PTR [rax],al
   14000f948:	mov    al,0x62
   14000f94a:	add    BYTE PTR [rax],al
   14000f94c:	mul    BYTE PTR [rdx+0x0]
   14000f94f:	add    ah,bh
   14000f951:	mov    cl,0x0
   14000f953:	add    BYTE PTR [rax+0x63],al
   14000f956:	add    BYTE PTR [rax],al
   14000f958:	xchg   BYTE PTR [rbx+0x0],ah
   14000f95b:	add    BYTE PTR [rax-0x47],al
   14000f95e:	add    BYTE PTR [rax],al
   14000f960:	shl    BYTE PTR [rax+rax*1+0x0],1
   14000f964:	xor    ah,BYTE PTR [rbp+0x0]
   14000f967:	add    BYTE PTR [rcx+rsi*4+0x0],dh
   14000f96b:	add    BYTE PTR [rax+0x65],al
   14000f96e:	add    BYTE PTR [rax],al
   14000f970:	lea    esp,[rbp+0x0]
   14000f973:	add    BYTE PTR [rax-0x6fffff4f],cl
   14000f979:	add    BYTE PTR gs:[rax],al
   14000f97c:	repnz add BYTE PTR gs:[rax],al
   14000f980:	cwde   
   14000f981:	mov    cl,0x0
   14000f983:	add    BYTE PTR [rax],al
   14000f985:	data16 add BYTE PTR [rax],al
   14000f988:	(bad)  
   14000f989:	data16 add BYTE PTR [rax],al
   14000f98c:	test   BYTE PTR [rdi+0x66a00000],dh
   14000f992:	add    BYTE PTR [rax],al
   14000f994:	in     eax,dx
   14000f995:	add    BYTE PTR [eax],al
   14000f998:	clc    
   14000f999:	mov    ah,0x0
   14000f99b:	add    al,dh
   14000f99d:	add    BYTE PTR [eax],al
   14000f9a0:	sbb    BYTE PTR [rax+0x0],ch
   14000f9a3:	add    BYTE PTR [rax],ch
   14000f9a5:	mov    ah,0x0
   14000f9a7:	add    BYTE PTR [rax],ah
   14000f9a9:	push   0x68530000
   14000f9ae:	add    BYTE PTR [rax],al
   14000f9b0:	rex.R mov spl,0x0
   14000f9b3:	add    BYTE PTR [rax+0x68],ah
   14000f9b6:	add    BYTE PTR [rax],al
   14000f9b8:	lahf   
   14000f9b9:	push   0xffffffffb5580000
   14000f9be:	add    BYTE PTR [rax],al
   14000f9c0:	mov    al,0x68
   14000f9c2:	add    BYTE PTR [rax],al
   14000f9c4:	retf   0x69
   14000f9c7:	add    al,al
   14000f9c9:	mov    edi,0x69e00000
   14000f9ce:	add    BYTE PTR [rax],al
   14000f9d0:	mov    bl,0x6a
   14000f9d2:	add    BYTE PTR [rax],al
   14000f9d4:	xor    dl,al
   14000f9d6:	add    BYTE PTR [rax],al
   14000f9d8:	shr    BYTE PTR [rdx+0x0],0x0
   14000f9dc:	xchg   ebx,eax
   14000f9dd:	imul   eax,DWORD PTR [rax],0x0
   14000f9e0:	cmp    ah,al
   14000f9e2:	add    BYTE PTR [rax],al
   14000f9e4:	(bad)  
   14000f9e5:	ins    BYTE PTR es:[rdi],dx
   14000f9e6:	add    BYTE PTR [rax],al
   14000f9e8:	cdq    
   14000f9e9:	ins    BYTE PTR es:[rdi],dx
   14000f9ea:	add    BYTE PTR [rax],al
   14000f9ec:	cmp    BYTE PTR [rcx+0x6ce00000],bh
   14000f9f2:	add    BYTE PTR [rax],al
   14000f9f4:	stos   BYTE PTR es:[rdi],al
   14000f9f5:	ins    DWORD PTR es:[rdi],dx
   14000f9f6:	add    BYTE PTR [rax],al
   14000f9f8:	movabs al,ds:0x6400006db00000b7
   14000fa01:	jo     0x14000fa03
   14000fa03:	add    BYTE PTR [rcx+rdi*4+0x70800000],ch
   14000fa0a:	add    BYTE PTR [rax],al
   14000fa0c:	(bad)  
   14000fa0d:	jo     0x14000fa0f
   14000fa0f:	add    al,bh
   14000fa11:	scas   al,BYTE PTR es:[rdi]
   14000fa12:	add    BYTE PTR [rax],al
   14000fa14:	adc    BYTE PTR [rcx+0x0],dh
   14000fa17:	add    BYTE PTR [rbp+0x71],ch
   14000fa1a:	add    BYTE PTR [rax],al
   14000fa1c:	nop
   14000fa1d:	mov    DWORD PTR [rax],0x717000
   14000fa23:	add    BYTE PTR [rcx+rsi*2-0x38100000],cl
   14000fa2a:	add    BYTE PTR [rax],al
   14000fa2c:	mov    WORD PTR [rcx+0x0],?
   14000fa2f:	add    dh,dl
   14000fa31:	jno    0x14000fa33
   14000fa33:	add    al,al
   14000fa35:	mov    DWORD PTR [rax],0x71e800
   14000fa3b:	add    BYTE PTR [rsi],dh
   14000fa3d:	jb     0x14000fa3f
   14000fa3f:	add    BYTE PTR [rax],ch
   14000fa41:	enter  0x0,0x38
   14000fa45:	jb     0x14000fa47
   14000fa47:	add    al,ch
   14000fa49:	jb     0x14000fa4b
   14000fa4b:	add    BYTE PTR [rax],al
   14000fa4d:	enter  0x0,0xe8
   14000fa51:	jb     0x14000fa53
   14000fa53:	add    bh,bh
   14000fa55:	jb     0x14000fa57
   14000fa57:	add    al,bh
   14000fa59:	mov    DWORD PTR [rax],0x735800
   14000fa5f:	add    dl,al
   14000fa61:	jae    0x14000fa63
   14000fa63:	add    BYTE PTR [rax],dh
   14000fa65:	enter  0x0,0xc4
   14000fa69:	jae    0x14000fa6b
   14000fa6b:	add    BYTE PTR [rdx+0x40000074],dl
   14000fa71:	enter  0x0,0x94
   14000fa75:	je     0x14000fa77
   14000fa77:	add    bh,dh
   14000fa79:	je     0x14000fa7b
   14000fa7b:	add    BYTE PTR [rax-0x38],cl
   14000fa7e:	add    BYTE PTR [rax],al
   14000fa80:	add    al,0x75
   14000fa82:	add    BYTE PTR [rax],al
   14000fa84:	(bad)  
   14000fa85:	jne    0x14000fa87
   14000fa87:	add    BYTE PTR [rax+0x180000c8],al
   14000fa8d:	jne    0x14000fa8f
   14000fa8f:	add    BYTE PTR [rax],al
   14000fa91:	ja     0x14000fa93
   14000fa93:	add    BYTE PTR [rax-0x38],dl
   14000fa96:	add    BYTE PTR [rax],al
   14000fa98:	jo     0x14000fb11
   14000fa9a:	add    BYTE PTR [rax],al
   14000fa9c:	test   al,0x77
   14000fa9e:	add    BYTE PTR [rax],al
   14000faa0:	mov    al,cl
   14000faa2:	add    BYTE PTR [rax],al
   14000faa4:	test   al,0x77
   14000faa6:	add    BYTE PTR [rax],al
   14000faa8:	mov    edi,0x90000077
   14000faad:	enter  0x0,0x40
   14000fab1:	js     0x14000fab3
   14000fab3:	add    BYTE PTR [rbp-0x67ffff88],cl
   14000fab9:	enter  0x0,0xd0
   14000fabd:	js     0x14000fabf
   14000fabf:	add    BYTE PTR [rcx+rdi*2+0x0],bh
   14000fac3:	add    ah,al
   14000fac5:	enter  0x0,0x88
   14000fac9:	jns    0x14000facb
   14000facb:	add    al,al
   14000facd:	jns    0x14000facf
   14000facf:	add    al,dl
   14000fad1:	enter  0x0,0xc0
   14000fad5:	jns    0x14000fad7
   14000fad7:	add    al,bh
   14000fad9:	jns    0x14000fadb
   14000fadb:	add    ah,bl
   14000fadd:	enter  0x0,0x50
   14000fae1:	jp     0x14000fae3
   14000fae3:	add    BYTE PTR [rdx+0x7a],bh
   14000fae6:	add    BYTE PTR [rax],al
   14000fae8:	fadd   st,st(6)
   14000faea:	add    BYTE PTR [rax],al
   14000faec:	nop
   14000faed:	jp     0x14000faef
   14000faef:	add    BYTE PTR [rdx+0x6000007a],bh
   14000faf5:	mov    DWORD PTR [rax],0x7ac000
   14000fafb:	add    bh,bh
   14000fafd:	jp     0x14000faff
   14000faff:	add    BYTE PTR [rax],bh
   14000fb01:	mov    BYTE PTR [rax],0x0
   14000fb04:	add    BYTE PTR [rbx+0x0],bh
   14000fb07:	add    BYTE PTR [rbx+rdi*2],bl
   14000fb0a:	add    BYTE PTR [rax],al
   14000fb0c:	or     BYTE PTR [rbx+0x7b200000],bh
   14000fb12:	add    BYTE PTR [rax],al
   14000fb14:	cmp    al,0x7b
   14000fb16:	add    BYTE PTR [rax],al
   14000fb18:	mov    al,0xc0
   14000fb1a:	add    BYTE PTR [rax],al
   14000fb1c:	pop    rax
   14000fb1d:	jnp    0x14000fb1f
   14000fb1f:	add    BYTE PTR [rdx-0x47ffff85],al
   14000fb25:	mov    esp,0x7bbe0000
   14000fb2a:	add    BYTE PTR [rax],al
   14000fb2c:	(bad)  
   14000fb2d:	jnp    0x14000fb2f
   14000fb2f:	add    al,al
   14000fb31:	mov    esp,0x7be00000
   14000fb36:	add    BYTE PTR [rax],al
   14000fb38:	or     eax,0xc800007c
   14000fb3d:	mov    esp,0x7c380000
   14000fb42:	add    BYTE PTR [rax],al
   14000fb44:	(bad)  
   14000fb45:	jl     0x14000fb47
   14000fb47:	add    BYTE PTR [rax],bh
   14000fb49:	mov    esi,0x7c9e0000
   14000fb4e:	add    BYTE PTR [rax],al
   14000fb50:	mov    ah,0x7c
   14000fb52:	add    BYTE PTR [rax],al
   14000fb54:	rex mov esi,0x7cc00000
   14000fb5a:	add    BYTE PTR [rax],al
   14000fb5c:	in     eax,dx
   14000fb5d:	jl     0x14000fb5f
   14000fb5f:	add    BYTE PTR [rax-0x42],cl
   14000fb62:	add    BYTE PTR [rax],al
   14000fb64:	adc    BYTE PTR [rbp+0x0],bh
   14000fb67:	add    BYTE PTR [rip+0x3800007d],bh        # 0x17800fbea
   14000fb6d:	mov    edi,0x7d500000
   14000fb72:	add    BYTE PTR [rax],al
   14000fb74:	jge    0x14000fbf3
   14000fb76:	add    BYTE PTR [rax],al
   14000fb78:	mov    BYTE PTR [rdi+0x7d900000],bh
   14000fb7e:	add    BYTE PTR [rax],al
   14000fb80:	mov    ebp,0x6000007d
   14000fb85:	rol    BYTE PTR [rax],0x0
   14000fb88:	sar    BYTE PTR [rbp+0x0],0x0
   14000fb8c:	(bad)  
   14000fb8d:	jge    0x14000fb8f
   14000fb8f:	add    BYTE PTR [rax-0x3f],ch
   14000fb92:	add    BYTE PTR [rax],al
   14000fb94:	add    BYTE PTR [rsi+0x0],bh
   14000fb97:	add    BYTE PTR [rdx],ch
   14000fb99:	jle    0x14000fb9b
   14000fb9b:	add    BYTE PTR [rax+0x400000c1],bh
   14000fba1:	jle    0x14000fba3
   14000fba3:	add    BYTE PTR [rdx+0x7e],ch
   14000fba6:	add    BYTE PTR [rax],al
   14000fba8:	mov    al,0xc2
   14000fbaa:	add    BYTE PTR [rax],al
   14000fbac:	jo     0x14000fc2c
   14000fbae:	add    BYTE PTR [rax],al
   14000fbb0:	(bad)  
   14000fbb1:	jle    0x14000fbb3
   14000fbb3:	add    BYTE PTR [rax-0x3d],dh
   14000fbb6:	add    BYTE PTR [rax],al
   14000fbb8:	mov    al,0x7e
   14000fbba:	add    BYTE PTR [rax],al
   14000fbbc:	fidivr DWORD PTR [rsi+0x0]
   14000fbbf:	add    al,al
   14000fbc1:	ret    
   14000fbc2:	add    BYTE PTR [rax],al
   14000fbc4:	lock jle 0x14000fbc7
   14000fbc7:	add    BYTE PTR [rdx],bl
   14000fbc9:	jg     0x14000fbcb
   14000fbcb:	add    BYTE PTR [rax+0x600000c4],bh
   14000fbd1:	jg     0x14000fbd3
   14000fbd3:	add    BYTE PTR [rdi+rdi*2-0x4f800000],ah
   14000fbda:	add    BYTE PTR [rax],al
   14000fbdc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fbdd:	jg     0x14000fbdf
   14000fbdf:	add    dl,ah
   14000fbe1:	jg     0x14000fbe3
   14000fbe3:	add    BYTE PTR [rax-0xfffff50],dl
   14000fbe9:	jg     0x14000fbeb
   14000fbeb:	add    BYTE PTR [rax-0x80],al
   14000fbee:	add    BYTE PTR [rax],al
   14000fbf0:	loopne 0x14000fba4
   14000fbf2:	add    BYTE PTR [rax],al
   14000fbf4:	rex add BYTE PTR [rax],0x0
   14000fbf8:	add    BYTE PTR [rax-0x4d100000],0x0
   14000fbff:	add    BYTE PTR [rax-0x5cffff80],al
   14000fc05:	add    BYTE PTR [rax],0x0
   14000fc08:	adc    BYTE PTR [rsi-0x7f340000],dh
   14000fc0e:	add    BYTE PTR [rax],al
   14000fc10:	test   BYTE PTR [rax-0x3dd80000],0x0
   14000fc17:	add    BYTE PTR [rcx+rax*4],bl
   14000fc1a:	add    BYTE PTR [rax],al
   14000fc1c:	rex.RX add DWORD PTR [rax],0xc43000
   14000fc23:	add    BYTE PTR [rax-0x53ffff7f],dl
   14000fc29:	add    DWORD PTR [rax],0xb54800
   14000fc2f:	add    BYTE PTR [rcx+rax*4-0x7e380000],ch
   14000fc36:	add    BYTE PTR [rax],al
   14000fc38:	push   rax
   14000fc39:	mov    ch,0x0
   14000fc3b:	add    al,dl
   14000fc3d:	add    DWORD PTR [rax],0x820300
   14000fc43:	add    BYTE PTR [rax],ch
   14000fc45:	rol    BYTE PTR [rax],0x0
   14000fc48:	and    BYTE PTR [rdx-0x7db00000],al
   14000fc4e:	add    BYTE PTR [rax],al
   14000fc50:	js     0x14000fc14
   14000fc52:	add    BYTE PTR [rax],al
   14000fc54:	(bad)  
   14000fc55:	(bad)  
   14000fc56:	add    BYTE PTR [rax],al
   14000fc58:	nop
   14000fc59:	(bad)  
   14000fc5a:	add    BYTE PTR [rax],al
   14000fc5c:	add    ah,0x0
   14000fc5f:	add    BYTE PTR [rdx+rax*4-0x7d2b0000],ch
   14000fc66:	add    BYTE PTR [rax],al
   14000fc68:	rex mov eax,0x832c0000
   14000fc6e:	add    BYTE PTR [rax],al
   14000fc70:	rex.WRX add QWORD PTR [rax],0x0
   14000fc74:	sar    BYTE PTR [rdx-0x7cb20000],0x0
   14000fc7b:	add    BYTE PTR [rdx-0x7d],bh
   14000fc7e:	add    BYTE PTR [rax],al
   14000fc80:	mov    eax,0x7a0000c7
   14000fc85:	add    DWORD PTR [rax],0x0
   14000fc88:	mov    ebx,0xe8000083
   14000fc8d:	mov    DWORD PTR [rax],0x83bb00
   14000fc93:	add    dh,dl
   14000fc95:	add    DWORD PTR [rax],0x0
   14000fc98:	and    al,cl
   14000fc9a:	add    BYTE PTR [rax],al
   14000fc9c:	(bad)  
   14000fc9d:	add    DWORD PTR [rax],0x0
   14000fca0:	hlt    
   14000fca1:	add    DWORD PTR [rax],0x0
   14000fca4:	js     0x14000fc6e
   14000fca6:	add    BYTE PTR [rax],al
   14000fca8:	add    BYTE PTR [rax+rax*1+0x842000],al
   14000fcaf:	add    BYTE PTR [rax+rcx*8-0x7bb00000],bh
   14000fcb6:	add    BYTE PTR [rax],al
   14000fcb8:	data16 test BYTE PTR [rax],al
   14000fcbb:	add    al,bl
   14000fcbd:	mov    esp,0x84660000
   14000fcc2:	add    BYTE PTR [rax],al
   14000fcc4:	mov    al,BYTE PTR [rax+rax*1+0xbce000]
   14000fccb:	add    BYTE PTR [rdx-0x6fffff7c],cl
   14000fcd1:	test   BYTE PTR [rax],al
   14000fcd3:	add    ah,dh
   14000fcd5:	mov    esp,0x84900000
   14000fcda:	add    BYTE PTR [rax],al
   14000fcdc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fcdd:	test   BYTE PTR [rax],al
   14000fcdf:	add    BYTE PTR [rax-0x42],bl
   14000fce2:	add    BYTE PTR [rax],al
   14000fce4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fce5:	test   BYTE PTR [rax],al
   14000fce7:	add    dl,cl
   14000fce9:	test   BYTE PTR [rax],al
   14000fceb:	add    BYTE PTR [rax-0x42],ah
   14000fcee:	add    BYTE PTR [rax],al
   14000fcf0:	retf   0x84
   14000fcf3:	add    al,dl
   14000fcf5:	test   BYTE PTR [rax],al
   14000fcf7:	add    BYTE PTR [rsi+rdi*4+0x0],dh
   14000fcfb:	add    al,dl
   14000fcfd:	test   BYTE PTR [rax],al
   14000fcff:	add    dh,ah
   14000fd01:	test   BYTE PTR [rax],al
   14000fd03:	add    BYTE PTR [rax],al
   14000fd05:	ret    
   14000fd06:	add    BYTE PTR [rax],al
   14000fd08:	out    0x84,al
   14000fd0a:	add    BYTE PTR [rax],al
   14000fd0c:	or     al,BYTE PTR [rbp-0x3cf80000]
   14000fd12:	add    BYTE PTR [rax],al
   14000fd14:	or     al,BYTE PTR [rbp-0x7af00000]
   14000fd1a:	add    BYTE PTR [rax],al
   14000fd1c:	sbb    al,0xc3
   14000fd1e:	add    BYTE PTR [rax],al
   14000fd20:	adc    BYTE PTR [rbp-0x7ada0000],al
   14000fd26:	add    BYTE PTR [rax],al
   14000fd28:	or     ch,al
   14000fd2a:	add    BYTE PTR [rax],al
   14000fd2c:	test   DWORD PTR es:[rax],eax
   14000fd2f:	add    BYTE PTR [rdx-0x7b],cl
   14000fd32:	add    BYTE PTR [rax],al
   14000fd34:	adc    ch,al
   14000fd36:	add    BYTE PTR [rax],al
   14000fd38:	rex.WX test QWORD PTR [rax],rax
   14000fd3b:	add    BYTE PTR [rax-0x7b],dl
   14000fd3e:	add    BYTE PTR [rax],al
   14000fd40:	and    al,0xc5
	...

Disassembly of section .rsrc:

0000000140010000 <.rsrc>:
	...
   140010008:	add    al,0x0
   14001000a:	add    BYTE PTR [rax],al
   14001000c:	add    BYTE PTR [rax],al
   14001000e:	or     al,BYTE PTR [rax]
   140010010:	add    DWORD PTR [rax],eax
   140010012:	add    BYTE PTR [rax],al
   140010014:	(bad)  
   140010015:	add    BYTE PTR [rax],al
   140010017:	add    BYTE PTR [rdx],0x0
   14001001a:	add    BYTE PTR [rax],al
   14001001c:	rol    BYTE PTR [rax],1
   14001001e:	add    BYTE PTR [rax+0x3],al
   140010024:	sbb    BYTE PTR [rcx],al
   140010026:	add    BYTE PTR [rax+0x5],al
   14001002c:	js     0x14001002f
   14001002e:	add    BYTE PTR [rax+0x6],al
   140010034:	fadd   DWORD PTR [rcx]
   140010036:	add    BYTE PTR [rax+0x9],al
   14001003c:	add    BYTE PTR [rdx],al
   14001003e:	add    BYTE PTR [rax+0xc],al
   140010044:	sbb    BYTE PTR [rdx],al
   140010046:	add    BYTE PTR [rax+0xe],al
   14001004c:	push   0x10800002
   140010051:	add    BYTE PTR [rax],al
   140010053:	add    BYTE PTR [rax+0x18800002],al
   140010059:	add    BYTE PTR [rax],al
   14001005b:	add    BYTE PTR [rax+0x800002],bl
   140010061:	add    BYTE PTR [rax],al
   140010063:	add    BYTE PTR [rax],al
   140010065:	add    BYTE PTR [rax],al
   140010067:	add    BYTE PTR [rax+rax*1],al
   14001006a:	add    BYTE PTR [rax],al
   14001006c:	add    BYTE PTR [rax],al
   14001006e:	or     al,0x0
   140010070:	add    DWORD PTR [rax],eax
   140010072:	add    BYTE PTR [rax],al
   140010074:	mov    al,0x2
   140010076:	add    BYTE PTR [rax+0x2],al
   14001007c:	enter  0x2,0x80
   140010080:	add    eax,DWORD PTR [rax]
   140010082:	add    BYTE PTR [rax],al
   140010084:	loopne 0x140010088
   140010086:	add    BYTE PTR [rax+0x4],al
   14001008c:	clc    
   14001008d:	add    al,BYTE PTR [rax]
   14001008f:	add    BYTE PTR [rip+0x10000000],0x3        # 0x150010096
   140010096:	add    BYTE PTR [rax+0x6],al
   14001009c:	sub    BYTE PTR [rbx],al
   14001009e:	add    BYTE PTR [rax+0x7],al
   1400100a4:	rex add eax,DWORD PTR [rax]
   1400100a7:	or     BYTE PTR [rax],0x0
   1400100aa:	add    BYTE PTR [rax],al
   1400100ac:	pop    rax
   1400100ad:	add    eax,DWORD PTR [rax]
   1400100af:	or     BYTE PTR [rcx],0x0
   1400100b2:	add    BYTE PTR [rax],al
   1400100b4:	jo     0x1400100b9
   1400100b6:	add    BYTE PTR [rax+0xa],al
   1400100bc:	mov    BYTE PTR [rbx],al
   1400100be:	add    BYTE PTR [rax+0xb],al
   1400100c4:	movabs al,ds:0xb80000000c800003
   1400100cd:	add    eax,DWORD PTR [rax]
   1400100cf:	add    BYTE PTR [rax],0x0
   1400100d2:	add    BYTE PTR [rax],al
   1400100d4:	add    BYTE PTR [rax],al
   1400100d6:	add    BYTE PTR [rax],al
   1400100d8:	add    al,0x0
   1400100da:	add    BYTE PTR [rax],al
   1400100dc:	(bad)  
   1400100dd:	add    BYTE PTR [rax],al
   1400100df:	add    BYTE PTR [rax+0xc],al
   1400100e2:	add    BYTE PTR [rax-0x7ffffc30],al
   1400100e8:	push   rax
   1400100e9:	or     al,0x0
   1400100eb:	sub    al,0x3
   1400100ee:	add    BYTE PTR [rax-0x7ffff398],al
   1400100f4:	add    BYTE PTR [rax+rax*1],al
   1400100f7:	cmp    BYTE PTR [rax+0xc],0x0
   1400100fb:	sbb    BYTE PTR [rax],0x4
   1400100fe:	add    BYTE PTR [rax-0x7ffff378],al
   140010104:	xor    BYTE PTR [rax+rax*1],al
   140010107:	adc    BYTE PTR [rsp+rcx*1+0x4508000],0x0
   14001010f:	and    BYTE PTR [rdx+0x7080000c],0x4
   140010116:	add    BYTE PTR [rax+0x0],al
   14001011c:	add    BYTE PTR [rax],al
   14001011e:	add    BYTE PTR [rax],al
   140010120:	add    al,0x0
   140010122:	add    BYTE PTR [rax],al
   140010124:	add    BYTE PTR [rax],al
   140010126:	or     al,BYTE PTR [rax]
   140010128:	or     eax,0x88000000
   14001012d:	add    al,0x0
   14001012f:	or     BYTE PTR [rsi],0x0
   140010132:	add    BYTE PTR [rax],al
   140010134:	movabs al,ds:0xb80000000f800004
   14001013d:	add    al,0x0
   14001013f:	adc    BYTE PTR [rax],0x0
   140010142:	add    BYTE PTR [rax],al
   140010144:	rol    BYTE PTR [rax+rax*1],1
   140010147:	adc    BYTE PTR [rcx],0x0
   14001014a:	add    BYTE PTR [rax],al
   14001014c:	call   0x152810155
   140010151:	add    BYTE PTR [rax],al
   140010153:	add    BYTE PTR [rax],al
   140010155:	add    eax,0x138000
   14001015a:	add    BYTE PTR [rax],al
   14001015c:	sbb    BYTE PTR [rip+0x148000],al        # 0x140158162
   140010162:	add    BYTE PTR [rax],al
   140010164:	xor    BYTE PTR [rip+0x158000],al        # 0x14016816a
   14001016a:	add    BYTE PTR [rax],al
   14001016c:	add    rax,0x168000
   140010172:	add    BYTE PTR [rax],al
   140010174:	(bad)  
   140010175:	add    eax,0x8000
   14001017a:	add    BYTE PTR [rax],al
   14001017c:	add    BYTE PTR [rax],al
   14001017e:	add    BYTE PTR [rax],al
   140010180:	add    al,0x0
   140010182:	add    BYTE PTR [rax],al
   140010184:	(bad)  
   140010185:	add    BYTE PTR [rax+rax*1],al
   140010188:	mov    dl,0xc
   14001018a:	add    BYTE PTR [rax-0x7ffffa88],al
   140010190:	(bad)  
   140010191:	or     al,0x0
   140010193:	sbb    BYTE PTR [rax-0x297ffffb],0xc
   14001019a:	add    BYTE PTR [rax-0x7ffffa48],al
   1400101a0:	call   0x1188101b1
   1400101a5:	add    eax,0xcfa8000
   1400101aa:	add    BYTE PTR [rax-0x7ffffa08],al
   1400101b0:	add    cl,BYTE PTR [rip+0x6188000]        # 0x1461981b6
   1400101b6:	add    BYTE PTR [rax+0x191],al
   1400101bc:	cmp    BYTE PTR [rsi],al
   1400101be:	add    BYTE PTR [rax+0x192],al
   1400101c4:	pop    rax
   1400101c5:	(bad)  
   1400101c6:	add    BYTE PTR [rax+0x194],al
   1400101cc:	js     0x1400101d4
   1400101ce:	add    BYTE PTR [rax+0x3f9],al
   1400101d4:	cwde   
   1400101d5:	(bad)  
   1400101d6:	add    BYTE PTR [rax+0x0],al
   1400101dc:	add    BYTE PTR [rax],al
   1400101de:	add    BYTE PTR [rax],al
   1400101e0:	add    al,0x0
   1400101e2:	add    BYTE PTR [rax],al
   1400101e4:	add    BYTE PTR [rax],al
   1400101e6:	add    eax,DWORD PTR [rax]
   1400101e8:	add    al,0x0
   1400101ea:	add    BYTE PTR [rax],al
   1400101ec:	mov    eax,0x5800006
   1400101f1:	add    BYTE PTR [rax],al
   1400101f3:	add    al,dl
   1400101f5:	(bad)  
   1400101f6:	add    BYTE PTR [rax+0x6],al
   1400101fc:	call   0x140810207
   140010201:	add    BYTE PTR [rax],al
   140010203:	add    BYTE PTR [rax],al
   140010205:	add    BYTE PTR [rax],al
   140010207:	add    BYTE PTR [rax+rax*1],al
   14001020a:	add    BYTE PTR [rax],al
   14001020c:	add    DWORD PTR [rax],eax
   14001020e:	add    BYTE PTR [rax],al
   140010210:	adc    al,0xd
   140010212:	add    BYTE PTR [rax-0x7ffff900],al
	...
   140010220:	add    al,0x0
   140010222:	add    BYTE PTR [rax],al
   140010224:	or     BYTE PTR [rax],al
   140010226:	add    BYTE PTR [rax],al
   140010228:	sub    al,0xd
   14001022a:	add    BYTE PTR [rax-0x7ffff8e8],al
   140010230:	ds or  eax,0x7308000
   140010236:	add    BYTE PTR [rax-0x7ffff2b6],al
   14001023c:	rex.W (bad) 
   14001023e:	add    BYTE PTR [rax-0x7ffff2a8],al
   140010244:	(bad)  
   140010245:	(bad)  
   140010246:	add    BYTE PTR [rax-0x7ffff296],al
   14001024c:	js     0x140010255
   14001024e:	add    BYTE PTR [rax-0x7ffff284],al
   140010254:	nop
   140010255:	(bad)  
   140010256:	add    BYTE PTR [rax-0x7ffff274],al
   14001025c:	test   al,0x7
   14001025e:	add    BYTE PTR [rax-0x7ffff266],al
   140010264:	rol    BYTE PTR [rdi],0x0
   140010267:	add    BYTE PTR [rax],0x0
   14001026a:	add    BYTE PTR [rax],al
   14001026c:	add    BYTE PTR [rax],al
   14001026e:	add    BYTE PTR [rax],al
   140010270:	add    al,0x0
   140010272:	add    BYTE PTR [rax],al
   140010274:	add    DWORD PTR [rax],eax
   140010276:	add    BYTE PTR [rax],al
   140010278:	stos   BYTE PTR es:[rdi],al
   140010279:	or     eax,0x7d88000
   14001027e:	add    BYTE PTR [rax+0x0],al
   140010284:	add    BYTE PTR [rax],al
   140010286:	add    BYTE PTR [rax],al
   140010288:	add    al,0x0
   14001028a:	add    BYTE PTR [rax],al
   14001028c:	add    BYTE PTR [rax],al
   14001028e:	add    DWORD PTR [rax],eax
   140010290:	add    DWORD PTR [rax],eax
   140010292:	add    BYTE PTR [rax],al
   140010294:	lock (bad) 
   140010296:	add    BYTE PTR [rax+0x0],al
   14001029c:	add    BYTE PTR [rax],al
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	add    al,0x0
   1400102a2:	add    BYTE PTR [rax],al
   1400102a4:	add    BYTE PTR [rax],al
   1400102a6:	add    DWORD PTR [rax],eax
   1400102a8:	add    DWORD PTR [rax],eax
   1400102aa:	add    BYTE PTR [rax],al
   1400102ac:	or     BYTE PTR [rax],cl
   1400102ae:	add    BYTE PTR [rax+0x0],al
   1400102b4:	add    BYTE PTR [rax],al
   1400102b6:	add    BYTE PTR [rax],al
   1400102b8:	add    al,0x0
   1400102ba:	add    BYTE PTR [rax],al
   1400102bc:	add    BYTE PTR [rax],al
   1400102be:	add    DWORD PTR [rax],eax
   1400102c0:	or     DWORD PTR [rax+rax*1],eax
   1400102c3:	add    BYTE PTR [rax],ah
   1400102c5:	or     BYTE PTR [rax],al
	...
   1400102cf:	add    BYTE PTR [rax+rax*1],al
   1400102d2:	add    BYTE PTR [rax],al
   1400102d4:	add    BYTE PTR [rax],al
   1400102d6:	add    DWORD PTR [rax],eax
   1400102d8:	or     DWORD PTR [rax+rax*1],eax
   1400102db:	add    BYTE PTR [rax],dh
   1400102dd:	or     BYTE PTR [rax],al
	...
   1400102e7:	add    BYTE PTR [rax+rax*1],al
   1400102ea:	add    BYTE PTR [rax],al
   1400102ec:	add    BYTE PTR [rax],al
   1400102ee:	add    DWORD PTR [rax],eax
   1400102f0:	or     DWORD PTR [rax+rax*1],eax
   1400102f3:	add    BYTE PTR [rax+0x8],al
	...
   1400102fe:	add    BYTE PTR [rax],al
   140010300:	add    al,0x0
   140010302:	add    BYTE PTR [rax],al
   140010304:	add    BYTE PTR [rax],al
   140010306:	add    DWORD PTR [rax],eax
   140010308:	or     DWORD PTR [rax+rax*1],eax
   14001030b:	add    BYTE PTR [rax+0x8],dl
	...
   140010316:	add    BYTE PTR [rax],al
   140010318:	add    al,0x0
   14001031a:	add    BYTE PTR [rax],al
   14001031c:	add    BYTE PTR [rax],al
   14001031e:	add    DWORD PTR [rax],eax
   140010320:	or     DWORD PTR [rax+rax*1],eax
   140010323:	add    BYTE PTR [rax+0x8],ah
	...
   14001032e:	add    BYTE PTR [rax],al
   140010330:	add    al,0x0
   140010332:	add    BYTE PTR [rax],al
   140010334:	add    BYTE PTR [rax],al
   140010336:	add    DWORD PTR [rax],eax
   140010338:	or     DWORD PTR [rax+rax*1],eax
   14001033b:	add    BYTE PTR [rax+0x8],dh
	...
   140010346:	add    BYTE PTR [rax],al
   140010348:	add    al,0x0
   14001034a:	add    BYTE PTR [rax],al
   14001034c:	add    BYTE PTR [rax],al
   14001034e:	add    DWORD PTR [rax],eax
   140010350:	or     DWORD PTR [rax+rax*1],eax
   140010353:	add    BYTE PTR [rax+0x8],al
   140010359:	add    BYTE PTR [rax],al
   14001035b:	add    BYTE PTR [rax],al
   14001035d:	add    BYTE PTR [rax],al
   14001035f:	add    BYTE PTR [rax+rax*1],al
   140010362:	add    BYTE PTR [rax],al
   140010364:	add    BYTE PTR [rax],al
   140010366:	add    DWORD PTR [rax],eax
   140010368:	or     DWORD PTR [rax+rax*1],eax
   14001036b:	add    BYTE PTR [rax+0x8],dl
   140010371:	add    BYTE PTR [rax],al
   140010373:	add    BYTE PTR [rax],al
   140010375:	add    BYTE PTR [rax],al
   140010377:	add    BYTE PTR [rax+rax*1],al
   14001037a:	add    BYTE PTR [rax],al
   14001037c:	add    BYTE PTR [rax],al
   14001037e:	add    DWORD PTR [rax],eax
   140010380:	or     DWORD PTR [rax+rax*1],eax
   140010383:	add    BYTE PTR [rax+0x8],ah
   140010389:	add    BYTE PTR [rax],al
   14001038b:	add    BYTE PTR [rax],al
   14001038d:	add    BYTE PTR [rax],al
   14001038f:	add    BYTE PTR [rax+rax*1],al
   140010392:	add    BYTE PTR [rax],al
   140010394:	add    BYTE PTR [rax],al
   140010396:	add    DWORD PTR [rax],eax
   140010398:	or     DWORD PTR [rax+rax*1],eax
   14001039b:	add    BYTE PTR [rax+0x8],dh
   1400103a1:	add    BYTE PTR [rax],al
   1400103a3:	add    BYTE PTR [rax],al
   1400103a5:	add    BYTE PTR [rax],al
   1400103a7:	add    BYTE PTR [rax+rax*1],al
   1400103aa:	add    BYTE PTR [rax],al
   1400103ac:	add    BYTE PTR [rax],al
   1400103ae:	add    DWORD PTR [rax],eax
   1400103b0:	or     DWORD PTR [rax+rax*1],eax
   1400103b3:	add    al,al
   1400103b5:	or     BYTE PTR [rax],al
	...
   1400103bf:	add    BYTE PTR [rax+rax*1],al
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	add    BYTE PTR [rax],al
   1400103c6:	add    DWORD PTR [rax],eax
   1400103c8:	or     DWORD PTR [rax+rax*1],eax
   1400103cb:	add    al,dl
   1400103cd:	or     BYTE PTR [rax],al
	...
   1400103d7:	add    BYTE PTR [rax+rax*1],al
   1400103da:	add    BYTE PTR [rax],al
   1400103dc:	add    BYTE PTR [rax],al
   1400103de:	add    DWORD PTR [rax],eax
   1400103e0:	or     DWORD PTR [rax+rax*1],eax
   1400103e3:	add    al,ah
   1400103e5:	or     BYTE PTR [rax],al
	...
   1400103ef:	add    BYTE PTR [rax+rax*1],al
   1400103f2:	add    BYTE PTR [rax],al
   1400103f4:	add    BYTE PTR [rax],al
   1400103f6:	add    DWORD PTR [rax],eax
   1400103f8:	or     DWORD PTR [rax+rax*1],eax
   1400103fb:	add    al,dh
   1400103fd:	or     BYTE PTR [rax],al
	...
   140010407:	add    BYTE PTR [rax+rax*1],al
   14001040a:	add    BYTE PTR [rax],al
   14001040c:	add    BYTE PTR [rax],al
   14001040e:	add    DWORD PTR [rax],eax
   140010410:	or     DWORD PTR [rax+rax*1],eax
   140010413:	add    BYTE PTR [rax],al
   140010415:	or     DWORD PTR [rax],eax
	...
   14001041f:	add    BYTE PTR [rax+rax*1],al
   140010422:	add    BYTE PTR [rax],al
   140010424:	add    BYTE PTR [rax],al
   140010426:	add    DWORD PTR [rax],eax
   140010428:	or     DWORD PTR [rax+rax*1],eax
   14001042b:	add    BYTE PTR [rax],dl
   14001042d:	or     DWORD PTR [rax],eax
	...
   140010437:	add    BYTE PTR [rax+rax*1],al
   14001043a:	add    BYTE PTR [rax],al
   14001043c:	add    BYTE PTR [rax],al
   14001043e:	add    al,BYTE PTR [rax]
   140010440:	adc    DWORD PTR [rax],eax
   140010442:	add    BYTE PTR [rax],al
   140010444:	and    BYTE PTR [rcx],cl
   140010446:	add    BYTE PTR [rax],al
   140010448:	or     DWORD PTR [rax+rax*1],eax
   14001044b:	add    BYTE PTR [rax],dh
   14001044d:	or     DWORD PTR [rax],eax
	...
   140010457:	add    BYTE PTR [rax+rax*1],al
   14001045a:	add    BYTE PTR [rax],al
   14001045c:	add    BYTE PTR [rax],al
   14001045e:	add    al,BYTE PTR [rax]
   140010460:	adc    DWORD PTR [rax],eax
   140010462:	add    BYTE PTR [rax],al
   140010464:	rex or DWORD PTR [rax],eax
   140010467:	add    BYTE PTR [rcx],cl
   140010469:	add    al,0x0
   14001046b:	add    BYTE PTR [rax+0x9],dl
	...
   140010476:	add    BYTE PTR [rax],al
   140010478:	add    al,0x0
   14001047a:	add    BYTE PTR [rax],al
   14001047c:	add    BYTE PTR [rax],al
   14001047e:	add    DWORD PTR [rax],eax
   140010480:	or     DWORD PTR [rax+rax*1],eax
   140010483:	add    BYTE PTR [rax+0x9],ah
	...
   14001048e:	add    BYTE PTR [rax],al
   140010490:	add    al,0x0
   140010492:	add    BYTE PTR [rax],al
   140010494:	add    BYTE PTR [rax],al
   140010496:	add    DWORD PTR [rax],eax
   140010498:	or     DWORD PTR [rax+rax*1],eax
   14001049b:	add    BYTE PTR [rax+0x9],dh
	...
   1400104a6:	add    BYTE PTR [rax],al
   1400104a8:	add    al,0x0
   1400104aa:	add    BYTE PTR [rax],al
   1400104ac:	add    BYTE PTR [rax],al
   1400104ae:	add    DWORD PTR [rax],eax
   1400104b0:	or     DWORD PTR [rax+rax*1],eax
   1400104b3:	add    BYTE PTR [rax+0x9],al
   1400104b9:	add    BYTE PTR [rax],al
   1400104bb:	add    BYTE PTR [rax],al
   1400104bd:	add    BYTE PTR [rax],al
   1400104bf:	add    BYTE PTR [rax+rax*1],al
   1400104c2:	add    BYTE PTR [rax],al
   1400104c4:	add    BYTE PTR [rax],al
   1400104c6:	add    DWORD PTR [rax],eax
   1400104c8:	or     DWORD PTR [rax+rax*1],eax
   1400104cb:	add    BYTE PTR [rax+0x9],dl
   1400104d1:	add    BYTE PTR [rax],al
   1400104d3:	add    BYTE PTR [rax],al
   1400104d5:	add    BYTE PTR [rax],al
   1400104d7:	add    BYTE PTR [rax+rax*1],al
   1400104da:	add    BYTE PTR [rax],al
   1400104dc:	add    BYTE PTR [rax],al
   1400104de:	add    DWORD PTR [rax],eax
   1400104e0:	or     DWORD PTR [rax+rax*1],eax
   1400104e3:	add    BYTE PTR [rax+0x9],ah
   1400104e9:	add    BYTE PTR [rax],al
   1400104eb:	add    BYTE PTR [rax],al
   1400104ed:	add    BYTE PTR [rax],al
   1400104ef:	add    BYTE PTR [rax+rax*1],al
   1400104f2:	add    BYTE PTR [rax],al
   1400104f4:	add    BYTE PTR [rax],al
   1400104f6:	add    DWORD PTR [rax],eax
   1400104f8:	or     DWORD PTR [rax+rax*1],eax
   1400104fb:	add    BYTE PTR [rax+0x9],dh
   140010501:	add    BYTE PTR [rax],al
   140010503:	add    BYTE PTR [rax],al
   140010505:	add    BYTE PTR [rax],al
   140010507:	add    BYTE PTR [rax+rax*1],al
   14001050a:	add    BYTE PTR [rax],al
   14001050c:	add    BYTE PTR [rax],al
   14001050e:	add    DWORD PTR [rax],eax
   140010510:	or     DWORD PTR [rax+rax*1],eax
   140010513:	add    al,al
   140010515:	or     DWORD PTR [rax],eax
	...
   14001051f:	add    BYTE PTR [rax+rax*1],al
   140010522:	add    BYTE PTR [rax],al
   140010524:	add    BYTE PTR [rax],al
   140010526:	add    DWORD PTR [rax],eax
   140010528:	or     DWORD PTR [rax+rax*1],eax
   14001052b:	add    al,dl
   14001052d:	or     DWORD PTR [rax],eax
	...
   140010537:	add    BYTE PTR [rax+rax*1],al
   14001053a:	add    BYTE PTR [rax],al
   14001053c:	add    BYTE PTR [rax],al
   14001053e:	add    DWORD PTR [rax],eax
   140010540:	or     DWORD PTR [rax+rax*1],eax
   140010543:	add    al,ah
   140010545:	or     DWORD PTR [rax],eax
	...
   14001054f:	add    BYTE PTR [rax+rax*1],al
   140010552:	add    BYTE PTR [rax],al
   140010554:	add    BYTE PTR [rax],al
   140010556:	add    DWORD PTR [rax],eax
   140010558:	or     DWORD PTR [rax+rax*1],eax
   14001055b:	add    al,dh
   14001055d:	or     DWORD PTR [rax],eax
	...
   140010567:	add    BYTE PTR [rax+rax*1],al
   14001056a:	add    BYTE PTR [rax],al
   14001056c:	add    BYTE PTR [rax],al
   14001056e:	add    DWORD PTR [rax],eax
   140010570:	or     DWORD PTR [rax+rax*1],eax
   140010573:	add    BYTE PTR [rax],al
   140010575:	or     al,BYTE PTR [rax]
	...
   14001057f:	add    BYTE PTR [rax+rax*1],al
   140010582:	add    BYTE PTR [rax],al
   140010584:	add    BYTE PTR [rax],al
   140010586:	add    al,BYTE PTR [rax]
   140010588:	adc    DWORD PTR [rax],eax
   14001058a:	add    BYTE PTR [rax],al
   14001058c:	adc    BYTE PTR [rdx],cl
   14001058e:	add    BYTE PTR [rax],al
   140010590:	or     DWORD PTR [rax+rax*1],eax
   140010593:	add    BYTE PTR [rax],ah
   140010595:	or     al,BYTE PTR [rax]
	...
   14001059f:	add    BYTE PTR [rax+rax*1],al
   1400105a2:	add    BYTE PTR [rax],al
   1400105a4:	add    BYTE PTR [rax],al
   1400105a6:	add    al,BYTE PTR [rax]
   1400105a8:	adc    DWORD PTR [rax],eax
   1400105aa:	add    BYTE PTR [rax],al
   1400105ac:	xor    BYTE PTR [rdx],cl
   1400105ae:	add    BYTE PTR [rax],al
   1400105b0:	or     DWORD PTR [rax+rax*1],eax
   1400105b3:	add    BYTE PTR [rax+0xa],al
	...
   1400105be:	add    BYTE PTR [rax],al
   1400105c0:	add    al,0x0
   1400105c2:	add    BYTE PTR [rax],al
   1400105c4:	add    BYTE PTR [rax],al
   1400105c6:	add    al,BYTE PTR [rax]
   1400105c8:	adc    DWORD PTR [rax],eax
   1400105ca:	add    BYTE PTR [rax],al
   1400105cc:	push   rax
   1400105cd:	or     al,BYTE PTR [rax]
   1400105cf:	add    BYTE PTR [rcx],cl
   1400105d1:	add    al,0x0
   1400105d3:	add    BYTE PTR [rax+0xa],ah
	...
   1400105de:	add    BYTE PTR [rax],al
   1400105e0:	add    al,0x0
   1400105e2:	add    BYTE PTR [rax],al
   1400105e4:	add    BYTE PTR [rax],al
   1400105e6:	add    al,BYTE PTR [rax]
   1400105e8:	adc    DWORD PTR [rax],eax
   1400105ea:	add    BYTE PTR [rax],al
   1400105ec:	jo     0x1400105f8
   1400105ee:	add    BYTE PTR [rax],al
   1400105f0:	or     DWORD PTR [rax+rax*1],eax
   1400105f3:	add    BYTE PTR [rax+0xa],al
   1400105f9:	add    BYTE PTR [rax],al
   1400105fb:	add    BYTE PTR [rax],al
   1400105fd:	add    BYTE PTR [rax],al
   1400105ff:	add    BYTE PTR [rax+rax*1],al
   140010602:	add    BYTE PTR [rax],al
   140010604:	add    BYTE PTR [rax],al
   140010606:	add    al,BYTE PTR [rax]
   140010608:	adc    DWORD PTR [rax],eax
   14001060a:	add    BYTE PTR [rax],al
   14001060c:	nop
   14001060d:	or     al,BYTE PTR [rax]
   14001060f:	add    BYTE PTR [rcx],cl
   140010611:	add    al,0x0
   140010613:	add    BYTE PTR [rax+0xa],ah
   140010619:	add    BYTE PTR [rax],al
   14001061b:	add    BYTE PTR [rax],al
   14001061d:	add    BYTE PTR [rax],al
   14001061f:	add    BYTE PTR [rax+rax*1],al
   140010622:	add    BYTE PTR [rax],al
   140010624:	add    BYTE PTR [rax],al
   140010626:	add    al,BYTE PTR [rax]
   140010628:	adc    DWORD PTR [rax],eax
   14001062a:	add    BYTE PTR [rax],al
   14001062c:	mov    al,0xa
   14001062e:	add    BYTE PTR [rax],al
   140010630:	or     DWORD PTR [rax+rax*1],eax
   140010633:	add    al,al
   140010635:	or     al,BYTE PTR [rax]
	...
   14001063f:	add    BYTE PTR [rax+rax*1],al
   140010642:	add    BYTE PTR [rax],al
   140010644:	add    BYTE PTR [rax],al
   140010646:	add    al,BYTE PTR [rax]
   140010648:	adc    DWORD PTR [rax],eax
   14001064a:	add    BYTE PTR [rax],al
   14001064c:	ror    BYTE PTR [rdx],1
   14001064e:	add    BYTE PTR [rax],al
   140010650:	or     DWORD PTR [rax+rax*1],eax
   140010653:	add    al,ah
   140010655:	or     al,BYTE PTR [rax]
	...
   14001065f:	add    BYTE PTR [rax+rax*1],al
   140010662:	add    BYTE PTR [rax],al
   140010664:	add    BYTE PTR [rax],al
   140010666:	add    al,BYTE PTR [rax]
   140010668:	adc    DWORD PTR [rax],eax
   14001066a:	add    BYTE PTR [rax],al
   14001066c:	lock or al,BYTE PTR [rax]
   14001066f:	add    BYTE PTR [rcx],cl
   140010671:	add    al,0x0
   140010673:	add    BYTE PTR [rax],al
   140010675:	or     eax,DWORD PTR [rax]
	...
   14001067f:	add    BYTE PTR [rax+rax*1],al
   140010682:	add    BYTE PTR [rax],al
   140010684:	add    BYTE PTR [rax],al
   140010686:	add    al,BYTE PTR [rax]
   140010688:	adc    DWORD PTR [rax],eax
   14001068a:	add    BYTE PTR [rax],al
   14001068c:	adc    BYTE PTR [rbx],cl
   14001068e:	add    BYTE PTR [rax],al
   140010690:	or     DWORD PTR [rax+rax*1],eax
   140010693:	add    BYTE PTR [rax],ah
   140010695:	or     eax,DWORD PTR [rax]
	...
   14001069f:	add    BYTE PTR [rax+rax*1],al
   1400106a2:	add    BYTE PTR [rax],al
   1400106a4:	add    BYTE PTR [rax],al
   1400106a6:	add    al,BYTE PTR [rax]
   1400106a8:	adc    DWORD PTR [rax],eax
   1400106aa:	add    BYTE PTR [rax],al
   1400106ac:	xor    BYTE PTR [rbx],cl
   1400106ae:	add    BYTE PTR [rax],al
   1400106b0:	or     DWORD PTR [rax+rax*1],eax
   1400106b3:	add    BYTE PTR [rax+0xb],al
	...
   1400106be:	add    BYTE PTR [rax],al
   1400106c0:	add    al,0x0
   1400106c2:	add    BYTE PTR [rax],al
   1400106c4:	add    BYTE PTR [rax],al
   1400106c6:	add    DWORD PTR [rax],eax
   1400106c8:	or     DWORD PTR [rax+rax*1],eax
   1400106cb:	add    BYTE PTR [rax+0xb],dl
	...
   1400106d6:	add    BYTE PTR [rax],al
   1400106d8:	add    al,0x0
   1400106da:	add    BYTE PTR [rax],al
   1400106dc:	add    BYTE PTR [rax],al
   1400106de:	add    DWORD PTR [rax],eax
   1400106e0:	or     DWORD PTR [rax+rax*1],eax
   1400106e3:	add    BYTE PTR [rax+0xb],ah
	...
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	add    al,0x0
   1400106f2:	add    BYTE PTR [rax],al
   1400106f4:	add    BYTE PTR [rax],al
   1400106f6:	add    DWORD PTR [rax],eax
   1400106f8:	or     DWORD PTR [rax+rax*1],eax
   1400106fb:	add    BYTE PTR [rax+0xb],dh
	...
   140010706:	add    BYTE PTR [rax],al
   140010708:	add    al,0x0
   14001070a:	add    BYTE PTR [rax],al
   14001070c:	add    BYTE PTR [rax],al
   14001070e:	add    DWORD PTR [rax],eax
   140010710:	or     DWORD PTR [rax+rax*1],eax
   140010713:	add    BYTE PTR [rax+0xb],al
   140010719:	add    BYTE PTR [rax],al
   14001071b:	add    BYTE PTR [rax],al
   14001071d:	add    BYTE PTR [rax],al
   14001071f:	add    BYTE PTR [rax+rax*1],al
   140010722:	add    BYTE PTR [rax],al
   140010724:	add    BYTE PTR [rax],al
   140010726:	add    DWORD PTR [rax],eax
   140010728:	or     DWORD PTR [rax+rax*1],eax
   14001072b:	add    BYTE PTR [rax+0xb],dl
   140010731:	add    BYTE PTR [rax],al
   140010733:	add    BYTE PTR [rax],al
   140010735:	add    BYTE PTR [rax],al
   140010737:	add    BYTE PTR [rax+rax*1],al
   14001073a:	add    BYTE PTR [rax],al
   14001073c:	add    BYTE PTR [rax],al
   14001073e:	add    DWORD PTR [rax],eax
   140010740:	or     DWORD PTR [rax+rax*1],eax
   140010743:	add    BYTE PTR [rax+0xb],ah
   140010749:	add    BYTE PTR [rax],al
   14001074b:	add    BYTE PTR [rax],al
   14001074d:	add    BYTE PTR [rax],al
   14001074f:	add    BYTE PTR [rax+rax*1],al
   140010752:	add    BYTE PTR [rax],al
   140010754:	add    BYTE PTR [rax],al
   140010756:	add    DWORD PTR [rax],eax
   140010758:	or     DWORD PTR [rax+rax*1],eax
   14001075b:	add    BYTE PTR [rax+0xb],dh
   140010761:	add    BYTE PTR [rax],al
   140010763:	add    BYTE PTR [rax],al
   140010765:	add    BYTE PTR [rax],al
   140010767:	add    BYTE PTR [rax+rax*1],al
   14001076a:	add    BYTE PTR [rax],al
   14001076c:	add    BYTE PTR [rax],al
   14001076e:	add    DWORD PTR [rax],eax
   140010770:	or     DWORD PTR [rax+rax*1],eax
   140010773:	add    al,al
   140010775:	or     eax,DWORD PTR [rax]
	...
   14001077f:	add    BYTE PTR [rax+rax*1],al
   140010782:	add    BYTE PTR [rax],al
   140010784:	add    BYTE PTR [rax],al
   140010786:	add    DWORD PTR [rax],eax
   140010788:	or     DWORD PTR [rax+rax*1],eax
   14001078b:	add    al,dl
   14001078d:	or     eax,DWORD PTR [rax]
	...
   140010797:	add    BYTE PTR [rax+rax*1],al
   14001079a:	add    BYTE PTR [rax],al
   14001079c:	add    BYTE PTR [rax],al
   14001079e:	add    DWORD PTR [rax],eax
   1400107a0:	or     DWORD PTR [rax+rax*1],eax
   1400107a3:	add    al,ah
   1400107a5:	or     eax,DWORD PTR [rax]
	...
   1400107af:	add    BYTE PTR [rax+rax*1],al
   1400107b2:	add    BYTE PTR [rax],al
   1400107b4:	add    BYTE PTR [rax],al
   1400107b6:	add    DWORD PTR [rax],eax
   1400107b8:	or     DWORD PTR [rax+rax*1],eax
   1400107bb:	add    al,dh
   1400107bd:	or     eax,DWORD PTR [rax]
	...
   1400107c7:	add    BYTE PTR [rax+rax*1],al
   1400107ca:	add    BYTE PTR [rax],al
   1400107cc:	add    BYTE PTR [rax],al
   1400107ce:	add    DWORD PTR [rax],eax
   1400107d0:	or     DWORD PTR [rax+rax*1],eax
   1400107d3:	add    BYTE PTR [rax],al
   1400107d5:	or     al,0x0
	...
   1400107df:	add    BYTE PTR [rax+rax*1],al
   1400107e2:	add    BYTE PTR [rax],al
   1400107e4:	add    BYTE PTR [rax],al
   1400107e6:	add    DWORD PTR [rax],eax
   1400107e8:	or     DWORD PTR [rax+rax*1],eax
   1400107eb:	add    BYTE PTR [rax],dl
   1400107ed:	or     al,0x0
	...
   1400107f7:	add    BYTE PTR [rax+rax*1],al
   1400107fa:	add    BYTE PTR [rax],al
   1400107fc:	add    BYTE PTR [rax],al
   1400107fe:	add    DWORD PTR [rax],eax
   140010800:	or     DWORD PTR [rax+rax*1],eax
   140010803:	add    BYTE PTR [rax],ah
   140010805:	or     al,0x0
	...
   14001080f:	add    BYTE PTR [rax+rax*1],al
   140010812:	add    BYTE PTR [rax],al
   140010814:	add    BYTE PTR [rax],al
   140010816:	add    DWORD PTR [rax],eax
   140010818:	or     DWORD PTR [rax+rax*1],eax
   14001081b:	add    BYTE PTR [rax],dh
   14001081d:	or     al,0x0
   14001081f:	add    BYTE PTR [rbp+rcx*1+0x1340001],bh
   140010826:	add    BYTE PTR [rax],al
   140010828:	in     al,0x4
   14001082a:	add    BYTE PTR [rax],al
   14001082c:	add    BYTE PTR [rax],al
   14001082e:	add    BYTE PTR [rax],al
   140010830:	lock (bad) 
   140010832:	add    DWORD PTR [rax],eax
   140010834:	xor    al,0x1
   140010836:	add    BYTE PTR [rax],al
   140010838:	in     al,0x4
   14001083a:	add    BYTE PTR [rax],al
   14001083c:	add    BYTE PTR [rax],al
   14001083e:	add    BYTE PTR [rax],al
   140010840:	and    al,0x10
   140010842:	add    DWORD PTR [rax],eax
   140010844:	xor    al,0x1
   140010846:	add    BYTE PTR [rax],al
   140010848:	in     al,0x4
   14001084a:	add    BYTE PTR [rax],al
   14001084c:	add    BYTE PTR [rax],al
   14001084e:	add    BYTE PTR [rax],al
   140010850:	pop    rax
   140010851:	adc    DWORD PTR [rcx],eax
   140010853:	add    BYTE PTR [rcx+rax*1],dh
   140010856:	add    BYTE PTR [rax],al
   140010858:	in     al,0x4
   14001085a:	add    BYTE PTR [rax],al
   14001085c:	add    BYTE PTR [rax],al
   14001085e:	add    BYTE PTR [rax],al
   140010860:	mov    WORD PTR [rdx],ss
   140010862:	add    DWORD PTR [rax],eax
   140010864:	xor    al,0x1
   140010866:	add    BYTE PTR [rax],al
   140010868:	in     al,0x4
   14001086a:	add    BYTE PTR [rax],al
   14001086c:	add    BYTE PTR [rax],al
   14001086e:	add    BYTE PTR [rax],al
   140010870:	rcl    BYTE PTR [rbx],0x1
   140010873:	add    BYTE PTR [rcx+rax*1],dh
   140010876:	add    BYTE PTR [rax],al
   140010878:	in     al,0x4
   14001087a:	add    BYTE PTR [rax],al
   14001087c:	add    BYTE PTR [rax],al
   14001087e:	add    BYTE PTR [rax],al
   140010880:	hlt    
   140010881:	adc    al,0x1
   140010883:	add    BYTE PTR [rcx+rax*1],dh
   140010886:	add    BYTE PTR [rax],al
   140010888:	in     al,0x4
   14001088a:	add    BYTE PTR [rax],al
   14001088c:	add    BYTE PTR [rax],al
   14001088e:	add    BYTE PTR [rax],al
   140010890:	sub    BYTE PTR [rsi],dl
   140010892:	add    DWORD PTR [rax],eax
   140010894:	in     al,dx
   140010895:	add    al,BYTE PTR [rax]
   140010897:	add    ah,ah
   140010899:	add    al,0x0
   14001089b:	add    BYTE PTR [rax],al
   14001089d:	add    BYTE PTR [rax],al
   14001089f:	add    BYTE PTR [rcx+rbx*1],dl
   1400108a2:	add    DWORD PTR [rax],eax
   1400108a4:	lods   al,BYTE PTR ds:[rsi]
   1400108a5:	or     BYTE PTR [rax],al
   1400108a7:	add    ah,ah
   1400108a9:	add    al,0x0
   1400108ab:	add    BYTE PTR [rax],al
   1400108ad:	add    BYTE PTR [rax],al
   1400108af:	add    al,al
   1400108b1:	and    DWORD PTR [rcx],eax
   1400108b3:	add    BYTE PTR [rcx+rax*1],dh
   1400108b6:	add    BYTE PTR [rax],al
   1400108b8:	in     al,0x4
   1400108ba:	add    BYTE PTR [rax],al
   1400108bc:	add    BYTE PTR [rax],al
   1400108be:	add    BYTE PTR [rax],al
   1400108c0:	hlt    
   1400108c1:	and    al,BYTE PTR [rcx]
   1400108c3:	add    ah,ch
   1400108c5:	add    al,BYTE PTR [rax]
   1400108c7:	add    ah,ah
   1400108c9:	add    al,0x0
   1400108cb:	add    BYTE PTR [rax],al
   1400108cd:	add    BYTE PTR [rax],al
   1400108cf:	add    al,ah
   1400108d1:	and    eax,0x8ac0001
   1400108d6:	add    BYTE PTR [rax],al
   1400108d8:	in     al,0x4
   1400108da:	add    BYTE PTR [rax],al
   1400108dc:	add    BYTE PTR [rax],al
   1400108de:	add    BYTE PTR [rax],al
   1400108e0:	mov    WORD PTR [rsi],gs
   1400108e2:	add    DWORD PTR [rax],eax
   1400108e4:	test   BYTE PTR [rax],al
   1400108e6:	add    BYTE PTR [rax],al
   1400108e8:	in     al,0x4
   1400108ea:	add    BYTE PTR [rax],al
   1400108ec:	add    BYTE PTR [rax],al
   1400108ee:	add    BYTE PTR [rax],al
   1400108f0:	adc    BYTE PTR [rdi],ch
   1400108f2:	add    DWORD PTR [rax],eax
   1400108f4:	sub    BYTE PTR [rax+rax*1],dl
   1400108f7:	add    ah,ah
   1400108f9:	add    al,0x0
   1400108fb:	add    BYTE PTR [rax],al
   1400108fd:	add    BYTE PTR [rax],al
   1400108ff:	add    BYTE PTR [rax],bh
   140010901:	rex.XB add DWORD PTR [r8],eax
   140010904:	test   BYTE PTR [rax],al
   140010906:	add    BYTE PTR [rax],al
   140010908:	in     al,0x4
   14001090a:	add    BYTE PTR [rax],al
   14001090c:	add    BYTE PTR [rax],al
   14001090e:	add    BYTE PTR [rax],al
   140010910:	mov    esp,0x90000143
   140010915:	add    eax,DWORD PTR [rax]
   140010917:	add    ah,ah
   140010919:	add    al,0x0
   14001091b:	add    BYTE PTR [rax],al
   14001091d:	add    BYTE PTR [rax],al
   14001091f:	add    BYTE PTR [rdi+rax*2+0x1],cl
   140010923:	add    al,bh
   140010925:	add    BYTE PTR [rax],al
   140010927:	add    ah,ah
   140010929:	add    al,0x0
   14001092b:	add    BYTE PTR [rax],al
   14001092d:	add    BYTE PTR [rax],al
   14001092f:	add    BYTE PTR [rax+rcx*2+0x1],al
   140010933:	add    al,bh
   140010935:	add    BYTE PTR [rax],al
   140010937:	add    ah,ah
   140010939:	add    al,0x0
   14001093b:	add    BYTE PTR [rax],al
   14001093d:	add    BYTE PTR [rax],al
   14001093f:	add    BYTE PTR [rcx+rcx*2],bh
   140010942:	add    DWORD PTR [rax],eax
   140010944:	clc    
   140010945:	add    BYTE PTR [rax],al
   140010947:	add    ah,ah
   140010949:	add    al,0x0
   14001094b:	add    BYTE PTR [rax],al
   14001094d:	add    BYTE PTR [rax],al
   14001094f:	add    BYTE PTR [rdx+rcx*2],dh
   140010952:	add    DWORD PTR [rax],eax
   140010954:	clc    
   140010955:	add    BYTE PTR [rax],al
   140010957:	add    ah,ah
   140010959:	add    al,0x0
   14001095b:	add    BYTE PTR [rax],al
   14001095d:	add    BYTE PTR [rax],al
   14001095f:	add    BYTE PTR [rbx+rcx*2],ch
   140010962:	add    DWORD PTR [rax],eax
   140010964:	test   BYTE PTR [rax],al
   140010966:	add    BYTE PTR [rax],al
   140010968:	in     al,0x4
   14001096a:	add    BYTE PTR [rax],al
   14001096c:	add    BYTE PTR [rax],al
   14001096e:	add    BYTE PTR [rax],al
   140010970:	mov    al,0x4b
   140010972:	add    DWORD PTR [rax],eax
   140010974:	push   0xffffffffe4000006
   140010979:	add    al,0x0
   14001097b:	add    BYTE PTR [rax],al
   14001097d:	add    BYTE PTR [rax],al
   14001097f:	add    BYTE PTR [rax],bl
   140010981:	push   rdx
   140010982:	add    DWORD PTR [rax],eax
   140010984:	call   0x12401098b
   140010989:	add    al,0x0
   14001098b:	add    BYTE PTR [rax],al
   14001098d:	add    BYTE PTR [rax],al
   14001098f:	add    BYTE PTR [rax],al
   140010991:	push   rbp
   140010992:	add    DWORD PTR [rax],eax
   140010994:	sub    BYTE PTR [rcx],al
   140010996:	add    BYTE PTR [rax],al
   140010998:	in     al,0x4
   14001099a:	add    BYTE PTR [rax],al
   14001099c:	add    BYTE PTR [rax],al
   14001099e:	add    BYTE PTR [rax],al
   1400109a0:	sub    BYTE PTR [rsi+0x1],dl
   1400109a3:	add    BYTE PTR [rax-0x1bfffff2],ch
   1400109a9:	add    al,0x0
   1400109ab:	add    BYTE PTR [rax],al
   1400109ad:	add    BYTE PTR [rax],al
   1400109af:	add    al,dl
   1400109b1:	add    DWORD PTR fs:[rax],eax
   1400109b4:	test   al,0x8
   1400109b6:	add    BYTE PTR [rax],al
   1400109b8:	in     al,0x4
   1400109ba:	add    BYTE PTR [rax],al
   1400109bc:	add    BYTE PTR [rax],al
   1400109be:	add    BYTE PTR [rax],al
   1400109c0:	js     0x140010a2f
   1400109c2:	add    DWORD PTR [rax],eax
   1400109c4:	push   0xffffffffe4000005
   1400109c9:	add    al,0x0
   1400109cb:	add    BYTE PTR [rax],al
   1400109cd:	add    BYTE PTR [rax],al
   1400109cf:	add    al,ah
   1400109d1:	jb     0x1400109d4
   1400109d3:	add    ah,cl
   1400109d5:	test   al,0x0
   1400109d7:	add    ah,ah
   1400109d9:	add    al,0x0
   1400109db:	add    BYTE PTR [rax],al
   1400109dd:	add    BYTE PTR [rax],al
   1400109df:	add    BYTE PTR [rbx+rbx*1+0x25a80002],ch
   1400109e6:	add    BYTE PTR [rax],al
   1400109e8:	in     al,0x4
   1400109ea:	add    BYTE PTR [rax],al
   1400109ec:	add    BYTE PTR [rax],al
   1400109ee:	add    BYTE PTR [rax],al
   1400109f0:	push   rsp
   1400109f1:	add    al,BYTE PTR [r8]
   1400109f4:	test   al,0x10
   1400109f6:	add    BYTE PTR [rax],al
   1400109f8:	in     al,0x4
   1400109fa:	add    BYTE PTR [rax],al
   1400109fc:	add    BYTE PTR [rax],al
   1400109fe:	add    BYTE PTR [rax],al
   140010a00:	cld    
   140010a01:	push   rcx
   140010a02:	add    al,BYTE PTR [rax]
   140010a04:	push   0xffffffffe4000004
   140010a09:	add    al,0x0
   140010a0b:	add    BYTE PTR [rax],al
   140010a0d:	add    BYTE PTR [rax],al
   140010a0f:	add    BYTE PTR [rsi+rdx*2+0x2],ah
   140010a13:	add    al,al
   140010a15:	add    BYTE PTR [rax],al
   140010a17:	add    ah,ah
   140010a19:	add    al,0x0
   140010a1b:	add    BYTE PTR [rax],al
   140010a1d:	add    BYTE PTR [rax],al
   140010a1f:	add    BYTE PTR [rdi+rdx*2],ah
   140010a22:	add    al,BYTE PTR [rax]
   140010a24:	fadd   DWORD PTR [rax]
   140010a26:	add    BYTE PTR [rax],al
   140010a28:	in     al,0x4
   140010a2a:	add    BYTE PTR [rax],al
   140010a2c:	add    BYTE PTR [rax],al
   140010a2e:	add    BYTE PTR [rax],al
   140010a30:	cld    
   140010a31:	push   rdi
   140010a32:	add    al,BYTE PTR [rax]
   140010a34:	pop    rdx
   140010a35:	add    BYTE PTR [rax],al
   140010a37:	add    ah,ah
   140010a39:	add    al,0x0
   140010a3b:	add    BYTE PTR [rax],al
   140010a3d:	add    BYTE PTR [rax],al
   140010a3f:	add    BYTE PTR [rax+0x58],bl
   140010a42:	add    al,BYTE PTR [rax]
   140010a44:	push   0x0
   140010a46:	add    BYTE PTR [rax],al
   140010a48:	in     al,0x4
   140010a4a:	add    BYTE PTR [rax],al
   140010a4c:	add    BYTE PTR [rax],al
   140010a4e:	add    BYTE PTR [rax],al
   140010a50:	(bad)  
   140010a51:	pop    rax
   140010a52:	add    al,BYTE PTR [rax]
   140010a54:	fadd   QWORD PTR [rax]
   140010a56:	add    BYTE PTR [rax],al
   140010a58:	in     al,0x4
   140010a5a:	add    BYTE PTR [rax],al
   140010a5c:	add    BYTE PTR [rax],al
   140010a5e:	add    BYTE PTR [rax],al
   140010a60:	movabs al,ds:0xe4000000e0000259
   140010a69:	add    al,0x0
   140010a6b:	add    BYTE PTR [rax],al
   140010a6d:	add    BYTE PTR [rax],al
   140010a6f:	add    BYTE PTR [rax-0x77fffda6],al
   140010a75:	add    BYTE PTR [rax],al
   140010a77:	add    ah,ah
   140010a79:	add    al,0x0
   140010a7b:	add    BYTE PTR [rax],al
   140010a7d:	add    BYTE PTR [rax],al
   140010a7f:	add    BYTE PTR [rax],cl
   140010a81:	pop    rbx
   140010a82:	add    al,BYTE PTR [rax]
   140010a84:	xchg   esi,eax
   140010a85:	add    BYTE PTR [rax],al
   140010a87:	add    ah,ah
   140010a89:	add    al,0x0
   140010a8b:	add    BYTE PTR [rax],al
   140010a8d:	add    BYTE PTR [rax],al
   140010a8f:	add    BYTE PTR [rax-0x17fffda5],ah
   140010a95:	add    BYTE PTR [rax],al
   140010a97:	add    ah,ah
   140010a99:	add    al,0x0
   140010a9b:	add    BYTE PTR [rax],al
   140010a9d:	add    BYTE PTR [rax],al
   140010a9f:	add    BYTE PTR [rax-0xbfffda4],cl
   140010aa5:	add    BYTE PTR [rax],al
   140010aa7:	add    ah,ah
   140010aa9:	add    al,0x0
   140010aab:	add    BYTE PTR [rax],al
   140010aad:	add    BYTE PTR [rax],al
   140010aaf:	add    BYTE PTR [rbp+rbx*2+0x2],bh
   140010ab3:	add    BYTE PTR [rcx+rax*1+0x0],bl
   140010ab7:	add    ah,ah
   140010ab9:	add    al,0x0
   140010abb:	add    BYTE PTR [rax],al
   140010abd:	add    BYTE PTR [rax],al
   140010abf:	add    al,bl
   140010ac1:	pop    rsi
   140010ac2:	add    al,BYTE PTR [rax]
   140010ac4:	jle    0x140010ac7
   140010ac6:	add    BYTE PTR [rax],al
   140010ac8:	in     al,0x4
   140010aca:	add    BYTE PTR [rax],al
   140010acc:	add    BYTE PTR [rax],al
   140010ace:	add    BYTE PTR [rax],al
   140010ad0:	pop    rax
   140010ad1:	(bad)  
   140010ad2:	add    al,BYTE PTR [rax]
   140010ad4:	sbb    BYTE PTR [rdx],al
   140010ad6:	add    BYTE PTR [rax],al
   140010ad8:	in     al,0x4
   140010ada:	add    BYTE PTR [rax],al
   140010adc:	add    BYTE PTR [rax],al
   140010ade:	add    BYTE PTR [rax],al
   140010ae0:	jo     0x140010b44
   140010ae2:	add    al,BYTE PTR [rax]
   140010ae4:	rex.X add al,BYTE PTR [rax]
   140010ae7:	add    ah,ah
   140010ae9:	add    al,0x0
   140010aeb:	add    BYTE PTR [rax],al
   140010aed:	add    BYTE PTR [rax],al
   140010aef:	add    BYTE PTR [rsp+riz*2+0x3ee0002],dh
   140010af6:	add    BYTE PTR [rax],al
   140010af8:	in     al,0x4
   140010afa:	add    BYTE PTR [rax],al
   140010afc:	add    BYTE PTR [rax],al
   140010afe:	add    BYTE PTR [rax],al
   140010b00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010b01:	push   0x6180002
   140010b06:	add    BYTE PTR [rax],al
   140010b08:	in     al,0x4
   140010b0a:	add    BYTE PTR [rax],al
   140010b0c:	add    BYTE PTR [rax],al
   140010b0e:	add    BYTE PTR [rax],al
   140010b10:	mov    esp,0x7600026e
   140010b15:	add    al,BYTE PTR [rax]
   140010b17:	add    ah,ah
   140010b19:	add    al,0x0
   140010b1b:	add    BYTE PTR [rax],al
   140010b1d:	add    BYTE PTR [rax],al
   140010b1f:	add    BYTE PTR [rcx+rsi*2],dh
   140010b22:	add    al,BYTE PTR [rax]
   140010b24:	mov    al,BYTE PTR [rbx]
   140010b26:	add    BYTE PTR [rax],al
   140010b28:	in     al,0x4
   140010b2a:	add    BYTE PTR [rax],al
   140010b2c:	add    BYTE PTR [rax],al
   140010b2e:	add    BYTE PTR [rax],al
   140010b30:	shl    BYTE PTR [rdx+rax*1+0x0],0x64
   140010b35:	add    al,BYTE PTR [rax]
   140010b37:	add    ah,ah
   140010b39:	add    al,0x0
   140010b3b:	add    BYTE PTR [rax],al
   140010b3d:	add    BYTE PTR [rax],al
   140010b3f:	add    BYTE PTR [rdi+rsi*2],ah
   140010b42:	add    al,BYTE PTR [rax]
   140010b44:	ins    BYTE PTR es:[rdi],dx
   140010b45:	add    al,BYTE PTR [rax]
   140010b47:	add    ah,ah
   140010b49:	add    al,0x0
   140010b4b:	add    BYTE PTR [rax],al
   140010b4d:	add    BYTE PTR [rax],al
   140010b4f:	add    BYTE PTR [rax-0x4ffffd87],dl
   140010b55:	add    BYTE PTR [rax],al
   140010b57:	add    ah,ah
   140010b59:	add    al,0x0
   140010b5b:	add    BYTE PTR [rax],al
   140010b5d:	add    BYTE PTR [rax],al
   140010b5f:	add    BYTE PTR [rax+0x7a],al
   140010b62:	add    al,BYTE PTR [rax]
   140010b64:	pop    rsp
   140010b65:	add    al,BYTE PTR [rax]
   140010b67:	add    ah,ah
   140010b69:	add    al,0x0
   140010b6b:	add    BYTE PTR [rax],al
   140010b6d:	add    BYTE PTR [rax],al
   140010b6f:	add    BYTE PTR [rsp+rdi*2+0xbc0002],bl
   140010b76:	add    BYTE PTR [rax],al
   140010b78:	in     al,0x4
   140010b7a:	add    BYTE PTR [rax],al
   140010b7c:	add    BYTE PTR [rax],al
   140010b7e:	add    BYTE PTR [rax],al
   140010b80:	pop    rax
   140010b81:	jge    0x140010b85
   140010b83:	add    BYTE PTR [rax],ah
   140010b85:	add    BYTE PTR [rax],al
   140010b87:	add    ah,ah
   140010b89:	add    al,0x0
   140010b8b:	add    BYTE PTR [rax],al
   140010b8d:	add    BYTE PTR [rax],al
   140010b8f:	add    BYTE PTR [rax+0x7d],bh
   140010b92:	add    al,BYTE PTR [rax]
   140010b94:	adc    al,0x0
   140010b96:	add    BYTE PTR [rax],al
   140010b98:	in     al,0x4
   140010b9a:	add    BYTE PTR [rax],al
   140010b9c:	add    BYTE PTR [rax],al
   140010b9e:	add    BYTE PTR [rax],al
   140010ba0:	mov    WORD PTR [rbp+0x2],?
   140010ba3:	add    BYTE PTR [rax+rax*1],dl
   140010ba6:	add    BYTE PTR [rax],al
   140010ba8:	in     al,0x4
   140010baa:	add    BYTE PTR [rax],al
   140010bac:	add    BYTE PTR [rax],al
   140010bae:	add    BYTE PTR [rax],al
   140010bb0:	movabs al,ds:0xe40000001400027d
   140010bb9:	add    al,0x0
   140010bbb:	add    BYTE PTR [rax],al
   140010bbd:	add    BYTE PTR [rax],al
   140010bbf:	add    BYTE PTR [rbp+rdi*2+0x140002],dh
   140010bc6:	add    BYTE PTR [rax],al
   140010bc8:	in     al,0x4
   140010bca:	add    BYTE PTR [rax],al
   140010bcc:	add    BYTE PTR [rax],al
   140010bce:	add    BYTE PTR [rax],al
   140010bd0:	enter  0x27d,0x0
   140010bd4:	adc    al,0x0
   140010bd6:	add    BYTE PTR [rax],al
   140010bd8:	in     al,0x4
   140010bda:	add    BYTE PTR [rax],al
   140010bdc:	add    BYTE PTR [rax],al
   140010bde:	add    BYTE PTR [rax],al
   140010be0:	fdivr  QWORD PTR [rbp+0x2]
   140010be3:	add    BYTE PTR [rax+rax*1],dl
   140010be6:	add    BYTE PTR [rax],al
   140010be8:	in     al,0x4
   140010bea:	add    BYTE PTR [rax],al
   140010bec:	add    BYTE PTR [rax],al
   140010bee:	add    BYTE PTR [rax],al
   140010bf0:	lock jge 0x140010bf5
   140010bf3:	add    BYTE PTR [rax],dh
   140010bf5:	add    BYTE PTR [rax],al
   140010bf7:	add    ah,ah
   140010bf9:	add    al,0x0
   140010bfb:	add    BYTE PTR [rax],al
   140010bfd:	add    BYTE PTR [rax],al
   140010bff:	add    BYTE PTR [rax],ah
   140010c01:	jle    0x140010c05
   140010c03:	add    BYTE PTR [rax],dh
   140010c05:	add    BYTE PTR [rax],al
   140010c07:	add    ah,ah
   140010c09:	add    al,0x0
   140010c0b:	add    BYTE PTR [rax],al
   140010c0d:	add    BYTE PTR [rax],al
   140010c0f:	add    BYTE PTR [rax+0x7e],dl
   140010c12:	add    al,BYTE PTR [rax]
   140010c14:	xchg   edx,eax
   140010c15:	add    BYTE PTR [rax],al
   140010c17:	add    ah,ah
   140010c19:	add    al,0x0
   140010c1b:	add    BYTE PTR [rax],al
   140010c1d:	add    BYTE PTR [rax],al
   140010c1f:	add    ah,ah
   140010c21:	jle    0x140010c25
   140010c23:	add    BYTE PTR [rax-0x1bfffffd],dl
   140010c29:	add    al,0x0
   140010c2b:	add    BYTE PTR [rax],al
   140010c2d:	add    BYTE PTR [rax],al
   140010c2f:	add    BYTE PTR [rdx+rax*4+0x2],dh
   140010c33:	add    BYTE PTR [rdx+0x1],bl
   140010c36:	add    BYTE PTR [rax],al
   140010c38:	in     al,0x4
   140010c3a:	add    BYTE PTR [rax],al
   140010c3c:	add    BYTE PTR [rax],al
   140010c3e:	add    BYTE PTR [rax],al
   140010c40:	(bad)  
   140010c41:	add    BYTE PTR [rax+rax*1+0x4e],al
   140010c45:	add    BYTE PTR [rcx+0x0],al
   140010c48:	push   rdx
   140010c49:	add    BYTE PTR [rdx+0x0],dl
   140010c4c:	rex.WRXB add BYTE PTR [r15+0x0],r10b
   140010c50:	or     eax,DWORD PTR [rax]
   140010c52:	rex.WB add BYTE PTR [r8+rax*1+0x42],al
   140010c57:	add    BYTE PTR [rdi+0x0],bl
   140010c5a:	push   rsp
   140010c5b:	add    BYTE PTR [rdi+0x0],cl
   140010c5e:	rex.WRXB add BYTE PTR [r8+r8*1+0x42],r9b
   140010c63:	add    BYTE PTR [rcx+0x0],al
   140010c66:	push   rdx
   140010c67:	add    BYTE PTR [rdi],al
   140010c69:	add    BYTE PTR [rax+rax*1+0x46],cl
   140010c6d:	add    BYTE PTR [rcx+0x0],al
   140010c70:	push   rdx
   140010c71:	add    BYTE PTR [rdx+0x0],dl
   140010c74:	rex.WRXB add BYTE PTR [r15+0x0],r10b
   140010c78:	(bad)  
   140010c79:	add    BYTE PTR [rdx+0x0],dl
   140010c7c:	push   rsp
   140010c7d:	add    BYTE PTR [rcx+0x0],al
   140010c80:	push   rdx
   140010c81:	add    BYTE PTR [rdx+0x0],dl
   140010c84:	rex.WRXB add BYTE PTR [r15+0x0],r10b
   140010c88:	add    eax,0x54005400
   140010c8d:	add    BYTE PTR [rcx+0x0],cl
   140010c90:	rex.WRB add BYTE PTR [r15+0x0],r8b
   140010c94:	(bad)  
   140010c95:	add    BYTE PTR [rax+rax*1+0x54],dl
   140010c99:	add    BYTE PTR [rbp+0x0],cl
   140010c9c:	add    BYTE PTR [r11+0x0],dl
   140010ca0:	rex.WXB add BYTE PTR [r15],al
   140010ca3:	add    BYTE PTR [rbp+0x0],dl
   140010ca6:	push   rax
   140010ca7:	add    BYTE PTR [rcx+0x0],al
   140010caa:	push   rdx
   140010cab:	add    BYTE PTR [rdx+0x0],dl
   140010cae:	rex.WRXB add BYTE PTR [r15+0x0],r10b
   140010cb2:	or     BYTE PTR [rax],al
   140010cb4:	add    BYTE PTR [r10+0x0],al
   140010cb8:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140010cbc:	push   rsp
   140010cbd:	add    BYTE PTR [rax+rax*1+0x4c],al
   140010cc1:	add    BYTE PTR [rdi+0x0],al
   140010cc4:	or     BYTE PTR [rax],al
   140010cc6:	add    BYTE PTR [r10+0x0],al
   140010cca:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140010cce:	push   rsp
   140010ccf:	add    BYTE PTR [rdx+0x0],al
   140010cd2:	rex.WRXB add BYTE PTR [r8+0x0],r11b
   140010cd6:	or     BYTE PTR [rax],al
   140010cd8:	add    BYTE PTR [r8+rax*1+0x45],cl
   140010cdd:	add    BYTE PTR [rdx+0x0],dl
   140010ce0:	push   rsp
   140010ce1:	add    BYTE PTR [rax+rax*1+0x4c],al
   140010ce5:	add    BYTE PTR [rdi+0x0],al
   140010ce8:	or     BYTE PTR [rax],al
   140010cea:	rex.XB add BYTE PTR [r8+0x0],cl
   140010cee:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   140010cf2:	push   rbx
   140010cf3:	add    BYTE PTR [rdi+0x0],dl
   140010cf6:	rex.WB add BYTE PTR [r14+0x0],cl
   140010cfa:	add    eax,DWORD PTR [rax]
   140010cfc:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140010d00:	push   rdi
   140010d01:	add    BYTE PTR [rax],cl
   140010d03:	add    BYTE PTR [rdx+0x0],dl
   140010d06:	push   rbp
   140010d07:	add    BYTE PTR [rsi+0x0],cl
   140010d0a:	rex.WRB add BYTE PTR [r14+0x0],r8b
   140010d0e:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   140010d13:	add    BYTE PTR [rbx],cl
   140010d15:	add    BYTE PTR [rbp+0x0],cl
   140010d18:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140010d1d:	add    BYTE PTR [rcx+0x0],al
   140010d20:	rex.X add BYTE PTR [rcx+0x0],al
   140010d24:	rex.XB add BYTE PTR [r11+0x0],al
   140010d28:	add    BYTE PTR [r8+rax*1+0x8],r9b
   140010d2d:	add    BYTE PTR [rcx+0x0],al
   140010d30:	push   rdx
   140010d31:	add    BYTE PTR [rdx+0x0],dl
   140010d34:	rex.WRXB add BYTE PTR [r8+0x0],r10b
   140010d38:	rex.WR add BYTE PTR [rbp+0x0],r10b
   140010d3c:	push   rbx
   140010d3d:	add    BYTE PTR [rip+0x52004100],al        # 0x192014e43
   140010d43:	add    BYTE PTR [rdx+0x0],dl
   140010d46:	rex.WRXB add BYTE PTR [r15+0x0],r10b
   140010d4a:	(bad)  
   140010d4b:	add    BYTE PTR [rbx+0x0],al
   140010d4e:	rex.WB add BYTE PTR [r10+0x0],dl
   140010d52:	add    BYTE PTR [r8+r8*1+0x45],cl
   140010d57:	add    BYTE PTR [rax],cl
   140010d59:	add    BYTE PTR [rax+rax*1+0x42],al
   140010d5d:	add    BYTE PTR [rax+rax*1+0x43],cl
   140010d61:	add    BYTE PTR [rdx+0x0],dl
   140010d64:	rex.WRXB add BYTE PTR [r11+0x0],r10b
   140010d68:	push   rbx
   140010d69:	add    BYTE PTR [rax],cl
   140010d6b:	add    BYTE PTR [rsi+0x0],al
   140010d6e:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140010d72:	push   rdx
   140010d73:	add    BYTE PTR [rcx+0x0],al
   140010d76:	push   rdx
   140010d77:	add    BYTE PTR [rdx+0x0],dl
   140010d7a:	rex.WRXB add BYTE PTR [r15],r8b
   140010d7d:	add    BYTE PTR [rdi+0x0],dl
   140010d80:	rex.W add BYTE PTR [rcx+0x0],cl
   140010d84:	push   rsp
   140010d85:	add    BYTE PTR [rbp+0x0],al
   140010d88:	rex.XB add BYTE PTR [r10+0x0],dl
   140010d8c:	(bad)  
   140010d8d:	add    BYTE PTR [rdx+0x0],bl
   140010d90:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   140010d94:	rex.WRB add BYTE PTR [r9+0x0],r9b
   140010d98:	rex.WRX add BYTE PTR [rdi],r8b
   140010d9b:	add    BYTE PTR [rdx+0x0],bl
   140010d9e:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   140010da2:	rex.WRB add BYTE PTR [r15+0x0],r9b
   140010da6:	push   rbp
   140010da7:	add    BYTE PTR [rax+rax*1+0x7],dl
   140010dab:	add    BYTE PTR [rcx+0x0],al
   140010dae:	rex.WRB add BYTE PTR [r8+rax*1+0x49],r9b
   140010db3:	add    BYTE PTR [rbx+0x0],al
   140010db6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140010dba:	add    BYTE PTR [rax],al
   140010dbc:	add    BYTE PTR [rax],al
   140010dbe:	add    BYTE PTR [rax],al
   140010dc0:	sub    BYTE PTR [rax],al
   140010dc2:	add    BYTE PTR [rax],al
   140010dc4:	and    BYTE PTR [rax],al
   140010dc6:	add    BYTE PTR [rax],al
   140010dc8:	add    BYTE PTR [rax],al
   140010dcb:	add    BYTE PTR [rcx],al
   140010dcd:	add    BYTE PTR [rcx],al
   140010dcf:	add    BYTE PTR [rax],al
   140010dd1:	add    BYTE PTR [rax],al
   140010dd3:	add    BYTE PTR [rax],al
   140010dd5:	add    DWORD PTR [rax],eax
	...
   140010deb:	add    bh,bh
   140010ded:	(bad)  
   140010dee:	inc    DWORD PTR [rax]
	...
   140010e28:	add    DWORD PTR [rax-0x7fff0000],eax
   140010e2e:	add    BYTE PTR [rax],al
   140010e30:	add    eax,DWORD PTR [rax]
   140010e32:	add    BYTE PTR [rax],al
   140010e34:	add    eax,DWORD PTR [rax]
   140010e36:	add    BYTE PTR [rax],al
   140010e38:	(bad)  
   140010e39:	add    BYTE PTR [rax],al
   140010e3b:	add    BYTE PTR [rsi+0x0],al
   140010e3e:	add    BYTE PTR [rax],al
   140010e40:	ins    BYTE PTR es:[rdi],dx
   140010e41:	add    BYTE PTR [rax],al
   140010e43:	add    BYTE PTR [rax+rax*1+0x0],bh
   140010e47:	add    BYTE PTR [rdi-0x80],bh
   140010e4a:	add    BYTE PTR [rax],al
   140010e4c:	jg     0x140010e4e
   140010e4e:	add    BYTE PTR [rax],al
   140010e50:	jle    0x140010e52
   140010e52:	add    BYTE PTR [rax],al
   140010e54:	jl     0x140010e56
   140010e56:	add    BYTE PTR [rax],al
   140010e58:	js     0x140010e5a
   140010e5a:	add    BYTE PTR [rax],al
   140010e5c:	jo     0x140010e5e
   140010e5e:	add    BYTE PTR [rax],al
   140010e60:	(bad)  
   140010e61:	add    BYTE PTR [rax],al
   140010e63:	add    BYTE PTR [rax+0x0],al
	...
   140010e6e:	add    BYTE PTR [rax],al
   140010e70:	(bad)  
   140010e71:	(bad)  
   140010e72:	(bad)  
   140010e73:	(bad)  
   140010e74:	(bad)  
   140010e75:	(bad)  
   140010e76:	(bad)  
   140010e77:	(bad)  
   140010e78:	(bad)  
   140010e79:	(bad)  
   140010e7a:	(bad)  
   140010e7b:	(bad)  
   140010e7c:	(bad)  
   140010e7d:	(bad)  
   140010e7e:	(bad)  
   140010e7f:	(bad)  
   140010e80:	(bad)  
   140010e81:	(bad)  
   140010e82:	(bad)  
   140010e83:	(bad)  
   140010e84:	(bad)  
   140010e85:	(bad)  
   140010e86:	(bad)  
   140010e87:	(bad)  
   140010e88:	(bad)  
   140010e89:	(bad)  
   140010e8a:	(bad)  
   140010e8b:	(bad)  
   140010e8c:	(bad)  
   140010e8d:	(bad)  
   140010e8e:	(bad)  
   140010e8f:	(bad)  
   140010e90:	(bad)  
   140010e91:	(bad)  
   140010e92:	(bad)  
   140010e93:	(bad)  
   140010e94:	(bad)  
   140010e95:	(bad)  
   140010e96:	(bad)  
   140010e97:	(bad)  
   140010e98:	(bad)  
   140010e99:	(bad)  
   140010e9a:	(bad)  
   140010e9b:	(bad)  
   140010e9c:	(bad)  
   140010e9d:	(bad)  
   140010e9e:	(bad)  
   140010e9f:	(bad)  
   140010ea0:	(bad)  
   140010ea1:	(bad)  
   140010ea2:	(bad)  
   140010ea3:	(bad)  
   140010ea4:	(bad)  
   140010ea5:	(bad)  
   140010ea6:	(bad)  
   140010ea7:	(bad)  
   140010ea8:	cld    
   140010ea9:	(bad)  
   140010eaa:	(bad)  
   140010eab:	(bad)  
   140010eac:	cld    
   140010ead:	(bad)  
   140010eae:	(bad)  
   140010eaf:	(bad)  
   140010eb0:	clc    
   140010eb1:	jg     0x140010eb2
   140010eb3:	(bad)  
   140010eb4:	js     0x140010f35
   140010eb6:	(bad)  
   140010eb7:	push   QWORD PTR [rax]
   140010eb9:	(bad)  
   140010eba:	(bad)  
   140010ebb:	call   QWORD PTR [rax]
   140010ebd:	(bad)  
   140010ebe:	(bad)  
   140010ebf:	inc    DWORD PTR [rcx]
   140010ec1:	(bad)  
   140010ec2:	(bad)  
   140010ec3:	inc    DWORD PTR [rax]
   140010ec5:	(bad)  
   140010ec6:	(bad)  
   140010ec7:	inc    DWORD PTR [rax]
   140010ec9:	(bad)  
   140010eca:	(bad)  
   140010ecb:	inc    DWORD PTR [rax]
   140010ecd:	jg     0x140010ece
   140010ecf:	inc    DWORD PTR [rax]
   140010ed1:	(bad)  
   140010ed2:	(bad)  
   140010ed3:	inc    DWORD PTR [rcx]
   140010ed5:	(bad)  
   140010ed6:	(bad)  
   140010ed7:	inc    DWORD PTR [rbx]
   140010ed9:	(bad)  
   140010eda:	(bad)  
   140010edb:	inc    DWORD PTR [rdi]
   140010edd:	(bad)  
   140010ede:	(bad)  
   140010edf:	dec    DWORD PTR [rdi]
   140010ee1:	(bad)  
   140010ee2:	(bad)  
   140010ee3:	call   FWORD PTR [rdi]
   140010ee5:	(bad)  
   140010ee6:	(bad)  
   140010ee7:	(bad)  
   140010ee8:	(bad)  
   140010ee9:	(bad)  
   140010eea:	(bad)  
   140010eeb:	(bad)  
   140010eec:	jg     0x140010eed
   140010eee:	(bad)  
   140010eef:	inc    DWORD PTR [rax]
   140010ef1:	add    BYTE PTR [rax],al
   140010ef3:	add    BYTE PTR [rax],ch
   140010ef5:	add    BYTE PTR [rax],al
   140010ef7:	add    BYTE PTR [rax],ah
   140010ef9:	add    BYTE PTR [rax],al
   140010efb:	add    BYTE PTR [rax+0x0],al
   140010efe:	add    BYTE PTR [rax],al
   140010f00:	add    DWORD PTR [rax],eax
   140010f02:	add    DWORD PTR [rax],eax
   140010f04:	add    BYTE PTR [rax],al
   140010f06:	add    BYTE PTR [rax],al
   140010f08:	add    BYTE PTR [rcx],al
	...
   140010f1e:	add    BYTE PTR [rax],al
   140010f20:	(bad)  
   140010f21:	(bad)  
   140010f22:	inc    DWORD PTR [rax]
	...
   140010f5c:	add    DWORD PTR [rax-0x7fff0000],eax
   140010f62:	add    BYTE PTR [rax],al
   140010f64:	add    eax,DWORD PTR [rax]
   140010f66:	add    BYTE PTR [rax],al
   140010f68:	add    eax,DWORD PTR [rax]
   140010f6a:	add    BYTE PTR [rax],al
   140010f6c:	(bad)  
   140010f6d:	add    BYTE PTR [rax],al
   140010f6f:	add    BYTE PTR [rsi+0x0],al
   140010f72:	add    BYTE PTR [rax],al
   140010f74:	ins    BYTE PTR es:[rdi],dx
   140010f75:	add    BYTE PTR [rax],al
   140010f77:	add    BYTE PTR [rax+rax*1+0x0],bh
   140010f7b:	add    BYTE PTR [rdi-0x80],bh
   140010f7e:	add    BYTE PTR [rax],al
   140010f80:	jg     0x140010f82
   140010f82:	add    BYTE PTR [rax],al
   140010f84:	jle    0x140010f88
   140010f86:	add    BYTE PTR [rax],al
   140010f88:	jl     0x140010f8c
   140010f8a:	add    BYTE PTR [rax],al
   140010f8c:	js     0x140010f90
   140010f8e:	add    BYTE PTR [rax],al
   140010f90:	jo     0x140010fb1
   140010f92:	rol    BYTE PTR [rax],0x60
   140010f95:	add    al,BYTE PTR [rax]
   140010f97:	add    BYTE PTR [rax+0x2],al
   140010f9a:	add    BYTE PTR [rax],al
   140010f9c:	add    BYTE PTR [rdx],al
   140010f9e:	add    BYTE PTR [rax],al
   140010fa0:	add    BYTE PTR [rax],al
   140010fa2:	add    BYTE PTR [rax],al
   140010fa4:	(bad)  
   140010fa5:	(bad)  
   140010fa6:	(bad)  
   140010fa7:	(bad)  
   140010fa8:	(bad)  
   140010fa9:	(bad)  
   140010faa:	(bad)  
   140010fab:	(bad)  
   140010fac:	(bad)  
   140010fad:	(bad)  
   140010fae:	(bad)  
   140010faf:	(bad)  
   140010fb0:	(bad)  
   140010fb1:	(bad)  
   140010fb2:	(bad)  
   140010fb3:	(bad)  
   140010fb4:	(bad)  
   140010fb5:	(bad)  
   140010fb6:	(bad)  
   140010fb7:	(bad)  
   140010fb8:	(bad)  
   140010fb9:	(bad)  
   140010fba:	(bad)  
   140010fbb:	(bad)  
   140010fbc:	(bad)  
   140010fbd:	(bad)  
   140010fbe:	(bad)  
   140010fbf:	(bad)  
   140010fc0:	(bad)  
   140010fc1:	(bad)  
   140010fc2:	(bad)  
   140010fc3:	(bad)  
   140010fc4:	(bad)  
   140010fc5:	(bad)  
   140010fc6:	(bad)  
   140010fc7:	(bad)  
   140010fc8:	(bad)  
   140010fc9:	(bad)  
   140010fca:	(bad)  
   140010fcb:	(bad)  
   140010fcc:	(bad)  
   140010fcd:	(bad)  
   140010fce:	(bad)  
   140010fcf:	(bad)  
   140010fd0:	(bad)  
   140010fd1:	(bad)  
   140010fd2:	(bad)  
   140010fd3:	(bad)  
   140010fd4:	(bad)  
   140010fd5:	(bad)  
   140010fd6:	(bad)  
   140010fd7:	(bad)  
   140010fd8:	(bad)  
   140010fd9:	(bad)  
   140010fda:	(bad)  
   140010fdb:	(bad)  
   140010fdc:	cld    
   140010fdd:	(bad)  
   140010fde:	(bad)  
   140010fdf:	(bad)  
   140010fe0:	cld    
   140010fe1:	(bad)  
   140010fe2:	(bad)  
   140010fe3:	(bad)  
   140010fe4:	clc    
   140010fe5:	jg     0x140010fe6
   140010fe7:	(bad)  
   140010fe8:	js     0x140011069
   140010fea:	(bad)  
   140010feb:	push   QWORD PTR [rax]
   140010fed:	(bad)  
   140010fee:	(bad)  
   140010fef:	call   QWORD PTR [rax]
   140010ff1:	(bad)  
   140010ff2:	(bad)  
   140010ff3:	inc    DWORD PTR [rcx]
   140010ff5:	(bad)  
   140010ff6:	(bad)  
   140010ff7:	inc    DWORD PTR [rax]
   140010ff9:	(bad)  
   140010ffa:	(bad)  
   140010ffb:	inc    DWORD PTR [rax]
   140010ffd:	(bad)  
   140010ffe:	(bad)  
   140010fff:	inc    DWORD PTR [rax]
   140011001:	js     0x140011002
   140011003:	inc    DWORD PTR [rax]
   140011005:	clc    
   140011006:	(bad)  
   140011007:	inc    DWORD PTR [rcx]
   140011009:	clc    
   14001100a:	(bad)  
   14001100b:	inc    DWORD PTR [rbx]
   14001100d:	rcr    BYTE PTR [rdi],0xff
   140011010:	(bad)  
   140011011:	rcr    BYTE PTR [rdi],0xff
   140011014:	xadd   BYTE PTR [rdi],bl
   140011017:	call   FWORD PTR [rdi]
   140011019:	clc    
   14001101a:	(bad)  
   14001101b:	(bad)  
   14001101c:	(bad)  
   14001101d:	clc    
   14001101e:	(bad)  
   14001101f:	(bad)  
   140011020:	jg     0x14001101a
   140011022:	(bad)  
   140011023:	dec    DWORD PTR [rdi]
   140011025:	add    BYTE PTR [rsi],cl
   140011027:	add    BYTE PTR [rax],ch
   140011029:	add    BYTE PTR [rax],al
   14001102b:	add    BYTE PTR [rax],ah
   14001102d:	add    BYTE PTR [rax],al
   14001102f:	add    BYTE PTR [rax+0x0],al
   140011032:	add    BYTE PTR [rax],al
   140011034:	add    DWORD PTR [rax],eax
   140011036:	add    DWORD PTR [rax],eax
   140011038:	add    BYTE PTR [rax],al
   14001103a:	add    BYTE PTR [rax],al
   14001103c:	add    BYTE PTR [rcx],al
	...
   140011052:	add    BYTE PTR [rax],al
   140011054:	(bad)  
   140011055:	(bad)  
   140011056:	inc    DWORD PTR [rax]
	...
   140011074:	add    BYTE PTR [rcx],al
   140011076:	add    BYTE PTR [rax],al
   140011078:	add    BYTE PTR [rbx],al
   14001107a:	add    BYTE PTR [rax],0x0
   14001107d:	(bad)  
   14001107e:	rol    BYTE PTR [rax],0x0
   140011081:	pavgb  mm0,QWORD PTR [rax]
   140011084:	add    BYTE PTR [rdi],bl
   140011086:	lock add BYTE PTR [rax],al
   140011089:	add    eax,DWORD PTR [rax-0x7bbd0000]
   14001108f:	add    BYTE PTR [rax],al
   140011091:	ret    
   140011092:	xchg   BYTE PTR [rax],al
   140011094:	add    ebx,eax
   140011096:	xchg   DWORD PTR [rax],eax
   140011098:	add    edi,edi
   14001109a:	inc    DWORD PTR [rax-0x3f0000f9]
   1400110a0:	add    edi,edi
   1400110a2:	inc    DWORD PTR [rax+0x87c301]
   1400110a8:	add    bl,al
   1400110aa:	xchg   BYTE PTR [rax],al
   1400110ac:	add    BYTE PTR [rbx-0x7c],al
   1400110af:	add    BYTE PTR [rax],al
   1400110b1:	add    eax,DWORD PTR [rax-0xfe10000]
   1400110b7:	add    BYTE PTR [rax],al
   1400110b9:	pavgb  mm0,QWORD PTR [rax]
   1400110bc:	add    BYTE PTR [rdi],al
   1400110be:	rol    BYTE PTR [rax],0x0
   1400110c1:	add    eax,DWORD PTR [rax+0x10000]
	...
   1400110d7:	add    bh,bh
   1400110d9:	(bad)  
   1400110da:	(bad)  
   1400110db:	(bad)  
   1400110dc:	(bad)  
   1400110dd:	(bad)  
   1400110de:	(bad)  
   1400110df:	(bad)  
   1400110e0:	(bad)  
   1400110e1:	(bad)  
   1400110e2:	(bad)  
   1400110e3:	(bad)  
   1400110e4:	(bad)  
   1400110e5:	(bad)  
   1400110e6:	(bad)  
   1400110e7:	(bad)  
   1400110e8:	(bad)  
   1400110e9:	(bad)  
   1400110ea:	(bad)  
   1400110eb:	(bad)  
   1400110ec:	(bad)  
   1400110ed:	(bad)  
   1400110ee:	(bad)  
   1400110ef:	(bad)  
   1400110f0:	(bad)  
   1400110f1:	(bad)  
   1400110f2:	(bad)  
   1400110f3:	(bad)  
   1400110f4:	(bad)  
   1400110f5:	(bad)  
   1400110f6:	(bad)  
   1400110f7:	(bad)  
   1400110f8:	(bad)  
   1400110f9:	(bad)  
   1400110fa:	(bad)  
   1400110fb:	(bad)  
   1400110fc:	(bad)  
   1400110fd:	(bad)  
   1400110fe:	(bad)  
   1400110ff:	(bad)  
   140011100:	(bad)  
   140011101:	(bad)  
   140011102:	(bad)  
   140011103:	(bad)  
   140011104:	(bad)  
   140011105:	(bad)  
   140011106:	(bad)  
   140011107:	(bad)  
   140011108:	(bad)  
   140011109:	(bad)  
   14001110a:	(bad)  
   14001110b:	(bad)  
   14001110c:	(bad)  
   14001110d:	(bad)  
   14001110e:	(bad)  
   14001110f:	(bad)  
   140011110:	(bad)  
   140011111:	(bad)  
   140011112:	(bad)  
   140011113:	(bad)  
   140011114:	(bad)  
   140011115:	(bad)  
   140011116:	(bad)  
   140011117:	(bad)  
   140011118:	(bad)  
   140011119:	(bad)  
   14001111a:	(bad)  
   14001111b:	(bad)  
   14001111c:	(bad)  
   14001111d:	(bad)  
   14001111e:	(bad)  
   14001111f:	(bad)  
   140011120:	(bad)  
   140011121:	(bad)  
   140011122:	(bad)  
   140011123:	(bad)  
   140011124:	(bad)  
   140011125:	(bad)  
   140011126:	(bad)  
   140011127:	(bad)  
   140011128:	(bad)  
   140011129:	(bad)  
   14001112a:	(bad)  
   14001112b:	(bad)  
   14001112c:	(bad)  
   14001112d:	(bad)  
   14001112e:	(bad)  
   14001112f:	(bad)  
   140011130:	(bad)  
   140011131:	(bad)  
   140011132:	(bad)  
   140011133:	(bad)  
   140011134:	(bad)  
   140011135:	(bad)  
   140011136:	(bad)  
   140011137:	(bad)  
   140011138:	(bad)  
   140011139:	(bad)  
   14001113a:	(bad)  
   14001113b:	(bad)  
   14001113c:	(bad)  
   14001113d:	(bad)  
   14001113e:	(bad)  
   14001113f:	(bad)  
   140011140:	(bad)  
   140011141:	(bad)  
   140011142:	(bad)  
   140011143:	(bad)  
   140011144:	(bad)  
   140011145:	(bad)  
   140011146:	(bad)  
   140011147:	(bad)  
   140011148:	(bad)  
   140011149:	(bad)  
   14001114a:	(bad)  
   14001114b:	(bad)  
   14001114c:	(bad)  
   14001114d:	(bad)  
   14001114e:	(bad)  
   14001114f:	(bad)  
   140011150:	(bad)  
   140011151:	(bad)  
   140011152:	(bad)  
   140011153:	(bad)  
   140011154:	(bad)  
   140011155:	(bad)  
   140011156:	(bad)  
   140011157:	call   QWORD PTR [rax]
   140011159:	add    BYTE PTR [rax],dl
   14001115b:	add    BYTE PTR [rax],ch
   14001115d:	add    BYTE PTR [rax],al
   14001115f:	add    BYTE PTR [rax],ah
   140011161:	add    BYTE PTR [rax],al
   140011163:	add    BYTE PTR [rax+0x0],al
   140011166:	add    BYTE PTR [rax],al
   140011168:	add    DWORD PTR [rax],eax
   14001116a:	add    DWORD PTR [rax],eax
   14001116c:	add    BYTE PTR [rax],al
   14001116e:	add    BYTE PTR [rax],al
   140011170:	add    BYTE PTR [rcx],al
	...
   140011186:	add    BYTE PTR [rax],al
   140011188:	(bad)  
   140011189:	(bad)  
   14001118a:	inc    DWORD PTR [rax]
	...
   1400111b8:	add    BYTE PTR [rcx],al
   1400111ba:	add    BYTE PTR [rax],0x0
   1400111bd:	(bad)  
   1400111be:	(bad)  
   1400111bf:	add    BYTE PTR [rax],al
   1400111c1:	or     BYTE PTR [rax],dl
   1400111c3:	add    BYTE PTR [rax],al
   1400111c5:	or     BYTE PTR [rax],dl
   1400111c7:	add    BYTE PTR [rax],al
   1400111c9:	adc    BYTE PTR [rax],cl
   1400111cb:	add    BYTE PTR [rax],al
   1400111cd:	adc    BYTE PTR [rax],cl
   1400111cf:	add    BYTE PTR [rax],al
   1400111d1:	or     BYTE PTR [rax],dl
   1400111d3:	add    BYTE PTR [rax],al
   1400111d5:	or     BYTE PTR [rax],dl
   1400111d7:	add    BYTE PTR [rax],al
   1400111d9:	(bad)  
   1400111da:	(bad)  
   1400111db:	add    BYTE PTR [rax],al
   1400111dd:	add    DWORD PTR [rax+0x0],eax
	...
   14001120b:	add    bh,bh
   14001120d:	(bad)  
   14001120e:	(bad)  
   14001120f:	(bad)  
   140011210:	(bad)  
   140011211:	(bad)  
   140011212:	(bad)  
   140011213:	(bad)  
   140011214:	(bad)  
   140011215:	(bad)  
   140011216:	(bad)  
   140011217:	(bad)  
   140011218:	(bad)  
   140011219:	(bad)  
   14001121a:	(bad)  
   14001121b:	(bad)  
   14001121c:	(bad)  
   14001121d:	(bad)  
   14001121e:	(bad)  
   14001121f:	(bad)  
   140011220:	(bad)  
   140011221:	(bad)  
   140011222:	(bad)  
   140011223:	(bad)  
   140011224:	(bad)  
   140011225:	(bad)  
   140011226:	(bad)  
   140011227:	(bad)  
   140011228:	(bad)  
   140011229:	(bad)  
   14001122a:	(bad)  
   14001122b:	(bad)  
   14001122c:	(bad)  
   14001122d:	(bad)  
   14001122e:	(bad)  
   14001122f:	(bad)  
   140011230:	(bad)  
   140011231:	(bad)  
   140011232:	(bad)  
   140011233:	(bad)  
   140011234:	(bad)  
   140011235:	(bad)  
   140011236:	(bad)  
   140011237:	(bad)  
   140011238:	(bad)  
   140011239:	(bad)  
   14001123a:	(bad)  
   14001123b:	(bad)  
   14001123c:	(bad)  
   14001123d:	(bad)  
   14001123e:	(bad)  
   14001123f:	(bad)  
   140011240:	(bad)  
   140011241:	(bad)  
   140011242:	(bad)  
   140011243:	(bad)  
   140011244:	(bad)  
   140011245:	(bad)  
   140011246:	(bad)  
   140011247:	(bad)  
   140011248:	(bad)  
   140011249:	(bad)  
   14001124a:	(bad)  
   14001124b:	(bad)  
   14001124c:	(bad)  
   14001124d:	(bad)  
   14001124e:	(bad)  
   14001124f:	(bad)  
   140011250:	(bad)  
   140011251:	(bad)  
   140011252:	(bad)  
   140011253:	(bad)  
   140011254:	(bad)  
   140011255:	(bad)  
   140011256:	(bad)  
   140011257:	(bad)  
   140011258:	(bad)  
   140011259:	(bad)  
   14001125a:	(bad)  
   14001125b:	(bad)  
   14001125c:	(bad)  
   14001125d:	(bad)  
   14001125e:	(bad)  
   14001125f:	(bad)  
   140011260:	(bad)  
   140011261:	(bad)  
   140011262:	(bad)  
   140011263:	(bad)  
   140011264:	(bad)  
   140011265:	(bad)  
   140011266:	(bad)  
   140011267:	(bad)  
   140011268:	(bad)  
   140011269:	(bad)  
   14001126a:	(bad)  
   14001126b:	(bad)  
   14001126c:	(bad)  
   14001126d:	(bad)  
   14001126e:	(bad)  
   14001126f:	(bad)  
   140011270:	(bad)  
   140011271:	(bad)  
   140011272:	(bad)  
   140011273:	(bad)  
   140011274:	(bad)  
   140011275:	(bad)  
   140011276:	(bad)  
   140011277:	(bad)  
   140011278:	(bad)  
   140011279:	(bad)  
   14001127a:	(bad)  
   14001127b:	(bad)  
   14001127c:	(bad)  
   14001127d:	(bad)  
   14001127e:	(bad)  
   14001127f:	(bad)  
   140011280:	(bad)  
   140011281:	(bad)  
   140011282:	(bad)  
   140011283:	(bad)  
   140011284:	(bad)  
   140011285:	(bad)  
   140011286:	(bad)  
   140011287:	(bad)  
   140011288:	(bad)  
   140011289:	(bad)  
   14001128a:	(bad)  
   14001128b:	dec    DWORD PTR [rdi]
   14001128d:	add    BYTE PTR [rdi],cl
   14001128f:	add    BYTE PTR [rax],ch
   140011291:	add    BYTE PTR [rax],al
   140011293:	add    BYTE PTR [rax],ah
   140011295:	add    BYTE PTR [rax],al
   140011297:	add    BYTE PTR [rax+0x0],al
   14001129a:	add    BYTE PTR [rax],al
   14001129c:	add    DWORD PTR [rax],eax
   14001129e:	add    DWORD PTR [rax],eax
   1400112a0:	add    BYTE PTR [rax],al
   1400112a2:	add    BYTE PTR [rax],al
   1400112a4:	add    BYTE PTR [rax],0x0
	...
   1400112bb:	add    bh,bh
   1400112bd:	(bad)  
   1400112be:	inc    DWORD PTR [rax]
	...
   1400112d8:	add    BYTE PTR [rdx],al
   1400112da:	add    BYTE PTR [rax],0x0
   1400112dd:	add    al,BYTE PTR [rax-0x7ffe0000]
   1400112e3:	add    BYTE PTR [rax],al
   1400112e5:	add    al,BYTE PTR [rax-0x7ffe0000]
   1400112eb:	add    BYTE PTR [rax],al
   1400112ed:	add    al,BYTE PTR [rax-0x7ffe0000]
   1400112f3:	add    BYTE PTR [rax],al
   1400112f5:	add    al,BYTE PTR [rax-0x7ffe0000]
   1400112fb:	add    BYTE PTR [rdi],al
   1400112fd:	(bad)  
   1400112fe:	inc    eax
   140011300:	add    BYTE PTR [rax],al
   140011302:	add    BYTE PTR [rax],al
   140011304:	(bad)  
   140011305:	(bad)  
   140011306:	inc    eax
   140011308:	add    BYTE PTR [rdx],al
   14001130a:	add    BYTE PTR [rax],0x0
   14001130d:	add    al,BYTE PTR [rax-0x7ffe0000]
   140011313:	add    BYTE PTR [rax],al
   140011315:	add    al,BYTE PTR [rax-0x7ffe0000]
   14001131b:	add    BYTE PTR [rax],al
   14001131d:	add    al,BYTE PTR [rax-0x7ffe0000]
   140011323:	add    BYTE PTR [rax],al
   140011325:	add    al,BYTE PTR [rax-0x7ffe0000]
	...
   14001133f:	add    bh,bh
   140011341:	(bad)  
   140011342:	(bad)  
   140011343:	(bad)  
   140011344:	(bad)  
   140011345:	(bad)  
   140011346:	(bad)  
   140011347:	(bad)  
   140011348:	(bad)  
   140011349:	(bad)  
   14001134a:	(bad)  
   14001134b:	(bad)  
   14001134c:	(bad)  
   14001134d:	(bad)  
   14001134e:	(bad)  
   14001134f:	(bad)  
   140011350:	(bad)  
   140011351:	(bad)  
   140011352:	(bad)  
   140011353:	(bad)  
   140011354:	(bad)  
   140011355:	(bad)  
   140011356:	(bad)  
   140011357:	(bad)  
   140011358:	(bad)  
   140011359:	(bad)  
   14001135a:	(bad)  
   14001135b:	(bad)  
   14001135c:	(bad)  
   14001135d:	(bad)  
   14001135e:	(bad)  
   14001135f:	(bad)  
   140011360:	(bad)  
   140011361:	(bad)  
   140011362:	(bad)  
   140011363:	(bad)  
   140011364:	(bad)  
   140011365:	(bad)  
   140011366:	(bad)  
   140011367:	(bad)  
   140011368:	(bad)  
   140011369:	(bad)  
   14001136a:	(bad)  
   14001136b:	(bad)  
   14001136c:	(bad)  
   14001136d:	(bad)  
   14001136e:	(bad)  
   14001136f:	(bad)  
   140011370:	(bad)  
   140011371:	(bad)  
   140011372:	(bad)  
   140011373:	(bad)  
   140011374:	(bad)  
   140011375:	(bad)  
   140011376:	(bad)  
   140011377:	(bad)  
   140011378:	(bad)  
   140011379:	(bad)  
   14001137a:	(bad)  
   14001137b:	(bad)  
   14001137c:	(bad)  
   14001137d:	(bad)  
   14001137e:	(bad)  
   14001137f:	(bad)  
   140011380:	(bad)  
   140011381:	(bad)  
   140011382:	(bad)  
   140011383:	(bad)  
   140011384:	(bad)  
   140011385:	(bad)  
   140011386:	(bad)  
   140011387:	(bad)  
   140011388:	(bad)  
   140011389:	(bad)  
   14001138a:	(bad)  
   14001138b:	(bad)  
   14001138c:	(bad)  
   14001138d:	(bad)  
   14001138e:	(bad)  
   14001138f:	(bad)  
   140011390:	(bad)  
   140011391:	(bad)  
   140011392:	(bad)  
   140011393:	(bad)  
   140011394:	(bad)  
   140011395:	(bad)  
   140011396:	(bad)  
   140011397:	(bad)  
   140011398:	(bad)  
   140011399:	(bad)  
   14001139a:	(bad)  
   14001139b:	(bad)  
   14001139c:	(bad)  
   14001139d:	(bad)  
   14001139e:	(bad)  
   14001139f:	(bad)  
   1400113a0:	(bad)  
   1400113a1:	(bad)  
   1400113a2:	(bad)  
   1400113a3:	(bad)  
   1400113a4:	(bad)  
   1400113a5:	(bad)  
   1400113a6:	(bad)  
   1400113a7:	(bad)  
   1400113a8:	(bad)  
   1400113a9:	(bad)  
   1400113aa:	(bad)  
   1400113ab:	(bad)  
   1400113ac:	(bad)  
   1400113ad:	(bad)  
   1400113ae:	(bad)  
   1400113af:	(bad)  
   1400113b0:	(bad)  
   1400113b1:	(bad)  
   1400113b2:	(bad)  
   1400113b3:	(bad)  
   1400113b4:	(bad)  
   1400113b5:	(bad)  
   1400113b6:	(bad)  
   1400113b7:	(bad)  
   1400113b8:	(bad)  
   1400113b9:	(bad)  
   1400113ba:	(bad)  
   1400113bb:	(bad)  
   1400113bc:	(bad)  
   1400113bd:	(bad)  
   1400113be:	(bad)  
   1400113bf:	dec    DWORD PTR [rdi]
   1400113c1:	add    BYTE PTR [rdi],cl
   1400113c3:	add    BYTE PTR [rax],ch
   1400113c5:	add    BYTE PTR [rax],al
   1400113c7:	add    BYTE PTR [rax],ah
   1400113c9:	add    BYTE PTR [rax],al
   1400113cb:	add    BYTE PTR [rax+0x0],al
   1400113ce:	add    BYTE PTR [rax],al
   1400113d0:	add    DWORD PTR [rax],eax
   1400113d2:	add    DWORD PTR [rax],eax
   1400113d4:	add    BYTE PTR [rax],al
   1400113d6:	add    BYTE PTR [rax],al
   1400113d8:	add    BYTE PTR [rcx],al
	...
   1400113ee:	add    BYTE PTR [rax],al
   1400113f0:	(bad)  
   1400113f1:	(bad)  
   1400113f2:	inc    DWORD PTR [rax]
	...
   14001140c:	add    BYTE PTR [rcx],al
   14001140e:	add    BYTE PTR [rax],al
   140011410:	add    BYTE PTR [rcx],al
   140011412:	add    BYTE PTR [rax],al
   140011414:	add    BYTE PTR [rcx],al
   140011416:	add    BYTE PTR [rax],al
   140011418:	add    BYTE PTR [rcx],al
   14001141a:	add    BYTE PTR [rax],al
   14001141c:	add    BYTE PTR [rcx],al
   14001141e:	add    BYTE PTR [rax],al
   140011420:	add    BYTE PTR [rcx],al
   140011422:	add    BYTE PTR [rax],al
   140011424:	add    BYTE PTR [rcx],al
   140011426:	add    BYTE PTR [rax],al
   140011428:	add    BYTE PTR [rcx],al
   14001142a:	add    BYTE PTR [rax],al
   14001142c:	add    BYTE PTR [rcx],al
   14001142e:	add    BYTE PTR [rax],al
   140011430:	add    BYTE PTR [rcx],al
   140011432:	add    BYTE PTR [rax],al
   140011434:	(bad)  
   140011435:	(bad)  
   140011436:	inc    eax
   140011438:	add    BYTE PTR [rcx],al
   14001143a:	add    BYTE PTR [rax],al
   14001143c:	add    BYTE PTR [rcx],al
   14001143e:	add    BYTE PTR [rax],al
   140011440:	add    BYTE PTR [rcx],al
   140011442:	add    BYTE PTR [rax],al
   140011444:	add    BYTE PTR [rcx],al
   140011446:	add    BYTE PTR [rax],al
   140011448:	add    BYTE PTR [rcx],al
   14001144a:	add    BYTE PTR [rax],al
   14001144c:	add    BYTE PTR [rcx],al
   14001144e:	add    BYTE PTR [rax],al
   140011450:	add    BYTE PTR [rcx],al
   140011452:	add    BYTE PTR [rax],al
   140011454:	add    BYTE PTR [rcx],al
   140011456:	add    BYTE PTR [rax],al
   140011458:	add    BYTE PTR [rcx],al
   14001145a:	add    BYTE PTR [rax],al
   14001145c:	add    BYTE PTR [rcx],al
	...
   140011472:	add    BYTE PTR [rax],al
   140011474:	(bad)  
   140011475:	(bad)  
   140011476:	(bad)  
   140011477:	(bad)  
   140011478:	(bad)  
   140011479:	(bad)  
   14001147a:	(bad)  
   14001147b:	(bad)  
   14001147c:	(bad)  
   14001147d:	(bad)  
   14001147e:	(bad)  
   14001147f:	(bad)  
   140011480:	(bad)  
   140011481:	(bad)  
   140011482:	(bad)  
   140011483:	(bad)  
   140011484:	(bad)  
   140011485:	(bad)  
   140011486:	(bad)  
   140011487:	(bad)  
   140011488:	(bad)  
   140011489:	(bad)  
   14001148a:	(bad)  
   14001148b:	(bad)  
   14001148c:	(bad)  
   14001148d:	(bad)  
   14001148e:	(bad)  
   14001148f:	(bad)  
   140011490:	(bad)  
   140011491:	(bad)  
   140011492:	(bad)  
   140011493:	(bad)  
   140011494:	(bad)  
   140011495:	(bad)  
   140011496:	(bad)  
   140011497:	(bad)  
   140011498:	(bad)  
   140011499:	(bad)  
   14001149a:	(bad)  
   14001149b:	(bad)  
   14001149c:	(bad)  
   14001149d:	(bad)  
   14001149e:	(bad)  
   14001149f:	(bad)  
   1400114a0:	(bad)  
   1400114a1:	(bad)  
   1400114a2:	(bad)  
   1400114a3:	(bad)  
   1400114a4:	(bad)  
   1400114a5:	(bad)  
   1400114a6:	(bad)  
   1400114a7:	(bad)  
   1400114a8:	(bad)  
   1400114a9:	(bad)  
   1400114aa:	(bad)  
   1400114ab:	(bad)  
   1400114ac:	(bad)  
   1400114ad:	(bad)  
   1400114ae:	(bad)  
   1400114af:	(bad)  
   1400114b0:	(bad)  
   1400114b1:	(bad)  
   1400114b2:	(bad)  
   1400114b3:	(bad)  
   1400114b4:	(bad)  
   1400114b5:	(bad)  
   1400114b6:	(bad)  
   1400114b7:	(bad)  
   1400114b8:	(bad)  
   1400114b9:	(bad)  
   1400114ba:	(bad)  
   1400114bb:	(bad)  
   1400114bc:	(bad)  
   1400114bd:	(bad)  
   1400114be:	(bad)  
   1400114bf:	(bad)  
   1400114c0:	(bad)  
   1400114c1:	(bad)  
   1400114c2:	(bad)  
   1400114c3:	(bad)  
   1400114c4:	(bad)  
   1400114c5:	(bad)  
   1400114c6:	(bad)  
   1400114c7:	(bad)  
   1400114c8:	(bad)  
   1400114c9:	(bad)  
   1400114ca:	(bad)  
   1400114cb:	(bad)  
   1400114cc:	(bad)  
   1400114cd:	(bad)  
   1400114ce:	(bad)  
   1400114cf:	(bad)  
   1400114d0:	(bad)  
   1400114d1:	(bad)  
   1400114d2:	(bad)  
   1400114d3:	(bad)  
   1400114d4:	(bad)  
   1400114d5:	(bad)  
   1400114d6:	(bad)  
   1400114d7:	(bad)  
   1400114d8:	(bad)  
   1400114d9:	(bad)  
   1400114da:	(bad)  
   1400114db:	(bad)  
   1400114dc:	(bad)  
   1400114dd:	(bad)  
   1400114de:	(bad)  
   1400114df:	(bad)  
   1400114e0:	(bad)  
   1400114e1:	(bad)  
   1400114e2:	(bad)  
   1400114e3:	(bad)  
   1400114e4:	(bad)  
   1400114e5:	(bad)  
   1400114e6:	(bad)  
   1400114e7:	(bad)  
   1400114e8:	(bad)  
   1400114e9:	(bad)  
   1400114ea:	(bad)  
   1400114eb:	(bad)  
   1400114ec:	(bad)  
   1400114ed:	(bad)  
   1400114ee:	(bad)  
   1400114ef:	(bad)  
   1400114f0:	(bad)  
   1400114f1:	(bad)  
   1400114f2:	(bad)  
   1400114f3:	dec    DWORD PTR [rax]
   1400114f5:	add    BYTE PTR [rax],cl
   1400114f7:	add    BYTE PTR [rax],ch
   1400114f9:	add    BYTE PTR [rax],al
   1400114fb:	add    BYTE PTR [rax],ah
   1400114fd:	add    BYTE PTR [rax],al
   1400114ff:	add    BYTE PTR [rax+0x0],al
   140011502:	add    BYTE PTR [rax],al
   140011504:	add    DWORD PTR [rax],eax
   140011506:	add    DWORD PTR [rax],eax
   140011508:	add    BYTE PTR [rax],al
   14001150a:	add    BYTE PTR [rax],al
   14001150c:	add    BYTE PTR [rcx],al
	...
   140011522:	add    BYTE PTR [rax],al
   140011524:	(bad)  
   140011525:	(bad)  
   140011526:	inc    DWORD PTR [rax]
	...
   140011570:	add    eax,eax
   140011572:	add    BYTE PTR [rax],al
   140011574:	(bad)  
   140011575:	(bad)  
   140011576:	add    BYTE PTR [rax],al
   140011578:	(bad)  
   140011579:	jo     0x14001157b
   14001157b:	add    BYTE PTR [rsi],bl
   14001157d:	js     0x14001157f
   14001157f:	add    BYTE PTR [rax],dl
   140011581:	or     BYTE PTR [rax],al
   140011583:	add    BYTE PTR [rax],dl
   140011585:	or     BYTE PTR [rax],al
   140011587:	add    BYTE PTR [rsi],bl
   140011589:	js     0x14001158b
   14001158b:	add    BYTE PTR [rsi],cl
   14001158d:	jo     0x14001158f
   14001158f:	add    BYTE PTR [rsi],al
   140011591:	(bad)  
   140011592:	add    BYTE PTR [rax],al
   140011594:	add    eax,eax
	...
   1400115a6:	add    BYTE PTR [rax],al
   1400115a8:	(bad)  
   1400115a9:	(bad)  
   1400115aa:	(bad)  
   1400115ab:	(bad)  
   1400115ac:	(bad)  
   1400115ad:	(bad)  
   1400115ae:	(bad)  
   1400115af:	(bad)  
   1400115b0:	(bad)  
   1400115b1:	(bad)  
   1400115b2:	(bad)  
   1400115b3:	(bad)  
   1400115b4:	(bad)  
   1400115b5:	(bad)  
   1400115b6:	(bad)  
   1400115b7:	(bad)  
   1400115b8:	(bad)  
   1400115b9:	(bad)  
   1400115ba:	(bad)  
   1400115bb:	(bad)  
   1400115bc:	(bad)  
   1400115bd:	(bad)  
   1400115be:	(bad)  
   1400115bf:	(bad)  
   1400115c0:	(bad)  
   1400115c1:	(bad)  
   1400115c2:	(bad)  
   1400115c3:	(bad)  
   1400115c4:	(bad)  
   1400115c5:	(bad)  
   1400115c6:	(bad)  
   1400115c7:	(bad)  
   1400115c8:	(bad)  
   1400115c9:	(bad)  
   1400115ca:	(bad)  
   1400115cb:	(bad)  
   1400115cc:	(bad)  
   1400115cd:	(bad)  
   1400115ce:	(bad)  
   1400115cf:	(bad)  
   1400115d0:	(bad)  
   1400115d1:	(bad)  
   1400115d2:	(bad)  
   1400115d3:	(bad)  
   1400115d4:	(bad)  
   1400115d5:	(bad)  
   1400115d6:	(bad)  
   1400115d7:	(bad)  
   1400115d8:	(bad)  
   1400115d9:	(bad)  
   1400115da:	(bad)  
   1400115db:	(bad)  
   1400115dc:	(bad)  
   1400115dd:	(bad)  
   1400115de:	(bad)  
   1400115df:	(bad)  
   1400115e0:	(bad)  
   1400115e1:	(bad)  
   1400115e2:	jg     0x1400115e3
   1400115e4:	(bad)  
   1400115e5:	cld    
   1400115e6:	jg     0x1400115e7
   1400115e8:	(bad)  
   1400115e9:	clc    
   1400115ea:	(bad)  
   1400115eb:	(bad)  
   1400115ec:	clc    
   1400115ed:	adc    edi,edi
   1400115ef:	push   rax
   1400115f1:	add    edi,edi
   1400115f3:	jmp    rax
   1400115f5:	(bad)  
   1400115f6:	(bad)  
   1400115f7:	inc    eax
   1400115f9:	add    edi,edi
   1400115fb:	inc    eax
   1400115fd:	add    edi,edi
   1400115ff:	inc    eax
   140011601:	add    edi,edi
   140011603:	inc    eax
   140011605:	add    edi,edi
   140011607:	inc    eax
   140011609:	add    edi,edi
   14001160b:	inc    eax
   14001160d:	add    edi,edi
   14001160f:	jmp    rax
   140011611:	(bad)  
   140011612:	(bad)  
   140011613:	push   rax
   140011615:	ud0    edi,edi
   140011618:	clc    
   140011619:	(bad)  
   14001161a:	(bad)  
   14001161b:	(bad)  
   14001161c:	(bad)  
   14001161d:	(bad)  
   14001161e:	(bad)  
   14001161f:	(bad)  
   140011620:	(bad)  
   140011621:	(bad)  
   140011622:	(bad)  
   140011623:	(bad)  
   140011624:	(bad)  
   140011625:	(bad)  
   140011626:	(bad)  
   140011627:	inc    DWORD PTR [rax]
   140011629:	add    BYTE PTR [rax],al
   14001162b:	add    BYTE PTR [rax],ch
   14001162d:	add    BYTE PTR [rax],al
   14001162f:	add    BYTE PTR [rax],ah
   140011631:	add    BYTE PTR [rax],al
   140011633:	add    BYTE PTR [rax+0x0],al
   140011636:	add    BYTE PTR [rax],al
   140011638:	add    DWORD PTR [rax],eax
   14001163a:	add    al,0x0
   14001163c:	add    BYTE PTR [rax],al
   14001163e:	add    BYTE PTR [rax],al
   140011640:	add    BYTE PTR [rdx],0x0
	...
   140011657:	add    BYTE PTR [rax],al
   140011659:	add    BYTE PTR [rax+0x800000],al
   14001165f:	add    BYTE PTR [rax],al
   140011661:	add    BYTE PTR [rax+0x8000],0x0
   140011668:	add    BYTE PTR [rax],0x80
   14001166b:	add    BYTE PTR [rax-0x3fffff80],al
   140011671:	rol    al,0x0
   140011674:	add    BYTE PTR [rax+0x80],0xff
   14001167b:	add    BYTE PTR [rax],al
   14001167d:	inc    DWORD PTR [rax]
   14001167f:	add    BYTE PTR [rax],al
   140011681:	(bad)  
   140011682:	inc    DWORD PTR [rax]
   140011684:	inc    DWORD PTR [rax]
   140011686:	add    BYTE PTR [rax],al
   140011688:	inc    DWORD PTR [rax]
   14001168a:	inc    DWORD PTR [rax]
   14001168c:	(bad)  
   14001168d:	inc    DWORD PTR [rax]
   14001168f:	add    bh,bh
   140011691:	(bad)  
   140011692:	inc    DWORD PTR [rax]
	...
   1400117a4:	add    BYTE PTR [rax],al
   1400117a6:	or     BYTE PTR [rax],al
   1400117a8:	add    BYTE PTR [rax+0x0],al
	...
   1400117c6:	add    BYTE PTR [rax],0xe
   1400117c9:	call   0x1400117ce
   1400117ce:	add    BYTE PTR [rax],al
   1400117d0:	add    BYTE PTR [rax],al
   1400117d2:	add    BYTE PTR [rax],al
   1400117d4:	add    BYTE PTR [rax-0x19000000],al
   1400117da:	or     BYTE PTR [rax],al
	...
   1400117e8:	add    BYTE PTR [rsi],cl
	...
   140011816:	loopne 0x140011818
	...
   140011824:	add    BYTE PTR [rax+0xee],al
   14001182a:	or     BYTE PTR [rax],al
	...
   140011834:	add    BYTE PTR [rax],al
   140011836:	mov    fs,eax
   140011838:	add    BYTE PTR [rax],cl
	...
   140011856:	or     BYTE PTR [rax],al
   140011858:	add    BYTE PTR [rax+0x0],al
	...
   140011892:	add    BYTE PTR [rax],al
   140011894:	(bad)  
   140011895:	(bad)  
   140011896:	(bad)  
   140011897:	(bad)  
   140011898:	(bad)  
   140011899:	(bad)  
   14001189a:	(bad)  
   14001189b:	(bad)  
   14001189c:	(bad)  
   14001189d:	(bad)  
   14001189e:	(bad)  
   14001189f:	(bad)  
   1400118a0:	(bad)  
   1400118a1:	(bad)  
   1400118a2:	(bad)  
   1400118a3:	(bad)  
   1400118a4:	(bad)  
   1400118a5:	(bad)  
   1400118a6:	(bad)  
   1400118a7:	(bad)  
   1400118a8:	(bad)  
   1400118a9:	(bad)  
   1400118aa:	(bad)  
   1400118ab:	(bad)  
   1400118ac:	(bad)  
   1400118ad:	(bad)  
   1400118ae:	(bad)  
   1400118af:	(bad)  
   1400118b0:	(bad)  
   1400118b1:	(bad)  
   1400118b2:	(bad)  
   1400118b3:	(bad)  
   1400118b4:	(bad)  
   1400118b5:	(bad)  
   1400118b6:	(bad)  
   1400118b7:	(bad)  
   1400118b8:	(bad)  
   1400118b9:	(bad)  
   1400118ba:	(bad)  
   1400118bb:	(bad)  
   1400118bc:	(bad)  
   1400118bd:	(bad)  
   1400118be:	(bad)  
   1400118bf:	(bad)  
   1400118c0:	(bad)  
   1400118c1:	(bad)  
   1400118c2:	(bad)  
   1400118c3:	(bad)  
   1400118c4:	(bad)  
   1400118c5:	(bad)  
   1400118c6:	(bad)  
   1400118c7:	(bad)  
   1400118c8:	(bad)  
   1400118c9:	(bad)  
   1400118ca:	(bad)  
   1400118cb:	(bad)  
   1400118cc:	(bad)  
   1400118cd:	(bad)  
   1400118ce:	jg     0x1400118cf
   1400118d0:	(bad)  
   1400118d1:	cld    
   1400118d2:	jg     0x1400118d3
   1400118d4:	(bad)  
   1400118d5:	clc    
   1400118d6:	(bad)  
   1400118d7:	(bad)  
   1400118d8:	clc    
   1400118d9:	adc    edi,edi
   1400118db:	push   rbx
   1400118dd:	ret    
   1400118de:	(bad)  
   1400118df:	jmp    rsi
   1400118e1:	(bad)  
   1400118e2:	(bad)  
   1400118e3:	dec    esi
   1400118e5:	rex.XB (bad) 
   1400118e7:	(bad)  
   1400118e8:	fisubr WORD PTR [rbx-0x1]
   1400118eb:	call   rax
   1400118ed:	or     edi,edi
   1400118ef:	call   rax
   1400118f1:	or     edi,edi
   1400118f3:	call   rsi
   1400118f5:	jnp    0x1400118f6
   1400118f7:	inc    edx
   1400118f9:	jae    0x1400118fa
   1400118fb:	jmp    rax
   1400118fd:	addr32 (bad) 
   1400118ff:	push   rbx
   140011901:	iret   
   140011902:	(bad)  
   140011903:	(bad)  
   140011904:	clc    
   140011905:	(bad)  
   140011906:	(bad)  
   140011907:	(bad)  
   140011908:	(bad)  
   140011909:	(bad)  
   14001190a:	(bad)  
   14001190b:	(bad)  
   14001190c:	(bad)  
   14001190d:	(bad)  
   14001190e:	(bad)  
   14001190f:	(bad)  
   140011910:	(bad)  
   140011911:	(bad)  
   140011912:	(bad)  
   140011913:	dec    DWORD PTR [rax]
   140011915:	add    BYTE PTR [rax],cl
   140011917:	add    BYTE PTR [rax],ch
   140011919:	add    BYTE PTR [rax],al
   14001191b:	add    BYTE PTR [rax],ah
   14001191d:	add    BYTE PTR [rax],al
   14001191f:	add    BYTE PTR [rax+0x0],al
   140011922:	add    BYTE PTR [rax],al
   140011924:	add    DWORD PTR [rax],eax
   140011926:	or     BYTE PTR [rax],al
   140011928:	add    BYTE PTR [rax],al
   14001192a:	add    BYTE PTR [rax],al
   14001192c:	add    BYTE PTR [rax+rax*1],0x0
	...
   140011944:	add    BYTE PTR [rax],al
   140011946:	add    BYTE PTR [rax],0x0
   140011949:	add    BYTE PTR [rax],0x0
   14001194c:	add    BYTE PTR [rax+0x800080],al
   140011952:	add    BYTE PTR [rax],al
   140011954:	add    BYTE PTR [rax],0x80
   140011957:	add    BYTE PTR [rax-0x3fffff80],al
   14001195d:	rol    al,0x0
   140011960:	rcr    ah,0xc0
   140011963:	add    al,dh
   140011965:	retf   0xa6
   140011968:	add    al,0x4
   14001196a:	add    al,0x0
   14001196c:	or     BYTE PTR [rax],cl
   14001196e:	or     BYTE PTR [rax],al
   140011970:	or     al,0xc
   140011972:	or     al,0x0
   140011974:	adc    DWORD PTR [rcx],edx
   140011976:	adc    DWORD PTR [rax],eax
   140011978:	(bad)  
   140011979:	(bad)  
   14001197a:	(bad)  
   14001197b:	add    BYTE PTR [rsp+rbx*1],bl
   14001197e:	sbb    al,0x0
   140011980:	and    ah,BYTE PTR [rdx]
   140011982:	and    al,BYTE PTR [rax]
   140011984:	sub    DWORD PTR [rcx],ebp
   140011986:	sub    DWORD PTR [rax],eax
   140011988:	push   rbp
   140011989:	push   rbp
   14001198a:	push   rbp
   14001198b:	add    BYTE PTR [rbp+0x4d],cl
   14001198e:	rex.WRB add BYTE PTR [r10+0x42],r8b
   140011992:	rex.X add BYTE PTR [rcx],dil
   140011995:	cmp    DWORD PTR [rcx],edi
   140011997:	add    BYTE PTR [rax+0x5000ff7c],al
   14001199d:	push   rax
   14001199e:	inc    DWORD PTR [rax]
   1400119a0:	xchg   ebx,eax
   1400119a1:	add    dh,dl
   1400119a3:	add    bh,bh
   1400119a5:	in     al,dx
   1400119a6:	int3   
   1400119a7:	add    dh,al
   1400119a9:	(bad)  
   1400119aa:	out    dx,eax
   1400119ab:	add    dh,dl
   1400119ad:	out    0xe7,eax
   1400119af:	add    BYTE PTR [rax+0xada9],dl
   1400119b5:	add    BYTE PTR [rbx],dh
   1400119b7:	add    BYTE PTR [rax],al
   1400119b9:	add    BYTE PTR [rsi+0x0],ah
   1400119bc:	add    BYTE PTR [rax],al
   1400119be:	cdq    
   1400119bf:	add    BYTE PTR [rax],al
   1400119c1:	add    ah,cl
   1400119c3:	add    BYTE PTR [rax],al
   1400119c5:	xor    eax,DWORD PTR [rax]
   1400119c7:	add    BYTE PTR [rax],al
   1400119c9:	xor    esi,DWORD PTR [rbx]
   1400119cb:	add    BYTE PTR [rax],al
   1400119cd:	xor    esp,DWORD PTR [rsi+0x0]
   1400119d0:	add    BYTE PTR [rbx],dh
   1400119d2:	cdq    
   1400119d3:	add    BYTE PTR [rax],al
   1400119d5:	xor    ecx,esp
   1400119d7:	add    BYTE PTR [rax],al
   1400119d9:	xor    edi,edi
   1400119db:	add    BYTE PTR [rax],al
   1400119dd:	data16 add BYTE PTR [rax],al
   1400119e0:	add    BYTE PTR [rsi+0x33],ah
   1400119e3:	add    BYTE PTR [rax],al
   1400119e5:	data16 data16 add BYTE PTR [rax],al
   1400119e9:	cwd    
   1400119eb:	add    BYTE PTR [rax],al
   1400119ed:	data16 int3 
   1400119ef:	add    BYTE PTR [rax],al
   1400119f1:	inc    WORD PTR [rax]
   1400119f4:	add    BYTE PTR [rcx-0x67000000],bl
   1400119fa:	xor    eax,DWORD PTR [rax]
   1400119fc:	add    BYTE PTR [rcx-0x66ffff9a],bl
   140011a02:	cdq    
   140011a03:	add    BYTE PTR [rax],al
   140011a05:	cdq    
   140011a06:	int3   
   140011a07:	add    BYTE PTR [rax],al
   140011a09:	cdq    
   140011a0a:	inc    DWORD PTR [rax]
   140011a0c:	add    ah,cl
   140011a0e:	add    BYTE PTR [rax],al
   140011a10:	add    ah,cl
   140011a12:	xor    eax,DWORD PTR [rax]
   140011a14:	add    ah,cl
   140011a16:	data16 add BYTE PTR [rax],al
   140011a19:	int3   
   140011a1a:	cdq    
   140011a1b:	add    BYTE PTR [rax],al
   140011a1d:	int3   
   140011a1e:	int3   
   140011a1f:	add    BYTE PTR [rax],al
   140011a21:	int3   
   140011a22:	inc    DWORD PTR [rax]
   140011a24:	add    bh,bh
   140011a26:	data16 add BYTE PTR [rax],al
   140011a29:	call   FWORD PTR [rcx-0x33010000]
   140011a2f:	add    BYTE PTR [rbx],dh
   140011a31:	add    BYTE PTR [rax],al
   140011a33:	add    BYTE PTR [rbx],dh
   140011a35:	add    BYTE PTR [rbx],dh
   140011a37:	add    BYTE PTR [rbx],dh
   140011a39:	add    BYTE PTR [rsi+0x0],ah
   140011a3c:	xor    eax,DWORD PTR [rax]
   140011a3e:	cdq    
   140011a3f:	add    BYTE PTR [rbx],dh
   140011a41:	add    ah,cl
   140011a43:	add    BYTE PTR [rbx],dh
   140011a45:	add    bh,bh
   140011a47:	add    BYTE PTR [rbx],dh
   140011a49:	xor    eax,DWORD PTR [rax]
   140011a4b:	add    BYTE PTR [rbx],dh
   140011a4d:	xor    esi,DWORD PTR [rbx]
   140011a4f:	add    BYTE PTR [rbx],dh
   140011a51:	xor    esp,DWORD PTR [rsi+0x0]
   140011a54:	xor    esi,DWORD PTR [rbx]
   140011a56:	cdq    
   140011a57:	add    BYTE PTR [rbx],dh
   140011a59:	xor    ecx,esp
   140011a5b:	add    BYTE PTR [rbx],dh
   140011a5d:	xor    edi,edi
   140011a5f:	add    BYTE PTR [rbx],dh
   140011a61:	data16 add BYTE PTR [rax],al
   140011a64:	xor    esp,DWORD PTR [rsi+0x33]
   140011a67:	add    BYTE PTR [rbx],dh
   140011a69:	data16 data16 add BYTE PTR [rbx],dh
   140011a6d:	cwd    
   140011a6f:	add    BYTE PTR [rbx],dh
   140011a71:	data16 int3 
   140011a73:	add    BYTE PTR [rbx],dh
   140011a75:	inc    WORD PTR [rax]
   140011a78:	xor    ebx,DWORD PTR [rcx-0x66cd0000]
   140011a7e:	xor    eax,DWORD PTR [rax]
   140011a80:	xor    ebx,DWORD PTR [rcx-0x66ccff9a]
   140011a86:	cdq    
   140011a87:	add    BYTE PTR [rbx],dh
   140011a89:	cdq    
   140011a8a:	int3   
   140011a8b:	add    BYTE PTR [rbx],dh
   140011a8d:	cdq    
   140011a8e:	inc    DWORD PTR [rax]
   140011a90:	xor    ecx,esp
   140011a92:	add    BYTE PTR [rax],al
   140011a94:	xor    ecx,esp
   140011a96:	xor    eax,DWORD PTR [rax]
   140011a98:	xor    ecx,esp
   140011a9a:	data16 add BYTE PTR [rbx],dh
   140011a9d:	int3   
   140011a9e:	cdq    
   140011a9f:	add    BYTE PTR [rbx],dh
   140011aa1:	int3   
   140011aa2:	int3   
   140011aa3:	add    BYTE PTR [rbx],dh
   140011aa5:	int3   
   140011aa6:	inc    DWORD PTR [rax]
   140011aa8:	xor    edi,edi
   140011aaa:	xor    eax,DWORD PTR [rax]
   140011aac:	xor    edi,edi
   140011aae:	data16 add BYTE PTR [rbx],dh
   140011ab1:	call   FWORD PTR [rcx-0x3300cd00]
   140011ab7:	add    BYTE PTR [rbx],dh
   140011ab9:	(bad)  
   140011aba:	inc    DWORD PTR [rax]
   140011abc:	data16 add BYTE PTR [rax],al
   140011abf:	add    BYTE PTR [rsi+0x0],ah
   140011ac2:	xor    eax,DWORD PTR [rax]
   140011ac4:	data16 add BYTE PTR [rsi+0x0],ah
   140011ac8:	data16 add BYTE PTR [rcx-0x33ff9a00],bl
   140011acf:	add    BYTE PTR [rsi+0x0],ah
   140011ad2:	inc    DWORD PTR [rax]
   140011ad4:	xor    ax,WORD PTR [rax]
   140011ad7:	add    BYTE PTR [rsi+0x33],ah
   140011ada:	xor    eax,DWORD PTR [rax]
   140011adc:	xor    sp,WORD PTR [rsi+0x0]
   140011ae0:	xor    bx,WORD PTR [rcx-0x33cc9a00]
   140011ae7:	add    BYTE PTR [rsi+0x33],ah
   140011aea:	inc    DWORD PTR [rax]
   140011aec:	data16 data16 add BYTE PTR [rax],al
   140011af0:	data16 xor ax,WORD PTR [rax]
   140011af4:	data16 data16 data16 add BYTE PTR [rsi+0x66],ah
   140011afa:	cdq    
   140011afb:	add    BYTE PTR [rsi+0x66],ah
   140011afe:	int3   
   140011aff:	add    BYTE PTR [rsi-0x67],ah
   140011b02:	add    BYTE PTR [rax],al
   140011b04:	cwd    
   140011b06:	xor    eax,DWORD PTR [rax]
   140011b08:	cwd    
   140011b0a:	data16 add BYTE PTR [rsi-0x67],ah
   140011b0e:	cdq    
   140011b0f:	add    BYTE PTR [rsi-0x67],ah
   140011b12:	int3   
   140011b13:	add    BYTE PTR [rsi-0x67],ah
   140011b16:	inc    DWORD PTR [rax]
   140011b18:	data16 int3 
   140011b1a:	add    BYTE PTR [rax],al
   140011b1c:	data16 int3 
   140011b1e:	xor    eax,DWORD PTR [rax]
   140011b20:	data16 int3 
   140011b22:	cdq    
   140011b23:	add    BYTE PTR [rsi-0x34],ah
   140011b26:	int3   
   140011b27:	add    BYTE PTR [rsi-0x34],ah
   140011b2a:	inc    DWORD PTR [rax]
   140011b2c:	inc    WORD PTR [rax]
   140011b2f:	add    BYTE PTR [rsi-0x1],ah
   140011b32:	xor    eax,DWORD PTR [rax]
   140011b34:	call   DWORD PTR [rcx-0x33009a00]
   140011b3b:	add    ah,cl
   140011b3d:	add    bh,bh
   140011b3f:	add    bh,bh
   140011b41:	add    ah,cl
   140011b43:	add    BYTE PTR [rcx-0x66ffff67],bl
   140011b49:	xor    ebx,DWORD PTR [rcx-0x66ff6700]
   140011b4f:	add    BYTE PTR [rcx-0x66ff3400],bl
   140011b55:	add    BYTE PTR [rax],al
   140011b57:	add    BYTE PTR [rcx-0x66ffcccd],bl
   140011b5d:	add    BYTE PTR [rsi+0x0],ah
   140011b60:	cdq    
   140011b61:	xor    ecx,esp
   140011b63:	add    BYTE PTR [rcx-0x66ff0100],bl
   140011b69:	data16 add BYTE PTR [rax],al
   140011b6c:	cdq    
   140011b6d:	xor    ax,WORD PTR [rax]
   140011b70:	cdq    
   140011b71:	xor    esp,DWORD PTR [rsi+0x0]
   140011b74:	cdq    
   140011b75:	cwd    
   140011b77:	add    BYTE PTR [rcx-0x66ff339a],bl
   140011b7d:	xor    edi,edi
   140011b7f:	add    BYTE PTR [rcx-0x66ffcc67],bl
   140011b85:	cdq    
   140011b86:	data16 add BYTE PTR [rcx-0x66ff6667],bl
   140011b8d:	cdq    
   140011b8e:	int3   
   140011b8f:	add    BYTE PTR [rcx-0x66ff0067],bl
   140011b95:	int3   
   140011b96:	add    BYTE PTR [rax],al
   140011b98:	cdq    
   140011b99:	int3   
   140011b9a:	xor    eax,DWORD PTR [rax]
   140011b9c:	data16 int3 
   140011b9e:	data16 add BYTE PTR [rcx-0x66ff6634],bl
   140011ba5:	int3   
   140011ba6:	int3   
   140011ba7:	add    BYTE PTR [rcx-0x66ff0034],bl
   140011bad:	inc    DWORD PTR [rax]
   140011baf:	add    BYTE PTR [rcx-0x66ffcc01],bl
   140011bb5:	int3   
   140011bb6:	data16 add BYTE PTR [rcx-0x66ff6601],bl
   140011bbd:	dec    esp
   140011bbf:	add    BYTE PTR [rcx-0x33ff0001],bl
   140011bc5:	add    BYTE PTR [rax],al
   140011bc7:	add    BYTE PTR [rcx-0x33ffcd00],bl
   140011bcd:	add    BYTE PTR [rsi+0x0],ah
   140011bd0:	int3   
   140011bd1:	add    BYTE PTR [rcx-0x33ff3400],bl
   140011bd7:	add    BYTE PTR [rcx-0x33ffffcd],bl
   140011bdd:	xor    esi,DWORD PTR [rbx]
   140011bdf:	add    ah,cl
   140011be1:	xor    esp,DWORD PTR [rsi+0x0]
   140011be4:	int3   
   140011be5:	xor    ebx,DWORD PTR [rcx-0x33cc3400]
   140011beb:	add    ah,cl
   140011bed:	xor    edi,edi
   140011bef:	add    ah,cl
   140011bf1:	data16 add BYTE PTR [rax],al
   140011bf4:	int3   
   140011bf5:	xor    ax,WORD PTR [rax]
   140011bf8:	cdq    
   140011bf9:	data16 data16 add ah,cl
   140011bfd:	cwd    
   140011bff:	add    ah,cl
   140011c01:	data16 int3 
   140011c03:	add    BYTE PTR [rcx-0x33ff009a],bl
   140011c09:	cdq    
   140011c0a:	add    BYTE PTR [rax],al
   140011c0c:	int3   
   140011c0d:	cdq    
   140011c0e:	xor    eax,DWORD PTR [rax]
   140011c10:	int3   
   140011c11:	cdq    
   140011c12:	data16 add ah,cl
   140011c15:	cdq    
   140011c16:	cdq    
   140011c17:	add    ah,cl
   140011c19:	cdq    
   140011c1a:	int3   
   140011c1b:	add    ah,cl
   140011c1d:	cdq    
   140011c1e:	inc    DWORD PTR [rax]
   140011c20:	int3   
   140011c21:	int3   
   140011c22:	add    BYTE PTR [rax],al
   140011c24:	int3   
   140011c25:	int3   
   140011c26:	xor    eax,DWORD PTR [rax]
   140011c28:	int3   
   140011c29:	int3   
   140011c2a:	data16 add ah,cl
   140011c2d:	int3   
   140011c2e:	cdq    
   140011c2f:	add    ah,cl
   140011c31:	int3   
   140011c32:	int3   
   140011c33:	add    ah,cl
   140011c35:	int3   
   140011c36:	inc    DWORD PTR [rax]
   140011c38:	int3   
   140011c39:	inc    DWORD PTR [rax]
   140011c3b:	add    ah,cl
   140011c3d:	push   QWORD PTR [rbx]
   140011c3f:	add    BYTE PTR [rcx-0x33ff9901],bl
   140011c45:	call   FWORD PTR [rcx-0x33003400]
   140011c4b:	add    ah,cl
   140011c4d:	(bad)  
   140011c4e:	inc    DWORD PTR [rax]
   140011c50:	int3   
   140011c51:	add    BYTE PTR [rbx],dh
   140011c53:	add    bh,bh
   140011c55:	add    BYTE PTR [rsi+0x0],ah
   140011c58:	inc    DWORD PTR [rax]
   140011c5a:	cdq    
   140011c5b:	add    ah,cl
   140011c5d:	xor    eax,DWORD PTR [rax]
   140011c5f:	add    bh,bh
   140011c61:	xor    esi,DWORD PTR [rbx]
   140011c63:	add    bh,bh
   140011c65:	xor    esp,DWORD PTR [rsi+0x0]
   140011c68:	push   QWORD PTR [rbx]
   140011c6a:	cdq    
   140011c6b:	add    bh,bh
   140011c6d:	xor    ecx,esp
   140011c6f:	add    bh,bh
   140011c71:	xor    edi,edi
   140011c73:	add    bh,bh
   140011c75:	data16 add BYTE PTR [rax],al
   140011c78:	jmp    QWORD PTR [rsi+0x33]
   140011c7b:	add    ah,cl
   140011c7d:	data16 data16 add bh,bh
   140011c81:	cwd    
   140011c83:	add    bh,bh
   140011c85:	data16 int3 
   140011c87:	add    ah,cl
   140011c89:	inc    WORD PTR [rax]
   140011c8c:	call   FWORD PTR [rcx-0x66010000]
   140011c92:	xor    eax,DWORD PTR [rax]
   140011c94:	call   FWORD PTR [rcx-0x6600ff9a]
   140011c9a:	cdq    
   140011c9b:	add    bh,bh
   140011c9d:	cdq    
   140011c9e:	int3   
   140011c9f:	add    bh,bh
   140011ca1:	cdq    
   140011ca2:	inc    DWORD PTR [rax]
   140011ca4:	dec    esp
   140011ca6:	add    BYTE PTR [rax],al
   140011ca8:	dec    esp
   140011caa:	xor    eax,DWORD PTR [rax]
   140011cac:	dec    esp
   140011cae:	data16 add bh,bh
   140011cb1:	int3   
   140011cb2:	cdq    
   140011cb3:	add    bh,bh
   140011cb5:	int3   
   140011cb6:	int3   
   140011cb7:	add    bh,bh
   140011cb9:	int3   
   140011cba:	inc    DWORD PTR [rax]
   140011cbc:	(bad)  
   140011cbd:	push   QWORD PTR [rbx]
   140011cbf:	add    ah,cl
   140011cc1:	jmp    QWORD PTR [rsi+0x0]
   140011cc4:	(bad)  
   140011cc5:	call   FWORD PTR [rcx-0x33000100]
   140011ccb:	add    BYTE PTR [rsi+0x66],ah
   140011cce:	inc    DWORD PTR [rax]
   140011cd0:	jmp    WORD PTR [rsi+0x0]
   140011cd4:	data16 (bad) 
   140011cd6:	inc    DWORD PTR [rax]
   140011cd8:	jmp    QWORD PTR [rsi+0x66]
   140011cdb:	add    bh,bh
   140011cdd:	inc    WORD PTR [rax]
   140011ce0:	(bad)  
   140011ce1:	jmp    QWORD PTR [rsi+0x0]
   140011ce4:	and    DWORD PTR [rax],eax
   140011ce6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011ce7:	add    BYTE PTR [rdi+0x5f],bl
   140011cea:	pop    rdi
   140011ceb:	add    BYTE PTR [rdi+0x77],dh
   140011cee:	ja     0x140011cf0
   140011cf0:	xchg   BYTE PTR [rsi-0x6969ff7a],al
   140011cf6:	xchg   esi,eax
   140011cf7:	add    bl,cl
   140011cf9:	retf   
   140011cfa:	retf   
   140011cfb:	add    BYTE PTR [rdx-0x28ff4d4e],dh
   140011d01:	xlat   BYTE PTR ds:[rbx]
   140011d02:	xlat   BYTE PTR ds:[rbx]
   140011d03:	add    ch,bl
   140011d05:	fstp   st(5)
   140011d07:	add    bl,ah
   140011d09:	jrcxz  0x140011cee
   140011d0b:	add    dl,ch
   140011d0d:	(bad)  
   140011d0e:	(bad)  
   140011d0f:	add    cl,dh
   140011d11:	icebp  
   140011d12:	icebp  
   140011d13:	add    al,bh
   140011d15:	clc    
   140011d16:	clc    
   140011d17:	add    al,dh
   140011d19:	sti    
   140011d1a:	inc    DWORD PTR [rax]
   140011d1c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011d1d:	movabs al,ds:0x80808000a0
   140011d26:	inc    DWORD PTR [rax]
   140011d28:	add    bh,bh
   140011d2a:	add    BYTE PTR [rax],al
   140011d2c:	add    bh,bh
   140011d2e:	inc    DWORD PTR [rax]
   140011d30:	inc    DWORD PTR [rax]
   140011d32:	add    BYTE PTR [rax],al
   140011d34:	inc    DWORD PTR [rax]
   140011d36:	inc    DWORD PTR [rax]
   140011d38:	(bad)  
   140011d39:	inc    DWORD PTR [rax]
   140011d3b:	add    bh,bh
   140011d3d:	(bad)  
   140011d3e:	inc    DWORD PTR [rax]
	...
   140011f64:	add    ah,ch
   140011f66:	add    BYTE PTR [rax],al
   140011f68:	add    BYTE PTR [rax],al
   140011f6a:	in     al,dx
	...
   140011fa3:	add    ah,ch
   140011fa5:	add    BYTE PTR [rax],al
   140011fa7:	add    BYTE PTR [rax],al
   140011fa9:	(bad)  
   140011faa:	(bad)  
   140011fab:	in     al,dx
	...
   140011fc0:	add    BYTE PTR [rax],al
   140011fc2:	in     al,dx
   140011fc3:	add    BYTE PTR [rax],al
   140011fc5:	add    BYTE PTR [rax],al
   140011fc7:	add    BYTE PTR [rax],al
   140011fc9:	add    dh,bh
   140011fcb:	(bad)  
   140011fcc:	add    ah,ch
	...
   140011fea:	add    dh,bh
	...
   140012044:	inc    BYTE PTR [rax]
	...
   140012062:	in     al,dx
   140012063:	add    dh,bh
   140012065:	inc    BYTE PTR [rax]
   140012067:	add    BYTE PTR [rax],al
   140012069:	add    BYTE PTR [rax],al
   14001206b:	add    BYTE PTR [rax],al
   14001206d:	in     al,dx
	...
   140012082:	add    BYTE PTR [rax],al
   140012084:	in     al,dx
   140012085:	(bad)  
   140012086:	inc    BYTE PTR [rax]
   140012088:	add    BYTE PTR [rax],al
   14001208a:	add    ah,ch
	...
   1400120c4:	add    ah,ch
   1400120c6:	add    BYTE PTR [rax],al
   1400120c8:	add    BYTE PTR [rax],al
   1400120ca:	in     al,dx
	...
   14001213f:	add    bh,bh
   140012141:	(bad)  
   140012142:	(bad)  
   140012143:	(bad)  
   140012144:	(bad)  
   140012145:	(bad)  
   140012146:	(bad)  
   140012147:	(bad)  
   140012148:	(bad)  
   140012149:	(bad)  
   14001214a:	(bad)  
   14001214b:	(bad)  
   14001214c:	(bad)  
   14001214d:	(bad)  
   14001214e:	(bad)  
   14001214f:	(bad)  
   140012150:	(bad)  
   140012151:	(bad)  
   140012152:	(bad)  
   140012153:	(bad)  
   140012154:	(bad)  
   140012155:	(bad)  
   140012156:	(bad)  
   140012157:	(bad)  
   140012158:	(bad)  
   140012159:	(bad)  
   14001215a:	(bad)  
   14001215b:	(bad)  
   14001215c:	(bad)  
   14001215d:	(bad)  
   14001215e:	(bad)  
   14001215f:	(bad)  
   140012160:	(bad)  
   140012161:	(bad)  
   140012162:	(bad)  
   140012163:	(bad)  
   140012164:	(bad)  
   140012165:	(bad)  
   140012166:	(bad)  
   140012167:	(bad)  
   140012168:	(bad)  
   140012169:	(bad)  
   14001216a:	(bad)  
   14001216b:	(bad)  
   14001216c:	(bad)  
   14001216d:	(bad)  
   14001216e:	(bad)  
   14001216f:	(bad)  
   140012170:	(bad)  
   140012171:	(bad)  
   140012172:	(bad)  
   140012173:	(bad)  
   140012174:	(bad)  
   140012175:	(bad)  
   140012176:	(bad)  
   140012177:	(bad)  
   140012178:	(bad)  
   140012179:	(bad)  
   14001217a:	jg     0x14001217b
   14001217c:	(bad)  
   14001217d:	cld    
   14001217e:	jg     0x14001217f
   140012180:	(bad)  
   140012181:	clc    
   140012182:	(bad)  
   140012183:	(bad)  
   140012184:	clc    
   140012185:	adc    edi,edi
   140012187:	push   rbx
   140012189:	ret    
   14001218a:	(bad)  
   14001218b:	jmp    rsi
   14001218d:	(bad)  
   14001218e:	(bad)  
   14001218f:	dec    esi
   140012191:	rex.XB (bad) 
   140012193:	(bad)  
   140012194:	fisubr WORD PTR [rbx-0x1]
   140012197:	call   rax
   140012199:	or     edi,edi
   14001219b:	call   rax
   14001219d:	or     edi,edi
   14001219f:	call   rsi
   1400121a1:	jnp    0x1400121a2
   1400121a3:	inc    edx
   1400121a5:	jae    0x1400121a6
   1400121a7:	jmp    rax
   1400121a9:	addr32 (bad) 
   1400121ab:	push   rbx
   1400121ad:	iret   
   1400121ae:	(bad)  
   1400121af:	(bad)  
   1400121b0:	clc    
   1400121b1:	(bad)  
   1400121b2:	(bad)  
   1400121b3:	(bad)  
   1400121b4:	(bad)  
   1400121b5:	(bad)  
   1400121b6:	(bad)  
   1400121b7:	(bad)  
   1400121b8:	(bad)  
   1400121b9:	(bad)  
   1400121ba:	(bad)  
   1400121bb:	(bad)  
   1400121bc:	(bad)  
   1400121bd:	(bad)  
   1400121be:	(bad)  
   1400121bf:	dec    DWORD PTR [rax]
   1400121c1:	add    BYTE PTR [rax],cl
   1400121c3:	add    BYTE PTR [rax],ch
   1400121c5:	add    BYTE PTR [rax],al
   1400121c7:	add    BYTE PTR [rax],ah
   1400121c9:	add    BYTE PTR [rax],al
   1400121cb:	add    BYTE PTR [rax+0x0],al
   1400121ce:	add    BYTE PTR [rax],al
   1400121d0:	add    DWORD PTR [rax],eax
   1400121d2:	add    DWORD PTR [rax],eax
   1400121d4:	add    BYTE PTR [rax],al
   1400121d6:	add    BYTE PTR [rax],al
   1400121d8:	add    BYTE PTR [rcx],al
	...
   1400121ee:	add    BYTE PTR [rax],al
   1400121f0:	(bad)  
   1400121f1:	(bad)  
   1400121f2:	inc    DWORD PTR [rax]
	...
   14001223c:	add    eax,eax
   14001223e:	add    BYTE PTR [rax],al
   140012240:	(bad)  
   140012241:	loopne 0x140012243
   140012243:	add    BYTE PTR [rdi],cl
   140012245:	lock add BYTE PTR [rax],al
   140012248:	(bad)  
   140012249:	clc    
   14001224a:	add    BYTE PTR [rax],al
   14001224c:	adc    BYTE PTR [rax],cl
   14001224e:	add    BYTE PTR [rax],al
   140012250:	adc    BYTE PTR [rax],cl
   140012252:	add    BYTE PTR [rax],al
   140012254:	(bad)  
   140012255:	clc    
   140012256:	add    BYTE PTR [rax],al
   140012258:	(bad)  
   14001225a:	add    BYTE PTR [rax],al
   14001225c:	(bad)  
   14001225d:	loopne 0x14001225f
   14001225f:	add    BYTE PTR [rbx],al
   140012261:	rol    BYTE PTR [rax],0x0
	...
   140012274:	(bad)  
   140012275:	(bad)  
   140012276:	(bad)  
   140012277:	(bad)  
   140012278:	(bad)  
   140012279:	(bad)  
   14001227a:	(bad)  
   14001227b:	(bad)  
   14001227c:	(bad)  
   14001227d:	(bad)  
   14001227e:	(bad)  
   14001227f:	(bad)  
   140012280:	(bad)  
   140012281:	(bad)  
   140012282:	(bad)  
   140012283:	(bad)  
   140012284:	(bad)  
   140012285:	(bad)  
   140012286:	(bad)  
   140012287:	(bad)  
   140012288:	(bad)  
   140012289:	(bad)  
   14001228a:	(bad)  
   14001228b:	(bad)  
   14001228c:	(bad)  
   14001228d:	(bad)  
   14001228e:	(bad)  
   14001228f:	(bad)  
   140012290:	(bad)  
   140012291:	(bad)  
   140012292:	(bad)  
   140012293:	(bad)  
   140012294:	(bad)  
   140012295:	(bad)  
   140012296:	(bad)  
   140012297:	(bad)  
   140012298:	(bad)  
   140012299:	(bad)  
   14001229a:	(bad)  
   14001229b:	(bad)  
   14001229c:	(bad)  
   14001229d:	(bad)  
   14001229e:	(bad)  
   14001229f:	(bad)  
   1400122a0:	(bad)  
   1400122a1:	(bad)  
   1400122a2:	(bad)  
   1400122a3:	(bad)  
   1400122a4:	(bad)  
   1400122a5:	(bad)  
   1400122a6:	(bad)  
   1400122a7:	(bad)  
   1400122a8:	(bad)  
   1400122a9:	(bad)  
   1400122aa:	(bad)  
   1400122ab:	(bad)  
   1400122ac:	(bad)  
   1400122ad:	(bad)  
   1400122ae:	jg     0x1400122af
   1400122b0:	(bad)  
   1400122b1:	cld    
   1400122b2:	jg     0x1400122b3
   1400122b4:	(bad)  
   1400122b5:	clc    
   1400122b6:	(bad)  
   1400122b7:	(bad)  
   1400122b8:	clc    
   1400122b9:	adc    edi,edi
   1400122bb:	push   rax
   1400122bd:	add    edi,edi
   1400122bf:	jmp    rax
   1400122c1:	(bad)  
   1400122c2:	(bad)  
   1400122c3:	inc    eax
   1400122c5:	add    edi,edi
   1400122c7:	inc    eax
   1400122c9:	add    edi,edi
   1400122cb:	inc    eax
   1400122cd:	add    edi,edi
   1400122cf:	inc    eax
   1400122d1:	add    edi,edi
   1400122d3:	inc    eax
   1400122d5:	add    edi,edi
   1400122d7:	inc    eax
   1400122d9:	add    edi,edi
   1400122db:	jmp    rax
   1400122dd:	(bad)  
   1400122de:	(bad)  
   1400122df:	push   rax
   1400122e1:	ud0    edi,edi
   1400122e4:	clc    
   1400122e5:	(bad)  
   1400122e6:	(bad)  
   1400122e7:	(bad)  
   1400122e8:	(bad)  
   1400122e9:	(bad)  
   1400122ea:	(bad)  
   1400122eb:	(bad)  
   1400122ec:	(bad)  
   1400122ed:	(bad)  
   1400122ee:	(bad)  
   1400122ef:	(bad)  
   1400122f0:	(bad)  
   1400122f1:	(bad)  
   1400122f2:	(bad)  
   1400122f3:	inc    DWORD PTR [rdi]
   1400122f5:	add    BYTE PTR [rax],cl
   1400122f7:	add    BYTE PTR [rax],ch
   1400122f9:	add    BYTE PTR [rax],al
   1400122fb:	add    BYTE PTR [rax],ah
   1400122fd:	add    BYTE PTR [rax],al
   1400122ff:	add    BYTE PTR [rax+0x0],al
   140012302:	add    BYTE PTR [rax],al
   140012304:	add    DWORD PTR [rax],eax
   140012306:	add    al,0x0
   140012308:	add    BYTE PTR [rax],al
   14001230a:	add    BYTE PTR [rax],al
   14001230c:	add    BYTE PTR [rdx],0x0
	...
   140012323:	add    BYTE PTR [rax],al
   140012325:	add    BYTE PTR [rax+0x800000],al
   14001232b:	add    BYTE PTR [rax],al
   14001232d:	add    BYTE PTR [rax+0x8000],0x0
   140012334:	add    BYTE PTR [rax],0x80
   140012337:	add    BYTE PTR [rax-0x3fffff80],al
   14001233d:	rol    al,0x0
   140012340:	add    BYTE PTR [rax+0x80],0xff
   140012347:	add    BYTE PTR [rax],al
   140012349:	inc    DWORD PTR [rax]
   14001234b:	add    BYTE PTR [rax],al
   14001234d:	(bad)  
   14001234e:	inc    DWORD PTR [rax]
   140012350:	inc    DWORD PTR [rax]
   140012352:	add    BYTE PTR [rax],al
   140012354:	inc    DWORD PTR [rax]
   140012356:	inc    DWORD PTR [rax]
   140012358:	(bad)  
   140012359:	inc    DWORD PTR [rax]
   14001235b:	add    bh,bh
   14001235d:	(bad)  
   14001235e:	inc    DWORD PTR [rax]
	...
   140012470:	add    BYTE PTR [rax],al
   140012472:	or     BYTE PTR [rax],al
   140012474:	add    BYTE PTR [rax+0x0],al
	...
   140012492:	add    BYTE PTR [rax],0xe
   140012495:	call   0x14001249a
   14001249a:	add    BYTE PTR [rax],al
   14001249c:	add    BYTE PTR [rax],al
   14001249e:	add    BYTE PTR [rax],al
   1400124a0:	add    BYTE PTR [rax-0x19000000],al
   1400124a6:	or     BYTE PTR [rax],al
	...
   1400124b4:	add    BYTE PTR [rsi],cl
	...
   1400124e2:	loopne 0x1400124e4
	...
   1400124f0:	add    BYTE PTR [rax+0xee],al
   1400124f6:	or     BYTE PTR [rax],al
	...
   140012500:	add    BYTE PTR [rax],al
   140012502:	mov    fs,eax
   140012504:	add    BYTE PTR [rax],cl
	...
   140012522:	or     BYTE PTR [rax],al
   140012524:	add    BYTE PTR [rax+0x0],al
	...
   14001255e:	add    BYTE PTR [rax],al
   140012560:	(bad)  
   140012561:	(bad)  
   140012562:	(bad)  
   140012563:	(bad)  
   140012564:	(bad)  
   140012565:	(bad)  
   140012566:	(bad)  
   140012567:	(bad)  
   140012568:	(bad)  
   140012569:	(bad)  
   14001256a:	(bad)  
   14001256b:	(bad)  
   14001256c:	(bad)  
   14001256d:	(bad)  
   14001256e:	(bad)  
   14001256f:	(bad)  
   140012570:	(bad)  
   140012571:	(bad)  
   140012572:	(bad)  
   140012573:	(bad)  
   140012574:	(bad)  
   140012575:	(bad)  
   140012576:	(bad)  
   140012577:	(bad)  
   140012578:	(bad)  
   140012579:	(bad)  
   14001257a:	(bad)  
   14001257b:	(bad)  
   14001257c:	(bad)  
   14001257d:	(bad)  
   14001257e:	(bad)  
   14001257f:	(bad)  
   140012580:	(bad)  
   140012581:	(bad)  
   140012582:	(bad)  
   140012583:	(bad)  
   140012584:	(bad)  
   140012585:	(bad)  
   140012586:	(bad)  
   140012587:	(bad)  
   140012588:	(bad)  
   140012589:	(bad)  
   14001258a:	(bad)  
   14001258b:	(bad)  
   14001258c:	(bad)  
   14001258d:	(bad)  
   14001258e:	(bad)  
   14001258f:	(bad)  
   140012590:	(bad)  
   140012591:	(bad)  
   140012592:	(bad)  
   140012593:	(bad)  
   140012594:	(bad)  
   140012595:	(bad)  
   140012596:	(bad)  
   140012597:	(bad)  
   140012598:	(bad)  
   140012599:	(bad)  
   14001259a:	jg     0x14001259b
   14001259c:	(bad)  
   14001259d:	cld    
   14001259e:	jg     0x14001259f
   1400125a0:	(bad)  
   1400125a1:	clc    
   1400125a2:	(bad)  
   1400125a3:	(bad)  
   1400125a4:	clc    
   1400125a5:	adc    edi,edi
   1400125a7:	push   rbx
   1400125a9:	ret    
   1400125aa:	(bad)  
   1400125ab:	jmp    rdi
   1400125ad:	xchg   edi,edi
   1400125af:	dec    edi
   1400125b1:	ret    
   1400125b2:	(bad)  
   1400125b3:	(bad)  
   1400125b4:	fucomip st,st(3)
   1400125b6:	(bad)  
   1400125b7:	call   rax
   1400125b9:	or     edi,edi
   1400125bb:	call   rax
   1400125bd:	or     edi,edi
   1400125bf:	call   rdi
   1400125c1:	sti    
   1400125c2:	(bad)  
   1400125c3:	inc    ebx
   1400125c5:	repz (bad) 
   1400125c7:	jmp    rcx
   1400125c9:	out    0xff,eax
   1400125cb:	push   rbx
   1400125cd:	iret   
   1400125ce:	(bad)  
   1400125cf:	(bad)  
   1400125d0:	clc    
   1400125d1:	(bad)  
   1400125d2:	(bad)  
   1400125d3:	(bad)  
   1400125d4:	(bad)  
   1400125d5:	(bad)  
   1400125d6:	(bad)  
   1400125d7:	(bad)  
   1400125d8:	(bad)  
   1400125d9:	(bad)  
   1400125da:	(bad)  
   1400125db:	(bad)  
   1400125dc:	(bad)  
   1400125dd:	(bad)  
   1400125de:	(bad)  
   1400125df:	dec    DWORD PTR [rax]
   1400125e1:	add    BYTE PTR [rax],cl
   1400125e3:	add    BYTE PTR [rax],ch
   1400125e5:	add    BYTE PTR [rax],al
   1400125e7:	add    BYTE PTR [rax],ah
   1400125e9:	add    BYTE PTR [rax],al
   1400125eb:	add    BYTE PTR [rax+0x0],al
   1400125ee:	add    BYTE PTR [rax],al
   1400125f0:	add    DWORD PTR [rax],eax
   1400125f2:	or     BYTE PTR [rax],al
   1400125f4:	add    BYTE PTR [rax],al
   1400125f6:	add    BYTE PTR [rax],al
   1400125f8:	add    BYTE PTR [rax+rax*1],0x0
	...
   140012610:	add    BYTE PTR [rax],al
   140012612:	add    BYTE PTR [rax],0x0
   140012615:	add    BYTE PTR [rax],0x0
   140012618:	add    BYTE PTR [rax+0x800080],al
   14001261e:	add    BYTE PTR [rax],al
   140012620:	add    BYTE PTR [rax],0x80
   140012623:	add    BYTE PTR [rax-0x3fffff80],al
   140012629:	rol    al,0x0
   14001262c:	rcr    ah,0xc0
   14001262f:	add    al,dh
   140012631:	retf   0xa6
   140012634:	add    al,0x4
   140012636:	add    al,0x0
   140012638:	or     BYTE PTR [rax],cl
   14001263a:	or     BYTE PTR [rax],al
   14001263c:	or     al,0xc
   14001263e:	or     al,0x0
   140012640:	adc    DWORD PTR [rcx],edx
   140012642:	adc    DWORD PTR [rax],eax
   140012644:	(bad)  
   140012645:	(bad)  
   140012646:	(bad)  
   140012647:	add    BYTE PTR [rsp+rbx*1],bl
   14001264a:	sbb    al,0x0
   14001264c:	and    ah,BYTE PTR [rdx]
   14001264e:	and    al,BYTE PTR [rax]
   140012650:	sub    DWORD PTR [rcx],ebp
   140012652:	sub    DWORD PTR [rax],eax
   140012654:	push   rbp
   140012655:	push   rbp
   140012656:	push   rbp
   140012657:	add    BYTE PTR [rbp+0x4d],cl
   14001265a:	rex.WRB add BYTE PTR [r10+0x42],r8b
   14001265e:	rex.X add BYTE PTR [rcx],dil
   140012661:	cmp    DWORD PTR [rcx],edi
   140012663:	add    BYTE PTR [rax+0x5000ff7c],al
   140012669:	push   rax
   14001266a:	inc    DWORD PTR [rax]
   14001266c:	xchg   ebx,eax
   14001266d:	add    dh,dl
   14001266f:	add    bh,bh
   140012671:	in     al,dx
   140012672:	int3   
   140012673:	add    dh,al
   140012675:	(bad)  
   140012676:	out    dx,eax
   140012677:	add    dh,dl
   140012679:	out    0xe7,eax
   14001267b:	add    BYTE PTR [rax+0xada9],dl
   140012681:	add    BYTE PTR [rbx],dh
   140012683:	add    BYTE PTR [rax],al
   140012685:	add    BYTE PTR [rsi+0x0],ah
   140012688:	add    BYTE PTR [rax],al
   14001268a:	cdq    
   14001268b:	add    BYTE PTR [rax],al
   14001268d:	add    ah,cl
   14001268f:	add    BYTE PTR [rax],al
   140012691:	xor    eax,DWORD PTR [rax]
   140012693:	add    BYTE PTR [rax],al
   140012695:	xor    esi,DWORD PTR [rbx]
   140012697:	add    BYTE PTR [rax],al
   140012699:	xor    esp,DWORD PTR [rsi+0x0]
   14001269c:	add    BYTE PTR [rbx],dh
   14001269e:	cdq    
   14001269f:	add    BYTE PTR [rax],al
   1400126a1:	xor    ecx,esp
   1400126a3:	add    BYTE PTR [rax],al
   1400126a5:	xor    edi,edi
   1400126a7:	add    BYTE PTR [rax],al
   1400126a9:	data16 add BYTE PTR [rax],al
   1400126ac:	add    BYTE PTR [rsi+0x33],ah
   1400126af:	add    BYTE PTR [rax],al
   1400126b1:	data16 data16 add BYTE PTR [rax],al
   1400126b5:	cwd    
   1400126b7:	add    BYTE PTR [rax],al
   1400126b9:	data16 int3 
   1400126bb:	add    BYTE PTR [rax],al
   1400126bd:	inc    WORD PTR [rax]
   1400126c0:	add    BYTE PTR [rcx-0x67000000],bl
   1400126c6:	xor    eax,DWORD PTR [rax]
   1400126c8:	add    BYTE PTR [rcx-0x66ffff9a],bl
   1400126ce:	cdq    
   1400126cf:	add    BYTE PTR [rax],al
   1400126d1:	cdq    
   1400126d2:	int3   
   1400126d3:	add    BYTE PTR [rax],al
   1400126d5:	cdq    
   1400126d6:	inc    DWORD PTR [rax]
   1400126d8:	add    ah,cl
   1400126da:	add    BYTE PTR [rax],al
   1400126dc:	add    ah,cl
   1400126de:	xor    eax,DWORD PTR [rax]
   1400126e0:	add    ah,cl
   1400126e2:	data16 add BYTE PTR [rax],al
   1400126e5:	int3   
   1400126e6:	cdq    
   1400126e7:	add    BYTE PTR [rax],al
   1400126e9:	int3   
   1400126ea:	int3   
   1400126eb:	add    BYTE PTR [rax],al
   1400126ed:	int3   
   1400126ee:	inc    DWORD PTR [rax]
   1400126f0:	add    bh,bh
   1400126f2:	data16 add BYTE PTR [rax],al
   1400126f5:	call   FWORD PTR [rcx-0x33010000]
   1400126fb:	add    BYTE PTR [rbx],dh
   1400126fd:	add    BYTE PTR [rax],al
   1400126ff:	add    BYTE PTR [rbx],dh
   140012701:	add    BYTE PTR [rbx],dh
   140012703:	add    BYTE PTR [rbx],dh
   140012705:	add    BYTE PTR [rsi+0x0],ah
   140012708:	xor    eax,DWORD PTR [rax]
   14001270a:	cdq    
   14001270b:	add    BYTE PTR [rbx],dh
   14001270d:	add    ah,cl
   14001270f:	add    BYTE PTR [rbx],dh
   140012711:	add    bh,bh
   140012713:	add    BYTE PTR [rbx],dh
   140012715:	xor    eax,DWORD PTR [rax]
   140012717:	add    BYTE PTR [rbx],dh
   140012719:	xor    esi,DWORD PTR [rbx]
   14001271b:	add    BYTE PTR [rbx],dh
   14001271d:	xor    esp,DWORD PTR [rsi+0x0]
   140012720:	xor    esi,DWORD PTR [rbx]
   140012722:	cdq    
   140012723:	add    BYTE PTR [rbx],dh
   140012725:	xor    ecx,esp
   140012727:	add    BYTE PTR [rbx],dh
   140012729:	xor    edi,edi
   14001272b:	add    BYTE PTR [rbx],dh
   14001272d:	data16 add BYTE PTR [rax],al
   140012730:	xor    esp,DWORD PTR [rsi+0x33]
   140012733:	add    BYTE PTR [rbx],dh
   140012735:	data16 data16 add BYTE PTR [rbx],dh
   140012739:	cwd    
   14001273b:	add    BYTE PTR [rbx],dh
   14001273d:	data16 int3 
   14001273f:	add    BYTE PTR [rbx],dh
   140012741:	inc    WORD PTR [rax]
   140012744:	xor    ebx,DWORD PTR [rcx-0x66cd0000]
   14001274a:	xor    eax,DWORD PTR [rax]
   14001274c:	xor    ebx,DWORD PTR [rcx-0x66ccff9a]
   140012752:	cdq    
   140012753:	add    BYTE PTR [rbx],dh
   140012755:	cdq    
   140012756:	int3   
   140012757:	add    BYTE PTR [rbx],dh
   140012759:	cdq    
   14001275a:	inc    DWORD PTR [rax]
   14001275c:	xor    ecx,esp
   14001275e:	add    BYTE PTR [rax],al
   140012760:	xor    ecx,esp
   140012762:	xor    eax,DWORD PTR [rax]
   140012764:	xor    ecx,esp
   140012766:	data16 add BYTE PTR [rbx],dh
   140012769:	int3   
   14001276a:	cdq    
   14001276b:	add    BYTE PTR [rbx],dh
   14001276d:	int3   
   14001276e:	int3   
   14001276f:	add    BYTE PTR [rbx],dh
   140012771:	int3   
   140012772:	inc    DWORD PTR [rax]
   140012774:	xor    edi,edi
   140012776:	xor    eax,DWORD PTR [rax]
   140012778:	xor    edi,edi
   14001277a:	data16 add BYTE PTR [rbx],dh
   14001277d:	call   FWORD PTR [rcx-0x3300cd00]
   140012783:	add    BYTE PTR [rbx],dh
   140012785:	(bad)  
   140012786:	inc    DWORD PTR [rax]
   140012788:	data16 add BYTE PTR [rax],al
   14001278b:	add    BYTE PTR [rsi+0x0],ah
   14001278e:	xor    eax,DWORD PTR [rax]
   140012790:	data16 add BYTE PTR [rsi+0x0],ah
   140012794:	data16 add BYTE PTR [rcx-0x33ff9a00],bl
   14001279b:	add    BYTE PTR [rsi+0x0],ah
   14001279e:	inc    DWORD PTR [rax]
   1400127a0:	xor    ax,WORD PTR [rax]
   1400127a3:	add    BYTE PTR [rsi+0x33],ah
   1400127a6:	xor    eax,DWORD PTR [rax]
   1400127a8:	xor    sp,WORD PTR [rsi+0x0]
   1400127ac:	xor    bx,WORD PTR [rcx-0x33cc9a00]
   1400127b3:	add    BYTE PTR [rsi+0x33],ah
   1400127b6:	inc    DWORD PTR [rax]
   1400127b8:	data16 data16 add BYTE PTR [rax],al
   1400127bc:	data16 xor ax,WORD PTR [rax]
   1400127c0:	data16 data16 data16 add BYTE PTR [rsi+0x66],ah
   1400127c6:	cdq    
   1400127c7:	add    BYTE PTR [rsi+0x66],ah
   1400127ca:	int3   
   1400127cb:	add    BYTE PTR [rsi-0x67],ah
   1400127ce:	add    BYTE PTR [rax],al
   1400127d0:	cwd    
   1400127d2:	xor    eax,DWORD PTR [rax]
   1400127d4:	cwd    
   1400127d6:	data16 add BYTE PTR [rsi-0x67],ah
   1400127da:	cdq    
   1400127db:	add    BYTE PTR [rsi-0x67],ah
   1400127de:	int3   
   1400127df:	add    BYTE PTR [rsi-0x67],ah
   1400127e2:	inc    DWORD PTR [rax]
   1400127e4:	data16 int3 
   1400127e6:	add    BYTE PTR [rax],al
   1400127e8:	data16 int3 
   1400127ea:	xor    eax,DWORD PTR [rax]
   1400127ec:	data16 int3 
   1400127ee:	cdq    
   1400127ef:	add    BYTE PTR [rsi-0x34],ah
   1400127f2:	int3   
   1400127f3:	add    BYTE PTR [rsi-0x34],ah
   1400127f6:	inc    DWORD PTR [rax]
   1400127f8:	inc    WORD PTR [rax]
   1400127fb:	add    BYTE PTR [rsi-0x1],ah
   1400127fe:	xor    eax,DWORD PTR [rax]
   140012800:	call   DWORD PTR [rcx-0x33009a00]
   140012807:	add    ah,cl
   140012809:	add    bh,bh
   14001280b:	add    bh,bh
   14001280d:	add    ah,cl
   14001280f:	add    BYTE PTR [rcx-0x66ffff67],bl
   140012815:	xor    ebx,DWORD PTR [rcx-0x66ff6700]
   14001281b:	add    BYTE PTR [rcx-0x66ff3400],bl
   140012821:	add    BYTE PTR [rax],al
   140012823:	add    BYTE PTR [rcx-0x66ffcccd],bl
   140012829:	add    BYTE PTR [rsi+0x0],ah
   14001282c:	cdq    
   14001282d:	xor    ecx,esp
   14001282f:	add    BYTE PTR [rcx-0x66ff0100],bl
   140012835:	data16 add BYTE PTR [rax],al
   140012838:	cdq    
   140012839:	xor    ax,WORD PTR [rax]
   14001283c:	cdq    
   14001283d:	xor    esp,DWORD PTR [rsi+0x0]
   140012840:	cdq    
   140012841:	cwd    
   140012843:	add    BYTE PTR [rcx-0x66ff339a],bl
   140012849:	xor    edi,edi
   14001284b:	add    BYTE PTR [rcx-0x66ffcc67],bl
   140012851:	cdq    
   140012852:	data16 add BYTE PTR [rcx-0x66ff6667],bl
   140012859:	cdq    
   14001285a:	int3   
   14001285b:	add    BYTE PTR [rcx-0x66ff0067],bl
   140012861:	int3   
   140012862:	add    BYTE PTR [rax],al
   140012864:	cdq    
   140012865:	int3   
   140012866:	xor    eax,DWORD PTR [rax]
   140012868:	data16 int3 
   14001286a:	data16 add BYTE PTR [rcx-0x66ff6634],bl
   140012871:	int3   
   140012872:	int3   
   140012873:	add    BYTE PTR [rcx-0x66ff0034],bl
   140012879:	inc    DWORD PTR [rax]
   14001287b:	add    BYTE PTR [rcx-0x66ffcc01],bl
   140012881:	int3   
   140012882:	data16 add BYTE PTR [rcx-0x66ff6601],bl
   140012889:	dec    esp
   14001288b:	add    BYTE PTR [rcx-0x33ff0001],bl
   140012891:	add    BYTE PTR [rax],al
   140012893:	add    BYTE PTR [rcx-0x33ffcd00],bl
   140012899:	add    BYTE PTR [rsi+0x0],ah
   14001289c:	int3   
   14001289d:	add    BYTE PTR [rcx-0x33ff3400],bl
   1400128a3:	add    BYTE PTR [rcx-0x33ffffcd],bl
   1400128a9:	xor    esi,DWORD PTR [rbx]
   1400128ab:	add    ah,cl
   1400128ad:	xor    esp,DWORD PTR [rsi+0x0]
   1400128b0:	int3   
   1400128b1:	xor    ebx,DWORD PTR [rcx-0x33cc3400]
   1400128b7:	add    ah,cl
   1400128b9:	xor    edi,edi
   1400128bb:	add    ah,cl
   1400128bd:	data16 add BYTE PTR [rax],al
   1400128c0:	int3   
   1400128c1:	xor    ax,WORD PTR [rax]
   1400128c4:	cdq    
   1400128c5:	data16 data16 add ah,cl
   1400128c9:	cwd    
   1400128cb:	add    ah,cl
   1400128cd:	data16 int3 
   1400128cf:	add    BYTE PTR [rcx-0x33ff009a],bl
   1400128d5:	cdq    
   1400128d6:	add    BYTE PTR [rax],al
   1400128d8:	int3   
   1400128d9:	cdq    
   1400128da:	xor    eax,DWORD PTR [rax]
   1400128dc:	int3   
   1400128dd:	cdq    
   1400128de:	data16 add ah,cl
   1400128e1:	cdq    
   1400128e2:	cdq    
   1400128e3:	add    ah,cl
   1400128e5:	cdq    
   1400128e6:	int3   
   1400128e7:	add    ah,cl
   1400128e9:	cdq    
   1400128ea:	inc    DWORD PTR [rax]
   1400128ec:	int3   
   1400128ed:	int3   
   1400128ee:	add    BYTE PTR [rax],al
   1400128f0:	int3   
   1400128f1:	int3   
   1400128f2:	xor    eax,DWORD PTR [rax]
   1400128f4:	int3   
   1400128f5:	int3   
   1400128f6:	data16 add ah,cl
   1400128f9:	int3   
   1400128fa:	cdq    
   1400128fb:	add    ah,cl
   1400128fd:	int3   
   1400128fe:	int3   
   1400128ff:	add    ah,cl
   140012901:	int3   
   140012902:	inc    DWORD PTR [rax]
   140012904:	int3   
   140012905:	inc    DWORD PTR [rax]
   140012907:	add    ah,cl
   140012909:	push   QWORD PTR [rbx]
   14001290b:	add    BYTE PTR [rcx-0x33ff9901],bl
   140012911:	call   FWORD PTR [rcx-0x33003400]
   140012917:	add    ah,cl
   140012919:	(bad)  
   14001291a:	inc    DWORD PTR [rax]
   14001291c:	int3   
   14001291d:	add    BYTE PTR [rbx],dh
   14001291f:	add    bh,bh
   140012921:	add    BYTE PTR [rsi+0x0],ah
   140012924:	inc    DWORD PTR [rax]
   140012926:	cdq    
   140012927:	add    ah,cl
   140012929:	xor    eax,DWORD PTR [rax]
   14001292b:	add    bh,bh
   14001292d:	xor    esi,DWORD PTR [rbx]
   14001292f:	add    bh,bh
   140012931:	xor    esp,DWORD PTR [rsi+0x0]
   140012934:	push   QWORD PTR [rbx]
   140012936:	cdq    
   140012937:	add    bh,bh
   140012939:	xor    ecx,esp
   14001293b:	add    bh,bh
   14001293d:	xor    edi,edi
   14001293f:	add    bh,bh
   140012941:	data16 add BYTE PTR [rax],al
   140012944:	jmp    QWORD PTR [rsi+0x33]
   140012947:	add    ah,cl
   140012949:	data16 data16 add bh,bh
   14001294d:	cwd    
   14001294f:	add    bh,bh
   140012951:	data16 int3 
   140012953:	add    ah,cl
   140012955:	inc    WORD PTR [rax]
   140012958:	call   FWORD PTR [rcx-0x66010000]
   14001295e:	xor    eax,DWORD PTR [rax]
   140012960:	call   FWORD PTR [rcx-0x6600ff9a]
   140012966:	cdq    
   140012967:	add    bh,bh
   140012969:	cdq    
   14001296a:	int3   
   14001296b:	add    bh,bh
   14001296d:	cdq    
   14001296e:	inc    DWORD PTR [rax]
   140012970:	dec    esp
   140012972:	add    BYTE PTR [rax],al
   140012974:	dec    esp
   140012976:	xor    eax,DWORD PTR [rax]
   140012978:	dec    esp
   14001297a:	data16 add bh,bh
   14001297d:	int3   
   14001297e:	cdq    
   14001297f:	add    bh,bh
   140012981:	int3   
   140012982:	int3   
   140012983:	add    bh,bh
   140012985:	int3   
   140012986:	inc    DWORD PTR [rax]
   140012988:	(bad)  
   140012989:	push   QWORD PTR [rbx]
   14001298b:	add    ah,cl
   14001298d:	jmp    QWORD PTR [rsi+0x0]
   140012990:	(bad)  
   140012991:	call   FWORD PTR [rcx-0x33000100]
   140012997:	add    BYTE PTR [rsi+0x66],ah
   14001299a:	inc    DWORD PTR [rax]
   14001299c:	jmp    WORD PTR [rsi+0x0]
   1400129a0:	data16 (bad) 
   1400129a2:	inc    DWORD PTR [rax]
   1400129a4:	jmp    QWORD PTR [rsi+0x66]
   1400129a7:	add    bh,bh
   1400129a9:	inc    WORD PTR [rax]
   1400129ac:	(bad)  
   1400129ad:	jmp    QWORD PTR [rsi+0x0]
   1400129b0:	and    DWORD PTR [rax],eax
   1400129b2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400129b3:	add    BYTE PTR [rdi+0x5f],bl
   1400129b6:	pop    rdi
   1400129b7:	add    BYTE PTR [rdi+0x77],dh
   1400129ba:	ja     0x1400129bc
   1400129bc:	xchg   BYTE PTR [rsi-0x6969ff7a],al
   1400129c2:	xchg   esi,eax
   1400129c3:	add    bl,cl
   1400129c5:	retf   
   1400129c6:	retf   
   1400129c7:	add    BYTE PTR [rdx-0x28ff4d4e],dh
   1400129cd:	xlat   BYTE PTR ds:[rbx]
   1400129ce:	xlat   BYTE PTR ds:[rbx]
   1400129cf:	add    ch,bl
   1400129d1:	fstp   st(5)
   1400129d3:	add    bl,ah
   1400129d5:	jrcxz  0x1400129ba
   1400129d7:	add    dl,ch
   1400129d9:	(bad)  
   1400129da:	(bad)  
   1400129db:	add    cl,dh
   1400129dd:	icebp  
   1400129de:	icebp  
   1400129df:	add    al,bh
   1400129e1:	clc    
   1400129e2:	clc    
   1400129e3:	add    al,dh
   1400129e5:	sti    
   1400129e6:	inc    DWORD PTR [rax]
   1400129e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400129e9:	movabs al,ds:0x80808000a0
   1400129f2:	inc    DWORD PTR [rax]
   1400129f4:	add    bh,bh
   1400129f6:	add    BYTE PTR [rax],al
   1400129f8:	add    bh,bh
   1400129fa:	inc    DWORD PTR [rax]
   1400129fc:	inc    DWORD PTR [rax]
   1400129fe:	add    BYTE PTR [rax],al
   140012a00:	inc    DWORD PTR [rax]
   140012a02:	inc    DWORD PTR [rax]
   140012a04:	(bad)  
   140012a05:	inc    DWORD PTR [rax]
   140012a07:	add    bh,bh
   140012a09:	(bad)  
   140012a0a:	inc    DWORD PTR [rax]
	...
   140012c30:	add    ah,ch
   140012c32:	add    BYTE PTR [rax],al
   140012c34:	add    BYTE PTR [rax],al
   140012c36:	in     al,dx
	...
   140012c6f:	add    ah,ch
   140012c71:	add    BYTE PTR [rax],al
   140012c73:	add    BYTE PTR [rax],al
   140012c75:	(bad)  
   140012c76:	(bad)  
   140012c77:	in     al,dx
	...
   140012c8c:	add    BYTE PTR [rax],al
   140012c8e:	in     al,dx
   140012c8f:	add    BYTE PTR [rax],al
   140012c91:	add    BYTE PTR [rax],al
   140012c93:	add    BYTE PTR [rax],al
   140012c95:	add    dh,bh
   140012c97:	(bad)  
   140012c98:	add    ah,ch
	...
   140012cb6:	add    dh,bh
	...
   140012d10:	inc    BYTE PTR [rax]
	...
   140012d2e:	in     al,dx
   140012d2f:	add    dh,bh
   140012d31:	inc    BYTE PTR [rax]
   140012d33:	add    BYTE PTR [rax],al
   140012d35:	add    BYTE PTR [rax],al
   140012d37:	add    BYTE PTR [rax],al
   140012d39:	in     al,dx
	...
   140012d4e:	add    BYTE PTR [rax],al
   140012d50:	in     al,dx
   140012d51:	(bad)  
   140012d52:	inc    BYTE PTR [rax]
   140012d54:	add    BYTE PTR [rax],al
   140012d56:	add    ah,ch
	...
   140012d90:	add    ah,ch
   140012d92:	add    BYTE PTR [rax],al
   140012d94:	add    BYTE PTR [rax],al
   140012d96:	in     al,dx
	...
   140012e0b:	add    bh,bh
   140012e0d:	(bad)  
   140012e0e:	(bad)  
   140012e0f:	(bad)  
   140012e10:	(bad)  
   140012e11:	(bad)  
   140012e12:	(bad)  
   140012e13:	(bad)  
   140012e14:	(bad)  
   140012e15:	(bad)  
   140012e16:	(bad)  
   140012e17:	(bad)  
   140012e18:	(bad)  
   140012e19:	(bad)  
   140012e1a:	(bad)  
   140012e1b:	(bad)  
   140012e1c:	(bad)  
   140012e1d:	(bad)  
   140012e1e:	(bad)  
   140012e1f:	(bad)  
   140012e20:	(bad)  
   140012e21:	(bad)  
   140012e22:	(bad)  
   140012e23:	(bad)  
   140012e24:	(bad)  
   140012e25:	(bad)  
   140012e26:	(bad)  
   140012e27:	(bad)  
   140012e28:	(bad)  
   140012e29:	(bad)  
   140012e2a:	(bad)  
   140012e2b:	(bad)  
   140012e2c:	(bad)  
   140012e2d:	(bad)  
   140012e2e:	(bad)  
   140012e2f:	(bad)  
   140012e30:	(bad)  
   140012e31:	(bad)  
   140012e32:	(bad)  
   140012e33:	(bad)  
   140012e34:	(bad)  
   140012e35:	(bad)  
   140012e36:	(bad)  
   140012e37:	(bad)  
   140012e38:	(bad)  
   140012e39:	(bad)  
   140012e3a:	(bad)  
   140012e3b:	(bad)  
   140012e3c:	(bad)  
   140012e3d:	(bad)  
   140012e3e:	(bad)  
   140012e3f:	(bad)  
   140012e40:	(bad)  
   140012e41:	(bad)  
   140012e42:	(bad)  
   140012e43:	(bad)  
   140012e44:	(bad)  
   140012e45:	(bad)  
   140012e46:	jg     0x140012e47
   140012e48:	(bad)  
   140012e49:	cld    
   140012e4a:	jg     0x140012e4b
   140012e4c:	(bad)  
   140012e4d:	clc    
   140012e4e:	(bad)  
   140012e4f:	(bad)  
   140012e50:	clc    
   140012e51:	adc    edi,edi
   140012e53:	push   rbx
   140012e55:	ret    
   140012e56:	(bad)  
   140012e57:	jmp    rdi
   140012e59:	xchg   edi,edi
   140012e5b:	dec    edi
   140012e5d:	ret    
   140012e5e:	(bad)  
   140012e5f:	(bad)  
   140012e60:	fucomip st,st(3)
   140012e62:	(bad)  
   140012e63:	call   rax
   140012e65:	or     edi,edi
   140012e67:	call   rax
   140012e69:	or     edi,edi
   140012e6b:	call   rdi
   140012e6d:	sti    
   140012e6e:	(bad)  
   140012e6f:	inc    ebx
   140012e71:	repz (bad) 
   140012e73:	jmp    rcx
   140012e75:	out    0xff,eax
   140012e77:	push   rbx
   140012e79:	iret   
   140012e7a:	(bad)  
   140012e7b:	(bad)  
   140012e7c:	clc    
   140012e7d:	(bad)  
   140012e7e:	(bad)  
   140012e7f:	(bad)  
   140012e80:	(bad)  
   140012e81:	(bad)  
   140012e82:	(bad)  
   140012e83:	(bad)  
   140012e84:	(bad)  
   140012e85:	(bad)  
   140012e86:	(bad)  
   140012e87:	(bad)  
   140012e88:	(bad)  
   140012e89:	(bad)  
   140012e8a:	(bad)  
   140012e8b:	jmp    FWORD PTR [rax]
   140012e8d:	add    BYTE PTR [rax],al
   140012e8f:	add    BYTE PTR [rdi],al
   140012e91:	add    BYTE PTR [rax],al
   140012e93:	add    BYTE PTR [rdi],al
   140012e95:	add    BYTE PTR [rax],al
   140012e97:	add    BYTE PTR [rcx],al
   140012e99:	add    BYTE PTR [rax+rax*1],al
   140012e9c:	add    BYTE PTR [rax],al
   140012e9e:	add    BYTE PTR [rax],al
   140012ea0:	sbb    al,0x0
	...
   140012eae:	add    BYTE PTR [rax],al
   140012eb0:	adc    BYTE PTR [rax],al
	...
   140012eba:	add    BYTE PTR [rax],0x0
   140012ebd:	add    BYTE PTR [rax],0x0
   140012ec0:	add    BYTE PTR [rax+0x800080],al
   140012ec6:	add    BYTE PTR [rax],al
   140012ec8:	add    BYTE PTR [rax],0x80
   140012ecb:	add    BYTE PTR [rax-0x7fffff80],al
   140012ed1:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140012ed8:	add    BYTE PTR [rax],al
   140012eda:	inc    DWORD PTR [rax]
   140012edc:	add    bh,bh
   140012ede:	add    BYTE PTR [rax],al
   140012ee0:	add    bh,bh
   140012ee2:	inc    DWORD PTR [rax]
   140012ee4:	inc    DWORD PTR [rax]
   140012ee6:	add    BYTE PTR [rax],al
   140012ee8:	inc    DWORD PTR [rax]
   140012eea:	inc    DWORD PTR [rax]
   140012eec:	(bad)  
   140012eed:	inc    DWORD PTR [rax]
   140012eef:	add    bh,bh
   140012ef1:	(bad)  
   140012ef2:	inc    DWORD PTR [rax]
   140012ef4:	push   rax
   140012ef6:	push   rsp
   140012ef8:	inc    DWORD PTR [rax]
   140012efa:	pmuludq mm6,mm0
   140012efd:	add    BYTE PTR [rax],al
   140012eff:	div    al
   140012f01:	add    BYTE PTR [rax],al
   140012f03:	lock add BYTE PTR [rax],al
	...
   140012f0e:	add    BYTE PTR [rax],al
   140012f10:	sub    BYTE PTR [rax],al
   140012f12:	add    BYTE PTR [rax],al
   140012f14:	add    BYTE PTR [rcx],al
   140012f16:	add    BYTE PTR [rax],al
   140012f18:	adc    BYTE PTR [rax],al
   140012f1a:	add    BYTE PTR [rax],al
   140012f1c:	add    DWORD PTR [rax],eax
   140012f1e:	or     BYTE PTR [rax],al
   140012f20:	add    BYTE PTR [rax],al
   140012f22:	add    BYTE PTR [rax],al
   140012f24:	add    BYTE PTR [rax],dl
   140012f26:	add    BYTE PTR [rax],al
   140012f28:	(bad)  
   140012f29:	(bad)  
   140012f2a:	add    BYTE PTR [rax],al
   140012f2c:	(bad)  
   140012f2d:	(bad)  
	...
   140012f3e:	add    BYTE PTR [rax],0x0
   140012f41:	add    BYTE PTR [rax],0x0
   140012f44:	add    BYTE PTR [rax+0x800080],al
   140012f4a:	add    BYTE PTR [rax],al
   140012f4c:	add    BYTE PTR [rax],0x80
   140012f4f:	add    BYTE PTR [rax-0x3fffff80],al
   140012f55:	rol    al,0x0
   140012f58:	rcr    ah,0xc0
   140012f5b:	add    al,dh
   140012f5d:	retf   0xa6
   140012f60:	lock sti 
   140012f62:	inc    DWORD PTR [rax]
   140012f64:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012f65:	movabs al,ds:0x80808000a0
   140012f6e:	inc    DWORD PTR [rax]
   140012f70:	add    bh,bh
   140012f72:	add    BYTE PTR [rax],al
   140012f74:	add    bh,bh
   140012f76:	inc    DWORD PTR [rax]
   140012f78:	inc    DWORD PTR [rax]
   140012f7a:	add    BYTE PTR [rax],al
   140012f7c:	inc    DWORD PTR [rax]
   140012f7e:	inc    DWORD PTR [rax]
   140012f80:	(bad)  
   140012f81:	inc    DWORD PTR [rax]
   140012f83:	add    bh,bh
   140012f85:	(bad)  
   140012f86:	inc    DWORD PTR [rax]
   140012f88:	add    BYTE PTR [rax],al
   140012f8a:	add    BYTE PTR [rax],al
   140012f8c:	add    BYTE PTR [rax],al
   140012f8e:	add    BYTE PTR [rax],0x0
   140012f91:	add    BYTE PTR [rax],0x0
   140012f94:	add    BYTE PTR [rax+0x800080],al
   140012f9a:	add    BYTE PTR [rax],al
   140012f9c:	add    BYTE PTR [rax],0x80
   140012f9f:	add    BYTE PTR [rax-0x3fffff80],al
   140012fa5:	rol    al,0x0
   140012fa8:	rcr    ah,0xc0
   140012fab:	add    al,dh
   140012fad:	retf   0xa6
   140012fb0:	lock sti 
   140012fb2:	inc    DWORD PTR [rax]
   140012fb4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012fb5:	movabs al,ds:0x80808000a0
   140012fbe:	inc    DWORD PTR [rax]
   140012fc0:	add    bh,bh
   140012fc2:	add    BYTE PTR [rax],al
   140012fc4:	add    bh,bh
   140012fc6:	inc    DWORD PTR [rax]
   140012fc8:	inc    DWORD PTR [rax]
   140012fca:	add    BYTE PTR [rax],al
   140012fcc:	inc    DWORD PTR [rax]
   140012fce:	inc    DWORD PTR [rax]
   140012fd0:	(bad)  
   140012fd1:	inc    DWORD PTR [rax]
   140012fd3:	add    bh,bh
   140012fd5:	(bad)  
   140012fd6:	inc    DWORD PTR [rax]
   140012fd8:	add    BYTE PTR [rax],al
   140012fda:	add    BYTE PTR [rax],al
   140012fdc:	add    BYTE PTR [rax],al
   140012fde:	add    BYTE PTR [rax],0x0
   140012fe1:	add    BYTE PTR [rax],0x0
   140012fe4:	add    BYTE PTR [rax+0x800080],al
   140012fea:	add    BYTE PTR [rax],al
   140012fec:	add    BYTE PTR [rax],0x80
   140012fef:	add    BYTE PTR [rax-0x3fffff80],al
   140012ff5:	rol    al,0x0
   140012ff8:	rcr    ah,0xc0
   140012ffb:	add    al,dh
   140012ffd:	retf   0xa6
   140013000:	lock sti 
   140013002:	inc    DWORD PTR [rax]
   140013004:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013005:	movabs al,ds:0x80808000a0
   14001300e:	inc    DWORD PTR [rax]
   140013010:	add    bh,bh
   140013012:	add    BYTE PTR [rax],al
   140013014:	add    bh,bh
   140013016:	inc    DWORD PTR [rax]
   140013018:	inc    DWORD PTR [rax]
   14001301a:	add    BYTE PTR [rax],al
   14001301c:	inc    DWORD PTR [rax]
   14001301e:	inc    DWORD PTR [rax]
   140013020:	(bad)  
   140013021:	inc    DWORD PTR [rax]
   140013023:	add    bh,bh
   140013025:	(bad)  
   140013026:	inc    DWORD PTR [rax]
   140013028:	add    BYTE PTR [rax],al
   14001302a:	add    BYTE PTR [rax],al
   14001302c:	add    BYTE PTR [rax],al
   14001302e:	add    BYTE PTR [rax],0x0
   140013031:	add    BYTE PTR [rax],0x0
   140013034:	add    BYTE PTR [rax+0x800080],al
   14001303a:	add    BYTE PTR [rax],al
   14001303c:	add    BYTE PTR [rax],0x80
   14001303f:	add    BYTE PTR [rax-0x3fffff80],al
   140013045:	rol    al,0x0
   140013048:	rcr    ah,0xc0
   14001304b:	add    al,dh
   14001304d:	retf   0xa6
   140013050:	lock sti 
   140013052:	inc    DWORD PTR [rax]
   140013054:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013055:	movabs al,ds:0x80808000a0
   14001305e:	inc    DWORD PTR [rax]
   140013060:	add    bh,bh
   140013062:	add    BYTE PTR [rax],al
   140013064:	add    bh,bh
   140013066:	inc    DWORD PTR [rax]
   140013068:	inc    DWORD PTR [rax]
   14001306a:	add    BYTE PTR [rax],al
   14001306c:	inc    DWORD PTR [rax]
   14001306e:	inc    DWORD PTR [rax]
   140013070:	(bad)  
   140013071:	inc    DWORD PTR [rax]
   140013073:	add    bh,bh
   140013075:	(bad)  
   140013076:	inc    DWORD PTR [rax]
   140013078:	add    BYTE PTR [rax],al
   14001307a:	add    BYTE PTR [rax],al
   14001307c:	add    BYTE PTR [rax],al
   14001307e:	add    BYTE PTR [rax],0x0
   140013081:	add    BYTE PTR [rax],0x0
   140013084:	add    BYTE PTR [rax+0x800080],al
   14001308a:	add    BYTE PTR [rax],al
   14001308c:	add    BYTE PTR [rax],0x80
   14001308f:	add    BYTE PTR [rax-0x3fffff80],al
   140013095:	rol    al,0x0
   140013098:	rcr    ah,0xc0
   14001309b:	add    al,dh
   14001309d:	retf   0xa6
   1400130a0:	lock sti 
   1400130a2:	inc    DWORD PTR [rax]
   1400130a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400130a5:	movabs al,ds:0x80808000a0
   1400130ae:	inc    DWORD PTR [rax]
   1400130b0:	add    bh,bh
   1400130b2:	add    BYTE PTR [rax],al
   1400130b4:	add    bh,bh
   1400130b6:	inc    DWORD PTR [rax]
   1400130b8:	inc    DWORD PTR [rax]
   1400130ba:	add    BYTE PTR [rax],al
   1400130bc:	inc    DWORD PTR [rax]
   1400130be:	inc    DWORD PTR [rax]
   1400130c0:	(bad)  
   1400130c1:	inc    DWORD PTR [rax]
   1400130c3:	add    bh,bh
   1400130c5:	(bad)  
   1400130c6:	inc    DWORD PTR [rax]
   1400130c8:	add    BYTE PTR [rax],al
   1400130ca:	add    BYTE PTR [rax],al
   1400130cc:	add    BYTE PTR [rax],al
   1400130ce:	add    BYTE PTR [rax],0x0
   1400130d1:	add    BYTE PTR [rax],0x0
   1400130d4:	add    BYTE PTR [rax+0x800080],al
   1400130da:	add    BYTE PTR [rax],al
   1400130dc:	add    BYTE PTR [rax],0x80
   1400130df:	add    BYTE PTR [rax-0x3fffff80],al
   1400130e5:	rol    al,0x0
   1400130e8:	rcr    ah,0xc0
   1400130eb:	add    al,dh
   1400130ed:	retf   0xa6
   1400130f0:	lock sti 
   1400130f2:	inc    DWORD PTR [rax]
   1400130f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400130f5:	movabs al,ds:0x80808000a0
   1400130fe:	inc    DWORD PTR [rax]
   140013100:	add    bh,bh
   140013102:	add    BYTE PTR [rax],al
   140013104:	add    bh,bh
   140013106:	inc    DWORD PTR [rax]
   140013108:	inc    DWORD PTR [rax]
   14001310a:	add    BYTE PTR [rax],al
   14001310c:	inc    DWORD PTR [rax]
   14001310e:	inc    DWORD PTR [rax]
   140013110:	(bad)  
   140013111:	inc    DWORD PTR [rax]
   140013113:	add    bh,bh
   140013115:	(bad)  
   140013116:	inc    DWORD PTR [rax]
   140013118:	add    BYTE PTR [rax],al
   14001311a:	add    BYTE PTR [rax],al
   14001311c:	add    BYTE PTR [rax],al
   14001311e:	add    BYTE PTR [rax],0x0
   140013121:	add    BYTE PTR [rax],0x0
   140013124:	add    BYTE PTR [rax+0x800080],al
   14001312a:	add    BYTE PTR [rax],al
   14001312c:	add    BYTE PTR [rax],0x80
   14001312f:	add    BYTE PTR [rax-0x3fffff80],al
   140013135:	rol    al,0x0
   140013138:	rcr    ah,0xc0
   14001313b:	add    al,dh
   14001313d:	retf   0xa6
   140013140:	lock sti 
   140013142:	inc    DWORD PTR [rax]
   140013144:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013145:	movabs al,ds:0x80808000a0
   14001314e:	inc    DWORD PTR [rax]
   140013150:	add    bh,bh
   140013152:	add    BYTE PTR [rax],al
   140013154:	add    bh,bh
   140013156:	inc    DWORD PTR [rax]
   140013158:	inc    DWORD PTR [rax]
   14001315a:	add    BYTE PTR [rax],al
   14001315c:	inc    DWORD PTR [rax]
   14001315e:	inc    DWORD PTR [rax]
   140013160:	(bad)  
   140013161:	inc    DWORD PTR [rax]
   140013163:	add    bh,bh
   140013165:	(bad)  
   140013166:	inc    DWORD PTR [rax]
   140013168:	add    BYTE PTR [rax],al
   14001316a:	add    BYTE PTR [rax],al
   14001316c:	add    BYTE PTR [rax],al
   14001316e:	add    BYTE PTR [rax],0x0
   140013171:	add    BYTE PTR [rax],0x0
   140013174:	add    BYTE PTR [rax+0x800080],al
   14001317a:	add    BYTE PTR [rax],al
   14001317c:	add    BYTE PTR [rax],0x80
   14001317f:	add    BYTE PTR [rax-0x3fffff80],al
   140013185:	rol    al,0x0
   140013188:	rcr    ah,0xc0
   14001318b:	add    al,dh
   14001318d:	retf   0xa6
   140013190:	lock sti 
   140013192:	inc    DWORD PTR [rax]
   140013194:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013195:	movabs al,ds:0x80808000a0
   14001319e:	inc    DWORD PTR [rax]
   1400131a0:	add    bh,bh
   1400131a2:	add    BYTE PTR [rax],al
   1400131a4:	add    bh,bh
   1400131a6:	inc    DWORD PTR [rax]
   1400131a8:	inc    DWORD PTR [rax]
   1400131aa:	add    BYTE PTR [rax],al
   1400131ac:	inc    DWORD PTR [rax]
   1400131ae:	inc    DWORD PTR [rax]
   1400131b0:	(bad)  
   1400131b1:	inc    DWORD PTR [rax]
   1400131b3:	add    bh,bh
   1400131b5:	(bad)  
   1400131b6:	inc    DWORD PTR [rax]
   1400131b8:	add    BYTE PTR [rax],al
   1400131ba:	add    BYTE PTR [rax],al
   1400131bc:	add    BYTE PTR [rax],al
   1400131be:	add    BYTE PTR [rax],0x0
   1400131c1:	add    BYTE PTR [rax],0x0
   1400131c4:	add    BYTE PTR [rax+0x800080],al
   1400131ca:	add    BYTE PTR [rax],al
   1400131cc:	add    BYTE PTR [rax],0x80
   1400131cf:	add    BYTE PTR [rax-0x3fffff80],al
   1400131d5:	rol    al,0x0
   1400131d8:	rcr    ah,0xc0
   1400131db:	add    al,dh
   1400131dd:	retf   0xa6
   1400131e0:	lock sti 
   1400131e2:	inc    DWORD PTR [rax]
   1400131e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400131e5:	movabs al,ds:0x80808000a0
   1400131ee:	inc    DWORD PTR [rax]
   1400131f0:	add    bh,bh
   1400131f2:	add    BYTE PTR [rax],al
   1400131f4:	add    bh,bh
   1400131f6:	inc    DWORD PTR [rax]
   1400131f8:	inc    DWORD PTR [rax]
   1400131fa:	add    BYTE PTR [rax],al
   1400131fc:	inc    DWORD PTR [rax]
   1400131fe:	inc    DWORD PTR [rax]
   140013200:	(bad)  
   140013201:	inc    DWORD PTR [rax]
   140013203:	add    bh,bh
   140013205:	(bad)  
   140013206:	inc    DWORD PTR [rax]
   140013208:	add    BYTE PTR [rax],al
   14001320a:	add    BYTE PTR [rax],al
   14001320c:	add    BYTE PTR [rax],al
   14001320e:	add    BYTE PTR [rax],0x0
   140013211:	add    BYTE PTR [rax],0x0
   140013214:	add    BYTE PTR [rax+0x800080],al
   14001321a:	add    BYTE PTR [rax],al
   14001321c:	add    BYTE PTR [rax],0x80
   14001321f:	add    BYTE PTR [rax-0x3fffff80],al
   140013225:	rol    al,0x0
   140013228:	rcr    ah,0xc0
   14001322b:	add    al,dh
   14001322d:	retf   0xa6
   140013230:	lock sti 
   140013232:	inc    DWORD PTR [rax]
   140013234:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013235:	movabs al,ds:0x80808000a0
   14001323e:	inc    DWORD PTR [rax]
   140013240:	add    bh,bh
   140013242:	add    BYTE PTR [rax],al
   140013244:	add    bh,bh
   140013246:	inc    DWORD PTR [rax]
   140013248:	inc    DWORD PTR [rax]
   14001324a:	add    BYTE PTR [rax],al
   14001324c:	inc    DWORD PTR [rax]
   14001324e:	inc    DWORD PTR [rax]
   140013250:	(bad)  
   140013251:	inc    DWORD PTR [rax]
   140013253:	add    bh,bh
   140013255:	(bad)  
   140013256:	inc    DWORD PTR [rax]
   140013258:	add    BYTE PTR [rax],al
   14001325a:	add    BYTE PTR [rax],al
   14001325c:	add    BYTE PTR [rax],al
   14001325e:	add    BYTE PTR [rax],0x0
   140013261:	add    BYTE PTR [rax],0x0
   140013264:	add    BYTE PTR [rax+0x800080],al
   14001326a:	add    BYTE PTR [rax],al
   14001326c:	add    BYTE PTR [rax],0x80
   14001326f:	add    BYTE PTR [rax-0x3fffff80],al
   140013275:	rol    al,0x0
   140013278:	rcr    ah,0xc0
   14001327b:	add    al,dh
   14001327d:	retf   0xa6
   140013280:	lock sti 
   140013282:	inc    DWORD PTR [rax]
   140013284:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013285:	movabs al,ds:0x80808000a0
   14001328e:	inc    DWORD PTR [rax]
   140013290:	add    bh,bh
   140013292:	add    BYTE PTR [rax],al
   140013294:	add    bh,bh
   140013296:	inc    DWORD PTR [rax]
   140013298:	inc    DWORD PTR [rax]
   14001329a:	add    BYTE PTR [rax],al
   14001329c:	inc    DWORD PTR [rax]
   14001329e:	inc    DWORD PTR [rax]
   1400132a0:	(bad)  
   1400132a1:	inc    DWORD PTR [rax]
   1400132a3:	add    bh,bh
   1400132a5:	(bad)  
   1400132a6:	inc    DWORD PTR [rax]
   1400132a8:	add    BYTE PTR [rax],al
   1400132aa:	add    BYTE PTR [rax],al
   1400132ac:	add    BYTE PTR [rax],al
   1400132ae:	add    BYTE PTR [rax],0x0
   1400132b1:	add    BYTE PTR [rax],0x0
   1400132b4:	add    BYTE PTR [rax+0x800080],al
   1400132ba:	add    BYTE PTR [rax],al
   1400132bc:	add    BYTE PTR [rax],0x80
   1400132bf:	add    BYTE PTR [rax-0x3fffff80],al
   1400132c5:	rol    al,0x0
   1400132c8:	rcr    ah,0xc0
   1400132cb:	add    al,dh
   1400132cd:	retf   0xa6
   1400132d0:	lock sti 
   1400132d2:	inc    DWORD PTR [rax]
   1400132d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400132d5:	movabs al,ds:0x80808000a0
   1400132de:	inc    DWORD PTR [rax]
   1400132e0:	add    bh,bh
   1400132e2:	add    BYTE PTR [rax],al
   1400132e4:	add    bh,bh
   1400132e6:	inc    DWORD PTR [rax]
   1400132e8:	inc    DWORD PTR [rax]
   1400132ea:	add    BYTE PTR [rax],al
   1400132ec:	inc    DWORD PTR [rax]
   1400132ee:	inc    DWORD PTR [rax]
   1400132f0:	(bad)  
   1400132f1:	inc    DWORD PTR [rax]
   1400132f3:	add    bh,bh
   1400132f5:	(bad)  
   1400132f6:	inc    DWORD PTR [rax]
   1400132f8:	add    BYTE PTR [rax],al
   1400132fa:	add    BYTE PTR [rax],al
   1400132fc:	add    BYTE PTR [rax],al
   1400132fe:	add    BYTE PTR [rax],0x0
   140013301:	add    BYTE PTR [rax],0x0
   140013304:	add    BYTE PTR [rax+0x800080],al
   14001330a:	add    BYTE PTR [rax],al
   14001330c:	add    BYTE PTR [rax],0x80
   14001330f:	add    al,dh
   140013311:	sti    
   140013312:	inc    DWORD PTR [rax]
   140013314:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013315:	movabs al,ds:0x80808000a0
   14001331e:	inc    DWORD PTR [rax]
   140013320:	add    bh,bh
   140013322:	add    BYTE PTR [rax],al
   140013324:	add    bh,bh
   140013326:	inc    DWORD PTR [rax]
   140013328:	inc    DWORD PTR [rax]
   14001332a:	add    BYTE PTR [rax],al
   14001332c:	inc    DWORD PTR [rax]
   14001332e:	inc    DWORD PTR [rax]
   140013330:	(bad)  
   140013331:	inc    DWORD PTR [rax]
   140013333:	add    bh,bh
   140013335:	(bad)  
   140013336:	inc    DWORD PTR [rax]
   140013338:	(bad)  
   140013339:	(bad)  
   14001333a:	(bad)  
   14001333b:	(bad)  
   14001333c:	(bad)  
   14001333d:	(bad)  
   14001333e:	(bad)  
   14001333f:	(bad)  
   140013340:	(bad)  
   140013341:	(bad)  
   140013342:	(bad)  
   140013343:	(bad)  
   140013344:	(bad)  
   140013345:	(bad)  
   140013346:	(bad)  
   140013347:	(bad)  
   140013348:	(bad)  
   140013349:	(bad)  
   14001334a:	(bad)  
   14001334b:	(bad)  
   14001334c:	(bad)  
   14001334d:	(bad)  
   14001334e:	(bad)  
   14001334f:	(bad)  
   140013350:	(bad)  
   140013351:	(bad)  
   140013352:	(bad)  
   140013353:	(bad)  
   140013354:	(bad)  
   140013355:	(bad)  
   140013356:	(bad)  
   140013357:	(bad)  
   140013358:	(bad)  
   140013359:	(bad)  
   14001335a:	(bad)  
   14001335b:	(bad)  
   14001335c:	(bad)  
   14001335d:	(bad)  
   14001335e:	(bad)  
   14001335f:	(bad)  
   140013360:	(bad)  
   140013361:	(bad)  
   140013362:	(bad)  
   140013363:	(bad)  
   140013364:	(bad)  
   140013365:	(bad)  
   140013366:	(bad)  
   140013367:	(bad)  
   140013368:	(bad)  
   140013369:	(bad)  
   14001336a:	(bad)  
   14001336b:	(bad)  
   14001336c:	(bad)  
   14001336d:	(bad)  
   14001336e:	(bad)  
   14001336f:	(bad)  
   140013370:	(bad)  
   140013371:	(bad)  
   140013372:	(bad)  
   140013373:	(bad)  
   140013374:	adc    BYTE PTR [rax],dl
   140013376:	adc    BYTE PTR [rdi],al
   140013378:	(bad)  
   140013379:	(bad)  
   14001337a:	(bad)  
   14001337b:	(bad)  
   14001337c:	(bad)  
   14001337d:	(bad)  
   14001337e:	(bad)  
   14001337f:	(bad)  
   140013380:	(bad)  
   140013381:	(bad)  
   140013382:	(bad)  
   140013383:	(bad)  
   140013384:	(bad)  
   140013385:	(bad)  
   140013386:	(bad)  
   140013387:	(bad)  
   140013388:	(bad)  
   140013389:	(bad)  
   14001338a:	(bad)  
   14001338b:	(bad)  
   14001338c:	(bad)  
   14001338d:	(bad)  
   14001338e:	(bad)  
   14001338f:	(bad)  
   140013390:	(bad)  
   140013391:	(bad)  
   140013392:	(bad)  
   140013393:	(bad)  
   140013394:	(bad)  
   140013395:	(bad)  
   140013396:	(bad)  
   140013397:	(bad)  
   140013398:	(bad)  
   140013399:	(bad)  
   14001339a:	(bad)  
   14001339b:	(bad)  
   14001339c:	(bad)  
   14001339d:	(bad)  
   14001339e:	(bad)  
   14001339f:	(bad)  
   1400133a0:	(bad)  
   1400133a1:	(bad)  
   1400133a2:	(bad)  
   1400133a3:	(bad)  
   1400133a4:	(bad)  
   1400133a5:	(bad)  
   1400133a6:	(bad)  
   1400133a7:	(bad)  
   1400133a8:	(bad)  
   1400133a9:	(bad)  
   1400133aa:	(bad)  
   1400133ab:	(bad)  
   1400133ac:	(bad)  
   1400133ad:	(bad)  
   1400133ae:	(bad)  
   1400133af:	(bad)  
   1400133b0:	(bad)  
   1400133b1:	(bad)  
   1400133b2:	(bad)  
   1400133b3:	(bad)  
   1400133b4:	(bad)  
   1400133b5:	(bad)  
   1400133b6:	(bad)  
   1400133b7:	(bad)  
   1400133b8:	(bad)  
   1400133b9:	(bad)  
   1400133ba:	(bad)  
   1400133bb:	(bad)  
   1400133bc:	(bad)  
   1400133bd:	(bad)  
   1400133be:	(bad)  
   1400133bf:	(bad)  
   1400133c0:	(bad)  
   1400133c1:	(bad)  
   1400133c2:	(bad)  
   1400133c3:	(bad)  
   1400133c4:	(bad)  
   1400133c5:	(bad)  
   1400133c6:	(bad)  
   1400133c7:	(bad)  
   1400133c8:	(bad)  
   1400133c9:	(bad)  
   1400133ca:	(bad)  
   1400133cb:	(bad)  
   1400133cc:	(bad)  
   1400133cd:	(bad)  
   1400133ce:	(bad)  
   1400133cf:	(bad)  
   1400133d0:	(bad)  
   1400133d1:	(bad)  
   1400133d2:	(bad)  
   1400133d3:	(bad)  
   1400133d4:	(bad)  
   1400133d5:	(bad)  
   1400133d6:	(bad)  
   1400133d7:	(bad)  
   1400133d8:	(bad)  
   1400133d9:	(bad)  
   1400133da:	(bad)  
   1400133db:	(bad)  
   1400133dc:	(bad)  
   1400133dd:	(bad)  
   1400133de:	(bad)  
   1400133df:	(bad)  
   1400133e0:	(bad)  
   1400133e1:	(bad)  
   1400133e2:	(bad)  
   1400133e3:	(bad)  
   1400133e4:	(bad)  
   1400133e5:	(bad)  
   1400133e6:	(bad)  
   1400133e7:	(bad)  
   1400133e8:	(bad)  
   1400133e9:	(bad)  
   1400133ea:	(bad)  
   1400133eb:	(bad)  
   1400133ec:	(bad)  
   1400133ed:	(bad)  
   1400133ee:	(bad)  
   1400133ef:	(bad)  
   1400133f0:	(bad)  
   1400133f1:	(bad)  
   1400133f2:	(bad)  
   1400133f3:	(bad)  
   1400133f4:	(bad)  
   1400133f5:	(bad)  
   1400133f6:	(bad)  
   1400133f7:	(bad)  
   1400133f8:	(bad)  
   1400133f9:	(bad)  
   1400133fa:	(bad)  
   1400133fb:	(bad)  
   1400133fc:	(bad)  
   1400133fd:	(bad)  
   1400133fe:	(bad)  
   1400133ff:	(bad)  
   140013400:	(bad)  
   140013401:	(bad)  
   140013402:	(bad)  
   140013403:	(bad)  
   140013404:	(bad)  
   140013405:	(bad)  
   140013406:	(bad)  
   140013407:	(bad)  
   140013408:	or     eax,0x110e0e0e
   14001340d:	adc    DWORD PTR [rcx],edx
   14001340f:	adc    DWORD PTR [rdi],eax
   140013411:	(bad)  
   140013412:	(bad)  
   140013413:	(bad)  
   140013414:	(bad)  
   140013415:	(bad)  
   140013416:	(bad)  
   140013417:	or     eax,0x7070707
   14001341c:	(bad)  
   14001341d:	(bad)  
   14001341e:	(bad)  
	...
   140013427:	(bad)  
   140013428:	(bad)  
   140013429:	(bad)  
   14001342a:	(bad)  
   14001342b:	or     eax,0x7070d11
   140013430:	(bad)  
   140013431:	(bad)  
   140013432:	(bad)  
   140013433:	add    BYTE PTR [rdi],al
   140013435:	(bad)  
   140013436:	(bad)  
   140013437:	(bad)  
   140013438:	(bad)  
   140013439:	(bad)  
	...
   140013442:	add    BYTE PTR [rax],al
   140013444:	add    BYTE PTR [rdi],al
   140013446:	(bad)  
   140013447:	(bad)  
   140013448:	(bad)  
   140013449:	(bad)  
   14001344a:	(bad)  
   14001344b:	(bad)  
   14001344c:	(bad)  
   14001344d:	(bad)  
   14001344e:	(bad)  
   14001344f:	(bad)  
   140013450:	(bad)  
   140013451:	(bad)  
   140013452:	(bad)  
   140013453:	(bad)  
   140013454:	(bad)  
   140013455:	(bad)  
   140013456:	(bad)  
   140013457:	(bad)  
   140013458:	(bad)  
   140013459:	(bad)  
   14001345a:	(bad)  
   14001345b:	(bad)  
   14001345c:	(bad)  
   14001345d:	(bad)  
   14001345e:	add    al,0x4
   140013460:	add    al,0x7
   140013462:	(bad)  
   140013463:	(bad)  
   140013464:	(bad)  
   140013465:	(bad)  
   140013466:	(bad)  
   140013467:	(bad)  
   140013468:	(bad)  
   140013469:	(bad)  
   14001346a:	(bad)  
   14001346b:	(bad)  
   14001346c:	(bad)  
   14001346d:	(bad)  
   14001346e:	(bad)  
   14001346f:	(bad)  
   140013470:	(bad)  
   140013471:	(bad)  
   140013472:	(bad)  
   140013473:	(bad)  
   140013474:	adc    BYTE PTR [rdi],al
   140013476:	(bad)  
   140013477:	(bad)  
   140013478:	(bad)  
   140013479:	(bad)  
   14001347a:	(bad)  
   14001347b:	(bad)  
   14001347c:	(bad)  
   14001347d:	(bad)  
   14001347e:	(bad)  
   14001347f:	(bad)  
   140013480:	(bad)  
   140013481:	(bad)  
   140013482:	(bad)  
   140013483:	(bad)  
   140013484:	(bad)  
   140013485:	(bad)  
   140013486:	(bad)  
   140013487:	(bad)  
   140013488:	(bad)  
   140013489:	(bad)  
   14001348a:	(bad)  
   14001348b:	(bad)  
   14001348c:	(bad)  
   14001348d:	(bad)  
   14001348e:	(bad)  
   14001348f:	(bad)  
   140013490:	(bad)  
   140013491:	(bad)  
   140013492:	(bad)  
   140013493:	(bad)  
   140013494:	(bad)  
   140013495:	(bad)  
   140013496:	(bad)  
   140013497:	(bad)  
   140013498:	(bad)  
   140013499:	(bad)  
   14001349a:	(bad)  
   14001349b:	(bad)  
   14001349c:	add    al,0x4
   14001349e:	(bad)  
   14001349f:	(bad)  
   1400134a0:	(bad)  
   1400134a1:	(bad)  
   1400134a2:	(bad)  
   1400134a3:	(bad)  
   1400134a4:	(bad)  
   1400134a5:	(bad)  
   1400134a6:	(bad)  
   1400134a7:	(bad)  
   1400134a8:	(bad)  
   1400134a9:	(bad)  
   1400134aa:	(bad)  
   1400134ab:	(bad)  
   1400134ac:	(bad)  
   1400134ad:	(bad)  
   1400134ae:	(bad)  
   1400134af:	(bad)  
   1400134b0:	(bad)  
   1400134b1:	(bad)  
   1400134b2:	(bad)  
   1400134b3:	(bad)  
   1400134b4:	(bad)  
   1400134b5:	(bad)  
   1400134b6:	(bad)  
   1400134b7:	(bad)  
   1400134b8:	(bad)  
   1400134b9:	(bad)  
   1400134ba:	(bad)  
   1400134bb:	(bad)  
   1400134bc:	(bad)  
   1400134bd:	(bad)  
   1400134be:	add    al,0x4
   1400134c0:	add    al,0x4
   1400134c2:	add    al,0x4
   1400134c4:	add    al,0x4
   1400134c6:	add    al,0x4
   1400134c8:	(bad)  
   1400134c9:	(bad)  
   1400134ca:	(bad)  
   1400134cb:	(bad)  
   1400134cc:	(bad)  
   1400134cd:	(bad)  
   1400134ce:	(bad)  
   1400134cf:	(bad)  
   1400134d0:	(bad)  
   1400134d1:	(bad)  
   1400134d2:	(bad)  
   1400134d3:	(bad)  
   1400134d4:	(bad)  
   1400134d5:	(bad)  
   1400134d6:	(bad)  
   1400134d7:	(bad)  
   1400134d8:	(bad)  
   1400134d9:	(bad)  
   1400134da:	(bad)  
   1400134db:	(bad)  
   1400134dc:	(bad)  
   1400134dd:	(bad)  
   1400134de:	(bad)  
   1400134df:	(bad)  
   1400134e0:	(bad)  
   1400134e1:	(bad)  
   1400134e2:	(bad)  
   1400134e3:	(bad)  
   1400134e4:	(bad)  
   1400134e5:	(bad)  
   1400134e6:	(bad)  
   1400134e7:	(bad)  
   1400134e8:	(bad)  
   1400134e9:	(bad)  
   1400134ea:	(bad)  
   1400134eb:	(bad)  
   1400134ec:	(bad)  
   1400134ed:	(bad)  
   1400134ee:	(bad)  
   1400134ef:	(bad)  
   1400134f0:	(bad)  
   1400134f1:	(bad)  
   1400134f2:	(bad)  
   1400134f3:	(bad)  
   1400134f4:	(bad)  
   1400134f5:	(bad)  
   1400134f6:	add    al,0x4
   1400134f8:	(bad)  
   1400134f9:	(bad)  
   1400134fa:	(bad)  
   1400134fb:	(bad)  
   1400134fc:	(bad)  
   1400134fd:	(bad)  
   1400134fe:	(bad)  
   1400134ff:	(bad)  
   140013500:	(bad)  
   140013501:	(bad)  
   140013502:	(bad)  
   140013503:	(bad)  
   140013504:	(bad)  
   140013505:	(bad)  
   140013506:	(bad)  
   140013507:	(bad)  
   140013508:	adc    BYTE PTR [rsi],cl
   14001350a:	(bad)  
   14001350b:	(bad)  
   14001350c:	(bad)  
   14001350d:	adc    DWORD PTR [rcx],edx
   14001350f:	adc    DWORD PTR [rcx],edx
   140013511:	(bad)  
   140013512:	(bad)  
   140013513:	(bad)  
   140013514:	(bad)  
   140013515:	(bad)  
   140013516:	(bad)  
   140013517:	(bad)  
   140013518:	(bad)  
   140013519:	(bad)  
   14001351a:	(bad)  
   14001351b:	(bad)  
   14001351c:	(bad)  
   14001351d:	(bad)  
   14001351e:	(bad)  
   14001351f:	add    BYTE PTR [rdi],al
   140013521:	(bad)  
   140013522:	(bad)  
   140013523:	(bad)  
   140013524:	(bad)  
   140013525:	(bad)  
   140013526:	add    BYTE PTR [rdi],al
   140013528:	(bad)  
   140013529:	(bad)  
   14001352a:	or     eax,0xd110d11
   14001352f:	(bad)  
   140013530:	(bad)  
   140013531:	(bad)  
   140013532:	add    BYTE PTR [rax],al
   140013534:	add    BYTE PTR [rdi],al
   140013536:	(bad)  
   140013537:	(bad)  
   140013538:	(bad)  
   140013539:	add    BYTE PTR [rdi],al
   14001353b:	(bad)  
   14001353c:	(bad)  
   14001353d:	(bad)  
   14001353e:	(bad)  
   14001353f:	(bad)  
   140013540:	(bad)  
   140013541:	(bad)  
   140013542:	(bad)  
   140013543:	add    BYTE PTR [rdi],al
   140013545:	add    BYTE PTR [rdi],al
   140013547:	(bad)  
	...
   140013550:	add    BYTE PTR [rax],al
   140013552:	add    BYTE PTR [rdi],al
   140013554:	(bad)  
   140013555:	(bad)  
   140013556:	(bad)  
   140013557:	(bad)  
   140013558:	(bad)  
   140013559:	(bad)  
   14001355a:	(bad)  
   14001355b:	(bad)  
   14001355c:	(bad)  
   14001355d:	(bad)  
   14001355e:	add    al,0x4
   140013560:	add    al,0x7
   140013562:	(bad)  
   140013563:	(bad)  
   140013564:	(bad)  
   140013565:	(bad)  
   140013566:	(bad)  
   140013567:	(bad)  
   140013568:	(bad)  
   140013569:	(bad)  
   14001356a:	adc    BYTE PTR [rax],dl
   14001356c:	adc    BYTE PTR [rdi],al
   14001356e:	(bad)  
   14001356f:	(bad)  
   140013570:	(bad)  
   140013571:	(bad)  
   140013572:	(bad)  
   140013573:	adc    BYTE PTR [rax],dl
   140013575:	(bad)  
   140013576:	(bad)  
   140013577:	(bad)  
   140013578:	(bad)  
   140013579:	(bad)  
	...
   140013582:	add    BYTE PTR [rax],al
   140013584:	add    BYTE PTR [rdi],al
   140013586:	(bad)  
   140013587:	(bad)  
   140013588:	(bad)  
   140013589:	(bad)  
   14001358a:	(bad)  
   14001358b:	(bad)  
   14001358c:	(bad)  
   14001358d:	(bad)  
   14001358e:	(bad)  
   14001358f:	(bad)  
   140013590:	(bad)  
   140013591:	(bad)  
   140013592:	(bad)  
   140013593:	(bad)  
   140013594:	(bad)  
   140013595:	(bad)  
   140013596:	(bad)  
   140013597:	(bad)  
   140013598:	(bad)  
   140013599:	(bad)  
   14001359a:	(bad)  
   14001359b:	add    al,0x7
   14001359d:	(bad)  
   14001359e:	add    al,0x7
   1400135a0:	(bad)  
   1400135a1:	add    al,0x4
   1400135a3:	(bad)  
   1400135a4:	(bad)  
   1400135a5:	(bad)  
   1400135a6:	(bad)  
   1400135a7:	(bad)  
   1400135a8:	(bad)  
   1400135a9:	(bad)  
   1400135aa:	(bad)  
   1400135ab:	(bad)  
   1400135ac:	(bad)  
   1400135ad:	(bad)  
   1400135ae:	add    al,0x4
   1400135b0:	add    al,0x4
   1400135b2:	add    al,0x4
   1400135b4:	add    al,0x4
   1400135b6:	add    al,0x7
   1400135b8:	(bad)  
   1400135b9:	add    BYTE PTR [rax],al
   1400135bb:	add    BYTE PTR [rax],al
   1400135bd:	add    BYTE PTR [rbx+rdx*1],al
   1400135c0:	adc    edx,DWORD PTR [rbx]
   1400135c2:	adc    edx,DWORD PTR [rbx]
   1400135c4:	adc    edx,DWORD PTR [rbx]
   1400135c6:	adc    eax,DWORD PTR [rdi+rax*1]
   1400135c9:	(bad)  
	...
   1400135d2:	add    BYTE PTR [rax],al
   1400135d4:	(bad)  
   1400135d5:	(bad)  
   1400135d6:	(bad)  
   1400135d7:	(bad)  
   1400135d8:	(bad)  
   1400135d9:	(bad)  
   1400135da:	(bad)  
   1400135db:	(bad)  
   1400135dc:	(bad)  
   1400135dd:	(bad)  
   1400135de:	(bad)  
   1400135df:	(bad)  
   1400135e0:	(bad)  
   1400135e1:	(bad)  
   1400135e2:	(bad)  
   1400135e3:	(bad)  
   1400135e4:	(bad)  
   1400135e5:	(bad)  
   1400135e6:	(bad)  
   1400135e7:	(bad)  
   1400135e8:	(bad)  
   1400135e9:	(bad)  
   1400135ea:	(bad)  
   1400135eb:	(bad)  
   1400135ec:	(bad)  
   1400135ed:	(bad)  
   1400135ee:	(bad)  
   1400135ef:	(bad)  
   1400135f0:	(bad)  
   1400135f1:	(bad)  
   1400135f2:	(bad)  
   1400135f3:	(bad)  
   1400135f4:	(bad)  
   1400135f5:	add    al,0x4
   1400135f7:	add    al,0x7
   1400135f9:	(bad)  
   1400135fa:	(bad)  
   1400135fb:	(bad)  
   1400135fc:	(bad)  
   1400135fd:	(bad)  
   1400135fe:	(bad)  
   1400135ff:	(bad)  
   140013600:	(bad)  
   140013601:	(bad)  
   140013602:	(bad)  
   140013603:	(bad)  
   140013604:	add    DWORD PTR [rbx],edx
   140013606:	(bad)  
   140013607:	(bad)  
   140013608:	adc    BYTE PTR [rax],dl
   14001360a:	(bad)  
   14001360b:	(bad)  
   14001360c:	(bad)  
   14001360d:	(bad)  
   14001360e:	adc    DWORD PTR [rcx],edx
   140013610:	adc    DWORD PTR [rcx],edx
   140013612:	(bad)  
   140013613:	(bad)  
   140013614:	(bad)  
   140013615:	(bad)  
   140013616:	(bad)  
   140013617:	(bad)  
   140013618:	(bad)  
   140013619:	or     al,0xc
   14001361b:	or     al,0xc
   14001361d:	or     al,0x7
   14001361f:	add    BYTE PTR [rdi],al
   140013621:	movlps QWORD PTR [rdi],xmm1
   140013624:	adc    ecx,DWORD PTR [rdi]
   140013626:	add    BYTE PTR [rdi],al
   140013628:	(bad)  
   140013629:	or     eax,0xd110d11
   14001362e:	adc    DWORD PTR [rip+0x70707],ecx        # 0x140083d3b
   140013634:	(bad)  
   140013635:	(bad)  
   140013636:	(bad)  
   140013637:	(bad)  
	...
   140013644:	add    BYTE PTR [rdi],al
   140013646:	add    BYTE PTR [rdi],al
   140013648:	add    BYTE PTR [rax],al
   14001364a:	add    eax,DWORD PTR [rbx]
   14001364c:	add    eax,DWORD PTR [rbx]
   14001364e:	add    eax,DWORD PTR [rbx]
   140013650:	add    eax,DWORD PTR [rbx]
   140013652:	add    eax,DWORD PTR [rax]
   140013654:	(bad)  
   140013655:	(bad)  
   140013656:	(bad)  
   140013657:	(bad)  
   140013658:	(bad)  
   140013659:	(bad)  
   14001365a:	(bad)  
   14001365b:	(bad)  
   14001365c:	(bad)  
   14001365d:	(bad)  
   14001365e:	(bad)  
   14001365f:	(bad)  
   140013660:	(bad)  
   140013661:	(bad)  
   140013662:	(bad)  
   140013663:	(bad)  
   140013664:	(bad)  
   140013665:	(bad)  
   140013666:	(bad)  
   140013667:	(bad)  
   140013668:	adc    BYTE PTR [rdi],al
   14001366a:	adc    BYTE PTR [rax],dl
   14001366c:	adc    BYTE PTR [rax],dl
   14001366e:	adc    BYTE PTR [rdi],al
   140013670:	(bad)  
   140013671:	(bad)  
   140013672:	(bad)  
   140013673:	adc    BYTE PTR [rax],dl
   140013675:	(bad)  
   140013676:	(bad)  
   140013677:	(bad)  
   140013678:	(bad)  
   140013679:	(bad)  
   14001367a:	add    BYTE PTR [rbx],dl
   14001367c:	adc    edx,DWORD PTR [rbx]
   14001367e:	adc    edx,DWORD PTR [rbx]
   140013680:	adc    edx,DWORD PTR [rbx]
   140013682:	adc    edx,DWORD PTR [rbx]
   140013684:	add    BYTE PTR [rdi],al
   140013686:	(bad)  
   140013687:	(bad)  
   140013688:	(bad)  
   140013689:	(bad)  
   14001368a:	(bad)  
   14001368b:	(bad)  
   14001368c:	(bad)  
   14001368d:	(bad)  
   14001368e:	(bad)  
   14001368f:	(bad)  
   140013690:	(bad)  
   140013691:	(bad)  
   140013692:	(bad)  
   140013693:	(bad)  
   140013694:	(bad)  
   140013695:	(bad)  
   140013696:	(bad)  
   140013697:	(bad)  
   140013698:	(bad)  
   140013699:	(bad)  
   14001369a:	(bad)  
   14001369b:	add    al,0x7
   14001369d:	(bad)  
   14001369e:	add    al,0x7
   1400136a0:	add    al,0x7
   1400136a2:	(bad)  
   1400136a3:	add    al,0x7
   1400136a5:	(bad)  
   1400136a6:	(bad)  
   1400136a7:	(bad)  
   1400136a8:	(bad)  
   1400136a9:	(bad)  
   1400136aa:	(bad)  
   1400136ab:	(bad)  
   1400136ac:	(bad)  
   1400136ad:	(bad)  
   1400136ae:	add    al,0x13
   1400136b0:	adc    edx,DWORD PTR [rbx]
   1400136b2:	adc    edx,DWORD PTR [rbx]
   1400136b4:	adc    edx,DWORD PTR [rbx]
   1400136b6:	add    al,0x7
   1400136b8:	add    BYTE PTR [rbx+rax*1],cl
   1400136bb:	or     al,0x3
   1400136bd:	or     al,0x4
   1400136bf:	adc    eax,DWORD PTR [rax]
   1400136c1:	add    BYTE PTR [rax],al
   1400136c3:	add    BYTE PTR [rax],al
   1400136c5:	add    BYTE PTR [rbx],dl
   1400136c7:	add    al,0x7
   1400136c9:	(bad)  
   1400136ca:	add    BYTE PTR [rdi],cl
   1400136cc:	str    WORD PTR [rdi]
   1400136cf:	str    WORD PTR [rdi]
   1400136d2:	sldt   WORD PTR [rdi]
   1400136d5:	(bad)  
   1400136d6:	(bad)  
   1400136d7:	(bad)  
   1400136d8:	(bad)  
   1400136d9:	(bad)  
   1400136da:	(bad)  
   1400136db:	(bad)  
   1400136dc:	(bad)  
   1400136dd:	(bad)  
   1400136de:	(bad)  
   1400136df:	(bad)  
   1400136e0:	(bad)  
   1400136e1:	(bad)  
   1400136e2:	(bad)  
   1400136e3:	(bad)  
   1400136e4:	(bad)  
   1400136e5:	(bad)  
   1400136e6:	(bad)  
   1400136e7:	(bad)  
   1400136e8:	(bad)  
   1400136e9:	(bad)  
   1400136ea:	(bad)  
   1400136eb:	(bad)  
   1400136ec:	(bad)  
   1400136ed:	(bad)  
   1400136ee:	(bad)  
   1400136ef:	(bad)  
   1400136f0:	(bad)  
   1400136f1:	(bad)  
   1400136f2:	(bad)  
   1400136f3:	(bad)  
   1400136f4:	add    al,0x4
   1400136f6:	add    al,0x7
   1400136f8:	(bad)  
   1400136f9:	(bad)  
   1400136fa:	add    DWORD PTR [rbx],edx
   1400136fc:	(bad)  
   1400136fd:	(bad)  
   1400136fe:	(bad)  
   1400136ff:	(bad)  
   140013700:	(bad)  
   140013701:	(bad)  
   140013702:	(bad)  
   140013703:	(bad)  
   140013704:	(bad)  
   140013705:	(bad)  
   140013706:	(bad)  
   140013707:	(bad)  
   140013708:	adc    BYTE PTR [rax],dl
   14001370a:	adc    BYTE PTR [rsi],cl
   14001370c:	(bad)  
   14001370d:	(bad)  
   14001370e:	(bad)  
   14001370f:	adc    DWORD PTR [rcx],edx
   140013711:	adc    DWORD PTR [rcx],edx
   140013713:	(bad)  
   140013714:	(bad)  
   140013715:	(bad)  
   140013716:	(bad)  
   140013717:	(bad)  
   140013718:	(bad)  
   140013719:	or     al,0x7
   14001371b:	(bad)  
   14001371c:	(bad)  
   14001371d:	(bad)  
   14001371e:	(bad)  
   14001371f:	add    BYTE PTR [rdi],al
   140013721:	adc    ecx,DWORD PTR [rdi]
   140013723:	adc    ecx,DWORD PTR [rdi]
   140013725:	adc    eax,DWORD PTR [rax]
   140013727:	(bad)  
   140013728:	(bad)  
   140013729:	adc    DWORD PTR [rip+0x11],ecx        # 0x140013740
   14001372f:	adc    DWORD PTR [rax],edx
   140013731:	adc    BYTE PTR [rax],dl
   140013733:	add    BYTE PTR [rax],dl
   140013735:	adc    BYTE PTR [rax],dl
   140013737:	(bad)  
   140013738:	add    BYTE PTR [rdi],al
   14001373a:	(bad)  
   14001373b:	(bad)  
   14001373c:	(bad)  
   14001373d:	(bad)  
   14001373e:	(bad)  
   14001373f:	(bad)  
   140013740:	(bad)  
   140013741:	sysret 
   140013743:	(bad)  
   140013744:	add    BYTE PTR [rax],al
   140013746:	add    BYTE PTR [rdi],al
   140013748:	add    BYTE PTR [rdi],cl
   14001374a:	add    BYTE PTR [rbx],al
   14001374c:	add    eax,DWORD PTR [rbx]
   14001374e:	add    eax,DWORD PTR [rbx]
   140013750:	add    eax,DWORD PTR [rbx]
   140013752:	add    eax,DWORD PTR [rbx]
   140013754:	add    BYTE PTR [rdi],al
   140013756:	(bad)  
   140013757:	(bad)  
   140013758:	(bad)  
   140013759:	(bad)  
   14001375a:	(bad)  
   14001375b:	(bad)  
   14001375c:	(bad)  
   14001375d:	(bad)  
   14001375e:	add    al,0x4
   140013760:	or     al,0x7
   140013762:	(bad)  
   140013763:	(bad)  
   140013764:	(bad)  
   140013765:	(bad)  
   140013766:	(bad)  
   140013767:	(bad)  
   140013768:	adc    BYTE PTR [rax],dl
   14001376a:	adc    BYTE PTR [rdi],al
   14001376c:	adc    BYTE PTR [rax],dl
   14001376e:	adc    BYTE PTR [rax],dl
   140013770:	adc    BYTE PTR [rax],dl
   140013772:	adc    BYTE PTR [rax],dl
   140013774:	adc    BYTE PTR [rdi],al
   140013776:	(bad)  
   140013777:	(bad)  
   140013778:	(bad)  
   140013779:	(bad)  
   14001377a:	add    BYTE PTR [rbx],dl
   14001377c:	adc    edx,DWORD PTR [rbx]
   14001377e:	adc    edx,DWORD PTR [rbx]
   140013780:	adc    edx,DWORD PTR [rbx]
   140013782:	adc    edx,DWORD PTR [rbx]
   140013784:	add    BYTE PTR [rdi],al
   140013786:	(bad)  
   140013787:	(bad)  
   140013788:	(bad)  
   140013789:	(bad)  
   14001378a:	(bad)  
   14001378b:	(bad)  
   14001378c:	(bad)  
   14001378d:	(bad)  
   14001378e:	(bad)  
   14001378f:	(bad)  
   140013790:	(bad)  
   140013791:	(bad)  
   140013792:	(bad)  
   140013793:	(bad)  
   140013794:	(bad)  
   140013795:	(bad)  
   140013796:	(bad)  
   140013797:	(bad)  
   140013798:	(bad)  
   140013799:	(bad)  
   14001379a:	(bad)  
   14001379b:	add    al,0x7
   14001379d:	(bad)  
   14001379e:	add    al,0x7
   1400137a0:	add    al,0x7
   1400137a2:	(bad)  
   1400137a3:	add    al,0x7
   1400137a5:	(bad)  
   1400137a6:	(bad)  
   1400137a7:	(bad)  
   1400137a8:	(bad)  
   1400137a9:	(bad)  
   1400137aa:	(bad)  
   1400137ab:	(bad)  
   1400137ac:	(bad)  
   1400137ad:	(bad)  
   1400137ae:	add    al,0x13
   1400137b0:	add    BYTE PTR [rax],al
   1400137b2:	add    BYTE PTR [rax],al
   1400137b4:	add    BYTE PTR [rbx],dl
   1400137b6:	add    al,0x7
   1400137b8:	add    BYTE PTR [rbx],al
   1400137ba:	or     al,0x3
   1400137bc:	or     al,0x3
   1400137be:	add    al,0x13
   1400137c0:	adc    edx,DWORD PTR [rbx]
   1400137c2:	adc    edx,DWORD PTR [rbx]
   1400137c4:	adc    edx,DWORD PTR [rbx]
   1400137c6:	adc    eax,DWORD PTR [rdi+rax*1]
   1400137c9:	(bad)  
   1400137ca:	add    BYTE PTR [rdi],cl
   1400137cc:	str    WORD PTR [rdi]
   1400137cf:	str    WORD PTR [rdi]
   1400137d2:	sldt   WORD PTR [rax]
   1400137d5:	add    BYTE PTR [rdi],al
   1400137d7:	(bad)  
   1400137d8:	(bad)  
   1400137d9:	(bad)  
   1400137da:	add    al,0x4
   1400137dc:	add    al,0x7
   1400137de:	(bad)  
   1400137df:	add    al,0x4
   1400137e1:	add    al,0x7
   1400137e3:	(bad)  
   1400137e4:	(bad)  
   1400137e5:	(bad)  
   1400137e6:	(bad)  
   1400137e7:	(bad)  
   1400137e8:	(bad)  
   1400137e9:	(bad)  
   1400137ea:	(bad)  
   1400137eb:	(bad)  
   1400137ec:	or     al,0x0
   1400137ee:	add    BYTE PTR [rax],al
   1400137f0:	add    BYTE PTR [rdi+rax*1],cl
   1400137f3:	add    al,0x4
   1400137f5:	add    al,0x7
   1400137f7:	(bad)  
   1400137f8:	(bad)  
   1400137f9:	add    DWORD PTR [rcx],eax
   1400137fb:	add    DWORD PTR [rbx],edx
   1400137fd:	(bad)  
   1400137fe:	(bad)  
   1400137ff:	(bad)  
   140013800:	(bad)  
   140013801:	(bad)  
   140013802:	(bad)  
   140013803:	add    DWORD PTR [rbx],edx
   140013805:	(bad)  
   140013806:	(bad)  
   140013807:	(bad)  
   140013808:	adc    BYTE PTR [rax],dl
   14001380a:	adc    BYTE PTR [rax],dl
   14001380c:	(bad)  
   14001380d:	(bad)  
   14001380e:	(bad)  
   14001380f:	(bad)  
   140013810:	adc    DWORD PTR [rcx],edx
   140013812:	(bad)  
   140013813:	(bad)  
   140013814:	(bad)  
   140013815:	(bad)  
   140013816:	(bad)  
   140013817:	(bad)  
   140013818:	(bad)  
   140013819:	or     al,0x7
   14001381b:	(bad)  
   14001381c:	(bad)  
   14001381d:	(bad)  
   14001381e:	(bad)  
   14001381f:	add    BYTE PTR [rdi],al
   140013821:	movlps QWORD PTR [rdi],xmm1
   140013824:	adc    ecx,DWORD PTR [rdi]
   140013826:	add    BYTE PTR [rdi],al
   140013828:	(bad)  
   140013829:	or     eax,0xd000d11
   14001382e:	adc    DWORD PTR [rip+0x101010],ecx        # 0x140114844
   140013834:	adc    BYTE PTR [rax],dl
   140013836:	adc    BYTE PTR [rdi],al
   140013838:	add    BYTE PTR [rdi],al
   14001383a:	(bad)  
   14001383b:	(bad)  
   14001383c:	(bad)  
   14001383d:	(bad)  
   14001383e:	(bad)  
   14001383f:	or     al,0xc
   140013841:	or     al,0x7
   140013843:	(bad)  
   140013844:	add    BYTE PTR [rdi],al
   140013846:	add    BYTE PTR [rdi],al
   140013848:	add    BYTE PTR [rbx],dl
   14001384a:	sldt   WORD PTR [rbx]
   14001384d:	add    eax,DWORD PTR [rbx]
   14001384f:	add    eax,DWORD PTR [rbx]
   140013851:	add    eax,DWORD PTR [rbx]
   140013853:	add    eax,DWORD PTR [rbx]
   140013855:	add    BYTE PTR [rdi],al
   140013857:	(bad)  
   140013858:	(bad)  
   140013859:	(bad)  
   14001385a:	(bad)  
   14001385b:	(bad)  
   14001385c:	(bad)  
   14001385d:	(bad)  
   14001385e:	add    al,0x4
   140013860:	or     al,0x7
   140013862:	(bad)  
   140013863:	(bad)  
   140013864:	(bad)  
   140013865:	(bad)  
   140013866:	(bad)  
   140013867:	(bad)  
   140013868:	(bad)  
   140013869:	adc    BYTE PTR [rdi],al
   14001386b:	(bad)  
   14001386c:	(bad)  
   14001386d:	adc    BYTE PTR [rax],dl
   14001386f:	adc    BYTE PTR [rax],dl
   140013871:	adc    BYTE PTR [rax],dl
   140013873:	adc    BYTE PTR [rdi],al
   140013875:	(bad)  
   140013876:	(bad)  
   140013877:	(bad)  
   140013878:	(bad)  
   140013879:	(bad)  
   14001387a:	add    BYTE PTR [rbx],dl
   14001387c:	adc    edx,DWORD PTR [rbx]
   14001387e:	adc    edx,DWORD PTR [rbx]
   140013880:	adc    edx,DWORD PTR [rbx]
   140013882:	adc    edx,DWORD PTR [rbx]
   140013884:	add    BYTE PTR [rdi],al
   140013886:	(bad)  
   140013887:	(bad)  
   140013888:	(bad)  
   140013889:	(bad)  
   14001388a:	(bad)  
   14001388b:	(bad)  
   14001388c:	(bad)  
   14001388d:	(bad)  
   14001388e:	(bad)  
   14001388f:	(bad)  
   140013890:	(bad)  
   140013891:	(bad)  
   140013892:	(bad)  
   140013893:	or     al,0x0
   140013895:	(bad)  
   140013896:	(bad)  
   140013897:	(bad)  
   140013898:	(bad)  
   140013899:	(bad)  
   14001389a:	(bad)  
   14001389b:	(bad)  
   14001389c:	add    al,0x4
   14001389e:	add    al,0x7
   1400138a0:	add    al,0x7
   1400138a2:	(bad)  
   1400138a3:	add    al,0x7
   1400138a5:	(bad)  
   1400138a6:	(bad)  
   1400138a7:	(bad)  
   1400138a8:	add    BYTE PTR [rax],al
   1400138aa:	add    BYTE PTR [rax],al
   1400138ac:	add    BYTE PTR [rax],al
   1400138ae:	add    al,0x13
   1400138b0:	adc    edx,DWORD PTR [rbx]
   1400138b2:	adc    edx,DWORD PTR [rbx]
   1400138b4:	adc    edx,DWORD PTR [rbx]
   1400138b6:	add    al,0x7
   1400138b8:	add    BYTE PTR [rbx+rax*1],cl
   1400138bb:	or     al,0x3
   1400138bd:	or     al,0x4
   1400138bf:	adc    eax,DWORD PTR [rax]
   1400138c1:	add    BYTE PTR [rax],al
   1400138c3:	adc    eax,DWORD PTR [rsp+rax*1]
   1400138c6:	add    al,0x4
   1400138c8:	(bad)  
   1400138c9:	(bad)  
	...
   1400138d2:	add    BYTE PTR [rax],al
   1400138d4:	sldt   WORD PTR [rdi]
   1400138d7:	(bad)  
   1400138d8:	(bad)  
   1400138d9:	(bad)  
   1400138da:	adc    edx,DWORD PTR [rax]
   1400138dc:	adc    BYTE PTR [rdi+rax*1],al
   1400138df:	adc    edx,DWORD PTR [rax]
   1400138e1:	adc    BYTE PTR [rdi+rax*1],al
   1400138e4:	(bad)  
   1400138e5:	(bad)  
   1400138e6:	(bad)  
   1400138e7:	(bad)  
   1400138e8:	(bad)  
   1400138e9:	(bad)  
   1400138ea:	(bad)  
   1400138eb:	add    BYTE PTR [rax],al
   1400138ed:	(bad)  
   1400138ee:	(bad)  
   1400138ef:	(bad)  
   1400138f0:	(bad)  
   1400138f1:	add    BYTE PTR [rax],al
   1400138f3:	add    al,0x4
   1400138f5:	(bad)  
   1400138f6:	(bad)  
   1400138f7:	(bad)  
   1400138f8:	(bad)  
   1400138f9:	add    DWORD PTR [rcx],eax
   1400138fb:	add    DWORD PTR [rbx],edx
   1400138fd:	(bad)  
   1400138fe:	(bad)  
   1400138ff:	(bad)  
   140013900:	(bad)  
   140013901:	(bad)  
   140013902:	add    DWORD PTR [rbx],edx
   140013904:	(bad)  
   140013905:	(bad)  
   140013906:	(bad)  
   140013907:	(bad)  
   140013908:	(bad)  
   140013909:	adc    BYTE PTR [rax],dl
   14001390b:	adc    BYTE PTR [rax],dl
   14001390d:	(bad)  
   14001390e:	(bad)  
   14001390f:	(bad)  
   140013910:	(bad)  
   140013911:	(bad)  
   140013912:	(bad)  
   140013913:	(bad)  
   140013914:	(bad)  
   140013915:	(bad)  
   140013916:	(bad)  
   140013917:	(bad)  
   140013918:	(bad)  
   140013919:	or     al,0x7
   14001391b:	(bad)  
   14001391c:	(bad)  
   14001391d:	(bad)  
   14001391e:	(bad)  
   14001391f:	add    BYTE PTR [rdi+rax*1],cl
   140013922:	or     al,0x0
   140013924:	add    BYTE PTR [rax],al
   140013926:	(bad)  
   140013927:	(bad)  
   140013928:	(bad)  
   140013929:	(bad)  
   14001392a:	or     eax,0xd110011
   14001392f:	adc    BYTE PTR [rax],dl
   140013931:	adc    BYTE PTR [rax],dl
   140013933:	add    BYTE PTR [rax],dl
   140013935:	adc    BYTE PTR [rax],dl
   140013937:	(bad)  
	...
   140013944:	add    BYTE PTR [rdi],al
   140013946:	(bad)  
   140013947:	add    BYTE PTR [rax],al
   140013949:	movlps QWORD PTR [rdi],xmm1
   14001394c:	add    BYTE PTR [rbx],al
   14001394e:	add    eax,DWORD PTR [rbx]
   140013950:	add    eax,DWORD PTR [rbx]
   140013952:	add    eax,DWORD PTR [rbx]
   140013954:	add    eax,DWORD PTR [rbx]
   140013956:	add    BYTE PTR [rdi],al
   140013958:	(bad)  
   140013959:	(bad)  
   14001395a:	(bad)  
   14001395b:	(bad)  
   14001395c:	(bad)  
   14001395d:	(bad)  
   14001395e:	(bad)  
   14001395f:	add    al,0x4
   140013961:	(bad)  
   140013962:	(bad)  
   140013963:	(bad)  
   140013964:	(bad)  
   140013965:	(bad)  
   140013966:	(bad)  
   140013967:	(bad)  
   140013968:	(bad)  
   140013969:	(bad)  
   14001396a:	(bad)  
   14001396b:	(bad)  
   14001396c:	(bad)  
   14001396d:	adc    BYTE PTR [rax],dl
   14001396f:	adc    BYTE PTR [rax],dl
   140013971:	(bad)  
   140013972:	(bad)  
   140013973:	(bad)  
   140013974:	(bad)  
   140013975:	(bad)  
   140013976:	(bad)  
   140013977:	(bad)  
   140013978:	(bad)  
   140013979:	(bad)  
   14001397a:	add    BYTE PTR [rbx],dl
   14001397c:	adc    edx,DWORD PTR [rbx]
   14001397e:	adc    edx,DWORD PTR [rbx]
   140013980:	adc    edx,DWORD PTR [rbx]
   140013982:	adc    edx,DWORD PTR [rbx]
   140013984:	add    BYTE PTR [rdi],al
   140013986:	(bad)  
   140013987:	(bad)  
   140013988:	(bad)  
   140013989:	(bad)  
   14001398a:	add    BYTE PTR [rax],al
   14001398c:	add    BYTE PTR [rax],al
   14001398e:	add    BYTE PTR [rdi],al
   140013990:	(bad)  
   140013991:	(bad)  
   140013992:	(bad)  
   140013993:	(bad)  
   140013994:	add    BYTE PTR [rdi+rax*1],cl
   140013997:	(bad)  
   140013998:	(bad)  
   140013999:	(bad)  
   14001399a:	(bad)  
   14001399b:	(bad)  
   14001399c:	(bad)  
   14001399d:	(bad)  
   14001399e:	add    al,0x7
   1400139a0:	add    al,0x4
   1400139a2:	add    al,0x7
   1400139a4:	(bad)  
   1400139a5:	(bad)  
   1400139a6:	(bad)  
   1400139a7:	(bad)  
   1400139a8:	add    BYTE PTR [rbx],dl
   1400139aa:	adc    edx,DWORD PTR [rbx]
   1400139ac:	adc    edx,DWORD PTR [rbx]
   1400139ae:	add    al,0x13
   1400139b0:	add    BYTE PTR [rax],al
   1400139b2:	add    BYTE PTR [rax],al
   1400139b4:	add    BYTE PTR [rbx],dl
   1400139b6:	add    al,0x7
   1400139b8:	add    BYTE PTR [rbx],al
   1400139ba:	or     al,0x3
   1400139bc:	or     al,0x3
   1400139be:	add    al,0x13
   1400139c0:	adc    edx,DWORD PTR [rbx]
   1400139c2:	adc    edx,DWORD PTR [rbx]
   1400139c4:	add    al,0x13
   1400139c6:	add    al,0x7
   1400139c8:	(bad)  
   1400139c9:	(bad)  
   1400139ca:	add    BYTE PTR [rdi],cl
   1400139cc:	str    WORD PTR [rdi]
   1400139cf:	str    WORD PTR [rdi]
   1400139d2:	str    WORD PTR [rdi]
   1400139d5:	add    BYTE PTR [rdi],al
   1400139d7:	(bad)  
   1400139d8:	(bad)  
   1400139d9:	(bad)  
   1400139da:	(bad)  
   1400139db:	adc    edx,DWORD PTR [rax]
   1400139dd:	adc    BYTE PTR [rdi+rax*1],al
   1400139e0:	adc    edx,DWORD PTR [rax]
   1400139e2:	adc    BYTE PTR [rdi+rax*1],al
   1400139e5:	(bad)  
   1400139e6:	(bad)  
   1400139e7:	(bad)  
   1400139e8:	(bad)  
   1400139e9:	(bad)  
   1400139ea:	add    BYTE PTR [rdi+rax*1],cl
   1400139ed:	(bad)  
   1400139ee:	(bad)  
   1400139ef:	(bad)  
   1400139f0:	adc    al,BYTE PTR [rdi]
   1400139f2:	or     al,0x0
   1400139f4:	(bad)  
   1400139f5:	(bad)  
   1400139f6:	(bad)  
   1400139f7:	(bad)  
   1400139f8:	(bad)  
   1400139f9:	(bad)  
   1400139fa:	add    DWORD PTR [rcx],eax
   1400139fc:	add    DWORD PTR [rbx],edx
   1400139fe:	(bad)  
   1400139ff:	(bad)  
   140013a00:	(bad)  
   140013a01:	add    DWORD PTR [rcx],eax
   140013a03:	adc    eax,DWORD PTR [rdi]
   140013a05:	(bad)  
   140013a06:	(bad)  
   140013a07:	(bad)  
   140013a08:	(bad)  
   140013a09:	(bad)  
   140013a0a:	adc    BYTE PTR [rax],dl
   140013a0c:	adc    BYTE PTR [rax],dl
   140013a0e:	(bad)  
   140013a0f:	(bad)  
   140013a10:	(bad)  
   140013a11:	(bad)  
   140013a12:	(bad)  
   140013a13:	(bad)  
   140013a14:	(bad)  
   140013a15:	(bad)  
   140013a16:	(bad)  
   140013a17:	(bad)  
   140013a18:	(bad)  
   140013a19:	or     al,0x7
   140013a1b:	(bad)  
   140013a1c:	(bad)  
   140013a1d:	(bad)  
   140013a1e:	(bad)  
   140013a1f:	(bad)  
   140013a20:	add    BYTE PTR [rax],al
   140013a22:	add    BYTE PTR [rdi],al
   140013a24:	(bad)  
   140013a25:	(bad)  
   140013a26:	(bad)  
   140013a27:	(bad)  
   140013a28:	(bad)  
   140013a29:	(bad)  
   140013a2a:	add    cl,BYTE PTR [rip+0x10100d11]        # 0x150114741
   140013a30:	adc    BYTE PTR [rax],dl
   140013a32:	adc    BYTE PTR [rax],al
   140013a34:	adc    BYTE PTR [rax],dl
   140013a36:	adc    BYTE PTR [rdi],al
   140013a38:	add    BYTE PTR [rdi],al
   140013a3a:	(bad)  
   140013a3b:	(bad)  
   140013a3c:	(bad)  
   140013a3d:	(bad)  
   140013a3e:	(bad)  
   140013a3f:	(bad)  
   140013a40:	(bad)  
   140013a41:	(bad)  
   140013a42:	(bad)  
   140013a43:	add    BYTE PTR [rdi],al
   140013a45:	add    BYTE PTR [rdi],al
   140013a47:	add    BYTE PTR [rax],al
   140013a49:	adc    ecx,DWORD PTR [rdi]
   140013a4b:	adc    ecx,DWORD PTR [rdi]
	...
   140013a55:	add    BYTE PTR [rax],al
   140013a57:	add    BYTE PTR [rdi],al
   140013a59:	(bad)  
   140013a5a:	(bad)  
   140013a5b:	(bad)  
   140013a5c:	(bad)  
   140013a5d:	(bad)  
   140013a5e:	(bad)  
   140013a5f:	(bad)  
   140013a60:	add    al,0x4
   140013a62:	or     al,0x7
   140013a64:	(bad)  
   140013a65:	(bad)  
   140013a66:	(bad)  
   140013a67:	(bad)  
   140013a68:	(bad)  
   140013a69:	(bad)  
   140013a6a:	(bad)  
   140013a6b:	(bad)  
   140013a6c:	(bad)  
   140013a6d:	(bad)  
   140013a6e:	adc    BYTE PTR [rax],dl
   140013a70:	adc    BYTE PTR [rax],dl
   140013a72:	(bad)  
   140013a73:	(bad)  
   140013a74:	adc    BYTE PTR [rax],dl
   140013a76:	adc    BYTE PTR [rdi],al
   140013a78:	(bad)  
   140013a79:	(bad)  
   140013a7a:	add    BYTE PTR [rbx],dl
   140013a7c:	adc    edx,DWORD PTR [rbx]
   140013a7e:	adc    edx,DWORD PTR [rbx]
   140013a80:	adc    edx,DWORD PTR [rbx]
   140013a82:	adc    edx,DWORD PTR [rbx]
   140013a84:	add    BYTE PTR [rdi],al
   140013a86:	(bad)  
   140013a87:	(bad)  
   140013a88:	(bad)  
   140013a89:	(bad)  
   140013a8a:	add    BYTE PTR [rax],al
   140013a8c:	add    BYTE PTR [rax],al
   140013a8e:	(bad)  
   140013a8f:	(bad)  
   140013a90:	(bad)  
   140013a91:	(bad)  
   140013a92:	(bad)  
   140013a93:	(bad)  
   140013a94:	(bad)  
   140013a95:	add    BYTE PTR [rdi],al
   140013a97:	(bad)  
   140013a98:	(bad)  
   140013a99:	(bad)  
   140013a9a:	(bad)  
   140013a9b:	(bad)  
   140013a9c:	(bad)  
   140013a9d:	(bad)  
   140013a9e:	add    al,0x0
   140013aa0:	add    al,0x7
   140013aa2:	(bad)  
   140013aa3:	(bad)  
   140013aa4:	(bad)  
   140013aa5:	(bad)  
   140013aa6:	(bad)  
   140013aa7:	(bad)  
   140013aa8:	add    BYTE PTR [rbx],dl
   140013aaa:	add    BYTE PTR [rax],al
   140013aac:	add    BYTE PTR [rax],al
   140013aae:	add    al,0x13
   140013ab0:	adc    edx,DWORD PTR [rbx]
   140013ab2:	adc    edx,DWORD PTR [rbx]
   140013ab4:	adc    edx,DWORD PTR [rbx]
   140013ab6:	add    al,0x7
   140013ab8:	add    BYTE PTR [rbx+rax*1],cl
   140013abb:	or     al,0x3
   140013abd:	or     al,0x4
   140013abf:	adc    edx,DWORD PTR [rbx]
   140013ac1:	adc    edx,DWORD PTR [rbx]
   140013ac3:	adc    eax,DWORD PTR [rsp+rax*1]
   140013ac6:	(bad)  
   140013ac7:	(bad)  
   140013ac8:	(bad)  
   140013ac9:	(bad)  
   140013aca:	add    BYTE PTR [rdi],cl
   140013acc:	str    WORD PTR [rdi]
   140013acf:	str    WORD PTR [rdi]
   140013ad2:	sldt   WORD PTR [rax]
   140013ad5:	add    BYTE PTR [rdi],al
   140013ad7:	(bad)  
   140013ad8:	(bad)  
   140013ad9:	(bad)  
   140013ada:	(bad)  
   140013adb:	(bad)  
   140013adc:	adc    edx,DWORD PTR [rax]
   140013ade:	adc    BYTE PTR [rdi+rax*1],al
   140013ae1:	adc    edx,DWORD PTR [rax]
   140013ae3:	adc    BYTE PTR [rdi+rax*1],al
   140013ae6:	(bad)  
   140013ae7:	(bad)  
   140013ae8:	(bad)  
   140013ae9:	or     al,0x0
   140013aeb:	(bad)  
   140013aec:	(bad)  
   140013aed:	(bad)  
   140013aee:	(bad)  
   140013aef:	(bad)  
   140013af0:	(bad)  
   140013af1:	adc    al,BYTE PTR [rdi]
   140013af3:	add    BYTE PTR [rdi+rax*1],cl
   140013af6:	(bad)  
   140013af7:	(bad)  
   140013af8:	(bad)  
   140013af9:	(bad)  
   140013afa:	(bad)  
   140013afb:	add    DWORD PTR [rcx],eax
   140013afd:	add    DWORD PTR [rbx],edx
   140013aff:	(bad)  
   140013b00:	add    DWORD PTR [rcx],eax
   140013b02:	adc    eax,DWORD PTR [rdi]
   140013b04:	(bad)  
   140013b05:	(bad)  
   140013b06:	(bad)  
   140013b07:	(bad)  
   140013b08:	(bad)  
   140013b09:	(bad)  
   140013b0a:	(bad)  
   140013b0b:	adc    BYTE PTR [rax],dl
   140013b0d:	adc    BYTE PTR [rax],dl
   140013b0f:	(bad)  
   140013b10:	(bad)  
   140013b11:	(bad)  
   140013b12:	(bad)  
   140013b13:	(bad)  
   140013b14:	(bad)  
   140013b15:	(bad)  
   140013b16:	(bad)  
   140013b17:	(bad)  
   140013b18:	(bad)  
   140013b19:	or     al,0x7
   140013b1b:	(bad)  
   140013b1c:	(bad)  
   140013b1d:	(bad)  
   140013b1e:	(bad)  
   140013b1f:	(bad)  
   140013b20:	(bad)  
   140013b21:	(bad)  
   140013b22:	(bad)  
   140013b23:	(bad)  
   140013b24:	(bad)  
   140013b25:	(bad)  
   140013b26:	(bad)  
   140013b27:	(bad)  
   140013b28:	(bad)  
   140013b29:	(bad)  
   140013b2a:	add    al,BYTE PTR [rdx]
   140013b2c:	add    dl,BYTE PTR [rax]
   140013b2e:	adc    BYTE PTR [rax],dl
   140013b30:	adc    BYTE PTR [rax],dl
   140013b32:	adc    BYTE PTR [rax],al
   140013b34:	adc    BYTE PTR [rax],dl
   140013b36:	adc    BYTE PTR [rdi],al
   140013b38:	(bad)  
	...
   140013b41:	add    BYTE PTR [rax],al
   140013b43:	(bad)  
   140013b44:	add    BYTE PTR [rdi],al
   140013b46:	add    BYTE PTR [rax],al
   140013b48:	add    BYTE PTR [rdi],cl
   140013b4a:	adc    ecx,DWORD PTR [rdi]
   140013b4c:	adc    ecx,DWORD PTR [rdi]
   140013b4e:	adc    ecx,DWORD PTR [rdi]
   140013b50:	adc    ecx,DWORD PTR [rdi]
   140013b52:	add    BYTE PTR [rdi],al
   140013b54:	(bad)  
   140013b55:	(bad)  
   140013b56:	(bad)  
   140013b57:	(bad)  
   140013b58:	(bad)  
   140013b59:	(bad)  
   140013b5a:	(bad)  
   140013b5b:	or     al,0x4
   140013b5d:	add    al,0x7
   140013b5f:	(bad)  
   140013b60:	or     al,0x4
   140013b62:	add    al,0xc
   140013b64:	(bad)  
   140013b65:	(bad)  
   140013b66:	(bad)  
   140013b67:	(bad)  
   140013b68:	(bad)  
   140013b69:	(bad)  
   140013b6a:	adc    BYTE PTR [rdi],al
   140013b6c:	(bad)  
   140013b6d:	(bad)  
   140013b6e:	adc    BYTE PTR [rax],dl
   140013b70:	adc    BYTE PTR [rax],dl
   140013b72:	adc    BYTE PTR [rax],dl
   140013b74:	adc    BYTE PTR [rdi],al
   140013b76:	adc    BYTE PTR [rax],dl
   140013b78:	(bad)  
   140013b79:	(bad)  
   140013b7a:	add    BYTE PTR [rbx],dl
   140013b7c:	adc    edx,DWORD PTR [rbx]
   140013b7e:	adc    edx,DWORD PTR [rbx]
   140013b80:	adc    edx,DWORD PTR [rbx]
   140013b82:	adc    edx,DWORD PTR [rbx]
   140013b84:	add    BYTE PTR [rdi],al
   140013b86:	(bad)  
   140013b87:	(bad)  
   140013b88:	(bad)  
   140013b89:	(bad)  
   140013b8a:	add    BYTE PTR [rax],al
   140013b8c:	add    BYTE PTR [rdi],al
   140013b8e:	(bad)  
   140013b8f:	(bad)  
   140013b90:	(bad)  
   140013b91:	(bad)  
   140013b92:	(bad)  
   140013b93:	(bad)  
   140013b94:	(bad)  
   140013b95:	add    BYTE PTR [rdi],al
   140013b97:	(bad)  
   140013b98:	(bad)  
   140013b99:	(bad)  
   140013b9a:	(bad)  
   140013b9b:	(bad)  
   140013b9c:	(bad)  
   140013b9d:	(bad)  
   140013b9e:	(bad)  
   140013b9f:	add    BYTE PTR [rdi],al
   140013ba1:	(bad)  
   140013ba2:	(bad)  
   140013ba3:	(bad)  
   140013ba4:	(bad)  
   140013ba5:	(bad)  
   140013ba6:	(bad)  
   140013ba7:	(bad)  
   140013ba8:	add    BYTE PTR [rbx],dl
   140013baa:	adc    edx,DWORD PTR [rbx]
   140013bac:	adc    edx,DWORD PTR [rbx]
   140013bae:	add    al,0x13
   140013bb0:	add    BYTE PTR [rax],al
   140013bb2:	adc    eax,DWORD PTR [rsp+rax*1]
   140013bb5:	add    al,0x4
   140013bb7:	(bad)  
   140013bb8:	add    BYTE PTR [rbx],al
   140013bba:	or     al,0x3
   140013bbc:	or     al,0x3
   140013bbe:	add    al,0x4
   140013bc0:	add    al,0x4
   140013bc2:	add    al,0x4
   140013bc4:	add    al,0x0
   140013bc6:	(bad)  
   140013bc7:	(bad)  
   140013bc8:	(bad)  
   140013bc9:	(bad)  
	...
   140013bd2:	add    BYTE PTR [rax],al
   140013bd4:	sldt   WORD PTR [rdi]
   140013bd7:	(bad)  
   140013bd8:	(bad)  
   140013bd9:	(bad)  
   140013bda:	(bad)  
   140013bdb:	(bad)  
   140013bdc:	(bad)  
   140013bdd:	add    al,0x10
   140013bdf:	adc    BYTE PTR [rbx],dl
   140013be1:	(bad)  
   140013be2:	add    al,0x10
   140013be4:	adc    BYTE PTR [rbx],dl
   140013be6:	(bad)  
   140013be7:	(bad)  
   140013be8:	(bad)  
   140013be9:	add    BYTE PTR [rdi],al
   140013beb:	(bad)  
   140013bec:	(bad)  
   140013bed:	(bad)  
   140013bee:	(bad)  
   140013bef:	(bad)  
   140013bf0:	(bad)  
   140013bf1:	(bad)  
   140013bf2:	adc    al,BYTE PTR [rdi]
   140013bf4:	add    BYTE PTR [rdi],al
   140013bf6:	(bad)  
   140013bf7:	(bad)  
   140013bf8:	(bad)  
   140013bf9:	(bad)  
   140013bfa:	(bad)  
   140013bfb:	(bad)  
   140013bfc:	add    DWORD PTR [rcx],eax
   140013bfe:	add    DWORD PTR [rcx],eax
   140013c00:	add    DWORD PTR [rbx],edx
   140013c02:	(bad)  
   140013c03:	(bad)  
   140013c04:	(bad)  
   140013c05:	(bad)  
   140013c06:	(bad)  
   140013c07:	(bad)  
   140013c08:	(bad)  
   140013c09:	(bad)  
   140013c0a:	(bad)  
   140013c0b:	(bad)  
   140013c0c:	adc    BYTE PTR [rax],dl
   140013c0e:	(bad)  
   140013c0f:	(bad)  
   140013c10:	or     al,0xc
   140013c12:	or     al,0x7
   140013c14:	(bad)  
   140013c15:	(bad)  
   140013c16:	(bad)  
   140013c17:	adc    DWORD PTR [rdi],eax
   140013c19:	or     al,0x7
   140013c1b:	(bad)  
   140013c1c:	(bad)  
   140013c1d:	(bad)  
   140013c1e:	(bad)  
	...
   140013c27:	(bad)  
   140013c28:	(bad)  
   140013c29:	(bad)  
   140013c2a:	add    al,BYTE PTR [rdx]
   140013c2c:	add    dl,BYTE PTR [rax]
   140013c2e:	adc    BYTE PTR [rax],dl
   140013c30:	adc    BYTE PTR [rax],dl
   140013c32:	adc    BYTE PTR [rax],al
   140013c34:	adc    BYTE PTR [rax],dl
   140013c36:	adc    BYTE PTR [rdi],al
   140013c38:	(bad)  
   140013c39:	(bad)  
   140013c3a:	add    BYTE PTR [rbx],dl
   140013c3c:	adc    edx,DWORD PTR [rbx]
   140013c3e:	adc    edx,DWORD PTR [rbx]
   140013c40:	adc    edx,DWORD PTR [rbx]
   140013c42:	adc    eax,DWORD PTR [rax]
   140013c44:	(bad)  
   140013c45:	add    BYTE PTR [rdi],al
   140013c47:	add    BYTE PTR [rax],al
   140013c49:	adc    ecx,DWORD PTR [rdi]
   140013c4b:	adc    ecx,DWORD PTR [rdi]
   140013c4d:	adc    ecx,DWORD PTR [rdi]
   140013c4f:	adc    ecx,DWORD PTR [rdi]
   140013c51:	adc    eax,DWORD PTR [rax]
   140013c53:	(bad)  
   140013c54:	(bad)  
   140013c55:	(bad)  
   140013c56:	(bad)  
   140013c57:	(bad)  
   140013c58:	(bad)  
   140013c59:	(bad)  
   140013c5a:	(bad)  
   140013c5b:	add    al,0x4
   140013c5d:	or     al,0x7
   140013c5f:	(bad)  
   140013c60:	(bad)  
   140013c61:	add    al,0x4
   140013c63:	add    al,0x7
   140013c65:	(bad)  
   140013c66:	(bad)  
   140013c67:	(bad)  
   140013c68:	(bad)  
   140013c69:	(bad)  
   140013c6a:	adc    BYTE PTR [rax],dl
   140013c6c:	(bad)  
   140013c6d:	(bad)  
   140013c6e:	(bad)  
   140013c6f:	adc    BYTE PTR [rax],dl
   140013c71:	adc    BYTE PTR [rax],dl
   140013c73:	adc    BYTE PTR [rdi],al
   140013c75:	(bad)  
   140013c76:	(bad)  
   140013c77:	adc    BYTE PTR [rdi],al
   140013c79:	(bad)  
   140013c7a:	add    BYTE PTR [rbx],dl
   140013c7c:	adc    edx,DWORD PTR [rbx]
   140013c7e:	adc    edx,DWORD PTR [rbx]
   140013c80:	adc    edx,DWORD PTR [rbx]
   140013c82:	adc    edx,DWORD PTR [rbx]
   140013c84:	add    BYTE PTR [rdi],al
   140013c86:	(bad)  
   140013c87:	(bad)  
   140013c88:	(bad)  
   140013c89:	(bad)  
   140013c8a:	add    BYTE PTR [rax],al
   140013c8c:	(bad)  
   140013c8d:	add    BYTE PTR [rdi],al
   140013c8f:	(bad)  
   140013c90:	(bad)  
   140013c91:	(bad)  
   140013c92:	(bad)  
   140013c93:	(bad)  
   140013c94:	(bad)  
   140013c95:	add    BYTE PTR [rdi],al
   140013c97:	(bad)  
   140013c98:	(bad)  
   140013c99:	(bad)  
   140013c9a:	(bad)  
   140013c9b:	(bad)  
   140013c9c:	(bad)  
   140013c9d:	(bad)  
   140013c9e:	add    BYTE PTR [rax],al
   140013ca0:	add    BYTE PTR [rdi],al
   140013ca2:	(bad)  
   140013ca3:	(bad)  
   140013ca4:	(bad)  
   140013ca5:	(bad)  
   140013ca6:	(bad)  
   140013ca7:	(bad)  
   140013ca8:	add    BYTE PTR [rbx],dl
   140013caa:	add    BYTE PTR [rax],al
   140013cac:	add    BYTE PTR [rax],al
   140013cae:	add    al,0x13
   140013cb0:	adc    edx,DWORD PTR [rbx]
   140013cb2:	adc    eax,DWORD PTR [rbx+rdx*1]
   140013cb5:	add    al,0x7
   140013cb7:	(bad)  
   140013cb8:	add    BYTE PTR [rbx+rax*1],cl
   140013cbb:	or     al,0x3
   140013cbd:	or     al,0x3
   140013cbf:	or     al,0x3
   140013cc1:	or     al,0x3
   140013cc3:	or     al,0x3
   140013cc5:	add    BYTE PTR [rdi],al
   140013cc7:	(bad)  
   140013cc8:	(bad)  
   140013cc9:	(bad)  
   140013cca:	add    BYTE PTR [rdi],cl
   140013ccc:	str    WORD PTR [rdi]
   140013ccf:	str    WORD PTR [rdi]
   140013cd2:	str    WORD PTR [rdi]
   140013cd5:	add    BYTE PTR [rdi],al
   140013cd7:	(bad)  
   140013cd8:	(bad)  
   140013cd9:	(bad)  
   140013cda:	(bad)  
   140013cdb:	(bad)  
   140013cdc:	add    al,0x10
   140013cde:	adc    BYTE PTR [rbx],dl
   140013ce0:	(bad)  
   140013ce1:	add    al,0x10
   140013ce3:	adc    BYTE PTR [rbx],dl
   140013ce5:	(bad)  
   140013ce6:	(bad)  
   140013ce7:	(bad)  
   140013ce8:	(bad)  
   140013ce9:	add    BYTE PTR [rdi],al
   140013ceb:	(bad)  
   140013cec:	(bad)  
   140013ced:	(bad)  
   140013cee:	(bad)  
   140013cef:	(bad)  
   140013cf0:	(bad)  
   140013cf1:	(bad)  
   140013cf2:	(bad)  
   140013cf3:	(bad)  
   140013cf4:	add    BYTE PTR [rdi],al
   140013cf6:	(bad)  
   140013cf7:	(bad)  
   140013cf8:	(bad)  
   140013cf9:	(bad)  
   140013cfa:	(bad)  
   140013cfb:	(bad)  
   140013cfc:	(bad)  
   140013cfd:	add    DWORD PTR [rcx],eax
   140013cff:	add    DWORD PTR [rbx],edx
   140013d01:	(bad)  
   140013d02:	(bad)  
   140013d03:	(bad)  
   140013d04:	(bad)  
   140013d05:	(bad)  
   140013d06:	(bad)  
   140013d07:	(bad)  
   140013d08:	(bad)  
   140013d09:	(bad)  
   140013d0a:	(bad)  
   140013d0b:	(bad)  
   140013d0c:	(bad)  
   140013d0d:	(bad)  
   140013d0e:	(bad)  
   140013d0f:	or     al,0xd
   140013d11:	or     eax,0x7070c11
   140013d16:	adc    DWORD PTR [rcx],edx
   140013d18:	(bad)  
   140013d19:	or     al,0x7
   140013d1b:	(bad)  
   140013d1c:	(bad)  
   140013d1d:	(bad)  
   140013d1e:	(bad)  
   140013d1f:	add    BYTE PTR [rdi],al
   140013d21:	(bad)  
   140013d22:	(bad)  
   140013d23:	(bad)  
   140013d24:	(bad)  
   140013d25:	(bad)  
   140013d26:	add    BYTE PTR [rdi],al
   140013d28:	(bad)  
   140013d29:	(bad)  
   140013d2a:	add    al,BYTE PTR [rdx]
   140013d2c:	add    al,BYTE PTR [rdx]
   140013d2e:	add    al,BYTE PTR [rdi]
   140013d30:	(bad)  
   140013d31:	(bad)  
   140013d32:	(bad)  
   140013d33:	add    BYTE PTR [rdi],al
   140013d35:	(bad)  
   140013d36:	(bad)  
   140013d37:	(bad)  
   140013d38:	(bad)  
   140013d39:	(bad)  
   140013d3a:	(bad)  
   140013d3b:	add    BYTE PTR [rbx],dl
   140013d3d:	add    BYTE PTR [rax],al
   140013d3f:	add    BYTE PTR [rax],al
   140013d41:	add    BYTE PTR [rbx],dl
   140013d43:	add    BYTE PTR [rax],al
   140013d45:	add    BYTE PTR [rax],al
   140013d47:	(bad)  
   140013d48:	add    BYTE PTR [rdi],cl
   140013d4a:	adc    ecx,DWORD PTR [rdi]
   140013d4c:	add    BYTE PTR [rax],al
   140013d4e:	add    BYTE PTR [rax],al
   140013d50:	add    BYTE PTR [rax],al
   140013d52:	add    BYTE PTR [rdi],al
   140013d54:	(bad)  
   140013d55:	(bad)  
   140013d56:	(bad)  
   140013d57:	(bad)  
   140013d58:	(bad)  
   140013d59:	(bad)  
   140013d5a:	(bad)  
   140013d5b:	add    al,0x4
   140013d5d:	or     al,0x7
   140013d5f:	(bad)  
   140013d60:	(bad)  
   140013d61:	add    al,0x4
   140013d63:	add    al,0x7
   140013d65:	(bad)  
   140013d66:	(bad)  
   140013d67:	(bad)  
   140013d68:	(bad)  
   140013d69:	(bad)  
   140013d6a:	(bad)  
   140013d6b:	adc    BYTE PTR [rax],dl
   140013d6d:	adc    BYTE PTR [rax],dl
   140013d6f:	adc    BYTE PTR [rax],dl
   140013d71:	adc    BYTE PTR [rax],dl
   140013d73:	(bad)  
   140013d74:	(bad)  
   140013d75:	(bad)  
   140013d76:	(bad)  
   140013d77:	(bad)  
   140013d78:	(bad)  
   140013d79:	(bad)  
   140013d7a:	add    BYTE PTR [rbx],dl
   140013d7c:	adc    edx,DWORD PTR [rbx]
   140013d7e:	adc    edx,DWORD PTR [rbx]
   140013d80:	adc    edx,DWORD PTR [rbx]
   140013d82:	adc    edx,DWORD PTR [rbx]
   140013d84:	add    BYTE PTR [rdi],al
   140013d86:	(bad)  
   140013d87:	(bad)  
   140013d88:	(bad)  
   140013d89:	(bad)  
   140013d8a:	add    BYTE PTR [rdi],al
   140013d8c:	(bad)  
   140013d8d:	(bad)  
   140013d8e:	add    BYTE PTR [rax],al
   140013d90:	(bad)  
   140013d91:	(bad)  
   140013d92:	(bad)  
   140013d93:	(bad)  
   140013d94:	add    BYTE PTR [rdi+rax*1],cl
   140013d97:	(bad)  
   140013d98:	(bad)  
   140013d99:	(bad)  
   140013d9a:	(bad)  
   140013d9b:	(bad)  
   140013d9c:	(bad)  
   140013d9d:	(bad)  
   140013d9e:	add    BYTE PTR [rdi],al
   140013da0:	add    BYTE PTR [rdi],al
   140013da2:	(bad)  
   140013da3:	(bad)  
   140013da4:	(bad)  
   140013da5:	(bad)  
   140013da6:	(bad)  
   140013da7:	(bad)  
   140013da8:	add    BYTE PTR [rbx],dl
   140013daa:	adc    edx,DWORD PTR [rbx]
   140013dac:	adc    edx,DWORD PTR [rbx]
   140013dae:	add    al,0x13
   140013db0:	adc    edx,DWORD PTR [rbx]
   140013db2:	adc    eax,DWORD PTR [rsp+rax*1]
   140013db5:	(bad)  
   140013db6:	(bad)  
   140013db7:	(bad)  
   140013db8:	add    BYTE PTR [rbx],al
   140013dba:	or     al,0x0
   140013dbc:	add    BYTE PTR [rax],al
   140013dbe:	add    BYTE PTR [rax],al
   140013dc0:	add    BYTE PTR [rax],al
   140013dc2:	add    BYTE PTR [rbx],al
   140013dc4:	or     al,0x0
   140013dc6:	(bad)  
   140013dc7:	(bad)  
   140013dc8:	(bad)  
   140013dc9:	(bad)  
   140013dca:	add    BYTE PTR [rdi],cl
   140013dcc:	str    WORD PTR [rdi]
   140013dcf:	str    WORD PTR [rdi]
   140013dd2:	sldt   WORD PTR [rax]
   140013dd5:	add    BYTE PTR [rdi],al
   140013dd7:	(bad)  
   140013dd8:	(bad)  
   140013dd9:	(bad)  
   140013dda:	(bad)  
   140013ddb:	add    al,0x10
   140013ddd:	adc    BYTE PTR [rbx],dl
   140013ddf:	(bad)  
   140013de0:	add    al,0x10
   140013de2:	adc    BYTE PTR [rbx],dl
   140013de4:	(bad)  
   140013de5:	(bad)  
   140013de6:	(bad)  
   140013de7:	(bad)  
   140013de8:	(bad)  
   140013de9:	add    BYTE PTR [rdi],al
   140013deb:	adc    al,BYTE PTR [rdi]
   140013ded:	(bad)  
   140013dee:	(bad)  
   140013def:	(bad)  
   140013df0:	(bad)  
   140013df1:	(bad)  
   140013df2:	(bad)  
   140013df3:	(bad)  
   140013df4:	add    BYTE PTR [rdi],al
   140013df6:	(bad)  
   140013df7:	(bad)  
   140013df8:	(bad)  
   140013df9:	(bad)  
   140013dfa:	(bad)  
   140013dfb:	(bad)  
   140013dfc:	add    DWORD PTR [rcx],eax
   140013dfe:	add    DWORD PTR [rcx],eax
   140013e00:	add    DWORD PTR [rbx],edx
   140013e02:	(bad)  
   140013e03:	(bad)  
   140013e04:	(bad)  
   140013e05:	(bad)  
   140013e06:	(bad)  
   140013e07:	(bad)  
   140013e08:	(bad)  
   140013e09:	(bad)  
   140013e0a:	(bad)  
   140013e0b:	(bad)  
   140013e0c:	(bad)  
   140013e0d:	(bad)  
   140013e0e:	or     al,0xd
   140013e10:	or     eax,0x70c110d
   140013e15:	(bad)  
   140013e16:	adc    DWORD PTR [rcx],edx
   140013e18:	(bad)  
   140013e19:	or     al,0xc
   140013e1b:	or     al,0xc
   140013e1d:	or     al,0x7
   140013e1f:	add    BYTE PTR [rdi],al
   140013e21:	movlps QWORD PTR [rdi],xmm1
   140013e24:	adc    ecx,DWORD PTR [rdi]
   140013e26:	add    BYTE PTR [rdi],al
   140013e28:	(bad)  
   140013e29:	(bad)  
   140013e2a:	add    al,BYTE PTR [rdx]
   140013e2c:	add    al,BYTE PTR [rdx]
   140013e2e:	add    al,BYTE PTR [rdx]
   140013e30:	(bad)  
   140013e31:	(bad)  
   140013e32:	(bad)  
   140013e33:	add    BYTE PTR [rdi],al
   140013e35:	(bad)  
   140013e36:	(bad)  
   140013e37:	(bad)  
   140013e38:	(bad)  
   140013e39:	(bad)  
   140013e3a:	(bad)  
   140013e3b:	add    BYTE PTR [rbx],dl
   140013e3d:	adc    edx,DWORD PTR [rbx]
   140013e3f:	adc    edx,DWORD PTR [rbx]
   140013e41:	adc    edx,DWORD PTR [rbx]
   140013e43:	adc    eax,DWORD PTR [rax]
   140013e45:	(bad)  
   140013e46:	(bad)  
   140013e47:	(bad)  
   140013e48:	(bad)  
   140013e49:	add    BYTE PTR [rax],al
   140013e4b:	add    BYTE PTR [rdi],al
   140013e4d:	(bad)  
   140013e4e:	(bad)  
   140013e4f:	(bad)  
   140013e50:	(bad)  
   140013e51:	(bad)  
   140013e52:	(bad)  
   140013e53:	(bad)  
   140013e54:	add    BYTE PTR [rax],al
   140013e56:	add    BYTE PTR [rdi],al
   140013e58:	(bad)  
   140013e59:	(bad)  
   140013e5a:	(bad)  
   140013e5b:	(bad)  
   140013e5c:	add    al,0x4
   140013e5e:	(bad)  
   140013e5f:	(bad)  
   140013e60:	or     al,0x4
   140013e62:	add    al,0xc
   140013e64:	(bad)  
   140013e65:	(bad)  
   140013e66:	(bad)  
   140013e67:	(bad)  
   140013e68:	(bad)  
   140013e69:	(bad)  
   140013e6a:	(bad)  
   140013e6b:	(bad)  
   140013e6c:	adc    BYTE PTR [rax],dl
   140013e6e:	adc    BYTE PTR [rax],dl
   140013e70:	adc    BYTE PTR [rax],dl
   140013e72:	adc    BYTE PTR [rdi],al
   140013e74:	(bad)  
   140013e75:	(bad)  
   140013e76:	(bad)  
   140013e77:	(bad)  
   140013e78:	(bad)  
   140013e79:	(bad)  
   140013e7a:	add    BYTE PTR [rbx],dl
   140013e7c:	adc    edx,DWORD PTR [rbx]
   140013e7e:	adc    edx,DWORD PTR [rbx]
   140013e80:	adc    eax,DWORD PTR [rax]
   140013e82:	add    BYTE PTR [rax],al
   140013e84:	add    BYTE PTR [rdi],al
   140013e86:	(bad)  
   140013e87:	(bad)  
   140013e88:	(bad)  
   140013e89:	(bad)  
   140013e8a:	(bad)  
   140013e8b:	(bad)  
   140013e8c:	(bad)  
   140013e8d:	(bad)  
   140013e8e:	(bad)  
   140013e8f:	(bad)  
   140013e90:	add    BYTE PTR [rax],al
   140013e92:	add    BYTE PTR [rax],al
   140013e94:	or     al,0x7
   140013e96:	(bad)  
   140013e97:	(bad)  
   140013e98:	(bad)  
   140013e99:	(bad)  
   140013e9a:	(bad)  
   140013e9b:	(bad)  
   140013e9c:	(bad)  
   140013e9d:	add    BYTE PTR [rax],al
   140013e9f:	(bad)  
   140013ea0:	add    BYTE PTR [rax],al
   140013ea2:	(bad)  
   140013ea3:	(bad)  
   140013ea4:	(bad)  
   140013ea5:	(bad)  
   140013ea6:	(bad)  
   140013ea7:	(bad)  
   140013ea8:	add    BYTE PTR [rbx],dl
   140013eaa:	add    BYTE PTR [rax],al
   140013eac:	adc    eax,DWORD PTR [rax]
   140013eae:	add    al,0x4
   140013eb0:	add    al,0x4
   140013eb2:	add    al,0x4
   140013eb4:	(bad)  
   140013eb5:	(bad)  
   140013eb6:	(bad)  
   140013eb7:	(bad)  
   140013eb8:	add    BYTE PTR [rbx+rax*1],cl
   140013ebb:	add    BYTE PTR [rdi],al
   140013ebd:	(bad)  
   140013ebe:	(bad)  
   140013ebf:	(bad)  
   140013ec0:	(bad)  
   140013ec1:	(bad)  
   140013ec2:	add    BYTE PTR [rbx+rax*1],cl
   140013ec5:	add    BYTE PTR [rdi],al
   140013ec7:	(bad)  
   140013ec8:	(bad)  
   140013ec9:	(bad)  
	...
   140013ed2:	add    BYTE PTR [rax],al
   140013ed4:	sldt   WORD PTR [rdi]
   140013ed7:	(bad)  
   140013ed8:	(bad)  
   140013ed9:	(bad)  
   140013eda:	add    al,0x10
   140013edc:	adc    BYTE PTR [rbx],dl
   140013ede:	(bad)  
   140013edf:	add    al,0x10
   140013ee1:	adc    BYTE PTR [rbx],dl
   140013ee3:	(bad)  
   140013ee4:	(bad)  
   140013ee5:	(bad)  
   140013ee6:	(bad)  
   140013ee7:	(bad)  
   140013ee8:	(bad)  
   140013ee9:	add    BYTE PTR [rdi],al
   140013eeb:	adc    eax,DWORD PTR [rdi]
   140013eed:	(bad)  
   140013eee:	(bad)  
   140013eef:	(bad)  
   140013ef0:	(bad)  
   140013ef1:	(bad)  
   140013ef2:	(bad)  
   140013ef3:	(bad)  
   140013ef4:	add    BYTE PTR [rdi],al
   140013ef6:	(bad)  
   140013ef7:	(bad)  
   140013ef8:	(bad)  
   140013ef9:	(bad)  
   140013efa:	(bad)  
   140013efb:	add    DWORD PTR [rcx],eax
   140013efd:	add    DWORD PTR [rbx],edx
   140013eff:	(bad)  
   140013f00:	add    DWORD PTR [rbx],edx
   140013f02:	(bad)  
   140013f03:	(bad)  
   140013f04:	(bad)  
   140013f05:	(bad)  
   140013f06:	(bad)  
   140013f07:	(bad)  
   140013f08:	(bad)  
   140013f09:	(bad)  
   140013f0a:	(bad)  
   140013f0b:	(bad)  
   140013f0c:	(bad)  
   140013f0d:	or     al,0xd
   140013f0f:	or     eax,0xc11130d
   140013f14:	(bad)  
   140013f15:	(bad)  
   140013f16:	(bad)  
   140013f17:	adc    DWORD PTR [rdi],eax
   140013f19:	or     al,0x7
   140013f1b:	(bad)  
   140013f1c:	(bad)  
   140013f1d:	(bad)  
   140013f1e:	(bad)  
   140013f1f:	add    BYTE PTR [rdi],al
   140013f21:	adc    ecx,DWORD PTR [rdi]
   140013f23:	adc    ecx,DWORD PTR [rdi]
   140013f25:	adc    eax,DWORD PTR [rax]
   140013f27:	(bad)  
   140013f28:	(bad)  
   140013f29:	(bad)  
   140013f2a:	add    al,BYTE PTR [rdx]
   140013f2c:	add    al,BYTE PTR [rdx]
   140013f2e:	add    al,BYTE PTR [rdi]
   140013f30:	(bad)  
   140013f31:	(bad)  
   140013f32:	(bad)  
   140013f33:	add    BYTE PTR [rdi],al
   140013f35:	(bad)  
   140013f36:	(bad)  
   140013f37:	(bad)  
   140013f38:	(bad)  
   140013f39:	(bad)  
   140013f3a:	(bad)  
   140013f3b:	(bad)  
   140013f3c:	add    BYTE PTR [rbx],dl
   140013f3e:	add    BYTE PTR [rax],al
   140013f40:	add    BYTE PTR [rax],al
   140013f42:	add    BYTE PTR [rbx],dl
   140013f44:	add    BYTE PTR [rdi],al
   140013f46:	(bad)  
   140013f47:	(bad)  
   140013f48:	(bad)  
   140013f49:	(bad)  
   140013f4a:	(bad)  
   140013f4b:	(bad)  
   140013f4c:	(bad)  
   140013f4d:	(bad)  
   140013f4e:	(bad)  
   140013f4f:	(bad)  
   140013f50:	(bad)  
   140013f51:	(bad)  
   140013f52:	(bad)  
   140013f53:	(bad)  
   140013f54:	(bad)  
   140013f55:	add    BYTE PTR [rax],al
   140013f57:	(bad)  
   140013f58:	(bad)  
   140013f59:	(bad)  
   140013f5a:	(bad)  
   140013f5b:	(bad)  
   140013f5c:	(bad)  
   140013f5d:	add    al,0x4
   140013f5f:	add    al,0x4
   140013f61:	add    al,0xc
   140013f63:	(bad)  
   140013f64:	(bad)  
   140013f65:	(bad)  
   140013f66:	(bad)  
   140013f67:	(bad)  
   140013f68:	(bad)  
   140013f69:	(bad)  
   140013f6a:	(bad)  
   140013f6b:	(bad)  
   140013f6c:	(bad)  
   140013f6d:	(bad)  
   140013f6e:	(bad)  
   140013f6f:	(bad)  
   140013f70:	(bad)  
   140013f71:	adc    BYTE PTR [rax],dl
   140013f73:	adc    BYTE PTR [rdi],al
   140013f75:	(bad)  
   140013f76:	(bad)  
   140013f77:	(bad)  
   140013f78:	(bad)  
   140013f79:	(bad)  
   140013f7a:	add    BYTE PTR [rbx],dl
   140013f7c:	adc    edx,DWORD PTR [rbx]
   140013f7e:	adc    edx,DWORD PTR [rbx]
   140013f80:	adc    eax,DWORD PTR [rax]
   140013f82:	adc    eax,DWORD PTR [rax]
   140013f84:	(bad)  
   140013f85:	(bad)  
   140013f86:	(bad)  
   140013f87:	(bad)  
   140013f88:	(bad)  
   140013f89:	(bad)  
   140013f8a:	(bad)  
   140013f8b:	(bad)  
   140013f8c:	(bad)  
   140013f8d:	(bad)  
   140013f8e:	(bad)  
   140013f8f:	(bad)  
   140013f90:	(bad)  
   140013f91:	(bad)  
   140013f92:	(bad)  
   140013f93:	(bad)  
   140013f94:	(bad)  
   140013f95:	(bad)  
   140013f96:	(bad)  
   140013f97:	(bad)  
   140013f98:	(bad)  
   140013f99:	(bad)  
   140013f9a:	(bad)  
   140013f9b:	(bad)  
   140013f9c:	(bad)  
   140013f9d:	add    BYTE PTR [rdi],al
   140013f9f:	(bad)  
   140013fa0:	(bad)  
   140013fa1:	add    BYTE PTR [rdi],al
   140013fa3:	(bad)  
   140013fa4:	(bad)  
   140013fa5:	(bad)  
   140013fa6:	(bad)  
   140013fa7:	(bad)  
   140013fa8:	add    BYTE PTR [rbx],dl
   140013faa:	adc    edx,DWORD PTR [rbx]
   140013fac:	adc    eax,DWORD PTR [rax]
   140013fae:	adc    eax,DWORD PTR [rax]
   140013fb0:	(bad)  
   140013fb1:	(bad)  
   140013fb2:	(bad)  
   140013fb3:	(bad)  
   140013fb4:	(bad)  
   140013fb5:	(bad)  
   140013fb6:	(bad)  
   140013fb7:	(bad)  
   140013fb8:	add    BYTE PTR [rbx],al
   140013fba:	or     al,0x3
   140013fbc:	add    BYTE PTR [rdi],cl
   140013fbe:	add    BYTE PTR [rax],al
   140013fc0:	str    WORD PTR [rbx+rax*1]
   140013fc4:	or     al,0x0
   140013fc6:	(bad)  
   140013fc7:	(bad)  
   140013fc8:	(bad)  
   140013fc9:	(bad)  
   140013fca:	(bad)  
   140013fcb:	(bad)  
   140013fcc:	add    BYTE PTR [rdi],cl
   140013fce:	str    WORD PTR [rdi]
   140013fd1:	str    WORD PTR [rdi]
   140013fd4:	sldt   WORD PTR [rdi]
   140013fd7:	(bad)  
   140013fd8:	(bad)  
   140013fd9:	(bad)  
   140013fda:	adc    edx,DWORD PTR [rbx]
   140013fdc:	adc    eax,DWORD PTR [rdi]
   140013fde:	(bad)  
   140013fdf:	adc    edx,DWORD PTR [rbx]
   140013fe1:	adc    eax,DWORD PTR [rdi]
   140013fe3:	(bad)  
   140013fe4:	(bad)  
   140013fe5:	(bad)  
   140013fe6:	(bad)  
   140013fe7:	(bad)  
   140013fe8:	(bad)  
   140013fe9:	or     al,0x0
   140013feb:	adc    dl,BYTE PTR [rbx]
   140013fed:	(bad)  
   140013fee:	(bad)  
   140013fef:	(bad)  
   140013ff0:	(bad)  
   140013ff1:	(bad)  
   140013ff2:	(bad)  
   140013ff3:	add    BYTE PTR [rdi+rax*1],cl
   140013ff6:	(bad)  
   140013ff7:	(bad)  
   140013ff8:	(bad)  
   140013ff9:	add    DWORD PTR [rcx],eax
   140013ffb:	add    DWORD PTR [rcx],eax
   140013ffd:	adc    eax,DWORD PTR [rdi]
   140013fff:	(bad)  
   140014000:	(bad)  
   140014001:	add    DWORD PTR [rcx],eax
   140014003:	adc    eax,DWORD PTR [rdi]
   140014005:	(bad)  
   140014006:	(bad)  
   140014007:	(bad)  
   140014008:	(bad)  
   140014009:	(bad)  
   14001400a:	(bad)  
   14001400b:	(bad)  
   14001400c:	or     al,0x7
   14001400e:	or     al,0xd
   140014010:	adc    edx,DWORD PTR [rcx]
   140014012:	or     al,0x10
   140014014:	(bad)  
   140014015:	(bad)  
   140014016:	(bad)  
   140014017:	(bad)  
   140014018:	(bad)  
   140014019:	or     al,0x7
   14001401b:	(bad)  
   14001401c:	(bad)  
   14001401d:	(bad)  
   14001401e:	(bad)  
   14001401f:	add    BYTE PTR [rdi],al
   140014021:	movlps QWORD PTR [rdi],xmm1
   140014024:	adc    ecx,DWORD PTR [rdi]
   140014026:	add    BYTE PTR [rdi],al
   140014028:	(bad)  
	...
   140014031:	add    BYTE PTR [rax],al
   140014033:	add    BYTE PTR [rdi],al
   140014035:	(bad)  
   140014036:	(bad)  
   140014037:	(bad)  
   140014038:	(bad)  
   140014039:	(bad)  
   14001403a:	(bad)  
   14001403b:	(bad)  
   14001403c:	add    BYTE PTR [rbx],dl
   14001403e:	adc    edx,DWORD PTR [rbx]
   140014040:	adc    edx,DWORD PTR [rbx]
   140014042:	adc    edx,DWORD PTR [rbx]
   140014044:	adc    eax,DWORD PTR [rax]
   140014046:	(bad)  
   140014047:	(bad)  
   140014048:	(bad)  
   140014049:	(bad)  
   14001404a:	(bad)  
   14001404b:	(bad)  
   14001404c:	(bad)  
   14001404d:	(bad)  
   14001404e:	(bad)  
   14001404f:	add    BYTE PTR [rdi],al
   140014051:	(bad)  
   140014052:	(bad)  
   140014053:	(bad)  
   140014054:	add    BYTE PTR [rdi],al
   140014056:	add    BYTE PTR [rdi],al
   140014058:	(bad)  
   140014059:	(bad)  
   14001405a:	(bad)  
   14001405b:	(bad)  
   14001405c:	(bad)  
   14001405d:	(bad)  
   14001405e:	(bad)  
   14001405f:	(bad)  
   140014060:	(bad)  
   140014061:	(bad)  
   140014062:	(bad)  
   140014063:	(bad)  
   140014064:	(bad)  
   140014065:	(bad)  
   140014066:	(bad)  
   140014067:	(bad)  
   140014068:	(bad)  
   140014069:	(bad)  
   14001406a:	(bad)  
   14001406b:	(bad)  
   14001406c:	(bad)  
   14001406d:	(bad)  
   14001406e:	(bad)  
   14001406f:	(bad)  
   140014070:	adc    BYTE PTR [rax],dl
   140014072:	adc    BYTE PTR [rax],dl
   140014074:	adc    BYTE PTR [rdi],al
   140014076:	(bad)  
   140014077:	(bad)  
   140014078:	(bad)  
   140014079:	(bad)  
   14001407a:	add    BYTE PTR [rbx],dl
   14001407c:	adc    edx,DWORD PTR [rbx]
   14001407e:	adc    edx,DWORD PTR [rbx]
   140014080:	adc    eax,DWORD PTR [rax]
   140014082:	add    BYTE PTR [rdi],al
   140014084:	(bad)  
   140014085:	(bad)  
   140014086:	(bad)  
   140014087:	(bad)  
   140014088:	(bad)  
   140014089:	(bad)  
   14001408a:	(bad)  
   14001408b:	(bad)  
   14001408c:	(bad)  
   14001408d:	(bad)  
   14001408e:	(bad)  
   14001408f:	(bad)  
   140014090:	(bad)  
   140014091:	(bad)  
   140014092:	(bad)  
   140014093:	(bad)  
   140014094:	(bad)  
   140014095:	(bad)  
   140014096:	(bad)  
   140014097:	(bad)  
   140014098:	(bad)  
   140014099:	(bad)  
   14001409a:	(bad)  
   14001409b:	(bad)  
   14001409c:	(bad)  
   14001409d:	add    BYTE PTR [rdi],al
   14001409f:	(bad)  
   1400140a0:	(bad)  
   1400140a1:	add    BYTE PTR [rdi],al
   1400140a3:	(bad)  
   1400140a4:	(bad)  
   1400140a5:	(bad)  
   1400140a6:	(bad)  
   1400140a7:	(bad)  
   1400140a8:	add    BYTE PTR [rbx],dl
   1400140aa:	adc    edx,DWORD PTR [rbx]
   1400140ac:	adc    eax,DWORD PTR [rax]
   1400140ae:	add    BYTE PTR [rdi],al
   1400140b0:	(bad)  
   1400140b1:	(bad)  
   1400140b2:	(bad)  
   1400140b3:	(bad)  
   1400140b4:	(bad)  
   1400140b5:	(bad)  
   1400140b6:	(bad)  
   1400140b7:	(bad)  
   1400140b8:	(bad)  
   1400140b9:	add    BYTE PTR [rax],al
   1400140bb:	add    BYTE PTR [rax],al
   1400140bd:	add    BYTE PTR [rdi],cl
   1400140bf:	sldt   WORD PTR [rax]
   1400140c2:	add    BYTE PTR [rax],al
   1400140c4:	add    BYTE PTR [rdi],al
   1400140c6:	(bad)  
   1400140c7:	(bad)  
   1400140c8:	(bad)  
   1400140c9:	(bad)  
   1400140ca:	(bad)  
   1400140cb:	(bad)  
	...
   1400140d4:	add    BYTE PTR [rax],al
   1400140d6:	(bad)  
   1400140d7:	(bad)  
   1400140d8:	(bad)  
   1400140d9:	(bad)  
   1400140da:	(bad)  
   1400140db:	(bad)  
   1400140dc:	(bad)  
   1400140dd:	(bad)  
   1400140de:	(bad)  
   1400140df:	(bad)  
   1400140e0:	(bad)  
   1400140e1:	(bad)  
   1400140e2:	(bad)  
   1400140e3:	(bad)  
   1400140e4:	(bad)  
   1400140e5:	(bad)  
   1400140e6:	(bad)  
   1400140e7:	(bad)  
   1400140e8:	(bad)  
   1400140e9:	(bad)  
   1400140ea:	add    BYTE PTR [rdx+rdx*1],cl
   1400140ed:	adc    edx,DWORD PTR [rdx]
   1400140ef:	(bad)  
   1400140f0:	(bad)  
   1400140f1:	(bad)  
   1400140f2:	or     al,0x0
   1400140f4:	(bad)  
   1400140f5:	(bad)  
   1400140f6:	(bad)  
   1400140f7:	(bad)  
   1400140f8:	add    DWORD PTR [rcx],eax
   1400140fa:	add    DWORD PTR [rcx],eax
   1400140fc:	adc    eax,DWORD PTR [rdi]
   1400140fe:	(bad)  
   1400140ff:	(bad)  
   140014100:	(bad)  
   140014101:	(bad)  
   140014102:	add    DWORD PTR [rcx],eax
   140014104:	adc    eax,DWORD PTR [rdi]
   140014106:	(bad)  
   140014107:	(bad)  
   140014108:	(bad)  
   140014109:	(bad)  
   14001410a:	(bad)  
   14001410b:	or     al,0x7
   14001410d:	pi2fw  mm1,QWORD PTR [rcx+rdx*1]
   140014112:	adc    BYTE PTR [rax],dl
   140014114:	adc    BYTE PTR [rsi],cl
   140014116:	(bad)  
   140014117:	(bad)  
   140014118:	(bad)  
   140014119:	or     al,0x7
   14001411b:	(bad)  
   14001411c:	(bad)  
   14001411d:	(bad)  
   14001411e:	(bad)  
   14001411f:	add    BYTE PTR [rdi+rax*1],cl
   140014122:	or     al,0x0
   140014124:	add    BYTE PTR [rax],al
   140014126:	(bad)  
   140014127:	(bad)  
   140014128:	(bad)  
   140014129:	(bad)  
   14001412a:	add    al,BYTE PTR [rdx]
   14001412c:	add    al,BYTE PTR [rdi]
   14001412e:	(bad)  
   14001412f:	(bad)  
   140014130:	(bad)  
   140014131:	(bad)  
   140014132:	(bad)  
   140014133:	(bad)  
   140014134:	(bad)  
   140014135:	(bad)  
   140014136:	(bad)  
   140014137:	(bad)  
   140014138:	(bad)  
   140014139:	(bad)  
   14001413a:	(bad)  
   14001413b:	(bad)  
   14001413c:	(bad)  
	...
   140014145:	add    BYTE PTR [rdi],al
   140014147:	(bad)  
   140014148:	(bad)  
   140014149:	(bad)  
   14001414a:	(bad)  
   14001414b:	(bad)  
   14001414c:	(bad)  
   14001414d:	(bad)  
   14001414e:	(bad)  
   14001414f:	(bad)  
   140014150:	add    BYTE PTR [rax],al
   140014152:	add    BYTE PTR [rax],al
   140014154:	(bad)  
   140014155:	(bad)  
   140014156:	(bad)  
   140014157:	(bad)  
   140014158:	(bad)  
   140014159:	(bad)  
   14001415a:	(bad)  
   14001415b:	(bad)  
   14001415c:	(bad)  
   14001415d:	(bad)  
   14001415e:	(bad)  
   14001415f:	(bad)  
   140014160:	(bad)  
   140014161:	(bad)  
   140014162:	(bad)  
   140014163:	(bad)  
   140014164:	(bad)  
   140014165:	(bad)  
   140014166:	(bad)  
   140014167:	(bad)  
   140014168:	(bad)  
   140014169:	(bad)  
   14001416a:	(bad)  
   14001416b:	(bad)  
   14001416c:	(bad)  
   14001416d:	(bad)  
   14001416e:	(bad)  
   14001416f:	(bad)  
   140014170:	adc    BYTE PTR [rax],dl
   140014172:	adc    BYTE PTR [rax],dl
   140014174:	(bad)  
   140014175:	(bad)  
   140014176:	(bad)  
   140014177:	(bad)  
   140014178:	(bad)  
   140014179:	(bad)  
	...
   140014182:	(bad)  
   140014183:	(bad)  
   140014184:	(bad)  
   140014185:	(bad)  
   140014186:	(bad)  
   140014187:	(bad)  
   140014188:	(bad)  
   140014189:	(bad)  
   14001418a:	(bad)  
   14001418b:	(bad)  
   14001418c:	(bad)  
   14001418d:	(bad)  
   14001418e:	(bad)  
   14001418f:	(bad)  
   140014190:	(bad)  
   140014191:	(bad)  
   140014192:	(bad)  
   140014193:	(bad)  
   140014194:	(bad)  
   140014195:	(bad)  
   140014196:	(bad)  
   140014197:	(bad)  
   140014198:	(bad)  
   140014199:	(bad)  
   14001419a:	(bad)  
   14001419b:	(bad)  
   14001419c:	(bad)  
   14001419d:	add    BYTE PTR [rdi],al
   14001419f:	(bad)  
   1400141a0:	(bad)  
   1400141a1:	add    BYTE PTR [rdi],al
   1400141a3:	(bad)  
   1400141a4:	(bad)  
   1400141a5:	(bad)  
   1400141a6:	(bad)  
   1400141a7:	(bad)  
   1400141a8:	add    BYTE PTR [rax],al
   1400141aa:	add    BYTE PTR [rax],al
   1400141ac:	add    BYTE PTR [rax],al
   1400141ae:	(bad)  
   1400141af:	(bad)  
   1400141b0:	(bad)  
   1400141b1:	(bad)  
   1400141b2:	(bad)  
   1400141b3:	(bad)  
   1400141b4:	(bad)  
   1400141b5:	(bad)  
   1400141b6:	(bad)  
   1400141b7:	(bad)  
   1400141b8:	(bad)  
   1400141b9:	(bad)  
   1400141ba:	(bad)  
   1400141bb:	(bad)  
   1400141bc:	(bad)  
   1400141bd:	add    BYTE PTR [rax],al
   1400141bf:	add    BYTE PTR [rax],al
   1400141c1:	(bad)  
   1400141c2:	(bad)  
   1400141c3:	(bad)  
   1400141c4:	(bad)  
   1400141c5:	(bad)  
   1400141c6:	(bad)  
   1400141c7:	(bad)  
   1400141c8:	(bad)  
   1400141c9:	(bad)  
   1400141ca:	(bad)  
   1400141cb:	(bad)  
   1400141cc:	(bad)  
   1400141cd:	(bad)  
   1400141ce:	(bad)  
   1400141cf:	(bad)  
   1400141d0:	(bad)  
   1400141d1:	(bad)  
   1400141d2:	(bad)  
   1400141d3:	(bad)  
   1400141d4:	(bad)  
   1400141d5:	(bad)  
   1400141d6:	(bad)  
   1400141d7:	(bad)  
   1400141d8:	(bad)  
   1400141d9:	(bad)  
   1400141da:	(bad)  
   1400141db:	(bad)  
   1400141dc:	(bad)  
   1400141dd:	(bad)  
   1400141de:	(bad)  
   1400141df:	(bad)  
   1400141e0:	(bad)  
   1400141e1:	(bad)  
   1400141e2:	(bad)  
   1400141e3:	(bad)  
   1400141e4:	(bad)  
   1400141e5:	(bad)  
   1400141e6:	(bad)  
   1400141e7:	(bad)  
   1400141e8:	(bad)  
   1400141e9:	(bad)  
   1400141ea:	(bad)  
   1400141eb:	add    BYTE PTR [rax],al
   1400141ed:	(bad)  
   1400141ee:	(bad)  
   1400141ef:	(bad)  
   1400141f0:	(bad)  
   1400141f1:	add    BYTE PTR [rax],al
   1400141f3:	(bad)  
   1400141f4:	(bad)  
   1400141f5:	(bad)  
   1400141f6:	(bad)  
   1400141f7:	(bad)  
   1400141f8:	add    DWORD PTR [rcx],eax
   1400141fa:	adc    eax,DWORD PTR [rdi]
   1400141fc:	(bad)  
   1400141fd:	(bad)  
   1400141fe:	(bad)  
   1400141ff:	(bad)  
   140014200:	(bad)  
   140014201:	(bad)  
   140014202:	(bad)  
   140014203:	add    DWORD PTR [rcx],eax
   140014205:	adc    eax,DWORD PTR [rdi]
   140014207:	(bad)  
   140014208:	(bad)  
   140014209:	(bad)  
   14001420a:	or     al,0x7
   14001420c:	(bad)  
   14001420d:	movlps QWORD PTR [rbx],xmm2
   140014210:	or     al,0x7
   140014212:	adc    BYTE PTR [rax],dl
   140014214:	adc    BYTE PTR [rax],dl
   140014216:	(bad)  
   140014217:	(bad)  
   140014218:	(bad)  
   140014219:	or     al,0x7
   14001421b:	(bad)  
   14001421c:	(bad)  
   14001421d:	(bad)  
   14001421e:	(bad)  
   14001421f:	(bad)  
   140014220:	add    BYTE PTR [rax],al
   140014222:	add    BYTE PTR [rdi],al
   140014224:	(bad)  
   140014225:	(bad)  
   140014226:	(bad)  
   140014227:	(bad)  
   140014228:	(bad)  
   140014229:	(bad)  
   14001422a:	add    al,BYTE PTR [rdx]
   14001422c:	(bad)  
   14001422d:	(bad)  
   14001422e:	(bad)  
   14001422f:	(bad)  
   140014230:	(bad)  
   140014231:	(bad)  
   140014232:	(bad)  
   140014233:	(bad)  
   140014234:	(bad)  
   140014235:	(bad)  
   140014236:	(bad)  
   140014237:	(bad)  
   140014238:	(bad)  
   140014239:	(bad)  
   14001423a:	(bad)  
   14001423b:	(bad)  
   14001423c:	(bad)  
   14001423d:	(bad)  
   14001423e:	(bad)  
   14001423f:	(bad)  
   140014240:	(bad)  
   140014241:	(bad)  
   140014242:	(bad)  
   140014243:	(bad)  
   140014244:	(bad)  
   140014245:	(bad)  
   140014246:	(bad)  
   140014247:	(bad)  
   140014248:	(bad)  
   140014249:	(bad)  
   14001424a:	(bad)  
   14001424b:	(bad)  
   14001424c:	(bad)  
   14001424d:	(bad)  
   14001424e:	(bad)  
   14001424f:	(bad)  
   140014250:	(bad)  
   140014251:	(bad)  
   140014252:	(bad)  
   140014253:	(bad)  
   140014254:	(bad)  
   140014255:	(bad)  
   140014256:	(bad)  
   140014257:	(bad)  
   140014258:	(bad)  
   140014259:	(bad)  
   14001425a:	(bad)  
   14001425b:	(bad)  
   14001425c:	(bad)  
   14001425d:	(bad)  
   14001425e:	(bad)  
   14001425f:	(bad)  
   140014260:	(bad)  
   140014261:	(bad)  
   140014262:	(bad)  
   140014263:	(bad)  
   140014264:	(bad)  
   140014265:	(bad)  
   140014266:	(bad)  
   140014267:	(bad)  
   140014268:	(bad)  
   140014269:	(bad)  
   14001426a:	(bad)  
   14001426b:	(bad)  
   14001426c:	(bad)  
   14001426d:	(bad)  
   14001426e:	(bad)  
   14001426f:	(bad)  
   140014270:	(bad)  
   140014271:	adc    BYTE PTR [rax],dl
   140014273:	adc    BYTE PTR [rdi],al
   140014275:	(bad)  
   140014276:	(bad)  
   140014277:	(bad)  
   140014278:	(bad)  
   140014279:	(bad)  
   14001427a:	(bad)  
   14001427b:	(bad)  
   14001427c:	(bad)  
   14001427d:	(bad)  
   14001427e:	(bad)  
   14001427f:	(bad)  
   140014280:	(bad)  
   140014281:	(bad)  
   140014282:	(bad)  
   140014283:	(bad)  
   140014284:	(bad)  
   140014285:	(bad)  
   140014286:	(bad)  
   140014287:	(bad)  
   140014288:	(bad)  
   140014289:	(bad)  
   14001428a:	(bad)  
   14001428b:	(bad)  
   14001428c:	(bad)  
   14001428d:	(bad)  
   14001428e:	(bad)  
   14001428f:	(bad)  
   140014290:	(bad)  
   140014291:	(bad)  
   140014292:	(bad)  
   140014293:	(bad)  
   140014294:	(bad)  
   140014295:	(bad)  
   140014296:	(bad)  
   140014297:	(bad)  
   140014298:	(bad)  
   140014299:	(bad)  
   14001429a:	(bad)  
   14001429b:	(bad)  
   14001429c:	(bad)  
   14001429d:	(bad)  
   14001429e:	(bad)  
   14001429f:	(bad)  
   1400142a0:	(bad)  
   1400142a1:	(bad)  
   1400142a2:	(bad)  
   1400142a3:	(bad)  
   1400142a4:	(bad)  
   1400142a5:	(bad)  
   1400142a6:	(bad)  
   1400142a7:	(bad)  
   1400142a8:	(bad)  
   1400142a9:	(bad)  
   1400142aa:	(bad)  
   1400142ab:	(bad)  
   1400142ac:	(bad)  
   1400142ad:	(bad)  
   1400142ae:	(bad)  
   1400142af:	(bad)  
   1400142b0:	(bad)  
   1400142b1:	(bad)  
   1400142b2:	(bad)  
   1400142b3:	(bad)  
   1400142b4:	(bad)  
   1400142b5:	(bad)  
   1400142b6:	(bad)  
   1400142b7:	(bad)  
   1400142b8:	(bad)  
   1400142b9:	(bad)  
   1400142ba:	(bad)  
   1400142bb:	(bad)  
   1400142bc:	(bad)  
   1400142bd:	(bad)  
   1400142be:	(bad)  
   1400142bf:	(bad)  
   1400142c0:	(bad)  
   1400142c1:	(bad)  
   1400142c2:	(bad)  
   1400142c3:	(bad)  
   1400142c4:	(bad)  
   1400142c5:	(bad)  
   1400142c6:	(bad)  
   1400142c7:	(bad)  
   1400142c8:	(bad)  
   1400142c9:	(bad)  
   1400142ca:	(bad)  
   1400142cb:	(bad)  
   1400142cc:	(bad)  
   1400142cd:	(bad)  
   1400142ce:	(bad)  
   1400142cf:	(bad)  
   1400142d0:	(bad)  
   1400142d1:	(bad)  
   1400142d2:	(bad)  
   1400142d3:	(bad)  
   1400142d4:	(bad)  
   1400142d5:	(bad)  
   1400142d6:	(bad)  
   1400142d7:	(bad)  
   1400142d8:	(bad)  
   1400142d9:	(bad)  
   1400142da:	(bad)  
   1400142db:	(bad)  
   1400142dc:	(bad)  
   1400142dd:	(bad)  
   1400142de:	(bad)  
   1400142df:	(bad)  
   1400142e0:	(bad)  
   1400142e1:	(bad)  
   1400142e2:	(bad)  
   1400142e3:	(bad)  
   1400142e4:	(bad)  
   1400142e5:	(bad)  
   1400142e6:	(bad)  
   1400142e7:	(bad)  
   1400142e8:	(bad)  
   1400142e9:	(bad)  
   1400142ea:	(bad)  
   1400142eb:	(bad)  
   1400142ec:	or     al,0x0
   1400142ee:	add    BYTE PTR [rax],al
   1400142f0:	add    BYTE PTR [rdi+rax*1],cl
   1400142f3:	(bad)  
   1400142f4:	(bad)  
   1400142f5:	(bad)  
   1400142f6:	(bad)  
   1400142f7:	(bad)  
   1400142f8:	(bad)  
   1400142f9:	(bad)  
   1400142fa:	(bad)  
   1400142fb:	(bad)  
   1400142fc:	(bad)  
   1400142fd:	(bad)  
   1400142fe:	(bad)  
   1400142ff:	(bad)  
   140014300:	(bad)  
   140014301:	(bad)  
   140014302:	(bad)  
   140014303:	(bad)  
   140014304:	(bad)  
   140014305:	(bad)  
   140014306:	(bad)  
   140014307:	(bad)  
   140014308:	(bad)  
   140014309:	or     al,0x7
   14001430b:	(bad)  
   14001430c:	movlps QWORD PTR [rbx],xmm2
   14001430f:	or     al,0x7
   140014311:	(bad)  
   140014312:	(bad)  
   140014313:	adc    BYTE PTR [rax],dl
   140014315:	adc    BYTE PTR [rax],dl
   140014317:	(bad)  
   140014318:	(bad)  
   140014319:	or     al,0x7
   14001431b:	(bad)  
   14001431c:	(bad)  
   14001431d:	(bad)  
   14001431e:	(bad)  
   14001431f:	(bad)  
   140014320:	(bad)  
   140014321:	(bad)  
   140014322:	(bad)  
   140014323:	(bad)  
   140014324:	(bad)  
   140014325:	(bad)  
   140014326:	(bad)  
   140014327:	(bad)  
   140014328:	(bad)  
   140014329:	(bad)  
   14001432a:	add    al,BYTE PTR [rdi]
   14001432c:	(bad)  
   14001432d:	(bad)  
   14001432e:	(bad)  
   14001432f:	(bad)  
   140014330:	(bad)  
   140014331:	(bad)  
   140014332:	(bad)  
   140014333:	(bad)  
   140014334:	(bad)  
   140014335:	(bad)  
   140014336:	(bad)  
   140014337:	(bad)  
   140014338:	sub    BYTE PTR [rax],al
   14001433a:	add    BYTE PTR [rax],al
   14001433c:	(bad)  
   14001433d:	add    BYTE PTR [rax],al
   14001433f:	add    BYTE PTR [rdi],al
   140014341:	add    BYTE PTR [rax],al
   140014343:	add    BYTE PTR [rcx],al
   140014345:	add    BYTE PTR [rax+rax*1],al
   140014348:	add    BYTE PTR [rax],al
   14001434a:	add    BYTE PTR [rax],al
   14001434c:	sbb    al,0x0
	...
   14001435a:	add    BYTE PTR [rax],al
   14001435c:	adc    BYTE PTR [rax],al
	...
   140014366:	add    BYTE PTR [rax],0x0
   140014369:	add    BYTE PTR [rax],0x0
   14001436c:	add    BYTE PTR [rax+0x800080],al
   140014372:	add    BYTE PTR [rax],al
   140014374:	add    BYTE PTR [rax],0x80
   140014377:	add    BYTE PTR [rax-0x7fffff80],al
   14001437d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140014384:	add    BYTE PTR [rax],al
   140014386:	inc    DWORD PTR [rax]
   140014388:	add    bh,bh
   14001438a:	add    BYTE PTR [rax],al
   14001438c:	add    bh,bh
   14001438e:	inc    DWORD PTR [rax]
   140014390:	inc    DWORD PTR [rax]
   140014392:	add    BYTE PTR [rax],al
   140014394:	inc    DWORD PTR [rax]
   140014396:	inc    DWORD PTR [rax]
   140014398:	(bad)  
   140014399:	inc    DWORD PTR [rax]
   14001439b:	add    bh,bh
   14001439d:	(bad)  
   14001439e:	inc    DWORD PTR [rax]
   1400143a0:	(bad)  
   1400143a1:	inc    DWORD PTR [rax]
   1400143a3:	add    al,0xff
   1400143a5:	add    BYTE PTR [rax],al
   1400143a7:	add    al,0xf0
   1400143a9:	add    BYTE PTR [rax],al
   1400143ab:	(bad)  
   1400143ac:	add    BYTE PTR [rax],al
   1400143ae:	add    BYTE PTR [rax],al
   1400143b0:	lock add BYTE PTR [rax],al
   1400143b3:	add    bh,bh
   1400143b5:	add    BYTE PTR [rax],al
   1400143b7:	add    bh,bh
   1400143b9:	inc    DWORD PTR [rax]
   1400143bb:	add    BYTE PTR [rax],ch
   1400143bd:	add    BYTE PTR [rax],al
   1400143bf:	add    BYTE PTR [rax+0x0],cl
   1400143c2:	add    BYTE PTR [rax],al
   1400143c4:	rex.W add BYTE PTR [rax],al
   1400143c7:	add    BYTE PTR [rcx],al
   1400143c9:	add    BYTE PTR [rcx],al
   1400143cb:	add    BYTE PTR [rax],al
   1400143cd:	add    BYTE PTR [rax],al
   1400143cf:	add    BYTE PTR [rax+0x3],ah
	...
   1400143de:	add    BYTE PTR [rax],al
   1400143e0:	add    al,BYTE PTR [rax]
   1400143e2:	add    BYTE PTR [rax],al
   1400143e4:	add    BYTE PTR [rax],al
   1400143e6:	add    BYTE PTR [rax],al
   1400143e8:	(bad)  
   1400143e9:	(bad)  
   1400143ea:	inc    DWORD PTR [rax]
   1400143ec:	add    BYTE PTR [rax],al
   1400143ee:	(bad)  
   1400143ef:	(bad)  
   1400143f0:	(bad)  
   1400143f1:	(bad)  
   1400143f2:	(bad)  
   1400143f3:	(bad)  
   1400143f4:	push   QWORD PTR [rax+rax*1+0x0]
   1400143f8:	add    BYTE PTR [rax],al
   1400143fa:	add    BYTE PTR [rdi],bh
   1400143fc:	(bad)  
   1400143fd:	(bad)  
   1400143fe:	(bad)  
   1400143ff:	(bad)  
   140014400:	jmp    QWORD PTR [rcx+0x0]
   140014403:	add    BYTE PTR [rax],al
   140014405:	add    BYTE PTR [rax],al
   140014407:	add    edi,edi
   140014409:	(bad)  
   14001440a:	(bad)  
   14001440b:	(bad)  
   14001440c:	jmp    QWORD PTR [rcx+0x0]
   14001440f:	add    BYTE PTR [rax],al
   140014411:	add    BYTE PTR [rax],al
   140014413:	add    bh,bh
   140014415:	(bad)  
   140014416:	(bad)  
   140014417:	(bad)  
   140014418:	dec    DWORD PTR [rdx]
   14001441a:	add    BYTE PTR [rax],al
   14001441c:	add    BYTE PTR [rax],al
   14001441e:	add    BYTE PTR [rax],al
   140014420:	(bad)  
   140014421:	(bad)  
   140014422:	(bad)  
   140014423:	(bad)  
   140014424:	push   QWORD PTR [rdx+0x0]
   140014427:	add    BYTE PTR [rax],al
   140014429:	add    BYTE PTR [rax],al
   14001442b:	add    BYTE PTR [rdi],al
   14001442d:	(bad)  
   14001442e:	(bad)  
   14001442f:	(bad)  
   140014430:	jmp    FWORD PTR [rcx+0x0]
   140014433:	add    BYTE PTR [rax],al
   140014435:	add    BYTE PTR [rax],al
   140014437:	add    BYTE PTR [rcx],al
   140014439:	(bad)  
   14001443a:	(bad)  
   14001443b:	(bad)  
   14001443c:	jmp    QWORD PTR [rcx+0x0]
   14001443f:	add    BYTE PTR [rax],al
   140014441:	add    BYTE PTR [rax],al
   140014443:	add    BYTE PTR [rax],al
   140014445:	jg     0x140014446
   140014447:	(bad)  
   140014448:	jmp    QWORD PTR [rax]
   14001444a:	add    BYTE PTR [rax],al
   14001444c:	add    BYTE PTR [rax],al
   14001444e:	add    BYTE PTR [rax],al
   140014450:	add    BYTE PTR [rdi],bh
   140014452:	(bad)  
   140014453:	(bad)  
   140014454:	push   QWORD PTR [rdx+0x0]
   140014457:	add    BYTE PTR [rax],al
   140014459:	add    BYTE PTR [rax],al
   14001445b:	add    BYTE PTR [rax],al
   14001445d:	ud0    edi,edi
   140014460:	jmp    QWORD PTR [rdi+0x0]
   140014463:	add    BYTE PTR [rax],al
   140014465:	add    BYTE PTR [rax],al
   140014467:	add    BYTE PTR [rax],al
   140014469:	add    edi,edi
   14001446b:	(bad)  
   14001446c:	push   QWORD PTR [rax+0x0]
   14001446f:	add    BYTE PTR [rax],al
   140014471:	add    BYTE PTR [rax],al
   140014473:	add    BYTE PTR [rax],al
   140014475:	add    bh,bh
   140014477:	(bad)  
   140014478:	jmp    FWORD PTR [rsi]
	...
   140014482:	jg     0x140014483
   140014484:	jmp    FWORD PTR [rax+rax*1+0x0]
   140014488:	add    BYTE PTR [rax],al
   14001448a:	add    BYTE PTR [rax],al
   14001448c:	add    BYTE PTR [rax],al
   14001448e:	(bad)  
   14001448f:	(bad)  
   140014490:	push   QWORD PTR [rax+rax*1+0x0]
   140014494:	add    BYTE PTR [rax],al
   140014496:	add    BYTE PTR [rax],al
   140014498:	add    BYTE PTR [rax],al
   14001449a:	(bad)  
   14001449b:	(bad)  
   14001449c:	push   QWORD PTR [rdx+0x0]
   14001449f:	add    BYTE PTR [rax],al
   1400144a1:	add    BYTE PTR [rax],al
   1400144a3:	add    BYTE PTR [rax],al
   1400144a5:	add    BYTE PTR [rcx],al
   1400144a7:	(bad)  
   1400144a8:	jmp    QWORD PTR [rax]
	...
   1400144b2:	add    bh,bh
   1400144b4:	jmp    FWORD PTR [rcx+0x0]
	...
   1400144bf:	jg     0x1400144c0
   1400144c1:	cmp    al,0x0
	...
   1400144cb:	(bad)  
   1400144cc:	push   QWORD PTR [rax+rax*1+0x0]
   1400144d0:	add    BYTE PTR [rax],al
   1400144d2:	add    BYTE PTR [rax],al
   1400144d4:	add    BYTE PTR [rax],al
   1400144d6:	add    BYTE PTR [rdi],al
   1400144d8:	push   QWORD PTR [rax+0x0]
	...
   1400144e3:	add    edi,edi
   1400144e5:	add    BYTE PTR cs:[rax],al
   1400144e8:	add    BYTE PTR [rax],al
   1400144ea:	add    BYTE PTR [rax],al
   1400144ec:	add    BYTE PTR [rax],al
   1400144ee:	add    BYTE PTR [rcx],al
   1400144f0:	call   QWORD PTR [rax+rax*1+0x0]
	...
   1400144fc:	push   QWORD PTR [rbp+0x0]
	...
   140014507:	add    BYTE PTR [rdi+0x42],bh
	...
   140014512:	add    BYTE PTR [rax],al
   140014514:	(bad)  
	...
   14001451d:	add    BYTE PTR [rax],al
   14001451f:	add    BYTE PTR [rdi],bl
	...
   140014529:	add    BYTE PTR [rax],al
   14001452b:	add    BYTE PTR [rdi],cl
   14001452d:	add    DWORD PTR [rax],eax
	...
   140014537:	add    BYTE PTR [rdi],cl
   140014539:	inc    DWORD PTR [rax]
	...
   140014543:	add    BYTE PTR [rdi],al
	...
   14001454d:	add    BYTE PTR [rax],al
   14001454f:	add    BYTE PTR [rbx],al
	...
   140014559:	add    BYTE PTR [rax],al
   14001455b:	add    BYTE PTR [rbx],al
	...
   140014565:	add    BYTE PTR [rax],al
   140014567:	add    BYTE PTR [rbx],al
	...
   140014571:	add    BYTE PTR [rax],al
   140014573:	add    BYTE PTR [rcx],al
	...
   14001457d:	add    BYTE PTR [rax],al
   14001457f:	add    BYTE PTR [rcx],al
	...
   140014589:	add    BYTE PTR [rax],al
   14001458b:	add    BYTE PTR [rcx],al
	...
   1400145b9:	add    BYTE PTR [rax],al
   1400145bb:	add    BYTE PTR [rcx],al
   1400145bd:	add    DWORD PTR [rax],eax
	...
   1400145c7:	add    BYTE PTR [rcx],al
   1400145c9:	inc    DWORD PTR [rax]
	...
   1400145d3:	add    BYTE PTR [rcx],al
   1400145d5:	add    DWORD PTR [rax],eax
	...
   1400145df:	add    BYTE PTR [rbx],al
   1400145e1:	inc    DWORD PTR [rax]
	...
   1400145eb:	add    BYTE PTR [rbx],al
   1400145ed:	add    DWORD PTR [rax],eax
	...
   1400145f7:	add    BYTE PTR [rdi],al
   1400145f9:	inc    DWORD PTR [rax]
	...
   140014603:	add    BYTE PTR [rdi],al
   140014605:	add    DWORD PTR [rax],eax
	...
   14001460f:	add    BYTE PTR [rdi],cl
   140014611:	inc    DWORD PTR [rax]
	...
   14001461b:	add    BYTE PTR [rdi],cl
   14001461d:	add    DWORD PTR [rax],eax
	...
   140014627:	add    BYTE PTR [rdi],bl
   140014629:	inc    DWORD PTR [rax]
	...
   140014633:	add    BYTE PTR [rdi],bh
   140014635:	add    DWORD PTR [rax],eax
	...
   14001463f:	add    BYTE PTR [rdi-0x1],bh
	...
   14001464a:	add    BYTE PTR [rax],al
   14001464c:	inc    DWORD PTR [rcx]
	...
   140014656:	add    BYTE PTR [rcx],al
   140014658:	inc    DWORD PTR [rax]
	...
   140014662:	add    BYTE PTR [rbx],al
   140014664:	inc    DWORD PTR [rax]
	...
   14001466e:	add    BYTE PTR [rdi],al
   140014670:	inc    DWORD PTR [rax]
	...
   14001467a:	add    BYTE PTR [rdi],bl
   14001467c:	inc    DWORD PTR [rax]
	...
   140014686:	add    BYTE PTR [rdi],bh
   140014688:	dec    DWORD PTR [rdx]
	...
   140014692:	add    BYTE PTR [rdi-0x1],bh
	...
   14001469d:	add    BYTE PTR [rcx],al
   14001469f:	(bad)  
   1400146a0:	inc    DWORD PTR [rax]
	...
   1400146aa:	add    edi,edi
   1400146ac:	inc    DWORD PTR [rax]
	...
   1400146b6:	ud0    edi,edi
	...
   1400146c1:	add    BYTE PTR [rdi],bh
   1400146c3:	(bad)  
   1400146c4:	inc    DWORD PTR [rax]
	...
   1400146ce:	(bad)  
   1400146cf:	(bad)  
   1400146d0:	inc    DWORD PTR [rax]
   1400146d2:	add    BYTE PTR [rax],al
   1400146d4:	add    BYTE PTR [rax],al
   1400146d6:	add    BYTE PTR [rax],al
   1400146d8:	add    BYTE PTR [rbx],al
   1400146da:	(bad)  
   1400146db:	(bad)  
   1400146dc:	inc    DWORD PTR [rax]
   1400146de:	add    BYTE PTR [rax],al
   1400146e0:	add    BYTE PTR [rax],al
   1400146e2:	add    BYTE PTR [rax],al
   1400146e4:	add    BYTE PTR [rdi],cl
   1400146e6:	(bad)  
   1400146e7:	(bad)  
   1400146e8:	dec    DWORD PTR [rax+0x0]
   1400146eb:	add    BYTE PTR [rax],al
   1400146ed:	add    BYTE PTR [rax],al
   1400146ef:	add    BYTE PTR [rax],al
   1400146f1:	(bad)  
   1400146f2:	(bad)  
   1400146f3:	(bad)  
   1400146f4:	jmp    FWORD PTR [rax+0x0]
   1400146f7:	add    BYTE PTR [rax],al
   1400146f9:	add    BYTE PTR [rax],al
   1400146fb:	add    BYTE PTR [rax],al
   1400146fd:	(bad)  
   1400146fe:	(bad)  
   1400146ff:	(bad)  
   140014700:	inc    DWORD PTR [rax]
   140014702:	add    BYTE PTR [rax],al
   140014704:	add    BYTE PTR [rax],al
   140014706:	add    BYTE PTR [rax],al
   140014708:	add    edi,edi
   14001470a:	(bad)  
   14001470b:	(bad)  
   14001470c:	inc    DWORD PTR [rax]
   14001470e:	add    BYTE PTR [rax],al
   140014710:	add    BYTE PTR [rax],al
   140014712:	add    BYTE PTR [rax],al
   140014714:	(bad)  
   140014715:	(bad)  
   140014716:	(bad)  
   140014717:	(bad)  
   140014718:	inc    DWORD PTR [rax]
   14001471a:	add    BYTE PTR [rax],al
   14001471c:	add    BYTE PTR [rax],al
   14001471e:	add    BYTE PTR [rax],al
   140014720:	jg     0x140014721
   140014722:	(bad)  
   140014723:	(bad)  
   140014724:	inc    DWORD PTR [rax]
   140014726:	add    BYTE PTR [rax],al
   140014728:	add    BYTE PTR [rax],al
   14001472a:	add    BYTE PTR [rbx],al
   14001472c:	(bad)  
   14001472d:	(bad)  
   14001472e:	(bad)  
   14001472f:	(bad)  
   140014730:	inc    DWORD PTR [rax]
   140014732:	add    BYTE PTR [rax],al
   140014734:	add    BYTE PTR [rax],al
   140014736:	add    BYTE PTR [rdi],bh
   140014738:	(bad)  
   140014739:	(bad)  
   14001473a:	(bad)  
   14001473b:	(bad)  
   14001473c:	inc    DWORD PTR [rax]
   14001473e:	add    BYTE PTR [rax],al
   140014740:	add    BYTE PTR [rax],al
   140014742:	(bad)  
   140014743:	(bad)  
   140014744:	(bad)  
   140014745:	(bad)  
   140014746:	(bad)  
   140014747:	(bad)  
   140014748:	inc    DWORD PTR [rax]
   14001474a:	add    BYTE PTR [rax],al
   14001474c:	sub    BYTE PTR [rax],al
   14001474e:	add    BYTE PTR [rax],al
   140014750:	adc    al,BYTE PTR [rax]
   140014752:	add    BYTE PTR [rax],al
   140014754:	or     al,0x0
   140014756:	add    BYTE PTR [rax],al
   140014758:	add    DWORD PTR [rax],eax
   14001475a:	add    al,0x0
   14001475c:	add    BYTE PTR [rax],al
   14001475e:	add    BYTE PTR [rax],al
   140014760:	nop
	...
   140014779:	add    BYTE PTR [rax+0x800000],al
   14001477f:	add    BYTE PTR [rax],al
   140014781:	add    BYTE PTR [rax+0x8000],0x0
   140014788:	add    BYTE PTR [rax],0x80
   14001478b:	add    BYTE PTR [rax-0x7fffff80],al
   140014791:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140014798:	add    BYTE PTR [rax],al
   14001479a:	inc    DWORD PTR [rax]
   14001479c:	add    bh,bh
   14001479e:	add    BYTE PTR [rax],al
   1400147a0:	add    bh,bh
   1400147a2:	inc    DWORD PTR [rax]
   1400147a4:	inc    DWORD PTR [rax]
   1400147a6:	add    BYTE PTR [rax],al
   1400147a8:	inc    DWORD PTR [rax]
   1400147aa:	inc    DWORD PTR [rax]
   1400147ac:	(bad)  
   1400147ad:	inc    DWORD PTR [rax]
   1400147af:	add    bh,bh
   1400147b1:	(bad)  
   1400147b2:	inc    DWORD PTR [rax]
	...
   1400147d8:	add    BYTE PTR [rax],al
   1400147da:	ja     0x140014853
   1400147dc:	ja     0x1400147de
	...
   1400147e6:	add    BYTE PTR [rdi+0x0],dh
	...
   1400147f1:	add    BYTE PTR [rax],al
   1400147f3:	jo     0x1400147f5
	...
   1400147fd:	add    BYTE PTR [rax],al
   1400147ff:	jo     0x140014801
	...
   140014809:	add    BYTE PTR [rax],al
   14001480b:	jo     0x14001480d
	...
   140014815:	(bad)  
   140014816:	add    BYTE PTR [rax+0x0],dh
	...
   140014821:	(bad)  
   140014822:	add    BYTE PTR [rdi+0x0],dh
   140014825:	jo     0x140014827
   140014827:	add    BYTE PTR [rax],al
   140014829:	add    BYTE PTR [rax],al
   14001482b:	add    BYTE PTR [rax],al
   14001482d:	(bad)  
   14001482e:	jo     0x1400148a7
   140014830:	(bad)  
   140014831:	jo     0x140014833
   140014833:	add    BYTE PTR [rax],al
   140014835:	add    BYTE PTR [rax],al
   140014837:	add    BYTE PTR [rax],al
   140014839:	(bad)  
   14001483a:	ja     0x1400148b3
   14001483c:	ja     0x1400148ae
   14001483e:	add    BYTE PTR [rax],al
   140014840:	add    BYTE PTR [rax],al
   140014842:	add    BYTE PTR [rax],al
   140014844:	sub    BYTE PTR [rax],al
   140014846:	add    BYTE PTR [rax],al
   140014848:	adc    al,BYTE PTR [rax]
   14001484a:	add    BYTE PTR [rax],al
   14001484c:	or     al,0x0
   14001484e:	add    BYTE PTR [rax],al
   140014850:	add    DWORD PTR [rax],eax
   140014852:	add    al,0x0
   140014854:	add    BYTE PTR [rax],al
   140014856:	add    BYTE PTR [rax],al
   140014858:	nop
	...
   140014871:	add    BYTE PTR [rax+0x800000],al
   140014877:	add    BYTE PTR [rax],al
   140014879:	add    BYTE PTR [rax+0x8000],0x0
   140014880:	add    BYTE PTR [rax],0x80
   140014883:	add    BYTE PTR [rax-0x7fffff80],al
   140014889:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140014890:	add    BYTE PTR [rax],al
   140014892:	inc    DWORD PTR [rax]
   140014894:	add    bh,bh
   140014896:	add    BYTE PTR [rax],al
   140014898:	add    bh,bh
   14001489a:	inc    DWORD PTR [rax]
   14001489c:	inc    DWORD PTR [rax]
   14001489e:	add    BYTE PTR [rax],al
   1400148a0:	inc    DWORD PTR [rax]
   1400148a2:	inc    DWORD PTR [rax]
   1400148a4:	(bad)  
   1400148a5:	inc    DWORD PTR [rax]
   1400148a7:	add    bh,bh
   1400148a9:	(bad)  
   1400148aa:	inc    DWORD PTR [rax]
	...
   1400148d0:	add    BYTE PTR [rax],al
   1400148d2:	ja     0x14001494b
   1400148d4:	ja     0x1400148d6
	...
   1400148de:	add    BYTE PTR [rdi+0x0],dh
	...
   1400148e9:	add    BYTE PTR [rax],al
   1400148eb:	jo     0x1400148ed
	...
   1400148f5:	add    BYTE PTR [rax],al
   1400148f7:	jo     0x1400148f9
	...
   140014901:	add    BYTE PTR [rax],al
   140014903:	jo     0x140014905
	...
   14001490d:	(bad)  
   14001490e:	add    BYTE PTR [rax+0x0],dh
	...
   140014919:	(bad)  
   14001491a:	add    BYTE PTR [rdi+0x0],dh
   14001491d:	jo     0x14001491f
   14001491f:	add    BYTE PTR [rax],al
   140014921:	add    BYTE PTR [rax],al
   140014923:	add    BYTE PTR [rax],al
   140014925:	(bad)  
   140014926:	jo     0x14001499f
   140014928:	(bad)  
   140014929:	jo     0x14001492b
   14001492b:	add    BYTE PTR [rax],al
   14001492d:	add    BYTE PTR [rax],al
   14001492f:	add    BYTE PTR [rax],al
   140014931:	(bad)  
   140014932:	ja     0x1400149ab
   140014934:	ja     0x1400149a6
   140014936:	add    BYTE PTR [rax],al
   140014938:	add    BYTE PTR [rax],al
   14001493a:	add    BYTE PTR [rax],al
   14001493c:	sub    BYTE PTR [rax],al
   14001493e:	add    BYTE PTR [rax],al
   140014940:	adc    al,BYTE PTR [rax]
   140014942:	add    BYTE PTR [rax],al
   140014944:	or     al,0x0
   140014946:	add    BYTE PTR [rax],al
   140014948:	add    DWORD PTR [rax],eax
   14001494a:	add    al,0x0
   14001494c:	add    BYTE PTR [rax],al
   14001494e:	add    BYTE PTR [rax],al
   140014950:	nop
	...
   140014969:	add    BYTE PTR [rax+0x800000],al
   14001496f:	add    BYTE PTR [rax],al
   140014971:	add    BYTE PTR [rax+0x8000],0x0
   140014978:	add    BYTE PTR [rax],0x80
   14001497b:	add    BYTE PTR [rax-0x7fffff80],al
   140014981:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140014988:	add    BYTE PTR [rax],al
   14001498a:	inc    DWORD PTR [rax]
   14001498c:	add    bh,bh
   14001498e:	add    BYTE PTR [rax],al
   140014990:	add    bh,bh
   140014992:	inc    DWORD PTR [rax]
   140014994:	inc    DWORD PTR [rax]
   140014996:	add    BYTE PTR [rax],al
   140014998:	inc    DWORD PTR [rax]
   14001499a:	inc    DWORD PTR [rax]
   14001499c:	(bad)  
   14001499d:	inc    DWORD PTR [rax]
   14001499f:	add    bh,bh
   1400149a1:	(bad)  
   1400149a2:	inc    DWORD PTR [rax]
   1400149a4:	(bad)  
   1400149a5:	(bad)  
   1400149a6:	(bad)  
   1400149a7:	inc    DWORD PTR [rax]
   1400149a9:	add    BYTE PTR [rax],al
   1400149ab:	(bad)  
   1400149ac:	inc    DWORD PTR [rax]
   1400149ae:	add    BYTE PTR [rax],al
   1400149b0:	(bad)  
   1400149b1:	(bad)  
   1400149b2:	(bad)  
   1400149b3:	(bad)  
   1400149b4:	inc    DWORD PTR [rax]
   1400149b6:	(bad)  
   1400149b7:	(bad)  
   1400149b8:	inc    DWORD PTR [rax]
   1400149ba:	add    BYTE PTR [rax],al
   1400149bc:	(bad)  
   1400149bd:	(bad)  
   1400149be:	(bad)  
   1400149bf:	(bad)  
   1400149c0:	inc    DWORD PTR [rax]
   1400149c2:	(bad)  
   1400149c3:	(bad)  
   1400149c4:	inc    DWORD PTR [rax]
   1400149c6:	add    BYTE PTR [rax],al
   1400149c8:	(bad)  
   1400149c9:	inc    DWORD PTR [rax]
   1400149cb:	add    BYTE PTR [rax],al
   1400149cd:	add    bh,bh
   1400149cf:	(bad)  
   1400149d0:	inc    DWORD PTR [rax]
   1400149d2:	add    BYTE PTR [rax],al
   1400149d4:	(bad)  
   1400149d5:	(bad)  
   1400149d6:	inc    DWORD PTR [rax]
   1400149d8:	inc    DWORD PTR [rax]
   1400149da:	(bad)  
   1400149db:	(bad)  
   1400149dc:	inc    DWORD PTR [rax]
   1400149de:	add    BYTE PTR [rax],al
   1400149e0:	(bad)  
   1400149e1:	(bad)  
   1400149e2:	inc    DWORD PTR [rax]
   1400149e4:	inc    DWORD PTR [rax]
   1400149e6:	dec    DWORD PTR [rdi]
   1400149e8:	inc    DWORD PTR [rax]
   1400149ea:	add    BYTE PTR [rax],al
   1400149ec:	(bad)  
   1400149ed:	(bad)  
   1400149ee:	inc    DWORD PTR [rax]
   1400149f0:	inc    DWORD PTR [rax]
   1400149f2:	dec    DWORD PTR [rdi]
   1400149f4:	inc    DWORD PTR [rax]
   1400149f6:	add    BYTE PTR [rax],al
   1400149f8:	(bad)  
   1400149f9:	(bad)  
   1400149fa:	inc    DWORD PTR [rax]
   1400149fc:	(bad)  
   1400149fe:	lock ud0 eax,DWORD PTR [rax]
   140014a02:	add    BYTE PTR [rax],al
   140014a04:	push   rax
   140014a06:	inc    DWORD PTR [rax]
   140014a08:	add    BYTE PTR [rax],al
   140014a0a:	add    BYTE PTR [rdi],cl
   140014a0c:	inc    DWORD PTR [rax]
   140014a0e:	add    BYTE PTR [rax],al
   140014a10:	push   rax
   140014a12:	inc    DWORD PTR [rax]
   140014a14:	dec    DWORD PTR [rdi]
   140014a16:	(bad)  
   140014a17:	(bad)  
   140014a18:	inc    DWORD PTR [rax]
   140014a1a:	add    BYTE PTR [rax],al
   140014a1c:	push   rax
   140014a1e:	(bad)  
   140014a20:	lock ud0 edi,edi
   140014a24:	inc    DWORD PTR [rax]
   140014a26:	add    BYTE PTR [rax],al
   140014a28:	push   rax
   140014a2a:	add    BYTE PTR [rax],al
   140014a2c:	add    BYTE PTR [rdi],cl
   140014a2e:	(bad)  
   140014a2f:	(bad)  
   140014a30:	inc    DWORD PTR [rax]
   140014a32:	add    BYTE PTR [rax],al
   140014a34:	sub    BYTE PTR [rax],al
   140014a36:	add    BYTE PTR [rax],al
   140014a38:	adc    al,BYTE PTR [rax]
   140014a3a:	add    BYTE PTR [rax],al
   140014a3c:	or     al,0x0
   140014a3e:	add    BYTE PTR [rax],al
   140014a40:	add    DWORD PTR [rax],eax
   140014a42:	add    al,0x0
   140014a44:	add    BYTE PTR [rax],al
   140014a46:	add    BYTE PTR [rax],al
   140014a48:	nop
	...
   140014a61:	add    BYTE PTR [rax+0x800000],al
   140014a67:	add    BYTE PTR [rax],al
   140014a69:	add    BYTE PTR [rax+0x8000],0x0
   140014a70:	add    BYTE PTR [rax],0x80
   140014a73:	add    BYTE PTR [rax-0x7fffff80],al
   140014a79:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140014a80:	add    BYTE PTR [rax],al
   140014a82:	inc    DWORD PTR [rax]
   140014a84:	add    bh,bh
   140014a86:	add    BYTE PTR [rax],al
   140014a88:	add    bh,bh
   140014a8a:	inc    DWORD PTR [rax]
   140014a8c:	inc    DWORD PTR [rax]
   140014a8e:	add    BYTE PTR [rax],al
   140014a90:	inc    DWORD PTR [rax]
   140014a92:	inc    DWORD PTR [rax]
   140014a94:	(bad)  
   140014a95:	inc    DWORD PTR [rax]
   140014a97:	add    bh,bh
   140014a99:	(bad)  
   140014a9a:	inc    DWORD PTR [rax]
   140014a9c:	(bad)  
   140014a9d:	(bad)  
   140014a9e:	(bad)  
   140014a9f:	inc    DWORD PTR [rax]
   140014aa1:	add    BYTE PTR [rax],al
   140014aa3:	(bad)  
   140014aa4:	inc    DWORD PTR [rax]
   140014aa6:	add    BYTE PTR [rax],al
   140014aa8:	(bad)  
   140014aa9:	(bad)  
   140014aaa:	(bad)  
   140014aab:	(bad)  
   140014aac:	inc    DWORD PTR [rax]
   140014aae:	(bad)  
   140014aaf:	(bad)  
   140014ab0:	inc    DWORD PTR [rax]
   140014ab2:	add    BYTE PTR [rax],al
   140014ab4:	(bad)  
   140014ab5:	(bad)  
   140014ab6:	(bad)  
   140014ab7:	(bad)  
   140014ab8:	inc    DWORD PTR [rax]
   140014aba:	(bad)  
   140014abb:	(bad)  
   140014abc:	inc    DWORD PTR [rax]
   140014abe:	add    BYTE PTR [rax],al
   140014ac0:	(bad)  
   140014ac1:	inc    DWORD PTR [rax]
   140014ac3:	add    BYTE PTR [rax],al
   140014ac5:	add    bh,bh
   140014ac7:	(bad)  
   140014ac8:	inc    DWORD PTR [rax]
   140014aca:	add    BYTE PTR [rax],al
   140014acc:	(bad)  
   140014acd:	(bad)  
   140014ace:	inc    DWORD PTR [rax]
   140014ad0:	inc    DWORD PTR [rax]
   140014ad2:	(bad)  
   140014ad3:	(bad)  
   140014ad4:	inc    DWORD PTR [rax]
   140014ad6:	add    BYTE PTR [rax],al
   140014ad8:	(bad)  
   140014ad9:	(bad)  
   140014ada:	inc    DWORD PTR [rax]
   140014adc:	inc    DWORD PTR [rax]
   140014ade:	dec    DWORD PTR [rdi]
   140014ae0:	inc    DWORD PTR [rax]
   140014ae2:	add    BYTE PTR [rax],al
   140014ae4:	(bad)  
   140014ae5:	(bad)  
   140014ae6:	inc    DWORD PTR [rax]
   140014ae8:	inc    DWORD PTR [rax]
   140014aea:	dec    DWORD PTR [rdi]
   140014aec:	inc    DWORD PTR [rax]
   140014aee:	add    BYTE PTR [rax],al
   140014af0:	(bad)  
   140014af1:	(bad)  
   140014af2:	inc    DWORD PTR [rax]
   140014af4:	(bad)  
   140014af6:	lock ud0 eax,DWORD PTR [rax]
   140014afa:	add    BYTE PTR [rax],al
   140014afc:	push   rax
   140014afe:	inc    DWORD PTR [rax]
   140014b00:	add    BYTE PTR [rax],al
   140014b02:	add    BYTE PTR [rdi],cl
   140014b04:	inc    DWORD PTR [rax]
   140014b06:	add    BYTE PTR [rax],al
   140014b08:	push   rax
   140014b0a:	inc    DWORD PTR [rax]
   140014b0c:	dec    DWORD PTR [rdi]
   140014b0e:	(bad)  
   140014b0f:	(bad)  
   140014b10:	inc    DWORD PTR [rax]
   140014b12:	add    BYTE PTR [rax],al
   140014b14:	push   rax
   140014b16:	(bad)  
   140014b18:	lock ud0 edi,edi
   140014b1c:	inc    DWORD PTR [rax]
   140014b1e:	add    BYTE PTR [rax],al
   140014b20:	push   rax
   140014b22:	add    BYTE PTR [rax],al
   140014b24:	add    BYTE PTR [rdi],cl
   140014b26:	(bad)  
   140014b27:	(bad)  
   140014b28:	inc    DWORD PTR [rax]
   140014b2a:	add    BYTE PTR [rax],al
   140014b2c:	sub    BYTE PTR [rax],al
   140014b2e:	add    BYTE PTR [rax],al
   140014b30:	(bad)  
   140014b31:	add    BYTE PTR [rax],al
   140014b33:	add    BYTE PTR [rdi],al
   140014b35:	add    BYTE PTR [rax],al
   140014b37:	add    BYTE PTR [rcx],al
   140014b39:	add    BYTE PTR [rax+rax*1],al
   140014b3c:	add    BYTE PTR [rax],al
   140014b3e:	add    BYTE PTR [rax],al
   140014b40:	sbb    al,0x0
	...
   140014b4e:	add    BYTE PTR [rax],al
   140014b50:	adc    BYTE PTR [rax],al
	...
   140014b5a:	add    BYTE PTR [rax],0x0
   140014b5d:	add    BYTE PTR [rax],0x0
   140014b60:	add    BYTE PTR [rax+0x800080],al
   140014b66:	add    BYTE PTR [rax],al
   140014b68:	add    BYTE PTR [rax],0x80
   140014b6b:	add    BYTE PTR [rax-0x7fffff80],al
   140014b71:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140014b78:	add    BYTE PTR [rax],al
   140014b7a:	inc    DWORD PTR [rax]
   140014b7c:	add    bh,bh
   140014b7e:	add    BYTE PTR [rax],al
   140014b80:	add    bh,bh
   140014b82:	inc    DWORD PTR [rax]
   140014b84:	inc    DWORD PTR [rax]
   140014b86:	add    BYTE PTR [rax],al
   140014b88:	inc    DWORD PTR [rax]
   140014b8a:	inc    DWORD PTR [rax]
   140014b8c:	(bad)  
   140014b8d:	inc    DWORD PTR [rax]
   140014b8f:	add    bh,bh
   140014b91:	(bad)  
   140014b92:	inc    DWORD PTR [rax]
   140014b94:	add    BYTE PTR [rax],al
   140014b96:	add    BYTE PTR [rax+rax*1],al
   140014b99:	add    BYTE PTR [rax],al
   140014b9b:	add    al,0x0
   140014b9d:	add    BYTE PTR [rax],al
   140014b9f:	(bad)  
   140014ba0:	lock add BYTE PTR [rax],al
   140014ba3:	lock lock add BYTE PTR [rax],al
   140014ba7:	lock inc DWORD PTR [rax]
   140014baa:	(bad)  
   140014bac:	push   rax
   140014bae:	push   rax
   140014bb0:	sub    BYTE PTR [rax],al
   140014bb2:	add    BYTE PTR [rax],al
   140014bb4:	xor    BYTE PTR [rax],al
   140014bb6:	add    BYTE PTR [rax],al
   140014bb8:	(bad)  
   140014bb9:	add    BYTE PTR [rax],al
   140014bbb:	add    BYTE PTR [rcx],al
   140014bbd:	add    BYTE PTR [rax+rax*1],al
   140014bc0:	add    BYTE PTR [rax],al
   140014bc2:	add    BYTE PTR [rax],al
   140014bc4:	add    BYTE PTR [rax+rax*1],0x0
	...
   140014bdc:	add    BYTE PTR [rax],al
   140014bde:	add    BYTE PTR [rax],0x0
   140014be1:	add    BYTE PTR [rax],0x0
   140014be4:	add    BYTE PTR [rax+0x800080],al
   140014bea:	add    BYTE PTR [rax],al
   140014bec:	add    BYTE PTR [rax],0x80
   140014bef:	add    BYTE PTR [rax-0x7fffff80],al
   140014bf5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140014bfc:	add    BYTE PTR [rax],al
   140014bfe:	inc    DWORD PTR [rax]
   140014c00:	add    bh,bh
   140014c02:	add    BYTE PTR [rax],al
   140014c04:	add    bh,bh
   140014c06:	inc    DWORD PTR [rax]
   140014c08:	inc    DWORD PTR [rax]
   140014c0a:	add    BYTE PTR [rax],al
   140014c0c:	inc    DWORD PTR [rax]
   140014c0e:	inc    DWORD PTR [rax]
   140014c10:	(bad)  
   140014c11:	inc    DWORD PTR [rax]
   140014c13:	add    bh,bh
   140014c15:	(bad)  
   140014c16:	inc    DWORD PTR [rax]
	...
   140014c50:	add    BYTE PTR [rax],al
   140014c52:	or     BYTE PTR [rax],al
	...
   140014c68:	add    BYTE PTR [rax],al
   140014c6a:	mov    edi,DWORD PTR [rax+0x0]
	...
   140014c80:	add    BYTE PTR [rax],al
   140014c82:	mov    bh,0xb9
   140014c84:	mov    al,0x0
	...
   140014c96:	add    BYTE PTR [rax],al
   140014c98:	add    BYTE PTR [rax],cl
   140014c9a:	mov    ecx,0x808b8b
	...
   140014caf:	add    BYTE PTR [rax],al
   140014cb1:	(bad)  
   140014cb2:	mov    eax,0x7889b9
	...
   140014cc7:	add    BYTE PTR [rax],al
   140014cc9:	or     ebx,DWORD PTR [rbx-0x7f466485]
	...
   140014cdf:	add    BYTE PTR [rax],al
   140014ce1:	jns    0x140014c6c
   140014ce3:	mov    DWORD PTR [rcx+0xb089],ecx
	...
   140014cf9:	cwde   
   140014cfa:	fwait
   140014cfb:	fwait
   140014cfc:	jnp    0x140014c96
   140014cfe:	cwde   
	...
   140014d0f:	add    BYTE PTR [rdi],al
   140014d11:	cmp    DWORD PTR [rcx-0x77],edi
   140014d14:	cwde   
   140014d15:	fwait
   140014d16:	jns    0x140014c98
   140014d18:	add    BYTE PTR [rax],al
   140014d1a:	add    BYTE PTR [rax],al
   140014d1c:	add    BYTE PTR [rax],al
   140014d1e:	add    BYTE PTR [rdi],al
	...
   140014d28:	add    DWORD PTR [rbx+0x79b99797],edx
   140014d2e:	mov    bh,0x98
   140014d30:	add    BYTE PTR [rax],al
   140014d32:	add    BYTE PTR [rax],al
   140014d34:	add    BYTE PTR [rax],al
   140014d36:	add    BYTE PTR [rax+0x0],dl
   140014d3c:	add    BYTE PTR [rax],al
   140014d3e:	add    BYTE PTR [rax],al
   140014d40:	(bad)  
   140014d41:	(bad)  
   140014d42:	adc    edi,DWORD PTR [rcx]
   140014d44:	jns    0x140014cfd
   140014d46:	fwait
   140014d47:	fwait
   140014d48:	jo     0x140014d4a
   140014d4a:	add    BYTE PTR [rax],al
   140014d4c:	add    BYTE PTR [rax],al
   140014d4e:	add    esi,DWORD PTR [rax+0x0]
   140014d51:	add    BYTE PTR [rax],al
   140014d53:	add    BYTE PTR [rax],al
   140014d55:	add    BYTE PTR [rax],al
   140014d57:	(bad)  
   140014d58:	adc    DWORD PTR [rcx],edx
   140014d5a:	xchg   ebp,eax
   140014d5b:	xchg   edi,eax
   140014d5c:	xchg   edi,eax
   140014d5d:	xchg   edi,eax
   140014d5e:	cwde   
   140014d5f:	jns    0x140014ce8
   140014d61:	add    BYTE PTR [rax],al
   140014d63:	add    BYTE PTR [rax],al
   140014d65:	add    BYTE PTR [rbp+0x0],dl
   140014d6b:	add    BYTE PTR [rax],al
   140014d6d:	jo     0x140014d6f
   140014d6f:	jno    0x140014d82
   140014d71:	jno    0x140014da4
   140014d73:	cmp    DWORD PTR [rcx],edi
   140014d75:	jns    0x140014d30
   140014d77:	mov    bh,0x9b
   140014d79:	jo     0x140014d7b
   140014d7b:	add    BYTE PTR [rax],al
   140014d7d:	jns    0x140014df8
   140014d7f:	add    BYTE PTR [rax],al
   140014d81:	add    BYTE PTR [rax],al
   140014d83:	add    BYTE PTR [rsi+0x116467e7],al
   140014d89:	adc    DWORD PTR [rcx+0x71],edx
   140014d8c:	jns    0x140014dc5
   140014d8e:	cwde   
   140014d8f:	fwait
   140014d90:	jns    0x140014d49
   140014d92:	add    BYTE PTR [rax],0x7
   140014d95:	xchg   edi,eax
   140014d96:	cwde   
   140014d97:	add    BYTE PTR [rax],al
   140014d99:	add    BYTE PTR [rax],al
   140014d9b:	(bad)  
   140014d9c:	out    0xc8,eax
   140014d9e:	enter  0x1466,0x13
   140014da2:	adc    DWORD PTR [rcx],ebx
   140014da4:	(bad)  
   140014da5:	cdq    
   140014da6:	jns    0x140014e21
   140014da8:	mov    eax,0x9997989b
   140014dad:	jns    0x140014ddf
   140014daf:	add    BYTE PTR [rax],al
   140014db1:	add    BYTE PTR [rax],al
   140014db3:	out    0xc8,eax
   140014db5:	out    0xe7,eax
   140014db7:	(bad)  
   140014db8:	(bad)  
   140014db9:	adc    DWORD PTR [rdi],edx
   140014dbb:	(bad)  
   140014dbc:	sbb    DWORD PTR [rbx-0x68],esi
   140014dbf:	mov    bh,0x98
   140014dc1:	mov    bh,0x7b
   140014dc3:	fwait
   140014dc4:	xchg   edi,eax
   140014dc5:	xchg   ebx,eax
   140014dc6:	push   rax
   140014dc7:	add    BYTE PTR [rax],al
   140014dc9:	add    BYTE PTR [rsi+0x7e],bh
   140014dcc:	jle    0x140014d96
   140014dce:	enter  0x6668,0x5
   140014dd2:	adc    DWORD PTR [rcx],edx
   140014dd4:	xor    DWORD PTR [rdi+0x79b99793],edx
   140014dda:	mov    ecx,0x797989
   140014ddf:	add    BYTE PTR [rax],al
   140014de1:	(bad)  
   140014de2:	out    0xc8,eax
   140014de4:	enter  0x7e6e,0x7c
   140014de8:	jbe    0x140014e3a
   140014dea:	xor    DWORD PTR [rcx],edx
   140014dec:	push   rbx
   140014ded:	push   rbx
   140014dee:	xchg   edi,eax
   140014def:	cwde   
   140014df0:	fwait
   140014df1:	jnp    0x140014e6c
   140014df3:	jns    0x140014d8c
   140014df5:	xchg   edi,eax
   140014df6:	add    BYTE PTR [rax],al
   140014df8:	or     bh,ah
   140014dfa:	jle    0x140014e7a
   140014dfc:	jle    0x140014e7a
   140014dfe:	mov    WORD PTR [rsi+0x71016586],es
   140014e04:	adc    DWORD PTR [rdi-0x46764669],edx
   140014e0a:	mov    DWORD PTR [rdi+0x9793],esi
   140014e10:	xchg   BYTE PTR [rdi+riz*8+0x6ee87c7e],cl
   140014e17:	jl     0x140014e90
   140014e19:	jbe    0x140014e2b
   140014e1b:	adc    DWORD PTR [rip+0xffffffffb8793931],esi        # 0xf87a8752
   140014e21:	cwde   
   140014e22:	mov    ecx,0x707979
   140014e27:	add    BYTE PTR [rax],al
   140014e29:	mov    bh,ah
   140014e2b:	jl     0x140014e15
   140014e2d:	addr32 out 0x7e,eax
   140014e30:	jl     0x140014ea8
   140014e32:	push   rcx
   140014e33:	adc    eax,0x98971711
   140014e38:	fwait
   140014e39:	mov    DWORD PTR [rbx-0x69],edi
   140014e3c:	cdq    
   140014e3d:	jo     0x140014e3f
   140014e3f:	add    BYTE PTR [rax],al
   140014e41:	add    BYTE PTR [rax],cl
   140014e43:	call   0xcc8dcac6
   140014e48:	xchg   BYTE PTR [rax+riz*2+0x30],dh
   140014e4c:	xor    DWORD PTR [rcx],edi
   140014e4e:	jns    0x140014e09
   140014e50:	mov    ebx,DWORD PTR [rbx+0x70799997]
   140014e56:	add    BYTE PTR [rax],al
   140014e58:	add    BYTE PTR [rax],al
   140014e5a:	add    BYTE PTR [rax],cl
   140014e5c:	in     al,dx
   140014e5d:	mov    gs,WORD PTR [rsi+0x76]
   140014e60:	je     0x140014e73
   140014e62:	rex.RXB add eax,0x7b395111
   140014e68:	cwde   
   140014e69:	mov    bh,0x79
   140014e6b:	mov    DWORD PTR [rcx+0x0],edi
   140014e6e:	add    BYTE PTR [rax],al
   140014e70:	add    BYTE PTR [rax],al
   140014e72:	add    BYTE PTR [rax],al
   140014e74:	add    BYTE PTR [rdi+rax*4+0x70141c7],cl
   140014e7b:	add    DWORD PTR [rcx],edx
   140014e7d:	xor    DWORD PTR [rbx-0x68],edx
   140014e80:	fwait
   140014e81:	cwde   
   140014e82:	fwait
   140014e83:	xchg   edi,eax
   140014e84:	xchg   edi,eax
	...
   140014e8d:	add    BYTE PTR [rsi+0x14163474],cl
   140014e93:	jo     0x140014ee6
   140014e95:	(bad)  
   140014e96:	xchg   edi,eax
   140014e97:	fwait
   140014e98:	js     0x140014e53
   140014e9a:	mov    DWORD PTR [rcx+0x38],edi
	...
   140014ea5:	add    BYTE PTR [rax],al
   140014ea7:	je     0x140014ec0
   140014ea9:	add    DWORD PTR [rcx+0x61],eax
   140014eac:	add    edx,DWORD PTR [rcx]
   140014eae:	sbb    DWORD PTR [rcx-0x47],edi
   140014eb1:	mov    edx,DWORD PTR [rbx+0x9097]
	...
   140014ebf:	(bad)  
   140014ec0:	gs gs and eax,0x17175106
   140014ec7:	cwde   
   140014ec8:	fwait
   140014ec9:	jns    0x140014e54
   140014ecb:	jns    0x140014f3d
	...
   140014ed5:	add    BYTE PTR [rax],al
   140014ed7:	add    BYTE PTR [rsi+0x67],ah
   140014eda:	rex.RXB push r14
   140014edc:	adc    BYTE PTR [rcx],dl
   140014ede:	adc    ebx,DWORD PTR [rbx-0x66688475]
	...
   140014ef0:	(bad)  
   140014ef1:	(bad)  
   140014ef2:	data16 rex.RXB (bad) 
   140014ef5:	push   rbx
   140014ef6:	(bad)  
   140014ef7:	xchg   edi,eax
   140014ef8:	fwait
   140014ef9:	jns    0x140014eb4
   140014efb:	jns    0x140014efd
	...
   140014f09:	out    0x67,eax
   140014f0b:	fs je  0x140014f1f
   140014f0e:	adc    DWORD PTR [rbx-0x75],edi
   140014f11:	jnp    0x140014f6c
   140014f13:	ja     0x140014f15
	...
   140014f21:	add    BYTE PTR [rsi+riz*2+0x66],bh
   140014f25:	adc    DWORD PTR [rcx-0x67],esi
   140014f28:	mov    bh,0xb9
   140014f2a:	jns    0x140014ebc
	...
   140014f38:	add    BYTE PTR [rax],al
   140014f3a:	add    BYTE PTR [rsi+0x76],dh
   140014f3d:	adc    esi,DWORD PTR [r15-0x45]
   140014f41:	jns    0x140014fbc
   140014f43:	jo     0x140014f45
	...
   140014f51:	add    BYTE PTR [rax],al
   140014f53:	(bad)  
   140014f54:	(bad)  
   140014f55:	jo     0x140014f6c
   140014f57:	fwait
   140014f58:	jnp    0x140014fd5
   140014f5a:	xchg   edi,eax
   140014f5b:	nop
	...
   140014f6c:	xchg   BYTE PTR [rbp+0x13],ah
   140014f6f:	sbb    DWORD PTR [rbx+0x7979],ecx
	...
   140014f81:	add    BYTE PTR [rax],al
   140014f83:	add    BYTE PTR [riz*8-0x464784ff],cl
   140014f8a:	xchg   edi,eax
	...
   140014f9b:	add    BYTE PTR [rax],al
   140014f9d:	adc    WORD PTR [rdi],dx
   140014fa0:	mov    ebx,0x9797
	...
   140014fb5:	xchg   BYTE PTR [rbp+0x19],dh
   140014fb8:	mov    ecx,DWORD PTR [rcx+0x70]
	...
   140014fca:	add    BYTE PTR [rax],al
   140014fcc:	add    BYTE PTR [rsi],al
   140014fce:	(bad)  
   140014fcf:	(bad)  
   140014fd0:	mov    eax,0x9093
	...
   140014fe5:	add    BYTE PTR [rcx+rbx*1-0x45],dh
   140014fe9:	xchg   edi,eax
	...
   140014ffe:	jbe    0x140015017
   140015000:	mov    ebx,DWORD PTR [rcx+0x0]
	...
   140015013:	add    BYTE PTR [rax],al
   140015015:	add    BYTE PTR [rsi],cl
   140015017:	adc    DWORD PTR [rcx+0x70],edi
	...
   14001502d:	add    BYTE PTR [rax],al
   14001502f:	jno    0x1400150aa
   140015031:	jo     0x140015033
	...
   140015047:	jne    0x140015060
	...
   14001505d:	add    BYTE PTR [rax],al
   14001505f:	or     BYTE PTR [rax+0x0],dh
	...
   140015096:	add    BYTE PTR [rax],al
   140015098:	(bad)  
   140015099:	(bad)  
   14001509a:	(bad)  
   14001509b:	(bad)  
   14001509c:	(bad)  
   14001509d:	inc    DWORD PTR [rax]
   14001509f:	add    bh,bh
   1400150a1:	(bad)  
   1400150a2:	(bad)  
   1400150a3:	(bad)  
   1400150a4:	(bad)  
   1400150a5:	inc    DWORD PTR [rax]
   1400150a7:	add    bh,bh
   1400150a9:	(bad)  
   1400150aa:	sti    
   1400150ab:	(bad)  
   1400150ac:	(bad)  
   1400150ad:	inc    DWORD PTR [rax]
   1400150af:	add    bh,bh
   1400150b1:	push   rax
   1400150b3:	(bad)  
   1400150b4:	(bad)  
   1400150b5:	inc    DWORD PTR [rax]
   1400150b7:	add    bh,bh
   1400150b9:	push   rax
   1400150bb:	jg     0x1400150bc
   1400150bd:	inc    DWORD PTR [rax]
   1400150bf:	add    bh,bh
   1400150c1:	jmp    rax
   1400150c3:	(bad)  
   1400150c4:	(bad)  
   1400150c5:	inc    DWORD PTR [rax]
   1400150c7:	add    bh,bh
   1400150c9:	jmp    rax
   1400150cb:	ud0    edi,edi
   1400150ce:	add    BYTE PTR [rax],al
   1400150d0:	(bad)  
   1400150d1:	jmp    rax
   1400150d3:	(bad)  
   1400150d4:	(bad)  
   1400150d5:	inc    DWORD PTR [rax]
   1400150d7:	add    bh,bh
   1400150d9:	inc    eax
   1400150db:	(bad)  
   1400150dc:	(bad)  
   1400150dd:	inc    DWORD PTR [rax]
   1400150df:	add    bh,bh
   1400150e1:	inc    eax
   1400150e3:	add    edi,edi
   1400150e5:	inc    DWORD PTR [rax]
   1400150e7:	add    bh,bh
   1400150e9:	inc    DWORD PTR [rax+0xfeff01]
   1400150ef:	add    bh,bh
   1400150f1:	inc    DWORD PTR [rax+0xfdff00]
   1400150f7:	add    bh,bh
   1400150f9:	inc    DWORD PTR [rax]
   1400150fb:	add    BYTE PTR [rdi-0x7],bh
   1400150fe:	add    BYTE PTR [rax],al
   140015100:	(bad)  
   140015101:	inc    BYTE PTR [rax]
   140015103:	add    BYTE PTR [rdi],bh
   140015105:	repz add BYTE PTR [rax],al
   140015108:	(bad)  
   140015109:	fadd   QWORD PTR [rax]
   14001510b:	add    BYTE PTR [rdi],bl
   14001510d:	ret    
   14001510e:	add    BYTE PTR [rax],al
   140015110:	inc    DWORD PTR [rax]
   140015112:	add    BYTE PTR [rax],al
   140015114:	(bad)  
   140015115:	add    DWORD PTR [rax],0x0
   140015118:	inc    BYTE PTR [rax]
   14001511a:	add    BYTE PTR [rax],al
   14001511c:	add    BYTE PTR [rdi],al
   14001511e:	add    BYTE PTR [rax],al
   140015120:	cld    
   140015121:	add    BYTE PTR [rax],al
   140015123:	add    BYTE PTR [rax],al
   140015125:	(bad)  
   140015126:	add    BYTE PTR [rax],al
   140015128:	lock add BYTE PTR [rax],al
   14001512b:	add    BYTE PTR [rax],al
   14001512d:	sldt   WORD PTR [rax]
   140015130:	loopne 0x140015132
   140015132:	add    BYTE PTR [rax],al
   140015134:	add    BYTE PTR [rdi],cl
   140015136:	add    BYTE PTR [rax],al
   140015138:	add    BYTE PTR [rax],0x0
   14001513b:	add    BYTE PTR [rax],al
   14001513d:	sldt   WORD PTR [rax]
   140015140:	add    BYTE PTR [rax],al
   140015142:	add    BYTE PTR [rax],al
   140015144:	add    BYTE PTR [rdi],bl
   140015146:	add    BYTE PTR [rax],al
   140015148:	rol    BYTE PTR [rax],0x0
   14001514b:	add    BYTE PTR [rax],al
   14001514d:	(bad)  
   14001514e:	add    BYTE PTR [rax],al
   140015150:	clc    
   140015151:	add    BYTE PTR [rax],al
   140015153:	add    BYTE PTR [rax],al
   140015155:	(bad)  
   140015156:	add    BYTE PTR [rax],al
   140015158:	inc    BYTE PTR [rax]
   14001515a:	add    BYTE PTR [rax],al
   14001515c:	add    BYTE PTR [rdi],bh
   14001515e:	add    BYTE PTR [rax],al
   140015160:	inc    eax
   140015162:	add    BYTE PTR [rax],al
   140015164:	add    BYTE PTR [rdi],bh
   140015166:	add    BYTE PTR [rax],al
   140015168:	push   rax
   14001516a:	add    BYTE PTR [rax],al
   14001516c:	add    BYTE PTR [rdi],bh
   14001516e:	add    BYTE PTR [rax],al
   140015170:	(bad)  
   140015171:	cld    
   140015172:	add    BYTE PTR [rax],al
   140015174:	add    BYTE PTR [rdi+0x0],bh
   140015177:	add    bh,bh
   140015179:	inc    BYTE PTR [rax]
   14001517b:	add    BYTE PTR [rax],al
   14001517d:	jg     0x14001517f
   14001517f:	add    bh,bh
   140015181:	inc    DWORD PTR [rax]
   140015183:	add    BYTE PTR [rax],al
   140015185:	inc    DWORD PTR [rax]
   140015187:	add    bh,bh
   140015189:	inc    DWORD PTR [rax+0xff0000]
   14001518f:	add    bh,bh
   140015191:	inc    eax
   140015193:	add    BYTE PTR [rax],al
   140015195:	inc    DWORD PTR [rax]
   140015197:	add    bh,bh
   140015199:	push   rax
   14001519b:	add    BYTE PTR [rcx],al
   14001519d:	inc    DWORD PTR [rax]
   14001519f:	add    bh,bh
   1400151a1:	(bad)  
   1400151a2:	cld    
   1400151a3:	add    BYTE PTR [rcx],al
   1400151a5:	inc    DWORD PTR [rax]
   1400151a7:	add    bh,bh
   1400151a9:	(bad)  
   1400151aa:	inc    BYTE PTR [rax]
   1400151ac:	add    edi,edi
   1400151ae:	add    BYTE PTR [rax],al
   1400151b0:	(bad)  
   1400151b1:	(bad)  
   1400151b2:	inc    DWORD PTR [rax]
   1400151b4:	add    edi,edi
   1400151b6:	add    BYTE PTR [rax],al
   1400151b8:	(bad)  
   1400151b9:	(bad)  
   1400151ba:	inc    DWORD PTR [rax+0xff03]
   1400151c0:	(bad)  
   1400151c1:	(bad)  
   1400151c2:	inc    eax
   1400151c4:	add    edi,edi
   1400151c6:	add    BYTE PTR [rax],al
   1400151c8:	(bad)  
   1400151c9:	(bad)  
   1400151ca:	inc    eax
   1400151cc:	(bad)  
   1400151cd:	inc    DWORD PTR [rax]
   1400151cf:	add    bh,bh
   1400151d1:	(bad)  
   1400151d2:	jmp    rax
   1400151d4:	(bad)  
   1400151d5:	inc    DWORD PTR [rax]
   1400151d7:	add    bh,bh
   1400151d9:	(bad)  
   1400151da:	push   rax
   1400151dc:	ud0    eax,DWORD PTR [rax]
   1400151df:	add    bh,bh
   1400151e1:	(bad)  
   1400151e2:	push   rax
   1400151e4:	ud0    eax,DWORD PTR [rax]
   1400151e7:	add    bh,bh
   1400151e9:	(bad)  
   1400151ea:	(bad)  
   1400151eb:	clc    
   1400151ec:	(bad)  
   1400151ed:	inc    DWORD PTR [rax]
   1400151ef:	add    bh,bh
   1400151f1:	(bad)  
   1400151f2:	(bad)  
   1400151f3:	cld    
   1400151f4:	(bad)  
   1400151f5:	inc    DWORD PTR [rax]
   1400151f7:	add    bh,bh
   1400151f9:	(bad)  
   1400151fa:	(bad)  
   1400151fb:	cld    
   1400151fc:	(bad)  
   1400151fd:	inc    DWORD PTR [rax]
   1400151ff:	add    bh,bh
   140015201:	(bad)  
   140015202:	(bad)  
   140015203:	(bad)  
   140015204:	jg     0x140015205
   140015206:	add    BYTE PTR [rax],al
   140015208:	(bad)  
   140015209:	(bad)  
   14001520a:	(bad)  
   14001520b:	(bad)  
   14001520c:	(bad)  
   14001520d:	inc    DWORD PTR [rax]
   14001520f:	add    bh,bh
   140015211:	(bad)  
   140015212:	(bad)  
   140015213:	(bad)  
   140015214:	(bad)  
   140015215:	inc    DWORD PTR [rax]
   140015217:	add    BYTE PTR [rax],ch
   140015219:	add    BYTE PTR [rax],al
   14001521b:	add    BYTE PTR [rax],ah
   14001521d:	add    BYTE PTR [rax],al
   14001521f:	add    BYTE PTR [rax+0x0],al
   140015222:	add    BYTE PTR [rax],al
   140015224:	add    DWORD PTR [rax],eax
   140015226:	add    al,0x0
   140015228:	add    BYTE PTR [rax],al
   14001522a:	add    BYTE PTR [rax],al
   14001522c:	add    BYTE PTR [rdx],al
	...
   140015246:	add    BYTE PTR [rax],0x0
   140015249:	add    BYTE PTR [rax],0x0
   14001524c:	add    BYTE PTR [rax+0x800080],al
   140015252:	add    BYTE PTR [rax],al
   140015254:	add    BYTE PTR [rax],0x80
   140015257:	add    BYTE PTR [rax-0x7fffff80],al
   14001525d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140015264:	add    BYTE PTR [rax],al
   140015266:	inc    DWORD PTR [rax]
   140015268:	add    bh,bh
   14001526a:	add    BYTE PTR [rax],al
   14001526c:	add    bh,bh
   14001526e:	inc    DWORD PTR [rax]
   140015270:	inc    DWORD PTR [rax]
   140015272:	add    BYTE PTR [rax],al
   140015274:	inc    DWORD PTR [rax]
   140015276:	inc    DWORD PTR [rax]
   140015278:	(bad)  
   140015279:	inc    DWORD PTR [rax]
   14001527b:	add    bh,bh
   14001527d:	(bad)  
   14001527e:	inc    DWORD PTR [rax]
	...
   1400152a4:	add    BYTE PTR [rax],al
   1400152a6:	or     BYTE PTR [rdi+0x0],dh
	...
   1400152b4:	add    BYTE PTR [rax],al
   1400152b6:	or     edi,DWORD PTR [rbx-0x48]
	...
   1400152c5:	add    BYTE PTR [rax],cl
   1400152c7:	mov    ecx,0x8089
	...
   1400152d4:	add    BYTE PTR [rax],al
   1400152d6:	jns    0x14001528f
   1400152d8:	mov    bh,0xb0
	...
   1400152e6:	xchg   edi,eax
   1400152e7:	xchg   edi,eax
   1400152e8:	cdq    
   1400152e9:	jns    0x1400152eb
	...
   1400152f3:	add    BYTE PTR [rax],al
   1400152f5:	(bad)  
   1400152f6:	cmp    DWORD PTR [rcx-0x75],edi
   1400152f9:	cwde   
   1400152fa:	mov    al,0x0
   1400152fc:	add    BYTE PTR [rax],al
   1400152fe:	add    BYTE PTR [rax],cl
   140015300:	add    BYTE PTR [rax],al
   140015302:	add    BYTE PTR [rax],al
   140015304:	add    BYTE PTR [rcx],al
   140015306:	adc    edx,DWORD PTR [rbx+0x589b97]
   14001530c:	add    BYTE PTR [rax],al
   14001530e:	add    BYTE PTR [rax],dl
   140015310:	add    BYTE PTR [rax],al
   140015312:	add    BYTE PTR [rax],al
   140015314:	add    BYTE PTR [rcx],dl
   140015316:	push   rcx
   140015317:	jns    0x140015392
   140015319:	jns    0x1400152d4
   14001531b:	add    BYTE PTR [rax],0x0
   14001531e:	jns    0x1400152a0
   140015320:	add    BYTE PTR [rax],al
   140015322:	or     BYTE PTR [rdi+0x66],ah
   140015325:	push   rbx
   140015326:	adc    DWORD PTR [rbx],edx
   140015328:	adc    ebx,DWORD PTR [rax+0x7809b9b]
   14001532e:	xchg   edi,eax
   14001532f:	add    BYTE PTR [rax],al
   140015331:	add    BYTE PTR [rsi-0x38],bh
   140015334:	out    0x65,eax
   140015336:	adc    edx,DWORD PTR [rcx-0x69]
   140015339:	xchg   edi,eax
   14001533a:	mov    bh,0x89
   14001533c:	jns    0x140015377
   14001533e:	jns    0x140015340
   140015340:	add    BYTE PTR [rsi],cl
   140015342:	ja     0x14001532b
   140015344:	enter  0x166,0x13
   140015348:	push   rbx
   140015349:	xchg   edi,eax
   14001534a:	cdq    
   14001534b:	mov    bh,0xb7
   14001534d:	xchg   edi,eax
   14001534e:	cwde   
   14001534f:	add    BYTE PTR [rdi],al
   140015351:	out    0xce,eax
   140015353:	jle    0x1400153d1
   140015355:	xchg   DWORD PTR [rbp+0x11],eax
   140015358:	adc    eax,0x97988b39
   14001535d:	xchg   ebx,eax
   14001535e:	nop
   14001535f:	add    BYTE PTR [rax],cl
   140015361:	enter  0x7ce7,0x8e
   140015365:	jl     0x1400153d9
   140015367:	adc    DWORD PTR [rcx],esi
   140015369:	xchg   edi,eax
   14001536a:	cwde   
   14001536b:	mov    ecx,0x7079b9
   140015370:	add    BYTE PTR [rax],cl
   140015372:	out    0xe7,eax
   140015374:	in     eax,0xe7
   140015376:	gs add eax,0x779b1317
   14001537c:	jns    0x1400153f7
   14001537e:	add    BYTE PTR [rax],al
   140015380:	add    BYTE PTR [rax],al
   140015382:	or     BYTE PTR [rsi-0x39],bh
   140015385:	je     0x140015397
   140015387:	jo     0x14001539a
   140015389:	xchg   edi,eax
   14001538a:	cwde   
   14001538b:	fwait
   14001538c:	xchg   edi,eax
   14001538d:	xchg   edi,eax
   14001538e:	add    BYTE PTR [rax],al
   140015390:	add    BYTE PTR [rax],al
   140015392:	add    BYTE PTR [rax],al
   140015394:	xchg   BYTE PTR [rax+0x14],dl
   140015397:	jno    0x1400153ac
   140015399:	push   rbx
   14001539a:	fwait
   14001539b:	jnp    0x140015416
   14001539d:	(bad)  
   14001539e:	add    BYTE PTR [rax],al
   1400153a0:	add    BYTE PTR [rax],al
   1400153a2:	add    BYTE PTR [rax],al
   1400153a4:	add    BYTE PTR [rbp+0x61],ah
   1400153a7:	(bad)  
   1400153a8:	adc    DWORD PTR [rdi],edx
   1400153aa:	cwde   
   1400153ab:	cwde   
   1400153ac:	xchg   edi,eax
   1400153ad:	nop
   1400153ae:	add    BYTE PTR [rax],al
   1400153b0:	add    BYTE PTR [rax],al
   1400153b2:	add    BYTE PTR [rax],al
   1400153b4:	add    BYTE PTR [rsi+0x74],dh
   1400153b7:	je     0x1400153ce
   1400153b9:	xor    DWORD PTR [rbx-0x47],edi
   1400153bc:	mov    ecx,0x70
   1400153c1:	add    BYTE PTR [rax],al
   1400153c3:	add    BYTE PTR [rax],al
   1400153c5:	or     BYTE PTR [rsi+0x67],ah
   1400153c8:	(bad)  
   1400153c9:	adc    DWORD PTR [rax+0x9097b7],ebx
   1400153cf:	add    BYTE PTR [rax],al
   1400153d1:	add    BYTE PTR [rax],al
   1400153d3:	add    BYTE PTR [rax],al
   1400153d5:	add    BYTE PTR [rdi],al
   1400153d7:	(bad)  
   1400153d8:	(bad)  
   1400153d9:	(bad)  
   1400153da:	cmp    DWORD PTR [rdi+0x97],esi
   1400153e0:	add    BYTE PTR [rax],al
   1400153e2:	add    BYTE PTR [rax],al
   1400153e4:	add    BYTE PTR [rax],al
   1400153e6:	add    BYTE PTR [rdi],al
   1400153e8:	adc    DWORD PTR fs:[rbx-0x77],edi
   1400153ec:	jns    0x1400153ee
	...
   1400153f6:	add    BYTE PTR [rax],al
   1400153f8:	push   cx
   1400153fa:	fwait
   1400153fb:	mov    bh,0x98
	...
   140015405:	add    BYTE PTR [rax],al
   140015407:	add    BYTE PTR [rsi],al
   140015409:	jno    0x140015483
   14001540b:	mov    ecx,0x70
	...
   140015418:	or     BYTE PTR [rcx+0x1b],ah
   14001541b:	mov    DWORD PTR [rax],esi
	...
   140015429:	sbb    edi,DWORD PTR gs:[rcx+0x80]
	...
   140015438:	add    BYTE PTR [rsi],al
   14001543a:	push   rdi
   14001543b:	jns    0x14001543d
	...
   140015449:	or     BYTE PTR [rbx],bl
   14001544b:	nop
	...
   140015458:	add    BYTE PTR [rax],al
   14001545a:	gs jo  0x14001545d
	...
   14001547d:	add    BYTE PTR [rax],al
   14001547f:	add    bh,bh
   140015481:	(bad)  
   140015482:	(bad)  
   140015483:	(bad)  
   140015484:	(bad)  
   140015485:	(bad)  
   140015486:	(bad)  
   140015487:	(bad)  
   140015488:	(bad)  
   140015489:	clc    
   14001548a:	(bad)  
   14001548b:	(bad)  
   14001548c:	(bad)  
   14001548d:	clc    
   14001548e:	(bad)  
   14001548f:	(bad)  
   140015490:	(bad)  
   140015491:	clc    
   140015492:	(bad)  
   140015493:	(bad)  
   140015494:	push   rax
   140015496:	(bad)  
   140015497:	(bad)  
   140015498:	push   rax
   14001549a:	ud0    edi,edi
   14001549d:	loopne 0x1400154a6
   14001549f:	(bad)  
   1400154a0:	jmp    rax
   1400154a2:	add    edi,ebp
   1400154a4:	inc    eax
   1400154a6:	add    ecx,esi
   1400154a8:	clc    
   1400154a9:	add    BYTE PTR [rax],al
   1400154ab:	movsxd esi,eax
   1400154ad:	add    BYTE PTR [rax],al
   1400154af:	add    esp,eax
   1400154b1:	add    BYTE PTR [rax],al
   1400154b3:	add    eax,DWORD PTR [rax-0x7ff90000]
   1400154b9:	add    BYTE PTR [rax],al
   1400154bb:	(bad)  
   1400154bc:	loopne 0x1400154be
   1400154be:	add    BYTE PTR [rdi],cl
   1400154c0:	clc    
   1400154c1:	add    BYTE PTR [rax],al
   1400154c3:	ud0    eax,DWORD PTR [rax]
   1400154c6:	add    BYTE PTR [rdi],cl
   1400154c8:	inc    eax
   1400154ca:	add    BYTE PTR [rdi],bl
   1400154cc:	inc    eax
   1400154ce:	add    BYTE PTR [rdi],bl
   1400154d0:	jmp    rax
   1400154d2:	add    BYTE PTR [rdi],bl
   1400154d4:	(bad)  
   1400154d5:	clc    
   1400154d6:	add    BYTE PTR [rdi],bh
   1400154d8:	(bad)  
   1400154d9:	inc    BYTE PTR [rax]
   1400154db:	(bad)  
   1400154dc:	(bad)  
   1400154dd:	inc    DWORD PTR [rax]
   1400154df:	(bad)  
   1400154e0:	(bad)  
   1400154e1:	inc    DWORD PTR [rax-0x7f000081]
   1400154e7:	jg     0x1400154e8
   1400154e9:	inc    eax
   1400154eb:	jg     0x1400154ec
   1400154ed:	jmp    rax
   1400154ef:	(bad)  
   1400154f0:	(bad)  
   1400154f1:	jmp    rcx
   1400154f3:	(bad)  
   1400154f4:	(bad)  
   1400154f5:	push   rcx
   1400154f7:	(bad)  
   1400154f8:	(bad)  
   1400154f9:	(bad)  
   1400154fa:	(bad)  
   1400154fb:	(bad)  
   1400154fc:	(bad)  
   1400154fd:	(bad)  
   1400154fe:	(bad)  
   1400154ff:	jmp    FWORD PTR [rax]
   140015501:	add    BYTE PTR [rax],al
   140015503:	add    BYTE PTR [rax],dl
   140015505:	add    BYTE PTR [rax],al
   140015507:	add    BYTE PTR [rax],ah
   140015509:	add    BYTE PTR [rax],al
   14001550b:	add    BYTE PTR [rcx],al
   14001550d:	add    BYTE PTR [rax+rax*1],al
   140015510:	add    BYTE PTR [rax],al
   140015512:	add    BYTE PTR [rax],al
   140015514:	add    BYTE PTR [rax],0x0
	...
   14001552b:	add    BYTE PTR [rax],al
   14001552d:	add    BYTE PTR [rax+0x800000],al
   140015533:	add    BYTE PTR [rax],al
   140015535:	add    BYTE PTR [rax+0x8000],0x0
   14001553c:	add    BYTE PTR [rax],0x80
   14001553f:	add    BYTE PTR [rax-0x7fffff80],al
   140015545:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14001554c:	add    BYTE PTR [rax],al
   14001554e:	inc    DWORD PTR [rax]
   140015550:	add    bh,bh
   140015552:	add    BYTE PTR [rax],al
   140015554:	add    bh,bh
   140015556:	inc    DWORD PTR [rax]
   140015558:	inc    DWORD PTR [rax]
   14001555a:	add    BYTE PTR [rax],al
   14001555c:	inc    DWORD PTR [rax]
   14001555e:	inc    DWORD PTR [rax]
   140015560:	(bad)  
   140015561:	inc    DWORD PTR [rax]
   140015563:	add    bh,bh
   140015565:	(bad)  
   140015566:	inc    DWORD PTR [rax]
	...
   140015570:	add    BYTE PTR [rax],al
   140015572:	add    BYTE PTR [rbx],cl
   140015574:	add    BYTE PTR [rax],al
   140015576:	add    BYTE PTR [rax],al
   140015578:	add    BYTE PTR [rax],al
   14001557a:	add    BYTE PTR [rdi-0x48],dh
   14001557d:	add    BYTE PTR [rax],al
   14001557f:	add    BYTE PTR [rax],al
   140015581:	add    BYTE PTR [rax],al
   140015583:	cdq    
   140015584:	jns    0x140015586
   140015586:	add    BYTE PTR [rax],al
   140015588:	add    BYTE PTR [rax],al
   14001558a:	(bad)  
   14001558b:	adc    ebx,DWORD PTR [rax+0x8000b0]
   140015591:	xchg   BYTE PTR [rdi+rdx*1-0x6d],dh
   140015595:	cwde   
   140015596:	ja     0x140015528
   140015598:	(bad)  
   140015599:	out    0xe7,eax
   14001559b:	adc    DWORD PTR [rdi],edx
   14001559d:	fwait
   14001559e:	cdq    
   14001559f:	or     BYTE PTR [rax],0xce
   1400155a2:	push   rdi
   1400155a3:	adc    ecx,DWORD PTR gs:[rcx+0x8000083]
   1400155aa:	in     eax,0x5
   1400155ac:	cmp    DWORD PTR [rbx-0x69],edi
   1400155af:	add    BYTE PTR [rax],al
   1400155b1:	add    BYTE PTR [rdi],al
   1400155b3:	rex.XB add DWORD PTR [r8+0x98],ebx
   1400155ba:	add    BYTE PTR [rsi+0x57],dh
   1400155bd:	mov    ebx,0x90
   1400155c2:	add    BYTE PTR [rax],al
   1400155c4:	(bad)  
   1400155c5:	jns    0x140015637
   1400155c7:	add    BYTE PTR [rax],al
   1400155c9:	add    BYTE PTR [rax],al
   1400155cb:	add    BYTE PTR [rip+0x803b],al        # 0x14001d60c
   1400155d1:	add    BYTE PTR [rax],al
   1400155d3:	add    BYTE PTR [rdi],al
   1400155d5:	jns    0x1400155d7
   1400155d7:	add    BYTE PTR [rax],al
   1400155d9:	add    BYTE PTR [rax],al
   1400155db:	add    BYTE PTR [rax],al
   1400155dd:	js     0x1400155df
	...
   1400155e7:	add    bh,bh
   1400155e9:	inc    DWORD PTR [rax]
   1400155eb:	add    dh,bh
   1400155ed:	inc    DWORD PTR [rax]
   1400155ef:	add    ah,bh
   1400155f1:	(bad)  
   1400155f2:	add    BYTE PTR [rax],al
   1400155f4:	cld    
   1400155f5:	(bad)  
   1400155f6:	add    BYTE PTR [rax],al
   1400155f8:	clc    
   1400155f9:	sbb    eax,0x1c00000
   1400155fe:	add    BYTE PTR [rax],al
   140015600:	add    BYTE PTR [rcx],0x0
   140015603:	add    BYTE PTR [rax-0x1ffffffd],al
   140015609:	add    eax,DWORD PTR [rax]
   14001560b:	add    al,bh
   14001560d:	add    eax,DWORD PTR [rax]
   14001560f:	add    ah,bh
   140015611:	(bad)  
   140015612:	add    BYTE PTR [rax],al
   140015614:	inc    DWORD PTR [rdi]
   140015616:	add    BYTE PTR [rax],al
   140015618:	inc    DWORD PTR [rdi-0x70010000]
   14001561e:	add    BYTE PTR [rax],al
   140015620:	dec    edi
   140015622:	add    BYTE PTR [rax],al
   140015624:	(bad)  
   140015625:	inc    DWORD PTR [rax]
   140015627:	add    BYTE PTR [rax],ch
   140015629:	add    BYTE PTR [rax],al
   14001562b:	add    BYTE PTR [rax],dh
   14001562d:	add    BYTE PTR [rax],al
   14001562f:	add    BYTE PTR [rax+0x0],ah
   140015632:	add    BYTE PTR [rax],al
   140015634:	add    DWORD PTR [rax],eax
   140015636:	or     BYTE PTR [rax],al
   140015638:	add    BYTE PTR [rax],al
   14001563a:	add    BYTE PTR [rax],al
   14001563c:	add    BYTE PTR [rcx],cl
	...
   140015646:	add    BYTE PTR [rax],al
   140015648:	add    BYTE PTR [rcx],al
   14001564a:	add    BYTE PTR [rax],al
   14001564c:	add    BYTE PTR [rcx],al
   14001564e:	add    BYTE PTR [rax],al
   140015650:	add    BYTE PTR [rax],al
   140015652:	add    BYTE PTR [rax],al
   140015654:	cmp    eax,0x43003f27
   140015659:	sub    edi,DWORD PTR [rax+rax*1]
   14001565c:	rex.WB (bad) 
   14001565e:	cmp    al,0x0
   140015660:	rex.WRXB xor r15,QWORD PTR [r15]
   140015663:	add    BYTE PTR [rbx+0x36],dl
   140015666:	cmp    eax,0x3b3d5d00
   14001566b:	add    BYTE PTR [rcx+0x3f],ah
   14001566e:	xor    eax,0x2e4e7600
   140015673:	add    BYTE PTR [rcx+0x51],bh
   140015676:	sub    al,0x0
   140015678:	imul   eax,DWORD PTR [rbp+0x34],0x38436400
   14001567f:	add    BYTE PTR [rcx+0x47],ch
   140015682:	cmp    DWORD PTR [rax],eax
   140015684:	je     0x1400156d4
   140015686:	xor    BYTE PTR [rax],al
   140015688:	ja     0x1400156da
   14001568a:	xor    BYTE PTR [rax],al
   14001568c:	jp     0x1400156e0
   14001568e:	xor    eax,0x39517800
   140015693:	add    BYTE PTR [rbx],bl
   140015695:	adc    DWORD PTR [rsi+0x0],eax
   140015698:	(bad)  
   140015699:	adc    BYTE PTR [rsi+0x0],cl
   14001569c:	sbb    BYTE PTR [rax],dl
   14001569e:	rex.WX add BYTE PTR [rsi],dl
   1400156a1:	adc    DWORD PTR [rax+rax*1+0x18],edx
   1400156a5:	adc    DWORD PTR [rbx+0x0],edx
   1400156a8:	(bad)  
   1400156a9:	adc    DWORD PTR [rax+rax*1+0x24],ebx
   1400156ad:	adc    eax,0x17290045
   1400156b2:	rex.RX add BYTE PTR [rsi],r12b
   1400156b5:	sbb    BYTE PTR [rsi+0x0],al
   1400156b8:	sub    ebx,DWORD PTR [rdx]
   1400156ba:	add    BYTE PTR [r8],r12b
   1400156bd:	adc    al,0x4a
   1400156bf:	add    BYTE PTR [rbx],ch
   1400156c1:	sbb    al,0x4b
   1400156c3:	add    BYTE PTR [rcx],dh
   1400156c5:	sbb    eax,0x21340044
   1400156ca:	rex.XB add BYTE PTR [r11],dil
   1400156cd:	and    eax,0x283f0041
   1400156d2:	add    BYTE PTR [r15+riz*1],r14b
   1400156d6:	pop    rbx
   1400156d7:	add    BYTE PTR [rip+0x13006313],dl        # 0x15301b9f0
   1400156dd:	adc    al,0x6b
   1400156df:	add    BYTE PTR [rbx],dl
   1400156e1:	(bad)  
   1400156e2:	jae    0x1400156e4
   1400156e4:	adc    al,0x18
   1400156e6:	ja     0x1400156e8
   1400156e8:	adc    eax,0x18007b1a
   1400156ed:	sbb    edi,DWORD PTR [rdx+0x0]
   1400156f0:	rex (bad) 
   1400156f2:	add    BYTE PTR [rbx+r13*1+0x41],al
   1400156f7:	add    BYTE PTR [rbp+0x32],cl
   1400156fa:	add    BYTE PTR [rcx+0x56],r14b
   1400156fe:	push   rdi
   1400156ff:	add    BYTE PTR [rsi+0x53],ah
   140015702:	add    BYTE PTR gs:[rbp-0x58ffe497],bl
   140015709:	outs   dx,DWORD PTR ds:[rsi]
   14001570a:	sbb    BYTE PTR [rax],al
   14001570c:	lods   al,BYTE PTR ds:[rsi]
   14001570d:	jae    0x140015726
   14001570f:	add    BYTE PTR [rbx-0x4dffe58e],ch
   140015715:	jbe    0x14001572e
   140015717:	add    BYTE PTR [rbp-0x46ffe587],dh
   14001571d:	jnp    0x14001573b
   14001571f:	add    BYTE PTR [rbp-0x76ffd8a8],al
   140015725:	pop    rbp
   140015726:	(bad)  
   140015727:	add    BYTE PTR [rax-0x7affd0ab],al
   14001572d:	pop    rcx
   14001572e:	sub    DWORD PTR [rax],eax
   140015730:	lea    ebx,[rsi+0x2a]
   140015733:	add    BYTE PTR [rax-0x7bffccab],al
   140015739:	pop    rdx
   14001573a:	xor    eax,DWORD PTR [rax]
   14001573c:	mov    BYTE PTR [rax+rsi*1+0x0],bl
   140015740:	xchg   ecx,eax
   140015741:	(bad)  
   140015742:	and    DWORD PTR [rax],eax
   140015744:	xchg   esp,eax
   140015745:	sub    al,BYTE PTR fs:[rax]
   140015748:	mov    WORD PTR [rcx+0x3d],fs
   14001574b:	add    BYTE PTR [rbx-0x5bffcc96],bl
   140015751:	outs   dx,DWORD PTR ds:[rsi]
   140015752:	sub    DWORD PTR [rax],eax
   140015754:	lods   al,BYTE PTR ds:[rsi]
   140015755:	jne    0x14001577d
   140015757:	add    BYTE PTR [rbp-0x57ffd18f],ah
   14001575d:	ja     0x14001578e
   14001575f:	add    BYTE PTR [rcx-0x4bffdb81],bh
   140015765:	jnp    0x140015793
   140015767:	add    BYTE PTR [rsi+rsi*2+0x79a80031],ch
   14001576e:	xor    al,0x0
   140015770:	lea    esp,[rdx+0x44]
   140015773:	add    BYTE PTR [rdi-0x62ffb495],dl
   140015779:	jno    0x1400157c2
   14001577b:	add    BYTE PTR [rsi-0x63ffab8c],bl
   140015781:	js     0x1400157d5
   140015783:	add    BYTE PTR [rdi-0x54ffae86],ah
   140015789:	jge    0x1400157df
   14001578b:	add    BYTE PTR [rax+rax*4-0x7f48ffdb],bh
   140015792:	(bad)  
   140015793:	add    BYTE PTR [rcx+rax*4-0x7939ffcb],dh
   14001579a:	es add bl,al
   14001579d:	mov    DWORD PTR [rip+0x3692ce00],esi        # 0x1769425a3
   1400157a3:	add    BYTE PTR [rbx-0x46ffbd7e],dh
   1400157a9:	test   BYTE PTR [rax+rax*1-0x42],cl
   1400157ad:	mov    BYTE PTR [rsi+0x0],cl
   1400157b0:	mov    bl,0x81
   1400157b2:	push   rdx
   1400157b3:	add    BYTE PTR [rax-0x45ffaf7c],bh
   1400157b9:	xchg   esp,eax
   1400157ba:	pop    rsi
   1400157bb:	add    ah,al
   1400157bd:	mov    WORD PTR [rax+rax*1-0x38],cs
   1400157c1:	mov    cs,WORD PTR [rbx+0x0]
   1400157c4:	iret   
   1400157c5:	xchg   edx,eax
   1400157c6:	rex.RXB add r15b,r8b
   1400157c9:	xchg   ecx,eax
   1400157ca:	rex.WRXB add r12b,r9b
   1400157cd:	nop
   1400157ce:	rex.WB add r9b,dl
   1400157d1:	xchg   esp,eax
   1400157d2:	rex.X add bpl,dl
   1400157d5:	(bad)  
   1400157d6:	add    sil,r10b
   1400157d9:	popf   
   1400157da:	rex.W add al,bl
   1400157dd:	sahf   
   1400157de:	rex.WB add r13b,cl
   1400157e1:	pushf  
   1400157e2:	pop    rcx
   1400157e3:	add    cl,bl
   1400157e5:	movabs eax,ds:0xa1d90056a0d4004e
   1400157ee:	push   rdx
   1400157ef:	add    dh,dl
   1400157f1:	movabs ds:0x9cc800669bc1005b,eax
   1400157fa:	push   0x0
   1400157fc:	(bad)  
   1400157fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400157fe:	imul   eax,DWORD PTR [rax],0xffffffd6
   140015801:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015802:	movsxd eax,DWORD PTR [rax]
   140015804:	(bad)  
   140015805:	stos   BYTE PTR es:[rdi],al
   140015806:	outs   dx,BYTE PTR ds:[rsi]
   140015807:	add    dl,cl
   140015809:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001580a:	jnp    0x14001580c
   14001580c:	(bad)  
   14001580d:	scas   al,BYTE PTR es:[rdi]
   14001580e:	jns    0x140015810
   140015810:	(bad)  
   140015811:	sbb    eax,DWORD PTR [rax-0x7be3e800]
   140015817:	add    BYTE PTR [rdx],bl
   140015819:	(bad)  
   14001581a:	mov    DWORD PTR [rax],eax
   14001581c:	sbb    esp,DWORD PTR [rcx]
   14001581e:	mov    WORD PTR [rax],es
   140015820:	sbb    eax,0x37009225
   140015825:	(bad)  
   140015826:	test   DWORD PTR [rax],eax
   140015828:	and    BYTE PTR [rax],ch
   14001582a:	xchg   esi,eax
   14001582b:	add    BYTE PTR [rbx],ah
   14001582d:	sub    eax,0x2923009c
   140015832:	movabs al,ds:0xa8352600a3312400
   14001583b:	add    BYTE PTR [rsi],ah
   14001583d:	cmp    BYTE PTR [rdx-0x51c6d800],ch
   140015843:	add    BYTE PTR [rcx],ch
   140015845:	cmp    eax,0x332c00b2
   14001584a:	mov    esi,0xbe373100
   14001584f:	add    BYTE PTR [rbx],dh
   140015851:	cmp    bh,BYTE PTR [rbp-0x49bed600]
   140015857:	add    BYTE PTR [rbx],ch
   140015859:	rex.R mov ebx,0xbe4b2c00
   14001585f:	add    BYTE PTR [rax+rax*2],bh
   140015862:	mov    ecx,0x83596000
   140015867:	add    BYTE PTR [rcx+0x5c],bl
   14001586a:	movabs eax,ds:0xb9484500b34b4900
   140015873:	add    BYTE PTR [rsi+0x50],cl
   140015876:	mov    dh,0x0
   140015878:	rex.WRXB push r14
   14001587a:	mov    edi,0xb5575700
   14001587f:	add    BYTE PTR [rbp+0x5c],bl
   140015882:	mov    bl,0x0
   140015884:	(bad)  
   140015885:	pop    rdi
   140015886:	mov    ah,0x0
   140015888:	imul   esp,DWORD PTR [rsi-0x4f],0xb26f7400
   14001588f:	add    BYTE PTR [rbp+0x70],dh
   140015892:	mov    cl,0x0
   140015894:	sub    eax,0x2e00c234
   140015899:	(bad)  
   14001589a:	enter  0x2e00,0x3a
   14001589e:	retf   
   14001589f:	add    BYTE PTR [rax],dh
   1400158a1:	cmp    cl,al
   1400158a3:	add    BYTE PTR [rdi],ch
   1400158a5:	rol    BYTE PTR ds:[rax],1
   1400158a8:	xor    BYTE PTR [rdi],bh
   1400158aa:	rol    BYTE PTR [rax],1
   1400158ac:	sub    eax,0x2f00c34a
   1400158b1:	rex.X retf 0x2f00
   1400158b5:	rex.WRX enter 0x2f00,0x50
   1400158ba:	leave  
   1400158bb:	add    BYTE PTR [rax],dh
   1400158bd:	push   rdx
   1400158be:	int3   
   1400158bf:	add    BYTE PTR [rax],dh
   1400158c1:	rex.XB (bad) 
   1400158c3:	add    BYTE PTR [rdx],dh
   1400158c5:	rex.RXB fadd DWORD PTR [r8]
   1400158c8:	xor    cl,BYTE PTR [rbx-0x25]
   1400158cb:	add    BYTE PTR [rdx],dh
   1400158cd:	push   rsi
   1400158ce:	rol    BYTE PTR [rax],cl
   1400158d0:	xor    bl,BYTE PTR [rax-0x2e]
   1400158d3:	add    BYTE PTR [rax+rbx*2],dh
   1400158d6:	rol    DWORD PTR [rax],cl
   1400158d8:	xor    ebx,DWORD PTR [rax-0x2b]
   1400158db:	add    BYTE PTR [rcx+rbx*2],dh
   1400158de:	(bad)  
   1400158df:	add    BYTE PTR [rsp+rbx*2],dh
   1400158e2:	xlat   BYTE PTR ds:[rbx]
   1400158e3:	add    BYTE PTR [rip+0x3a00db5c],dh        # 0x17a023445
   1400158e9:	pop    rbp
   1400158ea:	fild   WORD PTR [rax]
   1400158ec:	xor    DWORD PTR [rcx-0x33],esp
   1400158ef:	add    BYTE PTR [rsi],dh
   1400158f1:	(bad)  
   1400158f2:	fld    QWORD PTR [rax]
   1400158f4:	data16 fild WORD PTR ss:[rax]
   1400158f8:	xor    al,0x6e
   1400158fa:	fadd   DWORD PTR [rax]
   1400158fc:	xor    al,0x54
   1400158fe:	loope  0x140015900
   140015900:	ss pop rsp
   140015902:	in     al,0x0
   140015904:	ss movsxd esp,ebx
   140015907:	add    BYTE PTR [rax],bh
   140015909:	fs out 0x0,eax
   14001590c:	(bad)  
   14001590d:	push   0xffffffffffffffe6
   14001590f:	add    BYTE PTR [rax],bh
   140015911:	outs   dx,DWORD PTR ds:[rsi]
   140015912:	out    0x0,al
   140015914:	(bad)  
   140015915:	ins    DWORD PTR es:[rdi],dx
   140015916:	call   0x1286d911b
   14001591b:	add    BYTE PTR [rsi],dh
   14001591d:	jbe    0x1400158ff
   14001591f:	add    BYTE PTR [rdi],dh
   140015921:	jns    0x140015909
   140015923:	add    BYTE PTR [rax],bh
   140015925:	jl     0x14001590c
   140015927:	add    BYTE PTR [rax],bh
   140015929:	jno    0x140015914
   14001592b:	add    BYTE PTR [rcx],bh
   14001592d:	jne    0x140015919
   14001592f:	add    BYTE PTR [rdx],bh
   140015931:	jns    0x14001591d
   140015933:	add    BYTE PTR [rip+0x3900ea79],bh        # 0x1790243b2
   140015939:	jge    0x140015925
   14001593b:	add    BYTE PTR [rdi*2+0x754400ea],bh
   140015942:	fld    QWORD PTR [rax]
   140015944:	rex.XB jnp 0x14001592f
   140015947:	add    BYTE PTR [rdx],bh
   140015949:	sub    bl,0x0
   14001594c:	cmp    al,BYTE PTR [rdx-0x7dc3ff14]
   140015952:	in     al,dx
   140015953:	add    BYTE PTR [rdx],bh
   140015955:	test   esp,ebp
   140015957:	add    BYTE PTR [rax*4-0x76c4ff14],bh
   14001595e:	in     al,dx
   14001595f:	add    BYTE PTR [rdx+rcx*4],bh
   140015962:	in     eax,dx
   140015963:	add    BYTE PTR [rbx],bh
   140015965:	mov    gs,ebp
   140015967:	add    BYTE PTR [rcx*4-0x6ec4ff12],bh
   14001596e:	out    dx,al
   14001596f:	add    BYTE PTR [rcx+rdx*4],bh
   140015972:	out    dx,al
   140015973:	add    BYTE PTR [rdx],bh
   140015975:	xchg   ebp,eax
   140015976:	out    dx,al
   140015977:	add    BYTE PTR [rdx],bh
   140015979:	cdq    
   14001597a:	out    dx,al
   14001597b:	add    BYTE PTR [rdx],bh
   14001597d:	sahf   
   14001597e:	out    dx,eax
   14001597f:	add    BYTE PTR [rdx],bh
   140015981:	fwait
   140015982:	lock add BYTE PTR [rbx],bh
   140015985:	movabs al,ds:0xa83a00efa13d00ef
   14001598e:	(bad)  
   14001598f:	add    BYTE PTR [rbx],bh
   140015991:	mov    cl,0xec
   140015993:	add    BYTE PTR [rdx],bh
   140015995:	movabs ds:0xa73c00f0a53a00f1,al
   14001599e:	lock add BYTE PTR [rdx],bh
   1400159a1:	test   eax,0xad3900f1
   1400159a6:	repnz add BYTE PTR [rbp*4-0x4fc6ff0f],bh
   1400159ae:	repnz add BYTE PTR [rax+rsi*4],bh
   1400159b2:	repnz add BYTE PTR [rbx],bh
   1400159b5:	mov    ah,0xf3
   1400159b7:	add    BYTE PTR [rbx],bh
   1400159b9:	mov    bh,0xf4
   1400159bb:	add    BYTE PTR [rax],bh
   1400159bd:	mov    eax,0xba3e00f2
   1400159c2:	repnz add BYTE PTR [rbx],bh
   1400159c5:	mov    ecx,0x825600f4
   1400159ca:	fld    DWORD PTR [rax]
   1400159cc:	push   rcx
   1400159cd:	sbb    esi,0x0
   1400159d0:	push   0xffffffffffffff96
   1400159d2:	(bad)  
   1400159d3:	add    BYTE PTR [rax-0x67],bh
   1400159d6:	mov    DWORD PTR [rax],0xc89472
   1400159dc:	movsxd ecx,DWORD PTR [rbx+rdx*8-0x304a8d00]
   1400159e3:	add    BYTE PTR [rsi-0x4a],dh
   1400159e6:	(bad)  
   1400159e7:	add    BYTE PTR [rdi-0x72],al
   1400159ea:	in     eax,0x0
   1400159ec:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   1400159ee:	jmp    0x1400159f0
   1400159f0:	rex.RB mov r12b,0xec
   1400159f3:	add    BYTE PTR [rip+0x3c00eccc],bh        # 0x17c0246c5
   1400159f9:	shr    ch,cl
   1400159fb:	add    BYTE PTR [rip+0x3800ebdc],bh        # 0x1780245dd
   140015a01:	(bad)  
   140015a02:	repnz add BYTE PTR [rsi],dh
   140015a05:	int    0xf1
   140015a07:	add    BYTE PTR [rdx-0x77ff665a],bh
   140015a0d:	(bad)  
   140015a0e:	lods   al,BYTE PTR ds:[rsi]
   140015a0f:	add    BYTE PTR [rsi-0x76ff4d80],al
   140015a15:	xor    DWORD PTR [rdx-0x47716c00],0x0
   140015a1c:	cwde   
   140015a1d:	nop
   140015a1e:	mov    bh,0x0
   140015a20:	(bad)  
   140015a21:	lods   eax,DWORD PTR ds:[rsi]
   140015a22:	mov    esi,0xb5a7a000
   140015a27:	add    BYTE PTR [rcx-0x31ff4258],ah
   140015a2d:	lods   al,BYTE PTR ds:[rsi]
   140015a2e:	add    BYTE PTR [rax],0xd4
   140015a31:	mov    ah,0x8c
   140015a33:	add    dl,bl
   140015a35:	mov    esp,0xbfdc0095
   140015a3a:	fwait
   140015a3b:	add    BYTE PTR [rsi+riz*4-0x4970ff40],dl
   140015a42:	(bad)  
   140015a43:	add    BYTE PTR [rdi+rax*8+0xdb],dl
   140015a4a:	add    BYTE PTR [rax],al
   140015a4c:	(bad)  
   140015a4d:	(bad)  
   140015a4e:	inc    DWORD PTR [rax]
	...
   140015ac4:	add    ch,bh
	...
   140015af2:	add    BYTE PTR [rax],al
   140015af4:	in     eax,0xdd
   140015af6:	fucom  st(5)
	...
   140015b24:	fstp   st(5)
   140015b26:	fstp   st(5)
   140015b28:	call   0x140015b2d
	...
   140015b51:	add    BYTE PTR [rax],al
   140015b53:	cld    
   140015b54:	fstp   st(5)
   140015b56:	fcmovu st,st(2)
   140015b58:	(bad)  
   140015b59:	(bad)  
   140015b5a:	hlt    
	...
   140015b83:	out    0xda,eax
   140015b85:	(bad)  
   140015b86:	(bad)  
   140015b87:	ror    dh,cl
   140015b89:	retf   0xfbc7
	...
   140015bb0:	add    BYTE PTR [rax],al
   140015bb2:	add    dl,cl
   140015bb4:	retf   0xcaca
   140015bb7:	retf   0xc7c7
   140015bba:	ret    
   140015bbb:	shl    dh,0x0
	...
   140015be2:	faddp  st(0),st
   140015be4:	ret    
   140015be5:	ret    
   140015be6:	ret    
   140015be7:	ret    
   140015be8:	rol    al,0xc0
   140015beb:	mov    ebx,0xbb
	...
   140015c10:	add    BYTE PTR [rax],al
   140015c12:	movabs al,ds:0xbbb7bbb7bbb7b0a9
   140015c1b:	mov    bh,0xb7
   140015c1d:	mov    ebp,0x0
	...
   140015c3e:	add    BYTE PTR [rax],al
   140015c40:	add    BYTE PTR [rsi-0x5b647c83],al
   140015c46:	test   eax,0xb2b2afad
   140015c4b:	mov    bh,0xbb
   140015c4d:	mov    ebx,0xde
	...
   140015c5e:	add    dl,dh
	...
   140015c70:	add    BYTE PTR [rdi+rsi*2+0x7b],dh
   140015c74:	add    DWORD PTR [rbx-0x525b5f67],0xb7b7b2af
   140015c7e:	mov    ebx,0xe3
	...
   140015c8b:	add    BYTE PTR [rax],al
   140015c8d:	add    BYTE PTR [rax+rax*1+0x0],al
	...
   140015ca0:	jne    0x140015d14
   140015ca2:	je     0x140015d1a
   140015ca4:	jns    0x140015d21
   140015ca6:	add    DWORD PTR [rbx-0x52565f65],0xbbbbb7b1
   140015cb0:	loop   0x140015cb2
	...
   140015cba:	add    BYTE PTR [rax],al
   140015cbc:	add    BYTE PTR [rax+0x8c],al
	...
   140015cce:	add    BYTE PTR [rbp+0x73717025],al
   140015cd4:	je     0x140015d4d
   140015cd6:	jnp    0x140015d55
   140015cd8:	add    DWORD PTR [rbx-0x4e505b5e],0xffffffb7
   140015cdf:	mov    ebx,0xe1c0
	...
   140015cec:	xchg   esp,eax
   140015ced:	jle    0x140015cef
	...
   140015cf7:	add    BYTE PTR [rax],al
   140015cf9:	add    BYTE PTR [rdx+0x0],ch
   140015cfc:	add    BYTE PTR [rax],al
   140015cfe:	sub    al,0x16
   140015d00:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b474cf2b
   140015d06:	ja     0x140015d82
   140015d08:	jge    0x140015c8c
   140015d0a:	cdq    
   140015d0b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015d0c:	lods   eax,DWORD PTR ds:[rsi]
   140015d0d:	mov    cl,0xb7
   140015d0f:	mov    ebx,0xe0c3c0
   140015d14:	add    BYTE PTR [rax],al
   140015d16:	add    BYTE PTR [rax],al
   140015d18:	add    BYTE PTR [rax],al
   140015d1a:	icebp  
   140015d1b:	jle    0x140015d9b
   140015d1d:	test   BYTE PTR [rax],al
	...
   140015d27:	add    BYTE PTR [rsi+0x5d],ch
   140015d2a:	pop    rdi
   140015d2b:	pop    rsp
   140015d2c:	push   rbp
   140015d2d:	cmp    BYTE PTR [r14+rdx*1],r11b
   140015d31:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b474cf5c
   140015d37:	ja     0x140015db4
   140015d39:	jge    0x140015cbd
   140015d3b:	fwait
   140015d3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015d3d:	lods   eax,DWORD PTR ds:[rsi]
   140015d3e:	mov    bh,0xbb
   140015d40:	rol    bl,0xc3
   140015d43:	out    0xf5,al
   140015d45:	add    BYTE PTR [rax],al
   140015d47:	add    BYTE PTR [rax],al
   140015d49:	mov    dl,BYTE PTR [rbx+0xf17e7e]
	...
   140015d57:	fs (bad) 
   140015d59:	(bad)  
   140015d5a:	pop    rdi
   140015d5b:	pop    rdi
   140015d5c:	pop    rbx
   140015d5d:	push   rsi
   140015d5e:	rex.RB (bad) 
   140015d60:	sbb    BYTE PTR [rbx+riz*1],dl
   140015d63:	and    eax,0x74737225
   140015d68:	jns    0x140015de5
   140015d6a:	add    DWORD PTR [rdx-0x444e525d],0xffffffc0
   140015d71:	rol    bl,0xc3
   140015d74:	ret    
   140015d75:	mov    ebx,0x939ea6bc
   140015d7a:	xchg   ebx,eax
   140015d7b:	jle    0x140015dfb
	...
   140015d85:	add    BYTE PTR [rdx+0x61],ah
   140015d88:	(bad)  
   140015d89:	(bad)  
   140015d8a:	(bad)  
   140015d8b:	pop    rdi
   140015d8c:	pop    rsp
   140015d8d:	pop    rbx
   140015d8e:	pop    rcx
   140015d8f:	rex.RX or eax,0x2523141b
   140015d95:	and    eax,0x79767472
   140015d9a:	jl     0x140015d1e
   140015d9c:	movabs ds:0xc0c3c3c3c0b7b2a4,al
   140015da5:	mov    ebx,0x939dabb2
   140015daa:	jle    0x140015e2a
   140015dac:	mov    eax,DWORD PTR [rax]
   140015dae:	add    BYTE PTR [rax],al
   140015db0:	add    BYTE PTR [rax],al
   140015db2:	add    BYTE PTR [rax],al
   140015db4:	imul   esp,DWORD PTR [rbx+0x61],0x61
   140015db8:	(bad)  
   140015db9:	(bad)  
   140015dba:	(bad)  
   140015dbb:	pop    rdi
   140015dbc:	pop    rsp
   140015dbd:	pop    rbx
   140015dbe:	pop    rcx
   140015dbf:	pop    rcx
   140015dc0:	rex.X (bad) 
   140015dc2:	adc    edx,DWORD PTR [rsi]
   140015dc4:	and    al,0x25
   140015dc6:	jo     0x140015e3a
   140015dc8:	je     0x140015e41
   140015dca:	jnp    0x140015d4e
   140015dcc:	cdq    
   140015dcd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015dce:	mov    dl,0xb7
   140015dd0:	rol    dh,0xc6
   140015dd3:	ret    
   140015dd4:	ret    
   140015dd5:	mov    ebx,0x9296abb1
   140015dda:	jle    0x140015e5a
   140015ddc:	add    BYTE PTR [rax],al
   140015dde:	add    BYTE PTR [rax],al
   140015de0:	add    BYTE PTR [rax],al
   140015de2:	add    BYTE PTR [rsi+0x63],ah
   140015de5:	movsxd esp,DWORD PTR [rbx+0x61]
   140015de8:	(bad)  
   140015de9:	(bad)  
   140015dea:	(bad)  
   140015deb:	(bad)  
   140015dec:	pop    rdi
   140015ded:	pop    rbx
   140015dee:	push   rdi
   140015def:	pop    rcx
   140015df0:	pop    rax
   140015df1:	add    dl,BYTE PTR [rbx]
   140015df4:	and    ah,BYTE PTR ds:0x79767371
   140015dfb:	jge    0x140015d7f
   140015dfd:	movabs ds:0xb7c0c3c6c3c0b7ae,eax
   140015e06:	lods   eax,DWORD PTR ds:[rsi]
   140015e07:	sahf   
   140015e08:	xchg   ebp,eax
   140015e09:	xchg   edx,eax
   140015e0a:	jle    0x140015da0
   140015e0c:	add    BYTE PTR [rax],al
   140015e0e:	add    BYTE PTR [rax],al
   140015e10:	add    bh,dh
   140015e12:	gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   140015e18:	(bad)  
   140015e19:	(bad)  
   140015e1a:	(bad)  
   140015e1b:	(bad)  
   140015e1c:	pop    rdi
   140015e1d:	pop    rbx
   140015e1e:	push   rdi
   140015e1f:	pop    rcx
   140015e20:	pop    rax
   140015e21:	rex.WRB cmp rax,0x2523131a
   140015e27:	and    eax,0x7b777473
   140015e2c:	(bad)  
   140015e2d:	movabs ds:0xb7c0c3c6c6c0b7ad,eax
   140015e36:	lods   al,BYTE PTR ds:[rsi]
   140015e37:	popf   
   140015e38:	xchg   ebx,eax
   140015e39:	jle    0x140015eb9
   140015e3b:	pop    QWORD PTR [rax]
   140015e3d:	add    BYTE PTR [rax],al
   140015e3f:	add    cl,bh
   140015e41:	gs gs gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   140015e49:	(bad)  
   140015e4a:	(bad)  
   140015e4b:	(bad)  
   140015e4c:	pop    rdi
   140015e4d:	pop    rsp
   140015e4e:	push   rdi
   140015e4f:	pop    rcx
   140015e50:	pop    rax
   140015e51:	rex.WRX
   140015e52:	rex.WX or rax,0x25241511
   140015e58:	jno    0x140015ecc
   140015e5a:	jbe    0x140015ed7
   140015e5c:	(bad)  
   140015e5d:	fwait
   140015e5e:	lods   eax,DWORD PTR ds:[rsi]
   140015e5f:	mov    bh,0xc0
   140015e61:	mov    dh,0xc3
   140015e64:	shl    BYTE PTR [rcx+0x7e9396ab],0x7e
   140015e6b:	add    BYTE PTR [rax],al
   140015e6d:	add    BYTE PTR [rax],al
   140015e6f:	add    BYTE PTR [rax],al
   140015e71:	add    dl,bh
   140015e73:	ins    DWORD PTR es:[rdi],dx
   140015e74:	gs movsxd esp,DWORD PTR gs:[ebx+0x63]
   140015e7a:	(bad)  
   140015e7b:	(bad)  
   140015e7c:	(bad)  
   140015e7d:	pop    rbx
   140015e7e:	pop    rbx
   140015e7f:	pop    rcx
   140015e80:	rex.WRX
   140015e81:	rex.WRX
   140015e82:	rex.WXB cmp rax,QWORD PTR [r11]
   140015e85:	adc    edx,DWORD PTR [rsi]
   140015e87:	and    al,0x25
   140015e89:	jb     0x140015f01
   140015e8b:	jns    0x140015f0a
   140015e8d:	cdq    
   140015e8e:	lods   eax,DWORD PTR ds:[rsi]
   140015e8f:	mov    bh,0xc0
   140015e91:	mov    bh,0xc3
   140015e94:	mov    ebx,0x9295abb1
   140015e99:	jle    0x140015e23
	...
   140015ea3:	add    BYTE PTR [rax],al
   140015ea5:	outs   dx,DWORD PTR ds:[rsi]
   140015ea6:	gs movsxd esp,DWORD PTR gs:[rdx+0x61]
   140015eab:	(bad)  
   140015eac:	pop    rbp
   140015ead:	pop    rsp
   140015eae:	push   rdi
   140015eaf:	pop    rcx
   140015eb0:	rex.WRX
   140015eb1:	rex.WXB sub bl,BYTE PTR [r9]
   140015eb4:	(bad)  
   140015eb5:	sbb    edx,DWORD PTR [rip+0x73722523]        # 0x1b37383de
   140015ebb:	ja     0x140015f39
   140015ebd:	cdq    
   140015ebe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015ebf:	mov    bh,0xc0
   140015ec1:	mov    edi,0x9eaebac6
   140015ec7:	xchg   ebx,eax
   140015ec8:	jle    0x140015e5c
   140015eca:	lock add BYTE PTR [rax],al
	...
   140015ed5:	add    BYTE PTR [rax],al
   140015ed7:	cli    
   140015ed8:	push   0x60616163
   140015edd:	pop    rsp
   140015ede:	push   rdi
   140015edf:	pop    rcx
   140015ee0:	rex.WB and BYTE PTR [r9],bl
   140015ee3:	adc    al,BYTE PTR [rdx]
   140015ee5:	or     dl,BYTE PTR [rcx]
   140015ee7:	(bad)  
   140015ee8:	and    al,0x70
   140015eea:	jb     0x140015f62
   140015eec:	jnp    0x140015e70
   140015eee:	lods   al,BYTE PTR ds:[rsi]
   140015eef:	mov    bh,0xc6
   140015ef1:	mov    edi,0x9daeb7c6
   140015ef7:	xchg   ebx,eax
   140015ef8:	jle    0x140015f78
	...
   140015f0a:	ins    DWORD PTR es:[rdi],dx
   140015f0b:	(bad)  
   140015f0c:	pop    rbp
   140015f0d:	pop    rsp
   140015f0e:	push   rdi
   140015f0f:	rex.W and BYTE PTR [rcx],bl
   140015f12:	adc    edx,DWORD PTR [rcx]
   140015f14:	adc    DWORD PTR [rcx],ecx
   140015f16:	sbb    eax,0x72252313
   140015f1b:	je     0x140015f98
   140015f1d:	and    DWORD PTR [rdi+rsi*4-0x3938383a],0xffffffb7
   140015f25:	lods   al,BYTE PTR ds:[rsi]
   140015f26:	pushf  
   140015f27:	xchg   edx,eax
   140015f28:	jle    0x140015eb2
	...
   140015f3a:	add    BYTE PTR [rax],al
   140015f3c:	clc    
   140015f3d:	pop    rsi
   140015f3e:	sub    DWORD PTR ds:[rax+rbx*1],ebx
   140015f42:	sbb    BYTE PTR [rbx],bl
   140015f44:	sbb    BYTE PTR [rsi],bl
   140015f46:	or     DWORD PTR [rbx],edx
   140015f48:	(bad)  
   140015f49:	and    al,0x70
   140015f4b:	jae    0x140015fc4
   140015f4d:	(bad)  
   140015f4e:	movabs ds:0x95abb7c0ccccc6b7,eax
   140015f57:	jle    0x140015fd7
   140015f59:	repz add BYTE PTR [rax],al
	...
   140015f6c:	add    BYTE PTR [rax],al
   140015f6e:	sub    ebp,DWORD PTR [rcx]
   140015f70:	sub    DWORD PTR [rax],ebp
   140015f72:	and    BYTE PTR [rip+0x1f0d1d1e],bl        # 0x15f0e7c96
   140015f78:	adc    esp,DWORD PTR [rbx]
   140015f7a:	and    eax,0xa37d7772
   140015f7f:	mov    bh,0xc6
   140015f81:	int3   
   140015f82:	int3   
   140015f83:	(bad)  
   140015f84:	mov    cl,0x9e
   140015f86:	xchg   ebx,eax
   140015f87:	xchg   edx,eax
   140015f88:	xchg   esp,eax
	...
   140015f9d:	add    BYTE PTR [rax],al
   140015f9f:	cmp    cl,BYTE PTR [rip+0x2904060a]        # 0x1690565af
   140015fa5:	sub    BYTE PTR [rcx],ch
   140015fa7:	(bad)  
   140015fa8:	adc    esp,DWORD PTR [rdx]
   140015faa:	and    eax,0xa27c7472
   140015faf:	mov    bh,0xc7
   140015fb1:	ror    ah,cl
   140015fb3:	shl    BYTE PTR [rcx-0x74816d62],0x0
	...
   140015fce:	add    BYTE PTR [rax],al
   140015fd0:	rex.WRXB xor BYTE PTR [r9+r9*1],r15b
   140015fd4:	or     eax,DWORD PTR [rip+0x131f3904]        # 0x1532098de
   140015fda:	and    al,0x70
   140015fdc:	je     0x140016059
   140015fde:	fwait
   140015fdf:	mov    ebx,0xc0ccd6c7
   140015fe4:	scas   al,BYTE PTR es:[rdi]
   140015fe5:	pushf  
   140015fe6:	xchg   edx,eax
   140015fe7:	jle    0x140015fe9
	...
   140016001:	push   rsp
   140016002:	push   rdx
   140016003:	xor    DWORD PTR [rsi+rcx*1],edi
   140016006:	or     eax,DWORD PTR [rsi]
   140016008:	cmp    edx,DWORD PTR [rbx]
   14001600a:	and    ah,BYTE PTR [rip+0xffffffffb79b7972]        # 0xf79cd982
   140016010:	int3   
   140016011:	fcmovbe st,st(2)
   140016013:	shr    BYTE PTR [rbp+rdx*4+0x947e],0x0
	...
   14001602f:	add    BYTE PTR [rax],al
   140016031:	add    BYTE PTR [rbp+0x33],al
   140016034:	xor    DWORD PTR [rip+0x203d0d37],ebp        # 0x1603e6d71
   14001603a:	adc    al,0x24
   14001603c:	jb     0x1400160b5
   14001603e:	cmp    DWORD PTR [rsi-0x442e252e],0xffffffab
   140016045:	xchg   ebx,eax
   140016046:	jle    0x140015fd5
	...
   140016064:	rex.WR xor BYTE PTR [rsi],r13b
   140016067:	cmp    al,0x38
   140016069:	cmp    dl,BYTE PTR [rbx]
   14001606b:	and    esi,DWORD PTR [rax+0x76]
   14001606e:	cmp    DWORD PTR [rsi-0x452e132a],0xffffff9e
   140016075:	xchg   ebx,eax
   140016076:	jle    0x140016078
	...
   140016094:	add    BYTE PTR [rax],al
   140016096:	rex.X xor BYTE PTR [rip+0x25161d41],bpl        # 0x165177dde
   14001609d:	je     0x140016022
   14001609f:	mov    bh,0xda
   1400160a1:	in     eax,dx
   1400160a2:	(bad)  
   1400160a3:	mov    bh,0x9d
   1400160a5:	xchg   edx,eax
   1400160a6:	jle    0x1400160a8
	...
   1400160c4:	add    BYTE PTR [rax],al
   1400160c6:	add    BYTE PTR [rbp+0x31],dl
   1400160c9:	xor    BYTE PTR [rcx],bh
   1400160cb:	adc    esp,DWORD PTR [rdx+rsi*2]
   1400160ce:	jge    0x14001608b
   1400160d0:	in     al,dx
   1400160d1:	(bad)  
   1400160d2:	(bad)  
   1400160d3:	mov    cl,0x95
   1400160d5:	jle    0x140016064
	...
   1400160f7:	add    BYTE PTR [rcx+0x31],dl
   1400160fa:	rex.X sbb spl,BYTE PTR [rdx]
   1400160fd:	jno    0x14001617a
   1400160ff:	mov    edx,0xaed1ebea
   140016104:	xchg   edx,eax
   140016105:	jle    0x140016107
	...
   140016127:	add    BYTE PTR [rax],al
   140016129:	xor    r9,QWORD PTR [r14+r10*1]
   14001612d:	and    eax,0xebebb37a
   140016132:	shr    DWORD PTR [rbx+0x9492],1
	...
   140016158:	add    BYTE PTR [rax],al
   14001615a:	xor    eax,DWORD PTR [rax+0x13]
   14001615d:	and    al,0x76
   14001615f:	mov    bl,0xeb
   140016161:	jmp    0x14001612a
   140016163:	sahf   
   140016164:	jle    0x1400160f6
	...
   14001618a:	imul   eax,DWORD PTR [rdx+0x6],0xebaa7322
   140016191:	jmp    0x140016156
   140016193:	xchg   ebp,eax
   140016194:	jle    0x140016196
	...
   1400161ba:	add    BYTE PTR [rdi+0x3f],al
   1400161bd:	adc    eax,0xebeba771
   1400161c2:	scas   eax,DWORD PTR es:[rdi]
   1400161c3:	xchg   ebx,eax
   1400161c4:	mov    al,BYTE PTR [rax]
	...
   1400161ea:	add    BYTE PTR [rax],al
   1400161ec:	push   rax
   1400161ed:	and    BYTE PTR [rip+0xffffffffa4e9eb83],ah        # 0xe4eb4d76
   1400161f3:	jle    0x1400161f5
	...
   140016219:	add    BYTE PTR [rax],al
   14001621b:	add    BYTE PTR [rdx+0x3a],bl
   14001621e:	(bad)  
   14001621f:	jnp    0x14001620b
   140016221:	rcl    BYTE PTR [rsi+0x88],1
	...
   14001624b:	add    BYTE PTR [rax],al
   14001624d:	push   rbx
   14001624e:	sbb    al,0x74
   140016250:	iret   
   140016251:	mov    bl,0x92
	...
   14001627b:	add    BYTE PTR [rax],al
   14001627d:	add    BYTE PTR [rax],dl
   14001627f:	(bad)  
   140016280:	fwait
   140016281:	cwde   
   140016282:	mov    es,WORD PTR [rax]
	...
   1400162ac:	add    BYTE PTR [rax],al
   1400162ae:	imul   esp,DWORD PTR [rcx],0x8779
	...
   1400162dc:	add    BYTE PTR [rax],al
   1400162de:	add    dh,ch
   1400162e0:	out    dx,eax
	...
   14001634d:	add    BYTE PTR [rax],al
   14001634f:	add    bh,bh
   140016351:	(bad)  
   140016352:	(bad)  
   140016353:	(bad)  
   140016354:	(bad)  
   140016355:	inc    DWORD PTR [rax]
   140016357:	add    bh,bh
   140016359:	(bad)  
   14001635a:	(bad)  
   14001635b:	(bad)  
   14001635c:	(bad)  
   14001635d:	inc    DWORD PTR [rax]
   14001635f:	add    bh,bh
   140016361:	(bad)  
   140016362:	sti    
   140016363:	(bad)  
   140016364:	(bad)  
   140016365:	inc    DWORD PTR [rax]
   140016367:	add    bh,bh
   140016369:	push   rax
   14001636b:	(bad)  
   14001636c:	(bad)  
   14001636d:	inc    DWORD PTR [rax]
   14001636f:	add    bh,bh
   140016371:	push   rax
   140016373:	jg     0x140016374
   140016375:	inc    DWORD PTR [rax]
   140016377:	add    bh,bh
   140016379:	jmp    rax
   14001637b:	(bad)  
   14001637c:	(bad)  
   14001637d:	inc    DWORD PTR [rax]
   14001637f:	add    bh,bh
   140016381:	jmp    rax
   140016383:	ud0    edi,edi
   140016386:	add    BYTE PTR [rax],al
   140016388:	(bad)  
   140016389:	jmp    rax
   14001638b:	(bad)  
   14001638c:	(bad)  
   14001638d:	inc    DWORD PTR [rax]
   14001638f:	add    bh,bh
   140016391:	inc    eax
   140016393:	(bad)  
   140016394:	(bad)  
   140016395:	inc    DWORD PTR [rax]
   140016397:	add    bh,bh
   140016399:	inc    eax
   14001639b:	add    edi,edi
   14001639d:	inc    DWORD PTR [rax]
   14001639f:	add    bh,bh
   1400163a1:	inc    DWORD PTR [rax+0xfeff01]
   1400163a7:	add    bh,bh
   1400163a9:	inc    DWORD PTR [rax+0xfdff00]
   1400163af:	add    bh,bh
   1400163b1:	inc    DWORD PTR [rax]
   1400163b3:	add    BYTE PTR [rdi-0x7],bh
   1400163b6:	add    BYTE PTR [rax],al
   1400163b8:	(bad)  
   1400163b9:	inc    BYTE PTR [rax]
   1400163bb:	add    BYTE PTR [rdi],bh
   1400163bd:	repz add BYTE PTR [rax],al
   1400163c0:	(bad)  
   1400163c1:	fadd   QWORD PTR [rax]
   1400163c3:	add    BYTE PTR [rdi],bl
   1400163c5:	ret    
   1400163c6:	add    BYTE PTR [rax],al
   1400163c8:	inc    DWORD PTR [rax]
   1400163ca:	add    BYTE PTR [rax],al
   1400163cc:	(bad)  
   1400163cd:	add    DWORD PTR [rax],0x0
   1400163d0:	inc    BYTE PTR [rax]
   1400163d2:	add    BYTE PTR [rax],al
   1400163d4:	add    BYTE PTR [rdi],al
   1400163d6:	add    BYTE PTR [rax],al
   1400163d8:	cld    
   1400163d9:	add    BYTE PTR [rax],al
   1400163db:	add    BYTE PTR [rax],al
   1400163dd:	(bad)  
   1400163de:	add    BYTE PTR [rax],al
   1400163e0:	lock add BYTE PTR [rax],al
   1400163e3:	add    BYTE PTR [rax],al
   1400163e5:	sldt   WORD PTR [rax]
   1400163e8:	loopne 0x1400163ea
   1400163ea:	add    BYTE PTR [rax],al
   1400163ec:	add    BYTE PTR [rdi],cl
   1400163ee:	add    BYTE PTR [rax],al
   1400163f0:	add    BYTE PTR [rax],0x0
   1400163f3:	add    BYTE PTR [rax],al
   1400163f5:	sldt   WORD PTR [rax]
   1400163f8:	add    BYTE PTR [rax],al
   1400163fa:	add    BYTE PTR [rax],al
   1400163fc:	add    BYTE PTR [rdi],bl
   1400163fe:	add    BYTE PTR [rax],al
   140016400:	rol    BYTE PTR [rax],0x0
   140016403:	add    BYTE PTR [rax],al
   140016405:	(bad)  
   140016406:	add    BYTE PTR [rax],al
   140016408:	clc    
   140016409:	add    BYTE PTR [rax],al
   14001640b:	add    BYTE PTR [rax],al
   14001640d:	(bad)  
   14001640e:	add    BYTE PTR [rax],al
   140016410:	inc    BYTE PTR [rax]
   140016412:	add    BYTE PTR [rax],al
   140016414:	add    BYTE PTR [rdi],bh
   140016416:	add    BYTE PTR [rax],al
   140016418:	inc    eax
   14001641a:	add    BYTE PTR [rax],al
   14001641c:	add    BYTE PTR [rdi],bh
   14001641e:	add    BYTE PTR [rax],al
   140016420:	push   rax
   140016422:	add    BYTE PTR [rax],al
   140016424:	add    BYTE PTR [rdi],bh
   140016426:	add    BYTE PTR [rax],al
   140016428:	(bad)  
   140016429:	cld    
   14001642a:	add    BYTE PTR [rax],al
   14001642c:	add    BYTE PTR [rdi+0x0],bh
   14001642f:	add    bh,bh
   140016431:	inc    BYTE PTR [rax]
   140016433:	add    BYTE PTR [rax],al
   140016435:	jg     0x140016437
   140016437:	add    bh,bh
   140016439:	inc    DWORD PTR [rax]
   14001643b:	add    BYTE PTR [rax],al
   14001643d:	inc    DWORD PTR [rax]
   14001643f:	add    bh,bh
   140016441:	inc    DWORD PTR [rax+0xff0000]
   140016447:	add    bh,bh
   140016449:	inc    eax
   14001644b:	add    BYTE PTR [rax],al
   14001644d:	inc    DWORD PTR [rax]
   14001644f:	add    bh,bh
   140016451:	push   rax
   140016453:	add    BYTE PTR [rcx],al
   140016455:	inc    DWORD PTR [rax]
   140016457:	add    bh,bh
   140016459:	(bad)  
   14001645a:	cld    
   14001645b:	add    BYTE PTR [rcx],al
   14001645d:	inc    DWORD PTR [rax]
   14001645f:	add    bh,bh
   140016461:	(bad)  
   140016462:	inc    BYTE PTR [rax]
   140016464:	add    edi,edi
   140016466:	add    BYTE PTR [rax],al
   140016468:	(bad)  
   140016469:	(bad)  
   14001646a:	inc    DWORD PTR [rax]
   14001646c:	add    edi,edi
   14001646e:	add    BYTE PTR [rax],al
   140016470:	(bad)  
   140016471:	(bad)  
   140016472:	inc    DWORD PTR [rax+0xff03]
   140016478:	(bad)  
   140016479:	(bad)  
   14001647a:	inc    eax
   14001647c:	add    edi,edi
   14001647e:	add    BYTE PTR [rax],al
   140016480:	(bad)  
   140016481:	(bad)  
   140016482:	inc    eax
   140016484:	(bad)  
   140016485:	inc    DWORD PTR [rax]
   140016487:	add    bh,bh
   140016489:	(bad)  
   14001648a:	jmp    rax
   14001648c:	(bad)  
   14001648d:	inc    DWORD PTR [rax]
   14001648f:	add    bh,bh
   140016491:	(bad)  
   140016492:	push   rax
   140016494:	ud0    eax,DWORD PTR [rax]
   140016497:	add    bh,bh
   140016499:	(bad)  
   14001649a:	push   rax
   14001649c:	ud0    eax,DWORD PTR [rax]
   14001649f:	add    bh,bh
   1400164a1:	(bad)  
   1400164a2:	(bad)  
   1400164a3:	clc    
   1400164a4:	(bad)  
   1400164a5:	inc    DWORD PTR [rax]
   1400164a7:	add    bh,bh
   1400164a9:	(bad)  
   1400164aa:	(bad)  
   1400164ab:	cld    
   1400164ac:	(bad)  
   1400164ad:	inc    DWORD PTR [rax]
   1400164af:	add    bh,bh
   1400164b1:	(bad)  
   1400164b2:	(bad)  
   1400164b3:	cld    
   1400164b4:	(bad)  
   1400164b5:	inc    DWORD PTR [rax]
   1400164b7:	add    bh,bh
   1400164b9:	(bad)  
   1400164ba:	(bad)  
   1400164bb:	(bad)  
   1400164bc:	jg     0x1400164bd
   1400164be:	add    BYTE PTR [rax],al
   1400164c0:	(bad)  
   1400164c1:	(bad)  
   1400164c2:	(bad)  
   1400164c3:	(bad)  
   1400164c4:	(bad)  
   1400164c5:	inc    DWORD PTR [rax]
   1400164c7:	add    bh,bh
   1400164c9:	(bad)  
   1400164ca:	(bad)  
   1400164cb:	(bad)  
   1400164cc:	(bad)  
   1400164cd:	inc    DWORD PTR [rax]
   1400164cf:	add    BYTE PTR [rax],ch
   1400164d1:	add    BYTE PTR [rax],al
   1400164d3:	add    BYTE PTR [rax],ah
   1400164d5:	add    BYTE PTR [rax],al
   1400164d7:	add    BYTE PTR [rax+0x0],al
   1400164da:	add    BYTE PTR [rax],al
   1400164dc:	add    DWORD PTR [rax],eax
   1400164de:	or     BYTE PTR [rax],al
   1400164e0:	add    BYTE PTR [rax],al
   1400164e2:	add    BYTE PTR [rax],al
   1400164e4:	add    BYTE PTR [rax+rax*1],al
	...
   1400164ef:	add    BYTE PTR [rax],al
   1400164f1:	add    DWORD PTR [rax],eax
   1400164f3:	add    BYTE PTR [rax],al
   1400164f5:	add    DWORD PTR [rax],eax
   1400164f7:	add    BYTE PTR [rax],al
   1400164f9:	add    BYTE PTR [rax],al
   1400164fb:	add    BYTE PTR [rdi+riz*1],bh
   1400164fe:	add    BYTE PTR ds:[rdi+0x39],dl
   140016502:	(bad)  
   140016503:	add    BYTE PTR [rdi+0x3d],bl
   140016506:	xor    eax,0x3e355200
   14001650b:	add    BYTE PTR [rdx+0x3d],bl
   14001650e:	cmp    eax,0x2b547e00
   140016513:	add    BYTE PTR [rbx+rdx*2+0x2d],bh
   140016517:	add    BYTE PTR [rdx+0x40],ah
   14001651a:	add    BYTE PTR ss:[rbp+0x42],ah
   14001651e:	xor    eax,0x30456900
   140016523:	add    BYTE PTR [rcx+0x47],ch
   140016526:	add    BYTE PTR ss:[rcx+0x40],ah
   14001652a:	cmp    DWORD PTR [rax],eax
   14001652c:	cmp    BYTE PTR gs:[rax],r8b
   140016530:	jo     0x14001657c
   140016532:	add    BYTE PTR ss:[rip+0x1e004611],bl        # 0x15e01ab4a
   140016539:	adc    ecx,DWORD PTR [rcx+0x0]
   14001653c:	sbb    DWORD PTR [rcx],edx
   14001653e:	rex.WRXB add BYTE PTR [r14],r11b
   140016541:	adc    eax,0x1117004f
   140016546:	push   rbx
   140016547:	add    BYTE PTR [rsi],dl
   140016549:	adc    DWORD PTR [rdi+0x0],edx
   14001654c:	(bad)  
   14001654d:	adc    DWORD PTR [rax+0x0],ebx
   140016550:	sbb    BYTE PTR [rbx],dl
   140016552:	pop    rbp
   140016553:	add    BYTE PTR [rbx],ah
   140016555:	adc    al,0x46
   140016557:	add    BYTE PTR [rsp+rdx*1],ah
   14001655a:	rex.RX add BYTE PTR [rax],r13b
   14001655d:	(bad)  
   14001655e:	rex.RX add BYTE PTR [rip+0x2c004618],r12b        # 0x16c01ab7d
   140016565:	sbb    eax,0x1a290042
   14001656a:	rex.RX add BYTE PTR [rip+0x34004819],r12b        # 0x17401ad8a
   140016571:	and    DWORD PTR [rsi+0x0],eax
   140016574:	cmp    BYTE PTR [rdx],ah
   140016576:	rex.XB add BYTE PTR [r15],bpl
   140016579:	and    al,0x58
   14001657b:	add    BYTE PTR [rip+0x15006012],dl        # 0x15501c593
   140016581:	adc    esp,DWORD PTR [rbp+0x0]
   140016584:	sbb    bl,BYTE PTR [rax]
   140016586:	add    BYTE PTR [esp+edx*1],dl
   14001658a:	push   0x0
   14001658c:	adc    al,0x15
   14001658e:	ins    DWORD PTR es:[rdi],dx
   14001658f:	add    BYTE PTR [rip+0x14007116],dl        # 0x15401d6ab
   140016595:	(bad)  
   140016596:	je     0x140016598
   140016598:	adc    al,0x18
   14001659a:	jbe    0x14001659c
   14001659c:	sbb    BYTE PTR [rdx],bl
   14001659e:	je     0x1400165a0
   1400165a0:	adc    al,0x19
   1400165a2:	jns    0x1400165a4
   1400165a4:	(bad)  
   1400165a5:	sbb    bh,BYTE PTR [rbp+0x0]
   1400165a8:	sub    BYTE PTR [r10+0x0],al
   1400165ac:	rex.XB sub eax,0x2f490046
   1400165b2:	rex.X add BYTE PTR [rax+0x2f],cl
   1400165b6:	add    BYTE PTR [r10+0x30],r9b
   1400165ba:	add    BYTE PTR [rbp+0x32],cl
   1400165be:	add    BYTE PTR [rsi+0x3b],dl
   1400165c2:	rex.WX add BYTE PTR [rcx-0x5cffe495],spl
   1400165c9:	ins    DWORD PTR es:[rdi],dx
   1400165ca:	sbb    eax,0x1970a800
   1400165cf:	add    BYTE PTR [rbp-0x71ffe386],dh
   1400165d5:	pop    rdi
   1400165d6:	and    eax,DWORD PTR [rax]
   1400165d8:	xchg   BYTE PTR [rdx+0x2e],bl
   1400165db:	add    BYTE PTR [rdi-0x6bffdc96],bl
   1400165e1:	sub    al,BYTE PTR fs:[rax]
   1400165e4:	xchg   esi,eax
   1400165e5:	data16 add BYTE PTR cs:[rdx-0x72ffd398],bl
   1400165ed:	(bad)  
   1400165ee:	xor    eax,0x2b6fa400
   1400165f3:	add    BYTE PTR [rax-0x53ffda8f],ch
   1400165f9:	jbe    0x140016620
   1400165fb:	add    BYTE PTR [rsp+rdi*2+0x6f9c0025],dh
   140016602:	add    BYTE PTR [r9-0x55ffaf94],dl
   140016609:	ja     0x14001664d
   14001660b:	add    BYTE PTR [rdi-0x5bffb389],ah
   140016611:	jl     0x14001665e
   140016613:	add    BYTE PTR [rdx-0x4dffb486],ch
   140016619:	jg     0x140016668
   14001661b:	add    BYTE PTR [rbp-0x54ffab87],ah
   140016621:	jge    0x140016678
   140016623:	add    bl,al
   140016625:	and    DWORD PTR [rbx],0x0
   140016628:	mov    ah,0x86
   14001662a:	add    BYTE PTR [rcx-0x48ffbb7d],r15b
   140016631:	or     DWORD PTR [rbx+0x0],0xffffffbe
   140016635:	mov    BYTE PTR [rdi+0x0],cl
   140016638:	mov    dh,0x83
   14001663a:	push   rcx
   14001663b:	add    BYTE PTR [rdx-0x3fff986a],bh
   140016641:	mov    DWORD PTR [rsi+0x0],ecx
   140016644:	(bad)
   140016647:	add    al,cl
   140016649:	(bad)  
   14001664a:	rex.WXB add r14b,cl
   14001664d:	xchg   edx,eax
   14001664e:	rex.RX add dl,r9b
   140016651:	nop
   140016652:	rex.WX add bpl,cl
   140016655:	xchg   ecx,eax
   140016656:	rex.W add dl,dl
   140016659:	xchg   ebp,eax
   14001665a:	rex.X add al,dl
   14001665d:	xchg   ebx,eax
   14001665e:	add    r12b,r10b
   140016661:	cdq    
   140016662:	rex.XB add r14b,dl
   140016665:	fwait
   140016666:	add    r15b,r10b
   140016669:	popf   
   14001666a:	rex.RX add sil,r10b
   14001666d:	lahf   
   14001666e:	rex.WXB add r8b,bl
   140016671:	sahf   
   140016672:	rex.WB add r14b,cl
   140016675:	pushf  
   140016676:	push   rdi
   140016677:	add    cl,bl
   140016679:	movabs al,ds:0xa1d90052a1d5004e
   140016682:	push   rax
   140016683:	add    dh,dl
   140016685:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016686:	pop    rsi
   140016687:	add    dh,cl
   140016689:	movabs ds:0xa3c80069a1ce0065,eax
   140016692:	outs   dx,DWORD PTR ds:[rsi]
   140016693:	add    bh,cl
   140016695:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016696:	ins    BYTE PTR es:[rdi],dx
   140016697:	add    bl,cl
   140016699:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001669a:	js     0x14001669c
   14001669c:	enter  0x7ca9,0x0
   1400166a0:	xlat   BYTE PTR ds:[rbx]
   1400166a1:	lods   eax,DWORD PTR ds:[rsi]
   1400166a2:	jne    0x1400166a4
   1400166a4:	(bad)  
   1400166a5:	sbb    al,0x80
   1400166a7:	add    BYTE PTR [rax],bl
   1400166a9:	sbb    al,0x82
   1400166ab:	add    BYTE PTR [rax],bl
   1400166ad:	sbb    eax,0x201b0085
   1400166b2:	mov    al,BYTE PTR [rax]
   1400166b4:	sbb    esp,DWORD PTR [rcx]
   1400166b6:	mov    WORD PTR [rax],es
   1400166b8:	sbb    al,0x21
   1400166ba:	lea    eax,[rax]
   1400166bc:	sbb    eax,0x1e008e25
   1400166c1:	and    eax,0x261f0092
   1400166c6:	xchg   esp,eax
   1400166c7:	add    BYTE PTR [rcx],ah
   1400166c9:	sub    bl,BYTE PTR [rcx-0x64d3df00]
   1400166cf:	add    BYTE PTR [rbx],ah
   1400166d1:	sub    al,0x9c
   1400166d3:	add    BYTE PTR [rbx],ah
   1400166d5:	xor    ah,BYTE PTR [rcx-0x5dcedc00]
   1400166db:	add    BYTE PTR [rip+0x2600a432],ah        # 0x166020b13
   1400166e1:	xor    al,0xa7
   1400166e3:	add    BYTE PTR [rsi],ah
   1400166e5:	ss test eax,0xab382700
   1400166eb:	add    BYTE PTR [rax],ch
   1400166ed:	cmp    ch,BYTE PTR [rdi-0x4dc2d800]
   1400166f3:	add    BYTE PTR [rip+0x3200be34],ch        # 0x17202252d
   1400166f9:	cmp    DWORD PTR [rsi-0x40c4cc00],edi
   1400166ff:	add    BYTE PTR [rdx],ch
   140016701:	mov    r15b,0x0
   140016704:	sub    eax,DWORD PTR [rbx-0x46]
   140016707:	add    BYTE PTR [rbx],ch
   140016709:	rex.R mov edx,0xbe492c00
   14001670f:	add    BYTE PTR [rsi+0x53],dl
   140016712:	xchg   ebp,eax
   140016713:	add    BYTE PTR [rax+0x43],al
   140016716:	mov    ecx,0xba464300
   14001671b:	add    BYTE PTR [rsi+0x55],dl
   14001671e:	mov    dl,0x0
   140016720:	pop    rcx
   140016721:	pop    rbp
   140016722:	mov    edx,0xb7626100
   140016727:	add    BYTE PTR [rcx+0x66],ch
   14001672a:	mov    dl,0x0
   14001672c:	imul   ebp,DWORD PTR [rcx-0x4c],0x0
   140016730:	je     0x1400167a2
   140016732:	mov    dl,0x0
   140016734:	jbe    0x1400167a9
   140016736:	mov    ch,0x0
   140016738:	sub    eax,0x2d00c134
   14001673d:	(bad)
   140016741:	cmp    ecx,ecx
   140016743:	add    BYTE PTR [rdi],ch
   140016745:	cmp    eax,0x3e3700ce
   14001674a:	rol    BYTE PTR [rax],0x2f
   14001674d:	(bad)  
   14001674e:	rol    BYTE PTR [rax],1
   140016750:	xor    BYTE PTR [rdi],bh
   140016752:	rol    BYTE PTR [rax],1
   140016754:	sub    eax,0x2d00c048
   140016759:	rex.WX (bad) 
   14001675b:	add    BYTE PTR [rdi],ch
   14001675d:	rex.WRB mov QWORD PTR [r8],0xc84e2f
   140016764:	xor    BYTE PTR [rax-0x32],al
   140016767:	add    BYTE PTR [rdi],ch
   140016769:	push   rax
   14001676a:	mov    DWORD PTR [rax],0xc9502f
   140016770:	xor    DWORD PTR [rdx-0x33],edx
   140016773:	add    BYTE PTR [rcx],dh
   140016775:	push   rbp
   140016776:	(bad)  
   140016777:	add    BYTE PTR [rcx],dh
   140016779:	rex.R (bad) 
   14001677b:	add    BYTE PTR [rdx],dh
   14001677d:	rex.WX fld DWORD PTR [rax]
   140016780:	xor    ecx,DWORD PTR [rbp+rbx*8+0x0]
   140016784:	xor    edx,DWORD PTR [rdi-0x2c]
   140016787:	add    BYTE PTR [rdx],dh
   140016789:	pop    rdx
   14001678a:	rol    DWORD PTR [rax],cl
   14001678c:	xor    ebx,DWORD PTR [rcx-0x2b]
   14001678f:	add    BYTE PTR [rbx+rbx*2],dh
   140016792:	xlat   BYTE PTR ds:[rbx]
   140016793:	add    BYTE PTR [rbx],dh
   140016795:	pop    rbp
   140016796:	xlat   BYTE PTR ds:[rbx]
   140016797:	add    BYTE PTR [rbx],dh
   140016799:	push   rcx
   14001679a:	fiadd  DWORD PTR [rax]
   14001679c:	xor    al,0x53
   14001679e:	fiadd  WORD PTR [rax]
   1400167a0:	xor    eax,0x3100d95c
   1400167a5:	jno    0x140016775
   1400167a7:	add    BYTE PTR [rax+riz*2],dh
   1400167aa:	fild   DWORD PTR [rax]
   1400167ac:	xor    eax,0x3600de62
   1400167b1:	data16 fiadd WORD PTR [rax]
   1400167b4:	xor    al,0x53
   1400167b6:	loopne 0x1400167b8
   1400167b8:	xor    al,0x54
   1400167ba:	loope  0x1400167bc
   1400167bc:	ss pop rsp
   1400167be:	jrcxz  0x1400167c0
   1400167c0:	ss pop rbx
   1400167c2:	in     al,0x0
   1400167c4:	ss movsxd esp,ebx
   1400167c7:	add    BYTE PTR [rsi],dh
   1400167c9:	fs loope 0x1400167cc
   1400167cc:	(bad)  
   1400167cd:	gs in  eax,0x0
   1400167d0:	(bad)  
   1400167d1:	imul   esp,ebp,0xe76d3700
   1400167d7:	add    BYTE PTR [rax],bh
   1400167d9:	outs   dx,DWORD PTR ds:[rsi]
   1400167da:	out    0x0,al
   1400167dc:	cmp    BYTE PTR [rax+rbp*8+0x0],ch
   1400167e0:	cmp    BYTE PTR [rdx-0x17],dh
   1400167e3:	add    BYTE PTR [rdx],bh
   1400167e5:	jne    0x1400167d1
   1400167e7:	add    BYTE PTR [rcx],bh
   1400167e9:	jns    0x1400167d5
   1400167eb:	add    BYTE PTR [rdi],bh
   1400167ed:	jns    0x1400167d8
   1400167ef:	add    BYTE PTR [rcx],bh
   1400167f1:	jle    0x1400167de
   1400167f3:	add    BYTE PTR [rsi+rdi*2],bh
   1400167f6:	jmp    0x1400167f8
   1400167f8:	cmp    edi,DWORD PTR [rdi-0x14]
   1400167fb:	add    BYTE PTR [rdi+rdi*2],bh
   1400167fe:	in     al,dx
   1400167ff:	add    BYTE PTR [rdx],bh
   140016801:	sub    ebx,0xec813b00
   140016807:	add    BYTE PTR [rcx+rax*4],bh
   14001680a:	in     al,dx
   14001680b:	add    BYTE PTR [rdx],bh
   14001680d:	test   esp,ebp
   14001680f:	add    BYTE PTR [rdx],bh
   140016811:	mov    ebp,ebp
   140016813:	add    BYTE PTR [rdx+rcx*4],bh
   140016816:	in     eax,dx
   140016817:	add    BYTE PTR [rbx],bh
   140016819:	(bad)  
   14001681a:	in     eax,dx
   14001681b:	add    BYTE PTR [rbx],bh
   14001681d:	xchg   edx,eax
   14001681e:	out    dx,al
   14001681f:	add    BYTE PTR [rax+rdx*4],bh
   140016822:	out    dx,al
   140016823:	add    BYTE PTR [rbx],bh
   140016825:	xchg   esi,eax
   140016826:	out    dx,eax
   140016827:	add    BYTE PTR [rcx],bh
   140016829:	cwde   
   14001682a:	call   0x12f9ca32f
   14001682f:	add    BYTE PTR [rdx],bh
   140016831:	cwde   
   140016832:	lock add BYTE PTR [rdx],bh
   140016835:	popf   
   140016836:	lock add BYTE PTR [rcx],bh
   140016839:	stos   BYTE PTR es:[rdi],al
   14001683a:	loope  0x14001683c
   14001683c:	cmp    al,0xbe
   14001683e:	(bad)  
   14001683f:	add    BYTE PTR [rbx],bh
   140016841:	mov    edx,0xba3c00ef
   140016846:	in     al,dx
   140016847:	add    BYTE PTR [rdx],bh
   140016849:	movabs al,ds:0xa43c00f2a63b00f0
   140016852:	lock add BYTE PTR [rdx+rbp*4],bh
   140016856:	icebp  
   140016857:	add    BYTE PTR [rcx],bh
   140016859:	lods   al,BYTE PTR ds:[rsi]
   14001685a:	lock add BYTE PTR [rip+0x3900f1ac],bh        # 0x179025a0d
   140016861:	mov    al,0xf2
   140016863:	add    BYTE PTR [rbx],bh
   140016865:	mov    dh,0xf3
   140016867:	add    BYTE PTR [rcx],bh
   140016869:	mov    ebx,0xb93b00f3
   14001686e:	hlt    
   14001686f:	add    BYTE PTR [rbx-0x75],bl
   140016872:	(bad)  
   140016873:	add    BYTE PTR [rax+rcx*4-0x28],dl
   140016877:	add    BYTE PTR [rsi+rcx*4-0x28],dl
   14001687b:	add    BYTE PTR [rcx-0x7f],cl
   14001687e:	loop   0x140016880
   140016880:	rex.B (bad) 
   140016882:	jmp    0x12ab8b187
   140016887:	add    BYTE PTR [rbp-0x4b],dl
   14001688a:	loopne 0x14001688c
   14001688c:	cmp    al,0xc2
   14001688e:	in     eax,dx
   14001688f:	add    BYTE PTR [rip+0x3d00ecc4],bh        # 0x17d025559
   140016895:	retf   
   140016896:	in     al,dx
   140016897:	add    BYTE PTR [rbx],bh
   140016899:	shr    edi,1
   14001689b:	add    BYTE PTR [rdx+rdx*8],bh
   14001689e:	in     eax,dx
   14001689f:	add    BYTE PTR [rax],bh
   1400168a1:	enter  0xf1,0x8e
   1400168a5:	mov    DWORD PTR [rdx-0x4b716a00],edi
   1400168ab:	add    BYTE PTR [rsi-0x67ff4562],cl
   1400168b1:	xchg   edx,eax
   1400168b2:	mov    esp,0xbf949a00
   1400168b7:	add    ch,bl
   1400168b9:	mov    esi,0xa99a0093
   1400168be:	ret    
   1400168bf:	add    BYTE PTR [rdi-0x5fff3845],dl
   1400168c5:	mov    bl,0xc2
	...
   1400168f3:	add    bh,bh
   1400168f5:	(bad)  
   1400168f6:	inc    DWORD PTR [rax]
	...
   140016944:	add    dl,dh
   140016946:	fucom  st(4)
	...
   140016964:	add    bl,ah
   140016966:	fstp   st(3)
   140016968:	fpatan 
	...
   140016982:	add    BYTE PTR [rax],al
   140016984:	add    cl,bl
   140016986:	(bad)  
   140016988:	int    0xc9
   14001698a:	icebp  
	...
   1400169a3:	add    dh,bl
   1400169a5:	enter  0xc8c8,0xc8
   1400169a9:	ret    
   1400169aa:	mov    edi,0x0
	...
   1400169c3:	add    BYTE PTR [rdi-0x45454752],bl
   1400169c9:	mov    edx,0xbabf
	...
   1400169e2:	add    BYTE PTR [rsi-0x5b637d87],al
   1400169e8:	mov    ah,0xb8
   1400169ea:	mov    ecx,0xe1bf
	...
   1400169f7:	out    dx,al
	...
   140016a00:	add    BYTE PTR [rax],al
   140016a02:	add    BYTE PTR [rbp+0x71],ch
   140016a05:	jne    0x140016a83
   140016a07:	test   BYTE PTR [rdx-0x4046495c],bl
   140016a0d:	fild   WORD PTR [rax]
   140016a0f:	add    BYTE PTR [rax],al
   140016a11:	add    BYTE PTR [rax],al
   140016a13:	add    BYTE PTR [rax],al
   140016a15:	add    BYTE PTR [rax+0x0],al
   140016a1b:	add    BYTE PTR [rax],al
   140016a1d:	add    BYTE PTR [rax],al
   140016a1f:	add    BYTE PTR [rax],al
   140016a21:	add    BYTE PTR [rbx],ah
   140016a23:	sub    BYTE PTR [rbx+0x71],ch
   140016a26:	je     0x140016aa1
   140016a28:	test   BYTE PTR [rdx-0x3c454956],bl
   140016a2e:	loopne 0x140016a30
   140016a30:	add    BYTE PTR [rax],al
   140016a32:	add    BYTE PTR [rax],al
   140016a34:	in     al,dx
   140016a35:	nop
   140016a36:	lea    eax,[rax]
   140016a38:	add    BYTE PTR [rax],al
   140016a3a:	add    BYTE PTR [rax],al
   140016a3c:	add    BYTE PTR [rax+0x55],ch
   140016a3f:	push   rsp
   140016a40:	rex.WRB
   140016a41:	ds (bad) 
   140016a43:	and    DWORD PTR [rdi],esp
   140016a45:	imul   esi,DWORD PTR [rcx+0x74],0x7a
   140016a49:	test   BYTE PTR [rdi-0x373c454c],bl
   140016a4f:	loop   0x140016a3e
   140016a51:	add    BYTE PTR [rax],al
   140016a53:	mov    dl,BYTE PTR [rax+0x90]
   140016a59:	add    BYTE PTR [rax],al
   140016a5b:	add    BYTE PTR [rdi+0x58],bl
   140016a5e:	pop    rax
   140016a5f:	push   rdi
   140016a60:	push   rbx
   140016a61:	rex.WRX cmp al,0x1c
   140016a64:	and    DWORD PTR [rdi],esp
   140016a66:	imul   esi,DWORD PTR [rcx+0x75],0x7d
   140016a6a:	pushf  
   140016a6b:	stos   BYTE PTR es:[rdi],al
   140016a6c:	mov    edx,0xc3c8c8bf
   140016a71:	mov    edx,0x879095b0
   140016a76:	add    BYTE PTR [rax],al
   140016a78:	add    BYTE PTR [rax],al
   140016a7a:	add    BYTE PTR [rbp+0x5c],bl
   140016a7d:	pop    rsp
   140016a7e:	pop    rax
   140016a7f:	pop    rax
   140016a80:	push   rbx
   140016a81:	rex.WRXB
   140016a82:	rex.W cmp BYTE PTR [rax],dl
   140016a85:	and    DWORD PTR [rdx],ebp
   140016a87:	ins    DWORD PTR es:[rdi],dx
   140016a88:	jae    0x140016b02
   140016a8a:	(bad)  
   140016a8b:	movabs ds:0x95a2b9c3c8c3bfb6,eax
   140016a94:	nop
   140016a95:	jmp    0x140016a97
   140016a97:	add    BYTE PTR [rax],al
   140016a99:	addr32 (bad) 
   140016a9b:	pop    rbp
   140016a9c:	pop    rsi
   140016a9d:	pop    rsp
   140016a9e:	pop    rsp
   140016a9f:	push   rbp
   140016aa0:	push   rdi
   140016aa1:	rex.WRXB push r8
   140016aa3:	rex.RXB or DWORD PTR [r9],r10d
   140016aa6:	and    eax,0x7e756e6b
   140016aab:	(bad)  
   140016aac:	mov    ecx,0xbfc8c8c3
   140016ab1:	mov    ah,0xa0
   140016ab3:	nop
   140016ab4:	nop
   140016ab5:	add    BYTE PTR [rax],al
   140016ab7:	add    BYTE PTR [rax],al
   140016ab9:	movsxd esp,DWORD PTR [rdx+0x60]
   140016abc:	pop    rbp
   140016abd:	pop    rsi
   140016abe:	pop    rsp
   140016abf:	pop    rax
   140016ac0:	push   rbp
   140016ac1:	push   rbx
   140016ac2:	push   rax
   140016ac3:	rex.WX
   140016ac4:	rex.X add DWORD PTR [rip+0x7a736d27],edx        # 0x1ba74d7f2
   140016acb:	(bad)  
   140016acc:	mov    ah,0xc3
   140016ace:	enter  0xbfc8,0xb2
   140016ad2:	xchg   ebp,eax
   140016ad3:	nop
   140016ad4:	mov    DWORD PTR [rax],eax
   140016ad6:	add    BYTE PTR [rax],al
   140016ad8:	add    BYTE PTR [rax],al
   140016ada:	add    BYTE PTR [rdx+0x60],ch
   140016add:	pop    rbp
   140016ade:	pop    rsp
   140016adf:	pop    rax
   140016ae0:	push   rbp
   140016ae1:	rex.WRXB push r8
   140016ae3:	rex.WB xor cl,BYTE PTR [r10]
   140016ae6:	adc    BYTE PTR [rcx],ah
   140016ae8:	imul   ebp,DWORD PTR [rsi+0x78],0xffffff98
   140016aec:	mov    ah,0xc3
   140016aee:	retf   0xbac8
   140016af1:	mov    al,0x95
   140016af3:	nop
	...
   140016afc:	add    al,dh
   140016afe:	(bad)  
   140016aff:	pop    rsp
   140016b00:	push   rbp
   140016b01:	push   rbx
   140016b02:	rex.RB (bad) 
   140016b04:	cldemote BYTE PTR [rdx]
   140016b07:	adc    esp,DWORD PTR [rdi]
   140016b09:	outs   dx,BYTE PTR ds:[rsi]
   140016b0a:	jne    0x140016a90
   140016b0c:	mov    ah,0xc3
   140016b0e:	retf   0xbac8
   140016b11:	movabs ds:0x9090,al
   140016b1a:	add    BYTE PTR [rax],al
   140016b1c:	add    BYTE PTR [rax],al
   140016b1e:	add    BYTE PTR [rax],al
   140016b20:	addr32 rex.R (bad) 
   140016b23:	sbb    DWORD PTR [rax],ebx
   140016b25:	sbb    BYTE PTR [rdx],al
   140016b27:	sbb    al,0x21
   140016b29:	imul   esi,DWORD PTR [rbx+0x7e],0xffffffae
   140016b2d:	ret    
   140016b2e:	iret   
   140016b2f:	enter  0xa0b9,0x90
   140016b33:	mov    WORD PTR [rax],es
	...
   140016b41:	add    BYTE PTR [rax+rsi*1],al
   140016b44:	(bad)  
   140016b45:	(bad)  
   140016b46:	(bad)  
   140016b47:	or     DWORD PTR [rbx],edx
   140016b49:	sub    ch,BYTE PTR [rsi+0x7a]
   140016b4c:	stos   BYTE PTR es:[rdi],al
   140016b4d:	enter  0xc8cf,0xb4
   140016b51:	xchg   ebp,eax
   140016b52:	nop
	...
   140016b5f:	add    BYTE PTR [rax],al
   140016b61:	add    BYTE PTR [rcx+0x39],dl
   140016b64:	(bad)  
   140016b65:	or     BYTE PTR [rax],dh
   140016b67:	(bad)  
   140016b68:	sbb    al,0x25
   140016b6a:	ins    DWORD PTR es:[rdi],dx
   140016b6b:	jns    0x140016b17
   140016b6d:	leave  
   140016b6e:	(bad)  
   140016b6f:	enter  0x95b2,0x80
	...
   140016b83:	fs rex.WXB xor al,0x6
   140016b87:	or     eax,0x756b150a
   140016b8c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016b8d:	leave  
   140016b8e:	fcmovne st,st(0)
   140016b90:	test   eax,0x8e90
	...
   140016ba5:	rex.RX xor eax,0x271d3a37
   140016bab:	jae    0x140016b4c
   140016bad:	(bad)  
   140016bae:	fcmovnb st,st(5)
   140016bb0:	movabs al,ds:0x90
	...
   140016bc5:	add    BYTE PTR [rax],al
   140016bc7:	xor    al,0xa
   140016bca:	and    DWORD PTR [rcx-0x64],esi
   140016bcd:	fsubr  st,st(2)
   140016bcf:	mov    esi,0x8195
	...
   140016be8:	rex.B
   140016be9:	rex adc DWORD PTR [rbx-0x7c],ebp
   140016bed:	fucomp st(0)
   140016bef:	mov    edx,0x8e95
	...
   140016c08:	add    BYTE PTR [rsi],dh
   140016c0a:	add    eax,0xe8e57e25
   140016c0f:	mov    ah,0x90
	...
   140016c29:	imul   edi,DWORD PTR [rdx],0xe7e57916
   140016c2f:	test   eax,0x87
	...
   140016c48:	add    BYTE PTR [rax],al
   140016c4a:	rex.WR sub rax,0xffffffff93d1d171
   140016c50:	out    dx,al
	...
   140016c69:	add    BYTE PTR [rax],al
   140016c6b:	cmp    eax,0x94c9d029
	...
   140016c88:	add    BYTE PTR [rax],al
   140016c8a:	add    BYTE PTR [rdi+0x20],ah
   140016c8d:	stos   DWORD PTR es:[rdi],eax
   140016c8e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   140016cab:	add    BYTE PTR [rbx+0x75],al
   140016cae:	mov    eax,DWORD PTR [rax]
	...
   140016cf8:	(bad)  
   140016cf9:	(bad)  
   140016cfa:	(bad)  
   140016cfb:	(bad)  
   140016cfc:	(bad)  
   140016cfd:	(bad)  
   140016cfe:	(bad)  
   140016cff:	(bad)  
   140016d00:	(bad)  
   140016d01:	clc    
   140016d02:	(bad)  
   140016d03:	(bad)  
   140016d04:	(bad)  
   140016d05:	clc    
   140016d06:	(bad)  
   140016d07:	(bad)  
   140016d08:	(bad)  
   140016d09:	clc    
   140016d0a:	(bad)  
   140016d0b:	(bad)  
   140016d0c:	push   rax
   140016d0e:	(bad)  
   140016d0f:	(bad)  
   140016d10:	push   rax
   140016d12:	ud0    edi,edi
   140016d15:	loopne 0x140016d1e
   140016d17:	(bad)  
   140016d18:	jmp    rax
   140016d1a:	add    edi,ebp
   140016d1c:	inc    eax
   140016d1e:	add    ecx,esi
   140016d20:	clc    
   140016d21:	add    BYTE PTR [rax],al
   140016d23:	movsxd esi,eax
   140016d25:	add    BYTE PTR [rax],al
   140016d27:	add    esp,eax
   140016d29:	add    BYTE PTR [rax],al
   140016d2b:	add    eax,DWORD PTR [rax-0x7ff90000]
   140016d31:	add    BYTE PTR [rax],al
   140016d33:	(bad)  
   140016d34:	loopne 0x140016d36
   140016d36:	add    BYTE PTR [rdi],cl
   140016d38:	clc    
   140016d39:	add    BYTE PTR [rax],al
   140016d3b:	ud0    eax,DWORD PTR [rax]
   140016d3e:	add    BYTE PTR [rdi],cl
   140016d40:	inc    eax
   140016d42:	add    BYTE PTR [rdi],bl
   140016d44:	inc    eax
   140016d46:	add    BYTE PTR [rdi],bl
   140016d48:	jmp    rax
   140016d4a:	add    BYTE PTR [rdi],bl
   140016d4c:	(bad)  
   140016d4d:	clc    
   140016d4e:	add    BYTE PTR [rdi],bh
   140016d50:	(bad)  
   140016d51:	inc    BYTE PTR [rax]
   140016d53:	(bad)  
   140016d54:	(bad)  
   140016d55:	inc    DWORD PTR [rax]
   140016d57:	(bad)  
   140016d58:	(bad)  
   140016d59:	inc    DWORD PTR [rax-0x7f000081]
   140016d5f:	jg     0x140016d60
   140016d61:	inc    eax
   140016d63:	jg     0x140016d64
   140016d65:	jmp    rax
   140016d67:	(bad)  
   140016d68:	(bad)  
   140016d69:	jmp    rcx
   140016d6b:	(bad)  
   140016d6c:	(bad)  
   140016d6d:	push   rcx
   140016d6f:	(bad)  
   140016d70:	(bad)  
   140016d71:	(bad)  
   140016d72:	(bad)  
   140016d73:	(bad)  
   140016d74:	(bad)  
   140016d75:	(bad)  
   140016d76:	(bad)  
   140016d77:	jmp    FWORD PTR [rax]
   140016d79:	add    BYTE PTR [rax],al
   140016d7b:	add    BYTE PTR [rax],dl
   140016d7d:	add    BYTE PTR [rax],al
   140016d7f:	add    BYTE PTR [rax],ah
   140016d81:	add    BYTE PTR [rax],al
   140016d83:	add    BYTE PTR [rcx],al
   140016d85:	add    BYTE PTR [rax],cl
   140016d87:	add    BYTE PTR [rax],al
   140016d89:	add    BYTE PTR [rax],al
   140016d8b:	add    BYTE PTR [rax],al
   140016d8d:	add    DWORD PTR [rax],eax
	...
   140016d97:	add    BYTE PTR [rax],al
   140016d99:	add    DWORD PTR [rax],eax
   140016d9b:	add    BYTE PTR [rax],al
   140016d9d:	add    DWORD PTR [rax],eax
   140016d9f:	add    BYTE PTR [rax],al
   140016da1:	add    BYTE PTR [rax],al
   140016da3:	add    BYTE PTR [rsi+0x37],dl
   140016da6:	cmp    al,0x0
   140016da8:	push   rsi
   140016da9:	cmp    BYTE PTR [rbx],bh
   140016dab:	add    BYTE PTR [rsi+0x45],ah
   140016dae:	add    BYTE PTR ds:[rdi],dl
   140016db1:	adc    al,0x5f
   140016db3:	add    BYTE PTR [rdx],bl
   140016db5:	(bad)  
   140016db6:	pop    rsi
   140016db7:	add    BYTE PTR [rdx*1+0x1e2c0045],ah
   140016dbe:	rex.WRB add BYTE PTR [rip+0x19004128],r15b        # 0x15901aeed
   140016dc5:	sbb    DWORD PTR [rsi+0x0],ebp
   140016dc8:	adc    eax,0x16007317
   140016dcd:	sbb    DWORD PTR [rcx+0x0],edi
   140016dd0:	cmp    edi,DWORD PTR ds:[rbp+0x0]
   140016dd4:	rex.XB sub eax,0x354e0046
   140016dda:	add    BYTE PTR [rdi+0x33],al
   140016dde:	rex.WRX add BYTE PTR [rax+0x3b],r11b
   140016de2:	rex.RX add BYTE PTR [rsi-0x65ffd7a6],r8b
   140016de9:	push   0x5b800027
   140016dee:	add    BYTE PTR [rbp-0x59ffa385],bl
   140016df5:	jbe    0x140016e3d
   140016df7:	add    BYTE PTR [rdi-0x49ffac81],ch
   140016dfd:	add    BYTE PTR [rcx+0x0],0xb2
   140016e01:	test   DWORD PTR [rdx+0x0],ecx
   140016e04:	(bad)  
   140016e05:	mov    cs,WORD PTR [rbx+0x0]
   140016e08:	ror    DWORD PTR [rbp-0x733bffb1],0x4d
   140016e0f:	add    ch,cl
   140016e11:	xchg   ecx,eax
   140016e12:	rex.RXB add r10b,r10b
   140016e15:	xchg   ebp,eax
   140016e16:	rex.XB add r13b,dl
   140016e19:	cdq    
   140016e1a:	add    dil,r10b
   140016e1d:	pushf  
   140016e1e:	rex.RX add al,r11b
   140016e21:	lahf   
   140016e22:	rex.WXB add r9b,dl
   140016e25:	movabs al,ds:0xaed8007aa9ce005b
   140016e2e:	jb     0x140016e30
   140016e30:	sbb    ah,BYTE PTR [rax]
   140016e32:	xchg   DWORD PTR [rax],eax
   140016e34:	sbb    ah,BYTE PTR [rax]
   140016e36:	mov    BYTE PTR [rax],al
   140016e38:	sbb    al,0x22
   140016e3a:	lea    eax,[rax]
   140016e3c:	and    BYTE PTR [rcx],ch
   140016e3e:	xchg   edi,eax
   140016e3f:	add    BYTE PTR [rax],ah
   140016e41:	sub    bl,BYTE PTR [rax-0x59cbdb00]
   140016e47:	add    BYTE PTR [rsi],ah
   140016e49:	ss test eax,0xab382700
   140016e4f:	add    BYTE PTR [rdx],ch
   140016e51:	(bad)  
   140016e52:	mov    ch,0x0
   140016e54:	cmp    al,0x42
   140016e56:	mov    esp,0xb36a2b00
   140016e5b:	add    BYTE PTR [rdi+0x4b],al
   140016e5e:	(bad)  
   140016e5f:	add    BYTE PTR [rbp+riz*2-0x41],bl
   140016e63:	add    BYTE PTR [rbx+0x72],dh
   140016e66:	mov    esp,0xc7382e00
   140016e6b:	add    BYTE PTR [rdx],dh
   140016e6d:	cmp    eax,eax
   140016e6f:	add    BYTE PTR [rsi],ch
   140016e71:	rex.WX ret 
   140016e73:	add    BYTE PTR [rsi],ch
   140016e75:	rex.WR ret 0x2f00
   140016e79:	rex.WRXB enter 0x3000,0x42
   140016e7e:	iret   
   140016e7f:	add    BYTE PTR [rax],dh
   140016e81:	rex rol BYTE PTR [rax],1
   140016e84:	xor    ecx,DWORD PTR [rsi-0x28]
   140016e87:	add    BYTE PTR [rdx],dh
   140016e89:	push   rdi
   140016e8a:	rol    DWORD PTR [rax],cl
   140016e8c:	xor    DWORD PTR [rsi-0x35],edi
   140016e8f:	add    BYTE PTR [rip+0x3700da62],dh        # 0x1770248f7
   140016e95:	jae    0x140016e6f
   140016e97:	add    BYTE PTR [rip+0x3700e05b],dh        # 0x177024ef8
   140016e9d:	push   0x683700e3
   140016ea2:	out    0x0,al
   140016ea4:	cmp    BYTE PTR [rbp-0x1a],ch
   140016ea7:	add    BYTE PTR [rdi],dh
   140016ea9:	jne    0x140016e8e
   140016eab:	add    BYTE PTR [rax],bh
   140016ead:	je     0x140016e95
   140016eaf:	add    BYTE PTR [rsi],dh
   140016eb1:	jp     0x140016e93
   140016eb3:	add    BYTE PTR [rcx],bh
   140016eb5:	jne    0x140016ea0
   140016eb7:	add    BYTE PTR [rdx],bh
   140016eb9:	jns    0x140016ea5
   140016ebb:	add    BYTE PTR [rbx+0x49],al
   140016ebe:	rol    DWORD PTR [rax],0x41
   140016ec1:	jle    0x140016ea8
   140016ec3:	add    BYTE PTR [rax+rax*4],dh
   140016ec6:	fld    DWORD PTR [rax]
   140016ec8:	cmp    al,0x8a
   140016eca:	in     al,dx
   140016ecb:	add    BYTE PTR [rbx],bh
   140016ecd:	(bad)  
   140016ece:	in     eax,dx
   140016ecf:	add    BYTE PTR [rax],bh
   140016ed1:	xchg   esp,eax
   140016ed2:	in     eax,0x0
   140016ed4:	cmp    edx,DWORD PTR [rcx-0x68c4ff12]
   140016eda:	out    dx,eax
   140016edb:	add    BYTE PTR [rbx],bh
   140016edd:	fwait
   140016ede:	out    dx,eax
   140016edf:	add    BYTE PTR [rcx],bh
   140016ee1:	lahf   
   140016ee2:	lock add BYTE PTR [rcx],bh
   140016ee5:	movabs ds:0x9d6200c68f7200ed,eax
   140016eee:	(bad)  
   140016eef:	add    BYTE PTR [rdx-0x49],al
   140016ef2:	out    dx,al
   140016ef3:	add    BYTE PTR [rax-0x23ff4567],ah
   140016ef9:	mov    ebx,0x8385008c
   140016efe:	rol    BYTE PTR [rax],0x8e
   140016f01:	mov    eax,ebx
   140016f03:	add    BYTE PTR [rbp-0x5cff3971],cl
   140016f09:	scas   eax,DWORD PTR es:[rdi]
   140016f0a:	enter  0x0,0x0
	...
   14001719a:	add    BYTE PTR [rax],al
   14001719c:	(bad)  
   14001719d:	(bad)  
   14001719e:	inc    DWORD PTR [rax]
	...
   1400171b4:	add    BYTE PTR [rax],al
   1400171b6:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
   1400171c6:	push   rbx
   1400171c7:	rex.WRXB
   1400171c8:	rex.WXB pop r10
	...
   1400171d6:	xor    eax,0x45413c
	...
   1400171e3:	add    BYTE PTR [rax],al
   1400171e5:	or     al,0x26
   1400171e7:	sub    dh,BYTE PTR [rsi]
   1400171e9:	(bad)  
   1400171ea:	rex.W add BYTE PTR [rax],al
   1400171ed:	add    BYTE PTR [rbp+0x0],dl
   1400171f0:	add    BYTE PTR [rax],al
   1400171f2:	and    bl,BYTE PTR [rdi+rdx*1]
   1400171f5:	or     eax,0x3a2b260a
   1400171fa:	rex.RX
   1400171fb:	rex.WXB push r10
   1400171fd:	xor    BYTE PTR [rbx],dh
   1400171ff:	add    BYTE PTR [rax],al
   140017201:	and    DWORD PTR [rdi],ebx
   140017203:	sbb    eax,0xb07151b
   140017208:	(bad)  
   140017209:	xor    eax,0x38454b45
   14001720e:	xor    DWORD PTR [rax],eax
   140017210:	add    BYTE PTR [rbx],ah
   140017212:	and    BYTE PTR [rdi],bl
   140017214:	sbb    edx,DWORD PTR [rsi]
   140017216:	add    eax,DWORD PTR [rsi+riz*1]
   140017219:	sub    al,0x43
   14001721b:	rex.WXB
   14001721c:	xor    al,BYTE PTR [rax]
   14001721f:	add    BYTE PTR [rax],al
   140017221:	add    BYTE PTR [rax],al
   140017223:	push   rsi
   140017224:	sbb    edx,DWORD PTR [rax]
   140017226:	(bad)  
   140017227:	or     BYTE PTR [rdx],cl
   140017229:	sub    DWORD PTR [rbx+0x4b],eax
   14001722c:	ds sub eax,0x0
   140017232:	add    BYTE PTR [rax],al
   140017234:	add    BYTE PTR [rbx],dl
   140017236:	add    al,BYTE PTR [rcx]
   140017238:	add    eax,0x394f4227
   14001723d:	push   rdi
	...
   140017246:	sbb    BYTE PTR [rcx],dl
   140017248:	(bad)  
   140017249:	and    al,0x44
   14001724b:	push   rax
   14001724c:	(bad)  
	...
   140017255:	add    BYTE PTR [rax],al
   140017257:	add    BYTE PTR [rdx],dl
   140017259:	or     DWORD PTR [rcx+0x51],ecx
   14001725c:	rex.RXB add BYTE PTR [r8],r8b
	...
   140017267:	add    BYTE PTR [rax],al
   140017269:	(bad)  
   14001726b:	rex.WR pop rax
	...
   140017279:	adc    al,0x2e
   14001727b:	cmp    eax,0x0
	...
   140017288:	add    BYTE PTR [rax],al
   14001728a:	(bad)  
   14001728b:	pop    rax
	...
   1400172a0:	(bad)  
   1400172a1:	inc    DWORD PTR [rax]
   1400172a3:	add    dh,bh
   1400172a5:	inc    DWORD PTR [rax]
   1400172a7:	add    ah,bh
   1400172a9:	(bad)  
   1400172aa:	add    BYTE PTR [rax],al
   1400172ac:	cld    
   1400172ad:	(bad)  
   1400172ae:	add    BYTE PTR [rax],al
   1400172b0:	clc    
   1400172b1:	sbb    eax,0x1c00000
   1400172b6:	add    BYTE PTR [rax],al
   1400172b8:	add    BYTE PTR [rcx],0x0
   1400172bb:	add    BYTE PTR [rax-0x1ffffffd],al
   1400172c1:	add    eax,DWORD PTR [rax]
   1400172c3:	add    al,bh
   1400172c5:	add    eax,DWORD PTR [rax]
   1400172c7:	add    ah,bh
   1400172c9:	(bad)  
   1400172ca:	add    BYTE PTR [rax],al
   1400172cc:	inc    DWORD PTR [rdi]
   1400172ce:	add    BYTE PTR [rax],al
   1400172d0:	inc    DWORD PTR [rdi-0x70010000]
   1400172d6:	add    BYTE PTR [rax],al
   1400172d8:	dec    edi
   1400172da:	add    BYTE PTR [rax],al
   1400172dc:	(bad)  
   1400172dd:	inc    DWORD PTR [rax]
   1400172df:	add    BYTE PTR [rcx+0xd474e50],cl
   1400172e5:	or     bl,BYTE PTR [rdx]
   1400172e7:	or     al,BYTE PTR [rax]
   1400172e9:	add    BYTE PTR [rax],al
   1400172eb:	or     eax,0x52444849
   1400172f0:	add    BYTE PTR [rax],al
   1400172f2:	add    DWORD PTR [rax],eax
   1400172f4:	add    BYTE PTR [rax],al
   1400172f6:	add    DWORD PTR [rax],eax
   1400172f8:	or     BYTE PTR [rsi],al
   1400172fa:	add    BYTE PTR [rax],al
   1400172fc:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   140017300:	data16 add BYTE PTR [rax],al
   140017303:	and    BYTE PTR [rax],al
   140017305:	rex.WB
   140017306:	rex.R
   140017307:	push   r12
   140017309:	js     0x1400172a7
   14001730b:	in     al,dx
   14001730c:	mov    ebp,0xd765b069
   140017311:	jne    0x1400172f2
   140017313:	neg    DWORD PTR [rbx+0x7b]
   140017316:	lahf   
   140017317:	jae    0x140017307
   140017319:	lock out 0xa1,al
   14001731c:	(bad)  
   14001731d:	movabs al,ds:0x24ce06201001031b
   140017326:	sub    dh,cl
   140017328:	and    al,0x38
   14001732a:	push   rbx
   14001732b:	and    al,BYTE PTR [rbp-0x6f]
   14001732e:	adc    ch,BYTE PTR [rcx-0x75b4d25e]
   140017334:	and    al,0x47
   140017336:	mov    dl,0x2d
   140017338:	cmp    esi,DWORD PTR [rdx+0x6cb24b2d]
   14001733e:	retf   
   14001733f:	rex.WX cmp al,0xa5
   140017342:	(bad)  
   140017343:	pop    rbx
   140017344:	mov    dl,BYTE PTR [rbx+rbx*8]
   140017347:	sub    ecx,ebx
   140017349:	sub    al,bh
   14001734b:	pop    rdi
   14001734c:	pushf  
   14001734d:	mov    ah,BYTE PTR [rbp-0x69]
   140017350:	push   rbx
   140017351:	scas   al,BYTE PTR es:[rdi]
   140017352:	jl     0x1400172dc
   140017354:	stos   DWORD PTR es:[rdi],eax
   140017355:	xchg   edx,eax
   140017356:	stos   BYTE PTR es:[rdi],al
   140017357:	cmp    BYTE PTR [rcx-0x368e3aac],ch
   14001735d:	mov    gs,WORD PTR [rip+0xffffffffd822e595]        # 0x1182458f8
   140017363:	call   0xfc3e76ae
   140017368:	jle    0x1400173a7
   14001736a:	mov    edi,0x7bddef7e
   14001736f:	iret   
   140017370:	fldcw  WORD PTR [rbx]
   140017372:	(bad)  
   140017373:	neg    dl
   140017375:	sti    
   140017376:	pushf  
   140017377:	sti    
   140017378:	rcl    BYTE PTR [rcx+rbp*1],1
   14001737b:	or     DWORD PTR [rax-0x5d],esp
   14001737e:	mov    ebx,0xbf5e02cf
   140017383:	sti    
   140017384:	out    dx,al
   140017385:	jo     0x14001732d
   140017387:	jnp    0x14001735f
   140017389:	hlt    
   14001738a:	pop    rdi
   14001738b:	push   QWORD PTR [rbp+0x4bd2f436]
   140017391:	(bad)  
   140017392:	mov    ebp,0x2f4bd2f4
   140017397:	mov    ebp,0x2f4bd2f4
   14001739c:	mov    ebp,0x2f4bd2f4
   1400173a1:	mov    ebp,0x2f4bd2f4
   1400173a6:	mov    ebp,0x2f4bd2f4
   1400173ab:	mov    ebp,0x2f4bd2f4
   1400173b0:	mov    ebp,0x2f4bd2f4
   1400173b5:	mov    ebp,0x2f4bd2f4
   1400173ba:	mov    ebp,0x2f4bd2f4
   1400173bf:	mov    ebp,0x2f4bd2f4
   1400173c4:	mov    ebp,0x2f4bd2f4
   1400173c9:	ja     0x14001735d
   1400173cb:	enter  0x3eed,0x80
   1400173cf:	pop    rsi
   1400173d0:	jp     0x1400173d3
   1400173d2:	loopne 0x1400173c1
   1400173d4:	(bad)  
   1400173d5:	sub    al,ah
   1400173d7:	sti    
   1400173d8:	push   rcx
   1400173d9:	add    BYTE PTR [rdi],al
   1400173db:	clc    
   1400173dc:	in     eax,0xa7
   1400173de:	fidivr WORD PTR [rdx+0x78]
   1400173e1:	cmp    BYTE PTR [rax],ch
   1400173e3:	ds jns 0x1400173de
   1400173e6:	out    0xa5,al
   1400173e8:	(bad)  
   1400173e9:	mov    esp,0x7a9cae1
   1400173ee:	(bad)  
   1400173ef:	ja     0x1400173a7
   1400173f1:	retf   0xfdc5
   1400173f4:	sbb    esp,edi
   1400173f6:	stos   DWORD PTR es:[rdi],eax
   1400173f7:	jmp    0x187e033fa
   1400173fc:	(bad)  
   1400173fd:	in     eax,0xaf
   1400173ff:	(bad)  
   140017400:	outs   dx,DWORD PTR ds:[rsi]
   140017401:	cli    
   140017402:	sub    eax,0x9fb1a0
   140017407:	sub    BYTE PTR [rdi-0x4859407],bh
   14001740d:	rex.WRX loop 0x1400173de
   140017410:	adc    edi,DWORD PTR [rdi-0x45]
   140017413:	push   fs
   140017415:	xchg   edi,eax
   140017416:	pop    rsi
   140017417:	cmp    cl,dl
   140017419:	out    dx,eax
   14001741a:	add    BYTE PTR [rdx],0x28
   14001741d:	sub    DWORD PTR [rdx-0xf],0xe33ea7f1
   140017424:	mov    ch,0xfe
   140017426:	retf   0xdefa
   140017429:	in     eax,0xf7
   14001742b:	sbb    al,0xba
   14001742d:	jno    0x140017410
   14001742f:	rex.WRB retf 
   140017431:	mov    ebx,0xcd1feed7
   140017436:	outs   dx,BYTE PTR ds:[rsi]
   140017437:	(bad)  
   140017438:	sbb    esi,DWORD PTR [rbx+rdx*8]
   14001743b:	int    0x31
   14001743d:	mov    bl,0xea
   14001743f:	shl    DWORD PTR [rax-0x420198d],0x8d
   140017446:	sbb    esi,DWORD PTR [rbx-0x25]
   140017449:	cmp    dh,dh
   14001744b:	(bad)  
   14001744c:	cmp    dh,dh
   14001744e:	(bad)  
   14001744f:	loope  0x14001742d
   140017451:	outs   dx,DWORD PTR ds:[rsi]
   140017452:	jle    0x14001744f
   140017454:	iret   
   140017455:	jrcxz  0x140017465
   140017457:	xchg   esp,eax
   140017458:	ds add ch,al
   14001745b:	in     eax,0xf6
   14001745d:	rex.WX stos QWORD PTR es:[rdi],rax
   14001745f:	cld    
   140017460:	fidivr WORD PTR [rsi-0x36]
   140017463:	rex.RXB (bad) 
   140017465:	(bad)  
   140017466:	mov    ecx,0x5616cfb7
   14001746b:	jg     0x1400174eb
   14001746d:	test   esi,0x5f36e7e5
   140017473:	(bad)  
   140017474:	sub    eax,0x7fe9e379
   140017479:	(bad)  
   14001747a:	mov    cl,0xed
   14001747c:	(bad)  
   14001747d:	pop    rax
   14001747e:	fnstsw WORD PTR [rdi-0x7398a73e]
   140017484:	mov    esp,0xf38f7a50
   140017489:	(bad)  
   14001748a:	fldcw  WORD PTR [rcx+0x51]
   14001748d:	dec    dl
   14001748f:	call   QWORD PTR [rax+0x3e]
   140017492:	dec    BYTE PTR [rdi]
   140017494:	inc    BYTE PTR [rbx-0x2bf644a5]
   14001749a:	(bad)  
   14001749b:	push   0xffffffff81a3e940
   1400174a0:	outs   dx,DWORD PTR ds:[rsi]
   1400174a1:	rex.WB cli 
   1400174a3:	or     BYTE PTR [rax+0x5127db97],ah
   1400174a9:	stc    
   1400174aa:	sbb    eax,0x802c3ef1
   1400174af:	(bad)  
   1400174b0:	test   eax,0x3fc3f9ef
   1400174b5:	mov    ah,0xb0
   1400174b7:	mov    esi,0xa676f7f9
   1400174bc:	mov    bl,0xa7
   1400174be:	xchg   BYTE PTR [rdi-0x1],ah
   1400174c1:	movabs ds:0xdfd9f0e6bffcfc3c,eax
   1400174ca:	(bad)  
   1400174cb:	jne    0x1400174b4
   1400174cd:	cmp    al,0x23
   1400174cf:	popf   
   1400174d0:	xor    dh,dh
   1400174d2:	ret    0xbd8
   1400174d5:	rex.XB out dx,eax
   1400174d7:	sbb    BYTE PTR [rbx-0x6a],bh
   1400174da:	(bad)  
   1400174db:	fidivr DWORD PTR [rsp+rbp*8-0x63]
   1400174df:	int    0xe5
   1400174e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174e2:	(bad)  
   1400174e3:	fs neg edi
   1400174e6:	cld    
   1400174e7:	imul   edi,DWORD PTR [rdi-0x4918287],0xffffffc7
   1400174ee:	fiadd  WORD PTR [rcx+0x1f]
   1400174f1:	or     esp,edi
   1400174f3:	out    dx,al
   1400174f4:	rcr    BYTE PTR [rbx],cl
   1400174f6:	sbb    BYTE PTR [rsi+0x6e],0x8f
   1400174fa:	int3   
   1400174fb:	jnp    0x1400174fb
   1400174fd:	add    ch,BYTE PTR [rax+0x3f7df2de]
   140017503:	clc    
   140017504:	xor    esp,ebx
   140017506:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017507:	in     eax,0xbf
   140017509:	mov    dl,0xdf
   14001750b:	call   0x189de6478
   140017510:	mov    ?,edi
   140017512:	(bad)  
   140017513:	dec    ebp
   140017515:	movabs eax,ds:0xfb1817bbeb23fe97
   14001751e:	sbb    ebx,eax
   140017520:	movabs ds:0x5161828a0c145c60,al
   140017529:	xor    BYTE PTR [rax],ch
   14001752b:	test   BYTE PTR [rdx+0x60],dl
   14001752e:	and    dl,bh
   140017530:	fdiv   DWORD PTR [rcx]
   140017532:	(bad)  
   140017534:	enter  0xdc53,0xf8
   140017538:	(bad)  
   140017539:	dec    edx
   14001753b:	sbb    eax,0x8c48be
   140017540:	movabs ds:0xf400de9577e046f4,al
   140017549:	repnz in eax,dx
   14001754b:	xchg   edi,eax
   14001754c:	pop    rbx
   14001754d:	sub    bh,bh
   14001754f:	fstp   TBYTE PTR [rsi+0x7a7f07ef]
   140017555:	mov    eax,0x4173f8b0
   14001755a:	sbb    al,0x17
   14001755c:	(bad)  
   14001755d:	pop    rsi
   14001755e:	(bad)  
   14001755f:	jrcxz  0x1400175a0
   140017561:	(bad)  
   140017562:	lahf   
   140017563:	sbb    al,0x3e
   140017565:	stc    
   140017566:	out    dx,eax
   140017567:	pop    rax
   140017568:	mov    ebx,0xd9158171
   14001756d:	addr32 pop rax
   14001756f:	jp     0x140017537
   140017571:	mov    esi,0xa0066460
   140017576:	je     0x1400175ba
   140017578:	sub    DWORD PTR [rsi+0x9c28452],ecx
   14001757e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001757f:	or     eax,DWORD PTR [rdi-0x38167af2]
   140017585:	fisubr WORD PTR [rdx-0x3200a9]
   14001758b:	out    dx,al
   14001758c:	mov    ds,WORD PTR [rax+riz*4+0x37]
   140017590:	add    bl,bh
   140017592:	xchg   edx,eax
   140017593:	mov    eax,0xbd007ddb
   140017598:	fsub   QWORD PTR [rbx-0xe]
   14001759b:	rex.WX shr BYTE PTR [rdi+0x7e97cb7a],0xe0
   1400175a3:	xchg   DWORD PTR [rdi],eax
   1400175a5:	jrcxz  0x14001756c
   1400175a7:	lahf   
   1400175a8:	jae    0x1400175cc
   1400175aa:	pop    rsp
   1400175ab:	(bad)  
   1400175ad:	movabs ds:0x862dfe9e6cdbf33a,eax
   1400175b6:	xlat   BYTE PTR ds:[rbx]
   1400175b7:	mov    dh,0x18
   1400175b9:	test   DWORD PTR [rbp+0x53],ebx
   1400175bc:	jbe    0x14001760d
   1400175be:	jmp    0x14a3b53df
   1400175c3:	out    0x28,eax
   1400175c5:	popf   
   1400175c6:	push   rax
   1400175c7:	mov    al,ah
   1400175c9:	popf   
   1400175ca:	pop    rax
   1400175cb:	(bad)  
   1400175cc:	and    DWORD PTR [rsi+rdi*1+0x3c],edx
   1400175d0:	lock add al,0x37
   1400175d3:	jle    0x1400175d2
   1400175d5:	(bad)  
   1400175d6:	(bad)  
   1400175d7:	mov    edi,0x481114fd
   1400175dc:	hlt    
   1400175dd:	and    al,0x9c
   1400175df:	sub    ebp,esi
   1400175e1:	mov    bh,0x97
   1400175e3:	add    edx,edx
   1400175e5:	sbb    eax,DWORD PTR [rax+0x727dbe5e]
   1400175eb:	or     esi,DWORD PTR [rdi+rdi*8-0x16813077]
   1400175f2:	mov    ecx,0x7fd2e2d1
   1400175f7:	in     eax,0x4
   1400175f9:	neg    BYTE PTR [rbx+0x53f9fec0]
   1400175ff:	sbb    al,0x3e
   140017601:	cmc    
   140017602:	push   QWORD PTR [rcx]
   140017604:	fdivr  DWORD PTR [rsi]
   140017606:	retf   
   140017607:	mov    eax,0x4a2465d9
   14001760c:	loope  0x14001762b
   14001760e:	test   DWORD PTR [rax-0x5c421618],edi
   140017614:	adc    al,dh
   140017616:	and    bh,BYTE PTR [rax]
   140017618:	(bad)  
   140017619:	jg     0x140017696
   14001761b:	mov    cl,0xd7
   14001761d:	jno    0x1400175b3
   14001761f:	call   0x12ae4e5a7
   140017624:	scas   eax,DWORD PTR es:[rdi]
   140017625:	std    
   140017626:	js     0x1400176a0
   140017628:	inc    BYTE PTR [rcx]
   14001762a:	pop    rdx
   14001762b:	and    edx,eax
   14001762d:	(bad)  
   14001762f:	fild   WORD PTR [rax-0x6]
   140017632:	or     edx,ebx
   140017634:	retf   
   140017635:	mov    bh,0x5b
   140017637:	jb     0x140017621
   140017639:	inc    eax
   14001763b:	sti    
   14001763c:	ds cli 
   14001763e:	enter  0xc6e2,0xa1
   140017642:	call   QWORD PTR [rsi+0x44]
   140017645:	(bad)  
   140017646:	(bad)  
   140017647:	cmp    al,0x57
   140017649:	scas   eax,DWORD PTR es:[rdi]
   14001764a:	pop    rbp
   14001764b:	movsxd esi,ebp
   14001764d:	test   DWORD PTR [rdi-0x39],edi
   140017650:	ror    bl,cl
   140017652:	iret   
   140017653:	xor    ebx,DWORD PTR [rax+0x3524635c]
   140017659:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001765a:	(bad)  
   14001765b:	lahf   
   14001765c:	cmp    al,0xbe
   14001765e:	not    DWORD PTR [rsi+rbx*8-0x3ce353cf]
   140017665:	rex.B
   140017666:	push   r13
   140017668:	jp     0x1400175f4
   14001766a:	ret    0x7851
   14001766d:	lock sahf 
   14001766f:	sbb    BYTE PTR [rcx],ch
   140017671:	cmp    BYTE PTR [rdi+0x25],al
   140017674:	cli    
   140017675:	hlt    
   140017676:	rex.RXB jne 0x140017674
   140017679:	xchg   edi,eax
   14001767a:	sahf   
   14001767b:	shr    DWORD PTR [rbx-0x75],1
   14001767e:	je     0x14001760d
   140017680:	rex (bad) 
   140017682:	add    eax,0x37a42bc
   140017687:	ror    bl,1
   140017689:	mov    bh,0x47
   14001768b:	(bad)  
   14001768c:	in     al,0xfd
   14001768e:	rex.WXB
   14001768f:	rex.RXB out dx,al
   140017691:	pop    rbx
   140017692:	pop    rsp
   140017693:	jg     0x140017685
   140017695:	xchg   ecx,eax
   140017696:	mov    edi,0x5fbfbde5
   14001769b:	rex.R fsubr DWORD PTR [rbp-0x18463de5]
   1400176a2:	fnstcw WORD PTR [rax-0xf]
   1400176a5:	mov    bh,0x29
   1400176a7:	scas   eax,DWORD PTR es:[rdi]
   1400176a8:	pop    rsi
   1400176a9:	(bad)  
   1400176aa:	movabs al,ds:0xe894284ef0120633
   1400176b3:	std    
   1400176b4:	or     ecx,edi
   1400176b6:	movabs al,ds:0x2b8c2878cf438612
   1400176bf:	rex.RXB push r13
   1400176c1:	cmp    BYTE PTR [rdi+rsi*2+0x4e07178],bh
   1400176c8:	jno    0x14001769b
   1400176ca:	(bad)  
   1400176cb:	sub    al,0xba
   1400176cd:	out    0xe3,al
   1400176cf:	(bad)  
   1400176d0:	(bad)  
   1400176d1:	jg     0x1400176cd
   1400176d3:	sbb    esi,esp
   1400176d5:	movabs ds:0xa006f4bcc08de900,eax
   1400176de:	xchg   edi,eax
   1400176df:	xlat   BYTE PTR ds:[rbx]
   1400176e0:	pop    rsi
   1400176e1:	out    0x43,al
   1400176e3:	jg     0x1400176f4
   1400176e5:	xchg   esp,eax
   1400176e6:	movd   eax,mm6
   1400176e9:	adc    edi,DWORD PTR [rdi-0x4e]
   1400176ec:	stos   BYTE PTR es:[rdi],al
   1400176ed:	stos   BYTE PTR es:[rdi],al
   1400176ee:	(bad)  
   1400176f0:	adc    al,0x45
   1400176f2:	mov    eax,0x2b32ed7a
   1400176f7:	(bad)  
   1400176f8:	(bad)  
   1400176f9:	(bad)  
   1400176fa:	ret    
   1400176fb:	in     eax,dx
   1400176fc:	xchg   edi,eax
   1400176fd:	sub    BYTE PTR [rdx-0x57ed79c3],bl
   140017703:	add    al,0xcb
   140017705:	mul    DWORD PTR [rbx-0x22]
   140017708:	pop    rdi
   140017709:	jns    0x14001776c
   14001770b:	xor    al,0xf0
   14001770d:	sub    al,0x8d
   14001770f:	sbb    al,0x6b
   140017711:	mov    eax,DWORD PTR [rip+0xffffffffa59e8bab]        # 0xe5a002c2
   140017717:	and    DWORD PTR [rbx+0x5e7042a],0x3881a96f
   140017721:	rex.B
   140017722:	rex.R pop rax
   140017724:	xchg   ebp,eax
   140017725:	(bad)  [rdi-0x4]
   140017728:	div    edx
   14001772a:	outs   dx,DWORD PTR ds:[rsi]
   14001772b:	mov    edi,0xf8153e8b
   140017730:	xchg   dl,dl
   140017732:	pop    rdi
   140017733:	nop
   140017734:	pop    rsi
   140017735:	mov    esi,0x7fbc925d
   14001773a:	jns    0x14001771b
   14001773c:	rex.RXB mov r14d,0x68d503eb
   140017742:	cld    
   140017743:	(bad)  
   140017744:	mov    ebp,0x9d8e2208
   140017749:	mov    edx,0x1afe5e46
   14001774e:	jmp    0x14001777f
   140017750:	std    
   140017751:	(bad)  
   140017752:	jb     0x140017737
   140017754:	xor    ah,BYTE PTR [rbp+0x28120606]
   14001775a:	push   rdx
   14001775b:	mov    gs,edi
   14001775d:	sbb    al,0x85
   14001775f:	test   esi,edi
   140017761:	mov    esp,DWORD PTR [rbx-0x31]
   140017764:	(bad)  
   140017765:	(bad)
   140017769:	(bad)
   14001776c:	leave  
   14001776d:	(bad)  
   14001776e:	rex.WX adc QWORD PTR [rbp-0x7fa77080],rcx
   140017775:	add    ecx,DWORD PTR [rdx]
   140017777:	adc    DWORD PTR [rax+rcx*1+0x74fbca0e],ebx
   14001777e:	jmp    FWORD PTR [rdi+0x3e4e31fc]
   140017784:	rex (bad) 
   140017786:	sbb    al,0x1c
   140017788:	jge    0x1400177b4
   14001778a:	xor    BYTE PTR [rdi],ah
   14001778c:	mov    ebp,0xb5e5e801
   140017791:	xchg   ebp,eax
   140017792:	add    esp,DWORD PTR [rdi+rbx*4-0x5b]
   140017796:	(bad)  
   140017797:	sahf   
   140017798:	fstp   DWORD PTR [rbp*2+0xb2ffa1c]
   14001779f:	(bad)  
   1400177a0:	and    edx,DWORD PTR [rcx+rcx*1+0x22]
   1400177a4:	pop    rsp
   1400177a5:	mov    ebx,0x17b5897a
   1400177aa:	jg     0x140017737
   1400177ac:	(bad)  
   1400177ad:	rcr    BYTE PTR [rcx-0x5c],cl
   1400177b0:	cdq    
   1400177b1:	xor    BYTE PTR [rax-0x7f],dh
   1400177b4:	or     ah,BYTE PTR [rbp-0x4256ae90]
   1400177ba:	or     BYTE PTR [rbp-0x1f],ah
   1400177bd:	sbb    BYTE PTR [rip+0x54bab1c],cl        # 0x1454d22df
   1400177c3:	sub    eax,DWORD PTR [rdi+0xa47862b]
   1400177c9:	(bad)  
   1400177ca:	xchg   DWORD PTR [rbx+0x16],ecx
   1400177cd:	or     dl,BYTE PTR ss:[rsi-0x6a39f569]
   1400177d4:	push   rax
   1400177d5:	jp     0x140017847
   1400177d7:	rex.WRX
   1400177d8:	rex adc eax,0x51c4e02f
   1400177de:	movabs eax,ds:0x146245fc5c63e27
   1400177e7:	leave  
   1400177e8:	or     ah,dh
   1400177ea:	test   eax,0x6f4980
   1400177ef:	jp     0x14001786a
   1400177f1:	in     eax,dx
   1400177f2:	fs mov esi,0xe503c7c1
   1400177f8:	clc    
   1400177f9:	xchg   ecx,eax
   1400177fa:	(bad)  
   1400177fb:	jg     0x14001786f
   1400177fd:	imul   edi,DWORD PTR [rax],0xa1614b78
   140017803:	cli    
   140017804:	int    0x59
   140017806:	lea    ebx,[rbx+rdi*2+0x5fb3d59e]
   14001780d:	rex.XB jbe 0x1400177bf
   140017810:	push   rcx
   140017811:	rex.W (bad) 
   140017813:	sub    dl,cl
   140017815:	rcl    BYTE PTR [rbx],0xf3
   140017818:	jg     0x1400177ba
   14001781a:	lock rex.X push rbp
   14001781d:	cmp    dl,BYTE PTR [rsi]
   14001781f:	mov    DWORD PTR [rip+0xffffffffd525ebab],0x39afc3a6        # 0x1152763d4
   140017829:	fmul   QWORD PTR [rdx+0x1828dca3]
   14001782f:	scas   eax,DWORD PTR es:[rdi]
   140017830:	adc    eax,0x833c8c2c
   140017835:	rex.X (bad) 
   140017837:	jne    0x140017879
   140017839:	movabs ds:0xbe6923089c03b6e,al
   140017842:	jg     0x1400177e3
   140017844:	jg     0x140017841
   140017846:	rex.RB cli 
   140017848:	push   rsp
   140017849:	loopne 0x140017860
   14001784b:	rcr    BYTE PTR [rdi-0x78],cl
   14001784e:	pop    rsi
   14001784f:	pop    rsi
   140017850:	imul   ecx,ecx,0xffffffca
   140017853:	mov    edi,0xbe0feef1
   140017858:	addr32 cmp al,0x1a
   14001785b:	(bad)  
   14001785c:	call   0x16aa9e901
   140017861:	rex.B cmp al,0x3b
   140017864:	xlat   BYTE PTR ds:[rbx]
   140017865:	scas   eax,DWORD PTR es:[rdi]
   140017866:	mov    cl,0x72
   140017868:	imul   BYTE PTR [rbx+0x54]
   14001786b:	push   rdi
   14001786c:	mov    dh,0xa0
   14001786e:	cdq    
   14001786f:	xor    dl,BYTE PTR [rax]
   140017871:	sbb    BYTE PTR [rax],dl
   140017873:	jo     0x14001785b
   140017875:	sar    DWORD PTR [rbp+0xcf7bc38],0x2a
   14001787c:	iret   
   14001787d:	retf   0xc152
   140017880:	jo     0x14001782f
   140017882:	shr    BYTE PTR [rip+0xfffffffffc575f83],0xaa        # 0x13c58d80c
   140017889:	ret    0xe0a2
   14001788c:	xlat   BYTE PTR ds:[rbx]
   14001788d:	sbb    al,0xb
   14001788f:	rex.WXB sahf 
   140017891:	(bad)  
   140017892:	in     eax,0xa8
   140017894:	or     ch,BYTE PTR [rbx]
   140017896:	adc    DWORD PTR [rdx+0x152c103],ecx
   14001789c:	loope  0x1400178dc
   14001789e:	es (bad) 
   1400178a0:	mul    DWORD PTR [rbx-0x64]
   1400178a3:	ds rex.RX lahf 
   1400178a6:	or     cl,ah
   1400178a8:	rex.WB outs dx,DWORD PTR ds:[rsi]
   1400178aa:	add    BYTE PTR [rdx+0x79],bh
   1400178ad:	ins    DWORD PTR es:[rdi],dx
   1400178ae:	in     al,0x0
   1400178b0:	(bad)  
   1400178b1:	pop    rdi
   1400178b2:	lods   eax,DWORD PTR ds:[rsi]
   1400178b3:	scas   al,BYTE PTR es:[rdi]
   1400178b4:	sub    eax,0x5fa5a5f8
   1400178b9:	pop    rax
   1400178ba:	sbb    BYTE PTR [rsi],cl
   1400178bc:	(bad)  
   1400178bd:	pop    rsi
   1400178be:	add    al,0x9c
   1400178c0:	xor    BYTE PTR [rcx-0x741d1efd],ch
   1400178c6:	lods   al,BYTE PTR ds:[rsi]
   1400178c7:	pop    rsp
   1400178c8:	cmp    BYTE PTR [rbp+0x13c35eec],al
   1400178ce:	cmp    DWORD PTR [rdi-0x4ed5cbae],0x7a507782
   1400178d8:	(bad)  
   1400178d9:	js     0x1400178c3
   1400178db:	pop    rax
   1400178dc:	pop    rsp
   1400178dd:	sub    al,0x29
   1400178df:	xchg   edi,eax
   1400178e0:	add    eax,0x91c501b7
   1400178e5:	rex jno 0x1400178fc
   1400178e8:	cld    
   1400178e9:	or     bh,BYTE PTR [rax-0x1d46b0fb]
   1400178ef:	sbb    BYTE PTR [rbp-0x6217dfdd],cl
   1400178f5:	and    BYTE PTR [rdx],cl
   1400178f7:	(bad)  
   1400178f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400178f9:	add    ecx,DWORD PTR [rax]
   1400178fb:	xchg   ebp,eax
   1400178fc:	call   0x12b6498c4
   140017901:	rex.WRXB rcl QWORD PTR [r15+0x5],1
   140017905:	out    0xa4,al
   140017907:	(bad)  
   140017908:	add    BYTE PTR [rbp+0x519296bc],bh
   14001790e:	jmp    QWORD PTR [rbp-0x5e0161d9]
   140017914:	jb     0x1400178ca
   140017916:	hlt    
   140017917:	in     al,dx
   140017918:	test   al,0x2a
   14001791a:	jrcxz  0x140017947
   14001791c:	loop   0x1400178d6
   14001791e:	jle    0x140017913
   140017920:	(bad)  
   140017921:	mov    esp,edi
   140017923:	sahf   
   140017924:	addr32 je 0x140017910
   140017927:	sbb    al,0xd4
   140017929:	jnp    0x1400179a3
   14001792b:	(bad)  
   14001792c:	adc    eax,0x2e624281
   140017931:	out    dx,eax
   140017932:	adc    esi,ebx
   140017934:	scas   eax,DWORD PTR es:[rdi]
   140017935:	adc    cl,0xc0
   140017938:	xor    DWORD PTR [rax+0x70],ebx
   14001793b:	mov    eax,0x521fc165
   140017940:	cmp    BYTE PTR [rsi],dl
   140017942:	jo     0x14001793b
   140017944:	add    eax,0x164521fc
   140017949:	adc    eax,0x2d19ecbf
   14001794e:	jp     0x1400178fa
   140017950:	rcl    BYTE PTR [rcx+0x16],cl
   140017953:	loopne 0x14001795a
   140017955:	(bad)
   140017959:	or     bl,BYTE PTR [rsi-0x5a]
   14001795c:	(bad)  
   14001795d:	and    edi,edi
   14001795f:	xor    eax,0x445de1ff
   140017964:	and    edx,DWORD PTR [rax]
   140017966:	or     eax,0xbd2e3dc0
   14001796b:	add    eax,ebp
   14001796d:	in     eax,0xd5
   14001796f:	xchg   edi,eax
   140017970:	add    eax,eax
   140017972:	(bad)  
   140017974:	and    ebp,DWORD PTR [rdi+0x7c]
   140017977:	ror    BYTE PTR [rdi],1
   140017979:	rex.RX (bad) 
   14001797b:	mov    ecx,0xf0a05e34
   140017980:	add    al,BYTE PTR [rdx]
   140017982:	xchg   ebx,eax
   140017983:	(bad)  
   140017984:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017985:	(bad)  
   140017986:	pop    rdi
   140017987:	(bad)  
   140017988:	cmc    
   140017989:	in     al,dx
   14001798a:	xlat   BYTE PTR ds:[rbx]
   14001798b:	jo     0x1400179c4
   14001798d:	movabs eax,cs:0xa27fd175508a535a
   140017997:	adc    DWORD PTR [rax],ebp
   140017999:	or     eax,edi
   14001799b:	ret    0x53d0
   14001799e:	sub    eax,0x1ff618b9
   1400179a3:	or     eax,0xea0a47d4
   1400179a8:	movsxd ecx,DWORD PTR [rsi]
   1400179aa:	ja     0x1400179e0
   1400179ac:	push   rax
   1400179ad:	lods   al,BYTE PTR ds:[rsi]
   1400179ae:	sub    DWORD PTR [rax+rcx*1],0xa46397e
   1400179b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400179b6:	(bad)  
   1400179b7:	or     bl,BYTE PTR [rdi]
   1400179b9:	(bad)  
   1400179ba:	(bad)  
   1400179bb:	xchg   esi,eax
   1400179bc:	add    cl,BYTE PTR [rax]
   1400179be:	loopne 0x140017945
   1400179c0:	loope  0x1400179dd
   1400179c2:	fscale 
   1400179c4:	fst    DWORD PTR [rcx]
   1400179c6:	rex.WRB
   1400179c7:	rex.RB invd 
   1400179ca:	add    bh,BYTE PTR [rbp-0x2a1a17ff]
   1400179d0:	xchg   esi,eax
   1400179d1:	push   rdi
   1400179d2:	(bad)  
   1400179d3:	cld    
   1400179d4:	mov    esi,DWORD PTR [rdx-0xd]
   1400179d7:	rcr    BYTE PTR [rdi+0x2385c3f1],1
   1400179dd:	jrcxz  0x1400179c0
   1400179df:	sub    al,0x8f
   1400179e2:	sbb    eax,0x326ef7d7
   1400179e7:	idiv   DWORD PTR ds:[rbx+riz*8]
   1400179eb:	in     eax,dx
   1400179ec:	xchg   edi,eax
   1400179ed:	(bad)  
   1400179ee:	mov    dh,0x8b
   1400179f0:	(bad)  
   1400179f1:	sbb    BYTE PTR [rax+0x6f31a252],ch
   1400179f7:	mov    bh,0x26
   1400179f9:	(bad)  
   1400179fa:	out    0x84,eax
   1400179fc:	rex.B jmp 0x1051d861a
   140017a02:	rex.W nop
   140017a04:	cmc    
   140017a05:	rex mov ebp,0x2a0d99ee
   140017a0b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017a0c:	or     esp,DWORD PTR [rip+0xffffffffd6e0b0e1]        # 0x116e22af3
   140017a12:	adc    al,0x46
   140017a14:	and    BYTE PTR [rbx-0x5f],ah
   140017a17:	pop    rdx
   140017a18:	jo     0x140017a6e
   140017a1a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017a1b:	push   rax
   140017a1c:	js     0x140017a8e
   140017a1e:	add    ch,BYTE PTR [rax+0x34488082]
   140017a24:	add    ah,BYTE PTR [rbx+0x9]
   140017a27:	(bad)  
   140017a28:	cli    
   140017a29:	gs inc bl
   140017a2c:	out    0x88,eax
   140017a2e:	(bad)  
   140017a2f:	loopne 0x1400179cf
   140017a31:	(bad)  
   140017a32:	add    al,0xef
   140017a34:	jmp    0x175e769cc
   140017a39:	xchg   ebx,eax
   140017a3a:	int3   
   140017a3b:	neg    edi
   140017a3d:	jl     0x140017a21
   140017a3f:	mov    edi,esi
   140017a41:	mov    edx,0x78f2fcb2
   140017a46:	mov    esp,0x54385544
   140017a4b:	(bad)  
   140017a4c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017a4d:	mov    al,0x7f
   140017a4f:	jmp    0xdfe8e570
   140017a54:	(bad)  
   140017a55:	pop    rbp
   140017a56:	mov    edi,0x6c598684
   140017a5b:	or     al,0x10
   140017a5d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017a5e:	int3   
   140017a5f:	cld    
   140017a60:	jle    0x140017a95
   140017a62:	add    al,BYTE PTR [rbp-0x39c5af9d]
   140017a68:	jrcxz  0x140017a6c
   140017a6a:	mov    edi,0x3d43ac04
   140017a6f:	sub    BYTE PTR [rcx+0x14],dl
   140017a72:	push   rbp
   140017a73:	test   al,0x97
   140017a75:	or     esp,DWORD PTR [rbx+rsi*1-0x20]
   140017a79:	(bad)  
   140017a7a:	ror    DWORD PTR [rip+0xffffffffa8e0bf05],0x2a        # 0xe8e23986
   140017a81:	xchg   edi,esi
   140017a83:	data16 rex
   140017a85:	rex.WR icebp 
   140017a87:	rex.RB jae 0x140017a56
   140017a8a:	(bad)  
   140017a8b:	div    DWORD PTR [rcx+0x641f53ff]
   140017a91:	jnp    0x140017a2c
   140017a93:	ds or  ch,al
   140017a96:	or     eax,0xa2af2f40
   140017a9b:	sbb    al,0x68
   140017a9d:	neg    BYTE PTR [rcx]
   140017a9f:	sub    al,0x2e
   140017aa1:	cs push rsp
   140017aa3:	ret    
   140017aa4:	loope  0x140017af5
   140017aa6:	cmp    edx,DWORD PTR [rdi-0x6a]
   140017aa9:	jrcxz  0x140017a7c
   140017aab:	sub    BYTE PTR [rsi],al
   140017aad:	loop   0x140017ad1
   140017aaf:	in     al,dx
   140017ab0:	in     al,dx
   140017ab1:	rex.WRXB sbb BYTE PTR [r14+0x5b8b3aff],r11b
   140017ab8:	(bad)  
   140017ab9:	and    dl,bl
   140017abb:	sbb    eax,0x27550244
   140017ac0:	cld    
   140017ac1:	(bad)  
   140017ac2:	(bad)  
   140017ac3:	cmp    BYTE PTR [rbp+0x335f36],dh
   140017ac9:	adc    DWORD PTR [rcx+0x58412fc7],0x76
   140017ad0:	test   al,0x18
   140017ad2:	enter  0x50a7,0x17
   140017ad6:	(bad)  
   140017ad7:	pop    rbp
   140017ad8:	(bad)  
   140017ad9:	cld    
   140017ada:	xor    dh,BYTE PTR [rax]
   140017adc:	adc    al,0xdc
   140017ade:	pop    rax
   140017adf:	test   al,0x86
   140017ae1:	rex.X jmp 0xf73661ec
   140017ae7:	add    ecx,DWORD PTR [rdx-0x5fc4823c]
   140017aed:	and    bh,BYTE PTR [rsi*8-0x3c0163dd]
   140017af4:	hlt    
   140017af5:	push   rcx
   140017af6:	sar    BYTE PTR [rbp-0x43421d85],0x66
   140017afd:	xchg   edx,eax
   140017afe:	rex.XB push QWORD PTR [r13+0x2ef81f07]
   140017b05:	sub    eax,0x8b15f7ca
   140017b0a:	retf   
   140017b0b:	or     al,0xaa
   140017b0d:	or     dl,BYTE PTR [rcx+0x45]
   140017b10:	cmp    DWORD PTR [rbp+0x3958172b],0xd5c53cf7
   140017b1a:	pop    rax
   140017b1b:	cli    
   140017b1c:	repz loop 0x140017b41
   140017b1f:	cli    
   140017b20:	rex.WRXB push 0xfffffffff4897f73
   140017b26:	faddp  st(2),st
   140017b28:	or     esp,DWORD PTR [rbx+0x3918a7a1]
   140017b2e:	sbb    BYTE PTR [rcx+0x18],al
   140017b31:	or     BYTE PTR [rdx-0x57612f3a],cl
   140017b37:	fdivr  st(5),st
   140017b39:	movabs ds:0xca38190237145647,al
   140017b42:	mov    cl,0xa3
   140017b44:	sub    ah,BYTE PTR [rbx]
   140017b46:	jnp    0x140017b18
   140017b48:	sbb    ebp,DWORD PTR [rip+0xffffffff88255938]        # 0xc826d486
   140017b4e:	push   rcx
   140017b4f:	shl    DWORD PTR [rsi+0x3fe47ecc],0x93
   140017b56:	rol    edi,cl
   140017b58:	mov    eax,0xbd022bc7
   140017b5d:	add    eax,ebp
   140017b5f:	in     eax,0xd5
   140017b61:	xchg   ecx,eax
   140017b62:	add    ebx,esi
   140017b64:	jg     0x140017bd7
   140017b66:	movsxd esp,DWORD PTR [rbx-0x4b]
   140017b69:	lods   al,BYTE PTR ds:[rsi]
   140017b6a:	stos   BYTE PTR es:[rdi],al
   140017b6b:	lahf   
   140017b6c:	or     al,BYTE PTR [rbp-0x17]
   140017b6f:	(bad)  
   140017b70:	jrcxz  0x140017b17
   140017b72:	call   0x179b9c150
   140017b77:	lods   eax,DWORD PTR ds:[rsi]
   140017b78:	jno    0x140017b91
   140017b7a:	rex.WRX mov dl,0x7c
   140017b7d:	loope  0x140017bb3
   140017b7f:	in     al,dx
   140017b80:	fild   WORD PTR [rax+0x9]
   140017b83:	xchg   esp,eax
   140017b84:	or     BYTE PTR [rbx],al
   140017b86:	xchg   esp,eax
   140017b87:	xor    dl,BYTE PTR [rsi+0x7]
   140017b8a:	jno    0x140017bba
   140017b8c:	(bad)  
   140017b8d:	js     0x140017bb6
   140017b8f:	push   rsp
   140017b90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017b91:	xor    BYTE PTR [rdx+0x6040c51c],ch
   140017b97:	or     al,0xa1
   140017b99:	mov    edx,cs
   140017b9b:	ins    BYTE PTR es:[rdi],dx
   140017b9c:	cli    
   140017b9d:	(bad)
   140017ba1:	adc    DWORD PTR [rip+0x6058dc5],0xffffffe0        # 0x14607096d
   140017ba8:	rex.RX
   140017ba9:	rex.X push rbp
   140017bab:	or     esi,ebx
   140017bad:	fdecstp 
   140017baf:	sub    al,0x7
   140017bb1:	adc    BYTE PTR [rcx+rdx*4],al
   140017bb4:	clc    
   140017bb5:	rcl    DWORD PTR [rdx],0x7d
   140017bb8:	clc    
   140017bb9:	movabs ds:0x4f701478f72afc5c,eax
   140017bc2:	sahf   
   140017bc3:	je     0x140017bf4
   140017bc5:	scas   eax,DWORD PTR es:[rdi]
   140017bc6:	mov    esp,ecx
   140017bc8:	add    DWORD PTR [rdi-0x75],edi
   140017bcb:	neg    edi
   140017bcd:	jmp    QWORD PTR [rbx-0x76]
   140017bd0:	cmp    al,0x2e
   140017bd2:	ret    
   140017bd3:	rex.RB (bad) 
   140017bd5:	movabs ds:0x97eb9d8e234aa231,eax
   140017bde:	pop    rcx
   140017bdf:	cmp    edi,esi
   140017be1:	cmp    al,0x83
   140017be3:	stos   DWORD PTR es:[rdi],eax
   140017be4:	pop    rbx
   140017be5:	push   0xffffffff8939c133
   140017bea:	sbb    al,0x5d
   140017bec:	imul   ebp,DWORD PTR [rax],0x38ff245c
   140017bf2:	pop    rsp
   140017bf3:	retf   
   140017bf4:	jmp    FWORD PTR [rdi]
   140017bf6:	cmp    eax,0x18a7a183
   140017bfb:	or     BYTE PTR [rdx],dh
   140017bfd:	push   rsp
   140017bfe:	(bad)  
   140017bff:	or     ebp,DWORD PTR [rdx+0x29eeae4a]
   140017c05:	xor    al,0xde
   140017c07:	adc    DWORD PTR [rsi+0x4],edx
   140017c0a:	mov    bh,0x18
   140017c0c:	jo     0x140017c11
   140017c0e:	ror    DWORD PTR [rbp+0x16586022],0x82
   140017c15:	div    DWORD PTR [rcx+0x58]
   140017c18:	mov    BYTE PTR [rbx],al
   140017c1a:	push   rsp
   140017c1b:	pop    rdx
   140017c1c:	adc    BYTE PTR [rcx-0x80],0xd
   140017c20:	(bad)  
   140017c21:	(bad)  
   140017c22:	(bad)  
   140017c23:	push   rcx
   140017c24:	rex.WRX ffree st(7)
   140017c27:	cmp    eax,0xdea0e4c
   140017c2c:	rex (bad) 
   140017c2e:	jg     0x140017ca0
   140017c30:	cmp    DWORD PTR [rax-0x6],eax
   140017c33:	fnstcw WORD PTR [rax-0x1c]
   140017c36:	xchg   ecx,eax
   140017c37:	(bad)  
   140017c38:	retf   
   140017c39:	ret    0x38ff
   140017c3c:	movabs ds:0x7b008f4aa996160c,al
   140017c45:	rex.WRB and BYTE PTR [r8+rdi*1-0x33],r11b
   140017c4a:	retf   0x17f9
   140017c4d:	nop
   140017c4e:	fwait
   140017c4f:	push   rdi
   140017c50:	add    DWORD PTR [rax+0x57fe18d3],0xe3ee9c68
   140017c5a:	and    al,0x8e
   140017c5c:	(bad)  
   140017c5d:	jbe    0x140017be1
   140017c5f:	test   DWORD PTR [rsi-0x3555ef4e],0x14602ae1
   140017c69:	or     eax,0x7e456a00
   140017c6e:	enter  0x40a1,0x58
   140017c72:	adc    ah,bl
   140017c74:	add    dl,BYTE PTR [rax+0x9]
   140017c77:	pop    rdx
   140017c78:	or     al,ch
   140017c7a:	xor    BYTE PTR [rsi+0x7383ce01],ah
   140017c80:	mov    dh,BYTE PTR [rbx]
   140017c82:	push   rdx
   140017c83:	nop
   140017c84:	test   al,0xb4
   140017c86:	mov    ecx,DWORD PTR [rdi]
   140017c88:	test   al,0x1e
   140017c8a:	jnp    0x140017cda
   140017c8c:	mov    bh,0x7f
   140017c8e:	mov    BYTE PTR [rsi],dh
   140017c90:	or     bh,BYTE PTR [rax+0x7a1f94a7]
   140017c96:	add    edx,eax
   140017c98:	retf   
   140017c99:	(bad)  
   140017c9a:	push   rsp
   140017c9b:	outs   dx,BYTE PTR ds:[rsi]
   140017c9c:	shr    edx,1
   140017c9e:	cmp    ebx,DWORD PTR [rax+0x59]
   140017ca1:	stc    
   140017ca2:	imul   esp,DWORD PTR [rdi+0x218b4d61],0xa15c5a3
   140017cac:	and    BYTE PTR [rax-0x628c4c50],cl
   140017cb2:	xchg   ebp,eax
   140017cb3:	repz iret 
   140017cb5:	xor    edi,DWORD PTR [rsp+rdi*2+0x11f66d16]
   140017cbc:	rcl    DWORD PTR [rdi+rdi*4-0x49c0d64f],0x21
   140017cc4:	sbb    esi,ebp
   140017cc6:	push   rbp
   140017cc7:	clc    
   140017cc8:	test   al,0xc4
   140017cca:	gs and eax,0xd06148c8
   140017cd0:	sbb    eax,0x3097f4
   140017cd5:	add    DWORD PTR [rbp+0x41643950],eax
   140017cdb:	jno    0x140017ce0
   140017cdd:	jo     0x140017cf4
   140017cdf:	add    rax,0xffffffffa5ef04be
   140017ce5:	sub    r13,QWORD PTR [r12+rbp*2]
   140017ce9:	nop
   140017cea:	(bad)  
   140017ceb:	movups xmm3,XMMWORD PTR [rax-0x6b]
   140017cef:	cli    
   140017cf0:	sub    edi,DWORD PTR [rdi-0x64]
   140017cf3:	xchg   ebx,eax
   140017cf4:	(bad)  
   140017cf5:	mov    eax,0xbd022b47
   140017cfa:	add    eax,ebp
   140017cfc:	in     eax,0xd5
   140017cfe:	nop
   140017cff:	lods   al,BYTE PTR ds:[rsi]
   140017d00:	cld    
   140017d01:	xchg   DWORD PTR [rsi-0x3a580c87],ebx
   140017d07:	stc    
   140017d08:	iret   
   140017d09:	rex.WXB push r11
   140017d0b:	ret    
   140017d0c:	js     0x140017ca7
   140017d0e:	shl    DWORD PTR [rax+0x8],1
   140017d11:	add    dh,BYTE PTR [rbp-0x18b42cf6]
   140017d17:	pop    rax
   140017d18:	cmp    bh,bh
   140017d1a:	jne    0x140017d80
   140017d1c:	out    0x1a,eax
   140017d1e:	stos   BYTE PTR es:[rdi],al
   140017d1f:	or     eax,0x7fe148e
   140017d24:	mov    esp,0xd4ecca8b
   140017d29:	add    BYTE PTR [rax+0x17],al
   140017d2c:	add    eax,eax
   140017d2e:	mov    dl,0x70
   140017d30:	xchg   esp,eax
   140017d31:	xchg   ebp,eax
   140017d32:	mov    ebx,DWORD PTR [rsi+0xa8207d]
   140017d38:	push   0x45812c7
   140017d3d:	push   rax
   140017d3e:	or     BYTE PTR [rcx+0x1],ah
   140017d41:	fcom   QWORD PTR [rax]
   140017d43:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017d44:	adc    BYTE PTR [rax+riz*1-0x6c],ah
   140017d48:	add    eax,DWORD PTR [rdi-0x17]
   140017d4b:	pop    rbp
   140017d4c:	imul   eax,DWORD PTR [rdx+rdx*8],0xfffffffb
   140017d50:	push   rbp
   140017d51:	movsxd ebx,DWORD PTR [rcx+0x50]
   140017d54:	test   BYTE PTR [rdx-0xc],al
   140017d57:	clc    
   140017d58:	jnp    0x140017d13
   140017d5a:	bnd jge 0x140017d39
   140017d5d:	movabs ds:0xcabcbdb2753dc058,eax
   140017d66:	shl    BYTE PTR [rdx],cl
   140017d68:	(bad)  
   140017d69:	and    dh,al
   140017d6b:	ja     0x140017d4c
   140017d6d:	std    
   140017d6e:	sbb    eax,ebp
   140017d70:	ret    0x9fe2
   140017d73:	ja     0x140017d4f
   140017d75:	clc    
   140017d76:	adc    BYTE PTR [rax+0x2d],0xaf
   140017d7a:	xor    ebp,DWORD PTR [rax]
   140017d7c:	(bad)  
   140017d7d:	fs mov ebp,0xf0c7b7b3
   140017d83:	(bad)  
   140017d85:	sbb    BYTE PTR [rdi-0x61],ch
   140017d88:	rex.RB (bad) 
   140017d8a:	jge    0x140017d9c
   140017d8c:	sub    ah,al
   140017d8e:	push   rcx
   140017d8f:	rex.WB and al,0xff
   140017d92:	and    al,0xfa
   140017d94:	outs   dx,DWORD PTR ds:[rsi]
   140017d95:	(bad)  
   140017d96:	movabs al,ds:0xa2852837d191779d
   140017d9f:	adc    ah,BYTE PTR [rax+riz*4-0x7c]
   140017da3:	or     sil,BYTE PTR [r14]
   140017da6:	mov    BYTE PTR [rcx],ch
   140017da8:	sub    BYTE PTR [rax-0x4],0xad
   140017dac:	mov    bh,BYTE PTR [rdx]
   140017dae:	mov    r12d,0x2904a148
   140017db5:	add    eax,0x1b0a1037
   140017dba:	(bad)  
   140017dbb:	and    ah,BYTE PTR [rdx]
   140017dbd:	js     0x140017e1b
   140017dbf:	int3   
   140017dc0:	inc    DWORD PTR [rbp+0x72]
   140017dc3:	(bad)  
   140017dc4:	and    eax,eax
   140017dc6:	sub    dh,BYTE PTR [rbx+0x2f32f81f]
   140017dcc:	sbb    eax,0x8ac1ee2
   140017dd1:	hlt    
   140017dd2:	(bad)  
   140017dd3:	movabs al,ds:0x1f1ff422dc9fdf97
   140017ddc:	jg     0x140017dbe
   140017dde:	rex.WRXB mov BYTE PTR [r8-0x7b0aeac9],r15b
   140017de5:	xor    BYTE PTR [rax],bl
   140017de7:	xor    ebx,DWORD PTR [rdx+0x58]
   140017dea:	(bad)  
   140017deb:	mov    DWORD PTR [rdx+0x2b],edx
   140017dee:	fdivr  QWORD PTR [rdx+rsi*2-0x308c4a7f]
   140017df5:	jrcxz  0x140017e6e
   140017df7:	movabs cs:0x71a57f4ac28046a1,eax
   140017e01:	div    BYTE PTR [rbx+0x68]
   140017e04:	out    dx,al
   140017e05:	movabs ds:0x812bec06d88b2ed7,al
   140017e0e:	sar    QWORD PTR [rsp+r8*8],1
   140017e12:	pop    rsi
   140017e13:	or     al,0x0
   140017e15:	rex.WR and BYTE PTR [rax+0x7050ca1d],0x23
   140017e1d:	sub    r12b,BYTE PTR [r8+0x68aa414]
   140017e24:	sar    BYTE PTR [rbx-0x6ab7eea8],0x80
   140017e2b:	outs   dx,BYTE PTR ds:[rsi]
   140017e2c:	and    al,BYTE PTR [rcx-0x1d85faf8]
   140017e32:	mov    bl,0x6c
   140017e34:	fst    QWORD PTR [rbx+0x733dc051]
   140017e3a:	movabs ds:0xf1b9400c9226bcbd,al
   140017e43:	hlt    
   140017e44:	pop    rbx
   140017e45:	fsubrp st(5),st
   140017e47:	stos   DWORD PTR es:[rdi],eax
   140017e48:	(bad)  
   140017e49:	rex.RXB or BYTE PTR [rip+0xffffffff97e29eae],r14b        # 0xd7e41cfe
   140017e50:	(bad)  
   140017e51:	rex.WB (bad) 
   140017e53:	fistp  WORD PTR [rbp-0x3157317]
   140017e59:	xchg   r14,rax
   140017e5b:	cs mov esp,0x209bd308
   140017e61:	add    DWORD PTR [rdi],ebp
   140017e63:	(bad)  
   140017e64:	cmp    al,0x7f
   140017e66:	sbb    bl,dh
   140017e68:	xchg   ecx,eax
   140017e69:	ret    0xa8f4
   140017e6c:	lods   al,BYTE PTR ds:[rsi]
   140017e6d:	fiadd  WORD PTR [rbp+0x3]
   140017e70:	push   rax
   140017e71:	push   rsi
   140017e72:	(bad)  
   140017e73:	push   rdi
   140017e74:	or     dl,BYTE PTR [rdx-0x76]
   140017e77:	lods   eax,DWORD PTR ds:[rsi]
   140017e78:	(bad)  
   140017e7a:	xor    DWORD PTR [rsi],eax
   140017e7c:	nop
   140017e7d:	hlt    
   140017e7e:	fsub   DWORD PTR [rdx]
   140017e80:	add    BYTE PTR [rbx*1+0x11890c08],dl
   140017e87:	rex movabs eax,ds:0xc31413ce2af82548
   140017e91:	add    DWORD PTR [rdx+0x40cd0a9],esp
   140017e97:	mov    dl,BYTE PTR [rbp+0x14]
   140017e9a:	(bad)  
   140017e9b:	jne    0x140017e8f
   140017e9d:	(bad)  
   140017e9e:	rex.WRXB mov r11b,0xb5
   140017ea1:	(bad)  
   140017ea2:	cmp    eax,0x6f40516
   140017ea7:	movabs al,ds:0x6b87fd401cbbdf97
   140017eb0:	jmp    0x140017e3d
   140017eb2:	jle    0x140017f29
   140017eb4:	std    
   140017eb5:	(bad)  
   140017eb6:	xor    eax,0xd3962c52
   140017ebb:	cmp    eax,0xb2b54710
   140017ec0:	rex.B jmp 0xfd86c54a
   140017ec6:	stos   DWORD PTR es:[rdi],eax
   140017ec7:	xchg   edi,eax
   140017ec8:	pop    rax
   140017ec9:	cmp    ebx,edi
   140017ecb:	xor    eax,0xa117ebca
   140017ed0:	cdq    
   140017ed1:	cdq    
   140017ed2:	xlat   BYTE PTR ds:[rbx]
   140017ed3:	(bad)  
   140017ed4:	enter  0x497f,0xb0
   140017ed8:	jp     0x140017f57
   140017eda:	push   0xfffffffffffffffe
   140017edc:	mov    DWORD PTR [rcx],edx
   140017ede:	rex loope 0x140017e65
   140017ee1:	stos   BYTE PTR es:[rdi],al
   140017ee2:	mov    WORD PTR [rip+0x7c00aefe],?        # 0x1bc022de6
   140017ee8:	in     al,0xf4
   140017eea:	rex.RXB adc r8b,r12b
   140017eed:	loopne 0x140017e81
   140017eef:	jg     0x140017ea2
   140017ef1:	xor    dl,BYTE PTR [rax]
   140017ef3:	mov    esp,0x29630c0
   140017ef8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017ef9:	jo     0x140017f43
   140017efb:	or     DWORD PTR [rsi-0xebf5a76],edi
   140017f01:	pop    rax
   140017f02:	je     0x140017f25
   140017f04:	(bad)  
   140017f05:	or     dh,BYTE PTR [rsi+rdi*8+0x560b2b00]
   140017f0c:	ret    0xdf13
   140017f0f:	retf   
   140017f10:	(bad)  [rdi-0x2f]
   140017f13:	sub    eax,0x7203de09
   140017f18:	rex.WRXB pushf 
   140017f1a:	fs (bad) 
   140017f1c:	scas   eax,DWORD PTR es:[rdi]
   140017f1d:	movabs ds:0x1fd1e47e5ff422dc,al
   140017f26:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017f27:	lods   al,BYTE PTR ds:[rsi]
   140017f28:	fimul  WORD PTR [rbx+0x68]
   140017f2b:	test   al,0x26
   140017f2d:	(bad)  
   140017f2e:	or     ebx,eax
   140017f30:	and    eax,0x8cb8bc6
   140017f35:	retf   0xa36e
   140017f38:	mov    cl,0xe7
   140017f3a:	jg     0x140017f27
   140017f3c:	adc    al,0xb2
   140017f3e:	mov    bh,0x43
   140017f40:	pop    rsp
   140017f41:	mov    ebx,0xd2e7cd33
   140017f46:	pushf  
   140017f47:	repz and edx,DWORD PTR [rcx]
   140017f4a:	add    al,0xcc
   140017f4c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017f4d:	rex add ebp,edi
   140017f50:	(bad)
   140017f54:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017f55:	test   al,0x74
   140017f57:	sbb    al,0xb2
   140017f59:	ret    0xaac1
   140017f5c:	pop    rbp
   140017f5d:	lock (bad) 
   140017f5f:	xchg   al,ah
   140017f61:	rex.WX test QWORD PTR [rdx-0x70],rax
   140017f65:	shl    cl,cl
   140017f67:	sub    ah,BYTE PTR [rcx+0x40af232c]
   140017f6d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017f6e:	cmc    
   140017f6f:	cld    
   140017f70:	in     eax,dx
   140017f71:	movabs ss:0x4c23a1ffdd4d8138,al
   140017f7b:	(bad)  
   140017f7c:	mov    ah,0x25
   140017f7e:	sar    DWORD PTR [rsi],0x2
   140017f81:	call   0x1885d172b
   140017f86:	pop    rbx
   140017f87:	repz jg 0x140017f5d
   140017f8a:	push   rbx
   140017f8b:	outs   dx,DWORD PTR ds:[rsi]
   140017f8c:	xchg   ebx,eax
   140017f8d:	test   ebp,esp
   140017f8f:	lahf   
   140017f90:	push   rsp
   140017f91:	test   BYTE PTR [rdx+0x13d5c7de],dh
   140017f97:	fmul   st(2),st
   140017f99:	and    DWORD PTR [rsi-0x4f5576ab],eax
   140017f9f:	jae    0x140017f94
   140017fa1:	cmp    cl,BYTE PTR [rbx-0x19]
   140017fa4:	mov    esi,0x22ed7546
   140017fa9:	fimul  DWORD PTR [rax+rdx*2-0x40]
   140017fad:	jrcxz  0x140017fd7
   140017faf:	push   rax
   140017fb0:	rex.WX jrcxz 0x140017fb1
   140017fb3:	(bad)  
   140017fb4:	jb     0x140018004
   140017fb6:	(bad)  
   140017fb7:	loope  0x140017fb0
   140017fb9:	cs jb  0x140017fb5
   140017fbc:	push   rbx
   140017fbd:	or     ah,BYTE PTR [rax]
   140017fbf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017fc0:	rex.R mov edi,0x2bfb16c
   140017fc6:	push   0x5d
   140017fc8:	jle    0x14001801b
   140017fca:	movabs ds:0xf9882180a813ab26,al
   140017fd3:	jno    0x140017f7e
   140017fd5:	add    al,0x5f
   140017fd7:	(bad)  
   140017fd8:	fld    QWORD PTR [rcx+0x361b3882]
   140017fde:	(bad)  
   140017fdf:	pop    rbx
   140017fe0:	jb     0x140017f6a
   140017fe2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017fe3:	add    DWORD PTR [rdx+0x25],eax
   140017fe6:	loope  0x140018055
   140017fe8:	jg     0x140017f6b
   140017fea:	push   rsp
   140017fec:	(bad)  
   140017fed:	mov    edx,0x3cbb80bc
   140017ff2:	or     eax,0x2f400de8
   140017ff7:	fistp  QWORD PTR [rdx-0x3402f7e4]
   140017ffd:	icebp  
   140017ffe:	js     0x14001805c
   140018000:	lods   al,BYTE PTR ds:[rsi]
   140018001:	outs   dx,BYTE PTR ds:[rsi]
   140018002:	cld    
   140018003:	(bad)  
   140018004:	(bad)  
   140018005:	ret    
   140018006:	jne    0x140017fd9
   140018008:	rex mov ecx,0x33ce03bf
   14001800e:	pop    rax
   14001800f:	cmp    eax,DWORD PTR [rdi+rdx*1-0x196be59f]
   140018016:	ret    0xd619
   140018019:	(bad)  
   14001801a:	cmp    eax,0x1bddb8f
   14001801f:	xor    al,0x20
   140018021:	mov    ss,WORD PTR [rdx]
   140018023:	movabs ds:0xfd0c474ef0f213f2,al
   14001802c:	popf   
   14001802d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001802e:	and    DWORD PTR [rax],esp
   140018030:	adc    cl,bl
   140018032:	ja     0x14001805d
   140018034:	or     ch,al
   140018036:	mov    edi,gs
   140018038:	rex.W (bad) 
   14001803a:	and    DWORD PTR [rax+0x36],ebp
   14001803d:	or     ch,BYTE PTR [rax-0x4]
   140018040:	adc    eax,0x252a412a
   140018045:	cs adc BYTE PTR es:[rbx-0x7e],cl
   14001804a:	scas   al,BYTE PTR es:[rdi]
   14001804b:	adc    BYTE PTR [rdx],cl
   14001804d:	add    edx,DWORD PTR [rsi]
   14001804f:	mov    ebp,0x38731145
   140018054:	(bad)  
   140018055:	and    r12d,eax
   140018058:	mov    r12b,r11b
   14001805b:	in     al,dx
   14001805c:	jge    0x14001805d
   14001805e:	cwde   
   14001805f:	data16 jle 0x1400180cc
   140018062:	rcr    BYTE PTR [rbp+0x2c],1
   140018065:	mov    ebp,0x5be5e801
   14001806a:	xchg   ebx,eax
   14001806b:	pop    rbx
   14001806c:	test   dh,bh
   14001806e:	imul   ecx,DWORD PTR [rdi+0x3e],0xfffffffd
   140018072:	rex.RXB jne 0x140018031
   140018075:	hlt    
   140018076:	rex.B adc eax,0xc194f570
   14001807c:	dec    BYTE PTR [rip+0xffffffff8306e2c2]        # 0xc3086344
   140018082:	test   DWORD PTR [rbp+0x44],esp
   140018085:	loope  0x140018081
   140018087:	ficomp WORD PTR [rsi]
   140018089:	movabs ds:0x37a6017cba33cff3,eax
   140018092:	push   rcx
   140018093:	add    al,BYTE PTR [rdx+0x5c]
   140018096:	shl    DWORD PTR [rdi-0x3801eb70],1
   14001809c:	jl     0x1400180da
   14001809e:	jmp    0x130036b1b
   1400180a3:	(bad)  
   1400180a4:	sbb    eax,0x2e589e7d
   1400180a9:	adc    rax,0x3fd7ae80
   1400180af:	rol    BYTE PTR [rip+0xffffffff904a8050],0x2a        # 0xd04c0106
   1400180b6:	xchg   esi,eax
   1400180b7:	add    ebp,eax
   1400180b9:	ds (bad) 
   1400180bb:	gs (bad) 
   1400180bd:	(bad)  
   1400180be:	xor    ch,ah
   1400180c0:	rex.WRXB stc 
   1400180c2:	(bad)  
   1400180c3:	sub    r14b,BYTE PTR [rbp+r9*1-0x1eee7ec5]
   1400180cb:	jrcxz  0x14001814c
   1400180cd:	push   rsi
   1400180ce:	sahf   
   1400180cf:	jg     0x14001806d
   1400180d1:	jnp    0x1400180d7
   1400180d3:	or     al,0xec
   1400180d5:	or     eax,0x17bf2f40
   1400180da:	leave  
   1400180db:	fidivr WORD PTR [rdi-0x3]
   1400180de:	mov    DWORD PTR [rdi],esp
   1400180e0:	fmulp  st(4),st
   1400180e2:	ret    0x9fea
   1400180e5:	(bad)
   1400180e8:	jnp    0x140018138
   1400180ea:	imul   DWORD PTR [rax]
   1400180ec:	addr32 adc ebx,esp
   1400180ef:	(bad)  
   1400180f0:	jge    0x1400180fe
   1400180f2:	retf   0xa982
   1400180f5:	sub    dl,bl
   1400180f7:	retf   
   1400180f8:	out    0x58,eax
   1400180fa:	cmp    eax,0xcefc75ff
   1400180ff:	adc    eax,0x17105308
   140018104:	sbb    eax,0x1b4a06b3
   140018109:	std    
   14001810a:	xchg   ebp,eax
   14001810b:	cmp    BYTE PTR [rcx+0x5ce73d2e],sil
   140018112:	(bad)  
   140018113:	add    BYTE PTR [rdx-0x68c7fd68],cl
   140018119:	(bad)  
   14001811a:	cli    
   14001811b:	mov    al,0x23
   14001811d:	push   rax
   14001811e:	imul   eax,DWORD PTR [rax],0x48
   140018121:	xchg   esi,eax
   140018122:	rex cmp ecx,DWORD PTR [rdi+0x58582245]
   140018129:	sub    DWORD PTR [rdx+rbx*1-0x31f42b71],edx
   140018130:	retf   0xce81
   140018133:	mov    ch,0x63
   140018135:	ret    0x66a2
   140018138:	mov    bh,0xd1
   14001813a:	or     BYTE PTR [rax-0x1c5ebfa8],0xa7
   140018141:	mov    eax,0x9e76fdf1
   140018146:	ja     0x140018185
   140018148:	cmp    eax,0xbd0037b8
   14001814d:	jl     0x1400181c2
   14001814f:	cmp    DWORD PTR [rax+0x2eacaffa],ecx
   140018155:	xchg   esi,eax
   140018156:	sbb    eax,DWORD PTR [rdi-0x2]
   140018159:	(bad)  
   14001815a:	(bad)  
   14001815b:	or     al,0x17
   14001815d:	popf   
   14001815e:	add    BYTE PTR [rcx-0x6a844f9a],ah
   140018164:	push   rax
   140018165:	lea    ebp,[rax]
   140018167:	(bad)  
   140018168:	(bad)  
   140018169:	push   rdx
   14001816a:	movabs al,ds:0xe1649fcf28cc9cdc
   140018173:	ror    bl,cl
   140018175:	xor    cl,bl
   140018177:	mov    cl,0x16
   140018179:	fsubp  st(0),st
   14001817b:	stc    
   14001817c:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001817e:	adc    al,0xe8
   140018180:	pop    rsp
   140018181:	mov    bh,0x5e
   140018183:	add    edi,DWORD PTR cs:[rdx]
   140018186:	movabs eax,ds:0xa002b177b8147170
   14001818f:	pop    rsi
   140018190:	push   rcx
   140018191:	xlat   BYTE PTR ds:[rbx]
   140018192:	mov    dh,0x0
   140018194:	imul   edx,DWORD PTR [rdi-0x1f],0x53
   140018198:	clc    
   140018199:	(bad)  
   14001819a:	test   DWORD PTR [rax-0x10],0x5577fd11
   1400181a1:	mov    WORD PTR [rax],es
   1400181a3:	ror    BYTE PTR [rdi-0x32bd3cb5],cl
   1400181a9:	or     ah,al
   1400181ab:	push   rax
   1400181ac:	rex.RX mov bl,0x9
   1400181af:	nop
   1400181b0:	mov    ?,WORD PTR [rcx]
   1400181b2:	pop    rdx
   1400181b3:	rcr    cl,1
   1400181b5:	ja     0x140018235
   1400181b7:	(bad)  
   1400181b8:	(bad)  
   1400181b9:	fist   WORD PTR [rbx]
   1400181bb:	(bad)  
   1400181bc:	movabs al,ds:0xf2bccbbbf2f400de
   1400181c5:	rex.RXB (bad) 
   1400181c7:	push   QWORD PTR [rcx-0x1cdb0139]
   1400181cd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400181ce:	test   DWORD PTR [rdx-0x523b1d55],0xdee194d9
   1400181d8:	jne    0x140018174
   1400181da:	mov    ch,0xa3
   1400181dc:	mov    WORD PTR [rsi+0x23],es
   1400181df:	push   0x55
   1400181e1:	jbe    0x140018192
   1400181e3:	ins    DWORD PTR es:[rdi],dx
   1400181e4:	mov    bl,0x72
   1400181e6:	(bad)  
   1400181e7:	and    al,0xc5
   1400181e9:	mov    ch,0xcb
   1400181eb:	push   0x1ac4a298
   1400181f0:	jg     0x140018217
   1400181f2:	push   rax
   1400181f3:	stos   BYTE PTR es:[rdi],al
   1400181f4:	out    0xf6,al
   1400181f6:	(bad)  
   1400181f7:	xor    edi,ebp
   1400181f9:	out    dx,eax
   1400181fa:	rex.WRB stc 
   1400181fc:	popf   
   1400181fd:	(bad)  
   1400181fe:	or     al,BYTE PTR [rax-0x1f]
   140018201:	push   rdx
   140018202:	stc    
   140018203:	scas   al,BYTE PTR es:[rdi]
   140018204:	push   rbp
   140018205:	rex.WRX rcr BYTE PTR [rdi+r15*2-0x1ec7e859],0x0
   14001820e:	jmp    0x1685b8988
   140018213:	push   rdx
   140018214:	push   0xffffffffffffffac
   140018216:	(bad)  
   140018217:	fcom   DWORD PTR [rcx-0x45]
   14001821a:	retf   0x530
   14001821d:	addr32 sub eax,0x523c66c1
   140018223:	xchg   edi,eax
   140018224:	(bad)  
   140018225:	out    0x5,al
   140018227:	add    BYTE PTR [rbp+0x6527c0f0],dl
   14001822d:	jmp    0x140018202
   14001822f:	popf   
   140018230:	jae    0x1400181f0
   140018232:	imul   esi,ebp,0xffffffe4
   140018235:	scas   al,BYTE PTR es:[rdi]
   140018236:	cmp    eax,0x555e5eb1
   14001823b:	imul   edi,DWORD PTR [rcx-0xac2b002],0xfb5c597e
   140018245:	adc    edx,DWORD PTR [rdx+0xc]
   140018248:	movsxd edi,esi
   14001824a:	lods   al,BYTE PTR ds:[rsi]
   14001824b:	or     eax,0x6526e4e5
   140018250:	push   rbx
   140018251:	jrcxz  0x140018262
   140018253:	popf   
   140018254:	(bad)  
   140018255:	loopne 0x140018294
   140018257:	jnp    0x1400182ce
   140018259:	sub    DWORD PTR [rbp+rdi*4-0x38],0xffffffe2
   14001825e:	neg    BYTE PTR [rcx]
   140018260:	fs (bad) 
   140018262:	cmp    ch,BYTE PTR [rax+0x3]
   140018265:	cmp    edi,esi
   140018267:	(bad)  
   140018268:	out    dx,al
   140018269:	(bad)  
   14001826a:	lods   eax,DWORD PTR ds:[rsi]
   14001826b:	(bad)  
   14001826c:	jbe    0x1400182d8
   14001826e:	cmp    DWORD PTR [rbx],0x2d
   140018271:	sbb    dh,al
   140018273:	adc    bl,BYTE PTR [rbx+0x59c28a78]
   140018279:	mov    edi,ebx
   14001827b:	sbb    bh,BYTE PTR [rdi-0x6e]
   14001827e:	xchg   BYTE PTR [rsi+0x5573dc4],ah
   140018284:	(bad)  
   140018285:	push   0x3
   140018287:	movabs al,ds:0x850018c9c785b0e
   140018290:	scas   al,BYTE PTR es:[rdi]
   140018291:	rex.W retf 
   140018293:	mov    ebp,es
   140018295:	push   rdx
   140018296:	rex.XB mov WORD PTR [r10],?
   140018299:	mov    ah,0x45
   14001829b:	stc    
   14001829c:	push   rsp
   14001829d:	in     eax,dx
   14001829e:	stc    
   14001829f:	mov    eax,0xf9308dd1
   1400182a4:	rcr    BYTE PTR [rdx],cl
   1400182a6:	mov    bl,0x8a
   1400182a8:	(bad)  
   1400182a9:	or     ah,ch
   1400182ab:	and    eax,DWORD PTR [rax+0x3931ee5e]
   1400182b1:	enter  0x3ff5,0x72
   1400182b5:	je     0x14001828a
   1400182b7:	lods   eax,DWORD PTR ds:[rsi]
   1400182b8:	outs   dx,BYTE PTR ds:[rsi]
   1400182b9:	(bad)  
   1400182ba:	push   rbp
   1400182bb:	sbb    DWORD PTR [rsi],ebp
   1400182bd:	lea    eax,[rbp+0x7c]
   1400182c0:	sbb    al,0xc6
   1400182c2:	push   rcx
   1400182c3:	(bad)  
   1400182c4:	lock mov edi,0xb8675a5e
   1400182ca:	mov    edx,0x77372809
   1400182cf:	outs   dx,BYTE PTR ds:[rsi]
   1400182d0:	mov    al,0x78
   1400182d2:	out    dx,al
   1400182d3:	imul   ecx,DWORD PTR [rsi+rbp*1],0x5f
   1400182d7:	rex
   1400182d8:	mov    bx,0x8471
   1400182dc:	xchg   edi,eax
   1400182dd:	xchg   ecx,eax
   1400182de:	jg     0x14001826a
   1400182e0:	adc    al,dh
   1400182e2:	test   al,0x95
   1400182e4:	cld    
   1400182e5:	rex.WR jmp 0x122f1721c
   1400182eb:	rex.WX movabs rdi,0x3c1e897bdade8f85
   1400182f5:	(bad)
   1400182f8:	std    
   1400182f9:	rex.WRXB sete BYTE PTR [r10+r11*2-0x26e96f98]
   140018302:	not    DWORD PTR [rcx+0x16171809]
   140018308:	mov    BYTE PTR [rcx+0x4],dl
   14001830b:	add    eax,0x8f808d1
   140018310:	or     dh,ah
   140018312:	test   al,0xa1
   140018314:	add    eax,DWORD PTR [rsi]
   140018316:	(bad)  
   140018317:	sub    al,0x23
   140018319:	sbb    al,BYTE PTR [rbp-0x7107b7f]
   14001831f:	pop    rcx
   140018320:	mov    esi,0xf2ee0ef6
   140018325:	xor    al,0xa0
   140018327:	(bad)  
   140018328:	add    BYTE PTR [rbp+0x4c0e5adc],bh
   14001832e:	clc    
   14001832f:	add    edx,ecx
   140018331:	icebp  
   140018332:	add    ecx,DWORD PTR [rdi]
   140018334:	std    
   140018335:	jns    0x1400182fd
   140018337:	sub    ecx,edi
   140018339:	test   al,0x2f
   14001833b:	int3   
   14001833c:	(bad)  
   14001833d:	(bad)  
   14001833e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001833f:	sahf   
   140018340:	xor    BYTE PTR [rax+0x3f0e44dc],bl
   140018346:	rex xor eax,0x94693018
   14001834c:	out    0xe2,al
   14001834e:	rex.WXB lods al,BYTE PTR ds:[rsi]
   140018350:	ins    BYTE PTR es:[rdi],dx
   140018351:	popf   
   140018352:	ret    0xbcdd
   140018355:	mov    ch,BYTE PTR [rdx-0x7d]
   140018358:	mov    al,bl
   14001835a:	test   eax,0x434fd0da
   14001835f:	jmp    QWORD PTR [rcx+0x746cfe05]
   140018365:	ja     0x1400183b3
   140018367:	add    DWORD PTR [rax+0x37afd2b],ecx
   14001836d:	in     eax,dx
   14001836e:	adc    cl,BYTE PTR [rdi+riz*4]
   140018371:	rex.R (bad) 
   140018373:	xchg   ecx,eax
   140018374:	sub    DWORD PTR [rsi-0x3c],ebp
   140018377:	(bad)  
   140018378:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018379:	jrcxz  0x140018311
   14001837b:	jrcxz  0x14001830d
   14001837d:	shl    al,1
   14001837f:	add    al,0xf5
   140018381:	test   eax,0x89780804
   140018386:	imul   eax,DWORD PTR [rcx+rdx*1-0x7f],0xc87554c5
   14001838e:	imul   eax,DWORD PTR [rbp-0x16b2f4f3],0x4354a44
   140018398:	icebp  
   140018399:	cmpxchg ebx,esi
   14001839c:	mov    ebp,0x2b3e5dc
   1400183a1:	jp     0x1400183a6
   1400183a3:	ror    bl,1
   1400183a5:	sub    esp,ebp
   1400183a7:	(bad)  
   1400183a8:	and    eax,0x7e6fa3bf
   1400183ad:	out    0x7b,al
   1400183af:	gs imul esi,ebp,0x221ca507
   1400183b6:	(bad)  
   1400183b7:	jmp    0x12d59a57a
   1400183bc:	mov    edi,0x1e87f0a8
   1400183c1:	rcl    BYTE PTR [rbx],0xb8
   1400183c4:	jle    0x1400183b9
   1400183c6:	es ret 
   1400183c8:	repz iret 
   1400183ca:	xor    edi,DWORD PTR [rsp+rdi*2+0x4b5dea0e]
   1400183d1:	adc    ebp,DWORD PTR [rsp+rsi*8]
   1400183d4:	push   rdi
   1400183d5:	(bad)
   1400183d8:	mov    edi,0x1a27f18c
   1400183dd:	xchg   ebp,eax
   1400183de:	pop    rsi
   1400183df:	pushf  
   1400183e0:	out    0x39,al
   1400183e2:	add    dh,bl
   1400183e4:	sbb    DWORD PTR [rcx-0x39],esi
   1400183e7:	addr32 call 0xcaf23a2c
   1400183ed:	rol    DWORD PTR [rax-0x1392a4ac],1
   1400183f3:	xor    al,0x11
   1400183f5:	(bad)  
   1400183f6:	mov    edi,0x14b67cc5
   1400183fb:	xchg   esi,eax
   1400183fc:	ss pop rax
   1400183fe:	or     al,0xe3
   140018400:	retf   0x17d8
   140018403:	push   rax
   140018404:	cwde   
   140018405:	movabs eax,ds:0xa536884593829349
   14001840e:	popf   
   14001840f:	adc    eax,0xd8f848b0
   140018414:	(bad)
   140018418:	mov    eax,0xde80a38b
   14001841d:	add    ah,dh
   14001841f:	repnz lea esp,[rcx+rax*1]
   140018423:	jg     0x14001840a
   140018425:	(bad)  
   140018426:	sbb    ebx,esi
   140018428:	lock rex.RX pop rbp
   14001842b:	fprem  
   14001842d:	sbb    DWORD PTR [r10+rdi*1],r13d
   140018431:	out    0xbc,eax
   140018433:	xchg   ebp,eax
   140018434:	in     eax,dx
   140018435:	add    dl,dl
   140018437:	int3   
   140018438:	test   al,0x76
   14001843a:	scas   eax,DWORD PTR es:[rdi]
   14001843b:	and    ch,BYTE PTR [rbx]
   14001843d:	fwait
   14001843e:	or     al,0x17
   140018440:	xchg   esi,eax
   140018441:	cwde   
   140018442:	xor    al,0xca
   140018444:	(bad)  
   140018445:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018446:	mov    bl,0xac
   140018448:	pushf  
   140018449:	(bad)  
   14001844a:	mov    DWORD PTR [rdi+0xcc2197e],edi
   140018450:	(bad)
   140018454:	add    DWORD PTR [rdi],ebp
   140018456:	sbb    al,bl
   140018458:	jg     0x140018431
   14001845a:	jp     0x14001843c
   14001845c:	xor    al,0xfe
   14001845e:	cmp    ebp,DWORD PTR [rcx]
   140018460:	pop    rsi
   140018461:	(bad)  
   140018462:	add    eax,0x81512ef0
   140018467:	jrcxz  0x140018478
   140018469:	shl    DWORD PTR [rcx],0x8d
   14001846c:	(bad)  
   14001846d:	and    al,0xdf
   14001846f:	rex.X idiv DWORD PTR [rcx]
   140018472:	adc    BYTE PTR [rax],dl
   140018474:	(bad)  
   140018476:	nop
   140018477:	in     eax,0x14
   140018479:	loop   0x1400184d6
   14001847b:	or     al,0x40
   14001847d:	mov    WORD PTR [rax],ss
   14001847f:	and    al,0x45
   140018481:	fcom   QWORD PTR [rsi-0x5bfae98d]
   140018487:	cmp    ecx,esp
   140018489:	(bad)  
   14001848a:	jmp    0x188531d50
   14001848f:	fwait
   140018490:	stos   DWORD PTR es:[rdi],eax
   140018491:	test   BYTE PTR [rbx],dl
   140018493:	iret   
   140018494:	retf   0xf95
   140018497:	jae    0x1400184b0
   140018499:	add    DWORD PTR [rcx-0xaf62289],0xfffffff2
   1400184a0:	(bad)  
   1400184a1:	xchg   esp,eax
   1400184a2:	add    ebp,DWORD PTR [rbx-0x68697306]
   1400184a8:	(bad)  
   1400184a9:	stos   DWORD PTR es:[rdi],eax
   1400184aa:	int    0xc3
   1400184ac:	jg     0x140018501
   1400184ae:	rex.RXB stos DWORD PTR es:[rdi],eax
   1400184b0:	rex.RXB (bad) 
   1400184b2:	(bad)  
   1400184b3:	gs mov ebp,0x40434514
   1400184b9:	addr32 jnp 0x140018510
   1400184bc:	cmc    
   1400184bd:	adc    al,0x39
   1400184bf:	jl     0x1400184c3
   1400184c1:	out    dx,eax
   1400184c2:	sbb    eax,0x94fb7bbb
   1400184c7:	out    0xbf,eax
   1400184c9:	(bad)  
   1400184ca:	ret    0x97a5
   1400184cd:	jno    0x1400184a2
   1400184cf:	fwait
   1400184d0:	and    al,0x82
   1400184d2:	mov    ss,WORD PTR [rdi-0x332c33bc]
   1400184d8:	jmp    0x161fc78a6
   1400184dd:	(bad)  
   1400184de:	jmp    0x19f096a27
   1400184e3:	pop    rax
   1400184e4:	jg     0x1400184e6
   1400184e6:	mov    ah,0xda
   1400184e8:	cwde   
   1400184e9:	retf   0xd280
   1400184ec:	cmc    
   1400184ed:	(bad)  
   1400184ee:	je     0x14001848a
   1400184f0:	and    esi,0xffffff89
   1400184f3:	std    
   1400184f4:	xchg   edx,eax
   1400184f5:	(bad)  
   1400184f6:	and    BYTE PTR [rcx-0x7afbba53],ch
   1400184fc:	sub    eax,0x886d1e21
   140018501:	mov    dh,0xfc
   140018503:	(bad)  
   140018504:	pop    rbx
   140018505:	mov    BYTE PTR [rax-0x681629e4],ah
   14001850b:	call   0x10bbb905e
   140018510:	push   rdx
   140018511:	sbb    esi,0xcad2f400
   140018517:	sub    eax,0x37f5fef2
   14001851c:	cmp    al,0xf2
   14001851e:	out    0x74,eax
   140018520:	jno    0x14001851f
   140018522:	add    ebp,DWORD PTR [rsi+0x4108801c]
   140018528:	add    al,0xd1
   14001852a:	sub    BYTE PTR [rdx+0x43],0xb1
   14001852e:	ja     0x140018533
   140018530:	sbb    DWORD PTR [rip+0x423b5c32],ebp        # 0x1823ce168
   140018536:	or     dl,cl
   140018538:	(bad)  
   14001853a:	sub    eax,0x40bc2f56
   14001853f:	jno    0x14001853e
   140018541:	push   rdx
   140018542:	out    0xfd,al
   140018544:	mov    ebp,DWORD PTR [rdx+0x56]
   140018547:	cld    
   140018548:	rex.X
   140018549:	rex.X outs dx,BYTE PTR ds:[rsi]
   14001854b:	std    
   14001854c:	adc    eax,0x6338e323
   140018551:	loopne 0x1400184f8
   140018553:	push   0x246970a0
   140018558:	js     0x1400184f6
   14001855a:	out    0x97,eax
   14001855c:	(bad)  
   14001855d:	scas   al,BYTE PTR es:[rdi]
   14001855e:	add    DWORD PTR [rcx+0x14],ebp
   140018561:	or     DWORD PTR [rcx-0xd525ff2],ecx
   140018567:	(bad)  
   140018568:	fisttp QWORD PTR [rdi+0x55]
   14001856b:	add    DWORD PTR [rsp+rax*1],0x340654ba
   140018572:	rex.WX mov cl,0xfd
   140018575:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018576:	adc    DWORD PTR [rcx-0x37],esp
   140018579:	clc    
   14001857a:	rex.R xor al,0x22
   14001857d:	scas   al,BYTE PTR es:[rdi]
   14001857e:	xor    eax,0x6132a9a0
   140018583:	(bad)  
   140018584:	(bad)  
   140018585:	xchg   ecx,eax
   140018586:	test   BYTE PTR [rdi-0x1],dh
   140018589:	add    bh,BYTE PTR [rdi+0x69770cf3]
   14001858f:	sbb    dl,al
   140018591:	sbb    eax,DWORD PTR [rax+0x22dca25e]
   140018597:	out    dx,eax
   140018598:	mov    edi,0x3e27c9ff
   14001859d:	xlat   BYTE PTR ds:[rbx]
   14001859e:	sub    al,0xad
   1400185a0:	inc    DWORD PTR [rbx+rax*4]
   1400185a3:	add    eax,0xd547c44
   1400185a8:	test   DWORD PTR [rax-0x1ae615ff],esp
   1400185ae:	(bad)  
   1400185af:	cs mov dl,0x79
   1400185b2:	(bad)  
   1400185b3:	(bad)
   1400185b6:	out    dx,al
   1400185b7:	mov    bh,BYTE PTR fs:[rbx-0x745a7590]
   1400185be:	addr32 mov edi,?
   1400185c1:	(bad)  
   1400185c2:	shl    BYTE PTR [rsi],0xf0
   1400185c5:	in     al,0xce
   1400185c7:	mov    edi,0xac5bfe84
   1400185cc:	popf   
   1400185cd:	jbe    0x1400185f5
   1400185cf:	sbb    eax,0xffa1204c
   1400185d4:	jle    0x140018624
   1400185d6:	(bad)
   1400185d9:	in     eax,dx
   1400185da:	iret   
   1400185db:	xor    eax,DWORD PTR [rcx]
   1400185dd:	xor    eax,0x144523bf
   1400185e2:	(bad)  
   1400185e3:	jnp    0x1400185ec
   1400185e5:	and    dl,BYTE PTR [rsi]
   1400185e7:	ror    BYTE PTR [rcx-0xa],1
   1400185ea:	pop    rbp
   1400185eb:	lods   al,BYTE PTR ds:[rsi]
   1400185ec:	(bad)  
   1400185ed:	and    al,0xce
   1400185ef:	add    DWORD PTR [rcx-0x7f969ef6],ebp
   1400185f5:	imul   eax,DWORD PTR [rcx],0x40
   1400185f8:	or     ebp,DWORD PTR [rdx]
   1400185fa:	adc    al,0x27
   1400185fc:	mov    WORD PTR [rsi],ds
   1400185fe:	xlat   BYTE PTR ds:[rbx]
   1400185ff:	sbb    ebx,DWORD PTR [rdi-0x20]
   140018602:	cs add eax,0xd0037b03
   140018608:	rex.WXB push r15
   14001860a:	jb     0x1400185ea
   14001860c:	jg     0x140018602
   14001860e:	movabs eax,ds:0x78e86ffd79649e07
   140018617:	mov    ecx,0xd8185f14
   14001861c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001861d:	cmp    BYTE PTR [rdx],al
   14001861f:	test   BYTE PTR [rsi],al
   140018621:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018622:	jnp    0x14001865c
   140018624:	out    dx,eax
   140018625:	sbb    BYTE PTR [rdx+rdi*4],bl
   140018628:	(bad)  
   140018629:	push   rcx
   14001862a:	in     eax,0xc6
   14001862c:	mov    ch,0x6d
   14001862e:	xchg   esi,eax
   14001862f:	(bad)  
   140018630:	jg     0x14001866f
   140018632:	mov    ?,ebx
   140018634:	scas   al,BYTE PTR es:[rdi]
   140018635:	test   esp,0x81052a8f
   14001863b:	rex.X add al,0x2f
   14001863e:	and    DWORD PTR [rdi-0x48b2ce01],eax
   140018644:	(bad)  
   140018645:	movabs al,ds:0x419aeaa5d700554
   14001864e:	rex.WRXB int3 
   140018650:	dec    DWORD PTR [rbp-0x1b]
   140018653:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018654:	sar    DWORD PTR [rdx],0xf7
   140018657:	shl    BYTE PTR [rdi+rdi*4+0x16],cl
   14001865b:	mov    ch,0xcf
   14001865d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001865e:	rex fcmove st,st(6)
   140018661:	sbb    BYTE PTR [rax],0x9
   140018664:	push   0x19105c87
   140018669:	or     DWORD PTR [rcx+0x80ed470],0x3e6fb649
   140018673:	and    eax,0x2d09ab48
   140018678:	mov    ebx,0x71cfb1f0
   14001867d:	outs   dx,BYTE PTR ds:[rsi]
   14001867e:	lea    esi,[rsi+0x18d77a24]
   140018684:	sbb    esi,0x3072f400
   14001868a:	out    dx,eax
   14001868b:	(bad)  
   14001868c:	push   rdi
   14001868d:	(bad)  
   14001868e:	push   rdi
   14001868f:	xlat   BYTE PTR ds:[rbx]
   140018690:	mov    dh,ch
   140018692:	int    0x5f
   140018694:	push   0x16
   140018696:	xlat   BYTE PTR ds:[rbx]
   140018697:	(bad)  
   140018698:	mov    edx,0xf6938062
   14001869d:	ss push rcx
   14001869f:	or     eax,0x727e0210
   1400186a4:	xchg   ebx,eax
   1400186a5:	(bad)  
   1400186a6:	imul   ecx,DWORD PTR [rbp-0x26e873f],0xf1734d59
   1400186b0:	or     al,0x4b
   1400186b2:	(bad)  
   1400186b3:	pop    rdi
   1400186b4:	rex.R outs dx,BYTE PTR ds:[rsi]
   1400186b6:	pop    rsi
   1400186b7:	rex.RB
   1400186b8:	rex.XB or eax,0x105aaf44
   1400186be:	repz jg 0x140018660
   1400186c1:	xchg   esi,eax
   1400186c2:	std    
   1400186c3:	(bad)  
   1400186c4:	and    eax,0x6b9ed4b8
   1400186c9:	(bad)  
   1400186ca:	pop    rax
   1400186cb:	clc    
   1400186cc:	xchg   ecx,eax
   1400186cd:	call   0x1662ab593
   1400186d2:	popf   
   1400186d3:	jge    0x14001871c
   1400186d5:	scas   al,BYTE PTR es:[edi]
   1400186d7:	out    0x9d,al
   1400186d9:	(bad)
   1400186dc:	push   rsi
   1400186dd:	jmp    0x1400186ba
   1400186df:	add    eax,0xc46cec43
   1400186e4:	pop    rcx
   1400186e5:	sub    ah,al
   1400186e7:	or     al,0xf4
   1400186e9:	sub    ebp,DWORD PTR [rsp+rcx*8+0x6a0729d8]
   1400186f0:	xor    dh,BYTE PTR [rax]
   1400186f2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400186f3:	std    
   1400186f4:	fcmovb st,st(1)
   1400186f6:	sbb    DWORD PTR [rbp+rdx*4+0xa],eax
   1400186fa:	jge    0x1400186de
   1400186fc:	movsxd edi,DWORD PTR [rdx-0x3d11b10b]
   140018702:	xor    al,0xa0
   140018704:	(bad)  
   140018705:	add    bh,dh
   140018707:	mov    edx,0x9dfbc81c
   14001870c:	jae    0x1400186e3
   14001870e:	repnz icebp 
   140018710:	adc    edi,DWORD PTR [rdi-0x5b]
   140018713:	pop    rsi
   140018714:	fidivr WORD PTR [rdi+rsi*4+0x54]
   140018718:	movsxd eax,DWORD PTR [rsp+rbx*4+0x71]
   14001871c:	outs   dx,DWORD PTR ds:[rsi]
   14001871d:	rex.WR
   14001871e:	repz and BYTE PTR [rbx+r10*2],sil
   140018723:	mov    bh,BYTE PTR [rdx-0x36]
   140018726:	jo     0x14001870b
   140018728:	sbb    dh,cl
   14001872a:	jns    0x14001879a
   14001872c:	fdivr  QWORD PTR [rsi+rcx*8+0x181785e2]
   140018733:	pop    rsi
   140018734:	mov    ecx,0x125dd300
   140018739:	push   rbp
   14001873a:	xlat   BYTE PTR ds:[rbx]
   14001873b:	or     ebx,DWORD PTR [rip+0xffffffffd739afef]        # 0x1173b3730
   140018741:	(bad)  
   140018742:	in     eax,dx
   140018743:	mov    bh,0x96
   140018745:	call   rbx
   140018747:	jmp    0x13a19f751
   14001874c:	(bad)  
   14001874d:	jg     0x1400186fb
   14001874f:	rex outs dx,DWORD PTR ds:[rsi]
   140018751:	sbb    al,0x0
   140018753:	rex.B push 0x45
   140018756:	rex.X push 0x9c63f09
   14001875c:	mov    al,0x5f
   14001875e:	push   rcx
   14001875f:	adc    dl,BYTE PTR [rbp-0x28]
   140018762:	rex.RB xchg r8d,eax
   140018764:	(bad)  
   140018766:	test   al,0x48
   140018768:	in     al,dx
   140018769:	and    eax,0x6675f530
   14001876e:	or     al,0x52
   140018770:	ja     0x140018712
   140018772:	rex.WXB
   140018773:	rex.WR
   140018774:	rex.XB pop r10
   140018776:	and    eax,DWORD PTR [rax+0xe]
   140018779:	cmp    al,0x4
   14001877b:	rex.B in eax,0x7e
   14001877e:	cdq    
   14001877f:	jl     0x140018790
   140018781:	ja     0x140018764
   140018783:	mov    ah,0xa0
   140018785:	mov    ebx,0xf97a44e6
   14001878a:	jge    0x140018754
   14001878c:	and    DWORD PTR [rsi],0xfe3aa01f
   140018792:	clc    
   140018793:	movabs ds:0x2e1887f1bcb66c7f,eax
   14001879c:	and    esi,ecx
   14001879e:	rex.RXB in eax,0x81
   1400187a1:	sbb    al,0xfa
   1400187a3:	mov    eax,DWORD PTR [rbp+0x643555ff]
   1400187a9:	mov    esp,0x9b4c9ba
   1400187ae:	rex.WR
   1400187af:	cs mov esi,0x1785cacc
   1400187b5:	lock (bad) 
   1400187b7:	scas   al,BYTE PTR es:[rdi]
   1400187b8:	movabs al,ds:0x4cffb5cd7efc6a61
   1400187c1:	std    
   1400187c2:	rex.WRB (bad) 
   1400187c4:	add    BYTE PTR [rdx+rdi*8+0xc739a9b],cl
   1400187cb:	hlt    
   1400187cc:	jae    0x14001883b
   1400187ce:	cmp    dl,BYTE PTR [rax-0x54a37e90]
   1400187d4:	add    esi,DWORD PTR [rsi+rax*1+0x17e22e9a]
   1400187db:	ret    
   1400187dc:	jbe    0x14001882b
   1400187de:	cwde   
   1400187df:	movabs ds:0x1abc417a0f75abf8,al
   1400187e9:	movabs eax,ds:0x8036720a44c000c8
   1400187f2:	and    al,0xf
   1400187f4:	and    al,0xc1
   1400187f6:	mov    BYTE PTR [rbp-0x692fce65],0xf
   1400187fd:	and    BYTE PTR [rdx],ah
   1400187ff:	sub    al,0x48
   140018801:	clc    
   140018802:	ror    BYTE PTR [rdi],1
   140018804:	leave  
   140018805:	mov    eax,DWORD PTR [rdi-0x48]
   140018808:	retf   
   140018809:	movabs ds:0xd00b72abdc00de80,al
   140018812:	out    dx,eax
   140018813:	movabs eax,ds:0x2ff3657acefc1f47
   14001881c:	call   0x18be88d99
   140018821:	sbb    eax,ecx
   140018823:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018824:	mov    BYTE PTR [rsi],al
   140018826:	(bad)  
   140018827:	sub    ch,BYTE PTR [rax-0x60]
   14001882a:	(bad)  
   14001882b:	mov    cl,0xbf
   14001882e:	retf   
   14001882f:	(bad)  
   140018830:	jns    0x14001884f
   140018832:	(bad)  
   140018833:	sbb    BYTE PTR [rax-0x1d],dh
   140018836:	out    0xe,al
   140018838:	movabs ds:0x7e07173e5f19270b,eax
   140018841:	adc    al,BYTE PTR [rbx]
   140018843:	add    eax,0x17f81a87
   140018848:	ret    
   140018849:	push   QWORD PTR [rax+rbp*8+0x69fd0e47]
   140018850:	cmp    eax,0x7808aa77
   140018855:	xlat   BYTE PTR ds:[rbx]
   140018856:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018857:	add    BYTE PTR [rsi],bh
   140018859:	(bad)  
   14001885a:	fstp   QWORD PTR [rdx-0x26]
   14001885d:	scas   eax,DWORD PTR es:[rdi]
   14001885e:	test   al,0x20
   140018860:	xor    ebx,DWORD PTR [r9]
   140018863:	sub    dh,ch
   140018865:	in     al,dx
   140018866:	or     BYTE PTR [rsi],0x6a
   140018869:	and    BYTE PTR [rdi-0x2af312fb],dl
   14001886f:	out    0x1,al
   140018871:	(bad)  
   140018872:	or     eax,0xf39af383
   140018877:	sti    
   140018878:	rex.W (bad) 
   14001887a:	in     al,dx
   14001887b:	xor    BYTE PTR [rax],al
   14001887d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001887e:	push   rbp
   14001887f:	mov    ch,BYTE PTR [rax+0x13]
   140018882:	sub    al,0x9a
   140018884:	rex.B (bad) 
   140018886:	jl     0x1400188d8
   140018888:	(bad)  
   140018889:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001888a:	(bad)  
   14001888b:	movabs eax,ds:0x97a24e2bb80a26bb
   140018894:	fbld   TBYTE PTR [rbx+0x2b2b9eb4]
   14001889a:	push   rcx
   14001889c:	(bad)  
   14001889d:	mov    ?,WORD PTR [rbp-0x726a653]
   1400188a3:	fcmovne st,st(5)
   1400188a5:	loop   0x140018921
   1400188a7:	jmp    0x14e55ea36
   1400188ac:	xrelease mov BYTE PTR [rdx+0x84feeb1],ch
   1400188b3:	call   0xc6925324
   1400188b8:	rol    esi,0x11
   1400188bb:	(bad)  
   1400188bc:	es mov al,0x7b
   1400188bf:	stc    
   1400188c0:	add    ch,BYTE PTR [rbx]
   1400188c2:	(bad)  
   1400188c3:	pop    rdi
   1400188c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400188c5:	mov    eax,0xd4c2097e
   1400188ca:	rex mov ebx,0xda17a888
   1400188d0:	add    edi,edi
   1400188d2:	cmp    ah,ch
   1400188d4:	mov    edi,0xc1d7fddc
   1400188d9:	add    edx,ebx
   1400188db:	xor    al,0xa0
   1400188dd:	pop    rbp
   1400188de:	mov    ebx,0x1028b2f
   1400188e3:	and    al,0x58
   1400188e5:	sub    DWORD PTR [rax-0x25],edx
   1400188e8:	imul   eax,eax,0x9ec78f29
   1400188ee:	xchg   ebx,eax
   1400188ef:	rex.WRX adc BYTE PTR [rax+0x24e280ca],0xf2
   1400188f7:	xchg   DWORD PTR [rax+rcx*4],ebx
   1400188fa:	jae    0x140018884
   1400188fc:	ja     0x140018934
   1400188fe:	jns    0x140018898
   140018900:	fcomp  QWORD PTR [rsi]
   140018902:	pushf  
   140018903:	pop    rbp
   140018905:	sub    dh,al
   140018907:	sub    ah,BYTE PTR [rsi+0x74]
   14001890a:	sub    al,0x9a
   14001890c:	adc    DWORD PTR [rax+0x5d],esp
   14001890f:	data16 lahf 
   140018911:	mov    al,0x99
   140018913:	xor    DWORD PTR [rdi+0xd],0x37a027
   14001891a:	imul   DWORD PTR [rsi+0x1e562f24]
   140018920:	ds mov edx,0xdb5bbf79
   140018926:	cld    
   140018927:	cmp    edx,DWORD PTR [rbx-0x5164bc5b]
   14001892d:	sbb    al,0x76
   14001892f:	pop    rax
   140018930:	cmp    BYTE PTR [rcx-0x5ce5581c],dh
   140018936:	sbb    BYTE PTR [rdx+0x1b],0xfc
   14001893a:	in     al,0x26
   14001893c:	add    DWORD PTR [rbp+0x4b0b8615],0xffffffdc
   140018943:	fcomp  st(3)
   140018945:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018946:	mov    eax,0x178b02f0
   14001894b:	iret   
   14001894c:	and    BYTE PTR [rbx-0x4f],bh
   14001894f:	jmp    0x1400189a0
   140018951:	int    0x68
   140018953:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018954:	(bad)  
   140018955:	pop    rcx
   140018956:	cmp    edi,ecx
   140018958:	xchg   DWORD PTR [rdi+rdx*2-0x7113d6f5],ebx
   14001895f:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018961:	cs mov ebp,0xa9700954
   140018967:	fs xchg edi,eax
   140018969:	fstp   TBYTE PTR [rsi-0x13]
   14001896c:	push   rdi
   14001896d:	add    BYTE PTR [rsi+0x1],ah
   140018970:	(bad)  
   140018971:	out    0xdb,al
   140018973:	and    ebx,0xffa724db
   140018979:	fstp   QWORD PTR [rcx]
   14001897b:	and    DWORD PTR [rax+0x4f],esp
   14001897e:	rex.WX add al,0x2
   140018981:	(bad)  
   140018982:	adc    DWORD PTR [rdx+rbx*8-0x76a9017a],0x9a871d48
   14001898d:	mov    bh,0xd4
   14001898f:	out    dx,al
   140018990:	cmp    BYTE PTR [rbp-0x295e3e1],cl
   140018996:	(bad)  
   140018997:	(bad)  
   140018998:	sub    ah,BYTE PTR [rdi+0x4a2ee11f]
   14001899e:	add    edi,DWORD PTR [rdx+0x3]
   1400189a1:	jo     0x140018952
   1400189a3:	leave  
   1400189a4:	add    esp,eax
   1400189a6:	mov    edi,0x78d1caac
   1400189ab:	jae    0x1400189a0
   1400189ad:	outs   dx,DWORD PTR ds:[rsi]
   1400189ae:	rex.WRX xchg rdi,rax
   1400189b0:	(bad)  
   1400189b2:	jmp    0xcae1953d
   1400189b7:	in     al,dx
   1400189b8:	pop    rbp
   1400189b9:	movabs ds:0x434206877c9887f2,eax
   1400189c2:	push   rbp
   1400189c3:	sbb    QWORD PTR [r12+r11*1+0x21],r13
   1400189c8:	mov    BYTE PTR [rbx-0x19],ah
   1400189cb:	rol    BYTE PTR [rip+0xffffffff9d7fced6],cl        # 0xdd8158a7
   1400189d1:	(bad)  
   1400189d2:	(bad)  
   1400189d3:	(bad)  
   1400189d4:	ror    BYTE PTR [rsi+riz*8-0x16],cl
   1400189d8:	(bad)  
   1400189d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400189da:	rex.W pushf 
   1400189dc:	stc    
   1400189dd:	lahf   
   1400189de:	out    0xfe,eax
   1400189e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400189e1:	mov    dl,0x5a
   1400189e3:	rex.RXB (bad) 
   1400189e5:	mov    ebx,0xfd2a4151
   1400189ea:	fsincos 
   1400189ec:	mov    esp,0xd7ba3693
   1400189f1:	fcom   DWORD PTR [rcx+0x2c]
   1400189f4:	add    DWORD PTR [rsp+rax*8],esp
   1400189f7:	xor    al,0x20
   1400189f9:	(bad)  
   1400189fa:	jae    0x140018a2a
   1400189fc:	sbb    al,BYTE PTR [rbx]
   1400189fe:	lea    esp,[rax+riz*4+0x7692b8a4]
   140018a05:	xchg   edx,eax
   140018a06:	sub    eax,DWORD PTR [rcx]
   140018a08:	leave  
   140018a09:	(bad)
   140018a0c:	(bad)  
   140018a0d:	movabs ds:0xc8931171080f2c6,eax
   140018a16:	sub    BYTE PTR [rdx+0x5a],ch
   140018a19:	xor    r13d,DWORD PTR ds:[rax+0x69]
   140018a1e:	lods   eax,DWORD PTR ds:[rsi]
   140018a1f:	ret    0xc7e3
   140018a22:	fyl2xp1 
   140018a24:	and    al,0x77
   140018a26:	sar    DWORD PTR [rax+rax*8+0x4bdc00de],1
   140018a2d:	jb     0x140018a3a
   140018a2f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018a30:	(bad)  
   140018a32:	outs   dx,DWORD PTR ds:[rsi]
   140018a33:	js     0x140018a25
   140018a35:	not    DWORD PTR [edi-0xe7982f1]
   140018a3c:	or     ch,dl
   140018a3e:	push   rdx
   140018a3f:	test   DWORD PTR [rsp+rsi*8-0x4],0x343e034e
   140018a47:	mov    eax,0xdc5010d0
   140018a4c:	je     0x1400189dd
   140018a4e:	push   rcx
   140018a4f:	pop    rcx
   140018a50:	xor    BYTE PTR [rax-0x27],bl
   140018a53:	loopne 0x140018a3b
   140018a55:	fs add bl,bl
   140018a58:	(bad)  
   140018a59:	mov    dl,0xbc
   140018a5b:	jge    0x140018a63
   140018a5d:	mov    bh,0x7b
   140018a5f:	lea    esp,[rax+0x6e154c75]
   140018a65:	push   rcx
   140018a66:	cli    
   140018a67:	mov    esp,ebp
   140018a69:	mov    edx,0xfbd660a4
   140018a6e:	rex.WRXB and r12b,r8b
   140018a71:	je     0x140018a5a
   140018a73:	add    BYTE PTR [rbx+rbp*8-0x164bdfe],dh
   140018a7a:	addr32 cmp eax,0xaa4d020b
   140018a80:	add    al,0xa4
   140018a82:	jbe    0x140018ae4
   140018a84:	add    ecx,DWORD PTR [rax]
   140018a86:	xchg   ebp,eax
   140018a87:	mov    BYTE PTR [rdi],cl
   140018a89:	pop    rax
   140018a8a:	retf   0xfe42
   140018a8d:	cwde   
   140018a8e:	in     al,0xc5
   140018a90:	test   ch,al
   140018a92:	rex.WB
   140018a93:	rex.WRX or rax,r14
   140018a96:	or     DWORD PTR [rdi+0x48],ebp
   140018a99:	mov    ecx,0x63e05abf
   140018a9e:	mov    eax,0xd7127c47
   140018aa3:	imul   edi,DWORD PTR [rdx+rdx*1],0x7d985611
   140018aaa:	out    0x1,al
   140018aac:	test   BYTE PTR [rsi-0x5fb9da24],0x37
   140018ab3:	add    bh,dh
   140018ab5:	mov    bh,BYTE PTR [rdx+rdx*1+0x7c1f2ff1]
   140018abc:	jrcxz  0x140018a81
   140018abe:	(bad)  
   140018abf:	xor    BYTE PTR [rbx+0x39],bl
   140018ac2:	hlt    
   140018ac3:	xchg   ebx,eax
   140018ac4:	mov    edx,0xe8f88ab0
   140018ac9:	stc    
   140018aca:	push   rbp
   140018acb:	xchg   ebp,eax
   140018acc:	es xor al,0x88
   140018acf:	(bad)  
   140018ad0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018ad1:	imul   edx,eax,0x8109a1a6
   140018ad7:	adc    BYTE PTR [rdx],al
   140018ad9:	(bad)  
   140018ada:	dec    BYTE PTR [rsi]
   140018adc:	ret    
   140018add:	mov    ch,0x43
   140018adf:	cmp    BYTE PTR [rdi+0x72],bl
   140018ae2:	jrcxz  0x140018aae
   140018ae4:	and    eax,0xa49c2e56
   140018ae9:	mov    edx,0xfb660172
   140018aee:	and    ch,0xd2
   140018af1:	or     al,BYTE PTR [rip+0xffffffffd37fa162]        # 0x113812c59
   140018af7:	xchg   esi,eax
   140018af8:	stc    
   140018af9:	ins    BYTE PTR es:[rdi],dx
   140018afa:	fldcw  WORD PTR [rdi-0x59]
   140018afd:	ins    DWORD PTR es:[rdi],dx
   140018afe:	clc    
   140018aff:	(bad)  
   140018b00:	cmp    esi,edi
   140018b02:	movabs ds:0xe5da42a5cce567d2,al
   140018b0b:	(bad)  
   140018b0c:	push   rcx
   140018b0d:	push   rbx
   140018b0e:	(bad)  
   140018b0f:	sbb    BYTE PTR [rip+0xffffffff83440750],al        # 0xc3459265
   140018b15:	jmp    0x122ebabc4
   140018b1a:	jo     0x140018b2b
   140018b1c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018b1d:	adc    DWORD PTR [rbx],ebp
   140018b1f:	push   rax
   140018b20:	repnz rcl BYTE PTR [rax+0x658801c8],1
   140018b27:	mov    r13b,0x4e
   140018b2a:	(bad)  
   140018b2b:	jno    0x140018b0d
   140018b2d:	mov    al,BYTE PTR [rdx+rsi*8-0x353c4b39]
   140018b34:	jge    0x140018b63
   140018b36:	rex.WRXB add QWORD PTR [r11+0x27],r9
   140018b3a:	push   0x1500cb69
   140018b3f:	loope  0x140018aea
   140018b41:	lahf   
   140018b42:	in     al,0x85
   140018b44:	mov    bh,0xd1
   140018b46:	pop    rbp
   140018b47:	cmp    esp,eax
   140018b49:	(bad)  
   140018b4a:	rex.WRX add r15,QWORD PTR [rdx+0x3]
   140018b4e:	jo     0x140018b7f
   140018b50:	enter  0xca2d,0x7d
   140018b54:	(bad)  
   140018b56:	jl     0x140018b37
   140018b58:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018b59:	jmp    0x140018af0
   140018b5b:	int    0xbf
   140018b5d:	pop    rdx
   140018b5e:	(bad)  
   140018b5f:	lods   al,BYTE PTR ds:[rsi]
   140018b60:	jns    0x140018bb9
   140018b62:	or     al,0x50
   140018b64:	jno    0x140018b9c
   140018b66:	adc    al,0xc3
   140018b68:	cmp    al,0x7e
   140018b6a:	push   rbx
   140018b6b:	xor    ecx,DWORD PTR [rbx]
   140018b6d:	xor    eax,0xd406960d
   140018b72:	adc    eax,esi
   140018b74:	add    ah,ch
   140018b76:	ficom  DWORD PTR [rcx]
   140018b78:	mul    BYTE PTR [rsi+0x33]
   140018b7b:	(bad)  
   140018b7c:	mov    ebp,DWORD PTR [rdi]
   140018b7e:	mov    dl,0xb6
   140018b80:	jne    0x140018b9c
   140018b82:	mov    edi,0x66108573
   140018b87:	sbb    DWORD PTR [rcx],esi
   140018b89:	ja     0x140018b13
   140018b8b:	sbb    DWORD PTR [rax+0x2e812310],eax
   140018b91:	out    0x3e,eax
   140018b93:	push   rdi
   140018b94:	add    al,cl
   140018b96:	or     eax,0x814ace40
   140018b9b:	fidiv  WORD PTR [rdi-0x2ad14353]
   140018ba1:	repz add dl,BYTE PTR [rcx+0x1512a3e8]
   140018ba8:	cmp    al,BYTE PTR [rax]
   140018baa:	test   eax,0x21141814
   140018baf:	add    BYTE PTR [rcx],ch
   140018bb1:	push   rbx
   140018bb2:	(bad)  
   140018bb3:	pop    rax
   140018bb4:	add    eax,0x7021
   140018bb9:	enter  0x8d51,0x66
   140018bbd:	rex.WX mov al,0xe4
   140018bc0:	push   rcx
   140018bc1:	movsxd edx,DWORD PTR [rcx-0x7]
   140018bc4:	xor    esp,DWORD PTR [rip+0x16c1b490]        # 0x156c3405a
   140018bca:	(bad)  
   140018bcb:	mov    bl,bh
   140018bcd:	add    ah,BYTE PTR [rdx+0x34]
   140018bd0:	and    BYTE PTR [rdx],dh
   140018bd2:	cmp    al,cl
   140018bd4:	fidiv  WORD PTR [rbx-0x24]
   140018bd7:	and    eax,0x37b4343
   140018bdc:	jo     0x140018b95
   140018bde:	retf   
   140018bdf:	sub    eax,0xf23ff3c
   140018be4:	(bad)  
   140018be5:	stc    
   140018be6:	push   0xffffffffabfc3b58
   140018beb:	mov    bl,0x85
   140018bed:	cmc    
   140018bee:	add    eax,0x63510d57
   140018bf3:	cli    
   140018bf4:	mov    DWORD PTR [rsi],eax
   140018bf6:	mov    ah,0x89
   140018bf8:	mov    ch,0x7e
   140018bfa:	(bad)  
   140018bfb:	call   0xff89e965
   140018c00:	stos   DWORD PTR es:[rdi],eax
   140018c01:	mov    ebp,0x1b2b061d
   140018c06:	adc    al,0xc3
   140018c08:	adc    edi,edx
   140018c0a:	scas   eax,DWORD PTR es:[rdi]
   140018c0b:	pop    rdi
   140018c0c:	(bad)  
   140018c0d:	icebp  
   140018c0e:	loop   0x140018c39
   140018c10:	(bad)  
   140018c11:	xchg   edi,eax
   140018c12:	iret   
   140018c13:	rex.RB out dx,eax
   140018c15:	(bad)  
   140018c16:	push   0xfffffffffffffff9
   140018c18:	jb     0x140018c34
   140018c1a:	stc    
   140018c1b:	add    eax,0xba53793e
   140018c20:	rex.W jp 0x140018bda
   140018c23:	cld    
   140018c24:	xchg   edi,eax
   140018c25:	adc    BYTE PTR [rcx+rcx*8-0x7c],bh
   140018c29:	and    BYTE PTR [rdi],ch
   140018c2b:	(bad)  
   140018c2c:	mov    BYTE PTR [rbx-0x21bdbf2f],cl
   140018c32:	(bad)  
   140018c33:	sar    dh,1
   140018c35:	(bad)  
   140018c36:	int    0x3f
   140018c38:	and    DWORD PTR [rdx],edx
   140018c3a:	(bad)  
   140018c3b:	pushf  
   140018c3c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018c3d:	push   0xffffffffe4fe7a21
   140018c42:	mov    cl,0x45
   140018c44:	xor    DWORD PTR [rbp+0xebbcfb5],eax
   140018c4a:	clc    
   140018c4b:	mov    bl,BYTE PTR [edi+0x1a5c04fa]
   140018c52:	cmp    ah,dl
   140018c54:	pop    rsi
   140018c55:	fst    DWORD PTR [rip+0xffffffffa6998c98]        # 0xe69b18f3
   140018c5b:	mov    es,ecx
   140018c5d:	xchg   esp,eax
   140018c5e:	sub    ch,BYTE PTR [rax-0x580ad74e]
   140018c64:	(bad)  
   140018c65:	retf   0x12f6
   140018c68:	ja     0x140018c6b
   140018c6a:	xor    eax,0x770037b8
   140018c6f:	mov    bl,0x1c
   140018c71:	push   0x37aa05ed
   140018c76:	sahf   
   140018c77:	cmp    ah,dh
   140018c79:	fldenv [rsi-0x3]
   140018c7c:	call   0x15f307a30
   140018c81:	fidiv  WORD PTR [rax-0x2b]
   140018c84:	or     BYTE PTR [rcx],dl
   140018c86:	(bad)  
   140018c87:	adc    eax,0x535c0427
   140018c8c:	adc    eax,DWORD PTR [rdx+0x43]
   140018c8f:	rex.W test BYTE PTR [rdi],bl
   140018c92:	sti    
   140018c93:	or     DWORD PTR [rbp-0x33],esi
   140018c96:	cmp    BYTE PTR [rcx+rbp*1+0x37],cl
   140018c9a:	mov    ?,WORD PTR [rcx]
   140018c9c:	popf   
   140018c9d:	(bad)  
   140018c9e:	rex.WR mov dil,0x5e
   140018ca1:	(bad)  
   140018ca2:	cmc    
   140018ca3:	ret    0x8a69
   140018ca6:	popf   
   140018ca7:	sub    ebp,DWORD PTR [rax-0x68]
   140018caa:	mov    ch,0xb5
   140018cac:	cld    
   140018cad:	adc    al,0xfe
   140018caf:	movsxd edi,DWORD PTR [rbp-0x1]
   140018cb2:	je     0x140018c7e
   140018cb4:	imul   ecx,ecx,0xfffffff3
   140018cb7:	shl    DWORD PTR [rsi-0x7dec5200],cl
   140018cbd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018cbe:	mov    al,0x3f
   140018cc0:	std    
   140018cc1:	(bad)  
   140018cc2:	iret   
   140018cc3:	gs and al,0xde
   140018cc6:	retf   0x91fb
   140018cc9:	or     eax,DWORD PTR [rax]
   140018ccb:	(bad)  
   140018ccc:	rex.WRB xor al,0x6
   140018ccf:	movabs ds:0x6400386a0806f5a4,al
   140018cd8:	sub    al,0x5f
   140018cda:	and    al,0x56
   140018cdc:	add    BYTE PTR [rdi+riz*8-0x16],ch
   140018ce0:	(bad)  
   140018ce1:	pop    QWORD PTR [rax-0x345f48a8]
   140018ce7:	and    eax,0x951c949
   140018cec:	leave  
   140018ced:	and    BYTE PTR [rdx-0x5a],al
   140018cf0:	adc    al,0x58
   140018cf2:	xchg   esi,eax
   140018cf3:	add    BYTE PTR [rax],0x15
   140018cf6:	int    0x9b
   140018cf8:	mov    esi,0x34a42e4b
   140018cfd:	loopne 0x140018c8d
   140018cff:	scas   al,BYTE PTR es:[rdi]
   140018d00:	(bad)  
   140018d01:	adc    al,0xb7
   140018d03:	sti    
   140018d04:	add    BYTE PTR [rdx+0x79],bh
   140018d07:	or     eax,0xfe7595e4
   140018d0c:	add    ch,BYTE PTR [rax]
   140018d0e:	fcomip st,st(4)
   140018d10:	loopne 0x140018cb3
   140018d12:	(bad)  
   140018d13:	ficomp DWORD PTR [rdi+0x39]
   140018d16:	cld    
   140018d17:	push   rdi
   140018d18:	ja     0x140018cb1
   140018d1a:	jg     0x1b9c3c29c
   140018d20:	outs   dx,DWORD PTR ds:[rsi]
   140018d21:	xor    al,0xdf
   140018d23:	add    BYTE PTR [rsi+rax*4-0x247bb260],0x43
   140018d2b:	rex
   140018d2c:	rex.X
   140018d2d:	rex push rcx
   140018d2f:	data16 or ch,dl
   140018d32:	fs xchg ecx,esp
   140018d35:	js     0x140018cc0
   140018d37:	jb     0x140018daa
   140018d39:	cdq    
   140018d3a:	in     eax,dx
   140018d3b:	sub    edx,DWORD PTR [rdi+0x18]
   140018d3e:	outs   dx,DWORD PTR ds:[rsi]
   140018d3f:	mov    ebp,0x97a5c2c0
   140018d44:	(bad)  
   140018d45:	(bad)  
   140018d46:	lods   eax,DWORD PTR ds:[rsi]
   140018d47:	cmc    
   140018d48:	xlat   BYTE PTR ds:[rbx]
   140018d49:	push   rdx
   140018d4a:	jg     0x140018d2f
   140018d4c:	loopne 0x140018cdd
   140018d4e:	and    BYTE PTR [rbx],0x32
   140018d51:	lock push rdx
   140018d53:	mov    bh,0x5f
   140018d55:	and    bl,al
   140018d57:	mov    ah,0xbd
   140018d59:	add    BYTE PTR [rdx-0x618b7e73],dl
   140018d5f:	(bad)  
   140018d60:	pop    rsp
   140018d61:	cmp    ebx,DWORD PTR [rsp+rax*1]
   140018d64:	jrcxz  0x140018d86
   140018d66:	rex.RX xchg esp,eax
   140018d68:	(bad)  
   140018d69:	(bad)  
   140018d6a:	and    esp,DWORD PTR [rcx+rdx*2+0x1d5c1a8]
   140018d71:	sub    eax,0x15107a63
   140018d76:	(bad)  
   140018d77:	pop    rax
   140018d78:	jl     0x140018d07
   140018d7a:	push   rbp
   140018d7b:	or     BYTE PTR [rdx-0x49dd7cb3],bh
   140018d81:	mov    dh,0xa0
   140018d83:	in     eax,dx
   140018d84:	fild   DWORD PTR [rbx-0x563fcb5a]
   140018d8a:	lods   eax,DWORD PTR ds:[rsi]
   140018d8b:	cmp    edx,DWORD PTR [rax]
   140018d8d:	adc    bl,BYTE PTR [rax+rcx*4-0x56f1bddd]
   140018d94:	fnstsw WORD PTR [rax]
   140018d96:	test   DWORD PTR [rdx],0x78508064
   140018d9c:	sbb    ch,0xcf
   140018d9f:	add    edi,edi
   140018da1:	mov    bh,BYTE PTR [rsi]
   140018da3:	add    ch,al
   140018da5:	in     eax,0x75
   140018da7:	and    eax,0x1f860b7
   140018dac:	(bad)  
   140018dad:	xor    eax,edi
   140018daf:	push   rdi
   140018db0:	jmp    rdx
   140018db2:	(bad)  
   140018db3:	(bad)  
   140018db4:	loope  0x140018d75
   140018db6:	jns    0x140018e2b
   140018db8:	cmc    
   140018db9:	enter  0x648,0x63
   140018dbd:	pushf  
   140018dbe:	repz add al,0x8d
   140018dc1:	(bad)  
   140018dc2:	jg     0x140018dcc
   140018dc4:	or     eax,0xafcf468d
   140018dc9:	rex.WRB
   140018dca:	shl    DWORD PTR [r12+r14*1],cl
   140018dce:	movabs eax,ds:0x7dd30b0d340d3421
   140018dd7:	retf   0x63cd
   140018dda:	(bad)  
   140018ddb:	rex.B cdq 
   140018ddd:	pop    rsp
   140018dde:	ds (bad) 
   140018de0:	(bad)  
   140018de1:	(bad)  
   140018de2:	sub    esp,edi
   140018de4:	mov    ch,0xd8
   140018de6:	repz (bad) 
   140018de8:	mov    ah,0x4a
   140018dea:	cmp    bh,ah
   140018dec:	std    
   140018ded:	and    eax,0xea4b7f29
   140018df2:	leave  
   140018df3:	sub    DWORD PTR [rax+0x17],eax
   140018df6:	xchg   ebp,eax
   140018df7:	mov    bh,0xa
   140018df9:	and    al,BYTE PTR [rbx]
   140018dfc:	test   eax,0xb6e7afb6
   140018e01:	call   QWORD PTR [rdi+rdi*8-0x7d7ff5a5]
   140018e08:	(bad)  
   140018e09:	add    DWORD PTR [rcx-0x7d2f0ce5],ebp
   140018e0f:	rol    DWORD PTR [rax+0x451b406b],cl
   140018e15:	rex.XB lods al,BYTE PTR ds:[rsi]
   140018e17:	add    al,0x24
   140018e19:	test   DWORD PTR [rsi],esi
   140018e1b:	jbe    0x140018e6c
   140018e1d:	mov    dh,0x42
   140018e1f:	cmp    edx,eax
   140018e21:	lock imul edi,DWORD PTR [rdi+0x730ebb92],0xcf3b6292
   140018e2c:	xor    eax,DWORD PTR [rcx*4+0x44649420]
   140018e33:	std    
   140018e34:	sub    DWORD PTR [rdi],0x3b836e70
   140018e3a:	mov    esp,0x801bd01a
   140018e3f:	mov    ebx,0xe6595e49
   140018e44:	stos   DWORD PTR es:[rdi],eax
   140018e45:	mov    cs,WORD PTR [rdi+0x1cb7d1dd]
   140018e4b:	pop    rdi
   140018e4c:	(bad)  
   140018e4d:	cmc    
   140018e4e:	popf   
   140018e4f:	cmc    
   140018e50:	sti    
   140018e51:	jle    0x140018ebd
   140018e53:	outs   dx,DWORD PTR ds:[rsi]
   140018e54:	stc    
   140018e55:	mov    BYTE PTR [rbx-0x50],ah
   140018e58:	add    dl,ah
   140018e5a:	or     BYTE PTR [rdx],dl
   140018e5c:	xchg   ebp,eax
   140018e5d:	test   BYTE PTR es:[rdx],bl
   140018e60:	rex.X or eax,0x8ccd0d4d
   140018e66:	rcl    ah,1
   140018e68:	mov    eax,0x8d43e350
   140018e6d:	xlat   BYTE PTR ds:[rbx]
   140018e6e:	xchg   cl,dl
   140018e70:	xchg   DWORD PTR fs:[rdx+0x38],esi
   140018e74:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018e75:	pop    rax
   140018e76:	fucom  st(4)
   140018e78:	(bad)  
   140018e79:	out    dx,al
   140018e7a:	cs (bad) 
   140018e7c:	(bad)  
   140018e7d:	imul   edx,DWORD PTR [rsi],0xf6465fb7
   140018e83:	ja     0x140018e6d
   140018e85:	mov    dh,0xe0
   140018e87:	(bad)  
   140018e88:	lock lahf 
   140018e8a:	pop    rax
   140018e8b:	cmp    cl,ah
   140018e8d:	rex.WXB jle 0x140018e47
   140018e90:	cmp    dl,BYTE PTR [rbx+0x22b1ffb8]
   140018e96:	loopne 0x140018e7e
   140018e98:	sub    al,al
   140018e9a:	repz cmc 
   140018e9c:	jmp    FWORD PTR [rsi+0x69]
   140018e9f:	mov    cs,WORD PTR [rsi+0x62]
   140018ea2:	bndldx (bad),[rbp+rax*1-0x6ff5d2fe]
   140018eaa:	mov    edx,0x30182681
   140018eaf:	sbb    BYTE PTR [rdx-0x69],dh
   140018eb2:	(bad)  
   140018eb3:	add    bl,BYTE PTR [rip+0xffffffffb6c3bcdb]        # 0xf6c54b94
   140018eb9:	xchg   ebx,eax
   140018eba:	rex.X adc DWORD PTR [rcx],esp
   140018ebd:	iret   
   140018ebe:	or     al,0xec
   140018ec0:	jb     0x140018ed3
   140018ec2:	cmp    r8b,BYTE PTR [rsi]
   140018ec5:	and    esp,0xfffffff5
   140018ec8:	movabs eax,ds:0x98fe1e10a0141a5b
   140018ed1:	ins    BYTE PTR es:[rdi],dx
   140018ed2:	mov    edi,0x700e2e93
   140018ed7:	(bad)  
   140018ed8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018ed9:	add    DWORD PTR [rbp+0xa],edi
   140018edc:	jo     0x140018f15
   140018ede:	enter  0xc87c,0x9f
   140018ee2:	cmp    eax,0xc5abe3ff
   140018ee7:	xchg   ebx,eax
   140018ee8:	ret    
   140018ee9:	vmaxpd ymm7,ymm15,YMMWORD PTR [rcx+0x5dfc71be]
   140018ef1:	(bad)  
   140018ef2:	xchg   edi,eax
   140018ef3:	mov    rbx,db0
   140018ef6:	xor    DWORD PTR [rbp+0x774c7114],eax
   140018efc:	or     ah,dl
   140018efe:	and    DWORD PTR [rax],esp
   140018f00:	movabs eax,ds:0x2c750ca6a6bf416e
   140018f09:	add    DWORD PTR [rdx],ebp
   140018f0b:	xor    al,0x4e
   140018f0d:	sbb    ah,cl
   140018f0f:	neg    BYTE PTR [rax]
   140018f11:	sbb    al,0x7b
   140018f13:	and    eax,DWORD PTR [rcx]
   140018f15:	(bad)  
   140018f16:	out    dx,al
   140018f17:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018f18:	repz sbb al,0xde
   140018f1b:	cmp    cl,BYTE PTR [rcx+0x79]
   140018f1e:	in     eax,dx
   140018f1f:	and    dh,BYTE PTR [rbx+rdx*1]
   140018f22:	xor    BYTE PTR [rsi+rbx*2],dl
   140018f25:	push   rsp
   140018f26:	sub    DWORD PTR [rsi+rcx*1],esp
   140018f29:	(bad)  
   140018f2a:	lock movabs ds:0x8c4476af275ccb6d,al
   140018f34:	and    BYTE PTR [rcx+0x5824bcf6],bh
   140018f3a:	mov    dl,BYTE PTR [rax]
   140018f3c:	and    r11b,BYTE PTR [rax+0x1401c1d7]
   140018f43:	(bad)  
   140018f44:	sahf   
   140018f45:	scas   eax,DWORD PTR es:[rdi]
   140018f46:	push   rcx
   140018f47:	stc    
   140018f48:	and    eax,0x2140a560
   140018f4d:	add    al,0x45
   140018f4f:	(bad)  
   140018f50:	push   0xffffffff93319268
   140018f55:	rex.RX rcl DWORD PTR [rax],1
   140018f58:	movabs ds:0x8f62f2e5b07ab884,eax
   140018f61:	push   rbx
   140018f62:	xchg   edi,eax
   140018f63:	movabs al,ds:0x52da02fac5070317
   140018f6c:	gs and cl,BYTE PTR cs:[rax-0x3e]
   140018f71:	adc    cl,al
   140018f73:	(bad)  
   140018f74:	ret    0x8d48
   140018f77:	(bad)  
   140018f78:	or     eax,0xfb28fe87
   140018f7d:	lahf   
   140018f7e:	add    al,0xfe
   140018f80:	and    eax,0xe53b330
   140018f85:	scas   eax,DWORD PTR es:[rdi]
   140018f86:	jmp    0x1881c8c82
   140018f8b:	(bad)  
   140018f8c:	add    esp,ebx
   140018f8e:	jmp    0xff925a85
   140018f93:	add    BYTE PTR [rsi],al
   140018f95:	outs   dx,DWORD PTR ds:[rsi]
   140018f96:	pop    rsi
   140018f97:	jne    0x140018f38
   140018f99:	(bad)  
   140018f9a:	lods   al,BYTE PTR ds:[rsi]
   140018f9b:	lods   al,BYTE PTR ds:[rsi]
   140018f9c:	std    
   140018f9d:	xchg   ebx,eax
   140018f9e:	stos   DWORD PTR es:[rdi],eax
   140018f9f:	fwait
   140018fa0:	(bad)  
   140018fa1:	fidiv  WORD PTR [rbp+0x6047cb7]
   140018fa7:	mov    edi,DWORD PTR [rax]
   140018fa9:	jecxz  0x140018f68
   140018fac:	rex.XB mov BYTE PTR [r13-0x2cbcaf02],sil
   140018fb3:	(bad)  
   140018fb4:	sub    BYTE PTR [rax+0x3334529e],ah
   140018fba:	jl     0x140018fef
   140018fbc:	rex.XB (bad) 
   140018fbe:	sbb    dl,ch
   140018fc0:	sbb    BYTE PTR [rdi+0x354184e],0x8a
   140018fc7:	cmc    
   140018fc8:	movabs ds:0x89b69e2fe2eeecec,eax
   140018fd1:	(bad)  
   140018fd2:	xlat   BYTE PTR ds:[rbx]
   140018fd3:	push   rcx
   140018fd4:	lods   eax,DWORD PTR ds:[rsi]
   140018fd5:	xchg   r9,rax
   140018fd7:	mov    dl,0x23
   140018fd9:	mov    dh,0xfd
   140018fdb:	(bad)  
   140018fdc:	movabs ds:0xee5b3cb5c4d42378,al
   140018fe5:	jg     0x140018f81
   140018fe7:	(bad)  
   140018fe8:	fwait
   140018fe9:	xor    BYTE PTR [rsi+0x3675c7ae],dh
   140018fef:	or     DWORD PTR [rax-0x32],edi
   140018ff2:	imul   ecx,DWORD PTR [rbx-0x59],0x18672a
   140018ff9:	sub    ch,BYTE PTR [rax+0x50]
   140018ffc:	pop    rsp
   140018ffd:	nop
   140018ffe:	clc    
   140018fff:	mov    eax,0xf809a451
   140019004:	push   rax
   140019005:	jrcxz  0x140019071
   140019007:	sbb    r12d,DWORD PTR [r9]
   14001900a:	test   DWORD PTR [rcx],0xe483ed29
   140019010:	fldcw  WORD PTR [rcx-0x73]
   140019013:	(bad)  
   140019014:	cmp    BYTE PTR [rdi],dl
   140019016:	lea    eax,[rax-0x3bd81d7]
   14001901c:	mov    edx,0x1ded8578
   140019021:	adc    DWORD PTR [rbx],esp
   140019023:	adc    esp,DWORD PTR [rcx+0x29]
   140019026:	test   ch,al
   140019028:	add    eax,0xf73cda0b
   14001902d:	sub    ecx,ebx
   14001902f:	pop    rdx
   140019030:	movabs eax,ds:0x770037a4c3b809cb
   140019039:	stos   BYTE PTR es:[rdi],al
   14001903a:	mov    esp,0x56e547fd
   14001903f:	int3   
   140019040:	mov    esi,0xbd2c22b5
   140019045:	movsxd ebx,ebp
   140019047:	(bad)  
   140019048:	mov    ecx,0x1ff471b0
   14001904d:	pop    rbp
   14001904e:	fnstcw WORD PTR [rsi+rdi*2]
   140019051:	(bad)
   140019056:	pop    rax
   140019057:	sar    BYTE PTR [rcx+0x5410a702],0xd1
   14001905e:	rol    BYTE PTR [rax+0x33],1
   140019061:	rex.XB
   140019062:	fwait
   140019063:	sbb    DWORD PTR [rcx+0x5367e199],esp
   140019069:	jl     0x1400190a8
   14001906b:	test   ecx,ebx
   14001906d:	adc    al,0x69
   14001906f:	push   0x5c
   140019071:	push   0x4e19a9a0
   140019076:	outs   dx,BYTE PTR ds:[rsi]
   140019077:	push   rdx
   140019078:	ins    BYTE PTR es:[rdi],dx
   140019079:	sbb    al,0x45
   14001907b:	jl     0x14001903e
   14001907d:	(bad)  
   14001907e:	(bad)  
   14001907f:	ins    DWORD PTR es:[rdi],dx
   140019080:	xchg   esi,eax
   140019081:	(bad)  
   140019082:	pushf  
   140019083:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019084:	mov    esp,0x7d9a117a
   140019089:	and    BYTE PTR [rax-0x7ba146f8],dl
   14001908f:	rex.X ret 
   140019091:	add    esp,esp
   140019093:	lahf   
   140019094:	mov    ecx,0x3b95eb1
   140019099:	rcl    dl,1
   14001909b:	xor    ah,0x38
   14001909e:	or     eax,0x20e4c904
   1400190a3:	sti    
   1400190a4:	cmp    edx,DWORD PTR [rcx+0x20563b7a]
   1400190aa:	cli    
   1400190ab:	xlat   BYTE PTR ds:[rbx]
   1400190ac:	sub    bh,BYTE PTR es:[rsi+0x5834820b]
   1400190b3:	cmp    ah,al
   1400190b5:	push   rax
   1400190b6:	jne    0x140019088
   1400190b8:	test   BYTE PTR [rax],bh
   1400190ba:	pop    sp
   1400190bc:	and    eax,0xb3a40bd9
   1400190c1:	sbb    BYTE PTR [rax+0x22],ah
   1400190c4:	add    al,0x25
   1400190c6:	cmp    BYTE PTR [rax],ah
   1400190c8:	xor    DWORD PTR [rdx],eax
   1400190ca:	movabs ds:0xd4c922390b114a11,eax
   1400190d3:	loopne 0x140019089
   1400190d5:	jg     0x1400190b1
   1400190d7:	sub    al,0x42
   1400190d9:	add    BYTE PTR [rdi],ch
   1400190db:	jp     0x1400190d9
   1400190dd:	mov    ebx,0xee41ff39
   1400190e2:	loopne 0x14001914e
   1400190e4:	rex lahf 
   1400190e6:	add    bl,ah
   1400190e8:	mov    edx,edx
   1400190ea:	sub    bh,BYTE PTR [rsi-0x75aded30]
   1400190f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400190f1:	stos   DWORD PTR es:[rdi],eax
   1400190f2:	mov    ebp,0x4bcbc727
   1400190f7:	mov    edi,0xfee36378
   1400190fc:	rex.WRXB pop r12
   1400190fe:	pop    rdi
   1400190ff:	ds int3 
   140019101:	ins    BYTE PTR es:[rdi],dx
   140019102:	mov    esp,0x7110e502
   140019107:	rcr    DWORD PTR [rdi],1
   140019109:	xlat   BYTE PTR ds:[rbx]
   14001910a:	or     BYTE PTR [rbp+0xc],sil
   14001910e:	sti    
   14001910f:	fwait
   140019110:	(bad)  
   140019111:	imul   ebp,DWORD PTR [rdx-0x76],0x7e4b9a66
   140019118:	adc    dl,BYTE PTR [rdx+0x6f]
   14001911b:	cmp    eax,0x65940848
   140019120:	rex.RB mov r9d,0x937b1f71
   140019126:	or     DWORD PTR [rsi-0x15],ebp
   140019129:	je     0x14001912f
   14001912b:	push   QWORD PTR [rsi-0x1e]
   14001912e:	(bad)  
   14001912f:	lahf   
   140019130:	cwde   
   140019131:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019132:	rex.RXB iret 
   140019134:	fdivrp st(5),st
   140019136:	(bad)  
   140019137:	icebp  
   140019138:	(bad)  
   140019139:	jb     0x14001912b
   14001913b:	(bad)  
   14001913c:	mov    r14b,0x21
   14001913f:	mov    edi,0xeb6f63d
   140019144:	movabs al,ds:0x77b1b49af3a4e195
   14001914d:	add    al,0x5
   14001914f:	or     eax,0x7058bf8
   140019154:	mov    DWORD PTR [rbp-0x2],esi
   140019157:	(bad)  
   140019158:	call   0x130427cea
   14001915d:	cs push rsi
   14001915f:	xor    dh,BYTE PTR [rdx]
   140019161:	imul   ecx,DWORD PTR [rax-0x4f6ffbb2],0xe1784e84
   14001916b:	mov    WORD PTR [rbp-0x18],es
   14001916e:	shl    BYTE PTR [rcx-0x5c],cl
   140019171:	pop    rsi
   140019172:	or     BYTE PTR [rsi+0x4],0x20
   140019176:	(bad)  
   140019177:	sub    DWORD PTR [rdx],esp
   140019179:	mov    esi,0x5212a8de
   14001917e:	xor    al,0xa0
   140019180:	(bad)  
   140019181:	and    esp,DWORD PTR [rax-0x60d99e36]
   140019187:	add    bh,dh
   140019189:	test   DWORD PTR [rbp+0x7],edi
   14001918c:	or     eax,0xd01a5877
   140019191:	sbb    eax,DWORD PTR [rax-0x30a5bac5]
   140019197:	jb     0x1400191c9
   140019199:	in     al,0xf7
   14001919b:	mov    edx,edx
   14001919d:	mov    WORD PTR [rsi+0x1abe4c1c],ds
   1400191a3:	(bad)  
   1400191a4:	ss jg  0x14001918d
   1400191a7:	(bad)  
   1400191a8:	cli    
   1400191a9:	std    
   1400191aa:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   1400191ac:	sub    al,0x1e
   1400191ae:	and    cl,BYTE PTR [rdi+rdx*4+0x738857c0]
   1400191b5:	xor    DWORD PTR [rcx],edi
   1400191b7:	(bad)  
   1400191b8:	fcom   DWORD PTR [rcx-0x1d]
   1400191bb:	(bad)  
   1400191bc:	sbb    ch,BYTE PTR [rbp+0x66]
   1400191bf:	cdqe   
   1400191c1:	loope  0x140019229
   1400191c3:	xor    esp,DWORD PTR [rsp+rdx*8]
   1400191c6:	xor    DWORD PTR [rdi+0x56],edi
   1400191c9:	(bad)
   1400191cc:	rcl    DWORD PTR [rsp+rax*4+0x62],1
   1400191d0:	mov    dh,0x4f
   1400191d2:	jns    0x1400191c0
   1400191d4:	and    esp,ebx
   1400191d6:	jo     0x1400191a4
   1400191d8:	lea    esi,[rbx+0x2f]
   1400191db:	mov    cl,0x7a
   1400191dd:	icebp  
   1400191de:	add    eax,0x43cf9786
   1400191e3:	mov    ebp,0x45dd644b
   1400191e8:	rex.RB mov r9b,0xa5
   1400191eb:	imul   DWORD PTR [rdi+rbp*8]
   1400191ee:	xlat   BYTE PTR ds:[rbx]
   1400191ef:	pop    rsp
   1400191f0:	(bad)  
   1400191f1:	rex.WXB
   1400191f2:	rex.RXB sbb r9b,BYTE PTR [r15]
   1400191f5:	mov    ah,0x83
   1400191f7:	(bad)  
   1400191f8:	shl    esi,cl
   1400191fa:	clc    
   1400191fb:	in     eax,dx
   1400191fc:	jrcxz  0x140019214
   1400191fe:	add    al,0x9c
   140019200:	(bad)  
   140019201:	sbb    esi,ebx
   140019203:	movabs ds:0x49964b175007007a,al
   14001920c:	out    0x54,eax
   14001920e:	and    cl,BYTE PTR [rdi-0x40]
   140019211:	sub    al,BYTE PTR [rdi]
   140019213:	xchg   ecx,eax
   140019214:	jle    0x14001927a
   140019216:	mov    ebp,0x40067301
   14001921b:	or     al,0x14
   14001921d:	(bad)  
   14001921e:	sub    al,BYTE PTR [rcx]
   140019220:	sbb    eax,0x6bbb4403
   140019225:	(bad)  
   140019226:	push   rsi
   140019227:	jl     0x1400191d9
   140019229:	mov    ebx,DWORD PTR [rbp+0x307612aa]
   14001922f:	or     BYTE PTR [rax],dh
   140019231:	(bad)  
   140019232:	cli    
   140019233:	cmp    eax,0x1e2f2c3f
   140019238:	stc    
   140019239:	jne    0x1400192b8
   14001923b:	loopne 0x140019289
   14001923d:	out    0xc0,eax
   14001923f:	sar    DWORD PTR [rbx+0x1bd2f75e],cl
   140019245:	adc    bh,0xab
   140019248:	int3   
   140019249:	xchg   DWORD PTR [rdx+0x5df8f5d],edx
   14001924f:	cli    
   140019250:	mov    dh,BYTE PTR [rdi+0x1def3b96]
   140019256:	mov    es,WORD PTR [rsi-0x2908581]
   14001925c:	(bad)  
   14001925d:	jae    0x140019236
   14001925f:	push   rsi
   140019260:	mov    ?,WORD PTR [rcx+0x3346b0bf]
   140019266:	pop    rsp
   140019267:	(bad)  
   140019268:	stc    
   140019269:	xchg   edx,eax
   14001926a:	rex.X sbb al,0x41
   14001926d:	xchg   ebp,eax
   14001926e:	xchg   BYTE PTR [rax-0x2a63b2f5],al
   140019274:	push   rdi
   140019275:	iret   
   140019276:	sub    BYTE PTR [rdx+0x70ccd219],bl
   14001927c:	int    0x2c
   14001927e:	ss (bad) 
   140019280:	push   0xffffffffe389ae6c
   140019285:	mov    esi,0xe72b0ee3
   14001928a:	sub    BYTE PTR [rsi],dh
   14001928c:	(bad)  
   14001928d:	mov    bl,0x3f
   14001928f:	cdq    
   140019290:	rcr    BYTE PTR [rsp+rdi*1-0x3d],1
   140019294:	retf   0x69d6
   140019297:	fmul   st(5),st
   140019299:	imul   esi,DWORD PTR [rcx-0x19996f9e],0x29
   1400192a0:	(bad)  
   1400192a1:	(bad)  
   1400192a2:	test   eax,0xf92d901d
   1400192a7:	sbb    r9,QWORD PTR [r14+0x3b]
   1400192ab:	rex.WB sub al,0xbf
   1400192ae:	adc    al,BYTE PTR ss:[rax+0x665ce156]
   1400192b5:	add    al,0xd2
   1400192b7:	mov    DWORD PTR [rax],eax
   1400192b9:	in     al,dx
   1400192ba:	jge    0x140019285
   1400192bc:	and    BYTE PTR [rdi+rbp*4],ah
   1400192bf:	outs   dx,DWORD PTR ds:[rsi]
   1400192c0:	mov    edi,0x23338035
   1400192c5:	movabs al,ds:0x73400c268ae7d922
   1400192ce:	adc    al,0xa0
   1400192d0:	enter  0xd5fc,0x4b
   1400192d4:	rol    DWORD PTR [rbp-0x5659fe8b],1
   1400192da:	ror    esi,0xb0
   1400192dd:	mov    BYTE PTR [rsi+0x22],al
   1400192e0:	retf   
   1400192e1:	push   rax
   1400192e2:	push   rbx
   1400192e3:	lods   al,BYTE PTR ds:[rsi]
   1400192e4:	(bad)  
   1400192e5:	rex.X mov ds,WORD PTR [rsi+0x1a]
   1400192e9:	cmp    esp,DWORD PTR [rdi+0x11]
   1400192ec:	leave  
   1400192ed:	movsxd edx,edx
   1400192ef:	rex.WX loope 0x1400192b3
   1400192f2:	ja     0x140019367
   1400192f4:	cmc    
   1400192f5:	fnstsw WORD PTR [rdi-0x1698fc32]
   1400192fb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400192fc:	add    DWORD PTR [rdi-0x7b889407],edi
   140019302:	adc    eax,ebp
   140019304:	or     eax,0x6e4debc0
   140019309:	stos   DWORD PTR es:[rdi],eax
   14001930a:	mov    ?,WORD PTR [rbx+0x9]
   14001930d:	add    BYTE PTR [rax],al
   14001930f:	and    BYTE PTR [rax],al
   140019311:	rex.WB
   140019312:	rex.R
   140019313:	push   r12
   140019315:	in     eax,dx
   140019316:	jmp    0x140f11dd6
   14001931b:	push   QWORD PTR [rsi+0x47bbc6e2]
   140019321:	push   rbp
   140019322:	icebp  
   140019323:	xor    DWORD PTR [rbx-0x45a03c1b],0xffffffbe
   14001932a:	jp     0x1400192d4
   14001932c:	mov    edx,0x64c9b8b1
   140019331:	mov    ah,0x82
   140019333:	push   rsp
   140019334:	and    ebx,DWORD PTR [rdi+rbp*1+0x8bd44f0]
   14001933b:	sbb    al,BYTE PTR [rax+0x1b]
   14001933e:	rex.X cmp eax,0xaf834243
   140019344:	(bad)  
   140019345:	cmp    BYTE PTR [rbx-0x14],bh
   140019348:	rex.X or DWORD PTR [rbx],0xffffffb5
   14001934c:	xchg   ecx,eax
   14001934d:	push   0xffffffffca13af92
   140019352:	fld    DWORD PTR [rdi+rsi*2]
   140019355:	in     al,0x41
   140019357:	cld    
   140019358:	loop   0x14001936c
   14001935a:	push   rdi
   14001935b:	mov    dh,0x2e
   14001935d:	mov    al,0x7c
   14001935f:	icebp  
   140019360:	add    eax,0x22ce9786
   140019365:	rcr    DWORD PTR [rbx+0x26dec128],cl
   14001936b:	cmp    BYTE PTR [rdx+rax*1-0x4940454f],dl
   140019372:	mov    eax,esi
   140019374:	pushf  
   140019375:	(bad)  
   140019376:	outs   dx,DWORD PTR ds:[rsi]
   140019377:	jge    0x140019372
   140019379:	pushf  
   14001937a:	xchg   edx,eax
   14001937b:	(bad)  
   14001937c:	cmp    al,0xc0
   14001937e:	cmp    ebx,eax
   140019380:	(bad)  
   140019381:	fiadd  DWORD PTR [rsi+0x1c]
   140019384:	sar    BYTE PTR [rdx+0x0],0x4c
   140019388:	jmp    0xf99b8a62
   14001938d:	add    BYTE PTR [rcx+0x681ae02a],dh
   140019393:	(bad)  
   140019394:	sar    BYTE PTR [rbx+rcx*2],0x17
   140019398:	jl     0x1400193aa
   14001939a:	rex.WXB add rax,0xffffffff972406c8
   1400193a0:	lock jae 0x14001936b
   1400193a3:	adc    DWORD PTR [rbx+0x7d],eax
   1400193a6:	adc    eax,0xe5c05c41
   1400193ab:	(bad)
   1400193ae:	loopne 0x1400193c7
   1400193b0:	xor    dl,BYTE PTR [rbx-0x13405f28]
   1400193b6:	shl    BYTE PTR [rip+0xffffffff9e421f21],cl        # 0xde43b2dd
   1400193bc:	adc    esi,DWORD PTR [rax-0x68]
   1400193bf:	leave  
   1400193c0:	(bad)  
   1400193c1:	mov    eax,0xde80d343
   1400193c6:	add    BYTE PTR [rsi+rbx*1-0xb56a1c],bh
   1400193cd:	or     al,BYTE PTR [rbp-0x41464781]
   1400193d3:	mov    dl,0xc9
   1400193d5:	in     al,0xd1
   1400193d7:	retf   0x77eb
   1400193da:	xor    BYTE PTR [rsi-0x8],bl
   1400193dd:	js     0x140019392
   1400193df:	mov    eax,0xd2ceecf1
   1400193e4:	(bad)  
   1400193e5:	js     0x14001944e
   1400193e7:	(bad)  
   1400193e8:	(bad)  
   1400193e9:	std    
   1400193ea:	ror    DWORD PTR [rdx],1
   1400193ec:	mov    bl,0xd1
   1400193ee:	adc    dl,BYTE PTR [rdx+0x54]
   1400193f1:	loopne 0x1400193fd
   1400193f3:	or     edi,ecx
   1400193f5:	movabs ds:0x299a46a6d0684be2,eax
   1400193fe:	mov    esi,0x37df9e8e
   140019403:	or     eax,0x7116612
   140019408:	mov    al,0xf0
   14001940a:	pop    rdi
   14001940b:	mov    ah,ch
   14001940d:	mov    ebp,0x4f3bc146
   140019412:	jne    0x1400193f8
   140019414:	add    DWORD PTR [rsi-0x3a26654d],esp
   14001941a:	xor    ebp,DWORD PTR [rsi+rbx*2-0x1c80fe88]
   140019421:	xor    bl,dl
   140019423:	int3   
   140019424:	mov    ch,ch
   140019426:	jbe    0x140019419
   140019428:	jo     0x1400194a7
   14001942a:	retf   0x21fd
   14001942d:	xlat   BYTE PTR ds:[rbx]
   14001942e:	(bad)  
   14001942f:	rcr    esp,cl
   140019431:	jg     0x1400193e4
   140019433:	jl     0x14001940e
   140019435:	rol    DWORD PTR [rdx+0x7e79f37c],1
   14001943b:	rol    BYTE PTR [rdi-0x13],cl
   14001943e:	nop
   14001943f:	(bad)  
   140019440:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019441:	xor    eax,0xd2c6d200
   140019446:	shl    DWORD PTR [rbx-0x32cfefb9],1
   14001944c:	add    eax,0x609489a0
   140019451:	xlat   BYTE PTR ds:[rbx]
   140019452:	(bad)  
   140019453:	movabs ds:0xf8d1a8380d224cb,eax
   14001945c:	mov    eax,DWORD PTR [rax]
   14001945e:	sub    BYTE PTR [rdi+0x70],0x75
   140019462:	and    esp,DWORD PTR [rip+0xffffffff81533a58]        # 0xc154cec0
   140019468:	shl    BYTE PTR [rcx+0x77],cl
   14001946b:	and    edx,DWORD PTR [rax+rcx*1+0x58fa677]
   140019472:	retf   
   140019473:	(bad)  
   140019474:	nop
   140019475:	fs add al,0x94
   140019478:	xchg   ecx,eax
   140019479:	(bad)  
   14001947a:	(bad)  
   14001947b:	cli    
   14001947c:	xchg   edx,eax
   14001947d:	pushf  
   14001947e:	(bad)  
   140019480:	or     eax,0xb3ae763d
   140019485:	xchg   DWORD PTR [rsi],edi
   140019487:	add    ch,al
   140019489:	in     eax,0x5b
   14001948b:	nop
   14001948c:	jns    0x1400194ce
   14001948e:	scas   eax,DWORD PTR es:[rdi]
   14001948f:	sbb    ebx,esi
   140019491:	sti    
   140019492:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019493:	addr32 (bad) 
   140019495:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   140019497:	xor    DWORD PTR [rbp-0x32],edi
   14001949a:	movabs ds:0x785e337b78a295ef,eax
   1400194a3:	je     0x140019457
   1400194a5:	mov    eax,0xd69776ee
   1400194aa:	fstp   DWORD PTR [rdi+0x58]
   1400194ad:	gs jg  0x140019468
   1400194b0:	(bad)  
   1400194b1:	ins    BYTE PTR es:[rdi],dx
   1400194b2:	mov    eax,0x78472844
   1400194b7:	pop    rdi
   1400194b8:	loop   0x1400194df
   1400194ba:	mov    dh,0xdc
   1400194bc:	add    al,0x2
   1400194be:	(bad)  
   1400194c0:	hlt    
   1400194c1:	sti    
   1400194c2:	jp     0x140019446
   1400194c4:	fwait
   1400194c5:	rex.WRB movabs ds:0xfaf626d39f32b7c7,al
   1400194cf:	xchg   ebx,eax
   1400194d0:	cli    
   1400194d1:	jmp    0x140019536
   1400194d3:	add    esp,ebx
   1400194d5:	(bad)  
   1400194d6:	xor    eax,0xf8c3f0e1
   1400194db:	in     eax,0x35
   1400194dd:	outs   dx,DWORD PTR cs:[rsi]
   1400194df:	outs   dx,DWORD PTR ds:[rsi]
   1400194e0:	mov    bl,0x70
   1400194e2:	icebp  
   1400194e3:	adc    al,0xe3
   1400194e5:	rex.WXB out 0x90,eax
   1400194e8:	leave  
   1400194e9:	pop    rsi
   1400194ea:	hlt    
   1400194eb:	(bad)  
   1400194ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400194ed:	rex.WR movabs ds:0x30b7c618d0afd3b1,al
   1400194f7:	js     0x140019544
   1400194f9:	in     eax,0xcd
   1400194fb:	jp     0x1400194d4
   1400194fd:	repnz test DWORD PTR [rdx],edi
   140019500:	retf   0xc9df
   140019503:	sti    
   140019504:	push   rbx
   140019505:	test   eax,0xbd77c4d0
   14001950a:	mov    ch,0x49
   14001950c:	retf   0x63bf
   14001950f:	mov    bl,0x8f
   140019511:	fs push rax
   140019513:	push   rax
   140019514:	test   BYTE PTR [rax+0x18],ch
   140019517:	push   rax
   140019518:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019519:	push   rbx
   14001951a:	(bad)  
   14001951b:	mov    esi,ds
   14001951d:	mov    ecx,0xad2ae1f5
   140019522:	sbb    eax,0x29d2bb50
   140019527:	or     al,al
   140019529:	xchg   DWORD PTR [rsp+rax*1-0x3c],ebp
   14001952d:	(bad)
   140019530:	out    dx,al
   140019531:	rex.WRX movabs ds:0xb52517749296092d,rax
   14001953b:	ja     0x140019545
   14001953d:	push   rax
   14001953e:	movabs al,ds:0x1c1bf83e17ae3f47
   140019547:	sti    
   140019548:	or     eax,0xa034b0ee
   14001954d:	(bad)  
   14001954e:	add    BYTE PTR [rdi-0x75291b5],dh
   140019554:	(bad)
   140019557:	xchg   BYTE PTR [rdi+0x18efddf8],cl
   14001955d:	int    0xf6
   14001955f:	mov    esi,0x61fa57df
   140019564:	lods   eax,DWORD PTR ds:[rsi]
   140019565:	(bad)  
   140019566:	out    dx,eax
   140019567:	fwait
   140019568:	(bad)  
   140019569:	(bad)  
   14001956a:	cwde   
   14001956b:	lea    edx,[rdi-0x4f50e027]
   140019571:	cmp    ebx,DWORD PTR [rdx+0x66]
   140019574:	xor    bl,BYTE PTR [rdx-0x5a]
   140019577:	(bad)  
   140019578:	mov    WORD PTR [rcx],cs
   14001957a:	in     eax,0x10
   14001957c:	out    0x7,eax
   14001957e:	js     0x14001956f
   140019580:	jrcxz  0x1400195cf
   140019582:	scas   al,BYTE PTR es:[rdi]
   140019583:	add    DWORD PTR [rsi+0x2d],0x5c1a6fd7
   14001958a:	cwde   
   14001958b:	loope  0x140019578
   14001958d:	sub    DWORD PTR [rdx],esi
   14001958f:	fwait
   140019590:	(bad)  
   140019591:	pop    rdx
   140019592:	jns    0x14001953c
   140019594:	jae    0x14001958e
   140019596:	pop    rdi
   140019597:	pop    rax
   140019598:	fld    TBYTE PTR [rdi+0x439ecb68]
   14001959e:	add    eax,ecx
   1400195a0:	adc    eax,0x601e4794
   1400195a5:	push   rsi
   1400195a6:	(bad)  
   1400195a7:	(bad)  
   1400195a8:	xchg   edi,eax
   1400195a9:	(bad)  
   1400195aa:	jb     0x140019598
   1400195ac:	ret    0x8a49
   1400195af:	jmp    0x14001958c
   1400195b1:	movabs al,ds:0x4a042b739b1a18d3
   1400195ba:	adc    eax,0xfd4b470a
   1400195bf:	adc    eax,0x451d1872
   1400195c4:	out    0xf0,al
   1400195c6:	xor    ah,0x74
   1400195c9:	(bad)  
   1400195ca:	add    BYTE PTR [rsi-0x74],ah
   1400195cd:	out    0x1f,al
   1400195d0:	ja     0x140019567
   1400195d2:	push   rbp
   1400195d3:	xor    BYTE PTR [rbp-0x4a],ah
   1400195d6:	sar    BYTE PTR [rsi],1
   1400195d8:	xchg   edx,eax
   1400195d9:	jl     0x1400195a3
   1400195db:	mov    bl,0x1
   1400195dd:	and    bh,bh
   1400195df:	fild   WORD PTR [rsi-0x74]
   1400195e2:	sbb    BYTE PTR [rbx+0x30],dl
   1400195e5:	xchg   edx,eax
   1400195e6:	adc    DWORD PTR [rdx],0x81022021
   1400195ec:	jmp    0x1900287f1
   1400195f1:	(bad)  
   1400195f2:	cdq    
   1400195f3:	sbb    BYTE PTR [rcx+riz*8-0x41],ah
   1400195f7:	retf   
   1400195f8:	out    0x80,eax
   1400195fa:	sbb    eax,0x581de447
   1400195ff:	push   rdi
   140019600:	xor    cl,BYTE PTR [rsi]
   140019602:	and    DWORD PTR [rax-0x63],ebx
   140019605:	rex.R rcr spl,cl
   140019608:	mov    cl,0xf8
   14001960a:	mov    edi,0xb9ecc43b
   14001960f:	mov    cl,0x36
   140019611:	(bad)  
   140019612:	jl     0x14001962b
   140019614:	jg     0x14001965d
   140019616:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019617:	add    DWORD PTR [rbp-0x348907ff],edi
   14001961d:	jl     0x1400195d7
   14001961f:	lahf   
   140019620:	mov    ebp,0x79bc503d
   140019625:	mov    ebp,0x3d42f4fc
   14001962a:	sti    
   14001962b:	xor    DWORD PTR [rdi],esp
   14001962d:	movabs ds:0xccc60fec8ac5348f,eax
   140019636:	(bad)  
   140019637:	movsxd esp,DWORD PTR [rsi+0x60c998d5]
   14001963d:	int3   
   14001963e:	je     0x1400195f0
   140019640:	cmp    rax,0x729a45c
   140019646:	js     0x14001969f
   140019648:	loopne 0x1400196c6
   14001964a:	add    edx,esp
   14001964c:	(bad)  
   14001964d:	fldcw  WORD PTR [rax+rbp*1]
   140019650:	mov    ch,0x2a
   140019652:	test   BYTE PTR [rdx],bh
   140019654:	adc    bh,BYTE PTR [rcx-0x16]
   140019657:	test   al,0xfc
   140019659:	scas   al,BYTE PTR es:[rdi]
   14001965a:	sahf   
   14001965b:	loop   0x14001969f
   14001965d:	add    al,0xfc
   14001965f:	jl     0x140019674
   140019661:	jae    0x140019661
   140019663:	and    dl,ah
   140019665:	(bad)  
   140019666:	neg    DWORD PTR [rdi-0x47c9c06c]
   14001966c:	push   0xffffffffc7eb09a8
   140019671:	sbb    DWORD PTR [rsi],ebp
   140019673:	scas   eax,DWORD PTR es:[rdi]
   140019674:	mov    bl,0x7d
   140019676:	in     eax,dx
   140019677:	sub    cl,BYTE PTR [rbx]
   140019679:	pop    rbx
   14001967a:	pop    rdi
   14001967b:	addr32 icebp 
   14001967d:	loop   0x1400196ca
   14001967f:	enter  0x4ede,0x5e
   140019683:	in     al,dx
   140019684:	and    esi,DWORD PTR [rcx]
   140019686:	in     al,0xd2
   140019688:	pop    rdx
   140019689:	jg     0x1400196a4
   14001968b:	cld    
   14001968c:	retf   
   14001968d:	retf   0xce3
   140019690:	rex.WB (bad) 
   140019692:	and    eax,0xefabc4be
   140019697:	and    ch,ch
   140019699:	faddp  st(5),st
   14001969b:	xchg   esi,eax
   14001969c:	fild   WORD PTR [rdx+rax*2-0x77]
   1400196a0:	sahf   
   1400196a1:	push   rdi
   1400196a2:	repz (bad) 
   1400196a4:	rex.WB jmp 0xc8313f7d
   1400196aa:	(bad)  
   1400196ab:	xor    eax,0x22443428
   1400196b0:	push   rax
   1400196b1:	push   rax
   1400196b2:	rex.X movsxd eax,esi
   1400196b5:	ret    
   1400196b6:	(bad)  
   1400196b7:	jno    0x1400196c0
   1400196b9:	push   0x64
   1400196bb:	movabs al,ds:0xd68deb4b45113a10
   1400196c4:	test   al,0x6d
   1400196c6:	out    dx,al
   1400196c7:	leave  
   1400196c8:	add    BYTE PTR [rax-0x4763fdab],ah
   1400196ce:	js     0x1400196ec
   1400196d0:	(bad)  
   1400196d1:	jne    0x1400196eb
   1400196d3:	fcmovb st,st(1)
   1400196d5:	pop    rcx
   1400196d6:	clc    
   1400196d7:	adc    DWORD PTR [rbp+0x5f],ecx
   1400196da:	data16 sub BYTE PTR [rax+riz*1+0x10],ah
   1400196df:	(bad)  
   1400196e0:	rex.W
   1400196e1:	repz mov esi,0x87cbc8af
   1400196e7:	out    dx,eax
   1400196e8:	mov    ah,0x6a
   1400196ea:	rex outs dx,DWORD PTR ds:[rsi]
   1400196ec:	add    BYTE PTR [rsi-0x50b50d63],bh
   1400196f2:	pop    rdi
   1400196f3:	add    ch,al
   1400196f5:	icebp  
   1400196f6:	xchg   DWORD PTR [rdi-0x44],ecx
   1400196f9:	jge    0x140019750
   1400196fb:	data16 jg 0x140019744
   1400196fe:	xor    al,0x7c
   140019700:	(bad)  
   140019701:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019702:	fld    TBYTE PTR [rax]
   140019704:	push   0x5f
   140019706:	push   rcx
   140019707:	(bad)  
   140019708:	add    esp,DWORD PTR [rsi+0x55]
   14001970b:	rex.RB jrcxz 0x140019715
   14001970e:	int3   
   14001970f:	stos   BYTE PTR es:[rdi],al
   140019710:	adc    DWORD PTR [rcx+0x4031411a],esp
   140019716:	mov    dl,BYTE PTR [rdx]
   140019718:	(bad)  
   140019719:	jno    0x1400196a4
   14001971b:	out    dx,al
   14001971c:	mov    eax,0x4da28e22
   140019721:	mov    bpl,0xb6
   140019724:	or     DWORD PTR [rsi],edi
   140019726:	rcr    DWORD PTR [rax-0x7d93019],cl
   14001972c:	mov    edx,0xae1987c6
   140019731:	mov    fs,ecx
   140019733:	mov    edi,0xad0a6a6f
   140019738:	jno    0x14001975b
   14001973a:	cwde   
   14001973b:	repnz rex.RXB (bad) 
   14001973e:	in     eax,0x0
   140019740:	(bad)  
   140019741:	shr    BYTE PTR [rax+rbx*1+0x423ff720],0xd
   140019749:	int3   
   14001974a:	cs popf 
   14001974c:	in     eax,0xc8
   14001974e:	test   DWORD PTR [rdi],edx
   140019750:	lock xlat BYTE PTR ds:[rbx]
   140019752:	(bad)  
   140019753:	movabs eax,ds:0xdcdfe04b06174261
   14001975c:	enter  0x316f,0x87
   140019760:	(bad)  
   140019761:	ret    0x7b7b
   140019764:	ja     0x14001971d
   140019766:	in     eax,dx
   140019767:	(bad)  
   140019768:	jns    0x140019763
   14001976a:	clc    
   14001976b:	cmp    al,0xb1
   14001976d:	(bad)  
   14001976e:	out    dx,eax
   14001976f:	and    eax,0x865ce33b
   140019774:	movabs ds:0x773e64b5b7b2168d,eax
   14001977d:	stc    
   14001977e:	sub    DWORD PTR [rcx+0x22e22022],edi
   140019784:	push   0x1f
   140019786:	mov    al,0xf4
   140019788:	loopne 0x1400197ca
   14001978a:	repnz (bad) 
   14001978c:	(bad)  
   14001978d:	mov    bh,0xdb
   14001978f:	jae    0x1400197c7
   140019791:	(bad)  
   140019792:	rcl    BYTE PTR [rdx-0x73],0x8
   140019796:	and    eax,DWORD PTR [rsp+rbx*1+0x30d91805]
   14001979d:	rdpmc  
   14001979f:	lea    eax,[rbp+0x8]
   1400197a2:	sub    esi,DWORD PTR [rcx]
   1400197a4:	or     ch,cl
   1400197a6:	lahf   
   1400197a7:	int3   
   1400197a8:	(bad)  
   1400197a9:	sub    cl,ah
   1400197ab:	(bad)  
   1400197ac:	mov    ebx,0x3bcefab8
   1400197b1:	lods   eax,DWORD PTR ds:[rsi]
   1400197b2:	sbb    dl,al
   1400197b4:	sbb    eax,DWORD PTR [rax-0x7d236891]
   1400197ba:	mov    dl,0x5b
   1400197bc:	cs scas eax,DWORD PTR es:[rdi]
   1400197be:	(bad)  
   1400197bf:	xlat   BYTE PTR ds:[rbx]
   1400197c0:	(bad)  
   1400197c1:	jnp    0x1400197b7
   1400197c3:	mov    edi,0xe3fea170
   1400197c8:	xlat   BYTE PTR ds:[rbx]
   1400197c9:	rcl    DWORD PTR [rip+0xffffffff97da9e71],1        # 0xd7dc3640
   1400197cf:	add    al,0x5f
   1400197d1:	adc    cl,BYTE PTR [rdx+0x704a2d12]
   1400197d7:	and    eax,0x57389452
   1400197dc:	and    BYTE PTR [rsi],ch
   1400197de:	ss icebp 
   1400197e0:	sub    BYTE PTR [rsi-0x489a4e60],cl
   1400197e6:	ins    DWORD PTR es:[rdi],dx
   1400197e7:	out    0x89,al
   1400197e9:	retf   0x67ef
   1400197ec:	adc    edi,DWORD PTR [rbp+rdx*4-0x3ccca308]
   1400197f3:	(bad)  
   1400197f4:	push   rbx
   1400197f5:	or     dh,bl
   1400197f7:	cli    
   1400197f8:	mov    esi,0x87f9ab1
   1400197fd:	(bad)  
   1400197fe:	rex.WRX
   1400197ff:	rex.RXB in al,0x5f
   140019802:	nop
   140019803:	sbb    BYTE PTR [rip+0xffffffffb4609c6c],dh        # 0xf4623475
   140019809:	jp     0x140019793
   14001980b:	imul   edx,DWORD PTR [rdi-0x51],0x30
   14001980f:	fidivr WORD PTR [rdx]
   140019811:	leave  
   140019812:	ret    0x4bf6
   140019815:	enter  0xdde,0xa0
   140019819:	mov    cl,0xe5
   14001981b:	mov    dl,0xec
   14001981d:	data16 (bad) 
   14001981f:	movabs eax,ds:0x464ff79b3618d14
   140019828:	push   rdx
   140019829:	sar    DWORD PTR [rbx*4-0x6c02f198],1
   140019830:	xchg   ecx,eax
   140019831:	jo     0x14001983c
   140019833:	add    edx,eax
   140019835:	mov    WORD PTR [rbx],ss
   140019837:	je     0x140019812
   140019839:	sbb    BYTE PTR [rip+0xffffffffa3a75ee2],0x4f        # 0xe3a8f722
   140019840:	out    0x15,al
   140019842:	add    BYTE PTR ds:[rax],r14b
   140019846:	test   BYTE PTR [rax],al
   140019848:	rex.WRB fdivr QWORD PTR [r8-0x7d3a76c8]
   14001984f:	pop    rsp
   140019850:	cmp    DWORD PTR [rax-0x22],esp
   140019853:	(bad)  
   140019854:	fidiv  DWORD PTR [rsi]
   140019856:	popf   
   140019857:	rex.W int3 
   140019859:	jmp    0x140019878
   14001985b:	and    al,0x7a
   14001985d:	mov    al,0x78
   14001985f:	loop   0x140019803
   140019861:	movabs eax,ds:0x8b089e3e426ea3b5
   14001986a:	push   0xffffffffaa53ffce
   14001986f:	adc    al,0x37
   140019871:	sbb    edi,DWORD PTR [rbx]
   140019873:	add    eax,0x423e6a43
   140019878:	cmp    DWORD PTR [rdx-0xfd306d],esp
   14001987e:	or     esi,DWORD PTR [rdi+0x50]
   140019881:	xor    eax,0xdf0037a0
   140019886:	(bad)  
   140019887:	jns    0x1400198ae
   140019889:	gs mov bh,0xd8
   14001988c:	jl     0x140019884
   14001988e:	and    ecx,DWORD PTR [rdi-0x407a7a45]
   140019894:	mov    gs,eax
   140019896:	(bad)  
   140019897:	ins    BYTE PTR es:[rdi],dx
   140019898:	movabs ds:0xf2c69585a8f911e,al
   1400198a1:	enter  0xc443,0xb5
   1400198a5:	popf   
   1400198a6:	mov    DWORD PTR es:[rbx+rdx*1+0x13509a1a],esi
   1400198ae:	(bad)  
   1400198af:	sbb    ch,BYTE PTR [rcx+0x66]
   1400198b2:	cmp    rax,0xfffffffff827a8a5
   1400198b8:	jp     0x140019840
   1400198ba:	imul   esp,DWORD PTR [rsi-0x85d948],0xffffffa2
   1400198c1:	mov    DWORD PTR [rdi],edi
   1400198c3:	mov    cl,0xe4
   1400198c5:	(bad)  
   1400198c6:	sti    
   1400198c7:	(bad)  
   1400198c8:	jae    0x1400198b7
   1400198ca:	fbld   TBYTE PTR [rdx]
   1400198cc:	add    BYTE PTR [rbp+0x45],dl
   1400198cf:	(bad)
   1400198d2:	cmp    eax,0x7f60134c
   1400198d7:	sti    
   1400198d8:	sub    al,0xc7
   1400198da:	(bad)  
   1400198db:	pushf  
   1400198dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400198dd:	mov    esp,0x3f4d6dba
   1400198e2:	xchg   esi,eax
   1400198e3:	and    bl,BYTE PTR [rax-0x27]
   1400198e6:	stos   DWORD PTR es:[rdi],eax
   1400198e7:	add    BYTE PTR [rdx+rbp*4-0x759701cb],bh
   1400198ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400198ef:	pop    rbx
   1400198f0:	rex (bad) 
   1400198f2:	(bad)  
   1400198f3:	fld    QWORD PTR [rsi-0xc5959c5]
   1400198f9:	mov    WORD PTR [rax-0x2e],es
   1400198fc:	or     ebx,DWORD PTR [rip+0x2fd340dc]        # 0x16fd4d9de
   140019902:	int    0xf4
   140019904:	(bad)  
   140019905:	lods   al,BYTE PTR ds:[rsi]
   140019906:	lods   al,BYTE PTR ds:[rsi]
   140019907:	xchg   edi,eax
   140019908:	xlat   BYTE PTR ds:[rbx]
   140019909:	or     BYTE PTR [rcx-0x1b7cb20b],cl
   14001990f:	jrcxz  0x1400198f4
   140019911:	(bad)  
   140019912:	rcr    BYTE PTR [rbp+0xc],0x4
   140019916:	sar    BYTE PTR [rdx-0x618d1bff],cl
   14001991c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001991d:	sub    eax,0xffffff8a
   140019920:	rex.WRB add rax,0x54f21756
   140019926:	movabs al,ds:0xf2dcd0cf0c08bd34
   14001992f:	xchg   esp,eax
   140019930:	lea    edx,[rsi-0x42]
   140019933:	adc    cl,dh
   140019935:	rex.WRB shl QWORD PTR [r8],1
   140019938:	mov    BYTE PTR [rax],dh
   14001993a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001993b:	jns    0x14001992c
   14001993d:	(bad)  
   14001993e:	cmc    
   14001993f:	fadd   st(6),st
   140019941:	(bad)  
   140019942:	in     eax,0xce
   140019944:	test   eax,0xe006f406
   140019949:	mov    ch,0x96
   14001994b:	stc    
   14001994c:	xchg   ecx,eax
   14001994d:	pop    rsp
   14001994e:	(bad)  
   14001994f:	sub    BYTE PTR [rdi],bl
   140019951:	std    
   140019952:	hlt    
   140019953:	(bad)  
   140019954:	(bad)  
   140019955:	fimul  DWORD PTR [rdi+rdx*4]
   140019958:	jle    0x14001997f
   14001995a:	test   al,0x9e
   14001995c:	push   rax
   14001995d:	mov    ebx,0x896f9281
   140019962:	xchg   ebx,eax
   140019963:	addr32 pop rdx
   140019965:	gs xor bh,al
   140019968:	(bad)  
   140019969:	sub    BYTE PTR [rdx],bl
   14001996b:	data16 icebp 
   14001996d:	or     si,WORD PTR [rbp-0xc]
   140019971:	cld    
   140019972:	int    0x14
   140019974:	test   eax,0xa13d4867
   140019979:	cwde   
   14001997a:	vmovq  xmm2,QWORD PTR [rcx]
   14001997e:	(bad)  
   14001997f:	leave  
   140019980:	scas   eax,DWORD PTR es:[rdi]
   140019981:	push   0xffffffffc3308a6a
   140019986:	xlat   BYTE PTR ds:[rbx]
   140019987:	xor    edi,DWORD PTR [rbp+rcx*1+0x6b14f8]
   14001998e:	adc    cl,BYTE PTR [rip+0x6edb5a36]        # 0x1aedcf3ca
   140019994:	hlt    
   140019995:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019996:	out    0xfe,ax
   140019999:	(bad)  
   14001999a:	sbb    BYTE PTR [rdi+rbx*1+0x35cefae3],ch
   1400199a1:	rex.RX (bad) [rdi+0x197ed859]
   1400199a8:	mov    bh,0x77
   1400199aa:	add    edx,ebp
   1400199ac:	es sbb eax,0xf6da220a
   1400199b2:	cld    
   1400199b3:	rex.WXB and dil,r12b
   1400199b6:	mov    ah,0x9e
   1400199b8:	ficom  WORD PTR [rax-0x7998fbbc]
   1400199be:	sar    BYTE PTR [rax],0x80
   1400199c1:	popf   
   1400199c2:	and    DWORD PTR [rdi],ebx
   1400199c4:	pop    rbp
   1400199c5:	and    edx,DWORD PTR [rcx-0x6288fb6a]
   1400199cb:	out    0x5d,eax
   1400199cd:	retf   0x7007
   1400199d0:	xchg   esi,eax
   1400199d1:	pop    rsi
   1400199d2:	mov    edx,DWORD PTR [eax]
   1400199d5:	jg     0x1400199b0
   1400199d7:	add    ah,BYTE PTR [rcx]
   1400199d9:	fsubr  DWORD PTR [rdx]
   1400199db:	sbb    dl,BYTE PTR [r10-0x5]
   1400199df:	scas   eax,DWORD PTR es:[rdi]
   1400199e0:	mov    ebp,0x54067a9e
   1400199e5:	fcmovb st,st(5)
   1400199e7:	and    edx,0xb
   1400199ea:	icebp  
   1400199eb:	add    BYTE PTR [rip+0xffffffff98451d32],ah        # 0xd846b723
   1400199f1:	outs   dx,DWORD PTR ds:[rsi]
   1400199f2:	adc    DWORD PTR [rsi-0x2f],ecx
   1400199f5:	mov    BYTE PTR [rax+rax*2],ah
   1400199f8:	mov    al,0x33
   1400199fa:	rex.WRB movabs r8,0xd9b38a0a0c92c3a3
   140019a04:	add    eax,0x3d502239
   140019a09:	test   BYTE PTR [rcx],0xb9
   140019a0c:	clc    
   140019a0d:	(bad)  
   140019a0e:	jg     0x1400199ba
   140019a10:	(bad)  
   140019a11:	(bad)  
   140019a12:	sbb    DWORD PTR [rdi+0x48],esi
   140019a15:	sbb    dl,al
   140019a17:	sbb    eax,DWORD PTR [rax-0x6e25ad29]
   140019a1d:	pop    rsp
   140019a1e:	mov    ecx,0x2f99e759
   140019a23:	jl     0x140019a1a
   140019a25:	retf   
   140019a26:	jle    0x1400199e4
   140019a28:	hlt    
   140019a29:	fild   QWORD PTR [rax+0x3910b2c8]
   140019a2f:	out    0x9a,al
   140019a31:	adc    eax,0x6bb1d63d
   140019a36:	or     esi,DWORD PTR [rdi]
   140019a38:	fwait
   140019a39:	movabs al,ds:0x3423ac38d501a1d4
   140019a42:	xor    rax,QWORD PTR [rbx+0x13]
   140019a46:	popf   
   140019a47:	mov    bh,0x9e
   140019a49:	loope  0x140019ab1
   140019a4b:	sti    
   140019a4c:	(bad)  
   140019a4d:	neg    BYTE PTR [rbx-0x12]
   140019a50:	lahf   
   140019a51:	cmp    eax,0x8d614d7f
   140019a56:	cmp    eax,0xf2add4d2
   140019a5b:	xchg   DWORD PTR [rsi],esp
   140019a5d:	scas   eax,DWORD PTR es:[rdi]
   140019a5e:	clc    
   140019a5f:	xchg   ebx,eax
   140019a60:	push   0x66
   140019a62:	lea    ebp,[rbx]
   140019a64:	xchg   ecx,eax
   140019a65:	sti    
   140019a66:	(bad)  
   140019a67:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019a68:	adc    edi,eax
   140019a6a:	fisub  WORD PTR [rbp+0x3adf1c73]
   140019a70:	rex.WB jns 0x140019ad8
   140019a73:	or     ebp,edx
   140019a75:	jge    0x140019a09
   140019a77:	or     ecx,DWORD PTR [rbp+0x40]
   140019a7a:	(bad)  
   140019a7b:	sub    DWORD PTR [rsi-0x5],eax
   140019a7e:	adc    eax,0x7fccd228
   140019a83:	ficomp DWORD PTR [rdi+rdi*1-0x32]
   140019a87:	repz imul edx,DWORD PTR [rip+0x24028da7],0xffffff87        # 0x164042836
   140019a8f:	loope  0x140019afa
   140019a91:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019a92:	sbb    eax,0x4ce617b3
   140019a97:	push   rbx
   140019a98:	adc    al,0x60
   140019a9a:	(bad)  
   140019a9b:	sbb    cl,BYTE PTR [rip+0xfffffffff6fcf649]        # 0x136fe90ea
   140019aa1:	fimul  WORD PTR [rax]
   140019aa3:	(bad)  
   140019aa4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019aa5:	inc    BYTE PTR [rax+0x37c7ee14]
   140019aab:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019aac:	or     BYTE PTR ds:[rax+0x7],0x4e
   140019ab1:	stos   DWORD PTR es:[rdi],eax
   140019ab2:	(bad)  
   140019ab3:	sub    ebp,ebp
   140019ab5:	pop    rsi
   140019ab6:	sub    eax,0x7c354f8f
   140019abb:	mov    edi,DWORD PTR [rsi]
   140019abd:	and    dh,BYTE PTR [rdx]
   140019abf:	or     DWORD PTR [rax],edi
   140019ac1:	int    0x95
   140019ac3:	mov    BYTE PTR [rsi-0x14],dl
   140019ac6:	add    BYTE PTR [rbx+0x318efe7],dl
   140019acc:	and    eax,0xeada5fee
   140019ad1:	(bad)  
   140019ad2:	(bad)  
   140019ad3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019ad4:	xchg   ebx,eax
   140019ad5:	out    0x80,eax
   140019ad7:	call   FWORD PTR [rcx-0x17f2dbc5]
   140019add:	mov    ebx,0x792b5f01
   140019ae2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019ae3:	repnz push rdi
   140019ae5:	outs   dx,DWORD PTR ds:[rsi]
   140019ae6:	stc    
   140019ae7:	ficomp WORD PTR [rdi]
   140019ae9:	clc    
   140019aea:	icebp  
   140019aeb:	ror    edx,0xea
   140019aee:	scas   eax,DWORD PTR es:[rdi]
   140019aef:	adc    al,0xa5
   140019af1:	pop    rdi
   140019af2:	scas   al,BYTE PTR es:[rdi]
   140019af3:	or     al,BYTE PTR [rdi-0x17]
   140019af6:	test   DWORD PTR [rcx-0x57a1ab89],eax
   140019afc:	pushf  
   140019afd:	push   rax
   140019afe:	jns    0x140019ac1
   140019b00:	adc    eax,0x8fc5cf2e
   140019b05:	mov    esi,DWORD PTR [rbx+0x28]
   140019b08:	sbb    ch,BYTE PTR [rdx-0x4c]
   140019b0b:	cdq    
   140019b0c:	movabs ds:0x3209ea109b3094f5,al
   140019b15:	fisttp QWORD PTR [rbx-0x8b08bb5]
   140019b1b:	sub    dl,ch
   140019b1d:	push   0x3ed9ca04
   140019b22:	cmp    DWORD PTR [rdx-0x61],0xffffffaa
   140019b26:	sahf   
   140019b27:	push   rax
   140019b28:	(bad)  
   140019b29:	push   rbx
   140019b2a:	pop    rsp
   140019b2b:	cmp    eax,0x7afff58b
   140019b30:	(bad)  
   140019b31:	scas   eax,DWORD PTR es:[rdi]
   140019b32:	and    edx,DWORD PTR [rcx]
   140019b34:	enter  0x11d5,0x17
   140019b38:	rex.W jl 0x140019b3b
   140019b3b:	(bad)  
   140019b3c:	frstor [rdi-0x4a]
   140019b3f:	jbe    0x140019ad5
   140019b41:	(bad)  
   140019b42:	std    
   140019b43:	outs   dx,BYTE PTR ds:[rsi]
   140019b45:	fidivr WORD PTR [rax+0x5eb70ca]
   140019b4b:	(bad)  
   140019b4c:	mov    bh,0xce
   140019b4e:	and    BYTE PTR [rbx+0x531a5037],bh
   140019b54:	lods   al,BYTE PTR ds:[rsi]
   140019b55:	test   al,0x44
   140019b57:	test   eax,0xe6d3d8d7
   140019b5c:	dec    BYTE PTR [rcx]
   140019b5e:	xor    al,0xcb
   140019b60:	retf   0x21dd
   140019b63:	sti    
   140019b64:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019b65:	(bad)  
   140019b66:	add    BYTE PTR [rdx+0x1ceef77],dh
   140019b6c:	mov    edi,cs
   140019b6e:	jns    0x140019b07
   140019b70:	sub    al,BYTE PTR [rbx]
   140019b72:	or     DWORD PTR [rax-0x6b2f5fcd],ecx
   140019b78:	sub    cl,BYTE PTR [rbx-0x61a10d3a]
   140019b7e:	or     DWORD PTR [rax-0x27cafb5a],ebx
   140019b84:	(bad)  
   140019b85:	and    BYTE PTR [rbx-0x6],dl
   140019b88:	xor    al,0xf
   140019b8a:	add    BYTE PTR [rdx+rcx*4],cl
   140019b8d:	xchg   esp,eax
   140019b8e:	rex.WRX stos BYTE PTR es:[rdi],al
   140019b90:	shr    DWORD PTR [rsi+0x4c],1
   140019b93:	jmp    0x16bcf1b12
   140019b98:	(bad)  
   140019b99:	addr32 mov esp,0xd20f1d22
   140019b9f:	sahf   
   140019ba0:	movsxd ebp,DWORD PTR [rdx-0x63358a07]
   140019ba6:	stc    
   140019ba7:	imul   esi,DWORD PTR [rbx+0xfea4313],0x3697957c
   140019bb1:	imul   ebx,DWORD PTR [rcx],0x8f13079c
   140019bb7:	xlat   BYTE PTR ds:[rbx]
   140019bb8:	xchg   ebp,eax
   140019bb9:	hlt    
   140019bba:	(bad)  
   140019bbb:	loopne 0x140019b72
   140019bbd:	nop
   140019bbe:	jns    0x140019ba5
   140019bc0:	(bad)  
   140019bc1:	sub    edx,0xc1fe5fad
   140019bc7:	(bad)  
   140019bc8:	pop    rbp
   140019bc9:	cs cs std 
   140019bcc:	jne    0x140019bdf
   140019bce:	sbb    DWORD PTR [rdx+rdi*4-0x17],eax
   140019bd2:	jl     0x140019bac
   140019bd4:	or     DWORD PTR [rax+0x684a0842],eax
   140019bda:	xchg   esp,eax
   140019bdb:	mov    edx,0x9a9a4c09
   140019be0:	mov    edx,0x299a69a9
   140019be5:	pop    rdx
   140019be6:	rex.WRXB rcr r9b,1
   140019be9:	(bad)  
   140019bea:	cwde   
   140019beb:	loop   0x140019be8
   140019bed:	jmp    0x18fb81a20
   140019bf2:	xor    ebx,ebx
   140019bf4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019bf5:	cwde   
   140019bf6:	rex.WRB test al,0xea
   140019bf9:	jge    0x140019c01
   140019bfb:	cmc    
   140019bfc:	test   BYTE PTR [rdx+0x62cc529e],dh
   140019c02:	or     eax,edx
   140019c04:	iret   
   140019c05:	div    BYTE PTR [rcx-0x4d]
   140019c08:	mov    BYTE PTR [rbx],cl
   140019c0a:	enter  0x826c,0x9f
   140019c0e:	(bad)
   140019c11:	xor    eax,0x2869ae0d
   140019c16:	(bad)  
   140019c17:	sbb    ecx,eax
   140019c19:	(bad)  
   140019c1a:	in     al,dx
   140019c1b:	(bad)  
   140019c1c:	hlt    
   140019c1d:	xor    al,0x52
   140019c1f:	adc    al,0xec
   140019c21:	pop    rdi
   140019c22:	fldenv [rdx-0x1d]
   140019c25:	ret    0x940b
   140019c28:	xlat   BYTE PTR ds:[rbx]
   140019c29:	mov    dh,0xa1
   140019c2b:	fxch   st(7)
   140019c2d:	loope  0x140019cae
   140019c2f:	bnd jle 0x140019c37
   140019c32:	in     eax,dx
   140019c33:	cli    
   140019c34:	fsubr  DWORD PTR [rcx-0x16]
   140019c37:	out    dx,eax
   140019c38:	pop    rsp
   140019c39:	(bad)  
   140019c3a:	pop    rdi
   140019c3b:	sub    bh,cl
   140019c3d:	jne    0x140019c54
   140019c3f:	ret    
   140019c40:	pop    rsi
   140019c41:	rex.WRXB (bad) 
   140019c43:	xchg   ebx,eax
   140019c44:	ds and al,0xa7
   140019c47:	cmp    al,bh
   140019c49:	(bad)  
   140019c4a:	and    al,0x7a
   140019c4c:	outs   dx,DWORD PTR ds:[rsi]
   140019c4d:	in     eax,dx
   140019c4e:	hlt    
   140019c4f:	icebp  
   140019c50:	(bad)  
   140019c51:	and    BYTE PTR [rbp+0x4f62f605],ah
   140019c57:	xchg   ebx,eax
   140019c58:	add    DWORD PTR [r11+riz*2-0x60],r8d
   140019c5d:	rex.B ins BYTE PTR es:[rdi],dx
   140019c5f:	sbb    BYTE PTR [rax+0x5c4a3cb],dl
   140019c65:	mov    dl,0xef
   140019c67:	push   rbp
   140019c68:	xor    al,0x2b
   140019c6a:	test   al,0x38
   140019c6c:	leave  
   140019c6d:	fisttp DWORD PTR [rsi-0x3c]
   140019c70:	(bad)  
   140019c71:	rex.XB (bad) 
   140019c73:	int    0x0
   140019c75:	push   0x458056bb
   140019c7a:	xor    al,0xa4
   140019c7c:	mov    ecx,0x5d1b483
   140019c81:	je     0x140019c49
   140019c83:	xchg   BYTE PTR [rdi+0x3a50260a],ah
   140019c89:	cmp    eax,0xfcb97ef1
   140019c8e:	sub    al,0x77
   140019c90:	mov    rsi,QWORD PTR [rax-0x61]
   140019c94:	add    bh,BYTE PTR [rdx+rbx*8+0x7fe50b72]
   140019c9b:	fcomi  st,st(7)
   140019c9d:	std    
   140019c9e:	lock rex.WRXB (bad) 
   140019ca1:	movabs ds:0xa218029489a0cfd1,eax
   140019caa:	(bad)  
   140019cab:	add    BYTE PTR [rip+0xffffffffe951a34a],cl        # 0x129533ffb
   140019cb1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019cb2:	rex.WRB movabs al,ds:0x506669a1a6ea6bae
   140019cbc:	rex.WRXB movabs ds:0x7c13d712a24d9ff7,rax
   140019cc6:	push   0xfffffffff0f44df0
   140019ccb:	rex.RB cmp eax,0xcfb030a5
   140019cd1:	xlat   BYTE PTR ds:[rbx]
   140019cd2:	xchg   ecx,eax
   140019cd3:	loop   0x140019cc0
   140019cd5:	push   rdx
   140019cd6:	rex.WRXB jg 0x140019cf6
   140019cd9:	leave  
   140019cda:	(bad)  
   140019cdb:	imul   edi,DWORD PTR [rdi+rsi*1+0x533fc09a],0xeec67a80
   140019ce6:	movabs eax,ds:0x75cee6e09d0f2827
   140019cef:	rex.RX pop rbx
   140019cf1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019cf2:	pop    rax
   140019cf3:	mov    esp,0x77b70678
   140019cf8:	sbb    eax,0x929f2cc2
   140019cfd:	movabs al,ds:0x514b9c06bcfebb9
   140019d06:	nop
   140019d07:	(bad)  
   140019d08:	je     0x140019cdb
   140019d0a:	fstp   TBYTE PTR [rdx+0x4d4d9344]
   140019d10:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019d12:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019d13:	popf   
   140019d14:	lock mov esi,0x8b24db25
   140019d1a:	rol    BYTE PTR [rcx],1
   140019d1c:	add    ch,cl
   140019d1e:	sbb    esi,DWORD PTR [rdi+0x635b8413]
   140019d24:	xchg   ecx,eax
   140019d25:	xchg   esp,eax
   140019d26:	mov    eax,0x44297cd
   140019d2b:	add    DWORD PTR [rbp-0x7dbfb63a],edi
   140019d31:	xchg   ebp,eax
   140019d32:	add    ch,ch
   140019d34:	(bad)  [rcx+0x2a]
   140019d37:	push   rax
   140019d38:	rcl    cl,cl
   140019d3a:	(bad)  
   140019d3b:	repz out dx,eax
   140019d3d:	add    BYTE PTR [rax-0x6f],bh
   140019d40:	adc    BYTE PTR [rsi+riz*4-0x3cda3b18],ah
   140019d47:	pop    rsp
   140019d48:	pop    rsp
   140019d49:	xor    al,0xb4
   140019d4b:	scas   al,BYTE PTR es:[rdi]
   140019d4c:	sbb    DWORD PTR [rcx],0xffffffac
   140019d4f:	pop    rax
   140019d50:	in     eax,dx
   140019d51:	xor    BYTE PTR [rax],dl
   140019d53:	fs scas al,BYTE PTR es:[rdi]
   140019d55:	je     0x140019d91
   140019d57:	(bad)  
   140019d58:	fistp  DWORD PTR [rbx+0x39]
   140019d5b:	adc    BYTE PTR [rip+0x3be4e88e],dl        # 0x17be685ef
   140019d61:	mov    ecx,0xbd01aa43
   140019d66:	add    DWORD PTR [rax+0x35],edi
   140019d69:	gs (bad) 
   140019d6b:	in     eax,dx
   140019d6c:	iret   
   140019d6d:	sahf   
   140019d6e:	mov    edi,0x367f8d18
   140019d73:	mov    dh,0xd9
   140019d75:	(bad)  
   140019d76:	(bad)  
   140019d77:	or     dl,BYTE PTR [rsi]
   140019d79:	fisub  WORD PTR [rbx+0x79]
   140019d7c:	mov    esi,0xa61a6d32
   140019d81:	mov    bl,0xc0
   140019d83:	lods   al,BYTE PTR ds:[rsi]
   140019d84:	cdq    
   140019d85:	push   rdx
   140019d86:	(bad)  
   140019d87:	adc    eax,esp
   140019d89:	sar    DWORD PTR [rdx-0x7a],cl
   140019d8c:	(bad)  
   140019d8d:	push   rsi
   140019d8e:	(bad)  
   140019d8f:	lahf   
   140019d90:	in     eax,dx
   140019d91:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140019d93:	outs   dx,BYTE PTR ds:[rsi]
   140019d94:	mov    BYTE PTR [rsi-0x3cd60851],bh
   140019d9a:	mov    WORD PTR [rdx+0x1f3eec8e],fs
   140019da0:	(bad)  
   140019da1:	enter  0x6bf2,0x6a
   140019da5:	pushf  
   140019da6:	(bad)  
   140019da7:	jo     0x140019df6
   140019da9:	movsxd ebx,DWORD PTR [rdi+rdi*2-0x65]
   140019dad:	repnz imul esp,ebp,0xffffffbf
   140019db1:	(bad)  
   140019db2:	pop    rax
   140019db3:	and    eax,DWORD PTR [rsi+0x75]
   140019db6:	or     DWORD PTR [rdi],ecx
   140019db8:	or     DWORD PTR ds:[rsi-0xc1d109c],edi
   140019dbf:	sbb    al,0xbb
   140019dc1:	jo     0x140019d55
   140019dc3:	(bad)  
   140019dc4:	(bad)  
   140019dc5:	add    eax,0xb4a2ee98
   140019dca:	adc    eax,0xc4294102
   140019dcf:	(bad)
   140019dd2:	pushf  
   140019dd3:	in     al,0xda
   140019dd5:	jg     0x140019d72
   140019dd7:	add    bh,BYTE PTR [rax+0xa2d19e8]
   140019ddd:	lock and al,0x5
   140019de0:	add    edi,DWORD PTR es:[rsi+rcx*2+0x12]
   140019de5:	xor    al,bl
   140019de7:	add    al,BYTE PTR [rax-0x19f9187]
   140019ded:	iret   
   140019dee:	and    al,0x67
   140019df0:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019df2:	hlt    
   140019df3:	imul   esi,DWORD PTR [rbp-0x318dbe1],0x97385a76
   140019dfd:	imul   edx,DWORD PTR [rcx+rbx*1],0x23
   140019e01:	mov    BYTE PTR [rcx-0x2a1f9586],bh
   140019e07:	pushf  
   140019e08:	(bad)  
   140019e09:	and    al,0x2d
   140019e0b:	adc    r15,QWORD PTR [rsi+0x54]
   140019e0f:	rex.X
   140019e10:	cs push rbx
   140019e12:	es cmp al,0x20
   140019e15:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019e16:	(bad)  
   140019e17:	pop    rsi
   140019e18:	jo     0x140019e3b
   140019e1a:	(bad)  
   140019e1b:	add    BYTE PTR [rax+0x3],dl
   140019e1e:	(bad)  
   140019e1f:	pop    rbx
   140019e20:	xor    eax,0x8d1a474e
   140019e25:	mov    ebx,edx
   140019e27:	(bad)  
   140019e28:	adc    BYTE PTR [rdi+rax*8-0x26196dcf],cl
   140019e2f:	out    dx,eax
   140019e30:	xlat   BYTE PTR ds:[rbx]
   140019e31:	xchg   edi,eax
   140019e32:	(bad)  
   140019e33:	(bad)  
   140019e34:	xor    edi,esi
   140019e36:	mov    edi,0x7d01abee
   140019e3b:	or     dh,al
   140019e3d:	push   0xffffffffffffffc9
   140019e3f:	sub    eax,0xcb78e016
   140019e44:	idiv   ebp
   140019e46:	xchg   ecx,eax
   140019e47:	lahf   
   140019e48:	sub    BYTE PTR [rdi+0xb],al
   140019e4b:	(bad)  
   140019e4c:	(bad)
   140019e50:	rex.X enter 0xf7f5,0x18
   140019e55:	loop   0x140019e5e
   140019e57:	es jne 0x140019e1d
   140019e5a:	out    dx,al
   140019e5b:	mov    ah,0x66
   140019e5d:	outs   dx,DWORD PTR ds:[rsi]
   140019e5e:	xor    ah,BYTE PTR [rbx+0x7f]
   140019e61:	mov    dh,0x4f
   140019e63:	cwde   
   140019e64:	out    dx,al
   140019e65:	movabs ds:0xf8bb260f74c25d93,eax
   140019e6e:	leave  
   140019e6f:	(bad)  
   140019e70:	(bad)  
   140019e73:	in     eax,0x74
   140019e75:	(bad)  
   140019e76:	mov    dl,0xde
   140019e78:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019e79:	pushf  
   140019e7a:	in     eax,dx
   140019e7b:	push   rbx
   140019e7c:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   140019e7e:	xor    bl,BYTE PTR [rsi+rbp*8+0x29f74e53]
   140019e85:	addr32 push rsi
   140019e87:	add    DWORD PTR [rax-0x676e6612],ebx
   140019e8d:	loopne 0x140019e36
   140019e8f:	push   rbx
   140019e90:	fsubr  QWORD PTR [rdx+rcx*4-0x2c]
   140019e94:	push   rbx
   140019e95:	fs (bad) 
   140019e97:	rex.WXB test r9b,sil
   140019e9a:	out    dx,eax
   140019e9b:	cmp    dl,BYTE PTR [rdi-0x3d8b2300]
   140019ea1:	(bad)  
   140019ea2:	loope  0x140019e2b
   140019ea4:	or     bh,dh
   140019ea6:	cmp    eax,0xab8dceca
   140019eab:	or     al,0xb6
   140019ead:	pop    rdi
   140019eae:	fs jmp 0x11db9ea86
   140019eb4:	sbb    esp,DWORD PTR [rax-0x6b52c18b]
   140019eba:	retf   
   140019ebb:	(bad)  
   140019ebc:	(bad)  
   140019ebd:	jns    0x140019f3e
   140019ebf:	(bad)
   140019ec4:	mov    ah,0x52
   140019ec6:	sbb    ah,BYTE PTR [rbx+0x79]
   140019ec9:	jo     0x140019e55
   140019ecb:	cs xor r11b,bpl
   140019ecf:	push   rsi
   140019ed0:	xchg   edx,eax
   140019ed1:	jb     0x140019e78
   140019ed3:	not    DWORD PTR [rcx-0xc0c928e]
   140019ed9:	popf   
   140019eda:	rex.B sbb al,0x92
   140019edd:	ret    0x6efe
   140019ee0:	cli    
   140019ee1:	fadd   QWORD PTR [rdx-0x4]
   140019ee4:	push   rcx
   140019ee5:	xchg   ebx,eax
   140019ee6:	push   rdx
   140019ee7:	imul   esp,DWORD PTR [rcx+rsi*4],0xff0ed075
   140019eee:	(bad)  
   140019ef0:	(bad)  
   140019ef1:	(bad)  
   140019ef2:	sbb    edx,DWORD PTR [rbx+0x7513a051]
   140019ef8:	in     al,0x78
   140019efa:	mov    esi,0x122e3073
   140019eff:	xchg   ebx,eax
   140019f00:	repnz (bad) 
   140019f02:	loopne 0x140019ed2
   140019f04:	stc    
   140019f05:	(bad)  
   140019f06:	fnsave [rbp-0x5a]
   140019f09:	sub    eax,0x45b4c8f9
   140019f0e:	sub    DWORD PTR [rdx-0xb],edx
   140019f11:	and    BYTE PTR [rdx],bl
   140019f13:	rex cmp eax,0xfed911f1
   140019f19:	add    BYTE PTR [rdi+0x40],dh
   140019f1c:	sbb    dl,al
   140019f1e:	rex.RXB add BYTE PTR [r15-0x169d237a],r13b
   140019f25:	lods   eax,DWORD PTR ds:[rsi]
   140019f26:	(bad)  
   140019f27:	jg     0x140019f1a
   140019f29:	ud0    edx,DWORD PTR [rcx+0x2fe96172]
   140019f30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019f31:	enter  0xb631,0xa8
   140019f35:	(bad)  
   140019f36:	(bad)  
   140019f37:	jns    0x140019f35
   140019f39:	pop    rcx
   140019f3a:	adc    ebx,DWORD PTR [rax-0x56457e2b]
   140019f40:	cdq    
   140019f41:	(bad)  
   140019f42:	or     eax,0x334299a1
   140019f47:	and    eax,ebx
   140019f49:	push   0x734cd72e
   140019f4e:	jmp    0x140019efe
   140019f50:	imul   edx,DWORD PTR [rdx-0x58],0x5f
   140019f54:	push   rbx
   140019f55:	sbb    al,BYTE PTR [rax-0x54ecbc19]
   140019f5b:	add    BYTE PTR [rbp+0xc],dh
   140019f5e:	stc    
   140019f5f:	jge    0x140019f94
   140019f61:	add    ebp,DWORD PTR [rbx-0xe]
   140019f64:	rex.WB mov r13b,0xfe
   140019f67:	xor    al,0xe5
   140019f69:	(bad)  
   140019f6a:	sub    cl,BYTE PTR [rbp-0x38]
   140019f6d:	retf   0x2123
   140019f70:	jb     0x140019f70
   140019f72:	outs   dx,DWORD PTR ds:[rsi]
   140019f73:	ds repnz (bad) 
   140019f76:	pushf  
   140019f77:	(bad)  
   140019f78:	cdq    
   140019f79:	pop    rsi
   140019f7a:	mov    ecx,0x53adb1c0
   140019f7f:	xchg   esp,eax
   140019f80:	xchg   edi,eax
   140019f81:	mov    bh,0xa0
   140019f83:	fimul  WORD PTR [rbx+0x3d59814b]
   140019f89:	cmp    al,0x87
   140019f8b:	push   rsi
   140019f8d:	xchg   ebx,eax
   140019f8e:	push   rax
   140019f8f:	jg     0x140019f30
   140019f91:	movabs ds:0xf792f2b3b42ba367,al
   140019f9a:	(bad)  
   140019f9b:	loop   0x140019fed
   140019f9d:	(bad)  
   140019f9e:	cmp    DWORD PTR [rdx],esp
   140019fa0:	mov    eax,0x537edb19
   140019fa5:	xor    al,0xd0
   140019fa7:	rol    DWORD PTR [rcx],0xba
   140019faa:	xlat   BYTE PTR ds:[rbx]
   140019fab:	xor    ebp,ecx
   140019fad:	sub    dh,BYTE PTR gs:[rax+0x54ef8565]
   140019fb4:	add    eax,0x70607752
   140019fb9:	and    BYTE PTR [rbp+0x6b],cl
   140019fbc:	cmp    BYTE PTR [rsp+rax*2],al
   140019fbf:	sbb    eax,0xf3c5c1a
   140019fc4:	loop   0x14001a044
   140019fc6:	adc    al,BYTE PTR [rdi-0x1cc8cb21]
   140019fcc:	sbb    bh,BYTE PTR [rax]
   140019fce:	leave  
   140019fcf:	ror    DWORD PTR [rsi+0x349838b8],1
   140019fd5:	sub    eax,0x8c7ce266
   140019fda:	shl    BYTE PTR [rdx],1
   140019fdc:	jns    0x14001a026
   140019fde:	(bad)  
   140019fdf:	jmp    0xfa9e110c
   140019fe4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019fe5:	fldcw  WORD PTR cs:[rbp+0x4d23c6db]
   140019fec:	or     ebx,ecx
   140019fee:	fs repnz sbb al,0xf0
   140019ff2:	iret   
   140019ff3:	jns    0x140019f92
   140019ff5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019ff6:	add    DWORD PTR [rbp-0x357c07ff],edi
   140019ffc:	sub    eax,0xf93ff0e6
   14001a001:	mov    ecx,0xb86e7f2f
   14001a006:	mov    eax,0x683437fc
   14001a00b:	add    DWORD PTR [rcx],ebp
   14001a00d:	(bad)  
   14001a00e:	sqrtps xmm6,xmm1
   14001a011:	jmp    0x140019fd3
   14001a013:	lods   al,BYTE PTR ds:[rsi]
   14001a014:	mov    DWORD PTR [rdx-0x596565e1],ecx
   14001a01a:	cdq    
   14001a01b:	rex.RB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a01d:	mov    bh,0x3c
   14001a01f:	(bad)  
   14001a021:	xor    edi,DWORD PTR [rbx+rsi*1-0x67]
   14001a025:	push   rbx
   14001a026:	in     al,dx
   14001a027:	movabs ds:0xbce9137c53365299,al
   14001a030:	scas   al,BYTE PTR es:[rdi]
   14001a031:	mov    dh,0xd9
   14001a033:	jge    0x14001a02b
   14001a035:	fsub   DWORD PTR [rbp-0x6f97a10e]
   14001a03b:	cmp    dh,ch
   14001a03d:	imul   DWORD PTR [rbx-0x34]
   14001a040:	stc    
   14001a041:	sub    eax,0x3fa54e34
   14001a046:	adc    ecx,eax
   14001a048:	int    0xf6
   14001a04a:	mov    ecx,0x70d3c0fe
   14001a04f:	jmp    QWORD PTR [rbx+0x635cedec]
   14001a055:	mov    eax,0xada59a75
   14001a05a:	(bad)  
   14001a05b:	jno    0x14001a018
   14001a05d:	push   rdi
   14001a05e:	sub    eax,0x4cacd7f7
   14001a063:	rex.WRX movabs rax,ds:0xfcceec93b1a78714
   14001a06d:	out    dx,eax
   14001a06e:	cmp    BYTE PTR [rbx-0x26],dl
   14001a071:	(bad)  
   14001a072:	sub    DWORD PTR [rdi-0x61],edi
   14001a075:	rex.WXB in eax,dx
   14001a077:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a078:	repz pop rsp
   14001a07a:	jle    0x14001a00b
   14001a07c:	xor    eax,0x5cff30dd
   14001a081:	sbb    esp,DWORD PTR [rax+0x77]
   14001a084:	jrcxz  0x14001a006
   14001a086:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a087:	loope  0x14001a032
   14001a089:	sbb    DWORD PTR [rdi],eax
   14001a08b:	fwait
   14001a08c:	adc    al,0xec
   14001a08e:	ins    BYTE PTR es:[rdi],dx
   14001a08f:	xchg   BYTE PTR [rax+0x76bcdae6],ah
   14001a095:	sti    
   14001a096:	(bad)  
   14001a097:	adc    ch,BYTE PTR [rbx]
   14001a099:	lock push rsi
   14001a09b:	loop   0x14001a101
   14001a09d:	jle    0x14001a026
   14001a09f:	jmp    0x182e112dc
   14001a0a4:	push   rsp
   14001a0a5:	inc    dh
   14001a0a7:	(bad)  
   14001a0a8:	or     eax,0xf32efb51
   14001a0ad:	push   0x9392ce0
   14001a0b2:	leave  
   14001a0b3:	(bad)
   14001a0b8:	(bad)  
   14001a0b9:	mov    ah,0x8
   14001a0bb:	test   DWORD PTR [rsi],0xb7220fe0
   14001a0c1:	cwde   
   14001a0c2:	ret    
   14001a0c3:	jg     0x14001a0a7
   14001a0c5:	mov    ecx,0x2fd07fcf
   14001a0ca:	scas   al,BYTE PTR es:[rdi]
   14001a0cb:	(bad)  
   14001a0cc:	shl    BYTE PTR [rsp+rax*4],cl
   14001a0cf:	(bad)  
   14001a0d0:	rex.W loopne 0x14001a131
   14001a0d3:	rex.RXB jmp 0x1637dfc44
   14001a0d9:	or     eax,0xe299a4e4
   14001a0de:	xchg   bx,ax
   14001a0e0:	cmp    BYTE PTR [rbp-0x4ec2ff29],dl
   14001a0e6:	jmp    0x1bb1326a7
   14001a0eb:	jl     0x14001a10a
   14001a0ed:	jmp    0x14001a0ea
   14001a0ef:	adc    dl,BYTE PTR [rdx+0x19]
   14001a0f2:	iret   
   14001a0f3:	cmp    bh,bl
   14001a0f5:	jb     0x14001a172
   14001a0f7:	outs   dx,DWORD PTR ds:[rsi]
   14001a0f8:	mov    ebx,0x22689794
   14001a0fd:	(bad)  
   14001a0fe:	sub    BYTE PTR [rcx-0x30],bh
   14001a101:	xchg   DWORD PTR [rdx-0x3a],esp
   14001a104:	and    dh,bh
   14001a106:	push   rsi
   14001a107:	push   rdi
   14001a108:	jo     0x14001a0fd
   14001a10a:	mov    cl,0x77
   14001a10c:	sub    BYTE PTR [rdi],0xd8
   14001a10f:	fstp   TBYTE PTR [rsi]
   14001a111:	retf   
   14001a112:	jge    0x14001a12b
   14001a114:	pop    rdi
   14001a115:	movabs al,ds:0x20a463f6cc85baba
   14001a11e:	test   eax,0x3d951eb4
   14001a123:	scas   al,BYTE PTR es:[rdi]
   14001a124:	cmc    
   14001a125:	(bad)  
   14001a126:	js     0x14001a131
   14001a128:	xchg   ecx,eax
   14001a129:	add    al,0xe4
   14001a12b:	push   rdx
   14001a12c:	in     al,0xdc
   14001a12e:	push   0x78
   14001a130:	pop    rsp
   14001a131:	sbb    ch,BYTE PTR [rbp+rbp*1+0x5da7c5f3]
   14001a138:	(bad)  
   14001a139:	cmc    
   14001a13a:	pop    rbx
   14001a13b:	movabs ds:0x16cf7d0dfffb070,eax
   14001a144:	shl    BYTE PTR [rsi],cl
   14001a146:	in     eax,dx
   14001a147:	lahf   
   14001a148:	sbb    al,0xc6
   14001a14a:	rex.XB pushf 
   14001a14c:	or     cl,BYTE PTR [rsi+rcx*2]
   14001a14f:	ins    DWORD PTR es:[rdi],dx
   14001a150:	sub    dl,BYTE PTR [rax-0x80]
   14001a153:	rol    BYTE PTR [rax+rdi*4+0x604b80ce],1
   14001a15a:	popf   
   14001a15b:	cmp    BYTE PTR [rdx],0x3b
   14001a15e:	test   DWORD PTR [rsi+0x29],0xdbb65351
   14001a165:	rex.WRX stc 
   14001a167:	add    eax,0x4e60f2e2
   14001a16c:	loop   0x14001a139
   14001a16e:	imul   edx,DWORD PTR [rip+0x4dc63a61],0xff10fa52        # 0x18dc7dbd9
   14001a178:	rex.WB
   14001a179:	repz add DWORD PTR [rax-0x364319c8],edx
   14001a180:	(bad)  
   14001a181:	mov    ch,BYTE PTR [rax+0x14]
   14001a184:	sbb    al,0x31
   14001a186:	pop    rdx
   14001a187:	lock call 0x116ea715e
   14001a18d:	xchg   DWORD PTR [rsi-0x7d],edi
   14001a190:	movsxd edi,edi
   14001a192:	test   bh,dl
   14001a194:	xor    DWORD PTR [rcx],ebp
   14001a196:	test   al,0x37
   14001a198:	add    BYTE PTR [rdi-0x151066a1],bh
   14001a19e:	repz rex mov ecx,0xbd0faef1
   14001a1a5:	leave  
   14001a1a6:	sub    eax,0xbd9dfead
   14001a1ab:	imul   esi,DWORD PTR [rbx-0x65ef2f22],0xb60fd5c8
   14001a1b5:	fisubr DWORD PTR [rsi-0x55138aca]
   14001a1bb:	xor    esp,DWORD PTR [rip+0xffffffff9f56b977]        # 0xdf585b38
   14001a1c1:	cmp    dh,dh
   14001a1c3:	and    bh,BYTE PTR [rbx-0x51]
   14001a1c6:	ins    BYTE PTR es:[rdi],dx
   14001a1c7:	pop    rdx
   14001a1c8:	out    dx,eax
   14001a1c9:	out    dx,eax
   14001a1ca:	fwait
   14001a1cb:	adc    BYTE PTR [rip+0xffffffffedf7427e],bh        # 0x12df8e44f
   14001a1d1:	rex.RXB mov r8d,fs
   14001a1d4:	jrcxz  0x14001a170
   14001a1d6:	mov    dl,dh
   14001a1d8:	out    0xf6,eax
   14001a1da:	push   rdi
   14001a1db:	ins    DWORD PTR es:[rdi],dx
   14001a1dc:	mov    DWORD PTR [rsi],edi
   14001a1de:	cmp    DWORD PTR [rdx],ecx
   14001a1e0:	cmp    QWORD PTR [rax],rsi
   14001a1e3:	mov    dl,ah
   14001a1e5:	push   rbx
   14001a1e6:	scas   al,BYTE PTR es:[rdi]
   14001a1e7:	cmp    eax,0xfb9a16fc
   14001a1ec:	(bad)  
   14001a1ed:	movsxd esi,DWORD PTR [rsi-0x3]
   14001a1f0:	sub    ah,BYTE PTR [rbx-0x45a75875]
   14001a1f6:	js     0x14001a1fe
   14001a1f8:	jg     0x14001a1ed
   14001a1fa:	sbb    bl,dl
   14001a1fc:	int3   
   14001a1fd:	push   rdx
   14001a1fe:	rex.WX sbb rax,0xffffffffe4711fbd
   14001a204:	xchg   edi,eax
   14001a205:	push   rdi
   14001a206:	sbb    ebx,DWORD PTR [rcx-0x732c433b]
   14001a20c:	xchg   esi,eax
   14001a20d:	rex.WRXB out 0x74,al
   14001a210:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
   14001a212:	add    BYTE PTR [rsi],ch
   14001a214:	jae    0x14001a214
   14001a216:	out    0xd9,eax
   14001a218:	jg     0x14001a19c
   14001a21a:	mov    ah,0xe3
   14001a21c:	rcr    DWORD PTR [rdx-0x78],0xfe
   14001a220:	xchg   ebp,eax
   14001a221:	out    dx,al
   14001a222:	fistp  QWORD PTR [rdx+rbp*2-0x635bfc1e]
   14001a229:	cmp    edx,DWORD PTR [rbp+0x319db05]
   14001a22f:	rcl    dh,cl
   14001a231:	std    
   14001a232:	and    eax,0xf2434a7e
   14001a237:	rcr    BYTE PTR [rdx+0x3b2561de],1
   14001a23d:	and    DWORD PTR [rdi],edi
   14001a23f:	fwait
   14001a240:	loopne 0x14001a245
   14001a242:	jb     0x14001a1c9
   14001a244:	rcl    DWORD PTR [rsp+rdi*1],1
   14001a247:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a248:	add    DWORD PTR [rdx],esi
   14001a24a:	(bad)  
   14001a24b:	mov    ch,0xa4
   14001a24d:	push   0x44f989a5
   14001a252:	ds mov esi,0x62d3d6e4
   14001a258:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a259:	jns    0x14001a1ea
   14001a25b:	stos   BYTE PTR es:[rdi],al
   14001a25c:	lods   al,BYTE PTR ds:[rsi]
   14001a25d:	xor    edi,ebp
   14001a25f:	adc    al,0xf0
   14001a261:	iret   
   14001a262:	js     0x14001a281
   14001a264:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a265:	add    DWORD PTR [rbp+0x4983f801],edi
   14001a26b:	(bad)  
   14001a26c:	sti    
   14001a26d:	(bad)  
   14001a26e:	(bad)  
   14001a26f:	jns    0x14001a253
   14001a271:	pop    rax
   14001a272:	mov    ecx,0x26f7f1be
   14001a277:	mov    bl,0xc9
   14001a279:	mov    ecx,ebp
   14001a27b:	ins    BYTE PTR es:[rdi],dx
   14001a27c:	adc    ah,BYTE PTR [rdi]
   14001a27e:	repnz and al,0xf6
   14001a281:	sahf   
   14001a282:	xor    eax,edi
   14001a284:	(bad)  
   14001a285:	(bad)  
   14001a286:	nop
   14001a287:	movsxd ebx,DWORD PTR [rsi]
   14001a289:	ficomp WORD PTR [rcx]
   14001a28b:	(bad)  
   14001a28c:	fbld   TBYTE PTR [rdi]
   14001a28e:	(bad)  
   14001a28f:	ffreep st(4)
   14001a291:	xlat   BYTE PTR ds:[rbx]
   14001a292:	or     ebx,DWORD PTR [rbx]
   14001a294:	(bad)  
   14001a295:	and    eax,0xfcf31d4d
   14001a29a:	(bad)  
   14001a29b:	in     eax,0x6f
   14001a29d:	rol    BYTE PTR [rdi+rbx*8-0x3c],cl
   14001a2a1:	lock imul esp,edx,0x32
   14001a2a5:	pop    rax
   14001a2a6:	push   0x2937c55e
   14001a2ab:	jl     0x14001a2db
   14001a2ad:	mul    DWORD PTR [rip+0xffffffffd0905045]        # 0x11091f2f8
   14001a2b3:	rcl    BYTE PTR [rbx+riz*1-0x52],1
   14001a2b7:	cmp    al,0xf1
   14001a2b9:	ds mov esp,0x5fb6ccf3
   14001a2bf:	loop   0x14001a2a9
   14001a2c1:	(bad)
   14001a2c4:	jmp    0x14001a335
   14001a2c6:	mov    dh,0x47
   14001a2c8:	pushf  
   14001a2c9:	mov    bl,0x6d
   14001a2cb:	movabs ds:0xb682dfc4f253f6c6,al
   14001a2d4:	pop    rbx
   14001a2d5:	cmp    ebp,DWORD PTR cs:[rbx+0x53]
   14001a2d9:	xchg   edx,eax
   14001a2da:	fadd   DWORD PTR [rbp-0x25]
   14001a2dd:	movabs eax,ds:0x458fdebe67bed2d3
   14001a2e6:	or     al,0xed
   14001a2e8:	jae    0x14001a317
   14001a2ea:	movabs al,ds:0x78032186ec8c5318
   14001a2f3:	mov    ecx,0x15c60a7a
   14001a2f8:	mov    al,0xc3
   14001a2fa:	xchg   ebp,eax
   14001a2fb:	xor    al,0xc9
   14001a2fd:	pop    rax
   14001a2fe:	push   rdx
   14001a2ff:	(bad)  
   14001a300:	xor    al,BYTE PTR [rdi+0x3c]
   14001a303:	(bad)  
   14001a304:	(bad)  
   14001a305:	test   BYTE PTR [rsi+0x4d],dh
   14001a308:	mov    ch,0xa1
   14001a30a:	xchg   ebp,eax
   14001a30b:	push   0xffffffffffffffc7
   14001a30d:	test   eax,0x671f38a2
   14001a312:	add    edx,esp
   14001a314:	rex lods eax,DWORD PTR ds:[rsi]
   14001a316:	sbb    eax,0xec38af38
   14001a31b:	and    al,0xae
   14001a31d:	rex.RXB sub BYTE PTR [r14+0x78],r12b
   14001a321:	shl    cl,cl
   14001a323:	addr32 mov esp,0x21d776c1
   14001a329:	outs   dx,DWORD PTR ds:[rsi]
   14001a32a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a32b:	test   eax,0xde6d43c1
   14001a330:	repz (bad) 
   14001a332:	in     al,0xf4
   14001a334:	mov    edi,edi
   14001a336:	rex.WRX (bad) 
   14001a338:	cld    
   14001a339:	cmp    ch,BYTE PTR [rbp+0x14]
   14001a33c:	shr    bl,0x29
   14001a33f:	or     ch,al
   14001a341:	or     eax,0xe647efc0
   14001a346:	push   rdi
   14001a347:	(bad)  [rip+0xffffffff8bab2b07]        # 0xcbacce54
   14001a34d:	movabs ds:0xab7ddd30edfdf763,eax
   14001a356:	(bad)  
   14001a357:	sti    
   14001a358:	test   BYTE PTR [rsp+rcx*4+0x4f372c29],ah
   14001a35f:	cmp    eax,0xef7b26d0
   14001a364:	rex.X jmp 0x14001a3b5
   14001a367:	mov    ds,WORD PTR [rdi]
   14001a369:	xchg   edi,eax
   14001a36a:	loop   0x14001a2f6
   14001a36c:	add    al,0x1d
   14001a36e:	push   rbx
   14001a36f:	lock data16 (bad) 
   14001a372:	ret    
   14001a373:	cld    
   14001a374:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a375:	std    
   14001a376:	rex.WR sbb r12b,dil
   14001a379:	rex.WRB shl QWORD PTR [r14+rbx*8-0x56055ec3],cl
   14001a381:	(bad)  
   14001a382:	lahf   
   14001a383:	cmp    dh,bh
   14001a385:	mov    dh,0xa6
   14001a387:	jge    0x14001a34d
   14001a389:	retf   
   14001a38a:	and    ch,BYTE PTR [rax-0x51ec5819]
   14001a390:	(bad)  
   14001a391:	repnz ss hlt 
   14001a394:	fadd   st,st(3)
   14001a396:	rex.WR scas al,BYTE PTR es:[rdi]
   14001a398:	pop    rdi
   14001a399:	(bad)  
   14001a39a:	mov    eax,0x8ba59a7d
   14001a39f:	(bad)  
   14001a3a0:	fwait
   14001a3a1:	neg    DWORD PTR [rdi-0x3b55a64a]
   14001a3a7:	call   0x10e6e876d
   14001a3ac:	jg     0x14001a3e9
   14001a3ae:	icebp  
   14001a3af:	(bad)  
   14001a3b0:	paddq  mm1,QWORD PTR [rbp+0x21]
   14001a3b4:	mov    esp,0x1495eb2d
   14001a3b9:	xor    al,0xf7
   14001a3bb:	(bad)  
   14001a3bc:	shl    BYTE PTR [rcx],1
   14001a3be:	add    esp,DWORD PTR [rcx]
   14001a3c0:	cmp    DWORD PTR [rdx+0x48],edx
   14001a3c3:	rex.W jns 0x14001a361
   14001a3c6:	cmp    eax,0x6da0ca58
   14001a3cb:	rex.WRXB add BYTE PTR [r9+0x25],r13b
   14001a3cf:	(bad)  
   14001a3d0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a3d1:	movabs ds:0x2831126868d04af8,eax
   14001a3da:	sub    eax,0x8ce2615
   14001a3df:	rex.B
   14001a3e0:	rex.X
   14001a3e1:	div    DWORD PTR ds:[rdi+rcx*2]
   14001a3e5:	rex adc DWORD PTR [rbx+0x46800716],edi
   14001a3ec:	or     al,0x1f
   14001a3ee:	call   0xdd35b363
   14001a3f3:	sbb    BYTE PTR [rip+0xffffffff82674c63],0x35        # 0xc268f05d
   14001a3fa:	sbb    al,0x6a
   14001a3fc:	(bad)  
   14001a3fd:	add    bl,ah
   14001a3ff:	adc    ecx,ebx
   14001a401:	jo     0x14001a397
   14001a403:	xchg   esp,eax
   14001a404:	(bad)  
   14001a405:	xchg   ecx,eax
   14001a406:	push   rdx
   14001a407:	mov    es,esp
   14001a409:	adc    DWORD PTR [rax],edx
   14001a40b:	cmp    al,0x7a
   14001a40d:	fistp  QWORD PTR [rbx]
   14001a40f:	mov    ecx,0x783c2cfa
   14001a414:	sub    bl,BYTE PTR [rbp+0x3e]
   14001a417:	(bad)  
   14001a418:	and    al,0xf0
   14001a41a:	mov    edx,0xfc00de91
   14001a41f:	pop    rsi
   14001a420:	in     eax,0x16
   14001a422:	mov    esi,DWORD PTR [rcx+0x6c]
   14001a425:	cmp    al,0xfc
   14001a427:	rcr    BYTE PTR [rdi-0x70],1
   14001a42a:	(bad)  
   14001a42c:	addr32 rex.X mov ebp,0x5f360b8f
   14001a433:	sbb    r14,QWORD PTR [r9+r9*4+0x68369dbf]
   14001a43b:	or     BYTE PTR [rax+0x1b],bh
   14001a43e:	ret    0xcde1
   14001a441:	ret    
   14001a442:	jnp    0x14001a42f
   14001a444:	rcl    DWORD PTR [rdi+0x411f584e],1
   14001a44a:	mov    ebp,0xdbaeeca8
   14001a44f:	rcl    bl,0x18
   14001a452:	stos   BYTE PTR es:[rdi],al
   14001a453:	movzx  eax,BYTE PTR [rax]
   14001a456:	xchg   BYTE PTR [rbp-0xa],dh
   14001a459:	jne    0x14001a423
   14001a45b:	cmp    eax,0xcc971aaa
   14001a460:	and    dl,cl
   14001a462:	ja     0x14001a495
   14001a464:	rex.WRXB or BYTE PTR [r10],r10b
   14001a467:	add    cl,ch
   14001a469:	jo     0x14001a437
   14001a46b:	xchg   ebp,eax
   14001a46c:	(bad)  
   14001a46d:	fiadd  WORD PTR [rbx-0x6804e39]
   14001a473:	sub    al,0x87
   14001a475:	mov    dh,0x5f
   14001a477:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a478:	mov    esp,0xf6cc8db6
   14001a47d:	or     BYTE PTR [rsi],dh
   14001a47f:	or     BYTE PTR [rbx],dh
   14001a481:	jle    0x14001a4a9
   14001a483:	int    0xfb
   14001a485:	mov    ecx,DWORD PTR [rbp+0x138aa23f]
   14001a48b:	stos   DWORD PTR es:[rdi],eax
   14001a48c:	std    
   14001a48d:	shl    ebp,cl
   14001a48f:	lock sub eax,0xfef12f7b
   14001a495:	jae    0x14001a4b3
   14001a497:	outs   dx,DWORD PTR ds:[rsi]
   14001a498:	xor    al,0xdb
   14001a49a:	mov    esp,0x8f9887f8
   14001a49f:	rex.WRX cmp QWORD PTR [rdi-0x3aece86b],r15
   14001a4a6:	jbe    0x14001a4c6
   14001a4a8:	push   rax
   14001a4a9:	xchg   esp,eax
   14001a4aa:	or     al,0xe0
   14001a4ac:	rex.WB
   14001a4ad:	rex.WX adc QWORD PTR [rsi],rcx
   14001a4b0:	(bad)  
   14001a4b1:	add    ecx,ebp
   14001a4b3:	popf   
   14001a4b4:	push   0x335ff488
   14001a4b9:	cs (bad) 
   14001a4bb:	rex.B iret 
   14001a4bd:	test   BYTE PTR [rbx-0x5c],ah
   14001a4c0:	shr    DWORD PTR [rdx+0x17],cl
   14001a4c3:	or     ebp,DWORD PTR [rcx+0x23]
   14001a4c6:	add    DWORD PTR [rbx],edi
   14001a4c8:	pop    rcx
   14001a4c9:	add    edi,esp
   14001a4cb:	xchg   esp,eax
   14001a4cc:	outs   dx,BYTE PTR ds:[rsi]
   14001a4cd:	cmp    DWORD PTR [rdx+0x72],edx
   14001a4d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a4d1:	xchg   ebx,eax
   14001a4d2:	xor    BYTE PTR [rsp+rsi*8+0x45366759],cl
   14001a4d9:	mov    ah,0xb
   14001a4db:	push   rdx
   14001a4dc:	(bad)  
   14001a4dd:	ins    DWORD PTR es:[rdi],dx
   14001a4de:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a4df:	retf   0x7a40
   14001a4e2:	ins    DWORD PTR es:[rdi],dx
   14001a4e3:	popf   
   14001a4e4:	leave  
   14001a4e5:	xor    DWORD PTR [esi+0x54],0x5f666b58
   14001a4ed:	(bad)  
   14001a4ee:	rcr    BYTE PTR [rbx],cl
   14001a4f0:	sbb    bh,0x8b
   14001a4f3:	fadd   QWORD PTR [rdx-0x7]
   14001a4f6:	(bad)  
   14001a4f7:	jp     0x14001a4dc
   14001a4f9:	rex.XB (bad) 
   14001a4fb:	loop   0x14001a4bf
   14001a4fd:	hlt    
   14001a4fe:	(bad)  
   14001a4ff:	(bad)  
   14001a501:	jmp    0x14001a4b0
   14001a503:	out    dx,eax
   14001a504:	sub    BYTE PTR [rbp-0x64],ah
   14001a507:	mov    ecx,0xfb4bd17
   14001a50c:	add    ecx,edx
   14001a50e:	(bad)  
   14001a50f:	xchg   edx,eax
   14001a510:	sbb    esi,DWORD PTR [rdx+0xe]
   14001a513:	out    dx,eax
   14001a514:	je     0x17635e40f
   14001a51a:	(bad)  
   14001a51b:	(bad)  
   14001a51c:	xchg   al,bh
   14001a51e:	cdq    
   14001a51f:	mov    eax,0xd763e213
   14001a524:	icebp  
   14001a525:	clc    
   14001a526:	xor    edi,ebp
   14001a528:	(bad)  
   14001a52a:	mov    dh,0x4a
   14001a52c:	repz (bad) 
   14001a52f:	(bad)  
   14001a530:	test   esp,ebx
   14001a532:	rex.WRXB (bad) 
   14001a534:	sub    BYTE PTR [rdi-0x1c093d9],0x6e
   14001a53b:	hlt    
   14001a53c:	enter  0xecc3,0xdf
   14001a540:	mov    eax,0x2f7f1d62
   14001a545:	loope  0x14001a5bd
   14001a547:	scas   al,BYTE PTR es:[rdi]
   14001a548:	movabs ds:0xff799c04c626da61,al
   14001a551:	xor    al,0xef
   14001a553:	scas   eax,DWORD PTR es:[rdi]
   14001a554:	xor    ch,al
   14001a556:	rex.WRXB loope 0x14001a5d8
   14001a559:	pop    rdx
   14001a55a:	int    0x37
   14001a55c:	xchg   edi,eax
   14001a55d:	rol    DWORD PTR [rdx+0x2d2ff066],cl
   14001a563:	std    
   14001a564:	xor    eax,0xc9140437
   14001a569:	iret   
   14001a56a:	mov    ch,0x5e
   14001a56c:	(bad)  
   14001a56d:	movabs ds:0x21cf5e64e2046ae1,eax
   14001a576:	(bad)  
   14001a577:	mov    eax,0x44c08076
   14001a57c:	or     cl,BYTE PTR [rdx-0x593ebf33]
   14001a582:	cli    
   14001a583:	rex.WX sti 
   14001a585:	jl     0x14001a59e
   14001a587:	cmc    
   14001a588:	rex.WRXB loopne 0x14001a532
   14001a58b:	jmp    0x10d65f7eb
   14001a590:	call   FWORD PTR [rcx+0x8]
   14001a593:	outs   dx,DWORD PTR ds:[rsi]
   14001a594:	sbb    al,0x0
   14001a596:	mov    ch,0xf0
   14001a598:	(bad)  
   14001a599:	cmp    DWORD PTR [rcx],esp
   14001a59b:	cmp    BYTE PTR [rdx],bh
   14001a59d:	retf   
   14001a59e:	xchg   BYTE PTR [rdi+0x4c],al
   14001a5a1:	and    BYTE PTR [rdi-0x6cfc58e0],dh
   14001a5a7:	jbe    0x14001a52a
   14001a5a9:	nop
   14001a5aa:	sbb    BYTE PTR [rcx+0x28],ch
   14001a5ad:	scas   al,BYTE PTR es:[rdi]
   14001a5ae:	xor    DWORD PTR [rcx],0xffffffc4
   14001a5b1:	hlt    
   14001a5b2:	sbb    BYTE PTR [rdx-0x3],bpl
   14001a5b6:	sbb    DWORD PTR [rdi],0xffc7d397
   14001a5bc:	scas   al,BYTE PTR es:[rdi]
   14001a5bd:	ds clc 
   14001a5bf:	add    ch,BYTE PTR [rcx]
   14001a5c1:	add    bh,BYTE PTR [rax+0x1d]
   14001a5c4:	add    DWORD PTR [rcx+0x56f801bd],0xffca16e5
   14001a5ce:	fdivr  DWORD PTR [rbp-0x15]
   14001a5d1:	(bad)  
   14001a5d2:	sbb    eax,edx
   14001a5d4:	cld    
   14001a5d5:	rex.X xor ebx,ebp
   14001a5d8:	jne    0x14001a647
   14001a5da:	mov    ecx,0x76a8292d
   14001a5df:	mov    esp,0xc7dfec74
   14001a5e4:	(bad)  
   14001a5e5:	repz jmp 0x11dccc45c
   14001a5eb:	(bad)  
   14001a5ec:	out    0xbd,eax
   14001a5ee:	mov    bh,0x98
   14001a5f1:	xchg   ecx,eax
   14001a5f2:	push   rax
   14001a5f3:	mov    ch,0xc5
   14001a5f5:	cmp    ah,dh
   14001a5f7:	ret    0x9b7c
   14001a5fa:	add    BYTE PTR [rsp+rdi*4+0x102326bc],dl
   14001a601:	xor    ch,BYTE PTR [rax+0x1fd45d26]
   14001a607:	nop
   14001a608:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a609:	data16 cmp bl,BYTE PTR [rsi-0x1a]
   14001a60d:	(bad)  
   14001a60e:	xchg   ebx,eax
   14001a60f:	out    dx,eax
   14001a610:	mov    ecx,eax
   14001a612:	cmc    
   14001a613:	test   BYTE PTR [rbx-0x54],0x5f
   14001a617:	cmp    al,0x4d
   14001a619:	jne    0x14001a694
   14001a61b:	or     ebx,DWORD PTR [rcx+0x3fe71aed]
   14001a621:	sub    DWORD PTR [rdx+0x494fe266],ecx
   14001a627:	(bad)  
   14001a629:	adc    esi,ebx
   14001a62b:	loope  0x14001a5e1
   14001a62d:	shr    eax,0xe1
   14001a630:	jo     0x14001a664
   14001a632:	pslld  mm4,QWORD PTR [rip+0xffffffff81ef4d65]        # 0xc1f0f39e
   14001a639:	cmp    DWORD PTR [rbx],esp
   14001a63b:	(bad)  
   14001a63c:	rex.WRXB rol QWORD PTR [rip+0xffffffffd273e2d0],cl        # 0x112758913
   14001a643:	(bad)  
   14001a644:	sub    ecx,ecx
   14001a646:	push   rdi
   14001a647:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a648:	push   rdi
   14001a649:	xor    eax,0x37fce07b
   14001a64e:	mov    ah,0xcf
   14001a650:	pop    rcx
   14001a651:	sub    dl,BYTE PTR [rax]
   14001a653:	(bad)  
   14001a654:	(bad)  
   14001a655:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a656:	rex.W add spl,0xd8
   14001a65a:	and    eax,0xfbc8110f
   14001a65f:	in     eax,dx
   14001a660:	sbb    al,0x85
   14001a662:	jbe    0x14001a61a
   14001a664:	xchg   edi,eax
   14001a665:	ficom  WORD PTR [rcx+0x8da0423]
   14001a66b:	(bad)  
   14001a66c:	and    al,BYTE PTR [rip+0x7bbfdcb1]        # 0x1bbc18323
   14001a672:	fsub   st(1),st
   14001a674:	movabs rbx,0xdf57037183da4b70
   14001a67e:	retf   
   14001a67f:	in     eax,0x4f
   14001a681:	cld    
   14001a682:	pop    rbp
   14001a683:	(bad)  
   14001a684:	cld    
   14001a685:	sti    
   14001a686:	mov    esp,0xde80d30e
   14001a68b:	add    ah,bh
   14001a68d:	fiadd  WORD PTR [rax+rsi*1-0x4e]
   14001a691:	iret   
   14001a692:	sbb    edx,DWORD PTR [rsi+0x7]
   14001a695:	(bad)  
   14001a696:	sub    al,0x51
   14001a698:	call   QWORD PTR [rdx]
   14001a69a:	sti    
   14001a69b:	mov    ebx,0x40776a0b
   14001a6a0:	or     al,0x87
   14001a6a2:	int    0x63
   14001a6a4:	imul   esi,DWORD PTR [rdi],0x4f
   14001a6a7:	rex.WRXB mov r12b,0xdc
   14001a6aa:	shl    cl,1
   14001a6ac:	in     eax,0x37
   14001a6ae:	mov    dh,0x6
   14001a6b0:	pop    rdi
   14001a6b1:	rex.WXB (bad) 
   14001a6b3:	and    eax,0x4581c344
   14001a6b8:	or     esp,DWORD PTR [rdx-0x71220b96]
   14001a6be:	movabs ds:0x4f50f27252706b5b,al
   14001a6c7:	popf   
   14001a6c8:	cmp    ecx,eax
   14001a6ca:	fcom   QWORD PTR [rax]
   14001a6cc:	add    edi,DWORD PTR [rax-0x4e049946]
   14001a6d2:	ja     0x14001a726
   14001a6d4:	(bad)  
   14001a6d5:	jle    0x14001a6df
   14001a6d7:	mov    ecx,0xd6e2c5b6
   14001a6dc:	sub    DWORD PTR [rsi],edx
   14001a6de:	mov    edx,0x73e77fb9
   14001a6e3:	xchg   edx,eax
   14001a6e4:	ret    0x247f
   14001a6e7:	and    bh,bh
   14001a6e9:	mov    cl,0xa4
   14001a6eb:	adc    eax,0x86dabb69
   14001a6f0:	(bad)  
   14001a6f1:	imul   eax,DWORD PTR [rax],0x39666188
   14001a6f7:	ins    BYTE PTR es:[rdi],dx
   14001a6f8:	rex.WRXB pop r13
   14001a6fa:	jle    0x14001a6a9
   14001a6fc:	repnz (bad) 
   14001a6fe:	in     eax,0xd5
   14001a700:	cld    
   14001a701:	ja     0x14001a6de
   14001a703:	cmp    cl,BYTE PTR [rbx+rbx*1+0x21]
   14001a707:	rex.WR movabs al,fs:0x92c3474adeb3b573
   14001a712:	(bad)  
   14001a713:	xlat   BYTE PTR ds:[rbx]
   14001a714:	or     al,0xc2
   14001a716:	movabs eax,ds:0x4526c099bc404da0
   14001a71f:	rex.XB
   14001a720:	cs ja  0x14001a755
   14001a723:	mov    dh,0x58
   14001a725:	movabs ds:0x4d39a0940c361285,al
   14001a72e:	rex.WB
   14001a72f:	shl    BYTE PTR gs:[rdi+rsi*1],0xb0
   14001a734:	in     eax,0x2f
   14001a736:	je     0x14001a756
   14001a738:	sbb    ebx,DWORD PTR [rsi+0x10]
   14001a73b:	jmp    0x18b5f9dff
   14001a740:	xor    ch,BYTE PTR [rax]
   14001a742:	(bad)  
   14001a743:	add    eax,0x52d09024
   14001a748:	mov    dl,BYTE PTR [rip+0xffffffffca3c9f66]        # 0x10a3e46b4
   14001a74e:	in     al,0x1f
   14001a750:	popf   
   14001a751:	xor    BYTE PTR [ebp-0x69],cl
   14001a755:	cdq    
   14001a756:	adc    DWORD PTR [rsi+0x6f4936e7],0x0
   14001a75d:	mov    esi,0xfd079915
   14001a762:	mov    cl,ch
   14001a764:	movabs ds:0xf359965f93243e59,al
   14001a76d:	movabs al,ds:0x5ccdf25dd5232ed6
   14001a776:	std    
   14001a777:	cmp    eax,0xe0640247
   14001a77c:	mov    gs,esp
   14001a77e:	fxch   st(1)
   14001a780:	cmc    
   14001a781:	jnp    0x14001a7ea
   14001a783:	mov    ebp,0x9fb789ff
   14001a788:	cmp    al,0xbc
   14001a78a:	in     ax,0x4f
   14001a78d:	movabs rdi,0xfef26c95c41f6666
   14001a797:	movabs eax,ds:0xf56119ea4057f0d
   14001a7a0:	jno    0x14001a79b
   14001a7a2:	mov    edi,esi
   14001a7a4:	push   rdx
   14001a7a5:	test   al,al
   14001a7a7:	je     0x14001a7a4
   14001a7a9:	and    eax,0x514fb6d6
   14001a7ae:	pop    rbp
   14001a7af:	mov    ebp,0xd471d488
   14001a7b4:	ja     0x14001a78c
   14001a7b6:	xor    ebp,ebp
   14001a7b8:	mov    al,0xfe
   14001a7ba:	(bad)  
   14001a7bb:	rex.W (bad) 
   14001a7bd:	fmul   st,st(0)
   14001a7bf:	(bad)  
   14001a7c0:	rex.RXB push r14
   14001a7c2:	cli    
   14001a7c3:	sbb    BYTE PTR [rip+0x1cb025b4],cl        # 0x15cb1cd7d
   14001a7c9:	sbb    ah,ch
   14001a7cb:	xchg   ebp,eax
   14001a7cc:	cmp    eax,0xcacc5fb2
   14001a7d1:	fst    QWORD PTR [rsi+0x8]
   14001a7d4:	fcmove st,st(3)
   14001a7d6:	fisub  DWORD PTR [rip+0xfffffffff904a506]        # 0x139064ce2
   14001a7dc:	movabs al,ds:0xa3d88e7bf61fd664
   14001a7e5:	sbb    ecx,ebp
   14001a7e7:	rex.RXB (bad) 
   14001a7e9:	mov    BYTE PTR [rbx-0x2ea558cf],0x4b
   14001a7f0:	(bad)  
   14001a7f1:	xor    al,0x6d
   14001a7f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a7f5:	shr    DWORD PTR [rax],cl
   14001a7f7:	(bad)  
   14001a7f8:	shr    DWORD PTR [rbx],0x12
   14001a7fb:	push   rsi
   14001a7fc:	adc    bl,dh
   14001a7fe:	jl     0x14001a7ab
   14001a800:	adc    BYTE PTR [rax],bl
   14001a802:	ds nop
   14001a804:	shl    BYTE PTR [rbx],cl
   14001a806:	repnz div BYTE PTR [rdx]
   14001a809:	rex xchg eax,eax
   14001a80b:	repz std 
   14001a80d:	or     BYTE PTR [rcx+0x68],cl
   14001a810:	mov    ebx,0x7af1108a
   14001a815:	or     eax,0xc7f679b4
   14001a81a:	in     al,0xc5
   14001a81c:	(bad)  
   14001a81d:	jle    0x14001a870
   14001a81f:	(bad)  
   14001a820:	sti    
   14001a821:	mul    DWORD PTR [rsp+rcx*4]
   14001a824:	lock jne 0x14001a7b9
   14001a827:	(bad)  
   14001a828:	hlt    
   14001a829:	(bad)  
   14001a82a:	loopne 0x14001a7c7
   14001a82c:	leave  
   14001a82d:	sub    eax,0x2c6f3ec8
   14001a832:	idiv   bh
   14001a834:	xchg   edx,eax
   14001a835:	fwait
   14001a836:	retf   0xa807
   14001a839:	mov    esi,DWORD PTR [rsi]
   14001a83b:	inc    BYTE PTR [rbx+0x2ae9b156]
   14001a841:	movabs ds:0x634bae16dfee8519,eax
   14001a84a:	mov    eax,0x3a168a41
   14001a84f:	int    0x3a
   14001a851:	shl    esi,0xf5
   14001a854:	in     eax,0xd0
   14001a856:	ds (bad) 
   14001a858:	loopne 0x14001a8bb
   14001a85a:	and    DWORD PTR [rdx+0x48],esi
   14001a85d:	and    eax,0x58ab4d33
   14001a862:	mov    dh,0xd4
   14001a864:	push   rdi
   14001a865:	enter  0xb52d,0xae
   14001a869:	sahf   
   14001a86a:	jno    0x14001a86a
   14001a86c:	mov    cl,0x77
   14001a86e:	movabs ds:0xede5817cbd33f71b,eax
   14001a877:	push   rbx
   14001a878:	mov    WORD PTR [rdi-0x50c8dd31],?
   14001a87e:	rex.RB cli 
   14001a880:	mov    cl,0xe1
   14001a882:	(bad)  
   14001a883:	(bad)  
   14001a884:	cmp    al,0xff
   14001a886:	ret    0xbfbc
   14001a889:	(bad)  
   14001a88a:	mov    esp,0x9bf6dc84
   14001a88f:	sbb    BYTE PTR cs:[rax+0x6e],0x8b
   14001a894:	sub    DWORD PTR [rbp+0x7c],esi
   14001a897:	scas   al,BYTE PTR es:[rdi]
   14001a898:	sub    eax,0x89e525fb
   14001a89d:	jns    0x14001a85e
   14001a89f:	mov    bl,0x32
   14001a8a1:	lahf   
   14001a8a2:	int3   
   14001a8a3:	(bad)  
   14001a8a4:	(bad)  
   14001a8a5:	mov    DWORD PTR [rbx],esp
   14001a8a7:	nop
   14001a8a8:	cmp    edi,edi
   14001a8aa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a8ab:	adc    edi,DWORD PTR [rdx-0x19]
   14001a8ae:	mov    esp,0x96aac81d
   14001a8b3:	xchg   esp,eax
   14001a8b4:	xor    r8,r15
   14001a8b7:	jg     0x14001a927
   14001a8b9:	cmp    BYTE PTR [rax-0x701bf25a],ch
   14001a8bf:	in     eax,0xe7
   14001a8c1:	jb     0x14001a8ee
   14001a8c3:	xor    DWORD PTR [rbp+0x2134a6ed],ebx
   14001a8c9:	mov    ebx,0xc088b76
   14001a8ce:	pshufw mm3,QWORD PTR [rsi-0x58],0x25
   14001a8d3:	lods   al,BYTE PTR fs:[rsi]
   14001a8d5:	ret    0xf8b9
   14001a8d8:	adc    ebx,DWORD PTR [rdx+0x21501236]
   14001a8de:	(bad)  
   14001a8df:	and    BYTE PTR [rax-0x39],cl
   14001a8e2:	test   al,0xb1
   14001a8e4:	xor    eax,0xcbfd921
   14001a8e9:	mov    dh,al
   14001a8eb:	test   al,0x60
   14001a8ed:	icebp  
   14001a8ee:	rex.WRB fdivr QWORD PTR [r8+0xe]
   14001a8f2:	clc    
   14001a8f3:	ins    DWORD PTR es:[rdi],dx
   14001a8f4:	mov    esi,0x2dbbadb1
   14001a8f9:	rcr    BYTE PTR [rbx],cl
   14001a8fb:	sbb    bh,0x4d
   14001a8fe:	outs   dx,BYTE PTR ds:[rsi]
   14001a8ff:	xchg   ecx,eax
   14001a900:	idiv   DWORD PTR [rdi+0x7f7f2e47]
   14001a906:	cmp    ebx,esp
   14001a908:	(bad)  
   14001a909:	or     BYTE PTR [rsi],cl
   14001a90b:	(bad)
   14001a90e:	adc    BYTE PTR [rdi+0x2b],bh
   14001a911:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a912:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a913:	mov    dh,0x4b
   14001a916:	stc    
   14001a917:	in     al,dx
   14001a918:	sbb    al,0x1f
   14001a91a:	fisttp WORD PTR [rax+0x3a]
   14001a91d:	and    DWORD PTR [rsi],edi
   14001a91f:	(bad)  
   14001a920:	xchg   edi,eax
   14001a921:	fidiv  DWORD PTR [rdx]
   14001a923:	pop    rax
   14001a924:	sub    al,ah
   14001a926:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a927:	mov    ebx,0xe52f8b13
   14001a92c:	repz rex.X push 0x6bd26d1b
   14001a933:	sub    DWORD PTR [rdx],ebp
   14001a935:	movabs ds:0xcff7e7696905c801,al
   14001a93f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a940:	rex.WR
   14001a941:	ss out dx,eax
   14001a943:	out    0xca,eax
   14001a945:	xchg   ebx,eax
   14001a946:	out    dx,eax
   14001a947:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a948:	cwde   
   14001a949:	int    0x68
   14001a94b:	cs popf 
   14001a94d:	(bad)  
   14001a94e:	in     eax,dx
   14001a94f:	loop   0x14001a8dc
   14001a951:	adc    al,0x9
   14001a953:	stc    
   14001a954:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001a956:	sub    al,0x92
   14001a958:	not    DWORD PTR [rdi+0x3809fe08]
   14001a95e:	rex.X
   14001a95f:	rex.WRX pop rax
   14001a961:	xor    ecx,DWORD PTR [rcx+0x2e]
   14001a964:	sub    DWORD PTR [rcx],ecx
   14001a966:	popf   
   14001a967:	rcr    BYTE PTR [rax-0x1097900a],1
   14001a96d:	in     al,dx
   14001a96e:	ss je  0x14001a90f
   14001a971:	rex.WRXB add r10,r10
   14001a974:	fwait
   14001a975:	push   rdx
   14001a976:	imul   edx,DWORD PTR [rax-0x4f8be47c],0x39d17983
   14001a980:	and    ebx,DWORD PTR [rbx+0x71c734df]
   14001a986:	nop
   14001a987:	or     BYTE PTR [rdx],al
   14001a989:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a98a:	push   rax
   14001a98b:	sub    BYTE PTR [rbp-0x79],bl
   14001a98e:	pushf  
   14001a98f:	nop
   14001a990:	ja     0x14001a9c2
   14001a992:	test   DWORD PTR [rsp+riz*4-0x5b87795e],esp
   14001a999:	imul   ebp,DWORD PTR [rbp+rbp*1-0x3b],0x66
   14001a99e:	ins    BYTE PTR es:[rdi],dx
   14001a99f:	(bad)  
   14001a9a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a9a1:	pushf  
   14001a9a2:	mov    eax,0x2337ed0e
   14001a9a7:	cld    
   14001a9a8:	jns    0x14001a9d1
   14001a9aa:	popf   
   14001a9ab:	and    esi,DWORD PTR [rdx-0x4b05db83]
   14001a9b1:	pop    rbp
   14001a9b2:	(bad)  
   14001a9b3:	jl     0x14001a9ff
   14001a9b5:	rex.WXB int3 
   14001a9b7:	ds mov edi,0x5defecc6
   14001a9bd:	movabs eax,ds:0xd0047b6e8292d19c
   14001a9c6:	ja     0x14001a9cb
   14001a9c8:	jle    0x14001a9ed
   14001a9ca:	imul   ebx,DWORD PTR [rcx+0x7ff4397e],0x1de37173
   14001a9d4:	rex.XB popf 
   14001a9d6:	std    
   14001a9d7:	(bad)
   14001a9dc:	or     DWORD PTR [rsi-0x46],edi
   14001a9df:	xchg   DWORD PTR [rdi+0x7de3dbee],ebx
   14001a9e5:	mov    ch,BYTE PTR [rcx-0x64]
   14001a9e8:	int3   
   14001a9e9:	jrcxz  0x14001a991
   14001a9eb:	jno    0x14001aa0f
   14001a9ed:	(bad)  
   14001a9ee:	lahf   
   14001a9ef:	rex.WRX jo 0x14001aa05
   14001a9f2:	pop    rbx
   14001a9f3:	xchg   ebp,eax
   14001a9f4:	cmp    cl,BYTE PTR [ecx+0x29d3791d]
   14001a9fb:	cmp    bl,BYTE PTR [rbp+0x42536612]
   14001aa01:	cmp    eax,0xe938eb41
   14001aa06:	(bad)  
   14001aa07:	jmp    0x14001a9e7
   14001aa09:	jae    0x14001a9cc
   14001aa0b:	pop    rdx
   14001aa0c:	jp     0x14001aa51
   14001aa0e:	sbb    eax,0x1ca9ffb9
   14001aa13:	cwde   
   14001aa14:	cwde   
   14001aa15:	test   BYTE PTR [rbp+0x1a],dh
   14001aa18:	or     DWORD PTR [rsi-0x39],edx
   14001aa1b:	rex.W and al,BYTE PTR [rbx-0x3b572e7a]
   14001aa22:	hlt    
   14001aa23:	add    DWORD PTR [rax+0x2],ebp
   14001aa26:	test   DWORD PTR [rdx],ebp
   14001aa28:	pop    rbx
   14001aa29:	iret   
   14001aa2a:	jl     0x14001aa34
   14001aa2c:	push   rsi
   14001aa2d:	(bad)  
   14001aa2e:	push   rdx
   14001aa2f:	pop    rdi
   14001aa30:	(bad)  [rdx+0x75]
   14001aa33:	sti    
   14001aa34:	adc    al,0xc3
   14001aa36:	rex.WXB out 0x71,eax
   14001aa39:	mov    ebx,0x9ff223d7
   14001aa3e:	rex.XB pop r9
   14001aa40:	imul   edi,edx,0x11
   14001aa43:	leave  
   14001aa44:	movabs eax,ds:0x2de671fc473093bf
   14001aa4d:	fisttp DWORD PTR [rcx-0x41]
   14001aa50:	xchg   edx,eax
   14001aa51:	ret    
   14001aa52:	jp     0x14001aa9b
   14001aa54:	(bad)  
   14001aa55:	std    
   14001aa56:	outs   dx,DWORD PTR ds:[rsi]
   14001aa57:	cmp    eax,0xa7a10924
   14001aa5c:	push   rbx
   14001aa5d:	or     eax,0xe77fb948
   14001aa62:	jge    0x14001aa8d
   14001aa64:	jne    0x14001aa56
   14001aa66:	imul   esi,DWORD PTR [rsi],0xc80f0760
   14001aa6c:	(bad)  
   14001aa6d:	and    eax,ebx
   14001aa6f:	jrcxz  0x14001aa05
   14001aa71:	retf   
   14001aa72:	(bad)  
   14001aa73:	in     eax,0xcf
   14001aa75:	xchg   BYTE PTR [rbx],ah
   14001aa77:	test   esi,edi
   14001aa79:	sar    dh,cl
   14001aa7b:	popf   
   14001aa7c:	pop    rdi
   14001aa7d:	imul   edx,ebx,0xffffff86
   14001aa80:	mov    ecx,0xba292320
   14001aa85:	in     eax,0x1f
   14001aa87:	jns    0x14001aab9
   14001aa89:	rex.W (bad) 
   14001aa8b:	sub    dl,BYTE PTR [rcx]
   14001aa8d:	addr32 mov esi,es
   14001aa90:	(bad)  
   14001aa91:	jne    0x14001aadb
   14001aa93:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   14001aa95:	and    DWORD PTR [rbx+0x70],0xffffffe0
   14001aa99:	pop    rdx
   14001aa9a:	mov    ah,0x47
   14001aa9c:	fiadd  WORD PTR [rip+0xfffffffff0929547]        # 0x130943fe9
   14001aaa2:	(bad)  
   14001aaa3:	iret   
   14001aaa4:	retf   
   14001aaa5:	xlat   BYTE PTR ds:[rbx]
   14001aaa6:	fmulp  st(6),st
   14001aaa8:	jmp    0x14001aa56
   14001aaaa:	rex.XB mov r8b,0x8f
   14001aaad:	add    BYTE PTR [rsi+0x25],ch
   14001aab0:	mov    bh,0x68
   14001aab2:	lock cmp DWORD PTR [rsi-0x1ed17020],edi
   14001aab9:	jg     0x14001aaf4
   14001aabb:	mov    eax,0xd8d306c1
   14001aac0:	(bad)  
   14001aac1:	sbb    esi,DWORD PTR [rbx-0xf]
   14001aac4:	js     0x14001aae9
   14001aac6:	rex.RXB jbe 0x14001ab31
   14001aac9:	repnz shl dh,1
   14001aacc:	jge    0x14001ab40
   14001aace:	and    DWORD PTR [rdx-0x10b068a5],edi
   14001aad4:	mov    cl,0xe8
   14001aad6:	sar    BYTE PTR [rsp+rdi*2],0xfa
   14001aada:	pop    rbx
   14001aadb:	rex.X stos BYTE PTR es:[rdi],al
   14001aadd:	cmps   DWORD PTR gs:[rsi],DWORD PTR es:[rdi]
   14001aadf:	xchg   ebp,eax
   14001aae0:	jp     0x14001aa77
   14001aae2:	outs   dx,BYTE PTR ds:[rsi]
   14001aae3:	(bad)  
   14001aae4:	sub    al,0xe9
   14001aae6:	mov    ecx,0x597bc924
   14001aaeb:	(bad)  
   14001aaec:	xchg   ecx,eax
   14001aaed:	(bad)  
   14001aaee:	enter  0x274d,0xec
   14001aaf2:	sbb    eax,0xdf97237f
   14001aaf7:	clc    
   14001aaf8:	sub    al,0xd5
   14001aafa:	fs (bad) 
   14001aafc:	mov    dh,0x5f
   14001aafe:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   14001ab00:	jrcxz  0x14001aaff
   14001ab02:	movsxd eax,DWORD PTR [rdi]
   14001ab04:	pop    rsp
   14001ab05:	(bad)  
   14001ab06:	jge    0x14001ab15
   14001ab08:	(bad)  
   14001ab09:	stc    
   14001ab0a:	ja     0x14001ab20
   14001ab0c:	stos   BYTE PTR es:[rdi],al
   14001ab0d:	adc    al,0x4e
   14001ab0f:	jae    0x14001aaea
   14001ab11:	(bad)  
   14001ab12:	scas   eax,DWORD PTR es:[rdi]
   14001ab13:	not    DWORD PTR [rdi+0x18a8f751]
   14001ab19:	sbb    DWORD PTR [rsp+rsi*4],eax
   14001ab1c:	test   DWORD PTR [rcx],0x4c6f68ed
   14001ab22:	jno    0x14001ab5c
   14001ab24:	mov    al,0xea
   14001ab26:	(bad)  
   14001ab27:	mov    ebp,0x292835b1
   14001ab2c:	(bad)  
   14001ab2d:	outs   dx,BYTE PTR ds:[rsi]
   14001ab2e:	and    DWORD PTR [rcx+rcx*8+0x3a],ecx
   14001ab32:	sub    al,0x59
   14001ab34:	loope  0x14001aaea
   14001ab36:	jae    0x14001ab26
   14001ab38:	xchg   edx,eax
   14001ab39:	rex.XB sti 
   14001ab3b:	xchg   esp,eax
   14001ab3c:	adc    eax,0x1c7cb9b4
   14001ab41:	mul    cl
   14001ab43:	sub    al,0x5d
   14001ab45:	mov    bh,bl
   14001ab47:	iret   
   14001ab48:	xchg   ebp,eax
   14001ab49:	xchg   edx,eax
   14001ab4a:	mov    eax,0x3fe103f5
   14001ab4f:	pop    rcx
   14001ab50:	xor    DWORD PTR [rip+0xffffffffef35230d],0x1d88e2f        # 0x12f36ce67
   14001ab5a:	enter  0xe37c,0x53
   14001ab5e:	fwait
   14001ab5f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ab60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ab61:	(bad)  
   14001ab62:	mov    esi,0xc250f2b3
   14001ab67:	ins    BYTE PTR es:[rdi],dx
   14001ab68:	movabs al,ds:0x9b909d19094e41dd
   14001ab71:	lahf   
   14001ab72:	add    esi,edi
   14001ab74:	(bad)  
   14001ab75:	pop    rsi
   14001ab76:	rex.RXB imul r8d,DWORD PTR [r8+0x6f],0x7adc9200
   14001ab7e:	push   rbp
   14001ab7f:	pop    rsi
   14001ab80:	sete   bl
   14001ab83:	stos   BYTE PTR es:[rdi],al
   14001ab84:	sbb    al,0xdd
   14001ab86:	mov    edi,0xdcd7f4b9
   14001ab8b:	cs rex.WRXB jmp 0x14001ab8d
   14001ab8f:	scas   al,BYTE PTR es:[rdi]
   14001ab90:	rex.WRB popf 
   14001ab92:	or     ch,al
   14001ab94:	fs (bad) 
   14001ab96:	(bad)  
   14001ab97:	out    0xec,eax
   14001ab99:	sbb    BYTE PTR [rsi+0x39],0xff
   14001ab9d:	jmp    0x14001ab8f
   14001ab9f:	out    dx,eax
   14001aba0:	adc    esi,DWORD PTR [rdi-0x23]
   14001aba3:	(bad)  
   14001aba4:	xor    r8b,BYTE PTR [rdx+0x6f]
   14001aba8:	(bad)  
   14001aba9:	and    BYTE PTR [rbx+0x2a52d6],dh
   14001abaf:	sbb    eax,0x64ff8fa5
   14001abb4:	or     al,0x21
   14001abb6:	add    eax,0xdb6fe9ae
   14001abbb:	xchg   edi,eax
   14001abbc:	rex retf 
   14001abbe:	xchg   BYTE PTR [rbx+0x2],ch
   14001abc1:	(bad)  
   14001abc2:	jnp    0x14001ab92
   14001abc4:	mov    esp,0xc2dc39f5
   14001abc9:	sbb    dh,ch
   14001abcb:	(bad)
   14001abce:	fidivr DWORD PTR [rsi]
   14001abd0:	int    0xf0
   14001abd2:	mov    dl,0x79
   14001abd4:	jmp    QWORD PTR [rsi-0x26]
   14001abd7:	cs jg  0x14001ac47
   14001abda:	cmp    al,0x7f
   14001abdc:	(bad)  
   14001abdd:	mov    dh,0xca
   14001abdf:	(bad)  
   14001abe0:	loopne 0x14001ac16
   14001abe2:	loopne 0x14001ac51
   14001abe4:	xchg   ecx,eax
   14001abe5:	mov    WORD PTR [rsp+rsi*8+0xf936dc9],gs
   14001abec:	and    esp,DWORD PTR [rdx+0x10]
   14001abef:	or     ebp,eax
   14001abf1:	cmp    esi,DWORD PTR [rax]
   14001abf3:	leave  
   14001abf4:	(bad)  
   14001abf5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001abf6:	rcr    BYTE PTR [rcx-0x2e],0xb6
   14001abfa:	adc    cl,bl
   14001abfc:	(bad)  
   14001abfd:	xchg   esp,eax
   14001abfe:	rex.WRX
   14001abff:	imul   rdx,QWORD PTR [rbx+rdx*8],0xffffffffffffffce
   14001ac04:	push   rdx
   14001ac05:	pop    rdx
   14001ac06:	sar    DWORD PTR [rcx],1
   14001ac08:	(bad)
   14001ac0b:	push   rsi
   14001ac0c:	icebp  
   14001ac0d:	and    eax,0xa3353d1b
   14001ac12:	(bad)  
   14001ac13:	adc    cl,bl
   14001ac15:	sbb    DWORD PTR [rcx-0x35],0x8d12b7d3
   14001ac1c:	rex.WR movabs rbx,0xb8b812779a1b6866
   14001ac26:	or     eax,0xd90daec1
   14001ac2b:	sbb    BYTE PTR [rax],bh
   14001ac2d:	(bad)  
   14001ac2e:	rex.W mov bpl,bpl
   14001ac31:	shr    DWORD PTR [rdx+0x4c],0xcb
   14001ac35:	rex.WRX
   14001ac36:	rex xchg eax,eax
   14001ac38:	jne    0x14001abf9
   14001ac3a:	or     edi,DWORD PTR [rax]
   14001ac3c:	cmp    ah,BYTE PTR [rdx]
   14001ac3e:	es cdq 
   14001ac40:	rex.WX test QWORD PTR [rsi],rcx
   14001ac43:	gs rex.B
   14001ac45:	fwait
   14001ac46:	(bad)  
   14001ac47:	jge    0x14001abe0
   14001ac49:	pop    rsp
   14001ac4a:	clc    
   14001ac4b:	(bad)  
   14001ac4d:	rex.X (bad) 
   14001ac4f:	ins    BYTE PTR es:[rdi],dx
   14001ac50:	xchg   ecx,eax
   14001ac51:	rol    al,0xdb
   14001ac54:	pushf  
   14001ac55:	(bad)  
   14001ac56:	hlt    
   14001ac57:	(bad)  
   14001ac58:	loopne 0x14001ac30
   14001ac5a:	mov    bl,BYTE PTR [rdi-0x4841006b]
   14001ac60:	mov    esi,0xcba3fefb
   14001ac65:	ret    
   14001ac66:	(bad)  
   14001ac67:	push   rbp
   14001ac68:	pop    rsp
   14001ac69:	jp     0x14001ac54
   14001ac6b:	mov    esp,DWORD PTR [rdx+0xa9c4db5]
   14001ac71:	xor    al,0xa1
   14001ac73:	shl    DWORD PTR [rdi-0x2139a4cf],0xcb
   14001ac7a:	(bad)  
   14001ac7b:	(bad)  
   14001ac7c:	in     al,dx
   14001ac7d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ac7e:	mov    ds,esi
   14001ac80:	(bad)  
   14001ac81:	xchg   ecx,eax
   14001ac82:	sbb    eax,0x65ec6673
   14001ac87:	jnp    0x14001ac5a
   14001ac89:	xor    DWORD PTR [rsi],eax
   14001ac8b:	cdq    
   14001ac8c:	(bad)
   14001ac8f:	shl    dl,1
   14001ac91:	add    dh,dh
   14001ac93:	neg    DWORD PTR [esi-0x77]
   14001ac97:	pop    rax
   14001ac98:	rex.XB mov r12d,0x314e64f3
   14001ac9e:	adc    eax,0xf6b94e99
   14001aca3:	clc    
   14001aca4:	cmp    edi,DWORD PTR [rcx+0x307786fe]
   14001acaa:	fidivr WORD PTR [rdi-0x7e812077]
   14001acb0:	in     eax,0xed
   14001acb2:	xor    edx,DWORD PTR [rdi+rdx*2]
   14001acb5:	mov    bh,0xa1
   14001acb7:	fimul  WORD PTR [rbx+0x76112296]
   14001acbd:	and    eax,0xa6c47f11
   14001acc2:	std    
   14001acc3:	mov    dh,0xd3
   14001acc5:	jle    0x14001ac81
   14001acc7:	fimul  WORD PTR [rdi]
   14001acc9:	imul   ebp,DWORD PTR [rcx],0x50036dc0
   14001accf:	jmp    0x14001acb6
   14001acd1:	repz movabs al,ds:0x4459f7a40466c14c
   14001acdb:	ror    BYTE PTR [rcx+0x1],1
   14001acde:	pop    rdx
   14001acdf:	loopne 0x14001ad11
   14001ace1:	sbb    bl,BYTE PTR [rdi-0x6d8f4712]
   14001ace7:	icebp  
   14001ace8:	xor    BYTE PTR [rdx],bl
   14001acea:	scas   eax,DWORD PTR es:[rdi]
   14001aceb:	fs fcmovnbe st,st(0)
   14001acee:	push   rcx
   14001acef:	xlat   BYTE PTR ds:[rbx]
   14001acf0:	pop    rsp
   14001acf1:	jne    0x14001acdc
   14001acf3:	pop    rsp
   14001acf4:	imul   esi,DWORD PTR [rbx],0x7e
   14001acf7:	jmp    0xff96072c
   14001acfc:	jnp    0x14001ad27
   14001acfe:	(bad)  [rbp-0x1cbaaff]
   14001ad04:	in     al,0xa8
   14001ad06:	and    BYTE PTR [rdx+0x9],dh
   14001ad09:	xchg   edx,eax
   14001ad0a:	xchg   ecx,eax
   14001ad0b:	adc    bh,ah
   14001ad0d:	adc    BYTE PTR [rdi+0x6b6808a6],dl
   14001ad13:	out    0x92,eax
   14001ad15:	xchg   ecx,eax
   14001ad16:	mov    al,0xe8
   14001ad18:	(bad)  
   14001ad19:	mov    ecx,0xf60838b8
   14001ad1e:	fucom  st(6)
   14001ad20:	push   0x1fb7d346
   14001ad25:	lahf   
   14001ad26:	rex.RXB movabs al,ds:0x2ff9deb629fe3c20
   14001ad30:	cmp    dl,dh
   14001ad32:	mov    edi,0x6e034dd2
   14001ad37:	movsxd esi,DWORD PTR [rip+0x35dee0]        # 0x140378c1d
   14001ad3d:	repz retf 
   14001ad3f:	je     0x14001ad5e
   14001ad41:	push   rsp
   14001ad42:	jl     0x14001ad43
   14001ad44:	in     al,dx
   14001ad45:	addr32 mov esi,0x6d64ecf0
   14001ad4b:	repz mov esi,DWORD PTR [rbp-0x2a348836]
   14001ad52:	or     eax,DWORD PTR [rdi+0x74]
   14001ad55:	imul   DWORD PTR [rdx]
   14001ad57:	pop    rdx
   14001ad58:	out    dx,eax
   14001ad59:	(bad)  
   14001ad5a:	fwait
   14001ad5b:	mov    bl,0x69
   14001ad5d:	push   0xffffffffe282069a
   14001ad62:	lods   eax,DWORD PTR ds:[rsi]
   14001ad63:	pushf  
   14001ad64:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ad65:	sbb    ah,BYTE PTR [rdi-0x10]
   14001ad68:	int    0x95
   14001ad6a:	lods   al,BYTE PTR ds:[rsi]
   14001ad6b:	mov    edx,0xb4002c92
   14001ad70:	ficomp WORD PTR [rax+rsi*1-0x12]
   14001ad74:	jle    0x14001adb1
   14001ad76:	test   DWORD PTR cs:[ecx+ebx*2+0x3f8853a7],esi
   14001ad7f:	out    0xf0,eax
   14001ad81:	xchg   ebx,eax
   14001ad82:	(bad)  
   14001ad83:	or     edx,DWORD PTR [rsi]
   14001ad85:	jne    0x14001ad3d
   14001ad87:	(bad)  
   14001ad88:	test   DWORD PTR [rsi-0x7a],esp
   14001ad8b:	or     al,0xc7
   14001ad8d:	pushf  
   14001ad8e:	jns    0x14001ad7b
   14001ad90:	(bad)  
   14001ad91:	sbb    DWORD PTR [rbx+rcx*1+0x34],edx
   14001ad95:	(bad)  
   14001ad96:	sahf   
   14001ad97:	addr32 jae 0x14001ad85
   14001ad9a:	xor    al,0xd5
   14001ad9c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ad9d:	repz enter 0xdfe,0xd0
   14001ada2:	pop    rcx
   14001ada3:	sbb    esp,DWORD PTR [rdx+0x63]
   14001ada6:	adc    edi,DWORD PTR [rsi+0x24]
   14001ada9:	sar    DWORD PTR [rsi-0x2d],1
   14001adac:	ror    BYTE PTR [rdi+0x5dcc6258],0x7b
   14001adb3:	popf   
   14001adb4:	mov    esp,0x4723593d
   14001adb9:	rex.X clc 
   14001adbb:	fninit 
   14001adbd:	rex.WX cmp BYTE PTR [rdx+0x76],0xf7
   14001adc2:	xchg   edx,eax
   14001adc3:	push   rdx
   14001adc4:	add    BYTE PTR [rip+0xffffffff8ab706b5],ah        # 0xcab8b47f
   14001adca:	adc    al,0x7f
   14001adcc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001adcd:	push   rsp
   14001adce:	cmp    eax,0x3af9bd1b
   14001add3:	movabs eax,ds:0xc591ae90231dab3d
   14001addc:	icebp  
   14001addd:	sub    ebp,ecx
   14001addf:	rex.WX (bad) 
   14001ade1:	rcl    BYTE PTR [rsi+rcx*2+0x7778db4],1
   14001ade8:	ror    DWORD PTR [rbx],cl
   14001adea:	xor    eax,0x6307c23
   14001adef:	iret   
   14001adf0:	jg     0x14001ae2d
   14001adf2:	jmp    0x16ada03a3
   14001adf7:	jge    0x14001adad
   14001adf9:	jns    0x14001ae64
   14001adfb:	mov    WORD PTR [rax-0x56],ds
   14001adfe:	cmc    
   14001adff:	mov    bh,0xc7
   14001ae01:	and    al,0x29
   14001ae03:	in     al,0xcf
   14001ae05:	push   rsi
   14001ae06:	test   al,0xb3
   14001ae08:	in     eax,0xf8
   14001ae0a:	mov    edx,0xbbff631c
   14001ae0f:	cmp    edi,0x46d1980d
   14001ae15:	add    DWORD PTR [rdi+0x32dee4d],esi
   14001ae1b:	lock lea edi,[rbp+0x23fc03bd]
   14001ae22:	iret   
   14001ae23:	mov    esp,0x47c1ed7d
   14001ae28:	(bad)  
   14001ae29:	sti    
   14001ae2a:	push   rsp
   14001ae2b:	xor    eax,0xfbd97d1e
   14001ae30:	(bad)  
   14001ae31:	cmp    eax,0xb858ae7b
   14001ae36:	mov    fs,WORD PTR [rbx+0x5612af19]
   14001ae3c:	(bad)  
   14001ae3d:	jrcxz  0x14001adda
   14001ae3f:	cdq    
   14001ae40:	and    eax,edi
   14001ae42:	mov    cl,0xcb
   14001ae44:	(bad)  
   14001ae45:	adc    BYTE PTR [rbx+rbp*2+0x259e89af],ch
   14001ae4c:	sub    BYTE PTR [rdx-0x39],dl
   14001ae4f:	leave  
   14001ae50:	cmp    al,0xa2
   14001ae52:	test   eax,0x98f6cce3
   14001ae57:	jb     0x14001aed7
   14001ae59:	xchg   edx,eax
   14001ae5a:	(bad)  
   14001ae5b:	vhsubps xmm5,xmm12,XMMWORD PTR [rsi]
   14001ae5f:	xchg   edi,eax
   14001ae60:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ae61:	movabs ds:0xf9496b18e687ede0,eax
   14001ae6a:	movabs ds:0xb099ae2884d3744e,eax
   14001ae73:	std    
   14001ae74:	clc    
   14001ae75:	(bad)  
   14001ae76:	fnstcw WORD PTR [rdi]
   14001ae78:	icebp  
   14001ae79:	or     al,0xc3
   14001ae7b:	pop    rbp
   14001ae7c:	sbb    esi,ebx
   14001ae7e:	mov    ebp,0xc6fe32fd
   14001ae83:	adc    eax,0xc89d27a8
   14001ae88:	and    al,0xba
   14001ae8a:	(bad)
   14001ae8d:	ja     0x14001af07
   14001ae8f:	xor    eax,0x7fd09fef
   14001ae94:	imul   ebp,DWORD PTR [rdi],0x62e0f44c
   14001ae9a:	rex.RX mov DWORD PTR [rdx],0xce3f217c
   14001aea1:	movabs al,ds:0x4a7cc0191c9e7e5f
   14001aeaa:	sar    BYTE PTR [rdx-0x5],1
   14001aead:	jns    0x14001af11
   14001aeaf:	push   rax
   14001aeb0:	mov    dl,0x8
   14001aeb2:	jae    0x14001aefe
   14001aeb4:	sbb    DWORD PTR [rcx+rbp*1],edx
   14001aeb7:	adc    cl,BYTE PTR [rcx-0x33a8d5d9]
   14001aebd:	jmp    0x14001aefa
   14001aebf:	sbb    al,0x4
   14001aec1:	mov    ch,0x9c
   14001aec3:	lahf   
   14001aec4:	js     0x14001af03
   14001aec6:	push   rdx
   14001aec7:	addr32 jno 0x14001af15
   14001aeca:	and    DWORD PTR [rsi-0x2d],ebp
   14001aecd:	scas   eax,DWORD PTR es:[rdi]
   14001aece:	xchg   esp,eax
   14001aecf:	sub    bl,BYTE PTR [rcx+0x7f5f5aaa]
   14001aed5:	mov    edx,0x9fe86d70
   14001aeda:	xor    DWORD PTR [rdx],eax
   14001aedc:	or     DWORD PTR [rax+0x62],0xffffffd4
   14001aee0:	(bad)
   14001aee5:	add    BYTE PTR [rax+0x4750230],dl
   14001aeeb:	or     DWORD PTR [rcx+0x88e4474],ebx
   14001aef1:	or     al,0xdf
   14001aef3:	rex.W cmp BYTE PTR [rax],al
   14001aef6:	xor    BYTE PTR [rdx+0x720fc0fe],ah
   14001aefc:	out    0xf0,al
   14001aefe:	(bad)  
   14001aeff:	in     al,0xc4
   14001af01:	rex.WXB
   14001af02:	rex
   14001af03:	rex.WRB mov WORD PTR [r10],es
   14001af06:	outs   dx,BYTE PTR ds:[rsi]
   14001af07:	pop    rbx
   14001af08:	xchg   eax,esp
   14001af0a:	mov    ebp,0x89be0061
   14001af0f:	mov    bh,0x7f
   14001af11:	mul    DWORD PTR [rdi+0x78d4ff3f]
   14001af17:	gs in  eax,dx
   14001af19:	jae    0x14001af70
   14001af1b:	xor    eax,0xbbd29efc
   14001af20:	(bad)  
   14001af21:	and    DWORD PTR ss:[rax],esp
   14001af24:	movabs eax,ds:0xe2cec15de09eb166
   14001af2d:	and    dl,bl
   14001af2f:	loop   0x14001af72
   14001af31:	mov    ah,0xa8
   14001af33:	sub    BYTE PTR [rdi],ch
   14001af35:	popf   
   14001af36:	mov    ebx,esp
   14001af38:	mov    eax,0x666f850c
   14001af3d:	or     eax,0xbbfad53e
   14001af42:	lods   al,BYTE PTR ds:[rsi]
   14001af43:	mov    ebp,0x460f8666
   14001af48:	fdiv   DWORD PTR [rcx]
   14001af4a:	sub    edx,DWORD PTR [rax-0xd671c47]
   14001af50:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001af51:	in     eax,0xad
   14001af53:	repz pop rbp
   14001af55:	scas   eax,DWORD PTR es:[rdi]
   14001af56:	jmp    0xe6e0d4f9
   14001af5b:	fnsave [rdx+0x17]
   14001af5e:	popf   
   14001af5f:	sbb    ecx,DWORD PTR [rsi+rsi*8-0x2dcc13b1]
   14001af66:	(bad)  
   14001af67:	test   ch,ah
   14001af69:	rex.WRB (bad) 
   14001af6b:	mov    esp,0x9c0c13e5
   14001af70:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14001af72:	pushf  
   14001af73:	gs jne 0x14001af71
   14001af76:	rex.RB stos BYTE PTR es:[rdi],al
   14001af78:	sub    edx,DWORD PTR [rdi]
   14001af7a:	ficomp DWORD PTR [rcx+0x7f]
   14001af7d:	adc    dh,BYTE PTR [rbx]
   14001af7f:	rcl    BYTE PTR [rbx+rax*8-0x85d1de9],cl
   14001af86:	push   rdi
   14001af87:	lods   al,BYTE PTR ds:[rsi]
   14001af88:	out    0xbf,eax
   14001af8a:	mov    bl,0xd2
   14001af8c:	(bad)  
   14001af8d:	mov    ah,0xde
   14001af8f:	(bad)  
   14001af91:	pop    rbx
   14001af92:	pop    rcx
   14001af93:	mov    ecx,0x2ec6b2b3
   14001af98:	cmp    cl,cl
   14001af9a:	rex.XB
   14001af9b:	rex.X cmp al,bl
   14001af9e:	(bad)  
   14001af9f:	movabs eax,ds:0xefa48028da45fb45
   14001afa8:	lods   eax,DWORD PTR ds:[rsi]
   14001afa9:	(bad)  
   14001afaa:	outs   dx,BYTE PTR ds:[rsi]
   14001afab:	fwait
   14001afac:	mov    edx,edx
   14001afae:	adc    edx,edx
   14001afb0:	(bad)  
   14001afb1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001afb2:	push   rsi
   14001afb3:	loope  0x14001afa2
   14001afb5:	fstp   QWORD PTR [rbp-0x6692eaf5]
   14001afbb:	sbb    eax,0x6fab58a3
   14001afc0:	(bad)  
   14001afc1:	(bad)  
   14001afc2:	ins    BYTE PTR es:[rdi],dx
   14001afc3:	pop    rbx
   14001afc4:	outs   dx,BYTE PTR ds:[rsi]
   14001afc5:	or     eax,0x79213a44
   14001afca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001afcb:	mov    esi,0xace35e49
   14001afd0:	cmp    eax,0x889756f
   14001afd5:	imul   r15d,DWORD PTR [rax+0x3592373a],0x24
   14001afdd:	and    bx,WORD PTR [rbp*2+0x395a3473]
   14001afe5:	movabs ds:0x41fe3c25e2409033,al
   14001afee:	mov    ecx,0xa87fe1f4
   14001aff3:	(bad)  
   14001aff4:	(bad)  
   14001aff5:	xor    DWORD PTR [rbp-0x7fac1283],ebp
   14001affb:	push   rdi
   14001affc:	pop    rbp
   14001affd:	mov    esi,0xe87fb789
   14001b002:	lods   eax,DWORD PTR ds:[rsi]
   14001b003:	out    dx,eax
   14001b004:	pop    rsp
   14001b005:	cmp    edx,esi
   14001b007:	enter  0xef63,0x1b
   14001b00b:	(bad)  
   14001b00c:	sub    al,0x7f
   14001b00e:	(bad)  
   14001b00f:	(bad)  
   14001b010:	in     eax,0xfb
   14001b012:	(bad)  
   14001b013:	mov    al,0x11
   14001b015:	or     eax,0x570e475
   14001b01a:	(bad)  
   14001b01b:	jle    0x14001b059
   14001b01d:	push   0x26
   14001b01f:	push   rsp
   14001b020:	movabs eax,ds:0xba9c79b7b25546e6
   14001b029:	sub    BYTE PTR [rcx],dl
   14001b02b:	out    0x23,eax
   14001b02d:	gs mov bh,0xa9
   14001b030:	movabs eax,ds:0xec17134d140869a9
   14001b039:	int3   
   14001b03a:	imul   ebp,esi,0x29
   14001b03d:	rex.WX sbb rax,0x6d08ae17
   14001b043:	push   0x30
   14001b045:	test   DWORD PTR [rbp-0x59],0x1d8bbeaf
   14001b04c:	nop
   14001b04d:	adc    al,0xbe
   14001b04f:	cmp    eax,DWORD PTR [rdx+0x3c]
   14001b052:	jns    0x14001b053
   14001b054:	or     DWORD PTR [rdx+0x2a88f9d0],0x5e
   14001b05b:	imul   ecx,esi,0xffffffbc
   14001b05e:	in     eax,0xa3
   14001b060:	xor    al,0x87
   14001b062:	fild   WORD PTR [rax-0x5a7a8645]
   14001b068:	mov    esp,DWORD PTR [rdi+0x167cb858]
   14001b06e:	mov    bh,0x73
   14001b070:	add    eax,0xb42404c2
   14001b075:	sahf   
   14001b076:	xchg   ecx,eax
   14001b077:	fsub   st,st(3)
   14001b079:	out    dx,eax
   14001b07a:	and    eax,0x304fd35
   14001b07f:	add    DWORD PTR [rbp-0x2c4a01bb],esi
   14001b085:	(bad)  
   14001b086:	rex.XB push r12
   14001b088:	add    BYTE PTR [rdi+0x7d7915ee],ah
   14001b08e:	or     DWORD PTR cs:[rcx-0x2069317b],0xffffffa7
   14001b096:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b097:	ret    0x5245
   14001b09a:	push   rbp
   14001b09b:	movabs al,ds:0x2d9fde5a19e232fd
   14001b0a4:	rex.X (bad) 
   14001b0a6:	xchg   esp,eax
   14001b0a7:	rex.WRXB (bad) 
   14001b0a9:	jg     0x14001b126
   14001b0ab:	mov    ?,ecx
   14001b0ad:	push   rdx
   14001b0ae:	in     al,0x32
   14001b0b0:	movabs al,ds:0x84185b75f93e8101
   14001b0b9:	ss fcmovbe st,st(2)
   14001b0bc:	(bad)  
   14001b0bd:	push   rdi
   14001b0be:	jb     0x14001b0ee
   14001b0c0:	pop    rsp
   14001b0c1:	out    dx,eax
   14001b0c2:	pop    rsi
   14001b0c3:	mov    edx,0xfbaf8b0e
   14001b0c8:	(bad)  
   14001b0c9:	mov    BYTE PTR [rbp-0x6e7d92cf],dl
   14001b0cf:	adc    eax,ecx
   14001b0d1:	mov    eax,esi
   14001b0d3:	mov    ebx,0x25f9b323
   14001b0d8:	(bad)  
   14001b0d9:	add    al,0xf6
   14001b0db:	and    DWORD PTR [rbx],ecx
   14001b0dd:	or     al,0xda
   14001b0df:	enter  0x25ad,0x31
   14001b0e3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b0e4:	jae    0x14001b136
   14001b0e6:	(bad)  
   14001b0e7:	jne    0x14001b0db
   14001b0e9:	rex.WB loopne 0x14001b16b
   14001b0ec:	movabs ds:0xee5db7fbac92141d,al
   14001b0f5:	add    esi,DWORD PTR ds:[rax]
   14001b0f8:	scas   eax,DWORD PTR es:[rdi]
   14001b0f9:	clc    
   14001b0fa:	out    dx,al
   14001b0fb:	ror    BYTE PTR [rdi-0x601c1981],0x7d
   14001b102:	ret    
   14001b103:	repnz loope 0x14001b0a9
   14001b106:	lahf   
   14001b107:	scas   eax,DWORD PTR es:[rdi]
   14001b108:	(bad)  
   14001b109:	or     edi,0xffffffab
   14001b10c:	(bad)  
   14001b10d:	ficomp WORD PTR [rsi-0x6c5989c4]
   14001b113:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b114:	cmp    al,0xdd
   14001b116:	(bad)  
   14001b117:	push   rbp
   14001b118:	sbb    al,0x45
   14001b11a:	test   al,0x59
   14001b11c:	ins    DWORD PTR es:[rdi],dx
   14001b11d:	data16 mov WORD PTR [rbp+rax*8-0x73],ds
   14001b122:	(bad)  
   14001b123:	movabs ds:0x1d291497c2928acc,eax
   14001b12c:	rol    BYTE PTR [rax+0x30],1
   14001b12f:	(bad)  
   14001b130:	mov    edi,0xaa1fa75a
   14001b135:	add    al,0xd
   14001b137:	mov    cl,0x3d
   14001b139:	pop    rax
   14001b13a:	adc    eax,0x93409ad5
   14001b13f:	xchg   ebp,eax
   14001b140:	mov    ebx,0xeb7aa7d3
   14001b145:	out    0x52,eax
   14001b147:	sub    BYTE PTR [rbx+0x20],bh
   14001b14a:	rex.XB pushf 
   14001b14c:	sti    
   14001b14d:	rex.W jbe 0x14001b1cd
   14001b150:	loopne 0x14001b1b8
   14001b152:	sti    
   14001b153:	in     al,dx
   14001b154:	sahf   
   14001b155:	js     0x14001b0d9
   14001b157:	jae    0x14001b1a8
   14001b159:	(bad)  
   14001b15a:	(bad)  
   14001b15b:	push   rax
   14001b15c:	add    ebx,DWORD PTR [rdx+rdi*2-0x77]
   14001b160:	(bad)  
   14001b161:	mov    esp,DWORD PTR [rdi-0x3ba351d7]
   14001b167:	in     eax,dx
   14001b168:	out    dx,eax
   14001b169:	and    dl,bl
   14001b16b:	sbb    cl,ch
   14001b16d:	xlat   BYTE PTR ds:[rbx]
   14001b16e:	fldcw  WORD PTR [rsi-0x3b1cb1fe]
   14001b174:	lahf   
   14001b175:	fsubr  st,st(5)
   14001b177:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b178:	cdq    
   14001b179:	cmc    
   14001b17a:	xchg   edi,eax
   14001b17b:	sub    ah,BYTE PTR [rdx+0xe]
   14001b17e:	jb     0x14001b137
   14001b180:	popf   
   14001b181:	jp     0x14001b169
   14001b183:	mov    esp,0x45d70a7e
   14001b188:	call   0xd5155439
   14001b18d:	ds (bad) 
   14001b18f:	std    
   14001b190:	je     0x14001b12f
   14001b192:	xor    BYTE PTR [rdi],bh
   14001b194:	jns    0x14001b192
   14001b196:	rex cmp esp,DWORD PTR [rsi]
   14001b199:	sub    al,0x1a
   14001b19b:	sbb    DWORD PTR [rsp+rbp*4+0x64],eax
   14001b19f:	rex.RXB stos DWORD PTR es:[rdi],eax
   14001b1a1:	sub    cl,ch
   14001b1a3:	jno    0x14001b1ac
   14001b1a5:	sub    BYTE PTR [rax-0x35],dl
   14001b1a8:	mov    cl,0xb3
   14001b1aa:	icebp  
   14001b1ab:	retf   
   14001b1ac:	cmp    BYTE PTR [rax+0x1b],al
   14001b1af:	shr    BYTE PTR [rbx],cl
   14001b1b1:	sub    DWORD PTR [rip+0xffffffff88a68368],edx        # 0xc8a8351f
   14001b1b7:	(bad)  
   14001b1b8:	mov    eax,0x2818edbc
   14001b1bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b1be:	hlt    
   14001b1bf:	rex.WR ins DWORD PTR es:[rdi],dx
   14001b1c1:	adc    DWORD PTR [rsi],0x9e3edebb
   14001b1c7:	rex.WXB movabs r11,0xfc431e5a6afa5864
   14001b1d1:	ins    DWORD PTR es:[rdi],dx
   14001b1d2:	and    al,0x2f
   14001b1d4:	rex.RXB pop r11
   14001b1d6:	jne    0x14001b220
   14001b1d8:	xchg   DWORD PTR [rbp-0x39],ebp
   14001b1db:	sbb    esp,ebp
   14001b1dd:	sub    dl,dh
   14001b1df:	xor    DWORD PTR [rdi+0x52],esi
   14001b1e2:	ret    0x36a1
   14001b1e5:	(bad)  
   14001b1e6:	std    
   14001b1e7:	sub    ecx,edi
   14001b1e9:	cli    
   14001b1ea:	rex.XB jg 0x14001b238
   14001b1ed:	(bad)  
   14001b1ee:	stc    
   14001b1ef:	sbb    dh,BYTE PTR [rdi+0x777c1a99]
   14001b1f5:	sbb    BYTE PTR [rax-0x70121d91],al
   14001b1fb:	cmp    al,0xfa
   14001b1fd:	clc    
   14001b1fe:	ret    0x6f43
   14001b201:	jns    0x14001b1ca
   14001b203:	jnp    0x14001b18b
   14001b205:	retf   
   14001b206:	sub    ebx,DWORD PTR [rdi-0xe]
   14001b209:	gs cmc 
   14001b20b:	rex.WB push r9
   14001b20d:	cmp    eax,0x7ea4d004
   14001b212:	repz and al,0xb9
   14001b215:	sahf   
   14001b216:	xor    edi,edi
   14001b218:	cmp    eax,0x95441104
   14001b21d:	(bad)  
   14001b21e:	mov    bl,0x47
   14001b220:	loope  0x14001b22c
   14001b222:	outs   dx,BYTE PTR ds:[rsi]
   14001b223:	sub    al,0xae
   14001b225:	xor    DWORD PTR [rbx+0x5],esi
   14001b228:	clc    
   14001b229:	(bad)  
   14001b22a:	ret    0x9c79
   14001b22d:	sahf   
   14001b22e:	rex.RXB
   14001b22f:	fwait
   14001b230:	xchg   BYTE PTR [rax+0x13ff7b1a],ah
   14001b236:	rcl    BYTE PTR [rdx+rax*1],0xea
   14001b23a:	shr    ebp,cl
   14001b23c:	call   0x177737d7b
   14001b241:	jae    0x14001b1e3
   14001b243:	(bad)  
   14001b244:	test   BYTE PTR [rsi],0xe9
   14001b247:	sub    bh,BYTE PTR [rbx+0x7e]
   14001b24a:	(bad)  [rsi+0x30]
   14001b24d:	movabs eax,ds:0x8342d7b157b3790d
   14001b256:	(bad)  
   14001b257:	sub    ebx,DWORD PTR [rsi+0x7a]
   14001b25a:	(bad)  [rdi+0x130f9628]
   14001b260:	scas   al,BYTE PTR es:[rdi]
   14001b261:	sahf   
   14001b262:	gs ins DWORD PTR es:[rdi],dx
   14001b264:	sti    
   14001b265:	and    al,0xe3
   14001b267:	retf   
   14001b268:	out    0x71,eax
   14001b26a:	cmp    edx,DWORD PTR [rdi-0x70]
   14001b26d:	data16 rex.WX pop rsp
   14001b270:	out    0x2b,al
   14001b272:	rex.RB pushf 
   14001b274:	rol    DWORD PTR [rax],0x3f
   14001b277:	mov    DWORD PTR [rbx],ecx
   14001b279:	xchg   DWORD PTR [rdx+0x1c],ecx
   14001b27c:	stc    
   14001b27d:	cmp    eax,0x62920067
   14001b282:	ja     0x14001b2b3
   14001b284:	lods   al,BYTE PTR ds:[rsi]
   14001b285:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b286:	mov    ebx,ebx
   14001b288:	imul   ebp,ebx,0x464ae94d
   14001b28e:	icebp  
   14001b28f:	shl    DWORD PTR [rbp-0x12610864],cl
   14001b295:	jae    0x14001b2fd
   14001b297:	mov    al,0x3a
   14001b299:	cmp    DWORD PTR [rdi+0x5b],edi
   14001b29c:	rex push 0x758a490d
   14001b2a2:	xor    al,0x3d
   14001b2a4:	addr32 mov ecx,0x7e86c3b4
   14001b2aa:	jbe    0x14001b2ec
   14001b2ac:	mov    esp,0x70e2dd74
   14001b2b1:	shr    dh,1
   14001b2b3:	add    eax,0xc7402e34
   14001b2b8:	push   rax
   14001b2b9:	out    0xe3,al
   14001b2bb:	and    ebx,ecx
   14001b2bd:	jnp    0x14001b32c
   14001b2bf:	mov    edi,0x24e77487
   14001b2c4:	ret    
   14001b2c5:	xchg   esp,eax
   14001b2c6:	rol    BYTE PTR [rax+0x69],0xd3
   14001b2ca:	adc    esp,DWORD PTR [rdi]
   14001b2cc:	jbe    0x14001b30d
   14001b2ce:	rex.W loop 0x14001b335
   14001b2d1:	(bad)  
   14001b2d2:	adc    DWORD PTR [rdi+0xd],esp
   14001b2d5:	icebp  
   14001b2d6:	(bad)  
   14001b2d7:	rcl    DWORD PTR [rdi+0x0],1
   14001b2da:	and    BYTE PTR [rsi-0x2c],0xed
   14001b2de:	(bad)  
   14001b2df:	mov    dl,0x6b
   14001b2e1:	mov    eax,0x7fae56f4
   14001b2e6:	add    bh,BYTE PTR [rax]
   14001b2e8:	(bad)  
   14001b2ea:	jrcxz  0x14001b359
   14001b2ec:	xchg   ecx,eax
   14001b2ed:	cmp    ebx,ebx
   14001b2ef:	add    BYTE PTR [rdx+rdx*8-0x2cd2f425],bh
   14001b2f6:	retf   0xe9bf
   14001b2f9:	and    ebx,DWORD PTR [rdi]
   14001b2fb:	mov    edi,0x8781f36f
   14001b300:	mov    edi,0x9f060d50
   14001b305:	ja     0x14001b2b5
   14001b307:	js     0x14001b35f
   14001b309:	add    eax,0x1e766909
   14001b30e:	ror    BYTE PTR [rcx],1
   14001b310:	add    BYTE PTR [rcx+0x2b],ch
   14001b313:	lock adc cl,BYTE PTR [rcx+0x636e1f]
   14001b31a:	add    BYTE PTR [rax],ah
   14001b31c:	add    BYTE PTR [rcx+0x44],cl
   14001b31f:	push   r12
   14001b321:	rex.XB
   14001b322:	rex.WXB
   14001b323:	xrelease rex.WR mov BYTE PTR [rsi+0x67],r12b
   14001b328:	or     DWORD PTR [rdx],0x65
   14001b32b:	xor    esp,DWORD PTR [rbp-0x73]
   14001b32e:	(bad)  
   14001b32f:	fst    st(1)
   14001b331:	cwde   
   14001b332:	frstor [rbx+0x4397508f]
   14001b338:	retf   0xc0a2
   14001b33b:	jmp    0xe809f559
   14001b340:	rex.WRB jmp 0x14001b34c
   14001b343:	sbb    dl,BYTE PTR [rcx]
   14001b345:	jbe    0x14001b2f4
   14001b347:	(bad)  
   14001b348:	pop    rdx
   14001b349:	cmp    DWORD PTR [rbp+0xa316cdd],0x70
   14001b350:	popf   
   14001b351:	xchg   BYTE PTR [rbp+0x693f6fb6],bl
   14001b357:	(bad)  
   14001b358:	(bad)  
   14001b359:	test   ebx,edi
   14001b35b:	not    BYTE PTR [rdi+rsi*1+0x38]
   14001b35f:	push   0xffffffffdc049f3d
   14001b364:	je     0x14001b305
   14001b366:	sub    ecx,DWORD PTR [rdi+0x7f]
   14001b369:	nop
   14001b36a:	sub    ecx,DWORD PTR [rdi+0x74c19bbe]
   14001b370:	xchg   edi,eax
   14001b371:	shl    DWORD PTR [rbp-0x4291532d],0x48
   14001b378:	jno    0x14001b36f
   14001b37a:	and    ch,BYTE PTR [rsi-0x4e]
   14001b37d:	mov    ebp,DWORD PTR [rdx+0x6d]
   14001b380:	xor    esi,ecx
   14001b382:	(bad)  
   14001b384:	xchg   edx,eax
   14001b385:	and    esp,eax
   14001b387:	or     al,0xf9
   14001b389:	test   DWORD PTR [rdx],0x7fd8c69e
   14001b38f:	sub    DWORD PTR [rdi+rbp*8-0x2f92017c],ebp
   14001b396:	nop
   14001b397:	ret    
   14001b398:	fldcw  WORD PTR [rsi]
   14001b39a:	idiv   DWORD PTR [rdi]
   14001b39c:	mov    bl,0xf7
   14001b39e:	movabs al,ds:0xdbd9e4ae1a374d33
   14001b3a7:	vpsrad xmm12,xmm7,XMMWORD PTR [rdi+0x5cbeb49c]
   14001b3af:	rex.W (bad) 
   14001b3b1:	mov    bh,0xf5
   14001b3b3:	mov    dl,0x73
   14001b3b5:	(bad)  
   14001b3b6:	(bad)  
   14001b3b7:	(bad)  
   14001b3b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b3ba:	push   rcx
   14001b3bb:	(bad)  
   14001b3bc:	pop    rbp
   14001b3bd:	add    edx,DWORD PTR [rcx]
   14001b3bf:	rex.WB
   14001b3c0:	push   r14
   14001b3c2:	add    ecx,DWORD PTR [rdx+rbx*4]
   14001b3c5:	(bad)  
   14001b3c6:	or     DWORD PTR [rbp+0x370700bd],esi
   14001b3cc:	(bad)  
   14001b3cd:	adc    DWORD PTR [rbx],edi
   14001b3cf:	cmovge eax,DWORD PTR [rbx+0x1e8cc44]
   14001b3d6:	sbb    DWORD PTR [rax],eax
   14001b3d8:	xchg   esp,eax
   14001b3d9:	js     0x14001b3dd
   14001b3db:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b3dc:	or     ecx,eax
   14001b3de:	and    dl,BYTE PTR [rsi-0x33849622]
   14001b3e4:	jmp    0x16fa5fcc7
   14001b3e9:	rex.RXB (bad) 
   14001b3eb:	push   rax
   14001b3ec:	in     al,dx
   14001b3ed:	mov    eax,0x4c28b3b5
   14001b3f2:	fmul   st(6),st
   14001b3f4:	stos   BYTE PTR es:[rdi],al
   14001b3f5:	rex.WRX
   14001b3f6:	ds mov ebx,0x5c1fecc6
   14001b3fc:	movabs eax,ds:0x78019e77821dadbc
   14001b405:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b406:	mov    bh,0x4f
   14001b408:	retf   0x1ef
   14001b40b:	mov    bh,0xb8
   14001b40d:	mov    esi,0x63fa7831
   14001b412:	lahf   
   14001b413:	jl     0x14001b48b
   14001b415:	mov    esp,0x5f45f6b2
   14001b41a:	push   rsi
   14001b41b:	fisttp WORD PTR [rcx+0x4a1891c8]
   14001b421:	jmp    0x14001b44e
   14001b423:	(bad)  
   14001b424:	scas   eax,DWORD PTR es:[rdi]
   14001b425:	mov    ah,0xce
   14001b427:	ds fwait
   14001b429:	add    ebx,edx
   14001b42b:	mov    ah,0x2e
   14001b42d:	repnz fidivr WORD PTR [rbp-0x41]
   14001b431:	loop   0x14001b3c3
   14001b433:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b434:	xor    sp,dx
   14001b437:	push   rsp
   14001b438:	(bad)
   14001b43c:	jrcxz  0x14001b40a
   14001b43e:	mov    al,BYTE PTR [rdx-0x31d7575e]
   14001b444:	popf   
   14001b445:	mov    WORD PTR [rbx-0x599ab700],?
   14001b44b:	nop
   14001b44c:	(bad)  
   14001b44d:	push   rbp
   14001b44e:	mov    BYTE PTR [rdx],ch
   14001b450:	rex.WRX cmp rax,0xffffffffee9a0341
   14001b456:	scas   al,BYTE PTR es:[rdi]
   14001b457:	(bad)  
   14001b458:	add    al,0xd4
   14001b45a:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14001b45c:	stc    
   14001b45d:	ss call 0x1827e1901
   14001b463:	enter  0xd26b,0x75
   14001b467:	xchg   esp,eax
   14001b468:	rex.RXB
   14001b469:	addr32 xor eax,edx
   14001b46c:	repnz (bad) 
   14001b46e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b46f:	fdivp  st(6),st
   14001b471:	sbb    DWORD PTR [rdx+0x1cbd116a],ecx
   14001b477:	sbb    DWORD PTR [rdi-0x3d],edi
   14001b47a:	retf   
   14001b47b:	out    0x71,eax
   14001b47d:	(bad)  
   14001b47e:	scas   eax,DWORD PTR es:[rdi]
   14001b47f:	rex.X cwde 
   14001b481:	(bad)  
   14001b482:	mov    BYTE PTR [rsi+0x3e],al
   14001b485:	(bad)  
   14001b486:	(bad)  
   14001b487:	(bad)  
   14001b488:	icebp  
   14001b489:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b48a:	int3   
   14001b48b:	mov    ch,0xfc
   14001b48d:	mov    dh,0xe3
   14001b48f:	mov    esp,0x14d8173a
   14001b494:	xor    bl,BYTE PTR [rcx]
   14001b496:	(bad)  
   14001b497:	xor    cl,BYTE PTR [r11]
   14001b49a:	xor    BYTE PTR [rdi+0x14],ah
   14001b49d:	rex.WB jno 0x14001b473
   14001b4a0:	out    0xc4,eax
   14001b4a2:	enter  0xee33,0x95
   14001b4a6:	out    0x91,eax
   14001b4a8:	test   eax,0xb01a2932
   14001b4ad:	in     eax,dx
   14001b4ae:	rex.W fiadd DWORD PTR [rdi+0xa]
   14001b4b2:	cwde   
   14001b4b3:	(bad)  
   14001b4b4:	cli    
   14001b4b5:	rex.R in eax,dx
   14001b4b7:	cmp    al,0xdd
   14001b4b9:	or     edi,edi
   14001b4bb:	out    0x70,eax
   14001b4bd:	add    al,BYTE PTR [rax+rdx*8+0x32237984]
   14001b4c4:	addr32 rex.W mov bpl,0x7b
   14001b4c8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b4c9:	in     eax,dx
   14001b4ca:	sti    
   14001b4cb:	mov    dh,0x5b
   14001b4cd:	sub    ch,bh
   14001b4cf:	adc    dl,BYTE PTR [rax+0x27]
   14001b4d2:	push   0x212fa6d3
   14001b4d7:	test   esp,edi
   14001b4d9:	(bad)  
   14001b4da:	rex.WRB and BYTE PTR [r14+0x27],r13b
   14001b4de:	(bad)  
   14001b4df:	(bad)  
   14001b4e0:	addr32 loop 0x14001b4a7
   14001b4e3:	adc    DWORD PTR [rdx+rbx*8-0x19],edx
   14001b4e7:	cmp    ecx,ecx
   14001b4e9:	(bad)  
   14001b4ea:	(bad)  
   14001b4eb:	imul   eax,DWORD PTR [rbp-0x39],0xb78457aa
   14001b4f2:	(bad)  
   14001b4f3:	imul   edi,DWORD PTR [rcx],0xebcfccf9
   14001b4f9:	jrcxz  0x14001b4fa
   14001b4fb:	(bad)  
   14001b4fc:	mov    bh,0x31
   14001b4fe:	or     eax,0xc00c73b8
   14001b503:	lods   eax,DWORD PTR ds:[rsi]
   14001b504:	mov    ebp,0x9ff2467d
   14001b509:	cli    
   14001b50a:	lock jae 0x14001b554
   14001b50d:	(bad)  
   14001b50e:	(bad)  
   14001b50f:	jp     0x14001b4f5
   14001b511:	cmp    eax,DWORD PTR [rdi]
   14001b513:	ret    
   14001b514:	loope  0x14001b50d
   14001b516:	mov    eax,0x44567ca2
   14001b51b:	retf   0x9aa0
   14001b51e:	sub    DWORD PTR [rdx+0x725889a],edi
   14001b524:	ss fwait
   14001b526:	sub    BYTE PTR [rbx-0x4316840f],bh
   14001b52c:	push   0x37
   14001b52e:	rex.RX sub r9b,cl
   14001b531:	or     DWORD PTR [rdx-0x7],esp
   14001b534:	js     0x14001b4f2
   14001b536:	jmp    0x14001b4bd
   14001b538:	xchg   BYTE PTR [rcx-0x43],ah
   14001b53b:	rex.WRXB loope 0x14001b548
   14001b53e:	jbe    0x14001b596
   14001b540:	(bad)  
   14001b541:	xor    BYTE PTR [rip+0xfffffffff10e5087],ch        # 0x1311005ce
   14001b547:	addr32 mov edi,0x42de5e86
   14001b54d:	(bad)  
   14001b54e:	add    DWORD PTR [rdx+0x7a634141],0xa1155e0
   14001b558:	or     ch,dh
   14001b55a:	pop    rsp
   14001b55b:	jne    0x14001b59d
   14001b55d:	mov    edx,0xdb439347
   14001b562:	xor    ch,BYTE PTR ss:[rcx-0x3d]
   14001b566:	push   rbp
   14001b567:	fisub  DWORD PTR [rbx-0x286f1dcc]
   14001b56d:	xchg   BYTE PTR [rbx],cl
   14001b56f:	rex.WRXB jg 0x14001b50a
   14001b572:	fucom  st(3)
   14001b574:	rex.WRXB xor r14,r11
   14001b577:	mov    edi,0x69d2f8c1
   14001b57c:	xchg   esi,eax
   14001b57d:	(bad)  
   14001b57e:	mov    ebp,0xafd714c
   14001b583:	outs   dx,BYTE PTR ds:[rsi]
   14001b584:	mov    edx,0xa209f917
   14001b589:	test   al,0x7a
   14001b58b:	nop
   14001b58c:	(bad)  
   14001b58d:	repnz adc ecx,DWORD PTR [rdx]
   14001b590:	lea    esp,[rax+0x27f4b756]
   14001b596:	sub    DWORD PTR [rdx],eax
   14001b598:	push   rax
   14001b599:	fimul  DWORD PTR [rcx+0x3b]
   14001b59c:	scas   al,BYTE PTR es:[rdi]
   14001b59d:	mov    ebp,0xe927f9d0
   14001b5a2:	rex.WXB mov dl,BYTE PTR [r12+r13*8]
   14001b5a6:	stos   BYTE PTR es:[rdi],al
   14001b5a7:	js     0x14001b590
   14001b5a9:	xor    bl,al
   14001b5ab:	xchg   edi,eax
   14001b5ac:	(bad)  
   14001b5ad:	loop   0x14001b538
   14001b5af:	rex.WXB (bad) 
   14001b5b1:	(bad)  
   14001b5b2:	and    eax,0x7479d9c8
   14001b5b7:	and    al,BYTE PTR [rbx]
   14001b5b9:	rex.WB fild WORD PTR [r13+0x5e86fc1c]
   14001b5c0:	imul   ecx,DWORD PTR [rdi],0xdae1b2e2
   14001b5c6:	pushw  0x36
   14001b5c9:	cs cmp al,0x62
   14001b5cc:	adc    esi,esp
   14001b5ce:	jg     0x14001b5fd
   14001b5d0:	add    bl,BYTE PTR [rax-0x76f2fffd]
   14001b5d6:	iret   
   14001b5d7:	sbb    ah,BYTE PTR [rsi-0x40]
   14001b5da:	movsxd edx,esp
   14001b5dc:	rex.WXB sub rcx,r9
   14001b5df:	rex.WXB
   14001b5e0:	fwait
   14001b5e1:	stos   DWORD PTR es:[rdi],eax
   14001b5e2:	mov    bh,0xa5
   14001b5e4:	mov    cl,0xb1
   14001b5e7:	jrcxz  0x14001b62b
   14001b5e9:	and    dh,BYTE PTR [rsi+0x5]
   14001b5ec:	(bad)  
   14001b5ed:	cdq    
   14001b5ee:	clc    
   14001b5ef:	xchg   ebx,eax
   14001b5f0:	adc    ecx,DWORD PTR [rdi-0x498e4340]
   14001b5f6:	push   rdi
   14001b5f7:	mov    edx,0xd55c9515
   14001b5fc:	adc    BYTE PTR [rsi],dl
   14001b5fe:	faddp  st(0),st
   14001b600:	(bad)  
   14001b601:	jae    0x14001b5c3
   14001b603:	outs   dx,DWORD PTR ds:[rsi]
   14001b604:	ret    0x4bed
   14001b607:	add    ebx,DWORD PTR [rsi-0x21]
   14001b60a:	(bad)  
   14001b60b:	loopne 0x14001b5a8
   14001b60d:	js     0x14001b68a
   14001b60f:	sar    BYTE PTR [rdi-0x1780d409],0x3b
   14001b616:	(bad)  
   14001b617:	retf   
   14001b618:	sub    ebx,edi
   14001b61a:	pop    rbp
   14001b61b:	push   rsi
   14001b61c:	or     edi,0xffffff8b
   14001b61f:	enter  0xecb1,0x4f
   14001b623:	push   rbx
   14001b624:	cmp    DWORD PTR [rsi-0x12],ebp
   14001b627:	sbb    edx,edi
   14001b629:	mov    ecx,0x6a97299b
   14001b62e:	mov    dl,0xd7
   14001b630:	in     eax,dx
   14001b631:	mov    edx,0x9b6e968c
   14001b636:	outs   dx,BYTE PTR ds:[rsi]
   14001b637:	mov    ah,dh
   14001b639:	sub    eax,0x8a76858a
   14001b63e:	loop   0x14001b5db
   14001b640:	sbb    DWORD PTR [rbx],ebp
   14001b642:	push   rdx
   14001b643:	mov    bl,0xb7
   14001b645:	mov    eax,0x2789eecc
   14001b64a:	cdq    
   14001b64b:	or     eax,0xff072817
   14001b650:	or     esi,ecx
   14001b652:	mov    edi,0x8a013b08
   14001b657:	cmp    ah,bh
   14001b659:	add    esi,DWORD PTR [rax+0x2b2b00b4]
   14001b65f:	sub    DWORD PTR [rdi+rax*1],eax
   14001b662:	fidiv  DWORD PTR [rdx+rcx*8-0x2bbf2e93]
   14001b669:	add    esp,0xffffffd6
   14001b66c:	imul   ecx,DWORD PTR [rdi+0x7cc1793d],0x41
   14001b673:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b674:	adc    esp,DWORD PTR [rsi-0x39]
   14001b677:	(bad)  
   14001b678:	loope  0x14001b63f
   14001b67a:	(bad)  
   14001b67b:	jg     0x14001b5ff
   14001b67d:	adc    DWORD PTR [rsi],ecx
   14001b67f:	mov    ecx,0xbd58e76
   14001b684:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b685:	test   al,0xae
   14001b687:	ins    BYTE PTR es:[rdi],dx
   14001b688:	and    DWORD PTR [rdi],esi
   14001b68a:	scas   eax,DWORD PTR es:[rdi]
   14001b68b:	adc    al,dl
   14001b68d:	or     al,0x91
   14001b68f:	rex ja 0x14001b633
   14001b692:	mov    WORD PTR [rax-0xa63b03e],?
   14001b698:	out    0x84,eax
   14001b69a:	xchg   esi,eax
   14001b69b:	(bad)  
   14001b69c:	fwait
   14001b69d:	(bad)  
   14001b69e:	jle    0x14001b670
   14001b6a0:	or     DWORD PTR [rbp-0x13],edi
   14001b6a3:	ss (bad) 
   14001b6a5:	pop    rbp
   14001b6a6:	jnp    0x14001b700
   14001b6a8:	add    al,0x80
   14001b6aa:	fs out dx,eax
   14001b6ac:	cwde   
   14001b6ad:	mov    esp,0x52f9eb66
   14001b6b2:	rex.X rcr sil,1
   14001b6b5:	hlt    
   14001b6b6:	pop    rbp
   14001b6b7:	nop    DWORD PTR [rdi]
   14001b6ba:	fwait
   14001b6bb:	cmp    ah,BYTE PTR [rip+0x5cddbfe7]        # 0x19cdf76a8
   14001b6c1:	test   BYTE PTR [rcx+rdx*2-0x3f],0x1
   14001b6c6:	popf   
   14001b6c7:	push   0x6dfb7fbd
   14001b6cc:	mov    ah,BYTE PTR [rsi-0x3f1c4a83]
   14001b6d2:	push   rdx
   14001b6d3:	(bad)  
   14001b6d4:	pop    rdi
   14001b6d5:	jmp    0x14001b65f
   14001b6d7:	pop    rbx
   14001b6d8:	test   esp,ecx
   14001b6da:	pop    rdi
   14001b6db:	outs   dx,DWORD PTR ds:[rsi]
   14001b6dc:	push   rdx
   14001b6dd:	jle    0x14001b6ff
   14001b6df:	push   rbp
   14001b6e0:	sub    eax,0x7077c2b2
   14001b6e5:	add    BYTE PTR [rdx-0x687ccd3f],dh
   14001b6eb:	mov    ds,edi
   14001b6ed:	xor    DWORD PTR [rdi],edi
   14001b6ef:	rex.R pop rcx
   14001b6f1:	(bad)  
   14001b6f2:	xchg   BYTE PTR [rbx-0x2a38b2f6],ah
   14001b6f8:	in     al,0xe2
   14001b6fa:	rex.RX jb 0x14001b721
   14001b6fd:	sbb    DWORD PTR [rdi],ecx
   14001b6ff:	and    BYTE PTR [rip+0x28f5df66],0x37        # 0x168f7966c
   14001b706:	jg     0x14001b6fd
   14001b708:	jns    0x14001b720
   14001b70a:	outs   dx,BYTE PTR ds:[rsi]
   14001b70b:	pop    rbx
   14001b70c:	xchg   eax,esp
   14001b70e:	jmp    0x14001b6e3
   14001b710:	add    BYTE PTR [rbx+rsi*2+0x6f],bh
   14001b714:	jg     0x14001b6fa
   14001b716:	enter  0x8f43,0x7c
   14001b71a:	jp     0x14001b74c
   14001b71c:	(bad)  
   14001b71d:	jg     0x14001b768
   14001b71f:	mov    esp,0xe322277f
   14001b724:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b725:	pop    rsp
   14001b726:	mov    DWORD PTR [rdx+rdx*1],ecx
   14001b729:	(bad)  
   14001b72a:	fnstsw WORD PTR [rdx-0x5d]
   14001b72d:	mov    ah,0xb9
   14001b72f:	mov    ecx,0x86c73020
   14001b734:	(bad)  
   14001b735:	pop    rsi
   14001b736:	ror    dl,cl
   14001b738:	push   rdi
   14001b739:	shl    dh,1
   14001b73b:	fdivr  st,st(1)
   14001b73d:	outs   dx,BYTE PTR ds:[rsi]
   14001b73e:	rex.WXB (bad) 
   14001b740:	mov    dh,0x85
   14001b742:	mov    cl,0x96
   14001b744:	sti    
   14001b745:	stos   BYTE PTR es:[rdi],al
   14001b746:	(bad)  
   14001b747:	test   al,al
   14001b749:	sub    ah,ch
   14001b74b:	push   rdx
   14001b74c:	xchg   esp,eax
   14001b74d:	add    eax,0xa61f47bb
   14001b752:	sbb    DWORD PTR [rsi],ebp
   14001b754:	loopne 0x14001b700
   14001b756:	and    esi,ebp
   14001b758:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b759:	scas   eax,DWORD PTR es:[rdi]
   14001b75a:	adc    ebp,DWORD PTR [rsi+0x7f3eb65d]
   14001b760:	rcl    BYTE PTR [rax],1
   14001b762:	(bad)  
   14001b763:	scas   al,BYTE PTR es:[rdi]
   14001b764:	lea    eax,[rbx-0x1d777220]
   14001b76a:	adc    BYTE PTR [rbx+0x9],ch
   14001b76d:	mov    ?,WORD PTR [rdi-0x7c78b7a9]
   14001b773:	pop    rdx
   14001b774:	scas   al,BYTE PTR es:[rdi]
   14001b775:	mov    ds,WORD PTR [rbp-0x1d3bfdbd]
   14001b77b:	(bad)  
   14001b77c:	fsubrp st(0),st
   14001b77e:	retf   
   14001b77f:	xchg   edx,eax
   14001b780:	xchg   ebx,eax
   14001b781:	outs   dx,DWORD PTR ds:[rsi]
   14001b782:	dec    DWORD PTR [rcx+riz*2]
   14001b785:	in     eax,dx
   14001b786:	cmp    BYTE PTR [rdx-0x748134e5],bh
   14001b78c:	xchg   edi,eax
   14001b78d:	pop    rdi
   14001b78e:	(bad)  
   14001b78f:	fistp  QWORD PTR [rax+0x4e2ef50c]
   14001b795:	sbb    dh,BYTE PTR [rbx]
   14001b797:	pop    rsi
   14001b798:	ss ins BYTE PTR es:[rdi],dx
   14001b79a:	pop    rbx
   14001b79b:	jrcxz  0x14001b793
   14001b79d:	mov    esp,0x42793dc6
   14001b7a2:	ss add ch,ch
   14001b7a5:	ror    BYTE PTR [rdi+0x62],0xce
   14001b7a9:	stos   DWORD PTR es:[rdi],eax
   14001b7aa:	shl    dl,1
   14001b7ac:	sti    
   14001b7ad:	adc    ebx,DWORD PTR [rax-0x69]
   14001b7b0:	pop    rsp
   14001b7b1:	jg     0x14001b7bd
   14001b7b3:	mov    DWORD PTR [rbx],edx
   14001b7b5:	push   0x7e53b47
   14001b7ba:	mov    cl,0xfe
   14001b7bc:	jns    0x14001b7b1
   14001b7be:	out    dx,al
   14001b7bf:	add    WORD PTR [rbx+rsi*8+0x6831cf33],sp
   14001b7c7:	(bad)  
   14001b7c8:	and    esi,0x66
   14001b7cb:	sbb    al,0xd2
   14001b7cd:	sub    DWORD PTR [rdi+0x1afa4238],esi
   14001b7d3:	xor    DWORD PTR [r14+riz*1+0x19],r15d
   14001b7d8:	rex.R
   14001b7d9:	repz not BYTE PTR [rsi-0x67bb7f1a]
   14001b7e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b7e1:	imul   edx,DWORD PTR [rax-0x2d],0xfffffff7
   14001b7e5:	rex.R stos BYTE PTR es:[rdi],al
   14001b7e7:	adc    edx,DWORD PTR [rax-0x4f290742]
   14001b7ed:	sbb    eax,DWORD PTR [rbx-0x33d632d0]
   14001b7f3:	add    eax,DWORD PTR [rax+0x5d]
   14001b7f6:	pop    rsp
   14001b7f7:	cld    
   14001b7f8:	and    ecx,ebp
   14001b7fa:	(bad)  
   14001b7fb:	cmp    al,0x38
   14001b7fd:	sti    
   14001b7fe:	and    BYTE PTR [rsi+0x5699209f],ch
   14001b804:	sbb    al,0x3a
   14001b806:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b807:	lahf   
   14001b808:	div    dh
   14001b80a:	shr    BYTE PTR [rax+rdi*8+0x501cbce9],cl
   14001b811:	push   0xffffffffe09fa6f3
   14001b816:	(bad)  
   14001b817:	cmp    edi,DWORD PTR [rdi-0x76]
   14001b81a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b81b:	dec    BYTE PTR [rdi-0x64806084]
   14001b821:	rol    DWORD PTR [rax-0x7fe7029],cl
   14001b827:	(bad)  
   14001b828:	mov    esp,0xf2bffbfd
   14001b82d:	xchg   DWORD PTR [rsi-0x6a1a7a3],ebx
   14001b833:	sahf   
   14001b834:	jb     0x14001b866
   14001b836:	cld    
   14001b837:	mov    ah,0x8
   14001b839:	clts   
   14001b83b:	lea    edi,[rsp+rbp*8]
   14001b83e:	mov    ah,0x88
   14001b840:	(bad)
   14001b843:	xchg   esi,eax
   14001b844:	xchg   BYTE PTR [rbx+0x76],ah
   14001b847:	jae    0x14001b89c
   14001b849:	and    dl,cl
   14001b84b:	and    eax,0x68dd33be
   14001b850:	jbe    0x14001b875
   14001b852:	jne    0x14001b816
   14001b854:	rex.B (bad) 
   14001b856:	test   BYTE PTR [rbx-0x9338c92],0x3b
   14001b85d:	leave  
   14001b85e:	sahf   
   14001b85f:	and    eax,0x3cf32b39
   14001b864:	push   rbp
   14001b865:	cwde   
   14001b866:	push   rdx
   14001b867:	cmp    edi,ecx
   14001b869:	(bad)  
   14001b86b:	adc    DWORD PTR [rsi-0x55],esi
   14001b86e:	and    DWORD PTR [rbx+riz*1-0x24],edx
   14001b872:	mov    edi,DWORD PTR [rdi+0x1f3ed843]
   14001b878:	adc    esp,ebp
   14001b87a:	(bad)  
   14001b87b:	mov    bl,0xfc
   14001b87d:	lods   al,BYTE PTR ds:[rsi]
   14001b87e:	jg     0x14001b8df
   14001b880:	(bad)  
   14001b881:	in     eax,0x1b
   14001b883:	xor    ebp,ebp
   14001b885:	enter  0x7a66,0xa4
   14001b889:	rcr    BYTE PTR [rdi-0x53ec2334],0x9c
   14001b890:	push   0xffffffffe5366617
   14001b895:	out    0x13,al
   14001b897:	ffreep st(1)
   14001b899:	test   edi,eax
   14001b89b:	(bad)  
   14001b89d:	rex.X cwde 
   14001b89f:	push   rdx
   14001b8a0:	pop    rsp
   14001b8a1:	ds ret 
   14001b8a3:	(bad)  
   14001b8a5:	imul   ecx,edx,0xddb8dbab
   14001b8ab:	sbb    esi,DWORD PTR [rcx-0x10a26c4]
   14001b8b1:	xchg   edx,eax
   14001b8b2:	adc    al,0xdd
   14001b8b4:	(bad)  
   14001b8b5:	jge    0x14001b8c8
   14001b8b7:	sub    al,0x1d
   14001b8b9:	mov    BYTE PTR [rdi+0x1d8dceb9],ch
   14001b8bf:	ret    
   14001b8c0:	jl     0x14001b8ad
   14001b8c2:	ins    DWORD PTR es:[rdi],dx
   14001b8c3:	xchg   edi,eax
   14001b8c4:	mov    dh,0x4c
   14001b8c6:	(bad)  
   14001b8c7:	(bad)  
   14001b8c9:	rex.X (bad) 
   14001b8cb:	(bad)  
   14001b8cc:	and    eax,0x9be90ba7
   14001b8d1:	jae    0x14001b89c
   14001b8d3:	xchg   ebx,eax
   14001b8d4:	(bad)  [rsi+0x53]
   14001b8d7:	scas   al,BYTE PTR es:[rdi]
   14001b8d8:	ffreep st(6)
   14001b8da:	add    al,0x49
   14001b8dc:	icebp  
   14001b8dd:	out    0xbd,al
   14001b8df:	jnp    0x14001b8b3
   14001b8e1:	retf   
   14001b8e2:	ins    BYTE PTR es:[rdi],dx
   14001b8e3:	stos   DWORD PTR es:[rdi],eax
   14001b8e4:	repz fimul DWORD PTR ss:[rax+0x2d]
   14001b8e9:	icebp  
   14001b8ea:	mul    bh
   14001b8ec:	retf   0xab5
   14001b8ef:	pop    rcx
   14001b8f0:	pop    rbx
   14001b8f1:	and    eax,0x80c903dd
   14001b8f6:	jne    0x14001b964
   14001b8f8:	rex
   14001b8f9:	addr32 xchg ebx,eax
   14001b8fb:	or     eax,esi
   14001b8fd:	ins    DWORD PTR es:[rdi],dx
   14001b8fe:	mov    bl,0x74
   14001b900:	push   0xffffffffb63c7b0d
   14001b905:	int3   
   14001b906:	rcl    DWORD PTR [rax],0xc9
   14001b909:	imul   eax,DWORD PTR [rip+0x4c486de4],0x17        # 0x18c4a26f4
   14001b910:	fcmovb st,st(0)
   14001b912:	mov    dl,0x75
   14001b914:	adc    ch,ch
   14001b916:	mov    ecx,0x9148bb98
   14001b91b:	sub    BYTE PTR [rcx+0x3c],ch
   14001b91e:	sbb    ecx,edi
   14001b920:	cld    
   14001b921:	popf   
   14001b922:	mov    bh,BYTE PTR [rdi]
   14001b924:	shr    esi,0x77
   14001b927:	add    edi,edi
   14001b929:	(bad)  
   14001b92a:	mov    bh,0x29
   14001b92c:	or     eax,0xe006fdb8
   14001b931:	fwait
   14001b932:	js     0x14001b92f
   14001b934:	mov    bh,0x7e
   14001b936:	loop   0x14001b90b
   14001b938:	(bad)  
   14001b939:	ss out dx,al
   14001b93b:	cmp    esi,ecx
   14001b93d:	fdiv   QWORD PTR [rax+0x71]
   14001b940:	cld    
   14001b941:	gs out dx,eax
   14001b943:	retf   
   14001b944:	ja     0x14001b8e6
   14001b946:	(bad)  
   14001b947:	adc    edx,edx
   14001b949:	jb     0x14001b917
   14001b94b:	icebp  
   14001b94c:	mov    ecx,DWORD PTR [rcx]
   14001b94e:	sbb    eax,0x44cb10cf
   14001b953:	cmp    dh,BYTE PTR [rdi-0x3d]
   14001b956:	test   BYTE PTR gs:[rdi+0xe],bl
   14001b95a:	mov    esi,0x4dba6906
   14001b95f:	int3   
   14001b960:	pop    rcx
   14001b961:	jrcxz  0x14001b97a
   14001b963:	in     al,0x88
   14001b965:	loope  0x14001b961
   14001b967:	pop    rsp
   14001b968:	out    dx,al
   14001b969:	fnstcw WORD PTR [rcx-0x70]
   14001b96c:	lahf   
   14001b96d:	(bad)  
   14001b96e:	mov    es,edi
   14001b970:	sahf   
   14001b971:	mov    ch,BYTE PTR ss:[rdx+0x68]
   14001b975:	sbb    cl,dl
   14001b977:	push   rax
   14001b978:	sub    al,0x2c
   14001b97a:	jb     0x14001b96f
   14001b97c:	loope  0x14001b9b5
   14001b97e:	adc    eax,DWORD PTR [rsi-0x2406a39d]
   14001b984:	test   bl,dh
   14001b986:	addr32 (bad) 
   14001b988:	pop    rcx
   14001b989:	nop
   14001b98a:	xchg   esp,eax
   14001b98b:	out    0x9b,eax
   14001b98d:	push   rdx
   14001b98e:	test   BYTE PTR [rcx],bl
   14001b990:	push   0xffffffffffffffcc
   14001b992:	cmp    al,0xba
   14001b994:	lods   al,BYTE PTR ds:[rsi]
   14001b995:	rex.B jmp 0xde8f52e9
   14001b99b:	xor    BYTE PTR [rip+0x60cf50b2],dh        # 0x1a0d10a53
   14001b9a1:	imul   ecx,DWORD PTR [rbp+0x3cfaef93],0x708568d5
   14001b9ab:	in     eax,0xc
   14001b9ad:	stos   DWORD PTR es:[rdi],eax
   14001b9ae:	pop    rbx
   14001b9af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b9b0:	sbb    BYTE PTR [rbp+0x3a],bl
   14001b9b3:	(bad)  
   14001b9b4:	fistp  QWORD PTR [rcx-0x1b842976]
   14001b9ba:	mov    ecx,0x7bd776f5
   14001b9bf:	push   rbx
   14001b9c0:	not    BYTE PTR [rdx+0x13]
   14001b9c3:	ficomp DWORD PTR [rdi]
   14001b9c5:	repnz ror BYTE PTR [rdi-0x11],0xa4
   14001b9ca:	mov    ebp,0x3a5b5cfb
   14001b9cf:	imul   eax,DWORD PTR [rdi-0x70add9a0],0xffffffb4
   14001b9d6:	push   rcx
   14001b9d7:	xchg   ebp,eax
   14001b9d8:	xchg   ebx,eax
   14001b9d9:	cmp    DWORD PTR [rdi-0x72],ecx
   14001b9dc:	sub    DWORD PTR [rsi+0x2a],edi
   14001b9df:	in     eax,0xb5
   14001b9e1:	adc    al,0x62
   14001b9e3:	sti    
   14001b9e4:	cmp    al,0x2e
   14001b9e6:	push   rdi
   14001b9e7:	sbb    BYTE PTR [rdx],dl
   14001b9e9:	jbe    0x14001b9cb
   14001b9eb:	shl    dh,cl
   14001b9ed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b9ee:	cmc    
   14001b9ef:	repnz lods eax,DWORD PTR ds:[rsi]
   14001b9f1:	(bad)  
   14001b9f2:	rcl    BYTE PTR [rsi-0x5f],1
   14001b9f5:	push   0x1239e773
   14001b9fa:	nop
   14001b9fb:	test   esi,edx
   14001b9fd:	xor    DWORD PTR [rdi],edx
   14001b9ff:	(bad)  
   14001ba00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ba01:	(bad)  
   14001ba02:	je     0x14001b9c9
   14001ba04:	(bad)  
   14001ba05:	js     0x14001ba68
   14001ba07:	xchg   edx,eax
   14001ba08:	mov    al,bh
   14001ba0a:	add    edx,DWORD PTR [rsi]
   14001ba0c:	xor    edx,DWORD PTR [rax+0x73]
   14001ba0f:	mov    eax,0x73e7ca43
   14001ba14:	sbb    eax,0x3edeb434
   14001ba19:	rex.WRXB or QWORD PTR [r14],r14
   14001ba1c:	xchg   DWORD PTR [rbx],esp
   14001ba1e:	test   eax,0x9116824
   14001ba23:	jbe    0x14001ba38
   14001ba25:	pop    rdx
   14001ba26:	adc    al,0x17
   14001ba28:	add    ebp,DWORD PTR [rax-0x32e4c52]
   14001ba2e:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ba30:	(bad)  
   14001ba31:	(bad)  
   14001ba32:	jae    0x14001ba51
   14001ba34:	jmp    0x12160be25
   14001ba39:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ba3a:	int    0xff
   14001ba3c:	xchg   ecx,eax
   14001ba3d:	jrcxz  0x14001ba26
   14001ba3f:	shr    BYTE PTR [rbp-0x281bc629],cl
   14001ba45:	pop    rsp
   14001ba46:	outs   dx,BYTE PTR ds:[rsi]
   14001ba47:	pop    QWORD PTR [rcx]
   14001ba49:	clc    
   14001ba4a:	(bad)  
   14001ba4b:	mov    esp,0xf2be87fd
   14001ba50:	(bad)  
   14001ba51:	ja     0x14001ba80
   14001ba53:	lods   al,BYTE PTR ds:[rsi]
   14001ba54:	lods   eax,DWORD PTR ds:[rsi]
   14001ba55:	jg     0x14001ba18
   14001ba57:	xchg   edi,eax
   14001ba58:	(bad)  
   14001ba59:	addr32 mov esp,0xefc70f73
   14001ba5f:	cmp    bl,BYTE PTR [rbp-0x36]
   14001ba62:	(bad)  
   14001ba63:	call   0x1125e6b4e
   14001ba68:	jge    0x14001ba3b
   14001ba6a:	icebp  
   14001ba6b:	call   0x105dd8739
   14001ba70:	rex.WRX imul r12,QWORD PTR [rsi+0x44],0xffffffffffffffd1
   14001ba75:	jl     0x14001ba77
   14001ba77:	(bad)  
   14001ba78:	sub    eax,0x9b919a73
   14001ba7d:	pop    rsp
   14001ba7e:	mov    esp,0xd3d5cc6a
   14001ba83:	or     al,ch
   14001ba85:	je     0x14001ba5a
   14001ba87:	imul   ebp,eax,0x60
   14001ba8a:	or     BYTE PTR [rsi+0x8408a68],ah
   14001ba90:	or     al,0xeb
   14001ba92:	cmp    eax,0xc6e4b28a
   14001ba97:	icebp  
   14001ba98:	(bad)  
   14001ba99:	test   al,0xab
   14001ba9b:	xor    DWORD PTR [rsi-0x6c263fe6],edi
   14001baa1:	call   0x142332633
   14001baa6:	rex adc DWORD PTR [rbp-0x78],esi
   14001baaa:	sub    edi,eax
   14001baac:	(bad)  
   14001baad:	fnstcw WORD PTR [rbx-0xd]
   14001bab0:	and    ch,cl
   14001bab2:	scas   al,BYTE PTR es:[rdi]
   14001bab3:	stos   DWORD PTR es:[rdi],eax
   14001bab4:	rex.WRX
   14001bab5:	lock ja 0x14001baa6
   14001bab8:	jge    0x14001baa9
   14001baba:	retf   
   14001babb:	lods   eax,DWORD PTR ds:[rsi]
   14001babc:	mov    dl,0x32
   14001babe:	mov    bl,0xf6
   14001bac0:	push   rdx
   14001bac1:	xchg   ebp,eax
   14001bac2:	test   ch,0xb6
   14001bac5:	ins    BYTE PTR es:[rdi],dx
   14001bac6:	ins    DWORD PTR es:[rdi],dx
   14001bac7:	xchg   esi,eax
   14001bac8:	fldcw  WORD PTR gs:[rbp-0x4b]
   14001bacc:	in     eax,0xf1
   14001bace:	and    bh,BYTE PTR [rbx-0x79c89c93]
   14001bad4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bad5:	jnp    0x14001baf9
   14001bad7:	push   0x1a66809a
   14001badc:	call   0xf681
   14001bae0:	push   0x681e987a
   14001bae5:	and    BYTE PTR [rsi],al
   14001bae7:	(bad)  
   14001bae8:	es jp  0x14001bb4d
   14001baeb:	(bad)
   14001baf0:	adc    BYTE PTR [rsp+rax*2],dh
   14001baf3:	sbb    BYTE PTR [rsi],al
   14001baf5:	rex.RX mov dl,0xc1
   14001baf8:	xor    al,0xb4
   14001bafa:	in     eax,0x7d
   14001bafc:	(bad)  
   14001bafd:	mov    dh,0x6c
   14001baff:	pop    rcx
   14001bb00:	xchg   esi,eax
   14001bb01:	sub    al,0x9
   14001bb03:	in     eax,dx
   14001bb04:	stos   BYTE PTR es:[rdi],al
   14001bb05:	stos   BYTE PTR es:[rdi],al
   14001bb06:	int3   
   14001bb07:	stos   BYTE PTR es:[rdi],al
   14001bb08:	retf   0xdcaa
   14001bb0b:	div    ebp
   14001bb0d:	jnp    0x14001bb06
   14001bb0f:	int3   
   14001bb10:	(bad)  
   14001bb11:	addr32 mov ecx,0x22d665f7
   14001bb17:	pop    rcx
   14001bb18:	and    eax,0x117a9961
   14001bb1d:	pop    rcx
   14001bb1e:	cmc    
   14001bb1f:	sub    eax,0xbddb7bef
   14001bb24:	out    0x9c,eax
   14001bb26:	(bad)  
   14001bb28:	popf   
   14001bb29:	in     eax,0x72
   14001bb2b:	(bad)  
   14001bb2c:	(bad)  
   14001bb2d:	add    esp,DWORD PTR [rcx+rdx*4]
   14001bb30:	rex.W (bad) 
   14001bb32:	mov    al,0xe8
   14001bb34:	(bad)  
   14001bb35:	xchg   edx,eax
   14001bb36:	int3   
   14001bb37:	rex.X and BYTE PTR [rbx],cl
   14001bb3a:	(bad)  
   14001bb3b:	add    esi,DWORD PTR [rcx+0x4de4e2e9]
   14001bb41:	out    dx,eax
   14001bb42:	(bad)
   14001bb46:	sar    DWORD PTR [rdi-0x26617742],1
   14001bb4c:	xchg   ebx,eax
   14001bb4d:	fdivr  DWORD PTR [rcx]
   14001bb4f:	jae    0x14001bb53
   14001bb51:	(bad)  
   14001bb52:	ret    0x680c
   14001bb55:	ins    DWORD PTR es:[rdi],dx
   14001bb56:	sbb    eax,esp
   14001bb58:	(bad)  
   14001bb59:	pop    rsp
   14001bb5a:	sub    al,0x5c
   14001bb5c:	push   rcx
   14001bb5d:	(bad)  
   14001bb5e:	cld    
   14001bb5f:	enter  0x2e03,0xa0
   14001bb63:	jg     0x14001bb65
   14001bb65:	mov    esp,0xb6877c3
   14001bb6a:	adc    BYTE PTR gs:[rcx],bl
   14001bb6d:	jo     0x14001bb70
   14001bb6f:	or     eax,0x1303512c
   14001bb74:	jb     0x14001bbf1
   14001bb76:	xor    BYTE PTR [rdx-0x429d791],0xcb
   14001bb7d:	rex.X outs dx,BYTE PTR ds:[rsi]
   14001bb7f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bb80:	lahf   
   14001bb81:	adc    ebx,DWORD PTR [rax-0x137f30bb]
   14001bb87:	out    dx,al
   14001bb88:	mov    bl,0x1f
   14001bb8a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bb8b:	mov    ebp,0xfa5ebab1
   14001bb90:	xchg   edx,eax
   14001bb91:	sub    eax,0x286b9f1e
   14001bb96:	enter  0xf97d,0xe0
   14001bb9a:	popf   
   14001bb9b:	xchg   edi,eax
   14001bb9c:	rex cdq 
   14001bb9e:	jne    0x14001bb97
   14001bba0:	(bad)
   14001bba3:	out    dx,al
   14001bba4:	jle    0x14001bc0a
   14001bba6:	mov    ?,WORD PTR [rcx-0x3304d0d5]
   14001bbac:	ror    BYTE PTR [rax-0x71d041bd],cl
   14001bbb2:	loop   0x14001bb82
   14001bbb4:	xor    al,0x64
   14001bbb6:	mov    cl,0xee
   14001bbb9:	xchg   ecx,eax
   14001bbba:	popf   
   14001bbbb:	sub    BYTE PTR [rbp+0x3efca9f],dl
   14001bbc1:	adc    edx,DWORD PTR [rdx-0x40c5ed0d]
   14001bbc7:	pushf  
   14001bbc8:	rol    DWORD PTR [rax-0x42],cl
   14001bbcb:	(bad)  
   14001bbcc:	xchg   edx,eax
   14001bbcd:	out    0x59,eax
   14001bbcf:	add    DWORD PTR [rdi-0x41],edx
   14001bbd2:	test   DWORD PTR [rsi+0x6f],esp
   14001bbd5:	call   QWORD PTR [rbx+0x3e]
   14001bbd8:	cld    
   14001bbd9:	push   rdi
   14001bbda:	jle    0x14001bbc2
   14001bbdc:	xchg   edi,eax
   14001bbdd:	ror    DWORD PTR [rip+0xffffffffc0157978],1        # 0x10017355b
   14001bbe3:	jns    0x14001bb91
   14001bbe5:	std    
   14001bbe6:	lods   eax,DWORD PTR ds:[rsi]
   14001bbe7:	ja     0x14001bba8
   14001bbe9:	out    0xe0,eax
   14001bbeb:	scas   al,BYTE PTR es:[rdi]
   14001bbec:	adc    DWORD PTR [rdi-0x5f885242],0xffffffff
   14001bbf3:	rex.RXB jmp 0x14001bc44
   14001bbf6:	out    0x4d,eax
   14001bbf8:	mov    DWORD PTR [rcx+0x333834df],edi
   14001bbfe:	jb     0x14001bbd3
   14001bc00:	or     edx,DWORD PTR [rax]
   14001bc02:	mov    esp,0xd24e9dfb
   14001bc07:	fcom   QWORD PTR [rcx+rax*1-0xf17e7d0]
   14001bc0e:	(bad)  
   14001bc0f:	enter  0x1a50,0x68
   14001bc13:	sbb    DWORD PTR [rdi-0x64e9e2fe],edx
   14001bc19:	cmp    DWORD PTR [rdx],edx
   14001bc1b:	(bad)  
   14001bc1c:	imul   edx,DWORD PTR [rsi-0x6ff9975],0x3c
   14001bc23:	xor    DWORD PTR [rsp+rdi*4],0xec91ae48
   14001bc2a:	jp     0x14001bc3f
   14001bc2c:	or     BYTE PTR [rbp-0x4d],dl
   14001bc2f:	mov    fs,WORD PTR [rcx-0x454ef0]
   14001bc35:	xor    ch,BYTE PTR [rbp+rsi*8-0x4857c0a]
   14001bc3c:	rex.B (bad) 
   14001bc3e:	sahf   
   14001bc3f:	rex.X (bad) 
   14001bc41:	rex.R fmul DWORD PTR [rax+0x40]
   14001bc46:	mov    BYTE PTR [rdx],dl
   14001bc48:	and    eax,0xbb35e0d0
   14001bc4d:	repnz iret 
   14001bc4f:	xchg   esi,eax
   14001bc50:	mov    edi,0x6c00c36d
   14001bc55:	scas   al,BYTE PTR es:[rdi]
   14001bc56:	movsxd edi,ebp
   14001bc58:	shl    BYTE PTR [rbp+0x38],1
   14001bc5b:	jb     0x14001bc30
   14001bc5d:	mov    ebx,0x2d200bd1
   14001bc62:	rex.WR (bad) 
   14001bc64:	js     0x14001bcd0
   14001bc66:	adc    al,0x3d
   14001bc68:	mov    bl,0x13
   14001bc6a:	movabs al,ds:0x38c8a80359a079e5
   14001bc73:	mov    ah,0x7
   14001bc75:	rex.WR xor r11b,al
   14001bc78:	es (bad) 
   14001bc7a:	push   rcx
   14001bc7b:	in     eax,dx
   14001bc7c:	movabs eax,ds:0xf6ae7e73fdfb609
   14001bc85:	imul   ebp,DWORD PTR [rbx+0x69],0xb2085c2f
   14001bc8c:	mov    al,0x43
   14001bc8e:	lods   eax,DWORD PTR ds:[rsi]
   14001bc8f:	jle    0x14001bcb9
   14001bc91:	sub    BYTE PTR [rdi+rax*8+0x51a09fa],0x28
   14001bc99:	cmp    esp,edi
   14001bc9b:	out    0x3e,eax
   14001bc9d:	and    DWORD PTR [rcx+0x15bdbbd8],0x5ad2977b
   14001bca7:	(bad)  
   14001bca8:	jbe    0x14001bce0
   14001bcaa:	test   BYTE PTR [rcx+rdi*1],al
   14001bcad:	mov    esi,eax
   14001bcaf:	jmp    0x160ad75a7
   14001bcb4:	jmp    0x14001bc47
   14001bcb6:	or     BYTE PTR [rax+rbp*1+0x7c],dl
   14001bcba:	adc    r12d,r8d
   14001bcbd:	stc    
   14001bcbe:	sub    DWORD PTR [rbx+0x622532a2],ebx
   14001bcc4:	retf   0xaec9
   14001bcc7:	mov    al,0x28
   14001bcc9:	(bad)  
   14001bccb:	xor    BYTE PTR [rcx+rbp*8],al
   14001bcce:	ds jbe 0x14001bca9
   14001bcd1:	rex
   14001bcd2:	rex ret 
   14001bcd4:	pop    rbx
   14001bcd5:	out    dx,al
   14001bcd6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bcd7:	cwde   
   14001bcd8:	enter  0xb5b9,0x18
   14001bcdc:	or     DWORD PTR [rax+0x7d5a60e8],0x3f
   14001bce3:	or     bh,dh
   14001bce5:	loope  0x14001bd56
   14001bce7:	(bad)  
   14001bce8:	or     eax,0x15e97c1
   14001bced:	pushf  
   14001bcee:	fstp   st(2)
   14001bcf0:	(bad)  
   14001bcf1:	add    BYTE PTR [rcx-0x21521612],dh
   14001bcf7:	cld    
   14001bcf8:	ror    DWORD PTR [rdi],0xdd
   14001bcfb:	xor    bh,BYTE PTR [rax]
   14001bcfd:	cmp    al,0xf2
   14001bcff:	(bad)  
   14001bd00:	(bad)  
   14001bd01:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bd02:	repz scas al,BYTE PTR es:[rdi]
   14001bd04:	adc    bl,ah
   14001bd06:	(bad)  
   14001bd07:	(bad)  
   14001bd08:	lods   eax,DWORD PTR ds:[rsi]
   14001bd09:	xor    edi,DWORD PTR [rdx+rsi*1+0x1]
   14001bd0d:	es test eax,esi
   14001bd10:	leave  
   14001bd11:	rex.RX (bad) 
   14001bd13:	test   al,0xf5
   14001bd15:	cs rex.RXB (bad) 
   14001bd18:	xor    ecx,ebp
   14001bd1a:	rex.RXB
   14001bd1b:	rex.R loopne 0x14001bd72
   14001bd1e:	je     0x14001bcdd
   14001bd20:	test   DWORD PTR [rax+0x59],ebx
   14001bd23:	lahf   
   14001bd24:	(bad)
   14001bd28:	fdiv   DWORD PTR [rcx-0x62]
   14001bd2b:	cmp    DWORD PTR [rsi],esi
   14001bd2d:	rex.W sub bpl,bl
   14001bd30:	mov    edx,0x234eaeea
   14001bd35:	rex.WRX scas al,BYTE PTR es:[rdi]
   14001bd37:	es pop rsp
   14001bd39:	mov    ebp,0xb202c2b3
   14001bd3e:	mov    DWORD PTR [rip+0x3b175210],edx        # 0x17b190f54
   14001bd44:	nop
   14001bd45:	push   rax
   14001bd46:	paddsw mm0,mm6
   14001bd49:	repnz cmc 
   14001bd4b:	mov    bh,0x83
   14001bd4d:	jnp    0x14001bdc6
   14001bd4f:	or     BYTE PTR [rsi+0x71348a3c],0x12
   14001bd56:	(bad)  
   14001bd57:	movsxd edx,DWORD PTR [rbp-0x1f]
   14001bd5a:	sub    eax,DWORD PTR [rax]
   14001bd5c:	adc    dl,BYTE PTR [rdi+0x40]
   14001bd5f:	and    ah,BYTE PTR [rcx+rcx*2+0x2d]
   14001bd63:	ja     0x14001bd66
   14001bd65:	rex.WRXB rol QWORD PTR [r8-0x2d],0x45
   14001bd6a:	test   al,0x3b
   14001bd6c:	cmp    BYTE PTR [rdx-0x5],bh
   14001bd6f:	(bad)  
   14001bd70:	and    DWORD PTR [rcx+0x6995804b],0x8e3d98ec
   14001bd7a:	shr    DWORD PTR [rcx+0x6716a8e3],0x11
   14001bd81:	(bad)  
   14001bd82:	xchg   edi,eax
   14001bd83:	fsubr  QWORD PTR [r8-0x6bb6ebce]
   14001bd8a:	adc    eax,0x7235197e
   14001bd8f:	(bad)  
   14001bd90:	jg     0x14001bddf
   14001bd92:	mov    ecx,0xfd57afdb
   14001bd97:	sub    DWORD PTR [rcx+0x17],esi
   14001bd9a:	cwde   
   14001bd9b:	cmp    al,0xb6
   14001bd9d:	out    dx,eax
   14001bd9e:	(bad)  
   14001bd9f:	ds (bad) 
   14001bda1:	retf   0x5b9
   14001bda4:	mov    bh,0xe7
   14001bda6:	(bad)  
   14001bda7:	xlat   BYTE PTR ds:[rbx]
   14001bda8:	addr32 out dx,al
   14001bdaa:	sub    DWORD PTR [rbx+0x5e3b607],0xbecf635d
   14001bdb4:	push   rcx
   14001bdb5:	adc    al,0x43
   14001bdb7:	add    al,0xa
   14001bdb9:	add    DWORD PTR [rcx+rbx*1-0x6e],ecx
   14001bdbd:	out    0xd0,eax
   14001bdbf:	movabs ds:0x9026791a4fe0d53e,al
   14001bdc8:	cli    
   14001bdc9:	jnp    0x14001be35
   14001bdcb:	cmc    
   14001bdcc:	sbb    eax,0xaac241dd
   14001bdd1:	add    eax,0x5399cfc4
   14001bdd6:	shl    edi,0x8
   14001bdd9:	and    eax,0x90c5ddca
   14001bdde:	std    
   14001bddf:	std    
   14001bde0:	add    al,0x14
   14001bde2:	mov    BYTE PTR [rdx],al
   14001bde4:	mov    edx,0x88dd8848
   14001bde9:	cmp    al,0x24
   14001bdeb:	jbe    0x14001be04
   14001bded:	add    al,cl
   14001bdef:	sbb    DWORD PTR [rsi+0x17507bd0],ecx
   14001bdf5:	mov    DWORD PTR [rdx],ebx
   14001bdf7:	mov    al,0x22
   14001bdf9:	rex.WRB mov r11b,0xfc
   14001bdfc:	(bad)  
   14001bdfd:	out    0x82,al
   14001bdff:	sbb    al,cl
   14001be01:	lods   al,BYTE PTR ds:[rsi]
   14001be02:	sti    
   14001be03:	(bad)  
   14001be04:	cs data16 (bad) 
   14001be07:	xor    eax,0x1a71fb6f
   14001be0c:	(bad)  
   14001be0e:	adc    DWORD PTR [rsi-0x331338c],edi
   14001be14:	jb     0x14001be6b
   14001be16:	or     BYTE PTR [rsi+0x3ce00a74],bh
   14001be1c:	(bad)  
   14001be1d:	(bad)  
   14001be1e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001be1f:	mov    bh,0xbd
   14001be21:	movsxd edi,edi
   14001be23:	shr    DWORD PTR [rbx],0xae
   14001be26:	jp     0x14001be6f
   14001be28:	fild   WORD PTR [rax-0x1]
   14001be2b:	xchg   DWORD PTR [rdx-0x54],eax
   14001be2e:	out    dx,al
   14001be2f:	rex.WR
   14001be30:	(bad)
   14001be35:	(bad)  
   14001be36:	rex.WRB in al,0xb6
   14001be39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001be3a:	jo     0x14001bdc4
   14001be3c:	lods   al,BYTE PTR ds:[rsi]
   14001be3d:	jae    0x14001bea8
   14001be3f:	xor    BYTE PTR [rbx-0x7a620a43],cl
   14001be45:	fstp   QWORD PTR [rax]
   14001be47:	mov    dl,0x78
   14001be49:	movsxd ecx,edx
   14001be4b:	rex.RXB sub eax,0xb3c2b2b7
   14001be51:	add    BYTE PTR [rsi],cl
   14001be53:	or     r15b,r8b
   14001be56:	add    BYTE PTR [rcx+rbp*4+0x5ce38379],al
   14001be5d:	or     al,0x26
   14001be5f:	cmp    esp,eax
   14001be61:	and    ecx,esi
   14001be63:	out    0xb1,eax
   14001be65:	mov    esp,0x566deb0
   14001be6a:	push   rbp
   14001be6b:	rex.WRXB lea r10,[r13+0x46c46eab]
   14001be72:	call   QWORD PTR [rax]
   14001be74:	test   al,0xef
   14001be76:	(bad)  
   14001be77:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001be78:	xchg   ebx,eax
   14001be79:	rex.RXB ror DWORD PTR [r11+0x73],0x92
   14001be7e:	(bad)  
   14001be7f:	adc    BYTE PTR [rdx],ch
   14001be81:	ins    DWORD PTR es:[rdi],dx
   14001be82:	adc    ch,BYTE PTR [rdx-0x49]
   14001be85:	rcl    DWORD PTR [rdi+rax*8],cl
   14001be88:	adc    BYTE PTR [rdi],bl
   14001be8a:	cmp    eax,0xe6626e6e
   14001be8f:	(bad)  
   14001be90:	mov    bh,0xe0
   14001be92:	hlt    
   14001be93:	(bad)  
   14001be94:	outs   dx,DWORD PTR ds:[rsi]
   14001be95:	rex.X out dx,eax
   14001be97:	out    0x2a,al
   14001be99:	ret    0x29dc
   14001be9c:	mov    WORD PTR [rsi+rcx*4-0x5e],cs
   14001bea0:	sahf   
   14001bea1:	lahf   
   14001bea2:	add    al,0xad
   14001bea4:	sub    al,0x0
   14001bea6:	imul   esp,DWORD PTR [rbx],0xeb750437
   14001beac:	scas   eax,DWORD PTR es:[rdi]
   14001bead:	int    0x3e
   14001beaf:	cmc    
   14001beb0:	dec    ah
   14001beb2:	repnz pop rbx
   14001beb4:	cmp    al,0xdf
   14001beb6:	fcomp  QWORD PTR [rbp-0x25]
   14001beb9:	fild   QWORD PTR [rcx+rdi*4+0x2147ac89]
   14001bec0:	(bad)  
   14001bec1:	lahf   
   14001bec2:	adc    eax,0x212cc048
   14001bec7:	retf   0x74d5
   14001beca:	repz movabs al,ds:0x4dccc59e3d23e3db
   14001bed4:	sar    DWORD PTR [rdx+0x73194eef],1
   14001beda:	jns    0x14001bec4
   14001bedc:	xchg   ebp,eax
   14001bedd:	repz pop rax
   14001bedf:	(bad)  
   14001bee0:	and    esi,ecx
   14001bee2:	ret    
   14001bee3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bee4:	lahf   
   14001bee5:	cli    
   14001bee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   14001bee8:	xchg   ecx,eax
   14001bee9:	je     0x14001be75
   14001beeb:	jno    0x14001be8e
   14001beed:	(bad)  
   14001beee:	or     edi,ebp
   14001bef0:	cdq    
   14001bef1:	(bad)
   14001bef4:	retf   
   14001bef5:	ret    0x592c
   14001bef8:	jge    0x14001beb9
   14001befa:	xchg   DWORD PTR [rcx+0x4d],ebp
   14001befd:	push   0xfffffffff024e515
   14001bf02:	xchg   esi,eax
   14001bf03:	out    0xc3,eax
   14001bf05:	jle    0x14001beba
   14001bf07:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bf08:	leave  
   14001bf09:	rex.WB xchg BYTE PTR [r8+0x220e9cec],dl
   14001bf10:	sub    bh,bl
   14001bf12:	rex.WXB
   14001bf13:	cmp    ebp,DWORD PTR [r9-0x2084b3db]
   14001bf1a:	(bad)  
   14001bf1b:	xchg   ebx,eax
   14001bf1c:	ja     0x14001bf9d
   14001bf1e:	add    al,0x97
   14001bf20:	inc    BYTE PTR [rcx]
   14001bf22:	mov    dl,0x71
   14001bf24:	jl     0x14001bf7f
   14001bf26:	(bad)  
   14001bf27:	ud1    esi,DWORD PTR [rax-0x29c31ff6]
   14001bf2e:	jle    0x14001bf98
   14001bf30:	iret   
   14001bf31:	sahf   
   14001bf32:	(bad)  
   14001bf33:	int    0x6f
   14001bf35:	jnp    0x14001befe
   14001bf37:	lea    edi,[rbx]
   14001bf39:	ja     0x14001bf2a
   14001bf3b:	stc    
   14001bf3c:	xchg   ecx,eax
   14001bf3d:	mov    edx,0xa44f79d3
   14001bf42:	jo     0x14001bfb9
   14001bf44:	add    dh,BYTE PTR [rdx]
   14001bf46:	pushf  
   14001bf47:	cpuid  
   14001bf49:	sbb    eax,0x265dfc73
   14001bf4e:	test   BYTE PTR [rcx+0x77],ch
   14001bf51:	rex (bad) 
   14001bf53:	pop    rsi
   14001bf54:	rex.WX
   14001bf55:	rex.X ret 0x4e18
   14001bf59:	xor    ch,BYTE PTR [rbx+0xb]
   14001bf5c:	(bad)  
   14001bf5d:	stos   BYTE PTR es:[rdi],al
   14001bf5e:	(bad)  
   14001bf5f:	or     edx,ebx
   14001bf61:	jmp    0xd7e1e882
   14001bf66:	or     eax,0xacfc3c9a
   14001bf6b:	push   rsp
   14001bf6c:	rex.WX loopne 0x14001bfdc
   14001bf6f:	(bad)  
   14001bf70:	loopne 0x14001bfd2
   14001bf72:	sbb    edx,0x92f64168
   14001bf78:	cmovb  esp,DWORD PTR [rcx-0x6c6b9b5a]
   14001bf7f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bf80:	jge    0x14001bf3c
   14001bf82:	push   rdx
   14001bf83:	add    eax,eax
   14001bf85:	or     BYTE PTR [rax+0x8ec0d9a],ch
   14001bf8b:	add    ebx,ebp
   14001bf8d:	xchg   edi,eax
   14001bf8e:	pop    rsp
   14001bf8f:	mov    ?,WORD PTR [rbp+0x3b344181]
   14001bf95:	xchg   BYTE PTR [rcx-0x665fb09d],al
   14001bf9b:	cdq    
   14001bf9c:	rex fcomp QWORD PTR [rdi+rax*1+0x51]
   14001bfa1:	test   DWORD PTR [rsi+rbp*4-0x1d7ad0e4],eax
   14001bfa8:	sub    al,0x8c
   14001bfaa:	(bad)  
   14001bfab:	fld    QWORD PTR [rbp*8-0x209877c2]
   14001bfb2:	lock add esp,edx
   14001bfb5:	popf   
   14001bfb6:	test   BYTE PTR ds:[rcx-0x70b373cf],bl
   14001bfbd:	(bad)  
   14001bfbe:	(bad)  
   14001bfbf:	cli    
   14001bfc0:	cmp    dl,ah
   14001bfc2:	loop   0x14001bfe0
   14001bfc4:	push   0xffffffffaee00563
   14001bfc9:	(bad)  
   14001bfca:	es cli 
   14001bfcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bfcd:	lods   al,BYTE PTR ds:[rsi]
   14001bfce:	or     BYTE PTR [rcx],bh
   14001bfd0:	in     eax,0x37
   14001bfd2:	jo     0x14001bf8f
   14001bfd4:	call   0x104306da0
   14001bfd9:	mov    dl,0x33
   14001bfdb:	sar    BYTE PTR [rdx-0x95249cc],0xb
   14001bfe2:	rex.RX retf 
   14001bfe4:	cmp    bh,BYTE PTR [rbx-0x4d73aa25]
   14001bfea:	xchg   ebx,eax
   14001bfeb:	add    esi,0x15
   14001bfee:	adc    BYTE PTR [rdx+0x2],dh
   14001bff1:	adc    BYTE PTR [rbp-0x5cb36981],dl
   14001bff7:	enter  0x2ac2,0x4
   14001bffb:	jne    0x14001c07c
   14001bffd:	jrcxz  0x14001c038
   14001bfff:	fisubr DWORD PTR [rcx]
   14001c001:	pop    rbx
   14001c002:	in     eax,0x3b
   14001c004:	sub    al,BYTE PTR [rdi+rsi*1]
   14001c007:	movabs ds:0xb74d03cea0098200,eax
   14001c010:	(bad)  
   14001c011:	add    BYTE PTR [rbp-0x22],bl
   14001c014:	fsub   st,st(2)
   14001c016:	popf   
   14001c017:	xor    BYTE PTR [rbx],dh
   14001c019:	push   rbx
   14001c01a:	cld    
   14001c01b:	out    0x56,eax
   14001c01d:	cmp    ah,BYTE PTR [rax-0x5a73cda8]
   14001c023:	sbb    al,0x58
   14001c025:	(bad)  
   14001c026:	add    BYTE PTR [rbp+0x41],al
   14001c029:	adc    DWORD PTR [rcx],esi
   14001c02b:	adc    eax,0x8f5181d9
   14001c030:	stos   DWORD PTR es:[rdi],eax
   14001c031:	pop    rsp
   14001c032:	mov    DWORD PTR [rcx+0x323ce51d],edi
   14001c038:	in     al,0x4a
   14001c03a:	push   0x1c
   14001c03c:	retf   0x2246
   14001c03f:	add    al,0x46
   14001c041:	movabs al,ds:0x7f9b047bbcde2180
   14001c04a:	lods   al,BYTE PTR ds:[rsi]
   14001c04b:	pop    rbp
   14001c04c:	or     DWORD PTR [rbx-0x3],0xfffffff9
   14001c050:	xchg   edx,eax
   14001c051:	outs   dx,BYTE PTR ds:[rsi]
   14001c052:	(bad)  
   14001c053:	add    DWORD PTR [rbx+r15*4-0x2283a953],r11d
   14001c05b:	popf   
   14001c05c:	outs   dx,DWORD PTR ds:[rsi]
   14001c05d:	fnsave [rbx-0x8]
   14001c060:	(bad)  
   14001c062:	(bad)  
   14001c064:	(bad)  
   14001c065:	sar    bh,1
   14001c067:	movabs eax,ds:0x698430e808bbeb18
   14001c070:	(bad)  
   14001c071:	(bad)  
   14001c072:	fcmove st,st(0)
   14001c074:	and    BYTE PTR [rdi+0x554004f],al
   14001c07a:	movabs al,ds:0xb6edca27c599f130
   14001c083:	jno    0x14001c0eb
   14001c085:	(bad)  
   14001c086:	mov    bh,0xc4
   14001c088:	mov    BYTE PTR [rbp+0x7],ah
   14001c08b:	sbb    BYTE PTR [rdi],dh
   14001c08d:	sbb    bl,ah
   14001c08f:	sbb    ch,BYTE PTR [rbx]
   14001c091:	std    
   14001c092:	xchg   edx,eax
   14001c093:	mov    esp,0xe7379c
   14001c098:	ins    BYTE PTR es:[rdi],dx
   14001c099:	push   rbp
   14001c09a:	enter  0xad84,0x1b
   14001c09e:	(bad)  
   14001c09f:	fistp  WORD PTR [rax]
   14001c0a1:	cli    
   14001c0a2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c0a3:	(bad)  
   14001c0a4:	sahf   
   14001c0a5:	add    al,0x26
   14001c0a7:	sub    DWORD PTR [rax],ecx
   14001c0a9:	(bad)  
   14001c0aa:	out    0xd,eax
   14001c0ac:	je     0x14001c034
   14001c0ae:	rex.RX mov al,0xf4
   14001c0b1:	(bad)  
   14001c0b2:	fcmovnbe st,st(1)
   14001c0b4:	sbb    eax,0xfa7e09d8
   14001c0b9:	(bad)  
   14001c0ba:	xor    al,0x93
   14001c0bc:	(bad)  
   14001c0bd:	adc    bh,dl
   14001c0bf:	push   rsi
   14001c0c0:	je     0x14001c087
   14001c0c2:	cdq    
   14001c0c3:	add    BYTE PTR [rcx-0x282b14e3],cl
   14001c0c9:	jle    0x14001c0c8
   14001c0cb:	(bad)  
   14001c0cc:	outs   dx,BYTE PTR ds:[rsi]
   14001c0cd:	jnp    0x14001c0ee
   14001c0cf:	neg    BYTE PTR ss:[rdi-0x79]
   14001c0d3:	(bad)  
   14001c0d4:	(bad)  
   14001c0d5:	cmp    al,0x7a
   14001c0d7:	out    0xc6,eax
   14001c0d9:	xor    DWORD PTR [rsi*2+0x34dcf51c],edi
   14001c0e0:	ret    0x82ca
   14001c0e3:	xor    al,0xfb
   14001c0e5:	movabs al,ds:0x6fda7215004fc994
   14001c0ee:	and    ch,0x1
   14001c0f1:	jo     0x14001c079
   14001c0f3:	cld    
   14001c0f4:	stos   BYTE PTR es:[rdi],al
   14001c0f5:	fdiv   DWORD PTR [rdx-0x5710d0bb]
   14001c0fb:	cmp    dh,0xe6
   14001c0fe:	(bad)  
   14001c0ff:	test   al,0x7b
   14001c101:	and    BYTE PTR [rdi-0x582ecd61],cl
   14001c107:	push   rcx
   14001c108:	add    al,0x7b
   14001c10a:	add    BYTE PTR [rbp-0x54],ah
   14001c10d:	mov    esp,0x4419ebc5
   14001c112:	lock out dx,eax
   14001c114:	mov    bh,0xa0
   14001c116:	xchg   BYTE PTR [rdx+0x39],al
   14001c119:	in     al,0x6b
   14001c11b:	enter  0xc038,0x90
   14001c11f:	sub    DWORD PTR [rax-0x1d],0xffffffb2
   14001c123:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c124:	mov    ecx,0x2b9e7248
   14001c129:	add    dl,BYTE PTR gs:[rbp+0x1e]
   14001c12d:	sbb    eax,0xa66016f
   14001c132:	add    DWORD PTR [rbp-0x75ff3c7a],ebp
   14001c138:	pop    rsi
   14001c139:	(bad)  
   14001c13a:	repz rcl BYTE PTR fs:[rbx+rax*2],cl
   14001c13f:	pop    rcx
   14001c140:	loope  0x14001c169
   14001c142:	fild   WORD PTR [rdi+0x22]
   14001c145:	clts   
   14001c147:	data16 rex.WX
   14001c149:	add    al,0x5a
   14001c14c:	mov    ss,WORD PTR [rbp+0x3ab24ef3]
   14001c152:	shr    bl,1
   14001c154:	movabs eax,ds:0xfe6fbb97a0004f3c
   14001c15d:	mov    ecx,0xdf9af470
   14001c162:	in     al,0x6b
   14001c164:	(bad)  
   14001c165:	test   DWORD PTR [rbp+0x3],eax
   14001c168:	pop    rsi
   14001c169:	(bad)  
   14001c16a:	xor    dh,al
   14001c16c:	jnp    0x14001c1c5
   14001c16e:	add    bh,ah
   14001c170:	mov    cl,0xf6
   14001c172:	add    edi,DWORD PTR [rbx]
   14001c174:	ja     0x14001c14c
   14001c176:	mov    bh,0xbd
   14001c178:	jmp    0x14001c1b7
   14001c17a:	(bad)  
   14001c17b:	mov    gs,esp
   14001c17d:	fsincos 
   14001c17f:	and    esi,DWORD PTR [rbp-0x23]
   14001c182:	repz mov esi,0xce4ae910
   14001c188:	iret   
   14001c189:	pop    rsi
   14001c18a:	ret    0x9c6c
   14001c18d:	(bad)  
   14001c18e:	sbb    BYTE PTR [rcx+rsi*4-0x25],dl
   14001c192:	(bad)  
   14001c193:	or     ah,bh
   14001c195:	call   0x1839bd811
   14001c19a:	rol    DWORD PTR [rdi-0x19826a53],1
   14001c1a0:	test   DWORD PTR [rbx],edi
   14001c1a2:	cli    
   14001c1a3:	add    eax,0x1f22c617
   14001c1a8:	(bad)  
   14001c1a9:	(bad)  
   14001c1aa:	sbb    eax,DWORD PTR [rax]
   14001c1ac:	fwait
   14001c1ad:	cs sahf 
   14001c1af:	rex.WXB and r10b,cl
   14001c1b2:	mov    edi,0xa7f936b0
   14001c1b7:	(bad)  
   14001c1b8:	mov    bl,0x37
   14001c1ba:	frstor [rax-0x6a]
   14001c1bd:	ror    BYTE PTR [rdi],0x6d
   14001c1c0:	or     al,0x74
   14001c1c2:	data16 stos BYTE PTR es:[rdi],al
   14001c1c4:	in     eax,dx
   14001c1c5:	sub    DWORD PTR [rcx],edx
   14001c1c7:	rex.W jge 0x14001c20e
   14001c1ca:	rex.X ins BYTE PTR es:[rdi],dx
   14001c1cc:	(bad)  
   14001c1cd:	mov    al,0xa3
   14001c1cf:	mov    ds,WORD PTR [rax-0x45]
   14001c1d2:	repnz (bad) 
   14001c1d4:	lods   al,BYTE PTR ds:[rsi]
   14001c1d5:	imul   ebp
   14001c1d7:	rex jp 0x14001c1c4
   14001c1da:	cmp    ebp,eax
   14001c1dc:	sahf   
   14001c1dd:	cmp    al,0x82
   14001c1df:	push   0x65
   14001c1e1:	add    DWORD PTR [rcx-0xbbdbf27],esp
   14001c1e7:	repz test DWORD PTR [rbp-0x543d3f3],ecx
   14001c1ee:	rex.WRB sbb BYTE PTR [r13+0x6be8ede1],r15b
   14001c1f5:	ss adc esi,esp
   14001c1f8:	movsxd r12,DWORD PTR [r10+r13*2+0x14]
   14001c1fd:	mov    ebp,0xcb08e333
   14001c202:	jae    0x14001c1a4
   14001c204:	out    dx,al
   14001c205:	sbb    cl,BYTE PTR [rax-0x3ceb2eae]
   14001c20b:	cwde   
   14001c20c:	jg     0x14001c1ae
   14001c20e:	(bad)  
   14001c20f:	ins    DWORD PTR es:[rdi],dx
   14001c210:	cmc    
   14001c211:	adc    eax,0x2b7e524
   14001c216:	cmp    esi,ebx
   14001c218:	outs   dx,DWORD PTR ds:[rsi]
   14001c219:	cs scas al,BYTE PTR es:[rdi]
   14001c21b:	cmp    al,0x8b
   14001c21d:	or     al,0xc7
   14001c21f:	add    edx,DWORD PTR [rdi-0x6752603e]
   14001c225:	out    0xf8,eax
   14001c227:	fwait
   14001c228:	cmp    bpl,spl
   14001c22b:	xchg   edi,eax
   14001c22c:	loope  0x14001c23d
   14001c22e:	sahf   
   14001c22f:	rex.WRXB movabs al,ds:0xc86ee27dc3940e39
   14001c239:	add    ecx,DWORD PTR [rcx+0x79731f20]
   14001c23f:	loop   0x14001c23b
   14001c241:	cld    
   14001c242:	rex.RB ret 0xeb0b
   14001c246:	outs   dx,DWORD PTR ds:[rsi]
   14001c247:	cmp    bh,BYTE PTR [rax+rdx*2+0x6feb4503]
   14001c24e:	call   QWORD PTR [rbp+rax*8-0x550f48c1]
   14001c255:	rex.XB adc al,0x46
   14001c258:	adc    DWORD PTR [rcx],edi
   14001c25a:	enter  0x2263,0x37
   14001c25e:	rex.WR sub rax,0x711f6140
   14001c264:	add    DWORD PTR [rcx-0x24],edi
   14001c267:	hlt    
   14001c268:	adc    al,0xb5
   14001c26a:	add    BYTE PTR [rsi+0x432f9072],bl
   14001c270:	xlat   BYTE PTR ds:[rbx]
   14001c271:	and    eax,0x5cb4e2e4
   14001c276:	ror    dh,0xac
   14001c279:	pop    rsp
   14001c27a:	or     eax,0xbf3151cf
   14001c27f:	ins    DWORD PTR es:[rdi],dx
   14001c280:	fisub  WORD PTR [rbp+0x4aaf8340]
   14001c286:	or     ebp,DWORD PTR [rdi+0x7]
   14001c289:	loope  0x14001c2fc
   14001c28b:	mov    esp,0x2f01398c
   14001c290:	pop    rsp
   14001c291:	add    DWORD PTR [rdi+rax*8-0x504a026],ebx
   14001c298:	(bad)  
   14001c299:	or     al,0x5d
   14001c29b:	ja     0x14001c270
   14001c29d:	sub    eax,0xefebedef
   14001c2a2:	sti    
   14001c2a3:	xchg   DWORD PTR [rbp+0x55],esi
   14001c2a6:	ffreep st(5)
   14001c2a8:	rex
   14001c2a9:	rex.WRXB and r15b,BYTE PTR [r8-0x4e]
   14001c2ad:	or     al,0x3
   14001c2af:	push   0x4b33ca52
   14001c2b4:	out    dx,eax
   14001c2b5:	xor    esi,DWORD PTR [rcx+0x3e]
   14001c2b8:	test   al,0x59
   14001c2ba:	(bad)  
   14001c2bb:	cld    
   14001c2bc:	nop
   14001c2bd:	int3   
   14001c2be:	adc    eax,0x600c0f80
   14001c2c3:	add    ch,BYTE PTR [rdx+rbx*2+0x44]
   14001c2c7:	(bad)  
   14001c2c8:	out    dx,al
   14001c2c9:	rex.WRB (bad) 
   14001c2cb:	jne    0x14001c2ec
   14001c2cd:	(bad)  
   14001c2ce:	or     DWORD PTR [rbx-0x52],ebx
   14001c2d1:	xchg   esp,eax
   14001c2d2:	fwait
   14001c2d3:	mov    dh,BYTE PTR [rbx-0x4d60264]
   14001c2d9:	push   rax
   14001c2da:	retf   0x823b
   14001c2dd:	mov    ebx,0x1790626
   14001c2e2:	js     0x14001c264
   14001c2e4:	shl    BYTE PTR [rdx-0x45],0x72
   14001c2e8:	cmp    ecx,ebx
   14001c2ea:	(bad)  
   14001c2eb:	adc    esp,DWORD PTR [rax-0x77ef3536]
   14001c2f1:	repnz add bl,ah
   14001c2f4:	and    BYTE PTR [rax+0x17],dh
   14001c2f7:	cmp    eax,DWORD PTR [rax]
   14001c2f9:	push   rsp
   14001c2fa:	xchg   edi,eax
   14001c2fb:	pop    rsp
   14001c2fc:	adc    ebp,0xfd3441be
   14001c302:	cmp    edx,eax
   14001c304:	sbb    al,0x7d
   14001c306:	add    dh,BYTE PTR [rax+rsi*1-0x745115f3]
   14001c30d:	and    bl,BYTE PTR [rbx+0x5f]
   14001c310:	(bad)  
   14001c311:	jbe    0x14001c301
   14001c313:	(bad)
   14001c316:	mov    ebp,0x30df751f
   14001c31b:	mov    al,0x70
   14001c31d:	or     bh,BYTE PTR [rbx]
   14001c31f:	addr32 (bad) 
   14001c321:	movsxd esi,DWORD PTR [rax+0x7a]
   14001c324:	or     al,0x71
   14001c326:	(bad)  
   14001c327:	(bad)  
   14001c328:	mov    ah,0xba
   14001c32a:	and    al,0xb9
   14001c32c:	add    al,0x94
   14001c32e:	pushf  
   14001c32f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c330:	(bad)  
   14001c331:	push   sp
   14001c333:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c334:	jge    0x14001c334
   14001c336:	cmc    
   14001c337:	(bad)  
   14001c338:	rex.WR clc 
   14001c33a:	or     eax,0x7e1347fa
   14001c33f:	adc    ebp,DWORD PTR [rsi+riz*1+0x70]
   14001c343:	adc    BYTE PTR [rdi-0x3f],dh
   14001c346:	imul   eax,DWORD PTR [rax+rbx*2],0xf61c9fe7
   14001c34d:	movsxd edx,DWORD PTR [rsi+0x36]
   14001c350:	mov    edi,0x2882f825
   14001c355:	xor    ch,BYTE PTR [rdi-0x70]
   14001c358:	fld    QWORD PTR [rsi]
   14001c35a:	fsubr  DWORD PTR [rbx+0x12]
   14001c35d:	js     0x14001c3cc
   14001c35f:	rex.WX
   14001c360:	rex
   14001c361:	rex.RXB push r13
   14001c363:	lods   al,BYTE PTR ds:[rsi]
   14001c364:	and    eax,0x3866dfe5
   14001c369:	nop
   14001c36a:	(bad)  
   14001c36b:	fisub  WORD PTR [rcx+0x796713be]
   14001c371:	(bad)  
   14001c372:	push   rdx
   14001c373:	(bad)  
   14001c374:	ins    DWORD PTR es:[rdi],dx
   14001c375:	(bad)  
   14001c376:	cs xchg edx,eax
   14001c378:	in     al,dx
   14001c379:	lock fnsave [rax+0x61]
   14001c37d:	stos   DWORD PTR es:[rdi],eax
   14001c37e:	mov    WORD PTR [rdx-0x1c659c76],ss
   14001c384:	sub    DWORD PTR [rdi+0x2bb9ad59],ebp
   14001c38a:	xchg   ebp,eax
   14001c38b:	adc    ah,al
   14001c38d:	fwait
   14001c38e:	nop
   14001c38f:	mov    al,0x89
   14001c391:	scas   eax,DWORD PTR es:[rdi]
   14001c392:	sbb    eax,0x8104a28
   14001c397:	rex.WB pop r12
   14001c399:	sbb    ah,bl
   14001c39b:	(bad)  
   14001c39c:	ins    BYTE PTR es:[rdi],dx
   14001c39d:	(bad)  
   14001c39e:	pop    rdx
   14001c39f:	faddp  st(4),st
   14001c3a1:	push   rsi
   14001c3a2:	mov    ebx,0x1281e79f
   14001c3a7:	lods   eax,DWORD PTR ds:[rsi]
   14001c3a8:	push   rsp
   14001c3a9:	adc    BYTE PTR [rdx+0x276b9710],al
   14001c3af:	fistp  QWORD PTR ss:[rdi]
   14001c3b2:	(bad)  
   14001c3b3:	int    0xdf
   14001c3b5:	jns    0x14001c3f0
   14001c3b7:	(bad)  
   14001c3b8:	vmwrite rdi,QWORD PTR [rsi+0xa]
   14001c3bc:	loopne 0x14001c3fa
   14001c3be:	(bad)  
   14001c3bf:	(bad)  
   14001c3c0:	rex jl 0x14001c39e
   14001c3c3:	(bad)  
   14001c3c4:	cld    
   14001c3c5:	fmul   DWORD PTR [rbp+0x3b]
   14001c3c8:	ja     0x14001c3b9
   14001c3ca:	std    
   14001c3cb:	(bad)  
   14001c3cc:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001c3ce:	repz rcr DWORD PTR [rax],0xc2
   14001c3d2:	push   rbp
   14001c3d3:	and    cl,cl
   14001c3d5:	mov    DWORD PTR [rsi],edx
   14001c3d7:	(bad)
   14001c3da:	js     0x14001c369
   14001c3dc:	sti    
   14001c3dd:	out    0xe4,eax
   14001c3df:	mov    esi,0x68217332
   14001c3e4:	push   0xffffffffef7b72c3
   14001c3e9:	mov    al,0xbd
   14001c3eb:	mov    al,0xee
   14001c3ed:	mov    dl,0x43
   14001c3ef:	(bad)  
   14001c3f0:	rex.RX pushf 
   14001c3f2:	ror    cl,cl
   14001c3f5:	ret    0x73e6
   14001c3f8:	push   rdx
   14001c3f9:	sti    
   14001c3fa:	movabs al,ds:0xe94b2c53252c356a
   14001c403:	(bad)  
   14001c404:	retf   
   14001c405:	and    BYTE PTR [rdx],dl
   14001c407:	mov    dh,0x3c
   14001c409:	jge    0x14001c3c8
   14001c40b:	mov    BYTE PTR [rbp+rbp*8+0x71],cl
   14001c40f:	jno    0x14001c44e
   14001c411:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c412:	jns    0x14001c3dc
   14001c414:	lods   eax,DWORD PTR ds:[rsi]
   14001c415:	(bad)  
   14001c416:	push   rbx
   14001c417:	sbb    DWORD PTR [rdx+0x2a],esi
   14001c41a:	(bad)  
   14001c41b:	(bad)  
   14001c41c:	mov    cl,0xcf
   14001c41e:	retf   
   14001c41f:	(bad)  
   14001c420:	rex.WB cli 
   14001c422:	or     al,0x8c
   14001c424:	mov    WORD PTR [rax-0x1b],fs
   14001c427:	xchg   BYTE PTR [rdi],dh
   14001c429:	(bad)  
   14001c42a:	mov    bl,0x7f
   14001c42c:	adc    cl,ch
   14001c42e:	cdq    
   14001c42f:	rex.RXB sbb BYTE PTR [r9+0xac6d071],0x62
   14001c437:	push   rbp
   14001c438:	(bad)  
   14001c439:	hlt    
   14001c43a:	cmc    
   14001c43b:	inc    DWORD PTR [rax]
   14001c43d:	retf   
   14001c43e:	sti    
   14001c43f:	scas   eax,DWORD PTR es:[rdi]
   14001c440:	rex.RXB (bad) 
   14001c443:	xor    bh,BYTE PTR [rdx-0x1a]
   14001c446:	rex.WRX (bad) 
   14001c448:	js     0x14001c4bc
   14001c44a:	adc    al,0xf5
   14001c44c:	in     al,dx
   14001c44d:	and    al,0xc2
   14001c44f:	repnz add dl,al
   14001c452:	test   al,0xf5
   14001c454:	(bad)  
   14001c455:	(bad)  
   14001c456:	rex.WB jmp 0x14001c46f
   14001c459:	jrcxz  0x14001c492
   14001c45b:	call   0x1255a6d7f
   14001c460:	xchg   DWORD PTR [rdx-0x80],ecx
   14001c463:	lods   al,BYTE PTR ds:[rsi]
   14001c464:	(bad)  
   14001c465:	mov    ebp,0xed6e9a50
   14001c46a:	xchg   ecx,eax
   14001c46b:	int    0x90
   14001c46d:	xchg   ebx,eax
   14001c46e:	js     0x14001c431
   14001c470:	(bad)  
   14001c471:	or     al,dl
   14001c473:	leave  
   14001c474:	out    dx,al
   14001c475:	ret    0xfe46
   14001c478:	cmp    eax,0xc09865d9
   14001c47d:	xchg   edi,eax
   14001c47e:	xchg   esi,eax
   14001c47f:	sar    bh,cl
   14001c481:	enter  0x8295,0x23
   14001c485:	xor    BYTE PTR [rdi],ah
   14001c487:	fst    QWORD PTR [rcx+rsi*4+0x16]
   14001c48b:	xchg   esi,eax
   14001c48c:	rcr    esi,cl
   14001c48e:	fwait
   14001c48f:	nop
   14001c490:	mov    ebx,0x686bd125
   14001c495:	mov    ebx,0xc1435270
   14001c49a:	(bad)  
   14001c49b:	push   rdx
   14001c49d:	mov    ebp,0x373ffce6
   14001c4a2:	shrd   DWORD PTR [rcx-0x73c973d7],edx,cl
   14001c4a9:	jmp    0x141856565
   14001c4ae:	rex.X add al,0x96
   14001c4b1:	and    eax,0x5d488c1
   14001c4b6:	sub    BYTE PTR [rdi+rbp*2],0xce
   14001c4ba:	fs sbb edi,ebx
   14001c4bd:	jp     0x14001c4ff
   14001c4bf:	rcl    BYTE PTR [rdx-0x53482cf],cl
   14001c4c5:	lods   al,BYTE PTR ds:[rsi]
   14001c4c6:	in     al,dx
   14001c4c7:	rol    BYTE PTR [rcx-0x50],cl
   14001c4ca:	cmc    
   14001c4cb:	sbb    eax,0x50ec148d
   14001c4d0:	jp     0x14001c4bf
   14001c4d2:	(bad)  
   14001c4d3:	rcl    ebx,cl
   14001c4d5:	mov    bh,0xfe
   14001c4d7:	adc    bh,BYTE PTR [rdi+0x593eebe6]
   14001c4dd:	pop    rsi
   14001c4de:	(bad)  
   14001c4df:	(bad)  
   14001c4e0:	loopne 0x14001c4be
   14001c4e2:	or     ah,al
   14001c4e4:	(bad)  
   14001c4e6:	ds pop rsp
   14001c4e8:	jnp    0x14001c4b5
   14001c4ea:	jmp    0x14001c473
   14001c4ec:	scas   al,BYTE PTR es:[rdi]
   14001c4ed:	mov    ebp,0xe9eff5e5
   14001c4f2:	out    dx,eax
   14001c4f3:	out    dx,eax
   14001c4f4:	sti    
   14001c4f5:	xchg   ecx,eax
   14001c4f6:	rex.WRX push rbp
   14001c4f8:	mov    edi,0x4300c005
   14001c4fd:	(bad)  
   14001c4fe:	xchg   esi,eax
   14001c4ff:	test   ecx,esi
   14001c501:	xor    rax,0x423df5b9
   14001c507:	rcr    BYTE PTR [rax+0x76fec3b7],1
   14001c50d:	mov    ah,0x3b
   14001c50f:	add    DWORD PTR [rdx+0x5f619731],ebx
   14001c515:	sub    al,BYTE PTR [rdx+0x7b]
   14001c518:	(bad)  
   14001c519:	dec    DWORD PTR [rax-0x76be1d23]
   14001c51f:	xchg   ebp,eax
   14001c520:	(bad)  
   14001c521:	in     al,0xf
   14001c523:	push   rbx
   14001c524:	cmp    dh,ch
   14001c526:	mov    edx,0x161fb01d
   14001c52b:	push   rbx
   14001c52c:	and    BYTE PTR [rdi-0x2e2f5f4d],al
   14001c532:	fdivr  DWORD PTR [rbp+rbp*8+0x23]
   14001c536:	add    eax,0x6bc9fa4f
   14001c53b:	rex.WRB mov r15b,0x8e
   14001c53e:	push   rbx
   14001c53f:	sbb    dl,BYTE PTR [rdi+0x7b05423c]
   14001c545:	lods   eax,DWORD PTR ds:[rsi]
   14001c546:	jle    0x14001c584
   14001c548:	mov    BYTE PTR [rdx+rdi*8-0x1b],bh
   14001c54c:	jrcxz  0x14001c4e6
   14001c54e:	add    BYTE PTR [rax],cl
   14001c550:	adc    DWORD PTR [rbp+rbp*2-0x52],0xc2b7b061
   14001c558:	fisubr DWORD PTR [rbx-0x71153a92]
   14001c55e:	(bad)  
   14001c55f:	xor    al,0x4f
   14001c561:	or     BYTE PTR ds:[rdx],bh
   14001c564:	(bad)  
   14001c565:	sub    al,0x96
   14001c567:	scas   eax,DWORD PTR es:[rdi]
   14001c568:	mov    eax,0xfeafe30a
   14001c56d:	sti    
   14001c56e:	call   0x1bf3dc67e
   14001c573:	or     al,BYTE PTR [rbx-0x2d]
   14001c576:	movabs ds:0x35363e8d213e9fe8,eax
   14001c57f:	jmp    0x16b26580b
   14001c584:	adc    DWORD PTR [rax],0xa8f61658
   14001c58a:	and    DWORD PTR [rcx+0x7f],ebx
   14001c58d:	mov    dl,0xe0
   14001c58f:	xchg   DWORD PTR [rsi-0x4],edx
   14001c592:	push   rcx
   14001c593:	adc    esi,esi
   14001c595:	push   rbx
   14001c596:	stos   DWORD PTR es:[rdi],eax
   14001c597:	or     eax,0x5d97340
   14001c59c:	(bad)  
   14001c59d:	and    eax,DWORD PTR [rcx+0x2d]
   14001c5a0:	mov    ch,0x31
   14001c5a2:	cld    
   14001c5a3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c5a4:	add    al,ah
   14001c5a6:	mov    al,0x9d
   14001c5a8:	add    BYTE PTR [rip+0xdc2d8b],ch        # 0x140ddf339
   14001c5ae:	shr    BYTE PTR [rdi+rdi*1-0x35],cl
   14001c5b2:	xchg   edi,eax
   14001c5b3:	(bad)  
   14001c5b4:	clc    
   14001c5b5:	sbb    al,BYTE PTR [rax+0x5811cc84]
   14001c5bb:	push   rax
   14001c5bc:	xor    BYTE PTR [rdi-0x68ea26e9],al
   14001c5c2:	int    0x15
   14001c5c4:	imul   edi,eax,0xffffff91
   14001c5c7:	(bad)  
   14001c5c8:	pop    rsi
   14001c5c9:	mov    dh,0xf8
   14001c5cb:	in     eax,0x66
   14001c5cd:	out    dx,al
   14001c5ce:	(bad)  
   14001c5cf:	and    eax,0x331fd348
   14001c5d4:	es (bad) 
   14001c5d6:	xlat   BYTE PTR ds:[rbx]
   14001c5d7:	(bad)  
   14001c5d8:	adc    al,0xe1
   14001c5da:	rcl    BYTE PTR [rcx+0xa1b4ad4],1
   14001c5e0:	push   rcx
   14001c5e1:	xchg   DWORD PTR [rsi-0x4ff65634],ecx
   14001c5e7:	sahf   
   14001c5e8:	(bad)  
   14001c5e9:	pushfw 
   14001c5eb:	or     al,0x5d
   14001c5ed:	pop    rdx
   14001c5ee:	clc    
   14001c5ef:	mov    bl,0x71
   14001c5f1:	rex.RX adc al,0xaa
   14001c5f4:	xor    BYTE PTR [rdx-0x3477de6e],0x63
   14001c5fb:	retf   0x1a47
   14001c5fe:	(bad)  
   14001c5ff:	in     al,0xb9
   14001c601:	ins    BYTE PTR es:[rdi],dx
   14001c602:	cmp    esp,ebp
   14001c604:	pop    rdx
   14001c605:	mov    al,0xe0
   14001c607:	repz push rsp
   14001c609:	jle    0x14001c596
   14001c60b:	mov    esi,0x6ee578cb
   14001c610:	add    bh,bl
   14001c612:	rex.R (bad) 
   14001c614:	or     DWORD PTR [rax+0x49],edi
   14001c617:	mov    bh,0x33
   14001c619:	sub    eax,DWORD PTR [rax-0x432ecb0d]
   14001c61f:	jmp    0x14001c668
   14001c621:	push   rcx
   14001c623:	jmp    0x14001c5ab
   14001c625:	rex.RX jbe 0x14001c6a7
   14001c628:	movabs al,ds:0x1aba04387f7b7b7
   14001c631:	adc    eax,0x6ce69b7a
   14001c636:	xchg   ebx,eax
   14001c637:	pop    rbx
   14001c638:	(bad)  
   14001c639:	shl    DWORD PTR [rbx],cl
   14001c63b:	icebp  
   14001c63c:	(bad)  
   14001c63d:	xchg   edx,eax
   14001c63e:	mov    edx,0x9d212f32
   14001c643:	or     cl,BYTE PTR [rax+0x6a]
   14001c646:	cmp    DWORD PTR [rsi+rbp*1],0x45
   14001c64a:	rex.RXB jg 0x14001c6b0
   14001c64d:	outs   dx,DWORD PTR ds:[rsi]
   14001c64e:	retf   
   14001c64f:	ins    BYTE PTR es:[rdi],dx
   14001c650:	mov    edi,0xeecea5b6
   14001c655:	rex.X stc 
   14001c657:	cdq    
   14001c658:	in     eax,0x8
   14001c65a:	mov    BYTE PTR [rdx-0x79e25970],dl
   14001c660:	add    BYTE PTR [rax+0x26d81ccd],ah
   14001c666:	je     0x14001c601
   14001c668:	mov    dl,BYTE PTR [rcx+0x58]
   14001c66b:	(bad)  
   14001c66c:	rex.RXB adc r12b,BYTE PTR [r13-0x6aae2e0e]
   14001c673:	push   rbx
   14001c674:	nop
   14001c675:	sub    ecx,DWORD PTR [rdi]
   14001c677:	imul   ebp,DWORD PTR [rdx+riz*2],0xffffffee
   14001c67b:	mov    esp,DWORD PTR [rbp+0x4d6e6c2]
   14001c681:	jns    0x14001c669
   14001c683:	xor    BYTE PTR [rax],cl
   14001c685:	sbb    DWORD PTR [rbx],0xea8340ec
   14001c68b:	shr    BYTE PTR [rbx+0x2763bab0],cl
   14001c691:	mov    edx,0x7a303b03
   14001c696:	(bad)
   14001c699:	cmp    esi,DWORD PTR [rsi-0x7d]
   14001c69c:	push   rdi
   14001c69d:	(bad)  
   14001c69e:	xor    BYTE PTR [rax],bh
   14001c6a0:	jnp    0x14001c6b4
   14001c6a2:	rex.XB xchg r11d,eax
   14001c6a4:	movsxd ebp,DWORD PTR [rax+0x561067e6]
   14001c6aa:	xchg   edi,eax
   14001c6ab:	shr    BYTE PTR [rcx+0x3],0x64
   14001c6af:	js     0x14001c70e
   14001c6b1:	lahf   
   14001c6b2:	or     BYTE PTR [r10],r9b
   14001c6b5:	std    
   14001c6b6:	and    esi,eax
   14001c6b8:	sub    ah,BYTE PTR [rdx+0x15516bc9]
   14001c6be:	(bad)  
   14001c6bf:	fild   QWORD PTR [rip+0xbc59ad]        # 0x140be2072
   14001c6c5:	stos   DWORD PTR es:[rdi],eax
   14001c6c6:	(bad)
   14001c6c9:	add    BYTE PTR [rbx-0x3a],bh
   14001c6cc:	rex.RX (bad) 
   14001c6ce:	xor    DWORD PTR [rax-0x57],esp
   14001c6d1:	sbb    DWORD PTR [rcx-0x8],0xffffffc9
   14001c6d5:	test   DWORD PTR [rdi],esi
   14001c6d7:	or     ebp,DWORD PTR [rsi+rsi*1-0x3]
   14001c6db:	outs   dx,BYTE PTR ds:[rsi]
   14001c6dc:	sub    BYTE PTR [r15-0x7c58af5],r8b
   14001c6e3:	std    
   14001c6e4:	(bad)  [rbx]
   14001c6e6:	(bad)  [rsi+0x3c8d29b1]
   14001c6ec:	adc    al,0xf6
   14001c6ee:	mov    ecx,0xeb16e8c1
   14001c6f3:	push   0xffffffffffffffe3
   14001c6f5:	mov    edi,0xd316531d
   14001c6fa:	xor    edx,0x8a44a9ef
   14001c700:	pushf  
   14001c701:	out    0x9b,eax
   14001c703:	and    bl,BYTE PTR [rax+0x7587e132]
   14001c709:	(bad)  
   14001c70a:	cdq    
   14001c70b:	icebp  
   14001c70c:	mov    al,0xbc
   14001c70e:	and    ecx,edi
   14001c710:	(bad)  
   14001c711:	xor    BYTE PTR [rbx-0x33c5da3c],ah
   14001c717:	push   rdi
   14001c718:	(bad)  
   14001c719:	jns    0x14001c6d9
   14001c71b:	in     eax,0x2d
   14001c71d:	fs (bad) 
   14001c71f:	sub    DWORD PTR [rdi+0x6a],ecx
   14001c722:	(bad)  
   14001c723:	ja     0x14001c704
   14001c725:	std    
   14001c726:	(bad)  
   14001c727:	(bad)  
   14001c728:	clc    
   14001c729:	(bad)  
   14001c72a:	mul    DWORD PTR [rcx-0x21]
   14001c72d:	rex.RX icebp 
   14001c72f:	xchg   ebx,eax
   14001c730:	xchg   edi,eax
   14001c731:	add    DWORD PTR [rcx],eax
   14001c733:	pushf  
   14001c734:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c735:	lods   eax,DWORD PTR ds:[rsi]
   14001c736:	(bad)  
   14001c737:	xor    eax,0xe3bcde37
   14001c73c:	mov    edx,0x577b6f5b
   14001c741:	inc    eax
   14001c743:	ror    BYTE PTR [rdi+0x27755556],0x11
   14001c74a:	or     eax,0xbd21c831
   14001c74f:	cmp    eax,0xd68aa0f4
   14001c754:	imul   esi,ecx,0xffffffd1
   14001c757:	pop    si
   14001c759:	gs (bad) 
   14001c75b:	in     eax,dx
   14001c75c:	cwde   
   14001c75d:	add    ebx,DWORD PTR [rbx]
   14001c75f:	(bad)  
   14001c760:	jbe    0x14001c77a
   14001c762:	(bad)  
   14001c763:	in     eax,0xfe
   14001c765:	sub    BYTE PTR [rsi],ah
   14001c767:	rex.RB
   14001c768:	or     ah,BYTE PTR ss:[rax]
   14001c76b:	xchg   esp,eax
   14001c76c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c76d:	sbb    BYTE PTR [rsi+0x6e],dh
   14001c770:	js     0x14001c7c0
   14001c772:	ss mov cl,0xe5
   14001c775:	(bad)  
   14001c776:	ins    DWORD PTR es:[rdi],dx
   14001c777:	icebp  
   14001c778:	call   rbp
   14001c77a:	loop   0x14001c796
   14001c77c:	(bad)  
   14001c77d:	enter  0xc956,0x5c
   14001c781:	cmp    eax,0x409f1fbd
   14001c786:	addr32 retf 0xd34e
   14001c78a:	jae    0x14001c7f6
   14001c78c:	sbb    ebp,eax
   14001c78e:	lods   eax,DWORD PTR ds:[rsi]
   14001c78f:	jl     0x14001c744
   14001c791:	pop    rcx
   14001c792:	sbb    al,0x2
   14001c794:	rex.R loope 0x14001c7bc
   14001c797:	rex.XB
   14001c798:	rex.X stc 
   14001c79a:	icebp  
   14001c79b:	(bad)  
   14001c79c:	(bad)  
   14001c79d:	and    ecx,DWORD PTR [rsi-0x66]
   14001c7a0:	out    dx,al
   14001c7a1:	sub    edi,ebx
   14001c7a3:	and    al,0x10
   14001c7a5:	nop
   14001c7a6:	sbb    dh,ah
   14001c7a8:	vpmuludq ymm14,ymm6,ymm4
   14001c7ac:	jbe    0x14001c79e
   14001c7ae:	(bad)  
   14001c7af:	(bad)  
   14001c7b0:	stos   DWORD PTR es:[rdi],eax
   14001c7b1:	mov    cl,0x74
   14001c7b3:	call   0x166d5708d
   14001c7b8:	push   0xffffffffa64614fe
   14001c7bd:	mov    fs,WORD PTR [rdx+0x6814f667]
   14001c7c3:	jne    0x14001c7d6
   14001c7c5:	fcomp  QWORD PTR [rbp+0x43]
   14001c7c8:	mov    al,0x5a
   14001c7ca:	jg     0x14001c781
   14001c7cc:	outs   dx,BYTE PTR ds:[rsi]
   14001c7cd:	push   rcx
   14001c7ce:	pop    rbx
   14001c7cf:	jge    0x14001c826
   14001c7d1:	int3   
   14001c7d2:	rex.WX mov spl,0x49
   14001c7d5:	mov    ebp,0x47edd97f
   14001c7da:	lods   al,BYTE PTR ds:[rsi]
   14001c7db:	mov    edi,0x5af273c1
   14001c7e0:	or     bl,cl
   14001c7e2:	jnp    0x14001c765
   14001c7e4:	jle    0x14001c78c
   14001c7e6:	(bad)  
   14001c7e7:	rex.WB lods rax,QWORD PTR ds:[rsi]
   14001c7e9:	jne    0x14001c839
   14001c7eb:	(bad)  
   14001c7ec:	add    eax,ecx
   14001c7ee:	sub    eax,0xb575167f
   14001c7f3:	lahf   
   14001c7f4:	rol    DWORD PTR fs:[rip+0xffffffffbdf30c23],1        # 0xfdf4d41e
   14001c7fb:	push   rbx
   14001c7fc:	enter  0x977b,0x4d
   14001c800:	rex.RX sub al,0x2d
   14001c803:	mov    eax,0x28a619d4
   14001c808:	cmc    
   14001c809:	(bad)  
   14001c80a:	xor    BYTE PTR [rbx-0x12],al
   14001c80d:	repz rex.B
   14001c80f:	gs stos DWORD PTR es:[rdi],eax
   14001c811:	(bad)
   14001c814:	lahf   
   14001c815:	fistp  DWORD PTR [rsp-0xdf9c098]
   14001c81c:	(bad)  
   14001c81d:	(bad)  
   14001c81e:	sahf   
   14001c81f:	cmp    BYTE PTR [rsi+0x45b79527],ah
   14001c825:	(bad)  
   14001c826:	lahf   
   14001c827:	pop    rdi
   14001c828:	(bad)  
   14001c829:	and    edi,DWORD PTR [rcx]
   14001c82b:	rex.WRXB and rax,0x421517
   14001c831:	xchg   DWORD PTR [rsp+riz*4-0x494debf],eax
   14001c838:	in     eax,dx
   14001c839:	pop    rbp
   14001c83a:	sub    DWORD PTR [rbp+0x6a],0xffffff98
   14001c83e:	movabs ds:0x42082b1b381a6365,al
   14001c847:	sub    DWORD PTR [rdx],0x627bf28e
   14001c84d:	rex.RX test esi,r12d
   14001c850:	push   rbp
   14001c851:	ja     0x14001c8b6
   14001c853:	loop   0x14001c80b
   14001c855:	sti    
   14001c856:	mov    al,0xef
   14001c858:	ror    eax,cl
   14001c85a:	rex.WB
   14001c85b:	rex.B (bad) 
   14001c85d:	cdq    
   14001c85e:	sbb    edx,DWORD PTR [rax-0x63]
   14001c861:	xlat   BYTE PTR ds:[rbx]
   14001c862:	fidivr DWORD PTR [rdi-0x18]
   14001c865:	rex.RXB pop r15
   14001c867:	mov    ch,0x6b
   14001c869:	iret   
   14001c86a:	mov    esi,0xce9d57f7
   14001c86f:	ja     0x10f25278d
   14001c875:	fnstcw WORD PTR [rbx+rbx*4+0x2]
   14001c879:	(bad)  
   14001c87a:	sbb    ah,cl
   14001c87c:	sub    DWORD PTR gs:[rax+0x955a648],edx
   14001c883:	xchg   edx,eax
   14001c884:	rex.B cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c886:	adc    ebp,DWORD PTR [rax-0x37092cfc]
   14001c88c:	(bad)  [rax-0x466125ea]
   14001c892:	cmp    BYTE PTR [rdi],al
   14001c894:	mov    dl,0xa2
   14001c896:	xor    BYTE PTR [rbx-0x1f],cl
   14001c899:	xor    eax,0x17f7e6df
   14001c89e:	jae    0x14001c861
   14001c8a0:	mov    es,WORD PTR [rbp-0x3c]
   14001c8a3:	lods   eax,DWORD PTR ds:[rsi]
   14001c8a4:	cld    
   14001c8a5:	jg     0x14001c8ed
   14001c8a7:	push   rsi
   14001c8a8:	sbb    al,0x66
   14001c8aa:	stc    
   14001c8ab:	ins    DWORD PTR es:[rdi],dx
   14001c8ac:	loop   0x14001c849
   14001c8ae:	rex.WRXB jbe 0x14001c897
   14001c8b1:	stos   DWORD PTR es:[rdi],eax
   14001c8b2:	or     esi,DWORD PTR [rax-0x68f144e8]
   14001c8b8:	pop    rbx
   14001c8b9:	rex.WRX
   14001c8ba:	rex.RXB (bad) 
   14001c8bc:	fdiv   QWORD PTR [rdx+0x76a4f975]
   14001c8c2:	xor    al,0xf
   14001c8c4:	rex.RXB xchg r8d,eax
   14001c8c6:	(bad)  
   14001c8c7:	push   rbx
   14001c8c8:	call   rsi
   14001c8ca:	mov    edx,0x585c949
   14001c8cf:	add    al,0x6e
   14001c8d1:	xor    BYTE PTR [rbp-0x1e],dh
   14001c8d4:	or     dh,al
   14001c8d6:	neg    bh
   14001c8d8:	or     dl,ch
   14001c8da:	fld    DWORD PTR [rcx-0x2271c0cc]
   14001c8e0:	xor    esp,DWORD PTR [rbx+0x18]
   14001c8e3:	cwde   
   14001c8e4:	cmp    cl,BYTE PTR [rsi-0x4f78c750]
   14001c8ea:	mov    esi,0x3f03d7ac
   14001c8ef:	(bad)  
   14001c8f0:	rex.B loop 0x14001c8ee
   14001c8f3:	adc    eax,0xf1856a11
   14001c8f8:	add    bh,ch
   14001c8fa:	loope  0x14001c935
   14001c8fc:	call   QWORD PTR [rip+0xffffffffd5aa7274]        # 0x115ac3b76
   14001c902:	ss stos DWORD PTR es:[rdi],eax
   14001c904:	cdq    
   14001c905:	test   ebx,edx
   14001c907:	add    al,0xbe
   14001c909:	mov    BYTE PTR [rsi],cl
   14001c90b:	and    BYTE PTR [rbx],ch
   14001c90d:	push   0xffffffffffffffcb
   14001c90f:	adc    ch,BYTE PTR [rdi+rbp*8]
   14001c912:	stos   DWORD PTR es:[rdi],eax
   14001c913:	push   rbp
   14001c914:	(bad)  
   14001c915:	stos   DWORD PTR es:[rdi],eax
   14001c916:	out    dx,eax
   14001c917:	and    eax,0x1e0e5093
   14001c91c:	rex.WRB cdqe 
   14001c91e:	push   rbp
   14001c91f:	rex.W (bad) 
   14001c921:	test   al,0x30
   14001c923:	int    0xd5
   14001c925:	shl    bl,1
   14001c927:	mov    bh,0xc1
   14001c929:	fwait
   14001c92a:	pop    rbp
   14001c92b:	and    al,0x5a
   14001c92d:	outs   dx,BYTE PTR ds:[rsi]
   14001c92e:	cmp    DWORD PTR [rbx],0x77962cff
   14001c934:	imul   ebx,DWORD PTR [rsi+0x33792986],0xe
   14001c93b:	rex.WRX movabs rax,0x1914f943a3c8f589
   14001c945:	call   0x1028920fa
   14001c94a:	(bad)  
   14001c94b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c94c:	xlat   BYTE PTR ds:[rbx]
   14001c94d:	outs   dx,DWORD PTR ds:[rsi]
   14001c94e:	xlat   BYTE PTR ds:[rbx]
   14001c94f:	out    0xde,al
   14001c951:	cmp    DWORD PTR [rdi-0x7f99e899],0xa0e5e57c
   14001c95b:	cmp    al,0x1
   14001c95d:	mov    eax,0x3725e730
   14001c962:	mov    ch,0x65
   14001c964:	sahf   
   14001c965:	adc    BYTE PTR [rcx],al
   14001c967:	xchg   edi,eax
   14001c968:	repnz retf 0x4107
   14001c96c:	clc    
   14001c96d:	cmp    al,0x5e
   14001c96f:	xchg   ch,al
   14001c971:	rex.XB mov WORD PTR [r15],fs
   14001c974:	and    dl,BYTE PTR [rax*4-0x14228c8]
   14001c97b:	or     eax,0xcd7caf3b
   14001c980:	or     eax,0x1c1fe96f
   14001c985:	cli    
   14001c986:	mov    cl,0xaa
   14001c988:	stos   BYTE PTR es:[rdi],al
   14001c989:	out    dx,al
   14001c98a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c98b:	rol    BYTE PTR [rbx+rdx*8+0x2f],cl
   14001c990:	xor    ebx,edi
   14001c992:	test   al,0x11
   14001c994:	sub    eax,DWORD PTR [rdx]
   14001c996:	cmc    
   14001c997:	jae    0x14001c928
   14001c999:	hlt    
   14001c99a:	pushf  
   14001c99b:	jg     0x14001c9ea
   14001c99d:	movabs al,ds:0x260c473bfac7c2a8
   14001c9a6:	cmp    al,0xec
   14001c9a8:	mov    al,0x49
   14001c9aa:	(bad)  
   14001c9ab:	mov    DWORD PTR [rip+0x4211e8fc],edx        # 0x18213b2ad
   14001c9b1:	enter  0x4984,0x31
   14001c9b5:	pop    rax
   14001c9b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c9b7:	cmp    BYTE PTR [rsp+rdx*1],0xa8
   14001c9bb:	sbb    DWORD PTR [rbx+0x4ec0b0a],0x5d
   14001c9c2:	add    DWORD PTR [rax],ebx
   14001c9c4:	add    cl,dl
   14001c9c6:	and    edi,DWORD PTR fs:[rcx]
   14001c9c9:	scas   eax,DWORD PTR es:[rdi]
   14001c9ca:	rex
   14001c9cb:	fs (bad) 
   14001c9ce:	adc    al,BYTE PTR [rdx+rsi*8+0x248514f0]
   14001c9d5:	cmp    dl,BYTE PTR [rsi]
   14001c9d7:	out    0x6f,al
   14001c9d9:	mov    edx,0xac52688f
   14001c9de:	popf   
   14001c9df:	(bad)  
   14001c9e1:	sbb    DWORD PTR [rsi],ebp
   14001c9e3:	mov    ecx,0xd35097f0
   14001c9e8:	add    eax,0xde919edf
   14001c9ed:	pop    rbx
   14001c9ee:	mov    WORD PTR [rcx],ss
   14001c9f0:	retf   
   14001c9f1:	movsxd eax,DWORD PTR [rdi-0xf]
   14001c9f4:	fs out dx,eax
   14001c9f6:	jle    0x14001c99c
   14001c9f8:	mov    ebp,0xceac2057
   14001c9fd:	movabs ds:0x5bf894a68638e67f,eax
   14001ca06:	pop    rbp
   14001ca07:	add    al,0x37
   14001ca09:	imul   ecx,DWORD PTR [rax],0x56
   14001ca0c:	leave  
   14001ca0d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ca0e:	ret    
   14001ca0f:	(bad)  
   14001ca10:	shr    DWORD PTR [rax-0x75064b7e],0x44
   14001ca17:	or     dl,bl
   14001ca19:	out    0xcf,eax
   14001ca1b:	cdq    
   14001ca1c:	jg     0x14001c9d2
   14001ca1e:	or     al,0x1f
   14001ca20:	add    ch,dh
   14001ca22:	push   rdi
   14001ca23:	(bad)  
   14001ca24:	ja     0x14001c9dd
   14001ca26:	xor    DWORD PTR [rbx],ebp
   14001ca28:	(bad)  
   14001ca29:	jbe    0x14001ca33
   14001ca2b:	push   0x21
   14001ca2d:	fisttp QWORD PTR [rdx+0x1b]
   14001ca30:	cld    
   14001ca31:	xor    eax,0x7257cb
   14001ca36:	xchg   BYTE PTR [rax],bh
   14001ca38:	xor    ah,BYTE PTR [rcx]
   14001ca3a:	push   0xc1389cb
   14001ca3f:	adc    eax,0x760770b0
   14001ca44:	(bad)  
   14001ca45:	xchg   esp,eax
   14001ca46:	mov    edi,0xcd00ab2f
   14001ca4b:	add    BYTE PTR [rax-0x3048cdae],bl
   14001ca51:	fimul  DWORD PTR [rdi+riz*2-0xd26be95]
   14001ca58:	cli    
   14001ca59:	data16 loope 0x14001ca9c
   14001ca5c:	sbb    ebx,DWORD PTR [rbx-0x553f7cca]
   14001ca62:	adc    al,0xc
   14001ca64:	and    eax,0x439273e6
   14001ca69:	jl     0x14001cabe
   14001ca6b:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   14001ca6d:	sub    eax,eax
   14001ca6f:	rex.RX or DWORD PTR [rcx+0x1a122108],r8d
   14001ca76:	or     eax,0x8068e5f9
   14001ca7b:	and    bl,BYTE PTR [rax+rax*1+0x40686370]
   14001ca82:	(bad)  
   14001ca83:	jp     0x14001ca58
   14001ca85:	adc    BYTE PTR [rdx-0x4d],cl
   14001ca88:	addr32 mov ds:0x2725d32f,eax
   14001ca8e:	rex.RX xchg ebp,eax
   14001ca90:	push   rax
   14001ca91:	mov    bh,0x17
   14001ca93:	int    0xdf
   14001ca95:	jmp    FWORD PTR [rcx]
   14001ca97:	mov    WORD PTR [rsi],ds
   14001ca99:	clc    
   14001ca9a:	jge    0x14001caf8
   14001ca9c:	mov    dl,BYTE PTR ss:[rdi+0xa90f178]
   14001caa3:	enter  0xe246,0x4d
   14001caa7:	out    dx,eax
   14001caa8:	sti    
   14001caa9:	movabs eax,ds:0xa7bac1fc3c1cf62b
   14001cab2:	out    0x83,eax
   14001cab4:	and    esi,eax
   14001cab6:	xlat   BYTE PTR ds:[rbx]
   14001cab7:	sti    
   14001cab8:	fs push rcx
   14001caba:	stc    
   14001cabb:	icebp  
   14001cabc:	push   rdx
   14001cabd:	(bad)  
   14001cabe:	add    dh,dh
   14001cac0:	(bad)  
   14001cac1:	mov    al,0x5f
   14001cac3:	jnp    0x14001ca9e
   14001cac5:	mov    BYTE PTR [rbx+0xa5f098b],al
   14001cacb:	mov    bl,0xdd
   14001cacd:	sub    al,0x97
   14001cacf:	scas   eax,DWORD PTR es:[rdi]
   14001cad0:	rex.WRB shl QWORD PTR [r10],1
   14001cad3:	xchg   eax,ebp
   14001cad5:	jl     0x14001cb47
   14001cad7:	add    ch,BYTE PTR [rcx-0xb]
   14001cada:	sbb    al,0x9c
   14001cadc:	clc    
   14001cadd:	movabs ds:0xa42f1f985dbb9ee0,eax
   14001cae6:	in     al,0x7
   14001cae8:	xor    ebp,DWORD PTR [rax]
   14001caea:	(bad)  
   14001caeb:	pop    rdx
   14001caec:	test   BYTE PTR [rax+0x5e4202da],al
   14001caf2:	(bad)  
   14001caf3:	sbb    eax,0x93e6552d
   14001caf8:	fucom  st(0)
   14001cafa:	data16 mov cl,0x93
   14001cafd:	adc    esi,DWORD PTR [rsi]
   14001caff:	and    eax,0xc0b3712e
   14001cb04:	rex.RB
   14001cb05:	data16 sbb cl,cl
   14001cb08:	and    al,0x66
   14001cb0a:	mov    dh,0x23
   14001cb0c:	xchg   ebx,eax
   14001cb0d:	rex.RX not BYTE PTR [rbx-0x5cbeb16d]
   14001cb14:	movabs eax,ds:0x6e7742b14194a7d2
   14001cb1d:	add    cl,bh
   14001cb1f:	sub    eax,0xfafe626f
   14001cb24:	xlat   BYTE PTR ds:[rbx]
   14001cb25:	and    DWORD PTR [rsi+rax*1-0x138e0663],esp
   14001cb2c:	sahf   
   14001cb2d:	cmp    al,0x86
   14001cb2f:	dec    cl
   14001cb31:	xchg   ebx,eax
   14001cb32:	mov    BYTE PTR [rbx],ch
   14001cb34:	or     esi,DWORD PTR [rdx-0x26c8e04a]
   14001cb3a:	fist   WORD PTR [rcx+rsi*8]
   14001cb3d:	(bad)  
   14001cb3e:	rex.WX (bad) 
   14001cb40:	push   rsi
   14001cb41:	sub    ebx,DWORD PTR [rdi+0x26c8fe33]
   14001cb47:	stos   BYTE PTR es:[rdi],al
   14001cb48:	pop    rsi
   14001cb49:	(bad)  
   14001cb4a:	stos   DWORD PTR es:[rdi],eax
   14001cb4b:	fldenv [rdi]
   14001cb4d:	xchg   r8d,eax
   14001cb4f:	adc    al,0x23
   14001cb51:	push   rdi
   14001cb52:	mov    ch,0x6d
   14001cb54:	adc    DWORD PTR [rax],ebx
   14001cb56:	jae    0x14001cb6f
   14001cb58:	cld    
   14001cb59:	adc    DWORD PTR [rax-0x30cdcca2],edi
   14001cb5f:	jle    0x14001cb88
   14001cb61:	(bad)
   14001cb65:	jb     0x14001cb71
   14001cb67:	jno    0x14001cb5f
   14001cb69:	stc    
   14001cb6a:	mov    bl,0x12
   14001cb6c:	(bad)  
   14001cb6d:	mov    al,BYTE PTR [rbx-0x15ce13]
   14001cb73:	(bad)  
   14001cb74:	mov    edi,0xcfb1bf5b
   14001cb79:	ins    DWORD PTR es:[rdi],dx
   14001cb7a:	enter  0x7af5,0x51
   14001cb7e:	(bad)  
   14001cb7f:	cmp    eax,DWORD PTR [rcx-0x5ed14189]
   14001cb85:	outs   dx,DWORD PTR ds:[rsi]
   14001cb86:	xor    ah,BYTE PTR [rcx+0x7c]
   14001cb89:	test   BYTE PTR [rcx],cl
   14001cb8b:	enter  0x9fa4,0x22
   14001cb8f:	adc    eax,DWORD PTR [rsi-0x39490fe9]
   14001cb95:	sbb    bh,BYTE PTR [rsi-0x73]
   14001cb98:	ss test al,0x68
   14001cb9b:	mov    ch,0x33
   14001cb9d:	xor    eax,DWORD PTR [rbx]
   14001cb9f:	fs stos BYTE PTR es:[rdi],al
   14001cba1:	retf   0x86d2
   14001cba4:	cdq    
   14001cba5:	push   rax
   14001cba6:	(bad)  
   14001cba7:	movsxd ecx,ecx
   14001cba9:	jne    0x14001cbf2
   14001cbab:	shr    BYTE PTR [rdx],cl
   14001cbad:	push   rbx
   14001cbae:	fidiv  WORD PTR [rsi]
   14001cbb0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cbb1:	pop    rdx
   14001cbb2:	fs mov dh,0x34
   14001cbb5:	ins    BYTE PTR es:[rdi],dx
   14001cbb6:	loope  0x14001cb7b
   14001cbb8:	ja     0x14001cc1a
   14001cbba:	out    0x2d,al
   14001cbbc:	mov    edi,0x3ffecb8f
   14001cbc1:	mov    ah,0xd7
   14001cbc3:	(bad)  
   14001cbc4:	mov    eax,0xc7755be0
   14001cbc9:	jnp    0x14001cc4a
   14001cbcb:	push   0x7d9ed0f7
   14001cbd0:	(bad)  
   14001cbd1:	div    dh
   14001cbd3:	idiv   edi
   14001cbd5:	xchg   ebx,eax
   14001cbd6:	mov    edx,0x844ddfae
   14001cbdb:	std    
   14001cbdc:	jo     0x14001cc2b
   14001cbde:	imul   esi,DWORD PTR [rdi],0x4f
   14001cbe1:	cli    
   14001cbe2:	rex.WX and QWORD PTR [rsi+0x6c405e61],rdi
   14001cbe9:	(bad)  
   14001cbea:	in     eax,0x7
   14001cbec:	add    eax,eax
   14001cbee:	loope  0x14001cb83
   14001cbf0:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14001cbf2:	cs (bad) 
   14001cbf4:	xlat   BYTE PTR ds:[rbx]
   14001cbf5:	out    dx,eax
   14001cbf6:	ret    0x3f2c
   14001cbf9:	sbb    ebp,DWORD PTR [rdx]
   14001cbfb:	sub    cl,0xfe
   14001cbfe:	jb     0x14001cba1
   14001cc00:	add    eax,0x7c3a3a7b
   14001cc05:	or     al,0x58
   14001cc07:	mov    edx,0xd9c57cb0
   14001cc0c:	ins    DWORD PTR es:[rdi],dx
   14001cc0d:	push   rax
   14001cc0e:	(bad)  
   14001cc0f:	fisub  DWORD PTR [rax]
   14001cc11:	movabs ds:0xed71a2666013eb6d,eax
   14001cc1a:	(bad)  
   14001cc1b:	(bad)  
   14001cc1c:	jrcxz  0x14001cc32
   14001cc1e:	xchg   esi,eax
   14001cc1f:	pop    rdx
   14001cc20:	(bad)
   14001cc24:	(bad)  
   14001cc25:	xchg   ebx,eax
   14001cc26:	retf   
   14001cc27:	(bad)  
   14001cc28:	sub    eax,0x5abf03cf
   14001cc2d:	mov    bh,0x36
   14001cc2f:	vhaddpd xmm8,xmm0,XMMWORD PTR [rdx+0x45b0309a]
   14001cc37:	xor    dh,BYTE PTR [rsi-0x14fb9f6e]
   14001cc3d:	add    DWORD PTR [rax+0x21],eax
   14001cc40:	and    ch,BYTE PTR [rsi+rbp*4-0x1f]
   14001cc44:	(bad)  
   14001cc45:	leave  
   14001cc46:	jrcxz  0x14001cc60
   14001cc48:	mov    ebp,0xdec436ec
   14001cc4d:	add    eax,edx
   14001cc4f:	in     al,dx
   14001cc50:	rex.WB in al,dx
   14001cc52:	pushf  
   14001cc53:	cmp    DWORD PTR [rsi+0x58067fd0],ebp
   14001cc59:	pop    rbx
   14001cc5a:	xchg   edx,eax
   14001cc5b:	mov    ch,0xff
   14001cc5d:	(bad)  
   14001cc5e:	xor    DWORD PTR [rsi+0x19],ebp
   14001cc61:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001cc62:	sbb    dl,dl
   14001cc64:	(bad)  
   14001cc65:	mov    ebx,0x23c3f166
   14001cc6a:	sbb    dl,BYTE PTR [rsp+rdx*4-0x6d]
   14001cc6e:	jle    0x14001ccdc
   14001cc70:	test   eax,0xe6e8536f
   14001cc75:	repnz mov BYTE PTR [rcx+0x24eb162a],dl
   14001cc7c:	push   0x2b
   14001cc7e:	or     bl,ch
   14001cc80:	pop    rdi
   14001cc81:	xchg   esi,eax
   14001cc82:	(bad)  
   14001cc83:	shl    BYTE PTR [rdi+0x6c],cl
   14001cc86:	in     al,dx
   14001cc87:	jg     0x14001cc47
   14001cc89:	cmp    eax,0xd87188b4
   14001cc8e:	pop    rsp
   14001cc8f:	scas   ax,WORD PTR es:[rdi]
   14001cc91:	(bad)  
   14001cc92:	and    esi,DWORD PTR [rbp+0x9]
   14001cc95:	jb     0x14001cc6b
   14001cc97:	rex xchg ebx,eax
   14001cc99:	mov    ?,WORD PTR [rdi+rdi*8+0x4c]
   14001cc9d:	and    dh,BYTE PTR [rdx]
   14001cc9f:	loopne 0x14001cc70
   14001cca1:	faddp  st(5),st
   14001cca3:	ror    DWORD PTR [rsi-0x628c0d79],1
   14001cca9:	movsxd esp,DWORD PTR [rax-0x4b261cd4]
   14001ccaf:	retf   0x1908
   14001ccb2:	imul   esi,DWORD PTR [r11],0xffffffae
   14001ccb6:	and    eax,0xc51b367c
   14001ccbb:	repnz (bad) 
   14001ccbd:	call   0x1a3fb6d84
   14001ccc2:	cmp    BYTE PTR [rcx+0x64],dl
   14001ccc5:	rex.WRX movabs rbp,0x8ac8ca224204371e
   14001cccf:	sbb    BYTE PTR [rcx],ah
   14001ccd1:	xor    BYTE PTR [rdx-0x2318fa5a],dl
   14001ccd7:	adc    bl,cl
   14001ccd9:	adc    esp,DWORD PTR [rax]
   14001ccdb:	(bad)  
   14001ccdc:	(bad)  
   14001ccdd:	mov    bl,0xe7
   14001ccdf:	out    dx,al
   14001cce0:	fist   DWORD PTR [rsi]
   14001cce2:	mov    ebp,0xd8c1d723
   14001cce7:	ret    
   14001cce8:	jmp    0x14001ccd9
   14001ccea:	add    esp,ecx
   14001ccec:	movabs ds:0xb641747356f92ec8,eax
   14001ccf5:	mov    al,0xef
   14001ccf7:	mov    dl,0x2b
   14001ccf9:	jle    0x14001cd71
   14001ccfb:	(bad)  
   14001ccfc:	js     0x14001ccf6
   14001ccfe:	xchg   ebx,eax
   14001ccff:	mov    cl,0xee
   14001cd01:	cld    
   14001cd02:	add    al,0x13
   14001cd04:	in     eax,dx
   14001cd05:	outs   dx,DWORD PTR ds:[rsi]
   14001cd06:	pop    rax
   14001cd07:	xchg   edx,eax
   14001cd08:	sub    ebx,DWORD PTR [rdx]
   14001cd0a:	mov    dh,0x3f
   14001cd0c:	movabs al,ds:0x6442a4dd01268ccb
   14001cd15:	movabs ds:0xadfcb663d4d2cfec,eax
   14001cd1e:	out    dx,al
   14001cd1f:	(bad)  [rsi-0x51]
   14001cd22:	fs scas al,BYTE PTR es:[rdi]
   14001cd24:	sub    BYTE PTR [rbx+0x11],0xbf
   14001cd28:	mul    DWORD PTR [rdx+rax*2-0xbdcdb2e]
   14001cd2f:	add    al,0x88
   14001cd31:	or     edx,ecx
   14001cd33:	(bad)
   14001cd38:	call   0x137338100
   14001cd3d:	add    eax,0xffffff95
   14001cd40:	scas   al,BYTE PTR es:[rdi]
   14001cd41:	sahf   
   14001cd42:	(bad)  
   14001cd43:	xchg   esp,eax
   14001cd44:	adc    esi,DWORD PTR [rdx+0x16]
   14001cd47:	push   rdi
   14001cd48:	or     DWORD PTR [rdx+rbx*2+0x64],0x629943a4
   14001cd50:	push   rsp
   14001cd51:	or     ah,BYTE PTR [rcx+0x150dd6a7]
   14001cd57:	jns    0x14001cd3e
   14001cd59:	jbe    0x14001cd3a
   14001cd5b:	jo     0x14001cdba
   14001cd5d:	call   0xe8309a8c
   14001cd62:	xchg   ebp,eax
   14001cd63:	in     eax,dx
   14001cd64:	pop    rax
   14001cd65:	adc    BYTE PTR [rdi],0xfb
   14001cd68:	(bad)  
   14001cd69:	push   rax
   14001cd6a:	(bad)
   14001cd6e:	js     0x14001cdde
   14001cd70:	clc    
   14001cd71:	jb     0x14001cd43
   14001cd73:	out    dx,al
   14001cd74:	rex.WXB
   14001cd75:	sub    esi,r11d
   14001cd78:	fdiv   DWORD PTR [rcx]
   14001cd7a:	ja     0x14001cdd8
   14001cd7c:	(bad)  
   14001cd7d:	(bad)  
   14001cd7e:	jae    0x14001cd13
   14001cd80:	or     BYTE PTR [rbx+0xeb3404b],ch
   14001cd86:	imul   ebx,DWORD PTR [rcx+rbp*1+0x7],0xffffffb3
   14001cd8b:	adc    eax,0x47ea057d
   14001cd90:	xchg   BYTE PTR [rsi-0x7],dh
   14001cd93:	loope  0x14001cde1
   14001cd95:	cld    
   14001cd96:	movabs eax,ds:0xb8dbaadd9017e78c
   14001cd9f:	mov    ah,0x60
   14001cda1:	pop    rcx
   14001cda2:	test   al,0x49
   14001cda4:	adc    eax,0x7f5ba
   14001cda9:	push   rax
   14001cdaa:	sub    al,0xff
   14001cdac:	rex.RB scas al,BYTE PTR es:[rdi]
   14001cdae:	enter  0xc3ac,0x52
   14001cdb2:	(bad)  
   14001cdb3:	add    dh,BYTE PTR [rsi+rcx*1]
   14001cdb6:	rol    esi,0x8b
   14001cdb9:	xchg   ecx,eax
   14001cdba:	jnp    0x14001cdbc
   14001cdbc:	data16 mov bh,0xc1
   14001cdbf:	(bad)  
   14001cdc0:	fimul  WORD PTR [rdi-0x15eff0f7]
   14001cdc6:	leave  
   14001cdc7:	fadd   DWORD PTR [rbx+0x71]
   14001cdca:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cdcb:	rex.WR mov dil,0x96
   14001cdce:	jo     0x14001cd6f
   14001cdd0:	jmp    0x1011bbd08
   14001cdd5:	test   ah,0xb
   14001cdd8:	repz ret 
   14001cdda:	pop    rcx
   14001cddb:	cmp    DWORD PTR [rbp+0x64f90155],esi
   14001cde1:	jne    0x14001cdf2
   14001cde3:	movabs al,ds:0x4e0de441d5662e40
   14001cdec:	fucomp st(0)
   14001cdee:	xchg   ebp,eax
   14001cdef:	mul    DWORD PTR [rsi-0x31]
   14001cdf2:	(bad)  
   14001cdf3:	loopne 0x14001ce33
   14001cdf5:	ds stc 
   14001cdf7:	add    esp,esi
   14001cdf9:	not    DWORD PTR [rax+0x45]
   14001cdfc:	push   ax
   14001cdfe:	mov    cl,0x78
   14001ce00:	out    0xa6,al
   14001ce02:	popf   
   14001ce03:	or     DWORD PTR [rsi+rbx*2+0x5faef74],eax
   14001ce0a:	jp     0x14001cdfa
   14001ce0c:	jb     0x14001ce72
   14001ce0e:	xlat   BYTE PTR ds:[rbx]
   14001ce0f:	pushf  
   14001ce10:	or     ah,BYTE PTR [rdx-0x1e927d02]
   14001ce16:	fsub   st,st(3)
   14001ce18:	(bad)  
   14001ce19:	(bad)  
   14001ce1a:	inc    dh
   14001ce1c:	(bad)  
   14001ce1e:	outs   dx,DWORD PTR ds:[rsi]
   14001ce1f:	xor    DWORD PTR [rax-0x2ecdded4],0x4aa88a84
   14001ce29:	(bad)  
   14001ce2a:	es (bad) 
   14001ce2d:	add    DWORD PTR fs:[rbx+rbx*1+0x0],esp
   14001ce32:	mov    ebp,0x74e70673
   14001ce37:	pop    rbp
   14001ce38:	jg     0x14001cdf2
   14001ce3a:	pop    rcx
   14001ce3b:	jne    0x14001cdd6
   14001ce3d:	jmp    rbp
   14001ce3f:	(bad)  
   14001ce40:	retf   
   14001ce41:	(bad)
   14001ce45:	mov    ecx,DWORD PTR [rcx-0x56]
   14001ce48:	mov    esi,0xcd1585bb
   14001ce4d:	(bad)  
   14001ce4e:	xchg   esp,eax
   14001ce4f:	lock iret 
   14001ce51:	and    BYTE PTR [rsi],dl
   14001ce53:	rex.B jle 0x14001cdf2
   14001ce56:	or     al,BYTE PTR [rcx]
   14001ce58:	mov    ch,0x56
   14001ce5a:	fdiv   QWORD PTR [rsi+0x79]
   14001ce5d:	out    0x52,al
   14001ce5f:	add    al,0x3f
   14001ce61:	mov    bh,0x41
   14001ce63:	jge    0x14001ce1d
   14001ce65:	cmc    
   14001ce66:	ja     0x14001ce84
   14001ce68:	(bad)  
   14001ce6a:	xchg   edx,eax
   14001ce6b:	mov    ch,0x48
   14001ce6d:	jno    0x14001cebe
   14001ce6f:	(bad)
   14001ce72:	jne    0x14001ce14
   14001ce74:	std    
   14001ce75:	push   rbx
   14001ce76:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14001ce78:	lock (bad) 
   14001ce7a:	test   DWORD PTR [rdi+0x1ad9f7f3],0x63554211
   14001ce84:	jae    0x14001ceec
   14001ce86:	sbb    al,0xcf
   14001ce88:	ss sbb eax,0xd7e1f2c
   14001ce8e:	(bad)  
   14001ce8f:	ja     0x14001ceae
   14001ce91:	cmp    eax,0x32312773
   14001ce96:	xor    eax,0x71e9de86
   14001ce9b:	test   ch,ah
   14001ce9d:	jns    0x14001ce6f
   14001ce9f:	out    0xa,al
   14001cea1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001cea2:	mov    ecx,0x15606ba8
   14001cea7:	outs   dx,BYTE PTR ds:[rsi]
   14001cea8:	not    BYTE PTR [rsi]
   14001ceaa:	fist   WORD PTR [rsp]
   14001cead:	in     eax,0x57
   14001ceaf:	sub    al,BYTE PTR [rax]
   14001ceb1:	movabs eax,ds:0x73dbfa02bebb7cf1
   14001ceba:	jrcxz  0x14001cf38
   14001cebc:	leave  
   14001cebd:	in     ax,0x3
   14001cec0:	(bad)  
   14001cec1:	add    ch,BYTE PTR [rdx-0x42]
   14001cec4:	lods   eax,DWORD PTR ds:[rsi]
   14001cec5:	retf   
   14001cec6:	push   rcx
   14001cec7:	add    edi,esp
   14001cec9:	(bad)  
   14001ceca:	mov    ecx,0x5de56602
   14001cecf:	xchg   edx,eax
   14001ced0:	rep outs dx,DWORD PTR ds:[rsi]
   14001ced2:	in     eax,dx
   14001ced3:	ja     0x14001cecf
   14001ced5:	cdq    
   14001ced6:	out    0x5d,eax
   14001ced8:	sbb    BYTE PTR [rdx+0x32860f28],bl
   14001cede:	fdivr  QWORD PTR [rbx+0x75db6ac5]
   14001cee4:	sbb    ecx,edx
   14001cee6:	mov    dl,0x11
   14001cee8:	jno    0x14001ce93
   14001ceea:	(bad)  
   14001ceeb:	xchg   esp,eax
   14001ceec:	outs   dx,BYTE PTR ds:[rsi]
   14001ceed:	gs jle 0x14001cebc
   14001cef0:	(bad)
   14001cef3:	xchg   ecx,eax
   14001cef4:	test   al,0xbf
   14001cef6:	movabs al,ds:0x554e2a0d257007f2
   14001ceff:	nop
   14001cf00:	(bad)  
   14001cf01:	in     eax,0xfd
   14001cf03:	mov    eax,0x43fad4bb
   14001cf08:	movabs al,ds:0x5b3f3efec25321cd
   14001cf12:	jae    0x14001cf4e
   14001cf14:	fcmovnb st,st(4)
   14001cf16:	(bad)  
   14001cf17:	frndint 
   14001cf19:	(bad)  [rcx+0x1b]
   14001cf1c:	iret   
   14001cf1d:	mov    ebp,0x7802a51f
   14001cf22:	or     DWORD PTR [rsi+0x577d7a78],esi
   14001cf28:	jp     0x14001cf14
   14001cf2a:	fcmovnu st,st(7)
   14001cf2c:	cli    
   14001cf2d:	(bad)  
   14001cf2e:	sahf   
   14001cf2f:	ret    
   14001cf30:	xchg   DWORD PTR [rdi-0xfcfcc2d],edi
   14001cf36:	(bad)  
   14001cf37:	adc    bl,ah
   14001cf39:	jle    0x14001cef8
   14001cf3b:	rex.X xlat BYTE PTR ds:[rbx]
   14001cf3d:	movabs al,ds:0xf9159b069b45b4c
   14001cf46:	fs jrcxz 0x14001cf9c
   14001cf49:	ds fcmovnbe st,st(2)
   14001cf4c:	push   rdx
   14001cf4d:	xchg   edi,eax
   14001cf4e:	adc    BYTE PTR [rsi+rdi*2-0x36],cl
   14001cf52:	rex.WRX xor BYTE PTR [rcx-0x30],r15b
   14001cf56:	int    0x14
   14001cf58:	mov    DWORD PTR [rcx+0x65e1303e],edx
   14001cf5e:	and    eax,0x45619102
   14001cf63:	and    dl,BYTE PTR [r10-0xf]
   14001cf67:	fimul  WORD PTR [rdi+0x7]
   14001cf6a:	jb     0x14001cf71
   14001cf6c:	(bad)  
   14001cf6d:	sub    eax,0x484041c1
   14001cf72:	(bad)  
   14001cf73:	(bad)  
   14001cf74:	sti    
   14001cf75:	rex.RB push 0xffffffffffffff87
   14001cf78:	pop    rsp
   14001cf79:	mov    edi,0xe5ab24cc
   14001cf7e:	mov    al,0xc5
   14001cf80:	mov    BYTE PTR [rbx-0x13ca74a1],dl
   14001cf86:	xor    ecx,DWORD PTR [rbx+0x76ff8505]
   14001cf8c:	jle    0x14001cfc7
   14001cf8e:	xchg   edi,eax
   14001cf8f:	xor    al,0xf8
   14001cf91:	int3   
   14001cf92:	rex.WX and al,0x65
   14001cf95:	rex.RX popf 
   14001cf97:	int3   
   14001cf98:	jo     0x14001cf7e
   14001cf9a:	(bad)  
   14001cf9b:	(bad)  
   14001cf9c:	mov    BYTE PTR [rax],dl
   14001cf9e:	xlat   BYTE PTR ds:[rbx]
   14001cf9f:	push   rdi
   14001cfa0:	xor    BYTE PTR [rdx-0x1e],bh
   14001cfa3:	cmp    BYTE PTR [rsi+0x2f],al
   14001cfa6:	mov    ebx,0x4eff5505
   14001cfab:	rcr    ah,1
   14001cfad:	cmp    BYTE PTR [rsi-0x63],dh
   14001cfb0:	jle    0x14001cfc8
   14001cfb2:	ret    
   14001cfb3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001cfb4:	mov    fs,WORD PTR [rax-0x4f7ac662]
   14001cfba:	mov    dl,0x0
   14001cfbc:	rex.WRX imul r14,QWORD PTR [rax],0xffffffffffffffe5
   14001cfc0:	fs add al,0x59
   14001cfc3:	rex.WRB loop 0x14001cfc1
   14001cfc6:	ja     0x14001cf60
   14001cfc8:	xchg   ebp,eax
   14001cfc9:	add    ecx,DWORD PTR [rax+0xe]
   14001cfcc:	std    
   14001cfcd:	sub    ecx,ebp
   14001cfcf:	(bad)  
   14001cfd1:	(bad)  
   14001cfd2:	jg     0x14001cf89
   14001cfd4:	pop    rsi
   14001cfd5:	add    eax,edx
   14001cfd7:	nop
   14001cfd8:	xchg   esi,eax
   14001cfd9:	out    0xe4,al
   14001cfdb:	and    esp,DWORD PTR [rdi-0x1b]
   14001cfde:	rex.RB mov r13b,0xf8
   14001cfe1:	xchg   edx,eax
   14001cfe2:	out    dx,eax
   14001cfe3:	outs   dx,DWORD PTR ds:[rsi]
   14001cfe4:	ret    0x6e4f
   14001cfe7:	icebp  
   14001cfe8:	lods   eax,DWORD PTR ds:[rsi]
   14001cfe9:	ret    0x862f
   14001cfec:	sub    BYTE PTR [rax+0x11d6c1ca],0x8c
   14001cff3:	xchg   ecx,eax
   14001cff4:	adc    BYTE PTR [rdx+0x40],ah
   14001cff7:	mov    BYTE PTR [rdx+rbp*1-0x571b3f8],al
   14001cffe:	fwait
   14001cfff:	adc    BYTE PTR [rcx-0x7b2c4098],al
   14001d005:	(bad)  
   14001d006:	sub    al,BYTE PTR [rsp+rax*4]
   14001d009:	or     BYTE PTR [rax+rbp*1-0x6573a53c],al
   14001d010:	(bad)  
   14001d011:	or     eax,DWORD PTR [rdx]
   14001d013:	je     0x14001cf9e
   14001d015:	cs adc ah,dl
   14001d018:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d019:	rex.RXB mov cs,WORD PTR [rip+0xffffffffdd16e712]        # 0x11d18b732
   14001d020:	pop    rcx
   14001d021:	fwait
   14001d022:	mov    ch,0xe6
   14001d024:	(bad)  
   14001d025:	lock rol DWORD PTR [rbp-0x4fa39081],0xa1
   14001d02d:	sub    BYTE PTR [rcx+rdx*4-0x58],0xd
   14001d032:	retf   
   14001d033:	ins    BYTE PTR es:[rdi],dx
   14001d034:	ins    DWORD PTR es:[rdi],dx
   14001d035:	rex.B lahf 
   14001d037:	sar    DWORD PTR [eip+0xffffffff9ef96670],0x13        # 0xdefb36af
   14001d03f:	sti    
   14001d040:	imul   eax,DWORD PTR [rax+0x7b],0xffffffbe
   14001d044:	(bad)  
   14001d045:	rex.RX lods eax,DWORD PTR ds:[rsi]
   14001d047:	and    eax,0x74ef8214
   14001d04c:	out    dx,al
   14001d04d:	out    0x2f,eax
   14001d04f:	repz rex.WR retf 0x9893
   14001d054:	or     BYTE PTR [rbp+0x3715004c],al
   14001d05a:	jge    0x14001d06b
   14001d05c:	shr    BYTE PTR [rsi+0x63a0cd8f],1
   14001d062:	test   eax,0x7f18cc1
   14001d067:	retf   
   14001d068:	xor    edi,DWORD PTR [rax+rbp*8+0x689a234d]
   14001d06f:	mov    esi,0xfe7bb1f2
   14001d074:	cli    
   14001d075:	ror    edi,0x7e
   14001d078:	cli    
   14001d079:	(bad)  
   14001d07a:	xlat   BYTE PTR ds:[rbx]
   14001d07b:	push   rsi
   14001d07c:	push   rsi
   14001d07d:	inc    BYTE PTR [rdx+rax*2-0x2a54e1b8]
   14001d084:	shl    DWORD PTR [rdi+0x42],0xfe
   14001d088:	movsxd esi,esi
   14001d08a:	(bad)  
   14001d08b:	sahf   
   14001d08c:	adc    cl,BYTE PTR [rbp+rdx*4-0x71]
   14001d090:	mov    esp,0x91f37e14
   14001d095:	pop    rbp
   14001d096:	enter  0x7add,0xcb
   14001d09a:	sub    DWORD PTR [rax-0x48],0xfffffffc
   14001d09e:	pop    rbp
   14001d09f:	or     ebp,ecx
   14001d0a1:	mov    dl,0x30
   14001d0a3:	outs   dx,DWORD PTR ds:[rsi]
   14001d0a4:	test   DWORD PTR [rbp-0x22],ebp
   14001d0a7:	rex.WR
   14001d0a8:	rex.X lahf 
   14001d0aa:	pop    rdx
   14001d0ab:	cmp    esp,ebp
   14001d0ad:	(bad)  
   14001d0ae:	sbb    edx,edx
   14001d0b0:	jmp    0x1407f3ea4
   14001d0b5:	leave  
   14001d0b6:	adc    ecx,eax
   14001d0b8:	mov    ebx,0x90320a10
   14001d0bd:	jae    0x14001d0a5
   14001d0bf:	sahf   
   14001d0c0:	pop    rcx
   14001d0c1:	and    DWORD PTR [rdx-0x40475232],0x3ba4337c
   14001d0cb:	cli    
   14001d0cc:	(bad)  [rbp+0x59]
   14001d0cf:	(bad)  
   14001d0d0:	or     ch,al
   14001d0d2:	push   rbx
   14001d0d3:	popf   
   14001d0d4:	repz (bad) 
   14001d0d6:	sub    bh,ah
   14001d0d8:	add    DWORD PTR [rip+0xffffffffc7e3b301],edx        # 0x107e583df
   14001d0de:	jno    0x14001d144
   14001d0e0:	iret   
   14001d0e1:	(bad)  
   14001d0e2:	shl    al,0x1e
   14001d0e5:	(bad)  
   14001d0e6:	imul   eax,DWORD PTR [rsi],0xb147a73b
   14001d0ec:	jae    0x14001d160
   14001d0ee:	adc    al,0xd5
   14001d0f0:	mov    WORD PTR [rsi+0x54d69bea],gs
   14001d0f6:	and    DWORD PTR [rbp-0x22],esp
   14001d0f9:	mov    edx,0x50115002
   14001d0fe:	rex.XB movsxd edi,r14d
   14001d101:	sub    bh,ah
   14001d103:	in     eax,0xea
   14001d105:	mov    esi,0xf84d548e
   14001d10a:	in     eax,dx
   14001d10b:	(bad)  
   14001d10c:	adc    QWORD PTR [r9-0x441d1ec1],rax
   14001d113:	and    BYTE PTR [rbx+0x60],ah
   14001d116:	cli    
   14001d117:	fcompp 
   14001d119:	movabs al,ds:0x2db606052b23b2d2
   14001d122:	and    DWORD PTR [rsi+0x3e],edx
   14001d125:	sub    DWORD PTR [rdx],ebp
   14001d127:	xchg   esp,eax
   14001d128:	lods   eax,DWORD PTR ds:[rsi]
   14001d129:	popf   
   14001d12a:	shr    DWORD PTR [rip+0xffffffffcc40816d],cl        # 0x10c42529d
   14001d130:	pop    rsp
   14001d131:	jb     0x14001d16c
   14001d133:	cmp    DWORD PTR [rax],eax
   14001d135:	adc    bh,ah
   14001d137:	movsxd ebp,DWORD PTR [rbp+0x19]
   14001d13a:	loopne 0x14001d1a9
   14001d13c:	adc    ebp,DWORD PTR [rdi+0xbf90e04]
   14001d142:	cmp    DWORD PTR [rcx-0x4101ac73],edx
   14001d148:	push   rax
   14001d149:	sbb    ah,BYTE PTR [rip+0x4491436a]        # 0x1849314b9
   14001d14f:	push   rsi
   14001d150:	(bad)  
   14001d151:	jmp    0xd7f32d0b
   14001d156:	movabs ds:0xf5858159e0646403,eax
   14001d15f:	xchg   edi,eax
   14001d160:	shl    DWORD PTR [rdx+0x2b],cl
   14001d163:	mov    ss,WORD PTR [rdi+0x3e]
   14001d166:	jns    0x14001d0fb
   14001d168:	mov    cl,0x32
   14001d16a:	or     ah,BYTE PTR [rdx+0x4a]
   14001d16d:	stos   BYTE PTR es:[rdi],al
   14001d16e:	rex.RX mov edx,0xd8e9a7f1
   14001d174:	rex.WRB js 0x14001d180
   14001d177:	fld    QWORD PTR [rax]
   14001d179:	push   rbx
   14001d17a:	add    BYTE PTR [rbx+0x3f8e3600],bl
   14001d180:	icebp  
   14001d181:	(bad)  
   14001d182:	adc    esi,edi
   14001d184:	std    
   14001d185:	out    dx,al
   14001d186:	xchg   edi,edi
   14001d188:	out    0xc9,eax
   14001d18a:	jrcxz  0x14001d12f
   14001d18c:	mov    edi,0xc776edd8
   14001d191:	int    0x2f
   14001d193:	mov    bh,0xb2
   14001d195:	pop    rbp
   14001d196:	loope  0x14001d15f
   14001d198:	fidiv  DWORD PTR [rcx+0x5a]
   14001d19b:	sbb    eax,eax
   14001d19d:	cmp    al,0x1
   14001d19f:	pop    rdx
   14001d1a0:	outs   dx,BYTE PTR ds:[rsi]
   14001d1a1:	sub    DWORD PTR [rdx-0x3c17a323],0xffffffa2
   14001d1a8:	cmp    eax,0x6f90cc81
   14001d1ad:	adc    DWORD PTR [rbx+rcx*1-0x3b],ebx
   14001d1b1:	xchg   ebx,eax
   14001d1b2:	ds mov eax,0x98fa7f02
   14001d1b8:	pop    rbx
   14001d1b9:	stos   BYTE PTR es:[rdi],al
   14001d1ba:	mov    cl,0xbb
   14001d1bc:	or     ch,BYTE PTR [rcx]
   14001d1be:	movabs ds:0x6c9ba0eca3363901,eax
   14001d1c7:	shl    BYTE PTR [rbx+0x5c3b054e],cl
   14001d1cd:	(bad)  
   14001d1ce:	ror    DWORD PTR [rbp+0x5d],0x98
   14001d1d2:	and    DWORD PTR [rbx],0xffffffd6
   14001d1d5:	pop    rsp
   14001d1d6:	out    dx,al
   14001d1d7:	test   al,0x38
   14001d1d9:	jge    0x14001d199
   14001d1db:	(bad)  
   14001d1dc:	rex.WRB
   14001d1dd:	repz xor eax,0x4527d886
   14001d1e3:	movabs eax,ds:0x4159f5d64ee7c78
   14001d1ec:	or     BYTE PTR [rcx],ah
   14001d1ee:	push   rsi
   14001d1ef:	pop    rax
   14001d1f0:	popf   
   14001d1f1:	cmp    BYTE PTR [rcx+0x6c21eaa7],cl
   14001d1f7:	in     al,dx
   14001d1f8:	mov    edi,0x57d7116
   14001d1fd:	mov    ebp,0x3c31c733
   14001d202:	jge    0x14001d206
   14001d204:	cmp    eax,0x9710a733
   14001d209:	out    0x81,eax
   14001d20b:	int    0x15
   14001d20d:	pop    rcx
   14001d20e:	pop    rbp
   14001d20f:	cwde   
   14001d210:	sub    al,0xad
   14001d212:	rex.WX sub al,0xb5
   14001d215:	nop
   14001d216:	jnp    0x14001d204
   14001d218:	stos   DWORD PTR es:[rdi],eax
   14001d219:	sti    
   14001d21a:	or     BYTE PTR [rdx+0x48fffa91],cl
   14001d220:	fsub   st,st(2)
   14001d222:	neg    ebx
   14001d224:	mov    ch,0xa8
   14001d226:	add    eax,0x46781525
   14001d22b:	cs in  al,dx
   14001d22d:	mov    cl,0x31
   14001d22f:	fs fcmovne st,st(7)
   14001d232:	rex.RXB (bad) 
   14001d234:	pop    rbp
   14001d235:	add    al,0xa
   14001d237:	and    eax,0x64679062
   14001d23c:	loope  0x14001d1fb
   14001d23e:	push   rsi
   14001d23f:	or     BYTE PTR [rcx-0x747f2c70],dl
   14001d245:	and    al,0x99
   14001d247:	ss jl  0x14001d2b0
   14001d24a:	mov    cl,0xd4
   14001d24c:	es rex.R not spl
   14001d250:	pop    rsp
   14001d251:	stc    
   14001d252:	sub    cl,BYTE PTR [rdi+0x53]
   14001d255:	rex.RX movsxd r9d,DWORD PTR [rdx]
   14001d258:	out    dx,al
   14001d259:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d25a:	ins    DWORD PTR es:[rdi],dx
   14001d25b:	outs   dx,BYTE PTR ds:[rsi]
   14001d25c:	repnz fadd QWORD PTR [rax]
   14001d25f:	int3   
   14001d260:	sbb    dl,BYTE PTR [rdi-0xc37a2f7]
   14001d266:	mov    edx,?
   14001d268:	pop    rax
   14001d269:	out    0xdf,eax
   14001d26b:	push   0x4a
   14001d26d:	mov    dh,0x9
   14001d26f:	jp     0x14001d25c
   14001d271:	(bad)  
   14001d272:	pop    rcx
   14001d273:	or     eax,0x37e6b38
   14001d278:	stc    
   14001d279:	xor    eax,0x64885202
   14001d27e:	sub    eax,0x99b945d0
   14001d283:	jne    0x14001d24e
   14001d285:	mul    ebp
   14001d287:	and    DWORD PTR [rcx+0x1d],ecx
   14001d28a:	jmp    FWORD PTR [rip+0x5db2580]        # 0x145dcf810
   14001d290:	mov    dl,0xe3
   14001d292:	ret    
   14001d293:	stos   BYTE PTR es:[rdi],al
   14001d294:	sub    bl,bh
   14001d296:	cs jrcxz 0x14001d26e
   14001d299:	mov    ebx,0x17752391
   14001d29e:	push   rsp
   14001d29f:	clc    
   14001d2a0:	sub    DWORD PTR [rip+0x1ac0000a],0xdcafd580        # 0x15ac1d2b4
   14001d2aa:	sti    
   14001d2ab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d2ac:	(bad)  
   14001d2ad:	jnp    0x14001d2a9
   14001d2af:	fcmovnu st,st(7)
   14001d2b1:	cli    
   14001d2b2:	icebp  
   14001d2b3:	cmc    
   14001d2b4:	mov    ch,0xd5
   14001d2b6:	iret   
   14001d2b7:	(bad)  [rbx-0x4f466c31]
   14001d2bd:	ret    0xa7f6
   14001d2c0:	(bad)  
   14001d2c1:	(bad)  
   14001d2c2:	mov    ch,0x5c
   14001d2c4:	(bad)  
   14001d2c5:	imul   eax,ebp,0xc2853765
   14001d2cb:	mov    dl,0x93
   14001d2cd:	in     eax,0xb
   14001d2cf:	fs lahf 
   14001d2d1:	fstp   st(3)
   14001d2d3:	rex.XB stc 
   14001d2d5:	jae    0x14001d2a1
   14001d2d7:	in     al,dx
   14001d2d8:	ds (bad) 
   14001d2da:	mov    edi,0x3790d7cd
   14001d2df:	loop   0x14001d345
   14001d2e1:	rex.W int3 
   14001d2e3:	add    eax,0x99ee0dc
   14001d2e8:	mov    dh,0xfd
   14001d2ea:	ds (bad) 
   14001d2ec:	mov    ebx,eax
   14001d2ee:	mov    ebx,0x5e873383
   14001d2f3:	jbe    0x14001d303
   14001d2f5:	cmp    DWORD PTR [rbx+0x6d],0xd27da32e
   14001d2fc:	push   rdx
   14001d2fd:	mov    ah,0xd1
   14001d2ff:	push   rdx
   14001d300:	(bad)  
   14001d301:	and    eax,0x9a5805c1
   14001d306:	imul   ecx,DWORD PTR [rbx],0x420000e2
   14001d30c:	mov    WORD PTR [rax+0xb],cs
   14001d30f:	xor    edi,DWORD PTR [rax+0x66]
   14001d312:	imul   ebx,DWORD PTR [rip+0x5abc97f3],0x29c2fb60        # 0x19abe6b0f
   14001d31c:	or     al,0xcf
   14001d31e:	sahf   
   14001d31f:	rex fild WORD PTR [rsi+0x663b3b]
   14001d326:	add    BYTE PTR [rax],ah
   14001d328:	add    BYTE PTR [rcx+0x44],cl
   14001d32b:	push   r12
   14001d32d:	hlt    
   14001d32e:	rex.WB jmp 0x142b39321
   14001d334:	out    0x4d,al
   14001d336:	stc    
   14001d337:	cdq    
   14001d338:	ds int3 
   14001d33a:	nop
   14001d33b:	enter  0xf87b,0x57
   14001d33f:	sub    DWORD PTR [rdi],ebp
   14001d341:	out    dx,al
   14001d342:	rcr    DWORD PTR [rdx-0x22],1
   14001d345:	mov    esi,DWORD PTR [rdx-0x2523d57f]
   14001d34b:	ins    BYTE PTR es:[rdi],dx
   14001d34c:	ins    DWORD PTR es:[rdi],dx
   14001d34d:	hlt    
   14001d34e:	cmp    cl,BYTE PTR [rcx*4-0x4efbe94b]
   14001d355:	out    0x4c,eax
   14001d357:	fcmovbe st,st(3)
   14001d359:	mov    edi,0xfa809850
   14001d35e:	icebp  
   14001d35f:	xchg   esp,eax
   14001d360:	xchg   ebp,eax
   14001d361:	test   BYTE PTR [rcx],dh
   14001d363:	(bad)  
   14001d365:	rex.WR cld 
   14001d367:	pop    rsp
   14001d368:	scas   al,BYTE PTR es:[rdi]
   14001d369:	sub    eax,0x9c50ada9
   14001d36e:	cdq    
   14001d36f:	iret   
   14001d370:	xchg   ah,al
   14001d372:	(bad)  
   14001d373:	out    dx,eax
   14001d374:	(bad)  
   14001d375:	sub    al,0x23
   14001d377:	rex.RXB jns 0x14001d350
   14001d37a:	stc    
   14001d37b:	push   rbx
   14001d37c:	mov    ah,0xac
   14001d37e:	(bad)  
   14001d37f:	push   0xffffffffffffff9f
   14001d381:	retf   
   14001d382:	movabs eax,ds:0x18c56fb6986eda7d
   14001d38b:	xchg   edx,eax
   14001d38c:	pop    rbp
   14001d38d:	or     eax,0x1181fad0
   14001d392:	jl     0x14001d3b5
   14001d394:	xchg   ebx,eax
   14001d395:	iret   
   14001d396:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d397:	ror    ah,0xb
   14001d39a:	mov    dh,0x67
   14001d39c:	loopne 0x14001d36d
   14001d39e:	scas   al,BYTE PTR es:[rdi]
   14001d39f:	push   rbp
   14001d3a0:	(bad)  
   14001d3a1:	and    edi,edx
   14001d3a3:	rex.WRXB and QWORD PTR [r15+0x78],r14
   14001d3a7:	idiv   bl
   14001d3a9:	xor    ah,ah
   14001d3ab:	mov    edx,0x4fcbd6ed
   14001d3b0:	or     BYTE PTR [rbx-0x64210e44],al
   14001d3b6:	xor    edi,ebx
   14001d3b8:	xchg   DWORD PTR [rsi],esi
   14001d3ba:	lahf   
   14001d3bb:	jnp    0x14001d37e
   14001d3bd:	mov    dh,0x88
   14001d3bf:	sub    DWORD PTR [rdi-0x43992849],0x19
   14001d3c6:	add    BYTE PTR [rdi-0x73],cl
   14001d3c9:	(bad)  
   14001d3ca:	(bad)  
   14001d3cb:	mov    ?,WORD PTR [rdi]
   14001d3cd:	std    
   14001d3ce:	in     al,0xa7
   14001d3d0:	neg    DWORD PTR [rsi+0x76]
   14001d3d3:	fnstenv [rdx-0x59]
   14001d3d6:	scas   eax,DWORD PTR es:[rdi]
   14001d3d7:	call   QWORD PTR [rsi]
   14001d3d9:	and    ch,dl
   14001d3db:	fadd   DWORD PTR [rbp+0x2e0307b5]
   14001d3e1:	imul   edx,esi,0xcc8dab82
   14001d3e7:	fiadd  DWORD PTR [rbx]
   14001d3e9:	pop    rax
   14001d3ea:	rex.RX (bad) 
   14001d3ec:	pop    rdx
   14001d3ed:	ds mov edi,0x9d24eaee
   14001d3f3:	fwait
   14001d3f4:	push   rbp
   14001d3f5:	jge    0x14001d40b
   14001d3f7:	ins    BYTE PTR es:[rdi],dx
   14001d3f8:	pop    rcx
   14001d3f9:	xchg   BYTE PTR [rsi],dl
   14001d3fb:	ret    
   14001d3fc:	and    eax,0xfa28a429
   14001d401:	xchg   ecx,ebx
   14001d403:	mov    esp,0xdf2fd6c8
   14001d408:	push   rsp
   14001d409:	rex.W
   14001d40a:	or     BYTE PTR ss:[rsp+rcx*2+0x18],bl
   14001d40f:	icebp  
   14001d410:	dec    DWORD PTR [rbp+0x41]
   14001d413:	or     DWORD PTR [rdi+0x20],esp
   14001d416:	sbb    eax,0x97681973
   14001d41b:	jbe    0x14001d407
   14001d41d:	ja     0x14001d40f
   14001d41f:	imul   edx,DWORD PTR [rcx-0x5b],0xffffffe4
   14001d423:	(bad)  
   14001d424:	fist   DWORD PTR [rcx+rax*2-0x1fde7a2]
   14001d42b:	mov    ebx,0x49010042
   14001d430:	(bad)  
   14001d431:	ficomp DWORD PTR [rdi+rax*8-0x4f]
   14001d435:	icebp  
   14001d436:	adc    edi,DWORD PTR [rax]
   14001d438:	mov    dh,0xff
   14001d43a:	xor    eax,0xa043fd88
   14001d43f:	test   DWORD PTR [rcx],ecx
   14001d441:	or     al,0x4f
   14001d443:	cmp    al,0x87
   14001d445:	xchg   ecx,eax
   14001d446:	mov    DWORD PTR [rbx+0x409f4ce8],esp
   14001d44c:	pop    rsp
   14001d44d:	(bad)  
   14001d44e:	add    edi,DWORD PTR [rdx-0x366c0767]
   14001d454:	sbb    eax,0x7508150
   14001d459:	movabs al,ds:0x4242b6dd249a84e6
   14001d462:	rex.RB lods al,BYTE PTR ds:[rsi]
   14001d464:	jne    0x14001d465
   14001d466:	sbb    DWORD PTR [rdi],ebp
   14001d468:	(bad)  
   14001d469:	and    dl,BYTE PTR [rax-0x34]
   14001d46c:	or     esi,DWORD PTR [rsi+0x20]
   14001d46f:	rex.W cmp al,0x5a
   14001d472:	repnz xchg ebp,eax
   14001d474:	jb     0x14001d4de
   14001d476:	(bad)  
   14001d477:	stos   BYTE PTR es:[rdi],al
   14001d478:	movabs al,ds:0x25927bfca46f0a78
   14001d481:	mov    edi,0x52f9bbc
   14001d486:	rex.WRB not QWORD PTR [rip+0xffffffffcb123e7f]        # 0x10b14130c
   14001d48d:	xchg   edx,eax
   14001d48e:	(bad)  
   14001d48f:	rex.R loop 0x14001d471
   14001d492:	xchg   DWORD PTR [rsp+rax*2-0x144b53a8],edi
   14001d499:	jo     0x14001d49b
   14001d49b:	push   0xffffffffffffff8a
   14001d49d:	stc    
   14001d49e:	repz pop rax
   14001d4a0:	in     al,dx
   14001d4a1:	imul   ebp,DWORD PTR [rdi+0x200df5a3],0x29
   14001d4a8:	loope  0x14001d438
   14001d4aa:	add    BYTE PTR [rbp+0x55],al
   14001d4ad:	xor    al,BYTE PTR [rbp+0x77]
   14001d4b0:	and    DWORD PTR [rcx+0x45ac54aa],edx
   14001d4b6:	and    bh,dl
   14001d4b8:	in     al,0xbc
   14001d4ba:	mov    ebp,DWORD PTR [rcx]
   14001d4bc:	repz cmp al,0x7d
   14001d4bf:	jl     0x14001d537
   14001d4c1:	outs   dx,DWORD PTR ds:[rsi]
   14001d4c2:	push   rbx
   14001d4c3:	rex.WRX
   14001d4c4:	test   DWORD PTR ss:[rcx+0x294d961],ebx
   14001d4cb:	out    dx,al
   14001d4cc:	hlt    
   14001d4cd:	xchg   DWORD PTR [rsi],ebx
   14001d4cf:	mov    dh,0x82
   14001d4d1:	iret   
   14001d4d2:	xor    ebp,DWORD PTR [rdx]
   14001d4d4:	and    al,0x85
   14001d4d6:	adc    esi,DWORD PTR [rdi+rax*1+0x6c04ee69]
   14001d4dd:	cwde   
   14001d4de:	ret    
   14001d4df:	retf   
   14001d4e0:	xlat   BYTE PTR ds:[rbx]
   14001d4e1:	mov    bl,0x6a
   14001d4e3:	shl    edi,1
   14001d4e5:	pop    rcx
   14001d4e6:	mov    ecx,0x84c24af9
   14001d4eb:	pushf  
   14001d4ec:	pop    rcx
   14001d4ed:	rex.WX cmp rbx,rdx
   14001d4f0:	push   rsp
   14001d4f1:	and    bl,BYTE PTR [rdx+0x5a4ae469]
   14001d4f7:	stc    
   14001d4f8:	(bad)  
   14001d4f9:	(bad)  
   14001d4fa:	jo     0x14001d4dc
   14001d4fc:	sbb    DWORD PTR [rax-0x37],ebx
   14001d4ff:	int    0xc1
   14001d501:	xlat   BYTE PTR ds:[rbx]
   14001d502:	add    esp,ebx
   14001d504:	psrad  mm0,QWORD PTR [rdx+0x6c]
   14001d508:	(bad)  
   14001d509:	jge    0x14001d540
   14001d50b:	enter  0x6048,0x1d
   14001d50f:	mov    al,BYTE PTR [rsi+rdx*4]
   14001d512:	out    0xe7,eax
   14001d514:	(bad)  
   14001d515:	notrack call QWORD PTR [rcx+0x4e7ffc3f]
   14001d51c:	cmp    al,0xf9
   14001d51e:	clc    
   14001d51f:	rex.WRXB ins BYTE PTR es:[rdi],dx
   14001d521:	outs   dx,BYTE PTR ds:[rsi]
   14001d522:	outs   dx,BYTE PTR ds:[rsi]
   14001d523:	ds xchg esp,eax
   14001d525:	pop    rax
   14001d526:	push   rbx
   14001d527:	imul   ebx,DWORD PTR [rcx-0x5f],0x25d7e73c
   14001d52e:	sti    
   14001d52f:	xchg   ecx,eax
   14001d530:	ins    DWORD PTR es:[rdi],dx
   14001d531:	cmp    DWORD PTR [rax+rcx*1],0xbe68ba6b
   14001d538:	mov    esi,0x7e13364d
   14001d53d:	fistp  WORD PTR [rdi+0x6185cb5]
   14001d543:	xchg   ebx,eax
   14001d544:	jae    0x14001d4d2
   14001d546:	pop    rbp
   14001d547:	(bad)  
   14001d548:	sub    BYTE PTR [rbx],ch
   14001d54a:	pmaddwd mm1,QWORD PTR [rcx+0x58]
   14001d54e:	sahf   
   14001d54f:	mov    edi,0xa8c87c3e
   14001d554:	test   al,0x75
   14001d556:	xor    BYTE PTR [rbp+0x75c38603],al
   14001d55c:	jae    0x14001d531
   14001d55e:	xchg   edx,eax
   14001d55f:	mov    edx,0xaeb54109
   14001d564:	sub    DWORD PTR [esi],edx
   14001d567:	sbb    edx,DWORD PTR [rbx+0x53b41455]
   14001d56d:	pop    rax
   14001d56e:	imul   ecx,ebx,0x1570c28b
   14001d574:	(bad)  
   14001d575:	xchg   edx,eax
   14001d576:	mul    DWORD PTR [rcx-0x214a8c0e]
   14001d57c:	xchg   ebx,eax
   14001d57d:	(bad)  
   14001d57e:	(bad)  
   14001d57f:	jo     0x14001d5e5
   14001d581:	call   0xfda359b8
   14001d586:	shr    dl,0x3c
   14001d589:	cli    
   14001d58a:	addr32 (bad) 
   14001d58c:	xor    BYTE PTR [rbx+rsi*2],dh
   14001d58f:	sbb    al,0x9d
   14001d591:	jmp    0x14b4d5e69
   14001d596:	and    BYTE PTR [rbp-0x8],cl
   14001d599:	jno    0x14001d5b3
   14001d59b:	int    0x1
   14001d59d:	adc    DWORD PTR [rdx+rbp*1+0xa9fa74a],eax
   14001d5a4:	nop
   14001d5a5:	je     0x14001d606
   14001d5a7:	or     eax,0x63b445fb
   14001d5ac:	inc    BYTE PTR [rcx+0x33]
   14001d5af:	rol    DWORD PTR [rdx+0x52b35b3d],cl
   14001d5b5:	mov    WORD PTR [rsi-0x2e],ss
   14001d5b8:	(bad)  
   14001d5bc:	sub    bl,al
   14001d5be:	(bad)  
   14001d5bf:	cmp    BYTE PTR [rsi+0x6e],0x96
   14001d5c3:	(bad)  
   14001d5c4:	test   al,0xf0
   14001d5c6:	stos   DWORD PTR es:[rdi],eax
   14001d5c7:	(bad)  
   14001d5c8:	sub    al,0xcf
   14001d5ca:	rex.RX add eax,0x2d63c2d0
   14001d5d0:	or     BYTE PTR [rbx-0x71aea60b],bh
   14001d5d6:	sub    cl,al
   14001d5d8:	jae    0x14001d56f
   14001d5da:	rex.B
   14001d5db:	repnz sbb BYTE PTR [rsi-0x5f0367b5],bh
   14001d5e2:	gs (bad) 
   14001d5e4:	in     eax,dx
   14001d5e5:	and    ch,ah
   14001d5e7:	mov    bl,0xec
   14001d5e9:	(bad)  
   14001d5ea:	shl    al,0x8c
   14001d5ed:	or     DWORD PTR [rax-0x7664fcb3],ebx
   14001d5f3:	pushf  
   14001d5f4:	sub    BYTE PTR [rbx],bl
   14001d5f6:	or     ah,BYTE PTR [rax]
   14001d5f8:	push   rdi
   14001d5f9:	cli    
   14001d5fa:	stc    
   14001d5fb:	test   eax,0x3f2cf9c8
   14001d600:	xchg   ebp,eax
   14001d601:	pop    rsi
   14001d602:	mov    edx,DWORD PTR [rsi]
   14001d604:	pop    rcx
   14001d605:	(bad)  
   14001d606:	cmc    
   14001d607:	pslld  mm6,QWORD PTR [rax+0x58]
   14001d60b:	xchg   ebx,eax
   14001d60c:	in     eax,0xed
   14001d60e:	jnp    0x14001d5b9
   14001d610:	(bad)  
   14001d611:	sub    al,0xc6
   14001d613:	(bad)  
   14001d614:	(bad)  
   14001d615:	mov    ebx,0x6e5ef27a
   14001d61a:	xor    al,0x14
   14001d61c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d61d:	cmc    
   14001d61e:	cmp    ebp,eax
   14001d620:	in     al,dx
   14001d621:	retf   
   14001d622:	xchg   ecx,eax
   14001d623:	or     DWORD PTR [rdx],ebp
   14001d625:	int    0xc8
   14001d627:	add    al,0x81
   14001d629:	ret    0x5e01
   14001d62c:	jg     0x14001d64d
   14001d62e:	mov    al,dh
   14001d630:	rex.WRX movabs rax,0x44da283f8c45b80
   14001d63a:	or     eax,esi
   14001d63c:	cdq    
   14001d63d:	inc    dh
   14001d63f:	lahf   
   14001d640:	jns    0x14001d63c
   14001d642:	(bad)  
   14001d643:	in     al,dx
   14001d644:	jmp    0x17ef0263a
   14001d649:	je     0x14001d6b4
   14001d64b:	outs   dx,DWORD PTR ds:[rsi]
   14001d64c:	(bad)  
   14001d64d:	jmp    0x168e2172e
   14001d652:	(bad)  
   14001d653:	sbb    dl,cl
   14001d655:	and    DWORD PTR [rdx+0x5b],esi
   14001d658:	lahf   
   14001d659:	push   rbx
   14001d65a:	jns    0x14001d60f
   14001d65c:	ins    DWORD PTR es:[rdi],dx
   14001d65d:	xor    al,0x8b
   14001d65f:	retf   0x89a4
   14001d662:	adc    al,0x66
   14001d664:	gs ins DWORD PTR es:[rdi],dx
   14001d666:	adc    dl,BYTE PTR [rax+0x12b2e26a]
   14001d66c:	test   ch,bh
   14001d66e:	movabs al,ds:0xb132975830ab6eb0
   14001d677:	(bad)  
   14001d679:	(bad)  
   14001d67a:	cmp    DWORD PTR [rbx],edx
   14001d67c:	jp     0x14001d682
   14001d67e:	push   rbp
   14001d67f:	(bad)  
   14001d680:	(bad)  
   14001d681:	clc    
   14001d682:	xor    al,0xb
   14001d684:	(bad)  
   14001d685:	pop    rbx
   14001d686:	(bad)  
   14001d687:	rex.RX jle 0x14001d62c
   14001d68a:	or     DWORD PTR [rdx+0x3ca70288],esp
   14001d690:	imul   ebx,DWORD PTR [rip+0x1655ead2],0x8bc3c833        # 0x15657c16c
   14001d69a:	es xor ah,ch
   14001d69d:	ja     0x14001d6f1
   14001d69f:	or     BYTE PTR [rsi-0x757ce7a3],al
   14001d6a5:	mov    edx,0x160218ef
   14001d6aa:	rex.WRXB (bad) 
   14001d6ac:	(bad)
   14001d6af:	(bad)  
   14001d6b0:	out    0xc1,al
   14001d6b2:	jmp    0x14001d634
   14001d6b4:	int    0x35
   14001d6b6:	je     0x14001d65e
   14001d6b8:	rex.RXB mov r9b,0xe7
   14001d6bb:	hlt    
   14001d6bc:	jae    0x14001d6d6
   14001d6be:	cwde   
   14001d6bf:	sbb    BYTE PTR [rbp+0x35],al
   14001d6c2:	(bad)  
   14001d6c3:	xor    DWORD PTR [rax-0x532b774e],0xc4cb3241
   14001d6cd:	xchg   edx,eax
   14001d6ce:	rex.R enter 0x3e8a,0x15
   14001d6d3:	pop    rcx
   14001d6d4:	cdq    
   14001d6d5:	(bad)  
   14001d6d6:	movabs eax,ds:0x81dd403a8cfcb326
   14001d6df:	ret    0x7fa
   14001d6e2:	imul   ebp,eax,0x1
   14001d6e5:	(bad)  
   14001d6e6:	addr32 or eax,0x823a05b0
   14001d6ec:	and    eax,DWORD PTR [rbx]
   14001d6ee:	(bad)
   14001d6f2:	pop    rsi
   14001d6f3:	rex.XB add spl,BYTE PTR [r8]
   14001d6f6:	gs not ebp
   14001d6f9:	ret    0x4507
   14001d6fc:	add    esi,edx
   14001d6fe:	push   rcx
   14001d6ff:	sub    BYTE PTR [rdx-0x194ad8fb],ch
   14001d705:	mov    ecx,0x9448ffb
   14001d70a:	test   ch,bh
   14001d70c:	xlat   BYTE PTR ds:[rbx]
   14001d70d:	mov    BYTE PTR [rax-0x78],al
   14001d710:	scas   al,BYTE PTR es:[rdi]
   14001d711:	jo     0x14001d775
   14001d713:	push   rsp
   14001d714:	hlt    
   14001d715:	movabs al,ds:0x92a86ae619410011
   14001d71e:	lock js 0x14001d6dc
   14001d721:	movabs ds:0xa3c8e113f6dffb00,al
   14001d72a:	stos   BYTE PTR es:[rdi],al
   14001d72b:	test   eax,0x2b8e1ed1
   14001d730:	xchg   esp,eax
   14001d731:	xor    BYTE PTR [rdi+0x6f8d9c0c],dl
   14001d737:	rcr    DWORD PTR [rsi+0x26b5fc8a],1
   14001d73d:	sub    BYTE PTR [rcx-0x16],bl
   14001d740:	(bad)  
   14001d741:	xor    al,0x92
   14001d743:	(bad)  
   14001d744:	and    al,0x40
   14001d746:	rex.WR
   14001d747:	repz fsubr QWORD PTR [rcx]
   14001d74a:	or     DWORD PTR [rdx+0x62b386e2],ecx
   14001d750:	sar    DWORD PTR [rsi+0x15ef3e80],1
   14001d756:	adc    ebx,ebp
   14001d758:	in     al,0x75
   14001d75a:	push   rsp
   14001d75b:	jmp    0x14001d722
   14001d75d:	rex.W sub BYTE PTR [rcx-0x60fe6ac0],cl
   14001d764:	in     al,dx
   14001d765:	pop    rsp
   14001d766:	sub    BYTE PTR [rbx],ah
   14001d768:	rex.X in al,0xb4
   14001d76b:	addr32 (bad) 
   14001d76d:	jne    0x14001d76e
   14001d76f:	repnz fwait
   14001d771:	sbb    BYTE PTR [rcx+0x14605c3],bl
   14001d777:	pop    rcx
   14001d778:	fwait
   14001d779:	rex.W sahf 
   14001d77b:	mov    cl,0x2
   14001d77d:	(bad)  
   14001d77e:	je     0x14001d7a1
   14001d780:	pushf  
   14001d781:	and    BYTE PTR [rbx+0x63d1a981],0xd3
   14001d788:	lahf   
   14001d789:	std    
   14001d78a:	sbb    edi,0xfffffff9
   14001d78d:	lea    ebp,[rcx+0x32ffa3b1]
   14001d793:	xor    eax,0x285da8cd
   14001d798:	ror    eax,0x30
   14001d79b:	mov    bl,0xb8
   14001d79d:	in     al,0x37
   14001d79f:	outs   dx,DWORD PTR ds:[rsi]
   14001d7a0:	not    bl
   14001d7a2:	push   rdi
   14001d7a3:	(bad)  
   14001d7a5:	mov    DWORD PTR [rbp-0x7cdbe9ae],edx
   14001d7ab:	enter  0x7129,0xe1
   14001d7af:	pop    rax
   14001d7b0:	rcr    DWORD PTR [rsi],0x8d
   14001d7b3:	and    ecx,DWORD PTR [rip+0x50000be7]        # 0x19001e3a0
   14001d7b9:	xchg   ebx,eax
   14001d7ba:	cld    
   14001d7bb:	jl     0x14001d773
   14001d7bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d7be:	mov    dil,0x4
   14001d7c1:	scas   eax,DWORD PTR es:[rdi]
   14001d7c2:	sbb    DWORD PTR [rax-0x32],eax
   14001d7c5:	sub    BYTE PTR [rsp+rbx*4],cl
   14001d7c8:	and    DWORD PTR [rip+0x621b6120],edi        # 0x1a21d38ee
   14001d7ce:	rex.WB int 0x15
   14001d7d1:	xchg   esp,eax
   14001d7d2:	(bad)  
   14001d7d3:	lods   eax,DWORD PTR ds:[rsi]
   14001d7d4:	loop   0x14001d7ed
   14001d7d6:	sbb    eax,DWORD PTR [rcx-0x2e]
   14001d7d9:	adc    DWORD PTR [rip+0x190adfcf],ebp        # 0x1590cb7ae
   14001d7df:	sbb    DWORD PTR [rdx],edi
   14001d7e1:	sbb    DWORD PTR [rax+0x69],0x9b42344f
   14001d7e8:	xchg   DWORD PTR [rax-0x3d4ef042],eax
   14001d7ee:	fcmovbe st,st(4)
   14001d7f0:	rex.WB cmp al,0xb1
   14001d7f3:	(bad)  
   14001d7f4:	(bad)  
   14001d7f5:	jmp    0x10504cdda
   14001d7fa:	(bad)  
   14001d7fb:	es mov al,0x6b
   14001d7fe:	cli    
   14001d7ff:	cmp    BYTE PTR [rsi],al
   14001d801:	data16 (bad) 
   14001d803:	push   rcx
   14001d804:	int    0x4f
   14001d806:	and    ebp,DWORD PTR [rsi+0x893812e]
   14001d80c:	mov    edi,0x8b16a4c
   14001d811:	adc    eax,0x12f8b691
   14001d816:	loope  0x14001d7a7
   14001d818:	pop    rdx
   14001d819:	jrcxz  0x14001d84a
   14001d81b:	add    eax,0x9cd8f240
   14001d820:	and    eax,0xe7b3c0d2
   14001d825:	rex.WXB test al,0xd5
   14001d828:	(bad)  
   14001d829:	or     dh,BYTE PTR [rbx-0x53]
   14001d82c:	lea    esi,[rdi-0x20]
   14001d82f:	(bad)  
   14001d830:	(bad)  
   14001d831:	loopne 0x14001d85f
   14001d833:	pop    rsp
   14001d834:	shr    DWORD PTR [rax+rdi*2-0x130a934],0xf7
   14001d83c:	lods   al,BYTE PTR ds:[rsi]
   14001d83d:	(bad)  
   14001d83e:	sub    al,dl
   14001d840:	mov    ebp,DWORD PTR [rdx+0x42160850]
   14001d846:	test   bl,bh
   14001d848:	(bad)
   14001d84b:	rcr    DWORD PTR [rax],0x32
   14001d84e:	shr    ebx,1
   14001d850:	(bad)  
   14001d851:	bnd jl 0x14001d858
   14001d854:	sub    bh,BYTE PTR [rsi]
   14001d856:	hlt    
   14001d857:	rol    BYTE PTR [rbp-0x52],1
   14001d85a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d85b:	xor    bl,al
   14001d85d:	(bad)  
   14001d85e:	iret   
   14001d85f:	sar    DWORD PTR [rdi],1
   14001d861:	hlt    
   14001d862:	xlat   BYTE PTR ds:[rbx]
   14001d863:	pop    rcx
   14001d864:	lock rex.WXB not QWORD PTR [r10-0x41b23fed]
   14001d86c:	pop    rsi
   14001d86d:	sti    
   14001d86e:	rex.XB jno 0x14001d879
   14001d871:	cmp    DWORD PTR [rdx-0x57c69ac3],esi
   14001d877:	sub    DWORD PTR [rdx],esp
   14001d879:	mov    bh,0x4c
   14001d87b:	sahf   
   14001d87c:	adc    DWORD PTR [rax],ecx
   14001d87e:	pop    QWORD PTR [rcx+rbx*8-0xd4d46f3]
   14001d885:	mov    cl,0x2f
   14001d887:	iret   
   14001d888:	xchg   edi,eax
   14001d889:	out    dx,eax
   14001d88a:	fwait
   14001d88b:	or     BYTE PTR [rdx-0x79a5ea64],bl
   14001d891:	int    0xef
   14001d893:	(bad)  
   14001d894:	lahf   
   14001d895:	sub    edi,DWORD PTR [rcx+0x11c7b391]
   14001d89b:	add    BYTE PTR [rbx],0x37
   14001d89e:	icebp  
   14001d89f:	fcomp  QWORD PTR [rbp+0x2e3bf428]
   14001d8a5:	rcl    dh,1
   14001d8a7:	ds push rax
   14001d8a9:	pop    rbx
   14001d8aa:	or     DWORD PTR [rsi+rbp*1+0x55803ac1],edx
   14001d8b1:	add    BYTE PTR [rbx-0x700c00a1],ch
   14001d8b7:	fdivrp st(7),st
   14001d8b9:	(bad)  
   14001d8ba:	std    
   14001d8bb:	pop    rdi
   14001d8bc:	sti    
   14001d8bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d8be:	sbb    ebp,DWORD PTR [rbx-0xe9a8055]
   14001d8c4:	cmc    
   14001d8c5:	(bad)  
   14001d8c6:	pop    rsp
   14001d8c7:	and    BYTE PTR [rax+0x479f7775],bh
   14001d8cd:	movabs eax,ds:0x1b50fdc00b331a1
   14001d8d6:	or     BYTE PTR [rsi],ah
   14001d8d8:	cmp    edx,0x466f16c3
   14001d8de:	cdq    
   14001d8df:	gs rex.RB
   14001d8e1:	rex.WX movabs rcx,0x4daae02e8b21609f
   14001d8eb:	sub    eax,0x42f94fee
   14001d8f0:	repnz icebp 
   14001d8f2:	pop    rdx
   14001d8f3:	push   rdi
   14001d8f4:	lods   eax,DWORD PTR ds:[rsi]
   14001d8f5:	xchg   esi,eax
   14001d8f6:	sahf   
   14001d8f7:	xchg   ebx,eax
   14001d8f8:	or     al,BYTE PTR [rdi-0x6e067ff4]
   14001d8fe:	ins    BYTE PTR es:[rdi],dx
   14001d8ff:	push   rsi
   14001d900:	pop    rsp
   14001d901:	scas   al,BYTE PTR es:[rdi]
   14001d902:	mov    edx,0xa3ec4098
   14001d907:	rex.RX cli 
   14001d909:	jbe    0x14001d8d6
   14001d90b:	cwde   
   14001d90c:	mov    dh,0x14
   14001d90e:	push   rsp
   14001d90f:	test   al,0x6a
   14001d911:	xor    al,0xb3
   14001d913:	adc    edi,DWORD PTR [rax+0x66]
   14001d916:	jp     0x14001d926
   14001d918:	mov    bl,0x87
   14001d91a:	outs   dx,BYTE PTR ds:[rsi]
   14001d91b:	rex push rbp
   14001d91d:	jne    0x14001d8af
   14001d91f:	xchg   esi,eax
   14001d920:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d921:	xor    BYTE PTR [rbx+rsi*2],dh
   14001d924:	or     al,0x3b
   14001d926:	addr32 rex.WRX mov al,ds:0x5c449b9e
   14001d92d:	xchg   ecx,eax
   14001d92e:	rex.X (bad) 
   14001d930:	movabs al,ds:0xfee24047fad43d70
   14001d939:	(bad)  
   14001d93a:	(bad)  
   14001d93b:	repnz icebp 
   14001d93d:	(bad)  
   14001d93e:	mov    edi,0x9bf0b21
   14001d943:	jo     0x14001d9b0
   14001d945:	and    ah,BYTE PTR [rdx+0x2ca46b8]
   14001d94b:	pop    rdx
   14001d94c:	pop    rsp
   14001d94d:	stos   BYTE PTR es:[rdi],al
   14001d94e:	out    dx,eax
   14001d94f:	push   0x6ce19fc2
   14001d954:	test   ch,0x43
   14001d957:	enter  0x6ff7,0x28
   14001d95b:	rex.XB jle 0x14001d988
   14001d95e:	mov    al,ch
   14001d960:	pop    rdx
   14001d961:	jae    0x14001d9d0
   14001d963:	sub    eax,0x5732ca2a
   14001d968:	mov    WORD PTR [rbx+0x21],es
   14001d96b:	mov    ch,ah
   14001d96d:	and    BYTE PTR [rdx+0x2fa18b5d],dl
   14001d973:	jmp    FWORD PTR [rdx]
   14001d975:	mov    ebx,0x10edbc04
   14001d97a:	rex.RB pushf 
   14001d97c:	(bad)  
   14001d97d:	in     eax,dx
   14001d97e:	loope  0x14001d936
   14001d980:	sti    
   14001d981:	outs   dx,BYTE PTR ds:[rsi]
   14001d982:	rex.WRXB add r14,QWORD PTR [r14-0x10281e79]
   14001d989:	cmp    ebx,ebx
   14001d98b:	cwde   
   14001d98c:	sti    
   14001d98d:	adc    eax,0x6ad52170
   14001d992:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d993:	int    0x2d
   14001d995:	sub    bl,dl
   14001d997:	ds leave 
   14001d999:	mov    edx,0xc7615125
   14001d99e:	mov    dl,0xea
   14001d9a0:	shr    BYTE PTR [rbx-0x3956182c],cl
   14001d9a6:	je     0xd41517fc
   14001d9ac:	neg    DWORD PTR [rdi-0x13fbfe51]
   14001d9b2:	rol    esi,0xf
   14001d9b5:	movabs ds:0x16ebdf827ad7bc5d,eax
   14001d9be:	mov    bh,0x7d
   14001d9c0:	shl    BYTE PTR [rsi+0x9],cl
   14001d9c3:	in     al,dx
   14001d9c4:	cli    
   14001d9c5:	(bad)
   14001d9c9:	rex.WRX sahf 
   14001d9cb:	pop    rax
   14001d9cc:	cmp    dl,dh
   14001d9ce:	lock sbb DWORD PTR [rdi+0x55e57fdd],0xfffffff3
   14001d9d6:	popf   
   14001d9d7:	fidivr WORD PTR [rsi-0x48576665]
   14001d9dd:	mov    ah,0x8b
   14001d9df:	jle    0x14001d9d2
   14001d9e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d9e2:	rex.WB
   14001d9e3:	rex.R shl spl,1
   14001d9e6:	pop    rdi
   14001d9e7:	adc    eax,0xfe189b4c
   14001d9ec:	sbb    esi,edx
   14001d9ee:	je     0x14001d98a
   14001d9f0:	(bad)  
   14001d9f1:	sub    BYTE PTR [rdx],dh
   14001d9f3:	in     eax,0xd4
   14001d9f5:	(bad)  
   14001d9f6:	rex or edx,eax
   14001d9f9:	push   rsp
   14001d9fa:	movabs ds:0x900dd07580184309,al
   14001da03:	cld    
   14001da04:	mov    WORD PTR [rsi+0x33],es
   14001da07:	fisub  DWORD PTR [rdx-0x77a3e97b]
   14001da0d:	in     eax,0xb7
   14001da0f:	xor    eax,0x2162d7d4
   14001da14:	adc    cl,BYTE PTR [rcx+0x57]
   14001da17:	(bad)  
   14001da18:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001da19:	jb     0x14001da41
   14001da1b:	mov    ecx,0x6301b779
   14001da20:	test   BYTE PTR [rdi+rbx*8+0x18],ah
   14001da24:	(bad)  
   14001da25:	loope  0x14001da37
   14001da27:	add    BYTE PTR [rsi-0x52efbfb9],dl
   14001da2d:	(bad)  
   14001da2e:	test   DWORD PTR [rax+0x9],ecx
   14001da31:	movabs eax,ds:0x86313d1c19c581aa
   14001da3a:	mov    cl,0x4b
   14001da3c:	pop    rsi
   14001da3d:	mov    edi,DWORD PTR [rdx+0x60]
   14001da40:	(bad)  
   14001da41:	shr    dl,cl
   14001da43:	sbb    al,0x6
   14001da45:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001da46:	mov    fs,WORD PTR [rdx-0x31]
   14001da49:	test   eax,0x753bd0e7
   14001da4e:	adc    dl,ch
   14001da50:	fcom   QWORD PTR [rdx+rax*8]
   14001da53:	fisub  DWORD PTR [rdx-0xd2f06cc]
   14001da59:	xor    ebx,DWORD PTR [rcx-0x2c]
   14001da5c:	and    esp,DWORD PTR [rax+0x45fc4ca6]
   14001da62:	add    ch,BYTE PTR [rdx+0x6a]
   14001da65:	xchg   esp,eax
   14001da66:	(bad)  
   14001da67:	shr    BYTE PTR [rax],1
   14001da69:	add    ch,ah
   14001da6b:	xchg   ebp,eax
   14001da6c:	jge    0x14001da11
   14001da6e:	rex.B jg 0x14001d9f4
   14001da71:	xchg   esp,eax
   14001da72:	shr    DWORD PTR [rsi+rsi*4+0x73b57842],1
   14001da79:	xchg   ecx,eax
   14001da7a:	mov    dl,0x60
   14001da7c:	mov    ebx,0xfdac8ee5
   14001da81:	(bad)  
   14001da82:	test   al,0x15
   14001da84:	fisubr WORD PTR [rdx+0x35]
   14001da87:	not    ah
   14001da89:	or     DWORD PTR [rsi],ebp
   14001da8b:	mov    al,0x3e
   14001da8d:	out    dx,eax
   14001da8e:	(bad)  
   14001da8f:	(bad)  
   14001da90:	test   esp,eax
   14001da92:	(bad)  
   14001da93:	pop    rax
   14001da94:	mov    edx,0x3ff05a8a
   14001da99:	test   al,ah
   14001da9b:	test   BYTE PTR [rdx+0x55],ah
   14001da9e:	or     DWORD PTR [rcx],edi
   14001daa0:	sbb    DWORD PTR [rbx-0x69977360],eax
   14001daa6:	shl    dl,cl
   14001daa8:	or     DWORD PTR [rdx],eax
   14001daaa:	test   BYTE PTR [rsp+rcx*1],al
   14001daad:	stos   BYTE PTR es:[rdi],al
   14001daae:	test   DWORD PTR [rax-0xa],ecx
   14001dab1:	(bad)  
   14001dab2:	(bad)  
   14001dab3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dab4:	test   eax,esi
   14001dab6:	adc    eax,0x6d19396
   14001dabb:	xchg   ecx,eax
   14001dabc:	push   0xb
   14001dabe:	in     al,0x35
   14001dac0:	ins    BYTE PTR es:[rdi],dx
   14001dac1:	pop    rdi
   14001dac2:	fwait
   14001dac3:	addr32 jns 0x14001daed
   14001dac6:	and    eax,DWORD PTR [rcx]
   14001dac8:	int    0x1c
   14001daca:	xor    BYTE PTR [rbx-0x5aa8f1e5],dl
   14001dad0:	or     esi,ecx
   14001dad2:	and    eax,0x2c001af8
   14001dad7:	enter  0x55,0xb
   14001dadb:	cmp    ecx,eax
   14001dadd:	int    0xc5
   14001dadf:	mov    ah,0xf0
   14001dae1:	jg     0x14001da9f
   14001dae3:	sub    BYTE PTR [rsp+rsi*4],ch
   14001dae6:	scas   al,BYTE PTR es:[rdi]
   14001dae7:	int    0x39
   14001dae9:	(bad)  
   14001daea:	(bad)  
   14001daeb:	cmp    ah,al
   14001daed:	jnp    0x14001dab9
   14001daef:	fs rex.B
   14001daf1:	rex.X loopne 0x14001daa8
   14001daf4:	out    0x1a,eax
   14001daf6:	pop    rdx
   14001daf7:	stc    
   14001daf8:	int3   
   14001daf9:	xchg   edi,eax
   14001dafa:	mov    al,0x67
   14001dafc:	add    ah,BYTE PTR [rsi+0x21]
   14001daff:	sbb    BYTE PTR cs:[rbx],0x70
   14001db03:	jbe    0x14001db2d
   14001db05:	jno    0x14001db6d
   14001db07:	xor    al,0xe0
   14001db09:	movabs eax,ds:0x8f93fe5fcb34d4c2
   14001db12:	cld    
   14001db13:	(bad)  
   14001db14:	fcom   DWORD PTR [rbx-0x391b0271]
   14001db1a:	cli    
   14001db1b:	(bad)  
   14001db1c:	mov    bh,0x45
   14001db1e:	jne    0x14001db06
   14001db20:	or     eax,DWORD PTR [rsi]
   14001db22:	or     dh,BYTE PTR [rsi]
   14001db24:	shl    DWORD PTR [rsi],cl
   14001db26:	and    eax,DWORD PTR [rip+0xffffffff876554b7]        # 0xc7672fe3
   14001db2c:	pop    rdi
   14001db2d:	push   rbx
   14001db2e:	es fs sub ax,0xa144
   14001db34:	add    cl,BYTE PTR [rax+rax*4-0x7c]
   14001db38:	(bad)  
   14001db39:	sub    DWORD PTR [rdi+0x11e7ad7],esp
   14001db3f:	mov    bl,0xc2
   14001db41:	jl     0x14001dbbc
   14001db43:	sub    eax,0xc63b4ffc
   14001db48:	outs   dx,DWORD PTR ds:[rsi]
   14001db49:	ret    0x96f
   14001db4c:	push   r9
   14001db4e:	iret   
   14001db4f:	push   rsp
   14001db50:	ss and ecx,ebp
   14001db53:	leave  
   14001db54:	shr    ch,0xdf
   14001db57:	ins    BYTE PTR es:[rdi],dx
   14001db58:	push   rbx
   14001db59:	mov    ch,0xbc
   14001db5b:	rex.RB or eax,0x835a49eb
   14001db61:	(bad)  
   14001db62:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001db63:	retf   0xd62
   14001db66:	pop    rdx
   14001db67:	pop    rbp
   14001db68:	sar    al,0xd8
   14001db6b:	mov    bl,0x38
   14001db6d:	mov    edx,0xa1c43af7
   14001db72:	add    esp,eax
   14001db74:	lea    eax,[rbp-0xc]
   14001db77:	int3   
   14001db78:	sahf   
   14001db79:	ror    al,0xd4
   14001db7c:	xor    esp,esi
   14001db7e:	int    0x9e
   14001db80:	rex.RX pop rsp
   14001db82:	pushf  
   14001db83:	pop    r8
   14001db85:	pop    rbx
   14001db86:	add    ah,BYTE PTR [rdi+0x1de69075]
   14001db8c:	adc    bl,ch
   14001db8e:	adc    dl,dl
   14001db90:	nop
   14001db91:	test   BYTE PTR [rdi-0x552dad6],bl
   14001db97:	mov    bl,0x1a
   14001db99:	jg     0x14001db69
   14001db9b:	jle    0x14001db55
   14001db9d:	repnz movabs al,ds:0x2753612d85686a23
   14001dba8:	sub    esp,DWORD PTR [rcx-0x227ff74]
   14001dbae:	mov    dl,0x36
   14001dbb0:	mov    esp,0xd903842c
   14001dbb5:	sub    dl,BYTE PTR [rdx+0x24b9f4fa]
   14001dbbb:	mov    eax,0x62841640
   14001dbc0:	mov    ch,0x9c
   14001dbc2:	nop
   14001dbc3:	(bad)  
   14001dbc4:	sbb    ecx,DWORD PTR [rax]
   14001dbc6:	gs call 0x12537d29f
   14001dbcc:	(bad)  
   14001dbcd:	call   0x19bdd007f
   14001dbd2:	(bad)  
   14001dbd4:	stos   DWORD PTR es:[rdi],eax
   14001dbd5:	xor    eax,0xb6168ad9
   14001dbda:	pop    rdx
   14001dbdb:	(bad)  
   14001dbdc:	(bad)  
   14001dbdd:	imul   DWORD PTR [rbp+0x9]
   14001dbe0:	(bad)  
   14001dbe1:	outs   dx,BYTE PTR ds:[rsi]
   14001dbe2:	mov    ebp,0xf927bdb9
   14001dbe7:	(bad)  
   14001dbe9:	add    ebx,edi
   14001dbeb:	(bad)  
   14001dbec:	rex.WXB icebp 
   14001dbee:	cli    
   14001dbef:	or     eax,0xfd4b05c8
   14001dbf4:	test   dh,bl
   14001dbf6:	adc    BYTE PTR [rbx+rsi*2-0x77370810],dl
   14001dbfd:	xchg   DWORD PTR [rsp+rax*1-0x4],ebx
   14001dc01:	add    esp,DWORD PTR [rdx]
   14001dc03:	fwait
   14001dc04:	adc    ebp,esp
   14001dc06:	rex.RB fldenv [r13-0x54c70070]
   14001dc0d:	or     BYTE PTR [rcx+rbp*4-0x2d],ch
   14001dc11:	loopne 0x14001dc30
   14001dc13:	xlat   BYTE PTR ds:[rbx]
   14001dc14:	icebp  
   14001dc15:	loop   0x14001dc92
   14001dc17:	jno    0x14001db9a
   14001dc19:	push   rbx
   14001dc1a:	xor    DWORD PTR [rdi+0x3b728023],0x3b
   14001dc21:	rex.B push 0xfffffffffa7cffa5
   14001dc27:	mov    ecx,0x4c2f4f67
   14001dc2c:	rex.WRB jl 0x14001dca9
   14001dc2f:	in     al,0xe0
   14001dc31:	and    eax,0x77dbdd55
   14001dc36:	and    ecx,DWORD PTR [rax-0x56]
   14001dc39:	call   FWORD PTR [rbx-0x66]
   14001dc3c:	push   rdi
   14001dc3d:	xor    eax,0xa5fb4e69
   14001dc42:	pushf  
   14001dc43:	cmp    edi,DWORD PTR [rsi-0x594a9c9b]
   14001dc49:	rex.WRX
   14001dc4a:	lock cdq 
   14001dc4c:	push   rbp
   14001dc4d:	rex.WRX pop rsi
   14001dc4f:	add    ebp,eax
   14001dc51:	sbb    bl,dh
   14001dc53:	mov    edx,0x84306b1
   14001dc58:	add    BYTE PTR [rdx],dl
   14001dc5a:	add    eax,0xb68829af
   14001dc5f:	pop    rax
   14001dc60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001dc61:	(bad)  
   14001dc62:	mov    dl,0xa1
   14001dc64:	mov    DWORD PTR [rdx+0x18831fc5],ebx
   14001dc6a:	ins    DWORD PTR es:[rdi],dx
   14001dc6b:	add    al,0x24
   14001dc6d:	adc    DWORD PTR [rax+rax*8],edi
   14001dc70:	sub    eax,0x33835b8
   14001dc75:	mov    dl,0x62
   14001dc77:	xchg   edx,eax
   14001dc78:	loope  0x14001dcc2
   14001dc7a:	(bad)  
   14001dc7b:	mov    ecx,0xe797f7c8
   14001dc80:	sub    eax,0x38003239
   14001dc85:	add    al,0x54
   14001dc87:	fnsave [rip+0x18fb3f4c]        # 0x158fd1bd9
   14001dc8d:	sahf   
   14001dc8e:	sbb    BYTE PTR [rcx+0x3affb402],bh
   14001dc94:	test   ch,cl
   14001dc96:	adc    eax,0x7638ecd0
   14001dc9b:	rex.WRXB
   14001dc9c:	xchg   DWORD PTR ds:[rbp+0x67a8a313],ebx
   14001dca3:	rex.WRXB and r13,QWORD PTR [r14]
   14001dca6:	(bad)  
   14001dca7:	add    ebx,ebp
   14001dca9:	gs cmp eax,0xfd25267
   14001dcaf:	test   al,0x10
   14001dcb1:	push   rax
   14001dcb2:	(bad)  
   14001dcb3:	rex.X lods eax,DWORD PTR ds:[rsi]
   14001dcb5:	popf   
   14001dcb6:	jle    0x14001dc5c
   14001dcb8:	(bad)  
   14001dcb9:	jg     0x14001dd2d
   14001dcbb:	and    eax,0x53b6c550
   14001dcc0:	push   0x39023be1
   14001dcc5:	mov    DWORD PTR [rsi],edx
   14001dcc7:	cwde   
   14001dcc8:	jl     0x14001dc53
   14001dcca:	scas   eax,DWORD PTR es:[rdi]
   14001dccb:	movabs al,ds:0x288ad0c028163656
   14001dcd4:	adc    BYTE PTR [rbp-0xa57ce3c],dh
   14001dcda:	cmovp  ecx,esi
   14001dcdd:	sbb    ecx,edi
   14001dcdf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dce0:	movabs eax,ds:0xd4e53aadced2523b
   14001dce9:	pop    rdi
   14001dcea:	xor    dh,BYTE PTR [rax+riz*1]
   14001dced:	(bad)  
   14001dcee:	mov    eax,0xdefc410a
   14001dcf3:	add    dh,BYTE PTR [rcx]
   14001dcf5:	rex.R mov ebp,0x9d032336
   14001dcfb:	sbb    esi,DWORD PTR [rax]
   14001dcfd:	retf   
   14001dcfe:	(bad)  
   14001dcff:	int3   
   14001dd00:	loop   0x14001dccd
   14001dd02:	vpmulhw xmm2,xmm8,xmm7
   14001dd06:	es xchg ah,ah
   14001dd09:	mov    DWORD PTR [rbx],ecx
   14001dd0b:	push   rax
   14001dd0c:	xor    al,0x20
   14001dd0e:	xlat   BYTE PTR ds:[rbx]
   14001dd0f:	ficom  DWORD PTR [rsi-0x25]
   14001dd12:	ss jg  0x14001dd1f
   14001dd15:	stos   DWORD PTR es:[rdi],eax
   14001dd16:	out    dx,al
   14001dd17:	pop    rdi
   14001dd18:	adc    eax,0x3146c7da
   14001dd1d:	xor    edx,esi
   14001dd1f:	cmp    ah,BYTE PTR [rsi-0x66df1b1c]
   14001dd25:	(bad)  
   14001dd26:	(bad)  
   14001dd27:	xor    dl,al
   14001dd29:	and    eax,0xce4190c1
   14001dd2e:	out    0x6f,eax
   14001dd30:	adc    DWORD PTR [rax-0x1b8943ac],eax
   14001dd36:	(bad)  
   14001dd37:	xchg   ecx,eax
   14001dd38:	cs jne 0x14001dd72
   14001dd3b:	or     eax,esp
   14001dd3d:	fwait
   14001dd3e:	movabs ds:0x50061d22b2e51906,eax
   14001dd47:	xor    DWORD PTR [rdi+0x4e],0x51
   14001dd4b:	iret   
   14001dd4c:	lahf   
   14001dd4d:	(bad)  
   14001dd4e:	mov    eax,DWORD PTR [rcx-0x3741d814]
   14001dd54:	(bad)  
   14001dd55:	loopne 0x14001ddca
   14001dd57:	sub    eax,DWORD PTR [rax]
   14001dd59:	fcmovne st,st(6)
   14001dd5b:	(bad)  
   14001dd5c:	and    eax,0x65780048
   14001dd61:	jle    0x14001ddd1
   14001dd63:	std    
   14001dd64:	call   0x1bd7fed2c
   14001dd69:	clc    
   14001dd6a:	loopne 0x14001dd2d
   14001dd6c:	(bad)  
   14001dd6d:	jnp    0x14001dd75
   14001dd6f:	jbe    0x14001dd2d
   14001dd71:	mov    es,WORD PTR [rdx+0x18]
   14001dd74:	icebp  
   14001dd75:	(bad)  
   14001dd76:	or     ebp,edx
   14001dd78:	lods   al,BYTE PTR ds:[rsi]
   14001dd79:	lock mov edi,?
   14001dd7c:	or     al,0x7b
   14001dd7e:	mov    al,cl
   14001dd80:	(bad)  
   14001dd81:	xchg   bl,bh
   14001dd83:	or     DWORD PTR [r14],r14d
   14001dd86:	test   al,0x7a
   14001dd88:	out    0x29,eax
   14001dd8a:	jns    0x14001dda2
   14001dd8c:	movabs ds:0x685f79c4c9172659,al
   14001dd95:	rcl    DWORD PTR [rdx],cl
   14001dd97:	add    al,BYTE PTR [rdx+0x12]
   14001dd9a:	repnz (bad) 
   14001dd9c:	cdq    
   14001dd9d:	push   rbp
   14001dd9e:	movabs ds:0x6397a9cb61d46c5c,al
   14001dda7:	rex.R xor al,0x6a
   14001ddaa:	fnstenv [rbp+riz*4-0x6fe5cde7]
   14001ddb1:	leave  
   14001ddb2:	xchg   ebx,eax
   14001ddb3:	repnz mov ebp,0xa181ee14
   14001ddb9:	push   rax
   14001ddba:	jo     0x14001dd5a
   14001ddbc:	push   0xffffffffa021657e
   14001ddc1:	(bad)  
   14001ddc2:	(bad)  
   14001ddc3:	rcl    BYTE PTR [rbx-0x14e1df1],cl
   14001ddc9:	std    
   14001ddca:	call   0x1822f5bed
   14001ddcf:	fiadd  DWORD PTR [rdi+rbp*1]
   14001ddd2:	rex.WR (bad) 
   14001ddd4:	push   0x4d7608ea
   14001ddd9:	sbb    al,0x45
   14001dddb:	addr32 jp 0x14001ddfa
   14001ddde:	jno    0x14001de41
   14001dde0:	(bad)  
   14001dde1:	(bad)  
   14001dde2:	jae    0x14001dded
   14001dde4:	pushf  
   14001dde5:	mov    edx,0xdf54b0
   14001ddea:	movabs al,ds:0x84fdb960af9dc926
   14001ddf3:	or     cl,BYTE PTR [rbp+0x5d81fa64]
   14001ddf9:	clc    
   14001ddfa:	fstp   QWORD PTR [rsp+rax*1]
   14001ddfd:	push   0xffffffffef9c8db3
   14001de02:	rex.WRXB xchg r8,rax
   14001de04:	adc    eax,0xe58d0081
   14001de09:	xor    esi,DWORD PTR [rsp+rax*2-0x582ecd69]
   14001de10:	in     eax,dx
   14001de11:	scas   eax,DWORD PTR es:[rdi]
   14001de12:	add    ecx,eax
   14001de14:	rcr    DWORD PTR [rax+0x850ff43],0x3e
   14001de1b:	xchg   ecx,eax
   14001de1c:	xchg   eax,esi
   14001de1e:	(bad)  
   14001de1f:	test   BYTE PTR [rax+0x54cc26fa],dh
   14001de25:	(bad)  
   14001de26:	dec    DWORD PTR [rbx]
   14001de28:	(bad)  
   14001de29:	rcr    DWORD PTR [rdi+rax*1-0x71],0xff
   14001de2e:	(bad)  
   14001de2f:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001de31:	rex.WX and rax,rsp
   14001de34:	ror    ch,cl
   14001de36:	adc    BYTE PTR [rax-0x1b],cl
   14001de39:	xchg   esi,eax
   14001de3a:	rcl    DWORD PTR [rax+0x45],cl
   14001de3d:	sar    DWORD PTR [rax],0xa
   14001de40:	ja     0x14001dde8
   14001de42:	or     dl,al
   14001de44:	sub    eax,0xa172616c
   14001de49:	ret    0x6e2
   14001de4c:	movabs ds:0xe62e5f1a56fa0a4d,al
   14001de55:	movabs al,ds:0x43970dc104571c59
   14001de5e:	stc    
   14001de5f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001de60:	and    DWORD PTR [rbp-0x32],eax
   14001de63:	enter  0x5596,0x1
   14001de67:	pop    rax
   14001de68:	xor    al,0x80
   14001de6a:	xchg   ebx,eax
   14001de6b:	sub    al,BYTE PTR [rdx]
   14001de6d:	lea    edx,[rdx-0x7]
   14001de70:	out    0x7a,eax
   14001de72:	cmp    al,0x99
   14001de74:	pop    rbx
   14001de75:	out    0xf9,al
   14001de77:	(bad)  
   14001de78:	push   rdx
   14001de79:	loopne 0x14001dead
   14001de7b:	movabs eax,ds:0xfb84277e860b806e
   14001de84:	mov    esi,0xcafdd091
   14001de89:	(bad)  
   14001de8a:	mov    cl,0xef
   14001de8c:	sub    BYTE PTR [rsi],ch
   14001de8e:	push   rax
   14001de8f:	xor    al,0xe0
   14001de91:	stc    
   14001de92:	sub    DWORD PTR [rax],eax
   14001de94:	loopne 0x14001df12
   14001de96:	push   0xffffffffc9f00180
   14001de9b:	(bad)  
   14001de9c:	(bad)  
   14001de9d:	(bad)  
   14001de9e:	fidiv  DWORD PTR [rbx+rdi*4-0x61]
   14001dea2:	fstp   TBYTE PTR [rcx-0x45612099]
   14001dea8:	sar    DWORD PTR [rcx-0x6b],cl
   14001deab:	sub    esi,DWORD PTR [rdi]
   14001dead:	mov    ebp,0x63a5f241
   14001deb2:	mov    ecx,0x1284d650
   14001deb7:	xchg   DWORD PTR [rdi-0x695e06a],edx
   14001debd:	sub    eax,0x58c540b2
   14001dec2:	cdq    
   14001dec3:	ret    0x8130
   14001dec6:	and    al,0x48
   14001dec8:	call   0xf4add58f
   14001decd:	fistp  WORD PTR [rsi+0x50]
   14001ded0:	jmp    0xf5d13439
   14001ded5:	repnz add ch,BYTE PTR [rdi+riz*4+0x10379a0d]
   14001dedd:	xchg   ecx,eax
   14001dede:	test   DWORD PTR [rbx-0x6c],ebx
   14001dee1:	mov    bh,0x76
   14001dee3:	add    DWORD PTR [rdx+0x23],esp
   14001dee6:	or     al,0x49
   14001dee8:	movabs eax,ds:0xb3b9ca6e6c2044bf
   14001def1:	out    0x36,al
   14001def3:	and    dh,BYTE PTR [rcx]
   14001def5:	add    bl,BYTE PTR [rax+0x7e]
   14001def8:	out    0x61,al
   14001defa:	cmp    al,0x19
   14001defc:	cli    
   14001defd:	mov    cl,0x76
   14001deff:	vpsubsb ymm14,ymm10,YMMWORD PTR [rax]
   14001df03:	movabs ds:0x73d863d31d8d34bb,eax
   14001df0c:	cli    
   14001df0d:	pop    rcx
   14001df0e:	hlt    
   14001df0f:	rex.WRX lahf 
   14001df11:	rex.X pushf 
   14001df13:	lahf   
   14001df14:	rex.X pop rsp
   14001df16:	(bad)  
   14001df17:	mov    edi,0xe58e525f
   14001df1c:	jle    0x14001df48
   14001df1e:	adc    BYTE PTR [rdx-0x5843daf0],ch
   14001df24:	lods   al,BYTE PTR ds:[rsi]
   14001df25:	jg     0x14001deb4
   14001df27:	(bad)  
   14001df28:	ror    edx,1
   14001df2a:	jle    0x14001df2f
   14001df2c:	push   rsp
   14001df2d:	adc    DWORD PTR [rax+rbp*2+0x6d],esp
   14001df31:	and    DWORD PTR [rdi-0x5a017f00],edi
   14001df37:	mov    edi,0x2103afef
   14001df3c:	jb     0x14001df07
   14001df3e:	(bad)  
   14001df3f:	(bad)  
   14001df40:	ds mov esp,0xd108520a
   14001df46:	adc    ecx,DWORD PTR [rax+0x430a85a2]
   14001df4c:	data16 cld 
   14001df4e:	movsxd ecx,eax
   14001df50:	(bad)  
   14001df51:	lahf   
   14001df52:	rex.X pop rcx
   14001df54:	call   0x163fa389c
   14001df59:	and    DWORD PTR [rax-0x73aafd90],edx
   14001df5f:	sahf   
   14001df60:	rex.R push rsp
   14001df62:	test   eax,0x27df022
   14001df67:	and    DWORD PTR [rsi+0x78],eax
   14001df6a:	jg     0x14001df2e
   14001df6c:	(bad)  
   14001df6d:	(bad)  
   14001df6e:	mov    ebp,0x84168022
   14001df73:	(bad)  
   14001df74:	movabs eax,ds:0xe52c9d50f16d1a85
   14001df7d:	jg     0x14001df18
   14001df7f:	push   rax
   14001df80:	cs ds retf 
   14001df83:	(bad)  
   14001df84:	fbld   TBYTE PTR [rsi+0xb]
   14001df87:	gs rex.W scas al,BYTE PTR es:[rdi]
   14001df8a:	rex.X
   14001df8b:	rex.WRXB
   14001df8c:	pushw  0x21
   14001df8f:	add    eax,0x9bdec13f
   14001df94:	sti    
   14001df95:	ret    
   14001df96:	and    al,0xab
   14001df98:	mov    gs,ecx
   14001df9a:	fdiv   QWORD PTR [rbx+0x57]
   14001df9d:	(bad)  
   14001df9e:	pop    rdi
   14001df9f:	sub    ebp,DWORD PTR [edi]
   14001dfa2:	shr    DWORD PTR [rbp+0x38c05a88],cl
   14001dfa8:	add    dh,dl
   14001dfaa:	jrcxz  0x14001dfc1
   14001dfac:	jns    0x14001dfbc
   14001dfae:	in     eax,0xc5
   14001dfb0:	cdq    
   14001dfb1:	rex.WR clc 
   14001dfb3:	test   ebx,ebx
   14001dfb5:	jg     0x14001dfe9
   14001dfb7:	xchg   ebx,eax
   14001dfb8:	jnp    0x14001df73
   14001dfba:	imul   ebp,esi,0x429f43a1
   14001dfc0:	outs   dx,BYTE PTR ds:[rsi]
   14001dfc1:	adc    dl,BYTE PTR [rdx+0x60051e5e]
   14001dfc7:	fstp   TBYTE PTR [rcx+0x3b9e4209]
   14001dfcd:	xor    eax,0x3be474be
   14001dfd2:	(bad)  
   14001dfd4:	outs   dx,BYTE PTR ds:[rsi]
   14001dfd5:	fist   WORD PTR [rbp+0x57]
   14001dfd8:	iret   
   14001dfd9:	push   rsi
   14001dfda:	cmp    eax,0x310baf7d
   14001dfdf:	hlt    
   14001dfe0:	rex.WXB ror QWORD PTR [r8-0xfebfd1b],1
   14001dfe7:	lea    esi,[rbx+0x54]
   14001dfea:	rcr    BYTE PTR [rdx+0x5735ba36],0x46
   14001dff1:	and    eax,0x96ab0ba7
   14001dff6:	rex.RXB (bad) 
   14001dff8:	and    di,ax
   14001dffb:	or     BYTE PTR [rcx+0xb],bl
   14001dffe:	add    DWORD PTR [rax-0x12bec93b],edx
   14001e004:	rex.B xlat BYTE PTR ds:[rbx]
   14001e006:	add    DWORD PTR [rsi+0x4ed5b929],ebp
   14001e00c:	add    BYTE PTR [rdx],ah
   14001e00e:	(bad)  
   14001e00f:	(bad)  
   14001e010:	stc    
   14001e011:	add    DWORD PTR [rdi],esp
   14001e013:	adc    eax,0xf6538a05
   14001e018:	(bad)  
   14001e019:	push   rsp
   14001e01a:	jae    0x14001e063
   14001e01c:	mov    edi,0x8052380b
   14001e021:	jle    0x14001dfc2
   14001e023:	sbb    DWORD PTR [rbx+0x23f5e840],0x95c9e18f
   14001e02d:	or     eax,0x3b7d5c2c
   14001e032:	(bad)  
   14001e033:	mov    edx,0xd3cb9b0f
   14001e038:	call   0xfd9019d8
   14001e03d:	adc    ecx,edi
   14001e03f:	movabs ds:0xeae224dce238e27f,al
   14001e048:	add    dl,al
   14001e04a:	lods   al,BYTE PTR ds:[rsi]
   14001e04b:	xor    DWORD PTR [rcx+rdi*4+0x75fe31a7],0xffffff88
   14001e053:	test   al,0xc1
   14001e055:	test   al,0x74
   14001e057:	rex.WB mov r8b,0x8a
   14001e05a:	adc    esp,DWORD PTR [rdx-0x20]
   14001e05d:	push   rsi
   14001e05e:	xchg   ebp,eax
   14001e05f:	pop    rdi
   14001e060:	add    eax,0x2ef3fb8
   14001e065:	add    al,0x12
   14001e067:	rex.WXB sbb al,BYTE PTR [r10]
   14001e06a:	movabs ds:0xc877f7cd4404fdf9,al
   14001e073:	scas   eax,DWORD PTR es:[rdi]
   14001e074:	add    dl,BYTE PTR [rdx]
   14001e076:	rex.XB add BYTE PTR [r13-0x6a],al
   14001e07a:	jge    0x14001e071
   14001e07c:	cmp    BYTE PTR [rbp+0xa441216],dl
   14001e082:	movabs ds:0xfe0dfdc5bef88a00,al
   14001e08b:	(bad)  
   14001e08c:	cwde   
   14001e08d:	mov    DWORD PTR [rsi],edi
   14001e08f:	rex.WB adc cl,r10b
   14001e092:	or     ah,BYTE PTR [rcx]
   14001e094:	add    al,0x53
   14001e096:	or     al,0xd1
   14001e098:	xchg   ebp,eax
   14001e099:	mov    WORD PTR [rax],fs
   14001e09b:	add    al,0x6d
   14001e09d:	or     edx,DWORD PTR [rsi]
   14001e09f:	sub    eax,0x35f640c7
   14001e0a4:	in     al,0xc1
   14001e0a6:	rex.RX
   14001e0a7:	data16 rex.R
   14001e0a9:	repnz adc BYTE PTR [rbx-0x6f79d607],bl
   14001e0b0:	vpavgb ymm11,ymm11,YMMWORD PTR [rdi+rax*1+0xbb13590]
   14001e0b9:	mov    ch,0xa1
   14001e0bb:	mov    DWORD PTR [rdx+0x485d9603],eax
   14001e0c1:	(bad)  
   14001e0c2:	pushf  
   14001e0c3:	mov    edi,0x2d9dcacf
   14001e0c8:	(bad)  
   14001e0c9:	and    ch,ah
   14001e0cb:	iret   
   14001e0cc:	fs (bad) 
   14001e0ce:	jmp    0xdaca087b
   14001e0d3:	lea    ecx,[rsi-0x133497ea]
   14001e0d9:	(bad)  
   14001e0da:	ins    DWORD PTR es:[rdi],dx
   14001e0db:	xchg   QWORD PTR [r10+0x36b9653],rsp
   14001e0e2:	push   rdi
   14001e0e3:	xor    ah,ch
   14001e0e5:	push   QWORD PTR [rdi-0x4a9261ad]
   14001e0eb:	sub    eax,DWORD PTR [rdx+0x67258191]
   14001e0f1:	and    ch,bl
   14001e0f3:	mov    bh,0x2
   14001e0f5:	shr    dh,cl
   14001e0f7:	rex.WRX rol dil,0x1e
   14001e0fb:	ret    0x12d0
   14001e0fe:	or     QWORD PTR [rax+rcx*1-0x3a420fec],r15
   14001e106:	adc    ecx,edi
   14001e108:	rex.XB adc BYTE PTR [r10],al
   14001e10b:	pop    rax
   14001e10c:	stc    
   14001e10d:	jmp    0x14001e14e
   14001e10f:	std    
   14001e110:	enter  0x9e1f,0x78
   14001e114:	cld    
   14001e115:	xchg   ecx,eax
   14001e116:	lahf   
   14001e117:	in     al,dx
   14001e118:	outs   dx,BYTE PTR ds:[rsi]
   14001e119:	ins    BYTE PTR es:[rdi],dx
   14001e11a:	jl     0x14001e0c7
   14001e11c:	shl    DWORD PTR [rdi+0x59837e44],1
   14001e122:	rcr    DWORD PTR [rdx+0x3285cfbf],cl
   14001e128:	adc    bl,cl
   14001e12a:	lahf   
   14001e12b:	jb     0x14001e143
   14001e12d:	lahf   
   14001e12e:	jle    0x14001e0f6
   14001e130:	mov    edx,0xe4fd265f
   14001e135:	jnp    0x14001e190
   14001e137:	(bad)  
   14001e138:	test   esp,edi
   14001e13a:	mov    bh,0xd1
   14001e13c:	mov    BYTE PTR [rax-0x7d],al
   14001e13f:	cli    
   14001e140:	and    al,0xf
   14001e142:	cmp    eax,DWORD PTR [rax-0x4bb9594b]
   14001e148:	outs   dx,DWORD PTR ds:[rsi]
   14001e149:	sub    r14b,BYTE PTR [rdi+rbp*2+0x28711e2e]
   14001e151:	pop    rdi
   14001e152:	pop    rsp
   14001e153:	adc    edi,ecx
   14001e155:	scas   eax,DWORD PTR es:[rdi]
   14001e156:	rex.WR (bad) 
   14001e158:	repz mul DWORD PTR [rbp-0x72aaf662]
   14001e15f:	int    0x63
   14001e161:	(bad)  
   14001e162:	jrcxz  0x14001e0fd
   14001e164:	test   DWORD PTR [rip+0x3b735ecc],esp        # 0x17b754036
   14001e16a:	cmp    bl,BYTE PTR [rbp+0x332b3401]
   14001e170:	call   0xdec90112
   14001e175:	jmp    0xcf51d5cb
   14001e17a:	movabs ds:0xd77707995846985a,eax
   14001e183:	movabs al,ds:0x28215ad5b27d65ed
   14001e18c:	sbb    DWORD PTR [rsi-0x5c],edi
   14001e18f:	sbb    DWORD PTR [rsi-0x64],edi
   14001e192:	loope  0x14001e212
   14001e194:	sbb    edx,esi
   14001e196:	repz jo 0x14001e1ad
   14001e199:	cmp    al,0x95
   14001e19b:	(bad)  
   14001e19c:	pop    rbx
   14001e19d:	popf   
   14001e19e:	xor    DWORD PTR [rdx+0x6e],ebx
   14001e1a1:	adc    al,0xe9
   14001e1a3:	xchg   edi,eax
   14001e1a4:	xchg   esi,eax
   14001e1a5:	rex.X jmp 0x14001e138
   14001e1a8:	pop    rsi
   14001e1a9:	punpcklbw mm5,DWORD PTR [rax-0x71a1f3bf]
   14001e1b0:	fucom  st(7)
   14001e1b2:	jb     0x14001e214
   14001e1b4:	rex.XB sbb eax,DWORD PTR [r8+0x26]
   14001e1b8:	mov    ch,0xe4
   14001e1ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e1bb:	(bad)  
   14001e1bc:	pop    rdx
   14001e1bd:	hlt    
   14001e1be:	shl    DWORD PTR [rdx],0x3e
   14001e1c1:	and    eax,ebp
   14001e1c3:	js     0x14001e220
   14001e1c5:	sahf   
   14001e1c6:	rex.RB push r14
   14001e1c8:	(bad)  
   14001e1c9:	in     eax,dx
   14001e1ca:	(bad)  
   14001e1cb:	or     DWORD PTR [rbp-0x66fdd33a],esi
   14001e1d1:	leave  
   14001e1d2:	mov    dl,0x62
   14001e1d4:	jae    0x14001e1d7
   14001e1d6:	sub    eax,0xf7016f14
   14001e1db:	loope  0x14001e180
   14001e1dd:	xchg   esi,eax
   14001e1de:	rex.WB
   14001e1df:	fs loopne 0x14001e1ee
   14001e1e2:	(bad)  
   14001e1e3:	adc    eax,0x7a0a0ca6
   14001e1e8:	(bad)  
   14001e1e9:	(bad)  [rip+0xffffffffbef6a022]        # 0xfef88211
   14001e1ef:	sub    eax,0xbe582b46
   14001e1f4:	(bad)  
   14001e1f5:	in     eax,0x67
   14001e1f7:	out    dx,eax
   14001e1f8:	test   esp,0x5f65b4ad
   14001e1fe:	or     al,0x95
   14001e200:	bnd jns 0x14001e1e7
   14001e203:	jns    0x14001e1de
   14001e205:	jae    0x14001e26f
   14001e207:	fbld   TBYTE PTR [rbp-0x1cacae49]
   14001e20d:	call   0x15781292a
   14001e212:	mov    BYTE PTR [rax+0x1],dl
   14001e215:	xchg   edi,eax
   14001e216:	fadd   st(5),st
   14001e218:	push   rbx
   14001e219:	gs adc eax,0x7809ca8b
   14001e220:	loope  0x14001e22a
   14001e222:	shl    BYTE PTR [rsi-0x56fb44cd],0xfc
   14001e229:	fwait
   14001e22a:	cmp    al,0xfa
   14001e22c:	fsubr  st(4),st
   14001e22e:	cld    
   14001e22f:	(bad)  
   14001e230:	test   eax,0x3c1c8f4f
   14001e235:	sbb    al,0xea
   14001e237:	sahf   
   14001e238:	sahf   
   14001e239:	fwait
   14001e23a:	add    al,0x7d
   14001e23c:	out    0xc7,eax
   14001e23e:	jmp    0x183f9e52e
   14001e243:	(bad)  
   14001e244:	adc    edi,DWORD PTR [rsi-0x2a]
   14001e247:	pop    rsp
   14001e248:	xor    al,0x6b
   14001e24a:	stc    
   14001e24b:	int3   
   14001e24c:	and    eax,DWORD PTR [rdi+rdx*2]
   14001e24f:	jmp    0x14001e2c1
   14001e251:	fistp  WORD PTR [rsi]
   14001e253:	stos   BYTE PTR es:[rdi],al
   14001e254:	in     eax,0x2b
   14001e256:	outs   dx,WORD PTR ds:[rsi]
   14001e258:	mov    cl,0x4c
   14001e25a:	(bad)
   14001e25d:	jl     0x14001e2de
   14001e25f:	mov    al,0x56
   14001e261:	adc    ecx,DWORD PTR [rdx]
   14001e263:	cld    
   14001e264:	(bad)  
   14001e265:	mov    dh,0x3d
   14001e267:	(bad)  
   14001e268:	xor    eax,DWORD PTR [rcx+0x3f]
   14001e26b:	ja     0x14001e27c
   14001e26d:	(bad)
   14001e270:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e271:	sbb    al,0x22
   14001e273:	and    al,0x81
   14001e275:	jnp    0x14001e2bc
   14001e277:	lock push rdx
   14001e279:	mov    edx,DWORD PTR ds:[rcx]
   14001e27c:	int    0xf8
   14001e27e:	jae    0x14001e2f8
   14001e280:	jbe    0x14001e2fc
   14001e282:	or     dl,BYTE PTR [rbx]
   14001e284:	push   rdi
   14001e285:	mov    edi,0x2303fd11
   14001e28a:	call   0x10e24103d
   14001e28f:	popf   
   14001e290:	ret    0xa9ee
   14001e293:	movabs ds:0xc204ecce86389c18,eax
   14001e29c:	movabs ds:0x3c4b13fab641ea2c,al
   14001e2a5:	mov    edi,0x515010e
   14001e2aa:	(bad)  
   14001e2ab:	(bad)  
   14001e2ac:	sbb    ch,BYTE PTR [rsp+rax*4+0x28ff429f]
   14001e2b3:	in     eax,dx
   14001e2b4:	mov    edi,0x416620d4
   14001e2b9:	test   eax,edi
   14001e2bb:	std    
   14001e2bc:	sbb    al,0x2d
   14001e2be:	fld    TBYTE PTR [rdi-0x1bd624f8]
   14001e2c4:	(bad)  
   14001e2c6:	mov    esi,0x988722bd
   14001e2cb:	(bad)  
   14001e2cc:	ja     0x14001e290
   14001e2ce:	nop
   14001e2cf:	(bad)  
   14001e2d0:	xor    dl,BYTE PTR [rbx-0x6b6efe48]
   14001e2d6:	adc    ah,dl
   14001e2d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e2d9:	sahf   
   14001e2da:	test   al,0x3c
   14001e2dc:	cmp    esp,0xffffff95
   14001e2df:	xchg   esi,eax
   14001e2e0:	pop    rsi
   14001e2e1:	jge    0x14001e2e2
   14001e2e3:	pop    rax
   14001e2e4:	fs (bad) 
   14001e2e6:	adc    ah,BYTE PTR [rcx+0x8511252]
   14001e2ec:	ret    0x8990
   14001e2ef:	rex.X cmp esi,DWORD PTR [rdi-0x4c]
   14001e2f3:	imul   esi,DWORD PTR [rdx+0x79940ca],0x65
   14001e2fa:	jb     0x14001e309
   14001e2fc:	or     esp,DWORD PTR [rcx+rcx*8-0x37]
   14001e300:	ss test edx,edx
   14001e303:	sub    ebp,DWORD PTR [rip+0xffffffffce14dbbf]        # 0x10e16bec8
   14001e309:	or     BYTE PTR [rdi-0x1b],al
   14001e30c:	enter  0x8fa6,0xcf
   14001e310:	adc    DWORD PTR [rdx-0x37],esi
   14001e313:	sub    cl,BYTE PTR [rsi]
   14001e315:	(bad)  
   14001e316:	test   BYTE PTR [rdi],bl
   14001e318:	sub    al,0x5f
   14001e31a:	and    eax,0x631f4e2b
   14001e31f:	xchg   ah,al
   14001e321:	cwde   
   14001e322:	lods   eax,DWORD PTR ds:[rsi]
   14001e323:	(bad)  
   14001e324:	xchg   ebp,eax
   14001e325:	loope  0x14001e34f
   14001e327:	rol    BYTE PTR [rdx-0x77],0x26
   14001e32b:	add    eax,0xbefe32d
   14001e330:	rex.B adc al,0x2
   14001e333:	scas   eax,DWORD PTR es:[rdi]
   14001e334:	cmp    eax,0x52fc881d
   14001e339:	loopne 0x14001e385
   14001e33b:	ret    0xb0d0
   14001e33e:	sub    DWORD PTR [rbx+rax*2+0x26],ecx
   14001e342:	and    al,0x19
   14001e344:	mov    ah,0x15
   14001e346:	jae    0x14001e32f
   14001e348:	push   rbx
   14001e349:	mov    ah,0xff
   14001e34b:	jrcxz  0x14001e3b8
   14001e34d:	mov    BYTE PTR [rbp-0x44],bl
   14001e350:	rex.W xor sil,al
   14001e353:	jnp    0x14001e3ac
   14001e355:	add    BYTE PTR [rsi-0x27f6a4b],dh
   14001e35b:	out    dx,eax
   14001e35c:	movabs al,ds:0xfc3d8fd7e617568
   14001e365:	jle    0x14001e3ca
   14001e367:	clc    
   14001e368:	rol    cl,0x27
   14001e36b:	jp     0x14001e3e3
   14001e36d:	in     al,dx
   14001e36e:	mov    eax,0x30c2891
   14001e373:	(bad)  
   14001e374:	stc    
   14001e375:	or     ecx,DWORD PTR [rbx-0x60]
   14001e378:	push   rsi
   14001e379:	pop    rbp
   14001e37a:	test   bh,bl
   14001e37c:	mov    esi,0x8cc9a7cb
   14001e381:	jg     0x14001e381
   14001e383:	mov    WORD PTR [rax+0x31],cs
   14001e386:	nop
   14001e387:	pop    rdx
   14001e388:	or     eax,0xc5cf0b52
   14001e38e:	movabs al,ds:0xc5673192cd485e91
   14001e397:	and    r13b,al
   14001e39a:	push   rsi
   14001e39b:	(bad)
   14001e39e:	sub    DWORD PTR [rcx+0x4429f60c],ecx
   14001e3a4:	jae    0x14001e38e
   14001e3a6:	xchg   esi,eax
   14001e3a7:	pop    rsp
   14001e3a8:	jns    0x14001e3c2
   14001e3aa:	sub    al,0x2c
   14001e3ac:	imul   eax,DWORD PTR [rdi],0xffffffa8
   14001e3af:	(bad)  
   14001e3b0:	and    BYTE PTR [rbp-0x61],cl
   14001e3b3:	shl    BYTE PTR [rbx+0x7e314627],0xf9
   14001e3ba:	lods   eax,DWORD PTR ds:[rsi]
   14001e3bb:	call   0x11d119d9f
   14001e3c0:	cmc    
   14001e3c1:	and    eax,0xc31c6e60
   14001e3c6:	shl    DWORD PTR [rbx+0x147d3e18],cl
   14001e3cc:	popf   
   14001e3cd:	(bad)  [rcx]
   14001e3cf:	(bad)  
   14001e3d0:	vaddsubpd xmm11,xmm12,xmm2
   14001e3d4:	add    al,al
   14001e3d6:	fwait
   14001e3d7:	scas   al,BYTE PTR es:[rdi]
   14001e3d8:	pop    rsp
   14001e3d9:	add    bl,BYTE PTR [rbx+0x39a80fe5]
   14001e3df:	stc    
   14001e3e0:	stos   BYTE PTR es:[rdi],al
   14001e3e1:	mov    esi,0xefcb5235
   14001e3e6:	(bad)  
   14001e3e7:	and    edi,eax
   14001e3e9:	jg     0x14001e397
   14001e3eb:	jrcxz  0x14001e39b
   14001e3ed:	test   esi,ebx
   14001e3ef:	or     al,0x22
   14001e3f1:	jnp    0x14001e461
   14001e3f3:	(bad)  
   14001e3f4:	mov    dl,0xe5
   14001e3f6:	jbe    0x14001e45d
   14001e3f8:	adc    BYTE PTR [rcx+rbx*8-0x60a2008a],al
   14001e3ff:	and    ebp,eax
   14001e401:	loopne 0x14001e41f
   14001e403:	mov    ?,r9d
   14001e406:	sbb    edx,DWORD PTR [rdi-0x60]
   14001e409:	pushf  
   14001e40a:	xchg   bl,al
   14001e40c:	jmp    QWORD PTR [rax-0x2355b611]
   14001e412:	xchg   esp,eax
   14001e413:	in     eax,0xaf
   14001e415:	xchg   esp,eax
   14001e416:	cmc    
   14001e417:	(bad)  
   14001e418:	(bad)  
   14001e419:	ja     0x14001e3fb
   14001e41b:	cmp    al,0x1
   14001e41d:	gs out 0xdf,al
   14001e420:	loopne 0x14001e460
   14001e422:	vmulps ymm3,ymm0,ymm1
   14001e426:	jno    0x14001e3f0
   14001e428:	sar    DWORD PTR [rbp+0x2d],cl
   14001e42b:	add    ah,BYTE PTR [rax+0x68]
   14001e42e:	add    esp,esp
   14001e430:	push   rcx
   14001e431:	adc    dl,0xe2
   14001e434:	xchg   esi,eax
   14001e435:	push   0x4e1e4082
   14001e43a:	xor    al,0xa3
   14001e43c:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e43e:	lock movabs ds:0x55f5e4a6199b3414,eax
   14001e448:	pop    rcx
   14001e449:	(bad)  
   14001e44a:	outs   dx,BYTE PTR ds:[rsi]
   14001e44b:	ret    0xdfaf
   14001e44e:	mov    ecx,0x7cf625
   14001e453:	sbb    eax,0x9ad804ff
   14001e458:	(bad)  
   14001e459:	mov    rax,QWORD PTR [r14+0x46002472]
   14001e460:	movsxd esp,DWORD PTR [rcx]
   14001e462:	scas   eax,DWORD PTR es:[rdi]
   14001e463:	lea    ebx,[rcx-0x369a59af]
   14001e469:	adc    ch,ah
   14001e46b:	ds cmp ebx,ecx
   14001e46e:	test   DWORD PTR [rcx+0x18434293],esp
   14001e474:	fimul  DWORD PTR [rcx]
   14001e476:	fcomp  QWORD PTR [rsp+rdi*1]
   14001e479:	sbb    BYTE PTR [rsi],dh
   14001e47b:	out    dx,al
   14001e47c:	sti    
   14001e47d:	xor    dh,BYTE PTR [rsi-0x41]
   14001e480:	call   0xef196521
   14001e485:	add    BYTE PTR [rax+0x3c2e15e7],al
   14001e48b:	stc    
   14001e48c:	in     al,0xe3
   14001e48e:	rex.RXB (bad) 
   14001e490:	int    0xcd
   14001e492:	iret   
   14001e493:	or     al,0xee
   14001e495:	fnstenv [rdi-0x14158bc9]
   14001e49b:	jne    0x14001e431
   14001e49d:	hlt    
   14001e49e:	(bad)  
   14001e49f:	xor    ebp,DWORD PTR [rax+0x13041a49]
   14001e4a5:	gs push rax
   14001e4a7:	(bad)  
   14001e4a8:	movabs eax,ds:0xf9c0c10ce71fc178
   14001e4b1:	loopne 0x14001e46d
   14001e4b3:	fwait
   14001e4b4:	rex jg 0x14001e4d9
   14001e4b7:	(bad)  
   14001e4b8:	ins    BYTE PTR es:[rdi],dx
   14001e4b9:	sar    BYTE PTR [rdx],0xaf
   14001e4bc:	rex.W jrcxz 0x14001e4cb
   14001e4bf:	jae    0x14001e4ca
   14001e4c1:	push   rdx
   14001e4c2:	rcl    al,cl
   14001e4c4:	lahf   
   14001e4c5:	(bad)  
   14001e4c6:	ror    DWORD PTR [rax+0x2a124899],1
   14001e4cc:	rex.X
   14001e4cd:	repnz or ch,BYTE PTR [rcx+0x5a40979c]
   14001e4d4:	or     edx,DWORD PTR [rax+0x22366fa1]
   14001e4da:	add    al,0x8a
   14001e4dc:	adc    eax,0x47147278
   14001e4e1:	rex.WRX lahf 
   14001e4e3:	(bad)  
   14001e4e4:	leave  
   14001e4e5:	rex.WXB outs dx,DWORD PTR ds:[rsi]
   14001e4e7:	(bad)  
   14001e4e8:	mov    fs,ecx
   14001e4ea:	add    ecx,DWORD PTR [rax-0x65]
   14001e4ed:	imul   ebp,DWORD PTR [rax-0x1a],0x4e
   14001e4f1:	(bad)  
   14001e4f2:	push   0x27bb0c7a
   14001e4f7:	mov    cs,WORD PTR [rax]
   14001e4f9:	jmp    0xf88515b5
   14001e4fe:	mov    dl,0x20
   14001e500:	icebp  
   14001e501:	jle    0x14001e559
   14001e503:	ror    BYTE PTR [rdi+0x54050e80],cl
   14001e509:	and    DWORD PTR [rax-0x6cbf83b],ecx
   14001e50f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e510:	xchg   ecx,eax
   14001e511:	add    eax,0x7f7e213e
   14001e516:	and    BYTE PTR [rcx],ah
   14001e518:	inc    ah
   14001e51a:	cli    
   14001e51b:	(bad)  
   14001e51c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e51d:	lahf   
   14001e51e:	loope  0x14001e592
   14001e520:	movsxd esi,edx
   14001e522:	fst    DWORD PTR [rsp+rax*4]
   14001e525:	jo     0x14001e4f0
   14001e527:	xchg   ecx,eax
   14001e528:	test   ch,bh
   14001e52a:	(bad)  
   14001e52b:	movabs ds:0x2c82b00c0b52d519,al
   14001e534:	rex.WRXB (bad) 
   14001e536:	and    cl,dl
   14001e538:	jns    0x14001e539
   14001e53a:	sub    bl,BYTE PTR [rax+0x39]
   14001e53d:	out    dx,eax
   14001e53e:	(bad)  
   14001e540:	add    dh,BYTE PTR [rdx-0x21]
   14001e543:	lahf   
   14001e544:	(bad)  
   14001e545:	in     al,0xf5
   14001e547:	imul   ebx,DWORD PTR [rbp-0x681a575],0x5d
   14001e54e:	adc    eax,0x48832082
   14001e553:	test   al,0x5c
   14001e555:	sbb    eax,ebp
   14001e557:	jno    0x14001e5bb
   14001e559:	rex.RX adc BYTE PTR [rsi-0x7],r15b
   14001e55d:	rex.B
   14001e55e:	repz (bad) 
   14001e560:	(bad)  
   14001e561:	rex.RX and al,0xe
   14001e564:	xchg   ebx,eax
   14001e565:	or     eax,0x68429819
   14001e56a:	push   rbp
   14001e56b:	xor    al,0xe9
   14001e56d:	jle    0x14001e5d5
   14001e56f:	cmp    BYTE PTR [rcx+0x28],dl
   14001e572:	xchg   edx,eax
   14001e573:	or     al,0x2c
   14001e575:	xor    ecx,DWORD PTR gs:[rax]
   14001e578:	fidiv  WORD PTR [rdx]
   14001e57a:	cvtdq2ps xmm4,XMMWORD PTR [rsi-0x54]
   14001e57e:	out    dx,eax
   14001e57f:	stos   BYTE PTR es:[rdi],al
   14001e580:	push   rsi
   14001e581:	cmp    ebx,DWORD PTR [rcx-0x48]
   14001e584:	rex.WRX test QWORD PTR [rdx],r14
   14001e587:	add    esi,edx
   14001e589:	xor    ecx,edi
   14001e58b:	fcom   QWORD PTR [rcx+0x2]
   14001e58e:	mov    esp,0xcd2ec02e
   14001e593:	jb     0x14001e5e9
   14001e595:	mov    edi,?
   14001e597:	iret   
   14001e598:	enter  0xe097,0xfe
   14001e59c:	xchg   BYTE PTR [rdx+0x6b8a8184],dl
   14001e5a2:	sub    esi,esp
   14001e5a4:	mov    ebp,0x54df0629
   14001e5a9:	pop    rsi
   14001e5aa:	sbb    BYTE PTR [rbp+rcx*1-0x5e],bl
   14001e5ae:	pop    rcx
   14001e5af:	clc    
   14001e5b0:	sbb    BYTE PTR [rsi],ch
   14001e5b2:	stc    
   14001e5b3:	rex.WX sub QWORD PTR [rbx+0x7f],rsp
   14001e5b7:	jnp    0x14001e5c3
   14001e5b9:	shl    BYTE PTR [rsi+0x7e841333],0x81
   14001e5c0:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e5c2:	(bad)  
   14001e5c3:	xchg   edi,eax
   14001e5c4:	(bad)  
   14001e5c5:	ds hlt 
   14001e5c7:	shl    BYTE PTR [rdi-0x9],0x5d
   14001e5cb:	jns    0x14001e5c2
   14001e5cd:	push   rsp
   14001e5ce:	rex.WRXB pop r15
   14001e5d0:	dec    DWORD PTR [rbp+0x20]
   14001e5d3:	hlt    
   14001e5d4:	(bad)  
   14001e5d5:	int    0xac
   14001e5d7:	xor    bl,BYTE PTR [rax+0x4e]
   14001e5da:	data16 ficom WORD PTR [rbp+rdx*1-0x49]
   14001e5df:	sbb    BYTE PTR [rdi-0x6b],bh
   14001e5e2:	data16 jns 0x14001e65b
   14001e5e5:	(bad)
   14001e5e8:	and    al,0x16
   14001e5ea:	fidivr WORD PTR [rbx-0x6b68e8ef]
   14001e5f0:	cwde   
   14001e5f1:	push   rcx
   14001e5f2:	rex.XB loopne 0x14001e669
   14001e5f5:	pop    rsi
   14001e5f6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e5f7:	mov    edx,DWORD PTR [rax]
   14001e5f9:	push   rsp
   14001e5fa:	jne    0x14001e660
   14001e5fc:	gs pop r10
   14001e5ff:	cmp    BYTE PTR [rcx+rbp*4+0x7e],ah
   14001e603:	ds pop rsp
   14001e605:	and    dl,BYTE PTR [rax+0x60]
   14001e608:	out    0x8e,eax
   14001e60a:	lods   al,BYTE PTR ds:[rsi]
   14001e60b:	inc    BYTE PTR [rcx+0xd550840]
   14001e611:	ds stc 
   14001e613:	xor    al,0x9e
   14001e615:	cmp    eax,0x97e30c71
   14001e61a:	fld    QWORD PTR [rdx+0x4803e181]
   14001e620:	fisttp QWORD PTR [rip+0x604c2e6c]        # 0x1a04e1492
   14001e626:	jo     0x14001e68e
   14001e628:	or     al,0xbb
   14001e62a:	es (bad) 
   14001e62c:	movabs al,ds:0xe5aa34c2e224ea6f
   14001e635:	add    eax,0xd7a2b370
   14001e63a:	sub    dl,ch
   14001e63c:	scas   al,BYTE PTR es:[rdi]
   14001e63d:	xchg   BYTE PTR [rax+0x3a31157e],dl
   14001e643:	sub    al,0x42
   14001e645:	pop    rcx
   14001e646:	push   rcx
   14001e647:	and    ecx,DWORD PTR [rcx]
   14001e649:	rex test ebp,esp
   14001e64c:	outs   dx,DWORD PTR ds:[rsi]
   14001e64d:	sub    eax,0x159665ef
   14001e652:	sbb    DWORD PTR [rsi],edx
   14001e654:	(bad)  
   14001e655:	rex sti 
   14001e657:	stc    
   14001e658:	jmp    0x124fdaf54
   14001e65d:	xor    eax,0xc95880fa
   14001e662:	cli    
   14001e663:	ja     0x14001e606
   14001e665:	and    dh,bh
   14001e667:	movabs ds:0x84662220314ebb2,al
   14001e670:	sub    al,BYTE PTR [rax+0x31]
   14001e673:	adc    BYTE PTR [rdx-0x3bf80498],ch
   14001e679:	sub    ch,dh
   14001e67b:	add    al,0x16
   14001e67d:	add    cl,BYTE PTR [rsi+rax*2-0x54a36e02]
   14001e684:	jl     0x14001e69c
   14001e686:	rex push rcx
   14001e688:	sub    al,0x76
   14001e68a:	in     eax,0xd6
   14001e68c:	lahf   
   14001e68d:	push   rsp
   14001e68e:	imul   edx,DWORD PTR [rax+rcx*4],0x9605a344
   14001e695:	(bad)  
   14001e696:	in     al,0x55
   14001e698:	mov    eax,DWORD PTR [rbp+0x8]
   14001e69b:	shr    BYTE PTR [rdi],1
   14001e69d:	(bad)  
   14001e69e:	jb     0x14001e6be
   14001e6a0:	mul    DWORD PTR [rbx-0x4]
   14001e6a3:	jae    0x14001e64d
   14001e6a5:	(bad)  
   14001e6a6:	enter  0xd2c,0xb5
   14001e6aa:	and    al,0x1f
   14001e6ac:	jns    0x14001e6da
   14001e6ae:	cmc    
   14001e6af:	(bad)  
   14001e6b0:	int3   
   14001e6b1:	sbb    ebp,esi
   14001e6b3:	xchg   ebp,eax
   14001e6b4:	fcom   st(5)
   14001e6b6:	jg     0x14001e71f
   14001e6b8:	enter  0x540f,0x44
   14001e6bc:	xchg   DWORD PTR [rax],ebx
   14001e6be:	(bad)
   14001e6c2:	ss bswap eax
   14001e6c5:	and    eax,DWORD PTR [rbx]
   14001e6c7:	sub    BYTE PTR [rbp-0x3aa579e1],al
   14001e6cd:	test   BYTE PTR [rax-0x47],bh
   14001e6d0:	xor    bl,bh
   14001e6d2:	(bad)  
   14001e6d3:	xchg   edx,eax
   14001e6d4:	in     al,dx
   14001e6d5:	sar    DWORD PTR [rdx*8-0x24248d84],0xa0
   14001e6dd:	repz sbb al,0xea
   14001e6e0:	shl    BYTE PTR [rdx+0x1006572a],cl
   14001e6e6:	cmp    DWORD PTR [rip+0x7bbea29f],ecx        # 0x1bbc0898b
   14001e6ec:	(bad)  
   14001e6ed:	movabs ds:0x5585c04e545ff,al
   14001e6f6:	pushf  
   14001e6f7:	xlat   BYTE PTR ds:[rbx]
   14001e6f8:	and    eax,0x3f8e9000
   14001e6fd:	neg    ch
   14001e6ff:	(bad)  
   14001e700:	jp     0x14001e708
   14001e702:	jbe    0x14001e780
   14001e704:	jge    0x14001e766
   14001e706:	out    0xf0,eax
   14001e708:	mov    ch,0x44
   14001e70a:	loope  0x14001e69c
   14001e70c:	pop    rcx
   14001e70d:	jno    0x14001e772
   14001e70f:	(bad)  
   14001e710:	in     eax,0xc6
   14001e712:	fcmovnb st,st(5)
   14001e714:	cmp    al,0x79
   14001e716:	xchg   ecx,eax
   14001e717:	rex.WRB fldenv [r15+0x511b9e41]
   14001e71e:	and    DWORD PTR [rax],ebx
   14001e720:	xchg   ebx,eax
   14001e721:	and    eax,0x1aefc8bd
   14001e726:	or     eax,0x6fc555ef
   14001e72b:	sbb    edx,DWORD PTR [rsi-0x15]
   14001e72e:	scas   eax,DWORD PTR es:[rdi]
   14001e72f:	mov    esi,0x9fcb0bf
   14001e734:	or     ecx,eax
   14001e736:	add    eax,0x77bfcd9d
   14001e73b:	and    eax,0x83023990
   14001e740:	(bad)
   14001e744:	ror    BYTE PTR [rcx-0x2b330f59],cl
   14001e74a:	adc    al,0x4e
   14001e74c:	pop    rsi
   14001e74d:	jno    0x14001e76a
   14001e74f:	(bad)  
   14001e750:	rex.RXB test BYTE PTR [r9+0x16d62e9b],0x26
   14001e758:	shl    DWORD PTR [rdi],1
   14001e75a:	jnp    0x14001e75e
   14001e75c:	jnp    0x14001e784
   14001e75e:	(bad)  
   14001e75f:	movabs al,ds:0xaee8fcb52a04f27f
   14001e768:	rcl    BYTE PTR [rdx+0x6149087d],0x7f
   14001e76f:	rex.R
   14001e770:	rex.WRB mov WORD PTR [r10+0x53],ds
   14001e774:	xchg   ecx,eax
   14001e775:	and    eax,0xdc3dbfd6
   14001e77a:	out    0xd0,eax
   14001e77c:	pop    rdi
   14001e77d:	add    eax,0xcc7b92d1
   14001e782:	repnz fwait
   14001e784:	pop    rbp
   14001e785:	repz hlt 
   14001e787:	pop    rsi
   14001e788:	push   rdx
   14001e789:	call   FWORD PTR [rdi-0x55c029f6]
   14001e78f:	lock xor DWORD PTR [rdx],0xffffff8a
   14001e793:	push   rax
   14001e794:	movabs eax,ds:0xb00a2a32845f96ce
   14001e79d:	adc    BYTE PTR [rdi],bl
   14001e79f:	cmp    DWORD PTR [rbx-0xf419391],edx
   14001e7a5:	add    edx,DWORD PTR [rcx]
   14001e7a7:	xchg   edx,eax
   14001e7a8:	clc    
   14001e7a9:	and    ebp,DWORD PTR [rcx-0x43]
   14001e7ac:	(bad)  
   14001e7ad:	add    al,0x2a
   14001e7af:	mov    ch,BYTE PTR [rip+0xfffffffff62d1124]        # 0x1362ef8d9
   14001e7b5:	rex.WRXB
   14001e7b6:	lods   al,BYTE PTR ds:[rsi]
   14001e7b8:	or     dl,BYTE PTR [rdi-0x40]
   14001e7bb:	and    al,BYTE PTR [rax]
   14001e7bd:	(bad)  
   14001e7be:	lock pop rbx
   14001e7c0:	push   rsi
   14001e7c1:	(bad)  
   14001e7c2:	push   rsi
   14001e7c3:	ins    BYTE PTR es:[rdi],dx
   14001e7c4:	movabs ds:0xea0c048c9f2b8208,al
   14001e7cd:	rcl    BYTE PTR [rbp+0x3dd86943],0x5f
   14001e7d4:	test   bl,dh
   14001e7d6:	addr32 ds jg 0x14001e7a6
   14001e7da:	(bad)  
   14001e7db:	fwait
   14001e7dc:	outs   dx,DWORD PTR ds:[rsi]
   14001e7dd:	or     eax,0xbb291f98
   14001e7e2:	(bad)  
   14001e7e3:	(bad)  
   14001e7e4:	cmp    DWORD PTR [rax+0x65],esp
   14001e7e7:	loope  0x14001e825
   14001e7e9:	retf   0x7e3e
   14001e7ec:	push   rbx
   14001e7ed:	jl     0x14001e79d
   14001e7ef:	ror    dh,cl
   14001e7f1:	sbb    cl,BYTE PTR [rcx]
   14001e7f3:	jo     0x14001e837
   14001e7f5:	pop    rbx
   14001e7f6:	jge    0x14001e845
   14001e7f8:	scas   eax,DWORD PTR es:[rdi]
   14001e7f9:	cmp    al,0x49
   14001e7fb:	vpunpcklqdq xmm15,xmm14,XMMWORD PTR [rsi]
   14001e7ff:	mov    cl,0xe4
   14001e801:	(bad)  
   14001e802:	xchg   esp,eax
   14001e803:	imul   ecx,DWORD PTR [rdx+rbp*4+0x6e],0xc54b2bb2
   14001e80b:	mov    ecx,0x391b91b3
   14001e810:	mov    ch,dh
   14001e812:	out    dx,eax
   14001e813:	jl     0x14001e817
   14001e815:	sti    
   14001e816:	lahf   
   14001e817:	(bad)  
   14001e818:	mov    ecx,eax
   14001e81a:	or     DWORD PTR [rax+0x78000af0],edi
   14001e820:	pop    rsi
   14001e821:	add    al,0xe1
   14001e823:	(bad)  
   14001e824:	shl    edi,1
   14001e826:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e827:	out    0x4f,al
   14001e829:	(bad)  
   14001e82a:	jg     0x14001e896
   14001e82c:	call   0x12ea30e11
   14001e831:	jmp    0x1af71fdf3
   14001e836:	iret   
   14001e837:	mov    ch,0x27
   14001e839:	add    BYTE PTR [rsp+rsi*4+0x4270925],al
   14001e840:	xor    al,0x9c
   14001e842:	lahf   
   14001e843:	rex.RB
   14001e844:	rex.W and spl,spl
   14001e847:	sub    DWORD PTR [rax-0x4b7dfb99],edx
   14001e84d:	ficomp WORD PTR [rdi]
   14001e84f:	xchg   esi,eax
   14001e850:	repz (bad) 
   14001e852:	cmp    ebx,ebx
   14001e854:	(bad)  
   14001e855:	and    DWORD PTR [rcx+0x73],eax
   14001e858:	in     eax,dx
   14001e859:	movabs ds:0xd07c6e04330d7206,eax
   14001e862:	mov    WORD PTR [rax],ds
   14001e864:	xor    al,0xed
   14001e866:	stos   DWORD PTR es:[rdi],eax
   14001e867:	or     ecx,DWORD PTR [rsi-0x5]
   14001e86a:	mov    cl,0x62
   14001e86c:	or     al,bl
   14001e86e:	cmp    al,0xf2
   14001e870:	or     BYTE PTR [rsi-0x3b3b6366],bl
   14001e876:	xchg   ebp,eax
   14001e877:	mov    bh,0x63
   14001e879:	js     0x14001e8df
   14001e87b:	(bad)  
   14001e87c:	push   rdx
   14001e87d:	rex.WX pop rax
   14001e87f:	pop    rbx
   14001e880:	pushf  
   14001e881:	rex.RX out dx,eax
   14001e883:	int3   
   14001e884:	sbb    dh,dh
   14001e886:	rex.WR (bad) 
   14001e888:	ret    
   14001e889:	loopne 0x14001e84f
   14001e88b:	sbb    dl,ah
   14001e88d:	ret    0xaa14
   14001e890:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e891:	cmp    DWORD PTR [rbp-0x37],ebx
   14001e894:	ja     0x14001e8a9
   14001e896:	(bad)  
   14001e897:	je     0x14001e83d
   14001e899:	rex.XB test BYTE PTR [r10+0xb826a02],bl
   14001e8a0:	jg     0x14001e8fb
   14001e8a2:	ficomp WORD PTR [rbx+0x2e]
   14001e8a5:	out    0x25,eax
   14001e8a7:	xor    dl,BYTE PTR [rdx-0x8]
   14001e8aa:	out    dx,al
   14001e8ab:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e8ac:	lock xchg ebx,eax
   14001e8ae:	rex.WRB out 0x42,al
   14001e8b1:	clc    
   14001e8b2:	and    ebp,ecx
   14001e8b4:	rex.X pop rbp
   14001e8b6:	clc    
   14001e8b7:	mov    ecx,0x553011a8
   14001e8bc:	(bad)  
   14001e8bd:	xor    BYTE PTR [rsi-0x71],bl
   14001e8c0:	jrcxz  0x14001e84f
   14001e8c2:	sub    DWORD PTR ds:[rbx+0x9],esi
   14001e8c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e8c7:	add    BYTE PTR [rdx-0x3e8b38d8],ch
   14001e8cd:	pshufw mm3,mm6,0x20
   14001e8d1:	add    al,0x11
   14001e8d3:	push   0x51
   14001e8d5:	or     al,0x19
   14001e8d7:	dec    BYTE PTR [rbx-0x7e]
   14001e8da:	adc    DWORD PTR [rbx+0x4fd23032],ebp
   14001e8e0:	sbb    al,BYTE PTR [rcx+0x6590e25a]
   14001e8e6:	dec    DWORD PTR [rcx+0x22]
   14001e8e9:	xchg   ebx,eax
   14001e8ea:	pop    rdx
   14001e8eb:	cmp    cl,BYTE PTR [rip+0xffffffffa3b09871]        # 0xe3b28162
   14001e8f1:	clc    
   14001e8f2:	mov    gs,ebp
   14001e8f4:	mov    ch,0x8d
   14001e8f6:	cwde   
   14001e8f7:	xchg   BYTE PTR [rsi+0x360b349d],al
   14001e8fd:	rex.WX cmp cl,BYTE PTR [rcx]
   14001e900:	loopne 0x14001e961
   14001e902:	cmp    DWORD PTR [rdx+0x6bdaafb3],edx
   14001e908:	(bad)  
   14001e909:	and    bl,ch
   14001e90b:	add    DWORD PTR [rsi+riz*1-0x61],0xc8a1fb0a
   14001e913:	xchg   ebx,eax
   14001e914:	fisttp QWORD PTR [rip+0x17432ab0]        # 0x1574513ca
   14001e91a:	jl     0x14001e942
   14001e91c:	push   rax
   14001e91d:	xchg   ebx,eax
   14001e91e:	pop    rbx
   14001e91f:	loope  0x14001e8b4
   14001e921:	sub    DWORD PTR [rcx],eax
   14001e923:	jrcxz  0x14001e929
   14001e925:	(bad)  
   14001e926:	call   0xd63731cc
   14001e92b:	outs   dx,BYTE PTR ds:[rsi]
   14001e92c:	(bad)  
   14001e92d:	xor    dl,bl
   14001e92f:	jl     0x14001e96f
   14001e931:	push   rbx
   14001e932:	rex.RX xor r11b,BYTE PTR [rsi]
   14001e935:	xor    ebx,ecx
   14001e937:	pop    rcx
   14001e938:	mov    edi,0x18103959
   14001e93d:	or     BYTE PTR [rip+0x1c1ee6a4],bl        # 0x15c20cfe7
   14001e943:	mov    edx,0xe0376d0f
   14001e948:	add    eax,0x469780a1
   14001e94d:	add    eax,ebx
   14001e94f:	jbe    0x14001e98f
   14001e951:	(bad)  
   14001e952:	jo     0x14001e9c5
   14001e954:	(bad)  
   14001e955:	movsxd ebp,esp
   14001e957:	xchg   ecx,eax
   14001e958:	xchg   DWORD PTR [rsi-0x5e3683cf],edi
   14001e95e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e95f:	cmp    edi,ebp
   14001e961:	cmp    ebp,DWORD PTR [rsi-0x60]
   14001e964:	adc    BYTE PTR [rsi+0x508a99e5],al
   14001e96a:	rex.RX sbb DWORD PTR [rsi-0x38],0xffffff82
   14001e96f:	xlat   BYTE PTR ds:[rbx]
   14001e970:	push   rbp
   14001e971:	xor    eax,0x31200449
   14001e976:	sub    ah,BYTE PTR [rsi+0x34]
   14001e979:	rex.R in eax,dx
   14001e97b:	add    DWORD PTR [rsi+0x2c0ad9d8],eax
   14001e981:	mov    esi,0x64fdaabf
   14001e986:	(bad)  
   14001e987:	(bad)  
   14001e988:	or     al,0xeb
   14001e98a:	imul   edx,DWORD PTR [rdi-0x2],0x72f524a6
   14001e991:	push   0xffffffffffffffa6
   14001e993:	jge    0x14001e943
   14001e995:	(bad)  
   14001e996:	pop    rsi
   14001e997:	loope  0x14001e983
   14001e999:	cli    
   14001e99a:	push   rbx
   14001e99b:	pavgb  mm5,QWORD PTR [rcx+0x5d4c55a5]
   14001e9a2:	jnp    0x14001e9ab
   14001e9a4:	xchg   BYTE PTR [rsi-0x12],dh
   14001e9a7:	rex.RX xchg ebx,eax
   14001e9a9:	sbb    ch,BYTE PTR [rsi+rbp*1+0x6667a34c]
   14001e9b0:	adc    al,0xbb
   14001e9b2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e9b3:	rex.RX xor DWORD PTR [rax],r15d
   14001e9b6:	cmp    DWORD PTR [rsi+0x71126e6a],eax
   14001e9bc:	jns    0x14001e9dc
   14001e9be:	mov    ah,0x2e
   14001e9c0:	sub    edi,ecx
   14001e9c2:	(bad)  
   14001e9c3:	mov    ebp,0x24221af5
   14001e9c8:	adc    eax,0x284f8159
   14001e9cd:	add    al,0x5f
   14001e9cf:	js     0x14001e951
   14001e9d1:	adc    bl,dh
   14001e9d3:	mov    dl,0x4d
   14001e9d5:	add    al,0x78
   14001e9d7:	xchg   edx,eax
   14001e9d8:	rex.WR push rsp
   14001e9da:	push   0xffffffffc96f176f
   14001e9df:	sub    al,BYTE PTR [rcx]
   14001e9e1:	enter  0x3705,0xaa
   14001e9e5:	rex.WX jae 0x14001e9d7
   14001e9e8:	jle    0x14001ea22
   14001e9ea:	mov    cl,0x16
   14001e9ec:	mov    ah,0x4b
   14001e9ee:	mov    BYTE PTR [rbp+0xe],ah
   14001e9f1:	rex.X fnstcw WORD PTR [rdi-0x75]
   14001e9f5:	jrcxz  0x14001e992
   14001e9f7:	or     esp,DWORD PTR [rcx+0x2]
   14001e9fa:	sub    dh,ch
   14001e9fc:	inc    BYTE PTR [rbp+0x2]
   14001e9ff:	rex.WRXB and BYTE PTR [r15+0x12],r9b
   14001ea03:	mov    ch,BYTE PTR [rdx+0x4b30b20c]
   14001ea09:	fnstenv [rdx]
   14001ea0b:	test   DWORD PTR [rdi+rdi*1+0x337edd60],ebx
   14001ea12:	mov    ch,BYTE PTR [rax+0x27]
   14001ea15:	(bad)  
   14001ea16:	in     eax,0xb0
   14001ea18:	sbb    eax,eax
   14001ea1a:	and    DWORD PTR [rip+0x4189c801],0x9acf5582        # 0x1818bb225
   14001ea24:	add    eax,0x80c5510f
   14001ea29:	mov    dl,0x32
   14001ea2b:	push   0xffffffffa094c207
   14001ea30:	xor    eax,0xfe1f0114
   14001ea35:	ret    0x229a
   14001ea38:	push   rdi
   14001ea39:	mov    ds,edx
   14001ea3b:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001ea3d:	test   DWORD PTR [rdi],eax
   14001ea3f:	leave  
   14001ea40:	or     al,0x4a
   14001ea42:	add    eax,0x738a67f9
   14001ea47:	mov    edi,DWORD PTR [rcx]
   14001ea49:	movabs ds:0xca9ec0028173eb02,eax
   14001ea52:	push   rdx
   14001ea53:	fs sti 
   14001ea55:	sbb    al,BYTE PTR [rsi+0x1b8bffcc]
   14001ea5b:	and    bh,dh
   14001ea5d:	adc    esp,ebx
   14001ea5f:	test   ecx,esi
   14001ea61:	add    BYTE PTR [rbx-0x6ad1d6d5],ch
   14001ea67:	(bad)  
   14001ea68:	out    dx,al
   14001ea69:	push   rdi
   14001ea6a:	jno    0x14001eaa6
   14001ea6c:	mov    ah,0x9b
   14001ea6e:	ss (bad) 
   14001ea70:	jle    0x14001eab1
   14001ea72:	rex.RX
   14001ea73:	data16 rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ea76:	pop    rsi
   14001ea77:	sub    BYTE PTR [rdx],cl
   14001ea79:	js     0x14001eae4
   14001ea7b:	adc    eax,0x32bcf000
   14001ea80:	or     bh,al
   14001ea82:	lahf   
   14001ea83:	jl     0x14001ea81
   14001ea85:	cmp    DWORD PTR [rsi-0x33],ecx
   14001ea88:	out    0x6,eax
   14001ea8a:	jbe    0x14001ea7b
   14001ea8c:	fst    QWORD PTR [rdi]
   14001ea8e:	(bad)  
   14001ea8f:	cli    
   14001ea90:	cmp    dh,BYTE PTR [rax+0x16c8f325]
   14001ea96:	sbb    BYTE PTR [rsi+0x5f96e163],dl
   14001ea9c:	jb     0x14001ea98
   14001ea9e:	(bad)  [rcx]
   14001eaa0:	(bad)  
   14001eaa1:	fist   DWORD PTR [rdx]
   14001eaa3:	fs rex.WRX je 0x14001ea83
   14001eaa7:	mov    al,BYTE PTR [rdi]
   14001eaa9:	pop    rdi
   14001eaaa:	int    0x28
   14001eaac:	sub    BYTE PTR [rbx+0x4509911f],bl
   14001eab2:	push   rsi
   14001eab3:	jl     0x14001eafb
   14001eab5:	jo     0x14001ea7c
   14001eab7:	pop    rsp
   14001eab8:	pop    rsp
   14001eab9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001eaba:	mov    ecx,0x85620005
   14001eabf:	fsubr  DWORD PTR [rax+riz*2-0xb]
   14001eac3:	outs   dx,DWORD PTR ds:[rsi]
   14001eac4:	mov    esi,0x337c781
   14001eac9:	(bad)  
   14001eaca:	scas   al,BYTE PTR es:[rdi]
   14001eacb:	jns    0x14001eaf0
   14001eacd:	xchg   BYTE PTR [rdi],al
   14001eacf:	ja     0x14001ead2
   14001ead1:	sub    DWORD PTR [rcx+0x79],esp
   14001ead4:	imul   ecx,DWORD PTR [rsi],0xec71ecd5
   14001eada:	(bad)  
   14001eadb:	(bad)  
   14001eadc:	ret    
   14001eadd:	shl    ah,1
   14001eadf:	test   al,0x32
   14001eae1:	(bad)  
   14001eae2:	mov    bl,0xa0
   14001eae4:	mov    ch,0x25
   14001eae6:	and    BYTE PTR [rbp-0x17b775d5],ch
   14001eaec:	adc    BYTE PTR [rbx+0x7235110a],ah
   14001eaf2:	movsxd ecx,DWORD PTR [rdi-0x3ca57b78]
   14001eaf8:	jge    0x14001ea98
   14001eafa:	jrcxz  0x14001eb2b
   14001eafc:	rex.RX sbb r9b,BYTE PTR [rdx+0x6d8b9180]
   14001eb03:	rex.WR
   14001eb04:	sbb    BYTE PTR [rcx],dl
   14001eb07:	push   rcx
   14001eb08:	sub    al,0x33
   14001eb0a:	sbb    DWORD PTR [rcx-0x79],edi
   14001eb0d:	sub    eax,0x1ac5bead
   14001eb12:	mov    ch,0xd3
   14001eb14:	outs   dx,BYTE PTR ds:[rsi]
   14001eb15:	rex.WRB enter 0x5a83,0xe2
   14001eb1a:	push   rax
   14001eb1b:	in     al,0xf0
   14001eb1d:	and    ebx,DWORD PTR [rbx-0x1]
   14001eb20:	mov    al,0x1d
   14001eb22:	(bad)  
   14001eb23:	rex
   14001eb24:	rex
   14001eb25:	rex.RXB
   14001eb26:	adc    r8b,BYTE PTR [r14]
   14001eb29:	sti    
   14001eb2a:	and    eax,0xfdf5079c
   14001eb2f:	movabs ds:0x9efb8707fcc28193,eax
   14001eb38:	neg    DWORD PTR [rdi]
   14001eb3a:	or     eax,0x14f2b0cd
   14001eb3f:	jb     0x14001ead0
   14001eb41:	jo     0x14001eb35
   14001eb43:	iret   
   14001eb44:	cs (bad) 
   14001eb46:	(bad)  
   14001eb47:	adc    DWORD PTR [rbx+rbp*8+0x16bc110],edi
   14001eb4e:	jb     0x14001eadb
   14001eb50:	xor    BYTE PTR [rbx+0x348d85f6],dh
   14001eb56:	pop    rcx
   14001eb57:	cs pop rsp
   14001eb59:	rex.X sti 
   14001eb5b:	fadd   st(4),st
   14001eb5d:	fmulp  st(5),st
   14001eb5f:	xchg   BYTE PTR [rdi+0x4],cl
   14001eb62:	jb     0x14001eb0f
   14001eb64:	lahf   
   14001eb65:	mov    ch,0x2
   14001eb67:	imul   ecx,eax,0x4048cb7
   14001eb6d:	(bad)  
   14001eb6e:	cld    
   14001eb6f:	mov    ah,0xf2
   14001eb71:	rex.WR pop rbp
   14001eb73:	add    dh,cl
   14001eb75:	xor    bh,bl
   14001eb77:	addr32 mov edx,0x25bc935c
   14001eb7d:	in     al,0x35
   14001eb7f:	or     al,0xf4
   14001eb81:	xor    eax,0xe741c012
   14001eb86:	mov    ch,0xb9
   14001eb88:	or     eax,0xcad3c470
   14001eb8d:	rex.WRXB
   14001eb8e:	lock rex.WX sub dil,BYTE PTR [rbx-0x3de211e2]
   14001eb96:	out    0x89,al
   14001eb98:	(bad)  
   14001eb99:	(bad)  
   14001eb9a:	and    eax,0x5316000f
   14001eb9f:	(bad)  
   14001eba0:	or     esp,DWORD PTR [rdx]
   14001eba2:	add    ebx,DWORD PTR [rdi+0x7a]
   14001eba5:	add    eax,0x4a79db60
   14001ebaa:	mov    edi,fs
   14001ebac:	rex.WRXB lea r13,[r15]
   14001ebaf:	lea    edi,[rsi]
   14001ebb1:	cld    
   14001ebb2:	in     eax,dx
   14001ebb3:	iret   
   14001ebb4:	in     al,dx
   14001ebb5:	mov    ebp,0x9ed9cafc
   14001ebba:	rex.WRX iretq 
   14001ebbc:	int    0x8
   14001ebbe:	movabs eax,ds:0x3833f0991f928017
   14001ebc7:	push   rdi
   14001ebc8:	sti    
   14001ebc9:	cwde   
   14001ebca:	push   rcx
   14001ebcb:	retf   
   14001ebcc:	add    BYTE PTR [rax],bl
   14001ebce:	fsub   st(2),st
   14001ebd0:	movabs al,ds:0x6e8ea22a8205120
   14001ebd9:	rex.WRB
   14001ebda:	add    DWORD PTR ss:[rbp-0x40],esp
   14001ebde:	sbb    BYTE PTR [rax],ch
   14001ebe0:	adc    eax,0x4d2ec173
   14001ebe5:	ret    0x8140
   14001ebe8:	sbb    DWORD PTR [rbx+rbp*1],ebx
   14001ebeb:	(bad)  
   14001ebec:	int    0x55
   14001ebee:	sub    al,0x3e
   14001ebf0:	(bad)  
   14001ebf1:	sub    eax,0xac5e813c
   14001ebf6:	pop    rbp
   14001ebf7:	sti    
   14001ebf8:	rex.RX or al,0xed
   14001ebfb:	sbb    BYTE PTR [rdx+0x4a],al
   14001ebfe:	or     DWORD PTR [rbx],ebp
   14001ec00:	retf   
   14001ec01:	repz or BYTE PTR [rbx],dh
   14001ec04:	(bad)  
   14001ec05:	xor    DWORD PTR [rdx],esi
   14001ec07:	imul   ebp,DWORD PTR [rbx],0xfffffff9
   14001ec0a:	rex.WR and BYTE PTR [rsi],r13b
   14001ec0d:	iret   
   14001ec0e:	and    DWORD PTR [rsi+rbp*1+0x2baacd02],ebp
   14001ec15:	pushf  
   14001ec16:	(bad)  
   14001ec17:	or     BYTE PTR [rax],0xb1
   14001ec1a:	mul    BYTE PTR [rdx]
   14001ec1c:	cld    
   14001ec1d:	add    DWORD PTR [rip+0x2e24d425],edx        # 0x16e26c048
   14001ec23:	rex.RX
   14001ec24:	rex.WRB and r9b,BYTE PTR [r9+rdx*1+0x5a]
   14001ec29:	pop    rbx
   14001ec2a:	(bad)  
   14001ec2b:	sub    BYTE PTR [rax],cl
   14001ec2d:	cmp    DWORD PTR [rdx+0x50],eax
   14001ec30:	jg     0x14001ebc3
   14001ec32:	movabs ds:0x1081ee5f7c787941,al
   14001ec3b:	cmp    BYTE PTR [rax],bh
   14001ec3d:	mov    cl,0x46
   14001ec3f:	enter  0x8311,0x12
   14001ec43:	push   0x1b
   14001ec45:	fld    TBYTE PTR [rdi]
   14001ec47:	rex.X (bad) 
   14001ec49:	jge    0x14001ecca
   14001ec4b:	retf   
   14001ec4c:	sti    
   14001ec4d:	xchg   edi,eax
   14001ec4e:	iret   
   14001ec4f:	(bad)
   14001ec52:	(bad)  
   14001ec53:	or     BYTE PTR [rsi],0xff
   14001ec56:	jae    0x14001ebfc
   14001ec58:	rcl    BYTE PTR [rsi],0x0
   14001ec5b:	mov    ch,0x72
   14001ec5d:	pop    rsi
   14001ec5e:	rex.WXB cmc 
   14001ec60:	xor    eax,0x93dfd102
   14001ec65:	and    DWORD PTR [rdi-0x1b3db7d3],eax
   14001ec6b:	push   rdi
   14001ec6c:	scas   eax,DWORD PTR es:[rdi]
   14001ec6d:	fist   WORD PTR [rax+0x6009af89]
   14001ec73:	or     al,al
   14001ec75:	div    BYTE PTR [rcx]
   14001ec77:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ec78:	in     al,dx
   14001ec7a:	repz (bad) 
   14001ec7c:	sub    edx,DWORD PTR [rcx]
   14001ec7e:	pop    rax
   14001ec7f:	rex.W push rax
   14001ec81:	(bad)  
   14001ec82:	push   0xbceffcb
   14001ec87:	cmp    al,ah
   14001ec89:	sub    ebp,DWORD PTR [rbx+rdi*1]
   14001ec8c:	or     al,0x76
   14001ec8e:	sub    esp,esp
   14001ec90:	mov    bh,0x34
   14001ec92:	je     0x14001ec8f
   14001ec94:	pop    rdx
   14001ec95:	xchg   ebp,eax
   14001ec96:	and    DWORD PTR [r14-0x3b],ebp
   14001ec9a:	call   FWORD PTR [rax+rbp*1+0x4]
   14001ec9e:	stc    
   14001ec9f:	(bad)  
   14001eca0:	and    eax,0x476d5778
   14001eca5:	add    esi,DWORD PTR [rsi]
   14001eca7:	(bad)  
   14001eca8:	cwde   
   14001eca9:	mov    dh,BYTE PTR [rsi+0x76]
   14001ecac:	in     al,0xd8
   14001ecae:	shr    BYTE PTR [rsi],0xb4
   14001ecb1:	mov    esp,0x13bf3b13
   14001ecb6:	popf   
   14001ecb7:	jp     0x14001ecd8
   14001ecb9:	xor    eax,0x18c3c778
   14001ecbe:	cli    
   14001ecbf:	fsub   DWORD PTR [rdx+rdi*2]
   14001ecc2:	ss icebp 
   14001ecc4:	cmp    eax,0x9f2f01b8
   14001ecc9:	add    al,BYTE PTR [rax]
   14001eccb:	sahf   
   14001eccc:	(bad)  
   14001eccd:	rex.B js 0x14001ecc2
   14001ecd0:	icebp  
   14001ecd1:	rex.RXB (bad) 
   14001ecd3:	in     eax,dx
   14001ecd4:	sbb    eax,0xff7f79dc
   14001ecd9:	(bad)  
   14001ecda:	loope  0x14001ecc7
   14001ecdc:	(bad)  
   14001ecdd:	mov    WORD PTR [rdi],es
   14001ecdf:	adc    edx,DWORD PTR [rcx]
   14001ece1:	sbb    dh,BYTE PTR [rsi]
   14001ece3:	lea    ebp,[rsi]
   14001ece5:	add    edx,DWORD PTR [rbp-0x55]
   14001ece8:	movsxd esp,DWORD PTR [rbp+0x21]
   14001eceb:	(bad)  
   14001ecec:	adc    al,0x7
   14001ecee:	rex.WXB ins BYTE PTR es:[rdi],dx
   14001ecf0:	sub    esp,ebp
   14001ecf2:	clc    
   14001ecf3:	push   0xffffffffce22076a
   14001ecf8:	mov    esi,0xaededbf
   14001ecfd:	xlat   BYTE PTR ds:[rbx]
   14001ecfe:	rex.X jg 0x14001ece5
   14001ed01:	movabs ds:0x9841dd50008bd064,eax
   14001ed0a:	lahf   
   14001ed0b:	shl    ah,0x13
   14001ed0e:	pavgb  mm1,QWORD PTR [rcx+0x5748bdbe]
   14001ed15:	fisttp WORD PTR [rdx+0x481dfee1]
   14001ed1b:	sub    DWORD PTR [rcx+0x69],esp
   14001ed1e:	jns    0x14001ed21
   14001ed20:	xor    al,0x3b
   14001ed22:	xchg   BYTE PTR [rcx-0x66e71c67],dl
   14001ed28:	sbb    al,BYTE PTR [rbp-0x31]
   14001ed2b:	int3   
   14001ed2c:	imul   eax,esp,0x558459a5
   14001ed32:	jmp    0xdd2e3522
   14001ed37:	jnp    0x14001ece3
   14001ed39:	add    BYTE PTR [rcx-0xe],cl
   14001ed3c:	and    DWORD PTR [rax-0x76],ebp
   14001ed3f:	outs   dx,DWORD PTR ds:[rsi]
   14001ed40:	lock data16 sahf 
   14001ed43:	push   rcx
   14001ed44:	stos   DWORD PTR es:[rdi],eax
   14001ed45:	std    
   14001ed46:	retf   0x1f02
   14001ed49:	add    cl,BYTE PTR [rdx]
   14001ed4b:	mov    ebp,DWORD PTR [rip+0xffffffff92467c15]        # 0xd2486966
   14001ed51:	cdq    
   14001ed52:	(bad)  
   14001ed53:	out    dx,eax
   14001ed54:	rex.WB cmp al,0x1a
   14001ed57:	fisttp DWORD PTR [rdi-0x40b24dd0]
   14001ed5d:	(bad)  
   14001ed5f:	stos   BYTE PTR es:[rdi],al
   14001ed60:	rex.WR clc 
   14001ed62:	rex.RB push r8
   14001ed64:	lods   al,BYTE PTR ds:[rsi]
   14001ed65:	ror    BYTE PTR [rdi],cl
   14001ed67:	and    al,0x9
   14001ed69:	(bad)  
   14001ed6a:	xor    eax,ebx
   14001ed6c:	mov    esi,0x5070a3b9
   14001ed71:	mov    edi,0x92042f3f
   14001ed76:	adc    DWORD PTR [rbp+rdx*8-0x26f2bbeb],eax
   14001ed7d:	add    eax,0xad5b0143
   14001ed82:	(bad)  
   14001ed83:	add    eax,0xf5ad1d27
   14001ed88:	push   rdi
   14001ed89:	pop    rcx
   14001ed8a:	sub    BYTE PTR [rdx+rcx*1+0x3f],dl
   14001ed8e:	adc    eax,eax
   14001ed90:	xchg   ecx,eax
   14001ed91:	std    
   14001ed92:	jl     0x14001edc2
   14001ed94:	cld    
   14001ed95:	(bad)  
   14001ed96:	movsxd esp,DWORD PTR [rax+0xff91b0a]
   14001ed9c:	sub    cl,BYTE PTR [rsi+riz*8]
   14001ed9f:	retf   0x5ae9
   14001eda2:	sub    DWORD PTR [rsi+rdx*8+0x11835cbc],0xffffffc8
   14001edaa:	rex.X (bad) 
   14001edac:	out    0x2d,eax
   14001edae:	cld    
   14001edaf:	jg     0x14001ee04
   14001edb1:	sbb    ah,BYTE PTR [rsi+0x6e]
   14001edb4:	cdq    
   14001edb5:	xchg   ecx,eax
   14001edb6:	rex.WRB or r13b,BYTE PTR [r11+0x563397c0]
   14001edbd:	pop    rdi
   14001edbe:	xchg   esp,eax
   14001edbf:	jge    0x14001edc7
   14001edc1:	sbb    DWORD PTR [rsi+0xac9c624],ebx
   14001edc7:	test   esp,esp
   14001edc9:	jnp    0x14001ee2e
   14001edcb:	stc    
   14001edcc:	jae    0x14001ee09
   14001edce:	jl     0x14001ee01
   14001edd0:	push   rax
   14001edd1:	rex.R sub eax,0x88d01387
   14001edd7:	adc    BYTE PTR [rbx-0x790e857f],0x78
   14001edde:	mov    bh,0x39
   14001ede0:	mov    ecx,0xf78105fa
   14001ede5:	pop    rdi
   14001ede6:	rex.WRX imul r11,QWORD PTR [rdi-0x3],0x14
   14001edeb:	test   BYTE PTR [rbp+0x3207be2],0x5f
   14001edf2:	pop    rsi
   14001edf3:	add    eax,0x9c9f3c00
   14001edf8:	xor    DWORD PTR [rsi*2-0x1d3b3714],0xd4fe9d4
   14001ee03:	sbb    eax,0x3d0aa4b8
   14001ee08:	mov    ebp,0x62390337
   14001ee0d:	push   rbx
   14001ee0e:	sub    ebx,esp
   14001ee10:	rex.WRXB (bad) 
   14001ee12:	std    
   14001ee13:	or     ebp,ebp
   14001ee15:	lahf   
   14001ee16:	cmp    bh,dl
   14001ee18:	ror    BYTE PTR [rbx-0x17],1
   14001ee1b:	test   BYTE PTR [rax],bh
   14001ee1d:	nop
   14001ee1e:	or     DWORD PTR [rdx-0x4],ecx
   14001ee21:	add    DWORD PTR [rax+0x3065d9c4],ecx
   14001ee27:	(bad)  
   14001ee28:	leave  
   14001ee29:	(bad)  
   14001ee2a:	and    edx,DWORD PTR [rbx-0x2cacfc60]
   14001ee30:	and    DWORD PTR [rdx-0x2b],ecx
   14001ee33:	fucomi st,st(0)
   14001ee35:	movsxd edi,DWORD PTR [rax]
   14001ee37:	stc    
   14001ee38:	hlt    
   14001ee39:	and    edi,DWORD PTR [rax+0x7a]
   14001ee3c:	fcomip st,st(5)
   14001ee3e:	call   0x14c3cec9f
   14001ee43:	div    edi
   14001ee45:	movabs eax,ds:0x27b3401797161269
   14001ee4e:	xor    BYTE PTR [rdx],dh
   14001ee50:	xor    eax,DWORD PTR [rsi-0x76ce361f]
   14001ee56:	cmc    
   14001ee57:	(bad)  
   14001ee58:	int    0xc8
   14001ee5a:	(bad)  
   14001ee5b:	(bad)  
   14001ee5c:	fwait
   14001ee5d:	sub    ecx,DWORD PTR [rax]
   14001ee5f:	sbb    rsi,QWORD PTR [r15+0x10]
   14001ee63:	stos   DWORD PTR es:[rdi],eax
   14001ee64:	lock or ebx,ebx
   14001ee67:	pop    rdi
   14001ee68:	or     bh,BYTE PTR [rdi-0x398b07cb]
   14001ee6e:	pop    rdi
   14001ee6f:	out    0x7c,eax
   14001ee71:	scas   al,BYTE PTR es:[rdi]
   14001ee72:	mov    esi,0x51788d23
   14001ee77:	fwait
   14001ee78:	icebp  
   14001ee79:	xlat   BYTE PTR ds:[rbx]
   14001ee7a:	iret   
   14001ee7b:	retf   0x1d46
   14001ee7e:	outs   dx,BYTE PTR ds:[rsi]
   14001ee7f:	icebp  
   14001ee80:	cmc    
   14001ee81:	jmp    QWORD PTR [rax-0x557dcafb]
   14001ee87:	(bad)
   14001ee8a:	xor    dh,BYTE PTR [rax]
   14001ee8c:	push   rdi
   14001ee8d:	out    dx,al
   14001ee8e:	add    eax,0xdf647e11
   14001ee93:	pop    rdi
   14001ee94:	movabs al,ds:0xbdacf040dd92f07a
   14001ee9d:	mov    BYTE PTR [rdx],ah
   14001ee9f:	jmp    0x14001eef0
   14001eea1:	xchg   ebx,eax
   14001eea2:	jle    0x14001ee48
   14001eea4:	rol    bh,1
   14001eea6:	pop    rsp
   14001eea7:	or     eax,0xbd2a23f1
   14001eeac:	jle    0x14001ee79
   14001eeae:	(bad)  
   14001eeaf:	jo     0x14001eee8
   14001eeb1:	and    ah,BYTE PTR [rcx+riz*8+0x34]
   14001eeb5:	(bad)  
   14001eeb6:	(bad)  
   14001eeb7:	clc    
   14001eeb8:	or     edx,DWORD PTR [rsi+rdx*8]
   14001eebb:	(bad)  
   14001eebc:	(bad)  
   14001eebd:	repz sbb eax,0x5067f809
   14001eec3:	or     eax,0x5126bc59
   14001eec8:	add    cl,BYTE PTR [rsi-0x17]
   14001eecb:	mov    edx,0xd9a8e05b
   14001eed0:	out    0x8a,eax
   14001eed2:	xor    edi,edx
   14001eed4:	xor    cl,al
   14001eed6:	xor    bh,BYTE PTR [rax]
   14001eed8:	test   eax,0x8ddc339f
   14001eedd:	xchg   edx,eax
   14001eede:	push   rsi
   14001eedf:	ins    BYTE PTR es:[rdi],dx
   14001eee0:	test   BYTE PTR [rdx-0x4a6ec2e8],bl
   14001eee6:	cmp    DWORD PTR [rbx],ecx
   14001eee8:	or     DWORD PTR [rdi+0xd5ad0c3],ecx
   14001eeee:	adc    edx,edi
   14001eef0:	call   0x149e5f0ee
   14001eef5:	rex.B leave 
   14001eef7:	cvtps2pi mm2,QWORD PTR [rdi]
   14001eefa:	xchg   ecx,eax
   14001eefb:	xor    eax,DWORD PTR [rsi]
   14001eefd:	ins    DWORD PTR es:[rdi],dx
   14001eefe:	out    0xb9,al
   14001ef00:	ins    DWORD PTR es:[rdi],dx
   14001ef01:	xchg   edi,eax
   14001ef02:	jns    0x14001ef61
   14001ef04:	pop    rsp
   14001ef05:	push   rbx
   14001ef06:	jle    0x14001eea7
   14001ef08:	scas   eax,DWORD PTR es:[rdi]
   14001ef09:	(bad)  
   14001ef0a:	neg    dl
   14001ef0c:	fist   WORD PTR [rdx-0x18]
   14001ef0f:	rex.RB fidivr DWORD PTR [r8-0x7cc178f9]
   14001ef16:	out    dx,eax
   14001ef17:	movabs eax,ds:0xe5b84bcbbfce8840
   14001ef20:	push   rbp
   14001ef21:	rex.WRX (bad) 
   14001ef23:	(bad)  
   14001ef24:	push   rbp
   14001ef25:	cli    
   14001ef26:	xlat   BYTE PTR ds:[rbx]
   14001ef27:	sar    DWORD PTR [rdi-0x4216462],1
   14001ef2d:	ret    
   14001ef2e:	out    dx,eax
   14001ef2f:	sbb    ebx,edx
   14001ef31:	jg     0x14001eefc
   14001ef33:	mov    edi,0xab2e10a1
   14001ef38:	cmp    BYTE PTR [rcx],ah
   14001ef3a:	xor    al,dl
   14001ef3c:	and    eax,0x240f29d9
   14001ef41:	(bad)  
   14001ef42:	lods   al,BYTE PTR ds:[rsi]
   14001ef43:	(bad)  
   14001ef44:	and    esi,DWORD PTR [rdx-0xe]
   14001ef47:	or     al,0x2a
   14001ef49:	or     DWORD PTR [rip+0x40236826],eax        # 0x180255775
   14001ef4f:	and    DWORD PTR [rsi],edx
   14001ef51:	cmp    DWORD PTR [rdi],edi
   14001ef53:	jbe    0x14001eedb
   14001ef55:	mov    al,0xff
   14001ef57:	data16 std 
   14001ef59:	sub    DWORD PTR [rcx-0x1dca75e2],ebp
   14001ef5f:	(bad)  
   14001ef60:	sbb    bh,BYTE PTR [rdx-0x38fc8071]
   14001ef66:	(bad)  
   14001ef67:	(bad)  
   14001ef68:	xor    BYTE PTR [rsi-0x1b],bh
   14001ef6b:	ins    DWORD PTR es:[rdi],dx
   14001ef6c:	fdiv   DWORD PTR [rcx-0x20]
   14001ef6f:	rex.WX or al,0x56
   14001ef72:	add    ebx,ebp
   14001ef74:	fld    QWORD PTR [rbp+rax*4-0x165bba1b]
   14001ef7b:	xor    DWORD PTR [rsp+rcx*8-0x3b3738e3],ecx
   14001ef82:	sub    BYTE PTR [rdx-0x59],bh
   14001ef85:	rex.WRX and BYTE PTR [rsi],r13b
   14001ef88:	(bad)  
   14001ef89:	and    BYTE PTR [rsi],ch
   14001ef8b:	iret   
   14001ef8c:	add    DWORD PTR [rbx],ebx
   14001ef8e:	sub    esp,DWORD PTR [rax-0x4025e4c]
   14001ef94:	lods   al,BYTE PTR ds:[rsi]
   14001ef95:	js     0x14001ef5e
   14001ef97:	rex.X jge 0x14001efdb
   14001ef9a:	jrcxz  0x14001ef98
   14001ef9c:	lods   al,BYTE PTR ds:[rsi]
   14001ef9d:	cmp    eax,0xf58ad0fd
   14001efa2:	cmp    ebp,esp
   14001efa4:	(bad)  
   14001efa5:	in     eax,dx
   14001efa6:	scas   al,BYTE PTR es:[rdi]
   14001efa7:	xchg   esi,eax
   14001efa8:	pop    rbx
   14001efa9:	es mov edi,0xce6f4b7
   14001efaf:	in     eax,0x9
   14001efb1:	enter  0xfff1,0x42
   14001efb5:	clc    
   14001efb6:	movabs ds:0x908c89904209bf09,eax
   14001efbf:	jge    0x14001f039
   14001efc1:	rex.WXB (bad) 
   14001efc3:	or     dl,BYTE PTR [rcx+0x3d84dd5a]
   14001efc9:	(bad)  
   14001efca:	mov    bh,0xa5
   14001efcc:	(bad)  
   14001efcd:	addr32 in eax,0xcc
   14001efd0:	(bad)  
   14001efd1:	and    edx,DWORD PTR [rbp+rbp*2+0x65]
   14001efd5:	push   rbp
   14001efd6:	(bad)  
   14001efd7:	mov    ch,0xf8
   14001efd9:	jp     0x14001ef78
   14001efdb:	push   rbp
   14001efdc:	mov    WORD PTR [rdx],ds
   14001efde:	(bad)  
   14001efdf:	push   rsp
   14001efe0:	push   rdi
   14001efe1:	and    DWORD PTR [rsi],eax
   14001efe3:	sub    DWORD PTR [rbx],esp
   14001efe5:	ss (bad) 
   14001efe7:	movabs al,ds:0xfa419fe6504008a
   14001eff0:	adc    DWORD PTR [rax+rdi*4-0x5f],0x12098aca
   14001eff8:	adc    eax,0xa1de3a88
   14001effd:	sub    DWORD PTR [rax],edx
   14001efff:	(bad)  
   14001f000:	call   0xece5437e
   14001f005:	and    eax,0x47b5bd5
   14001f00a:	xchg   esi,eax
   14001f00b:	fwait
   14001f00c:	adc    eax,0xc2a4a500
   14001f011:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f012:	xchg   edx,eax
   14001f013:	stos   BYTE PTR es:[rdi],al
   14001f014:	stc    
   14001f015:	(bad)  
   14001f016:	call   0x143173240
   14001f01b:	push   si
   14001f01d:	(bad)  
   14001f01e:	xor    BYTE PTR [rbx-0x52b09968],bh
   14001f024:	ror    cl,1
   14001f026:	mov    cl,0x45
   14001f028:	cmp    bh,dl
   14001f02a:	in     al,dx
   14001f02b:	pop    rsp
   14001f02c:	ja     0x14001f09a
   14001f02e:	jl     0x14001f069
   14001f030:	rex.WRB lods al,BYTE PTR ds:[rsi]
   14001f032:	xor    eax,0x1a36561
   14001f037:	div    DWORD PTR [rdx]
   14001f039:	ja     0x14001f081
   14001f03b:	push   0xc
   14001f03d:	pop    rbp
   14001f03e:	fisttp QWORD PTR [rdi-0x69]
   14001f041:	sbb    al,0xee
   14001f043:	rcl    BYTE PTR [rbp-0xd08bc05],1
   14001f049:	fst    QWORD PTR [rcx-0x2759130a]
   14001f04f:	loope  0x14001f057
   14001f051:	pop    rax
   14001f052:	fldenv [rsp+rbp*2+0x36]
   14001f056:	mov    WORD PTR [rsi+0x17705d61],fs
   14001f05c:	mov    dl,0xf8
   14001f05e:	lods   eax,DWORD PTR ds:[rsi]
   14001f05f:	es or  eax,0xf968625
   14001f065:	rex.WXB adc bl,BYTE PTR [r10+0x62]
   14001f069:	rex.X
   14001f06a:	rex.WX push rdx
   14001f06c:	(bad)  
   14001f06d:	outs   dx,BYTE PTR ds:[rsi]
   14001f06e:	xlat   BYTE PTR ds:[rbx]
   14001f06f:	popf   
   14001f070:	push   rdi
   14001f071:	adc    DWORD PTR [rcx+rsi*4+0x1834f5b7],0xffffff82
   14001f079:	jle    0x14001f08d
   14001f07b:	add    ecx,DWORD PTR [rbp-0x3e]
   14001f07e:	jmp    0x13fe3b3fe
   14001f083:	out    0x3f,al
   14001f085:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f087:	movsxd edx,DWORD PTR [rax+0x5d7df6]
   14001f08d:	lods   al,BYTE PTR ds:[rsi]
   14001f08e:	xor    eax,0xfedce73b
   14001f093:	jbe    0x14001f0aa
   14001f095:	sub    BYTE PTR [rbp-0x5e],0x8
   14001f099:	ins    BYTE PTR es:[rdi],dx
   14001f09a:	fsub   DWORD PTR [rbp+0x4a14617]
   14001f0a0:	cs mov ebx,0xaf2bb6f9
   14001f0a6:	mov    eax,0xd77fe6e1
   14001f0ab:	rcr    ebx,cl
   14001f0ad:	sti    
   14001f0ae:	(bad)  
   14001f0af:	adc    DWORD PTR cs:[rdx+0x1c00fa35],eax
   14001f0b6:	loop   0x14001f0eb
   14001f0b8:	and    al,0x4f
   14001f0ba:	mov    esi,0x8daeeb72
   14001f0bf:	(bad)  
   14001f0c0:	adc    dl,BYTE PTR [rax-0x5f]
   14001f0c3:	add    DWORD PTR [rbx],edi
   14001f0c5:	icebp  
   14001f0c6:	xchg   edi,eax
   14001f0c7:	or     edi,DWORD PTR [rax+0x24]
   14001f0ca:	icebp  
   14001f0cb:	test   al,0x91
   14001f0cd:	mov    esi,0x98f50a01
   14001f0d2:	adc    ebp,DWORD PTR [rax-0x6233df16]
   14001f0d8:	(bad)  
   14001f0d9:	retf   0x5fc3
   14001f0dc:	(bad)  
   14001f0dd:	mov    bl,0xf5
   14001f0df:	and    dh,ah
   14001f0e1:	scas   eax,DWORD PTR es:[rdi]
   14001f0e2:	jge    0x14001f107
   14001f0e4:	jbe    0x14001f075
   14001f0e6:	in     al,dx
   14001f0e7:	rex.XB pop r15
   14001f0e9:	adc    eax,0xc5d1bab0
   14001f0ee:	cld    
   14001f0ef:	retf   0x3022
   14001f0f2:	xor    ecx,DWORD PTR [rsi+0x3147d39d]
   14001f0f8:	xor    dh,BYTE PTR [rbx+0x2]
   14001f0fb:	jge    0x14001f090
   14001f0fd:	(bad)  
   14001f0fe:	push   rax
   14001f0ff:	(bad)  
   14001f100:	rex.WR retf 
   14001f102:	and    bl,BYTE PTR [rsi-0x4b5f3415]
   14001f108:	add    eax,0xf920aa0d
   14001f10e:	hlt    
   14001f10f:	xor    eax,0x26534d27
   14001f114:	pop    rcx
   14001f115:	mov    ebx,0x543df48f
   14001f11a:	lock test eax,0x4ffafd80
   14001f120:	push   rsp
   14001f121:	add    eax,0xa5f27d26
   14001f126:	cdq    
   14001f127:	fs (bad) 
   14001f129:	in     al,0xa
   14001f12b:	mov    bpl,0xfc
   14001f12e:	xchg   ecx,eax
   14001f12f:	add    dl,BYTE PTR [rax-0x3f429e28]
   14001f135:	jae    0x14001f17c
   14001f137:	pcmpgtd mm7,mm1
   14001f13a:	mov    esp,cs
   14001f13c:	and    esi,ebx
   14001f13e:	iret   
   14001f13f:	retf   
   14001f140:	ins    BYTE PTR es:[rdi],dx
   14001f141:	(bad)  
   14001f142:	sub    edi,0xffffff9a
   14001f145:	test   BYTE PTR [rbx+rsi*4],dl
   14001f148:	movabs ds:0xad004f72f284a2a8,al
   14001f151:	out    0x8b,al
   14001f153:	mov    edx,0xc2b68016
   14001f158:	scas   al,BYTE PTR es:[rdi]
   14001f159:	(bad)  
   14001f15a:	push   rsi
   14001f15b:	(bad)  
   14001f15c:	stos   BYTE PTR es:[rdi],al
   14001f15d:	ret    0x43a8
   14001f160:	test   al,0x82
   14001f163:	scas   al,BYTE PTR es:[rdi]
   14001f164:	sbb    DWORD PTR [rax-0x16],eax
   14001f167:	sub    dl,BYTE PTR [rax+0x60c5ff57]
   14001f16d:	jo     0x14001f14e
   14001f16f:	test   BYTE PTR [rdi+0x43f045],dl
   14001f175:	and    bh,BYTE PTR [rbx+0x31]
   14001f178:	or     eax,0x982cb413
   14001f17d:	or     al,0x6a
   14001f17f:	enter  0xab98,0x2
   14001f183:	loopne 0x14001f1a7
   14001f185:	mov    WORD PTR [rcx+0x73],gs
   14001f188:	ror    DWORD PTR [rax],0x37
   14001f18b:	jns    0x14001f1fb
   14001f18d:	lock mov edx,0xb03296fd
   14001f193:	leave  
   14001f194:	xchg   ebx,eax
   14001f195:	pop    rax
   14001f196:	(bad)  
   14001f197:	add    cl,BYTE PTR [rcx+0x31]
   14001f19a:	out    dx,eax
   14001f19b:	nop
   14001f19c:	int3   
   14001f19d:	xchg   edi,eax
   14001f19e:	xchg   DWORD PTR [rsi-0x59],ecx
   14001f1a1:	jrcxz  0x14001f202
   14001f1a3:	cmp    edi,DWORD PTR [rsi-0x646c7207]
   14001f1a9:	std    
   14001f1aa:	idiv   edi
   14001f1ac:	xchg   edi,eax
   14001f1ad:	movabs ds:0x8650c7abc5cf83d5,eax
   14001f1b6:	fidiv  DWORD PTR [rsi-0x3f95f2ee]
   14001f1bc:	jbe    0x14001f22d
   14001f1be:	pushf  
   14001f1bf:	sbb    bh,BYTE PTR [rsi-0x5]
   14001f1c2:	shr    ah,0x6b
   14001f1c5:	scas   eax,DWORD PTR es:[rdi]
   14001f1c6:	movabs ds:0xeddeff103f5e3bc5,al
   14001f1cf:	std    
   14001f1d0:	loope  0x14001f187
   14001f1d2:	jne    0x14001f1d6
   14001f1d4:	push   rsi
   14001f1d5:	(bad)  
   14001f1d6:	test   BYTE PTR [rbp+0x4e0028ae],cl
   14001f1dc:	mov    WORD PTR [rsi+0x57],gs
   14001f1df:	sbb    eax,0x813994cf
   14001f1e4:	test   BYTE PTR [rsp+rdx*8-0x1a69dbbc],al
   14001f1eb:	fstp   QWORD PTR [rdx]
   14001f1ed:	mov    ebp,0x93904960
   14001f1f2:	sbb    ecx,DWORD PTR [rax]
   14001f1f4:	or     eax,esp
   14001f1f6:	and    BYTE PTR [rax-0x29],cl
   14001f1f9:	mov    bl,ch
   14001f1fb:	adc    al,BYTE PTR [rcx]
   14001f1fd:	rex.WRB ret 
   14001f1ff:	cmp    BYTE PTR [rbp-0x43],cl
   14001f202:	push   rsi
   14001f204:	(bad)  
   14001f205:	jo     0x14001f1f2
   14001f207:	out    dx,eax
   14001f208:	rex.X adc al,0x80
   14001f20b:	lods   al,BYTE PTR ds:[rsi]
   14001f20c:	and    eax,0x518af8
   14001f211:	rex test eax,0x9590804
   14001f217:	cwde   
   14001f218:	and    ch,al
   14001f21a:	jmp    0x1bfd3ca38
   14001f21f:	retf   
   14001f220:	fucomp st(7)
   14001f222:	dec    ecx
   14001f224:	(bad)  
   14001f225:	movabs eax,ds:0x599dd876891f3f5d
   14001f22e:	and    eax,0xa3a02461
   14001f233:	mov    esi,0x3774ab18
   14001f238:	add    BYTE PTR [rdx],ch
   14001f23a:	outs   dx,BYTE PTR ds:[rsi]
   14001f23b:	(bad)  
   14001f23c:	stos   DWORD PTR es:[rdi],eax
   14001f23d:	repz cwde 
   14001f23f:	cmc    
   14001f240:	iret   
   14001f241:	scas   al,BYTE PTR es:[rdi]
   14001f242:	jle    0x14001f216
   14001f244:	rcr    BYTE PTR [rcx+rdi*4],1
   14001f247:	push   rdx
   14001f248:	movabs al,ds:0x8fb3d4c1bfb18110
   14001f251:	(bad)  
   14001f252:	je     0x14001f238
   14001f254:	jb     0x14001f2ca
   14001f256:	scas   eax,DWORD PTR es:[rdi]
   14001f257:	mov    esp,0x7707bb05
   14001f25c:	movabs ds:0x5a5c58366f2c626,al
   14001f265:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f266:	mov    ecx,0x1e9e1813
   14001f26b:	ret    
   14001f26c:	lock hlt 
   14001f26e:	or     esp,esi
   14001f270:	int    0x8c
   14001f272:	and    ecx,esi
   14001f274:	rex.WRXB movabs rax,ds:0x3ad2065b58479e5a
   14001f27e:	sub    cl,bl
   14001f280:	loope  0x14001f2a9
   14001f282:	in     eax,dx
   14001f283:	loop   0x14001f250
   14001f285:	sbb    cl,BYTE PTR [rdi-0x19]
   14001f288:	rex.RX jnp 0x14001f283
   14001f28b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f28c:	mov    bl,0x8
   14001f28e:	mov    edi,0x4607612
   14001f293:	rex.WRB
   14001f294:	rex.WR loop 0x14001f25f
   14001f297:	pop    rsi
   14001f298:	out    0xef,eax
   14001f29a:	mov    ecx,0x19c8462f
   14001f29f:	(bad)  
   14001f2a0:	sub    BYTE PTR [rax+rcx*8],0xa2
   14001f2a4:	or     BYTE PTR [rcx+rbx*8+0x0],al
   14001f2a8:	rex.RX (bad) 
   14001f2aa:	mov    eax,esi
   14001f2ac:	(bad)  
   14001f2ad:	xor    al,0xde
   14001f2af:	(bad)  
   14001f2b0:	je     0x14001f27f
   14001f2b2:	(bad)  
   14001f2b3:	xchg   ebp,eax
   14001f2b4:	sub    DWORD PTR [rdi],edx
   14001f2b6:	(bad)  
   14001f2b7:	and    BYTE PTR [rcx-0x1bea3d43],ch
   14001f2bd:	cmp    al,0x0
   14001f2bf:	imul   ecx
   14001f2c1:	mov    DWORD PTR [rsp+rdi*2-0x1a021428],esp
   14001f2c8:	pop    rdx
   14001f2c9:	push   0x47
   14001f2cb:	or     esp,DWORD PTR [rdx-0x27ad5c4]
   14001f2d1:	xchg   ebp,eax
   14001f2d2:	xchg   BYTE PTR [rbp*1+0x1cc6384d],cl
   14001f2d9:	(bad)  
   14001f2da:	sbb    BYTE PTR [rsi+0x29b47493],0x0
   14001f2e1:	mov    dh,0xa6
   14001f2e3:	pop    rcx
   14001f2e4:	mov    ecx,0x32ab00be
   14001f2e9:	add    BYTE PTR [rsi+0x2df0452c],0xe7
   14001f2f0:	(bad)  
   14001f2f1:	sbb    DWORD PTR [rcx],ecx
   14001f2f3:	push   0xffffffffca76488e
   14001f2f8:	xor    eax,DWORD PTR [rdi]
   14001f2fa:	(bad)  
   14001f2fb:	or     al,al
   14001f2fd:	ss xchg edi,eax
   14001f2ff:	mov    ah,BYTE PTR [rsi+rdi*8]
   14001f302:	jle    0x14001f32b
   14001f304:	xor    dh,dl
   14001f306:	mov    edx,0xd1e5f9bc
   14001f30b:	hlt    
   14001f30c:	rol    bh,0x9f
   14001f30f:	movabs eax,ds:0x5edfabefb6b63f8f
   14001f318:	fidivr DWORD PTR [rbx+0xa]
   14001f31b:	jns    0x14001f2da
   14001f31d:	or     al,0xa3
   14001f31f:	cld    
   14001f320:	push   rdx
   14001f321:	stc    
   14001f322:	jae    0x14001f301
   14001f324:	mov    dh,0x1a
   14001f326:	scas   eax,DWORD PTR es:[rdi]
   14001f327:	or     BYTE PTR [rax],ah
   14001f329:	(bad)  
   14001f32a:	(bad)  
   14001f32b:	in     al,dx
   14001f32c:	shr    BYTE PTR [rbx+0x4e60d2],1
   14001f332:	add    BYTE PTR [rax],ah
   14001f334:	add    BYTE PTR [rcx+0x44],cl
   14001f337:	push   r12
   14001f339:	or     eax,0x7fb6ec69
   14001f33e:	xor    BYTE PTR [rax-0xa485e07],bh
   14001f344:	loope  0x14001f314
   14001f346:	and    DWORD PTR [rax+0x60],esp
   14001f349:	cmp    DWORD PTR [rip+0x6a40366c],esp        # 0x1aa4229bb
   14001f34f:	cmp    bh,dl
   14001f351:	or     ah,BYTE PTR [rbx+riz*8]
   14001f354:	scas   al,BYTE PTR es:[rdi]
   14001f355:	adc    bl,BYTE PTR [rax-0x6fb65fd]
   14001f35b:	rcr    ah,1
   14001f35d:	add    eax,0x2de7b93d
   14001f362:	mov    al,0xe4
   14001f364:	mov    esp,0x111b278
   14001f369:	ffree  st(4)
   14001f36b:	fadd   DWORD PTR [rax-0x8]
   14001f36e:	(bad)  
   14001f36f:	inc    DWORD PTR [rbx+rbx*1+0xc31ec7e]
   14001f376:	(bad)  
   14001f377:	rex.XB sub sil,BYTE PTR [r11+0x1b]
   14001f37b:	cmp    al,0xf8
   14001f37d:	jnp    0x14001f388
   14001f37f:	out    0xd9,eax
   14001f381:	mov    esi,0x7000147f
   14001f386:	es xchg edi,eax
   14001f388:	(bad)  
   14001f389:	sbb    ebx,DWORD PTR [rdx]
   14001f38b:	mov    eax,0xb8efade1
   14001f390:	ins    DWORD PTR es:[rdi],dx
   14001f391:	fbld   TBYTE PTR [rbp+0x57]
   14001f394:	jmp    FWORD PTR [rdx-0x54]
   14001f397:	jmp    0x14001f3b4
   14001f399:	cdq    
   14001f39a:	and    eax,0x486a3ff7
   14001f39f:	xor    BYTE PTR [rax+0x26e81b9d],al
   14001f3a5:	or     DWORD PTR [rdi+0xe8a3711],ebp
   14001f3ab:	hlt    
   14001f3ac:	mov    DWORD PTR [rbx+0x45f2581],esp
   14001f3b2:	xor    al,0xa
   14001f3b4:	stos   DWORD PTR es:[rdi],eax
   14001f3b5:	add    BYTE PTR [rdx-0x7e4447cb],cl
   14001f3bb:	out    0xc9,al
   14001f3bd:	sti    
   14001f3be:	jno    0x14001f43c
   14001f3c0:	jb     0x14001f3c4
   14001f3c2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f3c3:	(bad)  
   14001f3c4:	mov    edi,0xae073d19
   14001f3c9:	ret    0xbeae
   14001f3cc:	pop    rsi
   14001f3cd:	add    al,0x30
   14001f3cf:	xchg   esi,eax
   14001f3d0:	ss mov edx,0x45e5c58
   14001f3d6:	data16 rex.WRXB (bad) 
   14001f3d9:	jo     0x14001f3d1
   14001f3db:	cmp    BYTE PTR [rsi-0x5a],al
   14001f3de:	(bad)  
   14001f3df:	movabs ds:0xac21cdf966a4f26f,eax
   14001f3e8:	sub    eax,0x8eb3423
   14001f3ed:	fidivr WORD PTR [rax-0x37c0d2bd]
   14001f3f3:	pop    rbx
   14001f3f4:	jns    0x14001f43b
   14001f3f6:	pop    rbp
   14001f3f7:	mov    esp,0x185402b3
   14001f3fc:	push   rax
   14001f3fd:	mov    ah,0xe6
   14001f3ff:	(bad)  
   14001f400:	in     al,dx
   14001f401:	jns    0x14001f3f9
   14001f403:	stc    
   14001f404:	and    eax,0x3f2c56e5
   14001f409:	jns    0x14001f3d9
   14001f40b:	mov    eax,0xbfca7e58
   14001f410:	and    eax,DWORD PTR [rcx+0x43a05688]
   14001f416:	(bad)  
   14001f417:	jmp    FWORD PTR [rdi+0x9]
   14001f41a:	xchg   BYTE PTR ds:[rdx],ah
   14001f41d:	and    ah,BYTE PTR [rdx-0x59bb1d79]
   14001f423:	xor    dh,ah
   14001f425:	mov    bh,0x42
   14001f427:	(bad)  
   14001f428:	sbb    BYTE PTR [rbx+0x7601f96f],dh
   14001f42e:	or     al,0xd6
   14001f430:	or     BYTE PTR [rbp-0xbd940f7],al
   14001f436:	pop    rax
   14001f437:	(bad)
   14001f43a:	adc    edi,esi
   14001f43c:	sbb    al,0xfa
   14001f43e:	adc    esp,DWORD PTR [rdx+0x54549490]
   14001f444:	rex.RB adc al,0x5
   14001f447:	(bad)  
   14001f448:	(bad)  
   14001f44a:	movabs eax,ds:0xf1fa801d68443c96
   14001f453:	push   0xfffffffffffffff1
   14001f455:	lods   eax,DWORD PTR ds:[rsi]
   14001f456:	hlt    
   14001f457:	(bad)  
   14001f458:	js     0x14001f45e
   14001f45a:	(bad)  
   14001f45b:	rex.XB fidivr DWORD PTR [rip+0x39805c95]        # 0x1798250f7
   14001f462:	je     0x14001f3e6
   14001f464:	pop    rax
   14001f465:	mov    esp,0xadb5248f
   14001f46a:	(bad)  
   14001f46b:	ins    DWORD PTR es:[rdi],dx
   14001f46c:	fwait
   14001f46d:	in     eax,dx
   14001f46e:	mov    esp,ss
   14001f470:	adc    BYTE PTR [rsi-0x460fd82],bh
   14001f476:	stos   DWORD PTR es:[rdi],eax
   14001f477:	rcr    DWORD PTR [rsi-0x2e6201c1],1
   14001f47d:	stos   DWORD PTR es:[rdi],eax
   14001f47e:	mov    esi,0x5d9eb102
   14001f483:	std    
   14001f484:	cmp    ebx,DWORD PTR [rbx-0x5fb56810]
   14001f48a:	xor    al,0x5c
   14001f48c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f48d:	adc    dh,BYTE PTR [rax]
   14001f48f:	add    edx,DWORD PTR [rsi-0x41]
   14001f492:	xor    eax,0xf86f13d
   14001f497:	or     eax,0xbbc4fd2c
   14001f49c:	cli    
   14001f49d:	jo     0x14001f4d6
   14001f49f:	adc    dl,bl
   14001f4a1:	push   0xffffffffffffffc3
   14001f4a3:	mov    al,0x9c
   14001f4a5:	xor    esp,DWORD PTR [rsi-0x55]
   14001f4a8:	and    eax,0x62607092
   14001f4ad:	rex.X push rdx
   14001f4af:	add    al,cl
   14001f4b1:	rex.WRXB
   14001f4b2:	rex.RX test BYTE PTR [rsi+0x14254f33],r8b
   14001f4b9:	rex.X adc sil,BYTE PTR [rdi]
   14001f4bc:	rex rol DWORD PTR [rax-0x69],1
   14001f4c0:	mov    cl,0xf1
   14001f4c2:	or     BYTE PTR [rip+0xfffffffff897e07d],cl        # 0x13899d545
   14001f4c8:	xor    eax,0xe594875f
   14001f4cd:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001f4cf:	loopne 0x14001f54a
   14001f4d1:	push   rax
   14001f4d2:	ror    bl,0x4f
   14001f4d5:	add    bl,BYTE PTR [rsi-0x74e18495]
   14001f4db:	xchg   esp,eax
   14001f4dc:	rex.WR (bad) 
   14001f4de:	jnp    0x14001f4ce
   14001f4e0:	(bad)  
   14001f4e1:	shr    ah,cl
   14001f4e3:	hlt    
   14001f4e4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f4e5:	xchg   dh,dh
   14001f4e7:	(bad)  
   14001f4e8:	call   0x117a0927c
   14001f4ed:	push   rbp
   14001f4ee:	add    al,0xaa
   14001f4f0:	pop    rax
   14001f4f1:	enter  0x1334,0x7e
   14001f4f5:	stos   DWORD PTR es:[rdi],eax
   14001f4f6:	sub    DWORD PTR [rax-0x34db3f98],ecx
   14001f4fc:	push   rdi
   14001f4fd:	pop    rcx
   14001f4fe:	imul   esp,DWORD PTR [rbp-0x2ebd8569],0xadd0a842
   14001f508:	sti    
   14001f509:	ror    bl,0xd3
   14001f50c:	pop    rax
   14001f50d:	jl     0x14001f50b
   14001f50f:	fwait
   14001f510:	cmp    BYTE PTR [rdx-0x4a233a2a],dh
   14001f516:	ja     0x14001f578
   14001f518:	clc    
   14001f519:	shl    ch,0x18
   14001f51c:	jmp    0xf18a760e
   14001f521:	mov    ah,0xb1
   14001f523:	mov    DWORD PTR [rbp-0x19ffa3b],eax
   14001f529:	and    al,0x86
   14001f52b:	mov    fs,WORD PTR [ebx+0x68]
   14001f52f:	mul    BYTE PTR [rdx+rdi*8]
   14001f532:	data16 rex.WRX movabs rax,ds:0xbeb5405e5c419c5a
   14001f53d:	mov    eax,cs
   14001f53f:	fwait
   14001f540:	mov    dl,bl
   14001f542:	mov    dl,0xab
   14001f544:	push   rsi
   14001f545:	jg     0x14001f586
   14001f547:	and    ah,ah
   14001f549:	cs mov esi,0x2a43d856
   14001f54f:	cld    
   14001f550:	jo     0x14001f5a0
   14001f552:	or     ebx,DWORD PTR [rsi+0x21]
   14001f555:	push   rdi
   14001f556:	adc    BYTE PTR [rsi-0x54],bh
   14001f559:	test   BYTE PTR [rdi+0x2241ec2f],bl
   14001f55f:	nop
   14001f560:	xchg   ecx,eax
   14001f561:	sub    al,0xd1
   14001f563:	rex.RXB adc DWORD PTR [r8-0x1d14a03e],r8d
   14001f56a:	jrcxz  0x14001f505
   14001f56c:	jle    0x14001f5d2
   14001f56e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f56f:	pop    rsi
   14001f570:	(bad)  
   14001f571:	rol    DWORD PTR [rbx-0x72],0x12
   14001f575:	pop    rax
   14001f576:	(bad)  
   14001f577:	jge    0x14001f599
   14001f579:	(bad)  
   14001f57a:	rex.WXB jne 0x14001f558
   14001f57d:	out    0x4a,eax
   14001f57f:	(bad)  
   14001f580:	rex.RX cmc 
   14001f582:	shr    DWORD PTR [rip+0x28542fe3],cl        # 0x16856256b
   14001f588:	repnz adc dl,BYTE PTR [rdx+rdi*8]
   14001f58c:	xchg   DWORD PTR [rdx+rdx*2],ebx
   14001f58f:	or     al,0xda
   14001f591:	and    al,0xc4
   14001f593:	test   bl,bl
   14001f595:	xchg   edx,eax
   14001f596:	lea    eax,[rdx+0x2c]
   14001f599:	and    BYTE PTR [rdi],bh
   14001f59b:	cdq    
   14001f59c:	pop    rbx
   14001f59d:	xchg   edx,eax
   14001f59e:	loope  0x14001f55b
   14001f5a0:	scas   eax,DWORD PTR es:[rdi]
   14001f5a1:	(bad)  
   14001f5a2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f5a3:	or     al,cl
   14001f5a5:	rex.XB jnp 0x14001f56e
   14001f5a8:	adc    DWORD PTR [rax],ebx
   14001f5aa:	push   rsp
   14001f5ab:	jno    0x14001f5ef
   14001f5ad:	shr    dl,1
   14001f5af:	in     al,dx
   14001f5b0:	loope  0x14001f5d8
   14001f5b2:	mov    WORD PTR [rcx+rdi*1-0x26],ss
   14001f5b6:	cs rex.R mov cx,0xea91
   14001f5bc:	or     DWORD PTR [rsi-0xa067060],eax
   14001f5c2:	clc    
   14001f5c3:	sar    BYTE PTR [rdi+0x7c],1
   14001f5c6:	mov    eax,0xfaff6bf3
   14001f5cb:	loope  0x14001f578
   14001f5cd:	jg     0x14001f5ca
   14001f5cf:	(bad)  
   14001f5d0:	mov    ecx,0x4434fdd
   14001f5d5:	addr32 or eax,0xcfed4162
   14001f5db:	adc    al,0x82
   14001f5dd:	sub    DWORD PTR [rbx-0x40290a0e],eax
   14001f5e3:	je     0x14001f58b
   14001f5e5:	out    dx,eax
   14001f5e6:	(bad)  
   14001f5e7:	rcr    DWORD PTR [rsi+0x2f75f713],1
   14001f5ed:	stc    
   14001f5ee:	(bad)  
   14001f5ef:	(bad)  
   14001f5f0:	out    0xdc,al
   14001f5f2:	and    eax,DWORD PTR [rdi+0x2ee97363]
   14001f5f8:	ret    0xd641
   14001f5fb:	add    BYTE PTR [rdi+0xe],bh
   14001f5fe:	or     ecx,edx
   14001f600:	(bad)  
   14001f601:	test   al,0xa2
   14001f603:	iret   
   14001f604:	jge    0x14001f62c
   14001f606:	in     al,0xdf
   14001f608:	fcomp  QWORD PTR [rdi+rsi*4]
   14001f60b:	movabs al,ds:0xdcfd8ebcc8294d2d
   14001f614:	lods   al,BYTE PTR ds:[rsi]
   14001f615:	fisttp WORD PTR [rbx+0xbc39f43]
   14001f61b:	sub    BYTE PTR [rax],dl
   14001f61d:	cli    
   14001f61e:	(bad)  
   14001f61f:	push   rdx
   14001f620:	add    BYTE PTR [rsi+0x2819cf6d],dh
   14001f626:	jge    0x14001f5d7
   14001f628:	mov    ah,0xb2
   14001f62a:	xor    BYTE PTR [rdi-0x3c2709c2],dh
   14001f630:	pop    rdi
   14001f631:	fnstsw WORD PTR [rbp-0x37]
   14001f634:	loope  0x14001f607
   14001f636:	sbb    eax,0x8baf7dbd
   14001f63b:	rex.R or esi,0xfffffff8
   14001f63f:	mov    bl,0x64
   14001f641:	add    DWORD PTR [rsi+0x6e],eax
   14001f644:	(bad)  
   14001f645:	retf   0xe08b
   14001f648:	fld    DWORD PTR [rbx]
   14001f64a:	repz (bad) 
   14001f64c:	mov    cr6,rsp
   14001f64f:	popf   
   14001f650:	pop    rsi
   14001f651:	je     0x14001f6a6
   14001f653:	(bad)  
   14001f654:	int    0x73
   14001f656:	ffreep st(1)
   14001f658:	hlt    
   14001f659:	jae    0x14001f5ea
   14001f65b:	loop   0x14001f645
   14001f65d:	(bad)  
   14001f65e:	ret    
   14001f65f:	rex.W push rdi
   14001f661:	fiadd  WORD PTR [rdx+0x6376bbbd]
   14001f667:	movabs al,ds:0xd2c4db5c58c4e00e
   14001f670:	sar    BYTE PTR [rax+rdi*2],cl
   14001f673:	out    dx,al
   14001f674:	and    al,0x46
   14001f676:	data16 mov fs,WORD PTR [rbx+0x68]
   14001f67a:	data16 sbb al,0x7d
   14001f67d:	mov    bl,0xe3
   14001f67f:	test   al,0x17
   14001f681:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f682:	push   rcx
   14001f683:	lods   eax,DWORD PTR ds:[rsi]
   14001f684:	sub    al,0x20
   14001f686:	scas   al,BYTE PTR es:[rdi]
   14001f687:	(bad)  
   14001f688:	and    esp,DWORD PTR [rsi-0x6e1af68b]
   14001f68e:	and    al,0x1f
   14001f690:	(bad)  
   14001f691:	lods   al,BYTE PTR ds:[rsi]
   14001f692:	sbb    BYTE PTR [rcx-0x6f],r14b
   14001f696:	loopne 0x14001f63b
   14001f698:	or     ah,BYTE PTR [rax-0x57ad76de]
   14001f69e:	jmp    0x14001f6fa
   14001f6a0:	(bad)  
   14001f6a1:	neg    BYTE PTR [rax+0x57e17745]
   14001f6a7:	pop    rsi
   14001f6a8:	ret    0xe9eb
   14001f6ab:	xchg   ecx,eax
   14001f6ac:	test   DWORD PTR [rdi+0x38],ebx
   14001f6af:	add    BYTE PTR [rcx+0x5b7fe614],bl
   14001f6b5:	clc    
   14001f6b6:	iret   
   14001f6b7:	and    DWORD PTR [rbx+rsi*4-0x2207a611],edi
   14001f6be:	out    0x77,eax
   14001f6c0:	clc    
   14001f6c1:	scas   eax,DWORD PTR es:[rdi]
   14001f6c2:	adc    eax,0x39fe647d
   14001f6c7:	adc    eax,0xc756fa79
   14001f6cc:	(bad)  
   14001f6cd:	fsub   st(1),st
   14001f6cf:	(bad)  
   14001f6d0:	sar    BYTE PTR [rax],1
   14001f6d2:	movabs gs:0x899801968aa1eed0,al
   14001f6dc:	rex.W mov dl,sil
   14001f6df:	adc    edx,DWORD PTR [rax]
   14001f6e1:	scas   al,BYTE PTR es:[rdi]
   14001f6e2:	mov    WORD PTR [rsp+riz*8-0x3a3f46f4],ds
   14001f6e9:	jnp    0x14001f6ee
   14001f6eb:	and    bh,BYTE PTR [rax+0x32769360]
   14001f6f1:	push   0xfffffffffffffff9
   14001f6f3:	inc    esp
   14001f6f5:	fst    DWORD PTR [rip+0xe64220]        # 0x140e8391b
   14001f6fb:	in     al,dx
   14001f6fc:	rex.RXB
   14001f6fd:	rex.WRXB cmps BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   14001f700:	cmp    al,0x4a
   14001f702:	retf   
   14001f703:	(bad)  
   14001f704:	out    dx,al
   14001f705:	pop    rsi
   14001f706:	xor    DWORD PTR [rax],0xfffffff3
   14001f709:	int3   
   14001f70a:	(bad)  
   14001f70b:	iret   
   14001f70c:	xchg   edi,edi
   14001f70e:	jmp    0x11b01066a
   14001f713:	rex.RXB (bad) 
   14001f715:	out    dx,eax
   14001f716:	jnp    0x14001f6cc
   14001f718:	loope  0x14001f6ca
   14001f71a:	xchg   BYTE PTR [rsi+rdi*8-0x7331d93b],bh
   14001f721:	add    cl,BYTE PTR [rdx+0x24]
   14001f724:	push   rax
   14001f725:	(bad)  
   14001f726:	xchg   ebp,eax
   14001f727:	repz mov bl,0x29
   14001f72a:	(bad)  
   14001f72b:	(bad)  
   14001f72c:	jg     0x14001f701
   14001f72e:	add    BYTE PTR [rax+0x1e],ch
   14001f731:	rex.WXB jnp 0x14001f6c3
   14001f734:	jge    0x14001f6db
   14001f736:	cmp    esi,esp
   14001f738:	mov    DWORD PTR [rbx+0x8dcf2e3],ebx
   14001f73e:	jne    0x14001f79f
   14001f740:	rex.WRB loopne 0x14001f741
   14001f743:	lods   al,BYTE PTR ds:[rsi]
   14001f744:	add    BYTE PTR [rsp+rbp*4+0x9],al
   14001f748:	cmp    DWORD PTR [rdx-0x7ec9d9ab],ebx
   14001f74e:	(bad)  
   14001f74f:	mov    edx,0xdb2fb2b2
   14001f754:	div    DWORD PTR [rsi+0x6f]
   14001f757:	mov    BYTE PTR [rsi+rsi*8-0x705c17cd],r11b
   14001f75f:	(bad)  
   14001f760:	out    0xb2,eax
   14001f762:	pop    rdi
   14001f763:	sar    DWORD PTR [rcx+0x42],cl
   14001f766:	(bad)  
   14001f767:	fistp  WORD PTR [rdi+0x2e]
   14001f76a:	rcr    BYTE PTR [rcx+0x6104edb6],0xad
   14001f771:	jg     0x14001f790
   14001f773:	add    BYTE PTR [rip+0xffffffffc6faddd7],bh        # 0x106fcd550
   14001f779:	imul   ebp,DWORD PTR [rdi],0x7f
   14001f77c:	(bad)  
   14001f77d:	imul   edi,edi,0x7d
   14001f780:	fucomp st(1)
   14001f782:	mov    ecx,0x1268c193
   14001f787:	push   rax
   14001f788:	xchg   ecx,eax
   14001f789:	mov    al,0xf9
   14001f78b:	fiadd  WORD PTR [rip+0x62003948]        # 0x1a20230d9
   14001f791:	imul   ebp,DWORD PTR [rdx+0x6c2a19b4],0xd4f11ac4
   14001f79b:	rcr    DWORD PTR [rax+0x7d],cl
   14001f79e:	repnz (bad) [rdi]
   14001f7a1:	(bad)  
   14001f7a2:	rcr    DWORD PTR [rcx],1
   14001f7a4:	lahf   
   14001f7a5:	(bad)  
   14001f7a7:	stos   BYTE PTR es:[rdi],al
   14001f7a8:	mov    DWORD PTR [rsi+0x430b7d91],ebx
   14001f7ae:	mov    ebp,0x71d6f41d
   14001f7b3:	push   rdi
   14001f7b4:	rex.XB cmc 
   14001f7b6:	adc    ebp,0xb0b15d26
   14001f7bc:	mov    esp,0x8fcc33b4
   14001f7c1:	movsxd esi,DWORD PTR [rax-0x12]
   14001f7c4:	and    al,0x86
   14001f7c6:	addr32 fs in eax,0xde
   14001f7ca:	push   0x7e
   14001f7cc:	(bad)  
   14001f7cd:	(bad)  
   14001f7ce:	repnz cmp al,0xe2
   14001f7d1:	ficom  DWORD PTR [rdx]
   14001f7d3:	(bad)
   14001f7d8:	mov    WORD PTR cs:[rbx-0x56953378],?
   14001f7df:	xchg   ebx,eax
   14001f7e0:	ss hlt 
   14001f7e2:	(bad)  
   14001f7e3:	jbe    0x14001f7c3
   14001f7e5:	(bad)  
   14001f7e6:	lods   eax,DWORD PTR ds:[rsi]
   14001f7e7:	cmp    edi,ebx
   14001f7e9:	rex.WR scas al,BYTE PTR es:[rdi]
   14001f7eb:	mov    eax,0x3b7e5893
   14001f7f0:	(bad)  
   14001f7f1:	(bad)  
   14001f7f2:	jo     0x14001f7c3
   14001f7f4:	lea    ebx,[rdi]
   14001f7f6:	sub    BYTE PTR [rdi+0x1],al
   14001f7f9:	(bad)  
   14001f7fa:	rex.WX
   14001f7fb:	rex.XB fstp QWORD PTR [r14-0x4d]
   14001f7ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f800:	es (bad) 
   14001f802:	out    0xf3,al
   14001f804:	sbb    ebp,DWORD PTR [rdx+0x4b5fc670]
   14001f80a:	or     BYTE PTR [rbx-0x1f],0xf
   14001f80e:	outs   dx,BYTE PTR ds:[rsi]
   14001f80f:	lods   eax,DWORD PTR ds:[rsi]
   14001f810:	fcmovnb st,st(2)
   14001f812:	pop    rdi
   14001f813:	data16 sti 
   14001f815:	push   rcx
   14001f816:	fs neg ebp
   14001f819:	sub    eax,0xc72d17b4
   14001f81e:	fist   WORD PTR [rcx-0x55e9d27a]
   14001f824:	rex.WX sub cl,BYTE PTR [rdx-0x675975ee]
   14001f82b:	add    ch,BYTE PTR [rbx]
   14001f82d:	cmp    dl,BYTE PTR [rax-0x6e]
   14001f830:	(bad)  
   14001f832:	in     eax,dx
   14001f833:	sbb    al,0x58
   14001f835:	enter  0x233f,0x4
   14001f839:	rex.WXB neg r15b
   14001f83c:	xchg   esp,eax
   14001f83d:	(bad)  
   14001f83e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f83f:	(bad)  
   14001f840:	retf   
   14001f841:	ret    
   14001f842:	nop
   14001f843:	jns    0x14001f892
   14001f845:	add    DWORD PTR [rsi-0x26ba83c4],ebp
   14001f84b:	adc    BYTE PTR [rax+0xb],ah
   14001f84e:	(bad)  
   14001f84f:	popf   
   14001f850:	sub    eax,0x11b0b00a
   14001f855:	mov    edi,0x9dd1d1f6
   14001f85a:	mov    edi,0x75be6ff5
   14001f85f:	loopne 0x14001f892
   14001f861:	pushf  
   14001f862:	fxch   st(2)
   14001f864:	xchg   edi,eax
   14001f865:	ret    0x980d
   14001f868:	add    al,0x3e
   14001f86a:	cmovb  ebp,DWORD PTR [rbp-0x19309e90]
   14001f871:	adc    bl,al
   14001f873:	fsub   st(5),st
   14001f875:	stc    
   14001f876:	push   rdi
   14001f877:	cmp    eax,0x7f7aafa3
   14001f87c:	cwde   
   14001f87d:	cld    
   14001f87e:	vpaddq ymm7,ymm12,YMMWORD PTR [rbp+rdi*1+0x1e5010f7]
   14001f887:	rex or eax,0xc2f86257
   14001f88d:	xor    al,0xc
   14001f88f:	rex.X movabs ds:0x4b959922a4981297,eax
   14001f899:	sub    BYTE PTR [rax],0xd2
   14001f89c:	es xor esi,eax
   14001f89f:	mov    ecx,0x33fd5ff7
   14001f8a4:	mov    edx,0x3cf10ff5
   14001f8a9:	leave  
   14001f8aa:	shr    bh,0x7f
   14001f8ad:	add    eax,0x208d9c00
   14001f8b2:	xor    al,0x25
   14001f8b4:	rcr    BYTE PTR [rcx],1
   14001f8b6:	sbb    al,0xd9
   14001f8b8:	cmp    eax,0xef5dcb78
   14001f8bd:	cld    
   14001f8be:	cdq    
   14001f8bf:	mov    esi,0x117fa1c1
   14001f8c4:	cmp    DWORD PTR [rsi],0xaa8d0cb
   14001f8ca:	ins    BYTE PTR es:[rdi],dx
   14001f8cb:	xchg   ebp,eax
   14001f8cc:	add    BYTE PTR [rax+rdx*2+0x44],ch
   14001f8d0:	xor    DWORD PTR [rax-0x6b87394e],0x1f
   14001f8d7:	cli    
   14001f8d8:	fdiv   QWORD PTR [rdi]
   14001f8da:	data16 lahf 
   14001f8dc:	jp     0x14001f8d2
   14001f8de:	fist   DWORD PTR [rbx-0x662e712b]
   14001f8e4:	rex.WRB cmp r10b,BYTE PTR [r13-0x74c9c9ca]
   14001f8eb:	xor    edx,DWORD PTR [rdx-0x21]
   14001f8ee:	scas   al,BYTE PTR es:[rdi]
   14001f8ef:	mov    ebp,0xae87bdfd
   14001f8f4:	mov    eax,0xede27434
   14001f8f9:	rex.XB retf 
   14001f8fb:	push   rbx
   14001f8fc:	out    dx,eax
   14001f8fd:	fnstsw WORD PTR [rip+0xffffffffbe96ea7f]        # 0xfe98e382
   14001f903:	mov    ecx,0x4fcf50f1
   14001f908:	and    DWORD PTR [rsi],ebp
   14001f90a:	movabs al,cs:0x5742a2aeec445b5e
   14001f914:	mov    dl,0xf8
   14001f916:	xor    al,0xdc
   14001f918:	sub    BYTE PTR [rsi+rbx*2+0x18f24042],ah
   14001f91f:	mov    edi,0x5f94b045
   14001f924:	sub    edi,DWORD PTR [rdx-0xacc6f10]
   14001f92a:	xor    ch,cl
   14001f92c:	and    eax,0xf6c61795
   14001f931:	(bad)  
   14001f932:	jb     0x14001f913
   14001f934:	fild   WORD PTR [rip+0xffffffff8e5d0dd9]        # 0xce5f0713
   14001f93a:	stos   DWORD PTR es:[rdi],eax
   14001f93b:	sbb    esp,DWORD PTR [rdx]
   14001f93d:	add    BYTE PTR [rsp+rax*8],ch
   14001f940:	xchg   esi,eax
   14001f941:	sub    eax,0xcab6407a
   14001f946:	xchg   edx,eax
   14001f947:	push   rax
   14001f948:	(bad)  
   14001f949:	cmp    esi,edx
   14001f94b:	(bad)  
   14001f94c:	in     eax,0x7b
   14001f94e:	mov    dl,0xf7
   14001f950:	data16 stc 
   14001f952:	leave  
   14001f953:	mov    al,BYTE PTR [rbx-0x75947de0]
   14001f959:	rex.WX fld QWORD PTR [rdx+r9*2-0x6375fe6f]
   14001f961:	add    DWORD PTR [rbx-0x4e952bc4],ecx
   14001f967:	mov    bh,0x36
   14001f969:	std    
   14001f96a:	hlt    
   14001f96b:	movsxd ebx,DWORD PTR [rax+0x6f]
   14001f96e:	jge    0x14001f958
   14001f970:	jge    0x14001f99a
   14001f972:	rex.WB or BYTE PTR [r15+0x2],bpl
   14001f976:	(bad)  
   14001f977:	(bad)  
   14001f978:	movabs al,ds:0xcfec1a2817f5735a
   14001f981:	add    al,0xa0
   14001f983:	(bad)  
   14001f984:	jp     0x14001f910
   14001f986:	retf   0x780d
   14001f989:	imul   esi,eax,0x36
   14001f98c:	or     DWORD PTR [rax],ecx
   14001f98e:	stc    
   14001f98f:	fs jrcxz 0x14001f96b
   14001f992:	test   esi,ecx
   14001f994:	jg     0x14001f990
   14001f996:	test   eax,0xbbf43ebf
   14001f99b:	(bad)  
   14001f99c:	int3   
   14001f99d:	imul   BYTE PTR [rsi]
   14001f99f:	and    BYTE PTR [rbx],cl
   14001f9a1:	(bad)  
   14001f9a2:	push   rsi
   14001f9a3:	loope  0x14001f974
   14001f9a5:	movabs al,ds:0xb02be7d9fd08f9fc
   14001f9ae:	pop    rbp
   14001f9af:	adc    DWORD PTR [rdx+rax*8-0x122b3c24],esi
   14001f9b6:	push   QWORD PTR [rax-0x19]
   14001f9b9:	icebp  
   14001f9ba:	(bad)  
   14001f9bb:	mov    edi,0x3e7ed686
   14001f9c0:	xor    BYTE PTR [rdi],cl
   14001f9c2:	and    eax,0xd272070d
   14001f9c7:	inc    BYTE PTR [rax+0x1176197a]
   14001f9cd:	(bad)  
   14001f9ce:	adc    dl,BYTE PTR [rsp+rax*8-0x70]
   14001f9d2:	cld    
   14001f9d3:	jnp    0x14001fa2a
   14001f9d5:	adc    ah,cl
   14001f9d7:	pop    rax
   14001f9d8:	rex.RB clc 
   14001f9da:	loop   0x14001fa0b
   14001f9dc:	repnz imul edi,edi,0xffffffdb
   14001f9e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001f9e1:	xor    DWORD PTR [rax-0x9],esp
   14001f9e4:	js     0x14001fa34
   14001f9e6:	xor    dh,al
   14001f9e8:	xchg   ebp,eax
   14001f9e9:	movabs eax,ds:0x151ae8411b38000
   14001f9f2:	hlt    
   14001f9f3:	fdiv   st(2),st
   14001f9f5:	mov    dh,0x77
   14001f9f7:	mov    esi,0x43c1ef65
   14001f9fc:	mov    edi,0x1d7d6212
   14001fa01:	adc    eax,edx
   14001fa03:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fa04:	mov    BYTE PTR [rdx-0x5aa3f77b],bl
   14001fa0a:	cmp    BYTE PTR [rbx-0x20894544],bh
   14001fa10:	int3   
   14001fa11:	leave  
   14001fa12:	mov    cl,0x3f
   14001fa14:	jnp    0x14001fa00
   14001fa16:	scas   eax,DWORD PTR es:[rdi]
   14001fa17:	mov    edi,0xcce30f0
   14001fa1c:	in     eax,dx
   14001fa1d:	ins    BYTE PTR es:[rdi],dx
   14001fa1e:	fld    TBYTE PTR [rdx-0x9281443]
   14001fa24:	ja     0x14001fa05
   14001fa26:	mov    ecx,0x3fe4ee7b
   14001fa2b:	out    dx,eax
   14001fa2c:	lods   al,BYTE PTR ds:[rsi]
   14001fa2d:	int3   
   14001fa2e:	(bad)  
   14001fa30:	pop    rcx
   14001fa31:	pop    rbp
   14001fa32:	rex fcomp QWORD PTR [rbp+rax*2-0x3b]
   14001fa37:	pop    rbp
   14001fa38:	push   rsp
   14001fa39:	(bad)  
   14001fa3a:	or     cl,cl
   14001fa3c:	mov    edx,0xfd8d24f8
   14001fa41:	addr32 mov dl,0xcf
   14001fa44:	or     DWORD PTR [rip+0x2a116a15],esi        # 0x16a13645f
   14001fa4a:	sub    DWORD PTR [rbp-0x3ecf13da],0xe03c05f3
   14001fa54:	jno    0x14001fa51
   14001fa56:	sbb    al,0xf6
   14001fa58:	retf   
   14001fa59:	movabs eax,fs:0x5df8633ea169e22d
   14001fa63:	clc    
   14001fa64:	xor    ecx,0x5
   14001fa67:	(bad)  
   14001fa68:	xor    ebx,edx
   14001fa6a:	ja     0x14001f9ec
   14001fa6c:	sti    
   14001fa6d:	cmc    
   14001fa6e:	fnstenv [rdx]
   14001fa70:	(bad)  
   14001fa71:	push   rcx
   14001fa72:	add    eax,0xc960d815
   14001fa77:	sbb    DWORD PTR ds:[rip+0xffffffff96e58bfa],0xefcf466c        # 0xd6e7867c
   14001fa82:	push   rdi
   14001fa83:	mul    DWORD PTR [rbx]
   14001fa85:	sbb    bh,BYTE PTR [rdi-0x60]
   14001fa88:	test   al,0x82
   14001fa8a:	stos   BYTE PTR es:[rdi],al
   14001fa8b:	cld    
   14001fa8c:	cmp    dl,BYTE PTR [rsi-0x38]
   14001fa8f:	mov    al,0x1f
   14001fa91:	stos   BYTE PTR es:[rdi],al
   14001fa92:	add    BYTE PTR [rsi+rdx*4],dl
   14001fa95:	mov    bl,0xde
   14001fa97:	(bad)  
   14001fa98:	sub    DWORD PTR [rbx],ebx
   14001fa9a:	push   0xffffffffffffffbe
   14001fa9c:	(bad)  
   14001fa9d:	ss rex sub ecx,DWORD PTR ds:[rbx]
   14001faa2:	add    eax,0x30029bf2
   14001faa7:	clc    
   14001faa8:	retf   
   14001faa9:	test   DWORD PTR [rbx],esp
   14001faab:	sbb    esi,edx
   14001faad:	addr32 mov dh,0xf
   14001fab0:	add    ebx,DWORD PTR [rbx]
   14001fab2:	movsxd r11,DWORD PTR [rdi+0x3a]
   14001fab6:	xor    eax,0xf8ff6bf0
   14001fabb:	mov    edx,DWORD PTR [rdi+0x19621e7e]
   14001fac1:	rex.WXB loope 0x14001faa3
   14001fac4:	rex.WRX
   14001fac5:	bnd jge 0x14001fa77
   14001fac8:	(bad)  
   14001fac9:	jg     0x14001fa71
   14001facb:	lods   eax,DWORD PTR ds:[rsi]
   14001facc:	lea    esp,[rax-0x31]
   14001facf:	rex.R ins BYTE PTR es:[rdi],dx
   14001fad1:	ja     0x14001fb51
   14001fad3:	mov    ebp,0xbbb6f67e
   14001fad8:	ret    0x6fdc
   14001fadb:	hlt    
   14001fadc:	jb     0x14001fad5
   14001fade:	xor    eax,0x1baac6e2
   14001fae3:	rex
   14001fae4:	lock jo 0x14001fa86
   14001fae7:	test   eax,0x2f6f4683
   14001faec:	rex push rax
   14001faee:	and    ah,0xbf
   14001faf1:	mov    al,0x67
   14001faf3:	and    DWORD PTR [rdi-0x67],esi
   14001faf6:	mov    ebx,0x7bc8d10f
   14001fafb:	jle    0x14001fa96
   14001fafd:	pop    rdi
   14001fafe:	std    
   14001faff:	rex.WRB in al,0x9c
   14001fb02:	xor    BYTE PTR [rbx-0x60207e6e],0x1c
   14001fb09:	rcr    BYTE PTR [rcx-0x7bec8c4a],0x9
   14001fb10:	sbb    dil,BYTE PTR [rdi]
   14001fb13:	cli    
   14001fb14:	fdivr  st(1),st
   14001fb16:	xchg   ebp,eax
   14001fb17:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fb18:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001fb19:	rex.WRXB out dx,al
   14001fb1b:	cmp    BYTE PTR [rax+0x68],dh
   14001fb1e:	cwde   
   14001fb1f:	cmp    edi,DWORD PTR [rbp-0x7f791551]
   14001fb25:	outs   dx,BYTE PTR ds:[rsi]
   14001fb26:	ret    
   14001fb27:	(bad)  
   14001fb28:	(bad)  
   14001fb29:	push   rdi
   14001fb2a:	(bad)  
   14001fb2b:	jmp    FWORD PTR [rax-0x14]
   14001fb2e:	test   eax,0xd1f37e27
   14001fb33:	iret   
   14001fb34:	jge    0x14001fb18
   14001fb36:	movabs ds:0x4afec2592d4763d3,eax
   14001fb3f:	sbb    BYTE PTR [rax+0x1f73ffd5],bh
   14001fb45:	jo     0x14001fba9
   14001fb47:	xor    edi,DWORD PTR [rbx+rdi*4]
   14001fb4a:	rex popf 
   14001fb4c:	rex.WRXB out dx,al
   14001fb4e:	pop    rdx
   14001fb4f:	popf   
   14001fb50:	pop    rcx
   14001fb51:	out    dx,eax
   14001fb52:	pop    rbp
   14001fb53:	pop    rdi
   14001fb54:	mov    esp,0x4b5346a9
   14001fb59:	cmp    al,0x5f
   14001fb5b:	jb     0x14001fb56
   14001fb5d:	sub    ebp,DWORD PTR [rdx+0x64]
   14001fb60:	add    DWORD PTR [rdi],ecx
   14001fb62:	retf   
   14001fb63:	out    dx,al
   14001fb64:	and    esp,DWORD PTR [rcx]
   14001fb66:	sti    
   14001fb67:	lods   al,BYTE PTR ds:[rsi]
   14001fb68:	movabs ds:0xc27ad1d9b32f844f,al
   14001fb71:	xchg   ebp,eax
   14001fb72:	ret    0x640f
   14001fb75:	rex.W int 0x4a
   14001fb78:	rol    cl,cl
   14001fb7a:	rex.W cmp al,0x72
   14001fb7d:	loope  0x14001fb36
   14001fb7f:	js     0x14001fb3c
   14001fb81:	or     BYTE PTR [rbp-0x10],bl
   14001fb84:	push   rax
   14001fb85:	lahf   
   14001fb86:	cmc    
   14001fb87:	(bad)  
   14001fb88:	unpcklps xmm6,XMMWORD PTR [rbp+0x30e7013]
   14001fb8f:	rex.RX sub r10b,BYTE PTR [rsi]
   14001fb92:	out    0xf0,al
   14001fb94:	adc    eax,0x9f63337d
   14001fb99:	xchg   ebx,eax
   14001fb9a:	jle    0x14001fbc0
   14001fb9c:	sbb    BYTE PTR [rbx],r13b
   14001fb9f:	rex.WRB adc BYTE PTR [r10-0x1f],r10b
   14001fba3:	mov    tr7,esp
   14001fba6:	or     sil,r8b
   14001fba9:	sbb    DWORD PTR [rax-0x16acf35a],edx
   14001fbaf:	rex.WX
   14001fbb0:	repnz xor DWORD PTR fs:[rax],ebx
   14001fbb4:	imul   ecx,DWORD PTR [r10],0x9bcd1484
   14001fbbb:	lock (bad) 
   14001fbbd:	or     al,BYTE PTR [rax+0x7b00cf8a]
   14001fbc3:	scas   eax,DWORD PTR es:[rdi]
   14001fbc4:	popf   
   14001fbc5:	jno    0x14001fc14
   14001fbc7:	sbb    DWORD PTR [rax+0x15],eax
   14001fbca:	or     BYTE PTR [rsi],0xba
   14001fbcd:	pop    rbx
   14001fbce:	js     0x14001fc43
   14001fbd0:	add    eax,0x33e9b2c8
   14001fbd5:	xlat   BYTE PTR ds:[rbx]
   14001fbd6:	xor    edi,DWORD PTR [rdi+0x3bf6bf19]
   14001fbdc:	rex.WRXB out dx,al
   14001fbde:	cli    
   14001fbdf:	test   edi,edi
   14001fbe1:	icebp  
   14001fbe2:	inc    BYTE PTR [rbx-0x41f7bff1]
   14001fbe8:	rcl    bh,cl
   14001fbea:	(bad)  
   14001fbeb:	sub    eax,0x5fe08bf
   14001fbf0:	pop    rax
   14001fbf1:	jno    0x14001fbaa
   14001fbf3:	mov    ch,0x9d
   14001fbf5:	addr32 (bad) 
   14001fbf7:	add    ah,al
   14001fbf9:	(bad)  
   14001fbfa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001fbfb:	pop    rbp
   14001fbfc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fbfd:	(bad)  
   14001fbfe:	jb     0x14001fbdf
   14001fc00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fc01:	outs   dx,BYTE PTR ds:[rsi]
   14001fc02:	or     DWORD PTR [rbx+0x79a9fafb],ecx
   14001fc08:	xor    eax,0x156fd33b
   14001fc0d:	(bad)  
   14001fc0e:	jp     0x14001fbab
   14001fc10:	neg    dl
   14001fc12:	call   0xd40248a7
   14001fc17:	or     edx,ebx
   14001fc19:	xchg   BYTE PTR [rsi-0x12],bh
   14001fc1c:	scas   al,BYTE PTR es:[rdi]
   14001fc1d:	fisttp QWORD PTR [rbx-0x30d7a0bd]
   14001fc23:	jno    0x14001fbdb
   14001fc25:	sti    
   14001fc26:	jp     0x14001fc0d
   14001fc28:	and    BYTE PTR [rax+0x12eedb72],al
   14001fc2e:	ins    BYTE PTR es:[rdi],dx
   14001fc2f:	in     eax,0x6
   14001fc31:	(bad)  
   14001fc32:	pop    rbx
   14001fc33:	fdivrp st(3),st
   14001fc35:	pandn  mm1,mm6
   14001fc38:	int3   
   14001fc39:	jno    0x14001fc27
   14001fc3b:	mov    cl,0x87
   14001fc3d:	out    dx,eax
   14001fc3e:	lahf   
   14001fc3f:	(bad)  
   14001fc40:	cmp    esi,DWORD PTR [rdx+0x5b50b680]
   14001fc46:	xor    eax,ebp
   14001fc48:	(bad)  
   14001fc49:	cmp    ch,BYTE PTR [rdi]
   14001fc4b:	xor    BYTE PTR [rsi+0x286db648],dl
   14001fc51:	rex (bad) 
   14001fc53:	fnstsw WORD PTR [rcx+0x6fbbea7d]
   14001fc59:	ds mov esp,0xf6bffe32
   14001fc5f:	jo     0x14001fc58
   14001fc61:	or     cl,BYTE PTR [rcx-0x4e1cbc0]
   14001fc67:	pop    QWORD PTR [rax+0x4cadca5a]
   14001fc6d:	(bad)  
   14001fc6e:	gs call 0x15bf78582
   14001fc74:	in     al,dx
   14001fc75:	and    eax,0x4f935d26
   14001fc7a:	or     al,BYTE PTR [rax+rax*1+0x4264008b]
   14001fc81:	rex.WRB out 0x7f,al
   14001fc84:	adc    edx,ebp
   14001fc86:	push   rbx
   14001fc87:	ja     0x14001fc09
   14001fc89:	or     eax,0xb30a93ea
   14001fc8e:	mov    edx,0x59b0a50a
   14001fc93:	(bad)  
   14001fc94:	(bad)  
   14001fc95:	sub    edi,ebp
   14001fc97:	adc    eax,0xd0b50064
   14001fc9c:	rex.X sbb BYTE PTR [rdx-0x6c],bl
   14001fca0:	rex iret 
   14001fca2:	imul   ebx,ecx,0x87bbea7a
   14001fca8:	and    BYTE PTR [rbx+0x41a45914],ch
   14001fcae:	sar    BYTE PTR [rdi-0x70],1
   14001fcb1:	sahf   
   14001fcb2:	add    eax,DWORD PTR [rbp+0x3c9227b5]
   14001fcb8:	add    DWORD PTR [rdi-0x6],ecx
   14001fcbb:	add    DWORD PTR [rbp+rcx*1-0x40],edi
   14001fcbf:	xor    dh,ah
   14001fcc1:	rex.RXB add BYTE PTR [r10-0x7b09e88f],r10b
   14001fcc8:	lods   eax,DWORD PTR ds:[rsi]
   14001fcc9:	rex.WR pop rcx
   14001fccb:	mov    DWORD PTR [rax+0x43],eax
   14001fcce:	add    eax,0x3ffe140
   14001fcd3:	movabs al,ds:0xac2b0b14816165a0
   14001fcdc:	xor    cl,BYTE PTR [rbp-0x2fd446c0]
   14001fce2:	in     al,0x66
   14001fce4:	cmc    
   14001fce5:	(bad)  
   14001fce6:	(bad)  
   14001fce7:	div    DWORD PTR [rbp-0x605407d]
   14001fced:	icebp  
   14001fcee:	sbb    eax,0x5f82c833
   14001fcf3:	sub    dh,BYTE PTR [rsi+0x39]
   14001fcf6:	rol    BYTE PTR [rbp-0x2518074c],0xce
   14001fcfd:	outs   dx,DWORD PTR ds:[rsi]
   14001fcff:	or     eax,0xdbdef40d
   14001fd04:	jns    0x14001fcee
   14001fd06:	pop    rdi
   14001fd07:	(bad)  
   14001fd08:	out    0x8d,al
   14001fd0a:	lahf   
   14001fd0b:	(bad)  
   14001fd0c:	push   rbx
   14001fd0d:	rex.W in al,dx
   14001fd0f:	and    eax,0x6ad99e70
   14001fd14:	cdq    
   14001fd15:	add    BYTE PTR [rax-0x46f1e434],0xdd
   14001fd1c:	cwde   
   14001fd1d:	std    
   14001fd1e:	ins    DWORD PTR es:[rdi],dx
   14001fd1f:	xor    BYTE PTR [rdi+0x7b2f847e],cl
   14001fd25:	out    0x9f,eax
   14001fd27:	loopne 0x14001fcf9
   14001fd29:	cmp    dh,cl
   14001fd2b:	xchg   ebx,eax
   14001fd2c:	sbb    eax,edi
   14001fd2e:	retf   0x41
   14001fd31:	in     eax,0xb6
   14001fd33:	pop    rbp
   14001fd34:	stos   DWORD PTR es:[rdi],eax
   14001fd35:	fisubr DWORD PTR [rbx-0x2d]
   14001fd38:	js     0x14001fd17
   14001fd3a:	push   rbx
   14001fd3b:	iret   
   14001fd3c:	cmp    al,0xf1
   14001fd3e:	int3   
   14001fd3f:	test   eax,0x6a789e67
   14001fd44:	jne    0x14001fda7
   14001fd46:	outs   dx,BYTE PTR ds:[rsi]
   14001fd47:	or     ecx,ebx
   14001fd49:	retf   0xc59b
   14001fd4c:	(bad)  
   14001fd4d:	(bad)  
   14001fd4e:	rex.B test eax,0xf2c4ce0c
   14001fd54:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001fd55:	lods   eax,DWORD PTR ds:[rsi]
   14001fd56:	fistp  WORD PTR [rdi+0x227fdfe8]
   14001fd5c:	jb     0x14001fd58
   14001fd5e:	fidivr DWORD PTR [rsi+0x7b9bf9f5]
   14001fd64:	rcr    ch,1
   14001fd66:	(bad)  
   14001fd67:	mov    ecx,0x2fd585fe
   14001fd6c:	test   bh,bl
   14001fd6e:	jb     0x14001fd62
   14001fd70:	mov    ebp,0x71320f0a
   14001fd75:	leave  
   14001fd76:	(bad)  
   14001fd77:	ins    BYTE PTR es:[rdi],dx
   14001fd78:	js     0x14001fd5a
   14001fd7a:	mov    ?,WORD PTR [rbx+0xf7125f5]
   14001fd80:	rex.WR clc 
   14001fd82:	add    DWORD PTR [rcx+0x8],edx
   14001fd85:	mov    cl,0x52
   14001fd87:	add    DWORD PTR [rcx+rsi*4+0x7abaede8],0xb901489
   14001fd92:	push   rsi
   14001fd93:	xor    al,0xc2
   14001fd95:	rex.WRXB std 
   14001fd97:	clc    
   14001fd98:	sub    bl,BYTE PTR [rax+0x53]
   14001fd9b:	rex.WRXB movabs r8,0x130a21a27ad5b685
   14001fda5:	(bad)  
   14001fda6:	adc    eax,0xb04e3b7e
   14001fdab:	fs lahf 
   14001fdad:	(bad)  
   14001fdae:	retf   0x9a02
   14001fdb1:	in     eax,dx
   14001fdb2:	(bad)  
   14001fdb3:	ja     0x14001fdbc
   14001fdb5:	mov    esp,0x15c02076
   14001fdba:	push   rbp
   14001fdbb:	fdecstp 
   14001fdbd:	retf   
   14001fdbe:	jae    0x14001fdd6
   14001fdc0:	fdiv   st(2),st
   14001fdc2:	(bad)  
   14001fdc4:	stc    
   14001fdc5:	cmp    esp,ebx
   14001fdc7:	rex.X cwde 
   14001fdc9:	sub    al,0xa2
   14001fdcb:	push   rcx
   14001fdcc:	mov    eax,0x3b3c8002
   14001fdd1:	rex rol DWORD PTR [rcx-0x1de08f],1
   14001fdd8:	(bad)  
   14001fdd9:	add    eax,0x5cba3c36
   14001fdde:	std    
   14001fddf:	ficomp WORD PTR [rbp-0x9]
   14001fde2:	pop    rbp
   14001fde3:	cmc    
   14001fde4:	jmp    0x14001fe65
   14001fde6:	xor    edx,edi
   14001fde8:	cmp    ecx,DWORD PTR [rdi-0x15320694]
   14001fdee:	addr32 xchg edi,eax
   14001fdf0:	out    dx,eax
   14001fdf1:	in     eax,0x12
   14001fdf3:	jle    0x14001fdd5
   14001fdf5:	mov    esp,0xe0016c2b
   14001fdfa:	jnp    0x14001fd97
   14001fdfc:	add    ecx,DWORD PTR [rdi]
   14001fdfe:	mov    esp,0x1a9dce39
   14001fe03:	movabs eax,ds:0x839a6ab5149337cd
   14001fe0c:	repnz sbb eax,0x430fd1c8
   14001fe12:	add    dh,cl
   14001fe14:	adc    al,0x68
   14001fe16:	or     BYTE PTR [rcx+0x697b4318],bl
   14001fe1c:	jrcxz  0x14001fdc7
   14001fe1e:	mov    edi,0xcb4781c0
   14001fe23:	movsxd ebx,DWORD PTR [rdi+0x32bc0509]
   14001fe29:	adc    DWORD PTR [rax-0x47],eax
   14001fe2c:	popf   
   14001fe2d:	fld    st(7)
   14001fe2f:	mov    dl,0xd7
   14001fe31:	mov    dh,0x9d
   14001fe33:	sub    eax,0x9f76737c
   14001fe38:	scas   eax,DWORD PTR es:[rdi]
   14001fe39:	rex.WRB in al,0xd8
   14001fe3c:	icebp  
   14001fe3d:	rex.WX
   14001fe3e:	repnz mov cl,0xe7
   14001fe41:	mov    edx,0xef87a385
   14001fe46:	cwde   
   14001fe47:	jnp    0x14001fe3d
   14001fe49:	ret    
   14001fe4a:	std    
   14001fe4b:	mov    esp,0xf0456b71
   14001fe50:	(bad)  
   14001fe51:	ds rex.RX
   14001fe53:	sbb    r10,QWORD PTR [rcx]
   14001fe56:	(bad)  
   14001fe57:	(bad)  
   14001fe58:	scas   eax,DWORD PTR es:[rdi]
   14001fe59:	sub    DWORD PTR [rdi-0x55],esi
   14001fe5c:	(bad)  
   14001fe5d:	cdq    
   14001fe5e:	add    esi,eax
   14001fe60:	lods   al,BYTE PTR ds:[rsi]
   14001fe61:	cmp    eax,0xadff4213
   14001fe66:	push   0xffffffffa4d58379
   14001fe6b:	adc    edi,DWORD PTR [rsi]
   14001fe6d:	scas   al,BYTE PTR es:[rdi]
   14001fe6f:	(bad)  
   14001fe70:	loop   0x14001fe61
   14001fe72:	out    0x8b,al
   14001fe74:	xchg   edi,eax
   14001fe75:	xor    eax,0x3f09c1fd
   14001fe7a:	retf   0x3921
   14001fe7d:	fist   DWORD PTR [rdi-0x75]
   14001fe80:	js     0x14001fe2e
   14001fe82:	rol    DWORD PTR [rdi+0x7ef1ff75],1
   14001fe88:	add    BYTE PTR [rdx+0x3f3ee3ec],bl
   14001fe8e:	cdq    
   14001fe8f:	jmp    0x14001fe23
   14001fe91:	mov    ecx,0x62006f05
   14001fe96:	(bad)  
   14001fe97:	or     eax,0x8b14309a
   14001fe9c:	jrcxz  0x14001fea2
   14001fe9e:	and    ebp,DWORD PTR [rip+0x3fbc0d59]        # 0x17fbe0bfd
   14001fea4:	sbb    BYTE PTR [rax-0x23],bh
   14001fea7:	jg     0x14001fefe
   14001fea9:	(bad)  
   14001feaa:	hlt    
   14001feab:	adc    eax,0xeced4525
   14001feb0:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001feb2:	adc    DWORD PTR [rdx],eax
   14001feb4:	mul    bh
   14001feb6:	add    edx,DWORD PTR [rdx+0x1bee4ee8]
   14001febc:	rol    BYTE PTR [rip+0xffffffff88802366],0x9f        # 0xc8822229
   14001fec3:	pop    rax
   14001fec4:	call   0x12f811ec5
   14001fec9:	adc    edx,DWORD PTR [rdi-0x3]
   14001fecc:	(bad)  
   14001fecd:	shl    DWORD PTR fs:[rdi],0x17
   14001fed1:	(bad)  
   14001fed2:	adc    edi,DWORD PTR [rbp+0x2f]
   14001fed5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fed6:	loopne 0x14001fe77
   14001fed8:	imul   ebx,ebx,0x3e4b6f3e
   14001fede:	stos   DWORD PTR es:[rdi],eax
   14001fedf:	idiv   DWORD PTR [rdi]
   14001fee1:	(bad)  
   14001fee2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001fee3:	(bad)  
   14001fee5:	(bad)  
   14001fee6:	(bad)  
   14001fee7:	std    
   14001fee8:	fild   QWORD PTR [rdx-0x1a]
   14001feeb:	and    DWORD PTR [rdx],0xfffffff5
   14001feee:	cmp    DWORD PTR [rcx],esi
   14001fef0:	enter  0xb026,0xd1
   14001fef4:	sbb    eax,0xb645b56
   14001fef9:	mov    esp,DWORD PTR [rsi+rax*1]
   14001fefc:	push   rsi
   14001fefd:	cmp    BYTE PTR [rcx+rsi*8-0x61],bh
   14001ff01:	loope  0x14001fed9
   14001ff03:	(bad)  
   14001ff04:	fwait
   14001ff05:	rex.RB mov r13d,0x8190738c
   14001ff0b:	scas   eax,DWORD PTR es:[rdi]
   14001ff0c:	rex.WR add al,0x50
   14001ff0f:	outs   dx,BYTE PTR ds:[rsi]
   14001ff10:	scas   eax,DWORD PTR es:[edi]
   14001ff12:	sub    al,0x3c
   14001ff14:	push   rbx
   14001ff15:	(bad)  
   14001ff16:	rex.RX (bad) 
   14001ff18:	jle    0x14001ff0d
   14001ff1a:	test   esi,0xe76df3e6
   14001ff20:	sbb    al,0xec
   14001ff22:	jg     0x14001ff4b
   14001ff24:	mov    esp,DWORD PTR [rsi+0x1a57867b]
   14001ff2a:	or     bh,BYTE PTR [rdi+0x7d]
   14001ff2d:	js     0x14001ff92
   14001ff2f:	(bad)  
   14001ff30:	or     eax,0xcb7ef135
   14001ff35:	stos   BYTE PTR es:[rdi],al
   14001ff36:	adc    ebx,DWORD PTR [rdi+0x3e]
   14001ff39:	or     ecx,DWORD PTR [rbx+rsi*1+0x5bdacefd]
   14001ff40:	fdivr  QWORD PTR [rdi]
   14001ff42:	(bad)  
   14001ff43:	rol    BYTE PTR [rbx-0x6aae0606],1
   14001ff49:	rex.R
   14001ff4a:	rex.WRX xlat BYTE PTR ds:[rbx]
   14001ff4c:	xor    eax,0xba773f9f
   14001ff51:	adc    DWORD PTR [rcx],eax
   14001ff53:	mov    ch,0xda
   14001ff55:	cli    
   14001ff56:	nop
   14001ff57:	jge    0x14001ffcc
   14001ff59:	gs sti 
   14001ff5b:	int    0xf2
   14001ff5d:	fwait
   14001ff5e:	xor    bh,al
   14001ff60:	push   0x4534061
   14001ff65:	rex.RB fmul DWORD PTR [r14]
   14001ff68:	(bad)  
   14001ff69:	movabs ds:0xb4918fe1104dcc1b,al
   14001ff72:	lods   eax,DWORD PTR ds:[rsi]
   14001ff73:	cwde   
   14001ff74:	jno    0x14001ff82
   14001ff76:	sub    al,BYTE PTR [r9]
   14001ff79:	add    edi,DWORD PTR [rdi+riz*4]
   14001ff7c:	fist   WORD PTR [rdx+0x7e]
   14001ff7f:	in     eax,dx
   14001ff80:	ja     0x14001ffbb
   14001ff82:	xchg   edx,eax
   14001ff83:	add    BYTE PTR [rdi+0x34],cl
   14001ff86:	repnz mov al,0x9f
   14001ff89:	sbb    DWORD PTR [rax-0x7d],esi
   14001ff8c:	cmp    BYTE PTR [rax+0x20aa40ba],al
   14001ff92:	add    DWORD PTR [rcx+0x3],0x14
   14001ff96:	sti    
   14001ff97:	(bad)  
   14001ff98:	rex.WR movabs rsi,0x14c7d9092d72892b
   14001ffa2:	add    BYTE PTR [rbx],dl
   14001ffa4:	lods   eax,DWORD PTR ds:[rsi]
   14001ffa5:	jg     0x14002001e
   14001ffa7:	scas   al,BYTE PTR es:[rdi]
   14001ffa8:	out    dx,eax
   14001ffa9:	(bad)  
   14001ffaa:	fdivp  st(2),st
   14001ffac:	leave  
   14001ffad:	sub    edi,DWORD PTR [rdi+0x1f]
   14001ffb0:	addr32 (bad) 
   14001ffb2:	(bad)  
   14001ffb3:	xchg   edi,eax
   14001ffb4:	(bad)  
   14001ffb5:	repnz lahf 
   14001ffb7:	imul   edi,DWORD PTR [rbx],0x7b
   14001ffba:	imul   edi,DWORD PTR [rbx+rax*1],0xeef0cfe0
   14001ffc1:	mov    cl,0x4b
   14001ffc3:	mov    al,0xfe
   14001ffc5:	popf   
   14001ffc6:	sub    eax,edx
   14001ffc8:	(bad)  
   14001ffc9:	in     eax,dx
   14001ffca:	xor    eax,0xbfa0a230
   14001ffcf:	and    BYTE PTR [rsi],bh
   14001ffd1:	mov    WORD PTR [rdi],?
   14001ffd3:	es out 0x4a,eax
   14001ffd6:	sub    al,0x8f
   14001ffd8:	add    BYTE PTR [rax],al
   14001ffda:	and    dl,dl
   14001ffdc:	movabs eax,ds:0x71dec39f33f568ab
   14001ffe5:	pushf  
   14001ffe6:	and    esp,DWORD PTR [rdi]
   14001ffe8:	loopne 0x14001ff7f
   14001ffea:	scas   eax,DWORD PTR es:[rdi]
   14001ffeb:	add    BYTE PTR [rax+0x3083d3e7],al
   14001fff1:	or     ebp,esi
   14001fff3:	or     esp,DWORD PTR [rip+0x3e4ece7a]        # 0x17e50ce73
   14001fff9:	add    al,BYTE PTR [rax]
   14001fffb:	rex.WRXB hlt 
   14001fffd:	in     al,dx
   14001fffe:	pop    rdx
   14001ffff:	scas   al,BYTE PTR es:[rdi]
   140020000:	sar    DWORD PTR [rbx+rsi*8-0x6e],1
   140020004:	int    0xd9
   140020006:	mov    ebx,0x15b0f06a
   14002000b:	jrcxz  0x140020011
   14002000d:	retf   
   14002000e:	retf   0xd833
   140020011:	stos   DWORD PTR es:[rdi],eax
   140020012:	(bad)  
   140020013:	xor    al,0x32
   140020015:	jmp    0x1415b56c4
   14002001a:	add    al,0x85
   14002001c:	cld    
   14002001d:	rex.RX idiv BYTE PTR [rcx+0x3d]
   140020021:	mov    edi,0x9944d8fa
   140020026:	or     al,0xc
   140020028:	pop    rsi
   140020029:	jne    0x140020052
   14002002b:	retf   0x72a0
   14002002e:	rex.RB xchg r8d,eax
   140020030:	test   DWORD PTR [rdi+0x5c],ebx
   140020033:	(bad)  
   140020034:	rex.RX push rbp
   140020036:	add    eax,0x3657cfef
   14002003b:	loop   0x14001fff1
   14002003d:	push   rbp
   14002003e:	jns    0x14002001d
   140020040:	out    dx,eax
   140020041:	xlat   BYTE PTR ds:[rbx]
   140020042:	add    bl,BYTE PTR [rax+riz*4-0x38617c51]
   140020049:	or     DWORD PTR [rdx+0x2f],eax
   14002004c:	sbb    eax,0x6c1e5ca6
   140020051:	xlat   BYTE PTR ds:[rbx]
   140020052:	rex.WB enter 0xbf21,0xa0
   140020057:	xchg   ebx,eax
   140020058:	iret   
   140020059:	jl     0x140020058
   14002005b:	adc    ch,dh
   14002005d:	jmp    0x14002001c
   14002005f:	jb     0x1400200a2
   140020061:	test   BYTE PTR [rdx+0x3655ef2e],dl
   140020067:	sti    
   140020068:	hlt    
   140020069:	adc    al,0x60
   14002006b:	mov    bh,0xf8
   14002006d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002006e:	fadd   QWORD PTR [rax+0x78263998]
   140020074:	sub    BYTE PTR [rbp+rdi*8-0x31f0e4b9],dh
   14002007b:	hlt    
   14002007c:	std    
   14002007d:	sti    
   14002007e:	ja     0x1400200fc
   140020080:	cli    
   140020081:	mov    bh,BYTE PTR [rdi]
   140020083:	rex.RX pop rbx
   140020085:	clc    
   140020086:	mov    bh,0x13
   140020088:	jge    0x140020069
   14002008a:	(bad)  
   14002008b:	pop    rbx
   14002008c:	jnp    0x1400200fc
   14002008e:	add    DWORD PTR [rbx-0x1a],ebx
   140020091:	xlat   BYTE PTR ds:[rbx]
   140020092:	push   rdi
   140020093:	js     0x1400200f9
   140020095:	movabs ds:0x6b5be58f5cafa46,al
   14002009e:	out    dx,eax
   14002009f:	(bad)  
   1400200a0:	push   rbp
   1400200a1:	jbe    0x14002004d
   1400200a3:	es or  edx,edx
   1400200a6:	sub    dh,bl
   1400200a8:	(bad)  
   1400200a9:	mov    esi,0x747ec511
   1400200ae:	xlat   BYTE PTR ds:[rbx]
   1400200af:	out    dx,eax
   1400200b0:	(bad)
   1400200b3:	jrcxz  0x1400200d1
   1400200b5:	fs loopne 0x1400200e3
   1400200b8:	fild   WORD PTR [rip+0xffffffffedb73978]        # 0x12db93a36
   1400200be:	rex.WB
   1400200bf:	rex.WB sbb rax,0xffffffffef7b6428
   1400200c5:	in     al,dx
   1400200c6:	mov    bh,0x6e
   1400200c8:	jg     0x1400200bf
   1400200ca:	repnz icebp 
   1400200cc:	(bad)  
   1400200cd:	mov    WORD PTR [rcx],es
   1400200cf:	sbb    esi,0xffffffe6
   1400200d2:	sbb    dh,BYTE PTR [rdx+0x58f727b7]
   1400200d8:	jl     0x1400200b9
   1400200da:	jge    0x140020094
   1400200dc:	adc    dh,dl
   1400200de:	ret    
   1400200df:	std    
   1400200e0:	cmp    ah,BYTE PTR [rbx-0x2c]
   1400200e3:	lods   eax,DWORD PTR ds:[rsi]
   1400200e4:	ja     0x1400200a5
   1400200e6:	or     DWORD PTR [rdx+0x62f4f637],eax
   1400200ec:	movabs al,ds:0x8f42dfd064f6e390
   1400200f5:	mov    ah,0x9b
   1400200f8:	(bad)
   1400200fb:	rex.WB retf 0x6016
   1400200ff:	sar    DWORD PTR [rdx],0xc
   140020102:	adc    DWORD PTR [rcx+rcx*4+0x58],ebx
   140020106:	retf   
   140020107:	outs   dx,DWORD PTR ds:[rsi]
   140020108:	(bad)  
   140020109:	(bad)  
   14002010a:	movabs eax,ds:0x6d9ebcedfc60bd16
   140020113:	push   0x228a01bd
   140020118:	(bad)  
   140020119:	jrcxz  0x140020120
   14002011b:	or     dl,ch
   14002011d:	neg    BYTE PTR [rax+0x47722032]
   140020123:	rex.WRB movabs r14,0x7e4b0924c19f5f33
   14002012d:	xor    edi,edx
   14002012f:	(bad)  
   140020130:	lods   eax,DWORD PTR ds:[rsi]
   140020131:	adc    ecx,DWORD PTR [rsi]
   140020133:	test   al,0x68
   140020135:	frstor [rsi-0x50eed8f6]
   14002013b:	(bad)  
   14002013c:	cmp    bl,bl
   14002013e:	imul   edi
   140020140:	out    dx,al
   140020141:	(bad)  
   140020142:	in     al,dx
   140020143:	xchg   ebp,eax
   140020144:	(bad)  
   140020145:	rex.RB
   140020146:	rex.WRX out 0xb5,eax
   140020149:	mov    BYTE PTR [rsi+0x27effe4c],cl
   14002014f:	sar    DWORD PTR [rdi],0xd3
   140020152:	xchg   esi,eax
   140020153:	out    0x56,eax
   140020155:	rex.WB (bad) 
   140020157:	test   BYTE PTR [rax],0xe8
   14002015a:	stc    
   14002015b:	rex.RXB xor al,0x7e
   14002015e:	(bad)  [rdi-0x79]
   140020161:	adc    edi,edi
   140020163:	out    0x20,eax
   140020165:	xor    eax,0x50184877
   14002016a:	sahf   
   14002016b:	rex.WRXB push r15
   14002016d:	mov    dl,0x80
   14002016f:	(bad)  
   140020170:	stos   DWORD PTR es:[rdi],eax
   140020171:	or     DWORD PTR [rdi],esp
   140020173:	fdiv   DWORD PTR [rdx+0x6cbb223]
   140020179:	push   0x7a1c1ef4
   14002017e:	neg    DWORD PTR [rdi]
   140020180:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020182:	(bad)  
   140020183:	jno    0x14002019b
   140020185:	xor    dh,al
   140020187:	(bad)  
   140020188:	add    eax,DWORD PTR [rcx]
   14002018a:	mov    esp,0x5b5b5b5c
   14002018f:	add    ebx,DWORD PTR [rcx]
   140020191:	or     eax,esp
   140020193:	jmp    0x117154556
   140020198:	ins    BYTE PTR es:[rdi],dx
   140020199:	pushf  
   14002019a:	sahf   
   14002019b:	sbb    esp,edx
   14002019d:	cmc    
   14002019e:	mov    bh,0xb
   1400201a0:	movabs ds:0xd9181660545fc4cd,al
   1400201a9:	push   rdi
   1400201aa:	xchg   DWORD PTR [rax+0x6f],ebx
   1400201ad:	idiv   ebx
   1400201af:	ins    DWORD PTR es:[rdi],dx
   1400201b0:	fild   WORD PTR [rax+0x2d]
   1400201b3:	mov    dl,0xcd
   1400201b5:	fidiv  DWORD PTR [rsi+0x67]
   1400201b8:	or     DWORD PTR [rsi],0x72d7c1de
   1400201be:	or     al,0x3c
   1400201c0:	mov    dh,0x4f
   1400201c2:	ficom  DWORD PTR [rbp+0x28]
   1400201c5:	pop    rdx
   1400201c6:	push   rdi
   1400201c7:	pop    rsi
   1400201c8:	(bad)  
   1400201c9:	lods   eax,DWORD PTR ds:[rsi]
   1400201ca:	out    0x1b,al
   1400201cc:	rex.XB
   1400201cd:	lock (bad) 
   1400201cf:	lahf   
   1400201d0:	push   0xffffffff9e11fe79
   1400201d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400201d6:	sbb    ebx,DWORD PTR [rbp-0x5a7a73cc]
   1400201dc:	iret   
   1400201dd:	(bad)  
   1400201de:	(bad)  
   1400201df:	pop    rcx
   1400201e0:	and    cl,ah
   1400201e2:	test   dh,bl
   1400201e4:	ds (bad) 
   1400201e6:	retf   
   1400201e7:	iret   
   1400201e8:	add    eax,0x352ed8a9
   1400201ed:	jbe    0x140020177
   1400201ef:	rex.WRXB (bad) 
   1400201f1:	loop   0x1400201df
   1400201f3:	(bad)  
   1400201f4:	shl    eax,cl
   1400201f6:	mov    esi,0xf3ec9c28
   1400201fb:	sub    esp,DWORD PTR [rbp+rax*1-0xefd7c00]
   140020202:	(bad)  
   140020203:	jl     0x1400201b5
   140020205:	sub    edx,DWORD PTR [rbp+0x51]
   140020208:	sbb    ah,dl
   14002020a:	jge    0x140020274
   14002020c:	mov    dh,0xef
   14002020e:	push   rdi
   14002020f:	fdivrp st(5),st
   140020211:	fldcw  WORD PTR [rbx]
   140020213:	out    dx,eax
   140020214:	test   DWORD PTR [rbx+rcx*2+0x57fe5a59],ebp
   14002021b:	xchg   al,dh
   14002021d:	add    esp,edi
   14002021f:	and    dh,BYTE PTR [rsi+0x2e0c31f9]
   140020225:	(bad)  
   140020226:	movabs ds:0xb87b2b8585b78bf7,al
   14002022f:	mov    ecx,0xf697c51a
   140020234:	scas   eax,DWORD PTR es:[rdi]
   140020235:	(bad)  
   140020236:	xchg   ebp,eax
   140020237:	cmp    al,0x8e
   140020239:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002023a:	test   al,0x71
   14002023c:	push   0xfffffffffa9e3798
   140020241:	(bad)  
   140020242:	cmp    al,bh
   140020244:	or     dh,cl
   140020246:	rex.X (bad) 
   140020248:	pop    rsi
   140020249:	push   rsp
   14002024a:	add    BYTE PTR [rdi],ch
   14002024c:	je     0x140020229
   14002024e:	scas   al,BYTE PTR es:[rdi]
   14002024f:	add    al,0x6c
   140020251:	movabs ds:0xa395d6f278affb87,eax
   14002025a:	sti    
   14002025b:	jp     0x14002022d
   14002025d:	mov    ebp,0x9b242dd1
   140020262:	(bad)  
   140020263:	sub    al,0x13
   140020265:	pop    rbp
   140020266:	test   eax,0x3beb8f00
   14002026b:	sti    
   14002026c:	mov    fs,WORD PTR [rdx]
   14002026e:	(bad)  
   14002026f:	push   rax
   140020270:	rcr    BYTE PTR [rbx+rsi*8-0x2b],0x4d
   140020275:	add    BYTE PTR [rbx-0x78],ah
   140020278:	vpminub xmm7,xmm1,xmm1
   14002027c:	stc    
   14002027d:	push   rbp
   14002027e:	adc    eax,0x72b3f854
   140020283:	jo     0x14002026a
   140020285:	adc    dl,BYTE PTR [rdi+rsi*1-0x2ce5dfe0]
   14002028c:	scas   eax,DWORD PTR es:[rdi]
   14002028d:	nop
   14002028e:	(bad)  
   14002028f:	stos   BYTE PTR es:[rdi],al
   140020290:	movabs al,ds:0xf280a97d55b1f29a
   140020299:	xchg   ebp,eax
   14002029a:	(bad)  
   14002029b:	adc    eax,DWORD PTR [rsi-0x53650be4]
   1400202a1:	(bad)  
   1400202a2:	xchg   edi,eax
   1400202a3:	rex.W jnp 0x1400202aa
   1400202a6:	test   al,0x9f
   1400202a8:	outs   dx,BYTE PTR ds:[rsi]
   1400202a9:	stc    
   1400202aa:	or     eax,0xef56b026
   1400202af:	rex.WRXB add al,0xb0
   1400202b2:	push   rsi
   1400202b3:	adc    dl,BYTE PTR [rdx+0xdf9775b]
   1400202b9:	sub    al,0x1e
   1400202bb:	loop   0x140020339
   1400202bd:	(bad)  
   1400202be:	fiadd  DWORD PTR [rdi+rbx*1]
   1400202c1:	loopne 0x140020334
   1400202c3:	push   rbp
   1400202c4:	and    al,BYTE PTR [rax-0xc4416f7]
   1400202ca:	mov    ebp,0xcf8ef6bf
   1400202cf:	pop    rsi
   1400202d0:	cmc    
   1400202d1:	jmp    QWORD PTR [rdx-0x45]
   1400202d4:	lock mov ecx,edi
   1400202d7:	dec    DWORD PTR [rdx+0x10]
   1400202da:	jle    0x1400202b7
   1400202dc:	(bad)  
   1400202dd:	out    dx,al
   1400202de:	(bad)  
   1400202df:	lock xor esp,esi
   1400202e2:	lods   eax,DWORD PTR ds:[rsi]
   1400202e3:	jg     0x140020270
   1400202e5:	xchg   DWORD PTR [rsi-0x1232d888],edi
   1400202eb:	out    dx,eax
   1400202ec:	rex.XB jp 0x1400202fc
   1400202ef:	(bad)  
   1400202f0:	test   al,0x64
   1400202f2:	icebp  
   1400202f3:	xchg   DWORD PTR [rbx+0x22],esi
   1400202f6:	movabs ds:0x827f9da50edfe40c,al
   1400202ff:	ret    
   140020300:	mul    DWORD PTR [rax+0x22f434dd]
   140020306:	add    bh,BYTE PTR [rax+0x51]
   140020309:	fcomi  st,st(6)
   14002030b:	xor    DWORD PTR [rdx+0x1dab668d],0xf37eb9df
   140020315:	(bad)  
   140020316:	pop    rbx
   140020317:	sub    esi,eax
   140020319:	pop    rsi
   14002031a:	pop    rdi
   14002031b:	add    BYTE PTR [rbx+0x7c2fa58c],0x7c
   140020322:	xor    al,ch
   140020324:	movabs al,ds:0x54245000068163af
   14002032d:	and    esi,esp
   14002032f:	jne    0x140020325
   140020331:	sub    BYTE PTR [rax-0x2a],bh
   140020334:	popf   
   140020335:	test   esi,edi
   140020337:	rex.WR sub BYTE PTR [rbx+0x6f82e48],r13b
   14002033e:	(bad)  
   14002033f:	fcmovnbe st,st(6)
   140020341:	ds out dx,eax
   140020343:	sub    ebp,DWORD PTR [rcx+0x790be4b9]
   140020349:	out    0x4e,al
   14002034b:	mov    edi,0xf0b35f79
   140020350:	rcl    DWORD PTR [rbp+0x112b981],1
   140020356:	jne    0x14002037d
   140020358:	xlat   BYTE PTR ds:[rbx]
   140020359:	(bad)  
   14002035a:	jmp    0x14002035c
   14002035c:	push   0xffffffffad6a3eec
   140020361:	add    DWORD PTR [rcx-0x878dd1e],edi
   140020367:	inc    BYTE PTR [rdi]
   140020369:	xor    BYTE PTR [rbp+0x59f32840],0xc1
   140020370:	xchg   ebx,eax
   140020371:	jg     0x14002033f
   140020373:	pop    rdi
   140020374:	and    BYTE PTR [rdi-0x2b4e9b33],bl
   14002037a:	cld    
   14002037b:	test   al,0xbd
   14002037d:	verr   WORD PTR [rbp-0x184e8d9]
   140020384:	div    DWORD PTR [rdi-0x151982]
   14002038a:	mov    WORD PTR [rbx],?
   14002038c:	sti    
   14002038d:	cld    
   14002038e:	scas   eax,DWORD PTR es:[rdi]
   14002038f:	sub    al,0xe1
   140020391:	mov    bh,0xed
   140020393:	int3   
   140020394:	sub    BYTE PTR [rbx+0x48],dl
   140020397:	addr32 je 0x140020354
   14002039a:	div    ecx
   14002039c:	sahf   
   14002039d:	(bad)  
   14002039e:	mov    edi,0xef4cc2d
   1400203a3:	movabs ds:0x96851c9c94010b7b,al
   1400203ac:	or     dl,BYTE PTR [rbx]
   1400203ae:	sbb    al,0xa
   1400203b0:	adc    BYTE PTR [rcx],ah
   1400203b2:	or     BYTE PTR [rdi],0xdc
   1400203b5:	mov    ch,al
   1400203b7:	scas   eax,DWORD PTR es:[rdi]
   1400203b8:	jle    0x1400203c0
   1400203ba:	jnp    0x14002040b
   1400203bc:	loopne 0x1400203ca
   1400203be:	retf   
   1400203bf:	mov    DWORD PTR [rdi+0x54],ebx
   1400203c2:	add    bh,bl
   1400203c4:	jmp    0x14002043c
   1400203c6:	(bad)  
   1400203c7:	and    al,0x30
   1400203c9:	pop    rbp
   1400203ca:	in     eax,dx
   1400203cb:	fdivr  DWORD PTR [rax+rbx*8]
   1400203ce:	int3   
   1400203cf:	sbb    eax,0xf2b9bfdd
   1400203d4:	fiadd  WORD PTR [rax]
   1400203d6:	stos   BYTE PTR es:[rdi],al
   1400203d7:	retf   
   1400203d8:	clc    
   1400203d9:	mov    edi,0xe5af7a41
   1400203de:	(bad)  
   1400203df:	push   rsi
   1400203e0:	(bad)  
   1400203e1:	in     al,0x10
   1400203e3:	movabs al,ds:0xa29f9067bd5a6a90
   1400203ec:	cld    
   1400203ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400203ee:	(bad)  
   1400203ef:	sub    DWORD PTR [rdi],0x33
   1400203f2:	cld    
   1400203f3:	xchg   ebp,eax
   1400203f4:	rex.X (bad) 
   1400203f6:	loopne 0x140020382
   1400203f8:	movabs al,ds:0x5b59d5023f49a578
   140020402:	js     0x14002045f
   140020404:	movsxd ecx,DWORD PTR [rsi+0x5e8fb992]
   14002040a:	adc    eax,0x9881d1e8
   14002040f:	mov    edi,0xcadcf4b7
   140020414:	lods   eax,DWORD PTR ds:[rsi]
   140020415:	cmp    bl,al
   140020417:	jp     0x140020416
   140020419:	rex.WB mov es,WORD PTR [r9+0x41]
   14002041d:	or     al,0xaa
   14002041f:	mov    al,0x3
   140020421:	sub    BYTE PTR [rip+0xffffffff89c6cd83],0x54        # 0xc9c8d1ab
   140020428:	xchg   edx,eax
   140020429:	sub    BYTE PTR [rdx*2-0x2069d286],al
   140020430:	rex.XB (bad) 
   140020432:	sub    dh,BYTE PTR [rbx-0x1d73dca2]
   140020438:	jg     0x1400203f2
   14002043a:	(bad)  
   14002043b:	cmp    DWORD PTR [rdx+0x1df0f9dc],edi
   140020441:	lahf   
   140020442:	mov    esi,0x2ed1b7e6
   140020447:	loope  0x1400204c6
   140020449:	or     edi,DWORD PTR gs:[rdi+0x240e76d]
   140020450:	imul   ecx,DWORD PTR [rax-0xfc1a117],0xffffff8d
   140020457:	mov    edi,0x4717661f
   14002045c:	mov    al,0x79
   14002045e:	(bad)  
   14002045f:	sub    DWORD PTR [rdx],0xc9a0d1bb
   140020465:	push   rax
   140020466:	xchg   esi,eax
   140020467:	adc    esp,DWORD PTR [rbp+0x347ec7ff]
   14002046d:	int    0x3d
   14002046f:	cmp    ah,dh
   140020471:	imul   edx,DWORD PTR [rsp+rax*4+0x700545f8],0x4aedb601
   14002047c:	add    BYTE PTR [rax],0xd0
   14002047f:	fcomip st,st(4)
   140020481:	sbb    al,0x3a
   140020483:	jne    0x140020470
   140020485:	(bad)  
   140020487:	popf   
   140020488:	std    
   140020489:	(bad)  
   14002048a:	mov    ebp,0x2c2d84d
   14002048f:	(bad)  
   140020490:	fwait
   140020491:	ret    0xb326
   140020494:	ret    0x59f6
   140020497:	shl    DWORD PTR [rdx+0x10b7259b],0x9f
   14002049e:	pop    rcx
   14002049f:	outs   dx,DWORD PTR ds:[rsi]
   1400204a0:	adc    r14b,r12b
   1400204a3:	not    DWORD PTR [rdi+0x2d]
   1400204a6:	stos   DWORD PTR es:[rdi],eax
   1400204a7:	rex.WRXB mov es,WORD PTR [r12+r15*1]
   1400204ab:	jmp    0x183e4d137
   1400204b0:	xchg   esi,eax
   1400204b1:	in     al,0x32
   1400204b3:	(bad)
   1400204b6:	icebp  
   1400204b7:	add    al,0xc4
   1400204b9:	push   0x4e4f72b
   1400204be:	(bad)  
   1400204bf:	out    dx,eax
   1400204c0:	or     DWORD PTR [rax+0x51],ebp
   1400204c3:	add    edi,ebx
   1400204c5:	mov    ebp,0x833c0046
   1400204ca:	push   rax
   1400204cb:	or     DWORD PTR [rbp+0x73],eax
   1400204ce:	rex.RXB lods al,BYTE PTR ds:[rsi]
   1400204d0:	sub    dl,cl
   1400204d2:	fnsave [rsi+0x53]
   1400204d5:	(bad)  
   1400204d6:	and    BYTE PTR [rdi-0x4],0x51
   1400204da:	shr    esi,0xbb
   1400204dd:	mov    cl,0x72
   1400204df:	lahf   
   1400204e0:	rex.RXB push r9
   1400204e2:	lods   al,BYTE PTR ds:[rsi]
   1400204e3:	adc    ecx,DWORD PTR [rax]
   1400204e5:	test   BYTE PTR [rcx],0xf9
   1400204e8:	pop    rbx
   1400204e9:	es (bad) 
   1400204eb:	mov    ebp,edx
   1400204ed:	cli    
   1400204ee:	(bad)  
   1400204ef:	outs   dx,BYTE PTR ds:[rsi]
   1400204f0:	std    
   1400204f1:	(bad)  
   1400204f2:	mov    ch,0xbf
   1400204f4:	mov    DWORD PTR [rdi],ebx
   1400204f6:	add    al,0xd8
   1400204f8:	jg     0x1400204b0
   1400204fa:	in     eax,dx
   1400204fb:	cmp    al,0x61
   1400204fd:	ret    0xf38f
   140020500:	inc    BYTE PTR [rdi+0x6e]
   140020503:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020504:	test   DWORD PTR [rbx-0x321c9785],esp
   14002050a:	add    al,0xf4
   14002050c:	rex.WX or BYTE PTR [rax],sil
   14002050f:	fs xchg edi,eax
   140020511:	mov    DWORD PTR [rbx+0x72],esi
   140020514:	fs add eax,0x9b423fde
   14002051a:	jg     0x140020511
   14002051c:	rex.WRB mov r12,cs
   14002051f:	sar    DWORD PTR [rax+0x11],0x45
   140020523:	add    DWORD PTR [rdi],edx
   140020525:	adc    eax,0xf2dd8bc0
   14002052a:	rex push rcx
   14002052c:	icebp  
   14002052d:	imul   ebx,DWORD PTR [rax+0x7d1f06ac],0xb7a9c6ed
   140020537:	ja     0x140020541
   140020539:	jnp    0x1400204f7
   14002053b:	out    dx,eax
   14002053c:	ds int3 
   14002053e:	rex.WX xchg BYTE PTR [rsi],sil
   140020541:	movabs ds:0xbf882be49d20594e,eax
   14002054a:	sbb    dl,dh
   14002054c:	add    bl,BYTE PTR [rbx+0x43ef0155]
   140020552:	sub    eax,edi
   140020554:	and    DWORD PTR [rdi-0xc],esp
   140020557:	sub    r12b,BYTE PTR [r10-0x5]
   14002055b:	ror    DWORD PTR [rax],1
   14002055d:	mov    esi,0x38e404ac
   140020562:	xor    DWORD PTR [rdi],ebx
   140020564:	and    edx,DWORD PTR [rsi+rbp*2+0x39909180]
   14002056b:	scas   al,BYTE PTR es:[rdi]
   14002056c:	(bad)  
   14002056d:	movabs ds:0xa9611a2809da9191,eax
   140020576:	mov    dl,0x1b
   140020578:	or     al,dl
   14002057a:	paddsb mm4,QWORD PTR [rcx]
   14002057d:	rex.WRXB or r15b,BYTE PTR [r9]
   140020580:	sub    ah,cl
   140020582:	xor    eax,0x3e8c64c8
   140020587:	adc    r12,rsi
   14002058a:	rex.WR
   14002058b:	rex jrcxz 0x140020599
   14002058e:	loopne 0x1400205ef
   140020590:	(bad)  
   140020591:	retf   
   140020592:	mov    WORD PTR [rax],es
   140020594:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020595:	(bad)  
   140020596:	ret    0x7e5f
   140020599:	loopne 0x140020546
   14002059b:	xchg   edi,eax
   14002059c:	jmp    FWORD PTR [rdi]
   14002059e:	xor    ebx,DWORD PTR [rbx]
   1400205a0:	(bad)  
   1400205a1:	xor    dh,BYTE PTR [rsi+0x183f7e13]
   1400205a7:	ret    0x9b6f
   1400205aa:	int3   
   1400205ab:	lods   eax,DWORD PTR ds:[rsi]
   1400205ac:	in     al,dx
   1400205ad:	(bad)  
   1400205ae:	retf   
   1400205af:	out    0x4a,al
   1400205b1:	loopne 0x1400205f1
   1400205b3:	fdivp  st(3),st
   1400205b5:	fsub   QWORD PTR [rbp-0x4c]
   1400205b8:	neg    BYTE PTR [rbp-0x79094b3d]
   1400205be:	or     BYTE PTR [rbx+rsi*4],cl
   1400205c1:	jb     0x140020611
   1400205c3:	in     eax,0xf3
   1400205c5:	(bad)  
   1400205c6:	rex.R pop rdx
   1400205c8:	ja     0x1400205b6
   1400205ca:	rex.R ja 0x1400205c1
   1400205cd:	iret   
   1400205ce:	jno    0x1400205c0
   1400205d0:	xchg   r12d,eax
   1400205d2:	stc    
   1400205d3:	adc    BYTE PTR [rdi],dl
   1400205d5:	adc    eax,0x64da05c0
   1400205da:	nop
   1400205db:	ins    BYTE PTR es:[rdi],dx
   1400205dc:	and    eax,DWORD PTR [rax]
   1400205de:	xor    al,0x1b
   1400205e0:	(bad)  
   1400205e1:	mov    edx,0x4cce6dd7
   1400205e6:	mov    fs,WORD PTR [rbp+rdx*4-0x6baffb09]
   1400205ed:	cmp    al,0xfa
   1400205ef:	fdiv   QWORD PTR [rip+0x546b42d7]        # 0x1946d48cc
   1400205f5:	or     BYTE PTR [rdx+0x68],dh
   1400205f8:	stc    
   1400205f9:	loop   0x14002065d
   1400205fb:	ins    DWORD PTR es:[rdi],dx
   1400205fc:	fst    QWORD PTR [rdx-0x84141e9]
   140020602:	(bad)  [rdi-0x405a820e]
   140020608:	stos   DWORD PTR es:[rdi],eax
   140020609:	in     al,dx
   14002060a:	sbb    BYTE PTR [rcx],dl
   14002060c:	lods   eax,DWORD PTR ds:[rsi]
   14002060d:	mov    dh,0xdd
   14002060f:	icebp  
   140020610:	or     al,0x9c
   140020612:	rex
   140020613:	rex.WXB rol r12,0xac
   140020617:	or     BYTE PTR [rdx-0x4524111a],al
   14002061d:	add    dl,ah
   14002061f:	rcr    BYTE PTR ds:[rbp-0x7e],0x56
   140020624:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020625:	movabs eax,ds:0xd23e216f4837dc1
   14002062e:	rcl    DWORD PTR [rcx+0x4fc2fe59],cl
   140020634:	push   rbp
   140020635:	and    eax,0xd0083c61
   14002063a:	push   rsi
   14002063b:	or     BYTE PTR [rsi],dh
   14002063d:	(bad)  [rbx+0x68]
   140020640:	xor    BYTE PTR [rdi],bh
   140020642:	fdivr  st,st(1)
   140020644:	outs   dx,BYTE PTR ds:[rsi]
   140020645:	clc    
   140020646:	fcmove st,st(7)
   140020648:	ds js  0x140020633
   14002064b:	pop    rdi
   14002064c:	(bad)  
   14002064d:	xor    bl,dl
   14002064f:	(bad)  
   140020650:	xchg   DWORD PTR [rdi+0x2a],edx
   140020653:	(bad)  
   140020655:	rex.X mov dil,0x73
   140020658:	out    0xa,eax
   14002065a:	lock xchg edi,eax
   14002065c:	jns    0x140020635
   14002065e:	test   eax,0xfd7ee81d
   140020663:	sbb    bl,BYTE PTR [rdx-0x47]
   140020666:	test   eax,0x7277ef02
   14002066b:	sar    BYTE PTR [rbp+0x0],1
   14002066e:	fnstenv [rbx+0x1fb9ef06]
   140020674:	ret    
   140020675:	test   esp,0x405ad3a2
   14002067b:	in     al,0xa2
   14002067d:	add    bh,BYTE PTR [rax+0x5c59db10]
   140020683:	add    edi,0xbf1ff67b
   140020689:	movsxd esp,ebx
   14002068b:	clc    
   14002068c:	jne    0x1400206cb
   14002068e:	rex.W xlat BYTE PTR ds:[rbx]
   140020690:	jns    0x1400206fe
   140020692:	pop    rsi
   140020693:	rex.XB jg 0x1400206aa
   140020696:	rex.WX add QWORD PTR [rbx],rcx
   140020699:	or     bl,ch
   14002069b:	movabs ds:0xc5b10d6c5a9d756,eax
   1400206a4:	and    al,0x9d
   1400206a6:	test   BYTE PTR [rbx+rbx*1+0x311b46b0],dl
   1400206ad:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400206af:	in     al,0xe9
   1400206b1:	(bad)  
   1400206b2:	fisubr WORD PTR [rsi+rdi*4]
   1400206b5:	sti    
   1400206b6:	sti    
   1400206b7:	xchg   edx,eax
   1400206b8:	or     al,0x54
   1400206ba:	rex.RB jno 0x1400206e4
   1400206bd:	rex.WX (bad) 
   1400206bf:	(bad)  
   1400206c0:	lahf   
   1400206c1:	fild   WORD PTR [rdx-0x70]
   1400206c4:	cdq    
   1400206c5:	push   rdi
   1400206c6:	xor    dh,bh
   1400206c8:	add    DWORD PTR [rax+0x76500f5a],ecx
   1400206ce:	or     al,0x8a
   1400206d0:	fcmove st,st(0)
   1400206d2:	shr    dh,1
   1400206d4:	ret    
   1400206d5:	jmp    0x1400206d2
   1400206d7:	add    esp,DWORD PTR [rax+0x2b9a4e59]
   1400206dd:	add    BYTE PTR [rax-0x6b],dh
   1400206e0:	mov    DWORD PTR [rsi+0x72],ecx
   1400206e3:	mov    dl,0xcf
   1400206e5:	std    
   1400206e6:	and    BYTE PTR [rax-0x61],cl
   1400206e9:	(bad)  
   1400206ea:	in     eax,0xf6
   1400206ec:	rex.WX (bad) 
   1400206ee:	add    BYTE PTR [rbp-0x294ffe9e],al
   1400206f4:	rcl    BYTE PTR [rbx],1
   1400206f6:	mov    edi,0x9fbef8f1
   1400206fb:	std    
   1400206fc:	fcomp  st(0)
   1400206fe:	shr    BYTE PTR [rcx],1
   140020700:	ins    BYTE PTR es:[rdi],dx
   140020701:	idiv   ecx
   140020703:	jg     0x140020735
   140020705:	test   DWORD PTR [rdi+0x12eccedc],edi
   14002070b:	add    BYTE PTR [rax],al
   14002070d:	(bad)  
   14002070e:	and    cl,0xb9
   140020711:	sub    DWORD PTR [rsi+rdi*4+0x70],esi
   140020715:	xor    ebp,DWORD PTR [rip+0xffffffffbe0bdf5e]        # 0xfe0de679
   14002071b:	pop    rsp
   14002071c:	mov    esp,0x117bce26
   140020721:	and    DWORD PTR [rdx-0x26],edx
   140020724:	ja     0x140020763
   140020726:	xchg   esi,eax
   140020727:	(bad)  
   140020728:	(bad)  
   140020729:	scas   eax,DWORD PTR es:[rdi]
   14002072a:	pop    rbx
   14002072b:	push   rsi
   14002072c:	adc    edi,DWORD PTR [rsi-0x2bd1ff58]
   140020732:	mov    dh,0xdd
   140020734:	adc    eax,0x1a452ea0
   140020739:	rex.WRX imul r8,QWORD PTR [rdi+0x2e],0x4d
   14002073e:	or     edi,DWORD PTR [rdi]
   140020740:	sbb    al,0x3
   140020742:	jne    0x140020746
   140020744:	mov    WORD PTR [rcx-0x5e9054c9],es
   14002074a:	mov    ebp,0xcc6c0b90
   14002074f:	(bad)  
   140020750:	sbb    esi,esp
   140020752:	(bad)  
   140020753:	and    bh,BYTE PTR [rsi+rsi*4-0x7bf3914e]
   14002075a:	push   rax
   14002075b:	test   eax,0xd7b90fc5
   140020760:	jle    0x1400206ee
   140020762:	rex adc eax,0x5e508b9
   140020768:	(bad)  
   140020769:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002076a:	xor    BYTE PTR [rdx-0x2a],bl
   14002076d:	ds repz add al,0x16
   140020771:	rex.RX mov WORD PTR [rip+0xffffffffc2307a39],ss        # 0x1023281b1
   140020778:	rcr    BYTE PTR [rcx],1
   14002077a:	jle    0x1400207c3
   14002077c:	adc    DWORD PTR [rcx],esp
   14002077e:	movabs ds:0xaad69a84a806e578,eax
   140020787:	rex.WXB and rcx,QWORD PTR [r11]
   14002078a:	mov    BYTE PTR [rax],al
   14002078c:	push   rdi
   14002078d:	adc    dl,BYTE PTR [rdx-0x50d034ce]
   140020793:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020794:	imul   ebp,DWORD PTR [rcx+0x14d27b99],0x74ae6ce5
   14002079e:	xchg   ebx,eax
   14002079f:	rex.X or BYTE PTR [rax+0x4c299b08],al
   1400207a6:	(bad)  
   1400207a7:	shr    eax,1
   1400207a9:	lock mov edi,0xec4f0ff8
   1400207af:	jns    0x1400207b7
   1400207b1:	pop    rcx
   1400207b2:	clc    
   1400207b3:	jae    0x140020823
   1400207b5:	dec    DWORD PTR [rdi]
   1400207b7:	mov    edx,0x8e76dbf0
   1400207bc:	jle    0x140020757
   1400207be:	iret   
   1400207bf:	(bad)  
   1400207c0:	(bad)  
   1400207c1:	cmc    
   1400207c2:	or     dl,bh
   1400207c4:	mov    esi,0x7f3086f4
   1400207c9:	rex.RB (bad) 
   1400207cb:	shl    BYTE PTR [rip+0x68241e1e],cl        # 0x1a82625ef
   1400207d1:	xchg   esi,eax
   1400207d2:	and    BYTE PTR [rcx+0x2f],dl
   1400207d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400207d6:	(bad)  
   1400207d7:	sar    DWORD PTR [rdi+rbp*8+0x7a22aebf],cl
   1400207de:	rex.W
   1400207df:	lock movabs ds:0x27815c19db90b802,al
   1400207e9:	cmp    bh,BYTE PTR [rbx-0x19]
   1400207ec:	(bad)  
   1400207ee:	cmp    eax,0xcd03bc3e
   1400207f3:	ins    DWORD PTR es:[rdi],dx
   1400207f4:	sar    ebp,0x7c
   1400207f7:	push   0xfffffffffffffff9
   1400207f9:	cli    
   1400207fa:	xchg   esi,eax
   1400207fb:	add    BYTE PTR [rax+rsi*2-0x21],ah
   1400207ff:	jge    0x1400207fb
   140020801:	rex.WX test QWORD PTR [rdi-0x4ac236d6],rsi
   140020808:	call   0x14c84d437
   14002080d:	adc    al,0x31
   14002080f:	test   al,0xa2
   140020811:	test   al,0x82
   140020813:	mov    dh,0xea
   140020815:	(bad)  
   140020816:	rol    DWORD PTR [rbx+0x76],0x21
   14002081a:	rex.RX push rdi
   14002081c:	and    BYTE PTR [rbp-0x5f],dl
   14002081f:	or     al,0xc
   140020821:	(bad)  
   140020822:	jnp    0x1400207f3
   140020824:	jle    0x140020831
   140020826:	adc    ebx,DWORD PTR [rdx]
   140020828:	(bad)  
   140020829:	(bad)  [rip+0xffffffff842ef270]        # 0xc430faa0
   140020830:	jl     0x1400207b9
   140020832:	add    DWORD PTR [rdx],ebp
   140020834:	cld    
   140020835:	in     al,0x96
   140020837:	(bad)  
   140020838:	sbb    ch,dl
   14002083a:	retf   
   14002083b:	add    bl,BYTE PTR [rdi-0x4e]
   14002083e:	clc    
   14002083f:	mov    ecx,0x90429fc6
   140020844:	hlt    
   140020845:	pop    rsi
   140020846:	mov    dh,0x5a
   140020848:	and    BYTE PTR [rdx],0xcf
   14002084b:	pop    rdi
   14002084c:	rol    DWORD PTR [rax+0x2],1
   14002084f:	push   rsi
   140020850:	mov    esi,0xbf03534
   140020855:	(bad)  
   140020856:	fnsave [rdi+0x7f1fb92f]
   14002085c:	(bad)  
   14002085d:	sub    eax,0x1cedd6ff
   140020862:	out    dx,al
   140020863:	shl    BYTE PTR [rcx-0xc],0x6d
   140020867:	cmp    al,0xc0
   140020869:	rex.XB pop r15
   14002086b:	mov    edx,0xf7f76693
   140020870:	jno    0x140020865
   140020872:	sbb    bl,BYTE PTR [rbx+0x17]
   140020875:	sar    esp,cl
   140020877:	or     BYTE PTR [rdx+0x6887a5d3],0xed
   14002087e:	xchg   ebx,eax
   14002087f:	pop    rdi
   140020880:	(bad)  
   140020881:	sahf   
   140020882:	or     DWORD PTR [rsp+rdx*2+0x0],ebx
   140020886:	(bad)  
   140020887:	shl    DWORD PTR [rsi-0xeefea23],0x20
   14002088e:	jp     0x140020886
   140020890:	cli    
   140020891:	data16 cli 
   140020893:	jge    0x1400208c6
   140020895:	(bad)  
   140020896:	xor    BYTE PTR [rdx+0x7d94ae55],ch
   14002089c:	(bad)  
   14002089d:	xchg   bp,ax
   14002089f:	and    DWORD PTR [rcx-0x4a],esp
   1400208a2:	rex.WX jge 0x140020921
   1400208a5:	icebp  
   1400208a6:	cmc    
   1400208a7:	rex.XB add r11d,esp
   1400208aa:	xchg   ebp,eax
   1400208ab:	in     al,0x53
   1400208ad:	movabs eax,ds:0x91835ed2b10158f
   1400208b6:	movabs eax,ds:0x826e60c41443a80a
   1400208bf:	sub    dl,BYTE PTR [rax+0x3a8a288c]
   1400208c5:	sub    BYTE PTR [rax-0x2f9c4553],0xc4
   1400208cc:	and    BYTE PTR [rbx-0x12],cl
   1400208cf:	push   rcx
   1400208d0:	xchg   esp,eax
   1400208d1:	adc    DWORD PTR [rip+0x1a16d8bd],ebp        # 0x15a18e194
   1400208d7:	push   rbp
   1400208d8:	call   0x199b54d4b
   1400208dd:	jge    0x140020877
   1400208df:	ret    0x2780
   1400208e2:	or     rdi,QWORD PTR [rdx]
   1400208e5:	(bad)  
   1400208e6:	fist   WORD PTR [rcx+0x7c]
   1400208e9:	push   rdx
   1400208ea:	fs lahf 
   1400208ec:	(bad)  
   1400208ed:	add    al,0xf7
   1400208ef:	rex.WRB
   1400208f0:	movabs eax,gs:0xca2880512bda5ccb
   1400208fa:	adc    BYTE PTR [rax-0x41061e2],0x95
   140020901:	(bad)  
   140020902:	cli    
   140020903:	(bad)  
   140020904:	gs jg  0x140020890
   140020907:	jbe    0x14002092c
   140020909:	mov    db6,rdx
   14002090c:	pop    rsi
   14002090d:	rcl    BYTE PTR [rdx-0x28],1
   140020910:	(bad)  
   140020911:	xor    bl,bl
   140020913:	cmp    DWORD PTR [rdx+0x5],esi
   140020916:	data16 shr cl,1
   140020919:	jle    0x1400208ad
   14002091b:	idiv   DWORD PTR [rcx+rdi*8-0x63]
   14002091f:	(bad)  
   140020920:	data16 ja 0x140020942
   140020923:	mov    edx,0xeed00237
   140020928:	xlat   BYTE PTR ds:[rbx]
   140020929:	add    al,0x2
   14002092b:	(bad)  
   14002092c:	rex.B (bad) 
   14002092e:	scas   al,BYTE PTR es:[rdi]
   14002092f:	faddp  st(3),st
   140020931:	xchg   edi,eax
   140020932:	jl     0x14002093d
   140020934:	(bad)  
   140020935:	(bad)  
   140020936:	pop    rsp
   140020937:	push   rsp
   140020938:	add    BYTE PTR [rdi],dl
   14002093a:	jp     0x140020907
   14002093c:	int3   
   14002093d:	sub    eax,0x2c7262a0
   140020942:	(bad)  
   140020943:	scas   eax,DWORD PTR es:[rdi]
   140020944:	fist   WORD PTR [rcx-0x5e7cc43a]
   14002094a:	mov    ecx,0x15445233
   14002094f:	(bad)  
   140020951:	jb     0x1400208d6
   140020953:	cli    
   140020954:	fiadd  WORD PTR [rax+0x1d]
   140020957:	jne    0x14002099e
   140020959:	sbb    eax,0xf18d7213
   14002095e:	push   rdi
   14002095f:	fs rex.X
   140020961:	rex.WRXB mov BYTE PTR [r13-0x194a823f],r14b
   140020968:	xor    DWORD PTR [rdx+0x49a10576],esp
   14002096e:	cmp    ah,BYTE PTR [rsi-0xb]
   140020971:	popf   
   140020972:	lock rcl DWORD PTR [rax-0x62],cl
   140020976:	adc    bh,BYTE PTR [rsi+rax*2+0x1e]
   14002097a:	retf   0x9c3e
   14002097d:	xchg   ebx,eax
   14002097e:	jg     0x1400209c2
   140020980:	rcl    edi,0xb9
   140020983:	pop    rdi
   140020984:	(bad)  
   140020985:	cmp    al,0x5f
   140020987:	add    DWORD PTR [rdx+0x2780a410],ebp
   14002098d:	scas   eax,DWORD PTR es:[rdi]
   14002098e:	loopne 0x140020973
   140020990:	sub    esi,edi
   140020992:	(bad)  
   140020993:	in     al,dx
   140020994:	jmp    0x1400209a1
   140020996:	call   0x1579ccc3f
   14002099b:	(bad)
   14002099e:	push   0x41
   1400209a0:	push   rdx
   1400209a1:	fcmovu st,st(3)
   1400209a3:	add    al,0x60
   1400209a5:	sbb    esi,edi
   1400209a7:	cmp    esi,DWORD PTR [rsi-0x310780ae]
   1400209ad:	(bad)  
   1400209ae:	pop    rsp
   1400209af:	stc    
   1400209b0:	jnp    0x140020a1a
   1400209b2:	xlat   BYTE PTR ds:[rbx]
   1400209b3:	repz jg 0x1400209b5
   1400209b6:	xchg   esp,eax
   1400209b7:	hlt    
   1400209b8:	(bad)  
   1400209b9:	ins    DWORD PTR es:[rdi],dx
   1400209ba:	outs   dx,BYTE PTR ds:[rsi]
   1400209bb:	out    0xce,eax
   1400209bd:	adc    eax,0xfef38fe0
   1400209c2:	scas   eax,DWORD PTR es:[rdi]
   1400209c3:	ficomp WORD PTR [rip+0xffffffffa80607a6]        # 0xe808116f
   1400209c9:	mov    ecx,0x4790f655
   1400209ce:	push   rbp
   1400209cf:	adc    ebx,DWORD PTR [rdi]
   1400209d1:	sbb    al,BYTE PTR [rax-0xd]
   1400209d4:	out    0xdf,eax
   1400209d6:	(bad)  
   1400209d7:	lock and ch,BYTE PTR [rsi]
   1400209da:	sub    al,BYTE PTR [rax+0x736b6897]
   1400209e0:	add    DWORD PTR [rcx],eax
   1400209e2:	add    BYTE PTR [rip+0x5bb1ce87],ch        # 0x19bb3d86f
   1400209e8:	xor    bl,bh
   1400209ea:	out    dx,al
   1400209eb:	rex.WRX ror BYTE PTR [rax-0x7f7501a7],0x5a
   1400209f3:	add    eax,0x157eaddf
   1400209f8:	or     dl,BYTE PTR [rsi+0x5f]
   1400209fb:	pop    rsi
   1400209fc:	push   rdi
   1400209fd:	xor    eax,0xa57d0b9
   140020a02:	fld    TBYTE PTR [rbx-0x65a8aee8]
   140020a08:	rcl    BYTE PTR [rbx+0x45],0xc4
   140020a0c:	sub    bh,BYTE PTR [rax-0x42]
   140020a0f:	mov    edi,0xa0440644
   140020a14:	imul   eax,DWORD PTR [rbp+0x2],0x75
   140020a18:	gs or  al,al
   140020a1b:	rex.WX jg 0x1400209b3
   140020a1e:	ins    BYTE PTR es:[rdi],dx
   140020a1f:	mov    WORD PTR [rsi+0x3f10abda],ss
   140020a25:	rex.RXB fistp QWORD PTR fs:[r11+0x12]
   140020a2a:	nop
   140020a2b:	(bad)  
   140020a2c:	fild   QWORD PTR [rip+0xffffffffa19c17d4]        # 0xe19e2206
   140020a32:	iret   
   140020a33:	mov    al,BYTE PTR [rcx+0x21b4108b]
   140020a39:	test   dl,dl
   140020a3b:	push   rdi
   140020a3d:	pop    rax
   140020a3e:	mov    edi,0x99940379
   140020a43:	jle    0x1400209f7
   140020a45:	jge    0x140020a48
   140020a47:	push   rdi
   140020a48:	(bad)  
   140020a49:	push   rbx
   140020a4a:	fwait
   140020a4b:	icebp  
   140020a4c:	(bad)  
   140020a4d:	fdivrp st(2),st
   140020a4f:	test   DWORD PTR [rbx-0x6ec28282],ebp
   140020a55:	(bad)  
   140020a58:	or     bh,bh
   140020a5a:	(bad)  
   140020a5b:	in     eax,dx
   140020a5c:	sbb    al,0xc4
   140020a5e:	(bad)  
   140020a5f:	add    esp,edx
   140020a61:	(bad)  
   140020a62:	repnz sub DWORD PTR [rdi-0x2cb3d441],0x9877ba20
   140020a6d:	jmp    0x140020a84
   140020a6f:	cwde   
   140020a70:	(bad)  
   140020a71:	ja     0x140020a46
   140020a73:	(bad)  
   140020a74:	mov    DWORD PTR [rdi],edi
   140020a76:	jrcxz  0x1400209fb
   140020a78:	ffreep st(6)
   140020a7a:	rex.RB add eax,0x6d6d12f0
   140020a80:	rex.X xchg eax,eax
   140020a82:	add    BYTE PTR [rbx+rdx*4+0x1be6c761],al
   140020a89:	stc    
   140020a8a:	je     0x140020aa8
   140020a8c:	or     ebp,ebx
   140020a8e:	mov    ebx,0xea0062
   140020a93:	(bad)  
   140020a94:	xchg   ebp,eax
   140020a95:	cli    
   140020a96:	stc    
   140020a97:	(bad)  
   140020a98:	(bad)  
   140020a99:	adc    ebp,edx
   140020a9b:	retf   0x7b58
   140020a9e:	sub    eax,0x4470575
   140020aa4:	jne    0x140020abb
   140020aa6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020aa7:	(bad)  
   140020aa8:	(bad)  
   140020aa9:	rex.RX jne 0x140020ac1
   140020aac:	push   rsp
   140020aad:	pop    rcx
   140020aae:	rex.R pop rbx
   140020ab0:	pushf  
   140020ab1:	push   rbx
   140020ab2:	jns    0x140020a38
   140020ab4:	rex.WX adc rax,0x41c96545
   140020aba:	lock push rax
   140020abc:	pop    rsi
   140020abd:	or     al,0xe6
   140020abf:	test   ebx,0x4852be89
   140020ac5:	or     eax,DWORD PTR [rdx+0x10eeb3de]
   140020acb:	lods   al,BYTE PTR ds:[rsi]
   140020acc:	es and ah,ah
   140020acf:	pop    rax
   140020ad0:	mov    esi,0x45bb00a6
   140020ad5:	iret   
   140020ad6:	mov    esp,0x4b79c39e
   140020adb:	repnz and DWORD PTR [rip+0xffffffffc9c88346],ecx        # 0x109ca8e28
   140020ae2:	imul   eax,DWORD PTR [rdx],0xe672cdb2
   140020ae8:	rex.R neg BYTE PTR [rcx-0x16]
   140020aec:	xchg   BYTE PTR [rdi-0x3],ch
   140020aef:	(bad)          # 0x156c990ec
   140020af0:	nop    esp
   140020af3:	test   edi,eax
   140020af5:	(bad)  
   140020af6:	jp     0x140020ade
   140020af8:	mov    cl,0xbd
   140020afa:	jg     0x140020adb
   140020afc:	rex.RB loope 0x140020b2e
   140020aff:	mov    bh,0xed
   140020b01:	mov    ecx,0xf0342d02
   140020b06:	addr32 jl 0x140020ae9
   140020b09:	xor    DWORD PTR [rdi+0x10dcccd2],0x4441dc6f
   140020b13:	adc    eax,0xda52f400
   140020b18:	(bad)  
   140020b19:	mov    bh,BYTE PTR [rsi+0x7fa18e7b]
   140020b1f:	std    
   140020b20:	movabs ds:0x80006e2db6a97802,al
   140020b29:	mov    al,0x48
   140020b2b:	cmp    eax,0xa9a36ec7
   140020b30:	ja     0x140020b29
   140020b32:	rex.R mov WORD PTR [rax+0xb2ac730],ds
   140020b39:	jb     0x140020b50
   140020b3b:	test   DWORD PTR [rcx-0x3eed551],edi
   140020b41:	stos   BYTE PTR es:[rdi],al
   140020b42:	xchg   edx,eax
   140020b43:	in     al,0x9d
   140020b45:	rex.WRX or al,0xa8
   140020b48:	stos   DWORD PTR es:[rdi],eax
   140020b49:	test   al,0x82
   140020b4b:	(bad)  
   140020b4c:	push   rcx
   140020b4d:	fwait
   140020b4e:	fwait
   140020b4f:	(bad)  
   140020b50:	cld    
   140020b51:	or     BYTE PTR [rbx],0xbb
   140020b54:	cld    
   140020b55:	ss (bad) 
   140020b57:	rex.WX movabs rsp,0x7413ca824d6c1ca6
   140020b61:	rex.W (bad) 
   140020b63:	mov    ebp,0x5e6b6d98
   140020b68:	rex.X
   140020b69:	rex.WX fcomp DWORD PTR [rcx+0x43]
   140020b6d:	(bad)  
   140020b6e:	push   rsi
   140020b6f:	mov    eax,0xa5ef84ae
   140020b74:	rol    BYTE PTR [rsi-0x44984393],0xbe
   140020b7b:	mov    edi,0x3fad0ed4
   140020b80:	fstp   st(7)
   140020b82:	js     0x140020b85
   140020b84:	rex.W in al,dx
   140020b86:	jp     0x140020b0b
   140020b88:	ret    
   140020b89:	rcr    edi,1
   140020b8b:	jns    0x140020bfb
   140020b8d:	in     al,0xbf
   140020b8f:	inc    DWORD PTR [rbx-0x2e38dc5d]
   140020b95:	es std 
   140020b97:	cs pop rdx
   140020b99:	(bad)  
   140020b9a:	mov    bl,0x6d
   140020b9c:	(bad)  [rbx+0x5]
   140020b9f:	and    BYTE PTR [rdx],0x79
   140020ba2:	call   0x1b80183d6
   140020ba7:	fistp  WORD PTR [rax]
   140020ba9:	out    0x8f,al
   140020bab:	in     al,dx
   140020bac:	(bad)  
   140020bad:	out    0x1b,al
   140020baf:	mov    DWORD PTR [rax+0x5ff6303f],edi
   140020bb5:	rex.XB sub ecx,DWORD PTR [r15]
   140020bb8:	jg     0x140020b56
   140020bba:	(bad)  
   140020bbc:	jns    0x140020c0f
   140020bbe:	add    DWORD PTR [rsp+rdx*2+0x401476db],edi
   140020bc5:	(bad)  
   140020bc6:	imul   esp,DWORD PTR [rax-0x53654c47],0x5dcd5776
   140020bd0:	jne    0x140020b67
   140020bd2:	ret    
   140020bd3:	outs   dx,DWORD PTR ds:[rsi]
   140020bd4:	sbb    eax,0x22bad815
   140020bd9:	push   rsp
   140020bda:	mov    ch,0x95
   140020bdc:	hlt    
   140020bdd:	adc    ch,dl
   140020bdf:	sbb    BYTE PTR [rcx+0x55],dl
   140020be2:	push   rcx
   140020be3:	lods   eax,DWORD PTR ds:[rsi]
   140020be4:	mov    esi,0x5dda8c28
   140020be9:	add    dl,dl
   140020beb:	iret   
   140020bec:	or     eax,0x8278401d
   140020bf1:	movabs al,ds:0x71e5ed6b092a9ee4
   140020bfa:	js     0x140020bc6
   140020bfc:	mov    esi,0xb760539
   140020c01:	outs   dx,DWORD PTR ds:[rsi]
   140020c02:	mov    esi,0x56e6b7bc
   140020c07:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020c08:	loope  0x140020b8c
   140020c0a:	pop    rsp
   140020c0b:	or     bh,BYTE PTR [rdi+0x9]
   140020c0e:	adc    eax,DWORD PTR [rax]
   140020c10:	rex.WRB mul QWORD PTR [rip+0x5dfd88ff]        # 0x19dff9516
   140020c17:	mov    cl,0xaf
   140020c19:	rex.WRXB
   140020c1a:	rex.RXB retf 
   140020c1c:	call   rdi
   140020c1e:	jrcxz  0x140020bf9
   140020c20:	retf   0x441d
   140020c23:	rex.W
   140020c24:	or     r15d,DWORD PTR [rdi+0x79]
   140020c28:	push   0xfffffffffffffff0
   140020c2a:	out    0x7e,eax
   140020c2c:	jmp    0xe0910fc2
   140020c31:	ffree  st(4)
   140020c33:	repz out dx,eax
   140020c35:	es jrcxz 0x140020c37
   140020c38:	rex.X mov dil,0x73
   140020c3b:	lock add bl,BYTE PTR [rdi+0x5ccf7de0]
   140020c42:	lea    edx,[rbp-0x53be391]
   140020c48:	int    0x11
   140020c4a:	mov    esp,0xf77897b7
   140020c4f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020c50:	jns    0x140020c21
   140020c52:	cmp    eax,0x4bc01517
   140020c57:	mov    ecx,0x5405019d
   140020c5c:	add    ebx,esp
   140020c5e:	(bad)  
   140020c5f:	ja     0x140020c77
   140020c61:	out    dx,eax
   140020c62:	out    dx,al
   140020c63:	push   rsp
   140020c64:	xor    al,0xdc
   140020c66:	mov    DWORD PTR [rcx-0x23],edx
   140020c69:	add    BYTE PTR [rax+0x2f6b6710],ch
   140020c6f:	jg     0x140020cb2
   140020c71:	xchg   ebp,eax
   140020c72:	add    al,0xff
   140020c75:	mov    edx,0x22a01756
   140020c7a:	(bad)  
   140020c7b:	xor    eax,0x168fe165
   140020c80:	adc    eax,0xeca262b0
   140020c85:	mov    ebx,0xd22f343b
   140020c8a:	jo     0x140020c89
   140020c8c:	repz push rax
   140020c8e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020c8f:	loope  0x140020c27
   140020c91:	(bad)  
   140020c92:	ds mov bl,0xf8
   140020c95:	rex retf 
   140020c97:	(bad)  
   140020c98:	or     eax,DWORD PTR [rbx+0x5f]
   140020c9b:	movabs ds:0x2b210217363bfc82,al
   140020ca4:	mov    esp,DWORD PTR [rax+0x30764f25]
   140020caa:	es mov ah,0x1e
   140020cad:	or     BYTE PTR [rbx+0x1b],al
   140020cb0:	pop    rsp
   140020cb1:	rex.RX xor BYTE PTR [rcx+0x7a],r10b
   140020cb5:	(bad)  
   140020cb6:	scas   al,BYTE PTR es:[rdi]
   140020cb7:	out    dx,eax
   140020cb8:	xchg   edi,eax
   140020cb9:	dec    ecx
   140020cbb:	(bad)  
   140020cbc:	(bad)  
   140020cbd:	std    
   140020cbe:	sub    al,0x32
   140020cc0:	jmp    0x19ffa5e3c
   140020cc5:	call   0x130271b40
   140020cca:	rex.RB in al,dx
   140020ccc:	ds add eax,0xc7aefba2
   140020cd2:	shr    BYTE PTR [rsi-0x2088cba2],cl
   140020cd8:	sbb    DWORD PTR [rsi-0x42],esp
   140020cdb:	jne    0x140020d2e
   140020cdd:	add    DWORD PTR [rsp+rdx*4-0x3fafe625],edi
   140020ce4:	sar    DWORD PTR [rbx+rsi*2+0x133d9de3],cl
   140020ceb:	ret    
   140020cec:	mov    ebx,0xbae6f4ab
   140020cf1:	ss cwde 
   140020cf3:	pcmpeqb mm1,mm4
   140020cf6:	mov    bh,0x37
   140020cf8:	mov    ebp,DWORD PTR [rdi+0x1575f02]
   140020cfe:	push   rbp
   140020cff:	sub    eax,0x9353a00a
   140020d04:	mov    ebx,0x50026507
   140020d09:	test   al,0xe0
   140020d0b:	rex.WR jl 0x140020d79
   140020d0e:	adc    DWORD PTR [rsi-0x51],ecx
   140020d11:	fmul   DWORD PTR [rbx]
   140020d13:	fldcw  WORD PTR [rdx+0x4a1fcd2b]
   140020d19:	call   FWORD PTR [rdi+0x9]
   140020d1c:	cmp    al,0xb
   140020d1e:	fistp  QWORD PTR [rcx+0x1f]
   140020d21:	jle    0x140020d0a
   140020d23:	cli    
   140020d24:	sub    BYTE PTR [rbx+0x24409a83],dl
   140020d2a:	sar    BYTE PTR [rdi],1
   140020d2c:	pop    rbx
   140020d2d:	outs   dx,DWORD PTR ds:[rsi]
   140020d2e:	xor    al,BYTE PTR [rcx+0x77]
   140020d31:	fs push rax
   140020d33:	and    BYTE PTR [rax],al
   140020d35:	fcomi  st,st(4)
   140020d37:	(bad)  
   140020d38:	retf   0x140a
   140020d3b:	(bad)  
   140020d3c:	or     DWORD PTR [rbx*2-0x48500053],ebx
   140020d43:	jge    0x140020d2a
   140020d45:	retf   0xc03f
   140020d48:	test   BYTE PTR [rdi+rbx*4-0x41],0xbb
   140020d4d:	loope  0x140020d0d
   140020d4f:	out    dx,eax
   140020d50:	jne    0x140020d8d
   140020d52:	rex.RXB and r9d,r10d
   140020d55:	ja     0x140020d08
   140020d57:	jae    0x140020d42
   140020d59:	rex.WRXB jo 0x140020d44
   140020d5c:	adc    ebx,DWORD PTR [rdi]
   140020d5e:	movabs al,ds:0x2a2e9bdd403d3d3
   140020d67:	js     0x140020d12
   140020d69:	mov    bh,0x36
   140020d6b:	or     cl,BYTE PTR [rax]
   140020d6d:	add    BYTE PTR [rdx+0x27],al
   140020d70:	loopne 0x140020d36
   140020d72:	sbb    edi,edx
   140020d74:	(bad)  
   140020d75:	ds push rax
   140020d77:	push   rdi
   140020d78:	sbb    al,ch
   140020d7a:	test   eax,0xed663a03
   140020d7f:	jmp    0x140020d69
   140020d81:	(bad)  
   140020d82:	fisttp WORD PTR [rcx-0x17b28aff]
   140020d88:	je     0x140020d4e
   140020d8a:	fcmovbe st,st(7)
   140020d8c:	adc    eax,0xb910686b
   140020d91:	and    bh,al
   140020d93:	adc    ch,BYTE PTR [rsi+0x34]
   140020d96:	cld    
   140020d97:	rex.RXB cli 
   140020d99:	ds imul edi
   140020d9c:	outs   dx,DWORD PTR ds:[rsi]
   140020d9d:	jmp    FWORD PTR [rdi]
   140020d9f:	movabs eax,ds:0x307ec5cdc76b00ba
   140020da8:	movabs eax,ds:0x37e99c7513c05e56
   140020db1:	in     al,0xa0
   140020db3:	jle    0x140020d73
   140020db5:	and    eax,DWORD PTR [rbp-0x66bbae70]
   140020dbb:	sbb    eax,ebx
   140020dbd:	(bad)  
   140020dbe:	clc    
   140020dbf:	mov    dl,0x12
   140020dc1:	enter  0x824a,0x61
   140020dc5:	mov    cl,0xc6
   140020dc7:	mov    DWORD PTR [rbp-0x40a41088],ecx
   140020dcd:	jb     0x140020db4
   140020dcf:	outs   dx,DWORD PTR ds:[rsi]
   140020dd0:	ins    DWORD PTR es:[rdi],dx
   140020dd1:	(bad)  
   140020dd2:	cld    
   140020dd3:	(bad)  
   140020dd4:	cli    
   140020dd5:	std    
   140020dd6:	(bad)  
   140020dd7:	cmp    cx,di
   140020dda:	(bad)  
   140020ddb:	and    al,0xf7
   140020ddd:	loopne 0x140020d71
   140020ddf:	(bad)  
   140020de0:	pop    rsi
   140020de1:	and    DWORD PTR [rbp-0x78e31779],0xffffffb8
   140020de8:	mov    eax,0xfa4da85d
   140020ded:	mov    ebp,0x5eb79f59
   140020df2:	add    ch,bh
   140020df4:	(bad)  
   140020df5:	fcomi  st,st(7)
   140020df7:	loopne 0x140020da8
   140020df9:	(bad)  
   140020dfa:	(bad)  
   140020dfb:	jmp    0x1855f5afe
   140020e00:	neg    ebp
   140020e02:	rex.XB enter 0x3eb0,0x4
   140020e07:	jbe    0x140020ddf
   140020e09:	fidivr WORD PTR [rdx-0x19]
   140020e0c:	mov    bh,0x2d
   140020e0e:	mov    dl,0x1e
   140020e10:	jnp    0x140020dbd
   140020e12:	pop    rdi
   140020e13:	mov    ?,esp
   140020e15:	cmp    esp,ecx
   140020e17:	adc    ecx,edi
   140020e19:	js     0x140020e36
   140020e1b:	pop    rbx
   140020e1c:	sbb    al,0x72
   140020e1e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140020e1f:	in     al,dx
   140020e20:	iret   
   140020e21:	jl     0x140020dfc
   140020e23:	mov    dl,0xb8
   140020e25:	stos   BYTE PTR es:[rdi],al
   140020e26:	in     al,dx
   140020e27:	(bad)  
   140020e28:	ins    DWORD PTR es:[rdi],dx
   140020e29:	jmp    0x1add6c35b
   140020e2e:	mov    eax,0xd2ff27ee
   140020e33:	mov    dh,0xf7
   140020e35:	xchg   r14d,eax
   140020e37:	(bad)  
   140020e38:	(bad)  
   140020e39:	(bad)
   140020e3c:	loopne 0x140020e22
   140020e3e:	jns    0x140020e3f
   140020e40:	or     ecx,DWORD PTR [rip+0x1ea7fd7d]        # 0x15eaa0bc3
   140020e46:	ds cld 
   140020e48:	iret   
   140020e49:	mov    edi,0x8d303930
   140020e4e:	in     eax,dx
   140020e4f:	sar    bh,1
   140020e51:	movabs ds:0xaa8918bdadd8bff0,al
   140020e5a:	(bad)  
   140020e5b:	cmp    al,0x54
   140020e5d:	loope  0x140020ecb
   140020e5f:	mov    edi,0xf05db8bb
   140020e64:	int    0xb4
   140020e66:	outs   dx,DWORD PTR ds:[rsi]
   140020e67:	(bad)  
   140020e68:	shl    dh,0xfd
   140020e6b:	fstp   st(5)
   140020e6d:	not    DWORD PTR [rsi-0x63]
   140020e70:	push   0xffffffffffffffa1
   140020e72:	push   rbx
   140020e73:	(bad)  
   140020e74:	je     0x140020e60
   140020e76:	sbb    BYTE PTR [rsi-0x21217f62],0x80
   140020e7d:	ficomp WORD PTR [rsi+0x42]
   140020e80:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140020e81:	add    edx,esp
   140020e83:	sbb    eax,0x50075542
   140020e88:	rex.WRB or BYTE PTR [r13-0x2f7e5600],r11b
   140020e8f:	and    DWORD PTR [rsi+rcx*1-0x55fbc57f],eax
   140020e96:	and    bh,bh
   140020e98:	xlat   BYTE PTR ds:[rbx]
   140020e99:	add    DWORD PTR [rcx+rdx*1+0x48],edx
   140020e9d:	push   rdi
   140020e9e:	and    esp,DWORD PTR [rcx-0x1bfa95b6]
   140020ea4:	xor    eax,DWORD PTR [rax+0x511ff96a]
   140020eaa:	mov    es,WORD PTR [rbp+0x5503d04a]
   140020eb0:	mov    cl,BYTE PTR [rdx]
   140020eb2:	mov    dl,BYTE PTR [rbp+0x14]
   140020eb5:	and    al,0xb9
   140020eb7:	(bad)  
   140020eb8:	fidivr DWORD PTR [rcx-0x1b]
   140020ebb:	out    dx,al
   140020ebc:	fidiv  WORD PTR ds:[rcx+0x24381747]
   140020ec3:	enter  0x7cfa,0xae
   140020ec7:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140020ec9:	and    ebp,DWORD PTR [rbx+0x4f]
   140020ecc:	sub    eax,0x356f33fb
   140020ed1:	neg    BYTE PTR ds:[rax]
   140020ed4:	and    al,0x9
   140020ed6:	push   0x6fe8e12d
   140020edb:	(bad)  
   140020edc:	fscale 
   140020ede:	outs   dx,DWORD PTR ds:[rsi]
   140020edf:	mov    edi,0x8b303930
   140020ee4:	(bad)  
   140020ee5:	(bad)  
   140020ee6:	mov    edx,0x4dedbffe
   140020eeb:	sahf   
   140020eec:	movabs eax,ds:0xb9c617c7085b3dcd
   140020ef5:	mov    BYTE PTR [rax],al
   140020ef7:	pop    rsi
   140020ef8:	scas   al,BYTE PTR es:[rdi]
   140020ef9:	sub    eax,0x140e80a3
   140020efe:	add    eax,0x479ae57c
   140020f03:	(bad)  
   140020f04:	out    dx,eax
   140020f05:	jge    0x140020f44
   140020f07:	fisttp QWORD PTR [rdi]
   140020f09:	or     al,ah
   140020f0b:	(bad)  
   140020f0c:	pop    rdi
   140020f0d:	push   rdx
   140020f0e:	cmp    eax,DWORD PTR [rcx+rdx*1]
   140020f11:	push   rdx
   140020f12:	es adc eax,0xbe6fb2d6
   140020f18:	stc    
   140020f19:	out    0xc8,al
   140020f1b:	scas   eax,DWORD PTR es:[rdi]
   140020f1c:	gs jrcxz 0x140020f35
   140020f1f:	xor    ebp,edi
   140020f21:	pop    rbp
   140020f22:	je     0x140020f11
   140020f24:	cmp    ecx,DWORD PTR [rdi]
   140020f26:	shl    BYTE PTR [rbx-0x4704fe80],cl
   140020f2c:	sub    BYTE PTR [rcx],bl
   140020f2e:	mov    ch,0xaa
   140020f30:	cmp    al,0xf9
   140020f32:	push   0x6c909c1b
   140020f37:	xor    al,BYTE PTR [rbx-0x4a4505ec]
   140020f3d:	cld    
   140020f3e:	mov    dh,0xa6
   140020f40:	add    eax,0x9e8b0
   140020f45:	xchg   edx,eax
   140020f46:	out    0x2f,eax
   140020f48:	pop    rcx
   140020f49:	rex.X and al,0x29
   140020f4c:	test   eax,0x36028800
   140020f51:	sbb    DWORD PTR [rbx-0x7cec681],esi
   140020f57:	sar    DWORD PTR [rdi],cl
   140020f59:	repz lock and eax,0xf63723f7
   140020f60:	clc    
   140020f61:	mov    ebx,0x72f3e057
   140020f66:	outs   dx,BYTE PTR ds:[rsi]
   140020f67:	in     eax,dx
   140020f68:	(bad)
   140020f6b:	enter  0x3642,0x17
   140020f6f:	mov    bh,0x97
   140020f71:	outs   dx,DWORD PTR ds:[rsi]
   140020f72:	movsxd edi,esp
   140020f74:	(bad)  
   140020f75:	in     eax,dx
   140020f76:	pop    rbp
   140020f77:	ins    DWORD PTR es:[rdi],dx
   140020f78:	mov    WORD PTR [rbp+riz*2+0x15],ds
   140020f7c:	jle    0x140020f5c
   140020f7e:	neg    esi
   140020f80:	mov    ebx,0xf6ecbbb3
   140020f85:	mov    eax,DWORD PTR [rax+0x6b]
   140020f88:	sub    DWORD PTR [rax+0x29],ecx
   140020f8b:	push   0xffffffffffffff82
   140020f8d:	(bad)  
   140020f8e:	sub    BYTE PTR [rcx-0x7b],cl
   140020f91:	rex.RX and r9d,DWORD PTR [rcx+0x21]
   140020f95:	(bad)  
   140020f96:	test   al,0x1
   140020f98:	jg     0x140020fb2
   140020f9a:	adc    esp,DWORD PTR [rcx]
   140020f9c:	rex.RX
   140020f9d:	rex.X test al,0x44
   140020fa0:	movsxd eax,DWORD PTR [rax+0x4]
   140020fa3:	stc    
   140020fa4:	(bad)  
   140020fa5:	xor    al,0x84
   140020fa7:	add    al,0x49
   140020fa9:	add    al,0x7f
   140020fab:	sub    DWORD PTR [rax+0x3],esp
   140020fae:	(bad)  
   140020faf:	sbb    BYTE PTR [rdx+rdi*8-0x4f],cl
   140020fb3:	repnz movabs eax,ds:0x5a856bf42a54d42d
   140020fbd:	sti    
   140020fbe:	xchg   r9d,eax
   140020fc0:	(bad)  
   140020fc1:	rex.X sub eax,0xb6eedafd
   140020fc7:	fcmovnu st,st(5)
   140020fc9:	ins    DWORD PTR es:[rdi],dx
   140020fca:	mov    ebx,0xceeeedd3
   140020fcf:	int3   
   140020fd0:	cmp    eax,0x79cf78fe
   140020fd5:	fcomip st,st(7)
   140020fd7:	outs   dx,BYTE PTR ds:[rsi]
   140020fd8:	(bad)  
   140020fd9:	lahf   
   140020fda:	jbe    0x140020fcb
   140020fdc:	outs   dx,BYTE PTR ds:[rsi]
   140020fdd:	iret   
   140020fde:	xchg   ebx,eax
   140020fdf:	int3   
   140020fe0:	(bad)  
   140020fe1:	popf   
   140020fe2:	mov    ecx,0xb6676677
   140020fe7:	cmp    eax,0x3be73ce7
   140020fec:	push   0xfffffffff57bdae1
   140020ff1:	retf   
   140020ff2:	push   rsi
   140020ff3:	pop    rsp
   140020ff4:	cmp    eax,0x9a7b7aa3
   140020ff9:	ret    0x14da
   140020ffc:	outs   dx,BYTE PTR ds:[rsi]
   140020ffd:	jrcxz  0x14002102e
   140020fff:	sti    
   140021000:	div    DWORD PTR [rdx-0x230bdce4]
   140021006:	ret    
   140021007:	or     DWORD PTR [rax+rdi*4-0x4a088000],ebx
   14002100e:	lea    esi,[rbp+0x16]
   140021011:	xchg   ebp,eax
   140021012:	mov    WORD PTR [rdx+riz*8-0x21e49b64],fs
   140021019:	(bad)  
   14002101a:	or     BYTE PTR [rax-0x1ff8ce53],al
   140021020:	cld    
   140021021:	mov    cl,0xdb
   140021023:	and    ah,BYTE PTR [rbx-0x37]
   140021026:	rex.R cmc 
   140021028:	cmp    ah,ah
   14002102a:	test   DWORD PTR [rdi],esi
   14002102c:	(bad)  
   14002102d:	mov    al,BYTE PTR [rip+0xffffffffb31fe145]        # 0xf321f178
   140021033:	(bad)  
   140021034:	retf   
   140021035:	mov    edx,0xef53d96a
   14002103a:	mov    edi,0x1794ee6c
   14002103f:	icebp  
   140021040:	clc    
   140021041:	push   0xffffffffffffff82
   140021043:	jae    0x14002104c
   140021045:	jb     0x140021097
   140021047:	ins    DWORD PTR es:[rdi],dx
   140021048:	sti    
   140021049:	jmp    0x13bc15844
   14002104e:	(bad)  
   14002104f:	cld    
   140021050:	in     eax,dx
   140021051:	push   0xffffffff855fbf36
   140021056:	(bad)  
   140021057:	inc    DWORD PTR [rbx]
   140021059:	stc    
   14002105a:	mov    ebx,0x3fccb8de
   14002105f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021060:	or     al,0xe0
   140021062:	(bad)
   140021067:	or     DWORD PTR cs:[rax+rax*2],0x5b
   14002106c:	stos   DWORD PTR es:[rdi],eax
   14002106d:	int    0x2f
   14002106f:	(bad)  
   140021071:	fnstcw WORD PTR [rbp-0x55]
   140021074:	addr32 push rsi
   140021076:	call   0xe794a3e1
   14002107b:	in     eax,0x7e
   14002107d:	mov    eax,0x21a61f86
   140021082:	adc    eax,0x7dfc1477
   140021087:	xor    DWORD PTR [rdi-0x1110edc2],esi
   14002108d:	mov    esp,0x5a162f4b
   140021092:	ins    BYTE PTR es:[rdi],dx
   140021093:	cmp    ecx,edi
   140021095:	sub    eax,DWORD PTR [rbx-0x55]
   140021098:	cmp    cl,al
   14002109a:	sub    DWORD PTR [rcx],ecx
   14002109c:	add    al,0x1
   14002109e:	cmc    
   14002109f:	and    cl,bh
   1400210a1:	in     al,dx
   1400210a2:	and    al,cl
   1400210a4:	mov    esp,0xa7c31a09
   1400210a9:	cmc    
   1400210aa:	fdiv   QWORD PTR [rcx]
   1400210ac:	in     eax,0x91
   1400210ae:	jb     0x140021079
   1400210b0:	popf   
   1400210b1:	loop   0x140021044
   1400210b3:	rex.RB adc eax,0x467c2394
   1400210b9:	(bad)  
   1400210ba:	(bad)  
   1400210bb:	(bad)  
   1400210bc:	rex.RX pop rdx
   1400210be:	lahf   
   1400210bf:	pop    rsp
   1400210c0:	sar    BYTE PTR [rbp-0x34c7e610],cl
   1400210c6:	(bad)  
   1400210c7:	xor    edi,esp
   1400210c9:	xor    eax,0xd00937e8
   1400210ce:	sbb    al,al
   1400210d0:	(bad)
   1400210d3:	ret    0xa802
   1400210d6:	(bad)  
   1400210d7:	out    0x76,al
   1400210d9:	cld    
   1400210da:	(bad)  
   1400210db:	lods   eax,DWORD PTR ds:[rsi]
   1400210dc:	jne    0x140021073
   1400210de:	int    0x0
   1400210e0:	fwait
   1400210e1:	mov    DWORD PTR [rdi],ebx
   1400210e3:	outs   dx,DWORD PTR ds:[rsi]
   1400210e4:	fsubr  st,st(7)
   1400210e6:	(bad)  
   1400210e7:	fisub  WORD PTR [rdi+0x47]
   1400210ea:	push   0x60
   1400210ec:	xor    ah,dl
   1400210ee:	movsxd eax,DWORD PTR [rax]
   1400210f0:	test   eax,0xf3a9363b
   1400210f5:	stc    
   1400210f6:	in     eax,0x79
   1400210f8:	xchg   edx,eax
   1400210f9:	lods   eax,DWORD PTR ds:[rsi]
   1400210fa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400210fb:	mov    ecx,esp
   1400210fd:	(bad)  
   1400210fe:	and    esi,ecx
   140021100:	jmp    rcx
   140021102:	cli    
   140021103:	adc    esp,DWORD PTR ds:[rdi+0xde12858]
   14002110a:	cmp    eax,0xf8848009
   14002110f:	xor    eax,0x45c71ee4
   140021114:	jnp    0x140021167
   140021116:	enter  0xc5c8,0x4
   14002111a:	clc    
   14002111b:	pop    rdx
   14002111c:	rex.WXB sbb al,0xf
   14002111f:	cmp    bl,0x2a
   140021122:	shl    DWORD PTR [rax+riz*1],1
   140021125:	mov    edi,0x6ebe53f0
   14002112a:	fs (bad) 
   14002112c:	or     al,0x8
   14002112e:	jge    0x140021193
   140021130:	jmp    0x14bdf371f
   140021135:	lahf   
   140021136:	xor    r13d,r11d
   140021139:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002113a:	ret    0x493f
   14002113d:	shl    BYTE PTR [rax+riz*8],1
   140021140:	(bad)
   140021143:	popf   
   140021144:	(bad)  
   140021145:	rex.WB fstp st(2)
   140021148:	push   rbx
   140021149:	mov    bh,0xce
   14002114b:	lods   eax,DWORD PTR ds:[rsi]
   14002114c:	jle    0x140021177
   14002114e:	retf   
   14002114f:	int3   
   140021150:	sbb    al,0x9b
   140021152:	pop    rcx
   140021153:	(bad)  
   140021154:	ror    bl,0x8c
   140021157:	adc    esi,edx
   140021159:	test   BYTE PTR [rbp-0x10f8fec4],al
   14002115f:	loopne 0x1400210ff
   140021161:	rex.WXB ret 0xa231
   140021165:	sbb    BYTE PTR [rsi+0x1f1e6449],0x79
   14002116c:	xlat   BYTE PTR ds:[rbx]
   14002116d:	rex.B (bad) 
   14002116f:	(bad)  
   140021170:	shr    BYTE PTR [rsi-0x1c836cd5],cl
   140021176:	(bad)  
   140021177:	pop    rsp
   140021178:	mov    edi,0xfb7b8765
   14002117d:	rex.WB scas al,BYTE PTR es:[rdi]
   14002117f:	xor    eax,0xa1fc2e0
   140021184:	mov    WORD PTR [rax+rbx*2+0x5],es
   140021188:	mov    ebx,0x911dde22
   14002118d:	scas   eax,DWORD PTR es:[rdi]
   14002118e:	in     al,0x9c
   140021190:	jl     0x140021211
   140021192:	popf   
   140021193:	jnp    0x14002116b
   140021195:	xor    DWORD PTR [rbx-0x348b722d],ecx
   14002119b:	mov    ebp,0x723c167b
   1400211a0:	hlt    
   1400211a1:	jl     0x1400211d9
   1400211a3:	mov    WORD PTR [rax-0x3],es
   1400211a6:	mov    ch,0xc1
   1400211a8:	adc    ah,BYTE PTR [ecx+0x43e2e00c]
   1400211af:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400211b1:	or     eax,0xbdd5f500
   1400211b6:	mov    bl,0x6
   1400211b8:	rex.WRX out 0x2d,al
   1400211bb:	imul   ecx,DWORD PTR [rbp-0x75],0x9
   1400211bf:	jnp    0x140021148
   1400211c1:	mov    bl,0xbc
   1400211c3:	mov    eax,0x9802be35
   1400211c8:	or     al,0x30
   1400211ca:	sub    eax,0x716ff91c
   1400211cf:	sar    DWORD PTR [rbp-0x41],1
   1400211d2:	rex.WRXB xchg r14,rax
   1400211d4:	fld    DWORD PTR [rax-0x71bc3d65]
   1400211da:	or     DWORD PTR [rax+rax*1+0x7c303331],esp
   1400211e1:	popf   
   1400211e2:	jae    0x140021217
   1400211e4:	mov    BYTE PTR [rdi-0x2b87f79],ah
   1400211ea:	cmp    BYTE PTR [rbp-0x7dc7b7d],ah
   1400211f0:	pop    rsp
   1400211f1:	rex.WRXB (bad) 
   1400211f3:	xchg   ebx,eax
   1400211f4:	sub    BYTE PTR [rbx-0x76fd4ae0],dh
   1400211fa:	add    al,0x2a
   1400211fc:	popf   
   1400211fd:	add    ah,BYTE PTR [rcx]
   1400211ff:	ret    
   140021200:	adc    eax,0x85371080
   140021205:	clc    
   140021206:	jg     0x14002121c
   140021208:	rex.RB ret 0x7eef
   14002120c:	mov    WORD PTR [rdx+rdx*4],?
   14002120f:	jge    0x1400211d0
   140021211:	clc    
   140021212:	iret   
   140021213:	adc    eax,0x6c1eee3f
   140021218:	(bad)  
   140021219:	test   BYTE PTR [rsi-0x4],al
   14002121c:	rex.WXB add rdx,QWORD PTR [r13+0x0]
   140021220:	xchg   ebx,eax
   140021221:	add    ebp,edi
   140021223:	(bad)  
   140021224:	add    BYTE PTR [rax-0x6202543],ch
   14002122a:	rex.WX and rsp,QWORD PTR [rbp-0x59f73656]
   140021231:	and    al,BYTE PTR [rdx-0x12]
   140021234:	cwde   
   140021235:	or     cl,0xc
   140021238:	ins    BYTE PTR es:[rdi],dx
   140021239:	pushfw 
   14002123b:	sbb    eax,eax
   14002123d:	add    cl,BYTE PTR [rcx-0x34]
   140021240:	or     ah,bh
   140021242:	add    BYTE PTR [rsi-0x545211ac],cl
   140021248:	or     ah,BYTE PTR [rsi+rsi*4+0x60]
   14002124c:	xchg   ebx,eax
   14002124d:	jo     0x1400211dc
   14002124f:	adc    ebx,DWORD PTR [rsi-0x15]
   140021252:	push   rbx
   140021253:	jg     0x14002121b
   140021255:	mov    bl,0x8b
   140021257:	loopne 0x14002125b
   140021259:	clc    
   14002125a:	jmp    0x1400211f5
   14002125c:	fimul  WORD PTR [rbx]
   14002125e:	adc    ecx,DWORD PTR [rax+0xa87ad97]
   140021264:	add    ch,BYTE PTR ds:[rsi+rcx*1-0x68]
   140021269:	cmp    al,0xb0
   14002126b:	add    eax,0x21288739
   140021270:	(bad)  
   140021271:	or     al,0xc6
   140021273:	leave  
   140021274:	hlt    
   140021275:	lods   eax,DWORD PTR ds:[rsi]
   140021276:	in     al,dx
   140021277:	popf   
   140021278:	icebp  
   140021279:	shl    bl,1
   14002127b:	xchg   DWORD PTR [rdi-0x35],esp
   14002127e:	mov    ?,WORD PTR [rdx]
   140021280:	ins    DWORD PTR es:[rdi],dx
   140021281:	lock sub DWORD PTR [rcx],ecx
   140021284:	(bad)  
   140021285:	add    eax,0xd268d8b8
   14002128a:	sub    bh,BYTE PTR [rcx+rsi*8-0x268ab89c]
   140021291:	(bad)  
   140021292:	(bad)  
   140021293:	(bad)  
   140021294:	jbe    0x1400212ef
   140021296:	cmp    ebx,ebp
   140021298:	rex test eax,0x7de14d81
   14002129e:	jb     0x140021303
   1400212a0:	popf   
   1400212a1:	rcr    BYTE PTR [rbx],0x4e
   1400212a4:	or     eax,0x76c106c2
   1400212a9:	xchg   esi,eax
   1400212aa:	cdq    
   1400212ab:	and    bh,BYTE PTR [rdi-0x63]
   1400212ae:	movabs ds:0xc12c12526f3386f2,eax
   1400212b7:	rex.XB movabs eax,ds:0xf4081edf605d92f3
   1400212c1:	ds out dx,al
   1400212c3:	(bad)  
   1400212c4:	lock mov ebp,0x1a043603
   1400212ca:	jge    0x1400212c8
   1400212cc:	iret   
   1400212cd:	mov    ebx,0x21c84001
   1400212d2:	test   BYTE PTR [rax+0x63f49ba4],ah
   1400212d8:	ror    eax,1
   1400212da:	test   eax,0xf3bfa1ba
   1400212df:	sub    edi,0x1feab9ef
   1400212e5:	rcl    BYTE PTR [rcx+0x3283a55e],1
   1400212eb:	or     cl,0x43
   1400212ee:	movabs eax,ds:0x514a65edb54f6338
   1400212f7:	(bad)  
   1400212f8:	ins    BYTE PTR es:[rdi],dx
   1400212f9:	loope  0x140021368
   1400212fb:	rex.R fbld TBYTE PTR [rbp+0x38]
   1400212ff:	(bad)  
   140021300:	and    eax,0xeb9b16c4
   140021305:	std    
   140021306:	rex.RB
   140021307:	rex.WB clc 
   140021309:	fadd   DWORD PTR [rax-0x3e76ad77]
   14002130f:	mov    dl,0x3b
   140021311:	(bad)  
   140021312:	(bad)  
   140021313:	and    ah,BYTE PTR [rsi]
   140021315:	(bad)  
   140021316:	add    BYTE PTR [rax+rax*2-0x7709acf7],0x4d
   14002131e:	rex.W (bad) 
   140021320:	adc    cl,cl
   140021322:	movsxd ebp,DWORD PTR [rsi]
   140021324:	or     BYTE PTR [rdx-0x741b0127],dl
   14002132a:	xchg   BYTE PTR [rdx+0x471f1ed2],ah
   140021330:	or     BYTE PTR [rbp+0x1018c608],dh
   140021336:	push   rcx
   140021337:	ins    DWORD PTR es:[rdi],dx
   140021338:	out    0x60,eax
   14002133a:	(bad)  
   14002133b:	sbb    BYTE PTR [rcx+0x0],dh
   14002133e:	add    BYTE PTR [rax],cl
   140021340:	push   rdi
   140021341:	rex.WB
   140021342:	rex.R
   140021343:	push   r12
   140021345:	fdecstp 
   140021347:	rex.RXB mov r15d,0x26c173bd
   14002134d:	cld    
   14002134e:	scas   eax,DWORD PTR es:[rdi]
   14002134f:	sbb    bh,BYTE PTR [rdi-0x3b]
   140021352:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021353:	rex.X sbb eax,eax
   140021356:	and    BYTE PTR fs:[rbx+rax*1],al
   14002135a:	in     eax,0x96
   14002135c:	mov    esp,0xffbdb275
   140021361:	out    dx,al
   140021362:	sbb    ecx,DWORD PTR [rsi+0x7f]
   140021365:	xor    DWORD PTR [rbx-0x37],ebp
   140021368:	out    0x8b,eax
   14002136a:	ror    BYTE PTR [rbx+0x6ffced9f],0x8e
   140021371:	mov    ah,0x33
   140021373:	or     ecx,DWORD PTR [rax+0x5d20739b]
   140021379:	jns    0x140021351
   14002137b:	js     0x140021377
   14002137d:	(bad)  
   14002137e:	cli    
   14002137f:	ins    BYTE PTR es:[rdi],dx
   140021380:	rex.WR mov al,0xdc
   140021383:	rex.X jmp 0x1400213d3
   140021386:	xchg   ecx,eax
   140021387:	movabs ds:0xb7a53c0302cc201b,al
   140021390:	shl    ebp,1
   140021392:	repnz sbb bl,BYTE PTR [rdi-0x7c]
   140021396:	and    al,0xaf
   140021398:	test   ebp,0xb80d42bf
   14002139e:	pop    rcx
   14002139f:	mov    BYTE PTR [rsi+rsi*8],cl
   1400213a2:	push   rdi
   1400213a3:	pop    rbx
   1400213a4:	lahf   
   1400213a5:	mov    edx,0x2fb5eb75
   1400213aa:	movabs al,ds:0x3280a5fea55f24d9
   1400213b3:	or     cl,0x43
   1400213b6:	and    DWORD PTR [rip+0xffffffff9d9aac78],esp        # 0xdd9cc034
   1400213bc:	(bad)  
   1400213bd:	js     0x1400213ed
   1400213bf:	jnp    0x140021412
   1400213c1:	lods   al,BYTE PTR ds:[rsi]
   1400213c2:	cmp    BYTE PTR [rcx+0x3e69f615],dh
   1400213c8:	cmovle r9,QWORD PTR [rbp+r15*8+0x49]
   1400213ce:	leave  
   1400213cf:	(bad)  
   1400213d0:	xor    ah,bl
   1400213d2:	outs   dx,BYTE PTR ds:[rsi]
   1400213d3:	or     edi,ebx
   1400213d5:	push   rdx
   1400213d6:	mov    ecx,0xc09604c7
   1400213db:	sub    al,0x22
   1400213dd:	and    eax,0x13320d4e
   1400213e2:	lock mov al,dh
   1400213e5:	clc    
   1400213e6:	imul   esi,DWORD PTR [rbx+0x5f],0xffffff8b
   1400213ea:	add    BYTE PTR [rsi+0x1e],ch
   1400213ed:	sub    dl,BYTE PTR [rsi+0x83dc707]
   1400213f3:	mov    dl,0x97
   1400213f5:	pop    rsi
   1400213f6:	mov    dl,BYTE PTR [rax-0x409b7372]
   1400213fc:	stc    
   1400213fd:	ret    0x85a6
   140021400:	retf   
   140021401:	movabs eax,ds:0xa164c0194352bee9
   14002140a:	cwde   
   14002140b:	adc    dh,BYTE PTR [rax+rax*1+0x53a3256c]
   140021412:	mov    bh,0x5c
   140021414:	cmp    eax,0xc12495f2
   140021419:	int3   
   14002141a:	and    BYTE PTR [rcx+riz*1+0x7c9647cd],cl
   140021421:	rex.R pop rsi
   140021423:	retf   0x3d84
   140021426:	pop    rbp
   140021427:	xchg   edi,eax
   140021428:	xor    al,0x5e
   14002142a:	and    al,0xb0
   14002142c:	and    DWORD PTR [rip+0xffffffffc3b43088],edx        # 0x103b644ba
   140021432:	mov    al,BYTE PTR [rbx+rsi*1]
   140021435:	lods   eax,DWORD PTR ds:[rsi]
   140021436:	(bad)  
   140021437:	stc    
   140021438:	cmp    BYTE PTR [rcx],al
   14002143a:	jno    0x1400213d8
   14002143c:	movabs al,ds:0xfdb3f2286a3bbab0
   140021445:	rex.X
   140021446:	adc    QWORD PTR [r13+rdx*1+0x31a57d8],rsp
   14002144e:	call   0xf15b816e
   140021453:	je     0x140021420
   140021455:	ret    0xce27
   140021458:	(bad)  
   140021459:	in     al,dx
   14002145a:	or     BYTE PTR [rax+rbp*8],dh
   14002145d:	push   rdi
   14002145e:	push   0x28
   140021460:	add    ebx,DWORD PTR [rax-0x7dadeba4]
   140021466:	retf   
   140021467:	fistp  QWORD PTR [rcx+0x68c4efbc]
   14002146d:	mov    dh,0x8e
   14002146f:	adc    bl,BYTE PTR [rbx]
   140021471:	sub    al,0xbc
   140021473:	pop    rax
   140021474:	out    dx,al
   140021475:	xor    al,0xb4
   140021477:	(bad)  
   140021478:	mov    edx,0x850214c7
   14002147d:	imul   edx,DWORD PTR [rdi+rcx*1],0x6a4c0d48
   140021484:	cdq    
   140021485:	and    eax,0x4840a898
   14002148a:	cwde   
   14002148b:	add    al,0x22
   14002148d:	and    eax,0xc38a8a62
   140021492:	adc    cl,BYTE PTR [rax]
   140021494:	cmp    DWORD PTR [rax],ebp
   140021496:	lods   al,BYTE PTR ds:[rsi]
   140021497:	loopne 0x14002148f
   140021499:	rex.RB (bad) 
   14002149b:	movabs ds:0xcf7cc4632feb6244,al
   1400214a4:	xor    DWORD PTR [rip+0xffffffffafa7a818],0x9afbbd7e        # 0xefa9bcc6
   1400214ae:	mov    DWORD PTR [rsi],0xddd912c6
   1400214b4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400214b5:	repz cld 
   1400214b7:	rex.WX or al,0x55
   1400214ba:	add    BYTE PTR [rbx+0x3604090f],dl
   1400214c0:	add    ah,dl
   1400214c2:	(bad)  
   1400214c3:	jp     0x140021479
   1400214c5:	movabs ds:0xe3eae9336c314f2b,eax
   1400214ce:	xor    al,0x9f
   1400214d0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400214d1:	sub    BYTE PTR [rax-0x69],cl
   1400214d4:	xchg   DWORD PTR [rsi-0x4c1111ff],ebx
   1400214da:	loop   0x1400214fa
   1400214dc:	rex.W add al,dl
   1400214df:	or     bh,BYTE PTR [rbx]
   1400214e1:	(bad)  
   1400214e2:	(bad)  
   1400214e3:	loopne 0x1400214fa
   1400214e5:	(bad)  
   1400214e6:	add    DWORD PTR [rdx+0x72],edx
   1400214e9:	out    dx,al
   1400214ea:	test   BYTE PTR [rax],ch
   1400214ec:	adc    al,0x9e
   1400214ee:	adc    BYTE PTR [rdx+0x2c],ch
   1400214f1:	dec    esi
   1400214f3:	add    al,0x8e
   1400214f5:	(bad)  
   1400214f6:	rex.RXB adc eax,0xf1f7147f
   1400214fc:	sti    
   1400214fd:	jmp    0x14fe5f9c0
   140021502:	xor    al,al
   140021504:	loopne 0x14002157e
   140021506:	mov    dl,0xe1
   140021508:	(bad)  
   140021509:	mov    edi,0x81c8fd5f
   14002150e:	push   0x4b
   140021510:	pop    rsp
   140021511:	call   0x104c1abb9
   140021516:	push   rax
   140021517:	add    eax,0xb0b89930
   14002151c:	push   rbp
   14002151d:	mov    bl,0xf6
   14002151f:	rol    BYTE PTR [rsi-0xc780487],1
   140021525:	and    edx,DWORD PTR fs:[rdx-0x7e]
   140021529:	rex.WRB popf 
   14002152b:	scas   eax,DWORD PTR es:[rdi]
   14002152c:	outs   dx,BYTE PTR ds:[rsi]
   14002152d:	adc    dh,dl
   14002152f:	rex.RB cmp al,0xee
   140021532:	pop    rax
   140021533:	test   BYTE PTR [rdi+0x5bdcb3ad],bl
   140021539:	repnz push rcx
   14002153b:	jg     0x140021508
   14002153d:	xlat   BYTE PTR ds:[rbx]
   14002153e:	pop    rdx
   14002153f:	out    dx,eax
   140021540:	call   QWORD PTR [rbx+0x18]
   140021543:	or     al,0x22
   140021545:	ins    BYTE PTR es:[rdi],dx
   140021546:	and    BYTE PTR [rip+0x18905f57],ah        # 0x1589274a3
   14002154c:	(bad)  
   14002154d:	and    eax,0x1e86fd66
   140021552:	clc    
   140021553:	(bad)  
   140021554:	(bad)  
   140021555:	add    edx,DWORD PTR [rdx-0x7b727c54]
   14002155b:	(bad)  
   14002155c:	adc    ecx,eax
   14002155e:	ja     0x14002156a
   140021560:	loop   0x1400215ce
   140021562:	cmp    eax,0x8ec0f2dd
   140021567:	jns    0x140021578
   140021569:	out    dx,eax
   14002156a:	sbb    BYTE PTR [rbx+rdi*1+0xd],ch
   14002156e:	rex.WRB test QWORD PTR [r13+0x19],0x72802a8
   140021576:	(bad)  
   140021577:	or     eax,0xefa80068
   14002157c:	cmp    BYTE PTR [rcx+0x59],dl
   14002157f:	sub    QWORD PTR [rip+0x6e08129c],rsi        # 0x1ae0a2822
   140021586:	sub    BYTE PTR [rdi+0x1e56f7c3],0xde
   14002158d:	fild   WORD PTR [rdi]
   14002158f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021590:	jmp    0x105c24c39
   140021595:	or     ebx,DWORD PTR [rax+0x21]
   140021598:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021599:	movabs ds:0x20b72074f0515808,al
   1400215a2:	add    BYTE PTR [rsi+0x19],cl
   1400215a5:	fs or  bl,dl
   1400215a8:	and    DWORD PTR [rsi+rdi*4+0x5f],esp
   1400215ac:	xchg   esp,eax
   1400215ad:	test   DWORD PTR [rdi+0x4d90bc9],0x382b3c80
   1400215b7:	push   rbx
   1400215b8:	rex.WXB movabs r11,0x667aeb03de63b47f
   1400215c2:	hlt    
   1400215c3:	and    ebx,DWORD PTR [rax+0x7e]
   1400215c6:	ins    DWORD PTR es:[rdi],dx
   1400215c7:	in     eax,dx
   1400215c8:	popf   
   1400215c9:	add    dl,BYTE PTR [rax+0x5]
   1400215cc:	xor    cl,bl
   1400215ce:	sub    BYTE PTR [rdx-0x57fc580],dh
   1400215d4:	iret   
   1400215d5:	ss pop rsp
   1400215d7:	mov    ecx,0xeedd5ced
   1400215dc:	and    sil,BYTE PTR [rsp+r11*1]
   1400215e0:	jle    0x1400215fa
   1400215e2:	(bad)  
   1400215e3:	adc    al,BYTE PTR [rbx+rcx*8]
   1400215e6:	retf   
   1400215e7:	adc    al,0x9d
   1400215e9:	(bad)  
   1400215ea:	cmp    eax,0x49bbb9b0
   1400215ef:	movsxd ecx,DWORD PTR [rdi]
   1400215f1:	rex.RXB cld 
   1400215f3:	(bad)  
   1400215f4:	int    0x59
   1400215f6:	lock and eax,0xb7b904e
   1400215fc:	outs   dx,DWORD PTR ds:[rsi]
   1400215fd:	mov    esp,0x80dae775
   140021602:	xor    al,0x76
   140021604:	or     eax,0x4fc1ce4
   140021609:	(bad)  
   14002160a:	pop    rdi
   14002160b:	out    dx,al
   14002160c:	retf   
   14002160d:	(bad)  
   14002160e:	and    BYTE PTR [rdi+0x23f7496b],0x3b
   140021615:	out    0xde,al
   140021617:	dec    edx
   140021619:	xchg   ecx,eax
   14002161a:	sbb    DWORD PTR [rdi],esp
   14002161c:	sar    BYTE PTR [rbx+rax*4-0x71],1
   140021620:	movabs ds:0x8252140e500550c4,al
   140021629:	jnp    0x14002167a
   14002162b:	mov    ah,0x8e
   14002162d:	sbb    al,0x3c
   14002162f:	fnsave [rdx+0x1ec2081a]
   140021635:	test   BYTE PTR es:[rsi-0x2fd6c036],0xf1
   14002163d:	mov    bl,0x42
   14002163f:	or     bl,cl
   140021641:	add    BYTE PTR [rdi-0x29],al
   140021644:	mov    ebp,0x4f8c4902
   140021649:	sti    
   14002164a:	jns    0x14002160b
   14002164c:	popf   
   14002164d:	sbb    DWORD PTR [rdx],eax
   14002164f:	rex.WB ins DWORD PTR es:[rdi],dx
   140021651:	or     DWORD PTR [rdi+0x1],0x679ebf06
   140021658:	jns    0x1400215de
   14002165a:	mov    dl,0x60
   14002165c:	add    edi,DWORD PTR [rdi]
   14002165e:	icebp  
   14002165f:	movsxd ebp,DWORD PTR [rax+0x3c]
   140021662:	jns    0x140021647
   140021664:	xchg   ebx,ebx
   140021666:	repnz cmp DWORD PTR ds:[rdi],0x1e
   14002166b:	repnz sub edi,DWORD PTR [rbx-0x4a81ebd1]
   140021672:	(bad)  
   140021673:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021674:	xchg   BYTE PTR [rsi+0x2680cb01],ah
   14002167a:	pop    rbp
   14002167b:	(bad)  
   14002167c:	cmp    eax,0x3b9eb367
   140021681:	ds jne 0x14002167a
   140021684:	stos   DWORD PTR es:[rdi],eax
   140021685:	imul   eax,DWORD PTR [rdx+0x2f473e59],0x4478b9eb
   14002168f:	xchg   edi,eax
   140021690:	lahf   
   140021691:	adc    ecx,DWORD PTR [rax]
   140021693:	add    al,0xa1
   140021695:	(bad)  
   140021696:	fcom   QWORD PTR [rax+0x50]
   140021699:	xor    eax,ebx
   14002169b:	movabs ds:0x4fce42ca2760241d,al
   1400216a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400216a5:	cli    
   1400216a6:	push   rdx
   1400216a7:	(bad)  
   1400216a8:	jmp    0x1400216e9
   1400216aa:	mov    WORD PTR [rax+rdi*8],ss
   1400216ad:	nop
   1400216ae:	lahf   
   1400216af:	(bad)  
   1400216b0:	(bad)  
   1400216b1:	add    BYTE PTR [rsp+rcx*4],cl
   1400216b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400216b5:	scas   eax,DWORD PTR es:[rdi]
   1400216b6:	fnstsw WORD PTR [rbx-0x28785517]
   1400216bc:	(bad)  
   1400216bd:	jmp    0x1400216fb
   1400216bf:	test   DWORD PTR [rsi+0x63],esp
   1400216c2:	mov    esp,0x29fe1501
   1400216c7:	add    BYTE PTR [rbp+0x0],ah
   1400216ca:	in     eax,0x41
   1400216cc:	and    DWORD PTR [rip+0xffffffffc77f7eb8],esp        # 0x10781958a
   1400216d2:	cdq    
   1400216d3:	fsubrp st(1),st
   1400216d5:	lods   al,BYTE PTR ds:[rsi]
   1400216d6:	retf   
   1400216d7:	lahf   
   1400216d8:	xchg   ebp,eax
   1400216d9:	mov    cl,0x60
   1400216db:	pop    rsp
   1400216dc:	(bad)  
   1400216dd:	jmp    0x1400216b6
   1400216df:	imul   ecx,DWORD PTR [rbx-0x42],0x7979679e
   1400216e6:	(bad)  
   1400216e7:	cmp    eax,0x1cb0ec12
   1400216ec:	add    al,0xbe
   1400216ee:	xchg   eax,eax
   1400216f0:	(bad)
   1400216f3:	sub    eax,0x130630bd
   1400216f8:	pop    rcx
   1400216f9:	(bad)  
   1400216fa:	fcom   st(7)
   1400216fc:	(bad)  
   1400216fd:	lods   al,BYTE PTR ds:[rsi]
   1400216fe:	rex.R pop rsp
   140021700:	sahf   
   140021701:	(bad)  
   140021702:	pop    rbp
   140021703:	jne    0x1400216e0
   140021705:	(bad)  
   140021706:	test   DWORD PTR [rdi],ecx
   140021708:	outs   dx,BYTE PTR ds:[rsi]
   140021709:	cmp    al,0xde
   14002170b:	xor    DWORD PTR [rcx-0x70],esi
   14002170e:	addr32 sbb eax,0xc2a02452
   140021714:	(bad)  
   140021715:	and    eax,0x5ca00aa0
   14002171a:	sub    BYTE PTR [rcx+rcx*1-0x52],dh
   14002171e:	(bad)  
   140021720:	stc    
   140021721:	pop    rdx
   140021722:	lea    ecx,[rdi+rdi*2+0x68]
   140021726:	mov    ecx,0x35bb8ce7
   14002172b:	and    BYTE PTR [rbx+0x7e],al
   14002172e:	add    al,0x18
   140021730:	jno    0x140021793
   140021732:	adc    BYTE PTR [rcx],bl
   140021734:	(bad)  
   140021735:	(bad)  
   140021736:	std    
   140021737:	xor    BYTE PTR [rsi-0x67],cl
   14002173a:	or     ebp,eax
   14002173c:	lods   eax,DWORD PTR ds:[rsi]
   14002173d:	mov    ebp,0x7213e48b
   140021742:	jbe    0x14002175b
   140021744:	movabs ds:0x4bfa8e84821b7f3e,al
   14002174d:	lea    eax,[rax+0x637e91f1]
   140021753:	rex.WR jle 0x1400217be
   140021756:	mov    eax,0xba9b99e5
   14002175b:	(bad)  
   14002175c:	std    
   14002175d:	hlt    
   14002175e:	lock jo 0x1400217b7
   140021761:	rex.RB xchg r9d,eax
   140021763:	imul   BYTE PTR [rbx-0x46]
   140021766:	outs   dx,DWORD PTR ds:[rsi]
   140021767:	or     al,BYTE PTR [rdx+0x5d]
   14002176a:	xor    BYTE PTR [rdx-0x1f68b660],0x1b
   140021771:	(bad)  
   140021772:	je     0x1400217c8
   140021774:	xchg   edi,eax
   140021775:	sub    eax,0xa3beba19
   14002177a:	rex.X lahf 
   14002177c:	mov    gs,WORD PTR [rdi]
   14002177e:	or     eax,0x649178c5
   140021783:	add    edi,DWORD PTR [rsi+0x4664047]
   140021789:	rex.WX stos BYTE PTR es:[rdi],al
   14002178b:	pop    rsi
   14002178c:	fadd   QWORD PTR [rip+0xffffffff8ac0b3c3]        # 0xcac2cb55
   140021792:	jmp    0x140021790
   140021794:	pop    rax
   140021795:	mov    eax,0x3cb09ebd
   14002179a:	es or  al,0xc8
   14002179d:	frstor [rax+0x76049941]
   1400217a3:	out    dx,al
   1400217a4:	fst    QWORD PTR [rbx-0x53]
   1400217a7:	(bad)  
   1400217a8:	(bad)  
   1400217a9:	pop    rcx
   1400217aa:	mov    ebp,0xc358f968
   1400217af:	retf   0xcf10
   1400217b2:	mov    ebp,esi
   1400217b4:	std    
   1400217b5:	push   0xfffffffffffffff9
   1400217b7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400217b8:	sbb    BYTE PTR [rcx+rax*1+0x46710f94],dl
   1400217bf:	movabs al,ds:0xdcd50095f6c3f9b6
   1400217c8:	sub    ebx,eax
   1400217ca:	push   rsi
   1400217cb:	pop    rbp
   1400217cc:	sbb    al,0x79
   1400217ce:	(bad)  
   1400217cf:	push   rdx
   1400217d0:	cs setl ch
   1400217d4:	mov    bh,0x91
   1400217d6:	push   rdx
   1400217d7:	mov    BYTE PTR [rdx+0x7f5cdcf5],ch
   1400217dd:	js     0x1400217f6
   1400217df:	mov    dil,BYTE PTR [r11+0x5c]
   1400217e3:	icebp  
   1400217e4:	btc    DWORD PTR [rip+0xffffffffc0380cc2],edx        # 0x1003a24ad
   1400217eb:	xor    BYTE PTR [rsi-0x71e41c25],dl
   1400217f1:	jbe    0x1400217cf
   1400217f3:	jg     0x140021840
   1400217f5:	xlat   BYTE PTR ds:[rbx]
   1400217f6:	jne    0x140021827
   1400217f8:	and    ah,cl
   1400217fa:	icebp  
   1400217fb:	rol    DWORD PTR [rax+0x2a8034df],cl
   140021801:	xor    BYTE PTR [rdx],0xa1
   140021804:	leave  
   140021805:	or     al,0xf7
   140021807:	jnp    0x14002185f
   140021809:	sub    al,0xd8
   14002180b:	xor    eax,0xfa376234
   140021810:	mov    esi,0x8064117e
   140021815:	(bad)  
   140021816:	xchg   ebp,eax
   140021817:	rex.RX jle 0x140021893
   14002181a:	adc    ecx,DWORD PTR [rcx-0xe5c6e1e]
   140021820:	es pushf 
   140021822:	es (bad) 
   140021824:	add    eax,DWORD PTR [rbp-0x2e0e5fa0]
   14002182a:	(bad)  
   14002182b:	push   rax
   14002182c:	imul   BYTE PTR [rbx]
   14002182e:	repz add ecx,DWORD PTR [rax]
   140021831:	(bad)  
   140021832:	mov    edx,0xaeecf9dd
   140021837:	fnstenv [rdi+0x7f]
   14002183a:	jae    0x140021809
   14002183c:	xor    eax,0xbe09c3af
   140021841:	or     bh,bh
   140021843:	xor    al,0x82
   140021845:	mov    es,WORD PTR [rip+0xa0a1f2f]        # 0x14a0c377a
   14002184b:	add    BYTE PTR [rax-0x13],al
   14002184e:	mov    ebp,0x3fabad93
   140021853:	call   rcx
   140021855:	xchg   ecx,eax
   140021856:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140021857:	(bad)  
   140021858:	and    BYTE PTR [rcx-0x3e],dh
   14002185b:	rex.WR xchg rcx,rax
   14002185d:	xor    BYTE PTR [rbx+0x50],dl
   140021860:	or     DWORD PTR [rcx+rdx*2],esp
   140021863:	rex jle 0x14002187d
   140021866:	mov    edi,0x7ada4000
   14002186b:	movabs ds:0xfab054f77af47e88,eax
   140021874:	(bad)  
   140021875:	lahf   
   140021876:	movabs al,ds:0xfee7eb43d2f67cff
   14002187f:	jl     0x14002186e
   140021881:	(bad)  
   140021882:	popf   
   140021883:	(bad)  
   140021884:	push   rcx
   140021885:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021886:	cld    
   140021887:	loop   0x140021878
   140021889:	imul   edx,DWORD PTR [rcx-0x3978eb31],0x0
   140021890:	retf   0xe286
   140021893:	lods   al,BYTE PTR ds:[rsi]
   140021894:	add    BYTE PTR [rbx],cl
   140021896:	sar    dh,0xab
   140021899:	mov    bh,0xd2
   14002189b:	imul   DWORD PTR [rbp-0x25a26331]
   1400218a1:	xchg   edx,eax
   1400218a2:	rcr    BYTE PTR [rax+riz*1-0x5a],cl
   1400218a6:	lock adc al,0x7c
   1400218a9:	jge    0x14002191c
   1400218ab:	or     esp,DWORD PTR [rdx+0x4ddefff9]
   1400218b1:	(bad)  
   1400218b2:	stos   DWORD PTR es:[rdi],eax
   1400218b3:	out    dx,eax
   1400218b4:	out    0x81,al
   1400218b6:	(bad)  
   1400218b7:	xchg   ebx,eax
   1400218b8:	jl     0x140021872
   1400218ba:	loop   0x14002184b
   1400218bc:	sar    DWORD PTR [rbx-0x72],cl
   1400218bf:	jle    0x1400218d9
   1400218c1:	adc    BYTE PTR [rax+0x6e],dh
   1400218c4:	pop    rdi
   1400218c5:	jg     0x1400218ac
   1400218c7:	leave  
   1400218c8:	fwait
   1400218c9:	sahf   
   1400218ca:	mov    ebx,0xa7bda9ee
   1400218cf:	sub    ah,BYTE PTR [rdi-0x30]
   1400218d2:	pop    rsp
   1400218d3:	clc    
   1400218d4:	xor    eax,0xa00d37d8
   1400218d9:	rex cmp DWORD PTR cs:[rcx+0x60],edx
   1400218de:	add    DWORD PTR [rbx+0x3e46da7b],edi
   1400218e4:	sbb    al,0xc
   1400218e6:	sub    ecx,eax
   1400218e8:	xor    BYTE PTR [rsi+0x3a8df00b],al
   1400218ee:	adc    ebx,edi
   1400218f0:	and    BYTE PTR [rip+0xffffffffe01dc49a],0x8d        # 0x1201fdd91
   1400218f7:	rex pop rsi
   1400218f9:	ror    cl,1
   1400218fb:	out    0x14,eax
   1400218fd:	cld    
   1400218fe:	sti    
   1400218ff:	add    al,al
   140021901:	stc    
   140021902:	xchg   BYTE PTR [rcx],bh
   140021904:	lock (bad) 
   140021906:	dec    dh
   140021908:	sti    
   140021909:	outs   dx,BYTE PTR ds:[rsi]
   14002190a:	pop    rsi
   14002190b:	jle    0x1400218ea
   14002190d:	outs   dx,DWORD PTR ds:[rsi]
   14002190e:	rex.RXB jmp 0x140021977
   140021911:	add    al,0xc1
   140021913:	out    0xd7,eax
   140021915:	(bad)  
   140021916:	sahf   
   140021917:	imul   ecx,DWORD PTR [rax],0x45e50055
   14002191d:	movabs eax,ds:0x6b1baf67b7b9e849
   140021926:	cwde   
   140021927:	movsxd edi,esi
   140021929:	or     al,0xc1
   14002192b:	(bad)  
   14002192c:	out    dx,eax
   14002192d:	lock xor al,0x80
   140021930:	xor    BYTE PTR [rcx+0x3e8d87ca],ah
   140021936:	lods   al,BYTE PTR ds:[rsi]
   140021937:	(bad)  
   140021938:	call   0x16204775e
   14002193d:	adc    al,0x83
   14002193f:	sbb    eax,DWORD PTR [rax+0x37de4041]
   140021945:	pushf  
   140021946:	jbe    0x140021985
   140021948:	mov    eax,0x779dde76
   14002194d:	lods   eax,DWORD PTR ds:[rsi]
   14002194e:	pop    rsp
   14002194f:	mov    al,0x19
   140021951:	rex.WRX
   140021952:	lock jne 0x1400219b0
   140021955:	out    dx,eax
   140021956:	xor    al,0x87
   140021958:	mov    edx,0x93446500
   14002195d:	xchg   esp,eax
   14002195e:	loopne 0x14002190e
   140021960:	sahf   
   140021961:	mov    dh,0xf1
   140021963:	out    dx,eax
   140021964:	sub    al,0x1e
   140021966:	(bad)  
   140021967:	cmp    ebp,DWORD PTR [rbx-0x13e3a0d3]
   14002196d:	jg     0x14002197f
   14002196f:	je     0x1400219e8
   140021971:	(bad)  
   140021972:	pop    rsp
   140021973:	adc    BYTE PTR [rax],0x17
   140021976:	xchg   esp,eax
   140021977:	lahf   
   140021978:	xchg   ecx,eax
   140021979:	xchg   edx,eax
   14002197a:	adc    BYTE PTR [rsp+rcx*1],0xb9
   14002197e:	jae    0x140021963
   140021980:	or     eax,0x91db7473
   140021985:	test   bh,0x3e
   140021988:	imul   DWORD PTR [rbx-0x244330bb]
   14002198e:	fstp   TBYTE PTR [rdx]
   140021990:	test   dh,ah
   140021992:	push   rbx
   140021993:	jl     0x1400219c9
   140021995:	fdiv   DWORD PTR [rdi]
   140021997:	or     eax,0xdca00ca1
   14002199c:	sub    ah,cl
   14002199e:	or     bl,BYTE PTR [rax-0x1]
   1400219a1:	jle    0x14002198a
   1400219a3:	rex.WXB or rax,0xfffffffff6ec8ce0
   1400219a9:	xchg   edx,eax
   1400219aa:	add    BYTE PTR [rsi-0x2f],bl
   1400219ad:	mov    esp,edi
   1400219af:	repnz pop rsi
   1400219b1:	loop   0x140021a13
   1400219b3:	(bad)  
   1400219b4:	movabs ds:0x50af4ebfa5246275,al
   1400219bd:	rex.WRX jrcxz 0x140021987
   1400219c0:	iret   
   1400219c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400219c2:	pop    rbp
   1400219c3:	rex.WRXB cld 
   1400219c5:	in     eax,dx
   1400219c6:	mov    bh,BYTE PTR [rbx-0x4a230342]
   1400219cc:	(bad)  
   1400219cd:	add    edx,DWORD PTR [rax]
   1400219cf:	retf   0x863f
   1400219d2:	retfw  
   1400219d4:	cmp    dl,BYTE PTR [rbp-0x8]
   1400219d7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400219d8:	sbb    eax,0x151e742e
   1400219dd:	in     eax,0x41
   1400219df:	jno    0x140021984
   1400219e1:	jo     0x1400219e8
   1400219e3:	rex sti 
   1400219e5:	xchg   ecx,eax
   1400219e6:	rex.RXB (bad) 
   1400219e8:	std    
   1400219e9:	in     al,dx
   1400219ea:	pushf  
   1400219eb:	idiv   ah
   1400219ed:	jbe    0x14002198e
   1400219ef:	(bad)  
   1400219f0:	idiv   DWORD PTR [rsi-0x591c782]
   1400219f6:	(bad)
   1400219fa:	adc    al,BYTE PTR [rip+0xffffffffe77663c3]        # 0x127787dc3
   140021a00:	(bad)  
   140021a01:	pand   mm3,QWORD PTR [rdi-0x50103902]
   140021a08:	(bad)  [rax-0x5d906f9e]
   140021a0e:	(bad)  
   140021a0f:	push   rdi
   140021a10:	rcr    DWORD PTR [rdi+0x6034d0c6],0xf9
   140021a17:	push   rcx
   140021a18:	pushf  
   140021a19:	adc    eax,0xd57db470
   140021a1e:	ins    DWORD PTR es:[rdi],dx
   140021a1f:	xlat   BYTE PTR ds:[rbx]
   140021a20:	movq   mm5,mm1
   140021a23:	pop    rax
   140021a24:	outs   dx,BYTE PTR ds:[rsi]
   140021a25:	std    
   140021a26:	adc    DWORD PTR [rcx+0xc530326],ecx
   140021a2c:	jmp    0x140021a9f
   140021a2e:	rex.W
   140021a2f:	add    al,0xdf
   140021a32:	or     edi,edi
   140021a34:	js     0x1400219f9
   140021a36:	sbb    al,0x7c
   140021a38:	jmp    QWORD PTR [rbp+riz*8+0xf]
   140021a3c:	idiv   DWORD PTR [rbp-0x309440c8]
   140021a42:	icebp  
   140021a43:	(bad)  
   140021a44:	(bad)  
   140021a45:	cmp    cl,al
   140021a47:	(bad)
   140021a4b:	not    BYTE PTR [rbp+0x50025ff2]
   140021a51:	(bad)  
   140021a52:	push   rax
   140021a53:	jbe    0x1400219d9
   140021a55:	(bad)  
   140021a56:	ret    0x2d
   140021a59:	pop    rdx
   140021a5a:	outs   dx,DWORD PTR ds:[rsi]
   140021a5b:	cwde   
   140021a5c:	(bad)  
   140021a5d:	cmp    dh,bl
   140021a5f:	int    0xef
   140021a61:	sbb    eax,0x6951d55a
   140021a66:	sub    al,0x96
   140021a68:	or     BYTE PTR [rdi-0x6e85bc77],bh
   140021a6e:	(bad)  
   140021a6f:	out    dx,eax
   140021a70:	sbb    edi,ebx
   140021a72:	or     al,0x30
   140021a74:	pop    rdx
   140021a75:	xor    eax,DWORD PTR [rdi+0x56540e0e]
   140021a7b:	std    
   140021a7c:	jp     0x140021a69
   140021a7e:	pushf  
   140021a7f:	push   rdi
   140021a80:	pop    rsi
   140021a81:	fdivr  DWORD PTR [rsi]
   140021a83:	stos   DWORD PTR es:[rdi],eax
   140021a84:	cmovle esp,eax
   140021a87:	movsxd eax,ecx
   140021a89:	push   rdi
   140021a8a:	stos   DWORD PTR es:[rdi],eax
   140021a8b:	jg     0x140021a96
   140021a8d:	rex.X sbb DWORD PTR [rax-0x7],eax
   140021a91:	push   rcx
   140021a92:	or     rsi,rbp
   140021a95:	in     eax,dx
   140021a96:	imul   ebx,DWORD PTR [rip+0x7b267c39],0xfffffff9        # 0x1bb2896d6
   140021a9d:	xchg   ebx,eax
   140021a9e:	jae    0x140021abb
   140021aa0:	mov    edi,ebp
   140021aa2:	pop    rcx
   140021aa3:	add    BYTE PTR [rax],dh
   140021aa5:	cmp    DWORD PTR [rbp+rdi*8-0x4a],esp
   140021aa9:	(bad)  
   140021aaa:	test   DWORD PTR [rip+0xffffffffef331d50],0xf968181c        # 0x12f353804
   140021ab4:	shl    ebx,cl
   140021ab6:	scas   eax,DWORD PTR es:[rdi]
   140021ab7:	pop    rdi
   140021ab8:	stc    
   140021ab9:	out    0xbf,eax
   140021abb:	in     al,dx
   140021abc:	jmp    0x140021ada
   140021abe:	(bad)  
   140021abf:	test   DWORD PTR [rdx-0x52bd13d1],eax
   140021ac5:	(bad)  
   140021ac6:	and    eax,0x53006508
   140021acb:	add    DWORD PTR [rbp+0x16],eax
   140021ace:	shl    BYTE PTR [rsi-0x31],1
   140021ad1:	int    0x43
   140021ad3:	push   rdi
   140021ad4:	std    
   140021ad5:	repnz mov ds,esi
   140021ad8:	jne    0x140021a6f
   140021ada:	test   dh,ah
   140021adc:	add    eax,DWORD PTR [rax]
   140021ade:	in     eax,0x70
   140021ae0:	in     eax,dx
   140021ae1:	ror    DWORD PTR [rbx+rsi*8+0x6b],0xd
   140021ae6:	sar    DWORD PTR [rdi],cl
   140021ae8:	jo     0x140021b28
   140021aea:	(bad)  [rdx-0x250d5845]
   140021af0:	adc    ebp,DWORD PTR [rdi-0x18924ea1]
   140021af6:	mov    cl,0xb6
   140021af8:	(bad)  
   140021af9:	add    al,0x81
   140021afb:	lahf   
   140021afc:	push   0xffffffff8f4b65f1
   140021b01:	pop    rdx
   140021b02:	std    
   140021b03:	rex.WXB adc r10b,cl
   140021b06:	add    BYTE PTR [rsi+0x159e206],ah
   140021b0c:	mov    ch,0xdf
   140021b0e:	mov    ebp,0x4fc4fb3d
   140021b13:	outs   dx,BYTE PTR ds:[rsi]
   140021b14:	jmp    0x140021b75
   140021b16:	cmp    ebp,DWORD PTR [rdi+0x66]
   140021b19:	std    
   140021b1a:	ds add edx,edi
   140021b1d:	jmp    0x140021b5e
   140021b1f:	push   rsi
   140021b20:	rex.RXB iret 
   140021b22:	cdq    
   140021b23:	mov    cl,0x74
   140021b25:	mul    DWORD PTR [rcx-0x3a844b3f]
   140021b2b:	(bad)  
   140021b2c:	outs   dx,DWORD PTR ds:[esi]
   140021b2e:	jp     0x140021b2e
   140021b30:	lods   eax,DWORD PTR ds:[rsi]
   140021b31:	cmp    DWORD PTR [rbp-0x641faf48],edi
   140021b37:	pop    rcx
   140021b38:	jl     0x140021b27
   140021b3a:	fistp  QWORD PTR [rdi+0x600aa184]
   140021b40:	(bad)  
   140021b41:	and    BYTE PTR [rsi-0x1241cfeb],bl
   140021b47:	jo     0x140021ba4
   140021b49:	xlat   BYTE PTR ds:[rbx]
   140021b4a:	ror    BYTE PTR [rdi-0x72f2e8a9],cl
   140021b50:	data16 sti 
   140021b52:	neg    DWORD PTR [rbp-0x19012698]
   140021b58:	sti    
   140021b59:	sbb    eax,0xf9bd3c1f
   140021b5e:	repnz pop rsi
   140021b60:	test   BYTE PTR [rsi],bl
   140021b62:	(bad)  
   140021b63:	pop    rax
   140021b64:	loopne 0x140021b8d
   140021b66:	(bad)  
   140021b67:	not    DWORD PTR [rax+rsi*8+0x15]
   140021b6b:	or     al,BYTE PTR [rbp+0x2850a142]
   140021b71:	adc    al,0xa
   140021b73:	test   DWORD PTR [rdx-0x5f],eax
   140021b76:	push   rax
   140021b77:	sub    BYTE PTR [rdx+rcx*1],dl
   140021b7a:	test   DWORD PTR [rdx-0x5f],eax
   140021b7d:	push   rax
   140021b7e:	sub    BYTE PTR [rdx+rcx*1],dl
   140021b81:	test   DWORD PTR [rdx-0x5f],eax
   140021b84:	push   rax
   140021b85:	sub    BYTE PTR [rdx+rcx*1],dl
   140021b88:	test   DWORD PTR [rdx-0x5f],eax
   140021b8b:	push   rax
   140021b8c:	sub    BYTE PTR [rdx+rcx*1],dl
   140021b8f:	test   DWORD PTR [rdx-0x5f],eax
   140021b92:	push   rax
   140021b93:	sub    BYTE PTR [rsi-0x66f401e0],ah
   140021b99:	and    esi,DWORD PTR [rax+0x0]
   140021b9c:	xlat   BYTE PTR ds:[rbx]
   140021b9d:	lahf   
   140021b9e:	(bad)  
   140021b9f:	ret    0x0
   140021ba2:	add    BYTE PTR [rax],al
   140021ba4:	rex.WB
   140021ba5:	rex.RB
   140021ba6:	rex.WRX
   140021ba7:	rex.R scas al,BYTE PTR es:[rdi]
   140021ba9:	rex.X (bad) 
   140021bab:	(bad)  
   140021bac:	sub    BYTE PTR [rax],al
   140021bae:	add    BYTE PTR [rax],al
   140021bb0:	xor    BYTE PTR [rax],al
   140021bb2:	add    BYTE PTR [rax],al
   140021bb4:	(bad)  
   140021bb5:	add    BYTE PTR [rax],al
   140021bb7:	add    BYTE PTR [rcx],al
   140021bb9:	add    BYTE PTR [rax],ah
   140021bbb:	add    BYTE PTR [rax],al
   140021bbd:	add    BYTE PTR [rax],al
   140021bbf:	add    BYTE PTR [rax+0x25],al
	...
   140021da1:	add    BYTE PTR [rax],al
   140021da3:	add    BYTE PTR [rsi+0x79],cl
   140021da6:	jg     0x140021ded
   140021da8:	rex.XB sahf 
   140021daa:	rcl    BYTE PTR [rcx+0x3f666b53],0x59
   140021db1:	push   rsi
   140021db2:	rex.X or BYTE PTR [rax],al
	...
   140021e5d:	add    BYTE PTR [rax],al
   140021e5f:	add    BYTE PTR [rbx+riz*2+0x59],dl
   140021e63:	add    eax,0xbabc9b44
   140021e68:	cmp    edi,DWORD PTR [rdx-0x45c4000c]
   140021e6e:	hlt    
   140021e6f:	inc    BYTE PTR [rsp+rbx*4-0x41]
   140021e73:	mov    esi,0x34455858
   140021e78:	push   rsp
   140021e79:	(bad)  
   140021e7a:	pop    rsp
   140021e7b:	add    eax,DWORD PTR [rax]
	...
   140021f1d:	add    BYTE PTR [rax],al
   140021f1f:	add    BYTE PTR [rbp+0x64],dl
   140021f22:	pop    rdx
   140021f23:	xor    al,0x3b
   140021f25:	mov    ecx,0xba3bfaf2
   140021f2a:	hlt    
   140021f2b:	(bad)  
   140021f2c:	cmp    edi,DWORD PTR [rdx-0x46c4010c]
   140021f32:	hlt    
   140021f33:	(bad)  
   140021f34:	cmp    al,0xb1
   140021f36:	in     al,dx
   140021f37:	repz push rcx
   140021f39:	push   0x71
   140021f3b:	imul   edx,DWORD PTR [rdi+0x56],0x4d
   140021f3f:	(bad)  
	...
   140021fdc:	push   rbp
   140021fdd:	(bad)  
   140021fde:	pop    rcx
   140021fdf:	add    ecx,DWORD PTR [rcx-0x77]
   140021fe2:	lahf   
   140021fe3:	pushf  
   140021fe4:	cmp    edi,DWORD PTR [rcx-0x46c4010c]
   140021fea:	hlt    
   140021feb:	(bad)  
   140021fec:	cmp    esi,DWORD PTR [rdi-0x4bc4010c]
   140021ff2:	repz (bad) 
   140021ff4:	cmp    al,0xad
   140021ff6:	icebp  
   140021ff7:	(bad)  
   140021ff8:	cmp    al,0xa1
   140021ffa:	out    dx,eax
   140021ffb:	std    
   140021ffc:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140021ffe:	mov    WORD PTR [rdi+0x8515256],cs
	...
   14002209c:	push   rdi
   14002209d:	pop    rax
   14002209e:	rex.WRXB (bad) 
   1400220a0:	cmp    eax,0x3cf1eaa9
   1400220a5:	mov    al,0xf2
   1400220a7:	(bad)  
   1400220a8:	cmp    al,0xaf
   1400220aa:	repnz (bad) 
   1400220ac:	cmp    al,0xac
   1400220ae:	icebp  
   1400220af:	(bad)  
   1400220b0:	cmp    al,0xa7
   1400220b2:	lock (bad) 
   1400220b4:	cmp    esp,DWORD PTR [rax-0x66c40011]
   1400220ba:	out    dx,al
   1400220bb:	(bad)  
   1400220bc:	cmp    edx,DWORD PTR [rcx+0x684affee]
   1400220c2:	xchg   ebp,eax
   1400220c3:	xchg   esi,eax
   1400220c4:	push   rsi
   1400220c5:	rex.WRB push r8
   1400220c7:	or     DWORD PTR [rax],eax
	...
   140022155:	add    BYTE PTR [rax],al
   140022157:	add    BYTE PTR [rbx+0x51],dl
   14002215a:	pop    rsi
   14002215b:	add    DWORD PTR [rsi+0x65],ecx
   14002215e:	jge    0x1400221db
   140022160:	cmp    ebx,DWORD PTR [rdx-0x61c40111]
   140022166:	out    dx,eax
   140022167:	(bad)  
   140022168:	cmp    ebx,DWORD PTR [rsi-0x64c40011]
   14002216e:	out    dx,eax
   14002216f:	(bad)  
   140022170:	cmp    ebx,DWORD PTR [rax-0x6bc40112]
   140022176:	out    dx,al
   140022177:	(bad)  
   140022178:	cmp    ecx,DWORD PTR [rdi-0x76c40113]
   14002217e:	in     eax,dx
   14002217f:	(bad)  
   140022180:	cmp    eax,DWORD PTR [rdx+0x5b4efeec]
   140022186:	add    DWORD PTR [rsi+0x6574c55],0x0
	...
   140022215:	add    BYTE PTR [rax],al
   140022217:	add    BYTE PTR [rsi+0x41],dl
   14002221a:	rex or edi,DWORD PTR [rip+0x3bded470]        # 0x17be0f691
   140022221:	sub    esp,0xfffffffe
   140022224:	cmp    ecx,DWORD PTR [rax-0x75c40113]
   14002222a:	in     eax,dx
   14002222b:	(bad)  
   14002222c:	cmp    ecx,DWORD PTR [rbx-0x77c40113]
   140022232:	in     al,dx
   140022233:	(bad)  
   140022234:	cmp    eax,DWORD PTR [rbp-0x7cc40014]
   14002223a:	in     al,dx
   14002223b:	(bad)  
   14002223c:	cmp    eax,DWORD PTR [rcx+0x7e3cfeec]
   140022242:	jmp    0x140022243
   140022244:	cmp    al,0x79
   140022246:	(bad)  
   140022247:	cld    
   140022248:	push   rdx
   140022249:	push   rcx
   14002224a:	imul   esp,DWORD PTR [rsi+0x54],0x35c4d
	...
   1400222d1:	add    BYTE PTR [rax],al
   1400222d3:	add    BYTE PTR [rbp+0x35],cl
   1400222d6:	add    DWORD PTR [r12+r15*1+0x56],ecx
   1400222db:	pop    rbx
   1400222dc:	xor    bl,BYTE PTR [rax-0x2e]
   1400222df:	push   QWORD PTR [rsi]
   1400222e1:	data16 (bad) 
   1400222e4:	cmp    BYTE PTR [rdi-0x1a],ch
   1400222e7:	(bad)  
   1400222e8:	cmp    DWORD PTR [rbx-0x17],esi
   1400222eb:	(bad)  
   1400222ec:	cmp    dh,BYTE PTR [rsi-0x16]
   1400222ef:	(bad)  
   1400222f0:	cmp    dh,BYTE PTR [rdi-0x16]
   1400222f3:	(bad)  
   1400222f4:	cmp    dh,BYTE PTR [rsi-0x16]
   1400222f7:	(bad)  
   1400222f8:	cmp    dh,BYTE PTR [rdi-0x16]
   1400222fb:	(bad)  
   1400222fc:	cmp    edi,DWORD PTR [rax-0x15]
   1400222ff:	(bad)  
   140022300:	cmp    edi,DWORD PTR [rax-0x15]
   140022303:	(bad)  
   140022304:	cmp    al,0x78
   140022306:	jmp    0x140022307
   140022308:	cmp    eax,0x56f7e877
   14002230d:	rex.WXB push r10
   14002230f:	rex.RB push r12
   140022311:	rex.WRXB pop r15
   140022313:	add    al,BYTE PTR [rax]
	...
   140022349:	add    BYTE PTR [rax],al
   14002234b:	add    BYTE PTR [rcx+0x32],dl
   14002234e:	(bad)  
   14002234f:	add    dl,BYTE PTR [rbx+0x32]
   140022352:	cmp    dl,BYTE PTR [rsi]
	...
   140022394:	rex.WRXB (bad) 
   140022396:	xor    BYTE PTR [rdx],cl
   140022398:	(bad)  
   140022399:	xor    ecx,DWORD PTR [rdx-0x4cc1d635]
   14002239f:	jmp    FWORD PTR [rip+0x31fec04a]        # 0x17200e3ef
   1400223a5:	push   rsp
   1400223a6:	int    0xfe
   1400223a8:	xor    al,0x5c
   1400223aa:	xlat   BYTE PTR ds:[rbx]
   1400223ab:	push   QWORD PTR [rsi]
   1400223ad:	movsxd ebx,esi
   1400223af:	(bad)  
   1400223b0:	(bad)  
   1400223b1:	jecxz  0x1400223b2
   1400223b4:	(bad)  
   1400223b5:	push   0xffffffffffffffe6
   1400223b7:	(bad)  
   1400223b8:	cmp    BYTE PTR [rbp-0x18],ch
   1400223bb:	(bad)  
   1400223bc:	cmp    BYTE PTR [rax-0x17],dh
   1400223bf:	(bad)  
   1400223c0:	cmp    DWORD PTR [rdx+rbp*8-0x1],esi
   1400223c4:	cmp    dh,BYTE PTR [rdi-0x16]
   1400223c7:	(bad)  
   1400223c8:	cmp    edi,DWORD PTR [rdx-0x15]
   1400223cb:	(bad)  
   1400223cc:	(bad)  
   1400223cd:	ja     0x1400223aa
   1400223cf:	out    0x58,eax
   1400223d1:	rex.WB
   1400223d2:	rex.RXB sub al,0x54
   1400223d5:	push   rcx
   1400223d6:	(bad)  
   1400223d7:	add    DWORD PTR [rax],eax
	...
   140022405:	add    BYTE PTR [rax],al
   140022407:	add    BYTE PTR [rdi+0x32],cl
   14002240a:	rex.RX add r10b,BYTE PTR [rbx+0x32]
   14002240e:	cmp    eax,DWORD PTR [rax+0x3e]
   140022411:	xor    edi,DWORD PTR [rdi-0x73]
	...
   140022450:	rex.RXB sub DWORD PTR [r9],r14d
   140022453:	add    DWORD PTR [rdx+rbp*1+0x3e],eax
   140022457:	pop    rsi
   140022458:	(bad)  
   140022459:	es xchg esp,eax
   14002245b:	(bad)  
   14002245c:	and    ebp,DWORD PTR [rsi]
   14002245e:	popf   
   14002245f:	jmp    QWORD PTR [rsi]
   140022461:	ss test al,0xff
   140022464:	sub    bh,BYTE PTR [rdi]
   140022466:	mov    ah,0xff
   140022468:	sub    al,0x48
   14002246a:	mov    edi,0xc9502fff
   14002246f:	push   QWORD PTR [rbx]
   140022471:	push   rdi
   140022472:	sar    edi,1
   140022474:	xor    eax,0x36ffda5e
   140022479:	fs loope 0x14002247b
   14002247c:	(bad)  
   14002247d:	push   0xffffffffffffffe6
   14002247f:	push   QWORD PTR [rdi]
   140022481:	outs   dx,BYTE PTR ds:[rsi]
   140022482:	call   0x12a765d86
   140022487:	(bad)  
   140022488:	cmp    bh,BYTE PTR [rcx-0x15]
   14002248b:	(bad)  
   14002248c:	cmp    edi,DWORD PTR [rbx+rbp*8-0x1]
   140022490:	rex.X je 0x14002245d
   140022493:	rcr    BYTE PTR [rax+0x49],cl
   140022496:	rex.RX sbb r8b,BYTE PTR [rax]
	...
   1400224c1:	add    BYTE PTR [rax],al
   1400224c3:	add    BYTE PTR [rcx+0x32],dl
   1400224c6:	add    edx,DWORD PTR [r8+0x32]
   1400224ca:	rex.RXB
   1400224cb:	rex.WR (bad) 
   1400224cd:	xor    esi,DWORD PTR [rbp+0x633247ee]
   1400224d3:	add    BYTE PTR ds:[rax],al
	...
   14002250e:	add    BYTE PTR [rax],al
   140022510:	push   rax
   140022511:	sub    ebx,DWORD PTR [rsi]
   140022513:	sbb    eax,0xe2761e1e
   140022518:	sbb    bl,BYTE PTR [rsi]
   14002251a:	mov    esi,edi
   14002251c:	sbb    eax,0x21ff9023
   140022521:	sub    dl,BYTE PTR [rdi-0x5ecfdb02]
   140022527:	(bad)  
   140022528:	(bad)  
   140022529:	cmp    DWORD PTR [rdi+rdi*8-0x149bed6],ebp
   140022530:	sub    al,0x49
   140022532:	sar    dh,0x30
   140022535:	push   rcx
   140022536:	retf   0x34ff
   140022539:	pop    rax
   14002253a:	sar    esi,cl
   14002253c:	ss (bad) 
   14002253e:	fdiv   st(6),st
   140022540:	(bad)  
   140022541:	addr32 in al,0xff
   140022544:	(bad)  
   140022545:	ins    DWORD PTR es:[rdi],dx
   140022546:	call   0x12a775e49
   14002254b:	(bad)  
   14002254c:	cmp    bh,BYTE PTR [rdx-0x15]
   14002254f:	(bad)  
   140022550:	cmp    eax,0x45feeb7f
   140022555:	jno    0x14002250e
   140022557:	rcr    BYTE PTR [rdx+0x47],0x3c
   14002255b:	adc    al,BYTE PTR [rax]
	...
   14002257d:	add    BYTE PTR [rax],al
   14002257f:	add    BYTE PTR [rcx+0x32],dl
   140022582:	rex.XB add eax,0x6453334d
   140022588:	sub    eax,0x34f7bd34
   14002258d:	xor    esp,DWORD PTR [rax+0x6b3244ca]
   140022593:	add    eax,0x0
	...
   1400225b8:	test   DWORD PTR [rdi+0x15],ecx
   1400225bb:	add    bh,BYTE PTR [rbx+0x46]
   1400225be:	clts   
   1400225c0:	or     DWORD PTR [rsi+0x15],0x2
   1400225c4:	add    BYTE PTR [rax],al
   1400225c6:	add    BYTE PTR [rax],al
   1400225c8:	(bad)  
   1400225c9:	xor    eax,0x2b530113
   1400225ce:	(bad)  
   1400225cf:	adc    ah,BYTE PTR [rsi]
   1400225d1:	sbb    al,0x55
   1400225d3:	mov    edx,0xfe791914
   1400225d8:	(bad)  
   1400225d9:	sbb    edi,DWORD PTR [rdi-0x2]
   1400225dc:	sbb    DWORD PTR [rip+0x211cff86],ebx        # 0x1611f2568
   1400225e2:	(bad)  
   1400225e3:	(bad)  
   1400225e4:	(bad)  
   1400225e5:	(bad)  
   1400225e6:	xchg   ebp,eax
   1400225e7:	(bad)  
   1400225e8:	and    ebp,DWORD PTR [rsi]
   1400225ea:	sahf   
   1400225eb:	jmp    QWORD PTR [rsi]
   1400225ed:	xor    eax,0x3e29fea8
   1400225f2:	mov    dl,0xfe
   1400225f4:	sub    al,0x46
   1400225f6:	mov    ebp,0xc74e2eff
   1400225fb:	(bad)  
   1400225fc:	xor    edx,DWORD PTR [rsi-0x2e]
   1400225ff:	(bad)  
   140022600:	ss (bad) 
   140022602:	fdiv   st(7),st
   140022604:	(bad)  
   140022605:	push   0x6f38fee5
   14002260a:	jmp    0x12b7a600d
   14002260f:	(bad)  
   140022610:	cmp    al,0x7e
   140022612:	jmp    0x140022612
   140022614:	cmp    eax,DWORD PTR [rbx+0x7245ffec]
   14002261a:	mov    dl,0xb8
   14002261c:	pop    rcx
   14002261d:	rex.W
   14002261e:	ds (bad) 
   140022620:	push   rbp
   140022621:	push   rdx
   140022622:	push   rdi
   140022623:	add    DWORD PTR [rax],eax
	...
   140022639:	add    BYTE PTR [rax],al
   14002263b:	add    BYTE PTR [rbp+0x32],dl
   14002263e:	or     BYTE PTR ss:[rax+0x33],cl
   140022642:	gs jns 0x140022672
   140022645:	xor    eax,0x332cfbc1
   14002264a:	mov    edi,0x743241fe
   14002264f:	push   0x0
	...
   140022674:	test   BYTE PTR [rdi+0x14],cl
   140022677:	(bad)  
   140022678:	(bad)  
   140022679:	pop    rax
   14002267a:	sbb    eax,0x397cb65d
   14002267f:	mov    edi,0x6b1e578c
   140022684:	js     0x1400226cb
   140022686:	or     eax,0xd477c33
   14002268b:	push   rax
   14002268c:	cmp    eax,0x17c83b24
   140022691:	adc    bl,BYTE PTR [rbp-0x1]
   140022694:	adc    edx,DWORD PTR [rbp*2+0x771814fe]
   14002269b:	(bad)  
   14002269c:	(bad)  
   14002269d:	sbb    edi,DWORD PTR [rbp-0x1]
   1400226a0:	sbb    DWORD PTR [rip+0x201bfe84],ebx        # 0x1601e252a
   1400226a6:	mov    esi,?
   1400226a8:	(bad)  
   1400226a9:	es xchg ebx,eax
   1400226ab:	jmp    QWORD PTR [rbx]
   1400226ad:	sub    eax,0x3425fe9c
   1400226b2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400226b3:	(bad)  
   1400226b4:	sub    DWORD PTR [rip+0x462bffb2],edi        # 0x1862e266c
   1400226ba:	mov    ebp,0xc84e2ffe
   1400226bf:	(bad)  
   1400226c0:	xor    edx,DWORD PTR [rdi-0x2c]
   1400226c3:	push   QWORD PTR [rsi]
   1400226c5:	(bad)  
   1400226c6:	(bad)  
   1400226c8:	(bad)  
   1400226c9:	imul   esp,edi,0xfffffffe
   1400226cc:	cmp    BYTE PTR [rdx+rbp*8-0x1],dh
   1400226d0:	cmp    al,0x7c
   1400226d2:	jmp    0x1400226d2
   1400226d4:	cmp    eax,DWORD PTR [rbx-0x77c40014]
   1400226da:	in     al,dx
   1400226db:	inc    BYTE PTR [rbx+0x7b]
   1400226de:	ret    0x59c9
   1400226e1:	rex.WB (bad) 
   1400226e3:	sub    al,0x56
   1400226e5:	rex.WR
   1400226e6:	rex.WX add rax,QWORD PTR [rax]
	...
   1400226f1:	add    BYTE PTR [rax],al
   1400226f3:	add    BYTE PTR [rsi+rsi*1+0x3b],dl
   1400226f7:	add    bl,BYTE PTR [rax+0x33]
   1400226fa:	sub    al,0x15
   1400226fc:	rex.X
   1400226fd:	sbb    DWORD PTR ss:[rbp-0x23bcad3],0xffc1342d
   140022708:	xor    esi,DWORD PTR cs:[rsi+0x653246ee]
   14002270f:	adc    al,0x0
	...
   140022729:	add    BYTE PTR [rax],al
   14002272b:	add    BYTE PTR [rbp+rdx*2+0x4a7f0117],cl
   140022732:	movhps QWORD PTR [rbx-0x3061d48f],xmm5
   140022739:	xchg   edx,eax
   14002273a:	rex.RXB dec r11b
   14002273d:	nop
   14002273e:	inc    r15
   140022741:	mov    cs,WORD PTR [rbp-0x1]
   140022744:	mov    bh,0x81
   140022746:	rex.R push QWORD PTR [rsi-0x7200d384]
   14002274d:	pop    rsi
   14002274e:	sub    bh,bh
   140022750:	sub    al,0x1c
   140022752:	rex.W call QWORD PTR [rdi]
   140022755:	adc    DWORD PTR [rax-0x1],ebx
   140022758:	adc    edx,DWORD PTR [rdx+rbp*2]
   14002275b:	call   QWORD PTR [rbx]
   14002275d:	(bad)  
   14002275e:	jbe    0x14002275f
   140022760:	(bad)  
   140022761:	sbb    edi,DWORD PTR [rdi+rdi*8+0x18]
   140022765:	sbb    eax,0x201bff84
   14002276a:	mov    edi,?
   14002276c:	(bad)  
   14002276d:	es xchg ebx,eax
   14002276f:	jmp    QWORD PTR [rbx]
   140022771:	sub    eax,0x3526ff9c
   140022776:	test   al,0xff
   140022778:	sub    bh,BYTE PTR [rsi]
   14002277a:	mov    bl,0xff
   14002277c:	sub    al,0x47
   14002277e:	mov    edi,0xcc5131ff
   140022783:	push   QWORD PTR [rip+0x37ffd95c]        # 0x1780200e5
   140022789:	push   0x7138ffe5
   14002278e:	jmp    0x12b7d6392
   140022793:	(bad)  
   140022794:	cmp    al,0x83
   140022796:	in     al,dx
   140022797:	(bad)  
   140022798:	cmp    ecx,DWORD PTR [rax-0x74c40013]
   14002279e:	in     eax,dx
   14002279f:	(bad)  
   1400227a0:	cmp    eax,0x4df1e488
   1400227a5:	pop    rdx
   1400227a6:	jne    0x14002272f
   1400227a8:	push   rdi
   1400227a9:	xor    ebp,DWORD PTR [r15]
   1400227ac:	pop    rax
   1400227ad:	cmp    eax,0x39571530
   1400227b2:	xor    BYTE PTR [rax],ah
   1400227b4:	rex.WRX cmp QWORD PTR [rcx+0x68],r10
   1400227b8:	xor    eax,0x2eddb63d
   1400227bd:	cmp    cl,cl
   1400227bf:	jmp    FWORD PTR [rip+0x2dffc335]        # 0x16e01eafa
   1400227c5:	xor    al,0xbf
   1400227c7:	(bad)  
   1400227c8:	cmp    al,0x32
   1400227ca:	test   BYTE PTR [rdx+0x178323f],bl
	...
   1400227e8:	mov    dl,BYTE PTR [rsi+rdx*1+0x4]
   1400227ec:	xchg   DWORD PTR [rcx+0x14],edx
   1400227ef:	ds (bad) 
   1400227f1:	mov    DWORD PTR [rcx],edi
   1400227f3:	(bad)  
   1400227f4:	rcl    BYTE PTR [rbp-0x6c2f01bf],cl
   1400227fa:	rex.XB dec r14d
   1400227fd:	xchg   edx,eax
   1400227fe:	rex.W dec cl
   140022801:	(bad)  
   140022802:	rex.WXB inc r12
   140022805:	mov    WORD PTR [rbp-0x2],cs
   140022808:	mov    ecx,0xb0fe4c84
   14002280d:	js     0x14002283e
   14002280f:	inc    BYTE PTR [rsi+0x27ff2b58]
   140022815:	sbb    BYTE PTR [rdi-0x2],al
   140022818:	(bad)  
   140022819:	adc    DWORD PTR [rsi-0x2],edx
   14002281c:	adc    edx,DWORD PTR [rcx+rbp*2]
   14002281f:	call   QWORD PTR [rbx]
   140022821:	(bad)  
   140022822:	jbe    0x140022822
   140022824:	(bad)  
   140022825:	sbb    edi,DWORD PTR [rbp-0x2]
   140022828:	sbb    DWORD PTR [rip+0x211cff85],ebx        # 0x1611f27b3
   14002282e:	(bad)  
   14002282f:	(bad)  
   140022830:	(bad)  
   140022831:	(bad)  
   140022832:	xchg   ebp,eax
   140022833:	(bad)  
   140022834:	and    al,0x2e
   140022836:	lahf   
   140022837:	jmp    QWORD PTR [rdi]
   140022839:	(bad)  
   14002283a:	stos   DWORD PTR es:[rdi],eax
   14002283b:	(bad)  
   14002283c:	sub    eax,DWORD PTR [rcx-0x49]
   14002283f:	(bad)  
   140022840:	sub    eax,0x33ffc54c
   140022845:	push   rsi
   140022846:	sar    esi,cl
   140022848:	(bad)  
   140022849:	fs loope 0x14002284a
   14002284c:	(bad)  
   14002284d:	outs   dx,BYTE PTR ds:[rsi]
   14002284e:	jmp    0x12b7b6352
   140022853:	(bad)  
   140022854:	cmp    al,0x82
   140022856:	in     al,dx
   140022857:	(bad)  
   140022858:	cmp    ecx,DWORD PTR [rax-0x74c40114]
   14002285e:	in     eax,dx
   14002285f:	(bad)  
   140022860:	cmp    ecx,DWORD PTR [rbx-0x79c40013]
   140022866:	in     al,dx
   140022867:	(bad)  
   140022868:	cmp    bh,BYTE PTR [rbp-0x17]
   14002286b:	cld    
   14002286c:	cmp    BYTE PTR [rbx+rbx*8-0x11],ch
   140022870:	xor    eax,0x32f8df59
   140022875:	rex.WB (bad) 
   140022878:	(bad)  
   140022879:	cmp    eax,0x362effce
   14002287e:	(bad)  
   14002287f:	(bad)  
   140022880:	sub    eax,0x2cfec134
   140022885:	xor    edi,DWORD PTR [rbp+0x663245fe]
   14002288b:	cmp    BYTE PTR [rax],al
	...
   1400228a1:	add    BYTE PTR [rax],al
   1400228a3:	add    BYTE PTR [rdx-0x60f4edb3],al
   1400228a9:	push   0xffffffff98d37923
   1400228ae:	rex.XB not r12b
   1400228b1:	cdq    
   1400228b2:	rex.X (bad) 
   1400228b4:	rcl    DWORD PTR [rsi-0x6a2e01be],cl
   1400228ba:	rex.X call rax
   1400228bd:	xchg   ebx,eax
   1400228be:	rex.R dec spl
   1400228c1:	nop
   1400228c2:	inc    r14
   1400228c5:	lea    ecx,[rbp-0x2]
   1400228c8:	ror    DWORD PTR [rdx-0x7a4601b2],0x50
   1400228cf:	(bad)  
   1400228d0:	lods   al,BYTE PTR ds:[rsi]
   1400228d1:	jbe    0x140022904
   1400228d3:	push   QWORD PTR [rsi+0x4e]
   1400228d6:	(bad)  
   1400228d7:	(bad)  
   1400228d8:	(bad)  
   1400228d9:	adc    al,0x47
   1400228db:	(bad)  
   1400228dc:	(bad)  
   1400228dd:	adc    DWORD PTR [rdi-0x1],edx
   1400228e0:	adc    edx,DWORD PTR [rbx+rbp*2]
   1400228e3:	(bad)  
   1400228e4:	adc    al,0x18
   1400228e6:	ja     0x1400228e6
   1400228e8:	(bad)  
   1400228e9:	sbb    edi,DWORD PTR [rsi-0x1]
   1400228ec:	sbb    DWORD PTR [rip+0x221cfe87],ebx        # 0x1621f2779
   1400228f2:	(bad)  
   1400228f3:	(bad)  
   1400228f4:	and    DWORD PTR [rcx],ebp
   1400228f6:	xchg   edi,eax
   1400228f7:	jmp    QWORD PTR [rcx+rsi*1]
   1400228fa:	movabs ds:0xbe462cfeb03b28fe,eax
   140022903:	push   QWORD PTR [rcx]
   140022905:	push   rdx
   140022906:	(bad)  
   140022907:	(bad)  
   140022908:	ss pop rdi
   14002290a:	(bad)  
   14002290c:	(bad)  
   14002290d:	ins    BYTE PTR es:[rdi],dx
   14002290e:	call   0x12b7a6412
   140022913:	(bad)  
   140022914:	cmp    al,0x82
   140022916:	in     al,dx
   140022917:	(bad)  
   140022918:	cmp    ecx,DWORD PTR [rcx-0x74c40114]
   14002291e:	in     eax,dx
   14002291f:	(bad)  
   140022920:	cmp    ecx,DWORD PTR [rdx-0x7ac40013]
   140022926:	in     al,dx
   140022927:	(bad)  
   140022928:	cmp    DWORD PTR [rbx+rbp*8-0x2],edi
   14002292c:	cmp    DWORD PTR [rbp-0x17],ebp
   14002292f:	push   QWORD PTR [rip+0x31fee357]        # 0x172010c8c
   140022935:	rex.RX xlat BYTE PTR ds:[rbx]
   140022937:	(bad)  
   140022938:	cs cmp cl,bl
   14002293b:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e00ed76
   140022941:	xor    al,0xc0
   140022943:	(bad)  
   140022944:	xor    dh,BYTE PTR [rdx]
   140022946:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140022947:	rol    BYTE PTR [rbp+0x31],1
   14002294a:	data16 add al,0x0
	...
   140022959:	add    BYTE PTR [rax],al
   14002295b:	add    BYTE PTR [rbp-0x7dfde5a8],cl
   140022961:	rex.WRB adc r12b,BYTE PTR [r15]
   140022964:	mov    ebp,0xd8bc3785
   140022969:	sahf   
   14002296a:	rex.W (bad) 
   14002296c:	xlat   BYTE PTR ds:[rbx]
   14002296d:	popf   
   14002296e:	rex.RX call rsi
   140022971:	fwait
   140022972:	rex.RB call r12
   140022975:	cwde   
   140022976:	rex.X call rbx
   140022979:	xchg   esi,eax
   14002297a:	call   r9
   14002297d:	xchg   esp,eax
   14002297e:	rex.XB dec r15d
   140022981:	xchg   edx,eax
   140022982:	rex.RXB dec r8d
   140022985:	mov    cs,WORD PTR [rdi+rdi*8-0x3d]
   140022989:	mov    ecx,DWORD PTR [rbp-0x1]
   14002298c:	mov    esp,0xb6ff5087
   140022991:	(bad)  
   140022992:	push   rcx
   140022993:	jmp    QWORD PTR [rdi+0x61ff2e72]
   140022999:	(bad)  
   14002299a:	xor    eax,0x49111aff
   14002299f:	call   QWORD PTR [rdi]
   1400229a1:	adc    DWORD PTR [rdx-0x1],ebx
   1400229a4:	adc    edx,DWORD PTR [rsi+rbp*2]
   1400229a7:	call   QWORD PTR [rcx+rbx*1]
   1400229aa:	jns    0x1400229ab
   1400229ac:	(bad)  
   1400229ad:	sbb    al,0x80
   1400229af:	call   FWORD PTR [rdx]
   1400229b1:	(bad)  
   1400229b2:	mov    edi,edi
   1400229b4:	sbb    eax,0x23ff9225
   1400229b9:	sub    eax,0x3626ff9c
   1400229be:	test   eax,0xb8412bff
   1400229c3:	jmp    FWORD PTR [rdi]
   1400229c5:	rex.WRX enter 0x35ff,0x5b
   1400229ca:	fcos   
   1400229cc:	(bad)  
   1400229cd:	push   0xffffffffffffffe7
   1400229cf:	(bad)  
   1400229d0:	cmp    DWORD PTR [rdi-0x16],esi
   1400229d3:	(bad)  
   1400229d4:	cmp    al,0x82
   1400229d6:	in     al,dx
   1400229d7:	(bad)  
   1400229d8:	cmp    ecx,DWORD PTR [rcx-0x74c40014]
   1400229de:	in     eax,dx
   1400229df:	(bad)  
   1400229e0:	cmp    al,0x8a
   1400229e2:	in     eax,dx
   1400229e3:	(bad)  
   1400229e4:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1585c601]
   1400229eb:	(bad)  
   1400229ec:	cmp    DWORD PTR [rcx-0x18],ebp
   1400229ef:	push   QWORD PTR [rdx+rdx*2]
   1400229f2:	loope  0x1400229f3
   1400229f4:	xor    BYTE PTR [rcx-0x2e],al
   1400229f7:	jmp    FWORD PTR [rsi]
   1400229f9:	(bad)  
   1400229fa:	enter  0x2dff,0x34
   1400229fe:	ret    0x2cff
   140022a01:	xor    edi,DWORD PTR [rsi+0x703242ff]
   140022a07:	jae    0x140022a09
	...
   140022a15:	add    BYTE PTR [rax],al
   140022a17:	add    BYTE PTR [rax-0x6df8e7ac],cl
   140022a1d:	pop    rbp
   140022a1e:	(bad)  
   140022a1f:	pop    rbx
   140022a20:	rcr    DWORD PTR [rax-0x602716b9],1
   140022a26:	rex.WB (bad) 
   140022a28:	fcomp  DWORD PTR [rsi-0x612701b7]
   140022a2e:	rex.W call rdi
   140022a31:	popf   
   140022a32:	rex.RX (bad) 
   140022a34:	(bad)  
   140022a35:	fwait
   140022a36:	rex.R (bad) 
   140022a38:	rcr    DWORD PTR [rax-0x6a2d00be],cl
   140022a3e:	rex.B (bad) 
   140022a40:	rcl    BYTE PTR [rbx-0x6f3400bb],1
   140022a46:	rex.WX inc spl
   140022a49:	mov    WORD PTR [rbp-0x2],cs
   140022a4c:	mov    ebp,0xb8fe4f88
   140022a51:	test   BYTE PTR [rcx-0x1],dl
   140022a54:	scas   eax,DWORD PTR es:[rdi]
   140022a55:	jle    0x140022aa8
   140022a57:	(bad)  
   140022a58:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140022a59:	outs   dx,DWORD PTR ds:[rsi]
   140022a5a:	sub    esi,edi
   140022a5c:	rex.XB sub edi,DWORD PTR [r14]
   140022a5f:	call   FWORD PTR [rax]
   140022a61:	adc    BYTE PTR [rbx-0x2],cl
   140022a64:	(bad)  
   140022a65:	adc    bl,BYTE PTR [rdi-0x2]
   140022a68:	adc    edx,DWORD PTR [rsi]
   140022a6a:	jb     0x140022a6b
   140022a6c:	adc    eax,0x18fe7b1a
   140022a71:	sbb    eax,0x211cfe84
   140022a76:	(bad)  
   140022a77:	jmp    QWORD PTR [rax]
   140022a79:	sub    BYTE PTR [rsi-0x5cceda02],dl
   140022a7f:	(bad)  
   140022a80:	sub    DWORD PTR [rip+0x492dffb2],edi        # 0x189302a38
   140022a86:	ret    
   140022a87:	(bad)  
   140022a88:	xor    al,0x58
   140022a8a:	(bad)  
   140022a8b:	(bad)  
   140022a8c:	(bad)  
   140022a8d:	push   0x7639ffe5
   140022a92:	(bad)  
   140022a93:	(bad)  
   140022a94:	cmp    al,0x82
   140022a96:	in     al,dx
   140022a97:	(bad)  
   140022a98:	cmp    ecx,DWORD PTR [rcx-0x74c40113]
   140022a9e:	in     eax,dx
   140022a9f:	(bad)  
   140022aa0:	cmp    al,0x8a
   140022aa2:	in     eax,dx
   140022aa3:	(bad)  
   140022aa4:	cmp    al,BYTE PTR [rdx+0x7739feec]
   140022aaa:	(bad)  
   140022aab:	(bad)  
   140022aac:	cmp    BYTE PTR [rbx-0x19],ah
   140022aaf:	push   QWORD PTR [rbx]
   140022ab1:	rex.WR (bad) 
   140022ab4:	(bad)  
   140022ab5:	cmp    eax,0x362efece
   140022aba:	(bad)  
   140022abb:	jmp    FWORD PTR [rip+0x2cfec134]        # 0x16d00ebf5
   140022ac1:	xor    edi,DWORD PTR [rdx+0x633146f5]
   140022ac7:	sbb    eax,0x0
	...
   140022ad4:	xchg   DWORD PTR [rbx+0x18],edx
   140022ad7:	adc    eax,0x9f347bb1
   140022adc:	fldenv [rcx-0x5e2603b2]
   140022ae2:	rex.WRX (bad) 
   140022ae4:	fsub   DWORD PTR [rax-0x602701b3]
   140022aea:	rex.WXB (bad) 
   140022aec:	fcomp  DWORD PTR [rsi-0x612700b7]
   140022af2:	rex.W (bad) 
   140022af4:	xlat   BYTE PTR ds:[rbx]
   140022af5:	popf   
   140022af6:	rex.RX (bad) 
   140022af8:	(bad)  
   140022af9:	(bad)  
   140022afa:	rex.XB call r11
   140022afd:	xchg   esi,eax
   140022afe:	rex.B (bad) 
   140022b00:	rcl    DWORD PTR [rbx+rax*2+0x4991cdff],1
   140022b07:	inc    ch
   140022b09:	lea    ecx,[rbp-0x2]
   140022b0c:	mov    esi,0xb8fe4f88
   140022b11:	test   BYTE PTR [rcx-0x1],dl
   140022b14:	mov    cl,0x80
   140022b16:	push   rbx
   140022b17:	(bad)  
   140022b18:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022b19:	jp     0x140022b6c
   140022b1b:	(bad)  
   140022b1c:	xchg   esp,eax
   140022b1d:	movsxd ebp,DWORD PTR [rax]
   140022b1f:	jmp    FWORD PTR [rcx]
   140022b21:	sbb    al,BYTE PTR [rbp-0x2]
   140022b24:	sbb    DWORD PTR [rax],edx
   140022b26:	rex.WRXB (bad) 
   140022b28:	adc    eax,0x13ff6513
   140022b2d:	(bad)  
   140022b2e:	jbe    0x140022b2e
   140022b30:	(bad)  
   140022b31:	sbb    edi,DWORD PTR [rsi-0x2]
   140022b34:	sbb    bl,BYTE PTR [rsi]
   140022b36:	mov    bh,bh
   140022b38:	sbb    eax,0x23fe9124
   140022b3d:	sub    eax,0x3827fe9c
   140022b42:	lods   al,BYTE PTR ds:[rsi]
   140022b43:	jmp    FWORD PTR [rsi+rax*2]
   140022b46:	mov    ebp,0xd15432fe
   140022b4b:	(bad)  
   140022b4c:	(bad)  
   140022b4d:	data16 jrcxz 0x140022b4f
   140022b50:	cmp    DWORD PTR [rbp-0x16],esi
   140022b53:	(bad)  
   140022b54:	cmp    al,0x82
   140022b56:	in     al,dx
   140022b57:	(bad)  
   140022b58:	cmp    al,0x8a
   140022b5a:	in     eax,dx
   140022b5b:	(bad)  
   140022b5c:	cmp    al,0x8e
   140022b5e:	out    dx,al
   140022b5f:	(bad)  
   140022b60:	cmp    al,0x8a
   140022b62:	in     eax,dx
   140022b63:	(bad)  
   140022b64:	cmp    al,BYTE PTR [rax+0x7439feeb]
   140022b6a:	(bad)  
   140022b6b:	(bad)  
   140022b6c:	ss pop rbp
   140022b6e:	in     eax,0xff
   140022b70:	xor    al,BYTE PTR [rdi-0x27]
   140022b73:	(bad)  
   140022b74:	cs cmp cl,bl
   140022b77:	(bad)  
   140022b78:	sub    eax,0x2dffc335
   140022b7d:	xor    al,0xbf
   140022b7f:	(bad)  
   140022b80:	cmp    BYTE PTR [rdx],dh
   140022b82:	xchg   ecx,eax
   140022b83:	mov    dl,0x42
   140022b85:	xor    ch,BYTE PTR [rdi+0x2]
	...
   140022b94:	mov    ebx,0xd88c3d84
   140022b99:	movabs al,ds:0xa1d9ff52a1d9f852
   140022ba2:	push   rcx
   140022ba3:	(bad)  
   140022ba4:	fisub  DWORD PTR [rdx-0x5e2600b1]
   140022baa:	rex.WRX (bad) 
   140022bac:	fcomp  DWORD PTR [rdi-0x612700b4]
   140022bb2:	rex.WB call r15
   140022bb5:	sahf   
   140022bb6:	rex.W call rsi
   140022bb9:	pushf  
   140022bba:	rex.RB call r11
   140022bbd:	cwde   
   140022bbe:	rex.X call rdx
   140022bc1:	xchg   ebp,eax
   140022bc2:	rex.X dec edi
   140022bc5:	xchg   edx,eax
   140022bc6:	rex.RXB inc r14d
   140022bc9:	lea    ecx,[rdi+rdi*8-0x41]
   140022bcd:	mov    DWORD PTR [rsi-0x1],ecx
   140022bd0:	mov    eax,0xb1ff5184
   140022bd5:	adc    BYTE PTR [rbx-0x1],0xa9
   140022bd9:	jl     0x140022c31
   140022bdb:	call   FWORD PTR [rbp+0x76ff4771]
   140022be1:	rex.WRX
   140022be2:	call   FWORD PTR cs:[rdx+rdx*1]
   140022be6:	rex.RXB call FWORD PTR [r8]
   140022be9:	adc    DWORD PTR [rsi-0x1],edx
   140022bec:	adc    edx,DWORD PTR [rbp*2+0x791915ff]
   140022bf3:	call   FWORD PTR [rax]
   140022bf5:	sbb    al,0x82
   140022bf7:	call   FWORD PTR [rcx+riz*1]
   140022bfa:	(bad)  
   140022bfb:	jmp    QWORD PTR [rcx]
   140022bfd:	sub    DWORD PTR [rdi-0x58cbd901],edx
   140022c03:	jmp    FWORD PTR [rbx]
   140022c05:	rex.X mov ecx,0xcd5131ff
   140022c0b:	push   QWORD PTR [rdi]
   140022c0d:	fs loop 0x140022c0f
   140022c10:	cmp    DWORD PTR [rbp-0x16],esi
   140022c13:	(bad)  
   140022c14:	cmp    al,0x83
   140022c16:	in     al,dx
   140022c17:	(bad)  
   140022c18:	cmp    al,0x8b
   140022c1a:	in     eax,dx
   140022c1b:	(bad)  
   140022c1c:	cmp    ecx,DWORD PTR [rdi-0x75c30012]
   140022c22:	in     eax,dx
   140022c23:	(bad)  
   140022c24:	cmp    DWORD PTR [rdi-0x15],edi
   140022c27:	(bad)  
   140022c28:	cmp    DWORD PTR [rdi-0x17],ebp
   140022c2b:	push   QWORD PTR [rip+0x31ffe357]        # 0x172020f88
   140022c31:	rex.X (bad) 
   140022c33:	jmp    FWORD PTR [rsi]
   140022c35:	cmp    al,cl
   140022c37:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d01ee72
   140022c3d:	xor    edi,DWORD PTR [rsi+0x6c3143fe]
   140022c43:	push   rdi
	...
   140022c54:	mov    dh,0x80
   140022c56:	cmp    al,BYTE PTR [rcx]
   140022c58:	mov    cl,0x7b
   140022c5a:	(bad)  
   140022c5b:	and    eax,0x854085bc
   140022c60:	rcr    BYTE PTR [rdx-0x5e261cb0],cl
   140022c66:	push   rbx
   140022c67:	(bad)  
   140022c68:	fisub  DWORD PTR [rcx-0x5e2601b0]
   140022c6e:	rex.WRX (bad) 
   140022c70:	fcomp  DWORD PTR [rdi-0x612701b5]
   140022c76:	rex.WB (bad) 
   140022c78:	xlat   BYTE PTR ds:[rbx]
   140022c79:	popf   
   140022c7a:	rex.RXB call r12
   140022c7d:	cdq    
   140022c7e:	rex.XB (bad) 
   140022c80:	rcl    BYTE PTR [rsi-0x6d2f00bf],cl
   140022c86:	rex.RX inc dil
   140022c89:	mov    cs,WORD PTR [rsi+rdi*8-0x41]
   140022c8d:	mov    DWORD PTR [rsi-0x2],ecx
   140022c90:	mov    eax,0xb0ff5184
   140022c95:	adc    BYTE PTR [rsi+rdi*8-0x58],0x7b
   140022c9a:	push   rsi
   140022c9b:	(bad)  
   140022c9c:	sahf   
   140022c9d:	jne    0x140022cf5
   140022c9f:	dec    DWORD PTR [rax+0x49fe305c]
   140022ca5:	(bad)  
   140022ca6:	cmp    al,0xfe
   140022ca8:	sbb    BYTE PTR [rax],dl
   140022caa:	rex.WX call QWORD PTR [rsi]
   140022cad:	adc    bl,BYTE PTR [rdi-0x2]
   140022cb0:	adc    edx,DWORD PTR [rsi]
   140022cb2:	jae    0x140022cb2
   140022cb4:	(bad)  
   140022cb5:	sbb    edi,DWORD PTR [rbp-0x1]
   140022cb8:	sbb    bl,BYTE PTR [rsi]
   140022cba:	mov    dh,bh
   140022cbc:	(bad)  
   140022cbd:	es xchg ebx,eax
   140022cbf:	(bad)  
   140022cc0:	and    al,0x30
   140022cc2:	movabs eax,ds:0xc94e2ffeb43e2aff
   140022ccb:	(bad)  
   140022ccc:	ss (bad) 
   140022cce:	loopne 0x140022ccf
   140022cd0:	cmp    DWORD PTR [rbp-0x16],esi
   140022cd3:	(bad)  
   140022cd4:	cmp    al,0x84
   140022cd6:	in     al,dx
   140022cd7:	(bad)  
   140022cd8:	cmp    ecx,DWORD PTR [rbp-0x6fc40112]
   140022cde:	out    dx,al
   140022cdf:	(bad)  
   140022ce0:	cmp    ecx,DWORD PTR [rdx+0x7d39ffed]
   140022ce6:	jmp    0x140022ce6
   140022ce8:	cmp    DWORD PTR [rbx-0x18],ebp
   140022ceb:	(bad)  
   140022cec:	xor    al,0x51
   140022cee:	loopne 0x140022cef
   140022cf0:	(bad)  
   140022cf1:	ds iret 
   140022cf3:	(bad)  
   140022cf4:	cs ss (bad) 
   140022cf7:	(bad)  
   140022cf8:	sub    eax,0x2effc134
   140022cfd:	xor    dh,BYTE PTR [rdx+rbp*8+0x10623146]
	...
   140022d20:	mov    bl,0x7d
   140022d22:	cmp    DWORD PTR [rbx],ecx
   140022d24:	mov    eax,0xc7553d82
   140022d29:	nop
   140022d2a:	rex.RXB mov r9d,0xfc50a1d9
   140022d30:	fldenv [rcx-0x602701b2]
   140022d36:	rex.WX (bad) 
   140022d38:	xlat   BYTE PTR ds:[rbx]
   140022d39:	sahf   
   140022d3a:	rex.W call rsi
   140022d3d:	fwait
   140022d3e:	rex.R (bad) 
   140022d40:	rcl    DWORD PTR [rdi-0x6c2f00be],cl
   140022d46:	rex.RB dec r8b
   140022d49:	mov    cs,WORD PTR [rbx-0x2]
   140022d4c:	mov    edi,0xb7fe4e89
   140022d51:	test   BYTE PTR [rcx-0x1],dl
   140022d54:	scas   eax,DWORD PTR es:[rdi]
   140022d55:	jg     0x140022dab
   140022d57:	(bad)  
   140022d58:	sahf   
   140022d59:	jae    0x140022dad
   140022d5b:	dec    BYTE PTR [rbp+0x33]
   140022d5e:	rex.RXB jmp QWORD PTR [r14+r10*1]
   140022d62:	rex.R inc BYTE PTR [rbp+0x25fe2758]
   140022d69:	(bad)  
   140022d6a:	rex.RX call FWORD PTR [rax]
   140022d6d:	adc    DWORD PTR [rax-0x2],edx
   140022d70:	adc    al,0x14
   140022d72:	push   0xfffffffffffffffe
   140022d74:	adc    al,0x19
   140022d76:	jns    0x140022d77
   140022d78:	sbb    BYTE PTR [rip+0x221cfe83],bl        # 0x1621f2c01
   140022d7e:	(bad)  
   140022d7f:	(bad)  
   140022d80:	and    ebp,DWORD PTR [rsp+rbx*4]
   140022d83:	jmp    FWORD PTR [rax]
   140022d85:	cmp    ch,BYTE PTR [rdi-0x3ab4d102]
   140022d8b:	(bad)  
   140022d8c:	ss (bad) 
   140022d8e:	fdivp  st(7),st
   140022d90:	cmp    DWORD PTR [rbp-0x16],esi
   140022d93:	(bad)  
   140022d94:	cmp    al,0x85
   140022d96:	in     al,dx
   140022d97:	(bad)  
   140022d98:	cmp    al,0x8f
   140022d9a:	out    dx,al
   140022d9b:	(bad)  
   140022d9c:	cmp    al,0x91
   140022d9e:	out    dx,al
   140022d9f:	(bad)  
   140022da0:	cmp    ecx,DWORD PTR [rdx+0x7c39ffed]
   140022da6:	(bad)  
   140022da7:	(bad)  
   140022da8:	cmp    BYTE PTR [rsi-0x19],ah
   140022dab:	(bad)  
   140022dac:	xor    ecx,DWORD PTR [rbx-0x24]
   140022daf:	jmp    FWORD PTR [rdi]
   140022db1:	cmp    ecx,esp
   140022db3:	(bad)  
   140022db4:	sub    eax,0x2cfec435
   140022db9:	xor    al,0xbf
   140022dbb:	(bad)  
   140022dbc:	cmp    al,0x32
   140022dbe:	(bad)  
   140022dbf:	popf   
   140022dc0:	rex xor DWORD PTR [rbp+0x1],esi
	...
   140022de8:	mov    eax,0xb4013b82
   140022ded:	jge    0x140022e25
   140022def:	es mov ebp,0xd2883b86
   140022df5:	cdq    
   140022df6:	rex.W in al,0xd8
   140022df9:	sahf   
   140022dfa:	rex.W (bad) 
   140022dfc:	(bad)  
   140022dfd:	pushf  
   140022dfe:	rex.RB call r11
   140022e01:	cwde   
   140022e02:	rex.X call rax
   140022e05:	xchg   ebx,eax
   140022e06:	rex.RB dec r8d
   140022e09:	mov    cs,WORD PTR [rbx-0x1]
   140022e0c:	mov    edi,0xb7ff4f88
   140022e11:	adc    DWORD PTR [rcx-0x1],0xffffff97
   140022e15:	imul   ecx,DWORD PTR [rbx-0x1],0x3f
   140022e19:	sub    BYTE PTR [rbp-0x1],al
   140022e1c:	and    BYTE PTR [rdx],dl
   140022e1e:	rex.RX call FWORD PTR [rdx]
   140022e21:	adc    BYTE PTR [rdi-0x1],al
   140022e24:	rex.XB sub al,0x3b
   140022e27:	jmp    FWORD PTR [rax+0x44]
   140022e2a:	xor    edi,edi
   140022e2c:	sbb    DWORD PTR [rax],edx
   140022e2e:	rex.W call QWORD PTR [rsi]
   140022e31:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   140022e35:	(bad)  
   140022e36:	jae    0x140022e37
   140022e38:	(bad)  
   140022e39:	sbb    edi,DWORD PTR [rsi-0x1]
   140022e3c:	sbb    ebx,DWORD PTR [rdi]
   140022e3e:	mov    edi,edi
   140022e40:	and    BYTE PTR [rcx],ch
   140022e42:	xchg   edi,eax
   140022e43:	jmp    QWORD PTR [rsi]
   140022e45:	ss test eax,0xc1482dff
   140022e4b:	push   QWORD PTR [rip+0x39ffdc5e]        # 0x17a020aaf
   140022e51:	jne    0x140022e3d
   140022e53:	(bad)  
   140022e54:	cmp    al,0x87
   140022e56:	in     eax,dx
   140022e57:	(bad)  
   140022e58:	cmp    edx,DWORD PTR [rdx-0x6cc40011]
   140022e5e:	out    dx,eax
   140022e5f:	(bad)  
   140022e60:	cmp    ecx,DWORD PTR [rcx+0x7a39ffed]
   140022e66:	(bad)  
   140022e67:	push   QWORD PTR [rdi]
   140022e69:	(bad)  
   140022e6a:	out    0xff,al
   140022e6c:	xor    al,BYTE PTR [rdi-0x28]
   140022e6f:	jmp    FWORD PTR [rsi]
   140022e71:	cmp    cl,cl
   140022e73:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d01f0ae
   140022e79:	xor    edi,DWORD PTR [rsi+0x683244ff]
   140022e7f:	rex.X add BYTE PTR [rax],al
	...
   140022eb2:	add    BYTE PTR [rax],al
   140022eb4:	mov    dl,0x7c
   140022eb6:	xor    cl,BYTE PTR [rbx]
   140022eb8:	mov    ah,0x7d
   140022eba:	xor    dl,BYTE PTR [rdi-0x3b]
   140022ebd:	mov    WORD PTR [rbx],?
   140022ebf:	mov    esp,0xfa4297d3
   140022ec4:	rcl    BYTE PTR [rbx-0x713701bc],1
   140022eca:	rex.WXB (bad) 
   140022ecc:	mov    esi,0x8dfe4c88
   140022ed1:	(bad)  
   140022ed2:	rex.R (bad) 
   140022ed4:	(bad)  
   140022ed5:	(bad)  
   140022ed6:	rex.XB (bad) 
   140022ed8:	and    al,0x14
   140022eda:	rex.RX (bad) 
   140022edc:	sbb    eax,0x1cff4611
   140022ee1:	adc    DWORD PTR [rsi-0x2],eax
   140022ee4:	sbb    edx,DWORD PTR [rax]
   140022ee6:	rex.RX (bad) 
   140022ee8:	jns    0x140022f3a
   140022eea:	sub    edi,edi
   140022eec:	xor    BYTE PTR [rsi],bl
   140022eee:	rex.XB (bad) 
   140022ef0:	sbb    BYTE PTR [rax],dl
   140022ef2:	rex.WRX (bad) 
   140022ef4:	adc    al,0x14
   140022ef6:	push   0xffffffffffffffff
   140022ef8:	adc    eax,0x19fe7a19
   140022efd:	sbb    eax,0x251efe86
   140022f02:	xchg   ebx,eax
   140022f03:	jmp    QWORD PTR [rip+0x2cfea432]        # 0x16d00d33b
   140022f09:	rex.RB mov r12d,0xda5d35fe
   140022f0f:	(bad)  
   140022f10:	cmp    DWORD PTR [rbp-0x16],esi
   140022f13:	(bad)  
   140022f14:	cmp    ecx,DWORD PTR [rcx-0x6ac40013]
   140022f1a:	out    dx,eax
   140022f1b:	(bad)  
   140022f1c:	cmp    edx,DWORD PTR [rbp-0x76c40111]
   140022f22:	in     eax,dx
   140022f23:	(bad)  
   140022f24:	cmp    DWORD PTR [rdi-0x16],esi
   140022f27:	(bad)  
   140022f28:	ss pop rdx
   140022f2a:	in     al,0xfe
   140022f2c:	xor    BYTE PTR [rdx-0x2d],al
   140022f2f:	jmp    FWORD PTR [rsi]
   140022f31:	(bad)  
   140022f32:	(bad)  
   140022f33:	(bad)  
   140022f34:	sub    eax,0x30fec134
   140022f39:	xor    ebp,DWORD PTR [rbp+0x613247df]
   140022f3f:	(bad)  
	...
   140022f7c:	mov    dl,0x7a
   140022f7e:	(bad)  
   140022f7f:	add    ch,BYTE PTR [rsi-0x4bd4d38b]
   140022f85:	jnp    0x140022fbb
   140022f87:	nop
   140022f88:	ret    
   140022f89:	mov    DWORD PTR [rcx-0x14],eax
   140022f8c:	mov    WORD PTR [rcx+0x3d],fs
   140022f8f:	inc    BYTE PTR [rbp+0x2c]
   140022f92:	rex.X jmp FWORD PTR [rsi]
   140022f95:	sbb    al,BYTE PTR [rbp-0x2]
   140022f98:	sub    DWORD PTR [rdi],edx
   140022f9a:	rex.RX (bad) 
   140022f9c:	(bad)  
   140022f9d:	(bad)  
   140022f9e:	rex.RX jmp QWORD PTR [rsi]
   140022fa1:	adc    eax,0x1525fe46
   140022fa6:	rex.RX (bad) 
   140022fa8:	cmp    BYTE PTR [rdx],ah
   140022faa:	rex push QWORD PTR [rdi+0x4e]
   140022fae:	(bad)  
   140022faf:	(bad)  
   140022fb0:	sbb    dl,BYTE PTR [rcx]
   140022fb2:	rex.RXB (bad) 
   140022fb4:	(bad)  
   140022fb5:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   140022fb9:	(bad)  
   140022fba:	je     0x140022fba
   140022fbc:	(bad)  
   140022fbd:	sbb    al,0x80
   140022fbf:	(bad)  
   140022fc0:	sbb    al,0x22
   140022fc2:	mov    ?,edi
   140022fc4:	and    al,0x2e
   140022fc6:	lahf   
   140022fc7:	(bad)  
   140022fc8:	sub    al,BYTE PTR [rdx-0x48]
   140022fcb:	(bad)  
   140022fcc:	xor    al,0x5b
   140022fce:	xlat   BYTE PTR ds:[rbx]
   140022fcf:	(bad)  
   140022fd0:	cmp    DWORD PTR [rsi-0x16],esi
   140022fd3:	(bad)  
   140022fd4:	cmp    al,0x8c
   140022fd6:	out    dx,al
   140022fd7:	(bad)  
   140022fd8:	cmp    bl,BYTE PTR [rcx-0x67c50110]
   140022fde:	out    dx,eax
   140022fdf:	(bad)  
   140022fe0:	cmp    ecx,DWORD PTR [rax+0x7239ffed]
   140022fe6:	jmp    0x1215664e9
   140022feb:	(bad)  
   140022fec:	(bad)  
   140022fed:	ds iret 
   140022fef:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e00f42a
   140022ff5:	xor    al,0xbf
   140022ff7:	inc    BYTE PTR [rax+0x32]
   140022ffa:	jns    0x140022f85
   140022ffc:	xor    sil,BYTE PTR [rdi+0x1]
	...
   140023048:	test   DWORD PTR [rbx+riz*1+0x16],edx
   14002304c:	push   rdi
   14002304d:	(bad)  
   14002304e:	cmp    bh,dl
   140023050:	rex.RXB sub eax,0x2b44ff41
   140023056:	rex.X inc DWORD PTR [rax+0x28]
   14002305a:	rex.XB (bad) 
   14002305c:	cmp    esp,DWORD PTR [rbx+rax*2]
   14002305f:	push   QWORD PTR [rsi]
   140023061:	and    DWORD PTR [rdi+rdi*8+0x33],eax
   140023065:	(bad)  
   140023066:	rex.R push QWORD PTR [rax]
   140023069:	sbb    al,0x45
   14002306b:	push   QWORD PTR [rsp+rcx*2+0x30]
   14002306f:	(bad)  
   140023070:	cmp    ah,BYTE PTR [rip+0x1018ff40]        # 0x1501b2fb6
   140023076:	rex.WRX call QWORD PTR [rsp+r10*1]
   14002307a:	imul   edi,edi,0x15
   14002307d:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1a]
   140023081:	(bad)  
   140023082:	mov    bh,bh
   140023084:	and    ch,BYTE PTR [rbx]
   140023086:	(bad)  
   140023087:	jmp    FWORD PTR [rcx]
   140023089:	cmp    eax,0x5833ffb3
   14002308e:	(bad)  
   14002308f:	(bad)  
   140023090:	cmp    DWORD PTR [rdi-0x16],esi
   140023093:	(bad)  
   140023094:	cmp    ecx,DWORD PTR [rdi-0x63c50012]
   14002309a:	lock (bad) 
   14002309c:	cmp    bl,BYTE PTR [rdx-0x77c40010]
   1400230a2:	in     eax,dx
   1400230a3:	(bad)  
   1400230a4:	cmp    DWORD PTR [rdi-0x17],ebp
   1400230a7:	push   QWORD PTR [rbx]
   1400230a9:	rex.WRX fdivp st(7),st
   1400230ac:	cs cmp cl,bl
   1400230af:	jmp    FWORD PTR [rip+0x2dffc235]        # 0x16e01f2ea
   1400230b5:	xor    edi,DWORD PTR [rsi+0x613247fc]
   1400230bb:	xor    BYTE PTR [rax],al
	...
   140023109:	add    BYTE PTR [rax],al
   14002310b:	add    BYTE PTR [rsi+0x3c],ah
   14002310e:	(bad)  
   14002310f:	xor    DWORD PTR [rbx+0x52],edi
   140023112:	sub    al,0xf1
   140023114:	jne    0x140023165
   140023116:	xor    dh,bh
   140023118:	push   0x47
   14002311a:	ss (bad) 
   14002311c:	pop    rbx
   14002311d:	cmp    al,0x3c
   14002311f:	dec    DWORD PTR [rdi+0x33]
   140023122:	(bad)  
   140023123:	inc    BYTE PTR [rsi+0x2c]
   140023126:	inc    BYTE PTR [r8+0x27]
   14002312a:	rex.X inc DWORD PTR [rbp+0x2b]
   14002312e:	rex inc BYTE PTR [rax+0x1afe2f55]
   140023135:	adc    DWORD PTR [rax-0x1],ecx
   140023138:	(bad)  
   140023139:	adc    bl,BYTE PTR [rsi-0x2]
   14002313c:	adc    al,0x18
   14002313e:	ja     0x14002313e
   140023140:	sbb    DWORD PTR [rip+0x271fff85],ebx        # 0x1672230cb
   140023146:	xchg   ebp,eax
   140023147:	(bad)  
   140023148:	sub    BYTE PTR [rcx],bh
   14002314a:	scas   al,BYTE PTR es:[rdi]
   14002314b:	(bad)  
   14002314c:	xor    dl,BYTE PTR [rsi-0x2e]
   14002314f:	(bad)  
   140023150:	cmp    DWORD PTR [rdi-0x16],esi
   140023153:	(bad)  
   140023154:	cmp    edx,DWORD PTR [rdx-0x5dc50011]
   14002315a:	icebp  
   14002315b:	(bad)  
   14002315c:	cmp    bl,BYTE PTR [rax+rsi*8-0x1379c402]
   140023163:	(bad)  
   140023164:	cmp    BYTE PTR [rdx-0x18],ch
   140023167:	(bad)  
   140023168:	xor    cl,BYTE PTR [rax-0x27]
   14002316b:	(bad)  
   14002316c:	cs cmp al,cl
   14002316f:	jmp    FWORD PTR [rip+0x34fec134]        # 0x17500f2a9
   140023175:	xor    esp,DWORD PTR [rdx+0x6b3244cd]
   14002317b:	add    eax,0x0
	...
   1400231d0:	(bad)  
   1400231d1:	pop    rax
   1400231d2:	adc    edx,DWORD PTR [rbx-0x45]
   1400231d5:	jle    0x1400231f8
   1400231d7:	cli    
   1400231d8:	stos   DWORD PTR es:[rdi],eax
   1400231d9:	jb     0x1400231f7
   1400231db:	(bad)  
   1400231dc:	xchg   edx,eax
   1400231dd:	(bad)  {k2}
   1400231e2:	cs (bad) 
   1400231e4:	fs rex.XB cmp r14b,dil
   1400231e8:	push   rbp
   1400231e9:	(bad)  
   1400231ea:	dec    DWORD PTR ds:[rbp+0x32]
   1400231ee:	inc    BYTE PTR [r8+0x3dfe3355]
   1400231f5:	(bad)  
   1400231f6:	(bad)  
   1400231f7:	call   QWORD PTR [rdi]
   1400231f9:	adc    DWORD PTR [rax-0x2],edx
   1400231fc:	adc    edx,DWORD PTR [rip+0x1b17fe6f]        # 0x15b1a3071
   140023202:	cmp    bh,0x1d
   140023205:	and    al,0x90
   140023207:	(bad)  
   140023208:	es xor eax,0x5331fea8
   14002320e:	(bad)  
   14002320f:	(bad)  
   140023210:	cmp    bh,BYTE PTR [rcx-0x16]
   140023213:	(bad)  
   140023214:	cmp    edx,DWORD PTR [rdi-0x55c40011]
   14002321a:	repnz (bad) 
   14002321c:	cmp    ebx,DWORD PTR [rdi-0x7bc40110]
   140023222:	in     al,dx
   140023223:	push   QWORD PTR [rdi]
   140023225:	fs out 0xfe,eax
   140023228:	xor    BYTE PTR [rbx-0x2c],al
   14002322b:	(bad)  
   14002322c:	cs ss (bad) 
   14002322f:	jmp    FWORD PTR [rip+0x41fec034]        # 0x18200f269
   140023235:	xor    dh,BYTE PTR [rsi+0x79]
	...
   140023290:	pushf  
   140023291:	movsxd edx,DWORD PTR [rdi]
   140023293:	add    DWORD PTR [rbp-0x3199e195],esp
   140023299:	nop
   14002329a:	xor    bh,dl
   14002329c:	mov    BYTE PTR [rsi+0x75afff26],0x1a
   1400232a3:	call   QWORD PTR [rdx+0x77ff2162]
   1400232a9:	push   rax
   1400232aa:	xor    bh,bh
   1400232ac:	fs rex.XB cmp r15b,dil
   1400232b0:	pop    rdi
   1400232b1:	(bad)  
   1400232b2:	cmp    edi,edi
   1400232b4:	xchg   BYTE PTR [rdx+0x30],bl
   1400232b7:	call   FWORD PTR [rdx]
   1400232b9:	adc    DWORD PTR [rax-0x1],ecx
   1400232bc:	adc    eax,0x15ff6313
   1400232c1:	sbb    DWORD PTR [rbx-0x1],edi
   1400232c4:	sbb    esp,DWORD PTR [rax]
   1400232c6:	mov    edi,edi
   1400232c8:	and    al,0x31
   1400232ca:	movabs ds:0xea7a39ffca5130ff,eax
   1400232d3:	(bad)  
   1400232d4:	cmp    ebx,DWORD PTR [rbp-0x4fc60010]
   1400232da:	repnz (bad) 
   1400232dc:	cmp    ah,BYTE PTR [rbx-0x7dc5000f]
   1400232e2:	in     al,dx
   1400232e3:	push   QWORD PTR [rsi]
   1400232e5:	pop    rbp
   1400232e6:	in     al,0xff
   1400232e8:	(bad)  
   1400232e9:	ds sar bh,1
   1400232ec:	sub    eax,0x2dffc335
   1400232f1:	xor    edi,DWORD PTR [rbp+0x613247fa]
   1400232f7:	(bad)  
	...
   140023354:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023355:	ins    DWORD PTR es:[rdi],dx
   140023356:	(bad)  
   140023357:	add    DWORD PTR [rdx-0x4da7e498],esp
   14002335d:	ja     0x140023380
   14002335f:	out    dx,al
   140023360:	mov    ecx,0xb6fe1c7b
   140023365:	jns    0x14002337f
   140023367:	(bad)  
   140023368:	lahf   
   140023369:	push   0x1b
   14002336b:	inc    DWORD PTR [rbp+0x74fe285a]
   140023371:	rex.WRXB xor r15b,r14b
   140023374:	xchg   ebp,eax
   140023375:	gs sub eax,0x40263bff
   14002337b:	(bad)  
   14002337c:	(bad)  
   14002337d:	adc    DWORD PTR [rsi+rdi*8+0x14],edx
   140023381:	(bad)  
   140023382:	je     0x140023383
   140023384:	sbb    DWORD PTR [rip+0x2d22fe86],ebx        # 0x16d253210
   14002338a:	popf   
   14002338b:	(bad)  
   14002338c:	(bad)  
   14002338d:	rex.WRB (bad) 
   14002338f:	(bad)  
   140023390:	cmp    bh,BYTE PTR [rbx-0x16]
   140023393:	(bad)  
   140023394:	cmp    ah,BYTE PTR [rbp-0x47c7000f]
   14002339a:	repz (bad) 
   14002339c:	cmp    ah,BYTE PTR [rbp+0x7f3afef1]
   1400233a2:	jmp    0x1400233a3
   1400233a4:	xor    eax,0x2efee155
   1400233a9:	cmp    cl,bl
   1400233ab:	(bad)  
   1400233ac:	sub    eax,0x35ffc234
   1400233b1:	xor    ebx,DWORD PTR [rdi+0x673245c9]
   1400233b7:	add    al,0x0
	...
   140023419:	add    BYTE PTR [rax],al
   14002341b:	add    BYTE PTR [rax+0x6f1b1b56],cl
   140023421:	rex.RB and al,0x7b
   140023424:	adc    DWORD PTR [rbx+0x22],0x1a71abc7
   14002342b:	(bad)  
   14002342c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002342d:	outs   dx,DWORD PTR ds:[rsi]
   14002342e:	sbb    bh,bh
   140023430:	nop
   140023431:	(bad)  
   140023432:	and    edi,edi
   140023434:	mov    DWORD PTR [rbp+0x27],ebx
   140023437:	inc    DWORD PTR [rcx+rbx*2+0x1118ff32]
   14002343e:	rex.WX call QWORD PTR [rsp+r10*1]
   140023442:	push   0xffffffffffffffff
   140023444:	(bad)  
   140023445:	sbb    al,0x80
   140023447:	jmp    QWORD PTR [rax]
   140023449:	sub    BYTE PTR [rsi-0x3eb6d201],dl
   14002344f:	(bad)  
   140023450:	cmp    bh,BYTE PTR [rdx+rbp*8-0x1]
   140023454:	cmp    DWORD PTR [rbp-0x3cc7000e],ebp
   14002345a:	repz (bad) 
   14002345c:	cmp    ah,BYTE PTR [rdi+0x7a3afff1]
   140023462:	(bad)  
   140023463:	push   QWORD PTR [rbx]
   140023465:	rex.WRB fdiv st(7),st
   140023468:	cs (bad) 
   14002346a:	enter  0x2dff,0x34
   14002346e:	sar    bh,0x41
   140023471:	xor    dh,BYTE PTR [rbp+0x78]
	...
   1400234e4:	jl     0x140023533
   1400234e6:	sbb    DWORD PTR [rdx],eax
   1400234e8:	js     0x140023534
   1400234ea:	sbb    edx,DWORD PTR [rax-0x61]
   1400234ed:	imul   ebx,DWORD PTR [rdx],0x1773ace7
   1400234f3:	(bad)  
   1400234f4:	pushf  
   1400234f5:	push   0x72a9ff1b
   1400234fa:	es (bad) 
   1400234fc:	xor    esp,DWORD PTR [rcx]
   1400234fe:	rex.X (bad) 
   140023500:	adc    eax,0x15ff5b12
   140023505:	sbb    DWORD PTR [rdx-0x2],edi
   140023508:	sbb    eax,0x2bfe9024
   14002350d:	rex.R mov edx,0xe97d3aff
   140023513:	(bad)  
   140023514:	cmp    BYTE PTR [rax-0x32c9000e],bh
   14002351a:	icebp  
   14002351b:	(bad)  
   14002351c:	cmp    DWORD PTR [rax+0x7439fef1],ebp
   140023522:	(bad)  
   140023523:	push   QWORD PTR [rcx]
   140023525:	rex.RB xlat BYTE PTR ds:[rbx]
   140023527:	(bad)  
   140023528:	sub    eax,0x2cfec536
   14002352d:	xor    edi,DWORD PTR [rsi+0x623247fc]
   140023533:	and    eax,0x0
	...
   1400235ac:	or     DWORD PTR [rdi+0x14],0x18689f24
   1400235b3:	shl    DWORD PTR [rdx-0x5500e88a],1
   1400235b9:	jno    0x1400235d6
   1400235bb:	(bad)  
   1400235bc:	jp     0x140023610
   1400235be:	xor    eax,0x4e1017fe
   1400235c3:	call   QWORD PTR [rsi+rdx*1]
   1400235c6:	jb     0x1400235c6
   1400235c8:	sbb    esp,DWORD PTR [rax]
   1400235ca:	mov    bh,dh
   1400235cc:	sub    DWORD PTR [rsi],edi
   1400235ce:	mov    bl,0xff
   1400235d0:	cmp    DWORD PTR [rbp-0x18],edi
   1400235d3:	(bad)  
   1400235d4:	cmp    ebp,eax
   1400235d6:	icebp  
   1400235d7:	(bad)  
   1400235d8:	cmp    ebx,ecx
   1400235da:	out    dx,eax
   1400235db:	(bad)  
   1400235dc:	cmp    ah,BYTE PTR [rdi+0x6c38fef1]
   1400235e2:	call   0x1114166e6
   1400235e7:	(bad)  
   1400235e8:	sub    eax,0x34fec234
   1400235ed:	xor    esp,DWORD PTR [rax+0x653246c7]
   1400235f3:	add    eax,DWORD PTR [rax]
	...
   14002366d:	add    BYTE PTR [rax],al
   14002366f:	add    BYTE PTR [rsi-0x56e5f0ae],al
   140023675:	outs   dx,DWORD PTR ds:[rsi]
   140023676:	(bad)  
   140023677:	fidiv  WORD PTR [rdi-0x5000e787]
   14002367d:	ja     0x1400236a6
   14002367f:	jmp    QWORD PTR [rsi]
   140023681:	sbb    DWORD PTR [rbp-0x1],eax
   140023684:	adc    eax,0x18ff6613
   140023689:	sbb    eax,0x3826ff83
   14002368e:	stos   BYTE PTR es:[rdi],al
   14002368f:	(bad)  
   140023690:	cmp    DWORD PTR [rbp-0x19],edi
   140023693:	(bad)  
   140023694:	cmp    edx,eax
   140023696:	out    dx,eax
   140023697:	(bad)  
   140023698:	cmp    eax,0x3affecdd
   14002369d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002369e:	lock push QWORD PTR [rsi]
   1400236a1:	(bad)  
   1400236a2:	in     eax,0xff
   1400236a4:	cs cmp cl,bl
   1400236a7:	jmp    FWORD PTR [rip+0x40ffc034]        # 0x18101f6e1
   1400236ad:	xor    dh,BYTE PTR [rdi+0x71]
	...
   140023734:	mov    dl,BYTE PTR [rdi+rcx*1+0x34]
   140023738:	mov    ch,0x78
   14002373a:	sbb    cl,dh
   14002373c:	mov    ah,0x79
   14002373e:	(bad)  
   14002373f:	(bad)  
   140023740:	imul   eax,DWORD PTR [rdi+0x39],0x561117ff
   140023747:	(bad)  
   140023748:	(bad)  
   140023749:	sbb    bh,BYTE PTR [rsi+rdi*8+0x23]
   14002374d:	xor    BYTE PTR [rcx-0x1b84c701],ah
   140023753:	(bad)  
   140023754:	cmp    eax,0x3effedd7
   140023759:	fucomip st,st(2)
   14002375b:	(bad)  
   14002375c:	cmp    DWORD PTR [rdi+0x5534feef],ebx
   140023762:	loopne 0x140023763
   140023764:	cs (bad) 
   140023766:	(bad)  
   140023767:	(bad)  
   140023768:	sub    eax,0x47f6bc33
   14002376d:	xor    ah,BYTE PTR [rcx+0x1d]
	...
   1400237f8:	nop
   1400237f9:	pop    rcx
   1400237fa:	punpcklbw mm6,DWORD PTR [rbp-0x5b02e788]
   140023801:	jo     0x140023832
   140023803:	jmp    QWORD PTR [rax]
   140023805:	adc    al,0x4a
   140023807:	(bad)  
   140023808:	adc    eax,0x20fe7216
   14002380d:	sub    DWORD PTR [rdi-0x1f89c901],edx
   140023813:	(bad)  
   140023814:	cmp    eax,0x3effecdc
   140023819:	fucomip st,st(2)
   14002381b:	(bad)  
   14002381c:	cmp    dl,BYTE PTR [rbp+0x4a32feee]
   140023822:	fcos   
   140023824:	sub    eax,0x39fec335
   140023829:	xor    dl,BYTE PTR [rax+0x733241b1]
   14002382f:	add    al,BYTE PTR [rax]
	...
   1400238b5:	add    BYTE PTR [rax],al
   1400238b7:	add    BYTE PTR [rcx-0x62fcf1a7],dl
   1400238bd:	adc    ah,BYTE PTR fs:[rbx-0xd88953]
   1400238c4:	push   rdx
   1400238c5:	ss cmp al,0xff
   1400238c8:	adc    eax,0x1cff6313
   1400238cd:	and    cl,BYTE PTR [rdi+rdi*8-0x2791cc]
   1400238d4:	ds fucomp st(3)
   1400238d7:	(bad)  
   1400238d8:	ds fsubp st(2),st
   1400238db:	(bad)  
   1400238dc:	cmp    DWORD PTR [rbp+0x3f30ffec],eax
   1400238e2:	sar    bh,1
   1400238e4:	sub    eax,0x42fec034
   1400238e9:	xor    ch,BYTE PTR [rdi+0x50]
	...
   14002397c:	mov    DWORD PTR [rdi+rcx*1+0x14],edx
   140023980:	popf   
   140023981:	push   0x6a9be21b
   140023986:	xor    edi,esi
   140023988:	sbb    DWORD PTR [rdx],edx
   14002398a:	push   rbx
   14002398b:	(bad)  
   14002398c:	sbb    BYTE PTR [rip+0x6131ff82],bl        # 0x1a1343914
   140023992:	int    0xfe
   140023994:	ds fucomp st(3)
   140023997:	(bad)  
   140023998:	cmp    eax,0x37feebd9
   14002399d:	outs   dx,DWORD PTR ds:[rsi]
   14002399e:	out    0xfe,eax
   1400239a0:	cs cmp al,cl
   1400239a3:	push   QWORD PTR [rcx]
   1400239a5:	xor    ebp,DWORD PTR [rdx+0x653246da]
   1400239ab:	or     DWORD PTR [rax],eax
	...
   140023a3d:	add    BYTE PTR [rax],al
   140023a3f:	add    BYTE PTR [rcx-0x48adefac],cl
   140023a45:	jle    0x140023a71
   140023a47:	std    
   140023a48:	cmp    esp,DWORD PTR [rdi]
   140023a4a:	rex.X (bad) 
   140023a4c:	(bad)  
   140023a4d:	(bad)  
   140023a4e:	je     0x140023a4f
   140023a50:	sub    al,0x4e
   140023a52:	mov    ebp,0xebda3efe
   140023a57:	(bad)  
   140023a58:	cmp    eax,0x34feeccc
   140023a5d:	pop    rax
   140023a5e:	fdivp  st(6),st
   140023a60:	sub    eax,0x41ffc234
   140023a65:	xor    dh,BYTE PTR [rsi+0x6f]
	...
   140023b00:	lea    ebx,[rax+0x13]
   140023b03:	add    al,0x9e
   140023b05:	sbb    esi,DWORD PTR [ebx-0xc9a379]
   140023b0c:	(bad)  
   140023b0d:	adc    al,0x62
   140023b0f:	jmp    QWORD PTR [rip+0x3dffa939]        # 0x17e01e44e
   140023b15:	shr    ah,1
   140023b17:	(bad)  
   140023b18:	cmp    esi,DWORD PTR [rcx+0x4330ffec]
   140023b1e:	sar    edi,1
   140023b20:	(bad)  
   140023b21:	xor    esi,DWORD PTR [rcx+0x653246e4]
   140023b27:	or     eax,0x0
	...
   140023bc4:	nop
   140023bc5:	pop    rcx
   140023bc6:	adc    ebp,DWORD PTR [rcx+rax*8]
   140023bc9:	test   DWORD PTR [rip+0x4e1d2bf5],ebp        # 0x18e1f67c4
   140023bcf:	call   FWORD PTR [rip+0x3afe9126]        # 0x17b00ccfb
   140023bd5:	test   al,0xea
   140023bd7:	push   QWORD PTR [rdi]
   140023bd9:	jns    0x140023bc1
   140023bdb:	(bad)  
   140023bdc:	sub    eax,0x42fec236
   140023be1:	xor    dh,BYTE PTR [rdx+0x64]
	...
   140023c84:	sahf   
   140023c85:	sbb    eax,DWORD PTR gs:[rcx]
   140023c88:	test   al,0x6d
   140023c8a:	and    BYTE PTR [rsi+0x78],bh
   140023c8d:	push   rcx
   140023c8e:	cmp    edi,edi
   140023c90:	sbb    BYTE PTR [rbx],bl
   140023c92:	jp     0x140023c92
   140023c94:	xor    BYTE PTR [rbx-0x33],dl
   140023c97:	jmp    FWORD PTR [rdi]
   140023c99:	rex.X retf 0x36fe
   140023c9d:	xor    dl,BYTE PTR [rdi+0x733242be]
   140023ca3:	(bad)  
	...
   140023d48:	xchg   edx,eax
   140023d49:	pop    rbp
   140023d4a:	(bad)  
   140023d4b:	(bad)  
   140023d4c:	lods   al,BYTE PTR ds:[rsi]
   140023d4d:	jae    0x140023d77
   140023d4f:	mov    dh,0x34
   140023d51:	(bad)  
   140023d52:	pop    rbx
   140023d53:	jmp    QWORD PTR [rbx]
   140023d55:	sub    DWORD PTR [rax-0x5bd0d201],esp
   140023d5b:	fdivr  QWORD PTR [rsi]
   140023d5d:	xor    bh,BYTE PTR [rcx+0x1f]
	...
   140023e0c:	jl     0x140023e5d
   140023e0e:	(bad)  
   140023e0f:	or     dh,BYTE PTR [rsi+0x4e]
   140023e12:	xor    al,0x80
   140023e14:	ss sub al,0x73
   140023e17:	xchg   esi,eax
   140023e18:	cmp    DWORD PTR [rip+0x186f],ebp        # 0x14002568d
	...
   140023fd2:	add    BYTE PTR [rax],al
   140023fd4:	(bad)  
   140023fd5:	(bad)  
   140023fd6:	(bad)  
   140023fd7:	(bad)  
   140023fd8:	(bad)  
   140023fd9:	inc    DWORD PTR [rax]
   140023fdb:	add    bh,bh
   140023fdd:	(bad)  
   140023fde:	(bad)  
   140023fdf:	(bad)  
   140023fe0:	(bad)  
   140023fe1:	inc    DWORD PTR [rax]
   140023fe3:	add    bh,bh
   140023fe5:	push   rax
   140023fe7:	(bad)  
   140023fe8:	(bad)  
   140023fe9:	inc    DWORD PTR [rax]
   140023feb:	add    bh,bh
   140023fed:	jmp    rax
   140023fef:	(bad)  
   140023ff0:	(bad)  
   140023ff1:	inc    DWORD PTR [rax]
   140023ff3:	add    bh,bh
   140023ff5:	jmp    rax
   140023ff7:	(bad)  
   140023ff8:	(bad)  
   140023ff9:	inc    DWORD PTR [rax]
   140023ffb:	add    bh,bh
   140023ffd:	inc    eax
   140023fff:	ud0    edi,edi
   140024002:	add    BYTE PTR [rax],al
   140024004:	(bad)  
   140024005:	inc    eax
   140024007:	(bad)  
   140024008:	(bad)  
   140024009:	inc    DWORD PTR [rax]
   14002400b:	add    bh,bh
   14002400d:	inc    DWORD PTR [rax+0xffff03]
   140024013:	add    bh,bh
   140024015:	inc    DWORD PTR [rax+0xffff01]
   14002401b:	add    bh,bh
   14002401d:	inc    DWORD PTR [rax]
   14002401f:	add    bh,bh
   140024021:	cld    
   140024022:	add    BYTE PTR [rax],al
   140024024:	(bad)  
   140024025:	inc    DWORD PTR [rax]
   140024027:	add    BYTE PTR [rdi-0x8],bh
   14002402a:	add    BYTE PTR [rax],al
   14002402c:	(bad)  
   14002402d:	inc    BYTE PTR [rax]
   14002402f:	add    BYTE PTR [rdi-0x10],bh
   140024032:	add    BYTE PTR [rax],al
   140024034:	(bad)  
   140024035:	inc    BYTE PTR [rax]
   140024037:	add    BYTE PTR [rdi],bh
   140024039:	loopne 0x14002403b
   14002403b:	add    bh,bh
   14002403d:	mov    BYTE PTR [rax],al
   14002403f:	add    BYTE PTR [rdi],cl
   140024041:	rol    DWORD PTR [rax],0x0
   140024044:	inc    DWORD PTR [rax]
   140024046:	add    BYTE PTR [rax],al
   140024048:	(bad)  
   140024049:	add    DWORD PTR [rax],eax
   14002404b:	add    ah,bh
   14002404d:	add    BYTE PTR [rax],al
   14002404f:	add    BYTE PTR [rax],al
   140024051:	add    DWORD PTR [rax],eax
   140024053:	add    al,bh
   140024055:	add    BYTE PTR [rax],al
   140024057:	add    BYTE PTR [rax],al
   140024059:	add    eax,DWORD PTR [rax]
   14002405b:	add    al,dh
   14002405d:	add    BYTE PTR [rax],al
   14002405f:	add    BYTE PTR [rax],al
   140024061:	add    eax,DWORD PTR [rax]
   140024063:	add    al,al
   140024065:	add    BYTE PTR [rax],al
   140024067:	add    BYTE PTR [rax],al
   140024069:	(bad)  
   14002406a:	add    BYTE PTR [rax],al
   14002406c:	add    BYTE PTR [rax],0x0
   14002406f:	add    BYTE PTR [rax],al
   140024071:	(bad)  
   140024072:	add    BYTE PTR [rax],al
   140024074:	add    BYTE PTR [rax],al
   140024076:	add    BYTE PTR [rax],al
   140024078:	add    BYTE PTR [rdi],al
   14002407a:	add    BYTE PTR [rax],al
   14002407c:	add    BYTE PTR [rax],al
   14002407e:	add    BYTE PTR [rax],al
   140024080:	add    BYTE PTR [rdi],cl
   140024082:	add    BYTE PTR [rax],al
   140024084:	add    BYTE PTR [rax],al
   140024086:	add    BYTE PTR [rax],al
   140024088:	add    BYTE PTR [rdi],cl
   14002408a:	add    BYTE PTR [rax],al
   14002408c:	loopne 0x14002408e
   14002408e:	add    BYTE PTR [rax],al
   140024090:	add    BYTE PTR [rdi],cl
   140024092:	add    BYTE PTR [rax],al
   140024094:	clc    
   140024095:	add    BYTE PTR [rax],al
   140024097:	add    BYTE PTR [rax],al
   140024099:	(bad)  
   14002409a:	add    BYTE PTR [rax],al
   14002409c:	inc    DWORD PTR [rax]
   14002409e:	add    BYTE PTR [rax],al
   1400240a0:	add    BYTE PTR [rdi],bl
   1400240a2:	add    BYTE PTR [rax],al
   1400240a4:	inc    eax
   1400240a6:	add    BYTE PTR [rax],al
   1400240a8:	add    BYTE PTR [rdi],bl
   1400240aa:	add    BYTE PTR [rax],al
   1400240ac:	(bad)  
   1400240ad:	clc    
   1400240ae:	add    BYTE PTR [rax],al
   1400240b0:	add    BYTE PTR [rdi],bh
   1400240b2:	add    BYTE PTR [rax],al
   1400240b4:	(bad)  
   1400240b5:	cld    
   1400240b6:	add    BYTE PTR [rax],al
   1400240b8:	add    BYTE PTR [rdi],bh
   1400240ba:	add    BYTE PTR [rax],al
   1400240bc:	(bad)  
   1400240bd:	inc    BYTE PTR [rax]
   1400240bf:	add    BYTE PTR [rax],al
   1400240c1:	jg     0x1400240c3
   1400240c3:	add    bh,bh
   1400240c5:	inc    BYTE PTR [rax]
   1400240c7:	add    BYTE PTR [rax],al
   1400240c9:	jg     0x1400240cb
   1400240cb:	add    bh,bh
   1400240cd:	inc    DWORD PTR [rax]
   1400240cf:	add    BYTE PTR [rax],al
   1400240d1:	jg     0x1400240d3
   1400240d3:	add    bh,bh
   1400240d5:	inc    eax
   1400240d7:	add    BYTE PTR [rax],al
   1400240d9:	inc    DWORD PTR [rax]
   1400240db:	add    bh,bh
   1400240dd:	push   rax
   1400240df:	add    BYTE PTR [rax],al
   1400240e1:	inc    DWORD PTR [rax]
   1400240e3:	add    bh,bh
   1400240e5:	(bad)  
   1400240e6:	cld    
   1400240e7:	add    BYTE PTR [rax],al
   1400240e9:	inc    DWORD PTR [rax]
   1400240eb:	add    bh,bh
   1400240ed:	(bad)  
   1400240ee:	inc    BYTE PTR [rax]
   1400240f0:	add    edi,edi
   1400240f2:	add    BYTE PTR [rax],al
   1400240f4:	(bad)  
   1400240f5:	(bad)  
   1400240f6:	inc    DWORD PTR [rax]
   1400240f8:	add    edi,edi
   1400240fa:	add    BYTE PTR [rax],al
   1400240fc:	(bad)  
   1400240fd:	(bad)  
   1400240fe:	inc    DWORD PTR [rax+0xff01]
   140024104:	(bad)  
   140024105:	(bad)  
   140024106:	inc    DWORD PTR [rax+0xff03]
   14002410c:	(bad)  
   14002410d:	(bad)  
   14002410e:	inc    eax
   140024110:	add    edi,edi
   140024112:	add    BYTE PTR [rax],al
   140024114:	(bad)  
   140024115:	(bad)  
   140024116:	jmp    rax
   140024118:	(bad)  
   140024119:	inc    DWORD PTR [rax]
   14002411b:	add    bh,bh
   14002411d:	(bad)  
   14002411e:	jmp    rax
   140024120:	(bad)  
   140024121:	inc    DWORD PTR [rax]
   140024123:	add    bh,bh
   140024125:	(bad)  
   140024126:	push   rax
   140024128:	ud0    eax,DWORD PTR [rax]
   14002412b:	add    bh,bh
   14002412d:	(bad)  
   14002412e:	push   rax
   140024130:	ud0    eax,DWORD PTR [rax]
   140024133:	add    bh,bh
   140024135:	(bad)  
   140024136:	(bad)  
   140024137:	clc    
   140024138:	(bad)  
   140024139:	inc    DWORD PTR [rax]
   14002413b:	add    bh,bh
   14002413d:	(bad)  
   14002413e:	(bad)  
   14002413f:	cld    
   140024140:	(bad)  
   140024141:	inc    DWORD PTR [rax]
   140024143:	add    bh,bh
   140024145:	(bad)  
   140024146:	(bad)  
   140024147:	(bad)  
   140024148:	(bad)  
   140024149:	inc    DWORD PTR [rax]
   14002414b:	add    bh,bh
   14002414d:	(bad)  
   14002414e:	(bad)  
   14002414f:	(bad)  
   140024150:	(bad)  
   140024151:	inc    DWORD PTR [rax]
   140024153:	add    BYTE PTR [rax],ch
   140024155:	add    BYTE PTR [rax],al
   140024157:	add    BYTE PTR [rax],ah
   140024159:	add    BYTE PTR [rax],al
   14002415b:	add    BYTE PTR [rax+0x0],al
   14002415e:	add    BYTE PTR [rax],al
   140024160:	add    DWORD PTR [rax],eax
   140024162:	and    BYTE PTR [rax],al
   140024164:	add    BYTE PTR [rax],al
   140024166:	add    BYTE PTR [rax],al
   140024168:	adc    BYTE PTR [rax],0x0
	...
   14002422f:	add    BYTE PTR [rsi+rdi*2-0x79],cl
   140024233:	(bad)  
   140024234:	lea    rsp,[rbx+0x4b5b5754]
   14002423b:	or     al,0x0
	...
   1400242ad:	add    BYTE PTR [rax],al
   1400242af:	add    BYTE PTR [rcx-0x77],cl
   1400242b2:	popf   
   1400242b3:	xchg   ecx,eax
   1400242b4:	cmp    edi,DWORD PTR [rdx-0x53c0000c]
   1400242ba:	fsubr  st(1),st
   1400242bc:	push   rdx
   1400242bd:	ins    BYTE PTR es:[rdi],dx
   1400242be:	imul   edx,DWORD PTR [rbx+0x57],0x59
   1400242c2:	rex.WRX add r8b,BYTE PTR [rax]
	...
   140024329:	add    BYTE PTR [rax],al
   14002432b:	add    BYTE PTR [rsi+0x5e],dl
   14002432e:	push   rbx
   14002432f:	adc    bh,BYTE PTR [rip+0x3befe9b3]        # 0x17bf22ce8
   140024335:	mov    ecx,0xb63bfff4
   14002433a:	repz (bad) 
   14002433c:	cmp    al,0xac
   14002433e:	icebp  
   14002433f:	std    
   140024340:	rex.WR jo 0x1400242cf
   140024343:	xchg   BYTE PTR [rbp+0x54],dl
   140024346:	push   rsi
   140024347:	add    al,0x0
	...
   1400243a9:	add    BYTE PTR [rax],al
   1400243ab:	add    BYTE PTR [rbp+0x72],cl
   1400243ae:	xchg   DWORD PTR [rdx+0x3c],esi
   1400243b1:	stos   DWORD PTR es:[rdi],eax
   1400243b2:	icebp  
   1400243b3:	(bad)  
   1400243b4:	cmp    al,0xaa
   1400243b6:	icebp  
   1400243b7:	(bad)  
   1400243b8:	cmp    al,0xa4
   1400243ba:	lock (bad) 
   1400243bc:	cmp    ebx,DWORD PTR [rbx-0x6ec40011]
   1400243c2:	out    dx,al
   1400243c3:	dec    DWORD PTR [rbx+0x66]
   1400243c6:	xchg   esp,eax
   1400243c7:	mov    ss,WORD PTR [rsi+0x4c]
   1400243ca:	push   rcx
   1400243cb:	add    eax,DWORD PTR [rax]
	...
   140024425:	add    BYTE PTR [rax],al
   140024427:	add    BYTE PTR [rbp+0x42],dl
   14002442a:	rex.R add eax,0xd9ce773f
   140024430:	cmp    ecx,DWORD PTR [rbp-0x70c40013]
   140024436:	in     eax,dx
   140024437:	(bad)  
   140024438:	cmp    ecx,DWORD PTR [rbp-0x77c40013]
   14002443e:	in     eax,dx
   14002443f:	(bad)  
   140024440:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1481c301]
   140024447:	dec    BYTE PTR [rsi+0x59]
   14002444a:	(bad)  
   14002444b:	jne    0x1400244a3
   14002444d:	rex.WB
   14002444e:	rex.WRXB add QWORD PTR [r8],r8
	...
   1400244a5:	add    BYTE PTR [rax],al
   1400244a7:	add    BYTE PTR [rdi+0x39],al
   1400244aa:	pop    rcx
   1400244ab:	push   rcx
   1400244ac:	xor    DWORD PTR [rbp-0x32],edx
   1400244af:	push   QWORD PTR [rsi]
   1400244b1:	data16 fdivp st(7),st
   1400244b4:	cmp    BYTE PTR [rdi-0x1a],ch
   1400244b7:	(bad)  
   1400244b8:	cmp    DWORD PTR [rbx-0x17],esi
   1400244bb:	(bad)  
   1400244bc:	cmp    dh,BYTE PTR [rcx+rbp*8-0x1]
   1400244c0:	cmp    dh,BYTE PTR [rbp-0x16]
   1400244c3:	(bad)  
   1400244c4:	cmp    esi,DWORD PTR [rdi-0x15]
   1400244c7:	(bad)  
   1400244c8:	cmp    al,0x77
   1400244ca:	jmp    0x1a95497ca
   1400244cf:	push   rax
	...
   1400244f4:	push   rbp
   1400244f5:	xor    dh,BYTE PTR [rbx]
   1400244f7:	add    DWORD PTR [rdi+0x32],ecx
   1400244fa:	rex.RX sub eax,0x0
	...
   140024524:	sub    r13,QWORD PTR [r11]
   140024527:	add    eax,0xcc7b292c
   14002452c:	and    eax,0x2affa533
   140024531:	rex.X mov dil,0xff
   140024534:	(bad)  
   140024535:	rex.WRXB (bad) 
   140024537:	push   QWORD PTR [rbx]
   140024539:	pop    rdx
   14002453a:	(bad)  
   14002453b:	push   QWORD PTR [rsi]
   14002453d:	movsxd ebx,edi
   14002453f:	push   QWORD PTR [rdi]
   140024541:	push   0xffffffffffffffe6
   140024543:	(bad)  
   140024544:	cmp    BYTE PTR [rcx-0x17],dh
   140024547:	(bad)  
   140024548:	cmp    bh,BYTE PTR [rcx-0x15]
   14002454b:	(bad)  
   14002454c:	ds jp  0x140024530
   14002454f:	lock push rbp
   140024551:	push   rax
   140024552:	pop    rsp
   140024553:	xor    eax,DWORD PTR [rax]
	...
   14002456d:	add    BYTE PTR [rax],al
   14002456f:	add    BYTE PTR [rdx+rsi*1+0x36],dl
   140024573:	add    DWORD PTR [rbx+0x32],ecx
   140024576:	push   rdi
   140024577:	pop    rax
   140024578:	xor    eax,DWORD PTR ds:[rdx+0x88]
	...
   14002459f:	add    BYTE PTR [rdi+0x29],cl
   1400245a2:	sbb    al,0x1
   1400245a4:	cmp    ah,BYTE PTR [rip+0x1d197441]        # 0x15d1bb9eb
   1400245aa:	test   bh,bh
   1400245ac:	sbb    eax,0x22ff8f23
   1400245b1:	sub    al,0x9b
   1400245b3:	jmp    QWORD PTR [rdi]
   1400245b5:	cmp    BYTE PTR [rbx-0x45bbd401],ch
   1400245bb:	jmp    FWORD PTR [rdi]
   1400245bd:	push   rax
   1400245be:	leave  
   1400245bf:	push   QWORD PTR [rbx+rbx*2]
   1400245c2:	xlat   BYTE PTR ds:[rbx]
   1400245c3:	push   QWORD PTR [rdi]
   1400245c5:	addr32 in al,0xff
   1400245c8:	cmp    BYTE PTR [rcx-0x17],dh
   1400245cb:	(bad)  
   1400245cc:	cmp    edi,DWORD PTR [rbx-0x15]
   1400245cf:	inc    DWORD PTR [rax+0x7a]
   1400245d2:	(bad)  
   1400245d3:	jrcxz  0x14002462b
   1400245d5:	rex.WRXB push r10
   1400245d7:	(bad)  
	...
   1400245ec:	push   rsp
   1400245ed:	xor    bh,BYTE PTR [rax]
   1400245ef:	add    al,BYTE PTR [rdi+0x33]
   1400245f2:	data16 jo 0x140024622
   1400245f5:	xor    al,0xbd
   1400245f7:	stc    
   1400245f8:	rex.XB xor bpl,BYTE PTR [r13+0x26]
	...
   140024610:	or     DWORD PTR [rbp+0x13],0x3
   140024614:	xchg   esp,eax
   140024615:	pop    rbp
   140024616:	and    DWORD PTR [rcx-0x6f],ebx
   140024619:	pop    rbx
   14002461a:	and    BYTE PTR [rdx+0x7c],bl
   14002461d:	rex.W adc BYTE PTR [rdx*2+0x16762330],spl
   140024625:	adc    al,0x64
   140024627:	cli    
   140024628:	adc    al,0x18
   14002462a:	ja     0x14002462b
   14002462c:	(bad)  
   14002462d:	sbb    al,0x81
   14002462f:	call   FWORD PTR [rbx]
   140024631:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   140024638:	es xor al,0xa7
   14002463b:	jmp    FWORD PTR [rdx]
   14002463d:	mov    r15b,0xff
   140024640:	(bad)  
   140024641:	rex.WRX enter 0x35ff,0x5c
   140024646:	fcos   
   140024648:	(bad)  
   140024649:	push   0xffffffffffffffe6
   14002464b:	(bad)  
   14002464c:	cmp    DWORD PTR [rdi-0x16],esi
   14002464f:	(bad)  
   140024650:	cmp    al,0x82
   140024652:	in     al,dx
   140024653:	(bad)  
   140024654:	(bad)  
   140024655:	adc    ah,0xe2
   140024658:	push   rbp
   140024659:	push   rbx
   14002465a:	pop    rcx
   14002465b:	cmp    DWORD PTR [rax+0x48],ebx
   14002465e:	cmp    eax,0x1
   140024663:	add    BYTE PTR [rax],al
   140024665:	add    BYTE PTR [rax],al
   140024667:	add    BYTE PTR [rsi+0x34],dl
   14002466a:	xor    ecx,DWORD PTR [rdx]
   14002466c:	rex.XB xor eax,0x342d8e79
   140024672:	ret    0x36fe
   140024675:	xor    ebx,DWORD PTR [rcx+0x683244bb]
   14002467b:	add    DWORD PTR [rax],eax
	...
   140024689:	add    BYTE PTR [rax],al
   14002468b:	add    BYTE PTR [rbp-0x51edecb0],al
   140024691:	je     0x1400246bf
   140024693:	movabs ds:0xff4b8fc8fe4792cf,al
   14002469c:	mov    ecx,0xa4ff4483
   1400246a1:	outs   dx,DWORD PTR ds:[rsi]
   1400246a2:	sub    edi,edi
   1400246a4:	xor    al,0x21
   1400246a6:	rex.RX call QWORD PTR [rip+0x14ff6112]        # 0x15501a7bf
   1400246ad:	(bad)  
   1400246ae:	jne    0x1400246af
   1400246b0:	(bad)  
   1400246b1:	sbb    al,0x80
   1400246b3:	call   FWORD PTR [rbx]
   1400246b5:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   1400246bc:	es xor eax,0x432bffa8
   1400246c2:	mov    edx,0xce5231ff
   1400246c7:	push   QWORD PTR [rsi]
   1400246c9:	fs loope 0x1400246cb
   1400246cc:	cmp    BYTE PTR [rbx-0x16],dh
   1400246cf:	(bad)  
   1400246d0:	cmp    al,0x80
   1400246d2:	in     al,dx
   1400246d3:	(bad)  
   1400246d4:	cmp    ecx,DWORD PTR [rcx-0x75c30013]
   1400246da:	jmp    0xd06690d7
   1400246df:	sahf   
   1400246e0:	rex.WRX
   1400246e1:	rex.WRB
   1400246e2:	gs pop rbp
   1400246e4:	rex.WX
   1400246e5:	rex.X ins BYTE PTR es:[rdi],dx
   1400246e7:	jno    0x140024721
   1400246e9:	cmp    eax,0x372ed4ad
   1400246ee:	(bad)  
   1400246ef:	jmp    FWORD PTR [rip+0x3effc034]        # 0x17f020729
   1400246f5:	xor    bh,BYTE PTR [rdi+rdx*2+0x0]
	...
   140024701:	add    BYTE PTR [rax],al
   140024703:	add    BYTE PTR [rbx-0x70feecb2],al
   140024709:	pop    rcx
   14002470a:	sbb    bh,BYTE PTR [rbx]
   14002470c:	(bad)  
   14002470d:	mov    WORD PTR [rbx],?
   14002470f:	fcmovbe st,st(3)
   140024711:	xchg   edi,eax
   140024712:	rex.X call rcx
   140024715:	xchg   esp,eax
   140024716:	rex.XB dec r13d
   140024719:	xchg   ecx,eax
   14002471a:	inc    r12
   14002471d:	mov    WORD PTR [rbp-0x1],cs
   140024720:	mov    bh,0x83
   140024722:	rex.WXB call FWORD PTR [r10+0x29ff2c68]
   140024729:	sbb    al,BYTE PTR [rdi-0x1]
   14002472c:	adc    eax,0x14ff6012
   140024731:	sbb    BYTE PTR [rsi-0x1],dh
   140024734:	sbb    BYTE PTR [rdx+rax*4],bl
   140024737:	call   FWORD PTR [rdx+riz*1]
   14002473a:	mov    ?,edi
   14002473c:	and    ebp,DWORD PTR [rsp+rbx*4]
   14002473f:	jmp    FWORD PTR [rax]
   140024741:	cmp    ch,BYTE PTR [rdi-0x3bb5d201]
   140024747:	push   QWORD PTR [rip+0x38ffda5d]        # 0x1790221aa
   14002474d:	jo     0x140024738
   14002474f:	(bad)  
   140024750:	cmp    al,0x7f
   140024752:	in     al,dx
   140024753:	(bad)  
   140024754:	cmp    ecx,DWORD PTR [rcx-0x74c30013]
   14002475a:	in     eax,dx
   14002475b:	(bad)  
   14002475c:	cmp    eax,DWORD PTR [rbx+0x7239ffec]
   140024762:	jmp    0x121567c66
   140024767:	jmp    FWORD PTR [rdi]
   140024769:	cmp    eax,0x352dffce
   14002476e:	ret    
   14002476f:	jmp    FWORD PTR [rdi]
   140024771:	xor    esi,DWORD PTR [rbx+0x643245ea]
   140024777:	or     DWORD PTR [rax],eax
   140024779:	add    BYTE PTR [rax],al
   14002477b:	add    BYTE PTR [rax],al
   14002477d:	add    BYTE PTR [rax],al
   14002477f:	add    BYTE PTR [rsi-0x5bf8eaaf],al
   140024785:	outs   dx,BYTE PTR ds:[rsi]
   140024786:	sub    BYTE PTR [rsi-0x2a],bh
   140024789:	popf   
   14002478a:	rex.RXB stc 
   14002478c:	xlat   BYTE PTR ds:[rbx]
   14002478d:	popf   
   14002478e:	rex.RX call rbp
   140024791:	(bad)  
   140024792:	rex.XB call r10
   140024795:	xchg   esi,eax
   140024796:	call   r8
   140024799:	xchg   ebx,eax
   14002479a:	rex.RB inc r15d
   14002479d:	mov    cs,WORD PTR [rdi+rdi*8-0x42]
   1400247a1:	mov    BYTE PTR [rdi-0x1],cl
   1400247a4:	mov    dl,0x7f
   1400247a6:	rex.WRB inc QWORD PTR [r14+0x1eff2e5a]
   1400247ad:	adc    ecx,DWORD PTR [rdx-0x1]
   1400247b0:	adc    eax,0x14ff6513
   1400247b5:	sbb    DWORD PTR [rcx-0x1],edi
   1400247b8:	sbb    DWORD PTR [rip+0x261eff86],ebx        # 0x166214744
   1400247be:	xchg   ebx,eax
   1400247bf:	jmp    QWORD PTR [rip+0x2bffa432]        # 0x16c01ebf7
   1400247c5:	rex.XB mov r10d,0xd45733ff
   1400247cb:	push   QWORD PTR [rdi]
   1400247cd:	ins    DWORD PTR es:[rdi],dx
   1400247ce:	out    0xff,eax
   1400247d0:	cmp    edi,DWORD PTR [rdi-0x14]
   1400247d3:	(bad)  
   1400247d4:	cmp    ecx,DWORD PTR [rdx-0x75c30013]
   1400247da:	in     eax,dx
   1400247db:	(bad)  
   1400247dc:	cmp    al,BYTE PTR [rcx+0x6c39ffeb]
   1400247e2:	jmp    0x11d4e7be6
   1400247e7:	jmp    FWORD PTR [rsi]
   1400247e9:	cmp    ecx,ecx
   1400247eb:	jmp    FWORD PTR [rip+0x3bffc134]        # 0x17c020925
   1400247f1:	xor    cl,BYTE PTR [rax+0x92]
   1400247f7:	add    BYTE PTR [rax],al
   1400247f9:	add    BYTE PTR [rax],al
   1400247fb:	add    BYTE PTR [rax-0x3fdbe2a5],dl
   140024801:	mov    DWORD PTR [rip+0x4da0d9c1],edi        # 0x18da321c8
   140024807:	(bad)  
   140024808:	fcomp  DWORD PTR [rdi-0x612700b5]
   14002480e:	rex.W call rdi
   140024811:	popf   
   140024812:	rex.RX call rsp
   140024815:	cwde   
   140024816:	rex.XB call r9
   140024819:	xchg   esp,eax
   14002481a:	rex.X dec edx
   14002481d:	nop
   14002481e:	rex.WX inc rax
   140024821:	mov    DWORD PTR [rsi-0x1],ecx
   140024824:	mov    bh,0x83
   140024826:	push   rdx
   140024827:	jmp    FWORD PTR [rdx+0x65ff4b7a]
   14002482d:	rex.X xor eax,0x4f1119ff
   140024833:	call   QWORD PTR [rdx*1+0x1b16ff6d]
   14002483a:	jge    0x14002483b
   14002483c:	sbb    esp,DWORD PTR [rax]
   14002483e:	mov    edi,edi
   140024840:	and    ch,BYTE PTR [rbx+rbx*4]
   140024843:	jmp    FWORD PTR [rcx]
   140024845:	cmp    al,0xb2
   140024847:	push   QWORD PTR [rcx]
   140024849:	push   rdx
   14002484a:	int    0xff
   14002484c:	(bad)  
   14002484d:	imul   esp,esi,0xffffffff
   140024850:	cmp    edi,DWORD PTR [rdi-0x14]
   140024853:	(bad)  
   140024854:	cmp    al,0x8b
   140024856:	in     eax,dx
   140024857:	(bad)  
   140024858:	cmp    al,0x8b
   14002485a:	in     eax,dx
   14002485b:	(bad)  
   14002485c:	cmp    bh,BYTE PTR [rsi-0x15]
   14002485f:	push   QWORD PTR [rdi]
   140024861:	fs out 0xff,eax
   140024864:	xor    DWORD PTR [rbp-0x2a],eax
   140024867:	jmp    FWORD PTR [rip+0x2cffc636]        # 0x16d020ea3
   14002486d:	xor    al,0xbe
   14002486f:	inc    BYTE PTR [rdx+0x31]
   140024872:	jo     0x1400248a7
	...
   14002487c:	mov    ebx,0xd3793d85
   140024881:	pushf  
   140024882:	rex.WRXB jmp 0x13f53ea61
   140024888:	fldenv [rcx-0x602700b1]
   14002488e:	rex.WXB (bad) 
   140024890:	fcomp  DWORD PTR [rsi-0x642900b8]
   140024896:	rex.RB call r10
   140024899:	xchg   esi,eax
   14002489a:	rex.X dec ebp
   14002489d:	xchg   ecx,eax
   14002489e:	inc    rcx
   1400248a1:	mov    cl,BYTE PTR [rsi-0x1]
   1400248a4:	mov    bh,0x83
   1400248a6:	push   rcx
   1400248a7:	jmp    FWORD PTR [rbx-0x6300aa83]
   1400248ad:	outs   dx,DWORD PTR ds:[rsi]
   1400248ae:	rex.B (bad) 
   1400248b0:	cmp    al,0x27
   1400248b2:	notrack call QWORD PTR [rdi]
   1400248b5:	adc    DWORD PTR [rax-0x1],ebx
   1400248b8:	adc    al,0x17
   1400248ba:	jne    0x1400248bb
   1400248bc:	sbb    BYTE PTR [rip+0x261fff84],bl        # 0x166224846
   1400248c2:	xchg   esp,eax
   1400248c3:	jmp    QWORD PTR [rdi]
   1400248c5:	ss stos BYTE PTR es:[rdi],al
   1400248c7:	jmp    FWORD PTR [rdi]
   1400248c9:	rex.WR (bad) 
   1400248cb:	push   QWORD PTR [rdi]
   1400248cd:	push   0xffffffff803bffe4
   1400248d2:	in     al,dx
   1400248d3:	(bad)  
   1400248d4:	cmp    ecx,DWORD PTR [rbp-0x73c40012]
   1400248da:	in     eax,dx
   1400248db:	(bad)  
   1400248dc:	cmp    DWORD PTR [rbx-0x15],edi
   1400248df:	push   QWORD PTR [rsi]
   1400248e1:	pop    rbx
   1400248e2:	in     al,0xff
   1400248e4:	(bad)  
   1400248e5:	(bad)  
   1400248e6:	sar    bh,1
   1400248e8:	sub    eax,0x33ffc335
   1400248ed:	xor    ah,BYTE PTR [rbx+0x643145d3]
   1400248f3:	add    al,BYTE PTR [rax]
	...
   1400248fd:	add    BYTE PTR [rax],al
   1400248ff:	add    BYTE PTR [rcx-0x42f7c785],dh
   140024905:	xchg   DWORD PTR [rcx+0x5a],eax
   140024908:	retf   0x4893
   14002490b:	rcr    cl,0xa1
   14002490e:	rex.WRXB std 
   140024910:	fcomp  DWORD PTR [rdi-0x622800b5]
   140024916:	rex.RXB call r11
   140024919:	xchg   edi,eax
   14002491a:	rex.X dec esi
   14002491d:	xchg   edx,eax
   14002491e:	rex.RXB inc r9d
   140024921:	mov    cl,BYTE PTR [rsi-0x1]
   140024924:	mov    dh,0x83
   140024926:	push   rdx
   140024927:	jmp    QWORD PTR [rbp+0x56ff5479]
   14002492d:	cmp    ecx,DWORD PTR [rdx-0x1]
   140024930:	imul   eax,DWORD PTR [rbp+0x30],0x49131eff
   140024937:	call   QWORD PTR [rip+0x16ff6613]        # 0x15701af50
   14002493d:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1c]
   140024941:	and    DWORD PTR [rbp-0x5dcfdb01],ecx
   140024947:	jmp    FWORD PTR [rip+0x37ffc048]        # 0x178020995
   14002494d:	data16 loop 0x14002494f
   140024950:	cmp    eax,DWORD PTR [rcx-0x6fc30014]
   140024956:	out    dx,al
   140024957:	(bad)  
   140024958:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x1587c601]
   14002495f:	push   QWORD PTR [rbx+rdx*2]
   140024962:	loopne 0x140024963
   140024964:	cs cmp cl,dl
   140024967:	jmp    FWORD PTR [rip+0x3cffc134]        # 0x17d020aa1
   14002496d:	xor    al,BYTE PTR [rax+rdi*2+0x0]
	...
   14002498c:	mov    bh,0x81
   14002498e:	cmp    BYTE PTR [rcx],ch
   140024990:	ret    0x3e8b
   140024993:	mov    ss,edx
   140024995:	cdq    
   140024996:	rex.R jmp 0x14002496d
   140024999:	cdq    
   14002499a:	rex.XB dec r14d
   14002499d:	xchg   edx,eax
   14002499e:	rex.RX inc ecx
   1400249a1:	mov    cl,BYTE PTR [rsi-0x1]
   1400249a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400249a5:	ja     0x1400249f3
   1400249a7:	dec    DWORD PTR [rax+0x2f]
   1400249aa:	rex.RB call FWORD PTR [rip+0x2cff4611]        # 0x16d018fc2
   1400249b1:	sbb    eax,0x3957ff42
   1400249b6:	(bad)  
   1400249b7:	call   QWORD PTR [rdi]
   1400249b9:	adc    DWORD PTR [rbx-0x1],edx
   1400249bc:	adc    al,0x17
   1400249be:	je     0x1400249bf
   1400249c0:	sbb    DWORD PTR [rsi],ebx
   1400249c2:	xchg   bh,bh
   1400249c4:	and    DWORD PTR [rbx],ebp
   1400249c6:	(bad)  
   1400249c7:	jmp    FWORD PTR [rbx]
   1400249c9:	rex.XB mov r10d,0xe06436ff
   1400249cf:	(bad)  
   1400249d0:	cmp    eax,DWORD PTR [rbx-0x6cc40014]
   1400249d6:	out    dx,eax
   1400249d7:	(bad)  
   1400249d8:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x168cc601]
   1400249df:	push   QWORD PTR [rdx]
   1400249e1:	rex.WXB (bad) 
   1400249e4:	cs (bad) 
   1400249e6:	(bad)  
   1400249e7:	jmp    FWORD PTR [rbx+rsi*1]
   1400249ea:	mov    esi,0x683244fc
   1400249ef:	(bad)  
	...
   140024a14:	scas   eax,DWORD PTR es:[rdi]
   140024a15:	ja     0x140024a45
   140024a17:	or     DWORD PTR [rax-0x3fa1cd81],edi
   140024a1d:	xchg   BYTE PTR [rsi],bh
   140024a1f:	(bad)
   140024a22:	rex.X dec BYTE PTR [rcx+0x2f]
   140024a26:	rex.X jmp FWORD PTR [rax]
   140024a29:	(bad)  
   140024a2a:	rex.RX jmp QWORD PTR [rsp+r10*1]
   140024a2e:	rex.RX jmp QWORD PTR [rbx]
   140024a31:	adc    al,0x46
   140024a33:	call   FWORD PTR [rdi+0x3d]
   140024a36:	xor    eax,0x461825ff
   140024a3b:	call   QWORD PTR [rip+0x17ff6613]        # 0x15801b054
   140024a41:	sbb    edi,DWORD PTR [rdi-0x1]
   140024a44:	(bad)  
   140024a45:	es xchg ebx,eax
   140024a47:	jmp    FWORD PTR [rcx]
   140024a49:	cmp    eax,0x6235ffb3
   140024a4e:	(bad)  
   140024a50:	cmp    eax,DWORD PTR [rsi-0x67c50013]
   140024a56:	lock (bad) 
   140024a58:	cmp    ecx,DWORD PTR [rbp+0x6c38ffed]
   140024a5e:	call   0x115467c62
   140024a63:	jmp    FWORD PTR [rip+0x37ffc335]        # 0x178020d9e
   140024a69:	xor    ebx,DWORD PTR [rcx+0x643245bf]
   140024a6f:	add    DWORD PTR [rax],eax
	...
   140024a99:	add    BYTE PTR [rax],al
   140024a9b:	add    BYTE PTR [rdi+0x65012863],dl
   140024aa1:	(bad)  
   140024aa2:	sub    eax,0x3e35527c
   140024aa7:	dec    DWORD PTR [rdx+0x30]
   140024aaa:	rex inc DWORD PTR [rcx+0x28]
   140024aae:	rex.X (bad) 
   140024ab0:	cmp    BYTE PTR [rdx],ah
   140024ab2:	rex.XB (bad) 
   140024ab4:	cmp    BYTE PTR [rdx],ah
   140024ab6:	rex.XB jmp QWORD PTR [r10+0x40]
   140024aba:	call   QWORD PTR ss:[rdi]
   140024abd:	adc    DWORD PTR [rbx-0x1],edx
   140024ac0:	adc    al,0x18
   140024ac2:	ja     0x140024ac3
   140024ac4:	sbb    al,0x21
   140024ac6:	mov    edi,?
   140024ac8:	(bad)  
   140024ac9:	(bad)  
   140024aca:	stos   DWORD PTR es:[rdi],eax
   140024acb:	push   QWORD PTR [rax+riz*2]
   140024ace:	(bad)  
   140024ad0:	cmp    ecx,DWORD PTR [rdx-0x62c50013]
   140024ad6:	lock (bad) 
   140024ad8:	cmp    ecx,DWORD PTR [rbp+0x6537ffee]
   140024ade:	out    0xff,al
   140024ae0:	(bad)  
   140024ae1:	ds iret 
   140024ae3:	jmp    FWORD PTR [rip+0x3effc134]        # 0x17f020c1d
   140024ae9:	xor    bh,BYTE PTR [rsi+0x64]
	...
   140024b20:	ins    DWORD PTR es:[rdi],dx
   140024b21:	rex.B sbb al,0x2
   140024b24:	cwde   
   140024b25:	(bad)  
   140024b26:	sbb    ebp,DWORD PTR [rdx-0xdc9561]
   140024b2c:	jle    0x140024b82
   140024b2e:	sub    edi,edi
   140024b30:	(bad)  
   140024b31:	rex cmp edi,edi
   140024b34:	rex.WRB xor r8b,BYTE PTR [r8-0x1]
   140024b38:	jo     0x140024b84
   140024b3a:	jmp    FWORD PTR ss:[rcx]
   140024b3d:	sbb    eax,DWORD PTR [rbp-0x1]
   140024b40:	adc    al,0x14
   140024b42:	push   0xffffffffffffffff
   140024b44:	sbb    DWORD PTR [rsi],ebx
   140024b46:	test   edi,edi
   140024b48:	and    al,0x32
   140024b4a:	movabs ds:0xee8f3bffd75d33ff,eax
   140024b53:	(bad)  
   140024b54:	cmp    esp,DWORD PTR [rsi-0x73c4000e]
   140024b5a:	in     eax,dx
   140024b5b:	push   QWORD PTR [rsi]
   140024b5d:	pop    rsp
   140024b5e:	jrcxz  0x140024b5f
   140024b60:	cs cmp ecx,ecx
   140024b63:	jmp    FWORD PTR [rip+0x46f7bc34]        # 0x186fa079d
   140024b69:	xor    ah,BYTE PTR [rbp+0x13]
	...
   140024ba4:	popf   
   140024ba5:	sbb    DWORD PTR fs:[rcx],ecx
   140024ba8:	mov    esp,0xc3b7297f
   140024bad:	and    DWORD PTR [rbx],0xffffffff
   140024bb0:	movabs ds:0x65ff2d537cff1d6d,eax
   140024bb9:	cmp    dil,r15b
   140024bbc:	push   0x47
   140024bbe:	call   QWORD PTR ss:[rsi]
   140024bc1:	adc    DWORD PTR [rdi-0x1],edx
   140024bc4:	(bad)  
   140024bc5:	sbb    bh,BYTE PTR [rbp-0x1]
   140024bc8:	and    DWORD PTR [rbx+rbx*4],ebp
   140024bcb:	push   QWORD PTR [rdx]
   140024bcd:	pop    rdx
   140024bce:	sar    edi,cl
   140024bd0:	cmp    edx,DWORD PTR [rsi-0x4fc60011]
   140024bd6:	repnz (bad) 
   140024bd8:	cmp    cl,BYTE PTR [rdx+0x5334ffed]
   140024bde:	fdivp  st(7),st
   140024be0:	sub    eax,0x39ffc536
   140024be5:	xor    edx,DWORD PTR [rdx+0xb2]
	...
   140024c27:	add    BYTE PTR [rbp-0x75fae69c],bl
   140024c2d:	pop    rax
   140024c2e:	sbb    eax,0x205d8f70
   140024c33:	int    0xa8
   140024c35:	jo     0x140024c50
   140024c37:	dec    BYTE PTR [rsi-0x6b00dca1]
   140024c3d:	fs sub bh,bh
   140024c40:	and    eax,0x14ff4819
   140024c45:	(bad)  
   140024c46:	jb     0x140024c47
   140024c48:	(bad)  
   140024c49:	and    eax,0x5631ff92
   140024c4e:	(bad)  
   140024c4f:	(bad)  
   140024c50:	cmp    ah,BYTE PTR [rax-0x44c60010]
   140024c56:	repz (bad) 
   140024c58:	cmp    al,BYTE PTR [rsi+0x4932ffec]
   140024c5e:	fdivr  st,st(7)
   140024c60:	sub    eax,0x3fffc235
   140024c65:	xor    bh,BYTE PTR [rbp+0x5e]
	...
   140024cb0:	jbe    0x140024cfa
   140024cb2:	sbb    al,BYTE PTR [rcx]
   140024cb4:	adc    DWORD PTR [rcx+0x1a],0x186ea753
   140024cbb:	lock movabs eax,ds:0x15ff374769ff1b6b
   140024cc5:	adc    esp,DWORD PTR [rcx-0x1]
   140024cc8:	sbb    esp,DWORD PTR [rax]
   140024cca:	mov    edi,edi
   140024ccc:	(bad)  
   140024ccd:	push   rax
   140024cce:	(bad)  
   140024ccf:	(bad)  
   140024cd0:	cmp    DWORD PTR [rax+rsi*8-0xe37c701],ebp
   140024cd7:	(bad)  
   140024cd8:	cmp    DWORD PTR [rdi-0x15],edi
   140024cdb:	push   QWORD PTR [rax]
   140024cdd:	(bad)  
   140024cde:	sar    bh,1
   140024ce0:	sub    eax,0x46f6bd34
   140024ce5:	xor    ah,BYTE PTR [rbx+0x11]
	...
   140024d38:	mov    dl,BYTE PTR [rbp+0x12]
   140024d3b:	xor    DWORD PTR [rax-0x570fe78c],esi
   140024d41:	jno    0x140024d68
   140024d43:	call   FWORD PTR [rsi]
   140024d45:	adc    eax,0x1b17ff4f
   140024d4a:	jg     0x140024d4b
   140024d4c:	sub    al,0x49
   140024d4e:	mov    esi,0xefba3bff
   140024d53:	(bad)  
   140024d54:	cmp    edx,ecx
   140024d56:	out    dx,eax
   140024d57:	(bad)  
   140024d58:	cmp    BYTE PTR [rbx-0x17],dh
   140024d5b:	jmp    FWORD PTR [rsi]
   140024d5d:	cmp    ecx,ecx
   140024d5f:	(bad)  
   140024d60:	cmp    BYTE PTR [rbx],dh
   140024d62:	xchg   esp,eax
   140024d63:	scas   eax,DWORD PTR es:[rdi]
	...
   140024dbc:	xchg   edx,eax
   140024dbd:	pop    rbx
   140024dbe:	adc    DWORD PTR [rdi-0x4b],ecx
   140024dc1:	jns    0x140024dde
   140024dc3:	std    
   140024dc4:	pop    rdx
   140024dc5:	cmp    eax,0x1616ff3d
   140024dca:	jo     0x140024dcb
   140024dcc:	sub    BYTE PTR [rsi],bh
   140024dce:	mov    cl,0xff
   140024dd0:	cmp    al,0xc2
   140024dd2:	in     eax,dx
   140024dd3:	(bad)  
   140024dd4:	cmp    al,0xd2
   140024dd6:	in     eax,dx
   140024dd7:	push   QWORD PTR [rsi]
   140024dd9:	movsxd esp,ebx
   140024ddb:	jmp    FWORD PTR [rip+0x3fffc435]        # 0x180021216
   140024de1:	xor    bh,BYTE PTR [rbx+0x53]
	...
   140024e40:	pushf  
   140024e41:	movsxd edx,DWORD PTR [rcx]
   140024e43:	mov    WORD PTR [rsi+0x18ff2e66],ss
   140024e49:	adc    ebx,DWORD PTR [rbp-0x1]
   140024e4c:	and    esi,DWORD PTR [rdx]
   140024e4e:	movabs eax,ds:0xeccb3dffecc43dff
   140024e57:	push   QWORD PTR [rbx]
   140024e59:	push   rcx
   140024e5a:	(bad)  
   140024e5c:	xor    BYTE PTR [rbx],dh
   140024e5e:	mov    bl,0xe7
   140024e60:	xor    r12b,BYTE PTR [r15+0x8]
	...
   140024ec0:	mov    WORD PTR [rsi+0xf],ss
   140024ec3:	or     DWORD PTR [rbp+0x43d41f6e],esp
   140024ec9:	sub    eax,0x251dff46
   140024ece:	mov    ?,edi
   140024ed0:	cmp    al,0xbe
   140024ed2:	(bad)  
   140024ed3:	(bad)  
   140024ed4:	cmp    al,0xba
   140024ed6:	in     al,dx
   140024ed7:	push   QWORD PTR [rax]
   140024ed9:	rex (bad) 
   140024edb:	(bad)  
   140024edc:	cmp    al,0x32
   140024ede:	test   DWORD PTR [rax+rax*1+0x0],eax
	...
   140024f41:	add    BYTE PTR [rax],al
   140024f43:	add    BYTE PTR [rbx-0x72c0ecaa],cl
   140024f49:	(bad)  
   140024f4a:	xor    al,0xfd
   140024f4c:	sbb    BYTE PTR [rdx],bl
   140024f4e:	je     0x140024f4f
   140024f50:	cmp    DWORD PTR [rdx-0x67c6001f],ebp
   140024f56:	call   0xfd377e5a
   140024f5b:	repz rex.XB xor bpl,BYTE PTR [r13+0x18]
	...
   140024fc4:	lea    edx,[rdi+0x12]
   140024fc7:	add    DWORD PTR [rdx+rsi*2+0x242fa622],ebp
   140024fce:	pop    rax
   140024fcf:	push   QWORD PTR [rcx]
   140024fd1:	jno    0x140024fa1
   140024fd3:	push   QWORD PTR [rbx]
   140024fd5:	pop    rcx
   140024fd6:	xlat   BYTE PTR ds:[rbx]
   140024fd7:	(bad)  
   140024fd8:	cmp    al,0x32
   140024fda:	test   DWORD PTR [rsi+0x0],edi
	...
   140025045:	add    BYTE PTR [rax],al
   140025047:	add    BYTE PTR [rdx-0x7eeae29d],bl
   14002504d:	push   rdi
   14002504e:	(bad)  
   14002504f:	fisub  WORD PTR [rcx]
   140025051:	sub    DWORD PTR [rdx-0x5dcdce01],ebx
   140025057:	ret    
   140025058:	(bad)  
   140025059:	xor    dh,BYTE PTR [rdi+0x7]
	...
   1400250cc:	jge    0x14002511f
   1400250ce:	sub    DWORD PTR [rcx],ebx
   1400250d0:	rex.WB
   1400250d1:	ss (bad) 
   1400250d3:	cmp    BYTE PTR [esi*2+0xb],ch
	...
   14002517b:	add    bh,bh
   14002517d:	(bad)  
   14002517e:	(bad)  
   14002517f:	(bad)  
   140025180:	(bad)  
   140025181:	clc    
   140025182:	(bad)  
   140025183:	(bad)  
   140025184:	(bad)  
   140025185:	clc    
   140025186:	(bad)  
   140025187:	(bad)  
   140025188:	push   rax
   14002518a:	(bad)  
   14002518b:	(bad)  
   14002518c:	push   rax
   14002518e:	ud0    edi,edi
   140025191:	loopne 0x14002519a
   140025193:	(bad)  
   140025194:	jmp    rax
   140025196:	(bad)  
   140025197:	cld    
   140025198:	inc    eax
   14002519a:	add    edi,eax
   14002519c:	inc    DWORD PTR [rax+0xf8f001]
   1400251a2:	add    BYTE PTR [rax-0x10],ah
   1400251a5:	add    BYTE PTR [rax],al
   1400251a7:	add    eax,eax
   1400251a9:	add    BYTE PTR [rax],al
   1400251ab:	add    DWORD PTR [rax+0x30000],eax
   1400251b1:	add    BYTE PTR [rax],al
   1400251b3:	add    eax,DWORD PTR [rax]
   1400251b5:	add    BYTE PTR [rax],al
   1400251b7:	add    eax,DWORD PTR [rax-0xff90000]
   1400251bd:	add    BYTE PTR [rax],al
   1400251bf:	(bad)  
   1400251c0:	cld    
   1400251c1:	add    BYTE PTR [rax],al
   1400251c3:	(bad)  
   1400251c4:	inc    DWORD PTR [rax]
   1400251c6:	add    BYTE PTR [rdi],cl
   1400251c8:	inc    DWORD PTR [rax-0x3f00f100]
   1400251ce:	add    BYTE PTR [rdi],bl
   1400251d0:	jmp    rax
   1400251d2:	add    BYTE PTR [rdi],bl
   1400251d4:	(bad)  
   1400251d5:	clc    
   1400251d6:	add    BYTE PTR [rdi],bl
   1400251d8:	(bad)  
   1400251d9:	inc    BYTE PTR [rax]
   1400251db:	(bad)  
   1400251dc:	(bad)  
   1400251dd:	inc    DWORD PTR [rax]
   1400251df:	(bad)  
   1400251e0:	(bad)  
   1400251e1:	inc    DWORD PTR [rax-0x7f0000c1]
   1400251e7:	jg     0x1400251e8
   1400251e9:	inc    eax
   1400251eb:	jg     0x1400251ec
   1400251ed:	inc    eax
   1400251ef:	(bad)  
   1400251f0:	(bad)  
   1400251f1:	jmp    rax
   1400251f3:	(bad)  
   1400251f4:	(bad)  
   1400251f5:	push   rcx
   1400251f7:	(bad)  
   1400251f8:	(bad)  
   1400251f9:	(bad)  
   1400251fa:	(bad)  
   1400251fb:	jmp    FWORD PTR [rax]
   1400251fd:	add    BYTE PTR [rax],al
   1400251ff:	add    BYTE PTR [rax],dl
   140025201:	add    BYTE PTR [rax],al
   140025203:	add    BYTE PTR [rax],ah
   140025205:	add    BYTE PTR [rax],al
   140025207:	add    BYTE PTR [rcx],al
   140025209:	add    BYTE PTR [rax],ah
   14002520b:	add    BYTE PTR [rax],al
   14002520d:	add    BYTE PTR [rax],al
   14002520f:	add    BYTE PTR [rax+0x4],al
	...
   14002523a:	add    BYTE PTR [rax],al
   14002523c:	xor    BYTE PTR [rdx],bh
   14002523e:	xor    al,0x7
   140025240:	cmp    BYTE PTR [rdx+0x46],cl
   140025243:	sbb    BYTE PTR [rax],al
	...
   140025279:	add    BYTE PTR [rax],al
   14002527b:	add    BYTE PTR [rbp+0x7c],cl
   14002527e:	xchg   DWORD PTR [rbp+0x3c],esp
   140025281:	mov    ch,0xee
   140025283:	test   DWORD PTR [rax+rdi*2-0x73],0x202f4076
   14002528b:	add    DWORD PTR [rax],eax
	...
   1400252b5:	add    BYTE PTR [rax],al
   1400252b7:	add    BYTE PTR [rdx],bh
   1400252b9:	sub    DWORD PTR [rsi],ebx
   1400252bb:	add    DWORD PTR [rcx-0x78],eax
   1400252be:	int    0xd2
   1400252c0:	cmp    ebx,DWORD PTR [rbx-0x71c40011]
   1400252c6:	in     eax,dx
   1400252c7:	dec    DWORD PTR [rdx+0x62]
   1400252ca:	xchg   esp,eax
   1400252cb:	add    DWORD PTR [rax],0x0
	...
   1400252f5:	add    BYTE PTR [rax],al
   1400252f7:	add    BYTE PTR [rdi+rbp*1+0x47],al
   1400252fb:	rex.W
   1400252fc:	cs rex.WR ret 0x35ff
   140025301:	(bad)  
   140025302:	(bad)  
   140025304:	cmp    BYTE PTR [rbp-0x1a],ch
   140025307:	(bad)  
   140025308:	cmp    dh,BYTE PTR [rsi-0x16]
   14002530b:	dec    BYTE PTR [rdi+0x59]
   14002530e:	jl     0x14002536d
	...
   140025320:	rex.WXB xor dl,BYTE PTR [r11+r8*2+0x0]
	...
   14002532d:	add    BYTE PTR [rax],al
   14002532f:	add    BYTE PTR [rbp+rax*2+0x14],dh
   140025333:	sub    al,0x5c
   140025335:	xor    edx,DWORD PTR [rdi+riz*1]
   140025338:	(bad)  
   140025339:	sbb    ebp,DWORD PTR [rax-0x25]
   14002533c:	sbb    al,0x23
   14002533e:	mov    ?,edi
   140025340:	es ss test eax,0xc84f2fff
   140025347:	push   QWORD PTR [rdi]
   140025349:	push   0x7b3cffe3
   14002534e:	in     eax,0xf8
   140025350:	push   rcx
   140025351:	pop    rdx
   140025352:	outs   dx,BYTE PTR ds:[rsi]
   140025353:	push   rax
   140025354:	add    BYTE PTR [rax],al
   140025356:	add    BYTE PTR [rax],al
   140025358:	rex.XB and eax,0x34430217
   14002535e:	jbe    0x1400252e0
   140025360:	cmp    esi,DWORD PTR [rbx]
   140025362:	mov    esi,DWORD PTR [rdi+0x0]
   140025365:	add    BYTE PTR [rax],al
   140025367:	add    BYTE PTR [rsi+0x41],ch
   14002536a:	(bad)  
   14002536b:	btr    DWORD PTR [rdx+0x2f],edi
   14002536f:	movabs ds:0xff4180b6fe4791cd,eax
   140025378:	rex.XB sub eax,0x1715ff46
   14002537e:	jae    0x14002537f
   140025380:	sbb    al,0x22
   140025382:	(bad)  
   140025383:	jmp    QWORD PTR [rdi]
   140025385:	cmp    BYTE PTR [rbx-0x2ca8cd01],ch
   14002538b:	(bad)  
   14002538c:	cmp    bh,BYTE PTR [rcx-0x16]
   14002538f:	(bad)  
   140025390:	cmp    al,0x8a
   140025392:	in     al,dx
   140025393:	std    
   140025394:	rex.X imul esi,DWORD PTR [rbx-0x4dbbc642],0xbf352ed1
   14002539f:	stc    
   1400253a0:	rex.B sub al,0x4d
   1400253a3:	sbb    BYTE PTR [rax-0x34c4e1a4],dl
   1400253a9:	xchg   edx,eax
   1400253aa:	rex.X fst st(7)
   1400253ad:	pushf  
   1400253ae:	rex.RX call rdx
   1400253b1:	xchg   ebp,eax
   1400253b2:	rex.XB inc r12d
   1400253b5:	mov    WORD PTR [rbp-0x1],cs
   1400253b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400253b9:	jbe    0x140025401
   1400253bb:	jmp    FWORD PTR [rsi+rbx*1]
   1400253be:	rex.WRB call QWORD PTR [r14]
   1400253c1:	sbb    DWORD PTR [rdx-0x1],edi
   1400253c4:	and    BYTE PTR [rcx],ch
   1400253c6:	xchg   edi,eax
   1400253c7:	jmp    FWORD PTR [rsi]
   1400253c9:	rex.WX ret 
   1400253cb:	(bad)  
   1400253cc:	cmp    DWORD PTR [rbp-0x17],esi
   1400253cf:	(bad)  
   1400253d0:	cmp    al,0x8b
   1400253d2:	in     eax,dx
   1400253d3:	(bad)  
   1400253d4:	cmp    DWORD PTR [rcx+rbp*8-0x1],esi
   1400253d8:	xor    BYTE PTR [rax-0x30],al
   1400253db:	push   QWORD PTR [rip+0xb09e33]        # 0x140b2f214
   1400253e1:	add    BYTE PTR [rax],al
   1400253e3:	add    BYTE PTR [rcx-0x31a5c27d],bh
   1400253e9:	xchg   edi,eax
   1400253ea:	rex.WX (bad) 
   1400253ec:	fcomp  DWORD PTR [rdi-0x662a01b5]
   1400253f2:	rex.R inc edi
   1400253f5:	mov    cs,WORD PTR [rbx-0x1]
   1400253f8:	scas   eax,DWORD PTR es:[rdi]
   1400253f9:	jg     0x14002544e
   1400253fb:	jmp    QWORD PTR [rsi+0x45]
   1400253fe:	notrack call QWORD PTR [rdi]
   140025401:	adc    al,0x5f
   140025403:	call   FWORD PTR [rdx]
   140025405:	and    BYTE PTR [rax-0x4ac0d501],cl
   14002540b:	(bad)  
   14002540c:	cmp    DWORD PTR [rdi+riz*8-0x1],esi
   140025410:	cmp    ecx,DWORD PTR [rbp+0x6837ffee]
   140025416:	out    0xff,al
   140025418:	cs cmp bh,al
   14002541b:	inc    DWORD PTR [rax+0x32]
   14002541e:	jne    0x140025473
	...
   14002542c:	movabs eax,ds:0xbe943a8ac32e2d6e
   140025435:	xchg   BYTE PTR [rbp-0x10],al
   140025438:	pop    rax
   140025439:	cmp    eax,DWORD PTR [rsi-0x1]
   14002543c:	and    al,0x15
   14002543e:	rex.RB (bad) 
   140025440:	cmp    eax,0x16ff4128
   140025445:	sbb    DWORD PTR [rax-0x1],edi
   140025448:	and    eax,0x38ffa634
   14002544d:	je     0x140025434
   14002544f:	(bad)  
   140025450:	cmp    edx,DWORD PTR [rcx+0x5b35ffee]
   140025456:	loopne 0x140025457
   140025458:	(bad)  
   140025459:	xor    eax,0x273ceeb8
   14002545e:	cmp    al,0x8
	...
   140025474:	push   0x41
   140025476:	(bad)  
   140025477:	and    BYTE PTR [rbp+0x4c],dh
   14002547a:	(bad)  
   14002547b:	jmp    0x13f3d8cd6
   140025480:	push   rsi
   140025481:	(bad)  
   140025482:	cmp    al,0xff
   140025484:	sbb    dl,BYTE PTR [rsi]
   140025486:	pop    rsi
   140025487:	jmp    QWORD PTR [rax]
   140025489:	sub    bl,BYTE PTR [rax-0x1c8ac801]
   14002548f:	(bad)  
   140025490:	cmp    edx,DWORD PTR [rdi+0x4e33ffef]
   140025496:	fdivr  st,st(7)
   140025498:	(bad)  
   140025499:	xor    ebx,DWORD PTR [rax+0x9b]
	...
   1400254b7:	add    BYTE PTR [rdx-0x5fcee59d],bl
   1400254bd:	imul   ebx,DWORD PTR [rdi],0x285a86ce
   1400254c3:	dec    BYTE PTR [rsi+0x35]
   1400254c6:	rex call FWORD PTR [rdx]
   1400254c9:	and    BYTE PTR [rdi-0x1f85c901],al
   1400254cf:	(bad)  
   1400254d0:	cmp    DWORD PTR [rdi+0x4230fff0],ebx
   1400254d6:	iret   
   1400254d7:	inc    DWORD PTR [rbx+0x31]
   1400254da:	push   0x44
	...
   140025500:	mov    dl,BYTE PTR [rdi+0x15]
   140025503:	pop    rbp
   140025504:	cdq    
   140025505:	data16 and al,0xfb
   140025508:	sbb    DWORD PTR [rcx],ebx
   14002550a:	outs   dx,BYTE PTR ds:[rsi]
   14002550b:	push   QWORD PTR [rax+rax*4]
   14002550e:	fcos   
   140025510:	cmp    DWORD PTR [rbx+0x3831ffed],esp
   140025516:	mov    ebx,0x372539e8
   14002551b:	add    al,0x0
	...
   140025541:	add    BYTE PTR [rax],al
   140025543:	add    BYTE PTR [rbx+riz*2+0x33477613],bl
   14002554a:	rex.WRX push QWORD PTR [rcx]
   14002554d:	jle    0x14002551a
   14002554f:	(bad)  
   140025550:	cmp    BYTE PTR [rbp+riz*8-0x69ccc701],dl
   140025557:	nop
	...
   140025584:	push   rsi
   140025585:	xor    al,BYTE PTR [rdi]
   140025587:	add    al,BYTE PTR [rax+0x2bc42b54]
   14002558d:	push   0xffffffffffffffb3
   14002558f:	push   QWORD PTR [rip+0x43fcd872]        # 0x183ff2e07
   140025595:	(bad)  
   140025596:	pop    rsp
   140025597:	(bad)  
	...
   1400255c8:	mov    ds,WORD PTR [rcx+0x16]
   1400255cb:	(bad)  
   1400255cc:	rex.B
   1400255cd:	rex.RB jle 0x1400255c6
   1400255d0:	cmp    BYTE PTR [rbx*4+0x92],bh
	...
   14002560b:	add    BYTE PTR [rbx+rsi*1+0x2f],cl
   14002560f:	and    BYTE PTR [rdx],ch
   140025611:	sbb    eax,0x23b
	...
   140025622:	add    BYTE PTR [rax],al
   140025624:	cld    
   140025625:	inc    DWORD PTR [rax]
   140025627:	add    ah,bh
   140025629:	(bad)  
   14002562a:	add    BYTE PTR [rax],al
   14002562c:	clc    
   14002562d:	(bad)  
   14002562e:	add    BYTE PTR [rax],al
   140025630:	clc    
   140025631:	(bad)  
   140025632:	add    BYTE PTR [rax],al
   140025634:	loopne 0x14002563e
   140025636:	add    BYTE PTR [rax],al
   140025638:	add    BYTE PTR [rax],0x0
   14002563b:	add    BYTE PTR [rax],al
   14002563d:	add    DWORD PTR [rax],eax
   14002563f:	add    BYTE PTR [rax],al
   140025641:	add    DWORD PTR [rax],eax
   140025643:	add    al,al
   140025645:	add    DWORD PTR [rax],eax
   140025647:	add    al,dh
   140025649:	add    eax,DWORD PTR [rax]
   14002564b:	add    al,bh
   14002564d:	add    eax,DWORD PTR [rax]
   14002564f:	add    dh,bh
   140025651:	add    eax,DWORD PTR [rax]
   140025653:	add    bh,bh
   140025655:	(bad)  
   140025656:	add    BYTE PTR [rax],al
   140025658:	inc    DWORD PTR [rdi]
   14002565a:	add    BYTE PTR [rax],al
   14002565c:	dec    DWORD PTR [rdi-0x30010000]
   140025662:	add    BYTE PTR [rax],al
   140025664:	(bad)  
   140025665:	add    al,cl
   140025667:	add    BYTE PTR [rax],al
   140025669:	add    BYTE PTR [rax],al
   14002566b:	add    BYTE PTR [rax+rax*1],al
   14002566e:	adc    al,0x0
   140025670:	adc    al,0x0
   140025672:	js     0x140025674
   140025674:	push   rsp
   140025675:	add    BYTE PTR [rax],al
   140025677:	add    BYTE PTR [rax],al
   140025679:	add    BYTE PTR [rbp+0x0],cl
   14002567c:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140025681:	add    BYTE PTR [rcx+0x0],al
   140025684:	rex.X add BYTE PTR [rax],spl
   140025687:	add    BYTE PTR [rax+0x53],dh
   14002568a:	(bad)  
   14002568b:	push   rdx
   14002568c:	add    BYTE PTR [rax],al
   14002568e:	add    BYTE PTR [rax],al
   140025690:	add    DWORD PTR [rax],eax
   140025692:	add    edx,DWORD PTR [rax+0x0]
   140025695:	add    BYTE PTR [rax],al
   140025697:	add    BYTE PTR [rax+rax*1],ch
   14002569a:	add    BYTE PTR [rax],spl
   14002569d:	add    BYTE PTR [rsi],cl
   14002569f:	add    BYTE PTR [rdx],al
   1400256a1:	add    bh,bh
   1400256a3:	inc    DWORD PTR [rax-0x1ccf5300]
   1400256a9:	xor    bl,dh
   1400256ab:	xor    BYTE PTR [rbx+0x2830eb30],bh
   1400256b1:	add    BYTE PTR [rsi],ah
   1400256b3:	add    BYTE PTR [rbx+0x0],al
   1400256b6:	sub    DWORD PTR [rax],eax
   1400256b8:	add    BYTE PTR [rax],al
   1400256ba:	add    BYTE PTR [rax],al
   1400256bc:	add    DWORD PTR [rax],eax
   1400256be:	add    BYTE PTR [rax+0x0],dl
   1400256c1:	add    BYTE PTR [rax],al
   1400256c3:	add    BYTE PTR [rax],al
   1400256c5:	add    BYTE PTR [rax],cl
   1400256c7:	add    BYTE PTR [rax+0x0],bh
   1400256ca:	or     BYTE PTR [rax],al
   1400256cc:	gs add bh,bh
   1400256cf:	inc    DWORD PTR [rdx+0x37537000]
   1400256d5:	push   rdx
   1400256d6:	sub    eax,0x4e
   1400256db:	add    BYTE PTR [rcx],al
   1400256dd:	add    BYTE PTR [rax],al
   1400256df:	push   rax
   1400256e0:	add    BYTE PTR [rax],al
   1400256e2:	add    BYTE PTR [rax],al
   1400256e4:	add    BYTE PTR [rax],al
   1400256e6:	adc    al,BYTE PTR [rax]
   1400256e8:	js     0x1400256ea
   1400256ea:	or     BYTE PTR [rax],al
   1400256ec:	data16 add bh,bh
   1400256ef:	inc    DWORD PTR [rdx-0x5ccf5a00]
   1400256f5:	xor    bl,dh
   1400256f7:	xor    cl,cl
   1400256f9:	xor    BYTE PTR [rsi-0x7acf91d0],ah
   1400256ff:	push   rcx
   140025700:	mov    ecx,0x5b
   140025705:	add    BYTE PTR [rax],al
   140025707:	add    BYTE PTR [rcx],al
   140025709:	add    BYTE PTR [rax],al
   14002570b:	push   rax
   14002570c:	add    BYTE PTR [rax],al
   14002570e:	add    BYTE PTR [rax],al
   140025710:	add    BYTE PTR [rax],al
   140025712:	sbb    al,0x0
   140025714:	js     0x140025716
   140025716:	or     BYTE PTR [rax],al
   140025718:	addr32 add bh,bh
   14002571b:	inc    DWORD PTR [rdx+0x2000]
   140025721:	add    BYTE PTR [rax],al
   140025723:	add    BYTE PTR [rdx+0xc800],al
   140025729:	add    BYTE PTR [rax],al
   14002572b:	add    BYTE PTR [rax+rax*1],al
   14002572e:	adc    al,0x0
   140025730:	adc    al,0x0
   140025732:	js     0x140025734
   140025734:	push   rsp
   140025735:	add    BYTE PTR [rax],al
   140025737:	add    BYTE PTR [rax],al
   140025739:	add    BYTE PTR [rbp+0x0],cl
   14002573c:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140025741:	add    BYTE PTR [rcx+0x0],al
   140025744:	rex.X add BYTE PTR [rax],spl
   140025747:	add    BYTE PTR [rax+0x0],dl
   14002574a:	jb     0x14002574c
   14002574c:	imul   eax,DWORD PTR [rax],0x74006e
   140025752:	add    BYTE PTR [rax],al
   140025754:	add    DWORD PTR [rax],eax
   140025756:	add    edx,DWORD PTR [rax+0x0]
   140025759:	add    BYTE PTR [rax],al
   14002575b:	add    BYTE PTR [rax+rax*1],ch
   14002575e:	add    BYTE PTR [rax],spl
   140025761:	add    BYTE PTR [rsi],cl
   140025763:	add    BYTE PTR [rdx],al
   140025765:	add    bh,bh
   140025767:	inc    DWORD PTR [rax+0x43002600]
   14002576d:	add    BYTE PTR [rcx+0x0],ah
   140025770:	outs   dx,BYTE PTR ds:[rsi]
   140025771:	add    BYTE PTR [rbx+0x0],ah
   140025774:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140025779:	add    BYTE PTR [rax],al
   14002577b:	add    BYTE PTR [rcx],al
   14002577d:	add    BYTE PTR [rax],al
   14002577f:	push   rax
   140025780:	add    BYTE PTR [rax],al
   140025782:	add    BYTE PTR [rax],al
   140025784:	add    BYTE PTR [rax],al
   140025786:	or     BYTE PTR [rax],al
   140025788:	js     0x14002578a
   14002578a:	or     BYTE PTR [rax],al
   14002578c:	gs add bh,bh
   14002578f:	inc    DWORD PTR [rdx+0x72005000]
   140025795:	add    BYTE PTR [rcx+0x0],ch
   140025798:	outs   dx,BYTE PTR ds:[rsi]
   140025799:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002579d:	add    BYTE PTR [rsi+0x0],ch
   1400257a0:	add    BYTE PTR [eax],al
   1400257a3:	add    BYTE PTR [rax],al
   1400257a5:	add    BYTE PTR [rax],al
   1400257a7:	add    BYTE PTR [rcx],al
   1400257a9:	add    BYTE PTR [rax],al
   1400257ab:	push   rax
   1400257ac:	add    BYTE PTR [rax],al
   1400257ae:	add    BYTE PTR [rax],al
   1400257b0:	add    BYTE PTR [rax],al
   1400257b2:	adc    al,BYTE PTR [rax]
   1400257b4:	js     0x1400257b6
   1400257b6:	or     BYTE PTR [rax],al
   1400257b8:	data16 add bh,bh
   1400257bb:	inc    DWORD PTR [rdx+0x69007700]
   1400257c1:	add    BYTE PTR [rsi+0x0],ch
   1400257c4:	add    BYTE PTR fs:[rdi+0x0],ch
   1400257c8:	ja     0x1400257ca
   1400257ca:	and    BYTE PTR [rax],al
   1400257cc:	movsxd eax,DWORD PTR [rax]
   1400257ce:	outs   dx,DWORD PTR ds:[rsi]
   1400257cf:	add    BYTE PTR [rsi+0x0],ch
   1400257d2:	je     0x1400257d4
   1400257d4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400257d8:	je     0x1400257da
   1400257da:	jae    0x1400257dc
   1400257dc:	add    BYTE PTR [rax],al
   1400257de:	add    BYTE PTR [rax],al
   1400257e0:	add    DWORD PTR [rax],eax
   1400257e2:	add    BYTE PTR [rax+0x0],dl
   1400257e5:	add    BYTE PTR [rax],al
   1400257e7:	add    BYTE PTR [rax],al
   1400257e9:	add    BYTE PTR [rax+rax*1],bl
   1400257ec:	js     0x1400257ee
   1400257ee:	or     BYTE PTR [rax],al
   1400257f0:	addr32 add bh,bh
   1400257f3:	inc    DWORD PTR [rdx+0x2000]
   1400257f9:	add    BYTE PTR [rax],al
   1400257fb:	add    al,al
   1400257fd:	add    al,cl
   1400257ff:	nop
   140025800:	add    BYTE PTR [rax],al
   140025802:	add    BYTE PTR [rax],al
   140025804:	add    DWORD PTR [rax],eax
   140025806:	add    BYTE PTR gs:[rip+0xfffffffff500e100],ch        # 0x13503390d
   14002580d:	add    BYTE PTR [rax],al
   14002580f:	add    BYTE PTR [rax],al
   140025811:	add    BYTE PTR [rbp+0x0],cl
   140025814:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140025819:	add    BYTE PTR [rcx+0x0],al
   14002581c:	rex.X add BYTE PTR [rbx+0x30],bpl
   140025820:	xor    BYTE PTR fs:[rax+rsi*1+0x66],al
   140025825:	xor    BYTE PTR [rax],al
   140025827:	add    BYTE PTR [rdx],cl
   140025829:	add    BYTE PTR [rip+0x20ff33ff],ch        # 0x161018c2e
   14002582f:	add    BYTE PTR [rax],dh
   140025831:	push   QWORD PTR [rax+rsi*1+0x30c330b7]
   140025838:	scas   eax,DWORD PTR es:[rdi]
   140025839:	xor    BYTE PTR [rax],al
   14002583b:	add    BYTE PTR [rsi],al
   14002583d:	add    BYTE PTR [rax],al
   14002583f:	push   rax
	...
   140025848:	loope  0x14002584a
   14002584a:	cmc    
   14002584b:	add    BYTE PTR [rbp+0x0],ah
   14002584e:	(bad)  
   14002584f:	inc    DWORD PTR [rdx+0x0]
   140025855:	add    BYTE PTR [rax+0x41],dl
   140025858:	rol    BYTE PTR [rax],0xc8
   14002585b:	nop
   14002585c:	add    BYTE PTR [rax],al
   14002585e:	add    BYTE PTR [rax],al
   140025860:	add    DWORD PTR [rax],eax
   140025862:	add    BYTE PTR gs:[rip+0xfffffffff500e100],ch        # 0x135033969
   140025869:	add    BYTE PTR [rax],al
   14002586b:	add    BYTE PTR [rax],al
   14002586d:	add    BYTE PTR [rcx+0x0],al
   140025870:	(bad)  
   140025871:	add    BYTE PTR [rdi+0x0],ch
   140025874:	jne    0x140025876
   140025876:	je     0x140025878
   140025878:	and    BYTE PTR [rax],al
   14002587a:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14002587e:	push   rsp
   14002587f:	add    BYTE PTR [rax+rax*1+0x41],cl
   140025883:	add    BYTE PTR [rdx+0x0],al
   140025886:	add    BYTE PTR [rax],al
   140025888:	or     BYTE PTR [rax],al
   14002588a:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14002588e:	and    BYTE PTR [rax],al
   140025890:	push   rbx
   140025891:	add    BYTE PTR [rcx+0x0],ah
   140025894:	outs   dx,BYTE PTR ds:[rsi]
   140025895:	add    BYTE PTR [rbx+0x0],dh
   140025898:	and    BYTE PTR [rax],al
   14002589a:	push   rbx
   14002589b:	add    BYTE PTR [rbp+0x0],ah
   14002589e:	jb     0x1400258a0
   1400258a0:	imul   eax,DWORD PTR [rax],0x66
   1400258a6:	add    BYTE PTR [rax],al
   1400258a8:	(bad)  
   1400258a9:	add    BYTE PTR [rax],al
   1400258ab:	push   rax
	...
   1400258b4:	loope  0x1400258b6
   1400258b6:	cmc    
   1400258b7:	add    BYTE PTR [rbp+0x0],ah
   1400258ba:	(bad)  
   1400258bb:	inc    DWORD PTR [rdx+0x0]
   1400258c1:	add    BYTE PTR [rax+0x41],dl
   1400258c4:	ret    0xc800
   1400258c7:	nop
   1400258c8:	add    BYTE PTR [rax],al
   1400258ca:	add    BYTE PTR [rax],al
   1400258cc:	add    al,0x0
   1400258ce:	(bad)  
   1400258cf:	add    BYTE PTR [rdx+0x0],bl
   1400258d2:	nop
   1400258d3:	add    DWORD PTR [rip+0x0],ebp        # 0x1400258d9
   1400258d9:	add    al,al
   1400258db:	xor    BYTE PTR [rax+rsi*1+0x30ed30a2],ah
   1400258e2:	mov    al,0x30
   1400258e4:	and    BYTE PTR [rax],al
   1400258e6:	mov    edi,0xc830a430
   1400258eb:	xor    bl,ch
   1400258ed:	xor    BYTE PTR [rax],al
   1400258ef:	add    BYTE PTR [rax],cl
   1400258f1:	add    BYTE PTR [rbp+0x0],cl
   1400258f4:	push   rbx
   1400258f5:	add    BYTE PTR [rax],ah
   1400258f7:	add    BYTE PTR [rbx+0x0],dl
   1400258fa:	(bad)  
   1400258fb:	add    BYTE PTR [rsi+0x0],ch
   1400258fe:	jae    0x140025900
   140025900:	and    BYTE PTR [rax],al
   140025902:	push   rbx
   140025903:	add    BYTE PTR [rbp+0x0],ah
   140025906:	jb     0x140025908
   140025908:	imul   eax,DWORD PTR [rax],0x66
   14002590e:	add    BYTE PTR [rax],al
   140025910:	add    DWORD PTR [rax],eax
   140025912:	add    dl,BYTE PTR [rax+0x0]
   140025915:	add    BYTE PTR [rax],al
   140025917:	add    BYTE PTR [rdi],ch
   140025919:	add    BYTE PTR [rax],cl
   14002591b:	add    al,ah
   14002591d:	add    BYTE PTR [rip+0xffffffffff006900],cl        # 0x13f02c223
   140025923:	inc    DWORD PTR [rdx-0x52cf3a00]
   140025929:	xor    BYTE PTR [rcx+0x30c830],bh
   14002592f:	add    BYTE PTR [rax],al
   140025931:	add    BYTE PTR [rax],al
   140025933:	add    BYTE PTR [rax],al
   140025935:	add    BYTE PTR [rbx],al
   140025937:	push   rax
   140025938:	add    BYTE PTR [rax],al
   14002593a:	add    BYTE PTR [rax],al
   14002593c:	add    BYTE PTR [rcx],bl
   14002593f:	add    BYTE PTR [rax],ch
   140025941:	add    BYTE PTR [rsi],cl
   140025943:	add    BYTE PTR [rbp+0x0],ah
   140025946:	(bad)  
   140025947:	inc    DWORD PTR [rax-0x3ccf2900]
   14002594d:	xor    BYTE PTR [rdi+0x3130e530],dh
   140025953:	add    BYTE PTR [rax],al
   140025955:	add    BYTE PTR [rax],al
   140025957:	add    BYTE PTR [rax],al
   140025959:	add    BYTE PTR [rcx],al
   14002595b:	push   rax
   14002595c:	add    BYTE PTR [rax],al
   14002595e:	add    BYTE PTR [rax],al
   140025960:	js     0x140025962
   140025962:	sbb    DWORD PTR [rax],eax
   140025964:	sub    BYTE PTR [rax],al
   140025966:	(bad)  
   140025967:	add    BYTE PTR [rsi+0x0],ah
   14002596a:	(bad)  
   14002596b:	inc    DWORD PTR [rax-0x3ccf2900]
   140025971:	xor    BYTE PTR [rdi+0x3230e530],dh
   140025977:	add    BYTE PTR [rax],al
   140025979:	add    BYTE PTR [rax],al
   14002597b:	add    BYTE PTR [rax],al
   14002597d:	add    BYTE PTR [rcx],al
   14002597f:	push   rax
   140025980:	add    BYTE PTR [rax],al
   140025982:	add    BYTE PTR [rax],al
   140025984:	mov    al,0x0
   140025986:	sbb    DWORD PTR [rax],eax
   140025988:	sub    BYTE PTR [rax],al
   14002598a:	(bad)  
   14002598b:	add    BYTE PTR [rdi+0x0],ah
   14002598e:	(bad)  
   14002598f:	inc    DWORD PTR [rax-0x3ccf2900]
   140025995:	xor    BYTE PTR [rdi+0x3330e530],dh
   14002599b:	add    BYTE PTR [rax],al
   14002599d:	add    BYTE PTR [rax],al
   14002599f:	add    dl,al
   1400259a1:	add    al,cl
   1400259a3:	nop
   1400259a4:	add    BYTE PTR [rax],al
   1400259a6:	add    BYTE PTR [rax],al
   1400259a8:	add    al,0x0
   1400259aa:	(bad)  
   1400259ab:	add    BYTE PTR [rdx+0x0],bl
   1400259ae:	nop
   1400259af:	add    DWORD PTR [rip+0x0],ebp        # 0x1400259b5
   1400259b5:	add    BYTE PTR [rax+rax*1+0x69],al
   1400259b9:	add    BYTE PTR [rcx+0x0],ah
   1400259bc:	ins    BYTE PTR es:[rdi],dx
   1400259bd:	add    BYTE PTR [rdi+0x0],ch
   1400259c0:	add    BYTE PTR [eax],ah
   1400259c3:	add    BYTE PTR [rax+rax*1+0x69],dl
   1400259c7:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400259cb:	add    BYTE PTR [rbp+0x0],ah
   1400259ce:	add    BYTE PTR [rax],al
   1400259d0:	or     BYTE PTR [rax],al
   1400259d2:	rex.WRB add BYTE PTR [r11+0x0],r10b
   1400259d6:	and    BYTE PTR [rax],al
   1400259d8:	push   rbx
   1400259d9:	add    BYTE PTR [rcx+0x0],ah
   1400259dc:	outs   dx,BYTE PTR ds:[rsi]
   1400259dd:	add    BYTE PTR [rbx+0x0],dh
   1400259e0:	and    BYTE PTR [rax],al
   1400259e2:	push   rbx
   1400259e3:	add    BYTE PTR [rbp+0x0],ah
   1400259e6:	jb     0x1400259e8
   1400259e8:	imul   eax,DWORD PTR [rax],0x66
   1400259ee:	add    BYTE PTR [rax],al
   1400259f0:	add    DWORD PTR [rax],eax
   1400259f2:	add    dl,BYTE PTR [rax+0x0]
   1400259f5:	add    BYTE PTR [rax],al
   1400259f7:	add    BYTE PTR [rdi],ch
   1400259f9:	add    BYTE PTR [rax],cl
   1400259fb:	add    al,ah
   1400259fd:	add    BYTE PTR [rip+0xffffffffff006900],cl        # 0x13f02c303
   140025a03:	inc    DWORD PTR [rdx+0x65005400]
   140025a09:	add    BYTE PTR [rax+0x0],bh
   140025a0c:	je     0x140025a0e
	...
   140025a16:	add    edx,DWORD PTR [rax+0x0]
   140025a19:	add    BYTE PTR [rax],al
   140025a1b:	add    BYTE PTR [rax+0x0],al
   140025a1e:	sbb    DWORD PTR [rax],eax
   140025a20:	sub    BYTE PTR [rax],al
   140025a22:	(bad)  
   140025a23:	add    BYTE PTR [rbp+0x0],ah
   140025a26:	(bad)  
   140025a27:	inc    DWORD PTR [rax+0x75005000]
   140025a2d:	add    BYTE PTR [rbx+0x0],dh
   140025a30:	push   0x3100
   140025a35:	add    BYTE PTR [rax],al
   140025a37:	add    BYTE PTR [rax],al
   140025a39:	add    BYTE PTR [rcx],al
   140025a3b:	push   rax
   140025a3c:	add    BYTE PTR [rax],al
   140025a3e:	add    BYTE PTR [rax],al
   140025a40:	js     0x140025a42
   140025a42:	sbb    DWORD PTR [rax],eax
   140025a44:	sub    BYTE PTR [rax],al
   140025a46:	(bad)  
   140025a47:	add    BYTE PTR [rsi+0x0],ah
   140025a4a:	(bad)  
   140025a4b:	inc    DWORD PTR [rax+0x75005000]
   140025a51:	add    BYTE PTR [rbx+0x0],dh
   140025a54:	push   0x3200
   140025a59:	add    BYTE PTR [rax],al
   140025a5b:	add    BYTE PTR [rax],al
   140025a5d:	add    BYTE PTR [rcx],al
   140025a5f:	push   rax
   140025a60:	add    BYTE PTR [rax],al
   140025a62:	add    BYTE PTR [rax],al
   140025a64:	mov    al,0x0
   140025a66:	sbb    DWORD PTR [rax],eax
   140025a68:	sub    BYTE PTR [rax],al
   140025a6a:	(bad)  
   140025a6b:	add    BYTE PTR [rdi+0x0],ah
   140025a6e:	(bad)  
   140025a6f:	inc    DWORD PTR [rax+0x75005000]
   140025a75:	add    BYTE PTR [rbx+0x0],dh
   140025a78:	push   0x3300
   140025a7d:	add    BYTE PTR [rax],al
   140025a7f:	add    BYTE PTR [rax],al
   140025a81:	add    al,al
   140025a83:	add    BYTE PTR [rax],0x0
   140025a86:	add    BYTE PTR [rax],al
   140025a88:	add    eax,DWORD PTR [rax]
   140025a8a:	or     eax,DWORD PTR [rax]
   140025a8c:	adc    eax,DWORD PTR [rax]
   140025a8e:	ins    BYTE PTR es:[rdi],dx
   140025a8f:	add    BYTE PTR [rsi+0x0],dl
   140025a95:	add    BYTE PTR [rsi-0xccf5cd0],ah
   140025a9b:	xor    cl,cl
   140025a9d:	xor    BYTE PTR [rsi+0x78306e30],ah
   140025aa3:	nop
   140025aa4:	sahf   
   140025aa5:	(bad)  
   140025aa6:	add    BYTE PTR [rax],al
   140025aa8:	add    eax,DWORD PTR [rax]
   140025aaa:	movabs eax,ds:0x8000a0000000050
   140025ab3:	add    BYTE PTR [rdi+0x0],dl
   140025ab6:	jno    0x140025ab8
   140025ab8:	gs add bh,bh
   140025abb:	inc    DWORD PTR [rbx+0x0]
   140025ac1:	add    BYTE PTR [rax],al
   140025ac3:	add    BYTE PTR [rcx],al
   140025ac5:	add    BYTE PTR [rcx],al
   140025ac7:	push   rax
   140025ac8:	add    BYTE PTR [rax],al
   140025aca:	add    BYTE PTR [rax],al
   140025acc:	or     DWORD PTR [rax],eax
   140025ace:	(bad)  
   140025acf:	add    BYTE PTR [rax],ch
   140025ad1:	add    BYTE PTR [rsi],cl
   140025ad3:	add    BYTE PTR [rcx],al
   140025ad5:	add    bh,bh
   140025ad7:	inc    DWORD PTR [rax+0x4b004f00]
	...
   140025ae5:	add    BYTE PTR [rcx],al
   140025ae7:	push   rax
   140025ae8:	add    BYTE PTR [rax],al
   140025aea:	add    BYTE PTR [rax],al
   140025aec:	cmp    eax,DWORD PTR [rax]
   140025aee:	(bad)  
   140025aef:	add    BYTE PTR [rax],ch
   140025af1:	add    BYTE PTR [rsi],cl
   140025af3:	add    BYTE PTR [rdx],al
   140025af5:	add    bh,bh
   140025af7:	inc    DWORD PTR [rax-0x1ccf5300]
   140025afd:	xor    bl,dh
   140025aff:	xor    BYTE PTR [rbx+0x30eb30],bh
   140025b05:	add    BYTE PTR [rax],al
   140025b07:	add    BYTE PTR [rax],al
   140025b09:	add    al,al
   140025b0b:	add    BYTE PTR [rax],0x0
   140025b0e:	add    BYTE PTR [rax],al
   140025b10:	add    eax,DWORD PTR [rax]
   140025b12:	or     eax,DWORD PTR [rax]
   140025b14:	adc    eax,DWORD PTR [rax]
   140025b16:	ins    BYTE PTR es:[rdi],dx
   140025b17:	add    BYTE PTR [rsi+0x0],dl
   140025b1d:	add    BYTE PTR [rbx+0x0],dl
   140025b20:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140025b25:	add    BYTE PTR [rbx+0x0],ah
   140025b28:	je     0x140025b2a
   140025b2a:	and    BYTE PTR [rax],al
   140025b2c:	push   rdi
   140025b2d:	add    BYTE PTR [rcx+0x0],ch
   140025b30:	outs   dx,BYTE PTR ds:[rsi]
   140025b31:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140025b35:	add    BYTE PTR [rdi+0x0],dh
   140025b38:	add    BYTE PTR [rax],al
   140025b3a:	add    BYTE PTR [rax],al
   140025b3c:	add    eax,DWORD PTR [rax]
   140025b3e:	movabs eax,ds:0x8000a0000000050
   140025b47:	add    BYTE PTR [rdi+0x0],dl
   140025b4a:	jno    0x140025b4c
   140025b4c:	gs add bh,bh
   140025b4f:	inc    DWORD PTR [rbx+0x0]
   140025b55:	add    BYTE PTR [rax],al
   140025b57:	add    BYTE PTR [rcx],al
   140025b59:	add    BYTE PTR [rcx],al
   140025b5b:	push   rax
   140025b5c:	add    BYTE PTR [rax],al
   140025b5e:	add    BYTE PTR [rax],al
   140025b60:	or     DWORD PTR [rax],eax
   140025b62:	(bad)  
   140025b63:	add    BYTE PTR [rax],ch
   140025b65:	add    BYTE PTR [rsi],cl
   140025b67:	add    BYTE PTR [rcx],al
   140025b69:	add    bh,bh
   140025b6b:	inc    DWORD PTR [rax+0x4b004f00]
	...
   140025b79:	add    BYTE PTR [rcx],al
   140025b7b:	push   rax
   140025b7c:	add    BYTE PTR [rax],al
   140025b7e:	add    BYTE PTR [rax],al
   140025b80:	cmp    eax,DWORD PTR [rax]
   140025b82:	(bad)  
   140025b83:	add    BYTE PTR [rax],ch
   140025b85:	add    BYTE PTR [rsi],cl
   140025b87:	add    BYTE PTR [rdx],al
   140025b89:	add    bh,bh
   140025b8b:	inc    DWORD PTR [rax+0x61004300]
   140025b91:	add    BYTE PTR [rsi+0x0],ch
   140025b94:	movsxd eax,DWORD PTR [rax]
   140025b96:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140025b9b:	add    BYTE PTR [rax],al
   140025b9d:	add    BYTE PTR [rax+0x41],dl
   140025ba0:	add    BYTE PTR [rax],0xc8
   140025ba3:	nop
   140025ba4:	add    BYTE PTR [rax],al
   140025ba6:	add    BYTE PTR [rax],al
   140025ba8:	add    eax,0x19000e00
   140025bad:	add    BYTE PTR [rcx+0x6000],ch
   140025bb3:	add    BYTE PTR [rax],al
   140025bb5:	add    BYTE PTR [rax+0x5c898f65],dh
   140025bbb:	rex.WRXB adc BYTE PTR [r10+0x0],r12b
   140025bbf:	add    BYTE PTR [rax],al
   140025bc1:	add    BYTE PTR [rdx],al
   140025bc3:	push   rax
   140025bc4:	add    BYTE PTR [rax],al
   140025bc6:	add    BYTE PTR [rax],al
   140025bc8:	add    eax,DWORD PTR [rax]
   140025bca:	add    eax,0xb006e00
   140025bcf:	add    bh,bh
   140025bd1:	(bad)  
   140025bd2:	(bad)  
   140025bd3:	inc    DWORD PTR [rdx+0x104f5c00]
   140025bd9:	(bad)  
   140025bda:	pop    rcx
   140025bdb:	xor    BYTE PTR [rbx-0x29cf55d0],cl
   140025be1:	xor    BYTE PTR [rax-0x50cf58d0],bh
   140025be7:	xor    al,cl
   140025be9:	xor    BYTE PTR [rsi+0x30],ch
   140025bec:	gs push rcx
   140025bee:	fwait
   140025bef:	push   rdx
   140025bf0:	sub    BYTE PTR [rax],al
   140025bf2:	add    BYTE PTR es:[rbp+0x0],al
   140025bf6:	sub    DWORD PTR [rax],eax
   140025bf8:	cmp    al,BYTE PTR [rax]
   140025bfa:	add    BYTE PTR [rax],al
   140025bfc:	add    BYTE PTR [rax],al
   140025bfe:	add    BYTE PTR [rax],al
   140025c00:	add    eax,DWORD PTR [rax]
   140025c02:	movabs ds:0xf00030000000050,eax
   140025c0b:	add    BYTE PTR [rsi+0x0],ch
   140025c0e:	rex.WRB add BYTE PTR [r8+0x0],r13b
   140025c12:	(bad)  
   140025c13:	inc    DWORD PTR [rbx+0x0]
   140025c19:	add    BYTE PTR [rax],al
   140025c1b:	add    BYTE PTR [rcx],al
   140025c1d:	add    BYTE PTR [rbx],al
   140025c1f:	push   rax
   140025c20:	add    BYTE PTR [rax],al
   140025c22:	add    BYTE PTR [rax],al
   140025c24:	jnp    0x140025c26
   140025c26:	(bad)  
   140025c27:	add    BYTE PTR [rax],ch
   140025c29:	add    BYTE PTR [rsi],cl
   140025c2b:	add    BYTE PTR [rcx],al
   140025c2d:	add    bh,bh
   140025c2f:	inc    DWORD PTR [rax+0x4b004f00]
	...
   140025c3d:	add    BYTE PTR [rcx],al
   140025c3f:	push   rax
   140025c40:	add    BYTE PTR [rax],al
   140025c42:	add    BYTE PTR [rax],al
   140025c44:	jnp    0x140025c46
   140025c46:	(bad)  
   140025c47:	add    BYTE PTR [rax],ch
   140025c49:	add    BYTE PTR [rsi],cl
   140025c4b:	add    BYTE PTR [rdx],al
   140025c4d:	add    bh,bh
   140025c4f:	inc    DWORD PTR [rax-0x1ccf5300]
   140025c55:	xor    bl,dh
   140025c57:	xor    BYTE PTR [rbx+0x30eb30],bh
   140025c5d:	add    BYTE PTR [rax],al
   140025c5f:	add    BYTE PTR [rax],al
   140025c61:	add    BYTE PTR [rcx],al
   140025c63:	push   rax
   140025c64:	add    BYTE PTR [rax],al
   140025c66:	add    BYTE PTR [rax],al
   140025c68:	jnp    0x140025c6a
   140025c6a:	sub    BYTE PTR [rax],al
   140025c6c:	sub    BYTE PTR [rax],al
   140025c6e:	(bad)  
   140025c6f:	add    BYTE PTR [rdi+0x0],ah
   140025c72:	(bad)  
   140025c73:	inc    DWORD PTR [rax-0x14cf2800]
   140025c79:	xor    bh,dl
   140025c7b:	xor    BYTE PTR [rax],ch
   140025c7d:	add    BYTE PTR [rsi],ah
   140025c7f:	add    BYTE PTR [rax+0x0],cl
   140025c82:	sub    DWORD PTR [rax],eax
   140025c84:	add    BYTE PTR [rax],al
   140025c86:	add    BYTE PTR [rax],al
   140025c88:	add    BYTE PTR [rax],0xc8
   140025c8b:	nop
   140025c8c:	add    BYTE PTR [rax],al
   140025c8e:	add    BYTE PTR [rax],al
   140025c90:	add    eax,0x19000e00
   140025c95:	add    BYTE PTR [rcx+0x6000],ch
   140025c9b:	add    BYTE PTR [rax],al
   140025c9d:	add    BYTE PTR [rsi+0x0],cl
   140025ca0:	add    BYTE PTR gs:[rdi+0x0],dh
   140025ca4:	add    BYTE PTR [rax],al
   140025ca6:	add    BYTE PTR [rax],al
   140025ca8:	add    BYTE PTR [rax],al
   140025caa:	add    dl,BYTE PTR [rax+0x0]
   140025cad:	add    BYTE PTR [rax],al
   140025caf:	add    BYTE PTR [rbx],al
   140025cb1:	add    BYTE PTR [rip+0xb006e00],al        # 0x14b02cab7
   140025cb7:	add    bh,bh
   140025cb9:	(bad)  
   140025cba:	(bad)  
   140025cbb:	inc    DWORD PTR [rdx+0x45002600]
   140025cc1:	add    BYTE PTR [rsi+0x0],ch
   140025cc4:	je     0x140025cc6
   140025cc6:	add    BYTE PTR gs:[rdx+0x0],dh
   140025cca:	and    BYTE PTR [rax],al
   140025ccc:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   140025cd0:	push   0x0
   140025cd2:	add    BYTE PTR gs:[rbx+0x0],ah
   140025cd6:	je     0x140025cd8
   140025cd8:	and    BYTE PTR [rax],al
   140025cda:	je     0x140025cdc
   140025cdc:	outs   dx,DWORD PTR ds:[rsi]
   140025cdd:	add    BYTE PTR [rax],ah
   140025cdf:	add    BYTE PTR [rbx+0x0],al
   140025ce2:	jb     0x140025ce4
   140025ce4:	add    BYTE PTR gs:[rcx+0x0],ah
   140025ce8:	je     0x140025cea
   140025cea:	add    BYTE PTR gs:[rdx],bh
   140025ced:	add    BYTE PTR [rax],al
   140025cef:	add    BYTE PTR [rax],al
   140025cf1:	add    BYTE PTR [rax],al
   140025cf3:	add    BYTE PTR [rbx],al
   140025cf5:	add    BYTE PTR [rbx+0x50],ah
   140025cfb:	add    BYTE PTR [rbx],al
   140025cfd:	add    BYTE PTR [rdi],cl
   140025cff:	add    BYTE PTR [rsi+0x0],ch
   140025d02:	rex.WRB add BYTE PTR [r8+0x0],r13b
   140025d06:	(bad)  
   140025d07:	inc    DWORD PTR [rbx+0x0]
   140025d0d:	add    BYTE PTR [rax],al
   140025d0f:	add    BYTE PTR [rcx],al
   140025d11:	add    BYTE PTR [rbx],al
   140025d13:	push   rax
   140025d14:	add    BYTE PTR [rax],al
   140025d16:	add    BYTE PTR [rax],al
   140025d18:	jnp    0x140025d1a
   140025d1a:	(bad)  
   140025d1b:	add    BYTE PTR [rax],ch
   140025d1d:	add    BYTE PTR [rsi],cl
   140025d1f:	add    BYTE PTR [rcx],al
   140025d21:	add    bh,bh
   140025d23:	inc    DWORD PTR [rax+0x4b004f00]
	...
   140025d31:	add    BYTE PTR [rcx],al
   140025d33:	push   rax
   140025d34:	add    BYTE PTR [rax],al
   140025d36:	add    BYTE PTR [rax],al
   140025d38:	jnp    0x140025d3a
   140025d3a:	(bad)  
   140025d3b:	add    BYTE PTR [rax],ch
   140025d3d:	add    BYTE PTR [rsi],cl
   140025d3f:	add    BYTE PTR [rdx],al
   140025d41:	add    bh,bh
   140025d43:	inc    DWORD PTR [rax+0x61004300]
   140025d49:	add    BYTE PTR [rsi+0x0],ch
   140025d4c:	movsxd eax,DWORD PTR [rax]
   140025d4e:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140025d53:	add    BYTE PTR [rax],al
   140025d55:	add    BYTE PTR [rax],al
   140025d57:	add    BYTE PTR [rax],al
   140025d59:	add    BYTE PTR [rcx],al
   140025d5b:	push   rax
   140025d5c:	add    BYTE PTR [rax],al
   140025d5e:	add    BYTE PTR [rax],al
   140025d60:	jnp    0x140025d62
   140025d62:	sub    BYTE PTR [rax],al
   140025d64:	sub    BYTE PTR [rax],al
   140025d66:	(bad)  
   140025d67:	add    BYTE PTR [rdi+0x0],ah
   140025d6a:	(bad)  
   140025d6b:	inc    DWORD PTR [rax+0x48002600]
   140025d71:	add    BYTE PTR [rbp+0x0],ah
   140025d74:	ins    BYTE PTR es:[rdi],dx
   140025d75:	add    BYTE PTR [rax+0x0],dh
   140025d78:	add    BYTE PTR [rax],al
   140025d7a:	add    BYTE PTR [rax],al
   140025d7c:	(bad)  
   140025d7d:	add    al,cl
   140025d7f:	nop
   140025d80:	add    BYTE PTR [rax],al
   140025d82:	add    BYTE PTR [rax],al
   140025d84:	(bad)  
   140025d85:	add    BYTE PTR [rsi],al
   140025d87:	add    BYTE PTR [rdx],dl
   140025d89:	add    BYTE PTR [rbx+0x4600],bh
   140025d8f:	add    BYTE PTR [rax],al
   140025d91:	add    BYTE PTR [rcx-0x15cf50d0],bh
   140025d97:	xor    bh,dl
   140025d99:	xor    al,cl
   140025d9b:	xor    BYTE PTR [rsi+0x30],ch
   140025d9e:	lahf   
   140025d9f:	pop    rbx
   140025da0:	rex.WR mov BYTE PTR [rax],r8b
   140025da3:	add    BYTE PTR [rax],cl
   140025da5:	add    BYTE PTR [rbp+0x0],cl
   140025da8:	push   rbx
   140025da9:	add    BYTE PTR [rax],ah
   140025dab:	add    BYTE PTR [rbx+0x0],dl
   140025dae:	(bad)  
   140025daf:	add    BYTE PTR [rsi+0x0],ch
   140025db2:	jae    0x140025db4
   140025db4:	and    BYTE PTR [rax],al
   140025db6:	push   rbx
   140025db7:	add    BYTE PTR [rbp+0x0],ah
   140025dba:	jb     0x140025dbc
   140025dbc:	imul   eax,DWORD PTR [rax],0x66
   140025dc2:	add    BYTE PTR [rax],al
   140025dc4:	add    eax,DWORD PTR [rax]
   140025dc6:	add    BYTE PTR [rax+0x0],dl
   140025dc9:	add    BYTE PTR [rax],al
   140025dcb:	add    BYTE PTR [rax],cl
   140025dcd:	add    BYTE PTR [rax],cl
   140025dcf:	add    BYTE PTR [rax],dl
   140025dd1:	add    BYTE PTR [rax],dl
   140025dd3:	add    BYTE PTR [rbx+0x0],ch
   140025dd6:	(bad)  
   140025dd7:	inc    DWORD PTR [rdx+0x6c006d00]
   140025ddd:	add    BYTE PTR [rcx+0x0],ch
   140025de0:	movsxd eax,DWORD PTR [rax]
   140025de2:	outs   dx,DWORD PTR ds:[rsi]
   140025de3:	add    BYTE PTR [rsi+0x0],ch
	...
   140025dee:	add    dl,BYTE PTR [rax+0x0]
   140025df1:	add    BYTE PTR [rax],al
   140025df3:	add    BYTE PTR [rip+0xffffffff96000c00],ch        # 0xd60269f9
   140025df9:	add    BYTE PTR [rbx],cl
   140025dfb:	add    BYTE PTR [rdx+0x0],ch
   140025dfe:	(bad)  
   140025dff:	inc    DWORD PTR [rdx+0x4c5b9f00]
   140025e05:	mov    BYTE PTR [rdi+0x30],dl
   140025e08:	pop    rdi
   140025e09:	xor    BYTE PTR [rax+rsi*1-0x47],al
   140025e0d:	xor    bh,dl
   140025e0f:	xor    dl,ch
   140025e11:	xor    bh,dl
   140025e13:	xor    al,cl
   140025e15:	xor    BYTE PTR [rip+0x65309254],cl        # 0x1a532f06f
   140025e1b:	push   rcx
   140025e1c:	fwait
   140025e1d:	push   rdx
	...
   140025e26:	add    dl,BYTE PTR [rax+0x0]
   140025e29:	add    BYTE PTR [rax],al
   140025e2b:	add    BYTE PTR [rax],cl
   140025e2d:	add    BYTE PTR [rax+rax*1],bl
   140025e30:	(bad)  
   140025e31:	add    BYTE PTR [rbx],cl
   140025e33:	add    BYTE PTR [rcx+0x0],ch
   140025e36:	(bad)  
   140025e37:	inc    DWORD PTR [rdx+0x4c5b9f00]
   140025e3d:	mov    BYTE PTR [rax],ch
   140025e3f:	add    BYTE PTR [rsi],ah
   140025e41:	add    BYTE PTR [rdx+0x0],dl
   140025e44:	sub    DWORD PTR [rax],eax
   140025e46:	cmp    al,BYTE PTR [rax]
   140025e48:	add    BYTE PTR [rax],al
   140025e4a:	add    BYTE PTR [rax],al
   140025e4c:	add    BYTE PTR [rax],0x83
   140025e4f:	push   rax
   140025e50:	add    BYTE PTR [rax],al
   140025e52:	add    BYTE PTR [rax],al
   140025e54:	sub    eax,0x86001900
   140025e59:	add    BYTE PTR [rax+rax*1],cl
   140025e5c:	gs add bh,bh
   140025e5f:	inc    DWORD PTR [rcx+0x0]
   140025e65:	add    BYTE PTR [rax],al
   140025e67:	add    BYTE PTR [rcx],al
   140025e69:	add    BYTE PTR [rbx],al
   140025e6b:	push   rax
   140025e6c:	add    BYTE PTR [rax],al
   140025e6e:	add    BYTE PTR [rax],al
   140025e70:	cmp    eax,DWORD PTR [rax]
   140025e72:	xor    BYTE PTR [rax],al
   140025e74:	add    BYTE PTR es:[rax+rax*1],cl
   140025e78:	add    DWORD PTR [rax],eax
   140025e7a:	(bad)  
   140025e7b:	inc    DWORD PTR [rax+0x4b004f00]
	...
   140025e89:	add    BYTE PTR [rcx],al
   140025e8b:	push   rax
   140025e8c:	add    BYTE PTR [rax],al
   140025e8e:	add    BYTE PTR [rax],al
   140025e90:	add    BYTE PTR fs:[rax],dh
   140025e93:	add    BYTE PTR [rsi],ah
   140025e95:	add    BYTE PTR [rax+rax*1],cl
   140025e98:	add    al,BYTE PTR [rax]
   140025e9a:	(bad)  
   140025e9b:	inc    DWORD PTR [rax-0x1ccf5300]
   140025ea1:	xor    bl,dh
   140025ea3:	xor    BYTE PTR [rbx+0x30eb30],bh
   140025ea9:	add    BYTE PTR [rax],al
   140025eab:	add    BYTE PTR [rax],al
   140025ead:	add    BYTE PTR [rcx],al
   140025eaf:	push   rax
   140025eb0:	add    BYTE PTR [rax],al
   140025eb2:	add    BYTE PTR [rax],al
   140025eb4:	lea    eax,[rax]
   140025eb6:	xor    BYTE PTR [rax],al
   140025eb8:	add    BYTE PTR es:[rax+rax*1],cl
   140025ebc:	data16 add bh,bh
   140025ebf:	inc    DWORD PTR [rax+0x6753c200]
   140025ec5:	jno    0x140025eef
   140025ec7:	add    BYTE PTR [rsi],ah
   140025ec9:	add    BYTE PTR [rdx+0x0],al
   140025ecc:	sub    DWORD PTR [rax],eax
   140025ece:	add    BYTE PTR cs:[rsi],ch
   140025ed1:	add    BYTE PTR [rsi],ch
   140025ed3:	add    BYTE PTR [rax],al
   140025ed5:	add    BYTE PTR [rax],al
   140025ed7:	add    BYTE PTR [rax+rax*1+0x90c8],al
   140025ede:	add    BYTE PTR [rax],al
   140025ee0:	(bad)  
   140025ee1:	add    BYTE PTR [rsi],al
   140025ee3:	add    BYTE PTR [rdx],dl
   140025ee5:	add    BYTE PTR [rax+rax*1+0x46],ch
   140025eec:	add    BYTE PTR [rax],al
   140025eee:	push   rdx
   140025eef:	add    BYTE PTR [rbp+0x0],dh
   140025ef2:	outs   dx,BYTE PTR ds:[rsi]
   140025ef3:	add    BYTE PTR [rax],ah
   140025ef5:	add    BYTE PTR [rbx+0x0],dl
   140025ef8:	movsxd eax,DWORD PTR [rax]
   140025efa:	jb     0x140025efc
   140025efc:	imul   eax,DWORD PTR [rax],0x740070
   140025f02:	add    BYTE PTR [rax],al
   140025f04:	add    eax,DWORD PTR [rax]
   140025f06:	add    BYTE PTR [rax+0x0],dl
   140025f09:	add    BYTE PTR [rax],al
   140025f0b:	add    BYTE PTR [rax],cl
   140025f0d:	add    BYTE PTR [rax],cl
   140025f0f:	add    BYTE PTR [rax],dl
   140025f11:	add    BYTE PTR [rax],dl
   140025f13:	add    BYTE PTR [rbx+0x0],ch
   140025f16:	(bad)  
   140025f17:	inc    DWORD PTR [rdx+0x6c006d00]
   140025f1d:	add    BYTE PTR [rcx+0x0],ch
   140025f20:	movsxd eax,DWORD PTR [rax]
   140025f22:	outs   dx,DWORD PTR ds:[rsi]
   140025f23:	add    BYTE PTR [rsi+0x0],ch
	...
   140025f2e:	add    dl,BYTE PTR [rax+0x0]
   140025f31:	add    BYTE PTR [rax],al
   140025f33:	add    BYTE PTR [rsi],bl
   140025f35:	add    BYTE PTR [rax+rax*1],cl
   140025f38:	xchg   esi,eax
   140025f39:	add    BYTE PTR [rbx],cl
   140025f3b:	add    BYTE PTR [rdx+0x0],ch
   140025f3e:	(bad)  
   140025f3f:	inc    DWORD PTR [rdx+0x79005400]
   140025f45:	add    BYTE PTR [rax+0x0],dh
   140025f48:	add    BYTE PTR gs:[rax],ah
   140025f4b:	add    BYTE PTR [rax+rax*1+0x68],dh
   140025f4f:	add    BYTE PTR [rbp+0x0],ah
   140025f52:	and    BYTE PTR [rax],al
   140025f54:	outs   dx,BYTE PTR ds:[rsi]
   140025f55:	add    BYTE PTR [rcx+0x0],ah
   140025f58:	ins    DWORD PTR es:[rdi],dx
   140025f59:	add    BYTE PTR [rbp+0x0],ah
   140025f5c:	and    BYTE PTR [rax],al
   140025f5e:	outs   dx,DWORD PTR ds:[rsi]
   140025f5f:	add    BYTE PTR [rsi+0x0],ah
   140025f62:	and    BYTE PTR [rax],al
   140025f64:	je     0x140025f66
   140025f66:	push   0x20006500
   140025f6b:	add    BYTE PTR [rbx+0x0],dh
   140025f6e:	movsxd eax,DWORD PTR [rax]
   140025f70:	jb     0x140025f72
   140025f72:	imul   eax,DWORD PTR [rax],0x740070
   140025f78:	and    BYTE PTR [rax],al
   140025f7a:	jns    0x140025f7c
   140025f7c:	outs   dx,DWORD PTR ds:[rsi]
   140025f7d:	add    BYTE PTR [rbp+0x0],dh
   140025f80:	and    BYTE PTR [rax],al
   140025f82:	ja     0x140025f84
   140025f84:	(bad)  
   140025f85:	add    BYTE PTR [rsi+0x0],ch
   140025f88:	je     0x140025f8a
   140025f8a:	and    BYTE PTR [rax],al
   140025f8c:	je     0x140025f8e
   140025f8e:	outs   dx,DWORD PTR ds:[rsi]
   140025f8f:	add    BYTE PTR [rax],ah
   140025f91:	add    BYTE PTR [rdx+0x0],dh
   140025f94:	jne    0x140025f96
   140025f96:	outs   dx,BYTE PTR ds:[rsi]
   140025f97:	add    BYTE PTR [rsi],ch
	...
   140025fa1:	add    BYTE PTR [rdx],al
   140025fa3:	push   rax
   140025fa4:	add    BYTE PTR [rax],al
   140025fa6:	add    BYTE PTR [rax],al
   140025fa8:	or     BYTE PTR [rax],al
   140025faa:	sbb    al,0x0
   140025fac:	adc    BYTE PTR [rax],al
   140025fae:	or     eax,DWORD PTR [rax]
   140025fb0:	imul   eax,DWORD PTR [rax],0x82ffff
   140025fb6:	add    BYTE PTR es:[rdx+0x0],dl
   140025fba:	jne    0x140025fbc
   140025fbc:	outs   dx,BYTE PTR ds:[rsi]
   140025fbd:	add    BYTE PTR [rdx],bh
   140025fbf:	add    BYTE PTR [rax],al
   140025fc1:	add    BYTE PTR [rax],al
   140025fc3:	add    BYTE PTR [rax+0x508300],al
   140025fc9:	add    BYTE PTR [rax],al
   140025fcb:	add    BYTE PTR [rsi],bl
   140025fcd:	add    BYTE PTR [rcx],bl
   140025fcf:	add    BYTE PTR [rsi+0x65000c00],al
   140025fd5:	add    bh,bh
   140025fd7:	inc    DWORD PTR [rcx+0x0]
   140025fdd:	add    BYTE PTR [rax],al
   140025fdf:	add    BYTE PTR [rcx],al
   140025fe1:	add    BYTE PTR [rbx],al
   140025fe3:	push   rax
   140025fe4:	add    BYTE PTR [rax],al
   140025fe6:	add    BYTE PTR [rax],al
   140025fe8:	sub    al,0x0
   140025fea:	xor    BYTE PTR [rax],al
   140025fec:	add    BYTE PTR es:[rax+rax*1],cl
   140025ff0:	add    DWORD PTR [rax],eax
   140025ff2:	(bad)  
   140025ff3:	inc    DWORD PTR [rax+0x4b004f00]
	...
   140026001:	add    BYTE PTR [rcx],al
   140026003:	push   rax
   140026004:	add    BYTE PTR [rax],al
   140026006:	add    BYTE PTR [rax],al
   140026008:	push   rbp
   140026009:	add    BYTE PTR [rax],dh
   14002600b:	add    BYTE PTR [rsi],ah
   14002600d:	add    BYTE PTR [rax+rax*1],cl
   140026010:	add    al,BYTE PTR [rax]
   140026012:	(bad)  
   140026013:	inc    DWORD PTR [rax+0x61004300]
   140026019:	add    BYTE PTR [rsi+0x0],ch
   14002601c:	movsxd eax,DWORD PTR [rax]
   14002601e:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140026023:	add    BYTE PTR [rax],al
   140026025:	add    BYTE PTR [rax],al
   140026027:	add    BYTE PTR [rax],al
   140026029:	add    BYTE PTR [rcx],al
   14002602b:	push   rax
   14002602c:	add    BYTE PTR [rax],al
   14002602e:	add    BYTE PTR [rax],al
   140026030:	jle    0x140026032
   140026032:	xor    BYTE PTR [rax],al
   140026034:	add    BYTE PTR es:[rax+rax*1],cl
   140026038:	data16 add bh,bh
   14002603b:	inc    DWORD PTR [rax+0x42002600]
   140026041:	add    BYTE PTR [rdx+0x0],dh
   140026044:	outs   dx,DWORD PTR ds:[rsi]
   140026045:	add    BYTE PTR [rdi+0x0],dh
   140026048:	jae    0x14002604a
   14002604a:	add    BYTE PTR gs:[rsi],ch
   14002604d:	add    BYTE PTR [rsi],ch
   14002604f:	add    BYTE PTR [rsi],ch
   140026051:	add    BYTE PTR [rax],al
   140026053:	add    BYTE PTR [rax],al
   140026055:	add    BYTE PTR [rax+0x41],dl
   140026058:	rol    BYTE PTR [rax],0xc8
   14002605b:	nop
   14002605c:	add    BYTE PTR [rax],al
   14002605e:	add    BYTE PTR [rax],al
   140026060:	or     eax,0x0
   140026065:	add    BYTE PTR [rax],cl
   140026067:	add    DWORD PTR [rbx+0x0],edx
   14002606d:	add    ch,dl
   14002606f:	xor    BYTE PTR [rcx-0x37cf0cd0],ch
   140026075:	xor    BYTE PTR [rax],al
   140026077:	add    BYTE PTR [rcx],cl
   140026079:	add    BYTE PTR [rip+0x20ff33ff],ch        # 0x16101947e
   14002607f:	add    BYTE PTR [rax],dh
   140026081:	push   QWORD PTR [rax+rsi*1+0x30c330b7]
   140026088:	scas   eax,DWORD PTR es:[rdi]
   140026089:	xor    BYTE PTR [rax],al
   14002608b:	add    BYTE PTR [rax],al
   14002608d:	add    BYTE PTR [rdx],al
   14002608f:	push   rax
   140026090:	add    BYTE PTR [rax],al
   140026092:	add    BYTE PTR [rax],al
   140026094:	(bad)  
   140026095:	add    BYTE PTR [rbx],al
   140026097:	add    BYTE PTR [rax],ch
   140026099:	add    BYTE PTR [rcx],cl
   14002609b:	add    al,cl
   14002609d:	add    bh,bh
   14002609f:	inc    DWORD PTR [rdx-0x56cf2b00]
   1400260a5:	xor    bl,dh
   1400260a7:	xor    al,cl
   1400260a9:	xor    BYTE PTR [rax],ch
   1400260ab:	add    BYTE PTR [rsi],ah
   1400260ad:	add    BYTE PTR [rsi+0x0],al
   1400260b0:	sub    DWORD PTR [rax],eax
   1400260b2:	cmp    al,BYTE PTR [rax]
   1400260b4:	add    BYTE PTR [rax],al
   1400260b6:	add    BYTE PTR [rax],al
   1400260b8:	push   rcx
   1400260b9:	add    esp,DWORD PTR [rcx]
   1400260bb:	push   rax
   1400260bc:	add    BYTE PTR [rax],al
   1400260be:	add    BYTE PTR [rax],al
   1400260c0:	(bad)  
   1400260c1:	add    BYTE PTR [rip+0x36005e00],cl        # 0x17602bec7
   1400260c7:	add    cl,cl
   1400260c9:	add    bh,bh
   1400260cb:	inc    DWORD PTR [rbp+0x0]
   1400260d1:	add    BYTE PTR [rax],al
   1400260d3:	add    BYTE PTR [rax],al
   1400260d5:	add    BYTE PTR [rdx],al
   1400260d7:	push   rax
   1400260d8:	add    BYTE PTR [rax],al
   1400260da:	add    BYTE PTR [rax],al
   1400260dc:	ins    BYTE PTR es:[rdi],dx
   1400260dd:	add    BYTE PTR [rbx],al
   1400260df:	add    BYTE PTR [rsi],bl
   1400260e1:	add    BYTE PTR [rcx],cl
   1400260e3:	add    bl,dl
   1400260e5:	add    bh,bh
   1400260e7:	inc    DWORD PTR [rdx-0x40cf4700]
   1400260ed:	xor    BYTE PTR [rax+rsi*1+0x2830eb],ah
   1400260f4:	add    BYTE PTR es:[rbx+0x0],dl
   1400260f8:	sub    DWORD PTR [rax],eax
   1400260fa:	cmp    al,BYTE PTR [rax]
   1400260fc:	add    BYTE PTR [rax],al
   1400260fe:	add    BYTE PTR [rax],al
   140026100:	add    esp,DWORD PTR [r9]
   140026103:	push   rax
   140026104:	add    BYTE PTR [rax],al
   140026106:	add    BYTE PTR [rax],al
   140026108:	ins    BYTE PTR es:[rdi],dx
   140026109:	add    BYTE PTR [rip+0x36002000],cl        # 0x17602810f
   14002610f:	add    ah,dl
   140026111:	add    bh,bh
   140026113:	inc    DWORD PTR [rbp+0x0]
   140026119:	add    BYTE PTR [rax],al
   14002611b:	add    BYTE PTR [rax],al
   14002611d:	add    BYTE PTR [rdx],al
   14002611f:	push   rax
   140026120:	add    BYTE PTR [rax],al
   140026122:	add    BYTE PTR [rax],al
   140026124:	xchg   ebp,eax
   140026125:	add    BYTE PTR [rbx],al
   140026127:	add    BYTE PTR [rsi],bl
   140026129:	add    BYTE PTR [rcx],cl
   14002612b:	add    dl,cl
   14002612d:	add    bh,bh
   14002612f:	inc    DWORD PTR [rdx-0x5bcf4b00]
   140026135:	xor    BYTE PTR [rdx+0x26002830],bh
   14002613b:	add    BYTE PTR [rbx+0x0],dl
   14002613e:	sub    DWORD PTR [rax],eax
   140026140:	cmp    al,BYTE PTR [rax]
   140026142:	add    BYTE PTR [rax],al
   140026144:	add    BYTE PTR [rax],al
   140026146:	add    BYTE PTR [rax],al
   140026148:	add    esp,DWORD PTR [r9]
   14002614b:	push   rax
   14002614c:	add    BYTE PTR [rax],al
   14002614e:	add    BYTE PTR [rax],al
   140026150:	xchg   ebp,eax
   140026151:	add    BYTE PTR [rip+0x36002000],cl        # 0x176028157
   140026157:	add    bl,cl
   140026159:	add    bh,bh
   14002615b:	inc    DWORD PTR [rbp+0x0]
   140026161:	add    BYTE PTR [rax],al
   140026163:	add    BYTE PTR [rax],al
   140026165:	add    BYTE PTR [rdx],al
   140026167:	push   rax
   140026168:	add    BYTE PTR [rax],al
   14002616a:	add    BYTE PTR [rax],al
   14002616c:	(bad)  
   14002616d:	add    BYTE PTR [rbx+0x0],cl
   140026170:	(bad)  
   140026171:	add    BYTE PTR [rcx],cl
   140026173:	add    ah,cl
   140026175:	add    bh,bh
   140026177:	inc    DWORD PTR [rdx+0x6f80cc00]
   14002617d:	data16 jb 0x140026102
   140026180:	sub    BYTE PTR [rax],al
   140026182:	add    BYTE PTR es:[rdx+0x0],al
   140026186:	sub    DWORD PTR [rax],eax
   140026188:	cmp    al,BYTE PTR [rax]
   14002618a:	add    BYTE PTR [rax],al
   14002618c:	add    BYTE PTR [rax],al
   14002618e:	add    BYTE PTR [rax],al
   140026190:	push   rbx
   140026191:	add    ah,BYTE PTR [rcx+0x50]
   140026197:	add    BYTE PTR [rsi],al
   140026199:	add    BYTE PTR [rbp+0x0],dl
   14002619c:	push   rsp
   14002619d:	add    BYTE PTR [rax+rax*1-0x33],ah
   1400261a1:	add    bh,bh
   1400261a3:	inc    DWORD PTR [rbp+0x0]
   1400261a9:	add    BYTE PTR [rax],al
   1400261ab:	add    BYTE PTR [rax],al
   1400261ad:	add    BYTE PTR [rdx],al
   1400261af:	push   rax
   1400261b0:	add    BYTE PTR [rax],al
   1400261b2:	add    BYTE PTR [rax],al
   1400261b4:	(bad)  
   1400261b5:	add    BYTE PTR [rsi+0x0],ch
   1400261b8:	(bad)  
   1400261b9:	add    BYTE PTR [rcx],cl
   1400261bb:	add    dh,cl
   1400261bd:	add    bh,bh
   1400261bf:	inc    DWORD PTR [rdx+0x28827200]
   1400261c5:	add    BYTE PTR [rsi],ah
   1400261c7:	add    BYTE PTR [rbx+0x0],al
   1400261ca:	sub    DWORD PTR [rax],eax
   1400261cc:	cmp    al,BYTE PTR [rax]
   1400261ce:	add    BYTE PTR [rax],al
   1400261d0:	add    BYTE PTR [rax],al
   1400261d2:	add    BYTE PTR [rax],al
   1400261d4:	push   rbx
   1400261d5:	add    ah,BYTE PTR [rcx+0x50]
   1400261db:	add    BYTE PTR [rsi],al
   1400261dd:	add    BYTE PTR [rax+0x0],bh
   1400261e0:	push   rsp
   1400261e1:	add    BYTE PTR [rax+rax*1-0x31],ah
   1400261e5:	add    bh,bh
   1400261e7:	inc    DWORD PTR [rbp+0x0]
   1400261ed:	add    BYTE PTR [rax],al
   1400261ef:	add    BYTE PTR [rdi],al
   1400261f1:	add    BYTE PTR [rdx],al
   1400261f3:	push   rax
   1400261f4:	add    BYTE PTR [rax],al
   1400261f6:	add    BYTE PTR [rax],al
   1400261f8:	(bad)  
   1400261f9:	add    BYTE PTR [rbx+0x0],dl
   1400261fc:	movabs al,ds:0x80ffff00d0003a00
   140026205:	add    BYTE PTR [rbp-0x28cf0cd0],dh
   14002620b:	xor    bl,ch
   14002620d:	xor    BYTE PTR [rax],al
   14002620f:	add    BYTE PTR [rax],al
   140026211:	add    BYTE PTR [rax],al
   140026213:	add    BYTE PTR [rcx+0x500200],al
   140026219:	add    BYTE PTR [rax],al
   14002621b:	add    BYTE PTR [rax+0x0],ch
   14002621e:	pop    rdi
   14002621f:	add    BYTE PTR [rax+rax*1+0xd20026],dl
   140026226:	(bad)  
   140026227:	inc    DWORD PTR [rdx+0x61004100]
   14002622d:	add    BYTE PTR [rdx+0x0],al
   140026230:	(bad)  
   140026231:	add    BYTE PTR [rcx+0x0],bl
   140026234:	jns    0x140026236
   140026236:	pop    rdx
   140026237:	add    BYTE PTR [rdx+0x0],bh
   14002623a:	add    BYTE PTR [rax],al
   14002623c:	add    BYTE PTR [rax],al
   14002623e:	add    BYTE PTR [rax],al
   140026240:	add    eax,DWORD PTR [rax]
   140026242:	add    DWORD PTR [rax+0x0],edx
   140026245:	add    BYTE PTR [rax],al
   140026247:	add    BYTE PTR [rsi],al
   140026249:	add    BYTE PTR [rbx+0xd008d00],bl
   14002624f:	add    ch,dl
   140026251:	add    bh,bh
   140026253:	inc    DWORD PTR [rax+0x457b4900]
   140026259:	pop    rsi
   14002625a:	(bad)  
   14002625b:	xor    BYTE PTR [rcx-0x37cf0cd0],ch
   140026261:	xor    BYTE PTR [rsi+0x30],ch
   140026264:	jg     0x140026296
   140026266:	xchg   edx,eax
   140026267:	xor    BYTE PTR [rax-0x78],ch
   14002626a:	cmp    bh,BYTE PTR [rcx+0x0]
   14002626d:	add    BYTE PTR [rax],al
   14002626f:	add    al,al
   140026271:	add    al,cl
   140026273:	nop
   140026274:	add    BYTE PTR [rax],al
   140026276:	add    BYTE PTR [rax],al
   140026278:	or     eax,0x0
   14002627d:	add    BYTE PTR [rax],cl
   14002627f:	add    DWORD PTR [rbx+0x0],edx
   140026285:	add    BYTE PTR [rsi+0x0],al
   140026288:	outs   dx,DWORD PTR ds:[rsi]
   140026289:	add    BYTE PTR [rsi+0x0],ch
   14002628c:	je     0x14002628e
   14002628e:	add    BYTE PTR [rax],al
   140026290:	or     BYTE PTR [rax],al
   140026292:	rex.W add BYTE PTR [rbp+0x0],spl
   140026296:	ins    BYTE PTR es:[rdi],dx
   140026297:	add    BYTE PTR [rsi+0x0],dh
   14002629a:	add    BYTE PTR [rax],al
   14002629c:	add    BYTE PTR [rax],al
   14002629e:	add    dl,BYTE PTR [rax+0x0]
   1400262a1:	add    BYTE PTR [rax],al
   1400262a3:	add    BYTE PTR [rsi],al
   1400262a5:	add    BYTE PTR [rbx],al
   1400262a7:	add    BYTE PTR [rax],ch
   1400262a9:	add    BYTE PTR [rcx],cl
   1400262ab:	add    al,cl
   1400262ad:	add    bh,bh
   1400262af:	inc    DWORD PTR [rdx+0x46002600]
   1400262b5:	add    BYTE PTR [rdi+0x0],ch
   1400262b8:	outs   dx,BYTE PTR ds:[rsi]
   1400262b9:	add    BYTE PTR [rax+rax*1+0x3a],dh
   1400262bd:	add    BYTE PTR [rax],al
   1400262bf:	add    BYTE PTR [rax],al
   1400262c1:	add    BYTE PTR [rax],al
   1400262c3:	add    BYTE PTR [rcx+0x3],dl
   1400262c6:	and    DWORD PTR [rax+0x0],edx
   1400262c9:	add    BYTE PTR [rax],al
   1400262cb:	add    BYTE PTR [rsi],al
   1400262cd:	add    BYTE PTR [rip+0x36005e00],cl        # 0x17602c0d3
   1400262d3:	add    cl,cl
   1400262d5:	add    bh,bh
   1400262d7:	inc    DWORD PTR [rbp+0x0]
   1400262dd:	add    BYTE PTR [rax],al
   1400262df:	add    BYTE PTR [rax],al
   1400262e1:	add    BYTE PTR [rdx],al
   1400262e3:	push   rax
   1400262e4:	add    BYTE PTR [rax],al
   1400262e6:	add    BYTE PTR [rax],al
   1400262e8:	ins    BYTE PTR es:[rdi],dx
   1400262e9:	add    BYTE PTR [rbx],al
   1400262eb:	add    BYTE PTR [rsi],bl
   1400262ed:	add    BYTE PTR [rcx],cl
   1400262ef:	add    bl,dl
   1400262f1:	add    bh,bh
   1400262f3:	inc    DWORD PTR [rdx+0x26005300]
   1400262f9:	add    BYTE PTR [rax+rax*1+0x79],dh
   1400262fd:	add    BYTE PTR [rax+rax*1+0x65],ch
   140026301:	add    BYTE PTR [rdx],bh
   140026303:	add    BYTE PTR [rax],al
   140026305:	add    BYTE PTR [rax],al
   140026307:	add    BYTE PTR [rcx+0x3],al
   14002630a:	and    DWORD PTR [rax+0x0],edx
   14002630d:	add    BYTE PTR [rax],al
   14002630f:	add    BYTE PTR [rax+rax*1+0xd],ch
   140026313:	add    BYTE PTR [rax],ah
   140026315:	add    BYTE PTR [rsi],dh
   140026317:	add    ah,dl
   140026319:	add    bh,bh
   14002631b:	inc    DWORD PTR [rbp+0x0]
   140026321:	add    BYTE PTR [rax],al
   140026323:	add    BYTE PTR [rax],al
   140026325:	add    BYTE PTR [rdx],al
   140026327:	push   rax
   140026328:	add    BYTE PTR [rax],al
   14002632a:	add    BYTE PTR [rax],al
   14002632c:	xchg   ebp,eax
   14002632d:	add    BYTE PTR [rbx],al
   14002632f:	add    BYTE PTR [rsi],bl
   140026331:	add    BYTE PTR [rcx],cl
   140026333:	add    dl,cl
   140026335:	add    bh,bh
   140026337:	inc    DWORD PTR [rdx+0x53002600]
   14002633d:	add    BYTE PTR [rcx+0x0],ch
   140026340:	jp     0x140026342
   140026342:	add    BYTE PTR gs:[rdx],bh
   140026345:	add    BYTE PTR [rax],al
   140026347:	add    BYTE PTR [rax],al
   140026349:	add    BYTE PTR [rax],al
   14002634b:	add    BYTE PTR [rcx+0x3],al
   14002634e:	and    DWORD PTR [rax+0x0],edx
   140026351:	add    BYTE PTR [rax],al
   140026353:	add    BYTE PTR [rbp+0x20000d00],dl
   140026359:	add    BYTE PTR [rsi],dh
   14002635b:	add    bl,cl
   14002635d:	add    bh,bh
   14002635f:	inc    DWORD PTR [rbp+0x0]
   140026365:	add    BYTE PTR [rax],al
   140026367:	add    BYTE PTR [rax],al
   140026369:	add    BYTE PTR [rdx],al
   14002636b:	push   rax
   14002636c:	add    BYTE PTR [rax],al
   14002636e:	add    BYTE PTR [rax],al
   140026370:	(bad)  
   140026371:	add    BYTE PTR [rbx+0x0],cl
   140026374:	(bad)  
   140026375:	add    BYTE PTR [rcx],cl
   140026377:	add    ah,cl
   140026379:	add    bh,bh
   14002637b:	inc    DWORD PTR [rdx+0x42002600]
   140026381:	add    BYTE PTR [rcx+0x0],ah
   140026384:	movsxd eax,DWORD PTR [rax]
   140026386:	imul   eax,DWORD PTR [rax],0x67
   140026389:	add    BYTE PTR [rdx+0x0],dh
   14002638c:	outs   dx,DWORD PTR ds:[rsi]
   14002638d:	add    BYTE PTR [rbp+0x0],dh
   140026390:	outs   dx,BYTE PTR ds:[rsi]
   140026391:	add    BYTE PTR [rax+rax*1+0x20],ah
   140026395:	add    BYTE PTR [rbx+0x0],al
   140026398:	outs   dx,DWORD PTR ds:[rsi]
   140026399:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002639d:	add    BYTE PTR [rdx+0x0],dh
   1400263a0:	cmp    al,BYTE PTR [rax]
   1400263a2:	add    BYTE PTR [rax],al
   1400263a4:	add    BYTE PTR [rax],al
   1400263a6:	add    BYTE PTR [rax],al
   1400263a8:	push   rbx
   1400263a9:	add    ah,BYTE PTR [rcx+0x50]
   1400263af:	add    BYTE PTR [rsi],al
   1400263b1:	add    BYTE PTR [rbp+0x0],dl
   1400263b4:	push   rsp
   1400263b5:	add    BYTE PTR [rax+rax*1-0x33],ah
   1400263b9:	add    bh,bh
   1400263bb:	inc    DWORD PTR [rbp+0x0]
   1400263c1:	add    BYTE PTR [rax],al
   1400263c3:	add    BYTE PTR [rax],al
   1400263c5:	add    BYTE PTR [rdx],al
   1400263c7:	push   rax
   1400263c8:	add    BYTE PTR [rax],al
   1400263ca:	add    BYTE PTR [rax],al
   1400263cc:	(bad)  
   1400263cd:	add    BYTE PTR [rsi+0x0],ch
   1400263d0:	(bad)  
   1400263d1:	add    BYTE PTR [rcx],cl
   1400263d3:	add    dh,cl
   1400263d5:	add    bh,bh
   1400263d7:	inc    DWORD PTR [rdx+0x43002600]
   1400263dd:	add    BYTE PTR [rdi+0x0],ch
   1400263e0:	ins    BYTE PTR es:[rdi],dx
   1400263e1:	add    BYTE PTR [rdi+0x0],ch
   1400263e4:	jb     0x1400263e6
   1400263e6:	cmp    al,BYTE PTR [rax]
   1400263e8:	add    BYTE PTR [rax],al
   1400263ea:	add    BYTE PTR [rax],al
   1400263ec:	push   rbx
   1400263ed:	add    ah,BYTE PTR [rcx+0x50]
   1400263f3:	add    BYTE PTR [rsi],al
   1400263f5:	add    BYTE PTR [rax+0x0],bh
   1400263f8:	push   rsp
   1400263f9:	add    BYTE PTR [rax+rax*1-0x31],ah
   1400263fd:	add    bh,bh
   1400263ff:	inc    DWORD PTR [rbp+0x0]
   140026405:	add    BYTE PTR [rax],al
   140026407:	add    BYTE PTR [rdi],al
   140026409:	add    BYTE PTR [rdx],al
   14002640b:	push   rax
   14002640c:	add    BYTE PTR [rax],al
   14002640e:	add    BYTE PTR [rax],al
   140026410:	(bad)  
   140026411:	add    BYTE PTR [rbx+0x0],dl
   140026414:	movabs al,ds:0x80ffff00d0003a00
   14002641d:	add    BYTE PTR [rbx+0x0],dl
   140026420:	(bad)  
   140026421:	add    BYTE PTR [rbp+0x0],ch
   140026424:	jo     0x140026426
   140026426:	ins    BYTE PTR es:[rdi],dx
   140026427:	add    BYTE PTR [rbp+0x0],ah
   14002642a:	add    BYTE PTR [rax],al
   14002642c:	add    BYTE PTR [rax],al
   14002642e:	add    BYTE PTR [rax],al
   140026430:	add    DWORD PTR [rax],0x5002
   140026436:	add    BYTE PTR [rax],al
   140026438:	push   0xffffffff94005f00
   14002643d:	add    BYTE PTR [rsi],ah
   14002643f:	add    dl,dl
   140026441:	add    bh,bh
   140026443:	inc    DWORD PTR [rdx+0x61004100]
   140026449:	add    BYTE PTR [rdx+0x0],al
   14002644c:	(bad)  
   14002644d:	add    BYTE PTR [rcx+0x0],bl
   140026450:	jns    0x140026452
   140026452:	pop    rdx
   140026453:	add    BYTE PTR [rdx+0x0],bh
   140026456:	add    BYTE PTR [rax],al
   140026458:	add    BYTE PTR [rax],al
   14002645a:	add    BYTE PTR [rax],al
   14002645c:	add    eax,DWORD PTR [rax]
   14002645e:	add    DWORD PTR [rax+0x0],edx
   140026461:	add    BYTE PTR [rax],al
   140026463:	add    BYTE PTR [rsi],al
   140026465:	add    BYTE PTR [rbx+0xd008d00],bl
   14002646b:	add    ch,dl
   14002646d:	add    bh,bh
   14002646f:	inc    DWORD PTR [rax+0x69004400]
   140026475:	add    BYTE PTR [rbx+0x0],dh
   140026478:	jo     0x14002647a
   14002647a:	ins    BYTE PTR es:[rdi],dx
   14002647b:	add    BYTE PTR [rcx+0x0],ah
   14002647e:	jns    0x140026480
   140026480:	and    BYTE PTR [rax],al
   140026482:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140026486:	js     0x140026488
   140026488:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14002648d:	add    BYTE PTR [rax+0x0],dl
   140026490:	imul   eax,DWORD PTR [rax],0x630074
   140026496:	push   0x46002000
   14002649b:	add    BYTE PTR [rdi+0x0],ch
   14002649e:	outs   dx,BYTE PTR ds:[rsi]
   14002649f:	add    BYTE PTR [rax+rax*1+0x73],dh
   1400264a3:	add    BYTE PTR [rax],ah
   1400264a5:	add    BYTE PTR [rdi+0x0],cl
   1400264a8:	outs   dx,BYTE PTR ds:[rsi]
   1400264a9:	add    BYTE PTR [rax+rax*1+0x79],ch
   1400264ad:	add    BYTE PTR [rax],al
   1400264af:	add    BYTE PTR [rax],al
   1400264b1:	add    BYTE PTR [rax+0x41],dl
   1400264b4:	rol    BYTE PTR [rax],0xc8
   1400264b7:	nop
   1400264b8:	add    BYTE PTR [rax],al
   1400264ba:	add    BYTE PTR [rax],al
   1400264bc:	sbb    DWORD PTR [rax],eax
   1400264be:	add    BYTE PTR [rax],al
   1400264c0:	add    BYTE PTR [rax],al
   1400264c2:	and    eax,DWORD PTR [rcx]
   1400264c4:	mov    edi,0x0
   1400264c9:	add    BYTE PTR [rax],al
   1400264cb:	rex.WRX sub al,0x82
   1400264ce:	sub    eax,0x5b9a8a
   1400264d3:	add    BYTE PTR [rcx],cl
   1400264d5:	add    BYTE PTR [rip+0x20ff33ff],ch        # 0x1610198da
   1400264db:	add    BYTE PTR [rax],dh
   1400264dd:	push   QWORD PTR [rax+rsi*1+0x30c330b7]
   1400264e4:	scas   eax,DWORD PTR es:[rdi]
   1400264e5:	xor    BYTE PTR [rax],al
   1400264e7:	add    BYTE PTR [rcx],cl
   1400264e9:	add    BYTE PTR [rbx],al
   1400264eb:	push   rax
   1400264ec:	add    BYTE PTR [rax],al
   1400264ee:	add    BYTE PTR [rax],al
   1400264f0:	adc    al,0x0
   1400264f2:	adc    BYTE PTR [rax],al
   1400264f4:	add    BYTE PTR [r10],cl
   1400264f7:	add    BYTE PTR [rbp+0x0],ah
   1400264fa:	(bad)  
   1400264fb:	inc    DWORD PTR [rax+0x41003500]
   140026501:	push   0x56fa002f
   140026506:	(bad)  
   140026507:	pop    rbx
   140026508:	sub    BYTE PTR [rax],al
   14002650a:	loop   0x140026571
   14002650c:	(bad)  
   14002650d:	pop    rbx
   14002650e:	and    al,0x50
   140026510:	sub    DWORD PTR [rax],eax
   140026512:	add    BYTE PTR [rax],al
   140026514:	add    BYTE PTR [rax],al
   140026516:	add    BYTE PTR [rax],al
   140026518:	or     DWORD PTR [rax],eax
   14002651a:	add    BYTE PTR [rax+0x0],dl
   14002651d:	add    BYTE PTR [rax],al
   14002651f:	add    BYTE PTR [rax+rax*1],dl
   140026522:	(bad)  
   140026523:	add    BYTE PTR [rdx],dh
   140026525:	add    BYTE PTR [rdx],cl
   140026527:	add    BYTE PTR [rsi+0x0],ah
   14002652a:	(bad)  
   14002652b:	inc    DWORD PTR [rax+0x35003100]
   140026531:	add    BYTE PTR [rcx+0x68],al
   140026534:	(bad)  
   140026535:	add    dl,bh
   140026537:	push   rsi
   140026538:	(bad)  
   140026539:	pop    rbx
   14002653a:	add    BYTE PTR [rax],al
   14002653c:	add    BYTE PTR [rax],al
   14002653e:	add    BYTE PTR [rax],al
   140026540:	or     DWORD PTR [rax],eax
   140026542:	add    BYTE PTR [rax+0x0],dl
   140026545:	add    BYTE PTR [rax],al
   140026547:	add    BYTE PTR [rax+rax*1],dl
   14002654a:	sub    al,0x0
   14002654c:	sub    BYTE PTR [rax],al
   14002654e:	or     al,BYTE PTR [rax]
   140026550:	addr32 add bh,bh
   140026553:	inc    DWORD PTR [rax+0x36003100]
   140026559:	add    BYTE PTR [rdx],dh
   14002655b:	nop
   14002655c:	jo     0x1400265c3
   14002655e:	add    BYTE PTR [rax],al
   140026560:	add    BYTE PTR [rax],al
   140026562:	add    BYTE PTR [rax],al
   140026564:	or     DWORD PTR [rax],eax
   140026566:	add    BYTE PTR [rax+0x0],dl
   140026569:	add    BYTE PTR [rax],al
   14002656b:	add    BYTE PTR [rax+rax*1],dl
   14002656e:	cmp    al,BYTE PTR [rax]
   140026570:	cmp    al,0x0
   140026572:	or     al,BYTE PTR [rax]
   140026574:	push   0xffffffff80ffff00
   140026579:	add    BYTE PTR [rdx],bl
   14002657b:	nop
   14002657c:	test   al,0x8c
   14002657e:	sub    BYTE PTR [rax],al
   140026580:	leave  
   140026581:	xor    bl,ch
   140026583:	xor    BYTE PTR [rax+0x30],ch
   140026586:	mov    ebx,0xc830f330
   14002658b:	xor    BYTE PTR [rcx],ch
   14002658d:	add    BYTE PTR [rax],al
   14002658f:	add    BYTE PTR [rax],al
   140026591:	add    BYTE PTR [rax],al
   140026593:	add    BYTE PTR [rcx],cl
   140026595:	add    BYTE PTR [rax],al
   140026597:	push   rax
   140026598:	add    BYTE PTR [rax],al
   14002659a:	add    BYTE PTR [rax],al
   14002659c:	adc    al,0x0
   14002659e:	rex.W add BYTE PTR [rax],bpl
   1400265a1:	add    BYTE PTR [rdx],cl
   1400265a3:	add    BYTE PTR [rcx+0x0],ch
   1400265a6:	(bad)  
   1400265a7:	inc    DWORD PTR [rax-0x884da00]
   1400265ad:	push   rbx
   1400265ae:	push   0x793a88
   1400265b3:	add    BYTE PTR [rax],al
   1400265b5:	add    BYTE PTR [rax],al
   1400265b7:	add    BYTE PTR [rcx],cl
   1400265b9:	add    BYTE PTR [rax],al
   1400265bb:	push   rax
   1400265bc:	add    BYTE PTR [rax],al
   1400265be:	add    BYTE PTR [rax],al
   1400265c0:	adc    al,0x0
   1400265c2:	push   rsi
   1400265c3:	add    BYTE PTR [rax],ch
   1400265c5:	add    BYTE PTR [rdx],cl
   1400265c7:	add    BYTE PTR [rdx+0x0],ch
   1400265ca:	(bad)  
   1400265cb:	inc    DWORD PTR [rax+0x41003500]
   1400265d1:	push   0x6d6e002f
   1400265d6:	(bad)  
   1400265d7:	push   rdx
   1400265d8:	add    BYTE PTR [rax],al
   1400265da:	add    BYTE PTR [rax],al
   1400265dc:	or     DWORD PTR [rax],eax
   1400265de:	add    BYTE PTR [rax+0x0],dl
   1400265e1:	add    BYTE PTR [rax],al
   1400265e3:	add    BYTE PTR [rax+rax*1],dl
   1400265e6:	add    BYTE PTR fs:[rdx],dh
   1400265e9:	add    BYTE PTR [rdx],cl
   1400265eb:	add    BYTE PTR [rbx+0x0],ch
   1400265ee:	(bad)  
   1400265ef:	inc    DWORD PTR [rax+0x35003100]
   1400265f5:	add    BYTE PTR [rcx+0x68],al
   1400265f8:	(bad)  
   1400265f9:	add    BYTE PTR [rsi+0x6d],ch
   1400265fc:	(bad)  
   1400265fd:	push   rdx
   1400265fe:	add    BYTE PTR [rax],al
   140026600:	add    BYTE PTR [rax],al
   140026602:	add    BYTE PTR [rax],al
   140026604:	or     DWORD PTR [rax],eax
   140026606:	add    BYTE PTR [rax+0x0],dl
   140026609:	add    BYTE PTR [rax],al
   14002660b:	add    BYTE PTR [rax+rax*1],dl
   14002660e:	jb     0x140026610
   140026610:	sub    BYTE PTR [rax],al
   140026612:	or     al,BYTE PTR [rax]
   140026614:	ins    BYTE PTR es:[rdi],dx
   140026615:	add    bh,bh
   140026617:	inc    DWORD PTR [rax+0x41003500]
   14002661d:	push   0x6700002f
   140026622:	outs   dx,DWORD PTR ds:[rsi]
   140026623:	(bad)  
   140026624:	add    BYTE PTR [rax],al
   140026626:	add    BYTE PTR [rax],al
   140026628:	or     DWORD PTR [rax],eax
   14002662a:	add    BYTE PTR [rax+0x0],dl
   14002662d:	add    BYTE PTR [rax],al
   14002662f:	add    BYTE PTR [rax+rax*1],dl
   140026632:	add    BYTE PTR [rax],0x32
   140026635:	add    BYTE PTR [rdx],cl
   140026637:	add    BYTE PTR [rbp+0x0],ch
   14002663a:	(bad)  
   14002663b:	inc    DWORD PTR [rax+0x35003100]
   140026641:	add    BYTE PTR [rcx+0x68],al
   140026644:	(bad)  
   140026645:	add    BYTE PTR [rax],al
   140026647:	outs   dx,DWORD PTR ds:[esi]
   140026649:	(bad)  
   14002664a:	add    BYTE PTR [rax],al
   14002664c:	add    BYTE PTR [rax],al
   14002664e:	add    BYTE PTR [rax],al
   140026650:	or     DWORD PTR [rax],eax
   140026652:	add    BYTE PTR [rax+0x0],dl
   140026655:	add    BYTE PTR [rax],al
   140026657:	add    BYTE PTR [rax+rax*1],dl
   14002665a:	mov    es,WORD PTR [rax]
   14002665c:	sub    BYTE PTR [rax],al
   14002665e:	or     al,BYTE PTR [rax]
   140026660:	outs   dx,BYTE PTR ds:[rsi]
   140026661:	add    bh,bh
   140026663:	inc    DWORD PTR [rax+0x6670900]
   140026669:	je     0x1400266db
   14002666b:	add    BYTE PTR gs:[rax],al
   14002666e:	add    BYTE PTR [rax],al
   140026670:	or     DWORD PTR [rax],eax
   140026672:	add    edx,DWORD PTR [rax+0x0]
   140026675:	add    BYTE PTR [rax],al
   140026677:	add    BYTE PTR [rax+rax*1],dl
   14002667a:	movabs ds:0xff006f000a003f00,al
   140026683:	inc    DWORD PTR [rax+0x4f5e8300]
   140026689:	xor    BYTE PTR [rax],ch
   14002668b:	add    dl,ah
   14002668d:	gs (bad) 
   14002668f:	pop    rbx
   140026690:	and    al,0x50
   140026692:	sub    DWORD PTR [rax],eax
   140026694:	add    BYTE PTR [rax],al
   140026696:	add    BYTE PTR [rax],al
   140026698:	or     DWORD PTR [rax],eax
   14002669a:	add    BYTE PTR [rax+0x0],dl
   14002669d:	add    BYTE PTR [rax],al
   14002669f:	add    BYTE PTR [rax+rax*1],dl
   1400266a2:	mov    al,0x0
   1400266a4:	sub    BYTE PTR [rax],al
   1400266a6:	or     al,BYTE PTR [rax]
   1400266a8:	jo     0x1400266aa
   1400266aa:	(bad)  
   1400266ab:	inc    DWORD PTR [rax+0x4f72ed00]
   1400266b1:	xor    BYTE PTR [rax],al
   1400266b3:	add    BYTE PTR [rax],al
   1400266b5:	add    BYTE PTR [rax],al
   1400266b7:	add    BYTE PTR [rcx],cl
   1400266b9:	add    BYTE PTR [rbx],al
   1400266bb:	push   rax
   1400266bc:	add    BYTE PTR [rax],al
   1400266be:	add    BYTE PTR [rax],al
   1400266c0:	movsxd eax,DWORD PTR [rax]
   1400266c2:	sldt   WORD PTR [rcx+0x0]
   1400266c6:	or     al,BYTE PTR [rax]
   1400266c8:	add    DWORD PTR [rax],0xffffffff
   1400266cb:	inc    DWORD PTR [rax+0x7f7d4400]
   1400266d1:	xor    BYTE PTR [rdi+rcx*4+0x30a8307f],bh
   1400266d8:	(bad)  
   1400266d9:	xor    BYTE PTR [rbx+0x30bf30],ah
   1400266df:	add    BYTE PTR [rax],al
   1400266e1:	add    BYTE PTR [rax],al
   1400266e3:	add    BYTE PTR [rcx],cl
   1400266e5:	add    BYTE PTR [rax],al
   1400266e7:	push   rax
   1400266e8:	add    BYTE PTR [rax],al
   1400266ea:	add    BYTE PTR [rax],al
   1400266ec:	movsxd eax,DWORD PTR [rax]
   1400266ee:	sbb    eax,DWORD PTR [rax]
   1400266f0:	or     al,BYTE PTR [rax]
   1400266f2:	or     al,BYTE PTR [rax]
   1400266f4:	test   BYTE PTR [rax],al
   1400266f6:	(bad)  
   1400266f7:	inc    DWORD PTR [rax+0x0]
   1400266fd:	add    BYTE PTR [rax],al
   1400266ff:	add    BYTE PTR [rax+0x508100],al
   140026705:	add    BYTE PTR [rax],al
   140026707:	add    BYTE PTR [rsi+0x0],ch
   14002670a:	sbb    eax,DWORD PTR [rax]
   14002670c:	jae    0x14002670e
   14002670e:	or     al,0x0
   140026710:	jae    0x140026712
   140026712:	(bad)  
   140026713:	inc    DWORD PTR [rcx+0x0]
   140026719:	add    BYTE PTR [rax],al
   14002671b:	add    BYTE PTR [rax],al
   14002671d:	add    BYTE PTR [rax],al
   14002671f:	push   rax
   140026720:	add    BYTE PTR [rax],al
   140026722:	add    BYTE PTR [rax],al
   140026724:	out    0x0,al
   140026726:	(bad)  
   140026727:	add    BYTE PTR [rbx],ah
   140026729:	add    BYTE PTR [rbx],dl
   14002672b:	add    BYTE PTR [rax+rax*1-0x1],dh
   14002672f:	inc    DWORD PTR [rax+0x6753c200]
   140026735:	jno    0x140026765
   140026737:	add    BYTE PTR [rsi],ch
   140026739:	add    BYTE PTR [rsi],ch
   14002673b:	add    BYTE PTR [rax],al
   14002673d:	add    BYTE PTR [rax],al
   14002673f:	add    BYTE PTR [rbx],al
   140026741:	add    BYTE PTR [rcx],al
   140026743:	push   rax
   140026744:	add    BYTE PTR [rax],al
   140026746:	add    BYTE PTR [rax],al
   140026748:	(bad)  
   140026749:	add    BYTE PTR [rax+0x0],dh
   14002674c:	rex.RXB add BYTE PTR [r10],r9b
   14002674f:	add    BYTE PTR [rcx+0x0],bh
   140026752:	(bad)  
   140026753:	inc    DWORD PTR [rax-0x4ccf5800]
   140026759:	xor    ah,bh
   14002675b:	xor    BYTE PTR [rax-0x78],ch
   14002675e:	cmp    bh,BYTE PTR [rcx+0x0]
   140026761:	add    BYTE PTR [rax],al
   140026763:	add    BYTE PTR [rbx],al
   140026765:	add    BYTE PTR [rcx],al
   140026767:	push   rax
   140026768:	add    BYTE PTR [rax],al
   14002676a:	add    BYTE PTR [rax],al
   14002676c:	(bad)  
   14002676d:	add    BYTE PTR [rbp+0x0],bh
   140026770:	pop    rdx
   140026771:	add    BYTE PTR [rdx],cl
   140026773:	add    BYTE PTR [rax-0x7f000100],al
   140026779:	add    ah,al
   14002677b:	xor    ah,bh
   14002677d:	xor    bl,ch
   14002677f:	xor    BYTE PTR [rax],ah
   140026781:	add    al,dl
   140026783:	xor    ah,bh
   140026785:	xor    BYTE PTR [rsi+0x30],ch
   140026788:	push   0x793a88
   14002678d:	add    BYTE PTR [rax],al
   14002678f:	add    BYTE PTR [rbx],al
   140026791:	add    BYTE PTR [rcx],al
   140026793:	push   rax
   140026794:	add    BYTE PTR [rax],al
   140026796:	add    BYTE PTR [rax],al
   140026798:	(bad)  
   140026799:	add    BYTE PTR [rbx+0xa006700],cl
   14002679f:	add    BYTE PTR [rcx-0x7f000100],al
   1400267a5:	add    BYTE PTR [rax-0x2acf16d0],dh
   1400267ab:	xor    BYTE PTR [rbx-0x14cf54d0],ah
   1400267b1:	xor    BYTE PTR [rax],ah
   1400267b3:	add    bh,al
   1400267b5:	xor    al,dl
   1400267b7:	xor    bl,al
   1400267b9:	xor    BYTE PTR [rax+0x29309230],dh
   1400267bf:	push   rdx
   1400267c0:	sub    BYTE PTR [rbp+0x0],dh
   1400267c3:	add    BYTE PTR [rax],al
   1400267c5:	add    BYTE PTR [rax],al
   1400267c7:	add    BYTE PTR [rdi],al
   1400267c9:	add    BYTE PTR [rax],al
   1400267cb:	push   rax
   1400267cc:	add    BYTE PTR [rax],al
   1400267ce:	add    BYTE PTR [rax],al
   1400267d0:	adc    BYTE PTR [rax],al
   1400267d2:	add    al,0x0
   1400267d4:	rex.RX add BYTE PTR [rdx-0xff7900],r11b
   1400267db:	inc    DWORD PTR [rax+0x24657000]
   1400267e1:	push   rax
   1400267e2:	push   0xfffffffff8793a88
   1400267e7:	maxpd  xmm0,XMMWORD PTR [rax]
   1400267eb:	add    BYTE PTR [rax],al
   1400267ed:	add    BYTE PTR [rax],al
   1400267ef:	add    BYTE PTR [rdi],al
   1400267f1:	add    BYTE PTR [rax],al
   1400267f3:	push   rax
   1400267f4:	add    BYTE PTR [rax],al
   1400267f6:	add    BYTE PTR [rax],al
   1400267f8:	adc    BYTE PTR [rax],al
   1400267fa:	(bad)  
   1400267fb:	add    BYTE PTR [rsi+0x0],al
   1400267fe:	and    eax,0xff008800
   140026803:	inc    DWORD PTR [rax+0x0]
   140026809:	add    BYTE PTR [rax],al
   14002680b:	add    BYTE PTR [rdi],al
   14002680d:	add    BYTE PTR [rax],al
   14002680f:	push   rax
   140026810:	add    BYTE PTR [rax],al
   140026812:	add    BYTE PTR [rax],al
   140026814:	pop    rdi
   140026815:	add    BYTE PTR [rax+rax*1],al
   140026818:	mov    dl,0x0
   14002681a:	sub    DWORD PTR [rax],eax
   14002681c:	mov    DWORD PTR [rax],eax
   14002681e:	(bad)  
   14002681f:	inc    DWORD PTR [rax-0x38cf5800]
   140026825:	xor    BYTE PTR [rbx+0x2d30bf30],ah
   14002682b:	mov    bl,BYTE PTR [rdx+0x5b]
   140026831:	add    BYTE PTR [rax],al
   140026833:	add    BYTE PTR [rax+0x508100],al
   140026839:	add    BYTE PTR [rax],al
   14002683b:	add    BYTE PTR [rsi+0x0],ch
   14002683e:	rex.WB add BYTE PTR [r11+0x0],sil
   140026842:	or     al,0x0
   140026844:	ja     0x140026846
   140026846:	(bad)  
   140026847:	inc    DWORD PTR [rcx+0x0]
   14002684d:	add    BYTE PTR [rax],al
   14002684f:	add    BYTE PTR [rax],al
   140026851:	add    BYTE PTR [rax],al
   140026853:	push   rax
   140026854:	add    BYTE PTR [rax],al
   140026856:	add    BYTE PTR [rax],al
   140026858:	out    0x0,al
   14002685a:	add    BYTE PTR [r11],r12b
   14002685d:	add    BYTE PTR [rbx],dl
   14002685f:	add    BYTE PTR [rax+0x0],bh
   140026862:	(bad)  
   140026863:	inc    DWORD PTR [rax+0x6753c200]
   140026869:	jno    0x140026899
   14002686b:	add    BYTE PTR [rsi],ch
   14002686d:	add    BYTE PTR [rsi],ch
   14002686f:	add    BYTE PTR [rax],al
   140026871:	add    BYTE PTR [rax],al
   140026873:	add    BYTE PTR [rdi],al
   140026875:	add    BYTE PTR [rax],al
   140026877:	push   rax
   140026878:	add    BYTE PTR [rax],al
   14002687a:	add    BYTE PTR [rax],al
   14002687c:	pop    rdi
   14002687d:	add    BYTE PTR [rdx],bh
   14002687f:	add    BYTE PTR [rdx-0x74ffda00],dh
   140026885:	add    bh,bh
   140026887:	inc    DWORD PTR [rax-0x14cf2800]
   14002688d:	xor    bh,dl
   14002688f:	xor    BYTE PTR [rax],ah
   140026891:	add    bh,al
   140026893:	xor    BYTE PTR [rbx-0x50cf13d0],ah
   140026899:	xor    al,cl
   14002689b:	xor    dl,ch
   14002689d:	xor    BYTE PTR [rax],al
   14002689f:	add    BYTE PTR [rax],al
   1400268a1:	add    BYTE PTR [rax+0x41],dl
   1400268a4:	rol    BYTE PTR [rax],0xc8
   1400268a7:	nop
   1400268a8:	add    BYTE PTR [rax],al
   1400268aa:	add    BYTE PTR [rax],al
   1400268ac:	(bad)  
   1400268ad:	add    BYTE PTR [rax],al
   1400268af:	add    BYTE PTR [rax],al
   1400268b1:	add    BYTE PTR [rbx],ah
   1400268b3:	add    DWORD PTR [rdi+0x0],edi
   1400268b9:	add    BYTE PTR [rdi+0x0],al
   1400268bc:	add    BYTE PTR gs:[rsi+0x0],ch
   1400268c0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400268c4:	(bad)  
   1400268c5:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400268c9:	add    BYTE PTR [rax+0x0],dl
   1400268cc:	jb     0x1400268ce
   1400268ce:	add    BYTE PTR gs:[rsi+0x0],ah
   1400268d2:	jae    0x1400268d4
   1400268d4:	add    BYTE PTR [rax],al
   1400268d6:	or     BYTE PTR [rax],al
   1400268d8:	rex.W add BYTE PTR [rbp+0x0],spl
   1400268dc:	ins    BYTE PTR es:[rdi],dx
   1400268dd:	add    BYTE PTR [rsi+0x0],dh
   1400268e0:	add    BYTE PTR [rax],al
   1400268e2:	add    BYTE PTR [rax],al
   1400268e4:	or     DWORD PTR [rax],eax
   1400268e6:	add    edx,DWORD PTR [rax+0x0]
   1400268e9:	add    BYTE PTR [rax],al
   1400268eb:	add    BYTE PTR [rax+rax*1],dl
   1400268ee:	adc    BYTE PTR [rax],al
   1400268f0:	add    BYTE PTR [r10],cl
   1400268f3:	add    BYTE PTR [rbp+0x0],ah
   1400268f6:	(bad)  
   1400268f7:	inc    DWORD PTR [rax+0x68005300]
   1400268fd:	add    BYTE PTR [rdi+0x0],ch
   140026900:	jb     0x140026902
   140026902:	je     0x140026904
   140026904:	and    BYTE PTR [rax],al
   140026906:	sub    BYTE PTR [rax],al
   140026908:	add    BYTE PTR fs:[rbp+0x0],ah
   14002690c:	data16 add BYTE PTR [rcx+0x0],ah
   140026910:	jne    0x140026912
   140026912:	ins    BYTE PTR es:[rdi],dx
   140026913:	add    BYTE PTR [rax+rax*1+0x29],dh
   140026917:	add    BYTE PTR [rax],al
   140026919:	add    BYTE PTR [rax],al
   14002691b:	add    BYTE PTR [rcx],cl
   14002691d:	add    BYTE PTR [rax],al
   14002691f:	push   rax
   140026920:	add    BYTE PTR [rax],al
   140026922:	add    BYTE PTR [rax],al
   140026924:	adc    al,0x0
   140026926:	(bad)  
   140026927:	add    BYTE PTR [rax],ch
   140026929:	add    BYTE PTR [rdx],cl
   14002692b:	add    BYTE PTR [rsi+0x0],ah
   14002692e:	(bad)  
   14002692f:	inc    DWORD PTR [rax+0x6f004c00]
   140026935:	add    BYTE PTR [rsi+0x0],ch
   140026938:	add    BYTE PTR [eax],al
   14002693b:	add    BYTE PTR [rax],al
   14002693d:	add    BYTE PTR [rax],al
   14002693f:	add    BYTE PTR [rcx],cl
   140026941:	add    BYTE PTR [rax],al
   140026943:	push   rax
   140026944:	add    BYTE PTR [rax],al
   140026946:	add    BYTE PTR [rax],al
   140026948:	adc    al,0x0
   14002694a:	sub    al,0x0
   14002694c:	sub    BYTE PTR [rax],al
   14002694e:	or     al,BYTE PTR [rax]
   140026950:	addr32 add bh,bh
   140026953:	inc    DWORD PTR [rax+0x65004800]
   140026959:	add    BYTE PTR [rax+0x0],bh
   14002695c:	add    BYTE PTR [rax],al
   14002695e:	add    BYTE PTR [rax],al
   140026960:	or     DWORD PTR [rax],eax
   140026962:	add    BYTE PTR [rax+0x0],dl
   140026965:	add    BYTE PTR [rax],al
   140026967:	add    BYTE PTR [rax+rax*1],dl
   14002696a:	cmp    al,BYTE PTR [rax]
   14002696c:	sub    BYTE PTR [rax],al
   14002696e:	or     al,BYTE PTR [rax]
   140026970:	push   0xffffffff80ffff00
   140026975:	add    BYTE PTR [rdx+0x0],al
   140026978:	(bad)  
   140026979:	add    BYTE PTR [rsi+0x0],ch
   14002697c:	imul   eax,DWORD PTR [rax],0x0
   14002697f:	add    BYTE PTR [rax],al
   140026981:	add    BYTE PTR [rax],al
   140026983:	add    BYTE PTR [rcx],cl
   140026985:	add    BYTE PTR [rax],al
   140026987:	push   rax
   140026988:	add    BYTE PTR [rax],al
   14002698a:	add    BYTE PTR [rax],al
   14002698c:	adc    al,0x0
   14002698e:	rex.W add BYTE PTR [rax],bpl
   140026991:	add    BYTE PTR [rdx],cl
   140026993:	add    BYTE PTR [rcx+0x0],ch
   140026996:	(bad)  
   140026997:	inc    DWORD PTR [rax+0x6c005000]
   14002699d:	add    BYTE PTR [rbp+0x0],dh
   1400269a0:	jae    0x1400269a2
   1400269a2:	add    BYTE PTR [rax],al
   1400269a4:	add    BYTE PTR [rax],al
   1400269a6:	add    BYTE PTR [rax],al
   1400269a8:	or     DWORD PTR [rax],eax
   1400269aa:	add    BYTE PTR [rax+0x0],dl
   1400269ad:	add    BYTE PTR [rax],al
   1400269af:	add    BYTE PTR [rax+rax*1],dl
   1400269b2:	push   rsi
   1400269b3:	add    BYTE PTR [rax],ch
   1400269b5:	add    BYTE PTR [rdx],cl
   1400269b7:	add    BYTE PTR [rdx+0x0],ch
   1400269ba:	(bad)  
   1400269bb:	inc    DWORD PTR [rax+0x68005300]
   1400269c1:	add    BYTE PTR [rdi+0x0],ch
   1400269c4:	jb     0x1400269c6
   1400269c6:	je     0x1400269c8
   1400269c8:	and    BYTE PTR [rax],al
   1400269ca:	add    BYTE PTR [r8],r8b
   1400269cd:	add    BYTE PTR [rax],al
   1400269cf:	add    BYTE PTR [rcx],cl
   1400269d1:	add    BYTE PTR [rax],al
   1400269d3:	push   rax
   1400269d4:	add    BYTE PTR [rax],al
   1400269d6:	add    BYTE PTR [rax],al
   1400269d8:	adc    al,0x0
   1400269da:	add    BYTE PTR fs:[rax],ch
   1400269dd:	add    BYTE PTR [rdx],cl
   1400269df:	add    BYTE PTR [rbx+0x0],ch
   1400269e2:	(bad)  
   1400269e3:	inc    DWORD PTR [rax+0x6f004c00]
   1400269e9:	add    BYTE PTR [rsi+0x0],ch
   1400269ec:	add    BYTE PTR [eax],ah
   1400269ef:	add    BYTE PTR [rbp+0x0],al
   1400269f2:	add    BYTE PTR [rax],al
   1400269f4:	add    BYTE PTR [rax],al
   1400269f6:	add    BYTE PTR [rax],al
   1400269f8:	or     DWORD PTR [rax],eax
   1400269fa:	add    BYTE PTR [rax+0x0],dl
   1400269fd:	add    BYTE PTR [rax],al
   1400269ff:	add    BYTE PTR [rax+rax*1],dl
   140026a02:	jb     0x140026a04
   140026a04:	sub    BYTE PTR [rax],al
   140026a06:	or     al,BYTE PTR [rax]
   140026a08:	ins    BYTE PTR es:[rdi],dx
   140026a09:	add    bh,bh
   140026a0b:	inc    DWORD PTR [rax+0x68005300]
   140026a11:	add    BYTE PTR [rdi+0x0],ch
   140026a14:	jb     0x140026a16
   140026a16:	je     0x140026a18
   140026a18:	and    BYTE PTR [rax],al
   140026a1a:	rex.RXB add BYTE PTR [r8],r8b
   140026a1d:	add    BYTE PTR [rax],al
   140026a1f:	add    BYTE PTR [rcx],cl
   140026a21:	add    BYTE PTR [rax],al
   140026a23:	push   rax
   140026a24:	add    BYTE PTR [rax],al
   140026a26:	add    BYTE PTR [rax],al
   140026a28:	adc    al,0x0
   140026a2a:	add    BYTE PTR [rax],0x28
   140026a2d:	add    BYTE PTR [rdx],cl
   140026a2f:	add    BYTE PTR [rbp+0x0],ch
   140026a32:	(bad)  
   140026a33:	inc    DWORD PTR [rax+0x6f004c00]
   140026a39:	add    BYTE PTR [rsi+0x0],ch
   140026a3c:	add    BYTE PTR [eax],ah
   140026a3f:	add    BYTE PTR [rdi+0x0],al
   140026a42:	add    BYTE PTR [rax],al
   140026a44:	add    BYTE PTR [rax],al
   140026a46:	add    BYTE PTR [rax],al
   140026a48:	or     DWORD PTR [rax],eax
   140026a4a:	add    BYTE PTR [rax+0x0],dl
   140026a4d:	add    BYTE PTR [rax],al
   140026a4f:	add    BYTE PTR [rax+rax*1],dl
   140026a52:	mov    es,WORD PTR [rax]
   140026a54:	sub    BYTE PTR [rax],al
   140026a56:	or     al,BYTE PTR [rax]
   140026a58:	outs   dx,BYTE PTR ds:[rsi]
   140026a59:	add    bh,bh
   140026a5b:	inc    DWORD PTR [rax+0x61005200]
   140026a61:	add    BYTE PTR [rax+rax*1+0x69],dh
   140026a65:	add    BYTE PTR [rdi+0x0],ch
   140026a68:	outs   dx,BYTE PTR ds:[rsi]
   140026a69:	add    BYTE PTR [rcx+0x0],ah
   140026a6c:	ins    BYTE PTR es:[rdi],dx
   140026a6d:	add    BYTE PTR [rax],al
   140026a6f:	add    BYTE PTR [rax],al
   140026a71:	add    BYTE PTR [rax],al
   140026a73:	add    BYTE PTR [rcx],cl
   140026a75:	add    BYTE PTR [rbx],al
   140026a77:	push   rax
   140026a78:	add    BYTE PTR [rax],al
   140026a7a:	add    BYTE PTR [rax],al
   140026a7c:	adc    al,0x0
   140026a7e:	movabs ds:0xff006f000a003f00,al
   140026a87:	inc    DWORD PTR [rax+0x6f004c00]
   140026a8d:	add    BYTE PTR [rdi+0x0],ch
   140026a90:	jae    0x140026a92
   140026a92:	add    BYTE PTR gs:[rax],ah
   140026a95:	add    BYTE PTR [rax],ch
   140026a97:	add    BYTE PTR [rax+rax*1+0x65],ah
   140026a9b:	add    BYTE PTR [rsi+0x0],ah
   140026a9e:	(bad)  
   140026a9f:	add    BYTE PTR [rbp+0x0],dh
   140026aa2:	ins    BYTE PTR es:[rdi],dx
   140026aa3:	add    BYTE PTR [rax+rax*1+0x29],dh
   140026aa7:	add    BYTE PTR [rax],al
   140026aa9:	add    BYTE PTR [rax],al
   140026aab:	add    BYTE PTR [rcx],cl
   140026aad:	add    BYTE PTR [rax],al
   140026aaf:	push   rax
   140026ab0:	add    BYTE PTR [rax],al
   140026ab2:	add    BYTE PTR [rax],al
   140026ab4:	adc    al,0x0
   140026ab6:	mov    al,0x0
   140026ab8:	sub    BYTE PTR [rax],al
   140026aba:	or     al,BYTE PTR [rax]
   140026abc:	jo     0x140026abe
   140026abe:	(bad)  
   140026abf:	inc    DWORD PTR [rax+0x6f004300]
   140026ac5:	add    BYTE PTR [rbp+0x0],ch
   140026ac8:	jo     0x140026aca
   140026aca:	(bad)  
   140026acb:	add    BYTE PTR [rbx+0x0],ah
   140026ace:	je     0x140026ad0
   140026ad0:	add    BYTE PTR [rax],al
   140026ad2:	add    BYTE PTR [rax],al
   140026ad4:	or     DWORD PTR [rax],eax
   140026ad6:	add    edx,DWORD PTR [rax+0x0]
   140026ad9:	add    BYTE PTR [rax],al
   140026adb:	add    BYTE PTR [rbx+0x0],ah
   140026ade:	sldt   WORD PTR [rcx+0x0]
   140026ae2:	or     al,BYTE PTR [rax]
   140026ae4:	add    DWORD PTR [rax],0xffffffff
   140026ae7:	inc    DWORD PTR [rax+0x75004200]
   140026aed:	add    BYTE PTR [rcx+0x0],ch
   140026af0:	ins    BYTE PTR es:[rdi],dx
   140026af1:	add    BYTE PTR [rax+rax*1+0x2d],dh
   140026af5:	add    BYTE PTR [rcx+0x0],ch
   140026af8:	outs   dx,BYTE PTR ds:[rsi]
   140026af9:	add    BYTE PTR [rax],ah
   140026afb:	add    BYTE PTR [rbp+0x0],al
   140026afe:	add    BYTE PTR fs:[rcx+0x0],ch
   140026b02:	je     0x140026b04
   140026b04:	outs   dx,DWORD PTR ds:[rsi]
   140026b05:	add    BYTE PTR [rdx+0x0],dh
   140026b08:	add    BYTE PTR [rax],al
   140026b0a:	add    BYTE PTR [rax],al
   140026b0c:	or     DWORD PTR [rax],eax
   140026b0e:	add    BYTE PTR [rax+0x0],dl
   140026b11:	add    BYTE PTR [rax],al
   140026b13:	add    BYTE PTR [rbx+0x0],ah
   140026b16:	sbb    eax,DWORD PTR [rax]
   140026b18:	or     al,BYTE PTR [rax]
   140026b1a:	or     al,BYTE PTR [rax]
   140026b1c:	test   BYTE PTR [rax],al
   140026b1e:	(bad)  
   140026b1f:	inc    DWORD PTR [rax+0x0]
   140026b25:	add    BYTE PTR [rax],al
   140026b27:	add    BYTE PTR [rax+0x508100],al
   140026b2d:	add    BYTE PTR [rax],al
   140026b2f:	add    BYTE PTR [rsi+0x0],ch
   140026b32:	sbb    eax,DWORD PTR [rax]
   140026b34:	jae    0x140026b36
   140026b36:	or     al,0x0
   140026b38:	jae    0x140026b3a
   140026b3a:	(bad)  
   140026b3b:	inc    DWORD PTR [rcx+0x0]
   140026b41:	add    BYTE PTR [rax],al
   140026b43:	add    BYTE PTR [rax],al
   140026b45:	add    BYTE PTR [rax],al
   140026b47:	push   rax
   140026b48:	add    BYTE PTR [rax],al
   140026b4a:	add    BYTE PTR [rax],al
   140026b4c:	out    0x0,al
   140026b4e:	(bad)  
   140026b4f:	add    BYTE PTR [rbx],ah
   140026b51:	add    BYTE PTR [rbx],dl
   140026b53:	add    BYTE PTR [rax+rax*1-0x1],dh
   140026b57:	inc    DWORD PTR [rax+0x72004200]
   140026b5d:	add    BYTE PTR [rdi+0x0],ch
   140026b60:	ja     0x140026b62
   140026b62:	jae    0x140026b64
   140026b64:	add    BYTE PTR gs:[rsi],ch
   140026b67:	add    BYTE PTR [rsi],ch
   140026b69:	add    BYTE PTR [rsi],ch
   140026b6b:	add    BYTE PTR [rax],al
   140026b6d:	add    BYTE PTR [rax],al
   140026b6f:	add    BYTE PTR [rbx],al
   140026b71:	add    BYTE PTR [rcx],al
   140026b73:	push   rax
   140026b74:	add    BYTE PTR [rax],al
   140026b76:	add    BYTE PTR [rax],al
   140026b78:	(bad)  
   140026b79:	add    BYTE PTR [rax+0x0],dh
   140026b7c:	sub    DWORD PTR [rax],eax
   140026b7e:	or     al,BYTE PTR [rax]
   140026b80:	jns    0x140026b82
   140026b82:	(bad)  
   140026b83:	inc    DWORD PTR [rax+0x63004500]
   140026b89:	add    BYTE PTR [rax+0x0],ch
   140026b8c:	outs   dx,DWORD PTR ds:[rsi]
   140026b8d:	add    BYTE PTR [rax],ah
   140026b8f:	add    BYTE PTR [rdi+0x0],cl
   140026b92:	outs   dx,BYTE PTR ds:[rsi]
   140026b93:	add    BYTE PTR [rax],al
   140026b95:	add    BYTE PTR [rax],al
   140026b97:	add    BYTE PTR [rbx],al
   140026b99:	add    BYTE PTR [rcx],al
   140026b9b:	push   rax
   140026b9c:	add    BYTE PTR [rax],al
   140026b9e:	add    BYTE PTR [rax],al
   140026ba0:	(bad)  
   140026ba1:	add    BYTE PTR [rbp+0x0],bh
   140026ba4:	cmp    al,0x0
   140026ba6:	or     al,BYTE PTR [rax]
   140026ba8:	add    BYTE PTR [rax],0xff
   140026bab:	inc    DWORD PTR [rax+0x68005300]
   140026bb1:	add    BYTE PTR [rdi+0x0],ch
   140026bb4:	ja     0x140026bb6
   140026bb6:	and    BYTE PTR [rax],al
   140026bb8:	push   rsp
   140026bb9:	add    BYTE PTR [rdi+0x0],ch
   140026bbc:	outs   dx,DWORD PTR ds:[rsi]
   140026bbd:	add    BYTE PTR [rax+rax*1+0x62],ch
   140026bc1:	add    BYTE PTR [rcx+0x0],ah
   140026bc4:	jb     0x140026bc6
   140026bc6:	add    BYTE PTR [rax],al
   140026bc8:	add    BYTE PTR [rax],al
   140026bca:	add    BYTE PTR [rax],al
   140026bcc:	add    esp,DWORD PTR [rax]
   140026bce:	add    DWORD PTR [rax+0x0],edx
   140026bd1:	add    BYTE PTR [rax],al
   140026bd3:	add    BYTE PTR [rax+0x0],ah
   140026bd6:	mov    eax,DWORD PTR [rax]
   140026bd8:	rex.RXB add BYTE PTR [r10],r10b
   140026bdb:	add    BYTE PTR [rcx-0x7f000100],al
   140026be1:	add    BYTE PTR [rbp+0x0],al
   140026be4:	outs   dx,BYTE PTR ds:[rsi]
   140026be5:	add    BYTE PTR [rcx+0x0],ah
   140026be8:	(bad)  
   140026be9:	add    BYTE PTR [rax+rax*1+0x65],ch
   140026bed:	add    BYTE PTR [rax],ah
   140026bef:	add    BYTE PTR [rdi+0x0],al
   140026bf2:	jb     0x140026bf4
   140026bf4:	(bad)  
   140026bf5:	add    BYTE PTR [rax+0x0],dh
   140026bf8:	push   0x63006900
   140026bfd:	add    BYTE PTR [rcx+0x0],ah
   140026c00:	ins    BYTE PTR es:[rdi],dx
   140026c01:	add    BYTE PTR [rax],ah
   140026c03:	add    BYTE PTR [rax+rax*1+0x65],al
   140026c07:	add    BYTE PTR [rdx+0x0],ah
   140026c0a:	jne    0x140026c0c
   140026c0c:	add    BYTE PTR [edi+0x0],ah
   140026c10:	imul   eax,DWORD PTR [rax],0x67006e
   140026c16:	add    BYTE PTR [rax],al
   140026c18:	add    BYTE PTR [rax],al
   140026c1a:	add    BYTE PTR [rax],al
   140026c1c:	(bad)  
   140026c1d:	add    BYTE PTR [rax],al
   140026c1f:	push   rax
   140026c20:	add    BYTE PTR [rax],al
   140026c22:	add    BYTE PTR [rax],al
   140026c24:	adc    BYTE PTR [rax],al
   140026c26:	add    al,0x0
   140026c28:	rex.RX add BYTE PTR [rdx-0xff7900],r11b
   140026c2f:	inc    DWORD PTR [rax+0x75004e00]
   140026c35:	add    BYTE PTR [rbp+0x0],ch
   140026c38:	add    BYTE PTR gs:[rdx+0x0],dh
   140026c3c:	imul   eax,DWORD PTR [rax],0x200063
   140026c42:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140026c46:	jb     0x140026c48
   140026c48:	ins    DWORD PTR es:[rdi],dx
   140026c49:	add    BYTE PTR [rcx+0x0],ah
   140026c4c:	je     0x140026c4e
   140026c4e:	add    BYTE PTR [rax],al
   140026c50:	add    BYTE PTR [rax],al
   140026c52:	add    BYTE PTR [rax],al
   140026c54:	(bad)  
   140026c55:	add    BYTE PTR [rax],al
   140026c57:	push   rax
   140026c58:	add    BYTE PTR [rax],al
   140026c5a:	add    BYTE PTR [rax],al
   140026c5c:	adc    BYTE PTR [rax],al
   140026c5e:	(bad)  
   140026c5f:	add    BYTE PTR [rsi+0x0],al
   140026c62:	and    eax,0xff008800
   140026c67:	inc    DWORD PTR [rax+0x0]
   140026c6d:	add    BYTE PTR [rax],al
   140026c6f:	add    BYTE PTR [rdi],al
   140026c71:	add    BYTE PTR [rax],al
   140026c73:	push   rax
   140026c74:	add    BYTE PTR [rax],al
   140026c76:	add    BYTE PTR [rax],al
   140026c78:	pop    rdi
   140026c79:	add    BYTE PTR [rax+rax*1],al
   140026c7c:	mov    dl,0x0
   140026c7e:	sub    DWORD PTR [rax],eax
   140026c80:	mov    DWORD PTR [rax],eax
   140026c82:	(bad)  
   140026c83:	inc    DWORD PTR [rax+0x64004500]
   140026c89:	add    BYTE PTR [rcx+0x0],ch
   140026c8c:	je     0x140026c8e
   140026c8e:	outs   dx,DWORD PTR ds:[rsi]
   140026c8f:	add    BYTE PTR [rdx+0x0],dh
   140026c92:	and    BYTE PTR [rax],al
   140026c94:	push   rax
   140026c95:	add    BYTE PTR [rdx+0x0],dh
   140026c98:	add    BYTE PTR gs:[rsi+0x0],ah
   140026c9c:	add    BYTE PTR gs:[rdx+0x0],dh
   140026ca0:	add    BYTE PTR gs:[rsi+0x0],ch
   140026ca4:	movsxd eax,DWORD PTR [rax]
   140026ca6:	add    BYTE PTR gs:[rax],al
   140026ca9:	add    BYTE PTR [rax],al
   140026cab:	add    BYTE PTR [rax+0x508100],al
   140026cb1:	add    BYTE PTR [rax],al
   140026cb3:	add    BYTE PTR [rsi+0x0],ch
   140026cb6:	rex.WB add BYTE PTR [r11+0x0],sil
   140026cba:	or     al,0x0
   140026cbc:	ja     0x140026cbe
   140026cbe:	(bad)  
   140026cbf:	inc    DWORD PTR [rcx+0x0]
   140026cc5:	add    BYTE PTR [rax],al
   140026cc7:	add    BYTE PTR [rax],al
   140026cc9:	add    BYTE PTR [rax],al
   140026ccb:	push   rax
   140026ccc:	add    BYTE PTR [rax],al
   140026cce:	add    BYTE PTR [rax],al
   140026cd0:	out    0x0,al
   140026cd2:	add    BYTE PTR [r11],r12b
   140026cd5:	add    BYTE PTR [rbx],dl
   140026cd7:	add    BYTE PTR [rax+0x0],bh
   140026cda:	(bad)  
   140026cdb:	inc    DWORD PTR [rax+0x72004200]
   140026ce1:	add    BYTE PTR [rdi+0x0],ch
   140026ce4:	ja     0x140026ce6
   140026ce6:	jae    0x140026ce8
   140026ce8:	add    BYTE PTR gs:[rsi],ch
   140026ceb:	add    BYTE PTR [rsi],ch
   140026ced:	add    BYTE PTR [rsi],ch
   140026cef:	add    BYTE PTR [rax],al
   140026cf1:	add    BYTE PTR [rax],al
   140026cf3:	add    BYTE PTR [rdi],al
   140026cf5:	add    BYTE PTR [rax],al
   140026cf7:	push   rax
   140026cf8:	add    BYTE PTR [rax],al
   140026cfa:	add    BYTE PTR [rax],al
   140026cfc:	pop    rdi
   140026cfd:	add    BYTE PTR [rdx],bh
   140026cff:	add    BYTE PTR [rdx-0x74ffda00],dh
   140026d05:	add    bh,bh
   140026d07:	inc    DWORD PTR [rax+0x65004800]
   140026d0d:	add    BYTE PTR [rax+rax*1+0x70],ch
   140026d11:	add    BYTE PTR [rax],ah
   140026d13:	add    BYTE PTR [rax+rax*1+0x69],al
   140026d17:	add    BYTE PTR [rdx+0x0],dh
   140026d1a:	add    BYTE PTR gs:[rbx+0x0],ah
   140026d1e:	je     0x140026d20
   140026d20:	outs   dx,DWORD PTR ds:[rsi]
   140026d21:	add    BYTE PTR [rdx+0x0],dh
   140026d24:	jns    0x140026d26
   140026d26:	add    BYTE PTR [rax],al
   140026d28:	add    BYTE PTR [rax],al
   140026d2a:	add    BYTE PTR [rax],al
   140026d2c:	(bad)  
   140026d2d:	add    BYTE PTR [rax],al
   140026d2f:	push   rax
   140026d30:	add    BYTE PTR [rax],al
   140026d32:	add    BYTE PTR [rax],al
   140026d34:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140026d35:	add    BYTE PTR [rdi+0x0],ah
   140026d38:	ins    BYTE PTR es:[rdi],dx
   140026d39:	add    BYTE PTR [rsi+0x0],dl
   140026d3c:	mov    WORD PTR [rax],es
   140026d3e:	(bad)  
   140026d3f:	inc    DWORD PTR [rax+0x72005000]
   140026d45:	add    BYTE PTR [rcx+0x0],ch
   140026d48:	outs   dx,BYTE PTR ds:[rsi]
   140026d49:	add    BYTE PTR [rax+rax*1+0x20],dh
   140026d4d:	add    BYTE PTR [rax+0x0],dl
   140026d50:	jb     0x140026d52
   140026d52:	add    BYTE PTR gs:[rsi+0x0],ah
   140026d56:	add    BYTE PTR gs:[rdx+0x0],dh
   140026d5a:	add    BYTE PTR gs:[rsi+0x0],ch
   140026d5e:	movsxd eax,DWORD PTR [rax]
   140026d60:	add    BYTE PTR gs:[rbx+0x0],dh
   140026d64:	add    BYTE PTR [rax],al
   140026d66:	add    BYTE PTR [rax],al
   140026d68:	add    BYTE PTR [rax],al
   140026d6a:	add    dl,BYTE PTR [rax+0x0]
   140026d6d:	add    BYTE PTR [rax],al
   140026d6f:	add    BYTE PTR [rdi+0x62007300],ch
   140026d75:	add    BYTE PTR [rdx],dl
   140026d77:	add    BYTE PTR [rcx-0x7d000100],dl
   140026d7d:	add    BYTE PTR [rbx+0x0],dl
   140026d80:	jo     0x140026d82
   140026d82:	add    BYTE PTR gs:[rbx+0x0],ah
   140026d86:	imul   eax,DWORD PTR [rax],0x790066
   140026d8c:	and    BYTE PTR [rax],al
   140026d8e:	push   0x77006f00
   140026d93:	add    BYTE PTR [rax],ah
   140026d95:	add    BYTE PTR [rbx+0x0],ah
   140026d98:	outs   dx,DWORD PTR ds:[rsi]
   140026d99:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140026d9d:	add    BYTE PTR [rdx+0x0],dh
   140026da0:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140026da5:	add    BYTE PTR [rax+rax*1+0x69],ch
   140026da9:	add    BYTE PTR [rsi+0x0],ch
   140026dac:	add    BYTE PTR gs:[rbx+0x0],dh
   140026db0:	and    BYTE PTR [rax],al
   140026db2:	(bad)  
   140026db3:	add    BYTE PTR [rsi+0x0],ch
   140026db6:	add    BYTE PTR fs:[rax],ah
   140026db9:	add    BYTE PTR [rax+rax*1+0x65],dh
   140026dbd:	add    BYTE PTR [rax+0x0],bh
   140026dc0:	je     0x140026dc2
   140026dc2:	and    BYTE PTR [rax],al
   140026dc4:	(bad)  
   140026dc5:	add    BYTE PTR [rdx+0x0],dh
   140026dc8:	add    BYTE PTR gs:[rax],ah
   140026dcb:	add    BYTE PTR [rbx+0x0],dh
   140026dce:	add    BYTE PTR gs:[rsi+0x0],ch
   140026dd2:	je     0x140026dd4
   140026dd4:	and    BYTE PTR [rax],al
   140026dd6:	je     0x140026dd8
   140026dd8:	outs   dx,DWORD PTR ds:[rsi]
   140026dd9:	add    BYTE PTR [rax],ah
   140026ddb:	add    BYTE PTR [rax+0x0],dh
   140026dde:	jb     0x140026de0
   140026de0:	imul   eax,DWORD PTR [rax],0x74006e
   140026de6:	add    BYTE PTR gs:[rdx+0x0],dh
   140026dea:	add    BYTE PTR [rax],al
   140026dec:	add    BYTE PTR [rax],al
   140026dee:	add    BYTE PTR [rax],al
   140026df0:	or     DWORD PTR [rax],esp
   140026df2:	add    edx,DWORD PTR [rax+0x0]
   140026df5:	add    BYTE PTR [rax],al
   140026df7:	add    BYTE PTR [rax+rax*1+0x630087],ch
   140026dfe:	or     al,BYTE PTR [rax]
   140026e00:	lea    eax,[rax]
   140026e02:	(bad)  
   140026e03:	inc    DWORD PTR [rax+0x73005500]
   140026e09:	add    BYTE PTR [rbp+0x0],ah
   140026e0c:	and    BYTE PTR [rax],al
   140026e0e:	add    BYTE PTR fs:[rbp+0x0],ah
   140026e12:	data16 add BYTE PTR [rcx+0x0],ah
   140026e16:	jne    0x140026e18
   140026e18:	ins    BYTE PTR es:[rdi],dx
   140026e19:	add    BYTE PTR [rax+rax*1+0x20],dh
   140026e1d:	add    BYTE PTR [rax],ch
   140026e1f:	add    BYTE PTR [rax],al
   140026e21:	add    BYTE PTR [rax],al
   140026e23:	add    BYTE PTR [rcx],cl
   140026e25:	add    BYTE PTR [rax],al
   140026e27:	push   rax
   140026e28:	add    BYTE PTR [rax],al
   140026e2a:	add    BYTE PTR [rax],al
   140026e2c:	lods   al,BYTE PTR ds:[rsi]
   140026e2d:	add    BYTE PTR [rax+rax*1+0xa0055],dl
   140026e34:	mov    es,WORD PTR [rax]
   140026e36:	(bad)  
   140026e37:	inc    DWORD PTR [rax+0x76004f00]
   140026e3d:	add    BYTE PTR [rbp+0x0],ah
   140026e40:	jb     0x140026e42
   140026e42:	jb     0x140026e44
   140026e44:	imul   eax,DWORD PTR [rax],0x650064
   140026e4a:	and    BYTE PTR [rax],al
   140026e4c:	add    BYTE PTR fs:[rbp+0x0],ah
   140026e50:	data16 add BYTE PTR [rcx+0x0],ah
   140026e54:	jne    0x140026e56
   140026e56:	ins    BYTE PTR es:[rdi],dx
   140026e57:	add    BYTE PTR [rax+rax*1+0x3a],dh
   140026e5b:	add    BYTE PTR [rax],al
   140026e5d:	add    BYTE PTR [rax],al
   140026e5f:	add    BYTE PTR [rcx],cl
   140026e61:	add    BYTE PTR [rdx],al
   140026e63:	push   rax
   140026e64:	add    BYTE PTR [rax],al
   140026e66:	add    BYTE PTR [rax],al
   140026e68:	mov    ebp,0x46009e00
   140026e6d:	add    BYTE PTR [rdx],cl
   140026e6f:	add    BYTE PTR [rdi-0x7f000100],cl
   140026e75:	add    BYTE PTR [rdx+0x0],al
   140026e78:	ins    BYTE PTR es:[rdi],dx
   140026e79:	add    BYTE PTR [rcx+0x0],ah
   140026e7c:	movsxd eax,DWORD PTR [rax]
   140026e7e:	imul   eax,DWORD PTR [rax],0x20
   140026e81:	add    BYTE PTR [rcx+0x0],ah
   140026e84:	outs   dx,BYTE PTR ds:[rsi]
   140026e85:	add    BYTE PTR [rax+rax*1+0x20],ah
   140026e89:	add    BYTE PTR [rdi+0x0],dh
   140026e8c:	push   0x74006900
   140026e91:	add    BYTE PTR [rbp+0x0],ah
   140026e94:	add    BYTE PTR [rax],al
   140026e96:	add    BYTE PTR [rax],al
   140026e98:	or     DWORD PTR [rax],eax
   140026e9a:	add    BYTE PTR [rax+0x0],dl
   140026e9d:	add    BYTE PTR [rax],al
   140026e9f:	add    BYTE PTR [rbp+0x2700aa00],bh
   140026ea5:	add    BYTE PTR [rdx],cl
   140026ea7:	add    BYTE PTR [rax-0x7f000100],dl
   140026ead:	add    BYTE PTR [rbx+0x0],al
   140026eb0:	outs   dx,DWORD PTR ds:[rsi]
   140026eb1:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140026eb5:	add    BYTE PTR [rdx+0x0],dh
   140026eb8:	add    BYTE PTR [rax],al
   140026eba:	add    BYTE PTR [rax],al
   140026ebc:	rol    BYTE PTR [rax],0xc8
   140026ebf:	nop
   140026ec0:	add    BYTE PTR [rax],al
   140026ec2:	add    BYTE PTR [rax],al
   140026ec4:	or     DWORD PTR [rax],eax
   140026ec6:	add    BYTE PTR [rax],al
   140026ec8:	add    BYTE PTR [rax],al
   140026eca:	rol    DWORD PTR [rax],cl
   140026ecc:	mov    bh,0x0
   140026ece:	add    BYTE PTR [rax],al
   140026ed0:	add    BYTE PTR [rax],al
   140026ed2:	mov    bl,0x30
   140026ed4:	(bad)  
   140026ed5:	xor    ah,bh
   140026ed7:	xor    BYTE PTR [rax],ah
   140026ed9:	add    BYTE PTR [rdx-0x48cf28d0],ch
   140026edf:	xor    bh,ah
   140026ee1:	xor    bl,dh
   140026ee3:	xor    BYTE PTR [rax],al
   140026ee5:	add    BYTE PTR [rcx],cl
   140026ee7:	add    BYTE PTR [rip+0x20ff33ff],ch        # 0x16101a2ec
   140026eed:	add    BYTE PTR [rax],dh
   140026eef:	push   QWORD PTR [rax+rsi*1+0x30c330b7]
   140026ef6:	scas   eax,DWORD PTR es:[rdi]
   140026ef7:	xor    BYTE PTR [rax],al
   140026ef9:	add    BYTE PTR [rax],al
   140026efb:	add    BYTE PTR [rcx],cl
   140026efd:	add    BYTE PTR [rax],al
   140026eff:	push   rax
   140026f00:	add    BYTE PTR [rax],al
   140026f02:	add    BYTE PTR [rax],al
   140026f04:	lldt   WORD PTR [rax+rax*1]
   140026f08:	rex.WXB add BYTE PTR [r8+r8*1],cl
   140026f0c:	call   0xc1026e14
   140026f11:	add    BYTE PTR [rdi+0x0],dl
   140026f14:	imul   eax,DWORD PTR [rax],0x64006e
   140026f1a:	outs   dx,DWORD PTR ds:[rsi]
   140026f1b:	add    BYTE PTR [rdi+0x0],dh
   140026f1e:	jae    0x140026f20
   140026f20:	and    BYTE PTR [rax],al
   140026f22:	loope  0x140026f54
   140026f24:	mov    edi,0xa130d530
   140026f29:	xor    BYTE PTR [rax+rsi*1+0x30eb],ah
   140026f30:	add    BYTE PTR [rax],al
   140026f32:	add    BYTE PTR [rax],al
   140026f34:	or     DWORD PTR [rax],eax
   140026f36:	add    BYTE PTR [rax+0x0],dl
   140026f39:	add    BYTE PTR [rax],al
   140026f3b:	add    BYTE PTR [rdi],cl
   140026f3d:	add    BYTE PTR [rbx],ah
   140026f3f:	add    BYTE PTR [rsi+0x0],al
   140026f42:	verw   cx
   140026f45:	add    edi,edi
   140026f47:	inc    DWORD PTR [rax+0x69005700]
   140026f4d:	add    BYTE PTR [rsi+0x0],ch
   140026f50:	add    BYTE PTR fs:[rdi+0x0],ch
   140026f54:	ja     0x140026f56
   140026f56:	jae    0x140026f58
   140026f58:	and    BYTE PTR [rax],al
   140026f5a:	shl    DWORD PTR [rax],cl
   140026f5c:	ret    
   140026f5d:	xor    al,cl
   140026f5f:	xor    dh,bl
   140026f61:	xor    bl,al
   140026f63:	xor    bh,dl
   140026f65:	xor    BYTE PTR [rax],al
   140026f67:	add    BYTE PTR [rax],al
   140026f69:	add    BYTE PTR [rax],al
   140026f6b:	add    BYTE PTR [rbx],al
   140026f6d:	add    BYTE PTR [rcx],al
   140026f6f:	push   rax
   140026f70:	add    BYTE PTR [rax],al
   140026f72:	add    BYTE PTR [rax],al
   140026f74:	sldt   WORD PTR [rcx+0x0]
   140026f78:	lea    eax,[rax]
   140026f7a:	or     eax,0xff03ea00
   140026f7f:	inc    DWORD PTR [rax+0x69004600]
   140026f85:	add    BYTE PTR [rdi+0x0],ah
   140026f88:	jne    0x140026f8a
   140026f8a:	jb     0x140026f8c
   140026f8c:	add    BYTE PTR gs:[rsi+0x30],ch
   140026f90:	mov    ecx,0xea30af30
   140026f95:	xor    ah,bh
   140026f97:	xor    bl,dh
   140026f99:	xor    BYTE PTR [rbp-0x45cf5bd0],dh
   140026f9f:	xor    BYTE PTR [rbx+0x30],ch
   140026fa2:	or     BYTE PTR [rdi+rcx*4+0x30],dl
   140026fa6:	pop    rbx
   140026fa7:	xor    BYTE PTR [rbx+0x30],cl
   140026fad:	add    BYTE PTR [rax],al
   140026faf:	add    BYTE PTR [rax],al
   140026fb1:	add    BYTE PTR [rdx],al
   140026fb3:	push   rax
   140026fb4:	add    BYTE PTR [rax],al
   140026fb6:	add    BYTE PTR [rax],al
   140026fb8:	adc    eax,0xae005100
   140026fbd:	add    BYTE PTR [rdx],ah
   140026fbf:	add    bh,bh
   140026fc1:	(bad)  
   140026fc2:	(bad)  
   140026fc3:	inc    DWORD PTR [rdx+0x6e305300]
   140026fc9:	xor    BYTE PTR [rdx-0x48cf28d0],ch
   140026fcf:	xor    bh,ah
   140026fd1:	xor    bl,dh
   140026fd3:	xor    BYTE PTR [rdx-0x616f87d0],dl
   140026fd9:	(bad)  
   140026fda:	pop    rcx
   140026fdb:	xor    BYTE PTR [rbx-0x46cf97d0],cl
   140026fe1:	xor    BYTE PTR [rdi-0x3cf15d0],ch
   140026fe7:	xor    bl,dh
   140026fe9:	xor    BYTE PTR [rdx],cl
   140026feb:	rex.WRX push 0x58540c30
   140026ff1:	xor    BYTE PTR [rax+rsi*1+0x30fc30e1],ah
   140026ff8:	mov    eax,0xb3309230
   140026ffd:	xor    ah,dl
   140026fff:	xor    ah,bh
   140027001:	xor    BYTE PTR [rdi+0x30],dl
   140027004:	jle    0x140027036
   140027006:	pop    rcx
   140027007:	xor    BYTE PTR [rdx],al
   140027009:	xor    BYTE PTR [rax-0x70],bh
   14002700c:	sahf   
   14002700d:	(bad)  
   14002700e:	push   rdi
   14002700f:	xor    BYTE PTR [rdx+0x30],ch
   140027012:	xor    BYTE PTR [rax+rbx*2],r14b
   140027016:	or     BYTE PTR [rdi+rbp*2+0x30],dl
   14002701a:	add    DWORD PTR [rax],esi
   14002701c:	mov    ch,0x30
   14002701e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002701f:	xor    BYTE PTR [rdx-0x25cf94d0],bh
   140027025:	xor    ah,bh
   140027027:	xor    BYTE PTR [rax-0x6575d2d0],bh
   14002702d:	pop    rbx
   14002702e:	rex.WR xor BYTE PTR [rdi+0x4f],r15b
   140027032:	(bad)  
   140027033:	xor    BYTE PTR [rax+rsi*1+0x3059307e],cl
   14002703a:	add    dh,BYTE PTR [rax]
   14002703c:	add    BYTE PTR [rax],al
   14002703e:	add    BYTE PTR [rax],al
   140027040:	add    eax,DWORD PTR [rax]
   140027042:	add    DWORD PTR [rax+0x0],edx
   140027045:	add    BYTE PTR [rax],al
   140027047:	add    BYTE PTR [rdi],cl
   140027049:	add    BYTE PTR [rdi+0xf007c00],al
   14002704f:	add    bl,ch
   140027051:	add    edi,edi
   140027053:	inc    DWORD PTR [rax+0x6f80cc00]
   140027059:	xchg   dx,ax
   14002705b:	xor    BYTE PTR [rbp+0x76],bh
   14002705e:	rex.WRXB xor BYTE PTR [r8],r8b
   140027061:	add    BYTE PTR [rax],al
   140027063:	add    BYTE PTR [rax],al
   140027065:	add    BYTE PTR [rdx],al
   140027067:	push   rax
   140027068:	add    BYTE PTR [rax],al
   14002706a:	add    BYTE PTR [rax],al
   14002706c:	adc    al,0x0
   14002706e:	xchg   esi,eax
   14002706f:	add    BYTE PTR [rdi-0xffec00],ch
   140027075:	(bad)  
   140027076:	(bad)  
   140027077:	inc    DWORD PTR [rdx+0x6e305300]
   14002707d:	xor    BYTE PTR [rdx-0x48cf28d0],ch
   140027083:	xor    bh,ah
   140027085:	xor    bl,dh
   140027087:	xor    BYTE PTR [rdx-0x616f87d0],dl
   14002708d:	(bad)  
   14002708e:	pop    rcx
   14002708f:	xor    BYTE PTR [rbx+0x1306830],cl
   140027095:	xor    BYTE PTR [rsi+0x0],al
   140027098:	imul   eax,DWORD PTR [rax],0x750067
   14002709e:	jb     0x1400270a0
   1400270a0:	add    BYTE PTR gs:[rsi+0x30],ch
   1400270a4:	int3   
   1400270a5:	sub    BYTE PTR [rdi+0x66],0x92
   1400270a9:	xor    BYTE PTR [rbp+0x76],bh
   1400270ac:	rex.WRXB xor BYTE PTR [r15+0x30],r10b
   1400270b0:	data16 xor BYTE PTR [rbx-0x3cf2bd0],dh
   1400270b7:	xor    BYTE PTR [rdi+0x30],dl
   1400270ba:	jle    0x1400270ec
   1400270bc:	pop    rcx
   1400270bd:	xor    BYTE PTR [rdx],al
   1400270bf:	xor    BYTE PTR [rax],al
   1400270c1:	add    BYTE PTR [rax],al
   1400270c3:	add    BYTE PTR [rdi],al
   1400270c5:	add    BYTE PTR [rax],al
   1400270c7:	push   rax
   1400270c8:	add    BYTE PTR [rax],al
   1400270ca:	add    BYTE PTR [rax],al
   1400270cc:	or     al,BYTE PTR [rax]
   1400270ce:	add    eax,0x37006900
   1400270d3:	add    bh,bh
   1400270d5:	(bad)  
   1400270d6:	(bad)  
   1400270d7:	inc    DWORD PTR [rax-0x15cf5100]
   1400270dd:	xor    bl,al
   1400270df:	xor    bh,dl
   1400270e1:	xor    ah,bl
   1400270e3:	xor    ah,bh
   1400270e5:	xor    cl,cl
   1400270e7:	xor    BYTE PTR [rax],ah
   1400270e9:	add    ch,dl
   1400270eb:	xor    BYTE PTR [rcx-0x21cf03d0],ch
   1400270f1:	xor    bl,al
   1400270f3:	xor    al,cl
   1400270f5:	xor    BYTE PTR [rax],al
   1400270f7:	add    BYTE PTR [rax],al
   1400270f9:	add    BYTE PTR [rax],al
   1400270fb:	add    BYTE PTR [rdi],al
   1400270fd:	add    BYTE PTR [rax],al
   1400270ff:	push   rax
   140027100:	add    BYTE PTR [rax],al
   140027102:	add    BYTE PTR [rax],al
   140027104:	or     al,BYTE PTR [rax]
   140027106:	cmp    al,0x0
   140027108:	mov    esi,0xff003c00
   14002710d:	(bad)  
   14002710e:	(bad)  
   14002710f:	inc    DWORD PTR [rax+0x0]
   140027115:	add    BYTE PTR [rax],al
   140027117:	add    BYTE PTR [rdi],al
   140027119:	add    BYTE PTR [rax],al
   14002711b:	push   rax
   14002711c:	add    BYTE PTR [rax],al
   14002711e:	add    BYTE PTR [rax],al
   140027120:	or     al,BYTE PTR [rax]
   140027122:	jge    0x140027124
   140027124:	mov    esi,0xff003200
   140027129:	(bad)  
   14002712a:	(bad)  
   14002712b:	inc    DWORD PTR [rax+0x0]
   140027131:	add    BYTE PTR [rax+0x41],dl
   140027134:	rol    BYTE PTR [rax],0xc8
   140027137:	nop
   140027138:	add    BYTE PTR [rax],al
   14002713a:	add    BYTE PTR [rax],al
   14002713c:	or     DWORD PTR [rax],eax
   14002713e:	add    BYTE PTR [rax],al
   140027140:	add    BYTE PTR [rax],al
   140027142:	rol    DWORD PTR [rax],cl
   140027144:	mov    bh,0x0
   140027146:	add    BYTE PTR [rax],al
   140027148:	add    BYTE PTR [rax],al
   14002714a:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002714e:	jo     0x140027150
   140027150:	jns    0x140027152
   140027152:	imul   eax,DWORD PTR [rax],0x67006e
   140027158:	and    BYTE PTR [rax],al
   14002715a:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   14002715e:	je     0x140027160
   140027160:	imul   eax,DWORD PTR [rax],0x6e006f
   140027166:	jae    0x140027168
   140027168:	add    BYTE PTR [rax],al
   14002716a:	or     BYTE PTR [rax],al
   14002716c:	rex.WRB add BYTE PTR [r11+0x0],r10b
   140027170:	and    BYTE PTR [rax],al
   140027172:	push   rbx
   140027173:	add    BYTE PTR [rcx+0x0],ah
   140027176:	outs   dx,BYTE PTR ds:[rsi]
   140027177:	add    BYTE PTR [rbx+0x0],dh
   14002717a:	and    BYTE PTR [rax],al
   14002717c:	push   rbx
   14002717d:	add    BYTE PTR [rbp+0x0],ah
   140027180:	jb     0x140027182
   140027182:	imul   eax,DWORD PTR [rax],0x66
   140027188:	or     DWORD PTR [rax],eax
   14002718a:	add    BYTE PTR [rax+0x0],dl
   14002718d:	add    BYTE PTR [rax],al
   14002718f:	add    BYTE PTR [rdi],cl
   140027191:	add    BYTE PTR [rax+rax*1],dl
   140027194:	rex.WXB add BYTE PTR [r8+r8*1],cl
   140027198:	call   0xc10270a0
   14002719d:	add    BYTE PTR [rdi+0x0],dl
   1400271a0:	imul   eax,DWORD PTR [rax],0x64006e
   1400271a6:	outs   dx,DWORD PTR ds:[rsi]
   1400271a7:	add    BYTE PTR [rdi+0x0],dh
   1400271aa:	jae    0x1400271ac
   1400271ac:	and    BYTE PTR [rax],al
   1400271ae:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400271b2:	je     0x1400271b4
   1400271b4:	(bad)  
   1400271b5:	add    BYTE PTR [rsi+0x0],ah
   1400271b8:	imul   eax,DWORD PTR [rax],0x65006c
   1400271be:	add    BYTE PTR [rax],al
   1400271c0:	add    BYTE PTR [rax],al
   1400271c2:	add    BYTE PTR [rax],al
   1400271c4:	or     DWORD PTR [rax],eax
   1400271c6:	add    BYTE PTR [rax+0x0],dl
   1400271c9:	add    BYTE PTR [rax],al
   1400271cb:	add    BYTE PTR [rdi],cl
   1400271cd:	add    BYTE PTR [rbx],ah
   1400271cf:	add    BYTE PTR [rsi+0x0],al
   1400271d2:	verw   cx
   1400271d5:	add    edi,edi
   1400271d7:	inc    DWORD PTR [rax+0x69005700]
   1400271dd:	add    BYTE PTR [rsi+0x0],ch
   1400271e0:	add    BYTE PTR fs:[rdi+0x0],ch
   1400271e4:	ja     0x1400271e6
   1400271e6:	jae    0x1400271e8
   1400271e8:	and    BYTE PTR [rax],al
   1400271ea:	rex.X add BYTE PTR [rcx+0x0],bpl
   1400271ee:	je     0x1400271f0
   1400271f0:	ins    DWORD PTR es:[rdi],dx
   1400271f1:	add    BYTE PTR [rcx+0x0],ah
   1400271f4:	jo     0x1400271f6
   1400271f6:	add    BYTE PTR [rax],al
   1400271f8:	add    BYTE PTR [rax],al
   1400271fa:	add    BYTE PTR [rax],al
   1400271fc:	add    eax,DWORD PTR [rax]
   1400271fe:	add    DWORD PTR [rax+0x0],edx
   140027201:	add    BYTE PTR [rax],al
   140027203:	add    BYTE PTR [rdi],cl
   140027205:	add    BYTE PTR [rcx+0x0],al
   140027208:	lea    eax,[rax]
   14002720a:	or     eax,0xff03ea00
   14002720f:	inc    DWORD PTR [rax+0x61004d00]
   140027215:	add    BYTE PTR [rax+rax*1+0x63],dh
   140027219:	add    BYTE PTR [rax+0x0],ch
   14002721c:	and    BYTE PTR [rax],al
   14002721e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140027222:	add    BYTE PTR [ebp+0x0],dh
   140027226:	jb     0x140027228
   140027228:	add    BYTE PTR gs:[rax],ah
   14002722b:	add    BYTE PTR [rbx+0x0],dl
   14002722e:	movsxd eax,DWORD PTR [rax]
   140027230:	jb     0x140027232
   140027232:	add    BYTE PTR gs:[rbp+0x0],ah
   140027236:	outs   dx,BYTE PTR ds:[rsi]
   140027237:	add    BYTE PTR [rax],ah
   140027239:	add    BYTE PTR [rbx+0x0],dl
   14002723c:	imul   eax,DWORD PTR [rax],0x65007a
	...
   14002724a:	add    dl,BYTE PTR [rax+0x0]
   14002724d:	add    BYTE PTR [rax],al
   14002724f:	add    BYTE PTR [rip+0xffffffffae005100],dl        # 0xee02c355
   140027255:	add    BYTE PTR [rdx],ah
   140027257:	add    bh,bh
   140027259:	(bad)  
   14002725a:	(bad)  
   14002725b:	inc    DWORD PTR [rdx+0x65005300]
   140027261:	add    BYTE PTR [rax+rax*1+0x65],ch
   140027265:	add    BYTE PTR [rbx+0x0],ah
   140027268:	je     0x14002726a
   14002726a:	and    BYTE PTR [rax],al
   14002726c:	je     0x14002726e
   14002726e:	push   0x73006900
   140027273:	add    BYTE PTR [rax],ah
   140027275:	add    BYTE PTR [rdi+0x0],ch
   140027278:	jo     0x14002727a
   14002727a:	je     0x14002727c
   14002727c:	imul   eax,DWORD PTR [rax],0x6e006f
   140027282:	and    BYTE PTR [rax],al
   140027284:	je     0x140027286
   140027286:	outs   dx,DWORD PTR ds:[rsi]
   140027287:	add    BYTE PTR [rax],ah
   140027289:	add    BYTE PTR [rbx+0x0],ah
   14002728c:	outs   dx,DWORD PTR ds:[rsi]
   14002728d:	add    BYTE PTR [rax+0x0],dh
   140027290:	jns    0x140027292
   140027292:	and    BYTE PTR [rax],al
   140027294:	je     0x140027296
   140027296:	push   0x20006500
   14002729b:	add    BYTE PTR [rsi+0x0],ah
   14002729e:	imul   eax,DWORD PTR [rax],0x750067
   1400272a4:	jb     0x1400272a6
   1400272a6:	add    BYTE PTR gs:[rax],ah
   1400272a9:	add    BYTE PTR [rcx+0x0],ah
   1400272ac:	jae    0x1400272ae
   1400272ae:	and    BYTE PTR [rax],al
   1400272b0:	imul   eax,DWORD PTR [rax],0x200074
   1400272b6:	(bad)  
   1400272b7:	add    BYTE PTR [rax+0x0],dh
   1400272ba:	jo     0x1400272bc
   1400272bc:	add    BYTE PTR gs:[rcx+0x0],ah
   1400272c0:	jb     0x1400272c2
   1400272c2:	jae    0x1400272c4
   1400272c4:	and    BYTE PTR [rax],al
   1400272c6:	outs   dx,DWORD PTR ds:[rsi]
   1400272c7:	add    BYTE PTR [rsi+0x0],ch
   1400272ca:	and    BYTE PTR [rax],al
   1400272cc:	jae    0x1400272ce
   1400272ce:	movsxd eax,DWORD PTR [rax]
   1400272d0:	jb     0x1400272d2
   1400272d2:	add    BYTE PTR gs:[rbp+0x0],ah
   1400272d6:	outs   dx,BYTE PTR ds:[rsi]
   1400272d7:	add    BYTE PTR [rax+rax*1],ch
   1400272da:	and    BYTE PTR [rax],al
   1400272dc:	outs   dx,DWORD PTR ds:[rsi]
   1400272dd:	add    BYTE PTR [rdx+0x0],dh
   1400272e0:	and    BYTE PTR [rax],al
   1400272e2:	ins    BYTE PTR es:[rdi],dx
   1400272e3:	add    BYTE PTR [rbp+0x0],ah
   1400272e6:	(bad)  
   1400272e7:	add    BYTE PTR [rsi+0x0],dh
   1400272ea:	add    BYTE PTR gs:[rax],ah
   1400272ed:	add    BYTE PTR [rcx+0x0],ch
   1400272f0:	je     0x1400272f2
   1400272f2:	and    BYTE PTR [rax],al
   1400272f4:	jne    0x1400272f6
   1400272f6:	outs   dx,BYTE PTR ds:[rsi]
   1400272f7:	add    BYTE PTR [rbx+0x0],ah
   1400272fa:	push   0x63006500
   1400272ff:	add    BYTE PTR [rbx+0x0],ch
   140027302:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140027307:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002730b:	add    BYTE PTR [rax],ah
   14002730d:	add    BYTE PTR [rbp+0x0],dh
   140027310:	jae    0x140027312
   140027312:	add    BYTE PTR gs:[rax],ah
   140027315:	add    BYTE PTR [rax+rax*1+0x68],dh
   140027319:	add    BYTE PTR [rbp+0x0],ah
   14002731c:	and    BYTE PTR [rax],al
   14002731e:	push   rax
   14002731f:	add    BYTE PTR [rcx+0x0],ah
   140027322:	add    BYTE PTR [ebp+0x0],ah
   140027326:	and    BYTE PTR [rax],al
   140027328:	push   rbx
   140027329:	add    BYTE PTR [rbp+0x0],ah
   14002732c:	je     0x14002732e
   14002732e:	jne    0x140027330
   140027330:	jo     0x140027332
   140027332:	and    BYTE PTR [rax],al
   140027334:	jae    0x140027336
   140027336:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14002733b:	add    BYTE PTR [rcx+0x0],ch
   14002733e:	outs   dx,BYTE PTR ds:[rsi]
   14002733f:	add    BYTE PTR [rdi+0x0],ah
   140027342:	jae    0x140027344
   140027344:	and    BYTE PTR [rax],al
   140027346:	je     0x140027348
   140027348:	outs   dx,DWORD PTR ds:[rsi]
   140027349:	add    BYTE PTR [rax],ah
   14002734b:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002734f:	add    BYTE PTR [rax+rax*1+0x65],dh
   140027353:	add    BYTE PTR [rdx+0x0],dh
   140027356:	ins    DWORD PTR es:[rdi],dx
   140027357:	add    BYTE PTR [rcx+0x0],ch
   14002735a:	outs   dx,BYTE PTR ds:[rsi]
   14002735b:	add    BYTE PTR [rbp+0x0],ah
   14002735e:	and    BYTE PTR [rax],al
   140027360:	imul   eax,DWORD PTR [rax],0x730074
   140027366:	and    BYTE PTR [rax],al
   140027368:	jae    0x14002736a
   14002736a:	imul   eax,DWORD PTR [rax],0x65007a
   140027370:	add    BYTE PTR cs:[rax],al
   140027373:	add    BYTE PTR [rax],al
   140027375:	add    BYTE PTR [rax],al
   140027377:	add    BYTE PTR [rbx],al
   140027379:	add    BYTE PTR [rcx],al
   14002737b:	push   rax
   14002737c:	add    BYTE PTR [rax],al
   14002737e:	add    BYTE PTR [rax],al
   140027380:	sldt   WORD PTR [rdi+0xf007c00]
   140027387:	add    bl,ch
   140027389:	add    edi,edi
   14002738b:	inc    DWORD PTR [rax+0x68005700]
   140027391:	add    BYTE PTR [rcx+0x0],ch
   140027394:	je     0x140027396
   140027396:	add    BYTE PTR gs:[rax],ah
   140027399:	add    BYTE PTR [rdx+0x0],ah
   14002739c:	(bad)  
   14002739d:	add    BYTE PTR [rbx+0x0],ah
   1400273a0:	imul   eax,DWORD PTR [rax],0x67
   1400273a3:	add    BYTE PTR [rdx+0x0],dh
   1400273a6:	outs   dx,DWORD PTR ds:[rsi]
   1400273a7:	add    BYTE PTR [rbp+0x0],dh
   1400273aa:	outs   dx,BYTE PTR ds:[rsi]
   1400273ab:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400273af:	add    BYTE PTR [rax],al
   1400273b1:	add    BYTE PTR [rax],al
   1400273b3:	add    BYTE PTR [rax],al
   1400273b5:	add    BYTE PTR [rdx],al
   1400273b7:	push   rax
   1400273b8:	add    BYTE PTR [rax],al
   1400273ba:	add    BYTE PTR [rax],al
   1400273bc:	adc    al,0x0
   1400273be:	xchg   esi,eax
   1400273bf:	add    BYTE PTR [rdi-0xffec00],ch
   1400273c5:	(bad)  
   1400273c6:	(bad)  
   1400273c7:	inc    DWORD PTR [rdx+0x65005300]
   1400273cd:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400273d1:	add    BYTE PTR [rbx+0x0],ah
   1400273d4:	je     0x1400273d6
   1400273d6:	and    BYTE PTR [rax],al
   1400273d8:	je     0x1400273da
   1400273da:	push   0x73006900
   1400273df:	add    BYTE PTR [rax],ah
   1400273e1:	add    BYTE PTR [rdi+0x0],ch
   1400273e4:	jo     0x1400273e6
   1400273e6:	je     0x1400273e8
   1400273e8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400273ee:	and    BYTE PTR [rax],al
   1400273f0:	je     0x1400273f2
   1400273f2:	outs   dx,DWORD PTR ds:[rsi]
   1400273f3:	add    BYTE PTR [rax],ah
   1400273f5:	add    BYTE PTR [rbx+0x0],ah
   1400273f8:	outs   dx,DWORD PTR ds:[rsi]
   1400273f9:	add    BYTE PTR [rax+0x0],dh
   1400273fc:	jns    0x1400273fe
   1400273fe:	and    BYTE PTR [rax],al
   140027400:	je     0x140027402
   140027402:	push   0x20006500
   140027407:	add    BYTE PTR [rsi+0x0],ah
   14002740a:	imul   eax,DWORD PTR [rax],0x750067
   140027410:	jb     0x140027412
   140027412:	add    BYTE PTR gs:[rax],ah
   140027415:	add    BYTE PTR [rdi+0x0],dh
   140027418:	imul   eax,DWORD PTR [rax],0x680074
   14002741e:	and    BYTE PTR [rax],al
   140027420:	(bad)  
   140027421:	add    BYTE PTR [rax],ah
   140027423:	add    BYTE PTR [rdi+0x0],dh
   140027426:	push   0x74006900
   14002742b:	add    BYTE PTR [rbp+0x0],ah
   14002742e:	and    BYTE PTR [rax],al
   140027430:	(bad)  
   140027431:	add    BYTE PTR [rcx+0x0],ah
   140027434:	movsxd eax,DWORD PTR [rax]
   140027436:	imul   eax,DWORD PTR [rax],0x67
   140027439:	add    BYTE PTR [rdx+0x0],dh
   14002743c:	outs   dx,DWORD PTR ds:[rsi]
   14002743d:	add    BYTE PTR [rbp+0x0],dh
   140027440:	outs   dx,BYTE PTR ds:[rsi]
   140027441:	add    BYTE PTR [rax+rax*1+0x2e],ah
   140027445:	add    BYTE PTR [rax],al
   140027447:	add    BYTE PTR [rax],al
   140027449:	add    BYTE PTR [rax],al
   14002744b:	add    BYTE PTR [rdi],al
   14002744d:	add    BYTE PTR [rax],al
   14002744f:	push   rax
   140027450:	add    BYTE PTR [rax],al
   140027452:	add    BYTE PTR [rax],al
   140027454:	or     al,BYTE PTR [rax]
   140027456:	add    eax,0x37006900
   14002745b:	add    bh,bh
   14002745d:	(bad)  
   14002745e:	(bad)  
   14002745f:	inc    DWORD PTR [rax+0x6c004300]
   140027465:	add    BYTE PTR [rcx+0x0],ch
   140027468:	jo     0x14002746a
   14002746a:	(bad)  
   14002746b:	add    BYTE PTR [rdi+0x0],ch
   14002746e:	(bad)  
   14002746f:	add    BYTE PTR [rdx+0x0],dh
   140027472:	add    BYTE PTR fs:[rax],ah
   140027475:	add    BYTE PTR [rsi+0x0],al
   140027478:	outs   dx,DWORD PTR ds:[rsi]
   140027479:	add    BYTE PTR [rdx+0x0],dh
   14002747c:	ins    DWORD PTR es:[rdi],dx
   14002747d:	add    BYTE PTR [rcx+0x0],ah
   140027480:	je     0x140027482
   140027482:	add    BYTE PTR [rax],al
   140027484:	add    BYTE PTR [rax],al
   140027486:	add    BYTE PTR [rax],al
   140027488:	(bad)  
   140027489:	add    BYTE PTR [rax],al
   14002748b:	push   rax
   14002748c:	add    BYTE PTR [rax],al
   14002748e:	add    BYTE PTR [rax],al
   140027490:	or     al,BYTE PTR [rax]
   140027492:	cmp    al,0x0
   140027494:	mov    esi,0xff003c00
   140027499:	(bad)  
   14002749a:	(bad)  
   14002749b:	inc    DWORD PTR [rax+0x0]
   1400274a1:	add    BYTE PTR [rax],al
   1400274a3:	add    BYTE PTR [rdi],al
   1400274a5:	add    BYTE PTR [rax],al
   1400274a7:	push   rax
   1400274a8:	add    BYTE PTR [rax],al
   1400274aa:	add    BYTE PTR [rax],al
   1400274ac:	or     al,BYTE PTR [rax]
   1400274ae:	jge    0x1400274b0
   1400274b0:	mov    esi,0xff003200
   1400274b5:	(bad)  
   1400274b6:	(bad)  
   1400274b7:	inc    DWORD PTR [rax+0x0]
   1400274bd:	add    BYTE PTR [rax+0x41],dl
   1400274c0:	(bad)  
   1400274c1:	and    al,cl
   1400274c3:	add    BYTE PTR [rax],0x0
   1400274c6:	add    BYTE PTR [rax],al
   1400274c8:	verr   WORD PTR [rax+rax*1]
   1400274cc:	sbb    BYTE PTR [rax],al
   1400274ce:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400274cf:	add    BYTE PTR [rdi+0x0],al
   1400274d5:	add    BYTE PTR [rbx+0x304f95],cl
   1400274db:	add    BYTE PTR [rcx],cl
   1400274dd:	add    BYTE PTR [rip+0x20ff33ff],ch        # 0x16101a8e2
   1400274e3:	add    BYTE PTR [rax],dh
   1400274e5:	push   QWORD PTR [rax+rsi*1+0x30c330b7]
   1400274ec:	scas   eax,DWORD PTR es:[rdi]
   1400274ed:	xor    BYTE PTR [rax],al
   1400274ef:	add    BYTE PTR [rax],al
   1400274f1:	add    BYTE PTR [rdx],al
   1400274f3:	add    BYTE PTR [rax],al
   1400274f6:	add    BYTE PTR [rax],al
   1400274f8:	outs   dx,DWORD PTR ds:[rsi]
   1400274f9:	add    BYTE PTR [rsi+0x0],dl
   1400274fc:	and    DWORD PTR [rax],eax
   1400274fe:	or     BYTE PTR [rax],al
   140027500:	rex.X add al,0xff
   140027503:	inc    DWORD PTR [rdx-0x5ecf2b00]
   140027509:	xor    BYTE PTR [rax+rsi*1+0x540d30eb],ah
   140027510:	sub    BYTE PTR [rax],al
   140027512:	add    BYTE PTR es:[rsi+0x0],cl
   140027516:	sub    DWORD PTR [rax],eax
   140027518:	cmp    al,BYTE PTR [rax]
   14002751a:	add    BYTE PTR [rax],al
   14002751c:	add    BYTE PTR [rax],al
   14002751e:	add    BYTE PTR [rax],al
   140027520:	add    BYTE PTR [rcx+rax*4],0x40
   140027524:	add    BYTE PTR [rax],al
   140027526:	add    BYTE PTR [rax],al
   140027528:	outs   dx,DWORD PTR ds:[rsi]
   140027529:	add    BYTE PTR [rsi+0x0],dl
   14002752c:	and    DWORD PTR [rax],eax
   14002752e:	or     al,0x0
   140027530:	add    BYTE PTR [rdi+rdi*8],0xff
   140027534:	add    DWORD PTR [rax],0x0
   14002753a:	add    BYTE PTR [rax],al
   14002753c:	push   rbx
   14002753d:	adc    BYTE PTR [rcx+0x40],ah
   140027543:	add    BYTE PTR [rdi+0x0],ch
   140027546:	push   rsi
   140027547:	add    BYTE PTR [rcx],ah
   140027549:	add    BYTE PTR [rcx],cl
   14002754b:	add    BYTE PTR [rax+0x4],ah
   14002754e:	(bad)  
   14002754f:	inc    DWORD PTR [rbx+0x0]
   140027555:	add    BYTE PTR [rax],al
   140027557:	add    BYTE PTR [rax],al
   140027559:	add    BYTE PTR [rdx],al
   14002755b:	push   rax
   14002755c:	add    BYTE PTR [rax],al
   14002755e:	add    BYTE PTR [rax],al
   140027560:	add    eax,0x60000600
   140027565:	add    BYTE PTR [rcx],cl
   140027567:	add    bh,bh
   140027569:	(bad)  
   14002756a:	(bad)  
   14002756b:	inc    DWORD PTR [rdx-0x56cf2b00]
   140027571:	xor    bl,ch
   140027573:	xor    al,al
   140027575:	xor    BYTE PTR [rax],ch
   140027577:	add    BYTE PTR [rsi],ah
   140027579:	add    BYTE PTR [rsi+0x0],al
   14002757c:	sub    DWORD PTR [rax],eax
   14002757e:	cmp    al,BYTE PTR [rax]
   140027580:	add    BYTE PTR [rax],al
   140027582:	add    BYTE PTR [rax],al
   140027584:	add    BYTE PTR [rax],0x2
   140027587:	push   rax
   140027588:	add    BYTE PTR [rax],al
   14002758a:	add    BYTE PTR [rax],al
   14002758c:	add    eax,0x60001200
   140027591:	add    BYTE PTR [rcx],cl
   140027593:	add    BYTE PTR [rax+0x4],al
   140027596:	(bad)  
   140027597:	inc    DWORD PTR [rdx+0x0]
   14002759d:	add    BYTE PTR [rax],al
   14002759f:	add    BYTE PTR [rbx+0x10],dl
   1400275a2:	movabs eax,ds:0x2000050000000050
   1400275ab:	add    BYTE PTR [rax+rax*1+0x44],bl
   1400275af:	add    BYTE PTR [rcx+0x4],ah
   1400275b2:	(bad)  
   1400275b3:	inc    DWORD PTR [rbx+0x0]
   1400275b9:	add    BYTE PTR [rax],al
   1400275bb:	add    BYTE PTR [rax],al
   1400275bd:	add    BYTE PTR [rdx],al
   1400275bf:	add    BYTE PTR [rax],al
   1400275c2:	add    BYTE PTR [rax],al
   1400275c4:	outs   dx,DWORD PTR ds:[rsi]
   1400275c5:	add    BYTE PTR [rsi+0x0],dl
   1400275c8:	and    DWORD PTR [rax],eax
   1400275ca:	or     BYTE PTR [rax],al
   1400275cc:	rex.B add al,0xff
   1400275cf:	inc    DWORD PTR [rdx-0x5ecf2b00]
   1400275d5:	xor    BYTE PTR [rax+rsi*1+0x30bf30eb],ah
   1400275dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400275dd:	xor    bh,dl
   1400275df:	xor    BYTE PTR [rsi+0x30],ch
   1400275e2:	(bad)  
   1400275e3:	xor    BYTE PTR [rcx+0x2830c830],bh
   1400275e9:	add    BYTE PTR [rsi],ah
   1400275eb:	add    BYTE PTR [rax+rax*1+0x29],dl
   1400275ef:	add    BYTE PTR [rdx],bh
   1400275f1:	add    BYTE PTR [rax],al
   1400275f3:	add    BYTE PTR [rax],al
   1400275f5:	add    BYTE PTR [rax],al
   1400275f7:	add    BYTE PTR [rbx+0x0],al
   1400275fa:	movabs eax,ds:0x56006f0000000040
   140027603:	add    BYTE PTR [rcx],ah
   140027605:	add    BYTE PTR [rax+rax*1],ah
   140027608:	jo     0x14002760e
   14002760a:	(bad)  
   14002760b:	inc    DWORD PTR [rbp+0x0]
   140027611:	add    BYTE PTR [rax],al
   140027613:	add    BYTE PTR [rax],al
   140027615:	add    BYTE PTR [rdx],al
   140027617:	push   rax
   140027618:	add    BYTE PTR [rax],al
   14002761a:	add    BYTE PTR [rax],al
   14002761c:	add    eax,0x5c006800
   140027621:	add    BYTE PTR [rcx],cl
   140027623:	add    BYTE PTR [rbx+0x4],al
   140027626:	(bad)  
   140027627:	inc    DWORD PTR [rdx-0x16cf3700]
   14002762d:	xor    BYTE PTR [rax+rsi*1+0x2830d6],ah
   140027634:	add    BYTE PTR es:[rsi+0x0],dl
   140027638:	sub    DWORD PTR [rax],eax
   14002763a:	cmp    al,BYTE PTR [rax]
   14002763c:	add    BYTE PTR [rax],al
   14002763e:	add    BYTE PTR [rax],al
   140027640:	push   rbx
   140027641:	add    esp,DWORD PTR [rcx+0x50]
   140027647:	add    BYTE PTR [rip+0x5c007200],al        # 0x19c02e84d
   14002764d:	add    BYTE PTR [rax+rax*1+0x71],al
   140027651:	add    al,0xff
   140027653:	inc    DWORD PTR [rbp+0x0]
   140027659:	add    BYTE PTR [rax],al
   14002765b:	add    BYTE PTR [rcx],al
   14002765d:	add    BYTE PTR [rbx],al
   14002765f:	push   rax
   140027660:	add    BYTE PTR [rax],al
   140027662:	add    BYTE PTR [rax],al
   140027664:	add    BYTE PTR [esi],al
   140027667:	add    BYTE PTR [rdx],dh
   140027669:	add    BYTE PTR [rsi],cl
   14002766b:	add    BYTE PTR [rcx],al
   14002766d:	add    bh,bh
   14002766f:	inc    DWORD PTR [rax+0x4b004f00]
	...
   14002767d:	add    BYTE PTR [rbx],al
   14002767f:	push   rax
   140027680:	add    BYTE PTR [rax],al
   140027682:	add    BYTE PTR [rax],al
   140027684:	add    BYTE PTR [eax],bl
   140027687:	add    BYTE PTR [rdx],dh
   140027689:	add    BYTE PTR [rsi],cl
   14002768b:	add    BYTE PTR [rdx],al
   14002768d:	add    bh,bh
   14002768f:	inc    DWORD PTR [rax-0x1ccf5300]
   140027695:	xor    bl,dh
   140027697:	xor    BYTE PTR [rbx+0x30eb30],bh
   14002769d:	add    BYTE PTR [rax],al
   14002769f:	add    BYTE PTR [rax],al
   1400276a1:	add    BYTE PTR [rbx],al
   1400276a3:	push   rax
   1400276a4:	add    BYTE PTR [rax],al
   1400276a6:	add    BYTE PTR [rax],al
   1400276a8:	add    BYTE PTR [esi],ch
   1400276ab:	add    BYTE PTR [rdx],dh
   1400276ad:	add    BYTE PTR [rsi],cl
   1400276af:	add    BYTE PTR [rsi],cl
   1400276b1:	add    al,0xff
   1400276b3:	inc    DWORD PTR [rax-0x14cf2800]
   1400276b9:	xor    bh,dl
   1400276bb:	xor    BYTE PTR [rax],ch
   1400276bd:	add    BYTE PTR [rsi],ah
   1400276bf:	add    BYTE PTR [rax+0x0],cl
   1400276c2:	sub    DWORD PTR [rax],eax
   1400276c4:	add    BYTE PTR [rax],al
   1400276c6:	add    BYTE PTR [rax],al
   1400276c8:	add    al,BYTE PTR [rax]
   1400276ca:	add    edx,DWORD PTR [rax+0x0]
   1400276cd:	add    BYTE PTR [rax],al
   1400276cf:	add    BYTE PTR [rdi+0x0],ah
   1400276d2:	add    BYTE PTR [rdx],r14b
   1400276d5:	add    BYTE PTR [rax+rax*1],cl
   1400276d8:	adc    BYTE PTR [rdi+rdi*8],al
   1400276db:	inc    DWORD PTR [rax-0x66916a00]
   1400276e1:	push   rax
   1400276e2:	sub    BYTE PTR [rax],al
   1400276e4:	add    BYTE PTR es:[rdx+0x0],dl
   1400276e8:	sub    DWORD PTR [rax],eax
	...
   1400276f2:	add    edx,DWORD PTR [rax+0x0]
   1400276f5:	add    BYTE PTR [rax],al
   1400276f7:	add    BYTE PTR [rdi+0x0],ah
   1400276fa:	jb     0x1400276fc
   1400276fc:	xor    al,BYTE PTR [rax]
   1400276fe:	(bad)  
   1400276ff:	add    BYTE PTR [rip+0xffffffff80ffff04],cl        # 0xc1027609
   140027705:	add    ch,cl
   140027707:	xor    bl,al
   140027709:	xor    al,cl
   14002770b:	xor    bh,ch
   14002770d:	xor    ah,bh
   14002770f:	xor    BYTE PTR [rdi+0x26002830],ch
   140027715:	add    BYTE PTR [rdi+0x0],dl
   140027718:	sub    DWORD PTR [rax],eax
   14002771a:	add    BYTE PTR cs:[rsi],ch
   14002771d:	add    BYTE PTR [rsi],ch
   14002771f:	add    BYTE PTR [rax],al
   140027721:	add    BYTE PTR [rax],al
   140027723:	add    ah,al
   140027725:	and    al,cl
   140027727:	add    BYTE PTR [rax],0x0
   14002772a:	add    BYTE PTR [rax],al
   14002772c:	verr   WORD PTR [rax+rax*1]
   140027730:	sbb    BYTE PTR [rax],al
   140027732:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027733:	add    BYTE PTR [rdi+0x0],al
   140027739:	add    BYTE PTR [rdi+0x0],cl
   14002773c:	jo     0x14002773e
   14002773e:	add    BYTE PTR gs:[rsi+0x0],ch
   140027742:	add    BYTE PTR [rax],al
   140027744:	or     BYTE PTR [rax],al
   140027746:	rex.W add BYTE PTR [rbp+0x0],spl
   14002774a:	ins    BYTE PTR es:[rdi],dx
   14002774b:	add    BYTE PTR [rsi+0x0],dh
   14002774e:	add    BYTE PTR [rax],al
   140027750:	add    BYTE PTR [rax],al
   140027752:	add    al,BYTE PTR [rax+0x0]
   140027755:	add    BYTE PTR [rax],al
   140027757:	add    BYTE PTR [rdi+0x0],ch
   14002775a:	push   rsi
   14002775b:	add    BYTE PTR [rcx],ah
   14002775d:	add    BYTE PTR [rax],cl
   14002775f:	add    BYTE PTR [rdx+0x4],al
   140027762:	(bad)  
   140027763:	inc    DWORD PTR [rdx+0x69004600]
   140027769:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002776d:	add    BYTE PTR [rax],ah
   14002776f:	add    BYTE PTR [rsi],ah
   140027771:	add    BYTE PTR [rsi+0x0],ch
   140027774:	(bad)  
   140027775:	add    BYTE PTR [rbp+0x0],ch
   140027778:	add    BYTE PTR gs:[rdx],bh
   14002777b:	add    BYTE PTR [rax],al
   14002777d:	add    BYTE PTR [rax],al
   14002777f:	add    BYTE PTR [rax+0x408104],al
   140027785:	add    BYTE PTR [rax],al
   140027787:	add    BYTE PTR [rdi+0x0],ch
   14002778a:	push   rsi
   14002778b:	add    BYTE PTR [rcx],ah
   14002778d:	add    BYTE PTR [rax+rax*1],cl
   140027790:	add    BYTE PTR [rdi+rdi*8],0xff
   140027794:	add    DWORD PTR [rax],0x0
   14002779a:	add    BYTE PTR [rax],al
   14002779c:	push   rbx
   14002779d:	adc    BYTE PTR [rcx+0x40],ah
   1400277a3:	add    BYTE PTR [rdi+0x0],ch
   1400277a6:	push   rsi
   1400277a7:	add    BYTE PTR [rcx],ah
   1400277a9:	add    BYTE PTR [rcx],cl
   1400277ab:	add    BYTE PTR [rax+0x4],ah
   1400277ae:	(bad)  
   1400277af:	inc    DWORD PTR [rbx+0x0]
   1400277b5:	add    BYTE PTR [rax],al
   1400277b7:	add    BYTE PTR [rax],al
   1400277b9:	add    BYTE PTR [rdx],al
   1400277bb:	push   rax
   1400277bc:	add    BYTE PTR [rax],al
   1400277be:	add    BYTE PTR [rax],al
   1400277c0:	add    eax,0x60000600
   1400277c5:	add    BYTE PTR [rcx],cl
   1400277c7:	add    bh,bh
   1400277c9:	(bad)  
   1400277ca:	(bad)  
   1400277cb:	inc    DWORD PTR [rdx+0x46002600]
   1400277d1:	add    BYTE PTR [rdi+0x0],ch
   1400277d4:	ins    BYTE PTR es:[rdi],dx
   1400277d5:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400277d9:	add    BYTE PTR [rdx+0x0],dh
   1400277dc:	jae    0x1400277de
   1400277de:	cmp    al,BYTE PTR [rax]
   1400277e0:	add    BYTE PTR [rax],al
   1400277e2:	add    BYTE PTR [rax],al
   1400277e4:	add    BYTE PTR [rax],0x2
   1400277e7:	push   rax
   1400277e8:	add    BYTE PTR [rax],al
   1400277ea:	add    BYTE PTR [rax],al
   1400277ec:	add    eax,0x60001200
   1400277f1:	add    BYTE PTR [rcx],cl
   1400277f3:	add    BYTE PTR [rax+0x4],al
   1400277f6:	(bad)  
   1400277f7:	inc    DWORD PTR [rdx+0x0]
   1400277fd:	add    BYTE PTR [rax],al
   1400277ff:	add    BYTE PTR [rbx+0x10],dl
   140027802:	movabs eax,ds:0x2000050000000050
   14002780b:	add    BYTE PTR [rax+rax*1+0x44],bl
   14002780f:	add    BYTE PTR [rcx+0x4],ah
   140027812:	(bad)  
   140027813:	inc    DWORD PTR [rbx+0x0]
   140027819:	add    BYTE PTR [rax],al
   14002781b:	add    BYTE PTR [rax],al
   14002781d:	add    BYTE PTR [rdx],al
   14002781f:	add    BYTE PTR [rax],al
   140027822:	add    BYTE PTR [rax],al
   140027824:	outs   dx,DWORD PTR ds:[rsi]
   140027825:	add    BYTE PTR [rsi+0x0],dl
   140027828:	and    DWORD PTR [rax],eax
   14002782a:	or     BYTE PTR [rax],al
   14002782c:	rex.B add al,0xff
   14002782f:	inc    DWORD PTR [rdx+0x69004c00]
   140027835:	add    BYTE PTR [rbx+0x0],dh
   140027838:	je     0x14002783a
   14002783a:	and    BYTE PTR [rax],al
   14002783c:	data16 add BYTE PTR [rcx+0x0],ch
   140027840:	ins    BYTE PTR es:[rdi],dx
   140027841:	add    BYTE PTR [rbp+0x0],ah
   140027844:	jae    0x140027846
   140027846:	and    BYTE PTR [rax],al
   140027848:	outs   dx,DWORD PTR ds:[rsi]
   140027849:	add    BYTE PTR [rsi+0x0],ah
   14002784c:	and    BYTE PTR [rax],al
   14002784e:	add    BYTE PTR es:[rax+rax*1+0x79],dh
   140027853:	add    BYTE PTR [rax+0x0],dh
   140027856:	add    BYTE PTR gs:[rdx],bh
   140027859:	add    BYTE PTR [rax],al
   14002785b:	add    BYTE PTR [rax],al
   14002785d:	add    BYTE PTR [rax],al
   14002785f:	add    BYTE PTR [rbx+0x0],al
   140027862:	movabs eax,ds:0x56006f0000000040
   14002786b:	add    BYTE PTR [rcx],ah
   14002786d:	add    BYTE PTR [rax+rax*1],ah
   140027870:	jo     0x140027876
   140027872:	(bad)  
   140027873:	inc    DWORD PTR [rbp+0x0]
   140027879:	add    BYTE PTR [rax],al
   14002787b:	add    BYTE PTR [rax],al
   14002787d:	add    BYTE PTR [rdx],al
   14002787f:	push   rax
   140027880:	add    BYTE PTR [rax],al
   140027882:	add    BYTE PTR [rax],al
   140027884:	add    eax,0x5c006800
   140027889:	add    BYTE PTR [rcx],cl
   14002788b:	add    BYTE PTR [rbx+0x4],al
   14002788e:	(bad)  
   14002788f:	inc    DWORD PTR [rdx+0x72004400]
   140027895:	add    BYTE PTR [rcx+0x0],ch
   140027898:	add    BYTE PTR es:[rsi+0x0],dh
   14002789c:	add    BYTE PTR gs:[rbx+0x0],dh
   1400278a0:	cmp    al,BYTE PTR [rax]
   1400278a2:	add    BYTE PTR [rax],al
   1400278a4:	add    BYTE PTR [rax],al
   1400278a6:	add    BYTE PTR [rax],al
   1400278a8:	push   rbx
   1400278a9:	add    esp,DWORD PTR [rcx+0x50]
   1400278af:	add    BYTE PTR [rip+0x5c007200],al        # 0x19c02eab5
   1400278b5:	add    BYTE PTR [rax+rax*1+0x71],al
   1400278b9:	add    al,0xff
   1400278bb:	inc    DWORD PTR [rbp+0x0]
   1400278c1:	add    BYTE PTR [rax],al
   1400278c3:	add    BYTE PTR [rcx],al
   1400278c5:	add    BYTE PTR [rbx],al
   1400278c7:	push   rax
   1400278c8:	add    BYTE PTR [rax],al
   1400278ca:	add    BYTE PTR [rax],al
   1400278cc:	add    BYTE PTR [esi],al
   1400278cf:	add    BYTE PTR [rdx],dh
   1400278d1:	add    BYTE PTR [rsi],cl
   1400278d3:	add    BYTE PTR [rcx],al
   1400278d5:	add    bh,bh
   1400278d7:	inc    DWORD PTR [rax+0x4b004f00]
	...
   1400278e5:	add    BYTE PTR [rbx],al
   1400278e7:	push   rax
   1400278e8:	add    BYTE PTR [rax],al
   1400278ea:	add    BYTE PTR [rax],al
   1400278ec:	add    BYTE PTR [eax],bl
   1400278ef:	add    BYTE PTR [rdx],dh
   1400278f1:	add    BYTE PTR [rsi],cl
   1400278f3:	add    BYTE PTR [rdx],al
   1400278f5:	add    bh,bh
   1400278f7:	inc    DWORD PTR [rax+0x61004300]
   1400278fd:	add    BYTE PTR [rsi+0x0],ch
   140027900:	movsxd eax,DWORD PTR [rax]
   140027902:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140027907:	add    BYTE PTR [rax],al
   140027909:	add    BYTE PTR [rax],al
   14002790b:	add    BYTE PTR [rax],al
   14002790d:	add    BYTE PTR [rbx],al
   14002790f:	push   rax
   140027910:	add    BYTE PTR [rax],al
   140027912:	add    BYTE PTR [rax],al
   140027914:	add    BYTE PTR [esi],ch
   140027917:	add    BYTE PTR [rdx],dh
   140027919:	add    BYTE PTR [rsi],cl
   14002791b:	add    BYTE PTR [rsi],cl
   14002791d:	add    al,0xff
   14002791f:	inc    DWORD PTR [rax+0x48002600]
   140027925:	add    BYTE PTR [rbp+0x0],ah
   140027928:	ins    BYTE PTR es:[rdi],dx
   140027929:	add    BYTE PTR [rax+0x0],dh
   14002792c:	add    BYTE PTR [rax],al
   14002792e:	add    BYTE PTR [rax],al
   140027930:	add    al,BYTE PTR [rax]
   140027932:	add    edx,DWORD PTR [rax+0x0]
   140027935:	add    BYTE PTR [rax],al
   140027937:	add    BYTE PTR [rdi+0x0],ah
   14002793a:	add    BYTE PTR [rdx],r14b
   14002793d:	add    BYTE PTR [rax+rax*1],cl
   140027940:	adc    BYTE PTR [rdi+rdi*8],al
   140027943:	inc    DWORD PTR [rax+0x52002600]
   140027949:	add    BYTE PTR [rbp+0x0],ah
   14002794c:	(bad)  
   14002794d:	add    BYTE PTR [rax+rax*1+0x20],ah
   140027951:	add    BYTE PTR [rdi+0x0],ch
   140027954:	outs   dx,BYTE PTR ds:[rsi]
   140027955:	add    BYTE PTR [rax+rax*1+0x79],ch
	...
   140027961:	add    BYTE PTR [rbx],al
   140027963:	push   rax
   140027964:	add    BYTE PTR [rax],al
   140027966:	add    BYTE PTR [rax],al
   140027968:	add    BYTE PTR [edx+0x0],dh
   14002796c:	xor    al,BYTE PTR [rax]
   14002796e:	(bad)  
   14002796f:	add    BYTE PTR [rip+0xffffffff80ffff04],cl        # 0xc1027879
   140027975:	add    BYTE PTR [rsi+0x0],cl
   140027978:	add    BYTE PTR gs:[rax+rax*1+0x26],dh
   14002797d:	add    BYTE PTR [rdi+0x0],dh
   140027980:	outs   dx,DWORD PTR ds:[rsi]
   140027981:	add    BYTE PTR [rdx+0x0],dh
   140027984:	imul   eax,DWORD PTR [rax],0x2e
   140027987:	add    BYTE PTR [rsi],ch
   140027989:	add    BYTE PTR [rsi],ch
	...
   1400279a3:	add    BYTE PTR [rbx],cl
   1400279a5:	add    BYTE PTR [rbp+0x0],cl
   1400279a8:	add    BYTE PTR [r8+rax*1+0x4c],dl
   1400279ad:	add    BYTE PTR [rcx+0x0],al
   1400279b0:	rex.X add BYTE PTR [rax],spl
   1400279b3:	add    BYTE PTR [rbx+0x0],al
   1400279b6:	outs   dx,DWORD PTR ds:[rsi]
   1400279b7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400279bb:	add    BYTE PTR [rbx],cl
   1400279bd:	add    BYTE PTR [rbp+0x0],cl
   1400279c0:	add    BYTE PTR [r8+rax*1+0x4c],dl
   1400279c5:	add    BYTE PTR [rcx+0x0],al
   1400279c8:	rex.X add BYTE PTR [rax],spl
   1400279cb:	add    BYTE PTR [rax+rax*1+0x61],al
   1400279cf:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400279d3:	add    BYTE PTR [rip+0x41004d00],cl        # 0x18102c6d9
   1400279d9:	add    BYTE PTR [rax+rax*1+0x4c],dl
   1400279dd:	add    BYTE PTR [rcx+0x0],al
   1400279e0:	rex.X add BYTE PTR [rax],spl
   1400279e3:	add    BYTE PTR [rax+0x0],dl
   1400279e6:	sub    eax,0x6f006300
   1400279eb:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400279ef:	add    BYTE PTR [rsi],cl
   1400279f1:	add    BYTE PTR [rbx+0x0],dl
   1400279f4:	imul   eax,DWORD PTR [rax],0x75006d
   1400279fa:	ins    BYTE PTR es:[rdi],dx
   1400279fb:	add    BYTE PTR [rcx+0x0],ch
   1400279fe:	outs   dx,BYTE PTR ds:[rsi]
   1400279ff:	add    BYTE PTR [rbx+0x0],ch
   140027a02:	and    BYTE PTR [rax],al
   140027a04:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140027a08:	add    BYTE PTR fs:[rbp+0x0],ah
   140027a0c:	ins    BYTE PTR es:[rdi],dx
   140027a0d:	add    BYTE PTR [rip+0x41004d00],cl        # 0x18102c713
   140027a13:	add    BYTE PTR [rax+rax*1+0x4c],dl
   140027a17:	add    BYTE PTR [rcx+0x0],al
   140027a1a:	rex.X add BYTE PTR [rax],spl
   140027a1d:	add    BYTE PTR [rsi+0x0],al
   140027a20:	imul   eax,DWORD PTR [rax],0x750067
   140027a26:	jb     0x140027a28
   140027a28:	add    BYTE PTR gs:[rdx],cl
   140027a2b:	add    BYTE PTR [rbp+0x0],cl
   140027a2e:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140027a33:	add    BYTE PTR [rcx+0x0],al
   140027a36:	rex.X add BYTE PTR [rax],spl
   140027a39:	add    BYTE PTR [rbp+0x0],cl
   140027a3c:	add    BYTE PTR [r8+0x0],r11b
   140027a40:	(bad)  
   140027a41:	add    BYTE PTR [rbp+0x0],cl
   140027a44:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140027a49:	add    BYTE PTR [rcx+0x0],al
   140027a4c:	rex.X add BYTE PTR [rax],spl
   140027a4f:	add    BYTE PTR [rax+0x0],dl
   140027a52:	jb     0x140027a54
   140027a54:	outs   dx,DWORD PTR ds:[rsi]
   140027a55:	add    BYTE PTR [rdx+0x0],ch
   140027a58:	add    BYTE PTR gs:[rbx+0x0],ah
   140027a5c:	je     0x140027a5e
   140027a5e:	(bad)  
   140027a5f:	add    BYTE PTR [rbx+0x0],dl
   140027a62:	imul   eax,DWORD PTR [rax],0x73006d
   140027a68:	movsxd eax,DWORD PTR [rax]
   140027a6a:	(bad)  
   140027a6b:	add    BYTE PTR [rax+0x0],dh
   140027a6e:	add    BYTE PTR gs:[rax],ah
   140027a71:	add    BYTE PTR [rbp+0x0],cl
   140027a74:	outs   dx,DWORD PTR ds:[rsi]
   140027a75:	add    BYTE PTR [rax+rax*1+0x65],ah
   140027a79:	add    BYTE PTR [rax+rax*1+0xe],ch
   140027a7d:	add    BYTE PTR [rbp+0x0],cl
   140027a80:	jne    0x140027a82
   140027a82:	push   rax
   140027a83:	add    BYTE PTR [rcx+0x0],al
   140027a86:	add    BYTE PTR [rax],r12b
   140027a89:	add    BYTE PTR [rsi+0x0],cl
   140027a8c:	outs   dx,DWORD PTR ds:[rsi]
   140027a8d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140027a91:	add    BYTE PTR [rdx+0x0],ah
   140027a94:	outs   dx,DWORD PTR ds:[rsi]
   140027a95:	add    BYTE PTR [rdi+0x0],ch
   140027a98:	imul   eax,DWORD PTR [rax],0xa
   140027a9b:	add    BYTE PTR [rbp+0x0],cl
   140027a9e:	jne    0x140027aa0
   140027aa0:	push   rax
   140027aa1:	add    BYTE PTR [rcx+0x0],al
   140027aa4:	add    BYTE PTR [rax],r12b
   140027aa7:	add    BYTE PTR [rbx+0x0],al
   140027aaa:	outs   dx,DWORD PTR ds:[rsi]
   140027aab:	add    BYTE PTR [rax+rax*1+0x65],ah
   140027aaf:	add    BYTE PTR [rdx],cl
   140027ab1:	add    BYTE PTR [rbp+0x0],cl
   140027ab4:	jne    0x140027ab6
   140027ab6:	push   rax
   140027ab7:	add    BYTE PTR [rcx+0x0],al
   140027aba:	add    BYTE PTR [rax],r12b
   140027abd:	add    BYTE PTR [rax+0x0],cl
   140027ac0:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   140027ac5:	add    BYTE PTR [rsi],cl
   140027ac7:	add    BYTE PTR [rbp+0x0],cl
   140027aca:	jne    0x140027acc
   140027acc:	push   rax
   140027acd:	add    BYTE PTR [rcx+0x0],al
   140027ad0:	add    BYTE PTR [rax],r12b
   140027ad3:	add    BYTE PTR [rdi+0x0],al
   140027ad6:	jb     0x140027ad8
   140027ad8:	(bad)  
   140027ad9:	add    BYTE PTR [rax+0x0],dh
   140027adc:	push   0x63006900
   140027ae1:	add    BYTE PTR [rbx+0x0],dh
   140027ae4:	(bad)  
   140027ae5:	add    BYTE PTR [rbp+0x0],cl
   140027ae8:	jne    0x140027aea
   140027aea:	push   rax
   140027aeb:	add    BYTE PTR [rcx+0x0],al
   140027aee:	add    BYTE PTR [rax],r12b
   140027af1:	add    BYTE PTR [rdi+0x0],al
   140027af4:	jb     0x140027af6
   140027af6:	(bad)  
   140027af7:	add    BYTE PTR [rax+0x0],dh
   140027afa:	push   0x63006900
   140027aff:	add    BYTE PTR [rbx+0x0],dh
   140027b02:	add    BYTE PTR [rax],al
   140027b04:	sbb    BYTE PTR [rax],al
   140027b06:	push   rbx
   140027b07:	add    BYTE PTR [rcx+0x0],ch
   140027b0a:	ins    DWORD PTR es:[rdi],dx
   140027b0b:	add    BYTE PTR [rbp+0x0],dh
   140027b0e:	ins    BYTE PTR es:[rdi],dx
   140027b0f:	add    BYTE PTR [rcx+0x0],ch
   140027b12:	outs   dx,BYTE PTR ds:[rsi]
   140027b13:	add    BYTE PTR [rbx+0x0],ch
   140027b16:	and    BYTE PTR [rax],al
   140027b18:	push   rax
   140027b19:	add    BYTE PTR [rdx+0x0],dh
   140027b1c:	outs   dx,DWORD PTR ds:[rsi]
   140027b1d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140027b21:	add    BYTE PTR [rbx+0x0],ah
   140027b24:	je     0x140027b26
   140027b26:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140027b2b:	add    BYTE PTR [rbp+0x0],cl
   140027b2e:	outs   dx,DWORD PTR ds:[rsi]
   140027b2f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140027b33:	add    BYTE PTR [rax+rax*1+0x1b],ch
   140027b37:	add    BYTE PTR [rbx+0x0],dl
   140027b3a:	imul   eax,DWORD PTR [rax],0x75006d
   140027b40:	ins    BYTE PTR es:[rdi],dx
   140027b41:	add    BYTE PTR [rcx+0x0],ch
   140027b44:	outs   dx,BYTE PTR ds:[rsi]
   140027b45:	add    BYTE PTR [rbx+0x0],ch
   140027b48:	and    BYTE PTR [rax],al
   140027b4a:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140027b4e:	add    BYTE PTR fs:[rbp+0x0],ah
   140027b52:	ins    BYTE PTR es:[rdi],dx
   140027b53:	add    BYTE PTR [rax],ah
   140027b55:	add    BYTE PTR [rax],ch
   140027b57:	add    BYTE PTR [rbx+0x0],dl
   140027b5a:	rex.WR add BYTE PTR [rax+0x0],r11b
   140027b5e:	and    BYTE PTR [rax],al
   140027b60:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140027b64:	jb     0x140027b66
   140027b66:	ins    DWORD PTR es:[rdi],dx
   140027b67:	add    BYTE PTR [rcx+0x0],ah
   140027b6a:	je     0x140027b6c
   140027b6c:	sub    DWORD PTR [rax],eax
   140027b6e:	adc    al,0x0
   140027b70:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140027b74:	push   rsp
   140027b75:	add    BYTE PTR [rax+rax*1+0x41],cl
   140027b79:	add    BYTE PTR [rdx+0x0],al
   140027b7c:	and    BYTE PTR [rax],al
   140027b7e:	add    BYTE PTR [r8+0x0],sil
   140027b82:	jo     0x140027b84
   140027b84:	and    BYTE PTR [rax],al
   140027b86:	rex.WB add BYTE PTR [r14+0x0],bpl
   140027b8a:	jae    0x140027b8c
   140027b8c:	je     0x140027b8e
   140027b8e:	(bad)  
   140027b8f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140027b93:	add    BYTE PTR [rbp+0x0],ah
   140027b96:	jb     0x140027b98
   140027b98:	sbb    eax,0x69005300
   140027b9d:	add    BYTE PTR [rbp+0x0],ch
   140027ba0:	jne    0x140027ba2
   140027ba2:	ins    BYTE PTR es:[rdi],dx
   140027ba3:	add    BYTE PTR [rcx+0x0],ch
   140027ba6:	outs   dx,BYTE PTR ds:[rsi]
   140027ba7:	add    BYTE PTR [rbx+0x0],ch
   140027baa:	and    BYTE PTR [rax],al
   140027bac:	push   rax
   140027bad:	add    BYTE PTR [rdx+0x0],dh
   140027bb0:	outs   dx,DWORD PTR ds:[rsi]
   140027bb1:	add    BYTE PTR [rax+rax*1+0x65],dh
   140027bb5:	add    BYTE PTR [rbx+0x0],ah
   140027bb8:	je     0x140027bba
   140027bba:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140027bbf:	add    BYTE PTR [rbp+0x0],cl
   140027bc2:	outs   dx,DWORD PTR ds:[rsi]
   140027bc3:	add    BYTE PTR [rax+rax*1+0x65],ah
   140027bc7:	add    BYTE PTR [rax+rax*1+0x20],ch
   140027bcb:	add    BYTE PTR [rsi+0x0],al
   140027bce:	imul   eax,DWORD PTR [rax],0x65006c
   140027bd4:	and    BYTE PTR [rax],al
   140027bd6:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140027bda:	push   rsp
   140027bdb:	add    BYTE PTR [rax+rax*1+0x41],cl
   140027bdf:	add    BYTE PTR [rdx+0x0],al
   140027be2:	and    BYTE PTR [rax],al
   140027be4:	push   rbx
   140027be5:	add    BYTE PTR [rbp+0x0],dh
   140027be8:	jo     0x140027bea
   140027bea:	jo     0x140027bec
   140027bec:	outs   dx,DWORD PTR ds:[rsi]
   140027bed:	add    BYTE PTR [rdx+0x0],dh
   140027bf0:	je     0x140027bf2
   140027bf2:	and    BYTE PTR [rax],al
   140027bf4:	push   rax
   140027bf5:	add    BYTE PTR [rcx+0x0],ah
   140027bf8:	movsxd eax,DWORD PTR [rax]
   140027bfa:	imul   eax,DWORD PTR [rax],0x61
   140027bfd:	add    BYTE PTR [rdi+0x0],ah
   140027c00:	add    BYTE PTR gs:[rax],ah
   140027c03:	add    BYTE PTR [rcx+0x0],cl
   140027c06:	outs   dx,BYTE PTR ds:[rsi]
   140027c07:	add    BYTE PTR [rbx+0x0],dh
   140027c0a:	je     0x140027c0c
   140027c0c:	(bad)  
   140027c0d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140027c11:	add    BYTE PTR [rbp+0x0],ah
   140027c14:	jb     0x140027c16
   140027c16:	sbb    BYTE PTR [rax],al
   140027c18:	push   rbx
   140027c19:	add    BYTE PTR [rcx+0x0],ch
   140027c1c:	ins    DWORD PTR es:[rdi],dx
   140027c1d:	add    BYTE PTR [rbp+0x0],dh
   140027c20:	ins    BYTE PTR es:[rdi],dx
   140027c21:	add    BYTE PTR [rcx+0x0],ch
   140027c24:	outs   dx,BYTE PTR ds:[rsi]
   140027c25:	add    BYTE PTR [rbx+0x0],ch
   140027c28:	and    BYTE PTR [rax],al
   140027c2a:	add    BYTE PTR [rcx+0x0],r12b
   140027c2e:	je     0x140027c30
   140027c30:	(bad)  
   140027c31:	add    BYTE PTR [rax],ah
   140027c33:	add    BYTE PTR [rax+rax*1+0x69],al
   140027c37:	add    BYTE PTR [rbx+0x0],ah
   140027c3a:	je     0x140027c3c
   140027c3c:	imul   eax,DWORD PTR [rax],0x6e006f
   140027c42:	(bad)  
   140027c43:	add    BYTE PTR [rdx+0x0],dh
   140027c46:	jns    0x140027c48
   140027c48:	(bad)  
   140027c49:	add    BYTE PTR [rbx+0x0],dl
   140027c4c:	imul   eax,DWORD PTR [rax],0x75006d
   140027c52:	ins    BYTE PTR es:[rdi],dx
   140027c53:	add    BYTE PTR [rcx+0x0],ch
   140027c56:	outs   dx,BYTE PTR ds:[rsi]
   140027c57:	add    BYTE PTR [rbx+0x0],ch
   140027c5a:	and    BYTE PTR [rax],al
   140027c5c:	add    BYTE PTR [rcx+0x0],r12b
   140027c60:	je     0x140027c62
   140027c62:	(bad)  
   140027c63:	add    BYTE PTR [rax],ah
   140027c65:	add    BYTE PTR [rax+rax*1+0x69],al
   140027c69:	add    BYTE PTR [rbx+0x0],ah
   140027c6c:	je     0x140027c6e
   140027c6e:	imul   eax,DWORD PTR [rax],0x6e006f
   140027c74:	(bad)  
   140027c75:	add    BYTE PTR [rdx+0x0],dh
   140027c78:	jns    0x140027c7a
   140027c7a:	and    BYTE PTR [rax],al
   140027c7c:	rex.XB add BYTE PTR [r9+0x0],spl
   140027c80:	movsxd eax,DWORD PTR [rax]
   140027c82:	push   0xa006500
   140027c87:	add    BYTE PTR [rbp+0x0],cl
   140027c8a:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140027c8f:	add    BYTE PTR [rcx+0x0],al
   140027c92:	rex.X add BYTE PTR [rax],spl
   140027c95:	add    BYTE PTR [rcx+0x0],al
   140027c98:	jo     0x140027c9a
   140027c9a:	jo     0x140027c9c
   140027c9c:	(bad)  
   140027c9d:	add    BYTE PTR [rbp+0x0],cl
   140027ca0:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140027ca5:	add    BYTE PTR [rcx+0x0],al
   140027ca8:	rex.X add BYTE PTR [rax],spl
   140027cab:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140027caf:	add    BYTE PTR [rdi+0x0],ch
   140027cb2:	ins    BYTE PTR es:[rdi],dx
   140027cb3:	add    BYTE PTR [rdx+0x0],ah
   140027cb6:	outs   dx,DWORD PTR ds:[rsi]
   140027cb7:	add    BYTE PTR [rax+0x0],bh
   140027cba:	adc    DWORD PTR [rax],eax
   140027cbc:	push   rbx
   140027cbd:	add    BYTE PTR [rcx+0x0],ch
   140027cc0:	ins    DWORD PTR es:[rdi],dx
   140027cc1:	add    BYTE PTR [rbp+0x0],dh
   140027cc4:	ins    BYTE PTR es:[rdi],dx
   140027cc5:	add    BYTE PTR [rcx+0x0],ch
   140027cc8:	outs   dx,BYTE PTR ds:[rsi]
   140027cc9:	add    BYTE PTR [rbx+0x0],ch
   140027ccc:	and    BYTE PTR [rax],al
   140027cce:	push   rsp
   140027ccf:	add    BYTE PTR [rbp+0x0],ah
   140027cd2:	ins    DWORD PTR es:[rdi],dx
   140027cd3:	add    BYTE PTR [rax+0x0],dh
   140027cd6:	ins    BYTE PTR es:[rdi],dx
   140027cd7:	add    BYTE PTR [rcx+0x0],ah
   140027cda:	je     0x140027cdc
   140027cdc:	add    BYTE PTR gs:[rax],bl
   140027cdf:	add    BYTE PTR [rbp+0x0],cl
   140027ce2:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140027ce7:	add    BYTE PTR [rcx+0x0],al
   140027cea:	rex.X add BYTE PTR [rax],spl
   140027ced:	add    BYTE PTR [rax+rax*1+0x72],dl
   140027cf1:	add    BYTE PTR [rcx+0x0],ah
   140027cf4:	movsxd eax,DWORD PTR [rax]
   140027cf6:	add    BYTE PTR gs:[rcx+0x0],ah
   140027cfa:	(bad)  
   140027cfb:	add    BYTE PTR [rcx+0x0],ch
   140027cfe:	ins    BYTE PTR es:[rdi],dx
   140027cff:	add    BYTE PTR [rcx+0x0],ch
   140027d02:	je     0x140027d04
   140027d04:	jns    0x140027d06
   140027d06:	and    BYTE PTR [rax],al
   140027d08:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140027d0c:	ins    BYTE PTR es:[rdi],dx
   140027d0d:	add    BYTE PTR [rbp+0x0],ah
   140027d10:	(bad)  
   140027d11:	add    BYTE PTR [rbp+0x0],cl
   140027d14:	add    BYTE PTR [r8+rax*1+0x4c],dl
   140027d19:	add    BYTE PTR [rcx+0x0],al
   140027d1c:	rex.X add BYTE PTR [rax],spl
   140027d1f:	add    BYTE PTR [rax+rax*1+0x61],al
   140027d23:	add    BYTE PTR [rax+rax*1+0x61],dh
   140027d27:	add    BYTE PTR [rax],ah
   140027d29:	add    BYTE PTR [rbp+0x0],al
   140027d2c:	js     0x140027d2e
   140027d2e:	jo     0x140027d30
   140027d30:	outs   dx,DWORD PTR ds:[rsi]
   140027d31:	add    BYTE PTR [rdx+0x0],dh
   140027d34:	je     0x140027d36
   140027d36:	and    BYTE PTR [rax],al
   140027d38:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140027d3c:	ins    BYTE PTR es:[rdi],dx
   140027d3d:	add    BYTE PTR [rbp+0x0],ah
	...
   140027d58:	add    BYTE PTR [rax],al
   140027d5a:	sbb    BYTE PTR [rax],al
   140027d5c:	inc    BYTE PTR [rbx]
   140027d5e:	add    BYTE PTR [rax],al
   140027d60:	add    BYTE PTR [rax],al
   140027d62:	add    eax,DWORD PTR [rax]
   140027d64:	inc    DWORD PTR [rbx]
   140027d66:	add    BYTE PTR [rax],al
   140027d68:	add    BYTE PTR [rax],al
   140027d6a:	(bad)  
   140027d6b:	add    BYTE PTR [rax],al
   140027d6d:	add    al,0x0
   140027d6f:	add    BYTE PTR [rax-0x3ffef00],al
   140027d75:	add    eax,DWORD PTR [rax]
   140027d77:	add    BYTE PTR [rax],al
   140027d79:	add    BYTE PTR [rdx],al
   140027d7b:	add    BYTE PTR [rcx],al
   140027d7d:	add    BYTE PTR [rax],ah
   140027d7f:	add    BYTE PTR [rax+0x0],al
   140027d82:	add    DWORD PTR [rax],eax
   140027d84:	add    DWORD PTR [rax],eax
   140027d86:	xor    al,0x1
   140027d88:	add    BYTE PTR [rax],al
   140027d8a:	add    al,BYTE PTR [rax]
   140027d8c:	add    BYTE PTR [rax],al
   140027d8e:	add    al,BYTE PTR [rax]
   140027d90:	add    DWORD PTR [rax],eax
   140027d92:	and    BYTE PTR [rax],al
   140027d94:	add    BYTE PTR [rcx],al
   140027d97:	add    BYTE PTR [rcx],al
   140027d99:	add    BYTE PTR [rcx+rax*1],dh
   140027d9c:	add    BYTE PTR [rax],al
   140027d9e:	add    DWORD PTR [rax],eax
   140027da0:	add    BYTE PTR [rax],al
   140027da2:	add    al,BYTE PTR [rax]
   140027da4:	add    DWORD PTR [rax],eax
   140027da6:	and    BYTE PTR [rax],al
   140027da8:	add    BYTE PTR [rcx],al
   140027dab:	add    BYTE PTR [rcx],al
   140027dad:	add    BYTE PTR [rcx+rax*1],dh
   140027db0:	add    BYTE PTR [rax],al
   140027db2:	add    al,0x0
   140027db4:	add    BYTE PTR [rax],al
   140027db6:	add    al,BYTE PTR [rax]
   140027db8:	add    DWORD PTR [rax],eax
   140027dba:	and    BYTE PTR [rax],al
   140027dbc:	add    BYTE PTR [rcx],al
   140027dbf:	add    BYTE PTR [rcx],al
   140027dc1:	add    BYTE PTR [rcx+rax*1],dh
   140027dc4:	add    BYTE PTR [rax],al
   140027dc6:	add    eax,0x2000000
   140027dcb:	add    BYTE PTR [rcx],al
   140027dcd:	add    BYTE PTR [rax],ah
   140027dcf:	add    BYTE PTR [rax+0x0],al
   140027dd2:	add    DWORD PTR [rax],eax
   140027dd4:	add    DWORD PTR [rax],eax
   140027dd6:	xor    al,0x1
   140027dd8:	add    BYTE PTR [rax],al
   140027dda:	add    eax,DWORD PTR [rax]
   140027ddc:	add    BYTE PTR [rax],al
   140027dde:	add    al,BYTE PTR [rax]
   140027de0:	add    DWORD PTR [rax],eax
   140027de2:	and    BYTE PTR [rax],al
   140027de4:	add    BYTE PTR [rcx],al
   140027de7:	add    BYTE PTR [rcx],al
   140027de9:	add    BYTE PTR [rcx+rax*1],dh
   140027dec:	add    BYTE PTR [rax],al
   140027dee:	(bad)  
   140027def:	add    BYTE PTR [rax],al
   140027df1:	add    BYTE PTR [rdx],al
   140027df3:	add    BYTE PTR [rbx],al
   140027df5:	add    BYTE PTR [rax],ah
   140027df7:	add    BYTE PTR [rax+0x0],al
   140027dfa:	add    DWORD PTR [rax],eax
   140027dfc:	add    DWORD PTR [rax],eax
   140027dfe:	xor    al,0x1
   140027e00:	add    BYTE PTR [rax],al
   140027e02:	(bad)  
   140027e03:	add    BYTE PTR [rax],ah
   140027e05:	add    BYTE PTR [rax+0x0],al
   140027e08:	add    DWORD PTR [rax],eax
   140027e0a:	add    al,0x0
   140027e0c:	in     al,dx
   140027e0d:	add    al,BYTE PTR [rax]
   140027e0f:	add    BYTE PTR [rax],cl
   140027e11:	add    BYTE PTR [rax],ah
   140027e13:	add    BYTE PTR [rax+0x0],al
   140027e16:	add    DWORD PTR [rax],eax
   140027e18:	or     BYTE PTR [rax],al
   140027e1a:	lods   al,BYTE PTR ds:[rsi]
   140027e1b:	or     BYTE PTR [rax],al
   140027e1d:	add    BYTE PTR [rcx],cl
   140027e1f:	add    BYTE PTR [rax],al
   140027e21:	add    BYTE PTR [rdx],al
   140027e23:	add    BYTE PTR [rbx],al
   140027e25:	add    BYTE PTR [rax],ah
   140027e27:	add    BYTE PTR [rax+0x0],al
   140027e2a:	add    DWORD PTR [rax],eax
   140027e2c:	add    DWORD PTR [rax],eax
   140027e2e:	xor    al,0x1
   140027e30:	add    BYTE PTR [rax],al
   140027e32:	or     al,BYTE PTR [rax]
   140027e34:	and    BYTE PTR [rax],al
   140027e36:	add    BYTE PTR [rcx],al
   140027e39:	add    BYTE PTR [rax+rax*1],al
   140027e3c:	in     al,dx
   140027e3d:	add    al,BYTE PTR [rax]
   140027e3f:	add    BYTE PTR [rbx],cl
   140027e41:	add    BYTE PTR [rax],ah
   140027e43:	add    BYTE PTR [rax+0x0],al
   140027e46:	add    DWORD PTR [rax],eax
   140027e48:	or     BYTE PTR [rax],al
   140027e4a:	lods   al,BYTE PTR ds:[rsi]
   140027e4b:	or     BYTE PTR [rax],al
   140027e4d:	add    BYTE PTR [rax+rax*1],cl
   140027e50:	add    BYTE PTR [rax],al
   140027e52:	add    DWORD PTR [rax],eax
   140027e54:	or     al,BYTE PTR [rax]
   140027e56:	xor    BYTE PTR [rax],dh
   140027e58:	adc    BYTE PTR [rax],al
   140027e5a:	add    DWORD PTR [rax],eax
   140027e5c:	add    al,0x0
   140027e5e:	push   0xd000006
   140027e63:	add    BYTE PTR [rax],ah
   140027e65:	and    BYTE PTR [rax],dl
   140027e67:	add    BYTE PTR [rcx],al
   140027e69:	add    BYTE PTR [rax+rax*1],al
   140027e6c:	call   0x14e027e73
   140027e71:	add    BYTE PTR [rax],dl
   140027e73:	adc    BYTE PTR [rax],dl
   140027e75:	add    BYTE PTR [rcx],al
   140027e77:	add    BYTE PTR [rax+rax*1],al
   140027e7a:	sub    BYTE PTR [rcx],al
   140027e7c:	add    BYTE PTR [rax],al
   140027e7e:	(bad)  
   140027e80:	xor    BYTE PTR [rax],dh
   140027e82:	add    BYTE PTR [rax],al
   140027e84:	add    DWORD PTR [rax],eax
   140027e86:	or     BYTE PTR [rax],al
   140027e88:	test   al,0xe
   140027e8a:	add    BYTE PTR [rax],al
   140027e8c:	adc    BYTE PTR [rax],al
   140027e8e:	and    BYTE PTR [rax],ah
   140027e90:	add    BYTE PTR [rax],al
   140027e92:	add    DWORD PTR [rax],eax
   140027e94:	or     BYTE PTR [rax],al
   140027e96:	test   al,0x8
   140027e98:	add    BYTE PTR [rax],al
   140027e9a:	adc    DWORD PTR [rax],eax
   140027e9c:	adc    BYTE PTR [rax],dl
   140027e9e:	add    BYTE PTR [rax],al
   140027ea0:	add    DWORD PTR [rax],eax
   140027ea2:	or     BYTE PTR [rax],al
   140027ea4:	push   0x12000005
   140027ea9:	add    BYTE PTR [rax],al
   140027eab:	add    BYTE PTR [rax],al
   140027ead:	add    BYTE PTR [rcx],al
   140027eaf:	add    BYTE PTR [rax],ah
   140027eb1:	add    ah,cl
   140027eb3:	test   al,0x0
   140027eb5:	add    BYTE PTR [rbx],dl
   140027eb7:	add    BYTE PTR [rax],dh
   140027eb9:	xor    BYTE PTR [rax],al
   140027ebb:	add    BYTE PTR [rcx],al
   140027ebd:	add    BYTE PTR [rax],ah
   140027ebf:	add    BYTE PTR [rax+0x14000025],ch
   140027ec5:	add    BYTE PTR [rax],ah
   140027ec7:	and    BYTE PTR [rax],al
   140027ec9:	add    BYTE PTR [rcx],al
   140027ecb:	add    BYTE PTR [rax],ah
   140027ecd:	add    BYTE PTR [rax+0x15000010],ch
   140027ed3:	add    BYTE PTR [rax],dl
   140027ed5:	adc    BYTE PTR [rax],al
   140027ed7:	add    BYTE PTR [rcx],al
   140027ed9:	add    BYTE PTR [rax],ah
   140027edb:	add    BYTE PTR [rax+0x4],ch
   140027ede:	add    BYTE PTR [rax],al
   140027ee0:	(bad)  
   140027ee1:	add    BYTE PTR [rax+0x41],dl
   140027ee4:	nop
   140027ee5:	add    esi,DWORD PTR [rax+rax*1]
   140027ee8:	add    BYTE PTR [rax],al
   140027eea:	push   rsi
   140027eeb:	add    BYTE PTR [rbx+0x0],dl
   140027eee:	pop    rdi
   140027eef:	add    BYTE PTR [rsi+0x0],dl
   140027ef2:	add    BYTE PTR [r10+0x0],r10b
   140027ef6:	push   rbx
   140027ef7:	add    BYTE PTR [rcx+0x0],cl
   140027efa:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140027efe:	pop    rdi
   140027eff:	add    BYTE PTR [rcx+0x0],cl
   140027f02:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140027f06:	rex.WRXB add BYTE PTR [r8],r8b
   140027f09:	add    BYTE PTR [rax],al
   140027f0b:	add    BYTE PTR [rbp+0xfeef04],bh
   140027f11:	add    BYTE PTR [rcx],al
   140027f13:	add    BYTE PTR [rdx],al
   140027f15:	add    BYTE PTR [rcx],cl
   140027f17:	add    BYTE PTR [rax],al
   140027f19:	add    BYTE PTR [rax],al
   140027f1b:	add    BYTE PTR [rax],al
   140027f1d:	add    BYTE PTR [rcx],al
   140027f1f:	add    BYTE PTR [rcx],al
   140027f21:	add    BYTE PTR [rax],al
   140027f23:	add    BYTE PTR [rdi],bh
   140027f25:	add    BYTE PTR [rax],al
   140027f27:	add    BYTE PTR [rax],al
   140027f29:	add    BYTE PTR [rax],al
   140027f2b:	add    BYTE PTR [rax+rax*1],al
   140027f2e:	add    al,0x0
   140027f30:	add    DWORD PTR [rax],eax
	...
   140027f3e:	add    BYTE PTR [rax],al
   140027f40:	out    dx,al
   140027f41:	add    al,BYTE PTR [rax]
   140027f43:	add    BYTE PTR [rcx],al
   140027f45:	add    BYTE PTR [rbx+0x0],dl
   140027f48:	je     0x140027f4a
   140027f4a:	jb     0x140027f4c
   140027f4c:	imul   eax,DWORD PTR [rax],0x67006e
   140027f52:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140027f56:	ins    BYTE PTR es:[rdi],dx
   140027f57:	add    BYTE PTR [rbp+0x0],ah
   140027f5a:	rex.WB add BYTE PTR [r14+0x0],bpl
   140027f5e:	data16 add BYTE PTR [rdi+0x0],ch
   140027f62:	add    BYTE PTR [rax],al
   140027f64:	retf   0x2
   140027f67:	add    BYTE PTR [rcx],al
   140027f69:	add    BYTE PTR [rax],dh
   140027f6b:	add    BYTE PTR [rax+rax*1],dh
   140027f6e:	xor    BYTE PTR [rax],al
   140027f70:	cmp    DWORD PTR [rax],eax
   140027f72:	xor    BYTE PTR [rax],al
   140027f74:	xor    al,0x0
   140027f76:	(bad)  
   140027f77:	add    BYTE PTR [rax],dh
   140027f79:	add    BYTE PTR [rax],al
   140027f7b:	add    BYTE PTR [rsi+0x0],al
   140027f7e:	adc    eax,DWORD PTR [rax]
   140027f80:	add    DWORD PTR [rax],eax
   140027f82:	rex.XB add BYTE PTR [r15+0x0],bpl
   140027f86:	ins    DWORD PTR es:[rdi],dx
   140027f87:	add    BYTE PTR [rax+0x0],dh
   140027f8a:	(bad)  
   140027f8b:	add    BYTE PTR [rsi+0x0],ch
   140027f8e:	jns    0x140027f90
   140027f90:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140027f94:	ins    DWORD PTR es:[rdi],dx
   140027f95:	add    BYTE PTR [rbp+0x0],ah
   140027f98:	add    BYTE PTR [rax],al
   140027f9a:	add    BYTE PTR [rax],al
   140027f9c:	push   rsp
   140027f9d:	add    BYTE PTR [rax+0x0],ch
   140027fa0:	add    BYTE PTR gs:[rax],ah
   140027fa3:	add    BYTE PTR [rbp+0x0],cl
   140027fa6:	(bad)  
   140027fa7:	add    BYTE PTR [rax+rax*1+0x68],dh
   140027fab:	add    BYTE PTR [rdi+0x0],dl
   140027fae:	outs   dx,DWORD PTR ds:[rsi]
   140027faf:	add    BYTE PTR [rdx+0x0],dh
   140027fb2:	imul   eax,DWORD PTR [rax],0x73
   140027fb5:	add    BYTE PTR [rax],ah
   140027fb7:	add    BYTE PTR [rcx+0x0],cl
   140027fba:	outs   dx,BYTE PTR ds:[rsi]
   140027fbb:	add    BYTE PTR [rbx+0x0],ah
   140027fbe:	add    BYTE PTR cs:[rax],al
   140027fc1:	add    BYTE PTR [rax],al
   140027fc3:	add    BYTE PTR [rax+rax*1+0xe],al
   140027fc7:	add    BYTE PTR [rcx],al
   140027fc9:	add    BYTE PTR [rsi+0x0],al
   140027fcc:	imul   eax,DWORD PTR [rax],0x65006c
   140027fd2:	add    BYTE PTR [rbp+0x0],r12b
   140027fd6:	jae    0x140027fd8
   140027fd8:	movsxd eax,DWORD PTR [rax]
   140027fda:	jb     0x140027fdc
   140027fdc:	imul   eax,DWORD PTR [rax],0x740070
   140027fe2:	imul   eax,DWORD PTR [rax],0x6e006f
   140027fe8:	add    BYTE PTR [rax],al
   140027fea:	add    BYTE PTR [rax],al
   140027fec:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140027ff0:	push   rsp
   140027ff1:	add    BYTE PTR [rax+rax*1+0x41],cl
   140027ff5:	add    BYTE PTR [rdx+0x0],al
   140027ff8:	and    BYTE PTR [rax],al
   140027ffa:	push   rdx
   140027ffb:	add    BYTE PTR [rdx],dh
   140027ffd:	add    BYTE PTR [rax],dh
   140027fff:	add    BYTE PTR [rcx],dh
   140028001:	add    BYTE PTR [rdi],dh
   140028003:	add    BYTE PTR [rcx+0x0],ah
   140028006:	add    BYTE PTR [rax],al
   140028008:	cmp    al,BYTE PTR [rax]
   14002800a:	or     eax,0x46000100
   14002800f:	add    BYTE PTR [rcx+0x0],ch
   140028012:	ins    BYTE PTR es:[rdi],dx
   140028013:	add    BYTE PTR [rbp+0x0],ah
   140028016:	push   rsi
   140028017:	add    BYTE PTR [rbp+0x0],ah
   14002801a:	jb     0x14002801c
   14002801c:	jae    0x14002801e
   14002801e:	imul   eax,DWORD PTR [rax],0x6e006f
   140028024:	add    BYTE PTR [rax],al
   140028026:	add    BYTE PTR [rax],al
   140028028:	cmp    DWORD PTR [rax],eax
   14002802a:	add    BYTE PTR cs:[rdx],dh
   14002802d:	add    BYTE PTR [rsi],ch
   14002802f:	add    BYTE PTR [rax],dh
   140028031:	add    BYTE PTR [rsi],ch
   140028033:	add    BYTE PTR [rip+0x38003100],dh        # 0x17802b139
   140028039:	add    BYTE PTR [rsi],dh
   14002803b:	add    BYTE PTR [rax+rax*1],dh
   14002803e:	xor    DWORD PTR [rax],eax
   140028040:	add    BYTE PTR [rax],al
   140028042:	add    BYTE PTR [rax],al
   140028044:	add    BYTE PTR cs:[rdi],al
   140028047:	add    BYTE PTR [rcx],al
   140028049:	add    BYTE PTR [rcx+0x0],cl
   14002804c:	outs   dx,BYTE PTR ds:[rsi]
   14002804d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140028051:	add    BYTE PTR [rdx+0x0],dh
   140028054:	outs   dx,BYTE PTR ds:[rsi]
   140028055:	add    BYTE PTR [rcx+0x0],ah
   140028058:	ins    BYTE PTR es:[rdi],dx
   140028059:	add    BYTE PTR [rsi+0x0],cl
   14002805c:	(bad)  
   14002805d:	add    BYTE PTR [rbp+0x0],ch
   140028060:	add    BYTE PTR gs:[rax],al
   140028063:	add    BYTE PTR [rbp+0x0],ch
   140028066:	(bad)  
   140028067:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14002806b:	add    BYTE PTR [rcx+0x0],ah
   14002806e:	(bad)  
   14002806f:	add    BYTE PTR [rax],al
   140028071:	add    BYTE PTR [rax],al
   140028073:	add    BYTE PTR [rsi+0x0],al
   140028076:	adc    DWORD PTR [rax],eax
   140028078:	add    DWORD PTR [rax],eax
   14002807a:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14002807e:	add    BYTE PTR [ecx+0x0],ah
   140028082:	ins    BYTE PTR es:[rdi],dx
   140028083:	add    BYTE PTR [rbx+0x0],al
   140028086:	outs   dx,DWORD PTR ds:[rsi]
   140028087:	add    BYTE PTR [rax+0x0],dh
   14002808a:	jns    0x14002808c
   14002808c:	jb     0x14002808e
   14002808e:	imul   eax,DWORD PTR [rax],0x680067
   140028094:	je     0x140028096
   140028096:	add    BYTE PTR [rax],al
   140028098:	rex.XB add BYTE PTR [r15+0x0],bpl
   14002809c:	jo     0x14002809e
   14002809e:	jns    0x1400280a0
   1400280a0:	jb     0x1400280a2
   1400280a2:	imul   eax,DWORD PTR [rax],0x680067
   1400280a8:	je     0x1400280aa
   1400280aa:	and    BYTE PTR [rax],al
   1400280ac:	test   eax,0x32002000
   1400280b1:	add    BYTE PTR [rax],dh
   1400280b3:	add    BYTE PTR [rcx],dh
   1400280b5:	add    BYTE PTR [rdi],dh
   1400280b7:	add    BYTE PTR [rax],al
   1400280b9:	add    BYTE PTR [rax],al
   1400280bb:	add    BYTE PTR [rdx+0x1003900],bl
   1400280c1:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400280c5:	add    BYTE PTR [rdi+0x0],ah
   1400280c8:	(bad)  
   1400280c9:	add    BYTE PTR [rax+rax*1+0x54],ch
   1400280cd:	add    BYTE PTR [rdx+0x0],dh
   1400280d0:	(bad)  
   1400280d1:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400280d5:	add    BYTE PTR [rbp+0x0],ch
   1400280d8:	(bad)  
   1400280d9:	add    BYTE PTR [rdx+0x0],dh
   1400280dc:	imul   eax,DWORD PTR [rax],0x73
   1400280df:	add    BYTE PTR [rax],al
   1400280e1:	add    BYTE PTR [rax],al
   1400280e3:	add    BYTE PTR [rbp+0x0],cl
   1400280e6:	add    BYTE PTR [r8+rax*1+0x4c],dl
   1400280eb:	add    BYTE PTR [rcx+0x0],al
   1400280ee:	rex.X add BYTE PTR [rsi+0x69002000],bpl
   1400280f5:	add    BYTE PTR [rbx+0x0],dh
   1400280f8:	and    BYTE PTR [rax],al
   1400280fa:	(bad)  
   1400280fb:	add    BYTE PTR [rax],ah
   1400280fd:	add    BYTE PTR [rdx+0x0],dh
   140028100:	add    BYTE PTR gs:[rdi+0x0],ah
   140028104:	imul   eax,DWORD PTR [rax],0x740073
   14002810a:	add    BYTE PTR gs:[rdx+0x0],dh
   14002810e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140028113:	add    BYTE PTR [rax+rax*1+0x72],dh
   140028117:	add    BYTE PTR [rcx+0x0],ah
   14002811a:	add    BYTE PTR fs:[rbp+0x0],ah
   14002811e:	ins    DWORD PTR es:[rdi],dx
   14002811f:	add    BYTE PTR [rcx+0x0],ah
   140028122:	jb     0x140028124
   140028124:	imul   eax,DWORD PTR [rax],0x20
   140028127:	add    BYTE PTR [rdi+0x0],ch
   14002812a:	data16 add BYTE PTR [rax],ah
   14002812d:	add    BYTE PTR [rax+rax*1+0x68],dl
   140028131:	add    BYTE PTR [rbp+0x0],ah
   140028134:	and    BYTE PTR [rax],al
   140028136:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002813a:	je     0x14002813c
   14002813c:	push   0x6f005700
   140028141:	add    BYTE PTR [rdx+0x0],dh
   140028144:	imul   eax,DWORD PTR [rax],0x73
   140028147:	add    BYTE PTR [rax+rax*1],ch
   14002814a:	and    BYTE PTR [rax],al
   14002814c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140028150:	movsxd eax,DWORD PTR [rax]
   140028152:	add    BYTE PTR cs:[rax],al
   140028155:	add    BYTE PTR [rax],al
   140028157:	add    BYTE PTR [rsi],bh
   140028159:	add    BYTE PTR [rbx],cl
   14002815b:	add    BYTE PTR [rcx],al
   14002815d:	add    BYTE PTR [rdi+0x0],cl
   140028160:	jb     0x140028162
   140028162:	imul   eax,DWORD PTR [rax],0x690067
   140028168:	outs   dx,BYTE PTR ds:[rsi]
   140028169:	add    BYTE PTR [rcx+0x0],ah
   14002816c:	ins    BYTE PTR es:[rdi],dx
   14002816d:	add    BYTE PTR [rsi+0x0],al
   140028170:	imul   eax,DWORD PTR [rax],0x65006c
   140028176:	outs   dx,BYTE PTR ds:[rsi]
   140028177:	add    BYTE PTR [rcx+0x0],ah
   14002817a:	ins    DWORD PTR es:[rdi],dx
   14002817b:	add    BYTE PTR [rbp+0x0],ah
   14002817e:	add    BYTE PTR [rax],al
   140028180:	ins    DWORD PTR es:[rdi],dx
   140028181:	add    BYTE PTR [rcx+0x0],ah
   140028184:	je     0x140028186
   140028186:	ins    BYTE PTR es:[rdi],dx
   140028187:	add    BYTE PTR [rcx+0x0],ah
   14002818a:	(bad)  
   14002818b:	add    BYTE PTR [rsi],ch
   14002818d:	add    BYTE PTR [rbp+0x0],ah
   140028190:	js     0x140028192
   140028192:	add    BYTE PTR gs:[rax],al
   140028195:	add    BYTE PTR [rax],al
   140028197:	add    BYTE PTR [rsi],ch
   140028199:	add    BYTE PTR [rdi],al
   14002819b:	add    BYTE PTR [rcx],al
   14002819d:	add    BYTE PTR [rax+0x0],dl
   1400281a0:	jb     0x1400281a2
   1400281a2:	outs   dx,DWORD PTR ds:[rsi]
   1400281a3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400281a7:	add    BYTE PTR [rbx+0x0],ah
   1400281aa:	je     0x1400281ac
   1400281ac:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400281b0:	ins    DWORD PTR es:[rdi],dx
   1400281b1:	add    BYTE PTR [rbp+0x0],ah
   1400281b4:	add    BYTE PTR [rax],al
   1400281b6:	add    BYTE PTR [rax],al
   1400281b8:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1400281bc:	push   rsp
   1400281bd:	add    BYTE PTR [rax+rax*1+0x41],cl
   1400281c1:	add    BYTE PTR [rdx+0x0],al
   1400281c4:	add    BYTE PTR [rax],al
   1400281c6:	add    BYTE PTR [rax],al
   1400281c8:	add    BYTE PTR ds:[rip+0x50000100],cl        # 0x1900282cf
   1400281cf:	add    BYTE PTR [rdx+0x0],dh
   1400281d2:	outs   dx,DWORD PTR ds:[rsi]
   1400281d3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400281d7:	add    BYTE PTR [rbx+0x0],ah
   1400281da:	je     0x1400281dc
   1400281dc:	push   rsi
   1400281dd:	add    BYTE PTR [rbp+0x0],ah
   1400281e0:	jb     0x1400281e2
   1400281e2:	jae    0x1400281e4
   1400281e4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400281ea:	add    BYTE PTR [rax],al
   1400281ec:	cmp    DWORD PTR [rax],eax
   1400281ee:	add    BYTE PTR cs:[rdx],dh
   1400281f1:	add    BYTE PTR [rsi],ch
   1400281f3:	add    BYTE PTR [rax],dh
   1400281f5:	add    BYTE PTR [rsi],ch
   1400281f7:	add    BYTE PTR [rip+0x38003100],dh        # 0x17802b2fd
   1400281fd:	add    BYTE PTR [rsi],dh
   1400281ff:	add    BYTE PTR [rax+rax*1],dh
   140028202:	xor    DWORD PTR [rax],eax
   140028204:	add    BYTE PTR [rax],al
   140028206:	add    BYTE PTR [rax],al
   140028208:	add    BYTE PTR es:[rdi],al
   14002820b:	add    BYTE PTR [rcx],al
   14002820d:	add    BYTE PTR [rbx+0x0],al
   140028210:	outs   dx,DWORD PTR ds:[rsi]
   140028211:	add    BYTE PTR [rbp+0x0],ch
   140028214:	ins    DWORD PTR es:[rdi],dx
   140028215:	add    BYTE PTR [rbp+0x0],ah
   140028218:	outs   dx,BYTE PTR ds:[rsi]
   140028219:	add    BYTE PTR [rax+rax*1+0x73],dh
   14002821d:	add    BYTE PTR [rax],al
   14002821f:	add    BYTE PTR [rdx+0x0],dl
   140028222:	xor    al,BYTE PTR [rax]
   140028224:	xor    BYTE PTR [rax],al
   140028226:	xor    DWORD PTR [rax],eax
   140028228:	(bad)  
   140028229:	add    BYTE PTR [rcx+0x0],ah
   14002822c:	add    BYTE PTR [rax],al
   14002822e:	add    BYTE PTR [rax],al
   140028230:	add    BYTE PTR [rax],r8b
   140028233:	add    BYTE PTR [rcx],al
   140028235:	add    BYTE PTR [rsi+0x0],dl
   140028238:	(bad)  
   140028239:	add    BYTE PTR [rdx+0x0],dh
   14002823c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140028240:	ins    BYTE PTR es:[rdi],dx
   140028241:	add    BYTE PTR [rbp+0x0],ah
   140028244:	rex.WB add BYTE PTR [r14+0x0],bpl
   140028248:	data16 add BYTE PTR [rdi+0x0],ch
   14002824c:	add    BYTE PTR [rax],al
   14002824e:	add    BYTE PTR [rax],al
   140028250:	and    al,0x0
   140028252:	add    al,0x0
   140028254:	add    BYTE PTR [rax],al
   140028256:	push   rsp
   140028257:	add    BYTE PTR [rdx+0x0],dh
   14002825a:	(bad)  
   14002825b:	add    BYTE PTR [rsi+0x0],ch
   14002825e:	jae    0x140028260
   140028260:	ins    BYTE PTR es:[rdi],dx
   140028261:	add    BYTE PTR [rcx+0x0],ah
   140028264:	je     0x140028266
   140028266:	imul   eax,DWORD PTR [rax],0x6e006f
   14002826c:	add    BYTE PTR [rax],al
   14002826e:	add    BYTE PTR [rax],al
   140028270:	or     DWORD PTR [rax+rsi*4],eax
   140028273:	add    al,0x3c
   140028275:	(bad)  
   140028276:	jae    0x1400282eb
   140028278:	gs ins DWORD PTR es:[rdi],dx
   14002827a:	(bad)  
   14002827b:	ins    BYTE PTR es:[rdi],dx
   14002827c:	jns    0x14002829e
   14002827e:	js     0x1400282ed
   140028280:	ins    BYTE PTR es:[rdi],dx
   140028281:	outs   dx,BYTE PTR ds:[rsi]
   140028282:	jae    0x1400282c1
   140028284:	and    dh,BYTE PTR [rbp+0x72]
   140028287:	outs   dx,BYTE PTR ds:[rsi]
   140028288:	cmp    dh,BYTE PTR [rbx+0x63]
   14002828b:	push   0x73616d65
   140028290:	sub    eax,0x7263696d
   140028295:	outs   dx,DWORD PTR ds:[rsi]
   140028296:	jae    0x140028307
   140028298:	data16 je 0x1400282c8
   14002829b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002829e:	cmp    ah,BYTE PTR [rcx+0x73]
   1400282a1:	ins    DWORD PTR es:[rdi],dx
   1400282a2:	cs jbe 0x1400282d6
   1400282a5:	and    ah,BYTE PTR [rax]
   1400282a7:	ins    DWORD PTR es:[rdi],dx
   1400282a8:	(bad)  
   1400282a9:	outs   dx,BYTE PTR ds:[rsi]
   1400282aa:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400282b1:	jb     0x140028326
   1400282b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400282ba:	xor    BYTE PTR [rdx],ah
   1400282bc:	ds or  eax,0x3c20200a
   1400282c2:	je     0x140028336
   1400282c4:	jne    0x140028339
   1400282c6:	je     0x140028311
   1400282c8:	outs   dx,BYTE PTR ds:[rsi]
   1400282c9:	outs   dx,WORD PTR ds:[rsi]
   1400282cb:	and    BYTE PTR [rax+0x6d],bh
   1400282ce:	ins    BYTE PTR es:[rdi],dx
   1400282cf:	outs   dx,BYTE PTR ds:[rsi]
   1400282d0:	jae    0x14002830f
   1400282d2:	and    dh,BYTE PTR [rbp+0x72]
   1400282d5:	outs   dx,BYTE PTR ds:[rsi]
   1400282d6:	cmp    dh,BYTE PTR [rbx+0x63]
   1400282d9:	push   0x73616d65
   1400282de:	sub    eax,0x7263696d
   1400282e3:	outs   dx,DWORD PTR ds:[rsi]
   1400282e4:	jae    0x140028355
   1400282e6:	data16 je 0x140028316
   1400282e9:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400282ec:	cmp    ah,BYTE PTR [rcx+0x73]
   1400282ef:	ins    DWORD PTR es:[rdi],dx
   1400282f0:	cs jbe 0x140028326
   1400282f3:	and    bh,BYTE PTR [rsi]
   1400282f5:	or     eax,0x2020200a
   1400282fa:	and    BYTE PTR [rbx+rsi*2],bh
   1400282fd:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140028301:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140028309:	and    BYTE PTR [rax],ah
   14002830b:	and    BYTE PTR [rax],ah
   14002830d:	cmp    al,0x72
   14002830f:	gs jno 0x140028387
   140028312:	gs jae 0x140028389
   140028315:	gs fs push rax
   140028318:	jb     0x140028383
   14002831a:	jbe    0x140028385
   14002831c:	ins    BYTE PTR es:[rdi],dx
   14002831d:	gs addr32 gs jae 0x140028360
   140028322:	or     eax,0x2020200a
   140028327:	and    BYTE PTR [rax],ah
   140028329:	and    BYTE PTR [rax],ah
   14002832b:	and    BYTE PTR [rdx+rsi*2],bh
   14002832e:	gs jno 0x1400283a6
   140028331:	gs jae 0x1400283a8
   140028334:	gs fs rex.RB js 0x14002839e
   140028339:	movsxd esi,DWORD PTR [rbp+0x74]
   14002833c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140028343:	ins    BYTE PTR es:[rdi],dx
   140028344:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140028348:	gs ins BYTE PTR es:[rdi],dx
   14002834a:	cmp    eax,0x49736122
   14002834f:	outs   dx,BYTE PTR ds:[rsi]
   140028350:	jbe    0x1400283c1
   140028352:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140028356:	and    BYTE PTR [rbp+0x69],dh
   140028359:	movsxd esp,DWORD PTR [r11+0x65]
   14002835d:	jae    0x1400283d2
   14002835f:	cmp    eax,0x6c616622
   140028364:	jae    0x1400283cb
   140028366:	and    bh,BYTE PTR [rsi]
   140028368:	cmp    al,0x2f
   14002836a:	jb     0x1400283d1
   14002836c:	jno    0x1400283e3
   14002836e:	gs jae 0x1400283e5
   140028371:	gs fs rex.RB js 0x1400283db
   140028376:	movsxd esi,DWORD PTR [rbp+0x74]
   140028379:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140028380:	ins    BYTE PTR es:[rdi],dx
   140028381:	ds or  eax,0x2020200a
   140028387:	and    BYTE PTR [rax],ah
   140028389:	and    BYTE PTR [rdi+rbp*1],bh
   14002838c:	jb     0x1400283f3
   14002838e:	jno    0x140028405
   140028390:	gs jae 0x140028407
   140028393:	gs fs push rax
   140028396:	jb     0x140028401
   140028398:	jbe    0x140028403
   14002839a:	ins    BYTE PTR es:[rdi],dx
   14002839b:	gs addr32 gs jae 0x1400283de
   1400283a0:	or     eax,0x2020200a
   1400283a5:	and    BYTE PTR [rdi+rbp*1],bh
   1400283a8:	jae    0x14002840f
   1400283aa:	movsxd esi,DWORD PTR [rbp+0x72]
   1400283ad:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400283b5:	cmp    al,0x2f
   1400283b7:	je     0x14002842b
   1400283b9:	jne    0x14002842e
   1400283bb:	je     0x140028406
   1400283bd:	outs   dx,BYTE PTR ds:[rsi]
   1400283be:	outs   dx,WORD PTR ds:[rsi]
   1400283c0:	ds or  eax,0x612f3c0a
   1400283c6:	jae    0x14002843b
   1400283c8:	gs ins DWORD PTR es:[rdi],dx
   1400283ca:	(bad)  
   1400283cb:	ins    BYTE PTR es:[rdi],dx
   1400283cc:	jns    0x14002840c
   1400283ce:	push   rax
   1400283cf:	rex.B
