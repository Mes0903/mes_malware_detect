
544a20393e3e0c2935924ee0b5826bc65ae6a256fc041a865d4e84e3c1cfb4d8.exe:     file format pei-i386


Disassembly of section .text:

01001000 <.text>:
 1001000:	push   ds
 1001001:	mov    cl,0x0
 1001003:	add    BYTE PTR [esi],ch
 1001005:	mov    cl,0x0
 1001007:	add    BYTE PTR [eax],dl
 1001009:	mov    cl,0x0
 100100b:	add    BYTE PTR [eax],al
 100100d:	add    BYTE PTR [eax],al
 100100f:	add    BYTE PTR ds:0x40800000,bh
 1001015:	add    BYTE PTR [eax],al
 1001017:	cmp    BYTE PTR [edx],0x0
 100101a:	add    BYTE PTR [eax-0x7fffffc8],al
 1001020:	inc    esp
 1001021:	add    BYTE PTR [eax],al
 1001023:	add    BYTE PTR [ebx+0x0],0x0
 1001027:	adc    BYTE PTR [edi],0x0
 100102a:	add    BYTE PTR [eax-0x7fffffcf],al
 1001030:	adc    al,0x0
 1001032:	add    BYTE PTR [eax-0x7fffffef],al
 1001038:	and    BYTE PTR [eax],al
 100103a:	add    BYTE PTR [eax-0x7fffffe1],al
 1001040:	add    BYTE PTR [eax],al
 1001042:	add    BYTE PTR [eax],al
 1001044:	xor    BYTE PTR [edx-0x4d660000],0x0
 100104b:	add    BYTE PTR [esi-0x43ffff4e],ah
 1001051:	mov    dl,0x0
 1001053:	add    ah,al
 1001055:	mov    dl,0x0
 1001057:	add    dl,dl
 1001059:	mov    dl,0x0
 100105b:	add    dh,bl
 100105d:	mov    dl,0x0
 100105f:	add    dh,ch
 1001061:	mov    dl,0x0
 1001063:	add    BYTE PTR [ebx+esi*4],al
 1001066:	add    BYTE PTR [eax],al
 1001068:	sbb    BYTE PTR [ebx-0x4cd60000],dh
 100106e:	add    BYTE PTR [eax],al
 1001070:	cmp    BYTE PTR [ebx-0x4cb40000],dh
 1001076:	add    BYTE PTR [eax],al
 1001078:	bound  esi,QWORD PTR [ebx-0x4c900000]
 100107e:	add    BYTE PTR [eax],al
 1001080:	xchg   esp,eax
 1001081:	mov    ebx,0xbb880000
 1001086:	add    BYTE PTR [eax],al
 1001088:	jp     0x1001045
 100108a:	add    BYTE PTR [eax],al
 100108c:	inc    eax
 100108d:	mov    edx,0xba2c0000
 1001092:	add    BYTE PTR [eax],al
 1001094:	sbb    BYTE PTR [edx-0x45fa0000],bh
 100109a:	add    BYTE PTR [eax],al
 100109c:	lock mov ecx,0xb9dc0000
 10010a2:	add    BYTE PTR [eax],al
 10010a4:	into   
 10010a5:	mov    ecx,0xb9be0000
 10010aa:	add    BYTE PTR [eax],al
 10010ac:	scas   al,BYTE PTR es:[edi]
 10010ad:	mov    ecx,0xb9a20000
 10010b2:	add    BYTE PTR [eax],al
 10010b4:	xchg   esi,eax
 10010b5:	mov    ecx,0xb9880000
 10010ba:	add    BYTE PTR [eax],al
 10010bc:	pop    edx
 10010bd:	mov    dl,0x0
 10010bf:	add    BYTE PTR [eax-0x47],ah
 10010c2:	add    BYTE PTR [eax],al
 10010c4:	push   eax
 10010c5:	mov    ecx,0xb93e0000
 10010ca:	add    BYTE PTR [eax],al
 10010cc:	sub    bh,BYTE PTR [ecx-0x46e60000]
 10010d2:	add    BYTE PTR [eax],al
 10010d4:	push   cs
 10010d5:	mov    ecx,0xb8fe0000
 10010da:	add    BYTE PTR [eax],al
 10010dc:	lock mov eax,0xb8de0000
 10010e2:	add    BYTE PTR [eax],al
 10010e4:	int3   
 10010e5:	mov    eax,0xb8ba0000
 10010ea:	add    BYTE PTR [eax],al
 10010ec:	stos   BYTE PTR es:[edi],al
 10010ed:	mov    eax,0xb8960000
 10010f2:	add    BYTE PTR [eax],al
 10010f4:	cmp    BYTE PTR [eax-0x478c0000],0x0
 10010fb:	add    BYTE PTR [esi-0x48],bl
 10010fe:	add    BYTE PTR [eax],al
 1001100:	inc    edx
 1001101:	mov    eax,0xb8320000
 1001106:	add    BYTE PTR [eax],al
 1001108:	and    BYTE PTR [eax-0x47f00000],bh
 100110e:	add    BYTE PTR [eax],al
 1001110:	add    BYTE PTR [eax-0x481a0000],bh
 1001116:	add    BYTE PTR [eax],al
 1001118:	(bad)  
 1001119:	mov    bh,0x0
 100111b:	add    BYTE PTR [edi+esi*4-0x48580000],bh
 1001122:	add    BYTE PTR [eax],al
 1001124:	mov    WORD PTR [edi-0x48840000],?
 100112a:	add    BYTE PTR [eax],al
 100112c:	ins    BYTE PTR es:[edi],dx
 100112d:	mov    bh,0x0
 100112f:	add    BYTE PTR [edx-0x49],bl
 1001132:	add    BYTE PTR [eax],al
 1001134:	cmp    al,0xb7
 1001136:	add    BYTE PTR [eax],al
 1001138:	inc    edx
 1001139:	mov    dl,0x0
 100113b:	add    BYTE PTR [edx],ch
 100113d:	mov    dl,0x0
 100113f:	add    BYTE PTR [esi],cl
 1001141:	mov    dl,0x0
 1001143:	add    dh,bh
 1001145:	mov    cl,0x0
 1001147:	add    al,ch
 1001149:	mov    cl,0x0
 100114b:	add    al,bl
 100114d:	mov    cl,0x0
 100114f:	add    BYTE PTR [edx-0x57ffff4f],bh
 1001155:	mov    cl,0x0
 1001157:	add    BYTE PTR [edx-0x7fffff4f],dl
 100115d:	mov    cl,0x0
 100115f:	add    BYTE PTR [eax-0x4f],ch
 1001162:	add    BYTE PTR [eax],al
 1001164:	push   eax
 1001165:	mov    cl,0x0
 1001167:	add    BYTE PTR [eax-0x47],bh
 100116a:	add    BYTE PTR [eax],al
 100116c:	es mov bh,0x0
 100116f:	add    BYTE PTR [esi+0xbb],ah
 1001175:	add    BYTE PTR [eax],al
 1001177:	add    dh,dl
 1001179:	mov    edx,0xbabc0000
 100117e:	add    BYTE PTR [eax],al
 1001180:	mov    ds:0xba,al
 1001185:	add    BYTE PTR [eax],al
 1001187:	add    dl,cl
 1001189:	mov    ah,0x0
 100118b:	add    al,al
 100118d:	mov    ah,0x0
 100118f:	add    BYTE PTR [edx-0x6bffff4c],ch
 1001195:	mov    ah,0x0
 1001197:	add    BYTE PTR [esi+0x7c0000b4],al
 100119d:	mov    ah,0x0
 100119f:	add    ah,dl
 10011a1:	mov    ah,0x0
 10011a3:	add    BYTE PTR [esi-0x4c],ah
 10011a6:	add    BYTE PTR [eax],al
 10011a8:	push   esi
 10011a9:	mov    ah,0x0
 10011ab:	add    BYTE PTR [esi-0x4c],al
 10011ae:	add    BYTE PTR [eax],al
 10011b0:	ds mov ah,0x0
 10011b3:	add    BYTE PTR [esi],ch
 10011b5:	mov    ah,0x0
 10011b7:	add    BYTE PTR [edx],ah
 10011b9:	mov    ah,0x0
 10011bb:	add    BYTE PTR [edx],dl
 10011bd:	mov    ah,0x0
 10011bf:	add    dh,bl
 10011c1:	mov    ah,0x0
 10011c3:	add    ah,ch
 10011c5:	mov    ah,0x0
 10011c7:	add    dh,bh
 10011c9:	mov    ah,0x0
 10011cb:	add    BYTE PTR [eax],cl
 10011cd:	mov    ch,0x0
 10011cf:	add    BYTE PTR [eax],dl
 10011d1:	mov    ch,0x0
 10011d3:	add    BYTE PTR [esi],bl
 10011d5:	mov    ch,0x0
 10011d7:	add    BYTE PTR [esi],ah
 10011d9:	mov    ch,0x0
 10011db:	add    BYTE PTR [eax],dh
 10011dd:	mov    ch,0x0
 10011df:	add    BYTE PTR [esi*4-0x4ab60000],bh
 10011e6:	add    BYTE PTR [eax],al
 10011e8:	pusha  
 10011e9:	mov    ch,0x0
 10011eb:	add    BYTE PTR [ebp+esi*4+0x0],dh
 10011ef:	add    BYTE PTR [edx+edi*4+0x0],dl
 10011f3:	add    BYTE PTR [edx-0x46],ah
 10011f6:	add    BYTE PTR [eax],al
 10011f8:	jb     0x10011b4
 10011fa:	add    BYTE PTR [eax],al
 10011fc:	cmp    BYTE PTR [edx-0x456e0000],0x0
 1001203:	add    BYTE PTR [eax-0x75ffff4b],al
 1001209:	mov    ch,0x0
 100120b:	add    BYTE PTR [edx-0x41ffff4b],ch
 1001211:	mov    ch,0x0
 1001213:	add    al,cl
 1001215:	mov    ch,0x0
 1001217:	add    dh,dl
 1001219:	mov    ch,0x0
 100121b:	add    dh,bl
 100121d:	mov    ch,0x0
 100121f:	add    al,ch
 1001221:	mov    ch,0x0
 1001223:	add    dh,bh
 1001225:	mov    ch,0x0
 1001227:	add    BYTE PTR [eax],bl
 1001229:	mov    dh,0x0
 100122b:	add    BYTE PTR [edx],ch
 100122d:	mov    dh,0x0
 100122f:	add    BYTE PTR [edx],bh
 1001231:	mov    dh,0x0
 1001233:	add    BYTE PTR [eax-0x4c],dh
 1001236:	add    BYTE PTR [eax],al
 1001238:	add    BYTE PTR [eax],al
 100123a:	add    BYTE PTR [eax],al
 100123c:	mov    edx,0x4800000
 1001241:	add    BYTE PTR [eax],al
 1001243:	add    BYTE PTR [esi],0x0
 1001246:	add    BYTE PTR [eax-0x7ffffff9],al
 100124c:	mov    eax,ds:0xa2800000
 1001251:	add    BYTE PTR [eax],al
 1001253:	and    BYTE PTR [ebx+0x21800000],0x0
 100125a:	add    BYTE PTR [eax-0x7ffffff1],al
 1001260:	adc    BYTE PTR [eax],al
 1001262:	add    BYTE PTR [eax-0x7fffffed],al
 1001268:	adc    al,0x0
 100126a:	add    BYTE PTR [eax-0x7fffffeb],al
 1001270:	sbb    BYTE PTR [eax],al
 1001272:	add    BYTE PTR [eax-0x7fffffe9],al
 1001278:	push   ss
 1001279:	add    BYTE PTR [eax],al
 100127b:	add    BYTE PTR [eax],0x0
 100127e:	add    BYTE PTR [eax],al
 1001280:	pop    eax
 1001281:	mov    ebx,0xbb420000
 1001286:	add    BYTE PTR [eax],al
 1001288:	add    BYTE PTR [eax],al
 100128a:	add    BYTE PTR [eax],al
 100128c:	fidiv  WORD PTR [ebx-0x4c380000]
 1001292:	add    BYTE PTR [eax],al
 1001294:	in     al,dx
 1001295:	mov    bl,0x0
 1001297:	add    BYTE PTR [eax-0x4bffff4d],ah
 100129d:	mov    bl,0x0
 100129f:	add    al,bh
 10012a1:	mov    bl,0x0
 10012a3:	add    BYTE PTR [edx+0xb3],dl
 10012a9:	add    BYTE PTR [eax],al
 10012ab:	add    BYTE PTR [esi],cl
 10012ad:	mov    ebx,0xbb240000
 10012b2:	add    BYTE PTR [eax],al
 10012b4:	add    BYTE PTR [eax],al
 10012b6:	add    BYTE PTR [eax],al
 10012b8:	mov    al,ds:0xb80000b6
 10012bd:	mov    dh,0x0
 10012bf:	add    al,dl
 10012c1:	mov    dh,0x0
 10012c3:	add    dl,ch
 10012c5:	mov    dh,0x0
 10012c7:	add    dh,bh
 10012c9:	mov    dh,0x0
 10012cb:	add    BYTE PTR [esi+esi*4+0x0],bh
 10012cf:	add    BYTE PTR [esi+0xb6],cl
 10012d5:	add    BYTE PTR [eax],al
 10012d7:	add    BYTE PTR [eax],al
 10012d9:	add    BYTE PTR [eax],al
 10012db:	add    BYTE PTR [eax],bl
 10012dd:	push   ebx
 10012de:	add    BYTE PTR [ecx],al
 10012e0:	pushf  
 10012e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10012e2:	add    BYTE PTR [ecx],al
 10012e4:	mov    bh,0xa6
 10012e6:	add    BYTE PTR [ecx],al
 10012e8:	shl    BYTE PTR [esi-0x591cff00],cl
 10012ee:	add    BYTE PTR [ecx],al
 10012f0:	adc    BYTE PTR [edi-0x598fff00],ah
 10012f6:	add    BYTE PTR [ecx],al
	...
 1001300:	ds push ebp
 1001302:	add    BYTE PTR [ecx],al
 1001304:	pushf  
 1001305:	pop    ebx
 1001306:	add    BYTE PTR [ecx],al
	...
 1001314:	mov    dl,0xe2
 1001316:	xor    eax,0x4f
 100131b:	add    BYTE PTR [edx],al
 100131d:	add    BYTE PTR [eax],al
 100131f:	add    BYTE PTR [ecx],ch
 1001321:	add    BYTE PTR [eax],al
 1001323:	add    al,al
 1001325:	sub    DWORD PTR [eax],eax
 1001327:	add    al,al
 1001329:	sbb    eax,0x12790000
 100132e:	daa    
 100132f:	daa    
 1001330:	out    dx,al
 1001331:	xchg   esi,eax
 1001332:	sbb    eax,0xd92f9849
 1001337:	xor    ebx,esi
 1001339:	lds    esi,FWORD PTR [ebx+edx*2]
 100133c:	pop    ds
 100133d:	fcmovbe st,st(6)
 100133f:	aaa    
 1001340:	repz cmc 
 1001342:	and    al,0x4b
 1001344:	xchg   edi,eax
 1001345:	inc    esi
 1001346:	je     0x1001372
 1001348:	inc    edx
 1001349:	dec    eax
 100134a:	stos   DWORD PTR es:[edi],eax
 100134b:	xchg   ebx,eax
 100134c:	in     eax,dx
 100134d:	inc    esi
 100134e:	rol    BYTE PTR [edi+ecx*4-0x32],0xfd
 1001353:	inc    ecx
 1001354:	sbb    DWORD PTR [ebx-0x49],0x7792b29f
 100135b:	(bad)  
 100135c:	in     eax,dx
 100135d:	inc    esi
 100135e:	rol    BYTE PTR [edi+ecx*4-0x32],0xfd
 1001363:	inc    ecx
 1001364:	sbb    DWORD PTR [ebx-0x49],0x7792b29f
 100136b:	(bad)  
 100136c:	add    BYTE PTR fs:[eax+eax*1+0x73],dh
 1001371:	add    BYTE PTR [eax+0x0],dh
 1001374:	imul   eax,DWORD PTR [eax],0x650070
 100137a:	ins    BYTE PTR es:[edi],dx
 100137b:	add    BYTE PTR [ecx+0x0],ch
 100137e:	outs   dx,BYTE PTR ds:[esi]
 100137f:	add    BYTE PTR [ebp+0x0],ah
 1001382:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 1001387:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
 1001393:	add    al,al
 1001395:	add    BYTE PTR [eax],al
 1001397:	add    BYTE PTR [eax],al
 1001399:	add    BYTE PTR [eax],al
 100139b:	inc    esi
 100139c:	add    BYTE PTR [edx+eax*1],al
 100139f:	add    BYTE PTR [eax],al
 10013a1:	add    BYTE PTR [eax],al
 10013a3:	add    al,al
 10013a5:	add    BYTE PTR [eax],al
 10013a7:	add    BYTE PTR [eax],al
 10013a9:	add    BYTE PTR [eax],al
 10013ab:	inc    esi
 10013ac:	inc    ecx
 10013ad:	add    BYTE PTR [eax+eax*1+0x76],ah
 10013b1:	add    BYTE PTR [ecx+0x0],ah
 10013b4:	jo     0x10013b6
 10013b6:	imul   eax,DWORD PTR [eax],0x320033
 10013bc:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 10013c1:	add    BYTE PTR [eax+eax*1+0x0],ch
 10013c5:	add    BYTE PTR [eax],al
 10013c7:	add    BYTE PTR [edx+0x65],dl
 10013ca:	addr16 dec edi
 10013cc:	jo     0x1001433
 10013ce:	outs   dx,BYTE PTR ds:[esi]
 10013cf:	dec    ebx
 10013d0:	gs jns 0x1001427
 10013d3:	jb     0x1001436
 10013d5:	outs   dx,BYTE PTR ds:[esi]
 10013d6:	jae    0x1001439
 10013d8:	arpl   WORD PTR [ebp+eiz*2+0x64],si
 10013dc:	push   edi
 10013dd:	add    BYTE PTR [eax],al
 10013df:	add    BYTE PTR [esi+0x1],al
 10013e2:	add    BYTE PTR [eax],al
 10013e4:	add    BYTE PTR [eax],al
 10013e6:	add    BYTE PTR [eax],al
 10013e8:	rol    BYTE PTR [eax],0x0
 10013eb:	add    BYTE PTR [eax],al
 10013ed:	add    BYTE PTR [eax],al
 10013ef:	inc    esi
 10013f0:	dec    edi
 10013f1:	add    BYTE PTR [eax+eax*1+0x45],cl
 10013f5:	add    BYTE PTR [ecx+0x0],al
 10013f8:	push   ebp
 10013f9:	add    BYTE PTR [eax+eax*1+0x33],dl
 10013fd:	add    BYTE PTR [edx],dh
 10013ff:	add    BYTE PTR [esi],ch
 1001401:	add    BYTE PTR [eax+eax*1+0x4c],al
 1001405:	add    BYTE PTR [eax+eax*1+0x0],cl
 1001409:	add    BYTE PTR [eax],al
 100140b:	add    BYTE PTR [ebp+0x6e],dl
 100140e:	push   edx
 100140f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x79547265
 1001418:	jo     0x100147f
 100141a:	dec    esp
 100141b:	imul   esp,DWORD PTR [edx+0x46],0x7355726f
 1001422:	gs jb  0x1001425
 1001425:	add    BYTE PTR [eax],al
 1001427:	add    BYTE PTR [edx+0x65],dl
 100142a:	imul   esi,DWORD PTR [bp+di+0x74],0x79547265
 1001432:	jo     0x1001499
 1001434:	dec    esp
 1001435:	imul   esp,DWORD PTR [edx+0x46],0x7355726f
 100143c:	gs jb  0x100143f
 100143f:	add    BYTE PTR [edi+edx*2+0x0],cl
 1001443:	add    DWORD PTR [edi+edx*2+0x0],ecx
 1001447:	add    DWORD PTR [edi+edx*2+0x0],ecx
 100144b:	add    DWORD PTR [ebp+0x36],edx
 100144e:	add    BYTE PTR [ecx],al
 1001450:	call   0x36:0xc0010036
 1001457:	add    DWORD PTR [eax+0x14],esi
 100145a:	add    BYTE PTR [ecx],al
 100145c:	add    BYTE PTR [eax],al
 100145e:	add    BYTE PTR [eax],al
 1001460:	add    DWORD PTR [eax],eax
	...
 100146e:	add    BYTE PTR [eax],al
 1001470:	add    DWORD PTR [eax],eax
 1001472:	add    BYTE PTR [eax],al
 1001474:	add    BYTE PTR [eax],al
 1001476:	add    BYTE PTR [eax],al
 1001478:	rol    BYTE PTR [eax],0x0
 100147b:	add    BYTE PTR [eax],al
 100147d:	add    BYTE PTR [eax],al
 100147f:	inc    esi
 1001480:	mov    al,0x14
 1001482:	add    BYTE PTR [ecx],al
 1001484:	add    al,0x0
 1001486:	add    BYTE PTR [eax],al
 1001488:	add    DWORD PTR [eax],eax
 100148a:	add    BYTE PTR [eax],al
 100148c:	pushf  
 100148d:	adc    eax,DWORD PTR [eax]
 100148f:	add    DWORD PTR [eax+eax*1],eax
 1001492:	add    BYTE PTR [eax],al
 1001494:	add    DWORD PTR [eax],eax
 1001496:	add    BYTE PTR [eax],al
 1001498:	rcl    BYTE PTR [eax+eax*1],0x1
 100149c:	add    BYTE PTR [eax],al
 100149e:	add    BYTE PTR [eax],al
 10014a0:	add    DWORD PTR [eax],eax
	...
 10014ae:	add    BYTE PTR [eax],al
 10014b0:	jns    0x10014c4
 10014b2:	daa    
 10014b3:	daa    
 10014b4:	out    dx,al
 10014b5:	xchg   esi,eax
 10014b6:	sbb    eax,0xd92f9849
 10014bb:	xor    ebx,esi
 10014bd:	lds    esi,FWORD PTR [ebx+edx*2]
 10014c0:	pusha  
 10014c1:	cmp    eax,0x548fdf0b
 10014c6:	sbb    edx,DWORD PTR [eax]
 10014c8:	mov    fs,WORD PTR [ebp+0x8]
 10014cb:	add    BYTE PTR [ebx],ch
 10014cd:	sub    edx,ecx
 10014cf:	sbb    DWORD PTR [ebp+ebp*2+0x70],eax
 10014d3:	inc    edi
 10014d4:	gs je  0x100151a
 10014d7:	ins    BYTE PTR es:[edi],dx
 10014d8:	imul   esp,DWORD PTR [ebp+0x6e],0x70784574
 10014df:	outs   dx,DWORD PTR ds:[esi]
 10014e0:	jb     0x1001556
 10014e2:	add    BYTE PTR [eax],al
 10014e4:	and    eax,0x25007300
 10014e9:	add    BYTE PTR [ebx+0x0],dh
 10014ec:	pop    edi
 10014ed:	add    BYTE PTR ds:0x2e006400,ah
 10014f3:	add    BYTE PTR [eax+eax*1+0x6d],dh
 10014f7:	add    BYTE PTR [eax+0x0],dh
 10014fa:	add    BYTE PTR [eax],al
 10014fc:	and    eax,0x25007300
 1001501:	add    BYTE PTR [ebx+0x0],dh
 1001504:	pop    edi
 1001505:	add    BYTE PTR ds:0x2e006400,ah
 100150b:	add    BYTE PTR [ebp+0x0],ch
 100150e:	add    BYTE PTR fs:[ebp+0x0],ch
 1001512:	jo     0x1001514
 1001514:	add    BYTE PTR [eax],al
 1001516:	add    BYTE PTR [eax],al
 1001518:	push   ebx
 1001519:	add    BYTE PTR [edi+0x0],cl
 100151c:	inc    esi
 100151d:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001521:	add    BYTE PTR [ecx+0x0],al
 1001524:	push   edx
 1001525:	add    BYTE PTR [ebp+0x0],al
 1001528:	pop    esp
 1001529:	add    BYTE PTR [ebp+0x0],cl
 100152c:	imul   eax,DWORD PTR [eax],0x720063
 1001532:	outs   dx,DWORD PTR ds:[esi]
 1001533:	add    BYTE PTR [ebx+0x0],dh
 1001536:	outs   dx,DWORD PTR ds:[esi]
 1001537:	add    BYTE PTR [esi+0x0],ah
 100153a:	je     0x100153c
 100153c:	pop    esp
 100153d:	add    BYTE PTR [ebp+0x0],cl
 1001540:	imul   eax,DWORD PTR [eax],0x720063
 1001546:	outs   dx,DWORD PTR ds:[esi]
 1001547:	add    BYTE PTR [ebx+0x0],dh
 100154a:	outs   dx,DWORD PTR ds:[esi]
 100154b:	add    BYTE PTR [esi+0x0],ah
 100154e:	je     0x1001550
 1001550:	and    BYTE PTR [eax],al
 1001552:	push   ebx
 1001553:	add    BYTE PTR [ecx+0x0],dl
 1001556:	dec    esp
 1001557:	add    BYTE PTR [eax],ah
 1001559:	add    BYTE PTR [ebx+0x0],dl
 100155c:	add    BYTE PTR gs:[edx+0x0],dh
 1001560:	jbe    0x1001562
 1001562:	add    BYTE PTR gs:[edx+0x0],dh
 1001566:	pop    esp
 1001567:	add    BYTE PTR [ecx],dh
 1001569:	add    BYTE PTR [ecx],dh
 100156b:	add    BYTE PTR [eax],dh
 100156d:	add    BYTE PTR [eax+eax*1+0x53],bl
 1001571:	add    BYTE PTR [ebx+0x0],dl
 1001574:	dec    ecx
 1001575:	add    BYTE PTR [ebx+0x0],dl
 1001578:	pop    esp
 1001579:	add    BYTE PTR [ebx+0x0],dl
 100157c:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
 1001581:	add    BYTE PTR [eax+0x0],dh
 1001584:	pop    esp
 1001585:	add    BYTE PTR [eax+eax*1+0x74],al
 1001589:	add    BYTE PTR [ebx+0x0],dh
 100158c:	push   eax
 100158d:	add    BYTE PTR [ecx+0x0],ah
 1001590:	je     0x1001592
 1001592:	push   0x0
 1001597:	add    BYTE PTR [ebx+0x0],dl
 100159a:	jno    0x100159c
 100159c:	ins    BYTE PTR es:[edi],dx
 100159d:	add    BYTE PTR [eax+eax*1+0x75],al
 10015a1:	add    BYTE PTR [ebp+0x0],ch
 10015a4:	jo     0x10015a6
 10015a6:	add    BYTE PTR gs:[edx+0x0],dh
 10015aa:	inc    esi
 10015ab:	add    BYTE PTR [eax+eax*1+0x61],ch
 10015af:	add    BYTE PTR [edi+0x0],ah
 10015b2:	jae    0x10015b4
 10015b4:	add    BYTE PTR [eax],al
 10015b6:	add    BYTE PTR [eax],al
 10015b8:	push   ebx
 10015b9:	add    BYTE PTR [ecx+0x0],dh
 10015bc:	ins    BYTE PTR es:[edi],dx
 10015bd:	add    BYTE PTR [eax+eax*1+0x75],al
 10015c1:	add    BYTE PTR [ebp+0x0],ch
 10015c4:	jo     0x10015c6
 10015c6:	add    BYTE PTR gs:[edx+0x0],dh
 10015ca:	dec    ebp
 10015cb:	add    BYTE PTR [ecx+0x0],ch
 10015ce:	outs   dx,BYTE PTR ds:[esi]
 10015cf:	add    BYTE PTR [ecx+0x0],ch
 10015d2:	add    BYTE PTR fs:[ebp+0x0],dh
 10015d6:	ins    DWORD PTR es:[edi],dx
 10015d7:	add    BYTE PTR [eax+0x0],dh
 10015da:	inc    esi
 10015db:	add    BYTE PTR [eax+eax*1+0x61],ch
 10015df:	add    BYTE PTR [edi+0x0],ah
 10015e2:	jae    0x10015e4
 10015e4:	add    BYTE PTR [eax],al
 10015e6:	add    BYTE PTR [eax],al
 10015e8:	cmovs  eax,DWORD PTR [eax]
 10015eb:	add    DWORD PTR [ebx+0x43],edx
 10015ee:	add    BYTE PTR [ecx],al
 10015f0:	pop    esi
 10015f1:	inc    ebx
 10015f2:	add    BYTE PTR [ecx],al
 10015f4:	popf   
 10015f5:	xor    al,BYTE PTR [eax]
 10015f7:	add    DWORD PTR [esi-0x3ffeffce],esp
 10015fd:	inc    edx
 10015fe:	add    BYTE PTR [ecx],al
 1001600:	jnp    0x1001602
 1001602:	add    BYTE PTR ss:[edx+0x0],al
 1001606:	xor    DWORD PTR [eax],eax
 1001608:	inc    esp
 1001609:	add    BYTE PTR [eax],bh
 100160b:	add    BYTE PTR [ebx],dh
 100160d:	add    BYTE PTR [ecx],bh
 100160f:	add    BYTE PTR [eax],bh
 1001611:	add    BYTE PTR ds:0x44003000,ch
 1001617:	add    BYTE PTR [eax],dh
 1001619:	add    BYTE PTR [ebx+0x0],al
 100161c:	sub    eax,0x30003400
 1001621:	add    BYTE PTR [eax],bh
 1001623:	add    BYTE PTR [ecx],bh
 1001625:	add    BYTE PTR ds:0x42004200,ch
 100162b:	add    BYTE PTR [ecx],bh
 100162d:	add    BYTE PTR [eax],dh
 100162f:	add    BYTE PTR ds:0x37003600,ch
 1001635:	add    BYTE PTR [eax+eax*1+0x44],al
 1001639:	add    BYTE PTR [edx+0x0],al
 100163c:	xor    DWORD PTR [eax],eax
 100163e:	xor    BYTE PTR [eax],al
 1001640:	xor    eax,DWORD PTR [eax]
 1001642:	xor    eax,0x44003300
 1001647:	add    BYTE PTR [esi],dh
 1001649:	add    BYTE PTR [ebp+0x0],bh
 100164c:	add    BYTE PTR [eax],al
 100164e:	add    BYTE PTR [eax],al
 1001650:	inc    ecx
 1001651:	add    BYTE PTR [eax+0x0],dl
 1001654:	push   eax
 1001655:	add    BYTE PTR [ecx+0x0],cl
 1001658:	inc    esp
 1001659:	add    BYTE PTR [eax],al
 100165b:	add    al,dh
 100165d:	dec    eax
 100165e:	add    BYTE PTR [ecx],al
 1001660:	mov    eax,ds:0xbc010048
 1001665:	dec    eax
 1001666:	add    BYTE PTR [ecx],al
 1001668:	jns    0x10016b5
 100166a:	add    BYTE PTR [ecx],al
 100166c:	mov    ebp,0x4c010049
 1001671:	dec    ebx
 1001672:	add    BYTE PTR [ecx],al
 1001674:	pop    ebx
 1001675:	dec    ebx
 1001676:	add    BYTE PTR [ecx],al
 1001678:	push   0x4b
 100167a:	add    BYTE PTR [ecx],al
 100167c:	loop   0x10016ba
 100167e:	add    BYTE PTR [ecx],al
 1001680:	push   es
 1001681:	cmp    eax,0x3d310100
 1001686:	add    BYTE PTR [ecx],al
 1001688:	pop    eax
 1001689:	cmp    eax,0x4bac0100
 100168e:	add    BYTE PTR [ecx],al
 1001690:	aam    0x4b
 1001692:	add    BYTE PTR [ecx],al
 1001694:	and    cl,BYTE PTR [eax+eax*1+0x1]
 1001698:	dec    edi
 1001699:	dec    esp
 100169a:	add    BYTE PTR [ecx],al
 100169c:	xchg   ebp,eax
 100169d:	dec    edi
 100169e:	add    BYTE PTR [ecx],al
 10016a0:	sub    eax,0x65007200
 10016a5:	add    BYTE PTR [edi+0x0],ah
 10016a8:	popa   
 10016a9:	add    BYTE PTR [ebx+0x0],dh
 10016ac:	and    BYTE PTR [eax],al
 10016ae:	add    BYTE PTR [eax],al
 10016b0:	dec    ebp
 10016b1:	dec    edx
 10016b2:	add    BYTE PTR [ecx],al
 10016b4:	dec    BYTE PTR [ecx+0x0]
 10016b7:	add    DWORD PTR [ecx],ebx
 10016b9:	dec    edx
 10016ba:	add    BYTE PTR [ecx],al
 10016bc:	push   ebp
 10016bd:	add    BYTE PTR ss:[ecx],al
 10016c0:	call   0x4a:0x6f010036
 10016c7:	add    DWORD PTR [ebp+0x0],ecx
 10016ca:	jae    0x10016cc
 10016cc:	arpl   WORD PTR [eax],ax
 10016ce:	outs   dx,DWORD PTR ds:[esi]
 10016cf:	add    BYTE PTR [edx+0x0],dh
 10016d2:	add    BYTE PTR gs:[ebp+0x0],ah
 10016d6:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 10016db:	add    BYTE PTR [eax+eax*1+0x0],ch
 10016df:	add    BYTE PTR ds:0x2f00,ch
 10016e5:	add    BYTE PTR [eax],al
 10016e7:	add    BYTE PTR [ebp+0x0],dl
 10016ea:	outs   dx,BYTE PTR ds:[esi]
 10016eb:	add    BYTE PTR [edx+0x0],dh
 10016ee:	add    BYTE PTR gs:[edi+0x0],ah
 10016f2:	push   ebx
 10016f3:	add    BYTE PTR [ebp+0x0],ah
 10016f6:	jb     0x10016f8
 10016f8:	jbe    0x10016fa
 10016fa:	add    BYTE PTR gs:[edx+0x0],dh
 10016fe:	add    BYTE PTR [eax],al
 1001700:	push   edx
 1001701:	add    BYTE PTR [ebp+0x0],ah
 1001704:	add    BYTE PTR [bp+di+0x0],dl
 1001708:	add    BYTE PTR gs:[edx+0x0],dh
 100170c:	jbe    0x100170e
 100170e:	add    BYTE PTR gs:[edx+0x0],dh
 1001712:	add    BYTE PTR [eax],al
 1001714:	push   ebp
 1001715:	add    BYTE PTR [esi+0x0],ch
 1001718:	jb     0x100171a
 100171a:	add    BYTE PTR gs:[edi+0x0],ah
 100171e:	push   ebx
 100171f:	add    BYTE PTR [ebp+0x0],ah
 1001722:	jb     0x1001724
 1001724:	jbe    0x1001726
 1001726:	add    BYTE PTR gs:[edx+0x0],dh
 100172a:	push   eax
 100172b:	add    BYTE PTR [ebp+0x0],ah
 100172e:	jb     0x1001730
 1001730:	push   ebp
 1001731:	add    BYTE PTR [ebx+0x0],dh
 1001734:	add    BYTE PTR gs:[edx+0x0],dh
 1001738:	add    BYTE PTR [eax],al
 100173a:	add    BYTE PTR [eax],al
 100173c:	push   edx
 100173d:	add    BYTE PTR [ebp+0x0],ah
 1001740:	add    BYTE PTR [bp+di+0x0],dl
 1001744:	add    BYTE PTR gs:[edx+0x0],dh
 1001748:	jbe    0x100174a
 100174a:	add    BYTE PTR gs:[edx+0x0],dh
 100174e:	push   eax
 100174f:	add    BYTE PTR [ebp+0x0],ah
 1001752:	jb     0x1001754
 1001754:	push   ebp
 1001755:	add    BYTE PTR [ebx+0x0],dh
 1001758:	add    BYTE PTR gs:[edx+0x0],dh
 100175c:	add    BYTE PTR [eax],al
 100175e:	add    BYTE PTR [eax],al
 1001760:	adc    al,BYTE PTR [edx+eax*1]
 1001763:	add    BYTE PTR [eax],al
 1001765:	add    BYTE PTR [eax],al
 1001767:	add    al,al
 1001769:	add    BYTE PTR [eax],al
 100176b:	add    BYTE PTR [eax],al
 100176d:	add    BYTE PTR [eax],al
 100176f:	inc    esi
 1001770:	add    DWORD PTR [edx+eax*1],eax
 1001773:	add    BYTE PTR [eax],al
 1001775:	add    BYTE PTR [eax],al
 1001777:	add    al,al
 1001779:	add    BYTE PTR [eax],al
 100177b:	add    BYTE PTR [eax],al
 100177d:	add    BYTE PTR [eax],al
 100177f:	inc    esi
 1001780:	jb     0x1001739
 1001782:	jb     0x10017d9
 1001784:	lods   al,BYTE PTR ds:[esi]
 1001785:	mov    BYTE PTR ds:0xe2f8964a,dh
 100178b:	xchg   BYTE PTR [esi],ah
 100178d:	lods   al,BYTE PTR ds:[esi]
 100178e:	jle    0x100171f
 1001790:	dec    ebp
 1001791:	or     eax,0x3ea562f5
 1001796:	pop    ecx
 1001797:	dec    eax
 1001798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1001799:	push   es
 100179a:	xchg   ebp,eax
 100179b:	retf   0xdd9f
 100179e:	ret    
 100179f:	push   esi
 10017a0:	push   ss
 10017a1:	es adc al,ch
 10017a4:	and    al,0x3e
 10017a6:	daa    
 10017a7:	dec    eax
 10017a8:	test   DWORD PTR [edx+0x1be79748],esi
 10017ae:	pop    ecx
 10017af:	mov    ebx,DWORD PTR [eax-0xffeff3d]
 10017b5:	ret    
 10017b6:	add    BYTE PTR [ecx],al
 10017b8:	xor    al,0x2a
 10017ba:	add    BYTE PTR [ecx],al
 10017bc:	stc    
 10017bd:	pop    edx
 10017be:	add    BYTE PTR [ecx],al
 10017c0:	adc    BYTE PTR [ecx+0x2f],bl
 10017c3:	mov    dh,0x28
 10017c5:	rcl    DWORD PTR gs:[ecx],1
 10017c8:	xchg   esi,eax
 10017c9:	adc    DWORD PTR [eax],eax
 10017cb:	add    al,bh
 10017cd:	push   ds
 10017ce:	or     eax,0x4c3de00d
 10017d3:	cmp    DWORD PTR [edi+0x3c],ebp
 10017d6:	rcl    BYTE PTR [ecx],cl
 10017d8:	cmp    DWORD PTR [ebx+0x0],0x7a794fc0
 10017df:	mov    bh,0xca
 10017e1:	test   eax,0x92a25dc0
 10017e6:	add    al,0x42
 10017e8:	nop
 10017e9:	add    esp,esp
 10017eb:	into   
 10017ec:	pop    edi
 10017ed:	adc    ecx,esp
 10017ef:	test   al,0x23
 10017f1:	add    eax,DWORD PTR [eax]
 10017f3:	add    BYTE PTR [eax],al
 10017f5:	add    BYTE PTR [eax],al
 10017f7:	add    al,al
 10017f9:	add    BYTE PTR [eax],al
 10017fb:	add    BYTE PTR [eax],al
 10017fd:	add    BYTE PTR [eax],al
 10017ff:	inc    esi
 1001800:	push   ebx
 1001801:	push   ebx
 1001802:	dec    ecx
 1001803:	push   ebx
 1001804:	inc    edx
 1001805:	imul   ebp,DWORD PTR gs:[bp+0x44],0x706d75
 100180e:	add    BYTE PTR [eax],al
 1001810:	push   ebx
 1001811:	push   ebx
 1001812:	dec    ecx
 1001813:	push   ebx
 1001814:	inc    edi
 1001815:	gs je  0x100185d
 1001818:	js     0x100188e
 100181a:	jb     0x100187d
 100181c:	inc    esp
 100181d:	jne    0x100188c
 100181f:	jo     0x1001867
 1001821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x48],0x6c646e61
 1001829:	add    BYTE PTR gs:[eax],al
 100182c:	add    BYTE PTR [eax],al
 100182e:	add    BYTE PTR [eax],al
 1001830:	xor    al,0x11
 1001832:	sbb    ecx,esp
 1001834:	jmp    0x10017c5
 1001836:	pop    edi
 1001837:	dec    edx
 1001838:	cwde   
 1001839:	xor    DWORD PTR [eax+0x60],esi
 100183c:	xchg   ecx,eax
 100183d:	dec    eax
 100183e:	jns    0x1001847
 1001840:	push   ebx
 1001841:	add    BYTE PTR [edi+0x0],cl
 1001844:	inc    esi
 1001845:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001849:	add    BYTE PTR [ecx+0x0],al
 100184c:	push   edx
 100184d:	add    BYTE PTR [ebp+0x0],al
 1001850:	pop    esp
 1001851:	add    BYTE PTR [ebp+0x0],cl
 1001854:	imul   eax,DWORD PTR [eax],0x720063
 100185a:	outs   dx,DWORD PTR ds:[esi]
 100185b:	add    BYTE PTR [ebx+0x0],dh
 100185e:	outs   dx,DWORD PTR ds:[esi]
 100185f:	add    BYTE PTR [esi+0x0],ah
 1001862:	je     0x1001864
 1001864:	pop    esp
 1001865:	add    BYTE PTR [ebp+0x0],cl
 1001868:	imul   eax,DWORD PTR [eax],0x720063
 100186e:	outs   dx,DWORD PTR ds:[esi]
 100186f:	add    BYTE PTR [ebx+0x0],dh
 1001872:	outs   dx,DWORD PTR ds:[esi]
 1001873:	add    BYTE PTR [esi+0x0],ah
 1001876:	je     0x1001878
 1001878:	and    BYTE PTR [eax],al
 100187a:	push   ebx
 100187b:	add    BYTE PTR [ecx+0x0],dl
 100187e:	dec    esp
 100187f:	add    BYTE PTR [eax],ah
 1001881:	add    BYTE PTR [ebx+0x0],dl
 1001884:	add    BYTE PTR gs:[edx+0x0],dh
 1001888:	jbe    0x100188a
 100188a:	add    BYTE PTR gs:[edx+0x0],dh
 100188e:	pop    esp
 100188f:	add    BYTE PTR [ecx],dh
 1001891:	add    BYTE PTR [ecx],dh
 1001893:	add    BYTE PTR [eax],dh
 1001895:	add    BYTE PTR [eax],al
 1001897:	add    BYTE PTR [esi],ch
 1001899:	add    BYTE PTR [eax],al
 100189b:	add    BYTE PTR [ebp+0x0],al
 100189e:	jb     0x10018a0
 10018a0:	jb     0x10018a2
 10018a2:	outs   dx,DWORD PTR ds:[esi]
 10018a3:	add    BYTE PTR [edx+0x0],dh
 10018a6:	push   edx
 10018a7:	add    BYTE PTR [ebp+0x0],ah
 10018aa:	jo     0x10018ac
 10018ac:	outs   dx,DWORD PTR ds:[esi]
 10018ad:	add    BYTE PTR [edx+0x0],dh
 10018b0:	je     0x10018b2
 10018b2:	imul   eax,DWORD PTR [eax],0x67006e
 10018b8:	inc    esp
 10018b9:	add    BYTE PTR [ecx+0x0],ch
 10018bc:	jb     0x10018be
 10018be:	add    BYTE PTR [eax],al
 10018c0:	dec    ecx
 10018c1:	add    BYTE PTR [ebx+0x0],dl
 10018c4:	inc    esp
 10018c5:	add    BYTE PTR [eax],al
 10018c7:	add    BYTE PTR [ecx+0x0],bh
 10018ca:	jns    0x10018cc
 10018cc:	jns    0x10018ce
 10018ce:	jns    0x10018d0
 10018d0:	sub    eax,0x4d004d00
 10018d5:	add    BYTE PTR ds:0x64006400,ch
 10018db:	add    BYTE PTR [eax],al
 10018dd:	add    BYTE PTR [eax],al
 10018df:	add    BYTE PTR [eax+0x0],cl
 10018e2:	dec    eax
 10018e3:	add    BYTE PTR [edx],bh
 10018e5:	add    BYTE PTR [ebp+0x0],ch
 10018e8:	ins    DWORD PTR es:[edi],dx
 10018e9:	add    BYTE PTR [edx],bh
 10018eb:	add    BYTE PTR [ebx+0x0],dh
 10018ee:	jae    0x10018f0
	...
 10018f8:	and    eax,DWORD PTR [eax]
 10018fa:	and    BYTE PTR [eax],al
 10018fc:	push   ebx
 10018fd:	add    BYTE PTR [ebx+0x0],dl
 1001900:	dec    ecx
 1001901:	add    BYTE PTR [ebx+0x0],dl
 1001904:	and    BYTE PTR [eax],al
 1001906:	push   esp
 1001907:	add    BYTE PTR [ebp+0x0],ah
 100190a:	js     0x100190c
 100190c:	je     0x100190e
 100190e:	jne    0x1001910
 1001910:	popa   
 1001911:	add    BYTE PTR [eax+eax*1+0x20],ch
 1001915:	add    BYTE PTR [eax+eax*1+0x75],al
 1001919:	add    BYTE PTR [ebp+0x0],ch
 100191c:	jo     0x100191e
 100191e:	and    BYTE PTR [eax],al
 1001920:	je     0x1001922
 1001922:	popa   
 1001923:	add    BYTE PTR [ebx+0x0],ch
 1001926:	add    BYTE PTR gs:[esi+0x0],ch
 100192a:	and    BYTE PTR [eax],al
 100192c:	popa   
 100192d:	add    BYTE PTR [eax+eax*1+0x20],dh
 1001931:	add    BYTE PTR ds:0x20007300,ah
 1001937:	add    BYTE PTR ds:0xd007300,ah
 100193d:	add    BYTE PTR [edx],cl
 100193f:	add    BYTE PTR [eax],al
 1001941:	add    BYTE PTR [eax],al
 1001943:	add    BYTE PTR [ebx],ah
 1001945:	add    BYTE PTR [eax],ah
 1001947:	add    BYTE PTR [eax+0x0],dl
 100194a:	dec    ecx
 100194b:	add    BYTE PTR [eax+eax*1+0x20],al
 100194f:	add    BYTE PTR ds:0xd006400,ah
 1001955:	add    BYTE PTR [edx],cl
 1001957:	add    BYTE PTR [eax],al
 1001959:	add    BYTE PTR [eax],al
 100195b:	add    BYTE PTR [ebx],ah
 100195d:	add    BYTE PTR [eax],ah
 100195f:	add    BYTE PTR [ecx+0x0],cl
 1001962:	ins    DWORD PTR es:[edi],dx
 1001963:	add    BYTE PTR [ecx+0x0],ah
 1001966:	add    BYTE PTR [di+0x0],ah
 100196a:	and    BYTE PTR [eax],al
 100196c:	dec    esi
 100196d:	add    BYTE PTR [ecx+0x0],ah
 1001970:	ins    DWORD PTR es:[edi],dx
 1001971:	add    BYTE PTR [ebp+0x0],ah
 1001974:	and    BYTE PTR [eax],al
 1001976:	pop    ebx
 1001977:	add    BYTE PTR ds:0x5d007300,ah
 100197d:	add    BYTE PTR ds:0xa00,cl
 1001983:	add    BYTE PTR [eax],al
 1001985:	add    BYTE PTR [eax],al
 1001987:	add    BYTE PTR [ebx],ah
 1001989:	add    BYTE PTR [eax],ah
 100198b:	add    BYTE PTR [edi+0x0],cl
 100198e:	push   ebx
 100198f:	add    BYTE PTR [eax],ah
 1001991:	add    BYTE PTR [ebp+0x0],ch
 1001994:	popa   
 1001995:	add    BYTE PTR [edx+0x0],ch
 1001998:	outs   dx,DWORD PTR ds:[esi]
 1001999:	add    BYTE PTR [edx+0x0],dh
 100199c:	cmp    eax,0x64002500
 10019a1:	add    BYTE PTR [eax],ah
 10019a3:	add    BYTE PTR [ebp+0x0],ch
 10019a6:	imul   eax,DWORD PTR [eax],0x6f006e
 10019ac:	jb     0x10019ae
 10019ae:	cmp    eax,0x64002500
 10019b3:	add    BYTE PTR [eax],ah
 10019b5:	add    BYTE PTR [edx+0x0],ah
 10019b8:	jne    0x10019ba
 10019ba:	imul   eax,DWORD PTR [eax],0x64006c
 10019c0:	cmp    eax,0x64002500
 10019c5:	add    BYTE PTR [eax],ah
 10019c7:	add    BYTE PTR ds:0xd007300,ah
 10019cd:	add    BYTE PTR [edx],cl
 10019cf:	add    BYTE PTR [eax],al
 10019d1:	add    BYTE PTR [eax],al
 10019d3:	add    BYTE PTR [ecx+0x0],ah
 10019d6:	ins    DWORD PTR es:[edi],dx
 10019d7:	add    BYTE PTR [eax+eax*1+0x36],ah
 10019db:	add    BYTE PTR [eax+eax*1],dh
 10019de:	add    BYTE PTR [eax],al
 10019e0:	imul   eax,DWORD PTR [eax],0x360061
 10019e6:	xor    al,0x0
 10019e8:	add    BYTE PTR [eax],al
 10019ea:	add    BYTE PTR [eax],al
 10019ec:	js     0x10019ee
 10019ee:	cmp    BYTE PTR [eax],al
 10019f0:	add    BYTE PTR ss:[eax],al
 10019f3:	add    BYTE PTR [ebp+0x0],dh
 10019f6:	outs   dx,BYTE PTR ds:[esi]
 10019f7:	add    BYTE PTR [ebx+0x0],ch
 10019fa:	outs   dx,BYTE PTR ds:[esi]
 10019fb:	add    BYTE PTR [edi+0x0],ch
 10019fe:	ja     0x1001a00
 1001a00:	outs   dx,BYTE PTR ds:[esi]
 1001a01:	add    BYTE PTR [edi],bh
 1001a03:	add    BYTE PTR [eax],al
 1001a05:	add    BYTE PTR [eax],al
 1001a07:	add    BYTE PTR [ebp+0x0],dh
 1001a0a:	outs   dx,BYTE PTR ds:[esi]
 1001a0b:	add    BYTE PTR [eax+eax*1+0x65],ah
 1001a0f:	add    BYTE PTR [edx+0x0],dh
 1001a12:	and    BYTE PTR [eax],al
 1001a14:	push   edi
 1001a15:	add    BYTE PTR [edi+0x0],cl
 1001a18:	push   edi
 1001a19:	add    BYTE PTR [esi],dh
 1001a1b:	add    BYTE PTR [eax+eax*1],dh
 1001a1e:	add    BYTE PTR [eax],al
 1001a20:	jo     0x1001a22
 1001a22:	jb     0x1001a24
 1001a24:	outs   dx,DWORD PTR ds:[esi]
 1001a25:	add    BYTE PTR [ebx+0x0],ah
 1001a28:	add    BYTE PTR gs:[ebx+0x0],dh
 1001a2c:	jae    0x1001a2e
 1001a2e:	outs   dx,DWORD PTR ds:[esi]
 1001a2f:	add    BYTE PTR [edx+0x0],dh
 1001a32:	jae    0x1001a34
 1001a34:	add    BYTE PTR [eax],al
 1001a36:	add    BYTE PTR [eax],al
 1001a38:	jo     0x1001a3a
 1001a3a:	jb     0x1001a3c
 1001a3c:	outs   dx,DWORD PTR ds:[esi]
 1001a3d:	add    BYTE PTR [ebx+0x0],ah
 1001a40:	add    BYTE PTR gs:[ebx+0x0],dh
 1001a44:	jae    0x1001a46
 1001a46:	outs   dx,DWORD PTR ds:[esi]
 1001a47:	add    BYTE PTR [edx+0x0],dh
 1001a4a:	add    BYTE PTR [eax],al
 1001a4c:	and    eax,DWORD PTR [eax]
 1001a4e:	and    BYTE PTR [eax],al
 1001a50:	push   edx
 1001a51:	add    BYTE PTR [ebp+0x0],dh
 1001a54:	outs   dx,BYTE PTR ds:[esi]
 1001a55:	add    BYTE PTR [esi+0x0],ch
 1001a58:	imul   eax,DWORD PTR [eax],0x67006e
 1001a5e:	and    BYTE PTR [eax],al
 1001a60:	outs   dx,DWORD PTR ds:[esi]
 1001a61:	add    BYTE PTR [esi+0x0],ch
 1001a64:	and    BYTE PTR [eax],al
 1001a66:	and    eax,0x20006400
 1001a6b:	add    BYTE PTR ds:0x20007300,ah
 1001a71:	add    BYTE PTR ds:0x20007300,ah
 1001a77:	add    BYTE PTR ds:0xd007300,ah
 1001a7d:	add    BYTE PTR [edx],cl
	...
 1001a87:	add    BYTE PTR [ebx],ah
 1001a89:	add    BYTE PTR [eax],ah
 1001a8b:	add    BYTE PTR [ebp+0x0],cl
 1001a8e:	add    BYTE PTR gs:[ebp+0x0],ch
 1001a92:	outs   dx,DWORD PTR ds:[esi]
 1001a93:	add    BYTE PTR [edx+0x0],dh
 1001a96:	jns    0x1001a98
 1001a98:	cmp    al,BYTE PTR [eax]
 1001a9a:	and    BYTE PTR [eax],al
 1001a9c:	and    eax,0x25006400
 1001aa1:	add    BYTE PTR ds:0x69002000,ah
 1001aa7:	add    BYTE PTR [esi+0x0],ch
 1001aaa:	and    BYTE PTR [eax],al
 1001aac:	jne    0x1001aae
 1001aae:	jae    0x1001ab0
 1001ab0:	add    BYTE PTR gs:[esi],ch
 1001ab3:	add    BYTE PTR [eax],ah
 1001ab5:	add    BYTE PTR [eax+0x0],dl
 1001ab8:	push   0x73007900
 1001abd:	add    BYTE PTR [ecx+0x0],ch
 1001ac0:	arpl   WORD PTR [eax],ax
 1001ac2:	popa   
 1001ac3:	add    BYTE PTR [eax+eax*1+0x3a],ch
 1001ac7:	add    BYTE PTR [eax],ah
 1001ac9:	add    BYTE PTR ds:0x64006c00,ah
 1001acf:	add    BYTE PTR [ebp+0x0],cl
 1001ad2:	das    
 1001ad3:	add    BYTE PTR ds:0x64006c00,ah
 1001ad9:	add    BYTE PTR [ebp+0x0],cl
 1001adc:	and    BYTE PTR [eax],al
 1001ade:	and    BYTE PTR [eax],al
 1001ae0:	push   eax
 1001ae1:	add    BYTE PTR [ecx+0x0],ah
 1001ae4:	add    BYTE PTR [bx+di+0x0],ch
 1001ae8:	outs   dx,BYTE PTR ds:[esi]
 1001ae9:	add    BYTE PTR [edi+0x0],ah
 1001aec:	cmp    al,BYTE PTR [eax]
 1001aee:	and    BYTE PTR [eax],al
 1001af0:	and    eax,0x4d006400
 1001af5:	add    BYTE PTR [edi],ch
 1001af7:	add    BYTE PTR ds:0x4d006400,ah
 1001afd:	add    BYTE PTR [eax],ah
 1001aff:	add    BYTE PTR [eax],ch
 1001b01:	add    BYTE PTR [ecx+0x0],ah
 1001b04:	jbe    0x1001b06
 1001b06:	popa   
 1001b07:	add    BYTE PTR [ecx+0x0],ch
 1001b0a:	ins    BYTE PTR es:[edi],dx
 1001b0b:	add    BYTE PTR [edi],ch
 1001b0d:	add    BYTE PTR [eax+eax*1+0x6f],dh
 1001b11:	add    BYTE PTR [eax+eax*1+0x61],dh
 1001b15:	add    BYTE PTR [eax+eax*1+0x29],ch
 1001b19:	add    BYTE PTR ds:0xa00,cl
 1001b1f:	add    BYTE PTR [eax+eax*1+0x0],bl
 1001b23:	add    BYTE PTR [eax],al
 1001b25:	add    BYTE PTR [eax],al
 1001b27:	add    BYTE PTR [ebx],ah
 1001b29:	add    BYTE PTR [eax],ah
 1001b2b:	add    BYTE PTR [eax+eax*1+0x6f],cl
 1001b2f:	add    BYTE PTR [ecx+0x0],ah
 1001b32:	add    BYTE PTR fs:[ebp+0x0],ah
 1001b36:	add    BYTE PTR fs:[eax],ah
 1001b39:	add    BYTE PTR [ebp+0x0],cl
 1001b3c:	outs   dx,DWORD PTR ds:[esi]
 1001b3d:	add    BYTE PTR [eax+eax*1+0x75],ah
 1001b41:	add    BYTE PTR [eax+eax*1+0x65],ch
 1001b45:	add    BYTE PTR [edx],bh
 1001b47:	add    BYTE PTR [eax],ah
 1001b49:	add    BYTE PTR ds:0x20007300,ah
 1001b4f:	add    BYTE PTR [eax],ch
 1001b51:	add    BYTE PTR ds:0x64006c00,ah
 1001b57:	add    BYTE PTR [esi],ch
 1001b59:	add    BYTE PTR ds:0x64006c00,ah
 1001b5f:	add    BYTE PTR [esi],ch
 1001b61:	add    BYTE PTR ds:0x64006c00,ah
 1001b67:	add    BYTE PTR [esi],ch
 1001b69:	add    BYTE PTR ds:0x64006c00,ah
 1001b6f:	add    BYTE PTR [ecx],ch
 1001b71:	add    BYTE PTR ds:0xa00,cl
 1001b77:	add    BYTE PTR [ebx],ah
 1001b79:	add    BYTE PTR [eax],ah
 1001b7b:	add    BYTE PTR [eax+eax*1+0x6f],cl
 1001b7f:	add    BYTE PTR [ecx+0x0],ah
 1001b82:	add    BYTE PTR fs:[ebp+0x0],ah
 1001b86:	add    BYTE PTR fs:[eax],ah
 1001b89:	add    BYTE PTR [ebp+0x0],cl
 1001b8c:	outs   dx,DWORD PTR ds:[esi]
 1001b8d:	add    BYTE PTR [eax+eax*1+0x75],ah
 1001b91:	add    BYTE PTR [eax+eax*1+0x65],ch
 1001b95:	add    BYTE PTR [edx],bh
 1001b97:	add    BYTE PTR [eax],ah
 1001b99:	add    BYTE PTR ds:0x20007300,ah
 1001b9f:	add    BYTE PTR [eax],ch
 1001ba1:	add    BYTE PTR [ebp+0x0],dh
 1001ba4:	outs   dx,BYTE PTR ds:[esi]
 1001ba5:	add    BYTE PTR [ebx+0x0],ch
 1001ba8:	outs   dx,BYTE PTR ds:[esi]
 1001ba9:	add    BYTE PTR [edi+0x0],ch
 1001bac:	ja     0x1001bae
 1001bae:	outs   dx,BYTE PTR ds:[esi]
 1001baf:	add    BYTE PTR [eax],ah
 1001bb1:	add    BYTE PTR [esi+0x0],dh
 1001bb4:	add    BYTE PTR gs:[edx+0x0],dh
 1001bb8:	jae    0x1001bba
 1001bba:	imul   eax,DWORD PTR [eax],0x6e006f
 1001bc0:	sub    DWORD PTR [eax],eax
 1001bc2:	or     eax,0xa00
 1001bc7:	add    BYTE PTR [esi],ch
 1001bc9:	add    BYTE PTR [edx+0x0],dh
 1001bcc:	ins    BYTE PTR es:[edi],dx
 1001bcd:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001bd1:	add    BYTE PTR [eax],al
 1001bd3:	add    BYTE PTR [edx+0x0],dh
 1001bd6:	add    BYTE PTR gs:[ebx+0x0],dh
 1001bda:	outs   dx,DWORD PTR ds:[esi]
 1001bdb:	add    BYTE PTR [ebp+0x0],dh
 1001bde:	jb     0x1001be0
 1001be0:	arpl   WORD PTR [eax],ax
 1001be2:	add    BYTE PTR gs:[ebx+0x0],dh
 1001be6:	add    BYTE PTR [eax],al
 1001be8:	push   edx
 1001be9:	add    BYTE PTR [ebp+0x0],ah
 1001bec:	jae    0x1001bee
 1001bee:	outs   dx,DWORD PTR ds:[esi]
 1001bef:	add    BYTE PTR [ebp+0x0],dh
 1001bf2:	jb     0x1001bf4
 1001bf4:	arpl   WORD PTR [eax],ax
 1001bf6:	add    BYTE PTR gs:[ebx+0x0],dh
	...
 1001c06:	add    BYTE PTR [eax],al
 1001c08:	push   ebx
 1001c09:	add    BYTE PTR [edi+0x0],cl
 1001c0c:	inc    esi
 1001c0d:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001c11:	add    BYTE PTR [ecx+0x0],al
 1001c14:	push   edx
 1001c15:	add    BYTE PTR [ebp+0x0],al
 1001c18:	pop    esp
 1001c19:	add    BYTE PTR [ebp+0x0],cl
 1001c1c:	imul   eax,DWORD PTR [eax],0x720063
 1001c22:	outs   dx,DWORD PTR ds:[esi]
 1001c23:	add    BYTE PTR [ebx+0x0],dh
 1001c26:	outs   dx,DWORD PTR ds:[esi]
 1001c27:	add    BYTE PTR [esi+0x0],ah
 1001c2a:	je     0x1001c2c
 1001c2c:	pop    esp
 1001c2d:	add    BYTE PTR [ebp+0x0],cl
 1001c30:	imul   eax,DWORD PTR [eax],0x720063
 1001c36:	outs   dx,DWORD PTR ds:[esi]
 1001c37:	add    BYTE PTR [ebx+0x0],dh
 1001c3a:	outs   dx,DWORD PTR ds:[esi]
 1001c3b:	add    BYTE PTR [esi+0x0],ah
 1001c3e:	je     0x1001c40
 1001c40:	and    BYTE PTR [eax],al
 1001c42:	push   ebx
 1001c43:	add    BYTE PTR [ecx+0x0],dl
 1001c46:	dec    esp
 1001c47:	add    BYTE PTR [eax],ah
 1001c49:	add    BYTE PTR [ebx+0x0],dl
 1001c4c:	add    BYTE PTR gs:[edx+0x0],dh
 1001c50:	jbe    0x1001c52
 1001c52:	add    BYTE PTR gs:[edx+0x0],dh
 1001c56:	pop    esp
 1001c57:	add    BYTE PTR [ecx],dh
 1001c59:	add    BYTE PTR [ecx],dh
 1001c5b:	add    BYTE PTR [eax],dh
 1001c5d:	add    BYTE PTR [eax],al
 1001c5f:	add    BYTE PTR [ebx+0x0],dl
 1001c62:	push   ecx
 1001c63:	add    BYTE PTR [eax+eax*1+0x44],cl
 1001c67:	add    BYTE PTR [ebp+0x0],dl
 1001c6a:	dec    ebp
 1001c6b:	add    BYTE PTR [eax+0x0],dl
 1001c6e:	inc    ebp
 1001c6f:	add    BYTE PTR [edx+0x0],dl
 1001c72:	add    BYTE PTR cs:[ebp+0x0],al
 1001c76:	pop    eax
 1001c77:	add    BYTE PTR [ebp+0x0],al
 1001c7a:	add    BYTE PTR [eax],al
 1001c7c:	ja     0x1001c6a
 1001c7e:	enter  0x7bf4,0x7d
 1001c82:	mov    ecx,0x42cd8c4d
 1001c87:	inc    eax
 1001c88:	jmp    0x6c00:0x25f95aa6
 1001c8f:	add    BYTE PTR [ebx+0x0],dh
 1001c92:	pop    esp
 1001c93:	add    BYTE PTR ds:0x73006c00,ah
 1001c99:	add    BYTE PTR [eax],al
 1001c9b:	add    BYTE PTR [eax],al
 1001c9d:	jo     0x1001c9f
 1001c9f:	add    DWORD PTR [eax+0x70],esp
 1001ca2:	add    BYTE PTR [ecx],al
 1001ca4:	jo     0x1001d16
 1001ca6:	add    BYTE PTR [ecx],al
 1001ca8:	sar    BYTE PTR [eax+eax*1+0x1],0x80
 1001cad:	outs   dx,BYTE PTR ds:[esi]
 1001cae:	add    BYTE PTR [ecx],al
 1001cb0:	xor    BYTE PTR [ecx+0x0],bh
 1001cb3:	add    DWORD PTR [eax],edx
 1001cb5:	jg     0x1001cb7
 1001cb7:	add    DWORD PTR [eax],esp
 1001cb9:	jae    0x1001cbb
 1001cbb:	add    DWORD PTR [eax-0x4ffeff90],eax
 1001cc1:	jo     0x1001cc3
 1001cc3:	add    DWORD PTR [eax+0x53010078],eax
 1001cc9:	add    BYTE PTR [eax+0x0],ch
 1001ccc:	popa   
 1001ccd:	add    BYTE PTR [edx+0x0],dh
 1001cd0:	add    BYTE PTR gs:[eax+eax*1+0x43],ah
 1001cd5:	add    BYTE PTR [edi+0x0],ch
 1001cd8:	add    BYTE PTR fs:[ebp+0x0],ah
	...
 1001ce4:	xchg   esi,eax
 1001ce5:	xor    BYTE PTR [edi],al
 1001ce7:	ja     0x1001d15
 1001ce9:	popa   
 1001cea:	push   cs
 1001ceb:	out    dx,al
 1001cec:	mov    edx,0x19990951
 1001cf1:	les    ebp,FWORD PTR [ebp+0x7]
 1001cf4:	(bad)  
 1001cf5:	hlt    
 1001cf6:	push   0x70
 1001cf8:	xor    eax,0xa3e963a5
 1001cfd:	xchg   ebp,eax
 1001cfe:	fs sahf 
 1001d00:	xor    cl,BYTE PTR [eax-0x475bf125]
 1001d06:	fdivr  QWORD PTR [ecx+0x1e]
 1001d09:	jmp    0xda88fde3
 1001d0e:	rcl    BYTE PTR [edi+0x9b64c2b],cl
 1001d14:	mov    ebp,0x77eb17c
 1001d19:	sub    eax,0x1d91e7b8
 1001d1e:	mov    edi,0xb7106490
 1001d23:	sbb    eax,0x6ab020f2
 1001d28:	dec    eax
 1001d29:	jno    0x1001ce4
 1001d2b:	repz fiadd WORD PTR [ecx-0x42]
 1001d2f:	test   BYTE PTR [ebp-0x2c],bh
 1001d32:	ficomp DWORD PTR [edx]
 1001d34:	jmp    0x1001d1a
 1001d36:	(bad)  [ebp+0x51]
 1001d39:	mov    ch,0xd4
 1001d3b:	hlt    
 1001d3c:	mov    DWORD PTR [ebp-0x67a97c2d],0xa8c0136c
 1001d46:	imul   esp,DWORD PTR [edx+edi*2-0x7],0x62
 1001d4b:	std    
 1001d4c:	in     al,dx
 1001d4d:	leave  
 1001d4e:	mov    cl,BYTE PTR gs:[edi+0x5c]
 1001d52:	add    DWORD PTR [ecx+ebx*8],edx
 1001d55:	ins    BYTE PTR es:[edi],dx
 1001d56:	push   es
 1001d57:	arpl   WORD PTR [ebx+0x3d],sp
 1001d5a:	psubd  mm6,mm5
 1001d5d:	or     eax,0x20c88d08
 1001d62:	outs   dx,BYTE PTR ds:[esi]
 1001d63:	cmp    ebx,DWORD PTR [esi+0x10]
 1001d66:	imul   ecx,DWORD PTR [esp+eiz*8+0x41],0x7172d560
 1001d6e:	addr16 mov ds:0xe4d1,al
 1001d72:	add    edi,DWORD PTR [edi+eax*2]
 1001d75:	aam    0x4
 1001d77:	dec    ebx
 1001d78:	std    
 1001d79:	test   DWORD PTR ds:0xab56bd2,ecx
 1001d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001d80:	cli    
 1001d81:	test   al,0xb5
 1001d83:	xor    eax,0x42b2986c
 1001d88:	(bad)  
 1001d89:	leave  
 1001d8a:	mov    ebx,0xbcf940db
 1001d8f:	lods   al,BYTE PTR ds:[esi]
 1001d90:	jecxz  0x1001dfe
 1001d92:	fdiv   DWORD PTR [edx]
 1001d94:	jne    0x1001df2
 1001d96:	fild   WORD PTR [ebp-0x31]
 1001d99:	or     eax,0x3d59dcd6
 1001d9e:	shr    DWORD PTR [ebx+0x26d930ac],1
 1001da4:	cmp    al,BYTE PTR [eax]
 1001da6:	ficom  WORD PTR [ecx-0x80]
 1001da9:	push   ecx
 1001daa:	xlat   BYTE PTR ds:[ebx]
 1001dab:	enter  0x6116,0xd0
 1001daf:	mov    edi,0x21b4f4b5
 1001db4:	and    eax,esp
 1001db6:	mov    bl,0x56
 1001db8:	cdq    
 1001db9:	xchg   ebp,eax
 1001dba:	mov    edx,0xbda50fcf
 1001dbf:	mov    eax,0x2802b89e
 1001dc4:	or     BYTE PTR [eax-0x264da0fb],cl
 1001dca:	or     al,0xc6
 1001dcc:	and    al,0xe9
 1001dce:	or     esi,DWORD PTR [ecx+0x2f6f7c87]
 1001dd4:	adc    DWORD PTR [eax+ebp*2+0x58],ecx
 1001dd8:	stos   DWORD PTR es:[edi],eax
 1001dd9:	sbb    eax,0x2d3dc161
 1001dde:	data16 mov dh,0x90
 1001de1:	inc    ecx
 1001de2:	fdiv   QWORD PTR [esi+0x6]
 1001de5:	jno    0x1001dc2
 1001de7:	add    DWORD PTR [eax+eiz*1+0x102a98d2],edi
 1001dee:	aad    0xef
 1001df0:	mov    DWORD PTR [ebp-0x4ae08e4f],eax
 1001df6:	mov    dh,0x6
 1001df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001df9:	in     al,0xbf
 1001dfb:	lahf   
 1001dfc:	xor    edx,esp
 1001dfe:	mov    eax,0x7c9a2e8
 1001e03:	js     0x1001e39
 1001e05:	stc    
 1001e06:	add    BYTE PTR [edi],cl
 1001e08:	mov    gs,WORD PTR [eax-0x67e769f7]
 1001e0e:	push   cs
 1001e0f:	loope  0x1001dcc
 1001e11:	or     eax,0x3d2d7f6a
 1001e16:	ins    DWORD PTR es:[edi],dx
 1001e17:	or     BYTE PTR [edi+0x191646c],dl
 1001e1d:	pop    esp
 1001e1e:	arpl   si,sp
 1001e20:	hlt    
 1001e21:	push   ecx
 1001e22:	imul   ebp,DWORD PTR [ebx+0x62],0x61
 1001e26:	ins    BYTE PTR es:[edi],dx
 1001e27:	sbb    al,0xd8
 1001e29:	xor    BYTE PTR [ebp-0x7b],ah
 1001e2c:	dec    esi
 1001e2d:	add    BYTE PTR [edx-0xe],ah
 1001e30:	in     eax,dx
 1001e31:	xchg   ebp,eax
 1001e32:	push   es
 1001e33:	ins    BYTE PTR es:[edi],dx
 1001e34:	jnp    0x1001ddb
 1001e36:	add    DWORD PTR [ebx],ebx
 1001e38:	shl    esp,0x8
 1001e3b:	adc    BYTE PTR [edi-0x3c],0xf
 1001e3f:	cmc    
 1001e40:	(bad)  
 1001e41:	fnstenv [eax-0x4816af9b]
 1001e47:	adc    ch,dl
 1001e49:	mov    eax,0x887c8bbe
 1001e4e:	mov    ecx,0xdd1ddffc
 1001e53:	bound  ecx,QWORD PTR [ecx+0x2d]
 1001e56:	ficom  DWORD PTR ds:0x8cd37cf3
 1001e5c:	gs dec esp
 1001e5e:	aam    0xfb
 1001e60:	pop    eax
 1001e61:	popa   
 1001e62:	mov    dl,0x4d
 1001e64:	into   
 1001e65:	push   ecx
 1001e66:	mov    ch,0x3a
 1001e68:	je     0x1001e6a
 1001e6a:	mov    esp,0xbb30e2a3
 1001e6f:	aam    0x41
 1001e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001e72:	fisttp WORD PTR [edx-0x29]
 1001e75:	xchg   ebp,eax
 1001e76:	fdivr  DWORD PTR ds:0xa4d1c46d
 1001e7c:	sti    
 1001e7d:	hlt    
 1001e7e:	(bad)  
 1001e7f:	shr    DWORD PTR [edx-0x17],cl
 1001e82:	imul   eax,DWORD PTR [ebx-0x4],0x46346ed9
 1001e89:	mov    BYTE PTR [edi-0x53],ah
 1001e8c:	sar    BYTE PTR [eax+0x2d73da60],1
 1001e92:	add    al,0x44
 1001e94:	in     eax,0x1d
 1001e96:	add    esi,DWORD PTR [ebx]
 1001e98:	pop    edi
 1001e99:	dec    esp
 1001e9a:	or     ch,BYTE PTR [edx-0x22f28337]
 1001ea0:	cmp    al,0x71
 1001ea2:	add    eax,0x241aa50
 1001ea7:	daa    
 1001ea8:	adc    BYTE PTR [eax],dl
 1001eaa:	or     edi,DWORD PTR [esi-0x36f3df7a]
 1001eb0:	and    eax,0xb35768b5
 1001eb5:	test   DWORD PTR [edi+0x20],ebp
 1001eb8:	or     esp,edx
 1001eba:	mov    cx,0xe49f
 1001ebe:	popa   
 1001ebf:	into   
 1001ec0:	push   cs
 1001ec1:	stc    
 1001ec2:	ficomp WORD PTR [esi-0x68]
 1001ec5:	leave  
 1001ec6:	fldcw  WORD PTR [ecx]
 1001ec8:	and    bl,BYTE PTR [eax-0x574b4f30]
 1001ece:	xlat   BYTE PTR ds:[ebx]
 1001ecf:	(bad)  
 1001ed0:	pop    ss
 1001ed1:	cmp    eax,0xd8159b3
 1001ed6:	mov    ah,0x2e
 1001ed8:	cmp    ebx,DWORD PTR [ebp+edi*4-0x49]
 1001edc:	lods   eax,DWORD PTR ds:[esi]
 1001edd:	ins    BYTE PTR es:[edi],dx
 1001ede:	mov    edx,0xb88320c0
 1001ee3:	in     eax,dx
 1001ee4:	mov    dh,0xb3
 1001ee6:	mov    edi,0xb6e20c9a
 1001eeb:	add    ebx,DWORD PTR [edx+0x3974b1d2]
 1001ef1:	inc    edi
 1001ef2:	aad    0xea
 1001ef4:	scas   eax,DWORD PTR es:[edi]
 1001ef5:	ja     0x1001ec9
 1001ef7:	popf   
 1001ef8:	adc    eax,0x8304db26
 1001efd:	push   ss
 1001efe:	fdiv   QWORD PTR [ebx+0x12]
 1001f01:	or     esp,DWORD PTR [ebx-0x1d]
 1001f04:	test   BYTE PTR [ebx],bh
 1001f06:	fs xchg esp,eax
 1001f08:	ds push 0x6d
 1001f0b:	or     eax,0x7a6a5aa8
 1001f10:	or     ecx,edi
 1001f12:	push   cs
 1001f13:	in     al,0x9d
 1001f15:	dec    DWORD PTR [ecx]
 1001f17:	xchg   ebx,eax
 1001f18:	daa    
 1001f19:	scas   al,BYTE PTR es:[edi]
 1001f1a:	add    BYTE PTR [edx],cl
 1001f1c:	mov    cl,0x9e
 1001f1e:	pop    es
 1001f1f:	jge    0x1001f65
 1001f21:	xchg   ebx,eax
 1001f22:	(bad)  
 1001f24:	shl    BYTE PTR [ebx-0xd9778f8],cl
 1001f2a:	add    DWORD PTR [esi],ebx
 1001f2c:	inc    dl
 1001f2e:	push   es
 1001f2f:	imul   ebx,DWORD PTR [ebp+0x57],0x67cbf762
 1001f36:	xor    BYTE PTR gs:[ecx+0x36],0x6c
 1001f3b:	sbb    edi,esp
 1001f3d:	push   es
 1001f3e:	imul   ebp,DWORD PTR [esi+0x76],0x1b
 1001f42:	aam    0xfe
 1001f44:	loopne 0x1001f71
 1001f46:	ror    DWORD PTR [ecx+0x10da7a5a],cl
 1001f4c:	int3   
 1001f4d:	dec    edx
 1001f4e:	frstor [edi+0x6f]
 1001f51:	fistp  QWORD PTR [ecx-0x41100607]
 1001f57:	mov    es,WORD PTR [ebx-0x42]
 1001f5a:	mov    bh,0x17
 1001f5c:	aad    0x8e
 1001f5e:	mov    al,0x60
 1001f60:	call   0x7fd6f608
 1001f65:	xchg   ebx,eax
 1001f66:	shl    DWORD PTR [ecx+0x38d8c2c4],1
 1001f6c:	push   edx
 1001f6d:	repnz fisttp WORD PTR [edi-0xf]
 1001f71:	addr16 mov ebx,0xbc5767d1
 1001f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1001f78:	fld    QWORD PTR [esi]
 1001f7a:	mov    ch,0x3f
 1001f7c:	dec    ebx
 1001f7d:	ss mov dl,0x48
 1001f80:	fisubr DWORD PTR [ebx]
 1001f82:	or     eax,0xa1b4cd8
 1001f87:	scas   eax,DWORD PTR es:[edi]
 1001f88:	test   BYTE PTR [edx+0x3],0x36
 1001f8c:	pusha  
 1001f8d:	jp     0x1001f93
 1001f8f:	inc    ecx
 1001f90:	ret    
 1001f91:	out    dx,eax
 1001f92:	pusha  
 1001f93:	fist   WORD PTR [ebp-0x21]
 1001f96:	addr16 test al,0xef
 1001f99:	mov    gs,WORD PTR [esi+0x31]
 1001f9c:	jns    0x1001f5c
 1001f9e:	imul   eax,DWORD PTR [esi-0x74],0x1acb61b3
 1001fa5:	and    DWORD PTR [esi-0x44],0xffffffa0
 1001fa9:	shr    BYTE PTR [edi+0x25],cl
 1001fac:	ss loop 0x1002017
 1001faf:	push   edx
 1001fb0:	xchg   ebp,eax
 1001fb1:	ja     0x1001fbf
 1001fb3:	int3   
 1001fb4:	add    eax,DWORD PTR [edi+0xb]
 1001fb7:	mov    ebx,0x220216b9
 1001fbc:	das    
 1001fbd:	es add eax,0xba3bbe55
 1001fc3:	lds    ebp,FWORD PTR [eax]
 1001fc5:	or     edi,DWORD PTR [ebp-0x4ba56d4e]
 1001fcb:	sub    eax,DWORD PTR [edx+ebp*2]
 1001fce:	mov    bl,0x5c
 1001fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1001fd1:	call   edi
 1001fd3:	ret    0xcf31
 1001fd6:	shl    BYTE PTR [ebp+0x2cd99e8b],1
 1001fdc:	sbb    eax,0xb05bdeae
 1001fe1:	ret    0x9b64
 1001fe4:	es repnz arpl sp,bp
 1001fe8:	pushf  
 1001fe9:	mov    ds:0x930a756a,eax
 1001fee:	ins    DWORD PTR es:[edi],dx
 1001fef:	add    ch,BYTE PTR [ecx+0x3f9c0906]
 1001ff5:	ss push cs
 1001ff7:	jmp    0x1001f7e
 1001ff9:	addr16 pop es
 1001ffb:	jb     0x1002010
 1001ffd:	push   edi
 1001ffe:	add    BYTE PTR ds:0x95bf4a82,al
 1002004:	adc    al,0x7a
 1002006:	mov    eax,0xb12baee2
 100200b:	jnp    0x1002045
 100200d:	sbb    esi,DWORD PTR [esi-0x2d7164f4]
 1002013:	xchg   edx,eax
 1002014:	or     eax,0xb7e5d5be
 1002019:	out    dx,eax
 100201a:	fdivr  QWORD PTR [ecx+eiz*1-0x21]
 100201e:	fisttp DWORD PTR [ebx]
 1002020:	aam    0xd2
 1002022:	rol    DWORD PTR [esi-0xe2b1dbe],cl
 1002028:	clc    
 1002029:	mov    bl,0xdd
 100202b:	push   0x1fda836e
 1002030:	int    0x16
 1002032:	mov    esi,0xb9265b81
 1002037:	mul    cl
 1002039:	ja     0x1001feb
 100203b:	outs   dx,DWORD PTR ds:[esi]
 100203c:	ja     0x1002085
 100203e:	mov    bh,0x18
 1002040:	out    0x5a,al
 1002042:	or     BYTE PTR [eax-0xf09590],cl
 1002048:	retf   0x63b
 100204b:	pop    sp
 100204d:	or     eax,DWORD PTR [ecx]
 100204f:	adc    edi,edi
 1002051:	sahf   
 1002052:	(bad)
 1002057:	clc    
 1002058:	sar    edi,cl
 100205a:	imul   esp,DWORD PTR [ecx+0x45],0xffffffcf
 100205e:	ins    BYTE PTR es:[edi],dx
 100205f:	push   ss
 1002060:	js     0x1002044
 1002062:	or     ah,BYTE PTR [eax-0x28f22d12]
 1002068:	push   esp
 1002069:	add    DWORD PTR [esi+ecx*2],0xffffffc2
 100206d:	mov    bl,0x3
 100206f:	cmp    DWORD PTR [ecx+0x26],esp
 1002072:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
 1002074:	not    DWORD PTR [esi]
 1002076:	pusha  
 1002077:	ror    BYTE PTR [ebp+0x47],1
 100207a:	imul   ecx,DWORD PTR [ecx-0x25],0x4a3e6e77
 1002081:	push   0xffffffd1
 1002083:	scas   al,BYTE PTR es:[edi]
 1002084:	fcomp  QWORD PTR [edx-0x2a]
 1002087:	fldenv [esi+0xb]
 100208a:	fild   WORD PTR [eax-0x10]
 100208d:	cmp    ebx,eax
 100208f:	aaa    
 1002090:	push   ebx
 1002091:	scas   al,BYTE PTR es:[edi]
 1002092:	mov    esp,0xbb9ec5a9
 1002097:	fidivr WORD PTR [edi-0x31]
 100209a:	mov    dl,0x47
 100209c:	jmp    0x1d30d6a0
 10020a1:	repnz mov ebp,0xbac28abd
 10020a7:	retf   0x9330
 10020aa:	mov    bl,0x53
 10020ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10020ad:	mov    ds:0x360524b4,eax
 10020b2:	sar    BYTE PTR [edx-0x3228f96d],1
 10020b8:	sub    DWORD PTR [edi-0x22],edx
 10020bb:	push   esp
 10020bc:	mov    edi,0x2e23d967
 10020c1:	jp     0x1002129
 10020c3:	mov    bl,0xb8
 10020c5:	dec    edx
 10020c6:	popa   
 10020c7:	les    eax,FWORD PTR [edx]
 10020c9:	sbb    ebp,DWORD PTR [eax+0x5d]
 10020cc:	xchg   esp,eax
 10020cd:	sub    ebp,DWORD PTR [edi+0x2a]
 10020d0:	aaa    
 10020d1:	mov    esi,0x8ea1b40b
 10020d6:	or     al,0xc3
 10020d8:	sbb    ebx,edi
 10020da:	add    eax,0x2ef8d5a
 10020df:	sub    eax,0x72657551
 10020e4:	jns    0x100213d
 10020e6:	outs   dx,DWORD PTR ds:[esi]
 10020e7:	jb     0x1002154
 10020e9:	imul   ebp,DWORD PTR [esi+0x67],0x45746553
 10020f0:	js     0x10020f2
 10020f2:	add    BYTE PTR [eax],al
 10020f4:	jo     0x10020f6
 10020f6:	jae    0x10020f8
 10020f8:	popa   
 10020f9:	add    BYTE PTR [eax+0x0],dh
 10020fc:	imul   eax,DWORD PTR [eax],0x64002e
 1002102:	ins    BYTE PTR es:[edi],dx
 1002103:	add    BYTE PTR [eax+eax*1+0x0],ch
 1002107:	add    BYTE PTR [eax],al
 1002109:	add    BYTE PTR [eax],al
 100210b:	add    BYTE PTR [ebx+0x0],dl
 100210e:	push   ecx
 100210f:	add    BYTE PTR [eax+eax*1+0x44],cl
 1002113:	add    BYTE PTR [ebp+0x0],dl
 1002116:	dec    ebp
 1002117:	add    BYTE PTR [eax+0x0],dl
 100211a:	inc    ebp
 100211b:	add    BYTE PTR [edx+0x0],dl
 100211e:	add    BYTE PTR cs:[ebp+0x0],al
 1002122:	pop    eax
 1002123:	add    BYTE PTR [ebp+0x0],al
 1002126:	add    BYTE PTR [eax],al
 1002128:	les    ecx,FWORD PTR [esi]
 100212a:	ret    
 100212b:	sbb    edx,DWORD PTR [ecx-0x61b65b7b]
 1002131:	mov    ds:0x7640b44f,al
 1002136:	mov    ch,0xe6
 1002138:	add    BYTE PTR [eax],dl
 100213a:	add    BYTE PTR [eax],ah
 100213c:	call   0x3012163
 1002141:	add    BYTE PTR [eax],al
 1002143:	and    BYTE PTR [eax],dh
 1002145:	and    eax,DWORD PTR [eax]
 1002147:	add    DWORD PTR [eax+eax*1],eax
 100214a:	add    BYTE PTR [eax],ah
 100214c:	and    BYTE PTR [ebx],0x0
 100214f:	add    DWORD PTR [eax],ecx
 1002151:	add    BYTE PTR [eax],al
 1002153:	and    al,bl
 1002155:	and    eax,DWORD PTR [eax]
 1002157:	add    DWORD PTR [eax],edx
 1002159:	add    BYTE PTR [eax],al
 100215b:	and    BYTE PTR [eax],ch
 100215d:	and    al,0x0
 100215f:	add    DWORD PTR [eax],esp
 1002161:	add    BYTE PTR [eax],al
 1002163:	and    BYTE PTR [eax+0x40010024],al
 1002169:	add    BYTE PTR [eax],al
 100216b:	and    al,dl
 100216d:	and    al,0x0
 100216f:	add    DWORD PTR [eax+0x28200000],eax
 1002175:	and    eax,0x1000100
 100217a:	add    BYTE PTR [eax],ah
 100217c:	mov    BYTE PTR ds:0x2000100,ah
 1002182:	add    BYTE PTR [eax],ah
 1002184:	fsub   DWORD PTR ds:0x4000100
 100218a:	add    BYTE PTR [eax],ah
 100218c:	sub    BYTE PTR [esi],ah
 100218e:	add    BYTE PTR [ecx],al
 1002190:	add    BYTE PTR [eax],cl
 1002192:	add    BYTE PTR [eax],ah
 1002194:	and    BYTE PTR [esi],0x0
 1002197:	add    DWORD PTR [eax],eax
 1002199:	and    BYTE PTR [eax],al
 100219b:	and    al,ah
 100219d:	add    BYTE PTR es:[ecx],al
 10021a0:	add    BYTE PTR [eax+0x27702000],al
 10021a6:	add    BYTE PTR [ecx],al
 10021a8:	inc    ebp
 10021a9:	add    BYTE PTR [edx+0x0],dh
 10021ac:	jb     0x10021ae
 10021ae:	outs   dx,DWORD PTR ds:[esi]
 10021af:	add    BYTE PTR [edx+0x0],dh
 10021b2:	and    BYTE PTR [eax],al
 10021b4:	sub    eax,0x44002000
 10021b9:	add    BYTE PTR [ebp+0x0],dh
 10021bc:	ins    DWORD PTR es:[edi],dx
 10021bd:	add    BYTE PTR [eax+0x0],dh
 10021c0:	imul   eax,DWORD PTR [eax],0x67006e
 10021c6:	and    BYTE PTR [eax],al
 10021c8:	jo     0x10021ca
 10021ca:	jb     0x10021cc
 10021cc:	outs   dx,DWORD PTR ds:[esi]
 10021cd:	add    BYTE PTR [ebx+0x0],ah
 10021d0:	add    BYTE PTR gs:[ebx+0x0],dh
 10021d4:	jae    0x10021d6
 10021d6:	and    BYTE PTR [eax],al
 10021d8:	ja     0x10021da
 10021da:	popa   
 10021db:	add    BYTE PTR [ebx+0x0],dh
 10021de:	and    BYTE PTR [eax],al
 10021e0:	outs   dx,BYTE PTR ds:[esi]
 10021e1:	add    BYTE PTR [edi+0x0],ch
 10021e4:	je     0x10021e6
 10021e6:	and    BYTE PTR [eax],al
 10021e8:	jae    0x10021ea
 10021ea:	je     0x10021ec
 10021ec:	popa   
 10021ed:	add    BYTE PTR [edx+0x0],dh
 10021f0:	je     0x10021f2
 10021f2:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
 10021f7:	add    BYTE PTR [edi+0x0],ch
 10021fa:	jb     0x10021fc
 10021fc:	and    BYTE PTR [eax],al
 10021fe:	je     0x1002200
 1002200:	add    BYTE PTR gs:[edx+0x0],dh
 1002204:	ins    DWORD PTR es:[edi],dx
 1002205:	add    BYTE PTR [ecx+0x0],ch
 1002208:	outs   dx,BYTE PTR ds:[esi]
 1002209:	add    BYTE PTR [ecx+0x0],ah
 100220c:	je     0x100220e
 100220e:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
 1002213:	add    BYTE PTR [eax+0x0],dh
 1002216:	jb     0x1002218
 1002218:	add    BYTE PTR gs:[ebp+0x0],ch
 100221c:	popa   
 100221d:	add    BYTE PTR [eax+eax*1+0x75],dh
 1002221:	add    BYTE PTR [edx+0x0],dh
 1002224:	add    BYTE PTR gs:[eax+eax*1+0x79],ch
 1002229:	add    BYTE PTR [esi],ch
 100222b:	add    BYTE PTR ds:0xa00,cl
 1002231:	add    BYTE PTR [eax],al
 1002233:	add    BYTE PTR [eax],al
 1002235:	add    BYTE PTR [eax],al
 1002237:	add    BYTE PTR [ebp+0x0],al
 100223a:	js     0x100223c
 100223c:	je     0x100223e
 100223e:	add    BYTE PTR gs:[edx+0x0],dh
 1002242:	outs   dx,BYTE PTR ds:[esi]
 1002243:	add    BYTE PTR [ecx+0x0],ah
 1002246:	ins    BYTE PTR es:[edi],dx
 1002247:	add    BYTE PTR [eax],ah
 1002249:	add    BYTE PTR [eax+eax*1+0x75],ah
 100224d:	add    BYTE PTR [ebp+0x0],ch
 1002250:	jo     0x1002252
 1002252:	and    BYTE PTR [eax],al
 1002254:	jo     0x1002256
 1002256:	jb     0x1002258
 1002258:	outs   dx,DWORD PTR ds:[esi]
 1002259:	add    BYTE PTR [ebx+0x0],ah
 100225c:	add    BYTE PTR gs:[ebx+0x0],dh
 1002260:	jae    0x1002262
 1002262:	and    BYTE PTR [eax],al
 1002264:	jb     0x1002266
 1002266:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
 100226b:	add    BYTE PTR [edx+0x0],dh
 100226e:	outs   dx,BYTE PTR ds:[esi]
 100226f:	add    BYTE PTR [ebp+0x0],ah
 1002272:	add    BYTE PTR fs:[eax],ah
 1002275:	add    BYTE PTR [esi+0x0],ch
 1002278:	outs   dx,DWORD PTR ds:[esi]
 1002279:	add    BYTE PTR [eax],ah
 100227b:	add    BYTE PTR [ebp+0x0],ah
 100227e:	jb     0x1002280
 1002280:	jb     0x1002282
 1002282:	outs   dx,DWORD PTR ds:[esi]
 1002283:	add    BYTE PTR [edx+0x0],dh
 1002286:	jae    0x1002288
 1002288:	add    BYTE PTR cs:0xa00,cl
 100228f:	add    BYTE PTR [ebp+0x0],al
 1002292:	js     0x1002294
 1002294:	je     0x1002296
 1002296:	add    BYTE PTR gs:[edx+0x0],dh
 100229a:	outs   dx,BYTE PTR ds:[esi]
 100229b:	add    BYTE PTR [ecx+0x0],ah
 100229e:	ins    BYTE PTR es:[edi],dx
 100229f:	add    BYTE PTR [eax],ah
 10022a1:	add    BYTE PTR [eax+eax*1+0x75],ah
 10022a5:	add    BYTE PTR [ebp+0x0],ch
 10022a8:	jo     0x10022aa
 10022aa:	and    BYTE PTR [eax],al
 10022ac:	jo     0x10022ae
 10022ae:	jb     0x10022b0
 10022b0:	outs   dx,DWORD PTR ds:[esi]
 10022b1:	add    BYTE PTR [ebx+0x0],ah
 10022b4:	add    BYTE PTR gs:[ebx+0x0],dh
 10022b8:	jae    0x10022ba
 10022ba:	and    BYTE PTR [eax],al
 10022bc:	jb     0x10022be
 10022be:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
 10022c3:	add    BYTE PTR [edx+0x0],dh
 10022c6:	outs   dx,BYTE PTR ds:[esi]
 10022c7:	add    BYTE PTR [eax],ah
 10022c9:	add    BYTE PTR [ebx+0x0],ah
 10022cc:	outs   dx,DWORD PTR ds:[esi]
 10022cd:	add    BYTE PTR [eax+eax*1+0x65],ah
 10022d1:	add    BYTE PTR [eax],ah
 10022d3:	add    BYTE PTR [eax],dh
 10022d5:	add    BYTE PTR [eax+0x0],bh
 10022d8:	and    eax,0x2e007800
 10022dd:	add    BYTE PTR ds:0xa00,cl
 10022e3:	add    BYTE PTR [eax],al
 10022e5:	add    BYTE PTR [eax],al
 10022e7:	add    BYTE PTR [ebp+0x0],al
 10022ea:	jb     0x10022ec
 10022ec:	jb     0x10022ee
 10022ee:	outs   dx,DWORD PTR ds:[esi]
 10022ef:	add    BYTE PTR [edx+0x0],dh
 10022f2:	and    BYTE PTR [eax],al
 10022f4:	sub    eax,0x49002000
 10022f9:	add    BYTE PTR [esi+0x0],ch
 10022fc:	jo     0x10022fe
 10022fe:	jne    0x1002300
 1002300:	je     0x1002302
 1002302:	and    BYTE PTR [eax],al
 1002304:	jo     0x1002306
 1002306:	popa   
 1002307:	add    BYTE PTR [edx+0x0],dh
 100230a:	popa   
 100230b:	add    BYTE PTR [ebp+0x0],ch
 100230e:	add    BYTE PTR gs:[eax+eax*1+0x65],dh
 1002313:	add    BYTE PTR [edx+0x0],dh
 1002316:	jae    0x1002318
 1002318:	and    BYTE PTR [eax],al
 100231a:	imul   eax,DWORD PTR [eax],0x76006e
 1002320:	popa   
 1002321:	add    BYTE PTR [eax+eax*1+0x69],ch
 1002325:	add    BYTE PTR [eax+eax*1+0x2e],ah
 1002329:	add    BYTE PTR ds:0xa00,cl
 100232f:	add    BYTE PTR [ebp+0x0],al
 1002332:	jb     0x1002334
 1002334:	jb     0x1002336
 1002336:	outs   dx,DWORD PTR ds:[esi]
 1002337:	add    BYTE PTR [edx+0x0],dh
 100233a:	and    BYTE PTR [eax],al
 100233c:	sub    eax,0x46002000
 1002341:	add    BYTE PTR [ecx+0x0],ah
 1002344:	imul   eax,DWORD PTR [eax],0x65006c
 100234a:	add    BYTE PTR fs:[eax],ah
 100234d:	add    BYTE PTR [eax+eax*1+0x6f],dh
 1002351:	add    BYTE PTR [eax],ah
 1002353:	add    BYTE PTR [ebx+0x0],ah
 1002356:	jb     0x1002358
 1002358:	add    BYTE PTR gs:[ecx+0x0],ah
 100235c:	je     0x100235e
 100235e:	add    BYTE PTR gs:[eax],ah
 1002361:	add    BYTE PTR [eax+eax*1+0x75],ah
 1002365:	add    BYTE PTR [ebp+0x0],ch
 1002368:	jo     0x100236a
 100236a:	and    BYTE PTR [eax],al
 100236c:	data16 add BYTE PTR [ecx+0x0],ch
 1002370:	ins    BYTE PTR es:[edi],dx
 1002371:	add    BYTE PTR [ebp+0x0],ah
 1002374:	add    BYTE PTR cs:0xa00,cl
 100237b:	add    BYTE PTR [eax],al
 100237d:	add    BYTE PTR [eax],al
 100237f:	add    BYTE PTR [ebp+0x0],al
 1002382:	jb     0x1002384
 1002384:	jb     0x1002386
 1002386:	outs   dx,DWORD PTR ds:[esi]
 1002387:	add    BYTE PTR [edx+0x0],dh
 100238a:	and    BYTE PTR [eax],al
 100238c:	sub    eax,0x46002000
 1002391:	add    BYTE PTR [ecx+0x0],ah
 1002394:	imul   eax,DWORD PTR [eax],0x65006c
 100239a:	add    BYTE PTR fs:[eax],ah
 100239d:	add    BYTE PTR [eax+eax*1+0x6f],dh
 10023a1:	add    BYTE PTR [eax],ah
 10023a3:	add    BYTE PTR [ebx+0x0],ah
 10023a6:	jb     0x10023a8
 10023a8:	add    BYTE PTR gs:[ecx+0x0],ah
 10023ac:	je     0x10023ae
 10023ae:	add    BYTE PTR gs:[eax],ah
 10023b1:	add    BYTE PTR [ebp+0x0],ch
 10023b4:	popa   
 10023b5:	add    BYTE PTR [esi+0x0],ch
 10023b8:	imul   eax,DWORD PTR [eax],0x650066
 10023be:	jae    0x10023c0
 10023c0:	je     0x10023c2
 10023c2:	and    BYTE PTR [eax],al
 10023c4:	data16 add BYTE PTR [ecx+0x0],ch
 10023c8:	ins    BYTE PTR es:[edi],dx
 10023c9:	add    BYTE PTR [ebp+0x0],ah
 10023cc:	add    BYTE PTR cs:0xa00,cl
 10023d3:	add    BYTE PTR [eax],al
 10023d5:	add    BYTE PTR [eax],al
 10023d7:	add    BYTE PTR [ebp+0x0],al
 10023da:	jb     0x10023dc
 10023dc:	jb     0x10023de
 10023de:	outs   dx,DWORD PTR ds:[esi]
 10023df:	add    BYTE PTR [edx+0x0],dh
 10023e2:	and    BYTE PTR [eax],al
 10023e4:	sub    eax,0x46002000
 10023e9:	add    BYTE PTR [ecx+0x0],ah
 10023ec:	imul   eax,DWORD PTR [eax],0x65006c
 10023f2:	add    BYTE PTR fs:[eax],ah
 10023f5:	add    BYTE PTR [eax+eax*1+0x6f],dh
 10023f9:	add    BYTE PTR [eax],ah
 10023fb:	add    BYTE PTR [edi+0x0],ch
 10023fe:	jo     0x1002400
 1002400:	add    BYTE PTR gs:[esi+0x0],ch
 1002404:	and    BYTE PTR [eax],al
 1002406:	add    BYTE PTR fs:[ebp+0x0],ah
 100240a:	bound  eax,QWORD PTR [eax]
 100240c:	jne    0x100240e
 100240e:	add    BYTE PTR [bx+si],ah
 1002411:	add    BYTE PTR [eax+0x0],dh
 1002414:	jb     0x1002416
 1002416:	outs   dx,DWORD PTR ds:[esi]
 1002417:	add    BYTE PTR [ebx+0x0],ah
 100241a:	add    BYTE PTR gs:[ebx+0x0],dh
 100241e:	jae    0x1002420
 1002420:	add    BYTE PTR cs:0xa00,cl
 1002427:	add    BYTE PTR [ebp+0x0],al
 100242a:	jb     0x100242c
 100242c:	jb     0x100242e
 100242e:	outs   dx,DWORD PTR ds:[esi]
 100242f:	add    BYTE PTR [edx+0x0],dh
 1002432:	and    BYTE PTR [eax],al
 1002434:	sub    eax,0x46002000
 1002439:	add    BYTE PTR [ecx+0x0],ah
 100243c:	imul   eax,DWORD PTR [eax],0x65006c
 1002442:	add    BYTE PTR fs:[eax],ah
 1002445:	add    BYTE PTR [edi+0x0],dh
 1002448:	push   0x6c006900
 100244d:	add    BYTE PTR [ebp+0x0],ah
 1002450:	and    BYTE PTR [eax],al
 1002452:	ja     0x1002454
 1002454:	jb     0x1002456
 1002456:	imul   eax,DWORD PTR [eax],0x690074
 100245c:	outs   dx,BYTE PTR ds:[esi]
 100245d:	add    BYTE PTR [edi+0x0],ah
 1002460:	and    BYTE PTR [eax],al
 1002462:	ins    DWORD PTR es:[edi],dx
 1002463:	add    BYTE PTR [ecx+0x0],ch
 1002466:	outs   dx,BYTE PTR ds:[esi]
 1002467:	add    BYTE PTR [ecx+0x0],ch
 100246a:	and    BYTE PTR [eax],al
 100246c:	add    BYTE PTR fs:[ebp+0x0],dh
 1002470:	ins    DWORD PTR es:[edi],dx
 1002471:	add    BYTE PTR [eax+0x0],dh
 1002474:	add    BYTE PTR cs:0xa00,cl
 100247b:	add    BYTE PTR [eax],al
 100247d:	add    BYTE PTR [eax],al
 100247f:	add    BYTE PTR [ebp+0x0],al
 1002482:	jb     0x1002484
 1002484:	jb     0x1002486
 1002486:	outs   dx,DWORD PTR ds:[esi]
 1002487:	add    BYTE PTR [edx+0x0],dh
 100248a:	and    BYTE PTR [eax],al
 100248c:	sub    eax,0x46002000
 1002491:	add    BYTE PTR [ecx+0x0],ah
 1002494:	imul   eax,DWORD PTR [eax],0x65006c
 100249a:	add    BYTE PTR fs:[eax],ah
 100249d:	add    BYTE PTR [edx+0x0],dh
 10024a0:	add    BYTE PTR gs:[ecx+0x0],ah
 10024a4:	add    BYTE PTR fs:[ecx+0x0],ch
 10024a8:	outs   dx,BYTE PTR ds:[esi]
 10024a9:	add    BYTE PTR [edi+0x0],ah
 10024ac:	and    BYTE PTR [eax],al
 10024ae:	jb     0x10024b0
 10024b0:	add    BYTE PTR gs:[edi+0x0],ah
 10024b4:	imul   eax,DWORD PTR [eax],0x740073
 10024ba:	jb     0x10024bc
 10024bc:	jns    0x10024be
 10024be:	and    BYTE PTR [eax],al
 10024c0:	imul   eax,DWORD PTR [eax],0x65
 10024c3:	add    BYTE PTR [ecx+0x0],bh
 10024c6:	jae    0x10024c8
 10024c8:	add    BYTE PTR cs:0xa00,cl
 10024cf:	add    BYTE PTR [ebp+0x0],al
 10024d2:	jb     0x10024d4
 10024d4:	jb     0x10024d6
 10024d6:	outs   dx,DWORD PTR ds:[esi]
 10024d7:	add    BYTE PTR [edx+0x0],dh
 10024da:	and    BYTE PTR [eax],al
 10024dc:	sub    eax,0x46002000
 10024e1:	add    BYTE PTR [ecx+0x0],ah
 10024e4:	imul   eax,DWORD PTR [eax],0x65006c
 10024ea:	add    BYTE PTR fs:[eax],ah
 10024ed:	add    BYTE PTR [eax+eax*1+0x6f],dh
 10024f1:	add    BYTE PTR [eax],ah
 10024f3:	add    BYTE PTR [ebx+0x0],dh
 10024f6:	je     0x10024f8
 10024f8:	popa   
 10024f9:	add    BYTE PTR [edx+0x0],dh
 10024fc:	je     0x10024fe
 10024fe:	and    BYTE PTR [eax],al
 1002500:	push   edi
 1002501:	add    BYTE PTR [ecx+0x0],ah
 1002504:	je     0x1002506
 1002506:	jae    0x1002508
 1002508:	outs   dx,DWORD PTR ds:[esi]
 1002509:	add    BYTE PTR [esi+0x0],ch
 100250c:	and    BYTE PTR [eax],al
 100250e:	jo     0x1002510
 1002510:	jb     0x1002512
 1002512:	outs   dx,DWORD PTR ds:[esi]
 1002513:	add    BYTE PTR [ebx+0x0],ah
 1002516:	add    BYTE PTR gs:[ebx+0x0],dh
 100251a:	jae    0x100251c
 100251c:	add    BYTE PTR cs:0xa00,cl
 1002523:	add    BYTE PTR [eax],al
 1002525:	add    BYTE PTR [eax],al
 1002527:	add    BYTE PTR [ebp+0x0],al
 100252a:	jb     0x100252c
 100252c:	jb     0x100252e
 100252e:	outs   dx,DWORD PTR ds:[esi]
 100252f:	add    BYTE PTR [edx+0x0],dh
 1002532:	and    BYTE PTR [eax],al
 1002534:	sub    eax,0x46002000
 1002539:	add    BYTE PTR [ecx+0x0],ah
 100253c:	imul   eax,DWORD PTR [eax],0x65006c
 1002542:	add    BYTE PTR fs:[eax],ah
 1002545:	add    BYTE PTR [edi+0x0],dh
 1002548:	jb     0x100254a
 100254a:	imul   eax,DWORD PTR [eax],0x690074
 1002550:	outs   dx,BYTE PTR ds:[esi]
 1002551:	add    BYTE PTR [edi+0x0],ah
 1002554:	and    BYTE PTR [eax],al
 1002556:	je     0x1002558
 1002558:	push   0x20006500
 100255d:	add    BYTE PTR [edi+0x0],dl
 1002560:	popa   
 1002561:	add    BYTE PTR [eax+eax*1+0x73],dh
 1002565:	add    BYTE PTR [edi+0x0],ch
 1002568:	outs   dx,BYTE PTR ds:[esi]
 1002569:	add    BYTE PTR [eax],ah
 100256b:	add    BYTE PTR [ebp+0x0],ch
 100256e:	popa   
 100256f:	add    BYTE PTR [esi+0x0],ch
 1002572:	imul   eax,DWORD PTR [eax],0x650066
 1002578:	jae    0x100257a
 100257a:	je     0x100257c
 100257c:	add    BYTE PTR cs:0xa00,cl
 1002583:	add    BYTE PTR [eax],al
 1002585:	add    BYTE PTR [eax],al
 1002587:	add    BYTE PTR [ebp+0x0],al
 100258a:	jb     0x100258c
 100258c:	jb     0x100258e
 100258e:	outs   dx,DWORD PTR ds:[esi]
 100258f:	add    BYTE PTR [edx+0x0],dh
 1002592:	and    BYTE PTR [eax],al
 1002594:	sub    eax,0x56002000
 1002599:	add    BYTE PTR [ebp+0x0],ah
 100259c:	jb     0x100259e
 100259e:	jae    0x10025a0
 10025a0:	imul   eax,DWORD PTR [eax],0x6e006f
 10025a6:	and    BYTE PTR [eax],al
 10025a8:	ins    DWORD PTR es:[edi],dx
 10025a9:	add    BYTE PTR [ecx+0x0],ch
 10025ac:	jae    0x10025ae
 10025ae:	ins    DWORD PTR es:[edi],dx
 10025af:	add    BYTE PTR [ecx+0x0],ah
 10025b2:	je     0x10025b4
 10025b4:	arpl   WORD PTR [eax],ax
 10025b6:	push   0x64002000
 10025bb:	add    BYTE PTR [ebp+0x0],ah
 10025be:	je     0x10025c0
 10025c0:	add    BYTE PTR gs:[ebx+0x0],ah
 10025c4:	je     0x10025c6
 10025c6:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
 10025cb:	add    BYTE PTR ds:0xa00,cl
 10025d1:	add    BYTE PTR [eax],al
 10025d3:	add    BYTE PTR [eax],al
 10025d5:	add    BYTE PTR [eax],al
 10025d7:	add    BYTE PTR [ebp+0x0],al
 10025da:	jb     0x10025dc
 10025dc:	jb     0x10025de
 10025de:	outs   dx,DWORD PTR ds:[esi]
 10025df:	add    BYTE PTR [edx+0x0],dh
 10025e2:	and    BYTE PTR [eax],al
 10025e4:	sub    eax,0x52002000
 10025e9:	add    BYTE PTR [ebp+0x0],ah
 10025ec:	ins    DWORD PTR es:[edi],dx
 10025ed:	add    BYTE PTR [edi+0x0],ch
 10025f0:	je     0x10025f2
 10025f2:	add    BYTE PTR gs:[eax],ah
 10025f5:	add    BYTE PTR [ebp+0x0],ch
 10025f8:	add    BYTE PTR gs:[ebp+0x0],ch
 10025fc:	outs   dx,DWORD PTR ds:[esi]
 10025fd:	add    BYTE PTR [edx+0x0],dh
 1002600:	jns    0x1002602
 1002602:	and    BYTE PTR [eax],al
 1002604:	jb     0x1002606
 1002606:	add    BYTE PTR gs:[ecx+0x0],ah
 100260a:	add    BYTE PTR fs:[eax],ah
 100260d:	add    BYTE PTR [esi+0x0],ah
 1002610:	popa   
 1002611:	add    BYTE PTR [ecx+0x0],ch
 1002614:	ins    BYTE PTR es:[edi],dx
 1002615:	add    BYTE PTR [ebp+0x0],ah
 1002618:	add    BYTE PTR fs:[esi],ch
 100261b:	add    BYTE PTR ds:0xa00,cl
 1002621:	add    BYTE PTR [eax],al
 1002623:	add    BYTE PTR [eax],al
 1002625:	add    BYTE PTR [eax],al
 1002627:	add    BYTE PTR [ebp+0x0],al
 100262a:	jb     0x100262c
 100262c:	jb     0x100262e
 100262e:	outs   dx,DWORD PTR ds:[esi]
 100262f:	add    BYTE PTR [edx+0x0],dh
 1002632:	and    BYTE PTR [eax],al
 1002634:	sub    eax,0x52002000
 1002639:	add    BYTE PTR [ebp+0x0],ah
 100263c:	ins    DWORD PTR es:[edi],dx
 100263d:	add    BYTE PTR [edi+0x0],ch
 1002640:	je     0x1002642
 1002642:	add    BYTE PTR gs:[eax],ah
 1002645:	add    BYTE PTR [ebp+0x0],ch
 1002648:	add    BYTE PTR gs:[ebp+0x0],ch
 100264c:	outs   dx,DWORD PTR ds:[esi]
 100264d:	add    BYTE PTR [edx+0x0],dh
 1002650:	jns    0x1002652
 1002652:	and    BYTE PTR [eax],al
 1002654:	data16 add BYTE PTR [ecx+0x0],ah
 1002658:	imul   eax,DWORD PTR [eax],0x65006c
 100265e:	add    BYTE PTR fs:[eax],ah
 1002661:	add    BYTE PTR [ebx+0x0],ah
 1002664:	push   0x63006500
 1002669:	add    BYTE PTR [ebx+0x0],ch
 100266c:	jae    0x100266e
 100266e:	jne    0x1002670
 1002670:	ins    DWORD PTR es:[edi],dx
 1002671:	add    BYTE PTR [esi],ch
 1002673:	add    BYTE PTR ds:0xa00,cl
 1002679:	add    BYTE PTR [eax],al
 100267b:	add    BYTE PTR [eax],al
 100267d:	add    BYTE PTR [eax],al
 100267f:	add    BYTE PTR [ebp+0x0],al
 1002682:	jb     0x1002684
 1002684:	jb     0x1002686
 1002686:	outs   dx,DWORD PTR ds:[esi]
 1002687:	add    BYTE PTR [edx+0x0],dh
 100268a:	and    BYTE PTR [eax],al
 100268c:	sub    eax,0x52002000
 1002691:	add    BYTE PTR [ebp+0x0],ah
 1002694:	ins    DWORD PTR es:[edi],dx
 1002695:	add    BYTE PTR [edi+0x0],ch
 1002698:	je     0x100269a
 100269a:	add    BYTE PTR gs:[eax],ah
 100269d:	add    BYTE PTR [ebp+0x0],ch
 10026a0:	add    BYTE PTR gs:[ebp+0x0],ch
 10026a4:	outs   dx,DWORD PTR ds:[esi]
 10026a5:	add    BYTE PTR [edx+0x0],dh
 10026a8:	jns    0x10026aa
 10026aa:	and    BYTE PTR [eax],al
 10026ac:	data16 add BYTE PTR [ecx+0x0],ah
 10026b0:	imul   eax,DWORD PTR [eax],0x65006c
 10026b6:	add    BYTE PTR fs:[eax],ah
 10026b9:	add    BYTE PTR [ebx+0x0],dh
 10026bc:	popa   
 10026bd:	add    BYTE PTR [esi+0x0],ch
 10026c0:	imul   eax,DWORD PTR [eax],0x790074
 10026c6:	and    BYTE PTR [eax],al
 10026c8:	arpl   WORD PTR [eax],ax
 10026ca:	push   0x63006500
 10026cf:	add    BYTE PTR [ebx+0x0],ch
 10026d2:	add    BYTE PTR cs:0xa00,cl
 10026d9:	add    BYTE PTR [eax],al
 10026db:	add    BYTE PTR [eax],al
 10026dd:	add    BYTE PTR [eax],al
 10026df:	add    BYTE PTR [eax+eax*1+0x68],dl
 10026e3:	add    BYTE PTR [ebp+0x0],ah
 10026e6:	and    BYTE PTR [eax],al
 10026e8:	add    BYTE PTR gs:[edx+0x0],dh
 10026ec:	jb     0x10026ee
 10026ee:	outs   dx,DWORD PTR ds:[esi]
 10026ef:	add    BYTE PTR [edx+0x0],dh
 10026f2:	and    BYTE PTR [eax],al
 10026f4:	imul   eax,DWORD PTR [eax],0x66006e
 10026fa:	outs   dx,DWORD PTR ds:[esi]
 10026fb:	add    BYTE PTR [edx+0x0],dh
 10026fe:	ins    DWORD PTR es:[edi],dx
 10026ff:	add    BYTE PTR [ecx+0x0],ah
 1002702:	je     0x1002704
 1002704:	imul   eax,DWORD PTR [eax],0x6e006f
 100270a:	and    BYTE PTR [eax],al
 100270c:	push   0x73006100
 1002711:	add    BYTE PTR [eax],ah
 1002713:	add    BYTE PTR [edx+0x0],ah
 1002716:	add    BYTE PTR gs:[ebp+0x0],ah
 100271a:	outs   dx,BYTE PTR ds:[esi]
 100271b:	add    BYTE PTR [eax],ah
 100271d:	add    BYTE PTR [ebx+0x0],dh
 1002720:	jne    0x1002722
 1002722:	bound  eax,QWORD PTR [eax]
 1002724:	ins    DWORD PTR es:[edi],dx
 1002725:	add    BYTE PTR [ecx+0x0],ch
 1002728:	je     0x100272a
 100272a:	je     0x100272c
 100272c:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
 1002731:	add    BYTE PTR [eax+eax*1+0x6f],dh
 1002735:	add    BYTE PTR [eax],ah
 1002737:	add    BYTE PTR [edi+0x0],dl
 100273a:	popa   
 100273b:	add    BYTE PTR [eax+eax*1+0x73],dh
 100273f:	add    BYTE PTR [edi+0x0],ch
 1002742:	outs   dx,BYTE PTR ds:[esi]
 1002743:	add    BYTE PTR [eax],ah
 1002745:	add    BYTE PTR [ebp+0x0],ah
 1002748:	jb     0x100274a
 100274a:	jb     0x100274c
 100274c:	outs   dx,DWORD PTR ds:[esi]
 100274d:	add    BYTE PTR [edx+0x0],dh
 1002750:	and    BYTE PTR [eax],al
 1002752:	jb     0x1002754
 1002754:	add    BYTE PTR gs:[eax+0x0],dh
 1002758:	outs   dx,DWORD PTR ds:[esi]
 1002759:	add    BYTE PTR [edx+0x0],dh
 100275c:	je     0x100275e
 100275e:	imul   eax,DWORD PTR [eax],0x67006e
 1002764:	add    BYTE PTR cs:0xa00,cl
 100276b:	add    BYTE PTR [eax],al
 100276d:	add    BYTE PTR [eax],al
 100276f:	add    BYTE PTR [ebp+0x0],al
 1002772:	jb     0x1002774
 1002774:	jb     0x1002776
 1002776:	outs   dx,DWORD PTR ds:[esi]
 1002777:	add    BYTE PTR [edx+0x0],dh
 100277a:	and    BYTE PTR [eax],al
 100277c:	sub    eax,0x73002000
 1002781:	add    BYTE PTR [edi+0x0],ch
 1002784:	ins    DWORD PTR es:[edi],dx
 1002785:	add    BYTE PTR [ebp+0x0],ah
 1002788:	and    BYTE PTR [eax],al
 100278a:	outs   dx,DWORD PTR ds:[esi]
 100278b:	add    BYTE PTR [esi+0x0],ah
 100278e:	and    BYTE PTR [eax],al
 1002790:	je     0x1002792
 1002792:	push   0x20006500
 1002797:	add    BYTE PTR [eax+eax*1+0x75],ah
 100279b:	add    BYTE PTR [ebp+0x0],ch
 100279e:	jo     0x10027a0
 10027a0:	and    BYTE PTR [eax],al
 10027a2:	data16 add BYTE PTR [ecx+0x0],ch
 10027a6:	ins    BYTE PTR es:[edi],dx
 10027a7:	add    BYTE PTR [ebp+0x0],ah
 10027aa:	jae    0x10027ac
 10027ac:	and    BYTE PTR [eax],al
 10027ae:	ja     0x10027b0
 10027b0:	add    BYTE PTR gs:[edx+0x0],dh
 10027b4:	add    BYTE PTR gs:[eax],ah
 10027b7:	add    BYTE PTR [esi+0x0],ch
 10027ba:	outs   dx,DWORD PTR ds:[esi]
 10027bb:	add    BYTE PTR [eax+eax*1+0x20],dh
 10027bf:	add    BYTE PTR [edi+0x0],ah
 10027c2:	add    BYTE PTR gs:[esi+0x0],ch
 10027c6:	add    BYTE PTR gs:[edx+0x0],dh
 10027ca:	popa   
 10027cb:	add    BYTE PTR [eax+eax*1+0x65],dh
 10027cf:	add    BYTE PTR [eax+eax*1+0x20],ah
 10027d3:	add    BYTE PTR [edi+0x0],ch
 10027d6:	outs   dx,BYTE PTR ds:[esi]
 10027d7:	add    BYTE PTR [eax],ah
 10027d9:	add    BYTE PTR [edx+0x0],dh
 10027dc:	add    BYTE PTR gs:[ebp+0x0],ch
 10027e0:	outs   dx,DWORD PTR ds:[esi]
 10027e1:	add    BYTE PTR [eax+eax*1+0x65],dh
 10027e5:	add    BYTE PTR [eax],ah
 10027e7:	add    BYTE PTR [esi+0x0],ch
 10027ea:	outs   dx,DWORD PTR ds:[esi]
 10027eb:	add    BYTE PTR [eax+eax*1+0x65],ah
 10027ef:	add    BYTE PTR [ebx+0x0],dh
 10027f2:	add    BYTE PTR cs:0xa00,cl
 10027f9:	add    BYTE PTR [eax],al
 10027fb:	add    BYTE PTR [eax],al
 10027fd:	add    BYTE PTR [eax],al
 10027ff:	add    BYTE PTR [eax-0x1ffeff74],al
 1002805:	mov    WORD PTR [eax],es
 1002807:	add    DWORD PTR [eax],eax
 1002809:	lea    eax,[eax]
 100280b:	add    DWORD PTR [eax],eax
 100280d:	mov    al,ds:0x8a700100
 1002812:	add    BYTE PTR [ecx],al
 1002814:	push   eax
 1002815:	mov    al,BYTE PTR [eax]
 1002817:	add    DWORD PTR [eax-0x77],esi
 100281a:	add    BYTE PTR [ecx],al
 100281c:	push   eax
 100281d:	mov    es,WORD PTR [eax]
 100281f:	add    eax,esi
 1002821:	mov    al,BYTE PTR [eax]
 1002823:	add    DWORD PTR [eax-0x77],edx
 1002826:	add    BYTE PTR [ecx],al
 1002828:	adc    BYTE PTR [edi-0x681fff00],0x0
 100282f:	add    DWORD PTR [eax+0x10010089],edx
 1002835:	mov    al,BYTE PTR [eax]
 1002837:	add    eax,edx
 1002839:	mov    al,BYTE PTR [eax]
 100283b:	add    DWORD PTR [eax-0x5ffeff76],esi
 1002841:	mov    eax,DWORD PTR [eax]
 1002843:	add    eax,eax
 1002845:	mov    eax,DWORD PTR [eax]
 1002847:	add    DWORD PTR [eax+0x2001008b],eax
 100284d:	mov    eax,DWORD PTR [eax]
 100284f:	add    DWORD PTR [eax-0x75],eax
 1002852:	add    BYTE PTR [ecx],al
 1002854:	pusha  
 1002855:	mov    eax,DWORD PTR [eax]
 1002857:	add    eax,esi
 1002859:	mov    DWORD PTR [eax],eax
 100285b:	add    DWORD PTR [eax],edx
 100285d:	sahf   
 100285e:	add    BYTE PTR [ecx],al
 1002860:	inc    eax
 1002861:	mov    WORD PTR [eax],es
 1002863:	add    DWORD PTR [eax],esp
 1002865:	mov    WORD PTR [eax],es
 1002867:	add    eax,esp
 1002869:	mov    eax,DWORD PTR [eax]
 100286b:	add    DWORD PTR [eax],eax
 100286d:	mov    WORD PTR [eax],es
 100286f:	add    DWORD PTR [eax],esi
 1002871:	mov    al,BYTE PTR [eax]
 1002873:	add    DWORD PTR [eax-0x6e],eax
 1002876:	add    BYTE PTR [ecx],al
 1002878:	inc    eax
 1002879:	cwde   
 100287a:	add    BYTE PTR [ecx],al
 100287c:	and    eax,0x73006c00
 1002881:	add    BYTE PTR [eax],ah
 1002883:	add    BYTE PTR ds:0x64006c00,ah
 1002889:	add    BYTE PTR [eax],ah
 100288b:	add    BYTE PTR [eax],dh
 100288d:	add    BYTE PTR [eax],ah
 100288f:	add    BYTE PTR [eax],dh
 1002891:	add    BYTE PTR [edx],bh
 1002893:	add    BYTE PTR [eax],dh
 1002895:	add    BYTE PTR [eax],ah
 1002897:	add    BYTE PTR ds:0x7000,ah
 100289d:	add    BYTE PTR [eax],al
 100289f:	add    BYTE PTR [eax+eax*1+0x69],dl
 10028a3:	add    BYTE PTR [ebp+0x0],ch
 10028a6:	add    BYTE PTR gs:[edi+0x0],ch
 10028aa:	jne    0x10028ac
 10028ac:	je     0x10028ae
 10028ae:	and    BYTE PTR [eax],al
 10028b0:	ja     0x10028b2
 10028b2:	popa   
 10028b3:	add    BYTE PTR [ecx+0x0],ch
 10028b6:	je     0x10028b8
 10028b8:	imul   eax,DWORD PTR [eax],0x67006e
 10028be:	and    BYTE PTR [eax],al
 10028c0:	data16 add BYTE PTR [edi+0x0],ch
 10028c4:	jb     0x10028c6
 10028c6:	and    BYTE PTR [eax],al
 10028c8:	add    BYTE PTR gs:[eax+0x0],bh
 10028cc:	je     0x10028ce
 10028ce:	add    BYTE PTR gs:[edx+0x0],dh
 10028d2:	outs   dx,BYTE PTR ds:[esi]
 10028d3:	add    BYTE PTR [ecx+0x0],ah
 10028d6:	ins    BYTE PTR es:[edi],dx
 10028d7:	add    BYTE PTR [eax],ah
 10028d9:	add    BYTE PTR [eax+eax*1+0x75],ah
 10028dd:	add    BYTE PTR [ebp+0x0],ch
 10028e0:	jo     0x10028e2
 10028e2:	and    BYTE PTR [eax],al
 10028e4:	jo     0x10028e6
 10028e6:	jb     0x10028e8
 10028e8:	outs   dx,DWORD PTR ds:[esi]
 10028e9:	add    BYTE PTR [ebx+0x0],ah
 10028ec:	add    BYTE PTR gs:[ebx+0x0],dh
 10028f0:	jae    0x10028f2
 10028f2:	and    BYTE PTR [eax],al
 10028f4:	and    eax,0x2e006400
 10028f9:	add    BYTE PTR ds:0xa00,cl
 10028ff:	add    BYTE PTR [ebp+0x0],al
 1002902:	js     0x1002904
 1002904:	je     0x1002906
 1002906:	add    BYTE PTR gs:[edx+0x0],dh
 100290a:	outs   dx,BYTE PTR ds:[esi]
 100290b:	add    BYTE PTR [ecx+0x0],ah
 100290e:	ins    BYTE PTR es:[edi],dx
 100290f:	add    BYTE PTR [eax],ah
 1002911:	add    BYTE PTR [eax+eax*1+0x75],ah
 1002915:	add    BYTE PTR [ebp+0x0],ch
 1002918:	jo     0x100291a
 100291a:	and    BYTE PTR [eax],al
 100291c:	jo     0x100291e
 100291e:	jb     0x1002920
 1002920:	outs   dx,DWORD PTR ds:[esi]
 1002921:	add    BYTE PTR [ebx+0x0],ah
 1002924:	add    BYTE PTR gs:[ebx+0x0],dh
 1002928:	jae    0x100292a
 100292a:	and    BYTE PTR [eax],al
 100292c:	outs   dx,BYTE PTR ds:[esi]
 100292d:	add    BYTE PTR [edi+0x0],ch
 1002930:	je     0x1002932
 1002932:	and    BYTE PTR [eax],al
 1002934:	add    BYTE PTR gs:[eax+0x0],bh
 1002938:	add    BYTE PTR gs:[ebx+0x0],ah
 100293c:	jne    0x100293e
 100293e:	je     0x1002940
 1002940:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
 1002945:	add    BYTE PTR ds:0xa00,cl
 100294b:	add    BYTE PTR [eax],ch
 100294d:	mov    ds:0xa2440100,al
 1002952:	add    BYTE PTR [ecx],al
 1002954:	data16 mov ds:0xa2a30100,al
 100295a:	add    BYTE PTR [ecx],al
 100295c:	mov    edi,0xe50100a2
 1002961:	mov    ds:0xa3540100,al
 1002966:	add    BYTE PTR [ecx],al
 1002968:	addr16 mov ds:0x100,eax
 100296c:	int    0xa3
 100296e:	add    BYTE PTR [ecx],al
 1002970:	loopne 0x1002915
 1002972:	add    BYTE PTR [ecx],al
 1002974:	call   0x49012a1c
	...
 10029b1:	add    BYTE PTR [eax],al
 10029b3:	add    BYTE PTR [eax-0x7ffeff40],cl
 10029b9:	sub    al,BYTE PTR [eax]
 10029bb:	add    DWORD PTR [eax],ecx
 10029bd:	add    BYTE PTR [eax],al
 10029bf:	add    BYTE PTR [edx+0x53],dl
 10029c2:	inc    esp
 10029c3:	push   ebx
 10029c4:	int    0x21
 10029c6:	iret   
 10029c7:	popa   
 10029c8:	add    dl,ah
 10029ca:	and    DWORD PTR [edi-0x6a],ecx
 10029cd:	daa    
 10029ce:	stos   BYTE PTR es:[edi],al
 10029cf:	xor    eax,0x6799240c
 10029d4:	add    DWORD PTR [eax],eax
 10029d6:	add    BYTE PTR [eax],al
 10029d8:	inc    esp
 10029d9:	je     0x1002a4e
 10029db:	inc    esp
 10029dc:	bound  esi,QWORD PTR gs:[ebp+0x67]
 10029e0:	dec    eax
 10029e1:	outs   dx,DWORD PTR ds:[esi]
 10029e2:	jae    0x1002a58
 10029e4:	cs jo  0x1002a4b
 10029e7:	bound  eax,QWORD PTR [eax]
	...
 1002a3d:	add    BYTE PTR [eax],al
 1002a3f:	add    BYTE PTR [eax-0x40],dh
 1002a42:	add    BYTE PTR [ecx],al
 1002a44:	dec    eax
 1002a45:	sub    al,BYTE PTR [eax]
 1002a47:	add    DWORD PTR [eax],eax
 1002a49:	add    BYTE PTR [eax],al
 1002a4b:	add    BYTE PTR [eax],al
 1002a4d:	add    BYTE PTR [eax],al
 1002a4f:	add    BYTE PTR [ecx],al
 1002a51:	add    BYTE PTR [eax],al
 1002a53:	add    BYTE PTR [eax+0x2a],bl
 1002a56:	add    BYTE PTR [ecx],al
 1002a58:	pusha  
 1002a59:	sub    al,BYTE PTR [eax]
 1002a5b:	add    DWORD PTR [eax],eax
 1002a5d:	add    BYTE PTR [eax],al
 1002a5f:	add    BYTE PTR [eax-0x40],dh
 1002a62:	add    BYTE PTR [ecx],al
	...
 1002a6c:	(bad)  
 1002a6d:	(bad)  
 1002a6e:	(bad)  
 1002a6f:	inc    DWORD PTR [eax]
 1002a71:	add    BYTE PTR [eax],al
 1002a73:	add    BYTE PTR [eax+0x0],al
 1002a76:	add    BYTE PTR [eax],al
 1002a78:	dec    eax
 1002a79:	sub    al,BYTE PTR [eax]
 1002a7b:	add    DWORD PTR [eax],eax
 1002a7d:	add    BYTE PTR [eax],al
 1002a7f:	add    BYTE PTR [edi+0x6000005a],dh
 1002a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1002a86:	add    BYTE PTR [eax],al
 1002a88:	lahf   
 1002a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1002a8a:	add    BYTE PTR [eax],al
 1002a8c:	mov    edi,0xdf0000a5
 1002a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1002a92:	add    BYTE PTR [eax],al
 1002a94:	jmp    DWORD PTR [ebp-0x59d90000]
 1002a9a:	add    BYTE PTR [eax],al
 1002a9c:	push   eax
 1002a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
 1002ab2:	add    BYTE PTR [eax],al
 1002ab4:	add    BYTE PTR [edx+0xc],ch
 1002ab7:	mov    eax,0x100a5bf
 1002abc:	call   0x10059ab
 1002ac1:	mov    ecx,DWORD PTR [ebp+0x10]
 1002ac4:	test   ecx,ecx
 1002ac6:	jne    0x1002ad2
 1002ac8:	mov    eax,0x80004003
 1002acd:	jmp    0x1002b5d
 1002ad2:	xor    eax,eax
 1002ad4:	mov    ebx,0x8007000e
 1002ad9:	push   0x28
 1002adb:	mov    DWORD PTR [ecx],eax
 1002add:	mov    DWORD PTR [ebp-0x14],ebx
 1002ae0:	mov    DWORD PTR [ebp-0x18],eax
 1002ae3:	mov    DWORD PTR [ebp-0x4],eax
 1002ae6:	call   0x1005758
 1002aeb:	mov    esi,eax
 1002aed:	pop    ecx
 1002aee:	test   esi,esi
 1002af0:	je     0x1002b0b
 1002af2:	and    DWORD PTR [esi+0x4],0x0
 1002af6:	push   0x6
 1002af8:	xor    eax,eax
 1002afa:	pop    ecx
 1002afb:	lea    edi,[esi+0x8]
 1002afe:	rep stos DWORD PTR es:[edi],eax
 1002b00:	mov    BYTE PTR [esi+0x20],al
 1002b03:	mov    DWORD PTR [esi],0x10016b0
 1002b09:	jmp    0x1002b0d
 1002b0b:	xor    esi,esi
 1002b0d:	or     DWORD PTR [ebp-0x4],0xffffffff
 1002b11:	jmp    0x1002b23
 1002b13:	or     DWORD PTR [ebp-0x4],0xffffffff
 1002b17:	mov    eax,0x1002b1d
 1002b1c:	ret    
 1002b1d:	mov    ebx,DWORD PTR [ebp-0x14]
 1002b20:	mov    esi,DWORD PTR [ebp-0x18]
 1002b23:	test   esi,esi
 1002b25:	je     0x1002b5b
 1002b27:	mov    eax,DWORD PTR [ebp+0x8]
 1002b2a:	lea    ecx,[esi+0x4]
 1002b2d:	mov    DWORD PTR [esi+0x24],eax
 1002b30:	call   0x1003639
 1002b35:	mov    ebx,eax
 1002b37:	test   ebx,ebx
 1002b39:	js     0x1002b3f
 1002b3b:	xor    ebx,ebx
 1002b3d:	test   ebx,ebx
 1002b3f:	jne    0x1002b52
 1002b41:	push   DWORD PTR [ebp+0x10]
 1002b44:	mov    eax,DWORD PTR [esi]
 1002b46:	push   DWORD PTR [ebp+0xc]
 1002b49:	push   esi
 1002b4a:	call   DWORD PTR [eax]
 1002b4c:	mov    ebx,eax
 1002b4e:	test   ebx,ebx
 1002b50:	je     0x1002b5b
 1002b52:	mov    eax,DWORD PTR [esi]
 1002b54:	push   0x1
 1002b56:	mov    ecx,esi
 1002b58:	call   DWORD PTR [eax+0x14]
 1002b5b:	mov    eax,ebx
 1002b5d:	call   0x1005a21
 1002b62:	ret    0xc
 1002b65:	int3   
 1002b66:	int3   
 1002b67:	int3   
 1002b68:	int3   
 1002b69:	int3   
 1002b6a:	mov    edi,edi
 1002b6c:	push   ebp
 1002b6d:	mov    ebp,esp
 1002b6f:	cmp    DWORD PTR [ebp+0x8],0x0
 1002b73:	jne    0x1002b84
 1002b75:	push   DWORD PTR [ebp+0x10]
 1002b78:	push   DWORD PTR [ebp+0xc]
 1002b7b:	push   0x0
 1002b7d:	call   0x1004a95
 1002b82:	jmp    0x1002b9a
 1002b84:	mov    eax,DWORD PTR [ebp+0x10]
 1002b87:	test   eax,eax
 1002b89:	jne    0x1002b92
 1002b8b:	mov    eax,0x80004003
 1002b90:	jmp    0x1002b9a
 1002b92:	and    DWORD PTR [eax],0x0
 1002b95:	mov    eax,0x80040110
 1002b9a:	pop    ebp
 1002b9b:	ret    0xc
 1002b9e:	int3   
 1002b9f:	int3   
 1002ba0:	int3   
 1002ba1:	int3   
 1002ba2:	int3   
 1002ba3:	ret    0x4
 1002ba6:	int3   
 1002ba7:	int3   
 1002ba8:	int3   
 1002ba9:	int3   
 1002baa:	int3   
 1002bab:	xor    eax,eax
 1002bad:	ret    
 1002bae:	int3   
 1002baf:	int3   
 1002bb0:	int3   
 1002bb1:	int3   
 1002bb2:	int3   
 1002bb3:	xor    eax,eax
 1002bb5:	ret    
 1002bb6:	int3   
 1002bb7:	int3   
 1002bb8:	int3   
 1002bb9:	int3   
 1002bba:	int3   
 1002bbb:	mov    edi,edi
 1002bbd:	push   ebp
 1002bbe:	mov    ebp,esp
 1002bc0:	push   0x0
 1002bc2:	push   DWORD PTR [ebp+0x8]
 1002bc5:	push   0x66
 1002bc7:	push   DWORD PTR ds:0x100c364
 1002bcd:	call   0x10032f9
 1002bd2:	pop    ebp
 1002bd3:	ret    0x4
 1002bd6:	int3   
 1002bd7:	int3   
 1002bd8:	int3   
 1002bd9:	int3   
 1002bda:	int3   
 1002bdb:	mov    edi,edi
 1002bdd:	push   ebp
 1002bde:	mov    ebp,esp
 1002be0:	mov    ecx,DWORD PTR [ebp+0x8]
 1002be3:	mov    eax,DWORD PTR [ecx]
 1002be5:	mov    edx,DWORD PTR [ebp+0xc]
 1002be8:	cmp    eax,DWORD PTR [edx]
 1002bea:	jne    0x1002c09
 1002bec:	mov    eax,DWORD PTR [ecx+0x4]
 1002bef:	cmp    eax,DWORD PTR [edx+0x4]
 1002bf2:	jne    0x1002c09
 1002bf4:	mov    eax,DWORD PTR [ecx+0x8]
 1002bf7:	cmp    eax,DWORD PTR [edx+0x8]
 1002bfa:	jne    0x1002c09
 1002bfc:	mov    eax,DWORD PTR [ecx+0xc]
 1002bff:	cmp    eax,DWORD PTR [edx+0xc]
 1002c02:	jne    0x1002c09
 1002c04:	xor    eax,eax
 1002c06:	inc    eax
 1002c07:	pop    ebp
 1002c08:	ret    
 1002c09:	xor    eax,eax
 1002c0b:	pop    ebp
 1002c0c:	ret    
 1002c0d:	int3   
 1002c0e:	int3   
 1002c0f:	int3   
 1002c10:	int3   
 1002c11:	int3   
 1002c12:	mov    edi,edi
 1002c14:	push   ebp
 1002c15:	mov    ebp,esp
 1002c17:	push   ecx
 1002c18:	mov    ecx,DWORD PTR [ebp+0x10]
 1002c1b:	push   esi
 1002c1c:	lea    edx,[ecx+0x2]
 1002c1f:	xor    esi,esi
 1002c21:	mov    ax,WORD PTR [ecx]
 1002c24:	add    ecx,0x2
 1002c27:	cmp    ax,si
 1002c2a:	jne    0x1002c21
 1002c2c:	sub    ecx,edx
 1002c2e:	sar    ecx,1
 1002c30:	jne    0x1002c85
 1002c32:	lea    eax,[ebp+0x14]
 1002c35:	push   eax
 1002c36:	push   0x65
 1002c38:	push   DWORD PTR [ebp+0x8]
 1002c3b:	mov    DWORD PTR [ebp+0x14],esi
 1002c3e:	mov    DWORD PTR [ebp+0x10],esi
 1002c41:	call   0x1006151
 1002c46:	add    esp,0xc
 1002c49:	test   eax,eax
 1002c4b:	je     0x1002c71
 1002c4d:	lea    eax,[ebp+0x10]
 1002c50:	push   eax
 1002c51:	push   0x66
 1002c53:	push   DWORD PTR [ebp+0x8]
 1002c56:	call   0x1006151
 1002c5b:	add    esp,0xc
 1002c5e:	test   eax,eax
 1002c60:	je     0x1002c71
 1002c62:	push   0x40
 1002c64:	push   DWORD PTR [ebp+0x14]
 1002c67:	push   DWORD PTR [ebp+0x10]
 1002c6a:	push   esi
 1002c6b:	call   DWORD PTR ds:0x10012a0
 1002c71:	push   DWORD PTR [ebp+0x10]
 1002c74:	mov    esi,DWORD PTR ds:0x1001244
 1002c7a:	call   esi
 1002c7c:	push   DWORD PTR [ebp+0x14]
 1002c7f:	call   esi
 1002c81:	xor    eax,eax
 1002c83:	jmp    0x1002cb7
 1002c85:	push   0x7
 1002c87:	push   0x10016a0
 1002c8c:	push   DWORD PTR [ebp+0x10]
 1002c8f:	call   DWORD PTR ds:0x10011a4
 1002c95:	add    esp,0xc
 1002c98:	test   eax,eax
 1002c9a:	jne    0x1002ca3
 1002c9c:	mov    BYTE PTR ds:0x100c360,0x1
 1002ca3:	push   esi
 1002ca4:	call   0x1004107
 1002ca9:	pop    ecx
 1002caa:	push   DWORD PTR [ebp+0x14]
 1002cad:	mov    ecx,0x100c320
 1002cb2:	call   0x100442e
 1002cb7:	pop    esi
 1002cb8:	leave  
 1002cb9:	ret    0x10
 1002cbc:	int3   
 1002cbd:	int3   
 1002cbe:	int3   
 1002cbf:	int3   
 1002cc0:	int3   
 1002cc1:	mov    edi,edi
 1002cc3:	push   esi
 1002cc4:	mov    esi,ecx
 1002cc6:	jmp    0x1002cd6
 1002cc8:	mov    ecx,DWORD PTR [esi]
 1002cca:	mov    eax,DWORD PTR [ecx]
 1002ccc:	push   ecx
 1002ccd:	mov    DWORD PTR [esi],eax
 1002ccf:	call   DWORD PTR ds:0x10011b0
 1002cd5:	pop    ecx
 1002cd6:	cmp    DWORD PTR [esi],0x0
 1002cd9:	jne    0x1002cc8
 1002cdb:	pop    esi
 1002cdc:	ret    
 1002cdd:	int3   
 1002cde:	int3   
 1002cdf:	int3   
 1002ce0:	int3   
 1002ce1:	int3   
 1002ce2:	mov    edi,edi
 1002ce4:	push   ebp
 1002ce5:	mov    ebp,esp
 1002ce7:	mov    eax,DWORD PTR [ebp+0x8]
 1002cea:	mov    DWORD PTR [ebp+0x8],eax
 1002ced:	push   0x100a94c
 1002cf2:	lea    eax,[ebp+0x8]
 1002cf5:	push   eax
 1002cf6:	call   0x1005968
 1002cfb:	int3   
 1002cfc:	int3   
 1002cfd:	int3   
 1002cfe:	int3   
 1002cff:	int3   
 1002d00:	int3   
 1002d01:	mov    edi,edi
 1002d03:	push   ebp
 1002d04:	mov    ebp,esp
 1002d06:	mov    eax,DWORD PTR [ebp+0x8]
 1002d09:	test   eax,eax
 1002d0b:	je     0x1002d39
 1002d0d:	cmp    eax,0xc
 1002d10:	je     0x1002d32
 1002d12:	cmp    eax,0x16
 1002d15:	je     0x1002d2b
 1002d17:	cmp    eax,0x22
 1002d1a:	je     0x1002d2b
 1002d1c:	cmp    eax,0x50
 1002d1f:	je     0x1002d39
 1002d21:	push   0x80004005
 1002d26:	call   0x1002ce2
 1002d2b:	push   0x80070057
 1002d30:	jmp    0x1002d26
 1002d32:	push   0x8007000e
 1002d37:	jmp    0x1002d26
 1002d39:	pop    ebp
 1002d3a:	ret    
 1002d3b:	int3   
 1002d3c:	int3   
 1002d3d:	int3   
 1002d3e:	int3   
 1002d3f:	int3   
 1002d40:	mov    edi,edi
 1002d42:	push   esi
 1002d43:	xor    esi,esi
 1002d45:	push   esi
 1002d46:	push   ecx
 1002d47:	call   DWORD PTR ds:0x10010bc
 1002d4d:	test   eax,eax
 1002d4f:	jne    0x1002d69
 1002d51:	call   DWORD PTR ds:0x1001144
 1002d57:	mov    esi,eax
 1002d59:	test   esi,esi
 1002d5b:	jle    0x1002d69
 1002d5d:	and    esi,0xffff
 1002d63:	or     esi,0x80070000
 1002d69:	mov    eax,esi
 1002d6b:	pop    esi
 1002d6c:	ret    
 1002d6d:	int3   
 1002d6e:	int3   
 1002d6f:	int3   
 1002d70:	int3   
 1002d71:	int3   
 1002d72:	push   DWORD PTR [ecx]
 1002d74:	call   DWORD PTR ds:0x1001244
 1002d7a:	ret    
 1002d7b:	int3   
 1002d7c:	int3   
 1002d7d:	int3   
 1002d7e:	int3   
 1002d7f:	int3   
 1002d80:	mov    edi,edi
 1002d82:	push   ebp
 1002d83:	mov    ebp,esp
 1002d85:	push   esi
 1002d86:	mov    esi,ecx
 1002d88:	cmp    DWORD PTR [esi],0x0
 1002d8b:	je     0x1002dc3
 1002d8d:	push   0x10013ac
 1002d92:	call   DWORD PTR ds:0x1001064
 1002d98:	test   eax,eax
 1002d9a:	je     0x1002dd1
 1002d9c:	push   0x10013c8
 1002da1:	push   eax
 1002da2:	call   DWORD PTR ds:0x100115c
 1002da8:	test   eax,eax
 1002daa:	je     0x1002dd1
 1002dac:	push   0x0
 1002dae:	push   DWORD PTR [esi]
 1002db0:	push   DWORD PTR [ebp+0x18]
 1002db3:	push   DWORD PTR [ebp+0x14]
 1002db6:	push   DWORD PTR [ebp+0x10]
 1002db9:	push   DWORD PTR [ebp+0xc]
 1002dbc:	push   DWORD PTR [ebp+0x8]
 1002dbf:	call   eax
 1002dc1:	jmp    0x1002dd4
 1002dc3:	cmp    DWORD PTR [esi+0x4],0x0
 1002dc7:	je     0x1002dd1
 1002dc9:	pop    esi
 1002dca:	pop    ebp
 1002dcb:	jmp    DWORD PTR ds:0x1001000
 1002dd1:	xor    eax,eax
 1002dd3:	inc    eax
 1002dd4:	pop    esi
 1002dd5:	pop    ebp
 1002dd6:	ret    0x14
 1002dd9:	int3   
 1002dda:	int3   
 1002ddb:	int3   
 1002ddc:	int3   
 1002ddd:	int3   
 1002dde:	mov    edi,edi
 1002de0:	push   ebp
 1002de1:	mov    ebp,esp
 1002de3:	push   ecx
 1002de4:	push   ecx
 1002de5:	push   ebx
 1002de6:	mov    ebx,DWORD PTR [ebp+0x8]
 1002de9:	test   ebx,ebx
 1002deb:	jne    0x1002df4
 1002ded:	mov    eax,0x80070057
 1002df2:	jmp    0x1002e65
 1002df4:	mov    edx,DWORD PTR [ebx+0x8]
 1002df7:	push   esi
 1002df8:	xor    eax,eax
 1002dfa:	push   edi
 1002dfb:	mov    DWORD PTR [ebp-0x4],edx
 1002dfe:	cmp    edx,DWORD PTR [ebx+0xc]
 1002e01:	jae    0x1002e53
 1002e03:	mov    esi,DWORD PTR [edx]
 1002e05:	mov    DWORD PTR [ebp-0x8],esi
 1002e08:	test   esi,esi
 1002e0a:	je     0x1002e44
 1002e0c:	cmp    DWORD PTR [ebp+0x10],0x0
 1002e10:	je     0x1002e26
 1002e12:	mov    edi,DWORD PTR [esi]
 1002e14:	mov    esi,DWORD PTR [ebp+0x10]
 1002e17:	push   0x4
 1002e19:	xor    ebx,ebx
 1002e1b:	mov    ebx,DWORD PTR [ebp+0x8]
 1002e1e:	pop    ecx
 1002e1f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1002e21:	jne    0x1002e44
 1002e23:	mov    esi,DWORD PTR [ebp-0x8]
 1002e26:	push   0x1
 1002e28:	call   DWORD PTR [esi+0x4]
 1002e2b:	test   eax,eax
 1002e2d:	js     0x1002e63
 1002e2f:	push   0x1
 1002e31:	call   DWORD PTR [esi+0x1c]
 1002e34:	push   eax
 1002e35:	push   DWORD PTR [esi]
 1002e37:	call   DWORD PTR ds:0x100102c
 1002e3d:	test   eax,eax
 1002e3f:	js     0x1002e63
 1002e41:	mov    edx,DWORD PTR [ebp-0x4]
 1002e44:	add    edx,0x4
 1002e47:	mov    DWORD PTR [ebp-0x4],edx
 1002e4a:	cmp    edx,DWORD PTR [ebx+0xc]
 1002e4d:	jb     0x1002e03
 1002e4f:	test   eax,eax
 1002e51:	js     0x1002e63
 1002e53:	cmp    DWORD PTR [ebp+0xc],0x0
 1002e57:	je     0x1002e63
 1002e59:	push   0x0
 1002e5b:	push   DWORD PTR [ebx+0x4]
 1002e5e:	call   0x1002f00
 1002e63:	pop    edi
 1002e64:	pop    esi
 1002e65:	pop    ebx
 1002e66:	leave  
 1002e67:	ret    0xc
 1002e6a:	int3   
 1002e6b:	int3   
 1002e6c:	int3   
 1002e6d:	int3   
 1002e6e:	int3   
 1002e6f:	mov    edi,edi
 1002e71:	push   ebp
 1002e72:	mov    ebp,esp
 1002e74:	push   ecx
 1002e75:	push   ecx
 1002e76:	push   ebx
 1002e77:	mov    ebx,DWORD PTR [ebp+0x8]
 1002e7a:	test   ebx,ebx
 1002e7c:	jne    0x1002e85
 1002e7e:	mov    eax,0x80070057
 1002e83:	jmp    0x1002ef6
 1002e85:	mov    edx,DWORD PTR [ebx+0x8]
 1002e88:	push   esi
 1002e89:	xor    eax,eax
 1002e8b:	push   edi
 1002e8c:	mov    DWORD PTR [ebp-0x4],edx
 1002e8f:	cmp    edx,DWORD PTR [ebx+0xc]
 1002e92:	jae    0x1002ee4
 1002e94:	mov    esi,DWORD PTR [edx]
 1002e96:	mov    DWORD PTR [ebp-0x8],esi
 1002e99:	test   esi,esi
 1002e9b:	je     0x1002ed5
 1002e9d:	cmp    DWORD PTR [ebp+0x10],0x0
 1002ea1:	je     0x1002eb7
 1002ea3:	mov    edi,DWORD PTR [esi]
 1002ea5:	mov    esi,DWORD PTR [ebp+0x10]
 1002ea8:	push   0x4
 1002eaa:	xor    ebx,ebx
 1002eac:	mov    ebx,DWORD PTR [ebp+0x8]
 1002eaf:	pop    ecx
 1002eb0:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1002eb2:	jne    0x1002ed5
 1002eb4:	mov    esi,DWORD PTR [ebp-0x8]
 1002eb7:	push   0x0
 1002eb9:	call   DWORD PTR [esi+0x1c]
 1002ebc:	push   eax
 1002ebd:	push   DWORD PTR [esi]
 1002ebf:	call   DWORD PTR ds:0x100102c
 1002ec5:	test   eax,eax
 1002ec7:	js     0x1002ef4
 1002ec9:	push   0x0
 1002ecb:	call   DWORD PTR [esi+0x4]
 1002ece:	test   eax,eax
 1002ed0:	js     0x1002ef4
 1002ed2:	mov    edx,DWORD PTR [ebp-0x4]
 1002ed5:	add    edx,0x4
 1002ed8:	mov    DWORD PTR [ebp-0x4],edx
 1002edb:	cmp    edx,DWORD PTR [ebx+0xc]
 1002ede:	jb     0x1002e94
 1002ee0:	test   eax,eax
 1002ee2:	js     0x1002ef4
 1002ee4:	cmp    DWORD PTR [ebp+0xc],0x0
 1002ee8:	je     0x1002ef4
 1002eea:	push   0x0
 1002eec:	push   DWORD PTR [ebx+0x4]
 1002eef:	call   0x1003098
 1002ef4:	pop    edi
 1002ef5:	pop    esi
 1002ef6:	pop    ebx
 1002ef7:	leave  
 1002ef8:	ret    0xc
 1002efb:	int3   
 1002efc:	int3   
 1002efd:	int3   
 1002efe:	int3   
 1002eff:	int3   
 1002f00:	mov    edi,edi
 1002f02:	push   ebp
 1002f03:	mov    ebp,esp
 1002f05:	sub    esp,0x21c
 1002f0b:	mov    eax,ds:0x100c088
 1002f10:	xor    eax,ebp
 1002f12:	mov    DWORD PTR [ebp-0x4],eax
 1002f15:	mov    eax,DWORD PTR [ebp+0xc]
 1002f18:	mov    ecx,DWORD PTR [ebp+0x8]
 1002f1b:	and    DWORD PTR [ebp-0x21c],0x0
 1002f22:	and    DWORD PTR [ebp-0x218],0x0
 1002f29:	push   esi
 1002f2a:	push   edi
 1002f2b:	lea    edx,[ebp-0x218]
 1002f31:	push   edx
 1002f32:	lea    edx,[ebp-0x21c]
 1002f38:	push   edx
 1002f39:	push   eax
 1002f3a:	push   ecx
 1002f3b:	call   DWORD PTR ds:0x100101c
 1002f41:	mov    esi,eax
 1002f43:	test   esi,esi
 1002f45:	js     0x1003065
 1002f4b:	mov    eax,DWORD PTR [ebp-0x218]
 1002f51:	lea    edx,[ebp-0x214]
 1002f57:	push   edx
 1002f58:	xor    edx,edx
 1002f5a:	push   edx
 1002f5b:	push   edx
 1002f5c:	push   edx
 1002f5d:	xor    esi,esi
 1002f5f:	and    DWORD PTR [ebp-0x214],esi
 1002f65:	mov    ecx,DWORD PTR [eax]
 1002f67:	push   0xffffffff
 1002f69:	push   eax
 1002f6a:	call   DWORD PTR [ecx+0x24]
 1002f6d:	test   eax,eax
 1002f6f:	js     0x1002fd2
 1002f71:	cmp    DWORD PTR [ebp-0x214],esi
 1002f77:	je     0x1002fd2
 1002f79:	push   DWORD PTR [ebp-0x214]
 1002f7f:	call   DWORD PTR ds:0x1001248
 1002f85:	push   eax
 1002f86:	push   DWORD PTR [ebp-0x214]
 1002f8c:	lea    eax,[ebp-0x20c]
 1002f92:	push   0x104
 1002f97:	push   eax
 1002f98:	call   DWORD PTR ds:0x1001234
 1002f9e:	push   eax
 1002f9f:	call   0x1002d01
 1002fa4:	xor    eax,eax
 1002fa6:	mov    WORD PTR [ebp-0x6],ax
 1002faa:	add    esp,0x14
 1002fad:	lea    eax,[ebp-0x20c]
 1002fb3:	push   eax
 1002fb4:	call   0x1003528
 1002fb9:	add    eax,eax
 1002fbb:	cmp    eax,0x208
 1002fc0:	jae    0x1003016
 1002fc2:	xor    ecx,ecx
 1002fc4:	mov    WORD PTR [ebp+eax*1-0x20c],cx
 1002fcc:	lea    esi,[ebp-0x20c]
 1002fd2:	lea    eax,[ebp-0x20d]
 1002fd8:	push   eax
 1002fd9:	mov    BYTE PTR [ebp-0x20d],0x0
 1002fe0:	call   DWORD PTR ds:0x1001020
 1002fe6:	mov    edi,eax
 1002fe8:	test   edi,edi
 1002fea:	jns    0x100301b
 1002fec:	push   DWORD PTR [ebp-0x214]
 1002ff2:	mov    esi,DWORD PTR ds:0x1001244
 1002ff8:	call   esi
 1002ffa:	mov    ecx,DWORD PTR [ebp-0x218]
 1003000:	test   ecx,ecx
 1003002:	je     0x100300a
 1003004:	mov    eax,DWORD PTR [ecx]
 1003006:	push   ecx
 1003007:	call   DWORD PTR [eax+0x8]
 100300a:	push   DWORD PTR [ebp-0x21c]
 1003010:	call   esi
 1003012:	mov    eax,edi
 1003014:	jmp    0x1003083
 1003016:	call   0x1005825
 100301b:	cmp    BYTE PTR [ebp-0x20d],0x1
 1003022:	jne    0x1003043
 1003024:	push   0x10013f0
 1003029:	call   DWORD PTR ds:0x1001064
 100302f:	test   eax,eax
 1003031:	je     0x1003043
 1003033:	push   0x1001428
 1003038:	push   eax
 1003039:	call   DWORD PTR ds:0x100115c
 100303f:	test   eax,eax
 1003041:	jne    0x1003048
 1003043:	mov    eax,ds:0x1001254
 1003048:	push   esi
 1003049:	push   DWORD PTR [ebp-0x21c]
 100304f:	push   DWORD PTR [ebp-0x218]
 1003055:	call   eax
 1003057:	push   DWORD PTR [ebp-0x214]
 100305d:	mov    esi,eax
 100305f:	call   DWORD PTR ds:0x1001244
 1003065:	mov    eax,DWORD PTR [ebp-0x218]
 100306b:	test   eax,eax
 100306d:	je     0x1003075
 100306f:	mov    ecx,DWORD PTR [eax]
 1003071:	push   eax
 1003072:	call   DWORD PTR [ecx+0x8]
 1003075:	push   DWORD PTR [ebp-0x21c]
 100307b:	call   DWORD PTR ds:0x1001244
 1003081:	mov    eax,esi
 1003083:	mov    ecx,DWORD PTR [ebp-0x4]
 1003086:	pop    edi
 1003087:	xor    ecx,ebp
 1003089:	pop    esi
 100308a:	call   0x1005953
 100308f:	leave  
 1003090:	ret    0x8
 1003093:	int3   
 1003094:	int3   
 1003095:	int3   
 1003096:	int3   
 1003097:	int3   
 1003098:	mov    edi,edi
 100309a:	push   ebp
 100309b:	mov    ebp,esp
 100309d:	push   ecx
 100309e:	push   ecx
 100309f:	and    DWORD PTR [ebp-0x8],0x0
 10030a3:	and    DWORD PTR [ebp-0x4],0x0
 10030a7:	push   esi
 10030a8:	lea    eax,[ebp-0x4]
 10030ab:	push   eax
 10030ac:	lea    eax,[ebp-0x8]
 10030af:	push   eax
 10030b0:	push   DWORD PTR [ebp+0xc]
 10030b3:	push   DWORD PTR [ebp+0x8]
 10030b6:	call   DWORD PTR ds:0x100101c
 10030bc:	mov    esi,eax
 10030be:	test   esi,esi
 10030c0:	js     0x100314d
 10030c6:	mov    eax,DWORD PTR [ebp-0x4]
 10030c9:	mov    ecx,DWORD PTR [eax]
 10030cb:	lea    edx,[ebp+0x8]
 10030ce:	push   edx
 10030cf:	push   eax
 10030d0:	call   DWORD PTR [ecx+0x1c]
 10030d3:	mov    esi,eax
 10030d5:	test   esi,esi
 10030d7:	js     0x100314d
 10030d9:	lea    eax,[ebp+0xf]
 10030dc:	push   eax
 10030dd:	mov    BYTE PTR [ebp+0xf],0x0
 10030e1:	call   DWORD PTR ds:0x1001020
 10030e7:	mov    esi,eax
 10030e9:	test   esi,esi
 10030eb:	jns    0x10030fc
 10030ed:	mov    ecx,DWORD PTR [ebp-0x4]
 10030f0:	test   ecx,ecx
 10030f2:	je     0x100315a
 10030f4:	mov    edx,DWORD PTR [ecx]
 10030f6:	push   ecx
 10030f7:	call   DWORD PTR [edx+0x8]
 10030fa:	jmp    0x100315a
 10030fc:	cmp    BYTE PTR [ebp+0xf],0x1
 1003100:	jne    0x1003123
 1003102:	push   0x10013f0
 1003107:	call   DWORD PTR ds:0x1001064
 100310d:	test   eax,eax
 100310f:	je     0x1003123
 1003111:	push   0x100140c
 1003116:	push   eax
 1003117:	call   DWORD PTR ds:0x100115c
 100311d:	mov    edx,eax
 100311f:	test   edx,edx
 1003121:	jne    0x1003129
 1003123:	mov    edx,DWORD PTR ds:0x100123c
 1003129:	mov    ecx,DWORD PTR [ebp+0x8]
 100312c:	push   DWORD PTR [ecx+0x14]
 100312f:	movzx  eax,WORD PTR [ecx+0x1a]
 1003133:	push   DWORD PTR [ecx+0x10]
 1003136:	push   eax
 1003137:	movzx  eax,WORD PTR [ecx+0x18]
 100313b:	push   eax
 100313c:	push   ecx
 100313d:	call   edx
 100313f:	push   DWORD PTR [ebp+0x8]
 1003142:	mov    esi,eax
 1003144:	mov    eax,DWORD PTR [ebp-0x4]
 1003147:	mov    ecx,DWORD PTR [eax]
 1003149:	push   eax
 100314a:	call   DWORD PTR [ecx+0x30]
 100314d:	mov    eax,DWORD PTR [ebp-0x4]
 1003150:	test   eax,eax
 1003152:	je     0x100315a
 1003154:	mov    ecx,DWORD PTR [eax]
 1003156:	push   eax
 1003157:	call   DWORD PTR [ecx+0x8]
 100315a:	push   DWORD PTR [ebp-0x8]
 100315d:	call   DWORD PTR ds:0x1001244
 1003163:	mov    eax,esi
 1003165:	pop    esi
 1003166:	leave  
 1003167:	ret    0x8
 100316a:	int3   
 100316b:	int3   
 100316c:	int3   
 100316d:	int3   
 100316e:	int3   
 100316f:	mov    edi,edi
 1003171:	push   ebp
 1003172:	mov    ebp,esp
 1003174:	mov    ecx,DWORD PTR [ebp+0x8]
 1003177:	xor    eax,eax
 1003179:	cmp    DWORD PTR [ecx],eax
 100317b:	jne    0x1003195
 100317d:	cmp    DWORD PTR [ecx+0x4],eax
 1003180:	jne    0x1003195
 1003182:	cmp    DWORD PTR [ecx+0x8],0xc0
 1003189:	jne    0x1003195
 100318b:	cmp    DWORD PTR [ecx+0xc],0x46000000
 1003192:	jne    0x1003195
 1003194:	inc    eax
 1003195:	pop    ebp
 1003196:	ret    0x4
 1003199:	int3   
 100319a:	int3   
 100319b:	int3   
 100319c:	int3   
 100319d:	int3   
 100319e:	mov    edi,edi
 10031a0:	push   esi
 10031a1:	mov    esi,ecx
 10031a3:	cmp    DWORD PTR [esi],0x0
 10031a6:	je     0x10031e0
 10031a8:	push   edi
 10031a9:	mov    edi,DWORD PTR [esi+0x8]
 10031ac:	cmp    edi,DWORD PTR [esi+0xc]
 10031af:	jae    0x10031d2
 10031b1:	push   ebx
 10031b2:	mov    ebx,DWORD PTR [edi]
 10031b4:	test   ebx,ebx
 10031b6:	je     0x10031c9
 10031b8:	mov    ecx,DWORD PTR [ebx+0x10]
 10031bb:	test   ecx,ecx
 10031bd:	je     0x10031c5
 10031bf:	mov    eax,DWORD PTR [ecx]
 10031c1:	push   ecx
 10031c2:	call   DWORD PTR [eax+0x8]
 10031c5:	and    DWORD PTR [ebx+0x10],0x0
 10031c9:	add    edi,0x4
 10031cc:	cmp    edi,DWORD PTR [esi+0xc]
 10031cf:	jb     0x10031b2
 10031d1:	pop    ebx
 10031d2:	lea    eax,[esi+0x10]
 10031d5:	push   eax
 10031d6:	call   DWORD PTR ds:0x1001044
 10031dc:	and    DWORD PTR [esi],0x0
 10031df:	pop    edi
 10031e0:	pop    esi
 10031e1:	ret    
 10031e2:	int3   
 10031e3:	int3   
 10031e4:	int3   
 10031e5:	int3   
 10031e6:	int3   
 10031e7:	mov    edi,edi
 10031e9:	push   ebp
 10031ea:	mov    ebp,esp
 10031ec:	push   esi
 10031ed:	push   edi
 10031ee:	mov    edi,ecx
 10031f0:	mov    esi,DWORD PTR [edi+0x8]
 10031f3:	jmp    0x1003204
 10031f5:	mov    eax,DWORD PTR [esi]
 10031f7:	test   eax,eax
 10031f9:	je     0x1003201
 10031fb:	push   DWORD PTR [ebp+0x8]
 10031fe:	call   DWORD PTR [eax+0x20]
 1003201:	add    esi,0x4
 1003204:	cmp    esi,DWORD PTR [edi+0xc]
 1003207:	jb     0x10031f5
 1003209:	pop    edi
 100320a:	pop    esi
 100320b:	pop    ebp
 100320c:	ret    0x4
 100320f:	int3   
 1003210:	int3   
 1003211:	int3   
 1003212:	int3   
 1003213:	int3   
 1003214:	mov    edi,edi
 1003216:	push   esi
 1003217:	mov    esi,ecx
 1003219:	push   edi
 100321a:	xor    eax,eax
 100321c:	push   0x6
 100321e:	pop    ecx
 100321f:	lea    edi,[esi+0x10]
 1003222:	rep stos DWORD PTR es:[edi],eax
 1003224:	mov    DWORD PTR [esi+0x4],eax
 1003227:	mov    DWORD PTR [esi+0xc],eax
 100322a:	mov    DWORD PTR [esi+0x8],eax
 100322d:	mov    DWORD PTR ds:0x100c364,esi
 1003233:	lea    ecx,[esi+0x10]
 1003236:	mov    DWORD PTR [esi+0x28],eax
 1003239:	call   0x1002d40
 100323e:	test   eax,eax
 1003240:	jns    0x100324b
 1003242:	mov    BYTE PTR ds:0x100c0e8,0x1
 1003249:	jmp    0x1003252
 100324b:	mov    DWORD PTR [esi+0x4],0x24
 1003252:	pop    edi
 1003253:	mov    eax,esi
 1003255:	pop    esi
 1003256:	ret    
 1003257:	int3   
 1003258:	int3   
 1003259:	int3   
 100325a:	int3   
 100325b:	int3   
 100325c:	mov    edi,edi
 100325e:	push   ebx
 100325f:	push   esi
 1003260:	mov    esi,ecx
 1003262:	push   edi
 1003263:	lea    edi,[esi+0x4]
 1003266:	xor    ebx,ebx
 1003268:	cmp    DWORD PTR [edi],ebx
 100326a:	je     0x1003294
 100326c:	cmp    DWORD PTR [esi+0xc],ebx
 100326f:	je     0x100327b
 1003271:	push   edi
 1003272:	call   DWORD PTR ds:0x1001014
 1003278:	mov    DWORD PTR [esi+0xc],ebx
 100327b:	mov    ecx,DWORD PTR [esi+0x28]
 100327e:	test   ecx,ecx
 1003280:	je     0x1003288
 1003282:	mov    eax,DWORD PTR [ecx]
 1003284:	push   ecx
 1003285:	call   DWORD PTR [eax+0x8]
 1003288:	lea    eax,[esi+0x10]
 100328b:	push   eax
 100328c:	call   DWORD PTR ds:0x1001044
 1003292:	mov    DWORD PTR [edi],ebx
 1003294:	pop    edi
 1003295:	pop    esi
 1003296:	pop    ebx
 1003297:	ret    
 1003298:	int3   
 1003299:	int3   
 100329a:	int3   
 100329b:	int3   
 100329c:	int3   
 100329d:	mov    eax,DWORD PTR [ecx+0x8]
 10032a0:	ret    
 10032a1:	int3   
 10032a2:	int3   
 10032a3:	int3   
 10032a4:	int3   
 10032a5:	int3   
 10032a6:	mov    edi,edi
 10032a8:	push   ebp
 10032a9:	mov    ebp,esp
 10032ab:	push   ebx
 10032ac:	mov    ebx,DWORD PTR [ebp+0x8]
 10032af:	test   ebx,ebx
 10032b1:	jne    0x10032ba
 10032b3:	mov    eax,0x80004003
 10032b8:	jmp    0x10032ef
 10032ba:	push   esi
 10032bb:	push   edi
 10032bc:	xor    esi,esi
 10032be:	lea    edi,[ecx+0x28]
 10032c1:	cmp    DWORD PTR [edi],esi
 10032c3:	jne    0x10032df
 10032c5:	push   edi
 10032c6:	push   0x10013e0
 10032cb:	push   0x1
 10032cd:	push   esi
 10032ce:	push   0x10017f0
 10032d3:	call   DWORD PTR ds:0x10012c4
 10032d9:	mov    esi,eax
 10032db:	test   esi,esi
 10032dd:	js     0x10032eb
 10032df:	mov    ecx,DWORD PTR [edi]
 10032e1:	mov    DWORD PTR [ebx],ecx
 10032e3:	mov    ecx,DWORD PTR [edi]
 10032e5:	mov    edx,DWORD PTR [ecx]
 10032e7:	push   ecx
 10032e8:	call   DWORD PTR [edx+0x4]
 10032eb:	pop    edi
 10032ec:	mov    eax,esi
 10032ee:	pop    esi
 10032ef:	pop    ebx
 10032f0:	pop    ebp
 10032f1:	ret    0x4
 10032f4:	int3   
 10032f5:	int3   
 10032f6:	int3   
 10032f7:	int3   
 10032f8:	int3   
 10032f9:	mov    edi,edi
 10032fb:	push   ebp
 10032fc:	mov    ebp,esp
 10032fe:	push   ecx
 10032ff:	and    DWORD PTR [ebp-0x4],0x0
 1003303:	push   esi
 1003304:	lea    eax,[ebp-0x4]
 1003307:	push   eax
 1003308:	call   DWORD PTR ds:0x1001010
 100330e:	mov    esi,eax
 1003310:	test   esi,esi
 1003312:	js     0x100335d
 1003314:	mov    esi,DWORD PTR [ebp+0x14]
 1003317:	test   esi,esi
 1003319:	je     0x1003333
 100331b:	jmp    0x100332d
 100331d:	push   DWORD PTR [esi+0x4]
 1003320:	mov    eax,DWORD PTR [ebp-0x4]
 1003323:	mov    ecx,DWORD PTR [eax]
 1003325:	push   edx
 1003326:	push   eax
 1003327:	call   DWORD PTR [ecx+0xc]
 100332a:	add    esi,0x8
 100332d:	mov    edx,DWORD PTR [esi]
 100332f:	test   edx,edx
 1003331:	jne    0x100331d
 1003333:	mov    ecx,DWORD PTR [ebp+0x8]
 1003336:	push   DWORD PTR [ebp-0x4]
 1003339:	mov    eax,DWORD PTR [ecx]
 100333b:	call   DWORD PTR [eax+0x14]
 100333e:	mov    esi,eax
 1003340:	test   esi,esi
 1003342:	js     0x100335d
 1003344:	push   DWORD PTR [ebp-0x4]
 1003347:	push   0x0
 1003349:	push   DWORD PTR [ebp+0x10]
 100334c:	push   DWORD PTR [ebp+0xc]
 100334f:	push   DWORD PTR ds:0x100c6d0
 1003355:	call   DWORD PTR ds:0x1001028
 100335b:	mov    esi,eax
 100335d:	mov    ecx,DWORD PTR [ebp-0x4]
 1003360:	test   ecx,ecx
 1003362:	je     0x100336a
 1003364:	mov    edx,DWORD PTR [ecx]
 1003366:	push   ecx
 1003367:	call   DWORD PTR [edx+0x8]
 100336a:	mov    eax,esi
 100336c:	pop    esi
 100336d:	leave  
 100336e:	ret    0x10
 1003371:	int3   
 1003372:	int3   
 1003373:	int3   
 1003374:	int3   
 1003375:	int3   
 1003376:	mov    edi,edi
 1003378:	push   ebp
 1003379:	mov    ebp,esp
 100337b:	push   esi
 100337c:	mov    esi,DWORD PTR [ebp+0x8]
 100337f:	push   edi
 1003380:	test   esi,esi
 1003382:	je     0x10033b2
 1003384:	mov    edi,DWORD PTR ds:0x1001294
 100338a:	cmp    WORD PTR [esi],0x0
 100338e:	je     0x10033b2
 1003390:	mov    eax,DWORD PTR [ebp+0xc]
 1003393:	jmp    0x10033a5
 1003395:	movzx  ecx,WORD PTR [eax]
 1003398:	test   cx,cx
 100339b:	je     0x10033a9
 100339d:	cmp    WORD PTR [esi],cx
 10033a0:	je     0x10033b8
 10033a2:	push   eax
 10033a3:	call   edi
 10033a5:	test   eax,eax
 10033a7:	jne    0x1003395
 10033a9:	push   esi
 10033aa:	call   edi
 10033ac:	mov    esi,eax
 10033ae:	test   esi,esi
 10033b0:	jne    0x100338a
 10033b2:	xor    eax,eax
 10033b4:	pop    edi
 10033b5:	pop    esi
 10033b6:	pop    ebp
 10033b7:	ret    
 10033b8:	push   esi
 10033b9:	call   edi
 10033bb:	jmp    0x10033b4
 10033bd:	int3   
 10033be:	int3   
 10033bf:	int3   
 10033c0:	int3   
 10033c1:	int3   
 10033c2:	mov    edi,edi
 10033c4:	push   ebp
 10033c5:	mov    ebp,esp
 10033c7:	push   ebx
 10033c8:	mov    ebx,DWORD PTR [ebp+0x8]
 10033cb:	movzx  eax,WORD PTR [ebx]
 10033ce:	push   esi
 10033cf:	push   edi
 10033d0:	mov    edi,DWORD PTR ds:0x100128c
 10033d6:	push   eax
 10033d7:	call   edi
 10033d9:	movzx  esi,ax
 10033dc:	mov    eax,DWORD PTR [ebp+0xc]
 10033df:	movzx  eax,WORD PTR [eax]
 10033e2:	push   eax
 10033e3:	call   edi
 10033e5:	push   0x20
 10033e7:	pop    edx
 10033e8:	push   0x9
 10033ea:	movzx  eax,ax
 10033ed:	pop    ecx
 10033ee:	test   si,si
 10033f1:	je     0x1003446
 10033f3:	cmp    si,ax
 10033f6:	jne    0x1003437
 10033f8:	cmp    si,dx
 10033fb:	je     0x1003437
 10033fd:	cmp    si,cx
 1003400:	je     0x1003437
 1003402:	push   ebx
 1003403:	call   DWORD PTR ds:0x1001294
 1003409:	push   DWORD PTR [ebp+0xc]
 100340c:	mov    ebx,eax
 100340e:	call   DWORD PTR ds:0x1001294
 1003414:	movzx  ecx,WORD PTR [ebx]
 1003417:	push   ecx
 1003418:	mov    DWORD PTR [ebp+0xc],eax
 100341b:	call   edi
 100341d:	movzx  esi,ax
 1003420:	mov    eax,DWORD PTR [ebp+0xc]
 1003423:	movzx  ecx,WORD PTR [eax]
 1003426:	push   ecx
 1003427:	call   edi
 1003429:	push   0x9
 100342b:	pop    ecx
 100342c:	push   0x20
 100342e:	movzx  eax,ax
 1003431:	pop    edx
 1003432:	test   si,si
 1003435:	jne    0x10033f3
 1003437:	test   si,si
 100343a:	je     0x1003446
 100343c:	cmp    si,dx
 100343f:	je     0x1003446
 1003441:	cmp    si,cx
 1003444:	jne    0x1003455
 1003446:	test   ax,ax
 1003449:	je     0x1003460
 100344b:	cmp    ax,dx
 100344e:	je     0x1003460
 1003450:	cmp    ax,cx
 1003453:	je     0x1003460
 1003455:	cmp    si,ax
 1003458:	sbb    eax,eax
 100345a:	and    eax,0xfffffffe
 100345d:	inc    eax
 100345e:	jmp    0x1003462
 1003460:	xor    eax,eax
 1003462:	pop    edi
 1003463:	pop    esi
 1003464:	pop    ebx
 1003465:	pop    ebp
 1003466:	ret    
 1003467:	int3   
 1003468:	int3   
 1003469:	int3   
 100346a:	int3   
 100346b:	int3   
 100346c:	mov    edi,edi
 100346e:	push   ebp
 100346f:	mov    ebp,esp
 1003471:	push   ecx
 1003472:	lea    eax,[ebp-0x4]
 1003475:	push   eax
 1003476:	push   DWORD PTR [ebp+0xc]
 1003479:	lea    eax,[ebp+0xc]
 100347c:	push   eax
 100347d:	push   0x0
 100347f:	push   DWORD PTR [ebp+0x8]
 1003482:	mov    DWORD PTR [ebp-0x4],0x4
 1003489:	push   DWORD PTR [ecx]
 100348b:	call   DWORD PTR ds:0x1001004
 1003491:	test   eax,eax
 1003493:	jne    0x10034a2
 1003495:	mov    eax,DWORD PTR [ebp+0xc]
 1003498:	sub    eax,0x4
 100349b:	neg    eax
 100349d:	sbb    eax,eax
 100349f:	and    eax,0xd
 10034a2:	leave  
 10034a3:	ret    0x8
 10034a6:	int3   
 10034a7:	int3   
 10034a8:	int3   
 10034a9:	int3   
 10034aa:	int3   
 10034ab:	mov    edi,edi
 10034ad:	push   ebp
 10034ae:	mov    ebp,esp
 10034b0:	push   ecx
 10034b1:	push   esi
 10034b2:	mov    esi,DWORD PTR [ebp+0x10]
 10034b5:	push   edi
 10034b6:	lea    eax,[ebp-0x4]
 10034b9:	push   eax
 10034ba:	xor    edx,edx
 10034bc:	push   esi
 10034bd:	push   edx
 10034be:	push   DWORD PTR [ebp+0xc]
 10034c1:	mov    edi,ecx
 10034c3:	mov    ecx,DWORD PTR [edi+0x8]
 10034c6:	push   DWORD PTR [ebp+0x8]
 10034c9:	mov    DWORD PTR [ebp-0x4],edx
 10034cc:	test   ecx,ecx
 10034ce:	je     0x10034d7
 10034d0:	call   0x1002d80
 10034d5:	jmp    0x10034dd
 10034d7:	call   DWORD PTR ds:0x1001000
 10034dd:	mov    ecx,eax
 10034df:	test   ecx,ecx
 10034e1:	jne    0x10034fa
 10034e3:	mov    ecx,edi
 10034e5:	call   0x1003507
 10034ea:	mov    ecx,eax
 10034ec:	mov    eax,DWORD PTR [ebp-0x4]
 10034ef:	and    esi,0x300
 10034f5:	mov    DWORD PTR [edi],eax
 10034f7:	mov    DWORD PTR [edi+0x4],esi
 10034fa:	pop    edi
 10034fb:	mov    eax,ecx
 10034fd:	pop    esi
 10034fe:	leave  
 10034ff:	ret    0xc
 1003502:	int3   
 1003503:	int3   
 1003504:	int3   
 1003505:	int3   
 1003506:	int3   
 1003507:	mov    edi,edi
 1003509:	push   esi
 100350a:	mov    esi,ecx
 100350c:	xor    eax,eax
 100350e:	cmp    DWORD PTR [esi],eax
 1003510:	je     0x100351d
 1003512:	push   DWORD PTR [esi]
 1003514:	call   DWORD PTR ds:0x1001008
 100351a:	and    DWORD PTR [esi],0x0
 100351d:	and    DWORD PTR [esi+0x4],0x0
 1003521:	pop    esi
 1003522:	ret    
 1003523:	int3   
 1003524:	int3   
 1003525:	int3   
 1003526:	int3   
 1003527:	int3   
 1003528:	mov    edi,edi
 100352a:	push   ebp
 100352b:	mov    ebp,esp
 100352d:	push   edi
 100352e:	mov    edi,DWORD PTR [ebp+0x8]
 1003531:	xor    eax,eax
 1003533:	test   edi,edi
 1003535:	je     0x1003571
 1003537:	push   ebx
 1003538:	push   esi
 1003539:	mov    esi,edi
 100353b:	mov    ebx,edi
 100353d:	cmp    WORD PTR [edi],ax
 1003540:	je     0x1003569
 1003542:	xor    edi,edi
 1003544:	push   ebx
 1003545:	call   DWORD PTR ds:0x1001294
 100354b:	movzx  ecx,WORD PTR [ebx]
 100354e:	cmp    ecx,0x5c
 1003551:	je     0x100355d
 1003553:	cmp    ecx,0x2f
 1003556:	je     0x100355d
 1003558:	cmp    ecx,0x3a
 100355b:	jne    0x100355f
 100355d:	mov    esi,eax
 100355f:	mov    ebx,eax
 1003561:	cmp    WORD PTR [eax],di
 1003564:	jne    0x1003544
 1003566:	mov    edi,DWORD PTR [ebp+0x8]
 1003569:	sub    esi,edi
 100356b:	sar    esi,1
 100356d:	mov    eax,esi
 100356f:	pop    esi
 1003570:	pop    ebx
 1003571:	pop    edi
 1003572:	pop    ebp
 1003573:	ret    0x4
 1003576:	int3   
 1003577:	int3   
 1003578:	int3   
 1003579:	int3   
 100357a:	int3   
 100357b:	mov    edi,edi
 100357d:	push   esi
 100357e:	mov    esi,ecx
 1003580:	cmp    BYTE PTR [esi+0x4],0x0
 1003584:	je     0x1003592
 1003586:	push   DWORD PTR [esi]
 1003588:	call   DWORD PTR ds:0x1001138
 100358e:	mov    BYTE PTR [esi+0x4],0x0
 1003592:	pop    esi
 1003593:	ret    
 1003594:	int3   
 1003595:	int3   
 1003596:	int3   
 1003597:	int3   
 1003598:	int3   
 1003599:	mov    edi,edi
 100359b:	push   ebp
 100359c:	mov    ebp,esp
 100359e:	push   ecx
 100359f:	mov    ecx,DWORD PTR [ecx]
 10035a1:	push   esi
 10035a2:	test   ecx,ecx
 10035a4:	jne    0x10035af
 10035a6:	cmp    DWORD PTR [ebp+0x8],ecx
 10035a9:	jne    0x1003601
 10035ab:	mov    al,0x1
 10035ad:	jmp    0x1003603
 10035af:	mov    esi,DWORD PTR [ebp+0x8]
 10035b2:	test   esi,esi
 10035b4:	je     0x1003601
 10035b6:	and    DWORD PTR [ebp+0x8],0x0
 10035ba:	and    DWORD PTR [ebp-0x4],0x0
 10035be:	mov    eax,DWORD PTR [ecx]
 10035c0:	push   ebx
 10035c1:	push   edi
 10035c2:	lea    edx,[ebp+0x8]
 10035c5:	push   edx
 10035c6:	mov    edi,0x100138c
 10035cb:	push   edi
 10035cc:	push   ecx
 10035cd:	call   DWORD PTR [eax]
 10035cf:	mov    eax,DWORD PTR [esi]
 10035d1:	lea    ecx,[ebp-0x4]
 10035d4:	push   ecx
 10035d5:	push   edi
 10035d6:	push   esi
 10035d7:	call   DWORD PTR [eax]
 10035d9:	mov    ecx,DWORD PTR [ebp-0x4]
 10035dc:	mov    eax,DWORD PTR [ebp+0x8]
 10035df:	cmp    eax,ecx
 10035e1:	sete   bl
 10035e4:	test   ecx,ecx
 10035e6:	je     0x10035f1
 10035e8:	mov    eax,DWORD PTR [ecx]
 10035ea:	push   ecx
 10035eb:	call   DWORD PTR [eax+0x8]
 10035ee:	mov    eax,DWORD PTR [ebp+0x8]
 10035f1:	test   eax,eax
 10035f3:	je     0x10035fb
 10035f5:	mov    ecx,DWORD PTR [eax]
 10035f7:	push   eax
 10035f8:	call   DWORD PTR [ecx+0x8]
 10035fb:	pop    edi
 10035fc:	mov    al,bl
 10035fe:	pop    ebx
 10035ff:	jmp    0x1003603
 1003601:	xor    al,al
 1003603:	pop    esi
 1003604:	leave  
 1003605:	ret    0x4
 1003608:	int3   
 1003609:	int3   
 100360a:	int3   
 100360b:	int3   
 100360c:	int3   
 100360d:	mov    ecx,DWORD PTR [ecx]
 100360f:	test   ecx,ecx
 1003611:	je     0x1003619
 1003613:	mov    eax,DWORD PTR [ecx]
 1003615:	push   ecx
 1003616:	call   DWORD PTR [eax+0x8]
 1003619:	ret    
 100361a:	int3   
 100361b:	int3   
 100361c:	int3   
 100361d:	int3   
 100361e:	int3   
 100361f:	add    ecx,0x4
 1003622:	cmp    BYTE PTR [ecx+0x18],0x0
 1003626:	je     0x1003633
 1003628:	push   ecx
 1003629:	mov    BYTE PTR [ecx+0x18],0x0
 100362d:	call   DWORD PTR ds:0x1001044
 1003633:	ret    
 1003634:	int3   
 1003635:	int3   
 1003636:	int3   
 1003637:	int3   
 1003638:	int3   
 1003639:	mov    edi,edi
 100363b:	push   esi
 100363c:	lea    esi,[ecx+0x4]
 100363f:	mov    ecx,esi
 1003641:	call   0x1002d40
 1003646:	test   eax,eax
 1003648:	js     0x100364e
 100364a:	mov    BYTE PTR [esi+0x18],0x1
 100364e:	pop    esi
 100364f:	ret    
 1003650:	int3   
 1003651:	int3   
 1003652:	int3   
 1003653:	int3   
 1003654:	int3   
 1003655:	mov    edi,edi
 1003657:	push   ebp
 1003658:	mov    ebp,esp
 100365a:	push   esi
 100365b:	mov    esi,DWORD PTR [ebp+0x14]
 100365e:	mov    eax,0x80004003
 1003663:	test   esi,esi
 1003665:	je     0x1003690
 1003667:	and    DWORD PTR [esi],0x0
 100366a:	cmp    DWORD PTR [ebp+0xc],0x0
 100366e:	je     0x1003683
 1003670:	push   DWORD PTR [ebp+0x10]
 1003673:	call   0x100316f
 1003678:	test   eax,eax
 100367a:	jne    0x1003683
 100367c:	mov    eax,0x80040110
 1003681:	jmp    0x1003690
 1003683:	mov    eax,DWORD PTR [ebp+0x8]
 1003686:	push   esi
 1003687:	push   DWORD PTR [ebp+0x10]
 100368a:	push   DWORD PTR [ebp+0xc]
 100368d:	call   DWORD PTR [eax+0x24]
 1003690:	pop    esi
 1003691:	pop    ebp
 1003692:	ret    0x10
 1003695:	int3   
 1003696:	int3   
 1003697:	int3   
 1003698:	int3   
 1003699:	int3   
 100369a:	mov    edi,edi
 100369c:	push   ebp
 100369d:	mov    ebp,esp
 100369f:	cmp    DWORD PTR [ebp+0xc],0x0
 10036a3:	mov    ecx,DWORD PTR ds:0x100c364
 10036a9:	mov    eax,DWORD PTR [ecx]
 10036ab:	je     0x10036b2
 10036ad:	call   DWORD PTR [eax+0x4]
 10036b0:	jmp    0x10036b5
 10036b2:	call   DWORD PTR [eax+0x8]
 10036b5:	xor    eax,eax
 10036b7:	pop    ebp
 10036b8:	ret    0x8
 10036bb:	int3   
 10036bc:	int3   
 10036bd:	int3   
 10036be:	int3   
 10036bf:	int3   
 10036c0:	mov    edi,edi
 10036c2:	push   ebp
 10036c3:	mov    ebp,esp
 10036c5:	push   esi
 10036c6:	mov    esi,ecx
 10036c8:	lea    ecx,[esi+0x4]
 10036cb:	mov    DWORD PTR [esi],0x1001440
 10036d1:	call   0x100361f
 10036d6:	test   BYTE PTR [ebp+0x8],0x1
 10036da:	je     0x10036e3
 10036dc:	push   esi
 10036dd:	call   0x100560c
 10036e2:	pop    ecx
 10036e3:	mov    eax,esi
 10036e5:	pop    esi
 10036e6:	pop    ebp
 10036e7:	ret    0x4
 10036ea:	int3   
 10036eb:	int3   
 10036ec:	int3   
 10036ed:	int3   
 10036ee:	int3   
 10036ef:	and    DWORD PTR [ecx],0x0
 10036f2:	and    DWORD PTR [ecx+0x4],0x0
 10036f6:	or     DWORD PTR [ecx+0x8],0xffffffff
 10036fa:	mov    eax,ecx
 10036fc:	ret    
 10036fd:	int3   
 10036fe:	int3   
 10036ff:	int3   
 1003700:	int3   
 1003701:	int3   
 1003702:	push   DWORD PTR [ecx]
 1003704:	call   DWORD PTR ds:0x1001244
 100370a:	ret    
 100370b:	int3   
 100370c:	int3   
 100370d:	int3   
 100370e:	int3   
 100370f:	int3   
 1003710:	mov    edi,edi
 1003712:	push   ebp
 1003713:	mov    ebp,esp
 1003715:	test   BYTE PTR [ebp+0x8],0x2
 1003719:	push   esi
 100371a:	mov    esi,ecx
 100371c:	je     0x1003743
 100371e:	push   edi
 100371f:	push   0x1003702
 1003724:	lea    edi,[esi-0x4]
 1003727:	push   DWORD PTR [edi]
 1003729:	push   0xc
 100372b:	push   esi
 100372c:	call   0x10056e4
 1003731:	test   BYTE PTR [ebp+0x8],0x1
 1003735:	je     0x100373e
 1003737:	push   edi
 1003738:	call   0x1005948
 100373d:	pop    ecx
 100373e:	mov    eax,edi
 1003740:	pop    edi
 1003741:	jmp    0x100375a
 1003743:	push   DWORD PTR [esi]
 1003745:	call   DWORD PTR ds:0x1001244
 100374b:	test   BYTE PTR [ebp+0x8],0x1
 100374f:	je     0x1003758
 1003751:	push   esi
 1003752:	call   0x100560c
 1003757:	pop    ecx
 1003758:	mov    eax,esi
 100375a:	pop    esi
 100375b:	pop    ebp
 100375c:	ret    0x4
 100375f:	int3   
 1003760:	int3   
 1003761:	int3   
 1003762:	int3   
 1003763:	int3   
 1003764:	mov    edi,edi
 1003766:	push   ebp
 1003767:	mov    ebp,esp
 1003769:	push   esi
 100376a:	push   edi
 100376b:	mov    edi,DWORD PTR [ebp+0xc]
 100376e:	mov    esi,ecx
 1003770:	test   edi,edi
 1003772:	jne    0x100377b
 1003774:	mov    eax,0x80004003
 1003779:	jmp    0x10037a0
 100377b:	xor    eax,eax
 100377d:	cmp    DWORD PTR [esi+0xc],eax
 1003780:	jne    0x100378a
 1003782:	push   DWORD PTR [ebp+0x8]
 1003785:	call   0x10037ab
 100378a:	mov    ecx,DWORD PTR [esi+0xc]
 100378d:	mov    DWORD PTR [edi],ecx
 100378f:	cmp    DWORD PTR [esi+0xc],0x0
 1003793:	je     0x10037a0
 1003795:	mov    eax,DWORD PTR [esi+0xc]
 1003798:	mov    ecx,DWORD PTR [eax]
 100379a:	push   eax
 100379b:	call   DWORD PTR [ecx+0x4]
 100379e:	xor    eax,eax
 10037a0:	pop    edi
 10037a1:	pop    esi
 10037a2:	pop    ebp
 10037a3:	ret    0x8
 10037a6:	int3   
 10037a7:	int3   
 10037a8:	int3   
 10037a9:	int3   
 10037aa:	int3   
 10037ab:	push   0x224
 10037b0:	mov    eax,0x100a560
 10037b5:	call   0x10059e6
 10037ba:	mov    esi,ecx
 10037bc:	xor    ecx,ecx
 10037be:	cmp    DWORD PTR [esi+0xc],ecx
 10037c1:	je     0x10037cf
 10037c3:	cmp    DWORD PTR [esi+0x14],ecx
 10037c6:	je     0x10037cf
 10037c8:	xor    eax,eax
 10037ca:	jmp    0x10039b7
 10037cf:	mov    ebx,DWORD PTR ds:0x100c364
 10037d5:	add    ebx,0x10
 10037d8:	mov    DWORD PTR [ebp-0x230],ebx
 10037de:	push   ebx
 10037df:	mov    DWORD PTR [ebp-0x4],ecx
 10037e2:	call   DWORD PTR ds:0x100113c
 10037e8:	cmp    DWORD PTR [esi+0xc],0x0
 10037ec:	mov    BYTE PTR [ebp-0x22c],0x1
 10037f3:	mov    edi,0x80004005
 10037f8:	jne    0x1003994
 10037fe:	push   DWORD PTR [esi+0x4]
 1003801:	and    DWORD PTR [ebp-0x228],0x0
 1003808:	push   0x100c368
 100380d:	call   0x1002bdb
 1003812:	pop    ecx
 1003813:	pop    ecx
 1003814:	test   eax,eax
 1003816:	je     0x100387e
 1003818:	mov    eax,0xffff
 100381d:	cmp    WORD PTR [esi+0x8],ax
 1003821:	jne    0x100387e
 1003823:	cmp    WORD PTR [esi+0xa],ax
 1003827:	jne    0x100387e
 1003829:	push   0x104
 100382e:	lea    eax,[ebp-0x218]
 1003834:	push   eax
 1003835:	push   DWORD PTR ds:0x100c6d0
 100383b:	call   DWORD PTR ds:0x1001060
 1003841:	test   eax,eax
 1003843:	je     0x1003996
 1003849:	cmp    eax,0x104
 100384e:	je     0x1003996
 1003854:	and    DWORD PTR [ebp-0x21c],0x0
 100385b:	lea    eax,[ebp-0x228]
 1003861:	push   eax
 1003862:	lea    eax,[ebp-0x218]
 1003868:	push   eax
 1003869:	call   DWORD PTR ds:0x100124c
 100386f:	lea    ecx,[ebp-0x21c]
 1003875:	mov    edi,eax
 1003877:	call   0x1002cc1
 100387c:	jmp    0x100389d
 100387e:	lea    eax,[ebp-0x228]
 1003884:	push   eax
 1003885:	push   DWORD PTR [ebp+0x8]
 1003888:	movzx  eax,WORD PTR [esi+0xa]
 100388c:	push   eax
 100388d:	movzx  eax,WORD PTR [esi+0x8]
 1003891:	push   eax
 1003892:	push   DWORD PTR [esi+0x4]
 1003895:	call   DWORD PTR ds:0x1001250
 100389b:	mov    edi,eax
 100389d:	test   edi,edi
 100389f:	js     0x1003996
 10038a5:	and    DWORD PTR [ebp-0x220],0x0
 10038ac:	mov    eax,DWORD PTR [ebp-0x228]
 10038b2:	mov    ecx,DWORD PTR [eax]
 10038b4:	lea    edx,[ebp-0x220]
 10038ba:	push   edx
 10038bb:	push   DWORD PTR [esi]
 10038bd:	mov    BYTE PTR [ebp-0x4],0x1
 10038c1:	push   eax
 10038c2:	call   DWORD PTR [ecx+0x18]
 10038c5:	mov    edi,eax
 10038c7:	test   edi,edi
 10038c9:	js     0x1003972
 10038cf:	mov    eax,DWORD PTR [ebp-0x220]
 10038d5:	mov    DWORD PTR [ebp-0x224],eax
 10038db:	test   eax,eax
 10038dd:	je     0x10038eb
 10038df:	mov    ecx,DWORD PTR [eax]
 10038e1:	push   eax
 10038e2:	call   DWORD PTR [ecx+0x4]
 10038e5:	mov    eax,DWORD PTR [ebp-0x220]
 10038eb:	and    DWORD PTR [ebp-0x21c],0x0
 10038f2:	mov    ecx,DWORD PTR [eax]
 10038f4:	lea    edx,[ebp-0x21c]
 10038fa:	push   edx
 10038fb:	push   0x1001760
 1003900:	push   eax
 1003901:	mov    BYTE PTR [ebp-0x4],0x3
 1003905:	call   DWORD PTR [ecx]
 1003907:	test   eax,eax
 1003909:	js     0x100391d
 100390b:	lea    eax,[ebp-0x21c]
 1003911:	push   eax
 1003912:	lea    ecx,[ebp-0x224]
 1003918:	call   0x1003cae
 100391d:	mov    eax,DWORD PTR [ebp-0x224]
 1003923:	and    DWORD PTR [ebp-0x224],0x0
 100392a:	mov    DWORD PTR [esi+0xc],eax
 100392d:	mov    eax,ds:0x100c364
 1003932:	test   eax,eax
 1003934:	je     0x100393b
 1003936:	add    eax,0x4
 1003939:	jmp    0x100393d
 100393b:	xor    eax,eax
 100393d:	push   esi
 100393e:	push   0x10039c4
 1003943:	push   eax
 1003944:	call   DWORD PTR ds:0x1001018
 100394a:	mov    eax,DWORD PTR [ebp-0x21c]
 1003950:	mov    BYTE PTR [ebp-0x4],0x2
 1003954:	test   eax,eax
 1003956:	je     0x100395e
 1003958:	mov    ecx,DWORD PTR [eax]
 100395a:	push   eax
 100395b:	call   DWORD PTR [ecx+0x8]
 100395e:	mov    eax,DWORD PTR [ebp-0x224]
 1003964:	mov    BYTE PTR [ebp-0x4],0x1
 1003968:	test   eax,eax
 100396a:	je     0x1003972
 100396c:	mov    ecx,DWORD PTR [eax]
 100396e:	push   eax
 100396f:	call   DWORD PTR [ecx+0x8]
 1003972:	mov    eax,DWORD PTR [ebp-0x228]
 1003978:	mov    ecx,DWORD PTR [eax]
 100397a:	push   eax
 100397b:	call   DWORD PTR [ecx+0x8]
 100397e:	mov    eax,DWORD PTR [ebp-0x220]
 1003984:	mov    BYTE PTR [ebp-0x4],0x0
 1003988:	test   eax,eax
 100398a:	je     0x1003996
 100398c:	mov    ecx,DWORD PTR [eax]
 100398e:	push   eax
 100398f:	call   DWORD PTR [ecx+0x8]
 1003992:	jmp    0x1003996
 1003994:	xor    edi,edi
 1003996:	cmp    DWORD PTR [esi+0xc],0x0
 100399a:	je     0x10039ae
 100399c:	cmp    DWORD PTR [esi+0x14],0x0
 10039a0:	jne    0x10039ae
 10039a2:	push   DWORD PTR [esi+0xc]
 10039a5:	mov    ecx,esi
 10039a7:	call   0x1003b06
 10039ac:	mov    edi,eax
 10039ae:	push   ebx
 10039af:	call   DWORD PTR ds:0x1001138
 10039b5:	mov    eax,edi
 10039b7:	call   0x1005a3a
 10039bc:	ret    0x4
 10039bf:	int3   
 10039c0:	int3   
 10039c1:	int3   
 10039c2:	int3   
 10039c3:	int3   
 10039c4:	mov    edi,edi
 10039c6:	push   ebp
 10039c7:	mov    ebp,esp
 10039c9:	push   esi
 10039ca:	mov    esi,DWORD PTR [ebp+0x8]
 10039cd:	test   esi,esi
 10039cf:	je     0x10039f4
 10039d1:	mov    ecx,DWORD PTR [esi+0xc]
 10039d4:	test   ecx,ecx
 10039d6:	je     0x10039de
 10039d8:	mov    eax,DWORD PTR [ecx]
 10039da:	push   ecx
 10039db:	call   DWORD PTR [eax+0x8]
 10039de:	mov    ecx,DWORD PTR [esi+0x14]
 10039e1:	and    DWORD PTR [esi+0xc],0x0
 10039e5:	test   ecx,ecx
 10039e7:	je     0x10039f0
 10039e9:	push   0x3
 10039eb:	call   0x1003710
 10039f0:	and    DWORD PTR [esi+0x14],0x0
 10039f4:	pop    esi
 10039f5:	pop    ebp
 10039f6:	ret    0x4
 10039f9:	int3   
 10039fa:	int3   
 10039fb:	int3   
 10039fc:	int3   
 10039fd:	int3   
 10039fe:	mov    edi,edi
 1003a00:	push   ebp
 1003a01:	mov    ebp,esp
 1003a03:	push   ecx
 1003a04:	push   ecx
 1003a05:	push   ebx
 1003a06:	push   esi
 1003a07:	xor    ebx,ebx
 1003a09:	mov    esi,ecx
 1003a0b:	mov    eax,ebx
 1003a0d:	cmp    DWORD PTR [esi+0xc],ebx
 1003a10:	je     0x1003a17
 1003a12:	cmp    DWORD PTR [esi+0x14],ebx
 1003a15:	jne    0x1003a1f
 1003a17:	push   DWORD PTR [ebp+0x14]
 1003a1a:	call   0x10037ab
 1003a1f:	cmp    DWORD PTR [esi+0xc],ebx
 1003a22:	je     0x1003a9e
 1003a24:	cmp    DWORD PTR [esi+0x14],ebx
 1003a27:	mov    ebx,DWORD PTR [ebp+0xc]
 1003a2a:	push   edi
 1003a2b:	je     0x1003a8d
 1003a2d:	cmp    DWORD PTR [ebp+0x10],0x1
 1003a31:	jne    0x1003a8d
 1003a33:	push   DWORD PTR [ebx]
 1003a35:	call   DWORD PTR ds:0x1001058
 1003a3b:	mov    edi,DWORD PTR [esi+0x18]
 1003a3e:	dec    edi
 1003a3f:	mov    ecx,eax
 1003a41:	mov    DWORD PTR [ebp-0x4],ecx
 1003a44:	js     0x1003a8d
 1003a46:	mov    eax,DWORD PTR [esi+0x14]
 1003a49:	mov    ebx,edi
 1003a4b:	imul   ebx,ebx,0xc
 1003a4e:	add    eax,0x4
 1003a51:	add    eax,ebx
 1003a53:	mov    DWORD PTR [ebp+0x14],eax
 1003a56:	cmp    ecx,DWORD PTR [eax]
 1003a58:	jne    0x1003a7e
 1003a5a:	mov    ecx,DWORD PTR [esi+0x14]
 1003a5d:	mov    eax,DWORD PTR [ebx+ecx*1+0x4]
 1003a61:	add    eax,eax
 1003a63:	push   eax
 1003a64:	mov    eax,DWORD PTR [ebp+0xc]
 1003a67:	push   DWORD PTR [eax]
 1003a69:	push   DWORD PTR [ebx+ecx*1]
 1003a6c:	call   0x1005ae2
 1003a71:	add    esp,0xc
 1003a74:	test   eax,eax
 1003a76:	je     0x1003aa4
 1003a78:	mov    eax,DWORD PTR [ebp+0x14]
 1003a7b:	mov    ecx,DWORD PTR [ebp-0x4]
 1003a7e:	sub    eax,0xc
 1003a81:	sub    ebx,0xc
 1003a84:	dec    edi
 1003a85:	mov    DWORD PTR [ebp+0x14],eax
 1003a88:	jns    0x1003a56
 1003a8a:	mov    ebx,DWORD PTR [ebp+0xc]
 1003a8d:	push   DWORD PTR [ebp+0x18]
 1003a90:	mov    eax,DWORD PTR [esi+0xc]
 1003a93:	push   DWORD PTR [ebp+0x10]
 1003a96:	mov    ecx,DWORD PTR [eax]
 1003a98:	push   ebx
 1003a99:	push   eax
 1003a9a:	call   DWORD PTR [ecx+0x28]
 1003a9d:	pop    edi
 1003a9e:	pop    esi
 1003a9f:	pop    ebx
 1003aa0:	leave  
 1003aa1:	ret    0x14
 1003aa4:	mov    ecx,DWORD PTR [esi+0x14]
 1003aa7:	imul   edi,edi,0xc
 1003aaa:	mov    eax,DWORD PTR [ebp+0x18]
 1003aad:	mov    ecx,DWORD PTR [edi+ecx*1+0x8]
 1003ab1:	mov    DWORD PTR [eax],ecx
 1003ab3:	xor    eax,eax
 1003ab5:	jmp    0x1003a9d
 1003ab7:	int3   
 1003ab8:	int3   
 1003ab9:	int3   
 1003aba:	int3   
 1003abb:	int3   
 1003abc:	mov    edi,edi
 1003abe:	push   ebp
 1003abf:	mov    ebp,esp
 1003ac1:	push   esi
 1003ac2:	mov    esi,ecx
 1003ac4:	xor    eax,eax
 1003ac6:	cmp    DWORD PTR [esi+0xc],eax
 1003ac9:	je     0x1003ad0
 1003acb:	cmp    DWORD PTR [esi+0x14],eax
 1003ace:	jne    0x1003ad8
 1003ad0:	push   DWORD PTR [ebp+0x14]
 1003ad3:	call   0x10037ab
 1003ad8:	cmp    DWORD PTR [esi+0xc],0x0
 1003adc:	je     0x1003afc
 1003ade:	push   DWORD PTR [ebp+0x28]
 1003ae1:	mov    eax,DWORD PTR [esi+0xc]
 1003ae4:	push   DWORD PTR [ebp+0x24]
 1003ae7:	mov    ecx,DWORD PTR [eax]
 1003ae9:	push   DWORD PTR [ebp+0x20]
 1003aec:	push   DWORD PTR [ebp+0x1c]
 1003aef:	push   DWORD PTR [ebp+0x18]
 1003af2:	push   DWORD PTR [ebp+0xc]
 1003af5:	push   DWORD PTR [ebp+0x8]
 1003af8:	push   eax
 1003af9:	call   DWORD PTR [ecx+0x2c]
 1003afc:	pop    esi
 1003afd:	pop    ebp
 1003afe:	ret    0x24
 1003b01:	int3   
 1003b02:	int3   
 1003b03:	int3   
 1003b04:	int3   
 1003b05:	int3   
 1003b06:	push   0x20
 1003b08:	mov    eax,0x100a59f
 1003b0d:	call   0x10059ab
 1003b12:	mov    DWORD PTR [ebp-0x1c],ecx
 1003b15:	mov    esi,DWORD PTR [ebp+0x8]
 1003b18:	mov    eax,DWORD PTR [esi]
 1003b1a:	lea    ecx,[ebp-0x24]
 1003b1d:	push   ecx
 1003b1e:	push   esi
 1003b1f:	call   DWORD PTR [eax+0xc]
 1003b22:	test   eax,eax
 1003b24:	js     0x1003c8d
 1003b2a:	mov    eax,DWORD PTR [ebp-0x24]
 1003b2d:	movzx  eax,WORD PTR [eax+0x2c]
 1003b31:	mov    ecx,DWORD PTR [ebp-0x1c]
 1003b34:	xor    edi,edi
 1003b36:	mov    ebx,edi
 1003b38:	mov    DWORD PTR [ebp-0x18],ebx
 1003b3b:	mov    DWORD PTR [ecx+0x18],eax
 1003b3e:	mov    DWORD PTR [ecx+0x14],edi
 1003b41:	mov    DWORD PTR [ebp-0x28],eax
 1003b44:	test   eax,eax
 1003b46:	je     0x1003bd4
 1003b4c:	xor    ecx,ecx
 1003b4e:	push   0xc
 1003b50:	pop    edx
 1003b51:	mul    edx
 1003b53:	seto   cl
 1003b56:	mov    DWORD PTR [ebp-0x4],edi
 1003b59:	neg    ecx
 1003b5b:	or     ecx,eax
 1003b5d:	xor    eax,eax
 1003b5f:	add    ecx,0x4
 1003b62:	setb   al
 1003b65:	neg    eax
 1003b67:	or     eax,ecx
 1003b69:	push   eax
 1003b6a:	call   0x100593c
 1003b6f:	pop    ecx
 1003b70:	mov    DWORD PTR [ebp-0x2c],eax
 1003b73:	mov    BYTE PTR [ebp-0x4],0x1
 1003b77:	test   eax,eax
 1003b79:	je     0x1003b9b
 1003b7b:	mov    ecx,DWORD PTR [ebp-0x28]
 1003b7e:	push   0x1003702
 1003b83:	push   0x10036ef
 1003b88:	push   ecx
 1003b89:	lea    ebx,[eax+0x4]
 1003b8c:	push   0xc
 1003b8e:	push   ebx
 1003b8f:	mov    DWORD PTR [eax],ecx
 1003b91:	mov    DWORD PTR [ebp-0x18],ebx
 1003b94:	call   0x1005617
 1003b99:	jmp    0x1003ba0
 1003b9b:	mov    ebx,edi
 1003b9d:	mov    DWORD PTR [ebp-0x18],edi
 1003ba0:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003ba4:	jmp    0x1003bba
 1003ba6:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003baa:	mov    eax,0x1003bb0
 1003baf:	ret    
 1003bb0:	mov    esi,DWORD PTR [ebp+0x8]
 1003bb3:	xor    edi,edi
 1003bb5:	mov    ebx,edi
 1003bb7:	mov    DWORD PTR [ebp-0x18],ebx
 1003bba:	test   ebx,ebx
 1003bbc:	jne    0x1003bd1
 1003bbe:	push   DWORD PTR [ebp-0x24]
 1003bc1:	mov    eax,DWORD PTR [esi]
 1003bc3:	push   esi
 1003bc4:	call   DWORD PTR [eax+0x4c]
 1003bc7:	mov    eax,0x8007000e
 1003bcc:	jmp    0x1003c8f
 1003bd1:	mov    ecx,DWORD PTR [ebp-0x1c]
 1003bd4:	mov    edx,edi
 1003bd6:	mov    DWORD PTR [ebp-0x28],edx
 1003bd9:	cmp    DWORD PTR [ecx+0x18],edi
 1003bdc:	jle    0x1003c81
 1003be2:	mov    DWORD PTR [ebp+0x8],ebx
 1003be5:	mov    ebx,DWORD PTR [ebp-0x1c]
 1003be8:	mov    eax,DWORD PTR [esi]
 1003bea:	lea    ecx,[ebp-0x20]
 1003bed:	push   ecx
 1003bee:	push   edx
 1003bef:	push   esi
 1003bf0:	call   DWORD PTR [eax+0x14]
 1003bf3:	test   eax,eax
 1003bf5:	js     0x1003c67
 1003bf7:	mov    DWORD PTR [ebp-0x14],edi
 1003bfa:	mov    ecx,DWORD PTR [esi]
 1003bfc:	push   edi
 1003bfd:	push   edi
 1003bfe:	push   edi
 1003bff:	lea    eax,[ebp-0x14]
 1003c02:	push   eax
 1003c03:	mov    eax,DWORD PTR [ebp-0x20]
 1003c06:	push   DWORD PTR [eax]
 1003c08:	mov    DWORD PTR [ebp-0x4],0x3
 1003c0f:	push   esi
 1003c10:	call   DWORD PTR [ecx+0x30]
 1003c13:	test   eax,eax
 1003c15:	js     0x1003c50
 1003c17:	mov    ecx,DWORD PTR [ebp-0x14]
 1003c1a:	mov    eax,DWORD PTR [ebp+0x8]
 1003c1d:	mov    edx,DWORD PTR [eax]
 1003c1f:	mov    DWORD PTR [ebp-0x2c],ecx
 1003c22:	mov    DWORD PTR [ebp-0x14],edi
 1003c25:	cmp    edx,ecx
 1003c27:	je     0x1003c38
 1003c29:	push   edx
 1003c2a:	call   DWORD PTR ds:0x1001244
 1003c30:	mov    eax,DWORD PTR [ebp+0x8]
 1003c33:	mov    ecx,DWORD PTR [ebp-0x2c]
 1003c36:	mov    DWORD PTR [eax],ecx
 1003c38:	push   DWORD PTR [eax]
 1003c3a:	call   DWORD PTR ds:0x1001248
 1003c40:	mov    ecx,DWORD PTR [ebp+0x8]
 1003c43:	mov    edx,DWORD PTR [ebp-0x20]
 1003c46:	mov    DWORD PTR [ecx+0x4],eax
 1003c49:	mov    eax,DWORD PTR [edx]
 1003c4b:	mov    DWORD PTR [ecx+0x8],eax
 1003c4e:	jmp    0x1003c53
 1003c50:	mov    edx,DWORD PTR [ebp-0x20]
 1003c53:	mov    eax,DWORD PTR [esi]
 1003c55:	push   edx
 1003c56:	push   esi
 1003c57:	call   DWORD PTR [eax+0x50]
 1003c5a:	push   DWORD PTR [ebp-0x14]
 1003c5d:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003c61:	call   DWORD PTR ds:0x1001244
 1003c67:	mov    edx,DWORD PTR [ebp-0x28]
 1003c6a:	add    DWORD PTR [ebp+0x8],0xc
 1003c6e:	inc    edx
 1003c6f:	mov    DWORD PTR [ebp-0x28],edx
 1003c72:	cmp    edx,DWORD PTR [ebx+0x18]
 1003c75:	jl     0x1003be8
 1003c7b:	mov    ebx,DWORD PTR [ebp-0x18]
 1003c7e:	mov    ecx,DWORD PTR [ebp-0x1c]
 1003c81:	push   DWORD PTR [ebp-0x24]
 1003c84:	mov    DWORD PTR [ecx+0x14],ebx
 1003c87:	mov    eax,DWORD PTR [esi]
 1003c89:	push   esi
 1003c8a:	call   DWORD PTR [eax+0x4c]
 1003c8d:	xor    eax,eax
 1003c8f:	call   0x1005a21
 1003c94:	ret    0x4
 1003c97:	int3   
 1003c98:	int3   
 1003c99:	int3   
 1003c9a:	int3   
 1003c9b:	int3   
 1003c9c:	mov    ecx,DWORD PTR [ecx]
 1003c9e:	test   ecx,ecx
 1003ca0:	je     0x1003ca8
 1003ca2:	mov    eax,DWORD PTR [ecx]
 1003ca4:	push   ecx
 1003ca5:	call   DWORD PTR [eax+0x8]
 1003ca8:	ret    
 1003ca9:	int3   
 1003caa:	int3   
 1003cab:	int3   
 1003cac:	int3   
 1003cad:	int3   
 1003cae:	mov    edi,edi
 1003cb0:	push   ebp
 1003cb1:	mov    ebp,esp
 1003cb3:	push   esi
 1003cb4:	push   edi
 1003cb5:	mov    edi,DWORD PTR [ebp+0x8]
 1003cb8:	push   DWORD PTR [edi]
 1003cba:	mov    esi,ecx
 1003cbc:	call   0x1003599
 1003cc1:	test   al,al
 1003cc3:	jne    0x1003cd5
 1003cc5:	push   0x1001770
 1003cca:	push   DWORD PTR [edi]
 1003ccc:	push   esi
 1003ccd:	call   DWORD PTR ds:0x100103c
 1003cd3:	jmp    0x1003cd7
 1003cd5:	mov    eax,DWORD PTR [esi]
 1003cd7:	pop    edi
 1003cd8:	pop    esi
 1003cd9:	pop    ebp
 1003cda:	ret    0x4
 1003cdd:	int3   
 1003cde:	int3   
 1003cdf:	int3   
 1003ce0:	int3   
 1003ce1:	int3   
 1003ce2:	mov    edi,edi
 1003ce4:	push   ebp
 1003ce5:	mov    ebp,esp
 1003ce7:	mov    eax,DWORD PTR [ebp+0xc]
 1003cea:	test   eax,eax
 1003cec:	jne    0x1003cf5
 1003cee:	mov    eax,0x80004003
 1003cf3:	jmp    0x1003cfd
 1003cf5:	mov    DWORD PTR [eax],0x1
 1003cfb:	xor    eax,eax
 1003cfd:	pop    ebp
 1003cfe:	ret    0x8
 1003d01:	int3   
 1003d02:	int3   
 1003d03:	int3   
 1003d04:	int3   
 1003d05:	int3   
 1003d06:	mov    edi,edi
 1003d08:	push   ebp
 1003d09:	mov    ebp,esp
 1003d0b:	cmp    DWORD PTR [ebp+0xc],0x0
 1003d0f:	je     0x1003d18
 1003d11:	mov    eax,0x8002000b
 1003d16:	jmp    0x1003d28
 1003d18:	push   DWORD PTR [ebp+0x14]
 1003d1b:	mov    ecx,0x100c050
 1003d20:	push   DWORD PTR [ebp+0x10]
 1003d23:	call   0x1003764
 1003d28:	pop    ebp
 1003d29:	ret    0x10
 1003d2c:	int3   
 1003d2d:	int3   
 1003d2e:	int3   
 1003d2f:	int3   
 1003d30:	int3   
 1003d31:	mov    edi,edi
 1003d33:	push   ebp
 1003d34:	mov    ebp,esp
 1003d36:	push   DWORD PTR [ebp+0x1c]
 1003d39:	mov    ecx,0x100c050
 1003d3e:	push   DWORD PTR [ebp+0x18]
 1003d41:	push   DWORD PTR [ebp+0x14]
 1003d44:	push   DWORD PTR [ebp+0x10]
 1003d47:	push   DWORD PTR [ebp+0xc]
 1003d4a:	call   0x10039fe
 1003d4f:	pop    ebp
 1003d50:	ret    0x18
 1003d53:	int3   
 1003d54:	int3   
 1003d55:	int3   
 1003d56:	int3   
 1003d57:	int3   
 1003d58:	mov    edi,edi
 1003d5a:	push   ebp
 1003d5b:	mov    ebp,esp
 1003d5d:	mov    ecx,0x100c050
 1003d62:	pop    ebp
 1003d63:	jmp    0x1003abc
 1003d68:	int3   
 1003d69:	int3   
 1003d6a:	int3   
 1003d6b:	int3   
 1003d6c:	int3   
 1003d6d:	mov    edi,edi
 1003d6f:	push   ebp
 1003d70:	mov    ebp,esp
 1003d72:	mov    eax,DWORD PTR [ebp+0xc]
 1003d75:	push   esi
 1003d76:	mov    esi,DWORD PTR [ebp+0x8]
 1003d79:	and    DWORD PTR [esi],0x0
 1003d7c:	test   eax,eax
 1003d7e:	jne    0x1003d8b
 1003d80:	push   eax
 1003d81:	call   DWORD PTR ds:0x1001064
 1003d87:	test   eax,eax
 1003d89:	je     0x1003da0
 1003d8b:	push   0x10014d0
 1003d90:	push   eax
 1003d91:	call   DWORD PTR ds:0x100115c
 1003d97:	test   eax,eax
 1003d99:	je     0x1003da0
 1003d9b:	push   esi
 1003d9c:	call   eax
 1003d9e:	jmp    0x1003db4
 1003da0:	call   DWORD PTR ds:0x1001144
 1003da6:	test   eax,eax
 1003da8:	jle    0x1003db4
 1003daa:	and    eax,0xffff
 1003daf:	or     eax,0x80070000
 1003db4:	pop    esi
 1003db5:	pop    ebp
 1003db6:	ret    
 1003db7:	int3   
 1003db8:	int3   
 1003db9:	int3   
 1003dba:	int3   
 1003dbb:	int3   
 1003dbc:	mov    edi,edi
 1003dbe:	push   ebp
 1003dbf:	mov    ebp,esp
 1003dc1:	mov    ecx,DWORD PTR [ebp+0xc]
 1003dc4:	push   esi
 1003dc5:	xor    esi,esi
 1003dc7:	test   ecx,ecx
 1003dc9:	je     0x1003dd3
 1003dcb:	cmp    ecx,0x7fffffff
 1003dd1:	jbe    0x1003dd8
 1003dd3:	mov    esi,0x80070057
 1003dd8:	test   esi,esi
 1003dda:	js     0x1003e1f
 1003ddc:	mov    edx,DWORD PTR [ebp+0x8]
 1003ddf:	xor    esi,esi
 1003de1:	test   ecx,ecx
 1003de3:	je     0x1003e12
 1003de5:	push   ebx
 1003de6:	mov    ebx,DWORD PTR [ebp+0x10]
 1003de9:	push   edi
 1003dea:	mov    edi,0x7ffffffe
 1003def:	sub    edi,ecx
 1003df1:	sub    ebx,edx
 1003df3:	lea    eax,[edi+ecx*1]
 1003df6:	test   eax,eax
 1003df8:	je     0x1003e0c
 1003dfa:	movzx  eax,WORD PTR [ebx+edx*1]
 1003dfe:	test   ax,ax
 1003e01:	je     0x1003e0c
 1003e03:	mov    WORD PTR [edx],ax
 1003e06:	add    edx,0x2
 1003e09:	dec    ecx
 1003e0a:	jne    0x1003df3
 1003e0c:	pop    edi
 1003e0d:	pop    ebx
 1003e0e:	test   ecx,ecx
 1003e10:	jne    0x1003e1a
 1003e12:	sub    edx,0x2
 1003e15:	mov    esi,0x8007007a
 1003e1a:	xor    eax,eax
 1003e1c:	mov    WORD PTR [edx],ax
 1003e1f:	mov    eax,esi
 1003e21:	pop    esi
 1003e22:	pop    ebp
 1003e23:	ret    0xc
 1003e26:	int3   
 1003e27:	int3   
 1003e28:	int3   
 1003e29:	int3   
 1003e2a:	int3   
 1003e2b:	push   0x634
 1003e30:	push   0x100a880
 1003e35:	call   0x1005a50
 1003e3a:	mov    esi,DWORD PTR [ebp+0x8]
 1003e3d:	mov    DWORD PTR [ebp-0x644],esi
 1003e43:	mov    ebx,DWORD PTR [ebp+0xc]
 1003e46:	mov    ecx,DWORD PTR ds:0x100c0f0
 1003e4c:	mov    DWORD PTR [ebp-0x640],ecx
 1003e52:	test   ecx,ecx
 1003e54:	je     0x1004098
 1003e5a:	xor    edi,edi
 1003e5c:	mov    DWORD PTR [ebp-0x638],edi
 1003e62:	mov    DWORD PTR [ebp-0x63c],edi
 1003e68:	mov    eax,DWORD PTR [ecx]
 1003e6a:	lea    edx,[ebp-0x638]
 1003e70:	push   edx
 1003e71:	push   ecx
 1003e72:	call   DWORD PTR [eax+0x14]
 1003e75:	test   eax,eax
 1003e77:	js     0x1004098
 1003e7d:	push   0x100c0f8
 1003e82:	call   DWORD PTR ds:0x100113c
 1003e88:	mov    DWORD PTR [ebp-0x4],edi
 1003e8b:	lea    eax,[ebp-0x63c]
 1003e91:	push   eax
 1003e92:	push   0x64
 1003e94:	push   DWORD PTR ds:0x100c6d0
 1003e9a:	call   0x100618e
 1003e9f:	add    esp,0xc
 1003ea2:	cmp    DWORD PTR [ebp-0x63c],edi
 1003ea8:	je     0x1003ebc
 1003eaa:	mov    eax,DWORD PTR [ebp-0x638]
 1003eb0:	mov    ecx,DWORD PTR [eax]
 1003eb2:	push   DWORD PTR [ebp-0x63c]
 1003eb8:	push   eax
 1003eb9:	call   DWORD PTR [ecx+0x48]
 1003ebc:	test   esi,esi
 1003ebe:	je     0x1003ed5
 1003ec0:	mov    eax,DWORD PTR [ebp-0x638]
 1003ec6:	mov    ecx,DWORD PTR [eax]
 1003ec8:	push   edi
 1003ec9:	push   DWORD PTR ds:0x100c028
 1003ecf:	push   eax
 1003ed0:	call   DWORD PTR [ecx+0x10]
 1003ed3:	jmp    0x1003ef1
 1003ed5:	mov    ecx,DWORD PTR [ebp-0x638]
 1003edb:	mov    edx,DWORD PTR [ecx]
 1003edd:	push   0x400
 1003ee2:	mov    eax,ds:0x100c028
 1003ee7:	and    eax,0xfffffbff
 1003eec:	push   eax
 1003eed:	push   ecx
 1003eee:	call   DWORD PTR [edx+0x10]
 1003ef1:	mov    edx,DWORD PTR ds:0x100c02c
 1003ef7:	test   edx,edx
 1003ef9:	je     0x1003f09
 1003efb:	mov    eax,DWORD PTR [ebp-0x638]
 1003f01:	mov    ecx,DWORD PTR [eax]
 1003f03:	push   edi
 1003f04:	push   edx
 1003f05:	push   eax
 1003f06:	call   DWORD PTR [ecx+0x14]
 1003f09:	mov    eax,DWORD PTR [ebp-0x638]
 1003f0f:	test   esi,esi
 1003f11:	je     0x1003f32
 1003f13:	mov    esi,DWORD PTR [eax]
 1003f15:	mov    eax,DWORD PTR [ebp-0x644]
 1003f1b:	push   DWORD PTR [eax+0x4]
 1003f1e:	push   DWORD PTR [eax]
 1003f20:	call   DWORD PTR ds:0x1001148
 1003f26:	push   eax
 1003f27:	push   DWORD PTR [ebp-0x638]
 1003f2d:	call   DWORD PTR [esi+0x20]
 1003f30:	jmp    0x1003f40
 1003f32:	mov    eax,DWORD PTR [eax]
 1003f34:	push   DWORD PTR [ebp+0x4]
 1003f37:	push   DWORD PTR [ebp-0x638]
 1003f3d:	call   DWORD PTR [eax+0x64]
 1003f40:	cmp    WORD PTR ds:0x100c110,0x0
 1003f48:	je     0x1003fe5
 1003f4e:	mov    esi,0x104
 1003f53:	push   esi
 1003f54:	lea    eax,[ebp-0x634]
 1003f5a:	push   eax
 1003f5b:	call   0x10062b2
 1003f60:	push   DWORD PTR ds:0x100c318
 1003f66:	push   0x100c110
 1003f6b:	lea    eax,[ebp-0x634]
 1003f71:	push   eax
 1003f72:	push   0x10014e4
 1003f77:	push   esi
 1003f78:	lea    eax,[ebp-0x224]
 1003f7e:	push   eax
 1003f7f:	mov    esi,DWORD PTR ds:0x1001198
 1003f85:	call   esi
 1003f87:	push   DWORD PTR ds:0x100c318
 1003f8d:	push   0x100c110
 1003f92:	lea    eax,[ebp-0x634]
 1003f98:	push   eax
 1003f99:	push   0x10014fc
 1003f9e:	push   0x104
 1003fa3:	lea    eax,[ebp-0x42c]
 1003fa9:	push   eax
 1003faa:	call   esi
 1003fac:	add    esp,0x38
 1003faf:	mov    eax,DWORD PTR [ebp-0x638]
 1003fb5:	mov    ecx,DWORD PTR [eax]
 1003fb7:	lea    edx,[ebp-0x42c]
 1003fbd:	push   edx
 1003fbe:	push   eax
 1003fbf:	call   DWORD PTR [ecx+0x38]
 1003fc2:	test   ebx,ebx
 1003fc4:	je     0x1003fd8
 1003fc6:	lea    eax,[ebp-0x42c]
 1003fcc:	push   eax
 1003fcd:	push   0x104
 1003fd2:	push   ebx
 1003fd3:	call   0x1003dbc
 1003fd8:	push   0x100c318
 1003fdd:	call   DWORD PTR ds:0x1001164
 1003fe3:	jmp    0x1003ff8
 1003fe5:	push   0x104
 1003fea:	lea    eax,[ebp-0x224]
 1003ff0:	push   eax
 1003ff1:	call   0x1006347
 1003ff6:	pop    ecx
 1003ff7:	pop    ecx
 1003ff8:	push   edi
 1003ff9:	push   0x80
 1003ffe:	push   0x2
 1004000:	push   edi
 1004001:	push   0x1
 1004003:	push   0x40000000
 1004008:	lea    eax,[ebp-0x224]
 100400e:	push   eax
 100400f:	call   DWORD PTR ds:0x100106c
 1004015:	mov    ds:0x100c0f4,eax
 100401a:	test   eax,eax
 100401c:	je     0x1004059
 100401e:	mov    eax,DWORD PTR [ebp-0x638]
 1004024:	mov    ecx,DWORD PTR [eax]
 1004026:	lea    edx,[ebp-0x224]
 100402c:	push   edx
 100402d:	push   eax
 100402e:	call   DWORD PTR [ecx+0x34]
 1004031:	push   DWORD PTR ds:0x100c0f4
 1004037:	call   0x10063b2
 100403c:	pop    ecx
 100403d:	test   ebx,ebx
 100403f:	je     0x1004059
 1004041:	lea    eax,[ebp-0x224]
 1004047:	push   eax
 1004048:	push   0x104
 100404d:	lea    eax,[ebx+0x208]
 1004053:	push   eax
 1004054:	call   0x1003dbc
 1004059:	test   DWORD PTR ds:0x100c028,0x8000
 1004063:	je     0x1004076
 1004065:	push   DWORD PTR [ebp-0x638]
 100406b:	mov    ecx,DWORD PTR [ebp-0x640]
 1004071:	call   0x1007750
 1004076:	mov    eax,DWORD PTR [ebp-0x638]
 100407c:	mov    ecx,DWORD PTR [eax]
 100407e:	push   eax
 100407f:	call   DWORD PTR [ecx+0xc]
 1004082:	test   ebx,ebx
 1004084:	je     0x100408c
 1004086:	mov    DWORD PTR [ebx+0x410],eax
 100408c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1004093:	call   0x10040a5
 1004098:	xor    eax,eax
 100409a:	inc    eax
 100409b:	call   0x1005a98
 10040a0:	ret    0x8
 10040a3:	xor    edi,edi
 10040a5:	mov    eax,DWORD PTR [ebp-0x638]
 10040ab:	mov    ecx,DWORD PTR [eax]
 10040ad:	push   eax
 10040ae:	call   DWORD PTR [ecx+0x8]
 10040b1:	cmp    DWORD PTR [ebp-0x63c],0x0
 10040b8:	je     0x10040cc
 10040ba:	push   DWORD PTR [ebp-0x63c]
 10040c0:	call   DWORD PTR ds:0x1001244
 10040c6:	mov    DWORD PTR [ebp-0x63c],edi
 10040cc:	push   DWORD PTR ds:0x100c0f4
 10040d2:	call   DWORD PTR ds:0x1001054
 10040d8:	mov    DWORD PTR ds:0x100c0f4,edi
 10040de:	push   0x100c0f8
 10040e3:	call   DWORD PTR ds:0x1001138
 10040e9:	ret    
 10040ea:	int3   
 10040eb:	int3   
 10040ec:	int3   
 10040ed:	int3   
 10040ee:	int3   
 10040ef:	mov    edi,edi
 10040f1:	push   ebp
 10040f2:	mov    ebp,esp
 10040f4:	push   0x0
 10040f6:	push   DWORD PTR [ebp+0x8]
 10040f9:	call   0x1003e2b
 10040fe:	pop    ebp
 10040ff:	ret    0x4
 1004102:	int3   
 1004103:	int3   
 1004104:	int3   
 1004105:	int3   
 1004106:	int3   
 1004107:	mov    edi,edi
 1004109:	push   ebp
 100410a:	mov    ebp,esp
 100410c:	sub    esp,0x18
 100410f:	push   esi
 1004110:	push   edi
 1004111:	xor    edi,edi
 1004113:	push   edi
 1004114:	push   edi
 1004115:	push   0x1
 1004117:	push   edi
 1004118:	call   DWORD PTR ds:0x1001158
 100411e:	push   0x100c0f8
 1004123:	call   DWORD PTR ds:0x1001140
 1004129:	push   0x208
 100412e:	push   edi
 100412f:	push   0x100c110
 1004134:	mov    DWORD PTR ds:0x100c0f4,edi
 100413a:	call   0x1005aee
 100413f:	lea    eax,[ebp-0x4]
 1004142:	push   edi
 1004143:	push   eax
 1004144:	mov    DWORD PTR [ebp-0x4],edi
 1004147:	call   0x1003d6d
 100414c:	mov    esi,eax
 100414e:	add    esp,0x14
 1004151:	test   esi,esi
 1004153:	js     0x10041fa
 1004159:	mov    eax,DWORD PTR [ebp-0x4]
 100415c:	mov    ecx,DWORD PTR [eax]
 100415e:	push   eax
 100415f:	call   DWORD PTR [ecx+0x10]
 1004162:	mov    esi,eax
 1004164:	mov    eax,DWORD PTR [ebp-0x4]
 1004167:	test   esi,esi
 1004169:	js     0x10041f4
 100416f:	mov    ds:0x100c0f0,eax
 1004174:	cmp    DWORD PTR [ebp+0x8],edi
 1004177:	je     0x10041a2
 1004179:	lea    eax,[ebp-0xc]
 100417c:	push   eax
 100417d:	lea    eax,[ebp-0x8]
 1004180:	push   eax
 1004181:	mov    DWORD PTR [ebp-0x8],edi
 1004184:	mov    DWORD PTR [ebp-0xc],edi
 1004187:	call   DWORD PTR [ebp+0x8]
 100418a:	mov    esi,eax
 100418c:	test   esi,esi
 100418e:	js     0x10041fa
 1004190:	mov    eax,DWORD PTR [ebp-0x8]
 1004193:	mov    ds:0x100c028,eax
 1004198:	mov    eax,DWORD PTR [ebp-0xc]
 100419b:	mov    ds:0x100c02c,eax
 10041a0:	jmp    0x10041fa
 10041a2:	push   0x20019
 10041a7:	push   0x1001518
 10041ac:	push   0x80000002
 10041b1:	lea    ecx,[ebp-0x18]
 10041b4:	mov    DWORD PTR [ebp-0x18],edi
 10041b7:	mov    DWORD PTR [ebp-0x14],edi
 10041ba:	mov    DWORD PTR [ebp-0x10],edi
 10041bd:	call   0x10034ab
 10041c2:	test   eax,eax
 10041c4:	jne    0x10041ea
 10041c6:	push   0x100c028
 10041cb:	push   0x1001598
 10041d0:	lea    ecx,[ebp-0x18]
 10041d3:	call   0x100346c
 10041d8:	push   0x100c02c
 10041dd:	push   0x10015b8
 10041e2:	lea    ecx,[ebp-0x18]
 10041e5:	call   0x100346c
 10041ea:	lea    ecx,[ebp-0x18]
 10041ed:	call   0x1003507
 10041f2:	jmp    0x10041fa
 10041f4:	mov    ecx,DWORD PTR [eax]
 10041f6:	push   eax
 10041f7:	call   DWORD PTR [ecx+0x8]
 10041fa:	push   0x10040ef
 10041ff:	call   DWORD PTR ds:0x1001150
 1004205:	pop    edi
 1004206:	mov    eax,esi
 1004208:	pop    esi
 1004209:	leave  
 100420a:	ret    
 100420b:	int3   
 100420c:	int3   
 100420d:	int3   
 100420e:	int3   
 100420f:	int3   
 1004210:	mov    edi,edi
 1004212:	push   ebp
 1004213:	mov    ebp,esp
 1004215:	push   DWORD PTR [ebp+0x8]
 1004218:	push   0x0
 100421a:	call   0x1003e2b
 100421f:	pop    ebp
 1004220:	ret    
 1004221:	int3   
 1004222:	int3   
 1004223:	int3   
 1004224:	int3   
 1004225:	int3   
 1004226:	mov    eax,ds:0x100c0f4
 100422b:	ret    
 100422c:	int3   
 100422d:	int3   
 100422e:	int3   
 100422f:	int3   
 1004230:	int3   
 1004231:	xor    eax,eax
 1004233:	ret    
 1004234:	int3   
 1004235:	int3   
 1004236:	int3   
 1004237:	int3   
 1004238:	int3   
 1004239:	mov    edi,edi
 100423b:	push   ebx
 100423c:	push   esi
 100423d:	push   edi
 100423e:	mov    ebx,ecx
 1004240:	call   0x1003214
 1004245:	mov    esi,0x100133c
 100424a:	mov    edi,0x100c368
 100424f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1004250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1004251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1004252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1004253:	pop    edi
 1004254:	pop    esi
 1004255:	mov    eax,ebx
 1004257:	pop    ebx
 1004258:	ret    
 1004259:	int3   
 100425a:	int3   
 100425b:	int3   
 100425c:	int3   
 100425d:	int3   
 100425e:	mov    edi,edi
 1004260:	push   ebp
 1004261:	mov    ebp,esp
 1004263:	push   DWORD PTR [ebp+0xc]
 1004266:	push   DWORD PTR [ebp+0x8]
 1004269:	push   0x100c704
 100426e:	call   0x1002dde
 1004273:	test   eax,eax
 1004275:	js     0x100428a
 1004277:	mov    ecx,DWORD PTR ds:0x100c0e0
 100427d:	test   ecx,ecx
 100427f:	je     0x100428a
 1004281:	push   DWORD PTR ds:0x100c6d0
 1004287:	call   ecx
 1004289:	pop    ecx
 100428a:	pop    ebp
 100428b:	ret    0x8
 100428e:	int3   
 100428f:	int3   
 1004290:	int3   
 1004291:	int3   
 1004292:	int3   
 1004293:	mov    edi,edi
 1004295:	push   ebp
 1004296:	mov    ebp,esp
 1004298:	mov    eax,ds:0x100c0e4
 100429d:	test   eax,eax
 100429f:	je     0x10042a7
 10042a1:	call   eax
 10042a3:	test   eax,eax
 10042a5:	js     0x10042b7
 10042a7:	push   DWORD PTR [ebp+0xc]
 10042aa:	push   DWORD PTR [ebp+0x8]
 10042ad:	push   0x100c704
 10042b2:	call   0x1002e6f
 10042b7:	pop    ebp
 10042b8:	ret    0x8
 10042bb:	int3   
 10042bc:	int3   
 10042bd:	int3   
 10042be:	int3   
 10042bf:	int3   
 10042c0:	mov    edi,edi
 10042c2:	push   ebp
 10042c3:	mov    ebp,esp
 10042c5:	mov    eax,DWORD PTR [ebp+0x8]
 10042c8:	mov    ecx,DWORD PTR [eax]
 10042ca:	push   0x1001600
 10042cf:	push   0x1001650
 10042d4:	push   eax
 10042d5:	call   DWORD PTR [ecx+0xc]
 10042d8:	pop    ebp
 10042d9:	ret    0x4
 10042dc:	int3   
 10042dd:	int3   
 10042de:	int3   
 10042df:	int3   
 10042e0:	int3   
 10042e1:	mov    edi,edi
 10042e3:	push   esi
 10042e4:	mov    esi,ecx
 10042e6:	call   0x1004239
 10042eb:	call   DWORD PTR ds:0x1001148
 10042f1:	and    DWORD PTR [esi+0x30],0x0
 10042f5:	push   0x1
 10042f7:	mov    ecx,0x100c704
 10042fc:	mov    DWORD PTR [esi+0x2c],eax
 10042ff:	mov    DWORD PTR [esi+0x34],0x1388
 1004306:	mov    DWORD PTR [esi+0x38],0x3e8
 100430d:	mov    BYTE PTR [esi+0x3c],0x1
 1004311:	mov    BYTE PTR [esi+0x3e],0x0
 1004315:	call   0x10031e7
 100431a:	mov    eax,esi
 100431c:	pop    esi
 100431d:	ret    
 100431e:	int3   
 100431f:	int3   
 1004320:	int3   
 1004321:	int3   
 1004322:	int3   
 1004323:	mov    edi,edi
 1004325:	push   esi
 1004326:	push   edi
 1004327:	mov    esi,ecx
 1004329:	mov    edi,0x100c704
 100432e:	push   0x0
 1004330:	mov    ecx,edi
 1004332:	call   0x10031e7
 1004337:	mov    ecx,esi
 1004339:	call   0x100325c
 100433e:	mov    ecx,edi
 1004340:	call   0x100319e
 1004345:	pop    edi
 1004346:	mov    ecx,esi
 1004348:	pop    esi
 1004349:	jmp    0x100325c
 100434e:	int3   
 100434f:	int3   
 1004350:	int3   
 1004351:	int3   
 1004352:	int3   
 1004353:	jmp    DWORD PTR ds:0x10012bc
 1004359:	int3   
 100435a:	int3   
 100435b:	int3   
 100435c:	int3   
 100435d:	int3   
 100435e:	mov    edi,edi
 1004360:	push   esi
 1004361:	push   edi
 1004362:	mov    esi,ecx
 1004364:	call   DWORD PTR ds:0x10012c0
 100436a:	mov    edi,eax
 100436c:	test   edi,edi
 100436e:	jne    0x1004393
 1004370:	cmp    BYTE PTR [esi+0x3c],al
 1004373:	je     0x1004384
 1004375:	push   DWORD PTR [esi+0x30]
 1004378:	mov    BYTE PTR [esi+0x3d],0x1
 100437c:	call   DWORD PTR ds:0x1001048
 1004382:	jmp    0x1004393
 1004384:	push   0x0
 1004386:	push   0x0
 1004388:	push   0x12
 100438a:	push   DWORD PTR [esi+0x2c]
 100438d:	call   DWORD PTR ds:0x1001290
 1004393:	mov    eax,edi
 1004395:	pop    edi
 1004396:	pop    esi
 1004397:	ret    
 1004398:	int3   
 1004399:	int3   
 100439a:	int3   
 100439b:	int3   
 100439c:	int3   
 100439d:	mov    edi,edi
 100439f:	push   esi
 10043a0:	mov    esi,ecx
 10043a2:	push   0xffffffff
 10043a4:	push   DWORD PTR [esi+0x30]
 10043a7:	call   DWORD PTR ds:0x100104c
 10043ad:	push   DWORD PTR [esi+0x30]
 10043b0:	call   DWORD PTR ds:0x1001054
 10043b6:	push   0x0
 10043b8:	push   0x0
 10043ba:	push   0x12
 10043bc:	push   DWORD PTR [esi+0x2c]
 10043bf:	call   DWORD PTR ds:0x1001290
 10043c5:	pop    esi
 10043c6:	ret    
 10043c7:	int3   
 10043c8:	int3   
 10043c9:	int3   
 10043ca:	int3   
 10043cb:	int3   
 10043cc:	mov    edi,edi
 10043ce:	push   ebp
 10043cf:	mov    ebp,esp
 10043d1:	push   ecx
 10043d2:	push   esi
 10043d3:	push   edi
 10043d4:	xor    edi,edi
 10043d6:	push   edi
 10043d7:	push   edi
 10043d8:	push   edi
 10043d9:	push   edi
 10043da:	mov    esi,ecx
 10043dc:	call   DWORD PTR ds:0x100105c
 10043e2:	mov    DWORD PTR [esi+0x30],eax
 10043e5:	test   eax,eax
 10043e7:	je     0x100440d
 10043e9:	lea    eax,[ebp-0x4]
 10043ec:	push   eax
 10043ed:	push   edi
 10043ee:	push   esi
 10043ef:	push   0x1004416
 10043f4:	push   edi
 10043f5:	push   edi
 10043f6:	call   DWORD PTR ds:0x100114c
 10043fc:	mov    edi,eax
 10043fe:	test   edi,edi
 1004400:	jne    0x100440b
 1004402:	push   DWORD PTR [esi+0x30]
 1004405:	call   DWORD PTR ds:0x1001054
 100440b:	mov    eax,edi
 100440d:	pop    edi
 100440e:	pop    esi
 100440f:	leave  
 1004410:	ret    
 1004411:	int3   
 1004412:	int3   
 1004413:	int3   
 1004414:	int3   
 1004415:	int3   
 1004416:	mov    edi,edi
 1004418:	push   ebp
 1004419:	mov    ebp,esp
 100441b:	mov    ecx,DWORD PTR [ebp+0x8]
 100441e:	call   0x100439d
 1004423:	xor    eax,eax
 1004425:	pop    ebp
 1004426:	ret    0x4
 1004429:	int3   
 100442a:	int3   
 100442b:	int3   
 100442c:	int3   
 100442d:	int3   
 100442e:	mov    edi,edi
 1004430:	push   ebp
 1004431:	mov    ebp,esp
 1004433:	push   ecx
 1004434:	cmp    BYTE PTR ds:0x100c0e8,0x0
 100443b:	push   esi
 100443c:	mov    esi,ecx
 100443e:	je     0x1004445
 1004440:	or     eax,0xffffffff
 1004443:	jmp    0x10044ac
 1004445:	push   edi
 1004446:	push   0x0
 1004448:	push   0x0
 100444a:	call   DWORD PTR ds:0x10012d0
 1004450:	mov    edi,eax
 1004452:	mov    DWORD PTR [ebp-0x4],edi
 1004455:	test   edi,edi
 1004457:	jns    0x1004472
 1004459:	cmp    edi,0x80010106
 100445f:	jne    0x10044a9
 1004461:	push   0x10016c8
 1004466:	call   DWORD PTR ds:0x1001064
 100446c:	test   eax,eax
 100446e:	jne    0x1004476
 1004470:	jmp    0x10044a9
 1004472:	mov    BYTE PTR [esi+0x3e],0x1
 1004476:	call   DWORD PTR ds:0x1001068
 100447c:	lea    ecx,[ebp-0x4]
 100447f:	push   ecx
 1004480:	push   eax
 1004481:	mov    ecx,esi
 1004483:	call   0x10044b6
 1004488:	cmp    al,0x1
 100448a:	jne    0x100449a
 100448c:	push   DWORD PTR [ebp+0x8]
 100448f:	mov    ecx,esi
 1004491:	call   0x1004694
 1004496:	mov    edi,eax
 1004498:	jmp    0x100449d
 100449a:	mov    edi,DWORD PTR [ebp-0x4]
 100449d:	cmp    BYTE PTR [esi+0x3e],0x0
 10044a1:	je     0x10044a9
 10044a3:	call   DWORD PTR ds:0x10012cc
 10044a9:	mov    eax,edi
 10044ab:	pop    edi
 10044ac:	pop    esi
 10044ad:	leave  
 10044ae:	ret    0x4
 10044b1:	int3   
 10044b2:	int3   
 10044b3:	int3   
 10044b4:	int3   
 10044b5:	int3   
 10044b6:	mov    edi,edi
 10044b8:	push   ebp
 10044b9:	mov    ebp,esp
 10044bb:	sub    esp,0x10
 10044be:	mov    eax,ds:0x100c088
 10044c3:	xor    eax,ebp
 10044c5:	mov    DWORD PTR [ebp-0x4],eax
 10044c8:	mov    eax,DWORD PTR [ebp+0x8]
 10044cb:	push   ebx
 10044cc:	mov    ebx,DWORD PTR [ebp+0xc]
 10044cf:	and    DWORD PTR [ebx],0x0
 10044d2:	push   esi
 10044d3:	push   edi
 10044d4:	mov    esi,0x10016e0
 10044d9:	lea    edi,[ebp-0xc]
 10044dc:	mov    DWORD PTR [ebp-0x10],ecx
 10044df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10044e0:	lea    ecx,[ebp-0xc]
 10044e3:	push   ecx
 10044e4:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
 10044e6:	push   eax
 10044e7:	jmp    0x1004536
 10044e9:	push   0x10016e8
 10044ee:	push   esi
 10044ef:	call   0x10033c2
 10044f4:	pop    ecx
 10044f5:	pop    ecx
 10044f6:	test   eax,eax
 10044f8:	je     0x100458d
 10044fe:	push   0x1001700
 1004503:	push   esi
 1004504:	call   0x10033c2
 1004509:	pop    ecx
 100450a:	pop    ecx
 100450b:	test   eax,eax
 100450d:	je     0x1004564
 100450f:	push   0x1001714
 1004514:	push   esi
 1004515:	call   0x10033c2
 100451a:	pop    ecx
 100451b:	pop    ecx
 100451c:	test   eax,eax
 100451e:	je     0x100457f
 1004520:	push   0x100173c
 1004525:	push   esi
 1004526:	call   0x10033c2
 100452b:	pop    ecx
 100452c:	pop    ecx
 100452d:	test   eax,eax
 100452f:	je     0x1004556
 1004531:	lea    eax,[ebp-0xc]
 1004534:	push   eax
 1004535:	push   esi
 1004536:	call   0x1003376
 100453b:	mov    esi,eax
 100453d:	pop    ecx
 100453e:	pop    ecx
 100453f:	test   esi,esi
 1004541:	jne    0x10044e9
 1004543:	mov    al,0x1
 1004545:	mov    ecx,DWORD PTR [ebp-0x4]
 1004548:	pop    edi
 1004549:	pop    esi
 100454a:	xor    ecx,ebp
 100454c:	pop    ebx
 100454d:	call   0x1005953
 1004552:	leave  
 1004553:	ret    0x8
 1004556:	push   0x1
 1004558:	call   DWORD PTR ds:0x1001024
 100455e:	mov    DWORD PTR [ebx],eax
 1004560:	test   eax,eax
 1004562:	js     0x10045a8
 1004564:	push   0x1
 1004566:	call   0x10046cc
 100456b:	mov    DWORD PTR [ebx],eax
 100456d:	test   eax,eax
 100456f:	js     0x10045a8
 1004571:	mov    ecx,DWORD PTR [ebp-0x10]
 1004574:	push   0x0
 1004576:	push   0x1
 1004578:	call   0x100425e
 100457d:	jmp    0x10045a6
 100457f:	push   0x1
 1004581:	call   DWORD PTR ds:0x1001024
 1004587:	mov    DWORD PTR [ebx],eax
 1004589:	test   eax,eax
 100458b:	js     0x10045a8
 100458d:	mov    ecx,DWORD PTR [ebp-0x10]
 1004590:	push   0x0
 1004592:	push   0x1
 1004594:	call   0x1004293
 1004599:	mov    DWORD PTR [ebx],eax
 100459b:	test   eax,eax
 100459d:	js     0x10045a8
 100459f:	push   0x0
 10045a1:	call   0x10046cc
 10045a6:	mov    DWORD PTR [ebx],eax
 10045a8:	xor    al,al
 10045aa:	jmp    0x1004545
 10045ac:	int3   
 10045ad:	int3   
 10045ae:	int3   
 10045af:	int3   
 10045b0:	int3   
 10045b1:	mov    edi,edi
 10045b3:	push   ebx
 10045b4:	push   edi
 10045b5:	push   0x5
 10045b7:	push   0x4
 10045b9:	mov    ebx,ecx
 10045bb:	call   0x1004707
 10045c0:	mov    edi,eax
 10045c2:	test   edi,edi
 10045c4:	js     0x100462a
 10045c6:	push   esi
 10045c7:	jne    0x1004623
 10045c9:	cmp    BYTE PTR [ebx+0x3c],0x0
 10045cd:	je     0x100460e
 10045cf:	mov    ecx,ebx
 10045d1:	call   0x10043cc
 10045d6:	mov    esi,eax
 10045d8:	test   esi,esi
 10045da:	jne    0x10045e3
 10045dc:	mov    edi,0x80004005
 10045e1:	jmp    0x100461a
 10045e3:	call   DWORD PTR ds:0x10012b8
 10045e9:	mov    edi,eax
 10045eb:	test   edi,edi
 10045ed:	jns    0x1004605
 10045ef:	push   DWORD PTR [ebx+0x30]
 10045f2:	call   DWORD PTR ds:0x1001048
 10045f8:	mov    eax,DWORD PTR [ebx+0x34]
 10045fb:	add    eax,eax
 10045fd:	push   eax
 10045fe:	push   esi
 10045ff:	call   DWORD PTR ds:0x100104c
 1004605:	push   esi
 1004606:	call   DWORD PTR ds:0x1001054
 100460c:	jmp    0x1004616
 100460e:	call   DWORD PTR ds:0x10012b8
 1004614:	mov    edi,eax
 1004616:	test   edi,edi
 1004618:	jns    0x1004627
 100461a:	mov    ecx,ebx
 100461c:	call   0x10047f5
 1004621:	jmp    0x1004627
 1004623:	mov    BYTE PTR [ebx+0x3c],0x0
 1004627:	mov    eax,edi
 1004629:	pop    esi
 100462a:	pop    edi
 100462b:	pop    ebx
 100462c:	ret    0x4
 100462f:	int3   
 1004630:	int3   
 1004631:	int3   
 1004632:	int3   
 1004633:	int3   
 1004634:	mov    edi,edi
 1004636:	push   esi
 1004637:	push   edi
 1004638:	mov    esi,ecx
 100463a:	call   0x10047f5
 100463f:	cmp    BYTE PTR [esi+0x3c],0x0
 1004643:	mov    edi,eax
 1004645:	je     0x1004650
 1004647:	push   DWORD PTR [esi+0x38]
 100464a:	call   DWORD PTR ds:0x1001050
 1004650:	mov    eax,edi
 1004652:	pop    edi
 1004653:	pop    esi
 1004654:	ret    
 1004655:	int3   
 1004656:	int3   
 1004657:	int3   
 1004658:	int3   
 1004659:	int3   
 100465a:	mov    edi,edi
 100465c:	push   ebp
 100465d:	mov    ebp,esp
 100465f:	sub    esp,0x1c
 1004662:	push   edi
 1004663:	xor    edi,edi
 1004665:	jmp    0x100467b
 1004667:	lea    eax,[ebp-0x1c]
 100466a:	push   eax
 100466b:	call   DWORD PTR ds:0x1001298
 1004671:	lea    eax,[ebp-0x1c]
 1004674:	push   eax
 1004675:	call   DWORD PTR ds:0x100129c
 100467b:	push   edi
 100467c:	push   edi
 100467d:	push   edi
 100467e:	lea    eax,[ebp-0x1c]
 1004681:	push   eax
 1004682:	call   DWORD PTR ds:0x10012a4
 1004688:	test   eax,eax
 100468a:	jg     0x1004667
 100468c:	pop    edi
 100468d:	leave  
 100468e:	ret    
 100468f:	int3   
 1004690:	int3   
 1004691:	int3   
 1004692:	int3   
 1004693:	int3   
 1004694:	mov    edi,edi
 1004696:	push   ebp
 1004697:	mov    ebp,esp
 1004699:	push   esi
 100469a:	push   edi
 100469b:	push   DWORD PTR [ebp+0x8]
 100469e:	mov    edi,ecx
 10046a0:	call   0x10045b1
 10046a5:	mov    esi,eax
 10046a7:	test   esi,esi
 10046a9:	jne    0x10046b4
 10046ab:	mov    ecx,edi
 10046ad:	call   0x100465a
 10046b2:	test   esi,esi
 10046b4:	js     0x10046bf
 10046b6:	mov    ecx,edi
 10046b8:	call   0x1004634
 10046bd:	mov    esi,eax
 10046bf:	pop    edi
 10046c0:	mov    eax,esi
 10046c2:	pop    esi
 10046c3:	pop    ebp
 10046c4:	ret    0x4
 10046c7:	int3   
 10046c8:	int3   
 10046c9:	int3   
 10046ca:	int3   
 10046cb:	int3   
 10046cc:	mov    edi,edi
 10046ce:	push   ebp
 10046cf:	mov    ebp,esp
 10046d1:	sub    esp,0x10
 10046d4:	and    DWORD PTR [ebp-0x8],0x0
 10046d8:	and    DWORD PTR [ebp-0x4],0x0
 10046dc:	lea    eax,[ebp-0x10]
 10046df:	push   eax
 10046e0:	push   DWORD PTR [ebp+0x8]
 10046e3:	mov    DWORD PTR [ebp-0x10],0x1001650
 10046ea:	push   0x65
 10046ec:	push   DWORD PTR ds:0x100c364
 10046f2:	mov    DWORD PTR [ebp-0xc],0x1001600
 10046f9:	call   0x10032f9
 10046fe:	leave  
 10046ff:	ret    0x4
 1004702:	int3   
 1004703:	int3   
 1004704:	int3   
 1004705:	int3   
 1004706:	int3   
 1004707:	mov    edi,edi
 1004709:	push   ebp
 100470a:	mov    ebp,esp
 100470c:	sub    esp,0x20
 100470f:	mov    eax,ds:0x100c088
 1004714:	xor    eax,ebp
 1004716:	mov    DWORD PTR [ebp-0x4],eax
 1004719:	cmp    BYTE PTR [ecx+0x40],0x0
 100471d:	jne    0x1004739
 100471f:	mov    eax,DWORD PTR [ebp+0xc]
 1004722:	and    eax,0xfffffffe
 1004725:	push   eax
 1004726:	push   DWORD PTR [ebp+0x8]
 1004729:	push   0x100c704
 100472e:	call   DWORD PTR ds:0x1001034
 1004734:	jmp    0x10047e2
 1004739:	and    DWORD PTR [ebp-0x1c],0x0
 100473d:	lea    eax,[ebp-0x1c]
 1004740:	push   eax
 1004741:	call   0x1004912
 1004746:	test   eax,eax
 1004748:	js     0x10047e2
 100474e:	mov    eax,DWORD PTR [ebp-0x1c]
 1004751:	and    DWORD PTR [ebp-0x18],0x0
 1004755:	mov    ecx,DWORD PTR [eax]
 1004757:	push   esi
 1004758:	lea    edx,[ebp-0x18]
 100475b:	push   edx
 100475c:	push   0x10014b0
 1004761:	push   eax
 1004762:	call   DWORD PTR [ecx]
 1004764:	mov    esi,eax
 1004766:	test   esi,esi
 1004768:	js     0x10047c1
 100476a:	call   DWORD PTR ds:0x1001068
 1004770:	push   0x10016a0
 1004775:	push   eax
 1004776:	call   DWORD PTR ds:0x100119c
 100477c:	pop    ecx
 100477d:	pop    ecx
 100477e:	test   eax,eax
 1004780:	jne    0x1004796
 1004782:	mov    eax,DWORD PTR [ebp-0x18]
 1004785:	test   eax,eax
 1004787:	je     0x100478f
 1004789:	mov    ecx,DWORD PTR [eax]
 100478b:	push   eax
 100478c:	call   DWORD PTR [ecx+0x8]
 100478f:	mov    eax,0x80004005
 1004794:	jmp    0x10047e1
 1004796:	lea    ecx,[ebp-0x14]
 1004799:	push   ecx
 100479a:	add    eax,0xe
 100479d:	push   eax
 100479e:	call   DWORD PTR ds:0x10012c8
 10047a4:	and    DWORD PTR [ebp-0x20],0x0
 10047a8:	lea    eax,[ebp-0x20]
 10047ab:	push   eax
 10047ac:	push   0x1
 10047ae:	lea    eax,[ebp-0x14]
 10047b1:	push   eax
 10047b2:	push   DWORD PTR [ebp-0x18]
 10047b5:	call   DWORD PTR ds:0x1001258
 10047bb:	mov    esi,eax
 10047bd:	test   esi,esi
 10047bf:	jns    0x10047d2
 10047c1:	mov    ecx,DWORD PTR [ebp-0x18]
 10047c4:	test   ecx,ecx
 10047c6:	je     0x10047ce
 10047c8:	mov    edx,DWORD PTR [ecx]
 10047ca:	push   ecx
 10047cb:	call   DWORD PTR [edx+0x8]
 10047ce:	mov    eax,esi
 10047d0:	jmp    0x10047e1
 10047d2:	mov    eax,DWORD PTR [ebp-0x18]
 10047d5:	test   eax,eax
 10047d7:	je     0x10047df
 10047d9:	mov    ecx,DWORD PTR [eax]
 10047db:	push   eax
 10047dc:	call   DWORD PTR [ecx+0x8]
 10047df:	xor    eax,eax
 10047e1:	pop    esi
 10047e2:	mov    ecx,DWORD PTR [ebp-0x4]
 10047e5:	xor    ecx,ebp
 10047e7:	call   0x1005953
 10047ec:	leave  
 10047ed:	ret    0x8
 10047f0:	int3   
 10047f1:	int3   
 10047f2:	int3   
 10047f3:	int3   
 10047f4:	int3   
 10047f5:	cmp    BYTE PTR [ecx+0x40],0x0
 10047f9:	jne    0x1004807
 10047fb:	push   0x100c704
 1004800:	call   DWORD PTR ds:0x1001030
 1004806:	ret    
 1004807:	xor    eax,eax
 1004809:	ret    
 100480a:	int3   
 100480b:	int3   
 100480c:	int3   
 100480d:	int3   
 100480e:	int3   
 100480f:	mov    edi,edi
 1004811:	push   ebp
 1004812:	mov    ebp,esp
 1004814:	push   esi
 1004815:	mov    esi,ecx
 1004817:	call   0x1004323
 100481c:	test   BYTE PTR [ebp+0x8],0x1
 1004820:	je     0x1004829
 1004822:	push   esi
 1004823:	call   0x100560c
 1004828:	pop    ecx
 1004829:	mov    eax,esi
 100482b:	pop    esi
 100482c:	pop    ebp
 100482d:	ret    0x4
 1004830:	int3   
 1004831:	int3   
 1004832:	int3   
 1004833:	int3   
 1004834:	int3   
 1004835:	mov    edi,edi
 1004837:	push   esi
 1004838:	mov    esi,ecx
 100483a:	and    DWORD PTR [esi+0x8],0x0
 100483e:	push   edi
 100483f:	push   0x6
 1004841:	xor    eax,eax
 1004843:	pop    ecx
 1004844:	lea    edi,[esi+0xc]
 1004847:	rep stos DWORD PTR es:[edi],eax
 1004849:	mov    BYTE PTR [esi+0x24],al
 100484c:	mov    DWORD PTR [esi],0x100165c
 1004852:	mov    DWORD PTR [esi+0x4],0x1001670
 1004859:	mov    ecx,DWORD PTR ds:0x100c364
 100485f:	mov    eax,DWORD PTR [ecx]
 1004861:	call   DWORD PTR [eax+0x4]
 1004864:	pop    edi
 1004865:	mov    eax,esi
 1004867:	pop    esi
 1004868:	ret    0x4
 100486b:	int3   
 100486c:	int3   
 100486d:	int3   
 100486e:	int3   
 100486f:	int3   
 1004870:	mov    edi,edi
 1004872:	push   esi
 1004873:	lea    esi,[ecx+0x8]
 1004876:	mov    DWORD PTR [ecx],0x100165c
 100487c:	mov    DWORD PTR [ecx+0x4],0x1001670
 1004883:	mov    DWORD PTR [esi],0xc0000001
 1004889:	mov    ecx,DWORD PTR ds:0x100c364
 100488f:	mov    eax,DWORD PTR [ecx]
 1004891:	call   DWORD PTR [eax+0x8]
 1004894:	mov    ecx,esi
 1004896:	pop    esi
 1004897:	jmp    0x100361f
 100489c:	int3   
 100489d:	int3   
 100489e:	int3   
 100489f:	int3   
 10048a0:	int3   
 10048a1:	mov    edi,edi
 10048a3:	push   ebp
 10048a4:	mov    ebp,esp
 10048a6:	mov    eax,DWORD PTR [ebp+0x8]
 10048a9:	add    eax,0x8
 10048ac:	push   eax
 10048ad:	call   DWORD PTR ds:0x1001164
 10048b3:	pop    ebp
 10048b4:	ret    0x4
 10048b7:	int3   
 10048b8:	int3   
 10048b9:	int3   
 10048ba:	int3   
 10048bb:	int3   
 10048bc:	mov    edi,edi
 10048be:	push   ebp
 10048bf:	mov    ebp,esp
 10048c1:	push   esi
 10048c2:	mov    esi,DWORD PTR [ebp+0x8]
 10048c5:	push   edi
 10048c6:	lea    eax,[esi+0x8]
 10048c9:	push   eax
 10048ca:	call   DWORD PTR ds:0x1001160
 10048d0:	mov    edi,eax
 10048d2:	test   edi,edi
 10048d4:	jne    0x10048e3
 10048d6:	test   esi,esi
 10048d8:	je     0x10048e3
 10048da:	mov    edx,DWORD PTR [esi]
 10048dc:	push   0x1
 10048de:	mov    ecx,esi
 10048e0:	call   DWORD PTR [edx+0x10]
 10048e3:	mov    eax,edi
 10048e5:	pop    edi
 10048e6:	pop    esi
 10048e7:	pop    ebp
 10048e8:	ret    0x4
 10048eb:	int3   
 10048ec:	int3   
 10048ed:	int3   
 10048ee:	int3   
 10048ef:	int3   
 10048f0:	mov    edi,edi
 10048f2:	push   ebp
 10048f3:	mov    ebp,esp
 10048f5:	push   DWORD PTR [ebp+0x10]
 10048f8:	push   DWORD PTR [ebp+0xc]
 10048fb:	push   0x1001480
 1004900:	push   DWORD PTR [ebp+0x8]
 1004903:	call   DWORD PTR ds:0x1001038
 1004909:	pop    ebp
 100490a:	ret    0xc
 100490d:	int3   
 100490e:	int3   
 100490f:	int3   
 1004910:	int3   
 1004911:	int3   
 1004912:	push   0xc
 1004914:	mov    eax,0x100a5df
 1004919:	call   0x10059ab
 100491e:	mov    ebx,DWORD PTR [ebp+0x8]
 1004921:	test   ebx,ebx
 1004923:	jne    0x100492f
 1004925:	mov    eax,0x80004003
 100492a:	jmp    0x10049b0
 100492f:	and    DWORD PTR [ebx],0x0
 1004932:	and    DWORD PTR [ebp-0x18],0x0
 1004936:	and    DWORD PTR [ebp-0x4],0x0
 100493a:	mov    esi,0x8007000e
 100493f:	push   0x28
 1004941:	mov    DWORD PTR [ebp-0x14],esi
 1004944:	call   0x1005758
 1004949:	pop    ecx
 100494a:	test   eax,eax
 100494c:	je     0x100495b
 100494e:	push   0x0
 1004950:	mov    ecx,eax
 1004952:	call   0x1004835
 1004957:	mov    edi,eax
 1004959:	jmp    0x100495d
 100495b:	xor    edi,edi
 100495d:	or     DWORD PTR [ebp-0x4],0xffffffff
 1004961:	jmp    0x1004976
 1004963:	or     DWORD PTR [ebp-0x4],0xffffffff
 1004967:	mov    eax,0x100496d
 100496c:	ret    
 100496d:	mov    ebx,DWORD PTR [ebp+0x8]
 1004970:	mov    esi,DWORD PTR [ebp-0x14]
 1004973:	mov    edi,DWORD PTR [ebp-0x18]
 1004976:	test   edi,edi
 1004978:	je     0x10049ac
 100497a:	lea    esi,[edi+0x8]
 100497d:	push   esi
 100497e:	call   DWORD PTR ds:0x1001164
 1004984:	mov    ecx,esi
 1004986:	call   0x1003639
 100498b:	mov    esi,eax
 100498d:	test   esi,esi
 100498f:	js     0x1004993
 1004991:	xor    esi,esi
 1004993:	lea    eax,[edi+0x8]
 1004996:	push   eax
 1004997:	call   DWORD PTR ds:0x1001160
 100499d:	test   esi,esi
 100499f:	je     0x10049ac
 10049a1:	mov    eax,DWORD PTR [edi]
 10049a3:	push   0x1
 10049a5:	mov    ecx,edi
 10049a7:	call   DWORD PTR [eax+0x10]
 10049aa:	xor    edi,edi
 10049ac:	mov    DWORD PTR [ebx],edi
 10049ae:	mov    eax,esi
 10049b0:	call   0x1005a21
 10049b5:	ret    0x4
 10049b8:	int3   
 10049b9:	int3   
 10049ba:	int3   
 10049bb:	int3   
 10049bc:	int3   
 10049bd:	mov    edi,edi
 10049bf:	push   ebp
 10049c0:	mov    ebp,esp
 10049c2:	push   esi
 10049c3:	mov    esi,ecx
 10049c5:	call   0x1004870
 10049ca:	test   BYTE PTR [ebp+0x8],0x1
 10049ce:	je     0x10049d7
 10049d0:	push   esi
 10049d1:	call   0x100560c
 10049d6:	pop    ecx
 10049d7:	mov    eax,esi
 10049d9:	pop    esi
 10049da:	pop    ebp
 10049db:	ret    0x4
 10049de:	int3   
 10049df:	int3   
 10049e0:	int3   
 10049e1:	int3   
 10049e2:	int3   
 10049e3:	mov    eax,ecx
 10049e5:	lea    ecx,[eax+0x4]
 10049e8:	mov    DWORD PTR [ecx],0xc0000001
 10049ee:	mov    DWORD PTR [eax],0x1001440
 10049f4:	jmp    0x100361f
 10049f9:	int3   
 10049fa:	int3   
 10049fb:	int3   
 10049fc:	int3   
 10049fd:	int3   
 10049fe:	mov    edi,edi
 1004a00:	push   ebp
 1004a01:	mov    ebp,esp
 1004a03:	mov    eax,DWORD PTR [ebp+0x8]
 1004a06:	add    eax,0x4
 1004a09:	push   eax
 1004a0a:	call   DWORD PTR ds:0x1001164
 1004a10:	pop    ebp
 1004a11:	ret    0x4
 1004a14:	int3   
 1004a15:	int3   
 1004a16:	int3   
 1004a17:	int3   
 1004a18:	int3   
 1004a19:	mov    edi,edi
 1004a1b:	push   ebp
 1004a1c:	mov    ebp,esp
 1004a1e:	push   esi
 1004a1f:	mov    esi,DWORD PTR [ebp+0x8]
 1004a22:	push   edi
 1004a23:	lea    eax,[esi+0x4]
 1004a26:	push   eax
 1004a27:	call   DWORD PTR ds:0x1001160
 1004a2d:	mov    edi,eax
 1004a2f:	test   edi,edi
 1004a31:	jne    0x1004a40
 1004a33:	test   esi,esi
 1004a35:	je     0x1004a40
 1004a37:	mov    edx,DWORD PTR [esi]
 1004a39:	push   0x1
 1004a3b:	mov    ecx,esi
 1004a3d:	call   DWORD PTR [edx+0x14]
 1004a40:	mov    eax,edi
 1004a42:	pop    edi
 1004a43:	pop    esi
 1004a44:	pop    ebp
 1004a45:	ret    0x4
 1004a48:	int3   
 1004a49:	int3   
 1004a4a:	int3   
 1004a4b:	int3   
 1004a4c:	int3   
 1004a4d:	mov    edi,edi
 1004a4f:	push   ebp
 1004a50:	mov    ebp,esp
 1004a52:	push   DWORD PTR [ebp+0x10]
 1004a55:	push   DWORD PTR [ebp+0xc]
 1004a58:	push   0x1001458
 1004a5d:	push   DWORD PTR [ebp+0x8]
 1004a60:	call   DWORD PTR ds:0x1001038
 1004a66:	pop    ebp
 1004a67:	ret    0xc
 1004a6a:	int3   
 1004a6b:	int3   
 1004a6c:	int3   
 1004a6d:	int3   
 1004a6e:	int3   
 1004a6f:	mov    edi,edi
 1004a71:	push   ebp
 1004a72:	mov    ebp,esp
 1004a74:	push   esi
 1004a75:	mov    esi,ecx
 1004a77:	call   0x10049e3
 1004a7c:	test   BYTE PTR [ebp+0x8],0x1
 1004a80:	je     0x1004a89
 1004a82:	push   esi
 1004a83:	call   0x100560c
 1004a88:	pop    ecx
 1004a89:	mov    eax,esi
 1004a8b:	pop    esi
 1004a8c:	pop    ebp
 1004a8d:	ret    0x4
 1004a90:	int3   
 1004a91:	int3   
 1004a92:	int3   
 1004a93:	int3   
 1004a94:	int3   
 1004a95:	push   0xc
 1004a97:	mov    eax,0x100a5ff
 1004a9c:	call   0x10059ab
 1004aa1:	mov    ebx,DWORD PTR [ebp+0x10]
 1004aa4:	test   ebx,ebx
 1004aa6:	jne    0x1004ab2
 1004aa8:	mov    eax,0x80004003
 1004aad:	jmp    0x1004b3f
 1004ab2:	and    DWORD PTR [ebx],0x0
 1004ab5:	and    DWORD PTR [ebp-0x18],0x0
 1004ab9:	and    DWORD PTR [ebp-0x4],0x0
 1004abd:	mov    esi,0x8007000e
 1004ac2:	push   0x28
 1004ac4:	mov    DWORD PTR [ebp-0x14],esi
 1004ac7:	call   0x1005758
 1004acc:	pop    ecx
 1004acd:	test   eax,eax
 1004acf:	je     0x1004adf
 1004ad1:	push   DWORD PTR [ebp+0x8]
 1004ad4:	mov    ecx,eax
 1004ad6:	call   0x1004835
 1004adb:	mov    edi,eax
 1004add:	jmp    0x1004ae1
 1004adf:	xor    edi,edi
 1004ae1:	or     DWORD PTR [ebp-0x4],0xffffffff
 1004ae5:	jmp    0x1004afa
 1004ae7:	or     DWORD PTR [ebp-0x4],0xffffffff
 1004aeb:	mov    eax,0x1004af1
 1004af0:	ret    
 1004af1:	mov    ebx,DWORD PTR [ebp+0x10]
 1004af4:	mov    esi,DWORD PTR [ebp-0x14]
 1004af7:	mov    edi,DWORD PTR [ebp-0x18]
 1004afa:	test   edi,edi
 1004afc:	je     0x1004b3d
 1004afe:	lea    esi,[edi+0x8]
 1004b01:	push   esi
 1004b02:	call   DWORD PTR ds:0x1001164
 1004b08:	mov    ecx,esi
 1004b0a:	call   0x1003639
 1004b0f:	mov    esi,eax
 1004b11:	test   esi,esi
 1004b13:	js     0x1004b17
 1004b15:	xor    esi,esi
 1004b17:	lea    eax,[edi+0x8]
 1004b1a:	push   eax
 1004b1b:	call   DWORD PTR ds:0x1001160
 1004b21:	test   esi,esi
 1004b23:	jne    0x1004b34
 1004b25:	mov    eax,DWORD PTR [edi]
 1004b27:	push   ebx
 1004b28:	push   DWORD PTR [ebp+0xc]
 1004b2b:	push   edi
 1004b2c:	call   DWORD PTR [eax]
 1004b2e:	mov    esi,eax
 1004b30:	test   esi,esi
 1004b32:	je     0x1004b3d
 1004b34:	mov    eax,DWORD PTR [edi]
 1004b36:	push   0x1
 1004b38:	mov    ecx,edi
 1004b3a:	call   DWORD PTR [eax+0x10]
 1004b3d:	mov    eax,esi
 1004b3f:	call   0x1005a21
 1004b44:	ret    0xc
 1004b47:	int3   
 1004b48:	int3   
 1004b49:	int3   
 1004b4a:	int3   
 1004b4b:	int3   
 1004b4c:	sub    DWORD PTR [esp+0x4],0x4
 1004b51:	jmp    0x10048f0
 1004b56:	int3   
 1004b57:	int3   
 1004b58:	int3   
 1004b59:	int3   
 1004b5a:	int3   
 1004b5b:	sub    DWORD PTR [esp+0x4],0x4
 1004b60:	jmp    0x10048a1
 1004b65:	int3   
 1004b66:	int3   
 1004b67:	int3   
 1004b68:	int3   
 1004b69:	int3   
 1004b6a:	sub    DWORD PTR [esp+0x4],0x4
 1004b6f:	jmp    0x10048bc
 1004b74:	int3   
 1004b75:	int3   
 1004b76:	int3   
 1004b77:	int3   
 1004b78:	int3   
 1004b79:	mov    edi,edi
 1004b7b:	push   ebp
 1004b7c:	mov    ebp,esp
 1004b7e:	push   esi
 1004b7f:	xor    esi,esi
 1004b81:	push   DWORD PTR [ebp+0xc]
 1004b84:	push   DWORD PTR [esi+0x100c06c]
 1004b8a:	call   0x1002bdb
 1004b8f:	pop    ecx
 1004b90:	pop    ecx
 1004b91:	test   eax,eax
 1004b93:	jne    0x1004ba0
 1004b95:	add    esi,0x4
 1004b98:	cmp    esi,0x4
 1004b9b:	jb     0x1004b81
 1004b9d:	inc    eax
 1004b9e:	jmp    0x1004ba2
 1004ba0:	xor    eax,eax
 1004ba2:	pop    esi
 1004ba3:	pop    ebp
 1004ba4:	ret    0x8
 1004ba7:	int3   
 1004ba8:	int3   
 1004ba9:	int3   
 1004baa:	int3   
 1004bab:	int3   
 1004bac:	mov    edi,edi
 1004bae:	push   ebp
 1004baf:	mov    ebp,esp
 1004bb1:	push   esi
 1004bb2:	mov    esi,DWORD PTR [ebp+0xc]
 1004bb5:	test   esi,esi
 1004bb7:	jne    0x1004bc0
 1004bb9:	mov    eax,0x80070057
 1004bbe:	jmp    0x1004bca
 1004bc0:	call   DWORD PTR ds:0x1001074
 1004bc6:	mov    DWORD PTR [esi],eax
 1004bc8:	xor    eax,eax
 1004bca:	pop    esi
 1004bcb:	pop    ebp
 1004bcc:	ret    0x8
 1004bcf:	int3   
 1004bd0:	int3   
 1004bd1:	int3   
 1004bd2:	int3   
 1004bd3:	int3   
 1004bd4:	mov    edi,edi
 1004bd6:	push   ebp
 1004bd7:	mov    ebp,esp
 1004bd9:	push   ecx
 1004bda:	and    DWORD PTR [ebp-0x4],0x0
 1004bde:	push   esi
 1004bdf:	lea    eax,[ebp-0x4]
 1004be2:	push   eax
 1004be3:	push   0x10017a0
 1004be8:	push   0x3
 1004bea:	push   0x0
 1004bec:	push   0x1001780
 1004bf1:	call   DWORD PTR ds:0x10012c4
 1004bf7:	mov    esi,eax
 1004bf9:	test   esi,esi
 1004bfb:	jns    0x1004c0e
 1004bfd:	mov    ecx,DWORD PTR [ebp-0x4]
 1004c00:	test   ecx,ecx
 1004c02:	je     0x1004c0a
 1004c04:	mov    edx,DWORD PTR [ecx]
 1004c06:	push   ecx
 1004c07:	call   DWORD PTR [edx+0x8]
 1004c0a:	mov    eax,esi
 1004c0c:	jmp    0x1004c18
 1004c0e:	mov    eax,DWORD PTR [ebp-0x4]
 1004c11:	mov    ecx,DWORD PTR [ebp+0xc]
 1004c14:	mov    DWORD PTR [ecx],eax
 1004c16:	xor    eax,eax
 1004c18:	pop    esi
 1004c19:	leave  
 1004c1a:	ret    0x8
 1004c1d:	int3   
 1004c1e:	int3   
 1004c1f:	int3   
 1004c20:	int3   
 1004c21:	int3   
 1004c22:	mov    edi,edi
 1004c24:	push   ebp
 1004c25:	mov    ebp,esp
 1004c27:	cmp    DWORD PTR [ebp+0xc],0x0
 1004c2b:	je     0x1004c35
 1004c2d:	push   0x0
 1004c2f:	call   DWORD PTR ds:0x1001078
 1004c35:	push   0x1
 1004c37:	call   DWORD PTR ds:0x1001070
 1004c3d:	push   eax
 1004c3e:	call   DWORD PTR ds:0x100107c
 1004c44:	xor    eax,eax
 1004c46:	pop    ebp
 1004c47:	ret    0x8
 1004c4a:	int3   
 1004c4b:	int3   
 1004c4c:	int3   
 1004c4d:	int3   
 1004c4e:	int3   
 1004c4f:	mov    edi,edi
 1004c51:	push   ebp
 1004c52:	mov    ebp,esp
 1004c54:	sub    esp,0x40
 1004c57:	cmp    DWORD PTR [ebp+0xc],0x0
 1004c5b:	push   ebx
 1004c5c:	push   esi
 1004c5d:	push   edi
 1004c5e:	je     0x1004f84
 1004c64:	cmp    DWORD PTR [ebp+0x10],0x0
 1004c68:	je     0x1004f84
 1004c6e:	cmp    DWORD PTR [ebp+0x14],0x0
 1004c72:	je     0x1004f84
 1004c78:	cmp    DWORD PTR [ebp+0x18],0x0
 1004c7c:	je     0x1004f84
 1004c82:	cmp    DWORD PTR [ebp+0x1c],0x0
 1004c86:	je     0x1004f84
 1004c8c:	cmp    DWORD PTR [ebp+0x20],0x0
 1004c90:	je     0x1004f84
 1004c96:	cmp    DWORD PTR [ebp+0x24],0x0
 1004c9a:	je     0x1004f84
 1004ca0:	cmp    DWORD PTR [ebp+0x28],0x0
 1004ca4:	je     0x1004f84
 1004caa:	push   DWORD PTR [ebp+0xc]
 1004cad:	lea    ecx,[ebp+0xc]
 1004cb0:	call   0x1005088
 1004cb5:	mov    eax,DWORD PTR [ebp+0xc]
 1004cb8:	mov    ecx,DWORD PTR [eax]
 1004cba:	lea    edx,[ebp-0x1c]
 1004cbd:	push   edx
 1004cbe:	push   eax
 1004cbf:	call   DWORD PTR [ecx+0x24]
 1004cc2:	mov    esi,eax
 1004cc4:	test   esi,esi
 1004cc6:	jns    0x1004cdc
 1004cc8:	mov    ecx,DWORD PTR [ebp+0xc]
 1004ccb:	test   ecx,ecx
 1004ccd:	je     0x1004cd5
 1004ccf:	mov    edx,DWORD PTR [ecx]
 1004cd1:	push   ecx
 1004cd2:	call   DWORD PTR [edx+0x8]
 1004cd5:	mov    eax,esi
 1004cd7:	jmp    0x1004f89
 1004cdc:	mov    eax,DWORD PTR [ebp+0xc]
 1004cdf:	mov    ecx,DWORD PTR [eax]
 1004ce1:	lea    edx,[ebp-0x20]
 1004ce4:	push   edx
 1004ce5:	push   eax
 1004ce6:	call   DWORD PTR [ecx+0x28]
 1004ce9:	mov    ecx,DWORD PTR [ebp+0xc]
 1004cec:	mov    esi,eax
 1004cee:	test   esi,esi
 1004cf0:	js     0x1004ccb
 1004cf2:	mov    DWORD PTR [ebp-0x40],ecx
 1004cf5:	test   ecx,ecx
 1004cf7:	je     0x1004d02
 1004cf9:	mov    eax,DWORD PTR [ecx]
 1004cfb:	push   ecx
 1004cfc:	call   DWORD PTR [eax+0x4]
 1004cff:	mov    ecx,DWORD PTR [ebp-0x40]
 1004d02:	xor    ebx,ebx
 1004d04:	mov    BYTE PTR [ebp-0x3c],bl
 1004d07:	mov    eax,DWORD PTR [ecx]
 1004d09:	push   ecx
 1004d0a:	call   DWORD PTR [eax+0x1c]
 1004d0d:	mov    esi,eax
 1004d0f:	test   esi,esi
 1004d11:	js     0x1004de5
 1004d17:	mov    eax,DWORD PTR [ebp-0x20]
 1004d1a:	shl    eax,0x5
 1004d1d:	mov    DWORD PTR [ebp-0x14],eax
 1004d20:	push   0x1
 1004d22:	lea    eax,[ebp-0x14]
 1004d25:	push   eax
 1004d26:	lea    ecx,[ebp-0x4]
 1004d29:	mov    BYTE PTR [ebp-0x3c],0x1
 1004d2d:	mov    DWORD PTR [ebp-0x4],ebx
 1004d30:	mov    DWORD PTR [ebp-0x10],ebx
 1004d33:	call   0x1005163
 1004d38:	mov    esi,eax
 1004d3a:	test   esi,esi
 1004d3c:	jns    0x1004d60
 1004d3e:	lea    ecx,[ebp-0x4]
 1004d41:	call   0x10051b6
 1004d46:	lea    ecx,[ebp-0x40]
 1004d49:	call   0x1005053
 1004d4e:	mov    ecx,DWORD PTR [ebp+0xc]
 1004d51:	test   ecx,ecx
 1004d53:	je     0x1004cd5
 1004d55:	mov    eax,DWORD PTR [ecx]
 1004d57:	push   ecx
 1004d58:	call   DWORD PTR [eax+0x8]
 1004d5b:	jmp    0x1004cd5
 1004d60:	cmp    DWORD PTR [ebp-0x20],ebx
 1004d63:	jbe    0x1004d8b
 1004d65:	push   ebx
 1004d66:	lea    ecx,[ebp-0x4]
 1004d69:	call   0x1005113
 1004d6e:	mov    edi,eax
 1004d70:	mov    esi,ebx
 1004d72:	cmp    DWORD PTR [ebp-0x20],ebx
 1004d75:	jbe    0x1004d8b
 1004d77:	mov    ecx,DWORD PTR [ebp+0xc]
 1004d7a:	mov    eax,DWORD PTR [ecx]
 1004d7c:	push   edi
 1004d7d:	push   esi
 1004d7e:	push   ecx
 1004d7f:	call   DWORD PTR [eax+0x2c]
 1004d82:	inc    esi
 1004d83:	add    edi,0x20
 1004d86:	cmp    esi,DWORD PTR [ebp-0x20]
 1004d89:	jb     0x1004d77
 1004d8b:	mov    ecx,DWORD PTR [ebp-0x1c]
 1004d8e:	mov    eax,ebx
 1004d90:	mov    DWORD PTR [ebp-0x34],ebx
 1004d93:	mov    DWORD PTR [ebp-0x24],eax
 1004d96:	test   ecx,ecx
 1004d98:	je     0x1004db5
 1004d9a:	mov    eax,DWORD PTR [ebp+0xc]
 1004d9d:	mov    ecx,DWORD PTR [eax]
 1004d9f:	lea    edx,[ebp-0x34]
 1004da2:	push   edx
 1004da3:	lea    edx,[ebp-0x24]
 1004da6:	push   edx
 1004da7:	push   ebx
 1004da8:	push   eax
 1004da9:	call   DWORD PTR [ecx+0x8c]
 1004daf:	mov    ecx,DWORD PTR [ebp-0x1c]
 1004db2:	mov    eax,DWORD PTR [ebp-0x24]
 1004db5:	imul   eax,ecx
 1004db8:	mov    DWORD PTR [ebp-0xc],eax
 1004dbb:	push   0x1
 1004dbd:	lea    eax,[ebp-0xc]
 1004dc0:	push   eax
 1004dc1:	lea    ecx,[ebp-0x10]
 1004dc4:	mov    DWORD PTR [ebp-0x10],ebx
 1004dc7:	mov    DWORD PTR [ebp-0x8],ebx
 1004dca:	call   0x1005163
 1004dcf:	mov    esi,eax
 1004dd1:	test   esi,esi
 1004dd3:	jns    0x1004e03
 1004dd5:	lea    ecx,[ebp-0x10]
 1004dd8:	call   0x10051b6
 1004ddd:	lea    ecx,[ebp-0x4]
 1004de0:	call   0x10051b6
 1004de5:	lea    ecx,[ebp-0x40]
 1004de8:	call   0x1005053
 1004ded:	mov    eax,DWORD PTR [ebp+0xc]
 1004df0:	test   eax,eax
 1004df2:	je     0x1004cd5
 1004df8:	mov    ecx,DWORD PTR [eax]
 1004dfa:	push   eax
 1004dfb:	call   DWORD PTR [ecx+0x8]
 1004dfe:	jmp    0x1004cd5
 1004e03:	mov    ebx,DWORD PTR [ebp-0x10]
 1004e06:	mov    edi,DWORD PTR ds:0x1001274
 1004e0c:	lea    eax,[ebp-0x28]
 1004e0f:	push   eax
 1004e10:	push   ebx
 1004e11:	call   edi
 1004e13:	mov    esi,eax
 1004e15:	test   esi,esi
 1004e17:	js     0x1004dd5
 1004e19:	xor    esi,esi
 1004e1b:	cmp    DWORD PTR [ebp-0x1c],esi
 1004e1e:	jbe    0x1004e52
 1004e20:	mov    eax,DWORD PTR [ebp+0xc]
 1004e23:	mov    ecx,DWORD PTR [eax]
 1004e25:	lea    edx,[ebp-0x10]
 1004e28:	push   edx
 1004e29:	lea    edx,[ebp-0x8]
 1004e2c:	push   edx
 1004e2d:	push   esi
 1004e2e:	push   eax
 1004e2f:	call   DWORD PTR [ecx+0x8c]
 1004e35:	push   DWORD PTR [ebp-0x24]
 1004e38:	push   DWORD PTR [ebp-0x10]
 1004e3b:	push   DWORD PTR [ebp-0x28]
 1004e3e:	call   0x1005b4a
 1004e43:	mov    eax,DWORD PTR [ebp-0x24]
 1004e46:	add    DWORD PTR [ebp-0x28],eax
 1004e49:	add    esp,0xc
 1004e4c:	inc    esi
 1004e4d:	cmp    esi,DWORD PTR [ebp-0x1c]
 1004e50:	jb     0x1004e20
 1004e52:	push   ebx
 1004e53:	call   DWORD PTR ds:0x1001270
 1004e59:	lea    eax,[ebp-0x18]
 1004e5c:	push   eax
 1004e5d:	push   0x1
 1004e5f:	push   DWORD PTR [ebp+0x24]
 1004e62:	xor    esi,esi
 1004e64:	mov    DWORD PTR [ebp-0x18],esi
 1004e67:	call   DWORD PTR ds:0x1001264
 1004e6d:	mov    eax,DWORD PTR [ebp-0x18]
 1004e70:	inc    eax
 1004e71:	mov    DWORD PTR [ebp-0x18],eax
 1004e74:	mov    DWORD PTR [ebp-0x14],eax
 1004e77:	push   0x1
 1004e79:	lea    eax,[ebp-0x14]
 1004e7c:	push   eax
 1004e7d:	lea    ecx,[ebp-0x8]
 1004e80:	mov    DWORD PTR [ebp-0x8],esi
 1004e83:	mov    DWORD PTR [ebp-0x10],esi
 1004e86:	call   0x1005298
 1004e8b:	lea    eax,[ebp-0x30]
 1004e8e:	push   eax
 1004e8f:	push   DWORD PTR [ebp+0x24]
 1004e92:	mov    DWORD PTR [ebp-0x30],esi
 1004e95:	call   edi
 1004e97:	mov    eax,DWORD PTR [ebp+0xc]
 1004e9a:	lea    edx,[ebp-0x2c]
 1004e9d:	push   edx
 1004e9e:	mov    DWORD PTR [ebp-0x2c],esi
 1004ea1:	mov    ecx,DWORD PTR [eax]
 1004ea3:	push   eax
 1004ea4:	call   DWORD PTR [ecx+0x40]
 1004ea7:	mov    eax,DWORD PTR [ebp+0xc]
 1004eaa:	mov    ecx,DWORD PTR [eax]
 1004eac:	lea    edx,[ebp-0x38]
 1004eaf:	push   edx
 1004eb0:	push   eax
 1004eb1:	call   DWORD PTR [ecx+0x18]
 1004eb4:	cmp    DWORD PTR [ebp-0x18],esi
 1004eb7:	jle    0x1004ef5
 1004eb9:	or     DWORD PTR [ebp-0x10],0xffffffff
 1004ebd:	mov    eax,DWORD PTR [ebp-0x2c]
 1004ec0:	mov    edx,DWORD PTR [eax]
 1004ec2:	lea    ecx,[ebp-0x10]
 1004ec5:	push   ecx
 1004ec6:	mov    ecx,DWORD PTR [ebp-0x30]
 1004ec9:	push   DWORD PTR [ecx+esi*4]
 1004ecc:	push   DWORD PTR [ebp-0x38]
 1004ecf:	push   eax
 1004ed0:	call   DWORD PTR [edx+0x30]
 1004ed3:	push   esi
 1004ed4:	lea    ecx,[ebp-0x8]
 1004ed7:	test   eax,eax
 1004ed9:	jne    0x1004ee7
 1004edb:	call   0x1005245
 1004ee0:	mov    ecx,DWORD PTR [ebp-0x10]
 1004ee3:	mov    DWORD PTR [eax],ecx
 1004ee5:	jmp    0x1004eef
 1004ee7:	call   0x1005245
 1004eec:	or     DWORD PTR [eax],0xffffffff
 1004eef:	inc    esi
 1004ef0:	cmp    esi,DWORD PTR [ebp-0x18]
 1004ef3:	jl     0x1004eb9
 1004ef5:	push   DWORD PTR [ebp+0x24]
 1004ef8:	call   DWORD PTR ds:0x1001270
 1004efe:	mov    eax,DWORD PTR [ebp-0x1c]
 1004f01:	mov    ecx,DWORD PTR [ebp+0x10]
 1004f04:	mov    esi,DWORD PTR [ebp-0x4]
 1004f07:	mov    edi,DWORD PTR ds:0x1001278
 1004f0d:	mov    DWORD PTR [ecx],eax
 1004f0f:	mov    eax,DWORD PTR [ebp-0x20]
 1004f12:	mov    ecx,DWORD PTR [ebp+0x14]
 1004f15:	mov    DWORD PTR [ecx],eax
 1004f17:	mov    eax,DWORD PTR [ebp-0x24]
 1004f1a:	mov    ecx,DWORD PTR [ebp+0x1c]
 1004f1d:	push   esi
 1004f1e:	mov    DWORD PTR [ecx],eax
 1004f20:	call   edi
 1004f22:	mov    eax,DWORD PTR [ebp+0x18]
 1004f25:	and    DWORD PTR [ebp-0x4],0x0
 1004f29:	push   ebx
 1004f2a:	mov    DWORD PTR [eax],esi
 1004f2c:	call   edi
 1004f2e:	mov    eax,DWORD PTR [ebp+0x20]
 1004f31:	mov    esi,DWORD PTR [ebp-0x8]
 1004f34:	and    DWORD PTR [ebp-0x10],0x0
 1004f38:	push   esi
 1004f39:	mov    DWORD PTR [eax],ebx
 1004f3b:	call   edi
 1004f3d:	mov    eax,DWORD PTR [ebp+0x28]
 1004f40:	and    DWORD PTR [ebp-0x8],0x0
 1004f44:	mov    DWORD PTR [eax],esi
 1004f46:	mov    eax,DWORD PTR [ebp-0x2c]
 1004f49:	test   eax,eax
 1004f4b:	je     0x1004f53
 1004f4d:	mov    ecx,DWORD PTR [eax]
 1004f4f:	push   eax
 1004f50:	call   DWORD PTR [ecx+0x8]
 1004f53:	lea    ecx,[ebp-0x8]
 1004f56:	call   0x10052eb
 1004f5b:	lea    ecx,[ebp-0x10]
 1004f5e:	call   0x10051b6
 1004f63:	lea    ecx,[ebp-0x4]
 1004f66:	call   0x10051b6
 1004f6b:	lea    ecx,[ebp-0x40]
 1004f6e:	call   0x1005053
 1004f73:	mov    eax,DWORD PTR [ebp+0xc]
 1004f76:	test   eax,eax
 1004f78:	je     0x1004f80
 1004f7a:	mov    ecx,DWORD PTR [eax]
 1004f7c:	push   eax
 1004f7d:	call   DWORD PTR [ecx+0x8]
 1004f80:	xor    eax,eax
 1004f82:	jmp    0x1004f89
 1004f84:	mov    eax,0x80070057
 1004f89:	pop    edi
 1004f8a:	pop    esi
 1004f8b:	pop    ebx
 1004f8c:	leave  
 1004f8d:	ret    0x24
 1004f90:	int3   
 1004f91:	int3   
 1004f92:	int3   
 1004f93:	int3   
 1004f94:	int3   
 1004f95:	mov    edi,edi
 1004f97:	push   ebp
 1004f98:	mov    ebp,esp
 1004f9a:	cmp    DWORD PTR [ebp+0xc],0x0
 1004f9e:	jne    0x1004fa7
 1004fa0:	mov    eax,0x80070057
 1004fa5:	jmp    0x100501a
 1004fa7:	push   esi
 1004fa8:	mov    esi,DWORD PTR [ebp+0x10]
 1004fab:	push   edi
 1004fac:	test   esi,esi
 1004fae:	je     0x1005013
 1004fb0:	mov    edi,DWORD PTR [ebp+0x14]
 1004fb3:	test   edi,edi
 1004fb5:	je     0x1005013
 1004fb7:	and    DWORD PTR [esi],0x0
 1004fba:	push   DWORD PTR [ebp+0xc]
 1004fbd:	and    DWORD PTR [edi],0x0
 1004fc0:	lea    ecx,[ebp+0xc]
 1004fc3:	call   0x1005088
 1004fc8:	mov    eax,DWORD PTR [ebp+0xc]
 1004fcb:	test   eax,eax
 1004fcd:	je     0x100500e
 1004fcf:	mov    ecx,DWORD PTR [eax]
 1004fd1:	push   esi
 1004fd2:	push   eax
 1004fd3:	call   DWORD PTR [ecx+0x24]
 1004fd6:	mov    esi,eax
 1004fd8:	test   esi,esi
 1004fda:	js     0x1004fec
 1004fdc:	mov    eax,DWORD PTR [ebp+0xc]
 1004fdf:	mov    ecx,DWORD PTR [eax]
 1004fe1:	push   edi
 1004fe2:	push   eax
 1004fe3:	call   DWORD PTR [ecx+0x28]
 1004fe6:	mov    esi,eax
 1004fe8:	test   esi,esi
 1004fea:	jns    0x1004ffd
 1004fec:	mov    ecx,DWORD PTR [ebp+0xc]
 1004fef:	test   ecx,ecx
 1004ff1:	je     0x1004ff9
 1004ff3:	mov    edx,DWORD PTR [ecx]
 1004ff5:	push   ecx
 1004ff6:	call   DWORD PTR [edx+0x8]
 1004ff9:	mov    eax,esi
 1004ffb:	jmp    0x1005018
 1004ffd:	mov    eax,DWORD PTR [ebp+0xc]
 1005000:	test   eax,eax
 1005002:	je     0x100500a
 1005004:	mov    ecx,DWORD PTR [eax]
 1005006:	push   eax
 1005007:	call   DWORD PTR [ecx+0x8]
 100500a:	xor    eax,eax
 100500c:	jmp    0x1005018
 100500e:	xor    eax,eax
 1005010:	inc    eax
 1005011:	jmp    0x1005018
 1005013:	mov    eax,0x80004003
 1005018:	pop    edi
 1005019:	pop    esi
 100501a:	pop    ebp
 100501b:	ret    0x10
 100501e:	int3   
 100501f:	int3   
 1005020:	int3   
 1005021:	int3   
 1005022:	int3   
 1005023:	mov    ecx,DWORD PTR [ecx]
 1005025:	test   ecx,ecx
 1005027:	je     0x100502f
 1005029:	mov    eax,DWORD PTR [ecx]
 100502b:	push   ecx
 100502c:	call   DWORD PTR [eax+0x8]
 100502f:	ret    
 1005030:	int3   
 1005031:	int3   
 1005032:	int3   
 1005033:	int3   
 1005034:	int3   
 1005035:	mov    edi,edi
 1005037:	push   esi
 1005038:	mov    esi,ecx
 100503a:	cmp    BYTE PTR [esi+0x4],0x0
 100503e:	je     0x100504c
 1005040:	mov    eax,DWORD PTR [esi]
 1005042:	mov    edx,DWORD PTR [eax]
 1005044:	push   eax
 1005045:	call   DWORD PTR [edx+0x20]
 1005048:	mov    BYTE PTR [esi+0x4],0x0
 100504c:	pop    esi
 100504d:	ret    
 100504e:	int3   
 100504f:	int3   
 1005050:	int3   
 1005051:	int3   
 1005052:	int3   
 1005053:	push   0x4
 1005055:	mov    eax,0x100a627
 100505a:	call   0x1005973
 100505f:	mov    esi,ecx
 1005061:	mov    DWORD PTR [ebp-0x10],esi
 1005064:	and    DWORD PTR [ebp-0x4],0x0
 1005068:	call   0x1005035
 100506d:	mov    ecx,DWORD PTR [esi]
 100506f:	or     DWORD PTR [ebp-0x4],0xffffffff
 1005073:	test   ecx,ecx
 1005075:	je     0x100507d
 1005077:	mov    eax,DWORD PTR [ecx]
 1005079:	push   ecx
 100507a:	call   DWORD PTR [eax+0x8]
 100507d:	call   0x1005a21
 1005082:	ret    
 1005083:	int3   
 1005084:	int3   
 1005085:	int3   
 1005086:	int3   
 1005087:	int3   
 1005088:	mov    edi,edi
 100508a:	push   ebp
 100508b:	mov    ebp,esp
 100508d:	push   esi
 100508e:	mov    esi,ecx
 1005090:	mov    ecx,DWORD PTR [ebp+0x8]
 1005093:	and    DWORD PTR [esi],0x0
 1005096:	test   ecx,ecx
 1005098:	je     0x10050a5
 100509a:	mov    eax,DWORD PTR [ecx]
 100509c:	push   esi
 100509d:	push   0x1001790
 10050a2:	push   ecx
 10050a3:	call   DWORD PTR [eax]
 10050a5:	mov    eax,esi
 10050a7:	pop    esi
 10050a8:	pop    ebp
 10050a9:	ret    0x4
 10050ac:	int3   
 10050ad:	int3   
 10050ae:	int3   
 10050af:	int3   
 10050b0:	int3   
 10050b1:	mov    edi,edi
 10050b3:	push   ebp
 10050b4:	mov    ebp,esp
 10050b6:	push   ecx
 10050b7:	and    DWORD PTR [ebp-0x4],0x0
 10050bb:	lea    eax,[ebp-0x4]
 10050be:	push   eax
 10050bf:	mov    eax,DWORD PTR [ebp+0x8]
 10050c2:	inc    eax
 10050c3:	push   eax
 10050c4:	push   DWORD PTR [ecx]
 10050c6:	call   DWORD PTR ds:0x1001268
 10050cc:	test   eax,eax
 10050ce:	jns    0x10050d6
 10050d0:	push   eax
 10050d1:	call   0x1002ce2
 10050d6:	mov    eax,DWORD PTR [ebp-0x4]
 10050d9:	leave  
 10050da:	ret    0x4
 10050dd:	int3   
 10050de:	int3   
 10050df:	int3   
 10050e0:	int3   
 10050e1:	int3   
 10050e2:	mov    edi,edi
 10050e4:	push   ebp
 10050e5:	mov    ebp,esp
 10050e7:	push   ecx
 10050e8:	and    DWORD PTR [ebp-0x4],0x0
 10050ec:	lea    eax,[ebp-0x4]
 10050ef:	push   eax
 10050f0:	mov    eax,DWORD PTR [ebp+0x8]
 10050f3:	inc    eax
 10050f4:	push   eax
 10050f5:	push   DWORD PTR [ecx]
 10050f7:	call   DWORD PTR ds:0x1001264
 10050fd:	test   eax,eax
 10050ff:	jns    0x1005107
 1005101:	push   eax
 1005102:	call   0x1002ce2
 1005107:	mov    eax,DWORD PTR [ebp-0x4]
 100510a:	leave  
 100510b:	ret    0x4
 100510e:	int3   
 100510f:	int3   
 1005110:	int3   
 1005111:	int3   
 1005112:	int3   
 1005113:	mov    edi,edi
 1005115:	push   ebp
 1005116:	mov    ebp,esp
 1005118:	push   esi
 1005119:	mov    esi,ecx
 100511b:	cmp    DWORD PTR [esi],0x0
 100511e:	push   edi
 100511f:	jne    0x100512b
 1005121:	push   0x80004005
 1005126:	call   0x1002ce2
 100512b:	push   0x0
 100512d:	call   0x10050b1
 1005132:	mov    edi,eax
 1005134:	cmp    DWORD PTR [ebp+0x8],edi
 1005137:	jl     0x1005157
 1005139:	push   0x0
 100513b:	mov    ecx,esi
 100513d:	call   0x10050e2
 1005142:	cmp    DWORD PTR [ebp+0x8],eax
 1005145:	jg     0x1005157
 1005147:	mov    eax,DWORD PTR [esi]
 1005149:	mov    eax,DWORD PTR [eax+0xc]
 100514c:	sub    eax,edi
 100514e:	add    eax,DWORD PTR [ebp+0x8]
 1005151:	pop    edi
 1005152:	pop    esi
 1005153:	pop    ebp
 1005154:	ret    0x4
 1005157:	push   0x80070057
 100515c:	jmp    0x1005126
 100515e:	int3   
 100515f:	int3   
 1005160:	int3   
 1005161:	int3   
 1005162:	int3   
 1005163:	mov    edi,edi
 1005165:	push   ebp
 1005166:	mov    ebp,esp
 1005168:	push   esi
 1005169:	mov    esi,ecx
 100516b:	cmp    DWORD PTR [esi],0x0
 100516e:	je     0x1005177
 1005170:	mov    eax,0x80004005
 1005175:	jmp    0x10051ac
 1005177:	cmp    DWORD PTR [ebp+0x8],0x0
 100517b:	je     0x10051a7
 100517d:	cmp    DWORD PTR [ebp+0xc],0x0
 1005181:	je     0x10051a7
 1005183:	push   DWORD PTR [ebp+0x8]
 1005186:	push   DWORD PTR [ebp+0xc]
 1005189:	push   0x10
 100518b:	call   DWORD PTR ds:0x100125c
 1005191:	mov    DWORD PTR [esi],eax
 1005193:	test   eax,eax
 1005195:	jne    0x100519e
 1005197:	mov    eax,0x8007000e
 100519c:	jmp    0x10051ac
 100519e:	push   eax
 100519f:	call   DWORD PTR ds:0x100126c
 10051a5:	jmp    0x10051ac
 10051a7:	mov    eax,0x80070057
 10051ac:	pop    esi
 10051ad:	pop    ebp
 10051ae:	ret    0x8
 10051b1:	int3   
 10051b2:	int3   
 10051b3:	int3   
 10051b4:	int3   
 10051b5:	int3   
 10051b6:	mov    edi,edi
 10051b8:	push   esi
 10051b9:	mov    esi,ecx
 10051bb:	xor    eax,eax
 10051bd:	cmp    DWORD PTR [esi],eax
 10051bf:	je     0x10051dc
 10051c1:	push   DWORD PTR [esi]
 10051c3:	call   DWORD PTR ds:0x1001278
 10051c9:	test   eax,eax
 10051cb:	js     0x10051dc
 10051cd:	push   DWORD PTR [esi]
 10051cf:	call   DWORD PTR ds:0x1001260
 10051d5:	test   eax,eax
 10051d7:	js     0x10051dc
 10051d9:	and    DWORD PTR [esi],0x0
 10051dc:	pop    esi
 10051dd:	ret    
 10051de:	int3   
 10051df:	int3   
 10051e0:	int3   
 10051e1:	int3   
 10051e2:	int3   
 10051e3:	mov    edi,edi
 10051e5:	push   ebp
 10051e6:	mov    ebp,esp
 10051e8:	push   ecx
 10051e9:	and    DWORD PTR [ebp-0x4],0x0
 10051ed:	lea    eax,[ebp-0x4]
 10051f0:	push   eax
 10051f1:	mov    eax,DWORD PTR [ebp+0x8]
 10051f4:	inc    eax
 10051f5:	push   eax
 10051f6:	push   DWORD PTR [ecx]
 10051f8:	call   DWORD PTR ds:0x1001268
 10051fe:	test   eax,eax
 1005200:	jns    0x1005208
 1005202:	push   eax
 1005203:	call   0x1002ce2
 1005208:	mov    eax,DWORD PTR [ebp-0x4]
 100520b:	leave  
 100520c:	ret    0x4
 100520f:	int3   
 1005210:	int3   
 1005211:	int3   
 1005212:	int3   
 1005213:	int3   
 1005214:	mov    edi,edi
 1005216:	push   ebp
 1005217:	mov    ebp,esp
 1005219:	push   ecx
 100521a:	and    DWORD PTR [ebp-0x4],0x0
 100521e:	lea    eax,[ebp-0x4]
 1005221:	push   eax
 1005222:	mov    eax,DWORD PTR [ebp+0x8]
 1005225:	inc    eax
 1005226:	push   eax
 1005227:	push   DWORD PTR [ecx]
 1005229:	call   DWORD PTR ds:0x1001264
 100522f:	test   eax,eax
 1005231:	jns    0x1005239
 1005233:	push   eax
 1005234:	call   0x1002ce2
 1005239:	mov    eax,DWORD PTR [ebp-0x4]
 100523c:	leave  
 100523d:	ret    0x4
 1005240:	int3   
 1005241:	int3   
 1005242:	int3   
 1005243:	int3   
 1005244:	int3   
 1005245:	mov    edi,edi
 1005247:	push   ebp
 1005248:	mov    ebp,esp
 100524a:	push   ebx
 100524b:	push   esi
 100524c:	mov    esi,ecx
 100524e:	cmp    DWORD PTR [esi],0x0
 1005251:	push   edi
 1005252:	jne    0x100525e
 1005254:	push   0x80004005
 1005259:	call   0x1002ce2
 100525e:	push   0x0
 1005260:	call   0x10051e3
 1005265:	mov    edi,DWORD PTR [ebp+0x8]
 1005268:	mov    ebx,eax
 100526a:	cmp    edi,ebx
 100526c:	jl     0x100528c
 100526e:	push   0x0
 1005270:	mov    ecx,esi
 1005272:	call   0x1005214
 1005277:	cmp    edi,eax
 1005279:	jg     0x100528c
 100527b:	mov    eax,DWORD PTR [esi]
 100527d:	mov    eax,DWORD PTR [eax+0xc]
 1005280:	sub    edi,ebx
 1005282:	lea    eax,[eax+edi*4]
 1005285:	pop    edi
 1005286:	pop    esi
 1005287:	pop    ebx
 1005288:	pop    ebp
 1005289:	ret    0x4
 100528c:	push   0x80070057
 1005291:	jmp    0x1005259
 1005293:	int3   
 1005294:	int3   
 1005295:	int3   
 1005296:	int3   
 1005297:	int3   
 1005298:	mov    edi,edi
 100529a:	push   ebp
 100529b:	mov    ebp,esp
 100529d:	push   esi
 100529e:	mov    esi,ecx
 10052a0:	cmp    DWORD PTR [esi],0x0
 10052a3:	je     0x10052ac
 10052a5:	mov    eax,0x80004005
 10052aa:	jmp    0x10052e1
 10052ac:	cmp    DWORD PTR [ebp+0x8],0x0
 10052b0:	je     0x10052dc
 10052b2:	cmp    DWORD PTR [ebp+0xc],0x0
 10052b6:	je     0x10052dc
 10052b8:	push   DWORD PTR [ebp+0x8]
 10052bb:	push   DWORD PTR [ebp+0xc]
 10052be:	push   0x3
 10052c0:	call   DWORD PTR ds:0x100125c
 10052c6:	mov    DWORD PTR [esi],eax
 10052c8:	test   eax,eax
 10052ca:	jne    0x10052d3
 10052cc:	mov    eax,0x8007000e
 10052d1:	jmp    0x10052e1
 10052d3:	push   eax
 10052d4:	call   DWORD PTR ds:0x100126c
 10052da:	jmp    0x10052e1
 10052dc:	mov    eax,0x80070057
 10052e1:	pop    esi
 10052e2:	pop    ebp
 10052e3:	ret    0x8
 10052e6:	int3   
 10052e7:	int3   
 10052e8:	int3   
 10052e9:	int3   
 10052ea:	int3   
 10052eb:	mov    edi,edi
 10052ed:	push   esi
 10052ee:	mov    esi,ecx
 10052f0:	xor    eax,eax
 10052f2:	cmp    DWORD PTR [esi],eax
 10052f4:	je     0x1005311
 10052f6:	push   DWORD PTR [esi]
 10052f8:	call   DWORD PTR ds:0x1001278
 10052fe:	test   eax,eax
 1005300:	js     0x1005311
 1005302:	push   DWORD PTR [esi]
 1005304:	call   DWORD PTR ds:0x1001260
 100530a:	test   eax,eax
 100530c:	js     0x1005311
 100530e:	and    DWORD PTR [esi],0x0
 1005311:	pop    esi
 1005312:	ret    
 1005313:	int3   
 1005314:	int3   
 1005315:	int3   
 1005316:	int3   
 1005317:	int3   
 1005318:	push   0x1005be6
 100531d:	call   0x1005809
 1005322:	mov    eax,ds:0x100c6c0
 1005327:	mov    DWORD PTR [esp],0x100c38c
 100532e:	push   DWORD PTR ds:0x100c6bc
 1005334:	mov    ds:0x100c38c,eax
 1005339:	push   0x100c37c
 100533e:	push   0x100c380
 1005343:	push   0x100c378
 1005348:	call   DWORD PTR ds:0x10011c4
 100534e:	add    esp,0x14
 1005351:	mov    ds:0x100c388,eax
 1005356:	test   eax,eax
 1005358:	jns    0x1005362
 100535a:	push   0x8
 100535c:	call   0x1005bb0
 1005361:	pop    ecx
 1005362:	ret    
 1005363:	int3   
 1005364:	int3   
 1005365:	int3   
 1005366:	int3   
 1005367:	int3   
 1005368:	push   0x5c
 100536a:	push   0x100a9b0
 100536f:	call   0x1005d90
 1005374:	xor    ebx,ebx
 1005376:	mov    DWORD PTR [ebp-0x1c],ebx
 1005379:	lea    eax,[ebp-0x6c]
 100537c:	push   eax
 100537d:	call   DWORD PTR ds:0x1001130
 1005383:	cmp    DWORD PTR ds:0x100d9a0,ebx
 1005389:	jne    0x1005396
 100538b:	push   ebx
 100538c:	push   ebx
 100538d:	push   0x1
 100538f:	push   ebx
 1005390:	call   DWORD PTR ds:0x1001158
 1005396:	mov    DWORD PTR [ebp-0x4],ebx
 1005399:	mov    eax,fs:0x18
 100539f:	mov    esi,DWORD PTR [eax+0x4]
 10053a2:	mov    DWORD PTR [ebp-0x20],ebx
 10053a5:	mov    edi,0x100d994
 10053aa:	push   ebx
 10053ab:	push   esi
 10053ac:	push   edi
 10053ad:	call   DWORD PTR ds:0x1001134
 10053b3:	cmp    eax,ebx
 10053b5:	je     0x10053d0
 10053b7:	cmp    eax,esi
 10053b9:	jne    0x10053c3
 10053bb:	xor    esi,esi
 10053bd:	inc    esi
 10053be:	mov    DWORD PTR [ebp-0x20],esi
 10053c1:	jmp    0x10053d3
 10053c3:	push   0x3e8
 10053c8:	call   DWORD PTR ds:0x1001050
 10053ce:	jmp    0x10053aa
 10053d0:	xor    esi,esi
 10053d2:	inc    esi
 10053d3:	mov    eax,ds:0x100d990
 10053d8:	cmp    eax,esi
 10053da:	jne    0x10053e6
 10053dc:	push   0x1f
 10053de:	call   0x1005bb0
 10053e3:	pop    ecx
 10053e4:	jmp    0x1005421
 10053e6:	mov    eax,ds:0x100d990
 10053eb:	test   eax,eax
 10053ed:	jne    0x100541b
 10053ef:	mov    DWORD PTR ds:0x100d990,esi
 10053f5:	push   0x1001308
 10053fa:	push   0x10012fc
 10053ff:	call   0x1005d7e
 1005404:	pop    ecx
 1005405:	pop    ecx
 1005406:	test   eax,eax
 1005408:	je     0x1005421
 100540a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005411:	mov    eax,0xff
 1005416:	jmp    0x1005533
 100541b:	mov    DWORD PTR ds:0x100c394,esi
 1005421:	mov    eax,ds:0x100d990
 1005426:	cmp    eax,esi
 1005428:	jne    0x1005445
 100542a:	push   0x10012f8
 100542f:	push   0x10012d8
 1005434:	call   0x1005d72
 1005439:	pop    ecx
 100543a:	pop    ecx
 100543b:	mov    DWORD PTR ds:0x100d990,0x2
 1005445:	cmp    DWORD PTR [ebp-0x20],ebx
 1005448:	jne    0x1005452
 100544a:	push   ebx
 100544b:	push   edi
 100544c:	call   DWORD PTR ds:0x100116c
 1005452:	cmp    DWORD PTR ds:0x100d9a4,ebx
 1005458:	je     0x1005473
 100545a:	push   0x100d9a4
 100545f:	call   0x1005cb0
 1005464:	pop    ecx
 1005465:	test   eax,eax
 1005467:	je     0x1005473
 1005469:	push   ebx
 100546a:	push   0x2
 100546c:	push   ebx
 100546d:	call   DWORD PTR ds:0x100d9a4
 1005473:	mov    eax,ds:0x10011d8
 1005478:	mov    eax,DWORD PTR [eax]
 100547a:	mov    DWORD PTR [ebp-0x24],eax
 100547d:	movzx  ecx,WORD PTR [eax]
 1005480:	cmp    ecx,0x20
 1005483:	ja     0x10054d4
 1005485:	cmp    cx,bx
 1005488:	je     0x100548f
 100548a:	cmp    DWORD PTR [ebp-0x1c],ebx
 100548d:	jne    0x10054d4
 100548f:	movzx  ecx,WORD PTR [eax]
 1005492:	cmp    cx,bx
 1005495:	je     0x10054a4
 1005497:	cmp    ecx,0x20
 100549a:	ja     0x10054a4
 100549c:	add    eax,0x2
 100549f:	mov    DWORD PTR [ebp-0x24],eax
 10054a2:	jmp    0x100548f
 10054a4:	test   BYTE PTR [ebp-0x40],0x1
 10054a8:	je     0x10054b0
 10054aa:	movzx  ecx,WORD PTR [ebp-0x3c]
 10054ae:	jmp    0x10054b3
 10054b0:	push   0xa
 10054b2:	pop    ecx
 10054b3:	push   ecx
 10054b4:	push   eax
 10054b5:	push   ebx
 10054b6:	push   0x1000000
 10054bb:	call   0x1002c12
 10054c0:	mov    ds:0x100c390,eax
 10054c5:	cmp    DWORD PTR ds:0x100c384,ebx
 10054cb:	jne    0x1005519
 10054cd:	push   eax
 10054ce:	call   DWORD PTR ds:0x10011d4
 10054d4:	cmp    ecx,0x22
 10054d7:	jne    0x10054e4
 10054d9:	xor    ecx,ecx
 10054db:	cmp    DWORD PTR [ebp-0x1c],ebx
 10054de:	sete   cl
 10054e1:	mov    DWORD PTR [ebp-0x1c],ecx
 10054e4:	add    eax,0x2
 10054e7:	jmp    0x100547a
 10054e9:	mov    eax,DWORD PTR [ebp-0x14]
 10054ec:	mov    ecx,DWORD PTR [eax]
 10054ee:	mov    ecx,DWORD PTR [ecx]
 10054f0:	mov    DWORD PTR [ebp-0x28],ecx
 10054f3:	push   eax
 10054f4:	push   ecx
 10054f5:	call   0x1005c12
 10054fa:	pop    ecx
 10054fb:	pop    ecx
 10054fc:	ret    
 10054fd:	mov    esp,DWORD PTR [ebp-0x18]
 1005500:	mov    eax,DWORD PTR [ebp-0x28]
 1005503:	mov    ds:0x100c390,eax
 1005508:	xor    ebx,ebx
 100550a:	cmp    DWORD PTR ds:0x100c384,ebx
 1005510:	jne    0x1005519
 1005512:	push   eax
 1005513:	call   DWORD PTR ds:0x10011cc
 1005519:	cmp    DWORD PTR ds:0x100c394,ebx
 100551f:	jne    0x1005527
 1005521:	call   DWORD PTR ds:0x10011c8
 1005527:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100552e:	mov    eax,ds:0x100c390
 1005533:	call   0x1005dd5
 1005538:	ret    
 1005539:	int3   
 100553a:	int3   
 100553b:	int3   
 100553c:	int3   
 100553d:	int3   
 100553e:	mov    eax,0x5a4d
 1005543:	cmp    WORD PTR ds:0x1000000,ax
 100554a:	je     0x1005550
 100554c:	xor    eax,eax
 100554e:	jmp    0x1005585
 1005550:	mov    eax,ds:0x100003c
 1005555:	cmp    DWORD PTR [eax+0x1000000],0x4550
 100555f:	jne    0x100554c
 1005561:	mov    ecx,0x10b
 1005566:	cmp    WORD PTR [eax+0x1000018],cx
 100556d:	jne    0x100554c
 100556f:	cmp    DWORD PTR [eax+0x1000074],0xe
 1005576:	jbe    0x100554c
 1005578:	xor    ecx,ecx
 100557a:	cmp    DWORD PTR [eax+0x10000e8],ecx
 1005580:	setne  cl
 1005583:	mov    eax,ecx
 1005585:	push   0x2
 1005587:	mov    ds:0x100c384,eax
 100558c:	call   DWORD PTR ds:0x1001208
 1005592:	pop    ecx
 1005593:	push   0xffffffff
 1005595:	call   DWORD PTR ds:0x100112c
 100559b:	mov    ecx,DWORD PTR ds:0x100c6c8
 10055a1:	mov    ds:0x100d998,eax
 10055a6:	mov    ds:0x100d99c,eax
 10055ab:	mov    eax,ds:0x1001204
 10055b0:	mov    DWORD PTR [eax],ecx
 10055b2:	mov    eax,ds:0x10011ec
 10055b7:	mov    ecx,DWORD PTR ds:0x100c6c4
 10055bd:	mov    DWORD PTR [eax],ecx
 10055bf:	call   0x1005bbb
 10055c4:	call   0x1005e23
 10055c9:	cmp    DWORD PTR ds:0x100c0a4,0x0
 10055d0:	jne    0x10055de
 10055d2:	push   0x1005e1b
 10055d7:	call   DWORD PTR ds:0x10011e8
 10055dd:	pop    ecx
 10055de:	call   0x1005dee
 10055e3:	cmp    DWORD PTR ds:0x100c0a0,0xffffffff
 10055ea:	jne    0x10055f5
 10055ec:	push   0xffffffff
 10055ee:	call   DWORD PTR ds:0x10011e4
 10055f4:	pop    ecx
 10055f5:	xor    eax,eax
 10055f7:	ret    
 10055f8:	int3   
 10055f9:	int3   
 10055fa:	int3   
 10055fb:	int3   
 10055fc:	int3   
 10055fd:	call   0x1005e2b
 1005602:	jmp    0x1005368
 1005607:	int3   
 1005608:	int3   
 1005609:	int3   
 100560a:	int3   
 100560b:	int3   
 100560c:	jmp    DWORD PTR ds:0x10011bc
 1005612:	int3   
 1005613:	int3   
 1005614:	int3   
 1005615:	int3   
 1005616:	int3   
 1005617:	push   0x10
 1005619:	push   0x100a9d0
 100561e:	call   0x1005d90
 1005623:	xor    eax,eax
 1005625:	mov    DWORD PTR [ebp-0x20],eax
 1005628:	mov    DWORD PTR [ebp-0x4],eax
 100562b:	mov    DWORD PTR [ebp-0x1c],eax
 100562e:	mov    eax,DWORD PTR [ebp-0x1c]
 1005631:	cmp    eax,DWORD PTR [ebp+0x10]
 1005634:	jge    0x1005649
 1005636:	mov    esi,DWORD PTR [ebp+0x8]
 1005639:	mov    ecx,esi
 100563b:	call   DWORD PTR [ebp+0x14]
 100563e:	add    esi,DWORD PTR [ebp+0xc]
 1005641:	mov    DWORD PTR [ebp+0x8],esi
 1005644:	inc    DWORD PTR [ebp-0x1c]
 1005647:	jmp    0x100562e
 1005649:	mov    DWORD PTR [ebp-0x20],0x1
 1005650:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005657:	call   0x1005664
 100565c:	call   0x1005dd5
 1005661:	ret    0x14
 1005664:	cmp    DWORD PTR [ebp-0x20],0x0
 1005668:	jne    0x100567b
 100566a:	push   DWORD PTR [ebp+0x18]
 100566d:	push   DWORD PTR [ebp-0x1c]
 1005670:	push   DWORD PTR [ebp+0xc]
 1005673:	push   DWORD PTR [ebp+0x8]
 1005676:	call   0x1005681
 100567b:	ret    
 100567c:	int3   
 100567d:	int3   
 100567e:	int3   
 100567f:	int3   
 1005680:	int3   
 1005681:	push   0x14
 1005683:	push   0x100a9f0
 1005688:	call   0x1005d90
 100568d:	and    DWORD PTR [ebp-0x4],0x0
 1005691:	dec    DWORD PTR [ebp+0x10]
 1005694:	js     0x10056d0
 1005696:	mov    ecx,DWORD PTR [ebp+0x8]
 1005699:	sub    ecx,DWORD PTR [ebp+0xc]
 100569c:	mov    DWORD PTR [ebp+0x8],ecx
 100569f:	call   DWORD PTR [ebp+0x14]
 10056a2:	jmp    0x1005691
 10056a4:	mov    eax,DWORD PTR [ebp-0x14]
 10056a7:	mov    DWORD PTR [ebp-0x1c],eax
 10056aa:	mov    eax,DWORD PTR [ebp-0x1c]
 10056ad:	mov    eax,DWORD PTR [eax]
 10056af:	mov    DWORD PTR [ebp-0x20],eax
 10056b2:	mov    eax,DWORD PTR [ebp-0x20]
 10056b5:	cmp    DWORD PTR [eax],0xe06d7363
 10056bb:	je     0x10056c8
 10056bd:	mov    DWORD PTR [ebp-0x24],0x0
 10056c4:	mov    eax,DWORD PTR [ebp-0x24]
 10056c7:	ret    
 10056c8:	call   0x1005ecc
 10056cd:	mov    esp,DWORD PTR [ebp-0x18]
 10056d0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10056d7:	call   0x1005dd5
 10056dc:	ret    0x10
 10056df:	int3   
 10056e0:	int3   
 10056e1:	int3   
 10056e2:	int3   
 10056e3:	int3   
 10056e4:	push   0xc
 10056e6:	push   0x100aa10
 10056eb:	call   0x1005d90
 10056f0:	and    DWORD PTR [ebp-0x1c],0x0
 10056f4:	mov    esi,DWORD PTR [ebp+0xc]
 10056f7:	mov    eax,esi
 10056f9:	imul   eax,DWORD PTR [ebp+0x10]
 10056fd:	add    DWORD PTR [ebp+0x8],eax
 1005700:	and    DWORD PTR [ebp-0x4],0x0
 1005704:	dec    DWORD PTR [ebp+0x10]
 1005707:	js     0x1005714
 1005709:	sub    DWORD PTR [ebp+0x8],esi
 100570c:	mov    ecx,DWORD PTR [ebp+0x8]
 100570f:	call   DWORD PTR [ebp+0x14]
 1005712:	jmp    0x1005704
 1005714:	mov    DWORD PTR [ebp-0x1c],0x1
 100571b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005722:	call   0x100572f
 1005727:	call   0x1005dd5
 100572c:	ret    0x10
 100572f:	cmp    DWORD PTR [ebp-0x1c],0x0
 1005733:	jne    0x1005746
 1005735:	push   DWORD PTR [ebp+0x14]
 1005738:	push   DWORD PTR [ebp+0x10]
 100573b:	push   DWORD PTR [ebp+0xc]
 100573e:	push   DWORD PTR [ebp+0x8]
 1005741:	call   0x1005681
 1005746:	ret    
 1005747:	int3   
 1005748:	int3   
 1005749:	int3   
 100574a:	int3   
 100574b:	int3   
 100574c:	jmp    DWORD PTR ds:0x10011b8
 1005752:	int3   
 1005753:	int3   
 1005754:	int3   
 1005755:	int3   
 1005756:	int3   
 1005757:	int3   
 1005758:	jmp    DWORD PTR ds:0x10011b4
 100575e:	int3   
 100575f:	int3   
 1005760:	int3   
 1005761:	int3   
 1005762:	int3   
 1005763:	push   0x14
 1005765:	push   0x100aa30
 100576a:	call   0x1005d90
 100576f:	push   DWORD PTR ds:0x100d99c
 1005775:	mov    esi,DWORD PTR ds:0x1001128
 100577b:	call   esi
 100577d:	mov    DWORD PTR [ebp-0x1c],eax
 1005780:	cmp    eax,0xffffffff
 1005783:	jne    0x1005791
 1005785:	push   DWORD PTR [ebp+0x8]
 1005788:	call   DWORD PTR ds:0x100121c
 100578e:	pop    ecx
 100578f:	jmp    0x10057f5
 1005791:	push   0x8
 1005793:	call   0x1005ef0
 1005798:	pop    ecx
 1005799:	and    DWORD PTR [ebp-0x4],0x0
 100579d:	push   DWORD PTR ds:0x100d99c
 10057a3:	call   esi
 10057a5:	mov    DWORD PTR [ebp-0x1c],eax
 10057a8:	push   DWORD PTR ds:0x100d998
 10057ae:	call   esi
 10057b0:	mov    DWORD PTR [ebp-0x20],eax
 10057b3:	lea    eax,[ebp-0x20]
 10057b6:	push   eax
 10057b7:	lea    eax,[ebp-0x1c]
 10057ba:	push   eax
 10057bb:	push   DWORD PTR [ebp+0x8]
 10057be:	mov    esi,DWORD PTR ds:0x100112c
 10057c4:	call   esi
 10057c6:	push   eax
 10057c7:	call   0x1005ee4
 10057cc:	add    esp,0xc
 10057cf:	mov    DWORD PTR [ebp-0x24],eax
 10057d2:	push   DWORD PTR [ebp-0x1c]
 10057d5:	call   esi
 10057d7:	mov    ds:0x100d99c,eax
 10057dc:	push   DWORD PTR [ebp-0x20]
 10057df:	call   esi
 10057e1:	mov    ds:0x100d998,eax
 10057e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10057ed:	call   0x10057fb
 10057f2:	mov    eax,DWORD PTR [ebp-0x24]
 10057f5:	call   0x1005dd5
 10057fa:	ret    
 10057fb:	push   0x8
 10057fd:	call   0x1005ed8
 1005802:	pop    ecx
 1005803:	ret    
 1005804:	int3   
 1005805:	int3   
 1005806:	int3   
 1005807:	int3   
 1005808:	int3   
 1005809:	mov    edi,edi
 100580b:	push   ebp
 100580c:	mov    ebp,esp
 100580e:	push   DWORD PTR [ebp+0x8]
 1005811:	call   0x1005763
 1005816:	neg    eax
 1005818:	sbb    eax,eax
 100581a:	neg    eax
 100581c:	pop    ecx
 100581d:	dec    eax
 100581e:	pop    ebp
 100581f:	ret    
 1005820:	int3   
 1005821:	int3   
 1005822:	int3   
 1005823:	int3   
 1005824:	int3   
 1005825:	mov    edi,edi
 1005827:	push   ebp
 1005828:	mov    ebp,esp
 100582a:	sub    esp,0x328
 1005830:	mov    ds:0x100c4a0,eax
 1005835:	mov    DWORD PTR ds:0x100c49c,ecx
 100583b:	mov    DWORD PTR ds:0x100c498,edx
 1005841:	mov    DWORD PTR ds:0x100c494,ebx
 1005847:	mov    DWORD PTR ds:0x100c490,esi
 100584d:	mov    DWORD PTR ds:0x100c48c,edi
 1005853:	data16 mov WORD PTR ds:0x100c4b8,ss
 100585a:	data16 mov WORD PTR ds:0x100c4ac,cs
 1005861:	data16 mov WORD PTR ds:0x100c488,ds
 1005868:	data16 mov WORD PTR ds:0x100c484,es
 100586f:	data16 mov WORD PTR ds:0x100c480,fs
 1005876:	data16 mov WORD PTR ds:0x100c47c,gs
 100587d:	pushf  
 100587e:	pop    DWORD PTR ds:0x100c4b0
 1005884:	mov    eax,DWORD PTR [ebp+0x0]
 1005887:	mov    ds:0x100c4a4,eax
 100588c:	mov    eax,DWORD PTR [ebp+0x4]
 100588f:	mov    ds:0x100c4a8,eax
 1005894:	lea    eax,[ebp+0x8]
 1005897:	mov    ds:0x100c4b4,eax
 100589c:	mov    eax,DWORD PTR [ebp-0x320]
 10058a2:	mov    DWORD PTR ds:0x100c3f0,0x10001
 10058ac:	mov    eax,ds:0x100c4a8
 10058b1:	mov    ds:0x100c3a4,eax
 10058b6:	mov    DWORD PTR ds:0x100c398,0xc0000409
 10058c0:	mov    DWORD PTR ds:0x100c39c,0x1
 10058ca:	mov    eax,ds:0x100c088
 10058cf:	mov    DWORD PTR [ebp-0x328],eax
 10058d5:	mov    eax,ds:0x100c08c
 10058da:	mov    DWORD PTR [ebp-0x324],eax
 10058e0:	call   DWORD PTR ds:0x1001120
 10058e6:	mov    ds:0x100c3e8,eax
 10058eb:	push   0x1
 10058ed:	call   0x1005efc
 10058f2:	pop    ecx
 10058f3:	push   0x0
 10058f5:	call   DWORD PTR ds:0x1001150
 10058fb:	push   0x10017b0
 1005900:	call   DWORD PTR ds:0x1001124
 1005906:	cmp    DWORD PTR ds:0x100c3e8,0x0
 100590d:	jne    0x1005917
 100590f:	push   0x1
 1005911:	call   0x1005efc
 1005916:	pop    ecx
 1005917:	push   0xc0000409
 100591c:	call   DWORD PTR ds:0x1001070
 1005922:	push   eax
 1005923:	call   DWORD PTR ds:0x100107c
 1005929:	leave  
 100592a:	ret    
 100592b:	int3   
 100592c:	int3   
 100592d:	int3   
 100592e:	int3   
 100592f:	int3   
 1005930:	jmp    DWORD PTR ds:0x10011b0
 1005936:	int3   
 1005937:	int3   
 1005938:	int3   
 1005939:	int3   
 100593a:	int3   
 100593b:	int3   
 100593c:	jmp    DWORD PTR ds:0x10011ac
 1005942:	int3   
 1005943:	int3   
 1005944:	int3   
 1005945:	int3   
 1005946:	int3   
 1005947:	int3   
 1005948:	jmp    DWORD PTR ds:0x10011a8
 100594e:	int3   
 100594f:	int3   
 1005950:	int3   
 1005951:	int3   
 1005952:	int3   
 1005953:	cmp    ecx,DWORD PTR ds:0x100c088
 1005959:	jne    0x100595d
 100595b:	repz ret 
 100595d:	jmp    0x1005825
 1005962:	int3   
 1005963:	int3   
 1005964:	int3   
 1005965:	int3   
 1005966:	int3   
 1005967:	int3   
 1005968:	jmp    DWORD PTR ds:0x1001194
 100596e:	int3   
 100596f:	int3   
 1005970:	int3   
 1005971:	int3   
 1005972:	int3   
 1005973:	push   eax
 1005974:	push   DWORD PTR fs:0x0
 100597b:	lea    eax,[esp+0xc]
 100597f:	sub    esp,DWORD PTR [esp+0xc]
 1005983:	push   ebx
 1005984:	push   esi
 1005985:	push   edi
 1005986:	mov    DWORD PTR [eax],ebp
 1005988:	mov    ebp,eax
 100598a:	mov    eax,ds:0x100c088
 100598f:	xor    eax,ebp
 1005991:	push   eax
 1005992:	push   DWORD PTR [ebp-0x4]
 1005995:	mov    DWORD PTR [ebp-0x4],0xffffffff
 100599c:	lea    eax,[ebp-0xc]
 100599f:	mov    fs:0x0,eax
 10059a5:	ret    
 10059a6:	int3   
 10059a7:	int3   
 10059a8:	int3   
 10059a9:	int3   
 10059aa:	int3   
 10059ab:	push   eax
 10059ac:	push   DWORD PTR fs:0x0
 10059b3:	lea    eax,[esp+0xc]
 10059b7:	sub    esp,DWORD PTR [esp+0xc]
 10059bb:	push   ebx
 10059bc:	push   esi
 10059bd:	push   edi
 10059be:	mov    DWORD PTR [eax],ebp
 10059c0:	mov    ebp,eax
 10059c2:	mov    eax,ds:0x100c088
 10059c7:	xor    eax,ebp
 10059c9:	push   eax
 10059ca:	mov    DWORD PTR [ebp-0x10],esp
 10059cd:	push   DWORD PTR [ebp-0x4]
 10059d0:	mov    DWORD PTR [ebp-0x4],0xffffffff
 10059d7:	lea    eax,[ebp-0xc]
 10059da:	mov    fs:0x0,eax
 10059e0:	ret    
 10059e1:	int3   
 10059e2:	int3   
 10059e3:	int3   
 10059e4:	int3   
 10059e5:	int3   
 10059e6:	push   eax
 10059e7:	push   DWORD PTR fs:0x0
 10059ee:	lea    eax,[esp+0xc]
 10059f2:	sub    esp,DWORD PTR [esp+0xc]
 10059f6:	push   ebx
 10059f7:	push   esi
 10059f8:	push   edi
 10059f9:	mov    DWORD PTR [eax],ebp
 10059fb:	mov    ebp,eax
 10059fd:	mov    eax,ds:0x100c088
 1005a02:	xor    eax,ebp
 1005a04:	push   eax
 1005a05:	mov    DWORD PTR [ebp-0x10],eax
 1005a08:	push   DWORD PTR [ebp-0x4]
 1005a0b:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1005a12:	lea    eax,[ebp-0xc]
 1005a15:	mov    fs:0x0,eax
 1005a1b:	ret    
 1005a1c:	int3   
 1005a1d:	int3   
 1005a1e:	int3   
 1005a1f:	int3   
 1005a20:	int3   
 1005a21:	mov    ecx,DWORD PTR [ebp-0xc]
 1005a24:	mov    DWORD PTR fs:0x0,ecx
 1005a2b:	pop    ecx
 1005a2c:	pop    edi
 1005a2d:	pop    edi
 1005a2e:	pop    esi
 1005a2f:	pop    ebx
 1005a30:	mov    esp,ebp
 1005a32:	pop    ebp
 1005a33:	push   ecx
 1005a34:	ret    
 1005a35:	int3   
 1005a36:	int3   
 1005a37:	int3   
 1005a38:	int3   
 1005a39:	int3   
 1005a3a:	mov    ecx,DWORD PTR [ebp-0x10]
 1005a3d:	xor    ecx,ebp
 1005a3f:	call   0x1005953
 1005a44:	jmp    0x1005a21
 1005a49:	int3   
 1005a4a:	int3   
 1005a4b:	int3   
 1005a4c:	int3   
 1005a4d:	int3   
 1005a4e:	int3   
 1005a4f:	int3   
 1005a50:	push   0x1005ab7
 1005a55:	push   DWORD PTR fs:0x0
 1005a5c:	mov    eax,DWORD PTR [esp+0x10]
 1005a60:	mov    DWORD PTR [esp+0x10],ebp
 1005a64:	lea    ebp,[esp+0x10]
 1005a68:	sub    esp,eax
 1005a6a:	push   ebx
 1005a6b:	push   esi
 1005a6c:	push   edi
 1005a6d:	mov    eax,ds:0x100c088
 1005a72:	xor    DWORD PTR [ebp-0x4],eax
 1005a75:	xor    eax,ebp
 1005a77:	mov    DWORD PTR [ebp-0x1c],eax
 1005a7a:	push   eax
 1005a7b:	mov    DWORD PTR [ebp-0x18],esp
 1005a7e:	push   DWORD PTR [ebp-0x8]
 1005a81:	mov    eax,DWORD PTR [ebp-0x4]
 1005a84:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005a8b:	mov    DWORD PTR [ebp-0x8],eax
 1005a8e:	lea    eax,[ebp-0x10]
 1005a91:	mov    fs:0x0,eax
 1005a97:	ret    
 1005a98:	mov    ecx,DWORD PTR [ebp-0x1c]
 1005a9b:	xor    ecx,ebp
 1005a9d:	call   0x1005953
 1005aa2:	jmp    0x1005dd5
 1005aa7:	int3   
 1005aa8:	int3   
 1005aa9:	int3   
 1005aaa:	int3   
 1005aab:	int3   
 1005aac:	jmp    DWORD PTR ds:0x1001190
 1005ab2:	int3   
 1005ab3:	int3   
 1005ab4:	int3   
 1005ab5:	int3   
 1005ab6:	int3   
 1005ab7:	mov    edi,edi
 1005ab9:	push   ebp
 1005aba:	mov    ebp,esp
 1005abc:	push   DWORD PTR [ebp+0x14]
 1005abf:	push   DWORD PTR [ebp+0x10]
 1005ac2:	push   DWORD PTR [ebp+0xc]
 1005ac5:	push   DWORD PTR [ebp+0x8]
 1005ac8:	push   0x1005953
 1005acd:	push   0x100c088
 1005ad2:	call   0x1005f08
 1005ad7:	add    esp,0x18
 1005ada:	pop    ebp
 1005adb:	ret    
 1005adc:	int3   
 1005add:	int3   
 1005ade:	int3   
 1005adf:	int3   
 1005ae0:	int3   
 1005ae1:	int3   
 1005ae2:	jmp    DWORD PTR ds:0x100118c
 1005ae8:	int3   
 1005ae9:	int3   
 1005aea:	int3   
 1005aeb:	int3   
 1005aec:	int3   
 1005aed:	int3   
 1005aee:	jmp    DWORD PTR ds:0x1001188
 1005af4:	int3   
 1005af5:	int3   
 1005af6:	int3   
 1005af7:	int3   
 1005af8:	int3   
 1005af9:	mov    edi,edi
 1005afb:	push   ebp
 1005afc:	mov    ebp,esp
 1005afe:	test   BYTE PTR [ebp+0x8],0x2
 1005b02:	push   edi
 1005b03:	mov    edi,ecx
 1005b05:	je     0x1005b2c
 1005b07:	push   esi
 1005b08:	push   0x1005f2c
 1005b0d:	lea    esi,[edi-0x4]
 1005b10:	push   DWORD PTR [esi]
 1005b12:	push   0xc
 1005b14:	push   edi
 1005b15:	call   0x10056e4
 1005b1a:	test   BYTE PTR [ebp+0x8],0x1
 1005b1e:	je     0x1005b27
 1005b20:	push   esi
 1005b21:	call   0x100560c
 1005b26:	pop    ecx
 1005b27:	mov    eax,esi
 1005b29:	pop    esi
 1005b2a:	jmp    0x1005b40
 1005b2c:	call   0x1005f2c
 1005b31:	test   BYTE PTR [ebp+0x8],0x1
 1005b35:	je     0x1005b3e
 1005b37:	push   edi
 1005b38:	call   0x100560c
 1005b3d:	pop    ecx
 1005b3e:	mov    eax,edi
 1005b40:	pop    edi
 1005b41:	pop    ebp
 1005b42:	ret    0x4
 1005b45:	int3   
 1005b46:	int3   
 1005b47:	int3   
 1005b48:	int3   
 1005b49:	int3   
 1005b4a:	jmp    DWORD PTR ds:0x10011a0
 1005b50:	int3   
 1005b51:	int3   
 1005b52:	int3   
 1005b53:	int3   
 1005b54:	int3   
 1005b55:	mov    edi,edi
 1005b57:	push   ebp
 1005b58:	mov    ebp,esp
 1005b5a:	mov    eax,DWORD PTR [ebp+0x8]
 1005b5d:	mov    eax,DWORD PTR [eax]
 1005b5f:	cmp    DWORD PTR [eax],0xe06d7363
 1005b65:	jne    0x1005b91
 1005b67:	cmp    DWORD PTR [eax+0x10],0x3
 1005b6b:	jne    0x1005b91
 1005b6d:	mov    eax,DWORD PTR [eax+0x14]
 1005b70:	cmp    eax,0x19930520
 1005b75:	je     0x1005b8c
 1005b77:	cmp    eax,0x19930521
 1005b7c:	je     0x1005b8c
 1005b7e:	cmp    eax,0x19930522
 1005b83:	je     0x1005b8c
 1005b85:	cmp    eax,0x1994000
 1005b8a:	jne    0x1005b91
 1005b8c:	call   0x1005ecc
 1005b91:	xor    eax,eax
 1005b93:	pop    ebp
 1005b94:	ret    0x4
 1005b97:	int3   
 1005b98:	int3   
 1005b99:	int3   
 1005b9a:	int3   
 1005b9b:	int3   
 1005b9c:	push   0x1005b55
 1005ba1:	call   DWORD PTR ds:0x1001150
 1005ba7:	xor    eax,eax
 1005ba9:	ret    
 1005baa:	int3   
 1005bab:	int3   
 1005bac:	int3   
 1005bad:	int3   
 1005bae:	int3   
 1005baf:	int3   
 1005bb0:	jmp    DWORD PTR ds:0x10011c0
 1005bb6:	int3   
 1005bb7:	int3   
 1005bb8:	int3   
 1005bb9:	int3   
 1005bba:	int3   
 1005bbb:	mov    edi,edi
 1005bbd:	push   esi
 1005bbe:	mov    eax,0x1002aa4
 1005bc3:	mov    esi,0x1002aa4
 1005bc8:	push   edi
 1005bc9:	mov    edi,eax
 1005bcb:	cmp    eax,esi
 1005bcd:	jae    0x1005bde
 1005bcf:	mov    eax,DWORD PTR [edi]
 1005bd1:	test   eax,eax
 1005bd3:	je     0x1005bd7
 1005bd5:	call   eax
 1005bd7:	add    edi,0x4
 1005bda:	cmp    edi,esi
 1005bdc:	jb     0x1005bcf
 1005bde:	pop    edi
 1005bdf:	pop    esi
 1005be0:	ret    
 1005be1:	int3   
 1005be2:	int3   
 1005be3:	int3   
 1005be4:	int3   
 1005be5:	int3   
 1005be6:	mov    edi,edi
 1005be8:	push   esi
 1005be9:	mov    eax,0x1002aac
 1005bee:	mov    esi,0x1002aac
 1005bf3:	push   edi
 1005bf4:	mov    edi,eax
 1005bf6:	cmp    eax,esi
 1005bf8:	jae    0x1005c09
 1005bfa:	mov    eax,DWORD PTR [edi]
 1005bfc:	test   eax,eax
 1005bfe:	je     0x1005c02
 1005c00:	call   eax
 1005c02:	add    edi,0x4
 1005c05:	cmp    edi,esi
 1005c07:	jb     0x1005bfa
 1005c09:	pop    edi
 1005c0a:	pop    esi
 1005c0b:	ret    
 1005c0c:	int3   
 1005c0d:	int3   
 1005c0e:	int3   
 1005c0f:	int3   
 1005c10:	int3   
 1005c11:	int3   
 1005c12:	jmp    DWORD PTR ds:0x10011d0
 1005c18:	int3   
 1005c19:	int3   
 1005c1a:	int3   
 1005c1b:	int3   
 1005c1c:	int3   
 1005c1d:	int3   
 1005c1e:	int3   
 1005c1f:	int3   
 1005c20:	mov    edi,edi
 1005c22:	push   ebp
 1005c23:	mov    ebp,esp
 1005c25:	mov    ecx,DWORD PTR [ebp+0x8]
 1005c28:	mov    eax,0x5a4d
 1005c2d:	cmp    WORD PTR [ecx],ax
 1005c30:	je     0x1005c36
 1005c32:	xor    eax,eax
 1005c34:	pop    ebp
 1005c35:	ret    
 1005c36:	mov    eax,DWORD PTR [ecx+0x3c]
 1005c39:	add    eax,ecx
 1005c3b:	cmp    DWORD PTR [eax],0x4550
 1005c41:	jne    0x1005c32
 1005c43:	xor    edx,edx
 1005c45:	mov    ecx,0x10b
 1005c4a:	cmp    WORD PTR [eax+0x18],cx
 1005c4e:	sete   dl
 1005c51:	mov    eax,edx
 1005c53:	pop    ebp
 1005c54:	ret    
 1005c55:	int3   
 1005c56:	int3   
 1005c57:	int3   
 1005c58:	int3   
 1005c59:	int3   
 1005c5a:	int3   
 1005c5b:	int3   
 1005c5c:	int3   
 1005c5d:	int3   
 1005c5e:	int3   
 1005c5f:	int3   
 1005c60:	mov    edi,edi
 1005c62:	push   ebp
 1005c63:	mov    ebp,esp
 1005c65:	mov    eax,DWORD PTR [ebp+0x8]
 1005c68:	mov    ecx,DWORD PTR [eax+0x3c]
 1005c6b:	add    ecx,eax
 1005c6d:	movzx  eax,WORD PTR [ecx+0x14]
 1005c71:	push   ebx
 1005c72:	push   esi
 1005c73:	movzx  esi,WORD PTR [ecx+0x6]
 1005c77:	xor    edx,edx
 1005c79:	push   edi
 1005c7a:	lea    eax,[eax+ecx*1+0x18]
 1005c7e:	test   esi,esi
 1005c80:	je     0x1005c9d
 1005c82:	mov    edi,DWORD PTR [ebp+0xc]
 1005c85:	mov    ecx,DWORD PTR [eax+0xc]
 1005c88:	cmp    edi,ecx
 1005c8a:	jb     0x1005c95
 1005c8c:	mov    ebx,DWORD PTR [eax+0x8]
 1005c8f:	add    ebx,ecx
 1005c91:	cmp    edi,ebx
 1005c93:	jb     0x1005c9f
 1005c95:	inc    edx
 1005c96:	add    eax,0x28
 1005c99:	cmp    edx,esi
 1005c9b:	jb     0x1005c85
 1005c9d:	xor    eax,eax
 1005c9f:	pop    edi
 1005ca0:	pop    esi
 1005ca1:	pop    ebx
 1005ca2:	pop    ebp
 1005ca3:	ret    
 1005ca4:	int3   
 1005ca5:	int3   
 1005ca6:	int3   
 1005ca7:	int3   
 1005ca8:	int3   
 1005ca9:	int3   
 1005caa:	int3   
 1005cab:	int3   
 1005cac:	int3   
 1005cad:	int3   
 1005cae:	int3   
 1005caf:	int3   
 1005cb0:	mov    edi,edi
 1005cb2:	push   ebp
 1005cb3:	mov    ebp,esp
 1005cb5:	push   0xfffffffe
 1005cb7:	push   0x100aa50
 1005cbc:	push   0x1005ab7
 1005cc1:	mov    eax,fs:0x0
 1005cc7:	push   eax
 1005cc8:	sub    esp,0x8
 1005ccb:	push   ebx
 1005ccc:	push   esi
 1005ccd:	push   edi
 1005cce:	mov    eax,ds:0x100c088
 1005cd3:	xor    DWORD PTR [ebp-0x8],eax
 1005cd6:	xor    eax,ebp
 1005cd8:	push   eax
 1005cd9:	lea    eax,[ebp-0x10]
 1005cdc:	mov    fs:0x0,eax
 1005ce2:	mov    DWORD PTR [ebp-0x18],esp
 1005ce5:	mov    DWORD PTR [ebp-0x4],0x0
 1005cec:	push   0x1000000
 1005cf1:	call   0x1005c20
 1005cf6:	add    esp,0x4
 1005cf9:	test   eax,eax
 1005cfb:	je     0x1005d51
 1005cfd:	mov    eax,DWORD PTR [ebp+0x8]
 1005d00:	sub    eax,0x1000000
 1005d05:	push   eax
 1005d06:	push   0x1000000
 1005d0b:	call   0x1005c60
 1005d10:	add    esp,0x8
 1005d13:	test   eax,eax
 1005d15:	je     0x1005d51
 1005d17:	mov    eax,DWORD PTR [eax+0x24]
 1005d1a:	shr    eax,0x1f
 1005d1d:	not    eax
 1005d1f:	and    eax,0x1
 1005d22:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005d29:	mov    ecx,DWORD PTR [ebp-0x10]
 1005d2c:	mov    DWORD PTR fs:0x0,ecx
 1005d33:	pop    ecx
 1005d34:	pop    edi
 1005d35:	pop    esi
 1005d36:	pop    ebx
 1005d37:	mov    esp,ebp
 1005d39:	pop    ebp
 1005d3a:	ret    
 1005d3b:	mov    eax,DWORD PTR [ebp-0x14]
 1005d3e:	mov    ecx,DWORD PTR [eax]
 1005d40:	xor    edx,edx
 1005d42:	cmp    DWORD PTR [ecx],0xc0000005
 1005d48:	sete   dl
 1005d4b:	mov    eax,edx
 1005d4d:	ret    
 1005d4e:	mov    esp,DWORD PTR [ebp-0x18]
 1005d51:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005d58:	xor    eax,eax
 1005d5a:	mov    ecx,DWORD PTR [ebp-0x10]
 1005d5d:	mov    DWORD PTR fs:0x0,ecx
 1005d64:	pop    ecx
 1005d65:	pop    edi
 1005d66:	pop    esi
 1005d67:	pop    ebx
 1005d68:	mov    esp,ebp
 1005d6a:	pop    ebp
 1005d6b:	ret    
 1005d6c:	int3   
 1005d6d:	int3   
 1005d6e:	int3   
 1005d6f:	int3   
 1005d70:	int3   
 1005d71:	int3   
 1005d72:	jmp    DWORD PTR ds:0x10011dc
 1005d78:	int3   
 1005d79:	int3   
 1005d7a:	int3   
 1005d7b:	int3   
 1005d7c:	int3   
 1005d7d:	int3   
 1005d7e:	jmp    DWORD PTR ds:0x10011e0
 1005d84:	int3   
 1005d85:	int3   
 1005d86:	int3   
 1005d87:	int3   
 1005d88:	int3   
 1005d89:	int3   
 1005d8a:	int3   
 1005d8b:	int3   
 1005d8c:	int3   
 1005d8d:	int3   
 1005d8e:	int3   
 1005d8f:	int3   
 1005d90:	push   0x1005ab7
 1005d95:	push   DWORD PTR fs:0x0
 1005d9c:	mov    eax,DWORD PTR [esp+0x10]
 1005da0:	mov    DWORD PTR [esp+0x10],ebp
 1005da4:	lea    ebp,[esp+0x10]
 1005da8:	sub    esp,eax
 1005daa:	push   ebx
 1005dab:	push   esi
 1005dac:	push   edi
 1005dad:	mov    eax,ds:0x100c088
 1005db2:	xor    DWORD PTR [ebp-0x4],eax
 1005db5:	xor    eax,ebp
 1005db7:	push   eax
 1005db8:	mov    DWORD PTR [ebp-0x18],esp
 1005dbb:	push   DWORD PTR [ebp-0x8]
 1005dbe:	mov    eax,DWORD PTR [ebp-0x4]
 1005dc1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005dc8:	mov    DWORD PTR [ebp-0x8],eax
 1005dcb:	lea    eax,[ebp-0x10]
 1005dce:	mov    fs:0x0,eax
 1005dd4:	ret    
 1005dd5:	mov    ecx,DWORD PTR [ebp-0x10]
 1005dd8:	mov    DWORD PTR fs:0x0,ecx
 1005ddf:	pop    ecx
 1005de0:	pop    edi
 1005de1:	pop    edi
 1005de2:	pop    esi
 1005de3:	pop    ebx
 1005de4:	mov    esp,ebp
 1005de6:	pop    ebp
 1005de7:	push   ecx
 1005de8:	ret    
 1005de9:	int3   
 1005dea:	int3   
 1005deb:	int3   
 1005dec:	int3   
 1005ded:	int3   
 1005dee:	mov    edi,edi
 1005df0:	push   esi
 1005df1:	push   0x30000
 1005df6:	push   0x10000
 1005dfb:	xor    esi,esi
 1005dfd:	push   esi
 1005dfe:	call   0x1005f20
 1005e03:	add    esp,0xc
 1005e06:	test   eax,eax
 1005e08:	je     0x1005e14
 1005e0a:	push   esi
 1005e0b:	push   esi
 1005e0c:	push   esi
 1005e0d:	push   esi
 1005e0e:	push   esi
 1005e0f:	call   0x1005f14
 1005e14:	pop    esi
 1005e15:	ret    
 1005e16:	int3   
 1005e17:	int3   
 1005e18:	int3   
 1005e19:	int3   
 1005e1a:	int3   
 1005e1b:	xor    eax,eax
 1005e1d:	ret    
 1005e1e:	int3   
 1005e1f:	int3   
 1005e20:	int3   
 1005e21:	int3   
 1005e22:	int3   
 1005e23:	xor    eax,eax
 1005e25:	ret    
 1005e26:	int3   
 1005e27:	int3   
 1005e28:	int3   
 1005e29:	int3   
 1005e2a:	int3   
 1005e2b:	mov    edi,edi
 1005e2d:	push   ebp
 1005e2e:	mov    ebp,esp
 1005e30:	sub    esp,0x10
 1005e33:	mov    eax,ds:0x100c088
 1005e38:	and    DWORD PTR [ebp-0x8],0x0
 1005e3c:	and    DWORD PTR [ebp-0x4],0x0
 1005e40:	push   ebx
 1005e41:	push   edi
 1005e42:	mov    edi,0xbb40e64e
 1005e47:	mov    ebx,0xffff0000
 1005e4c:	cmp    eax,edi
 1005e4e:	je     0x1005e5d
 1005e50:	test   ebx,eax
 1005e52:	je     0x1005e5d
 1005e54:	not    eax
 1005e56:	mov    ds:0x100c08c,eax
 1005e5b:	jmp    0x1005ec2
 1005e5d:	push   esi
 1005e5e:	lea    eax,[ebp-0x8]
 1005e61:	push   eax
 1005e62:	call   DWORD PTR ds:0x1001114
 1005e68:	mov    esi,DWORD PTR [ebp-0x4]
 1005e6b:	xor    esi,DWORD PTR [ebp-0x8]
 1005e6e:	call   DWORD PTR ds:0x1001074
 1005e74:	xor    esi,eax
 1005e76:	call   DWORD PTR ds:0x1001148
 1005e7c:	xor    esi,eax
 1005e7e:	call   DWORD PTR ds:0x1001118
 1005e84:	xor    esi,eax
 1005e86:	lea    eax,[ebp-0x10]
 1005e89:	push   eax
 1005e8a:	call   DWORD PTR ds:0x100111c
 1005e90:	mov    eax,DWORD PTR [ebp-0xc]
 1005e93:	xor    eax,DWORD PTR [ebp-0x10]
 1005e96:	xor    esi,eax
 1005e98:	cmp    esi,edi
 1005e9a:	jne    0x1005ea3
 1005e9c:	mov    esi,0xbb40e64f
 1005ea1:	jmp    0x1005eb3
 1005ea3:	test   ebx,esi
 1005ea5:	jne    0x1005eb3
 1005ea7:	mov    eax,esi
 1005ea9:	or     eax,0x4711
 1005eae:	shl    eax,0x10
 1005eb1:	or     esi,eax
 1005eb3:	mov    DWORD PTR ds:0x100c088,esi
 1005eb9:	not    esi
 1005ebb:	mov    DWORD PTR ds:0x100c08c,esi
 1005ec1:	pop    esi
 1005ec2:	pop    edi
 1005ec3:	pop    ebx
 1005ec4:	leave  
 1005ec5:	ret    
 1005ec6:	int3   
 1005ec7:	int3   
 1005ec8:	int3   
 1005ec9:	int3   
 1005eca:	int3   
 1005ecb:	int3   
 1005ecc:	jmp    DWORD PTR ds:0x100120c
 1005ed2:	int3   
 1005ed3:	int3   
 1005ed4:	int3   
 1005ed5:	int3   
 1005ed6:	int3   
 1005ed7:	int3   
 1005ed8:	jmp    DWORD PTR ds:0x1001210
 1005ede:	int3   
 1005edf:	int3   
 1005ee0:	int3   
 1005ee1:	int3   
 1005ee2:	int3   
 1005ee3:	int3   
 1005ee4:	jmp    DWORD PTR ds:0x1001214
 1005eea:	int3   
 1005eeb:	int3   
 1005eec:	int3   
 1005eed:	int3   
 1005eee:	int3   
 1005eef:	int3   
 1005ef0:	jmp    DWORD PTR ds:0x1001218
 1005ef6:	int3   
 1005ef7:	int3   
 1005ef8:	int3   
 1005ef9:	int3   
 1005efa:	int3   
 1005efb:	int3   
 1005efc:	jmp    DWORD PTR ds:0x1001220
 1005f02:	int3   
 1005f03:	int3   
 1005f04:	int3   
 1005f05:	int3   
 1005f06:	int3   
 1005f07:	int3   
 1005f08:	jmp    DWORD PTR ds:0x1001224
 1005f0e:	int3   
 1005f0f:	int3   
 1005f10:	int3   
 1005f11:	int3   
 1005f12:	int3   
 1005f13:	int3   
 1005f14:	jmp    DWORD PTR ds:0x1001228
 1005f1a:	int3   
 1005f1b:	int3   
 1005f1c:	int3   
 1005f1d:	int3   
 1005f1e:	int3   
 1005f1f:	int3   
 1005f20:	jmp    DWORD PTR ds:0x100122c
 1005f26:	int3   
 1005f27:	int3   
 1005f28:	int3   
 1005f29:	int3   
 1005f2a:	int3   
 1005f2b:	int3   
 1005f2c:	jmp    DWORD PTR ds:0x1001230
 1005f32:	int3   
 1005f33:	int3   
 1005f34:	int3   
 1005f35:	int3   
 1005f36:	int3   
 1005f37:	mov    edi,edi
 1005f39:	push   esi
 1005f3a:	mov    esi,ecx
 1005f3c:	cmp    DWORD PTR [esi],0x0
 1005f3f:	je     0x1005f4c
 1005f41:	push   DWORD PTR [esi]
 1005f43:	call   0x1005930
 1005f48:	and    DWORD PTR [esi],0x0
 1005f4b:	pop    ecx
 1005f4c:	and    DWORD PTR [esi+0x4],0x0
 1005f50:	and    DWORD PTR [esi+0x8],0x0
 1005f54:	pop    esi
 1005f55:	ret    
 1005f56:	int3   
 1005f57:	int3   
 1005f58:	int3   
 1005f59:	int3   
 1005f5a:	int3   
 1005f5b:	mov    edi,edi
 1005f5d:	push   esi
 1005f5e:	push   edi
 1005f5f:	mov    esi,ecx
 1005f61:	push   0x18
 1005f63:	xor    edi,edi
 1005f65:	lea    eax,[esi+0x14]
 1005f68:	push   edi
 1005f69:	push   eax
 1005f6a:	call   0x1005aee
 1005f6f:	add    esp,0xc
 1005f72:	mov    DWORD PTR [esi+0x2c],edi
 1005f75:	mov    DWORD PTR [esi+0x30],edi
 1005f78:	mov    DWORD PTR [esi+0x34],edi
 1005f7b:	pop    edi
 1005f7c:	mov    eax,esi
 1005f7e:	pop    esi
 1005f7f:	ret    
 1005f80:	int3   
 1005f81:	int3   
 1005f82:	int3   
 1005f83:	int3   
 1005f84:	int3   
 1005f85:	mov    edi,edi
 1005f87:	push   esi
 1005f88:	mov    esi,ecx
 1005f8a:	call   0x1005f5b
 1005f8f:	mov    eax,0x1000000
 1005f94:	lea    ecx,[esi+0x14]
 1005f97:	mov    DWORD PTR [esi],0x38
 1005f9d:	mov    DWORD PTR [esi+0x8],eax
 1005fa0:	mov    DWORD PTR [esi+0x4],eax
 1005fa3:	mov    DWORD PTR [esi+0xc],0xa00
 1005faa:	mov    DWORD PTR [esi+0x10],0x10017e0
 1005fb1:	call   0x1002d40
 1005fb6:	test   eax,eax
 1005fb8:	jns    0x1005fc1
 1005fba:	mov    BYTE PTR ds:0x100c0e8,0x1
 1005fc1:	mov    eax,esi
 1005fc3:	pop    esi
 1005fc4:	ret    
 1005fc5:	int3   
 1005fc6:	int3   
 1005fc7:	int3   
 1005fc8:	int3   
 1005fc9:	int3   
 1005fca:	mov    edi,edi
 1005fcc:	push   esi
 1005fcd:	mov    esi,ecx
 1005fcf:	lea    eax,[esi+0x14]
 1005fd2:	push   eax
 1005fd3:	call   DWORD PTR ds:0x1001044
 1005fd9:	lea    ecx,[esi+0x2c]
 1005fdc:	pop    esi
 1005fdd:	jmp    0x1005f37
 1005fe2:	int3   
 1005fe3:	int3   
 1005fe4:	int3   
 1005fe5:	int3   
 1005fe6:	int3   
 1005fe7:	mov    edi,edi
 1005fe9:	push   esi
 1005fea:	mov    esi,ecx
 1005fec:	push   0x18
 1005fee:	lea    eax,[esi+0x10]
 1005ff1:	push   0x0
 1005ff3:	push   eax
 1005ff4:	call   0x1005aee
 1005ff9:	add    esp,0xc
 1005ffc:	mov    eax,esi
 1005ffe:	pop    esi
 1005fff:	ret    
 1006000:	int3   
 1006001:	int3   
 1006002:	int3   
 1006003:	int3   
 1006004:	int3   
 1006005:	mov    edi,edi
 1006007:	push   esi
 1006008:	mov    esi,ecx
 100600a:	call   0x1005fe7
 100600f:	and    DWORD PTR [esi],0x0
 1006012:	lea    ecx,[esi+0x10]
 1006015:	mov    DWORD PTR [esi+0x4],0x1000000
 100601c:	mov    DWORD PTR [esi+0x8],0x100ad54
 1006023:	mov    DWORD PTR [esi+0xc],0x100ad58
 100602a:	call   0x1002d40
 100602f:	test   eax,eax
 1006031:	jns    0x100603c
 1006033:	mov    BYTE PTR ds:0x100c0e8,0x1
 100603a:	jmp    0x1006042
 100603c:	mov    DWORD PTR [esi],0x28
 1006042:	mov    eax,esi
 1006044:	pop    esi
 1006045:	ret    
 1006046:	int3   
 1006047:	int3   
 1006048:	int3   
 1006049:	int3   
 100604a:	int3   
 100604b:	mov    edi,edi
 100604d:	push   ebp
 100604e:	mov    ebp,esp
 1006050:	push   DWORD PTR [ebp+0xc]
 1006053:	push   DWORD PTR [ebp+0x8]
 1006056:	call   DWORD PTR ds:0x100110c
 100605c:	test   eax,eax
 100605e:	jne    0x1006062
 1006060:	pop    ebp
 1006061:	ret    
 1006062:	push   esi
 1006063:	push   eax
 1006064:	call   DWORD PTR ds:0x1001110
 100606a:	mov    esi,eax
 100606c:	test   esi,esi
 100606e:	je     0x100609b
 1006070:	push   DWORD PTR [ebp+0xc]
 1006073:	push   DWORD PTR [ebp+0x8]
 1006076:	call   DWORD PTR ds:0x1001108
 100607c:	mov    edx,DWORD PTR [ebp+0x10]
 100607f:	lea    ecx,[esi+eax*1]
 1006082:	and    edx,0xf
 1006085:	jbe    0x1006097
 1006087:	cmp    esi,ecx
 1006089:	jae    0x100609b
 100608b:	movzx  eax,WORD PTR [esi]
 100608e:	lea    esi,[esi+eax*2]
 1006091:	add    esi,0x2
 1006094:	dec    edx
 1006095:	jne    0x1006087
 1006097:	cmp    esi,ecx
 1006099:	jb     0x100609f
 100609b:	xor    eax,eax
 100609d:	jmp    0x10060a8
 100609f:	movzx  eax,WORD PTR [esi]
 10060a2:	neg    eax
 10060a4:	sbb    eax,eax
 10060a6:	and    eax,esi
 10060a8:	pop    esi
 10060a9:	pop    ebp
 10060aa:	ret    
 10060ab:	int3   
 10060ac:	int3   
 10060ad:	int3   
 10060ae:	int3   
 10060af:	int3   
 10060b0:	mov    edi,edi
 10060b2:	push   ebp
 10060b3:	mov    ebp,esp
 10060b5:	mov    eax,DWORD PTR [ebp+0xc]
 10060b8:	shr    eax,0x4
 10060bb:	inc    eax
 10060bc:	movzx  eax,ax
 10060bf:	push   0x6
 10060c1:	push   eax
 10060c2:	push   DWORD PTR [ebp+0x8]
 10060c5:	call   DWORD PTR ds:0x1001104
 10060cb:	test   eax,eax
 10060cd:	jne    0x10060d1
 10060cf:	pop    ebp
 10060d0:	ret    
 10060d1:	push   DWORD PTR [ebp+0xc]
 10060d4:	push   eax
 10060d5:	push   DWORD PTR [ebp+0x8]
 10060d8:	call   0x100604b
 10060dd:	add    esp,0xc
 10060e0:	pop    ebp
 10060e1:	ret    
 10060e2:	int3   
 10060e3:	int3   
 10060e4:	int3   
 10060e5:	int3   
 10060e6:	int3   
 10060e7:	mov    edi,edi
 10060e9:	push   ebp
 10060ea:	mov    ebp,esp
 10060ec:	push   esi
 10060ed:	mov    esi,ecx
 10060ef:	push   DWORD PTR [esi]
 10060f1:	call   DWORD PTR ds:0x1001244
 10060f7:	and    DWORD PTR [esi],0x0
 10060fa:	push   esi
 10060fb:	push   DWORD PTR [ebp+0xc]
 10060fe:	push   DWORD PTR [ebp+0x8]
 1006101:	call   0x1006113
 1006106:	add    esp,0xc
 1006109:	pop    esi
 100610a:	pop    ebp
 100610b:	ret    0x8
 100610e:	int3   
 100610f:	int3   
 1006110:	int3   
 1006111:	int3   
 1006112:	int3   
 1006113:	mov    edi,edi
 1006115:	push   ebp
 1006116:	mov    ebp,esp
 1006118:	push   DWORD PTR [ebp+0xc]
 100611b:	push   DWORD PTR [ebp+0x8]
 100611e:	call   0x10060b0
 1006123:	pop    ecx
 1006124:	pop    ecx
 1006125:	test   eax,eax
 1006127:	je     0x100613e
 1006129:	movzx  ecx,WORD PTR [eax]
 100612c:	push   ecx
 100612d:	add    eax,0x2
 1006130:	push   eax
 1006131:	call   DWORD PTR ds:0x1001240
 1006137:	mov    ecx,DWORD PTR [ebp+0x10]
 100613a:	mov    DWORD PTR [ecx],eax
 100613c:	jmp    0x1006144
 100613e:	mov    ecx,DWORD PTR [ebp+0x10]
 1006141:	and    DWORD PTR [ecx],0x0
 1006144:	cmp    DWORD PTR [ecx],0x0
 1006147:	setne  al
 100614a:	pop    ebp
 100614b:	ret    
 100614c:	int3   
 100614d:	int3   
 100614e:	int3   
 100614f:	int3   
 1006150:	int3   
 1006151:	mov    edi,edi
 1006153:	push   ebp
 1006154:	mov    ebp,esp
 1006156:	push   ecx
 1006157:	push   ebx
 1006158:	push   esi
 1006159:	push   edi
 100615a:	lea    eax,[ebp-0x4]
 100615d:	push   eax
 100615e:	push   DWORD PTR [ebp+0xc]
 1006161:	push   DWORD PTR [ebp+0x8]
 1006164:	call   0x100618e
 1006169:	mov    esi,DWORD PTR [ebp+0x10]
 100616c:	mov    edi,DWORD PTR [ebp-0x4]
 100616f:	add    esp,0xc
 1006172:	mov    ebx,eax
 1006174:	cmp    DWORD PTR [esi],edi
 1006176:	je     0x1006182
 1006178:	push   DWORD PTR [esi]
 100617a:	call   DWORD PTR ds:0x1001244
 1006180:	mov    DWORD PTR [esi],edi
 1006182:	pop    edi
 1006183:	pop    esi
 1006184:	mov    eax,ebx
 1006186:	pop    ebx
 1006187:	leave  
 1006188:	ret    
 1006189:	int3   
 100618a:	int3   
 100618b:	int3   
 100618c:	int3   
 100618d:	int3   
 100618e:	mov    edi,edi
 1006190:	push   ebp
 1006191:	mov    ebp,esp
 1006193:	push   ecx
 1006194:	cmp    BYTE PTR ds:0x100c730,0x0
 100619b:	jne    0x10061b4
 100619d:	push   DWORD PTR [ebp+0x8]
 10061a0:	call   0x100620f
 10061a5:	pop    ecx
 10061a6:	mov    ds:0x100c72c,eax
 10061ab:	mov    BYTE PTR ds:0x100c730,0x1
 10061b2:	jmp    0x10061b9
 10061b4:	mov    eax,ds:0x100c72c
 10061b9:	push   ebx
 10061ba:	push   esi
 10061bb:	push   DWORD PTR [ebp+0xc]
 10061be:	xor    esi,esi
 10061c0:	push   eax
 10061c1:	lea    ecx,[ebp-0x4]
 10061c4:	mov    DWORD PTR [ebp-0x4],esi
 10061c7:	call   0x10060e7
 10061cc:	mov    bl,al
 10061ce:	test   bl,bl
 10061d0:	jne    0x10061f0
 10061d2:	push   DWORD PTR [ebp+0xc]
 10061d5:	lea    ecx,[ebp-0x4]
 10061d8:	push   DWORD PTR [ebp+0x8]
 10061db:	call   0x10060e7
 10061e0:	mov    bl,al
 10061e2:	test   bl,bl
 10061e4:	jne    0x10061f0
 10061e6:	mov    eax,DWORD PTR [ebp+0x10]
 10061e9:	mov    DWORD PTR [eax],esi
 10061eb:	mov    esi,DWORD PTR [ebp-0x4]
 10061ee:	jmp    0x10061f8
 10061f0:	mov    ecx,DWORD PTR [ebp-0x4]
 10061f3:	mov    eax,DWORD PTR [ebp+0x10]
 10061f6:	mov    DWORD PTR [eax],ecx
 10061f8:	push   esi
 10061f9:	call   DWORD PTR ds:0x1001244
 10061ff:	xor    eax,eax
 1006201:	test   bl,bl
 1006203:	pop    esi
 1006204:	setne  al
 1006207:	pop    ebx
 1006208:	leave  
 1006209:	ret    
 100620a:	int3   
 100620b:	int3   
 100620c:	int3   
 100620d:	int3   
 100620e:	int3   
 100620f:	mov    edi,edi
 1006211:	push   ebp
 1006212:	mov    ebp,esp
 1006214:	call   DWORD PTR ds:0x1001100
 100621a:	mov    ecx,0x409
 100621f:	cmp    ax,cx
 1006222:	je     0x1006230
 1006224:	push   DWORD PTR [ebp+0x8]
 1006227:	call   0x100697c
 100622c:	test   eax,eax
 100622e:	jne    0x1006233
 1006230:	mov    eax,DWORD PTR [ebp+0x8]
 1006233:	pop    ebp
 1006234:	ret    
 1006235:	int3   
 1006236:	int3   
 1006237:	int3   
 1006238:	int3   
 1006239:	int3   
 100623a:	mov    edi,edi
 100623c:	push   ebp
 100623d:	mov    ebp,esp
 100623f:	push   ecx
 1006240:	push   ebx
 1006241:	push   esi
 1006242:	mov    esi,DWORD PTR [ebp+0xc]
 1006245:	push   edi
 1006246:	mov    edi,DWORD PTR [ebp+0x10]
 1006249:	mov    eax,DWORD PTR [edi]
 100624b:	add    eax,eax
 100624d:	mov    DWORD PTR [ebp-0x4],eax
 1006250:	lea    eax,[ebp-0x4]
 1006253:	push   eax
 1006254:	push   esi
 1006255:	lea    eax,[ebp+0x10]
 1006258:	push   eax
 1006259:	xor    ebx,ebx
 100625b:	push   ebx
 100625c:	push   DWORD PTR [ebp+0x8]
 100625f:	mov    DWORD PTR [edi],ebx
 1006261:	push   DWORD PTR [ecx]
 1006263:	call   DWORD PTR ds:0x1001004
 1006269:	test   eax,eax
 100626b:	jne    0x10062a6
 100626d:	cmp    DWORD PTR [ebp+0x10],0x1
 1006271:	je     0x100627e
 1006273:	cmp    DWORD PTR [ebp+0x10],0x2
 1006277:	je     0x100627e
 1006279:	push   0xd
 100627b:	pop    eax
 100627c:	jmp    0x10062a6
 100627e:	mov    ecx,DWORD PTR [ebp-0x4]
 1006281:	test   esi,esi
 1006283:	je     0x10062a0
 1006285:	test   ecx,ecx
 1006287:	je     0x100629b
 1006289:	test   cl,0x1
 100628c:	jne    0x1006279
 100628e:	mov    eax,ecx
 1006290:	shr    eax,1
 1006292:	cmp    WORD PTR [esi+eax*2-0x2],bx
 1006297:	je     0x10062a0
 1006299:	jmp    0x1006279
 100629b:	xor    eax,eax
 100629d:	mov    WORD PTR [esi],ax
 10062a0:	shr    ecx,1
 10062a2:	mov    DWORD PTR [edi],ecx
 10062a4:	xor    eax,eax
 10062a6:	pop    edi
 10062a7:	pop    esi
 10062a8:	pop    ebx
 10062a9:	leave  
 10062aa:	ret    0xc
 10062ad:	int3   
 10062ae:	int3   
 10062af:	int3   
 10062b0:	int3   
 10062b1:	int3   
 10062b2:	mov    edi,edi
 10062b4:	push   ebp
 10062b5:	mov    ebp,esp
 10062b7:	sub    esp,0x10
 10062ba:	push   0x20019
 10062bf:	xor    eax,eax
 10062c1:	push   0x1001840
 10062c6:	push   0x80000002
 10062cb:	lea    ecx,[ebp-0x10]
 10062ce:	mov    DWORD PTR [ebp-0x10],eax
 10062d1:	mov    DWORD PTR [ebp-0xc],eax
 10062d4:	mov    DWORD PTR [ebp-0x8],eax
 10062d7:	call   0x10034ab
 10062dc:	test   eax,eax
 10062de:	je     0x10062fa
 10062e0:	push   0x1001898
 10062e5:	push   DWORD PTR [ebp+0xc]
 10062e8:	push   DWORD PTR [ebp+0x8]
 10062eb:	call   0x1003dbc
 10062f0:	lea    ecx,[ebp-0x10]
 10062f3:	call   0x1003507
 10062f8:	leave  
 10062f9:	ret    
 10062fa:	push   esi
 10062fb:	mov    esi,DWORD PTR [ebp+0xc]
 10062fe:	push   edi
 10062ff:	mov    edi,DWORD PTR [ebp+0x8]
 1006302:	lea    eax,[ebp-0x4]
 1006305:	push   eax
 1006306:	push   edi
 1006307:	push   0x100189c
 100630c:	lea    ecx,[ebp-0x10]
 100630f:	mov    DWORD PTR [ebp-0x4],esi
 1006312:	call   0x100623a
 1006317:	test   eax,eax
 1006319:	jne    0x1006322
 100631b:	mov    eax,DWORD PTR [ebp-0x4]
 100631e:	cmp    eax,esi
 1006320:	jb     0x1006330
 1006322:	push   0x1001898
 1006327:	push   esi
 1006328:	push   edi
 1006329:	call   0x1003dbc
 100632e:	jmp    0x1006336
 1006330:	xor    ecx,ecx
 1006332:	mov    WORD PTR [edi+eax*2],cx
 1006336:	lea    ecx,[ebp-0x10]
 1006339:	call   0x1003507
 100633e:	pop    edi
 100633f:	pop    esi
 1006340:	leave  
 1006341:	ret    
 1006342:	int3   
 1006343:	int3   
 1006344:	int3   
 1006345:	int3   
 1006346:	int3   
 1006347:	mov    edi,edi
 1006349:	push   ebp
 100634a:	mov    ebp,esp
 100634c:	sub    esp,0x20c
 1006352:	mov    eax,ds:0x100c088
 1006357:	xor    eax,ebp
 1006359:	mov    DWORD PTR [ebp-0x4],eax
 100635c:	mov    eax,0x104
 1006361:	push   esi
 1006362:	mov    esi,DWORD PTR [ebp+0x8]
 1006365:	cmp    DWORD PTR [ebp+0xc],eax
 1006368:	jb     0x1006392
 100636a:	push   eax
 100636b:	lea    eax,[ebp-0x20c]
 1006371:	push   eax
 1006372:	call   0x10062b2
 1006377:	pop    ecx
 1006378:	pop    ecx
 1006379:	push   esi
 100637a:	push   0x0
 100637c:	push   0x10018c0
 1006381:	lea    eax,[ebp-0x20c]
 1006387:	push   eax
 1006388:	call   DWORD PTR ds:0x10010f0
 100638e:	test   eax,eax
 1006390:	jne    0x10063a0
 1006392:	push   0x100182c
 1006397:	push   DWORD PTR [ebp+0xc]
 100639a:	push   esi
 100639b:	call   0x1003dbc
 10063a0:	mov    ecx,DWORD PTR [ebp-0x4]
 10063a3:	xor    ecx,ebp
 10063a5:	pop    esi
 10063a6:	call   0x1005953
 10063ab:	leave  
 10063ac:	ret    
 10063ad:	int3   
 10063ae:	int3   
 10063af:	int3   
 10063b0:	int3   
 10063b1:	int3   
 10063b2:	mov    edi,edi
 10063b4:	push   ebp
 10063b5:	mov    ebp,esp
 10063b7:	mov    eax,0x2188
 10063bc:	call   0x100a0c0
 10063c1:	mov    eax,ds:0x100c088
 10063c6:	xor    eax,ebp
 10063c8:	mov    DWORD PTR [ebp-0x4],eax
 10063cb:	push   ebx
 10063cc:	mov    ebx,DWORD PTR ds:0x10010f8
 10063d2:	push   esi
 10063d3:	push   edi
 10063d4:	mov    edi,DWORD PTR [ebp+0x8]
 10063d7:	xor    esi,esi
 10063d9:	push   esi
 10063da:	lea    eax,[ebp-0x114c]
 10063e0:	push   eax
 10063e1:	push   0x2
 10063e3:	lea    eax,[ebp-0x1150]
 10063e9:	push   eax
 10063ea:	push   edi
 10063eb:	mov    WORD PTR [ebp-0x1150],0xfeff
 10063f4:	mov    DWORD PTR [ebp-0x1158],esi
 10063fa:	call   ebx
 10063fc:	xor    eax,eax
 10063fe:	push   0x7fe
 1006403:	mov    WORD PTR [ebp-0xa04],ax
 100640a:	lea    eax,[ebp-0xa02]
 1006410:	push   esi
 1006411:	push   eax
 1006412:	call   0x1005aee
 1006417:	xor    eax,eax
 1006419:	mov    esi,0xfe
 100641e:	push   esi
 100641f:	push   eax
 1006420:	mov    WORD PTR [ebp-0x104],ax
 1006427:	lea    eax,[ebp-0x102]
 100642d:	push   eax
 100642e:	call   0x1005aee
 1006433:	xor    eax,eax
 1006435:	push   esi
 1006436:	mov    WORD PTR [ebp-0x204],ax
 100643d:	xor    esi,esi
 100643f:	lea    eax,[ebp-0x202]
 1006445:	push   esi
 1006446:	push   eax
 1006447:	call   0x1005aee
 100644c:	add    esp,0x24
 100644f:	push   0x80
 1006454:	lea    eax,[ebp-0x104]
 100645a:	push   eax
 100645b:	push   0x10018c8
 1006460:	push   esi
 1006461:	push   esi
 1006462:	push   0x400
 1006467:	call   DWORD PTR ds:0x10010e0
 100646d:	test   eax,eax
 100646f:	je     0x10064e8
 1006471:	push   0x80
 1006476:	lea    eax,[ebp-0x204]
 100647c:	push   eax
 100647d:	push   0x10018e0
 1006482:	push   esi
 1006483:	push   esi
 1006484:	push   0x400
 1006489:	call   DWORD PTR ds:0x10010e4
 100648f:	test   eax,eax
 1006491:	je     0x10064e8
 1006493:	lea    eax,[ebp-0x204]
 1006499:	push   eax
 100649a:	lea    eax,[ebp-0x104]
 10064a0:	push   eax
 10064a1:	push   0x10018f8
 10064a6:	lea    eax,[ebp-0xa04]
 10064ac:	push   0x400
 10064b1:	push   eax
 10064b2:	call   0x100691f
 10064b7:	lea    ecx,[ebp-0xa04]
 10064bd:	add    esp,0x14
 10064c0:	lea    edx,[ecx+0x2]
 10064c3:	mov    ax,WORD PTR [ecx]
 10064c6:	add    ecx,0x2
 10064c9:	cmp    ax,si
 10064cc:	jne    0x10064c3
 10064ce:	push   esi
 10064cf:	sub    ecx,edx
 10064d1:	lea    eax,[ebp-0x114c]
 10064d7:	push   eax
 10064d8:	sar    ecx,1
 10064da:	lea    eax,[ecx+ecx*1]
 10064dd:	push   eax
 10064de:	lea    eax,[ebp-0xa04]
 10064e4:	push   eax
 10064e5:	push   edi
 10064e6:	call   ebx
 10064e8:	call   DWORD PTR ds:0x1001074
 10064ee:	push   eax
 10064ef:	push   0x1001944
 10064f4:	lea    eax,[ebp-0xa04]
 10064fa:	push   0x400
 10064ff:	push   eax
 1006500:	call   0x100691f
 1006505:	lea    ecx,[ebp-0xa04]
 100650b:	add    esp,0x10
 100650e:	lea    edx,[ecx+0x2]
 1006511:	mov    ax,WORD PTR [ecx]
 1006514:	add    ecx,0x2
 1006517:	cmp    ax,si
 100651a:	jne    0x1006511
 100651c:	push   esi
 100651d:	sub    ecx,edx
 100651f:	lea    eax,[ebp-0x114c]
 1006525:	push   eax
 1006526:	sar    ecx,1
 1006528:	lea    eax,[ecx+ecx*1]
 100652b:	push   eax
 100652c:	lea    eax,[ebp-0xa04]
 1006532:	push   eax
 1006533:	push   edi
 1006534:	call   ebx
 1006536:	push   0x80
 100653b:	lea    eax,[ebp-0x104]
 1006541:	push   eax
 1006542:	push   esi
 1006543:	call   DWORD PTR ds:0x1001060
 1006549:	test   eax,eax
 100654b:	je     0x100659b
 100654d:	lea    eax,[ebp-0x104]
 1006553:	push   eax
 1006554:	push   0x100195c
 1006559:	lea    eax,[ebp-0xa04]
 100655f:	push   0x400
 1006564:	push   eax
 1006565:	call   0x100691f
 100656a:	lea    ecx,[ebp-0xa04]
 1006570:	add    esp,0x10
 1006573:	lea    edx,[ecx+0x2]
 1006576:	mov    ax,WORD PTR [ecx]
 1006579:	add    ecx,0x2
 100657c:	cmp    ax,si
 100657f:	jne    0x1006576
 1006581:	push   esi
 1006582:	sub    ecx,edx
 1006584:	lea    eax,[ebp-0x114c]
 100658a:	push   eax
 100658b:	sar    ecx,1
 100658d:	lea    eax,[ecx+ecx*1]
 1006590:	push   eax
 1006591:	lea    eax,[ebp-0xa04]
 1006597:	push   eax
 1006598:	push   edi
 1006599:	call   ebx
 100659b:	mov    esi,0x11c
 10065a0:	xor    eax,eax
 10065a2:	push   esi
 10065a3:	push   eax
 10065a4:	lea    eax,[ebp-0x1148]
 10065aa:	push   eax
 10065ab:	call   0x1005aee
 10065b0:	add    esp,0xc
 10065b3:	lea    eax,[ebp-0x1148]
 10065b9:	push   eax
 10065ba:	mov    DWORD PTR [ebp-0x1148],esi
 10065c0:	call   DWORD PTR ds:0x10010ec
 10065c6:	test   eax,eax
 10065c8:	je     0x100662e
 10065ca:	lea    eax,[ebp-0x1134]
 10065d0:	push   eax
 10065d1:	push   DWORD PTR [ebp-0x113c]
 10065d7:	lea    eax,[ebp-0xa04]
 10065dd:	push   DWORD PTR [ebp-0x1140]
 10065e3:	push   DWORD PTR [ebp-0x1144]
 10065e9:	push   0x1001988
 10065ee:	push   0x400
 10065f3:	push   eax
 10065f4:	call   0x100691f
 10065f9:	lea    ecx,[ebp-0xa04]
 10065ff:	add    esp,0x1c
 1006602:	lea    edx,[ecx+0x2]
 1006605:	xor    esi,esi
 1006607:	mov    ax,WORD PTR [ecx]
 100660a:	add    ecx,0x2
 100660d:	cmp    ax,si
 1006610:	jne    0x1006607
 1006612:	push   esi
 1006613:	sub    ecx,edx
 1006615:	lea    eax,[ebp-0x114c]
 100661b:	push   eax
 100661c:	sar    ecx,1
 100661e:	lea    eax,[ecx+ecx*1]
 1006621:	push   eax
 1006622:	lea    eax,[ebp-0xa04]
 1006628:	push   eax
 1006629:	push   edi
 100662a:	call   ebx
 100662c:	jmp    0x1006630
 100662e:	xor    esi,esi
 1006630:	lea    eax,[ebp-0x1188]
 1006636:	push   eax
 1006637:	call   DWORD PTR ds:0x10010f4
 100663d:	movzx  eax,WORD PTR [ebp-0x1188]
 1006644:	test   eax,eax
 1006646:	je     0x100666d
 1006648:	cmp    eax,0x6
 100664b:	je     0x1006666
 100664d:	cmp    eax,0x9
 1006650:	lea    eax,[ebp-0x104]
 1006656:	je     0x100665f
 1006658:	push   0x10019f4
 100665d:	jmp    0x1006678
 100665f:	push   0x10019d4
 1006664:	jmp    0x1006678
 1006666:	push   0x10019e0
 100666b:	jmp    0x1006672
 100666d:	push   0x10019ec
 1006672:	lea    eax,[ebp-0x104]
 1006678:	push   0x80
 100667d:	push   eax
 100667e:	call   0x1003dbc
 1006683:	lea    eax,[ebp-0x115c]
 1006689:	mov    DWORD PTR [ebp-0x115c],esi
 100668f:	mov    esi,DWORD PTR ds:0x1001070
 1006695:	push   eax
 1006696:	call   esi
 1006698:	push   eax
 1006699:	call   DWORD PTR ds:0x10010e8
 100669f:	cmp    DWORD PTR [ebp-0x115c],0x0
 10066a6:	mov    eax,0x1001a08
 10066ab:	jne    0x10066b2
 10066ad:	mov    eax,0x100182c
 10066b2:	cmp    DWORD PTR [ebp-0x1174],0x1
 10066b9:	mov    ecx,0x1001a20
 10066be:	ja     0x10066c5
 10066c0:	mov    ecx,0x1001a38
 10066c5:	push   eax
 10066c6:	push   ecx
 10066c7:	lea    eax,[ebp-0x104]
 10066cd:	push   eax
 10066ce:	push   DWORD PTR [ebp-0x1174]
 10066d4:	lea    eax,[ebp-0xa04]
 10066da:	push   0x1001a4c
 10066df:	push   0x400
 10066e4:	push   eax
 10066e5:	call   0x100691f
 10066ea:	lea    ecx,[ebp-0xa04]
 10066f0:	add    esp,0x1c
 10066f3:	lea    edx,[ecx+0x2]
 10066f6:	mov    ax,WORD PTR [ecx]
 10066f9:	add    ecx,0x2
 10066fc:	cmp    ax,WORD PTR [ebp-0x1158]
 1006703:	jne    0x10066f6
 1006705:	xor    eax,eax
 1006707:	push   eax
 1006708:	sub    ecx,edx
 100670a:	lea    eax,[ebp-0x114c]
 1006710:	push   eax
 1006711:	sar    ecx,1
 1006713:	lea    eax,[ecx+ecx*1]
 1006716:	push   eax
 1006717:	lea    eax,[ebp-0xa04]
 100671d:	push   eax
 100671e:	push   edi
 100671f:	call   ebx
 1006721:	lea    eax,[ebp-0x102c]
 1006727:	push   eax
 1006728:	call   DWORD PTR ds:0x10010fc
 100672e:	mov    eax,DWORD PTR [ebp-0x101c]
 1006734:	shr    eax,0x14
 1006737:	push   eax
 1006738:	mov    eax,DWORD PTR [ebp-0x1018]
 100673e:	shr    eax,0x14
 1006741:	push   eax
 1006742:	mov    eax,DWORD PTR [ebp-0x1024]
 1006748:	shr    eax,0x14
 100674b:	push   eax
 100674c:	mov    eax,DWORD PTR [ebp-0x1020]
 1006752:	shr    eax,0x14
 1006755:	push   eax
 1006756:	push   DWORD PTR [ebp-0x1028]
 100675c:	lea    eax,[ebp-0xa04]
 1006762:	push   0x1001a88
 1006767:	push   0x400
 100676c:	push   eax
 100676d:	call   0x100691f
 1006772:	lea    ecx,[ebp-0xa04]
 1006778:	add    esp,0x20
 100677b:	lea    edx,[ecx+0x2]
 100677e:	mov    ax,WORD PTR [ecx]
 1006781:	add    ecx,0x2
 1006784:	cmp    ax,WORD PTR [ebp-0x1158]
 100678b:	jne    0x100677e
 100678d:	xor    eax,eax
 100678f:	push   eax
 1006790:	sub    ecx,edx
 1006792:	lea    eax,[ebp-0x114c]
 1006798:	push   eax
 1006799:	sar    ecx,1
 100679b:	lea    eax,[ecx+ecx*1]
 100679e:	push   eax
 100679f:	lea    eax,[ebp-0xa04]
 10067a5:	push   eax
 10067a6:	push   edi
 10067a7:	call   ebx
 10067a9:	xor    eax,eax
 10067ab:	mov    DWORD PTR [ebp-0x1154],eax
 10067b1:	lea    eax,[ebp-0x1154]
 10067b7:	push   eax
 10067b8:	push   0x400
 10067bd:	lea    eax,[ebp-0x2188]
 10067c3:	push   eax
 10067c4:	call   esi
 10067c6:	push   eax
 10067c7:	call   0x100a428
 10067cc:	test   eax,eax
 10067ce:	je     0x100690b
 10067d4:	mov    eax,DWORD PTR [ebp-0x1154]
 10067da:	mov    ecx,0x1000
 10067df:	cmp    eax,ecx
 10067e1:	jbe    0x10067eb
 10067e3:	mov    eax,ecx
 10067e5:	mov    DWORD PTR [ebp-0x1154],eax
 10067eb:	xor    ecx,ecx
 10067ed:	mov    esi,ecx
 10067ef:	test   eax,0xfffffffc
 10067f4:	jbe    0x100690b
 10067fa:	push   0x104
 10067ff:	lea    eax,[ebp-0xc0c]
 1006805:	push   eax
 1006806:	push   DWORD PTR [ebp+esi*4-0x2188]
 100680d:	call   DWORD PTR ds:0x1001070
 1006813:	push   eax
 1006814:	call   0x100a434
 1006819:	test   eax,eax
 100681b:	je     0x10068f9
 1006821:	lea    eax,[ebp-0x100c]
 1006827:	push   eax
 1006828:	xor    ecx,ecx
 100682a:	push   0x400
 100682f:	push   ecx
 1006830:	lea    eax,[ebp-0xc0c]
 1006836:	push   eax
 1006837:	mov    DWORD PTR [ebp-0x1160],ecx
 100683d:	call   0x100a410
 1006842:	test   eax,eax
 1006844:	je     0x10068a5
 1006846:	lea    eax,[ebp-0x1164]
 100684c:	push   eax
 100684d:	lea    eax,[ebp-0x1160]
 1006853:	push   eax
 1006854:	push   0x1001b20
 1006859:	lea    eax,[ebp-0x100c]
 100685f:	push   eax
 1006860:	call   0x100a41c
 1006865:	test   eax,eax
 1006867:	je     0x10068a5
 1006869:	mov    ecx,DWORD PTR [ebp-0x1160]
 100686f:	movzx  eax,WORD PTR [ecx+0x14]
 1006873:	push   eax
 1006874:	movzx  eax,WORD PTR [ecx+0x16]
 1006878:	push   eax
 1006879:	movzx  eax,WORD PTR [ecx+0x10]
 100687d:	push   eax
 100687e:	movzx  eax,WORD PTR [ecx+0x12]
 1006882:	push   eax
 1006883:	lea    eax,[ebp-0xc0c]
 1006889:	push   eax
 100688a:	push   0x1001b28
 100688f:	lea    eax,[ebp-0xa04]
 1006895:	push   0x400
 100689a:	push   eax
 100689b:	call   0x100691f
 10068a0:	add    esp,0x20
 10068a3:	jmp    0x10068c5
 10068a5:	lea    eax,[ebp-0xc0c]
 10068ab:	push   eax
 10068ac:	push   0x1001b78
 10068b1:	lea    eax,[ebp-0xa04]
 10068b7:	push   0x400
 10068bc:	push   eax
 10068bd:	call   0x100691f
 10068c2:	add    esp,0x10
 10068c5:	lea    ecx,[ebp-0xa04]
 10068cb:	lea    edx,[ecx+0x2]
 10068ce:	mov    ax,WORD PTR [ecx]
 10068d1:	add    ecx,0x2
 10068d4:	cmp    ax,WORD PTR [ebp-0x1158]
 10068db:	jne    0x10068ce
 10068dd:	xor    eax,eax
 10068df:	push   eax
 10068e0:	sub    ecx,edx
 10068e2:	lea    eax,[ebp-0x114c]
 10068e8:	push   eax
 10068e9:	sar    ecx,1
 10068eb:	lea    eax,[ecx+ecx*1]
 10068ee:	push   eax
 10068ef:	lea    eax,[ebp-0xa04]
 10068f5:	push   eax
 10068f6:	push   edi
 10068f7:	call   ebx
 10068f9:	mov    eax,DWORD PTR [ebp-0x1154]
 10068ff:	inc    esi
 1006900:	shr    eax,0x2
 1006903:	cmp    esi,eax
 1006905:	jb     0x10067fa
 100690b:	mov    ecx,DWORD PTR [ebp-0x4]
 100690e:	pop    edi
 100690f:	pop    esi
 1006910:	xor    ecx,ebp
 1006912:	pop    ebx
 1006913:	call   0x1005953
 1006918:	leave  
 1006919:	ret    
 100691a:	int3   
 100691b:	int3   
 100691c:	int3   
 100691d:	int3   
 100691e:	int3   
 100691f:	mov    edi,edi
 1006921:	push   ebp
 1006922:	mov    ebp,esp
 1006924:	push   esi
 1006925:	push   edi
 1006926:	mov    edi,DWORD PTR [ebp+0xc]
 1006929:	xor    esi,esi
 100692b:	test   edi,edi
 100692d:	je     0x1006937
 100692f:	cmp    edi,0x7fffffff
 1006935:	jbe    0x100693c
 1006937:	mov    esi,0x80070057
 100693c:	test   esi,esi
 100693e:	js     0x1006971
 1006940:	push   ebx
 1006941:	mov    ebx,DWORD PTR [ebp+0x8]
 1006944:	lea    eax,[ebp+0x14]
 1006947:	push   eax
 1006948:	push   DWORD PTR [ebp+0x10]
 100694b:	xor    esi,esi
 100694d:	dec    edi
 100694e:	push   edi
 100694f:	push   ebx
 1006950:	call   DWORD PTR ds:0x10011f0
 1006956:	add    esp,0x10
 1006959:	test   eax,eax
 100695b:	js     0x1006965
 100695d:	cmp    eax,edi
 100695f:	ja     0x1006965
 1006961:	jne    0x1006970
 1006963:	jmp    0x100696a
 1006965:	mov    esi,0x8007007a
 100696a:	xor    eax,eax
 100696c:	mov    WORD PTR [ebx+edi*2],ax
 1006970:	pop    ebx
 1006971:	pop    edi
 1006972:	mov    eax,esi
 1006974:	pop    esi
 1006975:	pop    ebp
 1006976:	ret    
 1006977:	int3   
 1006978:	int3   
 1006979:	int3   
 100697a:	int3   
 100697b:	int3   
 100697c:	mov    edi,edi
 100697e:	push   ebp
 100697f:	mov    ebp,esp
 1006981:	call   DWORD PTR ds:0x1001100
 1006987:	movzx  eax,ax
 100698a:	push   eax
 100698b:	push   DWORD PTR [ebp+0x8]
 100698e:	call   0x100699c
 1006993:	pop    ebp
 1006994:	ret    0x4
 1006997:	int3   
 1006998:	int3   
 1006999:	int3   
 100699a:	int3   
 100699b:	int3   
 100699c:	mov    edi,edi
 100699e:	push   ebp
 100699f:	mov    ebp,esp
 10069a1:	sub    esp,0x210
 10069a7:	mov    eax,ds:0x100c088
 10069ac:	xor    eax,ebp
 10069ae:	mov    DWORD PTR [ebp-0x4],eax
 10069b1:	mov    ecx,DWORD PTR [ebp+0x8]
 10069b4:	mov    edx,DWORD PTR [ebp+0xc]
 10069b7:	push   0x0
 10069b9:	lea    eax,[ebp-0x210]
 10069bf:	push   0x105
 10069c4:	push   eax
 10069c5:	call   0x1006a97
 10069ca:	add    esp,0xc
 10069cd:	test   al,al
 10069cf:	jne    0x10069d5
 10069d1:	xor    eax,eax
 10069d3:	jmp    0x10069e2
 10069d5:	lea    eax,[ebp-0x210]
 10069db:	push   eax
 10069dc:	call   DWORD PTR ds:0x10010d0
 10069e2:	mov    ecx,DWORD PTR [ebp-0x4]
 10069e5:	xor    ecx,ebp
 10069e7:	call   0x1005953
 10069ec:	leave  
 10069ed:	ret    0x8
 10069f0:	int3   
 10069f1:	int3   
 10069f2:	int3   
 10069f3:	int3   
 10069f4:	int3   
 10069f5:	mov    edi,edi
 10069f7:	push   ebp
 10069f8:	mov    ebp,esp
 10069fa:	sub    esp,0x214
 1006a00:	mov    eax,ds:0x100c088
 1006a05:	xor    eax,ebp
 1006a07:	mov    DWORD PTR [ebp-0x4],eax
 1006a0a:	mov    eax,DWORD PTR [ebp+0x8]
 1006a0d:	push   ebx
 1006a0e:	push   esi
 1006a0f:	mov    esi,ecx
 1006a11:	push   0x105
 1006a16:	lea    ecx,[ebp-0x210]
 1006a1c:	push   ecx
 1006a1d:	push   eax
 1006a1e:	mov    ebx,edx
 1006a20:	call   DWORD PTR ds:0x1001060
 1006a26:	test   eax,eax
 1006a28:	je     0x1006a82
 1006a2a:	lea    eax,[ebp-0x214]
 1006a30:	push   eax
 1006a31:	push   esi
 1006a32:	push   DWORD PTR [ebp+0xc]
 1006a35:	lea    eax,[ebp-0x210]
 1006a3b:	push   eax
 1006a3c:	call   DWORD PTR ds:0x10010cc
 1006a42:	test   eax,eax
 1006a44:	je     0x1006a82
 1006a46:	cmp    eax,DWORD PTR [ebp+0xc]
 1006a49:	ja     0x1006a82
 1006a4b:	xor    eax,eax
 1006a4d:	cmp    ax,WORD PTR [ebx]
 1006a50:	jne    0x1006a65
 1006a52:	push   DWORD PTR [ebp-0x214]
 1006a58:	mov    ecx,DWORD PTR [ebp+0x10]
 1006a5b:	call   0x1006e17
 1006a60:	pop    ecx
 1006a61:	test   al,al
 1006a63:	je     0x1006a82
 1006a65:	mov    ecx,DWORD PTR [ebp-0x214]
 1006a6b:	xor    eax,eax
 1006a6d:	mov    WORD PTR [ecx],ax
 1006a70:	mov    eax,DWORD PTR [ebp+0x10]
 1006a73:	push   0x1001bc8
 1006a78:	mov    esi,ebx
 1006a7a:	call   0x1006c6f
 1006a7f:	pop    ecx
 1006a80:	jmp    0x1006a84
 1006a82:	xor    al,al
 1006a84:	mov    ecx,DWORD PTR [ebp-0x4]
 1006a87:	pop    esi
 1006a88:	xor    ecx,ebp
 1006a8a:	pop    ebx
 1006a8b:	call   0x1005953
 1006a90:	leave  
 1006a91:	ret    
 1006a92:	int3   
 1006a93:	int3   
 1006a94:	int3   
 1006a95:	int3   
 1006a96:	int3   
 1006a97:	mov    edi,edi
 1006a99:	push   ebp
 1006a9a:	mov    ebp,esp
 1006a9c:	sub    esp,0x420
 1006aa2:	mov    eax,ds:0x100c088
 1006aa7:	xor    eax,ebp
 1006aa9:	mov    DWORD PTR [ebp-0x4],eax
 1006aac:	mov    eax,DWORD PTR [ebp+0x10]
 1006aaf:	push   ebx
 1006ab0:	push   esi
 1006ab1:	mov    esi,edx
 1006ab3:	xor    edx,edx
 1006ab5:	push   edi
 1006ab6:	mov    edi,DWORD PTR [ebp+0x8]
 1006ab9:	mov    WORD PTR [ebp-0x210],dx
 1006ac0:	mov    DWORD PTR [ebp-0x420],ecx
 1006ac6:	mov    edx,0x105
 1006acb:	test   eax,eax
 1006acd:	je     0x1006af4
 1006acf:	push   eax
 1006ad0:	mov    ecx,edx
 1006ad2:	lea    ebx,[ebp-0x210]
 1006ad8:	call   0x1006e17
 1006add:	pop    ecx
 1006ade:	test   al,al
 1006ae0:	jne    0x1006ae9
 1006ae2:	xor    al,al
 1006ae4:	jmp    0x1006c12
 1006ae9:	mov    ecx,DWORD PTR [ebp-0x420]
 1006aef:	mov    edx,0x105
 1006af4:	movzx  eax,si
 1006af7:	cmp    eax,0xc04
 1006afc:	je     0x1006b0c
 1006afe:	cmp    eax,0x1004
 1006b03:	jne    0x1006b11
 1006b05:	mov    esi,0x804
 1006b0a:	jmp    0x1006b11
 1006b0c:	mov    esi,0x404
 1006b11:	push   edx
 1006b12:	push   edx
 1006b13:	push   ecx
 1006b14:	lea    edx,[ebp-0x210]
 1006b1a:	lea    ecx,[ebp-0x41c]
 1006b20:	call   0x10069f5
 1006b25:	add    esp,0xc
 1006b28:	test   al,al
 1006b2a:	je     0x1006ae2
 1006b2c:	lea    eax,[ebp-0x41c]
 1006b32:	push   eax
 1006b33:	push   esi
 1006b34:	push   DWORD PTR [ebp+0xc]
 1006b37:	mov    edx,0x1001bd4
 1006b3c:	push   edi
 1006b3d:	lea    ecx,[ebp-0x210]
 1006b43:	call   0x1006d1d
 1006b48:	push   edi
 1006b49:	call   0x1006c26
 1006b4e:	add    esp,0x14
 1006b51:	test   al,al
 1006b53:	je     0x1006b5c
 1006b55:	mov    al,0x1
 1006b57:	jmp    0x1006c12
 1006b5c:	lea    eax,[ebp-0x41c]
 1006b62:	push   eax
 1006b63:	push   esi
 1006b64:	push   DWORD PTR [ebp+0xc]
 1006b67:	xor    edx,edx
 1006b69:	push   edi
 1006b6a:	lea    ecx,[ebp-0x210]
 1006b70:	call   0x1006d1d
 1006b75:	push   edi
 1006b76:	call   0x1006c26
 1006b7b:	add    esp,0x14
 1006b7e:	test   al,al
 1006b80:	jne    0x1006b55
 1006b82:	mov    ebx,0x409
 1006b87:	cmp    bx,si
 1006b8a:	je     0x1006bdf
 1006b8c:	lea    eax,[ebp-0x41c]
 1006b92:	push   eax
 1006b93:	push   ebx
 1006b94:	push   DWORD PTR [ebp+0xc]
 1006b97:	mov    edx,0x1001bd4
 1006b9c:	push   edi
 1006b9d:	lea    ecx,[ebp-0x210]
 1006ba3:	call   0x1006d1d
 1006ba8:	push   edi
 1006ba9:	call   0x1006c26
 1006bae:	add    esp,0x14
 1006bb1:	test   al,al
 1006bb3:	jne    0x1006b55
 1006bb5:	lea    eax,[ebp-0x41c]
 1006bbb:	push   eax
 1006bbc:	push   ebx
 1006bbd:	push   DWORD PTR [ebp+0xc]
 1006bc0:	xor    edx,edx
 1006bc2:	push   edi
 1006bc3:	lea    ecx,[ebp-0x210]
 1006bc9:	call   0x1006d1d
 1006bce:	push   edi
 1006bcf:	call   0x1006c26
 1006bd4:	add    esp,0x14
 1006bd7:	test   al,al
 1006bd9:	jne    0x1006b55
 1006bdf:	mov    ecx,DWORD PTR [ebp+0xc]
 1006be2:	lea    eax,[ebp-0x41c]
 1006be8:	push   eax
 1006be9:	mov    ebx,edi
 1006beb:	call   0x1006e17
 1006bf0:	pop    ecx
 1006bf1:	test   al,al
 1006bf3:	je     0x1006c06
 1006bf5:	lea    eax,[ebp-0x210]
 1006bfb:	push   eax
 1006bfc:	push   DWORD PTR [ebp+0xc]
 1006bff:	call   0x1006cb0
 1006c04:	pop    ecx
 1006c05:	pop    ecx
 1006c06:	push   edi
 1006c07:	call   0x1006c26
 1006c0c:	test   al,al
 1006c0e:	pop    ecx
 1006c0f:	setne  al
 1006c12:	mov    ecx,DWORD PTR [ebp-0x4]
 1006c15:	pop    edi
 1006c16:	pop    esi
 1006c17:	xor    ecx,ebp
 1006c19:	pop    ebx
 1006c1a:	call   0x1005953
 1006c1f:	leave  
 1006c20:	ret    
 1006c21:	int3   
 1006c22:	int3   
 1006c23:	int3   
 1006c24:	int3   
 1006c25:	int3   
 1006c26:	mov    edi,edi
 1006c28:	push   ebp
 1006c29:	mov    ebp,esp
 1006c2b:	sub    esp,0x254
 1006c31:	mov    eax,ds:0x100c088
 1006c36:	xor    eax,ebp
 1006c38:	mov    DWORD PTR [ebp-0x4],eax
 1006c3b:	mov    eax,DWORD PTR [ebp+0x8]
 1006c3e:	lea    ecx,[ebp-0x254]
 1006c44:	push   ecx
 1006c45:	push   eax
 1006c46:	call   DWORD PTR ds:0x10010c8
 1006c4c:	cmp    eax,0xffffffff
 1006c4f:	jne    0x1006c55
 1006c51:	xor    al,al
 1006c53:	jmp    0x1006c5e
 1006c55:	push   eax
 1006c56:	call   DWORD PTR ds:0x10010d4
 1006c5c:	mov    al,0x1
 1006c5e:	mov    ecx,DWORD PTR [ebp-0x4]
 1006c61:	xor    ecx,ebp
 1006c63:	call   0x1005953
 1006c68:	leave  
 1006c69:	ret    
 1006c6a:	int3   
 1006c6b:	int3   
 1006c6c:	int3   
 1006c6d:	int3   
 1006c6e:	int3   
 1006c6f:	mov    edi,edi
 1006c71:	push   ebp
 1006c72:	mov    ebp,esp
 1006c74:	push   ebx
 1006c75:	push   edi
 1006c76:	mov    ecx,esi
 1006c78:	mov    edi,eax
 1006c7a:	call   0x1006e02
 1006c7f:	push   0x2e
 1006c81:	mov    edx,eax
 1006c83:	pop    ecx
 1006c84:	test   edx,edx
 1006c86:	je     0x1006c8f
 1006c88:	dec    edx
 1006c89:	cmp    cx,WORD PTR [esi+edx*2]
 1006c8d:	jne    0x1006c84
 1006c8f:	cmp    cx,WORD PTR [esi+edx*2]
 1006c93:	je     0x1006c97
 1006c95:	mov    edx,eax
 1006c97:	push   DWORD PTR [ebp+0x8]
 1006c9a:	sub    edi,edx
 1006c9c:	lea    ebx,[esi+edx*2]
 1006c9f:	mov    ecx,edi
 1006ca1:	call   0x1006e17
 1006ca6:	pop    ecx
 1006ca7:	pop    edi
 1006ca8:	pop    ebx
 1006ca9:	pop    ebp
 1006caa:	ret    
 1006cab:	int3   
 1006cac:	int3   
 1006cad:	int3   
 1006cae:	int3   
 1006caf:	int3   
 1006cb0:	mov    edi,edi
 1006cb2:	push   ebp
 1006cb3:	mov    ebp,esp
 1006cb5:	push   ebx
 1006cb6:	push   esi
 1006cb7:	mov    ecx,edi
 1006cb9:	call   0x1006e02
 1006cbe:	mov    esi,eax
 1006cc0:	test   esi,esi
 1006cc2:	je     0x1006cc7
 1006cc4:	lea    eax,[esi-0x1]
 1006cc7:	movzx  eax,WORD PTR [edi+eax*2]
 1006ccb:	push   0x5c
 1006ccd:	pop    edx
 1006cce:	cmp    dx,ax
 1006cd1:	je     0x1006d03
 1006cd3:	push   0x2f
 1006cd5:	pop    ecx
 1006cd6:	cmp    cx,ax
 1006cd9:	je     0x1006d03
 1006cdb:	mov    eax,DWORD PTR [ebp+0xc]
 1006cde:	movzx  eax,WORD PTR [eax]
 1006ce1:	cmp    dx,ax
 1006ce4:	je     0x1006d03
 1006ce6:	cmp    cx,ax
 1006ce9:	je     0x1006d03
 1006ceb:	mov    ecx,DWORD PTR [ebp+0x8]
 1006cee:	push   0x1001b20
 1006cf3:	sub    ecx,esi
 1006cf5:	lea    ebx,[edi+esi*2]
 1006cf8:	call   0x1006e17
 1006cfd:	pop    ecx
 1006cfe:	test   al,al
 1006d00:	je     0x1006d14
 1006d02:	inc    esi
 1006d03:	mov    ecx,DWORD PTR [ebp+0x8]
 1006d06:	push   DWORD PTR [ebp+0xc]
 1006d09:	sub    ecx,esi
 1006d0b:	lea    ebx,[edi+esi*2]
 1006d0e:	call   0x1006e17
 1006d13:	pop    ecx
 1006d14:	pop    esi
 1006d15:	pop    ebx
 1006d16:	pop    ebp
 1006d17:	ret    
 1006d18:	int3   
 1006d19:	int3   
 1006d1a:	int3   
 1006d1b:	int3   
 1006d1c:	int3   
 1006d1d:	mov    edi,edi
 1006d1f:	push   ebp
 1006d20:	mov    ebp,esp
 1006d22:	sub    esp,0x60
 1006d25:	mov    eax,ds:0x100c088
 1006d2a:	xor    eax,ebp
 1006d2c:	mov    DWORD PTR [ebp-0x4],eax
 1006d2f:	mov    eax,DWORD PTR [ebp+0x14]
 1006d32:	push   ebx
 1006d33:	mov    ebx,DWORD PTR [ebp+0x8]
 1006d36:	push   esi
 1006d37:	mov    DWORD PTR [ebp-0x60],ecx
 1006d3a:	mov    ecx,DWORD PTR [ebp+0xc]
 1006d3d:	push   eax
 1006d3e:	mov    esi,edx
 1006d40:	call   0x1006e17
 1006d45:	pop    ecx
 1006d46:	test   al,al
 1006d48:	je     0x1006def
 1006d4e:	push   edi
 1006d4f:	test   esi,esi
 1006d51:	je     0x1006d6f
 1006d53:	xor    eax,eax
 1006d55:	cmp    ax,WORD PTR [esi]
 1006d58:	je     0x1006d6f
 1006d5a:	push   0x1001be8
 1006d5f:	push   DWORD PTR [ebp+0xc]
 1006d62:	mov    edi,ebx
 1006d64:	call   0x1006cb0
 1006d69:	pop    ecx
 1006d6a:	pop    ecx
 1006d6b:	test   al,al
 1006d6d:	je     0x1006dd8
 1006d6f:	movzx  eax,WORD PTR [ebp+0x10]
 1006d73:	xor    ecx,ecx
 1006d75:	mov    WORD PTR [ebp-0x58],cx
 1006d79:	lea    edi,[ebp-0x58]
 1006d7c:	lea    esi,[ebp-0x56]
 1006d7f:	inc    ecx
 1006d80:	xor    edx,edx
 1006d82:	mov    DWORD PTR [ebp-0x5c],0xa
 1006d89:	div    DWORD PTR [ebp-0x5c]
 1006d8c:	push   0x2
 1006d8e:	mov    DWORD PTR [ebp-0x5c],eax
 1006d91:	lea    eax,[edx+0x30]
 1006d94:	mov    WORD PTR [esi],ax
 1006d97:	mov    eax,DWORD PTR [ebp-0x5c]
 1006d9a:	pop    edx
 1006d9b:	add    esi,edx
 1006d9d:	test   eax,eax
 1006d9f:	je     0x1006da7
 1006da1:	inc    ecx
 1006da2:	cmp    ecx,0x29
 1006da5:	jb     0x1006d80
 1006da7:	sub    esi,edx
 1006da9:	lea    eax,[ebp-0x58]
 1006dac:	cmp    eax,esi
 1006dae:	jae    0x1006dc4
 1006db0:	movzx  ecx,WORD PTR [edi]
 1006db3:	mov    ax,WORD PTR [esi]
 1006db6:	mov    WORD PTR [edi],ax
 1006db9:	mov    WORD PTR [esi],cx
 1006dbc:	add    edi,edx
 1006dbe:	sub    esi,edx
 1006dc0:	cmp    edi,esi
 1006dc2:	jb     0x1006db0
 1006dc4:	lea    eax,[ebp-0x58]
 1006dc7:	push   eax
 1006dc8:	push   DWORD PTR [ebp+0xc]
 1006dcb:	mov    edi,ebx
 1006dcd:	call   0x1006cb0
 1006dd2:	pop    ecx
 1006dd3:	pop    ecx
 1006dd4:	test   al,al
 1006dd6:	jne    0x1006ddc
 1006dd8:	xor    al,al
 1006dda:	jmp    0x1006dee
 1006ddc:	push   DWORD PTR [ebp-0x60]
 1006ddf:	push   DWORD PTR [ebp+0xc]
 1006de2:	call   0x1006cb0
 1006de7:	pop    ecx
 1006de8:	test   al,al
 1006dea:	pop    ecx
 1006deb:	setne  al
 1006dee:	pop    edi
 1006def:	mov    ecx,DWORD PTR [ebp-0x4]
 1006df2:	pop    esi
 1006df3:	xor    ecx,ebp
 1006df5:	pop    ebx
 1006df6:	call   0x1005953
 1006dfb:	leave  
 1006dfc:	ret    
 1006dfd:	int3   
 1006dfe:	int3   
 1006dff:	int3   
 1006e00:	int3   
 1006e01:	int3   
 1006e02:	xor    eax,eax
 1006e04:	jmp    0x1006e0a
 1006e06:	add    ecx,0x2
 1006e09:	inc    eax
 1006e0a:	xor    edx,edx
 1006e0c:	cmp    dx,WORD PTR [ecx]
 1006e0f:	jne    0x1006e06
 1006e11:	ret    
 1006e12:	int3   
 1006e13:	int3   
 1006e14:	int3   
 1006e15:	int3   
 1006e16:	int3   
 1006e17:	mov    edi,edi
 1006e19:	push   ebp
 1006e1a:	mov    ebp,esp
 1006e1c:	push   ecx
 1006e1d:	mov    edx,DWORD PTR [ebp+0x8]
 1006e20:	test   ecx,ecx
 1006e22:	jne    0x1006e30
 1006e24:	push   0x7a
 1006e26:	call   DWORD PTR ds:0x10010d8
 1006e2c:	xor    al,al
 1006e2e:	leave  
 1006e2f:	ret    
 1006e30:	push   edi
 1006e31:	lea    edi,[ecx-0x1]
 1006e34:	xor    eax,eax
 1006e36:	test   edi,edi
 1006e38:	je     0x1006e5e
 1006e3a:	push   esi
 1006e3b:	mov    esi,ebx
 1006e3d:	mov    ecx,edx
 1006e3f:	sub    esi,edx
 1006e41:	movzx  edx,WORD PTR [ecx]
 1006e44:	and    DWORD PTR [ebp-0x4],0x0
 1006e48:	cmp    WORD PTR [ebp-0x4],dx
 1006e4c:	je     0x1006e5a
 1006e4e:	mov    WORD PTR [esi+ecx*1],dx
 1006e52:	inc    eax
 1006e53:	add    ecx,0x2
 1006e56:	cmp    eax,edi
 1006e58:	jb     0x1006e41
 1006e5a:	mov    edx,DWORD PTR [ebp+0x8]
 1006e5d:	pop    esi
 1006e5e:	xor    ecx,ecx
 1006e60:	mov    WORD PTR [ebx+eax*2],cx
 1006e64:	pop    edi
 1006e65:	cmp    cx,WORD PTR [edx+eax*2]
 1006e69:	jne    0x1006e24
 1006e6b:	mov    al,0x1
 1006e6d:	leave  
 1006e6e:	ret    
 1006e6f:	int3   
 1006e70:	int3   
 1006e71:	int3   
 1006e72:	int3   
 1006e73:	int3   
 1006e74:	int3   
 1006e75:	int3   
 1006e76:	int3   
 1006e77:	int3   
 1006e78:	int3   
 1006e79:	int3   
 1006e7a:	int3   
 1006e7b:	int3   
 1006e7c:	int3   
 1006e7d:	int3   
 1006e7e:	int3   
 1006e7f:	int3   
 1006e80:	mov    edi,edi
 1006e82:	push   ebp
 1006e83:	mov    ebp,esp
 1006e85:	mov    eax,DWORD PTR [ebp+0x8]
 1006e88:	mov    ecx,DWORD PTR [eax]
 1006e8a:	mov    edx,DWORD PTR [ecx+0xc]
 1006e8d:	push   0x0
 1006e8f:	push   eax
 1006e90:	call   edx
 1006e92:	pop    ebp
 1006e93:	ret    0x4
 1006e96:	int3   
 1006e97:	int3   
 1006e98:	int3   
 1006e99:	int3   
 1006e9a:	int3   
 1006e9b:	int3   
 1006e9c:	int3   
 1006e9d:	int3   
 1006e9e:	int3   
 1006e9f:	int3   
 1006ea0:	lea    eax,[ecx+0xc]
 1006ea3:	ret    
 1006ea4:	int3   
 1006ea5:	int3   
 1006ea6:	int3   
 1006ea7:	int3   
 1006ea8:	int3   
 1006ea9:	int3   
 1006eaa:	int3   
 1006eab:	int3   
 1006eac:	int3   
 1006ead:	int3   
 1006eae:	int3   
 1006eaf:	int3   
 1006eb0:	mov    edi,edi
 1006eb2:	push   ebp
 1006eb3:	mov    ebp,esp
 1006eb5:	mov    eax,DWORD PTR [ebp+0xc]
 1006eb8:	mov    ecx,DWORD PTR [ebp+0x8]
 1006ebb:	push   esi
 1006ebc:	push   edi
 1006ebd:	mov    esi,0x10
 1006ec2:	mov    edx,DWORD PTR [ecx]
 1006ec4:	cmp    edx,DWORD PTR [eax]
 1006ec6:	jne    0x1006eda
 1006ec8:	sub    esi,0x4
 1006ecb:	add    eax,0x4
 1006ece:	add    ecx,0x4
 1006ed1:	cmp    esi,0x4
 1006ed4:	jae    0x1006ec2
 1006ed6:	test   esi,esi
 1006ed8:	je     0x1006f44
 1006eda:	movzx  edx,BYTE PTR [ecx]
 1006edd:	movzx  edi,BYTE PTR [eax]
 1006ee0:	sub    edx,edi
 1006ee2:	jne    0x1006f29
 1006ee4:	sub    esi,0x1
 1006ee7:	add    eax,0x1
 1006eea:	add    ecx,0x1
 1006eed:	test   esi,esi
 1006eef:	je     0x1006f44
 1006ef1:	movzx  edx,BYTE PTR [ecx]
 1006ef4:	movzx  edi,BYTE PTR [eax]
 1006ef7:	sub    edx,edi
 1006ef9:	jne    0x1006f29
 1006efb:	sub    esi,0x1
 1006efe:	add    eax,0x1
 1006f01:	add    ecx,0x1
 1006f04:	test   esi,esi
 1006f06:	je     0x1006f44
 1006f08:	movzx  edx,BYTE PTR [ecx]
 1006f0b:	movzx  edi,BYTE PTR [eax]
 1006f0e:	sub    edx,edi
 1006f10:	jne    0x1006f29
 1006f12:	sub    esi,0x1
 1006f15:	add    eax,0x1
 1006f18:	add    ecx,0x1
 1006f1b:	test   esi,esi
 1006f1d:	je     0x1006f44
 1006f1f:	movzx  edx,BYTE PTR [ecx]
 1006f22:	movzx  eax,BYTE PTR [eax]
 1006f25:	sub    edx,eax
 1006f27:	je     0x1006f44
 1006f29:	test   edx,edx
 1006f2b:	mov    eax,0x1
 1006f30:	jg     0x1006f46
 1006f32:	or     eax,0xffffffff
 1006f35:	xor    ecx,ecx
 1006f37:	test   eax,eax
 1006f39:	sete   cl
 1006f3c:	pop    edi
 1006f3d:	pop    esi
 1006f3e:	mov    eax,ecx
 1006f40:	pop    ebp
 1006f41:	ret    0x8
 1006f44:	xor    eax,eax
 1006f46:	xor    ecx,ecx
 1006f48:	test   eax,eax
 1006f4a:	sete   cl
 1006f4d:	pop    edi
 1006f4e:	pop    esi
 1006f4f:	mov    eax,ecx
 1006f51:	pop    ebp
 1006f52:	ret    0x8
 1006f55:	int3   
 1006f56:	int3   
 1006f57:	int3   
 1006f58:	int3   
 1006f59:	int3   
 1006f5a:	int3   
 1006f5b:	int3   
 1006f5c:	int3   
 1006f5d:	int3   
 1006f5e:	int3   
 1006f5f:	int3   
 1006f60:	mov    edi,edi
 1006f62:	push   ebp
 1006f63:	mov    ebp,esp
 1006f65:	push   0xfffffffe
 1006f67:	push   0x100aa70
 1006f6c:	push   0x1005ab7
 1006f71:	mov    eax,fs:0x0
 1006f77:	push   eax
 1006f78:	sub    esp,0xc
 1006f7b:	push   ebx
 1006f7c:	push   esi
 1006f7d:	push   edi
 1006f7e:	mov    eax,ds:0x100c088
 1006f83:	xor    DWORD PTR [ebp-0x8],eax
 1006f86:	xor    eax,ebp
 1006f88:	push   eax
 1006f89:	lea    eax,[ebp-0x10]
 1006f8c:	mov    fs:0x0,eax
 1006f92:	mov    DWORD PTR [ebp-0x18],esp
 1006f95:	xor    esi,esi
 1006f97:	mov    DWORD PTR [ebp-0x4],esi
 1006f9a:	push   esi
 1006f9b:	mov    ecx,DWORD PTR [ebp+0x8]
 1006f9e:	call   0x1008260
 1006fa3:	jmp    0x1006fd2
 1006fa5:	mov    eax,DWORD PTR [ebp-0x14]
 1006fa8:	mov    ecx,DWORD PTR [eax]
 1006faa:	mov    edx,DWORD PTR [ecx]
 1006fac:	mov    DWORD PTR [ebp-0x1c],edx
 1006faf:	mov    eax,0x1
 1006fb4:	ret    
 1006fb5:	mov    esp,DWORD PTR [ebp-0x18]
 1006fb8:	mov    esi,DWORD PTR [ebp-0x1c]
 1006fbb:	cmp    esi,0xc00000fd
 1006fc1:	jne    0x1006fc9
 1006fc3:	call   DWORD PTR ds:0x10011f4
 1006fc9:	test   esi,esi
 1006fcb:	jl     0x1006fd2
 1006fcd:	mov    esi,0x80004005
 1006fd2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1006fd9:	mov    eax,esi
 1006fdb:	mov    ecx,DWORD PTR [ebp-0x10]
 1006fde:	mov    DWORD PTR fs:0x0,ecx
 1006fe5:	pop    ecx
 1006fe6:	pop    edi
 1006fe7:	pop    esi
 1006fe8:	pop    ebx
 1006fe9:	mov    esp,ebp
 1006feb:	pop    ebp
 1006fec:	ret    0x4
 1006fef:	int3   
 1006ff0:	int3   
 1006ff1:	int3   
 1006ff2:	int3   
 1006ff3:	int3   
 1006ff4:	int3   
 1006ff5:	int3   
 1006ff6:	int3   
 1006ff7:	int3   
 1006ff8:	int3   
 1006ff9:	int3   
 1006ffa:	int3   
 1006ffb:	int3   
 1006ffc:	int3   
 1006ffd:	int3   
 1006ffe:	int3   
 1006fff:	int3   
 1007000:	mov    edi,edi
 1007002:	push   ebp
 1007003:	mov    ebp,esp
 1007005:	push   esi
 1007006:	mov    esi,DWORD PTR [ebp+0x10]
 1007009:	push   edi
 100700a:	mov    edi,DWORD PTR [ebp+0xc]
 100700d:	push   edi
 100700e:	push   0x100138c
 1007013:	mov    DWORD PTR [esi],0x0
 1007019:	call   0x1006eb0
 100701e:	test   eax,eax
 1007020:	jne    0x1007031
 1007022:	push   edi
 1007023:	push   0x1001c7c
 1007028:	call   0x1006eb0
 100702d:	test   eax,eax
 100702f:	je     0x1007046
 1007031:	mov    eax,DWORD PTR [ebp+0x8]
 1007034:	mov    DWORD PTR [esi],eax
 1007036:	mov    ecx,DWORD PTR [eax]
 1007038:	mov    edx,DWORD PTR [ecx+0x4]
 100703b:	push   eax
 100703c:	call   edx
 100703e:	pop    edi
 100703f:	xor    eax,eax
 1007041:	pop    esi
 1007042:	pop    ebp
 1007043:	ret    0xc
 1007046:	pop    edi
 1007047:	mov    eax,0x80004002
 100704c:	pop    esi
 100704d:	pop    ebp
 100704e:	ret    0xc
 1007051:	int3   
 1007052:	int3   
 1007053:	int3   
 1007054:	int3   
 1007055:	int3   
 1007056:	int3   
 1007057:	int3   
 1007058:	int3   
 1007059:	int3   
 100705a:	int3   
 100705b:	int3   
 100705c:	int3   
 100705d:	int3   
 100705e:	int3   
 100705f:	int3   
 1007060:	mov    eax,0x1
 1007065:	ret    0x4
 1007068:	int3   
 1007069:	int3   
 100706a:	int3   
 100706b:	int3   
 100706c:	int3   
 100706d:	int3   
 100706e:	int3   
 100706f:	int3   
 1007070:	mov    eax,0x1
 1007075:	ret    0x4
 1007078:	int3   
 1007079:	int3   
 100707a:	int3   
 100707b:	int3   
 100707c:	int3   
 100707d:	int3   
 100707e:	int3   
 100707f:	int3   
 1007080:	mov    edi,edi
 1007082:	push   ebp
 1007083:	mov    ebp,esp
 1007085:	mov    ecx,DWORD PTR [ebp+0x8]
 1007088:	add    ecx,0x4
 100708b:	call   0x10083d0
 1007090:	mov    ecx,DWORD PTR [ebp+0xc]
 1007093:	mov    DWORD PTR [ecx],eax
 1007095:	xor    eax,eax
 1007097:	pop    ebp
 1007098:	ret    0x8
 100709b:	int3   
 100709c:	int3   
 100709d:	int3   
 100709e:	int3   
 100709f:	int3   
 10070a0:	mov    eax,DWORD PTR [ecx+0x1220]
 10070a6:	ret    
 10070a7:	int3   
 10070a8:	int3   
 10070a9:	int3   
 10070aa:	int3   
 10070ab:	int3   
 10070ac:	int3   
 10070ad:	int3   
 10070ae:	int3   
 10070af:	int3   
 10070b0:	mov    edi,edi
 10070b2:	push   ebp
 10070b3:	mov    ebp,esp
 10070b5:	mov    eax,DWORD PTR [ebp+0x8]
 10070b8:	mov    ecx,DWORD PTR [ebp+0xc]
 10070bb:	mov    DWORD PTR [eax+0x1224],ecx
 10070c1:	xor    eax,eax
 10070c3:	pop    ebp
 10070c4:	ret    0x8
 10070c7:	int3   
 10070c8:	int3   
 10070c9:	int3   
 10070ca:	int3   
 10070cb:	int3   
 10070cc:	int3   
 10070cd:	int3   
 10070ce:	int3   
 10070cf:	int3   
 10070d0:	mov    edi,edi
 10070d2:	push   ebp
 10070d3:	mov    ebp,esp
 10070d5:	mov    ecx,DWORD PTR [ebp+0x8]
 10070d8:	mov    ecx,DWORD PTR [ecx+0x1224]
 10070de:	test   ecx,ecx
 10070e0:	mov    eax,0x80004001
 10070e5:	je     0x10070ed
 10070e7:	mov    edx,DWORD PTR [ebp+0xc]
 10070ea:	push   edx
 10070eb:	call   ecx
 10070ed:	pop    ebp
 10070ee:	ret    0x8
 10070f1:	int3   
 10070f2:	int3   
 10070f3:	int3   
 10070f4:	int3   
 10070f5:	int3   
 10070f6:	int3   
 10070f7:	int3   
 10070f8:	int3   
 10070f9:	int3   
 10070fa:	int3   
 10070fb:	int3   
 10070fc:	int3   
 10070fd:	int3   
 10070fe:	int3   
 10070ff:	int3   
 1007100:	lea    eax,[ecx+0xe10]
 1007106:	ret    
 1007107:	int3   
 1007108:	int3   
 1007109:	int3   
 100710a:	int3   
 100710b:	int3   
 100710c:	int3   
 100710d:	int3   
 100710e:	int3   
 100710f:	int3   
 1007110:	mov    edi,edi
 1007112:	push   ebp
 1007113:	mov    ebp,esp
 1007115:	mov    eax,ecx
 1007117:	mov    ecx,DWORD PTR [ebp+0x8]
 100711a:	mov    DWORD PTR [eax],ecx
 100711c:	mov    DWORD PTR [eax+0x4],0x0
 1007123:	pop    ebp
 1007124:	ret    0x4
 1007127:	int3   
 1007128:	int3   
 1007129:	int3   
 100712a:	int3   
 100712b:	int3   
 100712c:	int3   
 100712d:	int3   
 100712e:	int3   
 100712f:	int3   
 1007130:	mov    edi,edi
 1007132:	push   ebp
 1007133:	mov    ebp,esp
 1007135:	mov    eax,DWORD PTR [ebp+0x8]
 1007138:	test   eax,eax
 100713a:	jl     0x100713f
 100713c:	mov    eax,DWORD PTR [ebp+0xc]
 100713f:	pop    ebp
 1007140:	ret    0x8
 1007143:	int3   
 1007144:	int3   
 1007145:	int3   
 1007146:	int3   
 1007147:	int3   
 1007148:	int3   
 1007149:	int3   
 100714a:	int3   
 100714b:	int3   
 100714c:	int3   
 100714d:	int3   
 100714e:	int3   
 100714f:	int3   
 1007150:	mov    edi,edi
 1007152:	push   ebp
 1007153:	mov    ebp,esp
 1007155:	mov    eax,DWORD PTR [ebp+0x8]
 1007158:	mov    ecx,DWORD PTR [ebp+0xc]
 100715b:	push   eax
 100715c:	call   0x1008050
 1007161:	pop    ebp
 1007162:	ret    
 1007163:	int3   
 1007164:	int3   
 1007165:	int3   
 1007166:	int3   
 1007167:	int3   
 1007168:	int3   
 1007169:	int3   
 100716a:	int3   
 100716b:	int3   
 100716c:	int3   
 100716d:	int3   
 100716e:	int3   
 100716f:	int3   
 1007170:	mov    edi,edi
 1007172:	push   ebp
 1007173:	mov    ebp,esp
 1007175:	mov    eax,DWORD PTR [ebp+0x8]
 1007178:	test   eax,eax
 100717a:	je     0x1007185
 100717c:	mov    ecx,DWORD PTR [ebp+0xc]
 100717f:	push   eax
 1007180:	call   0x1008110
 1007185:	pop    ebp
 1007186:	ret    
 1007187:	int3   
 1007188:	int3   
 1007189:	int3   
 100718a:	int3   
 100718b:	int3   
 100718c:	int3   
 100718d:	int3   
 100718e:	int3   
 100718f:	int3   
 1007190:	mov    edi,edi
 1007192:	push   ebp
 1007193:	mov    ebp,esp
 1007195:	push   0xfffffffe
 1007197:	push   0x100aa90
 100719c:	push   0x1005ab7
 10071a1:	mov    eax,fs:0x0
 10071a7:	push   eax
 10071a8:	sub    esp,0x20
 10071ab:	push   ebx
 10071ac:	push   esi
 10071ad:	push   edi
 10071ae:	mov    eax,ds:0x100c088
 10071b3:	xor    DWORD PTR [ebp-0x8],eax
 10071b6:	xor    eax,ebp
 10071b8:	push   eax
 10071b9:	lea    eax,[ebp-0x10]
 10071bc:	mov    fs:0x0,eax
 10071c2:	mov    DWORD PTR [ebp-0x18],esp
 10071c5:	mov    edi,ecx
 10071c7:	xor    ebx,ebx
 10071c9:	xor    esi,esi
 10071cb:	mov    DWORD PTR [ebp-0x1c],esi
 10071ce:	mov    DWORD PTR [ebp-0x24],ebx
 10071d1:	mov    DWORD PTR [ebp-0x4],ebx
 10071d4:	call   0x1008320
 10071d9:	test   eax,eax
 10071db:	je     0x1007293
 10071e1:	mov    DWORD PTR [ebp-0x20],ebx
 10071e4:	mov    ecx,edi
 10071e6:	call   0x1008320
 10071eb:	mov    ecx,DWORD PTR [eax]
 10071ed:	lea    edx,[ebp-0x20]
 10071f0:	push   edx
 10071f1:	push   0x1001830
 10071f6:	push   eax
 10071f7:	mov    eax,DWORD PTR [ecx]
 10071f9:	call   eax
 10071fb:	mov    esi,eax
 10071fd:	mov    DWORD PTR [ebp-0x1c],esi
 1007200:	cmp    esi,ebx
 1007202:	jl     0x1007293
 1007208:	mov    eax,DWORD PTR [ebp-0x20]
 100720b:	cmp    eax,ebx
 100720d:	je     0x100728b
 100720f:	xor    esi,esi
 1007211:	mov    DWORD PTR [ebp-0x28],esi
 1007214:	mov    DWORD PTR [ebp-0x4],0x1
 100721b:	mov    ecx,DWORD PTR [eax]
 100721d:	mov    edx,DWORD PTR [ebp+0xc]
 1007220:	push   edx
 1007221:	mov    edx,DWORD PTR [ebp+0x8]
 1007224:	push   edx
 1007225:	push   eax
 1007226:	mov    eax,DWORD PTR [ecx+0xc]
 1007229:	call   eax
 100722b:	mov    DWORD PTR [ebp-0x1c],eax
 100722e:	jmp    0x1007265
 1007230:	mov    ecx,DWORD PTR [ebp-0x14]
 1007233:	mov    edx,DWORD PTR [ecx]
 1007235:	mov    eax,DWORD PTR [edx]
 1007237:	mov    DWORD PTR [ebp-0x2c],eax
 100723a:	mov    eax,0x1
 100723f:	ret    
 1007240:	mov    esp,DWORD PTR [ebp-0x18]
 1007243:	mov    esi,DWORD PTR [ebp-0x2c]
 1007246:	mov    DWORD PTR [ebp-0x28],esi
 1007249:	cmp    esi,0xc00000fd
 100724f:	jne    0x1007257
 1007251:	call   DWORD PTR ds:0x10011f4
 1007257:	xor    ebx,ebx
 1007259:	cmp    esi,ebx
 100725b:	jl     0x1007265
 100725d:	mov    esi,0x80004005
 1007262:	mov    DWORD PTR [ebp-0x28],esi
 1007265:	mov    DWORD PTR [ebp-0x4],ebx
 1007268:	push   esi
 1007269:	mov    ecx,DWORD PTR [ebp-0x1c]
 100726c:	push   ecx
 100726d:	call   0x1007130
 1007272:	mov    esi,eax
 1007274:	mov    DWORD PTR [ebp-0x1c],esi
 1007277:	mov    eax,DWORD PTR [ebp-0x20]
 100727a:	mov    edx,DWORD PTR [eax]
 100727c:	push   eax
 100727d:	mov    eax,DWORD PTR [edx+0x8]
 1007280:	call   eax
 1007282:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007289:	jmp    0x10072da
 100728b:	mov    esi,0x80070057
 1007290:	mov    DWORD PTR [ebp-0x1c],esi
 1007293:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100729a:	jmp    0x10072da
 100729c:	mov    ecx,DWORD PTR [ebp-0x14]
 100729f:	mov    edx,DWORD PTR [ecx]
 10072a1:	mov    eax,DWORD PTR [edx]
 10072a3:	mov    DWORD PTR [ebp-0x30],eax
 10072a6:	mov    eax,0x1
 10072ab:	ret    
 10072ac:	mov    esp,DWORD PTR [ebp-0x18]
 10072af:	mov    esi,DWORD PTR [ebp-0x30]
 10072b2:	mov    DWORD PTR [ebp-0x24],esi
 10072b5:	cmp    esi,0xc00000fd
 10072bb:	jne    0x10072c3
 10072bd:	call   DWORD PTR ds:0x10011f4
 10072c3:	xor    ebx,ebx
 10072c5:	cmp    esi,ebx
 10072c7:	jl     0x10072d0
 10072c9:	mov    DWORD PTR [ebp-0x24],0x80004005
 10072d0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10072d7:	mov    esi,DWORD PTR [ebp-0x1c]
 10072da:	cmp    esi,ebx
 10072dc:	mov    eax,DWORD PTR [ebp-0x24]
 10072df:	jge    0x10072e3
 10072e1:	mov    eax,esi
 10072e3:	mov    ecx,DWORD PTR [ebp-0x10]
 10072e6:	mov    DWORD PTR fs:0x0,ecx
 10072ed:	pop    ecx
 10072ee:	pop    edi
 10072ef:	pop    esi
 10072f0:	pop    ebx
 10072f1:	mov    esp,ebp
 10072f3:	pop    ebp
 10072f4:	ret    0x8
 10072f7:	int3   
 10072f8:	int3   
 10072f9:	int3   
 10072fa:	int3   
 10072fb:	int3   
 10072fc:	int3   
 10072fd:	int3   
 10072fe:	int3   
 10072ff:	int3   
 1007300:	mov    edi,edi
 1007302:	push   ebp
 1007303:	mov    ebp,esp
 1007305:	mov    ecx,DWORD PTR [ebp+0x8]
 1007308:	test   ecx,ecx
 100730a:	mov    DWORD PTR [ecx],0x0
 1007310:	je     0x1007317
 1007312:	call   0x10081a0
 1007317:	pop    ebp
 1007318:	ret    0x4
 100731b:	int3   
 100731c:	int3   
 100731d:	int3   
 100731e:	int3   
 100731f:	int3   
 1007320:	mov    edi,edi
 1007322:	push   ebp
 1007323:	mov    ebp,esp
 1007325:	push   0xfffffffe
 1007327:	push   0x100aab8
 100732c:	push   0x1005ab7
 1007331:	mov    eax,fs:0x0
 1007337:	push   eax
 1007338:	sub    esp,0x10
 100733b:	push   ebx
 100733c:	push   esi
 100733d:	push   edi
 100733e:	mov    eax,ds:0x100c088
 1007343:	xor    DWORD PTR [ebp-0x8],eax
 1007346:	xor    eax,ebp
 1007348:	push   eax
 1007349:	lea    eax,[ebp-0x10]
 100734c:	mov    fs:0x0,eax
 1007352:	mov    DWORD PTR [ebp-0x18],esp
 1007355:	xor    ebx,ebx
 1007357:	mov    DWORD PTR [ebp-0x1c],ebx
 100735a:	mov    edi,DWORD PTR [ebp+0x8]
 100735d:	lea    ecx,[edi+0x4]
 1007360:	call   0x10083d0
 1007365:	test   eax,eax
 1007367:	je     0x1007411
 100736d:	push   0x4e20
 1007372:	mov    eax,DWORD PTR [edi+0x10]
 1007375:	push   eax
 1007376:	call   DWORD PTR ds:0x100104c
 100737c:	cmp    eax,ebx
 100737e:	je     0x10073a7
 1007380:	cmp    eax,0x80
 1007385:	je     0x10073a7
 1007387:	call   DWORD PTR ds:0x1001144
 100738d:	cmp    eax,ebx
 100738f:	jle    0x100739b
 1007391:	and    eax,0xffff
 1007396:	or     eax,0x80070000
 100739b:	mov    esi,eax
 100739d:	mov    ecx,DWORD PTR [ebp+0xc]
 10073a0:	call   0x1008310
 10073a5:	jmp    0x100741e
 10073a7:	mov    DWORD PTR [ebp-0x4],ebx
 10073aa:	mov    ecx,DWORD PTR [ebp+0xc]
 10073ad:	push   ecx
 10073ae:	mov    ecx,edi
 10073b0:	call   0x1006f60
 10073b5:	mov    esi,eax
 10073b7:	mov    DWORD PTR [ebp-0x1c],esi
 10073ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10073c1:	jmp    0x10073ff
 10073c3:	mov    edx,DWORD PTR [ebp-0x14]
 10073c6:	mov    eax,DWORD PTR [edx]
 10073c8:	mov    ecx,DWORD PTR [eax]
 10073ca:	mov    DWORD PTR [ebp-0x20],ecx
 10073cd:	mov    eax,0x1
 10073d2:	ret    
 10073d3:	mov    esp,DWORD PTR [ebp-0x18]
 10073d6:	mov    esi,DWORD PTR [ebp-0x20]
 10073d9:	mov    ebx,esi
 10073db:	cmp    esi,0xc00000fd
 10073e1:	jne    0x10073e9
 10073e3:	call   DWORD PTR ds:0x10011f4
 10073e9:	test   esi,esi
 10073eb:	jl     0x10073f2
 10073ed:	mov    ebx,0x80004005
 10073f2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10073f9:	mov    edi,DWORD PTR [ebp+0x8]
 10073fc:	mov    esi,DWORD PTR [ebp-0x1c]
 10073ff:	test   esi,esi
 1007401:	jl     0x1007405
 1007403:	mov    esi,ebx
 1007405:	mov    edx,DWORD PTR [edi+0x10]
 1007408:	push   edx
 1007409:	call   DWORD PTR ds:0x10010c4
 100740f:	jmp    0x100741e
 1007411:	mov    eax,DWORD PTR [ebp+0xc]
 1007414:	push   eax
 1007415:	mov    ecx,edi
 1007417:	call   0x1006f60
 100741c:	mov    esi,eax
 100741e:	mov    eax,esi
 1007420:	mov    ecx,DWORD PTR [ebp-0x10]
 1007423:	mov    DWORD PTR fs:0x0,ecx
 100742a:	pop    ecx
 100742b:	pop    edi
 100742c:	pop    esi
 100742d:	pop    ebx
 100742e:	mov    esp,ebp
 1007430:	pop    ebp
 1007431:	ret    0x8
 1007434:	int3   
 1007435:	int3   
 1007436:	int3   
 1007437:	int3   
 1007438:	int3   
 1007439:	int3   
 100743a:	int3   
 100743b:	int3   
 100743c:	int3   
 100743d:	int3   
 100743e:	int3   
 100743f:	int3   
 1007440:	mov    edi,edi
 1007442:	push   ebp
 1007443:	mov    ebp,esp
 1007445:	push   esi
 1007446:	push   edi
 1007447:	mov    esi,ecx
 1007449:	push   0xd94
 100744e:	lea    ecx,[esi+0xc]
 1007451:	xor    edi,edi
 1007453:	call   0x1008050
 1007458:	test   eax,eax
 100745a:	je     0x100747f
 100745c:	push   0x4e20
 1007461:	push   esi
 1007462:	mov    ecx,eax
 1007464:	call   0x1009620
 1007469:	test   eax,eax
 100746b:	jne    0x1007493
 100746d:	mov    edx,DWORD PTR [ebp+0x8]
 1007470:	mov    ecx,0x8007000e
 1007475:	pop    edi
 1007476:	mov    DWORD PTR [edx],eax
 1007478:	mov    eax,ecx
 100747a:	pop    esi
 100747b:	pop    ebp
 100747c:	ret    0x4
 100747f:	mov    edx,DWORD PTR [ebp+0x8]
 1007482:	xor    eax,eax
 1007484:	mov    ecx,0x8007000e
 1007489:	pop    edi
 100748a:	mov    DWORD PTR [edx],eax
 100748c:	mov    eax,ecx
 100748e:	pop    esi
 100748f:	pop    ebp
 1007490:	ret    0x4
 1007493:	mov    ecx,DWORD PTR [ebp+0x8]
 1007496:	mov    DWORD PTR [ecx],eax
 1007498:	mov    eax,edi
 100749a:	pop    edi
 100749b:	pop    esi
 100749c:	pop    ebp
 100749d:	ret    0x4
 10074a0:	int3   
 10074a1:	int3   
 10074a2:	int3   
 10074a3:	int3   
 10074a4:	int3   
 10074a5:	int3   
 10074a6:	int3   
 10074a7:	int3   
 10074a8:	int3   
 10074a9:	int3   
 10074aa:	int3   
 10074ab:	int3   
 10074ac:	int3   
 10074ad:	int3   
 10074ae:	int3   
 10074af:	int3   
 10074b0:	mov    edi,edi
 10074b2:	push   ebp
 10074b3:	mov    ebp,esp
 10074b5:	push   0xfffffffe
 10074b7:	push   0x100aad8
 10074bc:	push   0x1005ab7
 10074c1:	mov    eax,fs:0x0
 10074c7:	push   eax
 10074c8:	sub    esp,0x14
 10074cb:	push   ebx
 10074cc:	push   esi
 10074cd:	push   edi
 10074ce:	mov    eax,ds:0x100c088
 10074d3:	xor    DWORD PTR [ebp-0x8],eax
 10074d6:	xor    eax,ebp
 10074d8:	push   eax
 10074d9:	lea    eax,[ebp-0x10]
 10074dc:	mov    fs:0x0,eax
 10074e2:	mov    DWORD PTR [ebp-0x18],esp
 10074e5:	mov    edi,ecx
 10074e7:	mov    DWORD PTR [ebp-0x24],edi
 10074ea:	xor    ebx,ebx
 10074ec:	xor    esi,esi
 10074ee:	mov    DWORD PTR [ebp-0x1c],esi
 10074f1:	lea    eax,[edi+0x7c]
 10074f4:	mov    ecx,DWORD PTR [ebp+0x8]
 10074f7:	cmp    ecx,eax
 10074f9:	jne    0x100755f
 10074fb:	mov    DWORD PTR [ebp-0x4],ebx
 10074fe:	call   0x1009090
 1007503:	mov    esi,eax
 1007505:	mov    DWORD PTR [ebp-0x1c],esi
 1007508:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100750f:	jmp    0x100754d
 1007511:	mov    ecx,DWORD PTR [ebp-0x14]
 1007514:	mov    edx,DWORD PTR [ecx]
 1007516:	mov    eax,DWORD PTR [edx]
 1007518:	mov    DWORD PTR [ebp-0x20],eax
 100751b:	mov    eax,0x1
 1007520:	ret    
 1007521:	mov    esp,DWORD PTR [ebp-0x18]
 1007524:	mov    esi,DWORD PTR [ebp-0x20]
 1007527:	mov    ebx,esi
 1007529:	cmp    esi,0xc00000fd
 100752f:	jne    0x1007537
 1007531:	call   DWORD PTR ds:0x10011f4
 1007537:	test   esi,esi
 1007539:	jl     0x1007540
 100753b:	mov    ebx,0x80004005
 1007540:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007547:	mov    edi,DWORD PTR [ebp-0x24]
 100754a:	mov    esi,DWORD PTR [ebp-0x1c]
 100754d:	test   esi,esi
 100754f:	jl     0x1007553
 1007551:	mov    esi,ebx
 1007553:	mov    ecx,DWORD PTR [edi+0x14]
 1007556:	push   ecx
 1007557:	call   DWORD PTR ds:0x10010c4
 100755d:	jmp    0x100756c
 100755f:	cmp    ecx,ebx
 1007561:	je     0x100756c
 1007563:	push   ecx
 1007564:	lea    ecx,[edi+0xc]
 1007567:	call   0x1008110
 100756c:	mov    eax,esi
 100756e:	mov    ecx,DWORD PTR [ebp-0x10]
 1007571:	mov    DWORD PTR fs:0x0,ecx
 1007578:	pop    ecx
 1007579:	pop    edi
 100757a:	pop    esi
 100757b:	pop    ebx
 100757c:	mov    esp,ebp
 100757e:	pop    ebp
 100757f:	ret    0x4
 1007582:	int3   
 1007583:	int3   
 1007584:	int3   
 1007585:	int3   
 1007586:	int3   
 1007587:	int3   
 1007588:	int3   
 1007589:	int3   
 100758a:	int3   
 100758b:	int3   
 100758c:	int3   
 100758d:	int3   
 100758e:	int3   
 100758f:	int3   
 1007590:	mov    eax,DWORD PTR [ecx]
 1007592:	test   eax,eax
 1007594:	je     0x10075c4
 1007596:	mov    edx,DWORD PTR [ecx+0x4]
 1007599:	cmp    edx,DWORD PTR [eax+0x8]
 100759c:	jb     0x10075a9
 100759e:	mov    eax,DWORD PTR [eax]
 10075a0:	mov    DWORD PTR [ecx],eax
 10075a2:	mov    DWORD PTR [ecx+0x4],0x0
 10075a9:	mov    edx,DWORD PTR [ecx]
 10075ab:	test   edx,edx
 10075ad:	je     0x10075c4
 10075af:	mov    eax,DWORD PTR [ecx+0x4]
 10075b2:	cmp    eax,DWORD PTR [edx+0x8]
 10075b5:	jae    0x10075c4
 10075b7:	push   esi
 10075b8:	lea    esi,[eax+0x1]
 10075bb:	mov    DWORD PTR [ecx+0x4],esi
 10075be:	lea    eax,[edx+eax*4+0x10]
 10075c2:	pop    esi
 10075c3:	ret    
 10075c4:	xor    eax,eax
 10075c6:	ret    
 10075c7:	int3   
 10075c8:	int3   
 10075c9:	int3   
 10075ca:	int3   
 10075cb:	int3   
 10075cc:	int3   
 10075cd:	int3   
 10075ce:	int3   
 10075cf:	int3   
 10075d0:	mov    edi,edi
 10075d2:	push   ebp
 10075d3:	mov    ebp,esp
 10075d5:	mov    ecx,DWORD PTR [ebp+0xc]
 10075d8:	xor    eax,eax
 10075da:	test   ecx,ecx
 10075dc:	je     0x10075e6
 10075de:	cmp    ecx,0x7fffffff
 10075e4:	jbe    0x10075eb
 10075e6:	mov    eax,0x80070057
 10075eb:	test   eax,eax
 10075ed:	jl     0x1007634
 10075ef:	mov    edx,DWORD PTR [ebp+0x10]
 10075f2:	push   ebx
 10075f3:	push   esi
 10075f4:	push   edi
 10075f5:	mov    edi,DWORD PTR [ebp+0x8]
 10075f8:	lea    esi,[ecx-0x1]
 10075fb:	mov    ecx,DWORD PTR [ebp+0x14]
 10075fe:	lea    eax,[ebp+0x18]
 1007601:	push   eax
 1007602:	push   ecx
 1007603:	push   edx
 1007604:	push   esi
 1007605:	push   edi
 1007606:	xor    ebx,ebx
 1007608:	call   DWORD PTR ds:0x10011f8
 100760e:	add    esp,0x14
 1007611:	test   eax,eax
 1007613:	jl     0x1007626
 1007615:	cmp    eax,esi
 1007617:	ja     0x1007626
 1007619:	jne    0x100762f
 100761b:	mov    WORD PTR [edi+esi*2],bx
 100761f:	pop    edi
 1007620:	pop    esi
 1007621:	mov    eax,ebx
 1007623:	pop    ebx
 1007624:	pop    ebp
 1007625:	ret    
 1007626:	mov    WORD PTR [edi+esi*2],bx
 100762a:	mov    ebx,0x8007007a
 100762f:	pop    edi
 1007630:	pop    esi
 1007631:	mov    eax,ebx
 1007633:	pop    ebx
 1007634:	pop    ebp
 1007635:	ret    
 1007636:	int3   
 1007637:	int3   
 1007638:	int3   
 1007639:	int3   
 100763a:	int3   
 100763b:	int3   
 100763c:	int3   
 100763d:	int3   
 100763e:	int3   
 100763f:	int3   
 1007640:	mov    edi,edi
 1007642:	push   ebp
 1007643:	mov    ebp,esp
 1007645:	sub    esp,0xa40
 100764b:	mov    eax,ds:0x100c088
 1007650:	xor    eax,ebp
 1007652:	mov    DWORD PTR [ebp-0x4],eax
 1007655:	push   ebx
 1007656:	push   esi
 1007657:	push   edi
 1007658:	push   0x104
 100765d:	lea    eax,[ebp-0x41c]
 1007663:	push   eax
 1007664:	xor    ebx,ebx
 1007666:	push   ebx
 1007667:	mov    edi,ecx
 1007669:	xor    esi,esi
 100766b:	call   DWORD PTR ds:0x1001064
 1007671:	push   eax
 1007672:	call   DWORD PTR ds:0x1001060
 1007678:	test   eax,eax
 100767a:	jbe    0x1007737
 1007680:	push   0x105
 1007685:	lea    ecx,[ebp-0x834]
 100768b:	push   ecx
 100768c:	push   0x105
 1007691:	lea    edx,[ebp-0xa40]
 1007697:	push   edx
 1007698:	push   0x105
 100769d:	lea    eax,[ebp-0x628]
 10076a3:	push   eax
 10076a4:	push   0x105
 10076a9:	lea    ecx,[ebp-0x210]
 10076af:	push   ecx
 10076b0:	lea    edx,[ebp-0x41c]
 10076b6:	push   edx
 10076b7:	mov    WORD PTR [ebp-0x214],bx
 10076be:	call   DWORD PTR ds:0x1001200
 10076c4:	push   ebx
 10076c5:	push   ebx
 10076c6:	lea    eax,[ebp-0x628]
 10076cc:	push   eax
 10076cd:	lea    ecx,[ebp-0x210]
 10076d3:	push   ecx
 10076d4:	lea    esi,[edi+0x1018]
 10076da:	push   0x104
 10076df:	push   esi
 10076e0:	mov    WORD PTR [ebp-0x20a],bx
 10076e7:	mov    WORD PTR [ebp-0x428],bx
 10076ee:	mov    WORD PTR [esi],bx
 10076f1:	call   DWORD PTR ds:0x10011fc
 10076f7:	add    esp,0x3c
 10076fa:	push   0x1001c60
 10076ff:	push   esi
 1007700:	mov    WORD PTR [edi+0x121e],bx
 1007707:	call   0x1004231
 100770c:	push   eax
 100770d:	push   0x1001c8c
 1007712:	push   0x104
 1007717:	add    edi,0xe10
 100771d:	push   edi
 100771e:	call   0x10075d0
 1007723:	add    esp,0x18
 1007726:	pop    edi
 1007727:	pop    esi
 1007728:	pop    ebx
 1007729:	mov    ecx,DWORD PTR [ebp-0x4]
 100772c:	xor    ecx,ebp
 100772e:	call   0x1005953
 1007733:	mov    esp,ebp
 1007735:	pop    ebp
 1007736:	ret    
 1007737:	mov    ecx,DWORD PTR [ebp-0x4]
 100773a:	pop    edi
 100773b:	mov    eax,esi
 100773d:	pop    esi
 100773e:	xor    ecx,ebp
 1007740:	pop    ebx
 1007741:	call   0x1005953
 1007746:	mov    esp,ebp
 1007748:	pop    ebp
 1007749:	ret    
 100774a:	int3   
 100774b:	int3   
 100774c:	int3   
 100774d:	int3   
 100774e:	int3   
 100774f:	int3   
 1007750:	mov    edi,edi
 1007752:	push   ebp
 1007753:	mov    ebp,esp
 1007755:	push   0xfffffffe
 1007757:	push   0x100aaf8
 100775c:	push   0x1005ab7
 1007761:	mov    eax,fs:0x0
 1007767:	push   eax
 1007768:	sub    esp,0x20
 100776b:	push   ebx
 100776c:	push   esi
 100776d:	push   edi
 100776e:	mov    eax,ds:0x100c088
 1007773:	xor    DWORD PTR [ebp-0x8],eax
 1007776:	xor    eax,ebp
 1007778:	push   eax
 1007779:	lea    eax,[ebp-0x10]
 100777c:	mov    fs:0x0,eax
 1007782:	mov    DWORD PTR [ebp-0x18],esp
 1007785:	mov    edi,ecx
 1007787:	mov    DWORD PTR [ebp-0x28],edi
 100778a:	xor    esi,esi
 100778c:	mov    DWORD PTR [ebp-0x20],esi
 100778f:	push   0x4e20
 1007794:	mov    eax,DWORD PTR [edi+0x10]
 1007797:	push   eax
 1007798:	call   DWORD PTR ds:0x100104c
 100779e:	cmp    eax,esi
 10077a0:	je     0x10077c4
 10077a2:	cmp    eax,0x80
 10077a7:	je     0x10077c4
 10077a9:	call   DWORD PTR ds:0x1001144
 10077af:	cmp    eax,esi
 10077b1:	jle    0x10077bd
 10077b3:	and    eax,0xffff
 10077b8:	or     eax,0x80070000
 10077bd:	mov    esi,eax
 10077bf:	jmp    0x100785c
 10077c4:	mov    DWORD PTR [ebp-0x1c],esi
 10077c7:	mov    DWORD PTR [ebp-0x4],esi
 10077ca:	lea    ecx,[edi+0x18]
 10077cd:	push   ecx
 10077ce:	lea    ecx,[ebp-0x30]
 10077d1:	call   0x1007110
 10077d6:	mov    ebx,DWORD PTR [ebp+0x8]
 10077d9:	lea    esp,[esp+0x0]
 10077e0:	lea    ecx,[ebp-0x30]
 10077e3:	call   0x1007590
 10077e8:	test   eax,eax
 10077ea:	je     0x1007803
 10077ec:	push   ebx
 10077ed:	push   edi
 10077ee:	mov    ecx,eax
 10077f0:	call   0x1007190
 10077f5:	push   eax
 10077f6:	push   esi
 10077f7:	call   0x1007130
 10077fc:	mov    esi,eax
 10077fe:	mov    DWORD PTR [ebp-0x20],esi
 1007801:	jmp    0x10077e0
 1007803:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100780a:	jmp    0x100784b
 100780c:	mov    edx,DWORD PTR [ebp-0x14]
 100780f:	mov    eax,DWORD PTR [edx]
 1007811:	mov    ecx,DWORD PTR [eax]
 1007813:	mov    DWORD PTR [ebp-0x24],ecx
 1007816:	mov    eax,0x1
 100781b:	ret    
 100781c:	mov    esp,DWORD PTR [ebp-0x18]
 100781f:	mov    esi,DWORD PTR [ebp-0x24]
 1007822:	mov    DWORD PTR [ebp-0x1c],esi
 1007825:	cmp    esi,0xc00000fd
 100782b:	jne    0x1007833
 100782d:	call   DWORD PTR ds:0x10011f4
 1007833:	test   esi,esi
 1007835:	jl     0x100783e
 1007837:	mov    DWORD PTR [ebp-0x1c],0x80004005
 100783e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007845:	mov    edi,DWORD PTR [ebp-0x28]
 1007848:	mov    esi,DWORD PTR [ebp-0x20]
 100784b:	mov    edx,DWORD PTR [edi+0x10]
 100784e:	push   edx
 100784f:	call   DWORD PTR ds:0x10010c4
 1007855:	test   esi,esi
 1007857:	jl     0x100785c
 1007859:	mov    esi,DWORD PTR [ebp-0x1c]
 100785c:	mov    eax,esi
 100785e:	mov    ecx,DWORD PTR [ebp-0x10]
 1007861:	mov    DWORD PTR fs:0x0,ecx
 1007868:	pop    ecx
 1007869:	pop    edi
 100786a:	pop    esi
 100786b:	pop    ebx
 100786c:	mov    esp,ebp
 100786e:	pop    ebp
 100786f:	ret    0x4
 1007872:	int3   
 1007873:	int3   
 1007874:	int3   
 1007875:	int3   
 1007876:	int3   
 1007877:	int3   
 1007878:	int3   
 1007879:	int3   
 100787a:	int3   
 100787b:	int3   
 100787c:	int3   
 100787d:	int3   
 100787e:	int3   
 100787f:	int3   
 1007880:	mov    edi,edi
 1007882:	push   ebp
 1007883:	mov    ebp,esp
 1007885:	push   esi
 1007886:	mov    esi,DWORD PTR [ebp+0xc]
 1007889:	test   esi,esi
 100788b:	mov    eax,0x80070057
 1007890:	je     0x1007917
 1007896:	mov    eax,DWORD PTR [ebp+0x8]
 1007899:	push   ebx
 100789a:	add    eax,0x1018
 100789f:	push   edi
 10078a0:	xor    ebx,ebx
 10078a2:	mov    edi,0x104
 10078a7:	mov    ecx,eax
 10078a9:	sub    esi,eax
 10078ab:	jmp    0x10078b0
 10078ad:	lea    ecx,[ecx+0x0]
 10078b0:	lea    edx,[edi+0x7ffffefa]
 10078b6:	test   edx,edx
 10078b8:	je     0x10078d0
 10078ba:	movzx  edx,WORD PTR [esi+ecx*1]
 10078be:	test   dx,dx
 10078c1:	je     0x10078d0
 10078c3:	mov    WORD PTR [ecx],dx
 10078c6:	add    ecx,0x2
 10078c9:	sub    edi,0x1
 10078cc:	jne    0x10078b0
 10078ce:	jmp    0x10078d4
 10078d0:	test   edi,edi
 10078d2:	jne    0x10078dc
 10078d4:	sub    ecx,0x2
 10078d7:	mov    ebx,0x8007007a
 10078dc:	test   ebx,ebx
 10078de:	mov    WORD PTR [ecx],0x0
 10078e3:	jl     0x1007913
 10078e5:	push   0x1001c60
 10078ea:	push   eax
 10078eb:	call   0x1004231
 10078f0:	push   eax
 10078f1:	mov    eax,DWORD PTR [ebp+0x8]
 10078f4:	push   0x1001c8c
 10078f9:	add    eax,0xe10
 10078fe:	push   0x104
 1007903:	push   eax
 1007904:	call   0x10075d0
 1007909:	add    esp,0x18
 100790c:	pop    edi
 100790d:	pop    ebx
 100790e:	pop    esi
 100790f:	pop    ebp
 1007910:	ret    0x8
 1007913:	pop    edi
 1007914:	mov    eax,ebx
 1007916:	pop    ebx
 1007917:	pop    esi
 1007918:	pop    ebp
 1007919:	ret    0x8
 100791c:	int3   
 100791d:	int3   
 100791e:	int3   
 100791f:	int3   
 1007920:	int3   
 1007921:	int3   
 1007922:	int3   
 1007923:	int3   
 1007924:	int3   
 1007925:	int3   
 1007926:	int3   
 1007927:	int3   
 1007928:	int3   
 1007929:	int3   
 100792a:	int3   
 100792b:	int3   
 100792c:	int3   
 100792d:	int3   
 100792e:	int3   
 100792f:	int3   
 1007930:	mov    edi,edi
 1007932:	push   ebp
 1007933:	mov    ebp,esp
 1007935:	push   0xfffffffe
 1007937:	push   0x100ab18
 100793c:	push   0x1005ab7
 1007941:	mov    eax,fs:0x0
 1007947:	push   eax
 1007948:	sub    esp,0x10
 100794b:	push   ebx
 100794c:	push   esi
 100794d:	push   edi
 100794e:	mov    eax,ds:0x100c088
 1007953:	xor    DWORD PTR [ebp-0x8],eax
 1007956:	xor    eax,ebp
 1007958:	push   eax
 1007959:	lea    eax,[ebp-0x10]
 100795c:	mov    fs:0x0,eax
 1007962:	mov    DWORD PTR [ebp-0x18],esp
 1007965:	xor    edi,edi
 1007967:	mov    DWORD PTR [ebp-0x1c],edi
 100796a:	mov    eax,DWORD PTR [ebp+0xc]
 100796d:	mov    DWORD PTR [eax],edi
 100796f:	mov    ebx,DWORD PTR [ebp+0x8]
 1007972:	lea    esi,[ebx+0x4]
 1007975:	mov    ecx,esi
 1007977:	call   0x10083d0
 100797c:	test   eax,eax
 100797e:	je     0x1007a84
 1007984:	mov    ecx,esi
 1007986:	call   0x10083f0
 100798b:	test   eax,eax
 100798d:	jl     0x1007a84
 1007993:	call   DWORD PTR ds:0x10011f4
 1007999:	push   0x7530
 100799e:	mov    ecx,DWORD PTR [ebx+0x14]
 10079a1:	push   ecx
 10079a2:	call   DWORD PTR ds:0x100104c
 10079a8:	mov    esi,eax
 10079aa:	cmp    esi,edi
 10079ac:	je     0x10079e8
 10079ae:	cmp    esi,0x80
 10079b4:	je     0x10079e8
 10079b6:	call   DWORD PTR ds:0x1001144
 10079bc:	cmp    eax,edi
 10079be:	jle    0x10079ca
 10079c0:	and    eax,0xffff
 10079c5:	or     eax,0x80070000
 10079ca:	mov    edi,eax
 10079cc:	test   edi,edi
 10079ce:	jl     0x1007a4f
 10079d0:	test   esi,esi
 10079d2:	jg     0x10079d8
 10079d4:	mov    edi,esi
 10079d6:	jmp    0x1007a4f
 10079d8:	and    esi,0xffff
 10079de:	or     esi,0x80070000
 10079e4:	mov    edi,esi
 10079e6:	jmp    0x1007a4f
 10079e8:	mov    DWORD PTR [ebp-0x4],edi
 10079eb:	push   0x4e20
 10079f0:	push   ebx
 10079f1:	lea    ecx,[ebx+0x7c]
 10079f4:	call   0x1009f50
 10079f9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007a00:	jmp    0x1007a39
 1007a02:	mov    edx,DWORD PTR [ebp-0x14]
 1007a05:	mov    eax,DWORD PTR [edx]
 1007a07:	mov    ecx,DWORD PTR [eax]
 1007a09:	mov    DWORD PTR [ebp-0x20],ecx
 1007a0c:	mov    eax,0x1
 1007a11:	ret    
 1007a12:	mov    esp,DWORD PTR [ebp-0x18]
 1007a15:	mov    edi,DWORD PTR [ebp-0x20]
 1007a18:	cmp    edi,0xc00000fd
 1007a1e:	jne    0x1007a26
 1007a20:	call   DWORD PTR ds:0x10011f4
 1007a26:	test   edi,edi
 1007a28:	jl     0x1007a2f
 1007a2a:	mov    edi,0x80004005
 1007a2f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007a36:	mov    ebx,DWORD PTR [ebp+0x8]
 1007a39:	test   edi,edi
 1007a3b:	jl     0x1007a45
 1007a3d:	lea    edx,[ebx+0x7c]
 1007a40:	mov    DWORD PTR [ebp-0x1c],edx
 1007a43:	jmp    0x1007a4f
 1007a45:	mov    eax,DWORD PTR [ebx+0x14]
 1007a48:	push   eax
 1007a49:	call   DWORD PTR ds:0x10010c4
 1007a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
 1007a53:	jne    0x1007a66
 1007a55:	lea    ecx,[ebp-0x1c]
 1007a58:	push   ecx
 1007a59:	mov    ecx,ebx
 1007a5b:	call   0x1007440
 1007a60:	test   eax,eax
 1007a62:	jl     0x1007a66
 1007a64:	mov    edi,eax
 1007a66:	mov    edx,DWORD PTR [ebp+0xc]
 1007a69:	mov    eax,DWORD PTR [ebp-0x1c]
 1007a6c:	mov    DWORD PTR [edx],eax
 1007a6e:	mov    eax,edi
 1007a70:	mov    ecx,DWORD PTR [ebp-0x10]
 1007a73:	mov    DWORD PTR fs:0x0,ecx
 1007a7a:	pop    ecx
 1007a7b:	pop    edi
 1007a7c:	pop    esi
 1007a7d:	pop    ebx
 1007a7e:	mov    esp,ebp
 1007a80:	pop    ebp
 1007a81:	ret    0x8
 1007a84:	mov    eax,0x80004005
 1007a89:	mov    ecx,DWORD PTR [ebp-0x10]
 1007a8c:	mov    DWORD PTR fs:0x0,ecx
 1007a93:	pop    ecx
 1007a94:	pop    edi
 1007a95:	pop    esi
 1007a96:	pop    ebx
 1007a97:	mov    esp,ebp
 1007a99:	pop    ebp
 1007a9a:	ret    0x8
 1007a9d:	int3   
 1007a9e:	int3   
 1007a9f:	int3   
 1007aa0:	int3   
 1007aa1:	int3   
 1007aa2:	int3   
 1007aa3:	int3   
 1007aa4:	int3   
 1007aa5:	int3   
 1007aa6:	int3   
 1007aa7:	int3   
 1007aa8:	int3   
 1007aa9:	int3   
 1007aaa:	int3   
 1007aab:	int3   
 1007aac:	int3   
 1007aad:	int3   
 1007aae:	int3   
 1007aaf:	int3   
 1007ab0:	mov    edi,edi
 1007ab2:	push   esi
 1007ab3:	mov    esi,ecx
 1007ab5:	mov    eax,DWORD PTR [esi+0x10]
 1007ab8:	mov    ecx,DWORD PTR [eax+0x8]
 1007abb:	cmp    ecx,DWORD PTR [eax+0xc]
 1007abe:	push   edi
 1007abf:	jb     0x1007afa
 1007ac1:	mov    ecx,DWORD PTR [esi+0x8]
 1007ac4:	test   ecx,ecx
 1007ac6:	je     0x1007b14
 1007ac8:	mov    edi,DWORD PTR [esi]
 1007aca:	lea    edx,[edi*4+0x10]
 1007ad1:	push   edx
 1007ad2:	call   0x1008050
 1007ad7:	test   eax,eax
 1007ad9:	je     0x1007b14
 1007adb:	mov    DWORD PTR [eax],0x0
 1007ae1:	mov    DWORD PTR [eax+0x4],0x0
 1007ae8:	mov    DWORD PTR [eax+0x8],0x0
 1007aef:	mov    DWORD PTR [eax+0xc],edi
 1007af2:	mov    ecx,DWORD PTR [esi+0x10]
 1007af5:	mov    DWORD PTR [ecx],eax
 1007af7:	mov    DWORD PTR [esi+0x10],eax
 1007afa:	mov    eax,DWORD PTR [esi+0x10]
 1007afd:	mov    ecx,DWORD PTR [eax+0x8]
 1007b00:	lea    edx,[ecx+0x1]
 1007b03:	mov    DWORD PTR [eax+0x8],edx
 1007b06:	mov    eax,DWORD PTR [esi+0x10]
 1007b09:	add    DWORD PTR [esi+0x4],0x1
 1007b0d:	pop    edi
 1007b0e:	lea    eax,[eax+ecx*4+0x10]
 1007b12:	pop    esi
 1007b13:	ret    
 1007b14:	pop    edi
 1007b15:	xor    eax,eax
 1007b17:	pop    esi
 1007b18:	ret    
 1007b19:	int3   
 1007b1a:	int3   
 1007b1b:	int3   
 1007b1c:	int3   
 1007b1d:	int3   
 1007b1e:	int3   
 1007b1f:	int3   
 1007b20:	mov    edi,edi
 1007b22:	push   ebx
 1007b23:	push   esi
 1007b24:	mov    esi,ecx
 1007b26:	push   edi
 1007b27:	lea    ecx,[esi+0x4]
 1007b2a:	mov    DWORD PTR [esi],0x1001c9c
 1007b30:	call   0x10083b0
 1007b35:	lea    ecx,[esi+0xc]
 1007b38:	call   0x1008040
 1007b3d:	xor    ebx,ebx
 1007b3f:	lea    edi,[esi+0x18]
 1007b42:	push   0x40
 1007b44:	mov    DWORD PTR [esi+0x10],ebx
 1007b47:	mov    DWORD PTR [esi+0x14],ebx
 1007b4a:	lea    eax,[edi+0x10]
 1007b4d:	push   ebx
 1007b4e:	push   eax
 1007b4f:	mov    DWORD PTR [edi],ebx
 1007b51:	mov    DWORD PTR [edi+0x4],ebx
 1007b54:	mov    DWORD PTR [edi+0x8],ebx
 1007b57:	mov    DWORD PTR [edi+0xc],0x10
 1007b5e:	call   0x1005aee
 1007b63:	add    esp,0xc
 1007b66:	mov    DWORD PTR [esi+0x74],edi
 1007b69:	mov    DWORD PTR [esi+0x78],edi
 1007b6c:	push   0x4e20
 1007b71:	lea    edi,[esi+0x7c]
 1007b74:	push   ebx
 1007b75:	mov    ecx,edi
 1007b77:	mov    DWORD PTR [esi+0x68],0x10
 1007b7e:	mov    DWORD PTR [esi+0x6c],ebx
 1007b81:	mov    DWORD PTR [esi+0x70],ebx
 1007b84:	call   0x1009620
 1007b89:	push   0x208
 1007b8e:	lea    ecx,[esi+0xe10]
 1007b94:	push   ebx
 1007b95:	push   ecx
 1007b96:	mov    DWORD PTR [esi+0x1220],ebx
 1007b9c:	mov    DWORD PTR [esi+0x1224],ebx
 1007ba2:	call   0x1005aee
 1007ba7:	push   0x208
 1007bac:	lea    edx,[esi+0x1018]
 1007bb2:	push   ebx
 1007bb3:	push   edx
 1007bb4:	call   0x1005aee
 1007bb9:	add    esp,0x18
 1007bbc:	push   esi
 1007bbd:	mov    ecx,edi
 1007bbf:	call   0x1008df0
 1007bc4:	pop    edi
 1007bc5:	mov    eax,esi
 1007bc7:	pop    esi
 1007bc8:	pop    ebx
 1007bc9:	ret    
 1007bca:	int3   
 1007bcb:	int3   
 1007bcc:	int3   
 1007bcd:	int3   
 1007bce:	int3   
 1007bcf:	int3   
 1007bd0:	mov    edi,edi
 1007bd2:	push   ebp
 1007bd3:	mov    ebp,esp
 1007bd5:	push   ecx
 1007bd6:	mov    eax,DWORD PTR [ebp+0x8]
 1007bd9:	test   eax,eax
 1007bdb:	push   esi
 1007bdc:	push   edi
 1007bdd:	mov    edi,ecx
 1007bdf:	mov    DWORD PTR [ebp-0x4],0x0
 1007be6:	je     0x1007c79
 1007bec:	lea    ecx,[ebp-0x4]
 1007bef:	push   ecx
 1007bf0:	push   0x1
 1007bf2:	push   0x0
 1007bf4:	push   eax
 1007bf5:	push   0x80000002
 1007bfa:	call   DWORD PTR ds:0x1001000
 1007c00:	test   eax,eax
 1007c02:	jne    0x1007c77
 1007c04:	mov    edx,DWORD PTR [ebp-0x4]
 1007c07:	push   ebx
 1007c08:	push   0x104
 1007c0d:	lea    ebx,[edi+0x1018]
 1007c13:	push   ebx
 1007c14:	push   0x1001cc8
 1007c19:	push   edx
 1007c1a:	call   0x1008880
 1007c1f:	mov    esi,eax
 1007c21:	test   esi,esi
 1007c23:	jl     0x1007c59
 1007c25:	push   0x1001c60
 1007c2a:	push   ebx
 1007c2b:	call   0x1004231
 1007c30:	push   eax
 1007c31:	push   0x1001c8c
 1007c36:	lea    eax,[edi+0xe10]
 1007c3c:	push   0x104
 1007c41:	push   eax
 1007c42:	call   0x10075d0
 1007c47:	mov    ecx,DWORD PTR [ebp-0x4]
 1007c4a:	add    esp,0x18
 1007c4d:	push   ecx
 1007c4e:	mov    esi,eax
 1007c50:	call   DWORD PTR ds:0x1001008
 1007c56:	pop    ebx
 1007c57:	jmp    0x1007c80
 1007c59:	cmp    esi,0x80070002
 1007c5f:	jne    0x1007c6a
 1007c61:	mov    ecx,edi
 1007c63:	call   0x1007640
 1007c68:	mov    esi,eax
 1007c6a:	mov    ecx,DWORD PTR [ebp-0x4]
 1007c6d:	push   ecx
 1007c6e:	call   DWORD PTR ds:0x1001008
 1007c74:	pop    ebx
 1007c75:	jmp    0x1007c80
 1007c77:	mov    ecx,edi
 1007c79:	call   0x1007640
 1007c7e:	mov    esi,eax
 1007c80:	test   esi,esi
 1007c82:	jge    0x1007cad
 1007c84:	push   0x208
 1007c89:	lea    edx,[edi+0x1018]
 1007c8f:	push   0x0
 1007c91:	push   edx
 1007c92:	call   0x1005aee
 1007c97:	push   0x208
 1007c9c:	push   0x0
 1007c9e:	add    edi,0xe10
 1007ca4:	push   edi
 1007ca5:	call   0x1005aee
 1007caa:	add    esp,0x18
 1007cad:	pop    edi
 1007cae:	mov    eax,esi
 1007cb0:	pop    esi
 1007cb1:	mov    esp,ebp
 1007cb3:	pop    ebp
 1007cb4:	ret    0x4
 1007cb7:	int3   
 1007cb8:	int3   
 1007cb9:	int3   
 1007cba:	int3   
 1007cbb:	int3   
 1007cbc:	int3   
 1007cbd:	int3   
 1007cbe:	int3   
 1007cbf:	int3   
 1007cc0:	mov    edi,edi
 1007cc2:	push   ebp
 1007cc3:	mov    ebp,esp
 1007cc5:	cmp    DWORD PTR [ebp+0xc],0x0
 1007cc9:	push   esi
 1007cca:	push   edi
 1007ccb:	mov    edi,DWORD PTR [ebp+0x8]
 1007cce:	je     0x1007cda
 1007cd0:	mov    DWORD PTR [edi+0x1220],0x1
 1007cda:	lea    esi,[edi+0x4]
 1007cdd:	mov    ecx,esi
 1007cdf:	mov    DWORD PTR [ebp+0xc],esi
 1007ce2:	call   0x1008680
 1007ce7:	test   eax,eax
 1007ce9:	je     0x1007de3
 1007cef:	push   ebx
 1007cf0:	lea    ebx,[edi+0xc]
 1007cf3:	mov    ecx,ebx
 1007cf5:	call   0x10085a0
 1007cfa:	mov    esi,eax
 1007cfc:	test   esi,esi
 1007cfe:	jl     0x1007dd6
 1007d04:	push   0x0
 1007d06:	push   0x0
 1007d08:	mov    DWORD PTR [edi+0x70],ebx
 1007d0b:	mov    ebx,DWORD PTR ds:0x1001168
 1007d11:	push   0x0
 1007d13:	call   ebx
 1007d15:	test   eax,eax
 1007d17:	mov    DWORD PTR [edi+0x10],eax
 1007d1a:	jne    0x1007d32
 1007d1c:	call   DWORD PTR ds:0x1001144
 1007d22:	test   eax,eax
 1007d24:	jle    0x1007d30
 1007d26:	and    eax,0xffff
 1007d2b:	or     eax,0x80070000
 1007d30:	mov    esi,eax
 1007d32:	test   esi,esi
 1007d34:	jl     0x1007dd6
 1007d3a:	mov    eax,DWORD PTR [edi+0x10]
 1007d3d:	push   0x2
 1007d3f:	push   0x2
 1007d41:	push   eax
 1007d42:	call   DWORD PTR ds:0x10010c0
 1007d48:	test   eax,eax
 1007d4a:	jne    0x1007d62
 1007d4c:	call   DWORD PTR ds:0x1001144
 1007d52:	test   eax,eax
 1007d54:	jle    0x1007d60
 1007d56:	and    eax,0xffff
 1007d5b:	or     eax,0x80070000
 1007d60:	mov    esi,eax
 1007d62:	test   esi,esi
 1007d64:	jl     0x1007dd6
 1007d66:	push   0x0
 1007d68:	push   0x0
 1007d6a:	push   0x0
 1007d6c:	call   ebx
 1007d6e:	test   eax,eax
 1007d70:	mov    DWORD PTR [edi+0x14],eax
 1007d73:	jne    0x1007d8b
 1007d75:	call   DWORD PTR ds:0x1001144
 1007d7b:	test   eax,eax
 1007d7d:	jle    0x1007d89
 1007d7f:	and    eax,0xffff
 1007d84:	or     eax,0x80070000
 1007d89:	mov    esi,eax
 1007d8b:	test   esi,esi
 1007d8d:	jl     0x1007dd6
 1007d8f:	mov    ecx,DWORD PTR [edi+0x14]
 1007d92:	push   0x2
 1007d94:	push   0x2
 1007d96:	push   ecx
 1007d97:	call   DWORD PTR ds:0x10010c0
 1007d9d:	test   eax,eax
 1007d9f:	jne    0x1007db7
 1007da1:	call   DWORD PTR ds:0x1001144
 1007da7:	test   eax,eax
 1007da9:	jle    0x1007db5
 1007dab:	and    eax,0xffff
 1007db0:	or     eax,0x80070000
 1007db5:	mov    esi,eax
 1007db7:	test   esi,esi
 1007db9:	jl     0x1007dd6
 1007dbb:	cmp    DWORD PTR [edi+0x1220],0x0
 1007dc2:	mov    ecx,edi
 1007dc4:	je     0x1007dca
 1007dc6:	push   0x0
 1007dc8:	jmp    0x1007dcf
 1007dca:	push   0x1001c08
 1007dcf:	call   0x1007bd0
 1007dd4:	mov    esi,eax
 1007dd6:	mov    ecx,DWORD PTR [ebp+0xc]
 1007dd9:	push   esi
 1007dda:	call   0x10086d0
 1007ddf:	mov    esi,DWORD PTR [ebp+0xc]
 1007de2:	pop    ebx
 1007de3:	call   0x1008400
 1007de8:	mov    ecx,esi
 1007dea:	call   0x10083f0
 1007def:	pop    edi
 1007df0:	pop    esi
 1007df1:	pop    ebp
 1007df2:	ret    0x8
 1007df5:	int3   
 1007df6:	int3   
 1007df7:	int3   
 1007df8:	int3   
 1007df9:	int3   
 1007dfa:	int3   
 1007dfb:	int3   
 1007dfc:	int3   
 1007dfd:	int3   
 1007dfe:	int3   
 1007dff:	int3   
 1007e00:	mov    edi,edi
 1007e02:	push   ebp
 1007e03:	mov    ebp,esp
 1007e05:	push   0xfffffffe
 1007e07:	push   0x100ab38
 1007e0c:	push   0x1005ab7
 1007e11:	mov    eax,fs:0x0
 1007e17:	push   eax
 1007e18:	sub    esp,0x1c
 1007e1b:	push   ebx
 1007e1c:	push   esi
 1007e1d:	push   edi
 1007e1e:	mov    eax,ds:0x100c088
 1007e23:	xor    DWORD PTR [ebp-0x8],eax
 1007e26:	xor    eax,ebp
 1007e28:	push   eax
 1007e29:	lea    eax,[ebp-0x10]
 1007e2c:	mov    fs:0x0,eax
 1007e32:	mov    DWORD PTR [ebp-0x18],esp
 1007e35:	mov    edi,ecx
 1007e37:	xor    ebx,ebx
 1007e39:	mov    DWORD PTR [ebp-0x1c],ebx
 1007e3c:	mov    DWORD PTR [ebp-0x20],ebx
 1007e3f:	mov    DWORD PTR [ebp-0x4],ebx
 1007e42:	lea    eax,[edi+0x18]
 1007e45:	push   eax
 1007e46:	lea    ecx,[ebp-0x2c]
 1007e49:	call   0x1007110
 1007e4e:	mov    edi,edi
 1007e50:	lea    ecx,[ebp-0x2c]
 1007e53:	call   0x1007590
 1007e58:	mov    esi,eax
 1007e5a:	test   esi,esi
 1007e5c:	je     0x1007e6d
 1007e5e:	mov    ecx,esi
 1007e60:	call   0x1008320
 1007e65:	test   eax,eax
 1007e67:	jne    0x1007e50
 1007e69:	test   esi,esi
 1007e6b:	jne    0x1007e7b
 1007e6d:	lea    ecx,[edi+0x68]
 1007e70:	call   0x1007ab0
 1007e75:	mov    esi,eax
 1007e77:	test   esi,esi
 1007e79:	je     0x1007e9d
 1007e7b:	push   esi
 1007e7c:	mov    ecx,edi
 1007e7e:	call   0x1007300
 1007e83:	mov    ecx,DWORD PTR [ebp+0x8]
 1007e86:	push   ecx
 1007e87:	mov    ecx,esi
 1007e89:	call   0x1008260
 1007e8e:	mov    DWORD PTR [ebp-0x1c],eax
 1007e91:	mov    DWORD PTR [ebp-0x20],esi
 1007e94:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007e9b:	jmp    0x1007ee7
 1007e9d:	mov    eax,0x8007000e
 1007ea2:	mov    DWORD PTR [ebp-0x1c],eax
 1007ea5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007eac:	jmp    0x1007ee7
 1007eae:	mov    edx,DWORD PTR [ebp-0x14]
 1007eb1:	mov    eax,DWORD PTR [edx]
 1007eb3:	mov    ecx,DWORD PTR [eax]
 1007eb5:	mov    DWORD PTR [ebp-0x24],ecx
 1007eb8:	mov    eax,0x1
 1007ebd:	ret    
 1007ebe:	mov    esp,DWORD PTR [ebp-0x18]
 1007ec1:	mov    esi,DWORD PTR [ebp-0x24]
 1007ec4:	mov    ebx,esi
 1007ec6:	cmp    esi,0xc00000fd
 1007ecc:	jne    0x1007ed4
 1007ece:	call   DWORD PTR ds:0x10011f4
 1007ed4:	test   esi,esi
 1007ed6:	jl     0x1007edd
 1007ed8:	mov    ebx,0x80004005
 1007edd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007ee4:	mov    eax,DWORD PTR [ebp-0x1c]
 1007ee7:	mov    edx,DWORD PTR [ebp+0xc]
 1007eea:	mov    ecx,DWORD PTR [ebp-0x20]
 1007eed:	mov    DWORD PTR [edx],ecx
 1007eef:	test   eax,eax
 1007ef1:	jl     0x1007ef5
 1007ef3:	mov    eax,ebx
 1007ef5:	mov    ecx,DWORD PTR [ebp-0x10]
 1007ef8:	mov    DWORD PTR fs:0x0,ecx
 1007eff:	pop    ecx
 1007f00:	pop    edi
 1007f01:	pop    esi
 1007f02:	pop    ebx
 1007f03:	mov    esp,ebp
 1007f05:	pop    ebp
 1007f06:	ret    0x8
 1007f09:	int3   
 1007f0a:	int3   
 1007f0b:	int3   
 1007f0c:	int3   
 1007f0d:	int3   
 1007f0e:	int3   
 1007f0f:	int3   
 1007f10:	mov    edi,edi
 1007f12:	push   ebp
 1007f13:	mov    ebp,esp
 1007f15:	push   0xfffffffe
 1007f17:	push   0x100ab58
 1007f1c:	push   0x1005ab7
 1007f21:	mov    eax,fs:0x0
 1007f27:	push   eax
 1007f28:	sub    esp,0x14
 1007f2b:	push   ebx
 1007f2c:	push   esi
 1007f2d:	push   edi
 1007f2e:	mov    eax,ds:0x100c088
 1007f33:	xor    DWORD PTR [ebp-0x8],eax
 1007f36:	xor    eax,ebp
 1007f38:	push   eax
 1007f39:	lea    eax,[ebp-0x10]
 1007f3c:	mov    fs:0x0,eax
 1007f42:	mov    DWORD PTR [ebp-0x18],esp
 1007f45:	xor    ebx,ebx
 1007f47:	mov    DWORD PTR [ebp-0x20],ebx
 1007f4a:	mov    DWORD PTR [ebp-0x1c],ebx
 1007f4d:	mov    edi,DWORD PTR [ebp+0x8]
 1007f50:	lea    ecx,[edi+0x4]
 1007f53:	call   0x10083d0
 1007f58:	test   eax,eax
 1007f5a:	je     0x1007fff
 1007f60:	push   0xffffffff
 1007f62:	mov    eax,DWORD PTR [edi+0x10]
 1007f65:	push   eax
 1007f66:	call   DWORD PTR ds:0x100104c
 1007f6c:	cmp    eax,ebx
 1007f6e:	je     0x1007f91
 1007f70:	cmp    eax,0x80
 1007f75:	je     0x1007f91
 1007f77:	call   DWORD PTR ds:0x1001144
 1007f7d:	cmp    eax,ebx
 1007f7f:	jle    0x100800e
 1007f85:	and    eax,0xffff
 1007f8a:	or     eax,0x80070000
 1007f8f:	jmp    0x100800e
 1007f91:	mov    DWORD PTR [ebp-0x4],ebx
 1007f94:	lea    ecx,[ebp-0x1c]
 1007f97:	push   ecx
 1007f98:	mov    edx,DWORD PTR [ebp+0xc]
 1007f9b:	push   edx
 1007f9c:	mov    ecx,edi
 1007f9e:	call   0x1007e00
 1007fa3:	mov    esi,eax
 1007fa5:	mov    DWORD PTR [ebp-0x20],esi
 1007fa8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007faf:	jmp    0x1007fed
 1007fb1:	mov    eax,DWORD PTR [ebp-0x14]
 1007fb4:	mov    ecx,DWORD PTR [eax]
 1007fb6:	mov    edx,DWORD PTR [ecx]
 1007fb8:	mov    DWORD PTR [ebp-0x24],edx
 1007fbb:	mov    eax,0x1
 1007fc0:	ret    
 1007fc1:	mov    esp,DWORD PTR [ebp-0x18]
 1007fc4:	mov    esi,DWORD PTR [ebp-0x24]
 1007fc7:	mov    ebx,esi
 1007fc9:	cmp    esi,0xc00000fd
 1007fcf:	jne    0x1007fd7
 1007fd1:	call   DWORD PTR ds:0x10011f4
 1007fd7:	test   esi,esi
 1007fd9:	jl     0x1007fe0
 1007fdb:	mov    ebx,0x80004005
 1007fe0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1007fe7:	mov    edi,DWORD PTR [ebp+0x8]
 1007fea:	mov    esi,DWORD PTR [ebp-0x20]
 1007fed:	test   esi,esi
 1007fef:	jl     0x1007ff3
 1007ff1:	mov    esi,ebx
 1007ff3:	mov    eax,DWORD PTR [edi+0x10]
 1007ff6:	push   eax
 1007ff7:	call   DWORD PTR ds:0x10010c4
 1007ffd:	jmp    0x1008010
 1007fff:	lea    ecx,[ebp-0x1c]
 1008002:	push   ecx
 1008003:	mov    edx,DWORD PTR [ebp+0xc]
 1008006:	push   edx
 1008007:	mov    ecx,edi
 1008009:	call   0x1007e00
 100800e:	mov    esi,eax
 1008010:	mov    eax,DWORD PTR [ebp+0x10]
 1008013:	mov    ecx,DWORD PTR [ebp-0x1c]
 1008016:	mov    DWORD PTR [eax],ecx
 1008018:	mov    eax,esi
 100801a:	mov    ecx,DWORD PTR [ebp-0x10]
 100801d:	mov    DWORD PTR fs:0x0,ecx
 1008024:	pop    ecx
 1008025:	pop    edi
 1008026:	pop    esi
 1008027:	pop    ebx
 1008028:	mov    esp,ebp
 100802a:	pop    ebp
 100802b:	ret    0xc
 100802e:	int3   
 100802f:	int3   
 1008030:	int3   
 1008031:	int3   
 1008032:	int3   
 1008033:	int3   
 1008034:	int3   
 1008035:	int3   
 1008036:	int3   
 1008037:	int3   
 1008038:	int3   
 1008039:	int3   
 100803a:	int3   
 100803b:	int3   
 100803c:	int3   
 100803d:	int3   
 100803e:	int3   
 100803f:	int3   
 1008040:	mov    eax,ecx
 1008042:	mov    DWORD PTR [eax],0x0
 1008048:	ret    
 1008049:	int3   
 100804a:	int3   
 100804b:	int3   
 100804c:	int3   
 100804d:	int3   
 100804e:	int3   
 100804f:	int3   
 1008050:	mov    edi,edi
 1008052:	push   ebp
 1008053:	mov    ebp,esp
 1008055:	push   0xfffffffe
 1008057:	push   0x100ab78
 100805c:	push   0x1005ab7
 1008061:	mov    eax,fs:0x0
 1008067:	push   eax
 1008068:	sub    esp,0x10
 100806b:	push   ebx
 100806c:	push   esi
 100806d:	push   edi
 100806e:	mov    eax,ds:0x100c088
 1008073:	xor    DWORD PTR [ebp-0x8],eax
 1008076:	xor    eax,ebp
 1008078:	push   eax
 1008079:	lea    eax,[ebp-0x10]
 100807c:	mov    fs:0x0,eax
 1008082:	mov    DWORD PTR [ebp-0x18],esp
 1008085:	mov    DWORD PTR [ebp-0x1c],0x0
 100808c:	xor    esi,esi
 100808e:	mov    DWORD PTR [ebp-0x4],esi
 1008091:	mov    eax,DWORD PTR [ebp+0x8]
 1008094:	push   eax
 1008095:	push   esi
 1008096:	mov    ecx,DWORD PTR [ecx]
 1008098:	push   ecx
 1008099:	call   DWORD PTR ds:0x10010b4
 100809f:	mov    DWORD PTR [ebp-0x1c],eax
 10080a2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10080a9:	jmp    0x10080e2
 10080ab:	mov    edx,DWORD PTR [ebp-0x14]
 10080ae:	mov    eax,DWORD PTR [edx]
 10080b0:	mov    ecx,DWORD PTR [eax]
 10080b2:	mov    DWORD PTR [ebp-0x20],ecx
 10080b5:	mov    eax,0x1
 10080ba:	ret    
 10080bb:	mov    esp,DWORD PTR [ebp-0x18]
 10080be:	mov    esi,DWORD PTR [ebp-0x20]
 10080c1:	cmp    esi,0xc00000fd
 10080c7:	jne    0x10080cf
 10080c9:	call   DWORD PTR ds:0x10011f4
 10080cf:	test   esi,esi
 10080d1:	jl     0x10080d8
 10080d3:	mov    esi,0x80004005
 10080d8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10080df:	mov    eax,DWORD PTR [ebp-0x1c]
 10080e2:	test   esi,esi
 10080e4:	jge    0x10080e8
 10080e6:	xor    eax,eax
 10080e8:	mov    ecx,DWORD PTR [ebp-0x10]
 10080eb:	mov    DWORD PTR fs:0x0,ecx
 10080f2:	pop    ecx
 10080f3:	pop    edi
 10080f4:	pop    esi
 10080f5:	pop    ebx
 10080f6:	mov    esp,ebp
 10080f8:	pop    ebp
 10080f9:	ret    0x4
 10080fc:	int3   
 10080fd:	int3   
 10080fe:	int3   
 10080ff:	int3   
 1008100:	int3   
 1008101:	int3   
 1008102:	int3   
 1008103:	int3   
 1008104:	int3   
 1008105:	int3   
 1008106:	int3   
 1008107:	int3   
 1008108:	int3   
 1008109:	int3   
 100810a:	int3   
 100810b:	int3   
 100810c:	int3   
 100810d:	int3   
 100810e:	int3   
 100810f:	int3   
 1008110:	mov    edi,edi
 1008112:	push   ebp
 1008113:	mov    ebp,esp
 1008115:	push   0xfffffffe
 1008117:	push   0x100ab98
 100811c:	push   0x1005ab7
 1008121:	mov    eax,fs:0x0
 1008127:	push   eax
 1008128:	sub    esp,0xc
 100812b:	push   ebx
 100812c:	push   esi
 100812d:	push   edi
 100812e:	mov    eax,ds:0x100c088
 1008133:	xor    DWORD PTR [ebp-0x8],eax
 1008136:	xor    eax,ebp
 1008138:	push   eax
 1008139:	lea    eax,[ebp-0x10]
 100813c:	mov    fs:0x0,eax
 1008142:	mov    DWORD PTR [ebp-0x18],esp
 1008145:	mov    DWORD PTR [ebp-0x4],0x0
 100814c:	mov    eax,DWORD PTR [ebp+0x8]
 100814f:	push   eax
 1008150:	push   0x0
 1008152:	mov    ecx,DWORD PTR [ecx]
 1008154:	push   ecx
 1008155:	call   DWORD PTR ds:0x10010b0
 100815b:	jmp    0x100817f
 100815d:	mov    edx,DWORD PTR [ebp-0x14]
 1008160:	mov    eax,DWORD PTR [edx]
 1008162:	mov    ecx,DWORD PTR [eax]
 1008164:	mov    DWORD PTR [ebp-0x1c],ecx
 1008167:	mov    eax,0x1
 100816c:	ret    
 100816d:	mov    esp,DWORD PTR [ebp-0x18]
 1008170:	cmp    DWORD PTR [ebp-0x1c],0xc00000fd
 1008177:	jne    0x100817f
 1008179:	call   DWORD PTR ds:0x10011f4
 100817f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1008186:	mov    ecx,DWORD PTR [ebp-0x10]
 1008189:	mov    DWORD PTR fs:0x0,ecx
 1008190:	pop    ecx
 1008191:	pop    edi
 1008192:	pop    esi
 1008193:	pop    ebx
 1008194:	mov    esp,ebp
 1008196:	pop    ebp
 1008197:	ret    0x4
 100819a:	int3   
 100819b:	int3   
 100819c:	int3   
 100819d:	int3   
 100819e:	int3   
 100819f:	int3   
 10081a0:	mov    eax,ecx
 10081a2:	mov    DWORD PTR [eax],0x0
 10081a8:	ret    
 10081a9:	int3   
 10081aa:	int3   
 10081ab:	int3   
 10081ac:	int3   
 10081ad:	int3   
 10081ae:	int3   
 10081af:	int3   
 10081b0:	mov    edi,edi
 10081b2:	push   ebp
 10081b3:	mov    ebp,esp
 10081b5:	push   0xfffffffe
 10081b7:	push   0x100abb8
 10081bc:	push   0x1005ab7
 10081c1:	mov    eax,fs:0x0
 10081c7:	push   eax
 10081c8:	sub    esp,0x10
 10081cb:	push   ebx
 10081cc:	push   esi
 10081cd:	push   edi
 10081ce:	mov    eax,ds:0x100c088
 10081d3:	xor    DWORD PTR [ebp-0x8],eax
 10081d6:	xor    eax,ebp
 10081d8:	push   eax
 10081d9:	lea    eax,[ebp-0x10]
 10081dc:	mov    fs:0x0,eax
 10081e2:	mov    DWORD PTR [ebp-0x18],esp
 10081e5:	mov    esi,ecx
 10081e7:	mov    DWORD PTR [ebp-0x20],esi
 10081ea:	xor    edi,edi
 10081ec:	mov    DWORD PTR [ebp-0x4],edi
 10081ef:	mov    eax,DWORD PTR [esi]
 10081f1:	test   eax,eax
 10081f3:	je     0x10081fd
 10081f5:	mov    ecx,DWORD PTR [eax]
 10081f7:	push   eax
 10081f8:	mov    edx,DWORD PTR [ecx+0x8]
 10081fb:	call   edx
 10081fd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1008204:	jmp    0x100823f
 1008206:	mov    eax,DWORD PTR [ebp-0x14]
 1008209:	mov    ecx,DWORD PTR [eax]
 100820b:	mov    edx,DWORD PTR [ecx]
 100820d:	mov    DWORD PTR [ebp-0x1c],edx
 1008210:	mov    eax,0x1
 1008215:	ret    
 1008216:	mov    esp,DWORD PTR [ebp-0x18]
 1008219:	mov    esi,DWORD PTR [ebp-0x1c]
 100821c:	mov    edi,esi
 100821e:	cmp    esi,0xc00000fd
 1008224:	jne    0x100822c
 1008226:	call   DWORD PTR ds:0x10011f4
 100822c:	test   esi,esi
 100822e:	jl     0x1008235
 1008230:	mov    edi,0x80004005
 1008235:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100823c:	mov    esi,DWORD PTR [ebp-0x20]
 100823f:	mov    DWORD PTR [esi],0x0
 1008245:	mov    eax,edi
 1008247:	mov    ecx,DWORD PTR [ebp-0x10]
 100824a:	mov    DWORD PTR fs:0x0,ecx
 1008251:	pop    ecx
 1008252:	pop    edi
 1008253:	pop    esi
 1008254:	pop    ebx
 1008255:	mov    esp,ebp
 1008257:	pop    ebp
 1008258:	ret    
 1008259:	int3   
 100825a:	int3   
 100825b:	int3   
 100825c:	int3   
 100825d:	int3   
 100825e:	int3   
 100825f:	int3   
 1008260:	mov    edi,edi
 1008262:	push   ebp
 1008263:	mov    ebp,esp
 1008265:	push   0xfffffffe
 1008267:	push   0x100abd8
 100826c:	push   0x1005ab7
 1008271:	mov    eax,fs:0x0
 1008277:	push   eax
 1008278:	sub    esp,0xc
 100827b:	push   ebx
 100827c:	push   esi
 100827d:	push   edi
 100827e:	mov    eax,ds:0x100c088
 1008283:	xor    DWORD PTR [ebp-0x8],eax
 1008286:	xor    eax,ebp
 1008288:	push   eax
 1008289:	lea    eax,[ebp-0x10]
 100828c:	mov    fs:0x0,eax
 1008292:	mov    DWORD PTR [ebp-0x18],esp
 1008295:	mov    esi,ecx
 1008297:	call   0x10081b0
 100829c:	xor    ebx,ebx
 100829e:	mov    DWORD PTR [ebp-0x4],ebx
 10082a1:	mov    edi,DWORD PTR [ebp+0x8]
 10082a4:	cmp    edi,ebx
 10082a6:	je     0x10082b0
 10082a8:	mov    eax,DWORD PTR [edi]
 10082aa:	push   edi
 10082ab:	mov    ecx,DWORD PTR [eax+0x4]
 10082ae:	call   ecx
 10082b0:	mov    DWORD PTR [esi],edi
 10082b2:	jmp    0x10082e3
 10082b4:	mov    edx,DWORD PTR [ebp-0x14]
 10082b7:	mov    eax,DWORD PTR [edx]
 10082b9:	mov    ecx,DWORD PTR [eax]
 10082bb:	mov    DWORD PTR [ebp-0x1c],ecx
 10082be:	mov    eax,0x1
 10082c3:	ret    
 10082c4:	mov    esp,DWORD PTR [ebp-0x18]
 10082c7:	mov    esi,DWORD PTR [ebp-0x1c]
 10082ca:	mov    ebx,esi
 10082cc:	cmp    esi,0xc00000fd
 10082d2:	jne    0x10082da
 10082d4:	call   DWORD PTR ds:0x10011f4
 10082da:	test   esi,esi
 10082dc:	jl     0x10082e3
 10082de:	mov    ebx,0x80004005
 10082e3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10082ea:	mov    eax,ebx
 10082ec:	mov    ecx,DWORD PTR [ebp-0x10]
 10082ef:	mov    DWORD PTR fs:0x0,ecx
 10082f6:	pop    ecx
 10082f7:	pop    edi
 10082f8:	pop    esi
 10082f9:	pop    ebx
 10082fa:	mov    esp,ebp
 10082fc:	pop    ebp
 10082fd:	ret    0x4
 1008300:	int3   
 1008301:	int3   
 1008302:	int3   
 1008303:	int3   
 1008304:	int3   
 1008305:	int3   
 1008306:	int3   
 1008307:	int3   
 1008308:	int3   
 1008309:	int3   
 100830a:	int3   
 100830b:	int3   
 100830c:	int3   
 100830d:	int3   
 100830e:	int3   
 100830f:	int3   
 1008310:	mov    DWORD PTR [ecx],0x0
 1008316:	ret    
 1008317:	int3   
 1008318:	int3   
 1008319:	int3   
 100831a:	int3   
 100831b:	int3   
 100831c:	int3   
 100831d:	int3   
 100831e:	int3   
 100831f:	int3   
 1008320:	mov    eax,DWORD PTR [ecx]
 1008322:	ret    
 1008323:	int3   
 1008324:	int3   
 1008325:	int3   
 1008326:	int3   
 1008327:	int3   
 1008328:	int3   
 1008329:	int3   
 100832a:	int3   
 100832b:	int3   
 100832c:	int3   
 100832d:	int3   
 100832e:	int3   
 100832f:	int3   
 1008330:	mov    edi,edi
 1008332:	push   ebp
 1008333:	mov    ebp,esp
 1008335:	mov    ecx,DWORD PTR [ebp+0xc]
 1008338:	or     eax,0xffffffff
 100833b:	test   ecx,ecx
 100833d:	push   esi
 100833e:	mov    esi,DWORD PTR [ebp+0x8]
 1008341:	jbe    0x1008362
 1008343:	movzx  edx,BYTE PTR [esi]
 1008346:	xor    edx,eax
 1008348:	and    edx,0xff
 100834e:	shr    eax,0x8
 1008351:	xor    eax,DWORD PTR [edx*4+0x1001ce0]
 1008358:	sub    ecx,0x1
 100835b:	add    esi,0x1
 100835e:	test   ecx,ecx
 1008360:	ja     0x1008343
 1008362:	pop    esi
 1008363:	pop    ebp
 1008364:	ret    0x8
 1008367:	int3   
 1008368:	int3   
 1008369:	int3   
 100836a:	int3   
 100836b:	int3   
 100836c:	int3   
 100836d:	int3   
 100836e:	int3   
 100836f:	int3   
 1008370:	mov    edi,edi
 1008372:	push   ebp
 1008373:	mov    ebp,esp
 1008375:	mov    edx,DWORD PTR [ebp+0x8]
 1008378:	xor    eax,eax
 100837a:	test   edx,edx
 100837c:	je     0x100839d
 100837e:	mov    eax,edx
 1008380:	push   esi
 1008381:	lea    esi,[eax+0x2]
 1008384:	mov    cx,WORD PTR [eax]
 1008387:	add    eax,0x2
 100838a:	test   cx,cx
 100838d:	jne    0x1008384
 100838f:	sub    eax,esi
 1008391:	sar    eax,1
 1008393:	add    eax,eax
 1008395:	push   eax
 1008396:	push   edx
 1008397:	call   0x1008330
 100839c:	pop    esi
 100839d:	pop    ebp
 100839e:	ret    0x4
 10083a1:	int3   
 10083a2:	int3   
 10083a3:	int3   
 10083a4:	int3   
 10083a5:	int3   
 10083a6:	int3   
 10083a7:	int3   
 10083a8:	int3   
 10083a9:	int3   
 10083aa:	int3   
 10083ab:	int3   
 10083ac:	int3   
 10083ad:	int3   
 10083ae:	int3   
 10083af:	int3   
 10083b0:	mov    eax,ecx
 10083b2:	mov    DWORD PTR [eax],0x0
 10083b8:	mov    DWORD PTR [eax+0x4],0x0
 10083bf:	ret    
 10083c0:	int3   
 10083c1:	int3   
 10083c2:	int3   
 10083c3:	int3   
 10083c4:	int3   
 10083c5:	int3   
 10083c6:	int3   
 10083c7:	int3   
 10083c8:	int3   
 10083c9:	int3   
 10083ca:	int3   
 10083cb:	int3   
 10083cc:	int3   
 10083cd:	int3   
 10083ce:	int3   
 10083cf:	int3   
 10083d0:	mov    eax,DWORD PTR [ecx]
 10083d2:	xor    ecx,ecx
 10083d4:	cmp    eax,0x2
 10083d7:	sete   cl
 10083da:	mov    eax,ecx
 10083dc:	ret    
 10083dd:	int3   
 10083de:	int3   
 10083df:	int3   
 10083e0:	int3   
 10083e1:	int3   
 10083e2:	int3   
 10083e3:	int3   
 10083e4:	int3   
 10083e5:	int3   
 10083e6:	int3   
 10083e7:	int3   
 10083e8:	int3   
 10083e9:	int3   
 10083ea:	int3   
 10083eb:	int3   
 10083ec:	int3   
 10083ed:	int3   
 10083ee:	int3   
 10083ef:	int3   
 10083f0:	mov    eax,DWORD PTR [ecx+0x4]
 10083f3:	ret    
 10083f4:	int3   
 10083f5:	int3   
 10083f6:	int3   
 10083f7:	int3   
 10083f8:	int3   
 10083f9:	int3   
 10083fa:	int3   
 10083fb:	int3   
 10083fc:	int3   
 10083fd:	int3   
 10083fe:	int3   
 10083ff:	int3   
 1008400:	mov    edi,edi
 1008402:	push   ebp
 1008403:	mov    ebp,esp
 1008405:	sub    esp,0x24
 1008408:	push   esi
 1008409:	push   0x10020f4
 100840e:	call   DWORD PTR ds:0x10010d0
 1008414:	mov    esi,eax
 1008416:	push   0x10020e0
 100841b:	push   esi
 100841c:	call   DWORD PTR ds:0x100115c
 1008422:	test   eax,eax
 1008424:	mov    ds:0x100c73c,eax
 1008429:	jne    0x1008432
 100842b:	push   esi
 100842c:	call   DWORD PTR ds:0x10010dc
 1008432:	lea    eax,[ebp-0x24]
 1008435:	push   eax
 1008436:	call   DWORD PTR ds:0x10010ac
 100843c:	mov    ecx,DWORD PTR [ebp-0x20]
 100843f:	mov    DWORD PTR ds:0x100c740,ecx
 1008445:	pop    esi
 1008446:	mov    esp,ebp
 1008448:	pop    ebp
 1008449:	ret    
 100844a:	int3   
 100844b:	int3   
 100844c:	int3   
 100844d:	int3   
 100844e:	int3   
 100844f:	int3   
 1008450:	mov    edi,edi
 1008452:	push   ebp
 1008453:	mov    ebp,esp
 1008455:	sub    esp,0x24
 1008458:	push   ebx
 1008459:	push   edi
 100845a:	mov    edi,DWORD PTR [ebp+0x8]
 100845d:	test   edi,edi
 100845f:	mov    ebx,edi
 1008461:	jne    0x100846d
 1008463:	pop    edi
 1008464:	xor    eax,eax
 1008466:	pop    ebx
 1008467:	mov    esp,ebp
 1008469:	pop    ebp
 100846a:	ret    0xc
 100846d:	cmp    DWORD PTR [ebp+0x10],0x0
 1008471:	mov    DWORD PTR [ebp+0x8],0xcc
 1008478:	je     0x1008481
 100847a:	mov    DWORD PTR [ebp+0x8],0xee
 1008481:	push   esi
 1008482:	mov    esi,DWORD PTR [ebp+0xc]
 1008485:	cmp    DWORD PTR ds:0x100c73c,0x0
 100848c:	je     0x10084cf
 100848e:	push   0x8
 1008490:	lea    eax,[ebp-0x8]
 1008493:	push   eax
 1008494:	mov    DWORD PTR [ebp-0x8],edi
 1008497:	call   DWORD PTR ds:0x1001070
 100849d:	push   eax
 100849e:	call   DWORD PTR ds:0x100c73c
 10084a4:	test   eax,eax
 10084a6:	je     0x10084cf
 10084a8:	mov    eax,DWORD PTR [ebp-0x4]
 10084ab:	test   al,0x1
 10084ad:	je     0x10084cf
 10084af:	mov    ecx,DWORD PTR [ebp+0x8]
 10084b2:	shr    eax,0x4
 10084b5:	and    eax,0x7ff
 10084ba:	test   ecx,eax
 10084bc:	je     0x1008524
 10084be:	mov    ecx,DWORD PTR ds:0x100c740
 10084c4:	lea    eax,[ecx-0x1]
 10084c7:	not    eax
 10084c9:	and    eax,edi
 10084cb:	add    eax,ecx
 10084cd:	jmp    0x1008508
 10084cf:	push   0x1c
 10084d1:	lea    edx,[ebp-0x24]
 10084d4:	push   edx
 10084d5:	push   edi
 10084d6:	call   DWORD PTR ds:0x10010a8
 10084dc:	cmp    eax,0x1c
 10084df:	jne    0x1008524
 10084e1:	mov    eax,DWORD PTR [ebp-0x24]
 10084e4:	mov    ecx,DWORD PTR [ebp-0x18]
 10084e7:	add    eax,ecx
 10084e9:	cmp    ebx,eax
 10084eb:	jae    0x100851a
 10084ed:	cmp    DWORD PTR [ebp-0x14],0x1000
 10084f4:	jne    0x1008524
 10084f6:	mov    ecx,DWORD PTR [ebp-0x10]
 10084f9:	mov    edx,DWORD PTR [ebp+0x8]
 10084fc:	test   edx,ecx
 10084fe:	je     0x1008524
 1008500:	test   ecx,0x100
 1008506:	jne    0x1008524
 1008508:	mov    ecx,eax
 100850a:	sub    ecx,ebx
 100850c:	cmp    ecx,esi
 100850e:	jb     0x1008512
 1008510:	mov    ecx,esi
 1008512:	sub    esi,ecx
 1008514:	add    ebx,ecx
 1008516:	test   esi,esi
 1008518:	je     0x100852f
 100851a:	cmp    eax,ebx
 100851c:	mov    edi,eax
 100851e:	jbe    0x1008485
 1008524:	pop    esi
 1008525:	pop    edi
 1008526:	xor    eax,eax
 1008528:	pop    ebx
 1008529:	mov    esp,ebp
 100852b:	pop    ebp
 100852c:	ret    0xc
 100852f:	pop    esi
 1008530:	pop    edi
 1008531:	mov    eax,0x1
 1008536:	pop    ebx
 1008537:	mov    esp,ebp
 1008539:	pop    ebp
 100853a:	ret    0xc
 100853d:	int3   
 100853e:	int3   
 100853f:	int3   
 1008540:	int3   
 1008541:	int3   
 1008542:	int3   
 1008543:	int3   
 1008544:	int3   
 1008545:	int3   
 1008546:	int3   
 1008547:	int3   
 1008548:	int3   
 1008549:	int3   
 100854a:	int3   
 100854b:	int3   
 100854c:	int3   
 100854d:	int3   
 100854e:	int3   
 100854f:	int3   
 1008550:	xor    eax,eax
 1008552:	test   ecx,ecx
 1008554:	push   esi
 1008555:	mov    esi,ecx
 1008557:	je     0x1008573
 1008559:	lea    esp,[esp+0x0]
 1008560:	cmp    WORD PTR [edx],ax
 1008563:	je     0x100856f
 1008565:	add    edx,0x2
 1008568:	sub    ecx,0x1
 100856b:	jne    0x1008560
 100856d:	jmp    0x1008573
 100856f:	test   ecx,ecx
 1008571:	jne    0x1008578
 1008573:	mov    eax,0x80070057
 1008578:	test   edi,edi
 100857a:	je     0x100858c
 100857c:	test   eax,eax
 100857e:	jl     0x1008586
 1008580:	sub    esi,ecx
 1008582:	mov    DWORD PTR [edi],esi
 1008584:	pop    esi
 1008585:	ret    
 1008586:	mov    DWORD PTR [edi],0x0
 100858c:	pop    esi
 100858d:	ret    
 100858e:	int3   
 100858f:	int3   
 1008590:	int3   
 1008591:	int3   
 1008592:	int3   
 1008593:	int3   
 1008594:	int3   
 1008595:	int3   
 1008596:	int3   
 1008597:	int3   
 1008598:	int3   
 1008599:	int3   
 100859a:	int3   
 100859b:	int3   
 100859c:	int3   
 100859d:	int3   
 100859e:	int3   
 100859f:	int3   
 10085a0:	mov    edi,edi
 10085a2:	push   ebp
 10085a3:	mov    ebp,esp
 10085a5:	push   0xfffffffe
 10085a7:	push   0x100abf8
 10085ac:	push   0x1005ab7
 10085b1:	mov    eax,fs:0x0
 10085b7:	push   eax
 10085b8:	sub    esp,0x10
 10085bb:	push   ebx
 10085bc:	push   esi
 10085bd:	push   edi
 10085be:	mov    eax,ds:0x100c088
 10085c3:	xor    DWORD PTR [ebp-0x8],eax
 10085c6:	xor    eax,ebp
 10085c8:	push   eax
 10085c9:	lea    eax,[ebp-0x10]
 10085cc:	mov    fs:0x0,eax
 10085d2:	mov    DWORD PTR [ebp-0x18],esp
 10085d5:	mov    esi,ecx
 10085d7:	xor    ebx,ebx
 10085d9:	xor    edi,edi
 10085db:	mov    DWORD PTR [ebp-0x1c],edi
 10085de:	mov    DWORD PTR [ebp-0x4],ebx
 10085e1:	cmp    DWORD PTR [esi],ebx
 10085e3:	jne    0x1008611
 10085e5:	push   ebx
 10085e6:	push   0x10000
 10085eb:	push   ebx
 10085ec:	call   DWORD PTR ds:0x10010a4
 10085f2:	mov    DWORD PTR [esi],eax
 10085f4:	test   eax,eax
 10085f6:	jne    0x1008611
 10085f8:	call   DWORD PTR ds:0x1001144
 10085fe:	test   eax,eax
 1008600:	jle    0x100860c
 1008602:	and    eax,0xffff
 1008607:	or     eax,0x80070000
 100860c:	mov    edi,eax
 100860e:	mov    DWORD PTR [ebp-0x1c],edi
 1008611:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1008618:	jmp    0x1008653
 100861a:	mov    eax,DWORD PTR [ebp-0x14]
 100861d:	mov    ecx,DWORD PTR [eax]
 100861f:	mov    edx,DWORD PTR [ecx]
 1008621:	mov    DWORD PTR [ebp-0x20],edx
 1008624:	mov    eax,0x1
 1008629:	ret    
 100862a:	mov    esp,DWORD PTR [ebp-0x18]
 100862d:	mov    esi,DWORD PTR [ebp-0x20]
 1008630:	mov    ebx,esi
 1008632:	cmp    esi,0xc00000fd
 1008638:	jne    0x1008640
 100863a:	call   DWORD PTR ds:0x10011f4
 1008640:	test   esi,esi
 1008642:	jl     0x1008649
 1008644:	mov    ebx,0x80004005
 1008649:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1008650:	mov    edi,DWORD PTR [ebp-0x1c]
 1008653:	test   edi,edi
 1008655:	mov    eax,ebx
 1008657:	jge    0x100865b
 1008659:	mov    eax,edi
 100865b:	mov    ecx,DWORD PTR [ebp-0x10]
 100865e:	mov    DWORD PTR fs:0x0,ecx
 1008665:	pop    ecx
 1008666:	pop    edi
 1008667:	pop    esi
 1008668:	pop    ebx
 1008669:	mov    esp,ebp
 100866b:	pop    ebp
 100866c:	ret    
 100866d:	int3   
 100866e:	int3   
 100866f:	int3   
 1008670:	int3   
 1008671:	int3   
 1008672:	int3   
 1008673:	int3   
 1008674:	int3   
 1008675:	int3   
 1008676:	int3   
 1008677:	int3   
 1008678:	int3   
 1008679:	int3   
 100867a:	int3   
 100867b:	int3   
 100867c:	int3   
 100867d:	int3   
 100867e:	int3   
 100867f:	int3   
 1008680:	mov    edi,edi
 1008682:	push   esi
 1008683:	push   0x0
 1008685:	mov    esi,ecx
 1008687:	push   0x1
 1008689:	push   esi
 100868a:	call   DWORD PTR ds:0x1001134
 1008690:	test   eax,eax
 1008692:	jne    0x100869b
 1008694:	mov    eax,0x1
 1008699:	pop    esi
 100869a:	ret    
 100869b:	mov    eax,DWORD PTR [esi]
 100869d:	cmp    eax,0x2
 10086a0:	je     0x10086bc
 10086a2:	push   edi
 10086a3:	mov    edi,DWORD PTR ds:0x1001050
 10086a9:	lea    esp,[esp+0x0]
 10086b0:	push   0x1
 10086b2:	call   edi
 10086b4:	mov    ecx,DWORD PTR [esi]
 10086b6:	cmp    ecx,0x2
 10086b9:	jne    0x10086b0
 10086bb:	pop    edi
 10086bc:	xor    eax,eax
 10086be:	pop    esi
 10086bf:	ret    
 10086c0:	int3   
 10086c1:	int3   
 10086c2:	int3   
 10086c3:	int3   
 10086c4:	int3   
 10086c5:	int3   
 10086c6:	int3   
 10086c7:	int3   
 10086c8:	int3   
 10086c9:	int3   
 10086ca:	int3   
 10086cb:	int3   
 10086cc:	int3   
 10086cd:	int3   
 10086ce:	int3   
 10086cf:	int3   
 10086d0:	mov    edi,edi
 10086d2:	push   ebp
 10086d3:	mov    ebp,esp
 10086d5:	mov    eax,DWORD PTR [ebp+0x8]
 10086d8:	push   0x1
 10086da:	push   0x2
 10086dc:	push   ecx
 10086dd:	mov    DWORD PTR [ecx+0x4],eax
 10086e0:	call   DWORD PTR ds:0x1001134
 10086e6:	pop    ebp
 10086e7:	ret    0x4
 10086ea:	int3   
 10086eb:	int3   
 10086ec:	int3   
 10086ed:	int3   
 10086ee:	int3   
 10086ef:	int3   
 10086f0:	mov    edi,edi
 10086f2:	push   ebp
 10086f3:	mov    ebp,esp
 10086f5:	push   ecx
 10086f6:	push   ebx
 10086f7:	push   esi
 10086f8:	push   edi
 10086f9:	mov    edi,DWORD PTR [ebp+0xc]
 10086fc:	test   edi,edi
 10086fe:	mov    DWORD PTR [ebp-0x4],0x0
 1008705:	je     0x100877c
 1008707:	mov    ebx,DWORD PTR [ebp+0x8]
 100870a:	test   ebx,ebx
 100870c:	je     0x100877c
 100870e:	mov    esi,DWORD PTR [ebp+0x10]
 1008711:	test   esi,esi
 1008713:	je     0x100877c
 1008715:	push   0x1
 1008717:	push   esi
 1008718:	push   edi
 1008719:	call   0x1008450
 100871e:	test   eax,eax
 1008720:	jne    0x1008730
 1008722:	pop    edi
 1008723:	pop    esi
 1008724:	mov    eax,0x800703e6
 1008729:	pop    ebx
 100872a:	mov    esp,ebp
 100872c:	pop    ebp
 100872d:	ret    0xc
 1008730:	lea    eax,[ebp-0x4]
 1008733:	push   eax
 1008734:	push   esi
 1008735:	push   ebx
 1008736:	push   edi
 1008737:	call   DWORD PTR ds:0x1001070
 100873d:	push   eax
 100873e:	call   DWORD PTR ds:0x10010a0
 1008744:	test   eax,eax
 1008746:	je     0x100875f
 1008748:	mov    eax,DWORD PTR [ebp-0x4]
 100874b:	sub    eax,esi
 100874d:	neg    eax
 100874f:	pop    edi
 1008750:	sbb    eax,eax
 1008752:	pop    esi
 1008753:	and    eax,0x8007012b
 1008758:	pop    ebx
 1008759:	mov    esp,ebp
 100875b:	pop    ebp
 100875c:	ret    0xc
 100875f:	call   DWORD PTR ds:0x1001144
 1008765:	test   eax,eax
 1008767:	jle    0x1008781
 1008769:	pop    edi
 100876a:	and    eax,0xffff
 100876f:	pop    esi
 1008770:	or     eax,0x80070000
 1008775:	pop    ebx
 1008776:	mov    esp,ebp
 1008778:	pop    ebp
 1008779:	ret    0xc
 100877c:	mov    eax,0x80070057
 1008781:	pop    edi
 1008782:	pop    esi
 1008783:	pop    ebx
 1008784:	mov    esp,ebp
 1008786:	pop    ebp
 1008787:	ret    0xc
 100878a:	int3   
 100878b:	int3   
 100878c:	int3   
 100878d:	int3   
 100878e:	int3   
 100878f:	int3   
 1008790:	mov    edi,edi
 1008792:	push   ebp
 1008793:	mov    ebp,esp
 1008795:	mov    ecx,DWORD PTR [ebp+0xc]
 1008798:	xor    eax,eax
 100879a:	test   ecx,ecx
 100879c:	je     0x10087a6
 100879e:	cmp    ecx,0x7fffffff
 10087a4:	jbe    0x10087ab
 10087a6:	mov    eax,0x80070057
 10087ab:	test   eax,eax
 10087ad:	jl     0x10087f6
 10087af:	mov    eax,DWORD PTR [ebp+0x18]
 10087b2:	mov    edx,DWORD PTR [ebp+0x10]
 10087b5:	push   ebx
 10087b6:	push   esi
 10087b7:	push   edi
 10087b8:	mov    edi,DWORD PTR [ebp+0x8]
 10087bb:	push   eax
 10087bc:	lea    esi,[ecx-0x1]
 10087bf:	mov    ecx,DWORD PTR [ebp+0x14]
 10087c2:	push   ecx
 10087c3:	push   edx
 10087c4:	push   esi
 10087c5:	push   edi
 10087c6:	xor    ebx,ebx
 10087c8:	call   DWORD PTR ds:0x10011f8
 10087ce:	add    esp,0x14
 10087d1:	test   eax,eax
 10087d3:	jl     0x10087e8
 10087d5:	cmp    eax,esi
 10087d7:	ja     0x10087e8
 10087d9:	jne    0x10087f1
 10087db:	mov    WORD PTR [edi+esi*2],bx
 10087df:	pop    edi
 10087e0:	pop    esi
 10087e1:	mov    eax,ebx
 10087e3:	pop    ebx
 10087e4:	pop    ebp
 10087e5:	ret    0x14
 10087e8:	mov    WORD PTR [edi+esi*2],bx
 10087ec:	mov    ebx,0x8007007a
 10087f1:	pop    edi
 10087f2:	pop    esi
 10087f3:	mov    eax,ebx
 10087f5:	pop    ebx
 10087f6:	pop    ebp
 10087f7:	ret    0x14
 10087fa:	int3   
 10087fb:	int3   
 10087fc:	int3   
 10087fd:	int3   
 10087fe:	int3   
 10087ff:	int3   
 1008800:	mov    edi,edi
 1008802:	push   ebp
 1008803:	mov    ebp,esp
 1008805:	push   esi
 1008806:	mov    esi,DWORD PTR [ebp+0xc]
 1008809:	cmp    esi,0x7fffffff
 100880f:	jbe    0x1008819
 1008811:	mov    eax,0x80070057
 1008816:	pop    esi
 1008817:	pop    ebp
 1008818:	ret    
 1008819:	push   ebx
 100881a:	mov    ebx,DWORD PTR [ebp+0x8]
 100881d:	test   ebx,ebx
 100881f:	push   edi
 1008820:	mov    DWORD PTR [ebp+0xc],0x0
 1008827:	je     0x100883d
 1008829:	lea    edi,[ebp+0xc]
 100882c:	mov    ecx,esi
 100882e:	mov    edx,ebx
 1008830:	call   0x1008550
 1008835:	test   eax,eax
 1008837:	jge    0x1008846
 1008839:	xor    edi,edi
 100883b:	jmp    0x1008849
 100883d:	mov    eax,0x80070057
 1008842:	xor    edi,edi
 1008844:	jmp    0x1008849
 1008846:	mov    edi,DWORD PTR [ebp+0xc]
 1008849:	test   eax,eax
 100884b:	jl     0x1008867
 100884d:	lea    eax,[ebp+0x14]
 1008850:	push   eax
 1008851:	call   0x1004231
 1008856:	mov    ecx,DWORD PTR [ebp+0x10]
 1008859:	push   eax
 100885a:	push   ecx
 100885b:	sub    esi,edi
 100885d:	push   esi
 100885e:	lea    edx,[ebx+edi*2]
 1008861:	push   edx
 1008862:	call   0x1008790
 1008867:	pop    edi
 1008868:	pop    ebx
 1008869:	pop    esi
 100886a:	pop    ebp
 100886b:	ret    
 100886c:	int3   
 100886d:	int3   
 100886e:	int3   
 100886f:	int3   
 1008870:	int3   
 1008871:	int3   
 1008872:	int3   
 1008873:	int3   
 1008874:	int3   
 1008875:	int3   
 1008876:	int3   
 1008877:	int3   
 1008878:	int3   
 1008879:	int3   
 100887a:	int3   
 100887b:	int3   
 100887c:	int3   
 100887d:	int3   
 100887e:	int3   
 100887f:	int3   
 1008880:	mov    edi,edi
 1008882:	push   ebp
 1008883:	mov    ebp,esp
 1008885:	push   ecx
 1008886:	push   ebx
 1008887:	push   esi
 1008888:	mov    esi,DWORD PTR [ebp+0x10]
 100888b:	push   edi
 100888c:	mov    edi,DWORD PTR [ebp+0x14]
 100888f:	push   0x100182c
 1008894:	push   edi
 1008895:	lea    eax,[edi+edi*1]
 1008898:	xor    ebx,ebx
 100889a:	push   esi
 100889b:	mov    DWORD PTR [ebp-0x4],ebx
 100889e:	mov    DWORD PTR [ebp+0x14],eax
 10088a1:	call   0x1003dbc
 10088a6:	cmp    DWORD PTR [ebp+0x14],edi
 10088a9:	jae    0x10088b9
 10088ab:	pop    edi
 10088ac:	pop    esi
 10088ad:	mov    eax,0x80070057
 10088b2:	pop    ebx
 10088b3:	mov    esp,ebp
 10088b5:	pop    ebp
 10088b6:	ret    0x10
 10088b9:	mov    eax,DWORD PTR [ebp+0xc]
 10088bc:	lea    ecx,[ebp+0x14]
 10088bf:	push   ecx
 10088c0:	mov    ecx,DWORD PTR [ebp+0x8]
 10088c3:	push   esi
 10088c4:	lea    edx,[ebp-0x4]
 10088c7:	push   edx
 10088c8:	push   0x0
 10088ca:	push   eax
 10088cb:	push   ecx
 10088cc:	call   DWORD PTR ds:0x1001004
 10088d2:	test   eax,eax
 10088d4:	jne    0x1008929
 10088d6:	cmp    DWORD PTR [ebp-0x4],0x1
 10088da:	jne    0x1008919
 10088dc:	mov    eax,DWORD PTR [ebp+0x14]
 10088df:	test   al,0x1
 10088e1:	jne    0x1008919
 10088e3:	cmp    eax,0x2
 10088e6:	jb     0x1008919
 10088e8:	shr    eax,1
 10088ea:	sub    eax,0x1
 10088ed:	cmp    WORD PTR [esi+eax*2],bx
 10088f1:	je     0x1008937
 10088f3:	add    eax,0x1
 10088f6:	cmp    eax,edi
 10088f8:	jae    0x1008909
 10088fa:	mov    WORD PTR [esi+eax*2],bx
 10088fe:	pop    edi
 10088ff:	pop    esi
 1008900:	mov    eax,ebx
 1008902:	pop    ebx
 1008903:	mov    esp,ebp
 1008905:	pop    ebp
 1008906:	ret    0x10
 1008909:	pop    edi
 100890a:	mov    ebx,0x8007007a
 100890f:	pop    esi
 1008910:	mov    eax,ebx
 1008912:	pop    ebx
 1008913:	mov    esp,ebp
 1008915:	pop    ebp
 1008916:	ret    0x10
 1008919:	pop    edi
 100891a:	mov    ebx,0x8007000b
 100891f:	pop    esi
 1008920:	mov    eax,ebx
 1008922:	pop    ebx
 1008923:	mov    esp,ebp
 1008925:	pop    ebp
 1008926:	ret    0x10
 1008929:	jle    0x1008935
 100892b:	and    eax,0xffff
 1008930:	or     eax,0x80070000
 1008935:	mov    ebx,eax
 1008937:	pop    edi
 1008938:	pop    esi
 1008939:	mov    eax,ebx
 100893b:	pop    ebx
 100893c:	mov    esp,ebp
 100893e:	pop    ebp
 100893f:	ret    0x10
 1008942:	int3   
 1008943:	int3   
 1008944:	int3   
 1008945:	int3   
 1008946:	int3   
 1008947:	int3   
 1008948:	int3   
 1008949:	int3   
 100894a:	int3   
 100894b:	int3   
 100894c:	int3   
 100894d:	int3   
 100894e:	int3   
 100894f:	int3   
 1008950:	mov    edi,edi
 1008952:	push   ebp
 1008953:	mov    ebp,esp
 1008955:	mov    eax,DWORD PTR [ebp+0x14]
 1008958:	mov    ecx,DWORD PTR [ebp+0x10]
 100895b:	mov    edx,DWORD PTR [ebp+0xc]
 100895e:	push   eax
 100895f:	push   ecx
 1008960:	push   edx
 1008961:	call   0x10086f0
 1008966:	pop    ebp
 1008967:	ret    0x10
 100896a:	int3   
 100896b:	int3   
 100896c:	int3   
 100896d:	int3   
 100896e:	int3   
 100896f:	int3   
 1008970:	mov    edi,edi
 1008972:	push   ebp
 1008973:	mov    ebp,esp
 1008975:	mov    eax,DWORD PTR [ebp+0x8]
 1008978:	mov    ecx,DWORD PTR [ebp+0xc]
 100897b:	mov    DWORD PTR [eax+0x40],ecx
 100897e:	xor    eax,eax
 1008980:	pop    ebp
 1008981:	ret    0x8
 1008984:	int3   
 1008985:	int3   
 1008986:	int3   
 1008987:	int3   
 1008988:	int3   
 1008989:	int3   
 100898a:	int3   
 100898b:	int3   
 100898c:	int3   
 100898d:	int3   
 100898e:	int3   
 100898f:	int3   
 1008990:	mov    edi,edi
 1008992:	push   ebp
 1008993:	mov    ebp,esp
 1008995:	push   esi
 1008996:	mov    esi,DWORD PTR [ebp+0x8]
 1008999:	cmp    DWORD PTR [esi+0x40],0x0
 100899d:	push   edi
 100899e:	je     0x10089cd
 10089a0:	mov    eax,DWORD PTR [esi+0x68]
 10089a3:	not    eax
 10089a5:	and    eax,DWORD PTR [esi+0x64]
 10089a8:	test   al,0x20
 10089aa:	jne    0x10089cd
 10089ac:	mov    edi,DWORD PTR ds:0x1001148
 10089b2:	call   edi
 10089b4:	cmp    eax,DWORD PTR [esi+0x40]
 10089b7:	je     0x10089cd
 10089b9:	call   edi
 10089bb:	cmp    eax,DWORD PTR [esi+0x60]
 10089be:	je     0x10089cd
 10089c0:	mov    ecx,DWORD PTR [ebp+0xc]
 10089c3:	xor    eax,eax
 10089c5:	pop    edi
 10089c6:	mov    DWORD PTR [ecx],eax
 10089c8:	pop    esi
 10089c9:	pop    ebp
 10089ca:	ret    0x8
 10089cd:	mov    edx,DWORD PTR [ebp+0xc]
 10089d0:	mov    eax,0x1
 10089d5:	pop    edi
 10089d6:	mov    DWORD PTR [edx],eax
 10089d8:	xor    eax,eax
 10089da:	pop    esi
 10089db:	pop    ebp
 10089dc:	ret    0x8
 10089df:	int3   
 10089e0:	int3   
 10089e1:	int3   
 10089e2:	int3   
 10089e3:	int3   
 10089e4:	int3   
 10089e5:	int3   
 10089e6:	int3   
 10089e7:	int3   
 10089e8:	int3   
 10089e9:	int3   
 10089ea:	int3   
 10089eb:	int3   
 10089ec:	int3   
 10089ed:	int3   
 10089ee:	int3   
 10089ef:	int3   
 10089f0:	mov    edi,edi
 10089f2:	push   ebp
 10089f3:	mov    ebp,esp
 10089f5:	mov    eax,DWORD PTR [ebp+0x8]
 10089f8:	mov    ecx,DWORD PTR [ebp+0xc]
 10089fb:	mov    DWORD PTR [eax+0xb20],ecx
 1008a01:	xor    eax,eax
 1008a03:	pop    ebp
 1008a04:	ret    0x8
 1008a07:	int3   
 1008a08:	int3   
 1008a09:	int3   
 1008a0a:	int3   
 1008a0b:	int3   
 1008a0c:	int3   
 1008a0d:	int3   
 1008a0e:	int3   
 1008a0f:	int3   
 1008a10:	mov    edi,edi
 1008a12:	push   ebp
 1008a13:	mov    ebp,esp
 1008a15:	mov    eax,DWORD PTR [ebp+0x8]
 1008a18:	mov    ecx,DWORD PTR [ebp+0xc]
 1008a1b:	mov    DWORD PTR [eax+0x54],ecx
 1008a1e:	xor    eax,eax
 1008a20:	pop    ebp
 1008a21:	ret    0x8
 1008a24:	int3   
 1008a25:	int3   
 1008a26:	int3   
 1008a27:	int3   
 1008a28:	int3   
 1008a29:	int3   
 1008a2a:	int3   
 1008a2b:	int3   
 1008a2c:	int3   
 1008a2d:	int3   
 1008a2e:	int3   
 1008a2f:	int3   
 1008a30:	mov    edi,edi
 1008a32:	push   ebp
 1008a33:	mov    ebp,esp
 1008a35:	mov    eax,DWORD PTR [ebp+0x8]
 1008a38:	mov    ecx,DWORD PTR [ebp+0xc]
 1008a3b:	mov    edx,DWORD PTR [ebp+0x10]
 1008a3e:	mov    DWORD PTR [eax+0x58],ecx
 1008a41:	mov    DWORD PTR [eax+0x5c],edx
 1008a44:	xor    eax,eax
 1008a46:	pop    ebp
 1008a47:	ret    0xc
 1008a4a:	int3   
 1008a4b:	int3   
 1008a4c:	int3   
 1008a4d:	int3   
 1008a4e:	int3   
 1008a4f:	int3   
 1008a50:	mov    edi,edi
 1008a52:	push   ebp
 1008a53:	mov    ebp,esp
 1008a55:	mov    eax,DWORD PTR [ebp+0x8]
 1008a58:	mov    ecx,DWORD PTR [ebp+0xc]
 1008a5b:	mov    edx,DWORD PTR [ebp+0x10]
 1008a5e:	mov    DWORD PTR [eax+0x6c],ecx
 1008a61:	mov    DWORD PTR [eax+0x70],edx
 1008a64:	xor    eax,eax
 1008a66:	pop    ebp
 1008a67:	ret    0xc
 1008a6a:	int3   
 1008a6b:	int3   
 1008a6c:	int3   
 1008a6d:	int3   
 1008a6e:	int3   
 1008a6f:	int3   
 1008a70:	mov    edi,edi
 1008a72:	push   ebp
 1008a73:	mov    ebp,esp
 1008a75:	mov    ecx,DWORD PTR [ebp+0x10]
 1008a78:	mov    eax,DWORD PTR [ebp+0xc]
 1008a7b:	push   esi
 1008a7c:	mov    esi,DWORD PTR [ebp+0x8]
 1008a7f:	mov    DWORD PTR [esi+0x68],ecx
 1008a82:	mov    ecx,DWORD PTR [esi+0x8]
 1008a85:	test   ecx,ecx
 1008a87:	mov    DWORD PTR [esi+0x64],eax
 1008a8a:	je     0x1008aa2
 1008a8c:	call   0x10070a0
 1008a91:	test   eax,eax
 1008a93:	je     0x1008aa2
 1008a95:	mov    eax,0x20000
 1008a9a:	test   DWORD PTR [esi+0x68],eax
 1008a9d:	jne    0x1008aa2
 1008a9f:	or     DWORD PTR [esi+0x64],eax
 1008aa2:	xor    eax,eax
 1008aa4:	pop    esi
 1008aa5:	pop    ebp
 1008aa6:	ret    0xc
 1008aa9:	int3   
 1008aaa:	int3   
 1008aab:	int3   
 1008aac:	int3   
 1008aad:	int3   
 1008aae:	int3   
 1008aaf:	int3   
 1008ab0:	mov    edi,edi
 1008ab2:	push   ebp
 1008ab3:	mov    ebp,esp
 1008ab5:	mov    eax,DWORD PTR [ebp+0x8]
 1008ab8:	mov    ecx,DWORD PTR [ebp+0xc]
 1008abb:	mov    DWORD PTR [eax+0x24],ecx
 1008abe:	xor    eax,eax
 1008ac0:	pop    ebp
 1008ac1:	ret    0x8
 1008ac4:	int3   
 1008ac5:	int3   
 1008ac6:	int3   
 1008ac7:	int3   
 1008ac8:	int3   
 1008ac9:	int3   
 1008aca:	int3   
 1008acb:	int3   
 1008acc:	int3   
 1008acd:	int3   
 1008ace:	int3   
 1008acf:	int3   
 1008ad0:	mov    edi,edi
 1008ad2:	push   ebp
 1008ad3:	mov    ebp,esp
 1008ad5:	mov    eax,DWORD PTR [ebp+0x8]
 1008ad8:	mov    ecx,DWORD PTR [ebp+0xc]
 1008adb:	mov    DWORD PTR [eax+0x20],ecx
 1008ade:	xor    eax,eax
 1008ae0:	pop    ebp
 1008ae1:	ret    0x8
 1008ae4:	int3   
 1008ae5:	int3   
 1008ae6:	int3   
 1008ae7:	int3   
 1008ae8:	int3   
 1008ae9:	int3   
 1008aea:	int3   
 1008aeb:	int3   
 1008aec:	int3   
 1008aed:	int3   
 1008aee:	int3   
 1008aef:	int3   
 1008af0:	mov    edi,edi
 1008af2:	push   ebp
 1008af3:	mov    ebp,esp
 1008af5:	mov    eax,DWORD PTR [ebp+0x8]
 1008af8:	mov    ecx,DWORD PTR [ebp+0xc]
 1008afb:	mov    edx,DWORD PTR [ebp+0x10]
 1008afe:	mov    DWORD PTR [eax+0x60],ecx
 1008b01:	mov    ecx,DWORD PTR [ebp+0x14]
 1008b04:	mov    DWORD PTR [eax+0x1c],edx
 1008b07:	mov    DWORD PTR [eax+0x18],ecx
 1008b0a:	xor    eax,eax
 1008b0c:	pop    ebp
 1008b0d:	ret    0x10
 1008b10:	int3   
 1008b11:	int3   
 1008b12:	int3   
 1008b13:	int3   
 1008b14:	int3   
 1008b15:	int3   
 1008b16:	int3   
 1008b17:	int3   
 1008b18:	int3   
 1008b19:	int3   
 1008b1a:	int3   
 1008b1b:	int3   
 1008b1c:	int3   
 1008b1d:	int3   
 1008b1e:	int3   
 1008b1f:	int3   
 1008b20:	mov    edi,edi
 1008b22:	push   ebp
 1008b23:	mov    ebp,esp
 1008b25:	mov    eax,DWORD PTR [ebp+0x8]
 1008b28:	mov    ecx,DWORD PTR [ebp+0xc]
 1008b2b:	mov    DWORD PTR [eax+0x48],ecx
 1008b2e:	xor    eax,eax
 1008b30:	pop    ebp
 1008b31:	ret    0x8
 1008b34:	int3   
 1008b35:	int3   
 1008b36:	int3   
 1008b37:	int3   
 1008b38:	int3   
 1008b39:	int3   
 1008b3a:	int3   
 1008b3b:	int3   
 1008b3c:	int3   
 1008b3d:	int3   
 1008b3e:	int3   
 1008b3f:	int3   
 1008b40:	mov    edi,edi
 1008b42:	push   ebp
 1008b43:	mov    ebp,esp
 1008b45:	mov    eax,DWORD PTR [ebp+0x8]
 1008b48:	mov    ecx,DWORD PTR [ebp+0xc]
 1008b4b:	mov    DWORD PTR [eax+0x2c],ecx
 1008b4e:	xor    eax,eax
 1008b50:	pop    ebp
 1008b51:	ret    0x8
 1008b54:	int3   
 1008b55:	int3   
 1008b56:	int3   
 1008b57:	int3   
 1008b58:	int3   
 1008b59:	int3   
 1008b5a:	int3   
 1008b5b:	int3   
 1008b5c:	int3   
 1008b5d:	int3   
 1008b5e:	int3   
 1008b5f:	int3   
 1008b60:	mov    edi,edi
 1008b62:	push   ebp
 1008b63:	mov    ebp,esp
 1008b65:	mov    eax,DWORD PTR [ebp+0x8]
 1008b68:	mov    ecx,DWORD PTR [ebp+0xc]
 1008b6b:	mov    DWORD PTR [eax+0x28],ecx
 1008b6e:	xor    eax,eax
 1008b70:	pop    ebp
 1008b71:	ret    0x8
 1008b74:	int3   
 1008b75:	int3   
 1008b76:	int3   
 1008b77:	int3   
 1008b78:	int3   
 1008b79:	int3   
 1008b7a:	int3   
 1008b7b:	int3   
 1008b7c:	int3   
 1008b7d:	int3   
 1008b7e:	int3   
 1008b7f:	int3   
 1008b80:	mov    edi,edi
 1008b82:	push   ebp
 1008b83:	mov    ebp,esp
 1008b85:	mov    eax,DWORD PTR [ebp+0x8]
 1008b88:	mov    ecx,DWORD PTR [ebp+0xc]
 1008b8b:	mov    DWORD PTR [eax+0x14],ecx
 1008b8e:	xor    eax,eax
 1008b90:	pop    ebp
 1008b91:	ret    0x8
 1008b94:	int3   
 1008b95:	int3   
 1008b96:	int3   
 1008b97:	int3   
 1008b98:	int3   
 1008b99:	int3   
 1008b9a:	int3   
 1008b9b:	int3   
 1008b9c:	int3   
 1008b9d:	int3   
 1008b9e:	int3   
 1008b9f:	int3   
 1008ba0:	mov    edi,edi
 1008ba2:	push   ebp
 1008ba3:	mov    ebp,esp
 1008ba5:	mov    eax,DWORD PTR [ebp+0x8]
 1008ba8:	mov    ecx,DWORD PTR [ebp+0xc]
 1008bab:	mov    DWORD PTR [eax+0x30],ecx
 1008bae:	xor    eax,eax
 1008bb0:	pop    ebp
 1008bb1:	ret    0x8
 1008bb4:	int3   
 1008bb5:	int3   
 1008bb6:	int3   
 1008bb7:	int3   
 1008bb8:	int3   
 1008bb9:	int3   
 1008bba:	int3   
 1008bbb:	int3   
 1008bbc:	int3   
 1008bbd:	int3   
 1008bbe:	int3   
 1008bbf:	int3   
 1008bc0:	mov    edi,edi
 1008bc2:	push   ebp
 1008bc3:	mov    ebp,esp
 1008bc5:	mov    eax,DWORD PTR [ebp+0x8]
 1008bc8:	mov    ecx,DWORD PTR [ebp+0xc]
 1008bcb:	mov    edx,DWORD PTR [ebp+0x10]
 1008bce:	mov    DWORD PTR [eax+0x4c],ecx
 1008bd1:	mov    DWORD PTR [eax+0x50],edx
 1008bd4:	xor    eax,eax
 1008bd6:	pop    ebp
 1008bd7:	ret    0xc
 1008bda:	int3   
 1008bdb:	int3   
 1008bdc:	int3   
 1008bdd:	int3   
 1008bde:	int3   
 1008bdf:	int3   
 1008be0:	mov    edi,edi
 1008be2:	push   ebp
 1008be3:	mov    ebp,esp
 1008be5:	mov    eax,DWORD PTR [ebp+0x8]
 1008be8:	mov    ecx,DWORD PTR [ebp+0xc]
 1008beb:	mov    DWORD PTR [eax+0x34],ecx
 1008bee:	xor    eax,eax
 1008bf0:	pop    ebp
 1008bf1:	ret    0x8
 1008bf4:	int3   
 1008bf5:	int3   
 1008bf6:	int3   
 1008bf7:	int3   
 1008bf8:	int3   
 1008bf9:	int3   
 1008bfa:	int3   
 1008bfb:	int3   
 1008bfc:	int3   
 1008bfd:	int3   
 1008bfe:	int3   
 1008bff:	int3   
 1008c00:	mov    edi,edi
 1008c02:	push   ebp
 1008c03:	mov    ebp,esp
 1008c05:	mov    eax,DWORD PTR [ebp+0x8]
 1008c08:	mov    ecx,DWORD PTR [ebp+0xc]
 1008c0b:	mov    DWORD PTR [eax+0x38],ecx
 1008c0e:	xor    eax,eax
 1008c10:	pop    ebp
 1008c11:	ret    0x8
 1008c14:	int3   
 1008c15:	int3   
 1008c16:	int3   
 1008c17:	int3   
 1008c18:	int3   
 1008c19:	int3   
 1008c1a:	int3   
 1008c1b:	int3   
 1008c1c:	int3   
 1008c1d:	int3   
 1008c1e:	int3   
 1008c1f:	int3   
 1008c20:	mov    edi,edi
 1008c22:	push   ebp
 1008c23:	mov    ebp,esp
 1008c25:	mov    eax,DWORD PTR [ebp+0x8]
 1008c28:	mov    ecx,DWORD PTR [ebp+0xc]
 1008c2b:	mov    DWORD PTR [eax+0xb34],ecx
 1008c31:	xor    eax,eax
 1008c33:	pop    ebp
 1008c34:	ret    0x8
 1008c37:	int3   
 1008c38:	int3   
 1008c39:	int3   
 1008c3a:	int3   
 1008c3b:	int3   
 1008c3c:	int3   
 1008c3d:	int3   
 1008c3e:	int3   
 1008c3f:	int3   
 1008c40:	mov    edi,edi
 1008c42:	push   ebp
 1008c43:	mov    ebp,esp
 1008c45:	mov    ecx,DWORD PTR [ebp+0x8]
 1008c48:	cmp    DWORD PTR [ecx+0xb30],0x0
 1008c4f:	mov    eax,0x80004005
 1008c54:	je     0x1008c75
 1008c56:	cmp    DWORD PTR [ecx+0xb2c],0x0
 1008c5d:	jne    0x1008c75
 1008c5f:	cmp    DWORD PTR [ecx+0xb28],0x0
 1008c66:	je     0x1008c75
 1008c68:	mov    ecx,DWORD PTR [ecx+0xb24]
 1008c6e:	mov    edx,DWORD PTR [ebp+0xc]
 1008c71:	xor    eax,eax
 1008c73:	mov    DWORD PTR [edx],ecx
 1008c75:	pop    ebp
 1008c76:	ret    0x8
 1008c79:	int3   
 1008c7a:	int3   
 1008c7b:	int3   
 1008c7c:	int3   
 1008c7d:	int3   
 1008c7e:	int3   
 1008c7f:	int3   
 1008c80:	mov    edi,edi
 1008c82:	push   ebp
 1008c83:	mov    ebp,esp
 1008c85:	push   esi
 1008c86:	mov    esi,DWORD PTR [ebp+0x10]
 1008c89:	push   edi
 1008c8a:	mov    edi,DWORD PTR [ebp+0xc]
 1008c8d:	push   edi
 1008c8e:	push   0x100138c
 1008c93:	mov    DWORD PTR [esi],0x0
 1008c99:	call   0x1006eb0
 1008c9e:	test   eax,eax
 1008ca0:	jne    0x1008cb1
 1008ca2:	push   edi
 1008ca3:	push   0x1002128
 1008ca8:	call   0x1006eb0
 1008cad:	test   eax,eax
 1008caf:	je     0x1008cc6
 1008cb1:	mov    eax,DWORD PTR [ebp+0x8]
 1008cb4:	mov    DWORD PTR [esi],eax
 1008cb6:	mov    ecx,DWORD PTR [eax]
 1008cb8:	mov    edx,DWORD PTR [ecx+0x4]
 1008cbb:	push   eax
 1008cbc:	call   edx
 1008cbe:	pop    edi
 1008cbf:	xor    eax,eax
 1008cc1:	pop    esi
 1008cc2:	pop    ebp
 1008cc3:	ret    0xc
 1008cc6:	pop    edi
 1008cc7:	mov    eax,0x80004002
 1008ccc:	pop    esi
 1008ccd:	pop    ebp
 1008cce:	ret    0xc
 1008cd1:	int3   
 1008cd2:	int3   
 1008cd3:	int3   
 1008cd4:	int3   
 1008cd5:	int3   
 1008cd6:	int3   
 1008cd7:	int3   
 1008cd8:	int3   
 1008cd9:	int3   
 1008cda:	int3   
 1008cdb:	int3   
 1008cdc:	int3   
 1008cdd:	int3   
 1008cde:	int3   
 1008cdf:	int3   
 1008ce0:	mov    edi,edi
 1008ce2:	push   ebp
 1008ce3:	mov    ebp,esp
 1008ce5:	mov    eax,DWORD PTR [ebp+0x8]
 1008ce8:	add    eax,0x4
 1008ceb:	push   eax
 1008cec:	call   DWORD PTR ds:0x1001164
 1008cf2:	pop    ebp
 1008cf3:	ret    0x4
 1008cf6:	int3   
 1008cf7:	int3   
 1008cf8:	int3   
 1008cf9:	int3   
 1008cfa:	int3   
 1008cfb:	int3   
 1008cfc:	int3   
 1008cfd:	int3   
 1008cfe:	int3   
 1008cff:	int3   
 1008d00:	mov    edi,edi
 1008d02:	push   ebp
 1008d03:	mov    ebp,esp
 1008d05:	push   esi
 1008d06:	push   edi
 1008d07:	mov    edi,DWORD PTR [ebp+0x8]
 1008d0a:	lea    eax,[edi+0x4]
 1008d0d:	push   eax
 1008d0e:	call   DWORD PTR ds:0x1001160
 1008d14:	mov    esi,eax
 1008d16:	test   esi,esi
 1008d18:	jne    0x1008d25
 1008d1a:	mov    ecx,DWORD PTR [edi+0x8]
 1008d1d:	push   edi
 1008d1e:	call   0x10074b0
 1008d23:	mov    eax,esi
 1008d25:	pop    edi
 1008d26:	pop    esi
 1008d27:	pop    ebp
 1008d28:	ret    0x4
 1008d2b:	int3   
 1008d2c:	int3   
 1008d2d:	int3   
 1008d2e:	int3   
 1008d2f:	int3   
 1008d30:	xor    eax,eax
 1008d32:	test   ecx,ecx
 1008d34:	push   esi
 1008d35:	mov    esi,ecx
 1008d37:	je     0x1008d53
 1008d39:	lea    esp,[esp+0x0]
 1008d40:	cmp    WORD PTR [edx],ax
 1008d43:	je     0x1008d4f
 1008d45:	add    edx,0x2
 1008d48:	sub    ecx,0x1
 1008d4b:	jne    0x1008d40
 1008d4d:	jmp    0x1008d53
 1008d4f:	test   ecx,ecx
 1008d51:	jne    0x1008d58
 1008d53:	mov    eax,0x80070057
 1008d58:	test   edi,edi
 1008d5a:	je     0x1008d6c
 1008d5c:	test   eax,eax
 1008d5e:	jl     0x1008d66
 1008d60:	sub    esi,ecx
 1008d62:	mov    DWORD PTR [edi],esi
 1008d64:	pop    esi
 1008d65:	ret    
 1008d66:	mov    DWORD PTR [edi],0x0
 1008d6c:	pop    esi
 1008d6d:	ret    
 1008d6e:	int3   
 1008d6f:	int3   
 1008d70:	int3   
 1008d71:	int3   
 1008d72:	int3   
 1008d73:	int3   
 1008d74:	int3   
 1008d75:	int3   
 1008d76:	int3   
 1008d77:	int3   
 1008d78:	int3   
 1008d79:	int3   
 1008d7a:	int3   
 1008d7b:	int3   
 1008d7c:	int3   
 1008d7d:	int3   
 1008d7e:	int3   
 1008d7f:	int3   
 1008d80:	mov    edi,edi
 1008d82:	push   ebp
 1008d83:	mov    ebp,esp
 1008d85:	push   ecx
 1008d86:	push   ebx
 1008d87:	push   esi
 1008d88:	push   edi
 1008d89:	mov    esi,ecx
 1008d8b:	mov    ebx,DWORD PTR [esi+0x224]
 1008d91:	push   0x220
 1008d96:	push   esi
 1008d97:	mov    DWORD PTR [ebp-0x4],ebx
 1008d9a:	call   0x1008330
 1008d9f:	mov    edi,eax
 1008da1:	add    edi,ebx
 1008da3:	xor    ebx,ebx
 1008da5:	cmp    DWORD PTR [ebp-0x4],ebx
 1008da8:	jbe    0x1008dd8
 1008daa:	mov    DWORD PTR [ebp-0x4],ebx
 1008dad:	lea    ecx,[ecx+0x0]
 1008db0:	mov    eax,DWORD PTR [esi+0x220]
 1008db6:	add    eax,DWORD PTR [ebp-0x4]
 1008db9:	push   0xb3c
 1008dbe:	push   eax
 1008dbf:	call   0x1008330
 1008dc4:	add    DWORD PTR [ebp-0x4],0xb3c
 1008dcb:	add    ebx,0x1
 1008dce:	add    edi,eax
 1008dd0:	cmp    ebx,DWORD PTR [esi+0x224]
 1008dd6:	jb     0x1008db0
 1008dd8:	mov    eax,edi
 1008dda:	pop    edi
 1008ddb:	pop    esi
 1008ddc:	pop    ebx
 1008ddd:	mov    esp,ebp
 1008ddf:	pop    ebp
 1008de0:	ret    
 1008de1:	int3   
 1008de2:	int3   
 1008de3:	int3   
 1008de4:	int3   
 1008de5:	int3   
 1008de6:	int3   
 1008de7:	int3   
 1008de8:	int3   
 1008de9:	int3   
 1008dea:	int3   
 1008deb:	int3   
 1008dec:	int3   
 1008ded:	int3   
 1008dee:	int3   
 1008def:	int3   
 1008df0:	mov    edi,edi
 1008df2:	push   ebp
 1008df3:	mov    ebp,esp
 1008df5:	push   esi
 1008df6:	mov    esi,ecx
 1008df8:	mov    eax,DWORD PTR [esi+0x8]
 1008dfb:	test   eax,eax
 1008dfd:	je     0x1008e0e
 1008dff:	mov    ecx,DWORD PTR [eax]
 1008e01:	mov    edx,DWORD PTR [ecx+0x8]
 1008e04:	push   eax
 1008e05:	call   edx
 1008e07:	mov    DWORD PTR [esi+0x8],0x0
 1008e0e:	mov    eax,DWORD PTR [ebp+0x8]
 1008e11:	mov    DWORD PTR [esi+0x8],eax
 1008e14:	mov    ecx,DWORD PTR [eax]
 1008e16:	mov    edx,DWORD PTR [ecx+0x4]
 1008e19:	push   eax
 1008e1a:	call   edx
 1008e1c:	mov    ecx,DWORD PTR [esi+0x8]
 1008e1f:	call   0x1006ea0
 1008e24:	mov    ecx,DWORD PTR [esi+0x8]
 1008e27:	mov    DWORD PTR [esi+0xb00],eax
 1008e2d:	call   0x1006ea0
 1008e32:	mov    DWORD PTR [esi+0xb14],eax
 1008e38:	pop    esi
 1008e39:	pop    ebp
 1008e3a:	ret    0x4
 1008e3d:	int3   
 1008e3e:	int3   
 1008e3f:	int3   
 1008e40:	int3   
 1008e41:	int3   
 1008e42:	int3   
 1008e43:	int3   
 1008e44:	int3   
 1008e45:	int3   
 1008e46:	int3   
 1008e47:	int3   
 1008e48:	int3   
 1008e49:	int3   
 1008e4a:	int3   
 1008e4b:	int3   
 1008e4c:	int3   
 1008e4d:	int3   
 1008e4e:	int3   
 1008e4f:	int3   
 1008e50:	mov    edi,edi
 1008e52:	push   ebp
 1008e53:	mov    ebp,esp
 1008e55:	mov    edx,DWORD PTR [ebp+0xc]
 1008e58:	test   edx,edx
 1008e5a:	jne    0x1008e65
 1008e5c:	mov    eax,0x80070057
 1008e61:	pop    ebp
 1008e62:	ret    0x8
 1008e65:	mov    ecx,DWORD PTR [ebp+0x8]
 1008e68:	mov    eax,DWORD PTR [ecx+0x60]
 1008e6b:	test   eax,eax
 1008e6d:	je     0x1008e78
 1008e6f:	test   DWORD PTR [ecx+0x64],0x200000
 1008e76:	je     0x1008e7b
 1008e78:	mov    eax,DWORD PTR [ecx+0x40]
 1008e7b:	mov    DWORD PTR [edx],eax
 1008e7d:	xor    eax,eax
 1008e7f:	pop    ebp
 1008e80:	ret    0x8
 1008e83:	int3   
 1008e84:	int3   
 1008e85:	int3   
 1008e86:	int3   
 1008e87:	int3   
 1008e88:	int3   
 1008e89:	int3   
 1008e8a:	int3   
 1008e8b:	int3   
 1008e8c:	int3   
 1008e8d:	int3   
 1008e8e:	int3   
 1008e8f:	int3   
 1008e90:	mov    edi,edi
 1008e92:	push   ebp
 1008e93:	mov    ebp,esp
 1008e95:	push   0xfffffffe
 1008e97:	push   0x100ac18
 1008e9c:	push   0x1005ab7
 1008ea1:	mov    eax,fs:0x0
 1008ea7:	push   eax
 1008ea8:	sub    esp,0x1c
 1008eab:	push   ebx
 1008eac:	push   esi
 1008ead:	push   edi
 1008eae:	mov    eax,ds:0x100c088
 1008eb3:	xor    DWORD PTR [ebp-0x8],eax
 1008eb6:	xor    eax,ebp
 1008eb8:	push   eax
 1008eb9:	lea    eax,[ebp-0x10]
 1008ebc:	mov    fs:0x0,eax
 1008ec2:	mov    DWORD PTR [ebp-0x18],esp
 1008ec5:	mov    esi,ecx
 1008ec7:	mov    DWORD PTR [ebp-0x28],esi
 1008eca:	xor    ebx,ebx
 1008ecc:	mov    DWORD PTR [ebp-0x20],ebx
 1008ecf:	mov    DWORD PTR [ebp-0x1c],ebx
 1008ed2:	mov    DWORD PTR [ebp-0x4],ebx
 1008ed5:	mov    eax,DWORD PTR [esi+0xc]
 1008ed8:	mov    eax,DWORD PTR [eax]
 1008eda:	lea    ebx,[ebx+0x0]
 1008ee0:	test   eax,eax
 1008ee2:	je     0x1008ef7
 1008ee4:	mov    edi,DWORD PTR [eax]
 1008ee6:	mov    ecx,DWORD PTR [esi+0x8]
 1008ee9:	push   ecx
 1008eea:	push   eax
 1008eeb:	call   0x1007170
 1008ef0:	add    esp,0x8
 1008ef3:	mov    eax,edi
 1008ef5:	jmp    0x1008ee0
 1008ef7:	mov    eax,0xfffffffe
 1008efc:	mov    DWORD PTR [ebp-0x4],eax
 1008eff:	jmp    0x1008f41
 1008f01:	mov    edx,DWORD PTR [ebp-0x14]
 1008f04:	mov    eax,DWORD PTR [edx]
 1008f06:	mov    ecx,DWORD PTR [eax]
 1008f08:	mov    DWORD PTR [ebp-0x24],ecx
 1008f0b:	mov    eax,0x1
 1008f10:	ret    
 1008f11:	mov    esp,DWORD PTR [ebp-0x18]
 1008f14:	mov    esi,DWORD PTR [ebp-0x24]
 1008f17:	mov    DWORD PTR [ebp-0x1c],esi
 1008f1a:	cmp    esi,0xc00000fd
 1008f20:	jne    0x1008f28
 1008f22:	call   DWORD PTR ds:0x10011f4
 1008f28:	test   esi,esi
 1008f2a:	jl     0x1008f33
 1008f2c:	mov    DWORD PTR [ebp-0x1c],0x80004005
 1008f33:	mov    eax,0xfffffffe
 1008f38:	mov    DWORD PTR [ebp-0x4],eax
 1008f3b:	mov    esi,DWORD PTR [ebp-0x28]
 1008f3e:	mov    ebx,DWORD PTR [ebp-0x20]
 1008f41:	test   ebx,ebx
 1008f43:	jl     0x1008f4b
 1008f45:	mov    ebx,DWORD PTR [ebp-0x1c]
 1008f48:	mov    DWORD PTR [ebp-0x20],ebx
 1008f4b:	xor    edi,edi
 1008f4d:	mov    DWORD PTR [ebp-0x4],0x1
 1008f54:	mov    edx,DWORD PTR [esi+0xc]
 1008f57:	mov    DWORD PTR [edx],edi
 1008f59:	mov    ecx,DWORD PTR [esi+0xc]
 1008f5c:	mov    DWORD PTR [esi+0x10],ecx
 1008f5f:	mov    DWORD PTR [ebp-0x4],eax
 1008f62:	jmp    0x1008f9d
 1008f64:	mov    edx,DWORD PTR [ebp-0x14]
 1008f67:	mov    eax,DWORD PTR [edx]
 1008f69:	mov    ecx,DWORD PTR [eax]
 1008f6b:	mov    DWORD PTR [ebp-0x2c],ecx
 1008f6e:	mov    eax,0x1
 1008f73:	ret    
 1008f74:	mov    esp,DWORD PTR [ebp-0x18]
 1008f77:	mov    esi,DWORD PTR [ebp-0x2c]
 1008f7a:	mov    edi,esi
 1008f7c:	cmp    esi,0xc00000fd
 1008f82:	jne    0x1008f8a
 1008f84:	call   DWORD PTR ds:0x10011f4
 1008f8a:	test   esi,esi
 1008f8c:	jl     0x1008f93
 1008f8e:	mov    edi,0x80004005
 1008f93:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1008f9a:	mov    ebx,DWORD PTR [ebp-0x20]
 1008f9d:	test   ebx,ebx
 1008f9f:	jl     0x1008fa3
 1008fa1:	mov    ebx,edi
 1008fa3:	mov    eax,ebx
 1008fa5:	mov    ecx,DWORD PTR [ebp-0x10]
 1008fa8:	mov    DWORD PTR fs:0x0,ecx
 1008faf:	pop    ecx
 1008fb0:	pop    edi
 1008fb1:	pop    esi
 1008fb2:	pop    ebx
 1008fb3:	mov    esp,ebp
 1008fb5:	pop    ebp
 1008fb6:	ret    
 1008fb7:	int3   
 1008fb8:	int3   
 1008fb9:	int3   
 1008fba:	int3   
 1008fbb:	int3   
 1008fbc:	int3   
 1008fbd:	int3   
 1008fbe:	int3   
 1008fbf:	int3   
 1008fc0:	lea    eax,[ecx+0x8]
 1008fc3:	mov    ecx,DWORD PTR [eax]
 1008fc5:	lea    edx,[ecx*8+0x8]
 1008fcc:	push   edx
 1008fcd:	push   eax
 1008fce:	call   0x1008330
 1008fd3:	ret    
 1008fd4:	int3   
 1008fd5:	int3   
 1008fd6:	int3   
 1008fd7:	int3   
 1008fd8:	int3   
 1008fd9:	int3   
 1008fda:	int3   
 1008fdb:	int3   
 1008fdc:	int3   
 1008fdd:	int3   
 1008fde:	int3   
 1008fdf:	int3   
 1008fe0:	mov    edi,edi
 1008fe2:	push   ebp
 1008fe3:	mov    ebp,esp
 1008fe5:	push   ebx
 1008fe6:	mov    ebx,DWORD PTR [ebp+0xc]
 1008fe9:	push   esi
 1008fea:	xor    eax,eax
 1008fec:	test   ebx,ebx
 1008fee:	push   edi
 1008fef:	je     0x1008ff9
 1008ff1:	cmp    ebx,0x7fffffff
 1008ff7:	jbe    0x1008ffe
 1008ff9:	mov    eax,0x80070057
 1008ffe:	test   eax,eax
 1009000:	jl     0x1009014
 1009002:	mov    edx,DWORD PTR [ebp+0x8]
 1009005:	lea    edi,[ebp+0xc]
 1009008:	mov    ecx,ebx
 100900a:	call   0x1008d30
 100900f:	mov    esi,DWORD PTR [ebp+0xc]
 1009012:	jmp    0x1009016
 1009014:	xor    esi,esi
 1009016:	test   eax,eax
 1009018:	jl     0x1009080
 100901a:	mov    eax,DWORD PTR [ebp+0x8]
 100901d:	mov    ecx,ebx
 100901f:	sub    ecx,esi
 1009021:	lea    edx,[eax+esi*2]
 1009024:	mov    eax,0x0
 1009029:	je     0x1009073
 100902b:	mov    edi,ecx
 100902d:	sub    edi,ebx
 100902f:	mov    ebx,DWORD PTR [ebp+0x10]
 1009032:	lea    edi,[edi+esi*1+0x7fffffff]
 1009039:	sub    ebx,edx
 100903b:	jmp    0x1009040
 100903d:	lea    ecx,[ecx+0x0]
 1009040:	test   edi,edi
 1009042:	je     0x100906f
 1009044:	movzx  esi,WORD PTR [ebx+edx*1]
 1009048:	test   si,si
 100904b:	je     0x100906f
 100904d:	mov    WORD PTR [edx],si
 1009050:	sub    ecx,0x1
 1009053:	add    edx,0x2
 1009056:	sub    edi,0x1
 1009059:	test   ecx,ecx
 100905b:	jne    0x1009040
 100905d:	pop    edi
 100905e:	sub    edx,0x2
 1009061:	pop    esi
 1009062:	mov    eax,0x8007007a
 1009067:	mov    WORD PTR [edx],cx
 100906a:	pop    ebx
 100906b:	pop    ebp
 100906c:	ret    0xc
 100906f:	test   ecx,ecx
 1009071:	jne    0x100907b
 1009073:	sub    edx,0x2
 1009076:	mov    eax,0x8007007a
 100907b:	mov    WORD PTR [edx],0x0
 1009080:	pop    edi
 1009081:	pop    esi
 1009082:	pop    ebx
 1009083:	pop    ebp
 1009084:	ret    0xc
 1009087:	int3   
 1009088:	int3   
 1009089:	int3   
 100908a:	int3   
 100908b:	int3   
 100908c:	int3   
 100908d:	int3   
 100908e:	int3   
 100908f:	int3   
 1009090:	mov    edi,edi
 1009092:	push   esi
 1009093:	mov    esi,ecx
 1009095:	lea    ecx,[esi+0xaf8]
 100909b:	call   0x1008e90
 10090a0:	test   eax,eax
 10090a2:	jne    0x10090b0
 10090a4:	lea    ecx,[esi+0xb0c]
 10090aa:	pop    esi
 10090ab:	jmp    0x1008e90
 10090b0:	pop    esi
 10090b1:	ret    
 10090b2:	int3   
 10090b3:	int3   
 10090b4:	int3   
 10090b5:	int3   
 10090b6:	int3   
 10090b7:	int3   
 10090b8:	int3   
 10090b9:	int3   
 10090ba:	int3   
 10090bb:	int3   
 10090bc:	int3   
 10090bd:	int3   
 10090be:	int3   
 10090bf:	int3   
 10090c0:	mov    edi,edi
 10090c2:	push   ebp
 10090c3:	mov    ebp,esp
 10090c5:	mov    eax,DWORD PTR [ebp+0x8]
 10090c8:	push   ebx
 10090c9:	mov    ebx,DWORD PTR [ebp+0xc]
 10090cc:	push   esi
 10090cd:	mov    DWORD PTR [ecx+0x228],eax
 10090d3:	lea    edx,[ecx+0x14]
 10090d6:	push   edi
 10090d7:	xor    eax,eax
 10090d9:	mov    edi,0x105
 10090de:	sub    ebx,edx
 10090e0:	lea    esi,[edi+0x7ffffef9]
 10090e6:	test   esi,esi
 10090e8:	je     0x1009100
 10090ea:	movzx  esi,WORD PTR [ebx+edx*1]
 10090ee:	test   si,si
 10090f1:	je     0x1009100
 10090f3:	mov    WORD PTR [edx],si
 10090f6:	add    edx,0x2
 10090f9:	sub    edi,0x1
 10090fc:	jne    0x10090e0
 10090fe:	jmp    0x1009104
 1009100:	test   edi,edi
 1009102:	jne    0x100910c
 1009104:	sub    edx,0x2
 1009107:	mov    eax,0x8007007a
 100910c:	test   eax,eax
 100910e:	mov    WORD PTR [edx],0x0
 1009113:	jne    0x1009137
 1009115:	mov    edx,DWORD PTR [ebp+0x10]
 1009118:	mov    esi,DWORD PTR [edx]
 100911a:	mov    DWORD PTR [ecx],esi
 100911c:	mov    esi,DWORD PTR [edx+0x4]
 100911f:	mov    DWORD PTR [ecx+0x4],esi
 1009122:	mov    esi,DWORD PTR [edx+0x8]
 1009125:	mov    DWORD PTR [ecx+0x8],esi
 1009128:	mov    edx,DWORD PTR [edx+0xc]
 100912b:	mov    DWORD PTR [ecx+0xc],edx
 100912e:	mov    edx,DWORD PTR [ebp+0x14]
 1009131:	mov    DWORD PTR [ecx+0x220],edx
 1009137:	pop    edi
 1009138:	pop    esi
 1009139:	pop    ebx
 100913a:	pop    ebp
 100913b:	ret    0x10
 100913e:	int3   
 100913f:	int3   
 1009140:	int3   
 1009141:	int3   
 1009142:	int3   
 1009143:	int3   
 1009144:	int3   
 1009145:	int3   
 1009146:	int3   
 1009147:	int3   
 1009148:	int3   
 1009149:	int3   
 100914a:	int3   
 100914b:	int3   
 100914c:	int3   
 100914d:	int3   
 100914e:	int3   
 100914f:	int3   
 1009150:	mov    edi,edi
 1009152:	push   ebp
 1009153:	mov    ebp,esp
 1009155:	push   ecx
 1009156:	mov    eax,DWORD PTR [ecx+0x224]
 100915c:	cmp    eax,DWORD PTR [ecx+0x228]
 1009162:	jne    0x100916f
 1009164:	mov    eax,0x80004005
 1009169:	mov    esp,ebp
 100916b:	pop    ebp
 100916c:	ret    0xc
 100916f:	mov    edx,eax
 1009171:	imul   edx,edx,0xb3c
 1009177:	add    edx,DWORD PTR [ecx+0x220]
 100917d:	push   ebx
 100917e:	add    eax,0x1
 1009181:	push   esi
 1009182:	push   edi
 1009183:	mov    edi,DWORD PTR [ebp+0x8]
 1009186:	mov    DWORD PTR [ecx+0x224],eax
 100918c:	xor    ebx,ebx
 100918e:	lea    eax,[edx+0x6]
 1009191:	mov    esi,0x105
 1009196:	mov    DWORD PTR [ebp-0x4],ebx
 1009199:	sub    edi,eax
 100919b:	jmp    0x10091a0
 100919d:	lea    ecx,[ecx+0x0]
 10091a0:	lea    ecx,[esi+0x7ffffef9]
 10091a6:	test   ecx,ecx
 10091a8:	je     0x10091c0
 10091aa:	movzx  ecx,WORD PTR [edi+eax*1]
 10091ae:	cmp    cx,bx
 10091b1:	je     0x10091c0
 10091b3:	mov    WORD PTR [eax],cx
 10091b6:	add    eax,0x2
 10091b9:	sub    esi,0x1
 10091bc:	jne    0x10091a0
 10091be:	jmp    0x10091c4
 10091c0:	cmp    esi,ebx
 10091c2:	jne    0x10091ce
 10091c4:	sub    eax,0x2
 10091c7:	mov    DWORD PTR [ebp-0x4],0x8007007a
 10091ce:	mov    edi,DWORD PTR [ebp+0xc]
 10091d1:	mov    WORD PTR [eax],bx
 10091d4:	lea    eax,[edx+0x316]
 10091da:	mov    esi,0x105
 10091df:	sub    edi,eax
 10091e1:	lea    ecx,[esi+0x7ffffef9]
 10091e7:	test   ecx,ecx
 10091e9:	je     0x1009201
 10091eb:	movzx  ecx,WORD PTR [edi+eax*1]
 10091ef:	test   cx,cx
 10091f2:	je     0x1009201
 10091f4:	mov    WORD PTR [eax],cx
 10091f7:	add    eax,0x2
 10091fa:	sub    esi,0x1
 10091fd:	jne    0x10091e1
 10091ff:	jmp    0x1009205
 1009201:	test   esi,esi
 1009203:	jne    0x100920d
 1009205:	sub    eax,0x2
 1009208:	mov    ebx,0x8007007a
 100920d:	mov    WORD PTR [eax],0x0
 1009212:	mov    ax,WORD PTR [ebp+0x10]
 1009216:	mov    WORD PTR [edx+0x4],ax
 100921a:	mov    eax,DWORD PTR [ebp-0x4]
 100921d:	test   eax,eax
 100921f:	jl     0x1009223
 1009221:	mov    eax,ebx
 1009223:	pop    edi
 1009224:	pop    esi
 1009225:	pop    ebx
 1009226:	mov    esp,ebp
 1009228:	pop    ebp
 1009229:	ret    0xc
 100922c:	int3   
 100922d:	int3   
 100922e:	int3   
 100922f:	int3   
 1009230:	int3   
 1009231:	int3   
 1009232:	int3   
 1009233:	int3   
 1009234:	int3   
 1009235:	int3   
 1009236:	int3   
 1009237:	int3   
 1009238:	int3   
 1009239:	int3   
 100923a:	int3   
 100923b:	int3   
 100923c:	int3   
 100923d:	int3   
 100923e:	int3   
 100923f:	int3   
 1009240:	mov    edi,edi
 1009242:	push   ebp
 1009243:	mov    ebp,esp
 1009245:	push   0xfffffffe
 1009247:	push   0x100ac40
 100924c:	push   0x1005ab7
 1009251:	mov    eax,fs:0x0
 1009257:	push   eax
 1009258:	sub    esp,0x10
 100925b:	push   ebx
 100925c:	push   esi
 100925d:	push   edi
 100925e:	mov    eax,ds:0x100c088
 1009263:	xor    DWORD PTR [ebp-0x8],eax
 1009266:	xor    eax,ebp
 1009268:	push   eax
 1009269:	lea    eax,[ebp-0x10]
 100926c:	mov    fs:0x0,eax
 1009272:	mov    DWORD PTR [ebp-0x18],esp
 1009275:	xor    ebx,ebx
 1009277:	mov    DWORD PTR [ebp-0x1c],ebx
 100927a:	mov    DWORD PTR [ebp-0x4],ebx
 100927d:	mov    esi,DWORD PTR [ebp+0x8]
 1009280:	mov    ecx,DWORD PTR [esi+0x8]
 1009283:	call   0x1006ea0
 1009288:	push   eax
 1009289:	xor    ecx,ecx
 100928b:	mov    edi,DWORD PTR [ebp+0xc]
 100928e:	mov    eax,edi
 1009290:	mov    edx,0xb3c
 1009295:	mul    edx
 1009297:	seto   cl
 100929a:	neg    ecx
 100929c:	or     ecx,eax
 100929e:	push   ecx
 100929f:	call   0x1007150
 10092a4:	add    esp,0x8
 10092a7:	test   eax,eax
 10092a9:	jne    0x10092bc
 10092ab:	mov    eax,0x8007000e
 10092b0:	mov    DWORD PTR [ebp-0x1c],eax
 10092b3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10092ba:	jmp    0x1009316
 10092bc:	push   eax
 10092bd:	mov    eax,DWORD PTR [ebp+0x14]
 10092c0:	push   eax
 10092c1:	mov    ecx,DWORD PTR [ebp+0x10]
 10092c4:	push   ecx
 10092c5:	push   edi
 10092c6:	lea    ecx,[esi+0x8c4]
 10092cc:	call   0x10090c0
 10092d1:	mov    DWORD PTR [ebp-0x1c],eax
 10092d4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10092db:	jmp    0x1009316
 10092dd:	mov    edx,DWORD PTR [ebp-0x14]
 10092e0:	mov    eax,DWORD PTR [edx]
 10092e2:	mov    ecx,DWORD PTR [eax]
 10092e4:	mov    DWORD PTR [ebp-0x20],ecx
 10092e7:	mov    eax,0x1
 10092ec:	ret    
 10092ed:	mov    esp,DWORD PTR [ebp-0x18]
 10092f0:	mov    esi,DWORD PTR [ebp-0x20]
 10092f3:	mov    ebx,esi
 10092f5:	cmp    esi,0xc00000fd
 10092fb:	jne    0x1009303
 10092fd:	call   DWORD PTR ds:0x10011f4
 1009303:	test   esi,esi
 1009305:	jl     0x100930c
 1009307:	mov    ebx,0x80004005
 100930c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009313:	mov    eax,DWORD PTR [ebp-0x1c]
 1009316:	test   eax,eax
 1009318:	jl     0x100931c
 100931a:	mov    eax,ebx
 100931c:	mov    ecx,DWORD PTR [ebp-0x10]
 100931f:	mov    DWORD PTR fs:0x0,ecx
 1009326:	pop    ecx
 1009327:	pop    edi
 1009328:	pop    esi
 1009329:	pop    ebx
 100932a:	mov    esp,ebp
 100932c:	pop    ebp
 100932d:	ret    0x10
 1009330:	int3   
 1009331:	int3   
 1009332:	int3   
 1009333:	int3   
 1009334:	int3   
 1009335:	int3   
 1009336:	int3   
 1009337:	int3   
 1009338:	int3   
 1009339:	int3   
 100933a:	int3   
 100933b:	int3   
 100933c:	int3   
 100933d:	int3   
 100933e:	int3   
 100933f:	int3   
 1009340:	mov    edi,edi
 1009342:	push   ebp
 1009343:	mov    ebp,esp
 1009345:	push   ebx
 1009346:	mov    ebx,ecx
 1009348:	cmp    DWORD PTR [ebx+0xb28],0x0
 100934f:	jne    0x1009358
 1009351:	xor    eax,eax
 1009353:	pop    ebx
 1009354:	pop    ebp
 1009355:	ret    0x8
 1009358:	mov    eax,DWORD PTR [ebx+0xb24]
 100935e:	push   esi
 100935f:	mov    esi,DWORD PTR [ebp+0x8]
 1009362:	push   edi
 1009363:	mov    edi,DWORD PTR [ebp+0xc]
 1009366:	push   eax
 1009367:	push   0x1002290
 100936c:	push   edi
 100936d:	push   esi
 100936e:	call   0x1008800
 1009373:	add    esp,0x10
 1009376:	test   eax,eax
 1009378:	jl     0x10093ef
 100937a:	mov    ecx,DWORD PTR [ebx+0xb24]
 1009380:	cmp    ecx,0x20000001
 1009386:	jne    0x100939b
 1009388:	push   0x1002238
 100938d:	push   edi
 100938e:	push   esi
 100938f:	call   0x1008fe0
 1009394:	pop    edi
 1009395:	pop    esi
 1009396:	pop    ebx
 1009397:	pop    ebp
 1009398:	ret    0x8
 100939b:	test   ecx,ecx
 100939d:	jne    0x10093b2
 100939f:	push   0x10021a8
 10093a4:	push   edi
 10093a5:	push   esi
 10093a6:	call   0x1008fe0
 10093ab:	pop    edi
 10093ac:	pop    esi
 10093ad:	pop    ebx
 10093ae:	pop    ebp
 10093af:	ret    0x8
 10093b2:	xor    esi,esi
 10093b4:	jmp    0x10093c0
 10093b6:	lea    esp,[esp+0x0]
 10093bd:	lea    ecx,[ecx+0x0]
 10093c0:	mov    ecx,DWORD PTR [esi+0x1002138]
 10093c6:	mov    edx,ecx
 10093c8:	and    edx,DWORD PTR [ebx+0xb24]
 10093ce:	cmp    ecx,edx
 10093d0:	jne    0x10093e7
 10093d2:	mov    eax,DWORD PTR [esi+0x100213c]
 10093d8:	mov    ecx,DWORD PTR [ebp+0x8]
 10093db:	push   eax
 10093dc:	push   edi
 10093dd:	push   ecx
 10093de:	call   0x1008fe0
 10093e3:	test   eax,eax
 10093e5:	jl     0x10093ef
 10093e7:	add    esi,0x8
 10093ea:	cmp    esi,0x70
 10093ed:	jb     0x10093c0
 10093ef:	pop    edi
 10093f0:	pop    esi
 10093f1:	pop    ebx
 10093f2:	pop    ebp
 10093f3:	ret    0x8
 10093f6:	int3   
 10093f7:	int3   
 10093f8:	int3   
 10093f9:	int3   
 10093fa:	int3   
 10093fb:	int3   
 10093fc:	int3   
 10093fd:	int3   
 10093fe:	int3   
 10093ff:	int3   
 1009400:	mov    edi,edi
 1009402:	push   esi
 1009403:	mov    esi,ecx
 1009405:	mov    eax,DWORD PTR [esi+0x10]
 1009408:	mov    ecx,DWORD PTR [eax+0x8]
 100940b:	cmp    ecx,DWORD PTR [eax+0xc]
 100940e:	push   edi
 100940f:	jb     0x100944a
 1009411:	mov    ecx,DWORD PTR [esi+0x8]
 1009414:	test   ecx,ecx
 1009416:	je     0x1009464
 1009418:	mov    edi,DWORD PTR [esi]
 100941a:	lea    edx,[edi*8+0x10]
 1009421:	push   edx
 1009422:	call   0x1008050
 1009427:	test   eax,eax
 1009429:	je     0x1009464
 100942b:	mov    DWORD PTR [eax],0x0
 1009431:	mov    DWORD PTR [eax+0x4],0x0
 1009438:	mov    DWORD PTR [eax+0x8],0x0
 100943f:	mov    DWORD PTR [eax+0xc],edi
 1009442:	mov    ecx,DWORD PTR [esi+0x10]
 1009445:	mov    DWORD PTR [ecx],eax
 1009447:	mov    DWORD PTR [esi+0x10],eax
 100944a:	mov    eax,DWORD PTR [esi+0x10]
 100944d:	mov    ecx,DWORD PTR [eax+0x8]
 1009450:	lea    edx,[ecx+0x1]
 1009453:	mov    DWORD PTR [eax+0x8],edx
 1009456:	mov    eax,DWORD PTR [esi+0x10]
 1009459:	add    DWORD PTR [esi+0x4],0x1
 100945d:	pop    edi
 100945e:	lea    eax,[eax+ecx*8+0x10]
 1009462:	pop    esi
 1009463:	ret    
 1009464:	pop    edi
 1009465:	xor    eax,eax
 1009467:	pop    esi
 1009468:	ret    
 1009469:	int3   
 100946a:	int3   
 100946b:	int3   
 100946c:	int3   
 100946d:	int3   
 100946e:	int3   
 100946f:	int3   
 1009470:	mov    edi,edi
 1009472:	push   ebp
 1009473:	mov    ebp,esp
 1009475:	push   0xfffffffe
 1009477:	push   0x100ac60
 100947c:	push   0x1005ab7
 1009481:	mov    eax,fs:0x0
 1009487:	push   eax
 1009488:	sub    esp,0x10
 100948b:	push   ebx
 100948c:	push   esi
 100948d:	push   edi
 100948e:	mov    eax,ds:0x100c088
 1009493:	xor    DWORD PTR [ebp-0x8],eax
 1009496:	xor    eax,ebp
 1009498:	push   eax
 1009499:	lea    eax,[ebp-0x10]
 100949c:	mov    fs:0x0,eax
 10094a2:	mov    DWORD PTR [ebp-0x18],esp
 10094a5:	xor    edi,edi
 10094a7:	mov    DWORD PTR [ebp-0x4],edi
 10094aa:	mov    esi,DWORD PTR [ecx+0xc]
 10094ad:	mov    DWORD PTR [ebp-0x1c],esi
 10094b0:	cmp    esi,edi
 10094b2:	je     0x10094f1
 10094b4:	mov    ecx,esi
 10094b6:	call   0x1008fc0
 10094bb:	mov    DWORD PTR [esi+0x4],eax
 10094be:	mov    esi,DWORD PTR [esi]
 10094c0:	jmp    0x10094ad
 10094c2:	mov    eax,DWORD PTR [ebp-0x14]
 10094c5:	mov    ecx,DWORD PTR [eax]
 10094c7:	mov    edx,DWORD PTR [ecx]
 10094c9:	mov    DWORD PTR [ebp-0x20],edx
 10094cc:	mov    eax,0x1
 10094d1:	ret    
 10094d2:	mov    esp,DWORD PTR [ebp-0x18]
 10094d5:	mov    esi,DWORD PTR [ebp-0x20]
 10094d8:	mov    edi,esi
 10094da:	cmp    esi,0xc00000fd
 10094e0:	jne    0x10094e8
 10094e2:	call   DWORD PTR ds:0x10011f4
 10094e8:	test   esi,esi
 10094ea:	jl     0x10094f1
 10094ec:	mov    edi,0x80004005
 10094f1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10094f8:	mov    eax,edi
 10094fa:	mov    ecx,DWORD PTR [ebp-0x10]
 10094fd:	mov    DWORD PTR fs:0x0,ecx
 1009504:	pop    ecx
 1009505:	pop    edi
 1009506:	pop    esi
 1009507:	pop    ebx
 1009508:	mov    esp,ebp
 100950a:	pop    ebp
 100950b:	ret    
 100950c:	int3   
 100950d:	int3   
 100950e:	int3   
 100950f:	int3   
 1009510:	int3   
 1009511:	int3   
 1009512:	int3   
 1009513:	int3   
 1009514:	int3   
 1009515:	int3   
 1009516:	int3   
 1009517:	int3   
 1009518:	int3   
 1009519:	int3   
 100951a:	int3   
 100951b:	int3   
 100951c:	int3   
 100951d:	int3   
 100951e:	int3   
 100951f:	int3   
 1009520:	mov    edi,edi
 1009522:	push   esi
 1009523:	mov    esi,ecx
 1009525:	push   edi
 1009526:	xor    edi,edi
 1009528:	push   0x400
 100952d:	mov    DWORD PTR [esi],0x2
 1009533:	mov    DWORD PTR [esi+0x4],edi
 1009536:	mov    DWORD PTR [esi+0x8],edi
 1009539:	mov    DWORD PTR [esi+0xc],edi
 100953c:	mov    DWORD PTR [esi+0x10],edi
 100953f:	mov    DWORD PTR [esi+0x14],edi
 1009542:	mov    DWORD PTR [esi+0x18],edi
 1009545:	mov    DWORD PTR [esi+0x1c],edi
 1009548:	mov    DWORD PTR [esi+0x20],edi
 100954b:	mov    DWORD PTR [esi+0x24],edi
 100954e:	mov    DWORD PTR [esi+0x28],edi
 1009551:	mov    DWORD PTR [esi+0x2c],edi
 1009554:	mov    DWORD PTR [esi+0x30],edi
 1009557:	mov    DWORD PTR [esi+0x34],edi
 100955a:	mov    DWORD PTR [esi+0x38],edi
 100955d:	mov    DWORD PTR [esi+0x3c],edi
 1009560:	mov    DWORD PTR [esi+0x48],edi
 1009563:	mov    DWORD PTR [esi+0x4c],edi
 1009566:	mov    DWORD PTR [esi+0x50],edi
 1009569:	mov    DWORD PTR [esi+0x54],edi
 100956c:	mov    DWORD PTR [esi+0x58],edi
 100956f:	mov    DWORD PTR [esi+0x5c],edi
 1009572:	mov    DWORD PTR [esi+0x60],edi
 1009575:	mov    DWORD PTR [esi+0x64],edi
 1009578:	mov    DWORD PTR [esi+0x68],edi
 100957b:	mov    DWORD PTR [esi+0x6c],edi
 100957e:	mov    DWORD PTR [esi+0x70],edi
 1009581:	mov    DWORD PTR [esi+0x74],edi
 1009584:	mov    DWORD PTR [esi+0x78],edi
 1009587:	mov    DWORD PTR [esi+0x7c],edi
 100958a:	mov    DWORD PTR [esi+0x80],edi
 1009590:	mov    DWORD PTR [esi+0x84],edi
 1009596:	mov    DWORD PTR [esi+0x8c],edi
 100959c:	mov    DWORD PTR [esi+0x90],edi
 10095a2:	lea    eax,[esi+0xa4]
 10095a8:	push   edi
 10095a9:	push   eax
 10095aa:	mov    DWORD PTR [esi+0x94],edi
 10095b0:	mov    DWORD PTR [esi+0x98],edi
 10095b6:	mov    DWORD PTR [esi+0x9c],edi
 10095bc:	mov    DWORD PTR [esi+0xa0],0x80
 10095c6:	call   0x1005aee
 10095cb:	push   0x400
 10095d0:	lea    ecx,[esi+0x4b4]
 10095d6:	push   edi
 10095d7:	push   ecx
 10095d8:	mov    DWORD PTR [esi+0x4a4],edi
 10095de:	mov    DWORD PTR [esi+0x4a8],edi
 10095e4:	mov    DWORD PTR [esi+0x4ac],edi
 10095ea:	mov    DWORD PTR [esi+0x4b0],0x80
 10095f4:	call   0x1005aee
 10095f9:	push   0x22c
 10095fe:	lea    edx,[esi+0x8b8]
 1009604:	push   edi
 1009605:	push   edx
 1009606:	call   0x1005aee
 100960b:	add    esp,0x24
 100960e:	mov    DWORD PTR [esi+0x40],edi
 1009611:	mov    DWORD PTR [esi+0x44],edi
 1009614:	pop    edi
 1009615:	mov    eax,esi
 1009617:	pop    esi
 1009618:	ret    
 1009619:	int3   
 100961a:	int3   
 100961b:	int3   
 100961c:	int3   
 100961d:	int3   
 100961e:	int3   
 100961f:	int3   
 1009620:	mov    edi,edi
 1009622:	push   ebp
 1009623:	mov    ebp,esp
 1009625:	push   esi
 1009626:	mov    esi,ecx
 1009628:	push   edi
 1009629:	xor    edi,edi
 100962b:	lea    ecx,[esi+0xc]
 100962e:	mov    DWORD PTR [esi],0x1002800
 1009634:	mov    DWORD PTR [esi+0x4],0x1
 100963b:	mov    DWORD PTR [esi+0x8],edi
 100963e:	call   0x1009520
 1009643:	mov    DWORD PTR [esi+0xafc],edi
 1009649:	mov    DWORD PTR [esi+0xb00],edi
 100964f:	lea    eax,[esi+0xa0]
 1009655:	mov    DWORD PTR [esi+0xb04],eax
 100965b:	mov    DWORD PTR [esi+0xb08],eax
 1009661:	mov    ecx,0x200
 1009666:	mov    DWORD PTR [esi+0xaf8],ecx
 100966c:	lea    eax,[esi+0x4b0]
 1009672:	mov    DWORD PTR [esi+0xb18],eax
 1009678:	mov    DWORD PTR [esi+0xb1c],eax
 100967e:	mov    eax,DWORD PTR [ebp+0xc]
 1009681:	mov    DWORD PTR [esi+0xb0c],ecx
 1009687:	mov    DWORD PTR [esi+0xb10],edi
 100968d:	mov    DWORD PTR [esi+0xb14],edi
 1009693:	mov    DWORD PTR [esi+0xb20],eax
 1009699:	mov    eax,DWORD PTR [ebp+0x8]
 100969c:	cmp    eax,edi
 100969e:	mov    DWORD PTR [esi+0xb24],edi
 10096a4:	mov    DWORD PTR [esi+0xb28],edi
 10096aa:	mov    DWORD PTR [esi+0xb2c],edi
 10096b0:	mov    DWORD PTR [esi+0xb30],edi
 10096b6:	mov    DWORD PTR [esi+0xb34],edi
 10096bc:	je     0x10096c6
 10096be:	push   eax
 10096bf:	mov    ecx,esi
 10096c1:	call   0x1008df0
 10096c6:	call   DWORD PTR ds:0x1001148
 10096cc:	push   0x208
 10096d1:	lea    ecx,[esi+0xb38]
 10096d7:	push   edi
 10096d8:	push   ecx
 10096d9:	mov    DWORD PTR [esi+0x40],eax
 10096dc:	call   0x1005aee
 10096e1:	push   0x44
 10096e3:	lea    edx,[esi+0xd40]
 10096e9:	push   edi
 10096ea:	push   edx
 10096eb:	call   0x1005aee
 10096f0:	mov    DWORD PTR [esi+0xd84],edi
 10096f6:	mov    DWORD PTR [esi+0xd88],edi
 10096fc:	mov    DWORD PTR [esi+0xd8c],edi
 1009702:	add    esp,0x18
 1009705:	mov    DWORD PTR [esi+0xd90],edi
 100970b:	pop    edi
 100970c:	mov    eax,esi
 100970e:	pop    esi
 100970f:	pop    ebp
 1009710:	ret    0x8
 1009713:	int3   
 1009714:	int3   
 1009715:	int3   
 1009716:	int3   
 1009717:	int3   
 1009718:	int3   
 1009719:	int3   
 100971a:	int3   
 100971b:	int3   
 100971c:	int3   
 100971d:	int3   
 100971e:	int3   
 100971f:	int3   
 1009720:	mov    edi,edi
 1009722:	push   esi
 1009723:	mov    esi,ecx
 1009725:	cmp    DWORD PTR [esi+0xae4],0x0
 100972c:	mov    DWORD PTR [esi],0x1002800
 1009732:	je     0x100974e
 1009734:	mov    ecx,DWORD PTR [esi+0x8]
 1009737:	call   0x1006ea0
 100973c:	mov    edx,DWORD PTR [esi+0xae4]
 1009742:	test   edx,edx
 1009744:	je     0x100974e
 1009746:	push   edx
 1009747:	mov    ecx,eax
 1009749:	call   0x1008110
 100974e:	mov    eax,DWORD PTR [esi+0x8]
 1009751:	test   eax,eax
 1009753:	je     0x1009764
 1009755:	mov    ecx,DWORD PTR [eax]
 1009757:	mov    edx,DWORD PTR [ecx+0x8]
 100975a:	push   eax
 100975b:	call   edx
 100975d:	mov    DWORD PTR [esi+0x8],0x0
 1009764:	lea    ecx,[esi+0xb0c]
 100976a:	call   0x1008e90
 100976f:	lea    ecx,[esi+0xaf8]
 1009775:	pop    esi
 1009776:	jmp    0x1008e90
 100977b:	int3   
 100977c:	int3   
 100977d:	int3   
 100977e:	int3   
 100977f:	int3   
 1009780:	mov    edi,edi
 1009782:	push   ebp
 1009783:	mov    ebp,esp
 1009785:	push   ebx
 1009786:	push   esi
 1009787:	push   edi
 1009788:	mov    edi,DWORD PTR [ebp+0xc]
 100978b:	xor    ebx,ebx
 100978d:	test   edi,edi
 100978f:	je     0x10097c6
 1009791:	mov    esi,DWORD PTR [ebp+0x10]
 1009794:	test   esi,esi
 1009796:	je     0x10097c6
 1009798:	mov    ecx,DWORD PTR [ebp+0x8]
 100979b:	add    ecx,0xaf8
 10097a1:	call   0x1009400
 10097a6:	test   eax,eax
 10097a8:	je     0x10097b8
 10097aa:	mov    DWORD PTR [eax],edi
 10097ac:	pop    edi
 10097ad:	mov    DWORD PTR [eax+0x4],esi
 10097b0:	pop    esi
 10097b1:	mov    eax,ebx
 10097b3:	pop    ebx
 10097b4:	pop    ebp
 10097b5:	ret    0xc
 10097b8:	pop    edi
 10097b9:	mov    ebx,0x8007000e
 10097be:	pop    esi
 10097bf:	mov    eax,ebx
 10097c1:	pop    ebx
 10097c2:	pop    ebp
 10097c3:	ret    0xc
 10097c6:	pop    edi
 10097c7:	pop    esi
 10097c8:	xor    eax,eax
 10097ca:	pop    ebx
 10097cb:	pop    ebp
 10097cc:	ret    0xc
 10097cf:	int3   
 10097d0:	int3   
 10097d1:	int3   
 10097d2:	int3   
 10097d3:	int3   
 10097d4:	int3   
 10097d5:	int3   
 10097d6:	int3   
 10097d7:	int3   
 10097d8:	int3   
 10097d9:	int3   
 10097da:	int3   
 10097db:	int3   
 10097dc:	int3   
 10097dd:	int3   
 10097de:	int3   
 10097df:	int3   
 10097e0:	mov    edi,edi
 10097e2:	push   ebp
 10097e3:	mov    ebp,esp
 10097e5:	push   ebx
 10097e6:	push   esi
 10097e7:	push   edi
 10097e8:	mov    edi,DWORD PTR [ebp+0xc]
 10097eb:	xor    ebx,ebx
 10097ed:	test   edi,edi
 10097ef:	je     0x1009826
 10097f1:	mov    esi,DWORD PTR [ebp+0x10]
 10097f4:	test   esi,esi
 10097f6:	je     0x1009826
 10097f8:	mov    ecx,DWORD PTR [ebp+0x8]
 10097fb:	add    ecx,0xb0c
 1009801:	call   0x1009400
 1009806:	test   eax,eax
 1009808:	je     0x1009818
 100980a:	mov    DWORD PTR [eax],edi
 100980c:	pop    edi
 100980d:	mov    DWORD PTR [eax+0x4],esi
 1009810:	pop    esi
 1009811:	mov    eax,ebx
 1009813:	pop    ebx
 1009814:	pop    ebp
 1009815:	ret    0xc
 1009818:	pop    edi
 1009819:	mov    ebx,0x8007000e
 100981e:	pop    esi
 100981f:	mov    eax,ebx
 1009821:	pop    ebx
 1009822:	pop    ebp
 1009823:	ret    0xc
 1009826:	pop    edi
 1009827:	pop    esi
 1009828:	xor    eax,eax
 100982a:	pop    ebx
 100982b:	pop    ebp
 100982c:	ret    0xc
 100982f:	int3   
 1009830:	int3   
 1009831:	int3   
 1009832:	int3   
 1009833:	int3   
 1009834:	int3   
 1009835:	int3   
 1009836:	int3   
 1009837:	int3   
 1009838:	int3   
 1009839:	int3   
 100983a:	int3   
 100983b:	int3   
 100983c:	int3   
 100983d:	int3   
 100983e:	int3   
 100983f:	int3   
 1009840:	mov    edi,edi
 1009842:	push   ebp
 1009843:	mov    ebp,esp
 1009845:	push   0xfffffffe
 1009847:	push   0x100ac80
 100984c:	push   0x1005ab7
 1009851:	mov    eax,fs:0x0
 1009857:	push   eax
 1009858:	sub    esp,0x10
 100985b:	push   ebx
 100985c:	push   esi
 100985d:	push   edi
 100985e:	mov    eax,ds:0x100c088
 1009863:	xor    DWORD PTR [ebp-0x8],eax
 1009866:	xor    eax,ebp
 1009868:	push   eax
 1009869:	lea    eax,[ebp-0x10]
 100986c:	mov    fs:0x0,eax
 1009872:	mov    DWORD PTR [ebp-0x18],esp
 1009875:	mov    DWORD PTR [ebp-0x1c],0x0
 100987c:	xor    esi,esi
 100987e:	mov    DWORD PTR [ebp-0x4],esi
 1009881:	mov    eax,DWORD PTR [ebp+0x14]
 1009884:	push   eax
 1009885:	mov    ecx,DWORD PTR [ebp+0x10]
 1009888:	push   ecx
 1009889:	mov    edx,DWORD PTR [ebp+0xc]
 100988c:	push   edx
 100988d:	mov    ecx,DWORD PTR [ebp+0x8]
 1009890:	add    ecx,0x8c4
 1009896:	call   0x1009150
 100989b:	mov    DWORD PTR [ebp-0x1c],eax
 100989e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10098a5:	jmp    0x10098de
 10098a7:	mov    eax,DWORD PTR [ebp-0x14]
 10098aa:	mov    ecx,DWORD PTR [eax]
 10098ac:	mov    edx,DWORD PTR [ecx]
 10098ae:	mov    DWORD PTR [ebp-0x20],edx
 10098b1:	mov    eax,0x1
 10098b6:	ret    
 10098b7:	mov    esp,DWORD PTR [ebp-0x18]
 10098ba:	mov    esi,DWORD PTR [ebp-0x20]
 10098bd:	cmp    esi,0xc00000fd
 10098c3:	jne    0x10098cb
 10098c5:	call   DWORD PTR ds:0x10011f4
 10098cb:	test   esi,esi
 10098cd:	jl     0x10098d4
 10098cf:	mov    esi,0x80004005
 10098d4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10098db:	mov    eax,DWORD PTR [ebp-0x1c]
 10098de:	test   eax,eax
 10098e0:	jl     0x10098e4
 10098e2:	mov    eax,esi
 10098e4:	mov    ecx,DWORD PTR [ebp-0x10]
 10098e7:	mov    DWORD PTR fs:0x0,ecx
 10098ee:	pop    ecx
 10098ef:	pop    edi
 10098f0:	pop    esi
 10098f1:	pop    ebx
 10098f2:	mov    esp,ebp
 10098f4:	pop    ebp
 10098f5:	ret    0x10
 10098f8:	int3   
 10098f9:	int3   
 10098fa:	int3   
 10098fb:	int3   
 10098fc:	int3   
 10098fd:	int3   
 10098fe:	int3   
 10098ff:	int3   
 1009900:	mov    edi,edi
 1009902:	push   ebp
 1009903:	mov    ebp,esp
 1009905:	push   0xfffffffe
 1009907:	push   0x100aca0
 100990c:	push   0x1005ab7
 1009911:	mov    eax,fs:0x0
 1009917:	push   eax
 1009918:	sub    esp,0x10
 100991b:	push   ebx
 100991c:	push   esi
 100991d:	push   edi
 100991e:	mov    eax,ds:0x100c088
 1009923:	xor    DWORD PTR [ebp-0x8],eax
 1009926:	xor    eax,ebp
 1009928:	push   eax
 1009929:	lea    eax,[ebp-0x10]
 100992c:	mov    fs:0x0,eax
 1009932:	mov    DWORD PTR [ebp-0x18],esp
 1009935:	mov    esi,ecx
 1009937:	xor    ebx,ebx
 1009939:	mov    DWORD PTR [ebp-0x1c],ebx
 100993c:	mov    DWORD PTR [ebp-0x4],ebx
 100993f:	push   0x68
 1009941:	lea    eax,[esi+0xc]
 1009944:	push   eax
 1009945:	call   0x1008330
 100994a:	mov    DWORD PTR [esi+0x74],eax
 100994d:	mov    eax,DWORD PTR [esi+0x20]
 1009950:	push   eax
 1009951:	call   0x1008370
 1009956:	mov    DWORD PTR [esi+0x7c],eax
 1009959:	mov    eax,DWORD PTR [esi+0x24]
 100995c:	push   eax
 100995d:	call   0x1008370
 1009962:	mov    DWORD PTR [esi+0x80],eax
 1009968:	lea    ecx,[esi+0xaf8]
 100996e:	call   0x1009470
 1009973:	mov    edi,eax
 1009975:	mov    DWORD PTR [ebp-0x1c],edi
 1009978:	test   edi,edi
 100997a:	jne    0x100998c
 100997c:	lea    ecx,[esi+0xb0c]
 1009982:	call   0x1009470
 1009987:	mov    edi,eax
 1009989:	mov    DWORD PTR [ebp-0x1c],edi
 100998c:	mov    eax,DWORD PTR [esi+0x54]
 100998f:	push   eax
 1009990:	call   0x1008370
 1009995:	mov    DWORD PTR [esi+0x90],eax
 100999b:	mov    eax,DWORD PTR [esi+0x58]
 100999e:	push   eax
 100999f:	call   0x1008370
 10099a4:	mov    DWORD PTR [esi+0x94],eax
 10099aa:	mov    eax,DWORD PTR [esi+0x30]
 10099ad:	push   eax
 10099ae:	call   0x1008370
 10099b3:	mov    DWORD PTR [esi+0x8c],eax
 10099b9:	mov    eax,DWORD PTR [esi+0x14]
 10099bc:	push   eax
 10099bd:	call   0x1008370
 10099c2:	mov    DWORD PTR [esi+0x78],eax
 10099c5:	mov    eax,DWORD PTR [esi+0x28]
 10099c8:	push   eax
 10099c9:	call   0x1008370
 10099ce:	mov    DWORD PTR [esi+0x84],eax
 10099d4:	mov    eax,DWORD PTR [esi+0x2c]
 10099d7:	push   eax
 10099d8:	call   0x1008370
 10099dd:	mov    DWORD PTR [esi+0x88],eax
 10099e3:	mov    eax,DWORD PTR [esi+0x34]
 10099e6:	push   eax
 10099e7:	call   0x1008370
 10099ec:	mov    DWORD PTR [esi+0x98],eax
 10099f2:	mov    eax,DWORD PTR [esi+0x38]
 10099f5:	push   eax
 10099f6:	call   0x1008370
 10099fb:	mov    DWORD PTR [esi+0x9c],eax
 1009a01:	lea    ecx,[esi+0x8c4]
 1009a07:	call   0x1008d80
 1009a0c:	mov    DWORD PTR [esi+0xaf0],eax
 1009a12:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009a19:	jmp    0x1009a54
 1009a1b:	mov    ecx,DWORD PTR [ebp-0x14]
 1009a1e:	mov    edx,DWORD PTR [ecx]
 1009a20:	mov    eax,DWORD PTR [edx]
 1009a22:	mov    DWORD PTR [ebp-0x20],eax
 1009a25:	mov    eax,0x1
 1009a2a:	ret    
 1009a2b:	mov    esp,DWORD PTR [ebp-0x18]
 1009a2e:	mov    esi,DWORD PTR [ebp-0x20]
 1009a31:	mov    ebx,esi
 1009a33:	cmp    esi,0xc00000fd
 1009a39:	jne    0x1009a41
 1009a3b:	call   DWORD PTR ds:0x10011f4
 1009a41:	test   esi,esi
 1009a43:	jl     0x1009a4a
 1009a45:	mov    ebx,0x80004005
 1009a4a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009a51:	mov    edi,DWORD PTR [ebp-0x1c]
 1009a54:	test   edi,edi
 1009a56:	mov    eax,ebx
 1009a58:	jge    0x1009a5c
 1009a5a:	mov    eax,edi
 1009a5c:	mov    ecx,DWORD PTR [ebp-0x10]
 1009a5f:	mov    DWORD PTR fs:0x0,ecx
 1009a66:	pop    ecx
 1009a67:	pop    edi
 1009a68:	pop    esi
 1009a69:	pop    ebx
 1009a6a:	mov    esp,ebp
 1009a6c:	pop    ebp
 1009a6d:	ret    
 1009a6e:	int3   
 1009a6f:	int3   
 1009a70:	int3   
 1009a71:	int3   
 1009a72:	int3   
 1009a73:	int3   
 1009a74:	int3   
 1009a75:	int3   
 1009a76:	int3   
 1009a77:	int3   
 1009a78:	int3   
 1009a79:	int3   
 1009a7a:	int3   
 1009a7b:	int3   
 1009a7c:	int3   
 1009a7d:	int3   
 1009a7e:	int3   
 1009a7f:	int3   
 1009a80:	mov    edi,edi
 1009a82:	push   ebp
 1009a83:	mov    ebp,esp
 1009a85:	push   0xfffffffe
 1009a87:	push   0x100acc0
 1009a8c:	push   0x1005ab7
 1009a91:	mov    eax,fs:0x0
 1009a97:	push   eax
 1009a98:	sub    esp,0x28
 1009a9b:	push   ebx
 1009a9c:	push   esi
 1009a9d:	push   edi
 1009a9e:	mov    eax,ds:0x100c088
 1009aa3:	xor    DWORD PTR [ebp-0x8],eax
 1009aa6:	xor    eax,ebp
 1009aa8:	push   eax
 1009aa9:	lea    eax,[ebp-0x10]
 1009aac:	mov    fs:0x0,eax
 1009ab2:	mov    DWORD PTR [ebp-0x18],esp
 1009ab5:	mov    esi,ecx
 1009ab7:	mov    DWORD PTR [ebp-0x30],esi
 1009aba:	xor    edi,edi
 1009abc:	mov    DWORD PTR [ebp-0x1c],edi
 1009abf:	mov    ebx,DWORD PTR ds:0x100108c
 1009ac5:	call   ebx
 1009ac7:	push   eax
 1009ac8:	call   DWORD PTR ds:0x1001090
 1009ace:	mov    DWORD PTR [ebp-0x38],eax
 1009ad1:	cmp    eax,0x7fffffff
 1009ad6:	je     0x1009ae3
 1009ad8:	push   0x1
 1009ada:	call   ebx
 1009adc:	push   eax
 1009add:	call   DWORD PTR ds:0x1001094
 1009ae3:	xor    eax,eax
 1009ae5:	mov    DWORD PTR [ebp-0x24],eax
 1009ae8:	mov    DWORD PTR [ebp-0x4],eax
 1009aeb:	mov    ebx,DWORD PTR [esi+0x60]
 1009aee:	call   DWORD PTR ds:0x1001148
 1009af4:	cmp    ebx,eax
 1009af6:	jne    0x1009b03
 1009af8:	mov    eax,DWORD PTR [esi+0x1c]
 1009afb:	cmp    DWORD PTR [eax],0xc00000fd
 1009b01:	je     0x1009b2a
 1009b03:	mov    eax,DWORD PTR [esi+0x64]
 1009b06:	test   eax,0x1000
 1009b0b:	jne    0x1009b2a
 1009b0d:	test   eax,0x8000
 1009b12:	jne    0x1009b2a
 1009b14:	push   esi
 1009b15:	mov    ecx,DWORD PTR [esi+0x8]
 1009b18:	call   0x1007750
 1009b1d:	push   eax
 1009b1e:	push   0x0
 1009b20:	call   0x1007130
 1009b25:	mov    edi,eax
 1009b27:	mov    DWORD PTR [ebp-0x1c],edi
 1009b2a:	mov    eax,DWORD PTR [esi]
 1009b2c:	push   0xd94
 1009b31:	push   esi
 1009b32:	push   esi
 1009b33:	mov    ecx,DWORD PTR [eax+0x28]
 1009b36:	call   ecx
 1009b38:	push   eax
 1009b39:	push   edi
 1009b3a:	call   0x1007130
 1009b3f:	mov    edi,eax
 1009b41:	mov    DWORD PTR [ebp-0x1c],edi
 1009b44:	mov    ecx,DWORD PTR [esi+0x2c]
 1009b47:	test   ecx,ecx
 1009b49:	je     0x1009b77
 1009b4b:	mov    eax,ecx
 1009b4d:	lea    ebx,[eax+0x2]
 1009b50:	mov    dx,WORD PTR [eax]
 1009b53:	add    eax,0x2
 1009b56:	test   dx,dx
 1009b59:	jne    0x1009b50
 1009b5b:	sub    eax,ebx
 1009b5d:	sar    eax,1
 1009b5f:	mov    edx,DWORD PTR [esi]
 1009b61:	add    eax,eax
 1009b63:	push   eax
 1009b64:	push   ecx
 1009b65:	push   esi
 1009b66:	mov    ecx,DWORD PTR [edx+0x28]
 1009b69:	call   ecx
 1009b6b:	push   eax
 1009b6c:	push   edi
 1009b6d:	call   0x1007130
 1009b72:	mov    edi,eax
 1009b74:	mov    DWORD PTR [ebp-0x1c],edi
 1009b77:	mov    edx,DWORD PTR [esi+0x28]
 1009b7a:	test   edx,edx
 1009b7c:	je     0x1009baa
 1009b7e:	mov    eax,edx
 1009b80:	lea    ebx,[eax+0x2]
 1009b83:	mov    cx,WORD PTR [eax]
 1009b86:	add    eax,0x2
 1009b89:	test   cx,cx
 1009b8c:	jne    0x1009b83
 1009b8e:	sub    eax,ebx
 1009b90:	sar    eax,1
 1009b92:	mov    ecx,DWORD PTR [esi]
 1009b94:	add    eax,eax
 1009b96:	push   eax
 1009b97:	push   edx
 1009b98:	push   esi
 1009b99:	mov    ecx,DWORD PTR [ecx+0x28]
 1009b9c:	call   ecx
 1009b9e:	push   eax
 1009b9f:	push   edi
 1009ba0:	call   0x1007130
 1009ba5:	mov    edi,eax
 1009ba7:	mov    DWORD PTR [ebp-0x1c],edi
 1009baa:	call   DWORD PTR ds:0x1001074
 1009bb0:	mov    DWORD PTR [esi+0x44],eax
 1009bb3:	mov    ecx,esi
 1009bb5:	call   0x1009900
 1009bba:	push   eax
 1009bbb:	push   edi
 1009bbc:	call   0x1007130
 1009bc1:	mov    ebx,eax
 1009bc3:	mov    DWORD PTR [ebp-0x1c],ebx
 1009bc6:	lea    edi,[esi+0xb38]
 1009bcc:	lea    edx,[esi+0xc]
 1009bcf:	push   edx
 1009bd0:	mov    eax,DWORD PTR [esi+0x44]
 1009bd3:	push   eax
 1009bd4:	push   0x100210c
 1009bd9:	call   0x1004231
 1009bde:	push   eax
 1009bdf:	push   0x100287c
 1009be4:	push   0x104
 1009be9:	push   edi
 1009bea:	call   0x10075d0
 1009bef:	add    esp,0x1c
 1009bf2:	test   eax,eax
 1009bf4:	jl     0x1009d7f
 1009bfa:	lea    eax,[esi+0xd40]
 1009c00:	push   eax
 1009c01:	call   DWORD PTR ds:0x1001130
 1009c07:	xor    eax,eax
 1009c09:	mov    DWORD PTR [esi+0xd44],eax
 1009c0f:	mov    DWORD PTR [esi+0xd4c],eax
 1009c15:	lea    ebx,[esi+0xd84]
 1009c1b:	push   ebx
 1009c1c:	lea    eax,[esi+0xd40]
 1009c22:	push   eax
 1009c23:	push   0x0
 1009c25:	push   0x0
 1009c27:	push   0xc008010
 1009c2c:	push   0x0
 1009c2e:	push   0x0
 1009c30:	push   0x0
 1009c32:	push   edi
 1009c33:	mov    ecx,DWORD PTR [esi+0x8]
 1009c36:	call   0x1007100
 1009c3b:	push   eax
 1009c3c:	call   DWORD PTR ds:0x1001098
 1009c42:	test   eax,eax
 1009c44:	je     0x1009d64
 1009c4a:	mov    DWORD PTR [ebp-0x20],0x0
 1009c51:	mov    DWORD PTR [ebp-0x4],0x1
 1009c58:	call   DWORD PTR ds:0x1001118
 1009c5e:	mov    DWORD PTR [ebp-0x28],eax
 1009c61:	push   0x64
 1009c63:	mov    ecx,DWORD PTR [ebx]
 1009c65:	push   ecx
 1009c66:	call   DWORD PTR ds:0x100104c
 1009c6c:	mov    edi,eax
 1009c6e:	cmp    edi,0x102
 1009c74:	jne    0x1009c90
 1009c76:	cmp    DWORD PTR [esi+0xb20],0xffffffff
 1009c7d:	je     0x1009c61
 1009c7f:	call   DWORD PTR ds:0x1001118
 1009c85:	sub    eax,DWORD PTR [ebp-0x28]
 1009c88:	cmp    eax,DWORD PTR [esi+0xb20]
 1009c8e:	jb     0x1009c61
 1009c90:	xor    edx,edx
 1009c92:	cmp    edi,0x102
 1009c98:	sete   dl
 1009c9b:	mov    DWORD PTR [esi+0xb2c],edx
 1009ca1:	mov    DWORD PTR [esi+0xb30],0x1
 1009cab:	lea    edi,[esi+0xb24]
 1009cb1:	push   edi
 1009cb2:	mov    eax,DWORD PTR [ebx]
 1009cb4:	push   eax
 1009cb5:	call   DWORD PTR ds:0x100109c
 1009cbb:	test   eax,eax
 1009cbd:	je     0x1009cde
 1009cbf:	cmp    DWORD PTR [edi],0x103
 1009cc5:	je     0x1009cde
 1009cc7:	mov    DWORD PTR [esi+0xb28],0x1
 1009cd1:	xor    ebx,ebx
 1009cd3:	mov    DWORD PTR [esi+0xb2c],ebx
 1009cd9:	mov    DWORD PTR [ebp-0x4],ebx
 1009cdc:	jmp    0x1009d23
 1009cde:	xor    ebx,ebx
 1009ce0:	mov    DWORD PTR [ebp-0x4],ebx
 1009ce3:	jmp    0x1009d23
 1009ce5:	mov    ecx,DWORD PTR [ebp-0x14]
 1009ce8:	mov    edx,DWORD PTR [ecx]
 1009cea:	mov    eax,DWORD PTR [edx]
 1009cec:	mov    DWORD PTR [ebp-0x2c],eax
 1009cef:	mov    eax,0x1
 1009cf4:	ret    
 1009cf5:	mov    esp,DWORD PTR [ebp-0x18]
 1009cf8:	mov    esi,DWORD PTR [ebp-0x2c]
 1009cfb:	mov    DWORD PTR [ebp-0x20],esi
 1009cfe:	cmp    esi,0xc00000fd
 1009d04:	jne    0x1009d0c
 1009d06:	call   DWORD PTR ds:0x10011f4
 1009d0c:	test   esi,esi
 1009d0e:	jl     0x1009d17
 1009d10:	mov    DWORD PTR [ebp-0x20],0x80004005
 1009d17:	mov    DWORD PTR [ebp-0x4],0x0
 1009d1e:	mov    esi,DWORD PTR [ebp-0x30]
 1009d21:	xor    ebx,ebx
 1009d23:	mov    ecx,DWORD PTR [ebp-0x20]
 1009d26:	push   ecx
 1009d27:	mov    edx,DWORD PTR [ebp-0x1c]
 1009d2a:	push   edx
 1009d2b:	call   0x1007130
 1009d30:	mov    edi,eax
 1009d32:	mov    DWORD PTR [ebp-0x1c],edi
 1009d35:	mov    eax,DWORD PTR [esi+0xd88]
 1009d3b:	push   eax
 1009d3c:	call   DWORD PTR ds:0x1001054
 1009d42:	mov    DWORD PTR [esi+0xd88],ebx
 1009d48:	mov    ecx,DWORD PTR [esi+0xd84]
 1009d4e:	push   ecx
 1009d4f:	call   DWORD PTR ds:0x1001054
 1009d55:	mov    DWORD PTR [esi+0xd84],ebx
 1009d5b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009d62:	jmp    0x1009dd0
 1009d64:	call   DWORD PTR ds:0x1001144
 1009d6a:	test   eax,eax
 1009d6c:	jle    0x1009d78
 1009d6e:	and    eax,0xffff
 1009d73:	or     eax,0x80070000
 1009d78:	push   eax
 1009d79:	mov    edx,DWORD PTR [ebp-0x1c]
 1009d7c:	push   edx
 1009d7d:	jmp    0x1009d81
 1009d7f:	push   eax
 1009d80:	push   ebx
 1009d81:	call   0x1007130
 1009d86:	mov    edi,eax
 1009d88:	mov    DWORD PTR [ebp-0x1c],edi
 1009d8b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009d92:	jmp    0x1009dd0
 1009d94:	mov    eax,DWORD PTR [ebp-0x14]
 1009d97:	mov    ecx,DWORD PTR [eax]
 1009d99:	mov    edx,DWORD PTR [ecx]
 1009d9b:	mov    DWORD PTR [ebp-0x34],edx
 1009d9e:	mov    eax,0x1
 1009da3:	ret    
 1009da4:	mov    esp,DWORD PTR [ebp-0x18]
 1009da7:	mov    esi,DWORD PTR [ebp-0x34]
 1009daa:	mov    DWORD PTR [ebp-0x24],esi
 1009dad:	cmp    esi,0xc00000fd
 1009db3:	jne    0x1009dbb
 1009db5:	call   DWORD PTR ds:0x10011f4
 1009dbb:	test   esi,esi
 1009dbd:	jl     0x1009dc6
 1009dbf:	mov    DWORD PTR [ebp-0x24],0x80004005
 1009dc6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009dcd:	mov    edi,DWORD PTR [ebp-0x1c]
 1009dd0:	mov    eax,DWORD PTR [ebp-0x38]
 1009dd3:	cmp    eax,0x7fffffff
 1009dd8:	je     0x1009de8
 1009dda:	push   eax
 1009ddb:	call   DWORD PTR ds:0x100108c
 1009de1:	push   eax
 1009de2:	call   DWORD PTR ds:0x1001094
 1009de8:	test   edi,edi
 1009dea:	jl     0x1009def
 1009dec:	mov    edi,DWORD PTR [ebp-0x24]
 1009def:	mov    eax,edi
 1009df1:	mov    ecx,DWORD PTR [ebp-0x10]
 1009df4:	mov    DWORD PTR fs:0x0,ecx
 1009dfb:	pop    ecx
 1009dfc:	pop    edi
 1009dfd:	pop    esi
 1009dfe:	pop    ebx
 1009dff:	mov    esp,ebp
 1009e01:	pop    ebp
 1009e02:	ret    
 1009e03:	int3   
 1009e04:	int3   
 1009e05:	int3   
 1009e06:	int3   
 1009e07:	int3   
 1009e08:	int3   
 1009e09:	int3   
 1009e0a:	int3   
 1009e0b:	int3   
 1009e0c:	int3   
 1009e0d:	int3   
 1009e0e:	int3   
 1009e0f:	int3   
 1009e10:	mov    edi,edi
 1009e12:	push   ebp
 1009e13:	mov    ebp,esp
 1009e15:	push   0xfffffffe
 1009e17:	push   0x100ace8
 1009e1c:	push   0x1005ab7
 1009e21:	mov    eax,fs:0x0
 1009e27:	push   eax
 1009e28:	sub    esp,0x14
 1009e2b:	push   ebx
 1009e2c:	push   esi
 1009e2d:	push   edi
 1009e2e:	mov    eax,ds:0x100c088
 1009e33:	xor    DWORD PTR [ebp-0x8],eax
 1009e36:	xor    eax,ebp
 1009e38:	push   eax
 1009e39:	lea    eax,[ebp-0x10]
 1009e3c:	mov    fs:0x0,eax
 1009e42:	mov    DWORD PTR [ebp-0x18],esp
 1009e45:	xor    ebx,ebx
 1009e47:	mov    DWORD PTR [ebp-0x1c],ebx
 1009e4a:	mov    DWORD PTR [ebp-0x20],ebx
 1009e4d:	mov    DWORD PTR [ebp-0x4],ebx
 1009e50:	push   0x100182c
 1009e55:	mov    esi,DWORD PTR [ebp+0x10]
 1009e58:	push   esi
 1009e59:	mov    edi,DWORD PTR [ebp+0xc]
 1009e5c:	push   edi
 1009e5d:	call   0x1003dbc
 1009e62:	mov    DWORD PTR [ebp-0x1c],eax
 1009e65:	cmp    eax,ebx
 1009e67:	jl     0x1009eb7
 1009e69:	mov    ebx,DWORD PTR [ebp+0x8]
 1009e6c:	cmp    DWORD PTR [ebx+0xd8c],0x0
 1009e73:	jne    0x1009e88
 1009e75:	push   0x1002900
 1009e7a:	push   esi
 1009e7b:	push   edi
 1009e7c:	call   0x1008fe0
 1009e81:	mov    DWORD PTR [ebp-0x1c],eax
 1009e84:	test   eax,eax
 1009e86:	jl     0x1009eb7
 1009e88:	cmp    DWORD PTR [ebx+0xb30],0x0
 1009e8f:	je     0x1009edd
 1009e91:	cmp    DWORD PTR [ebx+0xb2c],0x0
 1009e98:	je     0x1009ed2
 1009e9a:	mov    eax,DWORD PTR [ebx+0xd8c]
 1009ea0:	push   eax
 1009ea1:	push   0x10028a0
 1009ea6:	push   esi
 1009ea7:	push   edi
 1009ea8:	call   0x1008800
 1009ead:	add    esp,0x10
 1009eb0:	mov    DWORD PTR [ebp-0x1c],eax
 1009eb3:	test   eax,eax
 1009eb5:	jge    0x1009edd
 1009eb7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009ebe:	mov    ecx,DWORD PTR [ebp-0x10]
 1009ec1:	mov    DWORD PTR fs:0x0,ecx
 1009ec8:	pop    ecx
 1009ec9:	pop    edi
 1009eca:	pop    esi
 1009ecb:	pop    ebx
 1009ecc:	mov    esp,ebp
 1009ece:	pop    ebp
 1009ecf:	ret    0xc
 1009ed2:	push   esi
 1009ed3:	push   edi
 1009ed4:	mov    ecx,ebx
 1009ed6:	call   0x1009340
 1009edb:	jmp    0x1009eb0
 1009edd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009ee4:	jmp    0x1009f22
 1009ee6:	mov    ecx,DWORD PTR [ebp-0x14]
 1009ee9:	mov    edx,DWORD PTR [ecx]
 1009eeb:	mov    eax,DWORD PTR [edx]
 1009eed:	mov    DWORD PTR [ebp-0x24],eax
 1009ef0:	mov    eax,0x1
 1009ef5:	ret    
 1009ef6:	mov    esp,DWORD PTR [ebp-0x18]
 1009ef9:	mov    esi,DWORD PTR [ebp-0x24]
 1009efc:	mov    DWORD PTR [ebp-0x20],esi
 1009eff:	cmp    esi,0xc00000fd
 1009f05:	jne    0x1009f0d
 1009f07:	call   DWORD PTR ds:0x10011f4
 1009f0d:	test   esi,esi
 1009f0f:	jl     0x1009f18
 1009f11:	mov    DWORD PTR [ebp-0x20],0x80004005
 1009f18:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1009f1f:	mov    eax,DWORD PTR [ebp-0x1c]
 1009f22:	test   eax,eax
 1009f24:	jl     0x1009f29
 1009f26:	mov    eax,DWORD PTR [ebp-0x20]
 1009f29:	mov    ecx,DWORD PTR [ebp-0x10]
 1009f2c:	mov    DWORD PTR fs:0x0,ecx
 1009f33:	pop    ecx
 1009f34:	pop    edi
 1009f35:	pop    esi
 1009f36:	pop    ebx
 1009f37:	mov    esp,ebp
 1009f39:	pop    ebp
 1009f3a:	ret    0xc
 1009f3d:	int3   
 1009f3e:	int3   
 1009f3f:	int3   
 1009f40:	int3   
 1009f41:	int3   
 1009f42:	int3   
 1009f43:	int3   
 1009f44:	int3   
 1009f45:	int3   
 1009f46:	int3   
 1009f47:	int3   
 1009f48:	int3   
 1009f49:	int3   
 1009f4a:	int3   
 1009f4b:	int3   
 1009f4c:	int3   
 1009f4d:	int3   
 1009f4e:	int3   
 1009f4f:	int3   
 1009f50:	mov    edi,edi
 1009f52:	push   ebp
 1009f53:	mov    ebp,esp
 1009f55:	push   esi
 1009f56:	mov    esi,ecx
 1009f58:	call   0x1009720
 1009f5d:	push   0xd94
 1009f62:	push   0x0
 1009f64:	push   esi
 1009f65:	call   0x1005aee
 1009f6a:	add    esp,0xc
 1009f6d:	test   esi,esi
 1009f6f:	je     0x1009f80
 1009f71:	mov    eax,DWORD PTR [ebp+0xc]
 1009f74:	mov    ecx,DWORD PTR [ebp+0x8]
 1009f77:	push   eax
 1009f78:	push   ecx
 1009f79:	mov    ecx,esi
 1009f7b:	call   0x1009620
 1009f80:	pop    esi
 1009f81:	pop    ebp
 1009f82:	ret    0x8
 1009f85:	int3   
 1009f86:	int3   
 1009f87:	int3   
 1009f88:	int3   
 1009f89:	int3   
 1009f8a:	int3   
 1009f8b:	int3   
 1009f8c:	int3   
 1009f8d:	int3   
 1009f8e:	int3   
 1009f8f:	int3   
 1009f90:	mov    edi,edi
 1009f92:	push   ebp
 1009f93:	mov    ebp,esp
 1009f95:	sub    esp,0x50
 1009f98:	mov    eax,DWORD PTR [ebp+0x8]
 1009f9b:	mov    edx,DWORD PTR [eax+0x4]
 1009f9e:	push   ebx
 1009f9f:	push   esi
 1009fa0:	mov    esi,DWORD PTR [eax]
 1009fa2:	push   edi
 1009fa3:	mov    ebx,ecx
 1009fa5:	mov    ecx,0x14
 1009faa:	lea    edi,[ebp-0x50]
 1009fad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1009faf:	mov    ecx,DWORD PTR [ebx+0xb34]
 1009fb5:	mov    esi,DWORD PTR [ebx]
 1009fb7:	push   edx
 1009fb8:	lea    eax,[ebp-0x50]
 1009fbb:	push   eax
 1009fbc:	mov    DWORD PTR [ebp-0x44],ecx
 1009fbf:	call   DWORD PTR ds:0x1001148
 1009fc5:	mov    ecx,DWORD PTR [esi+0x20]
 1009fc8:	push   eax
 1009fc9:	push   ebx
 1009fca:	call   ecx
 1009fcc:	mov    esi,DWORD PTR [ebp+0xc]
 1009fcf:	mov    ecx,ebx
 1009fd1:	mov    DWORD PTR [esi],eax
 1009fd3:	call   0x1009a80
 1009fd8:	pop    edi
 1009fd9:	mov    DWORD PTR [esi],eax
 1009fdb:	pop    esi
 1009fdc:	mov    eax,0x1
 1009fe1:	pop    ebx
 1009fe2:	mov    esp,ebp
 1009fe4:	pop    ebp
 1009fe5:	ret    0x8
 1009fe8:	int3   
 1009fe9:	int3   
 1009fea:	int3   
 1009feb:	int3   
 1009fec:	int3   
 1009fed:	int3   
 1009fee:	int3   
 1009fef:	int3   
 1009ff0:	int3   
 1009ff1:	int3   
 1009ff2:	int3   
 1009ff3:	int3   
 1009ff4:	int3   
 1009ff5:	int3   
 1009ff6:	int3   
 1009ff7:	int3   
 1009ff8:	int3   
 1009ff9:	int3   
 1009ffa:	int3   
 1009ffb:	int3   
 1009ffc:	int3   
 1009ffd:	int3   
 1009ffe:	int3   
 1009fff:	int3   
 100a000:	mov    edi,edi
 100a002:	push   ebp
 100a003:	mov    ebp,esp
 100a005:	push   0xfffffffe
 100a007:	push   0x100ad08
 100a00c:	push   0x1005ab7
 100a011:	mov    eax,fs:0x0
 100a017:	push   eax
 100a018:	sub    esp,0xc
 100a01b:	push   ebx
 100a01c:	push   esi
 100a01d:	push   edi
 100a01e:	mov    eax,ds:0x100c088
 100a023:	xor    DWORD PTR [ebp-0x8],eax
 100a026:	xor    eax,ebp
 100a028:	push   eax
 100a029:	lea    eax,[ebp-0x10]
 100a02c:	mov    fs:0x0,eax
 100a032:	mov    DWORD PTR [ebp-0x18],esp
 100a035:	mov    esi,0x80004005
 100a03a:	mov    DWORD PTR [ebp-0x1c],esi
 100a03d:	mov    edx,DWORD PTR [ebp+0x4]
 100a040:	mov    ecx,DWORD PTR [ebp+0x8]
 100a043:	mov    eax,DWORD PTR [ecx+0x1c]
 100a046:	test   eax,eax
 100a048:	je     0x100a053
 100a04a:	call   0x1009a80
 100a04f:	mov    esi,eax
 100a051:	jmp    0x100a0a1
 100a053:	mov    DWORD PTR [ebp-0x4],0x0
 100a05a:	cmp    DWORD PTR [ecx+0xb34],0x0
 100a061:	jne    0x100a069
 100a063:	mov    DWORD PTR [ecx+0xb34],edx
 100a069:	push   0x0
 100a06b:	push   0x0
 100a06d:	push   0x0
 100a06f:	push   0x42ac
 100a074:	call   DWORD PTR ds:0x1001154
 100a07a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100a081:	jmp    0x100a0a1
 100a083:	lea    eax,[ebp-0x1c]
 100a086:	push   eax
 100a087:	mov    ecx,DWORD PTR [ebp-0x14]
 100a08a:	push   ecx
 100a08b:	mov    ecx,DWORD PTR [ebp+0x8]
 100a08e:	call   0x1009f90
 100a093:	ret    
 100a094:	mov    esp,DWORD PTR [ebp-0x18]
 100a097:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100a09e:	mov    esi,DWORD PTR [ebp-0x1c]
 100a0a1:	mov    eax,esi
 100a0a3:	mov    ecx,DWORD PTR [ebp-0x10]
 100a0a6:	mov    DWORD PTR fs:0x0,ecx
 100a0ad:	pop    ecx
 100a0ae:	pop    edi
 100a0af:	pop    esi
 100a0b0:	pop    ebx
 100a0b1:	mov    esp,ebp
 100a0b3:	pop    ebp
 100a0b4:	ret    0x4
 100a0b7:	int3   
 100a0b8:	int3   
 100a0b9:	int3   
 100a0ba:	int3   
 100a0bb:	int3   
 100a0bc:	int3   
 100a0bd:	int3   
 100a0be:	int3   
 100a0bf:	int3   
 100a0c0:	push   ecx
 100a0c1:	lea    ecx,[esp+0x4]
 100a0c5:	sub    ecx,eax
 100a0c7:	sbb    eax,eax
 100a0c9:	not    eax
 100a0cb:	and    ecx,eax
 100a0cd:	mov    eax,esp
 100a0cf:	and    eax,0xfffff000
 100a0d4:	cmp    ecx,eax
 100a0d6:	jb     0x100a0e2
 100a0d8:	mov    eax,ecx
 100a0da:	pop    ecx
 100a0db:	xchg   esp,eax
 100a0dc:	mov    eax,DWORD PTR [eax]
 100a0de:	mov    DWORD PTR [esp],eax
 100a0e1:	ret    
 100a0e2:	sub    eax,0x1000
 100a0e7:	test   DWORD PTR [eax],eax
 100a0e9:	jmp    0x100a0d4
 100a0eb:	int3   
 100a0ec:	int3   
 100a0ed:	int3   
 100a0ee:	int3   
 100a0ef:	int3   
 100a0f0:	mov    ecx,DWORD PTR [ecx+0x4]
 100a0f3:	call   DWORD PTR ds:0x1001178
 100a0f9:	test   eax,eax
 100a0fb:	je     0x100a105
 100a0fd:	mov    edx,DWORD PTR [eax]
 100a0ff:	push   0x1
 100a101:	mov    ecx,eax
 100a103:	call   DWORD PTR [edx]
 100a105:	ret    
 100a106:	int3   
 100a107:	int3   
 100a108:	int3   
 100a109:	int3   
 100a10a:	int3   
 100a10b:	push   0x4
 100a10d:	mov    eax,0x100a650
 100a112:	call   0x1005973
 100a117:	push   0x0
 100a119:	lea    ecx,[ebp-0x10]
 100a11c:	call   DWORD PTR ds:0x1001180
 100a122:	and    DWORD PTR [ebp-0x4],0x0
 100a126:	jmp    0x100a13d
 100a128:	mov    eax,DWORD PTR [esi]
 100a12a:	mov    ecx,esi
 100a12c:	mov    ds:0x100c744,eax
 100a131:	call   0x100a0f0
 100a136:	push   esi
 100a137:	call   0x100560c
 100a13c:	pop    ecx
 100a13d:	mov    esi,DWORD PTR ds:0x100c744
 100a143:	test   esi,esi
 100a145:	jne    0x100a128
 100a147:	or     DWORD PTR [ebp-0x4],0xffffffff
 100a14b:	lea    ecx,[ebp-0x10]
 100a14e:	call   DWORD PTR ds:0x100117c
 100a154:	call   0x1005a21
 100a159:	ret    
 100a15a:	int3   
 100a15b:	int3   
 100a15c:	int3   
 100a15d:	int3   
 100a15e:	int3   
 100a15f:	mov    edi,edi
 100a161:	push   ebp
 100a162:	mov    ebp,esp
 100a164:	mov    eax,DWORD PTR [ebp+0xc]
 100a167:	mul    DWORD PTR [ebp+0x10]
 100a16a:	test   edx,edx
 100a16c:	jne    0x100a17c
 100a16e:	cmp    eax,0xffffffff
 100a171:	ja     0x100a17c
 100a173:	mov    ecx,DWORD PTR [ebp+0x8]
 100a176:	mov    DWORD PTR [ecx],eax
 100a178:	xor    eax,eax
 100a17a:	pop    ebp
 100a17b:	ret    
 100a17c:	mov    eax,0x80070216
 100a181:	pop    ebp
 100a182:	ret    
 100a183:	int3   
 100a184:	int3   
 100a185:	int3   
 100a186:	int3   
 100a187:	int3   
 100a188:	mov    edi,edi
 100a18a:	push   ebp
 100a18b:	mov    ebp,esp
 100a18d:	mov    eax,DWORD PTR [ebp+0xc]
 100a190:	mul    DWORD PTR [ebp+0x10]
 100a193:	test   edx,edx
 100a195:	jne    0x100a1a5
 100a197:	cmp    eax,0xffffffff
 100a19a:	ja     0x100a1a5
 100a19c:	mov    ecx,DWORD PTR [ebp+0x8]
 100a19f:	mov    DWORD PTR [ecx],eax
 100a1a1:	xor    eax,eax
 100a1a3:	pop    ebp
 100a1a4:	ret    
 100a1a5:	mov    eax,0x80070216
 100a1aa:	pop    ebp
 100a1ab:	ret    
 100a1ac:	int3   
 100a1ad:	int3   
 100a1ae:	int3   
 100a1af:	int3   
 100a1b0:	int3   
 100a1b1:	mov    edi,edi
 100a1b3:	push   ebp
 100a1b4:	mov    ebp,esp
 100a1b6:	mov    ecx,DWORD PTR [ebp+0xc]
 100a1b9:	mov    edx,DWORD PTR [ebp+0x10]
 100a1bc:	or     eax,0xffffffff
 100a1bf:	sub    eax,ecx
 100a1c1:	cmp    eax,edx
 100a1c3:	jae    0x100a1cc
 100a1c5:	mov    eax,0x80070216
 100a1ca:	pop    ebp
 100a1cb:	ret    
 100a1cc:	mov    eax,DWORD PTR [ebp+0x8]
 100a1cf:	add    ecx,edx
 100a1d1:	mov    DWORD PTR [eax],ecx
 100a1d3:	xor    eax,eax
 100a1d5:	pop    ebp
 100a1d6:	ret    
 100a1d7:	int3   
 100a1d8:	int3   
 100a1d9:	int3   
 100a1da:	int3   
 100a1db:	int3   
 100a1dc:	mov    edi,edi
 100a1de:	push   ebp
 100a1df:	mov    ebp,esp
 100a1e1:	mov    ecx,DWORD PTR [ebp+0xc]
 100a1e4:	mov    edx,DWORD PTR [ebp+0x10]
 100a1e7:	or     eax,0xffffffff
 100a1ea:	sub    eax,ecx
 100a1ec:	cmp    eax,edx
 100a1ee:	jae    0x100a1f7
 100a1f0:	mov    eax,0x80070216
 100a1f5:	pop    ebp
 100a1f6:	ret    
 100a1f7:	mov    eax,DWORD PTR [ebp+0x8]
 100a1fa:	add    ecx,edx
 100a1fc:	mov    DWORD PTR [eax],ecx
 100a1fe:	xor    eax,eax
 100a200:	pop    ebp
 100a201:	ret    
 100a202:	int3   
 100a203:	int3   
 100a204:	int3   
 100a205:	int3   
 100a206:	int3   
 100a207:	cmp    BYTE PTR [ecx+0x8],0x0
 100a20b:	mov    DWORD PTR [ecx],0x100294c
 100a211:	je     0x100a222
 100a213:	cmp    DWORD PTR [ecx+0x4],0x0
 100a217:	je     0x100a222
 100a219:	push   DWORD PTR [ecx+0x4]
 100a21c:	call   DWORD PTR ds:0x10010b8
 100a222:	ret    
 100a223:	int3   
 100a224:	int3   
 100a225:	int3   
 100a226:	int3   
 100a227:	int3   
 100a228:	mov    edi,edi
 100a22a:	push   ebp
 100a22b:	mov    ebp,esp
 100a22d:	push   DWORD PTR [ebp+0x8]
 100a230:	push   0x0
 100a232:	push   DWORD PTR [ecx+0x4]
 100a235:	call   DWORD PTR ds:0x10010b4
 100a23b:	pop    ebp
 100a23c:	ret    0x4
 100a23f:	int3   
 100a240:	int3   
 100a241:	int3   
 100a242:	int3   
 100a243:	int3   
 100a244:	mov    edi,edi
 100a246:	push   ebp
 100a247:	mov    ebp,esp
 100a249:	cmp    DWORD PTR [ebp+0x8],0x0
 100a24d:	je     0x100a25d
 100a24f:	push   DWORD PTR [ebp+0x8]
 100a252:	push   0x0
 100a254:	push   DWORD PTR [ecx+0x4]
 100a257:	call   DWORD PTR ds:0x10010b0
 100a25d:	pop    ebp
 100a25e:	ret    0x4
 100a261:	int3   
 100a262:	int3   
 100a263:	int3   
 100a264:	int3   
 100a265:	int3   
 100a266:	mov    edi,edi
 100a268:	push   ebp
 100a269:	mov    ebp,esp
 100a26b:	mov    edx,DWORD PTR [ebp+0x8]
 100a26e:	test   edx,edx
 100a270:	jne    0x100a27b
 100a272:	push   DWORD PTR [ebp+0xc]
 100a275:	mov    eax,DWORD PTR [ecx]
 100a277:	call   DWORD PTR [eax]
 100a279:	jmp    0x100a29a
 100a27b:	cmp    DWORD PTR [ebp+0xc],0x0
 100a27f:	jne    0x100a28b
 100a281:	mov    eax,DWORD PTR [ecx]
 100a283:	push   edx
 100a284:	call   DWORD PTR [eax+0x4]
 100a287:	xor    eax,eax
 100a289:	jmp    0x100a29a
 100a28b:	push   DWORD PTR [ebp+0xc]
 100a28e:	push   edx
 100a28f:	push   0x0
 100a291:	push   DWORD PTR [ecx+0x4]
 100a294:	call   DWORD PTR ds:0x1001088
 100a29a:	pop    ebp
 100a29b:	ret    0x8
 100a29e:	int3   
 100a29f:	int3   
 100a2a0:	int3   
 100a2a1:	int3   
 100a2a2:	int3   
 100a2a3:	mov    edi,edi
 100a2a5:	push   ebp
 100a2a6:	mov    ebp,esp
 100a2a8:	push   DWORD PTR [ebp+0x8]
 100a2ab:	push   0x0
 100a2ad:	push   DWORD PTR [ecx+0x4]
 100a2b0:	call   DWORD PTR ds:0x1001084
 100a2b6:	pop    ebp
 100a2b7:	ret    0x4
 100a2ba:	int3   
 100a2bb:	int3   
 100a2bc:	int3   
 100a2bd:	int3   
 100a2be:	int3   
 100a2bf:	mov    edi,edi
 100a2c1:	push   ebp
 100a2c2:	mov    ebp,esp
 100a2c4:	push   esi
 100a2c5:	mov    esi,ecx
 100a2c7:	call   0x100a207
 100a2cc:	test   BYTE PTR [ebp+0x8],0x1
 100a2d0:	je     0x100a2d9
 100a2d2:	push   esi
 100a2d3:	call   0x100560c
 100a2d8:	pop    ecx
 100a2d9:	mov    eax,esi
 100a2db:	pop    esi
 100a2dc:	pop    ebp
 100a2dd:	ret    0x4
 100a2e0:	int3   
 100a2e1:	int3   
 100a2e2:	int3   
 100a2e3:	int3   
 100a2e4:	int3   
 100a2e5:	mov    edi,edi
 100a2e7:	push   ebp
 100a2e8:	mov    ebp,esp
 100a2ea:	push   esi
 100a2eb:	mov    esi,DWORD PTR [ebp+0x8]
 100a2ee:	push   edi
 100a2ef:	push   DWORD PTR [ebp+0xc]
 100a2f2:	add    esi,0x8
 100a2f5:	and    esi,0xfffffff8
 100a2f8:	lea    eax,[ebp+0x8]
 100a2fb:	push   esi
 100a2fc:	push   eax
 100a2fd:	mov    edi,ecx
 100a2ff:	call   0x100a15f
 100a304:	add    esp,0xc
 100a307:	test   eax,eax
 100a309:	js     0x100a347
 100a30b:	push   DWORD PTR [ebp+0x8]
 100a30e:	lea    eax,[ebp+0x8]
 100a311:	push   0x10
 100a313:	push   eax
 100a314:	call   0x100a1dc
 100a319:	add    esp,0xc
 100a31c:	test   eax,eax
 100a31e:	js     0x100a347
 100a320:	mov    ecx,DWORD PTR [edi+0x4]
 100a323:	push   DWORD PTR [ebp+0x8]
 100a326:	mov    eax,DWORD PTR [ecx]
 100a328:	call   DWORD PTR [eax]
 100a32a:	mov    ecx,eax
 100a32c:	test   ecx,ecx
 100a32e:	je     0x100a347
 100a330:	and    DWORD PTR [ecx+0x4],0x0
 100a334:	lea    eax,[esi-0x1]
 100a337:	mov    DWORD PTR [ecx+0x8],eax
 100a33a:	mov    DWORD PTR [ecx],edi
 100a33c:	mov    DWORD PTR [ecx+0xc],0x1
 100a343:	mov    eax,ecx
 100a345:	jmp    0x100a349
 100a347:	xor    eax,eax
 100a349:	pop    edi
 100a34a:	pop    esi
 100a34b:	pop    ebp
 100a34c:	ret    0x8
 100a34f:	int3   
 100a350:	int3   
 100a351:	int3   
 100a352:	int3   
 100a353:	int3   
 100a354:	mov    edi,edi
 100a356:	push   ebp
 100a357:	mov    ebp,esp
 100a359:	mov    ecx,DWORD PTR [ecx+0x4]
 100a35c:	mov    eax,DWORD PTR [ecx]
 100a35e:	pop    ebp
 100a35f:	jmp    DWORD PTR [eax+0x4]
 100a362:	int3   
 100a363:	int3   
 100a364:	int3   
 100a365:	int3   
 100a366:	int3   
 100a367:	mov    edi,edi
 100a369:	push   ebp
 100a36a:	mov    ebp,esp
 100a36c:	push   esi
 100a36d:	mov    esi,DWORD PTR [ebp+0xc]
 100a370:	push   edi
 100a371:	push   DWORD PTR [ebp+0x10]
 100a374:	add    esi,0x8
 100a377:	and    esi,0xfffffff8
 100a37a:	lea    eax,[ebp+0xc]
 100a37d:	push   esi
 100a37e:	push   eax
 100a37f:	mov    edi,ecx
 100a381:	call   0x100a188
 100a386:	add    esp,0xc
 100a389:	test   eax,eax
 100a38b:	js     0x100a3c0
 100a38d:	push   DWORD PTR [ebp+0xc]
 100a390:	lea    eax,[ebp+0xc]
 100a393:	push   0x10
 100a395:	push   eax
 100a396:	call   0x100a1b1
 100a39b:	add    esp,0xc
 100a39e:	test   eax,eax
 100a3a0:	js     0x100a3c0
 100a3a2:	push   DWORD PTR [ebp+0xc]
 100a3a5:	mov    ecx,DWORD PTR [edi+0x4]
 100a3a8:	push   DWORD PTR [ebp+0x8]
 100a3ab:	mov    eax,DWORD PTR [ecx]
 100a3ad:	call   DWORD PTR [eax+0x8]
 100a3b0:	mov    ecx,eax
 100a3b2:	test   ecx,ecx
 100a3b4:	je     0x100a3c0
 100a3b6:	lea    eax,[esi-0x1]
 100a3b9:	mov    DWORD PTR [ecx+0x8],eax
 100a3bc:	mov    eax,ecx
 100a3be:	jmp    0x100a3c2
 100a3c0:	xor    eax,eax
 100a3c2:	pop    edi
 100a3c3:	pop    esi
 100a3c4:	pop    ebp
 100a3c5:	ret    0xc
 100a3c8:	int3   
 100a3c9:	int3   
 100a3ca:	int3   
 100a3cb:	int3   
 100a3cc:	int3   
 100a3cd:	xor    edx,edx
 100a3cf:	lea    eax,[ecx+0x14]
 100a3d2:	inc    edx
 100a3d3:	lock xadd DWORD PTR [eax],edx
 100a3d7:	lea    eax,[ecx+0x8]
 100a3da:	ret    
 100a3db:	int3   
 100a3dc:	int3   
 100a3dd:	int3   
 100a3de:	int3   
 100a3df:	int3   
 100a3e0:	mov    eax,ecx
 100a3e2:	ret    
 100a3e3:	int3   
 100a3e4:	int3   
 100a3e5:	int3   
 100a3e6:	int3   
 100a3e7:	int3   
 100a3e8:	mov    edi,edi
 100a3ea:	push   ebp
 100a3eb:	mov    ebp,esp
 100a3ed:	test   BYTE PTR [ebp+0x8],0x1
 100a3f1:	push   esi
 100a3f2:	mov    esi,ecx
 100a3f4:	mov    DWORD PTR [esi],0x1002960
 100a3fa:	je     0x100a403
 100a3fc:	push   esi
 100a3fd:	call   0x100560c
 100a402:	pop    ecx
 100a403:	mov    eax,esi
 100a405:	pop    esi
 100a406:	pop    ebp
 100a407:	ret    0x4
 100a40a:	int3   
 100a40b:	int3   
 100a40c:	int3   
 100a40d:	int3   
 100a40e:	int3   
 100a40f:	int3   
 100a410:	jmp    DWORD PTR ds:0x10012ac
 100a416:	int3   
 100a417:	int3   
 100a418:	int3   
 100a419:	int3   
 100a41a:	int3   
 100a41b:	int3   
 100a41c:	jmp    DWORD PTR ds:0x10012b0
 100a422:	int3   
 100a423:	int3   
 100a424:	int3   
 100a425:	int3   
 100a426:	int3   
 100a427:	int3   
 100a428:	jmp    DWORD PTR ds:0x1001284
 100a42e:	int3   
 100a42f:	int3   
 100a430:	int3   
 100a431:	int3   
 100a432:	int3   
 100a433:	int3   
 100a434:	jmp    DWORD PTR ds:0x1001280
 100a43a:	int3   
 100a43b:	int3   
 100a43c:	int3   
 100a43d:	int3   
 100a43e:	int3   
 100a43f:	int3   
 100a440:	mov    edi,edi
 100a442:	push   ebp
 100a443:	mov    ebp,esp
 100a445:	mov    ecx,0x100c758
 100a44a:	call   0x10083d0
 100a44f:	test   eax,eax
 100a451:	jne    0x100a490
 100a453:	mov    ecx,0x100c758
 100a458:	call   0x1008680
 100a45d:	test   eax,eax
 100a45f:	je     0x100a490
 100a461:	push   0x1228
 100a466:	push   0x0
 100a468:	push   0x100c768
 100a46d:	call   0x1005aee
 100a472:	add    esp,0xc
 100a475:	mov    ecx,0x100c768
 100a47a:	call   0x1007b20
 100a47f:	push   0x0
 100a481:	mov    ecx,0x100c758
 100a486:	mov    ds:0x100c760,eax
 100a48b:	call   0x10086d0
 100a490:	push   esi
 100a491:	mov    ecx,0x100c758
 100a496:	call   0x10083f0
 100a49b:	mov    ecx,DWORD PTR [ebp+0x8]
 100a49e:	mov    esi,eax
 100a4a0:	test   esi,esi
 100a4a2:	jl     0x100a4ba
 100a4a4:	mov    eax,ds:0x100c760
 100a4a9:	mov    DWORD PTR [ecx],eax
 100a4ab:	mov    edx,DWORD PTR [eax]
 100a4ad:	push   eax
 100a4ae:	mov    eax,DWORD PTR [edx+0x4]
 100a4b1:	call   eax
 100a4b3:	mov    eax,esi
 100a4b5:	pop    esi
 100a4b6:	pop    ebp
 100a4b7:	ret    0x4
 100a4ba:	mov    eax,esi
 100a4bc:	mov    DWORD PTR [ecx],0x0
 100a4c2:	pop    esi
 100a4c3:	pop    ebp
 100a4c4:	ret    0x4
 100a4c7:	int3   
 100a4c8:	int3   
 100a4c9:	int3   
 100a4ca:	int3   
 100a4cb:	int3   
 100a4cc:	int3   
 100a4cd:	int3   
 100a4ce:	int3   
 100a4cf:	int3   
 100a4d0:	mov    edi,edi
 100a4d2:	push   ebp
 100a4d3:	mov    ebp,esp
 100a4d5:	pop    ebp
 100a4d6:	jmp    0x100a440
 100a4db:	int3   
 100a4dc:	int3   
 100a4dd:	int3   
 100a4de:	int3   
 100a4df:	int3   
 100a4e0:	mov    edi,edi
 100a4e2:	push   ebp
 100a4e3:	mov    ebp,esp
 100a4e5:	push   ecx
 100a4e6:	push   ebx
 100a4e7:	push   esi
 100a4e8:	lea    eax,[ebp-0x4]
 100a4eb:	push   eax
 100a4ec:	mov    DWORD PTR [ebp-0x4],0x0
 100a4f3:	call   0x100a440
 100a4f8:	mov    ebx,DWORD PTR [ebp+0x8]
 100a4fb:	mov    esi,eax
 100a4fd:	test   esi,esi
 100a4ff:	jne    0x100a517
 100a501:	push   edi
 100a502:	mov    edi,DWORD PTR [ebp-0x4]
 100a505:	push   ebx
 100a506:	push   edi
 100a507:	call   0x10070d0
 100a50c:	mov    ecx,DWORD PTR [edi]
 100a50e:	mov    edx,DWORD PTR [ecx+0x8]
 100a511:	push   edi
 100a512:	mov    esi,eax
 100a514:	call   edx
 100a516:	pop    edi
 100a517:	push   0x8000
 100a51c:	push   0x0
 100a51e:	push   ebx
 100a51f:	call   DWORD PTR ds:0x1001170
 100a525:	mov    eax,esi
 100a527:	pop    esi
 100a528:	pop    ebx
 100a529:	mov    esp,ebp
 100a52b:	pop    ebp
 100a52c:	ret    0x4
 100a52f:	int3   
 100a530:	int3   
 100a531:	int3   
 100a532:	int3   
 100a533:	int3   
 100a534:	lea    ecx,[ebp-0x230]
 100a53a:	jmp    0x100357b
 100a53f:	lea    ecx,[ebp-0x220]
 100a545:	jmp    0x100360d
 100a54a:	lea    ecx,[ebp-0x224]
 100a550:	jmp    0x100360d
 100a555:	lea    ecx,[ebp-0x21c]
 100a55b:	jmp    0x1003c9c
 100a560:	mov    edx,DWORD PTR [esp+0x8]
 100a564:	lea    eax,[edx+0xc]
 100a567:	mov    ecx,DWORD PTR [edx-0x234]
 100a56d:	xor    ecx,eax
 100a56f:	call   0x1005953
 100a574:	mov    ecx,DWORD PTR [edx-0x4]
 100a577:	xor    ecx,eax
 100a579:	call   0x1005953
 100a57e:	mov    eax,0x100a798
 100a583:	jmp    0x1005aac
 100a588:	int3   
 100a589:	int3   
 100a58a:	int3   
 100a58b:	int3   
 100a58c:	int3   
 100a58d:	push   DWORD PTR [ebp-0x2c]
 100a590:	call   0x1005948
 100a595:	pop    ecx
 100a596:	ret    
 100a597:	lea    ecx,[ebp-0x14]
 100a59a:	jmp    0x1002d72
 100a59f:	mov    edx,DWORD PTR [esp+0x8]
 100a5a3:	lea    eax,[edx+0xc]
 100a5a6:	mov    ecx,DWORD PTR [edx-0x30]
 100a5a9:	xor    ecx,eax
 100a5ab:	call   0x1005953
 100a5b0:	mov    eax,0x100a800
 100a5b5:	jmp    0x1005aac
 100a5ba:	int3   
 100a5bb:	int3   
 100a5bc:	int3   
 100a5bd:	int3   
 100a5be:	int3   
 100a5bf:	mov    edx,DWORD PTR [esp+0x8]
 100a5c3:	lea    eax,[edx+0xc]
 100a5c6:	mov    ecx,DWORD PTR [edx-0x1c]
 100a5c9:	xor    ecx,eax
 100a5cb:	call   0x1005953
 100a5d0:	mov    eax,0x100a858
 100a5d5:	jmp    0x1005aac
 100a5da:	int3   
 100a5db:	int3   
 100a5dc:	int3   
 100a5dd:	int3   
 100a5de:	int3   
 100a5df:	mov    edx,DWORD PTR [esp+0x8]
 100a5e3:	lea    eax,[edx+0xc]
 100a5e6:	mov    ecx,DWORD PTR [edx-0x1c]
 100a5e9:	xor    ecx,eax
 100a5eb:	call   0x1005953
 100a5f0:	mov    eax,0x100a8d0
 100a5f5:	jmp    0x1005aac
 100a5fa:	int3   
 100a5fb:	int3   
 100a5fc:	int3   
 100a5fd:	int3   
 100a5fe:	int3   
 100a5ff:	mov    edx,DWORD PTR [esp+0x8]
 100a603:	lea    eax,[edx+0xc]
 100a606:	mov    ecx,DWORD PTR [edx-0x1c]
 100a609:	xor    ecx,eax
 100a60b:	call   0x1005953
 100a610:	mov    eax,0x100a928
 100a615:	jmp    0x1005aac
 100a61a:	int3   
 100a61b:	int3   
 100a61c:	int3   
 100a61d:	int3   
 100a61e:	int3   
 100a61f:	mov    ecx,DWORD PTR [ebp-0x10]
 100a622:	jmp    0x1005023
 100a627:	mov    edx,DWORD PTR [esp+0x8]
 100a62b:	lea    eax,[edx+0xc]
 100a62e:	mov    ecx,DWORD PTR [edx-0x14]
 100a631:	xor    ecx,eax
 100a633:	call   0x1005953
 100a638:	mov    eax,0x100a988
 100a63d:	jmp    0x1005aac
 100a642:	int3   
 100a643:	int3   
 100a644:	int3   
 100a645:	int3   
 100a646:	int3   
 100a647:	lea    ecx,[ebp-0x10]
 100a64a:	jmp    DWORD PTR ds:0x100117c
 100a650:	mov    edx,DWORD PTR [esp+0x8]
 100a654:	lea    eax,[edx+0xc]
 100a657:	mov    ecx,DWORD PTR [edx-0x14]
 100a65a:	xor    ecx,eax
 100a65c:	call   0x1005953
 100a661:	mov    eax,0x100ad2c
 100a666:	jmp    0x1005aac
 100a66b:	int3   
 100a66c:	int3   
 100a66d:	int3   
 100a66e:	int3   
 100a66f:	int3   
 100a670:	mov    ecx,0x100c320
 100a675:	call   0x10042e1
 100a67a:	push   0x100a721
 100a67f:	mov    DWORD PTR ds:0x100c320,0x10015e8
 100a689:	mov    BYTE PTR ds:0x100c360,0x0
 100a690:	call   0x1005809
 100a695:	pop    ecx
 100a696:	ret    
 100a697:	int3   
 100a698:	int3   
 100a699:	int3   
 100a69a:	int3   
 100a69b:	int3   
 100a69c:	mov    ecx,0x100c6cc
 100a6a1:	call   0x1005f85
 100a6a6:	push   0x100a730
 100a6ab:	call   0x1005809
 100a6b0:	pop    ecx
 100a6b1:	ret    
 100a6b2:	int3   
 100a6b3:	int3   
 100a6b4:	int3   
 100a6b5:	int3   
 100a6b6:	int3   
 100a6b7:	mov    ecx,0x100c704
 100a6bc:	call   0x1006005
 100a6c1:	push   0x100a73f
 100a6c6:	call   0x1005809
 100a6cb:	pop    ecx
 100a6cc:	ret    
 100a6cd:	int3   
 100a6ce:	int3   
 100a6cf:	int3   
 100a6d0:	int3   
 100a6d1:	int3   
 100a6d2:	push   0x100a74e
 100a6d7:	call   0x1005809
 100a6dc:	pop    ecx
 100a6dd:	ret    
 100a6de:	int3   
 100a6df:	int3   
 100a6e0:	int3   
 100a6e1:	int3   
 100a6e2:	int3   
 100a6e3:	call   DWORD PTR ds:0x1001080
 100a6e9:	push   0x100a75d
 100a6ee:	mov    DWORD PTR ds:0x100c74c,0x100294c
 100a6f8:	mov    ds:0x100c750,eax
 100a6fd:	mov    BYTE PTR ds:0x100c754,0x0
 100a704:	call   0x1005809
 100a709:	pop    ecx
 100a70a:	ret    
 100a70b:	int3   
 100a70c:	int3   
 100a70d:	int3   
 100a70e:	int3   
 100a70f:	int3   
 100a710:	push   0x100a76c
 100a715:	call   0x1005809
 100a71a:	pop    ecx
 100a71b:	ret    
 100a71c:	int3   
 100a71d:	int3   
 100a71e:	int3   
 100a71f:	int3   
 100a720:	int3   
 100a721:	mov    ecx,0x100c320
 100a726:	jmp    0x1004323
 100a72b:	int3   
 100a72c:	int3   
 100a72d:	int3   
 100a72e:	int3   
 100a72f:	int3   
 100a730:	mov    ecx,0x100c6cc
 100a735:	jmp    0x1005fca
 100a73a:	int3   
 100a73b:	int3   
 100a73c:	int3   
 100a73d:	int3   
 100a73e:	int3   
 100a73f:	mov    ecx,0x100c704
 100a744:	jmp    0x100319e
 100a749:	int3   
 100a74a:	int3   
 100a74b:	int3   
 100a74c:	int3   
 100a74d:	int3   
 100a74e:	mov    ecx,0x100c748
 100a753:	jmp    0x100a10b
 100a758:	int3   
 100a759:	int3   
 100a75a:	int3   
 100a75b:	int3   
 100a75c:	int3   
 100a75d:	mov    ecx,0x100c74c
 100a762:	jmp    0x100a207
 100a767:	int3   
 100a768:	int3   
 100a769:	int3   
 100a76a:	int3   
 100a76b:	int3   
 100a76c:	mov    DWORD PTR ds:0x100c0c0,0x1002960
 100a776:	ret    
 100a777:	int3   
 100a778:	(bad)  
 100a779:	(bad)  
 100a77a:	(bad)  
 100a77b:	push   DWORD PTR [eiz*4+0x100]
 100a782:	add    BYTE PTR [eax],al
 100a784:	aas    
 100a785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100a786:	add    BYTE PTR [ecx],al
 100a788:	add    DWORD PTR [eax],eax
 100a78a:	add    BYTE PTR [eax],al
 100a78c:	dec    edx
 100a78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100a78e:	add    BYTE PTR [ecx],al
 100a790:	add    al,BYTE PTR [eax]
 100a792:	add    BYTE PTR [eax],al
 100a794:	push   ebp
 100a795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100a796:	add    BYTE PTR [ecx],al
 100a798:	and    al,BYTE PTR ds:0x41993
 100a79e:	add    BYTE PTR [eax],al
 100a7a0:	js     0x100a749
 100a7a2:	add    BYTE PTR [ecx],al
	...
 100a7b8:	add    DWORD PTR [eax],eax
 100a7ba:	add    BYTE PTR [eax],al
 100a7bc:	inc    eax
	...
 100a7c5:	add    BYTE PTR [eax],al
 100a7c7:	add    BYTE PTR [esi+0x1003b],ah
 100a7cd:	add    BYTE PTR [eax],al
 100a7cf:	add    BYTE PTR [ecx],al
 100a7d1:	add    BYTE PTR [eax],al
 100a7d3:	add    BYTE PTR [edx],al
 100a7d5:	add    BYTE PTR [eax],al
 100a7d7:	add    BYTE PTR [ecx],al
 100a7d9:	add    BYTE PTR [eax],al
 100a7db:	add    BYTE PTR [edi+eiz*4-0xff00],bh
 100a7e2:	(bad)  
 100a7e3:	inc    DWORD PTR [eax]
 100a7e5:	add    BYTE PTR [eax],al
 100a7e7:	add    BYTE PTR [eax],al
 100a7e9:	add    BYTE PTR [eax],al
 100a7eb:	add    BYTE PTR [ebp-0xfeff5b],cl
 100a7f1:	(bad)  
 100a7f2:	(bad)  
 100a7f3:	inc    DWORD PTR [eax]
 100a7f5:	add    BYTE PTR [eax],al
 100a7f7:	add    bh,bh
 100a7f9:	(bad)  
 100a7fa:	(bad)  
 100a7fb:	call   DWORD PTR [edi+0x220100a5]
 100a801:	add    eax,0x41993
 100a806:	add    BYTE PTR [eax],al
 100a808:	loopne 0x100a7b1
 100a80a:	add    BYTE PTR [ecx],al
 100a80c:	add    DWORD PTR [eax],eax
 100a80e:	add    BYTE PTR [eax],al
 100a810:	int3   
 100a811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 100a812:	add    BYTE PTR [ecx],al
	...
 100a820:	add    DWORD PTR [eax],eax
 100a822:	add    BYTE PTR [eax],al
 100a824:	inc    eax
	...
 100a82d:	add    BYTE PTR [eax],al
 100a82f:	add    BYTE PTR [ebx],dl
 100a831:	sub    eax,DWORD PTR [eax]
 100a833:	add    edi,edi
 100a835:	(bad)  
 100a836:	(bad)  
 100a837:	inc    DWORD PTR [eax]
 100a839:	add    BYTE PTR [eax],al
 100a83b:	add    bh,bh
 100a83d:	(bad)  
 100a83e:	(bad)  
 100a83f:	inc    DWORD PTR [eax]
	...
 100a849:	add    BYTE PTR [eax],al
 100a84b:	add    BYTE PTR [ecx],al
 100a84d:	add    BYTE PTR [eax],al
 100a84f:	add    BYTE PTR [ecx],al
 100a851:	add    BYTE PTR [eax],al
 100a853:	add    BYTE PTR [eax+ebp*4],ah
 100a856:	add    BYTE PTR [ecx],al
 100a858:	and    al,BYTE PTR ds:0x21993
 100a85e:	add    BYTE PTR [eax],al
 100a860:	xor    al,0xa8
 100a862:	add    BYTE PTR [ecx],al
 100a864:	add    DWORD PTR [eax],eax
 100a866:	add    BYTE PTR [eax],al
 100a868:	inc    esp
 100a869:	test   al,0x0
 100a86b:	add    DWORD PTR [eax],eax
	...
 100a875:	add    BYTE PTR [eax],al
 100a877:	add    BYTE PTR [ecx],al
 100a879:	add    BYTE PTR [eax],al
 100a87b:	add    BYTE PTR [eax],al
 100a87d:	add    BYTE PTR [eax],al
 100a87f:	add    ah,ah
 100a881:	(bad)  
 100a882:	(bad)  
 100a883:	inc    DWORD PTR [eax]
 100a885:	add    BYTE PTR [eax],al
 100a887:	add    BYTE PTR [ecx+edi*8+0xffff],ch
 100a88e:	add    BYTE PTR [eax],al
 100a890:	(bad)  
 100a891:	(bad)  
 100a892:	(bad)  
 100a893:	inc    DWORD PTR [eax]
 100a895:	add    BYTE PTR [eax],al
 100a897:	add    BYTE PTR [ebx+0x40010040],ah
	...
 100a8a5:	add    BYTE PTR [eax],al
 100a8a7:	add    BYTE PTR [ebx+0x49],ah
 100a8aa:	add    BYTE PTR [ecx],al
 100a8ac:	(bad)  
 100a8ad:	(bad)  
 100a8ae:	(bad)  
 100a8af:	inc    DWORD PTR [eax]
 100a8b1:	add    BYTE PTR [eax],al
 100a8b3:	add    bh,bh
 100a8b5:	(bad)  
 100a8b6:	(bad)  
 100a8b7:	inc    DWORD PTR [eax]
	...
 100a8c1:	add    BYTE PTR [eax],al
 100a8c3:	add    BYTE PTR [ecx],al
 100a8c5:	add    BYTE PTR [eax],al
 100a8c7:	add    BYTE PTR [ecx],al
 100a8c9:	add    BYTE PTR [eax],al
 100a8cb:	add    BYTE PTR [eax+ebp*4+0x5220100],bl
 100a8d2:	xchg   ebx,eax
 100a8d3:	sbb    DWORD PTR [edx],eax
 100a8d5:	add    BYTE PTR [eax],al
 100a8d7:	add    BYTE PTR [eax+ebp*4+0x10100],ch
 100a8de:	add    BYTE PTR [eax],al
 100a8e0:	mov    esp,0x100a8
	...
 100a8ed:	add    BYTE PTR [eax],al
 100a8ef:	add    BYTE PTR [ecx],al
 100a8f1:	add    BYTE PTR [eax],al
 100a8f3:	add    BYTE PTR [eax+0x0],al
	...
 100a8fe:	add    BYTE PTR [eax],al
 100a900:	out    0x4a,eax
 100a902:	add    BYTE PTR [ecx],al
 100a904:	(bad)  
 100a905:	(bad)  
 100a906:	(bad)  
 100a907:	inc    DWORD PTR [eax]
 100a909:	add    BYTE PTR [eax],al
 100a90b:	add    bh,bh
 100a90d:	(bad)  
 100a90e:	(bad)  
 100a90f:	inc    DWORD PTR [eax]
	...
 100a919:	add    BYTE PTR [eax],al
 100a91b:	add    BYTE PTR [ecx],al
 100a91d:	add    BYTE PTR [eax],al
 100a91f:	add    BYTE PTR [ecx],al
 100a921:	add    BYTE PTR [eax],al
 100a923:	add    ah,dh
 100a925:	test   al,0x0
 100a927:	add    DWORD PTR [edx],esp
 100a929:	add    eax,0x21993
 100a92e:	add    BYTE PTR [eax],al
 100a930:	add    al,0xa9
 100a932:	add    BYTE PTR [ecx],al
 100a934:	add    DWORD PTR [eax],eax
 100a936:	add    BYTE PTR [eax],al
 100a938:	adc    al,0xa9
 100a93a:	add    BYTE PTR [ecx],al
	...
 100a948:	add    DWORD PTR [eax],eax
	...
 100a956:	add    BYTE PTR [eax],al
 100a958:	pop    esp
 100a959:	test   eax,0x10100
 100a95e:	add    BYTE PTR [eax],al
 100a960:	fs test eax,0x100
 100a966:	add    BYTE PTR [eax],al
 100a968:	xor    al,al
 100a96a:	add    BYTE PTR [ecx],al
 100a96c:	add    BYTE PTR [eax],al
 100a96e:	add    BYTE PTR [eax],al
 100a970:	(bad)  
 100a971:	(bad)  
 100a972:	(bad)  
 100a973:	inc    DWORD PTR [eax]
 100a975:	add    BYTE PTR [eax],al
 100a977:	add    BYTE PTR [eax+eax*1],al
 100a97a:	add    BYTE PTR [eax],al
 100a97c:	add    BYTE PTR [eax],al
 100a97e:	add    BYTE PTR [eax],al
 100a980:	(bad)  
 100a981:	(bad)  
 100a982:	(bad)  
 100a983:	call   FWORD PTR [edi]
 100a985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100a986:	add    BYTE PTR [ecx],al
 100a988:	and    al,BYTE PTR ds:0x11993
 100a98e:	add    BYTE PTR [eax],al
 100a990:	sub    BYTE PTR [ecx+0x100],0x0
	...
 100a9a7:	add    BYTE PTR [ecx],al
 100a9a9:	add    BYTE PTR [eax],al
 100a9ab:	add    BYTE PTR [eax],al
 100a9ad:	add    BYTE PTR [eax],al
 100a9af:	add    dh,bh
 100a9b1:	(bad)  
 100a9b2:	(bad)  
 100a9b3:	inc    DWORD PTR [eax]
 100a9b5:	add    BYTE PTR [eax],al
 100a9b7:	add    BYTE PTR [edi+edi*8+0xffff],al
 100a9be:	add    BYTE PTR [eax],al
 100a9c0:	(bad)  
 100a9c1:	(bad)  
 100a9c2:	(bad)  
 100a9c3:	(bad)  
 100a9c4:	jmp    0xfe01aa1d
 100a9c9:	push   esp
 100a9ca:	add    BYTE PTR [ecx],al
 100a9cc:	add    BYTE PTR [eax],al
 100a9ce:	add    BYTE PTR [eax],al
 100a9d0:	(bad)  
 100a9d1:	(bad)  
 100a9d2:	(bad)  
 100a9d3:	inc    DWORD PTR [eax]
 100a9d5:	add    BYTE PTR [eax],al
 100a9d7:	add    al,dl
 100a9d9:	(bad)  
 100a9da:	(bad)  
 100a9db:	inc    DWORD PTR [eax]
 100a9dd:	add    BYTE PTR [eax],al
 100a9df:	add    dh,bh
 100a9e1:	(bad)  
 100a9e2:	(bad)  
 100a9e3:	inc    DWORD PTR [eax]
 100a9e5:	add    BYTE PTR [eax],al
 100a9e7:	add    BYTE PTR [esi+edx*2+0x0],ah
 100a9eb:	add    DWORD PTR [eax],eax
 100a9ed:	add    BYTE PTR [eax],al
 100a9ef:	add    dh,bh
 100a9f1:	(bad)  
 100a9f2:	(bad)  
 100a9f3:	inc    DWORD PTR [eax]
 100a9f5:	add    BYTE PTR [eax],al
 100a9f7:	add    ah,cl
 100a9f9:	(bad)  
 100a9fa:	(bad)  
 100a9fb:	inc    DWORD PTR [eax]
 100a9fd:	add    BYTE PTR [eax],al
 100a9ff:	add    dh,bh
 100aa01:	(bad)  
 100aa02:	(bad)  
 100aa03:	jmp    DWORD PTR [esi+edx*2+0x56cd0100]
 100aa0a:	add    BYTE PTR [ecx],al
 100aa0c:	add    BYTE PTR [eax],al
 100aa0e:	add    BYTE PTR [eax],al
 100aa10:	(bad)  
 100aa11:	(bad)  
 100aa12:	(bad)  
 100aa13:	inc    DWORD PTR [eax]
 100aa15:	add    BYTE PTR [eax],al
 100aa17:	add    ah,dl
 100aa19:	(bad)  
 100aa1a:	(bad)  
 100aa1b:	inc    DWORD PTR [eax]
 100aa1d:	add    BYTE PTR [eax],al
 100aa1f:	add    dh,bh
 100aa21:	(bad)  
 100aa22:	(bad)  
 100aa23:	inc    DWORD PTR [eax]
 100aa25:	add    BYTE PTR [eax],al
 100aa27:	add    BYTE PTR [edi],ch
 100aa29:	push   edi
 100aa2a:	add    BYTE PTR [ecx],al
 100aa2c:	add    BYTE PTR [eax],al
 100aa2e:	add    BYTE PTR [eax],al
 100aa30:	(bad)  
 100aa31:	(bad)  
 100aa32:	(bad)  
 100aa33:	inc    DWORD PTR [eax]
 100aa35:	add    BYTE PTR [eax],al
 100aa37:	add    ah,cl
 100aa39:	(bad)  
 100aa3a:	(bad)  
 100aa3b:	inc    DWORD PTR [eax]
 100aa3d:	add    BYTE PTR [eax],al
 100aa3f:	add    dh,bh
 100aa41:	(bad)  
 100aa42:	(bad)  
 100aa43:	inc    DWORD PTR [eax]
 100aa45:	add    BYTE PTR [eax],al
 100aa47:	add    bl,bh
 100aa49:	push   edi
 100aa4a:	add    BYTE PTR [ecx],al
 100aa4c:	add    BYTE PTR [eax],al
 100aa4e:	add    BYTE PTR [eax],al
 100aa50:	(bad)  
 100aa51:	(bad)  
 100aa52:	(bad)  
 100aa53:	inc    DWORD PTR [eax]
 100aa55:	add    BYTE PTR [eax],al
 100aa57:	add    al,bl
 100aa59:	(bad)  
 100aa5a:	(bad)  
 100aa5b:	inc    DWORD PTR [eax]
 100aa5d:	add    BYTE PTR [eax],al
 100aa5f:	add    dh,bh
 100aa61:	(bad)  
 100aa62:	(bad)  
 100aa63:	(bad)  
 100aa64:	cmp    ebx,DWORD PTR [ebp+0x0]
 100aa67:	add    DWORD PTR [esi+0x5d],ecx
 100aa6a:	add    BYTE PTR [ecx],al
 100aa6c:	add    BYTE PTR [eax],al
 100aa6e:	add    BYTE PTR [eax],al
 100aa70:	(bad)  
 100aa71:	(bad)  
 100aa72:	(bad)  
 100aa73:	inc    DWORD PTR [eax]
 100aa75:	add    BYTE PTR [eax],al
 100aa77:	add    ah,dl
 100aa79:	(bad)  
 100aa7a:	(bad)  
 100aa7b:	inc    DWORD PTR [eax]
 100aa7d:	add    BYTE PTR [eax],al
 100aa7f:	add    dh,bh
 100aa81:	(bad)  
 100aa82:	(bad)  
 100aa83:	jmp    DWORD PTR [ebp-0x4afeff91]
 100aa89:	outs   dx,DWORD PTR ds:[esi]
 100aa8a:	add    BYTE PTR [ecx],al
 100aa8c:	add    BYTE PTR [eax],al
 100aa8e:	add    BYTE PTR [eax],al
 100aa90:	(bad)  
 100aa91:	(bad)  
 100aa92:	(bad)  
 100aa93:	inc    DWORD PTR [eax]
 100aa95:	add    BYTE PTR [eax],al
 100aa97:	add    al,al
 100aa99:	(bad)  
 100aa9a:	(bad)  
 100aa9b:	inc    DWORD PTR [eax]
 100aa9d:	add    BYTE PTR [eax],al
 100aa9f:	add    dh,bh
 100aaa1:	(bad)  
 100aaa2:	(bad)  
 100aaa3:	call   FWORD PTR [edx+esi*2+0x72ac0100]
 100aaaa:	add    BYTE PTR [ecx],al
 100aaac:	add    BYTE PTR [eax],al
 100aaae:	add    BYTE PTR [eax],al
 100aab0:	xor    BYTE PTR [edx+0x0],dh
 100aab3:	add    DWORD PTR [eax+0x72],eax
 100aab6:	add    BYTE PTR [ecx],al
 100aab8:	(bad)  
 100aab9:	(bad)  
 100aaba:	(bad)  
 100aabb:	inc    DWORD PTR [eax]
 100aabd:	add    BYTE PTR [eax],al
 100aabf:	add    al,dl
 100aac1:	(bad)  
 100aac2:	(bad)  
 100aac3:	inc    DWORD PTR [eax]
 100aac5:	add    BYTE PTR [eax],al
 100aac7:	add    dh,bh
 100aac9:	(bad)  
 100aaca:	(bad)  
 100aacb:	inc    ebx
 100aacd:	jae    0x100aacf
 100aacf:	add    ebx,edx
 100aad1:	jae    0x100aad3
 100aad3:	add    DWORD PTR [eax],eax
 100aad5:	add    BYTE PTR [eax],al
 100aad7:	add    dh,bh
 100aad9:	(bad)  
 100aada:	(bad)  
 100aadb:	inc    DWORD PTR [eax]
 100aadd:	add    BYTE PTR [eax],al
 100aadf:	add    ah,cl
 100aae1:	(bad)  
 100aae2:	(bad)  
 100aae3:	inc    DWORD PTR [eax]
 100aae5:	add    BYTE PTR [eax],al
 100aae7:	add    dh,bh
 100aae9:	(bad)  
 100aaea:	(bad)  
 100aaeb:	call   DWORD PTR [ecx]
 100aaed:	jne    0x100aaef
 100aaef:	add    DWORD PTR [ecx],esp
 100aaf1:	jne    0x100aaf3
 100aaf3:	add    DWORD PTR [eax],eax
 100aaf5:	add    BYTE PTR [eax],al
 100aaf7:	add    dh,bh
 100aaf9:	(bad)  
 100aafa:	(bad)  
 100aafb:	inc    DWORD PTR [eax]
 100aafd:	add    BYTE PTR [eax],al
 100aaff:	add    al,al
 100ab01:	(bad)  
 100ab02:	(bad)  
 100ab03:	inc    DWORD PTR [eax]
 100ab05:	add    BYTE PTR [eax],al
 100ab07:	add    dh,bh
 100ab09:	(bad)  
 100ab0a:	(bad)  
 100ab0b:	dec    DWORD PTR [eax+edi*2]
 100ab0e:	add    BYTE PTR [ecx],al
 100ab10:	sbb    al,0x78
 100ab12:	add    BYTE PTR [ecx],al
 100ab14:	add    BYTE PTR [eax],al
 100ab16:	add    BYTE PTR [eax],al
 100ab18:	(bad)  
 100ab19:	(bad)  
 100ab1a:	(bad)  
 100ab1b:	inc    DWORD PTR [eax]
 100ab1d:	add    BYTE PTR [eax],al
 100ab1f:	add    al,dl
 100ab21:	(bad)  
 100ab22:	(bad)  
 100ab23:	inc    DWORD PTR [eax]
 100ab25:	add    BYTE PTR [eax],al
 100ab27:	add    dh,bh
 100ab29:	(bad)  
 100ab2a:	(bad)  
 100ab2b:	inc    DWORD PTR [edx]
 100ab2d:	jp     0x100ab2f
 100ab2f:	add    DWORD PTR [edx],edx
 100ab31:	jp     0x100ab33
 100ab33:	add    DWORD PTR [eax],eax
 100ab35:	add    BYTE PTR [eax],al
 100ab37:	add    dh,bh
 100ab39:	(bad)  
 100ab3a:	(bad)  
 100ab3b:	inc    DWORD PTR [eax]
 100ab3d:	add    BYTE PTR [eax],al
 100ab3f:	add    ah,al
 100ab41:	(bad)  
 100ab42:	(bad)  
 100ab43:	inc    DWORD PTR [eax]
 100ab45:	add    BYTE PTR [eax],al
 100ab47:	add    dh,bh
 100ab49:	(bad)  
 100ab4a:	(bad)  
 100ab4b:	jmp    FWORD PTR [esi-0x41feff82]
 100ab51:	jle    0x100ab53
 100ab53:	add    DWORD PTR [eax],eax
 100ab55:	add    BYTE PTR [eax],al
 100ab57:	add    dh,bh
 100ab59:	(bad)  
 100ab5a:	(bad)  
 100ab5b:	inc    DWORD PTR [eax]
 100ab5d:	add    BYTE PTR [eax],al
 100ab5f:	add    ah,cl
 100ab61:	(bad)  
 100ab62:	(bad)  
 100ab63:	inc    DWORD PTR [eax]
 100ab65:	add    BYTE PTR [eax],al
 100ab67:	add    dh,bh
 100ab69:	(bad)  
 100ab6a:	(bad)  
 100ab6b:	push   DWORD PTR [ecx-0x3efeff81]
 100ab71:	jg     0x100ab73
 100ab73:	add    DWORD PTR [eax],eax
 100ab75:	add    BYTE PTR [eax],al
 100ab77:	add    dh,bh
 100ab79:	(bad)  
 100ab7a:	(bad)  
 100ab7b:	inc    DWORD PTR [eax]
 100ab7d:	add    BYTE PTR [eax],al
 100ab7f:	add    al,dl
 100ab81:	(bad)  
 100ab82:	(bad)  
 100ab83:	inc    DWORD PTR [eax]
 100ab85:	add    BYTE PTR [eax],al
 100ab87:	add    dh,bh
 100ab89:	(bad)  
 100ab8a:	(bad)  
 100ab8b:	jmp    FWORD PTR [ebx-0x44feff80]
 100ab91:	add    BYTE PTR [eax],0x1
 100ab94:	add    BYTE PTR [eax],al
 100ab96:	add    BYTE PTR [eax],al
 100ab98:	(bad)  
 100ab99:	(bad)  
 100ab9a:	(bad)  
 100ab9b:	inc    DWORD PTR [eax]
 100ab9d:	add    BYTE PTR [eax],al
 100ab9f:	add    ah,dl
 100aba1:	(bad)  
 100aba2:	(bad)  
 100aba3:	inc    DWORD PTR [eax]
 100aba5:	add    BYTE PTR [eax],al
 100aba7:	add    dh,bh
 100aba9:	(bad)  
 100abaa:	(bad)  
 100abab:	call   FWORD PTR [ebp-0x7f]
 100abae:	add    BYTE PTR [ecx],al
 100abb0:	ins    DWORD PTR es:[edi],dx
 100abb1:	add    DWORD PTR [eax],0x1
 100abb7:	add    dh,bh
 100abb9:	(bad)  
 100abba:	(bad)  
 100abbb:	inc    DWORD PTR [eax]
 100abbd:	add    BYTE PTR [eax],al
 100abbf:	add    al,dl
 100abc1:	(bad)  
 100abc2:	(bad)  
 100abc3:	inc    DWORD PTR [eax]
 100abc5:	add    BYTE PTR [eax],al
 100abc7:	add    dh,bh
 100abc9:	(bad)  
 100abca:	(bad)  
 100abcb:	inc    DWORD PTR [esi]
 100abcd:	add    BYTE PTR [eax],0x1
 100abd0:	push   ss
 100abd1:	add    BYTE PTR [eax],0x1
 100abd4:	add    BYTE PTR [eax],al
 100abd6:	add    BYTE PTR [eax],al
 100abd8:	(bad)  
 100abd9:	(bad)  
 100abda:	(bad)  
 100abdb:	inc    DWORD PTR [eax]
 100abdd:	add    BYTE PTR [eax],al
 100abdf:	add    ah,dl
 100abe1:	(bad)  
 100abe2:	(bad)  
 100abe3:	inc    DWORD PTR [eax]
 100abe5:	add    BYTE PTR [eax],al
 100abe7:	add    dh,bh
 100abe9:	(bad)  
 100abea:	(bad)  
 100abeb:	push   DWORD PTR [edx+eax*4-0x7d3bff00]
 100abf2:	add    BYTE PTR [ecx],al
 100abf4:	add    BYTE PTR [eax],al
 100abf6:	add    BYTE PTR [eax],al
 100abf8:	(bad)  
 100abf9:	(bad)  
 100abfa:	(bad)  
 100abfb:	inc    DWORD PTR [eax]
 100abfd:	add    BYTE PTR [eax],al
 100abff:	add    al,dl
 100ac01:	(bad)  
 100ac02:	(bad)  
 100ac03:	inc    DWORD PTR [eax]
 100ac05:	add    BYTE PTR [eax],al
 100ac07:	add    dh,bh
 100ac09:	(bad)  
 100ac0a:	(bad)  
 100ac0b:	call   FWORD PTR [edx]
 100ac0d:	xchg   BYTE PTR [eax],al
 100ac0f:	add    DWORD PTR [edx],ebp
 100ac11:	xchg   BYTE PTR [eax],al
 100ac13:	add    DWORD PTR [eax],eax
 100ac15:	add    BYTE PTR [eax],al
 100ac17:	add    dh,bh
 100ac19:	(bad)  
 100ac1a:	(bad)  
 100ac1b:	inc    DWORD PTR [eax]
 100ac1d:	add    BYTE PTR [eax],al
 100ac1f:	add    ah,al
 100ac21:	(bad)  
 100ac22:	(bad)  
 100ac23:	inc    DWORD PTR [eax]
 100ac25:	add    BYTE PTR [eax],al
 100ac27:	add    dh,bh
 100ac29:	(bad)  
 100ac2a:	(bad)  
 100ac2b:	inc    DWORD PTR [ecx]
 100ac2d:	pop    DWORD PTR [eax]
 100ac2f:	add    DWORD PTR [ecx],edx
 100ac31:	pop    DWORD PTR [eax]
 100ac33:	add    esi,edi
 100ac35:	(bad)  
 100ac36:	(bad)  
 100ac37:	jmp    DWORD PTR [edi+ecx*4+0x0]
 100ac3b:	add    DWORD PTR [edi+ecx*4+0x0],esi
 100ac3f:	add    esi,edi
 100ac41:	(bad)  
 100ac42:	(bad)  
 100ac43:	inc    DWORD PTR [eax]
 100ac45:	add    BYTE PTR [eax],al
 100ac47:	add    al,dl
 100ac49:	(bad)  
 100ac4a:	(bad)  
 100ac4b:	inc    DWORD PTR [eax]
 100ac4d:	add    BYTE PTR [eax],al
 100ac4f:	add    dh,bh
 100ac51:	(bad)  
 100ac52:	(bad)  
 100ac53:	(bad)  
 100ac54:	fst    QWORD PTR [edx-0x6d12ff00]
 100ac5a:	add    BYTE PTR [ecx],al
 100ac5c:	add    BYTE PTR [eax],al
 100ac5e:	add    BYTE PTR [eax],al
 100ac60:	(bad)  
 100ac61:	(bad)  
 100ac62:	(bad)  
 100ac63:	inc    DWORD PTR [eax]
 100ac65:	add    BYTE PTR [eax],al
 100ac67:	add    al,dl
 100ac69:	(bad)  
 100ac6a:	(bad)  
 100ac6b:	inc    DWORD PTR [eax]
 100ac6d:	add    BYTE PTR [eax],al
 100ac6f:	add    dh,bh
 100ac71:	(bad)  
 100ac72:	(bad)  
 100ac73:	inc    edx
 100ac75:	xchg   esp,eax
 100ac76:	add    BYTE PTR [ecx],al
 100ac78:	rcl    BYTE PTR [eax+eax*1+0x1],cl
 100ac7f:	add    dh,bh
 100ac81:	(bad)  
 100ac82:	(bad)  
 100ac83:	inc    DWORD PTR [eax]
 100ac85:	add    BYTE PTR [eax],al
 100ac87:	add    al,dl
 100ac89:	(bad)  
 100ac8a:	(bad)  
 100ac8b:	inc    DWORD PTR [eax]
 100ac8d:	add    BYTE PTR [eax],al
 100ac8f:	add    dh,bh
 100ac91:	(bad)  
 100ac92:	(bad)  
 100ac93:	jmp    DWORD PTR [edi-0x48feff68]
 100ac99:	cwde   
 100ac9a:	add    BYTE PTR [ecx],al
 100ac9c:	add    BYTE PTR [eax],al
 100ac9e:	add    BYTE PTR [eax],al
 100aca0:	(bad)  
 100aca1:	(bad)  
 100aca2:	(bad)  
 100aca3:	inc    DWORD PTR [eax]
 100aca5:	add    BYTE PTR [eax],al
 100aca7:	add    al,dl
 100aca9:	(bad)  
 100acaa:	(bad)  
 100acab:	inc    DWORD PTR [eax]
 100acad:	add    BYTE PTR [eax],al
 100acaf:	add    dh,bh
 100acb1:	(bad)  
 100acb2:	(bad)  
 100acb3:	call   FWORD PTR [ebx]
 100acb5:	call   0x100:0x9a2b0100
 100acbc:	add    BYTE PTR [eax],al
 100acbe:	add    BYTE PTR [eax],al
 100acc0:	(bad)  
 100acc1:	(bad)  
 100acc2:	(bad)  
 100acc3:	inc    DWORD PTR [eax]
 100acc5:	add    BYTE PTR [eax],al
 100acc7:	add    BYTE PTR [eax+0xffffff],bh
 100accd:	add    BYTE PTR [eax],al
 100accf:	add    dh,bh
 100acd1:	(bad)  
 100acd2:	(bad)  
 100acd3:	call   DWORD PTR [ebp+ebx*4-0x625bff00]
 100acda:	add    BYTE PTR [ecx],al
 100acdc:	add    BYTE PTR [eax],al
 100acde:	add    BYTE PTR [eax],al
 100ace0:	in     eax,0x9c
 100ace2:	add    BYTE PTR [ecx],al
 100ace4:	cmc    
 100ace5:	pushf  
 100ace6:	add    BYTE PTR [ecx],al
 100ace8:	(bad)  
 100ace9:	(bad)  
 100acea:	(bad)  
 100aceb:	inc    DWORD PTR [eax]
 100aced:	add    BYTE PTR [eax],al
 100acef:	add    ah,cl
 100acf1:	(bad)  
 100acf2:	(bad)  
 100acf3:	inc    DWORD PTR [eax]
 100acf5:	add    BYTE PTR [eax],al
 100acf7:	add    dh,bh
 100acf9:	(bad)  
 100acfa:	(bad)  
 100acfb:	jmp    esi
 100acfd:	sahf   
 100acfe:	add    BYTE PTR [ecx],al
 100ad00:	neg    BYTE PTR [esi+0x100]
 100ad06:	add    BYTE PTR [eax],al
 100ad08:	(bad)  
 100ad09:	(bad)  
 100ad0a:	(bad)  
 100ad0b:	inc    DWORD PTR [eax]
 100ad0d:	add    BYTE PTR [eax],al
 100ad0f:	add    ah,dl
 100ad11:	(bad)  
 100ad12:	(bad)  
 100ad13:	inc    DWORD PTR [eax]
 100ad15:	add    BYTE PTR [eax],al
 100ad17:	add    dh,bh
 100ad19:	(bad)  
 100ad1a:	(bad)  
 100ad1b:	inc    DWORD PTR [ebx-0x6bfeff60]
 100ad21:	mov    al,ds:0xffff0100
 100ad26:	(bad)  
 100ad27:	inc    DWORD PTR [edi-0x5a]
 100ad2a:	add    BYTE PTR [ecx],al
 100ad2c:	and    al,BYTE PTR ds:0x11993
 100ad32:	add    BYTE PTR [eax],al
 100ad34:	and    al,0xad
 100ad36:	add    BYTE PTR [ecx],al
	...
 100ad4c:	add    DWORD PTR [eax],eax
 100ad4e:	add    BYTE PTR [eax],al
 100ad50:	add    BYTE PTR [eax],al
 100ad52:	add    BYTE PTR [eax],al
 100ad54:	add    al,al
 100ad56:	add    BYTE PTR [ecx],al
 100ad58:	add    BYTE PTR [eax],al
 100ad5a:	add    BYTE PTR [eax],al
 100ad5c:	cmp    BYTE PTR [esi+0x0],ch
 100ad62:	add    BYTE PTR [eax],al
 100ad64:	add    BYTE PTR [eax],al
 100ad66:	add    BYTE PTR [eax],al
 100ad68:	inc    edx
 100ad69:	mov    cl,0x0
 100ad6b:	add    BYTE PTR [eax],al
 100ad6d:	adc    BYTE PTR [eax],al
 100ad6f:	add    BYTE PTR [esi+ebp*4+0x0],bh
	...
 100ad7b:	add    BYTE PTR [ebx+esi*4+0x10440000],al
 100ad82:	add    BYTE PTR [eax],al
 100ad84:	les    esi,FWORD PTR [eax+0x0]
 100ad8a:	add    BYTE PTR [eax],al
 100ad8c:	add    BYTE PTR [eax],al
 100ad8e:	add    BYTE PTR [eax],al
 100ad90:	push   es
 100ad91:	mov    ah,0x0
 100ad93:	add    BYTE PTR [edx+edx*1-0x50400000],cl
	...
 100ada2:	add    BYTE PTR [eax],al
 100ada4:	pushf  
 100ada5:	mov    ch,0x0
 100ada7:	add    BYTE PTR [eax+0x48000011],cl
 100adad:	scas   al,BYTE PTR es:[edi]
	...
 100adb6:	add    BYTE PTR [eax],al
 100adb8:	jo     0x100ad70
 100adba:	add    BYTE PTR [eax],al
 100adbc:	adc    BYTE PTR [eax],dl
 100adbe:	add    BYTE PTR [eax],al
 100adc0:	lock mov al,0x0
	...
 100adcb:	add    BYTE PTR [esi],cl
 100adcd:	mov    bh,0x0
 100adcf:	add    BYTE PTR [eax+0x74000012],bh
 100add5:	mov    al,0x0
	...
 100addf:	add    BYTE PTR [eax],bl
 100ade1:	mov    bh,0x0
 100ade3:	add    BYTE PTR [edx+edx*1],bh
 100ade6:	add    BYTE PTR [eax],al
 100ade8:	mov    al,0xaf
	...
 100adf2:	add    BYTE PTR [eax],al
 100adf4:	add    BYTE PTR [ebx+0x11780000],bh
 100adfa:	add    BYTE PTR [eax],al
 100adfc:	in     al,0xb0
	...
 100ae06:	add    BYTE PTR [eax],al
 100ae08:	ss mov ebx,0x12ac0000
 100ae0e:	add    BYTE PTR [eax],al
 100ae10:	mov    eax,0xb0
 100ae15:	add    BYTE PTR [eax],al
 100ae17:	add    BYTE PTR [eax],al
 100ae19:	add    BYTE PTR [eax],al
 100ae1b:	add    BYTE PTR [eax-0x45],dh
 100ae1e:	add    BYTE PTR [eax],al
 100ae20:	adc    BYTE PTR [edx],0x0
	...
 100ae37:	add    BYTE PTR [esi],bl
 100ae39:	mov    cl,0x0
 100ae3b:	add    BYTE PTR [esi],ch
 100ae3d:	mov    cl,0x0
 100ae3f:	add    BYTE PTR [eax],dl
 100ae41:	mov    cl,0x0
 100ae43:	add    BYTE PTR [eax],al
 100ae45:	add    BYTE PTR [eax],al
 100ae47:	add    BYTE PTR ds:0x40800000,bh
 100ae4d:	add    BYTE PTR [eax],al
 100ae4f:	cmp    BYTE PTR [edx],0x0
 100ae52:	add    BYTE PTR [eax-0x7fffffc8],al
 100ae58:	inc    esp
 100ae59:	add    BYTE PTR [eax],al
 100ae5b:	add    BYTE PTR [ebx+0x0],0x0
 100ae5f:	adc    BYTE PTR [edi],0x0
 100ae62:	add    BYTE PTR [eax-0x7fffffcf],al
 100ae68:	adc    al,0x0
 100ae6a:	add    BYTE PTR [eax-0x7fffffef],al
 100ae70:	and    BYTE PTR [eax],al
 100ae72:	add    BYTE PTR [eax-0x7fffffe1],al
 100ae78:	add    BYTE PTR [eax],al
 100ae7a:	add    BYTE PTR [eax],al
 100ae7c:	xor    BYTE PTR [edx-0x4d660000],0x0
 100ae83:	add    BYTE PTR [esi-0x43ffff4e],ah
 100ae89:	mov    dl,0x0
 100ae8b:	add    ah,al
 100ae8d:	mov    dl,0x0
 100ae8f:	add    dl,dl
 100ae91:	mov    dl,0x0
 100ae93:	add    dh,bl
 100ae95:	mov    dl,0x0
 100ae97:	add    dh,ch
 100ae99:	mov    dl,0x0
 100ae9b:	add    BYTE PTR [ebx+esi*4],al
 100ae9e:	add    BYTE PTR [eax],al
 100aea0:	sbb    BYTE PTR [ebx-0x4cd60000],dh
 100aea6:	add    BYTE PTR [eax],al
 100aea8:	cmp    BYTE PTR [ebx-0x4cb40000],dh
 100aeae:	add    BYTE PTR [eax],al
 100aeb0:	bound  esi,QWORD PTR [ebx-0x4c900000]
 100aeb6:	add    BYTE PTR [eax],al
 100aeb8:	xchg   esp,eax
 100aeb9:	mov    ebx,0xbb880000
 100aebe:	add    BYTE PTR [eax],al
 100aec0:	jp     0x100ae7d
 100aec2:	add    BYTE PTR [eax],al
 100aec4:	inc    eax
 100aec5:	mov    edx,0xba2c0000
 100aeca:	add    BYTE PTR [eax],al
 100aecc:	sbb    BYTE PTR [edx-0x45fa0000],bh
 100aed2:	add    BYTE PTR [eax],al
 100aed4:	lock mov ecx,0xb9dc0000
 100aeda:	add    BYTE PTR [eax],al
 100aedc:	into   
 100aedd:	mov    ecx,0xb9be0000
 100aee2:	add    BYTE PTR [eax],al
 100aee4:	scas   al,BYTE PTR es:[edi]
 100aee5:	mov    ecx,0xb9a20000
 100aeea:	add    BYTE PTR [eax],al
 100aeec:	xchg   esi,eax
 100aeed:	mov    ecx,0xb9880000
 100aef2:	add    BYTE PTR [eax],al
 100aef4:	pop    edx
 100aef5:	mov    dl,0x0
 100aef7:	add    BYTE PTR [eax-0x47],ah
 100aefa:	add    BYTE PTR [eax],al
 100aefc:	push   eax
 100aefd:	mov    ecx,0xb93e0000
 100af02:	add    BYTE PTR [eax],al
 100af04:	sub    bh,BYTE PTR [ecx-0x46e60000]
 100af0a:	add    BYTE PTR [eax],al
 100af0c:	push   cs
 100af0d:	mov    ecx,0xb8fe0000
 100af12:	add    BYTE PTR [eax],al
 100af14:	lock mov eax,0xb8de0000
 100af1a:	add    BYTE PTR [eax],al
 100af1c:	int3   
 100af1d:	mov    eax,0xb8ba0000
 100af22:	add    BYTE PTR [eax],al
 100af24:	stos   BYTE PTR es:[edi],al
 100af25:	mov    eax,0xb8960000
 100af2a:	add    BYTE PTR [eax],al
 100af2c:	cmp    BYTE PTR [eax-0x478c0000],0x0
 100af33:	add    BYTE PTR [esi-0x48],bl
 100af36:	add    BYTE PTR [eax],al
 100af38:	inc    edx
 100af39:	mov    eax,0xb8320000
 100af3e:	add    BYTE PTR [eax],al
 100af40:	and    BYTE PTR [eax-0x47f00000],bh
 100af46:	add    BYTE PTR [eax],al
 100af48:	add    BYTE PTR [eax-0x481a0000],bh
 100af4e:	add    BYTE PTR [eax],al
 100af50:	(bad)  
 100af51:	mov    bh,0x0
 100af53:	add    BYTE PTR [edi+esi*4-0x48580000],bh
 100af5a:	add    BYTE PTR [eax],al
 100af5c:	mov    WORD PTR [edi-0x48840000],?
 100af62:	add    BYTE PTR [eax],al
 100af64:	ins    BYTE PTR es:[edi],dx
 100af65:	mov    bh,0x0
 100af67:	add    BYTE PTR [edx-0x49],bl
 100af6a:	add    BYTE PTR [eax],al
 100af6c:	cmp    al,0xb7
 100af6e:	add    BYTE PTR [eax],al
 100af70:	inc    edx
 100af71:	mov    dl,0x0
 100af73:	add    BYTE PTR [edx],ch
 100af75:	mov    dl,0x0
 100af77:	add    BYTE PTR [esi],cl
 100af79:	mov    dl,0x0
 100af7b:	add    dh,bh
 100af7d:	mov    cl,0x0
 100af7f:	add    al,ch
 100af81:	mov    cl,0x0
 100af83:	add    al,bl
 100af85:	mov    cl,0x0
 100af87:	add    BYTE PTR [edx-0x57ffff4f],bh
 100af8d:	mov    cl,0x0
 100af8f:	add    BYTE PTR [edx-0x7fffff4f],dl
 100af95:	mov    cl,0x0
 100af97:	add    BYTE PTR [eax-0x4f],ch
 100af9a:	add    BYTE PTR [eax],al
 100af9c:	push   eax
 100af9d:	mov    cl,0x0
 100af9f:	add    BYTE PTR [eax-0x47],bh
 100afa2:	add    BYTE PTR [eax],al
 100afa4:	es mov bh,0x0
 100afa7:	add    BYTE PTR [esi+0xbb],ah
 100afad:	add    BYTE PTR [eax],al
 100afaf:	add    dh,dl
 100afb1:	mov    edx,0xbabc0000
 100afb6:	add    BYTE PTR [eax],al
 100afb8:	mov    ds:0xba,al
 100afbd:	add    BYTE PTR [eax],al
 100afbf:	add    dl,cl
 100afc1:	mov    ah,0x0
 100afc3:	add    al,al
 100afc5:	mov    ah,0x0
 100afc7:	add    BYTE PTR [edx-0x6bffff4c],ch
 100afcd:	mov    ah,0x0
 100afcf:	add    BYTE PTR [esi+0x7c0000b4],al
 100afd5:	mov    ah,0x0
 100afd7:	add    ah,dl
 100afd9:	mov    ah,0x0
 100afdb:	add    BYTE PTR [esi-0x4c],ah
 100afde:	add    BYTE PTR [eax],al
 100afe0:	push   esi
 100afe1:	mov    ah,0x0
 100afe3:	add    BYTE PTR [esi-0x4c],al
 100afe6:	add    BYTE PTR [eax],al
 100afe8:	ds mov ah,0x0
 100afeb:	add    BYTE PTR [esi],ch
 100afed:	mov    ah,0x0
 100afef:	add    BYTE PTR [edx],ah
 100aff1:	mov    ah,0x0
 100aff3:	add    BYTE PTR [edx],dl
 100aff5:	mov    ah,0x0
 100aff7:	add    dh,bl
 100aff9:	mov    ah,0x0
 100affb:	add    ah,ch
 100affd:	mov    ah,0x0
 100afff:	add    dh,bh
 100b001:	mov    ah,0x0
 100b003:	add    BYTE PTR [eax],cl
 100b005:	mov    ch,0x0
 100b007:	add    BYTE PTR [eax],dl
 100b009:	mov    ch,0x0
 100b00b:	add    BYTE PTR [esi],bl
 100b00d:	mov    ch,0x0
 100b00f:	add    BYTE PTR [esi],ah
 100b011:	mov    ch,0x0
 100b013:	add    BYTE PTR [eax],dh
 100b015:	mov    ch,0x0
 100b017:	add    BYTE PTR [esi*4-0x4ab60000],bh
 100b01e:	add    BYTE PTR [eax],al
 100b020:	pusha  
 100b021:	mov    ch,0x0
 100b023:	add    BYTE PTR [ebp+esi*4+0x0],dh
 100b027:	add    BYTE PTR [edx+edi*4+0x0],dl
 100b02b:	add    BYTE PTR [edx-0x46],ah
 100b02e:	add    BYTE PTR [eax],al
 100b030:	jb     0x100afec
 100b032:	add    BYTE PTR [eax],al
 100b034:	cmp    BYTE PTR [edx-0x456e0000],0x0
 100b03b:	add    BYTE PTR [eax-0x75ffff4b],al
 100b041:	mov    ch,0x0
 100b043:	add    BYTE PTR [edx-0x41ffff4b],ch
 100b049:	mov    ch,0x0
 100b04b:	add    al,cl
 100b04d:	mov    ch,0x0
 100b04f:	add    dh,dl
 100b051:	mov    ch,0x0
 100b053:	add    dh,bl
 100b055:	mov    ch,0x0
 100b057:	add    al,ch
 100b059:	mov    ch,0x0
 100b05b:	add    dh,bh
 100b05d:	mov    ch,0x0
 100b05f:	add    BYTE PTR [eax],bl
 100b061:	mov    dh,0x0
 100b063:	add    BYTE PTR [edx],ch
 100b065:	mov    dh,0x0
 100b067:	add    BYTE PTR [edx],bh
 100b069:	mov    dh,0x0
 100b06b:	add    BYTE PTR [eax-0x4c],dh
 100b06e:	add    BYTE PTR [eax],al
 100b070:	add    BYTE PTR [eax],al
 100b072:	add    BYTE PTR [eax],al
 100b074:	mov    edx,0x4800000
 100b079:	add    BYTE PTR [eax],al
 100b07b:	add    BYTE PTR [esi],0x0
 100b07e:	add    BYTE PTR [eax-0x7ffffff9],al
 100b084:	mov    eax,ds:0xa2800000
 100b089:	add    BYTE PTR [eax],al
 100b08b:	and    BYTE PTR [ebx+0x21800000],0x0
 100b092:	add    BYTE PTR [eax-0x7ffffff1],al
 100b098:	adc    BYTE PTR [eax],al
 100b09a:	add    BYTE PTR [eax-0x7fffffed],al
 100b0a0:	adc    al,0x0
 100b0a2:	add    BYTE PTR [eax-0x7fffffeb],al
 100b0a8:	sbb    BYTE PTR [eax],al
 100b0aa:	add    BYTE PTR [eax-0x7fffffe9],al
 100b0b0:	push   ss
 100b0b1:	add    BYTE PTR [eax],al
 100b0b3:	add    BYTE PTR [eax],0x0
 100b0b6:	add    BYTE PTR [eax],al
 100b0b8:	pop    eax
 100b0b9:	mov    ebx,0xbb420000
 100b0be:	add    BYTE PTR [eax],al
 100b0c0:	add    BYTE PTR [eax],al
 100b0c2:	add    BYTE PTR [eax],al
 100b0c4:	fidiv  WORD PTR [ebx-0x4c380000]
 100b0ca:	add    BYTE PTR [eax],al
 100b0cc:	in     al,dx
 100b0cd:	mov    bl,0x0
 100b0cf:	add    BYTE PTR [eax-0x4bffff4d],ah
 100b0d5:	mov    bl,0x0
 100b0d7:	add    al,bh
 100b0d9:	mov    bl,0x0
 100b0db:	add    BYTE PTR [edx+0xb3],dl
 100b0e1:	add    BYTE PTR [eax],al
 100b0e3:	add    BYTE PTR [esi],cl
 100b0e5:	mov    ebx,0xbb240000
 100b0ea:	add    BYTE PTR [eax],al
 100b0ec:	add    BYTE PTR [eax],al
 100b0ee:	add    BYTE PTR [eax],al
 100b0f0:	mov    al,ds:0xb80000b6
 100b0f5:	mov    dh,0x0
 100b0f7:	add    al,dl
 100b0f9:	mov    dh,0x0
 100b0fb:	add    dl,ch
 100b0fd:	mov    dh,0x0
 100b0ff:	add    dh,bh
 100b101:	mov    dh,0x0
 100b103:	add    BYTE PTR [esi+esi*4+0x0],bh
 100b107:	add    BYTE PTR [esi+0xb6],cl
 100b10d:	add    BYTE PTR [eax],al
 100b10f:	add    BYTE PTR [eax],dh
 100b111:	add    dl,BYTE PTR [edx+0x65]
 100b114:	addr16 inc ebx
 100b116:	ins    BYTE PTR es:[edi],dx
 100b117:	outs   dx,DWORD PTR ds:[esi]
 100b118:	jae    0x100b17f
 100b11a:	dec    ebx
 100b11b:	gs jns 0x100b11e
 100b11e:	popa   
 100b11f:	add    dl,BYTE PTR [edx+0x65]
 100b122:	addr16 dec edi
 100b124:	jo     0x100b18b
 100b126:	outs   dx,BYTE PTR ds:[esi]
 100b127:	dec    ebx
 100b128:	gs jns 0x100b170
 100b12b:	js     0x100b184
 100b12d:	add    BYTE PTR [esi+0x2],ch
 100b130:	push   edx
 100b131:	gs addr16 push ecx
 100b134:	jne    0x100b19b
 100b136:	jb     0x100b1b1
 100b138:	push   esi
 100b139:	popa   
 100b13a:	ins    BYTE PTR es:[edi],dx
 100b13b:	jne    0x100b1a2
 100b13d:	inc    ebp
 100b13e:	js     0x100b197
 100b140:	add    BYTE PTR [eax],al
 100b142:	inc    ecx
 100b143:	inc    esp
 100b144:	push   esi
 100b145:	inc    ecx
 100b146:	push   eax
 100b147:	dec    ecx
 100b148:	xor    esi,DWORD PTR [edx]
 100b14a:	cs fs ins BYTE PTR es:[edi],dx
 100b14d:	ins    BYTE PTR es:[edi],dx
 100b14e:	add    BYTE PTR [eax],al
 100b150:	out    dx,eax
 100b151:	add    cl,BYTE PTR [ecx+0x6e]
 100b154:	je     0x100b1bb
 100b156:	jb     0x100b1c4
 100b158:	outs   dx,DWORD PTR ds:[esi]
 100b159:	arpl   WORD PTR [ebx+0x65],bp
 100b15c:	fs dec ecx
 100b15e:	outs   dx,BYTE PTR ds:[esi]
 100b15f:	arpl   WORD PTR [edx+0x65],si
 100b162:	ins    DWORD PTR es:[edi],dx
 100b163:	outs   dx,BYTE PTR gs:[esi]
 100b165:	je     0x100b167
 100b167:	add    bl,ch
 100b169:	add    cl,BYTE PTR [ecx+0x6e]
 100b16c:	je     0x100b1d3
 100b16e:	jb     0x100b1dc
 100b170:	outs   dx,DWORD PTR ds:[esi]
 100b171:	arpl   WORD PTR [ebx+0x65],bp
 100b174:	fs inc esp
 100b176:	arpl   WORD PTR gs:[edx+0x65],si
 100b17a:	ins    DWORD PTR es:[edi],dx
 100b17b:	outs   dx,BYTE PTR gs:[esi]
 100b17d:	je     0x100b17f
 100b17f:	add    BYTE PTR [ebp+0x2],al
 100b182:	inc    edi
 100b183:	gs je  0x100b1d6
 100b186:	jb     0x100b1f7
 100b188:	arpl   WORD PTR [ecx+0x64],ax
 100b18b:	fs jb  0x100b1f3
 100b18e:	jae    0x100b203
 100b190:	add    BYTE PTR [eax],al
 100b192:	rol    DWORD PTR [edx],cl
 100b194:	dec    eax
 100b195:	gs popa 
 100b197:	jo     0x100b1ec
 100b199:	gs je  0x100b1e5
 100b19c:	outs   dx,BYTE PTR ds:[esi]
 100b19d:	outs   dx,WORD PTR ds:[esi]
 100b19f:	jb     0x100b20e
 100b1a1:	popa   
 100b1a2:	je     0x100b20d
 100b1a4:	outs   dx,DWORD PTR ds:[esi]
 100b1a5:	outs   dx,BYTE PTR ds:[esi]
 100b1a6:	add    BYTE PTR [eax],al
 100b1a8:	mov    cl,0x3
 100b1aa:	push   edx
 100b1ab:	popa   
 100b1ac:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
 100b1b3:	jo     0x100b229
 100b1b5:	imul   ebp,DWORD PTR [edi+0x6e],0x4a50000
 100b1bc:	push   ebx
 100b1bd:	gs je  0x100b215
 100b1c0:	outs   dx,BYTE PTR ds:[esi]
 100b1c1:	push   0x6c646e61
 100b1c6:	gs fs inc ebp
 100b1c9:	js     0x100b22e
 100b1cb:	gs jo  0x100b242
 100b1ce:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 100b1d5:	gs jb  0x100b1d8
 100b1d8:	mov    ch,0x0
 100b1da:	inc    ebx
 100b1db:	jb     0x100b242
 100b1dd:	popa   
 100b1de:	je     0x100b245
 100b1e0:	push   esp
 100b1e1:	push   0x64616572
 100b1e6:	add    BYTE PTR [eax],al
 100b1e8:	lds    eax,FWORD PTR [ecx]
 100b1ea:	inc    edi
 100b1eb:	gs je  0x100b231
 100b1ee:	jne    0x100b262
 100b1f0:	jb     0x100b257
 100b1f2:	outs   dx,BYTE PTR ds:[esi]
 100b1f3:	je     0x100b249
 100b1f5:	push   0x64616572
 100b1fa:	dec    ecx
 100b1fb:	add    BYTE PTR fs:[eax],al
 100b1fe:	add    al,BYTE PTR [edx]
 100b200:	inc    edi
 100b201:	gs je  0x100b250
 100b204:	popa   
 100b205:	jae    0x100b27b
 100b207:	inc    ebp
 100b208:	jb     0x100b27c
 100b20a:	outs   dx,DWORD PTR ds:[esi]
 100b20b:	jb     0x100b20d
 100b20d:	add    dl,ah
 100b20f:	add    cl,BYTE PTR [ecx+0x6e]
 100b212:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 100b21a:	inc    ebx
 100b21b:	jb     0x100b286
 100b21d:	je     0x100b288
 100b21f:	arpl   WORD PTR [ecx+0x6c],sp
 100b222:	push   ebx
 100b223:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 100b228:	outs   dx,BYTE PTR ds:[esi]
 100b229:	add    dh,ch
 100b22b:	add    BYTE PTR [ebp+0x6e],al
 100b22e:	je     0x100b295
 100b230:	jb     0x100b275
 100b232:	jb     0x100b29d
 100b234:	je     0x100b29f
 100b236:	arpl   WORD PTR [ecx+0x6c],sp
 100b239:	push   ebx
 100b23a:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 100b23f:	outs   dx,BYTE PTR ds:[esi]
 100b240:	add    BYTE PTR [eax],al
 100b242:	cmp    DWORD PTR [ebx],eax
 100b244:	dec    esp
 100b245:	gs popa 
 100b247:	jbe    0x100b2ae
 100b249:	inc    ebx
 100b24a:	jb     0x100b2b5
 100b24c:	je     0x100b2b7
 100b24e:	arpl   WORD PTR [ecx+0x6c],sp
 100b251:	push   ebx
 100b252:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 100b257:	outs   dx,BYTE PTR ds:[esi]
 100b258:	add    BYTE PTR [eax],al
 100b25a:	jecxz  0x100b25e
 100b25c:	dec    ecx
 100b25d:	outs   dx,BYTE PTR ds:[esi]
 100b25e:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 100b266:	inc    ebx
 100b267:	jb     0x100b2d2
 100b269:	je     0x100b2d4
 100b26b:	arpl   WORD PTR [ecx+0x6c],sp
 100b26e:	push   ebx
 100b26f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 100b274:	outs   dx,BYTE PTR ds:[esi]
 100b275:	inc    ecx
 100b276:	outs   dx,BYTE PTR ds:[esi]
 100b277:	fs push ebx
 100b279:	jo     0x100b2e4
 100b27b:	outs   dx,BYTE PTR ds:[esi]
 100b27c:	inc    ebx
 100b27d:	outs   dx,DWORD PTR ds:[esi]
 100b27e:	jne    0x100b2ee
 100b280:	je     0x100b282
 100b282:	rol    DWORD PTR [eax],1
 100b284:	inc    esp
 100b285:	gs ins BYTE PTR es:[edi],dx
 100b287:	gs je  0x100b2ef
 100b28a:	inc    ebx
 100b28b:	jb     0x100b2f6
 100b28d:	je     0x100b2f8
 100b28f:	arpl   WORD PTR [ecx+0x6c],sp
 100b292:	push   ebx
 100b293:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 100b298:	outs   dx,BYTE PTR ds:[esi]
 100b299:	add    BYTE PTR [ecx+0x4],bl
 100b29c:	push   ebx
 100b29d:	gs je  0x100b2e5
 100b2a0:	jbe    0x100b307
 100b2a2:	outs   dx,BYTE PTR ds:[esi]
 100b2a3:	je     0x100b2a5
 100b2a5:	add    cl,bh
 100b2a7:	add    al,0x57
 100b2a9:	popa   
 100b2aa:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
 100b2b2:	ins    BYTE PTR es:[di],dx
 100b2b4:	gs dec edi
 100b2b6:	bound  ebp,QWORD PTR [edx+0x65]
 100b2b9:	arpl   WORD PTR [eax+eax*1-0x4e],si
 100b2bd:	add    al,0x53
 100b2bf:	ins    BYTE PTR es:[edi],dx
 100b2c0:	gs gs jo 0x100b2c4
 100b2c4:	push   edx
 100b2c5:	add    BYTE PTR [ebx+0x6c],al
 100b2c8:	outs   dx,DWORD PTR ds:[esi]
 100b2c9:	jae    0x100b330
 100b2cb:	dec    eax
 100b2cc:	popa   
 100b2cd:	outs   dx,BYTE PTR ds:[esi]
 100b2ce:	fs ins BYTE PTR es:[edi],dx
 100b2d0:	add    BYTE PTR gs:[esi+0x5],cl
 100b2d4:	ins    BYTE PTR es:[edi],dx
 100b2d5:	jae    0x100b34b
 100b2d7:	jb     0x100b345
 100b2d9:	outs   dx,BYTE PTR gs:[esi]
 100b2db:	push   edi
 100b2dc:	add    BYTE PTR [eax],al
 100b2de:	test   DWORD PTR [eax],eax
 100b2e0:	inc    ebx
 100b2e1:	jb     0x100b348
 100b2e3:	popa   
 100b2e4:	je     0x100b34b
 100b2e6:	inc    ebp
 100b2e7:	jbe    0x100b34e
 100b2e9:	outs   dx,BYTE PTR ds:[esi]
 100b2ea:	je     0x100b343
 100b2ec:	add    BYTE PTR [eax],al
 100b2ee:	adc    al,0x2
 100b2f0:	inc    edi
 100b2f1:	gs je  0x100b341
 100b2f4:	outs   dx,DWORD PTR ds:[esi]
 100b2f5:	fs jne 0x100b364
 100b2f8:	gs inc esi
 100b2fa:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
 100b302:	add    BYTE PTR [eax],al
 100b304:	sbb    BYTE PTR [edx],al
 100b306:	inc    edi
 100b307:	gs je  0x100b357
 100b30a:	outs   dx,DWORD PTR ds:[esi]
 100b30b:	fs jne 0x100b37a
 100b30e:	gs dec eax
 100b310:	popa   
 100b311:	outs   dx,BYTE PTR ds:[esi]
 100b312:	fs ins BYTE PTR es:[edi],dx
 100b314:	gs push edi
 100b316:	add    BYTE PTR [eax],al
 100b318:	xchg   DWORD PTR [ecx],eax
 100b31a:	inc    edi
 100b31b:	gs je  0x100b361
 100b31e:	outs   dx,DWORD PTR ds:[esi]
 100b31f:	ins    DWORD PTR es:[edi],dx
 100b320:	ins    DWORD PTR es:[edi],dx
 100b321:	popa   
 100b322:	outs   dx,BYTE PTR ds:[esi]
 100b323:	fs dec esp
 100b325:	imul   ebp,DWORD PTR [esi+0x65],0x8f0057
 100b32c:	inc    ebx
 100b32d:	jb     0x100b394
 100b32f:	popa   
 100b330:	je     0x100b397
 100b332:	inc    esi
 100b333:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701c000
 100b33b:	gs je  0x100b381
 100b33e:	jne    0x100b3b2
 100b340:	jb     0x100b3a7
 100b342:	outs   dx,BYTE PTR ds:[esi]
 100b343:	je     0x100b395
 100b345:	jb     0x100b3b6
 100b347:	arpl   WORD PTR [ebp+0x73],sp
 100b34a:	jae    0x100b34c
 100b34c:	rol    DWORD PTR [ecx],0x47
 100b34f:	gs je  0x100b395
 100b352:	jne    0x100b3c6
 100b354:	jb     0x100b3bb
 100b356:	outs   dx,BYTE PTR ds:[esi]
 100b357:	je     0x100b3a9
 100b359:	jb     0x100b3ca
 100b35b:	arpl   WORD PTR [ebp+0x73],sp
 100b35e:	jae    0x100b3a9
 100b360:	add    BYTE PTR fs:[ecx],bl
 100b363:	add    DWORD PTR [ebp+0x78],eax
 100b366:	imul   esi,DWORD PTR [eax+edx*2+0x72],0x7365636f
 100b36e:	jae    0x100b370
 100b370:	rol    BYTE PTR [esp+edx*2],0x65
 100b374:	jb     0x100b3e3
 100b376:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
 100b37d:	outs   dx,DWORD PTR ds:[esi]
 100b37e:	arpl   WORD PTR [ebp+0x73],sp
 100b381:	jae    0x100b383
 100b383:	add    BYTE PTR [ebx+0x45],cl
 100b386:	push   edx
 100b387:	dec    esi
 100b388:	inc    ebp
 100b389:	dec    esp
 100b38a:	xor    esi,DWORD PTR [edx]
 100b38c:	cs fs ins BYTE PTR es:[edi],dx
 100b38f:	ins    BYTE PTR es:[edi],dx
 100b390:	add    BYTE PTR [eax],al
 100b392:	pop    esi
 100b393:	add    DWORD PTR [edi+0x65],eax
 100b396:	je     0x100b3e5
 100b398:	gs jae 0x100b40e
 100b39b:	popa   
 100b39c:	addr16 gs push edi
 100b39f:	add    BYTE PTR [ecx],al
 100b3a1:	add    edx,DWORD PTR [edx+esi*2+0x61]
 100b3a5:	outs   dx,BYTE PTR ds:[esi]
 100b3a6:	jae    0x100b414
 100b3a8:	popa   
 100b3a9:	je     0x100b410
 100b3ab:	dec    ebp
 100b3ac:	gs jae 0x100b422
 100b3af:	popa   
 100b3b0:	add    BYTE PTR gs:[bx+si],al
 100b3b4:	scas   eax,DWORD PTR es:[edi]
 100b3b5:	add    BYTE PTR [ecx+ebp*2+0x73],al
 100b3b9:	jo     0x100b41c
 100b3bb:	je     0x100b420
 100b3bd:	push   0x7373654d
 100b3c2:	popa   
 100b3c3:	addr16 gs push edi
 100b3c6:	add    BYTE PTR [eax],al
 100b3c8:	cmp    al,0x2
 100b3ca:	push   eax
 100b3cb:	outs   dx,DWORD PTR ds:[esi]
 100b3cc:	jae    0x100b442
 100b3ce:	push   esp
 100b3cf:	push   0x64616572
 100b3d4:	dec    ebp
 100b3d5:	gs jae 0x100b44b
 100b3d8:	popa   
 100b3d9:	addr16 gs push edi
 100b3dc:	add    BYTE PTR [eax],al
 100b3de:	cmp    al,0x0
 100b3e0:	inc    ebx
 100b3e1:	push   0x70557261
 100b3e6:	jo     0x100b44d
 100b3e8:	jb     0x100b441
 100b3ea:	add    BYTE PTR [eax],al
 100b3ec:	xor    DWORD PTR [eax],eax
 100b3ee:	inc    ebx
 100b3ef:	push   0x654e7261
 100b3f4:	js     0x100b46a
 100b3f6:	push   edi
 100b3f7:	add    BYTE PTR [edi],dl
 100b3f9:	add    cl,BYTE PTR [ebp+0x65]
 100b3fc:	jae    0x100b471
 100b3fe:	popa   
 100b3ff:	addr16 gs inc edx
 100b402:	outs   dx,DWORD PTR ds:[esi]
 100b403:	js     0x100b45c
 100b405:	add    BYTE PTR [ebp+0x53],dl
 100b408:	inc    ebp
 100b409:	push   edx
 100b40a:	xor    esi,DWORD PTR [edx]
 100b40c:	cs fs ins BYTE PTR es:[edi],dx
 100b40f:	ins    BYTE PTR es:[edi],dx
 100b410:	add    BYTE PTR [eax],al
 100b412:	add    BYTE PTR gs:[edi],bh
 100b415:	aas    
 100b416:	xor    eax,DWORD PTR [eax+0x59]
 100b419:	inc    ecx
 100b41a:	pop    eax
 100b41b:	push   eax
 100b41c:	inc    ecx
 100b41d:	pop    eax
 100b41e:	inc    eax
 100b41f:	pop    edx
 100b420:	add    BYTE PTR [eax],al
 100b422:	fadd   DWORD PTR [ebx]
 100b424:	pop    edi
 100b425:	jo     0x100b49c
 100b427:	jb     0x100b48e
 100b429:	arpl   WORD PTR [ecx+0x6c],sp
 100b42c:	ins    BYTE PTR es:[edi],dx
 100b42d:	add    BYTE PTR [ebx+0x0],ah
 100b430:	aas    
 100b431:	aas    
 100b432:	xor    al,BYTE PTR [eax+0x59]
 100b435:	inc    ecx
 100b436:	push   eax
 100b437:	inc    ecx
 100b438:	pop    eax
 100b439:	dec    ecx
 100b43a:	inc    eax
 100b43b:	pop    edx
 100b43c:	add    BYTE PTR [eax],al
 100b43e:	mov    eax,DWORD PTR ds:0x65657266
 100b444:	add    BYTE PTR [eax],al
 100b446:	js     0x100b448
 100b448:	aas    
 100b449:	aas    
 100b44a:	pop    edi
 100b44b:	push   ebp
 100b44c:	inc    eax
 100b44d:	pop    ecx
 100b44e:	inc    ecx
 100b44f:	push   eax
 100b450:	inc    ecx
 100b451:	pop    eax
 100b452:	dec    ecx
 100b453:	inc    eax
 100b454:	pop    edx
 100b455:	add    BYTE PTR [edx+0x0],bh
 100b458:	aas    
 100b459:	aas    
 100b45a:	pop    edi
 100b45b:	push   esi
 100b45c:	inc    eax
 100b45d:	pop    ecx
 100b45e:	inc    ecx
 100b45f:	pop    eax
 100b460:	push   eax
 100b461:	inc    ecx
 100b462:	pop    eax
 100b463:	inc    eax
 100b464:	pop    edx
 100b465:	add    BYTE PTR [edx],bh
 100b467:	push   es
 100b468:	ja     0x100b4cd
 100b46a:	jae    0x100b4da
 100b46c:	arpl   WORD PTR [ebp+0x70],bp
 100b46f:	add    BYTE PTR [esi+eax*1],bh
 100b472:	ja     0x100b4d7
 100b474:	jae    0x100b4e4
 100b476:	arpl   WORD PTR [eax+0x79],si
 100b479:	pop    edi
 100b47a:	jae    0x100b47c
 100b47c:	inc    ebx
 100b47d:	push   es
 100b47e:	ja     0x100b4e3
 100b480:	jae    0x100b4f5
 100b482:	je     0x100b4f6
 100b484:	add    BYTE PTR [eax],al
 100b486:	adc    DWORD PTR [esi],eax
 100b488:	jae    0x100b501
 100b48a:	jo     0x100b4fe
 100b48c:	imul   ebp,DWORD PTR [esi+0x74],0x735f66
 100b493:	add    BYTE PTR [ecx],ah
 100b495:	add    DWORD PTR [edi+0x43],ebx
 100b498:	js     0x100b512
 100b49a:	push   esp
 100b49b:	push   0x45776f72
 100b4a0:	js     0x100b505
 100b4a2:	gs jo  0x100b519
 100b4a5:	imul   ebp,DWORD PTR [edi+0x6e],0x13a0000
 100b4ac:	pop    edi
 100b4ad:	pop    edi
 100b4ae:	inc    ebx
 100b4af:	js     0x100b529
 100b4b1:	inc    esi
 100b4b2:	jb     0x100b515
 100b4b4:	ins    DWORD PTR es:[edi],dx
 100b4b5:	gs dec eax
 100b4b7:	popa   
 100b4b8:	outs   dx,BYTE PTR ds:[esi]
 100b4b9:	fs ins BYTE PTR es:[edi],dx
 100b4bb:	gs jb  0x100b4f1
 100b4be:	add    BYTE PTR [eax],al
 100b4c0:	into   
 100b4c1:	add    eax,0x636d656d
 100b4c6:	ins    DWORD PTR es:[edi],dx
 100b4c7:	jo     0x100b4c9
 100b4c9:	add    bl,dl
 100b4cb:	add    eax,0x736d656d
 100b4d0:	gs je  0x100b4d3
 100b4d3:	add    bh,cl
 100b4d5:	add    eax,0x636d656d
 100b4da:	jo     0x100b555
 100b4dc:	add    BYTE PTR [eax],al
 100b4de:	lds    eax,FWORD PTR [ecx]
 100b4e0:	pop    edi
 100b4e1:	popa   
 100b4e2:	ins    DWORD PTR es:[edi],dx
 100b4e3:	jae    0x100b54c
 100b4e5:	pop    edi
 100b4e6:	gs js  0x100b552
 100b4e9:	je     0x100b4eb
 100b4eb:	add    BYTE PTR [esi+0x775f5f01],dh
 100b4f1:	addr16 gs je 0x100b562
 100b4f5:	popa   
 100b4f6:	imul   ebp,DWORD PTR [esi+0x61],0x736772
 100b4fd:	add    ah,bl
 100b4ff:	add    DWORD PTR [edi+0x63],ebx
 100b502:	gs js  0x100b56e
 100b505:	je     0x100b507
 100b507:	add    BYTE PTR [edx],ch
 100b509:	add    bl,BYTE PTR [edi+0x65]
 100b50c:	js     0x100b577
 100b50e:	je     0x100b510
 100b510:	sub    eax,0x63585f01
 100b515:	jo     0x100b58b
 100b517:	inc    esi
 100b518:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x5730072
 100b520:	gs js  0x100b58c
 100b523:	je     0x100b525
 100b525:	add    cl,dl
 100b527:	add    al,0x5f
 100b529:	ja     0x100b58e
 100b52b:	ins    DWORD PTR es:[edi],dx
 100b52c:	fs ins BYTE PTR es:[edi],dx
 100b52e:	outs   dx,BYTE PTR ds:[esi]
 100b52f:	add    BYTE PTR [eax+0x6e695f02],dh
 100b535:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xb1006d72
 100b53d:	add    bl,BYTE PTR [edi+0x69]
 100b540:	outs   dx,BYTE PTR ds:[esi]
 100b541:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x655f6d72
 100b549:	add    ah,ch
 100b54b:	add    DWORD PTR [edi+0x63],ebx
 100b54e:	outs   dx,DWORD PTR ds:[esi]
 100b54f:	outs   dx,BYTE PTR ds:[esi]
 100b550:	imul   sp,WORD PTR [edi+0x74],0x7268
 100b556:	gs popa 
 100b558:	fs ins BYTE PTR es:[edi],dx
 100b55a:	outs   dx,DWORD PTR ds:[esi]
 100b55b:	arpl   WORD PTR [ecx+0x6c],sp
 100b55e:	add    BYTE PTR gs:[edx+0x735f5f01],ah
 100b565:	gs je  0x100b5dd
 100b568:	jae    0x100b5cf
 100b56a:	jb     0x100b5d9
 100b56c:	popa   
 100b56d:	je     0x100b5d7
 100b56f:	gs jb  0x100b5e4
 100b572:	add    BYTE PTR [eax],al
 100b574:	jmp    0x100b577
 100b576:	pop    edi
 100b577:	arpl   WORD PTR [edi+0x6d],bp
 100b57a:	ins    DWORD PTR es:[edi],dx
 100b57b:	outs   dx,DWORD PTR ds:[esi]
 100b57c:	fs add BYTE PTR gs:[eax],al
 100b580:	inc    ebp
 100b581:	add    bl,BYTE PTR [edi+0x66]
 100b584:	ins    DWORD PTR es:[edi],dx
 100b585:	outs   dx,DWORD PTR ds:[esi]
 100b586:	fs add BYTE PTR gs:[eax],al
 100b58a:	lahf   
 100b58b:	add    DWORD PTR [edi+0x5f],ebx
 100b58e:	jae    0x100b5f5
 100b590:	je     0x100b5f1
 100b592:	popa   
 100b593:	jo     0x100b605
 100b595:	pop    edi
 100b596:	je     0x100b611
 100b598:	jo     0x100b5ff
 100b59a:	add    BYTE PTR [eax],al
 100b59c:	dec    ebp
 100b59d:	push   ebx
 100b59e:	push   esi
 100b59f:	inc    ebx
 100b5a0:	push   edx
 100b5a1:	xor    DWORD PTR [eax],esi
 100b5a3:	xor    BYTE PTR [esi],ch
 100b5a5:	fs ins BYTE PTR es:[edi],dx
 100b5a7:	ins    BYTE PTR es:[edi],dx
 100b5a8:	add    BYTE PTR [eax],al
 100b5aa:	add    al,BYTE PTR [ecx]
 100b5ac:	aas    
 100b5ad:	je     0x100b614
 100b5af:	jb     0x100b61e
 100b5b1:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
 100b5b8:	pop    ecx
 100b5b9:	inc    ecx
 100b5ba:	pop    eax
 100b5bb:	pop    eax
 100b5bc:	pop    edx
 100b5bd:	add    BYTE PTR [ebp+0x6e755f04],cl
 100b5c3:	ins    BYTE PTR es:[edi],dx
 100b5c4:	outs   dx,DWORD PTR ds:[esi]
 100b5c5:	arpl   WORD PTR [ebx+0x0],bp
 100b5c8:	pop    ebx
 100b5c9:	add    DWORD PTR [edi+0x5f],ebx
 100b5cc:	fs ins BYTE PTR es:[edi],dx
 100b5ce:	ins    BYTE PTR es:[edi],dx
 100b5cf:	outs   dx,DWORD PTR ds:[esi]
 100b5d0:	outs   dx,BYTE PTR ds:[esi]
 100b5d1:	gs js  0x100b63d
 100b5d4:	je     0x100b5d6
 100b5d6:	and    eax,DWORD PTR [ebx]
 100b5d8:	pop    edi
 100b5d9:	ins    BYTE PTR es:[edi],dx
 100b5da:	outs   dx,DWORD PTR ds:[esi]
 100b5db:	arpl   WORD PTR [ebx+0x0],bp
 100b5de:	leave  
 100b5df:	add    ebx,DWORD PTR [edi+0x6f]
 100b5e2:	outs   dx,BYTE PTR ds:[esi]
 100b5e3:	gs js  0x100b64f
 100b5e6:	je     0x100b5e8
 100b5e8:	sti    
 100b5e9:	add    DWORD PTR [edi+0x63],ebx
 100b5ec:	jb     0x100b662
 100b5ee:	pop    edi
 100b5ef:	fs bound esi,QWORD PTR gs:[ebp+0x67]
 100b5f4:	addr16 gs jb 0x100b657
 100b5f8:	push   0x6b6f6f
 100b5fd:	add    BYTE PTR [ecx],ah
 100b5ff:	add    bl,BYTE PTR [edi+0x65]
 100b602:	js     0x100b667
 100b604:	gs jo  0x100b67b
 100b607:	pop    edi
 100b608:	push   0x6c646e61
 100b60d:	gs jb  0x100b644
 100b610:	pop    edi
 100b611:	arpl   WORD PTR [edi+0x6d],bp
 100b614:	ins    DWORD PTR es:[edi],dx
 100b615:	outs   dx,DWORD PTR ds:[esi]
 100b616:	outs   dx,BYTE PTR ds:[esi]
 100b617:	add    BYTE PTR [eax+0x6e695f02],bh
 100b61d:	jbe    0x100b68e
 100b61f:	imul   esp,DWORD PTR [ebp+0x5f],0x77
 100b623:	popa   
 100b624:	je     0x100b699
 100b626:	outs   dx,DWORD PTR ds:[esi]
 100b627:	outs   dx,BYTE PTR ds:[esi]
 100b628:	add    BYTE PTR [eax],al
 100b62a:	out    dx,eax
 100b62b:	add    DWORD PTR [edi+0x63],ebx
 100b62e:	outs   dx,DWORD PTR ds:[esi]
 100b62f:	outs   dx,BYTE PTR ds:[esi]
 100b630:	je     0x100b6a4
 100b632:	outs   dx,DWORD PTR ds:[esi]
 100b633:	ins    BYTE PTR es:[edi],dx
 100b634:	data16 jo 0x100b696
 100b637:	jae    0x100b639
 100b639:	add    dh,ch
 100b63b:	add    BYTE PTR [edi],bh
 100b63d:	pop    edi
 100b63e:	je     0x100b6b9
 100b640:	jo     0x100b6a7
 100b642:	pop    edi
 100b643:	imul   ebp,DWORD PTR [esi+0x66],0x74645f6f
 100b64a:	outs   dx,DWORD PTR ds:[esi]
 100b64b:	jb     0x100b6ac
 100b64d:	imul   ebp,DWORD PTR [esi+0x74],0x616e7265
 100b654:	ins    BYTE PTR es:[edi],dx
 100b655:	pop    edi
 100b656:	ins    DWORD PTR es:[edi],dx
 100b657:	gs je  0x100b6c2
 100b65a:	outs   dx,DWORD PTR ds:[esi]
 100b65b:	fs inc eax
 100b65d:	je     0x100b6d8
 100b65f:	jo     0x100b6c6
 100b661:	pop    edi
 100b662:	imul   ebp,DWORD PTR [esi+0x66],0x5140406f
 100b669:	inc    ecx
 100b66a:	inc    ebp
 100b66b:	pop    eax
 100b66c:	pop    eax
 100b66d:	pop    edx
 100b66e:	add    BYTE PTR [eax],al
 100b670:	inc    ecx
 100b671:	push   esp
 100b672:	dec    esp
 100b673:	xor    DWORD PTR [eax],esi
 100b675:	xor    BYTE PTR [esi],ch
 100b677:	inc    esp
 100b678:	dec    esp
 100b679:	dec    esp
 100b67a:	add    BYTE PTR [eax],al
 100b67c:	ins    BYTE PTR es:[edi],dx
 100b67d:	add    BYTE PTR [ebx+0x6f],al
 100b680:	push   ebp
 100b681:	outs   dx,BYTE PTR ds:[esi]
 100b682:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
 100b689:	imul   edi,DWORD PTR [edx+0x65],0x3f0000
 100b690:	inc    ebx
 100b691:	outs   dx,DWORD PTR ds:[esi]
 100b692:	dec    ecx
 100b693:	outs   dx,BYTE PTR ds:[esi]
 100b694:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 100b69c:	inc    ebp
 100b69d:	js     0x100b69f
 100b69f:	add    BYTE PTR [eax+eax*1+0x43],bl
 100b6a3:	outs   dx,DWORD PTR ds:[esi]
 100b6a4:	push   edx
 100b6a5:	gs jae 0x100b71d
 100b6a8:	ins    DWORD PTR es:[edi],dx
 100b6a9:	gs inc ebx
 100b6ab:	ins    BYTE PTR es:[edi],dx
 100b6ac:	popa   
 100b6ad:	jae    0x100b722
 100b6af:	dec    edi
 100b6b0:	bound  ebp,QWORD PTR [edx+0x65]
 100b6b3:	arpl   WORD PTR [ebx+esi*2+0x0],si
 100b6b7:	add    BYTE PTR [ecx],cl
 100b6b9:	add    BYTE PTR [ebx+0x6f],al
 100b6bc:	inc    ecx
 100b6bd:	fs fs push edx
 100b6c0:	gs push bx
 100b6c3:	gs jb  0x100b73c
 100b6c6:	gs jb  0x100b719
 100b6c9:	jb     0x100b73a
 100b6cb:	arpl   WORD PTR [ebp+0x73],sp
 100b6ce:	jae    0x100b6d0
 100b6d0:	pop    ebx
 100b6d1:	add    BYTE PTR [ebx+0x6f],al
 100b6d4:	push   edx
 100b6d5:	gs ins BYTE PTR es:[edi],dx
 100b6d7:	gs popa 
 100b6d9:	jae    0x100b740
 100b6db:	push   ebx
 100b6dc:	gs jb  0x100b755
 100b6df:	gs jb  0x100b732
 100b6e2:	jb     0x100b753
 100b6e4:	arpl   WORD PTR [ebp+0x73],sp
 100b6e7:	jae    0x100b6e9
 100b6e9:	add    BYTE PTR [eax],dl
 100b6eb:	add    BYTE PTR [ebx+0x6f],al
 100b6ee:	inc    ebx
 100b6ef:	jb     0x100b756
 100b6f1:	popa   
 100b6f2:	je     0x100b759
 100b6f4:	dec    ecx
 100b6f5:	outs   dx,BYTE PTR ds:[esi]
 100b6f6:	jae    0x100b76c
 100b6f8:	popa   
 100b6f9:	outs   dx,BYTE PTR ds:[esi]
 100b6fa:	arpl   WORD PTR [ebp+0x0],sp
 100b6fd:	add    ch,cl
 100b6ff:	add    BYTE PTR [ecx+0x49],cl
 100b702:	inc    esp
 100b703:	inc    esi
 100b704:	jb     0x100b775
 100b706:	ins    DWORD PTR es:[edi],dx
 100b707:	push   ebx
 100b708:	je     0x100b77c
 100b70a:	imul   ebp,DWORD PTR [esi+0x67],0x656c6f00
 100b711:	xor    esi,DWORD PTR [edx]
 100b713:	cs fs ins BYTE PTR es:[edi],dx
 100b716:	ins    BYTE PTR es:[edi],dx
 100b717:	add    BYTE PTR [edi+0x4c],cl
 100b71a:	inc    ebp
 100b71b:	inc    ecx
 100b71c:	push   ebp
 100b71d:	push   esp
 100b71e:	xor    esi,DWORD PTR [edx]
 100b720:	cs fs ins BYTE PTR es:[edi],dx
 100b723:	ins    BYTE PTR es:[edi],dx
 100b724:	add    BYTE PTR [eax],al
 100b726:	in     al,dx
 100b727:	add    cl,BYTE PTR [ecx+0x6e]
 100b72a:	je     0x100b791
 100b72c:	jb     0x100b79a
 100b72e:	outs   dx,DWORD PTR ds:[esi]
 100b72f:	arpl   WORD PTR [ebx+0x65],bp
 100b732:	fs inc ebp
 100b734:	js     0x100b799
 100b736:	push   0x65676e61
 100b73b:	add    cl,ch
 100b73d:	add    cl,BYTE PTR [ecx+0x6e]
 100b740:	je     0x100b7a7
 100b742:	jb     0x100b7b0
 100b744:	outs   dx,DWORD PTR ds:[esi]
 100b745:	arpl   WORD PTR [ebx+0x65],bp
 100b748:	fs inc ebx
 100b74a:	outs   dx,DWORD PTR ds:[esi]
 100b74b:	ins    DWORD PTR es:[edi],dx
 100b74c:	jo     0x100b7af
 100b74e:	jb     0x100b7b5
 100b750:	inc    ebp
 100b751:	js     0x100b7b6
 100b753:	push   0x65676e61
 100b758:	add    BYTE PTR [eax],al
 100b75a:	arpl   WORD PTR [edx],ax
 100b75c:	inc    edi
 100b75d:	gs je  0x100b7b3
 100b760:	je     0x100b7c3
 100b762:	jb     0x100b7d8
 100b764:	jne    0x100b7d6
 100b766:	dec    ecx
 100b767:	outs   dx,BYTE PTR ds:[esi]
 100b768:	outs   dx,WORD PTR ds:[esi]
 100b76a:	push   edi
 100b76b:	add    dl,ch
 100b76d:	add    BYTE PTR [ebp+0x6e],al
 100b770:	arpl   WORD PTR [edi+0x64],bp
 100b773:	gs push eax
 100b775:	outs   dx,DWORD PTR ds:[esi]
 100b776:	imul   ebp,DWORD PTR [esi+0x74],0xca007265
 100b77d:	add    BYTE PTR [ebp+eiz*2+0x63],al
 100b781:	outs   dx,DWORD PTR ds:[esi]
 100b782:	fs gs push eax
 100b785:	outs   dx,DWORD PTR ds:[esi]
 100b786:	imul   ebp,DWORD PTR [esi+0x74],0xd3007265
 100b78d:	add    al,0x55
 100b78f:	outs   dx,BYTE PTR ds:[esi]
 100b790:	push   0x6c646e61
 100b795:	gs fs inc ebp
 100b798:	js     0x100b7fd
 100b79a:	gs jo  0x100b811
 100b79d:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 100b7a4:	gs jb  0x100b7a7
 100b7a7:	add    BYTE PTR [eax],al
 100b7a9:	add    ecx,DWORD PTR [ecx+0x73]
 100b7ac:	inc    esp
 100b7ad:	bound  esi,QWORD PTR gs:[ebp+0x67]
 100b7b1:	addr16 gs jb 0x100b805
 100b7b5:	jb     0x100b81c
 100b7b7:	jae    0x100b81e
 100b7b9:	outs   dx,BYTE PTR ds:[esi]
 100b7ba:	je     0x100b7bc
 100b7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 100b7bd:	add    edx,DWORD PTR [ecx+0x75]
 100b7c0:	gs jb  0x100b83c
 100b7c3:	push   eax
 100b7c4:	gs jb  0x100b82d
 100b7c7:	outs   dx,DWORD PTR ds:[esi]
 100b7c8:	jb     0x100b837
 100b7ca:	popa   
 100b7cb:	outs   dx,BYTE PTR ds:[esi]
 100b7cc:	arpl   WORD PTR [ebp+0x43],sp
 100b7cf:	outs   dx,DWORD PTR ds:[esi]
 100b7d0:	jne    0x100b840
 100b7d2:	je     0x100b839
 100b7d4:	jb     0x100b7d6
 100b7d6:	xchg   ebx,eax
 100b7d7:	add    al,BYTE PTR [edi+0x65]
 100b7da:	je     0x100b830
 100b7dc:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
 100b7e3:	je     0x100b7e5
 100b7e5:	add    BYTE PTR [ecx+0x2],bh
 100b7e8:	inc    edi
 100b7e9:	gs je  0x100b83f
 100b7ec:	jns    0x100b861
 100b7ee:	je     0x100b855
 100b7f0:	ins    DWORD PTR es:[edi],dx
 100b7f1:	push   esp
 100b7f2:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
 100b7f9:	ins    BYTE PTR es:[edi],dx
 100b7fa:	gs push esp
 100b7fc:	imul   ebp,DWORD PTR [ebp+0x65],0x4c035400
 100b803:	outs   dx,DWORD PTR ds:[esi]
 100b804:	arpl   WORD PTR [ebx+0x52],bp
 100b807:	gs jae 0x100b879
 100b80a:	jne    0x100b87e
 100b80c:	arpl   WORD PTR [ebp+0x0],sp
 100b80f:	add    BYTE PTR [ecx+0x3],al
 100b812:	dec    esp
 100b813:	outs   dx,DWORD PTR ds:[esi]
 100b814:	popa   
 100b815:	fs push edx
 100b817:	gs jae 0x100b889
 100b81a:	jne    0x100b88e
 100b81c:	arpl   WORD PTR [ebp+0x0],sp
 100b81f:	add    BYTE PTR [ecx+0x7a695304],dh
 100b825:	outs   dx,DWORD PTR gs:[esi]
 100b827:	push   dx
 100b829:	gs jae 0x100b89b
 100b82c:	jne    0x100b8a0
 100b82e:	arpl   WORD PTR [ebp+0x0],sp
 100b831:	add    BYTE PTR [esi+0x1],cl
 100b834:	inc    esi
 100b835:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
 100b83c:	jne    0x100b8b0
 100b83e:	arpl   WORD PTR [ebp+0x57],sp
 100b841:	add    BYTE PTR [esi+0x74654702],bl
 100b847:	push   ebp
 100b848:	jae    0x100b8af
 100b84a:	jb     0x100b890
 100b84c:	gs popaw 
 100b84f:	jne    0x100b8bd
 100b851:	je     0x100b8a8
 100b853:	dec    ecx
 100b854:	dec    esp
 100b855:	popa   
 100b856:	outs   dx,BYTE PTR ds:[esi]
 100b857:	addr16 jne 0x100b8bb
 100b85a:	add    BYTE PTR gs:[bx+si],al
 100b85e:	mov    edi,0x6f6c4702
 100b863:	bound  esp,QWORD PTR [ecx+0x6c]
 100b866:	dec    ebp
 100b867:	gs ins DWORD PTR es:[edi],dx
 100b869:	outs   dx,DWORD PTR ds:[esi]
 100b86a:	jb     0x100b8e5
 100b86c:	push   ebx
 100b86d:	je     0x100b8d0
 100b86f:	je     0x100b8e6
 100b871:	jae    0x100b873
 100b873:	add    BYTE PTR ds:0x69725705,ah
 100b879:	je     0x100b8e0
 100b87b:	inc    esi
 100b87c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x65470225
 100b884:	je     0x100b8d4
 100b886:	popa   
 100b887:	je     0x100b8f2
 100b889:	jbe    0x100b8f0
 100b88b:	push   ebx
 100b88c:	jns    0x100b901
 100b88e:	je     0x100b8f5
 100b890:	ins    DWORD PTR es:[edi],dx
 100b891:	dec    ecx
 100b892:	outs   dx,BYTE PTR ds:[esi]
 100b893:	outs   dx,WORD PTR ds:[esi]
 100b895:	add    BYTE PTR [ebx+0x74654702],al
 100b89b:	push   esp
 100b89c:	gs ins DWORD PTR es:[edi],dx
 100b89e:	jo     0x100b8e6
 100b8a0:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
 100b8a8:	add    BYTE PTR [eax],al
 100b8aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100b8ab:	add    al,BYTE PTR [edi+0x65]
 100b8ae:	je     0x100b906
 100b8b0:	gs jb  0x100b926
 100b8b3:	imul   ebp,DWORD PTR [edi+0x6e],0x577845
 100b8ba:	push   cs
 100b8bb:	add    ecx,DWORD PTR [ecx+0x73]
 100b8be:	push   edi
 100b8bf:	outs   dx,DWORD PTR ds:[esi]
 100b8c0:	ja     0x100b8f8
 100b8c2:	xor    al,0x50
 100b8c4:	jb     0x100b935
 100b8c6:	arpl   WORD PTR [ebp+0x73],sp
 100b8c9:	jae    0x100b8cb
 100b8cb:	add    BYTE PTR [edi+0x74654702],dl
 100b8d1:	push   esp
 100b8d2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
 100b8d9:	popa   
 100b8da:	je     0x100b933
 100b8dc:	add    BYTE PTR [eax],al
 100b8de:	enter  0x4701,0x65
 100b8e2:	je     0x100b928
 100b8e4:	popa   
 100b8e5:	je     0x100b94c
 100b8e7:	inc    esi
 100b8e8:	outs   dx,DWORD PTR ds:[esi]
 100b8e9:	jb     0x100b958
 100b8eb:	popa   
 100b8ec:	je     0x100b945
 100b8ee:	add    BYTE PTR [eax],al
 100b8f0:	bound  eax,QWORD PTR [ecx]
 100b8f2:	inc    esi
 100b8f3:	jb     0x100b95a
 100b8f5:	gs dec esp
 100b8f7:	imul   esp,DWORD PTR [edx+0x72],0x797261
 100b8fe:	jae    0x100b904
 100b900:	push   ebx
 100b901:	gs je  0x100b950
 100b904:	popa   
 100b905:	jae    0x100b97b
 100b907:	inc    ebp
 100b908:	jb     0x100b97c
 100b90a:	outs   dx,DWORD PTR ds:[esi]
 100b90b:	jb     0x100b90d
 100b90d:	add    BYTE PTR [esi],ch
 100b90f:	add    DWORD PTR [esi+0x69],eax
 100b912:	outs   dx,BYTE PTR ds:[esi]
 100b913:	fs inc ebx
 100b915:	ins    BYTE PTR es:[edi],dx
 100b916:	outs   dx,DWORD PTR ds:[esi]
 100b917:	jae    0x100b97e
 100b919:	add    BYTE PTR [edi],bh
 100b91b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
 100b91f:	fs dec esp
 100b921:	imul   esp,DWORD PTR [edx+0x72],0x57797261
 100b928:	add    BYTE PTR [eax],al
 100b92a:	sti    
 100b92b:	add    DWORD PTR [edi+0x65],eax
 100b92e:	je     0x100b976
 100b930:	jne    0x100b99e
 100b932:	ins    BYTE PTR es:[edi],dx
 100b933:	push   eax
 100b934:	popa   
 100b935:	je     0x100b99f
 100b937:	dec    esi
 100b938:	popa   
 100b939:	ins    DWORD PTR es:[edi],dx
 100b93a:	gs push edi
 100b93c:	add    BYTE PTR [eax],al
 100b93e:	cmp    DWORD PTR [ecx],eax
 100b940:	inc    esi
 100b941:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
 100b948:	je     0x100b990
 100b94a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3fa0000
 100b952:	push   edx
 100b953:	gs ins BYTE PTR es:[edi],dx
 100b955:	gs popa 
 100b957:	jae    0x100b9be
 100b959:	dec    ebp
 100b95a:	jne    0x100b9d0
 100b95c:	gs js  0x100b95f
 100b95f:	add    BYTE PTR [eax+0x4],dh
 100b962:	push   ebx
 100b963:	gs je  0x100b9ae
 100b966:	popa   
 100b967:	outs   dx,BYTE PTR ds:[esi]
 100b968:	fs ins BYTE PTR es:[edi],dx
 100b96a:	gs dec ecx
 100b96c:	outs   dx,BYTE PTR ds:[esi]
 100b96d:	outs   dx,WORD PTR ds:[esi]
 100b96f:	jb     0x100b9de
 100b971:	popa   
 100b972:	je     0x100b9dd
 100b974:	outs   dx,DWORD PTR ds:[esi]
 100b975:	outs   dx,BYTE PTR ds:[esi]
 100b976:	add    BYTE PTR [eax],al
 100b978:	sahf   
 100b979:	add    BYTE PTR [ebx+0x72],al
 100b97c:	gs popa 
 100b97e:	je     0x100b9e5
 100b980:	dec    ebp
 100b981:	jne    0x100b9f7
 100b983:	gs js  0x100b9dd
 100b986:	add    BYTE PTR [eax],al
 100b988:	into   
 100b989:	add    cl,BYTE PTR [eax+0x65]
 100b98c:	popa   
 100b98d:	jo     0x100b9d3
 100b98f:	gs jae 0x100ba06
 100b992:	jb     0x100ba03
 100b994:	jns    0x100b996
 100b996:	retf   
 100b997:	add    cl,BYTE PTR [eax+0x65]
 100b99a:	popa   
 100b99b:	jo     0x100b9de
 100b99d:	ins    BYTE PTR es:[edi],dx
 100b99e:	ins    BYTE PTR es:[edi],dx
 100b99f:	outs   dx,DWORD PTR ds:[esi]
 100b9a0:	arpl   WORD PTR [eax],ax
 100b9a2:	iret   
 100b9a3:	add    cl,BYTE PTR [eax+0x65]
 100b9a6:	popa   
 100b9a7:	jo     0x100b9ef
 100b9a9:	jb     0x100ba10
 100b9ab:	add    BYTE PTR gs:[eax],al
 100b9ae:	jae    0x100b9b2
 100b9b0:	inc    edi
 100b9b1:	gs je  0x100ba07
 100b9b4:	jns    0x100ba29
 100b9b6:	je     0x100ba1d
 100b9b8:	ins    DWORD PTR es:[edi],dx
 100b9b9:	dec    ecx
 100b9ba:	outs   dx,BYTE PTR ds:[esi]
 100b9bb:	outs   dx,WORD PTR ds:[esi]
 100b9bd:	add    cl,dh
 100b9bf:	add    al,0x56
 100b9c1:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
 100b9c8:	jne    0x100ba2f
 100b9ca:	jb     0x100ba45
 100b9cc:	add    BYTE PTR [eax],al
 100b9ce:	int    0x2
 100b9d0:	dec    eax
 100b9d1:	gs popa 
 100b9d3:	jo     0x100ba18
 100b9d5:	jb     0x100ba3c
 100b9d7:	popa   
 100b9d8:	je     0x100ba3f
 100b9da:	add    BYTE PTR [eax],al
 100b9dc:	ret    
 100b9dd:	add    edx,DWORD PTR [edx+0x65]
 100b9e0:	popa   
 100b9e1:	fs push eax
 100b9e3:	jb     0x100ba54
 100b9e5:	arpl   WORD PTR [ebp+0x73],sp
 100b9e8:	jae    0x100ba37
 100b9ea:	gs ins DWORD PTR es:[edi],dx
 100b9ec:	outs   dx,DWORD PTR ds:[esi]
 100b9ed:	jb     0x100ba68
 100b9ef:	add    bh,bl
 100b9f1:	add    DWORD PTR [edi+0x65],eax
 100b9f4:	je     0x100ba3b
 100b9f6:	js     0x100ba61
 100b9f8:	je     0x100ba3d
 100b9fa:	outs   dx,DWORD PTR ds:[esi]
 100b9fb:	fs gs push eax
 100b9fe:	jb     0x100ba6f
 100ba00:	arpl   WORD PTR [ebp+0x73],sp
 100ba03:	jae    0x100ba05
 100ba05:	add    BYTE PTR [eax+0x65724300],ch
 100ba0b:	popa   
 100ba0c:	je     0x100ba73
 100ba0e:	push   eax
 100ba0f:	jb     0x100ba80
 100ba11:	arpl   WORD PTR [ebp+0x73],sp
 100ba14:	jae    0x100ba6d
 100ba16:	add    BYTE PTR [eax],al
 100ba18:	cdq    
 100ba19:	add    al,0x53
 100ba1b:	gs je  0x100ba72
 100ba1e:	push   0x64616572
 100ba23:	push   eax
 100ba24:	jb     0x100ba8f
 100ba26:	outs   dx,DWORD PTR ds:[esi]
 100ba27:	jb     0x100ba92
 100ba29:	je     0x100baa4
 100ba2b:	add    BYTE PTR [esi+0x74654702],cl
 100ba31:	push   esp
 100ba32:	push   0x64616572
 100ba37:	push   eax
 100ba38:	jb     0x100baa3
 100ba3a:	outs   dx,DWORD PTR ds:[esi]
 100ba3b:	jb     0x100baa6
 100ba3d:	je     0x100bab8
 100ba3f:	add    ah,al
 100ba41:	add    DWORD PTR [edi+0x65],eax
 100ba44:	je     0x100ba89
 100ba46:	jne    0x100baba
 100ba48:	jb     0x100baaf
 100ba4a:	outs   dx,BYTE PTR ds:[esi]
 100ba4b:	je     0x100baa1
 100ba4d:	push   0x64616572
 100ba52:	add    BYTE PTR [eax],al
 100ba54:	mov    bh,0x4
 100ba56:	pop    edi
 100ba57:	jbe    0x100bacc
 100ba59:	outs   dx,BYTE PTR ds:[esi]
 100ba5a:	ja     0x100bacc
 100ba5c:	jb     0x100bac7
 100ba5e:	outs   dx,BYTE PTR ds:[esi]
 100ba5f:	je     0x100bac7
 100ba61:	add    dh,ah
 100ba63:	add    ebx,DWORD PTR [edi+0x72]
 100ba66:	gs jae 0x100bace
 100ba69:	je     0x100bade
 100ba6b:	je     0x100bad8
 100ba6d:	outs   dx,DWORD PTR ds:[esi]
 100ba6e:	data16 ins BYTE PTR es:[edi],dx
 100ba70:	ja     0x100ba72
 100ba72:	mov    eax,0x73765f04
 100ba77:	outs   dx,BYTE PTR ds:[esi]
 100ba78:	ja     0x100baea
 100ba7a:	jb     0x100bae5
 100ba7c:	outs   dx,BYTE PTR ds:[esi]
 100ba7d:	je     0x100bae5
 100ba7f:	pop    edi
 100ba80:	ins    BYTE PTR es:[edi],dx
 100ba81:	add    BYTE PTR [edi],bl
 100ba83:	add    eax,0x616d775f
 100ba88:	imul   esp,DWORD PTR [ebp+0x70],0x61
 100ba8c:	je     0x100baf6
 100ba8e:	pop    edi
 100ba8f:	jae    0x100ba91
 100ba91:	add    BYTE PTR [ecx+0x5],al
 100ba94:	pop    edi
 100ba95:	ja     0x100bb0a
 100ba97:	jo     0x100bb05
 100ba99:	imul   esi,DWORD PTR [eax+esi*2+0x61],0x735f6874
 100baa1:	add    BYTE PTR [eax+0x0],ah
 100baa4:	aas    
 100baa5:	aas    
 100baa6:	xor    BYTE PTR [edi+0x4c],bl
 100baa9:	outs   dx,DWORD PTR ds:[esi]
 100baaa:	arpl   WORD PTR [ebx+0x69],bp
 100baad:	je     0x100baef
 100baaf:	jae    0x100bb25
 100bab1:	fs inc eax
 100bab3:	inc    eax
 100bab4:	push   ecx
 100bab5:	inc    ecx
 100bab6:	inc    ebp
 100bab7:	inc    eax
 100bab8:	dec    eax
 100bab9:	inc    eax
 100baba:	pop    edx
 100babb:	add    BYTE PTR [esi+0x313f3f00],bl
 100bac1:	pop    edi
 100bac2:	dec    esp
 100bac3:	outs   dx,DWORD PTR ds:[esi]
 100bac4:	arpl   WORD PTR [ebx+0x69],bp
 100bac7:	je     0x100bb09
 100bac9:	jae    0x100bb3f
 100bacb:	fs inc eax
 100bacd:	inc    eax
 100bace:	push   ecx
 100bacf:	inc    ecx
 100bad0:	inc    ebp
 100bad1:	inc    eax
 100bad2:	pop    eax
 100bad3:	pop    edx
 100bad4:	add    BYTE PTR [eax],al
 100bad6:	sahf   
 100bad7:	add    DWORD PTR [edi],edi
 100bad9:	pop    edi
 100bada:	inc    esp
 100badb:	arpl   WORD PTR gs:[edx+0x65],si
 100badf:	inc    ax
 100bae1:	popaw  
 100bae3:	arpl   WORD PTR [ebp+0x74],sp
 100bae6:	inc    eax
 100bae7:	ins    BYTE PTR es:[edi],dx
 100bae8:	outs   dx,DWORD PTR ds:[esi]
 100bae9:	arpl   WORD PTR [ecx+0x6c],sp
 100baec:	gs inc eax
 100baee:	jae    0x100bb64
 100baf0:	fs inc eax
 100baf2:	inc    eax
 100baf3:	push   ecx
 100baf4:	inc    ecx
 100baf5:	inc    ebp
 100baf6:	push   eax
 100baf7:	inc    ecx
 100baf8:	push   esi
 100baf9:	xor    DWORD PTR [edx],esi
 100bafb:	xor    eax,DWORD PTR [eax+0x58]
 100bafe:	pop    edx
 100baff:	add    BYTE PTR [ebp+0x53],cl
 100bb02:	push   esi
 100bb03:	inc    ebx
 100bb04:	push   eax
 100bb05:	xor    DWORD PTR [eax],esi
 100bb07:	xor    BYTE PTR [esi],ch
 100bb09:	fs ins BYTE PTR es:[edi],dx
 100bb0b:	ins    BYTE PTR es:[edi],dx
 100bb0c:	add    BYTE PTR [eax],al
 100bb0e:	push   es
 100bb0f:	add    BYTE PTR [edi+0x65],al
 100bb12:	je     0x100bb5a
 100bb14:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
 100bb1c:	outs   dx,DWORD PTR ds:[esi]
 100bb1d:	outs   dx,BYTE PTR ds:[esi]
 100bb1e:	dec    ecx
 100bb1f:	outs   dx,BYTE PTR ds:[esi]
 100bb20:	outs   dx,WORD PTR ds:[esi]
 100bb22:	push   edi
 100bb23:	add    BYTE PTR [esi],cl
 100bb25:	add    BYTE PTR [esi+0x65],dl
 100bb28:	jb     0x100bb7b
 100bb2a:	jne    0x100bb91
 100bb2c:	jb     0x100bba7
 100bb2e:	push   esi
 100bb2f:	popa   
 100bb30:	ins    BYTE PTR es:[edi],dx
 100bb31:	jne    0x100bb98
 100bb33:	push   edi
 100bb34:	add    BYTE PTR [eax],al
 100bb36:	push   esi
 100bb37:	inc    ebp
 100bb38:	push   edx
 100bb39:	push   ebx
 100bb3a:	dec    ecx
 100bb3b:	dec    edi
 100bb3c:	dec    esi
 100bb3d:	cs fs ins BYTE PTR es:[edi],dx
 100bb40:	ins    BYTE PTR es:[edi],dx
 100bb41:	add    BYTE PTR [eax+eax*1],al
 100bb44:	inc    ebp
 100bb45:	outs   dx,BYTE PTR ds:[esi]
 100bb46:	jne    0x100bbb5
 100bb48:	push   eax
 100bb49:	jb     0x100bbba
 100bb4b:	arpl   WORD PTR [ebp+0x73],sp
 100bb4e:	jae    0x100bb9d
 100bb50:	outs   dx,DWORD PTR ds:[esi]
 100bb51:	fs jne 0x100bbc0
 100bb54:	gs jae 0x100bb57
 100bb57:	add    BYTE PTR [eax],dl
 100bb59:	add    BYTE PTR [edi+0x65],al
 100bb5c:	je     0x100bbab
 100bb5e:	outs   dx,DWORD PTR ds:[esi]
 100bb5f:	fs jne 0x100bbce
 100bb62:	gs inc esi
 100bb64:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x45656d61
 100bb6c:	js     0x100bbc5
 100bb6e:	add    BYTE PTR [eax],al
 100bb70:	push   eax
 100bb71:	push   ebx
 100bb72:	inc    ecx
 100bb73:	push   eax
 100bb74:	dec    ecx
 100bb75:	cs inc esp
 100bb77:	dec    esp
 100bb78:	dec    esp
 100bb79:	add    dl,dl
 100bb7b:	add    cl,BYTE PTR [eax+0x65]
 100bb7e:	popa   
 100bb7f:	jo     0x100bbd3
 100bb81:	gs inc ecx
 100bb83:	ins    BYTE PTR es:[edi],dx
 100bb84:	ins    BYTE PTR es:[edi],dx
 100bb85:	outs   dx,DWORD PTR ds:[esi]
 100bb86:	arpl   WORD PTR [eax],ax
 100bb88:	aam    0x2
 100bb8a:	dec    eax
 100bb8b:	gs popa 
 100bb8d:	jo     0x100bbe2
 100bb8f:	imul   edi,DWORD PTR [edx+0x65],0x24a0000
 100bb96:	inc    edi
 100bb97:	gs je  0x100bbea
 100bb9a:	jb     0x100bc0b
 100bb9c:	arpl   WORD PTR [ebp+0x73],sp
 100bb9f:	jae    0x100bbe9
 100bba1:	gs popa 
 100bba3:	jo     0x100bba5
 100bba5:	add    ah,ch
 100bba7:	add    al,0x56
 100bba9:	imul   esi,DWORD PTR [edx+0x74],0x466c6175
 100bbb0:	jb     0x100bc17
 100bbb2:	add    BYTE PTR gs:[eax],al
	...
 100bbc1:	add    BYTE PTR [eax],al
 100bbc3:	add    BYTE PTR [edx+0x4f35e2],dh
 100bbc9:	add    BYTE PTR [eax],al
 100bbcb:	add    BYTE PTR [eax],dl
 100bbcd:	mov    esp,0x10000
 100bbd2:	add    BYTE PTR [eax],al
 100bbd4:	add    al,0x0
 100bbd6:	add    BYTE PTR [eax],al
 100bbd8:	add    al,0x0
 100bbda:	add    BYTE PTR [eax],al
 100bbdc:	call   0xf900bc9c
 100bbe1:	mov    ebx,0xbc080000
 100bbe6:	add    BYTE PTR [eax],al
 100bbe8:	shl    BYTE PTR [eax+eax*1+0xa4e000],1
 100bbef:	add    BYTE PTR [eax],dl
 100bbf1:	inc    edx
 100bbf2:	add    BYTE PTR [eax],al
 100bbf4:	es inc edx
 100bbf6:	add    BYTE PTR [eax],al
 100bbf8:	and    DWORD PTR [eax+eax*1+0xbc3400],edi
 100bbff:	add    BYTE PTR [ecx-0x44],cl
 100bc02:	add    BYTE PTR [eax],al
 100bc04:	push   edi
 100bc05:	mov    esp,0x0
 100bc0a:	add    DWORD PTR [eax],eax
 100bc0c:	add    al,BYTE PTR [eax]
 100bc0e:	add    eax,DWORD PTR [eax]
 100bc10:	inc    esp
 100bc11:	je     0x100bc86
 100bc13:	inc    esp
 100bc14:	bound  esi,QWORD PTR gs:[ebp+0x67]
 100bc18:	dec    eax
 100bc19:	outs   dx,DWORD PTR ds:[esi]
 100bc1a:	jae    0x100bc90
 100bc1c:	cs gs js 0x100bc85
 100bc20:	add    BYTE PTR [ebp+ebp*2+0x70],al
 100bc24:	inc    edi
 100bc25:	gs je  0x100bc6b
 100bc28:	ins    BYTE PTR es:[edi],dx
 100bc29:	imul   esp,DWORD PTR [ebp+0x6e],0x70784574
 100bc30:	outs   dx,DWORD PTR ds:[esi]
 100bc31:	jb     0x100bca7
 100bc33:	add    BYTE PTR [ebp+ebp*2+0x70],al
 100bc37:	push   edx
 100bc38:	gs ins DWORD PTR es:[edi],dx
 100bc3a:	outs   dx,DWORD PTR ds:[esi]
 100bc3b:	je     0x100bca2
 100bc3d:	inc    esp
 100bc3e:	jne    0x100bcad
 100bc40:	jo     0x100bc94
 100bc42:	gs jno 0x100bcba
 100bc45:	gs jae 0x100bcbc
 100bc48:	add    BYTE PTR [ebx+0x53],dl
 100bc4b:	dec    ecx
 100bc4c:	push   ebx
 100bc4d:	inc    edx
 100bc4e:	imul   ebp,DWORD PTR gs:[bp+0x44],0x706d75
 100bc57:	push   ebx
 100bc58:	push   ebx
 100bc59:	dec    ecx
 100bc5a:	push   ebx
 100bc5b:	inc    edi
 100bc5c:	gs je  0x100bca4
 100bc5f:	js     0x100bcd5
 100bc61:	jb     0x100bcc4
 100bc63:	inc    esp
 100bc64:	jne    0x100bcd3
 100bc66:	jo     0x100bcae
 100bc68:	imul   ebp,DWORD PTR [ebp+eiz*2+0x48],0x6c646e61
 100bc70:	gs
	...
