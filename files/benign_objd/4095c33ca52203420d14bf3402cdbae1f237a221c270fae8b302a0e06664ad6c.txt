
4095c33ca52203420d14bf3402cdbae1f237a221c270fae8b302a0e06664ad6c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x5d35]        # 0x406d50
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x5d36]        # 0x406d60
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x5d39]        # 0x406d70
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x5cfc]        # 0x406d40
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5b8f]        # 0x406be0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x5cd1]        # 0x406d30
  40105f:	mov    DWORD PTR [rip+0x8fa3],edx        # 0x40a008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402cd0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401c60
  401081:	mov    rdx,QWORD PTR [rip+0x5be8]        # 0x406c70
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x5bce]        # 0x406c60
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x5c34]        # 0x406cd0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x5b6b]        # 0x406c10
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401840
  4010af:	mov    rax,QWORD PTR [rip+0x5ada]        # 0x406b90
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402cd0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xa19]        # 0x401b40
  401127:	call   0x401b30
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x5b95]        # 0x406d00
  40116b:	lea    r8,[rip+0x8ea6]        # 0x40a018
  401172:	lea    rdx,[rip+0x8ea7]        # 0x40a020
  401179:	lea    rcx,[rip+0x8ea8]        # 0x40a028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x8e78],eax        # 0x40a000
  401188:	lea    rax,[rip+0x8e71]        # 0x40a000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x5b25]        # 0x406cc0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402ce8
  4011a3:	mov    DWORD PTR [rip+0x8e67],eax        # 0x40a010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x5b6a]        # 0x406d30
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x5a4b]        # 0x406c40
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xa366]        # 0x40b568
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x5a27]        # 0x406c50
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x8dba],0x1        # 0x40a004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x596c]        # 0x406bd0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401e50
  40127d:	lea    rcx,[rip+0x116c]        # 0x4023f0
  401284:	call   QWORD PTR [rip+0xa2d6]        # 0x40b560
  40128a:	mov    rdx,QWORD PTR [rip+0x599f]        # 0x406c30
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402300
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402d10
  4012a5:	call   0x401c40
  4012aa:	mov    rax,QWORD PTR [rip+0x592f]        # 0x406be0
  4012b1:	mov    QWORD PTR [rip+0x9750],rax        # 0x40aa08
  4012b8:	mov    rax,QWORD PTR [rip+0x5941]        # 0x406c00
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x96e9],rax        # 0x40aa00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x3cca],eax        # 0x405000
  401336:	mov    r12d,DWORD PTR [rip+0x8ceb]        # 0x40a028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402c48
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x8cc2]        # 0x40a020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402c10
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402c48
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402c40
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x8c6a],rbp        # 0x40a020
  4013b6:	call   0x401810
  4013bb:	mov    rax,QWORD PTR [rip+0x582e]        # 0x406bf0
  4013c2:	mov    rdx,QWORD PTR [rip+0x8c4f]        # 0x40a018
  4013c9:	mov    ecx,DWORD PTR [rip+0x8c59]        # 0x40a028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x8c3c]        # 0x40a018
  4013dc:	mov    rdx,QWORD PTR [rip+0x8c3d]        # 0x40a020
  4013e3:	call   0x402de0
  4013e8:	mov    ecx,DWORD PTR [rip+0x8c1a]        # 0x40a008
  4013ee:	mov    DWORD PTR [rip+0x8c18],eax        # 0x40a00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x8c02]        # 0x40a004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402cb8
  40140b:	mov    eax,DWORD PTR [rip+0x8bfb]        # 0x40a00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x5819]        # 0x406c50
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402cc0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x582d]        # 0x406c90
  401463:	mov    rcx,QWORD PTR [rip+0x5816]        # 0x406c80
  40146a:	call   0x402cb0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xa077]        # 0x40b510
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x5809]        # 0x406cb0
  4014a7:	mov    rcx,QWORD PTR [rip+0x57f2]        # 0x406ca0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402cb0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402c68
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x5855]        # 0x406d30
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401850
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x5825]        # 0x406d30
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401850
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbx
  401531:	sub    rsp,0x20
  401535:	mov    rbx,rcx
  401538:	call   QWORD PTR [rip+0xa082]        # 0x40b5c0
  40153e:	lea    rdx,[rip+0x4abb]        # 0x406000
  401545:	lea    rcx,[rax+0x60]
  401549:	mov    r8,rbx
  40154c:	call   0x402c60
  401551:	mov    ecx,0x1
  401556:	call   0x402c68
  40155b:	nop
  40155c:	nop
  40155d:	nop
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x9f6a]        # 0x40b4d0
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x9f4a]        # 0x40b4b8
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x9f3a]        # 0x40b4b0
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x9f2a]        # 0x40b4a8
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x9f1a]        # 0x40b4a0
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x9f0a]        # 0x40b498
  40158e:	nop
  40158f:	nop
  401590:	jmp    QWORD PTR [rip+0x9efa]        # 0x40b490
  401596:	nop
  401597:	nop
  401598:	jmp    QWORD PTR [rip+0x9eea]        # 0x40b488
  40159e:	nop
  40159f:	nop
  4015a0:	jmp    QWORD PTR [rip+0x9eda]        # 0x40b480
  4015a6:	nop
  4015a7:	nop
  4015a8:	jmp    QWORD PTR [rip+0x9eca]        # 0x40b478
  4015ae:	nop
  4015af:	nop
  4015b0:	jmp    QWORD PTR [rip+0x9eba]        # 0x40b470
  4015b6:	nop
  4015b7:	nop
  4015b8:	jmp    QWORD PTR [rip+0x9eaa]        # 0x40b468
  4015be:	nop
  4015bf:	nop
  4015c0:	jmp    QWORD PTR [rip+0x9e9a]        # 0x40b460
  4015c6:	nop
  4015c7:	nop
  4015c8:	jmp    QWORD PTR [rip+0x9e8a]        # 0x40b458
  4015ce:	nop
  4015cf:	nop
  4015d0:	jmp    QWORD PTR [rip+0x9e7a]        # 0x40b450
  4015d6:	nop
  4015d7:	nop
  4015d8:	jmp    QWORD PTR [rip+0x9e6a]        # 0x40b448
  4015de:	nop
  4015df:	nop
  4015e0:	jmp    QWORD PTR [rip+0x9e5a]        # 0x40b440
  4015e6:	nop
  4015e7:	nop
  4015e8:	jmp    QWORD PTR [rip+0x9e4a]        # 0x40b438
  4015ee:	nop
  4015ef:	nop
  4015f0:	jmp    QWORD PTR [rip+0x9e3a]        # 0x40b430
  4015f6:	nop
  4015f7:	nop
  4015f8:	jmp    QWORD PTR [rip+0x9e2a]        # 0x40b428
  4015fe:	nop
  4015ff:	nop
  401600:	jmp    QWORD PTR [rip+0x9e1a]        # 0x40b420
  401606:	nop
  401607:	nop
  401608:	jmp    QWORD PTR [rip+0x9e0a]        # 0x40b418
  40160e:	nop
  40160f:	nop
  401610:	jmp    QWORD PTR [rip+0x9dfa]        # 0x40b410
  401616:	nop
  401617:	nop
  401618:	jmp    QWORD PTR [rip+0x9dea]        # 0x40b408
  40161e:	nop
  40161f:	nop
  401620:	jmp    QWORD PTR [rip+0x9dda]        # 0x40b400
  401626:	nop
  401627:	nop
  401628:	jmp    QWORD PTR [rip+0x9dca]        # 0x40b3f8
  40162e:	nop
  40162f:	nop
  401630:	jmp    QWORD PTR [rip+0x9dba]        # 0x40b3f0
  401636:	nop
  401637:	nop
  401638:	jmp    QWORD PTR [rip+0x9daa]        # 0x40b3e8
  40163e:	nop
  40163f:	nop
  401640:	jmp    QWORD PTR [rip+0x9d9a]        # 0x40b3e0
  401646:	nop
  401647:	nop
  401648:	jmp    QWORD PTR [rip+0x9d8a]        # 0x40b3d8
  40164e:	nop
  40164f:	nop
  401650:	jmp    QWORD PTR [rip+0x9d7a]        # 0x40b3d0
  401656:	nop
  401657:	nop
  401658:	jmp    QWORD PTR [rip+0x9d6a]        # 0x40b3c8
  40165e:	nop
  40165f:	nop
  401660:	jmp    QWORD PTR [rip+0x9d5a]        # 0x40b3c0
  401666:	nop
  401667:	nop
  401668:	jmp    QWORD PTR [rip+0x9d4a]        # 0x40b3b8
  40166e:	nop
  40166f:	nop
  401670:	jmp    QWORD PTR [rip+0x9d3a]        # 0x40b3b0
  401676:	nop
  401677:	nop
  401678:	jmp    QWORD PTR [rip+0x9d2a]        # 0x40b3a8
  40167e:	nop
  40167f:	nop
  401680:	jmp    QWORD PTR [rip+0x9d1a]        # 0x40b3a0
  401686:	nop
  401687:	nop
  401688:	jmp    QWORD PTR [rip+0x9d0a]        # 0x40b398
  40168e:	nop
  40168f:	nop
  401690:	jmp    QWORD PTR [rip+0x9cfa]        # 0x40b390
  401696:	nop
  401697:	nop
  401698:	jmp    QWORD PTR [rip+0x9cea]        # 0x40b388
  40169e:	nop
  40169f:	nop
  4016a0:	push   rbx
  4016a1:	sub    rsp,0x30
  4016a5:	mov    rbx,rcx
  4016a8:	mov    rcx,QWORD PTR [rip+0x9361]        # 0x40aa10
  4016af:	call   0x401c50
  4016b4:	cmp    rax,0xffffffffffffffff
  4016b8:	mov    QWORD PTR [rsp+0x20],rax
  4016bd:	je     0x401735
  4016bf:	mov    ecx,0x8
  4016c4:	call   0x402ca8
  4016c9:	mov    rcx,QWORD PTR [rip+0x9340]        # 0x40aa10
  4016d0:	call   0x401c50
  4016d5:	mov    rcx,QWORD PTR [rip+0x933c]        # 0x40aa18
  4016dc:	mov    QWORD PTR [rsp+0x20],rax
  4016e1:	call   0x401c50
  4016e6:	lea    rdx,[rsp+0x20]
  4016eb:	lea    r8,[rsp+0x28]
  4016f0:	mov    rcx,rbx
  4016f3:	mov    QWORD PTR [rsp+0x28],rax
  4016f8:	call   0x402cf0
  4016fd:	mov    rcx,QWORD PTR [rsp+0x20]
  401702:	mov    rbx,rax
  401705:	call   0x401c60
  40170a:	mov    rcx,QWORD PTR [rsp+0x28]
  40170f:	mov    QWORD PTR [rip+0x92fa],rax        # 0x40aa10
  401716:	call   0x401c60
  40171b:	mov    ecx,0x8
  401720:	mov    QWORD PTR [rip+0x92f1],rax        # 0x40aa18
  401727:	call   0x402c98
  40172c:	mov    rax,rbx
  40172f:	add    rsp,0x30
  401733:	pop    rbx
  401734:	ret    
  401735:	mov    rax,QWORD PTR [rip+0x54e4]        # 0x406c20
  40173c:	mov    rcx,rbx
  40173f:	call   QWORD PTR [rax]
  401741:	add    rsp,0x30
  401745:	pop    rbx
  401746:	ret    
  401747:	nop    WORD PTR [rax+rax*1+0x0]
  401750:	sub    rsp,0x28
  401754:	call   0x4016a0
  401759:	test   rax,rax
  40175c:	sete   al
  40175f:	movzx  eax,al
  401762:	neg    eax
  401764:	add    rsp,0x28
  401768:	ret    
  401769:	nop
  40176a:	nop
  40176b:	nop
  40176c:	nop
  40176d:	nop
  40176e:	nop
  40176f:	nop
  401770:	sub    rsp,0x28
  401774:	mov    rax,QWORD PTR [rip+0x3895]        # 0x405010
  40177b:	mov    rax,QWORD PTR [rax]
  40177e:	test   rax,rax
  401781:	je     0x4017a0
  401783:	call   rax
  401785:	mov    rax,QWORD PTR [rip+0x3884]        # 0x405010
  40178c:	lea    rdx,[rax+0x8]
  401790:	mov    rax,QWORD PTR [rax+0x8]
  401794:	mov    QWORD PTR [rip+0x3875],rdx        # 0x405010
  40179b:	test   rax,rax
  40179e:	jne    0x401783
  4017a0:	add    rsp,0x28
  4017a4:	ret    
  4017a5:	nop
  4017a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017b0:	push   rsi
  4017b1:	push   rbx
  4017b2:	sub    rsp,0x28
  4017b6:	mov    rsi,QWORD PTR [rip+0x53e3]        # 0x406ba0
  4017bd:	mov    rax,QWORD PTR [rsi]
  4017c0:	cmp    eax,0xffffffff
  4017c3:	mov    ebx,eax
  4017c5:	je     0x4017f0
  4017c7:	test   ebx,ebx
  4017c9:	je     0x4017da
  4017cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4017d0:	mov    eax,ebx
  4017d2:	call   QWORD PTR [rsi+rax*8]
  4017d5:	sub    ebx,0x1
  4017d8:	jne    0x4017d0
  4017da:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401770
  4017e1:	add    rsp,0x28
  4017e5:	pop    rbx
  4017e6:	pop    rsi
  4017e7:	jmp    0x401750
  4017ec:	nop    DWORD PTR [rax+0x0]
  4017f0:	xor    ebx,ebx
  4017f2:	jmp    0x4017f6
  4017f4:	mov    ebx,eax
  4017f6:	lea    edx,[rbx+0x1]
  4017f9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4017fe:	mov    rax,rdx
  401801:	jne    0x4017f4
  401803:	jmp    0x4017c7
  401805:	nop
  401806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401810:	mov    eax,DWORD PTR [rip+0x881a]        # 0x40a030
  401816:	test   eax,eax
  401818:	je     0x401820
  40181a:	repz ret 
  40181c:	nop    DWORD PTR [rax+0x0]
  401820:	mov    DWORD PTR [rip+0x8806],0x1        # 0x40a030
  40182a:	jmp    0x4017b0
  40182c:	nop
  40182d:	nop
  40182e:	nop
  40182f:	nop
  401830:	mov    rax,QWORD PTR [rip+0x9d91]        # 0x40b5c8
  401837:	rex.W jmp rax
  40183a:	nop
  40183b:	nop
  40183c:	nop
  40183d:	nop
  40183e:	nop
  40183f:	nop
  401840:	xor    eax,eax
  401842:	ret    
  401843:	nop
  401844:	nop
  401845:	nop
  401846:	nop
  401847:	nop
  401848:	nop
  401849:	nop
  40184a:	nop
  40184b:	nop
  40184c:	nop
  40184d:	nop
  40184e:	nop
  40184f:	nop
  401850:	push   r12
  401852:	push   rbp
  401853:	push   rdi
  401854:	push   rsi
  401855:	push   rbx
  401856:	sub    rsp,0x40
  40185a:	mov    rbx,QWORD PTR [rip+0x380f]        # 0x405070
  401861:	movabs rax,0x2b992ddfa232
  40186b:	mov    QWORD PTR [rsp+0x20],0x0
  401874:	cmp    rbx,rax
  401877:	je     0x401890
  401879:	not    rbx
  40187c:	mov    QWORD PTR [rip+0x37fd],rbx        # 0x405080
  401883:	add    rsp,0x40
  401887:	pop    rbx
  401888:	pop    rsi
  401889:	pop    rdi
  40188a:	pop    rbp
  40188b:	pop    r12
  40188d:	ret    
  40188e:	xchg   ax,ax
  401890:	lea    rcx,[rsp+0x20]
  401895:	call   QWORD PTR [rip+0x9c7d]        # 0x40b518
  40189b:	mov    r12,QWORD PTR [rsp+0x20]
  4018a0:	call   QWORD PTR [rip+0x9c52]        # 0x40b4f8
  4018a6:	mov    ebp,eax
  4018a8:	call   QWORD PTR [rip+0x9c52]        # 0x40b500
  4018ae:	mov    edi,eax
  4018b0:	call   QWORD PTR [rip+0x9c6a]        # 0x40b520
  4018b6:	lea    rcx,[rsp+0x30]
  4018bb:	mov    esi,eax
  4018bd:	call   QWORD PTR [rip+0x9c75]        # 0x40b538
  4018c3:	xor    r12,QWORD PTR [rsp+0x30]
  4018c8:	mov    edx,edi
  4018ca:	movabs rax,0xffffffffffff
  4018d4:	xor    rbp,r12
  4018d7:	mov    rdi,rbp
  4018da:	xor    rdi,rdx
  4018dd:	mov    edx,esi
  4018df:	xor    rdi,rdx
  4018e2:	mov    rsi,rdi
  4018e5:	and    rsi,rax
  4018e8:	cmp    rsi,rbx
  4018eb:	je     0x401910
  4018ed:	mov    rax,rsi
  4018f0:	not    rax
  4018f3:	mov    QWORD PTR [rip+0x3776],rsi        # 0x405070
  4018fa:	mov    QWORD PTR [rip+0x377f],rax        # 0x405080
  401901:	add    rsp,0x40
  401905:	pop    rbx
  401906:	pop    rsi
  401907:	pop    rdi
  401908:	pop    rbp
  401909:	pop    r12
  40190b:	ret    
  40190c:	nop    DWORD PTR [rax+0x0]
  401910:	movabs rax,0xffffd466d2205dcc
  40191a:	movabs rsi,0x2b992ddfa233
  401924:	jmp    0x4018f3
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	push   rbp
  401931:	push   rsi
  401932:	push   rbx
  401933:	mov    rbp,rsp
  401936:	sub    rsp,0x70
  40193a:	mov    rsi,rcx
  40193d:	lea    rcx,[rip+0x873c]        # 0x40a080
  401944:	call   QWORD PTR [rip+0x9bfe]        # 0x40b548
  40194a:	mov    rbx,QWORD PTR [rip+0x8827]        # 0x40a178
  401951:	xor    r8d,r8d
  401954:	lea    rdx,[rbp-0x28]
  401958:	mov    rcx,rbx
  40195b:	call   QWORD PTR [rip+0x9bef]        # 0x40b550
  401961:	test   rax,rax
  401964:	mov    r9,rax
  401967:	je     0x401a10
  40196d:	lea    rax,[rbp-0x20]
  401971:	mov    QWORD PTR [rsp+0x38],0x0
  40197a:	mov    r8,rbx
  40197d:	mov    rdx,QWORD PTR [rbp-0x28]
  401981:	xor    ecx,ecx
  401983:	mov    QWORD PTR [rsp+0x30],rax
  401988:	lea    rax,[rbp-0x18]
  40198c:	mov    QWORD PTR [rsp+0x28],rax
  401991:	lea    rax,[rip+0x86e8]        # 0x40a080
  401998:	mov    QWORD PTR [rsp+0x20],rax
  40199d:	call   QWORD PTR [rip+0x9bb5]        # 0x40b558
  4019a3:	mov    rax,QWORD PTR [rip+0x87ce]        # 0x40a178
  4019aa:	xor    ecx,ecx
  4019ac:	mov    QWORD PTR [rip+0x874d],rsi        # 0x40a100
  4019b3:	mov    DWORD PTR [rip+0x8bc3],0xc0000409        # 0x40a580
  4019bd:	mov    DWORD PTR [rip+0x8bbd],0x1        # 0x40a584
  4019c7:	mov    QWORD PTR [rip+0x8bc2],rax        # 0x40a590
  4019ce:	mov    rax,QWORD PTR [rip+0x369b]        # 0x405070
  4019d5:	mov    QWORD PTR [rbp-0x10],rax
  4019d9:	mov    rax,QWORD PTR [rip+0x36a0]        # 0x405080
  4019e0:	mov    QWORD PTR [rbp-0x8],rax
  4019e4:	call   QWORD PTR [rip+0x9b76]        # 0x40b560
  4019ea:	lea    rcx,[rip+0x4eff]        # 0x4068f0
  4019f1:	call   QWORD PTR [rip+0x9b89]        # 0x40b580
  4019f7:	call   QWORD PTR [rip+0x9af3]        # 0x40b4f0
  4019fd:	mov    edx,0xc0000409
  401a02:	mov    rcx,rax
  401a05:	call   QWORD PTR [rip+0x9b65]        # 0x40b570
  401a0b:	call   0x402c90
  401a10:	mov    rax,QWORD PTR [rbp+0x18]
  401a14:	mov    QWORD PTR [rip+0x875d],rax        # 0x40a178
  401a1b:	lea    rax,[rbp+0x8]
  401a1f:	mov    QWORD PTR [rip+0x86f2],rax        # 0x40a118
  401a26:	jmp    0x4019a3
  401a2b:	nop
  401a2c:	nop
  401a2d:	nop
  401a2e:	nop
  401a2f:	nop
  401a30:	sub    rsp,0x28
  401a34:	test   edx,edx
  401a36:	je     0x401a50
  401a38:	cmp    edx,0x3
  401a3b:	je     0x401a50
  401a3d:	mov    eax,0x1
  401a42:	add    rsp,0x28
  401a46:	ret    
  401a47:	nop    WORD PTR [rax+rax*1+0x0]
  401a50:	call   0x402740
  401a55:	mov    eax,0x1
  401a5a:	add    rsp,0x28
  401a5e:	ret    
  401a5f:	nop
  401a60:	push   rsi
  401a61:	push   rbx
  401a62:	sub    rsp,0x28
  401a66:	mov    rax,QWORD PTR [rip+0x5113]        # 0x406b80
  401a6d:	cmp    DWORD PTR [rax],0x2
  401a70:	je     0x401a78
  401a72:	mov    DWORD PTR [rax],0x2
  401a78:	cmp    edx,0x2
  401a7b:	je     0x401a90
  401a7d:	cmp    edx,0x1
  401a80:	je     0x401ac2
  401a82:	mov    eax,0x1
  401a87:	add    rsp,0x28
  401a8b:	pop    rbx
  401a8c:	pop    rsi
  401a8d:	ret    
  401a8e:	xchg   ax,ax
  401a90:	lea    rbx,[rip+0xa5c9]        # 0x40c060
  401a97:	lea    rsi,[rip+0xa5c2]        # 0x40c060
  401a9e:	cmp    rbx,rsi
  401aa1:	je     0x401a82
  401aa3:	mov    rax,QWORD PTR [rbx]
  401aa6:	test   rax,rax
  401aa9:	je     0x401aad
  401aab:	call   rax
  401aad:	add    rbx,0x8
  401ab1:	cmp    rbx,rsi
  401ab4:	jne    0x401aa3
  401ab6:	mov    eax,0x1
  401abb:	add    rsp,0x28
  401abf:	pop    rbx
  401ac0:	pop    rsi
  401ac1:	ret    
  401ac2:	call   0x402740
  401ac7:	jmp    0x401a82
  401ac9:	nop    DWORD PTR [rax+0x0]
  401ad0:	xor    eax,eax
  401ad2:	ret    
  401ad3:	nop
  401ad4:	nop
  401ad5:	nop
  401ad6:	nop
  401ad7:	nop
  401ad8:	nop
  401ad9:	nop
  401ada:	nop
  401adb:	nop
  401adc:	nop
  401add:	nop
  401ade:	nop
  401adf:	nop
  401ae0:	sub    rsp,0x58
  401ae4:	mov    rax,QWORD PTR [rip+0x8b75]        # 0x40a660
  401aeb:	test   rax,rax
  401aee:	je     0x401b1c
  401af0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401af9:	mov    DWORD PTR [rsp+0x20],ecx
  401afd:	lea    rcx,[rsp+0x20]
  401b02:	mov    QWORD PTR [rsp+0x28],rdx
  401b07:	movsd  QWORD PTR [rsp+0x30],xmm2
  401b0d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401b13:	movsd  QWORD PTR [rsp+0x40],xmm0
  401b19:	call   rax
  401b1b:	nop
  401b1c:	add    rsp,0x58
  401b20:	ret    
  401b21:	nop    DWORD PTR [rax+rax*1+0x0]
  401b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b30:	mov    QWORD PTR [rip+0x8b29],rcx        # 0x40a660
  401b37:	jmp    0x402cc8
  401b3c:	nop    DWORD PTR [rax+0x0]
  401b40:	push   rsi
  401b41:	push   rbx
  401b42:	sub    rsp,0x78
  401b46:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401b4b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401b50:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401b56:	cmp    DWORD PTR [rcx],0x6
  401b59:	ja     0x401c30
  401b5f:	mov    edx,DWORD PTR [rcx]
  401b61:	lea    rax,[rip+0x4ecc]        # 0x406a34
  401b68:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401b6c:	add    rax,rdx
  401b6f:	jmp    rax
  401b71:	lea    rbx,[rip+0x4d98]        # 0x406910
  401b78:	nop    DWORD PTR [rax+rax*1+0x0]
  401b80:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401b86:	mov    rsi,QWORD PTR [rcx+0x8]
  401b8a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401b8f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401b94:	call   0x402ce0
  401b99:	movsd  QWORD PTR [rsp+0x30],xmm8
  401ba0:	lea    rcx,[rax+0x60]
  401ba4:	lea    rdx,[rip+0x4e5d]        # 0x406a08
  401bab:	movsd  QWORD PTR [rsp+0x28],xmm7
  401bb1:	mov    r9,rsi
  401bb4:	mov    r8,rbx
  401bb7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401bbd:	call   0x402c60
  401bc2:	nop
  401bc3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401bc8:	xor    eax,eax
  401bca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401bcf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401bd5:	add    rsp,0x78
  401bd9:	pop    rbx
  401bda:	pop    rsi
  401bdb:	ret    
  401bdc:	nop    DWORD PTR [rax+0x0]
  401be0:	lea    rbx,[rip+0x4d48]        # 0x40692f
  401be7:	jmp    0x401b80
  401be9:	nop    DWORD PTR [rax+0x0]
  401bf0:	lea    rbx,[rip+0x4d59]        # 0x406950
  401bf7:	jmp    0x401b80
  401bf9:	nop    DWORD PTR [rax+0x0]
  401c00:	lea    rbx,[rip+0x4db9]        # 0x4069c0
  401c07:	jmp    0x401b80
  401c0c:	nop    DWORD PTR [rax+0x0]
  401c10:	lea    rbx,[rip+0x4d81]        # 0x406998
  401c17:	jmp    0x401b80
  401c1c:	nop    DWORD PTR [rax+0x0]
  401c20:	lea    rbx,[rip+0x4d49]        # 0x406970
  401c27:	jmp    0x401b80
  401c2c:	nop    DWORD PTR [rax+0x0]
  401c30:	lea    rbx,[rip+0x4dbf]        # 0x4069f6
  401c37:	jmp    0x401b80
  401c3c:	nop
  401c3d:	nop
  401c3e:	nop
  401c3f:	nop
  401c40:	fninit 
  401c42:	ret    
  401c43:	nop
  401c44:	nop
  401c45:	nop
  401c46:	nop
  401c47:	nop
  401c48:	nop
  401c49:	nop
  401c4a:	nop
  401c4b:	nop
  401c4c:	nop
  401c4d:	nop
  401c4e:	nop
  401c4f:	nop
  401c50:	mov    rax,rcx
  401c53:	ret    
  401c54:	xchg   ax,ax
  401c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c60:	mov    rax,rcx
  401c63:	ret    
  401c64:	nop
  401c65:	nop
  401c66:	nop
  401c67:	nop
  401c68:	nop
  401c69:	nop
  401c6a:	nop
  401c6b:	nop
  401c6c:	nop
  401c6d:	nop
  401c6e:	nop
  401c6f:	nop
  401c70:	push   rsi
  401c71:	push   rbx
  401c72:	sub    rsp,0x38
  401c76:	lea    rax,[rsp+0x58]
  401c7b:	mov    rbx,rcx
  401c7e:	mov    QWORD PTR [rsp+0x58],rdx
  401c83:	mov    QWORD PTR [rsp+0x60],r8
  401c88:	mov    QWORD PTR [rsp+0x68],r9
  401c8d:	mov    QWORD PTR [rsp+0x28],rax
  401c92:	call   0x402ce0
  401c97:	lea    rcx,[rip+0x4db2]        # 0x406a50
  401c9e:	lea    r9,[rax+0x60]
  401ca2:	mov    r8d,0x1b
  401ca8:	mov    edx,0x1
  401cad:	call   0x402c50
  401cb2:	mov    rsi,QWORD PTR [rsp+0x28]
  401cb7:	call   0x402ce0
  401cbc:	lea    rcx,[rax+0x60]
  401cc0:	mov    rdx,rbx
  401cc3:	mov    r8,rsi
  401cc6:	call   0x402c00
  401ccb:	call   0x402c90
  401cd0:	nop
  401cd1:	nop    DWORD PTR [rax+rax*1+0x0]
  401cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ce0:	push   r13
  401ce2:	push   r12
  401ce4:	push   rbp
  401ce5:	push   rdi
  401ce6:	push   rsi
  401ce7:	push   rbx
  401ce8:	sub    rsp,0x58
  401cec:	movsxd rbp,DWORD PTR [rip+0x8991]        # 0x40a684
  401cf3:	mov    rbx,rcx
  401cf6:	mov    rsi,rdx
  401cf9:	mov    rdi,r8
  401cfc:	test   ebp,ebp
  401cfe:	jle    0x401dfa
  401d04:	mov    rax,QWORD PTR [rip+0x897d]        # 0x40a688
  401d0b:	xor    r9d,r9d
  401d0e:	add    rax,0x8
  401d12:	mov    r10,QWORD PTR [rax]
  401d15:	cmp    rbx,r10
  401d18:	jb     0x401d2e
  401d1a:	mov    rdx,QWORD PTR [rax+0x8]
  401d1e:	mov    r11d,DWORD PTR [rdx+0x8]
  401d22:	add    r10,r11
  401d25:	cmp    rbx,r10
  401d28:	jb     0x401de0
  401d2e:	add    r9d,0x1
  401d32:	add    rax,0x18
  401d36:	cmp    r9d,ebp
  401d39:	jne    0x401d12
  401d3b:	mov    rcx,rbx
  401d3e:	call   0x402950
  401d43:	test   rax,rax
  401d46:	mov    r12,rax
  401d49:	je     0x401e32
  401d4f:	lea    rbp,[rbp+rbp*2+0x0]
  401d54:	shl    rbp,0x3
  401d58:	mov    r13,rbp
  401d5b:	add    r13,QWORD PTR [rip+0x8926]        # 0x40a688
  401d62:	mov    QWORD PTR [r13+0x10],rax
  401d66:	mov    DWORD PTR [r13+0x0],0x0
  401d6e:	call   0x402a70
  401d73:	mov    edx,DWORD PTR [r12+0xc]
  401d78:	mov    r8d,0x30
  401d7e:	add    rax,rdx
  401d81:	lea    rdx,[rsp+0x20]
  401d86:	mov    QWORD PTR [r13+0x8],rax
  401d8a:	mov    rax,QWORD PTR [rip+0x88f7]        # 0x40a688
  401d91:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401d96:	call   QWORD PTR [rip+0x97f4]        # 0x40b590
  401d9c:	test   rax,rax
  401d9f:	je     0x401e15
  401da1:	mov    eax,DWORD PTR [rsp+0x44]
  401da5:	lea    edx,[rax-0x4]
  401da8:	and    edx,0xfffffffb
  401dab:	je     0x401dd9
  401dad:	sub    eax,0x40
  401db0:	and    eax,0xffffffbf
  401db3:	je     0x401dd9
  401db5:	mov    r9,rbp
  401db8:	add    r9,QWORD PTR [rip+0x88c9]        # 0x40a688
  401dbf:	mov    r8d,0x40
  401dc5:	mov    rdx,QWORD PTR [rsp+0x38]
  401dca:	mov    rcx,QWORD PTR [rsp+0x20]
  401dcf:	call   QWORD PTR [rip+0x97b3]        # 0x40b588
  401dd5:	test   eax,eax
  401dd7:	je     0x401e01
  401dd9:	add    DWORD PTR [rip+0x88a4],0x1        # 0x40a684
  401de0:	mov    r8,rdi
  401de3:	mov    rdx,rsi
  401de6:	mov    rcx,rbx
  401de9:	add    rsp,0x58
  401ded:	pop    rbx
  401dee:	pop    rsi
  401def:	pop    rdi
  401df0:	pop    rbp
  401df1:	pop    r12
  401df3:	pop    r13
  401df5:	jmp    0x402c40
  401dfa:	xor    ebp,ebp
  401dfc:	jmp    0x401d3b
  401e01:	call   QWORD PTR [rip+0x9701]        # 0x40b508
  401e07:	lea    rcx,[rip+0x4cba]        # 0x406ac8
  401e0e:	mov    edx,eax
  401e10:	call   0x401c70
  401e15:	mov    rax,QWORD PTR [rip+0x886c]        # 0x40a688
  401e1c:	mov    edx,DWORD PTR [r12+0x8]
  401e21:	lea    rcx,[rip+0x4c68]        # 0x406a90
  401e28:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401e2d:	call   0x401c70
  401e32:	lea    rcx,[rip+0x4c37]        # 0x406a70
  401e39:	mov    rdx,rbx
  401e3c:	call   0x401c70
  401e41:	nop
  401e42:	nop    DWORD PTR [rax+0x0]
  401e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e50:	push   rbp
  401e51:	push   r14
  401e53:	push   r13
  401e55:	push   r12
  401e57:	push   rdi
  401e58:	push   rsi
  401e59:	push   rbx
  401e5a:	mov    rbp,rsp
  401e5d:	sub    rsp,0x60
  401e61:	mov    ebx,DWORD PTR [rip+0x8819]        # 0x40a680
  401e67:	test   ebx,ebx
  401e69:	je     0x401e80
  401e6b:	mov    rsp,rbp
  401e6e:	pop    rbx
  401e6f:	pop    rsi
  401e70:	pop    rdi
  401e71:	pop    r12
  401e73:	pop    r13
  401e75:	pop    r14
  401e77:	pop    rbp
  401e78:	ret    
  401e79:	nop    DWORD PTR [rax+0x0]
  401e80:	mov    DWORD PTR [rip+0x87f6],0x1        # 0x40a680
  401e8a:	call   0x4029a0
  401e8f:	cdqe   
  401e91:	lea    rax,[rax+rax*2]
  401e95:	lea    rax,[rax*8+0x1e]
  401e9d:	and    rax,0xfffffffffffffff0
  401ea1:	call   0x402bc0
  401ea6:	mov    rsi,QWORD PTR [rip+0x4d03]        # 0x406bb0
  401ead:	mov    rbx,QWORD PTR [rip+0x4d0c]        # 0x406bc0
  401eb4:	sub    rsp,rax
  401eb7:	mov    DWORD PTR [rip+0x87c3],0x0        # 0x40a684
  401ec1:	lea    rax,[rsp+0x20]
  401ec6:	mov    QWORD PTR [rip+0x87bb],rax        # 0x40a688
  401ecd:	mov    rax,rsi
  401ed0:	sub    rax,rbx
  401ed3:	cmp    rax,0x7
  401ed7:	jle    0x401e6b
  401ed9:	cmp    rax,0xb
  401edd:	jle    0x401f05
  401edf:	mov    r11d,DWORD PTR [rbx]
  401ee2:	test   r11d,r11d
  401ee5:	jne    0x402030
  401eeb:	mov    r10d,DWORD PTR [rbx+0x4]
  401eef:	test   r10d,r10d
  401ef2:	jne    0x402030
  401ef8:	mov    r9d,DWORD PTR [rbx+0x8]
  401efc:	test   r9d,r9d
  401eff:	jne    0x401f1c
  401f01:	add    rbx,0xc
  401f05:	mov    r8d,DWORD PTR [rbx]
  401f08:	test   r8d,r8d
  401f0b:	jne    0x402030
  401f11:	mov    ecx,DWORD PTR [rbx+0x4]
  401f14:	test   ecx,ecx
  401f16:	jne    0x402030
  401f1c:	mov    edx,DWORD PTR [rbx+0x8]
  401f1f:	cmp    edx,0x1
  401f22:	jne    0x40213c
  401f28:	add    rbx,0xc
  401f2c:	cmp    rbx,rsi
  401f2f:	jae    0x401e6b
  401f35:	mov    r12,QWORD PTR [rip+0x4ca4]        # 0x406be0
  401f3c:	lea    r13,[rbp-0x30]
  401f40:	movabs r14,0xffffffff00000000
  401f4a:	mov    ecx,DWORD PTR [rbx+0x4]
  401f4d:	mov    eax,DWORD PTR [rbx]
  401f4f:	movzx  edx,BYTE PTR [rbx+0x8]
  401f53:	add    rax,r12
  401f56:	add    rcx,r12
  401f59:	cmp    edx,0x10
  401f5c:	mov    r8,QWORD PTR [rax]
  401f5f:	je     0x4020a6
  401f65:	jbe    0x40206d
  401f6b:	cmp    edx,0x20
  401f6e:	je     0x4020ef
  401f74:	cmp    edx,0x40
  401f77:	jne    0x4020db
  401f7d:	sub    r8,rax
  401f80:	mov    rdx,r13
  401f83:	mov    rdi,r13
  401f86:	mov    rax,r8
  401f89:	add    rax,QWORD PTR [rcx]
  401f8c:	mov    r8d,0x8
  401f92:	mov    QWORD PTR [rbp-0x30],rax
  401f96:	call   0x401ce0
  401f9b:	add    rbx,0xc
  401f9f:	cmp    rbx,rsi
  401fa2:	jb     0x401f4a
  401fa4:	mov    eax,DWORD PTR [rip+0x86da]        # 0x40a684
  401faa:	xor    ebx,ebx
  401fac:	xor    esi,esi
  401fae:	test   eax,eax
  401fb0:	jle    0x401e6b
  401fb6:	mov    r14,QWORD PTR [rip+0x95d3]        # 0x40b590
  401fbd:	lea    r13,[rbp-0x34]
  401fc1:	mov    r12,QWORD PTR [rip+0x95c0]        # 0x40b588
  401fc8:	jmp    0x401fe3
  401fca:	nop    WORD PTR [rax+rax*1+0x0]
  401fd0:	add    esi,0x1
  401fd3:	add    rbx,0x18
  401fd7:	cmp    esi,DWORD PTR [rip+0x86a7]        # 0x40a684
  401fdd:	jge    0x401e6b
  401fe3:	mov    rax,rbx
  401fe6:	add    rax,QWORD PTR [rip+0x869b]        # 0x40a688
  401fed:	mov    edx,DWORD PTR [rax]
  401fef:	test   edx,edx
  401ff1:	je     0x401fd0
  401ff3:	mov    rcx,QWORD PTR [rax+0x8]
  401ff7:	mov    r8d,0x30
  401ffd:	mov    rdx,rdi
  402000:	call   r14
  402003:	test   rax,rax
  402006:	je     0x40211e
  40200c:	mov    rax,QWORD PTR [rip+0x8675]        # 0x40a688
  402013:	mov    r9,r13
  402016:	mov    rdx,QWORD PTR [rbp-0x18]
  40201a:	mov    rcx,QWORD PTR [rbp-0x30]
  40201e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402022:	call   r12
  402025:	jmp    0x401fd0
  402027:	nop    WORD PTR [rax+rax*1+0x0]
  402030:	cmp    rbx,rsi
  402033:	jae    0x401e6b
  402039:	mov    r12,QWORD PTR [rip+0x4ba0]        # 0x406be0
  402040:	lea    rdi,[rbp-0x30]
  402044:	mov    ecx,DWORD PTR [rbx+0x4]
  402047:	mov    eax,DWORD PTR [rbx]
  402049:	mov    r8d,0x4
  40204f:	mov    rdx,rdi
  402052:	add    rbx,0x8
  402056:	add    rcx,r12
  402059:	add    eax,DWORD PTR [rcx]
  40205b:	mov    DWORD PTR [rbp-0x30],eax
  40205e:	call   0x401ce0
  402063:	cmp    rbx,rsi
  402066:	jb     0x402044
  402068:	jmp    0x401fa4
  40206d:	cmp    edx,0x8
  402070:	jne    0x4020db
  402072:	movzx  edx,BYTE PTR [rcx]
  402075:	mov    rdi,r13
  402078:	mov    r10,rdx
  40207b:	or     r10,0xffffffffffffff00
  402082:	test   dl,dl
  402084:	cmovs  rdx,r10
  402088:	sub    rdx,rax
  40208b:	lea    rax,[r8+rdx*1]
  40208f:	mov    r8d,0x1
  402095:	mov    rdx,r13
  402098:	mov    QWORD PTR [rbp-0x30],rax
  40209c:	call   0x401ce0
  4020a1:	jmp    0x401f9b
  4020a6:	movzx  edx,WORD PTR [rcx]
  4020a9:	mov    rdi,r13
  4020ac:	mov    r10,rdx
  4020af:	or     r10,0xffffffffffff0000
  4020b6:	test   dx,dx
  4020b9:	cmovs  rdx,r10
  4020bd:	sub    rdx,rax
  4020c0:	lea    rax,[r8+rdx*1]
  4020c4:	mov    r8d,0x2
  4020ca:	mov    rdx,r13
  4020cd:	mov    QWORD PTR [rbp-0x30],rax
  4020d1:	call   0x401ce0
  4020d6:	jmp    0x401f9b
  4020db:	lea    rcx,[rip+0x4a46]        # 0x406b28
  4020e2:	mov    QWORD PTR [rbp-0x30],0x0
  4020ea:	call   0x401c70
  4020ef:	mov    edx,DWORD PTR [rcx]
  4020f1:	mov    rdi,r13
  4020f4:	mov    r10,rdx
  4020f7:	or     r10,r14
  4020fa:	test   edx,edx
  4020fc:	cmovs  rdx,r10
  402100:	sub    rdx,rax
  402103:	lea    rax,[r8+rdx*1]
  402107:	mov    r8d,0x4
  40210d:	mov    rdx,r13
  402110:	mov    QWORD PTR [rbp-0x30],rax
  402114:	call   0x401ce0
  402119:	jmp    0x401f9b
  40211e:	add    rbx,QWORD PTR [rip+0x8563]        # 0x40a688
  402125:	lea    rcx,[rip+0x4964]        # 0x406a90
  40212c:	mov    rax,QWORD PTR [rbx+0x10]
  402130:	mov    r8,QWORD PTR [rbx+0x8]
  402134:	mov    edx,DWORD PTR [rax+0x8]
  402137:	call   0x401c70
  40213c:	lea    rcx,[rip+0x49ad]        # 0x406af0
  402143:	call   0x401c70
  402148:	nop
  402149:	nop
  40214a:	nop
  40214b:	nop
  40214c:	nop
  40214d:	nop
  40214e:	nop
  40214f:	nop
  402150:	sub    rsp,0x28
  402154:	mov    eax,DWORD PTR [rcx]
  402156:	cmp    eax,0xc0000091
  40215b:	ja     0x4021c0
  40215d:	cmp    eax,0xc000008d
  402162:	jae    0x4021df
  402164:	cmp    eax,0xc0000008
  402169:	je     0x402280
  40216f:	ja     0x402250
  402175:	cmp    eax,0x80000002
  40217a:	je     0x402280
  402180:	cmp    eax,0xc0000005
  402185:	jne    0x40225e
  40218b:	xor    edx,edx
  40218d:	mov    ecx,0xb
  402192:	call   0x402c20
  402197:	cmp    rax,0x1
  40219b:	je     0x4022e0
  4021a1:	test   rax,rax
  4021a4:	je     0x4022c0
  4021aa:	mov    ecx,0xb
  4021af:	call   rax
  4021b1:	xor    eax,eax
  4021b3:	add    rsp,0x28
  4021b7:	ret    
  4021b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4021c0:	cmp    eax,0xc0000094
  4021c5:	je     0x402290
  4021cb:	ja     0x402210
  4021cd:	cmp    eax,0xc0000092
  4021d2:	je     0x402280
  4021d8:	cmp    eax,0xc0000093
  4021dd:	jne    0x40225e
  4021df:	xor    edx,edx
  4021e1:	mov    ecx,0x8
  4021e6:	call   0x402c20
  4021eb:	cmp    rax,0x1
  4021ef:	mov    rdx,rax
  4021f2:	je     0x402268
  4021f4:	test   rdx,rdx
  4021f7:	mov    eax,0x1
  4021fc:	je     0x4021b3
  4021fe:	mov    ecx,0x8
  402203:	call   rdx
  402205:	xor    eax,eax
  402207:	add    rsp,0x28
  40220b:	ret    
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	cmp    eax,0xc0000095
  402215:	je     0x402280
  402217:	cmp    eax,0xc0000096
  40221c:	jne    0x40225e
  40221e:	xor    edx,edx
  402220:	mov    ecx,0x4
  402225:	call   0x402c20
  40222a:	cmp    rax,0x1
  40222e:	je     0x4022ca
  402234:	test   rax,rax
  402237:	je     0x4022c0
  40223d:	mov    ecx,0x4
  402242:	call   rax
  402244:	xor    eax,eax
  402246:	jmp    0x4021b3
  40224b:	nop    DWORD PTR [rax+rax*1+0x0]
  402250:	cmp    eax,0xc000001d
  402255:	je     0x40221e
  402257:	cmp    eax,0xc000008c
  40225c:	je     0x402280
  40225e:	mov    eax,0x1
  402263:	add    rsp,0x28
  402267:	ret    
  402268:	mov    edx,0x1
  40226d:	mov    ecx,0x8
  402272:	call   0x402c20
  402277:	call   0x401c40
  40227c:	nop    DWORD PTR [rax+0x0]
  402280:	xor    eax,eax
  402282:	add    rsp,0x28
  402286:	ret    
  402287:	nop    WORD PTR [rax+rax*1+0x0]
  402290:	xor    edx,edx
  402292:	mov    ecx,0x8
  402297:	call   0x402c20
  40229c:	cmp    rax,0x1
  4022a0:	mov    rdx,rax
  4022a3:	jne    0x4021f4
  4022a9:	mov    edx,0x1
  4022ae:	mov    ecx,0x8
  4022b3:	call   0x402c20
  4022b8:	xor    eax,eax
  4022ba:	jmp    0x4021b3
  4022bf:	nop
  4022c0:	mov    eax,0x4
  4022c5:	add    rsp,0x28
  4022c9:	ret    
  4022ca:	mov    edx,0x1
  4022cf:	mov    ecx,0x4
  4022d4:	call   0x402c20
  4022d9:	xor    eax,eax
  4022db:	jmp    0x4021b3
  4022e0:	mov    edx,0x1
  4022e5:	mov    ecx,0xb
  4022ea:	call   0x402c20
  4022ef:	xor    eax,eax
  4022f1:	jmp    0x4021b3
  4022f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402300:	push   r12
  402302:	push   rbp
  402303:	push   rdi
  402304:	push   rsi
  402305:	push   rbx
  402306:	sub    rsp,0x20
  40230a:	call   0x402a70
  40230f:	mov    rbp,rax
  402312:	mov    eax,DWORD PTR [rip+0x83b0]        # 0x40a6c8
  402318:	test   eax,eax
  40231a:	jne    0x402341
  40231c:	test   rbp,rbp
  40231f:	je     0x402341
  402321:	lea    rcx,[rip+0x4838]        # 0x406b60
  402328:	mov    DWORD PTR [rip+0x8396],0x1        # 0x40a6c8
  402332:	call   0x4028b0
  402337:	test   rax,rax
  40233a:	je     0x402350
  40233c:	mov    eax,0x1
  402341:	add    rsp,0x20
  402345:	pop    rbx
  402346:	pop    rsi
  402347:	pop    rdi
  402348:	pop    rbp
  402349:	pop    r12
  40234b:	ret    
  40234c:	nop    DWORD PTR [rax+0x0]
  402350:	lea    rbx,[rip+0x84a9]        # 0x40a800
  402357:	mov    ecx,0x30
  40235c:	lea    rdx,[rip+0x839d]        # 0x40a700
  402363:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402150
  40236a:	xor    esi,esi
  40236c:	mov    rdi,rbx
  40236f:	rep stos QWORD PTR es:[rdi],rax
  402372:	mov    rdi,rdx
  402375:	sub    r12,rbp
  402378:	mov    cl,0x20
  40237a:	rep stos QWORD PTR es:[rdi],rax
  40237d:	mov    rdi,rdx
  402380:	jmp    0x4023b0
  402382:	mov    BYTE PTR [rdi],0x9
  402385:	mov    DWORD PTR [rdi+0x4],r12d
  402389:	add    rsi,0x1
  40238d:	mov    edx,DWORD PTR [rax+0xc]
  402390:	add    rbx,0xc
  402394:	mov    DWORD PTR [rbx-0xc],edx
  402397:	add    edx,DWORD PTR [rax+0x8]
  40239a:	mov    rax,rdi
  40239d:	sub    rax,rbp
  4023a0:	add    rdi,0x8
  4023a4:	mov    DWORD PTR [rbx-0x4],eax
  4023a7:	mov    DWORD PTR [rbx-0x8],edx
  4023aa:	cmp    rsi,0x20
  4023ae:	je     0x4023e5
  4023b0:	mov    rcx,rsi
  4023b3:	call   0x4029e0
  4023b8:	test   rax,rax
  4023bb:	jne    0x402382
  4023bd:	test   rsi,rsi
  4023c0:	je     0x40233c
  4023c6:	mov    edx,esi
  4023c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4023d0:	mov    r8,rbp
  4023d3:	lea    rcx,[rip+0x8426]        # 0x40a800
  4023da:	call   QWORD PTR [rip+0x9160]        # 0x40b540
  4023e0:	jmp    0x40233c
  4023e5:	mov    edx,0x20
  4023ea:	jmp    0x4023d0
  4023ec:	nop    DWORD PTR [rax+0x0]
  4023f0:	push   rbx
  4023f1:	sub    rsp,0x20
  4023f5:	mov    rdx,QWORD PTR [rcx]
  4023f8:	mov    eax,DWORD PTR [rdx]
  4023fa:	mov    r8d,eax
  4023fd:	and    r8d,0x20ffffff
  402404:	cmp    r8d,0x20474343
  40240b:	je     0x402510
  402411:	cmp    eax,0xc0000091
  402416:	mov    rbx,rcx
  402419:	ja     0x4024a0
  40241f:	cmp    eax,0xc000008d
  402424:	jae    0x4024b7
  40242a:	cmp    eax,0xc0000008
  40242f:	je     0x402463
  402431:	ja     0x402470
  402433:	cmp    eax,0x80000002
  402438:	je     0x402463
  40243a:	cmp    eax,0xc0000005
  40243f:	jne    0x402482
  402441:	xor    edx,edx
  402443:	mov    ecx,0xb
  402448:	call   0x402c20
  40244d:	cmp    rax,0x1
  402451:	je     0x402580
  402457:	test   rax,rax
  40245a:	je     0x402482
  40245c:	mov    ecx,0xb
  402461:	call   rax
  402463:	mov    eax,0xffffffff
  402468:	add    rsp,0x20
  40246c:	pop    rbx
  40246d:	ret    
  40246e:	xchg   ax,ax
  402470:	cmp    eax,0xc000001d
  402475:	je     0x402536
  40247b:	cmp    eax,0xc000008c
  402480:	je     0x402463
  402482:	mov    rax,QWORD PTR [rip+0x8237]        # 0x40a6c0
  402489:	test   rax,rax
  40248c:	je     0x402468
  40248e:	mov    rcx,rbx
  402491:	add    rsp,0x20
  402495:	pop    rbx
  402496:	rex.W jmp rax
  402499:	nop    DWORD PTR [rax+0x0]
  4024a0:	cmp    eax,0xc0000094
  4024a5:	je     0x4024e2
  4024a7:	ja     0x402520
  4024a9:	cmp    eax,0xc0000092
  4024ae:	je     0x402463
  4024b0:	cmp    eax,0xc0000093
  4024b5:	jne    0x402482
  4024b7:	xor    edx,edx
  4024b9:	mov    ecx,0x8
  4024be:	call   0x402c20
  4024c3:	cmp    rax,0x1
  4024c7:	jne    0x4024f4
  4024c9:	mov    edx,0x1
  4024ce:	mov    ecx,0x8
  4024d3:	call   0x402c20
  4024d8:	call   0x401c40
  4024dd:	jmp    0x402463
  4024e2:	xor    edx,edx
  4024e4:	mov    ecx,0x8
  4024e9:	call   0x402c20
  4024ee:	cmp    rax,0x1
  4024f2:	je     0x402562
  4024f4:	test   rax,rax
  4024f7:	je     0x402482
  4024f9:	mov    ecx,0x8
  4024fe:	call   rax
  402500:	mov    eax,0xffffffff
  402505:	jmp    0x402468
  40250a:	nop    WORD PTR [rax+rax*1+0x0]
  402510:	test   BYTE PTR [rdx+0x4],0x1
  402514:	jne    0x402411
  40251a:	jmp    0x402463
  40251f:	nop
  402520:	cmp    eax,0xc0000095
  402525:	je     0x402463
  40252b:	cmp    eax,0xc0000096
  402530:	jne    0x402482
  402536:	xor    edx,edx
  402538:	mov    ecx,0x4
  40253d:	call   0x402c20
  402542:	cmp    rax,0x1
  402546:	je     0x402594
  402548:	test   rax,rax
  40254b:	je     0x402482
  402551:	mov    ecx,0x4
  402556:	call   rax
  402558:	mov    eax,0xffffffff
  40255d:	jmp    0x402468
  402562:	mov    edx,0x1
  402567:	mov    ecx,0x8
  40256c:	call   0x402c20
  402571:	jmp    0x402463
  402576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402580:	mov    edx,0x1
  402585:	mov    ecx,0xb
  40258a:	call   0x402c20
  40258f:	jmp    0x402463
  402594:	mov    edx,0x1
  402599:	mov    ecx,0x4
  40259e:	call   0x402c20
  4025a3:	jmp    0x402463
  4025a8:	nop
  4025a9:	nop
  4025aa:	nop
  4025ab:	nop
  4025ac:	nop
  4025ad:	nop
  4025ae:	nop
  4025af:	nop
  4025b0:	push   rbp
  4025b1:	push   rdi
  4025b2:	push   rsi
  4025b3:	push   rbx
  4025b4:	sub    rsp,0x28
  4025b8:	lea    rcx,[rip+0x83e1]        # 0x40a9a0
  4025bf:	call   QWORD PTR [rip+0x8f23]        # 0x40b4e8
  4025c5:	mov    rbx,QWORD PTR [rip+0x83b4]        # 0x40a980
  4025cc:	test   rbx,rbx
  4025cf:	je     0x402604
  4025d1:	mov    rbp,QWORD PTR [rip+0x8fa0]        # 0x40b578
  4025d8:	mov    rdi,QWORD PTR [rip+0x8f29]        # 0x40b508
  4025df:	nop
  4025e0:	mov    ecx,DWORD PTR [rbx]
  4025e2:	call   rbp
  4025e4:	mov    rsi,rax
  4025e7:	call   rdi
  4025e9:	test   eax,eax
  4025eb:	jne    0x4025fb
  4025ed:	test   rsi,rsi
  4025f0:	je     0x4025fb
  4025f2:	mov    rax,QWORD PTR [rbx+0x8]
  4025f6:	mov    rcx,rsi
  4025f9:	call   rax
  4025fb:	mov    rbx,QWORD PTR [rbx+0x10]
  4025ff:	test   rbx,rbx
  402602:	jne    0x4025e0
  402604:	mov    rax,QWORD PTR [rip+0x8f25]        # 0x40b530
  40260b:	lea    rcx,[rip+0x838e]        # 0x40a9a0
  402612:	add    rsp,0x28
  402616:	pop    rbx
  402617:	pop    rsi
  402618:	pop    rdi
  402619:	pop    rbp
  40261a:	rex.W jmp rax
  40261d:	nop    DWORD PTR [rax]
  402620:	push   rdi
  402621:	push   rsi
  402622:	push   rbx
  402623:	sub    rsp,0x20
  402627:	mov    eax,DWORD PTR [rip+0x835b]        # 0x40a988
  40262d:	test   eax,eax
  40262f:	jne    0x402640
  402631:	add    rsp,0x20
  402635:	pop    rbx
  402636:	pop    rsi
  402637:	pop    rdi
  402638:	ret    
  402639:	nop    DWORD PTR [rax+0x0]
  402640:	mov    rsi,rdx
  402643:	mov    edi,ecx
  402645:	mov    edx,0x18
  40264a:	mov    ecx,0x1
  40264f:	call   0x402c70
  402654:	test   rax,rax
  402657:	mov    rbx,rax
  40265a:	je     0x402698
  40265c:	mov    DWORD PTR [rax],edi
  40265e:	mov    QWORD PTR [rax+0x8],rsi
  402662:	lea    rcx,[rip+0x8337]        # 0x40a9a0
  402669:	call   QWORD PTR [rip+0x8e79]        # 0x40b4e8
  40266f:	mov    rax,QWORD PTR [rip+0x830a]        # 0x40a980
  402676:	lea    rcx,[rip+0x8323]        # 0x40a9a0
  40267d:	mov    QWORD PTR [rip+0x82fc],rbx        # 0x40a980
  402684:	mov    QWORD PTR [rbx+0x10],rax
  402688:	call   QWORD PTR [rip+0x8ea2]        # 0x40b530
  40268e:	xor    eax,eax
  402690:	add    rsp,0x20
  402694:	pop    rbx
  402695:	pop    rsi
  402696:	pop    rdi
  402697:	ret    
  402698:	mov    eax,0xffffffff
  40269d:	jmp    0x402631
  40269f:	nop
  4026a0:	push   rbx
  4026a1:	sub    rsp,0x20
  4026a5:	mov    eax,DWORD PTR [rip+0x82dd]        # 0x40a988
  4026ab:	test   eax,eax
  4026ad:	jne    0x4026c0
  4026af:	xor    eax,eax
  4026b1:	add    rsp,0x20
  4026b5:	pop    rbx
  4026b6:	ret    
  4026b7:	nop    WORD PTR [rax+rax*1+0x0]
  4026c0:	mov    ebx,ecx
  4026c2:	lea    rcx,[rip+0x82d7]        # 0x40a9a0
  4026c9:	call   QWORD PTR [rip+0x8e19]        # 0x40b4e8
  4026cf:	mov    rdx,QWORD PTR [rip+0x82aa]        # 0x40a980
  4026d6:	test   rdx,rdx
  4026d9:	je     0x4026f7
  4026db:	mov    eax,DWORD PTR [rdx]
  4026dd:	cmp    eax,ebx
  4026df:	jne    0x4026ee
  4026e1:	jmp    0x40272f
  4026e3:	mov    r8d,DWORD PTR [rax]
  4026e6:	cmp    r8d,ebx
  4026e9:	je     0x402710
  4026eb:	mov    rdx,rax
  4026ee:	mov    rax,QWORD PTR [rdx+0x10]
  4026f2:	test   rax,rax
  4026f5:	jne    0x4026e3
  4026f7:	lea    rcx,[rip+0x82a2]        # 0x40a9a0
  4026fe:	call   QWORD PTR [rip+0x8e2c]        # 0x40b530
  402704:	xor    eax,eax
  402706:	add    rsp,0x20
  40270a:	pop    rbx
  40270b:	ret    
  40270c:	nop    DWORD PTR [rax+0x0]
  402710:	mov    rcx,rax
  402713:	mov    rax,QWORD PTR [rax+0x10]
  402717:	mov    QWORD PTR [rdx+0x10],rax
  40271b:	call   0x402c58
  402720:	lea    rcx,[rip+0x8279]        # 0x40a9a0
  402727:	call   QWORD PTR [rip+0x8e03]        # 0x40b530
  40272d:	jmp    0x402704
  40272f:	mov    rax,QWORD PTR [rdx+0x10]
  402733:	mov    rcx,rdx
  402736:	mov    QWORD PTR [rip+0x8243],rax        # 0x40a980
  40273d:	jmp    0x40271b
  40273f:	nop
  402740:	push   rbx
  402741:	sub    rsp,0x20
  402745:	cmp    edx,0x1
  402748:	je     0x4027e0
  40274e:	jb     0x402780
  402750:	cmp    edx,0x2
  402753:	je     0x402770
  402755:	cmp    edx,0x3
  402758:	jne    0x402775
  40275a:	mov    eax,DWORD PTR [rip+0x8228]        # 0x40a988
  402760:	test   eax,eax
  402762:	je     0x402775
  402764:	call   0x4025b0
  402769:	jmp    0x402775
  40276b:	nop    DWORD PTR [rax+rax*1+0x0]
  402770:	call   0x401c40
  402775:	mov    eax,0x1
  40277a:	add    rsp,0x20
  40277e:	pop    rbx
  40277f:	ret    
  402780:	mov    eax,DWORD PTR [rip+0x8202]        # 0x40a988
  402786:	test   eax,eax
  402788:	jne    0x402810
  40278e:	mov    eax,DWORD PTR [rip+0x81f4]        # 0x40a988
  402794:	cmp    eax,0x1
  402797:	jne    0x402775
  402799:	mov    rcx,QWORD PTR [rip+0x81e0]        # 0x40a980
  4027a0:	test   rcx,rcx
  4027a3:	je     0x4027b6
  4027a5:	mov    rbx,QWORD PTR [rcx+0x10]
  4027a9:	call   0x402c58
  4027ae:	test   rbx,rbx
  4027b1:	mov    rcx,rbx
  4027b4:	jne    0x4027a5
  4027b6:	lea    rcx,[rip+0x81e3]        # 0x40a9a0
  4027bd:	mov    QWORD PTR [rip+0x81b8],0x0        # 0x40a980
  4027c8:	mov    DWORD PTR [rip+0x81b6],0x0        # 0x40a988
  4027d2:	call   QWORD PTR [rip+0x8d08]        # 0x40b4e0
  4027d8:	jmp    0x402775
  4027da:	nop    WORD PTR [rax+rax*1+0x0]
  4027e0:	mov    eax,DWORD PTR [rip+0x81a2]        # 0x40a988
  4027e6:	test   eax,eax
  4027e8:	je     0x402800
  4027ea:	mov    eax,0x1
  4027ef:	mov    DWORD PTR [rip+0x818f],0x1        # 0x40a988
  4027f9:	add    rsp,0x20
  4027fd:	pop    rbx
  4027fe:	ret    
  4027ff:	nop
  402800:	lea    rcx,[rip+0x8199]        # 0x40a9a0
  402807:	call   QWORD PTR [rip+0x8d1b]        # 0x40b528
  40280d:	jmp    0x4027ea
  40280f:	nop
  402810:	call   0x4025b0
  402815:	jmp    0x40278e
  40281a:	nop
  40281b:	nop
  40281c:	nop
  40281d:	nop
  40281e:	nop
  40281f:	nop
  402820:	movsxd rax,DWORD PTR [rcx+0x3c]
  402824:	add    rcx,rax
  402827:	xor    eax,eax
  402829:	cmp    DWORD PTR [rcx],0x4550
  40282f:	je     0x402833
  402831:	repz ret 
  402833:	xor    eax,eax
  402835:	cmp    WORD PTR [rcx+0x18],0x20b
  40283b:	sete   al
  40283e:	ret    
  40283f:	nop
  402840:	cmp    WORD PTR [rcx],0x5a4d
  402845:	je     0x402850
  402847:	xor    eax,eax
  402849:	ret    
  40284a:	nop    WORD PTR [rax+rax*1+0x0]
  402850:	jmp    0x402820
  402852:	nop    DWORD PTR [rax+0x0]
  402856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402860:	movsxd rax,DWORD PTR [rcx+0x3c]
  402864:	add    rcx,rax
  402867:	movzx  eax,WORD PTR [rcx+0x14]
  40286b:	lea    rax,[rcx+rax*1+0x18]
  402870:	movzx  ecx,WORD PTR [rcx+0x6]
  402874:	test   ecx,ecx
  402876:	je     0x4028a1
  402878:	sub    ecx,0x1
  40287b:	lea    rcx,[rcx+rcx*4]
  40287f:	lea    r9,[rax+rcx*8+0x28]
  402884:	mov    r8d,DWORD PTR [rax+0xc]
  402888:	cmp    r8,rdx
  40288b:	mov    rcx,r8
  40288e:	ja     0x402898
  402890:	add    ecx,DWORD PTR [rax+0x8]
  402893:	cmp    rdx,rcx
  402896:	jb     0x4028a3
  402898:	add    rax,0x28
  40289c:	cmp    rax,r9
  40289f:	jne    0x402884
  4028a1:	xor    eax,eax
  4028a3:	repz ret 
  4028a5:	nop
  4028a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028b0:	push   rdi
  4028b1:	push   rsi
  4028b2:	push   rbx
  4028b3:	sub    rsp,0x20
  4028b7:	mov    rsi,rcx
  4028ba:	call   0x402c10
  4028bf:	cmp    rax,0x8
  4028c3:	ja     0x4028e0
  4028c5:	mov    rbx,QWORD PTR [rip+0x4314]        # 0x406be0
  4028cc:	xor    edi,edi
  4028ce:	cmp    WORD PTR [rbx],0x5a4d
  4028d3:	je     0x4028f0
  4028d5:	mov    rax,rdi
  4028d8:	add    rsp,0x20
  4028dc:	pop    rbx
  4028dd:	pop    rsi
  4028de:	pop    rdi
  4028df:	ret    
  4028e0:	xor    edi,edi
  4028e2:	mov    rax,rdi
  4028e5:	add    rsp,0x20
  4028e9:	pop    rbx
  4028ea:	pop    rsi
  4028eb:	pop    rdi
  4028ec:	ret    
  4028ed:	nop    DWORD PTR [rax]
  4028f0:	mov    rcx,rbx
  4028f3:	call   0x402820
  4028f8:	test   eax,eax
  4028fa:	je     0x4028d5
  4028fc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402900:	add    rdx,rbx
  402903:	movzx  eax,WORD PTR [rdx+0x14]
  402907:	lea    rbx,[rdx+rax*1+0x18]
  40290c:	movzx  eax,WORD PTR [rdx+0x6]
  402910:	test   eax,eax
  402912:	je     0x4028d5
  402914:	sub    eax,0x1
  402917:	lea    rax,[rax+rax*4]
  40291b:	lea    rdi,[rbx+rax*8+0x28]
  402920:	jmp    0x40292b
  402922:	add    rbx,0x28
  402926:	cmp    rbx,rdi
  402929:	je     0x4028e0
  40292b:	mov    r8d,0x8
  402931:	mov    rdx,rsi
  402934:	mov    rcx,rbx
  402937:	call   0x402c08
  40293c:	test   eax,eax
  40293e:	jne    0x402922
  402940:	mov    rdi,rbx
  402943:	mov    rax,rdi
  402946:	add    rsp,0x20
  40294a:	pop    rbx
  40294b:	pop    rsi
  40294c:	pop    rdi
  40294d:	ret    
  40294e:	xchg   ax,ax
  402950:	push   rsi
  402951:	push   rbx
  402952:	sub    rsp,0x28
  402956:	mov    rbx,QWORD PTR [rip+0x4283]        # 0x406be0
  40295d:	cmp    WORD PTR [rbx],0x5a4d
  402962:	je     0x402970
  402964:	xor    eax,eax
  402966:	add    rsp,0x28
  40296a:	pop    rbx
  40296b:	pop    rsi
  40296c:	ret    
  40296d:	nop    DWORD PTR [rax]
  402970:	mov    rsi,rcx
  402973:	mov    rcx,rbx
  402976:	call   0x402820
  40297b:	test   eax,eax
  40297d:	je     0x402964
  40297f:	sub    rsi,rbx
  402982:	mov    rcx,rbx
  402985:	mov    rdx,rsi
  402988:	add    rsp,0x28
  40298c:	pop    rbx
  40298d:	pop    rsi
  40298e:	jmp    0x402860
  402993:	nop    DWORD PTR [rax]
  402996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029a0:	push   rbx
  4029a1:	sub    rsp,0x20
  4029a5:	mov    rbx,QWORD PTR [rip+0x4234]        # 0x406be0
  4029ac:	xor    eax,eax
  4029ae:	cmp    WORD PTR [rbx],0x5a4d
  4029b3:	je     0x4029c0
  4029b5:	add    rsp,0x20
  4029b9:	pop    rbx
  4029ba:	ret    
  4029bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4029c0:	mov    rcx,rbx
  4029c3:	call   0x402820
  4029c8:	test   eax,eax
  4029ca:	je     0x4029b5
  4029cc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4029d0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4029d5:	add    rsp,0x20
  4029d9:	pop    rbx
  4029da:	ret    
  4029db:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e0:	push   rdi
  4029e1:	push   rsi
  4029e2:	push   rbx
  4029e3:	sub    rsp,0x20
  4029e7:	mov    rsi,QWORD PTR [rip+0x41f2]        # 0x406be0
  4029ee:	xor    edi,edi
  4029f0:	mov    rbx,rcx
  4029f3:	cmp    WORD PTR [rsi],0x5a4d
  4029f8:	je     0x402a05
  4029fa:	mov    rax,rdi
  4029fd:	add    rsp,0x20
  402a01:	pop    rbx
  402a02:	pop    rsi
  402a03:	pop    rdi
  402a04:	ret    
  402a05:	mov    rcx,rsi
  402a08:	call   0x402820
  402a0d:	test   eax,eax
  402a0f:	je     0x4029fa
  402a11:	movsxd rax,DWORD PTR [rsi+0x3c]
  402a15:	add    rsi,rax
  402a18:	movzx  eax,WORD PTR [rsi+0x14]
  402a1c:	lea    rdx,[rsi+rax*1+0x18]
  402a21:	movzx  eax,WORD PTR [rsi+0x6]
  402a25:	test   eax,eax
  402a27:	je     0x4029fa
  402a29:	sub    eax,0x1
  402a2c:	lea    rax,[rax+rax*4]
  402a30:	lea    rax,[rdx+rax*8+0x28]
  402a35:	test   BYTE PTR [rdx+0x27],0x20
  402a39:	je     0x402a44
  402a3b:	test   rbx,rbx
  402a3e:	je     0x402a60
  402a40:	sub    rbx,0x1
  402a44:	add    rdx,0x28
  402a48:	cmp    rdx,rax
  402a4b:	jne    0x402a35
  402a4d:	xor    edi,edi
  402a4f:	mov    rax,rdi
  402a52:	add    rsp,0x20
  402a56:	pop    rbx
  402a57:	pop    rsi
  402a58:	pop    rdi
  402a59:	ret    
  402a5a:	nop    WORD PTR [rax+rax*1+0x0]
  402a60:	mov    rdi,rdx
  402a63:	mov    rax,rdi
  402a66:	add    rsp,0x20
  402a6a:	pop    rbx
  402a6b:	pop    rsi
  402a6c:	pop    rdi
  402a6d:	ret    
  402a6e:	xchg   ax,ax
  402a70:	push   rsi
  402a71:	push   rbx
  402a72:	sub    rsp,0x28
  402a76:	mov    rsi,QWORD PTR [rip+0x4163]        # 0x406be0
  402a7d:	xor    ebx,ebx
  402a7f:	cmp    WORD PTR [rsi],0x5a4d
  402a84:	je     0x402a90
  402a86:	mov    rax,rbx
  402a89:	add    rsp,0x28
  402a8d:	pop    rbx
  402a8e:	pop    rsi
  402a8f:	ret    
  402a90:	mov    rcx,rsi
  402a93:	call   0x402820
  402a98:	test   eax,eax
  402a9a:	cmovne rbx,rsi
  402a9e:	mov    rax,rbx
  402aa1:	add    rsp,0x28
  402aa5:	pop    rbx
  402aa6:	pop    rsi
  402aa7:	ret    
  402aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ab0:	push   rsi
  402ab1:	push   rbx
  402ab2:	sub    rsp,0x28
  402ab6:	mov    rbx,QWORD PTR [rip+0x4123]        # 0x406be0
  402abd:	xor    eax,eax
  402abf:	cmp    WORD PTR [rbx],0x5a4d
  402ac4:	je     0x402ad0
  402ac6:	add    rsp,0x28
  402aca:	pop    rbx
  402acb:	pop    rsi
  402acc:	ret    
  402acd:	nop    DWORD PTR [rax]
  402ad0:	mov    rsi,rcx
  402ad3:	mov    rcx,rbx
  402ad6:	call   0x402820
  402adb:	test   eax,eax
  402add:	je     0x402ac6
  402adf:	sub    rsi,rbx
  402ae2:	mov    rcx,rbx
  402ae5:	mov    rdx,rsi
  402ae8:	call   0x402860
  402aed:	test   rax,rax
  402af0:	je     0x402b01
  402af2:	mov    eax,DWORD PTR [rax+0x24]
  402af5:	not    eax
  402af7:	shr    eax,0x1f
  402afa:	add    rsp,0x28
  402afe:	pop    rbx
  402aff:	pop    rsi
  402b00:	ret    
  402b01:	xor    eax,eax
  402b03:	jmp    0x402ac6
  402b05:	nop
  402b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b10:	push   rbp
  402b11:	push   rdi
  402b12:	push   rsi
  402b13:	push   rbx
  402b14:	sub    rsp,0x28
  402b18:	mov    rdi,QWORD PTR [rip+0x40c1]        # 0x406be0
  402b1f:	xor    ebp,ebp
  402b21:	mov    esi,ecx
  402b23:	cmp    WORD PTR [rdi],0x5a4d
  402b28:	je     0x402b40
  402b2a:	mov    rax,rbp
  402b2d:	add    rsp,0x28
  402b31:	pop    rbx
  402b32:	pop    rsi
  402b33:	pop    rdi
  402b34:	pop    rbp
  402b35:	ret    
  402b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b40:	mov    rcx,rdi
  402b43:	call   0x402820
  402b48:	test   eax,eax
  402b4a:	je     0x402b2a
  402b4c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402b50:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402b57:	test   edx,edx
  402b59:	je     0x402b2a
  402b5b:	mov    ebx,edx
  402b5d:	mov    rcx,rdi
  402b60:	mov    rdx,rbx
  402b63:	call   0x402860
  402b68:	test   rax,rax
  402b6b:	je     0x402b2a
  402b6d:	add    rbx,rdi
  402b70:	mov    rdx,rbx
  402b73:	jne    0x402b87
  402b75:	jmp    0x402b2a
  402b77:	nop    WORD PTR [rax+rax*1+0x0]
  402b80:	sub    esi,0x1
  402b83:	add    rdx,0x14
  402b87:	mov    ecx,DWORD PTR [rdx+0x4]
  402b8a:	test   ecx,ecx
  402b8c:	jne    0x402b95
  402b8e:	mov    eax,DWORD PTR [rdx+0xc]
  402b91:	test   eax,eax
  402b93:	je     0x402bb0
  402b95:	test   esi,esi
  402b97:	jg     0x402b80
  402b99:	mov    ebp,DWORD PTR [rdx+0xc]
  402b9c:	add    rbp,rdi
  402b9f:	mov    rax,rbp
  402ba2:	add    rsp,0x28
  402ba6:	pop    rbx
  402ba7:	pop    rsi
  402ba8:	pop    rdi
  402ba9:	pop    rbp
  402baa:	ret    
  402bab:	nop    DWORD PTR [rax+rax*1+0x0]
  402bb0:	xor    ebp,ebp
  402bb2:	mov    rax,rbp
  402bb5:	add    rsp,0x28
  402bb9:	pop    rbx
  402bba:	pop    rsi
  402bbb:	pop    rdi
  402bbc:	pop    rbp
  402bbd:	ret    
  402bbe:	nop
  402bbf:	nop
  402bc0:	push   rcx
  402bc1:	push   rax
  402bc2:	cmp    rax,0x1000
  402bc8:	lea    rcx,[rsp+0x18]
  402bcd:	jb     0x402be8
  402bcf:	sub    rcx,0x1000
  402bd6:	or     QWORD PTR [rcx],0x0
  402bda:	sub    rax,0x1000
  402be0:	cmp    rax,0x1000
  402be6:	ja     0x402bcf
  402be8:	sub    rcx,rax
  402beb:	or     QWORD PTR [rcx],0x0
  402bef:	pop    rax
  402bf0:	pop    rcx
  402bf1:	ret    
  402bf2:	nop
  402bf3:	nop
  402bf4:	nop
  402bf5:	nop
  402bf6:	nop
  402bf7:	nop
  402bf8:	nop
  402bf9:	nop
  402bfa:	nop
  402bfb:	nop
  402bfc:	nop
  402bfd:	nop
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x8aaa]        # 0x40b6b0
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x8a9a]        # 0x40b6a8
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x8a8a]        # 0x40b6a0
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x8a7a]        # 0x40b698
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x8a6a]        # 0x40b690
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x8a5a]        # 0x40b688
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x8a4a]        # 0x40b680
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x8a3a]        # 0x40b678
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x8a2a]        # 0x40b670
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x8a1a]        # 0x40b668
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x8a0a]        # 0x40b660
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x89fa]        # 0x40b658
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x89ea]        # 0x40b650
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x89da]        # 0x40b648
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x89ca]        # 0x40b640
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x89ba]        # 0x40b638
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x89aa]        # 0x40b630
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x899a]        # 0x40b628
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x898a]        # 0x40b620
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x897a]        # 0x40b618
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x896a]        # 0x40b610
  402ca6:	nop
  402ca7:	nop
  402ca8:	jmp    QWORD PTR [rip+0x895a]        # 0x40b608
  402cae:	nop
  402caf:	nop
  402cb0:	jmp    QWORD PTR [rip+0x894a]        # 0x40b600
  402cb6:	nop
  402cb7:	nop
  402cb8:	jmp    QWORD PTR [rip+0x8932]        # 0x40b5f0
  402cbe:	nop
  402cbf:	nop
  402cc0:	jmp    QWORD PTR [rip+0x8922]        # 0x40b5e8
  402cc6:	nop
  402cc7:	nop
  402cc8:	jmp    QWORD PTR [rip+0x890a]        # 0x40b5d8
  402cce:	nop
  402ccf:	nop
  402cd0:	jmp    QWORD PTR [rip+0x88fa]        # 0x40b5d0
  402cd6:	nop
  402cd7:	nop
  402cd8:	jmp    QWORD PTR [rip+0x88ea]        # 0x40b5c8
  402cde:	nop
  402cdf:	nop
  402ce0:	jmp    QWORD PTR [rip+0x88da]        # 0x40b5c0
  402ce6:	nop
  402ce7:	nop
  402ce8:	jmp    QWORD PTR [rip+0x88c2]        # 0x40b5b0
  402cee:	nop
  402cef:	nop
  402cf0:	jmp    QWORD PTR [rip+0x88b2]        # 0x40b5a8
  402cf6:	nop
  402cf7:	nop
  402cf8:	jmp    QWORD PTR [rip+0x88a2]        # 0x40b5a0
  402cfe:	nop
  402cff:	nop
  402d00:	mov    rax,QWORD PTR [rip+0x7ce9]        # 0x40a9f0
  402d07:	ret    
  402d08:	nop    DWORD PTR [rax+rax*1+0x0]
  402d10:	mov    rax,rcx
  402d13:	xchg   QWORD PTR [rip+0x7cd6],rax        # 0x40a9f0
  402d1a:	ret    
  402d1b:	nop
  402d1c:	nop
  402d1d:	nop
  402d1e:	nop
  402d1f:	nop
  402d20:	jmp    QWORD PTR [rip+0x886a]        # 0x40b590
  402d26:	nop
  402d27:	nop
  402d28:	jmp    QWORD PTR [rip+0x885a]        # 0x40b588
  402d2e:	nop
  402d2f:	nop
  402d30:	jmp    QWORD PTR [rip+0x884a]        # 0x40b580
  402d36:	nop
  402d37:	nop
  402d38:	jmp    QWORD PTR [rip+0x883a]        # 0x40b578
  402d3e:	nop
  402d3f:	nop
  402d40:	jmp    QWORD PTR [rip+0x882a]        # 0x40b570
  402d46:	nop
  402d47:	nop
  402d48:	jmp    QWORD PTR [rip+0x881a]        # 0x40b568
  402d4e:	nop
  402d4f:	nop
  402d50:	jmp    QWORD PTR [rip+0x880a]        # 0x40b560
  402d56:	nop
  402d57:	nop
  402d58:	jmp    QWORD PTR [rip+0x87fa]        # 0x40b558
  402d5e:	nop
  402d5f:	nop
  402d60:	jmp    QWORD PTR [rip+0x87ea]        # 0x40b550
  402d66:	nop
  402d67:	nop
  402d68:	jmp    QWORD PTR [rip+0x87da]        # 0x40b548
  402d6e:	nop
  402d6f:	nop
  402d70:	jmp    QWORD PTR [rip+0x87ca]        # 0x40b540
  402d76:	nop
  402d77:	nop
  402d78:	jmp    QWORD PTR [rip+0x87ba]        # 0x40b538
  402d7e:	nop
  402d7f:	nop
  402d80:	jmp    QWORD PTR [rip+0x87aa]        # 0x40b530
  402d86:	nop
  402d87:	nop
  402d88:	jmp    QWORD PTR [rip+0x879a]        # 0x40b528
  402d8e:	nop
  402d8f:	nop
  402d90:	jmp    QWORD PTR [rip+0x878a]        # 0x40b520
  402d96:	nop
  402d97:	nop
  402d98:	jmp    QWORD PTR [rip+0x877a]        # 0x40b518
  402d9e:	nop
  402d9f:	nop
  402da0:	jmp    QWORD PTR [rip+0x876a]        # 0x40b510
  402da6:	nop
  402da7:	nop
  402da8:	jmp    QWORD PTR [rip+0x875a]        # 0x40b508
  402dae:	nop
  402daf:	nop
  402db0:	jmp    QWORD PTR [rip+0x874a]        # 0x40b500
  402db6:	nop
  402db7:	nop
  402db8:	jmp    QWORD PTR [rip+0x873a]        # 0x40b4f8
  402dbe:	nop
  402dbf:	nop
  402dc0:	jmp    QWORD PTR [rip+0x872a]        # 0x40b4f0
  402dc6:	nop
  402dc7:	nop
  402dc8:	jmp    QWORD PTR [rip+0x871a]        # 0x40b4e8
  402dce:	nop
  402dcf:	nop
  402dd0:	jmp    QWORD PTR [rip+0x870a]        # 0x40b4e0
  402dd6:	nop
  402dd7:	nop
  402dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402de0:	push   r15
  402de2:	push   r14
  402de4:	push   r13
  402de6:	push   r12
  402de8:	push   rbp
  402de9:	push   rdi
  402dea:	push   rsi
  402deb:	push   rbx
  402dec:	sub    rsp,0x88
  402df3:	movaps XMMWORD PTR [rsp+0x50],xmm6
  402df8:	movaps XMMWORD PTR [rsp+0x60],xmm7
  402dfd:	movaps XMMWORD PTR [rsp+0x70],xmm8
  402e03:	mov    r13d,ecx
  402e06:	mov    rbx,rdx
  402e09:	call   0x401810
  402e0e:	cmp    r13d,0x3
  402e12:	mov    QWORD PTR [rsp+0x38],0x0
  402e1b:	mov    QWORD PTR [rsp+0x40],0x0
  402e24:	mov    QWORD PTR [rsp+0x48],0x0
  402e2d:	jle    0x403395
  402e33:	mov    rcx,QWORD PTR [rbx+0x8]
  402e37:	lea    r15d,[r13-0x4]
  402e3b:	call   0x402c78
  402e40:	mov    rcx,QWORD PTR [rbx+0x10]
  402e44:	mov    r12d,eax
  402e47:	call   0x402c78
  402e4c:	mov    r14,QWORD PTR [rbx+0x18]
  402e50:	movsxd rbp,eax
  402e53:	call   0x401560
  402e58:	mov    rdi,QWORD PTR [rip+0x3ec1]        # 0x406d20
  402e5f:	mov    eax,DWORD PTR [rdi]
  402e61:	test   eax,eax
  402e63:	jne    0x402ff3
  402e69:	mov    rax,QWORD PTR [rip+0x3ea0]        # 0x406d10
  402e70:	mov    DWORD PTR [rdi],r12d
  402e73:	lea    rdi,[rip+0x3423]        # 0x40629d
  402e7a:	mov    rsi,r14
  402e7d:	mov    rcx,QWORD PTR [rax]
  402e80:	call   0x401568
  402e85:	mov    ecx,0xa
  402e8a:	mov    r12,rax
  402e8d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e8f:	jne    0x402ef9
  402e91:	sub    r15d,0x1
  402e95:	jne    0x40353e
  402e9b:	mov    rcx,QWORD PTR [rbx+0x20]
  402e9f:	xor    ebx,ebx
  402ea1:	call   0x402c88
  402ea6:	test   rbp,rbp
  402ea9:	movapd xmm6,xmm0
  402ead:	je     0x402ed3
  402eaf:	nop
  402eb0:	movapd xmm1,xmm6
  402eb4:	mov    rcx,r12
  402eb7:	add    rbx,0x1
  402ebb:	call   0x401698
  402ec0:	lea    rcx,[rip+0x33fb]        # 0x4062c2
  402ec7:	mov    edx,eax
  402ec9:	call   0x402c38
  402ece:	cmp    rbp,rbx
  402ed1:	jne    0x402eb0
  402ed3:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  402ed8:	xor    eax,eax
  402eda:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  402edf:	movaps xmm8,XMMWORD PTR [rsp+0x70]
  402ee5:	add    rsp,0x88
  402eec:	pop    rbx
  402eed:	pop    rsi
  402eee:	pop    rdi
  402eef:	pop    rbp
  402ef0:	pop    r12
  402ef2:	pop    r13
  402ef4:	pop    r14
  402ef6:	pop    r15
  402ef8:	ret    
  402ef9:	lea    rdx,[rip+0x33c6]        # 0x4062c6
  402f00:	mov    rcx,r14
  402f03:	call   0x402c18
  402f08:	test   eax,eax
  402f0a:	jne    0x402f74
  402f0c:	cmp    r15d,0x2
  402f10:	jne    0x403586
  402f16:	mov    rcx,QWORD PTR [rbx+0x20]
  402f1a:	call   0x402c88
  402f1f:	cmp    r13d,0x5
  402f23:	movapd xmm7,xmm0
  402f27:	je     0x403592
  402f2d:	mov    rcx,QWORD PTR [rbx+0x28]
  402f31:	xor    ebx,ebx
  402f33:	call   0x402c88
  402f38:	test   rbp,rbp
  402f3b:	movapd xmm6,xmm0
  402f3f:	je     0x402ed3
  402f41:	movapd xmm2,xmm6
  402f45:	movapd xmm1,xmm7
  402f49:	mov    rcx,r12
  402f4c:	add    rbx,0x1
  402f50:	call   0x401690
  402f55:	lea    rcx,[rip+0x3388]        # 0x4062e4
  402f5c:	movapd xmm1,xmm0
  402f60:	movq   rdx,xmm0
  402f65:	call   0x402c38
  402f6a:	cmp    rbp,rbx
  402f6d:	jne    0x402f41
  402f6f:	jmp    0x402ed3
  402f74:	lea    rdx,[rip+0x336d]        # 0x4062e8
  402f7b:	mov    rcx,r14
  402f7e:	call   0x402c18
  402f83:	test   eax,eax
  402f85:	je     0x403011
  402f8b:	lea    rdx,[rip+0x338e]        # 0x406320
  402f92:	mov    rcx,r14
  402f95:	call   0x402c18
  402f9a:	test   eax,eax
  402f9c:	jne    0x40307b
  402fa2:	sub    r15d,0x1
  402fa6:	jne    0x403562
  402fac:	mov    rcx,QWORD PTR [rbx+0x20]
  402fb0:	call   0x402c88
  402fb5:	test   rbp,rbp
  402fb8:	movapd xmm6,xmm0
  402fbc:	je     0x402ed3
  402fc2:	xor    ebx,ebx
  402fc4:	movapd xmm1,xmm6
  402fc8:	mov    rcx,r12
  402fcb:	add    rbx,0x1
  402fcf:	call   0x401678
  402fd4:	lea    rcx,[rip+0x3309]        # 0x4062e4
  402fdb:	movapd xmm1,xmm0
  402fdf:	movq   rdx,xmm0
  402fe4:	call   0x402c38
  402fe9:	cmp    rbp,rbx
  402fec:	ja     0x402fc4
  402fee:	jmp    0x402ed3
  402ff3:	call   QWORD PTR [rip+0x85c7]        # 0x40b5c0
  402ff9:	lea    rdx,[rip+0x3260]        # 0x406260
  403000:	lea    rcx,[rax+0x60]
  403004:	mov    r8d,r12d
  403007:	call   0x402c60
  40300c:	jmp    0x402e69
  403011:	cmp    r15d,0x2
  403015:	jne    0x403556
  40301b:	mov    rcx,QWORD PTR [rbx+0x20]
  40301f:	call   0x402c88
  403024:	cmp    r13d,0x5
  403028:	movapd xmm6,xmm0
  40302c:	je     0x4034a8
  403032:	mov    rcx,QWORD PTR [rbx+0x28]
  403036:	xor    ebx,ebx
  403038:	call   0x402c80
  40303d:	test   rbp,rbp
  403040:	mov    edi,eax
  403042:	je     0x402ed3
  403048:	nop    DWORD PTR [rax+rax*1+0x0]
  403050:	movapd xmm1,xmm6
  403054:	mov    r8d,edi
  403057:	mov    rcx,r12
  40305a:	add    rbx,0x1
  40305e:	call   0x401688
  403063:	lea    rcx,[rip+0x3258]        # 0x4062c2
  40306a:	mov    edx,eax
  40306c:	call   0x402c38
  403071:	cmp    rbp,rbx
  403074:	jne    0x403050
  403076:	jmp    0x402ed3
  40307b:	lea    rdx,[rip+0x32b9]        # 0x40633b
  403082:	mov    rcx,r14
  403085:	call   0x402c18
  40308a:	test   eax,eax
  40308c:	je     0x40310a
  40308e:	lea    rdx,[rip+0x32c4]        # 0x406359
  403095:	mov    rcx,r14
  403098:	call   0x402c18
  40309d:	test   eax,eax
  40309f:	jne    0x403154
  4030a5:	cmp    r15d,0x2
  4030a9:	jne    0x40356e
  4030af:	mov    rcx,QWORD PTR [rbx+0x20]
  4030b3:	call   0x402c88
  4030b8:	cmp    r13d,0x5
  4030bc:	movapd xmm7,xmm0
  4030c0:	je     0x403592
  4030c6:	mov    rcx,QWORD PTR [rbx+0x28]
  4030ca:	xor    ebx,ebx
  4030cc:	call   0x402c88
  4030d1:	movapd xmm6,xmm0
  4030d5:	jmp    0x403100
  4030d7:	movapd xmm2,xmm6
  4030db:	mov    rcx,r12
  4030de:	movapd xmm1,xmm7
  4030e2:	add    rbx,0x1
  4030e6:	call   0x401650
  4030eb:	lea    rcx,[rip+0x31f2]        # 0x4062e4
  4030f2:	movapd xmm1,xmm0
  4030f6:	movq   rdx,xmm0
  4030fb:	call   0x402c38
  403100:	cmp    rbx,rbp
  403103:	jb     0x4030d7
  403105:	jmp    0x402ed3
  40310a:	sub    r15d,0x1
  40310e:	jne    0x40357a
  403114:	mov    rcx,QWORD PTR [rbx+0x20]
  403118:	xor    ebx,ebx
  40311a:	call   0x402c88
  40311f:	movapd xmm6,xmm0
  403123:	jmp    0x40314a
  403125:	movapd xmm1,xmm6
  403129:	mov    rcx,r12
  40312c:	add    rbx,0x1
  403130:	call   0x401670
  403135:	lea    rcx,[rip+0x31a8]        # 0x4062e4
  40313c:	movapd xmm1,xmm0
  403140:	movq   rdx,xmm0
  403145:	call   0x402c38
  40314a:	cmp    rbx,rbp
  40314d:	jb     0x403125
  40314f:	jmp    0x402ed3
  403154:	lea    rdx,[rip+0x3224]        # 0x40637f
  40315b:	mov    rcx,r14
  40315e:	call   0x402c18
  403163:	test   eax,eax
  403165:	jne    0x4031b1
  403167:	sub    r15d,0x1
  40316b:	jne    0x4034cc
  403171:	mov    rcx,QWORD PTR [rbx+0x20]
  403175:	xor    ebx,ebx
  403177:	call   0x402c88
  40317c:	movapd xmm6,xmm0
  403180:	jmp    0x4031a7
  403182:	movapd xmm1,xmm6
  403186:	mov    rcx,r12
  403189:	add    rbx,0x1
  40318d:	call   0x401648
  403192:	lea    rcx,[rip+0x314b]        # 0x4062e4
  403199:	movapd xmm1,xmm0
  40319d:	movq   rdx,xmm0
  4031a2:	call   0x402c38
  4031a7:	cmp    rbx,rbp
  4031aa:	jb     0x403182
  4031ac:	jmp    0x402ed3
  4031b1:	lea    rdx,[rip+0x31e3]        # 0x40639b
  4031b8:	mov    rcx,r14
  4031bb:	call   0x402c18
  4031c0:	test   eax,eax
  4031c2:	jne    0x403229
  4031c4:	cmp    r15d,0x2
  4031c8:	jne    0x40340c
  4031ce:	mov    rcx,QWORD PTR [rbx+0x20]
  4031d2:	call   0x402c88
  4031d7:	cmp    r13d,0x5
  4031db:	movapd xmm7,xmm0
  4031df:	je     0x403592
  4031e5:	mov    rcx,QWORD PTR [rbx+0x28]
  4031e9:	xor    ebx,ebx
  4031eb:	call   0x402c88
  4031f0:	movapd xmm6,xmm0
  4031f4:	jmp    0x40321f
  4031f6:	movapd xmm2,xmm6
  4031fa:	mov    rcx,r12
  4031fd:	movapd xmm1,xmm7
  403201:	add    rbx,0x1
  403205:	call   0x401640
  40320a:	lea    rcx,[rip+0x30d3]        # 0x4062e4
  403211:	movapd xmm1,xmm0
  403215:	movq   rdx,xmm0
  40321a:	call   0x402c38
  40321f:	cmp    rbx,rbp
  403222:	jb     0x4031f6
  403224:	jmp    0x402ed3
  403229:	lea    rdx,[rip+0x31b3]        # 0x4063e3
  403230:	mov    rcx,r14
  403233:	call   0x402c18
  403238:	test   eax,eax
  40323a:	jne    0x4032a1
  40323c:	cmp    r15d,0x2
  403240:	jne    0x4034c0
  403246:	mov    rcx,QWORD PTR [rbx+0x20]
  40324a:	call   0x402c88
  40324f:	cmp    r13d,0x5
  403253:	movapd xmm7,xmm0
  403257:	je     0x4034b4
  40325d:	mov    rcx,QWORD PTR [rbx+0x28]
  403261:	xor    ebx,ebx
  403263:	call   0x402c88
  403268:	movapd xmm6,xmm0
  40326c:	jmp    0x403297
  40326e:	movapd xmm2,xmm6
  403272:	mov    rcx,r12
  403275:	movapd xmm1,xmm7
  403279:	add    rbx,0x1
  40327d:	call   0x401638
  403282:	lea    rcx,[rip+0x305b]        # 0x4062e4
  403289:	movapd xmm1,xmm0
  40328d:	movq   rdx,xmm0
  403292:	call   0x402c38
  403297:	cmp    rbx,rbp
  40329a:	jb     0x40326e
  40329c:	jmp    0x402ed3
  4032a1:	lea    rdx,[rip+0x3175]        # 0x40641d
  4032a8:	mov    rcx,r14
  4032ab:	call   0x402c18
  4032b0:	test   eax,eax
  4032b2:	jne    0x403319
  4032b4:	cmp    r15d,0x2
  4032b8:	jne    0x403418
  4032be:	mov    rcx,QWORD PTR [rbx+0x20]
  4032c2:	call   0x402c88
  4032c7:	cmp    r13d,0x5
  4032cb:	movapd xmm7,xmm0
  4032cf:	je     0x403592
  4032d5:	mov    rcx,QWORD PTR [rbx+0x28]
  4032d9:	xor    ebx,ebx
  4032db:	call   0x402c88
  4032e0:	movapd xmm6,xmm0
  4032e4:	jmp    0x40330f
  4032e6:	movapd xmm2,xmm6
  4032ea:	mov    rcx,r12
  4032ed:	movapd xmm1,xmm7
  4032f1:	add    rbx,0x1
  4032f5:	call   0x401630
  4032fa:	lea    rcx,[rip+0x2fe3]        # 0x4062e4
  403301:	movapd xmm1,xmm0
  403305:	movq   rdx,xmm0
  40330a:	call   0x402c38
  40330f:	cmp    rbx,rbp
  403312:	jb     0x4032e6
  403314:	jmp    0x402ed3
  403319:	lea    rdx,[rip+0x3129]        # 0x406449
  403320:	mov    rcx,r14
  403323:	call   0x402c18
  403328:	test   eax,eax
  40332a:	jne    0x4033b4
  403330:	cmp    r15d,0x2
  403334:	jne    0x40354a
  40333a:	mov    rcx,QWORD PTR [rbx+0x20]
  40333e:	call   0x402c88
  403343:	cmp    r13d,0x5
  403347:	movapd xmm7,xmm0
  40334b:	je     0x403592
  403351:	mov    rcx,QWORD PTR [rbx+0x28]
  403355:	xor    ebx,ebx
  403357:	call   0x402c88
  40335c:	movapd xmm6,xmm0
  403360:	jmp    0x40338b
  403362:	movapd xmm2,xmm6
  403366:	mov    rcx,r12
  403369:	movapd xmm1,xmm7
  40336d:	add    rbx,0x1
  403371:	call   0x401628
  403376:	lea    rcx,[rip+0x2f67]        # 0x4062e4
  40337d:	movapd xmm1,xmm0
  403381:	movq   rdx,xmm0
  403386:	call   0x402c38
  40338b:	cmp    rbx,rbp
  40338e:	jb     0x403362
  403390:	jmp    0x402ed3
  403395:	lea    rcx,[rip+0x2c84]        # 0x406020
  40339c:	call   0x402c28
  4033a1:	lea    rcx,[rip+0x2d18]        # 0x4060c0
  4033a8:	call   0x402c28
  4033ad:	xor    ecx,ecx
  4033af:	call   0x402c68
  4033b4:	lea    rdx,[rip+0x30a9]        # 0x406464
  4033bb:	mov    rcx,r14
  4033be:	call   0x402c18
  4033c3:	test   eax,eax
  4033c5:	jne    0x403430
  4033c7:	sub    r15d,0x1
  4033cb:	jne    0x403424
  4033cd:	mov    rcx,QWORD PTR [rbx+0x20]
  4033d1:	xor    ebx,ebx
  4033d3:	call   0x402c88
  4033d8:	movapd xmm6,xmm0
  4033dc:	cmp    rbx,rbp
  4033df:	jae    0x402ed3
  4033e5:	movapd xmm1,xmm6
  4033e9:	mov    rcx,r12
  4033ec:	add    rbx,0x1
  4033f0:	call   0x401620
  4033f5:	lea    rcx,[rip+0x2ee8]        # 0x4062e4
  4033fc:	movapd xmm1,xmm0
  403400:	movq   rdx,xmm0
  403405:	call   0x402c38
  40340a:	jmp    0x4033dc
  40340c:	lea    rcx,[rip+0x2f95]        # 0x4063a8
  403413:	call   0x401530
  403418:	lea    rcx,[rip+0x3009]        # 0x406428
  40341f:	call   0x401530
  403424:	lea    rcx,[rip+0x3042]        # 0x40646d
  40342b:	call   0x401530
  403430:	lea    rdx,[rip+0x3051]        # 0x406488
  403437:	mov    rcx,r14
  40343a:	call   0x402c18
  40343f:	test   eax,eax
  403441:	jne    0x4034f0
  403447:	cmp    r15d,0x2
  40344b:	jne    0x4034e4
  403451:	mov    rcx,QWORD PTR [rbx+0x20]
  403455:	call   0x402c88
  40345a:	cmp    r13d,0x5
  40345e:	movapd xmm7,xmm0
  403462:	je     0x4034d8
  403464:	mov    rcx,QWORD PTR [rbx+0x28]
  403468:	xor    ebx,ebx
  40346a:	call   0x402c88
  40346f:	movapd xmm6,xmm0
  403473:	jmp    0x40349e
  403475:	movapd xmm2,xmm6
  403479:	mov    rcx,r12
  40347c:	movapd xmm1,xmm7
  403480:	add    rbx,0x1
  403484:	call   0x401618
  403489:	lea    rcx,[rip+0x2e54]        # 0x4062e4
  403490:	movapd xmm1,xmm0
  403494:	movq   rdx,xmm0
  403499:	call   0x402c38
  40349e:	cmp    rbx,rbp
  4034a1:	jb     0x403475
  4034a3:	jmp    0x402ed3
  4034a8:	lea    rcx,[rip+0x2e6f]        # 0x40631e
  4034af:	call   0x401530
  4034b4:	lea    rcx,[rip+0x2f5e]        # 0x406419
  4034bb:	call   0x401530
  4034c0:	lea    rcx,[rip+0x2f29]        # 0x4063f0
  4034c7:	call   0x401530
  4034cc:	lea    rcx,[rip+0x2eb8]        # 0x40638b
  4034d3:	call   0x401530
  4034d8:	lea    rcx,[rip+0x2fe5]        # 0x4064c4
  4034df:	call   0x401530
  4034e4:	lea    rcx,[rip+0x2fad]        # 0x406498
  4034eb:	call   0x401530
  4034f0:	lea    rdx,[rip+0x2fd3]        # 0x4064ca
  4034f7:	mov    rcx,r14
  4034fa:	call   0x402c18
  4034ff:	test   eax,eax
  403501:	jne    0x4035aa
  403507:	xor    ebx,ebx
  403509:	test   r15d,r15d
  40350c:	je     0x403534
  40350e:	jmp    0x40359e
  403513:	mov    rcx,r12
  403516:	add    rbx,0x1
  40351a:	call   0x401580
  40351f:	lea    rcx,[rip+0x2dbe]        # 0x4062e4
  403526:	movapd xmm1,xmm0
  40352a:	movq   rdx,xmm0
  40352f:	call   0x402c38
  403534:	cmp    rbx,rbp
  403537:	jb     0x403513
  403539:	jmp    0x402ed3
  40353e:	lea    rcx,[rip+0x2d62]        # 0x4062a7
  403545:	call   0x401530
  40354a:	lea    rcx,[rip+0x2efe]        # 0x40644f
  403551:	call   0x401530
  403556:	lea    rcx,[rip+0x2d9b]        # 0x4062f8
  40355d:	call   0x401530
  403562:	lea    rcx,[rip+0x2dbe]        # 0x406327
  403569:	call   0x401530
  40356e:	lea    rcx,[rip+0x2deb]        # 0x406360
  403575:	call   0x401530
  40357a:	lea    rcx,[rip+0x2dc0]        # 0x406341
  403581:	call   0x401530
  403586:	lea    rcx,[rip+0x2d3e]        # 0x4062cb
  40358d:	call   0x401530
  403592:	lea    rcx,[rip+0x2d49]        # 0x4062e2
  403599:	call   0x401530
  40359e:	lea    rcx,[rip+0x2f33]        # 0x4064d8
  4035a5:	call   0x401530
  4035aa:	lea    rdx,[rip+0x2f4d]        # 0x4064fe
  4035b1:	mov    rcx,r14
  4035b4:	call   0x402c18
  4035b9:	test   eax,eax
  4035bb:	jne    0x403607
  4035bd:	sub    r15d,0x1
  4035c1:	jne    0x4036c4
  4035c7:	mov    rcx,QWORD PTR [rbx+0x20]
  4035cb:	xor    ebx,ebx
  4035cd:	call   0x402c88
  4035d2:	movapd xmm6,xmm0
  4035d6:	jmp    0x4035fd
  4035d8:	movapd xmm1,xmm6
  4035dc:	mov    rcx,r12
  4035df:	add    rbx,0x1
  4035e3:	call   0x401578
  4035e8:	lea    rcx,[rip+0x2cf5]        # 0x4062e4
  4035ef:	movapd xmm1,xmm0
  4035f3:	movq   rdx,xmm0
  4035f8:	call   0x402c38
  4035fd:	cmp    rbx,rbp
  403600:	jb     0x4035d8
  403602:	jmp    0x402ed3
  403607:	lea    rdx,[rip+0x2f0f]        # 0x40651d
  40360e:	mov    rcx,r14
  403611:	call   0x402c18
  403616:	test   eax,eax
  403618:	jne    0x4036f4
  40361e:	cmp    r15d,0x3
  403622:	jne    0x4036e8
  403628:	mov    rcx,QWORD PTR [rbx+0x20]
  40362c:	call   0x402c88
  403631:	cmp    r13d,0x5
  403635:	movapd xmm7,xmm0
  403639:	je     0x4036dc
  40363f:	mov    rcx,QWORD PTR [rbx+0x28]
  403643:	call   0x402c88
  403648:	cmp    r13d,0x6
  40364c:	movapd xmm8,xmm0
  403651:	je     0x4036d0
  403653:	mov    rcx,QWORD PTR [rbx+0x30]
  403657:	lea    rdi,[rsp+0x40]
  40365c:	lea    rsi,[rsp+0x38]
  403661:	xor    ebx,ebx
  403663:	call   0x402c88
  403668:	movapd xmm6,xmm0
  40366c:	cmp    rbx,rbp
  40366f:	jae    0x402ed3
  403675:	movapd xmm3,xmm6
  403679:	movapd xmm2,xmm8
  40367e:	movapd xmm1,xmm7
  403682:	mov    rcx,r12
  403685:	mov    QWORD PTR [rsp+0x28],rdi
  40368a:	mov    QWORD PTR [rsp+0x20],rsi
  40368f:	add    rbx,0x1
  403693:	call   0x401680
  403698:	movsd  xmm5,QWORD PTR [rsp+0x40]
  40369e:	lea    rcx,[rip+0x2ed2]        # 0x406577
  4036a5:	movsd  xmm4,QWORD PTR [rsp+0x38]
  4036ab:	movapd xmm2,xmm5
  4036af:	movq   r8,xmm5
  4036b4:	movapd xmm1,xmm4
  4036b8:	movq   rdx,xmm4
  4036bd:	call   0x402c38
  4036c2:	jmp    0x40366c
  4036c4:	lea    rcx,[rip+0x2e42]        # 0x40650d
  4036cb:	call   0x401530
  4036d0:	lea    rcx,[rip+0x2e9c]        # 0x406573
  4036d7:	call   0x401530
  4036dc:	lea    rcx,[rip+0x2e89]        # 0x40656c
  4036e3:	call   0x401530
  4036e8:	lea    rcx,[rip+0x2e41]        # 0x406530
  4036ef:	call   0x401530
  4036f4:	lea    rdx,[rip+0x2e83]        # 0x40657e
  4036fb:	mov    rcx,r14
  4036fe:	call   0x402c18
  403703:	test   eax,eax
  403705:	jne    0x40375a
  403707:	lea    rdi,[rsp+0x40]
  40370c:	lea    rsi,[rsp+0x38]
  403711:	xor    ebx,ebx
  403713:	cmp    rbx,rbp
  403716:	jae    0x402ed3
  40371c:	mov    r8,rdi
  40371f:	mov    rdx,rsi
  403722:	mov    rcx,r12
  403725:	call   0x401668
  40372a:	movsd  xmm1,QWORD PTR [rsp+0x40]
  403730:	lea    rcx,[rip+0x2e40]        # 0x406577
  403737:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40373d:	add    rbx,0x1
  403741:	movapd xmm2,xmm1
  403745:	movq   r8,xmm1
  40374a:	movq   rdx,xmm0
  40374f:	movapd xmm1,xmm0
  403753:	call   0x402c38
  403758:	jmp    0x403713
  40375a:	lea    rdx,[rip+0x2e24]        # 0x406585
  403761:	mov    rcx,r14
  403764:	call   0x402c18
  403769:	test   eax,eax
  40376b:	jne    0x4037d7
  40376d:	lea    r13,[rsp+0x48]
  403772:	lea    rdi,[rsp+0x40]
  403777:	lea    rsi,[rsp+0x38]
  40377c:	xor    ebx,ebx
  40377e:	cmp    rbx,rbp
  403781:	jae    0x402ed3
  403787:	mov    r9,r13
  40378a:	mov    r8,rdi
  40378d:	mov    rdx,rsi
  403790:	mov    rcx,r12
  403793:	add    rbx,0x1
  403797:	call   0x401660
  40379c:	movsd  xmm2,QWORD PTR [rsp+0x48]
  4037a2:	lea    rcx,[rip+0x2de3]        # 0x40658c
  4037a9:	movsd  xmm1,QWORD PTR [rsp+0x40]
  4037af:	movsd  xmm0,QWORD PTR [rsp+0x38]
  4037b5:	movapd xmm3,xmm2
  4037b9:	movq   r9,xmm2
  4037be:	movq   r8,xmm1
  4037c3:	movapd xmm2,xmm1
  4037c7:	movq   rdx,xmm0
  4037cc:	movapd xmm1,xmm0
  4037d0:	call   0x402c38
  4037d5:	jmp    0x40377e
  4037d7:	lea    rdx,[rip+0x2db8]        # 0x406596
  4037de:	mov    rcx,r14
  4037e1:	call   0x402c18
  4037e6:	test   eax,eax
  4037e8:	jne    0x403888
  4037ee:	sub    r15d,0x1
  4037f2:	jne    0x40387c
  4037f8:	mov    rcx,QWORD PTR [rbx+0x20]
  4037fc:	xor    r13d,r13d
  4037ff:	call   0x402c80
  403804:	mov    ebx,eax
  403806:	lea    rcx,[rbx*8+0x0]
  40380e:	call   0x402c48
  403813:	mov    rdi,rax
  403816:	cmp    r13,rbp
  403819:	jae    0x40386f
  40381b:	mov    r8,rdi
  40381e:	mov    rdx,rbx
  403821:	mov    rcx,r12
  403824:	xor    esi,esi
  403826:	call   0x401658
  40382b:	cmp    rsi,rbx
  40382e:	jae    0x40385f
  403830:	test   rsi,rsi
  403833:	je     0x40383f
  403835:	mov    ecx,0x20
  40383a:	call   0x402c30
  40383f:	movsd  xmm0,QWORD PTR [rdi+rsi*8]
  403844:	lea    rcx,[rip+0x2d7e]        # 0x4065c9
  40384b:	add    rsi,0x1
  40384f:	movapd xmm1,xmm0
  403853:	movq   rdx,xmm0
  403858:	call   0x402c38
  40385d:	jmp    0x40382b
  40385f:	mov    ecx,0xa
  403864:	add    r13,0x1
  403868:	call   0x402c30
  40386d:	jmp    0x403816
  40386f:	mov    rcx,rdi
  403872:	call   0x402c58
  403877:	jmp    0x402ed3
  40387c:	lea    rcx,[rip+0x2d1d]        # 0x4065a0
  403883:	call   0x401530
  403888:	lea    rdx,[rip+0x2d3d]        # 0x4065cc
  40388f:	mov    rcx,r14
  403892:	call   0x402c18
  403897:	test   eax,eax
  403899:	jne    0x4038dd
  40389b:	sub    r15d,0x1
  40389f:	jne    0x403950
  4038a5:	mov    rcx,QWORD PTR [rbx+0x20]
  4038a9:	xor    ebx,ebx
  4038ab:	call   0x402c88
  4038b0:	movapd xmm6,xmm0
  4038b4:	cmp    rbx,rbp
  4038b7:	jae    0x402ed3
  4038bd:	movapd xmm1,xmm6
  4038c1:	mov    rcx,r12
  4038c4:	add    rbx,0x1
  4038c8:	call   0x401610
  4038cd:	lea    rcx,[rip+0x29ee]        # 0x4062c2
  4038d4:	mov    edx,eax
  4038d6:	call   0x402c38
  4038db:	jmp    0x4038b4
  4038dd:	lea    rdx,[rip+0x2d1f]        # 0x406603
  4038e4:	mov    rcx,r14
  4038e7:	call   0x402c18
  4038ec:	test   eax,eax
  4038ee:	jne    0x403968
  4038f0:	cmp    r15d,0x2
  4038f4:	jne    0x40395c
  4038f6:	mov    rcx,QWORD PTR [rbx+0x20]
  4038fa:	call   0x402c88
  4038ff:	cmp    r13d,0x5
  403903:	movapd xmm7,xmm0
  403907:	je     0x403592
  40390d:	mov    rcx,QWORD PTR [rbx+0x28]
  403911:	xor    ebx,ebx
  403913:	call   0x402c88
  403918:	movapd xmm6,xmm0
  40391c:	cmp    rbx,rbp
  40391f:	jae    0x402ed3
  403925:	movapd xmm2,xmm6
  403929:	movapd xmm1,xmm7
  40392d:	mov    rcx,r12
  403930:	add    rbx,0x1
  403934:	call   0x401608
  403939:	lea    rcx,[rip+0x29a4]        # 0x4062e4
  403940:	movapd xmm1,xmm0
  403944:	movq   rdx,xmm0
  403949:	call   0x402c38
  40394e:	jmp    0x40391c
  403950:	lea    rcx,[rip+0x2c81]        # 0x4065d8
  403957:	call   0x401530
  40395c:	lea    rcx,[rip+0x2cad]        # 0x406610
  403963:	call   0x401530
  403968:	lea    rdx,[rip+0x2cc0]        # 0x40662f
  40396f:	mov    rcx,r14
  403972:	call   0x402c18
  403977:	test   eax,eax
  403979:	jne    0x4039db
  40397b:	cmp    r15d,0x2
  40397f:	jne    0x40395c
  403981:	mov    rcx,QWORD PTR [rbx+0x20]
  403985:	call   0x402c88
  40398a:	cmp    r13d,0x5
  40398e:	movapd xmm7,xmm0
  403992:	je     0x403592
  403998:	mov    rcx,QWORD PTR [rbx+0x28]
  40399c:	xor    ebx,ebx
  40399e:	call   0x402c88
  4039a3:	movapd xmm6,xmm0
  4039a7:	cmp    rbx,rbp
  4039aa:	jae    0x402ed3
  4039b0:	movapd xmm2,xmm6
  4039b4:	movapd xmm1,xmm7
  4039b8:	mov    rcx,r12
  4039bb:	add    rbx,0x1
  4039bf:	call   0x401600
  4039c4:	lea    rcx,[rip+0x2919]        # 0x4062e4
  4039cb:	movapd xmm1,xmm0
  4039cf:	movq   rdx,xmm0
  4039d4:	call   0x402c38
  4039d9:	jmp    0x4039a7
  4039db:	lea    rdx,[rip+0x2c55]        # 0x406637
  4039e2:	mov    rcx,r14
  4039e5:	call   0x402c18
  4039ea:	test   eax,eax
  4039ec:	jne    0x403a5d
  4039ee:	cmp    r15d,0x3
  4039f2:	jne    0x403b17
  4039f8:	mov    rcx,QWORD PTR [rbx+0x20]
  4039fc:	call   0x402c80
  403a01:	cmp    r13d,0x5
  403a05:	mov    edi,eax
  403a07:	je     0x403b0b
  403a0d:	mov    rcx,QWORD PTR [rbx+0x28]
  403a11:	call   0x402c80
  403a16:	cmp    r13d,0x6
  403a1a:	mov    r14d,eax
  403a1d:	je     0x403ab9
  403a23:	mov    rcx,QWORD PTR [rbx+0x30]
  403a27:	xor    ebx,ebx
  403a29:	call   0x402c80
  403a2e:	mov    esi,eax
  403a30:	cmp    rbx,rbp
  403a33:	jae    0x402ed3
  403a39:	mov    r9d,esi
  403a3c:	mov    r8d,r14d
  403a3f:	mov    edx,edi
  403a41:	mov    rcx,r12
  403a44:	add    rbx,0x1
  403a48:	call   0x4015f8
  403a4d:	lea    rcx,[rip+0x286e]        # 0x4062c2
  403a54:	mov    edx,eax
  403a56:	call   0x402c38
  403a5b:	jmp    0x403a30
  403a5d:	lea    rdx,[rip+0x2c30]        # 0x406694
  403a64:	mov    rcx,r14
  403a67:	call   0x402c18
  403a6c:	test   eax,eax
  403a6e:	jne    0x403ac5
  403a70:	sub    r15d,0x1
  403a74:	jne    0x403562
  403a7a:	mov    rcx,QWORD PTR [rbx+0x20]
  403a7e:	xor    ebx,ebx
  403a80:	call   0x402c88
  403a85:	movapd xmm6,xmm0
  403a89:	cmp    rbx,rbp
  403a8c:	jae    0x402ed3
  403a92:	movapd xmm1,xmm6
  403a96:	mov    rcx,r12
  403a99:	add    rbx,0x1
  403a9d:	call   0x4015e8
  403aa2:	lea    rcx,[rip+0x283b]        # 0x4062e4
  403aa9:	movapd xmm1,xmm0
  403aad:	movq   rdx,xmm0
  403ab2:	call   0x402c38
  403ab7:	jmp    0x403a89
  403ab9:	lea    rcx,[rip+0x2bd2]        # 0x406692
  403ac0:	call   0x401530
  403ac5:	lea    rdx,[rip+0x2bd0]        # 0x40669c
  403acc:	mov    rcx,r14
  403acf:	call   0x402c18
  403ad4:	test   eax,eax
  403ad6:	jne    0x403b2f
  403ad8:	xor    ebx,ebx
  403ada:	test   r15d,r15d
  403add:	jne    0x403b23
  403adf:	cmp    rbx,rbp
  403ae2:	jae    0x402ed3
  403ae8:	mov    rcx,r12
  403aeb:	add    rbx,0x1
  403aef:	call   0x4015f0
  403af4:	lea    rcx,[rip+0x27e9]        # 0x4062e4
  403afb:	movapd xmm1,xmm0
  403aff:	movq   rdx,xmm0
  403b04:	call   0x402c38
  403b09:	jmp    0x403adf
  403b0b:	lea    rcx,[rip+0x2b7d]        # 0x40668f
  403b12:	call   0x401530
  403b17:	lea    rcx,[rip+0x2b2a]        # 0x406648
  403b1e:	call   0x401530
  403b23:	lea    rcx,[rip+0x2b79]        # 0x4066a3
  403b2a:	call   0x401530
  403b2f:	lea    rdx,[rip+0x2b83]        # 0x4066b9
  403b36:	mov    rcx,r14
  403b39:	call   0x402c18
  403b3e:	test   eax,eax
  403b40:	jne    0x403ba6
  403b42:	cmp    r15d,0x2
  403b46:	jne    0x403c46
  403b4c:	mov    rcx,QWORD PTR [rbx+0x20]
  403b50:	call   0x402c88
  403b55:	cmp    r13d,0x5
  403b59:	movapd xmm7,xmm0
  403b5d:	je     0x403c3a
  403b63:	mov    rcx,QWORD PTR [rbx+0x28]
  403b67:	xor    ebx,ebx
  403b69:	call   0x402c88
  403b6e:	movapd xmm6,xmm0
  403b72:	cmp    rbx,rbp
  403b75:	jae    0x402ed3
  403b7b:	movapd xmm2,xmm6
  403b7f:	movapd xmm1,xmm7
  403b83:	mov    rcx,r12
  403b86:	add    rbx,0x1
  403b8a:	call   0x4015e0
  403b8f:	lea    rcx,[rip+0x274e]        # 0x4062e4
  403b96:	movapd xmm1,xmm0
  403b9a:	movq   rdx,xmm0
  403b9f:	call   0x402c38
  403ba4:	jmp    0x403b72
  403ba6:	lea    rdx,[rip+0x2b41]        # 0x4066ee
  403bad:	mov    rcx,r14
  403bb0:	call   0x402c18
  403bb5:	test   eax,eax
  403bb7:	jne    0x403c5e
  403bbd:	cmp    r15d,0x3
  403bc1:	jne    0x403c52
  403bc7:	mov    rcx,QWORD PTR [rbx+0x20]
  403bcb:	call   0x402c88
  403bd0:	cmp    r13d,0x5
  403bd4:	movapd xmm7,xmm0
  403bd8:	je     0x403c3a
  403bda:	mov    rcx,QWORD PTR [rbx+0x28]
  403bde:	call   0x402c88
  403be3:	cmp    r13d,0x6
  403be7:	movapd xmm8,xmm0
  403bec:	je     0x403592
  403bf2:	mov    rcx,QWORD PTR [rbx+0x30]
  403bf6:	xor    ebx,ebx
  403bf8:	call   0x402c88
  403bfd:	movapd xmm6,xmm0
  403c01:	cmp    rbx,rbp
  403c04:	jae    0x402ed3
  403c0a:	movapd xmm3,xmm6
  403c0e:	movapd xmm2,xmm8
  403c13:	movapd xmm1,xmm7
  403c17:	mov    rcx,r12
  403c1a:	add    rbx,0x1
  403c1e:	call   0x4015d8
  403c23:	lea    rcx,[rip+0x26ba]        # 0x4062e4
  403c2a:	movapd xmm1,xmm0
  403c2e:	movq   rdx,xmm0
  403c33:	call   0x402c38
  403c38:	jmp    0x403c01
  403c3a:	lea    rcx,[rip+0x2aab]        # 0x4066ec
  403c41:	call   0x401530
  403c46:	lea    rcx,[rip+0x2a73]        # 0x4066c0
  403c4d:	call   0x401530
  403c52:	lea    rcx,[rip+0x2a9f]        # 0x4066f8
  403c59:	call   0x401530
  403c5e:	lea    rdx,[rip+0x2ac9]        # 0x40672e
  403c65:	mov    rcx,r14
  403c68:	call   0x402c18
  403c6d:	test   eax,eax
  403c6f:	jne    0x403cb3
  403c71:	sub    r15d,0x1
  403c75:	jne    0x403d0f
  403c7b:	mov    rcx,QWORD PTR [rbx+0x20]
  403c7f:	xor    ebx,ebx
  403c81:	call   0x402c88
  403c86:	movapd xmm6,xmm0
  403c8a:	cmp    rbx,rbp
  403c8d:	jae    0x402ed3
  403c93:	movapd xmm1,xmm6
  403c97:	mov    rcx,r12
  403c9a:	add    rbx,0x1
  403c9e:	call   0x4015d0
  403ca3:	lea    rcx,[rip+0x2618]        # 0x4062c2
  403caa:	mov    edx,eax
  403cac:	call   0x402c38
  403cb1:	jmp    0x403c8a
  403cb3:	lea    rdx,[rip+0x2a90]        # 0x40674a
  403cba:	mov    rcx,r14
  403cbd:	call   0x402c18
  403cc2:	test   eax,eax
  403cc4:	jne    0x403d1b
  403cc6:	sub    r15d,0x1
  403cca:	jne    0x403562
  403cd0:	mov    rcx,QWORD PTR [rbx+0x20]
  403cd4:	xor    ebx,ebx
  403cd6:	call   0x402c88
  403cdb:	movapd xmm6,xmm0
  403cdf:	cmp    rbx,rbp
  403ce2:	jae    0x402ed3
  403ce8:	movapd xmm1,xmm6
  403cec:	mov    rcx,r12
  403cef:	add    rbx,0x1
  403cf3:	call   0x4015c8
  403cf8:	lea    rcx,[rip+0x25e5]        # 0x4062e4
  403cff:	movapd xmm1,xmm0
  403d03:	movq   rdx,xmm0
  403d08:	call   0x402c38
  403d0d:	jmp    0x403cdf
  403d0f:	lea    rcx,[rip+0x2a24]        # 0x40673a
  403d16:	call   0x401530
  403d1b:	lea    rdx,[rip+0x2a31]        # 0x406753
  403d22:	mov    rcx,r14
  403d25:	call   0x402c18
  403d2a:	test   eax,eax
  403d2c:	jne    0x403d92
  403d2e:	cmp    r15d,0x2
  403d32:	jne    0x403dfe
  403d38:	mov    rcx,QWORD PTR [rbx+0x20]
  403d3c:	call   0x402c88
  403d41:	cmp    r13d,0x5
  403d45:	movapd xmm7,xmm0
  403d49:	je     0x4034d8
  403d4f:	mov    rcx,QWORD PTR [rbx+0x28]
  403d53:	xor    ebx,ebx
  403d55:	call   0x402c88
  403d5a:	movapd xmm6,xmm0
  403d5e:	cmp    rbx,rbp
  403d61:	jae    0x402ed3
  403d67:	movapd xmm2,xmm6
  403d6b:	movapd xmm1,xmm7
  403d6f:	mov    rcx,r12
  403d72:	add    rbx,0x1
  403d76:	call   0x4015c0
  403d7b:	lea    rcx,[rip+0x2562]        # 0x4062e4
  403d82:	movapd xmm1,xmm0
  403d86:	movq   rdx,xmm0
  403d8b:	call   0x402c38
  403d90:	jmp    0x403d5e
  403d92:	lea    rdx,[rip+0x29fa]        # 0x406793
  403d99:	mov    rcx,r14
  403d9c:	call   0x402c18
  403da1:	test   eax,eax
  403da3:	jne    0x403e16
  403da5:	cmp    r15d,0x2
  403da9:	jne    0x403e0a
  403dab:	mov    rcx,QWORD PTR [rbx+0x20]
  403daf:	call   0x402c88
  403db4:	cmp    r13d,0x5
  403db8:	movapd xmm7,xmm0
  403dbc:	je     0x403c3a
  403dc2:	mov    rcx,QWORD PTR [rbx+0x28]
  403dc6:	xor    ebx,ebx
  403dc8:	call   0x402c88
  403dcd:	movapd xmm6,xmm0
  403dd1:	cmp    rbx,rbp
  403dd4:	jae    0x402ed3
  403dda:	movapd xmm2,xmm6
  403dde:	movapd xmm1,xmm7
  403de2:	mov    rcx,r12
  403de5:	add    rbx,0x1
  403de9:	call   0x4015b8
  403dee:	lea    rcx,[rip+0x24cd]        # 0x4062c2
  403df5:	mov    edx,eax
  403df7:	call   0x402c38
  403dfc:	jmp    0x403dd1
  403dfe:	lea    rcx,[rip+0x295b]        # 0x406760
  403e05:	call   0x401530
  403e0a:	lea    rcx,[rip+0x2994]        # 0x4067a5
  403e11:	call   0x401530
  403e16:	lea    rdx,[rip+0x29a3]        # 0x4067c0
  403e1d:	mov    rcx,r14
  403e20:	call   0x402c18
  403e25:	test   eax,eax
  403e27:	jne    0x403e8d
  403e29:	cmp    r15d,0x2
  403e2d:	jne    0x403ef6
  403e33:	mov    rcx,QWORD PTR [rbx+0x20]
  403e37:	call   0x402c88
  403e3c:	cmp    r13d,0x5
  403e40:	movapd xmm7,xmm0
  403e44:	je     0x403592
  403e4a:	mov    rcx,QWORD PTR [rbx+0x28]
  403e4e:	xor    ebx,ebx
  403e50:	call   0x402c88
  403e55:	movapd xmm6,xmm0
  403e59:	cmp    rbx,rbp
  403e5c:	jae    0x402ed3
  403e62:	movapd xmm2,xmm6
  403e66:	movapd xmm1,xmm7
  403e6a:	mov    rcx,r12
  403e6d:	add    rbx,0x1
  403e71:	call   0x4015b0
  403e76:	lea    rcx,[rip+0x2467]        # 0x4062e4
  403e7d:	movapd xmm1,xmm0
  403e81:	movq   rdx,xmm0
  403e86:	call   0x402c38
  403e8b:	jmp    0x403e59
  403e8d:	lea    rdx,[rip+0x2953]        # 0x4067e7
  403e94:	mov    rcx,r14
  403e97:	call   0x402c18
  403e9c:	test   eax,eax
  403e9e:	jne    0x403f0e
  403ea0:	cmp    r15d,0x2
  403ea4:	jne    0x403f02
  403ea6:	mov    rcx,QWORD PTR [rbx+0x20]
  403eaa:	call   0x402c88
  403eaf:	cmp    r13d,0x5
  403eb3:	movapd xmm6,xmm0
  403eb7:	je     0x4034a8
  403ebd:	mov    rcx,QWORD PTR [rbx+0x28]
  403ec1:	xor    ebx,ebx
  403ec3:	call   0x402c80
  403ec8:	mov    esi,eax
  403eca:	cmp    rbx,rbp
  403ecd:	jae    0x402ed3
  403ed3:	movapd xmm1,xmm6
  403ed7:	mov    r8d,esi
  403eda:	mov    rcx,r12
  403edd:	add    rbx,0x1
  403ee1:	call   0x4015a8
  403ee6:	lea    rcx,[rip+0x23d5]        # 0x4062c2
  403eed:	mov    edx,eax
  403eef:	call   0x402c38
  403ef4:	jmp    0x403eca
  403ef6:	lea    rcx,[rip+0x28cb]        # 0x4067c8
  403efd:	call   0x401530
  403f02:	lea    rcx,[rip+0x28e7]        # 0x4067f0
  403f09:	call   0x401530
  403f0e:	lea    rdx,[rip+0x2900]        # 0x406815
  403f15:	mov    rcx,r14
  403f18:	call   0x402c18
  403f1d:	test   eax,eax
  403f1f:	jne    0x403f63
  403f21:	sub    r15d,0x1
  403f25:	jne    0x403fbb
  403f2b:	mov    rcx,QWORD PTR [rbx+0x20]
  403f2f:	xor    ebx,ebx
  403f31:	call   0x402c88
  403f36:	movapd xmm6,xmm0
  403f3a:	cmp    rbx,rbp
  403f3d:	jae    0x402ed3
  403f43:	movapd xmm1,xmm6
  403f47:	mov    rcx,r12
  403f4a:	add    rbx,0x1
  403f4e:	call   0x4015a0
  403f53:	lea    rcx,[rip+0x2368]        # 0x4062c2
  403f5a:	mov    edx,eax
  403f5c:	call   0x402c38
  403f61:	jmp    0x403f3a
  403f63:	lea    rdx,[rip+0x28c8]        # 0x406832
  403f6a:	mov    rcx,r14
  403f6d:	call   0x402c18
  403f72:	test   eax,eax
  403f74:	jne    0x403fd3
  403f76:	sub    r15d,0x1
  403f7a:	jne    0x403fc7
  403f7c:	mov    rcx,QWORD PTR [rbx+0x20]
  403f80:	xor    ebx,ebx
  403f82:	call   0x402c88
  403f87:	movapd xmm6,xmm0
  403f8b:	cmp    rbx,rbp
  403f8e:	jae    0x402ed3
  403f94:	movapd xmm1,xmm6
  403f98:	mov    rcx,r12
  403f9b:	add    rbx,0x1
  403f9f:	call   0x401598
  403fa4:	lea    rcx,[rip+0x2339]        # 0x4062e4
  403fab:	movapd xmm1,xmm0
  403faf:	movq   rdx,xmm0
  403fb4:	call   0x402c38
  403fb9:	jmp    0x403f8b
  403fbb:	lea    rcx,[rip+0x285b]        # 0x40681d
  403fc2:	call   0x401530
  403fc7:	lea    rcx,[rip+0x286d]        # 0x40683b
  403fce:	call   0x401530
  403fd3:	lea    rdx,[rip+0x2879]        # 0x406853
  403fda:	mov    rcx,r14
  403fdd:	call   0x402c18
  403fe2:	test   eax,eax
  403fe4:	jne    0x40404a
  403fe6:	cmp    r15d,0x2
  403fea:	jne    0x4040a6
  403ff0:	mov    rcx,QWORD PTR [rbx+0x20]
  403ff4:	call   0x402c88
  403ff9:	cmp    r13d,0x5
  403ffd:	movapd xmm7,xmm0
  404001:	je     0x4034d8
  404007:	mov    rcx,QWORD PTR [rbx+0x28]
  40400b:	xor    ebx,ebx
  40400d:	call   0x402c88
  404012:	movapd xmm6,xmm0
  404016:	cmp    rbx,rbp
  404019:	jae    0x402ed3
  40401f:	movapd xmm2,xmm6
  404023:	movapd xmm1,xmm7
  404027:	mov    rcx,r12
  40402a:	add    rbx,0x1
  40402e:	call   0x401590
  404033:	lea    rcx,[rip+0x22aa]        # 0x4062e4
  40403a:	movapd xmm1,xmm0
  40403e:	movq   rdx,xmm0
  404043:	call   0x402c38
  404048:	jmp    0x404016
  40404a:	lea    rdx,[rip+0x2840]        # 0x406891
  404051:	mov    rcx,r14
  404054:	call   0x402c18
  404059:	test   eax,eax
  40405b:	jne    0x4040b2
  40405d:	sub    r15d,0x1
  404061:	jne    0x40357a
  404067:	mov    rcx,QWORD PTR [rbx+0x20]
  40406b:	xor    ebx,ebx
  40406d:	call   0x402c88
  404072:	movapd xmm6,xmm0
  404076:	cmp    rbx,rbp
  404079:	jae    0x402ed3
  40407f:	movapd xmm1,xmm6
  404083:	mov    rcx,r12
  404086:	add    rbx,0x1
  40408a:	call   0x401588
  40408f:	lea    rcx,[rip+0x224e]        # 0x4062e4
  404096:	movapd xmm1,xmm0
  40409a:	movq   rdx,xmm0
  40409f:	call   0x402c38
  4040a4:	jmp    0x404076
  4040a6:	lea    rcx,[rip+0x27bb]        # 0x406868
  4040ad:	call   0x401530
  4040b2:	lea    rdx,[rip+0x27de]        # 0x406897
  4040b9:	mov    rcx,r14
  4040bc:	call   0x402c18
  4040c1:	test   eax,eax
  4040c3:	jne    0x404125
  4040c5:	cmp    r15d,0x2
  4040c9:	jne    0x404143
  4040cb:	mov    rcx,QWORD PTR [rbx+0x20]
  4040cf:	call   0x402c88
  4040d4:	cmp    r13d,0x5
  4040d8:	movapd xmm7,xmm0
  4040dc:	je     0x403592
  4040e2:	mov    rcx,QWORD PTR [rbx+0x28]
  4040e6:	xor    ebx,ebx
  4040e8:	call   0x402c88
  4040ed:	movapd xmm6,xmm0
  4040f1:	cmp    rbx,rbp
  4040f4:	jae    0x402ed3
  4040fa:	movapd xmm2,xmm6
  4040fe:	movapd xmm1,xmm7
  404102:	mov    rcx,r12
  404105:	add    rbx,0x1
  404109:	call   0x401570
  40410e:	lea    rcx,[rip+0x21cf]        # 0x4062e4
  404115:	movapd xmm1,xmm0
  404119:	movq   rdx,xmm0
  40411e:	call   0x402c38
  404123:	jmp    0x4040f1
  404125:	call   QWORD PTR [rip+0x7495]        # 0x40b5c0
  40412b:	lea    rdx,[rip+0x2796]        # 0x4068c8
  404132:	lea    rcx,[rax+0x60]
  404136:	mov    r8,r14
  404139:	call   0x402c60
  40413e:	jmp    0x402ed3
  404143:	lea    rcx,[rip+0x2756]        # 0x4068a0
  40414a:	call   0x401530
  40414f:	nop
  404150:	(bad)  
  404151:	(bad)  
  404152:	(bad)  
  404153:	(bad)  
  404154:	(bad)  
  404155:	(bad)  
  404156:	(bad)  
  404157:	inc    DWORD PTR [rax]
  404159:	add    BYTE PTR [rax],al
  40415b:	add    BYTE PTR [rax],al
  40415d:	add    BYTE PTR [rax],al
  40415f:	add    bh,bh
  404161:	(bad)  
  404162:	(bad)  
  404163:	(bad)  
  404164:	(bad)  
  404165:	(bad)  
  404166:	(bad)  
  404167:	inc    DWORD PTR [rax]
  404169:	add    BYTE PTR [rax],al
  40416b:	add    BYTE PTR [rax],al
  40416d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000405000 <.data>:
  405000:	or     al,BYTE PTR [rax]
	...
  40500e:	add    BYTE PTR [rax],al
  405010:	push   0x4041
	...
  40501d:	add    BYTE PTR [rax],al
  40501f:	add    bh,bh
  405021:	(bad)  
  405022:	(bad)  
  405023:	(bad)  
  405024:	(bad)  
  405025:	(bad)  
  405026:	(bad)  
  405027:	inc    DWORD PTR [rax]
  405029:	add    BYTE PTR [rax],al
  40502b:	add    BYTE PTR [rax],al
  40502d:	add    BYTE PTR [rax],al
  40502f:	add    bh,bh
	...
  40503d:	add    BYTE PTR [rax],al
  40503f:	add    BYTE PTR [rdx],al
	...
  40504d:	add    BYTE PTR [rax],al
  40504f:	add    bh,bh
  405051:	(bad)  
  405052:	(bad)  
  405053:	inc    DWORD PTR [rax]
	...
  405061:	sub    eax,0x40
  405066:	add    BYTE PTR [rax],al
  405068:	adc    BYTE PTR [rip+0x40],ch        # 0x4050ae
  40506e:	add    BYTE PTR [rax],al
  405070:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  40507e:	add    BYTE PTR [rax],al
  405080:	int    0x5d
  405082:	and    dl,dl
  405084:	data16 (bad) 
  405086:	(bad)  
  405087:	inc    DWORD PTR [rax]
  405089:	add    BYTE PTR [rax],al
  40508b:	add    BYTE PTR [rax],al
  40508d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000406000 <.rdata>:
  406000:	rex.RB jb 0x406075
  406003:	outs   dx,DWORD PTR ds:[rsi]
  406004:	jb     0x406040
  406006:	and    BYTE PTR [rcx+0x72],ah
  406009:	addr32 jne 0x406079
  40600c:	outs   dx,BYTE PTR gs:[rsi]
  40600e:	je     0x406083
  406010:	and    BYTE PTR [rbx+0x68],dh
  406013:	outs   dx,DWORD PTR ds:[rsi]
  406014:	jne    0x406082
  406016:	and    BYTE PTR fs:[rdx+0x65],ah
  40601a:	and    BYTE PTR [rip+0xa73],ah        # 0x406a93
  406020:	push   rbp
  406021:	jae    0x406084
  406023:	cmp    ah,BYTE PTR gs:[eax]
  406027:	addr32 jae 0x406096
  40602a:	sub    eax,0x646e6172
  40602f:	imul   esi,DWORD PTR [rbx+0x74],0x65657320
  406036:	and    BYTE PTR fs:[rsi+0x20],ch
  40603a:	rex.R
  40603b:	rex.WB push r11
  40603d:	push   rsp
  40603e:	and    BYTE PTR [rax+0x61],dh
  406041:	jb     0x4060a4
  406043:	ins    DWORD PTR es:[rdi],dx
  406044:	xor    DWORD PTR [rax],esp
  406046:	jo     0x4060a9
  406048:	jb     0x4060ab
  40604a:	ins    DWORD PTR es:[rdi],dx
  40604b:	xor    ah,BYTE PTR [rax]
  40604d:	cs cs or al,BYTE PTR cs:[rdi+0x65]
  406053:	outs   dx,BYTE PTR ds:[rsi]
  406054:	gs jb  0x4060b8
  406057:	je     0x4060be
  406059:	jae    0x40607b
  40605b:	outs   dx,BYTE PTR ds:[rsi]
  40605c:	and    BYTE PTR [rbx+0x61],dh
  40605f:	ins    DWORD PTR es:[rdi],dx
  406060:	jo     0x4060ce
  406062:	gs jae 0x406085
  406065:	data16 jb 0x4060d7
  406068:	ins    DWORD PTR es:[rdi],dx
  406069:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40606d:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  406071:	je     0x4060e5
  406073:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  40607a:	and    BYTE PTR [rcx+rcx*2+0x53],al
  40607e:	push   rsp
  40607f:	and    BYTE PTR [rdi+0x69],dh
  406082:	je     0x4060ec
  406084:	and    BYTE PTR [rax+0x61],dh
  406087:	jb     0x4060ea
  406089:	ins    DWORD PTR es:[rdi],dx
  40608a:	gs je  0x4060f2
  40608d:	jb     0x406102
  40608f:	and    BYTE PTR [rax+0x61],dh
  406092:	jb     0x4060f5
  406094:	ins    DWORD PTR es:[rdi],dx
  406095:	xor    DWORD PTR [rdx+rcx*1],ebp
  406098:	jo     0x4060fb
  40609a:	jb     0x4060fd
  40609c:	ins    DWORD PTR es:[rdi],dx
  40609d:	xor    ch,BYTE PTR [rax+riz*1]
  4060a0:	gs je  0x406106
  4060a3:	and    BYTE PTR cs:[rsi+0x61],dl
  4060a7:	ins    BYTE PTR es:[rdi],dx
  4060a8:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x72747369
  4060b0:	imul   esp,DWORD PTR [rdx+0x75],0x6e6f6974
  4060b7:	jae    0x4060d9
  4060b9:	(bad)  
  4060ba:	jb     0x406121
  4060bc:	sub    al,0xa
  4060be:	add    BYTE PTR [rax],al
  4060c0:	and    BYTE PTR [rax],ah
  4060c2:	(bad)  
  4060c3:	gs je  0x406127
  4060c6:	or     ah,BYTE PTR [rax]
  4060c8:	and    BYTE PTR [rdx+0x69],ah
  4060cb:	outs   dx,BYTE PTR ds:[rsi]
  4060cc:	outs   dx,DWORD PTR ds:[rsi]
  4060cd:	ins    DWORD PTR es:[rdi],dx
  4060ce:	imul   esp,DWORD PTR [rcx+0x6c],0x6220200a
  4060d5:	imul   esi,DWORD PTR [rsi+0x61],0x74616972
  4060dc:	gs sub eax,0x73756167
  4060e2:	jae    0x40614d
  4060e4:	(bad)  
  4060e5:	outs   dx,BYTE PTR ds:[rsi]
  4060e6:	or     ah,BYTE PTR [rax]
  4060e8:	and    BYTE PTR [rbx+0x61],ah
  4060eb:	jne    0x406150
  4060ed:	push   0x20200a79
  4060f2:	movsxd ebp,DWORD PTR [rax+0x69]
  4060f5:	jae    0x406168
  4060f7:	or     ah,BYTE PTR [rax]
  4060f9:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  4060fd:	sub    eax,0x200a6432
  406102:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  406106:	sub    eax,0x200a6433
  40610b:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  40610f:	sub    eax,0x200a646e
  406114:	and    BYTE PTR [rbp+0x72],ah
  406117:	ins    BYTE PTR es:[rdi],dx
  406118:	(bad)  
  406119:	outs   dx,BYTE PTR ds:[rsi]
  40611a:	or     ah,BYTE PTR [eax]
  40611d:	and    BYTE PTR [rbp+0x78],ah
  406120:	jo     0x406191
  406122:	outs   dx,BYTE PTR ds:[rsi]
  406123:	outs   dx,BYTE PTR gs:[rsi]
  406125:	je     0x406190
  406127:	(bad)  
  406128:	ins    BYTE PTR es:[rdi],dx
  406129:	or     ah,BYTE PTR [rax]
  40612b:	and    BYTE PTR [rbp+0x78],ah
  40612e:	jo     0x4061a0
  406130:	outs   dx,DWORD PTR ds:[rsi]
  406131:	ja     0x40613d
  406133:	and    BYTE PTR [rax],ah
  406135:	imul   si,WORD PTR fs:[rbx+0x74],0x200a
  40613c:	and    BYTE PTR [rsi+0x6c],ah
  40613f:	(bad)  
  406140:	je     0x40614c
  406142:	and    BYTE PTR [rax],ah
  406144:	addr32 (bad) 
  406146:	ins    DWORD PTR es:[rdi],dx
  406147:	ins    DWORD PTR es:[rdi],dx
  406148:	(bad)  
  406149:	or     ah,BYTE PTR [rax]
  40614b:	and    BYTE PTR [rdi+0x61],ah
  40614e:	jne    0x4061c3
  406150:	jae    0x4061bb
  406152:	(bad)  
  406153:	outs   dx,BYTE PTR ds:[rsi]
  406154:	sub    eax,0x6c696174
  406159:	or     ah,BYTE PTR [rax]
  40615b:	and    BYTE PTR [rdi+0x61],ah
  40615e:	jne    0x4061d3
  406160:	jae    0x4061cb
  406162:	(bad)  
  406163:	outs   dx,BYTE PTR ds:[rsi]
  406164:	or     ah,BYTE PTR [rax]
  406166:	and    BYTE PTR [rdi+0x65],ah
  406169:	outs   dx,DWORD PTR ds:[rsi]
  40616a:	ins    DWORD PTR es:[rdi],dx
  40616b:	gs je  0x4061e0
  40616e:	imul   esp,DWORD PTR [rbx+0xa],0x75672020
  406175:	ins    DWORD PTR es:[rdi],dx
  406176:	(bad)  
  406177:	gs ins BYTE PTR es:[rdi],dx
  406179:	xor    DWORD PTR [rdx],ecx
  40617b:	and    BYTE PTR [rax],ah
  40617d:	addr32 jne 0x4061ed
  406180:	(bad)  
  406181:	gs ins BYTE PTR es:[rdi],dx
  406183:	xor    cl,BYTE PTR [rdx]
  406185:	and    BYTE PTR [rax],ah
  406187:	push   0x72657079
  40618c:	outs   dx,DWORD PTR gs:[esi]
  40618f:	ins    DWORD PTR es:[rdi],dx
  406190:	gs je  0x406205
  406193:	imul   esp,DWORD PTR [rbx+0xa],0x616c2020
  40619a:	jo     0x406208
  40619c:	(bad)  
  40619d:	movsxd esp,DWORD PTR [rbp+0xa]
  4061a0:	and    BYTE PTR [rax],ah
  4061a2:	ins    BYTE PTR es:[rdi],dx
  4061a3:	(bad)  
  4061a4:	outs   dx,BYTE PTR ds:[rsi]
  4061a5:	fs (bad) 
  4061a7:	jne    0x4061b3
  4061a9:	and    BYTE PTR [rax],ah
  4061ab:	ins    BYTE PTR es:[rdi],dx
  4061ac:	gs jbe 0x406228
  4061af:	or     ah,BYTE PTR [rax]
  4061b1:	and    BYTE PTR [rbp+riz*2+0x76],ch
  4061b5:	jns    0x4061e4
  4061b7:	jae    0x406224
  4061b9:	gs ja  0x4061c6
  4061bc:	and    BYTE PTR [rax],ah
  4061be:	ins    BYTE PTR es:[rdi],dx
  4061bf:	outs   dx,DWORD PTR ds:[rsi]
  4061c0:	addr32 (bad) 
  4061c2:	jb     0x40622d
  4061c4:	je     0x40622e
  4061c6:	ins    DWORD PTR es:[rdi],dx
  4061c7:	imul   esp,DWORD PTR [rbx+0xa],0x6f6c2020
  4061ce:	imul   esi,DWORD PTR [ebx+0x74],0x200a6369
  4061d6:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  4061da:	outs   dx,BYTE PTR ds:[rsi]
  4061db:	outs   dx,DWORD PTR ds:[rsi]
  4061dc:	jb     0x40624b
  4061de:	(bad)  
  4061df:	ins    BYTE PTR es:[rdi],dx
  4061e0:	or     ah,BYTE PTR [rax]
  4061e2:	and    BYTE PTR [rsi+0x65],ch
  4061e5:	addr32 (bad) 
  4061e7:	je     0x406252
  4061e9:	jbe    0x406250
  4061eb:	sub    eax,0x6f6e6962
  4061f0:	ins    DWORD PTR es:[rdi],dx
  4061f1:	imul   esp,DWORD PTR [rcx+0x6c],0x7020200a
  4061f8:	(bad)  
  4061f9:	jb     0x406260
  4061fb:	je     0x40626c
  4061fd:	or     ah,BYTE PTR [rax]
  4061ff:	and    BYTE PTR [rax+0x61],dh
  406202:	jae    0x406267
  406204:	(bad)  
  406205:	ins    BYTE PTR es:[rdi],dx
  406206:	or     ah,BYTE PTR [rax]
  406208:	and    BYTE PTR [rax+0x6f],dh
  40620b:	imul   esi,DWORD PTR [rbx+0x73],0x200a6e6f
  406212:	and    BYTE PTR [rdx+0x61],dh
  406215:	jns    0x406283
  406217:	imul   esp,DWORD PTR gs:[rdi+0x68],0x6961742d
  40621f:	ins    BYTE PTR es:[rdi],dx
  406220:	or     ah,BYTE PTR [rax]
  406222:	and    BYTE PTR [rdx+0x61],dh
  406225:	jns    0x406293
  406227:	imul   esp,DWORD PTR gs:[rdi+0x68],0x7420200a
  40622f:	imul   esi,DWORD PTR fs:[rbx+0x74],0x7520200a
  406237:	addr32 (bad) 
  406239:	jne    0x4062ae
  40623b:	jae    0x4062a6
  40623d:	(bad)  
  40623e:	outs   dx,BYTE PTR ds:[rsi]
  40623f:	sub    eax,0x6c696174
  406244:	or     ah,BYTE PTR [rax]
  406246:	and    BYTE PTR [rbp+0x67],dh
  406249:	(bad)  
  40624a:	jne    0x4062bf
  40624c:	jae    0x4062b7
  40624e:	(bad)  
  40624f:	outs   dx,BYTE PTR ds:[rsi]
  406250:	or     ah,BYTE PTR [rax]
  406252:	and    BYTE PTR [rdi+0x65],dh
  406255:	imul   esp,DWORD PTR [rdx+0x75],0x6c6c
  40625c:	add    BYTE PTR [rax],al
  40625e:	add    BYTE PTR [rax],al
  406260:	outs   dx,DWORD PTR ds:[rsi]
  406261:	jbe    0x4062c8
  406263:	jb     0x4062d7
  406265:	imul   esp,DWORD PTR [rcx+rbp*2+0x6e],0x53472067
  40626d:	rex.WR pop rdi
  40626f:	push   rdx
  406270:	rex.WRX
  406271:	rex.RXB pop r15
  406273:	push   rbx
  406274:	rex.RB
  406275:	rex.RB
  406276:	and    BYTE PTR [rdi+0x69],r14b
  40627a:	je     0x4062e4
  40627c:	and    BYTE PTR [rbx+0x6f],ah
  40627f:	ins    DWORD PTR es:[rdi],dx
  406280:	ins    DWORD PTR es:[rdi],dx
  406281:	(bad)  
  406282:	outs   dx,BYTE PTR ds:[rsi]
  406283:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  406288:	and    BYTE PTR gs:[rsi+0x61],dh
  40628c:	ins    BYTE PTR es:[rdi],dx
  40628d:	jne    0x4062f4
  40628f:	sub    al,0x20
  406291:	jae    0x4062f8
  406293:	gs and BYTE PTR fs:[rip+0x646c2520],bh        # 0x64ac87bb
  40629b:	or     al,BYTE PTR [rax]
  40629d:	(bad)  
  40629e:	gs jb  0x40630f
  4062a1:	outs   dx,DWORD PTR ds:[rsi]
  4062a2:	jne    0x406310
  4062a4:	ins    BYTE PTR es:[rdi],dx
  4062a5:	imul   eax,DWORD PTR [rax],0x203d2070
  4062ab:	jo     0x40631f
  4062ad:	outs   dx,DWORD PTR ds:[rsi]
  4062ae:	(bad)  
  4062b0:	(bad)  
  4062b1:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x666f2079
  4062b9:	and    BYTE PTR [rbx+0x75],dh
  4062bc:	movsxd esp,DWORD PTR [rbx+0x65]
  4062bf:	jae    0x406334
  4062c1:	add    BYTE PTR [rip+0x62000a64],ah        # 0x62406d2b
  4062c7:	gs je  0x40632b
  4062ca:	add    BYTE PTR [rcx+0x2c],ah
  4062cd:	(bad)  
  4062ce:	and    BYTE PTR [rip+0x61687320],bh        # 0x61a8d5f4
  4062d4:	jo     0x40633b
  4062d6:	and    BYTE PTR [rax+0x61],dh
  4062d9:	jb     0x40633c
  4062db:	ins    DWORD PTR es:[rdi],dx
  4062dc:	gs je  0x406344
  4062df:	jb     0x406354
  4062e1:	add    BYTE PTR [rdx+0x0],ah
  4062e4:	and    eax,0x62000a67
  4062e9:	imul   ebp,DWORD PTR [rsi+0x6f],0x6c61696d
	...
  4062f8:	jo     0x40631a
  4062fa:	cmp    eax,0x6f727020
  4062ff:	(bad)  
  406301:	(bad)  
  406302:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x4e202c79
  40630a:	and    BYTE PTR [rip+0x6d756e20],bh        # 0x6db5d130
  406310:	(bad)  
  406311:	gs jb  0x406334
  406314:	outs   dx,DWORD PTR ds:[rsi]
  406315:	data16 and BYTE PTR [rdx+rsi*2+0x69],dh
  40631a:	(bad)  
  40631b:	ins    BYTE PTR es:[rdi],dx
  40631c:	jae    0x40631e
  40631e:	rex.WRX add BYTE PTR [rbx+0x61],r12b
  406322:	jne    0x406387
  406324:	push   0x20610079
  406329:	cmp    eax,0x61637320
  40632e:	ins    BYTE PTR es:[rdi],dx
  40632f:	and    BYTE PTR gs:[rax+0x61],dh
  406333:	jb     0x406396
  406335:	ins    DWORD PTR es:[rdi],dx
  406336:	gs je  0x40639e
  406339:	jb     0x40633b
  40633b:	movsxd ebp,DWORD PTR [rax+0x69]
  40633e:	jae    0x4063b1
  406340:	add    BYTE PTR [rsi+0x75],ch
  406343:	and    BYTE PTR [rip+0x67656420],bh        # 0x67a5c769
  406349:	jb     0x4063b0
  40634b:	gs jae 0x40636e
  40634e:	outs   dx,DWORD PTR ds:[rsi]
  40634f:	data16 and BYTE PTR [rsi+0x72],ah
  406353:	gs gs outs dx,DWORD PTR fs:[rsi]
  406357:	ins    DWORD PTR es:[rdi],dx
  406358:	add    BYTE PTR [rbp+0x72],ah
  40635b:	ins    BYTE PTR es:[rdi],dx
  40635c:	(bad)  
  40635d:	outs   dx,BYTE PTR ds:[rsi]
  40635e:	add    BYTE PTR [ecx+0x20],ah
  406362:	cmp    eax,0x61637320
  406367:	ins    BYTE PTR es:[rdi],dx
  406368:	and    BYTE PTR gs:[rax+0x61],dh
  40636c:	jb     0x4063cf
  40636e:	ins    DWORD PTR es:[rdi],dx
  40636f:	gs je  0x4063d7
  406372:	jb     0x4063a0
  406374:	and    BYTE PTR [rdx+0x20],ah
  406377:	cmp    eax,0x64726f20
  40637c:	gs jb  0x40637f
  40637f:	gs js  0x4063f2
  406382:	outs   dx,DWORD PTR ds:[rsi]
  406383:	outs   dx,BYTE PTR ds:[rsi]
  406384:	outs   dx,BYTE PTR gs:[rsi]
  406386:	je     0x4063f1
  406388:	(bad)  
  406389:	ins    BYTE PTR es:[rdi],dx
  40638a:	add    BYTE PTR [rbp+0x75],ch
  40638d:	and    BYTE PTR [rip+0x61656d20],bh        # 0x61a5d0b3
  406393:	outs   dx,BYTE PTR ds:[rsi]
  406394:	and    BYTE PTR [rsi+0x61],dh
  406397:	ins    BYTE PTR es:[rdi],dx
  406398:	jne    0x4063ff
  40639a:	add    BYTE PTR [rbp+0x78],ah
  40639d:	jo     0x40640f
  40639f:	outs   dx,DWORD PTR ds:[rsi]
  4063a0:	ja     0x4063a2
  4063a2:	add    BYTE PTR [rax],al
  4063a4:	add    BYTE PTR [rax],al
  4063a6:	add    BYTE PTR [rax],al
  4063a8:	(bad)  
  4063a9:	and    BYTE PTR [rip+0x61637320],bh        # 0x61a3d6cf
  4063af:	ins    BYTE PTR es:[rdi],dx
  4063b0:	and    BYTE PTR gs:[rax+0x61],dh
  4063b4:	jb     0x406417
  4063b6:	ins    DWORD PTR es:[rdi],dx
  4063b7:	gs je  0x40641f
  4063ba:	jb     0x4063e8
  4063bc:	and    BYTE PTR [rdx+0x20],ah
  4063bf:	cmp    eax,0x776f7020
  4063c4:	gs jb  0x4063e7
  4063c7:	sub    BYTE PTR [rcx],dh
  4063c9:	cmp    eax,0x6f707865
  4063ce:	outs   dx,BYTE PTR ds:[rsi]
  4063cf:	outs   dx,BYTE PTR gs:[rsi]
  4063d1:	je     0x40643c
  4063d3:	(bad)  
  4063d4:	ins    BYTE PTR es:[rdi],dx
  4063d5:	sub    al,0x20
  4063d7:	xor    bh,BYTE PTR [rip+0x73756167]        # 0x73b5c544
  4063dd:	jae    0x406448
  4063df:	(bad)  
  4063e0:	outs   dx,BYTE PTR ds:[rsi]
  4063e1:	sub    DWORD PTR [rax],eax
  4063e3:	imul   si,WORD PTR fs:[rbx+0x74],0x0
  4063ea:	add    BYTE PTR [rax],al
  4063ec:	add    BYTE PTR [rax],al
  4063ee:	add    BYTE PTR [rax],al
  4063f0:	outs   dx,BYTE PTR ds:[rsi]
  4063f1:	jne    0x406424
  4063f3:	sub    al,0x20
  4063f5:	outs   dx,BYTE PTR ds:[rsi]
  4063f6:	jne    0x40642a
  4063f8:	and    BYTE PTR [rip+0x67656420],bh        # 0x67a5c81e
  4063fe:	jb     0x406465
  406400:	gs jae 0x406423
  406403:	outs   dx,DWORD PTR ds:[rsi]
  406404:	data16 and BYTE PTR [rsi+0x72],ah
  406408:	gs gs outs dx,DWORD PTR fs:[rsi]
  40640c:	ins    DWORD PTR es:[rdi],dx
  40640d:	and    BYTE PTR [rax+0x61],dh
  406410:	jb     0x406473
  406412:	ins    DWORD PTR es:[rdi],dx
  406413:	gs je  0x40647b
  406416:	jb     0x40648b
  406418:	add    BYTE PTR [rsi+0x75],ch
  40641b:	xor    al,BYTE PTR [rax]
  40641d:	data16 ins BYTE PTR es:[rdi],dx
  40641f:	(bad)  
  406420:	je     0x406422
  406422:	add    BYTE PTR [rax],al
  406424:	add    BYTE PTR [rax],al
  406426:	add    BYTE PTR [rax],al
  406428:	(bad)  
  406429:	and    BYTE PTR [rip+0x776f6c20],bh        # 0x77afd04f
  40642f:	gs jb  0x406452
  406432:	ins    BYTE PTR es:[rdi],dx
  406433:	imul   ebp,DWORD PTR [rbp+0x69],0x62202c74
  40643a:	and    BYTE PTR [rip+0x70707520],bh        # 0x70b0d960
  406440:	gs jb  0x406463
  406443:	ins    BYTE PTR es:[rdi],dx
  406444:	imul   ebp,DWORD PTR [rbp+0x69],0x61670074
  40644b:	ins    DWORD PTR es:[rdi],dx
  40644c:	ins    DWORD PTR es:[rdi],dx
  40644d:	(bad)  
  40644e:	add    BYTE PTR [rcx+0x20],ah
  406451:	cmp    eax,0x64726f20
  406456:	gs jb  0x406485
  406459:	and    BYTE PTR [rdx+0x20],ah
  40645c:	cmp    eax,0x61637320
  406461:	ins    BYTE PTR es:[rdi],dx
  406462:	add    BYTE PTR gs:[rdi+0x61],ah
  406466:	jne    0x4064db
  406468:	jae    0x4064d3
  40646a:	(bad)  
  40646b:	outs   dx,BYTE PTR ds:[rsi]
  40646c:	add    BYTE PTR [rbx+0x69],dh
  40646f:	ins    DWORD PTR es:[edi],dx
  406471:	(bad)  
  406472:	and    BYTE PTR [rip+0x61747320],bh        # 0x61b4d798
  406478:	outs   dx,BYTE PTR ds:[rsi]
  406479:	fs (bad) 
  40647b:	jb     0x4064e1
  40647d:	and    BYTE PTR [rbp+riz*2+0x76],ah
  406481:	imul   esp,DWORD PTR [rcx+0x74],0x6e6f69
  406488:	addr32 (bad) 
  40648a:	jne    0x4064ff
  40648c:	jae    0x4064f7
  40648e:	(bad)  
  40648f:	outs   dx,BYTE PTR ds:[rsi]
  406490:	sub    eax,0x6c696174
  406495:	add    BYTE PTR [rax],al
  406497:	add    BYTE PTR [rcx+0x20],ah
  40649a:	cmp    eax,0x776f6c20
  40649f:	gs jb  0x4064c2
  4064a2:	ins    BYTE PTR es:[rdi],dx
  4064a3:	imul   ebp,DWORD PTR [rbp+0x69],0x73202c74
  4064aa:	imul   esp,DWORD PTR [rdi+0x6d],0x203d2061
  4064b1:	jae    0x406527
  4064b3:	(bad)  
  4064b4:	outs   dx,BYTE PTR ds:[rsi]
  4064b5:	fs (bad) 
  4064b7:	jb     0x40651d
  4064b9:	and    BYTE PTR [rbp+riz*2+0x76],ah
  4064bd:	imul   esp,DWORD PTR [rcx+0x74],0x6e6f69
  4064c4:	jae    0x40652f
  4064c6:	ins    DWORD PTR es:[edi],dx
  4064c8:	(bad)  
  4064c9:	add    BYTE PTR [rbp+0x67],dh
  4064cc:	(bad)  
  4064cd:	jne    0x406542
  4064cf:	jae    0x40653a
  4064d1:	(bad)  
  4064d2:	outs   dx,BYTE PTR ds:[rsi]
  4064d3:	add    BYTE PTR [rax],al
  4064d5:	add    BYTE PTR [rax],al
  4064d7:	add    BYTE PTR [rbp+0x6e],dh
  4064da:	imul   esi,DWORD PTR [rax+riz*1+0x67],0x73737561
  4064e2:	imul   esp,DWORD PTR [rcx+0x6e],0x6f6e202c
  4064e9:	and    BYTE PTR [rax+0x61],dh
  4064ec:	jb     0x40654f
  4064ee:	ins    DWORD PTR es:[rdi],dx
  4064ef:	gs je  0x406557
  4064f2:	jb     0x406567
  4064f4:	and    BYTE PTR [rdx+0x65],dh
  4064f7:	jno    0x40656e
  4064f9:	imul   esi,DWORD PTR [rdx+0x65],0x67750064
  406500:	(bad)  
  406501:	jne    0x406576
  406503:	jae    0x40656e
  406505:	(bad)  
  406506:	outs   dx,BYTE PTR ds:[rsi]
  406507:	sub    eax,0x6c696174
  40650c:	add    BYTE PTR [rcx+0x20],ah
  40650f:	cmp    eax,0x776f6c20
  406514:	gs jb  0x406537
  406517:	ins    BYTE PTR es:[rdi],dx
  406518:	imul   ebp,DWORD PTR [rbp+0x69],0x69620074
  40651f:	jbe    0x406582
  406521:	jb     0x40658c
  406523:	(bad)  
  406524:	je     0x40658b
  406526:	sub    eax,0x73756167
  40652b:	jae    0x406596
  40652d:	(bad)  
  40652e:	outs   dx,BYTE PTR ds:[rsi]
  40652f:	add    BYTE PTR [rbx+0x69],dh
  406532:	ins    DWORD PTR es:[edi],dx
  406534:	(bad)  
  406535:	js     0x406557
  406537:	cmp    eax,0x73207820
  40653c:	je     0x4065a2
  40653e:	cs fs gs jbe 0x406571
  406543:	sub    al,0x20
  406545:	jae    0x4065b0
  406547:	ins    DWORD PTR es:[edi],dx
  406549:	(bad)  
  40654a:	jns    0x40656c
  40654c:	cmp    eax,0x73207920
  406551:	je     0x4065b7
  406553:	cs fs gs jbe 0x406586
  406558:	sub    al,0x20
  40655a:	jb     0x4065c4
  40655c:	outs   dx,DWORD PTR ds:[rsi]
  40655d:	and    BYTE PTR [rip+0x726f6320],bh        # 0x72afc883
  406563:	jb     0x4065ca
  406565:	ins    BYTE PTR es:[rdi],dx
  406566:	(bad)  
  406567:	je     0x4065d2
  406569:	outs   dx,DWORD PTR ds:[rsi]
  40656a:	outs   dx,BYTE PTR ds:[rsi]
  40656b:	add    BYTE PTR [rbx+0x69],dh
  40656e:	ins    DWORD PTR es:[edi],dx
  406570:	(bad)  
  406571:	jns    0x406573
  406573:	jb     0x4065dd
  406575:	outs   dx,DWORD PTR ds:[rsi]
  406576:	add    BYTE PTR [rip+0x67252067],ah        # 0x676585e3
  40657c:	or     al,BYTE PTR [rax]
  40657e:	imul   esi,DWORD PTR fs:[rdx+0x2d],0x64006432
  406586:	imul   esi,DWORD PTR [rdx+0x2d],0x25006433
  40658d:	and    BYTE PTR [eip+0x67252067],ah        # 0x676585fb
  406594:	or     al,BYTE PTR [rax]
  406596:	imul   esi,DWORD PTR fs:[rdx+0x2d],0x646e
  40659e:	add    BYTE PTR [rax],al
  4065a0:	outs   dx,BYTE PTR ds:[rsi]
  4065a1:	xor    DWORD PTR [rax],esp
  4065a3:	cmp    eax,0x6d756e20
  4065a8:	(bad)  
  4065a9:	gs jb  0x4065cc
  4065ac:	outs   dx,DWORD PTR ds:[rsi]
  4065ad:	data16 and BYTE PTR [rcx+rbp*2+0x6d],ah
  4065b2:	outs   dx,BYTE PTR gs:[rsi]
  4065b4:	jae    0x40661f
  4065b6:	outs   dx,DWORD PTR ds:[rsi]
  4065b7:	outs   dx,BYTE PTR ds:[rsi]
  4065b8:	jae    0x4065da
  4065ba:	outs   dx,DWORD PTR ds:[rsi]
  4065bb:	data16 and BYTE PTR [rax+0x79],ch
  4065bf:	jo     0x406626
  4065c1:	jb     0x406636
  4065c3:	jo     0x40662d
  4065c5:	gs jb  0x40662d
  4065c8:	add    BYTE PTR [rip+0x65670067],ah        # 0x65a76635
  4065ce:	outs   dx,DWORD PTR ds:[rsi]
  4065cf:	ins    DWORD PTR es:[rdi],dx
  4065d0:	gs je  0x406645
  4065d3:	imul   esp,DWORD PTR [rbx+0x0],0x20700000
  4065da:	cmp    eax,0x72656220
  4065df:	outs   dx,BYTE PTR ds:[rsi]
  4065e0:	outs   dx,DWORD PTR ds:[rsi]
  4065e1:	jne    0x40664f
  4065e3:	ins    BYTE PTR es:[rdi],dx
  4065e4:	imul   esp,DWORD PTR [rax],0x61697274
  4065ea:	ins    BYTE PTR es:[rdi],dx
  4065eb:	and    BYTE PTR [rax+0x72],dh
  4065ee:	outs   dx,DWORD PTR ds:[rsi]
  4065ef:	(bad)  
  4065f1:	(bad)  
  4065f2:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x666f2079
  4065fa:	and    BYTE PTR [rbx+0x75],dh
  4065fd:	movsxd esp,DWORD PTR [rbx+0x65]
  406600:	jae    0x406675
  406602:	add    BYTE PTR [rdi+0x75],ah
  406605:	ins    DWORD PTR es:[rdi],dx
  406606:	(bad)  
  406607:	gs ins BYTE PTR es:[rdi],dx
  406609:	xor    DWORD PTR [rax],eax
  40660b:	add    BYTE PTR [rax],al
  40660d:	add    BYTE PTR [rax],al
  40660f:	add    BYTE PTR [rcx+0x20],ah
  406612:	cmp    eax,0x64726f20
  406617:	gs jb  0x406646
  40661a:	and    BYTE PTR [rdx+0x20],ah
  40661d:	cmp    eax,0x61637320
  406622:	ins    BYTE PTR es:[rdi],dx
  406623:	and    BYTE PTR gs:[rax+0x61],dh
  406627:	jb     0x40668a
  406629:	ins    DWORD PTR es:[rdi],dx
  40662a:	gs je  0x406692
  40662d:	jb     0x40662f
  40662f:	addr32 jne 0x40669f
  406632:	(bad)  
  406633:	gs ins BYTE PTR es:[rdi],dx
  406635:	xor    al,BYTE PTR [rax]
  406637:	push   0x72657079
  40663c:	outs   dx,DWORD PTR gs:[esi]
  40663f:	ins    DWORD PTR es:[rdi],dx
  406640:	gs je  0x4066b5
  406643:	imul   esp,DWORD PTR [rbx+0x0],0x316e0000
  40664a:	and    BYTE PTR [rip+0x67617420],bh        # 0x67a1da70
  406650:	gs and BYTE PTR fs:[eax+0x6f],dh
  406656:	jo     0x4066cd
  406658:	ins    BYTE PTR es:[rdi],dx
  406659:	(bad)  
  40665a:	je     0x4066c5
  40665c:	outs   dx,DWORD PTR ds:[rsi]
  40665d:	outs   dx,BYTE PTR ds:[rsi]
  40665e:	sub    al,0x20
  406660:	outs   dx,BYTE PTR ds:[rsi]
  406661:	xor    ah,BYTE PTR [rax]
  406663:	cmp    eax,0x746e7520
  406668:	(bad)  
  406669:	addr32 gs and BYTE PTR fs:[eax+0x6f],dh
  406670:	jo     0x4066e7
  406672:	ins    BYTE PTR es:[rdi],dx
  406673:	(bad)  
  406674:	je     0x4066df
  406676:	outs   dx,DWORD PTR ds:[rsi]
  406677:	outs   dx,BYTE PTR ds:[rsi]
  406678:	sub    al,0x20
  40667a:	je     0x40669c
  40667c:	cmp    eax,0x6d756e20
  406681:	(bad)  
  406682:	gs jb  0x4066a5
  406685:	outs   dx,DWORD PTR ds:[rsi]
  406686:	data16 and BYTE PTR [rdx+rsi*2+0x69],dh
  40668b:	(bad)  
  40668c:	ins    BYTE PTR es:[rdi],dx
  40668d:	jae    0x40668f
  40668f:	outs   dx,BYTE PTR ds:[rsi]
  406690:	xor    al,BYTE PTR [rax]
  406692:	je     0x406694
  406694:	ins    BYTE PTR es:[rdi],dx
  406695:	(bad)  
  406696:	jo     0x406704
  406698:	(bad)  
  406699:	movsxd esp,DWORD PTR [rbp+0x0]
  40669c:	ins    BYTE PTR es:[rdi],dx
  40669d:	(bad)  
  40669e:	outs   dx,BYTE PTR ds:[rsi]
  40669f:	fs (bad) 
  4066a1:	jne    0x4066a3
  4066a3:	outs   dx,BYTE PTR ds:[rsi]
  4066a4:	outs   dx,DWORD PTR ds:[rsi]
  4066a5:	and    BYTE PTR [rcx+0x72],ah
  4066a8:	addr32 jne 0x406718
  4066ab:	outs   dx,BYTE PTR gs:[rsi]
  4066ad:	je     0x406722
  4066af:	and    BYTE PTR [rdx+0x65],dh
  4066b2:	jno    0x406729
  4066b4:	imul   esi,DWORD PTR [rdx+0x65],0x656c0064
  4066bb:	jbe    0x406736
  4066bd:	add    BYTE PTR [rax],al
  4066bf:	add    BYTE PTR [rbx+0x20],ah
  4066c2:	cmp    eax,0x61637320
  4066c7:	ins    BYTE PTR es:[rdi],dx
  4066c8:	gs sub al,0x20
  4066cb:	(bad)  
  4066cc:	and    BYTE PTR [rip+0x776f7020],bh        # 0x77afd6f2
  4066d2:	gs jb  0x4066f5
  4066d5:	sub    BYTE PTR [rcx],dh
  4066d7:	cmp    eax,0x63756163
  4066dc:	push   0x32202c79
  4066e1:	cmp    eax,0x73756167
  4066e6:	jae    0x406751
  4066e8:	(bad)  
  4066e9:	outs   dx,BYTE PTR ds:[rsi]
  4066ea:	sub    DWORD PTR [rax],eax
  4066ec:	(bad)  
  4066ed:	add    BYTE PTR [rbp+riz*2+0x76],ch
  4066f1:	jns    0x406720
  4066f3:	jae    0x406760
  4066f5:	gs ja  0x4066f8
  4066f8:	movsxd esp,DWORD PTR [rax]
  4066fa:	cmp    eax,0x61637320
  4066ff:	ins    BYTE PTR es:[rdi],dx
  406700:	gs sub al,0x20
  406703:	(bad)  
  406704:	and    BYTE PTR [rip+0x776f7020],bh        # 0x77afd72a
  40670a:	gs jb  0x40672d
  40670d:	sub    BYTE PTR [rcx],dh
  40670f:	cmp    eax,0x63756163
  406714:	push   0x32202c79
  406719:	cmp    eax,0x73756167
  40671e:	jae    0x406789
  406720:	(bad)  
  406721:	outs   dx,BYTE PTR ds:[rsi]
  406722:	sub    DWORD PTR [rax+riz*1],ebp
  406725:	(bad)  
  406726:	and    BYTE PTR [rip+0x656b7320],bh        # 0x65abda4c
  40672c:	ja     0x40672e
  40672e:	ins    BYTE PTR es:[rdi],dx
  40672f:	outs   dx,DWORD PTR ds:[rsi]
  406730:	addr32 (bad) 
  406732:	jb     0x40679d
  406734:	je     0x40679e
  406736:	ins    DWORD PTR es:[rdi],dx
  406737:	imul   esp,DWORD PTR [rbx+0x0],0x203d2070
  40673e:	jo     0x4067b2
  406740:	outs   dx,DWORD PTR ds:[rsi]
  406741:	(bad)  
  406743:	(bad)  
  406744:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6f6c0079
  40674c:	imul   esi,DWORD PTR [ebx+0x74],0x6c006369
  406754:	outs   dx,DWORD PTR ds:[rsi]
  406755:	outs   dx,BYTE PTR ds:[esi]
  406757:	outs   dx,DWORD PTR ds:[rsi]
  406758:	jb     0x4067c7
  40675a:	(bad)  
  40675b:	ins    BYTE PTR es:[rdi],dx
  40675c:	add    BYTE PTR [rax],al
  40675e:	add    BYTE PTR [rax],al
  406760:	jp     0x4067c7
  406762:	je     0x4067c5
  406764:	and    BYTE PTR [rip+0x636f6c20],bh        # 0x63afd38a
  40676a:	(bad)  
  40676b:	je     0x4067d6
  40676d:	outs   dx,DWORD PTR ds:[rsi]
  40676e:	outs   dx,BYTE PTR ds:[rsi]
  40676f:	and    BYTE PTR [rax+0x61],dh
  406772:	jb     0x4067d5
  406774:	ins    DWORD PTR es:[rdi],dx
  406775:	gs je  0x4067dd
  406778:	jb     0x4067a6
  40677a:	and    BYTE PTR [rbx+0x69],dh
  40677d:	ins    DWORD PTR es:[edi],dx
  40677f:	(bad)  
  406780:	and    BYTE PTR [rip+0x61637320],bh        # 0x61a3daa6
  406786:	ins    BYTE PTR es:[rdi],dx
  406787:	and    BYTE PTR gs:[rax+0x61],dh
  40678b:	jb     0x4067ee
  40678d:	ins    DWORD PTR es:[rdi],dx
  40678e:	gs je  0x4067f6
  406791:	jb     0x406793
  406793:	outs   dx,BYTE PTR ds:[rsi]
  406794:	gs addr32 (bad) 
  406797:	je     0x406802
  406799:	jbe    0x406800
  40679b:	sub    eax,0x6f6e6962
  4067a0:	ins    DWORD PTR es:[rdi],dx
  4067a1:	imul   esp,DWORD PTR [rcx+0x6c],0x3d207000
  4067a8:	and    BYTE PTR [rax+0x72],dh
  4067ab:	outs   dx,DWORD PTR ds:[rsi]
  4067ac:	(bad)  
  4067ae:	(bad)  
  4067af:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x61202c79
  4067b7:	and    BYTE PTR [rip+0x64726f20],bh        # 0x64b2d6dd
  4067bd:	gs jb  0x4067c0
  4067c0:	jo     0x406823
  4067c2:	jb     0x406829
  4067c4:	je     0x406835
  4067c6:	add    BYTE PTR [rax],al
  4067c8:	(bad)  
  4067c9:	and    BYTE PTR [rip+0x776f7020],bh        # 0x77afd7ef
  4067cf:	gs jb  0x4067fe
  4067d2:	and    BYTE PTR [rdx+0x20],ah
  4067d5:	cmp    eax,0x61637320
  4067da:	ins    BYTE PTR es:[rdi],dx
  4067db:	and    BYTE PTR gs:[rax+0x61],dh
  4067df:	jb     0x406842
  4067e1:	ins    DWORD PTR es:[rdi],dx
  4067e2:	gs je  0x40684a
  4067e5:	jb     0x4067e7
  4067e7:	jo     0x40684a
  4067e9:	jae    0x40684e
  4067eb:	(bad)  
  4067ec:	ins    BYTE PTR es:[rdi],dx
  4067ed:	add    BYTE PTR [rax],al
  4067ef:	add    BYTE PTR [rax+0x20],dh
  4067f2:	cmp    eax,0x6f727020
  4067f7:	(bad)  
  4067f9:	(bad)  
  4067fa:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6e202c79
  406802:	and    BYTE PTR [rip+0x64726f20],bh        # 0x64b2d728
  406808:	gs jb  0x40682b
  40680b:	sub    BYTE PTR [rcx+0x6e],ch
  40680e:	je     0x406875
  406810:	addr32 gs jb 0x40683d
  406814:	add    BYTE PTR [rax+0x6f],dh
  406817:	imul   esi,DWORD PTR [rbx+0x73],0x6d006e6f
  40681e:	jne    0x406840
  406820:	cmp    eax,0x61637320
  406825:	ins    BYTE PTR es:[rdi],dx
  406826:	and    BYTE PTR gs:[rax+0x61],dh
  40682a:	jb     0x40688d
  40682c:	ins    DWORD PTR es:[rdi],dx
  40682d:	gs je  0x406895
  406830:	jb     0x406832
  406832:	jb     0x406895
  406834:	jns    0x4068a2
  406836:	imul   esp,DWORD PTR gs:[rdi+0x68],0x67697300
  40683e:	ins    DWORD PTR es:[rdi],dx
  40683f:	(bad)  
  406840:	and    BYTE PTR [rip+0x61637320],bh        # 0x61a3db66
  406846:	ins    BYTE PTR es:[rdi],dx
  406847:	and    BYTE PTR gs:[rax+0x61],dh
  40684b:	jb     0x4068ae
  40684d:	ins    DWORD PTR es:[rdi],dx
  40684e:	gs je  0x4068b6
  406851:	jb     0x406853
  406853:	jb     0x4068b6
  406855:	jns    0x4068c3
  406857:	imul   esp,DWORD PTR gs:[rdi+0x68],0x6961742d
  40685f:	ins    BYTE PTR es:[rdi],dx
	...
  406868:	(bad)  
  406869:	and    BYTE PTR [rip+0x776f6c20],bh        # 0x77afd48f
  40686f:	gs jb  0x406892
  406872:	ins    BYTE PTR es:[rdi],dx
  406873:	imul   ebp,DWORD PTR [rbp+0x69],0x73202c74
  40687a:	imul   esp,DWORD PTR [rdi+0x6d],0x203d2061
  406881:	jae    0x4068e6
  406883:	(bad)  
  406884:	ins    BYTE PTR es:[rdi],dx
  406885:	and    BYTE PTR gs:[rax+0x61],dh
  406889:	jb     0x4068ec
  40688b:	ins    DWORD PTR es:[rdi],dx
  40688c:	gs je  0x4068f4
  40688f:	jb     0x406891
  406891:	je     0x4068f7
  406893:	imul   esi,DWORD PTR [rbx+0x74],0x69657700
  40689a:	(bad)  
  40689b:	jne    0x406909
  40689d:	ins    BYTE PTR es:[rdi],dx
  40689e:	add    BYTE PTR [rax],al
  4068a0:	(bad)  
  4068a1:	and    BYTE PTR [rip+0x61637320],bh        # 0x61a3dbc7
  4068a7:	ins    BYTE PTR es:[rdi],dx
  4068a8:	and    BYTE PTR gs:[rax+0x61],dh
  4068ac:	jb     0x40690f
  4068ae:	ins    DWORD PTR es:[rdi],dx
  4068af:	gs je  0x406917
  4068b2:	jb     0x4068e0
  4068b4:	and    BYTE PTR [rdx+0x20],ah
  4068b7:	cmp    eax,0x70786520
  4068bc:	outs   dx,DWORD PTR ds:[rsi]
  4068bd:	outs   dx,BYTE PTR ds:[rsi]
  4068be:	outs   dx,BYTE PTR gs:[rsi]
  4068c0:	je     0x4068c2
  4068c2:	add    BYTE PTR [rax],al
  4068c4:	add    BYTE PTR [rax],al
  4068c6:	add    BYTE PTR [rax],al
  4068c8:	rex.RB jb 0x40693d
  4068cb:	outs   dx,DWORD PTR ds:[rsi]
  4068cc:	jb     0x406908
  4068ce:	and    BYTE PTR [rbp+0x6e],dh
  4068d1:	jb     0x406938
  4068d3:	movsxd ebp,DWORD PTR [rdi+0x67]
  4068d6:	outs   dx,BYTE PTR ds:[rsi]
  4068d7:	imul   edi,DWORD PTR [rdx+0x65],0x69642064
  4068de:	jae    0x406954
  4068e0:	jb     0x40694b
  4068e2:	(bad)  
  4068e3:	jne    0x406959
  4068e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  4068ec:	or     al,BYTE PTR [rax]
  4068ee:	add    BYTE PTR [rax],al
  4068f0:	and    BYTE PTR [rbp+0x40],0x0
  4068f7:	add    BYTE PTR [rax+0x40a0],al
  4068fd:	add    BYTE PTR [rax],al
  4068ff:	add    BYTE PTR [rax+0x1a],ah
  406902:	add    BYTE PTR [rax],al
	...
  40690d:	add    BYTE PTR [rax],al
  40690f:	add    BYTE PTR [rcx+0x72],al
  406912:	addr32 jne 0x406982
  406915:	outs   dx,BYTE PTR gs:[rsi]
  406917:	je     0x406939
  406919:	outs   dx,DWORD PTR fs:[rsi]
  40691b:	ins    DWORD PTR es:[rdi],dx
  40691c:	(bad)  
  40691d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  406924:	jb     0x406946
  406926:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40692a:	rex.B
  40692b:	rex.WB
  40692c:	rex.WRX sub QWORD PTR [rax],r8
  40692f:	rex.B jb 0x406999
  406932:	jne    0x4069a1
  406934:	outs   dx,BYTE PTR gs:[rsi]
  406936:	je     0x406958
  406938:	jae    0x4069a3
  40693a:	outs   dx,BYTE PTR ds:[rsi]
  40693b:	addr32 jne 0x4069aa
  40693e:	(bad)  
  40693f:	jb     0x4069aa
  406941:	je     0x4069bc
  406943:	and    BYTE PTR [rax],ch
  406945:	push   rbx
  406946:	rex.WB
  406947:	rex.RXB
  406948:	rex.WRX sub QWORD PTR [rax],r8
  40694b:	add    BYTE PTR [rax],al
  40694d:	add    BYTE PTR [rax],al
  40694f:	add    BYTE PTR [rdi+0x76],cl
  406952:	gs jb  0x4069bb
  406955:	ins    BYTE PTR es:[rdi],dx
  406956:	outs   dx,DWORD PTR ds:[rsi]
  406957:	ja     0x406979
  406959:	jb     0x4069bc
  40695b:	outs   dx,BYTE PTR ds:[rsi]
  40695c:	and    BYTE PTR gs:[ebp+0x72],ah
  406961:	jb     0x4069d2
  406963:	jb     0x406985
  406965:	sub    BYTE PTR [rdi+0x56],cl
  406968:	rex.RB push r10
  40696a:	rex.RX
  40696b:	rex.WR
  40696c:	rex.WRXB push r15
  40696e:	sub    DWORD PTR [rax],eax
  406970:	push   rax
  406971:	(bad)  
  406972:	jb     0x4069e8
  406974:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40697b:	jae    0x40699d
  40697d:	outs   dx,DWORD PTR ds:[rsi]
  40697e:	data16 and BYTE PTR [rbx+0x69],dh
  406982:	outs   dx,BYTE PTR ds:[esi]
  406984:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40698b:	and    BYTE PTR gs:[rax],ch
  40698e:	push   rax
  40698f:	rex.WR
  406990:	rex.WRXB push r11
  406992:	push   rbx
  406993:	sub    DWORD PTR [rax],eax
  406995:	add    BYTE PTR [rax],al
  406997:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40699b:	(bad)  
  40699c:	ins    BYTE PTR es:[rdi],dx
  40699d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4069a1:	jae    0x4069c3
  4069a3:	outs   dx,DWORD PTR ds:[rsi]
  4069a4:	data16 and BYTE PTR [rbx+0x69],dh
  4069a8:	outs   dx,BYTE PTR ds:[esi]
  4069aa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4069b1:	and    BYTE PTR gs:[rax],ch
  4069b4:	push   rsp
  4069b5:	rex.WR
  4069b6:	rex.WRXB push r11
  4069b8:	push   rbx
  4069b9:	sub    DWORD PTR [rax],eax
  4069bb:	add    BYTE PTR [rax],al
  4069bd:	add    BYTE PTR [rax],al
  4069bf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4069c3:	and    BYTE PTR [rdx+0x65],dh
  4069c6:	jae    0x406a3d
  4069c8:	ins    BYTE PTR es:[rdi],dx
  4069c9:	je     0x4069eb
  4069cb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4069d2:	jae    0x406a41
  4069d4:	(bad)  
  4069d5:	ins    BYTE PTR es:[rdi],dx
  4069d6:	ins    BYTE PTR es:[rdi],dx
  4069d7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4069db:	(bad)  
  4069dc:	and    BYTE PTR gs:[rdx+0x65],dh
  4069e0:	jo     0x406a54
  4069e2:	gs jae 0x406a4a
  4069e5:	outs   dx,BYTE PTR ds:[rsi]
  4069e6:	je     0x406a4d
  4069e8:	and    BYTE PTR fs:[rax],ch
  4069eb:	push   rbp
  4069ec:	rex.WRX
  4069ed:	rex.R
  4069ee:	rex.RB push r10
  4069f0:	rex.RX
  4069f1:	rex.WR
  4069f2:	rex.WRXB push r15
  4069f4:	sub    DWORD PTR [rax],eax
  4069f6:	push   rbp
  4069f7:	outs   dx,BYTE PTR ds:[rsi]
  4069f8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4069fc:	outs   dx,BYTE PTR ds:[rsi]
  4069fd:	and    BYTE PTR [rbp+0x72],ah
  406a00:	jb     0x406a71
  406a02:	jb     0x406a04
  406a04:	add    BYTE PTR [rax],al
  406a06:	add    BYTE PTR [rax],al
  406a08:	pop    rdi
  406a09:	ins    DWORD PTR es:[rdi],dx
  406a0a:	(bad)  
  406a0b:	je     0x406a75
  406a0d:	gs jb  0x406a82
  406a10:	sub    BYTE PTR [rcx],ch
  406a12:	cmp    ah,BYTE PTR [rax]
  406a14:	and    eax,0x6e692073
  406a19:	and    BYTE PTR [rip+0x67252873],ah        # 0x67659292
  406a1f:	sub    al,0x20
  406a21:	and    eax,0x20202967
  406a26:	sub    BYTE PTR [rdx+0x65],dh
  406a29:	je     0x406aa1
  406a2b:	(bad)  
  406a2c:	ins    BYTE PTR es:[rdi],dx
  406a2d:	cmp    eax,0xa296725
  406a32:	add    BYTE PTR [rax],al
  406a34:	cld    
  406a35:	mov    cl,0xff
  406a37:	(bad)  
  406a38:	cmp    eax,0xacffffb1
  406a3d:	mov    cl,0xff
  406a3f:	(bad)  
  406a40:	mov    esp,0xccffffb1
  406a45:	mov    cl,0xff
  406a47:	(bad)  
  406a48:	fdiv   QWORD PTR [rcx-0x4e130001]
  406a4e:	(bad)  
  406a4f:	dec    DWORD PTR [rbp+0x69]
  406a52:	outs   dx,BYTE PTR ds:[rsi]
  406a53:	addr32 ja 0x406a83
  406a56:	ja     0x406a8e
  406a58:	xor    al,0x20
  406a5a:	jb     0x406ad1
  406a5c:	outs   dx,BYTE PTR ds:[rsi]
  406a5d:	je     0x406ac8
  406a5f:	ins    DWORD PTR es:[rdi],dx
  406a60:	and    BYTE PTR gs:[rsi+0x61],ah
  406a64:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  406a6c:	add    BYTE PTR [rax],al
  406a6e:	add    BYTE PTR [rax],al
  406a70:	rex.B
  406a71:	fs fs jb 0x406ada
  406a75:	jae    0x406aea
  406a77:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a88aed
  406a7d:	jae    0x406a9f
  406a7f:	outs   dx,BYTE PTR ds:[rsi]
  406a80:	outs   dx,DWORD PTR ds:[rsi]
  406a81:	and    BYTE PTR [rcx+0x6d],ch
  406a84:	(bad)  
  406a85:	addr32 gs sub eax,0x74636573
  406a8c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  406a93:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  406a9a:	jne    0x406b01
  406a9c:	jb     0x406b17
  406a9e:	and    BYTE PTR [rsi+0x61],ah
  406aa1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  406aa9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a28b13
  406aaf:	je     0x406b16
  406ab1:	jae    0x406ad3
  406ab3:	(bad)  
  406ab4:	je     0x406ad6
  406ab6:	(bad)  
  406ab7:	fs fs jb 0x406b20
  406abb:	jae    0x406b30
  406abd:	and    BYTE PTR [rip+0x70],ah        # 0x406b33
  406ac3:	add    BYTE PTR [rax],al
  406ac5:	add    BYTE PTR [rax],al
  406ac7:	add    BYTE PTR [rax],ah
  406ac9:	and    BYTE PTR [rsi+0x69],dl
  406acc:	jb     0x406b42
  406ace:	jne    0x406b31
  406ad0:	ins    BYTE PTR es:[rdi],dx
  406ad1:	push   rax
  406ad2:	jb     0x406b43
  406ad4:	je     0x406b3b
  406ad6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  406ada:	(bad)  
  406adb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  406ae3:	push   0x646f6320
  406ae8:	and    BYTE PTR gs:[rax],dh
  406aeb:	js     0x406b12
  406aed:	js     0x406aef
  406aef:	add    BYTE PTR [rax],ah
  406af1:	and    BYTE PTR [rbp+0x6e],dl
  406af4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406af8:	outs   dx,BYTE PTR ds:[rsi]
  406af9:	and    BYTE PTR [rax+0x73],dh
  406afc:	gs jne 0x406b63
  406aff:	outs   dx,DWORD PTR ds:[rsi]
  406b00:	and    BYTE PTR [rdx+0x65],dh
  406b03:	ins    BYTE PTR es:[rdi],dx
  406b04:	outs   dx,DWORD PTR ds:[rsi]
  406b05:	movsxd esp,DWORD PTR [rcx+0x74]
  406b08:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  406b0f:	je     0x406b80
  406b11:	movsxd ebp,DWORD PTR [rdi+0x6c]
  406b14:	and    BYTE PTR [rsi+0x65],dh
  406b17:	jb     0x406b8c
  406b19:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  406b20:	or     al,BYTE PTR [rax]
  406b22:	add    BYTE PTR [rax],al
  406b24:	add    BYTE PTR [rax],al
  406b26:	add    BYTE PTR [rax],al
  406b28:	and    BYTE PTR [rax],ah
  406b2a:	push   rbp
  406b2b:	outs   dx,BYTE PTR ds:[rsi]
  406b2c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406b30:	outs   dx,BYTE PTR ds:[rsi]
  406b31:	and    BYTE PTR [rax+0x73],dh
  406b34:	gs jne 0x406b9b
  406b37:	outs   dx,DWORD PTR ds:[rsi]
  406b38:	and    BYTE PTR [rdx+0x65],dh
  406b3b:	ins    BYTE PTR es:[rdi],dx
  406b3c:	outs   dx,DWORD PTR ds:[rsi]
  406b3d:	movsxd esp,DWORD PTR [rcx+0x74]
  406b40:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  406b47:	and    BYTE PTR [rbx+0x69],dh
  406b4a:	jp     0x406bb1
  406b4c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a99b6
	...
  406b5e:	add    BYTE PTR [rax],al
  406b60:	cs jo  0x406bc7
  406b63:	(bad)  
  406b64:	je     0x406bc7
	...
  406b6e:	add    BYTE PTR [rax],al
  406b70:	push   rax
  406b71:	(bad)  
	...
  406b7e:	add    BYTE PTR [rax],al
  406b80:	rex push rax
  406b82:	add    BYTE PTR [rax],al
	...
  406b8d:	add    BYTE PTR [rax],al
  406b8f:	add    BYTE PTR [rax+0x50],dl
  406b92:	add    BYTE PTR [rax],al
	...
  406b9d:	add    BYTE PTR [rax],al
  406b9f:	add    BYTE PTR [rax+0x41],dl
  406ba2:	add    BYTE PTR [rax],al
	...
  406bad:	add    BYTE PTR [rax],al
  406baf:	add    BYTE PTR [rcx+rsi*2],al
  406bb2:	add    BYTE PTR [rax],al
	...
  406bbd:	add    BYTE PTR [rax],al
  406bbf:	add    al,ah
  406bc1:	jo     0x406c03
	...
  406bcf:	add    BYTE PTR [rax],al
  406bd1:	imul   eax,DWORD PTR [rax+0x0],0x0
	...
  406be0:	add    BYTE PTR [rax],al
  406be2:	add    BYTE PTR [rax],al
	...
  406bed:	add    BYTE PTR [rax],al
  406bef:	add    BYTE PTR [rax+0x40b5],bh
	...
  406bfd:	add    BYTE PTR [rax],al
  406bff:	add    al,ah
  406c01:	mov    ch,0x40
	...
  406c0f:	add    al,bh
  406c11:	mov    ch,0x40
	...
  406c1f:	add    BYTE PTR [rax],dl
  406c21:	mov    dh,0x40
	...
  406c2f:	add    al,al
  406c31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c32:	add    BYTE PTR [rax],al
	...
  406c3d:	add    BYTE PTR [rax],al
  406c3f:	add    BYTE PTR [rax],ch
  406c41:	stos   BYTE PTR es:[rdi],al
  406c42:	add    BYTE PTR [rax],al
	...
  406c4d:	add    BYTE PTR [rax],al
  406c4f:	add    BYTE PTR [rax],ah
  406c51:	stos   BYTE PTR es:[rdi],al
  406c52:	add    BYTE PTR [rax],al
	...
  406c5d:	add    BYTE PTR [rax],al
  406c5f:	add    BYTE PTR [rax],dl
  406c61:	stos   BYTE PTR es:[rdi],al
  406c62:	add    BYTE PTR [rax],al
	...
  406c6d:	add    BYTE PTR [rax],al
  406c6f:	add    BYTE PTR [rax],bl
  406c71:	stos   BYTE PTR es:[rdi],al
  406c72:	add    BYTE PTR [rax],al
	...
  406c81:	rol    BYTE PTR [rax+0x0],0x0
	...
  406c8d:	add    BYTE PTR [rax],al
  406c8f:	add    BYTE PTR [rax],dl
  406c91:	rol    BYTE PTR [rax+0x0],0x0
	...
  406c9d:	add    BYTE PTR [rax],al
  406c9f:	add    BYTE PTR [rax],bl
  406ca1:	rol    BYTE PTR [rax+0x0],0x0
	...
  406cad:	add    BYTE PTR [rax],al
  406caf:	add    BYTE PTR [rax],dh
  406cb1:	rol    BYTE PTR [rax+0x0],0x0
	...
  406cbd:	add    BYTE PTR [rax],al
  406cbf:	add    BYTE PTR [rax-0x60],al
  406cc2:	add    BYTE PTR [rax],al
	...
  406ccd:	add    BYTE PTR [rax],al
  406ccf:	add    BYTE PTR [rax+0x40a6],dl
	...
  406cdd:	add    BYTE PTR [rax],al
  406cdf:	add    al,dh
  406ce1:	and    eax,DWORD PTR [rax+0x0]
	...
  406cf0:	rex sbb eax,DWORD PTR [rax+0x0]
	...
  406d00:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406d02:	add    BYTE PTR [rax],al
	...
  406d0d:	add    BYTE PTR [rax],al
  406d0f:	add    al,al
  406d11:	mov    ah,0x40
	...
  406d1f:	add    al,cl
  406d21:	mov    ah,0x40
	...
  406d2f:	add    BYTE PTR [rax-0x5a],dh
  406d32:	add    BYTE PTR [rax],al
	...
  406d3d:	add    BYTE PTR [rax],al
  406d3f:	add    BYTE PTR [rax-0x60],dl
  406d42:	add    BYTE PTR [rax],al
	...
  406d4d:	add    BYTE PTR [rax],al
  406d4f:	add    BYTE PTR [rax-0x5a],bl
  406d52:	add    BYTE PTR [rax],al
	...
  406d5d:	add    BYTE PTR [rax],al
  406d5f:	add    BYTE PTR [rsi+riz*4+0x40],dl
	...
  406d6f:	add    BYTE PTR [rax-0x5a],dl
  406d72:	add    BYTE PTR [rax],al
	...
  406d7d:	add    BYTE PTR [rax],al
  406d7f:	add    BYTE PTR [rdi+0x43],al
  406d82:	rex.XB cmp spl,BYTE PTR [r8]
  406d85:	sub    BYTE PTR [rdi+0x4e],al
  406d88:	push   rbp
  406d89:	sub    DWORD PTR [rax],esp
  406d8b:	xor    al,0x2e
  406d8d:	cmp    DWORD PTR [rsi],ebp
  406d8f:	xor    al,0x0
	...
  406d9d:	add    BYTE PTR [rax],al
  406d9f:	add    BYTE PTR [rdi+0x43],al
  406da2:	rex.XB cmp spl,BYTE PTR [r8]
  406da5:	sub    BYTE PTR [rdi+0x4e],al
  406da8:	push   rbp
  406da9:	sub    DWORD PTR [rax],esp
  406dab:	xor    al,0x2e
  406dad:	cmp    DWORD PTR [rsi],ebp
  406daf:	xor    al,0x0
	...
  406dbd:	add    BYTE PTR [rax],al
  406dbf:	add    BYTE PTR [rdi+0x43],al
  406dc2:	rex.XB cmp spl,BYTE PTR [r8]
  406dc5:	sub    BYTE PTR [rdi+0x4e],al
  406dc8:	push   rbp
  406dc9:	sub    DWORD PTR [rax],esp
  406dcb:	xor    al,0x2e
  406dcd:	cmp    DWORD PTR [rsi],ebp
  406dcf:	xor    al,0x0
	...
  406ddd:	add    BYTE PTR [rax],al
  406ddf:	add    BYTE PTR [rdi+0x43],al
  406de2:	rex.XB cmp spl,BYTE PTR [r8]
  406de5:	sub    BYTE PTR [rdi+0x4e],al
  406de8:	push   rbp
  406de9:	sub    DWORD PTR [rax],esp
  406deb:	xor    al,0x2e
  406ded:	cmp    DWORD PTR [rsi],ebp
  406def:	xor    al,0x0
	...
  406dfd:	add    BYTE PTR [rax],al
  406dff:	add    BYTE PTR [rdi+0x43],al
  406e02:	rex.XB cmp spl,BYTE PTR [r8]
  406e05:	sub    BYTE PTR [rdi+0x4e],al
  406e08:	push   rbp
  406e09:	sub    DWORD PTR [rax],esp
  406e0b:	xor    al,0x2e
  406e0d:	cmp    DWORD PTR [rsi],ebp
  406e0f:	xor    al,0x0
	...
  406e1d:	add    BYTE PTR [rax],al
  406e1f:	add    BYTE PTR [rdi+0x43],al
  406e22:	rex.XB cmp spl,BYTE PTR [r8]
  406e25:	sub    BYTE PTR [rdi+0x4e],al
  406e28:	push   rbp
  406e29:	sub    DWORD PTR [rax],esp
  406e2b:	xor    al,0x2e
  406e2d:	cmp    DWORD PTR [rsi],ebp
  406e2f:	xor    al,0x0
	...
  406e3d:	add    BYTE PTR [rax],al
  406e3f:	add    BYTE PTR [rdi+0x43],al
  406e42:	rex.XB cmp spl,BYTE PTR [r8]
  406e45:	sub    BYTE PTR [rdi+0x4e],al
  406e48:	push   rbp
  406e49:	sub    DWORD PTR [rax],esp
  406e4b:	xor    al,0x2e
  406e4d:	cmp    DWORD PTR [rsi],ebp
  406e4f:	xor    al,0x0
	...
  406e5d:	add    BYTE PTR [rax],al
  406e5f:	add    BYTE PTR [rdi+0x43],al
  406e62:	rex.XB cmp spl,BYTE PTR [r8]
  406e65:	sub    BYTE PTR [rdi+0x4e],al
  406e68:	push   rbp
  406e69:	sub    DWORD PTR [rax],esp
  406e6b:	xor    al,0x2e
  406e6d:	cmp    DWORD PTR [rsi],ebp
  406e6f:	xor    al,0x0
	...
  406e7d:	add    BYTE PTR [rax],al
  406e7f:	add    BYTE PTR [rdi+0x43],al
  406e82:	rex.XB cmp spl,BYTE PTR [r8]
  406e85:	sub    BYTE PTR [rdi+0x4e],al
  406e88:	push   rbp
  406e89:	sub    DWORD PTR [rax],esp
  406e8b:	xor    al,0x2e
  406e8d:	cmp    DWORD PTR [rsi],ebp
  406e8f:	xor    al,0x0
	...
  406e9d:	add    BYTE PTR [rax],al
  406e9f:	add    BYTE PTR [rdi+0x43],al
  406ea2:	rex.XB cmp spl,BYTE PTR [r8]
  406ea5:	sub    BYTE PTR [rdi+0x4e],al
  406ea8:	push   rbp
  406ea9:	sub    DWORD PTR [rax],esp
  406eab:	xor    al,0x2e
  406ead:	cmp    DWORD PTR [rsi],ebp
  406eaf:	xor    al,0x0
	...
  406ebd:	add    BYTE PTR [rax],al
  406ebf:	add    BYTE PTR [rdi+0x43],al
  406ec2:	rex.XB cmp spl,BYTE PTR [r8]
  406ec5:	sub    BYTE PTR [rdi+0x4e],al
  406ec8:	push   rbp
  406ec9:	sub    DWORD PTR [rax],esp
  406ecb:	xor    al,0x2e
  406ecd:	cmp    DWORD PTR [rsi],ebp
  406ecf:	xor    al,0x0
	...
  406edd:	add    BYTE PTR [rax],al
  406edf:	add    BYTE PTR [rdi+0x43],al
  406ee2:	rex.XB cmp spl,BYTE PTR [r8]
  406ee5:	sub    BYTE PTR [rdi+0x4e],al
  406ee8:	push   rbp
  406ee9:	sub    DWORD PTR [rax],esp
  406eeb:	xor    al,0x2e
  406eed:	cmp    DWORD PTR [rsi],ebp
  406eef:	xor    al,0x0
	...
  406efd:	add    BYTE PTR [rax],al
  406eff:	add    BYTE PTR [rdi+0x43],al
  406f02:	rex.XB cmp spl,BYTE PTR [r8]
  406f05:	sub    BYTE PTR [rdi+0x4e],al
  406f08:	push   rbp
  406f09:	sub    DWORD PTR [rax],esp
  406f0b:	xor    al,0x2e
  406f0d:	cmp    DWORD PTR [rsi],ebp
  406f0f:	xor    al,0x0
	...
  406f1d:	add    BYTE PTR [rax],al
  406f1f:	add    BYTE PTR [rdi+0x43],al
  406f22:	rex.XB cmp spl,BYTE PTR [r8]
  406f25:	sub    BYTE PTR [rdi+0x4e],al
  406f28:	push   rbp
  406f29:	sub    DWORD PTR [rax],esp
  406f2b:	xor    al,0x2e
  406f2d:	cmp    DWORD PTR [rsi],ebp
  406f2f:	xor    al,0x0
	...
  406f3d:	add    BYTE PTR [rax],al
  406f3f:	add    BYTE PTR [rdi+0x43],al
  406f42:	rex.XB cmp spl,BYTE PTR [r8]
  406f45:	sub    BYTE PTR [rdi+0x4e],al
  406f48:	push   rbp
  406f49:	sub    DWORD PTR [rax],esp
  406f4b:	xor    al,0x2e
  406f4d:	cmp    DWORD PTR [rsi],ebp
  406f4f:	xor    al,0x0
	...
  406f5d:	add    BYTE PTR [rax],al
  406f5f:	add    BYTE PTR [rdi+0x43],al
  406f62:	rex.XB cmp spl,BYTE PTR [r8]
  406f65:	sub    BYTE PTR [rdi+0x4e],al
  406f68:	push   rbp
  406f69:	sub    DWORD PTR [rax],esp
  406f6b:	xor    al,0x2e
  406f6d:	cmp    DWORD PTR [rsi],ebp
  406f6f:	xor    al,0x0
	...
  406f7d:	add    BYTE PTR [rax],al
  406f7f:	add    BYTE PTR [rdi+0x43],al
  406f82:	rex.XB cmp spl,BYTE PTR [r8]
  406f85:	sub    BYTE PTR [rdi+0x4e],al
  406f88:	push   rbp
  406f89:	sub    DWORD PTR [rax],esp
  406f8b:	xor    al,0x2e
  406f8d:	cmp    DWORD PTR [rsi],ebp
  406f8f:	xor    al,0x0
	...
  406f9d:	add    BYTE PTR [rax],al
  406f9f:	add    BYTE PTR [rdi+0x43],al
  406fa2:	rex.XB cmp spl,BYTE PTR [r8]
  406fa5:	sub    BYTE PTR [rdi+0x4e],al
  406fa8:	push   rbp
  406fa9:	sub    DWORD PTR [rax],esp
  406fab:	xor    al,0x2e
  406fad:	cmp    DWORD PTR [rsi],ebp
  406faf:	xor    al,0x0
	...
  406fbd:	add    BYTE PTR [rax],al
  406fbf:	add    BYTE PTR [rdi+0x43],al
  406fc2:	rex.XB cmp spl,BYTE PTR [r8]
  406fc5:	sub    BYTE PTR [rdi+0x4e],al
  406fc8:	push   rbp
  406fc9:	sub    DWORD PTR [rax],esp
  406fcb:	xor    al,0x2e
  406fcd:	cmp    DWORD PTR [rsi],ebp
  406fcf:	xor    al,0x0
	...
  406fdd:	add    BYTE PTR [rax],al
  406fdf:	add    BYTE PTR [rdi+0x43],al
  406fe2:	rex.XB cmp spl,BYTE PTR [r8]
  406fe5:	sub    BYTE PTR [rdi+0x4e],al
  406fe8:	push   rbp
  406fe9:	sub    DWORD PTR [rax],esp
  406feb:	xor    al,0x2e
  406fed:	cmp    DWORD PTR [rsi],ebp
  406fef:	xor    al,0x0
	...
  406ffd:	add    BYTE PTR [rax],al
  406fff:	add    BYTE PTR [rdi+0x43],al
  407002:	rex.XB cmp spl,BYTE PTR [r8]
  407005:	sub    BYTE PTR [rdi+0x4e],al
  407008:	push   rbp
  407009:	sub    DWORD PTR [rax],esp
  40700b:	xor    al,0x2e
  40700d:	cmp    DWORD PTR [rsi],ebp
  40700f:	xor    al,0x0
	...
  40701d:	add    BYTE PTR [rax],al
  40701f:	add    BYTE PTR [rdi+0x43],al
  407022:	rex.XB cmp spl,BYTE PTR [r8]
  407025:	sub    BYTE PTR [rdi+0x4e],al
  407028:	push   rbp
  407029:	sub    DWORD PTR [rax],esp
  40702b:	xor    al,0x2e
  40702d:	cmp    DWORD PTR [rsi],ebp
  40702f:	xor    al,0x0
	...
  40703d:	add    BYTE PTR [rax],al
  40703f:	add    BYTE PTR [rdi+0x43],al
  407042:	rex.XB cmp spl,BYTE PTR [r8]
  407045:	sub    BYTE PTR [rdi+0x4e],al
  407048:	push   rbp
  407049:	sub    DWORD PTR [rax],esp
  40704b:	xor    al,0x2e
  40704d:	cmp    DWORD PTR [rsi],ebp
  40704f:	xor    al,0x0
	...
  40705d:	add    BYTE PTR [rax],al
  40705f:	add    BYTE PTR [rdi+0x43],al
  407062:	rex.XB cmp spl,BYTE PTR [r8]
  407065:	sub    BYTE PTR [rdi+0x4e],al
  407068:	push   rbp
  407069:	sub    DWORD PTR [rax],esp
  40706b:	xor    al,0x2e
  40706d:	cmp    DWORD PTR [rsi],ebp
  40706f:	xor    al,0x0
	...
  40707d:	add    BYTE PTR [rax],al
  40707f:	add    BYTE PTR [rdi+0x43],al
  407082:	rex.XB cmp spl,BYTE PTR [r8]
  407085:	sub    BYTE PTR [rdi+0x4e],al
  407088:	push   rbp
  407089:	sub    DWORD PTR [rax],esp
  40708b:	xor    al,0x2e
  40708d:	cmp    DWORD PTR [rsi],ebp
  40708f:	xor    al,0x0
	...
  40709d:	add    BYTE PTR [rax],al
  40709f:	add    BYTE PTR [rdi+0x43],al
  4070a2:	rex.XB cmp spl,BYTE PTR [r8]
  4070a5:	sub    BYTE PTR [rdi+0x4e],al
  4070a8:	push   rbp
  4070a9:	sub    DWORD PTR [rax],esp
  4070ab:	xor    al,0x2e
  4070ad:	cmp    DWORD PTR [rsi],ebp
  4070af:	xor    al,0x0
	...
  4070bd:	add    BYTE PTR [rax],al
  4070bf:	add    BYTE PTR [rdi+0x43],al
  4070c2:	rex.XB cmp spl,BYTE PTR [r8]
  4070c5:	sub    BYTE PTR [rdi+0x4e],al
  4070c8:	push   rbp
  4070c9:	sub    DWORD PTR [rax],esp
  4070cb:	xor    al,0x2e
  4070cd:	cmp    DWORD PTR [rsi],ebp
  4070cf:	xor    al,0x0
	...
  4070e5:	add    BYTE PTR [rax],al
  4070e7:	add    BYTE PTR [rcx],al
  4070e9:	add    BYTE PTR [rax],al
  4070eb:	add    al,al
  4070ed:	mov    ah,0x0
  4070ef:	add    BYTE PTR [rax],dl
  4070f1:	ins    DWORD PTR es:[rdi],dx
  4070f2:	add    BYTE PTR [rax],al
  4070f4:	add    BYTE PTR [rax],al
  4070f7:	add    al,cl
  4070f9:	mov    ah,0x0
  4070fb:	add    BYTE PTR [rax],ah
  4070fd:	ins    DWORD PTR es:[rdi],dx
  4070fe:	add    BYTE PTR [rax],al
  407100:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000408000 <.pdata>:
  408000:	add    BYTE PTR [rax],dl
  408002:	add    BYTE PTR [rax],al
  408004:	add    DWORD PTR [rax],edx
  408006:	add    BYTE PTR [rax],al
  408008:	add    BYTE PTR [rax+0x10100000],dl
  40800e:	add    BYTE PTR [rax],al
  408010:	push   rcx
  408011:	adc    DWORD PTR [rax],eax
  408013:	add    BYTE PTR [rax+rdx*4],al
  408016:	add    BYTE PTR [rax],al
  408018:	(bad)  
  408019:	adc    DWORD PTR [rax],eax
  40801b:	add    BYTE PTR [rsi+0xc000011],ch
  408021:	nop
  408022:	add    BYTE PTR [rax],al
  408024:	mov    al,0x11
  408026:	add    BYTE PTR [rax],al
  408028:	(bad)  
  408029:	adc    al,0x0
  40802b:	add    BYTE PTR [rax+rdx*4],dl
  40802e:	add    BYTE PTR [rax],al
  408030:	rcl    BYTE PTR [rax+rax*1],1
  408033:	add    dl,dh
  408035:	adc    al,0x0
  408037:	add    BYTE PTR [rax],ch
  408039:	nop
  40803a:	add    BYTE PTR [rax],al
  40803c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15628042
  408042:	add    BYTE PTR [rax],al
  408044:	rex.W nop
  408046:	add    BYTE PTR [rax],al
  408048:	xor    BYTE PTR [rip+0x155c0000],dl        # 0x159c804e
  40804e:	add    BYTE PTR [rax],al
  408050:	push   0xffffffffa0000090
  408055:	(bad)  
  408056:	add    BYTE PTR [rax],al
  408058:	rex.RXB (bad) 
  40805a:	add    BYTE PTR [rax],al
  40805c:	xchg   esp,eax
  40805d:	nop
  40805e:	add    BYTE PTR [rax],al
  408060:	push   rax
  408061:	(bad)  
  408062:	add    BYTE PTR [rax],al
  408064:	imul   edx,DWORD PTR [rdi],0x909c0000
  40806a:	add    BYTE PTR [rax],al
  40806c:	jo     0x408085
  40806e:	add    BYTE PTR [rax],al
  408070:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  408071:	(bad)  
  408072:	add    BYTE PTR [rax],al
  408074:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  408075:	nop
  408076:	add    BYTE PTR [rax],al
  408078:	mov    al,0x17
  40807a:	add    BYTE PTR [rax],al
  40807c:	add    eax,0xac000018
  408081:	nop
  408082:	add    BYTE PTR [rax],al
  408084:	adc    BYTE PTR [rax],bl
  408086:	add    BYTE PTR [rax],al
  408088:	sub    al,0x18
  40808a:	add    BYTE PTR [rax],al
  40808c:	mov    eax,0x30000090
  408091:	sbb    BYTE PTR [rax],al
  408093:	add    BYTE PTR [rdx],bh
  408095:	sbb    BYTE PTR [rax],al
  408097:	add    BYTE PTR [rax+rdx*4+0x18400000],bh
  40809e:	add    BYTE PTR [rax],al
  4080a0:	rex.XB sbb BYTE PTR [r8],al
  4080a3:	add    al,al
  4080a5:	nop
  4080a6:	add    BYTE PTR [rax],al
  4080a8:	push   rax
  4080a9:	sbb    BYTE PTR [rax],al
  4080ab:	add    BYTE PTR [rsi],ah
  4080ad:	sbb    DWORD PTR [rax],eax
  4080af:	add    ah,al
  4080b1:	nop
  4080b2:	add    BYTE PTR [rax],al
  4080b4:	xor    BYTE PTR [rcx],bl
  4080b6:	add    BYTE PTR [rax],al
  4080b8:	sub    ebx,DWORD PTR [rdx]
  4080ba:	add    BYTE PTR [rax],al
  4080bc:	(bad)  
  4080bd:	nop
  4080be:	add    BYTE PTR [rax],al
  4080c0:	xor    BYTE PTR [rdx],bl
  4080c2:	add    BYTE PTR [rax],al
  4080c4:	pop    rdi
  4080c5:	sbb    al,BYTE PTR [rax]
  4080c7:	add    ah,ah
  4080c9:	nop
  4080ca:	add    BYTE PTR [rax],al
  4080cc:	(bad)  
  4080cd:	sbb    al,BYTE PTR [rax]
  4080cf:	add    cl,cl
  4080d1:	sbb    al,BYTE PTR [rax]
  4080d3:	add    ah,ch
  4080d5:	nop
  4080d6:	add    BYTE PTR [rax],al
  4080d8:	rcr    BYTE PTR [rdx],1
  4080da:	add    BYTE PTR [rax],al
  4080dc:	rcr    DWORD PTR [rdx],cl
  4080de:	add    BYTE PTR [rax],al
  4080e0:	clc    
  4080e1:	nop
  4080e2:	add    BYTE PTR [rax],al
  4080e4:	loopne 0x408100
  4080e6:	add    BYTE PTR [rax],al
  4080e8:	and    DWORD PTR [rbx],ebx
  4080ea:	add    BYTE PTR [rax],al
  4080ec:	cld    
  4080ed:	nop
  4080ee:	add    BYTE PTR [rax],al
  4080f0:	xor    BYTE PTR [rbx],bl
  4080f2:	add    BYTE PTR [rax],al
  4080f4:	cmp    al,0x1b
  4080f6:	add    BYTE PTR [rax],al
  4080f8:	add    al,0x91
  4080fa:	add    BYTE PTR [rax],al
  4080fc:	rex sbb eax,DWORD PTR [rax]
  4080ff:	add    BYTE PTR [rsp+rbx*1],bh
  408102:	add    BYTE PTR [rax],al
  408104:	or     BYTE PTR [rcx+0x1c400000],dl
  40810a:	add    BYTE PTR [rax],al
  40810c:	rex.XB sbb al,0x0
  40810f:	add    BYTE PTR [rax],ah
  408111:	xchg   ecx,eax
  408112:	add    BYTE PTR [rax],al
  408114:	push   rax
  408115:	sbb    al,0x0
  408117:	add    BYTE PTR [rsp+rbx*1+0x0],dl
  40811b:	add    BYTE PTR [rcx+rdx*4],ah
  40811e:	add    BYTE PTR [rax],al
  408120:	(bad)  
  408121:	sbb    al,0x0
  408123:	add    BYTE PTR [rsp+rbx*1+0x0],ah
  408127:	add    BYTE PTR [rax],ch
  408129:	xchg   ecx,eax
  40812a:	add    BYTE PTR [rax],al
  40812c:	jo     0x40814a
  40812e:	add    BYTE PTR [rax],al
  408130:	rcr    DWORD PTR [rax+rax*1],1
  408133:	add    BYTE PTR [rcx+rdx*4],ch
  408136:	add    BYTE PTR [rax],al
  408138:	loopne 0x408156
  40813a:	add    BYTE PTR [rax],al
  40813c:	rex.X (bad) 
  40813e:	add    BYTE PTR [rax],al
  408140:	cmp    BYTE PTR [rcx+0x1e500000],dl
  408146:	add    BYTE PTR [rax],al
  408148:	and    QWORD PTR [r8],rax
  40814b:	add    BYTE PTR [rcx+rdx*4+0x0],cl
  40814f:	add    BYTE PTR [rax+0x21],dl
  408152:	add    BYTE PTR [rax],al
  408154:	mul    BYTE PTR [rdx]
  408156:	add    BYTE PTR [rax],al
  408158:	fs xchg ecx,eax
  40815a:	add    BYTE PTR [rax],al
  40815c:	add    BYTE PTR [rbx],ah
  40815e:	add    BYTE PTR [rax],al
  408160:	in     al,dx
  408161:	and    eax,DWORD PTR [rax]
  408163:	add    BYTE PTR [rcx+rdx*4+0x0],ch
  408167:	add    al,dh
  408169:	and    eax,DWORD PTR [rax]
  40816b:	add    BYTE PTR [rax+0x7c000025],ch
  408171:	xchg   ecx,eax
  408172:	add    BYTE PTR [rax],al
  408174:	mov    al,0x25
  408176:	add    BYTE PTR [rax],al
  408178:	sbb    eax,0x84000026
  40817d:	xchg   ecx,eax
  40817e:	add    BYTE PTR [rax],al
  408180:	and    BYTE PTR [rsi],ah
  408182:	add    BYTE PTR [rax],al
  408184:	lahf   
  408185:	add    BYTE PTR es:[rax],al
  408188:	xchg   esp,eax
  408189:	xchg   ecx,eax
  40818a:	add    BYTE PTR [rax],al
  40818c:	movabs al,ds:0xa00000273f000026
  408195:	xchg   ecx,eax
  408196:	add    BYTE PTR [rax],al
  408198:	rex (bad) 
  40819a:	add    BYTE PTR [rax],al
  40819c:	sbb    ch,BYTE PTR [rax]
  40819e:	add    BYTE PTR [rax],al
  4081a0:	test   al,0x91
  4081a2:	add    BYTE PTR [rax],al
  4081a4:	and    BYTE PTR [rax],ch
  4081a6:	add    BYTE PTR [rax],al
  4081a8:	(bad)  
  4081a9:	sub    BYTE PTR [rax],al
  4081ab:	add    BYTE PTR [rax+0x40000091],dh
  4081b1:	sub    BYTE PTR [rax],al
  4081b3:	add    BYTE PTR [rdx+0x28],dl
  4081b6:	add    BYTE PTR [rax],al
  4081b8:	mov    ah,0x91
  4081ba:	add    BYTE PTR [rax],al
  4081bc:	(bad)  
  4081bd:	sub    BYTE PTR [rax],al
  4081bf:	add    BYTE PTR [rbp-0x47ffffd8],ah
  4081c5:	xchg   ecx,eax
  4081c6:	add    BYTE PTR [rax],al
  4081c8:	mov    al,0x28
  4081ca:	add    BYTE PTR [rax],al
  4081cc:	rex.WRX sub QWORD PTR [rax],r8
  4081cf:	add    BYTE PTR [rcx+rdx*4+0x29500000],bh
  4081d6:	add    BYTE PTR [rax],al
  4081d8:	xchg   ebx,eax
  4081d9:	sub    DWORD PTR [rax],eax
  4081db:	add    al,cl
  4081dd:	xchg   ecx,eax
  4081de:	add    BYTE PTR [rax],al
  4081e0:	movabs al,ds:0xd4000029db000029
  4081e9:	xchg   ecx,eax
  4081ea:	add    BYTE PTR [rax],al
  4081ec:	loopne 0x408217
  4081ee:	add    BYTE PTR [rax],al
  4081f0:	outs   dx,BYTE PTR ds:[rsi]
  4081f1:	sub    al,BYTE PTR [rax]
  4081f3:	add    ah,bl
  4081f5:	xchg   ecx,eax
  4081f6:	add    BYTE PTR [rax],al
  4081f8:	jo     0x408224
  4081fa:	add    BYTE PTR [rax],al
  4081fc:	test   al,0x2a
  4081fe:	add    BYTE PTR [rax],al
  408200:	call   0xffffffffb0408296
  408205:	sub    al,BYTE PTR [rax]
  408207:	add    BYTE PTR [rip+0xfffffffff400002b],al        # 0xfffffffff4408238
  40820d:	xchg   ecx,eax
  40820e:	add    BYTE PTR [rax],al
  408210:	adc    BYTE PTR [rbx],ch
  408212:	add    BYTE PTR [rax],al
  408214:	mov    esi,0x2b
  408219:	xchg   edx,eax
  40821a:	add    BYTE PTR [rax],al
  40821c:	add    BYTE PTR [rip+0x2d080000],ch        # 0x2d488222
  408222:	add    BYTE PTR [rax],al
  408224:	adc    BYTE PTR [rdx+0x2d100000],dl
  40822a:	add    BYTE PTR [rax],al
  40822c:	sbb    ebp,DWORD PTR [rip+0xffffffff92140000]        # 0xffffffff92548232
  408232:	add    BYTE PTR [rax],al
  408234:	loopne 0x408263
  408236:	add    BYTE PTR [rax],al
  408238:	push   rax
  408239:	add    BYTE PTR [r8],al
  40823c:	jo     0x4081ce
	...

Disassembly of section .xdata:

0000000000409000 <.xdata>:
  409000:	add    DWORD PTR [rax],eax
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rcx+rax*1],eax
  409007:	add    BYTE PTR [rdx+rax*2],al
  40900a:	add    BYTE PTR [rax],al
  40900c:	add    DWORD PTR [rcx+rax*1],eax
  40900f:	add    BYTE PTR [rdx+riz*2],al
  409012:	add    BYTE PTR [rax],al
  409014:	add    DWORD PTR [rdi],ecx
  409016:	or     BYTE PTR [rax],al
  409018:	lgdt   [rbx]
  40901b:	add    BYTE PTR [rax],cl
  40901d:	xor    BYTE PTR [rdi],al
  40901f:	(bad)  
  409020:	(bad)  
  409021:	jo     0x409028
  409023:	push   rax
  409024:	add    al,0xc0
  409026:	add    dl,al
  409028:	or     DWORD PTR [rcx+rax*1],eax
  40902b:	add    BYTE PTR [rdx+rax*2],al
  40902e:	add    BYTE PTR [rax],al
  409030:	clc    
  409031:	sub    al,0x0
  409033:	add    BYTE PTR [rcx],al
  409035:	add    BYTE PTR [rax],al
  409037:	add    ah,dl
  409039:	adc    al,0x0
  40903b:	add    ah,ch
  40903d:	adc    al,0x0
  40903f:	add    al,dh
  409041:	and    eax,DWORD PTR [rax]
  409043:	add    ah,ch
  409045:	adc    al,0x0
  409047:	add    BYTE PTR [rcx],cl
  409049:	add    al,0x1
  40904b:	add    BYTE PTR [rdx+rax*2],al
  40904e:	add    BYTE PTR [rax],al
  409050:	clc    
  409051:	sub    al,0x0
  409053:	add    BYTE PTR [rcx],al
  409055:	add    BYTE PTR [rax],al
  409057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40905e:	add    BYTE PTR [rax],al
  409060:	lock and eax,DWORD PTR [rax]
  409063:	add    BYTE PTR [rdx*1+0x5010000],bl
  40906a:	add    al,BYTE PTR [rax]
  40906c:	add    eax,0x1300132
  409071:	and    edx,DWORD PTR [rax]
  409073:	add    BYTE PTR [rbx],ah
  409075:	mov    BYTE PTR [rdi],al
  409077:	add    BYTE PTR [rip+0x18000678],bl        # 0x184096f5
  40907d:	push   0x1130005
  409082:	adc    DWORD PTR [rax],eax
  409084:	or     al,0x30
  409086:	or     esp,DWORD PTR [rax+0xa]
  409089:	jo     0x409094
  40908b:	push   rax
  40908c:	or     al,al
  40908e:	(bad)  
  40908f:	rol    BYTE PTR [rax+riz*8],1
  409092:	add    dh,al
  409094:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245909c
  40909a:	add    DWORD PTR [rax],esi
  40909c:	add    DWORD PTR [rcx+rax*1],eax
  40909f:	add    BYTE PTR [rdx+rax*2],al
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    DWORD PTR [rcx+rax*1],eax
  4090a7:	add    BYTE PTR [rdx+rax*2],al
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    DWORD PTR [rsi],eax
  4090ae:	add    eax,DWORD PTR [rax]
  4090b0:	(bad)  
  4090b1:	rex.X add sil,BYTE PTR [rax]
  4090b4:	add    DWORD PTR [rax+0x0],esp
  4090b7:	add    BYTE PTR [rcx],al
  4090b9:	add    BYTE PTR [rax],al
  4090bb:	add    BYTE PTR [rcx],al
  4090bd:	add    BYTE PTR [rax],al
  4090bf:	add    BYTE PTR [rcx],al
  4090c1:	add    BYTE PTR [rax],al
  4090c3:	add    BYTE PTR [rcx],al
  4090c5:	or     al,BYTE PTR [rsi]
  4090c7:	add    BYTE PTR [rdx],cl
  4090c9:	jb     0x4090d1
  4090cb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b09531
  4090d1:	push   rax
  4090d2:	add    al,al
  4090d4:	add    DWORD PTR [rdx],ecx
  4090d6:	add    eax,0x6d20a05
  4090db:	add    eax,DWORD PTR [rbx]
  4090dd:	xor    BYTE PTR [rdx],al
  4090df:	(bad)  
  4090e0:	add    DWORD PTR [rax+0x0],edx
  4090e3:	add    BYTE PTR [rcx],al
  4090e5:	add    al,0x1
  4090e7:	add    BYTE PTR [rdx+rax*2],al
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    DWORD PTR [rsi],eax
  4090ee:	add    eax,DWORD PTR [rax]
  4090f0:	(bad)  
  4090f1:	rex.X add sil,BYTE PTR [rax]
  4090f4:	add    DWORD PTR [rax+0x0],esp
  4090f7:	add    BYTE PTR [rcx],al
  4090f9:	add    BYTE PTR [rax],al
  4090fb:	add    BYTE PTR [rcx],al
  4090fd:	add    al,0x1
  4090ff:	add    BYTE PTR [rdx+riz*4],al
  409102:	add    BYTE PTR [rax],al
  409104:	add    DWORD PTR [rax],eax
  409106:	add    BYTE PTR [rax],al
  409108:	add    DWORD PTR [rsi],edx
  40910a:	or     DWORD PTR [rax],eax
  40910c:	(bad)  
  40910d:	mov    BYTE PTR [rsi],al
  40910f:	add    BYTE PTR [rax],dl
  409111:	js     0x409118
  409113:	add    BYTE PTR [rbx],cl
  409115:	push   0xffffffffe2060004
  40911a:	add    dh,BYTE PTR [rax]
  40911c:	add    DWORD PTR [rax+0x0],esp
  40911f:	add    BYTE PTR [rcx],al
  409121:	add    BYTE PTR [rax],al
  409123:	add    BYTE PTR [rcx],al
  409125:	add    BYTE PTR [rax],al
  409127:	add    BYTE PTR [rcx],al
  409129:	add    BYTE PTR [rax],al
  40912b:	add    BYTE PTR [rcx],al
  40912d:	(bad)  
  40912e:	add    eax,DWORD PTR [rax]
  409130:	(bad)  
  409131:	(bad)  
  409133:	xor    BYTE PTR [rcx],al
  409135:	(bad)  
  409136:	add    BYTE PTR [rax],al
  409138:	add    DWORD PTR [rdi+rax*1],ecx
  40913b:	add    BYTE PTR [rdx+riz*4],cl
  40913e:	or     BYTE PTR [rax],dh
  409140:	(bad)  
  409141:	(bad)  
  409142:	(bad)  
  409143:	jo     0x40914a
  409145:	push   rax
  409146:	add    al,0xc0
  409148:	add    dl,al
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    DWORD PTR [rcx],edx
  40914e:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e4365
  409154:	or     dh,BYTE PTR [rax]
  409156:	or     DWORD PTR [rax+0x8],esp
  409159:	jo     0x409162
  40915b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2209532
  409162:	add    BYTE PTR [rax],al
  409164:	add    DWORD PTR [rcx+rax*1],eax
  409167:	add    BYTE PTR [rdx+rax*2],al
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    DWORD PTR [rdx],ecx
  40916e:	(bad)  
  40916f:	add    BYTE PTR [rdx],cl
  409171:	xor    al,BYTE PTR [rsi]
  409173:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b095d9
  409179:	push   rax
  40917a:	add    al,al
  40917c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32459184
  409182:	add    DWORD PTR [rax],esi
  409184:	add    DWORD PTR [rax],ecx
  409186:	add    eax,0x4420800
  40918b:	xor    BYTE PTR [rbx],al
  40918d:	(bad)  
  40918e:	add    dh,BYTE PTR [rax+0x1]
  409191:	push   rax
  409192:	add    BYTE PTR [rax],al
  409194:	add    DWORD PTR [rdi],eax
  409196:	add    al,0x0
  409198:	(bad)  
  409199:	xor    al,BYTE PTR [rbx]
  40919b:	xor    BYTE PTR [rdx],al
  40919d:	(bad)  
  40919e:	add    DWORD PTR [rax+0x1],esi
  4091a1:	add    eax,0x32050002
  4091a6:	add    DWORD PTR [rax],esi
  4091a8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324591b0
  4091ae:	add    DWORD PTR [rax],esi
  4091b0:	add    DWORD PTR [rax],eax
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	add    DWORD PTR [rax],eax
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	add    DWORD PTR [rax],eax
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    DWORD PTR [rdi],eax
  4091be:	add    al,0x0
  4091c0:	(bad)  
  4091c1:	xor    al,BYTE PTR [rbx]
  4091c3:	xor    BYTE PTR [rdx],al
  4091c5:	(bad)  
  4091c6:	add    DWORD PTR [rax+0x1],esi
  4091c9:	(bad)  
  4091ca:	add    eax,DWORD PTR [rax]
  4091cc:	(bad)  
  4091cd:	rex.X add sil,BYTE PTR [rax]
  4091d0:	add    DWORD PTR [rax+0x0],esp
  4091d3:	add    BYTE PTR [rcx],al
  4091d5:	add    eax,0x32050002
  4091da:	add    DWORD PTR [rax],esi
  4091dc:	add    DWORD PTR [rdi],eax
  4091de:	add    al,0x0
  4091e0:	(bad)  
  4091e1:	xor    al,BYTE PTR [rbx]
  4091e3:	xor    BYTE PTR [rdx],al
  4091e5:	(bad)  
  4091e6:	add    DWORD PTR [rax+0x1],esi
  4091e9:	(bad)  
  4091ea:	add    eax,DWORD PTR [rax]
  4091ec:	(bad)  
  4091ed:	rex.X add sil,BYTE PTR [rax]
  4091f0:	add    DWORD PTR [rax+0x0],esp
  4091f3:	add    BYTE PTR [rcx],al
  4091f5:	(bad)  
  4091f6:	add    eax,DWORD PTR [rax]
  4091f8:	(bad)  
  4091f9:	rex.X add sil,BYTE PTR [rax]
  4091fc:	add    DWORD PTR [rax+0x0],esp
  4091ff:	add    BYTE PTR [rcx],al
  409201:	or     BYTE PTR [rip+0x4420800],al        # 0x4829a07
  409207:	xor    BYTE PTR [rbx],al
  409209:	(bad)  
  40920a:	add    dh,BYTE PTR [rax+0x1]
  40920d:	push   rax
  40920e:	add    BYTE PTR [rax],al
  409210:	add    DWORD PTR [rax],eax
  409212:	add    BYTE PTR [rax],al
  409214:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040a000 <.bss>:
	...

Disassembly of section .idata:

000000000040b000 <.idata>:
  40b000:	push   rax
  40b001:	mov    al,0x0
	...
  40b00b:	add    BYTE PTR [rsi+rdi*4],bh
  40b00e:	add    BYTE PTR [rax],al
  40b010:	mov    BYTE PTR [rbx-0x4e580000],dh
	...
  40b01e:	add    BYTE PTR [rax],al
  40b020:	test   al,0xbe
  40b022:	add    BYTE PTR [rax],al
  40b024:	loopne 0x40afda
  40b026:	add    BYTE PTR [rax],al
  40b028:	push   0xb2
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rax],al
  40b031:	add    BYTE PTR [rax],al
  40b033:	add    BYTE PTR [rdi+rdi*4+0x0],al
  40b037:	add    BYTE PTR [rax+0xb5],ah
	...
  40b04d:	add    BYTE PTR [rax],al
  40b04f:	add    al,al
  40b051:	mov    dh,0x0
  40b053:	add    BYTE PTR [rax],al
  40b055:	add    BYTE PTR [rax],al
  40b057:	add    ah,dl
  40b059:	mov    dh,0x0
  40b05b:	add    BYTE PTR [rax],al
  40b05d:	add    BYTE PTR [rax],al
  40b05f:	add    ah,ah
  40b061:	mov    dh,0x0
  40b063:	add    BYTE PTR [rax],al
  40b065:	add    BYTE PTR [rax],al
  40b067:	add    al,bh
  40b069:	mov    dh,0x0
  40b06b:	add    BYTE PTR [rax],al
  40b06d:	add    BYTE PTR [rax],al
  40b06f:	add    BYTE PTR [rax],bl
  40b071:	mov    bh,0x0
  40b073:	add    BYTE PTR [rax],al
  40b075:	add    BYTE PTR [rax],al
  40b077:	add    BYTE PTR [rdi+rsi*4],ch
  40b07a:	add    BYTE PTR [rax],al
  40b07c:	add    BYTE PTR [rax],al
  40b07e:	add    BYTE PTR [rax],al
  40b080:	cmp    al,0xb7
  40b082:	add    BYTE PTR [rax],al
  40b084:	add    BYTE PTR [rax],al
  40b086:	add    BYTE PTR [rax],al
  40b088:	push   rax
  40b089:	mov    bh,0x0
  40b08b:	add    BYTE PTR [rax],al
  40b08d:	add    BYTE PTR [rax],al
  40b08f:	add    BYTE PTR [rdi+rsi*4+0x0],ah
  40b093:	add    BYTE PTR [rax],al
  40b095:	add    BYTE PTR [rax],al
  40b097:	add    BYTE PTR [rax-0x49],bh
  40b09a:	add    BYTE PTR [rax],al
  40b09c:	add    BYTE PTR [rax],al
  40b09e:	add    BYTE PTR [rax],al
  40b0a0:	mov    WORD PTR [rdi+0x0],?
  40b0a6:	add    BYTE PTR [rax],al
  40b0a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b0a9:	mov    bh,0x0
  40b0ab:	add    BYTE PTR [rax],al
  40b0ad:	add    BYTE PTR [rax],al
  40b0af:	add    BYTE PTR [rax+0xb7],bh
  40b0b5:	add    BYTE PTR [rax],al
  40b0b7:	add    al,cl
  40b0b9:	mov    bh,0x0
  40b0bb:	add    BYTE PTR [rax],al
  40b0bd:	add    BYTE PTR [rax],al
  40b0bf:	add    al,bl
  40b0c1:	mov    bh,0x0
  40b0c3:	add    BYTE PTR [rax],al
  40b0c5:	add    BYTE PTR [rax],al
  40b0c7:	add    al,ch
  40b0c9:	mov    bh,0x0
  40b0cb:	add    BYTE PTR [rax],al
  40b0cd:	add    BYTE PTR [rax],al
  40b0cf:	add    ah,bh
  40b0d1:	mov    bh,0x0
  40b0d3:	add    BYTE PTR [rax],al
  40b0d5:	add    BYTE PTR [rax],al
  40b0d7:	add    BYTE PTR [rax+rdi*4],dl
  40b0da:	add    BYTE PTR [rax],al
  40b0dc:	add    BYTE PTR [rax],al
  40b0de:	add    BYTE PTR [rax],al
  40b0e0:	sub    BYTE PTR [rax+0x0],bh
  40b0e6:	add    BYTE PTR [rax],al
  40b0e8:	cmp    al,0xb8
  40b0ea:	add    BYTE PTR [rax],al
  40b0ec:	add    BYTE PTR [rax],al
  40b0ee:	add    BYTE PTR [rax],al
  40b0f0:	push   rax
  40b0f1:	mov    eax,0x0
  40b0f6:	add    BYTE PTR [rax],al
  40b0f8:	ins    BYTE PTR es:[rdi],dx
  40b0f9:	mov    eax,0x0
  40b0fe:	add    BYTE PTR [rax],al
  40b100:	cmp    BYTE PTR [rax+0x0],0x0
  40b107:	add    BYTE PTR [rax+rdi*4+0x0],dl
  40b10e:	add    BYTE PTR [rax],al
  40b110:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b111:	mov    eax,0x0
  40b116:	add    BYTE PTR [rax],al
  40b118:	mov    eax,0xb8
  40b11d:	add    BYTE PTR [rax],al
  40b11f:	add    al,dl
  40b121:	mov    eax,0x0
  40b126:	add    BYTE PTR [rax],al
  40b128:	in     al,0xb8
  40b12a:	add    BYTE PTR [rax],al
  40b12c:	add    BYTE PTR [rax],al
  40b12e:	add    BYTE PTR [rax],al
  40b130:	clc    
  40b131:	mov    eax,0x0
  40b136:	add    BYTE PTR [rax],al
  40b138:	adc    al,0xb9
  40b13a:	add    BYTE PTR [rax],al
  40b13c:	add    BYTE PTR [rax],al
  40b13e:	add    BYTE PTR [rax],al
  40b140:	sub    BYTE PTR [rcx+0x0],bh
  40b146:	add    BYTE PTR [rax],al
  40b148:	cmp    al,0xb9
  40b14a:	add    BYTE PTR [rax],al
  40b14c:	add    BYTE PTR [rax],al
  40b14e:	add    BYTE PTR [rax],al
  40b150:	push   rax
  40b151:	mov    ecx,0x0
  40b156:	add    BYTE PTR [rax],al
  40b158:	fs mov ecx,0x0
  40b15e:	add    BYTE PTR [rax],al
  40b160:	jl     0x40b11b
  40b162:	add    BYTE PTR [rax],al
  40b164:	add    BYTE PTR [rax],al
  40b166:	add    BYTE PTR [rax],al
  40b168:	mov    WORD PTR [rcx+0x0],?
  40b16e:	add    BYTE PTR [rax],al
  40b170:	movabs al,ds:0xbc000000000000b9
  40b179:	mov    ecx,0x0
  40b17e:	add    BYTE PTR [rax],al
  40b180:	sar    BYTE PTR [rcx+0x0],1
  40b186:	add    BYTE PTR [rax],al
  40b188:	loopne 0x40b143
  40b18a:	add    BYTE PTR [rax],al
  40b18c:	add    BYTE PTR [rax],al
  40b18e:	add    BYTE PTR [rax],al
  40b190:	hlt    
  40b191:	mov    ecx,0x0
  40b196:	add    BYTE PTR [rax],al
  40b198:	or     al,0xba
	...
  40b1a6:	add    BYTE PTR [rax],al
  40b1a8:	and    BYTE PTR [rdx+0x0],bh
  40b1ae:	add    BYTE PTR [rax],al
  40b1b0:	cmp    BYTE PTR [rdx+0x0],bh
  40b1b6:	add    BYTE PTR [rax],al
  40b1b8:	push   rax
  40b1b9:	mov    edx,0x0
  40b1be:	add    BYTE PTR [rax],al
  40b1c0:	fs mov edx,0x0
  40b1c6:	add    BYTE PTR [rax],al
  40b1c8:	jp     0x40b184
  40b1ca:	add    BYTE PTR [rax],al
  40b1cc:	add    BYTE PTR [rax],al
  40b1ce:	add    BYTE PTR [rax],al
  40b1d0:	nop
  40b1d1:	mov    edx,0x0
  40b1d6:	add    BYTE PTR [rax],al
  40b1d8:	movabs al,ds:0xb2000000000000ba
  40b1e1:	mov    edx,0x0
  40b1e6:	add    BYTE PTR [rax],al
  40b1e8:	int3   
  40b1e9:	mov    edx,0x0
  40b1ee:	add    BYTE PTR [rax],al
  40b1f0:	fdivr  QWORD PTR [rdx+0x0]
  40b1f6:	add    BYTE PTR [rax],al
  40b1f8:	clc    
  40b1f9:	mov    edx,0x0
  40b1fe:	add    BYTE PTR [rax],al
  40b200:	adc    BYTE PTR [rbx+0x0],bh
  40b206:	add    BYTE PTR [rax],al
  40b208:	sub    bh,BYTE PTR [rbx+0x0]
  40b20e:	add    BYTE PTR [rax],al
  40b210:	rex mov ebx,0x0
  40b216:	add    BYTE PTR [rax],al
  40b218:	push   rsp
  40b219:	mov    ebx,0x0
  40b21e:	add    BYTE PTR [rax],al
  40b220:	outs   dx,BYTE PTR ds:[rsi]
  40b221:	mov    ebx,0x0
  40b226:	add    BYTE PTR [rax],al
  40b228:	(bad)  
  40b229:	mov    ebx,0x0
  40b22e:	add    BYTE PTR [rax],al
  40b230:	movabs al,ds:0xa8000000000000bb
  40b239:	mov    ebx,0x0
  40b23e:	add    BYTE PTR [rax],al
  40b240:	mov    esp,0xbb
  40b245:	add    BYTE PTR [rax],al
  40b247:	add    dl,cl
  40b249:	mov    ebx,0x0
  40b24e:	add    BYTE PTR [rax],al
  40b250:	out    0xbb,al
  40b252:	add    BYTE PTR [rax],al
  40b254:	add    BYTE PTR [rax],al
  40b256:	add    BYTE PTR [rax],al
  40b258:	clc    
  40b259:	mov    ebx,0x0
	...
  40b266:	add    BYTE PTR [rax],al
  40b268:	or     BYTE PTR [rax+rax*1+0x0],bh
  40b26f:	add    BYTE PTR [rax],ah
  40b271:	mov    esp,0x0
  40b276:	add    BYTE PTR [rax],al
  40b278:	cs mov esp,0x0
  40b27e:	add    BYTE PTR [rax],al
  40b280:	ds mov esp,0x0
  40b286:	add    BYTE PTR [rax],al
  40b288:	rex.WX movabs rsp,0xbc58000000000000
  40b292:	add    BYTE PTR [rax],al
  40b294:	add    BYTE PTR [rax],al
  40b296:	add    BYTE PTR [rax],al
  40b298:	push   0xbc
  40b29d:	add    BYTE PTR [rax],al
  40b29f:	add    BYTE PTR [rdx-0x44],bh
  40b2a2:	add    BYTE PTR [rax],al
  40b2a4:	add    BYTE PTR [rax],al
  40b2a6:	add    BYTE PTR [rax],al
  40b2a8:	mov    ?,WORD PTR [rax+rax*1+0x0]
  40b2af:	add    BYTE PTR [rax+0xbc],bl
  40b2b5:	add    BYTE PTR [rax],al
  40b2b7:	add    BYTE PTR [rsi+0xbc],ah
  40b2bd:	add    BYTE PTR [rax],al
  40b2bf:	add    BYTE PTR [rax+0xbc],dh
  40b2c5:	add    BYTE PTR [rax],al
  40b2c7:	add    BYTE PTR [rdx+0xbc],bh
  40b2cd:	add    BYTE PTR [rax],al
  40b2cf:	add    dh,al
  40b2d1:	mov    esp,0x0
  40b2d6:	add    BYTE PTR [rax],al
  40b2d8:	(bad)  
  40b2d9:	mov    esp,0x0
  40b2de:	add    BYTE PTR [rax],al
  40b2e0:	fdivr  DWORD PTR [rax+rax*1+0x0]
  40b2e7:	add    dl,ah
  40b2e9:	mov    esp,0x0
  40b2ee:	add    BYTE PTR [rax],al
  40b2f0:	(bad)  
  40b2f1:	mov    esp,0x0
  40b2f6:	add    BYTE PTR [rax],al
  40b2f8:	repnz mov esp,0x0
  40b2fe:	add    BYTE PTR [rax],al
  40b300:	cli    
  40b301:	mov    esp,0x0
  40b306:	add    BYTE PTR [rax],al
  40b308:	add    bh,BYTE PTR [rbp+0x0]
  40b30e:	add    BYTE PTR [rax],al
  40b310:	or     al,0xbd
  40b312:	add    BYTE PTR [rax],al
  40b314:	add    BYTE PTR [rax],al
  40b316:	add    BYTE PTR [rax],al
  40b318:	adc    al,0xbd
  40b31a:	add    BYTE PTR [rax],al
  40b31c:	add    BYTE PTR [rax],al
  40b31e:	add    BYTE PTR [rax],al
  40b320:	(bad)  
  40b321:	mov    ebp,0x0
  40b326:	add    BYTE PTR [rax],al
  40b328:	es mov ebp,0x0
  40b32e:	add    BYTE PTR [rax],al
  40b330:	xor    BYTE PTR [rbp+0x0],bh
  40b336:	add    BYTE PTR [rax],al
  40b338:	cmp    bh,BYTE PTR [rbp+0x0]
  40b33e:	add    BYTE PTR [rax],al
  40b340:	rex.R mov ebp,0x0
  40b346:	add    BYTE PTR [rax],al
  40b348:	rex.WRX movabs rbp,0xbd58000000000000
  40b352:	add    BYTE PTR [rax],al
  40b354:	add    BYTE PTR [rax],al
  40b356:	add    BYTE PTR [rax],al
  40b358:	(bad)  
  40b359:	mov    ebp,0x0
  40b35e:	add    BYTE PTR [rax],al
  40b360:	push   0xffffffffffffffbd
  40b362:	add    BYTE PTR [rax],al
  40b364:	add    BYTE PTR [rax],al
  40b366:	add    BYTE PTR [rax],al
  40b368:	je     0x40b327
  40b36a:	add    BYTE PTR [rax],al
  40b36c:	add    BYTE PTR [rax],al
  40b36e:	add    BYTE PTR [rax],al
  40b370:	jle    0x40b32f
  40b372:	add    BYTE PTR [rax],al
  40b374:	add    BYTE PTR [rax],al
  40b376:	add    BYTE PTR [rax],al
  40b378:	mov    BYTE PTR [rbp+0x0],bh
	...
  40b386:	add    BYTE PTR [rax],al
  40b388:	shl    BYTE PTR [rsi+0x0],0x0
  40b38f:	add    ah,dl
  40b391:	mov    dh,0x0
  40b393:	add    BYTE PTR [rax],al
  40b395:	add    BYTE PTR [rax],al
  40b397:	add    ah,ah
  40b399:	mov    dh,0x0
  40b39b:	add    BYTE PTR [rax],al
  40b39d:	add    BYTE PTR [rax],al
  40b39f:	add    al,bh
  40b3a1:	mov    dh,0x0
  40b3a3:	add    BYTE PTR [rax],al
  40b3a5:	add    BYTE PTR [rax],al
  40b3a7:	add    BYTE PTR [rax],bl
  40b3a9:	mov    bh,0x0
  40b3ab:	add    BYTE PTR [rax],al
  40b3ad:	add    BYTE PTR [rax],al
  40b3af:	add    BYTE PTR [rdi+rsi*4],ch
  40b3b2:	add    BYTE PTR [rax],al
  40b3b4:	add    BYTE PTR [rax],al
  40b3b6:	add    BYTE PTR [rax],al
  40b3b8:	cmp    al,0xb7
  40b3ba:	add    BYTE PTR [rax],al
  40b3bc:	add    BYTE PTR [rax],al
  40b3be:	add    BYTE PTR [rax],al
  40b3c0:	push   rax
  40b3c1:	mov    bh,0x0
  40b3c3:	add    BYTE PTR [rax],al
  40b3c5:	add    BYTE PTR [rax],al
  40b3c7:	add    BYTE PTR [rdi+rsi*4+0x0],ah
  40b3cb:	add    BYTE PTR [rax],al
  40b3cd:	add    BYTE PTR [rax],al
  40b3cf:	add    BYTE PTR [rax-0x49],bh
  40b3d2:	add    BYTE PTR [rax],al
  40b3d4:	add    BYTE PTR [rax],al
  40b3d6:	add    BYTE PTR [rax],al
  40b3d8:	mov    WORD PTR [rdi+0x0],?
  40b3de:	add    BYTE PTR [rax],al
  40b3e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b3e1:	mov    bh,0x0
  40b3e3:	add    BYTE PTR [rax],al
  40b3e5:	add    BYTE PTR [rax],al
  40b3e7:	add    BYTE PTR [rax+0xb7],bh
  40b3ed:	add    BYTE PTR [rax],al
  40b3ef:	add    al,cl
  40b3f1:	mov    bh,0x0
  40b3f3:	add    BYTE PTR [rax],al
  40b3f5:	add    BYTE PTR [rax],al
  40b3f7:	add    al,bl
  40b3f9:	mov    bh,0x0
  40b3fb:	add    BYTE PTR [rax],al
  40b3fd:	add    BYTE PTR [rax],al
  40b3ff:	add    al,ch
  40b401:	mov    bh,0x0
  40b403:	add    BYTE PTR [rax],al
  40b405:	add    BYTE PTR [rax],al
  40b407:	add    ah,bh
  40b409:	mov    bh,0x0
  40b40b:	add    BYTE PTR [rax],al
  40b40d:	add    BYTE PTR [rax],al
  40b40f:	add    BYTE PTR [rax+rdi*4],dl
  40b412:	add    BYTE PTR [rax],al
  40b414:	add    BYTE PTR [rax],al
  40b416:	add    BYTE PTR [rax],al
  40b418:	sub    BYTE PTR [rax+0x0],bh
  40b41e:	add    BYTE PTR [rax],al
  40b420:	cmp    al,0xb8
  40b422:	add    BYTE PTR [rax],al
  40b424:	add    BYTE PTR [rax],al
  40b426:	add    BYTE PTR [rax],al
  40b428:	push   rax
  40b429:	mov    eax,0x0
  40b42e:	add    BYTE PTR [rax],al
  40b430:	ins    BYTE PTR es:[rdi],dx
  40b431:	mov    eax,0x0
  40b436:	add    BYTE PTR [rax],al
  40b438:	cmp    BYTE PTR [rax+0x0],0x0
  40b43f:	add    BYTE PTR [rax+rdi*4+0x0],dl
  40b446:	add    BYTE PTR [rax],al
  40b448:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b449:	mov    eax,0x0
  40b44e:	add    BYTE PTR [rax],al
  40b450:	mov    eax,0xb8
  40b455:	add    BYTE PTR [rax],al
  40b457:	add    al,dl
  40b459:	mov    eax,0x0
  40b45e:	add    BYTE PTR [rax],al
  40b460:	in     al,0xb8
  40b462:	add    BYTE PTR [rax],al
  40b464:	add    BYTE PTR [rax],al
  40b466:	add    BYTE PTR [rax],al
  40b468:	clc    
  40b469:	mov    eax,0x0
  40b46e:	add    BYTE PTR [rax],al
  40b470:	adc    al,0xb9
  40b472:	add    BYTE PTR [rax],al
  40b474:	add    BYTE PTR [rax],al
  40b476:	add    BYTE PTR [rax],al
  40b478:	sub    BYTE PTR [rcx+0x0],bh
  40b47e:	add    BYTE PTR [rax],al
  40b480:	cmp    al,0xb9
  40b482:	add    BYTE PTR [rax],al
  40b484:	add    BYTE PTR [rax],al
  40b486:	add    BYTE PTR [rax],al
  40b488:	push   rax
  40b489:	mov    ecx,0x0
  40b48e:	add    BYTE PTR [rax],al
  40b490:	fs mov ecx,0x0
  40b496:	add    BYTE PTR [rax],al
  40b498:	jl     0x40b453
  40b49a:	add    BYTE PTR [rax],al
  40b49c:	add    BYTE PTR [rax],al
  40b49e:	add    BYTE PTR [rax],al
  40b4a0:	mov    WORD PTR [rcx+0x0],?
  40b4a6:	add    BYTE PTR [rax],al
  40b4a8:	movabs al,ds:0xbc000000000000b9
  40b4b1:	mov    ecx,0x0
  40b4b6:	add    BYTE PTR [rax],al
  40b4b8:	sar    BYTE PTR [rcx+0x0],1
  40b4be:	add    BYTE PTR [rax],al
  40b4c0:	loopne 0x40b47b
  40b4c2:	add    BYTE PTR [rax],al
  40b4c4:	add    BYTE PTR [rax],al
  40b4c6:	add    BYTE PTR [rax],al
  40b4c8:	hlt    
  40b4c9:	mov    ecx,0x0
  40b4ce:	add    BYTE PTR [rax],al
  40b4d0:	or     al,0xba
	...
  40b4de:	add    BYTE PTR [rax],al
  40b4e0:	and    BYTE PTR [rdx+0x0],bh
  40b4e6:	add    BYTE PTR [rax],al
  40b4e8:	cmp    BYTE PTR [rdx+0x0],bh
  40b4ee:	add    BYTE PTR [rax],al
  40b4f0:	push   rax
  40b4f1:	mov    edx,0x0
  40b4f6:	add    BYTE PTR [rax],al
  40b4f8:	fs mov edx,0x0
  40b4fe:	add    BYTE PTR [rax],al
  40b500:	jp     0x40b4bc
  40b502:	add    BYTE PTR [rax],al
  40b504:	add    BYTE PTR [rax],al
  40b506:	add    BYTE PTR [rax],al
  40b508:	nop
  40b509:	mov    edx,0x0
  40b50e:	add    BYTE PTR [rax],al
  40b510:	movabs al,ds:0xb2000000000000ba
  40b519:	mov    edx,0x0
  40b51e:	add    BYTE PTR [rax],al
  40b520:	int3   
  40b521:	mov    edx,0x0
  40b526:	add    BYTE PTR [rax],al
  40b528:	fdivr  QWORD PTR [rdx+0x0]
  40b52e:	add    BYTE PTR [rax],al
  40b530:	clc    
  40b531:	mov    edx,0x0
  40b536:	add    BYTE PTR [rax],al
  40b538:	adc    BYTE PTR [rbx+0x0],bh
  40b53e:	add    BYTE PTR [rax],al
  40b540:	sub    bh,BYTE PTR [rbx+0x0]
  40b546:	add    BYTE PTR [rax],al
  40b548:	rex mov ebx,0x0
  40b54e:	add    BYTE PTR [rax],al
  40b550:	push   rsp
  40b551:	mov    ebx,0x0
  40b556:	add    BYTE PTR [rax],al
  40b558:	outs   dx,BYTE PTR ds:[rsi]
  40b559:	mov    ebx,0x0
  40b55e:	add    BYTE PTR [rax],al
  40b560:	(bad)  
  40b561:	mov    ebx,0x0
  40b566:	add    BYTE PTR [rax],al
  40b568:	movabs al,ds:0xa8000000000000bb
  40b571:	mov    ebx,0x0
  40b576:	add    BYTE PTR [rax],al
  40b578:	mov    esp,0xbb
  40b57d:	add    BYTE PTR [rax],al
  40b57f:	add    dl,cl
  40b581:	mov    ebx,0x0
  40b586:	add    BYTE PTR [rax],al
  40b588:	out    0xbb,al
  40b58a:	add    BYTE PTR [rax],al
  40b58c:	add    BYTE PTR [rax],al
  40b58e:	add    BYTE PTR [rax],al
  40b590:	clc    
  40b591:	mov    ebx,0x0
	...
  40b59e:	add    BYTE PTR [rax],al
  40b5a0:	or     BYTE PTR [rax+rax*1+0x0],bh
  40b5a7:	add    BYTE PTR [rax],ah
  40b5a9:	mov    esp,0x0
  40b5ae:	add    BYTE PTR [rax],al
  40b5b0:	cs mov esp,0x0
  40b5b6:	add    BYTE PTR [rax],al
  40b5b8:	ds mov esp,0x0
  40b5be:	add    BYTE PTR [rax],al
  40b5c0:	rex.WX movabs rsp,0xbc58000000000000
  40b5ca:	add    BYTE PTR [rax],al
  40b5cc:	add    BYTE PTR [rax],al
  40b5ce:	add    BYTE PTR [rax],al
  40b5d0:	push   0xbc
  40b5d5:	add    BYTE PTR [rax],al
  40b5d7:	add    BYTE PTR [rdx-0x44],bh
  40b5da:	add    BYTE PTR [rax],al
  40b5dc:	add    BYTE PTR [rax],al
  40b5de:	add    BYTE PTR [rax],al
  40b5e0:	mov    ?,WORD PTR [rax+rax*1+0x0]
  40b5e7:	add    BYTE PTR [rax+0xbc],bl
  40b5ed:	add    BYTE PTR [rax],al
  40b5ef:	add    BYTE PTR [rsi+0xbc],ah
  40b5f5:	add    BYTE PTR [rax],al
  40b5f7:	add    BYTE PTR [rax+0xbc],dh
  40b5fd:	add    BYTE PTR [rax],al
  40b5ff:	add    BYTE PTR [rdx+0xbc],bh
  40b605:	add    BYTE PTR [rax],al
  40b607:	add    dh,al
  40b609:	mov    esp,0x0
  40b60e:	add    BYTE PTR [rax],al
  40b610:	(bad)  
  40b611:	mov    esp,0x0
  40b616:	add    BYTE PTR [rax],al
  40b618:	fdivr  DWORD PTR [rax+rax*1+0x0]
  40b61f:	add    dl,ah
  40b621:	mov    esp,0x0
  40b626:	add    BYTE PTR [rax],al
  40b628:	(bad)  
  40b629:	mov    esp,0x0
  40b62e:	add    BYTE PTR [rax],al
  40b630:	repnz mov esp,0x0
  40b636:	add    BYTE PTR [rax],al
  40b638:	cli    
  40b639:	mov    esp,0x0
  40b63e:	add    BYTE PTR [rax],al
  40b640:	add    bh,BYTE PTR [rbp+0x0]
  40b646:	add    BYTE PTR [rax],al
  40b648:	or     al,0xbd
  40b64a:	add    BYTE PTR [rax],al
  40b64c:	add    BYTE PTR [rax],al
  40b64e:	add    BYTE PTR [rax],al
  40b650:	adc    al,0xbd
  40b652:	add    BYTE PTR [rax],al
  40b654:	add    BYTE PTR [rax],al
  40b656:	add    BYTE PTR [rax],al
  40b658:	(bad)  
  40b659:	mov    ebp,0x0
  40b65e:	add    BYTE PTR [rax],al
  40b660:	es mov ebp,0x0
  40b666:	add    BYTE PTR [rax],al
  40b668:	xor    BYTE PTR [rbp+0x0],bh
  40b66e:	add    BYTE PTR [rax],al
  40b670:	cmp    bh,BYTE PTR [rbp+0x0]
  40b676:	add    BYTE PTR [rax],al
  40b678:	rex.R mov ebp,0x0
  40b67e:	add    BYTE PTR [rax],al
  40b680:	rex.WRX movabs rbp,0xbd58000000000000
  40b68a:	add    BYTE PTR [rax],al
  40b68c:	add    BYTE PTR [rax],al
  40b68e:	add    BYTE PTR [rax],al
  40b690:	(bad)  
  40b691:	mov    ebp,0x0
  40b696:	add    BYTE PTR [rax],al
  40b698:	push   0xffffffffffffffbd
  40b69a:	add    BYTE PTR [rax],al
  40b69c:	add    BYTE PTR [rax],al
  40b69e:	add    BYTE PTR [rax],al
  40b6a0:	je     0x40b65f
  40b6a2:	add    BYTE PTR [rax],al
  40b6a4:	add    BYTE PTR [rax],al
  40b6a6:	add    BYTE PTR [rax],al
  40b6a8:	jle    0x40b667
  40b6aa:	add    BYTE PTR [rax],al
  40b6ac:	add    BYTE PTR [rax],al
  40b6ae:	add    BYTE PTR [rax],al
  40b6b0:	mov    BYTE PTR [rbp+0x0],bh
	...
  40b6be:	add    BYTE PTR [rax],al
  40b6c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40b6c1:	or     DWORD PTR [rdi+0x73],esp
  40b6c4:	ins    BYTE PTR es:[rdi],dx
  40b6c5:	pop    rdi
  40b6c6:	jb     0x40b729
  40b6c8:	outs   dx,BYTE PTR ds:[rsi]
  40b6c9:	pop    rdi
  40b6ca:	(bad)  
  40b6cb:	gs jb  0x40b73c
  40b6ce:	outs   dx,DWORD PTR ds:[rsi]
  40b6cf:	jne    0x40b73d
  40b6d1:	ins    BYTE PTR es:[rdi],dx
  40b6d2:	imul   eax,DWORD PTR [rax],0x736709a9
  40b6d8:	ins    BYTE PTR es:[rdi],dx
  40b6d9:	pop    rdi
  40b6da:	jb     0x40b73d
  40b6dc:	outs   dx,BYTE PTR ds:[rsi]
  40b6dd:	pop    rdi
  40b6de:	(bad)  
  40b6df:	gs je  0x40b743
  40b6e2:	add    BYTE PTR [rax],al
  40b6e4:	stos   DWORD PTR es:[rdi],eax
  40b6e5:	or     DWORD PTR [rdi+0x73],esp
  40b6e8:	ins    BYTE PTR es:[rdi],dx
  40b6e9:	pop    rdi
  40b6ea:	jb     0x40b74d
  40b6ec:	outs   dx,BYTE PTR ds:[rsi]
  40b6ed:	pop    rdi
  40b6ee:	(bad)  
  40b6ef:	imul   ebp,DWORD PTR [rsi+0x6f],0x6c61696d
  40b6f6:	add    BYTE PTR [rax],al
  40b6f8:	scas   eax,DWORD PTR es:[rdi]
  40b6f9:	or     DWORD PTR [rdi+0x73],esp
  40b6fc:	ins    BYTE PTR es:[rdi],dx
  40b6fd:	pop    rdi
  40b6fe:	jb     0x40b761
  40b700:	outs   dx,BYTE PTR ds:[rsi]
  40b701:	pop    rdi
  40b702:	(bad)  
  40b703:	imul   esi,DWORD PTR [rsi+0x61],0x74616972
  40b70a:	gs pop rdi
  40b70c:	addr32 (bad) 
  40b70e:	jne    0x40b783
  40b710:	jae    0x40b77b
  40b712:	(bad)  
  40b713:	outs   dx,BYTE PTR ds:[rsi]
  40b714:	add    BYTE PTR [rax],al
  40b716:	add    BYTE PTR [rax],al
  40b718:	mov    cl,0x9
  40b71a:	addr32 jae 0x40b789
  40b71d:	pop    rdi
  40b71e:	jb     0x40b781
  40b720:	outs   dx,BYTE PTR ds:[rsi]
  40b721:	pop    rdi
  40b722:	movsxd esp,DWORD PTR [rcx+0x75]
  40b725:	movsxd ebp,DWORD PTR [rax+0x79]
  40b728:	add    BYTE PTR [rax],al
  40b72a:	add    BYTE PTR [rax],al
  40b72c:	mov    bl,0x9
  40b72e:	addr32 jae 0x40b79d
  40b731:	pop    rdi
  40b732:	jb     0x40b795
  40b734:	outs   dx,BYTE PTR ds:[rsi]
  40b735:	pop    rdi
  40b736:	movsxd ebp,DWORD PTR [rax+0x69]
  40b739:	jae    0x40b7ac
  40b73b:	add    BYTE PTR [rsi+0x6c736709],dh
  40b741:	pop    rdi
  40b742:	jb     0x40b7a5
  40b744:	outs   dx,BYTE PTR ds:[rsi]
  40b745:	pop    rdi
  40b746:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x6432
  40b74e:	add    BYTE PTR [rax],al
  40b750:	mov    eax,0x6c736709
  40b755:	pop    rdi
  40b756:	jb     0x40b7b9
  40b758:	outs   dx,BYTE PTR ds:[rsi]
  40b759:	pop    rdi
  40b75a:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x6433
  40b762:	add    BYTE PTR [rax],al
  40b764:	mov    ecx,0x6c736709
  40b769:	pop    rdi
  40b76a:	jb     0x40b7cd
  40b76c:	outs   dx,BYTE PTR ds:[rsi]
  40b76d:	pop    rdi
  40b76e:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x646e
  40b776:	add    BYTE PTR [rax],al
  40b778:	ror    DWORD PTR [rcx],0x67
  40b77b:	jae    0x40b7e9
  40b77d:	pop    rdi
  40b77e:	jb     0x40b7e1
  40b780:	outs   dx,BYTE PTR ds:[rsi]
  40b781:	pop    rdi
  40b782:	gs jb  0x40b7f1
  40b785:	(bad)  
  40b786:	outs   dx,BYTE PTR ds:[rsi]
  40b787:	add    BYTE PTR [eax],al
  40b78a:	add    BYTE PTR [rax],al
  40b78c:	ret    
  40b78d:	or     DWORD PTR [rdi+0x73],esp
  40b790:	ins    BYTE PTR es:[rdi],dx
  40b791:	pop    rdi
  40b792:	jb     0x40b7f5
  40b794:	outs   dx,BYTE PTR ds:[rsi]
  40b795:	pop    rdi
  40b796:	gs js  0x40b809
  40b799:	outs   dx,DWORD PTR ds:[rsi]
  40b79a:	outs   dx,BYTE PTR ds:[rsi]
  40b79b:	outs   dx,BYTE PTR gs:[rsi]
  40b79d:	je     0x40b808
  40b79f:	(bad)  
  40b7a0:	ins    BYTE PTR es:[rdi],dx
  40b7a1:	add    BYTE PTR [rax],al
  40b7a3:	add    ch,al
  40b7a5:	or     DWORD PTR [rdi+0x73],esp
  40b7a8:	ins    BYTE PTR es:[rdi],dx
  40b7a9:	pop    rdi
  40b7aa:	jb     0x40b80d
  40b7ac:	outs   dx,BYTE PTR ds:[rsi]
  40b7ad:	pop    rdi
  40b7ae:	gs js  0x40b821
  40b7b1:	jo     0x40b822
  40b7b3:	ja     0x40b7b5
  40b7b5:	add    BYTE PTR [rax],al
  40b7b7:	add    bh,al
  40b7b9:	or     DWORD PTR [rdi+0x73],esp
  40b7bc:	ins    BYTE PTR es:[rdi],dx
  40b7bd:	pop    rdi
  40b7be:	jb     0x40b821
  40b7c0:	outs   dx,BYTE PTR ds:[rsi]
  40b7c1:	pop    rdi
  40b7c2:	imul   si,WORD PTR fs:[rbx+0x74],0xc900
  40b7c9:	or     DWORD PTR [rdi+0x73],esp
  40b7cc:	ins    BYTE PTR es:[rdi],dx
  40b7cd:	pop    rdi
  40b7ce:	jb     0x40b831
  40b7d0:	outs   dx,BYTE PTR ds:[rsi]
  40b7d1:	pop    rdi
  40b7d2:	data16 ins BYTE PTR es:[rdi],dx
  40b7d4:	(bad)  
  40b7d5:	je     0x40b7d7
  40b7d7:	add    bl,cl
  40b7d9:	or     DWORD PTR [rdi+0x73],esp
  40b7dc:	ins    BYTE PTR es:[rdi],dx
  40b7dd:	pop    rdi
  40b7de:	jb     0x40b841
  40b7e0:	outs   dx,BYTE PTR ds:[rsi]
  40b7e1:	pop    rdi
  40b7e2:	addr32 (bad) 
  40b7e4:	ins    DWORD PTR es:[rdi],dx
  40b7e5:	ins    DWORD PTR es:[rdi],dx
  40b7e6:	(bad)  
  40b7e7:	add    al,dl
  40b7e9:	or     DWORD PTR [rdi+0x73],esp
  40b7ec:	ins    BYTE PTR es:[rdi],dx
  40b7ed:	pop    rdi
  40b7ee:	jb     0x40b851
  40b7f0:	outs   dx,BYTE PTR ds:[rsi]
  40b7f1:	pop    rdi
  40b7f2:	addr32 (bad) 
  40b7f4:	jne    0x40b869
  40b7f6:	jae    0x40b861
  40b7f8:	(bad)  
  40b7f9:	outs   dx,BYTE PTR ds:[rsi]
  40b7fa:	add    BYTE PTR [rax],al
  40b7fc:	ror    DWORD PTR [rcx],cl
  40b7fe:	addr32 jae 0x40b86d
  40b801:	pop    rdi
  40b802:	jb     0x40b865
  40b804:	outs   dx,BYTE PTR ds:[rsi]
  40b805:	pop    rdi
  40b806:	addr32 (bad) 
  40b808:	jne    0x40b87d
  40b80a:	jae    0x40b875
  40b80c:	(bad)  
  40b80d:	outs   dx,BYTE PTR ds:[rsi]
  40b80e:	pop    rdi
  40b80f:	je     0x40b872
  40b811:	imul   ebp,DWORD PTR [rax+rax*1-0x2a],0x6c736709
  40b819:	pop    rdi
  40b81a:	jb     0x40b87d
  40b81c:	outs   dx,BYTE PTR ds:[rsi]
  40b81d:	pop    rdi
  40b81e:	outs   dx,DWORD PTR gs:[esi]
  40b821:	ins    DWORD PTR es:[rdi],dx
  40b822:	gs je  0x40b897
  40b825:	imul   esp,DWORD PTR [rbx+0x0],0x736709d8
  40b82c:	ins    BYTE PTR es:[rdi],dx
  40b82d:	pop    rdi
  40b82e:	jb     0x40b891
  40b830:	outs   dx,BYTE PTR ds:[rsi]
  40b831:	pop    rdi
  40b832:	addr32 jne 0x40b8a2
  40b835:	(bad)  
  40b836:	gs ins BYTE PTR es:[rdi],dx
  40b838:	xor    DWORD PTR [rax],eax
  40b83a:	add    BYTE PTR [rax],al
  40b83c:	fimul  DWORD PTR [rcx]
  40b83e:	addr32 jae 0x40b8ad
  40b841:	pop    rdi
  40b842:	jb     0x40b8a5
  40b844:	outs   dx,BYTE PTR ds:[rsi]
  40b845:	pop    rdi
  40b846:	addr32 jne 0x40b8b6
  40b849:	(bad)  
  40b84a:	gs ins BYTE PTR es:[rdi],dx
  40b84c:	xor    al,BYTE PTR [rax]
  40b84e:	add    BYTE PTR [rax],al
  40b850:	fmul   QWORD PTR [rcx]
  40b852:	addr32 jae 0x40b8c1
  40b855:	pop    rdi
  40b856:	jb     0x40b8b9
  40b858:	outs   dx,BYTE PTR ds:[rsi]
  40b859:	pop    rdi
  40b85a:	push   0x72657079
  40b85f:	outs   dx,DWORD PTR gs:[esi]
  40b862:	ins    DWORD PTR es:[rdi],dx
  40b863:	gs je  0x40b8d8
  40b866:	imul   esp,DWORD PTR [rbx+0x0],0xde000000
  40b86d:	or     DWORD PTR [rdi+0x73],esp
  40b870:	ins    BYTE PTR es:[rdi],dx
  40b871:	pop    rdi
  40b872:	jb     0x40b8d5
  40b874:	outs   dx,BYTE PTR ds:[rsi]
  40b875:	pop    rdi
  40b876:	ins    BYTE PTR es:[rdi],dx
  40b877:	(bad)  
  40b878:	outs   dx,BYTE PTR ds:[rsi]
  40b879:	fs (bad) 
  40b87b:	jne    0x40b87d
  40b87d:	add    BYTE PTR [rax],al
  40b87f:	add    al,ah
  40b881:	or     DWORD PTR [rdi+0x73],esp
  40b884:	ins    BYTE PTR es:[rdi],dx
  40b885:	pop    rdi
  40b886:	jb     0x40b8e9
  40b888:	outs   dx,BYTE PTR ds:[rsi]
  40b889:	pop    rdi
  40b88a:	ins    BYTE PTR es:[rdi],dx
  40b88b:	(bad)  
  40b88c:	jo     0x40b8fa
  40b88e:	(bad)  
  40b88f:	movsxd esp,DWORD PTR [rbp+0x0]
  40b892:	add    BYTE PTR [rax],al
  40b894:	loop   0x40b89f
  40b896:	addr32 jae 0x40b905
  40b899:	pop    rdi
  40b89a:	jb     0x40b8fd
  40b89c:	outs   dx,BYTE PTR ds:[rsi]
  40b89d:	pop    rdi
  40b89e:	ins    BYTE PTR es:[rdi],dx
  40b89f:	gs jbe 0x40b91b
  40b8a2:	add    BYTE PTR [rax],al
  40b8a4:	jrcxz  0x40b8af
  40b8a6:	addr32 jae 0x40b915
  40b8a9:	pop    rdi
  40b8aa:	jb     0x40b90d
  40b8ac:	outs   dx,BYTE PTR ds:[rsi]
  40b8ad:	pop    rdi
  40b8ae:	ins    BYTE PTR es:[rdi],dx
  40b8af:	gs jbe 0x40b92b
  40b8b2:	pop    rdi
  40b8b3:	jae    0x40b920
  40b8b5:	gs ja  0x40b8b8
  40b8b8:	in     al,0x9
  40b8ba:	addr32 jae 0x40b929
  40b8bd:	pop    rdi
  40b8be:	jb     0x40b921
  40b8c0:	outs   dx,BYTE PTR ds:[rsi]
  40b8c1:	pop    rdi
  40b8c2:	ins    BYTE PTR es:[rdi],dx
  40b8c3:	outs   dx,DWORD PTR ds:[rsi]
  40b8c4:	addr32 (bad) 
  40b8c6:	jb     0x40b931
  40b8c8:	je     0x40b932
  40b8ca:	ins    DWORD PTR es:[rdi],dx
  40b8cb:	imul   esp,DWORD PTR [rbx+0x0],0x9e60000
  40b8d2:	addr32 jae 0x40b941
  40b8d5:	pop    rdi
  40b8d6:	jb     0x40b939
  40b8d8:	outs   dx,BYTE PTR ds:[rsi]
  40b8d9:	pop    rdi
  40b8da:	ins    BYTE PTR es:[rdi],dx
  40b8db:	outs   dx,DWORD PTR ds:[rsi]
  40b8dc:	imul   esi,DWORD PTR [ebx+0x74],0x6369
  40b8e4:	call   0x6cb41ff2
  40b8e9:	pop    rdi
  40b8ea:	jb     0x40b94d
  40b8ec:	outs   dx,BYTE PTR ds:[rsi]
  40b8ed:	pop    rdi
  40b8ee:	ins    BYTE PTR es:[rdi],dx
  40b8ef:	outs   dx,DWORD PTR ds:[rsi]
  40b8f0:	outs   dx,BYTE PTR ds:[esi]
  40b8f2:	outs   dx,DWORD PTR ds:[rsi]
  40b8f3:	jb     0x40b962
  40b8f5:	(bad)  
  40b8f6:	ins    BYTE PTR es:[rdi],dx
  40b8f7:	add    dl,dh
  40b8f9:	or     DWORD PTR [rdi+0x73],esp
  40b8fc:	ins    BYTE PTR es:[rdi],dx
  40b8fd:	pop    rdi
  40b8fe:	jb     0x40b961
  40b900:	outs   dx,BYTE PTR ds:[rsi]
  40b901:	pop    rdi
  40b902:	outs   dx,BYTE PTR ds:[rsi]
  40b903:	gs addr32 (bad) 
  40b906:	je     0x40b971
  40b908:	jbe    0x40b96f
  40b90a:	pop    rdi
  40b90b:	(bad)  
  40b90c:	imul   ebp,DWORD PTR [rsi+0x6f],0x6c61696d
  40b913:	add    ah,dh
  40b915:	or     DWORD PTR [rdi+0x73],esp
  40b918:	ins    BYTE PTR es:[rdi],dx
  40b919:	pop    rdi
  40b91a:	jb     0x40b97d
  40b91c:	outs   dx,BYTE PTR ds:[rsi]
  40b91d:	pop    rdi
  40b91e:	jo     0x40b981
  40b920:	jb     0x40b987
  40b922:	je     0x40b993
  40b924:	add    BYTE PTR [rax],al
  40b926:	add    BYTE PTR [rax],al
  40b928:	test   BYTE PTR [rcx],0x67
  40b92b:	jae    0x40b999
  40b92d:	pop    rdi
  40b92e:	jb     0x40b991
  40b930:	outs   dx,BYTE PTR ds:[rsi]
  40b931:	pop    rdi
  40b932:	jo     0x40b995
  40b934:	jae    0x40b999
  40b936:	(bad)  
  40b937:	ins    BYTE PTR es:[rdi],dx
  40b938:	add    BYTE PTR [rax],al
  40b93a:	add    BYTE PTR [rax],al
  40b93c:	clc    
  40b93d:	or     DWORD PTR [rdi+0x73],esp
  40b940:	ins    BYTE PTR es:[rdi],dx
  40b941:	pop    rdi
  40b942:	jb     0x40b9a5
  40b944:	outs   dx,BYTE PTR ds:[rsi]
  40b945:	pop    rdi
  40b946:	jo     0x40b9b7
  40b948:	imul   esi,DWORD PTR [rbx+0x73],0x6e6f
  40b94f:	add    bl,bh
  40b951:	or     DWORD PTR [rdi+0x73],esp
  40b954:	ins    BYTE PTR es:[rdi],dx
  40b955:	pop    rdi
  40b956:	jb     0x40b9b9
  40b958:	outs   dx,BYTE PTR ds:[rsi]
  40b959:	pop    rdi
  40b95a:	jb     0x40b9bd
  40b95c:	jns    0x40b9ca
  40b95e:	imul   esp,DWORD PTR gs:[rdi+0x68],0x9fd0000
  40b966:	addr32 jae 0x40b9d5
  40b969:	pop    rdi
  40b96a:	jb     0x40b9cd
  40b96c:	outs   dx,BYTE PTR ds:[rsi]
  40b96d:	pop    rdi
  40b96e:	jb     0x40b9d1
  40b970:	jns    0x40b9de
  40b972:	imul   esp,DWORD PTR gs:[rdi+0x68],0x6961745f
  40b97a:	ins    BYTE PTR es:[rdi],dx
  40b97b:	add    BYTE PTR [rcx],al
  40b97d:	or     ah,BYTE PTR [rdi+0x73]
  40b980:	ins    BYTE PTR es:[rdi],dx
  40b981:	pop    rdi
  40b982:	jb     0x40b9e5
  40b984:	outs   dx,BYTE PTR ds:[rsi]
  40b985:	pop    rdi
  40b986:	je     0x40b9ec
  40b988:	imul   esi,DWORD PTR [rbx+0x74],0x670a0300
  40b98f:	jae    0x40b9fd
  40b991:	pop    rdi
  40b992:	jb     0x40b9f5
  40b994:	outs   dx,BYTE PTR ds:[rsi]
  40b995:	pop    rdi
  40b996:	jne    0x40b9ff
  40b998:	(bad)  
  40b999:	jne    0x40ba0e
  40b99b:	jae    0x40ba06
  40b99d:	(bad)  
  40b99e:	outs   dx,BYTE PTR ds:[rsi]
  40b99f:	add    BYTE PTR [rsi],al
  40b9a1:	or     ah,BYTE PTR [rdi+0x73]
  40b9a4:	ins    BYTE PTR es:[rdi],dx
  40b9a5:	pop    rdi
  40b9a6:	jb     0x40ba09
  40b9a8:	outs   dx,BYTE PTR ds:[rsi]
  40b9a9:	pop    rdi
  40b9aa:	jne    0x40ba13
  40b9ac:	(bad)  
  40b9ad:	jne    0x40ba22
  40b9af:	jae    0x40ba1a
  40b9b1:	(bad)  
  40b9b2:	outs   dx,BYTE PTR ds:[rsi]
  40b9b3:	pop    rdi
  40b9b4:	je     0x40ba17
  40b9b6:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0xa080000
  40b9be:	addr32 jae 0x40ba2d
  40b9c1:	pop    rdi
  40b9c2:	jb     0x40ba25
  40b9c4:	outs   dx,BYTE PTR ds:[rsi]
  40b9c5:	pop    rdi
  40b9c6:	ja     0x40ba2d
  40b9c8:	imul   esp,DWORD PTR [rdx+0x75],0x6c6c
  40b9cf:	add    BYTE PTR [rdx],cl
  40b9d1:	or     ah,BYTE PTR [rdi+0x73]
  40b9d4:	ins    BYTE PTR es:[rdi],dx
  40b9d5:	pop    rdi
  40b9d6:	jb     0x40ba46
  40b9d8:	addr32 pop rdi
  40b9da:	(bad)  
  40b9db:	ins    BYTE PTR es:[rdi],dx
  40b9dc:	ins    BYTE PTR es:[rdi],dx
  40b9dd:	outs   dx,DWORD PTR ds:[rsi]
  40b9de:	movsxd eax,DWORD PTR [rax]
  40b9e0:	(bad)  
  40b9e2:	addr32 jae 0x40ba51
  40b9e5:	pop    rdi
  40b9e6:	jb     0x40ba56
  40b9e8:	addr32 pop rdi
  40b9ea:	fs gs data16 (bad) 
  40b9ee:	jne    0x40ba5c
  40b9f0:	je     0x40b9f2
  40b9f2:	add    BYTE PTR [rax],al
  40b9f4:	adc    BYTE PTR [rdx],cl
  40b9f6:	addr32 jae 0x40ba65
  40b9f9:	pop    rdi
  40b9fa:	jb     0x40ba6a
  40b9fc:	addr32 pop rdi
  40b9fe:	fs gs data16 (bad) 
  40ba02:	jne    0x40ba70
  40ba04:	je     0x40ba65
  40ba06:	jae    0x40ba6d
  40ba08:	gs add BYTE PTR fs:[rax],al
  40ba0c:	adc    DWORD PTR [rdx],ecx
  40ba0e:	addr32 jae 0x40ba7d
  40ba11:	pop    rdi
  40ba12:	jb     0x40ba82
  40ba14:	addr32 pop rdi
  40ba16:	outs   dx,BYTE PTR gs:[rsi]
  40ba18:	jbe    0x40ba79
  40ba1a:	jae    0x40ba81
  40ba1c:	je     0x40ba93
  40ba1e:	jo     0x40ba20
  40ba20:	fadd   DWORD PTR [rax]
  40ba22:	rex.R
  40ba23:	gs ins BYTE PTR es:[rdi],dx
  40ba25:	gs je  0x40ba8d
  40ba28:	rex.XB jb 0x40ba94
  40ba2b:	je     0x40ba96
  40ba2d:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ba30:	push   rbx
  40ba31:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40ba36:	outs   dx,BYTE PTR ds:[rsi]
  40ba37:	add    al,bh
  40ba39:	add    BYTE PTR [rbp+0x6e],al
  40ba3c:	je     0x40baa3
  40ba3e:	jb     0x40ba83
  40ba40:	jb     0x40baab
  40ba42:	je     0x40baad
  40ba44:	movsxd esp,DWORD PTR [rcx+0x6c]
  40ba47:	push   rbx
  40ba48:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40ba4d:	outs   dx,BYTE PTR ds:[rsi]
  40ba4e:	add    BYTE PTR [rax],al
  40ba50:	int    0x1
  40ba52:	rex.RXB
  40ba53:	gs je  0x40ba99
  40ba56:	jne    0x40baca
  40ba58:	jb     0x40babf
  40ba5a:	outs   dx,BYTE PTR ds:[rsi]
  40ba5b:	je     0x40baad
  40ba5d:	jb     0x40bace
  40ba5f:	movsxd esp,DWORD PTR [rbp+0x73]
  40ba62:	jae    0x40ba64
  40ba64:	(bad)  
  40ba65:	add    DWORD PTR [rdi+0x65],eax
  40ba68:	je     0x40baad
  40ba6a:	jne    0x40bade
  40ba6c:	jb     0x40bad3
  40ba6e:	outs   dx,BYTE PTR ds:[rsi]
  40ba6f:	je     0x40bac1
  40ba71:	jb     0x40bae2
  40ba73:	movsxd esp,DWORD PTR [rbp+0x73]
  40ba76:	jae    0x40bac1
  40ba78:	fs add dl,dl
  40ba7b:	add    DWORD PTR [rdi+0x65],eax
  40ba7e:	je     0x40bac3
  40ba80:	jne    0x40baf4
  40ba82:	jb     0x40bae9
  40ba84:	outs   dx,BYTE PTR ds:[rsi]
  40ba85:	je     0x40badb
  40ba87:	push   0x64616572
  40ba8c:	rex.WB
  40ba8d:	add    BYTE PTR fs:[rax],al
  40ba90:	adc    BYTE PTR [rdx],al
  40ba92:	rex.RXB
  40ba93:	gs je  0x40bae2
  40ba96:	(bad)  
  40ba97:	jae    0x40bb0d
  40ba99:	rex.RB jb 0x40bb0e
  40ba9c:	outs   dx,DWORD PTR ds:[rsi]
  40ba9d:	jb     0x40ba9f
  40ba9f:	add    BYTE PTR [rbx+0x2],dh
  40baa2:	rex.RXB
  40baa3:	gs je  0x40baf9
  40baa6:	je     0x40bb09
  40baa8:	jb     0x40bb1e
  40baaa:	jne    0x40bb1c
  40baac:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40baae:	outs   dx,WORD PTR ds:[rsi]
  40bab0:	add    BYTE PTR [r10+0x74654702],cl
  40bab7:	push   rbx
  40bab8:	jns    0x40bb2d
  40baba:	je     0x40bb21
  40babc:	ins    DWORD PTR es:[rdi],dx
  40babd:	push   rsp
  40babe:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40bac5:	ins    BYTE PTR es:[rdi],dx
  40bac6:	gs push rsp
  40bac8:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40bacf:	gs je  0x40bb26
  40bad2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40bad9:	je     0x40badb
  40badb:	add    cl,bh
  40badd:	add    cl,BYTE PTR [rcx+0x6e]
  40bae0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40bae8:	rex.XB jb 0x40bb54
  40baeb:	je     0x40bb56
  40baed:	movsxd esp,DWORD PTR [rcx+0x6c]
  40baf0:	push   rbx
  40baf1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40baf6:	outs   dx,BYTE PTR ds:[rsi]
  40baf7:	add    BYTE PTR [rbx+0x3],cl
  40bafa:	rex.WR
  40bafb:	gs (bad) 
  40bafd:	jbe    0x40bb64
  40baff:	rex.XB jb 0x40bb6b
  40bb02:	je     0x40bb6d
  40bb04:	movsxd esp,DWORD PTR [rcx+0x6c]
  40bb07:	push   rbx
  40bb08:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40bb0d:	outs   dx,BYTE PTR ds:[rsi]
  40bb0e:	add    BYTE PTR [rax],al
  40bb10:	mov    ebx,0x65755103
  40bb15:	jb     0x40bb90
  40bb17:	push   rax
  40bb18:	gs jb  0x40bb81
  40bb1b:	outs   dx,DWORD PTR ds:[rsi]
  40bb1c:	jb     0x40bb8b
  40bb1e:	(bad)  
  40bb1f:	outs   dx,BYTE PTR ds:[rsi]
  40bb20:	movsxd esp,DWORD PTR [rbp+0x43]
  40bb23:	outs   dx,DWORD PTR ds:[rsi]
  40bb24:	jne    0x40bb94
  40bb26:	je     0x40bb8d
  40bb28:	jb     0x40bb2a
  40bb2a:	add    DWORD PTR [rdx+rdx*2],eax
  40bb2d:	je     0x40bb9b
  40bb2f:	rex.B
  40bb30:	fs fs rex.RX jne 0x40bba3
  40bb35:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40bb39:	outs   dx,BYTE PTR ds:[rsi]
  40bb3a:	push   rsp
  40bb3b:	(bad)  
  40bb3c:	(bad)  
  40bb3d:	ins    BYTE PTR es:[rdi],dx
  40bb3e:	add    BYTE PTR gs:[rdx],al
  40bb41:	add    al,0x52
  40bb43:	je     0x40bbb1
  40bb45:	rex.XB (bad) 
  40bb47:	jo     0x40bbbd
  40bb49:	jne    0x40bbbd
  40bb4b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40bb4e:	outs   dx,BYTE PTR ds:[rsi]
  40bb4f:	je     0x40bbb6
  40bb51:	js     0x40bbc7
  40bb53:	add    BYTE PTR [rcx],cl
  40bb55:	add    al,0x52
  40bb57:	je     0x40bbc5
  40bb59:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40bb5b:	outs   dx,DWORD PTR ds:[rsi]
  40bb5c:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40bb60:	jne    0x40bbd0
  40bb62:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40bb66:	outs   dx,BYTE PTR ds:[rsi]
  40bb67:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40bb69:	je     0x40bbdd
  40bb6b:	jns    0x40bb6d
  40bb6d:	add    BYTE PTR [rax],dl
  40bb6f:	add    al,0x52
  40bb71:	je     0x40bbdf
  40bb73:	push   rsi
  40bb74:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40bb7b:	outs   dx,BYTE PTR ds:[rsi]
  40bb7c:	ja     0x40bbe7
  40bb7e:	outs   dx,BYTE PTR ds:[rsi]
  40bb7f:	add    BYTE PTR fs:[rax],al
  40bb82:	lahf   
  40bb83:	add    al,0x53
  40bb85:	gs je  0x40bbdd
  40bb88:	outs   dx,BYTE PTR ds:[rsi]
  40bb89:	push   0x6c646e61
  40bb8e:	gs fs rex.RB js 0x40bbf6
  40bb93:	gs jo  0x40bc0a
  40bb96:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40bb9d:	gs jb  0x40bba0
  40bba0:	lods   al,BYTE PTR ds:[rsi]
  40bba1:	add    al,0x53
  40bba3:	ins    BYTE PTR es:[rdi],dx
  40bba4:	gs gs jo 0x40bba8
  40bba8:	mov    edx,0x72655404
  40bbad:	ins    DWORD PTR es:[rdi],dx
  40bbae:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40bbb5:	outs   dx,DWORD PTR ds:[rsi]
  40bbb6:	movsxd esp,DWORD PTR [rbp+0x73]
  40bbb9:	jae    0x40bbbb
  40bbbb:	add    cl,al
  40bbbd:	add    al,0x54
  40bbbf:	ins    BYTE PTR es:[rdi],dx
  40bbc0:	jae    0x40bc09
  40bbc2:	gs je  0x40bc1b
  40bbc5:	(bad)  
  40bbc6:	ins    BYTE PTR es:[rdi],dx
  40bbc7:	jne    0x40bc2e
  40bbc9:	add    dh,cl
  40bbcb:	add    al,0x55
  40bbcd:	outs   dx,BYTE PTR ds:[rsi]
  40bbce:	push   0x6c646e61
  40bbd3:	gs fs rex.RB js 0x40bc3b
  40bbd8:	gs jo  0x40bc4f
  40bbdb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40bbe2:	gs jb  0x40bbe5
  40bbe5:	add    ah,ch
  40bbe7:	add    al,0x56
  40bbe9:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40bbf0:	jb     0x40bc61
  40bbf2:	je     0x40bc59
  40bbf4:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40bbf8:	out    dx,al
  40bbf9:	add    al,0x56
  40bbfb:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40bc02:	jne    0x40bc69
  40bc04:	jb     0x40bc7f
  40bc06:	add    BYTE PTR [rax],al
  40bc08:	(bad)  
  40bc09:	add    BYTE PTR [rdi+0x5f],bl
  40bc0c:	rex.XB pop r15
  40bc0e:	jae    0x40bc80
  40bc10:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40bc14:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40bc1b:	ins    BYTE PTR es:[rdi],dx
  40bc1c:	gs jb  0x40bc1f
  40bc1f:	add    BYTE PTR [rsi+0x0],cl
  40bc22:	pop    rdi
  40bc23:	pop    rdi
  40bc24:	fs ins BYTE PTR es:[rdi],dx
  40bc26:	ins    BYTE PTR es:[rdi],dx
  40bc27:	outs   dx,DWORD PTR ds:[rsi]
  40bc28:	outs   dx,BYTE PTR ds:[rsi]
  40bc29:	gs js  0x40bc95
  40bc2c:	je     0x40bc2e
  40bc2e:	push   rcx
  40bc2f:	add    BYTE PTR [rdi+0x5f],bl
  40bc32:	addr32 gs je 0x40bca3
  40bc36:	(bad)  
  40bc37:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40bc3e:	push   rdx
  40bc3f:	add    BYTE PTR [rdi+0x5f],bl
  40bc42:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40bc49:	add    BYTE PTR [rbx+0x0],dl
  40bc4c:	pop    rdi
  40bc4d:	pop    rdi
  40bc4e:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40bc55:	movsxd eax,DWORD PTR [rax]
  40bc57:	add    BYTE PTR [rdx+0x0],bl
  40bc5a:	pop    rdi
  40bc5b:	pop    rdi
  40bc5c:	ins    BYTE PTR es:[rdi],dx
  40bc5d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40bc60:	jbe    0x40bcc1
  40bc62:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40bc69:	add    BYTE PTR [rdi+0x5f],bl
  40bc6c:	jae    0x40bcd3
  40bc6e:	je     0x40bccf
  40bc70:	(bad)  
  40bc71:	jo     0x40bce3
  40bc73:	pop    rdi
  40bc74:	je     0x40bcef
  40bc76:	jo     0x40bcdd
  40bc78:	add    BYTE PTR [rax],al
  40bc7a:	(bad)  
  40bc7b:	add    BYTE PTR [rdi+0x5f],bl
  40bc7e:	jae    0x40bce5
  40bc80:	je     0x40bcf7
  40bc82:	jae    0x40bce9
  40bc84:	jb     0x40bcf3
  40bc86:	(bad)  
  40bc87:	je     0x40bcf1
  40bc89:	gs jb  0x40bcfe
  40bc8c:	add    BYTE PTR [rax],al
  40bc8e:	jno    0x40bc90
  40bc90:	pop    rdi
  40bc91:	(bad)  
  40bc92:	movsxd ebp,DWORD PTR [rbp+0x64]
  40bc95:	ins    BYTE PTR es:[rdi],dx
  40bc96:	outs   dx,BYTE PTR ds:[rsi]
  40bc97:	add    BYTE PTR [rax+0x0],bh
  40bc9a:	pop    rdi
  40bc9b:	(bad)  
  40bc9c:	ins    DWORD PTR es:[rdi],dx
  40bc9d:	jae    0x40bd06
  40bc9f:	pop    rdi
  40bca0:	gs js  0x40bd0c
  40bca3:	je     0x40bca5
  40bca5:	add    BYTE PTR [rdx+0x65635f00],cl
  40bcab:	js     0x40bd16
  40bcad:	je     0x40bcaf
  40bcaf:	add    dl,bl
  40bcb1:	add    BYTE PTR [rdi+0x66],bl
  40bcb4:	ins    DWORD PTR es:[rdi],dx
  40bcb5:	outs   dx,DWORD PTR ds:[rsi]
  40bcb6:	fs add BYTE PTR gs:[rax],al
  40bcba:	sbb    al,BYTE PTR [rcx]
  40bcbc:	pop    rdi
  40bcbd:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40bcc4:	ins    DWORD PTR es:[rdi],dx
  40bcc5:	add    BYTE PTR [rax+0x6f6c5f01],al
  40bccb:	movsxd ebp,DWORD PTR [rbx+0x0]
  40bcce:	and    eax,0x6e6f5f02
  40bcd3:	gs js  0x40bd3f
  40bcd6:	je     0x40bcd8
  40bcd8:	(bad)
  40bcdc:	outs   dx,BYTE PTR ds:[rsi]
  40bcdd:	ins    BYTE PTR es:[rdi],dx
  40bcde:	outs   dx,DWORD PTR ds:[rsi]
  40bcdf:	movsxd ebp,DWORD PTR [rbx+0x0]
  40bce2:	jg     0x40bce7
  40bce4:	(bad)  
  40bce5:	(bad)  
  40bce6:	outs   dx,DWORD PTR ds:[rsi]
  40bce7:	jb     0x40bd5d
  40bce9:	add    BYTE PTR [rbx+0x6f746103],cl
  40bcef:	data16 add BYTE PTR [rax],al
  40bcf2:	mov    WORD PTR [rbx],es
  40bcf4:	(bad)  
  40bcf5:	je     0x40bd66
  40bcf7:	imul   eax,DWORD PTR [rax],0x61038d00
  40bcfd:	je     0x40bd6e
  40bcff:	ins    BYTE PTR es:[rdi],dx
  40bd00:	add    BYTE PTR [rax],al
  40bd02:	nop
  40bd03:	add    esp,DWORD PTR [rbx+0x61]
  40bd06:	ins    BYTE PTR es:[rdi],dx
  40bd07:	ins    BYTE PTR es:[rdi],dx
  40bd08:	outs   dx,DWORD PTR ds:[rsi]
  40bd09:	movsxd eax,DWORD PTR [rax]
  40bd0b:	add    BYTE PTR [rbp+0x69786503],bl
  40bd11:	je     0x40bd13
  40bd13:	add    BYTE PTR [rax+0x72706603],dh
  40bd19:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40bd20:	data16 jb 0x40bd88
  40bd23:	add    BYTE PTR gs:[rax],al
  40bd26:	ret    0x6603
  40bd29:	ja     0x40bd9d
  40bd2b:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40bd33:	(bad)  
  40bd34:	ins    BYTE PTR es:[rdi],dx
  40bd35:	ins    BYTE PTR es:[rdi],dx
  40bd36:	outs   dx,DWORD PTR ds:[rsi]
  40bd37:	movsxd eax,DWORD PTR [rax]
  40bd39:	add    al,bh
  40bd3b:	add    ebp,DWORD PTR [rbp+0x65]
  40bd3e:	ins    DWORD PTR es:[rdi],dx
  40bd3f:	movsxd esi,DWORD PTR [rax+0x79]
  40bd42:	add    BYTE PTR [rax],al
  40bd44:	add    DWORD PTR [rax+rsi*2],eax
  40bd47:	jb     0x40bdb2
  40bd49:	outs   dx,BYTE PTR ds:[rsi]
  40bd4a:	je     0x40bdb2
  40bd4c:	add    BYTE PTR [rax],al
  40bd4e:	add    al,0x4
  40bd50:	jo     0x40bdc7
  40bd52:	je     0x40bdb7
  40bd54:	push   0x5007261
  40bd59:	add    al,0x70
  40bd5b:	jne    0x40bdd1
  40bd5d:	jae    0x40bd5f
  40bd5f:	add    BYTE PTR [rsi],dl
  40bd61:	add    al,0x73
  40bd63:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40bd6a:	and    al,0x4
  40bd6c:	jae    0x40bde2
  40bd6e:	jb     0x40bdd3
  40bd70:	ins    DWORD PTR es:[rdi],dx
  40bd71:	jo     0x40bd73
  40bd73:	add    BYTE PTR [rbx],ch
  40bd75:	add    al,0x73
  40bd77:	je     0x40bdeb
  40bd79:	ins    BYTE PTR es:[rdi],dx
  40bd7a:	outs   dx,BYTE PTR gs:[rsi]
  40bd7c:	add    BYTE PTR [rax],al
  40bd7e:	cs add al,0x73
  40bd81:	je     0x40bdf5
  40bd83:	outs   dx,BYTE PTR ds:[rsi]
  40bd84:	movsxd ebp,DWORD PTR [rbp+0x70]
  40bd87:	add    BYTE PTR [rsi+0x4],cl
  40bd8a:	jbe    0x40bdf2
  40bd8c:	jo     0x40be00
  40bd8e:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40bd95:	mov    al,0x0
  40bd97:	add    BYTE PTR [rax],al
  40bd99:	mov    al,0x0
  40bd9b:	add    BYTE PTR [rax],al
  40bd9d:	mov    al,0x0
  40bd9f:	add    BYTE PTR [rax],al
  40bda1:	mov    al,0x0
  40bda3:	add    BYTE PTR [rax],al
  40bda5:	mov    al,0x0
  40bda7:	add    BYTE PTR [rax],al
  40bda9:	mov    al,0x0
  40bdab:	add    BYTE PTR [rax],al
  40bdad:	mov    al,0x0
  40bdaf:	add    BYTE PTR [rax],al
  40bdb1:	mov    al,0x0
  40bdb3:	add    BYTE PTR [rax],al
  40bdb5:	mov    al,0x0
  40bdb7:	add    BYTE PTR [rax],al
  40bdb9:	mov    al,0x0
  40bdbb:	add    BYTE PTR [rax],al
  40bdbd:	mov    al,0x0
  40bdbf:	add    BYTE PTR [rax],al
  40bdc1:	mov    al,0x0
  40bdc3:	add    BYTE PTR [rax],al
  40bdc5:	mov    al,0x0
  40bdc7:	add    BYTE PTR [rax],al
  40bdc9:	mov    al,0x0
  40bdcb:	add    BYTE PTR [rax],al
  40bdcd:	mov    al,0x0
  40bdcf:	add    BYTE PTR [rax],al
  40bdd1:	mov    al,0x0
  40bdd3:	add    BYTE PTR [rax],al
  40bdd5:	mov    al,0x0
  40bdd7:	add    BYTE PTR [rax],al
  40bdd9:	mov    al,0x0
  40bddb:	add    BYTE PTR [rax],al
  40bddd:	mov    al,0x0
  40bddf:	add    BYTE PTR [rax],al
  40bde1:	mov    al,0x0
  40bde3:	add    BYTE PTR [rax],al
  40bde5:	mov    al,0x0
  40bde7:	add    BYTE PTR [rax],al
  40bde9:	mov    al,0x0
  40bdeb:	add    BYTE PTR [rax],al
  40bded:	mov    al,0x0
  40bdef:	add    BYTE PTR [rax],al
  40bdf1:	mov    al,0x0
  40bdf3:	add    BYTE PTR [rax],al
  40bdf5:	mov    al,0x0
  40bdf7:	add    BYTE PTR [rax],al
  40bdf9:	mov    al,0x0
  40bdfb:	add    BYTE PTR [rax],al
  40bdfd:	mov    al,0x0
  40bdff:	add    BYTE PTR [rax],al
  40be01:	mov    al,0x0
  40be03:	add    BYTE PTR [rax],al
  40be05:	mov    al,0x0
  40be07:	add    BYTE PTR [rax],al
  40be09:	mov    al,0x0
  40be0b:	add    BYTE PTR [rax],al
  40be0d:	mov    al,0x0
  40be0f:	add    BYTE PTR [rax],al
  40be11:	mov    al,0x0
  40be13:	add    BYTE PTR [rax],al
  40be15:	mov    al,0x0
  40be17:	add    BYTE PTR [rax],al
  40be19:	mov    al,0x0
  40be1b:	add    BYTE PTR [rax],al
  40be1d:	mov    al,0x0
  40be1f:	add    BYTE PTR [rax],al
  40be21:	mov    al,0x0
  40be23:	add    BYTE PTR [rax],al
  40be25:	mov    al,0x0
  40be27:	add    BYTE PTR [rax],al
  40be29:	mov    al,0x0
  40be2b:	add    BYTE PTR [rax],al
  40be2d:	mov    al,0x0
  40be2f:	add    BYTE PTR [rax],al
  40be31:	mov    al,0x0
  40be33:	add    BYTE PTR [rax],al
  40be35:	mov    al,0x0
  40be37:	add    BYTE PTR [rax],al
  40be39:	mov    al,0x0
  40be3b:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40be3f:	addr32 jae 0x40beae
  40be42:	sub    eax,0x642e3931
  40be47:	ins    BYTE PTR es:[rdi],dx
  40be48:	ins    BYTE PTR es:[rdi],dx
  40be49:	add    BYTE PTR [rax],al
  40be4b:	add    BYTE PTR [rax+rsi*4],dl
  40be4e:	add    BYTE PTR [rax],al
  40be50:	adc    al,0xb0
  40be52:	add    BYTE PTR [rax],al
  40be54:	adc    al,0xb0
  40be56:	add    BYTE PTR [rax],al
  40be58:	adc    al,0xb0
  40be5a:	add    BYTE PTR [rax],al
  40be5c:	adc    al,0xb0
  40be5e:	add    BYTE PTR [rax],al
  40be60:	adc    al,0xb0
  40be62:	add    BYTE PTR [rax],al
  40be64:	adc    al,0xb0
  40be66:	add    BYTE PTR [rax],al
  40be68:	adc    al,0xb0
  40be6a:	add    BYTE PTR [rax],al
  40be6c:	adc    al,0xb0
  40be6e:	add    BYTE PTR [rax],al
  40be70:	adc    al,0xb0
  40be72:	add    BYTE PTR [rax],al
  40be74:	adc    al,0xb0
  40be76:	add    BYTE PTR [rax],al
  40be78:	adc    al,0xb0
  40be7a:	add    BYTE PTR [rax],al
  40be7c:	adc    al,0xb0
  40be7e:	add    BYTE PTR [rax],al
  40be80:	adc    al,0xb0
  40be82:	add    BYTE PTR [rax],al
  40be84:	adc    al,0xb0
  40be86:	add    BYTE PTR [rax],al
  40be88:	adc    al,0xb0
  40be8a:	add    BYTE PTR [rax],al
  40be8c:	adc    al,0xb0
  40be8e:	add    BYTE PTR [rax],al
  40be90:	adc    al,0xb0
  40be92:	add    BYTE PTR [rax],al
  40be94:	adc    al,0xb0
  40be96:	add    BYTE PTR [rax],al
  40be98:	adc    al,0xb0
  40be9a:	add    BYTE PTR [rax],al
  40be9c:	adc    al,0xb0
  40be9e:	add    BYTE PTR [rax],al
  40bea0:	adc    al,0xb0
  40bea2:	add    BYTE PTR [rax],al
  40bea4:	adc    al,0xb0
  40bea6:	add    BYTE PTR [rax],al
  40bea8:	rex.WXB
  40bea9:	rex.RB push r10
  40beab:	rex.WRX
  40beac:	rex.RB
  40bead:	xor    r14,QWORD PTR [rdx]
  40beb0:	cs fs ins BYTE PTR es:[rdi],dx
  40beb3:	ins    BYTE PTR es:[rdi],dx
  40beb4:	add    BYTE PTR [rax],al
  40beb6:	add    BYTE PTR [rax],al
  40beb8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bebe:	add    BYTE PTR [rax],al
  40bec0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bec6:	add    BYTE PTR [rax],al
  40bec8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bece:	add    BYTE PTR [rax],al
  40bed0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bed6:	add    BYTE PTR [rax],al
  40bed8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bede:	add    BYTE PTR [rax],al
  40bee0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bee6:	add    BYTE PTR [rax],al
  40bee8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40beee:	add    BYTE PTR [rax],al
  40bef0:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bef6:	add    BYTE PTR [rax],al
  40bef8:	sub    BYTE PTR [rax-0x4fd80000],dh
  40befe:	add    BYTE PTR [rax],al
  40bf00:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bf06:	add    BYTE PTR [rax],al
  40bf08:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bf0e:	add    BYTE PTR [rax],al
  40bf10:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bf16:	add    BYTE PTR [rax],al
  40bf18:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bf1e:	add    BYTE PTR [rax],al
  40bf20:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bf26:	add    BYTE PTR [rax],al
  40bf28:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bf2e:	add    BYTE PTR [rax],al
  40bf30:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bf36:	add    BYTE PTR [rax],al
  40bf38:	sub    BYTE PTR [rax-0x4fd80000],dh
  40bf3e:	add    BYTE PTR [rax],al
  40bf40:	sub    BYTE PTR [rax+0x736d0000],dh
  40bf46:	jbe    0x40bfab
  40bf48:	jb     0x40bfbe
  40bf4a:	cs fs ins BYTE PTR es:[rdi],dx
  40bf4d:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040c000 <.CRT>:
	...
  40c008:	(bad)  
  40c009:	adc    DWORD PTR [rax+0x0],eax
	...
  40c020:	adc    BYTE PTR [rax],dl
  40c022:	add    BYTE PTR [rax],al
  40c025:	add    BYTE PTR [rax],al
  40c027:	add    BYTE PTR [rax],dh
  40c029:	sbb    BYTE PTR [rax+0x0],al
	...
  40c040:	(bad)  
  40c041:	sbb    al,BYTE PTR [rax+0x0]
  40c044:	add    BYTE PTR [rax],al
  40c046:	add    BYTE PTR [rax],al
  40c048:	xor    BYTE PTR [rdx],bl
  40c04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040d000 <.tls>:
	...
  40d020:	add    al,dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    BYTE PTR [rax-0x30],ah
  40d02a:	add    BYTE PTR [rax],al
  40d02d:	add    BYTE PTR [rax],al
  40d02f:	add    BYTE PTR [rsi+riz*4+0x40],bl
  40d033:	add    BYTE PTR [rax],al
  40d035:	add    BYTE PTR [rax],al
  40d037:	add    BYTE PTR [rax-0x40],al
  40d03a:	add    BYTE PTR [rax],al
	...
