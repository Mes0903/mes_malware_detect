
70985dabcf2497a00eb7fe4c21452bbcf7aa56db01895d130a8dac728b712668.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	mov    QWORD PTR [rsp+0x10],rbp
   140001012:	mov    QWORD PTR [rsp+0x18],rsi
   140001017:	push   rdi
   140001018:	push   r14
   14000101a:	push   r15
   14000101c:	sub    rsp,0x30
   140001020:	mov    esi,ecx
   140001022:	mov    rbp,r8
   140001025:	mov    rcx,rdx
   140001028:	mov    ebx,0x3
   14000102d:	mov    edi,0x1c4f
   140001032:	call   QWORD PTR [rip+0x4158]        # 0x140005190
   140001038:	test   rax,rax
   14000103b:	je     0x140001103
   140001041:	lea    r8d,[rbx+0x7]
   140001045:	mov    rcx,rax
   140001048:	lea    rdx,[rip+0x43a1]        # 0x1400053f0
   14000104f:	call   QWORD PTR [rip+0x421b]        # 0x140005270
   140001055:	test   eax,eax
   140001057:	jne    0x140001103
   14000105d:	or     r14d,0xffffffff
   140001061:	lea    r15d,[rbx-0x2]
   140001065:	mov    r9d,r14d
   140001068:	mov    DWORD PTR [rsp+0x20],r15d
   14000106d:	mov    edx,r14d
   140001070:	lea    r8,[rip+0x4389]        # 0x140005400
   140001077:	mov    rcx,rbp
   14000107a:	call   QWORD PTR [rip+0x40c0]        # 0x140005140
   140001080:	cmp    eax,0x2
   140001083:	jne    0x140001089
   140001085:	mov    ebx,eax
   140001087:	jmp    0x1400010f9
   140001089:	mov    r9d,r14d
   14000108c:	mov    DWORD PTR [rsp+0x20],r15d
   140001091:	lea    r8,[rip+0x4370]        # 0x140005408
   140001098:	mov    edx,r14d
   14000109b:	mov    rcx,rbp
   14000109e:	call   QWORD PTR [rip+0x409c]        # 0x140005140
   1400010a4:	cmp    eax,0x2
   1400010a7:	jne    0x1400010ae
   1400010a9:	lea    ebx,[rax+0x3]
   1400010ac:	jmp    0x1400010f9
   1400010ae:	mov    r9d,r14d
   1400010b1:	mov    DWORD PTR [rsp+0x20],r15d
   1400010b6:	lea    r8,[rip+0x435b]        # 0x140005418
   1400010bd:	mov    edx,r14d
   1400010c0:	mov    rcx,rbp
   1400010c3:	call   QWORD PTR [rip+0x4077]        # 0x140005140
   1400010c9:	cmp    eax,0x2
   1400010cc:	jne    0x1400010d3
   1400010ce:	mov    ebx,r15d
   1400010d1:	jmp    0x1400010f9
   1400010d3:	mov    r9d,r14d
   1400010d6:	mov    DWORD PTR [rsp+0x20],r15d
   1400010db:	lea    r8,[rip+0x433e]        # 0x140005420
   1400010e2:	mov    edx,r14d
   1400010e5:	mov    rcx,rbp
   1400010e8:	call   QWORD PTR [rip+0x4052]        # 0x140005140
   1400010ee:	cmp    eax,0x2
   1400010f1:	mov    ecx,0x4
   1400010f6:	cmove  ebx,ecx
   1400010f9:	cmp    esi,r15d
   1400010fc:	jne    0x140001103
   1400010fe:	mov    edi,0x1c50
   140001103:	mov    r8d,ebx
   140001106:	mov    edx,edi
   140001108:	xor    ecx,ecx
   14000110a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000110f:	mov    rbp,QWORD PTR [rsp+0x58]
   140001114:	mov    rsi,QWORD PTR [rsp+0x60]
   140001119:	add    rsp,0x30
   14000111d:	pop    r15
   14000111f:	pop    r14
   140001121:	pop    rdi
   140001122:	rex.W jmp QWORD PTR [rip+0x41d7]        # 0x140005300
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    QWORD PTR [rsp+0x8],rbx
   140001135:	xor    ebx,ebx
   140001137:	lea    rax,[rdx-0x1]
   14000113b:	mov    r10d,0x7ffffffe
   140001141:	mov    r9d,ebx
   140001144:	cmp    rax,r10
   140001147:	mov    r11d,0x80070057
   14000114d:	cmova  r9d,r11d
   140001151:	test   r9d,r9d
   140001154:	js     0x140001195
   140001156:	mov    r9d,ebx
   140001159:	test   rdx,rdx
   14000115c:	je     0x140001189
   14000115e:	sub    r10,rdx
   140001161:	sub    r8,rcx
   140001164:	lea    rax,[r10+rdx*1]
   140001168:	test   rax,rax
   14000116b:	je     0x140001184
   14000116d:	movzx  eax,WORD PTR [r8+rcx*1]
   140001172:	test   ax,ax
   140001175:	je     0x140001184
   140001177:	mov    WORD PTR [rcx],ax
   14000117a:	add    rcx,0x2
   14000117e:	sub    rdx,0x1
   140001182:	jne    0x140001164
   140001184:	test   rdx,rdx
   140001187:	jne    0x14000119a
   140001189:	sub    rcx,0x2
   14000118d:	mov    r9d,0x8007007a
   140001193:	jmp    0x14000119a
   140001195:	test   rdx,rdx
   140001198:	je     0x14000119d
   14000119a:	mov    WORD PTR [rcx],bx
   14000119d:	mov    rbx,QWORD PTR [rsp+0x8]
   1400011a2:	mov    eax,r9d
   1400011a5:	ret    
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400011b1:	push   rdi
   1400011b2:	sub    rsp,0x450
   1400011b9:	mov    rax,QWORD PTR [rip+0x5e48]        # 0x140007008
   1400011c0:	xor    rax,rsp
   1400011c3:	mov    QWORD PTR [rsp+0x440],rax
   1400011cb:	xor    edi,edi
   1400011cd:	mov    rbx,rcx
   1400011d0:	cmp    DWORD PTR [rip+0x6456],edi        # 0x14000762c
   1400011d6:	jne    0x1400012bb
   1400011dc:	mov    rcx,QWORD PTR [rip+0x649d]        # 0x140007680
   1400011e3:	lea    r8,[rsp+0x20]
   1400011e8:	mov    r9d,0x105
   1400011ee:	mov    edx,0x5ec
   1400011f3:	call   QWORD PTR [rip+0x4027]        # 0x140005220
   1400011f9:	test   eax,eax
   1400011fb:	je     0x1400012a2
   140001201:	lea    r8,[rsp+0x20]
   140001206:	mov    edx,0x45c
   14000120b:	mov    rcx,rbx
   14000120e:	call   QWORD PTR [rip+0x3fc4]        # 0x1400051d8
   140001214:	mov    rcx,QWORD PTR [rip+0x6465]        # 0x140007680
   14000121b:	lea    r8,[rsp+0x230]
   140001223:	mov    r9d,0x105
   140001229:	mov    edx,0x60b
   14000122e:	call   QWORD PTR [rip+0x3fec]        # 0x140005220
   140001234:	test   eax,eax
   140001236:	jne    0x140001286
   140001238:	lea    r8,[rip+0x41e9]        # 0x140005428
   14000123f:	mov    edx,0x105
   140001244:	lea    rax,[rsp+0x230]
   14000124c:	sub    r8,rax
   14000124f:	lea    rcx,[rsp+0x230]
   140001257:	lea    rax,[rdx+0x7ffffef9]
   14000125e:	test   rax,rax
   140001261:	je     0x14000127a
   140001263:	movzx  eax,WORD PTR [r8+rcx*1]
   140001268:	test   ax,ax
   14000126b:	je     0x14000127a
   14000126d:	mov    WORD PTR [rcx],ax
   140001270:	add    rcx,0x2
   140001274:	sub    rdx,0x1
   140001278:	jne    0x140001257
   14000127a:	test   rdx,rdx
   14000127d:	jne    0x140001283
   14000127f:	sub    rcx,0x2
   140001283:	mov    WORD PTR [rcx],di
   140001286:	mov    r9d,0x40
   14000128c:	lea    r8,[rsp+0x230]
   140001294:	lea    rdx,[rsp+0x20]
   140001299:	mov    rcx,rbx
   14000129c:	call   QWORD PTR [rip+0x3f2e]        # 0x1400051d0
   1400012a2:	mov    edx,0x459
   1400012a7:	mov    rcx,rbx
   1400012aa:	call   QWORD PTR [rip+0x3f58]        # 0x140005208
   1400012b0:	mov    rcx,rax
   1400012b3:	xor    edx,edx
   1400012b5:	call   QWORD PTR [rip+0x3f6d]        # 0x140005228
   1400012bb:	mov    edx,0x45e
   1400012c0:	mov    DWORD PTR [rip+0x6366],edi        # 0x14000762c
   1400012c6:	mov    rcx,rbx
   1400012c9:	mov    DWORD PTR [rip+0x6359],edi        # 0x140007628
   1400012cf:	call   QWORD PTR [rip+0x3f33]        # 0x140005208
   1400012d5:	mov    rcx,rax
   1400012d8:	mov    edx,0x1
   1400012dd:	call   QWORD PTR [rip+0x3f6d]        # 0x140005250
   1400012e3:	mov    rcx,QWORD PTR [rip+0x6396]        # 0x140007680
   1400012ea:	lea    r8,[rsp+0x20]
   1400012ef:	mov    r9d,0x105
   1400012f5:	mov    edx,0x60a
   1400012fa:	call   QWORD PTR [rip+0x3f20]        # 0x140005220
   140001300:	test   eax,eax
   140001302:	je     0x140001317
   140001304:	lea    r8,[rsp+0x20]
   140001309:	mov    edx,0x2
   14000130e:	mov    rcx,rbx
   140001311:	call   QWORD PTR [rip+0x3ec1]        # 0x1400051d8
   140001317:	mov    rcx,QWORD PTR [rsp+0x440]
   14000131f:	xor    rcx,rsp
   140001322:	call   0x140003c70
   140001327:	mov    rbx,QWORD PTR [rsp+0x468]
   14000132f:	add    rsp,0x450
   140001336:	pop    rdi
   140001337:	ret    
   140001338:	int3   
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	rex push rbx
   140001342:	sub    rsp,0x20
   140001346:	mov    edx,0x5ea
   14000134b:	mov    DWORD PTR [rip+0x62d7],0x1        # 0x14000762c
   140001355:	mov    rbx,rcx
   140001358:	call   0x1400026e4
   14000135d:	mov    rcx,rbx
   140001360:	add    rsp,0x20
   140001364:	pop    rbx
   140001365:	jmp    0x1400011ac
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	rex push rbx
   140001372:	sub    rsp,0x20
   140001376:	mov    edx,0x5eb
   14000137b:	mov    DWORD PTR [rip+0x62a7],0x1        # 0x14000762c
   140001385:	mov    rbx,rcx
   140001388:	call   0x1400026e4
   14000138d:	mov    rcx,rbx
   140001390:	add    rsp,0x20
   140001394:	pop    rbx
   140001395:	jmp    0x1400011ac
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	rex push rbx
   1400013a2:	push   rsi
   1400013a3:	push   rdi
   1400013a4:	push   r14
   1400013a6:	push   r15
   1400013a8:	sub    rsp,0x6c0
   1400013af:	mov    rax,QWORD PTR [rip+0x5c52]        # 0x140007008
   1400013b6:	xor    rax,rsp
   1400013b9:	mov    QWORD PTR [rsp+0x6b0],rax
   1400013c1:	mov    rbx,r9
   1400013c4:	mov    rdi,r8
   1400013c7:	mov    rsi,rcx
   1400013ca:	mov    QWORD PTR [rsp+0x40],rcx
   1400013cf:	mov    r14d,0x2
   1400013d5:	sub    edx,r14d
   1400013d8:	je     0x1400019ab
   1400013de:	sub    edx,0xe
   1400013e1:	je     0x140001927
   1400013e7:	sub    edx,0x3e
   1400013ea:	je     0x140001908
   1400013f0:	sub    edx,0xc2
   1400013f6:	je     0x1400018a7
   1400013fc:	cmp    edx,0x1
   1400013ff:	jne    0x1400018a0
   140001405:	movzx  ecx,r8w
   140001409:	sub    ecx,r14d
   14000140c:	je     0x14000188c
   140001412:	sub    ecx,0x3
   140001415:	je     0x140001887
   14000141b:	sub    ecx,0x3
   14000141e:	je     0x14000188c
   140001424:	sub    ecx,0x455
   14000142a:	je     0x140001780
   140001430:	cmp    ecx,edx
   140001432:	jne    0x1400018fe
   140001438:	xor    edi,edi
   14000143a:	mov    DWORD PTR [rsp+0x34],edi
   14000143e:	cmp    DWORD PTR [rip+0x61e4],edi        # 0x140007628
   140001444:	jne    0x1400018a0
   14000144a:	mov    DWORD PTR [rip+0x61d8],edx        # 0x140007628
   140001450:	mov    r8,QWORD PTR [rip+0x61b9]        # 0x140007610
   140001457:	mov    rdx,QWORD PTR [rip+0x61aa]        # 0x140007608
   14000145e:	lea    ecx,[rdi+0x1]
   140001461:	call   0x140001008
   140001466:	mov    QWORD PTR [rip+0x5bb3],r14        # 0x140007020
   14000146d:	mov    edx,0x45e
   140001472:	mov    rcx,rsi
   140001475:	call   QWORD PTR [rip+0x3d8d]        # 0x140005208
   14000147b:	mov    rcx,rax
   14000147e:	xor    edx,edx
   140001480:	call   QWORD PTR [rip+0x3dca]        # 0x140005250
   140001486:	mov    r9d,0x105
   14000148c:	lea    r8,[rsp+0x4a0]
   140001494:	mov    edx,0x609
   140001499:	mov    rcx,QWORD PTR [rip+0x61e0]        # 0x140007680
   1400014a0:	call   QWORD PTR [rip+0x3d7a]        # 0x140005220
   1400014a6:	test   eax,eax
   1400014a8:	je     0x1400014be
   1400014aa:	lea    r8,[rsp+0x4a0]
   1400014b2:	mov    edx,r14d
   1400014b5:	mov    rcx,rsi
   1400014b8:	call   QWORD PTR [rip+0x3d1a]        # 0x1400051d8
   1400014be:	mov    rcx,QWORD PTR [rip+0x6143]        # 0x140007608
   1400014c5:	test   rcx,rcx
   1400014c8:	je     0x1400018a0
   1400014ce:	cmp    QWORD PTR [rip+0x611b],rdi        # 0x1400075f0
   1400014d5:	je     0x1400018a0
   1400014db:	call   QWORD PTR [rip+0x3b77]        # 0x140005058
   1400014e1:	test   rax,rax
   1400014e4:	jne    0x140001514
   1400014e6:	call   QWORD PTR [rip+0x3bd4]        # 0x1400050c0
   1400014ec:	mov    rcx,rsi
   1400014ef:	cmp    eax,r14d
   1400014f2:	mov    edx,0x606
   1400014f7:	jne    0x1400014fe
   1400014f9:	mov    edx,0x605
   1400014fe:	call   0x1400019f0
   140001503:	mov    rcx,rsi
   140001506:	test   eax,eax
   140001508:	je     0x14000153c
   14000150a:	call   0x140001370
   14000150f:	jmp    0x1400018a0
   140001514:	mov    rdx,QWORD PTR [rip+0x60d5]        # 0x1400075f0
   14000151b:	mov    rcx,rax
   14000151e:	call   QWORD PTR [rip+0x3b2c]        # 0x140005050
   140001524:	mov    r15,rax
   140001527:	test   rax,rax
   14000152a:	jne    0x140001546
   14000152c:	call   QWORD PTR [rip+0x3b8e]        # 0x1400050c0
   140001532:	mov    edx,0x606
   140001537:	mov    rcx,rsi
   14000153a:	jmp    0x1400014fe
   14000153c:	call   0x140001340
   140001541:	jmp    0x1400018a0
   140001546:	mov    r14d,edi
   140001549:	mov    DWORD PTR [rsp+0x50],edi
   14000154d:	xor    edx,edx
   14000154f:	lea    r8d,[rdx+0x28]
   140001553:	lea    rcx,[rsp+0x58]
   140001558:	call   0x1400042b4
   14000155d:	mov    edx,0x10
   140001562:	mov    rcx,rsi
   140001565:	call   QWORD PTR [rip+0x3c7d]        # 0x1400051e8
   14000156b:	mov    DWORD PTR [rsp+0x50],0x30
   140001573:	mov    QWORD PTR [rsp+0x58],rsi
   140001578:	test   rax,rax
   14000157b:	je     0x14000158c
   14000157d:	or     rcx,0xffffffffffffffff
   140001581:	inc    rcx
   140001584:	cmp    BYTE PTR [rax+rcx*1],dil
   140001588:	jne    0x140001581
   14000158a:	jmp    0x14000158f
   14000158c:	mov    rcx,rdi
   14000158f:	test   rcx,rcx
   140001592:	je     0x14000159f
   140001594:	mov    QWORD PTR [rsp+0x60],rax
   140001599:	mov    DWORD PTR [rsp+0x68],edi
   14000159d:	jmp    0x1400015a7
   14000159f:	mov    DWORD PTR [rsp+0x68],0x400000
   1400015a7:	mov    eax,edi
   1400015a9:	mov    DWORD PTR [rsp+0x30],eax
   1400015ad:	mov    rbx,QWORD PTR [rip+0x606c]        # 0x140007620
   1400015b4:	test   rbx,rbx
   1400015b7:	jne    0x1400015f8
   1400015b9:	cmp    QWORD PTR [rip+0x6058],rdi        # 0x140007618
   1400015c0:	jne    0x1400015f8
   1400015c2:	mov    rbx,QWORD PTR [rip+0x60bf]        # 0x140007688
   1400015c9:	mov    rcx,rbx
   1400015cc:	mov    rax,QWORD PTR [rip+0x3d85]        # 0x140005358
   1400015d3:	call   rax
   1400015d5:	xor    r9d,r9d
   1400015d8:	lea    r8,[rsp+0x50]
   1400015dd:	lea    rdx,[rip+0x6034]        # 0x140007618
   1400015e4:	lea    rcx,[rip+0x6035]        # 0x140007620
   1400015eb:	call   rbx
   1400015ed:	mov    DWORD PTR [rsp+0x30],eax
   1400015f1:	mov    rbx,QWORD PTR [rip+0x6028]        # 0x140007620
   1400015f8:	test   eax,eax
   1400015fa:	js     0x1400016a9
   140001600:	mov    rcx,r15
   140001603:	mov    rax,QWORD PTR [rip+0x3d4e]        # 0x140005358
   14000160a:	call   rax
   14000160c:	lea    rax,[rip+0x5a0d]        # 0x140007020
   140001613:	mov    QWORD PTR [rsp+0x20],rax
   140001618:	lea    r9,[rip+0xfa1]        # 0x1400025c0
   14000161f:	mov    r8,QWORD PTR [rip+0x5ff2]        # 0x140007618
   140001626:	mov    rdx,rbx
   140001629:	mov    rcx,rsi
   14000162c:	call   r15
   14000162f:	mov    DWORD PTR [rsp+0x30],eax
   140001633:	test   eax,eax
   140001635:	jns    0x140001653
   140001637:	mov    rcx,rsi
   14000163a:	cmp    eax,0x80040113
   14000163f:	je     0x140001648
   140001641:	call   0x140001340
   140001646:	jmp    0x14000164d
   140001648:	call   0x140001370
   14000164d:	mov    r14d,0x1
   140001653:	test   r14d,r14d
   140001656:	jne    0x140001751
   14000165c:	mov    edx,0x459
   140001661:	mov    rcx,rsi
   140001664:	call   QWORD PTR [rip+0x3b9e]        # 0x140005208
   14000166a:	mov    rcx,rax
   14000166d:	mov    r9d,0x640000
   140001673:	xor    r8d,r8d
   140001676:	mov    edx,0x401
   14000167b:	call   QWORD PTR [rip+0x3b7f]        # 0x140005200
   140001681:	mov    edx,0x459
   140001686:	mov    rcx,rsi
   140001689:	call   QWORD PTR [rip+0x3b79]        # 0x140005208
   14000168f:	mov    rcx,rax
   140001692:	xor    r9d,r9d
   140001695:	mov    edx,0x402
   14000169a:	lea    r8d,[r14+0x64]
   14000169e:	call   QWORD PTR [rip+0x3b5c]        # 0x140005200
   1400016a4:	jmp    0x140001749
   1400016a9:	mov    r9d,0x105
   1400016af:	lea    r8,[rsp+0x290]
   1400016b7:	mov    edx,0x5ea
   1400016bc:	mov    rcx,QWORD PTR [rip+0x5fbd]        # 0x140007680
   1400016c3:	call   QWORD PTR [rip+0x3b57]        # 0x140005220
   1400016c9:	test   eax,eax
   1400016cb:	je     0x14000173f
   1400016cd:	lea    r8,[rsp+0x290]
   1400016d5:	mov    edx,0x45c
   1400016da:	mov    rcx,rsi
   1400016dd:	call   QWORD PTR [rip+0x3af5]        # 0x1400051d8
   1400016e3:	mov    r9d,0x105
   1400016e9:	lea    r8,[rsp+0x80]
   1400016f1:	mov    edx,0x60b
   1400016f6:	mov    rcx,QWORD PTR [rip+0x5f83]        # 0x140007680
   1400016fd:	call   QWORD PTR [rip+0x3b1d]        # 0x140005220
   140001703:	test   eax,eax
   140001705:	jne    0x140001720
   140001707:	lea    r8,[rip+0x3d1a]        # 0x140005428
   14000170e:	mov    edx,0x105
   140001713:	lea    rcx,[rsp+0x80]
   14000171b:	call   0x140001130
   140001720:	mov    r9d,0x40
   140001726:	lea    r8,[rsp+0x80]
   14000172e:	lea    rdx,[rsp+0x290]
   140001736:	mov    rcx,rsi
   140001739:	call   QWORD PTR [rip+0x3a91]        # 0x1400051d0
   14000173f:	mov    DWORD PTR [rip+0x5ee3],0x1        # 0x14000762c
   140001749:	mov    rcx,rsi
   14000174c:	call   0x1400011ac
   140001751:	jmp    0x1400018a0
   140001756:	mov    edx,0x607
   14000175b:	mov    rbx,QWORD PTR [rsp+0x40]
   140001760:	mov    rcx,rbx
   140001763:	call   0x1400019f0
   140001768:	mov    rcx,rbx
   14000176b:	test   eax,eax
   14000176d:	je     0x140001776
   14000176f:	call   0x140001370
   140001774:	jmp    0x14000177b
   140001776:	call   0x140001340
   14000177b:	jmp    0x1400018a0
   140001780:	shr    rdi,0x10
   140001784:	movzx  edx,di
   140001787:	sub    edx,0x1
   14000178a:	je     0x1400017d2
   14000178c:	cmp    edx,0x1
   14000178f:	jne    0x1400018fe
   140001795:	xor    r9d,r9d
   140001798:	xor    r8d,r8d
   14000179b:	mov    edx,0x188
   1400017a0:	mov    rcx,rbx
   1400017a3:	call   QWORD PTR [rip+0x3a57]        # 0x140005200
   1400017a9:	or     rcx,0xffffffffffffffff
   1400017ad:	cmp    rax,rcx
   1400017b0:	je     0x1400018fe
   1400017b6:	xor    r9d,r9d
   1400017b9:	mov    edx,0x111
   1400017be:	mov    r8d,0x45e
   1400017c4:	mov    rcx,rsi
   1400017c7:	call   QWORD PTR [rip+0x3a73]        # 0x140005240
   1400017cd:	jmp    0x1400018fe
   1400017d2:	mov    edx,0x45e
   1400017d7:	mov    rcx,rsi
   1400017da:	call   QWORD PTR [rip+0x3a28]        # 0x140005208
   1400017e0:	mov    r14,rax
   1400017e3:	xor    r9d,r9d
   1400017e6:	xor    r8d,r8d
   1400017e9:	mov    edx,0x188
   1400017ee:	mov    rcx,rbx
   1400017f1:	call   QWORD PTR [rip+0x3a09]        # 0x140005200
   1400017f7:	mov    r15,rax
   1400017fa:	cmp    eax,0xffffffff
   1400017fd:	je     0x1400018fe
   140001803:	test   r14,r14
   140001806:	je     0x140001821
   140001808:	mov    rcx,r14
   14000180b:	call   QWORD PTR [rip+0x39e7]        # 0x1400051f8
   140001811:	test   eax,eax
   140001813:	jne    0x140001821
   140001815:	lea    edx,[rax+0x1]
   140001818:	mov    rcx,r14
   14000181b:	call   QWORD PTR [rip+0x3a2f]        # 0x140005250
   140001821:	mov    r8d,r15d
   140001824:	xor    r9d,r9d
   140001827:	mov    edx,0x199
   14000182c:	mov    rcx,rbx
   14000182f:	call   QWORD PTR [rip+0x39cb]        # 0x140005200
   140001835:	mov    eax,eax
   140001837:	lea    rdx,[rax+rax*4]
   14000183b:	mov    rcx,QWORD PTR [rip+0x5db6]        # 0x1400075f8
   140001842:	mov    rax,QWORD PTR [rcx+rdx*8+0x10]
   140001847:	mov    QWORD PTR [rip+0x5dba],rax        # 0x140007608
   14000184e:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   140001853:	mov    QWORD PTR [rip+0x5da6],rax        # 0x140007600
   14000185a:	mov    rax,QWORD PTR [rcx+rdx*8+0x18]
   14000185f:	mov    QWORD PTR [rip+0x5d8a],rax        # 0x1400075f0
   140001866:	mov    rax,QWORD PTR [rcx+rdx*8]
   14000186a:	mov    QWORD PTR [rip+0x5d9f],rax        # 0x140007610
   140001871:	xor    r9d,r9d
   140001874:	lea    edx,[r9+0xb]
   140001878:	lea    r8d,[r9+0x1]
   14000187c:	mov    rcx,rsi
   14000187f:	call   QWORD PTR [rip+0x397b]        # 0x140005200
   140001885:	jmp    0x1400018fe
   140001887:	mov    edx,r14d
   14000188a:	jmp    0x140001891
   14000188c:	mov    edx,0x10
   140001891:	xor    r9d,r9d
   140001894:	xor    r8d,r8d
   140001897:	mov    rcx,rsi
   14000189a:	call   QWORD PTR [rip+0x3960]        # 0x140005200
   1400018a0:	xor    eax,eax
   1400018a2:	jmp    0x1400019c9
   1400018a7:	mov    r8,rbx
   1400018aa:	mov    edx,0x10
   1400018af:	call   QWORD PTR [rip+0x397b]        # 0x140005230
   1400018b5:	call   QWORD PTR [rip+0x3785]        # 0x140005040
   1400018bb:	mov    edx,0x5e7
   1400018c0:	mov    rcx,rsi
   1400018c3:	call   0x1400026e4
   1400018c8:	mov    edx,0x45d
   1400018cd:	mov    rcx,rsi
   1400018d0:	call   QWORD PTR [rip+0x3932]        # 0x140005208
   1400018d6:	mov    QWORD PTR [rip+0x5d03],rax        # 0x1400075e0
   1400018dd:	mov    rcx,rax
   1400018e0:	call   0x140002ff0
   1400018e5:	mov    edx,0x459
   1400018ea:	mov    rcx,rsi
   1400018ed:	call   QWORD PTR [rip+0x3915]        # 0x140005208
   1400018f3:	mov    rcx,rax
   1400018f6:	xor    edx,edx
   1400018f8:	call   QWORD PTR [rip+0x392a]        # 0x140005228
   1400018fe:	mov    eax,0x1
   140001903:	jmp    0x1400019c9
   140001908:	mov    eax,DWORD PTR [r9+0x10]
   14000190c:	add    eax,0x4
   14000190f:	test   eax,0xfffffffd
   140001914:	jne    0x1400018fe
   140001916:	cmp    QWORD PTR [r9+0x8],0x514
   14000191e:	jne    0x1400018fe
   140001920:	call   0x1400034f4
   140001925:	jmp    0x1400018fe
   140001927:	xor    edi,edi
   140001929:	cmp    DWORD PTR [rip+0x5cf9],edi        # 0x140007628
   14000192f:	je     0x140001945
   140001931:	xor    r9d,r9d
   140001934:	mov    edx,0x111
   140001939:	mov    r8d,0xbc6
   14000193f:	call   QWORD PTR [rip+0x38bb]        # 0x140005200
   140001945:	mov    r14,QWORD PTR [rip+0x5cd4]        # 0x140007620
   14000194c:	test   r14,r14
   14000194f:	je     0x140001970
   140001951:	mov    rax,QWORD PTR [r14]
   140001954:	mov    rbx,QWORD PTR [rax+0x10]
   140001958:	mov    rcx,rbx
   14000195b:	mov    rax,QWORD PTR [rip+0x39f6]        # 0x140005358
   140001962:	call   rax
   140001964:	mov    rcx,r14
   140001967:	call   rbx
   140001969:	mov    QWORD PTR [rip+0x5cb0],rdi        # 0x140007620
   140001970:	mov    r14,QWORD PTR [rip+0x5ca1]        # 0x140007618
   140001977:	test   r14,r14
   14000197a:	je     0x14000199b
   14000197c:	mov    rax,QWORD PTR [r14]
   14000197f:	mov    rbx,QWORD PTR [rax+0x10]
   140001983:	mov    rcx,rbx
   140001986:	mov    rax,QWORD PTR [rip+0x39cb]        # 0x140005358
   14000198d:	call   rax
   14000198f:	mov    rcx,r14
   140001992:	call   rbx
   140001994:	mov    QWORD PTR [rip+0x5c7d],rdi        # 0x140007618
   14000199b:	xor    edx,edx
   14000199d:	mov    rcx,rsi
   1400019a0:	call   QWORD PTR [rip+0x386a]        # 0x140005210
   1400019a6:	jmp    0x1400018a0
   1400019ab:	mov    rcx,QWORD PTR [rip+0x5c2e]        # 0x1400075e0
   1400019b2:	call   0x14000342c
   1400019b7:	mov    r9,rbx
   1400019ba:	mov    r8,rdi
   1400019bd:	mov    edx,r14d
   1400019c0:	mov    rcx,rsi
   1400019c3:	call   QWORD PTR [rip+0x384f]        # 0x140005218
   1400019c9:	mov    rcx,QWORD PTR [rsp+0x6b0]
   1400019d1:	xor    rcx,rsp
   1400019d4:	call   0x140003c70
   1400019d9:	add    rsp,0x6c0
   1400019e0:	pop    r15
   1400019e2:	pop    r14
   1400019e4:	pop    rdi
   1400019e5:	pop    rsi
   1400019e6:	pop    rbx
   1400019e7:	ret    
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    r11,rsp
   1400019f3:	push   rbx
   1400019f4:	sub    rsp,0x50
   1400019f8:	mov    rax,QWORD PTR [rip+0x5c09]        # 0x140007608
   1400019ff:	xor    ebx,ebx
   140001a01:	cmp    DWORD PTR [rip+0x561d],ebx        # 0x140007024
   140001a07:	jne    0x140001a45
   140001a09:	mov    QWORD PTR [r11-0x28],rax
   140001a0d:	lea    r9,[rip+0x141c]        # 0x140002e30
   140001a14:	mov    QWORD PTR [r11-0x20],rbx
   140001a18:	lea    rax,[r11-0x28]
   140001a1c:	mov    DWORD PTR [rsp+0x44],edx
   140001a20:	mov    r8,rcx
   140001a23:	mov    rcx,QWORD PTR [rip+0x5c56]        # 0x140007680
   140001a2a:	mov    edx,0x452
   140001a2f:	mov    QWORD PTR [r11-0x38],rax
   140001a33:	mov    DWORD PTR [rsp+0x40],ebx
   140001a37:	call   QWORD PTR [rip+0x37b3]        # 0x1400051f0
   140001a3d:	cmp    DWORD PTR [rsp+0x40],0x1
   140001a42:	sete   bl
   140001a45:	mov    eax,ebx
   140001a47:	add    rsp,0x50
   140001a4b:	pop    rbx
   140001a4c:	ret    
   140001a4d:	int3   
   140001a4e:	int3   
   140001a4f:	int3   
   140001a50:	int3   
   140001a51:	int3   
   140001a52:	int3   
   140001a53:	int3   
   140001a54:	rex push rbx
   140001a56:	sub    rsp,0x240
   140001a5d:	mov    rax,QWORD PTR [rip+0x55a4]        # 0x140007008
   140001a64:	xor    rax,rsp
   140001a67:	mov    QWORD PTR [rsp+0x230],rax
   140001a6f:	cmp    DWORD PTR [rip+0x5bb6],0x0        # 0x14000762c
   140001a76:	mov    rbx,rcx
   140001a79:	jne    0x140001ac8
   140001a7b:	mov    rcx,QWORD PTR [rip+0x5bfe]        # 0x140007680
   140001a82:	lea    r8,[rsp+0x20]
   140001a87:	mov    r9d,0x105
   140001a8d:	mov    edx,0x5e2
   140001a92:	call   QWORD PTR [rip+0x3788]        # 0x140005220
   140001a98:	test   eax,eax
   140001a9a:	je     0x140001aaf
   140001a9c:	lea    r8,[rsp+0x20]
   140001aa1:	mov    edx,0x45c
   140001aa6:	mov    rcx,rbx
   140001aa9:	call   QWORD PTR [rip+0x3729]        # 0x1400051d8
   140001aaf:	mov    edx,0x459
   140001ab4:	mov    rcx,rbx
   140001ab7:	call   QWORD PTR [rip+0x374b]        # 0x140005208
   140001abd:	mov    rcx,rax
   140001ac0:	xor    edx,edx
   140001ac2:	call   QWORD PTR [rip+0x3760]        # 0x140005228
   140001ac8:	and    DWORD PTR [rip+0x5b5d],0x0        # 0x14000762c
   140001acf:	mov    edx,0x45a
   140001ad4:	and    DWORD PTR [rip+0x5b4d],0x0        # 0x140007628
   140001adb:	mov    rcx,rbx
   140001ade:	call   QWORD PTR [rip+0x3724]        # 0x140005208
   140001ae4:	mov    rcx,rax
   140001ae7:	mov    edx,0x1
   140001aec:	call   QWORD PTR [rip+0x375e]        # 0x140005250
   140001af2:	mov    rcx,QWORD PTR [rip+0x5b87]        # 0x140007680
   140001af9:	lea    r8,[rsp+0x20]
   140001afe:	mov    r9d,0x105
   140001b04:	mov    edx,0x60a
   140001b09:	call   QWORD PTR [rip+0x3711]        # 0x140005220
   140001b0f:	test   eax,eax
   140001b11:	je     0x140001b26
   140001b13:	lea    r8,[rsp+0x20]
   140001b18:	mov    edx,0x2
   140001b1d:	mov    rcx,rbx
   140001b20:	call   QWORD PTR [rip+0x36b2]        # 0x1400051d8
   140001b26:	mov    rcx,QWORD PTR [rsp+0x230]
   140001b2e:	xor    rcx,rsp
   140001b31:	call   0x140003c70
   140001b36:	add    rsp,0x240
   140001b3d:	pop    rbx
   140001b3e:	ret    
   140001b3f:	int3   
   140001b40:	int3   
   140001b41:	int3   
   140001b42:	int3   
   140001b43:	int3   
   140001b44:	int3   
   140001b45:	int3   
   140001b46:	int3   
   140001b47:	int3   
   140001b48:	rex push rbx
   140001b4a:	sub    rsp,0x20
   140001b4e:	mov    edx,0x5e0
   140001b53:	mov    DWORD PTR [rip+0x5acf],0x1        # 0x14000762c
   140001b5d:	mov    rbx,rcx
   140001b60:	call   0x1400026e4
   140001b65:	mov    rcx,rbx
   140001b68:	add    rsp,0x20
   140001b6c:	pop    rbx
   140001b6d:	jmp    0x140001a54
   140001b72:	int3   
   140001b73:	int3   
   140001b74:	int3   
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	rex push rbx
   140001b7a:	sub    rsp,0x20
   140001b7e:	mov    edx,0x5e1
   140001b83:	mov    DWORD PTR [rip+0x5a9f],0x1        # 0x14000762c
   140001b8d:	mov    rbx,rcx
   140001b90:	call   0x1400026e4
   140001b95:	mov    rcx,rbx
   140001b98:	add    rsp,0x20
   140001b9c:	pop    rbx
   140001b9d:	jmp    0x140001a54
   140001ba2:	int3   
   140001ba3:	int3   
   140001ba4:	int3   
   140001ba5:	int3   
   140001ba6:	int3   
   140001ba7:	int3   
   140001ba8:	int3   
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	rex push rbx
   140001bb2:	push   rsi
   140001bb3:	push   rdi
   140001bb4:	push   r12
   140001bb6:	push   r15
   140001bb8:	sub    rsp,0x6c0
   140001bbf:	mov    rax,QWORD PTR [rip+0x5442]        # 0x140007008
   140001bc6:	xor    rax,rsp
   140001bc9:	mov    QWORD PTR [rsp+0x6b0],rax
   140001bd1:	mov    rbx,r9
   140001bd4:	mov    rdi,r8
   140001bd7:	mov    rsi,rcx
   140001bda:	mov    QWORD PTR [rsp+0x38],rcx
   140001bdf:	mov    r12d,0x2
   140001be5:	sub    edx,r12d
   140001be8:	je     0x1400021e9
   140001bee:	sub    edx,0xe
   140001bf1:	je     0x1400021dc
   140001bf7:	sub    edx,0x3e
   140001bfa:	je     0x1400021bd
   140001c00:	sub    edx,0xc2
   140001c06:	je     0x14000215f
   140001c0c:	cmp    edx,0x1
   140001c0f:	jne    0x140002158
   140001c15:	movzx  ecx,r8w
   140001c19:	sub    ecx,r12d
   140001c1c:	je     0x140002144
   140001c22:	sub    ecx,0x3
   140001c25:	je     0x14000213f
   140001c2b:	sub    ecx,0x3
   140001c2e:	je     0x140002144
   140001c34:	sub    ecx,0x452
   140001c3a:	je     0x140001d51
   140001c40:	cmp    ecx,0x3
   140001c43:	jne    0x1400021b6
   140001c49:	shr    rdi,0x10
   140001c4d:	movzx  ecx,di
   140001c50:	sub    ecx,edx
   140001c52:	je     0x140001c99
   140001c54:	cmp    ecx,edx
   140001c56:	jne    0x1400021b6
   140001c5c:	xor    r9d,r9d
   140001c5f:	xor    r8d,r8d
   140001c62:	mov    edx,0x188
   140001c67:	mov    rcx,rbx
   140001c6a:	call   QWORD PTR [rip+0x3590]        # 0x140005200
   140001c70:	or     rdx,0xffffffffffffffff
   140001c74:	cmp    rax,rdx
   140001c77:	je     0x1400021b6
   140001c7d:	xor    r9d,r9d
   140001c80:	mov    edx,0x111
   140001c85:	mov    r8d,0x45a
   140001c8b:	mov    rcx,rsi
   140001c8e:	call   QWORD PTR [rip+0x35ac]        # 0x140005240
   140001c94:	jmp    0x1400021b6
   140001c99:	mov    edx,0x45a
   140001c9e:	mov    rcx,rsi
   140001ca1:	call   QWORD PTR [rip+0x3561]        # 0x140005208
   140001ca7:	mov    rdi,rax
   140001caa:	xor    r9d,r9d
   140001cad:	xor    r8d,r8d
   140001cb0:	mov    edx,0x188
   140001cb5:	mov    rcx,rbx
   140001cb8:	call   QWORD PTR [rip+0x3542]        # 0x140005200
   140001cbe:	mov    r15,rax
   140001cc1:	cmp    eax,0xffffffff
   140001cc4:	je     0x1400021b6
   140001cca:	test   rdi,rdi
   140001ccd:	je     0x140001ce8
   140001ccf:	mov    rcx,rdi
   140001cd2:	call   QWORD PTR [rip+0x3520]        # 0x1400051f8
   140001cd8:	test   eax,eax
   140001cda:	jne    0x140001ce8
   140001cdc:	lea    edx,[rax+0x1]
   140001cdf:	mov    rcx,rdi
   140001ce2:	call   QWORD PTR [rip+0x3568]        # 0x140005250
   140001ce8:	mov    r8d,r15d
   140001ceb:	xor    r9d,r9d
   140001cee:	mov    edx,0x199
   140001cf3:	mov    rcx,rbx
   140001cf6:	call   QWORD PTR [rip+0x3504]        # 0x140005200
   140001cfc:	mov    eax,eax
   140001cfe:	lea    rdx,[rax+rax*4]
   140001d02:	mov    rcx,QWORD PTR [rip+0x58ef]        # 0x1400075f8
   140001d09:	mov    rax,QWORD PTR [rcx+rdx*8+0x10]
   140001d0e:	mov    QWORD PTR [rip+0x591b],rax        # 0x140007630
   140001d15:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   140001d1a:	mov    QWORD PTR [rip+0x591f],rax        # 0x140007640
   140001d21:	mov    rax,QWORD PTR [rcx+rdx*8+0x18]
   140001d26:	mov    QWORD PTR [rip+0x590b],rax        # 0x140007638
   140001d2d:	mov    rax,QWORD PTR [rcx+rdx*8]
   140001d31:	mov    QWORD PTR [rip+0x5910],rax        # 0x140007648
   140001d38:	xor    r9d,r9d
   140001d3b:	lea    edx,[r9+0xb]
   140001d3f:	lea    r8d,[r9+0x1]
   140001d43:	mov    rcx,rsi
   140001d46:	call   QWORD PTR [rip+0x34b4]        # 0x140005200
   140001d4c:	jmp    0x1400021b6
   140001d51:	xor    r15d,r15d
   140001d54:	and    DWORD PTR [rsp+0x30],r15d
   140001d59:	cmp    DWORD PTR [rip+0x58c8],r15d        # 0x140007628
   140001d60:	jne    0x140002158
   140001d66:	mov    DWORD PTR [rip+0x58b8],0x1        # 0x140007628
   140001d70:	mov    r8,QWORD PTR [rip+0x58d1]        # 0x140007648
   140001d77:	mov    rdx,QWORD PTR [rip+0x58b2]        # 0x140007630
   140001d7e:	xor    ecx,ecx
   140001d80:	call   0x140001008
   140001d85:	mov    DWORD PTR [rip+0x529c],r12d        # 0x140007028
   140001d8c:	and    DWORD PTR [rip+0x5299],r15d        # 0x14000702c
   140001d93:	mov    edx,0x45a
   140001d98:	mov    rcx,rsi
   140001d9b:	call   QWORD PTR [rip+0x3467]        # 0x140005208
   140001da1:	mov    rcx,rax
   140001da4:	xor    edx,edx
   140001da6:	call   QWORD PTR [rip+0x34a4]        # 0x140005250
   140001dac:	mov    r9d,0x105
   140001db2:	lea    r8,[rsp+0x4a0]
   140001dba:	mov    edx,0x609
   140001dbf:	mov    rcx,QWORD PTR [rip+0x58ba]        # 0x140007680
   140001dc6:	call   QWORD PTR [rip+0x3454]        # 0x140005220
   140001dcc:	test   eax,eax
   140001dce:	je     0x140001de4
   140001dd0:	lea    r8,[rsp+0x4a0]
   140001dd8:	mov    edx,r12d
   140001ddb:	mov    rcx,rsi
   140001dde:	call   QWORD PTR [rip+0x33f4]        # 0x1400051d8
   140001de4:	mov    rcx,QWORD PTR [rip+0x5845]        # 0x140007630
   140001deb:	test   rcx,rcx
   140001dee:	je     0x1400020fc
   140001df4:	cmp    QWORD PTR [rip+0x583d],r15        # 0x140007638
   140001dfb:	je     0x1400020fc
   140001e01:	call   QWORD PTR [rip+0x3251]        # 0x140005058
   140001e07:	mov    r15,rax
   140001e0a:	mov    QWORD PTR [rsp+0x40],rax
   140001e0f:	test   rax,rax
   140001e12:	jne    0x140001e42
   140001e14:	call   QWORD PTR [rip+0x32a6]        # 0x1400050c0
   140001e1a:	mov    rcx,rsi
   140001e1d:	cmp    eax,r12d
   140001e20:	mov    edx,0x606
   140001e25:	jne    0x140001e2c
   140001e27:	mov    edx,0x605
   140001e2c:	call   0x14000222c
   140001e31:	mov    rcx,rsi
   140001e34:	test   eax,eax
   140001e36:	je     0x140001e6a
   140001e38:	call   0x140001b78
   140001e3d:	jmp    0x1400020fa
   140001e42:	mov    rdx,QWORD PTR [rip+0x57ef]        # 0x140007638
   140001e49:	mov    rcx,rax
   140001e4c:	call   QWORD PTR [rip+0x31fe]        # 0x140005050
   140001e52:	mov    rdi,rax
   140001e55:	test   rax,rax
   140001e58:	jne    0x140001e74
   140001e5a:	call   QWORD PTR [rip+0x3260]        # 0x1400050c0
   140001e60:	mov    edx,0x606
   140001e65:	mov    rcx,rsi
   140001e68:	jmp    0x140001e2c
   140001e6a:	call   0x140001b48
   140001e6f:	jmp    0x1400020fa
   140001e74:	xor    r12d,r12d
   140001e77:	and    DWORD PTR [rsp+0x50],r12d
   140001e7c:	xor    edx,edx
   140001e7e:	lea    r8d,[r12+0x28]
   140001e83:	lea    rcx,[rsp+0x58]
   140001e88:	call   0x1400042b4
   140001e8d:	lea    edx,[r12+0x10]
   140001e92:	mov    rcx,rsi
   140001e95:	call   QWORD PTR [rip+0x334d]        # 0x1400051e8
   140001e9b:	mov    DWORD PTR [rsp+0x50],0x30
   140001ea3:	mov    QWORD PTR [rsp+0x58],rsi
   140001ea8:	test   rax,rax
   140001eab:	je     0x140001ebc
   140001ead:	or     rdx,0xffffffffffffffff
   140001eb1:	inc    rdx
   140001eb4:	cmp    BYTE PTR [rax+rdx*1],r12b
   140001eb8:	jne    0x140001eb1
   140001eba:	jmp    0x140001ebe
   140001ebc:	xor    edx,edx
   140001ebe:	test   rdx,rdx
   140001ec1:	je     0x140001ecf
   140001ec3:	mov    QWORD PTR [rsp+0x60],rax
   140001ec8:	and    DWORD PTR [rsp+0x68],r12d
   140001ecd:	jmp    0x140001ed7
   140001ecf:	mov    DWORD PTR [rsp+0x68],0x400000
   140001ed7:	mov    rbx,QWORD PTR [rip+0x57aa]        # 0x140007688
   140001ede:	mov    rcx,rbx
   140001ee1:	mov    rax,QWORD PTR [rip+0x3470]        # 0x140005358
   140001ee8:	call   rax
   140001eea:	xor    r9d,r9d
   140001eed:	lea    r8,[rsp+0x50]
   140001ef2:	lea    rdx,[rip+0x571f]        # 0x140007618
   140001ef9:	lea    rcx,[rip+0x5720]        # 0x140007620
   140001f00:	call   rbx
   140001f02:	test   eax,eax
   140001f04:	js     0x140002026
   140001f0a:	mov    rcx,rdi
   140001f0d:	mov    rax,QWORD PTR [rip+0x3444]        # 0x140005358
   140001f14:	call   rax
   140001f16:	lea    rax,[rip+0x510b]        # 0x140007028
   140001f1d:	mov    QWORD PTR [rsp+0x20],rax
   140001f22:	lea    r9,[rip+0x697]        # 0x1400025c0
   140001f29:	mov    r8,QWORD PTR [rip+0x56e8]        # 0x140007618
   140001f30:	mov    rdx,QWORD PTR [rip+0x56e9]        # 0x140007620
   140001f37:	mov    rcx,rsi
   140001f3a:	call   rdi
   140001f3c:	test   eax,eax
   140001f3e:	jns    0x140001f81
   140001f40:	mov    rcx,rsi
   140001f43:	cmp    eax,0x8004010b
   140001f48:	je     0x140001f5f
   140001f4a:	cmp    eax,0x80040113
   140001f4f:	je     0x140001f58
   140001f51:	call   0x140001b48
   140001f56:	jmp    0x140001f7b
   140001f58:	call   0x140001b78
   140001f5d:	jmp    0x140001f7b
   140001f5f:	mov    DWORD PTR [rip+0x56c3],0x1        # 0x14000762c
   140001f69:	mov    edx,0x622
   140001f6e:	call   0x1400026e4
   140001f73:	mov    rcx,rsi
   140001f76:	call   0x140001a54
   140001f7b:	mov    r12d,0x1
   140001f81:	mov    rdi,QWORD PTR [rip+0x5698]        # 0x140007620
   140001f88:	mov    rax,QWORD PTR [rdi]
   140001f8b:	mov    rbx,QWORD PTR [rax+0x10]
   140001f8f:	mov    rcx,rbx
   140001f92:	mov    rax,QWORD PTR [rip+0x33bf]        # 0x140005358
   140001f99:	call   rax
   140001f9b:	mov    rcx,rdi
   140001f9e:	call   rbx
   140001fa0:	and    QWORD PTR [rip+0x5678],0x0        # 0x140007620
   140001fa8:	mov    rdi,QWORD PTR [rip+0x5669]        # 0x140007618
   140001faf:	mov    rax,QWORD PTR [rdi]
   140001fb2:	mov    rbx,QWORD PTR [rax+0x10]
   140001fb6:	mov    rcx,rbx
   140001fb9:	mov    rax,QWORD PTR [rip+0x3398]        # 0x140005358
   140001fc0:	call   rax
   140001fc2:	mov    rcx,rdi
   140001fc5:	call   rbx
   140001fc7:	and    QWORD PTR [rip+0x5649],0x0        # 0x140007618
   140001fcf:	test   r12d,r12d
   140001fd2:	jne    0x1400020ce
   140001fd8:	mov    edx,0x459
   140001fdd:	mov    rcx,rsi
   140001fe0:	call   QWORD PTR [rip+0x3222]        # 0x140005208
   140001fe6:	mov    rcx,rax
   140001fe9:	mov    r9d,0x640000
   140001fef:	xor    r8d,r8d
   140001ff2:	mov    edx,0x401
   140001ff7:	call   QWORD PTR [rip+0x3203]        # 0x140005200
   140001ffd:	mov    edx,0x459
   140002002:	mov    rcx,rsi
   140002005:	call   QWORD PTR [rip+0x31fd]        # 0x140005208
   14000200b:	mov    rcx,rax
   14000200e:	xor    r9d,r9d
   140002011:	mov    edx,0x402
   140002016:	lea    r8d,[r12+0x64]
   14000201b:	call   QWORD PTR [rip+0x31df]        # 0x140005200
   140002021:	jmp    0x1400020c6
   140002026:	mov    r9d,0x105
   14000202c:	lea    r8,[rsp+0x290]
   140002034:	mov    edx,0x5e0
   140002039:	mov    rcx,QWORD PTR [rip+0x5640]        # 0x140007680
   140002040:	call   QWORD PTR [rip+0x31da]        # 0x140005220
   140002046:	test   eax,eax
   140002048:	je     0x1400020bc
   14000204a:	lea    r8,[rsp+0x290]
   140002052:	mov    edx,0x45c
   140002057:	mov    rcx,rsi
   14000205a:	call   QWORD PTR [rip+0x3178]        # 0x1400051d8
   140002060:	mov    r9d,0x105
   140002066:	lea    r8,[rsp+0x80]
   14000206e:	mov    edx,0x60b
   140002073:	mov    rcx,QWORD PTR [rip+0x5606]        # 0x140007680
   14000207a:	call   QWORD PTR [rip+0x31a0]        # 0x140005220
   140002080:	test   eax,eax
   140002082:	jne    0x14000209d
   140002084:	lea    r8,[rip+0x339d]        # 0x140005428
   14000208b:	mov    edx,0x105
   140002090:	lea    rcx,[rsp+0x80]
   140002098:	call   0x140001130
   14000209d:	mov    r9d,0x40
   1400020a3:	lea    r8,[rsp+0x80]
   1400020ab:	lea    rdx,[rsp+0x290]
   1400020b3:	mov    rcx,rsi
   1400020b6:	call   QWORD PTR [rip+0x3114]        # 0x1400051d0
   1400020bc:	mov    DWORD PTR [rip+0x5566],0x1        # 0x14000762c
   1400020c6:	mov    rcx,rsi
   1400020c9:	call   0x140001a54
   1400020ce:	jmp    0x1400020fa
   1400020d0:	mov    edx,0x607
   1400020d5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400020da:	mov    rcx,rbx
   1400020dd:	call   0x14000222c
   1400020e2:	mov    rcx,rbx
   1400020e5:	test   eax,eax
   1400020e7:	je     0x1400020f0
   1400020e9:	call   0x140001b78
   1400020ee:	jmp    0x1400020f5
   1400020f0:	call   0x140001b48
   1400020f5:	mov    r15,QWORD PTR [rsp+0x40]
   1400020fa:	jmp    0x14000212f
   1400020fc:	mov    edx,0x459
   140002101:	mov    rcx,rsi
   140002104:	call   QWORD PTR [rip+0x30fe]        # 0x140005208
   14000210a:	mov    rcx,rax
   14000210d:	mov    edx,0x5
   140002112:	call   QWORD PTR [rip+0x3110]        # 0x140005228
   140002118:	xor    r9d,r9d
   14000211b:	mov    edx,0x111
   140002120:	mov    r8d,0xbb8
   140002126:	mov    rcx,rsi
   140002129:	call   QWORD PTR [rip+0x3111]        # 0x140005240
   14000212f:	test   r15,r15
   140002132:	je     0x140002158
   140002134:	mov    rcx,r15
   140002137:	call   QWORD PTR [rip+0x2f23]        # 0x140005060
   14000213d:	jmp    0x140002158
   14000213f:	mov    edx,r12d
   140002142:	jmp    0x140002149
   140002144:	mov    edx,0x10
   140002149:	xor    r9d,r9d
   14000214c:	xor    r8d,r8d
   14000214f:	mov    rcx,rsi
   140002152:	call   QWORD PTR [rip+0x30a8]        # 0x140005200
   140002158:	xor    eax,eax
   14000215a:	jmp    0x140002207
   14000215f:	mov    r8,rbx
   140002162:	mov    edx,0x10
   140002167:	call   QWORD PTR [rip+0x30c3]        # 0x140005230
   14000216d:	call   QWORD PTR [rip+0x2ecd]        # 0x140005040
   140002173:	mov    edx,0x5dd
   140002178:	mov    rcx,rsi
   14000217b:	call   0x1400026e4
   140002180:	mov    edx,0x45d
   140002185:	mov    rcx,rsi
   140002188:	call   QWORD PTR [rip+0x307a]        # 0x140005208
   14000218e:	mov    QWORD PTR [rip+0x5453],rax        # 0x1400075e8
   140002195:	mov    rcx,rax
   140002198:	call   0x140002ff0
   14000219d:	mov    edx,0x459
   1400021a2:	mov    rcx,rsi
   1400021a5:	call   QWORD PTR [rip+0x305d]        # 0x140005208
   1400021ab:	mov    rcx,rax
   1400021ae:	xor    edx,edx
   1400021b0:	call   QWORD PTR [rip+0x3072]        # 0x140005228
   1400021b6:	mov    eax,0x1
   1400021bb:	jmp    0x140002207
   1400021bd:	mov    eax,DWORD PTR [r9+0x10]
   1400021c1:	add    eax,0x4
   1400021c4:	test   eax,0xfffffffd
   1400021c9:	jne    0x1400021b6
   1400021cb:	cmp    QWORD PTR [r9+0x8],0x514
   1400021d3:	jne    0x1400021b6
   1400021d5:	call   0x1400034f4
   1400021da:	jmp    0x1400021b6
   1400021dc:	xor    edx,edx
   1400021de:	call   QWORD PTR [rip+0x302c]        # 0x140005210
   1400021e4:	jmp    0x140002158
   1400021e9:	mov    rcx,QWORD PTR [rip+0x53f8]        # 0x1400075e8
   1400021f0:	call   0x14000342c
   1400021f5:	mov    r9,rbx
   1400021f8:	mov    r8,rdi
   1400021fb:	mov    edx,r12d
   1400021fe:	mov    rcx,rsi
   140002201:	call   QWORD PTR [rip+0x3011]        # 0x140005218
   140002207:	mov    rcx,QWORD PTR [rsp+0x6b0]
   14000220f:	xor    rcx,rsp
   140002212:	call   0x140003c70
   140002217:	add    rsp,0x6c0
   14000221e:	pop    r15
   140002220:	pop    r12
   140002222:	pop    rdi
   140002223:	pop    rsi
   140002224:	pop    rbx
   140002225:	ret    
   140002226:	int3   
   140002227:	int3   
   140002228:	int3   
   140002229:	int3   
   14000222a:	int3   
   14000222b:	int3   
   14000222c:	mov    r11,rsp
   14000222f:	push   rbx
   140002230:	sub    rsp,0x50
   140002234:	mov    rax,QWORD PTR [rip+0x53f5]        # 0x140007630
   14000223b:	xor    ebx,ebx
   14000223d:	cmp    DWORD PTR [rip+0x4de9],ebx        # 0x14000702c
   140002243:	jne    0x140002281
   140002245:	mov    QWORD PTR [r11-0x28],rax
   140002249:	lea    r9,[rip+0xbe0]        # 0x140002e30
   140002250:	mov    QWORD PTR [r11-0x20],rbx
   140002254:	lea    rax,[r11-0x28]
   140002258:	mov    DWORD PTR [rsp+0x44],edx
   14000225c:	mov    r8,rcx
   14000225f:	mov    rcx,QWORD PTR [rip+0x541a]        # 0x140007680
   140002266:	mov    edx,0x450
   14000226b:	mov    QWORD PTR [r11-0x38],rax
   14000226f:	mov    DWORD PTR [rsp+0x40],ebx
   140002273:	call   QWORD PTR [rip+0x2f77]        # 0x1400051f0
   140002279:	cmp    DWORD PTR [rsp+0x40],0x1
   14000227e:	sete   bl
   140002281:	mov    eax,ebx
   140002283:	add    rsp,0x50
   140002287:	pop    rbx
   140002288:	ret    
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	mov    rax,rsp
   140002293:	mov    QWORD PTR [rax+0x8],rbx
   140002297:	mov    QWORD PTR [rax+0x18],rbp
   14000229b:	mov    QWORD PTR [rax+0x20],rsi
   14000229f:	push   rdi
   1400022a0:	push   r12
   1400022a2:	push   r13
   1400022a4:	push   r14
   1400022a6:	push   r15
   1400022a8:	sub    rsp,0x40
   1400022ac:	xor    ebx,ebx
   1400022ae:	mov    r12,r8
   1400022b1:	mov    QWORD PTR [rax+0x10],rbx
   1400022b5:	mov    r14,rdx
   1400022b8:	mov    r13,rcx
   1400022bb:	mov    edi,ebx
   1400022bd:	mov    esi,ebx
   1400022bf:	test   rdx,rdx
   1400022c2:	je     0x1400023be
   1400022c8:	or     rbp,0xffffffffffffffff
   1400022cc:	inc    rbp
   1400022cf:	cmp    BYTE PTR [rdx+rbp*1],bl
   1400022d2:	jne    0x1400022cc
   1400022d4:	inc    ebp
   1400022d6:	mov    ecx,0x40
   1400022db:	movsxd rdx,ebp
   1400022de:	add    rdx,rdx
   1400022e1:	call   QWORD PTR [rip+0x2db9]        # 0x1400050a0
   1400022e7:	mov    r15,rax
   1400022ea:	test   rax,rax
   1400022ed:	je     0x1400023be
   1400022f3:	call   QWORD PTR [rip+0x2d97]        # 0x140005090
   1400022f9:	mov    DWORD PTR [rsp+0x28],ebp
   1400022fd:	or     r9d,0xffffffff
   140002301:	mov    ecx,eax
   140002303:	mov    QWORD PTR [rsp+0x20],r15
   140002308:	mov    r8,r14
   14000230b:	xor    edx,edx
   14000230d:	call   QWORD PTR [rip+0x2d85]        # 0x140005098
   140002313:	lea    r8,[rsp+0x78]
   140002318:	mov    rdx,r15
   14000231b:	mov    rcx,r13
   14000231e:	call   0x1400023f0
   140002323:	mov    rbp,QWORD PTR [rsp+0x78]
   140002328:	cmp    eax,0x1
   14000232b:	jne    0x1400023a1
   14000232d:	test   rbp,rbp
   140002330:	je     0x140002395
   140002332:	mov    QWORD PTR [rsp+0x38],rbx
   140002337:	or     r9d,0xffffffff
   14000233b:	mov    QWORD PTR [rsp+0x30],rbx
   140002340:	mov    r8,rbp
   140002343:	mov    DWORD PTR [rsp+0x28],ebx
   140002347:	xor    edx,edx
   140002349:	xor    ecx,ecx
   14000234b:	mov    QWORD PTR [rsp+0x20],rbx
   140002350:	call   QWORD PTR [rip+0x2d2a]        # 0x140005080
   140002356:	mov    ecx,0x40
   14000235b:	lea    r14d,[rax+0x1]
   14000235f:	movsxd rdx,r14d
   140002362:	call   QWORD PTR [rip+0x2d38]        # 0x1400050a0
   140002368:	mov    rsi,rax
   14000236b:	test   rax,rax
   14000236e:	je     0x140002395
   140002370:	mov    QWORD PTR [rsp+0x38],rbx
   140002375:	or     r9d,0xffffffff
   140002379:	mov    QWORD PTR [rsp+0x30],rbx
   14000237e:	mov    r8,rbp
   140002381:	mov    DWORD PTR [rsp+0x28],r14d
   140002386:	xor    edx,edx
   140002388:	xor    ecx,ecx
   14000238a:	mov    QWORD PTR [rsp+0x20],rax
   14000238f:	call   QWORD PTR [rip+0x2ceb]        # 0x140005080
   140002395:	test   rsi,rsi
   140002398:	jne    0x1400023a1
   14000239a:	mov    edi,0x8007000e
   14000239f:	jmp    0x1400023a5
   1400023a1:	mov    QWORD PTR [r12],rsi
   1400023a5:	mov    rcx,r15
   1400023a8:	call   QWORD PTR [rip+0x2d02]        # 0x1400050b0
   1400023ae:	test   rbp,rbp
   1400023b1:	je     0x1400023c3
   1400023b3:	mov    rcx,rbp
   1400023b6:	call   QWORD PTR [rip+0x2cf4]        # 0x1400050b0
   1400023bc:	jmp    0x1400023c3
   1400023be:	mov    edi,0x8007000e
   1400023c3:	lea    r11,[rsp+0x40]
   1400023c8:	test   edi,edi
   1400023ca:	mov    rbp,QWORD PTR [r11+0x40]
   1400023ce:	mov    rsi,QWORD PTR [r11+0x48]
   1400023d2:	setns  bl
   1400023d5:	mov    eax,ebx
   1400023d7:	mov    rbx,QWORD PTR [r11+0x30]
   1400023db:	mov    rsp,r11
   1400023de:	pop    r15
   1400023e0:	pop    r14
   1400023e2:	pop    r13
   1400023e4:	pop    r12
   1400023e6:	pop    rdi
   1400023e7:	ret    
   1400023e8:	int3   
   1400023e9:	int3   
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023f5:	push   rbp
   1400023f6:	push   rsi
   1400023f7:	push   rdi
   1400023f8:	push   r12
   1400023fa:	push   r13
   1400023fc:	push   r14
   1400023fe:	push   r15
   140002400:	mov    rbp,rsp
   140002403:	sub    rsp,0x40
   140002407:	xor    edi,edi
   140002409:	mov    DWORD PTR [rbp+0x58],0x2
   140002410:	lea    rax,[rbp+0x58]
   140002414:	mov    QWORD PTR [r8],rdi
   140002417:	mov    QWORD PTR [rsp+0x28],rax
   14000241c:	lea    r9,[rbp-0x10]
   140002420:	lea    rax,[rbp+0x50]
   140002424:	mov    DWORD PTR [rbp-0x10],edi
   140002427:	mov    r13,r8
   14000242a:	mov    QWORD PTR [rsp+0x20],rax
   14000242f:	xor    r8d,r8d
   140002432:	mov    rbx,rdx
   140002435:	mov    r12,rcx
   140002438:	mov    r15d,edi
   14000243b:	mov    r14d,edi
   14000243e:	call   QWORD PTR [rip+0x2bbc]        # 0x140005000
   140002444:	cmp    eax,0xea
   140002449:	je     0x140002455
   14000244b:	mov    ebx,0x80004005
   140002450:	jmp    0x140002598
   140002455:	mov    eax,DWORD PTR [rbp-0x10]
   140002458:	dec    eax
   14000245a:	cmp    eax,0x1
   14000245d:	jbe    0x140002469
   14000245f:	mov    ebx,0x80070057
   140002464:	jmp    0x140002598
   140002469:	mov    edx,DWORD PTR [rbp+0x58]
   14000246c:	mov    ecx,0x40
   140002471:	call   QWORD PTR [rip+0x2c29]        # 0x1400050a0
   140002477:	mov    rsi,rax
   14000247a:	test   rax,rax
   14000247d:	jne    0x140002489
   14000247f:	mov    ebx,0x8007000e
   140002484:	jmp    0x140002598
   140002489:	lea    rax,[rbp+0x58]
   14000248d:	xor    r8d,r8d
   140002490:	mov    QWORD PTR [rsp+0x28],rax
   140002495:	lea    r9,[rbp-0x10]
   140002499:	mov    rdx,rbx
   14000249c:	mov    QWORD PTR [rsp+0x20],rsi
   1400024a1:	mov    rcx,r12
   1400024a4:	call   QWORD PTR [rip+0x2b56]        # 0x140005000
   1400024aa:	test   eax,eax
   1400024ac:	je     0x1400024b8
   1400024ae:	mov    ebx,0x80004005
   1400024b3:	jmp    0x14000256e
   1400024b8:	cmp    DWORD PTR [rbp-0x10],0x2
   1400024bc:	jne    0x140002519
   1400024be:	xor    r8d,r8d
   1400024c1:	xor    edx,edx
   1400024c3:	mov    rcx,rsi
   1400024c6:	call   QWORD PTR [rip+0x2bec]        # 0x1400050b8
   1400024cc:	mov    DWORD PTR [rbp+0x58],eax
   1400024cf:	test   eax,eax
   1400024d1:	je     0x1400024ae
   1400024d3:	mov    edx,eax
   1400024d5:	mov    ebx,0x40
   1400024da:	add    rdx,rdx
   1400024dd:	mov    ecx,ebx
   1400024df:	call   QWORD PTR [rip+0x2bbb]        # 0x1400050a0
   1400024e5:	mov    r15,rax
   1400024e8:	test   rax,rax
   1400024eb:	jne    0x1400024f4
   1400024ed:	mov    ebx,0x8007000e
   1400024f2:	jmp    0x14000256e
   1400024f4:	mov    r8d,DWORD PTR [rbp+0x58]
   1400024f8:	mov    rdx,rax
   1400024fb:	mov    rcx,rsi
   1400024fe:	call   QWORD PTR [rip+0x2bb4]        # 0x1400050b8
   140002504:	test   eax,eax
   140002506:	je     0x1400024ae
   140002508:	mov    rcx,rsi
   14000250b:	call   QWORD PTR [rip+0x2b9f]        # 0x1400050b0
   140002511:	mov    rsi,r15
   140002514:	mov    r15,rdi
   140002517:	jmp    0x14000251e
   140002519:	mov    ebx,0x40
   14000251e:	cmp    WORD PTR [rsi],bx
   140002521:	jne    0x140002565
   140002523:	mov    edx,0x208
   140002528:	mov    DWORD PTR [rbp+0x58],0x104
   14000252f:	mov    ecx,ebx
   140002531:	call   QWORD PTR [rip+0x2b69]        # 0x1400050a0
   140002537:	mov    r14,rax
   14000253a:	test   rax,rax
   14000253d:	je     0x1400024ed
   14000253f:	mov    r8d,DWORD PTR [rbp+0x58]
   140002543:	xor    r9d,r9d
   140002546:	mov    rdx,rax
   140002549:	mov    rcx,rsi
   14000254c:	call   QWORD PTR [rip+0x2c4e]        # 0x1400051a0
   140002552:	test   eax,eax
   140002554:	js     0x140002565
   140002556:	mov    rcx,rsi
   140002559:	call   QWORD PTR [rip+0x2b51]        # 0x1400050b0
   14000255f:	mov    rsi,r14
   140002562:	mov    r14,rdi
   140002565:	mov    QWORD PTR [r13+0x0],rsi
   140002569:	mov    ebx,edi
   14000256b:	mov    rsi,rdi
   14000256e:	test   rsi,rsi
   140002571:	je     0x14000257c
   140002573:	mov    rcx,rsi
   140002576:	call   QWORD PTR [rip+0x2b34]        # 0x1400050b0
   14000257c:	test   r14,r14
   14000257f:	je     0x14000258a
   140002581:	mov    rcx,r14
   140002584:	call   QWORD PTR [rip+0x2b26]        # 0x1400050b0
   14000258a:	test   r15,r15
   14000258d:	je     0x140002598
   14000258f:	mov    rcx,r15
   140002592:	call   QWORD PTR [rip+0x2b18]        # 0x1400050b0
   140002598:	test   ebx,ebx
   14000259a:	mov    rbx,QWORD PTR [rsp+0x80]
   1400025a2:	setns  dil
   1400025a6:	mov    eax,edi
   1400025a8:	add    rsp,0x40
   1400025ac:	pop    r15
   1400025ae:	pop    r14
   1400025b0:	pop    r13
   1400025b2:	pop    r12
   1400025b4:	pop    rdi
   1400025b5:	pop    rsi
   1400025b6:	pop    rbp
   1400025b7:	ret    
   1400025b8:	int3   
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400025ca:	push   rdi
   1400025cb:	sub    rsp,0x60
   1400025cf:	mov    r8,QWORD PTR [rdx+0x8]
   1400025d3:	mov    rdi,rdx
   1400025d6:	mov    rsi,rcx
   1400025d9:	test   r8,r8
   1400025dc:	je     0x1400025e9
   1400025de:	mov    edx,0x45c
   1400025e3:	call   QWORD PTR [rip+0x2bef]        # 0x1400051d8
   1400025e9:	cmp    DWORD PTR [rdi+0x4],0x0
   1400025ed:	je     0x1400026af
   1400025f3:	cmp    DWORD PTR [rdi],0x0
   1400025f6:	jne    0x140002614
   1400025f8:	mov    edx,0x459
   1400025fd:	mov    rcx,rsi
   140002600:	call   QWORD PTR [rip+0x2c02]        # 0x140005208
   140002606:	mov    rcx,rax
   140002609:	mov    edx,0x5
   14000260e:	call   QWORD PTR [rip+0x2c14]        # 0x140005228
   140002614:	mov    eax,0x7fff
   140002619:	mov    edx,0x459
   14000261e:	cmp    DWORD PTR [rdi+0x4],eax
   140002621:	mov    rcx,rsi
   140002624:	cmovb  eax,DWORD PTR [rdi+0x4]
   140002628:	movzx  ebx,ax
   14000262b:	shl    ebx,0x10
   14000262e:	call   QWORD PTR [rip+0x2bd4]        # 0x140005208
   140002634:	mov    r9d,ebx
   140002637:	xor    r8d,r8d
   14000263a:	mov    rcx,rax
   14000263d:	mov    edx,0x401
   140002642:	call   QWORD PTR [rip+0x2bb8]        # 0x140005200
   140002648:	mov    edx,0x459
   14000264d:	mov    rcx,rsi
   140002650:	call   QWORD PTR [rip+0x2bb2]        # 0x140005208
   140002656:	xor    r9d,r9d
   140002659:	mov    edx,0x404
   14000265e:	mov    rcx,rax
   140002661:	lea    r8d,[r9+0x1]
   140002665:	call   QWORD PTR [rip+0x2b95]        # 0x140005200
   14000266b:	mov    eax,DWORD PTR [rdi+0x4]
   14000266e:	mov    edx,0x459
   140002673:	cmp    DWORD PTR [rdi],eax
   140002675:	mov    rcx,rsi
   140002678:	cmovb  eax,DWORD PTR [rdi]
   14000267b:	mov    ebx,eax
   14000267d:	call   QWORD PTR [rip+0x2b85]        # 0x140005208
   140002683:	xor    r9d,r9d
   140002686:	mov    r8d,ebx
   140002689:	mov    rcx,rax
   14000268c:	mov    edx,0x402
   140002691:	call   QWORD PTR [rip+0x2b69]        # 0x140005200
   140002697:	jmp    0x1400026af
   140002699:	lea    rcx,[rsp+0x30]
   14000269e:	call   QWORD PTR [rip+0x2b94]        # 0x140005238
   1400026a4:	lea    rcx,[rsp+0x30]
   1400026a9:	call   QWORD PTR [rip+0x2b01]        # 0x1400051b0
   1400026af:	xor    r9d,r9d
   1400026b2:	mov    DWORD PTR [rsp+0x20],0x1
   1400026ba:	xor    r8d,r8d
   1400026bd:	lea    rcx,[rsp+0x30]
   1400026c2:	xor    edx,edx
   1400026c4:	call   QWORD PTR [rip+0x2af6]        # 0x1400051c0
   1400026ca:	test   eax,eax
   1400026cc:	jne    0x140002699
   1400026ce:	mov    rbx,QWORD PTR [rsp+0x70]
   1400026d3:	mov    rsi,QWORD PTR [rsp+0x78]
   1400026d8:	add    rsp,0x60
   1400026dc:	pop    rdi
   1400026dd:	ret    
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	int3   
   1400026e1:	int3   
   1400026e2:	int3   
   1400026e3:	int3   
   1400026e4:	rex push rbx
   1400026e6:	sub    rsp,0x240
   1400026ed:	mov    rax,QWORD PTR [rip+0x4914]        # 0x140007008
   1400026f4:	xor    rax,rsp
   1400026f7:	mov    QWORD PTR [rsp+0x230],rax
   1400026ff:	mov    rbx,rcx
   140002702:	lea    r8,[rsp+0x20]
   140002707:	mov    rcx,QWORD PTR [rip+0x4f72]        # 0x140007680
   14000270e:	mov    r9d,0x105
   140002714:	call   QWORD PTR [rip+0x2b06]        # 0x140005220
   14000271a:	test   eax,eax
   14000271c:	je     0x140002731
   14000271e:	lea    r8,[rsp+0x20]
   140002723:	mov    edx,0x45c
   140002728:	mov    rcx,rbx
   14000272b:	call   QWORD PTR [rip+0x2aa7]        # 0x1400051d8
   140002731:	mov    rcx,QWORD PTR [rsp+0x230]
   140002739:	xor    rcx,rsp
   14000273c:	call   0x140003c70
   140002741:	add    rsp,0x240
   140002748:	pop    rbx
   140002749:	ret    
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	mov    rax,rsp
   140002753:	mov    QWORD PTR [rax+0x10],rbx
   140002757:	mov    QWORD PTR [rax+0x18],rsi
   14000275b:	mov    QWORD PTR [rax+0x20],rdi
   14000275f:	push   rbp
   140002760:	lea    rbp,[rax-0x78]
   140002764:	sub    rsp,0x170
   14000276b:	mov    rax,QWORD PTR [rip+0x4896]        # 0x140007008
   140002772:	xor    rax,rsp
   140002775:	mov    QWORD PTR [rbp+0x60],rax
   140002779:	mov    rbx,rcx
   14000277c:	xor    edi,edi
   14000277e:	lea    rcx,[rsp+0x51]
   140002783:	mov    BYTE PTR [rsp+0x50],dil
   140002788:	xor    edx,edx
   14000278a:	mov    r8d,0x103
   140002790:	call   0x1400042b4
   140002795:	lea    rax,[rsp+0x38]
   14000279a:	mov    r9d,0x20019
   1400027a0:	xor    r8d,r8d
   1400027a3:	mov    QWORD PTR [rsp+0x20],rax
   1400027a8:	lea    rdx,[rip+0x2ce9]        # 0x140005498
   1400027af:	mov    rcx,0xffffffff80000002
   1400027b6:	call   QWORD PTR [rip+0x284c]        # 0x140005008
   1400027bc:	mov    esi,0x104
   1400027c1:	test   eax,eax
   1400027c3:	jne    0x140002860
   1400027c9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400027ce:	lea    rax,[rsp+0x30]
   1400027d3:	mov    QWORD PTR [rsp+0x28],rax
   1400027d8:	lea    r9,[rsp+0x40]
   1400027dd:	lea    rax,[rsp+0x50]
   1400027e2:	mov    DWORD PTR [rsp+0x30],esi
   1400027e6:	xor    r8d,r8d
   1400027e9:	mov    QWORD PTR [rsp+0x20],rax
   1400027ee:	xor    edx,edx
   1400027f0:	call   QWORD PTR [rip+0x2992]        # 0x140005188
   1400027f6:	test   eax,eax
   1400027f8:	jne    0x140002860
   1400027fa:	lea    rcx,[rsp+0x50]
   1400027ff:	call   QWORD PTR [rip+0x2883]        # 0x140005088
   140002805:	cmp    eax,0xffffffff
   140002808:	je     0x140002851
   14000280a:	xor    r9d,r9d
   14000280d:	lea    r8,[rsp+0x50]
   140002812:	sub    r8,rbx
   140002815:	mov    edx,esi
   140002817:	mov    rcx,rbx
   14000281a:	lea    rax,[rdx+0x7ffffefa]
   140002821:	test   rax,rax
   140002824:	je     0x140002839
   140002826:	mov    al,BYTE PTR [r8+rcx*1]
   14000282a:	test   al,al
   14000282c:	je     0x140002839
   14000282e:	mov    BYTE PTR [rcx],al
   140002830:	inc    rcx
   140002833:	sub    rdx,0x1
   140002837:	jne    0x14000281a
   140002839:	test   rdx,rdx
   14000283c:	jne    0x140002847
   14000283e:	dec    rcx
   140002841:	mov    r9d,0x8007007a
   140002847:	test   r9d,r9d
   14000284a:	mov    BYTE PTR [rcx],dil
   14000284d:	setns  dil
   140002851:	mov    rcx,QWORD PTR [rsp+0x38]
   140002856:	call   QWORD PTR [rip+0x27cc]        # 0x140005028
   14000285c:	test   edi,edi
   14000285e:	jne    0x1400028cf
   140002860:	mov    r8d,esi
   140002863:	lea    rdx,[rsp+0x50]
   140002868:	lea    rcx,[rip+0x2c49]        # 0x1400054b8
   14000286f:	call   QWORD PTR [rip+0x27fb]        # 0x140005070
   140002875:	test   eax,eax
   140002877:	je     0x1400028cf
   140002879:	lea    rdx,[rip+0x2c58]        # 0x1400054d8
   140002880:	lea    rcx,[rsp+0x50]
   140002885:	call   QWORD PTR [rip+0x28ed]        # 0x140005178
   14000288b:	test   eax,eax
   14000288d:	je     0x1400028cf
   14000288f:	xor    edx,edx
   140002891:	lea    rcx,[rsp+0x50]
   140002896:	sub    rcx,rbx
   140002899:	lea    rax,[rsi+0x7ffffefa]
   1400028a0:	test   rax,rax
   1400028a3:	je     0x1400028b7
   1400028a5:	mov    al,BYTE PTR [rcx+rbx*1]
   1400028a8:	test   al,al
   1400028aa:	je     0x1400028b7
   1400028ac:	mov    BYTE PTR [rbx],al
   1400028ae:	inc    rbx
   1400028b1:	sub    rsi,0x1
   1400028b5:	jne    0x140002899
   1400028b7:	test   rsi,rsi
   1400028ba:	jne    0x1400028c4
   1400028bc:	dec    rbx
   1400028bf:	mov    edx,0x8007007a
   1400028c4:	xor    edi,edi
   1400028c6:	mov    BYTE PTR [rbx],0x0
   1400028c9:	test   edx,edx
   1400028cb:	setns  dil
   1400028cf:	mov    eax,edi
   1400028d1:	mov    rcx,QWORD PTR [rbp+0x60]
   1400028d5:	xor    rcx,rsp
   1400028d8:	call   0x140003c70
   1400028dd:	lea    r11,[rsp+0x170]
   1400028e5:	mov    rbx,QWORD PTR [r11+0x18]
   1400028e9:	mov    rsi,QWORD PTR [r11+0x20]
   1400028ed:	mov    rdi,QWORD PTR [r11+0x28]
   1400028f1:	mov    rsp,r11
   1400028f4:	pop    rbp
   1400028f5:	ret    
   1400028f6:	int3   
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	mov    QWORD PTR [rsp+0x10],rbx
   140002901:	mov    DWORD PTR [rsp+0x20],r9d
   140002906:	push   rbp
   140002907:	push   rsi
   140002908:	push   rdi
   140002909:	push   r12
   14000290b:	push   r13
   14000290d:	push   r14
   14000290f:	push   r15
   140002911:	sub    rsp,0x30
   140002915:	xor    r13d,r13d
   140002918:	mov    r14,r8
   14000291b:	or     rsi,0xffffffffffffffff
   14000291f:	mov    DWORD PTR [rsp+0x70],r13d
   140002924:	mov    rax,rsi
   140002927:	mov    r12,rdx
   14000292a:	mov    rdi,rcx
   14000292d:	inc    rax
   140002930:	cmp    BYTE PTR [rcx+rax*1],r13b
   140002934:	jne    0x14000292d
   140002936:	test   rax,rax
   140002939:	je     0x140002b22
   14000293f:	test   rdx,rdx
   140002942:	je     0x140002b22
   140002948:	mov    rax,rsi
   14000294b:	inc    rax
   14000294e:	cmp    BYTE PTR [rdx+rax*1],r13b
   140002952:	jne    0x14000294b
   140002954:	test   rax,rax
   140002957:	je     0x140002b22
   14000295d:	mov    rax,rsi
   140002960:	inc    rax
   140002963:	cmp    BYTE PTR [rcx+rax*1],r13b
   140002967:	jne    0x140002960
   140002969:	inc    eax
   14000296b:	mov    ecx,0x40
   140002970:	mov    edx,eax
   140002972:	mov    ebx,eax
   140002974:	call   QWORD PTR [rip+0x2726]        # 0x1400050a0
   14000297a:	mov    QWORD PTR [rsp+0x28],rax
   14000297f:	mov    r9,rax
   140002982:	test   rax,rax
   140002985:	je     0x140002b22
   14000298b:	lea    rax,[rbx-0x1]
   14000298f:	mov    r8d,0x7ffffffe
   140002995:	cmp    rax,r8
   140002998:	ja     0x1400029ce
   14000299a:	mov    edx,r8d
   14000299d:	mov    rcx,r9
   1400029a0:	sub    rdx,rbx
   1400029a3:	sub    rdi,r9
   1400029a6:	lea    rax,[rdx+rbx*1]
   1400029aa:	test   rax,rax
   1400029ad:	je     0x1400029c1
   1400029af:	mov    al,BYTE PTR [rdi+rcx*1]
   1400029b2:	test   al,al
   1400029b4:	je     0x1400029c1
   1400029b6:	mov    BYTE PTR [rcx],al
   1400029b8:	inc    rcx
   1400029bb:	sub    rbx,0x1
   1400029bf:	jne    0x1400029a6
   1400029c1:	test   rbx,rbx
   1400029c4:	jne    0x1400029c9
   1400029c6:	dec    rcx
   1400029c9:	mov    BYTE PTR [rcx],r13b
   1400029cc:	jmp    0x1400029d6
   1400029ce:	test   rbx,rbx
   1400029d1:	je     0x1400029d6
   1400029d3:	mov    BYTE PTR [r9],r13b
   1400029d6:	mov    rax,r12
   1400029d9:	mov    rdi,r9
   1400029dc:	neg    rax
   1400029df:	mov    QWORD PTR [rsp+0x20],rax
   1400029e4:	cmp    BYTE PTR [rdi],r13b
   1400029e7:	je     0x140002b11
   1400029ed:	mov    r15,rsi
   1400029f0:	inc    r15
   1400029f3:	cmp    BYTE PTR [r12+r15*1],r13b
   1400029f7:	jne    0x1400029f0
   1400029f9:	mov    rbp,r12
   1400029fc:	cmp    BYTE PTR [rbp+0x0],r13b
   140002a00:	je     0x140002a56
   140002a02:	test   r15d,r15d
   140002a05:	je     0x140002a56
   140002a07:	lea    r13,[rax+rdi*1]
   140002a0b:	dec    r15d
   140002a0e:	movsx  ecx,BYTE PTR [r13+rbp*1+0x0]
   140002a14:	call   QWORD PTR [rip+0x2846]        # 0x140005260
   140002a1a:	movsx  ecx,BYTE PTR [rbp+0x0]
   140002a1e:	mov    ebx,eax
   140002a20:	call   QWORD PTR [rip+0x283a]        # 0x140005260
   140002a26:	cmp    ebx,eax
   140002a28:	jne    0x140002a3f
   140002a2a:	inc    rbp
   140002a2d:	cmp    BYTE PTR [r13+rbp*1+0x0],0x0
   140002a33:	je     0x140002a53
   140002a35:	mov    rax,QWORD PTR [rsp+0x20]
   140002a3a:	xor    r13d,r13d
   140002a3d:	jmp    0x1400029fc
   140002a3f:	add    rdi,0x1
   140002a43:	je     0x140002b11
   140002a49:	mov    rax,QWORD PTR [rsp+0x20]
   140002a4e:	xor    r13d,r13d
   140002a51:	jmp    0x1400029e4
   140002a53:	xor    r13d,r13d
   140002a56:	mov    rcx,rsi
   140002a59:	inc    rcx
   140002a5c:	cmp    BYTE PTR [rdi+rcx*1],r13b
   140002a60:	jne    0x140002a59
   140002a62:	mov    rax,rsi
   140002a65:	inc    rax
   140002a68:	cmp    BYTE PTR [r12+rax*1],r13b
   140002a6c:	jne    0x140002a65
   140002a6e:	cmp    rcx,rax
   140002a71:	jb     0x140002b11
   140002a77:	mov    DWORD PTR [rsp+0x70],0x1
   140002a7f:	mov    rax,rsi
   140002a82:	inc    rax
   140002a85:	cmp    BYTE PTR [r12+rax*1],r13b
   140002a89:	jne    0x140002a82
   140002a8b:	add    rdi,rax
   140002a8e:	test   r14,r14
   140002a91:	je     0x140002b11
   140002a93:	mov    rax,rdi
   140002a96:	test   rdi,rdi
   140002a99:	je     0x140002aab
   140002a9b:	cmp    BYTE PTR [rax],r13b
   140002a9e:	je     0x140002aab
   140002aa0:	cmp    BYTE PTR [rax],0x2b
   140002aa3:	je     0x140002aab
   140002aa5:	add    rax,0x1
   140002aa9:	jne    0x140002a9b
   140002aab:	mov    BYTE PTR [rax],r13b
   140002aae:	test   rdi,rdi
   140002ab1:	je     0x140002abe
   140002ab3:	inc    rsi
   140002ab6:	cmp    BYTE PTR [rdi+rsi*1],r13b
   140002aba:	jne    0x140002ab3
   140002abc:	jmp    0x140002ac1
   140002abe:	mov    rsi,r13
   140002ac1:	test   rsi,rsi
   140002ac4:	je     0x140002b11
   140002ac6:	mov    ecx,DWORD PTR [rsp+0x88]
   140002acd:	mov    r8d,0x7ffffffe
   140002ad3:	lea    rax,[rcx-0x1]
   140002ad7:	cmp    rax,r8
   140002ada:	ja     0x140002b09
   140002adc:	sub    r8,rcx
   140002adf:	sub    rdi,r14
   140002ae2:	lea    rax,[r8+rcx*1]
   140002ae6:	test   rax,rax
   140002ae9:	je     0x140002aff
   140002aeb:	mov    al,BYTE PTR [rdi+r14*1]
   140002aef:	test   al,al
   140002af1:	je     0x140002aff
   140002af3:	mov    BYTE PTR [r14],al
   140002af6:	inc    r14
   140002af9:	sub    rcx,0x1
   140002afd:	jne    0x140002ae2
   140002aff:	test   rcx,rcx
   140002b02:	jne    0x140002b0e
   140002b04:	dec    r14
   140002b07:	jmp    0x140002b0e
   140002b09:	test   rcx,rcx
   140002b0c:	je     0x140002b11
   140002b0e:	mov    BYTE PTR [r14],r13b
   140002b11:	mov    rcx,QWORD PTR [rsp+0x28]
   140002b16:	call   QWORD PTR [rip+0x2594]        # 0x1400050b0
   140002b1c:	mov    eax,DWORD PTR [rsp+0x70]
   140002b20:	jmp    0x140002b24
   140002b22:	xor    eax,eax
   140002b24:	mov    rbx,QWORD PTR [rsp+0x78]
   140002b29:	add    rsp,0x30
   140002b2d:	pop    r15
   140002b2f:	pop    r14
   140002b31:	pop    r13
   140002b33:	pop    r12
   140002b35:	pop    rdi
   140002b36:	pop    rsi
   140002b37:	pop    rbp
   140002b38:	ret    
   140002b39:	int3   
   140002b3a:	int3   
   140002b3b:	int3   
   140002b3c:	int3   
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	mov    rax,rsp
   140002b43:	mov    QWORD PTR [rax+0x8],rbx
   140002b47:	mov    QWORD PTR [rax+0x10],rsi
   140002b4b:	mov    QWORD PTR [rax+0x20],rdi
   140002b4f:	push   rbp
   140002b50:	push   r14
   140002b52:	push   r15
   140002b54:	lea    rbp,[rax-0x7a8]
   140002b5b:	sub    rsp,0x890
   140002b62:	mov    rax,QWORD PTR [rip+0x449f]        # 0x140007008
   140002b69:	xor    rax,rsp
   140002b6c:	mov    QWORD PTR [rbp+0x780],rax
   140002b73:	xor    ebx,ebx
   140002b75:	lea    rcx,[rsp+0x31]
   140002b7a:	mov    r14,r8
   140002b7d:	mov    BYTE PTR [rsp+0x30],bl
   140002b81:	mov    r8d,0x207
   140002b87:	xor    edx,edx
   140002b89:	mov    esi,ebx
   140002b8b:	mov    r15d,ebx
   140002b8e:	call   0x1400042b4
   140002b93:	mov    edi,0x206
   140002b98:	mov    WORD PTR [rbp+0x570],bx
   140002b9f:	mov    r8d,edi
   140002ba2:	lea    rcx,[rbp+0x572]
   140002ba9:	xor    edx,edx
   140002bab:	call   0x1400042b4
   140002bb0:	mov    r8d,edi
   140002bb3:	mov    WORD PTR [rbp+0x250],bx
   140002bba:	xor    edx,edx
   140002bbc:	lea    rcx,[rbp+0x252]
   140002bc3:	call   0x1400042b4
   140002bc8:	xor    r9d,r9d
   140002bcb:	lea    edx,[rbx+0x1]
   140002bce:	xor    r8d,r8d
   140002bd1:	xor    ecx,ecx
   140002bd3:	call   QWORD PTR [rip+0x24cf]        # 0x1400050a8
   140002bd9:	test   eax,eax
   140002bdb:	jne    0x140002ca5
   140002be1:	mov    edi,0x80004005
   140002be6:	mov    rcx,QWORD PTR [rip+0x4a93]        # 0x140007680
   140002bed:	lea    r8,[rbp+0x250]
   140002bf4:	mov    r9d,0x104
   140002bfa:	mov    edx,0x61b
   140002bff:	call   QWORD PTR [rip+0x261b]        # 0x140005220
   140002c05:	mov    rcx,QWORD PTR [rip+0x4a74]        # 0x140007680
   140002c0c:	lea    r8,[rbp+0x570]
   140002c13:	mov    r9d,0x104
   140002c19:	mov    edx,0x61c
   140002c1e:	call   QWORD PTR [rip+0x25fc]        # 0x140005220
   140002c24:	mov    r9d,0x10
   140002c2a:	lea    r8,[rbp+0x250]
   140002c31:	lea    rdx,[rbp+0x570]
   140002c38:	xor    ecx,ecx
   140002c3a:	call   QWORD PTR [rip+0x2590]        # 0x1400051d0
   140002c40:	test   rsi,rsi
   140002c43:	je     0x140002c4e
   140002c45:	mov    rcx,rsi
   140002c48:	call   QWORD PTR [rip+0x2412]        # 0x140005060
   140002c4e:	mov    rcx,QWORD PTR [rip+0x4a2b]        # 0x140007680
   140002c55:	test   rcx,rcx
   140002c58:	je     0x140002c67
   140002c5a:	call   QWORD PTR [rip+0x2400]        # 0x140005060
   140002c60:	mov    QWORD PTR [rip+0x4a19],rbx        # 0x140007680
   140002c67:	test   r15d,r15d
   140002c6a:	je     0x140002c72
   140002c6c:	call   QWORD PTR [rip+0x26ce]        # 0x140005340
   140002c72:	test   edi,edi
   140002c74:	sets   bl
   140002c77:	mov    eax,ebx
   140002c79:	mov    rcx,QWORD PTR [rbp+0x780]
   140002c80:	xor    rcx,rsp
   140002c83:	call   0x140003c70
   140002c88:	lea    r11,[rsp+0x890]
   140002c90:	mov    rbx,QWORD PTR [r11+0x20]
   140002c94:	mov    rsi,QWORD PTR [r11+0x28]
   140002c98:	mov    rdi,QWORD PTR [r11+0x38]
   140002c9c:	mov    rsp,r11
   140002c9f:	pop    r15
   140002ca1:	pop    r14
   140002ca3:	pop    rbp
   140002ca4:	ret    
   140002ca5:	call   QWORD PTR [rip+0x23bd]        # 0x140005068
   140002cab:	mov    rcx,rax
   140002cae:	call   0x14000370c
   140002cb3:	mov    edx,0x2
   140002cb8:	xor    ecx,ecx
   140002cba:	call   QWORD PTR [rip+0x2678]        # 0x140005338
   140002cc0:	mov    edi,eax
   140002cc2:	test   eax,eax
   140002cc4:	js     0x140002be6
   140002cca:	lea    rcx,[rbp+0x140]
   140002cd1:	mov    r15d,0x1
   140002cd7:	mov    rdi,rbx
   140002cda:	call   0x140002750
   140002cdf:	test   eax,eax
   140002ce1:	je     0x140002d1c
   140002ce3:	lea    rcx,[rbp+0x140]
   140002cea:	call   QWORD PTR [rip+0x24a8]        # 0x140005198
   140002cf0:	test   eax,eax
   140002cf2:	je     0x140002d1c
   140002cf4:	lea    rdx,[rip+0x27ed]        # 0x1400054e8
   140002cfb:	lea    rcx,[rbp+0x140]
   140002d02:	call   QWORD PTR [rip+0x2470]        # 0x140005178
   140002d08:	test   eax,eax
   140002d0a:	je     0x140002d1c
   140002d0c:	lea    rcx,[rbp+0x140]
   140002d13:	call   QWORD PTR [rip+0x233f]        # 0x140005058
   140002d19:	mov    rdi,rax
   140002d1c:	mov    QWORD PTR [rip+0x495d],rdi        # 0x140007680
   140002d23:	test   rdi,rdi
   140002d26:	je     0x140002be1
   140002d2c:	test   r14,r14
   140002d2f:	je     0x140002d48
   140002d31:	xor    r9d,r9d
   140002d34:	lea    rdx,[rip+0x2889]        # 0x1400055c4
   140002d3b:	xor    r8d,r8d
   140002d3e:	mov    rcx,r14
   140002d41:	call   0x1400028fc
   140002d46:	jmp    0x140002d4a
   140002d48:	mov    eax,ebx
   140002d4a:	mov    DWORD PTR [rip+0x4900],eax        # 0x140007650
   140002d50:	test   r14,r14
   140002d53:	je     0x140002d88
   140002d55:	mov    r9d,0x104
   140002d5b:	lea    r8,[rbp+0x34]
   140002d5f:	lea    rdx,[rip+0x2866]        # 0x1400055cc
   140002d66:	mov    rcx,r14
   140002d69:	call   0x1400028fc
   140002d6e:	mov    r9d,0x104
   140002d74:	lea    r8,[rsp+0x30]
   140002d79:	lea    rdx,[rip+0x283c]        # 0x1400055bc
   140002d80:	mov    rcx,r14
   140002d83:	call   0x1400028fc
   140002d88:	lea    rcx,[rbp+0x460]
   140002d8f:	call   0x140002750
   140002d94:	test   eax,eax
   140002d96:	je     0x140002da8
   140002d98:	lea    rcx,[rbp+0x460]
   140002d9f:	call   QWORD PTR [rip+0x22b3]        # 0x140005058
   140002da5:	mov    rsi,rax
   140002da8:	test   rsi,rsi
   140002dab:	je     0x140002be1
   140002db1:	lea    rdx,[rip+0x2740]        # 0x1400054f8
   140002db8:	mov    rcx,rsi
   140002dbb:	call   QWORD PTR [rip+0x228f]        # 0x140005050
   140002dc1:	mov    QWORD PTR [rip+0x48c0],rax        # 0x140007688
   140002dc8:	test   rax,rax
   140002dcb:	je     0x140002be1
   140002dd1:	mov    eax,DWORD PTR [rip+0x4879]        # 0x140007650
   140002dd7:	lea    rcx,[rip+0xffffffffffffe5c2]        # 0x1400013a0
   140002dde:	test   eax,eax
   140002de0:	lea    r9,[rip+0xffffffffffffedc9]        # 0x140001bb0
   140002de7:	cmovne r9,rcx
   140002deb:	mov    rcx,QWORD PTR [rip+0x488e]        # 0x140007680
   140002df2:	neg    eax
   140002df4:	lea    rax,[rsp+0x30]
   140002df9:	sbb    rdx,rdx
   140002dfc:	mov    QWORD PTR [rsp+0x20],rax
   140002e01:	and    edx,0x4
   140002e04:	xor    r8d,r8d
   140002e07:	add    rdx,0x44d
   140002e0e:	call   QWORD PTR [rip+0x23dc]        # 0x1400051f0
   140002e14:	cmp    eax,0xffffffff
   140002e17:	jne    0x140002e23
   140002e19:	mov    edi,0x8000ffff
   140002e1e:	jmp    0x140002be6
   140002e23:	mov    edi,ebx
   140002e25:	jmp    0x140002c40
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    QWORD PTR [rsp+0x10],rbx
   140002e35:	mov    QWORD PTR [rsp+0x18],rbp
   140002e3a:	push   rsi
   140002e3b:	push   rdi
   140002e3c:	push   r14
   140002e3e:	sub    rsp,0x180
   140002e45:	mov    rax,QWORD PTR [rip+0x41bc]        # 0x140007008
   140002e4c:	xor    rax,rsp
   140002e4f:	mov    QWORD PTR [rsp+0x170],rax
   140002e57:	mov    edi,edx
   140002e59:	mov    ebp,0x10
   140002e5e:	mov    edx,ebp
   140002e60:	mov    r14,r9
   140002e63:	mov    rbx,r8
   140002e66:	mov    rsi,rcx
   140002e69:	call   QWORD PTR [rip+0x2379]        # 0x1400051e8
   140002e6f:	lea    edx,[rbp-0xe]
   140002e72:	sub    edi,edx
   140002e74:	je     0x140002fac
   140002e7a:	sub    edi,0xe
   140002e7d:	je     0x140002f9c
   140002e83:	sub    edi,0x100
   140002e89:	je     0x140002f05
   140002e8b:	cmp    edi,0x1
   140002e8e:	jne    0x140002ec5
   140002e90:	sub    rbx,0x1
   140002e94:	je     0x140002ecc
   140002e96:	sub    rbx,0x1
   140002e9a:	je     0x140002ead
   140002e9c:	sub    rbx,0x3
   140002ea0:	je     0x140002eb6
   140002ea2:	cmp    rbx,0x3
   140002ea6:	je     0x140002eb4
   140002ea8:	jmp    0x140002fbd
   140002ead:	mov    DWORD PTR [rax+0x10],0x1
   140002eb4:	mov    edx,ebp
   140002eb6:	xor    r9d,r9d
   140002eb9:	xor    r8d,r8d
   140002ebc:	mov    rcx,rsi
   140002ebf:	call   QWORD PTR [rip+0x233b]        # 0x140005200
   140002ec5:	xor    eax,eax
   140002ec7:	jmp    0x140002fc2
   140002ecc:	mov    edi,0x467
   140002ed1:	mov    rcx,rsi
   140002ed4:	mov    edx,edi
   140002ed6:	call   QWORD PTR [rip+0x22dc]        # 0x1400051b8
   140002edc:	xor    ebx,ebx
   140002ede:	mov    edx,edi
   140002ee0:	mov    ecx,ebx
   140002ee2:	cmp    eax,0x1
   140002ee5:	sete   cl
   140002ee8:	mov    DWORD PTR [rip+0x413e],ecx        # 0x14000702c
   140002eee:	mov    rcx,rsi
   140002ef1:	call   QWORD PTR [rip+0x22c1]        # 0x1400051b8
   140002ef7:	cmp    eax,0x1
   140002efa:	sete   bl
   140002efd:	mov    DWORD PTR [rip+0x4121],ebx        # 0x140007024
   140002f03:	jmp    0x140002eb4
   140002f05:	mov    r8,r14
   140002f08:	mov    edx,ebp
   140002f0a:	mov    rcx,rsi
   140002f0d:	call   QWORD PTR [rip+0x231d]        # 0x140005230
   140002f13:	mov    edx,DWORD PTR [r14+0x14]
   140002f17:	lea    r8,[rsp+0x60]
   140002f1c:	mov    rcx,QWORD PTR [rip+0x475d]        # 0x140007680
   140002f23:	mov    r9d,0x105
   140002f29:	call   QWORD PTR [rip+0x2319]        # 0x140005248
   140002f2f:	xor    ebx,ebx
   140002f31:	test   eax,eax
   140002f33:	je     0x140002fbd
   140002f39:	mov    rax,QWORD PTR [r14]
   140002f3c:	lea    rdx,[rsp+0x60]
   140002f41:	mov    QWORD PTR [rsp+0x48],rax
   140002f46:	xor    r9d,r9d
   140002f49:	mov    rax,QWORD PTR [r14+0x8]
   140002f4d:	xor    r8d,r8d
   140002f50:	mov    QWORD PTR [rsp+0x50],rax
   140002f55:	mov    ecx,0x2500
   140002f5a:	lea    rax,[rsp+0x48]
   140002f5f:	mov    QWORD PTR [rsp+0x30],rax
   140002f64:	lea    rax,[rsp+0x40]
   140002f69:	mov    DWORD PTR [rsp+0x28],ebx
   140002f6d:	mov    QWORD PTR [rsp+0x20],rax
   140002f72:	call   QWORD PTR [rip+0x2100]        # 0x140005078
   140002f78:	test   eax,eax
   140002f7a:	je     0x140002fbd
   140002f7c:	mov    r8,QWORD PTR [rsp+0x40]
   140002f81:	mov    edx,0x468
   140002f86:	mov    rcx,rsi
   140002f89:	call   QWORD PTR [rip+0x2251]        # 0x1400051e0
   140002f8f:	mov    rcx,QWORD PTR [rsp+0x40]
   140002f94:	call   QWORD PTR [rip+0x2116]        # 0x1400050b0
   140002f9a:	jmp    0x140002fbd
   140002f9c:	xor    edx,edx
   140002f9e:	mov    rcx,rsi
   140002fa1:	call   QWORD PTR [rip+0x2269]        # 0x140005210
   140002fa7:	jmp    0x140002ec5
   140002fac:	xor    r9d,r9d
   140002faf:	xor    r8d,r8d
   140002fb2:	mov    edx,ebp
   140002fb4:	mov    rcx,rsi
   140002fb7:	call   QWORD PTR [rip+0x2243]        # 0x140005200
   140002fbd:	mov    eax,0x1
   140002fc2:	mov    rcx,QWORD PTR [rsp+0x170]
   140002fca:	xor    rcx,rsp
   140002fcd:	call   0x140003c70
   140002fd2:	lea    r11,[rsp+0x180]
   140002fda:	mov    rbx,QWORD PTR [r11+0x28]
   140002fde:	mov    rbp,QWORD PTR [r11+0x30]
   140002fe2:	mov    rsp,r11
   140002fe5:	pop    r14
   140002fe7:	pop    rdi
   140002fe8:	pop    rsi
   140002fe9:	ret    
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    rax,rsp
   140002ff3:	mov    QWORD PTR [rax+0x10],rbx
   140002ff7:	mov    QWORD PTR [rax+0x18],rsi
   140002ffb:	mov    QWORD PTR [rax+0x20],rdi
   140002fff:	push   rbp
   140003000:	push   r12
   140003002:	push   r13
   140003004:	push   r14
   140003006:	push   r15
   140003008:	lea    rbp,[rax-0x1e8]
   14000300f:	sub    rsp,0x2c0
   140003016:	mov    rax,QWORD PTR [rip+0x3feb]        # 0x140007008
   14000301d:	xor    rax,rsp
   140003020:	mov    QWORD PTR [rbp+0x1b0],rax
   140003027:	xor    r14d,r14d
   14000302a:	mov    r13,rcx
   14000302d:	mov    esi,r14d
   140003030:	mov    DWORD PTR [rsp+0x60],r14d
   140003035:	mov    r15d,r14d
   140003038:	mov    QWORD PTR [rbp-0x70],r14
   14000303c:	mov    QWORD PTR [rsp+0x78],r14
   140003041:	mov    QWORD PTR [rbp-0x80],r14
   140003045:	mov    DWORD PTR [rsp+0x64],r14d
   14000304a:	call   0x14000342c
   14000304f:	lea    rax,[rbp-0x68]
   140003053:	mov    QWORD PTR [rbp-0x68],r14
   140003057:	mov    rdi,0xffffffff80000002
   14000305e:	mov    QWORD PTR [rsp+0x20],rax
   140003063:	mov    rcx,rdi
   140003066:	lea    rdx,[rip+0x2493]        # 0x140005500
   14000306d:	mov    r9d,0x20019
   140003073:	xor    r8d,r8d
   140003076:	mov    ebx,r14d
   140003079:	call   QWORD PTR [rip+0x1f89]        # 0x140005008
   14000307f:	lea    r12d,[r14+0x1]
   140003083:	test   eax,eax
   140003085:	jne    0x1400030d8
   140003087:	mov    rcx,QWORD PTR [rbp-0x68]
   14000308b:	lea    rax,[rbp-0x78]
   14000308f:	mov    QWORD PTR [rsp+0x28],rax
   140003094:	lea    r9,[rsp+0x70]
   140003099:	lea    rax,[rsp+0x68]
   14000309e:	mov    DWORD PTR [rsp+0x70],r14d
   1400030a3:	xor    r8d,r8d
   1400030a6:	mov    QWORD PTR [rsp+0x20],rax
   1400030ab:	lea    rdx,[rip+0x247e]        # 0x140005530
   1400030b2:	mov    DWORD PTR [rbp-0x78],0x4
   1400030b9:	mov    DWORD PTR [rsp+0x68],r14d
   1400030be:	call   QWORD PTR [rip+0x1f6c]        # 0x140005030
   1400030c4:	test   eax,eax
   1400030c6:	jne    0x1400030d8
   1400030c8:	cmp    DWORD PTR [rsp+0x70],0x4
   1400030cd:	jne    0x1400030d8
   1400030cf:	cmp    DWORD PTR [rsp+0x68],r14d
   1400030d4:	cmove  ebx,r12d
   1400030d8:	mov    rcx,QWORD PTR [rbp-0x68]
   1400030dc:	test   rcx,rcx
   1400030df:	je     0x1400030e7
   1400030e1:	call   QWORD PTR [rip+0x1f41]        # 0x140005028
   1400030e7:	lea    rax,[rbp-0x70]
   1400030eb:	mov    r9d,0x20019
   1400030f1:	xor    r8d,r8d
   1400030f4:	mov    QWORD PTR [rsp+0x20],rax
   1400030f9:	lea    rdx,[rip+0x2380]        # 0x140005480
   140003100:	mov    rcx,rdi
   140003103:	call   QWORD PTR [rip+0x1eff]        # 0x140005008
   140003109:	test   eax,eax
   14000310b:	jne    0x140003187
   14000310d:	cmp    DWORD PTR [rip+0x453c],r14d        # 0x140007650
   140003114:	lea    rax,[rip+0x2421]        # 0x14000553c
   14000311b:	mov    rcx,QWORD PTR [rbp-0x70]
   14000311f:	lea    rdx,[rip+0x241e]        # 0x140005544
   140003126:	cmovne rdx,rax
   14000312a:	mov    r9d,0x20019
   140003130:	lea    rax,[rsp+0x78]
   140003135:	xor    r8d,r8d
   140003138:	mov    QWORD PTR [rsp+0x20],rax
   14000313d:	call   QWORD PTR [rip+0x1ec5]        # 0x140005008
   140003143:	test   eax,eax
   140003145:	jne    0x140003187
   140003147:	mov    rcx,QWORD PTR [rsp+0x78]
   14000314c:	lea    rax,[rsp+0x64]
   140003151:	mov    QWORD PTR [rsp+0x58],r14
   140003156:	xor    r9d,r9d
   140003159:	mov    QWORD PTR [rsp+0x50],r14
   14000315e:	xor    r8d,r8d
   140003161:	mov    QWORD PTR [rsp+0x48],r14
   140003166:	xor    edx,edx
   140003168:	mov    QWORD PTR [rsp+0x40],r14
   14000316d:	mov    QWORD PTR [rsp+0x38],r14
   140003172:	mov    QWORD PTR [rsp+0x30],r14
   140003177:	mov    QWORD PTR [rsp+0x28],r14
   14000317c:	mov    QWORD PTR [rsp+0x20],rax
   140003181:	call   QWORD PTR [rip+0x1e89]        # 0x140005010
   140003187:	mov    eax,DWORD PTR [rsp+0x64]
   14000318b:	mov    ecx,0x40
   140003190:	lea    rdx,[rax+rax*4]
   140003194:	shl    rdx,0x3
   140003198:	call   QWORD PTR [rip+0x1f02]        # 0x1400050a0
   14000319e:	mov    QWORD PTR [rip+0x4453],rax        # 0x1400075f8
   1400031a5:	test   rax,rax
   1400031a8:	je     0x1400033ce
   1400031ae:	mov    edi,r14d
   1400031b1:	mov    DWORD PTR [rsp+0x6c],0x104
   1400031b9:	cmp    DWORD PTR [rsp+0x64],r12d
   1400031be:	jb     0x1400033d4
   1400031c4:	movsxd r12,ebx
   1400031c7:	mov    rcx,QWORD PTR [rsp+0x78]
   1400031cc:	lea    r9,[rsp+0x6c]
   1400031d1:	mov    QWORD PTR [rsp+0x38],r14
   1400031d6:	lea    r8,[rbp-0x60]
   1400031da:	mov    QWORD PTR [rsp+0x30],r14
   1400031df:	mov    edx,edi
   1400031e1:	mov    QWORD PTR [rsp+0x28],r14
   1400031e6:	mov    QWORD PTR [rsp+0x20],r14
   1400031eb:	call   QWORD PTR [rip+0x1e2f]        # 0x140005020
   1400031f1:	test   eax,eax
   1400031f3:	jne    0x1400033d4
   1400031f9:	test   r12,r12
   1400031fc:	je     0x140003217
   1400031fe:	lea    rdx,[rip+0x234b]        # 0x140005550
   140003205:	lea    rcx,[rbp-0x60]
   140003209:	call   QWORD PTR [rip+0x1f71]        # 0x140005180
   14000320f:	test   eax,eax
   140003211:	je     0x1400033b8
   140003217:	lea    rax,[rbp-0x60]
   14000321b:	or     rdx,0xffffffffffffffff
   14000321f:	inc    rdx
   140003222:	cmp    WORD PTR [rax+rdx*2],r14w
   140003227:	jne    0x14000321f
   140003229:	lea    rdx,[rdx*2+0x2]
   140003231:	mov    ecx,0x40
   140003236:	call   QWORD PTR [rip+0x1e64]        # 0x1400050a0
   14000323c:	mov    r14d,esi
   14000323f:	xor    ebx,ebx
   140003241:	mov    rcx,rax
   140003244:	mov    rax,QWORD PTR [rip+0x43ad]        # 0x1400075f8
   14000324b:	lea    rsi,[r14+r14*4]
   14000324f:	mov    QWORD PTR [rax+rsi*8],rcx
   140003253:	test   rcx,rcx
   140003256:	je     0x1400033b1
   14000325c:	lea    rax,[rbp-0x60]
   140003260:	or     rdx,0xffffffffffffffff
   140003264:	inc    rdx
   140003267:	cmp    WORD PTR [rax+rdx*2],bx
   14000326b:	jne    0x140003264
   14000326d:	inc    rdx
   140003270:	lea    r8,[rbp-0x60]
   140003274:	call   0x140001130
   140003279:	mov    rcx,QWORD PTR [rsp+0x78]
   14000327e:	lea    rax,[rbp-0x80]
   140003282:	mov    r9d,0x20019
   140003288:	mov    QWORD PTR [rsp+0x20],rax
   14000328d:	xor    r8d,r8d
   140003290:	lea    rdx,[rbp-0x60]
   140003294:	call   QWORD PTR [rip+0x1d7e]        # 0x140005018
   14000329a:	test   eax,eax
   14000329c:	jne    0x1400033b1
   1400032a2:	mov    r8,QWORD PTR [rip+0x434f]        # 0x1400075f8
   1400032a9:	lea    rdx,[rip+0x2328]        # 0x1400055d8
   1400032b0:	mov    rcx,QWORD PTR [rbp-0x80]
   1400032b4:	add    r8,0x8
   1400032b8:	lea    r8,[r8+rsi*8]
   1400032bc:	call   0x1400023f0
   1400032c1:	mov    r8,QWORD PTR [rip+0x4330]        # 0x1400075f8
   1400032c8:	lea    rdx,[rip+0x2321]        # 0x1400055f0
   1400032cf:	mov    rcx,QWORD PTR [rbp-0x80]
   1400032d3:	add    r8,0x10
   1400032d7:	lea    r8,[r8+rsi*8]
   1400032db:	call   0x140002290
   1400032e0:	mov    r8,QWORD PTR [rip+0x4311]        # 0x1400075f8
   1400032e7:	lea    rdx,[rip+0x2306]        # 0x1400055f4
   1400032ee:	mov    rcx,QWORD PTR [rbp-0x80]
   1400032f2:	add    r8,0x18
   1400032f6:	lea    r8,[r8+rsi*8]
   1400032fa:	call   0x140002290
   1400032ff:	mov    rcx,QWORD PTR [rbp-0x80]
   140003303:	call   QWORD PTR [rip+0x1d1f]        # 0x140005028
   140003309:	mov    rbx,QWORD PTR [rip+0x42e8]        # 0x1400075f8
   140003310:	xor    eax,eax
   140003312:	add    rbx,0x8
   140003316:	lea    rbx,[rbx+rsi*8]
   14000331a:	cmp    QWORD PTR [rbx],rax
   14000331d:	jne    0x14000337d
   14000331f:	lea    rcx,[rbp-0x60]
   140003323:	or     rdx,0xffffffffffffffff
   140003327:	inc    rdx
   14000332a:	cmp    WORD PTR [rcx+rdx*2],ax
   14000332e:	jne    0x140003327
   140003330:	lea    rdx,[rdx*2+0x2]
   140003338:	mov    ecx,0x40
   14000333d:	call   QWORD PTR [rip+0x1d5d]        # 0x1400050a0
   140003343:	mov    rbx,QWORD PTR [rip+0x42ae]        # 0x1400075f8
   14000334a:	mov    rcx,rax
   14000334d:	add    rbx,0x8
   140003351:	lea    rbx,[rbx+rsi*8]
   140003355:	mov    QWORD PTR [rbx],rax
   140003358:	xor    eax,eax
   14000335a:	test   rcx,rcx
   14000335d:	je     0x14000337d
   14000335f:	lea    r8,[rbp-0x60]
   140003363:	or     rdx,0xffffffffffffffff
   140003367:	inc    rdx
   14000336a:	cmp    WORD PTR [r8+rdx*2],ax
   14000336f:	jne    0x140003367
   140003371:	inc    rdx
   140003374:	lea    r8,[rbp-0x60]
   140003378:	call   0x140001130
   14000337d:	mov    r9,QWORD PTR [rbx]
   140003380:	xor    r8d,r8d
   140003383:	mov    edx,0x180
   140003388:	mov    rcx,r13
   14000338b:	call   QWORD PTR [rip+0x1e37]        # 0x1400051c8
   140003391:	mov    r9,r14
   140003394:	mov    edx,0x19a
   140003399:	mov    r8,rax
   14000339c:	mov    rcx,r13
   14000339f:	call   QWORD PTR [rip+0x1e23]        # 0x1400051c8
   1400033a5:	mov    esi,DWORD PTR [rsp+0x60]
   1400033a9:	inc    esi
   1400033ab:	mov    DWORD PTR [rsp+0x60],esi
   1400033af:	jmp    0x1400033b5
   1400033b1:	mov    esi,DWORD PTR [rsp+0x60]
   1400033b5:	xor    r14d,r14d
   1400033b8:	inc    edi
   1400033ba:	mov    DWORD PTR [rsp+0x6c],0x104
   1400033c2:	cmp    edi,DWORD PTR [rsp+0x64]
   1400033c6:	jb     0x1400031c7
   1400033cc:	jmp    0x1400033d4
   1400033ce:	mov    r15d,0x8007000e
   1400033d4:	mov    rcx,QWORD PTR [rsp+0x78]
   1400033d9:	test   rcx,rcx
   1400033dc:	je     0x1400033e4
   1400033de:	call   QWORD PTR [rip+0x1c44]        # 0x140005028
   1400033e4:	mov    rcx,QWORD PTR [rbp-0x70]
   1400033e8:	test   rcx,rcx
   1400033eb:	je     0x1400033f3
   1400033ed:	call   QWORD PTR [rip+0x1c35]        # 0x140005028
   1400033f3:	mov    eax,r15d
   1400033f6:	mov    rcx,QWORD PTR [rbp+0x1b0]
   1400033fd:	xor    rcx,rsp
   140003400:	call   0x140003c70
   140003405:	lea    r11,[rsp+0x2c0]
   14000340d:	mov    rbx,QWORD PTR [r11+0x38]
   140003411:	mov    rsi,QWORD PTR [r11+0x40]
   140003415:	mov    rdi,QWORD PTR [r11+0x48]
   140003419:	mov    rsp,r11
   14000341c:	pop    r15
   14000341e:	pop    r14
   140003420:	pop    r13
   140003422:	pop    r12
   140003424:	pop    rbp
   140003425:	ret    
   140003426:	int3   
   140003427:	int3   
   140003428:	int3   
   140003429:	int3   
   14000342a:	int3   
   14000342b:	int3   
   14000342c:	test   rcx,rcx
   14000342f:	je     0x1400034eb
   140003435:	mov    QWORD PTR [rsp+0x8],rbx
   14000343a:	mov    QWORD PTR [rsp+0x10],rsi
   14000343f:	push   rdi
   140003440:	sub    rsp,0x20
   140003444:	mov    rbx,QWORD PTR [rip+0x41ad]        # 0x1400075f8
   14000344b:	xor    r9d,r9d
   14000344e:	xor    r8d,r8d
   140003451:	mov    edx,0x18b
   140003456:	mov    rdi,rcx
   140003459:	call   QWORD PTR [rip+0x1da1]        # 0x140005200
   14000345f:	test   rbx,rbx
   140003462:	je     0x1400034dc
   140003464:	test   eax,eax
   140003466:	je     0x1400034c7
   140003468:	add    rbx,0x10
   14000346c:	mov    esi,eax
   14000346e:	mov    rcx,QWORD PTR [rbx-0x10]
   140003472:	test   rcx,rcx
   140003475:	je     0x14000347d
   140003477:	call   QWORD PTR [rip+0x1c33]        # 0x1400050b0
   14000347d:	mov    rcx,QWORD PTR [rbx-0x8]
   140003481:	test   rcx,rcx
   140003484:	je     0x14000348c
   140003486:	call   QWORD PTR [rip+0x1c24]        # 0x1400050b0
   14000348c:	mov    rcx,QWORD PTR [rbx]
   14000348f:	test   rcx,rcx
   140003492:	je     0x14000349a
   140003494:	call   QWORD PTR [rip+0x1c16]        # 0x1400050b0
   14000349a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000349e:	test   rcx,rcx
   1400034a1:	je     0x1400034a9
   1400034a3:	call   QWORD PTR [rip+0x1c07]        # 0x1400050b0
   1400034a9:	add    rbx,0x28
   1400034ad:	sub    rsi,0x1
   1400034b1:	jne    0x14000346e
   1400034b3:	xor    r9d,r9d
   1400034b6:	xor    r8d,r8d
   1400034b9:	mov    edx,0x184
   1400034be:	mov    rcx,rdi
   1400034c1:	call   QWORD PTR [rip+0x1d39]        # 0x140005200
   1400034c7:	mov    rcx,QWORD PTR [rip+0x412a]        # 0x1400075f8
   1400034ce:	call   QWORD PTR [rip+0x1bdc]        # 0x1400050b0
   1400034d4:	and    QWORD PTR [rip+0x411c],0x0        # 0x1400075f8
   1400034dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400034e1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400034e6:	add    rsp,0x20
   1400034ea:	pop    rdi
   1400034eb:	ret    
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	int3   
   1400034f1:	int3   
   1400034f2:	int3   
   1400034f3:	int3   
   1400034f4:	mov    rax,rsp
   1400034f7:	mov    QWORD PTR [rax+0x8],rbx
   1400034fb:	mov    QWORD PTR [rax+0x10],rsi
   1400034ff:	mov    QWORD PTR [rax+0x18],rdi
   140003503:	push   rbp
   140003504:	lea    rbp,[rax-0x178]
   14000350b:	sub    rsp,0x270
   140003512:	mov    rax,QWORD PTR [rip+0x3aef]        # 0x140007008
   140003519:	xor    rax,rsp
   14000351c:	mov    QWORD PTR [rbp+0x160],rax
   140003523:	xor    esi,esi
   140003525:	lea    rcx,[rsp+0x52]
   14000352a:	xor    edx,edx
   14000352c:	mov    WORD PTR [rsp+0x50],si
   140003531:	mov    r8d,0x206
   140003537:	call   0x1400042b4
   14000353c:	lea    rax,[rip+0x2015]        # 0x140005558
   140003543:	mov    DWORD PTR [rsp+0x38],0x2
   14000354b:	lea    r9,[rsp+0x38]
   140003550:	mov    QWORD PTR [rsp+0x40],rax
   140003555:	mov    edx,0x38f
   14000355a:	lea    r8d,[rsi+0x1]
   14000355e:	xor    ecx,ecx
   140003560:	call   QWORD PTR [rip+0x1db2]        # 0x140005318
   140003566:	mov    ecx,0x104
   14000356b:	lea    r9,[rip+0x201e]        # 0x140005590
   140003572:	lea    rax,[rsp+0x50]
   140003577:	mov    r8d,ecx
   14000357a:	sub    r9,rax
   14000357d:	lea    rdx,[rsp+0x50]
   140003582:	mov    ebx,esi
   140003584:	lea    rax,[r8+0x7ffffefa]
   14000358b:	test   rax,rax
   14000358e:	je     0x1400035a7
   140003590:	movzx  eax,WORD PTR [r9+rdx*1]
   140003595:	test   ax,ax
   140003598:	je     0x1400035a7
   14000359a:	mov    WORD PTR [rdx],ax
   14000359d:	add    rdx,0x2
   1400035a1:	sub    r8,0x1
   1400035a5:	jne    0x140003584
   1400035a7:	mov    r10d,0x8007007a
   1400035ad:	test   r8,r8
   1400035b0:	jne    0x1400035b9
   1400035b2:	sub    rdx,0x2
   1400035b6:	mov    ebx,r10d
   1400035b9:	mov    WORD PTR [rdx],si
   1400035bc:	test   ebx,ebx
   1400035be:	js     0x1400036dc
   1400035c4:	mov    rax,rcx
   1400035c7:	lea    rdx,[rsp+0x50]
   1400035cc:	cmp    WORD PTR [rdx],si
   1400035cf:	je     0x1400035db
   1400035d1:	add    rdx,0x2
   1400035d5:	sub    rax,0x1
   1400035d9:	jne    0x1400035cc
   1400035db:	test   rax,rax
   1400035de:	je     0x1400036d7
   1400035e4:	mov    rdx,rcx
   1400035e7:	mov    ebx,esi
   1400035e9:	sub    rdx,rax
   1400035ec:	lea    rax,[rsp+0x50]
   1400035f1:	lea    rax,[rax+rdx*2]
   1400035f5:	sub    rcx,rdx
   1400035f8:	je     0x140003634
   1400035fa:	lea    r8,[rdx+0x7ffffefa]
   140003601:	add    r8,rcx
   140003604:	lea    rdx,[rip+0x1e25]        # 0x140005430
   14000360b:	sub    rdx,rax
   14000360e:	test   r8,r8
   140003611:	je     0x14000362f
   140003613:	movzx  r9d,WORD PTR [rdx+rax*1]
   140003618:	test   r9w,r9w
   14000361c:	je     0x14000362f
   14000361e:	mov    WORD PTR [rax],r9w
   140003622:	dec    r8
   140003625:	add    rax,0x2
   140003629:	sub    rcx,0x1
   14000362d:	jne    0x14000360e
   14000362f:	test   rcx,rcx
   140003632:	jne    0x14000363b
   140003634:	sub    rax,0x2
   140003638:	mov    ebx,r10d
   14000363b:	mov    WORD PTR [rax],si
   14000363e:	test   ebx,ebx
   140003640:	js     0x1400036dc
   140003646:	lea    rcx,[rsp+0x50]
   14000364b:	mov    ebx,0x8007000e
   140003650:	call   QWORD PTR [rip+0x1b02]        # 0x140005158
   140003656:	mov    rdi,rax
   140003659:	test   rax,rax
   14000365c:	je     0x1400036dc
   14000365e:	mov    QWORD PTR [rsp+0x28],rsi
   140003663:	lea    r8,[rip+0x196]        # 0x140003800
   14000366a:	mov    r9,rax
   14000366d:	mov    DWORD PTR [rsp+0x20],esi
   140003671:	xor    edx,edx
   140003673:	xor    ecx,ecx
   140003675:	call   QWORD PTR [rip+0x1a55]        # 0x1400050d0
   14000367b:	mov    QWORD PTR [rsp+0x38],rax
   140003680:	test   rax,rax
   140003683:	jne    0x1400036a4
   140003685:	call   QWORD PTR [rip+0x1a35]        # 0x1400050c0
   14000368b:	movzx  ebx,ax
   14000368e:	mov    rcx,rdi
   140003691:	or     ebx,0x80070000
   140003697:	test   eax,eax
   140003699:	cmovle ebx,eax
   14000369c:	call   QWORD PTR [rip+0x1aae]        # 0x140005150
   1400036a2:	jmp    0x1400036dc
   1400036a4:	lea    rax,[rsp+0x30]
   1400036a9:	mov    DWORD PTR [rsp+0x30],esi
   1400036ad:	lea    r9,[rsp+0x38]
   1400036b2:	mov    QWORD PTR [rsp+0x20],rax
   1400036b7:	mov    r8d,0x1
   1400036bd:	or     edx,0xffffffff
   1400036c0:	xor    ecx,ecx
   1400036c2:	call   QWORD PTR [rip+0x1c68]        # 0x140005330
   1400036c8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400036cd:	mov    ebx,eax
   1400036cf:	call   QWORD PTR [rip+0x19f3]        # 0x1400050c8
   1400036d5:	jmp    0x1400036dc
   1400036d7:	mov    ebx,0x80070057
   1400036dc:	mov    eax,ebx
   1400036de:	mov    rcx,QWORD PTR [rbp+0x160]
   1400036e5:	xor    rcx,rsp
   1400036e8:	call   0x140003c70
   1400036ed:	lea    r11,[rsp+0x270]
   1400036f5:	mov    rbx,QWORD PTR [r11+0x10]
   1400036f9:	mov    rsi,QWORD PTR [r11+0x18]
   1400036fd:	mov    rdi,QWORD PTR [r11+0x20]
   140003701:	mov    rsp,r11
   140003704:	pop    rbp
   140003705:	ret    
   140003706:	int3   
   140003707:	int3   
   140003708:	int3   
   140003709:	int3   
   14000370a:	int3   
   14000370b:	int3   
   14000370c:	mov    rax,rsp
   14000370f:	mov    QWORD PTR [rax+0x8],rbx
   140003713:	mov    QWORD PTR [rax+0x18],rbp
   140003717:	push   rdi
   140003718:	push   r14
   14000371a:	push   r15
   14000371c:	sub    rsp,0x20
   140003720:	xor    ebp,ebp
   140003722:	lea    rdx,[rax+0x10]
   140003726:	mov    DWORD PTR [rax+0x10],ebp
   140003729:	mov    r14,rcx
   14000372c:	call   QWORD PTR [rip+0x1a36]        # 0x140005168
   140003732:	test   rax,rax
   140003735:	je     0x1400037dd
   14000373b:	mov    rdx,QWORD PTR [rax]
   14000373e:	mov    edi,ebp
   140003740:	mov    r15d,0x7fffffff
   140003746:	test   rdx,rdx
   140003749:	je     0x14000376c
   14000374b:	mov    ecx,r15d
   14000374e:	mov    ebx,ebp
   140003750:	cmp    WORD PTR [rdx],bp
   140003753:	je     0x14000375f
   140003755:	add    rdx,0x2
   140003759:	sub    rcx,0x1
   14000375d:	jne    0x140003750
   14000375f:	test   rcx,rcx
   140003762:	je     0x14000376c
   140003764:	mov    rdi,r15
   140003767:	sub    rdi,rcx
   14000376a:	jmp    0x140003771
   14000376c:	mov    ebx,0x80070057
   140003771:	test   ebx,ebx
   140003773:	mov    rcx,rax
   140003776:	cmovs  rdi,rbp
   14000377a:	call   QWORD PTR [rip+0x1930]        # 0x1400050b0
   140003780:	inc    rdi
   140003783:	test   ebx,ebx
   140003785:	js     0x1400037e2
   140003787:	mov    rax,rbp
   14000378a:	test   r14,r14
   14000378d:	je     0x1400037ae
   14000378f:	mov    rcx,r15
   140003792:	mov    rax,r14
   140003795:	mov    edx,ebp
   140003797:	cmp    WORD PTR [rax],bp
   14000379a:	je     0x1400037a6
   14000379c:	add    rax,0x2
   1400037a0:	sub    rcx,0x1
   1400037a4:	jne    0x140003797
   1400037a6:	test   rcx,rcx
   1400037a9:	jne    0x1400037d5
   1400037ab:	mov    rax,rbp
   1400037ae:	mov    edx,0x80070057
   1400037b3:	test   edx,edx
   1400037b5:	lea    rcx,[rip+0x1e40]        # 0x1400055fc
   1400037bc:	cmovs  rax,rbp
   1400037c0:	cmp    rdi,rax
   1400037c3:	jae    0x1400037c9
   1400037c5:	lea    rcx,[r14+rdi*2]
   1400037c9:	xor    edx,edx
   1400037cb:	call   QWORD PTR [rip+0x1907]        # 0x1400050d8
   1400037d1:	mov    ebx,eax
   1400037d3:	jmp    0x1400037e2
   1400037d5:	mov    rax,r15
   1400037d8:	sub    rax,rcx
   1400037db:	jmp    0x1400037b3
   1400037dd:	mov    ebx,0x80004005
   1400037e2:	mov    rbp,QWORD PTR [rsp+0x50]
   1400037e7:	mov    eax,ebx
   1400037e9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400037ee:	add    rsp,0x20
   1400037f2:	pop    r15
   1400037f4:	pop    r14
   1400037f6:	pop    rdi
   1400037f7:	ret    
   1400037f8:	int3   
   1400037f9:	int3   
   1400037fa:	int3   
   1400037fb:	int3   
   1400037fc:	int3   
   1400037fd:	int3   
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	mov    QWORD PTR [rsp+0x10],rbx
   140003805:	mov    QWORD PTR [rsp+0x18],rsi
   14000380a:	push   rdi
   14000380b:	sub    rsp,0x30
   14000380f:	mov    rsi,rcx
   140003812:	test   rcx,rcx
   140003815:	je     0x1400038a2
   14000381b:	and    QWORD PTR [rsp+0x40],0x0
   140003821:	xor    ecx,ecx
   140003823:	call   QWORD PTR [rip+0x1b1f]        # 0x140005348
   140003829:	xor    edx,edx
   14000382b:	lea    rax,[rsp+0x40]
   140003830:	lea    r9,[rip+0x1dd9]        # 0x140005610
   140003837:	mov    QWORD PTR [rsp+0x20],rax
   14000383c:	lea    rcx,[rip+0x1dbd]        # 0x140005600
   140003843:	lea    r8d,[rdx+0x17]
   140003847:	call   QWORD PTR [rip+0x1adb]        # 0x140005328
   14000384d:	test   eax,eax
   14000384f:	js     0x14000386e
   140003851:	mov    rdi,QWORD PTR [rsp+0x40]
   140003856:	mov    rax,QWORD PTR [rdi]
   140003859:	mov    rbx,QWORD PTR [rax+0x18]
   14000385d:	mov    rcx,rbx
   140003860:	call   QWORD PTR [rip+0x1af2]        # 0x140005358
   140003866:	mov    rdx,rsi
   140003869:	mov    rcx,rdi
   14000386c:	call   rbx
   14000386e:	mov    rdi,QWORD PTR [rsp+0x40]
   140003873:	test   rdi,rdi
   140003876:	je     0x140003893
   140003878:	and    QWORD PTR [rsp+0x40],0x0
   14000387e:	mov    rax,QWORD PTR [rdi]
   140003881:	mov    rbx,QWORD PTR [rax+0x10]
   140003885:	mov    rcx,rbx
   140003888:	call   QWORD PTR [rip+0x1aca]        # 0x140005358
   14000388e:	mov    rcx,rdi
   140003891:	call   rbx
   140003893:	mov    rcx,rsi
   140003896:	call   QWORD PTR [rip+0x18b4]        # 0x140005150
   14000389c:	call   QWORD PTR [rip+0x1a9e]        # 0x140005340
   1400038a2:	mov    rbx,QWORD PTR [rsp+0x48]
   1400038a7:	xor    eax,eax
   1400038a9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400038ae:	add    rsp,0x30
   1400038b2:	pop    rdi
   1400038b3:	ret    
   1400038b4:	int3   
   1400038b5:	int3   
   1400038b6:	int3   
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	sub    rsp,0x28
   1400038c4:	mov    eax,0x5a4d
   1400038c9:	cmp    WORD PTR [rip+0xffffffffffffc730],ax        # 0x140000000
   1400038d0:	je     0x1400038d6
   1400038d2:	xor    eax,eax
   1400038d4:	jmp    0x140003925
   1400038d6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffc75f]        # 0x14000003c
   1400038dd:	lea    rax,[rip+0xffffffffffffc71c]        # 0x140000000
   1400038e4:	add    rcx,rax
   1400038e7:	cmp    DWORD PTR [rcx],0x4550
   1400038ed:	jne    0x1400038d2
   1400038ef:	movzx  eax,WORD PTR [rcx+0x18]
   1400038f3:	cmp    eax,0x10b
   1400038f8:	je     0x140003914
   1400038fa:	cmp    eax,0x20b
   1400038ff:	jne    0x1400038d2
   140003901:	xor    eax,eax
   140003903:	cmp    DWORD PTR [rcx+0x84],0xe
   14000390a:	jbe    0x140003925
   14000390c:	cmp    DWORD PTR [rcx+0xf8],eax
   140003912:	jmp    0x140003922
   140003914:	xor    eax,eax
   140003916:	cmp    DWORD PTR [rcx+0x74],0xe
   14000391a:	jbe    0x140003925
   14000391c:	cmp    DWORD PTR [rcx+0xe8],eax
   140003922:	setne  al
   140003925:	mov    ecx,0x2
   14000392a:	mov    DWORD PTR [rip+0x3720],eax        # 0x140007050
   140003930:	call   0x140003d68
   140003935:	mov    ecx,eax
   140003937:	call   QWORD PTR [rip+0x1953]        # 0x140005290
   14000393d:	mov    rcx,QWORD PTR [rip+0x1964]        # 0x1400052a8
   140003944:	or     rax,0xffffffffffffffff
   140003948:	mov    QWORD PTR [rip+0x3d09],rax        # 0x140007658
   14000394f:	mov    QWORD PTR [rip+0x3d0a],rax        # 0x140007660
   140003956:	mov    eax,DWORD PTR [rip+0x3708]        # 0x140007064
   14000395c:	mov    DWORD PTR [rcx],eax
   14000395e:	mov    rcx,QWORD PTR [rip+0x193b]        # 0x1400052a0
   140003965:	mov    eax,DWORD PTR [rip+0x36ed]        # 0x140007058
   14000396b:	mov    DWORD PTR [rcx],eax
   14000396d:	call   0x140003dc0
   140003972:	cmp    DWORD PTR [rip+0x3687],0x0        # 0x140007000
   140003979:	jne    0x140003988
   14000397b:	lea    rcx,[rip+0x43e]        # 0x140003dc0
   140003982:	call   QWORD PTR [rip+0x1940]        # 0x1400052c8
   140003988:	xor    eax,eax
   14000398a:	add    rsp,0x28
   14000398e:	ret    
   14000398f:	int3   
   140003990:	int3   
   140003991:	int3   
   140003992:	int3   
   140003993:	int3   
   140003994:	int3   
   140003995:	int3   
   140003996:	int3   
   140003997:	int3   
   140003998:	int3   
   140003999:	int3   
   14000399a:	int3   
   14000399b:	int3   
   14000399c:	int3   
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	sub    rsp,0x38
   1400039a4:	mov    eax,DWORD PTR [rip+0x36b6]        # 0x140007060
   1400039aa:	lea    r8,[rip+0x3697]        # 0x140007048
   1400039b1:	mov    r9d,DWORD PTR [rip+0x36a4]        # 0x14000705c
   1400039b8:	lea    rdx,[rip+0x3681]        # 0x140007040
   1400039bf:	mov    DWORD PTR [rip+0x368f],eax        # 0x140007054
   1400039c5:	lea    rcx,[rip+0x366c]        # 0x140007038
   1400039cc:	lea    rax,[rip+0x3681]        # 0x140007054
   1400039d3:	mov    QWORD PTR [rsp+0x20],rax
   1400039d8:	call   QWORD PTR [rip+0x18aa]        # 0x140005288
   1400039de:	mov    DWORD PTR [rip+0x3658],eax        # 0x14000703c
   1400039e4:	add    rsp,0x38
   1400039e8:	ret    
   1400039e9:	int3   
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	sub    rsp,0x28
   1400039f4:	call   0x140003eb4
   1400039f9:	add    rsp,0x28
   1400039fd:	jmp    0x140003a08
   140003a02:	int3   
   140003a03:	int3   
   140003a04:	int3   
   140003a05:	int3   
   140003a06:	int3   
   140003a07:	int3   
   140003a08:	mov    rax,rsp
   140003a0b:	mov    QWORD PTR [rax+0x8],rbx
   140003a0f:	mov    QWORD PTR [rax+0x10],rsi
   140003a13:	mov    QWORD PTR [rax+0x18],rdi
   140003a17:	push   r15
   140003a19:	sub    rsp,0xb0
   140003a20:	and    DWORD PTR [rsp+0x20],0x0
   140003a25:	lea    rcx,[rax-0x78]
   140003a29:	call   QWORD PTR [rip+0x1701]        # 0x140005130
   140003a2f:	nop
   140003a30:	mov    rax,QWORD PTR gs:0x30
   140003a39:	mov    rbx,QWORD PTR [rax+0x8]
   140003a3d:	xor    esi,esi
   140003a3f:	xor    eax,eax
   140003a41:	lock cmpxchg QWORD PTR [rip+0x3c1e],rbx        # 0x140007668
   140003a4a:	je     0x140003a65
   140003a4c:	cmp    rax,rbx
   140003a4f:	jne    0x140003a58
   140003a51:	mov    esi,0x1
   140003a56:	jmp    0x140003a65
   140003a58:	mov    ecx,0x3e8
   140003a5d:	call   QWORD PTR [rip+0x16d5]        # 0x140005138
   140003a63:	jmp    0x140003a3f
   140003a65:	mov    eax,DWORD PTR [rip+0x3c05]        # 0x140007670
   140003a6b:	cmp    eax,0x1
   140003a6e:	jne    0x140003a7a
   140003a70:	lea    ecx,[rax+0x1e]
   140003a73:	call   0x140003db4
   140003a78:	jmp    0x140003aeb
   140003a7a:	mov    eax,DWORD PTR [rip+0x3bf0]        # 0x140007670
   140003a80:	test   eax,eax
   140003a82:	jne    0x140003ae1
   140003a84:	mov    DWORD PTR [rip+0x3be2],0x1        # 0x140007670
   140003a8e:	lea    r15,[rip+0x1903]        # 0x140005398
   140003a95:	lea    rbx,[rip+0x18e4]        # 0x140005380
   140003a9c:	mov    QWORD PTR [rsp+0x38],rbx
   140003aa1:	mov    DWORD PTR [rsp+0x30],eax
   140003aa5:	cmp    rbx,r15
   140003aa8:	jae    0x140003ad3
   140003aaa:	test   eax,eax
   140003aac:	jne    0x140003ad7
   140003aae:	mov    rdi,QWORD PTR [rbx]
   140003ab1:	test   rdi,rdi
   140003ab4:	je     0x140003ac8
   140003ab6:	mov    rcx,rdi
   140003ab9:	mov    rax,QWORD PTR [rip+0x1898]        # 0x140005358
   140003ac0:	call   rax
   140003ac2:	call   rdi
   140003ac4:	mov    DWORD PTR [rsp+0x30],eax
   140003ac8:	add    rbx,0x8
   140003acc:	mov    QWORD PTR [rsp+0x38],rbx
   140003ad1:	jmp    0x140003aa5
   140003ad3:	test   eax,eax
   140003ad5:	je     0x140003aeb
   140003ad7:	mov    eax,0xff
   140003adc:	jmp    0x140003c44
   140003ae1:	mov    DWORD PTR [rip+0x3549],0x1        # 0x140007034
   140003aeb:	mov    eax,DWORD PTR [rip+0x3b7f]        # 0x140007670
   140003af1:	cmp    eax,0x1
   140003af4:	jne    0x140003b13
   140003af6:	lea    rdx,[rip+0x187b]        # 0x140005378
   140003afd:	lea    rcx,[rip+0x1864]        # 0x140005368
   140003b04:	call   0x140003f8a
   140003b09:	mov    DWORD PTR [rip+0x3b5d],0x2        # 0x140007670
   140003b13:	test   esi,esi
   140003b15:	jne    0x140003b20
   140003b17:	xor    eax,eax
   140003b19:	xchg   QWORD PTR [rip+0x3b48],rax        # 0x140007668
   140003b20:	cmp    QWORD PTR [rip+0x3b50],0x0        # 0x140007678
   140003b28:	je     0x140003b58
   140003b2a:	lea    rcx,[rip+0x3b47]        # 0x140007678
   140003b31:	call   0x140003e20
   140003b36:	test   eax,eax
   140003b38:	je     0x140003b58
   140003b3a:	mov    rbx,QWORD PTR [rip+0x3b37]        # 0x140007678
   140003b41:	mov    rcx,rbx
   140003b44:	mov    rax,QWORD PTR [rip+0x180d]        # 0x140005358
   140003b4b:	call   rax
   140003b4d:	xor    r8d,r8d
   140003b50:	lea    edx,[r8+0x2]
   140003b54:	xor    ecx,ecx
   140003b56:	call   rbx
   140003b58:	mov    rax,QWORD PTR [rip+0x1751]        # 0x1400052b0
   140003b5f:	mov    rbx,QWORD PTR [rax]
   140003b62:	mov    QWORD PTR [rsp+0x28],rbx
   140003b67:	mov    edi,DWORD PTR [rsp+0x20]
   140003b6b:	cmp    BYTE PTR [rbx],0x20
   140003b6e:	ja     0x140003be3
   140003b70:	cmp    BYTE PTR [rbx],0x0
   140003b73:	je     0x140003b79
   140003b75:	test   edi,edi
   140003b77:	jne    0x140003be3
   140003b79:	mov    al,BYTE PTR [rbx]
   140003b7b:	dec    al
   140003b7d:	cmp    al,0x1f
   140003b7f:	ja     0x140003b8b
   140003b81:	inc    rbx
   140003b84:	mov    QWORD PTR [rsp+0x28],rbx
   140003b89:	jmp    0x140003b79
   140003b8b:	mov    ecx,DWORD PTR [rsp+0x7c]
   140003b8f:	movzx  eax,WORD PTR [rsp+0x80]
   140003b97:	mov    r9d,0xa
   140003b9d:	and    cl,0x1
   140003ba0:	cmovne r9d,eax
   140003ba4:	mov    r8,rbx
   140003ba7:	xor    edx,edx
   140003ba9:	lea    rcx,[rip+0xffffffffffffc450]        # 0x140000000
   140003bb0:	call   0x140002b40
   140003bb5:	mov    DWORD PTR [rip+0x3475],eax        # 0x140007030
   140003bbb:	cmp    DWORD PTR [rip+0x348e],0x0        # 0x140007050
   140003bc2:	jne    0x140003bcc
   140003bc4:	mov    ecx,eax
   140003bc6:	call   QWORD PTR [rip+0x171c]        # 0x1400052e8
   140003bcc:	cmp    DWORD PTR [rip+0x3461],0x0        # 0x140007034
   140003bd3:	jne    0x140003be1
   140003bd5:	call   QWORD PTR [rip+0x16fd]        # 0x1400052d8
   140003bdb:	mov    eax,DWORD PTR [rip+0x344f]        # 0x140007030
   140003be1:	jmp    0x140003c44
   140003be3:	cmp    BYTE PTR [rbx],0x22
   140003be6:	jne    0x140003bf5
   140003be8:	xor    eax,eax
   140003bea:	test   edi,edi
   140003bec:	sete   al
   140003bef:	mov    edi,eax
   140003bf1:	mov    DWORD PTR [rsp+0x20],eax
   140003bf5:	movzx  ecx,BYTE PTR [rbx]
   140003bf8:	call   QWORD PTR [rip+0x16d2]        # 0x1400052d0
   140003bfe:	test   eax,eax
   140003c00:	je     0x140003c0a
   140003c02:	inc    rbx
   140003c05:	mov    QWORD PTR [rsp+0x28],rbx
   140003c0a:	inc    rbx
   140003c0d:	mov    QWORD PTR [rsp+0x28],rbx
   140003c12:	jmp    0x140003b6b
   140003c17:	mov    DWORD PTR [rip+0x3413],eax        # 0x140007030
   140003c1d:	cmp    DWORD PTR [rip+0x342c],0x0        # 0x140007050
   140003c24:	jne    0x140003c2f
   140003c26:	mov    ecx,eax
   140003c28:	call   QWORD PTR [rip+0x16b2]        # 0x1400052e0
   140003c2e:	int3   
   140003c2f:	cmp    DWORD PTR [rip+0x33fe],0x0        # 0x140007034
   140003c36:	jne    0x140003c44
   140003c38:	call   QWORD PTR [rip+0x169a]        # 0x1400052d8
   140003c3e:	mov    eax,DWORD PTR [rip+0x33ec]        # 0x140007030
   140003c44:	lea    r11,[rsp+0xb0]
   140003c4c:	mov    rbx,QWORD PTR [r11+0x10]
   140003c50:	mov    rsi,QWORD PTR [r11+0x18]
   140003c54:	mov    rdi,QWORD PTR [r11+0x20]
   140003c58:	mov    rsp,r11
   140003c5b:	pop    r15
   140003c5d:	ret    
   140003c5e:	int3   
   140003c5f:	int3   
   140003c60:	int3   
   140003c61:	int3   
   140003c62:	int3   
   140003c63:	int3   
   140003c64:	int3   
   140003c65:	int3   
   140003c66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003c70:	cmp    rcx,QWORD PTR [rip+0x3391]        # 0x140007008
   140003c77:	jne    0x140003c89
   140003c79:	rol    rcx,0x10
   140003c7d:	test   cx,0xffff
   140003c82:	jne    0x140003c85
   140003c84:	ret    
   140003c85:	ror    rcx,0x10
   140003c89:	jmp    0x140004000
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	int3   
   140003c91:	int3   
   140003c92:	int3   
   140003c93:	int3   
   140003c94:	int3   
   140003c95:	int3   
   140003c96:	int3   
   140003c97:	int3   
   140003c98:	int3   
   140003c99:	int3   
   140003c9a:	int3   
   140003c9b:	int3   
   140003c9c:	int3   
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	sub    rsp,0x28
   140003ca4:	mov    rax,QWORD PTR [rcx]
   140003ca7:	cmp    DWORD PTR [rax],0xe06d7363
   140003cad:	jne    0x140003cd2
   140003caf:	cmp    DWORD PTR [rax+0x18],0x4
   140003cb3:	jne    0x140003cd2
   140003cb5:	mov    ecx,DWORD PTR [rax+0x20]
   140003cb8:	lea    eax,[rcx-0x19930520]
   140003cbe:	cmp    eax,0x2
   140003cc1:	jbe    0x140003ccb
   140003cc3:	cmp    ecx,0x1994000
   140003cc9:	jne    0x140003cd2
   140003ccb:	call   QWORD PTR [rip+0x15c7]        # 0x140005298
   140003cd1:	int3   
   140003cd2:	xor    eax,eax
   140003cd4:	add    rsp,0x28
   140003cd8:	ret    
   140003cd9:	int3   
   140003cda:	int3   
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	sub    rsp,0x28
   140003ce4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140003ca0
   140003ceb:	call   QWORD PTR [rip+0x1437]        # 0x140005128
   140003cf1:	xor    eax,eax
   140003cf3:	add    rsp,0x28
   140003cf7:	ret    
   140003cf8:	int3   
   140003cf9:	int3   
   140003cfa:	int3   
   140003cfb:	int3   
   140003cfc:	int3   
   140003cfd:	int3   
   140003cfe:	jmp    QWORD PTR [rip+0x1564]        # 0x140005268
   140003d04:	int3   
   140003d05:	int3   
   140003d06:	int3   
   140003d07:	int3   
   140003d08:	int3   
   140003d09:	int3   
   140003d0a:	int3   
   140003d0b:	int3   
   140003d0c:	sub    rsp,0x18
   140003d10:	xor    edx,edx
   140003d12:	lea    rax,[rcx-0x1]
   140003d16:	cmp    rax,0xfffffffffffffffd
   140003d1a:	ja     0x140003d58
   140003d1c:	mov    eax,0x5a4d
   140003d21:	cmp    WORD PTR [rcx],ax
   140003d24:	jne    0x140003d50
   140003d26:	cmp    DWORD PTR [rcx+0x3c],edx
   140003d29:	jl     0x140003d50
   140003d2b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140003d32:	jae    0x140003d50
   140003d34:	movsxd rax,DWORD PTR [rcx+0x3c]
   140003d38:	add    rax,rcx
   140003d3b:	mov    QWORD PTR [rsp],rax
   140003d3f:	cmp    DWORD PTR [rax],0x4550
   140003d45:	cmovne rax,rdx
   140003d49:	mov    rdx,rax
   140003d4c:	mov    QWORD PTR [rsp],rax
   140003d50:	jmp    0x140003d58
   140003d52:	xor    edx,edx
   140003d54:	mov    QWORD PTR [rsp],rdx
   140003d58:	mov    rax,rdx
   140003d5b:	add    rsp,0x18
   140003d5f:	ret    
   140003d60:	int3   
   140003d61:	int3   
   140003d62:	int3   
   140003d63:	int3   
   140003d64:	int3   
   140003d65:	int3   
   140003d66:	int3   
   140003d67:	int3   
   140003d68:	rex push rbx
   140003d6a:	sub    rsp,0x20
   140003d6e:	mov    ebx,ecx
   140003d70:	xor    ecx,ecx
   140003d72:	call   QWORD PTR [rip+0x13a8]        # 0x140005120
   140003d78:	test   rax,rax
   140003d7b:	je     0x140003da5
   140003d7d:	mov    rcx,rax
   140003d80:	call   0x140003d0c
   140003d85:	test   rax,rax
   140003d88:	je     0x140003da5
   140003d8a:	mov    ecx,0x2
   140003d8f:	cmp    WORD PTR [rax+0x5c],cx
   140003d93:	jne    0x140003d99
   140003d95:	mov    eax,ecx
   140003d97:	jmp    0x140003da7
   140003d99:	cmp    WORD PTR [rax+0x5c],0x3
   140003d9e:	mov    eax,0x1
   140003da3:	je     0x140003da7
   140003da5:	mov    eax,ebx
   140003da7:	add    rsp,0x20
   140003dab:	pop    rbx
   140003dac:	ret    
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	int3   
   140003db1:	int3   
   140003db2:	int3   
   140003db3:	int3   
   140003db4:	jmp    QWORD PTR [rip+0x14c6]        # 0x140005280
   140003dba:	int3   
   140003dbb:	int3   
   140003dbc:	int3   
   140003dbd:	int3   
   140003dbe:	int3   
   140003dbf:	int3   
   140003dc0:	xor    eax,eax
   140003dc2:	ret    
   140003dc3:	int3   
   140003dc4:	int3   
   140003dc5:	int3   
   140003dc6:	int3   
   140003dc7:	int3   
   140003dc8:	int3   
   140003dc9:	int3   
   140003dca:	int3   
   140003dcb:	int3   
   140003dcc:	int3   
   140003dcd:	int3   
   140003dce:	int3   
   140003dcf:	int3   
   140003dd0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140003dd4:	xor    r9d,r9d
   140003dd7:	add    r8,rcx
   140003dda:	mov    r10,rdx
   140003ddd:	movzx  eax,WORD PTR [r8+0x14]
   140003de2:	movzx  r11d,WORD PTR [r8+0x6]
   140003de7:	add    rax,0x18
   140003deb:	add    rax,r8
   140003dee:	test   r11d,r11d
   140003df1:	je     0x140003e11
   140003df3:	mov    edx,DWORD PTR [rax+0xc]
   140003df6:	cmp    r10,rdx
   140003df9:	jb     0x140003e05
   140003dfb:	mov    ecx,DWORD PTR [rax+0x8]
   140003dfe:	add    ecx,edx
   140003e00:	cmp    r10,rcx
   140003e03:	jb     0x140003e13
   140003e05:	inc    r9d
   140003e08:	add    rax,0x28
   140003e0c:	cmp    r9d,r11d
   140003e0f:	jb     0x140003df3
   140003e11:	xor    eax,eax
   140003e13:	ret    
   140003e14:	int3   
   140003e15:	int3   
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	mov    QWORD PTR [rsp+0x8],rbx
   140003e25:	push   rdi
   140003e26:	sub    rsp,0x20
   140003e2a:	mov    rbx,rcx
   140003e2d:	lea    rdi,[rip+0xffffffffffffc1cc]        # 0x140000000
   140003e34:	mov    rcx,rdi
   140003e37:	call   0x140003e80
   140003e3c:	test   eax,eax
   140003e3e:	je     0x140003e62
   140003e40:	sub    rbx,rdi
   140003e43:	mov    rdx,rbx
   140003e46:	mov    rcx,rdi
   140003e49:	call   0x140003dd0
   140003e4e:	test   rax,rax
   140003e51:	je     0x140003e62
   140003e53:	mov    eax,DWORD PTR [rax+0x24]
   140003e56:	shr    eax,0x1f
   140003e59:	not    eax
   140003e5b:	and    eax,0x1
   140003e5e:	jmp    0x140003e62
   140003e60:	xor    eax,eax
   140003e62:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e67:	add    rsp,0x20
   140003e6b:	pop    rdi
   140003e6c:	ret    
   140003e6d:	int3   
   140003e6e:	int3   
   140003e6f:	int3   
   140003e70:	int3   
   140003e71:	int3   
   140003e72:	int3   
   140003e73:	int3   
   140003e74:	int3   
   140003e75:	int3   
   140003e76:	int3   
   140003e77:	int3   
   140003e78:	int3   
   140003e79:	int3   
   140003e7a:	int3   
   140003e7b:	int3   
   140003e7c:	int3   
   140003e7d:	int3   
   140003e7e:	int3   
   140003e7f:	int3   
   140003e80:	mov    rax,rcx
   140003e83:	mov    ecx,0x5a4d
   140003e88:	cmp    WORD PTR [rax],cx
   140003e8b:	je     0x140003e90
   140003e8d:	xor    eax,eax
   140003e8f:	ret    
   140003e90:	movsxd rcx,DWORD PTR [rax+0x3c]
   140003e94:	add    rcx,rax
   140003e97:	xor    eax,eax
   140003e99:	cmp    DWORD PTR [rcx],0x4550
   140003e9f:	jne    0x140003ead
   140003ea1:	mov    edx,0x20b
   140003ea6:	cmp    WORD PTR [rcx+0x18],dx
   140003eaa:	sete   al
   140003ead:	ret    
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	int3   
   140003eb1:	int3   
   140003eb2:	int3   
   140003eb3:	int3   
   140003eb4:	mov    QWORD PTR [rsp+0x20],rbx
   140003eb9:	push   rbp
   140003eba:	mov    rbp,rsp
   140003ebd:	sub    rsp,0x20
   140003ec1:	and    QWORD PTR [rbp+0x18],0x0
   140003ec6:	movabs rbx,0x2b992ddfa232
   140003ed0:	mov    rax,QWORD PTR [rip+0x3131]        # 0x140007008
   140003ed7:	cmp    rax,rbx
   140003eda:	jne    0x140003f6f
   140003ee0:	lea    rcx,[rbp+0x18]
   140003ee4:	call   QWORD PTR [rip+0x1216]        # 0x140005100
   140003eea:	mov    rax,QWORD PTR [rbp+0x18]
   140003eee:	mov    QWORD PTR [rbp+0x10],rax
   140003ef2:	call   QWORD PTR [rip+0x1218]        # 0x140005110
   140003ef8:	mov    eax,eax
   140003efa:	xor    QWORD PTR [rbp+0x10],rax
   140003efe:	call   QWORD PTR [rip+0x1204]        # 0x140005108
   140003f04:	mov    eax,eax
   140003f06:	xor    QWORD PTR [rbp+0x10],rax
   140003f0a:	call   QWORD PTR [rip+0x11e8]        # 0x1400050f8
   140003f10:	mov    eax,eax
   140003f12:	shl    rax,0x18
   140003f16:	xor    QWORD PTR [rbp+0x10],rax
   140003f1a:	call   QWORD PTR [rip+0x11d8]        # 0x1400050f8
   140003f20:	mov    eax,eax
   140003f22:	lea    rcx,[rbp+0x10]
   140003f26:	xor    rax,QWORD PTR [rbp+0x10]
   140003f2a:	xor    rax,rcx
   140003f2d:	lea    rcx,[rbp+0x20]
   140003f31:	mov    QWORD PTR [rbp+0x10],rax
   140003f35:	call   QWORD PTR [rip+0x11dd]        # 0x140005118
   140003f3b:	mov    eax,DWORD PTR [rbp+0x20]
   140003f3e:	movabs rcx,0xffffffffffff
   140003f48:	shl    rax,0x20
   140003f4c:	xor    rax,QWORD PTR [rbp+0x20]
   140003f50:	xor    rax,QWORD PTR [rbp+0x10]
   140003f54:	and    rax,rcx
   140003f57:	movabs rcx,0x2b992ddfa233
   140003f61:	cmp    rax,rbx
   140003f64:	cmove  rax,rcx
   140003f68:	mov    QWORD PTR [rip+0x3099],rax        # 0x140007008
   140003f6f:	mov    rbx,QWORD PTR [rsp+0x48]
   140003f74:	not    rax
   140003f77:	mov    QWORD PTR [rip+0x3092],rax        # 0x140007010
   140003f7e:	add    rsp,0x20
   140003f82:	pop    rbp
   140003f83:	ret    
   140003f84:	int3   
   140003f85:	int3   
   140003f86:	int3   
   140003f87:	int3   
   140003f88:	int3   
   140003f89:	int3   
   140003f8a:	jmp    QWORD PTR [rip+0x1330]        # 0x1400052c0
   140003f90:	int3   
   140003f91:	int3   
   140003f92:	int3   
   140003f93:	int3   
   140003f94:	int3   
   140003f95:	int3   
   140003f96:	jmp    QWORD PTR [rip+0x131c]        # 0x1400052b8
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	int3   
   140003fa1:	int3   
   140003fa2:	int3   
   140003fa3:	int3   
   140003fa4:	int3   
   140003fa5:	int3   
   140003fa6:	int3   
   140003fa7:	int3   
   140003fa8:	int3   
   140003fa9:	int3   
   140003faa:	int3   
   140003fab:	int3   
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	ret    0x0
   140003fb3:	int3   
   140003fb4:	int3   
   140003fb5:	int3   
   140003fb6:	int3   
   140003fb7:	int3   
   140003fb8:	int3   
   140003fb9:	int3   
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	rex push rbx
   140003fbe:	sub    rsp,0x20
   140003fc2:	mov    rbx,rcx
   140003fc5:	xor    ecx,ecx
   140003fc7:	call   QWORD PTR [rip+0x115b]        # 0x140005128
   140003fcd:	mov    rcx,rbx
   140003fd0:	call   QWORD PTR [rip+0x111a]        # 0x1400050f0
   140003fd6:	call   QWORD PTR [rip+0x110c]        # 0x1400050e8
   140003fdc:	mov    rcx,rax
   140003fdf:	mov    edx,0xc0000409
   140003fe4:	add    rsp,0x20
   140003fe8:	pop    rbx
   140003fe9:	rex.W jmp QWORD PTR [rip+0x10f0]        # 0x1400050e0
   140003ff0:	int3   
   140003ff1:	int3   
   140003ff2:	int3   
   140003ff3:	int3   
   140003ff4:	int3   
   140003ff5:	int3   
   140003ff6:	int3   
   140003ff7:	int3   
   140003ff8:	int3   
   140003ff9:	int3   
   140003ffa:	int3   
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	mov    QWORD PTR [rsp+0x8],rcx
   140004005:	sub    rsp,0x88
   14000400c:	lea    rcx,[rip+0x30fd]        # 0x140007110
   140004013:	call   QWORD PTR [rip+0x12df]        # 0x1400052f8
   140004019:	mov    rax,QWORD PTR [rip+0x31e8]        # 0x140007208
   140004020:	mov    QWORD PTR [rsp+0x48],rax
   140004025:	xor    r8d,r8d
   140004028:	lea    rdx,[rsp+0x50]
   14000402d:	mov    rcx,QWORD PTR [rsp+0x48]
   140004032:	call   QWORD PTR [rip+0x12d0]        # 0x140005308
   140004038:	mov    QWORD PTR [rsp+0x40],rax
   14000403d:	cmp    QWORD PTR [rsp+0x40],0x0
   140004043:	je     0x140004087
   140004045:	mov    QWORD PTR [rsp+0x38],0x0
   14000404e:	lea    rax,[rsp+0x58]
   140004053:	mov    QWORD PTR [rsp+0x30],rax
   140004058:	lea    rax,[rsp+0x60]
   14000405d:	mov    QWORD PTR [rsp+0x28],rax
   140004062:	lea    rax,[rip+0x30a7]        # 0x140007110
   140004069:	mov    QWORD PTR [rsp+0x20],rax
   14000406e:	mov    r9,QWORD PTR [rsp+0x40]
   140004073:	mov    r8,QWORD PTR [rsp+0x48]
   140004078:	mov    rdx,QWORD PTR [rsp+0x50]
   14000407d:	xor    ecx,ecx
   14000407f:	call   QWORD PTR [rip+0x128b]        # 0x140005310
   140004085:	jmp    0x1400040aa
   140004087:	mov    rax,QWORD PTR [rip+0x311a]        # 0x1400071a8
   14000408e:	mov    rax,QWORD PTR [rax]
   140004091:	mov    QWORD PTR [rip+0x3170],rax        # 0x140007208
   140004098:	mov    rax,QWORD PTR [rip+0x3109]        # 0x1400071a8
   14000409f:	add    rax,0x8
   1400040a3:	mov    QWORD PTR [rip+0x30fe],rax        # 0x1400071a8
   1400040aa:	mov    rax,QWORD PTR [rip+0x3157]        # 0x140007208
   1400040b1:	mov    QWORD PTR [rip+0x2fc8],rax        # 0x140007080
   1400040b8:	mov    rax,QWORD PTR [rsp+0x90]
   1400040c0:	mov    QWORD PTR [rip+0x30c9],rax        # 0x140007190
   1400040c7:	mov    DWORD PTR [rip+0x2f9f],0xc0000409        # 0x140007070
   1400040d1:	mov    DWORD PTR [rip+0x2f99],0x1        # 0x140007074
   1400040db:	mov    DWORD PTR [rip+0x2fa3],0x3        # 0x140007088
   1400040e5:	mov    eax,0x8
   1400040ea:	imul   rax,rax,0x0
   1400040ee:	lea    rcx,[rip+0x2f9b]        # 0x140007090
   1400040f5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400040fd:	mov    eax,0x8
   140004102:	imul   rax,rax,0x1
   140004106:	lea    rcx,[rip+0x2f83]        # 0x140007090
   14000410d:	mov    rdx,QWORD PTR [rip+0x2ef4]        # 0x140007008
   140004114:	mov    QWORD PTR [rcx+rax*1],rdx
   140004118:	mov    eax,0x8
   14000411d:	imul   rax,rax,0x2
   140004121:	lea    rcx,[rip+0x2f68]        # 0x140007090
   140004128:	mov    rdx,QWORD PTR [rip+0x2ee1]        # 0x140007010
   14000412f:	mov    QWORD PTR [rcx+rax*1],rdx
   140004133:	mov    eax,0x8
   140004138:	imul   rax,rax,0x0
   14000413c:	mov    rcx,QWORD PTR [rip+0x2ec5]        # 0x140007008
   140004143:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140004148:	mov    eax,0x8
   14000414d:	imul   rax,rax,0x1
   140004151:	mov    rcx,QWORD PTR [rip+0x2eb8]        # 0x140007010
   140004158:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000415d:	lea    rcx,[rip+0x127c]        # 0x1400053e0
   140004164:	call   0x140003fbc
   140004169:	add    rsp,0x88
   140004170:	ret    
   140004171:	int3   
   140004172:	int3   
   140004173:	int3   
   140004174:	int3   
   140004175:	int3   
   140004176:	int3   
   140004177:	int3   
   140004178:	int3   
   140004179:	int3   
   14000417a:	int3   
   14000417b:	int3   
   14000417c:	int3   
   14000417d:	int3   
   14000417e:	int3   
   14000417f:	int3   
   140004180:	int3   
   140004181:	int3   
   140004182:	int3   
   140004183:	int3   
   140004184:	int3   
   140004185:	int3   
   140004186:	int3   
   140004187:	int3   
   140004188:	sub    rsp,0x28
   14000418c:	mov    r8,QWORD PTR [r9+0x38]
   140004190:	mov    rcx,rdx
   140004193:	mov    rdx,r9
   140004196:	call   0x1400041ac
   14000419b:	mov    eax,0x1
   1400041a0:	add    rsp,0x28
   1400041a4:	ret    
   1400041a5:	int3   
   1400041a6:	int3   
   1400041a7:	int3   
   1400041a8:	int3   
   1400041a9:	int3   
   1400041aa:	int3   
   1400041ab:	int3   
   1400041ac:	rex push rbx
   1400041ae:	sub    rsp,0x20
   1400041b2:	mov    r11d,DWORD PTR [r8]
   1400041b5:	mov    rbx,rdx
   1400041b8:	and    r11d,0xfffffff8
   1400041bc:	mov    r9,rcx
   1400041bf:	test   BYTE PTR [r8],0x4
   1400041c3:	mov    r10,rcx
   1400041c6:	je     0x1400041db
   1400041c8:	mov    eax,DWORD PTR [r8+0x8]
   1400041cc:	movsxd r10,DWORD PTR [r8+0x4]
   1400041d0:	neg    eax
   1400041d2:	add    r10,rcx
   1400041d5:	movsxd rcx,eax
   1400041d8:	and    r10,rcx
   1400041db:	movsxd rax,r11d
   1400041de:	mov    rdx,QWORD PTR [rax+r10*1]
   1400041e2:	mov    rax,QWORD PTR [rbx+0x10]
   1400041e6:	mov    ecx,DWORD PTR [rax+0x8]
   1400041e9:	add    rcx,QWORD PTR [rbx+0x8]
   1400041ed:	test   BYTE PTR [rcx+0x3],0xf
   1400041f1:	je     0x1400041ff
   1400041f3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400041f7:	and    eax,0xfffffff0
   1400041fa:	cdqe   
   1400041fc:	add    r9,rax
   1400041ff:	xor    r9,rdx
   140004202:	mov    rcx,r9
   140004205:	add    rsp,0x20
   140004209:	pop    rbx
   14000420a:	jmp    0x140003c70
   14000420f:	int3   
   140004210:	int3   
   140004211:	int3   
   140004212:	int3   
   140004213:	int3   
   140004214:	int3   
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	mov    rax,rsp
   14000421b:	mov    QWORD PTR [rax+0x8],rbx
   14000421f:	mov    QWORD PTR [rax+0x10],rbp
   140004223:	mov    QWORD PTR [rax+0x18],rsi
   140004227:	mov    QWORD PTR [rax+0x20],rdi
   14000422b:	push   r14
   14000422d:	sub    rsp,0x20
   140004231:	mov    r10,QWORD PTR [r9+0x38]
   140004235:	mov    rsi,rdx
   140004238:	mov    r14,r8
   14000423b:	mov    rbp,rcx
   14000423e:	mov    rdx,r9
   140004241:	mov    rcx,rsi
   140004244:	mov    rdi,r9
   140004247:	mov    ebx,DWORD PTR [r10]
   14000424a:	shl    rbx,0x4
   14000424e:	add    rbx,r10
   140004251:	lea    r8,[rbx+0x4]
   140004255:	call   0x1400041ac
   14000425a:	mov    r11d,DWORD PTR [rbx+0x4]
   14000425e:	mov    edx,0x1
   140004263:	mov    r10d,DWORD PTR [rbp+0x4]
   140004267:	mov    eax,r11d
   14000426a:	and    eax,edx
   14000426c:	and    r11d,0x2
   140004270:	and    r10b,0x66
   140004274:	cmove  r11d,eax
   140004278:	test   r11d,r11d
   14000427b:	je     0x140004291
   14000427d:	mov    r9,rdi
   140004280:	mov    r8,r14
   140004283:	mov    rdx,rsi
   140004286:	mov    rcx,rbp
   140004289:	call   QWORD PTR [rip+0x1029]        # 0x1400052b8
   14000428f:	mov    edx,eax
   140004291:	mov    rbx,QWORD PTR [rsp+0x30]
   140004296:	mov    eax,edx
   140004298:	mov    rbp,QWORD PTR [rsp+0x38]
   14000429d:	mov    rsi,QWORD PTR [rsp+0x40]
   1400042a2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400042a7:	add    rsp,0x20
   1400042ab:	pop    r14
   1400042ad:	ret    
   1400042ae:	int3   
   1400042af:	int3   
   1400042b0:	int3   
   1400042b1:	int3   
   1400042b2:	int3   
   1400042b3:	int3   
   1400042b4:	jmp    QWORD PTR [rip+0xfbe]        # 0x140005278
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	int3   
   1400042bd:	int3   
   1400042be:	int3   
   1400042bf:	int3   
   1400042c0:	int3   
   1400042c1:	int3   
   1400042c2:	int3   
   1400042c3:	int3   
   1400042c4:	int3   
   1400042c5:	int3   
   1400042c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400042d0:	jmp    rax
   1400042d2:	int3   
   1400042d3:	int3   
   1400042d4:	int3   
   1400042d5:	int3   
   1400042d6:	int3   
   1400042d7:	int3   
   1400042d8:	int3   
   1400042d9:	int3   
   1400042da:	int3   
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	int3   
   1400042e1:	int3   
   1400042e2:	int3   
   1400042e3:	int3   
   1400042e4:	int3   
   1400042e5:	int3   
   1400042e6:	rex push rbp
   1400042e8:	sub    rsp,0x30
   1400042ec:	mov    rbp,rdx
   1400042ef:	mov    QWORD PTR [rbp+0x48],rcx
   1400042f3:	mov    rax,QWORD PTR [rcx]
   1400042f6:	mov    ecx,DWORD PTR [rax]
   1400042f8:	mov    DWORD PTR [rbp+0x38],ecx
   1400042fb:	mov    DWORD PTR [rbp+0x34],ecx
   1400042fe:	mov    eax,0x1
   140004303:	add    rsp,0x30
   140004307:	pop    rbp
   140004308:	ret    
   140004309:	int3   
   14000430a:	int3   
   14000430b:	int3   
   14000430c:	int3   
   14000430d:	int3   
   14000430e:	int3   
   14000430f:	int3   
   140004310:	rex push rbp
   140004312:	sub    rsp,0x30
   140004316:	mov    rbp,rdx
   140004319:	mov    QWORD PTR [rbp+0x48],rcx
   14000431d:	mov    rax,QWORD PTR [rcx]
   140004320:	mov    ecx,DWORD PTR [rax]
   140004322:	mov    DWORD PTR [rbp+0x34],ecx
   140004325:	mov    DWORD PTR [rbp+0x30],ecx
   140004328:	mov    eax,0x1
   14000432d:	add    rsp,0x30
   140004331:	pop    rbp
   140004332:	ret    
   140004333:	int3   
   140004334:	int3   
   140004335:	int3   
   140004336:	int3   
   140004337:	int3   
   140004338:	int3   
   140004339:	int3   
   14000433a:	rex push rbp
   14000433c:	sub    rsp,0x20
   140004340:	mov    rbp,rdx
   140004343:	mov    rax,QWORD PTR [rcx]
   140004346:	mov    rdx,rcx
   140004349:	mov    ecx,DWORD PTR [rax]
   14000434b:	call   0x140003cfe
   140004350:	nop
   140004351:	add    rsp,0x20
   140004355:	pop    rbp
   140004356:	ret    
   140004357:	int3   
   140004358:	int3   
   140004359:	int3   
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	rex push rbp
   140004362:	sub    rsp,0x20
   140004366:	mov    rbp,rdx
   140004369:	mov    rax,QWORD PTR [rcx]
   14000436c:	xor    ecx,ecx
   14000436e:	cmp    DWORD PTR [rax],0xc0000005
   140004374:	sete   cl
   140004377:	mov    eax,ecx
   140004379:	add    rsp,0x20
   14000437d:	pop    rbp
   14000437e:	ret    
   14000437f:	int3   

Disassembly of section .rdata:

0000000140005000 <.rdata>:
   140005000:	push   rsp
   140005001:	(bad)  
   140005002:	add    BYTE PTR [rax],al
   140005004:	add    BYTE PTR [rax],al
   140005006:	add    BYTE PTR [rax],al
   140005008:	push   0x60
   14000500d:	add    BYTE PTR [rax],al
   14000500f:	add    BYTE PTR [rax+0x60],bh
   140005012:	add    BYTE PTR [rax],al
   140005014:	add    BYTE PTR [rax],al
   140005016:	add    BYTE PTR [rax],al
   140005018:	mov    WORD PTR [rax+0x0],fs
   14000501b:	add    BYTE PTR [rax],al
   14000501d:	add    BYTE PTR [rax],al
   14000501f:	add    BYTE PTR [rax+riz*2+0x0],bl
   140005026:	add    BYTE PTR [rax],al
   140005028:	lods   al,BYTE PTR ds:[rsi]
   140005029:	(bad)  
   14000502a:	add    BYTE PTR [rax],al
   14000502c:	add    BYTE PTR [rax],al
   14000502e:	add    BYTE PTR [rax],al
   140005030:	rex (bad) 
	...
   14000503e:	add    BYTE PTR [rax],al
   140005040:	adc    DWORD PTR [rax],eax
   140005042:	add    BYTE PTR [rax],al
   140005044:	add    BYTE PTR [rax],al
   140005046:	add    BYTE PTR [rax+0x0],al
   14000504c:	add    BYTE PTR [rax],al
   14000504e:	add    BYTE PTR [rax],al
   140005050:	lock (bad) 
   140005052:	add    BYTE PTR [rax],al
   140005054:	add    BYTE PTR [rax],al
   140005056:	add    BYTE PTR [rax],al
   140005058:	add    ah,BYTE PTR [rcx+0x0]
   14000505b:	add    BYTE PTR [rax],al
   14000505d:	add    BYTE PTR [rax],al
   14000505f:	add    BYTE PTR [rdx],dl
   140005061:	(bad)  
   140005062:	add    BYTE PTR [rax],al
   140005064:	add    BYTE PTR [rax],al
   140005066:	add    BYTE PTR [rax],al
   140005068:	and    BYTE PTR [rcx+0x0],ah
   14000506b:	add    BYTE PTR [rax],al
   14000506d:	add    BYTE PTR [rax],al
   14000506f:	add    BYTE PTR [rdx],dh
   140005071:	(bad)  
   140005072:	add    BYTE PTR [rax],al
   140005074:	add    BYTE PTR [rax],al
   140005076:	add    BYTE PTR [rax],al
   140005078:	rex.WRX (bad) 
   14000507a:	add    BYTE PTR [rax],al
   14000507c:	add    BYTE PTR [rax],al
   14000507e:	add    BYTE PTR [rax],al
   140005080:	(bad)  
   140005081:	(bad)  
   140005082:	add    BYTE PTR [rax],al
   140005084:	add    BYTE PTR [rax],al
   140005086:	add    BYTE PTR [rax],al
   140005088:	jbe    0x1400050eb
   14000508a:	add    BYTE PTR [rax],al
   14000508c:	add    BYTE PTR [rax],al
   14000508e:	add    BYTE PTR [rax],al
   140005090:	mov    WORD PTR [rcx+0x0],fs
   140005093:	add    BYTE PTR [rax],al
   140005095:	add    BYTE PTR [rax],al
   140005097:	add    BYTE PTR [rsi+0x61],dl
   14000509d:	add    BYTE PTR [rax],al
   14000509f:	add    BYTE PTR [rcx+riz*2+0x0],ch
   1400050a6:	add    BYTE PTR [rax],al
   1400050a8:	mov    edx,0x61
   1400050ad:	add    BYTE PTR [rax],al
   1400050af:	add    al,dl
   1400050b1:	(bad)  
   1400050b2:	add    BYTE PTR [rax],al
   1400050b4:	add    BYTE PTR [rax],al
   1400050b6:	add    BYTE PTR [rax],al
   1400050b8:	fsub   QWORD PTR [rcx+0x0]
   1400050bb:	add    BYTE PTR [rax],al
   1400050bd:	add    BYTE PTR [rax],al
   1400050bf:	add    al,ah
   1400050c1:	(bad)  
   1400050c2:	add    BYTE PTR [rax],al
   1400050c4:	add    BYTE PTR [rax],al
   1400050c6:	add    BYTE PTR [rax],al
   1400050c8:	adc    al,0x67
   1400050ca:	add    BYTE PTR [rax],al
   1400050cc:	add    BYTE PTR [rax],al
   1400050ce:	add    BYTE PTR [rax],al
   1400050d0:	add    al,0x67
   1400050d2:	add    BYTE PTR [rax],al
   1400050d4:	add    BYTE PTR [rax],al
   1400050d6:	add    BYTE PTR [rax],al
   1400050d8:	out    0x66,al
   1400050da:	add    BYTE PTR [rax],al
   1400050dc:	add    BYTE PTR [rax],al
   1400050de:	add    BYTE PTR [rax],al
   1400050e0:	shl    BYTE PTR [rsi+0x0],cl
   1400050e3:	add    BYTE PTR [rax],al
   1400050e5:	add    BYTE PTR [rax],al
   1400050e7:	add    BYTE PTR [rsi+0x66],bh
   1400050ed:	add    BYTE PTR [rax],al
   1400050ef:	add    BYTE PTR [rdx+0x66],ah
   1400050f5:	add    BYTE PTR [rax],al
   1400050f7:	add    BYTE PTR [rdx+0x66],dl
   1400050fd:	add    BYTE PTR [rax],al
   1400050ff:	add    BYTE PTR [rax+0x66],bh
   140005102:	add    BYTE PTR [rax],al
   140005104:	add    BYTE PTR [rax],al
   140005106:	add    BYTE PTR [rax],al
   140005108:	(bad)  
   140005109:	data16 add BYTE PTR [rax],al
   14000510c:	add    BYTE PTR [rax],al
   14000510e:	add    BYTE PTR [rax],al
   140005110:	rex.WR
   140005111:	data16 add BYTE PTR [rax],al
   140005114:	add    BYTE PTR [rax],al
   140005116:	add    BYTE PTR [rax],al
   140005118:	xor    ah,BYTE PTR [rsi+0x0]
   14000511b:	add    BYTE PTR [rax],al
   14000511d:	add    BYTE PTR [rax],al
   14000511f:	add    BYTE PTR [rsi],bl
   140005121:	data16 add BYTE PTR [rax],al
   140005124:	add    BYTE PTR [rax],al
   140005126:	add    BYTE PTR [rax],al
   140005128:	add    BYTE PTR [rsi+0x0],ah
   14000512b:	add    BYTE PTR [rax],al
   14000512d:	add    BYTE PTR [rax],al
   14000512f:	add    dh,ch
   140005131:	add    BYTE PTR gs:[rax],al
   140005134:	add    BYTE PTR [rax],al
   140005136:	add    BYTE PTR [rax],al
   140005138:	out    0x65,al
   14000513a:	add    BYTE PTR [rax],al
   14000513c:	add    BYTE PTR [rax],al
   14000513e:	add    BYTE PTR [rax],al
   140005140:	enter  0x60,0x0
	...
   140005150:	(bad)  
   140005151:	add    BYTE PTR [rax],al
   140005153:	add    BYTE PTR [rax],al
   140005155:	add    BYTE PTR [rax],al
   140005157:	add    BYTE PTR [rdx],0x0
   14000515a:	add    BYTE PTR [rax],al
   14000515c:	add    BYTE PTR [rax],al
   14000515e:	add    BYTE PTR [rax+0x0],al
   140005164:	add    BYTE PTR [rax],al
   140005166:	add    BYTE PTR [rax],al
   140005168:	call   0x1400051d1
	...
   140005175:	add    BYTE PTR [rax],al
   140005177:	add    BYTE PTR [rax+0x65],dl
   14000517a:	add    BYTE PTR [rax],al
   14000517c:	add    BYTE PTR [rax],al
   14000517e:	add    BYTE PTR [rax],al
   140005180:	xor    BYTE PTR [rbp+0x0],ah
   140005183:	add    BYTE PTR [rax],al
   140005185:	add    BYTE PTR [rax],al
   140005187:	add    BYTE PTR [rsi],bl
   140005189:	add    BYTE PTR gs:[rax],al
   14000518c:	add    BYTE PTR [rax],al
   14000518e:	add    BYTE PTR [rax],al
   140005190:	or     ah,BYTE PTR [rbp+0x0]
   140005193:	add    BYTE PTR [rax],al
   140005195:	add    BYTE PTR [rax],al
   140005197:	add    BYTE PTR [rdx],bh
   140005199:	add    BYTE PTR gs:[rax],al
   14000519c:	add    BYTE PTR [rax],al
   14000519e:	add    BYTE PTR [rax],al
   1400051a0:	out    0x1,eax
   1400051a2:	add    BYTE PTR [rax],al
   1400051a4:	add    BYTE PTR [rax],al
   1400051a6:	add    BYTE PTR [rax+0x0],al
   1400051ac:	add    BYTE PTR [rax],al
   1400051ae:	add    BYTE PTR [rax],al
   1400051b0:	or     al,0x63
   1400051b2:	add    BYTE PTR [rax],al
   1400051b4:	add    BYTE PTR [rax],al
   1400051b6:	add    BYTE PTR [rax],al
   1400051b8:	and    BYTE PTR [rbx+0x0],ah
   1400051bb:	add    BYTE PTR [rax],al
   1400051bd:	add    BYTE PTR [rax],al
   1400051bf:	add    BYTE PTR [rsi],dh
   1400051c1:	movsxd eax,DWORD PTR [rax]
   1400051c3:	add    BYTE PTR [rax],al
   1400051c5:	add    BYTE PTR [rax],al
   1400051c7:	add    ah,bh
   1400051c9:	(bad)  
   1400051ca:	add    BYTE PTR [rax],al
   1400051cc:	add    BYTE PTR [rax],al
   1400051ce:	add    BYTE PTR [rax],al
   1400051d0:	sub    BYTE PTR [rdx+0x0],ah
   1400051d3:	add    BYTE PTR [rax],al
   1400051d5:	add    BYTE PTR [rax],al
   1400051d7:	add    BYTE PTR [rsi],dl
   1400051d9:	(bad)  
   1400051da:	add    BYTE PTR [rax],al
   1400051dc:	add    BYTE PTR [rax],al
   1400051de:	add    BYTE PTR [rax],al
   1400051e0:	(bad)  
   1400051e1:	(bad)  
   1400051e2:	add    BYTE PTR [rax],al
   1400051e4:	add    BYTE PTR [rax],al
   1400051e6:	add    BYTE PTR [rax],al
   1400051e8:	(bad)  
   1400051e9:	(bad)  
   1400051ea:	add    BYTE PTR [rax],al
   1400051ec:	add    BYTE PTR [rax],al
   1400051ee:	add    BYTE PTR [rax],al
   1400051f0:	(bad)
   1400051f4:	add    BYTE PTR [rax],al
   1400051f6:	add    BYTE PTR [rax],al
   1400051f8:	mov    dl,0x62
   1400051fa:	add    BYTE PTR [rax],al
   1400051fc:	add    BYTE PTR [rax],al
   1400051fe:	add    BYTE PTR [rax],al
   140005200:	movabs ds:0x9400000000000062,al
   140005209:	(bad)  
   14000520a:	add    BYTE PTR [rax],al
   14000520c:	add    BYTE PTR [rax],al
   14000520e:	add    BYTE PTR [rax],al
   140005210:	mov    BYTE PTR [rdx+0x0],ah
   140005213:	add    BYTE PTR [rax],al
   140005215:	add    BYTE PTR [rax],al
   140005217:	add    BYTE PTR [rsi+0x62],dh
   14000521a:	add    BYTE PTR [rax],al
   14000521c:	add    BYTE PTR [rax],al
   14000521e:	add    BYTE PTR [rax],al
   140005220:	push   0x62
   140005225:	add    BYTE PTR [rax],al
   140005227:	add    BYTE PTR [rdx+0x62],bl
   14000522a:	add    BYTE PTR [rax],al
   14000522c:	add    BYTE PTR [rax],al
   14000522e:	add    BYTE PTR [rax],al
   140005230:	rex.RX (bad) 
   140005232:	add    BYTE PTR [rax],al
   140005234:	add    BYTE PTR [rax],al
   140005236:	add    BYTE PTR [rax],al
   140005238:	rex.RX movsxd r8d,DWORD PTR [rax]
   14000523b:	add    BYTE PTR [rax],al
   14000523d:	add    BYTE PTR [rax],al
   14000523f:	add    BYTE PTR [rsi],dh
   140005241:	(bad)  
   140005242:	add    BYTE PTR [rax],al
   140005244:	add    BYTE PTR [rax],al
   140005246:	add    BYTE PTR [rax],al
   140005248:	pop    rdx
   140005249:	movsxd eax,DWORD PTR [rax]
   14000524b:	add    BYTE PTR [rax],al
   14000524d:	add    BYTE PTR [rax],al
   14000524f:	add    BYTE PTR [rsi],al
   140005251:	(bad)  
	...
   14000525e:	add    BYTE PTR [rax],al
   140005260:	and    BYTE PTR [rbx+0x0],0x0
   140005264:	add    BYTE PTR [rax],al
   140005266:	add    BYTE PTR [rax],al
   140005268:	mov    ah,BYTE PTR [rbx+0x0]
   14000526b:	add    BYTE PTR [rax],al
   14000526d:	add    BYTE PTR [rax],al
   14000526f:	add    BYTE PTR [rbx+riz*2+0x0],dh
   140005273:	add    BYTE PTR [rax],al
   140005275:	add    BYTE PTR [rax],al
   140005277:	add    BYTE PTR [rdx],ah
   140005279:	add    BYTE PTR [eax],al
   14000527c:	add    BYTE PTR [rax],al
   14000527e:	add    BYTE PTR [rax],al
   140005280:	cwde   
   140005281:	movsxd eax,DWORD PTR [rax]
   140005283:	add    BYTE PTR [rax],al
   140005285:	add    BYTE PTR [rax],al
   140005287:	add    BYTE PTR [rsi+0x63],ah
   14000528d:	add    BYTE PTR [rax],al
   14000528f:	add    BYTE PTR [rsi+0x63],dh
   140005295:	add    BYTE PTR [rax],al
   140005297:	add    BYTE PTR [rsp+riz*2+0x0],dl
   14000529b:	add    BYTE PTR [rax],al
   14000529d:	add    BYTE PTR [rax],al
   14000529f:	add    BYTE PTR [rsp+riz*2],bh
   1400052a2:	add    BYTE PTR [rax],al
   1400052a4:	add    BYTE PTR [rax],al
   1400052a6:	add    BYTE PTR [rax],al
   1400052a8:	xor    ah,BYTE PTR [rax+rax*1+0x0]
   1400052ac:	add    BYTE PTR [rax],al
   1400052ae:	add    BYTE PTR [rax],al
   1400052b0:	sub    BYTE PTR [rax+rax*1+0x0],ah
   1400052b4:	add    BYTE PTR [rax],al
   1400052b6:	add    BYTE PTR [rax],al
   1400052b8:	adc    BYTE PTR [rax+rax*1+0x0],ah
   1400052bc:	add    BYTE PTR [rax],al
   1400052be:	add    BYTE PTR [rax],al
   1400052c0:	add    al,0x64
   1400052c2:	add    BYTE PTR [rax],al
   1400052c4:	add    BYTE PTR [rax],al
   1400052c6:	add    BYTE PTR [rax],al
   1400052c8:	lock movsxd eax,DWORD PTR [rax]
   1400052cb:	add    BYTE PTR [rax],al
   1400052cd:	add    BYTE PTR [rax],al
   1400052cf:	add    dl,ah
   1400052d1:	movsxd eax,DWORD PTR [rax]
   1400052d3:	add    BYTE PTR [rax],al
   1400052d5:	add    BYTE PTR [rax],al
   1400052d7:	add    al,bl
   1400052d9:	movsxd eax,DWORD PTR [rax]
   1400052db:	add    BYTE PTR [rax],al
   1400052dd:	add    BYTE PTR [rax],al
   1400052df:	add    al,dl
   1400052e1:	movsxd eax,DWORD PTR [rax]
   1400052e3:	add    BYTE PTR [rax],al
   1400052e5:	add    BYTE PTR [rax],al
   1400052e7:	add    al,cl
   1400052e9:	movsxd eax,DWORD PTR [rax]
	...
   1400052f7:	add    BYTE PTR [rsp+riz*2+0x0],bl
   1400052fe:	add    BYTE PTR [rax],al
   140005300:	jbe    0x140005366
   140005302:	add    BYTE PTR [rax],al
   140005304:	add    BYTE PTR [rax],al
   140005306:	add    BYTE PTR [rax],al
   140005308:	mov    al,0x64
   14000530a:	add    BYTE PTR [rax],al
   14000530c:	add    BYTE PTR [rax],al
   14000530e:	add    BYTE PTR [rax],al
   140005310:	retf   0x64
   140005313:	add    BYTE PTR [rax],al
   140005315:	add    BYTE PTR [rax],al
   140005317:	add    BYTE PTR [rax+0x64],cl
	...
   140005325:	add    BYTE PTR [rax],al
   140005327:	add    BYTE PTR [rsi+0x65],bl
   14000532d:	add    BYTE PTR [rax],al
   14000532f:	add    BYTE PTR [rdx+0x65],dh
   140005335:	add    BYTE PTR [rax],al
   140005337:	add    BYTE PTR [rbp+riz*2+0x0],bh
   14000533b:	add    BYTE PTR [rax],al
   14000533d:	add    BYTE PTR [rax],al
   14000533f:	add    BYTE PTR [rdx+0x65],ch
   140005342:	add    BYTE PTR [rax],al
   140005344:	add    BYTE PTR [rax],al
   140005346:	add    BYTE PTR [rax],al
   140005348:	mov    fs,WORD PTR [rbp+0x0]
	...
   140005357:	add    BYTE PTR [rax+0x140003f],dh
   14000535d:	add    BYTE PTR [rax],al
   14000535f:	add    al,dl
   140005361:	rex.X add BYTE PTR [rax+0x1],al
	...
   14000536d:	add    BYTE PTR [rax],al
   14000536f:	add    BYTE PTR [rax+0x1400039],ah
	...
   140005385:	add    BYTE PTR [rax],al
   140005387:	add    al,al
   140005389:	cmp    BYTE PTR [rax],al
   14000538b:	rex add DWORD PTR [rax],eax
   14000538e:	add    BYTE PTR [rax],al
   140005390:	loopne 0x1400053ce
   140005392:	add    BYTE PTR [rax+0x1],al
	...
   14000539d:	add    BYTE PTR [rax],al
   14000539f:	add    BYTE PTR [rax-0x4fffffed],ah
   1400053a5:	sbb    eax,DWORD PTR [rax]
   1400053a7:	add    al,al
   1400053a9:	and    eax,0x2e300000
   1400053ae:	add    BYTE PTR [rax],al
   1400053b0:	add    BYTE PTR [rax],bh
   1400053b2:	add    BYTE PTR [rax],al
   1400053b4:	sar    BYTE PTR [rax],0x0
   1400053b7:	add    BYTE PTR [rax-0xfffffc7],ah
   1400053bd:	cmp    DWORD PTR [rax],eax
   1400053bf:	add    BYTE PTR [rax-0x1fffffc4],ah
   1400053c5:	cmp    al,0x0
   1400053c7:	add    al,al
   1400053c9:	cmp    eax,0x3fb00000
   1400053ce:	add    BYTE PTR [rax],al
   1400053d0:	add    BYTE PTR [rax+0x0],al
	...
   1400053df:	add    BYTE PTR [rax+0x70],dh
   1400053e2:	add    BYTE PTR [rax+0x1],al
   1400053e5:	add    BYTE PTR [rax],al
   1400053e7:	add    BYTE PTR [rax],dl
   1400053e9:	jno    0x1400053eb
   1400053eb:	rex add DWORD PTR [rax],eax
   1400053ee:	add    BYTE PTR [rax],al
   1400053f0:	ja     0x140005453
   1400053f2:	(bad)  
   1400053f3:	imul   ebp,DWORD PTR [rbp+0x70],0x6c6c642e
   1400053fa:	add    BYTE PTR [rax],al
   1400053fc:	add    BYTE PTR [rax],al
   1400053fe:	add    BYTE PTR [rax],al
   140005400:	push   rsi
   140005401:	add    BYTE PTR [rbx+0x0],al
   140005404:	rex.RX add BYTE PTR [rax],r8b
   140005407:	add    BYTE PTR [rax+rax*1+0x44],cl
   14000540b:	add    BYTE PTR [rcx+0x0],cl
   14000540e:	rex.RX add BYTE PTR [rax],r8b
   140005411:	add    BYTE PTR [rax],al
   140005413:	add    BYTE PTR [rax],al
   140005415:	add    BYTE PTR [rax],al
   140005417:	add    BYTE PTR [rbx+0x0],al
   14000541a:	push   rbx
   14000541b:	add    BYTE PTR [rsi+0x0],dl
   14000541e:	add    BYTE PTR [rax],al
   140005420:	push   rdi
   140005421:	add    BYTE PTR [rcx+0x0],al
   140005424:	rex.X add BYTE PTR [rax],al
	...
   14000542f:	add    BYTE PTR [rsi],dh
   140005431:	add    BYTE PTR [rip+0x62006600],dh        # 0x1a200ba37
   140005437:	add    BYTE PTR [rsi+0x0],ah
   14000543a:	data16 add BYTE PTR [rcx+0x0],ah
   14000543e:	cmp    DWORD PTR [rax],eax
   140005440:	sub    eax,0x62003000
   140005445:	add    BYTE PTR [rcx+0x0],ah
   140005448:	xor    eax,0x34002d00
   14000544d:	add    BYTE PTR [rip+0x38006400],dh        # 0x17800b853
   140005453:	add    BYTE PTR [rip+0x36006100],ch        # 0x17600b559
   140005459:	add    BYTE PTR [rax],dh
   14000545b:	add    BYTE PTR [rsi+0x0],ah
   14000545e:	sub    eax,0x65006400
   140005463:	add    BYTE PTR [rax+rax*1+0x34],ah
   140005467:	add    BYTE PTR [rbp+0x0],ah
   14000546a:	cmp    BYTE PTR [rax],al
   14000546c:	add    BYTE PTR ss:[rsi+0x0],ah
   140005470:	xor    BYTE PTR [rax],al
   140005472:	xor    DWORD PTR [rax],eax
   140005474:	add    BYTE PTR fs:[rbp+0x0],ah
	...
   140005480:	push   rbx
   140005481:	outs   dx,DWORD PTR ds:[rsi]
   140005482:	data16 je 0x1400054fc
   140005485:	(bad)  
   140005486:	jb     0x1400054ed
   140005488:	pop    rsp
   140005489:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140005491:	je     0x1400054ef
   140005493:	push   rdi
   140005494:	rex.B
   140005495:	rex.X add BYTE PTR [rax],al
   140005498:	push   rbx
   140005499:	outs   dx,DWORD PTR ds:[rsi]
   14000549a:	data16 je 0x140005514
   14000549d:	(bad)  
   14000549e:	jb     0x140005505
   1400054a0:	pop    rsp
   1400054a1:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400054a9:	je     0x140005507
   1400054ab:	push   rdi
   1400054ac:	rex.B
   1400054ad:	rex.X pop rsp
   1400054af:	rex.R
   1400054b0:	rex.WR
   1400054b1:	rex.WR push rax
   1400054b3:	(bad)  
   1400054b4:	je     0x14000551e
   1400054b6:	add    BYTE PTR [rax],al
   1400054b8:	and    eax,0x6d6d6f43
   1400054bd:	outs   dx,DWORD PTR ds:[rsi]
   1400054be:	outs   dx,BYTE PTR ds:[rsi]
   1400054bf:	push   rax
   1400054c0:	jb     0x140005531
   1400054c2:	addr32 jb 0x140005526
   1400054c5:	ins    DWORD PTR es:[rdi],dx
   1400054c6:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x79535c25
   1400054cf:	jae    0x140005545
   1400054d1:	gs ins DWORD PTR es:[rdi],dx
   1400054d3:	add    BYTE PTR [rax],al
   1400054d5:	add    BYTE PTR [rax],al
   1400054d7:	add    BYTE PTR [rdi+0x41],dl
   1400054da:	rex.X xor esi,DWORD PTR [rdx]
   1400054dd:	cs rex.R
   1400054df:	rex.WR
   1400054e0:	rex.WR add BYTE PTR [rax],r8b
   1400054e3:	add    BYTE PTR [rax],al
   1400054e5:	add    BYTE PTR [rax],al
   1400054e7:	add    BYTE PTR [rdi+0x61],dh
   1400054ea:	(bad)  
   1400054ec:	xor    dh,BYTE PTR [rdx+0x65]
   1400054ef:	jae    0x14000551f
   1400054f1:	fs ins BYTE PTR es:[rdi],dx
   1400054f3:	ins    BYTE PTR es:[rdi],dx
   1400054f4:	add    BYTE PTR [rax],al
   1400054f6:	add    BYTE PTR [rax],al
   1400054f8:	push   rdi
   1400054f9:	rex.B
   1400054fa:	rex.X
   1400054fb:	rex.WRXB jo 0x140005563
   1400054fe:	outs   dx,BYTE PTR ds:[rsi]
   1400054ff:	add    BYTE PTR [rbx+0x6f],dl
   140005502:	data16 je 0x14000557c
   140005505:	(bad)  
   140005506:	jb     0x14000556d
   140005508:	pop    rsp
   140005509:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140005511:	je     0x14000556f
   140005513:	rex.WRXB
   140005514:	data16 imul sp,WORD PTR [rbx+0x65],0x385c
   14000551b:	xor    BYTE PTR cs:[rdi+rcx*2+0x75],bl
   140005520:	je     0x14000558e
   140005522:	outs   dx,DWORD PTR ds:[rsi]
   140005523:	outs   dx,DWORD PTR ds:[rsi]
   140005524:	imul   ebx,DWORD PTR [rbx+rdx*2+0x65],0x74
   140005529:	jne    0x14000559b
   14000552b:	add    BYTE PTR [rax],al
   14000552d:	add    BYTE PTR [rax],al
   14000552f:	add    BYTE PTR [rbp+0x61],cl
   140005532:	imul   ebp,DWORD PTR [rbx+rdx*2+0x75],0x726f7070
   14000553a:	je     0x14000553c
   14000553c:	rex.RB js 0x1400055af
   14000553f:	outs   dx,DWORD PTR ds:[rsi]
   140005540:	jb     0x1400055b6
   140005542:	add    BYTE PTR [rax],al
   140005544:	rex.WB ins DWORD PTR es:[rdi],dx
   140005546:	jo     0x1400055b7
   140005548:	jb     0x1400055be
   14000554a:	add    BYTE PTR [rax],al
   14000554c:	add    BYTE PTR [rax],al
   14000554e:	add    BYTE PTR [rax],al
   140005550:	push   rax
   140005551:	add    BYTE PTR [rcx+0x0],al
   140005554:	rex.X add BYTE PTR [rax],al
   140005557:	add    BYTE PTR [rbx+0x0],al
   14000555a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000555e:	push   rsp
   14000555f:	add    BYTE PTR [rcx+0x0],al
   140005562:	add    BYTE PTR [r8+r8*1+0x5f],dl
   140005567:	add    BYTE PTR [rcx+0x0],cl
   14000556a:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14000556e:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140005572:	push   rsp
   140005573:	add    BYTE PTR [rdi+0x0],bl
   140005576:	add    BYTE PTR [r8+0x0],r11b
   14000557a:	push   rax
   14000557b:	add    BYTE PTR [rdi+0x0],cl
   14000557e:	push   rdx
   14000557f:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
   14000558f:	add    BYTE PTR [rbp+0x0],ch
   140005592:	jae    0x140005594
   140005594:	push   0x6c006500
   140005599:	add    BYTE PTR [rax+0x0],dh
   14000559c:	cmp    al,BYTE PTR [rax]
   14000559e:	(bad)  
   14000559f:	add    BYTE PTR [rdi],ch
   1400055a1:	add    BYTE PTR [rdi+0x0],dh
   1400055a4:	imul   eax,DWORD PTR [rax],0x64006e
   1400055aa:	outs   dx,DWORD PTR ds:[rsi]
   1400055ab:	add    BYTE PTR [rdi+0x0],dh
   1400055ae:	jae    0x1400055b0
   1400055b0:	(bad)  
   1400055b1:	add    BYTE PTR [rdi],bh
   1400055b3:	add    BYTE PTR [rcx+0x0],ch
   1400055b6:	add    BYTE PTR fs:[rip+0x46000000],bh        # 0x1860055bd
   1400055bd:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x45000000
   1400055c5:	pop    rax
   1400055c6:	push   rax
   1400055c7:	rex.WRXB push r10
   1400055c9:	push   rsp
   1400055ca:	add    BYTE PTR [rax],al
   1400055cc:	push   rax
   1400055cd:	rex.WB
   1400055ce:	cmp    r8b,BYTE PTR [rax]
   1400055d1:	add    BYTE PTR [rax],al
   1400055d3:	add    BYTE PTR [rax],al
   1400055d5:	add    BYTE PTR [rax],al
   1400055d7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400055db:	add    BYTE PTR [rbx+0x0],dh
   1400055de:	movsxd eax,DWORD PTR [rax]
   1400055e0:	jb     0x1400055e2
   1400055e2:	imul   eax,DWORD PTR [rax],0x740070
   1400055e8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400055ee:	add    BYTE PTR [rax],al
   1400055f0:	fs ins BYTE PTR es:[rdi],dx
   1400055f2:	ins    BYTE PTR es:[rdi],dx
   1400055f3:	add    BYTE PTR [rbp+0x6e],ah
   1400055f6:	je     0x14000566a
   1400055f8:	jns    0x1400055fa
   1400055fa:	add    BYTE PTR [rax],al
   1400055fc:	and    BYTE PTR [rax],al
   1400055fe:	add    BYTE PTR [rax],al
   140005600:	out    0x58,eax
   140005602:	in     al,dx
   140005603:	mov    WORD PTR [rcx-0x4eee26f9],fs
   140005609:	pop    rsi
   14000560a:	add    BYTE PTR [rip+0xffffffffeee6bf56],cl        # 0x12ee71566
   140005610:	test   BYTE PTR [rax-0x14],bl
   140005613:	mov    WORD PTR [rcx-0x4eee26f9],fs
   140005619:	pop    rsi
   14000561a:	add    BYTE PTR [rip+0xffffffffeee6bf56],cl        # 0x12ee71576
   140005620:	add    BYTE PTR [rax],al
   140005622:	add    BYTE PTR [rax],al
   140005624:	out    0x39,al
   140005626:	lahf   
   140005627:	push   rbp
   140005628:	add    BYTE PTR [rax],al
   14000562a:	add    BYTE PTR [rax],al
   14000562c:	add    al,BYTE PTR [rax]
   14000562e:	add    BYTE PTR [rax],al
   140005630:	and    eax,DWORD PTR [rax]
   140005632:	add    BYTE PTR [rax],al
   140005634:	and    BYTE PTR [rdi+0x0],dl
   140005637:	add    BYTE PTR [rax],ah
   140005639:	(bad)  
   14000563a:	add    BYTE PTR [rax],al
   14000563c:	add    BYTE PTR [rax],al
   14000563e:	add    BYTE PTR [rax],al
   140005640:	out    0x39,al
   140005642:	lahf   
   140005643:	push   rbp
   140005644:	add    BYTE PTR [rax],al
   140005646:	add    BYTE PTR [rax],al
   140005648:	or     eax,0xe0000000
   14000564d:	add    DWORD PTR [rax],eax
   14000564f:	add    BYTE PTR [rax+0x57],bl
   140005652:	add    BYTE PTR [rax],al
   140005654:	pop    rax
   140005655:	(bad)  
	...
   14000567e:	add    BYTE PTR [rax],al
   140005680:	movabs al,ds:0x0
	...
   1400056d5:	add    BYTE PTR [rax],al
   1400056d7:	add    BYTE PTR [rax],cl
   1400056d9:	jo     0x1400056db
   1400056db:	rex add DWORD PTR [rax],eax
	...
   1400056ee:	add    BYTE PTR [rax],al
   1400056f0:	pop    rax
   1400056f1:	push   rbx
   1400056f2:	add    BYTE PTR [rax+0x1],al
   1400056f5:	add    BYTE PTR [rax],al
   1400056f7:	add    BYTE PTR [rax+0x53],ah
   1400056fa:	add    BYTE PTR [rax+0x1],al
   1400056fd:	add    BYTE PTR [rax],al
   1400056ff:	add    BYTE PTR [rax+0x1400053],ah
   140005705:	add    BYTE PTR [rax],al
   140005707:	add    BYTE PTR [rip+0x0],cl        # 0x14000570d
   14000570d:	add    BYTE PTR [rax],al
   14000570f:	add    BYTE PTR [rax],al
   140005711:	xor    eax,0x0
	...
   14000571e:	add    BYTE PTR [rax],al
   140005720:	push   rdx
   140005721:	push   rbx
   140005722:	rex.R push rbx
   140005724:	xchg   ebp,eax
   140005725:	(bad)  
   140005726:	ret    0xf027
   140005729:	retf   
   14000572a:	xchg   ebx,eax
   14000572b:	rex.WRXB xchg r13,rax
   14000572d:	jnp    0x1400056e1
   14000572f:	in     eax,dx
   140005730:	rex.WRX ret 0xf6e8
   140005734:	add    DWORD PTR [rax],eax
   140005736:	add    BYTE PTR [rax],al
   140005738:	ja     0x14000579b
   14000573a:	(bad)  
   14000573b:	ins    DWORD PTR es:[rdi],dx
   14000573c:	imul   esp,DWORD PTR [rdi+0x2e],0x626470
	...
   140005757:	add    BYTE PTR [rdi+0x43],al
   14000575a:	push   rsp
   14000575b:	rex.WR add BYTE PTR [rax],r10b
   14000575e:	add    BYTE PTR [rax],al
   140005760:	mov    edx,0x2e000032
   140005765:	je     0x1400057cc
   140005767:	js     0x1400057dd
   140005769:	and    al,0x6d
   14000576b:	outs   dx,BYTE PTR ds:[rsi]
   14000576c:	add    BYTE PTR [rax],al
   14000576e:	add    BYTE PTR [rax],al
   140005770:	rol    BYTE PTR [rdx+0x0],0x0
   140005774:	adc    al,BYTE PTR [rax]
   140005776:	add    BYTE PTR [rax],al
   140005778:	cs je  0x1400057e0
   14000577b:	js     0x1400057f1
   14000577d:	and    al,0x6d
   14000577f:	outs   dx,BYTE PTR ds:[rsi]
   140005780:	and    al,0x30
   140005782:	xor    BYTE PTR [rax],al
   140005784:	loopne 0x1400057c8
   140005786:	add    BYTE PTR [rax],al
   140005788:	movabs al,ds:0x747865742e000000
   140005791:	and    al,0x78
   140005793:	add    BYTE PTR [rax],al
   140005795:	push   rax
   140005796:	add    BYTE PTR [rax],al
   140005798:	pop    rax
   140005799:	add    eax,DWORD PTR [rax]
   14000579b:	add    BYTE PTR [rsi],ch
   14000579d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   1400057a5:	add    BYTE PTR [rax],al
   1400057a7:	add    BYTE PTR [rax+0x53],bl
   1400057aa:	add    BYTE PTR [rax],al
   1400057ac:	adc    BYTE PTR [rax],al
   1400057ae:	add    BYTE PTR [rax],al
   1400057b0:	xor    BYTE PTR cs:[rax],dh
   1400057b3:	movsxd esp,DWORD PTR [rsi+0x67]
   1400057b6:	add    BYTE PTR [rax],al
   1400057b8:	push   0x8000053
   1400057bd:	add    BYTE PTR [rax],al
   1400057bf:	add    BYTE PTR [rsi],ch
   1400057c1:	rex.XB push r10
   1400057c3:	push   rsp
   1400057c4:	and    al,0x58
   1400057c6:	rex.XB
   1400057c7:	add    BYTE PTR [r8],al
   1400057ca:	add    BYTE PTR [rax],al
   1400057cc:	jo     0x140005821
   1400057ce:	add    BYTE PTR [rax],al
   1400057d0:	or     BYTE PTR [rax],al
   1400057d2:	add    BYTE PTR [rax],al
   1400057d4:	cs rex.XB push r10
   1400057d7:	push   rsp
   1400057d8:	and    al,0x58
   1400057da:	rex.XB
   1400057db:	rex.B
   1400057dc:	add    BYTE PTR [r8],al
   1400057df:	add    BYTE PTR [rax+0x53],bh
   1400057e2:	add    BYTE PTR [rax],al
   1400057e4:	or     BYTE PTR [rax],al
   1400057e6:	add    BYTE PTR [rax],al
   1400057e8:	cs rex.XB push r10
   1400057eb:	push   rsp
   1400057ec:	and    al,0x58
   1400057ee:	rex.XB pop r10
   1400057f0:	add    BYTE PTR [rax],al
   1400057f2:	add    BYTE PTR [rax],al
   1400057f4:	adc    BYTE PTR [rbx+0x0],0x0
   1400057f8:	or     BYTE PTR [rax],al
   1400057fa:	add    BYTE PTR [rax],al
   1400057fc:	cs rex.XB push r10
   1400057ff:	push   rsp
   140005800:	and    al,0x58
   140005802:	rex.WB
   140005803:	add    BYTE PTR [r8],al
   140005806:	add    BYTE PTR [rax],al
   140005808:	mov    BYTE PTR [rbx+0x0],dl
   14000580b:	add    BYTE PTR [rax],cl
   14000580d:	add    BYTE PTR [rax],al
   14000580f:	add    BYTE PTR [rsi],ch
   140005811:	rex.XB push r10
   140005813:	push   rsp
   140005814:	and    al,0x58
   140005816:	rex.WB
   140005817:	rex.B
   140005818:	add    BYTE PTR [r8],al
   14000581b:	add    BYTE PTR [rax+0x8000053],dl
   140005821:	add    BYTE PTR [rax],al
   140005823:	add    BYTE PTR [rsi],ch
   140005825:	rex.XB push r10
   140005827:	push   rsp
   140005828:	and    al,0x58
   14000582a:	rex.WB pop r9
   14000582c:	add    BYTE PTR [rax],al
   14000582e:	add    BYTE PTR [rax],al
   140005830:	cwde   
   140005831:	push   rbx
   140005832:	add    BYTE PTR [rax],al
   140005834:	or     BYTE PTR [rax],al
   140005836:	add    BYTE PTR [rax],al
   140005838:	cs rex.XB push r10
   14000583b:	push   rsp
   14000583c:	and    al,0x58
   14000583e:	rex.WB pop r10
   140005840:	add    BYTE PTR [rax],al
   140005842:	add    BYTE PTR [rax],al
   140005844:	movabs al,ds:0x2e00000034000053
   14000584d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140005855:	add    BYTE PTR [rax],al
   140005857:	add    al,ah
   140005859:	push   rbx
   14000585a:	add    BYTE PTR [rax],al
   14000585c:	rex add eax,DWORD PTR [rax]
   14000585f:	add    BYTE PTR [rsi],ch
   140005861:	jb     0x1400058c7
   140005863:	(bad)  
   140005864:	je     0x1400058c7
   140005866:	add    BYTE PTR [rax],al
   140005868:	and    BYTE PTR [rdi+0x0],dl
   14000586b:	add    BYTE PTR [rax],bl
   14000586d:	add    al,BYTE PTR [rax]
   14000586f:	add    BYTE PTR [rsi],ch
   140005871:	jb     0x1400058d7
   140005873:	(bad)  
   140005874:	je     0x1400058d7
   140005876:	and    al,0x7a
   140005878:	jp     0x1400058f4
   14000587a:	fs (bad) 
   14000587c:	add    BYTE PTR [eax],al
   14000587f:	add    BYTE PTR [rax],bh
   140005881:	pop    rcx
   140005882:	add    BYTE PTR [rax],al
   140005884:	int3   
   140005885:	add    al,BYTE PTR [rax]
   140005887:	add    BYTE PTR [rsi],ch
   140005889:	js     0x1400058ef
   14000588b:	(bad)  
   14000588c:	je     0x1400058ef
   14000588e:	add    BYTE PTR [rax],al
   140005890:	or     BYTE PTR [rax+rax*1+0x0],bl
   140005894:	enter  0x0,0x0
   140005898:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   1400058a1:	add    BYTE PTR [rax],al
   1400058a3:	add    al,dl
   1400058a5:	pop    rsp
   1400058a6:	add    BYTE PTR [rax],al
   1400058a8:	adc    al,0x0
   1400058aa:	add    BYTE PTR [rax],al
   1400058ac:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400058b5:	add    BYTE PTR [rax],al
   1400058b7:	add    al,ch
   1400058b9:	pop    rsp
   1400058ba:	add    BYTE PTR [rax],al
   1400058bc:	pop    rax
   1400058bd:	add    eax,DWORD PTR [rax]
   1400058bf:	add    BYTE PTR [rsi],ch
   1400058c1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   1400058c9:	add    BYTE PTR [rax],al
   1400058cb:	add    BYTE PTR [rax+0x60],al
   1400058ce:	add    BYTE PTR [rax],al
   1400058d0:	in     al,dx
   1400058d1:	(bad)  
   1400058d2:	add    BYTE PTR [rax],al
   1400058d4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   1400058dd:	add    BYTE PTR [rax],al
   1400058df:	add    BYTE PTR [rax],al
   1400058e1:	jo     0x1400058e3
   1400058e3:	add    BYTE PTR [rax],dh
   1400058e5:	add    BYTE PTR [rax],al
   1400058e7:	add    BYTE PTR [rsi],ch
   1400058e9:	fs (bad) 
   1400058eb:	je     0x14000594e
   1400058ed:	add    BYTE PTR [rax],al
   1400058ef:	add    BYTE PTR [rax],dh
   1400058f1:	jo     0x1400058f3
   1400058f3:	add    BYTE PTR [rax+0x6],ah
   1400058f6:	add    BYTE PTR [rax],al
   1400058f8:	cs (bad) 
   1400058fb:	jae    0x1400058fd
   1400058fd:	add    BYTE PTR [rax],al
   1400058ff:	add    BYTE PTR [rax],al
   140005901:	add    BYTE PTR [rax],0x0
   140005904:	sub    BYTE PTR [rdx],al
   140005906:	add    BYTE PTR [rax],al
   140005908:	cs jo  0x14000596f
   14000590b:	(bad)  
   14000590c:	je     0x14000596f
   14000590e:	add    BYTE PTR [rax],al
   140005910:	add    BYTE PTR [rax+0x3740000],dl
   140005916:	add    BYTE PTR [rax],al
   140005918:	cs jb  0x14000598e
   14000591b:	jb     0x140005980
   14000591d:	and    al,0x30
   14000591f:	xor    DWORD PTR [rax],eax
   140005921:	add    BYTE PTR [rax],al
   140005923:	add    BYTE PTR [rax+0x68000093],al
   140005929:	mov    al,0x0
   14000592b:	add    BYTE PTR [rsi],ch
   14000592d:	jb     0x1400059a2
   14000592f:	jb     0x140005994
   140005931:	and    al,0x30
   140005933:	xor    al,BYTE PTR [rax]
   140005935:	add    BYTE PTR [rax],al
   140005937:	add    BYTE PTR [rcx],al
   140005939:	sbb    BYTE PTR [rdx],cl
   14000593b:	add    BYTE PTR [rax],bl
   14000593d:	fs or  al,0x0
   140005940:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140005944:	sbb    BYTE PTR [rdx+rcx*1],dh
   140005947:	add    BYTE PTR [rax],bl
   140005949:	push   rdx
   14000594a:	adc    al,0xf0
   14000594c:	adc    ah,al
   14000594e:	adc    BYTE PTR [rax+0x1],dh
   140005951:	add    eax,0x34050002
   140005956:	add    DWORD PTR [rax],eax
   140005958:	sbb    DWORD PTR [rdi],ebx
   14000595a:	add    eax,0x8d340d00
   14000595f:	add    BYTE PTR [rip+0x6008a01],cl        # 0x14600e366
   140005965:	jo     0x140005967
   140005967:	add    BYTE PTR [rax+0x40000041],cl
   14000596d:	add    al,0x0
   14000596f:	add    BYTE PTR [rcx],al
   140005971:	(bad)  
   140005972:	add    al,BYTE PTR [rax]
   140005974:	(bad)  
   140005975:	xor    al,BYTE PTR [rdx]
   140005977:	xor    BYTE PTR [rcx],bl
   140005979:	and    DWORD PTR [rdi],eax
   14000597b:	add    BYTE PTR [rdi],cl
   14000597d:	add    eax,ebx
   14000597f:	add    BYTE PTR [rax],cl
   140005981:	lock (bad) 
   140005983:	loopne 0x140005989
   140005985:	jo     0x14000598a
   140005987:	(bad)  
   140005988:	add    dh,BYTE PTR [rax]
   14000598a:	add    BYTE PTR [rax],al
   14000598c:	sbb    BYTE PTR [rdx+0x0],al
   14000598f:	add    BYTE PTR [rcx],al
   140005991:	add    BYTE PTR [rax],al
   140005993:	add    BYTE PTR [rsi+0x15],al
   140005996:	add    BYTE PTR [rax],al
   140005998:	push   rsi
   140005999:	(bad)  
   14000599a:	add    BYTE PTR [rax],al
   14000599c:	out    0x42,al
   14000599e:	add    BYTE PTR [rax],al
   1400059a0:	push   rsi
   1400059a1:	(bad)  
   1400059a2:	add    BYTE PTR [rax],al
   1400059a4:	mov    cl,0x6
   1400059a6:	add    BYTE PTR [rax],al
   1400059a8:	add    DWORD PTR [rsi],eax
   1400059aa:	add    al,BYTE PTR [rax]
   1400059ac:	(bad)  
   1400059ad:	push   rdx
   1400059ae:	add    dl,BYTE PTR [rax+0x1]
   1400059b1:	or     BYTE PTR [rdx],al
   1400059b3:	add    BYTE PTR [rax],cl
   1400059b5:	xchg   edx,eax
   1400059b6:	add    al,0x30
   1400059b8:	sbb    DWORD PTR [rbx],ebx
   1400059ba:	add    eax,DWORD PTR [rax]
   1400059bc:	or     DWORD PTR [rcx],eax
   1400059be:	rex.W add BYTE PTR [rdx],al
   1400059c1:	xor    BYTE PTR [rax],al
   1400059c3:	add    BYTE PTR [rax+0x30000041],cl
   1400059c9:	add    al,BYTE PTR [rax]
   1400059cb:	add    BYTE PTR [rcx],bl
   1400059cd:	and    DWORD PTR [rdi],eax
   1400059cf:	add    BYTE PTR [rdi],cl
   1400059d1:	add    eax,ebx
   1400059d3:	add    BYTE PTR [rax],cl
   1400059d5:	lock (bad) 
   1400059d7:	rol    BYTE PTR [rax+rsi*2],0x3
   1400059db:	(bad)  
   1400059dc:	add    dh,BYTE PTR [rax]
   1400059de:	add    BYTE PTR [rax],al
   1400059e0:	sbb    BYTE PTR [rdx+0x0],al
   1400059e3:	add    BYTE PTR [rcx],al
   1400059e5:	add    BYTE PTR [rax],al
   1400059e7:	add    BYTE PTR [rsi+rbx*1+0x0],dh
   1400059eb:	add    al,dl
   1400059ed:	and    BYTE PTR [rax],al
   1400059ef:	add    BYTE PTR [rax],dl
   1400059f1:	rex.XB add BYTE PTR [r8],al
   1400059f4:	shl    BYTE PTR [rax],1
   1400059f6:	add    BYTE PTR [rax],al
   1400059f8:	mov    cl,0x6
   1400059fa:	add    BYTE PTR [rax],al
   1400059fc:	add    DWORD PTR [rsp+rcx*1],ebx
   1400059ff:	add    BYTE PTR [rsp+riz*2],bl
   140005a02:	adc    DWORD PTR [rax],eax
   140005a04:	sbb    al,0x54
   140005a06:	adc    BYTE PTR [rax],al
   140005a08:	sbb    al,0x34
   140005a0a:	(bad)  
   140005a0b:	add    BYTE PTR [rdx+rsi*2],bl
   140005a0e:	sbb    al,dh
   140005a10:	(bad)  
   140005a11:	loopne 0x140005a27
   140005a13:	rcl    BYTE PTR [rdx],1
   140005a15:	rcl    BYTE PTR [rax],0x70
   140005a18:	add    DWORD PTR [rdi],edx
   140005a1a:	or     al,BYTE PTR [rax]
   140005a1c:	(bad)  
   140005a1d:	xor    al,0x10
   140005a1f:	add    BYTE PTR [rdi],dl
   140005a21:	jb     0x140005a33
   140005a23:	lock (bad) 
   140005a25:	loopne 0x140005a33
   140005a27:	ror    BYTE PTR [rdx],1
   140005a29:	ror    BYTE PTR [rax],0x70
   140005a2c:	(bad)  
   140005a2d:	(bad)  
   140005a2e:	(bad)  
   140005a2f:	push   rax
   140005a30:	add    DWORD PTR [rdi],ecx
   140005a32:	(bad)  
   140005a33:	add    BYTE PTR [rdi],cl
   140005a35:	str    WORD PTR fs:[rdi]
   140005a39:	xor    al,0xe
   140005a3b:	add    BYTE PTR [rdi],cl
   140005a3d:	mov    dl,0xb
   140005a3f:	jo     0x140005a5a
   140005a41:	sub    DWORD PTR [rcx],ecx
   140005a43:	add    BYTE PTR [rbx],bl
   140005a45:	je     0x140005a7a
   140005a47:	add    BYTE PTR [rbx],bl
   140005a49:	xor    al,BYTE PTR fs:[rax]
   140005a4c:	sbb    esi,DWORD PTR [rcx+rsi*1]
   140005a4f:	add    BYTE PTR [rbx],bl
   140005a51:	add    DWORD PTR [rsi],ebp
   140005a53:	add    BYTE PTR [rax],dl
   140005a55:	push   rax
   140005a56:	add    BYTE PTR [rax],al
   140005a58:	mov    BYTE PTR [rcx+0x0],al
   140005a5b:	add    BYTE PTR [rax+0x1],ah
   140005a5e:	add    BYTE PTR [rax],al
   140005a60:	add    DWORD PTR [rcx],ebx
   140005a62:	or     al,BYTE PTR [rax]
   140005a64:	sbb    DWORD PTR [rdi+rcx*1],esi
   140005a67:	add    BYTE PTR [rcx],bl
   140005a69:	push   rdx
   140005a6a:	adc    eax,0x11e013f0
   140005a6f:	ror    BYTE PTR [rdi],1
   140005a71:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b6066e8
   140005a78:	sbb    DWORD PTR [rbx],esi
   140005a7a:	or     eax,DWORD PTR [rax]
   140005a7c:	and    dh,BYTE PTR [rcx+rbx*1+0x1]
   140005a80:	and    ah,BYTE PTR [rdi+rdx*1+0x1]
   140005a84:	and    dh,BYTE PTR [rsi+rdx*1]
   140005a87:	add    DWORD PTR [rdx],esp
   140005a89:	add    DWORD PTR [rdx],edx
   140005a8b:	add    DWORD PTR [rax+rsi*8],edx
   140005a8e:	adc    ah,al
   140005a90:	adc    BYTE PTR [rax+0x0],dl
   140005a93:	add    BYTE PTR [rax-0x7fffffbf],cl
   140005a99:	or     BYTE PTR [rax],al
   140005a9b:	add    BYTE PTR [rcx],bl
   140005a9d:	(bad)  
   140005a9e:	or     DWORD PTR [rax],eax
   140005aa0:	adc    eax,0x15003654
   140005aa5:	xor    al,0x35
   140005aa7:	add    BYTE PTR [rip+0xe003001],dl        # 0x14e008aae
   140005aad:	loopne 0x140005abb
   140005aaf:	jo     0x140005abc
   140005ab1:	(bad)  
   140005ab2:	add    BYTE PTR [rax],al
   140005ab4:	mov    BYTE PTR [rcx+0x0],al
   140005ab7:	add    BYTE PTR [rax+0x1],dh
   140005aba:	add    BYTE PTR [rax],al
   140005abc:	sbb    DWORD PTR [rdi],esi
   140005abe:	or     eax,0x61742600
   140005ac3:	add    BYTE PTR [rsi],ah
   140005ac5:	fs (bad) 
   140005ac7:	add    BYTE PTR [rsi],ah
   140005ac9:	xor    al,0x5f
   140005acb:	add    BYTE PTR [rsi],ah
   140005acd:	add    DWORD PTR [rax+0x0],ebx
   140005ad0:	sbb    al,dh
   140005ad2:	(bad)  
   140005ad3:	loopne 0x140005ae9
   140005ad5:	rcl    BYTE PTR [rdx],1
   140005ad7:	rcl    BYTE PTR [rax],0x50
   140005ada:	add    BYTE PTR [rax],al
   140005adc:	mov    BYTE PTR [rcx+0x0],al
   140005adf:	add    BYTE PTR [rax+0x1000002],dh
   140005ae5:	sbb    BYTE PTR [rsi],al
   140005ae7:	add    BYTE PTR [rax],bl
   140005ae9:	fs (bad) 
   140005aeb:	add    BYTE PTR [rax],bl
   140005aed:	xor    al,0x6
   140005aef:	add    BYTE PTR [rax],bl
   140005af1:	xor    dl,BYTE PTR [rax+rsi*2]
   140005af4:	sbb    DWORD PTR [rdi],ebp
   140005af6:	or     DWORD PTR [rax],eax
   140005af8:	(bad)  
   140005af9:	je     0x140005b4d
   140005afb:	add    BYTE PTR [rsi],bl
   140005afd:	fs push rcx
   140005aff:	add    BYTE PTR [rsi],bl
   140005b01:	xor    al,0x50
   140005b03:	add    BYTE PTR [rsi],bl
   140005b05:	add    DWORD PTR [rsi+0x0],ecx
   140005b08:	adc    BYTE PTR [rax+0x0],dl
   140005b0b:	add    BYTE PTR [rax+0x60000041],cl
   140005b11:	add    al,BYTE PTR [rax]
   140005b13:	add    BYTE PTR [rcx],al
   140005b15:	adc    al,0x8
   140005b17:	add    BYTE PTR [rsp+rdx*2],dl
   140005b1a:	or     al,BYTE PTR [rax]
   140005b1c:	adc    al,0x34
   140005b1e:	or     BYTE PTR [rax],al
   140005b20:	adc    al,0x32
   140005b22:	adc    al,dh
   140005b24:	(bad)  
   140005b25:	loopne 0x140005b33
   140005b27:	jo     0x140005b2a
   140005b29:	clts   
   140005b2b:	add    BYTE PTR [rdi],cl
   140005b2d:	or     al,BYTE PTR fs:[rax]
   140005b30:	sysenter 
   140005b32:	or     DWORD PTR [rax],eax
   140005b34:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140005b37:	jo     0x140005b3a
   140005b39:	add    al,0x1
   140005b3b:	add    BYTE PTR [rdx+rax*2],al
   140005b3e:	add    BYTE PTR [rax],al
   140005b40:	add    DWORD PTR [rcx+rax*1],eax
   140005b43:	add    BYTE PTR [rdx+riz*2],al
   140005b46:	add    BYTE PTR [rax],al
   140005b48:	or     DWORD PTR [rax],ebx
   140005b4a:	or     DWORD PTR [rax],eax
   140005b4c:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   140005b50:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   140005b54:	sbb    BYTE PTR [rax+rbx*1],dh
   140005b57:	add    BYTE PTR [rax],bl
   140005b59:	add    DWORD PTR [rsi],edx
   140005b5b:	add    BYTE PTR [rcx],dl
   140005b5d:	lock add BYTE PTR [rax],al
   140005b60:	xchg   esi,eax
   140005b61:	(bad)  
   140005b62:	add    BYTE PTR [rax],al
   140005b64:	add    DWORD PTR [rax],eax
   140005b66:	add    BYTE PTR [rax],al
   140005b68:	xor    BYTE PTR [rdx],bh
   140005b6a:	add    BYTE PTR [rax],al
   140005b6c:	(bad)  
   140005b6d:	cmp    al,0x0
   140005b6f:	add    BYTE PTR [rdx],bh
   140005b71:	rex.XB add BYTE PTR [r8],al
   140005b74:	(bad)  
   140005b75:	cmp    al,0x0
   140005b77:	add    BYTE PTR [rcx],al
   140005b79:	add    BYTE PTR [rax],al
   140005b7b:	add    BYTE PTR [rcx],cl
   140005b7d:	add    al,0x1
   140005b7f:	add    BYTE PTR [rdx+riz*1],al
   140005b82:	add    BYTE PTR [rax],al
   140005b84:	xchg   esi,eax
   140005b85:	(bad)  
   140005b86:	add    BYTE PTR [rax],al
   140005b88:	add    DWORD PTR [rax],eax
   140005b8a:	add    BYTE PTR [rax],al
   140005b8c:	sbb    al,0x3d
   140005b8e:	add    BYTE PTR [rax],al
   140005b90:	push   rdx
   140005b91:	cmp    eax,0x10000
   140005b96:	add    BYTE PTR [rax],al
   140005b98:	push   rdx
   140005b99:	cmp    eax,0xa090000
   140005b9e:	add    al,0x0
   140005ba0:	or     dh,BYTE PTR [rsi+rax*1]
   140005ba3:	add    BYTE PTR [rdx],cl
   140005ba5:	xor    al,BYTE PTR [rsi]
   140005ba7:	jo     0x140005b3f
   140005ba9:	(bad)  
   140005baa:	add    BYTE PTR [rax],al
   140005bac:	add    DWORD PTR [rax],eax
   140005bae:	add    BYTE PTR [rax],al
   140005bb0:	sub    eax,0x6000003e
   140005bb5:	add    BYTE PTR ds:[rax],al
   140005bb8:	(bad)  
   140005bb9:	rex.XB add BYTE PTR [r8],al
   140005bbc:	(bad)  
   140005bbd:	add    BYTE PTR ds:[rax],al
   140005bc0:	add    DWORD PTR [rsi],eax
   140005bc2:	add    al,BYTE PTR [rax]
   140005bc4:	(bad)  
   140005bc5:	xor    al,BYTE PTR [rdx]
   140005bc7:	push   rax
   140005bc8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d5bd2
   140005bce:	or     DWORD PTR [rax],eax
   140005bd0:	or     eax,0x1500632
   140005bd5:	or     al,0x2
   140005bd7:	add    BYTE PTR [rcx+rax*1],cl
   140005bda:	adc    DWORD PTR [rax],eax
   140005bdc:	add    BYTE PTR [rax],al
   140005bde:	add    BYTE PTR [rax],al
   140005be0:	add    DWORD PTR [rax],eax
   140005be2:	add    BYTE PTR [rax],al
   140005be4:	add    DWORD PTR [rax],ebx
   140005be6:	add    DWORD PTR [rax],eax
   140005be8:	sbb    dl,al
   140005bea:	add    BYTE PTR [rax],al
   140005bec:	add    DWORD PTR [rcx],ebx
   140005bee:	or     al,BYTE PTR [rax]
   140005bf0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140005bf4:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140005bf8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140005bfc:	sbb    DWORD PTR [rsi+rax*1],esi
   140005bff:	add    BYTE PTR [rcx],bl
   140005c01:	xor    dl,BYTE PTR [rip+0xe0]        # 0x140005ce7
   140005c07:	add    al,ch
   140005c09:	pop    rsp
	...
   140005c12:	add    BYTE PTR [rax],al
   140005c14:	mov    edx,0x60
   140005c19:	push   rax
   140005c1a:	add    BYTE PTR [rax],al
   140005c1c:	cmp    BYTE PTR [rbp+0x0],bl
	...
   140005c27:	add    al,bh
   140005c29:	(bad)  
   140005c2a:	add    BYTE PTR [rax],al
   140005c2c:	push   rax
   140005c2d:	push   rax
   140005c2e:	add    BYTE PTR [rax],al
   140005c30:	cwde   
   140005c31:	pop    rsi
	...
   140005c3a:	add    BYTE PTR [rax],al
   140005c3c:	push   0xffffffffb0000063
   140005c41:	push   rcx
   140005c42:	add    BYTE PTR [rax],al
   140005c44:	rex.W pop rdi
	...
   140005c4e:	add    BYTE PTR [rax],al
   140005c50:	rex.W
   140005c51:	add    BYTE PTR fs:[rax],al
   140005c54:	(bad)  
   140005c55:	push   rdx
   140005c56:	add    BYTE PTR [rax],al
   140005c58:	sub    BYTE PTR [rbp+0x0],bl
	...
   140005c63:	add    BYTE PTR [rax+0x64],ch
   140005c66:	add    BYTE PTR [rax],al
   140005c68:	rex push rax
   140005c6a:	add    BYTE PTR [rax],al
   140005c6c:	loopne 0x140005ccd
	...
   140005c76:	add    BYTE PTR [rax],al
   140005c78:	fisub  WORD PTR [rax+rax*1+0x0]
   140005c7c:	clc    
   140005c7d:	push   rdx
   140005c7e:	add    BYTE PTR [rax],al
   140005c80:	push   rax
   140005c81:	pop    rsi
	...
   140005c8a:	add    BYTE PTR [rax],al
   140005c8c:	(bad)  
   140005c8d:	add    BYTE PTR fs:[rax],al
   140005c90:	push   0x60000051
   140005c95:	pop    rsi
	...
   140005c9e:	add    BYTE PTR [rax],al
   140005ca0:	pop    rsi
   140005ca1:	add    BYTE PTR gs:[rax],al
   140005ca4:	js     0x140005cf7
   140005ca6:	add    BYTE PTR [rax],al
   140005ca8:	adc    BYTE PTR [rax+0x0],ah
	...
   140005cb3:	add    dh,cl
   140005cb5:	add    BYTE PTR gs:[rax],al
   140005cb8:	sub    BYTE PTR [rbx+0x0],dl
   140005cbb:	add    BYTE PTR [rax],bh
   140005cbd:	pop    rsi
	...
   140005cc6:	add    BYTE PTR [rax],al
   140005cc8:	fsub   DWORD PTR [rbp+0x0]
   140005ccb:	add    BYTE PTR [rax+0x51],dl
	...
   140005ce6:	add    BYTE PTR [rax],al
   140005ce8:	push   rsp
   140005ce9:	(bad)  
   140005cea:	add    BYTE PTR [rax],al
   140005cec:	add    BYTE PTR [rax],al
   140005cee:	add    BYTE PTR [rax],al
   140005cf0:	push   0x60
   140005cf5:	add    BYTE PTR [rax],al
   140005cf7:	add    BYTE PTR [rax+0x60],bh
   140005cfa:	add    BYTE PTR [rax],al
   140005cfc:	add    BYTE PTR [rax],al
   140005cfe:	add    BYTE PTR [rax],al
   140005d00:	mov    WORD PTR [rax+0x0],fs
   140005d03:	add    BYTE PTR [rax],al
   140005d05:	add    BYTE PTR [rax],al
   140005d07:	add    BYTE PTR [rax+riz*2+0x0],bl
   140005d0e:	add    BYTE PTR [rax],al
   140005d10:	lods   al,BYTE PTR ds:[rsi]
   140005d11:	(bad)  
   140005d12:	add    BYTE PTR [rax],al
   140005d14:	add    BYTE PTR [rax],al
   140005d16:	add    BYTE PTR [rax],al
   140005d18:	rex (bad) 
	...
   140005d26:	add    BYTE PTR [rax],al
   140005d28:	adc    DWORD PTR [rax],eax
   140005d2a:	add    BYTE PTR [rax],al
   140005d2c:	add    BYTE PTR [rax],al
   140005d2e:	add    BYTE PTR [rax+0x0],al
   140005d34:	add    BYTE PTR [rax],al
   140005d36:	add    BYTE PTR [rax],al
   140005d38:	lock (bad) 
   140005d3a:	add    BYTE PTR [rax],al
   140005d3c:	add    BYTE PTR [rax],al
   140005d3e:	add    BYTE PTR [rax],al
   140005d40:	add    ah,BYTE PTR [rcx+0x0]
   140005d43:	add    BYTE PTR [rax],al
   140005d45:	add    BYTE PTR [rax],al
   140005d47:	add    BYTE PTR [rdx],dl
   140005d49:	(bad)  
   140005d4a:	add    BYTE PTR [rax],al
   140005d4c:	add    BYTE PTR [rax],al
   140005d4e:	add    BYTE PTR [rax],al
   140005d50:	and    BYTE PTR [rcx+0x0],ah
   140005d53:	add    BYTE PTR [rax],al
   140005d55:	add    BYTE PTR [rax],al
   140005d57:	add    BYTE PTR [rdx],dh
   140005d59:	(bad)  
   140005d5a:	add    BYTE PTR [rax],al
   140005d5c:	add    BYTE PTR [rax],al
   140005d5e:	add    BYTE PTR [rax],al
   140005d60:	rex.WRX (bad) 
   140005d62:	add    BYTE PTR [rax],al
   140005d64:	add    BYTE PTR [rax],al
   140005d66:	add    BYTE PTR [rax],al
   140005d68:	(bad)  
   140005d69:	(bad)  
   140005d6a:	add    BYTE PTR [rax],al
   140005d6c:	add    BYTE PTR [rax],al
   140005d6e:	add    BYTE PTR [rax],al
   140005d70:	jbe    0x140005dd3
   140005d72:	add    BYTE PTR [rax],al
   140005d74:	add    BYTE PTR [rax],al
   140005d76:	add    BYTE PTR [rax],al
   140005d78:	mov    WORD PTR [rcx+0x0],fs
   140005d7b:	add    BYTE PTR [rax],al
   140005d7d:	add    BYTE PTR [rax],al
   140005d7f:	add    BYTE PTR [rsi+0x61],dl
   140005d85:	add    BYTE PTR [rax],al
   140005d87:	add    BYTE PTR [rcx+riz*2+0x0],ch
   140005d8e:	add    BYTE PTR [rax],al
   140005d90:	mov    edx,0x61
   140005d95:	add    BYTE PTR [rax],al
   140005d97:	add    al,dl
   140005d99:	(bad)  
   140005d9a:	add    BYTE PTR [rax],al
   140005d9c:	add    BYTE PTR [rax],al
   140005d9e:	add    BYTE PTR [rax],al
   140005da0:	fsub   QWORD PTR [rcx+0x0]
   140005da3:	add    BYTE PTR [rax],al
   140005da5:	add    BYTE PTR [rax],al
   140005da7:	add    al,ah
   140005da9:	(bad)  
   140005daa:	add    BYTE PTR [rax],al
   140005dac:	add    BYTE PTR [rax],al
   140005dae:	add    BYTE PTR [rax],al
   140005db0:	adc    al,0x67
   140005db2:	add    BYTE PTR [rax],al
   140005db4:	add    BYTE PTR [rax],al
   140005db6:	add    BYTE PTR [rax],al
   140005db8:	add    al,0x67
   140005dba:	add    BYTE PTR [rax],al
   140005dbc:	add    BYTE PTR [rax],al
   140005dbe:	add    BYTE PTR [rax],al
   140005dc0:	out    0x66,al
   140005dc2:	add    BYTE PTR [rax],al
   140005dc4:	add    BYTE PTR [rax],al
   140005dc6:	add    BYTE PTR [rax],al
   140005dc8:	shl    BYTE PTR [rsi+0x0],cl
   140005dcb:	add    BYTE PTR [rax],al
   140005dcd:	add    BYTE PTR [rax],al
   140005dcf:	add    BYTE PTR [rsi+0x66],bh
   140005dd5:	add    BYTE PTR [rax],al
   140005dd7:	add    BYTE PTR [rdx+0x66],ah
   140005ddd:	add    BYTE PTR [rax],al
   140005ddf:	add    BYTE PTR [rdx+0x66],dl
   140005de5:	add    BYTE PTR [rax],al
   140005de7:	add    BYTE PTR [rax+0x66],bh
   140005dea:	add    BYTE PTR [rax],al
   140005dec:	add    BYTE PTR [rax],al
   140005dee:	add    BYTE PTR [rax],al
   140005df0:	(bad)  
   140005df1:	data16 add BYTE PTR [rax],al
   140005df4:	add    BYTE PTR [rax],al
   140005df6:	add    BYTE PTR [rax],al
   140005df8:	rex.WR
   140005df9:	data16 add BYTE PTR [rax],al
   140005dfc:	add    BYTE PTR [rax],al
   140005dfe:	add    BYTE PTR [rax],al
   140005e00:	xor    ah,BYTE PTR [rsi+0x0]
   140005e03:	add    BYTE PTR [rax],al
   140005e05:	add    BYTE PTR [rax],al
   140005e07:	add    BYTE PTR [rsi],bl
   140005e09:	data16 add BYTE PTR [rax],al
   140005e0c:	add    BYTE PTR [rax],al
   140005e0e:	add    BYTE PTR [rax],al
   140005e10:	add    BYTE PTR [rsi+0x0],ah
   140005e13:	add    BYTE PTR [rax],al
   140005e15:	add    BYTE PTR [rax],al
   140005e17:	add    dh,ch
   140005e19:	add    BYTE PTR gs:[rax],al
   140005e1c:	add    BYTE PTR [rax],al
   140005e1e:	add    BYTE PTR [rax],al
   140005e20:	out    0x65,al
   140005e22:	add    BYTE PTR [rax],al
   140005e24:	add    BYTE PTR [rax],al
   140005e26:	add    BYTE PTR [rax],al
   140005e28:	enter  0x60,0x0
	...
   140005e38:	(bad)  
   140005e39:	add    BYTE PTR [rax],al
   140005e3b:	add    BYTE PTR [rax],al
   140005e3d:	add    BYTE PTR [rax],al
   140005e3f:	add    BYTE PTR [rdx],0x0
   140005e42:	add    BYTE PTR [rax],al
   140005e44:	add    BYTE PTR [rax],al
   140005e46:	add    BYTE PTR [rax+0x0],al
   140005e4c:	add    BYTE PTR [rax],al
   140005e4e:	add    BYTE PTR [rax],al
   140005e50:	call   0x140005eb9
	...
   140005e5d:	add    BYTE PTR [rax],al
   140005e5f:	add    BYTE PTR [rax+0x65],dl
   140005e62:	add    BYTE PTR [rax],al
   140005e64:	add    BYTE PTR [rax],al
   140005e66:	add    BYTE PTR [rax],al
   140005e68:	xor    BYTE PTR [rbp+0x0],ah
   140005e6b:	add    BYTE PTR [rax],al
   140005e6d:	add    BYTE PTR [rax],al
   140005e6f:	add    BYTE PTR [rsi],bl
   140005e71:	add    BYTE PTR gs:[rax],al
   140005e74:	add    BYTE PTR [rax],al
   140005e76:	add    BYTE PTR [rax],al
   140005e78:	or     ah,BYTE PTR [rbp+0x0]
   140005e7b:	add    BYTE PTR [rax],al
   140005e7d:	add    BYTE PTR [rax],al
   140005e7f:	add    BYTE PTR [rdx],bh
   140005e81:	add    BYTE PTR gs:[rax],al
   140005e84:	add    BYTE PTR [rax],al
   140005e86:	add    BYTE PTR [rax],al
   140005e88:	out    0x1,eax
   140005e8a:	add    BYTE PTR [rax],al
   140005e8c:	add    BYTE PTR [rax],al
   140005e8e:	add    BYTE PTR [rax+0x0],al
   140005e94:	add    BYTE PTR [rax],al
   140005e96:	add    BYTE PTR [rax],al
   140005e98:	or     al,0x63
   140005e9a:	add    BYTE PTR [rax],al
   140005e9c:	add    BYTE PTR [rax],al
   140005e9e:	add    BYTE PTR [rax],al
   140005ea0:	and    BYTE PTR [rbx+0x0],ah
   140005ea3:	add    BYTE PTR [rax],al
   140005ea5:	add    BYTE PTR [rax],al
   140005ea7:	add    BYTE PTR [rsi],dh
   140005ea9:	movsxd eax,DWORD PTR [rax]
   140005eab:	add    BYTE PTR [rax],al
   140005ead:	add    BYTE PTR [rax],al
   140005eaf:	add    ah,bh
   140005eb1:	(bad)  
   140005eb2:	add    BYTE PTR [rax],al
   140005eb4:	add    BYTE PTR [rax],al
   140005eb6:	add    BYTE PTR [rax],al
   140005eb8:	sub    BYTE PTR [rdx+0x0],ah
   140005ebb:	add    BYTE PTR [rax],al
   140005ebd:	add    BYTE PTR [rax],al
   140005ebf:	add    BYTE PTR [rsi],dl
   140005ec1:	(bad)  
   140005ec2:	add    BYTE PTR [rax],al
   140005ec4:	add    BYTE PTR [rax],al
   140005ec6:	add    BYTE PTR [rax],al
   140005ec8:	(bad)  
   140005ec9:	(bad)  
   140005eca:	add    BYTE PTR [rax],al
   140005ecc:	add    BYTE PTR [rax],al
   140005ece:	add    BYTE PTR [rax],al
   140005ed0:	(bad)  
   140005ed1:	(bad)  
   140005ed2:	add    BYTE PTR [rax],al
   140005ed4:	add    BYTE PTR [rax],al
   140005ed6:	add    BYTE PTR [rax],al
   140005ed8:	(bad)
   140005edc:	add    BYTE PTR [rax],al
   140005ede:	add    BYTE PTR [rax],al
   140005ee0:	mov    dl,0x62
   140005ee2:	add    BYTE PTR [rax],al
   140005ee4:	add    BYTE PTR [rax],al
   140005ee6:	add    BYTE PTR [rax],al
   140005ee8:	movabs ds:0x9400000000000062,al
   140005ef1:	(bad)  
   140005ef2:	add    BYTE PTR [rax],al
   140005ef4:	add    BYTE PTR [rax],al
   140005ef6:	add    BYTE PTR [rax],al
   140005ef8:	mov    BYTE PTR [rdx+0x0],ah
   140005efb:	add    BYTE PTR [rax],al
   140005efd:	add    BYTE PTR [rax],al
   140005eff:	add    BYTE PTR [rsi+0x62],dh
   140005f02:	add    BYTE PTR [rax],al
   140005f04:	add    BYTE PTR [rax],al
   140005f06:	add    BYTE PTR [rax],al
   140005f08:	push   0x62
   140005f0d:	add    BYTE PTR [rax],al
   140005f0f:	add    BYTE PTR [rdx+0x62],bl
   140005f12:	add    BYTE PTR [rax],al
   140005f14:	add    BYTE PTR [rax],al
   140005f16:	add    BYTE PTR [rax],al
   140005f18:	rex.RX (bad) 
   140005f1a:	add    BYTE PTR [rax],al
   140005f1c:	add    BYTE PTR [rax],al
   140005f1e:	add    BYTE PTR [rax],al
   140005f20:	rex.RX movsxd r8d,DWORD PTR [rax]
   140005f23:	add    BYTE PTR [rax],al
   140005f25:	add    BYTE PTR [rax],al
   140005f27:	add    BYTE PTR [rsi],dh
   140005f29:	(bad)  
   140005f2a:	add    BYTE PTR [rax],al
   140005f2c:	add    BYTE PTR [rax],al
   140005f2e:	add    BYTE PTR [rax],al
   140005f30:	pop    rdx
   140005f31:	movsxd eax,DWORD PTR [rax]
   140005f33:	add    BYTE PTR [rax],al
   140005f35:	add    BYTE PTR [rax],al
   140005f37:	add    BYTE PTR [rsi],al
   140005f39:	(bad)  
	...
   140005f46:	add    BYTE PTR [rax],al
   140005f48:	and    BYTE PTR [rbx+0x0],0x0
   140005f4c:	add    BYTE PTR [rax],al
   140005f4e:	add    BYTE PTR [rax],al
   140005f50:	mov    ah,BYTE PTR [rbx+0x0]
   140005f53:	add    BYTE PTR [rax],al
   140005f55:	add    BYTE PTR [rax],al
   140005f57:	add    BYTE PTR [rbx+riz*2+0x0],dh
   140005f5b:	add    BYTE PTR [rax],al
   140005f5d:	add    BYTE PTR [rax],al
   140005f5f:	add    BYTE PTR [rdx],ah
   140005f61:	add    BYTE PTR [eax],al
   140005f64:	add    BYTE PTR [rax],al
   140005f66:	add    BYTE PTR [rax],al
   140005f68:	cwde   
   140005f69:	movsxd eax,DWORD PTR [rax]
   140005f6b:	add    BYTE PTR [rax],al
   140005f6d:	add    BYTE PTR [rax],al
   140005f6f:	add    BYTE PTR [rsi+0x63],ah
   140005f75:	add    BYTE PTR [rax],al
   140005f77:	add    BYTE PTR [rsi+0x63],dh
   140005f7d:	add    BYTE PTR [rax],al
   140005f7f:	add    BYTE PTR [rsp+riz*2+0x0],dl
   140005f83:	add    BYTE PTR [rax],al
   140005f85:	add    BYTE PTR [rax],al
   140005f87:	add    BYTE PTR [rsp+riz*2],bh
   140005f8a:	add    BYTE PTR [rax],al
   140005f8c:	add    BYTE PTR [rax],al
   140005f8e:	add    BYTE PTR [rax],al
   140005f90:	xor    ah,BYTE PTR [rax+rax*1+0x0]
   140005f94:	add    BYTE PTR [rax],al
   140005f96:	add    BYTE PTR [rax],al
   140005f98:	sub    BYTE PTR [rax+rax*1+0x0],ah
   140005f9c:	add    BYTE PTR [rax],al
   140005f9e:	add    BYTE PTR [rax],al
   140005fa0:	adc    BYTE PTR [rax+rax*1+0x0],ah
   140005fa4:	add    BYTE PTR [rax],al
   140005fa6:	add    BYTE PTR [rax],al
   140005fa8:	add    al,0x64
   140005faa:	add    BYTE PTR [rax],al
   140005fac:	add    BYTE PTR [rax],al
   140005fae:	add    BYTE PTR [rax],al
   140005fb0:	lock movsxd eax,DWORD PTR [rax]
   140005fb3:	add    BYTE PTR [rax],al
   140005fb5:	add    BYTE PTR [rax],al
   140005fb7:	add    dl,ah
   140005fb9:	movsxd eax,DWORD PTR [rax]
   140005fbb:	add    BYTE PTR [rax],al
   140005fbd:	add    BYTE PTR [rax],al
   140005fbf:	add    al,bl
   140005fc1:	movsxd eax,DWORD PTR [rax]
   140005fc3:	add    BYTE PTR [rax],al
   140005fc5:	add    BYTE PTR [rax],al
   140005fc7:	add    al,dl
   140005fc9:	movsxd eax,DWORD PTR [rax]
   140005fcb:	add    BYTE PTR [rax],al
   140005fcd:	add    BYTE PTR [rax],al
   140005fcf:	add    al,cl
   140005fd1:	movsxd eax,DWORD PTR [rax]
	...
   140005fdf:	add    BYTE PTR [rsp+riz*2+0x0],bl
   140005fe6:	add    BYTE PTR [rax],al
   140005fe8:	jbe    0x14000604e
   140005fea:	add    BYTE PTR [rax],al
   140005fec:	add    BYTE PTR [rax],al
   140005fee:	add    BYTE PTR [rax],al
   140005ff0:	mov    al,0x64
   140005ff2:	add    BYTE PTR [rax],al
   140005ff4:	add    BYTE PTR [rax],al
   140005ff6:	add    BYTE PTR [rax],al
   140005ff8:	retf   0x64
   140005ffb:	add    BYTE PTR [rax],al
   140005ffd:	add    BYTE PTR [rax],al
   140005fff:	add    BYTE PTR [rax+0x64],cl
	...
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    BYTE PTR [rsi+0x65],bl
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rdx+0x65],dh
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rbp+riz*2+0x0],bh
   140006023:	add    BYTE PTR [rax],al
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    BYTE PTR [rdx+0x65],ch
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	add    BYTE PTR [rax],al
   14000602e:	add    BYTE PTR [rax],al
   140006030:	mov    fs,WORD PTR [rbp+0x0]
	...
   14000603f:	add    BYTE PTR [rdx+0x67655202],dl
   140006045:	push   rcx
   140006046:	jne    0x1400060ad
   140006048:	jb     0x1400060c3
   14000604a:	push   rsi
   14000604b:	(bad)  
   14000604c:	ins    BYTE PTR es:[rdi],dx
   14000604d:	jne    0x1400060b4
   14000604f:	rex.RB js 0x140006093
   140006052:	add    BYTE PTR [rax],al
   140006054:	xchg   ebx,eax
   140006055:	add    dl,BYTE PTR [rdx+0x65]
   140006058:	addr32 push rcx
   14000605a:	jne    0x1400060c1
   14000605c:	jb     0x1400060d7
   14000605e:	push   rsi
   14000605f:	(bad)  
   140006060:	ins    BYTE PTR es:[rdi],dx
   140006061:	jne    0x1400060c8
   140006063:	rex.RB js 0x1400060bd
   140006066:	add    BYTE PTR [rax],al
   140006068:	test   DWORD PTR [rdx],eax
   14000606a:	push   rdx
   14000606b:	gs addr32 rex.WRXB jo 0x1400060d5
   140006070:	outs   dx,BYTE PTR ds:[rsi]
   140006071:	rex.WXB
   140006072:	gs jns 0x1400060ba
   140006075:	js     0x1400060b8
   140006077:	add    BYTE PTR [rdx+rax*1+0x51676552],cl
   14000607e:	jne    0x1400060e5
   140006080:	jb     0x1400060fb
   140006082:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006084:	outs   dx,WORD PTR ds:[rsi]
   140006086:	rex.WXB
   140006087:	gs jns 0x1400060cb
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	xchg   BYTE PTR [rdx],al
   14000608e:	push   rdx
   14000608f:	gs addr32 rex.WRXB jo 0x1400060f9
   140006094:	outs   dx,BYTE PTR ds:[rsi]
   140006095:	rex.WXB
   140006096:	gs jns 0x1400060de
   140006099:	js     0x1400060f2
   14000609b:	add    BYTE PTR [rdx+rax*1+0x52],dh
   14000609f:	rex.RB outs dx,BYTE PTR gs:[esi]
   1400060a3:	jne    0x140006112
   1400060a5:	rex.WXB
   1400060a6:	gs jns 0x1400060ee
   1400060a9:	js     0x140006102
   1400060ab:	add    BYTE PTR [rbp+0x2],dl
   1400060ae:	push   rdx
   1400060af:	gs rex.XB ins BYTE PTR es:[edi],dx
   1400060b3:	outs   dx,DWORD PTR ds:[rsi]
   1400060b4:	jae    0x14000611b
   1400060b6:	rex.WXB
   1400060b7:	gs jns 0x1400060ba
   1400060ba:	rex.B
   1400060bb:	rex.R push rsi
   1400060bd:	push   r8
   1400060bf:	xor    rsi,QWORD PTR [r10]
   1400060c2:	cs fs ins BYTE PTR es:[rdi],dx
   1400060c5:	ins    BYTE PTR es:[rdi],dx
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	nop
   1400060c9:	add    BYTE PTR [rbx+0x6f],al
   1400060cc:	ins    DWORD PTR es:[rdi],dx
   1400060cd:	jo     0x140006130
   1400060cf:	jb     0x140006136
   1400060d1:	push   rbx
   1400060d2:	je     0x140006146
   1400060d4:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   1400060db:	outs   dx,BYTE PTR ds:[rsi]
   1400060dc:	(bad)  
   1400060dd:	ins    BYTE PTR es:[rdi],dx
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	push   rdi
   1400060e1:	add    al,BYTE PTR [rdi+0x65]
   1400060e4:	je     0x140006132
   1400060e6:	(bad)  
   1400060e7:	jae    0x14000615d
   1400060e9:	rex.RB jb 0x14000615e
   1400060ec:	outs   dx,DWORD PTR ds:[rsi]
   1400060ed:	jb     0x1400060ef
   1400060ef:	add    BYTE PTR [rbp+0x74654702],ah
   1400060f5:	push   rax
   1400060f6:	jb     0x140006167
   1400060f8:	movsxd eax,DWORD PTR [rcx+0x64]
   1400060fb:	fs jb  0x140006163
   1400060fe:	jae    0x140006173
   140006100:	add    BYTE PTR [rax],al
   140006102:	lods   al,BYTE PTR ds:[rsi]
   140006103:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140006107:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   140006110:	add    BYTE PTR [rax],al
   140006112:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006113:	add    DWORD PTR [rsi+0x72],eax
   140006116:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140006120:	rol    BYTE PTR [rcx],1
   140006122:	rex.RXB
   140006123:	gs je  0x140006169
   140006126:	outs   dx,DWORD PTR ds:[rsi]
   140006127:	ins    DWORD PTR es:[rdi],dx
   140006128:	ins    DWORD PTR es:[rdi],dx
   140006129:	(bad)  
   14000612a:	outs   dx,BYTE PTR ds:[rsi]
   14000612b:	imul   r13,QWORD PTR fs:[rsi+0x65],0x15a0057
   140006134:	rex.RB js 0x1400061a7
   140006137:	(bad)  
   140006138:	outs   dx,BYTE PTR ds:[rsi]
   140006139:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000613c:	jbe    0x1400061a7
   14000613e:	jb     0x1400061af
   140006140:	outs   dx,BYTE PTR ds:[rsi]
   140006141:	ins    DWORD PTR es:[rdi],dx
   140006142:	outs   dx,BYTE PTR gs:[rsi]
   140006144:	je     0x140006199
   140006146:	je     0x1400061ba
   140006148:	imul   ebp,DWORD PTR [rsi+0x67],0x9f004173
   14000614f:	add    DWORD PTR [rsi+0x6f],eax
   140006152:	jb     0x1400061c1
   140006154:	(bad)  
   140006155:	je     0x1400061a4
   140006157:	gs jae 0x1400061cd
   14000615a:	(bad)  
   14000615b:	add    BYTE PTR gs:[r8d],al
   140006160:	in     al,dx
   140006161:	add    eax,0x65646957
   140006166:	rex.XB push 0x6f547261
   14000616c:	rex.WRB jne 0x1400061db
   14000616f:	je     0x1400061da
   140006171:	rex.X jns 0x1400061e8
   140006174:	add    BYTE PTR gs:[rax],bh
   140006177:	add    al,BYTE PTR [rdi+0x65]
   14000617a:	je     0x1400061c2
   14000617c:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140006184:	(bad)  
   140006185:	jne    0x1400061fb
   140006187:	gs jae 0x1400061cb
   14000618a:	add    BYTE PTR [rax],al
   14000618c:	stos   DWORD PTR es:[rdi],eax
   14000618d:	add    DWORD PTR [rdi+0x65],eax
   140006190:	je     0x1400061d3
   140006192:	rex.XB push r8
   140006194:	add    BYTE PTR [rax],al
   140006196:	fadd   DWORD PTR [rbx]
   140006198:	rex.WRB jne 0x140006207
   14000619b:	je     0x140006206
   14000619d:	rex.X jns 0x140006214
   1400061a0:	gs push rsp
   1400061a2:	outs   dx,DWORD PTR ds:[rsi]
   1400061a3:	push   rdi
   1400061a4:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   1400061ac:	mov    ch,0x3
   1400061ae:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400061b0:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400061b3:	rex.B ins BYTE PTR es:[rdi],dx
   1400061b5:	ins    BYTE PTR es:[rdi],dx
   1400061b6:	outs   dx,DWORD PTR ds:[rsi]
   1400061b7:	movsxd eax,DWORD PTR [rax]
   1400061b9:	add    BYTE PTR [rbx+rax*1+0x48],al
   1400061bd:	gs (bad) 
   1400061bf:	jo     0x140006214
   1400061c1:	gs je  0x14000620d
   1400061c4:	outs   dx,BYTE PTR ds:[rsi]
   1400061c5:	outs   dx,WORD PTR ds:[rsi]
   1400061c7:	jb     0x140006236
   1400061c9:	(bad)  
   1400061ca:	je     0x140006235
   1400061cc:	outs   dx,DWORD PTR ds:[rsi]
   1400061cd:	outs   dx,BYTE PTR ds:[rsi]
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	mov    ecx,0x636f4c03
   1400061d5:	(bad)  
   1400061d6:	ins    BYTE PTR es:[rdi],dx
   1400061d7:	rex.RX jb 0x14000623f
   1400061da:	add    BYTE PTR gs:[rbx+0x1],bl
   1400061de:	rex.RB js 0x140006251
   1400061e1:	(bad)  
   1400061e2:	outs   dx,BYTE PTR ds:[rsi]
   1400061e3:	rex.RB outs dx,BYTE PTR fs:[rsi]
   1400061e6:	jbe    0x140006251
   1400061e8:	jb     0x140006259
   1400061ea:	outs   dx,BYTE PTR ds:[rsi]
   1400061eb:	ins    DWORD PTR es:[rdi],dx
   1400061ec:	outs   dx,BYTE PTR gs:[rsi]
   1400061ee:	je     0x140006243
   1400061f0:	je     0x140006264
   1400061f2:	imul   ebp,DWORD PTR [rsi+0x67],0x4b005773
   1400061f9:	rex.RB push r10
   1400061fb:	rex.WRX
   1400061fc:	rex.RB
   1400061fd:	xor    r14,QWORD PTR [rdx]
   140006200:	cs fs ins BYTE PTR es:[rdi],dx
   140006203:	ins    BYTE PTR es:[rdi],dx
   140006204:	add    BYTE PTR [rax],al
   140006206:	out    0x0,al
   140006208:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000620a:	(bad)  
   14000620b:	(bad)  
   14000620c:	ins    BYTE PTR es:[rdi],dx
   14000620d:	gs push rdi
   14000620f:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140006216:	cli    
   140006217:	add    dl,BYTE PTR [rbx+0x65]
   14000621a:	je     0x140006260
   14000621c:	ins    BYTE PTR es:[rdi],dx
   14000621d:	addr32 rex.WB je 0x140006286
   140006221:	ins    DWORD PTR es:[rdi],dx
   140006222:	push   rsp
   140006223:	gs js  0x14000629a
   140006226:	push   rdi
   140006227:	add    BYTE PTR [rax+0x2],ah
   14000622a:	rex.WRB
   14000622b:	gs jae 0x1400062a1
   14000622e:	(bad)  
   14000622f:	rex.X outs dx,DWORD PTR gs:[esi]
   140006233:	js     0x14000628c
   140006235:	add    BYTE PTR [rdx+0x736f5002],al
   14000623b:	je     0x14000628a
   14000623d:	gs jae 0x1400062b3
   140006240:	(bad)  
   140006241:	add    BYTE PTR gs:[r8d],al
   140006246:	(bad)  
   140006247:	add    edx,DWORD PTR [rbx+0x65]
   14000624a:	je     0x1400062a3
   14000624c:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140006253:	outs   dx,BYTE PTR ds:[rsi]
   140006254:	addr32 push rax
   140006256:	je     0x1400062ca
   140006258:	add    BYTE PTR [r11+rax*1+0x53],cl
   14000625d:	push   0x6957776f
   140006262:	outs   dx,BYTE PTR ds:[rsi]
   140006263:	outs   dx,DWORD PTR fs:[rsi]
   140006265:	ja     0x140006267
   140006267:	add    BYTE PTR [rbx+0x2],al
   14000626a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000626c:	(bad)  
   14000626d:	fs push rbx
   14000626f:	je     0x1400062e3
   140006271:	imul   ebp,DWORD PTR [rsi+0x67],0xa10057
   140006278:	rex.R
   140006279:	gs push di
   14000627c:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   140006283:	outs   dx,DWORD PTR ds:[rsi]
   140006284:	movsxd eax,DWORD PTR [rcx+0x0]
   140006287:	add    cl,ch
   140006289:	add    BYTE PTR [rbp+0x6e],al
   14000628c:	imul   r12d,DWORD PTR fs:[rcx+0x6c],0x4000676f
   140006295:	add    DWORD PTR [rdi+0x65],eax
   140006298:	je     0x1400062de
   14000629a:	ins    BYTE PTR es:[rdi],dx
   14000629b:	addr32 rex.WB je 0x140006304
   14000629f:	ins    DWORD PTR es:[rdi],dx
   1400062a0:	add    BYTE PTR [rax],al
   1400062a2:	fld    QWORD PTR [rdx]
   1400062a4:	push   rbx
   1400062a5:	outs   dx,BYTE PTR gs:[rsi]
   1400062a7:	fs rex.WRB
   1400062a9:	gs jae 0x14000631f
   1400062ac:	(bad)  
   1400062ad:	add    BYTE PTR gs:[r8d],al
   1400062b2:	and    eax,0x57734902
   1400062b7:	imul   ebp,DWORD PTR [rsi+0x64],0x6e45776f
   1400062be:	(bad)  
   1400062bf:	(bad)  
   1400062c0:	ins    BYTE PTR es:[rdi],dx
   1400062c1:	gs add BYTE PTR fs:[rbx+0x61694400],dh
   1400062c9:	ins    BYTE PTR es:[rdi],dx
   1400062ca:	outs   dx,DWORD PTR ds:[rsi]
   1400062cb:	rex.X outs dx,DWORD PTR ds:[esi]
   1400062ce:	js     0x140006320
   1400062d0:	(bad)  
   1400062d1:	jb     0x140006334
   1400062d3:	ins    DWORD PTR es:[rdi],dx
   1400062d4:	push   rdi
   1400062d5:	add    ah,cl
   1400062d7:	add    DWORD PTR [rdi+0x65],eax
   1400062da:	je     0x140006333
   1400062dc:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   1400062e3:	outs   dx,BYTE PTR ds:[rsi]
   1400062e4:	addr32 push rax
   1400062e6:	je     0x14000635a
   1400062e8:	add    r9b,dil
   1400062eb:	add    dl,BYTE PTR [rbx+0x65]
   1400062ee:	je     0x140006334
   1400062f0:	ins    BYTE PTR es:[rdi],dx
   1400062f1:	addr32 rex.WB je 0x14000635a
   1400062f5:	ins    DWORD PTR es:[rdi],dx
   1400062f6:	push   rsp
   1400062f7:	gs js  0x14000636e
   1400062fa:	add    r10b,spl
   1400062fd:	add    dl,BYTE PTR [rbx+0x65]
   140006300:	outs   dx,BYTE PTR ds:[rsi]
   140006301:	fs rex.WRB
   140006303:	gs jae 0x140006379
   140006306:	(bad)  
   140006307:	addr32 gs push rdi
   14000630a:	add    BYTE PTR [rax],al
   14000630c:	mov    ch,0x0
   14000630e:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140006316:	rex.WRB
   140006317:	gs jae 0x14000638d
   14000631a:	(bad)  
   14000631b:	add    BYTE PTR gs:[r8d],al
   140006320:	adc    BYTE PTR [rdx],al
   140006322:	rex.WB jae 0x140006369
   140006325:	ins    BYTE PTR es:[rdi],dx
   140006326:	addr32 rex.X jne 0x14000639e
   14000632a:	je     0x14000639b
   14000632c:	outs   dx,BYTE PTR ds:[rsi]
   14000632d:	rex.XB push 0x656b6365
   140006333:	add    BYTE PTR fs:[rax],al
   140006336:	jle    0x14000633a
   140006338:	push   rax
   140006339:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   14000633f:	jae    0x1400063a2
   140006341:	add    BYTE PTR gs:[r8d],al
   140006346:	imul   eax,DWORD PTR [rbx],0x54
   140006349:	jb     0x1400063ac
   14000634b:	outs   dx,BYTE PTR ds:[rsi]
   14000634c:	jae    0x1400063ba
   14000634e:	(bad)  
   14000634f:	je     0x1400063b6
   140006351:	rex.WRB
   140006352:	gs jae 0x1400063c8
   140006355:	(bad)  
   140006356:	add    BYTE PTR gs:[eax],al
   14000635a:	add    cl,BYTE PTR [rdi+r13*2+0x61]
   14000635f:	fs push rbx
   140006361:	je     0x1400063d5
   140006363:	imul   ebp,DWORD PTR [rsi+0x67],0x53550041
   14000636a:	rex.RB push r10
   14000636c:	xor    esi,DWORD PTR [rdx]
   14000636e:	cs fs ins BYTE PTR es:[rdi],dx
   140006371:	ins    BYTE PTR es:[rdi],dx
   140006372:	add    BYTE PTR [rax],al
   140006374:	add    al,0x3
   140006376:	pop    rdi
   140006377:	jae    0x1400063ed
   140006379:	jb     0x1400063e9
   14000637b:	imul   esp,DWORD PTR [rbx+0x6d],0x4ea0070
   140006382:	je     0x1400063f3
   140006384:	jne    0x1400063f6
   140006386:	jo     0x1400063ed
   140006388:	jb     0x14000638a
   14000638a:	push   rbp
   14000638b:	add    BYTE PTR [rdi+0x58],bl
   14000638e:	movsxd esi,DWORD PTR [rax+0x74]
   140006391:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000639a:	pop    rdi
   14000639b:	(bad)  
   14000639c:	ins    DWORD PTR es:[rdi],dx
   14000639d:	jae    0x140006406
   14000639f:	pop    rdi
   1400063a0:	gs js  0x14000640c
   1400063a3:	je     0x1400063a5
   1400063a5:	add    BYTE PTR [rdi+0x0],bh
   1400063a8:	pop    rdi
   1400063a9:	pop    rdi
   1400063aa:	addr32 gs je 0x14000641b
   1400063ae:	(bad)  
   1400063af:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400063b6:	mov    es,WORD PTR [rax]
   1400063b8:	pop    rdi
   1400063b9:	pop    rdi
   1400063ba:	jae    0x140006421
   1400063bc:	je     0x14000641d
   1400063be:	(bad)  
   1400063bf:	jo     0x140006431
   1400063c1:	pop    rdi
   1400063c2:	je     0x14000643d
   1400063c4:	jo     0x14000642b
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	xor    al,BYTE PTR [riz*2+0x746978]
   1400063cf:	add    BYTE PTR [rsi],cl
   1400063d1:	add    DWORD PTR [rdi+0x65],ebx
   1400063d4:	js     0x14000643f
   1400063d6:	je     0x1400063d8
   1400063d8:	rol    DWORD PTR [rax],0x5f
   1400063db:	movsxd esp,DWORD PTR [rbp+0x78]
   1400063de:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   1400063e6:	jae    0x140006455
   1400063e8:	(bad)
   1400063ed:	add    BYTE PTR fs:[rax],al
   1400063f0:	nop
   1400063f1:	add    BYTE PTR [rdi+0x5f],bl
   1400063f4:	jae    0x14000645b
   1400063f6:	je     0x14000646d
   1400063f8:	jae    0x14000645f
   1400063fa:	jb     0x140006469
   1400063fc:	(bad)  
   1400063fd:	je     0x140006467
   1400063ff:	gs jb  0x140006474
   140006402:	add    BYTE PTR [rax],al
   140006404:	jge    0x140006407
   140006406:	pop    rdi
   140006407:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000640e:	ins    DWORD PTR es:[rdi],dx
   14000640f:	add    BYTE PTR [rdi+0x0],dl
   140006412:	pop    rdi
   140006413:	pop    rdi
   140006414:	rex.XB pop r15
   140006416:	jae    0x140006488
   140006418:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000641c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140006423:	ins    BYTE PTR es:[rdi],dx
   140006424:	gs jb  0x140006427
   140006427:	add    BYTE PTR [rdx+0x63615f00],ah
   14000642d:	ins    DWORD PTR es:[rdi],dx
   14000642e:	fs ins BYTE PTR es:[rdi],dx
   140006430:	outs   dx,BYTE PTR ds:[rsi]
   140006431:	add    BYTE PTR [rdi],ah
   140006433:	add    DWORD PTR [rdi+0x66],ebx
   140006436:	ins    DWORD PTR es:[rdi],dx
   140006437:	outs   dx,DWORD PTR ds:[rsi]
   140006438:	fs add BYTE PTR gs:[rax],al
   14000643c:	rol    BYTE PTR [rax],cl
   14000643e:	pop    rdi
   14000643f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140006442:	ins    DWORD PTR es:[rdi],dx
   140006443:	outs   dx,DWORD PTR ds:[rsi]
   140006444:	fs add BYTE PTR gs:[rax],al
   140006448:	ins    DWORD PTR es:[rdi],dx
   140006449:	jae    0x1400064c1
   14000644b:	movsxd esi,DWORD PTR [rdx+0x74]
   14000644e:	cs fs ins BYTE PTR es:[rdi],dx
   140006451:	ins    BYTE PTR es:[rdi],dx
   140006452:	add    BYTE PTR [rax],al
   140006454:	(bad)  
   140006455:	add    BYTE PTR [rdi],bh
   140006457:	je     0x1400064be
   140006459:	jb     0x1400064c8
   14000645b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140006462:	pop    rcx
   140006463:	pop    r8
   140006465:	pop    rax
   140006466:	pop    rdx
   140006467:	add    BYTE PTR [rbx+0x4f],al
   14000646a:	rex.WRB
   14000646b:	rex.XB push r12
   14000646d:	xor    r14,QWORD PTR [rdx]
   140006470:	cs fs ins BYTE PTR es:[rdi],dx
   140006473:	ins    BYTE PTR es:[rdi],dx
   140006474:	add    BYTE PTR [rax],al
   140006476:	xor    al,0x6
   140006478:	push   rdi
   140006479:	imul   ebp,DWORD PTR [rsi+0x53],0x65536d71
   140006480:	je     0x1400064c6
   140006482:	push   rdi
   140006483:	rex.WRXB push r10
   140006485:	add    BYTE PTR [rax],r8b
   140006488:	and    BYTE PTR [rsi],al
   14000648a:	push   rdi
   14000648b:	imul   ebp,DWORD PTR [rsi+0x53],0x64416d71
   140006492:	fs push rsp
   140006494:	outs   dx,DWORD PTR ds:[rsi]
   140006495:	push   rbx
   140006496:	je     0x14000650a
   140006498:	gs (bad) 
   14000649a:	ins    DWORD PTR es:[rdi],dx
   14000649b:	add    dh,al
   14000649d:	add    dl,BYTE PTR [rdx+0x74]
   1400064a0:	ins    BYTE PTR es:[rdi],dx
   1400064a1:	rex.XB (bad) 
   1400064a3:	jo     0x140006519
   1400064a5:	jne    0x140006519
   1400064a7:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400064aa:	outs   dx,BYTE PTR ds:[rsi]
   1400064ab:	je     0x140006512
   1400064ad:	js     0x140006523
   1400064af:	add    BYTE PTR [rdi+0x4],dh
   1400064b2:	push   rdx
   1400064b3:	je     0x140006521
   1400064b5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400064b7:	outs   dx,DWORD PTR ds:[rsi]
   1400064b8:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400064bc:	jne    0x14000652c
   1400064be:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400064c2:	outs   dx,BYTE PTR ds:[rsi]
   1400064c3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400064c5:	je     0x140006539
   1400064c7:	jns    0x1400064c9
   1400064c9:	add    BYTE PTR [rbx+0x6c745205],cl
   1400064cf:	push   rsi
   1400064d0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400064d7:	outs   dx,BYTE PTR ds:[rsi]
   1400064d8:	ja     0x140006543
   1400064da:	outs   dx,BYTE PTR ds:[rsi]
   1400064db:	add    BYTE PTR fs:[rax],al
   1400064de:	outs   dx,BYTE PTR ds:[rsi]
   1400064df:	je     0x140006545
   1400064e1:	ins    BYTE PTR es:[rdi],dx
   1400064e2:	ins    BYTE PTR es:[rdi],dx
   1400064e3:	cs fs ins BYTE PTR es:[rdi],dx
   1400064e6:	ins    BYTE PTR es:[rdi],dx
   1400064e7:	add    BYTE PTR [rdi],al
   1400064e9:	add    BYTE PTR [rbx+0x6f],al
   1400064ec:	ins    DWORD PTR es:[rdi],dx
   1400064ed:	ins    DWORD PTR es:[rdi],dx
   1400064ee:	(bad)  
   1400064ef:	outs   dx,BYTE PTR ds:[rsi]
   1400064f0:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   1400064f9:	addr32 jbe 0x140006553
   1400064fc:	add    BYTE PTR [rax],al
   1400064fe:	push   rbx
   1400064ff:	rex.W
   140006500:	rex.RB
   140006501:	rex.WR
   140006502:	xor    r14,QWORD PTR [rdx]
   140006505:	cs fs ins BYTE PTR es:[rdi],dx
   140006508:	ins    BYTE PTR es:[rdi],dx
   140006509:	add    BYTE PTR [rax+rax*1+0x50],cl
   14000650d:	(bad)  
   14000650e:	je     0x140006578
   140006510:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x656c6946
   140006518:	rex.WRX (bad) 
   14000651a:	ins    DWORD PTR es:[rdi],dx
   14000651b:	gs add r9b,bl
   14000651f:	add    BYTE PTR [rbx+0x48],dl
   140006522:	push   rcx
   140006523:	jne    0x14000658a
   140006525:	jb     0x1400065a0
   140006527:	push   rsi
   140006528:	(bad)  
   140006529:	ins    BYTE PTR es:[rdi],dx
   14000652a:	jne    0x140006591
   14000652c:	rex.RB js 0x140006570
   14000652f:	add    BYTE PTR [rip+0x72745301],ch        # 0x1b274b836
   140006535:	rex.XB ins DWORD PTR es:[rdi],dx
   140006537:	jo     0x140006590
   140006539:	add    BYTE PTR [rsi+0x74615000],cl
   14000653f:	push   0x6f6d6552
   140006544:	jbe    0x1400065ab
   140006546:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x41636570
   14000654f:	add    BYTE PTR [rsi],dh
   140006551:	add    BYTE PTR [rax+0x61],dl
   140006554:	je     0x1400065be
   140006556:	rex.B jo 0x1400065c9
   140006559:	outs   dx,BYTE PTR gs:[rsi]
   14000655b:	add    BYTE PTR fs:[r11+0x48],dl
   140006560:	rex.WR push rdi
   140006562:	push   r8
   140006564:	rex.WB
   140006565:	cs fs ins BYTE PTR es:[rdi],dx
   140006568:	ins    BYTE PTR es:[rdi],dx
   140006569:	add    BYTE PTR [rax+0x556f4300],dl
   14000656f:	outs   dx,BYTE PTR ds:[rsi]
   140006570:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140006577:	imul   edi,DWORD PTR [rdx+0x65],0x610000
   14000657e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006580:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006582:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000658a:	rex.RB js 0x14000658d
   14000658d:	add    BYTE PTR [rax+0x0],ah
   140006590:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006592:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006594:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000659c:	add    BYTE PTR [rax],al
   14000659e:	sub    eax,DWORD PTR [rax]
   1400065a0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400065a2:	rex.XB jb 0x14000660a
   1400065a5:	(bad)  
   1400065a6:	je     0x14000660d
   1400065a8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400065aa:	jae    0x140006620
   1400065ac:	(bad)  
   1400065ad:	outs   dx,BYTE PTR ds:[rsi]
   1400065ae:	movsxd esp,DWORD PTR [rbp+0x0]
   1400065b1:	add    BYTE PTR [rdi+0x576f4300],dl
   1400065b7:	(bad)  
   1400065b8:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
   1400065c0:	je     0x14000662b
   1400065c2:	jo     0x140006630
   1400065c4:	gs rex.W (bad) 
   1400065c7:	outs   dx,BYTE PTR ds:[rsi]
   1400065c8:	fs ins BYTE PTR es:[rdi],dx
   1400065ca:	gs jae 0x1400065cd
   1400065cd:	add    BYTE PTR [rdi+0x6c],ch
   1400065d0:	xor    esi,DWORD PTR gs:[rdx]
   1400065d3:	cs fs ins BYTE PTR es:[rdi],dx
   1400065d6:	ins    BYTE PTR es:[rdi],dx
   1400065d7:	add    BYTE PTR [rdi+0x4c],cl
   1400065da:	rex.RB
   1400065db:	push   r13
   1400065dd:	push   rsp
   1400065de:	xor    esi,DWORD PTR [rdx]
   1400065e0:	cs fs ins BYTE PTR es:[rdi],dx
   1400065e3:	ins    BYTE PTR es:[rdi],dx
   1400065e4:	add    BYTE PTR [rax],al
   1400065e6:	push   0x656c5305
   1400065eb:	gs jo  0x1400065ee
   1400065ee:	(bad)
   1400065f1:	gs je  0x140006647
   1400065f4:	je     0x140006657
   1400065f6:	jb     0x14000666c
   1400065f8:	jne    0x14000666a
   1400065fa:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400065fc:	outs   dx,WORD PTR ds:[rsi]
   1400065fe:	push   rdi
   1400065ff:	add    BYTE PTR [rcx+0x5],bl
   140006602:	push   rbx
   140006603:	gs je  0x14000665b
   140006606:	outs   dx,BYTE PTR ds:[rsi]
   140006607:	push   0x6c646e61
   14000660c:	gs fs rex.RB js 0x140006674
   140006611:	gs jo  0x140006688
   140006614:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000661b:	gs jb  0x14000661e
   14000661e:	ins    BYTE PTR es:[rdi],dx
   14000661f:	add    al,BYTE PTR [rdi+0x65]
   140006622:	je     0x140006671
   140006624:	outs   dx,DWORD PTR ds:[rsi]
   140006625:	fs jne 0x140006694
   140006628:	gs rex.W (bad) 
   14000662b:	outs   dx,BYTE PTR ds:[rsi]
   14000662c:	fs ins BYTE PTR es:[rdi],dx
   14000662e:	gs push rdi
   140006630:	add    BYTE PTR [rax],al
   140006632:	xor    al,BYTE PTR [rcx+rdx*2]
   140006635:	jne    0x14000669c
   140006637:	jb     0x1400066b2
   140006639:	push   rax
   14000663a:	gs jb  0x1400066a3
   14000663d:	outs   dx,DWORD PTR ds:[rsi]
   14000663e:	jb     0x1400066ad
   140006640:	(bad)  
   140006641:	outs   dx,BYTE PTR ds:[rsi]
   140006642:	movsxd esp,DWORD PTR [rbp+0x43]
   140006645:	outs   dx,DWORD PTR ds:[rsi]
   140006646:	jne    0x1400066b6
   140006648:	je     0x1400066af
   14000664a:	jb     0x14000664c
   14000664c:	lar    eax,WORD PTR [rdi+0x65]
   140006650:	je     0x140006695
   140006652:	jne    0x1400066c6
   140006654:	jb     0x1400066bb
   140006656:	outs   dx,BYTE PTR ds:[rsi]
   140006657:	je     0x1400066a9
   140006659:	jb     0x1400066ca
   14000665b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000665e:	jae    0x1400066a9
   140006660:	add    BYTE PTR fs:[rbx],dl
   140006663:	add    al,BYTE PTR [rdi+0x65]
   140006666:	je     0x1400066ab
   140006668:	jne    0x1400066dc
   14000666a:	jb     0x1400066d1
   14000666c:	outs   dx,BYTE PTR ds:[rsi]
   14000666d:	je     0x1400066c3
   14000666f:	push   0x64616572
   140006674:	rex.WB
   140006675:	add    BYTE PTR fs:[rax],al
   140006678:	fiadd  WORD PTR [rdx]
   14000667a:	rex.RXB
   14000667b:	gs je  0x1400066d1
   14000667e:	jns    0x1400066f3
   140006680:	je     0x1400066e7
   140006682:	ins    DWORD PTR es:[rdi],dx
   140006683:	push   rsp
   140006684:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000668b:	ins    BYTE PTR es:[rdi],dx
   14000668c:	gs push rsp
   14000668e:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fb00
   140006695:	gs je  0x1400066ec
   140006698:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000669f:	je     0x1400066a1
   1400066a1:	add    BYTE PTR [rcx+0x686e5505],bl
   1400066a7:	(bad)  
   1400066a8:	outs   dx,BYTE PTR ds:[rsi]
   1400066a9:	fs ins BYTE PTR es:[rdi],dx
   1400066ab:	gs fs rex.RB js 0x140006713
   1400066b0:	gs jo  0x140006727
   1400066b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400066ba:	gs jb  0x1400066bd
   1400066bd:	add    BYTE PTR [rsi],cl
   1400066bf:	add    al,BYTE PTR [rdi+0x65]
   1400066c2:	je     0x140006707
   1400066c4:	jne    0x140006738
   1400066c6:	jb     0x14000672d
   1400066c8:	outs   dx,BYTE PTR ds:[rsi]
   1400066c9:	je     0x14000671b
   1400066cb:	jb     0x14000673c
   1400066cd:	movsxd esp,DWORD PTR [rbp+0x73]
   1400066d0:	jae    0x1400066d2
   1400066d2:	ja     0x1400066d9
   1400066d4:	push   rsp
   1400066d5:	gs jb  0x140006745
   1400066d8:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400066df:	outs   dx,DWORD PTR ds:[rsi]
   1400066e0:	movsxd esp,DWORD PTR [rbp+0x73]
   1400066e3:	jae    0x1400066e5
   1400066e5:	add    BYTE PTR [rax+0x67655204],cl
   1400066eb:	imul   esi,DWORD PTR [rbx+0x74],0x70417265
   1400066f2:	jo     0x140006760
   1400066f4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400066fb:	push   rdx
   1400066fc:	gs jae 0x140006773
   1400066ff:	(bad)  
   140006700:	jb     0x140006776
   140006702:	add    BYTE PTR [rax],al
   140006704:	in     al,0x0
   140006706:	rex.XB jb 0x14000676e
   140006709:	(bad)  
   14000670a:	je     0x140006771
   14000670c:	push   rsp
   14000670d:	push   0x64616572
   140006712:	add    BYTE PTR [rax],al
   140006714:	jge    0x140006716
   140006716:	rex.XB ins BYTE PTR es:[rdi],dx
   140006718:	outs   dx,DWORD PTR ds:[rsi]
   140006719:	jae    0x140006780
   14000671b:	rex.W (bad) 
   14000671d:	outs   dx,BYTE PTR ds:[rsi]
   14000671e:	fs ins BYTE PTR es:[rdi],dx
   140006720:	add    BYTE PTR gs:[rsi+0x6d656d04],dl
   140006727:	jae    0x14000678e
   140006729:	je     0x14000672b
	...

Disassembly of section .data:

0000000140007000 <.data>:
   140007000:	add    DWORD PTR [rax],eax
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000700e:	add    BYTE PTR [rax],al
   140007010:	int    0x5d
   140007012:	and    dl,dl
   140007014:	data16 (bad) 
   140007016:	(bad)  
   140007017:	inc    DWORD PTR [rax]
   140007019:	add    BYTE PTR [rax],al
   14000701b:	add    BYTE PTR [rax],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rdx],al
   140007021:	add    BYTE PTR [rax],al
   140007023:	add    BYTE PTR [rax],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    BYTE PTR [rdx],al
	...

Disassembly of section .pdata:

0000000140008000 <.pdata>:
   140008000:	or     BYTE PTR [rax],dl
   140008002:	add    BYTE PTR [rax],al
   140008004:	sub    DWORD PTR [rcx],edx
   140008006:	add    BYTE PTR [rax],al
   140008008:	cmp    BYTE PTR [rcx+0x0],bl
   14000800b:	add    BYTE PTR [rax],dh
   14000800d:	adc    DWORD PTR [rax],eax
   14000800f:	add    BYTE PTR [rsi+0x50000011],ah
   140008015:	pop    rcx
   140008016:	add    BYTE PTR [rax],al
   140008018:	lods   al,BYTE PTR ds:[rsi]
   140008019:	adc    DWORD PTR [rax],eax
   14000801b:	add    BYTE PTR [rax],bh
   14000801d:	adc    eax,DWORD PTR [rax]
   14000801f:	add    BYTE PTR [rax+0x59],bl
   140008022:	add    BYTE PTR [rax],al
   140008024:	rex adc eax,DWORD PTR [rax]
   140008027:	add    BYTE PTR [rdx+0x13],ch
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	jo     0x140008087
   14000802e:	add    BYTE PTR [rax],al
   140008030:	jo     0x140008045
   140008032:	add    BYTE PTR [rax],al
   140008034:	(bad)  
   140008035:	adc    eax,DWORD PTR [rax]
   140008037:	add    BYTE PTR [rax+0x59],dh
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	movabs al,ds:0x78000019e8000013
   140008045:	pop    rcx
   140008046:	add    BYTE PTR [rax],al
   140008048:	lock sbb DWORD PTR [rax],eax
   14000804b:	add    BYTE PTR [rbp+0x1a],cl
   14000804e:	add    BYTE PTR [rax],al
   140008050:	mov    al,0x59
   140008052:	add    BYTE PTR [rax],al
   140008054:	push   rsp
   140008055:	sbb    al,BYTE PTR [rax]
   140008057:	add    BYTE PTR [rdi],bh
   140008059:	sbb    eax,DWORD PTR [rax]
   14000805b:	add    BYTE PTR [rax+0x48000059],bh
   140008061:	sbb    eax,DWORD PTR [rax]
   140008063:	add    BYTE PTR [rdx+0x1b],dh
   140008066:	add    BYTE PTR [rax],al
   140008068:	jo     0x1400080c3
   14000806a:	add    BYTE PTR [rax],al
   14000806c:	js     0x140008089
   14000806e:	add    BYTE PTR [rax],al
   140008070:	movabs ds:0xb00000597000001b,al
   140008079:	sbb    eax,DWORD PTR [rax]
   14000807b:	add    BYTE PTR [rsi],ah
   14000807d:	and    al,BYTE PTR [rax]
   14000807f:	add    ah,cl
   140008081:	pop    rcx
   140008082:	add    BYTE PTR [rax],al
   140008084:	sub    al,0x22
   140008086:	add    BYTE PTR [rax],al
   140008088:	mov    DWORD PTR [rdx],esp
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	mov    al,0x59
   14000808e:	add    BYTE PTR [rax],al
   140008090:	nop
   140008091:	and    al,BYTE PTR [rax]
   140008093:	add    al,ch
   140008095:	and    eax,DWORD PTR [rax]
   140008097:	add    ah,bh
   140008099:	pop    rcx
   14000809a:	add    BYTE PTR [rax],al
   14000809c:	lock and eax,DWORD PTR [rax]
   14000809f:	add    BYTE PTR [rax+0x18000025],bh
   1400080a5:	pop    rdx
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	shl    BYTE PTR [rip+0x26de0000],0x0        # 0x166de80af
   1400080af:	add    BYTE PTR [rax],dh
   1400080b1:	pop    rdx
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	in     al,0x26
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	rex.WX (bad) 
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	mov    eax,0x50000059
   1400080c1:	(bad)  
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	imul   BYTE PTR [rax]
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	rex pop rdx
   1400080ca:	add    BYTE PTR [rax],al
   1400080cc:	cld    
   1400080cd:	sub    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rcx],bh
   1400080d1:	sub    eax,DWORD PTR [rax]
   1400080d3:	add    BYTE PTR [rax+0x5a],ah
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	rex sub eax,DWORD PTR [rax]
   1400080db:	add    BYTE PTR [rdx],ch
   1400080dd:	add    BYTE PTR cs:[rax],al
   1400080e0:	js     0x14000813c
   1400080e2:	add    BYTE PTR [rax],al
   1400080e4:	xor    BYTE PTR [rsi],ch
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	(bad)  
   1400080e9:	(bad)  
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	pushf  
   1400080ed:	pop    rdx
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	lock (bad) 
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	es xor al,0x0
   1400080f7:	add    BYTE PTR [rdx+rbx*2+0x342c0000],bh
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	in     al,dx
   140008101:	xor    al,0x0
   140008103:	add    ah,ah
   140008105:	pop    rdx
   140008106:	add    BYTE PTR [rax],al
   140008108:	hlt    
   140008109:	xor    al,0x0
   14000810b:	add    BYTE PTR [rsi],al
   14000810d:	(bad)  
   14000810e:	add    BYTE PTR [rax],al
   140008110:	hlt    
   140008111:	pop    rdx
   140008112:	add    BYTE PTR [rax],al
   140008114:	or     al,0x37
   140008116:	add    BYTE PTR [rax],al
   140008118:	clc    
   140008119:	(bad)  
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	adc    al,0x5b
   14000811e:	add    BYTE PTR [rax],al
   140008120:	add    BYTE PTR [rax],bh
   140008122:	add    BYTE PTR [rax],al
   140008124:	mov    ah,0x38
   140008126:	add    BYTE PTR [rax],al
   140008128:	sub    BYTE PTR [rbx+0x0],bl
   14000812b:	add    al,al
   14000812d:	cmp    BYTE PTR [rax],al
   14000812f:	add    BYTE PTR [rdi+0x38000039],cl
   140008135:	pop    rbx
   140008136:	add    BYTE PTR [rax],al
   140008138:	movabs al,ds:0x40000039e9000039
   140008141:	pop    rbx
   140008142:	add    BYTE PTR [rax],al
   140008144:	lock cmp DWORD PTR [rax],eax
   140008147:	add    BYTE PTR [rdx],al
   140008149:	cmp    al,BYTE PTR [rax]
   14000814b:	add    BYTE PTR [rax],bh
   14000814d:	pop    rbx
   14000814e:	add    BYTE PTR [rax],al
   140008150:	or     BYTE PTR [rdx],bh
   140008152:	add    BYTE PTR [rax],al
   140008154:	pop    rsi
   140008155:	cmp    al,0x0
   140008157:	add    BYTE PTR [rax+0x5b],cl
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	jo     0x14000819a
   14000815e:	add    BYTE PTR [rax],al
   140008160:	mov    ?,WORD PTR [rax+rax*1]
   140008163:	add    BYTE PTR [rax+0x5b],bh
   140008166:	add    BYTE PTR [rax],al
   140008168:	movabs al,ds:0x3800003cd900003c
   140008171:	pop    rbx
   140008172:	add    BYTE PTR [rax],al
   140008174:	loopne 0x1400081b2
   140008176:	add    BYTE PTR [rax],al
   140008178:	clc    
   140008179:	cmp    al,0x0
   14000817b:	add    BYTE PTR [rax],bh
   14000817d:	pop    rbx
   14000817e:	add    BYTE PTR [rax],al
   140008180:	or     al,0x3d
   140008182:	add    BYTE PTR [rax],al
   140008184:	(bad)  
   140008185:	cmp    eax,0x5b7c0000
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	push   0xffffffffad00003d
   140008191:	cmp    eax,0x59700000
   140008196:	add    BYTE PTR [rax],al
   140008198:	and    BYTE PTR [rsi],bh
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	ins    DWORD PTR es:[rdi],dx
   14000819d:	add    BYTE PTR ds:[rax],al
   1400081a0:	pushf  
   1400081a1:	pop    rbx
   1400081a2:	add    BYTE PTR [rax],al
   1400081a4:	mov    ah,0x3e
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	test   BYTE PTR [rdi],bh
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	enter  0x5b,0x0
   1400081b0:	mov    esp,0xf000003f
   1400081b5:	(bad)  
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	jo     0x140008213
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    BYTE PTR [rax+0x0],al
   1400081bf:	add    BYTE PTR [rcx+0x41],dh
   1400081c2:	add    BYTE PTR [rax],al
   1400081c4:	(bad)  
   1400081c5:	pop    rbx
   1400081c6:	add    BYTE PTR [rax],al
   1400081c8:	mov    BYTE PTR [rcx+0x0],al
   1400081cb:	add    BYTE PTR [rbp+0x38000041],ah
   1400081d1:	pop    rbx
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	lods   al,BYTE PTR ds:[rsi]
   1400081d5:	add    BYTE PTR [r8],al
   1400081d8:	cmovb  eax,DWORD PTR [rax]
   1400081db:	add    BYTE PTR [rax+0x59],dh
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	sbb    BYTE PTR [rdx+0x0],al
   1400081e3:	add    BYTE PTR [rsi-0x13ffffbe],ch
   1400081e9:	pop    rbx
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	rol    BYTE PTR [rdx+0x0],1
   1400081ef:	add    dl,dl
   1400081f1:	rex.X add BYTE PTR [rax],al
   1400081f4:	loopne 0x140008251
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	out    0x42,al
   1400081fa:	add    BYTE PTR [rax],al
   1400081fc:	or     al,BYTE PTR [rbx+0x0]
   1400081ff:	add    BYTE PTR [rax+0x10000059],ch
   140008205:	rex.XB add BYTE PTR [r8],al
   140008208:	xor    al,0x43
   14000820a:	add    BYTE PTR [rax],al
   14000820c:	test   al,0x59
   14000820e:	add    BYTE PTR [rax],al
   140008210:	cmp    al,BYTE PTR [rbx+0x0]
   140008213:	add    BYTE PTR [rax+0x43],bl
   140008216:	add    BYTE PTR [rax],al
   140008218:	rcr    BYTE PTR [rbx+0x0],0x0
   14000821c:	(bad)  
   14000821d:	rex.XB add BYTE PTR [r8],al
   140008220:	add    BYTE PTR [rbx+0x0],0x0
   140008224:	rcr    BYTE PTR [rbx+0x0],0x0

Disassembly of section .rsrc:

0000000140009000 <.rsrc>:
	...
   14000900c:	add    BYTE PTR [rax],al
   14000900e:	add    al,0x0
   140009010:	add    eax,DWORD PTR [rax]
   140009012:	add    BYTE PTR [rax],al
   140009014:	xor    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax+0xe],al
   14000901c:	test   al,0x0
   14000901e:	add    BYTE PTR [rax+0x10],al
   140009024:	rol    BYTE PTR [rax],0x0
   140009027:	sbb    BYTE PTR [rax],0x0
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	fadd   DWORD PTR [rax]
   14000902e:	add    BYTE PTR [rax+0x0],al
	...
   14000903c:	add    BYTE PTR [rax],al
   14000903e:	or     eax,0x100
   140009043:	add    al,dh
   140009045:	add    BYTE PTR [rax],al
   140009047:	add    BYTE PTR [rdx],0x0
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	or     BYTE PTR [rcx],al
   14000904e:	add    BYTE PTR [rax+0x3],al
   140009054:	and    BYTE PTR [rcx],al
   140009056:	add    BYTE PTR [rax+0x4],al
   14000905c:	cmp    BYTE PTR [rcx],al
   14000905e:	add    BYTE PTR [rax+0x5],al
   140009064:	push   rax
   140009065:	add    DWORD PTR [rax],eax
   140009067:	add    BYTE PTR [rsi],0x0
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	push   0x7800001
   140009071:	add    BYTE PTR [rax],al
   140009073:	add    BYTE PTR [rax+0x8800001],al
   140009079:	add    BYTE PTR [rax],al
   14000907b:	add    BYTE PTR [rax+0x9800001],bl
   140009081:	add    BYTE PTR [rax],al
   140009083:	add    BYTE PTR [rax+0xa800001],dh
   140009089:	add    BYTE PTR [rax],al
   14000908b:	add    al,cl
   14000908d:	add    DWORD PTR [rax],eax
   14000908f:	or     BYTE PTR [rbx],0x0
   140009092:	add    BYTE PTR [rax],al
   140009094:	loopne 0x140009097
   140009096:	add    BYTE PTR [rax+0xc],al
   14000909c:	clc    
   14000909d:	add    DWORD PTR [rax],eax
   14000909f:	or     BYTE PTR [rip+0x10000000],0x2        # 0x1500090a6
   1400090a6:	add    BYTE PTR [rax+0x0],al
	...
   1400090b4:	add    DWORD PTR [rax],eax
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	jo     0x1400090bd
   1400090ba:	add    BYTE PTR [rax-0x7ffffdd8],al
	...
   1400090cc:	add    BYTE PTR [rax],al
   1400090ce:	add    DWORD PTR [rax],eax
   1400090d0:	add    DWORD PTR [rax],eax
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    al,BYTE PTR [rax]
   1400090d7:	add    BYTE PTR [rax],0x0
	...
   1400090e6:	add    DWORD PTR [rax],eax
   1400090e8:	add    DWORD PTR [rax],eax
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	pop    rax
   1400090ed:	add    al,BYTE PTR [rax]
   1400090ef:	add    BYTE PTR [rax],0x0
	...
   1400090fe:	add    DWORD PTR [rax],eax
   140009100:	or     DWORD PTR [rax+rax*1],eax
   140009103:	add    BYTE PTR [rax+0x2],dh
	...
   140009116:	add    DWORD PTR [rax],eax
   140009118:	or     DWORD PTR [rax+rax*1],eax
   14000911b:	add    BYTE PTR [rax+0x2],al
	...
   14000912d:	add    BYTE PTR [rcx],al
   14000912f:	add    BYTE PTR [rcx],cl
   140009131:	add    al,0x0
   140009133:	add    BYTE PTR [rax+0x2],dl
	...
   140009145:	add    BYTE PTR [rcx],al
   140009147:	add    BYTE PTR [rcx],cl
   140009149:	add    al,0x0
   14000914b:	add    BYTE PTR [rax+0x2],ah
	...
   14000915d:	add    BYTE PTR [rcx],al
   14000915f:	add    BYTE PTR [rcx],cl
   140009161:	add    al,0x0
   140009163:	add    BYTE PTR [rax+0x2],dh
	...
   140009175:	add    BYTE PTR [rcx],al
   140009177:	add    BYTE PTR [rcx],cl
   140009179:	add    al,0x0
   14000917b:	add    al,al
   14000917d:	add    al,BYTE PTR [rax]
	...
   14000918b:	add    BYTE PTR [rax],al
   14000918d:	add    BYTE PTR [rcx],al
   14000918f:	add    BYTE PTR [rcx],cl
   140009191:	add    al,0x0
   140009193:	add    al,dl
   140009195:	add    al,BYTE PTR [rax]
	...
   1400091a3:	add    BYTE PTR [rax],al
   1400091a5:	add    BYTE PTR [rcx],al
   1400091a7:	add    BYTE PTR [rcx],cl
   1400091a9:	add    al,0x0
   1400091ab:	add    al,ah
   1400091ad:	add    al,BYTE PTR [rax]
	...
   1400091bb:	add    BYTE PTR [rax],al
   1400091bd:	add    BYTE PTR [rcx],al
   1400091bf:	add    BYTE PTR [rcx],cl
   1400091c1:	add    al,0x0
   1400091c3:	add    al,dh
   1400091c5:	add    al,BYTE PTR [rax]
	...
   1400091d3:	add    BYTE PTR [rax],al
   1400091d5:	add    BYTE PTR [rcx],al
   1400091d7:	add    BYTE PTR [rcx],cl
   1400091d9:	add    al,0x0
   1400091db:	add    BYTE PTR [rax],al
   1400091dd:	add    eax,DWORD PTR [rax]
	...
   1400091eb:	add    BYTE PTR [rax],al
   1400091ed:	add    BYTE PTR [rcx],al
   1400091ef:	add    BYTE PTR [rcx],cl
   1400091f1:	add    al,0x0
   1400091f3:	add    BYTE PTR [rax],dl
   1400091f5:	add    eax,DWORD PTR [rax]
	...
   140009203:	add    BYTE PTR [rax],al
   140009205:	add    BYTE PTR [rcx],al
   140009207:	add    BYTE PTR [rcx],cl
   140009209:	add    al,0x0
   14000920b:	add    BYTE PTR [rax],ah
   14000920d:	add    eax,DWORD PTR [rax]
	...
   14000921b:	add    BYTE PTR [rax],al
   14000921d:	add    BYTE PTR [rcx],al
   14000921f:	add    BYTE PTR [rcx],cl
   140009221:	add    al,0x0
   140009223:	add    BYTE PTR [rax],dh
   140009225:	add    eax,DWORD PTR [rax]
	...
   140009233:	add    BYTE PTR [rax],al
   140009235:	add    BYTE PTR [rcx],al
   140009237:	add    BYTE PTR [rcx],cl
   140009239:	add    al,0x0
   14000923b:	add    BYTE PTR [rax+0x3],al
	...
   14000924e:	add    DWORD PTR [rax],eax
   140009250:	or     DWORD PTR [rax+rax*1],eax
   140009253:	add    BYTE PTR [rax+0x3],dl
	...
   140009266:	add    DWORD PTR [rax],eax
   140009268:	or     DWORD PTR [rax+rax*1],eax
   14000926b:	add    BYTE PTR [rax+0x3],ah
   14000926e:	add    BYTE PTR [rax],al
   140009270:	mov    al,0x97
   140009272:	add    BYTE PTR [rax],al
   140009274:	push   0x6
   140009279:	add    BYTE PTR [rax],al
   14000927b:	add    BYTE PTR [rax],al
   14000927d:	add    BYTE PTR [rax],al
   14000927f:	add    BYTE PTR [rax],bl
   140009281:	sahf   
   140009282:	add    BYTE PTR [rax],al
   140009284:	call   0x14000928b
	...
   140009291:	movabs eax,ds:0x1e80000
   14000929a:	add    BYTE PTR [rax],al
   14000929c:	add    BYTE PTR [rax],al
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	call   0x168009347
   1400092a5:	add    DWORD PTR [rax],eax
	...
   1400092af:	add    BYTE PTR [rax],dl
   1400092b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	test   al,0xe
	...
   1400092be:	add    BYTE PTR [rax],al
   1400092c0:	mov    eax,0xa80000b2
   1400092c5:	or     BYTE PTR [rax],al
	...
   1400092cf:	add    BYTE PTR [rax-0x45],ah
   1400092d2:	add    BYTE PTR [rax],al
   1400092d4:	enter  0x6,0x0
	...
   1400092e0:	sub    dl,al
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	push   0x5
   1400092e9:	add    BYTE PTR [rax],al
   1400092eb:	add    BYTE PTR [rax],al
   1400092ed:	add    BYTE PTR [rax],al
   1400092ef:	add    BYTE PTR [rax-0x5affff39],dl
   1400092f5:	xor    eax,DWORD PTR [rax]
	...
   1400092ff:	add    BYTE PTR [rax],bh
   140009301:	sti    
   140009302:	add    BYTE PTR [rax],al
   140009304:	test   al,0x25
	...
   14000930e:	add    BYTE PTR [rax],al
   140009310:	loopne 0x140009332
   140009312:	add    DWORD PTR [rax],eax
   140009314:	test   al,0x10
	...
   14000931e:	add    BYTE PTR [rax],al
   140009320:	mov    BYTE PTR [rcx],dh
   140009322:	add    DWORD PTR [rax],eax
   140009324:	mov    BYTE PTR [rcx],cl
	...
   14000932e:	add    BYTE PTR [rax],al
   140009330:	adc    BYTE PTR [rbx],bh
   140009332:	add    DWORD PTR [rax],eax
   140009334:	push   0x4
   140009339:	add    BYTE PTR [rax],al
   14000933b:	add    BYTE PTR [rax],al
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    BYTE PTR [rax+0x3f],bh
   140009342:	add    DWORD PTR [rax],eax
   140009344:	mov    esp,0x0
   140009349:	add    BYTE PTR [rax],al
   14000934b:	add    BYTE PTR [rax],al
   14000934d:	add    BYTE PTR [rax],al
   14000934f:	add    BYTE PTR [rax],bh
   140009351:	rex add DWORD PTR [rax],eax
   140009354:	lods   al,BYTE PTR ds:[rsi]
   140009355:	add    eax,DWORD PTR [rax]
	...
   14000935f:	add    BYTE PTR [rax+0x2c000093],al
   140009365:	add    al,0x0
	...
   14000936f:	add    BYTE PTR [rcx],al
   140009371:	add    BYTE PTR [rax],dh
	...
   14000937f:	add    BYTE PTR [rdi+rdi*1],bh
   140009382:	js     0x1400093f1
   140009384:	ins    BYTE PTR es:[rdi],dx
   140009385:	and    BYTE PTR [rsi+0x65],dh
   140009388:	jb     0x1400093fd
   14000938a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140009391:	xor    BYTE PTR [rdx],ah
   140009393:	and    BYTE PTR [rbp+0x6e],ah
   140009396:	movsxd ebp,DWORD PTR [rdi+0x64]
   140009399:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400093a0:	rex.RX sub eax,0x73202238
   1400093a6:	je     0x140009409
   1400093a8:	outs   dx,BYTE PTR ds:[rsi]
   1400093a9:	fs (bad) 
   1400093ab:	ins    BYTE PTR es:[rdi],dx
   1400093ac:	outs   dx,DWORD PTR ds:[rsi]
   1400093ad:	outs   dx,BYTE PTR ds:[rsi]
   1400093ae:	gs cmp eax,0x73657922
   1400093b4:	and    bh,BYTE PTR [rdi]
   1400093b6:	ds or  eax,0x2d213c0a
   1400093bc:	sub    eax,0x706f4320
   1400093c1:	jns    0x140009435
   1400093c3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400093ca:	sub    DWORD PTR [rax],esp
   1400093cc:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400093d4:	je     0x1400093f6
   1400093d6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400093d8:	jb     0x14000944a
   1400093da:	outs   dx,DWORD PTR ds:[rsi]
   1400093db:	jb     0x14000943e
   1400093dd:	je     0x140009448
   1400093df:	outs   dx,DWORD PTR ds:[rsi]
   1400093e0:	outs   dx,BYTE PTR ds:[rsi]
   1400093e1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dd214
   1400093e7:	cmp    al,0x61
   1400093e9:	jae    0x14000945e
   1400093eb:	gs ins DWORD PTR es:[rdi],dx
   1400093ed:	(bad)  
   1400093ee:	ins    BYTE PTR es:[rdi],dx
   1400093ef:	jns    0x140009411
   1400093f1:	js     0x140009460
   1400093f3:	ins    BYTE PTR es:[rdi],dx
   1400093f4:	outs   dx,BYTE PTR ds:[rsi]
   1400093f5:	jae    0x140009434
   1400093f7:	and    dh,BYTE PTR [rbp+0x72]
   1400093fa:	outs   dx,BYTE PTR ds:[rsi]
   1400093fb:	cmp    dh,BYTE PTR [rbx+0x63]
   1400093fe:	push   0x73616d65
   140009403:	sub    eax,0x7263696d
   140009408:	outs   dx,DWORD PTR ds:[rsi]
   140009409:	jae    0x14000947a
   14000940b:	data16 je 0x14000943b
   14000940e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009411:	cmp    ah,BYTE PTR [rcx+0x73]
   140009414:	ins    DWORD PTR es:[rdi],dx
   140009415:	cs jbe 0x140009449
   140009418:	and    ah,BYTE PTR [rax]
   14000941a:	ins    DWORD PTR es:[rdi],dx
   14000941b:	(bad)  
   14000941c:	outs   dx,BYTE PTR ds:[rsi]
   14000941d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140009424:	jb     0x140009499
   140009426:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000942d:	xor    BYTE PTR [rdx],ah
   14000942f:	ds or  eax,0x73613c0a
   140009435:	jae    0x14000949c
   140009437:	ins    DWORD PTR es:[rdi],dx
   140009438:	(bad)  
   140009439:	ins    BYTE PTR es:[rdi],dx
   14000943a:	jns    0x140009485
   14000943c:	fs outs dx,BYTE PTR gs:[rsi]
   14000943f:	je     0x1400094aa
   140009441:	je     0x1400094bc
   140009443:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140009447:	gs cmp eax,0x6e697722
   14000944d:	xor    esi,DWORD PTR [rdx]
   14000944f:	and    ah,BYTE PTR [rax]
   140009451:	outs   dx,BYTE PTR ds:[rsi]
   140009452:	(bad)  
   140009453:	ins    DWORD PTR es:[rdi],dx
   140009454:	gs cmp eax,0x63694d22
   14000945a:	jb     0x1400094cb
   14000945c:	jae    0x1400094cd
   14000945e:	data16 je 0x14000948f
   140009461:	push   rdi
   140009462:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140009469:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000946b:	je     0x1400094d2
   14000946d:	jb     0x1400094dd
   14000946f:	gs je  0x1400094b7
   140009472:	js     0x1400094e4
   140009474:	ins    BYTE PTR es:[rdi],dx
   140009475:	outs   dx,DWORD PTR ds:[rsi]
   140009476:	jb     0x1400094dd
   140009478:	jb     0x1400094a8
   14000947a:	rex.B
   14000947b:	fs fs jb 0x1400094e4
   14000947f:	jae    0x1400094f4
   140009481:	rex.X outs dx,DWORD PTR ds:[rsi]
   140009483:	outs   dx,DWORD PTR ds:[rsi]
   140009484:	imul   ebp,DWORD PTR [rsi],0x4d
   140009487:	imul   esp,DWORD PTR [rdi+0x72],0x6f697461
   14000948e:	outs   dx,BYTE PTR ds:[rsi]
   14000948f:	and    ah,BYTE PTR [rax]
   140009491:	jbe    0x1400094f8
   140009493:	jb     0x140009508
   140009495:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000949c:	xor    BYTE PTR [rsi],ch
   14000949e:	xor    BYTE PTR [rsi],ch
   1400094a0:	xor    BYTE PTR [rdx],ah
   1400094a2:	and    BYTE PTR [rax+0x72],dh
   1400094a5:	outs   dx,DWORD PTR ds:[rsi]
   1400094a6:	movsxd esp,DWORD PTR [rbp+0x73]
   1400094a9:	jae    0x14000951a
   1400094ab:	jb     0x1400094ee
   1400094ad:	jb     0x140009512
   1400094af:	push   0x63657469
   1400094b4:	je     0x14000952b
   1400094b6:	jb     0x14000951d
   1400094b8:	cmp    eax,0x646d6122
   1400094bd:	ss xor al,0x22
   1400094c0:	(bad)  
   1400094c1:	ds or  eax,0x65643c0a
   1400094c7:	jae    0x14000952c
   1400094c9:	jb     0x140009534
   1400094cb:	jo     0x140009541
   1400094cd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69573e
   1400094d4:	outs   dx,DWORD PTR fs:[rsi]
   1400094d6:	ja     0x14000954b
   1400094d8:	and    BYTE PTR [rcx+0x64],al
   1400094db:	fs jb  0x140009543
   1400094de:	jae    0x140009553
   1400094e0:	and    BYTE PTR [rdx+0x6f],al
   1400094e3:	outs   dx,DWORD PTR ds:[rsi]
   1400094e4:	imul   esp,DWORD PTR [rax],0x4d
   1400094e7:	imul   esp,DWORD PTR [rdi+0x72],0x6f697461
   1400094ee:	outs   dx,BYTE PTR ds:[rsi]
   1400094ef:	cmp    al,0x2f
   1400094f1:	fs gs jae 0x140009558
   1400094f5:	jb     0x140009560
   1400094f7:	jo     0x14000956d
   1400094f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   140009500:	fs gs jo 0x140009569
   140009504:	outs   dx,BYTE PTR ds:[rsi]
   140009505:	fs outs dx,BYTE PTR gs:[rsi]
   140009508:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000950b:	or     eax,0x2020200a
   140009510:	and    BYTE PTR [rsp+riz*2],bh
   140009513:	gs jo  0x14000957b
   140009516:	outs   dx,BYTE PTR ds:[rsi]
   140009517:	fs outs dx,BYTE PTR gs:[rsi]
   14000951a:	je     0x14000955d
   14000951c:	jae    0x140009591
   14000951e:	gs ins DWORD PTR es:[rdi],dx
   140009520:	(bad)  
   140009521:	ins    BYTE PTR es:[rdi],dx
   140009522:	jns    0x140009562
   140009524:	or     eax,0x2020200a
   140009529:	and    BYTE PTR [rax],ah
   14000952b:	and    BYTE PTR [rax],ah
   14000952d:	and    BYTE PTR [rcx+riz*2],bh
   140009530:	jae    0x1400095a5
   140009532:	gs ins DWORD PTR es:[rdi],dx
   140009534:	(bad)  
   140009535:	ins    BYTE PTR es:[rdi],dx
   140009536:	jns    0x140009581
   140009538:	fs outs dx,BYTE PTR gs:[rsi]
   14000953b:	je     0x1400095a6
   14000953d:	je     0x1400095b8
   14000953f:	or     eax,0x2020200a
   140009544:	and    BYTE PTR [rax],ah
   140009546:	and    BYTE PTR [rax],ah
   140009548:	and    BYTE PTR [rax],ah
   14000954a:	and    BYTE PTR [rax],ah
   14000954c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140009550:	gs cmp eax,0x6e697722
   140009556:	xor    esi,DWORD PTR [rdx]
   140009558:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020b568
   14000955e:	and    BYTE PTR [rax],ah
   140009560:	and    BYTE PTR [rax],ah
   140009562:	and    BYTE PTR [rax],ah
   140009564:	and    BYTE PTR [rax],ah
   140009566:	and    BYTE PTR [rsi+0x61],ch
   140009569:	ins    DWORD PTR es:[rdi],dx
   14000956a:	gs cmp eax,0x63694d22
   140009570:	jb     0x1400095e1
   140009572:	jae    0x1400095e3
   140009574:	data16 je 0x1400095a5
   140009577:	push   rdi
   140009578:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000957f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009581:	ins    DWORD PTR es:[rdi],dx
   140009582:	ins    DWORD PTR es:[rdi],dx
   140009583:	outs   dx,DWORD PTR ds:[rsi]
   140009584:	outs   dx,BYTE PTR ds:[rsi]
   140009585:	sub    eax,0x746e6f43
   14000958a:	jb     0x1400095fb
   14000958c:	ins    BYTE PTR es:[rdi],dx
   14000958d:	jae    0x1400095b1
   14000958f:	or     eax,0x2020200a
   140009594:	and    BYTE PTR [rax],ah
   140009596:	and    BYTE PTR [rax],ah
   140009598:	and    BYTE PTR [rax],ah
   14000959a:	and    BYTE PTR [rax],ah
   14000959c:	and    BYTE PTR [rsi+0x65],dh
   14000959f:	jb     0x140009614
   1400095a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   1400095a8:	xor    BYTE PTR [rsi],ch
   1400095aa:	xor    BYTE PTR [rsi],ch
   1400095ac:	xor    BYTE PTR [rdx],ah
   1400095ae:	or     eax,0x2020200a
   1400095b3:	and    BYTE PTR [rax],ah
   1400095b5:	and    BYTE PTR [rax],ah
   1400095b7:	and    BYTE PTR [rax],ah
   1400095b9:	and    BYTE PTR [rax],ah
   1400095bb:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   1400095bf:	addr32 jne 0x140009623
   1400095c2:	addr32 gs cmp eax,0xd222a22
   1400095c9:	or     ah,BYTE PTR [rax]
   1400095cb:	and    BYTE PTR [rax],ah
   1400095cd:	and    BYTE PTR [rax],ah
   1400095cf:	and    BYTE PTR [rax],ah
   1400095d1:	and    BYTE PTR [rax],ah
   1400095d3:	and    BYTE PTR [rax],ah
   1400095d5:	and    BYTE PTR [rax+0x72],dh
   1400095d8:	outs   dx,DWORD PTR ds:[rsi]
   1400095d9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400095dc:	jae    0x14000964d
   1400095de:	jb     0x140009621
   1400095e0:	jb     0x140009645
   1400095e2:	push   0x63657469
   1400095e7:	je     0x14000965e
   1400095e9:	jb     0x140009650
   1400095eb:	cmp    eax,0x646d6122
   1400095f0:	ss xor al,0x22
   1400095f3:	or     eax,0x2020200a
   1400095f8:	and    BYTE PTR [rax],ah
   1400095fa:	and    BYTE PTR [rax],ah
   1400095fc:	and    BYTE PTR [rax],ah
   1400095fe:	and    BYTE PTR [rax],ah
   140009600:	and    BYTE PTR [rax+0x75],dh
   140009603:	(bad)  
   140009604:	ins    BYTE PTR es:[rdi],dx
   140009605:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000960c:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140009610:	and    dh,BYTE PTR [rsi]
   140009612:	xor    eax,0x36623539
   140009617:	xor    al,0x31
   140009619:	xor    al,0x34
   14000961b:	movsxd esp,DWORD PTR [rbx+0x66]
   14000961e:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140009622:	or     eax,0x2020200a
   140009627:	and    BYTE PTR [rax],ah
   140009629:	and    BYTE PTR [rax],ah
   14000962b:	and    BYTE PTR [rdi],ch
   14000962d:	ds or  eax,0x2020200a
   140009633:	and    BYTE PTR [rdi+rbp*1],bh
   140009636:	fs gs jo 0x14000969f
   14000963a:	outs   dx,BYTE PTR ds:[rsi]
   14000963b:	fs outs dx,BYTE PTR gs:[rsi]
   14000963e:	je     0x140009681
   140009640:	jae    0x1400096b5
   140009642:	gs ins DWORD PTR es:[rdi],dx
   140009644:	(bad)  
   140009645:	ins    BYTE PTR es:[rdi],dx
   140009646:	jns    0x140009686
   140009648:	or     eax,0x642f3c0a
   14000964d:	gs jo  0x1400096b5
   140009650:	outs   dx,BYTE PTR ds:[rsi]
   140009651:	fs outs dx,BYTE PTR gs:[rsi]
   140009654:	movsxd edi,DWORD PTR [rcx+0x3e]
   140009657:	or     eax,0x72743c0a
   14000965c:	jne    0x1400096d1
   14000965e:	je     0x1400096a9
   140009660:	outs   dx,BYTE PTR ds:[rsi]
   140009661:	outs   dx,WORD PTR ds:[rsi]
   140009663:	and    BYTE PTR [rax+0x6d],bh
   140009666:	ins    BYTE PTR es:[rdi],dx
   140009667:	outs   dx,BYTE PTR ds:[rsi]
   140009668:	jae    0x1400096a7
   14000966a:	and    dh,BYTE PTR [rbp+0x72]
   14000966d:	outs   dx,BYTE PTR ds:[rsi]
   14000966e:	cmp    dh,BYTE PTR [rbx+0x63]
   140009671:	push   0x73616d65
   140009676:	sub    eax,0x7263696d
   14000967b:	outs   dx,DWORD PTR ds:[rsi]
   14000967c:	jae    0x1400096ed
   14000967e:	data16 je 0x1400096ae
   140009681:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009684:	cmp    ah,BYTE PTR [rcx+0x73]
   140009687:	ins    DWORD PTR es:[rdi],dx
   140009688:	cs jbe 0x1400096bd
   14000968b:	and    bh,BYTE PTR [rsi]
   14000968d:	or     eax,0x2020200a
   140009692:	and    BYTE PTR [rbx+rsi*2],bh
   140009695:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009699:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400096a1:	and    BYTE PTR [rax],ah
   1400096a3:	and    BYTE PTR [rax],ah
   1400096a5:	and    BYTE PTR [rax],ah
   1400096a7:	cmp    al,0x72
   1400096a9:	gs jno 0x140009721
   1400096ac:	gs jae 0x140009723
   1400096af:	gs fs push rax
   1400096b2:	jb     0x14000971d
   1400096b4:	jbe    0x14000971f
   1400096b6:	ins    BYTE PTR es:[rdi],dx
   1400096b7:	gs addr32 gs jae 0x1400096dc
   1400096bc:	js     0x14000972b
   1400096be:	ins    BYTE PTR es:[rdi],dx
   1400096bf:	outs   dx,BYTE PTR ds:[rsi]
   1400096c0:	jae    0x1400096ff
   1400096c2:	and    dh,BYTE PTR [rbp+0x72]
   1400096c5:	outs   dx,BYTE PTR ds:[rsi]
   1400096c6:	cmp    dh,BYTE PTR [rbx+0x63]
   1400096c9:	push   0x73616d65
   1400096ce:	sub    eax,0x7263696d
   1400096d3:	outs   dx,DWORD PTR ds:[rsi]
   1400096d4:	jae    0x140009745
   1400096d6:	data16 je 0x140009706
   1400096d9:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400096dc:	cmp    ah,BYTE PTR [rcx+0x73]
   1400096df:	ins    DWORD PTR es:[rdi],dx
   1400096e0:	cs jbe 0x140009716
   1400096e3:	and    bh,BYTE PTR [rsi]
   1400096e5:	or     eax,0x2020200a
   1400096ea:	and    BYTE PTR [rax],ah
   1400096ec:	and    BYTE PTR [rax],ah
   1400096ee:	and    BYTE PTR [rax],ah
   1400096f0:	and    BYTE PTR [rax],ah
   1400096f2:	and    BYTE PTR [rdx+rsi*2],bh
   1400096f5:	gs jno 0x14000976d
   1400096f8:	gs jae 0x14000976f
   1400096fb:	gs fs rex.RB js 0x140009765
   140009700:	movsxd esi,DWORD PTR [rbp+0x74]
   140009703:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000970a:	ins    BYTE PTR es:[rdi],dx
   14000970b:	or     eax,0x2020200a
   140009710:	and    BYTE PTR [rax],ah
   140009712:	and    BYTE PTR [rax],ah
   140009714:	and    BYTE PTR [rax],ah
   140009716:	and    BYTE PTR [rax],ah
   140009718:	and    BYTE PTR [rax],ah
   14000971a:	and    BYTE PTR [rax],ah
   14000971c:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140009720:	gs ins BYTE PTR es:[rdi],dx
   140009722:	cmp    eax,0x49736122
   140009727:	outs   dx,BYTE PTR ds:[rsi]
   140009728:	jbe    0x140009799
   14000972a:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000972e:	or     eax,0x2020200a
   140009733:	and    BYTE PTR [rax],ah
   140009735:	and    BYTE PTR [rax],ah
   140009737:	and    BYTE PTR [rax],ah
   140009739:	and    BYTE PTR [rax],ah
   14000973b:	and    BYTE PTR [rax],ah
   14000973d:	and    BYTE PTR [rax],ah
   14000973f:	and    BYTE PTR [rbp+0x69],dh
   140009742:	movsxd esp,DWORD PTR [r11+0x65]
   140009746:	jae    0x1400097bb
   140009748:	cmp    eax,0x6c616622
   14000974d:	jae    0x1400097b4
   14000974f:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020b75f
   140009755:	and    BYTE PTR [rax],ah
   140009757:	and    BYTE PTR [rax],ah
   140009759:	and    BYTE PTR [rax],ah
   14000975b:	and    BYTE PTR [rax],ah
   14000975d:	and    BYTE PTR [rdi],ch
   14000975f:	ds or  eax,0x2020200a
   140009765:	and    BYTE PTR [rax],ah
   140009767:	and    BYTE PTR [rax],ah
   140009769:	and    BYTE PTR [rdi+rbp*1],bh
   14000976c:	jb     0x1400097d3
   14000976e:	jno    0x1400097e5
   140009770:	gs jae 0x1400097e7
   140009773:	gs fs push rax
   140009776:	jb     0x1400097e1
   140009778:	jbe    0x1400097e3
   14000977a:	ins    BYTE PTR es:[rdi],dx
   14000977b:	gs addr32 gs jae 0x1400097be
   140009780:	or     eax,0x2020200a
   140009785:	and    BYTE PTR [rdi+rbp*1],bh
   140009788:	jae    0x1400097ef
   14000978a:	movsxd esi,DWORD PTR [rbp+0x72]
   14000978d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140009795:	je     0x140009809
   140009797:	jne    0x14000980c
   140009799:	je     0x1400097e4
   14000979b:	outs   dx,BYTE PTR ds:[rsi]
   14000979c:	outs   dx,WORD PTR ds:[rsi]
   14000979e:	ds or  eax,0x612f3c0a
   1400097a4:	jae    0x140009819
   1400097a6:	gs ins DWORD PTR es:[rdi],dx
   1400097a8:	(bad)  
   1400097a9:	ins    BYTE PTR es:[rdi],dx
   1400097aa:	jns    0x1400097ea
   1400097ac:	add    BYTE PTR [rax],al
   1400097ae:	add    BYTE PTR [rax],al
   1400097b0:	sub    BYTE PTR [rax],al
   1400097b2:	add    BYTE PTR [rax],al
   1400097b4:	xor    BYTE PTR [rax],al
   1400097b6:	add    BYTE PTR [rax],al
   1400097b8:	(bad)  
   1400097b9:	add    BYTE PTR [rax],al
   1400097bb:	add    BYTE PTR [rcx],al
   1400097bd:	add    BYTE PTR [rax+rax*1],al
   1400097c0:	add    BYTE PTR [rax],al
   1400097c2:	add    BYTE PTR [rax],al
   1400097c4:	add    BYTE PTR [rax+rax*1],0x0
	...
   1400097dc:	add    BYTE PTR [rax],al
   1400097de:	add    BYTE PTR [rax],0x0
   1400097e1:	add    BYTE PTR [rax],0x0
   1400097e4:	add    BYTE PTR [rax+0x800080],al
   1400097ea:	add    BYTE PTR [rax],al
   1400097ec:	add    BYTE PTR [rax],0x80
   1400097ef:	add    BYTE PTR [rax-0x7fffff80],al
   1400097f5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400097fc:	add    BYTE PTR [rax],al
   1400097fe:	inc    DWORD PTR [rax]
   140009800:	add    bh,bh
   140009802:	add    BYTE PTR [rax],al
   140009804:	add    bh,bh
   140009806:	inc    DWORD PTR [rax]
   140009808:	inc    DWORD PTR [rax]
   14000980a:	add    BYTE PTR [rax],al
   14000980c:	inc    DWORD PTR [rax]
   14000980e:	inc    DWORD PTR [rax]
   140009810:	(bad)  
   140009811:	inc    DWORD PTR [rax]
   140009813:	add    bh,bh
   140009815:	(bad)  
   140009816:	inc    DWORD PTR [rax]
	...
   1400098d8:	add    BYTE PTR [rax],al
   1400098da:	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
   1400098e8:	data16 data16 data16 data16 data16 (bad) 
   1400098ee:	add    BYTE PTR [rax],al
   1400098f0:	add    BYTE PTR [rax],al
   1400098f2:	outs   dx,DWORD PTR ds:[rsi]
   1400098f3:	(bad)  
   1400098f4:	(bad)  
   1400098f5:	(bad)  
   1400098f6:	(bad)  
   1400098f7:	(bad)  
   1400098f8:	(bad)  
   1400098f9:	(bad)  
   1400098fa:	(bad)  
   1400098fb:	(bad)  
   1400098fc:	(bad)  
   1400098fd:	(bad)  
   1400098fe:	(bad)  
   1400098ff:	(bad)  
   140009900:	(bad)  
   140009901:	(bad)  
   140009902:	(bad)  
   140009903:	(bad)  
   140009904:	jmp    QWORD PTR [rax+0x0]
   140009907:	add    BYTE PTR [rax],al
   140009909:	add    BYTE PTR [rdi-0x8],ch
   14000990c:	clc    
   14000990d:	clc    
   14000990e:	clc    
   14000990f:	clc    
   140009910:	(bad)
   140009914:	mov    BYTE PTR [rax-0x77777778],cl
   14000991a:	mov    BYTE PTR [rax+0x608f],cl
   140009920:	add    BYTE PTR [rax],al
   140009922:	outs   dx,DWORD PTR ds:[rsi]
   140009923:	(bad)  
   140009924:	dec    DWORD PTR [rdi-0x70708]
   14000992a:	mov    al,bh
   14000992c:	clc    
   14000992d:	clc    
   14000992e:	(bad)
   140009932:	mov    BYTE PTR [rax+0x608f],cl
   140009938:	add    BYTE PTR [rax],al
   14000993a:	outs   dx,DWORD PTR ds:[rsi]
   14000993b:	(bad)  
   14000993c:	(bad)  
   14000993d:	clc    
   14000993e:	clc    
   14000993f:	clc    
   140009940:	clc    
   140009941:	mov    al,bh
   140009943:	mov    BYTE PTR [rax-0x77777778],cl
   140009949:	mov    al,ch
   14000994b:	mov    cs,WORD PTR [rdi+0x60]
   140009951:	add    BYTE PTR [rdi-0x1],ch
   140009954:	(bad)  
   140009955:	(bad)  
   140009959:	clc    
   14000995a:	mov    BYTE PTR [rdi-0x77777778],cl
   140009960:	mov    bh,ch
   140009962:	mov    BYTE PTR [rdi+0x608f],cl
   140009968:	add    BYTE PTR [rax],al
   14000996a:	outs   dx,DWORD PTR ds:[rsi]
   14000996b:	clc    
   14000996c:	clc    
   14000996d:	clc    
   14000996e:	clc    
   14000996f:	mov    al,bh
   140009971:	mov    BYTE PTR [rdi-0x77077778],cl
   140009977:	mov    BYTE PTR [rax-0x70717708],cl
   14000997d:	(bad)  
   14000997e:	add    BYTE PTR [rax],al
   140009980:	add    BYTE PTR [rax],al
   140009982:	outs   dx,DWORD PTR ds:[rsi]
   140009983:	dec    DWORD PTR [rsi+0x6e7e6e7e]
   140009989:	jle    0x140009a09
   14000998b:	mov    BYTE PTR [rax-0x77777778],cl
   140009991:	mov    BYTE PTR [rax+0x608f8f],cl
   140009997:	add    BYTE PTR [rax],al
   140009999:	add    BYTE PTR [rdi-0x78],ch
   14000999c:	js     0x14000992d
   14000999e:	clc    
   14000999f:	(bad)  
   1400099a0:	clc    
   1400099a1:	clc    
   1400099a2:	mov    al,ch
   1400099a4:	clc    
   1400099a5:	(bad)
   1400099a9:	mov    bh,ch
   1400099ab:	mov    BYTE PTR [rdi+0x60],cl
   1400099b1:	add    BYTE PTR [rdi-0x8],ch
   1400099b4:	out    dx,eax
   1400099b5:	mov    BYTE PTR [rax-0x7777778],cl
   1400099bb:	mov    BYTE PTR [rax-0x77777778],cl
   1400099c1:	mov    al,bh
   1400099c3:	mov    ?,edi
   1400099c5:	(bad)  
   1400099c6:	add    BYTE PTR [rax],al
   1400099c8:	add    BYTE PTR [rax],al
   1400099ca:	outs   dx,DWORD PTR ds:[rsi]
   1400099cb:	mov    BYTE PTR [rax-0x77707778],cl
   1400099d1:	clc    
   1400099d2:	mov    cs,WORD PTR [rsi-0x7077771]
   1400099d8:	mov    BYTE PTR [rax+0x608f8888],cl
   1400099de:	add    BYTE PTR [rax],al
   1400099e0:	add    BYTE PTR [rax],al
   1400099e2:	outs   dx,DWORD PTR ds:[rsi]
   1400099e3:	test   DWORD PTR [rax-0x71771778],0x88877887
   1400099ed:	(bad)
   1400099f1:	mov    BYTE PTR [rax+0x608f88],cl
   1400099f7:	add    BYTE PTR [rax],al
   1400099f9:	add    BYTE PTR [rdi-0x78],ch
   1400099fc:	mov    cs,WORD PTR [rax-0x71787779]
   140009a02:	mov    BYTE PTR [rsi-0x71717171],cl
   140009a08:	out    0x8e,eax
   140009a0a:	mov    ?,eax
   140009a0c:	(bad)  
   140009a0d:	(bad)  
   140009a0e:	add    BYTE PTR [rax],al
   140009a10:	add    BYTE PTR [rax],al
   140009a12:	outs   dx,DWORD PTR ds:[rsi]
   140009a13:	dec    BYTE PTR [rax+0x78878e88]
   140009a19:	js     0x1400099a9
   140009a1b:	xchg   DWORD PTR [rax+0x78868888],ecx
   140009a21:	mov    BYTE PTR [rax+0x608f88],cl
   140009a27:	add    BYTE PTR [rax],al
   140009a29:	add    BYTE PTR [rdi-0x78],ch
   140009a2c:	mov    BYTE PTR [rsi-0x77c87878],cl
   140009a32:	mov    dh,bh
   140009a34:	(bad)  
   140009a35:	(bad)  
   140009a36:	mov    cs,eax
   140009a38:	enter  0x8888,0x88
   140009a3c:	(bad)  
   140009a3d:	(bad)  
   140009a3e:	add    BYTE PTR [rax],al
   140009a40:	add    BYTE PTR [rax],al
   140009a42:	outs   dx,DWORD PTR ds:[rsi]
   140009a43:	mov    BYTE PTR [rsi+0x78788888],cl
   140009a49:	mov    al,ch
   140009a4b:	xchg   DWORD PTR [rax-0x18178972],ecx
   140009a51:	call   0x1a09092e4
   140009a56:	add    BYTE PTR [rax],al
   140009a58:	add    BYTE PTR [rax],al
   140009a5a:	outs   dx,DWORD PTR ds:[rsi]
   140009a5b:	test   BYTE PTR [rax-0x48777778],0x78
   140009a62:	mov    BYTE PTR [rsi-0x18137308],cl
   140009a68:	(bad)  
   140009a69:	mov    BYTE PTR [rax+0x608f88],cl
   140009a6f:	add    BYTE PTR [rax],al
   140009a71:	add    BYTE PTR [rdi-0x8],ch
   140009a74:	mov    BYTE PTR [rax+0x7887f888],cl
   140009a7a:	mov    BYTE PTR [rdi-0x37819178],al
   140009a80:	call   0xcf89230d
   140009a85:	(bad)  
   140009a86:	add    BYTE PTR [rax],al
   140009a88:	add    BYTE PTR [rax],al
   140009a8a:	outs   dx,DWORD PTR ds:[rsi]
   140009a8b:	mov    BYTE PTR [rax-0x7c777772],cl
   140009a91:	js     0x140009a7b
   140009a93:	mov    ?,WORD PTR [rsp+rbp*8-0x14]
   140009a97:	call   0xc8892903
   140009a9c:	(bad)  
   140009a9d:	(bad)  
   140009a9e:	add    BYTE PTR [rax],al
   140009aa0:	add    BYTE PTR [rax],al
   140009aa2:	outs   dx,DWORD PTR ds:[rsi]
   140009aa3:	mov    al,ch
   140009aa5:	mov    BYTE PTR [rax-0x77878889],cl
   140009aab:	mov    esi,fs
   140009aad:	out    dx,al
   140009aae:	jle    0x140009b1e
   140009ab0:	ja     0x140009a39
   140009ab2:	mov    cs,WORD PTR [rax+0x6088]
   140009ab8:	add    BYTE PTR [rax],al
   140009aba:	outs   dx,DWORD PTR ds:[rsi]
   140009abb:	clc    
   140009abc:	mov    BYTE PTR [rax-0x77878718],cl
   140009ac2:	mov    fs,WORD PTR [rsi-0x19]
   140009ac5:	in     al,dx
   140009ac6:	out    dx,al
   140009ac7:	enter  0xcece,0x7c
   140009acb:	out    0xe7,eax
   140009acd:	out    0x8e,eax
   140009acf:	add    BYTE PTR [rax],al
   140009ad1:	add    BYTE PTR [rdi-0x78],ch
   140009ad4:	call   0xc8892361
   140009ad9:	mov    ch,ah
   140009adb:	call   0x12ecf83cc
   140009ae0:	mov    al,ch
   140009ae2:	call   0x1077f1275
   140009ae7:	add    BYTE PTR [rax],0x0
   140009aea:	outs   dx,DWORD PTR ds:[rsi]
   140009aeb:	dec    DWORD PTR [rax+rbp*8-0x19777118]
   140009af2:	rex.WRX jle 0x140009b73
   140009af5:	mov    fs,edi
   140009af7:	(bad)  
   140009af8:	(bad)  
   140009af9:	(bad)  
   140009afa:	mov    dh,0xce
   140009afd:	(bad)  
   140009afe:	push   0x6f0000e0
   140009b03:	clc    
   140009b04:	dec    DWORD PTR [rax+0x568e8888]
   140009b0a:	out    0xec,eax
   140009b0c:	mov    cs,eax
   140009b0e:	out    dx,al
   140009b0f:	out    0xe6,eax
   140009b11:	out    0xee,eax
   140009b13:	outs   dx,BYTE PTR ds:[rsi]
   140009b14:	ins    BYTE PTR es:[rdi],dx
   140009b15:	ins    BYTE PTR es:[rdi],dx
   140009b16:	rol    BYTE PTR [eax],0x0
   140009b1a:	outs   dx,DWORD PTR ds:[rsi]
   140009b1b:	(bad)  
   140009b1c:	(bad)  
   140009b1d:	dec    DWORD PTR [rdi+0x7c6e8c88]
   140009b23:	mov    gs,eax
   140009b25:	out    dx,al
   140009b26:	enter  0xe7ec,0xec
   140009b2a:	ins    BYTE PTR es:[rdi],dx
   140009b2b:	in     al,dx
   140009b2c:	out    0xe6,al
   140009b2e:	(bad)  
   140009b2f:	add    BYTE PTR [rax],0x0
   140009b32:	outs   dx,DWORD PTR ds:[rsi]
   140009b33:	(bad)  
   140009b34:	clc    
   140009b35:	(bad)  
   140009b36:	clc    
   140009b37:	jmp    QWORD PTR [rsi-0x19]
   140009b3a:	out    dx,al
   140009b3b:	out    0xce,eax
   140009b3d:	mov    cs,WORD PTR [rsi-0x19317182]
   140009b43:	out    0xce,al
   140009b45:	(bad)  
   140009b46:	out    0xe0,eax
   140009b48:	add    BYTE PTR [rax],al
   140009b4a:	outs   dx,DWORD PTR ds:[rsi]
   140009b4b:	(bad)  
   140009b4c:	(bad)  
   140009b4d:	(bad)  
   140009b4e:	(bad)  
   140009b4f:	jmp    FWORD PTR [rsp+rcx*4+0x77]
   140009b53:	(bad)  
   140009b54:	mov    cs,eax
   140009b56:	in     al,dx
   140009b57:	call   0x12ced8448
   140009b5c:	out    0x6c,al
   140009b5e:	push   0x660000c0
   140009b63:	data16 data16 data16 data16 data16 data16 outs dx,BYTE PTR ds:[rsi]
   140009b6a:	in     al,dx
   140009b6b:	mov    fs,edi
   140009b6d:	out    dx,al
   140009b6e:	mov    cs,WORD PTR [rsi+0x7e7e8e7e]
   140009b74:	jl     0x140009b64
   140009b76:	(bad)  
   140009b77:	add    BYTE PTR [rax],0x0
   140009b7a:	add    BYTE PTR [rax],al
   140009b7c:	add    BYTE PTR [rax],al
   140009b7e:	add    BYTE PTR [rax],al
   140009b80:	add    BYTE PTR [rsi+rdi*2-0x19],bh
   140009b84:	(bad)  
   140009b85:	jl     0x140009b6e
   140009b87:	in     al,dx
   140009b88:	call   0xcecf8479
   140009b8d:	(bad)  
   140009b8e:	out    0x80,eax
	...
   140009b98:	add    BYTE PTR [rax],cl
   140009b9a:	ins    BYTE PTR es:[rdi],dx
   140009b9b:	mov    ?,WORD PTR [rsi-0x72]
   140009b9e:	mov    ?,WORD PTR [rsi-0x72]
   140009ba1:	jle    0x140009b31
   140009ba3:	mov    cs,esi
   140009ba5:	mov    cs,eax
   140009ba7:	loopne 0x140009ba9
	...
   140009bb1:	add    BYTE PTR [rsi],al
   140009bb3:	ins    BYTE PTR es:[rdi],dx
   140009bb4:	out    0xec,eax
   140009bb6:	out    0xe8,eax
   140009bb8:	call   0xcee984a5
   140009bbd:	mov    al,ch
   140009bbf:	rol    BYTE PTR [rax],0x0
	...
   140009bca:	add    BYTE PTR [rsi-0x14],dh
   140009bcd:	mov    ?,WORD PTR [rsi-0x32]
   140009bd0:	mov    bh,0xc7
   140009bd3:	(bad)  
   140009bd4:	jl     0x140009bc2
   140009bd6:	jle    0x140009bd8
	...
   140009be0:	add    BYTE PTR [rax],al
   140009be2:	add    BYTE PTR [rdi],al
   140009be4:	jle    0x140009bb4
   140009be6:	enter  0x60e8,0x0
	...
   140009bfa:	add    BYTE PTR [rax],al
   140009bfc:	(bad)  
   140009bfd:	jle    0x140009b8d
   140009bff:	(bad)  
   140009c00:	jo     0x140009c02
	...
   140009c12:	add    BYTE PTR [rax],al
   140009c14:	add    BYTE PTR [rdi+riz*8-0x18],ch
   140009c18:	rol    BYTE PTR [rax],0x0
	...
   140009c2b:	add    BYTE PTR [rax],al
   140009c2d:	(bad)  
   140009c2e:	push   0x60ce
	...
   140009c43:	add    BYTE PTR [rax],al
   140009c45:	add    BYTE PTR [rsi+0x60e7],al
	...
   140009c5f:	rol    BYTE PTR [eax],0x0
	...
   140009c77:	(bad)  
   140009c78:	(bad)  
	...
   140009c95:	add    BYTE PTR [rax],al
   140009c97:	add    bh,bh
   140009c99:	(bad)  
   140009c9a:	(bad)  
   140009c9b:	(bad)  
   140009c9c:	(bad)  
   140009c9d:	inc    DWORD PTR [rax]
   140009c9f:	add    bh,bh
   140009ca1:	(bad)  
   140009ca2:	(bad)  
   140009ca3:	(bad)  
   140009ca4:	(bad)  
   140009ca5:	inc    DWORD PTR [rax]
   140009ca7:	add    bh,bh
   140009ca9:	(bad)  
   140009caa:	(bad)  
   140009cab:	(bad)  
   140009cac:	(bad)  
   140009cad:	inc    DWORD PTR [rax]
   140009caf:	add    bh,bh
   140009cb1:	(bad)  
   140009cb2:	(bad)  
   140009cb3:	(bad)  
   140009cb4:	(bad)  
   140009cb5:	inc    DWORD PTR [rax]
   140009cb7:	add    bh,bh
   140009cb9:	(bad)  
   140009cba:	(bad)  
   140009cbb:	(bad)  
   140009cbc:	(bad)  
   140009cbd:	inc    DWORD PTR [rax]
   140009cbf:	add    bh,bh
   140009cc1:	(bad)  
   140009cc2:	(bad)  
   140009cc3:	(bad)  
   140009cc4:	(bad)  
   140009cc5:	inc    DWORD PTR [rax]
   140009cc7:	add    bh,bh
   140009cc9:	(bad)  
   140009cca:	(bad)  
   140009ccb:	(bad)  
   140009ccc:	(bad)  
   140009ccd:	inc    DWORD PTR [rax]
   140009ccf:	add    bh,bh
   140009cd1:	(bad)  
   140009cd2:	(bad)  
   140009cd3:	(bad)  
   140009cd4:	(bad)  
   140009cd5:	inc    DWORD PTR [rax]
   140009cd7:	add    al,dh
   140009cd9:	add    BYTE PTR [rax],al
   140009cdb:	add    BYTE PTR [rax],al
   140009cdd:	(bad)  
   140009cde:	add    BYTE PTR [rax],al
   140009ce0:	lock add BYTE PTR [rax],al
   140009ce3:	add    BYTE PTR [rax],al
   140009ce5:	(bad)  
   140009ce6:	add    BYTE PTR [rax],al
   140009ce8:	lock add BYTE PTR [rax],al
   140009ceb:	add    BYTE PTR [rax],al
   140009ced:	(bad)  
   140009cee:	add    BYTE PTR [rax],al
   140009cf0:	lock add BYTE PTR [rax],al
   140009cf3:	add    BYTE PTR [rax],al
   140009cf5:	(bad)  
   140009cf6:	add    BYTE PTR [rax],al
   140009cf8:	lock add BYTE PTR [rax],al
   140009cfb:	add    BYTE PTR [rax],al
   140009cfd:	(bad)  
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	lock add BYTE PTR [rax],al
   140009d03:	add    BYTE PTR [rax],al
   140009d05:	(bad)  
   140009d06:	add    BYTE PTR [rax],al
   140009d08:	lock add BYTE PTR [rax],al
   140009d0b:	add    BYTE PTR [rax],al
   140009d0d:	(bad)  
   140009d0e:	add    BYTE PTR [rax],al
   140009d10:	lock add BYTE PTR [rax],al
   140009d13:	add    BYTE PTR [rax],al
   140009d15:	(bad)  
   140009d16:	add    BYTE PTR [rax],al
   140009d18:	lock add BYTE PTR [rax],al
   140009d1b:	add    BYTE PTR [rax],al
   140009d1d:	(bad)  
   140009d1e:	add    BYTE PTR [rax],al
   140009d20:	lock add BYTE PTR [rax],al
   140009d23:	add    BYTE PTR [rax],al
   140009d25:	(bad)  
   140009d26:	add    BYTE PTR [rax],al
   140009d28:	lock add BYTE PTR [rax],al
   140009d2b:	add    BYTE PTR [rax],al
   140009d2d:	(bad)  
   140009d2e:	add    BYTE PTR [rax],al
   140009d30:	lock add BYTE PTR [rax],al
   140009d33:	add    BYTE PTR [rax],al
   140009d35:	(bad)  
   140009d36:	add    BYTE PTR [rax],al
   140009d38:	lock add BYTE PTR [rax],al
   140009d3b:	add    BYTE PTR [rax],al
   140009d3d:	(bad)  
   140009d3e:	add    BYTE PTR [rax],al
   140009d40:	lock add BYTE PTR [rax],al
   140009d43:	add    BYTE PTR [rax],al
   140009d45:	(bad)  
   140009d46:	add    BYTE PTR [rax],al
   140009d48:	lock add BYTE PTR [rax],al
   140009d4b:	add    BYTE PTR [rax],al
   140009d4d:	(bad)  
   140009d4e:	add    BYTE PTR [rax],al
   140009d50:	lock add BYTE PTR [rax],al
   140009d53:	add    BYTE PTR [rax],al
   140009d55:	(bad)  
   140009d56:	add    BYTE PTR [rax],al
   140009d58:	lock add BYTE PTR [rax],al
   140009d5b:	add    BYTE PTR [rax],al
   140009d5d:	(bad)  
   140009d5e:	add    BYTE PTR [rax],al
   140009d60:	lock add BYTE PTR [rax],al
   140009d63:	add    BYTE PTR [rax],al
   140009d65:	(bad)  
   140009d66:	add    BYTE PTR [rax],al
   140009d68:	lock add BYTE PTR [rax],al
   140009d6b:	add    BYTE PTR [rax],al
   140009d6d:	(bad)  
   140009d6e:	add    BYTE PTR [rax],al
   140009d70:	lock add BYTE PTR [rax],al
   140009d73:	add    BYTE PTR [rax],al
   140009d75:	(bad)  
   140009d76:	add    BYTE PTR [rax],al
   140009d78:	lock add BYTE PTR [rax],al
   140009d7b:	add    BYTE PTR [rax],al
   140009d7d:	add    eax,DWORD PTR [rax]
   140009d7f:	add    al,dh
   140009d81:	add    BYTE PTR [rax],al
   140009d83:	add    BYTE PTR [rax],al
   140009d85:	add    DWORD PTR [rax],eax
   140009d87:	add    al,dh
   140009d89:	add    BYTE PTR [rax],al
   140009d8b:	add    BYTE PTR [rax],al
   140009d8d:	add    DWORD PTR [rax],eax
   140009d8f:	add    al,dh
   140009d91:	add    BYTE PTR [rax],al
   140009d93:	add    BYTE PTR [rax],al
   140009d95:	add    DWORD PTR [rax],eax
   140009d97:	add    al,dh
   140009d99:	add    BYTE PTR [rax],al
   140009d9b:	add    BYTE PTR [rax],al
   140009d9d:	add    DWORD PTR [rax],eax
   140009d9f:	add    al,dh
   140009da1:	add    BYTE PTR [rax],al
   140009da3:	add    BYTE PTR [rax],al
   140009da5:	add    DWORD PTR [rax],eax
   140009da7:	add    al,dh
   140009da9:	add    BYTE PTR [rax],al
   140009dab:	add    BYTE PTR [rax],al
   140009dad:	add    DWORD PTR [rax],eax
   140009daf:	add    al,dh
   140009db1:	add    BYTE PTR [rax],al
   140009db3:	add    BYTE PTR [rax],al
   140009db5:	add    DWORD PTR [rax],eax
   140009db7:	add    bh,bh
   140009db9:	inc    eax
   140009dbb:	add    BYTE PTR [rax],al
   140009dbd:	add    DWORD PTR [rax],eax
   140009dbf:	add    bh,bh
   140009dc1:	jmp    rax
   140009dc3:	add    BYTE PTR [rax],al
   140009dc5:	add    DWORD PTR [rax],eax
   140009dc7:	add    bh,bh
   140009dc9:	(bad)  
   140009dca:	clc    
   140009dcb:	add    BYTE PTR [rax],al
   140009dcd:	add    DWORD PTR [rax],eax
   140009dcf:	add    bh,bh
   140009dd1:	(bad)  
   140009dd2:	cld    
   140009dd3:	add    BYTE PTR [rax],al
   140009dd5:	add    eax,DWORD PTR [rax]
   140009dd7:	add    bh,bh
   140009dd9:	(bad)  
   140009dda:	inc    BYTE PTR [rax]
   140009ddc:	jg     0x140009ddd
   140009dde:	add    BYTE PTR [rax],al
   140009de0:	(bad)  
   140009de1:	(bad)  
   140009de2:	inc    DWORD PTR [rax+0xff7f]
   140009de8:	(bad)  
   140009de9:	(bad)  
   140009dea:	inc    eax
   140009dec:	jg     0x140009ded
   140009dee:	add    BYTE PTR [rax],al
   140009df0:	(bad)  
   140009df1:	(bad)  
   140009df2:	jmp    rax
   140009df4:	jg     0x140009df5
   140009df6:	add    BYTE PTR [rax],al
   140009df8:	(bad)  
   140009df9:	(bad)  
   140009dfa:	push   rax
   140009dfc:	jg     0x140009dfd
   140009dfe:	add    BYTE PTR [rax],al
   140009e00:	(bad)  
   140009e01:	(bad)  
   140009e02:	(bad)  
   140009e03:	cld    
   140009e04:	jg     0x140009e05
   140009e06:	add    BYTE PTR [rax],al
   140009e08:	(bad)  
   140009e09:	(bad)  
   140009e0a:	(bad)  
   140009e0b:	(bad)  
   140009e0c:	jg     0x140009e0d
   140009e0e:	add    BYTE PTR [rax],al
   140009e10:	(bad)  
   140009e11:	(bad)  
   140009e12:	(bad)  
   140009e13:	(bad)  
   140009e14:	(bad)  
   140009e15:	inc    DWORD PTR [rax]
   140009e17:	add    BYTE PTR [rax],ch
   140009e19:	add    BYTE PTR [rax],al
   140009e1b:	add    BYTE PTR [rax],ah
   140009e1d:	add    BYTE PTR [rax],al
   140009e1f:	add    BYTE PTR [rax+0x0],al
   140009e22:	add    BYTE PTR [rax],al
   140009e24:	add    DWORD PTR [rax],eax
   140009e26:	add    al,0x0
   140009e28:	add    BYTE PTR [rax],al
   140009e2a:	add    BYTE PTR [rax],al
   140009e2c:	add    BYTE PTR [rdx],al
	...
   140009e46:	add    BYTE PTR [rax],0x0
   140009e49:	add    BYTE PTR [rax],0x0
   140009e4c:	add    BYTE PTR [rax+0x800080],al
   140009e52:	add    BYTE PTR [rax],al
   140009e54:	add    BYTE PTR [rax],0x80
   140009e57:	add    BYTE PTR [rax-0x7fffff80],al
   140009e5d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140009e64:	add    BYTE PTR [rax],al
   140009e66:	inc    DWORD PTR [rax]
   140009e68:	add    bh,bh
   140009e6a:	add    BYTE PTR [rax],al
   140009e6c:	add    bh,bh
   140009e6e:	inc    DWORD PTR [rax]
   140009e70:	inc    DWORD PTR [rax]
   140009e72:	add    BYTE PTR [rax],al
   140009e74:	inc    DWORD PTR [rax]
   140009e76:	inc    DWORD PTR [rax]
   140009e78:	(bad)  
   140009e79:	inc    DWORD PTR [rax]
   140009e7b:	add    bh,bh
   140009e7d:	(bad)  
   140009e7e:	inc    DWORD PTR [rax]
	...
   140009ea0:	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
   140009eae:	data16 outs dx,WORD PTR ds:[rsi]
   140009eb1:	(bad)  
   140009eb2:	(bad)  
   140009eb3:	(bad)  
   140009eb4:	(bad)  
   140009eb5:	(bad)  
   140009eb6:	(bad)  
   140009eb7:	(bad)  
   140009eb8:	(bad)  
   140009eb9:	(bad)  
   140009eba:	(bad)  
   140009ebb:	(bad)  
   140009ebc:	(bad)  
   140009ebd:	(bad)  
   140009ebe:	push   rsi
   140009ec0:	outs   dx,DWORD PTR ds:[rsi]
   140009ec1:	(bad)  
   140009ec2:	(bad)  
   140009ec3:	(bad)  
   140009ec4:	(bad)  
   140009ec5:	(bad)
   140009ec9:	mov    BYTE PTR [rax-0x77777778],cl
   140009ecf:	imul   BYTE PTR [rdi-0x1]
   140009ed2:	dec    DWORD PTR [rdi-0x70707071]
   140009ed8:	(bad)
   140009edc:	mov    BYTE PTR [rax-0x7900978],cl
   140009ee2:	clc    
   140009ee3:	dec    DWORD PTR [rdi-0x77707071]
   140009ee9:	(bad)
   140009eed:	mov    cs,WORD PTR [rax-0x900a]
   140009ef3:	(bad)  
   140009ef4:	(bad)
   140009ef8:	mov    BYTE PTR [rax-0x70777778],cl
   140009efe:	mov    dh,dh
   140009f00:	outs   dx,DWORD PTR ds:[rsi]
   140009f01:	clc    
   140009f02:	mov    es,WORD PTR [rdi-0x77171718]
   140009f08:	(bad)
   140009f0c:	mov    BYTE PTR [rsi-0x77900908],cl
   140009f12:	mov    BYTE PTR [rdi-0x17070008],cl
   140009f18:	clc    
   140009f19:	mov    al,bh
   140009f1b:	mov    BYTE PTR [rax+0x6ff68e8f],cl
   140009f21:	test   DWORD PTR [rax-0x77777778],0x88f888f7
   140009f2b:	mov    BYTE PTR [rax+0x6ff6f88e],cl
   140009f31:	mov    BYTE PTR [rax-0x77787772],cl
   140009f37:	mov    ?,eax
   140009f39:	mov    BYTE PTR [rdi-0x77707778],cl
   140009f3f:	imul   BYTE PTR [rdi-0x78]
   140009f42:	dec    BYTE PTR [rax-0x8777179]
   140009f48:	(bad)  
   140009f49:	(bad)
   140009f4d:	mov    BYTE PTR [rax-0x771900a],cl
   140009f53:	mov    BYTE PTR [rdi+0x78],dh
   140009f56:	mov    BYTE PTR [rax-0x17171778],cl
   140009f5c:	call   0x1aff72849
   140009f61:	clc    
   140009f62:	mov    BYTE PTR [rax-0x1717789],cl
   140009f68:	(bad)  
   140009f69:	clc    
   140009f6a:	dec    DWORD PTR [rdi-0x9770708]
   140009f70:	outs   dx,DWORD PTR ds:[rsi]
   140009f71:	mov    BYTE PTR [rax-0x77c70778],cl
   140009f77:	clc    
   140009f78:	mov    BYTE PTR [rax-0x17777118],cl
   140009f7e:	mov    dh,dh
   140009f80:	outs   dx,DWORD PTR ds:[rsi]
   140009f81:	mov    al,bh
   140009f83:	call   0x137891710
   140009f88:	(bad)  
   140009f89:	in     al,dx
   140009f8a:	mov    BYTE PTR [rax-0x9077778],cl
   140009f90:	outs   dx,DWORD PTR ds:[rsi]
   140009f91:	mov    BYTE PTR [rax-0x77878878],cl
   140009f97:	mov    ?,eax
   140009f99:	push   0xffffffff88888868
   140009f9e:	mov    dh,dh
   140009fa0:	outs   dx,DWORD PTR ds:[rsi]
   140009fa1:	mov    BYTE PTR [rax-0x17777878],cl
   140009fa7:	clc    
   140009fa8:	mov    eax,gs
   140009faa:	iret   
   140009fab:	mov    BYTE PTR [rax+0x6ff68888],cl
   140009fb1:	clc    
   140009fb2:	clc    
   140009fb3:	(bad)  
   140009fb4:	(bad)  
   140009fb5:	(bad)  
   140009fb6:	inc    DWORD PTR [rsi-0x901792]
   140009fbc:	clc    
   140009fbd:	clc    
   140009fbe:	clc    
   140009fbf:	imul   BYTE PTR [rdi-0x8]
   140009fc2:	call   0x128792eaf
   140009fc7:	jle    0x140009f97
   140009fc9:	enter  0x6666,0x6e
   140009fcd:	data16 outs dx,BYTE PTR ds:[rsi]
   140009fcf:	ins    BYTE PTR es:[rdi],dx
   140009fd0:	outs   dx,DWORD PTR ds:[rsi]
   140009fd1:	(bad)  
   140009fd2:	clc    
   140009fd3:	mov    BYTE PTR [rax-0x71317778],cl
   140009fd9:	call   0x1b8892ec6
   140009fde:	xchg   DWORD PTR [rsi-0x91],eax
   140009fe4:	(bad)  
   140009fe5:	inc    DWORD PTR [rsi-0x13181318]
   140009feb:	in     al,dx
   140009fec:	in     al,dx
   140009fed:	in     al,dx
   140009fee:	ins    BYTE PTR es:[rdi],dx
   140009fef:	out    0x6f,eax
   140009ff1:	(bad)  
   140009ff2:	(bad)  
   140009ff3:	(bad)  
   140009ff4:	(bad)  
   140009ff5:	clc    
   140009ff6:	outs   dx,BYTE PTR ds:[rsi]
   140009ff7:	(bad)  
   140009ff8:	mov    cs,WORD PTR [rsi+0x6eece6ce]
   140009ffe:	(bad)  
   140009fff:	mov    WORD PTR [rsi+0x66],fs
   14000a002:	data16 data16 data16 ins BYTE PTR es:[rdi],dx
   14000a006:	push   0xffffffffe8e8ece7
   14000a00b:	out    0xe6,eax
   14000a00d:	in     al,dx
   14000a00e:	out    0x86,al
   14000a010:	add    BYTE PTR [rax],al
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	or     al,0x6e
   14000a018:	js     0x14000a006
   14000a01a:	out    0xec,eax
   14000a01c:	mov    ?,WORD PTR [rsi-0x32]
   14000a01f:	mov    WORD PTR [rax],es
   14000a021:	add    BYTE PTR [rax],al
   14000a023:	add    BYTE PTR [rax],al
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	addr32 in al,dx
   14000a029:	call   0xceed8916
   14000a02e:	jl     0x14000a017
   14000a030:	add    BYTE PTR [rax],al
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    BYTE PTR [rax+rbp*8],cl
   14000a039:	out    0xc6,eax
   14000a03b:	(bad)  
   14000a03c:	jbe    0x14000a004
   14000a03e:	addr32 add BYTE PTR [eax],al
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	add    BYTE PTR [rax],al
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	ins    BYTE PTR es:[rdi],dx
   14000a049:	out    dx,al
   14000a04a:	jo     0x14000a04c
	...
   14000a058:	(bad)  
   14000a059:	jle    0x14000a01b
	...
   14000a067:	add    BYTE PTR [rax],al
   14000a069:	(bad)  
   14000a06a:	(bad)  
	...
   14000a077:	add    BYTE PTR [rax],al
   14000a079:	(bad)  
   14000a07a:	jo     0x14000a07c
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	(bad)  
   14000a081:	(bad)  
   14000a082:	(bad)  
   14000a083:	(bad)  
   14000a084:	(bad)  
   14000a085:	(bad)  
   14000a086:	(bad)  
   14000a087:	inc    DWORD PTR [rax]
	...
   14000a0e1:	add    BYTE PTR [rax],al
   14000a0e3:	add    bh,bh
   14000a0e5:	clc    
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	(bad)  
   14000a0e9:	cld    
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	(bad)  
   14000a0ed:	inc    BYTE PTR [rax]
   14000a0ef:	add    bh,bh
   14000a0f1:	inc    DWORD PTR [rdi]
   14000a0f3:	(bad)  
   14000a0f4:	(bad)  
   14000a0f5:	inc    DWORD PTR [rdi-0x38000001]
   14000a0fb:	(bad)  
   14000a0fc:	(bad)  
   14000a0fd:	jmp    rdi
   14000a0ff:	jmp    FWORD PTR [rax]
   14000a101:	add    BYTE PTR [rax],al
   14000a103:	add    BYTE PTR [rax],bl
   14000a105:	add    BYTE PTR [rax],al
   14000a107:	add    BYTE PTR [rax],dh
   14000a109:	add    BYTE PTR [rax],al
   14000a10b:	add    BYTE PTR [rcx],al
   14000a10d:	add    BYTE PTR [rax+rax*1],al
   14000a110:	add    BYTE PTR [rax],al
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	and    BYTE PTR [rcx],al
	...
   14000a12e:	add    BYTE PTR [rax],0x0
   14000a131:	add    BYTE PTR [rax],0x0
   14000a134:	add    BYTE PTR [rax+0x800080],al
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],0x80
   14000a13f:	add    BYTE PTR [rax-0x7fffff80],al
   14000a145:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	inc    DWORD PTR [rax]
   14000a150:	add    bh,bh
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	add    bh,bh
   14000a156:	inc    DWORD PTR [rax]
   14000a158:	inc    DWORD PTR [rax]
   14000a15a:	add    BYTE PTR [rax],al
   14000a15c:	inc    DWORD PTR [rax]
   14000a15e:	inc    DWORD PTR [rax]
   14000a160:	(bad)  
   14000a161:	inc    DWORD PTR [rax]
   14000a163:	add    bh,bh
   14000a165:	(bad)  
   14000a166:	inc    DWORD PTR [rax]
	...
   14000a180:	(bad)  
   14000a181:	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 (bad) 
   14000a18c:	(bad)  
   14000a18d:	(bad)  
   14000a18e:	(bad)  
   14000a18f:	(bad)  
   14000a190:	(bad)  
   14000a191:	(bad)  
   14000a192:	(bad)  
   14000a193:	(bad)  
   14000a194:	(bad)  
   14000a195:	(bad)  
   14000a196:	jmp    QWORD PTR [rax+0x6]
   14000a199:	clc    
   14000a19a:	clc    
   14000a19b:	clc    
   14000a19c:	mov    BYTE PTR [rax-0x77777778],cl
   14000a1a2:	(bad)  
   14000a1a3:	(bad)  
   14000a1a4:	(bad)  
   14000a1a5:	(bad)  
   14000a1a6:	dec    DWORD PTR [rdi-0x77777001]
   14000a1ac:	mov    BYTE PTR [rax-0x7f99f71],cl
   14000a1b2:	mov    BYTE PTR [rsi-0x7077788],cl
   14000a1b8:	mov    BYTE PTR [rax-0x7f99f11],cl
   14000a1be:	mov    BYTE PTR [rax-0x77077108],cl
   14000a1c4:	mov    BYTE PTR [rax-0x8f99f01],cl
   14000a1ca:	mov    cs,WORD PTR [rax-0x70707779]
   14000a1d0:	mov    BYTE PTR [rax-0x7f99f71],cl
   14000a1d6:	mov    BYTE PTR [rdi-0x18700782],al
   14000a1dc:	clc    
   14000a1dd:	clc    
   14000a1de:	(bad)  
   14000a1df:	(bad)  
   14000a1e0:	(bad)  
   14000a1e1:	clc    
   14000a1e2:	mov    es,WORD PTR [rbx+0x66888e88]
   14000a1e8:	mov    al,ch
   14000a1ea:	(bad)  
   14000a1eb:	(bad)  
   14000a1ec:	(bad)  
   14000a1ed:	dec    BYTE PTR [rax-0x73778778]
   14000a1f3:	mov    cs,WORD PTR [rdi+0x6608fff]
   14000a1f9:	clc    
   14000a1fa:	mov    BYTE PTR [rdi-0x18977188],al
   14000a200:	mov    BYTE PTR [rax-0x8f99f71],cl
   14000a206:	clc    
   14000a207:	mov    BYTE PTR [rax+0x6e8c8e8c],cl
   14000a20d:	(bad)  
   14000a20e:	out    0xc7,al
   14000a210:	(bad)  
   14000a211:	clc    
   14000a212:	mov    cs,WORD PTR [rax-0x71111719]
   14000a218:	mov    al,ch
   14000a21a:	js     0x14000a202
   14000a21c:	(bad)  
   14000a21d:	clc    
   14000a21e:	mov    BYTE PTR [rax-0x31317174],cl
   14000a224:	(bad)  
   14000a225:	(bad)  
   14000a226:	(bad)  
   14000a227:	mov    WORD PTR [rsi],es
   14000a229:	(bad)  
   14000a22a:	(bad)  
   14000a22b:	jmp    FWORD PTR [rax-0x19]
   14000a22e:	call   0x12ced891b
   14000a233:	xchg   BYTE PTR [rsi],al
   14000a235:	data16 data16 data16 ins BYTE PTR es:[rdi],dx
   14000a239:	mov    ?,WORD PTR [rsi-0x72]
   14000a23c:	jle    0x14000a2bc
   14000a23e:	outs   dx,BYTE PTR ds:[rsi]
   14000a23f:	jle    0x14000a241
   14000a241:	add    BYTE PTR [rax],al
   14000a243:	add    BYTE PTR [rax],al
   14000a245:	push   0xffffffffece7e7ec
   14000a24a:	mov    WORD PTR [rsi+0x0],es
   14000a250:	add    BYTE PTR [rsi+rcx*4],cl
   14000a253:	mov    WORD PTR [rsi+rsi*2+0x76],gs
   14000a257:	ins    BYTE PTR es:[rdi],dx
   14000a258:	add    BYTE PTR [rax],al
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	add    BYTE PTR [rax],al
   14000a25e:	push   0xe6
   14000a263:	add    BYTE PTR [rax],al
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    BYTE PTR [rax],al
   14000a269:	add    BYTE PTR [rsi+rax*4],cl
	...
   14000a274:	add    BYTE PTR [rax],al
   14000a276:	add    BYTE PTR [rsi+0x0],ah
	...
   14000a281:	add    BYTE PTR [rax],al
   14000a283:	or     al,0x0
   14000a285:	add    BYTE PTR [rax],al
   14000a287:	add    bh,bh
   14000a289:	(bad)  
   14000a28a:	inc    DWORD PTR [rax]
   14000a28c:	(bad)  
   14000a28d:	(bad)  
   14000a28e:	inc    DWORD PTR [rax]
   14000a290:	add    BYTE PTR [rax],0x1
   14000a293:	add    BYTE PTR [rax-0x7fffff00],al
   14000a299:	add    BYTE PTR [rcx],al
   14000a29b:	add    BYTE PTR [rax-0x7fffff00],al
   14000a2a1:	add    BYTE PTR [rcx],al
   14000a2a3:	add    BYTE PTR [rax-0x7fffff00],al
   14000a2a9:	add    BYTE PTR [rcx],al
   14000a2ab:	add    BYTE PTR [rax-0x7fffff00],al
   14000a2b1:	add    BYTE PTR [rcx],al
   14000a2b3:	add    BYTE PTR [rax-0x7fffff00],al
   14000a2b9:	add    BYTE PTR [rcx],al
   14000a2bb:	add    BYTE PTR [rax-0x80000000],al
   14000a2c1:	add    BYTE PTR [rax],al
   14000a2c3:	add    BYTE PTR [rax-0x80000000],al
   14000a2c9:	add    BYTE PTR [rax],al
   14000a2cb:	add    BYTE PTR [rax-0x1000000],al
   14000a2d1:	rol    BYTE PTR [rax],0x0
   14000a2d4:	jmp    rax
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	push   rax
   14000a2da:	inc    DWORD PTR [rax]
   14000a2dc:	(bad)  
   14000a2dd:	clc    
   14000a2de:	inc    DWORD PTR [rax]
   14000a2e0:	(bad)  
   14000a2e1:	cld    
   14000a2e2:	inc    DWORD PTR [rax]
   14000a2e4:	(bad)  
   14000a2e5:	(bad)  
   14000a2e6:	inc    DWORD PTR [rax]
   14000a2e8:	sub    BYTE PTR [rax],al
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	adc    BYTE PTR [rax],al
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	and    BYTE PTR [rax],al
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    DWORD PTR [rax],eax
   14000a2f6:	add    al,0x0
   14000a2f8:	add    BYTE PTR [rax],al
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],0x0
	...
   14000a313:	add    BYTE PTR [rax],al
   14000a315:	add    BYTE PTR [rax+0x800000],al
   14000a31b:	add    BYTE PTR [rax],al
   14000a31d:	add    BYTE PTR [rax+0x8000],0x0
   14000a324:	add    BYTE PTR [rax],0x80
   14000a327:	add    BYTE PTR [rax-0x7fffff80],al
   14000a32d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000a334:	add    BYTE PTR [rax],al
   14000a336:	inc    DWORD PTR [rax]
   14000a338:	add    bh,bh
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	add    bh,bh
   14000a33e:	inc    DWORD PTR [rax]
   14000a340:	inc    DWORD PTR [rax]
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	inc    DWORD PTR [rax]
   14000a346:	inc    DWORD PTR [rax]
   14000a348:	(bad)  
   14000a349:	inc    DWORD PTR [rax]
   14000a34b:	add    bh,bh
   14000a34d:	(bad)  
   14000a34e:	inc    DWORD PTR [rax]
   14000a350:	data16 data16 data16 data16 data16 data16 data16 outs dx,WORD PTR ds:[rsi]
   14000a359:	dec    DWORD PTR [rdi-0x77777771]
   14000a35f:	xchg   BYTE PTR [rdi-0x71],ch
   14000a362:	clc    
   14000a363:	clc    
   14000a364:	vpmacsswd xmm5,xmm14,xmm14,XMMWORD PTR [r15-0x9]
   14000a36b:	jg     0x14000a2f5
   14000a36d:	clc    
   14000a36e:	mov    BYTE PTR [rsi-0x18778791],al
   14000a374:	clc    
   14000a375:	mov    BYTE PTR [rax+0x777e6f86],cl
   14000a37b:	jle    0x14000a375
   14000a37d:	call   0x1b8702a6a
   14000a382:	xchg   DWORD PTR [rdi-0x79070071],eax
   14000a388:	outs   dx,DWORD PTR ds:[rsi]
   14000a389:	js     0x14000a313
   14000a38b:	mov    BYTE PTR [rsi+0x6ff68e68],cl
   14000a391:	mov    bh,ah
   14000a393:	mov    BYTE PTR [rdi+rdi*2-0x900901],cl
   14000a39a:	(bad)  
   14000a39b:	(bad)  
   14000a39c:	push   0x6fc766e6
   14000a3a1:	(bad)  
   14000a3a2:	dec    DWORD PTR [rsi+rdi*8+0x66868888]
   14000a3a9:	data16 pushw 0xeeec
   14000a3ae:	(bad)  
   14000a3af:	xchg   BYTE PTR [rax],al
   14000a3b1:	add    BYTE PTR [rax],al
   14000a3b3:	or     al,0x8e
   14000a3b5:	mov    cs,WORD PTR [rsi+0x8c]
   14000a3bb:	add    BYTE PTR [rax-0x3a],ch
   14000a3be:	(bad)  
   14000a3bf:	add    BYTE PTR [eax],al
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	(bad)  
   14000a3c5:	jo     0x14000a3c7
   14000a3c7:	add    BYTE PTR [rax],al
   14000a3c9:	add    BYTE PTR [rax],al
   14000a3cb:	add    BYTE PTR [rax],al
   14000a3cd:	(bad)  
	...
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	inc    BYTE PTR [rax]
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	inc    DWORD PTR [rax]
   14000a406:	add    BYTE PTR [rax],al
   14000a408:	call   FWORD PTR [rdi-0x20010000]
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	sub    BYTE PTR [rax],al
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	xor    BYTE PTR [rax],al
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	(bad)  
   14000a419:	add    BYTE PTR [rax],al
   14000a41b:	add    BYTE PTR [rcx],al
   14000a41d:	add    BYTE PTR [rax],cl
   14000a41f:	add    BYTE PTR [rax],al
   14000a421:	add    BYTE PTR [rax],al
   14000a423:	add    BYTE PTR [rax],al
   14000a425:	or     DWORD PTR [rax],eax
	...
   14000a42f:	add    BYTE PTR [rax],al
   14000a431:	add    DWORD PTR [rax],eax
   14000a433:	add    BYTE PTR [rax],al
   14000a435:	add    DWORD PTR [rax],eax
   14000a437:	add    BYTE PTR [rax],al
   14000a439:	add    BYTE PTR [rax],al
   14000a43b:	add    BYTE PTR [rbx+0x68],ch
   14000a43e:	data16 add BYTE PTR [rax+0x6a],ch
   14000a442:	outs   dx,DWORD PTR ds:[rsi]
   14000a443:	add    BYTE PTR [rax+0x78],bh
   14000a446:	jae    0x14000a448
   14000a448:	xchg   edx,eax
   14000a449:	pop    rsi
   14000a44a:	or     al,0x0
   14000a44c:	xchg   edx,eax
   14000a44d:	(bad)  
   14000a44e:	(bad)  
   14000a44f:	add    BYTE PTR [rbx+riz*2+0x619e0012],dl
   14000a456:	adc    eax,DWORD PTR [rax]
   14000a458:	sahf   
   14000a459:	movsxd ebx,DWORD PTR [rcx]
   14000a45b:	add    BYTE PTR [rdi-0x67ffe598],dl
   14000a461:	imul   ebx,DWORD PTR [rip+0x69be00],0x1968a600        # 0x1406a626b
   14000a46b:	add    BYTE PTR [rsi-0x44ffe88f],ch
   14000a471:	jnp    0x14000a48f
   14000a473:	add    BYTE PTR [rax-0x64ffdea4],al
   14000a479:	imul   esp,DWORD PTR [rbx],0x0
   14000a47c:	sahf   
   14000a47d:	jb     0x14000a4a8
   14000a47f:	add    BYTE PTR [rdi-0x58ffdc94],ah
   14000a485:	jno    0x14000a4ae
   14000a487:	add    BYTE PTR [rbp-0x54ffdb8f],ch
   14000a48d:	jno    0x14000a4b8
   14000a48f:	add    BYTE PTR [rcx-0x4bffdb8d],dh
   14000a495:	jbe    0x14000a4bf
   14000a497:	add    BYTE PTR [rsi-0x45ffd188],dh
   14000a49d:	jg     0x14000a4ce
   14000a49f:	add    BYTE PTR [rdi-0x46ffc384],ch
   14000a4a5:	jge    0x14000a4d8
   14000a4a7:	add    bl,al
   14000a4a9:	outs   dx,DWORD PTR ds:[rsi]
   14000a4aa:	add    BYTE PTR [rax],al
   14000a4ac:	retf   0x77
   14000a4af:	add    al,dl
   14000a4b1:	jg     0x14000a4b5
   14000a4b3:	add    BYTE PTR [rdi-0x28ffc67e],bh
   14000a4b9:	xchg   DWORD PTR [rsi],eax
   14000a4bb:	add    bh,bl
   14000a4bd:	xchg   ecx,eax
   14000a4be:	or     eax,DWORD PTR [rax]
   14000a4c0:	leave  
   14000a4c1:	mov    BYTE PTR [rdi],bl
   14000a4c3:	add    dl,bl
   14000a4c5:	(bad)  
   14000a4c6:	adc    eax,DWORD PTR [rax]
   14000a4c8:	fst    QWORD PTR [rcx-0x6b26ffee]
   14000a4ce:	(bad)  
   14000a4cf:	add    cl,ah
   14000a4d1:	xchg   esp,eax
   14000a4d2:	(bad)  
   14000a4d3:	add    ch,ah
   14000a4d5:	cdq    
   14000a4d6:	verr   dx
   14000a4d9:	xchg   esi,eax
   14000a4da:	adc    al,BYTE PTR [rax]
   14000a4dc:	out    0x99,al
   14000a4de:	adc    BYTE PTR [rax],al
   14000a4e0:	jmp    0x12d00b782
   14000a4e5:	movabs ds:0xa6f0001ea0e80014,al
   14000a4ee:	(bad)  
   14000a4ef:	add    cl,dh
   14000a4f1:	test   eax,0xa7f10017
   14000a4f6:	sbb    BYTE PTR [rax],al
   14000a4f8:	hlt    
   14000a4f9:	stos   DWORD PTR es:[rdi],eax
   14000a4fa:	sbb    al,BYTE PTR [rax]
   14000a4fc:	clc    
   14000a4fd:	mov    al,0x1b
   14000a4ff:	add    dl,cl
   14000a501:	mov    BYTE PTR [rax+rax*1],ah
   14000a504:	rol    DWORD PTR [rbp-0x7738ffd4],0x2d
   14000a50b:	add    ah,cl
   14000a50d:	lea    ebp,[rax+rax*1]
   14000a510:	fcomp  QWORD PTR [rbp+rbp*1+0x3384c400]
   14000a517:	add    al,cl
   14000a519:	mov    ?,WORD PTR [rdi]
   14000a51b:	add    dl,al
   14000a51d:	test   DWORD PTR [rbx],edi
   14000a51f:	add    ah,al
   14000a521:	mov    bh,BYTE PTR [rbx]
   14000a523:	add    al,cl
   14000a525:	mov    DWORD PTR [rax+rax*1],edi
   14000a528:	fstp   DWORD PTR [rdx-0x661effd0]
   14000a52e:	and    al,BYTE PTR [rax]
   14000a530:	fbld   TBYTE PTR [rax-0x5e20ffd1]
   14000a536:	xor    BYTE PTR [rax],al
   14000a538:	jmp    0x14000a4df
   14000a53a:	sub    BYTE PTR [rax],al
   14000a53c:	clc    
   14000a53d:	mov    bl,0x25
   14000a53f:	add    dh,ah
   14000a541:	test   al,0x34
   14000a543:	add    dh,ch
   14000a545:	mov    cl,0x39
   14000a547:	add    ch,dh
   14000a549:	mov    bh,0x3b
   14000a54b:	add    BYTE PTR [rdx-0x5dffb97e],dh
   14000a551:	test   BYTE PTR [rbx+0x0],dl
   14000a554:	mov    eax,0xb500568d
   14000a559:	xchg   ebx,eax
   14000a55a:	pop    rdi
   14000a55b:	add    BYTE PTR [rax-0x45ff9173],ah
   14000a561:	fwait
   14000a562:	add    BYTE PTR [ebp-0x59ff9261],bh
   14000a569:	xchg   edx,eax
   14000a56a:	jb     0x14000a56c
   14000a56c:	mov    ch,0x9e
   14000a56e:	jnp    0x14000a570
   14000a570:	mov    dh,0xa1
   14000a572:	jle    0x14000a574
   14000a574:	(bad)  
   14000a575:	mov    al,BYTE PTR [rax+0x0]
   14000a578:	leave  
   14000a579:	mov    WORD PTR [rax+rax*1-0x40],es
   14000a57d:	mov    cs,WORD PTR [rax+rax*1-0x3a]
   14000a581:	xchg   ebp,eax
   14000a582:	add    r13b,r8b
   14000a585:	xchg   ebp,eax
   14000a586:	rex.WRB add r14b,r9b
   14000a589:	xchg   ecx,eax
   14000a58a:	rex.WX add dil,al
   14000a58d:	cwde   
   14000a58e:	rex.WR add al,r9b
   14000a591:	(bad)  
   14000a592:	rex.WRX add al,r10b
   14000a595:	xchg   esp,eax
   14000a596:	rex.WR add bpl,r8b
   14000a599:	xchg   esp,eax
   14000a59a:	push   rbx
   14000a59b:	add    al,cl
   14000a59d:	(bad)  
   14000a59e:	push   rsp
   14000a59f:	add    al,al
   14000a5a1:	xchg   esp,eax
   14000a5a2:	pop    rax
   14000a5a3:	add    dl,cl
   14000a5a5:	popf   
   14000a5a6:	pop    rbp
   14000a5a7:	add    bh,dl
   14000a5a9:	pushf  
   14000a5aa:	push   rdi
   14000a5ab:	add    cl,bl
   14000a5ad:	movabs ds:0xbefa005ea6da004f,al
   14000a5b6:	add    al,spl
   14000a5b9:	lods   al,BYTE PTR ds:[rsi]
   14000a5ba:	pop    rdi
   14000a5bb:	add    cl,dh
   14000a5bd:	mov    ebx,0x9fcb0055
   14000a5c2:	(bad)  
   14000a5c3:	add    bl,al
   14000a5c5:	fwait
   14000a5c6:	imul   eax,DWORD PTR [rax],0xffffffcd
   14000a5c9:	movabs ds:0xa6cf0067a8cf0063,eax
   14000a5d2:	outs   dx,DWORD PTR ds:[rsi]
   14000a5d3:	add    bl,cl
   14000a5d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a5d6:	jno    0x14000a5d8
   14000a5d8:	leave  
   14000a5d9:	stos   DWORD PTR es:[rdi],eax
   14000a5da:	jne    0x14000a5dc
   14000a5dc:	(bad)  
   14000a5dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a5de:	jl     0x14000a5e0
   14000a5e0:	shr    DWORD PTR [rdx-0x512cff8f],1
   14000a5e6:	jns    0x14000a5e8
   14000a5e8:	(bad)  
   14000a5e9:	mov    cl,0x7e
   14000a5eb:	add    bl,ah
   14000a5ed:	scas   eax,DWORD PTR es:[rdi]
   14000a5ee:	(bad)  
   14000a5ef:	add    dh,ah
   14000a5f1:	mov    ah,0x62
   14000a5f3:	add    al,ch
   14000a5f5:	mov    dh,0x64
   14000a5f7:	add    ah,ch
   14000a5f9:	mov    edx,0xbeee0064
   14000a5fe:	push   0x66bff300
   14000a603:	add    cl,ch
   14000a605:	mov    esp,0xc0fb0075
   14000a60a:	rex.XB add r11b,dil
   14000a60d:	(bad)  
   14000a60e:	pop    rbp
   14000a60f:	add    bh,dh
   14000a611:	(bad)  
   14000a612:	push   0x0
   14000a614:	(bad)  
   14000a615:	shr    DWORD PTR [rdi+0x0],1
   14000a618:	push   rdi
   14000a619:	js     0x14000a5b5
   14000a61b:	add    BYTE PTR [rcx+0x74],ah
   14000a61e:	xchg   DWORD PTR [rax],eax
   14000a620:	fs js  0x14000a5ad
   14000a623:	add    BYTE PTR [rsi+0x7b],dh
   14000a626:	add    BYTE PTR [rax],0x7f
   14000a629:	mov    BYTE PTR [rdi-0x62728300],cl
   14000a62f:	add    BYTE PTR [rdx-0x7c],ch
   14000a632:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a633:	add    BYTE PTR [rcx-0x79],ah
   14000a636:	test   eax,0xad8b6500
   14000a63b:	add    BYTE PTR [rcx-0x6f],bh
   14000a63e:	mov    cl,0x0
   14000a640:	jp     0x14000a5e3
   14000a642:	rol    BYTE PTR [rax],0x95
   14000a645:	pop    QWORD PTR [rcx-0x74706e00]
   14000a64b:	add    BYTE PTR [rdx+rdx*4-0x656fff74],dl
   14000a652:	xchg   esp,eax
   14000a653:	add    BYTE PTR [rbx-0x6cff7861],ch
   14000a659:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a65a:	lea    eax,[rax]
   14000a65c:	movabs eax,ds:0xa10081a3b70084aa
   14000a665:	mov    ebx,0xbfb00086
   14000a66a:	lea    eax,[rax]
   14000a66c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a66d:	movabs eax,ds:0xa8b00095a5b00094
   14000a676:	xchg   esi,eax
   14000a677:	add    BYTE PTR [rbp+rbp*4-0x4053ff6c],bh
   14000a67e:	pushf  
   14000a67f:	add    BYTE PTR [rbp-0x43ff6b41],bh
   14000a685:	mov    edx,0xab9e0099
   14000a68a:	movabs ds:0x81aac900a4b4a100,eax
   14000a693:	add    cl,al
   14000a695:	lods   eax,DWORD PTR ds:[rsi]
   14000a696:	mov    eax,DWORD PTR [rax]
   14000a698:	(bad)  
   14000a699:	mov    cl,0x80
   14000a69b:	add    al,bl
   14000a69d:	mov    bh,0x81
   14000a69f:	add    dh,dl
   14000a6a1:	mov    ch,0x8d
   14000a6a3:	add    al,bl
   14000a6a5:	mov    dh,0x89
   14000a6a7:	add    bl,dl
   14000a6a9:	mov    ecx,0xbbda008f
   14000a6ae:	mov    BYTE PTR [rax],al
   14000a6b0:	(bad)  
   14000a6b1:	mov    cl,0x92
   14000a6b3:	add    bl,dl
   14000a6b5:	mov    edi,0xbdda0097
   14000a6ba:	xchg   ebx,eax
   14000a6bb:	add    ah,dl
   14000a6bd:	mov    edi,0xb9c40098
   14000a6c2:	movabs eax,ds:0x8fc2a60087c3a500
   14000a6cb:	add    BYTE PTR [rbx-0x51ff703f],ch
   14000a6d1:	(bad)  
   14000a6d2:	xchg   esi,eax
   14000a6d3:	add    BYTE PTR [rdi-0x4fff663f],ch
   14000a6d9:	(bad)
   14000a6dc:	mov    esp,0xb30096c4
   14000a6e1:	enter  0x9b,0xb1
   14000a6e5:	shl    BYTE PTR [rax-0x5a3d4800],0x0
   14000a6ec:	mov    edx,0xbc00a4cf
   14000a6f1:	shr    DWORD PTR [rax-0x613e3100],cl
   14000a6f7:	add    bl,dl
   14000a6f9:	rcl    BYTE PTR [rdi-0x663d2b00],0x0
   14000a700:	fadd   st(2),st
   14000a702:	fwait
   14000a703:	add    al,ah
   14000a705:	(bad)
   14000a708:	loope  0x14000a6d3
   14000a70a:	sahf   
   14000a70b:	add    ah,cl
   14000a70d:	shr    DWORD PTR [rdx-0x5b3a2b00],0x0
   14000a714:	ffree  st(5)
   14000a716:	movabs ds:0xa5c9dd00a6c8d500,eax
   14000a71f:	add    dh,dl
   14000a721:	enter  0xa8,0xdc
   14000a725:	int    0xa9
   14000a727:	add    bl,al
   14000a729:	shr    BYTE PTR [rbp-0x542f2100],cl
   14000a72f:	add    ch,al
   14000a731:	(bad)  
   14000a732:	mov    ecx,0xb2cadb00
   14000a737:	add    ch,dl
   14000a739:	iret   
   14000a73a:	mov    ebp,0xb3d2c500
   14000a73f:	add    bl,cl
   14000a741:	fstp   TBYTE PTR [rdx-0x5d3a2000]
   14000a747:	add    dl,ah
   14000a749:	leave  
   14000a74a:	movabs ds:0xa6d4e700aacee200,eax
   14000a753:	add    al,ch
   14000a755:	(bad)  
   14000a756:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a757:	add    ah,ah
   14000a759:	shr    DWORD PTR [rdx-0x542a1800],1
   14000a75f:	add    dl,ch
   14000a761:	fsubr  DWORD PTR [rdi-0x4d301c00]
   14000a767:	add    ch,ah
   14000a769:	shl    DWORD PTR [rbx-0x4a291800],1
   14000a76f:	add    bl,ch
   14000a771:	fidiv  DWORD PTR [rax+rax*1+0xbcd2e5]
   14000a778:	call   0x124016153
   14000a77d:	fdivr  DWORD PTR [rax+rax*1+0xbbddec]
   14000a784:	out    dx,al
   14000a785:	loopne 0x14000a746
   14000a787:	add    BYTE PTR [rdi+riz*4-0x557aff3b],al
   14000a78e:	leave  
   14000a78f:	add    BYTE PTR [rdi-0x6aff3551],cl
   14000a795:	mov    bh,0xd3
   14000a797:	add    BYTE PTR [rax-0x5fff3842],bh
   14000a79d:	mov    ebp,0xc4a400d5
   14000a7a2:	fild   WORD PTR [rax]
   14000a7a4:	mov    bh,0xcf
   14000a7a6:	in     al,0x0
   14000a7a8:	mov    ecx,0xce00e2cf
   14000a7ad:	(bad)  
   14000a7ae:	(bad)  
   14000a7af:	add    al,dl
   14000a7b1:	int    0xc1
   14000a7b3:	add    ah,bl
   14000a7b5:	(bad)  
   14000a7b7:	add    dh,ah
   14000a7b9:	iret   
   14000a7ba:	rol    BYTE PTR [rax],0xe8
   14000a7bd:	(bad)  
   14000a7be:	rol    DWORD PTR [rax],0xeb
   14000a7c1:	fcmovnb st,st(4)
   14000a7c3:	add    dl,ch
   14000a7c5:	(bad)  
   14000a7c6:	leave  
   14000a7c7:	add    ch,ch
   14000a7c9:	fmul   st(3),st
   14000a7cb:	add    dh,ch
   14000a7cd:	(bad)  
   14000a7cf:	add    bh,ch
   14000a7d1:	loope  0x14000a796
   14000a7d3:	add    dh,ah
   14000a7d5:	in     al,0xce
   14000a7d7:	add    dh,ch
   14000a7d9:	loope  0x14000a7a5
   14000a7db:	add    al,dh
   14000a7dd:	jrcxz  0x14000a7a5
   14000a7df:	add    al,dh
   14000a7e1:	in     al,0xca
   14000a7e3:	add    dl,dh
   14000a7e5:	call   0x120efa8b9
   14000a7ea:	rol    DWORD PTR [rax],1
   14000a7ec:	lock in al,0xd3
   14000a7ef:	add    bl,dh
   14000a7f1:	jmp    0x126f1a8c9
   14000a7f6:	fiadd  DWORD PTR [rax]
   14000a7f8:	hlt    
   14000a7f9:	jmp    0x14000a7d6
   14000a7fb:	add    bh,dh
   14000a7fd:	lock fild WORD PTR [rax]
   14000a800:	leave  
   14000a801:	fsub   st(6),st
   14000a803:	add    cl,cl
   14000a805:	fdivrp st(3),st
   14000a807:	add    ah,dh
   14000a809:	(bad)  
   14000a80a:	in     al,0x0
   14000a80c:	imul   ch
   14000a80e:	jmp    0x14000a810
   14000a810:	div    ecx
   14000a812:	jrcxz  0x14000a814
   14000a814:	clc    
   14000a815:	repnz in eax,0x0
   14000a818:	div    eax
   14000a81a:	in     al,dx
   14000a81b:	add    al,bh
   14000a81d:	repnz in al,dx
   14000a81f:	add    cl,bh
   14000a821:	hlt    
   14000a822:	repz add bl,bh
   14000a825:	clc    
   14000a826:	test   DWORD PTR [rax],0xfefefe
	...
   14000a834:	(bad)  
   14000a835:	(bad)  
   14000a836:	inc    DWORD PTR [rax]
	...
   14000a9bc:	(bad)  
   14000a9bd:	(bad)  
   14000a9be:	(bad)  
   14000a9bf:	(bad)  
   14000a9c0:	(bad)  
   14000a9c1:	(bad)  
   14000a9c2:	(bad)  
   14000a9c3:	(bad)  
   14000a9c4:	(bad)  
   14000a9c5:	(bad)  
   14000a9c6:	(bad)  
   14000a9c7:	(bad)  
   14000a9c8:	(bad)  
   14000a9c9:	(bad)  
   14000a9ca:	(bad)  
   14000a9cb:	(bad)  
   14000a9cc:	(bad)  
   14000a9cd:	(bad)  
   14000a9ce:	(bad)  
   14000a9cf:	(bad)  
   14000a9d0:	(bad)  
   14000a9d1:	(bad)  
   14000a9d2:	(bad)  
   14000a9d3:	(bad)  
   14000a9d4:	(bad)  
   14000a9d5:	(bad)  
   14000a9d6:	(bad)  
   14000a9d7:	(bad)  
   14000a9d8:	(bad)  
   14000a9d9:	(bad)  
   14000a9da:	(bad)  
   14000a9db:	(bad)  
   14000a9dc:	(bad)  
   14000a9dd:	(bad)  
   14000a9de:	(bad)  
   14000a9df:	(bad)  
   14000a9e0:	(bad)  
   14000a9e1:	(bad)  
   14000a9e2:	(bad)  
	...
   14000a9eb:	add    BYTE PTR [rcx],cl
   14000a9ed:	(bad)  
   14000a9ee:	(bad)  
   14000a9ef:	(bad)  
   14000a9f0:	(bad)  
   14000a9f1:	(bad)  
   14000a9f2:	(bad)  
   14000a9f3:	(bad)  
   14000a9f4:	(bad)  
   14000a9f5:	(bad)  
   14000a9f6:	(bad)  
   14000a9f7:	(bad)  
   14000a9f8:	(bad)  
   14000a9f9:	(bad)  
   14000a9fa:	(bad)  
   14000a9fb:	(bad)  
   14000a9fc:	(bad)  
   14000a9fd:	(bad)  
   14000a9fe:	(bad)  
   14000a9ff:	(bad)  
   14000aa00:	(bad)  
   14000aa01:	(bad)  
   14000aa02:	(bad)  
   14000aa03:	(bad)  
   14000aa04:	(bad)  
   14000aa05:	(bad)  
   14000aa06:	(bad)  
   14000aa07:	(bad)  
   14000aa08:	(bad)  
   14000aa09:	(bad)  
   14000aa0a:	(bad)  
   14000aa0b:	(bad)  
   14000aa0c:	(bad)  
   14000aa0d:	(bad)  
   14000aa0e:	(bad)  
   14000aa0f:	(bad)  
   14000aa10:	(bad)  
   14000aa11:	call   QWORD PTR [rcx]
	...
   14000aa1b:	add    BYTE PTR [rcx],cl
   14000aa1d:	(bad)  
   14000aa1e:	stc    
   14000aa1f:	div    edi
   14000aa21:	div    ecx
   14000aa23:	icebp  
   14000aa24:	icebp  
   14000aa25:	icebp  
   14000aa26:	out    dx,al
   14000aa27:	out    dx,al
   14000aa28:	out    dx,al
   14000aa29:	out    dx,al
   14000aa2a:	out    dx,al
   14000aa2b:	jmp    0x14000aa18
   14000aa2d:	jmp    0x14000aa18
   14000aa2f:	jmp    0x113d4911a
   14000aa34:	ror    esi,cl
   14000aa36:	ror    esi,cl
   14000aa38:	(bad)  
   14000aa39:	(bad)  
   14000aa3a:	retf   0xc9c9
   14000aa3d:	leave  
   14000aa3e:	leave  
   14000aa3f:	mov    dh,0xff
   14000aa42:	adc    DWORD PTR [rax],eax
	...
   14000aa4c:	or     edi,edi
   14000aa4e:	stc    
   14000aa4f:	div    edi
   14000aa51:	icebp  
   14000aa52:	icebp  
   14000aa53:	icebp  
   14000aa54:	icebp  
   14000aa55:	out    dx,al
   14000aa56:	icebp  
   14000aa57:	out    dx,al
   14000aa58:	out    dx,al
   14000aa59:	out    dx,al
   14000aa5a:	jmp    0x14000aa47
   14000aa5c:	jmp    0x14000aa47
   14000aa5e:	jmp    0x14000aa49
   14000aa60:	jmp    0x113d4914b
   14000aa65:	ror    esi,cl
   14000aa67:	(bad)  
   14000aa68:	(bad)  
   14000aa69:	(bad)  
   14000aa6a:	retf   0xcaca
   14000aa6d:	leave  
   14000aa6e:	leave  
   14000aa6f:	leave  
   14000aa70:	(bad)  
   14000aa71:	call   QWORD PTR [rcx]
	...
   14000aa7b:	add    BYTE PTR [rcx],cl
   14000aa7d:	(bad)  
   14000aa7e:	stc    
   14000aa7f:	stc    
   14000aa80:	icebp  
   14000aa81:	icebp  
   14000aa82:	hlt    
   14000aa83:	icebp  
   14000aa84:	in     eax,dx
   14000aa85:	in     eax,dx
   14000aa86:	in     eax,dx
   14000aa87:	in     eax,dx
   14000aa88:	(bad)  
   14000aa89:	(bad)  
   14000aa8a:	(bad)  
   14000aa8b:	in     al,0xea
   14000aa8d:	(bad)  
   14000aa8e:	(bad)  
   14000aa8f:	jmp    0x126e7947d
   14000aa94:	rcl    ebx,cl
   14000aa96:	ror    esi,cl
   14000aa98:	ror    esi,cl
   14000aa9a:	(bad)  
   14000aa9b:	(bad)  
   14000aa9c:	retf   0xc9c9
   14000aa9f:	leave  
   14000aaa0:	leave  
   14000aaa1:	call   QWORD PTR [rcx]
	...
   14000aaab:	add    BYTE PTR [rcx],cl
   14000aaad:	(bad)  
   14000aaae:	stc    
   14000aaaf:	stc    
   14000aab0:	icebp  
   14000aab1:	hlt    
   14000aab2:	out    dx,eax
   14000aab3:	in     eax,dx
   14000aab4:	in     eax,dx
   14000aab5:	in     eax,dx
   14000aab6:	in     al,dx
   14000aab7:	(bad)  
   14000aab8:	in     al,dx
   14000aab9:	in     al,0xe4
   14000aabb:	in     al,0xe8
   14000aabd:	in     al,0xe6
   14000aabf:	(bad)  
   14000aac0:	out    0xeb,al
   14000aac2:	out    0xe6,al
   14000aac4:	rcl    ebx,cl
   14000aac6:	rcl    ebx,cl
   14000aac8:	(bad)  
   14000aac9:	(bad)  
   14000aaca:	(bad)  
   14000aacb:	(bad)  
   14000aacc:	retf   0xcaca
   14000aacf:	leave  
   14000aad0:	leave  
   14000aad1:	call   QWORD PTR [rcx]
	...
   14000aadb:	add    BYTE PTR [rcx],cl
   14000aadd:	(bad)  
   14000aade:	stc    
   14000aadf:	icebp  
   14000aae0:	hlt    
   14000aae1:	out    dx,eax
   14000aae2:	out    dx,eax
   14000aae3:	in     al,dx
   14000aae4:	in     al,dx
   14000aae5:	in     al,0xec
   14000aae7:	jrcxz  0x14000aacd
   14000aae9:	in     al,0xe8
   14000aaeb:	loope  0x14000aad5
   14000aaed:	call   0x126e593da
   14000aaf2:	jmp    0x113e791e0
   14000aaf7:	rcl    ebx,cl
   14000aaf9:	(bad)  
   14000aafa:	(bad)  
   14000aafb:	(bad)  
   14000aafc:	(bad)  
   14000aafd:	(bad)  
   14000aafe:	retf   0xc9c9
   14000ab01:	call   QWORD PTR [rcx]
	...
   14000ab0b:	add    BYTE PTR [rcx],cl
   14000ab0d:	sti    
   14000ab0e:	stc    
   14000ab0f:	hlt    
   14000ab10:	shr    BYTE PTR [rdx+0x59],1
   14000ab13:	pop    rcx
   14000ab14:	pop    rcx
   14000ab15:	pop    rax
   14000ab16:	cmp    bh,BYTE PTR [rdx]
   14000ab18:	cmp    dl,BYTE PTR [rdx+0x58]
   14000ab1b:	pop    rcx
   14000ab1c:	pop    rax
   14000ab1d:	(bad)  
   14000ab1f:	call   0x129ec920c
   14000ab24:	jmp    0x113d4920f
   14000ab29:	rcl    ebx,cl
   14000ab2b:	(bad)  
   14000ab2c:	(bad)  
   14000ab2d:	(bad)  
   14000ab2e:	retf   0xcaca
   14000ab31:	call   QWORD PTR [rcx]
	...
   14000ab3b:	add    BYTE PTR [rdx],cl
   14000ab3d:	sti    
   14000ab3e:	hlt    
   14000ab3f:	in     eax,dx
   14000ab40:	push   rdx
   14000ab41:	int    0xed
   14000ab43:	in     eax,dx
   14000ab44:	in     eax,dx
   14000ab45:	icebp  
   14000ab46:	(bad)  
   14000ab47:	sti    
   14000ab48:	push   rcx
   14000ab4a:	in     eax,dx
   14000ab4b:	(bad)  
   14000ab4c:	in     al,0xcb
   14000ab4e:	push   rdx
   14000ab4f:	retf   
   14000ab50:	in     al,0xea
   14000ab52:	call   0x126ea9542
   14000ab57:	out    0xd3,al
   14000ab59:	ror    esi,cl
   14000ab5b:	ror    esi,cl
   14000ab5d:	(bad)  
   14000ab5e:	(bad)  
   14000ab5f:	(bad)  
   14000ab60:	retf   0x11ff
	...
   14000ab6b:	add    BYTE PTR [rdx],cl
   14000ab6d:	sti    
   14000ab6e:	hlt    
   14000ab6f:	ret    
   14000ab70:	cdq    
   14000ab71:	call   0x110d48d49
   14000ab76:	call   0x128e27f4c
   14000ab7b:	shr    al,1
   14000ab7d:	int    0xa0
   14000ab7f:	cwde   
   14000ab80:	call   0x12bec956d
   14000ab85:	jmp    0x113e79273
   14000ab8a:	rcl    ebx,cl
   14000ab8c:	(bad)  
   14000ab8d:	ror    esi,cl
   14000ab8f:	(bad)  
   14000ab90:	retf   0x11ff
	...
   14000ab9b:	add    BYTE PTR [rdx],cl
   14000ab9d:	sti    
   14000ab9e:	hlt    
   14000ab9f:	fwait
   14000aba0:	mov    bl,0xb7
   14000aba2:	loope  0x14000ab85
   14000aba4:	mov    esp,0xbcdfbcae
   14000aba9:	ret    0xaec2
   14000abac:	lods   al,BYTE PTR ds:[rsi]
   14000abad:	sahf   
   14000abae:	ret    
   14000abaf:	call   0x909b
   14000abb3:	jmp    0x14000aba0
   14000abb5:	jmp    0x113e795a5
   14000abba:	rcl    ebx,cl
   14000abbc:	ror    esi,cl
   14000abbe:	(bad)  
   14000abbf:	(bad)  
   14000abc0:	(bad)  
   14000abc1:	call   QWORD PTR [rcx]
	...
   14000abcb:	add    BYTE PTR [rdx],cl
   14000abcd:	sti    
   14000abce:	hlt    
   14000abcf:	ins    BYTE PTR es:[rdi],dx
   14000abd0:	(bad)
   14000abd3:	mov    dh,0x8c
   14000abd5:	mov    esp,DWORD PTR [rdi-0x52555719]
   14000abdb:	movabs ds:0xebebe4e162cd9789,eax
   14000abe4:	jmp    0x14000abd1
   14000abe6:	jmp    0x126c07dd4
   14000abeb:	rcl    ebx,cl
   14000abed:	ror    esi,cl
   14000abef:	ror    esi,cl
   14000abf1:	call   QWORD PTR [rcx]
	...
   14000abfb:	add    BYTE PTR [rdx],cl
   14000abfd:	clc    
   14000abfe:	hlt    
   14000abff:	ins    BYTE PTR es:[rdi],dx
   14000ac00:	(bad)
   14000ac03:	mov    dh,0x92
   14000ac05:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ac06:	lods   al,BYTE PTR ds:[rsi]
   14000ac07:	fcom   DWORD PTR [rbp-0x6c74575c]
   14000ac0d:	movabs eax,ds:0xb3b3a0cbe4e462d0
   14000ac16:	mov    ah,0x68
   14000ac18:	push   rdx
   14000ac19:	rex.WB mov r11b,0xb3
   14000ac1c:	mov    bl,0xb4
   14000ac1e:	ror    esi,cl
   14000ac20:	(bad)  
   14000ac21:	call   QWORD PTR [rcx]
	...
   14000ac2b:	add    BYTE PTR [rcx],dl
   14000ac2d:	clc    
   14000ac2e:	hlt    
   14000ac2f:	data16 shl BYTE PTR [rdx-0x6d493c35],1
   14000ac36:	xchg   ecx,eax
   14000ac37:	cmp    DWORD PTR [rsi-0x78],0x9fba938b
   14000ac3e:	loope  0x14000ac99
   14000ac40:	in     al,0xe0
   14000ac42:	int3   
   14000ac43:	mov    bl,0xb3
   14000ac45:	mov    bl,0x58
   14000ac47:	cmp    dl,BYTE PTR [rax+0x4c]
   14000ac4a:	mov    bl,0xb3
   14000ac4c:	mov    ah,0xb4
   14000ac4e:	int    0xd3
   14000ac50:	sar    edi,cl
   14000ac52:	adc    DWORD PTR [rax],eax
	...
   14000ac5c:	or     dh,ch
   14000ac5e:	hlt    
   14000ac5f:	data16 rol bl,1
   14000ac62:	(bad)
   14000ac65:	mov    bh,0x94
   14000ac67:	jg     0x14000ace1
   14000ac69:	xchg   BYTE PTR [rdi-0x14604746],ch
   14000ac6f:	pop    rcx
   14000ac70:	in     al,dx
   14000ac71:	in     al,dx
   14000ac72:	in     al,0xed
   14000ac74:	jmp    0x14000acce
   14000ac76:	cmp    DWORD PTR [rbp+0x50],ebx
   14000ac79:	mov    gs,eax
   14000ac7b:	call   0x113ea8e53
   14000ac80:	(bad)  
   14000ac81:	call   QWORD PTR [rcx]
	...
   14000ac8b:	add    BYTE PTR [rcx],dl
   14000ac8d:	cmc    
   14000ac8e:	hlt    
   14000ac8f:	data16 shl BYTE PTR [rbx-0x4a483a35],1
   14000ac96:	(bad)  
   14000ac97:	(bad)  
   14000ac98:	add    BYTE PTR [rbp-0x50474538],0xe4
   14000ac9f:	pop    rcx
   14000aca0:	in     al,dx
   14000aca1:	jrcxz  0x14000ac6f
   14000aca3:	(bad)  
   14000aca4:	(bad)  
   14000aca5:	(bad)  
   14000aca6:	and    al,0x6e
   14000aca8:	push   rax
   14000aca9:	rex.WB mov r11b,0xb3
   14000acac:	mov    bl,0xb4
   14000acae:	rcl    bl,1
   14000acb0:	sar    edi,cl
   14000acb2:	adc    DWORD PTR [rax],eax
	...
   14000acbc:	or     dh,ch
   14000acbe:	cmc    
   14000acbf:	data16 rol bl,1
   14000acc2:	int    0xb9
   14000acc4:	mov    ah,0xbe
   14000acc6:	fcmovu st,st(1)
   14000acc8:	(bad)  
   14000acc9:	jns    0x14000ac52
   14000accb:	mov    ebx,0x59e8b1bb
   14000acd0:	in     al,dx
   14000acd1:	jrcxz  0x14000ac69
   14000acd3:	sbb    DWORD PTR [rdx],esi
   14000acd5:	sub    DWORD PTR [rsi],esp
   14000acd7:	outs   dx,DWORD PTR ds:[rsi]
   14000acd8:	cmp    DWORD PTR [rbx+rsi*4-0x4d],ecx
   14000acdc:	mov    bl,0xb4
   14000acde:	shr    cl,1
   14000ace0:	sar    edi,cl
   14000ace2:	adc    DWORD PTR [rax],eax
	...
   14000acec:	adc    ebp,esi
   14000acee:	hlt    
   14000acef:	ins    BYTE PTR es:[rdi],dx
   14000acf0:	int    0xb3
   14000acf2:	int    0xc5
   14000acf4:	mov    ah,0xde
   14000acf6:	repnz (bad) 
   14000acf9:	add    BYTE PTR [rbx],0xb9
   14000acfc:	mov    edx,0xec62d3af
   14000ad01:	addr32 (bad) 
   14000ad03:	and    eax,0x71292a2b
   14000ad08:	cmp    DWORD PTR [rdi-0x2f171718],ecx
   14000ad0e:	in     al,0xe9
   14000ad10:	sar    edi,cl
   14000ad12:	adc    DWORD PTR [rax],eax
	...
   14000ad1c:	or     dh,ch
   14000ad1e:	cmc    
   14000ad1f:	ins    BYTE PTR es:[rdi],dx
   14000ad20:	(bad)
   14000ad23:	mov    ah,0xc5
   14000ad25:	shl    bl,0xdb
   14000ad28:	(bad)  
   14000ad29:	jp     0x14000ad2c
   14000ad2b:	mov    edx,0x62c8c3bb
   14000ad30:	pop    rax
   14000ad31:	(bad)  
   14000ad32:	sub    al,0x30
   14000ad34:	(bad)  
   14000ad35:	sub    ebp,DWORD PTR [rdx]
   14000ad37:	jno    0x14000ad72
   14000ad39:	rex.WR mov bl,0xa0
   14000ad3c:	mov    bl,0xc4
   14000ad3e:	int    0xe9
   14000ad40:	jmp    0x14000bf44
   14000ad45:	add    BYTE PTR [rax],al
   14000ad47:	add    BYTE PTR [rax],al
   14000ad49:	add    BYTE PTR [rax],al
   14000ad4b:	add    BYTE PTR [rdx],cl
   14000ad4d:	sti    
   14000ad4e:	hlt    
   14000ad4f:	fwait
   14000ad50:	ret    
   14000ad51:	mov    ah,0xce
   14000ad53:	enter  0x8ec5,0x7d
   14000ad57:	jl     0x14000add4
   14000ad59:	add    al,BYTE PTR [rbx-0x3c504643]
   14000ad5f:	adc    al,0xe
   14000ad61:	(bad)  
   14000ad62:	xor    DWORD PTR [rax],esi
   14000ad64:	xor    BYTE PTR [rdi],ch
   14000ad66:	sub    esi,DWORD PTR [rcx+0x39]
   14000ad69:	rex.WB
   14000ad6a:	rex.WRB
   14000ad6b:	rex.WRB
   14000ad6c:	rex.WRX mov r11b,BYTE PTR [rsi+0xfdda2a2]
	...
   14000ad7b:	add    BYTE PTR [rdx],cl
   14000ad7d:	sti    
   14000ad7e:	hlt    
   14000ad7f:	mov    dl,0x9d
   14000ad81:	mov    ah,0xce
   14000ad83:	enter  0xa2c8,0x85
   14000ad87:	test   DWORD PTR [rdi+rcx*4+0x68bbbdbb],eax
   14000ad8e:	or     al,0x32
   14000ad90:	xor    BYTE PTR [rcx],dh
   14000ad92:	xor    DWORD PTR [r8],esi
   14000ad95:	xor    BYTE PTR [rdi],ch
   14000ad97:	(bad)  
   14000ad98:	cmp    DWORD PTR [rcx],edi
   14000ad9a:	cmp    dl,BYTE PTR [rax+0x50]
   14000ad9d:	push   rdi
   14000ad9e:	push   rdi
   14000ad9f:	push   rdi
   14000ada0:	pop    rsp
   14000ada1:	pop    rsp
   14000ada2:	pop    rbp
   14000ada3:	pop    rsp
   14000ada4:	pop    rsp
   14000ada5:	pop    rsp
   14000ada6:	add    BYTE PTR [rax],al
   14000ada8:	add    BYTE PTR [rax],al
   14000adaa:	add    BYTE PTR [rax],al
   14000adac:	or     bh,bl
   14000adae:	cmc    
   14000adaf:	jrcxz  0x14000ae16
   14000adb1:	ror    ch,cl
   14000adb3:	mov    ch,0xc8
   14000adb6:	mov    ebx,0xc8cebbb8
   14000adbb:	mov    ebx,0x5f360c48
   14000adc0:	pop    rdi
   14000adc1:	xor    DWORD PTR [rcx],esi
   14000adc3:	xor    DWORD PTR [rax],esi
   14000adc5:	xor    BYTE PTR [rax],dh
   14000adc7:	rex.XB (bad) 
   14000adc9:	jno    0x14000ae3c
   14000adcb:	jno    0x14000ae3c
   14000adcd:	outs   dx,BYTE PTR ds:[rsi]
   14000adce:	ins    DWORD PTR es:[rdi],dx
   14000adcf:	ins    DWORD PTR es:[rdi],dx
   14000add0:	pop    rsi
   14000add1:	pop    rsi
   14000add2:	pop    rsi
   14000add3:	pop    rsp
   14000add4:	pop    rsp
   14000add5:	push   rax
   14000add6:	pop    rsp
   14000add7:	add    BYTE PTR [rax],al
   14000add9:	add    BYTE PTR [rax],al
   14000addb:	add    BYTE PTR [rdx],cl
   14000addd:	sti    
   14000adde:	sti    
   14000addf:	clc    
   14000ade0:	fwait
   14000ade1:	push   rsi
   14000ade2:	fs fs gs popf 
   14000ade6:	popf   
   14000ade7:	popf   
   14000ade8:	popf   
   14000ade9:	popf   
   14000adea:	adc    eax,DWORD PTR gs:[rdi]
   14000aded:	rex.X
   14000adee:	rex.R
   14000adef:	rex.R pop rdi
   14000adf1:	pop    rdi
   14000adf2:	pop    rdi
   14000adf3:	xor    DWORD PTR [rcx],esi
   14000adf5:	xor    DWORD PTR [rax],esi
   14000adf7:	xor    BYTE PTR [rbx],ch
   14000adf9:	sub    ebp,DWORD PTR [rdx]
   14000adfb:	sub    DWORD PTR [rcx],esp
   14000adfd:	and    BYTE PTR [rax],ah
   14000adff:	(bad)  
   14000ae00:	sbb    eax,0xb0b1c1d
   14000ae05:	pop    rsp
   14000ae06:	pop    rsi
   14000ae07:	add    BYTE PTR [rax],al
   14000ae09:	add    BYTE PTR [rax],al
   14000ae0b:	add    BYTE PTR [rdx],cl
   14000ae0d:	(bad)  
   14000ae0e:	sti    
   14000ae0f:	cmc    
   14000ae10:	cmc    
   14000ae11:	in     eax,dx
   14000ae12:	loope  0x14000adf5
   14000ae14:	shl    BYTE PTR [rdx-0x654d3c4e],1
   14000ae1a:	adc    cl,BYTE PTR [rip+0x44444342]        # 0x18444f162
   14000ae20:	pop    rdi
   14000ae21:	pop    rdi
   14000ae22:	pop    rdi
   14000ae23:	pop    rdi
   14000ae24:	pop    rdi
   14000ae25:	xor    DWORD PTR [rax],esi
   14000ae27:	xor    BYTE PTR [rax],dh
   14000ae29:	sub    ebp,DWORD PTR [rdx]
   14000ae2b:	sub    DWORD PTR [rcx],ebp
   14000ae2d:	and    DWORD PTR [rax],esp
   14000ae2f:	and    BYTE PTR [rax],ah
   14000ae31:	sbb    eax,0x640b1c1d
   14000ae36:	pop    rsp
   14000ae37:	add    BYTE PTR [rax],al
   14000ae39:	add    BYTE PTR [rax],al
   14000ae3b:	add    BYTE PTR [rcx],cl
   14000ae3d:	(bad)  
   14000ae3e:	sti    
   14000ae3f:	sti    
   14000ae40:	sti    
   14000ae41:	cmc    
   14000ae42:	cmc    
   14000ae43:	clc    
   14000ae44:	hlt    
   14000ae45:	hlt    
   14000ae46:	hlt    
   14000ae47:	hlt    
   14000ae48:	mov    edi,0x42420e07
   14000ae4d:	rex.X
   14000ae4e:	rex.XB
   14000ae4f:	rex.R
   14000ae50:	rex.R
   14000ae51:	rex.R pop rdi
   14000ae53:	je     0x14000aec9
   14000ae55:	je     0x14000aeb6
   14000ae57:	rex.B
   14000ae58:	cs sub ebp,DWORD PTR cs:[rbx]
   14000ae5c:	sub    DWORD PTR [rcx],ebp
   14000ae5e:	and    DWORD PTR [rax],esp
   14000ae60:	and    BYTE PTR [rsi],bl
   14000ae62:	sbb    eax,0x5c5e1c1d
   14000ae67:	add    BYTE PTR [rax],al
   14000ae69:	add    BYTE PTR [rax],al
   14000ae6b:	add    BYTE PTR [rcx],cl
   14000ae6d:	(bad)  
   14000ae6e:	(bad)  
   14000ae6f:	sti    
   14000ae70:	sti    
   14000ae71:	sti    
   14000ae72:	sti    
   14000ae73:	cmc    
   14000ae74:	sti    
   14000ae75:	cmc    
   14000ae76:	cmc    
   14000ae77:	cmc    
   14000ae78:	or     BYTE PTR [rdx],dh
   14000ae7a:	ss ss rex.X
   14000ae7d:	rex.X
   14000ae7e:	rex.XB
   14000ae7f:	rex.XB
   14000ae80:	rex.XB
   14000ae81:	rex.R je 0x14000aee3
   14000ae84:	pop    rdi
   14000ae85:	pop    rdi
   14000ae86:	pop    rdi
   14000ae87:	pop    rdi
   14000ae88:	pop    rdi
   14000ae89:	xor    BYTE PTR [r11],bpl
   14000ae8c:	sub    ah,BYTE PTR [rdi]
   14000ae8e:	and    BYTE PTR es:[rax],ah
   14000ae91:	and    BYTE PTR [rip+0x5c5e1d1d],bl        # 0x19c5ecbb4
   14000ae97:	add    BYTE PTR [rax],al
   14000ae99:	add    BYTE PTR [rax],al
   14000ae9b:	add    BYTE PTR [rsi],al
   14000ae9d:	sti    
   14000ae9e:	(bad)  
   14000ae9f:	(bad)  
   14000aea0:	(bad)  
   14000aea1:	sti    
   14000aea2:	sti    
   14000aea3:	sti    
   14000aea4:	sti    
   14000aea5:	sti    
   14000aea6:	sti    
   14000aea7:	cmc    
   14000aea8:	adc    dh,BYTE PTR [rsp+rdi*1]
   14000aeab:	ss ds rex.X
   14000aeae:	rex.X
   14000aeaf:	rex.XB
   14000aeb0:	rex.XB
   14000aeb1:	rex.R
   14000aeb2:	rex.R pop rdi
   14000aeb4:	pop    rdi
   14000aeb5:	pop    rdi
   14000aeb6:	pop    rdi
   14000aeb7:	pop    rdi
   14000aeb8:	pop    rdi
   14000aeb9:	pop    rdi
   14000aeba:	rex.R
   14000aebb:	rex.XB xor BYTE PTR [r15],bpl
   14000aebe:	sub    DWORD PTR [rsi],esp
   14000aec0:	and    DWORD PTR [rax],esp
   14000aec2:	and    BYTE PTR [rsi],bl
   14000aec4:	sbb    eax,0x5c5e
   14000aec9:	add    BYTE PTR [rax],al
   14000aecb:	add    BYTE PTR [rsi],al
   14000aecd:	or     al,BYTE PTR [rip+0x5050505]        # 0x14505b3d8
   14000aed3:	add    eax,0x5050505
   14000aed8:	add    eax,0x36360d04
   14000aedd:	cmp    al,0x42
   14000aedf:	rex.X
   14000aee0:	rex.XB
   14000aee1:	rex.XB
   14000aee2:	rex.R
   14000aee3:	rex.R pop rdi
   14000aee5:	pop    rdi
   14000aee6:	pop    rdi
   14000aee7:	pop    rdi
   14000aee8:	pop    rdi
   14000aee9:	pop    rdi
   14000aeea:	pop    rdi
   14000aeeb:	pop    rdi
   14000aeec:	rex.XB
   14000aeed:	rex.X
   14000aeee:	sub    al,0x29
   14000aef1:	and    BYTE PTR [rax],ah
   14000aef3:	and    BYTE PTR [rip+0x5c6d],bl        # 0x140010b66
	...
   14000af09:	add    BYTE PTR [rbp+0x12],al
   14000af0c:	ss ds rex.X
   14000af0f:	rex.X
   14000af10:	rex.X
   14000af11:	rex.XB
   14000af12:	rex.XB
   14000af13:	rex.R
   14000af14:	rex.R pop rdi
   14000af16:	pop    rdi
   14000af17:	pop    rdi
   14000af18:	pop    rdi
   14000af19:	pop    rdi
   14000af1a:	pop    rdi
   14000af1b:	pop    rdi
   14000af1c:	rex.R pop rdi
   14000af1e:	rex.XB
   14000af1f:	rex.XB
   14000af20:	rex.XB
   14000af21:	rex.X cmp eax,0x5c5e2024
	...
   14000af3b:	imul   ecx,DWORD PTR [rsi*1+0x42423e36],0x44444343
   14000af46:	pop    rdi
   14000af47:	pop    rdi
   14000af48:	pop    rdi
   14000af49:	pop    rdi
   14000af4a:	pop    rdi
   14000af4b:	pop    rdi
   14000af4c:	pop    rdi
   14000af4d:	rex.R
   14000af4e:	rex.R
   14000af4f:	rex.XB
   14000af50:	rex.XB
   14000af51:	rex.X
   14000af52:	rex.X
   14000af53:	ds ss jae 0x14000afb3
	...
   14000af6b:	add    BYTE PTR [rax],al
   14000af6d:	or     BYTE PTR [rbx],dh
   14000af6f:	ss rex.X
   14000af71:	rex.X
   14000af72:	rex.X
   14000af73:	rex.XB
   14000af74:	rex.R
   14000af75:	rex.R pop rdi
   14000af77:	pop    rdi
   14000af78:	jne    0x14000aff0
   14000af7a:	ja     0x14000aff2
   14000af7c:	ja     0x14000aff4
   14000af7e:	jbe    0x14000aff6
   14000af80:	jbe    0x14000aff4
   14000af82:	jb     0x14000aff6
   14000af84:	outs   dx,DWORD PTR ds:[rsi]
   14000af85:	jae    0x14000afe3
	...
   14000af9b:	add    BYTE PTR [rax],al
   14000af9d:	add    BYTE PTR [rbx],dl
   14000af9f:	sbb    esi,DWORD PTR [rsi]
   14000afa1:	rex.X
   14000afa2:	rex.X
   14000afa3:	rex.X
   14000afa4:	rex.XB
   14000afa5:	rex.R
   14000afa6:	rex.R
   14000afa7:	rex.R (bad) 
   14000afa9:	(bad)  
   14000afaa:	sbb    BYTE PTR [rcx],bl
   14000afac:	(bad)  
   14000afad:	cmp    DWORD PTR [rdi+0x4f],ecx
   14000afb0:	push   rax
   14000afb1:	push   rax
   14000afb2:	push   rdi
   14000afb3:	push   rsp
   14000afb4:	push   rdi
   14000afb5:	pop    rbp
	...
   14000afce:	add    BYTE PTR [rdi+0x14],al
   14000afd1:	cmp    al,0x42
   14000afd3:	rex.X
   14000afd4:	rex.X
   14000afd5:	rex.XB
   14000afd6:	rex.XB
   14000afd7:	rex.R adc al,0x0
	...
   14000affe:	add    BYTE PTR [rax],al
   14000b000:	add    BYTE PTR [rax],cl
   14000b002:	xor    eax,0x43434242
   14000b007:	rex.R adc al,0x0
	...
   14000b032:	adc    bh,BYTE PTR [rax]
   14000b034:	rex.X
   14000b035:	rex.X
   14000b036:	rex.XB
   14000b037:	rex.XB adc al,BYTE PTR [r8]
	...
   14000b062:	add    BYTE PTR [rdx],bl
   14000b064:	sbb    DWORD PTR [rdx+0x42],eax
   14000b067:	rex.XB or al,0x0
	...
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	movsxd edx,DWORD PTR [rip+0x12423e]        # 0x14012f2d8
	...
   14000b0c6:	adc    bh,BYTE PTR [rsp+rcx*1]
	...
   14000b0f5:	add    BYTE PTR [rax],al
   14000b0f7:	adc    eax,0xc
	...
   14000b138:	(bad)  
   14000b139:	(bad)  
   14000b13a:	(bad)  
   14000b13b:	(bad)  
   14000b13c:	(bad)  
   14000b13d:	inc    DWORD PTR [rax]
   14000b13f:	add    bh,bh
   14000b141:	(bad)  
   14000b142:	(bad)  
   14000b143:	(bad)  
   14000b144:	(bad)  
   14000b145:	inc    DWORD PTR [rax]
   14000b147:	add    bh,bh
   14000b149:	(bad)  
   14000b14a:	(bad)  
   14000b14b:	(bad)  
   14000b14c:	(bad)  
   14000b14d:	inc    DWORD PTR [rax]
   14000b14f:	add    bh,bh
   14000b151:	(bad)  
   14000b152:	(bad)  
   14000b153:	(bad)  
   14000b154:	(bad)  
   14000b155:	inc    DWORD PTR [rax]
   14000b157:	add    bh,bh
   14000b159:	(bad)  
   14000b15a:	(bad)  
   14000b15b:	(bad)  
   14000b15c:	(bad)  
   14000b15d:	inc    DWORD PTR [rax]
   14000b15f:	add    bh,bh
   14000b161:	(bad)  
   14000b162:	(bad)  
   14000b163:	(bad)  
   14000b164:	(bad)  
   14000b165:	inc    DWORD PTR [rax]
   14000b167:	add    bh,bh
   14000b169:	(bad)  
   14000b16a:	(bad)  
   14000b16b:	(bad)  
   14000b16c:	(bad)  
   14000b16d:	inc    DWORD PTR [rax]
   14000b16f:	add    bh,bh
   14000b171:	(bad)  
   14000b172:	(bad)  
   14000b173:	(bad)  
   14000b174:	(bad)  
   14000b175:	inc    DWORD PTR [rax]
   14000b177:	add    al,dh
   14000b179:	add    BYTE PTR [rax],al
   14000b17b:	add    BYTE PTR [rax],al
   14000b17d:	(bad)  
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	lock add BYTE PTR [rax],al
   14000b183:	add    BYTE PTR [rax],al
   14000b185:	(bad)  
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	lock add BYTE PTR [rax],al
   14000b18b:	add    BYTE PTR [rax],al
   14000b18d:	(bad)  
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	lock add BYTE PTR [rax],al
   14000b193:	add    BYTE PTR [rax],al
   14000b195:	(bad)  
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	lock add BYTE PTR [rax],al
   14000b19b:	add    BYTE PTR [rax],al
   14000b19d:	(bad)  
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	lock add BYTE PTR [rax],al
   14000b1a3:	add    BYTE PTR [rax],al
   14000b1a5:	(bad)  
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	lock add BYTE PTR [rax],al
   14000b1ab:	add    BYTE PTR [rax],al
   14000b1ad:	(bad)  
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	lock add BYTE PTR [rax],al
   14000b1b3:	add    BYTE PTR [rax],al
   14000b1b5:	(bad)  
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	lock add BYTE PTR [rax],al
   14000b1bb:	add    BYTE PTR [rax],al
   14000b1bd:	(bad)  
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	lock add BYTE PTR [rax],al
   14000b1c3:	add    BYTE PTR [rax],al
   14000b1c5:	(bad)  
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	lock add BYTE PTR [rax],al
   14000b1cb:	add    BYTE PTR [rax],al
   14000b1cd:	(bad)  
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	lock add BYTE PTR [rax],al
   14000b1d3:	add    BYTE PTR [rax],al
   14000b1d5:	(bad)  
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	lock add BYTE PTR [rax],al
   14000b1db:	add    BYTE PTR [rax],al
   14000b1dd:	(bad)  
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	lock add BYTE PTR [rax],al
   14000b1e3:	add    BYTE PTR [rax],al
   14000b1e5:	(bad)  
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	lock add BYTE PTR [rax],al
   14000b1eb:	add    BYTE PTR [rax],al
   14000b1ed:	(bad)  
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	lock add BYTE PTR [rax],al
   14000b1f3:	add    BYTE PTR [rax],al
   14000b1f5:	(bad)  
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	lock add BYTE PTR [rax],al
   14000b1fb:	add    BYTE PTR [rax],al
   14000b1fd:	(bad)  
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	lock add BYTE PTR [rax],al
   14000b203:	add    BYTE PTR [rax],al
   14000b205:	(bad)  
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	lock add BYTE PTR [rax],al
   14000b20b:	add    BYTE PTR [rax],al
   14000b20d:	(bad)  
   14000b20e:	add    BYTE PTR [rax],al
   14000b210:	lock add BYTE PTR [rax],al
   14000b213:	add    BYTE PTR [rax],al
   14000b215:	(bad)  
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	lock add BYTE PTR [rax],al
   14000b21b:	add    BYTE PTR [rax],al
   14000b21d:	add    eax,DWORD PTR [rax]
   14000b21f:	add    al,dh
   14000b221:	add    BYTE PTR [rax],al
   14000b223:	add    BYTE PTR [rax],al
   14000b225:	add    DWORD PTR [rax],eax
   14000b227:	add    al,dh
   14000b229:	add    BYTE PTR [rax],al
   14000b22b:	add    BYTE PTR [rax],al
   14000b22d:	add    DWORD PTR [rax],eax
   14000b22f:	add    al,dh
   14000b231:	add    BYTE PTR [rax],al
   14000b233:	add    BYTE PTR [rax],al
   14000b235:	add    DWORD PTR [rax],eax
   14000b237:	add    al,dh
   14000b239:	add    BYTE PTR [rax],al
   14000b23b:	add    BYTE PTR [rax],al
   14000b23d:	add    DWORD PTR [rax],eax
   14000b23f:	add    al,dh
   14000b241:	add    BYTE PTR [rax],al
   14000b243:	add    BYTE PTR [rax],al
   14000b245:	add    DWORD PTR [rax],eax
   14000b247:	add    al,dh
   14000b249:	add    BYTE PTR [rax],al
   14000b24b:	add    BYTE PTR [rax],al
   14000b24d:	add    DWORD PTR [rax],eax
   14000b24f:	add    al,dh
   14000b251:	add    BYTE PTR [rax],al
   14000b253:	add    BYTE PTR [rax],al
   14000b255:	add    DWORD PTR [rax],eax
   14000b257:	add    bh,bh
   14000b259:	inc    eax
   14000b25b:	add    BYTE PTR [rax],al
   14000b25d:	add    DWORD PTR [rax],eax
   14000b25f:	add    bh,bh
   14000b261:	jmp    rax
   14000b263:	add    BYTE PTR [rax],al
   14000b265:	add    DWORD PTR [rax],eax
   14000b267:	add    bh,bh
   14000b269:	(bad)  
   14000b26a:	clc    
   14000b26b:	add    BYTE PTR [rax],al
   14000b26d:	add    DWORD PTR [rax],eax
   14000b26f:	add    bh,bh
   14000b271:	(bad)  
   14000b272:	cld    
   14000b273:	add    BYTE PTR [rax],al
   14000b275:	add    eax,DWORD PTR [rax]
   14000b277:	add    bh,bh
   14000b279:	(bad)  
   14000b27a:	inc    BYTE PTR [rax]
   14000b27c:	jg     0x14000b27d
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	(bad)  
   14000b281:	(bad)  
   14000b282:	inc    DWORD PTR [rax+0xff7f]
   14000b288:	(bad)  
   14000b289:	(bad)  
   14000b28a:	inc    eax
   14000b28c:	jg     0x14000b28d
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	(bad)  
   14000b291:	(bad)  
   14000b292:	jmp    rax
   14000b294:	jg     0x14000b295
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	(bad)  
   14000b299:	(bad)  
   14000b29a:	push   rax
   14000b29c:	jg     0x14000b29d
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	(bad)  
   14000b2a1:	(bad)  
   14000b2a2:	(bad)  
   14000b2a3:	cld    
   14000b2a4:	jg     0x14000b2a5
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	(bad)  
   14000b2a9:	(bad)  
   14000b2aa:	(bad)  
   14000b2ab:	(bad)  
   14000b2ac:	jg     0x14000b2ad
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	(bad)  
   14000b2b1:	(bad)  
   14000b2b2:	(bad)  
   14000b2b3:	(bad)  
   14000b2b4:	(bad)  
   14000b2b5:	inc    DWORD PTR [rax]
   14000b2b7:	add    BYTE PTR [rax],ch
   14000b2b9:	add    BYTE PTR [rax],al
   14000b2bb:	add    BYTE PTR [rax],ah
   14000b2bd:	add    BYTE PTR [rax],al
   14000b2bf:	add    BYTE PTR [rax+0x0],al
   14000b2c2:	add    BYTE PTR [rax],al
   14000b2c4:	add    DWORD PTR [rax],eax
   14000b2c6:	or     BYTE PTR [rax],al
   14000b2c8:	add    BYTE PTR [rax],al
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	add    BYTE PTR [rax+rax*1],al
	...
   14000b2d7:	add    BYTE PTR [rax],al
   14000b2d9:	add    DWORD PTR [rax],eax
   14000b2db:	add    BYTE PTR [rax],al
   14000b2dd:	add    DWORD PTR [rax],eax
   14000b2df:	add    BYTE PTR [rax],al
   14000b2e1:	add    BYTE PTR [rax],al
   14000b2e3:	add    BYTE PTR [rbx+0x6c],bl
   14000b2e6:	jle    0x14000b2e8
   14000b2e8:	jle    0x14000b366
   14000b2ea:	js     0x14000b2ec
   14000b2ec:	xchg   ecx,eax
   14000b2ed:	pop    rdi
   14000b2ee:	or     al,0x0
   14000b2f0:	sahf   
   14000b2f1:	adc    ax,0xbe00
   14000b2f5:	imul   eax,DWORD PTR [rax],0x1666a500
   14000b2fb:	add    BYTE PTR [rdi-0x51ffde8f],ch
   14000b301:	jns    0x14000b32b
   14000b303:	add    BYTE PTR [rdx-0x4affd98a],dh
   14000b309:	jp     0x14000b335
   14000b30b:	add    BYTE PTR [rcx-0x3bffd082],bh
   14000b311:	jo     0x14000b313
   14000b313:	add    dl,cl
   14000b315:	ja     0x14000b317
   14000b317:	add    dh,cl
   14000b319:	jl     0x14000b31b
   14000b31b:	add    al,dl
   14000b31d:	jg     0x14000b320
   14000b31f:	add    ch,dl
   14000b321:	test   DWORD PTR [rip+0x68bdb00],eax        # 0x1468c8e27
   14000b327:	add    ch,bl
   14000b329:	mov    cs,WORD PTR [rbx]
   14000b32b:	add    ch,bl
   14000b32d:	xchg   edx,eax
   14000b32e:	adc    eax,0xe95e200
   14000b333:	add    bh,ah
   14000b335:	popf   
   14000b336:	(bad)  
   14000b337:	add    cl,ch
   14000b339:	popf   
   14000b33a:	adc    al,BYTE PTR [rax]
   14000b33c:	in     eax,dx
   14000b33d:	movabs ds:0xa8f10016a4ee0014,al
   14000b346:	(bad)  
   14000b347:	add    dl,dh
   14000b349:	stos   BYTE PTR es:[rdi],al
   14000b34a:	sbb    BYTE PTR [rax],al
   14000b34c:	imul   BYTE PTR [rbp-0x5109ffe7]
   14000b352:	sbb    al,0x0
   14000b354:	clc    
   14000b355:	scas   al,BYTE PTR es:[rdi]
   14000b356:	sbb    BYTE PTR [rax],al
   14000b358:	cli    
   14000b359:	mov    cl,0x1a
   14000b35b:	add    ah,bh
   14000b35d:	mov    ah,0x1b
   14000b35f:	add    cl,bh
   14000b361:	mov    dl,0x1e
   14000b363:	add    bl,ah
   14000b365:	popf   
   14000b366:	and    al,BYTE PTR [rax]
   14000b368:	loope  0x14000b307
   14000b36a:	sub    eax,DWORD PTR [rax]
   14000b36c:	fisub  WORD PTR [rax-0x5710ffd0]
   14000b372:	and    eax,DWORD PTR [rax]
   14000b374:	out    0xa7,eax
   14000b376:	(bad)  
   14000b377:	add    bl,ch
   14000b379:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b37a:	(bad)  
   14000b37b:	add    al,bh
   14000b37d:	mov    dl,0x26
   14000b37f:	add    dl,bh
   14000b381:	mov    dh,0x2b
   14000b383:	add    bl,ah
   14000b385:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b386:	xor    al,BYTE PTR [rax]
   14000b388:	out    0xa8,eax
   14000b38a:	xor    al,0x0
   14000b38c:	(bad)  
   14000b38d:	lods   al,BYTE PTR ds:[rsi]
   14000b38e:	(bad)  
   14000b38f:	add    ah,ch
   14000b391:	scas   al,BYTE PTR es:[rdi]
   14000b392:	cmp    BYTE PTR [rax],al
   14000b394:	in     eax,dx
   14000b395:	mov    al,0x37
   14000b397:	add    dh,ch
   14000b399:	mov    cl,0x39
   14000b39b:	add    ah,dh
   14000b39d:	mov    bl,0x33
   14000b39f:	add    cl,dh
   14000b3a1:	mov    bl,0x3a
   14000b3a3:	add    ah,dh
   14000b3a5:	mov    eax,0xb9f5003b
   14000b3aa:	cmp    al,0x0
   14000b3ac:	idiv   DWORD PTR [rdi+rdi*1+0x3abcfb00]
   14000b3b3:	add    al,bh
   14000b3b5:	mov    edx,0xbcf9003e
   14000b3ba:	(bad)  
   14000b3bb:	add    ch,bh
   14000b3bd:	sar    BYTE PTR [rax+rax*1],0xc7
   14000b3c1:	cwde   
   14000b3c2:	pop    rbx
   14000b3c3:	add    dh,al
   14000b3c5:	cwde   
   14000b3c6:	pop    rsp
   14000b3c7:	add    dl,bh
   14000b3c9:	mov    esi,0xa6d70041
   14000b3ce:	outs   dx,BYTE PTR ds:[rsi]
   14000b3cf:	add    dl,bl
   14000b3d1:	stos   BYTE PTR es:[rdi],al
   14000b3d2:	outs   dx,BYTE PTR ds:[rsi]
   14000b3d3:	add    bh,bl
   14000b3d5:	mov    cl,0x6e
   14000b3d7:	add    cl,bl
   14000b3d9:	test   eax,0xacdb0074
   14000b3de:	je     0x14000b3e0
   14000b3e0:	fisubr WORD PTR [rdi-0x542dff8c]
   14000b3e6:	jp     0x14000b3e8
   14000b3e8:	shr    BYTE PTR [rdx+rdi*2+0x7cadd300],cl
   14000b3ef:	add    ah,dl
   14000b3f1:	scas   al,BYTE PTR es:[rdi]
   14000b3f2:	jle    0x14000b3f4
   14000b3f4:	shl    DWORD PTR [rax-0x4d27ff81],cl
   14000b3fa:	jnp    0x14000b3fc
   14000b3fc:	in     al,0xb1
   14000b3fe:	(bad)  
   14000b3ff:	add    bl,ah
   14000b401:	mov    ah,0x6f
   14000b403:	add    ch,ch
   14000b405:	mov    edi,0xb3e1006d
   14000b40a:	je     0x14000b40c
   14000b40c:	in     al,0xb7
   14000b40e:	je     0x14000b410
   14000b410:	out    0xba,eax
   14000b412:	jbe    0x14000b414
   14000b414:	(bad)  
   14000b415:	mov    edi,0xc0fb0078
   14000b41a:	rex.X add dil,bpl
   14000b41d:	ret    0x71
   14000b420:	out    dx,al
   14000b421:	ret    0x7b
   14000b424:	repz leave 
   14000b426:	jns    0x14000b428
   14000b428:	test   bl,0x7b
   14000b42b:	add    dh,dh
   14000b42d:	int3   
   14000b42e:	jnp    0x14000b430
   14000b430:	icebp  
   14000b431:	enter  0x7c,0xf8
   14000b435:	iret   
   14000b436:	jge    0x14000b438
   14000b438:	push   rdi
   14000b439:	js     0x14000b3d8
   14000b43b:	add    BYTE PTR [rcx+0x7a],ah
   14000b43e:	pop    QWORD PTR [rax]
   14000b440:	js     0x14000b4bd
   14000b442:	add    BYTE PTR [rax],0x7b
   14000b445:	test   DWORD PTR [rax-0x566a8b00],edx
   14000b44b:	add    BYTE PTR [rbp-0x6c],bh
   14000b44e:	stos   BYTE PTR es:[rdi],al
   14000b44f:	add    BYTE PTR [rdi-0x6c],ch
   14000b452:	mov    ch,0x0
   14000b454:	cdq    
   14000b455:	xchg   edi,eax
   14000b456:	mov    WORD PTR [rax],es
   14000b458:	fwait
   14000b459:	(bad)  
   14000b45a:	xchg   ebp,eax
   14000b45b:	add    BYTE PTR [rbp-0x63ff7965],ah
   14000b461:	mov    ebx,0xb49d0085
   14000b466:	mov    eax,DWORD PTR [rax]
   14000b468:	movabs ds:0xb3008cbba80082ae,al
   14000b471:	mov    ebp,0xa6a2008c
   14000b476:	xchg   ebp,eax
   14000b477:	add    BYTE PTR [rbx-0x46ff6e53],bh
   14000b47d:	scas   eax,DWORD PTR es:[rdi]
   14000b47e:	(bad)  
   14000b47f:	add    BYTE PTR [rdx+rsi*4-0x5465ff65],bh
   14000b486:	scas   eax,DWORD PTR es:[rdi]
   14000b487:	add    BYTE PTR [rsi-0x2bff4644],dh
   14000b48d:	scas   eax,DWORD PTR es:[rdi]
   14000b48e:	add    BYTE PTR [rax],0xd5
   14000b491:	mov    al,0x82
   14000b493:	add    ch,dl
   14000b495:	mov    bl,0x85
   14000b497:	add    bh,dl
   14000b499:	mov    ch,0x85
   14000b49b:	add    cl,bl
   14000b49d:	mov    bh,0x86
   14000b49f:	add    ah,dl
   14000b4a1:	mov    al,0x89
   14000b4a3:	add    bh,dl
   14000b4a5:	mov    ch,0x89
   14000b4a7:	add    al,bl
   14000b4a9:	mov    bh,0x89
   14000b4ab:	add    cl,bl
   14000b4ad:	mov    eax,0xbbda008a
   14000b4b2:	mov    es,WORD PTR [rax]
   14000b4b4:	fstp   TBYTE PTR [rdi+rcx*4-0x73412400]
   14000b4bb:	add    dl,cl
   14000b4bd:	mov    esi,0xb8d8009f
   14000b4c2:	xchg   edx,eax
   14000b4c3:	add    bl,bl
   14000b4c5:	mov    esp,0xbedc0091
   14000b4ca:	xchg   ebx,eax
   14000b4cb:	add    bl,bl
   14000b4cd:	mov    ebp,0xbedc0094
   14000b4d2:	xchg   esp,eax
   14000b4d3:	add    BYTE PTR [rax-0x50ff713b],ch
   14000b4d9:	(bad)  
   14000b4da:	xchg   edi,eax
   14000b4db:	add    BYTE PTR [rbp+rax*8-0x3841ff6c],dh
   14000b4e2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b4e3:	add    BYTE PTR [rdi-0x32ff5f38],dh
   14000b4e9:	ret    0x9d
   14000b4ec:	ffreep st(0)
   14000b4ee:	xchg   ebp,eax
   14000b4ef:	add    dl,ah
   14000b4f1:	leave  
   14000b4f2:	pushf  
   14000b4f3:	add    cl,cl
   14000b4f5:	shl    BYTE PTR [rax-0x5e3e3400],0x0
   14000b4fc:	(bad)  
   14000b4fd:	(bad)  
   14000b4fe:	movabs ds:0xa5c6d500a4c1d200,eax
   14000b507:	add    ch,bl
   14000b509:	ret    0xa0
   14000b50c:	faddp  st(3),st
   14000b50e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b50f:	add    dh,bl
   14000b511:	(bad)  
   14000b512:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b513:	add    bh,bl
   14000b515:	leave  
   14000b516:	movabs ds:0xa9cdda00a5c8dd00,al
   14000b51f:	add    ah,bl
   14000b521:	int3   
   14000b522:	test   eax,0xaccede00
   14000b527:	add    cl,al
   14000b529:	shr    DWORD PTR [rax-0x552f2200],1
   14000b52f:	add    bh,bl
   14000b531:	shr    DWORD PTR [rax+rax*1+0xbbcfcb],1
   14000b538:	fmul   st,st(4)
   14000b53a:	mov    eax,0xb0d2ce00
   14000b53f:	add    ch,cl
   14000b541:	(bad)  
   14000b542:	mov    ah,0x0
   14000b544:	int3   
   14000b545:	fdiv   DWORD PTR [rax+rax*1+0xbadacf]
   14000b54c:	loopne 0x14000b512
   14000b54e:	movabs ds:0xa6cbe000a2c9e100,al
   14000b557:	add    dl,ah
   14000b559:	int    0xa7
   14000b55b:	add    al,ah
   14000b55d:	(bad)
   14000b560:	jrcxz  0x14000b531
   14000b562:	test   al,0x0
   14000b564:	jmp    0x120015c3e
   14000b569:	shr    DWORD PTR [rbx-0x572e1b00],1
   14000b56f:	add    cl,ah
   14000b571:	shr    DWORD PTR [rbp-0x55291700],1
   14000b577:	add    cl,ch
   14000b579:	xlat   BYTE PTR ds:[rbx]
   14000b57a:	lods   eax,DWORD PTR ds:[rsi]
   14000b57b:	add    dl,ch
   14000b57d:	fsubr  DWORD PTR [rsi-0x4d261600]
   14000b583:	add    ah,ch
   14000b585:	(bad)  [rdx-0x4a241500]
   14000b58b:	add    ah,ch
   14000b58d:	(bad)  [rax+rax*1+0xb6dcec]
   14000b594:	out    0xd0,eax
   14000b596:	mov    edi,0xbed4e700
   14000b59b:	add    al,ch
   14000b59d:	(bad)  
   14000b59e:	mov    edx,0xb9dbec00
   14000b5a3:	add    ah,ch
   14000b5a5:	fnstsw WORD PTR [rcx-0x42261500]
   14000b5ab:	add    ch,ch
   14000b5ad:	fidivr WORD PTR [rbp-0x411f1200]
   14000b5b3:	add    al,dh
   14000b5b5:	loop   0x14000b576
   14000b5b7:	add    BYTE PTR [rbp-0x6dff3255],al
   14000b5bd:	mov    al,0xc9
   14000b5bf:	add    BYTE PTR [rbx-0x46ff2b4a],dl
   14000b5c5:	shl    edi,1
   14000b5c7:	add    BYTE PTR [rdi-0x38ff142a],bh
   14000b5cd:	(bad)  
   14000b5ce:	(bad)  
   14000b5cf:	add    dh,cl
   14000b5d1:	ror    ebp,1
   14000b5d3:	add    dl,bl
   14000b5d5:	fcmovnb st,st(3)
   14000b5d7:	add    bh,ah
   14000b5d9:	rol    edx,1
   14000b5db:	add    al,ch
   14000b5dd:	rol    edx,1
   14000b5df:	add    al,ch
   14000b5e1:	rol    esi,cl
   14000b5e3:	add    cl,ch
   14000b5e5:	(bad)  
   14000b5e6:	mov    BYTE PTR [rax],0xec
   14000b5e9:	fcmovb st,st(0)
   14000b5eb:	add    ch,ch
   14000b5ed:	ffree  st(1)
   14000b5ef:	add    bl,ch
   14000b5f1:	fcmovnb st,st(5)
   14000b5f3:	add    ch,ch
   14000b5f5:	fadd   st(4),st
   14000b5f7:	add    cl,ch
   14000b5f9:	(bad)  
   14000b5fa:	enter  0xeb00,0xd7
   14000b5fe:	int3   
   14000b5ff:	add    ch,ch
   14000b601:	(bad)  
   14000b603:	add    dl,ch
   14000b605:	fmul   st,st(5)
   14000b607:	add    dh,ch
   14000b609:	fmulp  st(6),st
   14000b60b:	add    ah,ch
   14000b60d:	fcmovnbe st,st(1)
   14000b60f:	add    ch,ch
   14000b611:	(bad)  
   14000b613:	add    dh,ch
   14000b615:	loopne 0x14000b5d8
   14000b617:	add    bh,ch
   14000b619:	loope  0x14000b5df
   14000b61b:	add    bh,ch
   14000b61d:	loope  0x14000b5ed
   14000b61f:	add    al,dh
   14000b621:	loop   0x14000b5e3
   14000b623:	add    al,dh
   14000b625:	loop   0x14000b5ec
   14000b627:	add    cl,dh
   14000b629:	in     al,0xc5
   14000b62b:	add    cl,dh
   14000b62d:	jrcxz  0x14000b5f8
   14000b62f:	add    al,dh
   14000b631:	in     eax,0xc9
   14000b633:	add    cl,dh
   14000b635:	out    0xcc,al
   14000b637:	add    dl,dh
   14000b639:	call   0x121efb70c
   14000b63e:	rol    BYTE PTR [rax],1
   14000b640:	out    dx,eax
   14000b641:	loopne 0x14000b61c
   14000b643:	add    al,dh
   14000b645:	loop   0x14000b618
   14000b647:	add    cl,dh
   14000b649:	in     eax,0xd0
   14000b64b:	add    al,dh
   14000b64d:	jrcxz  0x14000b624
   14000b64f:	add    cl,dh
   14000b651:	out    0xd5,al
   14000b653:	add    bl,dh
   14000b655:	jmp    0x12af4b72b
   14000b65a:	rol    BYTE PTR [rax],cl
   14000b65c:	hlt    
   14000b65d:	jmp    0x14000b633
   14000b65f:	add    ch,dh
   14000b661:	in     al,dx
   14000b662:	(bad)  
   14000b663:	add    cl,dh
   14000b665:	in     eax,0xd9
   14000b667:	add    dl,dh
   14000b669:	call   0x12df5b747
   14000b66e:	fld    DWORD PTR [rax]
   14000b670:	bnd jmp 0x12bf4b752
   14000b676:	fiadd  WORD PTR [rax]
   14000b678:	repz in al,dx
   14000b67a:	fiadd  WORD PTR [rax]
   14000b67c:	cmc    
   14000b67d:	in     eax,dx
   14000b67e:	fld    QWORD PTR [rax]
   14000b680:	div    eax
   14000b682:	fild   WORD PTR [rax]
   14000b684:	cli    
   14000b685:	repz fild WORD PTR [rax]
   14000b688:	repz out 0xe3,eax
   14000b68b:	add    ch,dh
   14000b68d:	in     al,dx
   14000b68e:	loope  0x14000b690
   14000b690:	clc    
   14000b691:	out    dx,al
   14000b692:	in     eax,0x0
   14000b694:	cmc    
   14000b695:	jmp    0x14000b680
   14000b697:	add    bh,dh
   14000b699:	out    dx,al
   14000b69a:	jmp    0x121f2ad9f
   14000b69f:	add    bh,dh
   14000b6a1:	icebp  
   14000b6a2:	in     eax,0x0
   14000b6a4:	clc    
   14000b6a5:	repnz loop 0x14000b6a8
   14000b6a8:	sti    
   14000b6a9:	cmc    
   14000b6aa:	loope  0x14000b6ac
   14000b6ac:	clc    
   14000b6ad:	icebp  
   14000b6ae:	in     eax,0x0
   14000b6b0:	stc    
   14000b6b1:	hlt    
   14000b6b2:	out    0x0,eax
   14000b6b4:	cld    
   14000b6b5:	mul    ch
   14000b6b7:	add    al,bh
   14000b6b9:	icebp  
   14000b6ba:	call   0x129f5afbf
   14000b6bf:	add    cl,bh
   14000b6c1:	cmc    
   14000b6c2:	in     eax,dx
   14000b6c3:	add    ch,bh
   14000b6c5:	clc    
   14000b6c6:	(bad)  
   14000b6c7:	add    dh,bh
   14000b6c9:	cli    
   14000b6ca:	in     eax,dx
   14000b6cb:	add    bh,bh
   14000b6cd:	cld    
   14000b6ce:	lock add bl,bh
   14000b6d1:	clc    
   14000b6d2:	clc    
   14000b6d3:	add    ah,bh
   14000b6d5:	cli    
   14000b6d6:	stc    
   14000b6d7:	add    bh,bh
   14000b6d9:	(bad)  
   14000b6da:	stc    
   14000b6db:	add    bh,bh
   14000b6dd:	(bad)  
   14000b6de:	inc    DWORD PTR [rax]
	...
   14000b720:	add    eax,DWORD PTR [rbx]
   14000b722:	add    eax,DWORD PTR [rbx]
   14000b724:	add    eax,DWORD PTR [rbx]
   14000b726:	add    eax,DWORD PTR [rbx]
   14000b728:	add    eax,DWORD PTR [rbx]
   14000b72a:	add    eax,DWORD PTR [rbx]
   14000b72c:	add    eax,DWORD PTR [rbx]
   14000b72e:	add    eax,DWORD PTR [rbx]
   14000b730:	add    eax,DWORD PTR [rbx]
   14000b732:	add    eax,DWORD PTR [rbx]
   14000b734:	add    eax,DWORD PTR [rbx]
   14000b736:	add    eax,DWORD PTR [rbx]
   14000b738:	add    eax,DWORD PTR [rbx]
   14000b73a:	add    eax,DWORD PTR [rbx]
   14000b73c:	add    eax,DWORD PTR [rbx]
   14000b73e:	add    eax,DWORD PTR [rbx]
   14000b740:	add    edi,edi
   14000b742:	(bad)  
   14000b743:	(bad)  
   14000b744:	(bad)  
   14000b745:	(bad)  
   14000b746:	(bad)  
   14000b747:	(bad)  
   14000b748:	(bad)  
   14000b749:	(bad)  
   14000b74a:	(bad)  
   14000b74b:	(bad)  
   14000b74c:	(bad)  
   14000b74d:	(bad)  
   14000b74e:	(bad)  
   14000b74f:	(bad)  
   14000b750:	(bad)  
   14000b751:	(bad)  
   14000b752:	(bad)  
   14000b753:	(bad)  
   14000b754:	(bad)  
   14000b755:	(bad)  
   14000b756:	(bad)  
   14000b757:	(bad)  
   14000b758:	(bad)  
   14000b759:	(bad)  
   14000b75a:	(bad)  
   14000b75b:	(bad)  
   14000b75c:	(bad)  
   14000b75d:	(bad)  
   14000b75e:	inc    DWORD PTR [rbx]
   14000b760:	add    edi,edi
   14000b762:	hlt    
   14000b763:	hlt    
   14000b764:	hlt    
   14000b765:	out    0xe8,eax
   14000b767:	out    0xe0,eax
   14000b769:	loopne 0x14000b74b
   14000b76b:	loopne 0x14000b742
   14000b76d:	(bad)  
   14000b76e:	(bad)  
   14000b76f:	rcl    dl,cl
   14000b771:	shl    BYTE PTR [rbx+rsi*4-0x5353534d],1
   14000b778:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b779:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b77a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b77b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b77c:	movabs eax,ds:0xf4f4f4fe0303ffa1
   14000b785:	call   0x120e89f72
   14000b78a:	loopne 0x14000b76c
   14000b78c:	(bad)  
   14000b78d:	(bad)  
   14000b78e:	(bad)  
   14000b78f:	(bad)  
   14000b790:	rcl    dl,cl
   14000b792:	rcl    al,1
   14000b794:	mov    bl,0xb3
   14000b796:	lods   al,BYTE PTR ds:[rsi]
   14000b797:	lods   al,BYTE PTR ds:[rsi]
   14000b798:	lods   al,BYTE PTR ds:[rsi]
   14000b799:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b79a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b79b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b79c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b79d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b79e:	inc    DWORD PTR [rbx]
   14000b7a0:	add    edi,edi
   14000b7a2:	hlt    
   14000b7a3:	hlt    
   14000b7a4:	hlt    
   14000b7a5:	hlt    
   14000b7a6:	call   0x120e89f93
   14000b7ab:	loopne 0x14000b78d
   14000b7ad:	loopne 0x14000b784
   14000b7af:	(bad)  
   14000b7b0:	(bad)  
   14000b7b1:	rcl    al,cl
   14000b7b3:	ror    ch,1
   14000b7b5:	mov    bl,0xb3
   14000b7b7:	lods   al,BYTE PTR ds:[rsi]
   14000b7b8:	lods   al,BYTE PTR ds:[rsi]
   14000b7b9:	lods   al,BYTE PTR ds:[rsi]
   14000b7ba:	lods   al,BYTE PTR ds:[rsi]
   14000b7bb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b7bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b7bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b7be:	inc    DWORD PTR [rbx]
   14000b7c0:	add    edi,edi
   14000b7c2:	stc    
   14000b7c3:	stc    
   14000b7c4:	lock lock in al,0xdc
   14000b7c8:	(bad)  
   14000b7ca:	(bad)  
   14000b7cb:	retf   0xd5d5
   14000b7ce:	(bad)  
   14000b7d0:	(bad)  
   14000b7d1:	(bad)  
   14000b7d2:	(bad)  
   14000b7d3:	rcl    al,1
   14000b7d5:	shl    BYTE PTR [rbx-0x5953534d],1
   14000b7db:	lods   al,BYTE PTR ds:[rsi]
   14000b7dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b7dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b7de:	inc    DWORD PTR [rbx]
   14000b7e0:	add    edi,edi
   14000b7e2:	stc    
   14000b7e3:	fdiv   DWORD PTR [rcx+0x6b]
   14000b7e6:	imul   eax,DWORD PTR [rsp+rax*2+0x44],0x44
   14000b7eb:	rex.R
   14000b7ec:	rex.R
   14000b7ed:	rex.R lahf 
   14000b7ef:	retf   0xd5d5
   14000b7f2:	(bad)  
   14000b7f3:	(bad)  
   14000b7f4:	rcl    al,cl
   14000b7f6:	int    0xb3
   14000b7f8:	mov    bl,0xac
   14000b7fa:	lods   al,BYTE PTR ds:[rsi]
   14000b7fb:	lods   al,BYTE PTR ds:[rsi]
   14000b7fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b7fd:	lods   al,BYTE PTR ds:[rsi]
   14000b7fe:	inc    DWORD PTR [rbx]
   14000b800:	add    edi,edi
   14000b802:	in     eax,dx
   14000b803:	outs   dx,BYTE PTR ds:[rsi]
   14000b804:	scas   eax,DWORD PTR es:[rdi]
   14000b805:	fdivr  st(0),st
   14000b807:	in     al,dx
   14000b808:	in     al,dx
   14000b809:	in     al,dx
   14000b80a:	in     al,dx
   14000b80b:	in     al,dx
   14000b80c:	lock rol DWORD PTR [rbx+rcx*4-0x24],0xd6
   14000b812:	(bad)  
   14000b813:	rcl    ch,cl
   14000b815:	rcl    al,1
   14000b817:	shl    BYTE PTR [rbx-0x5353534d],1
   14000b81d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b81e:	inc    DWORD PTR [rbx]
   14000b820:	add    edi,edi
   14000b822:	fsubr  DWORD PTR [rsi-0x24]
   14000b825:	scas   eax,DWORD PTR es:[rdi]
   14000b826:	xchg   edi,eax
   14000b827:	xchg   edx,eax
   14000b828:	mov    ebp,0x80979a97
   14000b82d:	xchg   esi,eax
   14000b82e:	out    0x41,eax
   14000b830:	(bad)  
   14000b831:	loopne 0x14000b808
   14000b833:	(bad)  
   14000b834:	(bad)  
   14000b835:	(bad)  
   14000b836:	ror    ch,cl
   14000b838:	shl    BYTE PTR [rbx-0x5353534d],1
   14000b83e:	inc    DWORD PTR [rbx]
   14000b840:	add    edi,edi
   14000b842:	retf   
   14000b843:	jb     0x14000b821
   14000b845:	mov    ah,BYTE PTR [rax+riz*2-0x6b]
   14000b849:	cmp    DWORD PTR [rsi+0x7d],0x44f08862
   14000b850:	int    0xdc
   14000b852:	loopne 0x14000b82a
   14000b854:	(bad)  
   14000b855:	(bad)  
   14000b856:	(bad)  
   14000b857:	rcl    al,cl
   14000b859:	shl    BYTE PTR [rbx-0x53534d],1
   14000b85f:	add    eax,DWORD PTR [rbx]
   14000b861:	dec    ecx
   14000b863:	jb     0x14000b855
   14000b865:	mov    al,BYTE PTR [rdx+0x615b697f]
   14000b86b:	movsxd eax,DWORD PTR [rbp-0x38be0f6f]
   14000b871:	loopne 0x14000b848
   14000b873:	(bad)  
   14000b874:	(bad)  
   14000b875:	rcl    dl,cl
   14000b877:	ror    ch,1
   14000b879:	int    0xb3
   14000b87b:	mov    bl,0xb3
   14000b87d:	mov    ah,0xff
   14000b87f:	add    eax,DWORD PTR [rbx]
   14000b881:	inc    edi
   14000b883:	jb     0x14000b86c
   14000b885:	mov    cs,WORD PTR [rdx+0x65565a85]
   14000b88b:	mov    BYTE PTR [rcx-0x36bb0f6f],cl
   14000b891:	(bad)  
   14000b892:	jb     0x14000b90a
   14000b894:	jb     0x14000b90c
   14000b896:	jb     0x14000b912
   14000b898:	jb     0x14000b910
   14000b89a:	jb     0x14000b912
   14000b89c:	lods   al,BYTE PTR ds:[rsi]
   14000b89d:	mov    ch,0xff
   14000b89f:	add    eax,DWORD PTR [rbx]
   14000b8a1:	inc    edi
   14000b8a3:	jb     0x14000b895
   14000b8a5:	mov    ds,WORD PTR [rsi+0x5d5cb66a]
   14000b8ab:	xchg   ecx,eax
   14000b8ac:	mov    BYTE PTR [rcx-0x1f36bb07],dl
   14000b8b2:	(bad)  
   14000b8b3:	(bad)  
   14000b8b4:	(bad)  
   14000b8b5:	(bad)  
   14000b8b6:	rcl    dl,cl
   14000b8b8:	rcl    dl,cl
   14000b8ba:	shl    BYTE PTR [rbx+rsi*4+0x303ffd2],cl
   14000b8c1:	dec    ecx
   14000b8c3:	jb     0x14000b8b5
   14000b8c5:	sahf   
   14000b8c6:	mov    ?,WORD PTR [rbx+0x6657b8b9]
   14000b8cc:	xchg   ebx,eax
   14000b8cd:	xchg   ecx,eax
   14000b8ce:	in     eax,dx
   14000b8cf:	rex.R leave 
   14000b8d1:	out    0x72,eax
   14000b8d3:	jb     0x14000b94f
   14000b8d5:	jb     0x14000b951
   14000b8d7:	jb     0x14000b953
   14000b8d9:	jb     0x14000b94d
   14000b8db:	jp     0x14000b890
   14000b8dd:	sar    bh,cl
   14000b8df:	add    eax,DWORD PTR [rbx]
   14000b8e1:	dec    ecx
   14000b8e3:	jae    0x14000b8d5
   14000b8e5:	sahf   
   14000b8e6:	sahf   
   14000b8e7:	mov    esp,0x5f01b7ba
   14000b8ec:	xchg   ebx,eax
   14000b8ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b8ee:	stc    
   14000b8ef:	rex.R (bad) 
   14000b8f1:	out    0x73,eax
   14000b8f3:	or     eax,DWORD PTR [rsi-0x32]
   14000b8f6:	int    0xcd
   14000b8f8:	int    0xcd
   14000b8fa:	int    0xb2
   14000b8fc:	int    0xd2
   14000b8fe:	inc    DWORD PTR [rbx]
   14000b900:	add    edi,edi
   14000b902:	retf   
   14000b903:	jb     0x14000b8f5
   14000b905:	movabs ds:0xa491825858595e9e,eax
   14000b90e:	lock rex.R retf 
   14000b911:	or     DWORD PTR [rbx],0x49
   14000b914:	or     al,BYTE PTR [rsp+rax*4-0x7b7b7b7c]
   14000b91b:	test   al,dl
   14000b91d:	(bad)  
   14000b91e:	inc    DWORD PTR [rbx]
   14000b920:	add    edi,edi
   14000b922:	fdiv   DWORD PTR [rbx-0x10]
   14000b925:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b926:	movabs ds:0xe7a48e93a3676788,eax
   14000b92f:	rex.R or DWORD PTR [rdx],0x25
   14000b933:	rex.WRXB or r10b,r13b
   14000b936:	(bad)  
   14000b937:	(bad)  
   14000b938:	(bad)  
   14000b939:	rcl    dl,cl
   14000b93b:	rcl    dl,cl
   14000b93d:	sar    bh,cl
   14000b93f:	add    eax,DWORD PTR [rbx]
   14000b941:	(bad)  
   14000b942:	in     eax,dx
   14000b943:	mov    edi,ecx
   14000b945:	stc    
   14000b946:	stc    
   14000b947:	stc    
   14000b948:	lock out 0xe7,eax
   14000b94b:	out    0xe6,eax
   14000b94d:	out    0xc9,eax
   14000b94f:	cmp    BYTE PTR [rbx],cl
   14000b951:	(bad)  
   14000b952:	sbb    edx,DWORD PTR [rcx+0xa]
   14000b955:	(bad)  
   14000b956:	stc    
   14000b957:	stc    
   14000b958:	stc    
   14000b959:	hlt    
   14000b95a:	hlt    
   14000b95b:	hlt    
   14000b95c:	call   0x14304b949
   14000b961:	(bad)  
   14000b962:	inc    ecx
   14000b964:	outs   dx,BYTE PTR ds:[rsi]
   14000b965:	jae    0x14000b8ea
   14000b967:	jno    0x14000b8ec
   14000b969:	xor    DWORD PTR [rdx+0x72],0xffffff83
   14000b96d:	jb     0x14000b9a7
   14000b96f:	or     bl,BYTE PTR [rdi]
   14000b971:	(bad)  
   14000b972:	sbb    al,0x51
   14000b974:	or     cl,BYTE PTR [rdx]
   14000b976:	or     cl,BYTE PTR [rdx]
   14000b978:	or     cl,BYTE PTR [rbx]
   14000b97a:	or     cl,BYTE PTR [rdx]
   14000b97c:	or     cl,BYTE PTR [rbx]
   14000b97e:	or     cl,BYTE PTR [rax]
   14000b980:	add    edi,edi
   14000b982:	(bad)  
   14000b983:	cld    
   14000b984:	(bad)  
   14000b985:	retf   
   14000b986:	mov    esi,0xc0c0adbe
   14000b98c:	shl    BYTE PTR [rcx+0x9],0x37
   14000b990:	sub    BYTE PTR [rdi],bl
   14000b992:	(bad)  
   14000b993:	push   rbp
   14000b994:	push   rcx
   14000b995:	push   rcx
   14000b996:	push   rcx
   14000b997:	push   rax
   14000b998:	rex.WRB
   14000b999:	rex.WRB
   14000b99a:	rex.W
   14000b99b:	rex.W
   14000b99c:	rex (bad) 
   14000b99e:	(bad)  
   14000b99f:	or     al,BYTE PTR [rbx]
   14000b9a1:	(bad)  
   14000b9a2:	(bad)  
   14000b9a3:	(bad)  
   14000b9a4:	(bad)  
   14000b9a5:	(bad)  
   14000b9a6:	(bad)  
   14000b9a7:	(bad)  
   14000b9a8:	(bad)  
   14000b9a9:	(bad)  
   14000b9aa:	(bad)  
   14000b9ab:	dec    BYTE PTR [rdx+0x3a323209]
   14000b9b1:	xor    eax,0x181a1c28
   14000b9b6:	(bad)  
   14000b9b7:	adc    al,0x12
   14000b9b9:	adc    BYTE PTR [rdi],cl
   14000b9bb:	or     eax,0xa3b050c
   14000b9c0:	add    edi,edi
   14000b9c2:	(bad)  
   14000b9c3:	(bad)  
   14000b9c4:	(bad)  
   14000b9c5:	(bad)  
   14000b9c6:	(bad)  
   14000b9c7:	(bad)  
   14000b9c8:	(bad)  
   14000b9c9:	(bad)  
   14000b9ca:	dec    DWORD PTR [rdx+0x312d2d09]
   14000b9d0:	xor    bh,BYTE PTR [rdx]
   14000b9d2:	rex.WRX sub BYTE PTR [rdx+r11*1],r11b
   14000b9d6:	sbb    BYTE PTR [rsi],dl
   14000b9d8:	adc    al,0x12
   14000b9da:	adc    BYTE PTR [rdi],cl
   14000b9dc:	or     eax,0x30a3c0c
   14000b9e1:	add    eax,DWORD PTR [rbx]
   14000b9e3:	add    eax,DWORD PTR [rbx]
   14000b9e5:	add    eax,DWORD PTR [rbx]
   14000b9e7:	add    eax,DWORD PTR [rbx]
   14000b9e9:	add    eax,DWORD PTR [rbx]
   14000b9eb:	add    al,0x6
   14000b9ed:	and    esp,DWORD PTR [rip+0x3531312b]        # 0x17531eb1e
   14000b9f3:	cmp    cl,BYTE PTR [rsi+0x3a]
   14000b9f6:	xor    eax,0x1415242f
   14000b9fb:	adc    DWORD PTR [rax],edx
   14000b9fd:	(bad)  
   14000b9fe:	cmp    eax,0xa
	...
   14000ba0b:	add    BYTE PTR [rax],al
   14000ba0d:	(bad)  
   14000ba0e:	and    esp,DWORD PTR [rip+0x3a322d2b]        # 0x17a32e73f
   14000ba14:	cmp    bh,BYTE PTR [rdx]
   14000ba16:	cmp    dh,BYTE PTR [rip+0x21253131]        # 0x16125eb4d
   14000ba1c:	adc    edx,DWORD PTR [rax]
   14000ba1e:	rex.W or al,BYTE PTR [rax]
	...
   14000ba2d:	add    BYTE PTR [rsi],al
   14000ba2f:	and    eax,0x3a312b25
   14000ba34:	cmp    cl,BYTE PTR [rsi+0x3a]
   14000ba37:	cmp    dh,BYTE PTR [rip+0x2a2b2e31]        # 0x16a2be86e
   14000ba3d:	and    al,BYTE PTR [rdi+0xa]
	...
   14000ba4c:	add    BYTE PTR [rax],al
   14000ba4e:	add    BYTE PTR [rsi],al
   14000ba50:	sub    DWORD PTR [rdx],ebp
   14000ba52:	sub    esi,DWORD PTR [rdx]
   14000ba54:	or     DWORD PTR [rcx],ecx
   14000ba56:	or     DWORD PTR [rcx],ecx
   14000ba58:	or     DWORD PTR [rcx],ecx
   14000ba5a:	or     DWORD PTR [rcx],ecx
   14000ba5c:	or     DWORD PTR [rcx],ecx
   14000ba5e:	or     DWORD PTR [rcx],ecx
	...
   14000ba70:	(bad)  
   14000ba71:	sub    DWORD PTR [rdx],ebp
   14000ba73:	xor    DWORD PTR [rdi],eax
	...
   14000ba91:	(bad)  
   14000ba92:	sub    DWORD PTR [rbx],ebp
   14000ba94:	or     DWORD PTR [rax],eax
	...
   14000bab2:	(bad)  
   14000bab3:	sub    eax,DWORD PTR [rdi]
	...
   14000bad1:	add    BYTE PTR [rax],al
   14000bad3:	(bad)  
   14000bad4:	or     DWORD PTR [rax],eax
	...
   14000bade:	add    BYTE PTR [rax],al
   14000bae0:	(bad)  
   14000bae1:	(bad)  
   14000bae2:	(bad)  
   14000bae3:	(bad)  
   14000bae4:	(bad)  
   14000bae5:	(bad)  
   14000bae6:	(bad)  
   14000bae7:	inc    DWORD PTR [rax]
	...
   14000bb41:	add    BYTE PTR [rax],al
   14000bb43:	add    bh,bh
   14000bb45:	clc    
   14000bb46:	add    BYTE PTR [rax],al
   14000bb48:	(bad)  
   14000bb49:	cld    
   14000bb4a:	add    BYTE PTR [rax],al
   14000bb4c:	(bad)  
   14000bb4d:	inc    BYTE PTR [rax]
   14000bb4f:	add    bh,bh
   14000bb51:	inc    DWORD PTR [rdi]
   14000bb53:	(bad)  
   14000bb54:	(bad)  
   14000bb55:	inc    DWORD PTR [rdi-0x38000001]
   14000bb5b:	(bad)  
   14000bb5c:	(bad)  
   14000bb5d:	jmp    rdi
   14000bb5f:	jmp    FWORD PTR [rax]
   14000bb61:	add    BYTE PTR [rax],al
   14000bb63:	add    BYTE PTR [rax],bl
   14000bb65:	add    BYTE PTR [rax],al
   14000bb67:	add    BYTE PTR [rax],dh
   14000bb69:	add    BYTE PTR [rax],al
   14000bb6b:	add    BYTE PTR [rcx],al
   14000bb6d:	add    BYTE PTR [rax],cl
   14000bb6f:	add    BYTE PTR [rax],al
   14000bb71:	add    BYTE PTR [rax],al
   14000bb73:	add    BYTE PTR [rax+0x2],al
	...
   14000bb7e:	add    BYTE PTR [rax],al
   14000bb80:	add    BYTE PTR [rcx],al
   14000bb82:	add    BYTE PTR [rax],al
   14000bb84:	add    BYTE PTR [rcx],al
   14000bb86:	add    BYTE PTR [rax],al
   14000bb88:	add    BYTE PTR [rax],al
   14000bb8a:	add    BYTE PTR [rax],al
   14000bb8c:	js     0x14000bc07
   14000bb8e:	jbe    0x14000bb90
   14000bb90:	xchg   ecx,eax
   14000bb91:	pop    rdi
   14000bb92:	or     al,0x0
   14000bb94:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bb95:	data16 (bad) 
   14000bb97:	add    BYTE PTR [rsp+rbp*2+0x72af0018],ah
   14000bb9e:	and    al,BYTE PTR [rax]
   14000bba0:	mov    dl,0x76
   14000bba2:	add    BYTE PTR es:[rbx-0x48ffd688],dh
   14000bba9:	jl     0x14000bbd6
   14000bbab:	add    BYTE PTR [rdi-0x47ffd183],dh
   14000bbb1:	jle    0x14000bbe2
   14000bbb3:	add    bh,al
   14000bbb5:	jae    0x14000bbb7
   14000bbb7:	add    dh,cl
   14000bbb9:	jl     0x14000bbbb
   14000bbbb:	add    dh,dl
   14000bbbd:	xchg   BYTE PTR [rbx],al
   14000bbbf:	add    dh,dl
   14000bbc1:	test   DWORD PTR [rip+0x98fdf00],eax        # 0x149909ac7
   14000bbc7:	add    dh,bl
   14000bbc9:	xchg   ecx,eax
   14000bbca:	or     eax,0xe99e600
   14000bbcf:	add    bh,ah
   14000bbd1:	(bad)  
   14000bbd2:	adc    BYTE PTR [rax],al
   14000bbd4:	out    0x9e,al
   14000bbd6:	sbb    eax,DWORD PTR [rax]
   14000bbd8:	in     eax,dx
   14000bbd9:	movabs ds:0xaaf30017a3ee0013,al
   14000bbe2:	sbb    BYTE PTR [rax],al
   14000bbe4:	cmc    
   14000bbe5:	lods   al,BYTE PTR ds:[rsi]
   14000bbe6:	sbb    al,BYTE PTR [rax]
   14000bbe8:	clc    
   14000bbe9:	mov    al,0x19
   14000bbeb:	add    cl,ah
   14000bbed:	pushf  
   14000bbee:	and    eax,0x29aaef00
   14000bbf3:	add    ah,dh
   14000bbf5:	scas   al,BYTE PTR es:[rdi]
   14000bbf6:	and    al,0x0
   14000bbf8:	clc    
   14000bbf9:	mov    dl,0x22
   14000bbfb:	add    dl,bh
   14000bbfd:	mov    ah,0x23
   14000bbff:	add    cl,ch
   14000bc01:	test   al,0x32
   14000bc03:	add    dh,ch
   14000bc05:	mov    cl,0x39
   14000bc07:	add    ch,dh
   14000bc09:	mov    dh,0x37
   14000bc0b:	add    bl,bh
   14000bc0d:	mov    ebx,0xb8f90032
   14000bc12:	xor    al,0x0
   14000bc14:	lock mov dl,0x39
   14000bc17:	add    bl,dh
   14000bc19:	mov    bh,0x3c
   14000bc1b:	add    ch,dh
   14000bc1d:	mov    eax,0x9fbd003c
   14000bc22:	ins    DWORD PTR es:[rdi],dx
   14000bc23:	add    cl,bh
   14000bc25:	mov    ebp,0x99c30040
   14000bc2a:	movsxd eax,DWORD PTR [rax]
   14000bc2c:	enter  0x629c,0x0
   14000bc30:	shl    DWORD PTR [rbp+riz*2+0x6ea7d800],1
   14000bc37:	add    dl,bl
   14000bc39:	stos   BYTE PTR es:[rdi],al
   14000bc3a:	outs   dx,BYTE PTR ds:[rsi]
   14000bc3b:	add    ah,bl
   14000bc3d:	stos   DWORD PTR es:[rdi],eax
   14000bc3e:	outs   dx,BYTE PTR ds:[rsi]
   14000bc3f:	add    bh,bl
   14000bc41:	scas   eax,DWORD PTR es:[rdi]
   14000bc42:	outs   dx,BYTE PTR ds:[rsi]
   14000bc43:	add    al,al
   14000bc45:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bc46:	jne    0x14000bc48
   14000bc48:	(bad)
   14000bc4b:	add    bh,dl
   14000bc4d:	scas   eax,DWORD PTR es:[rdi]
   14000bc4e:	jge    0x14000bc50
   14000bc50:	loopne 0x14000bc04
   14000bc52:	outs   dx,BYTE PTR ds:[rsi]
   14000bc53:	add    ch,ah
   14000bc55:	mov    dh,0x6f
   14000bc57:	add    cl,ch
   14000bc59:	mov    esp,0xbee80073
   14000bc5e:	jnp    0x14000bc60
   14000bc60:	sti    
   14000bc61:	rol    BYTE PTR [rdx+0x0],0xfb
   14000bc65:	rol    DWORD PTR [rax+rax*1-0x12],0xc0
   14000bc6a:	outs   dx,BYTE PTR ds:[rsi]
   14000bc6b:	add    dh,ch
   14000bc6d:	ret    0x70
   14000bc70:	out    dx,al
   14000bc71:	shl    DWORD PTR [rbp+0x0],0xf1
   14000bc75:	(bad)  
   14000bc76:	jno    0x14000bc78
   14000bc78:	cmc    
   14000bc79:	leave  
   14000bc7a:	je     0x14000bc7c
   14000bc7c:	repnz (bad) 
   14000bc7e:	js     0x14000bc80
   14000bc80:	cmc    
   14000bc81:	retf   
   14000bc82:	jnp    0x14000bc84
   14000bc84:	stc    
   14000bc85:	iret   
   14000bc86:	jl     0x14000bc88
   14000bc88:	sti    
   14000bc89:	shl    BYTE PTR [rbp+0x0],1
   14000bc8c:	jae    0x14000bd0c
   14000bc8e:	add    DWORD PTR [rax],0x47
   14000bc91:	jne    0x14000bc3e
   14000bc93:	add    BYTE PTR [rax-0x7a],dh
   14000bc96:	fwait
   14000bc97:	add    BYTE PTR [rdi-0x7d],ah
   14000bc9a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bc9b:	add    BYTE PTR [rax-0x5aff7a4a],ah
   14000bca1:	mov    ch,0x86
   14000bca3:	add    BYTE PTR [rbx-0x5cff7343],dh
   14000bca9:	mov    ch,0x9d
   14000bcab:	add    BYTE PTR [rcx-0x47ff4051],bl
   14000bcb1:	mov    cl,0xa1
   14000bcb3:	add    BYTE PTR [rdi-0x5eff5548],bh
   14000bcb9:	lods   al,BYTE PTR ds:[rsi]
   14000bcba:	mov    eax,0x84b5d700
   14000bcbf:	add    dl,bl
   14000bcc1:	mov    ch,0x82
   14000bcc3:	add    bh,bl
   14000bcc5:	mov    ch,0x82
   14000bcc7:	add    cl,bl
   14000bcc9:	mov    bh,0x87
   14000bccb:	add    bl,bl
   14000bccd:	mov    eax,0xb8dd0086
   14000bcd2:	test   BYTE PTR [rax],al
   14000bcd4:	fdiv   DWORD PTR [rsi-0x4727ff78]
   14000bcda:	mov    DWORD PTR [rax],eax
   14000bcdc:	fnstsw WORD PTR [rdx-0x4c3aff76]
   14000bce2:	xchg   edi,eax
   14000bce3:	add    cl,al
   14000bce5:	mov    esp,0xbddb0094
   14000bcea:	xchg   esi,eax
   14000bceb:	add    ah,bl
   14000bced:	mov    edi,0xcdaf0098
   14000bcf2:	xchg   edi,eax
   14000bcf3:	add    BYTE PTR [rbx+rcx*8-0x3f31ff61],dh
   14000bcfa:	xchg   ecx,eax
   14000bcfb:	add    ch,bl
   14000bcfd:	rcl    BYTE PTR [rax-0x623b2600],0x0
   14000bd04:	std    
   14000bd05:	(bad)  
   14000bd06:	xchg   BYTE PTR [rax],al
   14000bd08:	clc    
   14000bd09:	(bad)  
   14000bd0a:	mov    eax,DWORD PTR [rax]
   14000bd0c:	loope  0x14000bcd4
   14000bd0e:	sahf   
   14000bd0f:	add    dh,ah
   14000bd11:	rcr    BYTE PTR [rdi-0x522e3c00],1
   14000bd17:	add    dh,bl
   14000bd19:	shl    BYTE PTR [rbp-0x5e392000],cl
   14000bd1f:	add    al,ch
   14000bd21:	(bad)  
   14000bd22:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bd23:	add    al,ch
   14000bd25:	(bad)  
   14000bd26:	stos   BYTE PTR es:[rdi],al
   14000bd27:	add    cl,ch
   14000bd29:	xlat   BYTE PTR ds:[rbx]
   14000bd2a:	lods   eax,DWORD PTR ds:[rsi]
   14000bd2b:	add    dl,ch
   14000bd2d:	fsubr  DWORD PTR [rsi-0x4d322000]
   14000bd33:	add    ch,ah
   14000bd35:	int    0xb5
   14000bd37:	add    dl,ah
   14000bd39:	(bad)  
   14000bd3a:	mov    ch,0x0
   14000bd3c:	out    0xd6,al
   14000bd3e:	mov    ch,0x0
   14000bd40:	(bad)  
   14000bd41:	fnstenv [rcx-0x4a251500]
   14000bd47:	add    ah,ch
   14000bd49:	(bad)  [rax+rax*1+0xb5dcec]
   14000bd50:	out    0xd0,al
   14000bd52:	mov    ebx,0xb9ddec00
   14000bd57:	add    ch,ch
   14000bd59:	fidivr WORD PTR [rbp-0x411f1300]
   14000bd5f:	add    BYTE PTR [rsi-0x17ff1946],cl
   14000bd65:	(bad)  
   14000bd66:	rol    DWORD PTR [rax],0xeb
   14000bd69:	fld    st(1)
   14000bd6b:	add    ah,ch
   14000bd6d:	fld    st(3)
   14000bd6f:	add    dl,ch
   14000bd71:	fcmovnb st,st(4)
   14000bd73:	add    bl,ch
   14000bd75:	faddp  st(6),st
   14000bd77:	add    ch,ch
   14000bd79:	faddp  st(6),st
   14000bd7b:	add    dl,ah
   14000bd7d:	xlat   BYTE PTR ds:[rbx]
   14000bd7e:	enter  0xee00,0xdf
   14000bd82:	int    0x0
   14000bd84:	out    dx,al
   14000bd85:	loope  0x14000bd49
   14000bd87:	add    bh,ch
   14000bd89:	jrcxz  0x14000bd52
   14000bd8b:	add    dh,ah
   14000bd8d:	loop   0x14000bd5e
   14000bd8f:	add    bl,ch
   14000bd91:	loope  0x14000bd5e
   14000bd93:	add    al,ch
   14000bd95:	loop   0x14000bd65
   14000bd97:	add    bh,ch
   14000bd99:	loop   0x14000bd67
   14000bd9b:	add    ch,ch
   14000bd9d:	in     al,0xcc
   14000bd9f:	add    al,dh
   14000bda1:	loop   0x14000bd65
   14000bda3:	add    cl,dh
   14000bda5:	loop   0x14000bd6d
   14000bda7:	add    al,dh
   14000bda9:	in     al,0xc6
   14000bdab:	add    al,dh
   14000bdad:	jrcxz  0x14000bd78
   14000bdaf:	add    cl,dh
   14000bdb1:	in     eax,0xc9
   14000bdb3:	add    dl,dh
   14000bdb5:	call   0x129f4be88
   14000bdba:	iret   
   14000bdbb:	add    dh,ch
   14000bdbd:	in     eax,0xd0
   14000bdbf:	add    bl,ch
   14000bdc1:	out    0xd4,eax
   14000bdc3:	add    ch,ch
   14000bdc5:	call   0x128f3bea1
   14000bdca:	rol    BYTE PTR [rax],1
   14000bdcc:	hlt    
   14000bdcd:	(bad)  
   14000bdce:	rol    BYTE PTR [rax],cl
   14000bdd0:	hlt    
   14000bdd1:	(bad)  
   14000bdd2:	(bad)  
   14000bdd3:	add    ch,dh
   14000bdd5:	in     al,dx
   14000bdd6:	(bad)  
   14000bdd7:	add    al,bh
   14000bdd9:	in     eax,dx
   14000bdda:	rol    DWORD PTR [rax],1
   14000bddc:	stc    
   14000bddd:	out    dx,eax
   14000bdde:	xlat   BYTE PTR ds:[rbx]
   14000bddf:	add    cl,dh
   14000bde1:	jmp    0x12af4bebe
   14000bde6:	fadd   DWORD PTR [rax]
   14000bde8:	cmc    
   14000bde9:	in     eax,dx
   14000bdea:	fiadd  DWORD PTR [rax]
   14000bdec:	cmc    
   14000bded:	jmp    0x14000bdcc
   14000bdef:	add    dh,dh
   14000bdf1:	out    dx,al
   14000bdf2:	fld    QWORD PTR [rax]
   14000bdf4:	cli    
   14000bdf5:	icebp  
   14000bdf6:	fiadd  DWORD PTR [rax]
   14000bdf8:	stc    
   14000bdf9:	icebp  
   14000bdfa:	fld    QWORD PTR [rax]
   14000bdfc:	iret   
   14000bdfd:	jrcxz  0x14000bdef
   14000bdff:	add    dh,dh
   14000be01:	in     eax,dx
   14000be02:	loop   0x14000be04
   14000be04:	imul   ch
   14000be06:	call   0x12befb70b
   14000be0b:	add    cl,bh
   14000be0d:	out    dx,eax
   14000be0e:	in     eax,dx
   14000be0f:	add    bh,dh
   14000be11:	icebp  
   14000be12:	loopne 0x14000be14
   14000be14:	div    ecx
   14000be16:	in     al,0x0
   14000be18:	clc    
   14000be19:	repnz loop 0x14000be1c
   14000be1c:	cli    
   14000be1d:	hlt    
   14000be1e:	loop   0x14000be20
   14000be20:	cld    
   14000be21:	cmc    
   14000be22:	loop   0x14000be24
   14000be24:	cli    
   14000be25:	cmc    
   14000be26:	in     eax,0x0
   14000be28:	(bad)  
   14000be29:	clc    
   14000be2a:	out    0x0,eax
   14000be2c:	cli    
   14000be2d:	imul   cl
   14000be2f:	add    cl,bh
   14000be31:	icebp  
   14000be32:	out    dx,al
   14000be33:	add    dh,bh
   14000be35:	cli    
   14000be36:	(bad)  
   14000be37:	add    ch,bh
   14000be39:	stc    
   14000be3a:	in     eax,dx
   14000be3b:	add    ah,bh
   14000be3d:	hlt    
   14000be3e:	cmc    
   14000be3f:	add    dh,bh
   14000be41:	cli    
   14000be42:	repnz add bh,bh
   14000be45:	std    
   14000be46:	repz add bh,bh
   14000be49:	cld    
   14000be4a:	test   BYTE PTR [rax],0xfe
   14000be4d:	sti    
   14000be4e:	sti    
   14000be4f:	add    bh,bh
   14000be51:	(bad)  
   14000be52:	stc    
   14000be53:	add    bh,bh
   14000be55:	(bad)  
   14000be56:	inc    BYTE PTR [rax]
	...
   14000bf84:	(bad)  
   14000bf85:	(bad)  
   14000bf86:	inc    DWORD PTR [rax]
	...
   14000bfb8:	add    BYTE PTR [rdx],al
   14000bfba:	add    al,BYTE PTR [rdx]
   14000bfbc:	add    al,BYTE PTR [rdx]
   14000bfbe:	add    al,BYTE PTR [rdx]
   14000bfc0:	add    al,BYTE PTR [rdx]
   14000bfc2:	add    al,BYTE PTR [rdx]
   14000bfc4:	add    al,BYTE PTR [rdx]
   14000bfc6:	add    al,BYTE PTR [rdx]
   14000bfc8:	add    al,BYTE PTR [rdx]
   14000bfca:	add    al,BYTE PTR [rdx]
   14000bfcc:	add    al,BYTE PTR [rdx]
   14000bfce:	add    al,BYTE PTR [rax]
   14000bfd0:	add    BYTE PTR [rdx],al
   14000bfd2:	(bad)  
   14000bfd3:	(bad)  
   14000bfd4:	push   QWORD PTR [rax-0x4f4f4f50]
   14000bfda:	lods   al,BYTE PTR ds:[rsi]
   14000bfdb:	lods   al,BYTE PTR ds:[rsi]
   14000bfdc:	lods   al,BYTE PTR ds:[rsi]
   14000bfdd:	test   eax,0xa7a7a7a9
   14000bfe2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bfe3:	pushf  
   14000bfe4:	pushf  
   14000bfe5:	mov    al,0x2
   14000bfe7:	add    BYTE PTR [rax],al
   14000bfe9:	add    bh,bh
   14000bfeb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bfec:	(bad)  
   14000bfed:	(bad)  
   14000bfee:	(bad)  
   14000bfef:	xchg   ecx,eax
   14000bff0:	mov    WORD PTR [rdx+rcx*4+0x73758688],cs
   14000bff7:	jno    0x14000c06a
   14000bff9:	addr32 addr32 data16 (bad) 
   14000bffd:	xchg   esp,eax
   14000bffe:	add    al,BYTE PTR [rax]
   14000c000:	add    BYTE PTR [rdx],al
   14000c002:	jmp    FWORD PTR [rcx-0x65655c57]
   14000c008:	xchg   ecx,eax
   14000c009:	xchg   ecx,eax
   14000c00a:	xchg   ecx,eax
   14000c00b:	xchg   ecx,eax
   14000c00c:	mov    al,BYTE PTR [rsi+0x73737386]
   14000c012:	jno    0x14000c085
   14000c014:	xchg   sp,ax
   14000c016:	add    al,BYTE PTR [rax]
   14000c018:	add    BYTE PTR [rdx],al
   14000c01a:	(bad)  
   14000c01b:	jle    0x14000c071
   14000c01d:	push   rsp
   14000c01e:	push   rax
   14000c01f:	push   rax
   14000c020:	push   rax
   14000c021:	push   rsp
   14000c022:	push   rsp
   14000c023:	jns    0x14000bfb6
   14000c025:	mov    cl,BYTE PTR [rdx+0x71738688]
   14000c02b:	jno    0x14000c094
   14000c02d:	pushf  
   14000c02e:	add    al,BYTE PTR [rax]
   14000c030:	add    BYTE PTR [rdx],al
   14000c032:	call   FWORD PTR [rax+0x79]
   14000c035:	or     DWORD PTR [rsi+0x6a818f8f],0x58
   14000c03c:	or     DWORD PTR [rdx+rcx*4+0x79738888],0x71
   14000c044:	jno    0x14000bfe2
   14000c046:	add    al,BYTE PTR [rax]
   14000c048:	add    BYTE PTR [rdx],al
   14000c04a:	test   eax,0x5b477950
   14000c04f:	movsxd ebx,DWORD PTR [rdx+0x46]
   14000c052:	jge    0x14000c0a8
   14000c054:	jns    0x14000bfeb
   14000c056:	xchg   ecx,eax
   14000c057:	xchg   ecx,eax
   14000c058:	xchg   ecx,eax
   14000c059:	mov    cl,BYTE PTR [rax+0x29c7188]
   14000c05f:	add    BYTE PTR [rax],al
   14000c061:	add    ah,BYTE PTR [rcx+0x485c7e50]
   14000c067:	rex.R
   14000c068:	rex.RX push rdi
   14000c06a:	adc    DWORD PTR [rax-0x62],0xffffff9a
   14000c06e:	(bad)  
   14000c06f:	sub    DWORD PTR [rdx-0x7765656b],ebx
   14000c075:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c076:	add    al,BYTE PTR [rax]
   14000c078:	add    BYTE PTR [rdx],al
   14000c07a:	movabs eax,ds:0x834e5642494e7950
   14000c083:	push   rax
   14000c084:	jns    0x14000c0d3
   14000c086:	or     cl,BYTE PTR [rax]
   14000c088:	gs gs gs gs jno 0x14000c035
   14000c08e:	add    al,BYTE PTR [rax]
   14000c090:	add    BYTE PTR [rdx],al
   14000c092:	movabs eax,ds:0x8d5241769d4e8654
   14000c09b:	push   rsp
   14000c09c:	push   rsp
   14000c09d:	or     bh,BYTE PTR [rax]
   14000c09f:	or     bl,BYTE PTR [rdx-0x75656566]
   14000c0a5:	lods   al,BYTE PTR ds:[rsi]
   14000c0a6:	add    al,BYTE PTR [rax]
   14000c0a8:	add    BYTE PTR [rdx],al
   14000c0aa:	test   eax,0x4c5e8a50
   14000c0af:	rex.XB add DWORD PTR [r10-0x7d],edx
   14000c0b3:	sub    cl,BYTE PTR [rdx]
   14000c0b5:	cmp    al,0x3b
   14000c0b7:	or     ah,BYTE PTR [rbp+0x61]
   14000c0ba:	(bad)  
   14000c0bb:	gs jae 0x14000c06a
   14000c0be:	add    al,BYTE PTR [rax]
   14000c0c0:	add    BYTE PTR [rdx],al
   14000c0c2:	lods   eax,DWORD PTR ds:[rsi]
   14000c0c3:	push   rax
   14000c0c4:	(bad)  
   14000c0c5:	ins    DWORD PTR es:[rdi],dx
   14000c0c6:	rex.WXB
   14000c0c7:	rex.WX
   14000c0c8:	fs ins DWORD PTR es:[rdi],dx
   14000c0ca:	pop    rbp
   14000c0cb:	or     al,BYTE PTR [rax+0x18]
   14000c0ce:	cmp    al,0x8
   14000c0d0:	or     BYTE PTR [rdx],cl
   14000c0d2:	or     BYTE PTR [rax],cl
   14000c0d4:	or     cl,BYTE PTR [rdx]
   14000c0d6:	or     cl,BYTE PTR [rdx]
   14000c0d8:	add    BYTE PTR [rdx],al
   14000c0da:	jmp    FWORD PTR [rdx+0x50]
   14000c0dd:	push   rax
   14000c0de:	push   rsp
   14000c0df:	push   rax
   14000c0e0:	push   rsp
   14000c0e1:	sub    al,BYTE PTR [rsi]
   14000c0e3:	pop    rdi
   14000c0e4:	sbb    eax,0x3d3e3f18
   14000c0e9:	cmp    dh,BYTE PTR [rbx+rsi*1]
   14000c0ec:	cs sub eax,0x200082b
   14000c0f2:	jmp    QWORD PTR [rcx+0x6a727277]
   14000c0f8:	xor    DWORD PTR [rsi],eax
   14000c0fa:	(bad)  
   14000c0fb:	(bad)  
   14000c0fc:	(bad)  
   14000c0fd:	and    DWORD PTR [rip+0x10121416],ebx        # 0x15012d519
   14000c103:	(bad)  
   14000c104:	or     al,0xb
   14000c106:	sub    eax,0xff020008
   14000c10b:	(bad)  
   14000c10c:	(bad)  
   14000c10d:	(bad)  
   14000c10e:	(bad)  
   14000c10f:	inc    DWORD PTR [rbx]
   14000c111:	cmp    BYTE PTR [rdi],bl
   14000c113:	and    al,0x27
   14000c115:	(bad)  
   14000c116:	(bad)  
   14000c117:	and    DWORD PTR [rbx],ebx
   14000c119:	adc    eax,0xc0e0f11
   14000c11e:	sub    eax,0x202000a
   14000c123:	add    al,BYTE PTR [rdx]
   14000c125:	add    al,BYTE PTR [rdx]
   14000c127:	add    al,BYTE PTR [rbx+rax*1]
   14000c12a:	cmp    bl,BYTE PTR [rdi]
   14000c12c:	and    eax,0x27272727
   14000c131:	and    al,0x1b
   14000c133:	adc    edx,DWORD PTR [rax]
   14000c135:	(bad)  
   14000c136:	or     al,BYTE PTR cs:[rax]
	...
   14000c141:	add    BYTE PTR [rbx],al
   14000c143:	cmp    BYTE PTR ds:0x27373727,ah
   14000c14a:	and    eax,0x35191e1f
   14000c14f:	or     BYTE PTR [rax],al
	...
   14000c159:	add    BYTE PTR [rax],al
   14000c15b:	add    edi,DWORD PTR [rax]
   14000c15d:	and    al,0x25
   14000c15f:	(bad)  
   14000c160:	(bad)  
   14000c161:	(bad)  
   14000c162:	(bad)  
   14000c163:	(bad)  
   14000c164:	or     BYTE PTR [rdi],al
   14000c166:	or     BYTE PTR [rdx],cl
	...
   14000c174:	add    edi,DWORD PTR [rax]
   14000c176:	and    al,0x5
	...
   14000c18c:	add    BYTE PTR [rbx],al
   14000c18e:	cmp    BYTE PTR [rsi],al
	...
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	add    eax,DWORD PTR [rsi]
	...
   14000c1bc:	add    BYTE PTR [rax],al
   14000c1be:	add    BYTE PTR [rsi],al
	...
   14000c1c8:	(bad)  
   14000c1c9:	(bad)  
   14000c1ca:	inc    DWORD PTR [rax]
   14000c1cc:	(bad)  
   14000c1cd:	(bad)  
   14000c1ce:	inc    DWORD PTR [rax]
   14000c1d0:	add    BYTE PTR [rax],0x1
   14000c1d3:	add    BYTE PTR [rax-0x7fffff00],al
   14000c1d9:	add    BYTE PTR [rcx],al
   14000c1db:	add    BYTE PTR [rax-0x7fffff00],al
   14000c1e1:	add    BYTE PTR [rcx],al
   14000c1e3:	add    BYTE PTR [rax-0x7fffff00],al
   14000c1e9:	add    BYTE PTR [rcx],al
   14000c1eb:	add    BYTE PTR [rax-0x7fffff00],al
   14000c1f1:	add    BYTE PTR [rcx],al
   14000c1f3:	add    BYTE PTR [rax-0x7fffff00],al
   14000c1f9:	add    BYTE PTR [rcx],al
   14000c1fb:	add    BYTE PTR [rax-0x80000000],al
   14000c201:	add    BYTE PTR [rax],al
   14000c203:	add    BYTE PTR [rax-0x80000000],al
   14000c209:	add    BYTE PTR [rax],al
   14000c20b:	add    BYTE PTR [rax-0x1000000],al
   14000c211:	rol    BYTE PTR [rax],0x0
   14000c214:	jmp    rax
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	push   rax
   14000c21a:	inc    DWORD PTR [rax]
   14000c21c:	(bad)  
   14000c21d:	clc    
   14000c21e:	inc    DWORD PTR [rax]
   14000c220:	(bad)  
   14000c221:	cld    
   14000c222:	inc    DWORD PTR [rax]
   14000c224:	(bad)  
   14000c225:	(bad)  
   14000c226:	inc    DWORD PTR [rax]
   14000c228:	sub    BYTE PTR [rax],al
   14000c22a:	add    BYTE PTR [rax],al
   14000c22c:	adc    BYTE PTR [rax],al
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	and    BYTE PTR [rax],al
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	add    DWORD PTR [rax],eax
   14000c236:	or     BYTE PTR [rax],al
   14000c238:	add    BYTE PTR [rax],al
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	add    BYTE PTR [rcx],al
	...
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	add    BYTE PTR [rcx],al
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	add    BYTE PTR [rcx],al
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	add    BYTE PTR [rax],al
   14000c252:	add    BYTE PTR [rax],al
   14000c254:	xchg   ecx,eax
   14000c255:	pop    rdi
   14000c256:	or     al,0x0
   14000c258:	xchg   esp,eax
   14000c259:	fs adc al,0x0
   14000c25c:	scas   eax,DWORD PTR es:[rdi]
   14000c25d:	ins    BYTE PTR es:[rdi],dx
   14000c25e:	adc    al,0x0
   14000c260:	mov    edx,0xbc001874
   14000c265:	js     0x14000c285
   14000c267:	add    BYTE PTR [rbp-0x61ffd990],bl
   14000c26d:	jb     0x14000c298
   14000c26f:	add    BYTE PTR [rdi-0x40ffd989],ch
   14000c275:	jnp    0x14000c297
   14000c277:	add    BYTE PTR [rbp-0x73],dh
   14000c27a:	jns    0x14000c27c
   14000c27c:	mov    ebx,0xbe002f80
   14000c281:	(bad)  
   14000c282:	cs add dl,ah
   14000c285:	xchg   esi,eax
   14000c286:	(bad)  
   14000c287:	add    bh,ch
   14000c289:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c28a:	(bad)  
   14000c28b:	add    bh,ch
   14000c28d:	mov    bl,0x3a
   14000c28f:	add    al,bh
   14000c291:	mov    dh,0x31
   14000c293:	add    bl,bh
   14000c295:	mov    ecx,0xb4f10031
   14000c29a:	cmp    al,BYTE PTR [rax]
   14000c29c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c29d:	mov    BYTE PTR [rsi+0x0],dl
   14000c2a0:	mov    esi,0xbb0070a0
   14000c2a5:	mov    ah,0x7e
   14000c2a7:	add    al,bh
   14000c2a9:	mov    ebp,0xb9f30041
   14000c2ae:	rex.WB add r10b,cl
   14000c2b1:	movabs al,ds:0xa1cc0061a5ce0063
   14000c2ba:	data16 add dl,al
   14000c2bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c2be:	js     0x14000c2c0
   14000c2c0:	jrcxz  0x14000c279
   14000c2c2:	jns    0x14000c2c4
   14000c2c4:	jmp    0x12a013d87
   14000c2c9:	mov    edi,0xc0fc007c
   14000c2ce:	add    spl,dil
   14000c2d1:	rol    DWORD PTR [rax+rax*1-0x5],0xc4
   14000c2d6:	push   rbx
   14000c2d7:	add    ch,ch
   14000c2d9:	(bad)  
   14000c2dc:	cld    
   14000c2dd:	sar    DWORD PTR [rsi+0x0],cl
   14000c2e0:	ja     0x14000c274
   14000c2e2:	pop    QWORD PTR [rax]
   14000c2e4:	jg     0x14000c273
   14000c2e6:	xchg   edi,eax
   14000c2e7:	add    BYTE PTR [rcx-0x4bff7148],ah
   14000c2ed:	mov    ebx,0xb9a6008c
   14000c2f2:	pushf  
   14000c2f3:	add    BYTE PTR [rbx-0x22ff444c],ch
   14000c2f9:	mov    edi,0xc0cd0097
   14000c2fe:	nop
   14000c2ff:	add    ah,al
   14000c301:	(bad)  
   14000c302:	(bad)  
   14000c303:	add    dh,dl
   14000c305:	ret    
   14000c306:	popf   
   14000c307:	add    ch,bl
   14000c309:	rcr    BYTE PTR [rdx-0x643a2400],0x0
   14000c310:	call   0x1310145da
   14000c315:	enter  0x80,0xf1
   14000c319:	int    0x8c
   14000c31b:	add    bl,bh
   14000c31d:	(bad)  
   14000c31e:	mov    al,BYTE PTR [rax]
   14000c320:	clc    
   14000c321:	xlat   BYTE PTR ds:[rbx]
   14000c322:	xchg   edi,eax
   14000c323:	add    ah,bh
   14000c325:	ficom  DWORD PTR [rbx-0x47302700]
   14000c32b:	add    cl,ch
   14000c32d:	(bad)  
   14000c32e:	stos   DWORD PTR es:[rdi],eax
   14000c32f:	add    cl,ch
   14000c331:	xlat   BYTE PTR ds:[rbx]
   14000c332:	lods   eax,DWORD PTR ds:[rsi]
   14000c333:	add    dl,ch
   14000c335:	fsubr  DWORD PTR [rdi-0x4c302000]
   14000c33b:	add    bl,ch
   14000c33d:	fidiv  DWORD PTR [rbx-0x4a241500]
   14000c343:	add    ah,ch
   14000c345:	fnstsw WORD PTR [rdx-0x401f1200]
   14000c34b:	add    BYTE PTR [rcx+rsi*4-0x2b34ff35],dl
   14000c352:	fld    QWORD PTR [rax]
   14000c354:	jmp    0x12e018d37
   14000c359:	loope  0x14000c31c
   14000c35b:	add    al,dh
   14000c35d:	in     al,0xc6
   14000c35f:	add    dl,dh
   14000c361:	out    0xcd,eax
   14000c363:	add    dl,dh
   14000c365:	call   0x12af3c438
   14000c36a:	rol    BYTE PTR [rax],cl
   14000c36c:	repz call 0x12df5c449
   14000c372:	fadd   DWORD PTR [rax]
   14000c374:	div    eax
   14000c376:	fild   WORD PTR [rax]
   14000c378:	div    eax
   14000c37a:	loopne 0x14000c37c
   14000c37c:	clc    
   14000c37d:	repz in eax,0x0
   14000c380:	cli    
   14000c381:	imul   ah
   14000c383:	add    bl,bh
   14000c385:	stc    
   14000c386:	test   BYTE PTR [rax],0xfe
   14000c389:	std    
   14000c38a:	sti    
   14000c38b:	add    dh,bh
   14000c38d:	(bad)  
   14000c38e:	inc    BYTE PTR [rax]
	...
   14000c64c:	(bad)  
   14000c64d:	(bad)  
   14000c64e:	inc    DWORD PTR [rax]
   14000c650:	add    al,BYTE PTR [rcx]
   14000c652:	add    DWORD PTR [rcx],eax
   14000c654:	add    DWORD PTR [rcx],eax
   14000c656:	add    DWORD PTR [rcx],eax
   14000c658:	add    DWORD PTR [rcx],eax
   14000c65a:	add    DWORD PTR [rcx],eax
   14000c65c:	add    DWORD PTR [rcx],eax
   14000c65e:	add    DWORD PTR [rdx],eax
   14000c660:	add    edi,edi
   14000c662:	rex.WR
   14000c663:	rex.WXB
   14000c664:	rex.WX
   14000c665:	rex.W
   14000c666:	rex.RX
   14000c667:	rex.RB
   14000c668:	rex.XB
   14000c669:	rex.X cmp eax,0x3737393c
   14000c66f:	add    al,BYTE PTR [rcx]
   14000c671:	dec    DWORD PTR [rbx+rcx*2+0x4a]
   14000c675:	rex.W
   14000c676:	rex.RX
   14000c677:	rex.RB
   14000c678:	rex.XB
   14000c679:	rex.X cmp eax,0x3c37393c
   14000c67f:	add    al,BYTE PTR [rcx]
   14000c681:	inc    DWORD PTR [rsi+0x19]
   14000c684:	sbb    DWORD PTR [rcx],ebx
   14000c686:	sbb    DWORD PTR [rsi+0x45],eax
   14000c689:	rex.XB
   14000c68a:	ds cmp eax,0x23c373c
   14000c690:	add    edi,edi
   14000c692:	sbb    DWORD PTR [rax+rbp*1],ebp
   14000c695:	es (bad) 
   14000c697:	sbb    DWORD PTR [rsi+0x45],eax
   14000c69a:	rex.XB
   14000c69b:	ds cmp eax,0x1023c3c
   14000c6a1:	call   FWORD PTR [rcx]
   14000c6a3:	sub    esp,DWORD PTR [rdx+rcx*1]
   14000c6a6:	adc    eax,0x2f2f4819
   14000c6ab:	(bad)  
   14000c6ac:	(bad)  
   14000c6ad:	(bad)  
   14000c6ae:	cmp    al,0x2
   14000c6b0:	add    edi,edi
   14000c6b2:	sbb    DWORD PTR [rdx],edi
   14000c6b4:	(bad)  
   14000c6b5:	and    eax,0x4849192d
   14000c6ba:	rex.RX
   14000c6bb:	rex.RB
   14000c6bc:	rex.XB
   14000c6bd:	ds add al,BYTE PTR ds:[rcx]
   14000c6c1:	call   FWORD PTR [rcx]
   14000c6c3:	rex.B
   14000c6c4:	rex sub DWORD PTR [rsi],esi
   14000c6c7:	sbb    DWORD PTR [rbx+0x19],ecx
   14000c6ca:	or     ebp,DWORD PTR [rdi]
   14000c6cc:	(bad)  
   14000c6cd:	(bad)  
   14000c6ce:	add    al,BYTE PTR ds:[rcx]
   14000c6d1:	inc    DWORD PTR [rsi+0x19]
   14000c6d4:	sbb    DWORD PTR [rcx],ebx
   14000c6d6:	sbb    DWORD PTR [rsi+0x2a],eax
   14000c6d9:	or     DWORD PTR [rbx],ecx
   14000c6db:	dec    DWORD PTR [rsi-0x1]
   14000c6de:	rex.WRX add r8b,BYTE PTR [rcx]
   14000c6e1:	(bad)  
   14000c6e2:	(bad)  
   14000c6e3:	(bad)  
   14000c6e4:	(bad)  
   14000c6e5:	(bad)  
   14000c6e6:	jmp    FWORD PTR [rdx]
   14000c6e8:	or     DWORD PTR [rbx],esp
   14000c6ea:	or     ecx,DWORD PTR [rbx+rcx*1]
   14000c6ed:	or     al,0xb
   14000c6ef:	or     BYTE PTR [rdx],al
   14000c6f1:	rex.WRX (bad) 
   14000c6f3:	(bad)  
   14000c6f4:	(bad)  
   14000c6f5:	jmp    FWORD PTR [rdx]
   14000c6f7:	or     DWORD PTR [rip+0x31343311],esi        # 0x17134fa0e
   14000c6fd:	sbb    eax,0x2020b1c
   14000c702:	add    DWORD PTR [rcx],eax
   14000c704:	add    DWORD PTR [rdx],eax
   14000c706:	add    al,0x30
   14000c708:	movhps xmm3,QWORD PTR [rdi]
   14000c70b:	adc    BYTE PTR [rsi],cl
   14000c70d:	or     eax,0xb1d
   14000c712:	add    BYTE PTR [rax],al
   14000c714:	add    BYTE PTR [rax],al
   14000c716:	add    BYTE PTR [rbx],al
   14000c718:	and    dl,BYTE PTR [rdx]
   14000c71a:	(bad)  
   14000c71b:	and    BYTE PTR [rcx],ah
   14000c71d:	(bad)  
   14000c71e:	xor    cl,BYTE PTR [rbx]
	...
   14000c728:	add    esp,DWORD PTR [rdx]
   14000c72a:	add    eax,0x5050505
   14000c72f:	add    eax,0x0
   14000c734:	add    BYTE PTR [rax],al
   14000c736:	add    BYTE PTR [rax],al
   14000c738:	add    BYTE PTR [rbx],al
   14000c73a:	add    eax,0x0
	...
   14000c747:	add    BYTE PTR [rax],al
   14000c749:	add    BYTE PTR [rbx],al
	...
   14000c77f:	add    dh,bh
   14000c781:	add    BYTE PTR [rax],al
   14000c783:	add    bh,bh
   14000c785:	add    BYTE PTR [rax],al
   14000c787:	add    bh,bh
   14000c789:	lahf   
   14000c78a:	add    BYTE PTR [rax],al
   14000c78c:	(bad)  
   14000c78d:	fild   WORD PTR [rax]
   14000c78f:	add    BYTE PTR [rcx+0xd474e50],cl
   14000c795:	or     bl,BYTE PTR [rdx]
   14000c797:	or     al,BYTE PTR [rax]
   14000c799:	add    BYTE PTR [rax],al
   14000c79b:	or     eax,0x52444849
   14000c7a0:	add    BYTE PTR [rax],al
   14000c7a2:	add    DWORD PTR [rax],eax
   14000c7a4:	add    BYTE PTR [rax],al
   14000c7a6:	add    DWORD PTR [rax],eax
   14000c7a8:	or     BYTE PTR [rsi],al
   14000c7aa:	add    BYTE PTR [rax],al
   14000c7ac:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14000c7b0:	data16 add BYTE PTR [rax],al
   14000c7b3:	and    BYTE PTR [rax],al
   14000c7b5:	rex.WB
   14000c7b6:	rex.R
   14000c7b7:	push   r12
   14000c7b9:	js     0x14000c757
   14000c7bb:	in     eax,dx
   14000c7bc:	popf   
   14000c7bd:	jns    0x14000c74f
   14000c7bf:	and    eax,0xbfdf5dc9
   14000c7c4:	cdq    
   14000c7c5:	pop    rcx
   14000c7c6:	cmc    
   14000c7c7:	(bad)  
   14000c7c8:	out    dx,al
   14000c7c9:	sahf   
   14000c7ca:	ds out 0xd8,al
   14000c7cd:	popf   
   14000c7ce:	movsxd esi,DWORD PTR [rdi+0x66]
   14000c7d1:	jbe    0x14000c829
   14000c7d3:	mov    ebx,0x42b56ad2
   14000c7d8:	mov    esi,DWORD PTR [rdx+rdx*4-0x5fea5150]
   14000c7df:	or     ecx,DWORD PTR [rcx]
   14000c7e1:	fs pop rbp
   14000c7e3:	or     BYTE PTR [rax+rax*8],ah
   14000c7e6:	and    BYTE PTR [rax+rbx*8+0x61],al
   14000c7ea:	movsxd esp,DWORD PTR [rdx]
   14000c7ec:	or     al,0x82
   14000c7ee:	mov    al,0xc1
   14000c7f0:	pop    rax
   14000c7f1:	(bad)  
   14000c7f2:	test   BYTE PTR [r9+0x18],dl
   14000c7f6:	retf   
   14000c7f7:	adc    DWORD PTR [rsi],ecx
   14000c7f9:	adc    ebx,DWORD PTR [rsi+rax*4]
   14000c7fc:	loopne 0x14000c874
   14000c7fe:	sbb    BYTE PTR [rbx-0x6dfeaa00],bl
   14000c804:	nop
   14000c805:	(bad)  
   14000c806:	and    BYTE PTR [r9+0x65],r15b
   14000c80a:	sbb    eax,0xed21ed2b
   14000c80f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c810:	pop    rbp
   14000c811:	int    0x1e
   14000c813:	jae    0x14000c80a
   14000c815:	hlt    
   14000c816:	int3   
   14000c817:	hlt    
   14000c818:	icebp  
   14000c819:	scas   al,BYTE PTR es:[rdi]
   14000c81a:	stos   BYTE PTR es:[rdi],al
   14000c81b:	retf   0xf9fc
   14000c81e:	(bad)  
   14000c81f:	int3   
   14000c820:	lods   al,BYTE PTR ds:[rsi]
   14000c821:	retf   0x5e3a
   14000c824:	ja     0x14000c7f5
   14000c826:	in     al,dx
   14000c827:	xor    DWORD PTR [rdi+0x37899f7e],eax
   14000c82d:	out    dx,eax
   14000c82e:	mov    ebp,0x557aacac
   14000c833:	(bad)  
   14000c834:	stc    
   14000c835:	std    
   14000c836:	in     eax,0x2f
   14000c838:	xor    edi,DWORD PTR [rdi-0x67]
   14000c83b:	add    eax,0x30c30c30
   14000c840:	or     al,0xc3
   14000c842:	xor    BYTE PTR [rbx+rax*8],cl
   14000c845:	xor    BYTE PTR [rbx+rax*8],cl
   14000c848:	xor    BYTE PTR [rbx+rax*8],cl
   14000c84b:	xor    BYTE PTR [rbx+rax*8],cl
   14000c84e:	xor    BYTE PTR [rbx+rax*8],cl
   14000c851:	xor    BYTE PTR [rbx+rax*8],cl
   14000c854:	xor    BYTE PTR [rbx+rax*8],cl
   14000c857:	xor    BYTE PTR [rbx+rax*8],cl
   14000c85a:	xor    BYTE PTR [rbx+rax*8],cl
   14000c85d:	xor    BYTE PTR [rbx+rax*8],cl
   14000c860:	xor    BYTE PTR [rbx+rax*8],cl
   14000c863:	xor    BYTE PTR [rbx+rax*8],cl
   14000c866:	xor    BYTE PTR [rbx+rax*8],cl
   14000c869:	xor    BYTE PTR [rbx+rax*8],cl
   14000c86c:	xor    BYTE PTR [rbx+rax*8],cl
   14000c86f:	xor    BYTE PTR [rbx+rax*8],cl
   14000c872:	xor    BYTE PTR [rbx+rax*8],cl
   14000c875:	xor    BYTE PTR [rbx+rax*8],cl
   14000c878:	xor    BYTE PTR [rbx+rax*8],cl
   14000c87b:	xor    BYTE PTR [rbx+rax*8],cl
   14000c87e:	xor    BYTE PTR [rbx+rax*8],cl
   14000c881:	xor    BYTE PTR [rbx+rax*8],cl
   14000c884:	xor    BYTE PTR [rbx+rax*8],cl
   14000c887:	xor    BYTE PTR [rbx+rax*8],cl
   14000c88a:	xor    BYTE PTR [rbx+rax*8],cl
   14000c88d:	xor    BYTE PTR [rbx+rax*8],cl
   14000c890:	xor    BYTE PTR [rbx+rax*8],cl
   14000c893:	xor    BYTE PTR [rbx+rax*8],cl
   14000c896:	xor    BYTE PTR [rbx+rax*8],cl
   14000c899:	xor    BYTE PTR [rbx+rax*8],cl
   14000c89c:	xor    BYTE PTR [rbx+rax*8],cl
   14000c89f:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8a2:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8a5:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8a8:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8ab:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8ae:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8b1:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8b4:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8b7:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8ba:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8bd:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8c0:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8c3:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8c6:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8c9:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8cc:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8cf:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8d2:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8d5:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8d8:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8db:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8de:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8e1:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8e4:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8e7:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8ea:	xor    BYTE PTR [rbx+rax*8],cl
   14000c8ed:	xor    BYTE PTR [rbx+0x10],bl
   14000c8f0:	add    edx,DWORD PTR [rax]
   14000c8f2:	(bad)  
   14000c8f3:	sti    
   14000c8f4:	and    al,0x2e
   14000c8f6:	addr32 (bad) 
   14000c8f8:	(bad)
   14000c8fb:	xchg   BYTE PTR [rcx-0xa8251e0],bh
   14000c901:	in     eax,dx
   14000c902:	cmp    ebx,esi
   14000c904:	std    
   14000c905:	lahf   
   14000c906:	inc    BYTE PTR [rdx-0x31]
   14000c909:	out    dx,al
   14000c90a:	fbld   TBYTE PTR [rcx-0x72]
   14000c90d:	fidiv  WORD PTR [rbp-0x69]
   14000c910:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000c912:	mov    edi,DWORD PTR [rdx+0x4e]
   14000c915:	xchg   edi,eax
   14000c916:	and    edx,esi
   14000c918:	(bad)  
   14000c919:	lahf   
   14000c91a:	add    bl,al
   14000c91c:	pushf  
   14000c91d:	(bad)  
   14000c91e:	xlat   BYTE PTR ds:[rbx]
   14000c91f:	jge    0x14000c910
   14000c921:	cmp    esi,DWORD PTR [rsi-0x3]
   14000c924:	loopne 0x14000c8d5
   14000c926:	jl     0x14000c99a
   14000c928:	loope  0x14000c8e4
   14000c92a:	sbb    ebx,DWORD PTR [rsi-0x28]
   14000c92d:	(bad)  
   14000c92e:	fcomip st,st(5)
   14000c930:	sbb    al,BYTE PTR [rax]
   14000c932:	jnp    0x14000c935
   14000c934:	rex.R (bad) 
   14000c936:	sti    
   14000c937:	mov    ah,0x2e
   14000c939:	rex.RXB clc 
   14000c93b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c93c:	xor    DWORD PTR [rdi+0x7f1bf115],edx
   14000c942:	stc    
   14000c943:	movabs ds:0x8b999a9fcaf05e3b,eax
   14000c94c:	and    ebp,DWORD PTR [rcx]
   14000c94e:	or     DWORD PTR [rsi+rbx*8],esi
   14000c951:	call   0x1200ea158
   14000c956:	xor    al,0x80
   14000c958:	in     al,0x22
   14000c95a:	lahf   
   14000c95b:	fisub  WORD PTR [rbp+0x7]
   14000c95e:	sbb    eax,DWORD PTR [rax]
   14000c960:	out    0xf2,al
   14000c962:	and    dh,bl
   14000c964:	mov    ebp,0x7feefe37
   14000c969:	icebp  
   14000c96a:	retf   
   14000c96b:	rex.WXB fcomip st,st(1)
   14000c96e:	cmp    eax,0x5f4ec1f
   14000c973:	fs and al,0x0
   14000c976:	and    DWORD PTR [rcx],eax
   14000c978:	and    al,BYTE PTR [rip+0x60b80bee]        # 0x1a0b8d56c
   14000c97e:	fadd   DWORD PTR [rax]
   14000c980:	xor    BYTE PTR [rdi+0x7e6f3b3e],dl
   14000c986:	loope  0x14000c916
   14000c988:	ja     0x14000ca08
   14000c98a:	in     al,0x8f
   14000c98c:	cli    
   14000c98d:	push   rdi
   14000c98e:	in     eax,dx
   14000c98f:	mov    ecx,0x841313a5
   14000c994:	adc    dl,BYTE PTR [rax]
   14000c996:	rex.X
   14000c997:	rex
   14000c998:	adc    r8b,dl
   14000c99b:	ss (bad) 
   14000c99d:	mov    ecx,0xb0817fed
   14000c9a2:	add    DWORD PTR [rax+0x2e],esp
   14000c9a5:	ins    DWORD PTR es:[rdi],dx
   14000c9a6:	outs   dx,BYTE PTR ds:[rsi]
   14000c9a7:	std    
   14000c9a8:	xchg   ecx,eax
   14000c9a9:	imul   DWORD PTR [rdi]
   14000c9ab:	jge    0x14000c984
   14000c9ad:	movd   DWORD PTR [rdi+rsi*4+0x2b4f63b8],mm6
   14000c9b5:	rex or DWORD PTR es:[rax],ecx
   14000c9b9:	and    DWORD PTR [rcx],esp
   14000c9bb:	xchg   esp,eax
   14000c9bc:	test   BYTE PTR [rdx+rax*1],dl
   14000c9bf:	stos   BYTE PTR es:[rdi],al
   14000c9c0:	cmp    edi,DWORD PTR [rbx]
   14000c9c2:	add    ebp,esi
   14000c9c4:	retf   
   14000c9c5:	mov    edx,0x3000d860
   14000c9ca:	xchg   edi,eax
   14000c9cb:	es std 
   14000c9cd:	imul   edx,DWORD PTR [rdi],0x3a
   14000c9d0:	mov    bh,0x7f
   14000c9d2:	lock xlat BYTE PTR ds:[rbx]
   14000c9d4:	jbe    0x14000c992
   14000c9d6:	lock xor eax,0x5f6e81f
   14000c9dc:	xchg   esp,eax
   14000c9dd:	adc    ah,BYTE PTR [rax]
   14000c9df:	and    DWORD PTR [rax],esp
   14000c9e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c9e2:	(bad)  
   14000c9e3:	nop
   14000c9e4:	add    dl,BYTE PTR [rdx+0x46]
   14000c9e7:	adc    BYTE PTR [rcx+0x3b756a82],dl
   14000c9ed:	mov    al,0xa3
   14000c9ef:	pop    rcx
   14000c9f0:	fadd   QWORD PTR [rax+rdi*4]
   14000c9f3:	add    al,bl
   14000c9f5:	add    BYTE PTR [rax],dh
   14000c9f7:	xchg   edi,eax
   14000c9f8:	(bad)  
   14000c9f9:	icebp  
   14000c9fa:	out    dx,al
   14000c9fb:	xor    DWORD PTR [rbx],0x6f
   14000c9fe:	jmp    QWORD PTR [rbp-0xbc26221]
   14000ca04:	(bad)  
   14000ca05:	xlat   BYTE PTR ds:[rbx]
   14000ca06:	jne    0x14000ca63
   14000ca08:	mov    dh,0xd6
   14000ca0a:	xchg   DWORD PTR [rax-0x680a3170],edx
   14000ca10:	push   rdx
   14000ca11:	rex.B
   14000ca12:	rex.R sar BYTE PTR [rsi+0x3d60883],cl
   14000ca19:	(bad)  
   14000ca1a:	(bad)  
   14000ca1b:	loopne 0x14000ca1f
   14000ca1d:	(bad)  
   14000ca1e:	add    eax,eax
   14000ca20:	pop    rsp
   14000ca21:	pop    rdx
   14000ca22:	sub    al,0xdd
   14000ca24:	je     0x14000ca8a
   14000ca26:	(bad)  
   14000ca27:	mov    ebx,0x666fe57e
   14000ca2c:	imul   ah
   14000ca2e:	cmp    al,0xd2
   14000ca30:	(bad)  
   14000ca31:	pop    rsp
   14000ca32:	jle    0x14000c9dd
   14000ca34:	and    al,0x84
   14000ca36:	adc    al,0x10
   14000ca38:	xor    al,BYTE PTR [rdx-0x356ffd70]
   14000ca3e:	add    esp,DWORD PTR ss:[rbx+rbp*8]
   14000ca42:	(bad)  
   14000ca43:	jmp    0xf980d108
   14000ca48:	je     0x14000cac2
   14000ca4a:	leave  
   14000ca4b:	sti    
   14000ca4c:	jg     0x14000cac6
   14000ca4e:	loope  0x14000ca0b
   14000ca50:	fdivrp st(3),st
   14000ca52:	sar    esi,1
   14000ca54:	loop   0x14000ca52
   14000ca56:	(bad)  
   14000ca57:	lods   eax,DWORD PTR ds:[rsi]
   14000ca58:	xchg   esi,eax
   14000ca59:	mov    al,0x42
   14000ca5b:	ja     0x14000ca4a
   14000ca5d:	std    
   14000ca5e:	pop    rsp
   14000ca5f:	cld    
   14000ca60:	xchg   ecx,eax
   14000ca61:	add    al,0x84
   14000ca63:	adc    BYTE PTR [rdx+0x36],0x1d
   14000ca67:	(bad)  
   14000ca68:	cmp    eax,0x1b03a7ff
   14000ca6d:	add    dh,ah
   14000ca6f:	adc    ah,BYTE PTR [rax]
   14000ca71:	mov    fs,WORD PTR [rdx+0xfabfed7]
   14000ca77:	sub    eax,0x7e9fe2be
   14000ca7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ca7d:	frstor [rsi]
   14000ca7f:	(bad)  [rdx+0x84a4805]
   14000ca85:	sub    DWORD PTR [rcx],eax
   14000ca87:	jmp    0xfbffc867
   14000ca8c:	test   BYTE PTR [rdx+0x1df7e6b6],dl
   14000ca92:	or     esp,0x8006c385
   14000ca98:	mov    ecx,0xa585c8b8
   14000ca9d:	fincstp 
   14000ca9f:	call   rdi
   14000caa1:	(bad)  
   14000caa2:	call   0x10de14804
   14000caa7:	mov    ebp,0x4a4202e
   14000caac:	rex.WB (bad) 
   14000caae:	pop    rbp
   14000caaf:	jle    0x14000cad2
   14000cab1:	and    DWORD PTR [rbp+rbp*8-0x424a0c0c],edx
   14000cab8:	push   rdx
   14000cab9:	adc    dl,BYTE PTR [rdx+0x78]
   14000cabc:	and    DWORD PTR [rax-0x21],0xffffff99
   14000cac0:	or     eax,DWORD PTR [rdi-0xe8cfff3]
   14000cac6:	cmp    dl,dh
   14000cac8:	xchg   bh,ch
   14000caca:	cdq    
   14000cacb:	jns    0x14000cac6
   14000cacd:	cmp    edi,DWORD PTR [rdi]
   14000cacf:	xor    bh,BYTE PTR [rbx-0x20]
   14000cad2:	shr    BYTE PTR [rbp-0x53],1
   14000cad5:	mov    dh,0x70
   14000cad7:	movabs ds:0x2527dc374bdf6d86,al
   14000cae0:	test   BYTE PTR [rdx],dl
   14000cae2:	jns    0x14000ca71
   14000cae4:	out    dx,eax
   14000cae5:	rex.RB (bad) 
   14000cae7:	and    ah,BYTE PTR [rbp+0x3f]
   14000caea:	mov    bl,0x7
   14000caec:	lock mov ah,0x60
   14000caef:	add    eax,eax
   14000caf1:	pop    rsp
   14000caf2:	add    al,0x84
   14000caf4:	adc    BYTE PTR [rdi],ch
   14000caf6:	sti    
   14000caf7:	addr32 (bad) 
   14000caf9:	(bad)  
   14000cafb:	stos   BYTE PTR es:[rdi],al
   14000cafc:	(bad)  
   14000cafd:	cld    
   14000cafe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000caff:	(bad)  
   14000cb00:	ins    BYTE PTR es:[rdi],dx
   14000cb01:	mov    edi,0x12002b1f
   14000cb06:	ss rol bh,0xb9
   14000cb0a:	cli    
   14000cb0b:	rex.X sub bl,bl
   14000cb0e:	shl    DWORD PTR [rdi-0x604d5bfc],0xb
   14000cb15:	loope  0x14000cb2e
   14000cb17:	xchg   BYTE PTR [rcx-0x28],al
   14000cb1a:	and    BYTE PTR [rax-0x6e85bff4],ah
   14000cb20:	(bad)  
   14000cb21:	(bad)  
   14000cb22:	mov    dl,0x84
   14000cb24:	or     eax,0xd35cf300
   14000cb29:	ins    DWORD PTR es:[rdi],dx
   14000cb2a:	mov    ebp,0xb23e97f1
   14000cb2f:	lock xchg edx,eax
   14000cb31:	(bad)  
   14000cb32:	std    
   14000cb33:	fwait
   14000cb34:	rex.WRX cmp r8,QWORD PTR [rbp+0x791db052]
   14000cb3b:	jns    0x14000cb84
   14000cb3d:	lahf   
   14000cb3e:	jne    0x14000cb3b
   14000cb40:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cb41:	imul   ebp,edi,0x4b
   14000cb44:	xlat   BYTE PTR ds:[rbx]
   14000cb45:	shr    DWORD PTR [rdi],cl
   14000cb47:	(bad)  
   14000cb49:	lahf   
   14000cb4a:	out    dx,eax
   14000cb4b:	(bad)  
   14000cb4c:	mov    al,0xde
   14000cb4e:	add    BYTE PTR [rsp+rcx*4-0x262feea6],0x85
   14000cb56:	js     0x14000cbbe
   14000cb58:	(bad)  
   14000cb59:	movabs ds:0xa8815e040346c378,al
   14000cb62:	jge    0x14000cb8c
   14000cb64:	ja     0x14000cb82
   14000cb66:	ss out 0x97,al
   14000cb69:	rex.B
   14000cb6a:	xor    bl,BYTE PTR ds:[rax+0x3d]
   14000cb6e:	mov    edx,0xda342b8c
   14000cb73:	nop
   14000cb74:	std    
   14000cb75:	(bad)  
   14000cb76:	out    0xb9,al
   14000cb78:	movsxd esp,esi
   14000cb7a:	rol    dl,1
   14000cb7c:	in     al,dx
   14000cb7d:	cmp    edi,DWORD PTR [rsi]
   14000cb7f:	cld    
   14000cb80:	(bad)  
   14000cb82:	mov    ebp,0xe9d1df07
   14000cb87:	add    BYTE PTR [rdx+0x29],dl
   14000cb8a:	(bad)  
   14000cb8b:	dec    BYTE PTR [rdx-0x80]
   14000cb8e:	rex.WRXB sub al,0xac
   14000cb91:	clc    
   14000cb92:	test   DWORD PTR [rdx+0x4152ff63],esi
   14000cb98:	or     al,BYTE PTR [rip+0x4850d644]        # 0x18851a1e2
   14000cb9e:	loope  0x14000cb27
   14000cba0:	add    esp,DWORD PTR [rip+0xffffffffd09e4f06]        # 0x1109f1aac
   14000cba6:	cli    
   14000cba7:	int3   
   14000cba8:	fldenv [rcx-0x6b4a4896]
   14000cbae:	mov    al,BYTE PTR [rax+rdx*1-0x4786eff0]
   14000cbb5:	mov    al,0x14
   14000cbb7:	mov    dh,0xef
   14000cbb9:	or     cl,spl
   14000cbbc:	je     0x14000cbad
   14000cbbe:	(bad)  
   14000cbbf:	or     ecx,eax
   14000cbc1:	retf   0xab77
   14000cbc4:	jge    0x14000cb65
   14000cbc6:	cs ins DWORD PTR es:[rdi],dx
   14000cbc8:	repz rex.X
   14000cbca:	rex.W shr BYTE PTR [rbx-0x1044a035],cl
   14000cbd1:	rex.WRXB (bad) 
   14000cbd3:	jrcxz  0x14000cc04
   14000cbd5:	scas   al,BYTE PTR es:[rdi]
   14000cbd6:	(bad)  
   14000cbd8:	mov    edi,ecx
   14000cbda:	pop    rdi
   14000cbdb:	mov    esp,0xc0ecf79b
   14000cbe0:	(bad)  
   14000cbe1:	cmp    BYTE PTR [rcx+0x6e],0x38
   14000cbe5:	hlt    
   14000cbe6:	ficom  DWORD PTR [rdi-0x34]
   14000cbe9:	mov    ebp,0xd1bf03f6
   14000cbee:	fistp  QWORD PTR [rdi-0x13]
   14000cbf1:	sub    eax,0x2a9008ed
   14000cbf6:	sbb    dl,ah
   14000cbf8:	push   rbx
   14000cbf9:	mov    dl,0x8
   14000cbfb:	lock push rcx
   14000cbfd:	or     dl,BYTE PTR [rax+0x2]
   14000cc00:	rex.WX movabs rcx,0xef3217edd614be36
   14000cc0a:	or     al,0x14
   14000cc0c:	ret    0x4ba7
   14000cc0f:	sub    BYTE PTR [rax+0x61],cl
   14000cc13:	sti    
   14000cc14:	(bad)  
   14000cc15:	lods   al,BYTE PTR ds:[rsi]
   14000cc16:	(bad)  
   14000cc17:	adc    eax,0x85200404
   14000cc1c:	fwait
   14000cc1d:	(bad)  
   14000cc1e:	and    dl,dh
   14000cc20:	push   rdx
   14000cc21:	out    dx,al
   14000cc22:	or     edi,DWORD PTR [rbx]
   14000cc24:	mov    ecx,0x7d90c8ff
   14000cc29:	ja     0x14000cc34
   14000cc2b:	or     BYTE PTR fs:[rsp+rsi*1+0x40],ah
   14000cc30:	and    BYTE PTR [rcx],0x2
   14000cc33:	gs (bad) 
   14000cc35:	xchg   BYTE PTR [rax],cl
   14000cc37:	xchg   edx,eax
   14000cc38:	and    al,0x7a
   14000cc3a:	xchg   ebx,eax
   14000cc3b:	ins    BYTE PTR es:[rdi],dx
   14000cc3c:	jrcxz  0x14000cc89
   14000cc3e:	mov    edi,0x1a1feefa
   14000cc43:	cmp    eax,0x5c770ffc
   14000cc48:	test   BYTE PTR [rbx+0x6c1acf7],bh
   14000cc4e:	cmp    BYTE PTR [rcx-0xa],0xb9
   14000cc52:	icebp  
   14000cc53:	lods   eax,DWORD PTR ds:[rsi]
   14000cc54:	outs   dx,DWORD PTR ds:[rsi]
   14000cc55:	fcomip st,st(5)
   14000cc57:	(bad)  
   14000cc58:	lahf   
   14000cc59:	sti    
   14000cc5a:	mov    ebp,0xb4768756
   14000cc5f:	(bad)  
   14000cc60:	push   rdi
   14000cc61:	mov    bl,0xba
   14000cc63:	idiv   BYTE PTR [rsp+rsi*8+0x686e3d41]
   14000cc6a:	(bad)  
   14000cc6b:	adc    al,0xbf
   14000cc6d:	std    
   14000cc6e:	(bad)  
   14000cc6f:	(bad)
   14000cc73:	(bad)  
   14000cc74:	(bad)  
   14000cc75:	cmp    eax,0x503a3c81
   14000cc7a:	cli    
   14000cc7b:	ficomp DWORD PTR [rdx+0x40]
   14000cc7e:	or     BYTE PTR [rbp-0x5],ah
   14000cc81:	adc    edi,DWORD PTR [rbx+rbx*4+0x2424ed5f]
   14000cc88:	or     BYTE PTR [rax+0x6ac81000],0x1d
   14000cc8f:	or     BYTE PTR fs:[rsi+0x64086034],al
   14000cc96:	or     al,0x88
   14000cc98:	add    dl,dl
   14000cc9a:	(bad)  
   14000cc9b:	sbb    DWORD PTR [rbx+rax*1],eax
   14000cc9e:	movsxd esi,DWORD PTR [rsp+rdx*4]
   14000cca1:	in     al,dx
   14000cca2:	movabs ds:0xaf77faef0781f473,al
   14000ccab:	jle    0x14000ccc8
   14000ccad:	rex pop QWORD PTR [rax]
   14000ccb0:	xor    bh,cl
   14000ccb2:	icebp  
   14000ccb3:	pop    rbp
   14000ccb4:	jl     0x14000cd0c
   14000ccb6:	loopne 0x14000ccf6
   14000ccb8:	add    dh,ah
   14000ccba:	pop    rcx
   14000ccbb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ccbc:	repz out 0x8f,al
   14000ccbf:	cld    
   14000ccc0:	(bad)  
   14000ccc2:	repz pop rdi
   14000ccc4:	(bad)  
   14000ccc5:	mov    bl,0x9d
   14000ccc7:	(bad)  
   14000ccc8:	mov    eax,ecx
   14000ccca:	(bad)  
   14000cccb:	hlt    
   14000cccc:	mov    BYTE PTR [rcx+rdx*2-0x5d],ah
   14000ccd0:	mov    ebx,0xe7285f5a
   14000ccd5:	idiv   bl
   14000ccd7:	ds add bh,ah
   14000ccda:	sbb    eax,0x37d0640
   14000ccdf:	rex.X adc eax,0x6ba580d3
   14000cce5:	or     bh,BYTE PTR [rax-0x3ddfdfe9]
   14000cceb:	push   0x7e2b2260
   14000ccf0:	or     bl,BYTE PTR [rdx+0x81004ee]
   14000ccf6:	xor    BYTE PTR [rsi],dh
   14000ccf8:	cdq    
   14000ccf9:	mov    BYTE PTR [rax+0x64],al
   14000ccfc:	(bad)  
   14000ccfd:	or     al,0x59
   14000ccff:	icebp  
   14000cd00:	xchg   ebx,eax
   14000cd01:	adc    edi,DWORD PTR [rbp+0x18c08676]
   14000cd07:	sub    esi,DWORD PTR [rbx+0x63]
   14000cd0a:	xor    BYTE PTR [rsi-0x2a],cl
   14000cd0d:	mov    al,0xfb
   14000cd0f:	lock sub eax,0x5f7b4437
   14000cd15:	clc    
   14000cd16:	cli    
   14000cd17:	in     al,dx
   14000cd18:	fdivr  DWORD PTR [rbp-0x61b3feb9]
   14000cd1e:	jrcxz  0x14000cd7b
   14000cd20:	stc    
   14000cd21:	lods   al,BYTE PTR ds:[rsi]
   14000cd22:	rol    BYTE PTR [rsi],0x80
   14000cd25:	jns    0x14000cd9d
   14000cd27:	cwde   
   14000cd28:	cmp    eax,0x86f7b87c
   14000cd2d:	lahf   
   14000cd2e:	(bad)  
   14000cd2f:	cmc    
   14000cd30:	mov    ecx,0xfef96feb
   14000cd35:	mov    eax,0x174910ad
   14000cd3a:	fldenv [rdi-0x5f03a17e]
   14000cd40:	(bad)  
   14000cd41:	(bad)  
   14000cd42:	out    dx,eax
   14000cd43:	in     eax,0xf7
   14000cd45:	fistp  DWORD PTR [rbp+0x1c]
   14000cd48:	add    BYTE PTR [rdi+riz*2-0x61],bh
   14000cd4c:	nop
   14000cd4d:	mov    dh,0xf
   14000cd4f:	rex fidivr DWORD PTR [rsi+0x3]
   14000cd53:	and    eax,0x5de9aba5
   14000cd58:	sbb    ebx,DWORD PTR [rdi]
   14000cd5a:	out    dx,al
   14000cd5b:	fstp   st(3)
   14000cd5d:	and    BYTE PTR [rsi-0x76d7e066],0x1f
   14000cd64:	add    BYTE PTR fs:[rbx+0x0],ah
   14000cd68:	jrcxz  0x14000cd44
   14000cd6a:	add    DWORD PTR [rsi-0x4],ebx
   14000cd6d:	(bad)  
   14000cd6e:	adc    ah,ah
   14000cd70:	(bad)  [rcx+rax*1]
   14000cd73:	sbb    al,BYTE PTR [rax+0x79a200c9]
   14000cd79:	add    BYTE PTR [rip+0xffffffff986001b0],bh        # 0xd860cf2f
   14000cd7f:	sub    esp,ebx
   14000cd81:	clc    
   14000cd82:	(bad)  
   14000cd83:	imul   DWORD PTR [rip+0x7f07f77c]        # 0x1bf08c505
   14000cd89:	mov    ecx,0x2470b8b7
   14000cd8e:	push   rsi
   14000cd8f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cd90:	jo     0x14000cd63
   14000cd92:	mov    ebp,0x7cf1c398
   14000cd97:	and    eax,0x3d70a521
   14000cd9c:	(bad)  
   14000cd9d:	ds call 0x14074b2ea
   14000cda3:	lods   al,BYTE PTR ds:[rsi]
   14000cda4:	push   rdi
   14000cda5:	push   rax
   14000cda6:	js     0x14000cdb0
   14000cda8:	adc    dl,dl
   14000cdaa:	xor    eax,0xdf9a821b
   14000cdaf:	mov    ebx,0x686340fd
   14000cdb4:	xor    BYTE PTR [rcx],dl
   14000cdb6:	pushf  
   14000cdb7:	enter  0x856d,0x4e
   14000cdbb:	xchg   BYTE PTR [rax],al
   14000cdbd:	sbb    BYTE PTR [rax],bl
   14000cdbf:	(bad)  
   14000cdc0:	jo     0x14000ce34
   14000cdc2:	(bad)  
   14000cdc3:	xor    BYTE PTR [rcx+rax*4+0x6bfb5b20],0xad
   14000cdcb:	xor    DWORD PTR [rsi-0x72ad73e8],ebx
   14000cdd1:	xchg   r10,rax
   14000cdd3:	(bad)  
   14000cdd4:	xchg   esp,eax
   14000cdd5:	fs fcom st(3)
   14000cdd8:	popf   
   14000cdd9:	xchg   DWORD PTR [rdx+riz*1],edx
   14000cddc:	rex.X mov cl,0x0
   14000cddf:	leave  
   14000cde0:	gs (bad) 
   14000cde2:	xor    al,al
   14000cde4:	(bad)  
   14000cde5:	cmp    BYTE PTR [rcx+0x46],0x11
   14000cde9:	scas   eax,DWORD PTR es:[rdi]
   14000cdea:	clc    
   14000cdeb:	loopne 0x14000cde8
   14000cded:	jbe    0x14000cdad
   14000cdef:	repnz cmp eax,0x46ead3bf
   14000cdf5:	in     eax,dx
   14000cdf6:	cmp    BYTE PTR [rdx],dh
   14000cdf8:	(bad)  
   14000cdf9:	rex.RB xchg r15d,eax
   14000cdfb:	and    bl,BYTE PTR [rdi]
   14000cdfd:	mov    edx,0x37b42e93
   14000ce02:	(bad)  
   14000ce03:	(bad)  
   14000ce04:	(bad)  
   14000ce05:	add    BYTE PTR [rdi],bl
   14000ce07:	imul   edi,DWORD PTR gs:[rbp-0x17],0xffffff8c
   14000ce0c:	xchg   BYTE PTR [rdi],dh
   14000ce0e:	(bad)  
   14000ce0f:	adc    BYTE PTR [rdx],cl
   14000ce11:	adc    BYTE PTR [rax-0x4104428e],al
   14000ce17:	stos   BYTE PTR es:[rdi],al
   14000ce18:	(bad)  
   14000ce19:	ret    0x6bae
   14000ce1c:	pop    rbx
   14000ce1d:	sbb    eax,0xf178f3cd
   14000ce22:	mov    ebx,0xdf003f66
   14000ce27:	lock (bad) 
   14000ce29:	sub    BYTE PTR [rbx-0x30],al
   14000ce2c:	rex.R enter 0x8332,0x2c
   14000ce31:	xor    ecx,DWORD PTR [rax-0x4e]
   14000ce34:	or     al,0x69
   14000ce36:	rex.RX sbb BYTE PTR [rsi],r12b
   14000ce39:	sbb    al,bl
   14000ce3b:	movsxd r10d,DWORD PTR [rdx-0x3e6297e6]
   14000ce42:	fs (bad) 
   14000ce44:	xor    rax,0xffffffffc6ff350c
   14000ce4a:	in     eax,0xc
   14000ce4c:	sbb    eax,DWORD PTR [rax]
   14000ce4e:	out    0x19,al
   14000ce50:	rex.X mov eax,ebp
   14000ce53:	cmc    
   14000ce54:	(bad)  
   14000ce55:	sti    
   14000ce56:	stos   DWORD PTR es:[rdi],eax
   14000ce57:	or     esi,DWORD PTR [rdi+0x3a17f1be]
   14000ce5d:	pop    rbp
   14000ce5e:	or     DWORD PTR [rip+0xffffffffba1e5bad],esp        # 0xfa1f2a11
   14000ce64:	repz loope 0x14000ce9f
   14000ce67:	mov    edi,0x9df1f00f
   14000ce6c:	jp     0x14000ce27
   14000ce6e:	jmp    0x14000ce9f
   14000ce70:	(bad)  
   14000ce71:	sahf   
   14000ce72:	jle    0x14000ced5
   14000ce74:	xchg   ebx,esi
   14000ce76:	and    BYTE PTR [rsi+rbx*1+0x69],bl
   14000ce7a:	cmp    edi,edx
   14000ce7c:	and    BYTE PTR [rsi+rbp*8-0x6],ah
   14000ce80:	add    ecx,esi
   14000ce82:	(bad)  
   14000ce83:	ins    BYTE PTR es:[rdi],dx
   14000ce84:	push   rdx
   14000ce85:	repz sti 
   14000ce87:	pop    rsi
   14000ce88:	jle    0x14000cec5
   14000ce8a:	stos   BYTE PTR es:[rdi],al
   14000ce8b:	rex.WRXB xor BYTE PTR [r14+0x28c26990],r8b
   14000ce92:	xor    eax,ebx
   14000ce94:	rex.W xor al,0x36
   14000ce97:	sbb    DWORD PTR es:[rsi+rsi*1-0x6525630],esi
   14000ce9f:	jge    0x14000ce88
   14000cea1:	(bad)  
   14000cea2:	sbb    ah,BYTE PTR gs:[rax]
   14000cea5:	(bad)  
   14000cea6:	jo     0x14000cea5
   14000cea8:	add    DWORD PTR [rdx],eax
   14000ceaa:	cmp    BYTE PTR [rdx+rax*8+0x1b002c],0xe6
   14000ceb2:	jmp    0xfaf141ea
   14000ceb7:	(bad)  
   14000ceb8:	pop    rbx
   14000ceb9:	ds hlt 
   14000cebb:	lahf   
   14000cebc:	scas   eax,DWORD PTR es:[edi]
   14000cebe:	jnp    0x14000ce91
   14000cec0:	test   edi,0xb950a51
   14000cec6:	mov    ecx,0x877dfb70
   14000cecb:	pop    rdi
   14000cecc:	(bad)  
   14000cecd:	fucom  st(7)
   14000cecf:	cmp    esi,ebp
   14000ced1:	mov    esp,0x7d9d2be0
   14000ced6:	rex.RB cld 
   14000ced8:	mov    edi,0x76df892c
   14000cedd:	cli    
   14000cede:	cmp    ecx,esi
   14000cee0:	out    0x36,eax
   14000cee2:	movabs al,ds:0xd637cc304407eaa9
   14000ceeb:	(bad)  
   14000ceec:	ret    
   14000ceed:	(bad)  
   14000ceee:	(bad)  
   14000ceef:	xchg   edx,eax
   14000cef0:	sbb    cl,BYTE PTR [rdx+rsi*1-0x5]
   14000cef4:	sahf   
   14000cef5:	imul   eax,DWORD PTR [rbx],0xe6db6993
   14000cefb:	ja     0x14000cf1a
   14000cefd:	jg     0x14000cf6f
   14000ceff:	ins    DWORD PTR es:[rdi],dx
   14000cf00:	jg     0x14000cecc
   14000cf02:	mov    ah,0x1b
   14000cf04:	or     DWORD PTR [rax],esi
   14000cf06:	and    BYTE PTR [rbp-0x80],ch
   14000cf09:	sub    al,0x83
   14000cf0b:	ins    DWORD PTR es:[rdi],dx
   14000cf0c:	outs   dx,BYTE PTR ds:[rsi]
   14000cf0d:	cmp    al,0xc7
   14000cf0f:	div    esi
   14000cf11:	pop    rcx
   14000cf12:	xchg   BYTE PTR [rip+0xffffffffd8f4f300],cl        # 0x118f5c218
   14000cf18:	sti    
   14000cf19:	mov    dl,0xef
   14000cf1b:	pushf  
   14000cf1c:	jg     0x14000cf09
   14000cf1e:	(bad)  
   14000cf1f:	cld    
   14000cf20:	rex.WRX
   14000cf21:	addr32 jno 0x14000cf0d
   14000cf24:	xchg   esi,eax
   14000cf25:	jbe    0x14000ced3
   14000cf27:	and    DWORD PTR [rbp-0x1c],esp
   14000cf2a:	(bad)  
   14000cf2b:	loopne 0x14000cef0
   14000cf2d:	imul   edi,DWORD PTR [rdx+rax*1-0x38646ae],0xede9b6ca
   14000cf38:	lock popf 
   14000cf3a:	popf   
   14000cf3b:	hlt    
   14000cf3c:	add    ebx,DWORD PTR [rdi]
   14000cf3e:	(bad)  
   14000cf3f:	jmp    0x14000cf4e
   14000cf41:	xchg   DWORD PTR [rdi],edx
   14000cf43:	mov    edi,0x2e47e9eb
   14000cf48:	jle    0x14000cfb5
   14000cf4a:	adc    BYTE PTR [rdx-0xf],dh
   14000cf4d:	add    ebp,DWORD PTR [rax+0xac05f8a]
   14000cf53:	rol    DWORD PTR ds:[rcx+rcx*2+0x47f0b946],cl
   14000cf5b:	test   eax,0x4609a641
   14000cf60:	fwait
   14000cf61:	pop    rsp
   14000cf62:	call   0x138ec8b60
   14000cf67:	xor    ebx,edx
   14000cf69:	mov    esi,0x1bf15b48
   14000cf6e:	ins    DWORD PTR es:[rdi],dx
   14000cf6f:	add    BYTE PTR [rbx+0x4c808c81],ah
   14000cf75:	(bad)  
   14000cf76:	(bad)  
   14000cf77:	fsubrp st(5),st
   14000cf79:	(bad)  
   14000cf7a:	sbb    eax,DWORD PTR [rax]
   14000cf7c:	add    BYTE PTR [rdi],bh
   14000cf7e:	neg    bh
   14000cf80:	jmp    QWORD PTR [rsi-0x1006d4eb]
   14000cf86:	push   rdi
   14000cf87:	ss rex.RX (bad) 
   14000cf8a:	jbe    0x14000d006
   14000cf8c:	jge    0x14000cf42
   14000cf8e:	outs   dx,DWORD PTR ds:[rsi]
   14000cf8f:	xchg   esp,eax
   14000cf90:	push   0xc457368
   14000cf95:	rep ds stos DWORD PTR es:[rdi],eax
   14000cf98:	mov    WORD PTR [rsi-0x61],cs
   14000cf9b:	shl    dl,0xcc
   14000cf9e:	mov    edx,eax
   14000cfa0:	(bad)  
   14000cfa1:	in     eax,dx
   14000cfa2:	and    dl,BYTE PTR [rsi+0x6]
   14000cfa5:	rex.X
   14000cfa6:	rex.R in eax,0x5a
   14000cfa9:	fistp  QWORD PTR [rcx+0x2f3a7efd]
   14000cfaf:	and    bl,BYTE PTR [rbx-0xd]
   14000cfb2:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000cfb4:	bnd je 0x14000cfaf
   14000cfb7:	loopne 0x14000cfd7
   14000cfb9:	sbb    DWORD PTR [rsi],eax
   14000cfbb:	sti    
   14000cfbc:	sub    BYTE PTR [rdi],dl
   14000cfbe:	xchg   ecx,eax
   14000cfbf:	(bad)  
   14000cfc0:	jb     0x14000cf71
   14000cfc2:	rcl    dh,0xbe
   14000cfc5:	cmc    
   14000cfc6:	(bad)  
   14000cfc7:	pop    rdi
   14000cfc8:	movabs al,ds:0x7ac2330c0433ed18
   14000cfd1:	sbb    BYTE PTR [rdx+r11*1+0x43682699],spl
   14000cfd9:	mov    dh,0xc7
   14000cfdb:	(bad)  
   14000cfdd:	out    dx,al
   14000cfde:	jg     0x14000cfbb
   14000cfe0:	leave  
   14000cfe1:	out    0x7b,eax
   14000cfe3:	cli    
   14000cfe4:	mov    ebx,DWORD PTR [rdx]
   14000cfe6:	fsubrp st(4),st
   14000cfe8:	lahf   
   14000cfe9:	mov    ch,0x1b
   14000cfeb:	sti    
   14000cfec:	ja     0x14000d011
   14000cfee:	add    al,0x9a
   14000cff0:	ins    BYTE PTR es:[rdi],dx
   14000cff1:	out    dx,eax
   14000cff2:	mov    edi,0xcae1e576
   14000cff7:	sar    BYTE PTR [rdi],cl
   14000cff9:	sbb    eax,DWORD PTR [rax]
   14000cffb:	add    al,dl
   14000cffd:	xchg   BYTE PTR [rsi],bh
   14000cfff:	cld    
   14000d000:	lods   eax,DWORD PTR ds:[rsi]
   14000d001:	shl    edi,cl
   14000d003:	jle    0x14000cfe6
   14000d005:	jmp    0x14000d056
   14000d007:	scas   al,BYTE PTR es:[rdi]
   14000d008:	(bad)  
   14000d009:	push   rdi
   14000d00a:	(bad)  
   14000d00b:	(bad)  
   14000d00c:	imul   ebx,DWORD PTR [rsi-0x50],0x1f
   14000d010:	rex.WX enter 0x77ad,0xfc
   14000d015:	ss out 0x9b,eax
   14000d018:	movabs ds:0xdc315a3e9d33813,eax
   14000d021:	ret    
   14000d022:	pop    rcx
   14000d023:	idiv   DWORD PTR [rsi]
   14000d025:	pminsw mm1,mm1
   14000d028:	out    0xf1,eax
   14000d02a:	or     ebx,DWORD PTR [rbx]
   14000d02c:	stc    
   14000d02d:	out    0xda,eax
   14000d02f:	sti    
   14000d030:	push   rdx
   14000d031:	fsub   st,st(1)
   14000d033:	shl    dl,0x18
   14000d036:	mov    edi,0x517e6a0c
   14000d03b:	mov    eax,0xfd3df0fd
   14000d040:	(bad)
   14000d043:	(bad)  
   14000d044:	stc    
   14000d045:	mov    cl,0x8b
   14000d047:	and    DWORD PTR [rbp+0x4],0xa460120c
   14000d04e:	or     ebx,esp
   14000d050:	mov    WORD PTR [rax-0x7812fc96],ss
   14000d056:	cmc    
   14000d057:	fmul   QWORD PTR [rbx+0x18]
   14000d05a:	jrcxz  0x14000d07e
   14000d05c:	sti    
   14000d05d:	cld    
   14000d05e:	clc    
   14000d05f:	mov    esi,0xcc9be76d
   14000d064:	mov    esi,0xb6bf76db
   14000d069:	xchg   ecx,eax
   14000d06a:	jg     0x14000d025
   14000d06c:	xchg   DWORD PTR [rax-0x80],esp
   14000d06f:	cmp    r12,QWORD PTR [rbx]
   14000d072:	(bad)  
   14000d073:	or     ah,0xf8
   14000d076:	xor    edi,DWORD PTR [rcx-0x66028838]
   14000d07c:	test   DWORD PTR [rip+0xffffffffcf278000],ecx        # 0x10f285082
   14000d082:	lods   al,BYTE PTR ds:[rsi]
   14000d083:	inc    esp
   14000d085:	cmp    eax,0xfef19747
   14000d08a:	push   rdi
   14000d08b:	pop    rsp
   14000d08c:	xchg   DWORD PTR [rdi+0x2f1bc4fd],ecx
   14000d092:	imul   cl
   14000d094:	pop    rsp
   14000d095:	ss pushf 
   14000d097:	cmp    al,0x79
   14000d099:	or     edi,DWORD PTR [rsi-0x1a]
   14000d09c:	(bad)  
   14000d09d:	(bad)  
   14000d09e:	test   edi,ecx
   14000d0a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0a1:	xlat   BYTE PTR ds:[rbx]
   14000d0a2:	movabs eax,ds:0x573e4f626e9091dd
   14000d0ab:	fild   QWORD PTR [rdi+0x47793da]
   14000d0b1:	cli    
   14000d0b2:	test   eax,0xf49a45bc
   14000d0b7:	rex.XB jge 0x14000d0e8
   14000d0ba:	(bad)  
   14000d0bb:	test   BYTE PTR [rdi],dl
   14000d0bd:	mov    edi,0x5cf9860c
   14000d0c2:	adc    eax,ecx
   14000d0c4:	rex.RB cmc 
   14000d0c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d0c7:	and    al,0xb0
   14000d0c9:	(bad)  
   14000d0ca:	adc    BYTE PTR [rsi],ah
   14000d0cc:	sbb    bl,BYTE PTR [rax]
   14000d0ce:	imul   eax,DWORD PTR [rdx+0x43b3abed],0x78
   14000d0d5:	and    ah,ah
   14000d0d7:	mov    ch,0xbc
   14000d0d9:	test   eax,0x4810f605
   14000d0de:	imul   ebx,DWORD PTR [rax-0x40894734],0xffffff81
   14000d0e5:	ss gs xchg edi,eax
   14000d0e8:	lahf   
   14000d0e9:	je     0x14000d10b
   14000d0eb:	jle    0x14000d15a
   14000d0ed:	cmp    eax,DWORD PTR [rcx]
   14000d0ef:	movabs eax,ds:0x6f9174801733a00d
   14000d0f8:	cli    
   14000d0f9:	xor    ecx,DWORD PTR [rbx+rbx*1]
   14000d0fc:	add    BYTE PTR [rax],al
   14000d0fe:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d0ff:	(bad)  
   14000d100:	xchg   BYTE PTR [rbx-0x503e6e86],bh
   14000d106:	std    
   14000d107:	call   0xed80d203
   14000d10c:	add    bpl,BYTE PTR [r8-0x56357e0e]
   14000d113:	pop    rbx
   14000d114:	in     al,0xb
   14000d116:	adc    ch,BYTE PTR [rcx-0x77cb2964]
   14000d11c:	rex.WR or rax,0x56241489
   14000d122:	(bad)  
   14000d123:	push   rbx
   14000d124:	lock fbld TBYTE PTR [rsi-0x41]
   14000d128:	pop    rdi
   14000d129:	fimul  DWORD PTR [rdi-0x432f2836]
   14000d12f:	int    0x1d
   14000d131:	mov    cl,0x1c
   14000d133:	rex.W push rdi
   14000d135:	(bad)  
   14000d136:	(bad)  
   14000d138:	sbb    DWORD PTR [rdi-0x6e341885],0xf0a7fefc
   14000d142:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d143:	hlt    
   14000d144:	rex.RX mov BYTE PTR [rbp-0x3ef5afe3],r8b
   14000d14b:	nop
   14000d14c:	sahf   
   14000d14d:	out    dx,eax
   14000d14e:	jmp    0xfaf97762
   14000d153:	jle    0x14000d0d6
   14000d155:	(bad)  
   14000d156:	test   al,0x4f
   14000d158:	rex.B clc 
   14000d15a:	call   0x13ca0f29d
   14000d15f:	xor    ah,BYTE PTR [rax+0x2e]
   14000d162:	lods   al,BYTE PTR ds:[rsi]
   14000d163:	xlat   BYTE PTR ds:[rbx]
   14000d164:	jbe    0x14000d160
   14000d166:	or     esp,DWORD PTR [rsi+rax*1-0x68]
   14000d16a:	sbb    BYTE PTR [rax-0x58],ah
   14000d16d:	add    DWORD PTR [rcx-0xdf3b7ca],0xc6415c60
   14000d177:	or     eax,0x3ee8b9ed
   14000d17c:	pop    rdi
   14000d17d:	jrcxz  0x14000d186
   14000d17f:	ret    0xbe37
   14000d182:	ja     0x14000d1c3
   14000d184:	mov    bl,0x22
   14000d186:	(bad)  
   14000d187:	xor    dl,al
   14000d189:	fiadd  DWORD PTR [rax-0xc1cf9b4]
   14000d18f:	mov    ecx,0x89c61e9a
   14000d194:	pop    rdi
   14000d195:	mov    ebx,0x7acca160
   14000d19a:	add    DWORD PTR [rdi-0x68],edx
   14000d19d:	test   BYTE PTR [rcx],0xb0
   14000d1a0:	add    DWORD PTR [rax],eax
   14000d1a2:	add    BYTE PTR [rdx+rdx*2-0x73],cl
   14000d1a6:	out    dx,eax
   14000d1a7:	mov    eax,0x915a3776
   14000d1ac:	cmp    ch,BYTE PTR [rdi-0xf]
   14000d1af:	push   rbx
   14000d1b0:	ins    DWORD PTR es:[rdi],dx
   14000d1b1:	fwait
   14000d1b2:	std    
   14000d1b3:	push   rsp
   14000d1b4:	rex.WXB scas rax,QWORD PTR es:[rdi]
   14000d1b6:	mov    DWORD PTR [rdi],edi
   14000d1b8:	enter  0xd95d,0x9f
   14000d1bc:	(bad)  
   14000d1bd:	(bad)  
   14000d1be:	lods   eax,DWORD PTR ds:[rsi]
   14000d1bf:	rex.R mov dl,0xba
   14000d1c2:	movsxd edx,DWORD PTR [rcx-0x7]
   14000d1c5:	jnp    0x14000d23f
   14000d1c7:	jl     0x14000d1d3
   14000d1c9:	repz shl BYTE PTR [rsi],cl
   14000d1cc:	(bad)  
   14000d1cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d1ce:	rex.WX pop rdx
   14000d1d0:	jo     0x14000d19e
   14000d1d2:	shl    BYTE PTR [rcx-0x1a18958],cl
   14000d1d8:	mov    ebx,0xf99d0636
   14000d1dd:	and    eax,0xdef7ebfc
   14000d1e2:	mov    ?,WORD PTR [rdi-0xec41408]
   14000d1e8:	jg     0x14000d238
   14000d1ea:	(bad)  
   14000d1eb:	sbb    eax,0xc7107b3
   14000d1f1:	add    BYTE PTR [rbp+0x4d],al
   14000d1f4:	sahf   
   14000d1f5:	(bad)  
   14000d1f6:	clc    
   14000d1f7:	clc    
   14000d1f8:	(bad)  
   14000d1f9:	(bad)  
   14000d1fa:	in     al,dx
   14000d1fb:	in     eax,dx
   14000d1fc:	iret   
   14000d1fd:	(bad)
   14000d200:	lock xchg ecx,eax
   14000d202:	ret    0xfc46
   14000d205:	add    BYTE PTR gs:[rsi+0x27],dl
   14000d209:	test   BYTE PTR [rbp+0x1e9d480c],cl
   14000d20f:	jge    0x14000d256
   14000d211:	ins    BYTE PTR es:[rdi],dx
   14000d212:	rex.WRXB iretq 
   14000d214:	mov    eax,0xe2727e31
   14000d219:	mov    bh,0xc3
   14000d21b:	jl     0x14000d201
   14000d21d:	add    bh,BYTE PTR [rbx-0x14]
   14000d220:	mov    ebx,0xe3003c2e
   14000d225:	push   0x7d
   14000d227:	push   rdi
   14000d228:	repz fwait
   14000d22a:	int3   
   14000d22b:	outs   dx,DWORD PTR ds:[rsi]
   14000d22c:	(bad)  
   14000d22d:	sub    edi,DWORD PTR [rbx+riz*8-0x24]
   14000d231:	(bad)  
   14000d232:	(bad)  
   14000d233:	rex.R sar BYTE PTR [rdi-0x7a8ff648],0x42
   14000d23b:	rex.R push 0x2507e545
   14000d241:	sub    edi,DWORD PTR [rcx]
   14000d243:	std    
   14000d244:	cmovge esp,DWORD PTR [rcx+0x21]
   14000d248:	push   0x7b620c34
   14000d24d:	mov    ch,0x71
   14000d24f:	mov    esi,0x9f86a1ad
   14000d254:	loop   0x14000d283
   14000d256:	xor    al,0x7a
   14000d258:	add    esp,DWORD PTR [rbp-0x53b744a6]
   14000d25e:	or     dl,dh
   14000d260:	out    dx,al
   14000d261:	pop    rdi
   14000d262:	(bad)  
   14000d263:	fisttp WORD PTR [rbp+0xd]
   14000d266:	push   rax
   14000d267:	jrcxz  0x14000d2e7
   14000d269:	test   DWORD PTR [rcx],edx
   14000d26b:	xor    ebp,ebp
   14000d26d:	or     ch,bh
   14000d26f:	idiv   BYTE PTR [rsi]
   14000d271:	cld    
   14000d272:	enter  0xdfbb,0x8c
   14000d276:	xor    DWORD PTR [rdi+0x7e],0xe
   14000d27a:	jg     0x14000d26c
   14000d27c:	loopne 0x14000d288
   14000d27e:	(bad)  
   14000d27f:	(bad)  
   14000d281:	(bad)  
   14000d282:	movabs ds:0x23e010456ad3b1b6,al
   14000d28b:	mov    ecx,DWORD PTR [rsi+0x3d]
   14000d28e:	out    dx,eax
   14000d28f:	and    eax,eax
   14000d291:	syscall 
   14000d293:	mov    edx,0x90a44105
   14000d298:	xor    BYTE PTR [rsp+rbp*4],al
   14000d29b:	data16 (bad) 
   14000d29d:	rex.XB sub eax,0x99063131
   14000d2a3:	stos   DWORD PTR es:[rdi],eax
   14000d2a4:	jnp    0x14000d2ab
   14000d2a6:	repnz clc 
   14000d2a8:	(bad)  
   14000d2a9:	nop
   14000d2aa:	or     eax,0xbd2173e9
   14000d2af:	and    BYTE PTR [rcx],0x3
   14000d2b2:	jrcxz  0x14000d296
   14000d2b4:	test   BYTE PTR [rbx-0x2ba9c3b7],0xde
   14000d2bb:	mov    ch,0xcf
   14000d2bd:	(bad)  
   14000d2bf:	scas   al,BYTE PTR es:[rdi]
   14000d2c0:	popf   
   14000d2c1:	outs   dx,DWORD PTR ds:[rsi]
   14000d2c2:	sti    
   14000d2c3:	add    BYTE PTR [rbp+rcx*8-0x51],bl
   14000d2c7:	lea    ebp,[rbp+0x3fcef3f5]
   14000d2cd:	fild   WORD PTR [rcx]
   14000d2cf:	call   0x1b06e52b0
   14000d2d4:	and    eax,0x895e030e
   14000d2d9:	pop    rsi
   14000d2da:	int    0x79
   14000d2dc:	jae    0x14000d31c
   14000d2de:	retf   
   14000d2df:	rex.WX push rbp
   14000d2e1:	fucom  st(5)
   14000d2e3:	loop   0x14000d352
   14000d2e5:	mov    edx,0x9f89a730
   14000d2ea:	fdivr  QWORD PTR [rdi]
   14000d2ec:	lahf   
   14000d2ed:	(bad)  
   14000d2ee:	mov    ch,BYTE PTR [rbx]
   14000d2f0:	adc    al,0xb4
   14000d2f2:	scas   eax,DWORD PTR es:[rdi]
   14000d2f3:	cmc    
   14000d2f4:	mov    bh,0x27
   14000d2f6:	jle    0x14000d36a
   14000d2f8:	jns    0x14000d315
   14000d2fa:	repnz xchg ebp,eax
   14000d2fc:	or     al,0xe
   14000d2fe:	in     eax,0xfd
   14000d300:	fs (bad) 
   14000d302:	mov    esi,0xedff8f30
   14000d307:	imul   esp,edx,0x177bd827
   14000d30d:	mov    bh,0xdb
   14000d30f:	pop    rax
   14000d310:	pop    rsp
   14000d311:	pop    rsp
   14000d312:	ret    0xbef7
   14000d315:	jmp    0xf7d4c4d5
   14000d31a:	cmc    
   14000d31b:	mov    cl,0xf0
   14000d31d:	clc    
   14000d31e:	xchg   edi,eax
   14000d31f:	nop
   14000d320:	mov    cs,WORD PTR [rcx]
   14000d322:	(bad)
   14000d326:	adc    ebp,ebx
   14000d328:	addr32 out 0xf5,eax
   14000d32b:	sti    
   14000d32c:	inc    BYTE PTR [rcx]
   14000d32e:	push   rbp
   14000d32f:	add    al,0xf8
   14000d331:	sub    bl,bl
   14000d333:	stc    
   14000d334:	xchg   edi,eax
   14000d335:	xchg   ecx,eax
   14000d336:	(bad)  
   14000d337:	pop    rdx
   14000d338:	or     bl,BYTE PTR [rax+rbx*4+0x98d4e10]
   14000d33f:	sbb    ebx,DWORD PTR [rcx+0xaefbf15]
   14000d345:	int3   
   14000d346:	(bad)  
   14000d347:	and    eax,0xc3053f10
   14000d34c:	jns    0x14000d307
   14000d34e:	clc    
   14000d34f:	jge    0x14000d300
   14000d351:	mov    esi,0x9d77e276
   14000d356:	jnp    0x14000d3b2
   14000d358:	sti    
   14000d359:	(bad)  
   14000d35a:	inc    eax
   14000d35c:	sub    BYTE PTR [rax-0x13],ch
   14000d35f:	pop    rsp
   14000d360:	jl     0x14000d389
   14000d362:	jb     0x14000d3c1
   14000d364:	je     0x14000d360
   14000d366:	pop    rcx
   14000d367:	icebp  
   14000d368:	imul   esi,DWORD PTR [rdi],0x1f
   14000d36b:	ror    BYTE PTR [rdi+rcx*4+0x39],0xb8
   14000d370:	mov    WORD PTR [rcx+0xf],fs
   14000d373:	movabs al,ds:0xdb5fcb835b676d02
   14000d37c:	xchg   edi,eax
   14000d37d:	(bad)  
   14000d37e:	(bad)  
   14000d37f:	stos   BYTE PTR es:[rdi],al
   14000d380:	mov    bh,BYTE PTR [rdi+0x3f29bd39]
   14000d386:	xor    eax,0x79b57a6
   14000d38b:	rex.WRB
   14000d38c:	rex.WRB xchg BYTE PTR [r10-0x42],r15b
   14000d390:	out    0x5a,al
   14000d392:	mov    edi,0x9e55b69c
   14000d397:	mov    edx,0x18e2a067
   14000d39c:	jge    0x14000d3d3
   14000d39e:	mov    ebx,ebx
   14000d3a0:	dec    cl
   14000d3a2:	sub    esi,DWORD PTR [rcx-0x3fe0c4c]
   14000d3a8:	(bad)  
   14000d3a9:	rex.WRXB (bad) 
   14000d3ab:	and    ebp,esi
   14000d3ad:	fcomip st,st(5)
   14000d3af:	rex.WRXB rcr r13b,1
   14000d3b2:	xor    eax,0x8dc82103
   14000d3b7:	out    dx,eax
   14000d3b8:	stos   DWORD PTR es:[rdi],eax
   14000d3b9:	cld    
   14000d3ba:	cdq    
   14000d3bb:	jle    0x14000d3cd
   14000d3bd:	adc    cl,dl
   14000d3bf:	or     eax,0x581065f3
   14000d3c4:	rex.WRB or BYTE PTR [r13+0x56b320d4],0xc5
   14000d3cc:	(bad)  
   14000d3cd:	call   rdi
   14000d3cf:	jmp    0x14000d378
   14000d3d1:	xchg   edx,eax
   14000d3d2:	clc    
   14000d3d3:	leave  
   14000d3d4:	sbb    edi,DWORD PTR [rbx]
   14000d3d6:	out    0xf6,eax
   14000d3d8:	sbb    edx,DWORD PTR [rbx-0x66]
   14000d3db:	leave  
   14000d3dc:	(bad)  
   14000d3dd:	(bad)  
   14000d3de:	icebp  
   14000d3df:	sbb    edi,edi
   14000d3e1:	cmp    DWORD PTR [rax+rsi*8],ecx
   14000d3e4:	leave  
   14000d3e5:	or     eax,0xfbbb2e87
   14000d3ea:	jle    0x14000d3e8
   14000d3ec:	(bad)  
   14000d3ed:	pushf  
   14000d3ee:	adc    ah,ah
   14000d3f0:	fwait
   14000d3f1:	xchg   BYTE PTR [rdi-0x6a],dl
   14000d3f4:	(bad)  
   14000d3f5:	fld    DWORD PTR [rbx]
   14000d3f7:	push   0x6c0ac1a4
   14000d3fc:	pop    rbx
   14000d3fd:	cld    
   14000d3fe:	scas   al,BYTE PTR es:[rdi]
   14000d3ff:	fisubr DWORD PTR [rdx+rcx*1+0x7f1099f6]
   14000d406:	(bad)  
   14000d407:	rex.WXB test al,0x9e
   14000d40a:	shl    DWORD PTR [rsi-0x1e],0x77
   14000d40e:	jne    0x14000d48e
   14000d410:	sub    eax,0x842f7fcd
   14000d415:	cmp    eax,0x55300f25
   14000d41a:	cld    
   14000d41b:	(bad)  
   14000d41c:	mov    ebx,0x4edd0210
   14000d421:	(bad)  
   14000d422:	rex.RXB outs dx,BYTE PTR ds:[rsi]
   14000d424:	mov    esp,0xedf2ff11
   14000d429:	(bad)  
   14000d42a:	(bad)
   14000d42d:	ja     0x14000d451
   14000d42f:	jnp    0x14000d413
   14000d431:	rex.WB adc BYTE PTR [r10-0x70],bl
   14000d435:	push   rcx
   14000d436:	xchg   esp,eax
   14000d437:	test   DWORD PTR [rbx],0x49112128
   14000d43d:	xor    DWORD PTR [rcx],0xc0c6a701
   14000d443:	push   rbx
   14000d444:	rex.XB ret 0x9d9
   14000d448:	nop
   14000d449:	rol    DWORD PTR [rip+0xffffffffbf134d07],0x6        # 0xff142157
   14000d450:	ret    0xbf36
   14000d453:	lahf   
   14000d454:	enter  0xc5e3,0x6f
   14000d458:	xor    al,0x59
   14000d45a:	mov    cl,0xfb
   14000d45c:	pop    rsi
   14000d45d:	std    
   14000d45e:	lods   al,BYTE PTR ds:[rsi]
   14000d45f:	or     dh,ch
   14000d461:	xor    DWORD PTR [rcx-0x5b890208],eax
   14000d467:	cdq    
   14000d468:	jge    0x14000d4d3
   14000d46a:	pop    rbp
   14000d46b:	(bad)  
   14000d46c:	cli    
   14000d46d:	pop    rcx
   14000d46e:	push   rax
   14000d46f:	jmp    0x14000d40c
   14000d471:	movabs ds:0x5acaf1722ed187f6,al
   14000d47a:	xchg   BYTE PTR [rax-0x4bd57fc3],bl
   14000d480:	leave  
   14000d481:	xlat   BYTE PTR ds:[rbx]
   14000d482:	ins    DWORD PTR es:[rdi],dx
   14000d483:	mov    eax,0xea7dd5fc
   14000d488:	add    bl,bh
   14000d48a:	mov    esi,0xf2edb7f8
   14000d48f:	movsxd ebp,DWORD PTR [rbx-0x4e2742e6]
   14000d495:	mov    esp,0x6fd6bd6f
   14000d49a:	cmp    dl,BYTE PTR [rsi+0x4d]
   14000d49d:	clc    
   14000d49e:	rol    esi,0xea
   14000d4a1:	mov    ecx,0xedd1290a
   14000d4a6:	div    BYTE PTR [rax-0x20]
   14000d4a9:	loopne 0x14000d4cc
   14000d4ab:	cld    
   14000d4ac:	(bad)  
   14000d4ad:	mov    ebx,0xc7773117
   14000d4b2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d4b3:	jno    0x14000d49c
   14000d4b5:	and    ebp,DWORD PTR [rbx+0x48]
   14000d4b8:	outs   dx,DWORD PTR ds:[rsi]
   14000d4b9:	mov    esp,0x480db215
   14000d4be:	adc    dh,al
   14000d4c0:	(bad)  
   14000d4c1:	fcomp  DWORD PTR [rax+0x4033d610]
   14000d4c7:	rex.XB shr BYTE PTR [r14],0xf3
   14000d4cb:	(bad)  
   14000d4cc:	mov    ch,BYTE PTR [rcx-0x43]
   14000d4cf:	push   rbp
   14000d4d0:	mov    DWORD PTR [rcx],ebx
   14000d4d2:	(bad)  
   14000d4d3:	cmp    esp,DWORD PTR [rsi+0x3e47b998]
   14000d4d9:	enter  0xd8c7,0xf1
   14000d4dd:	jge    0x14000d4fe
   14000d4df:	(bad)  
   14000d4e0:	rex.WXB pop r14
   14000d4e2:	in     al,0x54
   14000d4e4:	mov    eax,0x1fa56efb
   14000d4e9:	xor    bl,BYTE PTR [rdx]
   14000d4eb:	rex.RX push rbx
   14000d4ed:	rcr    esi,1
   14000d4ef:	imul   esi
   14000d4f1:	mov    esi,0x6bc9f80f
   14000d4f6:	jle    0x14000d48b
   14000d4f8:	sbb    ebx,DWORD PTR [rax+0x54800dc]
   14000d4fe:	sbb    DWORD PTR [r13+0x70d6e707],r9d
   14000d505:	add    eax,0x6c01f9
   14000d50a:	sbb    ch,BYTE PTR [rax+0x5554248a]
   14000d510:	xchg   ebx,eax
   14000d511:	mov    BYTE PTR [rbp-0x73],bh
   14000d514:	fs rex.X push rcx
   14000d517:	adc    BYTE PTR [rax-0x44],ah
   14000d51a:	loop   0x14000d544
   14000d51c:	lods   al,BYTE PTR ds:[rsi]
   14000d51d:	pop    rbx
   14000d51e:	add    eax,DWORD PTR [rcx-0x3e422507]
   14000d524:	stos   DWORD PTR es:[rdi],eax
   14000d525:	push   0xffffffffbdf60836
   14000d52a:	xor    al,0xf
   14000d52c:	(bad)  
   14000d52d:	std    
   14000d52e:	test   BYTE PTR [rax],dl
   14000d530:	lea    ecx,[rsi-0x2aba1b5]
   14000d536:	cli    
   14000d537:	sbb    cl,ah
   14000d539:	adc    bl,BYTE PTR [rcx+0x35]
   14000d53c:	xchg   edi,eax
   14000d53d:	mov    edi,0x89a65ce1
   14000d542:	mov    edi,0x577abdfc
   14000d547:	add    al,0xda
   14000d549:	in     eax,dx
   14000d54a:	(bad)  
   14000d54b:	out    0x97,al
   14000d54d:	and    bh,ah
   14000d54f:	lock mov ebx,0x7d370fbe
   14000d555:	stc    
   14000d556:	mov    edi,eax
   14000d558:	movabs ds:0x1b0ebdd75381dc2f,eax
   14000d561:	mov    bl,0x33
   14000d563:	cmp    BYTE PTR [rbx+0x3dd29cd9],bl
   14000d569:	in     al,0xc3
   14000d56b:	out    dx,al
   14000d56c:	loop   0x14000d545
   14000d56e:	in     al,0x2b
   14000d570:	lahf   
   14000d571:	mov    esi,0xcfedf977
   14000d576:	push   rax
   14000d577:	(bad)  
   14000d578:	repnz mov ch,0xbe
   14000d57b:	jbe    0x14000d574
   14000d57d:	fnstsw WORD PTR [rdx+0x27b02efe]
   14000d583:	mov    bl,0x1d
   14000d585:	adc    BYTE PTR [rcx+rdi*8+0x40729f00],0x4f
   14000d58d:	fcompp 
   14000d58f:	xchg   edi,eax
   14000d590:	mov    ecx,0x87e35f30
   14000d595:	inc    dl
   14000d597:	call   0x15ff8785b
   14000d59c:	sub    al,dl
   14000d59e:	mov    ch,0x2f
   14000d5a0:	mov    esp,0xf5ff8f11
   14000d5a5:	jg     0x14000d5a0
   14000d5a7:	mov    ebx,0x5f23e4e4
   14000d5ac:	(bad)
   14000d5b0:	pushf  
   14000d5b1:	(bad)  
   14000d5b2:	add    edx,DWORD PTR [rax-0x5f]
   14000d5b5:	adc    BYTE PTR [rbx+0xde94957],al
   14000d5bb:	(bad)  
   14000d5bd:	es mov eax,0x505ce782
   14000d5c3:	fistp  DWORD PTR [rsp+rsi*8-0x7b]
   14000d5c7:	shr    DWORD PTR [rsi-0x1227f8d7],cl
   14000d5cd:	xchg   esp,eax
   14000d5ce:	out    dx,eax
   14000d5cf:	adc    ecx,DWORD PTR [rax]
   14000d5d1:	retf   0xddb9
   14000d5d4:	push   rbp
   14000d5d5:	jno    0x14000d62e
   14000d5d7:	(bad)
   14000d5da:	jbe    0x14000d603
   14000d5dc:	js     0x14000d5ee
   14000d5de:	enter  0x4a0f,0xf9
   14000d5e2:	cli    
   14000d5e3:	enter  0x65b,0x11
   14000d5e7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d5e8:	cmp    edi,DWORD PTR [rbp+0x64b325fb]
   14000d5ee:	mov    esi,0x78b1565c
   14000d5f3:	rex.RX mov eax,0x83dd4e70
   14000d5f9:	fsub   DWORD PTR [rsp-0x40]
   14000d5fd:	and    eax,0x510e334e
   14000d602:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d603:	rcr    BYTE PTR [rdi-0x48523e67],1
   14000d609:	mov    ebp,0x1c0efb1c
   14000d60e:	ret    
   14000d60f:	out    dx,eax
   14000d610:	fcomip st,st(1)
   14000d612:	sub    DWORD PTR [rcx+riz*2-0xf],edi
   14000d616:	jbe    0x14000d5c0
   14000d618:	cmp    eax,0xa0c8613b
   14000d61d:	mov    al,0x47
   14000d61f:	ret    0xbf09
   14000d622:	lods   al,BYTE PTR ds:[rsi]
   14000d623:	(bad)  
   14000d624:	movabs ds:0xce3e01b7d6bc8fbd,al
   14000d62d:	in     eax,0xcf
   14000d62f:	or     al,0x66
   14000d631:	add    ah,cl
   14000d633:	rex.RX xor DWORD PTR [rax-0x57],r9d
   14000d637:	jl     0x14000d5c6
   14000d639:	(bad)  
   14000d63a:	mov    ah,0x7c
   14000d63c:	clc    
   14000d63d:	scas   eax,DWORD PTR es:[rdi]
   14000d63e:	psubq  mm4,QWORD PTR [rip+0xffffffff8eed307b]        # 0xceee06c0
   14000d645:	add    DWORD PTR [rbx+0x44de04cd],edi
   14000d64b:	fidiv  WORD PTR [rcx-0x16]
   14000d64e:	pop    QWORD PTR [rcx+0x23b07962]
   14000d654:	jnp    0x14000d5ed
   14000d656:	add    BYTE PTR [rdi+0x3fcf733f],0xfc
   14000d65d:	jmp    0xc028d5e9
   14000d662:	adc    eax,0x3f868300
   14000d667:	shl    DWORD PTR [rbp+0x9],1
   14000d66a:	sbb    eax,DWORD PTR [rax-0x2f455733]
   14000d670:	mov    al,0xb5
   14000d672:	nop
   14000d673:	jbe    0x14000d6d7
   14000d675:	xlat   BYTE PTR ds:[rbx]
   14000d676:	cdq    
   14000d677:	xchg   r14d,eax
   14000d679:	adc    DWORD PTR [rdx],esi
   14000d67b:	ins    DWORD PTR es:[rdi],dx
   14000d67c:	addr32 xchg esi,eax
   14000d67e:	imul   edx,DWORD PTR [rdi],0x590c6e7b
   14000d684:	(bad)  
   14000d685:	xchg   esp,eax
   14000d686:	pop    rsp
   14000d687:	(bad)  
   14000d688:	test   DWORD PTR [rdi+0x30119cbd],ebp
   14000d68e:	adc    al,0x18
   14000d690:	xor    DWORD PTR [rdx+0x7f935027],0x2e
   14000d697:	test   al,0x62
   14000d699:	gs rex.WXB loope 0x14000d70f
   14000d69d:	mov    DWORD PTR [rax-0x3f],esi
   14000d6a0:	retf   
   14000d6a1:	movabs al,ds:0xf45ed2db64e9b776
   14000d6aa:	push   rdx
   14000d6ab:	mov    eax,0xa8096a47
   14000d6b0:	movabs rdx,0x86d687ced3375c48
   14000d6ba:	xchg   edi,eax
   14000d6bb:	pop    rbp
   14000d6bc:	in     eax,dx
   14000d6bd:	js     0x14000d65b
   14000d6bf:	loop   0x14000d6b3
   14000d6c1:	rex.WRXB test QWORD PTR [r12+r13*8],0x3a252117
   14000d6c9:	fstp   QWORD PTR [rsi]
   14000d6cb:	scas   al,BYTE PTR es:[rdi]
   14000d6cc:	fidivr DWORD PTR [rdi-0x3106c0e1]
   14000d6d2:	xlat   BYTE PTR ds:[rbx]
   14000d6d3:	(bad)  
   14000d6d4:	(bad)  
   14000d6d6:	jle    0x14000d6ee
   14000d6d8:	jg     0x14000d6d5
   14000d6da:	in     al,0x8b
   14000d6dc:	jo     0x14000d6d0
   14000d6de:	ficomp DWORD PTR [rbx]
   14000d6e0:	xor    DWORD PTR [rsi-0x2c99cb7f],eax
   14000d6e6:	(bad)  
   14000d6e7:	ds jg  0x14000d68d
   14000d6ea:	rex.WX add QWORD PTR [rsi],rdi
   14000d6ed:	cs mov edx,0x9e11562f
   14000d6f3:	ja     0x14000d6ef
   14000d6f5:	and    esp,ebp
   14000d6f7:	ds (bad) 
   14000d6f9:	pop    rcx
   14000d6fa:	sub    BYTE PTR [rip+0x200eb05],dl        # 0x14201c205
   14000d700:	imul   esp,DWORD PTR [rsi-0x30],0xbae6148d
   14000d707:	xor    esi,ebp
   14000d709:	jns    0x14000d787
   14000d70b:	sbb    edi,esi
   14000d70d:	(bad)  
   14000d70e:	jno    0x14000d71a
   14000d710:	repnz int3 
   14000d712:	mov    cl,0x3f
   14000d714:	(bad)  
   14000d715:	push   rdx
   14000d716:	sbb    BYTE PTR [rcx],ah
   14000d718:	push   rsp
   14000d719:	(bad)  
   14000d71a:	and    DWORD PTR [rsp+rdx*1-0x7b7fbf2e],ecx
   14000d721:	adc    ah,ah
   14000d723:	lods   eax,DWORD PTR ds:[rsi]
   14000d724:	xchg   ecx,eax
   14000d725:	(bad)  
   14000d726:	out    0x17,eax
   14000d728:	out    dx,al
   14000d729:	rex.WX adc BYTE PTR ds:[rbp-0x1b],dil
   14000d72e:	leave  
   14000d72f:	(bad)  
   14000d730:	rex.WRXB or rax,0x3eed7e8e
   14000d736:	add    BYTE PTR [rdi-0x3ffd8800],cl
   14000d73c:	mov    eax,0x2997c276
   14000d741:	ins    BYTE PTR es:[rdi],dx
   14000d742:	add    BYTE PTR [rdx],bl
   14000d744:	test   al,0xbb
   14000d746:	ret    0xf881
   14000d749:	or     eax,0x8353e0ac
   14000d74e:	and    al,0xd5
   14000d750:	cwde   
   14000d751:	and    al,0xf6
   14000d753:	xchg   ebp,eax
   14000d754:	and    al,0x1a
   14000d756:	test   eax,0x64a2585b
   14000d75b:	or     BYTE PTR [rdx-0x49],dh
   14000d75e:	xor    eax,0xb3ee0230
   14000d763:	icebp  
   14000d764:	test   DWORD PTR [rbx],ebx
   14000d766:	rex.RB ins DWORD PTR es:[rdi],dx
   14000d768:	sbb    edi,esp
   14000d76a:	je     0x14000d719
   14000d76c:	jmp    0x11ecf35c2
   14000d771:	mov    DWORD PTR [rbp+0x14],ebx
   14000d774:	ret    
   14000d775:	cwde   
   14000d776:	ret    0xcac5
   14000d779:	rex.WX (bad) 
   14000d77b:	rex.XB (bad) 
   14000d77d:	mul    BYTE PTR [rbp-0x5ae37f27]
   14000d783:	and    al,0xa2
   14000d785:	rex.W and cl,BYTE PTR [rsi+0x4496e224]
   14000d78c:	sbb    al,0x2b
   14000d78e:	(bad)  
   14000d78f:	sub    eax,0xbb494885
   14000d794:	enter  0x2c86,0xe2
   14000d798:	jmp    0x14000d7d1
   14000d79a:	jae    0x14000d795
   14000d79c:	std    
   14000d79d:	jge    0x14000d7a7
   14000d79f:	rex.WRXB scas rax,QWORD PTR es:[rdi]
   14000d7a1:	out    dx,al
   14000d7a2:	sbb    DWORD PTR [rax+0x79],edx
   14000d7a5:	(bad)  
   14000d7a6:	and    eax,edx
   14000d7a8:	imul   esi,DWORD PTR [rdi-0x4f],0xbc1ef773
   14000d7af:	jrcxz  0x14000d7b8
   14000d7b1:	fiadd  WORD PTR [rsi+rbp*8+0x4f8d3e27]
   14000d7b8:	(bad)  
   14000d7b9:	mov    esp,0xdd0f278a
   14000d7be:	mov    al,BYTE PTR [rcx-0x54]
   14000d7c1:	retf   0xdee
   14000d7c4:	sbb    ch,BYTE PTR [rdx+0x7e]
   14000d7c7:	movsxd ecx,DWORD PTR [rdx]
   14000d7c9:	mov    bh,0xdf
   14000d7cb:	mov    ch,0xf9
   14000d7cd:	or     eax,0xd18aa411
   14000d7d2:	rex.WX (bad) 
   14000d7d4:	loop   0x14000d77b
   14000d7d6:	(bad)  
   14000d7d7:	pop    rsi
   14000d7d8:	lea    ebx,[rbp-0x75df0845]
   14000d7de:	pop    rbx
   14000d7df:	stc    
   14000d7e0:	jns    0x14000d7ee
   14000d7e2:	(bad)  
   14000d7e3:	sub    DWORD PTR [rsi],edx
   14000d7e5:	fidiv  DWORD PTR [rcx]
   14000d7e7:	scas   al,BYTE PTR es:[rdi]
   14000d7e8:	pop    rcx
   14000d7e9:	in     al,dx
   14000d7ea:	(bad)
   14000d7ef:	loop   0x14000d844
   14000d7f1:	addr32 xor esi,edi
   14000d7f4:	retf   0xffc7
   14000d7f7:	add    al,0xf6
   14000d7f9:	add    DWORD PTR [rdx],esp
   14000d7fb:	adc    esi,edi
   14000d7fd:	sahf   
   14000d7fe:	shr    DWORD PTR [rbp+0xe54d7fa],0xf2
   14000d805:	pop    rbx
   14000d806:	ins    DWORD PTR es:[rdi],dx
   14000d807:	rep outs dx,BYTE PTR ds:[rsi]
   14000d809:	add    BYTE PTR [rax],bh
   14000d80b:	add    eax,0x81761560
   14000d810:	mov    al,0x2b
   14000d812:	add    dh,BYTE PTR [rsi]
   14000d814:	add    BYTE PTR [rbp-0x6c],cl
   14000d817:	or     bh,BYTE PTR [rdi+rdx*1-0x2dd81441]
   14000d81e:	(bad)  
   14000d81f:	imul   esp,DWORD PTR [rdx+0x46344e31],0x51c30ca3
   14000d829:	mov    ah,cl
   14000d82b:	sub    bl,al
   14000d82d:	xlat   BYTE PTR ds:[rbx]
   14000d82e:	rex.WRXB scas al,BYTE PTR es:[rdi]
   14000d830:	jrcxz  0x14000d7e3
   14000d832:	mov    bl,0x43
   14000d834:	lods   al,BYTE PTR ds:[rsi]
   14000d835:	(bad)  
   14000d836:	xor    ebx,DWORD PTR [rax]
   14000d838:	and    bl,BYTE PTR [rbx*2-0x748cdce5]
   14000d83f:	push   rcx
   14000d840:	sub    al,0x8f
   14000d842:	adc    ch,BYTE PTR [rsp+riz*4+0x6]
   14000d846:	(bad)  
   14000d847:	movabs ds:0xdecacde898a51c9e,eax
   14000d850:	out    0xec,al
   14000d852:	in     eax,dx
   14000d853:	mov    ch,0x10
   14000d855:	leave  
   14000d856:	repnz and al,0x55
   14000d859:	sub    DWORD PTR [rsi+rcx*1],eax
   14000d85c:	int3   
   14000d85d:	mov    ah,0xf3
   14000d85f:	jne    0x14000d84f
   14000d861:	test   esi,0x6c89d1b4
   14000d867:	rex.WRB jg 0x14000d8ce
   14000d86a:	mov    cl,0x87
   14000d86c:	ret    
   14000d86d:	cmp    edi,ebx
   14000d86f:	cwde   
   14000d870:	out    dx,eax
   14000d871:	mov    bh,0xd0
   14000d873:	jmp    0x18269c0be
   14000d878:	stos   DWORD PTR es:[rdi],eax
   14000d879:	lods   eax,DWORD PTR ds:[rsi]
   14000d87a:	adc    BYTE PTR [rcx+0x37091442],dl
   14000d880:	pop    rsp
   14000d881:	mov    bh,0x99
   14000d883:	mov    al,0xf1
   14000d885:	mov    ah,0x3c
   14000d887:	cmp    DWORD PTR [rax-0x32b99ceb],0xffffffe2
   14000d88e:	int    0x6f
   14000d890:	js     0x14000d8cf
   14000d892:	(bad)  
   14000d893:	fidivr WORD PTR [rdi+0x2f]
   14000d896:	(bad)  
   14000d897:	in     al,0xab
   14000d899:	lahf   
   14000d89a:	(bad)
   14000d89d:	pop    rsi
   14000d89e:	mov    esp,ebp
   14000d8a0:	mov    dh,0xb2
   14000d8a2:	mov    ebp,0x2fb3beec
   14000d8a7:	or     al,dh
   14000d8a9:	movabs eax,ds:0x834bfdfcc7e559bc
   14000d8b2:	test   BYTE PTR [rcx-0x1919eeb0],al
   14000d8b8:	(bad)  
   14000d8b9:	jo     0x14000d8a8
   14000d8bb:	jne    0x14000d894
   14000d8bd:	movabs ds:0xc13075777fc99fd7,eax
   14000d8c6:	out    dx,al
   14000d8c7:	pop    rsi
   14000d8c8:	or     edx,edi
   14000d8ca:	out    dx,eax
   14000d8cb:	sahf   
   14000d8cc:	rcr    DWORD PTR [rsi-0xc6fb8b9],0xcb
   14000d8d3:	add    al,dh
   14000d8d5:	and    BYTE PTR [rax-0x29f73ffc],al
   14000d8db:	or     BYTE PTR [rax+rsi*2-0x55],ah
   14000d8df:	std    
   14000d8e0:	ins    DWORD PTR es:[rdi],dx
   14000d8e1:	jno    0x14000d88e
   14000d8e3:	xor    eax,0x4571830a
   14000d8e8:	mov    ah,0xfd
   14000d8ea:	cmp    eax,0x942a006c
   14000d8ef:	jnp    0x14000d968
   14000d8f1:	sub    BYTE PTR [rax-0x4d],cl
   14000d8f4:	outs   dx,BYTE PTR ds:[rsi]
   14000d8f5:	jge    0x14000d891
   14000d8f7:	sbb    cl,BYTE PTR [rbx+rdx*1-0x3acf3e73]
   14000d8fe:	cli    
   14000d8ff:	rex.RX (bad) 
   14000d901:	(bad)  
   14000d903:	jg     0x14000d894
   14000d905:	jrcxz  0x14000d8ea
   14000d907:	(bad)  
   14000d908:	sub    al,0xe3
   14000d90a:	(bad)  
   14000d90b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d90c:	(bad)  
   14000d90d:	scas   al,BYTE PTR es:[rdi]
   14000d90e:	fbstp  TBYTE PTR [rip+0xffffffffbdbeb983]        # 0xfdbf9297
   14000d914:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d915:	outs   dx,DWORD PTR ds:[rsi]
   14000d916:	mov    eax,0xb2b1097e
   14000d91b:	scas   al,BYTE PTR es:[rdi]
   14000d91c:	in     eax,dx
   14000d91d:	rol    ebp,0x2e
   14000d920:	(bad)  
   14000d921:	mov    edx,0x5d6fdaad
   14000d926:	mov    edi,0xeb7e8fbb
   14000d92b:	ret    0x4ff
   14000d92e:	neg    DWORD PTR [rdi-0x6a65b8a8]
   14000d934:	retf   
   14000d935:	scas   al,BYTE PTR es:[rdi]
   14000d936:	es ret 0xc73d
   14000d93a:	(bad)  
   14000d93b:	repnz out dx,eax
   14000d93d:	setl   BYTE PTR [rdi+rax*8+0x38]
   14000d942:	(bad)  
   14000d943:	rol    BYTE PTR [rax],1
   14000d945:	(bad)  
   14000d946:	in     al,dx
   14000d947:	mov    cl,0xd3
   14000d949:	js     0x14000d92b
   14000d94b:	scas   al,BYTE PTR es:[rdi]
   14000d94c:	outs   dx,DWORD PTR ds:[rsi]
   14000d94d:	loope  0x14000d905
   14000d94f:	stos   DWORD PTR es:[rdi],eax
   14000d950:	data16 icebp 
   14000d952:	mov    dh,0x1b
   14000d954:	mul    eax
   14000d956:	xchg   esi,eax
   14000d957:	add    esi,ebx
   14000d959:	out    dx,al
   14000d95a:	fisubr DWORD PTR [rdi+rsi*4-0x22376b60]
   14000d961:	mov    ebx,?
   14000d963:	ins    DWORD PTR es:[rdi],dx
   14000d964:	out    dx,eax
   14000d965:	xchg   ebx,esi
   14000d967:	(bad)  
   14000d968:	(bad)  
   14000d969:	repz fdivr DWORD PTR [rbp-0x6b]
   14000d96d:	push   rsp
   14000d96e:	call   0x126e2a742
   14000d973:	(bad)  
   14000d974:	mov    edi,0xfdde3f04
   14000d979:	(bad)  
   14000d97a:	ds (bad) 
   14000d97c:	stc    
   14000d97d:	(bad)  
   14000d97e:	ret    
   14000d97f:	jge    0x14000d988
   14000d981:	fild   WORD PTR [rsi+0x247d3313]
   14000d987:	enter  0x5d20,0xf8
   14000d98b:	cs pushf 
   14000d98d:	test   DWORD PTR [rax+rdx*2+0x3de4dafc],0x901b46fa
   14000d998:	xor    al,0x90
   14000d99a:	adc    BYTE PTR [rax-0x4b],ch
   14000d99d:	(bad)  
   14000d99f:	idiv   dl
   14000d9a1:	call   0x1b3b9a673
   14000d9a6:	(bad)  
   14000d9a7:	and    al,0x14
   14000d9a9:	movabs ds:0xddda2cececc2d337,eax
   14000d9b2:	(bad)  
   14000d9b3:	rex.R fadd QWORD PTR [rsi]
   14000d9b6:	ins    BYTE PTR es:[rdi],dx
   14000d9b7:	fstp   TBYTE PTR [rbp-0x7e]
   14000d9ba:	ret    0xa400
   14000d9bd:	fcomp  DWORD PTR [rsi+0x6162b801]
   14000d9c3:	add    edx,eax
   14000d9c5:	rex.W (bad) 
   14000d9c7:	(bad)  
   14000d9c8:	bnd ret 0x6c
   14000d9cc:	lods   eax,DWORD PTR ds:[rsi]
   14000d9cd:	or     DWORD PTR [rcx+0x6a],ecx
   14000d9d0:	xor    BYTE PTR [rsi],bl
   14000d9d2:	fcomp  DWORD PTR [eax]
   14000d9d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d9d6:	clc    
   14000d9d7:	(bad)  
   14000d9d8:	mov    edi,0xed7626ff
   14000d9dd:	in     al,dx
   14000d9de:	loope  0x14000d96b
   14000d9e0:	(bad)  
   14000d9e1:	jp     0x14000da00
   14000d9e3:	test   ah,0xb6
   14000d9e6:	lahf   
   14000d9e7:	repz mov bl,0xbc
   14000d9ea:	jmp    0x134c7b399
   14000d9ef:	pop    rbx
   14000d9f0:	bswap  esp
   14000d9f2:	rex.WRXB frstor [r15-0x6c]
   14000d9f6:	push   0xfffffffffffffffc
   14000d9f8:	(bad)  
   14000d9fa:	rex.WRXB loope 0x14000d9e4
   14000d9fd:	(bad)  
   14000d9fe:	bnd jle 0x14000d9fd
   14000da01:	cld    
   14000da02:	sub    ecx,DWORD PTR [rsi]
   14000da04:	loope  0x14000da3b
   14000da06:	iret   
   14000da07:	frstpm(287 only) 
   14000da09:	(bad)  
   14000da0a:	or     dl,BYTE PTR [rcx]
   14000da0c:	test   BYTE PTR [rax+rdx*2-0x48],dl
   14000da10:	lock idiv dh
   14000da13:	hlt    
   14000da14:	add    dx,WORD PTR [rbp-0x17ad6b2e]
   14000da1b:	hlt    
   14000da1c:	jp     0x14000da96
   14000da1e:	fdivrp st(3),st
   14000da20:	outs   dx,DWORD PTR ds:[rsi]
   14000da21:	ret    0x16fb
   14000da24:	(bad)  
   14000da25:	icebp  
   14000da26:	push   rdi
   14000da27:	lahf   
   14000da28:	mov    esi,0x7b9a5f03
   14000da2d:	add    eax,0x18755e4e
   14000da32:	out    0xf4,eax
   14000da34:	or     BYTE PTR [rdx],ch
   14000da36:	call   0xcec70dd3
   14000da3b:	in     eax,dx
   14000da3c:	and    ebx,DWORD PTR [rax-0x34]
   14000da3f:	ret    
   14000da40:	xchg   ecx,esi
   14000da42:	push   0x55
   14000da44:	ins    DWORD PTR es:[rdi],dx
   14000da45:	xor    dh,BYTE PTR [rip+0xffffffffd332550f]        # 0x113332f5a
   14000da4b:	(bad)  
   14000da4c:	add    edx,DWORD PTR [rax-0x5b]
   14000da4f:	pop    rdx
   14000da50:	nop
   14000da51:	fld    QWORD PTR [rdi]
   14000da53:	rex.WRB mov r14b,0xb3
   14000da56:	(bad)  
   14000da57:	rex.WB xor rax,0x7f0ca386
   14000da5d:	js     0x14000da56
   14000da5f:	xchg   ebx,eax
   14000da60:	fdiv   DWORD PTR [rbp-0x900784d]
   14000da66:	(bad)  
   14000da67:	(bad)  
   14000da68:	pop    rbp
   14000da69:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000da6a:	adc    edi,DWORD PTR [rbp-0x3d4e45d0]
   14000da70:	(bad)  
   14000da71:	mov    esp,0x9cec1aec
   14000da76:	imul   esp,ebx,0xf37fa3
   14000da7c:	outs   dx,BYTE PTR ds:[rsi]
   14000da7d:	cmp    esi,DWORD PTR [rax]
   14000da7f:	(bad)
   14000da83:	(bad)  
   14000da84:	or     DWORD PTR [rip+0x74530849],edx        # 0x1b453e2d3
   14000da8a:	sub    al,0x2
   14000da8c:	out    0xdf,eax
   14000da8e:	(bad)  
   14000da90:	retf   0xf838
   14000da93:	cmp    al,0x52
   14000da95:	fmul   st,st(6)
   14000da97:	shr    DWORD PTR [rbx-0x4381209],0xde
   14000da9e:	mov    ecx,0xff7f0380
   14000daa3:	cmp    esp,ebx
   14000daa5:	stc    
   14000daa6:	rcl    BYTE PTR [rcx+0x1c],1
   14000daa9:	cmp    eax,0xa49c2af8
   14000daae:	add    al,0xda
   14000dab0:	sbb    BYTE PTR [rax],cl
   14000dab2:	(bad)  
   14000dab3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dab4:	(bad)  
   14000dab5:	(bad)  
   14000dab6:	out    dx,al
   14000dab7:	sub    esp,DWORD PTR [rdx-0x9]
   14000daba:	jge    0x14000db20
   14000dabc:	lahf   
   14000dabd:	cmc    
   14000dabe:	pop    rax
   14000dabf:	test   al,0x2e
   14000dac1:	jle    0x14000db29
   14000dac3:	pop    rbx
   14000dac4:	mov    al,0x1
   14000dac6:	test   al,0xd0
   14000dac8:	and    al,0x7e
   14000daca:	fisttp WORD PTR [rcx-0x59]
   14000dacd:	mov    ch,0x41
   14000dacf:	xchg   edx,eax
   14000dad0:	push   0xffffffffee19268c
   14000dad5:	js     0x14000db4f
   14000dad7:	sbb    DWORD PTR [rdi-0x4],esi
   14000dada:	repz push rdi
   14000dadc:	xor    al,0x1e
   14000dade:	rex.XB imul eax,DWORD PTR [r11-0xcde6db7],0xffffffe3
   14000dae6:	sar    DWORD PTR [rsi+0x47c81023],1
   14000daec:	add    BYTE PTR [rdx+0x6e20bfce],cl
   14000daf2:	lahf   
   14000daf3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000daf4:	(bad)  
   14000daf5:	frstor [rsi+0x414ea54d]
   14000dafb:	adc    esp,esi
   14000dafd:	pop    rsi
   14000dafe:	or     edx,edi
   14000db00:	jmp    0xeddaffac
   14000db05:	or     ch,ch
   14000db07:	jbe    0x14000dad9
   14000db09:	rex.XB (bad) 
   14000db0b:	cmp    eax,DWORD PTR [rdx-0x1894150f]
   14000db11:	icebp  
   14000db12:	mov    ebx,DWORD PTR [rcx+0x36a743c6]
   14000db18:	jo     0x14000db8d
   14000db1a:	jnp    0x14000db23
   14000db1c:	rcl    BYTE PTR [rsi-0x7c],cl
   14000db1f:	sub    BYTE PTR [rdx],ah
   14000db21:	imul   rax,QWORD PTR [rdi],0x7b6e9f17
   14000db28:	mov    edi,0xf987eb5a
   14000db2d:	ret    0x513c
   14000db30:	stos   DWORD PTR es:[rdi],eax
   14000db31:	test   DWORD PTR [rcx],ebx
   14000db33:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000db34:	lock cli 
   14000db36:	xlat   BYTE PTR ds:[rbx]
   14000db37:	mov    edi,0x791e8716
   14000db3c:	or     BYTE PTR [rdi-0xb],bh
   14000db3f:	test   DWORD PTR [rdi+0x6f43bee3],ecx
   14000db45:	ret    0xb063
   14000db48:	sub    esi,edx
   14000db4a:	mov    dh,BYTE PTR [rax+0x58bafcd]
   14000db50:	cmp    ecx,DWORD PTR [rsi+riz*2+0x40]
   14000db54:	rex.WX out 0x7,eax
   14000db57:	lods   al,BYTE PTR ds:[rsi]
   14000db58:	inc    BYTE PTR [rsi]
   14000db5a:	push   rbp
   14000db5b:	(bad)  
   14000db5c:	popf   
   14000db5d:	imul   eax,DWORD PTR [rsi+0x4113400d],0x3f178047
   14000db67:	mov    ecx,0xd4936495
   14000db6c:	loopne 0x14000db3a
   14000db6e:	rex.RX (bad) 
   14000db70:	lea    ecx,[rbx+riz*8-0x6]
   14000db74:	pop    rbp
   14000db75:	mov    dh,0xcd
   14000db77:	test   eax,0xdf7fe10d
   14000db7c:	jae    0x14000db8a
   14000db7e:	(bad)  
   14000db7f:	push   rdi
   14000db80:	(bad)  
   14000db81:	jns    0x14000db32
   14000db83:	jg     0x14000db3a
   14000db85:	cmp    eax,0xfd783e5c
   14000db8a:	jrcxz  0x14000dbbf
   14000db8c:	mov    ch,BYTE PTR [rax]
   14000db8e:	cmp    al,BYTE PTR [rsi]
   14000db90:	mov    ebp,0x60421041
   14000db95:	mov    esi,0x6efbe31b
   14000db9a:	fadd   DWORD PTR [rbp+0x51c30058]
   14000dba0:	(bad)  
   14000dba1:	sbb    esi,DWORD PTR [rsi-0xa]
   14000dba4:	lock shl dl,1
   14000dba7:	(bad)  
   14000dba8:	outs   dx,BYTE PTR ds:[rsi]
   14000dba9:	mov    eax,0xdf1d166a
   14000dbae:	mov    esi,0xeb0be426
   14000dbb3:	popf   
   14000dbb4:	push   rdi
   14000dbb5:	jnp    0x14000db76
   14000dbb7:	hlt    
   14000dbb8:	jge    0x14000db44
   14000dbba:	clc    
   14000dbbb:	add    esp,ecx
   14000dbbd:	xchg   DWORD PTR [rcx+0x52],ebp
   14000dbc0:	fisub  DWORD PTR [rsi]
   14000dbc2:	shl    DWORD PTR [rbp-0x31],0xbb
   14000dbc6:	add    edi,ebp
   14000dbc8:	popf   
   14000dbc9:	popf   
   14000dbca:	ret    
   14000dbcb:	sbb    eax,0xe85ff99f
   14000dbd0:	in     al,dx
   14000dbd1:	jge    0x14000dbfe
   14000dbd3:	(bad)  
   14000dbd4:	mov    ebx,DWORD PTR [rbx+0x58]
   14000dbd7:	sbb    ecx,DWORD PTR [rcx+riz*1]
   14000dbda:	std    
   14000dbdb:	rex.W
   14000dbdc:	out    0xc4,al
   14000dbdf:	scas   eax,DWORD PTR es:[rdi]
   14000dbe0:	mov    ecx,DWORD PTR [rcx-0x549e5ec2]
   14000dbe6:	sahf   
   14000dbe7:	or     esi,DWORD PTR [rbx+0x6a006c35]
   14000dbed:	xor    al,0xb9
   14000dbef:	xchg   edx,eax
   14000dbf0:	jbe    0x14000dbef
   14000dbf2:	js     0x14000dba1
   14000dbf4:	or     DWORD PTR [rcx-0x56],ebp
   14000dbf7:	jno    0x14000dc5b
   14000dbf9:	jne    0x14000db87
   14000dbfb:	mov    ebp,0xd6f9ba3b
   14000dc00:	xchg   ebx,eax
   14000dc01:	jmp    0x14000dc16
   14000dc03:	fdiv   st(7),st
   14000dc05:	(bad)  
   14000dc06:	sub    bh,BYTE PTR [rsi-0xe]
   14000dc09:	push   rbp
   14000dc0a:	xchg   DWORD PTR [rdx+0x3b],ecx
   14000dc0d:	xchg   esi,eax
   14000dc0e:	(bad)  [rcx-0x6577673]
   14000dc14:	(bad)  
   14000dc15:	sahf   
   14000dc16:	jl     0x14000dc40
   14000dc18:	rex.WRXB out 0x35,al
   14000dc1b:	mov    ebp,0xece83bc8
   14000dc20:	(bad)  
   14000dc21:	mov    BYTE PTR [rdi-0x4226b154],0xf8
   14000dc28:	rex.X and BYTE PTR [rdx],dl
   14000dc2b:	clc    
   14000dc2c:	ret    
   14000dc2d:	iret   
   14000dc2e:	(bad)  
   14000dc2f:	mov    gs,WORD PTR [rdi-0x348f4b32]
   14000dc35:	sahf   
   14000dc36:	sbb    DWORD PTR [rsi+riz*1+0x19],ecx
   14000dc3a:	div    dh
   14000dc3c:	pop    rbx
   14000dc3d:	js     0x14000dca9
   14000dc3f:	jne    0x14000dbc3
   14000dc41:	xor    al,0xd5
   14000dc43:	sar    BYTE PTR [rdx-0x18eb4de8],1
   14000dc49:	loope  0x14000dc1d
   14000dc4b:	outs   dx,DWORD PTR ds:[rsi]
   14000dc4c:	retf   
   14000dc4d:	cmp    BYTE PTR [rdx+rsi*8+0x527ee350],dl
   14000dc54:	rex.WX mov spl,0xbb
   14000dc57:	cmp    eax,0x7fddec
   14000dc5c:	out    dx,eax
   14000dc5d:	jp     0x14000dcaa
   14000dc5f:	(bad)  
   14000dc60:	lods   eax,DWORD PTR ds:[rsi]
   14000dc61:	rex.WRXB (bad) 
   14000dc63:	xor    eax,0xf15bfd3a
   14000dc68:	jo     0x14000dcd9
   14000dc6a:	(bad)  
   14000dc6b:	push   rsi
   14000dc6c:	(bad)  
   14000dc6d:	xlat   BYTE PTR ds:[rbx]
   14000dc6e:	and    DWORD PTR [rbp+rbx*1-0x7f614aa2],ecx
   14000dc75:	fwait
   14000dc76:	(bad)  
   14000dc77:	out    dx,eax
   14000dc78:	cmp    al,0x0
   14000dc7a:	push   0x38
   14000dc7c:	(bad)  
   14000dc7d:	stc    
   14000dc7e:	jae    0x14000dce1
   14000dc80:	test   DWORD PTR ss:[rip+0x4d151340],ecx        # 0x18d15efc7
   14000dc87:	cli    
   14000dc88:	and    eax,0x4836b4e6
   14000dc8d:	mov    ch,0xc1
   14000dc8f:	icebp  
   14000dc90:	lea    esi,[rcx]
   14000dc92:	test   bh,0x77
   14000dc95:	repnz in eax,dx
   14000dc97:	rex.WB stos BYTE PTR es:[rdi],al
   14000dc99:	mov    cl,0x34
   14000dc9b:	rol    DWORD PTR [rsi+0x79],cl
   14000dc9e:	sbb    eax,0xc8108ad1
   14000dca3:	(bad)  
   14000dca4:	push   rbx
   14000dca5:	sbb    edx,0xca88040f
   14000dcab:	repz in al,dx
   14000dcad:	ins    BYTE PTR es:[rdi],dx
   14000dcae:	mov    esp,0x7ae1ca1f
   14000dcb3:	rex (bad) 
   14000dcb5:	sbb    BYTE PTR [rbx],ah
   14000dcb7:	repnz movsxd edx,DWORD PTR [rsi+0x2f]
   14000dcbb:	and    esp,ecx
   14000dcbd:	imul   esi,ebx,0x2f
   14000dcc0:	hlt    
   14000dcc1:	movsxd eax,esp
   14000dcc3:	rex.WX
   14000dcc4:	rex.X mov ecx,0x4ea589d1
   14000dcca:	test   BYTE PTR [rdi],al
   14000dccc:	rex.WRX or al,0x91
   14000dccf:	imul   eax,DWORD PTR [rdx-0x1a],0x4534d326
   14000dcd6:	(bad)  
   14000dcd7:	outs   dx,BYTE PTR ds:[rsi]
   14000dcd8:	rex.WRXB cld 
   14000dcda:	cmc    
   14000dcdb:	pop    rdx
   14000dcdc:	jg     0x14000dd48
   14000dcde:	sahf   
   14000dcdf:	rex.WX
   14000dce0:	jmp    FWORD PTR ds:[rsi]
   14000dce3:	and    BYTE PTR [rax],dl
   14000dce5:	mov    bh,0x5a
   14000dce7:	pop    rax
   14000dce8:	fdivr  QWORD PTR [rcx-0x248310f5]
   14000dcee:	in     eax,dx
   14000dcef:	fdiv   st,st(7)
   14000dcf1:	mov    ecx,0x41b98bff
   14000dcf6:	mov    bh,BYTE PTR [rbx-0x6]
   14000dcf9:	(bad)  
   14000dcfa:	icebp  
   14000dcfb:	in     al,0xea
   14000dcfd:	cmp    DWORD PTR [rdi+0x13eb9744],esi
   14000dd03:	jo     0x14000dc90
   14000dd05:	jl     0x14000dceb
   14000dd07:	(bad)  
   14000dd08:	add    BYTE PTR [rbx+0x36082ff],cl
   14000dd0e:	push   rax
   14000dd0f:	sbb    DWORD PTR [rdx-0x5cffcff6],0x39d8da09
   14000dd19:	in     eax,0x27
   14000dd1b:	(bad)  
   14000dd1c:	or     DWORD PTR [rsi],ecx
   14000dd1e:	int3   
   14000dd1f:	(bad)  
   14000dd20:	(bad)  
   14000dd21:	shl    BYTE PTR [rax+0x34],0xb1
   14000dd25:	rex.WXB
   14000dd26:	rex.WRX (bad) 
   14000dd28:	xchg   ebx,eax
   14000dd29:	push   rsi
   14000dd2a:	in     al,dx
   14000dd2b:	(bad)  
   14000dd2c:	sub    esi,DWORD PTR [rsi+0x5f]
   14000dd2f:	sbb    BYTE PTR [rbp-0x54],bh
   14000dd32:	pop    rbp
   14000dd33:	(bad)  
   14000dd35:	mul    DWORD PTR [rbp+0x67480c97]
   14000dd3b:	xor    BYTE PTR [rsi+0xd],ch
   14000dd3e:	cmp    bh,BYTE PTR [rbx]
   14000dd40:	jne    0x14000dd78
   14000dd42:	(bad)  
   14000dd43:	mov    WORD PTR [rbx],fs
   14000dd45:	adc    rax,0x51501359
   14000dd4b:	movabs ds:0xf3d85e9fdab70f1f,eax
   14000dd54:	jbe    0x14000dd90
   14000dd56:	add    DWORD PTR [rcx+0x11dab421],ebp
   14000dd5c:	jp     0x14000dd3b
   14000dd5e:	sbb    bl,ah
   14000dd60:	push   rcx
   14000dd61:	(bad)  
   14000dd62:	stos   DWORD PTR es:[rdi],eax
   14000dd63:	pop    bx
   14000dd65:	pop    rax
   14000dd66:	sbb    DWORD PTR [rip+0x5cb67ed0],esp        # 0x19cb75c3c
   14000dd6c:	ficom  WORD PTR [rdi+0x51]
   14000dd6f:	add    al,0x3
   14000dd71:	push   rax
   14000dd72:	cmc    
   14000dd73:	cmp    cl,ah
   14000dd75:	jge    0x14000dd50
   14000dd77:	rex.R cld 
   14000dd79:	jne    0x14000dd1c
   14000dd7b:	outs   dx,DWORD PTR ds:[rsi]
   14000dd7c:	cs (bad) 
   14000dd7e:	xor    BYTE PTR [rax],dl
   14000dd80:	sub    ch,BYTE PTR [rdx-0x4b]
   14000dd83:	xor    BYTE PTR [rbx],bh
   14000dd85:	mov    bh,0x3
   14000dd87:	fcomip st,st(5)
   14000dd89:	stos   BYTE PTR es:[rdi],al
   14000dd8a:	push   rdi
   14000dd8b:	(bad)  
   14000dd8c:	out    0xd7,eax
   14000dd8e:	out    dx,eax
   14000dd8f:	rex.RB jmp QWORD PTR [r9+0x55e0f0a7]
   14000dd96:	scas   eax,DWORD PTR es:[rdi]
   14000dd97:	(bad)
   14000dd9a:	lahf   
   14000dd9b:	test   BYTE PTR [rsi+0x6d],cl
   14000dd9e:	mov    edi,0x1f84dc00
   14000dda3:	adc    DWORD PTR [rdi+0x6ff966ff],edx
   14000dda9:	adc    DWORD PTR [rsi],esi
   14000ddab:	mov    ebx,0xd838c2d
   14000ddb0:	rcl    BYTE PTR [rdx+rcx*2],0x46
   14000ddb4:	rol    ch,0xf6
   14000ddb7:	fstp   TBYTE PTR [rcx]
   14000ddb9:	and    eax,DWORD PTR [rbp+rdx*4-0x51e475af]
   14000ddc0:	sahf   
   14000ddc1:	leave  
   14000ddc2:	mov    bh,0x27
   14000ddc4:	mov    DWORD PTR [rsi+0x21],esi
   14000ddc7:	ret    0x443e
   14000ddca:	(bad)  
   14000ddcb:	test   DWORD PTR [rdx-0x14],eax
   14000ddce:	xchg   esp,eax
   14000ddcf:	movabs al,ds:0x618c999f145cc1f2
   14000ddd8:	mov    BYTE PTR [rbx],0x98
   14000dddb:	leave  
   14000dddc:	or     BYTE PTR [rdx],bh
   14000ddde:	rex.WXB in eax,dx
   14000dde0:	xor    al,0xd5
   14000dde2:	movabs al,ds:0x6b41ddaa08c850c3
   14000ddeb:	data16 (bad) 
   14000dded:	lods   eax,DWORD PTR ds:[rsi]
   14000ddee:	cdq    
   14000ddef:	pop    rcx
   14000ddf0:	adc    rax,0x246b18c1
   14000ddf6:	jl     0x14000dd78
   14000ddf8:	mov    WORD PTR [rax-0x5fb637ae],ds
   14000ddfe:	(bad)  
   14000ddff:	shr    eax,0xe7
   14000de02:	(bad)  
   14000de03:	je     0x14000dddf
   14000de05:	xor    DWORD PTR [rdx],edi
   14000de07:	popf   
   14000de08:	sbb    BYTE PTR [rbx+0x4d58da67],bh
   14000de0e:	mov    ah,0x9b
   14000de10:	rex.RX imul r8d,DWORD PTR [rbp+0x4dc80064],0x5c
   14000de18:	jle    0x14000de95
   14000de1a:	lods   al,BYTE PTR ds:[rsi]
   14000de1b:	lock (bad) 
   14000de1d:	popf   
   14000de1e:	pop    rdi
   14000de1f:	jnp    0x14000dde0
   14000de21:	fnstcw WORD PTR [rbx]
   14000de23:	movabs al,ds:0xe2cecccc628a9a5a
   14000de2c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000de2d:	pop    rbx
   14000de2e:	pop    rsi
   14000de2f:	(bad)  
   14000de30:	sbb    eax,0x27c2df0b
   14000de35:	out    dx,al
   14000de36:	mov    edx,0xdba5ed03
   14000de3b:	jno    0x14000de0c
   14000de3d:	sbb    DWORD PTR [rbp+0x33aafac1],eax
   14000de43:	add    BYTE PTR [rsi],al
   14000de45:	adc    al,0x55
   14000de47:	sti    
   14000de48:	add    BYTE PTR [rax-0x2ccf461a],ch
   14000de4e:	(bad)  
   14000de4f:	add    edx,eax
   14000de51:	rex pop rsi
   14000de53:	and    cl,cl
   14000de55:	mov    ebx,0x1402c593
   14000de5a:	ficom  DWORD PTR [rax]
   14000de5c:	(bad)  
   14000de5d:	adc    ecx,DWORD PTR [rbp-0x27eea13b]
   14000de63:	movsxd ecx,DWORD PTR [rcx+rax*8]
   14000de66:	add    BYTE PTR [rcx+0xa3bf001],bh
   14000de6c:	push   rax
   14000de6d:	pop    rsi
   14000de6e:	jae    0x14000de7a
   14000de70:	add    al,0x6b
   14000de72:	rex.WX adc cl,al
   14000de75:	or     al,0xce
   14000de77:	rex (bad) 
   14000de7a:	ins    DWORD PTR es:[rdi],dx
   14000de7b:	push   rax
   14000de7c:	mov    ecx,DWORD PTR [rbx]
   14000de7e:	jp     0x14000deb1
   14000de80:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000de81:	mov    esp,0x133185d0
   14000de86:	call   0x1b2b0f94c
   14000de8b:	or     ch,BYTE PTR [rdx+0x696f41dd]
   14000de91:	btr    ebx,0x4b
   14000de95:	adc    BYTE PTR [rax],0xf0
   14000de98:	rcr    DWORD PTR [rsi-0x37],cl
   14000de9b:	(bad)
   14000de9e:	fcomip st,st(5)
   14000dea0:	jb     0x14000ded2
   14000dea2:	rex.B int 0x4f
   14000dea5:	rex.WRX
   14000dea6:	fs rex.R
   14000dea8:	sbb    r12d,DWORD PTR [r13-0x274e7123]
   14000deaf:	outs   dx,DWORD PTR ds:[rsi]
   14000deb0:	(bad)  
   14000deb1:	nop
   14000deb2:	(bad)  
   14000deb3:	mov    esp,0xfa3e37e6
   14000deb8:	cs mov esp,0x3d85530f
   14000debe:	(bad)
   14000dec1:	repnz xor al,0x8b
   14000dec4:	mov    edi,0x435009ec
   14000dec9:	(bad)  
   14000deca:	mov    ebx,0xe05e2e4f
   14000decf:	(bad)  
   14000ded0:	rex.XB xchg r9d,esi
   14000ded3:	out    dx,al
   14000ded4:	sbb    eax,0xcfc7f8f3
   14000ded9:	call   FWORD PTR [rip+0xffffffffc7cffb16]        # 0x107d0d9f5
   14000dedf:	(bad)  
   14000dee1:	rex.WRX sbb al,0x3b
   14000dee4:	jbe    0x14000df02
   14000dee6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dee7:	xchg   ebp,eax
   14000dee8:	in     eax,0xf3
   14000deea:	lahf   
   14000deeb:	enter  0x9fff,0x1b
   14000deef:	mov    esp,0x532cbfa6
   14000def4:	test   DWORD PTR [rip+0xffffffffc2c68540],ecx        # 0x102c7643a
   14000defa:	rex.WB jle 0x14000df57
   14000defd:	mov    eax,0xa4194c0d
   14000df02:	sbb    dh,BYTE PTR [rbx-0x63]
   14000df05:	loop   0x14000dedd
   14000df07:	jns    0x14000defa
   14000df09:	push   0x40fcb6af
   14000df0e:	rex.RB adc DWORD PTR [r8+rcx*1],0x15f5e8dc
   14000df16:	sar    BYTE PTR [rax-0x23],1
   14000df19:	cmp    eax,0x9caec47c
   14000df1e:	sbb    ecx,DWORD PTR [rcx+0x9]
   14000df21:	movsxd ecx,DWORD PTR [rdx+rsi*4]
   14000df24:	sub    al,0x43
   14000df26:	xchg   edx,eax
   14000df27:	and    al,0x76
   14000df29:	in     eax,dx
   14000df2a:	cmp    bl,BYTE PTR [rdi+0x1ba418df]
   14000df30:	imul   ebx,DWORD PTR [rax],0xffffffae
   14000df33:	popf   
   14000df34:	rex.XB jnp 0x14000dfad
   14000df37:	add    DWORD PTR [rbx],edi
   14000df39:	(bad)  
   14000df3a:	sbb    al,0x42
   14000df3c:	(bad)  
   14000df3d:	push   0xffffffffffffffc1
   14000df3f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000df40:	pop    rcx
   14000df41:	movsxd edx,DWORD PTR [rbx]
   14000df43:	adc    BYTE PTR [rax-0x34],0x3d
   14000df47:	xor    BYTE PTR [rax],ch
   14000df49:	fsub   st(3),st
   14000df4b:	xor    dl,ch
   14000df4d:	mov    eax,0xef9852d5
   14000df52:	(bad)  
   14000df53:	sbb    BYTE PTR [rcx+0xa70ffde],bh
   14000df59:	mov    esp,0x4fdc5942
   14000df5e:	sub    al,0xaf
   14000df60:	(bad)  
   14000df61:	xor    BYTE PTR [rcx+0x6b],cl
   14000df64:	ret    0xcade
   14000df67:	in     eax,0x6f
   14000df69:	mov    edx,0x3359baf
   14000df6e:	stos   BYTE PTR es:[rdi],al
   14000df6f:	mov    ah,0xdf
   14000df72:	pop    rbx
   14000df73:	add    al,dl
   14000df75:	cmp    al,dl
   14000df77:	loope  0x14000df90
   14000df79:	fmul   QWORD PTR [rdx+rdi*8]
   14000df7c:	(bad)  
   14000df7d:	mov    ebp,0xf84b64e8
   14000df82:	retf   0x1781
   14000df85:	loope  0x14000df38
   14000df87:	adc    esp,DWORD PTR [rdi+0x7c9b6931]
   14000df8d:	mov    esi,0x536645e8
   14000df93:	fadd   DWORD PTR [rax]
   14000df95:	xor    al,0xd1
   14000df97:	in     al,0x96
   14000df99:	cmp    dl,BYTE PTR [rcx+0x19]
   14000df9c:	add    al,BYTE PTR [rsi+0x275cc6a9]
   14000dfa2:	cs mov dh,0x93
   14000dfa5:	fwait
   14000dfa6:	sbb    eax,0x822614e8
   14000dfab:	adc    cl,BYTE PTR [rbp-0x5f]
   14000dfae:	and    BYTE PTR [rsp+rax*4+0x7861af1c],al
   14000dfb5:	not    BYTE PTR [rsi+rdx*8]
   14000dfb8:	(bad)  
   14000dfb9:	xor    BYTE PTR ss:[rcx+0x26],cl
   14000dfbd:	and    BYTE PTR [rdx],ah
   14000dfbf:	sub    QWORD PTR [rcx],rdx
   14000dfc2:	(bad)  
   14000dfc3:	xor    DWORD PTR [rdx],edi
   14000dfc5:	popf   
   14000dfc6:	(bad)  
   14000dfc7:	mov    edx,0x67662edd
   14000dfcc:	addr32 mov eax,ds:0x3870c6b5
   14000dfd2:	(bad)  
   14000dfd3:	js     0x14000e011
   14000dfd5:	(bad)  
   14000dfd6:	es ret 0x1b00
   14000dfda:	addr32 xchg esi,eax
   14000dfdc:	xor    esi,ebx
   14000dfde:	pop    rax
   14000dfdf:	ret    
   14000dfe0:	shl    BYTE PTR [rcx+0x7b77101b],cl
   14000dfe6:	xor    BYTE PTR [rdx],bh
   14000dfe8:	or     DWORD PTR [rip+0x1cdb5e5],0x2b        # 0x141ce95d4
   14000dfef:	js     0x14000e068
   14000dff1:	scas   al,BYTE PTR es:[rdi]
   14000dff2:	and    DWORD PTR [rcx],0xaf0a00
   14000dff8:	add    BYTE PTR [rdx],ah
   14000dffa:	and    eax,0x908ed331
   14000dfff:	mov    edx,0x137936f3
   14000e004:	rol    DWORD PTR [rax+0xdd70448],0xc
   14000e00b:	es sub esi,edx
   14000e00e:	(bad)  
   14000e00f:	xchg   ebx,eax
   14000e010:	mov    edx,0x2a77c338
   14000e015:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e016:	outs   dx,BYTE PTR ds:[rsi]
   14000e017:	out    0xf2,al
   14000e019:	movabs ds:0x4e2d61ac59b6f76,eax
   14000e022:	shr    BYTE PTR [rax+0x775ef616],0x13
   14000e029:	(bad)  
   14000e02a:	rol    DWORD PTR [rdi-0x6f],1
   14000e02d:	ds icebp 
   14000e02f:	sbb    DWORD PTR [rdi+rsi*8-0x63],ebx
   14000e033:	out    dx,eax
   14000e034:	rex.RXB sti 
   14000e036:	rcl    DWORD PTR [rip+0x1c76ba00],1        # 0x15c779a3c
   14000e03c:	(bad)  
   14000e03d:	push   rsi
   14000e03f:	(bad)  
   14000e040:	add    edx,eax
   14000e042:	mov    bpl,0xd0
   14000e045:	adc    dl,BYTE PTR [rax+0x219003f7]
   14000e04b:	or     al,0x33
   14000e04d:	push   rbx
   14000e04e:	repz add BYTE PTR [rax],cl
   14000e051:	jbe    0x14000e005
   14000e053:	push   rax
   14000e054:	push   0x27b5443c
   14000e059:	retf   0x3864
   14000e05c:	cmc    
   14000e05d:	call   0x1b2bc1925
   14000e062:	or     bl,BYTE PTR [rcx+0x7deefa29]
   14000e068:	lea    ebp,[rbp+0x1f]
   14000e06b:	and    DWORD PTR [rdi],0xffffffd0
   14000e06e:	push   0xffffffffffffffb5
   14000e070:	xor    BYTE PTR [rbx],dh
   14000e072:	xor    eax,DWORD PTR [rbx+0x388bb76e]
   14000e078:	mov    ss,WORD PTR [rcx-0x514ea69b]
   14000e07e:	sbb    eax,0x370c980
   14000e083:	(bad)  
   14000e084:	(bad)  
   14000e085:	mov    esi,0x779fbb0f
   14000e08a:	xor    esp,DWORD PTR [rdx-0x4860c4aa]
   14000e090:	outs   dx,BYTE PTR ds:[rsi]
   14000e091:	(bad)  
   14000e092:	out    dx,al
   14000e093:	fnstsw WORD PTR [rdx]
   14000e095:	add    eax,0xde5d366e
   14000e09a:	adc    al,0x80
   14000e09c:	pop    rbp
   14000e09d:	cmp    edi,edx
   14000e09f:	jrcxz  0x14000e104
   14000e0a1:	add    esp,DWORD PTR [rsi+0x62]
   14000e0a4:	mov    DWORD PTR [rbp-0x82e9f2c],ecx
   14000e0aa:	cmp    eax,0xabb0ba98
   14000e0af:	sbb    eax,0x7a3de1a3
   14000e0b4:	push   rsi
   14000e0b5:	(bad)  
   14000e0b6:	(bad)  
   14000e0b7:	(bad)
   14000e0ba:	rex.X movabs eax,ds:0x5aa1ebe1df61eddd
   14000e0c4:	rex.RXB jno 0x14000e0c6
   14000e0c7:	fnstsw WORD PTR [rdi+0x455e3109]
   14000e0cd:	out    0xa6,eax
   14000e0cf:	xchg   edi,eax
   14000e0d0:	rex.B
   14000e0d1:	rex.W pop rcx
   14000e0d3:	in     al,dx
   14000e0d4:	ret    
   14000e0d5:	push   rsi
   14000e0d6:	(bad)  
   14000e0d7:	(bad)  [rax-0x565f97ff]
   14000e0dd:	lock sbb edx,esi
   14000e0e0:	out    dx,eax
   14000e0e1:	mov    dh,0x9
   14000e0e3:	mov    al,0x10
   14000e0e5:	hlt    
   14000e0e6:	add    eax,edi
   14000e0e8:	test   eax,0x533f9bd
   14000e0ed:	rex.X pop rdi
   14000e0ef:	(bad)  
   14000e0f0:	(bad)  
   14000e0f1:	jp     0x14000e09a
   14000e0f3:	div    BYTE PTR [rdx+rbp*2]
   14000e0f6:	movsxd edx,DWORD PTR [rdx-0x10651396]
   14000e0fc:	(bad)  
   14000e0fd:	(bad)  
   14000e0ff:	cmp    DWORD PTR [rax],ebx
   14000e101:	and    cl,BYTE PTR [rdx+rdx*4+0x4c31b14]
   14000e108:	imul   eax,DWORD PTR [rbx+0xc938631],0xffffff93
   14000e10f:	lea    eax,[rcx]
   14000e111:	(bad)  
   14000e112:	(bad)  
   14000e113:	and    BYTE PTR ss:[rbp-0x77baebc0],ah
   14000e11a:	loop   0x14000e0e4
   14000e11c:	(bad)  
   14000e11d:	fst    QWORD PTR [rdi]
   14000e11f:	and    ch,BYTE PTR [rdi+0x1a]
   14000e122:	and    al,0x67
   14000e124:	iret   
   14000e125:	shr    DWORD PTR [rax+0x78def636],0x73
   14000e12c:	shl    DWORD PTR [rdi+0x0],1
   14000e12f:	mov    bh,0x28
   14000e131:	or     edx,ecx
   14000e133:	push   rbx
   14000e134:	(bad)  
   14000e135:	std    
   14000e136:	leave  
   14000e137:	sbb    BYTE PTR [rbx+0x57],dl
   14000e13a:	rex.R mov edi,0x754c30a5
   14000e140:	loopne 0x14000e177
   14000e142:	and    BYTE PTR [rax],cl
   14000e144:	(bad)  
   14000e145:	mov    dl,0xa7
   14000e147:	jg     0x14000e10c
   14000e149:	(bad)  
   14000e14a:	and    eax,0xbfbda76c
   14000e14f:	mov    ch,0x7b
   14000e151:	rex.WRXB or rax,0xd7cd569
   14000e157:	jno    0x14000e171
   14000e159:	mov    ch,0x7c
   14000e15b:	test   cl,cl
   14000e15d:	loope  0x14000e13c
   14000e15f:	js     0x14000e15a
   14000e161:	mov    ebp,DWORD PTR [rdi-0x40]
   14000e164:	(bad)  
   14000e165:	mov    ecx,0xfaf4e8b3
   14000e16a:	mov    BYTE PTR [rdx+0x71],bl
   14000e16d:	stc    
   14000e16e:	(bad)  
   14000e16f:	(bad)  
   14000e170:	sbb    BYTE PTR [rip+0xffffffff801b0ea6],ch        # 0xc01bf01c
   14000e176:	or     bh,BYTE PTR [rsi-0x247a7b20]
   14000e17c:	mov    bh,0xa1
   14000e17e:	lea    edx,[rbx]
   14000e180:	leave  
   14000e181:	xor    bl,dl
   14000e183:	fsub   st,st(1)
   14000e185:	cmp    al,0x80
   14000e187:	jo     0x14000e137
   14000e189:	mov    edi,0xf00ed2a1
   14000e18e:	movsxd edx,DWORD PTR [rcx+0x3e]
   14000e191:	rex.WB xor BYTE PTR [r8-0x33b9178c],0xee
   14000e199:	mov    esp,0x65cad70a
   14000e19e:	int3   
   14000e19f:	mov    ah,0xdd
   14000e1a1:	adc    BYTE PTR [rdi],bl
   14000e1a3:	ins    BYTE PTR es:[rdi],dx
   14000e1a4:	int3   
   14000e1a5:	jnp    0x14000e139
   14000e1a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e1a8:	pop    rax
   14000e1a9:	fstp   QWORD PTR [rax]
   14000e1ab:	loop   0x14000e1a1
   14000e1ad:	mov    ecx,0x87565601
   14000e1b2:	sbb    BYTE PTR [rbx+rsi*1+0x6904c9a4],cl
   14000e1b9:	cmp    dh,BYTE PTR [rcx-0x2d40a1e]
   14000e1bf:	add    BYTE PTR [rax],ah
   14000e1c1:	movsxd esi,DWORD PTR [rax-0x338e138e]
   14000e1c7:	out    dx,eax
   14000e1c8:	mov    ebx,0x3f5ead06
   14000e1cd:	jg     0x14000e1d7
   14000e1cf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1d0:	and    edi,ebp
   14000e1d2:	add    DWORD PTR [rdi+rax*2-0x3e],edx
   14000e1d6:	test   eax,0x375bca71
   14000e1db:	xchg   edx,eax
   14000e1dc:	sbb    BYTE PTR [rdi+0x742cef3a],ah
   14000e1e2:	xchg   edi,eax
   14000e1e3:	sbb    eax,0xfd3d0304
   14000e1e8:	and    DWORD PTR [rsi-0x22a80eda],edi
   14000e1ee:	jnp    0x14000e26f
   14000e1f0:	(bad)  
   14000e1f1:	jmp    0x14000e25c
   14000e1f3:	(bad)  
   14000e1f4:	jl     0x14000e1ec
   14000e1f6:	(bad)  
   14000e1f7:	pop    rdx
   14000e1f8:	popf   
   14000e1f9:	cs jbe 0x14000e1a4
   14000e1fc:	or     ch,bh
   14000e1fe:	mov    ecx,0x1287db39
   14000e203:	(bad)
   14000e206:	retf   
   14000e207:	repnz fisttp WORD PTR [rsi]
   14000e20a:	ins    BYTE PTR es:[rdi],dx
   14000e20b:	add    BYTE PTR [rdx-0x86a238],bl
   14000e211:	mov    ch,0xe8
   14000e213:	and    r12,QWORD PTR [rdx]
   14000e216:	fs rex.R stc 
   14000e219:	push   rsp
   14000e21a:	pop    rdi
   14000e21b:	lahf   
   14000e21c:	xchg   esi,eax
   14000e21d:	mov    bh,0xd3
   14000e21f:	jge    0x14000e26e
   14000e221:	rex.WB in eax,0x83
   14000e224:	adc    al,0x42
   14000e226:	and    DWORD PTR [rbx+rdi*4+0x6d],esi
   14000e22a:	mov    ah,0x11
   14000e22c:	ret    
   14000e22d:	test   al,0x8
   14000e22f:	xor    BYTE PTR [rax-0x77294512],0x62
   14000e236:	ret    0x8ed2
   14000e239:	ds (bad) 
   14000e23b:	fistp  DWORD PTR [eax+0x3863eeec]
   14000e242:	sbb    ah,BYTE PTR [rcx+0x34]
   14000e245:	sbb    al,BYTE PTR [rbx]
   14000e247:	es ret 
   14000e249:	(bad)  [rbp-0x58d170fc]
   14000e24f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e250:	ror    esp,cl
   14000e252:	(bad)  
   14000e253:	and    ebx,DWORD PTR [rbx+rbx*2-0x589d39a7]
   14000e25a:	(bad)  
   14000e25b:	xor    al,0xd3
   14000e25d:	(bad)  
   14000e25e:	rex.XB add DWORD PTR [rip+0xfffffffff612df88],esi        # 0x13613c1ed
   14000e265:	add    DWORD PTR [rax-0x26],edi
   14000e268:	rex.WX (bad) 
   14000e26b:	cdq    
   14000e26c:	fmul   st(0),st
   14000e26e:	xchg   ecx,eax
   14000e26f:	mov    ebx,0x863e1250
   14000e274:	movabs eax,ds:0x7f2ed6d35c102f7a
   14000e27d:	rcl    DWORD PTR [rax],cl
   14000e27f:	pop    rdi
   14000e280:	sub    eax,0xfe2fb61f
   14000e285:	xor    BYTE PTR [rbp-0x3b],cl
   14000e288:	xor    DWORD PTR [rsp+rbx*1+0x57],edx
   14000e28c:	repnz add eax,0x80a1e1c7
   14000e292:	sub    eax,0x85300361
   14000e297:	mov    dl,0xec
   14000e29a:	push   0xffffffffffffffd7
   14000e29c:	push   rsp
   14000e29d:	adc    edi,DWORD PTR [rdx-0x6f6d824f]
   14000e2a3:	(bad)  
   14000e2a4:	rol    DWORD PTR [rsp+r12*2],cl
   14000e2a8:	stc    
   14000e2a9:	cwde   
   14000e2aa:	pop    rbx
   14000e2ab:	loopne 0x14000e2db
   14000e2ad:	(bad)  
   14000e2ae:	or     eax,0x2f2bdf52
   14000e2b3:	hlt    
   14000e2b4:	or     BYTE PTR [rcx+0x27],dh
   14000e2b7:	(bad)  
   14000e2b8:	mov    BYTE PTR [rbp+0x34],bl
   14000e2bb:	and    DWORD PTR [rcx],edx
   14000e2bd:	mov    edx,ss
   14000e2bf:	xor    BYTE PTR [rdx],bh
   14000e2c1:	test   ecx,ecx
   14000e2c3:	push   rdx
   14000e2c4:	sbb    BYTE PTR [rbp+0x20],ch
   14000e2c7:	push   rbp
   14000e2c8:	test   BYTE PTR [rsi-0x59],bl
   14000e2cb:	lea    edx,[rsi+0x68c9812]
   14000e2d1:	pop    rax
   14000e2d2:	(bad)  
   14000e2d3:	adc    bl,BYTE PTR [rsi-0x3929e6f0]
   14000e2d9:	add    al,0xe5
   14000e2db:	jp     0x14000e2db
   14000e2dd:	xchg   ebx,eax
   14000e2de:	icebp  
   14000e2df:	or     BYTE PTR [rbx],bl
   14000e2e1:	out    0x56,eax
   14000e2e3:	xor    DWORD PTR [rdi-0x4b],esi
   14000e2e6:	popf   
   14000e2e7:	test   eax,0xa384f98
   14000e2ec:	xchg   DWORD PTR [rsi],ebx
   14000e2ee:	add    bl,BYTE PTR [rdx+0x1291009a]
   14000e2f4:	enter  0xe7bc,0x50
   14000e2f8:	cmp    al,0x62
   14000e2fa:	iret   
   14000e2fb:	or     eax,0x45ef9661
   14000e300:	(bad)  
   14000e301:	in     eax,0xaf
   14000e303:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e304:	push   rbp
   14000e305:	repz cmp eax,0xbfbf2e53
   14000e30b:	jg     0x14000e2a2
   14000e30d:	fild   WORD PTR [rax-0x2b]
   14000e310:	rex.W push rax
   14000e312:	sahf   
   14000e313:	(bad)  
   14000e314:	fcmovu st,st(7)
   14000e316:	(bad)  
   14000e317:	ins    BYTE PTR es:[rdi],dx
   14000e318:	add    BYTE PTR [rdx],bl
   14000e31a:	test   al,0x46
   14000e31c:	mov    ebp,0x399077c1
   14000e321:	pop    rdi
   14000e322:	fidivr WORD PTR [rdx+0x0]
   14000e325:	in     eax,0xb8
   14000e327:	jl     0x14000e34b
   14000e329:	(bad)  
   14000e32a:	pop    rdi
   14000e32b:	cmp    eax,0x5051da8
   14000e330:	adc    dh,al
   14000e332:	ins    DWORD PTR es:[rdi],dx
   14000e333:	je     0x14000e367
   14000e335:	mov    BYTE PTR [rcx],ch
   14000e337:	sub    ebx,DWORD PTR [rsi+0x12010f79]
   14000e33d:	fs jge 0x14000e3ae
   14000e340:	loope  0x14000e361
   14000e342:	xchg   ebx,eax
   14000e343:	lods   eax,DWORD PTR ds:[rsi]
   14000e344:	and    BYTE PTR [rsi+rax*1+0xce99120],cl
   14000e34b:	pop    rcx
   14000e34c:	xchg   esi,eax
   14000e34d:	or     eax,0x2c8a4620
   14000e353:	ror    DWORD PTR [rax+0x8],1
   14000e356:	adc    BYTE PTR [rax],dh
   14000e358:	cwde   
   14000e359:	mov    esi,es
   14000e35b:	cwde   
   14000e35c:	and    al,0x13
   14000e35e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e35f:	rex.R fstp DWORD PTR cs:[rsi+0x7d1d05e]
   14000e367:	push   rcx
   14000e368:	pushf  
   14000e369:	mov    ebp,DWORD PTR [rax]
   14000e36b:	outs   dx,DWORD PTR ds:[rsi]
   14000e36c:	sub    ebx,DWORD PTR [rdi+0x2f]
   14000e36f:	jb     0x14000e342
   14000e371:	adc    DWORD PTR [rdi+rdx*1-0x3321c3ed],edi
   14000e378:	fisttp WORD PTR [rbx+0x5ff2e1a7]
   14000e37e:	mov    eax,0x5f79a9f8
   14000e383:	jg     0x14000e363
   14000e385:	jns    0x14000e3c1
   14000e387:	(bad)  
   14000e388:	rcr    BYTE PTR [rax+0x500361ad],cl
   14000e38e:	movabs eax,ds:0x1e14d4c01728fc51
   14000e397:	rex fsubp st(4),st
   14000e39a:	ja     0x14000e347
   14000e39c:	rex.WRX (bad) 
   14000e39e:	popf   
   14000e39f:	gs (bad) 
   14000e3a1:	adc    esp,DWORD PTR [rax+0x8340af0]
   14000e3a7:	retf   0x23e
   14000e3aa:	add    esp,esp
   14000e3ac:	(bad)  
   14000e3ad:	cmc    
   14000e3ae:	repz cli 
   14000e3b0:	(bad)  
   14000e3b1:	jb     0x14000e3fe
   14000e3b3:	mov    DWORD PTR [rbx],edx
   14000e3b5:	mov    WORD PTR [rsi-0x6f],cs
   14000e3b8:	and    eax,0x1349823
   14000e3bd:	xchg   ecx,eax
   14000e3be:	rex.RX xchg esi,eax
   14000e3c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e3c1:	fdivr  DWORD PTR [rbx]
   14000e3c3:	(bad)  
   14000e3c4:	pop    rsp
   14000e3c5:	xor    eax,0xc9c8f023
   14000e3ca:	xor    DWORD PTR [rsi-0x52],ecx
   14000e3cd:	imul   esp,DWORD PTR [rbx+riz*8-0x637373ef],0xa65a6801
   14000e3d8:	(bad)  
   14000e3d9:	(bad)  
   14000e3da:	xor    eax,0xd34961f8
   14000e3df:	movabs al,ds:0xe08a30744812b6ff
   14000e3e8:	mov    ebp,0xc8a2f297
   14000e3ed:	fist   DWORD PTR [rsi]
   14000e3ef:	mov    edi,0xd3d44a6f
   14000e3f4:	stos   BYTE PTR es:[rdi],al
   14000e3f5:	stc    
   14000e3f6:	(bad)  
   14000e3f7:	(bad)  
   14000e3f9:	(bad)  
   14000e3fb:	rex.W push rsp
   14000e3fd:	mul    DWORD PTR [rdi+0x43]
   14000e400:	mov    al,0x2d
   14000e402:	fadd   DWORD PTR [rax]
   14000e404:	xor    al,0xd0
   14000e406:	push   rsp
   14000e407:	rex.XB stc 
   14000e409:	hlt    
   14000e40a:	pop    rdx
   14000e40b:	shl    DWORD PTR [rdx-0x7e],0x31
   14000e40f:	and    BYTE PTR [rax+0x2a],ch
   14000e412:	fcmovbe st,st(2)
   14000e414:	xor    r12d,DWORD PTR [r8]
   14000e417:	lock rex.RXB leave 
   14000e41a:	sbb    DWORD PTR ss:[rax+rcx*8+0x3ec11440],edx
   14000e422:	(bad)  
   14000e423:	rex.RX mov ecx,0x83573b21
   14000e429:	sbb    ecx,DWORD PTR [rip+0xffffffffb3a04d9d]        # 0xf3a131cc
   14000e42f:	or     DWORD PTR [rsi+rcx*8+0x18dd27f2],ecx
   14000e436:	popf   
   14000e437:	and    edx,eax
   14000e439:	add    al,0x26
   14000e43b:	fwait
   14000e43c:	(bad)  
   14000e43d:	rex.WRX
   14000e43e:	gs clc 
   14000e440:	out    0x20,al
   14000e442:	or     DWORD PTR [rcx+0x27],0xa419bd50
   14000e449:	cdq    
   14000e44a:	mov    dh,0xcf
   14000e44c:	mov    ebp,0x83c5c203
   14000e451:	imul   edx,DWORD PTR [rdi+0x55],0xffffffed
   14000e455:	add    edx,DWORD PTR [rax]
   14000e457:	add    cl,BYTE PTR [rax+0x7c6a44a4]
   14000e45d:	fisttp QWORD PTR [rdi-0x4c06a3a4]
   14000e463:	(bad)  
   14000e464:	enter  0x206,0xd
   14000e468:	(bad)  
   14000e469:	rex.WB
   14000e46a:	repz cmp eax,0x956df20a
   14000e470:	ss in  eax,dx
   14000e472:	sahf   
   14000e473:	cli    
   14000e474:	fistp  DWORD PTR [rax+0x3d]
   14000e477:	fild   WORD PTR [rsi-0x3d]
   14000e47a:	shl    DWORD PTR [rax+0x16],1
   14000e47d:	xchg   edi,esi
   14000e47f:	cs ss xor al,0x57
   14000e483:	mov    eax,0xb03b701b
   14000e488:	add    DWORD PTR [rax+0x6afb6be0],ebp
   14000e48e:	or     eax,0x97b38c55
   14000e493:	icebp  
   14000e494:	retf   
   14000e495:	jle    0x14000e4b2
   14000e497:	jb     0x14000e516
   14000e499:	add    dh,al
   14000e49b:	out    dx,al
   14000e49c:	push   rcx
   14000e49d:	(bad)  
   14000e49e:	out    0xfe,al
   14000e4a0:	and    dh,dh
   14000e4a2:	xor    DWORD PTR [rcx],0x4
   14000e4a5:	sub    BYTE PTR [rip+0x2d20122],cl        # 0x142d2e5cd
   14000e4ab:	outs   dx,BYTE PTR ds:[rsi]
   14000e4ac:	loopne 0x14000e4bb
   14000e4ae:	(bad)  
   14000e4af:	fs ror cl,1
   14000e4b2:	sbb    BYTE PTR [rdx],bh
   14000e4b4:	sbb    DWORD PTR [rdx-0x59],eax
   14000e4b7:	adc    edx,DWORD PTR [rax-0x5a]
   14000e4ba:	(bad)  
   14000e4bb:	rex.WR (bad) 
   14000e4bd:	xor    dh,BYTE PTR [rsi+0x52cb205f]
   14000e4c3:	and    al,0x93
   14000e4c5:	or     DWORD PTR [rdx+rdi*1-0x3e],ecx
   14000e4c9:	leave  
   14000e4ca:	jae    0x14000e4f5
   14000e4cc:	ss (bad) 
   14000e4ce:	rex.RXB call 0x10f69e0ca
   14000e4d4:	(bad)  
   14000e4d5:	and    ecx,ebp
   14000e4d7:	rcr    BYTE PTR [rsp+rbx*8-0x7e],cl
   14000e4db:	add    ah,cl
   14000e4dd:	mov    BYTE PTR [rsi+rax*8+0x0],bl
   14000e4e1:	(bad)  
   14000e4e2:	(bad)  
   14000e4e3:	retf   0x6ba6
   14000e4e6:	(bad)  
   14000e4e7:	sbb    eax,0x3c059416
   14000e4ec:	pushf  
   14000e4ed:	and    al,0xd8
   14000e4ef:	sbb    BYTE PTR [rip+0x35875135],ah        # 0x17588362a
   14000e4f5:	jb     0x14000e4ac
   14000e4f7:	(bad)  
   14000e4f8:	scas   eax,DWORD PTR es:[rdi]
   14000e4f9:	jle    0x14000e4f1
   14000e4fb:	or     ebp,ecx
   14000e4fd:	sti    
   14000e4fe:	push   rsi
   14000e4ff:	(bad)  
   14000e500:	ss xor al,0xd
   14000e503:	push   0x79
   14000e505:	in     eax,dx
   14000e506:	xchg   edi,eax
   14000e507:	jle    0x14000e4b0
   14000e509:	push   rbp
   14000e50a:	adc    edi,DWORD PTR [rdi-0x1d]
   14000e50d:	outs   dx,DWORD PTR ds:[rsi]
   14000e50e:	xor    ecx,DWORD PTR [rbp-0x5d97fe50]
   14000e514:	(bad)  
   14000e515:	sahf   
   14000e516:	(bad)  
   14000e517:	adc    eax,0x72aabd7a
   14000e51c:	(bad)  
   14000e51d:	xor    DWORD PTR [rdi+riz*8-0x55],esp
   14000e521:	and    edx,DWORD PTR [rax]
   14000e523:	movabs ds:0xd0400f9b9113f209,al
   14000e52c:	imul   ecx,DWORD PTR [rdx+0x6900cd2c],0xd68c0963
   14000e536:	xor    BYTE PTR [rcx+0x2],bl
   14000e539:	ror    BYTE PTR [rcx],cl
   14000e53b:	je     0x14000e4d3
   14000e53d:	cmp    cl,al
   14000e53f:	(bad)  
   14000e540:	shr    BYTE PTR [rcx+0xa],1
   14000e543:	popf   
   14000e544:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e545:	xchg   rbx,rax
   14000e547:	or     DWORD PTR [rsi+rdx*4-0x7f],ecx
   14000e54b:	ror    BYTE PTR [rcx],cl
   14000e54d:	push   rsi
   14000e54e:	xlat   BYTE PTR ds:[rbx]
   14000e54f:	(bad)  
   14000e550:	js     0x14000e546
   14000e552:	(bad)  
   14000e553:	sbb    bl,al
   14000e555:	lea    ecx,[rip+0x8381d2c]        # 0x148390287
   14000e55b:	(bad)  
   14000e55c:	jmp    0x12d6e2e84
   14000e561:	sbb    al,0x3c
   14000e563:	(bad)  
   14000e564:	and    al,0xbf
   14000e566:	mov    ?,WORD PTR [rax+0x2bd4df25]
   14000e56c:	(bad)  
   14000e56d:	rex.WXB (bad) 
   14000e56f:	out    0xd9,eax
   14000e571:	ret    
   14000e572:	fwait
   14000e573:	and    dh,BYTE PTR [rdi+0xc]
   14000e576:	sub    cl,BYTE PTR [rbx-0x6]
   14000e579:	mov    ecx,0x38f97f11
   14000e57e:	rex.WRB loop 0x14000e520
   14000e581:	(bad)  
   14000e582:	xacquire xchg DWORD PTR [rcx-0x43],ebx
   14000e586:	xor    ebx,esp
   14000e588:	jbe    0x14000e54a
   14000e58a:	xchg   esi,eax
   14000e58b:	mov    al,0x1
   14000e58d:	fadd   DWORD PTR [rdx+rsi*2+0x4dbf6de5]
   14000e594:	mov    ah,0xc9
   14000e596:	(bad)  
   14000e598:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e599:	mov    esp,0x53b2f7c6
   14000e59e:	mov    esi,0x8a1af793
   14000e5a3:	add    ch,bl
   14000e5a5:	lahf   
   14000e5a6:	sub    edx,DWORD PTR [rax+0x20251b20]
   14000e5ac:	jmp    0x166e4151c
   14000e5b1:	add    eax,0xea693065
   14000e5b6:	mov    WORD PTR [rax-0x7e],es
   14000e5b9:	sub    al,0x4b
   14000e5bb:	nop
   14000e5bc:	rex.WRX
   14000e5bd:	rex.RX
   14000e5be:	xchg   rbx,rax
   14000e5c0:	xor    DWORD PTR [rsi+rdx*8-0x23fcd938],ecx
   14000e5c7:	repz clc 
   14000e5c9:	(bad)  
   14000e5ca:	(bad)  
   14000e5cb:	lods   al,BYTE PTR ds:[rsi]
   14000e5cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e5cd:	xor    BYTE PTR [rcx-0x7e],bl
   14000e5d0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e5d1:	adc    edi,0x43
   14000e5d4:	ret    
   14000e5d5:	int    0x41
   14000e5d7:	rex
   14000e5d8:	lock rcl BYTE PTR [rax],0x77
   14000e5dc:	or     dl,ch
   14000e5de:	rex xchg bx,ax
   14000e5e1:	push   rbx
   14000e5e2:	fcom   QWORD PTR [rdx+0x2]
   14000e5e5:	rex.WB fdivr DWORD PTR [r9]
   14000e5e8:	rex neg BYTE PTR [rdx-0x14]
   14000e5ec:	rex.XB jp 0x14000e5db
   14000e5ef:	(bad)  
   14000e5f0:	xlat   BYTE PTR ds:[rbx]
   14000e5f1:	out    dx,eax
   14000e5f2:	pop    rbx
   14000e5f3:	(bad)  
   14000e5f4:	loop   0x14000e5ac
   14000e5f6:	push   rbx
   14000e5f7:	rex.XB fiadd DWORD PTR [r13-0x12e5841a]
   14000e5fe:	std    
   14000e5ff:	(bad)  
   14000e600:	movsxd esi,DWORD PTR [rdx+0x1b03b7f8]
   14000e606:	add    BYTE PTR [rsi],0x72
   14000e609:	leave  
   14000e60a:	(bad)  
   14000e60b:	test   DWORD PTR [rdi],ecx
   14000e60d:	mov    al,0x5
   14000e60f:	sub    al,0x33
   14000e611:	(bad)
   14000e614:	cwde   
   14000e615:	xchg   edi,eax
   14000e616:	push   rax
   14000e617:	(bad)  
   14000e618:	add    al,0x22
   14000e61a:	fdiv   DWORD PTR [rax+0x420e2e1]
   14000e620:	or     BYTE PTR [rax-0x6d],al
   14000e623:	(bad)  
   14000e624:	cmp    bl,dl
   14000e626:	enter  0x68,0xa3
   14000e62a:	mov    dh,BYTE PTR [rcx+0x7d]
   14000e62d:	mov    ebx,0x9d0655d4
   14000e632:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e633:	sar    BYTE PTR [rdx],1
   14000e635:	xchg   r14d,eax
   14000e637:	and    al,0x48
   14000e639:	(bad)  
   14000e63a:	rex.XB
   14000e63b:	rex.WR mov BYTE PTR [rbx+0x64],0xc9
   14000e640:	add    al,0x82
   14000e642:	xor    bh,BYTE PTR [rbx+riz*8-0x77]
   14000e646:	jae    0x14000e6c0
   14000e648:	lock js 0x14000e5cd
   14000e64b:	ins    BYTE PTR es:[rdi],dx
   14000e64c:	cmp    al,0xc0
   14000e64e:	scas   al,BYTE PTR es:[rdi]
   14000e64f:	imul   ecx,DWORD PTR [rsi],0x63
   14000e652:	jmp    0x106490a31
   14000e657:	xchg   ebx,eax
   14000e658:	movabs ds:0x1b74ff778d0513b0,al
   14000e661:	in     al,0x2e
   14000e663:	push   r11
   14000e665:	sbb    al,0x40
   14000e667:	jno    0x14000e686
   14000e669:	rex.RB cld 
   14000e66b:	add    BYTE PTR [rcx+0x35007d4a],al
   14000e671:	icebp  
   14000e672:	push   rbx
   14000e673:	pop    rcx
   14000e674:	(bad)  
   14000e675:	shl    ebx,cl
   14000e677:	ins    DWORD PTR es:[rdi],dx
   14000e678:	fstp   st(6)
   14000e67a:	fisttp WORD PTR [rsp+rdi*8-0x2d]
   14000e67e:	(bad)  
   14000e67f:	test   ebx,0x5979caf9
   14000e685:	cli    
   14000e686:	out    0x3,eax
   14000e688:	sbb    eax,DWORD PTR [rax+0x2f5440a]
   14000e68e:	sbb    eax,0x3b8de1d4
   14000e693:	adc    BYTE PTR [rcx],al
   14000e695:	xchg   ebx,eax
   14000e696:	int3   
   14000e697:	(bad)  
   14000e698:	nop
   14000e699:	push   0x2280128
   14000e69e:	test   BYTE PTR [rax-0x4b],dh
   14000e6a1:	jno    0x14000e68b
   14000e6a3:	mov    ebx,0x18034112
   14000e6a8:	push   0xffffffffffffff81
   14000e6aa:	xor    al,0x1b
   14000e6ac:	adc    BYTE PTR [rsi+rdx*4+0x1f],0xc6
   14000e6b1:	sbb    ch,ch
   14000e6b3:	(bad)  
   14000e6b4:	pop    rbx
   14000e6b5:	popf   
   14000e6b6:	and    DWORD PTR [rbp+0x13],ecx
   14000e6b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e6ba:	leave  
   14000e6bb:	sbb    BYTE PTR [rbx-0x1e1cef0f],dl
   14000e6c1:	cmp    al,BYTE PTR [rax]
   14000e6c3:	(bad)  
   14000e6c4:	movsxd ebp,DWORD PTR [rbp+0x15]
   14000e6c7:	ja     0x14000e708
   14000e6c9:	mov    dh,0x8e
   14000e6cb:	loope  0x14000e713
   14000e6cd:	(bad)  
   14000e6ce:	cmp    BYTE PTR [rsi-0x20543c90],cl
   14000e6d4:	add    BYTE PTR [rcx],ah
   14000e6d6:	and    esp,DWORD PTR [rcx+rbp*8-0x121657dc]
   14000e6dd:	cli    
   14000e6de:	(bad)  
   14000e6df:	jle    0x14000e667
   14000e6e1:	movabs al,ds:0x251833339760bf9f
   14000e6ea:	(bad)
   14000e6ed:	imul   ebp,DWORD PTR [rip+0x6c3f94be],0xffffffe6        # 0x1ac407bb2
   14000e6f4:	repnz pop rdi
   14000e6f6:	or     al,BYTE PTR [rbx+0x7c]
   14000e6f9:	pop    rbx
   14000e6fa:	mov    DWORD PTR [rdi+0x6699f92a],ebx
   14000e700:	fadd   DWORD PTR [rax]
   14000e702:	(bad)  
   14000e703:	or     BYTE PTR [rdi-0x10],ah
   14000e706:	xor    eax,0x6e72d417
   14000e70b:	rex.WXB
   14000e70c:	data16 or bl,ah
   14000e70f:	add    r14d,DWORD PTR [rax-0x1c030d4d]
   14000e716:	out    0x94,al
   14000e718:	add    BYTE PTR [rsp+rax*1],ah
   14000e71b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e71c:	and    BYTE PTR [rbx+0x14],ch
   14000e71f:	test   al,al
   14000e721:	cmp    BYTE PTR [rdx],0x98
   14000e724:	mov    WORD PTR [rdi+0x40],es
   14000e727:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e728:	mov    edi,DWORD PTR [rcx+0x1b4346fc]
   14000e72e:	or     eax,0x9348659d
   14000e733:	xor    edx,edx
   14000e735:	leave  
   14000e736:	or     bl,ah
   14000e738:	rol    DWORD PTR [rsi],0x92
   14000e73b:	icebp  
   14000e73c:	or     BYTE PTR [rcx-0x5c],dl
   14000e73f:	lock clc 
   14000e741:	icebp  
   14000e742:	adc    eax,0x21b9f2c
   14000e747:	cmp    al,bl
   14000e749:	rex.WXB fdivp st(0),st
   14000e74c:	rex.XB pop r8
   14000e74e:	fidivr DWORD PTR [rdi+0x8]
   14000e751:	leave  
   14000e752:	fs xchg esp,eax
   14000e754:	(bad)  
   14000e755:	je     0x14000e752
   14000e757:	outs   dx,BYTE PTR ds:[rsi]
   14000e758:	add    DWORD PTR [rcx-0x3941b3cc],0xffffff80
   14000e75f:	jbe    0x14000e750
   14000e761:	add    dh,BYTE PTR [rsi+0x4d]
   14000e764:	ret    
   14000e765:	sub    DWORD PTR [rdi-0x4a89cca4],edx
   14000e76b:	jne    0x14000e76e
   14000e76d:	repz jl 0x14000e7d5
   14000e770:	icebp  
   14000e771:	(bad)  
   14000e772:	sbb    eax,0xf12b7f97
   14000e777:	outs   dx,DWORD PTR ds:[rsi]
   14000e778:	jmp    0x1aa5fef6f
   14000e77d:	(bad)  
   14000e77e:	add    cl,BYTE PTR [rbx+0x1b05b7f]
   14000e784:	test   al,0x50
   14000e786:	scas   eax,DWORD PTR es:[rdi]
   14000e787:	adc    al,0x9b
   14000e789:	or     al,0x42
   14000e78b:	ror    DWORD PTR [rsi-0x1dffd06c],cl
   14000e791:	(bad)  
   14000e792:	(bad)  
   14000e793:	add    DWORD PTR [rax],ecx
   14000e795:	test   eax,0xe4028c2b
   14000e79a:	(bad)  
   14000e79b:	sti    
   14000e79c:	or     eax,0xb175926
   14000e7a1:	imul   ebp,ebx,0xffffffe8
   14000e7a4:	sub    BYTE PTR [rbx],al
   14000e7a6:	adc    cl,BYTE PTR [rdx]
   14000e7a8:	adc    BYTE PTR [rdx],dl
   14000e7aa:	and    bl,bl
   14000e7ac:	add    al,0x48
   14000e7ae:	push   rbx
   14000e7af:	imul   eax,DWORD PTR [rax],0xffffff92
   14000e7b2:	icebp  
   14000e7b3:	add    BYTE PTR [rbx+0xabb758d],ah
   14000e7b9:	fs mov ebx,?
   14000e7bc:	int3   
   14000e7bd:	add    BYTE PTR [rax],al
   14000e7bf:	adc    esp,DWORD PTR [rax+0x49]
   14000e7c2:	rex.R
   14000e7c3:	push   r12
   14000e7c5:	push   rcx
   14000e7c6:	ss ret 0x1f97
   14000e7ca:	cmp    BYTE PTR [rsi-0x43eccc6b],al
   14000e7d0:	repnz in eax,dx
   14000e7d2:	out    dx,eax
   14000e7d3:	(bad)
   14000e7d6:	outs   dx,BYTE PTR ds:[rsi]
   14000e7d7:	ret    
   14000e7d8:	fcmovu st,st(2)
   14000e7da:	jp     0x14000e7fa
   14000e7dc:	imul   BYTE PTR [rbx+0x48]
   14000e7df:	shl    ah,0xcb
   14000e7e2:	nop
   14000e7e3:	add    eax,0xc9fe867
   14000e7e8:	or     al,0xd7
   14000e7ea:	or     bl,BYTE PTR [rax+0x4d507cb2]
   14000e7f0:	push   rax
   14000e7f1:	test   BYTE PTR [rdx+0x1c],dh
   14000e7f4:	shl    BYTE PTR [rsi+0x5d],0x7e
   14000e7f8:	ins    BYTE PTR es:[rdi],dx
   14000e7f9:	pop    rdi
   14000e7fa:	cld    
   14000e7fb:	pop    rbx
   14000e7fc:	mov    ebx,0x9bffc1fc
   14000e801:	mov    edx,0x79bd3fc
   14000e806:	ins    BYTE PTR es:[rdi],dx
   14000e807:	add    esi,DWORD PTR [rsi+0x3400d86]
   14000e80d:	test   eax,esp
   14000e80f:	jmp    0x14000e7f2
   14000e811:	mov    al,0x12
   14000e813:	movabs ds:0x752825f02946b0b4,al
   14000e81c:	in     eax,0x55
   14000e81e:	jns    0x14000e7ab
   14000e820:	ins    DWORD PTR es:[rdi],dx
   14000e821:	ret    0x1864
   14000e824:	stos   DWORD PTR es:[rdi],eax
   14000e825:	(bad)  
   14000e826:	rex.WRX
   14000e827:	gs jge 0x14000e856
   14000e82a:	lods   eax,DWORD PTR ds:[rsi]
   14000e82b:	cmp    eax,0x676d5202
   14000e830:	xor    al,0xc
   14000e832:	mov    dl,0xd4
   14000e834:	mov    dh,0xfd
   14000e836:	xchg   ebx,eax
   14000e837:	leave  
   14000e838:	adc    bl,ah
   14000e83a:	sar    DWORD PTR [rdx],0x26
   14000e83d:	xchg   ebx,eax
   14000e83e:	xor    DWORD PTR [rax+rdx*2+0x12733f58],eax
   14000e845:	rex.RXB (bad) 
   14000e847:	pop    rdi
   14000e848:	(bad)  
   14000e849:	movabs eax,ds:0x582de6bfd707bf57
   14000e852:	pop    rdi
   14000e853:	cmp    eax,0x573a320b
   14000e858:	mov    bh,0x28
   14000e85a:	call   QWORD PTR [rax+rsi*2+0x72]
   14000e85e:	add    r13b,BYTE PTR [r13+0x22]
   14000e862:	mov    DWORD PTR [rsi-0x540cca7b],esp
   14000e868:	fiadd  DWORD PTR [rdx-0x4]
   14000e86b:	out    0xe7,eax
   14000e86d:	repnz mov ebx,0xfc52d933
   14000e873:	(bad)  
   14000e874:	out    0xf2,al
   14000e876:	(bad)  
   14000e877:	fiadd  WORD PTR [rax]
   14000e879:	mov    ebx,0xd85dbff
   14000e87e:	rex xchg ebp,eax
   14000e880:	mov    esp,0x970b9784
   14000e885:	pop    rdi
   14000e886:	js     0x14000e82f
   14000e888:	adc    ecx,DWORD PTR [rcx+0xc]
   14000e88b:	sub    ch,BYTE PTR [rbp-0x17]
   14000e88e:	(bad)  
   14000e88f:	(bad)  
   14000e890:	div    DWORD PTR [rcx+0x51850d52]
   14000e896:	add    DWORD PTR [rsi+rsi*4-0x3e],0x377373f
   14000e89e:	fisubr DWORD PTR [rbx]
   14000e8a0:	test   DWORD PTR [rbx+0x62],0xbe69b802
   14000e8a7:	cmp    bl,BYTE PTR [rbp-0x6739b6e0]
   14000e8ad:	or     al,0x7
   14000e8af:	cwde   
   14000e8b0:	mov    WORD PTR [rsi],es
   14000e8b2:	and    BYTE PTR [rcx],ah
   14000e8b4:	xchg   ecx,eax
   14000e8b5:	mov    cs,esi
   14000e8b7:	loope  0x14000e891
   14000e8b9:	icebp  
   14000e8ba:	push   rbx
   14000e8bb:	cmp    BYTE PTR [rax+rdi*8+0x0],dh
   14000e8bf:	sahf   
   14000e8c0:	(bad)  
   14000e8c1:	jge    0x14000e8b2
   14000e8c3:	mov    cl,0xc3
   14000e8c5:	test   DWORD PTR [rsi-0x69],eax
   14000e8c8:	(bad)  
   14000e8c9:	or     dl,BYTE PTR [rdx+0x3d]
   14000e8cc:	(bad)  
   14000e8cd:	shl    BYTE PTR [rdx+0x1e],cl
   14000e8d0:	add    al,0xbb
   14000e8d2:	enter  0x535f,0x5e
   14000e8d6:	and    ah,BYTE PTR [rdx+rbx*4]
   14000e8d9:	adc    BYTE PTR [rbx-0x28188c39],bh
   14000e8df:	pop    rbx
   14000e8e0:	xor    cl,BYTE PTR [rax]
   14000e8e2:	test   BYTE PTR [rdi+0x6b8ad796],ah
   14000e8e8:	scas   al,BYTE PTR es:[rdi]
   14000e8e9:	sbb    BYTE PTR [rcx],cl
   14000e8eb:	ja     0x14000e88d
   14000e8ed:	(bad)
   14000e8f1:	xor    al,0xba
   14000e8f3:	cld    
   14000e8f4:	mov    ch,0x2b
   14000e8f6:	fcomp  DWORD PTR [rdx-0x4]
   14000e8f9:	movabs eax,ds:0x316394e2f5743a51
   14000e902:	pop    rbx
   14000e903:	rol    DWORD PTR [rsi],0xa0
   14000e906:	add    al,BYTE PTR [rip+0x2fddff2f]        # 0x16fdee83b
   14000e90c:	xchg   edx,eax
   14000e90d:	rex.WXB out dx,al
   14000e90f:	xchg   ecx,eax
   14000e910:	fcomi  st,st(5)
   14000e912:	cmp    eax,0xabca47fc
   14000e917:	jp     0x14000e8f8
   14000e919:	and    edi,ebp
   14000e91b:	mov    bl,0xf8
   14000e91d:	sahf   
   14000e91e:	jne    0x14000e8a0
   14000e920:	and    BYTE PTR [rdx+rcx*4+0x74],dh
   14000e924:	data16 (bad) 
   14000e926:	(bad)  
   14000e927:	int3   
   14000e928:	mov    ebp,0xfe27fd00
   14000e92d:	(bad)  
   14000e92e:	es push 0xffffffffffffffc3
   14000e931:	fidivr DWORD PTR fs:[rdx-0x6dee6c02]
   14000e938:	icebp  
   14000e939:	or     BYTE PTR [rdx+rax*1+0x3a],al
   14000e93d:	sbb    eax,0x33e9d4e0
   14000e942:	cmp    BYTE PTR [rcx+0x6baec13a],bh
   14000e948:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e949:	sbb    edi,DWORD PTR [rbp-0x10]
   14000e94c:	mov    bl,0xf4
   14000e94e:	rex.R jmp 0x1b088e34c
   14000e954:	(bad)  
   14000e955:	lahf   
   14000e956:	(bad)  
   14000e957:	cmp    eax,0x2356ef93
   14000e95c:	(bad)  
   14000e95d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e95e:	js     0x14000e922
   14000e960:	mov    al,0x40
   14000e962:	rex.RB shl r14b,0xdb
   14000e966:	and    cl,cl
   14000e968:	mov    al,0x31
   14000e96a:	lods   al,BYTE PTR ds:[rsi]
   14000e96b:	scas   eax,DWORD PTR es:[rdi]
   14000e96c:	or     ah,ah
   14000e96e:	(bad)  
   14000e96f:	mov    ecx,0x1fca34e9
   14000e974:	test   eax,0xbe65bc94
   14000e979:	xchg   BYTE PTR [rdi],bl
   14000e97b:	sub    bl,BYTE PTR [rbx]
   14000e97d:	mov    edx,fs
   14000e97f:	pop    rbx
   14000e980:	mov    edi,0x87929add
   14000e985:	(bad)  
   14000e986:	shl    DWORD PTR [rsi+0x60],0x3
   14000e98a:	mov    al,0x9
   14000e98c:	push   rbp
   14000e98d:	div    DWORD PTR [rdx+rcx*4-0x7a]
   14000e991:	(bad)  
   14000e992:	cld    
   14000e993:	push   rsp
   14000e994:	sub    bh,BYTE PTR [rbp-0x442a387]
   14000e99a:	sahf   
   14000e99b:	(bad)  
   14000e99c:	(bad)  
   14000e99d:	cmp    DWORD PTR [rbx],esp
   14000e99f:	xor    ah,bl
   14000e9a1:	sti    
   14000e9a2:	sub    ch,al
   14000e9a4:	mov    ch,0x53
   14000e9a6:	push   rax
   14000e9a7:	(bad)  
   14000e9a8:	fild   WORD PTR [rbp-0x7fb28ffc]
   14000e9ae:	or     DWORD PTR [rax-0x4e716300],ecx
   14000e9b4:	mov    edx,0x2b53c036
   14000e9b9:	adc    esi,DWORD PTR [rdx+rdi*4+0x7d]
   14000e9bd:	mov    ah,0x86
   14000e9bf:	(bad)  
   14000e9c0:	jno    0x14000e9b6
   14000e9c2:	jae    0x14000ea43
   14000e9c4:	mov    DWORD PTR [rbp+0x37],ebx
   14000e9c7:	fisttp WORD PTR [rsi+0x320da76e]
   14000e9cd:	cdq    
   14000e9ce:	pop    rbp
   14000e9cf:	loope  0x14000e958
   14000e9d1:	(bad)  
   14000e9d2:	add    BYTE PTR [rax],ah
   14000e9d4:	add    cl,bh
   14000e9d6:	test   BYTE PTR [rdi-0x151f6f7a],bl
   14000e9dc:	mov    ecx,0xd7cf7d37
   14000e9e1:	lods   al,BYTE PTR cs:[rsi]
   14000e9e3:	cmc    
   14000e9e4:	add    esp,edx
   14000e9e6:	xor    esi,DWORD PTR [rdi]
   14000e9e8:	(bad)  
   14000e9e9:	loop   0x14000e9f8
   14000e9eb:	movabs ds:0x543faacf785f3ade,al
   14000e9f4:	imul   edi,DWORD PTR [rsi],0x7a80b94c
   14000e9fa:	push   rbx
   14000e9fb:	movabs al,ds:0x281a006c2a99a4e9
   14000ea04:	jne    0x14000ea00
   14000ea06:	push   rbp
   14000ea07:	or     ch,dl
   14000ea09:	xor    al,0xd7
   14000ea0b:	cmp    esi,DWORD PTR [rdi+rsi*8-0x55]
   14000ea0f:	xor    eax,0xebd7e03f
   14000ea14:	movabs ds:0x79f0c6329030c5c0,eax
   14000ea1d:	(bad)  
   14000ea1e:	or     ah,0xa4
   14000ea21:	mov    BYTE PTR [rsi],bl
   14000ea23:	mov    esp,0xb899313
   14000ea28:	clc    
   14000ea29:	rol    DWORD PTR [rsi],1
   14000ea2b:	jmp    0x14000ea70
   14000ea2d:	lea    esi,[rbx]
   14000ea2f:	add    eax,DWORD PTR [rcx-0x6784892]
   14000ea35:	jle    0x14000e9c3
   14000ea37:	test   al,0xd3
   14000ea39:	(bad)  
   14000ea3a:	test   eax,0xf4e28f13
   14000ea3f:	cli    
   14000ea40:	pop    rcx
   14000ea41:	pop    rsp
   14000ea42:	jne    0x14000ea24
   14000ea44:	(bad)  
   14000ea45:	in     al,dx
   14000ea46:	fdiv   QWORD PTR [rdi+0x4]
   14000ea49:	lods   eax,DWORD PTR ds:[rsi]
   14000ea4a:	ficomp WORD PTR [rsp+rcx*4]
   14000ea4d:	(bad)  
   14000ea4e:	adc    BYTE PTR [rsi-0x4],al
   14000ea51:	test   ebp,ebp
   14000ea53:	stc    
   14000ea54:	cld    
   14000ea55:	rex.WRB clc 
   14000ea57:	in     eax,0xc9
   14000ea59:	retf   0x8d7
   14000ea5c:	fmul   DWORD PTR [rcx+0x5e44914d]
   14000ea62:	std    
   14000ea63:	(bad)  
   14000ea64:	or     eax,0xb7d91df1
   14000ea69:	pop    rax
   14000ea6a:	movabs r11,0x6cbbff74b5fbdac4
   14000ea74:	add    DWORD PTR [rsi-0x7abff27e],esi
   14000ea7a:	mov    esp,0x61b53540
   14000ea7f:	fstp   QWORD PTR [rbx+0x2c]
   14000ea82:	add    eax,0x3746a946
   14000ea87:	push   rsi
   14000ea88:	mov    ecx,0x85f04fd7
   14000ea8d:	push   rbp
   14000ea8e:	movabs al,ds:0x5562b2c20450a33a
   14000ea97:	xor    BYTE PTR [rcx+rsi*4-0x4d38e362],ah
   14000ea9e:	cmp    DWORD PTR [rsi-0x47a22122],ecx
   14000eaa4:	(bad)  
   14000eaa5:	js     0x14000eaba
   14000eaa7:	xchg   esi,eax
   14000eaa8:	rex.WRXB sbb al,0xc7
   14000eaab:	jo     0x14000eae5
   14000eaad:	ret    0x24c8
   14000eab0:	rcl    BYTE PTR [rcx-0x7a],1
   14000eab3:	test   DWORD PTR [rcx-0x73],edi
   14000eab6:	xchg   esi,eax
   14000eab7:	adc    ch,al
   14000eab9:	mov    DWORD PTR [rbp+rcx*4-0x7a77f112],0xe058c845
   14000eac4:	in     al,0xf2
   14000eac6:	(bad)  
   14000eac7:	jo     0x14000eabf
   14000eac9:	fsubr  st(3),st
   14000eacb:	fdivr  DWORD PTR [rbp-0x12d38505]
   14000ead1:	mov    ebx,0x3045421e
   14000ead6:	cmp    ch,BYTE PTR [rbx]
   14000ead8:	rex.X dec DWORD PTR [rbx+0x2b]
   14000eadc:	add    eax,0x4b60928b
   14000eae1:	xlat   BYTE PTR ds:[rbx]
   14000eae2:	rex.XB sub r13b,sil
   14000eae5:	add    eax,ebx
   14000eae7:	push   rcx
   14000eae8:	add    dl,BYTE PTR [rcx+0x34]
   14000eaeb:	(bad)  
   14000eaec:	(bad)  
   14000eaed:	rex.R std 
   14000eaef:	or     al,0x8d
   14000eaf1:	out    dx,eax
   14000eaf2:	rex.WRXB jae 0x14000eaee
   14000eaf5:	fwait
   14000eaf6:	repz ss jnp 0x14000eb02
   14000eafa:	pop    rbx
   14000eafb:	sbb    DWORD PTR [rdx],ecx
   14000eafd:	imul   bx,ax,0x0
   14000eb01:	xor    al,0x51
   14000eb03:	sub    bh,BYTE PTR [rbp+rax*2+0x49f61551]
   14000eb0a:	fwait
   14000eb0b:	mov    BYTE PTR [rax+rsi*2+0x7654828b],al
   14000eb12:	jb     0x14000eb43
   14000eb14:	imul   eax,DWORD PTR [rax-0x76],0xffffff83
   14000eb18:	clc    
   14000eb19:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000eb1a:	adc    DWORD PTR [rbp-0x60bf3b6b],0x49ecd9c6
   14000eb24:	or     al,0xb2
   14000eb26:	adc    eax,0x9f31a424
   14000eb2b:	or     esp,esi
   14000eb2d:	jp     0x14000ebac
   14000eb2f:	int3   
   14000eb30:	(bad)  
   14000eb31:	add    ah,BYTE PTR cs:[rdx+0x1d]
   14000eb35:	lods   eax,DWORD PTR ds:[rsi]
   14000eb36:	push   rsi
   14000eb37:	add    bl,ch
   14000eb39:	add    QWORD PTR [r11+0x31b46801],r12
   14000eb40:	rcr    DWORD PTR [rcx-0x489bfd22],0x83
   14000eb47:	mov    eax,0x76cd1023
   14000eb4c:	and    DWORD PTR [rbx+0x11],edi
   14000eb4f:	xchg   esi,eax
   14000eb50:	iret   
   14000eb51:	cmp    eax,0x8e07d58a
   14000eb56:	movsxd ebp,edi
   14000eb58:	(bad)  
   14000eb59:	fwait
   14000eb5a:	rcr    ebx,1
   14000eb5c:	mov    cl,0x1b
   14000eb5e:	(bad)  
   14000eb5f:	xchg   esp,eax
   14000eb60:	addr32 in al,dx
   14000eb62:	adc    eax,0xd1f0d5e7
   14000eb67:	sbb    DWORD PTR [rbp-0x3a1f4504],esp
   14000eb6d:	pop    rdi
   14000eb6e:	ins    BYTE PTR es:[rdi],dx
   14000eb6f:	scas   eax,DWORD PTR es:[rdi]
   14000eb70:	out    dx,al
   14000eb71:	jbe    0x14000eb24
   14000eb73:	rex.XB jp 0x14000ebad
   14000eb76:	(bad)  
   14000eb77:	(bad)  
   14000eb78:	(bad)  
   14000eb79:	rol    ecx,cl
   14000eb7b:	ins    BYTE PTR es:[rdi],dx
   14000eb7c:	test   DWORD PTR [rax+rbx*8+0x11c97027],edi
   14000eb83:	jp     0x14000eb6e
   14000eb85:	and    r13d,esi
   14000eb88:	add    DWORD PTR [rbx],edi
   14000eb8a:	rex.X add BYTE PTR [rcx-0x3cbfe14e],sil
   14000eb91:	scas   al,BYTE PTR es:[rdi]
   14000eb92:	xchg   ebp,eax
   14000eb93:	ss ins BYTE PTR es:[rdi],dx
   14000eb95:	loope  0x14000eb37
   14000eb97:	rex.WX
   14000eb98:	rex.W push 0x7b3a714a
   14000eb9e:	or     BYTE PTR [rbx],ch
   14000eba0:	cli    
   14000eba1:	add    DWORD PTR [rax-0x54],ebp
   14000eba4:	or     DWORD PTR [r13+0x46d18896],eax
   14000ebab:	(bad)  
   14000ebac:	add    r14b,BYTE PTR [rcx+0x24]
   14000ebb0:	adc    BYTE PTR [rbx-0x77],cl
   14000ebb3:	rex.W sub al,BYTE PTR [rdx+rdx*2+0x15]
   14000ebb8:	imul   eax,DWORD PTR [rax],0xffffffaa
   14000ebbb:	or     BYTE PTR [rbx+0x5ee222de],al
   14000ebc1:	mov    WORD PTR [rax-0x4f],?
   14000ebc4:	(bad)  
   14000ebc5:	mov    ch,0xa3
   14000ebc7:	add    eax,0xbbd08ed9
   14000ebcc:	jp     0x14000ebcf
   14000ebce:	xchg   di,ax
   14000ebd0:	shl    DWORD PTR [rbx+0x4f],0xdc
   14000ebd4:	test   DWORD PTR [rbx-0x59],esi
   14000ebd7:	mov    esi,0xf7222105
   14000ebdc:	rcl    BYTE PTR [rax-0x1727728e],1
   14000ebe2:	pushf  
   14000ebe3:	cmp    eax,DWORD PTR [rbx]
   14000ebe5:	xchg   ebp,eax
   14000ebe6:	sbb    DWORD PTR [rdx+0x1b8f2292],eax
   14000ebec:	(bad)  
   14000ebed:	push   0x6d8b9a10
   14000ebf2:	rex in eax,0x28
   14000ebf5:	out    0x33,eax
   14000ebf7:	mov    esi,0x65a8365f
   14000ebfc:	icebp  
   14000ebfd:	adc    ebx,DWORD PTR [rdx-0x1d72b672]
   14000ec03:	scas   eax,DWORD PTR es:[rdi]
   14000ec04:	pop    rsi
   14000ec05:	lea    edx,[rdi]
   14000ec07:	jg     0x14000ec6c
   14000ec09:	cmp    bl,BYTE PTR [rbx-0x80]
   14000ec0c:	sub    eax,0x42a00f61
   14000ec11:	mov    esi,0x8dd54e22
   14000ec16:	adc    eax,0x7adafb45
   14000ec1b:	add    BYTE PTR [rsi-0x1710d0c5],ch
   14000ec21:	mov    bl,0xfb
   14000ec23:	in     al,0x9d
   14000ec25:	push   0xffffffff90431c54
   14000ec2a:	(bad)  
   14000ec2b:	cwde   
   14000ec2c:	ss jo  0x14000ec5b
   14000ec2f:	mov    ecx,0x98491d17
   14000ec34:	mov    esp,DWORD PTR [rdi+0x61]
   14000ec37:	rex pop rax
   14000ec39:	lahf   
   14000ec3a:	ins    BYTE PTR es:[rdi],dx
   14000ec3b:	rcl    BYTE PTR [rax+0xa],0xa9
   14000ec3f:	adc    eax,0xca9fa926
   14000ec44:	imul   ebx,DWORD PTR [rdi+0x22dda410],0x1d
   14000ec4b:	mov    cl,0x20
   14000ec4d:	and    al,0x9d
   14000ec4f:	pop    rcx
   14000ec50:	ins    BYTE PTR es:[rdi],dx
   14000ec51:	int3   
   14000ec52:	movabs eax,cs:0x352cf6476a85d4b5
   14000ec5c:	and    DWORD PTR [rbx],esi
   14000ec5e:	sub    DWORD PTR [rdx-0x4d],ebx
   14000ec61:	pop    rbp
   14000ec62:	(bad)  
   14000ec63:	mov    ebp,0xfd1e8e16
   14000ec68:	adc    dh,dh
   14000ec6a:	jmp    0x15d583773
   14000ec6f:	add    DWORD PTR [rcx-0x16],edx
   14000ec72:	(bad)  
   14000ec73:	sub    eax,0x4ae1208
   14000ec78:	add    DWORD PTR [rcx],edx
   14000ec7a:	fnstenv [rax]
   14000ec7c:	loope  0x14000ec07
   14000ec7e:	ss push 0xffffffffefc7a2a9
   14000ec84:	(bad)  
   14000ec85:	pop    rbp
   14000ec86:	jle    0x14000ecdc
   14000ec88:	fnstsw WORD PTR [rbx-0x6c]
   14000ec8b:	sar    ah,cl
   14000ec8d:	mov    ebp,0xe535a7ad
   14000ec92:	popf   
   14000ec93:	(bad)  
   14000ec95:	rex.RXB sub eax,0x3193a1bd
   14000ec9b:	xor    dl,ah
   14000ec9d:	int3   
   14000ec9e:	out    0xb0,al
   14000eca0:	(bad)  
   14000eca1:	xor    BYTE PTR [rbp-0x7dd52950],al
   14000eca7:	ins    DWORD PTR es:[rdi],dx
   14000eca8:	in     al,dx
   14000eca9:	pop    rdx
   14000ecaa:	cli    
   14000ecab:	fisttp QWORD PTR [rax+0x61]
   14000ecae:	jne    0x14000ec8c
   14000ecb0:	sbb    al,0xb
   14000ecb2:	rex stc 
   14000ecb4:	mov    fs,WORD PTR [rcx+0x29]
   14000ecb7:	xor    al,0x38
   14000ecb9:	ss jle 0x14000ecbc
   14000ecbc:	test   eax,0xbaaba11e
   14000ecc1:	mov    BYTE PTR [rbp+0x4],dl
   14000ecc4:	and    eax,0xd7bd5d84
   14000ecc9:	fdiv   DWORD PTR [rip+0xffffffffa09ac706]        # 0xe09bb3d5
   14000eccf:	test   BYTE PTR [rcx+0x6b],dh
   14000ecd2:	cld    
   14000ecd3:	fistp  DWORD PTR [rip+0xffffffffb510c995]        # 0xf511b66e
   14000ecd9:	pop    rdx
   14000ecda:	js     0x14000ed4e
   14000ecdc:	push   rbx
   14000ecde:	and    BYTE PTR [rdi+0x13a881de],ch
   14000ece4:	fld    DWORD PTR [rsi-0x7c]
   14000ece7:	adc    BYTE PTR [rax+0x4810800a],dl
   14000eced:	rcl    DWORD PTR [rax+rcx*4],cl
   14000ecf0:	adc    al,0x66
   14000ecf2:	pmaxsw mm0,mm4
   14000ecf5:	xchg   ebx,eax
   14000ecf6:	(bad)  
   14000ecf7:	mov    esi,0x6395b586
   14000ecfc:	adc    ah,ah
   14000ecfe:	iret   
   14000ecff:	(bad)  
   14000ed00:	(bad)  
   14000ed03:	or     eax,0xc931623e
   14000ed08:	or     al,0x5a
   14000ed0a:	rex.WX movabs rdx,0x5b6137e465f94349
   14000ed14:	loop   0x14000ed25
   14000ed16:	cmp    al,0x8e
   14000ed18:	es push r15
   14000ed1b:	mov    ebp,0xbcb36029
   14000ed20:	shr    DWORD PTR [rdi+0x6],0x2a
   14000ed24:	scas   al,BYTE PTR es:[rdi]
   14000ed25:	in     eax,0xa5
   14000ed27:	lock test al,0x4d
   14000ed2a:	stc    
   14000ed2b:	pop    rcx
   14000ed2c:	(bad)  
   14000ed2d:	fild   DWORD PTR [rcx-0x5ef57fc3]
   14000ed33:	sbb    ebx,DWORD PTR [rdi+0x2d]
   14000ed36:	rex.X
   14000ed37:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ed39:	mov    dh,0x1b
   14000ed3b:	rex.WB lods al,BYTE PTR ds:[rsi]
   14000ed3d:	(bad)  
   14000ed3e:	shl    edx,cl
   14000ed40:	xchg   BYTE PTR [rdx-0x7e731015],ch
   14000ed46:	test   dl,al
   14000ed48:	jp     0x14000ed00
   14000ed4a:	mov    WORD PTR [rbp-0x2ac2fa8c],cs
   14000ed50:	rol    DWORD PTR [rsi+0x32],0x42
   14000ed54:	fld    TBYTE PTR [rax+0x18]
   14000ed57:	ror    BYTE PTR [rax+0x75],cl
   14000ed5a:	or     cl,BYTE PTR [rax]
   14000ed5c:	and    BYTE PTR [rbp+0x26],cl
   14000ed5f:	pop    rax
   14000ed60:	lahf   
   14000ed61:	cmp    eax,0xae7b1d8c
   14000ed66:	rex.RX cmp r15d,DWORD PTR [rcx+0x6d180f]
   14000ed6d:	in     eax,dx
   14000ed6e:	(bad)  
   14000ed6f:	data16 (bad) 
   14000ed71:	(bad)  
   14000ed72:	loope  0x14000ed05
   14000ed74:	vaddpd ymm11,ymm12,YMMWORD PTR [rbx+0x5c]
   14000ed79:	rex.X pop rbx
   14000ed7b:	rex.WX cmp rsp,QWORD PTR [rdi+0x44235940]
   14000ed82:	ret    0xf45
   14000ed85:	xchg   edx,eax
   14000ed86:	sar    BYTE PTR [rax],0x4b
   14000ed89:	shr    BYTE PTR [rbp-0x4b],1
   14000ed8c:	rcr    cl,1
   14000ed8e:	(bad)  
   14000ed8f:	mov    esp,DWORD PTR [rbx+0x37157f8f]
   14000ed95:	je     0x14000edf5
   14000ed97:	test   DWORD PTR [rax-0x50b6fe23],edi
   14000ed9d:	mov    dl,cl
   14000ed9f:	rol    BYTE PTR [rax],1
   14000eda1:	nop
   14000eda2:	(bad)  
   14000eda3:	imul   ebp,DWORD PTR [rax+0x2d],0x296998d1
   14000edaa:	in     al,0xb3
   14000edac:	mov    ah,bh
   14000edae:	sub    ah,BYTE PTR [rbp-0x31]
   14000edb1:	(bad)  
   14000edb2:	jnp    0x14000ee33
   14000edb4:	sub    ecx,DWORD PTR [rdi]
   14000edb6:	movabs eax,ds:0xcf5e929a74c2b7f9
   14000edbf:	iret   
   14000edc0:	ins    BYTE PTR es:[rdi],dx
   14000edc1:	(bad)  
   14000edc2:	sbb    eax,DWORD PTR [rax+0x50b5ca46]
   14000edc8:	pop    rsi
   14000edc9:	mov    eax,0x40a42004
   14000edce:	(bad)  
   14000edcf:	xchg   edx,eax
   14000edd0:	pop    rax
   14000edd1:	sbb    ebx,DWORD PTR [rcx+0xf]
   14000edd4:	in     al,0xc1
   14000edd7:	push   r12
   14000edd9:	fs (bad) 
   14000eddb:	cmp    eax,DWORD PTR [rax]
   14000eddd:	mov    DWORD PTR [rax+0x2e],esi
   14000ede0:	cmp    eax,0xa6469005
   14000ede5:	xor    esp,DWORD PTR [rcx+rbx*2]
   14000ede8:	mov    ah,BYTE PTR [rbx+rcx*8]
   14000edeb:	and    BYTE PTR [rbp+0x52f8e3b4],dl
   14000edf1:	rex.X sub DWORD PTR [rcx+0x7b31b54c],ecx
   14000edf8:	retf   
   14000edf9:	sub    eax,DWORD PTR [rcx+0x4a0f9eab]
   14000edff:	adc    ecx,esp
   14000ee01:	int    0x2f
   14000ee03:	loope  0x14000eded
   14000ee05:	js     0x14000ee1c
   14000ee07:	rex.WRXB pushf 
   14000ee09:	mov    edx,0x4a002d1f
   14000ee0e:	rex.W
   14000ee0f:	rex.R
   14000ee10:	rex.WX movabs ds:0x8d484440a5282915,al
   14000ee1a:	add    DWORD PTR [rdx+rax*1-0x53],ecx
   14000ee1e:	add    eax,0xf6826986
   14000ee23:	rcr    BYTE PTR [rsi+rax*1],cl
   14000ee26:	sub    eax,edi
   14000ee28:	mov    al,0x7c
   14000ee2a:	(bad)  
   14000ee2b:	sub    dh,dh
   14000ee2d:	in     al,dx
   14000ee2e:	cmp    eax,0x71642902
   14000ee33:	outs   dx,BYTE PTR ds:[rsi]
   14000ee34:	inc    BYTE PTR [rdx]
   14000ee36:	push   rax
   14000ee37:	pushf  
   14000ee38:	(bad)  
   14000ee39:	mov    BYTE PTR [rax],dh
   14000ee3b:	or     rax,0xffffffffcc54717a
   14000ee41:	and    dh,ah
   14000ee43:	pop    rsi
   14000ee44:	or     al,0xb6
   14000ee46:	adc    bl,al
   14000ee48:	jns    0x14000ee96
   14000ee4a:	loope  0x14000eeb9
   14000ee4c:	push   0x5a
   14000ee4e:	xchg   esp,eax
   14000ee4f:	repnz ss (bad) 
   14000ee52:	in     al,0xd5
   14000ee54:	mov    esp,0xe9cd7fc1
   14000ee59:	rex.WRB ret 0x5367
   14000ee5d:	mov    al,0x15
   14000ee5f:	ins    BYTE PTR es:[rdi],dx
   14000ee60:	add    BYTE PTR [rdx+0x16614350],ch
   14000ee66:	xchg   esp,eax
   14000ee67:	xlat   BYTE PTR ds:[rbx]
   14000ee68:	mov    WORD PTR [rdx+0x0],es
   14000ee6b:	std    
   14000ee6c:	pop    rax
   14000ee6d:	loope  0x14000ee5b
   14000ee6f:	enter  0xb8f6,0x4b
   14000ee73:	sub    DWORD PTR [rax+0x720233dc],esp
   14000ee79:	test   ecx,0x64034817
   14000ee7f:	xchg   esp,eax
   14000ee80:	(bad)  
   14000ee81:	cmp    eax,0x9000815b
   14000ee86:	push   rdx
   14000ee87:	out    0x6a,al
   14000ee89:	pop    rsi
   14000ee8a:	add    eax,DWORD PTR [rbp+0x11]
   14000ee8d:	cld    
   14000ee8e:	sbb    al,0x7c
   14000ee90:	and    eax,DWORD PTR [rip+0xfffffffff3b30640]        # 0x133b3f4d6
   14000ee96:	or     ecx,DWORD PTR [rax+0x5bb46d5a]
   14000ee9c:	pop    rbp
   14000ee9d:	lods   al,BYTE PTR ds:[rsi]
   14000ee9e:	(bad)  
   14000ee9f:	(bad)  
   14000eea0:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eea2:	jnp    0x14000ee63
   14000eea4:	or     BYTE PTR [rax+0x48],0x28
   14000eea8:	test   eax,0x3b40a520
   14000eead:	mov    ss,ecx
   14000eeaf:	lea    ebx,[rbx-0x78]
   14000eeb2:	push   rbp
   14000eeb3:	add    al,0x23
   14000eeb5:	or     BYTE PTR [rbx],dl
   14000eeb7:	popf   
   14000eeb8:	ror    BYTE PTR [rsp+rsi*1+0x12],0xca
   14000eebd:	lods   al,BYTE PTR ds:[rsi]
   14000eebe:	rex.B enter 0x7452,0x76
   14000eec3:	int    0x61
   14000eec5:	in     eax,0xf1
   14000eec7:	(bad)  
   14000eec8:	xor    DWORD PTR [rdi],esi
   14000eeca:	mov    bh,0x7
   14000eecc:	in     eax,dx
   14000eecd:	jle    0x14000eede
   14000eecf:	push   rcx
   14000eed0:	in     al,0xc5
   14000eed2:	pop    rbp
   14000eed3:	(bad)  
   14000eed4:	(bad)  
   14000eed5:	and    BYTE PTR [rax],al
   14000eed7:	sbb    ecx,DWORD PTR [rcx-0x5bfad3ba]
   14000eedd:	mov    eax,DWORD PTR [rbx]
   14000eedf:	or     BYTE PTR [rip+0xfffffffffe5d2d99],bl        # 0x13e5e1c7e
   14000eee5:	push   0xffffffffffffffbe
   14000eee7:	lock jle 0x14000eecb
   14000eeea:	cld    
   14000eeeb:	pop    rsp
   14000eeec:	(bad)  
   14000eeed:	shl    dh,cl
   14000eeef:	rex.WRB movabs r13,0x11b819fedf89ed84
   14000eef9:	mov    al,0x1d
   14000eefb:	fadd   DWORD PTR [rax]
   14000eefd:	push   rsp
   14000eefe:	enter  0x5c35,0x2a
   14000ef02:	movabs al,ds:0x2917a042901635de
   14000ef0b:	lods   al,BYTE PTR ds:[rsi]
   14000ef0c:	mov    ecx,0x5228803e
   14000ef11:	push   0x1a54aac5
   14000ef16:	in     eax,dx
   14000ef17:	xor    esp,ebp
   14000ef19:	rex.XB
   14000ef1a:	ss (bad) 
   14000ef1c:	jp     0x14000eea6
   14000ef1e:	rex.WB
   14000ef1f:	adc    BYTE PTR ss:[rdx],0x0
   14000ef23:	sar    DWORD PTR [rsi],0x81
   14000ef26:	(bad)  
   14000ef27:	retf   
   14000ef28:	rex.RB
   14000ef29:	rex.R
   14000ef2a:	rex.W
   14000ef2b:	rex.WB out 0x2b,eax
   14000ef2e:	add    esi,ebp
   14000ef30:	out    0x16,al
   14000ef32:	adc    BYTE PTR [rbp+0x6dc7687a],dh
   14000ef38:	jl     0x14000ef28
   14000ef3a:	shr    DWORD PTR [rdi],1
   14000ef3c:	(bad)  
   14000ef3d:	test   al,0x53
   14000ef3f:	je     0x14000ef24
   14000ef41:	(bad)  
   14000ef42:	test   BYTE PTR [rax],dl
   14000ef44:	mov    BYTE PTR [rdx+rax*2+0x4568c54b],dl
   14000ef4b:	sub    eax,0xbf0471c4
   14000ef50:	mov    bh,dl
   14000ef52:	sub    BYTE PTR [rdx-0x737eb7c0],cl
   14000ef58:	nop
   14000ef59:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ef5a:	sbb    dh,BYTE PTR [rcx-0x51]
   14000ef5d:	lea    edx,[rcx+0x6b]
   14000ef60:	or     eax,0x618e56e7
   14000ef65:	fisttp DWORD PTR es:[rcx+0x7683b756]
   14000ef6c:	mov    ebx,0x9422a90d
   14000ef71:	rex.X test BYTE PTR fs:[rbp+0x49474324],cl
   14000ef79:	sub    rdx,rsi
   14000ef7c:	jo     0x14000ef65
   14000ef7e:	xor    BYTE PTR [rax+rdi*4],bl
   14000ef81:	test   eax,0xfc4adfd6
   14000ef86:	rex.WRB
   14000ef87:	cs jg  0x14000ef22
   14000ef8a:	neg    ecx
   14000ef8c:	jbe    0x14000ef87
   14000ef8e:	test   eax,0x26cc327e
   14000ef93:	mov    al,0x1
   14000ef95:	push   0xfffffffffd717720
   14000ef9a:	ja     0x14000f00e
   14000ef9c:	imul   ebp,esp,0xb
   14000ef9f:	add    DWORD PTR [rcx],esp
   14000efa1:	add    eax,0x670a5b66
   14000efa6:	xchg   dh,dl
   14000efa8:	add    ebp,DWORD PTR [rax-0x3b]
   14000efab:	or     bl,ch
   14000efad:	retf   0x8293
   14000efb0:	leave  
   14000efb1:	cmp    eax,0xc490d3c8
   14000efb6:	rex.W seto BYTE PTR [rdx-0x1d55b7f7]
   14000efbe:	fadd   DWORD PTR [rdx+0x41]
   14000efc1:	adc    DWORD PTR [rax+0x746cc9a],0xffffffc6
   14000efc8:	sbb    eax,0x15065964
   14000efcd:	mov    ch,0xd1
   14000efcf:	jmp    0x14000f048
   14000efd1:	jo     0x14000f049
   14000efd3:	cmc    
   14000efd4:	adc    al,0xbe
   14000efd6:	jns    0x14000efce
   14000efd8:	sub    DWORD PTR [rbx+riz*8+0x42082016],esi
   14000efdf:	add    cl,BYTE PTR [rdx-0x27]
   14000efe2:	rex movs BYTE PTR es:[rdi],BYTE PTR es:[rsi]
   14000efe5:	in     al,dx
   14000efe6:	adc    BYTE PTR [rcx+0x23210321],ah
   14000efec:	test   al,0x48
   14000efee:	rex.B
   14000efef:	data16 or ah,BYTE PTR [rax]
   14000eff2:	or     eax,0x48435ad
   14000eff7:	xor    BYTE PTR [rbx],dl
   14000eff9:	(bad)  
   14000effa:	jne    0x14000f075
   14000effc:	sbb    DWORD PTR [rcx+rcx*1+0x7a36ddc4],edx
   14000f003:	mov    bl,0xb3
   14000f005:	call   0xe64157fe
   14000f00a:	mov    esp,0x48ead192
   14000f00f:	movabs ds:0x899b377bc5ef591f,eax
   14000f018:	inc    DWORD PTR [rdx+0x4]
   14000f01b:	mov    ebp,0xfcd08795
   14000f020:	pop    rbx
   14000f021:	(bad)  
   14000f022:	jp     0x14000efe1
   14000f024:	fisttp WORD PTR es:[rsi-0x4762b408]
   14000f02b:	int3   
   14000f02c:	push   rsp
   14000f02d:	fadd   DWORD PTR [rax]
   14000f02f:	push   rsp
   14000f030:	lock cmp esp,DWORD PTR [rip+0x5a173bf1]        # 0x19a182c29
   14000f038:	rex.WX fild DWORD PTR [rdi]
   14000f03b:	mov    al,0xd8
   14000f03d:	lea    esi,[rcx+0x7c]
   14000f040:	jne    0x14000efde
   14000f042:	out    dx,eax
   14000f043:	shr    ebx,cl
   14000f045:	mov    edx,0xb8c6bd29
   14000f04a:	out    0x3,eax
   14000f04c:	mov    eax,0x300c3885
   14000f051:	rex.WX xchg BYTE PTR [rax-0x5f],cl
   14000f055:	and    ebp,edi
   14000f057:	xor    DWORD PTR [rsi],0x5c
   14000f05a:	(bad)  
   14000f05b:	pop    rbx
   14000f05c:	stos   BYTE PTR es:[rdi],al
   14000f05d:	in     eax,dx
   14000f05e:	ror    DWORD PTR [rcx+0x8],0x24
   14000f062:	add    al,BYTE PTR [rax-0x66]
   14000f065:	rex retf 0xb108
   14000f069:	xchg   esp,eax
   14000f06a:	mov    eax,0x3007a9ff
   14000f06f:	retf   0x6826
   14000f072:	(bad)  
   14000f073:	sbb    eax,0x42904108
   14000f078:	rex or DWORD PTR [rcx],eax
   14000f07b:	movabs eax,ds:0x14900082136d2004
   14000f084:	nop
   14000f085:	and    al,0xa1
   14000f087:	pop    rsp
   14000f088:	cmc    
   14000f089:	rex.WRB
   14000f08a:	rex.R shr BYTE PTR [rcx+0x18456a86],1
   14000f091:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f092:	jmp    0x14000f0fc
   14000f094:	(bad)  
   14000f095:	xchg   ax,ax
   14000f097:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f098:	and    ebp,eax
   14000f09a:	sub    al,0x1
   14000f09c:	adc    DWORD PTR [rcx],esp
   14000f09e:	retf   
   14000f09f:	jp     0x14000f09a
   14000f0a1:	cmp    DWORD PTR [rbx+0x6d],ebp
   14000f0a4:	jo     0x14000f120
   14000f0a6:	cwde   
   14000f0a7:	(bad)  
   14000f0a8:	scas   al,BYTE PTR es:[rdi]
   14000f0a9:	adc    eax,0x7914a41
   14000f0ae:	cmp    ecx,edi
   14000f0b0:	imul   esi,DWORD PTR [rsi+0x2bb822f7],0xffffffdb
   14000f0b7:	adc    al,0xff
   14000f0b9:	jae    0x14000f0ec
   14000f0bb:	(bad)  
   14000f0bc:	push   rdi
   14000f0bd:	int    0x6f
   14000f0bf:	(bad)  
   14000f0c0:	pop    rdi
   14000f0c1:	outs   dx,BYTE PTR ds:[rsi]
   14000f0c2:	rex.WX mov al,0xf8
   14000f0c5:	mov    bh,0x7
   14000f0c7:	sbb    eax,DWORD PTR [rax-0x34fe9ed6]
   14000f0cd:	sti    
   14000f0ce:	add    BYTE PTR [rbp+rcx*1+0x29],bh
   14000f0d2:	movabs al,ds:0x37395f0b5ecec0a4
   14000f0db:	int3   
   14000f0dc:	ja     0x14000f147
   14000f0de:	mov    ch,0x6c
   14000f0e0:	adc    eax,eax
   14000f0e2:	adc    BYTE PTR [rax-0x74],ah
   14000f0e5:	rex.B
   14000f0e6:	data16 or al,0xb4
   14000f0e9:	xor    DWORD PTR [rax],esp
   14000f0eb:	or     eax,0x4c82744c
   14000f0f0:	add    BYTE PTR [rdx-0x46],cl
   14000f0f3:	push   rcx
   14000f0f4:	add    al,0xe7
   14000f0f6:	cli    
   14000f0f7:	sbb    ebx,DWORD PTR [rbx]
   14000f0f9:	adc    al,0x8
   14000f0fb:	sub    eax,0x1030a908
   14000f100:	cmp    al,BYTE PTR [rbx]
   14000f102:	adc    DWORD PTR [rax],esi
   14000f104:	sbb    BYTE PTR [rbp+0x6fc9d0f0],cl
   14000f10a:	and    dl,BYTE PTR [rdx+0x11]
   14000f10d:	and    BYTE PTR [rsp+rax*4],cl
   14000f110:	mov    ah,0x1d
   14000f112:	jns    0x14000f15a
   14000f114:	fsub   DWORD PTR [rdi-0x3ca59af6]
   14000f11a:	sub    BYTE PTR [rbx],bh
   14000f11c:	test   eax,0x82c7fb48
   14000f121:	sti    
   14000f122:	sbb    DWORD PTR [rdx-0x47dcdf3a],eax
   14000f128:	(bad)
   14000f12c:	xor    ch,BYTE PTR [rdx]
   14000f12e:	rex ret 
   14000f130:	and    DWORD PTR [rsp+rcx*4-0x301d6570],esp
   14000f137:	popf   
   14000f138:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f139:	sbb    ah,BYTE PTR [rdi]
   14000f13b:	(bad)  
   14000f13c:	(bad)  
   14000f13d:	cwde   
   14000f13e:	out    dx,eax
   14000f13f:	adc    dl,r9b
   14000f142:	jp     0x14000f17a
   14000f144:	loope  0x14000f126
   14000f146:	loope  0x14000f0fb
   14000f148:	(bad)  
   14000f14a:	(bad)  
   14000f14b:	cmovae edx,DWORD PTR [rcx-0x3]
   14000f14f:	jnp    0x14000f19d
   14000f151:	jne    0x14000f14c
   14000f153:	rol    edx,0x3f
   14000f156:	pop    rdi
   14000f157:	fadd   DWORD PTR [rax]
   14000f159:	xor    al,0x10
   14000f15b:	(bad)  
   14000f15c:	lock add al,0x8
   14000f15f:	xlat   BYTE PTR ds:[rbx]
   14000f160:	loope  0x14000f189
   14000f162:	mov    al,0xab
   14000f164:	ffreep st(2)
   14000f166:	icebp  
   14000f167:	(bad)  
   14000f168:	(bad)  
   14000f169:	xchg   esp,eax
   14000f16a:	mov    dh,0xa6
   14000f16c:	fcmovb st,st(0)
   14000f16e:	push   0xffffffffdc6d7c2b
   14000f173:	repnz pop rbx
   14000f175:	fiadd  DWORD PTR [rax+0x67]
   14000f178:	sbb    DWORD PTR [rdx+rsi*1+0x36dc3e30],ecx
   14000f17f:	(bad)  
   14000f180:	jo     0x14000f139
   14000f182:	(bad)  
   14000f183:	(bad)  
   14000f184:	mov    WORD PTR [rcx-0x34c5edaf],es
   14000f18a:	nop
   14000f18b:	rex.WRB xor al,0x8e
   14000f18e:	cs (bad) 
   14000f190:	vpsrlw xmm3,xmm12,XMMWORD PTR [rcx+0x44]
   14000f195:	push   rcx
   14000f196:	in     al,dx
   14000f197:	sbb    BYTE PTR [rsp+r8*4],r8b
   14000f19b:	xchg   edx,eax
   14000f19c:	and    BYTE PTR [rax],dl
   14000f19e:	xor    ch,BYTE PTR [rbp-0x3fbdbdbf]
   14000f1a4:	or     bh,BYTE PTR [rdi]
   14000f1a6:	xor    eax,DWORD PTR [rsi]
   14000f1a8:	xchg   BYTE PTR [rax+rax*2],dh
   14000f1ab:	(bad)  
   14000f1ac:	jp     0x14000f1c1
   14000f1ae:	xchg   BYTE PTR [rax+0xa12868d],ah
   14000f1b4:	and    bl,BYTE PTR es:[rax+0x31948334]
   14000f1bb:	rex.WR (bad) 
   14000f1bd:	(bad)  
   14000f1be:	jne    0x14000f224
   14000f1c0:	(bad)  
   14000f1c1:	test   al,0x30
   14000f1c3:	pop    rdx
   14000f1c4:	movabs ds:0xc6ecec636b638a71,eax
   14000f1cd:	push   rax
   14000f1ce:	rex.WX pop rdx
   14000f1d0:	mov    rax,cr5
   14000f1d3:	or     ebx,DWORD PTR [rax+0xdd7eb56]
   14000f1d9:	ret    0xd1a5
   14000f1dc:	fisubr WORD PTR [rdi-0x76b2fb87]
   14000f1e2:	rex.WR or rax,0x28150036
   14000f1e8:	js     0x14000f1cf
   14000f1ea:	fisttp WORD PTR [rcx+0x40]
   14000f1ed:	rex.WX (bad) 
   14000f1ef:	push   rsp
   14000f1f0:	add    dl,BYTE PTR [rcx+0x24]
   14000f1f3:	jno    0x14000f1ea
   14000f1f5:	ins    BYTE PTR es:[rdi],dx
   14000f1f6:	(bad)  
   14000f1f7:	rex.WRXB pushf 
   14000f1f9:	sbb    esp,ebp
   14000f1fb:	sti    
   14000f1fc:	sub    al,0xf5
   14000f1fe:	pop    rbx
   14000f1ff:	call   0x134f91d28
   14000f204:	xchg   edi,eax
   14000f205:	(bad)  
   14000f206:	rex.WRX cmp rdx,r13
   14000f209:	adc    DWORD PTR [rsi+riz*4+0x6f80016c],ecx
   14000f210:	add    BYTE PTR [rax],al
   14000f212:	out    0x71,al
   14000f214:	iret   
   14000f215:	outs   dx,DWORD PTR ds:[rsi]
   14000f216:	std    
   14000f217:	mov    ecx,0x1e78394b
   14000f21c:	fadd   QWORD PTR [ecx]
   14000f21f:	xor    BYTE PTR [rdi+0x4a],dl
   14000f222:	cdq    
   14000f223:	add    BYTE PTR [rax+0x415a5600],al
   14000f229:	(bad)  
   14000f22a:	or     ch,BYTE PTR [rax+0x29]
   14000f22d:	jo     0x14000f2a7
   14000f22f:	test   eax,0xc128e18f
   14000f234:	(bad)  
   14000f235:	cmp    cl,al
   14000f237:	adc    ebp,DWORD PTR [rbx-0x6463e39d]
   14000f23d:	adc    DWORD PTR [rdx+0x32],0x3cb02f8f
   14000f244:	xchg   ebx,eax
   14000f245:	in     eax,dx
   14000f246:	std    
   14000f247:	out    0x21,al
   14000f249:	mov    esi,0xff8371d2
   14000f24e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f24f:	(bad)  
   14000f250:	cli    
   14000f251:	mov    ch,0xe3
   14000f253:	(bad)  
   14000f254:	(bad)  
   14000f255:	stos   DWORD PTR es:[rdi],eax
   14000f256:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f257:	mov    ebx,0xadffac0f
   14000f25c:	(bad)  
   14000f25d:	add    edx,eax
   14000f25f:	rex mov ecx,0x11e53c0
   14000f265:	and    al,0xa5
   14000f267:	or     BYTE PTR [rdx+0x63f47624],0x74
   14000f26e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f26f:	(bad)
   14000f273:	sbb    al,0x5a
   14000f275:	in     al,dx
   14000f276:	and    DWORD PTR [rsi+0x53f1bf02],edx
   14000f27c:	outs   dx,DWORD PTR ds:[rsi]
   14000f27d:	mov    ecx,0x1e7c2778
   14000f282:	push   0xffffffffc4ec706d
   14000f287:	sub    al,BYTE PTR [rsi]
   14000f289:	add    DWORD PTR [rdi+rcx*4],0xffffff9c
   14000f28d:	sbb    eax,0x770775e3
   14000f292:	rex.B vrsqrtss xmm9,xmm13,DWORD PTR [rcx-0x25]
   14000f298:	sub    DWORD PTR [rax],0x7c4214a8
   14000f29e:	test   eax,0x7337f7b5
   14000f2a3:	stc    
   14000f2a4:	mov    ecx,0x387f3fd6
   14000f2a9:	adc    al,0xb8
   14000f2ab:	rex.X push rbp
   14000f2ad:	cld    
   14000f2ae:	jns    0x14000f329
   14000f2b0:	adc    al,BYTE PTR [rdx]
   14000f2b2:	push   rdx
   14000f2b3:	rex.WX
   14000f2b4:	rex.R mov cl,0x42
   14000f2b7:	stos   DWORD PTR es:[rdi],eax
   14000f2b8:	sbb    eax,0xedd78de1
   14000f2bd:	(bad)  
   14000f2be:	(bad)  
   14000f2bf:	(bad)  
   14000f2c0:	out    dx,al
   14000f2c1:	adc    DWORD PTR [rsi+rbp*4-0x23118f73],ebp
   14000f2c8:	adc    BYTE PTR [rdi-0x32],ah
   14000f2cb:	(bad)  
   14000f2cc:	xor    BYTE PTR [rax],bl
   14000f2ce:	ss int 0xc6
   14000f2d1:	mov    ebx,0x128e1874
   14000f2d6:	sbb    al,0x3b
   14000f2d8:	mov    cl,0x8a
   14000f2da:	xor    esp,DWORD PTR [rdi+0x7]
   14000f2dd:	mov    eax,0x68b3f1eb
   14000f2e2:	sub    eax,DWORD PTR [rbp+0x10673bc3]
   14000f2e8:	(bad)
   14000f2eb:	stc    
   14000f2ec:	mov    DWORD PTR [rax+0x45],eax
   14000f2ef:	(bad)  
   14000f2f0:	rex push rbp
   14000f2f2:	cld    
   14000f2f3:	ss ins DWORD PTR es:[rdi],dx
   14000f2f5:	sti    
   14000f2f6:	in     eax,dx
   14000f2f7:	std    
   14000f2f8:	sar    dh,cl
   14000f2fa:	sar    DWORD PTR [rsp+rax*4+0x4fc4967],cl
   14000f301:	mov    dh,0x5
   14000f303:	fild   DWORD PTR [rcx+0x542a803d]
   14000f309:	(bad)  
   14000f30a:	(bad)  
   14000f30b:	cmp    DWORD PTR [rdi],esp
   14000f30d:	sub    al,BYTE PTR [rcx-0x489769c8]
   14000f314:	and    edi,DWORD PTR [rbx+rbp*8-0x4e0e541a]
   14000f31b:	iret   
   14000f31c:	cmp    eax,0xe27f0f86
   14000f321:	mov    r12d,0x615745ff
   14000f327:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f328:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f329:	adc    BYTE PTR [rcx],ch
   14000f32b:	mov    ebx,0xd189d3ad
   14000f330:	imul   eax,DWORD PTR [rdi+0x68],0x48a211c5
   14000f337:	(bad)  
   14000f338:	scas   al,BYTE PTR es:[rdi]
   14000f339:	cmc    
   14000f33a:	jae    0x14000f3ac
   14000f33c:	cli    
   14000f33d:	(bad)  
   14000f33e:	fmul   st(1),st
   14000f340:	jbe    0x14000f354
   14000f342:	test   ax,0x24c6
   14000f346:	leave  
   14000f347:	xor    BYTE PTR [rsi+riz*1],bl
   14000f34a:	fcomp  DWORD PTR [rax]
   14000f34c:	rex.WRX mov al,0x31
   14000f34f:	cwde   
   14000f350:	loopne 0x14000f3a5
   14000f352:	imul   esp,eax
   14000f355:	movsxd ebx,DWORD PTR [rdi+0x3e]
   14000f358:	mov    ds,WORD PTR [rdi]
   14000f35a:	jg     0x14000f34d
   14000f35c:	jle    0x14000f312
   14000f35e:	fimul  DWORD PTR [rdx]
   14000f360:	push   rcx
   14000f361:	sub    al,0x21
   14000f363:	fmul   QWORD PTR [rax+rax*8-0x69f4d06]
   14000f36a:	(bad)  
   14000f36b:	loop   0x14000f36c
   14000f36d:	rex.WXB movabs r8,0xd82b665f3e5fbd
   14000f377:	xor    al,0x42
   14000f379:	cmc    
   14000f37a:	(bad)  
   14000f37b:	sub    eax,0x159fd46c
   14000f380:	mov    ecx,0x3e313184
   14000f385:	lock shr BYTE PTR [rbx-0x10],cl
   14000f389:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f38a:	pop    rdi
   14000f38b:	jnp    0x14000f397
   14000f38d:	outs   dx,DWORD PTR ds:[rsi]
   14000f38e:	cli    
   14000f38f:	ret    
   14000f390:	mov    ebx,0x83be6871
   14000f395:	ret    
   14000f396:	repz ss push 0x742e0e7
   14000f39d:	xor    ebp,ebp
   14000f39f:	or     BYTE PTR [rdx+0x8],dl
   14000f3a2:	fdivr  QWORD PTR [rax+0x5a488fbb]
   14000f3a8:	and    esp,eax
   14000f3aa:	sti    
   14000f3ab:	jmp    FWORD PTR [rsi-0x599d1063]
   14000f3b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f3b2:	(bad)  
   14000f3b3:	retf   
   14000f3b4:	xor    ah,dl
   14000f3b6:	(bad)  
   14000f3b7:	pop    rbx
   14000f3b8:	out    dx,al
   14000f3b9:	push   0x59
   14000f3bb:	rex.XB mov r8d,0x5250797f
   14000f3c1:	add    DWORD PTR [rcx],edx
   14000f3c3:	lock lods eax,DWORD PTR ds:[rsi]
   14000f3c5:	mov    bl,0x23
   14000f3c7:	or     al,0x52
   14000f3c9:	or     eax,0x4e878432
   14000f3ce:	rdtsc  
   14000f3d0:	leave  
   14000f3d1:	xor    al,0x4e
   14000f3d3:	or     eax,0x3cb3dc12
   14000f3d8:	(bad)  
   14000f3d9:	rex.WRB
   14000f3da:	rex.WXB xor rdi,r8
   14000f3dd:	cdq    
   14000f3de:	fisttp DWORD PTR [rsi]
   14000f3e0:	loop   0x14000f407
   14000f3e2:	xlat   BYTE PTR ds:[rbx]
   14000f3e3:	movabs al,cs:0xda37484915051d5
   14000f3ed:	iret   
   14000f3ee:	rex.RX jnp 0x14000f3f0
   14000f3f1:	jmp    0xf6c6f0ae
   14000f3f6:	sub    ebp,ebp
   14000f3f8:	std    
   14000f3f9:	sub    DWORD PTR [rsi],eax
   14000f3fb:	movabs ds:0xa05400d854cc0174,eax
   14000f404:	loopne 0x14000f45b
   14000f406:	cs nop
   14000f408:	add    al,BYTE PTR [rdx+0x10]
   14000f40b:	push   rsp
   14000f40c:	and    al,0x10
   14000f40e:	xchg   ebx,eax
   14000f40f:	pop    rbp
   14000f410:	or     DWORD PTR [rax-0x9],ebp
   14000f413:	rex.X (bad) 
   14000f415:	(bad)  
   14000f416:	jne    0x14000f3f3
   14000f418:	mov    ch,0xf8
   14000f41a:	rcl    DWORD PTR [rdi],1
   14000f41c:	out    dx,eax
   14000f41d:	(bad)  
   14000f41e:	jge    0x14000f447
   14000f420:	(bad)  
   14000f421:	icebp  
   14000f422:	lods   eax,DWORD PTR ds:[rsi]
   14000f423:	mov    bl,0x3
   14000f425:	push   0xfffffffff8f0784d
   14000f42a:	adc    bl,ah
   14000f42c:	int3   
   14000f42d:	mov    ss,ebp
   14000f42f:	push   rcx
   14000f431:	frstor [rdi]
   14000f433:	bnd rex.RXB jb 0x14000f430
   14000f437:	xor    bh,BYTE PTR [rcx+0x7a]
   14000f43a:	pushf  
   14000f43b:	(bad)  
   14000f43c:	adc    al,0xae
   14000f43e:	sub    eax,0xd03934fe
   14000f443:	outs   dx,DWORD PTR ds:[rsi]
   14000f444:	xchg   edi,eax
   14000f445:	adc    eax,DWORD PTR [rax+rsi*4]
   14000f448:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f449:	fild   DWORD PTR [rdx+0x47]
   14000f44c:	fstp   DWORD PTR [rdx+0x7d]
   14000f44f:	dec    DWORD PTR [rbx+rbx*1-0x23]
   14000f453:	test   al,0x85
   14000f455:	and    edi,DWORD PTR [rbx+0x67]
   14000f458:	lock adc DWORD PTR [rdi],0x7ed98b5f
   14000f45f:	mov    WORD PTR [rsi+0x5b],ss
   14000f462:	mov    ecx,0x51d95fda
   14000f467:	add    BYTE PTR [rcx],ch
   14000f469:	in     al,dx
   14000f46a:	movabs ds:0x2fdedea5ff1668a7,al
   14000f473:	outs   dx,DWORD PTR ds:[rsi]
   14000f474:	stos   DWORD PTR es:[rdi],eax
   14000f475:	sub    eax,0x814cc66c
   14000f47a:	or     eax,0x61d50340
   14000f47f:	sar    BYTE PTR [rax+rsi*1-0x76b7bff7],0x28
   14000f487:	(bad)  
   14000f488:	enter  0xd4d,0x56
   14000f48c:	rex.WX movabs al,ds:0xef17846ecef836d5
   14000f496:	fild   WORD PTR [rcx]
   14000f498:	lods   eax,DWORD PTR ds:[rsi]
   14000f499:	in     eax,dx
   14000f49a:	push   rbx
   14000f49b:	(bad)  
   14000f49c:	lea    esi,[rcx+0x5b21b3b5]
   14000f4a2:	jnp    0x14000f47f
   14000f4a4:	(bad)  
   14000f4a5:	repnz sbb ch,dh
   14000f4a8:	mov    esp,0xd635135c
   14000f4ad:	xchg   esp,eax
   14000f4ae:	(bad)  
   14000f4af:	out    0x55,eax
   14000f4b1:	retf   0xac51
   14000f4b4:	in     al,0xeb
   14000f4b6:	(bad)  
   14000f4b7:	clc    
   14000f4b8:	iret   
   14000f4b9:	rol    WORD PTR ds:[rdi+0x5f370b2f],0x41
   14000f4c2:	sub    ebx,ebx
   14000f4c4:	mov    DWORD PTR [rcx-0x6dd7769e],ebp
   14000f4ca:	push   rax
   14000f4cb:	mov    cl,0x82
   14000f4cd:	push   rdx
   14000f4ce:	ret    0x1c5
   14000f4d1:	clc    
   14000f4d2:	pop    rcx
   14000f4d3:	adc    BYTE PTR [rbp+0x5d9a066b],0xfe
   14000f4da:	loopne 0x14000f4a7
   14000f4dc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f4dd:	loopne 0x14000f4d1
   14000f4df:	(bad)  
   14000f4e0:	fistp  DWORD PTR [rdx-0x79967a31]
   14000f4e6:	or     eax,0xa85c8540
   14000f4eb:	(bad)  
   14000f4ec:	mov    ebx,0x8bc1044d
   14000f4f1:	mov    DWORD PTR [rax],esp
   14000f4f3:	and    DWORD PTR [rcx],edx
   14000f4f5:	(bad)
   14000f4f8:	add    eax,0xa116e204
   14000f4fd:	lods   eax,DWORD PTR ds:[rsi]
   14000f4fe:	push   rbp
   14000f4ff:	cs jl  0x14000f56f
   14000f502:	or     BYTE PTR [rax-0x31],dh
   14000f505:	in     eax,0xb3
   14000f507:	rex.WRXB out dx,al
   14000f509:	rex.B
   14000f50a:	cs je  0x14000f57f
   14000f50d:	mov    edi,0x534c0de1
   14000f512:	or     eax,0x576fd28b
   14000f517:	test   edi,ebp
   14000f519:	test   eax,0xb41bfb2c
   14000f51e:	es jl  0x14000f4f4
   14000f521:	ret    0x3047
   14000f524:	or     dh,BYTE PTR [rdi]
   14000f526:	(bad)  
   14000f527:	and    DWORD PTR [rbp+rbx*2+0x1484047],esp
   14000f52e:	and    eax,0xb0be15a5
   14000f533:	loop   0x14000f53c
   14000f535:	mov    edx,esi
   14000f537:	xor    eax,0xba6bce57
   14000f53c:	push   0xffffffff97f1312f
   14000f541:	(bad)  
   14000f542:	(bad)  
   14000f543:	fld    DWORD PTR [rdx]
   14000f545:	add    BYTE PTR ss:[rbx+0x13776d50],bl
   14000f54c:	(bad)  
   14000f54e:	(bad)  
   14000f54f:	add    dh,BYTE PTR [rsi+0x52025cd7]
   14000f555:	sub    DWORD PTR [rax],ebp
   14000f557:	(bad)  
   14000f558:	jbe    0x14000f59d
   14000f55a:	add    al,0xd2
   14000f55c:	rex.WRX clc 
   14000f55e:	test   BYTE PTR [rax],0xf9
   14000f561:	adc    eax,DWORD PTR [rbx+0xbefad7d]
   14000f567:	test   eax,0x1a828aa9
   14000f56c:	retf   0x456c
   14000f56f:	cld    
   14000f570:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f571:	jl     0x14000f52c
   14000f573:	loopne 0x14000f5d2
   14000f575:	mov    ch,0x1d
   14000f577:	sub    al,0xe6
   14000f579:	push   rcx
   14000f57a:	(bad)  
   14000f57b:	pop    rbx
   14000f57c:	enter  0x1bd,0xe1
   14000f580:	push   rsi
   14000f581:	add    eax,0x5fbdb5f2
   14000f586:	in     eax,0xa4
   14000f588:	ins    BYTE PTR es:[rdi],dx
   14000f589:	rex.W
   14000f58a:	cs fs or ch,bh
   14000f58e:	xor    esp,ebp
   14000f590:	repnz fninit 
   14000f593:	lahf   
   14000f594:	mov    edi,0x3f1f9fcb
   14000f599:	cmp    BYTE PTR [rsi],ah
   14000f59b:	jmp    0x14000f61c
   14000f59d:	jnp    0x14000f54f
   14000f59f:	add    DWORD PTR [rax-0x40],ebp
   14000f5a2:	rex.WRXB shl QWORD PTR [r13+0x505a5d9f],cl
   14000f5a9:	mov    eax,0x8499677c
   14000f5ae:	add    BYTE PTR [rcx],bh
   14000f5b0:	neg    DWORD PTR [rcx-0x7e]
   14000f5b3:	ins    BYTE PTR es:[rdi],dx
   14000f5b4:	rex sahf 
   14000f5b6:	mov    ebx,0xe5f856a3
   14000f5bb:	(bad)  
   14000f5bc:	imul   ebx,esp,0xa647f67
   14000f5c2:	adc    al,0x54
   14000f5c4:	adc    ebx,DWORD PTR [rbx+0x20]
   14000f5c7:	(bad)  
   14000f5c8:	jb     0x14000f624
   14000f5ca:	nop
   14000f5cb:	scas   eax,DWORD PTR es:[rdi]
   14000f5cc:	shl    BYTE PTR [rax+0x2f],cl
   14000f5cf:	(bad)  
   14000f5d0:	jp     0x14000f609
   14000f5d2:	pushf  
   14000f5d3:	out    0xd6,eax
   14000f5d5:	add    edx,DWORD PTR [rax]
   14000f5d7:	add    al,0x90
   14000f5d9:	fwait
   14000f5da:	hlt    
   14000f5db:	out    dx,eax
   14000f5dc:	scas   eax,DWORD PTR es:[rdi]
   14000f5dd:	add    ebp,esp
   14000f5df:	fstp   QWORD PTR [rbx]
   14000f5e1:	mov    ebp,0x3ff12691
   14000f5e6:	xlat   BYTE PTR ds:[rbx]
   14000f5e7:	and    DWORD PTR [rbp+0x2a9f899b],edi
   14000f5ed:	(bad)  
   14000f5ee:	stos   DWORD PTR es:[rdi],eax
   14000f5ef:	in     eax,dx
   14000f5f0:	(bad)  
   14000f5f1:	ins    BYTE PTR es:[rdi],dx
   14000f5f2:	or     bl,BYTE PTR [rbx]
   14000f5f4:	or     BYTE PTR [rdx],0x14
   14000f5f7:	mov    esp,0xe14ab4f2
   14000f5fc:	stos   BYTE PTR es:[rdi],al
   14000f5fd:	cmc    
   14000f5fe:	enter  0xd80b,0x65
   14000f602:	mov    eax,0x11795a4
   14000f607:	push   rax
   14000f608:	fs xchg edi,eax
   14000f60a:	xlat   BYTE PTR ds:[rbx]
   14000f60b:	(bad)  
   14000f60c:	repz leave 
   14000f60e:	push   rax
   14000f60f:	cld    
   14000f610:	xchg   r13d,eax
   14000f612:	cmp    eax,0x59dbfc5d
   14000f617:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f618:	push   rdi
   14000f619:	push   rsp
   14000f61a:	ror    dl,cl
   14000f61c:	stc    
   14000f61d:	add    al,0x8
   14000f61f:	and    bl,ch
   14000f621:	mov    ch,0x88
   14000f623:	cmp    al,0xad
   14000f625:	jmp    0x13f8c9ce4
   14000f62a:	mov    dl,0x70
   14000f62c:	stc    
   14000f62d:	imul   eax,edi,0xffffffa4
   14000f630:	cli    
   14000f631:	(bad)  
   14000f632:	rex.WR or rax,0xffffffff940d0036
   14000f638:	test   BYTE PTR [rcx+0x12],dl
   14000f63b:	sub    ch,dl
   14000f63d:	or     ah,BYTE PTR [rbx+0x55]
   14000f640:	rex.R cmc 
   14000f642:	jge    0x14000f654
   14000f644:	in     al,dx
   14000f645:	rex.XB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f647:	mov    ah,0xa6
   14000f649:	pop    rdx
   14000f64a:	outs   dx,BYTE PTR ds:[rsi]
   14000f64b:	stos   BYTE PTR es:[rdi],al
   14000f64c:	retf   
   14000f64d:	(bad)  
   14000f64e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f64f:	add    DWORD PTR [rbp+0x605d72ae],ecx
   14000f655:	xchg   edi,eax
   14000f656:	outs   dx,DWORD PTR ds:[rsi]
   14000f657:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000f659:	jne    0x14000f61a
   14000f65b:	repz adc DWORD PTR [rdi+0x73],edi
   14000f65f:	add    dl,bl
   14000f661:	add    al,0x1b
   14000f663:	sub    BYTE PTR [rdx],0x61
   14000f666:	add    DWORD PTR [rsi+0x10],ebp
   14000f669:	jg     0x14000f620
   14000f66b:	mov    al,0x87
   14000f66d:	xor    ch,BYTE PTR [rcx+rdi*2-0x24c35af6]
   14000f674:	(bad)  
   14000f675:	jg     0x14000f650
   14000f677:	adc    eax,DWORD PTR [rax+0x25]
   14000f67a:	lea    ebx,[rdx]
   14000f67c:	rcr    BYTE PTR [rdx],cl
   14000f67e:	repnz popf 
   14000f680:	xchg   eax,edi
   14000f682:	(bad)  
   14000f683:	(bad)  
   14000f684:	adc    BYTE PTR [rdi-0x772281c3],bl
   14000f68a:	push   rbp
   14000f68b:	imul   DWORD PTR [rcx-0x1090a811]
   14000f691:	push   rdi
   14000f692:	movabs eax,ds:0xc81500361d4ce929
   14000f69b:	or     esp,edi
   14000f69d:	cmp    al,0xc4
   14000f69f:	pop    rdi
   14000f6a0:	fstp   QWORD PTR [rsi-0x31]
   14000f6a3:	adc    ecx,DWORD PTR [rax-0x302bae5e]
   14000f6a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f6aa:	clc    
   14000f6ab:	sbb    ecx,esi
   14000f6ad:	mov    ch,0xd8
   14000f6af:	mov    ebp,0xb4f59d74
   14000f6b4:	jp     0x14000f694
   14000f6b6:	retf   
   14000f6b7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f6b8:	mov    ebp,0x89befa5f
   14000f6bd:	jno    0x14000f71f
   14000f6bf:	retf   0x1b0
   14000f6c2:	cwde   
   14000f6c3:	rex.X push rcx
   14000f6c5:	movsxd edx,DWORD PTR [rsi-0x13d7267b]
   14000f6cb:	test   eax,0x4cf20ea2
   14000f6d0:	leave  
   14000f6d1:	xlat   BYTE PTR ds:[rbx]
   14000f6d2:	(bad)  
   14000f6d3:	pop    rsi
   14000f6d4:	sahf   
   14000f6d5:	(bad)  
   14000f6d7:	outs   dx,DWORD PTR ds:[rsi]
   14000f6d8:	fidiv  DWORD PTR [rdi]
   14000f6da:	rex.WR movabs rbx,0xec2d95b7d6f0a672
   14000f6e4:	test   ah,0xcf
   14000f6e7:	es (bad) 
   14000f6e9:	sub    ebx,eax
   14000f6eb:	add    BYTE PTR [rax+rcx*8-0x39],dl
   14000f6ef:	(bad)  
   14000f6f0:	fwait
   14000f6f1:	push   0xfffffffffffffff5
   14000f6f3:	rex.WX loope 0x14000f760
   14000f6f6:	adc    al,0x3f
   14000f6f8:	xchg   ebp,eax
   14000f6f9:	or     ebx,DWORD PTR [rdi+0x35]
   14000f6fc:	rex.WRXB cmp QWORD PTR [r13-0x6552de6],r9
   14000f703:	sbb    ch,BYTE PTR [rdx-0x2b]
   14000f706:	loopne 0x14000f764
   14000f708:	rex.WX out 0x73,eax
   14000f70b:	add    DWORD PTR [rdx+0x3e4d56de],eax
   14000f711:	mov    ch,0x16
   14000f713:	outs   dx,DWORD PTR ds:[rsi]
   14000f714:	enter  0xc95b,0xb8
   14000f718:	sbb    eax,0x73556ff1
   14000f71d:	outs   dx,DWORD PTR ds:[rsi]
   14000f71e:	rex.WXB cld 
   14000f720:	fwait
   14000f721:	ins    BYTE PTR es:[rdi],dx
   14000f722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   14000f724:	ret    
   14000f725:	(bad)  
   14000f726:	movabs al,ds:0x15aa77d2c048c681
   14000f72f:	(bad)  
   14000f730:	in     eax,dx
   14000f731:	mov    BYTE PTR [rdi+0x4353235c],bh
   14000f737:	pop    rdx
   14000f738:	xor    eax,0xf7b7f9df
   14000f73d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f73e:	xlat   BYTE PTR ds:[rbx]
   14000f73f:	ret    0x6bd3
   14000f742:	std    
   14000f743:	jb     0x14000f73f
   14000f745:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f746:	adc    eax,0x6e261bd2
   14000f74b:	push   rbp
   14000f74c:	jmp    0x14000f7a5
   14000f74e:	rcr    eax,cl
   14000f750:	adc    BYTE PTR [rbp+rcx*1+0x1b],ch
   14000f754:	sub    BYTE PTR [rcx],0x4c
   14000f757:	adc    esi,esi
   14000f759:	out    0xa2,al
   14000f75b:	(bad)  
   14000f75c:	repnz ins BYTE PTR es:[rdi],dx
   14000f75e:	(bad)  
   14000f75f:	out    dx,eax
   14000f760:	cdq    
   14000f761:	adc    bh,BYTE PTR [rdi]
   14000f763:	xor    QWORD PTR [r8],r9
   14000f766:	(bad)  
   14000f767:	pop    rdx
   14000f768:	jnp    0x14000f7e5
   14000f76a:	loop   0x14000f7eb
   14000f76c:	pop    rdx
   14000f76d:	cs jg  0x14000f700
   14000f770:	jo     0x14000f793
   14000f772:	loop   0x14000f7e3
   14000f774:	lods   al,BYTE PTR ds:[rsi]
   14000f775:	cmc    
   14000f776:	(bad)  
   14000f777:	fstp   QWORD PTR [rsi+0x3f]
   14000f77a:	(bad)  
   14000f77b:	movabs ds:0x5b05400d853660f1,eax
   14000f784:	stc    
   14000f785:	(bad)  
   14000f786:	(bad)  
   14000f787:	loopne 0x14000f7e4
   14000f789:	or     eax,0x9e735f1
   14000f78e:	mov    dl,0x6c
   14000f790:	mov    bl,0x1d
   14000f792:	mov    edi,0xdedc7cdd
   14000f797:	outs   dx,DWORD PTR ds:[rsi]
   14000f798:	fidivr WORD PTR [rdi-0x6d]
   14000f79b:	sbb    eax,0x6c1a99
   14000f7a0:	sbb    dh,BYTE PTR [rax+0x41]
   14000f7a3:	jl     0x14000f79b
   14000f7a5:	mov    bl,0xfb
   14000f7a7:	jg     0x14000f743
   14000f7a9:	clc    
   14000f7aa:	rex.WXB and bpl,BYTE PTR [r11+0x51a729e4]
   14000f7b1:	rex.XB pop r10
   14000f7b3:	xor    eax,0xdedbe5df
   14000f7b8:	scas   eax,DWORD PTR es:[rdi]
   14000f7b9:	mov    esp,esi
   14000f7bb:	sbb    DWORD PTR [rax],ebx
   14000f7bd:	loop   0x14000f82a
   14000f7bf:	cmp    al,0xee
   14000f7c1:	(bad)  
   14000f7c2:	sti    
   14000f7c3:	(bad)  
   14000f7c4:	in     eax,dx
   14000f7c5:	ret    
   14000f7c6:	xchg   QWORD PTR [rip+0x13a28540],r9        # 0x153a37d0d
   14000f7cd:	sar    BYTE PTR [rbp+0x77],1
   14000f7d0:	rex.WX ins DWORD PTR es:[rdi],dx
   14000f7d2:	(bad)  
   14000f7d3:	jne    0x14000f7d3
   14000f7d5:	lods   eax,DWORD PTR ds:[rsi]
   14000f7d6:	fld    DWORD PTR [rax-0x1c]
   14000f7d9:	imul   edx,esp,0xf7cd5690
   14000f7df:	fmul   QWORD PTR [rdi]
   14000f7e1:	icebp  
   14000f7e2:	test   DWORD PTR [rdx+0x4be6269e],eax
   14000f7e8:	jne    0x14000f772
   14000f7ea:	scas   eax,DWORD PTR es:[rdi]
   14000f7eb:	sahf   
   14000f7ec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f7ed:	jl     0x14000f77e
   14000f7ef:	test   eax,0x11a6007a
   14000f7f4:	ss add al,dh
   14000f7f7:	jae    0x14000f85b
   14000f7f9:	ret    0xe6e7
   14000f7fc:	add    DWORD PTR [rbx+0x6b],edx
   14000f7ff:	std    
   14000f800:	push   rdx
   14000f801:	(bad)  
   14000f803:	mov    bh,0xf7
   14000f805:	lahf   
   14000f806:	mov    cs,ebx
   14000f808:	mov    edi,0x64bf895
   14000f80d:	test   eax,0x2f8277e9
   14000f812:	push   rdi
   14000f813:	mov    cs,ebx
   14000f815:	lahf   
   14000f816:	(bad)  
   14000f817:	movabs eax,ds:0x6a616317e69e43b6
   14000f820:	mov    al,0x1
   14000f822:	add    BYTE PTR [rax-0x5dcb479c],ah
   14000f828:	lods   eax,DWORD PTR ds:[rsi]
   14000f829:	call   FWORD PTR [rbx]
   14000f82b:	(bad)
   14000f82e:	rex.WRXB xor rax,0x1a8d394f
   14000f834:	shr    BYTE PTR [rdx],cl
   14000f836:	stc    
   14000f837:	mov    al,0x7d
   14000f839:	icebp  
   14000f83a:	outs   dx,DWORD PTR ds:[rsi]
   14000f83b:	in     eax,dx
   14000f83c:	repnz (bad) 
   14000f83e:	jmp    FWORD PTR [rdi+0x5a]
   14000f841:	xchg   ebx,eax
   14000f842:	pop    rdi
   14000f843:	rex.WB loop 0x14000f7ed
   14000f846:	(bad)  
   14000f847:	cmp    al,0xd5
   14000f849:	jl     0x14000f875
   14000f84b:	js     0x14000f835
   14000f84d:	or     DWORD PTR [rbx-0x7a],edx
   14000f850:	or     eax,0xac768000
   14000f855:	xor    BYTE PTR [rsi-0x75],cl
   14000f858:	ret    0x44
   14000f85b:	xchg   BYTE PTR ss:[rcx+0x49],ch
   14000f85f:	cld    
   14000f860:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f861:	sahf   
   14000f862:	jb     0x14000f88e
   14000f864:	or     dh,BYTE PTR [rbp-0x6f]
   14000f867:	(bad)  
   14000f868:	xor    al,0x1a
   14000f86a:	imul   r13d,DWORD PTR [rip+0xffffffffd6161bef],0xe45dfbba        # 0x116171464
   14000f875:	lods   eax,DWORD PTR ds:[rsi]
   14000f876:	mov    dh,0xcb
   14000f878:	jmp    0x14000f818
   14000f87a:	rex.RX jne 0x14000f838
   14000f87d:	cmp    esp,DWORD PTR [rbx+rax*4-0x3f]
   14000f881:	movabs ds:0xb928355fc5d475ca,al
   14000f88a:	ror    DWORD PTR [rcx],1
   14000f88c:	ss ss pop rbp
   14000f88f:	outs   dx,DWORD PTR ds:[rsi]
   14000f890:	stc    
   14000f891:	cmp    BYTE PTR [rbx+0x77e5439d],bl
   14000f897:	cld    
   14000f898:	adc    DWORD PTR [rdx-0x5b8e457c],eax
   14000f89e:	repnz outs dx,DWORD PTR ds:[rsi]
   14000f8a0:	xchg   DWORD PTR [rdi-0xf27e756],eax
   14000f8a6:	fsubr  QWORD PTR [rbx]
   14000f8a8:	(bad)  
   14000f8a9:	or     DWORD PTR [rax],eax
   14000f8ab:	nop
   14000f8ac:	mov    esp,0xd854edf4
   14000f8b1:	add    BYTE PTR [rax],al
   14000f8b3:	mov    BYTE PTR [rsp+rax*8-0x3a627029],dl
   14000f8ba:	fld    st(1)
   14000f8bc:	sbb    BYTE PTR [rdi-0x31],dl
   14000f8bf:	jne    0x14000f92b
   14000f8c1:	in     eax,dx
   14000f8c2:	(bad)  
   14000f8c3:	jp     0x14000f8d2
   14000f8c5:	rex.RX push rbx
   14000f8c7:	or     ch,BYTE PTR [rip+0x5f76c24a]        # 0x19f77bb17
   14000f8cd:	jmp    0x14000f948
   14000f8cf:	mov    al,BYTE PTR [rbx-0x60]
   14000f8d2:	push   rsp
   14000f8d3:	xchg   esp,eax
   14000f8d4:	imul   esi,DWORD PTR [rbp-0x8470b24],0xffffffe6
   14000f8db:	jge    0x14000f885
   14000f8dd:	stc    
   14000f8de:	fdivr  st(3),st
   14000f8e0:	jae    0x14000f94b
   14000f8e2:	(bad)  
   14000f8e3:	rex.WRB push r13
   14000f8e5:	xor    ch,ah
   14000f8e7:	repz (bad) 
   14000f8e9:	push   0xffffffffffffffd9
   14000f8eb:	int    0x6a
   14000f8ed:	jno    0x14000f8a6
   14000f8ef:	movabs eax,ds:0xd9b8d829f769ac76
   14000f8f8:	jne    0x14000f94f
   14000f8fa:	(bad)  
   14000f8fb:	(bad)  
   14000f8fc:	push   0xffffffffffffff9e
   14000f8fe:	ficom  DWORD PTR [rdi+0x2]
   14000f901:	outs   dx,BYTE PTR ds:[rsi]
   14000f902:	mov    ebp,0x31990166
   14000f907:	mov    eax,0xa8cb5bfb
   14000f90c:	fstp   QWORD PTR [rax]
   14000f90e:	(bad)  
   14000f90f:	add    BYTE PTR [rbx],bl
   14000f911:	add    BYTE PTR [rax],al
   14000f913:	shl    BYTE PTR [rax-0x6e],0x2e
   14000f917:	psrlq  mm5,QWORD PTR [rdi+rdx*8+0x4f]
   14000f91c:	(bad)  
   14000f91d:	(bad)  
   14000f91e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f91f:	lock fistp DWORD PTR [rdi]
   14000f922:	cld    
   14000f923:	pop    rsi
   14000f924:	pop    rsp
   14000f925:	mov    ebx,0x277adbd8
   14000f92a:	out    0x92,al
   14000f92c:	(bad)  
   14000f92d:	int    0xc
   14000f92f:	jle    0x14000f92c
   14000f931:	xor    esi,edi
   14000f933:	loop   0x14000f8c0
   14000f935:	fistp  QWORD PTR [rsi+rcx*1]
   14000f938:	ror    cl,cl
   14000f93a:	cdq    
   14000f93b:	lods   eax,DWORD PTR ds:[rsi]
   14000f93c:	idiv   eax
   14000f93e:	test   BYTE PTR [rbx+0x2780000d],0x57
   14000f945:	(bad)  
   14000f946:	jle    0x14000f8df
   14000f948:	mov    ecx,?
   14000f94a:	stc    
   14000f94b:	rex.WRXB jle 0x14000f943
   14000f94e:	push   rcx
   14000f94f:	mov    esp,0x31fedff4
   14000f954:	outs   dx,BYTE PTR ds:[rsi]
   14000f955:	cmp    esi,DWORD PTR [rdx+0x35]
   14000f958:	mov    edx,0xaed208ad
   14000f95d:	lahf   
   14000f95e:	rcr    DWORD PTR [rsi+riz*2+0x8],0xf7
   14000f963:	xor    ch,dl
   14000f965:	movabs ds:0x3a9c15b1c6f86bcb,eax
   14000f96e:	mov    bl,0xa
   14000f970:	sbb    bl,BYTE PTR [rbx+rdi*8-0x308520d]
   14000f977:	test   BYTE PTR [rbx-0xb7ffff3],0xa9
   14000f97e:	outs   dx,DWORD PTR ds:[rsi]
   14000f97f:	cld    
   14000f980:	(bad)  
   14000f981:	mov    ch,0xb8
   14000f983:	mov    edi,0x9ef7810d
   14000f988:	pop    rax
   14000f989:	(bad)  
   14000f98a:	out    dx,eax
   14000f98b:	stc    
   14000f98c:	retf   
   14000f98d:	xchg   ebp,eax
   14000f98e:	xor    edx,DWORD PTR [rax]
   14000f990:	(bad)  
   14000f991:	sbb    ecx,DWORD PTR [rsi+0x4443b97]
   14000f997:	fs leave 
   14000f999:	imul   ebx,DWORD PTR [rdx],0xf8f8fd9c
   14000f99f:	(bad)  
   14000f9a0:	(bad)  
   14000f9a2:	jne    0x14000f97c
   14000f9a4:	rex.RB cdq 
   14000f9a6:	mov    eax,0xf5c0102d
   14000f9ab:	fwait
   14000f9ac:	add    r10b,BYTE PTR [r8-0x50]
   14000f9b0:	(bad)  
   14000f9b1:	mov    cl,0x5
   14000f9b3:	sti    
   14000f9b4:	sar    BYTE PTR [rbp-0x3f51046a],0x4f
   14000f9bb:	push   rax
   14000f9bc:	mov    edx,0x340031dc
   14000f9c1:	or     BYTE PTR [rax+rax*2],0x2
   14000f9c5:	(bad)  
   14000f9c6:	in     al,dx
   14000f9c7:	fidiv  WORD PTR [rbx]
   14000f9c9:	xchg   edi,eax
   14000f9ca:	dec    ah
   14000f9cc:	lods   eax,DWORD PTR ds:[rsi]
   14000f9cd:	sar    DWORD PTR [rsi-0x67],1
   14000f9d0:	rcr    DWORD PTR [rsi],0x80
   14000f9d3:	test   DWORD PTR [rdx-0x1fa7a7a9],eax
   14000f9d9:	mov    esi,0xbcb801b3
   14000f9de:	xor    esi,ebp
   14000f9e0:	adc    eax,0x9bfc3e0a
   14000f9e5:	jg     0x14000f9c2
   14000f9e7:	ret    0xa006
   14000f9ea:	(bad)  
   14000f9eb:	xor    esi,ecx
   14000f9ed:	mov    bl,0xa7
   14000f9ef:	je     0x14000fa6a
   14000f9f1:	push   rbx
   14000f9f2:	std    
   14000f9f3:	fild   DWORD PTR [rsi+0x1adbe046]
   14000f9f9:	add    BYTE PTR ss:[rip+0xffffffffdc492161],al        # 0x11c4a1b61
   14000fa00:	mov    ebx,0x57fed704
   14000fa05:	or     bl,dh
   14000fa07:	or     edx,eax
   14000fa09:	(bad)  
   14000fa0a:	add    edx,DWORD PTR [rax+0x12c006c3]
   14000fa10:	(bad)  
   14000fa11:	(bad)  
   14000fa12:	push   0xffffffffc780c614
   14000fa17:	add    DWORD PTR [rsi+0x1e26c21c],ebp
   14000fa1d:	(bad)  
   14000fa1e:	add    DWORD PTR [rsp+rbx*2],ebx
   14000fa21:	mov    eax,0xec67c20b
   14000fa26:	test   BYTE PTR [rdi],ch
   14000fa28:	out    0xca,al
   14000fa2a:	adc    DWORD PTR [rax+0x17],0xa6001b3e
   14000fa31:	test   BYTE PTR [rax-0x346660e],bl
   14000fa37:	cdq    
   14000fa38:	(bad)  
   14000fa39:	xchg   esp,eax
   14000fa3a:	enter  0xc30,0xc3
   14000fa3e:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa41:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa44:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa47:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa4a:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa4d:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa50:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa53:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa56:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa59:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa5c:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa5f:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa62:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa65:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa68:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa6b:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa6e:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa71:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa74:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa77:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa7a:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa7d:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa80:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa83:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa86:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa89:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa8c:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa8f:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa92:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa95:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa98:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa9b:	xor    BYTE PTR [rbx+rax*8],cl
   14000fa9e:	xor    BYTE PTR [rbx+rax*8],cl
   14000faa1:	xor    BYTE PTR [rbx+rax*8],cl
   14000faa4:	xor    BYTE PTR [rbx+rax*8],cl
   14000faa7:	xor    BYTE PTR [rbx+rax*8],cl
   14000faaa:	xor    BYTE PTR [rbx+rax*8],cl
   14000faad:	xor    BYTE PTR [rbx+rax*8],cl
   14000fab0:	xor    BYTE PTR [rbx+rax*8],cl
   14000fab3:	xor    BYTE PTR [rbx+rax*8],cl
   14000fab6:	xor    BYTE PTR [rbx+rax*8],cl
   14000fab9:	xor    BYTE PTR [rbx+rax*8],cl
   14000fabc:	xor    BYTE PTR [rbx+rax*8],cl
   14000fabf:	xor    BYTE PTR [rbx+rax*8],cl
   14000fac2:	xor    BYTE PTR [rbx+rax*8],cl
   14000fac5:	xor    BYTE PTR [rbx+rax*8],cl
   14000fac8:	xor    BYTE PTR [rbx+rax*8],cl
   14000facb:	xor    BYTE PTR [rbx+rax*8],cl
   14000face:	xor    BYTE PTR [rbx+rax*8],cl
   14000fad1:	xor    BYTE PTR [rbx+rax*8],cl
   14000fad4:	xor    BYTE PTR [rbx+rax*8],cl
   14000fad7:	xor    BYTE PTR [rbx+rax*8],cl
   14000fada:	xor    BYTE PTR [rbx+rax*8],cl
   14000fadd:	xor    BYTE PTR [rbx+rax*8],cl
   14000fae0:	xor    BYTE PTR [rbx+rax*8],cl
   14000fae3:	xor    BYTE PTR [rbx+rax*8],cl
   14000fae6:	xor    BYTE PTR [rbx+rax*8],cl
   14000fae9:	xor    BYTE PTR [rbx+rax*8],cl
   14000faec:	xor    BYTE PTR [rbx+rax*8],cl
   14000faef:	xor    BYTE PTR [rbx+rax*8],cl
   14000faf2:	xor    BYTE PTR [rbx+rax*8],cl
   14000faf5:	xor    BYTE PTR [rbx+rax*8],cl
   14000faf8:	xor    BYTE PTR [rbx+rax*8],cl
   14000fafb:	xor    BYTE PTR [rbx+rax*8],cl
   14000fafe:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb01:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb04:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb07:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb0a:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb0d:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb10:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb13:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb16:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb19:	xor    BYTE PTR [rbx+rax*8],cl
   14000fb1c:	xor    bh,bl
   14000fb1e:	es cld 
   14000fb20:	jg     0x14000fb55
   14000fb22:	jg     0x14000fb26
   14000fb24:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fb25:	ins    DWORD PTR es:[rdi],dx
   14000fb26:	xchg   esp,eax
   14000fb27:	xor    edx,DWORD PTR [rdx+0x0]
   14000fb2d:	rex.WB
   14000fb2e:	rex.RB
   14000fb2f:	rex.WRX
   14000fb30:	rex.R scas al,BYTE PTR es:[rdi]
   14000fb32:	rex.X (bad) 
   14000fb34:	(bad)  
   14000fb35:	add    BYTE PTR [rax],al
   14000fb37:	add    BYTE PTR [rax],ch
   14000fb39:	add    BYTE PTR [rax],al
   14000fb3b:	add    BYTE PTR [rax],dh
   14000fb3d:	add    BYTE PTR [rax],al
   14000fb3f:	add    BYTE PTR [rax+0x0],ah
   14000fb42:	add    BYTE PTR [rax],al
   14000fb44:	add    DWORD PTR [rax],eax
   14000fb46:	and    BYTE PTR [rax],al
   14000fb48:	add    BYTE PTR [rax],al
   14000fb4a:	add    BYTE PTR [rax],al
   14000fb4c:	and    BYTE PTR [rip+0x0],0x0        # 0x14000fb53
	...
   14000fff7:	add    eax,DWORD PTR [rax]
   14000fff9:	add    BYTE PTR [rax],al
   14000fffb:	or     BYTE PTR [rax],al
   14000fffd:	add    BYTE PTR [rax],al
   14000ffff:	or     al,BYTE PTR [rax]
   140010001:	add    BYTE PTR [rax],al
   140010003:	or     al,BYTE PTR [rax]
   140010005:	add    BYTE PTR [rax],al
   140010007:	or     al,BYTE PTR [rax]
   140010009:	add    BYTE PTR [rax],al
   14001000b:	or     al,BYTE PTR [rax]
   14001000d:	add    BYTE PTR [rax],al
   14001000f:	or     al,BYTE PTR [rax]
   140010011:	add    BYTE PTR [rax],al
   140010013:	or     al,BYTE PTR [rax]
   140010015:	add    BYTE PTR [rax],al
   140010017:	or     al,BYTE PTR [rax]
   140010019:	add    BYTE PTR [rax],al
   14001001b:	or     al,BYTE PTR [rax]
   14001001d:	add    BYTE PTR [rax],al
   14001001f:	or     al,BYTE PTR [rax]
   140010021:	add    BYTE PTR [rax],al
   140010023:	or     al,BYTE PTR [rax]
   140010025:	add    BYTE PTR [rax],al
   140010027:	or     al,BYTE PTR [rax]
   140010029:	add    BYTE PTR [rax],al
   14001002b:	or     al,BYTE PTR [rax]
   14001002d:	add    BYTE PTR [rax],al
   14001002f:	or     al,BYTE PTR [rax]
   140010031:	add    BYTE PTR [rax],al
   140010033:	or     al,BYTE PTR [rax]
   140010035:	add    BYTE PTR [rax],al
   140010037:	or     al,BYTE PTR [rax]
   140010039:	add    BYTE PTR [rax],al
   14001003b:	or     al,BYTE PTR [rax]
   14001003d:	add    BYTE PTR [rax],al
   14001003f:	or     al,BYTE PTR [rax]
   140010041:	add    BYTE PTR [rax],al
   140010043:	or     al,BYTE PTR [rax]
   140010045:	add    BYTE PTR [rax],al
   140010047:	or     al,BYTE PTR [rax]
   140010049:	add    BYTE PTR [rax],al
   14001004b:	or     al,BYTE PTR [rax]
   14001004d:	add    BYTE PTR [rax],al
   14001004f:	or     al,BYTE PTR [rax]
   140010051:	add    BYTE PTR [rax],al
   140010053:	or     al,BYTE PTR [rax]
   140010055:	add    BYTE PTR [rax],al
   140010057:	or     al,BYTE PTR [rax]
   140010059:	add    BYTE PTR [rax],al
   14001005b:	or     al,BYTE PTR [rax]
   14001005d:	add    BYTE PTR [rax],al
   14001005f:	or     al,BYTE PTR [rax]
   140010061:	add    BYTE PTR [rax],al
   140010063:	or     al,BYTE PTR [rax]
   140010065:	add    BYTE PTR [rax],al
   140010067:	or     al,BYTE PTR [rax]
   140010069:	add    BYTE PTR [rax],al
   14001006b:	or     al,BYTE PTR [rax]
   14001006d:	add    BYTE PTR [rax],al
   14001006f:	or     al,BYTE PTR [rax]
   140010071:	add    BYTE PTR [rax],al
   140010073:	or     al,BYTE PTR [rax]
   140010075:	add    BYTE PTR [rax],al
   140010077:	or     al,BYTE PTR [rax]
   140010079:	add    BYTE PTR [rax],al
   14001007b:	or     al,BYTE PTR [rax]
   14001007d:	add    BYTE PTR [rax],al
   14001007f:	or     al,BYTE PTR [rax]
   140010081:	add    BYTE PTR [rax],al
   140010083:	or     al,BYTE PTR [rax]
   140010085:	add    BYTE PTR [rax],al
   140010087:	or     al,BYTE PTR [rax]
   140010089:	add    BYTE PTR [rax],al
   14001008b:	(bad)  
   14001008c:	add    BYTE PTR [rax],al
   14001008e:	add    BYTE PTR [rdx],al
	...
   1400100b0:	jge    0x140010104
   1400100b2:	or     al,BYTE PTR [rdi]
   1400100b4:	xchg   BYTE PTR [rax+0xb],bl
   1400100b7:	outs   dx,BYTE PTR ds:[rsi]
   1400100b8:	js     0x140010109
   1400100ba:	or     bh,BYTE PTR [rbx+0x72]
   1400100bd:	rex.WXB or QWORD PTR [r10-0x7df6b48e],rax
   1400100c4:	jb     0x140010111
   1400100c6:	or     DWORD PTR [rdx-0x7df6b48e],eax
   1400100cc:	jb     0x140010119
   1400100ce:	or     DWORD PTR [rdx-0x7df6b48e],eax
   1400100d4:	jb     0x140010121
   1400100d6:	or     DWORD PTR [rdx-0x7df6b48e],eax
   1400100dc:	jb     0x140010129
   1400100de:	or     DWORD PTR [rdx-0x7df6b48e],eax
   1400100e4:	jb     0x140010131
   1400100e6:	or     DWORD PTR [rdx-0x7df6b48e],eax
   1400100ec:	jb     0x140010139
   1400100ee:	or     DWORD PTR [rdx-0x7df6b48e],eax
   1400100f4:	jb     0x140010141
   1400100f6:	or     DWORD PTR [rdx-0x7df6b48e],eax
   1400100fc:	jb     0x140010149
   1400100fe:	or     DWORD PTR [rdx-0x7df6b48e],eax
   140010104:	jb     0x140010151
   140010106:	or     DWORD PTR [rdx-0x7df6b48e],eax
   14001010c:	jb     0x140010159
   14001010e:	or     DWORD PTR [rdx-0x7df6b48e],eax
   140010114:	jb     0x140010161
   140010116:	or     DWORD PTR [rdx-0x7df6b48e],eax
   14001011c:	jb     0x140010169
   14001011e:	or     DWORD PTR [rdx-0x7df6b48e],eax
   140010124:	jb     0x140010171
   140010126:	or     DWORD PTR [rdx-0x7df6b48e],eax
   14001012c:	jb     0x140010179
   14001012e:	or     DWORD PTR [rdx-0x7df6b48e],eax
   140010134:	jb     0x140010181
   140010136:	or     DWORD PTR [rdx-0x7df6b48e],eax
   14001013c:	jb     0x140010189
   14001013e:	or     DWORD PTR [rdx-0x7df6b48e],eax
   140010144:	outs   dx,DWORD PTR ds:[rsi]
   140010145:	or     QWORD PTR [r13+0x0],rdi
   140010149:	add    BYTE PTR [rax],al
   14001014b:	and    al,BYTE PTR [rax]
   14001014d:	add    BYTE PTR [rax],al
   14001014f:	or     eax,0x0
	...
   14001016c:	xchg   ecx,eax
   14001016d:	pop    rdi
   14001016e:	or     al,0x6
   140010170:	xchg   esp,eax
   140010171:	movsxd edx,DWORD PTR [rdx]
   140010173:	(bad)  
   140010174:	mov    ebp,0xbdff6d9f
   140010179:	lahf   
   14001017a:	ins    DWORD PTR es:[rdi],dx
   14001017b:	(bad)  
   14001017c:	mov    ebp,0xbdff6d9f
   140010181:	lahf   
   140010182:	ins    DWORD PTR es:[rdi],dx
   140010183:	(bad)  
   140010184:	mov    ebp,0xbdff6d9f
   140010189:	lahf   
   14001018a:	ins    DWORD PTR es:[rdi],dx
   14001018b:	(bad)  
   14001018c:	mov    ebp,0xbdff6d9f
   140010191:	lahf   
   140010192:	ins    DWORD PTR es:[rdi],dx
   140010193:	(bad)  
   140010194:	mov    ebp,0xbdff6d9f
   140010199:	lahf   
   14001019a:	ins    DWORD PTR es:[rdi],dx
   14001019b:	(bad)  
   14001019c:	mov    ebp,0xbdff6d9f
   1400101a1:	lahf   
   1400101a2:	ins    DWORD PTR es:[rdi],dx
   1400101a3:	(bad)  
   1400101a4:	mov    ebp,0xbdff6d9f
   1400101a9:	lahf   
   1400101aa:	ins    DWORD PTR es:[rdi],dx
   1400101ab:	(bad)  
   1400101ac:	mov    ebp,0xbdff6d9f
   1400101b1:	lahf   
   1400101b2:	ins    DWORD PTR es:[rdi],dx
   1400101b3:	(bad)  
   1400101b4:	mov    ebp,0xbdff6d9f
   1400101b9:	lahf   
   1400101ba:	ins    DWORD PTR es:[rdi],dx
   1400101bb:	(bad)  
   1400101bc:	mov    ebp,0xbdff6d9f
   1400101c1:	lahf   
   1400101c2:	ins    DWORD PTR es:[rdi],dx
   1400101c3:	(bad)  
   1400101c4:	mov    ebp,0xbdff6d9f
   1400101c9:	lahf   
   1400101ca:	ins    DWORD PTR es:[rdi],dx
   1400101cb:	(bad)  
   1400101cc:	mov    ebp,0xbdff6d9f
   1400101d1:	lahf   
   1400101d2:	ins    DWORD PTR es:[rdi],dx
   1400101d3:	(bad)  
   1400101d4:	mov    ebp,0xbdff6d9f
   1400101d9:	lahf   
   1400101da:	ins    DWORD PTR es:[rdi],dx
   1400101db:	(bad)  
   1400101dc:	mov    ebp,0xbdff6d9f
   1400101e1:	lahf   
   1400101e2:	ins    DWORD PTR es:[rdi],dx
   1400101e3:	(bad)  
   1400101e4:	mov    ebp,0xbdff6d9f
   1400101e9:	lahf   
   1400101ea:	ins    DWORD PTR es:[rdi],dx
   1400101eb:	(bad)  
   1400101ec:	mov    ebp,0xbdff6d9f
   1400101f1:	lahf   
   1400101f2:	ins    DWORD PTR es:[rdi],dx
   1400101f3:	(bad)  
   1400101f4:	mov    ebp,0xbdff6d9f
   1400101f9:	lahf   
   1400101fa:	ins    DWORD PTR es:[rdi],dx
   1400101fb:	(bad)  
   1400101fc:	mov    ebp,0xbdff6d9f
   140010201:	lahf   
   140010202:	ins    DWORD PTR es:[rdi],dx
   140010203:	(bad)  
   140010204:	mov    edx,0x7aff679b
   140010209:	push   rax
   14001020a:	or     dh,BYTE PTR [rdx+0x1a000000]
	...
   14001022c:	xchg   ecx,eax
   14001022d:	pop    rdi
   14001022e:	or     al,0xf
   140010230:	xchg   edi,eax
   140010231:	push   0xffffffffffffff1a
   140010236:	(bad)  
   140010237:	(bad)  
   140010238:	(bad)  
   140010239:	(bad)  
   14001023a:	(bad)  
   14001023b:	(bad)  
   14001023c:	(bad)  
   14001023d:	(bad)  
   14001023e:	(bad)  
   14001023f:	(bad)  
   140010240:	(bad)  
   140010241:	(bad)  
   140010242:	(bad)  
   140010243:	(bad)  
   140010244:	(bad)  
   140010245:	(bad)  
   140010246:	(bad)  
   140010247:	(bad)  
   140010248:	(bad)  
   140010249:	(bad)  
   14001024a:	(bad)  
   14001024b:	(bad)  
   14001024c:	(bad)  
   14001024d:	(bad)  
   14001024e:	(bad)  
   14001024f:	(bad)  
   140010250:	(bad)  
   140010251:	(bad)  
   140010252:	(bad)  
   140010253:	(bad)  
   140010254:	(bad)  
   140010255:	(bad)  
   140010256:	(bad)  
   140010257:	(bad)  
   140010258:	(bad)  
   140010259:	(bad)  
   14001025a:	(bad)  
   14001025b:	(bad)  
   14001025c:	(bad)  
   14001025d:	(bad)  
   14001025e:	(bad)  
   14001025f:	(bad)  
   140010260:	(bad)  
   140010261:	(bad)  
   140010262:	(bad)  
   140010263:	(bad)  
   140010264:	(bad)  
   140010265:	(bad)  
   140010266:	(bad)  
   140010267:	(bad)  
   140010268:	(bad)  
   140010269:	(bad)  
   14001026a:	(bad)  
   14001026b:	(bad)  
   14001026c:	(bad)  
   14001026d:	(bad)  
   14001026e:	(bad)  
   14001026f:	(bad)  
   140010270:	(bad)  
   140010271:	(bad)  
   140010272:	(bad)  
   140010273:	(bad)  
   140010274:	(bad)  
   140010275:	(bad)  
   140010276:	(bad)  
   140010277:	(bad)  
   140010278:	(bad)  
   140010279:	(bad)  
   14001027a:	(bad)  
   14001027b:	(bad)  
   14001027c:	(bad)  
   14001027d:	(bad)  
   14001027e:	(bad)  
   14001027f:	(bad)  
   140010280:	(bad)  
   140010281:	(bad)  
   140010282:	(bad)  
   140010283:	(bad)  
   140010284:	(bad)  
   140010285:	(bad)  
   140010286:	(bad)  
   140010287:	(bad)  
   140010288:	(bad)  
   140010289:	(bad)  
   14001028a:	(bad)  
   14001028b:	(bad)  
   14001028c:	(bad)  
   14001028d:	(bad)  
   14001028e:	(bad)  
   14001028f:	(bad)  
   140010290:	(bad)  
   140010291:	(bad)  
   140010292:	(bad)  
   140010293:	(bad)  
   140010294:	(bad)  
   140010295:	(bad)  
   140010296:	(bad)  
   140010297:	(bad)  
   140010298:	(bad)  
   140010299:	(bad)  
   14001029a:	(bad)  
   14001029b:	(bad)  
   14001029c:	(bad)  
   14001029d:	(bad)  
   14001029e:	(bad)  
   14001029f:	(bad)  
   1400102a0:	(bad)  
   1400102a1:	(bad)  
   1400102a2:	(bad)  
   1400102a3:	(bad)  
   1400102a4:	(bad)  
   1400102a5:	(bad)  
   1400102a6:	(bad)  
   1400102a7:	(bad)  
   1400102a8:	(bad)  
   1400102a9:	(bad)  
   1400102aa:	(bad)  
   1400102ab:	(bad)  
   1400102ac:	(bad)  
   1400102ad:	(bad)  
   1400102ae:	(bad)  
   1400102af:	(bad)  
   1400102b0:	(bad)  
   1400102b1:	(bad)  
   1400102b2:	(bad)  
   1400102b3:	(bad)  
   1400102b4:	(bad)  
   1400102b5:	(bad)  
   1400102b6:	(bad)  
   1400102b7:	(bad)  
   1400102b8:	(bad)  
   1400102b9:	(bad)  
   1400102ba:	(bad)  
   1400102bb:	(bad)  
   1400102bc:	(bad)  
   1400102bd:	(bad)  
   1400102be:	(bad)  
   1400102bf:	(bad)  
   1400102c0:	(bad)  
   1400102c1:	(bad)  
   1400102c2:	(bad)  
   1400102c3:	(bad)  
   1400102c4:	(bad)  
   1400102c5:	(bad)  
   1400102c6:	(bad)  
   1400102c7:	call   FWORD PTR [rsi+0x4bff2972]
   1400102cd:	xor    DWORD PTR [rsi],eax
   1400102cf:	cmp    al,BYTE PTR [rax]
	...
   1400102e9:	add    BYTE PTR [rax],al
   1400102eb:	add    BYTE PTR [rcx-0x68f0f3a1],dl
   1400102f1:	push   0xffffffffffffff1a
   1400102f6:	(bad)  
   1400102f7:	(bad)  
   1400102f8:	stc    
   1400102f9:	cmc    
   1400102fa:	jmp    0x127f5fcfe
   1400102ff:	(bad)  
   140010300:	clc    
   140010301:	repz in eax,0xff
   140010304:	clc    
   140010305:	repnz jrcxz 0x140010307
   140010308:	div    ecx
   14001030a:	loope  0x14001030b
   14001030c:	div    eax
   14001030e:	(bad)  
   140010310:	imul   bh
   140010312:	(bad)  
   140010314:	cmc    
   140010315:	out    dx,al
   140010316:	(bad)  
   140010318:	cmc    
   140010319:	in     eax,dx
   14001031a:	fdivr  st,st(7)
   14001031c:	hlt    
   14001031d:	in     al,dx
   14001031e:	(bad)  
   14001031f:	push   rsp
   140010321:	jmp    0x1400102f7
   140010323:	push   rbx
   140010325:	(bad)  
   140010326:	sar    bh,cl
   140010328:	repz jmp 0x128f402ff
   14001032e:	iret   
   14001032f:	push   rdx
   140010331:	out    0xcd,eax
   140010333:	push   rcx
   140010335:	out    0xca,al
   140010337:	push   rcx
   140010339:	in     eax,0xc8
   14001033b:	push   rax
   14001033d:	in     al,0xc6
   14001033f:	(bad)  
   140010340:	out    dx,eax
   140010341:	jrcxz  0x140010307
   140010343:	(bad)  
   140010344:	out    dx,eax
   140010345:	loope  0x140010309
   140010347:	(bad)  
   140010348:	out    dx,al
   140010349:	loopne 0x14001030a
   14001034b:	(bad)  
   14001034c:	out    dx,al
   14001034d:	fistp  QWORD PTR [rbp-0x44211201]
   140010353:	(bad)  
   140010354:	in     al,dx
   140010355:	fnstsw WORD PTR [rcx-0x48231301]
   14001035b:	(bad)  
   14001035c:	jmp    0x140010339
   14001035e:	mov    ch,0xff
   140010360:	jmp    0x14001033c
   140010362:	mov    bl,0xff
   140010364:	(bad)  
   140010365:	fnstenv [rcx-0x50271501]
   14001036b:	(bad)  
   14001036c:	jmp    0x12a00b148
   140010371:	(bad)  
   140010372:	lods   al,BYTE PTR ds:[rsi]
   140010373:	(bad)  
   140010374:	call   0x12900ae4e
   140010379:	(bad)  
   14001037a:	test   eax,0xa7d4e8ff
   14001037f:	jmp    rdi
   140010381:	(bad)  
   140010382:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010383:	(bad)  
   140010384:	(bad)  
   140010385:	(bad)  
   140010386:	(bad)  
   140010387:	call   FWORD PTR [rsi+0x4bff2972]
   14001038d:	xor    DWORD PTR [rsi],eax
   14001038f:	cmp    al,BYTE PTR [rax]
	...
   1400103a9:	add    BYTE PTR [rax],al
   1400103ab:	add    BYTE PTR [rcx-0x68f0f3a1],dl
   1400103b1:	push   0xffffffffffffff1a
   1400103b6:	(bad)  
   1400103b7:	(bad)  
   1400103b8:	cli    
   1400103b9:	cmc    
   1400103ba:	jmp    0x1400103bb
   1400103bc:	clc    
   1400103bd:	hlt    
   1400103be:	call   0x125f3fcc2
   1400103c3:	push   rdi
   1400103c5:	icebp  
   1400103c6:	jrcxz  0x1400103c7
   1400103c8:	imul   edi
   1400103ca:	loopne 0x1400103cb
   1400103cc:	cmc    
   1400103cd:	in     eax,dx
   1400103ce:	fdivp  st(7),st
   1400103d0:	cmc    
   1400103d1:	in     al,dx
   1400103d2:	(bad)  
   1400103d4:	hlt    
   1400103d5:	jmp    0x1400103b0
   1400103d7:	push   rbx
   1400103d9:	(bad)  
   1400103da:	(bad)  
   1400103db:	push   rbx
   1400103dd:	jmp    0x128f403b6
   1400103e2:	sar    bh,cl
   1400103e4:	repnz out 0xd1,eax
   1400103e7:	push   rcx
   1400103e9:	out    0xcf,al
   1400103eb:	push   rcx
   1400103ed:	out    0xce,al
   1400103ef:	push   rcx
   1400103f1:	in     eax,0xcd
   1400103f3:	push   rcx
   1400103f5:	in     eax,0xcb
   1400103f7:	push   rax
   1400103f9:	in     al,0xc9
   1400103fb:	push   rcx
   1400103fd:	in     al,0xc7
   1400103ff:	push   rax
   140010401:	jrcxz  0x1400103c9
   140010403:	(bad)  
   140010404:	out    dx,eax
   140010405:	jrcxz  0x1400103cb
   140010407:	(bad)  
   140010408:	out    dx,eax
   140010409:	loope  0x1400103cd
   14001040b:	(bad)  
   14001040c:	out    dx,al
   14001040d:	loopne 0x1400103ce
   14001040f:	(bad)  
   140010410:	out    dx,al
   140010411:	fistp  QWORD PTR [rbp-0x44211201]
   140010417:	(bad)  
   140010418:	in     al,dx
   140010419:	fnstsw WORD PTR [rcx-0x48231301]
   14001041f:	(bad)  
   140010420:	jmp    0x1400103fd
   140010422:	mov    ch,0xff
   140010424:	jmp    0x140010400
   140010426:	mov    bl,0xff
   140010428:	(bad)  
   140010429:	fnstenv [rcx-0x50271501]
   14001042f:	(bad)  
   140010430:	jmp    0x12a00b20c
   140010435:	(bad)  
   140010436:	lods   al,BYTE PTR ds:[rsi]
   140010437:	(bad)  
   140010438:	call   0x12900af12
   14001043d:	(bad)  
   14001043e:	test   eax,0xa7d4e8ff
   140010443:	(bad)  
   140010444:	(bad)  
   140010445:	(bad)  
   140010446:	(bad)  
   140010447:	call   FWORD PTR [rsi+0x4bff2972]
   14001044d:	xor    DWORD PTR [rsi],eax
   14001044f:	cmp    al,BYTE PTR [rax]
	...
   140010469:	add    BYTE PTR [rax],al
   14001046b:	add    BYTE PTR [rcx-0x68f0f3a1],dl
   140010471:	push   0xfffffffffefeff1a
   140010476:	(bad)  
   140010477:	(bad)  
   140010478:	stc    
   140010479:	cmc    
   14001047a:	in     al,dx
   14001047b:	(bad)  
   14001047c:	clc    
   14001047d:	repz jmp 0x125f2fc82
   140010483:	push   rsi
   140010485:	out    dx,al
   140010486:	loope  0x140010487
   140010488:	hlt    
   140010489:	in     al,dx
   14001048a:	fdivp  st(7),st
   14001048c:	hlt    
   14001048d:	(bad)  
   14001048e:	(bad)  
   140010490:	repz call 0x126f4046e
   140010496:	(bad)  
   140010497:	push   rcx
   140010499:	in     eax,0xd4
   14001049b:	push   rax
   14001049d:	in     al,0xd1
   14001049f:	push   rax
   1400104a1:	jrcxz  0x140010472
   1400104a3:	push   rax
   1400104a5:	jrcxz  0x140010475
   1400104a7:	push   rax
   1400104a9:	loop   0x140010477
   1400104ab:	(bad)  
   1400104ac:	out    dx,eax
   1400104ad:	loop   0x14001047b
   1400104af:	push   rax
   1400104b1:	loop   0x14001047e
   1400104b3:	(bad)  
   1400104b4:	out    dx,eax
   1400104b5:	jrcxz  0x140010481
   1400104b7:	push   rax
   1400104b9:	jrcxz  0x140010485
   1400104bb:	push   rax
   1400104bd:	jrcxz  0x140010487
   1400104bf:	push   rax
   1400104c1:	jrcxz  0x14001048a
   1400104c3:	push   rax
   1400104c5:	jrcxz  0x14001048c
   1400104c7:	(bad)  
   1400104c8:	out    dx,eax
   1400104c9:	jrcxz  0x14001048f
   1400104cb:	(bad)  
   1400104cc:	out    dx,eax
   1400104cd:	loope  0x140010491
   1400104cf:	(bad)  
   1400104d0:	out    dx,al
   1400104d1:	loopne 0x140010492
   1400104d3:	(bad)  
   1400104d4:	out    dx,al
   1400104d5:	fistp  QWORD PTR [rbp-0x44211201]
   1400104db:	(bad)  
   1400104dc:	in     al,dx
   1400104dd:	fnstsw WORD PTR [rcx-0x48231301]
   1400104e3:	(bad)  
   1400104e4:	jmp    0x1400104c1
   1400104e6:	mov    ch,0xff
   1400104e8:	jmp    0x1400104c4
   1400104ea:	mov    bl,0xff
   1400104ec:	(bad)  
   1400104ed:	fnstenv [rcx-0x50271501]
   1400104f3:	(bad)  
   1400104f4:	jmp    0x12a00b2d0
   1400104f9:	(bad)  
   1400104fa:	lods   al,BYTE PTR ds:[rsi]
   1400104fb:	(bad)  
   1400104fc:	call   0x12900afd6
   140010501:	(bad)  
   140010502:	test   eax,0xffffffff
   140010507:	call   FWORD PTR [rsi+0x4bff2972]
   14001050d:	xor    DWORD PTR [rsi],eax
   14001050f:	cmp    al,BYTE PTR [rax]
	...
   140010529:	add    BYTE PTR [rax],al
   14001052b:	add    BYTE PTR [rcx-0x67f0f3a1],dl
   140010531:	imul   ebx,DWORD PTR [rbx],0xfcfdfeff
   140010537:	(bad)  
   140010538:	stc    
   140010539:	hlt    
   14001053a:	in     al,dx
   14001053b:	push   rdi
   14001053d:	icebp  
   14001053e:	call   0x124effc42
   140010543:	push   rsp
   140010545:	jmp    0x140010526
   140010547:	push   rbx
   140010549:	call   0x126f30529
   14001054e:	fdivr  st,st(7)
   140010550:	icebp  
   140010551:	jrcxz  0x140010528
   140010553:	(bad)  
   140010554:	out    dx,eax
   140010555:	loop   0x140010529
   140010557:	(bad)  
   140010558:	out    dx,eax
   140010559:	loopne 0x14001052b
   14001055b:	(bad)  
   14001055c:	out    dx,al
   14001055d:	loopne 0x14001052e
   14001055f:	(bad)  
   140010560:	out    dx,al
   140010561:	(bad)  
   140010563:	(bad)  
   140010564:	out    dx,al
   140010565:	fmulp  st(3),st
   140010567:	(bad)  
   140010568:	in     eax,dx
   140010569:	fmulp  st(2),st
   14001056b:	(bad)  
   14001056c:	out    dx,al
   14001056d:	fmulp  st(1),st
   14001056f:	(bad)  
   140010570:	out    dx,al
   140010571:	(bad)  
   140010573:	(bad)  
   140010574:	out    dx,al
   140010575:	loopne 0x140010540
   140010577:	(bad)  
   140010578:	out    dx,eax
   140010579:	loope  0x140010544
   14001057b:	(bad)  
   14001057c:	out    dx,eax
   14001057d:	loop   0x140010548
   14001057f:	(bad)  
   140010580:	out    dx,eax
   140010581:	jrcxz  0x14001054a
   140010583:	push   rax
   140010585:	jrcxz  0x14001054e
   140010587:	push   rax
   140010589:	jrcxz  0x140010550
   14001058b:	(bad)  
   14001058c:	out    dx,eax
   14001058d:	jrcxz  0x140010553
   14001058f:	(bad)  
   140010590:	out    dx,eax
   140010591:	loope  0x140010555
   140010593:	(bad)  
   140010594:	out    dx,al
   140010595:	loopne 0x140010556
   140010597:	(bad)  
   140010598:	out    dx,al
   140010599:	fistp  QWORD PTR [rbp-0x44211201]
   14001059f:	(bad)  
   1400105a0:	in     al,dx
   1400105a1:	fnstsw WORD PTR [rcx-0x48231301]
   1400105a7:	(bad)  
   1400105a8:	jmp    0x140010585
   1400105aa:	mov    ch,0xff
   1400105ac:	jmp    0x140010588
   1400105ae:	mov    bl,0xff
   1400105b0:	(bad)  
   1400105b1:	fnstenv [rcx-0x50271501]
   1400105b7:	(bad)  
   1400105b8:	jmp    0x12a00b394
   1400105bd:	(bad)  
   1400105be:	lods   al,BYTE PTR ds:[rsi]
   1400105bf:	(bad)  
   1400105c0:	call   0x14000b09a
   1400105c5:	(bad)  
   1400105c6:	(bad)  
   1400105c7:	call   FWORD PTR [rsi+0x4bff2972]
   1400105cd:	xor    DWORD PTR [rsi],eax
   1400105cf:	cmp    al,BYTE PTR [rax]
	...
   1400105e9:	add    BYTE PTR [rax],al
   1400105eb:	add    BYTE PTR [rbp-0x67efeb9e],dl
   1400105f1:	imul   ebx,DWORD PTR [rdi+rdi*8],0xfffbfbfd
   1400105f8:	stc    
   1400105f9:	repz jmp 0x1400105fb
   1400105fc:	imul   bh
   1400105fe:	out    0xff,al
   140010600:	hlt    
   140010601:	(bad)  
   140010602:	loope  0x140010603
   140010604:	repnz out 0xdc,al
   140010607:	push   rax
   140010609:	jrcxz  0x1400105e2
   14001060b:	(bad)  
   14001060c:	out    dx,eax
   14001060d:	loopne 0x1400105e3
   14001060f:	(bad)  
   140010610:	out    dx,al
   140010611:	(bad)  
   140010613:	(bad)  
   140010614:	in     eax,dx
   140010615:	(bad)  
   140010617:	(bad)  
   140010618:	in     al,dx
   140010619:	fmul   st(5),st
   14001061b:	(bad)  
   14001061c:	in     eax,dx
   14001061d:	fcmovne st,st(3)
   14001061f:	(bad)  
   140010620:	in     al,dx
   140010621:	fcmove st,st(1)
   140010623:	(bad)  
   140010624:	jmp    0x140010600
   140010626:	(bad)  
   140010627:	(bad)  
   140010628:	jmp    0x140010603
   14001062a:	(bad)  
   14001062b:	(bad)  
   14001062c:	jmp    0x140010608
   14001062e:	(bad)  
   14001062f:	(bad)  
   140010630:	in     al,dx
   140010631:	fcmovnb st,st(6)
   140010633:	(bad)  
   140010634:	in     al,dx
   140010635:	fadd   st(6),st
   140010637:	(bad)  
   140010638:	in     eax,dx
   140010639:	faddp  st(7),st
   14001063b:	(bad)  
   14001063c:	out    dx,al
   14001063d:	loopne 0x140010607
   14001063f:	(bad)  
   140010640:	out    dx,eax
   140010641:	loop   0x14001060c
   140010643:	(bad)  
   140010644:	out    dx,eax
   140010645:	jrcxz  0x14001060e
   140010647:	push   rax
   140010649:	jrcxz  0x140010612
   14001064b:	push   rax
   14001064d:	in     al,0xc6
   14001064f:	(bad)  
   140010650:	out    dx,eax
   140010651:	jrcxz  0x140010617
   140010653:	(bad)  
   140010654:	out    dx,eax
   140010655:	loope  0x140010619
   140010657:	(bad)  
   140010658:	out    dx,al
   140010659:	loopne 0x14001061a
   14001065b:	(bad)  
   14001065c:	out    dx,al
   14001065d:	fistp  QWORD PTR [rbp-0x44211201]
   140010663:	(bad)  
   140010664:	in     al,dx
   140010665:	fnstsw WORD PTR [rcx-0x48231301]
   14001066b:	(bad)  
   14001066c:	jmp    0x140010649
   14001066e:	mov    ch,0xff
   140010670:	jmp    0x14001064c
   140010672:	mov    bl,0xff
   140010674:	(bad)  
   140010675:	fnstenv [rcx-0x50271501]
   14001067b:	(bad)  
   14001067c:	jmp    0x12a00b458
   140010681:	(bad)  
   140010682:	lods   al,BYTE PTR ds:[rsi]
   140010683:	(bad)  
   140010684:	(bad)  
   140010685:	(bad)  
   140010686:	(bad)  
   140010687:	call   FWORD PTR [rsi+0x4bff2972]
   14001068d:	xor    DWORD PTR [rsi],eax
   14001068f:	cmp    al,BYTE PTR [rax]
	...
   1400106a9:	add    BYTE PTR [rax],al
   1400106ab:	add    BYTE PTR [rax-0x67eee49b],bl
   1400106b1:	imul   ebx,DWORD PTR [rip+0xfffffffff9f9fcff],0xeaf1f7ff        # 0x139fb03ba
   1400106bb:	push   rbp
   1400106bd:	in     al,dx
   1400106be:	in     al,0xff
   1400106c0:	out    0xd2,al
   1400106c2:	mov    eax,0x71aad1ff
   1400106c7:	dec    edx
   1400106c9:	pushf  
   1400106ca:	push   rsi
   1400106cb:	dec    ecx
   1400106cd:	fwait
   1400106ce:	push   rbp
   1400106cf:	dec    ecx
   1400106d1:	fwait
   1400106d2:	push   rsp
   1400106d3:	inc    edi
   1400106d5:	xchg   edi,eax
   1400106d6:	rex.WRX inc rdx
   1400106d9:	mov    ?,WORD PTR [rcx]
   1400106db:	inc    edx
   1400106dd:	mov    ?,WORD PTR [rcx]
   1400106df:	inc    edx
   1400106e1:	mov    ?,WORD PTR [rcx]
   1400106e3:	inc    esi
   1400106e5:	xchg   esi,eax
   1400106e6:	rex.WR dec rax
   1400106e9:	(bad)  
   1400106ea:	push   rbx
   1400106eb:	dec    eax
   1400106ed:	(bad)  
   1400106ee:	push   rbx
   1400106ef:	dec    eax
   1400106f1:	(bad)  
   1400106f2:	push   rsp
   1400106f3:	dec    ebp
   1400106f5:	movabs ds:0xddedffa2c5e0ff66,eax
   1400106fe:	(bad)  
   1400106ff:	(bad)  
   140010700:	out    dx,al
   140010701:	loopne 0x1400106cb
   140010703:	(bad)  
   140010704:	out    dx,eax
   140010705:	loop   0x1400106d0
   140010707:	push   rax
   140010709:	jrcxz  0x1400106d3
   14001070b:	push   rcx
   14001070d:	in     al,0xc8
   14001070f:	push   rax
   140010711:	in     al,0xc6
   140010713:	(bad)  
   140010714:	out    dx,eax
   140010715:	jrcxz  0x1400106db
   140010717:	(bad)  
   140010718:	out    dx,eax
   140010719:	loope  0x1400106dd
   14001071b:	(bad)  
   14001071c:	out    dx,al
   14001071d:	loopne 0x1400106de
   14001071f:	(bad)  
   140010720:	out    dx,al
   140010721:	fistp  QWORD PTR [rbp-0x44211201]
   140010727:	(bad)  
   140010728:	in     al,dx
   140010729:	fnstsw WORD PTR [rcx-0x48231301]
   14001072f:	(bad)  
   140010730:	jmp    0x14001070d
   140010732:	mov    ch,0xff
   140010734:	jmp    0x140010710
   140010736:	mov    bl,0xff
   140010738:	(bad)  
   140010739:	fnstenv [rcx-0x50271501]
   14001073f:	(bad)  
   140010740:	jmp    0x14000b51c
   140010745:	(bad)  
   140010746:	(bad)  
   140010747:	call   FWORD PTR [rsi+0x4bff2972]
   14001074d:	xor    DWORD PTR [rsi],eax
   14001074f:	cmp    al,BYTE PTR [rax]
	...
   140010769:	add    BYTE PTR [rax],al
   14001076b:	add    BYTE PTR [rbx-0x66edde98],bl
   140010771:	push   0x1f
   140010773:	(bad)  
   140010774:	sti    
   140010775:	div    esi
   140010777:	push   rsi
   140010779:	in     eax,dx
   14001077a:	out    0xff,eax
   14001077c:	lock jrcxz 0x140010755
   14001077f:	inc    esi
   140010781:	xchg   ebp,eax
   140010782:	rex.RB jmp r15
   140010785:	(bad)  
   140010786:	mov    ch,0xff
   140010788:	lock in eax,0xd3
   14001078b:	push   rax
   14001078d:	in     al,0xd3
   14001078f:	push   rax
   140010791:	in     al,0xd3
   140010793:	push   rbx
   140010795:	jmp    0x13bfe0776
   14001079a:	cli    
   14001079b:	(bad)  
   14001079c:	std    
   14001079d:	sti    
   14001079e:	sti    
   14001079f:	(bad)  
   1400107a0:	std    
   1400107a1:	sti    
   1400107a2:	sti    
   1400107a3:	push   rsp
   1400107a5:	in     al,dx
   1400107a6:	(bad)  
   1400107a8:	lock in al,0xd3
   1400107ab:	(bad)  
   1400107ac:	out    dx,al
   1400107ad:	loope  0x14001077e
   1400107af:	(bad)  
   1400107b0:	in     al,dx
   1400107b1:	fmulp  st(4),st
   1400107b3:	jmp    rsp
   1400107b5:	iret   
   1400107b6:	mov    dl,0xff
   1400107b8:	(bad)  
   1400107b9:	cwde   
   1400107ba:	rex.WR jmp rsi
   1400107bd:	shl    DWORD PTR [rdi-0x38211201],1
   1400107c3:	(bad)  
   1400107c4:	out    dx,eax
   1400107c5:	loope  0x140010790
   1400107c7:	push   rax
   1400107c9:	jrcxz  0x140010795
   1400107cb:	push   rax
   1400107cd:	in     eax,0xc9
   1400107cf:	push   rcx
   1400107d1:	in     eax,0xc8
   1400107d3:	push   rax
   1400107d5:	in     al,0xc6
   1400107d7:	(bad)  
   1400107d8:	out    dx,eax
   1400107d9:	jrcxz  0x14001079f
   1400107db:	(bad)  
   1400107dc:	out    dx,eax
   1400107dd:	loope  0x1400107a1
   1400107df:	(bad)  
   1400107e0:	out    dx,al
   1400107e1:	loopne 0x1400107a2
   1400107e3:	(bad)  
   1400107e4:	out    dx,al
   1400107e5:	fistp  QWORD PTR [rbp-0x44211201]
   1400107eb:	(bad)  
   1400107ec:	in     al,dx
   1400107ed:	fnstsw WORD PTR [rcx-0x48231301]
   1400107f3:	(bad)  
   1400107f4:	jmp    0x1400107d1
   1400107f6:	mov    ch,0xff
   1400107f8:	jmp    0x1400107d4
   1400107fa:	mov    bl,0xff
   1400107fc:	(bad)  
   1400107fd:	fnstenv [rcx-0x50271501]
   140010803:	(bad)  
   140010804:	(bad)  
   140010805:	(bad)  
   140010806:	(bad)  
   140010807:	call   FWORD PTR [rsi+0x4bff2972]
   14001080d:	xor    DWORD PTR [rsi],eax
   14001080f:	cmp    al,BYTE PTR [rax]
	...
   140010829:	add    BYTE PTR [rax],al
   14001082b:	add    BYTE PTR [rbp-0x65ecd895],bl
   140010831:	imul   esp,DWORD PTR [rax],0xffffffff
   140010834:	cli    
   140010835:	hlt    
   140010836:	repz push rbp
   140010839:	jmp    0x140010821
   14001083b:	(bad)  
   14001083c:	ffreep st(3)
   14001083e:	movabs eax,ds:0xc1dcecff81b7d8ff
   140010847:	(bad)  
   140010848:	jmp    0x140010825
   14001084a:	mov    edi,0xbfdbebff
   14001084f:	(bad)  
   140010850:	jmp    0x14001082d
   140010852:	mov    edi,0xbfdbebff
   140010857:	(bad)  
   140010858:	jmp    0x140010835
   14001085a:	sar    bh,0xeb
   14001085d:	fcmovnb st,st(0)
   14001085f:	(bad)  
   140010860:	jmp    0x14001083d
   140010862:	sar    bh,0xeb
   140010865:	fcmovnb st,st(0)
   140010867:	(bad)  
   140010868:	jmp    0x140010845
   14001086a:	sar    bh,0xeb
   14001086d:	fstp   TBYTE PTR [rdi-0x40251401]
   140010873:	jmp    rdi
   140010875:	(bad)  
   140010876:	mov    bh,0xff
   140010878:	fstp   TBYTE PTR [rbp-0x4e2a0070]
   14001087e:	cmp    bh,0xec
   140010881:	fadd   st(6),st
   140010883:	(bad)  
   140010884:	out    dx,al
   140010885:	loopne 0x140010850
   140010887:	push   rax
   140010889:	jrcxz  0x140010856
   14001088b:	push   rcx
   14001088d:	in     eax,0xcc
   14001088f:	push   rcx
   140010891:	out    0xca,al
   140010893:	push   rcx
   140010895:	in     eax,0xc8
   140010897:	push   rax
   140010899:	in     al,0xc6
   14001089b:	(bad)  
   14001089c:	out    dx,eax
   14001089d:	jrcxz  0x140010863
   14001089f:	(bad)  
   1400108a0:	out    dx,eax
   1400108a1:	loope  0x140010865
   1400108a3:	(bad)  
   1400108a4:	out    dx,al
   1400108a5:	loopne 0x140010866
   1400108a7:	(bad)  
   1400108a8:	out    dx,al
   1400108a9:	fistp  QWORD PTR [rbp-0x44211201]
   1400108af:	(bad)  
   1400108b0:	in     al,dx
   1400108b1:	fnstsw WORD PTR [rcx-0x48231301]
   1400108b7:	(bad)  
   1400108b8:	jmp    0x140010895
   1400108ba:	mov    ch,0xff
   1400108bc:	jmp    0x140010898
   1400108be:	mov    bl,0xff
   1400108c0:	(bad)  
   1400108c1:	fnstenv [rcx-0x1]
   1400108c7:	call   FWORD PTR [rsi+0x4bff2972]
   1400108cd:	xor    DWORD PTR [rsi],eax
   1400108cf:	cmp    al,BYTE PTR [rax]
	...
   1400108e9:	add    BYTE PTR [rax],al
   1400108eb:	add    BYTE PTR [rcx-0x65eacf91],ah
   1400108f1:	imul   esp,DWORD PTR [rcx],0xffffffff
   1400108f4:	stc    
   1400108f5:	repz icebp 
   1400108f7:	push   rsp
   1400108f9:	(bad)  
   1400108fa:	in     eax,0xff
   1400108fc:	fnstenv [rdi-0x391f0076]
   140010902:	fwait
   140010903:	(bad)  
   140010904:	faddp  st(6),st
   140010906:	movabs ds:0xbfd4e4ffc6dae9ff,eax
   14001090f:	inc    edi
   140010911:	shr    DWORD PTR [rsi-0x572c4301],1
   140010917:	inc    ebp
   140010919:	shl    BYTE PTR [rbx-0x33202301],cl
   14001091f:	inc    edx
   140010921:	shr    DWORD PTR [rdi-0x46253501],cl
   140010927:	dec    esp
   140010929:	fdivr  QWORD PTR [rbx-0x532c3e01]
   14001092f:	(bad)  
   140010930:	mov    eax,0xc4ffa5c2
   140010935:	mov    cl,0x92
   140010937:	jmp    rcx
   140010939:	leave  
   14001093a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001093b:	dec    edi
   14001093d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001093e:	outs   dx,DWORD PTR ds:[rsi]
   14001093f:	(bad)  
   140010940:	in     al,dx
   140010941:	fcmovnb st,st(6)
   140010943:	(bad)  
   140010944:	out    dx,al
   140010945:	(bad)  
   140010947:	push   rax
   140010949:	jrcxz  0x140010917
   14001094b:	push   rcx
   14001094d:	out    0xcd,al
   14001094f:	push   rdx
   140010951:	out    0xcd,eax
   140010953:	push   rcx
   140010955:	out    0xca,al
   140010957:	push   rcx
   140010959:	in     eax,0xc8
   14001095b:	push   rax
   14001095d:	in     al,0xc6
   14001095f:	(bad)  
   140010960:	out    dx,eax
   140010961:	jrcxz  0x140010927
   140010963:	(bad)  
   140010964:	out    dx,eax
   140010965:	loope  0x140010929
   140010967:	(bad)  
   140010968:	out    dx,al
   140010969:	loopne 0x14001092a
   14001096b:	(bad)  
   14001096c:	out    dx,al
   14001096d:	fistp  QWORD PTR [rbp-0x44211201]
   140010973:	(bad)  
   140010974:	in     al,dx
   140010975:	fnstsw WORD PTR [rcx-0x48231301]
   14001097b:	(bad)  
   14001097c:	jmp    0x140010959
   14001097e:	mov    ch,0xff
   140010980:	jmp    0x14001095c
   140010982:	mov    bl,0xff
   140010984:	(bad)  
   140010985:	(bad)  
   140010986:	(bad)  
   140010987:	call   FWORD PTR [rsi+0x4bff2972]
   14001098d:	xor    DWORD PTR [rsi],eax
   14001098f:	cmp    al,BYTE PTR [rax]
	...
   1400109a9:	add    BYTE PTR [rax],al
   1400109ab:	add    BYTE PTR [rbx-0x64e9cb90],ah
   1400109b1:	ins    BYTE PTR es:[rdi],dx
   1400109b2:	and    edi,edi
   1400109b4:	clc    
   1400109b5:	icebp  
   1400109b6:	out    dx,eax
   1400109b7:	push   rsp
   1400109b9:	jmp    0xf1d709a2
   1400109be:	jle    0x1400109bf
   1400109c0:	in     al,0xce
   1400109c2:	test   eax,0x97bed9ff
   1400109c7:	(bad)  
   1400109c8:	fmulp  st(1),st
   1400109ca:	test   eax,0xa3c3dbff
   1400109cf:	push   QWORD PTR [rax-0x5f007241]
   1400109d5:	mov    esi,0xc1afff85
   1400109da:	cdq    
   1400109db:	jmp    rsi
   1400109dd:	in     al,0xce
   1400109df:	push   QWORD PTR [rax-0x4c006e3b]
   1400109e5:	enter  0xff9b,0xba
   1400109e9:	iret   
   1400109ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400109eb:	jmp    QWORD PTR [rbp-0x5e00783d]
   1400109f1:	stos   BYTE PTR es:[rdi],al
   1400109f2:	test   bh,bh
   1400109f4:	shr    DWORD PTR [rbp-0x2e190075],0xb2
   1400109fb:	dec    esp
   1400109fd:	movabs eax,ds:0xdfeeffc6daebff65
   140010a06:	retf   0xf0ff
   140010a09:	jrcxz  0x1400109d7
   140010a0b:	push   rdx
   140010a0d:	out    0xcf,al
   140010a0f:	push   rdx
   140010a11:	call   0x127f409e5
   140010a16:	int    0xff
   140010a18:	icebp  
   140010a19:	out    0xca,al
   140010a1b:	push   rcx
   140010a1d:	in     eax,0xc8
   140010a1f:	jmp    rsp
   140010a21:	fdivr  DWORD PTR [rdi+rdi*8-0x4e3228]
   140010a28:	out    dx,eax
   140010a29:	loope  0x1400109ed
   140010a2b:	(bad)  
   140010a2c:	out    dx,al
   140010a2d:	loopne 0x1400109ee
   140010a2f:	(bad)  
   140010a30:	out    dx,al
   140010a31:	fistp  QWORD PTR [rbp-0x44211201]
   140010a37:	(bad)  
   140010a38:	in     al,dx
   140010a39:	fnstsw WORD PTR [rcx-0x48231301]
   140010a3f:	(bad)  
   140010a40:	jmp    0x140010a1d
   140010a42:	mov    ch,0xff
   140010a44:	(bad)  
   140010a45:	(bad)  
   140010a46:	(bad)  
   140010a47:	call   FWORD PTR [rsi+0x4bff2972]
   140010a4d:	xor    DWORD PTR [rsi],eax
   140010a4f:	cmp    al,BYTE PTR [rax]
	...
   140010a69:	add    BYTE PTR [rax],al
   140010a6b:	add    BYTE PTR [rbp-0x64e8c78e],ah
   140010a71:	ins    BYTE PTR es:[rdi],dx
   140010a72:	and    al,0xff
   140010a74:	div    eax
   140010a76:	out    dx,al
   140010a77:	push   rbx
   140010a79:	call   0xedd50a62
   140010a7e:	js     0x140010a7f
   140010a80:	out    0xd2,eax
   140010a82:	mov    al,0xff
   140010a84:	fcmovb st,st(1)
   140010a86:	(bad)  
   140010a87:	jmp    rcx
   140010a89:	int    0xaf
   140010a8b:	(bad)  
   140010a8c:	ffree  st(4)
   140010a8e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a8f:	(bad)  
   140010a90:	mov    ebp,0xa6ff94bf
   140010a95:	ret    0xff8f
   140010a98:	mov    cl,0xc0
   140010a9a:	movabs al,ds:0xa4b4a1ffc7beb8ff
   140010aa3:	jmp    FWORD PTR [rbx-0x5100703f]
   140010aa9:	(bad)  
   140010aaa:	xchg   esi,eax
   140010aab:	jmp    QWORD PTR [rcx-0x40007844]
   140010ab1:	mov    edx,0xbfd4ff9a
   140010ab6:	cwde   
   140010ab7:	(bad)  
   140010ab8:	call   0x10c00c693
   140010abd:	lahf   
   140010abe:	(bad)  
   140010abf:	(bad)  
   140010ac0:	in     eax,dx
   140010ac1:	fmul   st(4),st
   140010ac3:	(bad)  
   140010ac4:	in     al,dx
   140010ac5:	fcmovne st,st(3)
   140010ac7:	jmp    rsi
   140010ac9:	shl    BYTE PTR [rbx-0x653a2001],1
   140010acf:	jmp    rax
   140010ad1:	(bad)
   140010ad4:	loope  0x140010a9d
   140010ad6:	popf   
   140010ad7:	jmp    rcx
   140010ad9:	(bad)  
   140010ada:	pushf  
   140010adb:	dec    ebx
   140010add:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010ade:	jb     0x140010adf
   140010ae0:	ror    BYTE PTR [rsi-0x725f00b4],0x6e
   140010ae7:	jmp    rax
   140010ae9:	(bad)
   140010aec:	loopne 0x140010ab2
   140010aee:	cwde   
   140010aef:	jmp    rcx
   140010af1:	(bad)  
   140010af2:	pushf  
   140010af3:	jmp    rbx
   140010af5:	retf   0xffa3
   140010af8:	jmp    0x12d00c2d3
   140010afd:	fnstsw WORD PTR [rcx-0x48231301]
   140010b03:	(bad)  
   140010b04:	(bad)  
   140010b05:	(bad)  
   140010b06:	(bad)  
   140010b07:	call   FWORD PTR [rsi+0x4bff2972]
   140010b0d:	xor    DWORD PTR [rsi],eax
   140010b0f:	cmp    al,BYTE PTR [rax]
	...
   140010b29:	add    BYTE PTR [rax],al
   140010b2b:	add    BYTE PTR [rbp-0x63e8c78e],ah
   140010b31:	ins    BYTE PTR es:[rdi],dx
   140010b32:	and    al,0xff
   140010b34:	imul   edi
   140010b36:	in     eax,dx
   140010b37:	push   rbx
   140010b39:	call   0xe9d30b22
   140010b3e:	jno    0x140010b3f
   140010b40:	jmp    0x11c00c51c
   140010b45:	ret    0xff9a
   140010b48:	loop   0x140010b19
   140010b4a:	scas   eax,DWORD PTR es:[rdi]
   140010b4b:	(bad)  
   140010b4c:	ffree  st(6)
   140010b4e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010b4f:	call   rsi
   140010b51:	ret    
   140010b52:	movabs eax,ds:0x9cbfacff96c4bcff
   140010b5b:	(bad)  
   140010b5c:	jns    0x140010aef
   140010b5e:	mov    cl,0xff
   140010b60:	push   0xffffffffffffff84
   140010b62:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010b63:	call   QWORD PTR [rbx-0x5b007259]
   140010b69:	mov    ecx,0xbabaff86
   140010b6e:	cwde   
   140010b6f:	call   rbp
   140010b71:	(bad)  
   140010b72:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010b73:	call   rbx
   140010b75:	mov    edi,0xdaebff97
   140010b7a:	sar    edi,0xca
   140010b7d:	sahf   
   140010b7e:	pop    rsi
   140010b7f:	(bad)  
   140010b80:	jmp    0x140010b5c
   140010b82:	enter  0xe6ff,0xcf
   140010b86:	sar    bh,0xe6
   140010b89:	shl    BYTE PTR [rbx-0x653a2001],1
   140010b8f:	jmp    rax
   140010b91:	(bad)
   140010b94:	loopne 0x140010b5c
   140010b96:	pushf  
   140010b97:	inc    eax
   140010b99:	xchg   esp,eax
   140010b9a:	pop    rax
   140010b9b:	dec    eax
   140010b9d:	mov    DWORD PTR [rdi+rdi*8],edi
   140010ba0:	leave  
   140010ba1:	mov    WORD PTR [rdi+rdi*8-0x5a],es
   140010ba5:	xchg   edx,eax
   140010ba6:	jb     0x140010ba7
   140010ba8:	loopne 0x140010b6f
   140010baa:	cdq    
   140010bab:	jmp    rax
   140010bad:	(bad)  
   140010bae:	cwde   
   140010baf:	jmp    rcx
   140010bb1:	(bad)  
   140010bb2:	pushf  
   140010bb3:	jmp    rbx
   140010bb5:	retf   0xffa3
   140010bb8:	jmp    0x12e00c393
   140010bbd:	fidivr WORD PTR [rbx-0x46221301]
   140010bc3:	(bad)  
   140010bc4:	(bad)  
   140010bc5:	(bad)  
   140010bc6:	(bad)  
   140010bc7:	call   FWORD PTR [rsi+0x4bff2972]
   140010bcd:	xor    DWORD PTR [rsi],eax
   140010bcf:	cmp    al,BYTE PTR [rax]
	...
   140010be9:	add    BYTE PTR [rax],al
   140010beb:	add    BYTE PTR [rdi-0x63e8c28b],ah
   140010bf1:	ins    BYTE PTR es:[rdi],dx
   140010bf2:	and    eax,0xedeff7ff
   140010bf7:	push   rsp
   140010bf9:	call   0xead40be3
   140010bfe:	jno    0x140010bff
   140010c00:	jmp    0x11e00c5dc
   140010c05:	(bad)  
   140010c06:	fwait
   140010c07:	jmp    rsp
   140010c09:	shl    BYTE PTR [rcx-0x5b372201],1
   140010c0f:	(bad)  
   140010c10:	ffree  st(6)
   140010c12:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010c13:	(bad)  
   140010c14:	faddp  st(7),st
   140010c16:	movabs ds:0xa98761ffa3ab9eff,al
   140010c1f:	call   QWORD PTR [rdi+0x78]
   140010c22:	(bad)  
   140010c23:	call   QWORD PTR [rax-0x30006b66]
   140010c29:	rcr    DWORD PTR [rsi-0x57372801],0xff
   140010c30:	(bad)  
   140010c31:	enter  0xffa7,0xd3
   140010c35:	rcl    BYTE PTR [rdi-0x321e1101],0xff
   140010c3c:	leave  
   140010c3d:	fwait
   140010c3e:	push   rdi
   140010c3f:	(bad)  
   140010c40:	out    dx,al
   140010c41:	(bad)  
   140010c43:	(bad)  
   140010c44:	in     eax,dx
   140010c45:	fmulp  st(7),st
   140010c47:	(bad)  
   140010c48:	in     eax,dx
   140010c49:	fmulp  st(6),st
   140010c4b:	(bad)  
   140010c4c:	out    dx,eax
   140010c4d:	loope  0x140010c1f
   140010c4f:	(bad)  
   140010c50:	out    dx,eax
   140010c51:	loope  0x140010c20
   140010c53:	inc    ebp
   140010c55:	xchg   esp,eax
   140010c56:	push   rbx
   140010c57:	inc    esp
   140010c59:	test   DWORD PTR [rdi],esi
   140010c5b:	(bad)  
   140010c5c:	fldenv [rdx-0x743700b1]
   140010c62:	rex.X push QWORD PTR [rax-0x12006a5b]
   140010c69:	ffree  st(7)
   140010c6b:	(bad)  
   140010c6c:	in     eax,dx
   140010c6d:	ffree  st(5)
   140010c6f:	(bad)  
   140010c70:	in     al,dx
   140010c71:	fadd   st(3),st
   140010c73:	(bad)  
   140010c74:	jmp    0x140010c50
   140010c76:	sar    bh,0xef
   140010c79:	loope  0x140010c42
   140010c7b:	(bad)  
   140010c7c:	out    dx,al
   140010c7d:	fistp  QWORD PTR [rbp-0x44211201]
   140010c83:	(bad)  
   140010c84:	(bad)  
   140010c85:	(bad)  
   140010c86:	(bad)  
   140010c87:	call   FWORD PTR [rsi+0x4bff2972]
   140010c8d:	xor    DWORD PTR [rsi],eax
   140010c8f:	cmp    al,BYTE PTR [rax]
	...
   140010ca9:	add    BYTE PTR [rax],al
   140010cab:	add    BYTE PTR [rdi-0x63e8c28b],ah
   140010cb1:	ins    BYTE PTR es:[rdi],dx
   140010cb2:	and    eax,0xedeff7ff
   140010cb7:	push   rsp
   140010cb9:	call   0xead40ca4
   140010cbe:	jno    0x140010cbf
   140010cc0:	jmp    0x11f00c69c
   140010cc5:	(bad)
   140010cc8:	in     al,0xd1
   140010cca:	mov    dl,0xff
   140010ccc:	(bad)  
   140010cce:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010ccf:	(bad)  
   140010cd0:	(bad)  
   140010cd2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010cd3:	dec    esp
   140010cd5:	shr    DWORD PTR [rdx-0x3a587b01],0xff
   140010cdc:	jp     0x140010c7f
   140010cde:	sar    bh,0x64
   140010ce1:	mov    ebp,DWORD PTR [rsi-0x726a6b01]
   140010ce7:	jmp    rbx
   140010ce9:	iret   
   140010cea:	test   eax,0xa7c8d6ff
   140010cef:	call   rbp
   140010cf1:	enter  0xffa6,0xd4
   140010cf5:	ret    0xff99
   140010cf8:	out    dx,al
   140010cf9:	loope  0x140010cc7
   140010cfb:	dec    ecx
   140010cfd:	fwait
   140010cfe:	push   rdi
   140010cff:	(bad)  
   140010d00:	in     eax,dx
   140010d01:	fmul   st(4),st
   140010d03:	(bad)  
   140010d04:	in     al,dx
   140010d05:	fcmovne st,st(3)
   140010d07:	jmp    rsi
   140010d09:	shl    BYTE PTR [rbx-0x70462c01],1
   140010d0f:	inc    edi
   140010d11:	mov    DWORD PTR [rax],edi
   140010d13:	inc    esp
   140010d15:	xor    DWORD PTR [rax],0xffffffff
   140010d18:	fst    QWORD PTR [rcx-0x4a1800ee]
   140010d1e:	(bad)  
   140010d1f:	inc    edi
   140010d21:	mov    al,BYTE PTR [rax-0x1]
   140010d24:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010d25:	xchg   edx,eax
   140010d26:	jb     0x140010d27
   140010d28:	loopne 0x140010cef
   140010d2a:	cdq    
   140010d2b:	jmp    rax
   140010d2d:	(bad)  
   140010d2e:	cwde   
   140010d2f:	jmp    rcx
   140010d31:	(bad)  
   140010d32:	pushf  
   140010d33:	jmp    rbx
   140010d35:	retf   0xffa3
   140010d38:	jmp    0x12f00c513
   140010d3d:	loopne 0x140010cfe
   140010d3f:	(bad)  
   140010d40:	out    dx,al
   140010d41:	fistp  QWORD PTR [rbp-0x1]
   140010d47:	call   FWORD PTR [rsi+0x4bff2972]
   140010d4d:	xor    DWORD PTR [rsi],eax
   140010d4f:	cmp    al,BYTE PTR [rax]
	...
   140010d69:	add    BYTE PTR [rax],al
   140010d6b:	add    BYTE PTR [rbp-0x63e8c78e],ah
   140010d71:	ins    BYTE PTR es:[rdi],dx
   140010d72:	and    eax,0xedeff7ff
   140010d77:	push   rsp
   140010d79:	call   0xead30d64
   140010d7e:	jno    0x140010d7f
   140010d80:	jmp    0x11f00c75c
   140010d85:	(bad)  
   140010d86:	pushf  
   140010d87:	jmp    rbp
   140010d89:	shl    DWORD PTR [rdx-0x58341e01],cl
   140010d8f:	jmp    rcx
   140010d91:	leave  
   140010d92:	movabs ds:0xdfc4a4ffb9c4c5ff,al
   140010d9b:	jmp    QWORD PTR [rax-0x7a002a43]
   140010da1:	stos   BYTE PTR es:[rdi],al
   140010da2:	leave  
   140010da3:	jmp    QWORD PTR [rcx+0x74]
   140010da6:	xchg   edi,edi
   140010da8:	stos   DWORD PTR es:[rdi],eax
   140010da9:	lahf   
   140010daa:	xchg   edi,edi
   140010dac:	fmulp  st(7),st
   140010dae:	stos   DWORD PTR es:[rdi],eax
   140010daf:	call   rsi
   140010db1:	leave  
   140010db2:	test   al,0xff
   140010db4:	(bad)  
   140010db5:	ret    0xff99
   140010db8:	in     al,dx
   140010db9:	fadd   st(5),st
   140010dbb:	dec    edx
   140010dbd:	popf   
   140010dbe:	pop    rsp
   140010dbf:	(bad)  
   140010dc0:	in     eax,dx
   140010dc1:	fmul   st(5),st
   140010dc3:	(bad)  
   140010dc4:	(bad)  
   140010dc5:	(bad)  
   140010dc6:	leave  
   140010dc7:	dec    ecx
   140010dc9:	stos   BYTE PTR es:[rdi],al
   140010dca:	cmp    edi,0xff2f7fba
   140010dd0:	int3   
   140010dd1:	mov    DWORD PTR [rsi],esp
   140010dd3:	jmp    rbp
   140010dd5:	cdq    
   140010dd6:	ud0    esp,ecx
   140010dd9:	xchg   esp,eax
   140010dda:	(bad)  
   140010ddb:	(bad)  
   140010ddc:	(bad)  
   140010ddd:	mov    eax,0x88c5ff64
   140010de2:	(bad)  
   140010de3:	jmp    QWORD PTR [rsi-0x1f008d6e]
   140010de9:	(bad)
   140010dec:	loopne 0x140010db2
   140010dee:	cwde   
   140010def:	jmp    rcx
   140010df1:	(bad)  
   140010df2:	pushf  
   140010df3:	jmp    rbx
   140010df5:	retf   0xffa3
   140010df8:	jmp    0x13000c5d3
   140010dfd:	loope  0x140010dc1
   140010dff:	(bad)  
   140010e00:	out    dx,al
   140010e01:	loopne 0x140010dc2
   140010e03:	(bad)  
   140010e04:	(bad)  
   140010e05:	(bad)  
   140010e06:	(bad)  
   140010e07:	call   FWORD PTR [rsi+0x4bff2972]
   140010e0d:	xor    DWORD PTR [rsi],eax
   140010e0f:	cmp    al,BYTE PTR [rax]
	...
   140010e29:	add    BYTE PTR [rax],al
   140010e2b:	add    BYTE PTR [rbp-0x63e8c78e],ah
   140010e31:	ins    BYTE PTR es:[rdi],dx
   140010e32:	and    al,0xff
   140010e34:	imul   edi
   140010e36:	out    dx,al
   140010e37:	push   rsp
   140010e39:	jmp    0xecd40e24
   140010e3e:	jne    0x140010e3f
   140010e40:	call   0x12100c319
   140010e45:	enter  0xff9d,0xe7
   140010e49:	(bad)  
   140010e4a:	mov    bl,0xff
   140010e4c:	loope  0x140010e1c
   140010e4e:	test   al,0xff
   140010e50:	loope  0x140010e1b
   140010e52:	movabs ds:0xeedcc9ffc1cdd0ff,al
   140010e5b:	(bad)  
   140010e5c:	mov    ecx,0x95ffe2cf
   140010e61:	mov    bh,0xd3
   140010e63:	jmp    QWORD PTR [rsi-0x74]
   140010e66:	lods   eax,DWORD PTR ds:[rsi]
   140010e67:	(bad)  
   140010e68:	js     0x140010ee2
   140010e6a:	jae    0x140010e6b
   140010e6c:	fcmove st,st(3)
   140010e6e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010e6f:	(bad)  
   140010e70:	fmul   st,st(3)
   140010e72:	test   eax,0x9ac3d7ff
   140010e77:	(bad)  
   140010e78:	(bad)  
   140010e79:	fnstcw WORD PTR [rdi+0x5f9ecbff]
   140010e7f:	(bad)  
   140010e80:	out    dx,al
   140010e81:	(bad)  
   140010e83:	dec    ebx
   140010e85:	movabs ds:0x94d9ff2877b6ff70,eax
   140010e8e:	(bad)  
   140010e8f:	(bad)  
   140010e90:	out    dx,al
   140010e91:	movabs eax,ds:0x99e6ff139eeaff14
   140010e9a:	adc    edi,edi
   140010e9c:	in     al,dx
   140010e9d:	mov    ebx,0x87c3ff66
   140010ea2:	cmp    eax,0x95a5b0ff
   140010ea7:	(bad)  
   140010ea8:	in     eax,dx
   140010ea9:	ffree  st(7)
   140010eab:	(bad)  
   140010eac:	in     eax,dx
   140010ead:	ffree  st(5)
   140010eaf:	(bad)  
   140010eb0:	in     al,dx
   140010eb1:	fadd   st(3),st
   140010eb3:	(bad)  
   140010eb4:	jmp    0x140010e90
   140010eb6:	sar    bh,0xef
   140010eb9:	loope  0x140010e82
   140010ebb:	(bad)  
   140010ebc:	out    dx,eax
   140010ebd:	jrcxz  0x140010e83
   140010ebf:	(bad)  
   140010ec0:	out    dx,eax
   140010ec1:	loope  0x140010e85
   140010ec3:	(bad)  
   140010ec4:	(bad)  
   140010ec5:	(bad)  
   140010ec6:	(bad)  
   140010ec7:	call   FWORD PTR [rsi+0x4bff2972]
   140010ecd:	xor    DWORD PTR [rsi],eax
   140010ecf:	cmp    al,BYTE PTR [rax]
	...
   140010ee9:	add    BYTE PTR [rax],al
   140010eeb:	add    BYTE PTR [rbx-0x64e9cb90],ah
   140010ef1:	ins    BYTE PTR es:[rdi],dx
   140010ef2:	and    edi,edi
   140010ef4:	clc    
   140010ef5:	lock out dx,al
   140010ef7:	push   rsp
   140010ef9:	(bad)  
   140010efa:	out    0xff,eax
   140010efc:	(bad)  
   140010efd:	scas   eax,DWORD PTR es:[rdi]
   140010efe:	jnp    0x140010eff
   140010f00:	out    0xd0,al
   140010f02:	lods   eax,DWORD PTR ds:[rsi]
   140010f03:	jmp    rcx
   140010f05:	retf   0xff9e
   140010f08:	call   0x12400c3e4
   140010f0d:	iret   
   140010f0e:	test   al,0xff
   140010f10:	loope  0x140010edd
   140010f12:	movabs ds:0xf3dec9ffbdcfd5ff,eax
   140010f1b:	push   QWORD PTR [rdi-0x70001b31]
   140010f21:	scas   eax,DWORD PTR es:[rdi]
   140010f22:	retf   0x64ff
   140010f25:	js     0x140010eb1
   140010f27:	jmp    FWORD PTR [rbx+0x68]
   140010f2a:	call   sp
   140010f2d:	(bad)  
   140010f2e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010f2f:	(bad)  
   140010f30:	fcmove st,st(6)
   140010f32:	stos   BYTE PTR es:[rdi],al
   140010f33:	(bad)  
   140010f34:	fadd   st,st(4)
   140010f36:	(bad)  
   140010f37:	jmp    rsi
   140010f39:	shl    DWORD PTR [rdi+rdi*8-0x985e35],cl
   140010f40:	ret    
   140010f41:	xchg   ebx,eax
   140010f42:	rex.WRXB push QWORD PTR [r11-0x1700dc8c]
   140010f49:	movabs eax,ds:0xa7f1ff1aaaf3ff1d
   140010f52:	sbb    bh,bh
   140010f54:	in     eax,dx
   140010f55:	movabs ds:0xbeeeff139eeaff16,al
   140010f5e:	push   0x3c86c2ff
   140010f63:	jmp    QWORD PTR [rdi-0x1f008c6d]
   140010f69:	(bad)
   140010f6c:	loopne 0x140010f32
   140010f6e:	cwde   
   140010f6f:	jmp    rcx
   140010f71:	(bad)  
   140010f72:	pushf  
   140010f73:	jmp    rbx
   140010f75:	retf   0xffa3
   140010f78:	jmp    0x13100c753
   140010f7d:	in     al,0xc6
   140010f7f:	(bad)  
   140010f80:	out    dx,eax
   140010f81:	jrcxz  0x140010f47
   140010f83:	(bad)  
   140010f84:	(bad)  
   140010f85:	(bad)  
   140010f86:	(bad)  
   140010f87:	call   FWORD PTR [rsi+0x4bff2972]
   140010f8d:	xor    DWORD PTR [rsi],eax
   140010f8f:	cmp    al,BYTE PTR [rax]
	...
   140010fa9:	add    BYTE PTR [rax],al
   140010fab:	add    BYTE PTR [rcx-0x64eacf91],ah
   140010fb1:	imul   esp,DWORD PTR [rdx],0xffffffff
   140010fb4:	clc    
   140010fb5:	repnz lock push rbp
   140010fb9:	jmp    0x140010fa4
   140010fbb:	(bad)  
   140010fbc:	fdiv   DWORD PTR [rsi-0x371d0078]
   140010fc2:	lahf   
   140010fc3:	jmp    rdx
   140010fc5:	retf   
   140010fc6:	sahf   
   140010fc7:	(bad)  
   140010fc8:	jmp    0x12500c4a4
   140010fcd:	shr    BYTE PTR [rcx-0x57301a01],1
   140010fd3:	jmp    QWORD PTR [rdi+0x7dff94a1]
   140010fd9:	lea    ebx,[rbp-0x70778001]
   140010fdf:	push   QWORD PTR [rsi+0x7b]
   140010fe2:	cmp    bh,0x68
   140010fe5:	push   0x6f
   140010fe7:	call   QWORD PTR [rbp-0x20007e71]
   140010fed:	shr    BYTE PTR [rbx-0x56322501],1
   140010ff3:	(bad)  
   140010ff4:	fcmovb st,st(5)
   140010ff6:	(bad)  
   140010ff7:	(bad)  
   140010ff8:	fcmovb st,st(1)
   140010ffa:	popf   
   140010ffb:	jmp    FWORD PTR [rsi-0x4400dc8e]
   140011001:	jnp    0x140011020
   140011003:	push   rdx
   140011005:	stos   DWORD PTR es:[rdi],eax
   140011006:	sbb    al,0xff
   140011008:	imul   DWORD PTR [rdi-0x520a00e4]
   14001100e:	sbb    edi,edi
   140011010:	repnz stos BYTE PTR es:[rdi],al
   140011012:	sbb    edi,edi
   140011014:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011016:	(bad)  
   140011017:	(bad)  
   140011018:	in     eax,dx
   140011019:	movabs ds:0x84c2ff69c1f0ff15,al
   140011022:	cmp    bh,bh
   140011024:	movabs al,ds:0xb5ff7c9fb5ff6e8d
   14001102d:	sahf   
   14001102e:	jnp    0x14001102f
   140011030:	mov    dh,0xa1
   140011032:	jle    0x140011033
   140011034:	mov    bh,0xa3
   140011036:	test   bh,bh
   140011038:	mov    esp,0xc3ff94ad
   14001103d:	mov    ecx,0xb8c2ffa2
   140011042:	movabs al,ds:0x215c80ffcececeff
   14001104b:	jmp    QWORD PTR [rip+0x600318]        # 0x140611369
   140011051:	add    BYTE PTR [rax],al
   140011053:	xor    DWORD PTR [rax],eax
   140011055:	add    BYTE PTR [rax],al
   140011057:	xor    DWORD PTR [rax],eax
   140011059:	add    BYTE PTR [rax],al
   14001105b:	xor    DWORD PTR [rax],eax
   14001105d:	add    BYTE PTR [rax],al
   14001105f:	or     DWORD PTR [rax],eax
	...
   140011069:	add    BYTE PTR [rax],al
   14001106b:	add    BYTE PTR [rdi-0x65ebd393],bl
   140011071:	imul   esp,DWORD PTR [rcx],0xffffffff
   140011074:	stc    
   140011075:	repz repnz push rsi
   140011079:	in     eax,dx
   14001107a:	jmp    0x14001107b
   14001107c:	faddp  st(0),st
   14001107e:	(bad)  
   14001107f:	(bad)  
   140011080:	fdivr  QWORD PTR [rsi-0x341c0073]
   140011086:	sahf   
   140011087:	(bad)  
   140011088:	jmp    0x12600c465
   14001108d:	shr    BYTE PTR [rdx-0x552e1b01],cl
   140011093:	dec    ecx
   140011095:	mov    esp,0x9396ffa1
   14001109a:	mov    edi,?
   14001109c:	xchg   ebx,eax
   14001109d:	nop
   14001109e:	(bad)  
   14001109f:	call   QWORD PTR [rdx-0x4f007471]
   1400110a5:	test   al,0x96
   1400110a7:	(bad)  
   1400110a8:	fmulp  st(7),st
   1400110aa:	stos   BYTE PTR es:[rdi],al
   1400110ab:	(bad)  
   1400110ac:	fmul   st(7),st
   1400110ae:	stos   BYTE PTR es:[rdi],al
   1400110af:	(bad)  
   1400110b0:	fcmove st,st(4)
   1400110b2:	test   eax,0x75abc9ff
   1400110b7:	jmp    FWORD PTR [rcx-0x3600e295]
   1400110bd:	mov    BYTE PTR [rdi],bl
   1400110bf:	push   rdi
   1400110c1:	mov    al,0x1c
   1400110c3:	(bad)  
   1400110c4:	stc    
   1400110c5:	mov    dl,0x1b
   1400110c7:	(bad)  
   1400110c8:	stc    
   1400110c9:	mov    dl,0x1d
   1400110cb:	push   rdi
   1400110cd:	scas   eax,DWORD PTR es:[rdi]
   1400110ce:	sbb    al,0xff
   1400110d0:	hlt    
   1400110d1:	lods   al,BYTE PTR ds:[rsi]
   1400110d2:	sbb    edi,edi
   1400110d4:	repnz stos BYTE PTR es:[rdi],al
   1400110d6:	sbb    edi,edi
   1400110d8:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400110da:	(bad)  
   1400110db:	push   rdx
   1400110dd:	mov    ebx,0x82c0ff55
   1400110e2:	cmp    bh,bh
   1400110e4:	ret    
   1400110e5:	xchg   BYTE PTR [rdi+rdi*8],bh
   1400110e8:	(bad)
   1400110eb:	dec    eax
   1400110ed:	mov    WORD PTR [rbx-0x1],es
   1400110f0:	retf   
   1400110f1:	pop    QWORD PTR [rsi-0x1]
   1400110f4:	(bad)  
   1400110f5:	xchg   ecx,eax
   1400110f6:	rex.WX call rax
   1400110f9:	xchg   esp,eax
   1400110fa:	rex.WR call rbx
   1400110fd:	xchg   esi,eax
   1400110fe:	push   rax
   1400110ff:	call   rbp
   140011101:	cdq    
   140011102:	push   rdx
   140011103:	call   rdi
   140011105:	(bad)  
   140011106:	push   rsp
   140011107:	(bad)  
   140011108:	fstp   DWORD PTR [rbp-0x612500a9]
   14001110e:	pop    rax
   14001110f:	(bad)  
   140011110:	ficomp DWORD PTR [rsi-0x612500a8]
   140011116:	pop    rax
   140011117:	(bad)  
   140011118:	cmp    BYTE PTR [rax+rax*1],bl
   14001111b:	movsxd eax,DWORD PTR [rax]
   14001111d:	add    BYTE PTR [rax],al
   14001111f:	add    BYTE PTR [r8],al
	...
   14001112a:	add    BYTE PTR [rax],al
   14001112c:	popf   
   14001112d:	imul   esp,DWORD PTR [rdi],0x13
   140011130:	cdq    
   140011131:	push   0x1f
   140011133:	(bad)  
   140011134:	cli    
   140011135:	div    ah
   140011137:	push   rdi
   140011139:	lock out dx,al
   14001113b:	(bad)  
   14001113c:	jmp    0x11000d317
   140011141:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011142:	movsxd edi,edi
   140011144:	in     al,dx
   140011145:	fdivr  QWORD PTR [rbx-0x4f291701]
   14001114b:	jmp    rsi
   14001114d:	shr    BYTE PTR [rcx-0x56301c01],cl
   140011153:	jmp    rbx
   140011155:	shr    BYTE PTR [rcx-0x57322001],1
   14001115b:	call   rsi
   14001115d:	(bad)  
   14001115e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001115f:	(bad)  
   140011160:	fmulp  st(5),st
   140011162:	test   al,0xff
   140011164:	in     al,dx
   140011165:	(bad)  [rax-0x532c1c01]
   14001116b:	(bad)  
   14001116c:	fmul   st(5),st
   14001116e:	test   al,0xff
   140011170:	mov    ch,0x93
   140011172:	pop    rdi
   140011173:	jmp    QWORD PTR [rbp-0x2500e99a]
   140011179:	popf   
   14001117a:	(bad)  
   14001117b:	(bad)  
   14001117c:	sti    
   14001117d:	mov    esi,0xbafaff41
   140011182:	xor    al,0xff
   140011184:	stc    
   140011185:	mov    ah,0x23
   140011187:	(bad)  
   140011188:	stc    
   140011189:	mov    cl,0x1c
   14001118b:	(bad)  
   14001118c:	stc    
   14001118d:	mov    al,0x1a
   14001118f:	push   rdi
   140011191:	scas   eax,DWORD PTR es:[rdi]
   140011192:	sbb    al,0xff
   140011194:	cmc    
   140011195:	lods   al,BYTE PTR ds:[rsi]
   140011196:	sbb    bh,bh
   140011198:	repnz stos BYTE PTR es:[rdi],al
   14001119a:	sbb    edi,edi
   14001119c:	repnz mov bl,0x3b
   14001119f:	push   rcx
   1400111a1:	mov    ebx,0xc1f0ff55
   1400111a6:	imul   edi,edi,0xff67beee
   1400111ac:	jmp    0x140011168
   1400111ae:	data16 (bad) 
   1400111b0:	call   0x12700766b
   1400111b5:	mov    bl,0x62
   1400111b7:	jmp    rbx
   1400111b9:	scas   eax,DWORD PTR es:[rdi]
   1400111ba:	(bad)  
   1400111bb:	(bad)  
   1400111bc:	fild   QWORD PTR [rdi+rbx*2+0x5ea9dcff]
   1400111c3:	(bad)  
   1400111c4:	fisub  DWORD PTR [rbp-0x5d2700a2]
   1400111ca:	pop    rsi
   1400111cb:	call   rbp
   1400111cd:	lahf   
   1400111ce:	pop    rsi
   1400111cf:	call   rbx
   1400111d1:	popf   
   1400111d2:	pop    rsi
   1400111d3:	dec    ecx
   1400111d5:	mov    al,BYTE PTR [rbx-0x1]
   1400111d8:	ficomp DWORD PTR [rsi+0xff58]
   1400111de:	add    BYTE PTR [rbp+0x0],al
	...
   1400111e9:	add    BYTE PTR [rax],al
   1400111eb:	add    BYTE PTR [rax-0x66eee49b],bl
   1400111f1:	push   0x1e
   1400111f3:	(bad)  
   1400111f4:	sti    
   1400111f5:	clc    
   1400111f6:	idiv   edi
   1400111f8:	stc    
   1400111f9:	hlt    
   1400111fa:	repz push rdi
   1400111fd:	out    dx,eax
   1400111fe:	in     eax,dx
   1400111ff:	(bad)  
   140011200:	fnstenv [rdi-0x65370075]
   140011206:	rex.WRX dec rsi
   140011209:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001120a:	(bad)  
   14001120b:	dec    esi
   14001120d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001120e:	(bad)  
   14001120f:	dec    edi
   140011211:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011212:	movsxd edi,edi
   140011214:	fidivr DWORD PTR [rbx-0x44250078]
   14001121a:	mov    bh,bh
   14001121c:	fidivr DWORD PTR [rbx-0x44250078]
   140011222:	mov    bh,bh
   140011224:	fidivr DWORD PTR [rbx-0x57300078]
   14001122a:	jmp    QWORD PTR [edi-0x5b00d88f]
   140011231:	gs adc edi,edi
   140011234:	in     al,0xa7
   140011236:	xor    al,0xff
   140011238:	hlt    
   140011239:	mov    eax,0xbcf7ff3c
   14001123e:	ds (bad) 
   140011240:	cli    
   140011241:	mov    esi,0xbefaff42
   140011246:	rex.B (bad) 
   140011248:	sti    
   140011249:	mov    ebx,0xb4faff34
   14001124e:	and    al,0xff
   140011250:	stc    
   140011251:	mov    al,0x1a
   140011253:	push   rdi
   140011255:	scas   al,BYTE PTR es:[rdi]
   140011256:	sbb    bh,bh
   140011258:	cmc    
   140011259:	lods   al,BYTE PTR ds:[rsi]
   14001125a:	sbb    bh,bh
   14001125c:	repnz test eax,0xa5efff1a
   140011262:	(bad)  
   140011263:	(bad)  
   140011264:	in     al,dx
   140011265:	movabs eax,ds:0x97e3ff129ce8ff14
   14001126e:	adc    bh,bh
   140011270:	fist   WORD PTR [rdx-0x732400f5]
   140011276:	or     bh,bh
   140011278:	(bad)  
   140011279:	xchg   BYTE PTR [rsi],al
   14001127b:	call   rcx
   14001127d:	add    DWORD PTR [rdi+rdi*8],0xff007bcd
   140011284:	enter  0x76,0xff
   140011288:	(bad)  
   140011289:	jo     0x14001128b
   14001128b:	(bad)  
   14001128c:	mov    edi,0xbdff006a
   140011291:	data16 add bh,bh
   140011294:	rcr    BYTE PTR [rbp-0x612500a2],cl
   14001129a:	pop    rax
   14001129b:	inc    DWORD PTR [rax]
   14001129d:	add    BYTE PTR [rax],al
   14001129f:	add    BYTE PTR [rax],r8b
	...
   1400112aa:	add    BYTE PTR [rax],al
   1400112ac:	xchg   ebp,eax
   1400112ad:	(bad)  
   1400112ae:	adc    al,0x10
   1400112b0:	cwde   
   1400112b1:	imul   ebx,DWORD PTR [rip+0xfffffffff9fafdff],0xf6f7fbff        # 0x139fc10ba
   1400112bb:	(bad)  
   1400112bc:	stc    
   1400112bd:	repz repnz push rdi
   1400112c1:	out    dx,eax
   1400112c2:	in     eax,dx
   1400112c3:	push   rax
   1400112c5:	loopne 0x14001129c
   1400112c7:	(bad)  
   1400112c8:	jmp    0x12900d6a3
   1400112cd:	(bad)  
   1400112ce:	sar    edi,0xe7
   1400112d1:	sar    DWORD PTR [rbp-0x623e2101],1
   1400112d7:	(bad)  
   1400112d8:	faddp  st(0),st
   1400112da:	popf   
   1400112db:	(bad)  
   1400112dc:	faddp  st(1),st
   1400112de:	popf   
   1400112df:	(bad)  
   1400112e0:	faddp  st(0),st
   1400112e2:	fwait
   1400112e3:	call   rsi
   1400112e5:	mov    ch,0x8d
   1400112e7:	jmp    QWORD PTR [rbx+rbp*2+0x71aeff22]
   1400112ee:	(bad)  
   1400112ef:	jmp    rdi
   1400112f1:	stos   BYTE PTR es:[rdi],al
   1400112f2:	xor    eax,0x39b1eeff
   1400112f7:	push   rbx
   1400112f9:	mov    ch,0x3b
   1400112fb:	push   rsp
   1400112fd:	mov    eax,0xbbf7ff3c
   140011302:	ds (bad) 
   140011304:	cli    
   140011305:	mov    ebp,0xbffbff41
   14001130a:	rex.R (bad) 
   14001130c:	sti    
   14001130d:	mov    edi,0xb9fbff41
   140011312:	xor    edi,edi
   140011314:	stc    
   140011315:	mov    bl,0x23
   140011317:	push   rsi
   140011319:	scas   al,BYTE PTR es:[rdi]
   14001131a:	sbb    edi,edi
   14001131c:	hlt    
   14001131d:	stos   DWORD PTR es:[rdi],eax
   14001131e:	sbb    bh,bh
   140011320:	icebp  
   140011321:	test   eax,0xa4efff17
   140011326:	(bad)  
   140011327:	(bad)  
   140011328:	jmp    0x1400112ca
   14001132a:	adc    edi,edi
   14001132c:	out    0x9b,eax
   14001132e:	adc    edi,edi
   140011330:	loop   0x1400112c8
   140011332:	ud0    ebx,edi
   140011335:	xchg   ecx,eax
   140011336:	or     al,0xff
   140011338:	(bad)  [rbx-0x7a2a00f8]
   14001133e:	add    eax,0x280d1ff
   140011343:	dec    esp
   140011345:	jp     0x140011347
   140011347:	dec    eax
   140011349:	je     0x14001134b
   14001134b:	inc    ebx
   14001134d:	outs   dx,DWORD PTR ds:[rsi]
   14001134e:	add    bh,bh
   140011350:	mov    edi,0xd5ff006b
   140011355:	sahf   
   140011356:	pop    rsi
   140011357:	(bad)  
   140011358:	ficomp DWORD PTR [rsi+0xff58]
   14001135e:	add    BYTE PTR [rax+rax*1+0x0],al
	...
   14001136a:	add    BYTE PTR [rax],al
   14001136c:	xchg   ecx,eax
   14001136d:	pop    rdi
   14001136e:	or     al,0xf
   140011370:	cwde   
   140011371:	imul   ebx,DWORD PTR [rbx],0xfcfcfeff
   140011377:	(bad)  
   140011378:	std    
   140011379:	cli    
   14001137a:	stc    
   14001137b:	(bad)  
   14001137c:	sti    
   14001137d:	div    esi
   14001137f:	(bad)  
   140011380:	stc    
   140011381:	hlt    
   140011382:	repz (bad) 
   140011384:	clc    
   140011385:	icebp  
   140011386:	out    dx,eax
   140011387:	push   rdi
   140011389:	out    dx,eax
   14001138a:	in     eax,dx
   14001138b:	push   rsi
   14001138d:	in     al,dx
   14001138e:	(bad)  
   14001138f:	push   rbp
   140011391:	jmp    0x14001137c
   140011393:	push   rsp
   140011395:	(bad)  
   140011396:	out    0xff,eax
   140011398:	hlt    
   140011399:	jmp    0x129f61385
   14001139e:	out    0xff,eax
   1400113a0:	(bad)  
   1400113a2:	mov    ah,0xff
   1400113a4:	sahf   
   1400113a5:	(bad)  
   1400113a6:	adc    edi,edi
   1400113a8:	mov    ebx,0xe3ff1b7c
   1400113ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400113ae:	xor    bh,bh
   1400113b0:	out    0xa9,eax
   1400113b2:	xor    edi,edi
   1400113b4:	(bad)  
   1400113b5:	lods   eax,DWORD PTR ds:[rsi]
   1400113b6:	(bad)  
   1400113b7:	(bad)  
   1400113b8:	out    dx,eax
   1400113b9:	mov    dl,0x39
   1400113bb:	push   rdx
   1400113bd:	mov    ch,0x3b
   1400113bf:	push   rsp
   1400113c1:	mov    eax,0xbcf7ff3d
   1400113c6:	cmp    eax,0x40bdfaff
   1400113cb:	(bad)  
   1400113cc:	sti    
   1400113cd:	mov    edi,0xc0fbff42
   1400113d2:	rex.XB (bad) 
   1400113d4:	sti    
   1400113d5:	mov    edi,0xbbfaff41
   1400113da:	ss (bad) 
   1400113dc:	clc    
   1400113dd:	mov    dl,0x26
   1400113df:	push   rsp
   1400113e1:	stos   DWORD PTR es:[rdi],eax
   1400113e2:	sbb    edi,edi
   1400113e4:	icebp  
   1400113e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400113e6:	(bad)  
   1400113e7:	(bad)  
   1400113e8:	out    dx,al
   1400113e9:	movabs ds:0x9be7ff139febff14,eax
   1400113f2:	adc    edi,edi
   1400113f4:	jrcxz  0x14001138c
   1400113f6:	ud0    ebx,esi
   1400113f9:	(bad)  
   1400113fa:	or     edi,edi
   1400113fc:	fimul  DWORD PTR [rdx-0x7b2a00f8]
   140011402:	add    eax,0x27fd1ff
   140011407:	dec    esp
   140011409:	jp     0x14001140b
   14001140b:	dec    eax
   14001140d:	je     0x14001140f
   14001140f:	inc    ebx
   140011411:	outs   dx,DWORD PTR ds:[rsi]
   140011412:	add    bh,bh
   140011414:	(bad)  
   140011415:	movabs eax,ds:0xff589edaff5e
   14001141e:	add    BYTE PTR [rax+rax*1+0x0],al
	...
   14001142a:	add    BYTE PTR [rax],al
   14001142c:	xchg   ecx,eax
   14001142d:	pop    rdi
   14001142e:	or     al,0xf
   140011430:	xchg   edi,eax
   140011431:	push   0xfffffffffdfeff1b
   140011436:	std    
   140011437:	(bad)  
   140011438:	(bad)  
   140011439:	cld    
   14001143a:	cld    
   14001143b:	(bad)  
   14001143c:	std    
   14001143d:	cli    
   14001143e:	cli    
   14001143f:	(bad)  
   140011440:	cld    
   140011441:	clc    
   140011442:	clc    
   140011443:	(bad)  
   140011444:	cli    
   140011445:	div    ch
   140011447:	(bad)  
   140011448:	cli    
   140011449:	hlt    
   14001144a:	repz (bad) 
   14001144c:	stc    
   14001144d:	repz icebp 
   14001144f:	(bad)  
   140011450:	clc    
   140011451:	icebp  
   140011452:	lock (bad) 
   140011454:	clc    
   140011455:	lock out dx,al
   140011457:	push   rdi
   140011459:	lock out dx,al
   14001145b:	push   rbp
   14001145d:	in     al,dx
   14001145e:	jmp    0x15765b662
   140011463:	dec    ecx
   140011465:	mov    BYTE PTR [rbx],ah
   140011467:	(bad)  
   140011468:	fistp  DWORD PTR [rbp-0x602000d1]
   14001146e:	(bad)  
   14001146f:	jmp    rsp
   140011471:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011472:	xor    bh,bh
   140011474:	out    0xaa,eax
   140011476:	xor    eax,0x37aeebff
   14001147b:	(bad)  
   14001147c:	out    dx,eax
   14001147d:	mov    dl,0x3a
   14001147f:	push   rdx
   140011481:	mov    ch,0x3b
   140011483:	push   rbp
   140011485:	mov    ecx,0xbcf9ff3c
   14001148a:	(bad)  
   14001148b:	(bad)  
   14001148c:	cli    
   14001148d:	mov    ebp,0xbffaff40
   140011492:	rex.B (bad) 
   140011494:	sti    
   140011495:	mov    edi,0xc0fbff42
   14001149a:	rex.XB (bad) 
   14001149c:	sti    
   14001149d:	mov    esi,0xb8f9ff41
   1400114a2:	xor    eax,0x2ab2f6ff
   1400114a7:	push   rdx
   1400114a9:	stos   BYTE PTR es:[rdi],al
   1400114aa:	sbb    eax,0x15a3eeff
   1400114af:	(bad)  
   1400114b0:	(bad)  
   1400114b1:	sahf   
   1400114b2:	adc    edi,edi
   1400114b4:	out    0x9a,al
   1400114b6:	ud0    esp,edx
   1400114b9:	xchg   esp,eax
   1400114ba:	(bad)  
   1400114bb:	(bad)  
   1400114bc:	fimul  WORD PTR [rdi-0x752700f5]
   1400114c2:	or     bh,bh
   1400114c4:	(bad)  
   1400114c5:	test   BYTE PTR [rip+0x27fd0ff],al        # 0x14280e5ca
   1400114cb:	dec    ebx
   1400114cd:	jns    0x1400114cf
   1400114cf:	inc    edi
   1400114d1:	jae    0x1400114d3
   1400114d3:	(bad)  
   1400114d4:	fsub   DWORD PTR [rbx-0x612500a2]
   1400114da:	pop    rax
   1400114db:	inc    DWORD PTR [rax]
   1400114dd:	add    BYTE PTR [rax],al
   1400114df:	add    BYTE PTR [rax],r8b
	...
   1400114ea:	add    BYTE PTR [rax],al
   1400114ec:	xchg   ecx,eax
   1400114ed:	pop    rdi
   1400114ee:	or     al,0x3
   1400114f0:	xchg   edx,eax
   1400114f1:	(bad)  
   1400114f2:	ud0    edi,esi
   1400114f5:	std    
   1400114f6:	cli    
   1400114f7:	(bad)  
   1400114f8:	(bad)  
   1400114f9:	(bad)  
   1400114fa:	(bad)  
   1400114fb:	(bad)  
   1400114fc:	(bad)  
   1400114fd:	std    
   1400114fe:	std    
   1400114ff:	(bad)  
   140011500:	std    
   140011501:	cld    
   140011502:	sti    
   140011503:	(bad)  
   140011504:	std    
   140011505:	cli    
   140011506:	cli    
   140011507:	(bad)  
   140011508:	cld    
   140011509:	cli    
   14001150a:	stc    
   14001150b:	(bad)  
   14001150c:	cld    
   14001150d:	clc    
   14001150e:	clc    
   14001150f:	(bad)  
   140011510:	sti    
   140011511:	clc    
   140011512:	idiv   edi
   140011514:	sti    
   140011515:	div    esi
   140011517:	(bad)  
   140011518:	sti    
   140011519:	div    ch
   14001151b:	(bad)  
   14001151c:	stc    
   14001151d:	repnz out dx,eax
   14001151f:	jmp    QWORD PTR [rbp-0x3800da95]
   140011525:	mov    BYTE PTR [rip+0x2e9cdbff],ch        # 0x16e9df12a
   14001152b:	(bad)  
   14001152c:	fcomp  QWORD PTR [rbp-0x5f2000d2]
   140011532:	(bad)  
   140011533:	jmp    rbx
   140011535:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011536:	xor    bh,bh
   140011538:	call   0x12d004be7
   14001153d:	scas   al,BYTE PTR es:[rdi]
   14001153e:	cmp    bh,bh
   140011540:	lock mov dl,0x39
   140011543:	push   rbx
   140011545:	mov    ch,0x3b
   140011547:	push   rbp
   140011549:	mov    edx,0xbcf9ff3d
   14001154e:	(bad)  
   14001154f:	(bad)  
   140011550:	cli    
   140011551:	mov    esi,0xbffbff40
   140011556:	rex.B (bad) 
   140011558:	sti    
   140011559:	mov    edi,0xbffbff41
   14001155e:	rex.X (bad) 
   140011560:	sti    
   140011561:	mov    esi,0xbdfaff42
   140011566:	rex push rdi
   140011569:	mov    ecx,0xb2f3ff3c
   14001156e:	xor    bh,bh
   140011570:	out    dx,eax
   140011571:	test   al,0x22
   140011573:	(bad)  
   140011574:	(bad)  
   140011575:	movabs al,ds:0x93e1ff1098e6ff15
   14001157e:	or     al,0xff
   140011580:	fisttp QWORD PTR [rsi-0x752600f8]
   140011586:	(bad)  
   140011587:	call   rbx
   140011589:	test   BYTE PTR [rip+0x17ecfff],al        # 0x1417fe58e
   14001158f:	dec    ebx
   140011591:	js     0x140011593
   140011593:	(bad)  
   140011594:	(bad)  [rdi-0x612500a2]
   14001159a:	pop    rax
   14001159b:	inc    DWORD PTR [rax]
   14001159d:	add    BYTE PTR [rax],al
   14001159f:	add    BYTE PTR [rax],r8b
	...
   1400115ae:	add    BYTE PTR [rax],al
   1400115b0:	xchg   ecx,eax
   1400115b1:	pop    rdi
   1400115b2:	or     al,0x7e
   1400115b4:	xchg   ecx,eax
   1400115b5:	pop    rdi
   1400115b6:	or     al,0xe7
   1400115b8:	xchg   ecx,eax
   1400115b9:	pop    rdi
   1400115ba:	or     al,0xff
   1400115bc:	xchg   ecx,eax
   1400115bd:	pop    rdi
   1400115be:	or     al,0xff
   1400115c0:	xchg   ecx,eax
   1400115c1:	pop    rdi
   1400115c2:	or     al,0xff
   1400115c4:	xchg   ecx,eax
   1400115c5:	pop    rdi
   1400115c6:	or     eax,0xd5f91ff
   1400115cb:	call   QWORD PTR [rdx-0x6d00f2a0]
   1400115d1:	(bad)  
   1400115d2:	(bad)  
   1400115d3:	call   QWORD PTR [rdx-0x6d00f1a0]
   1400115d9:	(bad)  
   1400115da:	(bad)  
   1400115db:	call   QWORD PTR [rdx-0x6c00f1a0]
   1400115e1:	pop    rsi
   1400115e2:	or     eax,0x95997ff
   1400115e7:	jmp    FWORD PTR [rbx-0x2400ed94]
   1400115ed:	(bad)  
   1400115ee:	sub    eax,0x2f9ddbff
   1400115f3:	(bad)  
   1400115f4:	fbld   TBYTE PTR [rcx-0x591b00d0]
   1400115fa:	xor    edi,edi
   1400115fc:	call   0x12d004bac
   140011601:	scas   eax,DWORD PTR es:[rdi]
   140011602:	(bad)  
   140011603:	push   rax
   140011605:	mov    bl,0x3a
   140011607:	push   rbx
   140011609:	mov    bh,0x3b
   14001160b:	push   rsi
   14001160d:	mov    edx,0xbcf9ff3d
   140011612:	(bad)  
   140011613:	(bad)  
   140011614:	cli    
   140011615:	mov    esi,0xbffbff40
   14001161a:	rex.B (bad) 
   14001161c:	sti    
   14001161d:	mov    edi,0xbffbff41
   140011622:	rex.B (bad) 
   140011624:	sti    
   140011625:	mov    esi,0xbcf9ff40
   14001162a:	ds (bad) 
   14001162c:	clc    
   14001162d:	mov    edx,0xb6f5ff3e
   140011632:	cmp    al,0xff
   140011634:	icebp  
   140011635:	mov    cl,0x36
   140011637:	(bad)  
   140011638:	in     al,dx
   140011639:	test   al,0x2b
   14001163b:	(bad)  
   14001163c:	call   0x1230035e1
   140011641:	xchg   esi,eax
   140011642:	adc    al,0xff
   140011644:	fisttp QWORD PTR [rsi-0x772800f5]
   14001164a:	(bad)  
   14001164b:	call   rbx
   14001164d:	(bad)  
   14001164e:	add    bh,bh
   140011650:	(bad)  
   140011651:	jl     0x140011653
   140011653:	(bad)  
   140011654:	fisubr WORD PTR [rcx-0x622500a2]
   14001165a:	pop    rax
   14001165b:	inc    DWORD PTR [rax]
   14001165d:	add    BYTE PTR [rax],al
   14001165f:	add    BYTE PTR [rax],r8b
	...
   1400116a2:	add    BYTE PTR [rax],al
   1400116a4:	xchg   edi,eax
   1400116a5:	push   rdi
   1400116a6:	or     BYTE PTR [rip+0xffffffffbe085898],dl        # 0xfe096f44
   1400116ac:	lahf   
   1400116ad:	pop    rsi
   1400116ae:	or     al,0xe1
   1400116b0:	fcomp  QWORD PTR [rdx-0x602200d6]
   1400116b6:	xor    bh,bh
   1400116b8:	loopne 0x14001165a
   1400116ba:	xor    bh,bh
   1400116bc:	in     al,0xa6
   1400116be:	xor    edi,edi
   1400116c0:	jmp    0x12e004c70
   1400116c5:	scas   eax,DWORD PTR es:[rdi]
   1400116c6:	cmp    bh,bh
   1400116c8:	lock mov ah,0x3b
   1400116cb:	push   rbx
   1400116cd:	mov    dh,0x3b
   1400116cf:	push   rsi
   1400116d1:	mov    edx,0xbcf9ff3d
   1400116d6:	(bad)  
   1400116d7:	(bad)  
   1400116d8:	cli    
   1400116d9:	mov    esi,0xbffbff40
   1400116de:	rex.B (bad) 
   1400116e0:	sti    
   1400116e1:	mov    edi,0xbffbff41
   1400116e6:	rex.B (bad) 
   1400116e8:	cli    
   1400116e9:	mov    ebp,0xbcfaff40
   1400116ee:	ds push rdi
   1400116f1:	mov    eax,0xb6f4ff3c
   1400116f6:	cmp    eax,0x3db4f2ff
   1400116fb:	(bad)  
   1400116fc:	out    dx,al
   1400116fd:	scas   al,BYTE PTR es:[rdi]
   1400116fe:	cmp    edi,edi
   140011700:	(bad)  
   140011701:	test   eax,0xa1e6ff35
   140011706:	sub    eax,0x2299e1ff
   14001170b:	(bad)  
   14001170c:	fimul  DWORD PTR [rdi-0x7b2c00ed]
   140011712:	or     bh,bh
   140011714:	loopne 0x1400116c2
   140011716:	pop    rdi
   140011717:	(bad)  
   140011718:	fstp   DWORD PTR [rbp+0xff57]
   14001171e:	add    BYTE PTR [rdi+0x0],al
	...
   140011765:	add    BYTE PTR [rax],al
   140011767:	add    BYTE PTR [rdi-0x68fcf7a9],dl
   14001176d:	push   rdi
   14001176e:	or     BYTE PTR [rdi-0x14f5a465],al
   140011774:	retf   
   140011775:	mov    DWORD PTR [rbx],esp
   140011777:	clc    
   140011778:	loopne 0x14001171b
   14001177a:	xor    bh,bh
   14001177c:	loopne 0x140011720
   14001177e:	xor    bh,bh
   140011780:	in     al,0xa6
   140011782:	xor    edi,edi
   140011784:	call   0x12d004d34
   140011789:	scas   eax,DWORD PTR es:[rdi]
   14001178a:	cmp    bh,bh
   14001178c:	icebp  
   14001178d:	mov    ah,0x3b
   14001178f:	push   rbx
   140011791:	mov    eax,0xbbf6ff3b
   140011796:	cmp    eax,0x3fbcfaff
   14001179b:	(bad)  
   14001179c:	sti    
   14001179d:	mov    edi,0xbffbff41
   1400117a2:	rex.B (bad) 
   1400117a4:	sti    
   1400117a5:	mov    edi,0xbefaff41
   1400117aa:	rex.B (bad) 
   1400117ac:	cli    
   1400117ad:	mov    ebp,0xbbf9ff3f
   1400117b2:	ds push rsi
   1400117b5:	mov    ecx,0xb5f4ff3c
   1400117ba:	cmp    edi,edi
   1400117bc:	icebp  
   1400117bd:	mov    dl,0x39
   1400117bf:	(bad)  
   1400117c0:	out    dx,al
   1400117c1:	lods   eax,DWORD PTR ds:[rsi]
   1400117c2:	cmp    bh,bh
   1400117c4:	(bad)  
   1400117c5:	stos   BYTE PTR es:[rdi],al
   1400117c6:	ss jmp rdi
   1400117c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400117ca:	xor    al,0xff
   1400117cc:	in     al,0xa0
   1400117ce:	xor    edi,edi
   1400117d0:	ficomp WORD PTR [rcx-0x451900d5]
   1400117d6:	jae    0x1400117d7
   1400117d8:	fcomp  DWORD PTR [rbp+0xff57]
   1400117de:	add    BYTE PTR [rdi],dl
	...
   140011830:	xchg   edi,eax
   140011831:	push   rdi
   140011832:	or     BYTE PTR [rcx-0x68],dl
   140011835:	pop    rax
   140011836:	or     esi,ebp
   140011838:	mov    ebp,0xdeec1c7c
   14001183d:	lahf   
   14001183e:	(bad)  
   14001183f:	jmp    rax
   140011841:	movabs ds:0xabe9ff33a6e5ff31,al
   14001184a:	(bad)  
   14001184b:	(bad)  
   14001184c:	in     eax,dx
   14001184d:	mov    al,0x38
   14001184f:	push   rcx
   140011851:	mov    ah,0x3a
   140011853:	push   rbx
   140011855:	mov    eax,0xbbf7ff3c
   14001185a:	cmp    eax,0x40bcf9ff
   14001185f:	(bad)  
   140011860:	sti    
   140011861:	(bad)  
   140011862:	pop    rsp
   140011863:	cld    
   140011864:	test   esi,0xcdfeed5d
   14001186a:	(bad)  
   14001186b:	out    0xfe,al
   14001186d:	int3   
   14001186e:	(bad)  
   14001186f:	out    0xfe,al
   140011871:	retf   0xe65f
   140011874:	std    
   140011875:	leave  
   140011876:	pop    rsi
   140011877:	out    0xfc,al
   140011879:	(bad)  
   14001187a:	pop    rbx
   14001187b:	out    0xf9,al
   14001187d:	ret    0xe65b
   140011880:	test   eax,0xbdf4e65a
   140011886:	push   rsi
   140011887:	out    0xf2,al
   140011889:	mov    ecx,0xb5eee656
   14001188e:	push   rsp
   14001188f:	out    0xeb,al
   140011891:	mov    cl,0x52
   140011893:	out    0xeb,al
   140011895:	mov    edx,0x9cd8ea6b
   14001189a:	push   rsi
   14001189b:	inc    DWORD PTR [rax]
	...
   1400118f1:	add    BYTE PTR [rax],al
   1400118f3:	add    BYTE PTR [rdi-0x67d8f7a9],dl
   1400118f9:	pop    rcx
   1400118fa:	or     ebp,ebx
   1400118fc:	scas   al,BYTE PTR es:[rdi]
   1400118fd:	ins    DWORD PTR es:[rdi],dx
   1400118fe:	adc    al,0xde
   140011900:	ficomp WORD PTR [rsi-0x5c1d00d2]
   140011906:	xor    edi,edi
   140011908:	in     eax,0xa7
   14001190a:	xor    al,0xff
   14001190c:	jmp    0x12f0050bd
   140011911:	mov    cl,0x39
   140011913:	push   rcx
   140011915:	mov    ch,0x3b
   140011917:	push   rsp
   140011919:	mov    ecx,0xbbf7ff3c
   14001191e:	push   QWORD PTR ds:[rax-0x4c00d98e]
   140011925:	jne    0x140011950
   140011927:	push   QWORD PTR [rsi-0x4600d188]
   14001192d:	jnp    0x140011960
   14001192f:	(bad)  
   140011930:	mov    esp,0xbfff347e
   140011935:	(bad)  
   140011936:	cmp    edi,edi
   140011938:	ret    0x3d86
   14001193b:	inc    esi
   14001193d:	mov    BYTE PTR [rdi],bh
   14001193f:	dec    eax
   140011941:	mov    eax,DWORD PTR [rbx-0x1]
   140011944:	retf   
   140011945:	pop    QWORD PTR [rdi-0x1]
   140011948:	(bad)  
   140011949:	xchg   ecx,eax
   14001194a:	rex.WX call rcx
   14001194d:	xchg   esp,eax
   14001194e:	rex.WR call rbx
   140011951:	xchg   edi,eax
   140011952:	push   rax
   140011953:	call   rbp
   140011955:	cdq    
   140011956:	push   rdx
   140011957:	inc    DWORD PTR [rax]
	...
   1400119b5:	add    BYTE PTR [rax],al
   1400119b7:	add    BYTE PTR [rdi-0x67f0f7a9],dl
   1400119bd:	pop    rcx
   1400119be:	or     ch,BYTE PTR [rdi-0x19ef9d5d]
   1400119c4:	fcomp  DWORD PTR [rax-0x5a1c00d4]
   1400119ca:	xor    bh,bh
   1400119cc:	out    0xa7,al
   1400119ce:	xor    al,0xff
   1400119d0:	(bad)  
   1400119d1:	lods   eax,DWORD PTR ds:[rsi]
   1400119d2:	(bad)  
   1400119d3:	(bad)  
   1400119d4:	out    dx,eax
   1400119d5:	mov    cl,0x39
   1400119d7:	push   rcx
   1400119d9:	mov    ah,0x3b
   1400119db:	push   rsp
   1400119dd:	mov    ecx,0x70afff3c
   1400119e2:	and    al,0xff
   1400119e4:	add    BYTE PTR [rax],al
   1400119e6:	add    BYTE PTR [rdx+0x0],al
	...
   140011a7d:	add    BYTE PTR [rax],al
   140011a7f:	add    BYTE PTR [rcx-0x6287f4a6],bl
   140011a85:	pop    rbp
   140011a86:	(bad)  
   140011a87:	lock retf 
   140011a89:	mov    ah,BYTE PTR [rdx+rsi*8]
   140011a8c:	in     al,0xa5
   140011a8e:	xor    bh,bh
   140011a90:	out    0xa9,al
   140011a92:	xor    al,0xff
   140011a94:	jmp    0x140011a43
   140011a96:	ss (bad) 
   140011a98:	out    dx,eax
   140011a99:	mov    cl,0x39
   140011a9b:	push   rdx
   140011a9d:	mov    dh,0x3b
   140011a9f:	jmp    FWORD PTR [rbp+0xff236f]
   140011aa5:	add    BYTE PTR [rax],al
   140011aa7:	rex.X add BYTE PTR [rax],al
	...
   140011b42:	add    BYTE PTR [rax],al
   140011b44:	fwait
   140011b45:	pop    rbx
   140011b46:	or     al,0x45
   140011b48:	popf   
   140011b49:	pop    rsi
   140011b4a:	pminsw mm0,mm2
   140011b4d:	and    DWORD PTR [rax],0x32a6e4e4
   140011b53:	jmp    rdi
   140011b55:	stos   BYTE PTR es:[rdi],al
   140011b56:	xor    eax,0x37aeebff
   140011b5b:	(bad)  
   140011b5c:	out    dx,eax
   140011b5d:	mov    bl,0x39
   140011b5f:	jmp    FWORD PTR [rbp+rbp*2+0xff21]
   140011b66:	add    BYTE PTR [rdx+0x0],al
	...
   140011c05:	add    BYTE PTR [rax],al
   140011c07:	add    BYTE PTR [rbx-0x61e1f1a5],bl
   140011c0d:	pop    rdi
   140011c0e:	adc    al,dl
   140011c10:	mov    cl,0x70
   140011c12:	sbb    ebp,esp
   140011c14:	out    0xa6,al
   140011c16:	xor    bh,bh
   140011c18:	call   0x12c0052c7
   140011c1d:	scas   eax,DWORD PTR es:[rdi]
   140011c1e:	(bad)  
   140011c1f:	jmp    FWORD PTR [rbx+0xff1f6c]
   140011c25:	add    BYTE PTR [rax],al
   140011c27:	rex.X add BYTE PTR [rax],al
	...
   140011cca:	add    BYTE PTR [rax],al
   140011ccc:	pushf  
   140011ccd:	pop    rbp
   140011cce:	(bad)  
   140011ccf:	(bad)  
   140011cd0:	movabs al,ds:0xdde91665a59f1260
   140011cd9:	sahf   
   140011cda:	(bad)  
   140011cdb:	(bad)  
   140011cdc:	jmp    0xeb00548d
   140011ce1:	push   0x1e
   140011ce3:	inc    DWORD PTR [rax]
   140011ce5:	add    BYTE PTR [rax],al
   140011ce7:	add    BYTE PTR [r8],r8b
	...
   140011d92:	add    BYTE PTR [rax],al
   140011d94:	movabs al,ds:0xd5f21664a4631361
   140011d9d:	xchg   esp,eax
   140011d9e:	sub    al,0xf8
   140011da0:	test   al,0x69
   140011da2:	sbb    al,0xff
   140011da4:	add    BYTE PTR [rax],al
   140011da6:	add    BYTE PTR [rbx],dh
	...
   140011e58:	movabs eax,ds:0xa6ea1966a6391462
   140011e61:	push   0xff1b
   140011e66:	add    BYTE PTR [rax+rax*1],al
	...
   140011f19:	add    BYTE PTR [rax],al
   140011f1b:	add    BYTE PTR [rbx-0x56eae99d],ah
   140011f21:	imul   ebx,DWORD PTR [rbx],0x6e
	...
   140011f5f:	add    bh,bh
   140011f61:	(bad)  
   140011f62:	(bad)  
   140011f63:	(bad)  
   140011f64:	(bad)  
   140011f65:	inc    DWORD PTR [rax]
   140011f67:	add    bh,bh
   140011f69:	(bad)  
   140011f6a:	(bad)  
   140011f6b:	(bad)  
   140011f6c:	(bad)  
   140011f6d:	inc    DWORD PTR [rax]
   140011f6f:	add    bh,bh
   140011f71:	(bad)  
   140011f72:	(bad)  
   140011f73:	(bad)  
   140011f74:	(bad)  
   140011f75:	inc    DWORD PTR [rax]
   140011f77:	add    bh,bh
   140011f79:	(bad)  
   140011f7a:	(bad)  
   140011f7b:	(bad)  
   140011f7c:	(bad)  
   140011f7d:	inc    DWORD PTR [rax]
   140011f7f:	add    bh,bh
   140011f81:	(bad)  
   140011f82:	(bad)  
   140011f83:	(bad)  
   140011f84:	(bad)  
   140011f85:	inc    DWORD PTR [rax]
   140011f87:	add    bh,bh
   140011f89:	(bad)  
   140011f8a:	(bad)  
   140011f8b:	(bad)  
   140011f8c:	(bad)  
   140011f8d:	inc    DWORD PTR [rax]
   140011f8f:	add    al,bh
   140011f91:	add    BYTE PTR [rax],al
   140011f93:	add    BYTE PTR [rax],al
   140011f95:	sldt   WORD PTR [rax]
   140011f98:	lock add BYTE PTR [rax],al
   140011f9b:	add    BYTE PTR [rax],al
   140011f9d:	sldt   WORD PTR [rax]
   140011fa0:	loopne 0x140011fa2
   140011fa2:	add    BYTE PTR [rax],al
   140011fa4:	add    BYTE PTR [rdi],cl
   140011fa6:	add    BYTE PTR [rax],al
   140011fa8:	loopne 0x140011faa
   140011faa:	add    BYTE PTR [rax],al
   140011fac:	add    BYTE PTR [rdi],cl
   140011fae:	add    BYTE PTR [rax],al
   140011fb0:	loopne 0x140011fb2
   140011fb2:	add    BYTE PTR [rax],al
   140011fb4:	add    BYTE PTR [rdi],cl
   140011fb6:	add    BYTE PTR [rax],al
   140011fb8:	loopne 0x140011fba
   140011fba:	add    BYTE PTR [rax],al
   140011fbc:	add    BYTE PTR [rdi],cl
   140011fbe:	add    BYTE PTR [rax],al
   140011fc0:	loopne 0x140011fc2
   140011fc2:	add    BYTE PTR [rax],al
   140011fc4:	add    BYTE PTR [rdi],cl
   140011fc6:	add    BYTE PTR [rax],al
   140011fc8:	loopne 0x140011fca
   140011fca:	add    BYTE PTR [rax],al
   140011fcc:	add    BYTE PTR [rdi],cl
   140011fce:	add    BYTE PTR [rax],al
   140011fd0:	loopne 0x140011fd2
   140011fd2:	add    BYTE PTR [rax],al
   140011fd4:	add    BYTE PTR [rdi],cl
   140011fd6:	add    BYTE PTR [rax],al
   140011fd8:	loopne 0x140011fda
   140011fda:	add    BYTE PTR [rax],al
   140011fdc:	add    BYTE PTR [rdi],cl
   140011fde:	add    BYTE PTR [rax],al
   140011fe0:	loopne 0x140011fe2
   140011fe2:	add    BYTE PTR [rax],al
   140011fe4:	add    BYTE PTR [rdi],cl
   140011fe6:	add    BYTE PTR [rax],al
   140011fe8:	loopne 0x140011fea
   140011fea:	add    BYTE PTR [rax],al
   140011fec:	add    BYTE PTR [rdi],cl
   140011fee:	add    BYTE PTR [rax],al
   140011ff0:	loopne 0x140011ff2
   140011ff2:	add    BYTE PTR [rax],al
   140011ff4:	add    BYTE PTR [rdi],cl
   140011ff6:	add    BYTE PTR [rax],al
   140011ff8:	loopne 0x140011ffa
   140011ffa:	add    BYTE PTR [rax],al
   140011ffc:	add    BYTE PTR [rdi],cl
   140011ffe:	add    BYTE PTR [rax],al
   140012000:	loopne 0x140012002
   140012002:	add    BYTE PTR [rax],al
   140012004:	add    BYTE PTR [rdi],cl
   140012006:	add    BYTE PTR [rax],al
   140012008:	loopne 0x14001200a
   14001200a:	add    BYTE PTR [rax],al
   14001200c:	add    BYTE PTR [rdi],cl
   14001200e:	add    BYTE PTR [rax],al
   140012010:	loopne 0x140012012
   140012012:	add    BYTE PTR [rax],al
   140012014:	add    BYTE PTR [rdi],cl
   140012016:	add    BYTE PTR [rax],al
   140012018:	loopne 0x14001201a
   14001201a:	add    BYTE PTR [rax],al
   14001201c:	add    BYTE PTR [rdi],cl
   14001201e:	add    BYTE PTR [rax],al
   140012020:	loopne 0x140012022
   140012022:	add    BYTE PTR [rax],al
   140012024:	add    BYTE PTR [rdi],cl
   140012026:	add    BYTE PTR [rax],al
   140012028:	loopne 0x14001202a
   14001202a:	add    BYTE PTR [rax],al
   14001202c:	add    BYTE PTR [rdi],cl
   14001202e:	add    BYTE PTR [rax],al
   140012030:	loopne 0x140012032
   140012032:	add    BYTE PTR [rax],al
   140012034:	add    BYTE PTR [rdi],cl
   140012036:	add    BYTE PTR [rax],al
   140012038:	loopne 0x14001203a
   14001203a:	add    BYTE PTR [rax],al
   14001203c:	add    BYTE PTR [rax],al
   14001203e:	add    BYTE PTR [rax],al
   140012040:	loopne 0x140012042
   140012042:	add    BYTE PTR [rax],al
   140012044:	add    BYTE PTR [rax],al
   140012046:	add    BYTE PTR [rax],al
   140012048:	loopne 0x14001204a
   14001204a:	add    BYTE PTR [rax],al
   14001204c:	add    BYTE PTR [rax],al
   14001204e:	add    BYTE PTR [rax],al
   140012050:	loopne 0x140012052
   140012052:	add    BYTE PTR [rax],al
   140012054:	add    BYTE PTR [rax],al
   140012056:	add    BYTE PTR [rax],al
   140012058:	loopne 0x14001205a
   14001205a:	add    BYTE PTR [rax],al
   14001205c:	add    BYTE PTR [rax],al
   14001205e:	add    BYTE PTR [rax],al
   140012060:	loopne 0x140012062
   140012062:	add    BYTE PTR [rax],al
   140012064:	add    BYTE PTR [rax],al
   140012066:	add    BYTE PTR [rax],al
   140012068:	loopne 0x14001206a
   14001206a:	add    BYTE PTR [rax],al
   14001206c:	add    BYTE PTR [rax],al
   14001206e:	add    BYTE PTR [rax],al
   140012070:	loopne 0x140012072
   140012072:	add    BYTE PTR [rax],al
   140012074:	add    BYTE PTR [rax],al
   140012076:	add    BYTE PTR [rax],al
   140012078:	lock add BYTE PTR [rax],al
   14001207b:	add    BYTE PTR [rax],al
   14001207d:	add    BYTE PTR [rax],al
   14001207f:	add    bh,bh
   140012081:	inc    DWORD PTR [rax+0x0]
   140012087:	add    bh,bh
   140012089:	inc    eax
   14001208b:	add    BYTE PTR [rax],al
   14001208d:	add    BYTE PTR [rax],al
   14001208f:	add    bh,bh
   140012091:	push   rax
   140012093:	add    BYTE PTR [rax],al
   140012095:	add    DWORD PTR [rax],eax
   140012097:	add    bh,bh
   140012099:	(bad)  
   14001209a:	clc    
   14001209b:	add    BYTE PTR [rax],al
   14001209d:	add    eax,DWORD PTR [rax]
   14001209f:	add    bh,bh
   1400120a1:	(bad)  
   1400120a2:	cld    
   1400120a3:	add    BYTE PTR [rdi],bh
   1400120a5:	inc    DWORD PTR [rax]
   1400120a7:	add    bh,bh
   1400120a9:	(bad)  
   1400120aa:	inc    DWORD PTR [rax]
   1400120ac:	(bad)  
   1400120ad:	inc    DWORD PTR [rax]
   1400120af:	add    bh,bh
   1400120b1:	(bad)  
   1400120b2:	inc    DWORD PTR [rax+0xff3f]
   1400120b8:	(bad)  
   1400120b9:	(bad)  
   1400120ba:	inc    eax
   1400120bc:	(bad)  
   1400120bd:	inc    DWORD PTR [rax]
   1400120bf:	add    bh,bh
   1400120c1:	(bad)  
   1400120c2:	jmp    rax
   1400120c4:	(bad)  
   1400120c5:	inc    DWORD PTR [rax]
   1400120c7:	add    bh,bh
   1400120c9:	(bad)  
   1400120ca:	(bad)  
   1400120cb:	clc    
   1400120cc:	(bad)  
   1400120cd:	inc    DWORD PTR [rax]
   1400120cf:	add    bh,bh
   1400120d1:	(bad)  
   1400120d2:	(bad)  
   1400120d3:	cld    
   1400120d4:	(bad)  
   1400120d5:	inc    DWORD PTR [rax]
   1400120d7:	add    bh,bh
   1400120d9:	(bad)  
   1400120da:	(bad)  
   1400120db:	(bad)  
   1400120dc:	jg     0x1400120dd
   1400120de:	add    BYTE PTR [rax],al
   1400120e0:	sub    BYTE PTR [rax],al
   1400120e2:	add    BYTE PTR [rax],al
   1400120e4:	and    BYTE PTR [rax],al
   1400120e6:	add    BYTE PTR [rax],al
   1400120e8:	add    BYTE PTR [rax],al
   1400120eb:	add    BYTE PTR [rcx],al
   1400120ed:	add    BYTE PTR [rax],ah
   1400120ef:	add    BYTE PTR [rax],al
   1400120f1:	add    BYTE PTR [rax],al
   1400120f3:	add    BYTE PTR [rax+0x10],al
	...
   140012205:	add    BYTE PTR [rax],al
   140012207:	add    BYTE PTR [rcx-0x6e99f3a1],dl
   14001220d:	pop    rdi
   14001220e:	or     al,0xff
   140012210:	xchg   ecx,eax
   140012211:	pop    rdi
   140012212:	or     al,0xff
   140012214:	xchg   ecx,eax
   140012215:	pop    rdi
   140012216:	or     al,0xff
   140012218:	xchg   ecx,eax
   140012219:	pop    rdi
   14001221a:	or     al,0xff
   14001221c:	xchg   ecx,eax
   14001221d:	pop    rdi
   14001221e:	or     al,0xff
   140012220:	xchg   ecx,eax
   140012221:	pop    rdi
   140012222:	or     al,0xff
   140012224:	xchg   ecx,eax
   140012225:	pop    rdi
   140012226:	or     al,0xff
   140012228:	xchg   ecx,eax
   140012229:	pop    rdi
   14001222a:	or     al,0xff
   14001222c:	xchg   ecx,eax
   14001222d:	pop    rdi
   14001222e:	or     al,0xff
   140012230:	xchg   ecx,eax
   140012231:	pop    rdi
   140012232:	or     al,0xff
   140012234:	xchg   ecx,eax
   140012235:	pop    rdi
   140012236:	or     al,0xff
   140012238:	xchg   ecx,eax
   140012239:	pop    rdi
   14001223a:	or     al,0xff
   14001223c:	xchg   ecx,eax
   14001223d:	pop    rdi
   14001223e:	or     al,0xff
   140012240:	xchg   ecx,eax
   140012241:	pop    rdi
   140012242:	or     al,0xff
   140012244:	xchg   ecx,eax
   140012245:	pop    rdi
   140012246:	or     al,0xff
   140012248:	xchg   ecx,eax
   140012249:	pop    rdi
   14001224a:	or     al,0xff
   14001224c:	xchg   ecx,eax
   14001224d:	pop    rdi
   14001224e:	or     al,0xff
   140012250:	xchg   ecx,eax
   140012251:	pop    rdi
   140012252:	or     al,0xff
   140012254:	xchg   ecx,eax
   140012255:	pop    rdi
   140012256:	or     al,0xff
   140012258:	xchg   ecx,eax
   140012259:	pop    rdi
   14001225a:	or     al,0xff
   14001225c:	xchg   ecx,eax
   14001225d:	pop    rdi
   14001225e:	or     al,0xff
   140012260:	xchg   ecx,eax
   140012261:	pop    rdi
   140012262:	or     al,0xff
   140012264:	xchg   ecx,eax
   140012265:	pop    rdi
   140012266:	or     al,0xff
   140012268:	xchg   ecx,eax
   140012269:	pop    rdi
   14001226a:	or     al,0xff
   14001226c:	xchg   ecx,eax
   14001226d:	pop    rdi
   14001226e:	or     al,0xff
   140012270:	xchg   ecx,eax
   140012271:	pop    rdi
   140012272:	or     al,0xff
   140012274:	xchg   ecx,eax
   140012275:	pop    rdi
   140012276:	or     al,0xff
   140012278:	xchg   ecx,eax
   140012279:	pop    rdi
   14001227a:	or     al,0xff
   14001227c:	xchg   ecx,eax
   14001227d:	pop    rdi
   14001227e:	or     al,0xff
   140012280:	xchg   ecx,eax
   140012281:	pop    rdi
   140012282:	or     al,0xff
   140012284:	xchg   ecx,eax
   140012285:	pop    rdi
   140012286:	or     al,0x66
   140012288:	xchg   ecx,eax
   140012289:	pop    rdi
   14001228a:	or     al,0xff
   14001228c:	(bad)  
   14001228d:	(bad)  
   14001228e:	(bad)  
   14001228f:	(bad)  
   140012290:	(bad)  
   140012291:	(bad)  
   140012292:	(bad)  
   140012293:	(bad)  
   140012294:	(bad)  
   140012295:	(bad)  
   140012296:	(bad)  
   140012297:	(bad)  
   140012298:	(bad)  
   140012299:	(bad)  
   14001229a:	(bad)  
   14001229b:	(bad)  
   14001229c:	(bad)  
   14001229d:	(bad)  
   14001229e:	(bad)  
   14001229f:	(bad)  
   1400122a0:	(bad)  
   1400122a1:	(bad)  
   1400122a2:	(bad)  
   1400122a3:	(bad)  
   1400122a4:	(bad)  
   1400122a5:	(bad)  
   1400122a6:	(bad)  
   1400122a7:	(bad)  
   1400122a8:	(bad)  
   1400122a9:	(bad)  
   1400122aa:	(bad)  
   1400122ab:	(bad)  
   1400122ac:	(bad)  
   1400122ad:	(bad)  
   1400122ae:	(bad)  
   1400122af:	(bad)  
   1400122b0:	(bad)  
   1400122b1:	(bad)  
   1400122b2:	(bad)  
   1400122b3:	(bad)  
   1400122b4:	(bad)  
   1400122b5:	(bad)  
   1400122b6:	(bad)  
   1400122b7:	(bad)  
   1400122b8:	(bad)  
   1400122b9:	(bad)  
   1400122ba:	(bad)  
   1400122bb:	(bad)  
   1400122bc:	(bad)  
   1400122bd:	(bad)  
   1400122be:	(bad)  
   1400122bf:	(bad)  
   1400122c0:	(bad)  
   1400122c1:	(bad)  
   1400122c2:	(bad)  
   1400122c3:	(bad)  
   1400122c4:	(bad)  
   1400122c5:	(bad)  
   1400122c6:	(bad)  
   1400122c7:	(bad)  
   1400122c8:	(bad)  
   1400122c9:	(bad)  
   1400122ca:	(bad)  
   1400122cb:	(bad)  
   1400122cc:	(bad)  
   1400122cd:	(bad)  
   1400122ce:	(bad)  
   1400122cf:	(bad)  
   1400122d0:	(bad)  
   1400122d1:	(bad)  
   1400122d2:	(bad)  
   1400122d3:	(bad)  
   1400122d4:	(bad)  
   1400122d5:	(bad)  
   1400122d6:	(bad)  
   1400122d7:	(bad)  
   1400122d8:	(bad)  
   1400122d9:	(bad)  
   1400122da:	(bad)  
   1400122db:	(bad)  
   1400122dc:	(bad)  
   1400122dd:	(bad)  
   1400122de:	(bad)  
   1400122df:	(bad)  
   1400122e0:	(bad)  
   1400122e1:	(bad)  
   1400122e2:	(bad)  
   1400122e3:	(bad)  
   1400122e4:	(bad)  
   1400122e5:	(bad)  
   1400122e6:	(bad)  
   1400122e7:	(bad)  
   1400122e8:	(bad)  
   1400122e9:	(bad)  
   1400122ea:	(bad)  
   1400122eb:	(bad)  
   1400122ec:	(bad)  
   1400122ed:	(bad)  
   1400122ee:	(bad)  
   1400122ef:	(bad)  
   1400122f0:	(bad)  
   1400122f1:	(bad)  
   1400122f2:	(bad)  
   1400122f3:	(bad)  
   1400122f4:	(bad)  
   1400122f5:	(bad)  
   1400122f6:	(bad)  
   1400122f7:	(bad)  
   1400122f8:	(bad)  
   1400122f9:	(bad)  
   1400122fa:	(bad)  
   1400122fb:	(bad)  
   1400122fc:	(bad)  
   1400122fd:	(bad)  
   1400122fe:	(bad)  
   1400122ff:	(bad)  
   140012300:	(bad)  
   140012301:	(bad)  
   140012302:	(bad)  
   140012303:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012309:	pop    rdi
   14001230a:	or     al,0xff
   14001230c:	(bad)  
   14001230d:	(bad)  
   14001230e:	clc    
   14001230f:	(bad)  
   140012310:	stc    
   140012311:	cmc    
   140012312:	call   0x125f51d16
   140012317:	(bad)  
   140012318:	clc    
   140012319:	repnz loop 0x14001231b
   14001231c:	div    eax
   14001231e:	(bad)  
   140012320:	imul   edi
   140012322:	(bad)  
   140012324:	imul   dh
   140012326:	(bad)  
   140012328:	imul   ch
   14001232a:	fdivr  st,st(7)
   14001232c:	cmc    
   14001232d:	in     al,dx
   14001232e:	(bad)  
   14001232f:	push   rsp
   140012331:	jmp    0x140012306
   140012333:	push   rsp
   140012335:	jmp    0x128f5230b
   14001233a:	(bad)  
   14001233b:	push   rdx
   14001233d:	out    0xcb,eax
   14001233f:	push   rcx
   140012341:	out    0xc9,al
   140012343:	push   rcx
   140012345:	in     al,0xc7
   140012347:	push   rax
   140012349:	jrcxz  0x140012310
   14001234b:	(bad)  
   14001234c:	out    dx,eax
   14001234d:	loop   0x140012310
   14001234f:	(bad)  
   140012350:	out    dx,al
   140012351:	loopne 0x140012311
   140012353:	(bad)  
   140012354:	out    dx,al
   140012355:	fistp  QWORD PTR [rdi+rdi*8-0x462113]
   14001235c:	in     al,dx
   14001235d:	fnsave [rdi-0x4b241301]
   140012363:	(bad)  
   140012364:	jmp    0x140012340
   140012366:	mov    cl,0xff
   140012368:	(bad)  
   140012369:	fldcw  WORD PTR [rdi-0x52281501]
   14001236f:	(bad)  
   140012370:	jmp    0x12a00cf4c
   140012375:	(bad)  
   140012376:	test   eax,0xa7d4e8ff
   14001237b:	(bad)  
   14001237c:	(bad)  
   14001237d:	(bad)  
   14001237e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001237f:	(bad)  
   140012380:	(bad)  
   140012381:	(bad)  
   140012382:	(bad)  
   140012383:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012389:	pop    rdi
   14001238a:	or     al,0xff
   14001238c:	(bad)  
   14001238d:	std    
   14001238e:	clc    
   14001238f:	(bad)  
   140012390:	stc    
   140012391:	hlt    
   140012392:	jmp    0x126f51c96
   140012397:	(bad)  
   140012398:	clc    
   140012399:	repnz in al,0xff
   14001239c:	div    ecx
   14001239e:	loope  0x14001239f
   1400123a0:	div    eax
   1400123a2:	(bad)  
   1400123a4:	imul   dh
   1400123a6:	fdiv   st(7),st
   1400123a8:	cmc    
   1400123a9:	in     eax,dx
   1400123aa:	(bad)  
   1400123ac:	cmc    
   1400123ad:	in     al,dx
   1400123ae:	fdivr  st,st(7)
   1400123b0:	hlt    
   1400123b1:	jmp    0x140012388
   1400123b3:	push   rsp
   1400123b5:	(bad)  
   1400123b6:	sar    edi,cl
   1400123b8:	repz jmp 0x128f4238f
   1400123be:	(bad)  
   1400123bf:	push   rdx
   1400123c1:	out    0xcc,eax
   1400123c3:	push   rcx
   1400123c5:	in     eax,0xc9
   1400123c7:	push   rax
   1400123c9:	in     al,0xc8
   1400123cb:	push   rax
   1400123cd:	jrcxz  0x140012394
   1400123cf:	(bad)  
   1400123d0:	out    dx,eax
   1400123d1:	loope  0x140012395
   1400123d3:	(bad)  
   1400123d4:	out    dx,al
   1400123d5:	loopne 0x140012397
   1400123d7:	(bad)  
   1400123d8:	out    dx,al
   1400123d9:	fistp  QWORD PTR [rbp-0x44211201]
   1400123df:	(bad)  
   1400123e0:	in     al,dx
   1400123e1:	fnstsw WORD PTR [rax-0x4a241401]
   1400123e7:	(bad)  
   1400123e8:	jmp    0x1400123c4
   1400123ea:	mov    bl,0xff
   1400123ec:	(bad)  
   1400123ed:	fnstenv [rcx-0x50271501]
   1400123f3:	(bad)  
   1400123f4:	jmp    0x12a00d1d0
   1400123f9:	(bad)  
   1400123fa:	stos   DWORD PTR es:[rdi],eax
   1400123fb:	(bad)  
   1400123fc:	(bad)  
   1400123fd:	xlat   BYTE PTR ds:[rbx]
   1400123fe:	stos   DWORD PTR es:[rdi],eax
   1400123ff:	(bad)  
   140012400:	(bad)  
   140012401:	(bad)  
   140012402:	(bad)  
   140012403:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012409:	pop    rdi
   14001240a:	or     al,0xff
   14001240c:	(bad)  
   14001240d:	(bad)  
   14001240e:	stc    
   14001240f:	(bad)  
   140012410:	cli    
   140012411:	imul   bl
   140012413:	(bad)  
   140012414:	stc    
   140012415:	hlt    
   140012416:	jmp    0x127f61e1a
   14001241b:	(bad)  
   14001241c:	clc    
   14001241d:	repz in al,0xff
   140012420:	clc    
   140012421:	repnz loop 0x140012423
   140012424:	div    eax
   140012426:	(bad)  
   140012428:	imul   bh
   14001242a:	fdiv   st(7),st
   14001242c:	imul   dh
   14001242e:	(bad)  
   140012430:	cmc    
   140012431:	in     eax,dx
   140012432:	fdivr  st,st(7)
   140012434:	cmc    
   140012435:	in     al,dx
   140012436:	(bad)  
   140012437:	push   rsp
   140012439:	jmp    0x14001240e
   14001243b:	push   rbx
   14001243d:	jmp    0x128f42413
   140012442:	iret   
   140012443:	push   rdx
   140012445:	out    0xcc,eax
   140012447:	push   rcx
   140012449:	in     eax,0xc9
   14001244b:	push   rax
   14001244d:	in     al,0xc8
   14001244f:	(bad)  
   140012450:	out    dx,eax
   140012451:	loop   0x140012418
   140012453:	(bad)  
   140012454:	out    dx,eax
   140012455:	loope  0x140012419
   140012457:	(bad)  
   140012458:	out    dx,al
   140012459:	loopne 0x14001241a
   14001245b:	(bad)  
   14001245c:	out    dx,al
   14001245d:	fistp  QWORD PTR [rbp-0x45211201]
   140012463:	(bad)  
   140012464:	in     al,dx
   140012465:	fnstsw WORD PTR [rax-0x4a241401]
   14001246b:	(bad)  
   14001246c:	jmp    0x140012448
   14001246e:	mov    bl,0xff
   140012470:	(bad)  
   140012471:	fnstenv [rdx-0x50271501]
   140012477:	(bad)  
   140012478:	jmp    0x12c00d254
   14001247d:	fsubr  DWORD PTR [rbp-0x1]
   140012483:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012489:	pop    rdi
   14001248a:	or     al,0xff
   14001248c:	(bad)  
   14001248d:	(bad)  
   14001248e:	sti    
   14001248f:	(bad)  
   140012490:	cli    
   140012491:	imul   ch
   140012493:	(bad)  
   140012494:	stc    
   140012495:	hlt    
   140012496:	(bad)  
   140012497:	(bad)  
   140012498:	clc    
   140012499:	icebp  
   14001249a:	call   0x122ee1a9e
   14001249f:	push   rbx
   1400124a1:	jmp    0x125f42483
   1400124a6:	fdivr  st,st(7)
   1400124a8:	icebp  
   1400124a9:	jrcxz  0x140012480
   1400124ab:	push   rcx
   1400124ad:	loop   0x140012482
   1400124af:	push   rax
   1400124b1:	loop   0x140012484
   1400124b3:	push   rax
   1400124b5:	loope  0x140012488
   1400124b7:	push   rax
   1400124b9:	jrcxz  0x14001248b
   1400124bb:	push   rcx
   1400124bd:	in     al,0xd0
   1400124bf:	push   rdx
   1400124c1:	out    0xd1,eax
   1400124c3:	push   rdx
   1400124c5:	out    0xce,eax
   1400124c7:	push   rdx
   1400124c9:	out    0xcc,eax
   1400124cb:	push   rcx
   1400124cd:	in     eax,0xc9
   1400124cf:	push   rax
   1400124d1:	in     al,0xc8
   1400124d3:	push   rax
   1400124d5:	jrcxz  0x14001249c
   1400124d7:	(bad)  
   1400124d8:	out    dx,eax
   1400124d9:	loope  0x14001249d
   1400124db:	(bad)  
   1400124dc:	out    dx,al
   1400124dd:	loopne 0x14001249f
   1400124df:	(bad)  
   1400124e0:	out    dx,al
   1400124e1:	fistp  QWORD PTR [rbp-0x44211201]
   1400124e7:	(bad)  
   1400124e8:	in     al,dx
   1400124e9:	fnstsw WORD PTR [rax-0x4a241401]
   1400124ef:	(bad)  
   1400124f0:	jmp    0x1400124cc
   1400124f2:	mov    bl,0xff
   1400124f4:	(bad)  
   1400124f5:	fnstenv [rcx-0x50271501]
   1400124fb:	(bad)  
   1400124fc:	jmp    0x1400124d7
   1400124fe:	scas   eax,DWORD PTR es:[rdi]
   1400124ff:	(bad)  
   140012500:	(bad)  
   140012501:	(bad)  
   140012502:	(bad)  
   140012503:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012509:	pop    rdi
   14001250a:	or     al,0xff
   14001250c:	(bad)  
   14001250d:	(bad)  
   14001250e:	(bad)  
   14001250f:	(bad)  
   140012510:	cli    
   140012511:	cmc    
   140012512:	out    dx,al
   140012513:	push   rcx
   140012515:	in     eax,0xda
   140012517:	call   rdi
   140012519:	mov    ch,0x89
   14001251b:	call   rbp
   14001251d:	mov    al,0x82
   14001251f:	call   rsp
   140012521:	scas   eax,DWORD PTR es:[rdi]
   140012522:	cmp    bh,0xd4
   140012525:	scas   al,BYTE PTR es:[rdi]
   140012526:	jg     0x140012527
   140012528:	shr    DWORD PTR [rsi-0x522c0083],cl
   14001252e:	jge    0x14001252f
   140012530:	shr    DWORD PTR [rbp-0x522c0083],cl
   140012536:	jl     0x140012537
   140012538:	shr    DWORD PTR [rbp-0x512c0083],cl
   14001253e:	jle    0x14001253f
   140012540:	loopne 0x140012507
   140012542:	test   eax,0xcadfeeff
   140012547:	push   rdx
   140012549:	out    0xcd,eax
   14001254b:	push   rdx
   14001254d:	out    0xcc,eax
   14001254f:	push   rcx
   140012551:	in     eax,0xc9
   140012553:	push   rax
   140012555:	in     al,0xc8
   140012557:	push   rax
   140012559:	jrcxz  0x140012520
   14001255b:	(bad)  
   14001255c:	out    dx,eax
   14001255d:	loop   0x140012522
   14001255f:	(bad)  
   140012560:	out    dx,al
   140012561:	loopne 0x140012523
   140012563:	(bad)  
   140012564:	out    dx,al
   140012565:	fistp  QWORD PTR [rsi-0x44211201]
   14001256b:	(bad)  
   14001256c:	in     al,dx
   14001256d:	fnstsw WORD PTR [rax-0x49231301]
   140012573:	(bad)  
   140012574:	jmp    0x140012550
   140012576:	mov    bl,0xff
   140012578:	(bad)  
   140012579:	fnstenv [rcx-0x4e241301]
   14001257f:	(bad)  
   140012580:	(bad)  
   140012581:	(bad)  
   140012582:	(bad)  
   140012583:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012589:	pop    rdi
   14001258a:	or     al,0xff
   14001258c:	(bad)  
   14001258d:	(bad)  
   14001258e:	(bad)  
   14001258f:	push   rdi
   140012591:	out    dx,al
   140012592:	jmp    0xc5b4fc96
   140012597:	(bad)  
   140012598:	call   0x13200e073
   14001259d:	in     eax,0xd5
   14001259f:	push   rdi
   1400125a1:	in     eax,dx
   1400125a2:	jrcxz  0x1400125a3
   1400125a4:	stc    
   1400125a5:	icebp  
   1400125a6:	out    0xff,eax
   1400125a8:	clc    
   1400125a9:	icebp  
   1400125aa:	out    0xff,al
   1400125ac:	stc    
   1400125ad:	icebp  
   1400125ae:	out    0xff,eax
   1400125b0:	clc    
   1400125b1:	lock out 0xff,al
   1400125b4:	clc    
   1400125b5:	out    dx,al
   1400125b6:	in     eax,0xff
   1400125b8:	imul   ebp
   1400125ba:	loope  0x1400125bb
   1400125bc:	jmp    0x140012599
   1400125be:	(bad)  
   1400125c1:	mov    al,0x7f
   1400125c3:	(bad)  
   1400125c4:	faddp  st(3),st
   1400125c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400125c7:	push   rdx
   1400125c9:	in     eax,0xd0
   1400125cb:	push   rdx
   1400125cd:	call   0x127f325a1
   1400125d2:	retf   
   1400125d3:	push   rcx
   1400125d5:	in     eax,0xc9
   1400125d7:	push   rax
   1400125d9:	in     al,0xc7
   1400125db:	push   rax
   1400125dd:	jrcxz  0x1400125a4
   1400125df:	(bad)  
   1400125e0:	out    dx,eax
   1400125e1:	loope  0x1400125a5
   1400125e3:	(bad)  
   1400125e4:	out    dx,al
   1400125e5:	loopne 0x1400125a7
   1400125e7:	(bad)  
   1400125e8:	out    dx,al
   1400125e9:	fistp  QWORD PTR [rbp-0x45211201]
   1400125ef:	(bad)  
   1400125f0:	in     al,dx
   1400125f1:	fnstsw WORD PTR [rax-0x4a241401]
   1400125f7:	(bad)  
   1400125f8:	jmp    0x1400125d4
   1400125fa:	mov    bl,0xff
   1400125fc:	in     al,dx
   1400125fd:	(bad)  [rbx-0x1]
   140012603:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012609:	pop    rdi
   14001260a:	or     al,0xff
   14001260c:	(bad)  
   14001260d:	(bad)  
   14001260e:	(bad)  
   14001260f:	(bad)  
   140012610:	out    dx,eax
   140012611:	loope  0x1400125eb
   140012613:	call   rdi
   140012615:	mov    ch,0x85
   140012617:	push   rcx
   140012619:	out    0xd5,eax
   14001261b:	jmp    rdi
   14001261d:	(bad)  
   14001261e:	mov    esi,0xb0d2ceff
   140012623:	inc    ecx
   140012625:	shr    DWORD PTR [rax-0x3c242501],1
   14001262b:	dec    ebp
   14001262d:	(bad)  
   14001262e:	mov    ah,0xff
   140012630:	iret   
   140012631:	fidivr DWORD PTR [rdx-0x4b273301]
   140012637:	(bad)  
   140012638:	mov    esi,0xd8ffa7c7
   14001263d:	int3   
   14001263e:	mov    eax,0xd9e8f2ff
   140012643:	call   rdx
   140012645:	lods   al,BYTE PTR ds:[rsi]
   140012646:	jp     0x140012647
   140012648:	out    dx,eax
   140012649:	loope  0x140012619
   14001264b:	push   rbx
   14001264d:	(bad)  
   14001264e:	sar    bh,cl
   140012650:	bnd call 0x127f42625
   140012656:	int3   
   140012657:	push   rcx
   140012659:	in     eax,0xca
   14001265b:	push   rax
   14001265d:	in     al,0xc8
   14001265f:	push   rax
   140012661:	jrcxz  0x140012628
   140012663:	(bad)  
   140012664:	out    dx,eax
   140012665:	loope  0x14001262a
   140012667:	(bad)  
   140012668:	out    dx,al
   140012669:	loopne 0x14001262b
   14001266b:	(bad)  
   14001266c:	out    dx,al
   14001266d:	fistp  QWORD PTR [rbp-0x44211201]
   140012673:	(bad)  
   140012674:	in     al,dx
   140012675:	fnstsw WORD PTR [rax-0x4a231301]
   14001267b:	(bad)  
   14001267c:	in     eax,dx
   14001267d:	fnsave [rbp-0x1]
   140012683:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012689:	pop    rdi
   14001268a:	or     al,0xff
   14001268c:	(bad)  
   14001268d:	(bad)  
   14001268e:	(bad)  
   14001268f:	(bad)  
   140012690:	in     al,dx
   140012691:	fcmovnbe st,st(0)
   140012693:	(bad)  
   140012694:	fnstcw WORD PTR [rax-0x180e0078]
   14001269a:	(bad)  
   14001269b:	(bad)  
   14001269c:	fadd   st(2),st
   14001269e:	movabs al,ds:0x85bb9cff8cbdb3ff
   1400126a7:	dec    ebx
   1400126a9:	iret   
   1400126aa:	mov    ebx,0xa0c8b7ff
   1400126af:	jmp    FWORD PTR [rdi-0x57006839]
   1400126b5:	(bad)
   1400126b8:	movabs ds:0xf8ffa4c1d2ff82ae,al
   1400126c1:	lock in al,0xff
   1400126c4:	shr    BYTE PTR [rbx-0x22120086],cl
   1400126ca:	retf   0xf4ff
   1400126cd:	jmp    0x1400126a3
   1400126cf:	push   rsp
   1400126d1:	(bad)  
   1400126d2:	sar    edi,cl
   1400126d4:	repz jmp 0x127f426aa
   1400126da:	int    0xff
   1400126dc:	icebp  
   1400126dd:	out    0xcb,al
   1400126df:	push   rcx
   1400126e1:	in     eax,0xc9
   1400126e3:	push   rax
   1400126e5:	jrcxz  0x1400126ae
   1400126e7:	(bad)  
   1400126e8:	out    dx,eax
   1400126e9:	loop   0x1400126af
   1400126eb:	(bad)  
   1400126ec:	out    dx,eax
   1400126ed:	loope  0x1400126b0
   1400126ef:	(bad)  
   1400126f0:	out    dx,al
   1400126f1:	loopne 0x1400126b2
   1400126f3:	(bad)  
   1400126f4:	in     eax,dx
   1400126f5:	fidivr WORD PTR [rbx-0x46221301]
   1400126fb:	(bad)  
   1400126fc:	in     eax,dx
   1400126fd:	fidiv  WORD PTR [rdi-0x1]
   140012703:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012709:	pop    rdi
   14001270a:	or     al,0xff
   14001270c:	(bad)  
   14001270d:	(bad)  
   14001270e:	(bad)  
   14001270f:	(bad)  
   140012710:	jmp    0x1400126ea
   140012712:	int    0xff
   140012714:	fnstcw WORD PTR [rax-0x130b0077]
   14001271a:	(bad)  
   14001271c:	faddp  st(6),st
   14001271e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001271f:	dec    ebp
   140012721:	ret    0xff9d
   140012724:	mov    ah,0xc5
   140012726:	xchg   esp,eax
   140012727:	call   FWORD PTR [rdx+0x7dffafab]
   14001272d:	xchg   esp,eax
   14001272e:	stos   BYTE PTR es:[rdi],al
   14001272f:	call   FWORD PTR [rbp-0x5700744c]
   140012735:	mov    ebx,0xc0c9ff8c
   14001273a:	movabs al,ds:0xe6f1f7ffadcddeff
   140012743:	call   rdx
   140012745:	lods   al,BYTE PTR ds:[rsi]
   140012746:	jnp    0x140012747
   140012748:	in     eax,dx
   140012749:	fmul   st(2),st
   14001274b:	push   rsp
   14001274d:	jmp    0x140012724
   14001274f:	push   rcx
   140012751:	in     eax,0xcb
   140012753:	push   rcx
   140012755:	out    0xcc,al
   140012757:	push   rcx
   140012759:	in     eax,0xca
   14001275b:	push   rax
   14001275d:	in     al,0xc8
   14001275f:	push   rax
   140012761:	jrcxz  0x140012729
   140012763:	(bad)  
   140012764:	out    dx,eax
   140012765:	loop   0x14001272b
   140012767:	(bad)  
   140012768:	out    dx,eax
   140012769:	loope  0x14001272d
   14001276b:	(bad)  
   14001276c:	out    dx,al
   14001276d:	fistp  QWORD PTR [rdi-0x42211201]
   140012773:	(bad)  
   140012774:	in     eax,dx
   140012775:	fidivr WORD PTR [rbp-0x44211201]
   14001277b:	(bad)  
   14001277c:	out    dx,al
   14001277d:	fistp  QWORD PTR [rdx-0x1]
   140012783:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012789:	pop    rdi
   14001278a:	or     al,0xff
   14001278c:	(bad)  
   14001278d:	(bad)  
   14001278e:	(bad)  
   14001278f:	(bad)  
   140012790:	jmp    0x140012769
   140012792:	int3   
   140012793:	(bad)  
   140012794:	fnstcw WORD PTR [rcx-0x130b0075]
   14001279a:	(bad)  
   14001279c:	(bad)  
   14001279e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001279f:	(bad)  
   1400127a0:	ffreep st(7)
   1400127a2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400127a3:	dec    esp
   1400127a5:	shl    DWORD PTR [rcx-0x566a8a01],0xff
   1400127ac:	push   rdi
   1400127ad:	js     0x14001274c
   1400127af:	jmp    QWORD PTR [rdx-0x2b006a5a]
   1400127b5:	(bad)  
   1400127b6:	movabs ds:0xabccdcffa6c7d5ff,eax
   1400127bf:	(bad)  
   1400127c0:	clc    
   1400127c1:	icebp  
   1400127c2:	out    0xff,eax
   1400127c4:	shr    DWORD PTR [rbp-0x22120084],cl
   1400127ca:	retf   
   1400127cb:	(bad)  
   1400127cc:	out    dx,eax
   1400127cd:	loop   0x14001279f
   1400127cf:	(bad)  
   1400127d0:	fdivr  QWORD PTR [rsi-0x41230074]
   1400127d6:	mov    edi,?
   1400127d8:	fdivr  QWORD PTR [rsi-0x41230074]
   1400127de:	mov    edi,?
   1400127e0:	fdivr  QWORD PTR [rsi-0x41230074]
   1400127e6:	mov    edi,?
   1400127e8:	fdivr  QWORD PTR [rsi-0x41230074]
   1400127ee:	mov    edi,?
   1400127f0:	fdivr  QWORD PTR [rsi-0x41230074]
   1400127f6:	mov    edi,?
   1400127f8:	in     al,dx
   1400127f9:	fstp   TBYTE PTR [rcx-0x401d0f01]
   1400127ff:	(bad)  
   140012800:	(bad)  
   140012801:	(bad)  
   140012802:	(bad)  
   140012803:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012809:	pop    rdi
   14001280a:	or     al,0xff
   14001280c:	(bad)  
   14001280d:	(bad)  
   14001280e:	(bad)  
   14001280f:	(bad)  
   140012810:	jmp    0x1400127e9
   140012812:	int    0xff
   140012814:	fnstcw WORD PTR [rcx-0x120b0075]
   14001281a:	loopne 0x14001281b
   14001281c:	loopne 0x1400127e9
   14001281e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001281f:	jmp    rcx
   140012821:	leave  
   140012822:	movabs ds:0xcdab85ffb9bcb6ff,al
   14001282b:	jmp    FWORD PTR [rdi-0x6c]
   14001282e:	mov    ch,0xff
   140012830:	cdq    
   140012831:	xchg   edi,eax
   140012832:	mov    edi,?
   140012834:	fmulp  st(4),st
   140012836:	test   al,0xff
   140012838:	(bad)  
   140012839:	(bad)  
   14001283a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001283b:	(bad)  
   14001283c:	fmulp  st(6),st
   14001283e:	lods   al,BYTE PTR ds:[rsi]
   14001283f:	(bad)  
   140012840:	clc    
   140012841:	bnd call 0x1bcaefc46
   140012847:	(bad)  
   140012848:	in     eax,dx
   140012849:	fmul   st(2),st
   14001284b:	push   rbp
   14001284d:	in     al,dx
   14001284e:	fcos   
   140012850:	repnz out 0xce,al
   140012853:	push   rcx
   140012855:	in     eax,0xca
   140012857:	push   rcx
   140012859:	in     al,0xca
   14001285b:	push   rcx
   14001285d:	jrcxz  0x140012828
   14001285f:	push   rax
   140012861:	loop   0x14001282a
   140012863:	(bad)  
   140012864:	out    dx,eax
   140012865:	loop   0x14001282c
   140012867:	(bad)  
   140012868:	out    dx,eax
   140012869:	loope  0x14001282f
   14001286b:	(bad)  
   14001286c:	out    dx,al
   14001286d:	loopne 0x140012831
   14001286f:	(bad)  
   140012870:	out    dx,al
   140012871:	ffreep st(1)
   140012873:	(bad)  
   140012874:	out    dx,al
   140012875:	ffreep st(0)
   140012877:	(bad)  
   140012878:	out    dx,al
   140012879:	fistp  QWORD PTR [rdi-0x3f1d0f01]
   14001287f:	(bad)  
   140012880:	(bad)  
   140012881:	(bad)  
   140012882:	(bad)  
   140012883:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012889:	pop    rdi
   14001288a:	or     al,0xff
   14001288c:	(bad)  
   14001288d:	(bad)  
   14001288e:	(bad)  
   14001288f:	(bad)  
   140012890:	jmp    0x14001286a
   140012892:	(bad)  
   140012893:	(bad)  
   140012894:	fnstcw WORD PTR [rcx-0x120a0075]
   14001289a:	loope  0x14001289b
   14001289c:	loop   0x14001286b
   14001289e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001289f:	(bad)  
   1400128a0:	(bad)  
   1400128a2:	movabs ds:0xe7d1b9ffcecec7ff,al
   1400128ab:	call   QWORD PTR [rbx+0x61ffd4b6]
   1400128b1:	jp     0x140012842
   1400128b3:	(bad)  
   1400128b4:	mov    ebx,0xdbff91ad
   1400128b9:	(bad)  
   1400128ba:	stos   BYTE PTR es:[rdi],al
   1400128bb:	(bad)  
   1400128bc:	(bad)  
   1400128be:	lods   eax,DWORD PTR ds:[rsi]
   1400128bf:	(bad)  
   1400128c0:	clc    
   1400128c1:	bnd jmp 0x1bdaefcc6
   1400128c7:	(bad)  
   1400128c8:	out    dx,al
   1400128c9:	fmulp  st(6),st
   1400128cb:	push   rbx
   1400128cd:	jmp    0xfcdd28ab
   1400128d2:	(bad)  
   1400128d3:	(bad)  
   1400128d4:	fstp   TBYTE PTR [rdi+rcx*4-0x70432401]
   1400128db:	(bad)  
   1400128dc:	fstp   TBYTE PTR [rdi+rcx*4-0x70432401]
   1400128e3:	(bad)  
   1400128e4:	fstp   TBYTE PTR [rdi+rcx*4-0x70432401]
   1400128eb:	(bad)  
   1400128ec:	fstp   TBYTE PTR [rdi+rcx*4-0x70432401]
   1400128f3:	(bad)  
   1400128f4:	fstp   TBYTE PTR [rdi+rcx*4-0x40211201]
   1400128fb:	push   rcx
   1400128fd:	in     al,0xc5
   1400128ff:	(bad)  
   140012900:	(bad)  
   140012901:	(bad)  
   140012902:	(bad)  
   140012903:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012909:	pop    rdi
   14001290a:	or     al,0xff
   14001290c:	(bad)  
   14001290d:	(bad)  
   14001290e:	(bad)  
   14001290f:	(bad)  
   140012910:	jmp    0x1400128eb
   140012912:	iret   
   140012913:	(bad)  
   140012914:	fnstcw WORD PTR [rax-0xe080076]
   14001291a:	out    0xff,eax
   14001291c:	jrcxz  0x1400128ed
   14001291e:	test   al,0xff
   140012920:	loope  0x1400128ec
   140012922:	movabs ds:0xebd6bfffcdd1ceff,al
   14001292b:	call   QWORD PTR [rdx+0x5bffc9b0]
   140012931:	ins    BYTE PTR es:[rdi],dx
   140012932:	jle    0x140012933
   140012934:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012935:	fwait
   140012936:	xchg   bh,bh
   140012938:	(bad)  
   14001293a:	lods   al,BYTE PTR ds:[rsi]
   14001293b:	jmp    rax
   14001293d:	shr    BYTE PTR [rsi-0x170e0701],1
   140012943:	call   rbx
   140012945:	scas   al,BYTE PTR es:[rdi]
   140012946:	jge    0x140012947
   140012948:	out    dx,eax
   140012949:	loopne 0x14001291c
   14001294b:	push   rbp
   14001294d:	in     eax,dx
   14001294e:	fdiv   st(7),st
   140012950:	(bad)  
   140012951:	mov    bl,0x86
   140012953:	(bad)  
   140012954:	mov    ecx,0xd8ff2f7e
   140012959:	mov    dl,0x7b
   14001295b:	(bad)  
   14001295c:	in     eax,dx
   14001295d:	fadd   st(4),st
   14001295f:	(bad)  
   140012960:	in     al,dx
   140012961:	fadd   st(2),st
   140012963:	(bad)  
   140012964:	in     al,dx
   140012965:	fadd   st(1),st
   140012967:	(bad)  
   140012968:	in     al,dx
   140012969:	fcmovb st,st(0)
   14001296b:	(bad)  
   14001296c:	jmp    0x140012948
   14001296e:	mov    esi,0xbed9ebff
   140012973:	(bad)  
   140012974:	jmp    0x14001294e
   140012976:	mov    ebp,0xc3e0eeff
   14001297b:	push   rdx
   14001297d:	in     eax,0xc6
   14001297f:	(bad)  
   140012980:	(bad)  
   140012981:	(bad)  
   140012982:	(bad)  
   140012983:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012989:	pop    rdi
   14001298a:	or     al,0xff
   14001298c:	(bad)  
   14001298d:	(bad)  
   14001298e:	(bad)  
   14001298f:	(bad)  
   140012990:	in     eax,dx
   140012991:	fcmovnbe st,st(3)
   140012993:	(bad)  
   140012994:	fnstcw WORD PTR [rax-0xe080077]
   14001299a:	out    0xff,al
   14001299c:	out    0xd1,al
   14001299e:	test   al,0xff
   1400129a0:	jrcxz  0x140012970
   1400129a2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400129a3:	call   FWORD PTR [rbx+0x7bff959a]
   1400129a9:	test   DWORD PTR [rax-0x7f848701],edx
   1400129af:	(bad)  
   1400129b0:	jle    0x140012a2e
   1400129b2:	js     0x1400129b3
   1400129b4:	retf   0x9fbe
   1400129b7:	(bad)  
   1400129b8:	fmul   st(6),st
   1400129ba:	test   eax,0xaed2e2ff
   1400129bf:	push   rdi
   1400129c1:	icebp  
   1400129c2:	in     eax,0xff
   1400129c4:	shr    DWORD PTR [rbp-0x1c0f0083],cl
   1400129ca:	(bad)  
   1400129cb:	(bad)  
   1400129cc:	fstp   TBYTE PTR [rbp+0x7eb9ff94]
   1400129d2:	(bad)  
   1400129d3:	(bad)  
   1400129d4:	in     eax,dx
   1400129d5:	mov    edi,0x7ab5ff6d
   1400129da:	sub    bh,bh
   1400129dc:	loop   0x1400129a7
   1400129de:	pushf  
   1400129df:	jmp    rdx
   1400129e1:	leave  
   1400129e2:	pushf  
   1400129e3:	jmp    rdx
   1400129e5:	leave  
   1400129e6:	pushf  
   1400129e7:	jmp    rdx
   1400129e9:	leave  
   1400129ea:	pushf  
   1400129eb:	jmp    rdx
   1400129ed:	leave  
   1400129ee:	pushf  
   1400129ef:	jmp    rdx
   1400129f1:	leave  
   1400129f2:	pushf  
   1400129f3:	jmp    rdx
   1400129f5:	leave  
   1400129f6:	pushf  
   1400129f7:	(bad)  
   1400129f8:	out    dx,eax
   1400129f9:	loop   0x1400129c0
   1400129fb:	push   rdx
   1400129fd:	out    0xc9,al
   1400129ff:	(bad)  
   140012a00:	(bad)  
   140012a01:	(bad)  
   140012a02:	(bad)  
   140012a03:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012a09:	pop    rdi
   140012a0a:	or     al,0xff
   140012a0c:	(bad)  
   140012a0d:	(bad)  
   140012a0e:	(bad)  
   140012a0f:	(bad)  
   140012a10:	out    dx,eax
   140012a11:	loopne 0x1400129ed
   140012a13:	(bad)  
   140012a14:	fdiv   DWORD PTR [rdi-0xe080078]
   140012a1a:	in     eax,0xff
   140012a1c:	out    0xd2,al
   140012a1e:	test   eax,0xa8d0e4ff
   140012a23:	call   rbp
   140012a25:	(bad)  
   140012a26:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012a27:	(bad)  
   140012a28:	mov    ecx,0xbcff9aaf
   140012a2d:	mov    dl,0x9b
   140012a2f:	(bad)  
   140012a30:	(bad)  
   140012a32:	stos   BYTE PTR es:[rdi],al
   140012a33:	jmp    rax
   140012a35:	shr    DWORD PTR [rbx-0x57332601],1
   140012a3b:	jmp    rdx
   140012a3d:	shr    BYTE PTR [rbp-0x21140b01],cl
   140012a43:	call   rsp
   140012a45:	scas   al,BYTE PTR es:[rdi]
   140012a46:	jle    0x140012a47
   140012a48:	fdivr  DWORD PTR [rax+0x7eb9ff92]
   140012a4e:	(bad)  
   140012a4f:	jmp    rdi
   140012a51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012a52:	(bad)  
   140012a53:	(bad)  
   140012a54:	out    dx,eax
   140012a55:	ret    0xff71
   140012a58:	mov    ch,0x7a
   140012a5a:	sub    bh,bh
   140012a5c:	repz call 0x128f52a30
   140012a62:	int    0xff
   140012a64:	repnz out 0xcb,eax
   140012a67:	push   rdx
   140012a69:	out    0xca,al
   140012a6b:	push   rcx
   140012a6d:	in     eax,0xc7
   140012a6f:	push   rcx
   140012a71:	in     al,0xc6
   140012a73:	push   rcx
   140012a75:	in     al,0xc6
   140012a77:	push   rcx
   140012a79:	in     al,0xc4
   140012a7b:	push   rcx
   140012a7d:	in     eax,0xc4
   140012a7f:	(bad)  
   140012a80:	(bad)  
   140012a81:	(bad)  
   140012a82:	(bad)  
   140012a83:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012a89:	pop    rdi
   140012a8a:	or     al,0xff
   140012a8c:	(bad)  
   140012a8d:	(bad)  
   140012a8e:	(bad)  
   140012a8f:	push   rbp
   140012a91:	jmp    0x140012a7c
   140012a93:	jmp    rax
   140012a95:	(bad)  
   140012a99:	hlt    
   140012a9a:	jmp    0x140012a9b
   140012a9c:	cli    
   140012a9d:	imul   dh
   140012a9f:	(bad)  
   140012aa0:	stc    
   140012aa1:	cmc    
   140012aa2:	in     eax,dx
   140012aa3:	(bad)  
   140012aa4:	stc    
   140012aa5:	repz jmp 0x124f323aa
   140012aab:	push   rdi
   140012aad:	in     eax,dx
   140012aae:	(bad)  
   140012ab0:	cmc    
   140012ab1:	in     eax,dx
   140012ab2:	(bad)  
   140012ab4:	repnz (bad) 
   140012ab6:	fdiv   st(7),st
   140012ab8:	repz in al,dx
   140012aba:	fdivp  st(7),st
   140012abc:	cmc    
   140012abd:	in     eax,dx
   140012abe:	fdivp  st(7),st
   140012ac0:	in     eax,dx
   140012ac1:	(bad)  
   140012ac3:	inc    esi
   140012ac5:	cwde   
   140012ac6:	pop    rsp
   140012ac7:	(bad)  
   140012ac8:	mov    ecx,0xf8ff2f7e
   140012acd:	mov    dl,0x26
   140012acf:	(bad)  
   140012ad0:	clc    
   140012ad1:	scas   al,BYTE PTR es:[rdi]
   140012ad2:	sbb    bh,bh
   140012ad4:	repz enter 0xff79,0xb5
   140012ad9:	jp     0x140012b05
   140012adb:	(bad)  
   140012adc:	(bad)  
   140012add:	cld    
   140012ade:	lock (bad) 
   140012ae0:	(bad)  
   140012ae1:	cli    
   140012ae2:	in     eax,dx
   140012ae3:	(bad)  
   140012ae4:	std    
   140012ae5:	stc    
   140012ae6:	jmp    0x140012ae7
   140012ae8:	std    
   140012ae9:	clc    
   140012aea:	jmp    0x126f927ee
   140012aef:	(bad)  
   140012af0:	cld    
   140012af1:	mul    ah
   140012af3:	(bad)  
   140012af4:	sti    
   140012af5:	cmc    
   140012af6:	loop   0x140012af7
   140012af8:	cli    
   140012af9:	repz (bad) 
   140012afc:	sti    
   140012afd:	cmc    
   140012afe:	loopne 0x140012aff
   140012b00:	(bad)  
   140012b01:	(bad)  
   140012b02:	(bad)  
   140012b03:	call   QWORD PTR [rcx-0x6e00f3a1]
   140012b09:	pop    rdi
   140012b0a:	or     al,0xff
   140012b0c:	(bad)  
   140012b0d:	(bad)  
   140012b0e:	(bad)  
   140012b0f:	(bad)  
   140012b10:	cld    
   140012b11:	stc    
   140012b12:	cli    
   140012b13:	(bad)  
   140012b14:	jmp    0x11a00f1ef
   140012b19:	mov    bh,0x86
   140012b1b:	(bad)  
   140012b1c:	fidivr DWORD PTR [rdx-0x44240075]
   140012b22:	(bad)  
   140012b23:	(bad)  
   140012b24:	fstp   TBYTE PTR [rdi+rcx*4-0x6c412301]
   140012b2b:	(bad)  
   140012b2c:	fdivr  QWORD PTR [rsi-0x4324006c]
   140012b32:	xchg   ecx,eax
   140012b33:	(bad)  
   140012b34:	fidivr DWORD PTR [rbx-0x44250072]
   140012b3a:	mov    ?,edi
   140012b3c:	fnstcw WORD PTR [rcx-0x67380076]
   140012b42:	pop    rbx
   140012b43:	(bad)  
   140012b44:	mov    ecx,0xfcff2f7e
   140012b49:	mov    ah,0x1b
   140012b4b:	(bad)  
   140012b4c:	sti    
   140012b4d:	mov    dl,0x1a
   140012b4f:	push   rsi
   140012b51:	scas   al,BYTE PTR es:[rdi]
   140012b52:	sbb    al,0xff
   140012b54:	test   ah,0x7b
   140012b57:	push   QWORD PTR [rbp-0x4a00d586]
   140012b5d:	jp     0x140012b89
   140012b5f:	push   QWORD PTR [rbp-0x4a00d586]
   140012b65:	jp     0x140012b91
   140012b67:	push   QWORD PTR [rbp-0x4a00d586]
   140012b6d:	jp     0x140012b99
   140012b6f:	push   QWORD PTR [rbp-0x4a00d586]
   140012b75:	jp     0x140012ba1
   140012b77:	push   QWORD PTR [rbp-0x4a00d586]
   140012b7d:	jp     0x140012ba9
   140012b7f:	push   QWORD PTR [rbp-0x5100d586]
   140012b85:	jns    0x140012baf
   140012b87:	call   QWORD PTR [rcx-0xf3a1]
   140012b8d:	(bad)  
   140012b8e:	(bad)  
   140012b8f:	(bad)  
   140012b90:	(bad)  
   140012b91:	(bad)  
   140012b92:	(bad)  
   140012b93:	(bad)  
   140012b94:	sti    
   140012b95:	clc    
   140012b96:	clc    
   140012b97:	push   rbx
   140012b99:	out    0xe3,eax
   140012b9b:	(bad)  
   140012b9c:	in     eax,dx
   140012b9d:	(bad)  
   140012b9f:	(bad)  
   140012ba0:	(bad)  
   140012ba1:	fmul   st,st(4)
   140012ba3:	(bad)  
   140012ba4:	jmp    0x12800f57e
   140012ba9:	rol    edx,1
   140012bab:	jmp    rdi
   140012bad:	sar    BYTE PTR [rdi-0x3d2e1701],1
   140012bb3:	(bad)  
   140012bb4:	call   0x12b00f28c
   140012bb9:	(bad)  
   140012bba:	enter  0xd4ff,0xb0
   140012bbe:	mov    edi,edi
   140012bc0:	mov    bl,0x76
   140012bc2:	(bad)  
   140012bc3:	(bad)  
   140012bc4:	std    
   140012bc5:	sar    BYTE PTR [rdi+rdi*8],0xfb
   140012bc9:	mov    bh,0x2b
   140012bcb:	(bad)  
   140012bcc:	stc    
   140012bcd:	mov    dl,0x1e
   140012bcf:	(bad)  
   140012bd0:	stc    
   140012bd1:	mov    al,0x1a
   140012bd3:	(bad)  
   140012bd4:	clc    
   140012bd5:	iret   
   140012bd6:	jge    0x140012bd7
   140012bd8:	test   bl,0x7b
   140012bdb:	push   rbx
   140012bdd:	retf   0xff7a
   140012be0:	icebp  
   140012be1:	enter  0xff7c,0xee
   140012be5:	ret    0xff7b
   140012be8:	(bad)  
   140012be9:	mov    edi,0xbae7ff78
   140012bee:	jbe    0x140012bef
   140012bf0:	in     al,0xb7
   140012bf2:	je     0x140012bf3
   140012bf4:	loope  0x140012ba9
   140012bf6:	je     0x140012bf7
   140012bf8:	fisubr WORD PTR [rdi-0x5324008c]
   140012bfe:	je     0x140012bff
   140012c00:	fldcw  WORD PTR [rcx+0x7ab5ff74]
   140012c06:	sub    bh,bh
   140012c08:	xchg   ecx,eax
   140012c09:	pop    rdi
   140012c0a:	or     al,0xff
   140012c0c:	(bad)  
   140012c0d:	(bad)  
   140012c0e:	(bad)  
   140012c0f:	(bad)  
   140012c10:	(bad)  
   140012c11:	(bad)  
   140012c12:	(bad)  
   140012c13:	(bad)  
   140012c14:	(bad)  
   140012c15:	(bad)  
   140012c16:	(bad)  
   140012c17:	(bad)  
   140012c18:	(bad)  
   140012c19:	(bad)  
   140012c1a:	(bad)  
   140012c1b:	(bad)  
   140012c1c:	(bad)  
   140012c1d:	(bad)  
   140012c1e:	(bad)  
   140012c1f:	(bad)  
   140012c20:	(bad)  
   140012c21:	(bad)  
   140012c22:	(bad)  
   140012c23:	(bad)  
   140012c24:	(bad)  
   140012c25:	std    
   140012c26:	(bad)  
   140012c27:	(bad)  
   140012c28:	(bad)  
   140012c29:	cld    
   140012c2a:	std    
   140012c2b:	(bad)  
   140012c2c:	(bad)  
   140012c2d:	cld    
   140012c2e:	cld    
   140012c2f:	(bad)  
   140012c30:	std    
   140012c31:	sti    
   140012c32:	cli    
   140012c33:	(bad)  
   140012c34:	std    
   140012c35:	sti    
   140012c36:	stc    
   140012c37:	(bad)  
   140012c38:	faddp  st(3),st
   140012c3a:	movabs eax,ds:0x3cb9f5ff2776b3ff
   140012c43:	push   rdi
   140012c45:	mov    esp,0xbefaff3f
   140012c4a:	rex.B (bad) 
   140012c4c:	sti    
   140012c4d:	mov    esp,0xb7fbff3a
   140012c52:	sub    edi,edi
   140012c54:	imul   BYTE PTR [rbp-0x550d00e7]
   140012c5a:	sbb    bh,bh
   140012c5c:	out    dx,al
   140012c5d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012c5e:	(bad)  
   140012c5f:	(bad)  
   140012c60:	jmp    0x124004002
   140012c65:	xchg   esi,eax
   140012c66:	ud0    ebx,ebp
   140012c69:	(bad)  
   140012c6a:	or     edi,edi
   140012c6c:	xlat   BYTE PTR ds:[rbx]
   140012c6d:	xchg   DWORD PTR [rdi],eax
   140012c6f:	call   rax
   140012c71:	jg     0x140012c75
   140012c73:	dec    edx
   140012c75:	ja     0x140012c77
   140012c77:	inc    esp
   140012c79:	jo     0x140012c7b
   140012c7b:	(bad)  
   140012c7c:	mov    esi,0xd7ff0069
   140012c81:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012c82:	outs   dx,BYTE PTR ds:[rsi]
   140012c83:	push   QWORD PTR [rbp-0x6e00d586]
   140012c89:	pop    rdi
   140012c8a:	or     al,0xff
   140012c8c:	(bad)  
   140012c8d:	(bad)  
   140012c8e:	(bad)  
   140012c8f:	(bad)  
   140012c90:	(bad)  
   140012c91:	(bad)  
   140012c92:	(bad)  
   140012c93:	(bad)  
   140012c94:	(bad)  
   140012c95:	(bad)  
   140012c96:	(bad)  
   140012c97:	(bad)  
   140012c98:	(bad)  
   140012c99:	(bad)  
   140012c9a:	(bad)  
   140012c9b:	(bad)  
   140012c9c:	(bad)  
   140012c9d:	(bad)  
   140012c9e:	(bad)  
   140012c9f:	(bad)  
   140012ca0:	(bad)  
   140012ca1:	(bad)  
   140012ca2:	(bad)  
   140012ca3:	(bad)  
   140012ca4:	(bad)  
   140012ca5:	(bad)  
   140012ca6:	(bad)  
   140012ca7:	(bad)  
   140012ca8:	(bad)  
   140012ca9:	(bad)  
   140012caa:	(bad)  
   140012cab:	(bad)  
   140012cac:	(bad)  
   140012cad:	(bad)  
   140012cae:	(bad)  
   140012caf:	(bad)  
   140012cb0:	(bad)  
   140012cb1:	(bad)  
   140012cb2:	(bad)  
   140012cb3:	(bad)  
   140012cb4:	ffreep st(6)
   140012cb6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012cb7:	push   QWORD PTR [rbx-0x1200d88a]
   140012cbd:	mov    al,0x37
   140012cbf:	(bad)  
   140012cc0:	out    dx,al
   140012cc1:	mov    cl,0x39
   140012cc3:	push   rbx
   140012cc5:	mov    ch,0x3b
   140012cc7:	push   rdi
   140012cc9:	mov    ebx,0xbdfaff3d
   140012cce:	rex.X (bad) 
   140012cd0:	sti    
   140012cd1:	rol    BYTE PTR [rdi+rdi*8-0x7],0xb6
   140012cd6:	sub    edi,edi
   140012cd8:	imul   BYTE PTR [rsi-0x570e00e3]
   140012cde:	(bad)  
   140012cdf:	(bad)  
   140012ce0:	in     eax,dx
   140012ce1:	movabs ds:0x96e3ff119de9ff14,al
   140012cea:	ud0    ebx,ebp
   140012ced:	mov    cs,WORD PTR [rbx]
   140012cef:	call   rdi
   140012cf1:	xchg   BYTE PTR [rsi],al
   140012cf3:	call   rcx
   140012cf5:	jg     0x140012cf8
   140012cf7:	dec    ebx
   140012cf9:	ja     0x140012cfb
   140012cfb:	inc    ebp
   140012cfd:	jo     0x140012cff
   140012cff:	(bad)  
   140012d00:	fisubr DWORD PTR [rdx+0x7ab5ff6e]
   140012d06:	sub    bh,bh
   140012d08:	xchg   ecx,eax
   140012d09:	pop    rdi
   140012d0a:	or     al,0x66
   140012d0c:	xchg   ecx,eax
   140012d0d:	pop    rdi
   140012d0e:	or     al,0xff
   140012d10:	xchg   ecx,eax
   140012d11:	pop    rdi
   140012d12:	or     al,0xff
   140012d14:	xchg   ecx,eax
   140012d15:	pop    rdi
   140012d16:	or     al,0xff
   140012d18:	xchg   ecx,eax
   140012d19:	pop    rdi
   140012d1a:	or     al,0xff
   140012d1c:	xchg   ecx,eax
   140012d1d:	pop    rdi
   140012d1e:	or     al,0xff
   140012d20:	xchg   ecx,eax
   140012d21:	pop    rdi
   140012d22:	or     al,0xff
   140012d24:	xchg   ecx,eax
   140012d25:	pop    rdi
   140012d26:	or     al,0xff
   140012d28:	xchg   ecx,eax
   140012d29:	pop    rdi
   140012d2a:	or     al,0xff
   140012d2c:	xchg   ecx,eax
   140012d2d:	pop    rdi
   140012d2e:	or     al,0xff
   140012d30:	xchg   ecx,eax
   140012d31:	pop    rdi
   140012d32:	or     al,0xff
   140012d34:	sahf   
   140012d35:	adc    ax,0xa5ff
   140012d39:	data16 (bad) 
   140012d3b:	(bad)  
   140012d3c:	fisub  WORD PTR [rax-0x591b00d0]
   140012d42:	xor    bh,bh
   140012d44:	(bad)  
   140012d45:	lods   al,BYTE PTR ds:[rsi]
   140012d46:	(bad)  
   140012d47:	push   rax
   140012d49:	mov    bl,0x39
   140012d4b:	push   rsp
   140012d4d:	mov    eax,0xbbf8ff3b
   140012d52:	ds (bad) 
   140012d54:	sti    
   140012d55:	mov    edi,0xc0fbff41
   140012d5a:	rex.XB (bad) 
   140012d5c:	sti    
   140012d5d:	mov    esi,0xbbf8ff42
   140012d62:	cmp    eax,0x33b3f4ff
   140012d67:	(bad)  
   140012d68:	out    dx,eax
   140012d69:	test   al,0x23
   140012d6b:	jmp    rdi
   140012d6d:	popf   
   140012d6e:	(bad)  
   140012d6f:	jmp    rcx
   140012d71:	xchg   esp,eax
   140012d72:	or     eax,0x68bdbff
   140012d77:	call   rsp
   140012d79:	test   BYTE PTR [rbx],al
   140012d7b:	dec    esi
   140012d7d:	jl     0x140012d7f
   140012d7f:	(bad)  
   140012d80:	fbstp  TBYTE PTR [rcx+0x7ab5ff6e]
   140012d86:	sub    bh,bh
	...
   140012db8:	mov    cl,0x71
   140012dba:	and    ah,BYTE PTR [rdi-0x5b]
   140012dbd:	data16 (bad) 
   140012dbf:	jmp    rax
   140012dc1:	movabs ds:0xadebff32a6e4ff31,al
   140012dca:	(bad)  
   140012dcb:	push   rax
   140012dcd:	mov    bl,0x3a
   140012dcf:	push   rsp
   140012dd1:	mov    eax,0xbefaff3c
   140012dd6:	rex (bad) 
   140012dd8:	sti    
   140012dd9:	mov    edi,0xbefbff41
   140012dde:	rex.B (bad) 
   140012de0:	cli    
   140012de1:	mov    esi,0xbbf8ff41
   140012de6:	(bad)  
   140012de7:	push   rbp
   140012de9:	mov    bh,0x3d
   140012deb:	push   rax
   140012ded:	mov    al,0x38
   140012def:	(bad)  
   140012df0:	jmp    0x140012d99
   140012df2:	(bad)  
   140012df3:	jmp    rbx
   140012df5:	popf   
   140012df6:	and    bh,bh
   140012df8:	fst    QWORD PTR [rdx-0x792b00eb]
   140012dfe:	(bad)  
   140012dff:	jmp    rbx
   140012e01:	mov    ah,0x6f
   140012e03:	push   QWORD PTR [rbp+0xff2a7a]
	...
   140012e39:	add    BYTE PTR [rax],al
   140012e3b:	add    BYTE PTR [rcx-0x5a98dd8f],dh
   140012e41:	data16 (bad) 
   140012e43:	jmp    rdx
   140012e45:	movabs ds:0xaeebff33a7e5ff31,eax
   140012e4e:	cmp    bh,bh
   140012e50:	icebp  
   140012e51:	mov    ah,0x3a
   140012e53:	(bad)  
   140012e54:	stc    
   140012e55:	mov    esp,0xbffbff3f
   140012e5a:	rex.B (bad) 
   140012e5c:	sti    
   140012e5d:	rol    BYTE PTR [rcx-0x1],0xfb
   140012e61:	mov    edi,0xbdfaff41
   140012e66:	rex (bad) 
   140012e68:	stc    
   140012e69:	mov    edx,0xb7f5ff3e
   140012e6e:	cmp    al,0xff
   140012e70:	icebp  
   140012e71:	mov    dl,0x3b
   140012e73:	(bad)  
   140012e74:	in     eax,dx
   140012e75:	lods   eax,DWORD PTR ds:[rsi]
   140012e76:	cmp    edi,edi
   140012e78:	out    0xa6,eax
   140012e7a:	xor    al,0xff
   140012e7c:	loope  0x140012e1b
   140012e7e:	sub    edi,edi
   140012e80:	in     al,0xb1
   140012e82:	(bad)  
   140012e83:	push   QWORD PTR [rbp+0xff2a7a]
	...
   140012ebd:	add    BYTE PTR [rax],al
   140012ebf:	add    BYTE PTR [rcx-0x5a98dd8f],dh
   140012ec5:	data16 (bad) 
   140012ec7:	jmp    rdx
   140012ec9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012eca:	xor    bh,bh
   140012ecc:	out    0xa8,eax
   140012ece:	xor    eax,0x38aeecff
   140012ed3:	push   rsi
   140012ed5:	mov    ecx,0x76b2ff3c
   140012eda:	push   QWORD PTR es:[rdx-0x4d00d98a]
   140012ee1:	jbe    0x140012f09
   140012ee3:	push   QWORD PTR [rdx-0x4d00d98a]
   140012ee9:	jbe    0x140012f11
   140012eeb:	push   QWORD PTR [rdx-0x4d00d98a]
   140012ef1:	jbe    0x140012f19
   140012ef3:	push   QWORD PTR [rdx-0x4d00d98a]
   140012ef9:	jbe    0x140012f21
   140012efb:	push   QWORD PTR [rdx-0x4d00d98a]
   140012f01:	jbe    0x140012f29
   140012f03:	inc    esi
   140012f05:	mov    ?,WORD PTR [rdi]
   140012f07:	mov    WORD PTR [rax],es
	...
   140012f41:	add    BYTE PTR [rax],al
   140012f43:	add    BYTE PTR [rcx-0x5a98dd8f],dh
   140012f49:	data16 (bad) 
   140012f4b:	jmp    rdx
   140012f4d:	movabs ds:0xb4f1ff34a9e7ff31,eax
   140012f56:	cmp    bh,bh
   140012f58:	scas   eax,DWORD PTR es:[rdi]
   140012f59:	jno    0x140012f7c
   140012f5b:	inc    DWORD PTR [rax]
	...
   140012fc5:	add    BYTE PTR [rax],al
   140012fc7:	add    BYTE PTR [rcx-0x5a98dd8f],dh
   140012fcd:	data16 (bad) 
   140012fcf:	jmp    rbx
   140012fd1:	movabs ds:0x71afff38afedfc31,eax
   140012fda:	and    edi,edi
	...
   14001304c:	mov    cl,0x71
   14001304e:	and    ah,BYTE PTR [rdi-0x5b]
   140013051:	data16 (bad) 
   140013053:	(bad)  
   140013054:	(bad)  
   140013055:	lods   eax,DWORD PTR ds:[rsi]
   140013056:	(bad)  
   140013057:	jmp    FWORD PTR [rdi+0xff2171]
	...
   1400130cd:	add    BYTE PTR [rax],al
   1400130cf:	add    BYTE PTR [rcx-0x5a98dd8f],dh
   1400130d5:	data16 (bad) 
   1400130d7:	(bad)  
   1400130d8:	mov    ecx,0x8c2d7c
	...
   140013105:	add    BYTE PTR [rax],al
   140013107:	add    bh,bh
   140013109:	(bad)  
   14001310a:	(bad)  
   14001310b:	(bad)  
   14001310c:	(bad)  
   14001310d:	(bad)  
   14001310e:	(bad)  
   14001310f:	inc    DWORD PTR [rax]
	...
   140013169:	add    BYTE PTR [rax],al
   14001316b:	add    bh,bh
   14001316d:	lock add BYTE PTR [rax],al
   140013170:	(bad)  
   140013171:	clc    
   140013172:	add    BYTE PTR [rax],al
   140013174:	(bad)  
   140013175:	cld    
   140013176:	add    BYTE PTR [rax],al
   140013178:	(bad)  
   140013179:	inc    BYTE PTR [rdi]
   14001317b:	(bad)  
   14001317c:	(bad)  
   14001317d:	inc    DWORD PTR [rdi]
   14001317f:	(bad)  
   140013180:	(bad)  
   140013181:	inc    DWORD PTR [rdi-0x38000001]
   140013187:	jmp    FWORD PTR [rax]
   140013189:	add    BYTE PTR [rax],al
   14001318b:	add    BYTE PTR [rax],bl
   14001318d:	add    BYTE PTR [rax],al
   14001318f:	add    BYTE PTR [rax],dh
   140013191:	add    BYTE PTR [rax],al
   140013193:	add    BYTE PTR [rcx],al
   140013195:	add    BYTE PTR [rax],ah
   140013197:	add    BYTE PTR [rax],al
   140013199:	add    BYTE PTR [rax],al
   14001319b:	add    BYTE PTR [rax+0x9],ah
	...
   140013272:	add    BYTE PTR [rax],al
   140013274:	xchg   ecx,eax
   140013275:	pop    rdi
   140013276:	or     al,0x8d
   140013278:	xchg   ecx,eax
   140013279:	pop    rdi
   14001327a:	or     al,0xff
   14001327c:	xchg   ecx,eax
   14001327d:	pop    rdi
   14001327e:	or     al,0xff
   140013280:	xchg   ecx,eax
   140013281:	pop    rdi
   140013282:	or     al,0xff
   140013284:	xchg   ecx,eax
   140013285:	pop    rdi
   140013286:	or     al,0xff
   140013288:	xchg   ecx,eax
   140013289:	pop    rdi
   14001328a:	or     al,0xff
   14001328c:	xchg   ecx,eax
   14001328d:	pop    rdi
   14001328e:	or     al,0xff
   140013290:	xchg   ecx,eax
   140013291:	pop    rdi
   140013292:	or     al,0xff
   140013294:	xchg   ecx,eax
   140013295:	pop    rdi
   140013296:	or     al,0xff
   140013298:	xchg   ecx,eax
   140013299:	pop    rdi
   14001329a:	or     al,0xff
   14001329c:	xchg   ecx,eax
   14001329d:	pop    rdi
   14001329e:	or     al,0xff
   1400132a0:	xchg   ecx,eax
   1400132a1:	pop    rdi
   1400132a2:	or     al,0xff
   1400132a4:	xchg   ecx,eax
   1400132a5:	pop    rdi
   1400132a6:	or     al,0xff
   1400132a8:	xchg   ecx,eax
   1400132a9:	pop    rdi
   1400132aa:	or     al,0xff
   1400132ac:	xchg   ecx,eax
   1400132ad:	pop    rdi
   1400132ae:	or     al,0xff
   1400132b0:	xchg   ecx,eax
   1400132b1:	pop    rdi
   1400132b2:	or     al,0xff
   1400132b4:	xchg   ecx,eax
   1400132b5:	pop    rdi
   1400132b6:	or     al,0xff
   1400132b8:	xchg   ecx,eax
   1400132b9:	pop    rdi
   1400132ba:	or     al,0xff
   1400132bc:	xchg   ecx,eax
   1400132bd:	pop    rdi
   1400132be:	or     al,0xff
   1400132c0:	xchg   ecx,eax
   1400132c1:	pop    rdi
   1400132c2:	or     al,0xff
   1400132c4:	xchg   ecx,eax
   1400132c5:	pop    rdi
   1400132c6:	or     al,0xff
   1400132c8:	xchg   ecx,eax
   1400132c9:	pop    rdi
   1400132ca:	or     al,0x8d
	...
   1400132d4:	xchg   ecx,eax
   1400132d5:	pop    rdi
   1400132d6:	or     al,0xff
   1400132d8:	(bad)  
   1400132d9:	(bad)  
   1400132da:	(bad)  
   1400132db:	(bad)  
   1400132dc:	(bad)  
   1400132dd:	(bad)  
   1400132de:	cld    
   1400132df:	(bad)  
   1400132e0:	(bad)  
   1400132e1:	(bad)  
   1400132e2:	cli    
   1400132e3:	(bad)  
   1400132e4:	(bad)  
   1400132e5:	(bad)  
   1400132e6:	stc    
   1400132e7:	(bad)  
   1400132e8:	(bad)  
   1400132e9:	std    
   1400132ea:	idiv   edi
   1400132ec:	(bad)  
   1400132ed:	cld    
   1400132ee:	cmc    
   1400132ef:	(bad)  
   1400132f0:	(bad)  
   1400132f1:	sti    
   1400132f2:	repz (bad) 
   1400132f4:	(bad)  
   1400132f5:	cli    
   1400132f6:	repnz (bad) 
   1400132f8:	std    
   1400132f9:	cli    
   1400132fa:	out    dx,eax
   1400132fb:	(bad)  
   1400132fc:	std    
   1400132fd:	stc    
   1400132fe:	out    dx,al
   1400132ff:	(bad)  
   140013300:	cld    
   140013301:	clc    
   140013302:	in     al,dx
   140013303:	(bad)  
   140013304:	sti    
   140013305:	imul   edx
   140013307:	(bad)  
   140013308:	sti    
   140013309:	imul   al
   14001330b:	(bad)  
   14001330c:	cli    
   14001330d:	mul    dh
   14001330f:	(bad)  
   140013310:	cli    
   140013311:	hlt    
   140013312:	in     al,0xff
   140013314:	cli    
   140013315:	hlt    
   140013316:	loop   0x140013317
   140013318:	stc    
   140013319:	repz loope 0x14001331b
   14001331c:	stc    
   14001331d:	repnz (bad) 
   140013320:	clc    
   140013321:	lock fdiv st(7),st
   140013324:	(bad)  
   140013325:	std    
   140013326:	repz call QWORD PTR [rcx+0xff0c5f]
   14001332d:	add    BYTE PTR [rax],al
   14001332f:	add    BYTE PTR [rax],al
   140013331:	add    BYTE PTR [rax],al
   140013333:	add    BYTE PTR [rcx-0xf3a1],dl
   140013339:	(bad)  
   14001333a:	(bad)  
   14001333b:	(bad)  
   14001333c:	clc    
   14001333d:	icebp  
   14001333e:	jrcxz  0x14001333f
   140013340:	div    ecx
   140013342:	loopne 0x140013343
   140013344:	imul   edi
   140013346:	(bad)  
   140013348:	imul   dh
   14001334a:	fcos   
   14001334c:	cmc    
   14001334d:	in     al,dx
   14001334e:	(bad)  
   14001334f:	push   rsp
   140013351:	(bad)  
   140013352:	sar    edi,1
   140013354:	bnd call 0x126f33328
   14001335a:	leave  
   14001335b:	push   rax
   14001335d:	in     al,0xc6
   14001335f:	(bad)  
   140013360:	out    dx,eax
   140013361:	loop   0x140013325
   140013363:	(bad)  
   140013364:	in     eax,dx
   140013365:	loopne 0x140013325
   140013367:	(bad)  
   140013368:	in     eax,dx
   140013369:	fnstsw WORD PTR [rdx-0x49231301]
   14001336f:	(bad)  
   140013370:	jmp    0x14001334c
   140013372:	mov    cl,0xff
   140013374:	(bad)  
   140013375:	fsubr  DWORD PTR [rbp-0x55291601]
   14001337b:	(bad)  
   14001337c:	call   0x12700db56
   140013381:	rcr    BYTE PTR [rdi-0x2e120701],1
   140013387:	call   QWORD PTR [rcx+0xff0c5f]
   14001338d:	add    BYTE PTR [rax],al
   14001338f:	add    BYTE PTR [rax],al
   140013391:	add    BYTE PTR [rax],al
   140013393:	add    BYTE PTR [rcx-0xf3a1],dl
   140013399:	(bad)  
   14001339a:	(bad)  
   14001339b:	(bad)  
   14001339c:	cli    
   14001339d:	imul   bl
   14001339f:	(bad)  
   1400133a0:	stc    
   1400133a1:	cmc    
   1400133a2:	(bad)  
   1400133a3:	push   rdi
   1400133a5:	icebp  
   1400133a6:	in     al,0xff
   1400133a8:	imul   ch
   1400133aa:	(bad)  
   1400133ac:	cmc    
   1400133ad:	jmp    0x14001338c
   1400133af:	push   rsp
   1400133b1:	(bad)  
   1400133b2:	fdivr  st,st(7)
   1400133b4:	hlt    
   1400133b5:	(bad)  
   1400133b6:	(bad)  
   1400133b7:	push   rsp
   1400133b9:	(bad)  
   1400133ba:	(bad)  
   1400133bb:	push   rbx
   1400133bd:	call   0x126f33392
   1400133c2:	retf   0xefff
   1400133c5:	jrcxz  0x14001338e
   1400133c7:	(bad)  
   1400133c8:	out    dx,eax
   1400133c9:	loop   0x14001338e
   1400133cb:	(bad)  
   1400133cc:	out    dx,al
   1400133cd:	fistp  QWORD PTR [rdi-0x44211201]
   1400133d3:	(bad)  
   1400133d4:	in     al,dx
   1400133d5:	fnstsw WORD PTR [rax-0x4b251401]
   1400133db:	(bad)  
   1400133dc:	(bad)  
   1400133dd:	fnstenv [rcx-0x552a1701]
   1400133e3:	(bad)  
   1400133e4:	stc    
   1400133e5:	out    dx,eax
   1400133e6:	xlat   BYTE PTR ds:[rbx]
   1400133e7:	call   QWORD PTR [rcx+0xff0c5f]
   1400133ed:	add    BYTE PTR [rax],al
   1400133ef:	add    BYTE PTR [rax],al
   1400133f1:	add    BYTE PTR [rax],al
   1400133f3:	add    BYTE PTR [rcx-0xf3a1],dl
   1400133f9:	(bad)  
   1400133fa:	(bad)  
   1400133fb:	(bad)  
   1400133fc:	out    dx,al
   1400133fd:	(bad)  
   1400133ff:	(bad)  
   140013400:	fnstcw WORD PTR [rax-0x47260076]
   140013406:	mov    edi,edi
   140013408:	fnstenv [rdi-0x49260078]
   14001340e:	mov    bh,bh
   140013410:	fnstenv [rdi-0x47270078]
   140013416:	mov    edi,edi
   140013418:	fnstcw WORD PTR [rax-0x26140076]
   14001341e:	ret    0xf3ff
   140013421:	call   0x126f333f5
   140013426:	leave  
   140013427:	push   rax
   140013429:	in     al,0xc7
   14001342b:	(bad)  
   14001342c:	out    dx,eax
   14001342d:	loop   0x1400133f2
   14001342f:	(bad)  
   140013430:	out    dx,al
   140013431:	loopne 0x1400133f2
   140013433:	(bad)  
   140013434:	out    dx,al
   140013435:	fistp  QWORD PTR [rdi+rdi*8-0x472214]
   14001343c:	in     al,dx
   14001343d:	(bad)  [rdi+rdi*8-0x522817]
   140013444:	cli    
   140013445:	icebp  
   140013446:	(bad)  
   140013448:	xchg   ecx,eax
   140013449:	pop    rdi
   14001344a:	or     al,0xff
	...
   140013454:	xchg   ecx,eax
   140013455:	pop    rdi
   140013456:	or     al,0xff
   140013458:	(bad)  
   140013459:	sti    
   14001345a:	sti    
   14001345b:	(bad)  
   14001345c:	fdivr  QWORD PTR [rdi-0x24140068]
   140013462:	(bad)  
   140013463:	(bad)  
   140013464:	call   0x12c01044b
   140013469:	out    0xd4,eax
   14001346b:	(bad)  
   14001346c:	out    dx,al
   14001346d:	call   0x128ee3449
   140013472:	xlat   BYTE PTR ds:[rbx]
   140013473:	jmp    rsi
   140013475:	loop   0x140013446
   140013477:	jmp    rax
   140013479:	int    0xb2
   14001347b:	(bad)  
   14001347c:	fstp   TBYTE PTR [rbp-0x1d10006a]
   140013482:	int3   
   140013483:	push   rdx
   140013485:	jmp    0x126f33459
   14001348a:	retf   0xf0ff
   14001348d:	in     al,0xc7
   14001348f:	(bad)  
   140013490:	out    dx,eax
   140013491:	loop   0x140013456
   140013493:	(bad)  
   140013494:	out    dx,al
   140013495:	loopne 0x140013457
   140013497:	(bad)  
   140013498:	in     eax,dx
   140013499:	fidivr WORD PTR [rdi+rdi*8-0x472214]
   1400134a0:	(bad)  
   1400134a1:	fldcw  WORD PTR [rdi-0x240d0501]
   1400134a7:	call   QWORD PTR [rcx+0xff0c5f]
   1400134ad:	add    BYTE PTR [rax],al
   1400134af:	add    BYTE PTR [rax],al
   1400134b1:	add    BYTE PTR [rax],al
   1400134b3:	add    BYTE PTR [rcx-0x600f3a1],dl
   1400134b9:	repnz out dx,eax
   1400134bb:	(bad)  
   1400134bc:	fnstcw WORD PTR [rax-0x26130076]
   1400134c2:	ret    
   1400134c3:	push   QWORD PTR [rbx-0x4b007343]
   1400134c9:	retf   
   1400134ca:	lahf   
   1400134cb:	inc    esp
   1400134cd:	shr    DWORD PTR [rbp-0x68325001],1
   1400134d3:	jmp    QWORD PTR [rbp-0x1d00794b]
   1400134d9:	xlat   BYTE PTR ds:[rbx]
   1400134da:	enter  0xd9ff,0xb8
   1400134de:	mov    bh,bh
   1400134e0:	jmp    0x1400134bb
   1400134e2:	sar    edi,0xf7
   1400134e5:	out    dx,eax
   1400134e6:	fcos   
   1400134e8:	imul   dh
   1400134ea:	xlat   BYTE PTR ds:[rbx]
   1400134eb:	push   rsp
   1400134ed:	(bad)  
   1400134ee:	sar    edi,cl
   1400134f0:	hlt    
   1400134f1:	jmp    0x126f434c5
   1400134f6:	retf   0xf1ff
   1400134f9:	in     al,0xc6
   1400134fb:	push   rax
   1400134fd:	loop   0x1400134c1
   1400134ff:	(bad)  
   140013500:	in     al,dx
   140013501:	fdiv   QWORD PTR [rbp-0x220c0501]
   140013507:	call   QWORD PTR [rcx+0xff0c5f]
   14001350d:	add    BYTE PTR [rax],al
   14001350f:	add    BYTE PTR [rax],al
   140013511:	add    BYTE PTR [rax],al
   140013513:	add    BYTE PTR [rcx-0x600f3a1],dl
   140013519:	out    dx,eax
   14001351a:	jmp    0x14001351b
   14001351c:	fnstenv [rdi-0x24150077]
   140013522:	(bad)  
   140013525:	rcl    BYTE PTR [rcx-0x624a5c01],0xff
   14001352c:	and    DWORD PTR [edi+edi*8-0x7a4960],0xffffffc1
   140013535:	mov    esp,0xe1ebff94
   14001353a:	retf   
   14001353b:	(bad)  
   14001353c:	fnstenv [rdi-0x12090077]
   140013542:	loop   0x140013543
   140013544:	icebp  
   140013545:	jmp    0x106e33522
   14001354a:	sahf   
   14001354b:	dec    eax
   14001354d:	pushf  
   14001354e:	(bad)  
   14001354f:	push   rbp
   140013551:	in     eax,dx
   140013552:	(bad)  
   140013554:	imul   dh
   140013556:	fdiv   st(7),st
   140013558:	cmc    
   140013559:	in     eax,dx
   14001355a:	(bad)  
   14001355c:	cmc    
   14001355d:	in     eax,dx
   14001355e:	(bad)  
   140013560:	icebp  
   140013561:	in     eax,0xca
   140013563:	(bad)  
   140013564:	cld    
   140013565:	cmc    
   140013566:	loop   0x140013567
   140013568:	xchg   ecx,eax
   140013569:	pop    rdi
   14001356a:	or     al,0xff
	...
   140013574:	xchg   ecx,eax
   140013575:	pop    rdi
   140013576:	or     al,0xff
   140013578:	stc    
   140013579:	out    dx,al
   14001357a:	jmp    0x14001357b
   14001357c:	fnstenv [rdi-0x21140076]
   140013582:	(bad)  
   140013583:	(bad)  
   140013584:	(bad)  [rbp-0x5066007e]
   14001358a:	mov    edi,0xab7547ff
   14001358f:	inc    ebp
   140013591:	mov    bl,0x97
   140013593:	(bad)  
   140013594:	fbstp  TBYTE PTR [rbp-0x1d16007e]
   14001359a:	int    0xff
   14001359c:	fnstenv [rdi-0x22120079]
   1400135a2:	(bad)  
   1400135a3:	call   rdi
   1400135a5:	mov    ch,0x84
   1400135a7:	(bad)  
   1400135a8:	mov    eax,0xb7ff2f7e
   1400135ad:	jl     0x1400135da
   1400135af:	jmp    rax
   1400135b1:	(bad)  
   1400135b2:	movabs eax,ds:0xa1c6e0ffa1c6e0ff
   1400135bb:	jmp    rax
   1400135bd:	(bad)  
   1400135be:	movabs eax,ds:0xe7f8feffb6daebff
   1400135c7:	call   QWORD PTR [rcx+0xff0c5f]
   1400135cd:	add    BYTE PTR [rax],al
   1400135cf:	add    BYTE PTR [rax],al
   1400135d1:	add    BYTE PTR [rax],al
   1400135d3:	add    BYTE PTR [rcx-0x600f3a1],dl
   1400135d9:	out    dx,eax
   1400135da:	in     eax,dx
   1400135db:	(bad)  
   1400135dc:	fnstcw WORD PTR [rax-0x20110077]
   1400135e2:	(bad)  
   1400135e3:	(bad)  
   1400135e4:	fidiv  DWORD PTR [rbp-0x1c30007d]
   1400135ea:	lock dec DWORD PTR [rsi+0x73ffe6ba]
   1400135f1:	jle    0x140013576
   1400135f3:	(bad)  
   1400135f4:	fnstsw WORD PTR [rax-0x1a11007c]
   1400135fa:	sar    bh,1
   1400135fc:	fdiv   DWORD PTR [rdi-0x45220078]
   140013602:	mov    bh,bh
   140013604:	mov    eax,0xefff2f7e
   140013609:	shr    BYTE PTR [rsi-0x1],0xb7
   14001360d:	jge    0x14001363d
   14001360f:	push   rbp
   140013611:	in     eax,dx
   140013612:	(bad)  
   140013614:	imul   dh
   140013616:	fdiv   st(7),st
   140013618:	cmc    
   140013619:	in     eax,dx
   14001361a:	(bad)  
   14001361c:	cmc    
   14001361d:	in     eax,dx
   14001361e:	(bad)  
   140013620:	lock jrcxz 0x1400135ec
   140013623:	(bad)  
   140013624:	(bad)  
   140013625:	cli    
   140013626:	(bad)  
   140013627:	call   QWORD PTR [rcx+0xff0c5f]
   14001362d:	add    BYTE PTR [rax],al
   14001362f:	add    BYTE PTR [rax],al
   140013631:	add    BYTE PTR [rax],al
   140013633:	add    BYTE PTR [rcx-0x600f3a1],dl
   140013639:	lock out dx,al
   14001363b:	(bad)  
   14001363c:	fnstcw WORD PTR [rax-0x1d0e0076]
   140013642:	(bad)  
   140013643:	(bad)  
   140013644:	fcmovb st,st(4)
   140013646:	popf   
   140013647:	jmp    QWORD PTR [rcx+0x70ffb8ac]
   14001364d:	xchg   BYTE PTR [rbx+0x767978ff],bl
   140013653:	(bad)  
   140013654:	fstp   TBYTE PTR [rax-0x1b12007a]
   14001365a:	int3   
   14001365b:	call   rcx
   14001365d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001365e:	gs (bad) 
   140013660:	mov    eax,0xf6ff2f7e
   140013665:	retf   0xff74
   140013668:	icebp  
   140013669:	(bad)  
   14001366a:	jb     0x14001366b
   14001366c:	mov    bh,0x7d
   14001366e:	cs jmp rax
   140013671:	(bad)  
   140013672:	movabs eax,ds:0xa1c6e0ffa1c6e0ff
   14001367b:	jmp    rax
   14001367d:	(bad)  
   14001367e:	movabs eax,ds:0xecfaffffbadcecff
   140013687:	call   QWORD PTR [rcx+0xff0c5f]
   14001368d:	add    BYTE PTR [rax],al
   14001368f:	add    BYTE PTR [rax],al
   140013691:	add    BYTE PTR [rax],al
   140013693:	add    BYTE PTR [rcx-0x300f3a1],dl
   140013699:	hlt    
   14001369a:	cmc    
   14001369b:	(bad)  
   14001369c:	fnstcw WORD PTR [rax-0x130a0076]
   1400136a2:	(bad)  
   1400136a3:	jmp    rsi
   1400136a5:	(bad)  
   1400136a6:	mov    ch,0xff
   1400136a8:	mov    edi,0xb8ffaab8
   1400136ad:	mov    cl,0xa1
   1400136af:	(bad)  
   1400136b0:	(bad)  
   1400136b2:	mov    ch,0xff
   1400136b4:	loop   0x14001368b
   1400136b6:	mov    ch,0xff
   1400136b8:	ffree  st(0)
   1400136ba:	nop
   1400136bb:	(bad)  
   1400136bc:	mov    eax,0xfbff2f7e
   1400136c1:	shl    BYTE PTR [rbp-0x1],1
   1400136c4:	cmc    
   1400136c5:	lods   al,BYTE PTR ds:[rsi]
   1400136c6:	sbb    bh,bh
   1400136c8:	cmc    
   1400136c9:	leave  
   1400136ca:	jne    0x1400136cb
   1400136cc:	mov    bh,0x7d
   1400136ce:	push   QWORD PTR cs:[rdi-0x4800d183]
   1400136d5:	jge    0x140013705
   1400136d7:	push   QWORD PTR [rdi-0x4800d183]
   1400136dd:	jge    0x14001370d
   1400136df:	push   QWORD PTR [rdi-0x4800d183]
   1400136e5:	jge    0x140013715
   1400136e7:	push   QWORD PTR [rdi-0x3f00d183]
   1400136ed:	xchg   DWORD PTR [rcx],edi
   1400136ef:	ja     0x1400136f1
   1400136f1:	add    BYTE PTR [rax],al
   1400136f3:	add    BYTE PTR [rcx-0xf3a1],dl
   1400136f9:	std    
   1400136fa:	(bad)  
   1400136fb:	jmp    rsi
   1400136fd:	iret   
   1400136fe:	mov    dh,0xff
   140013700:	fnstcw WORD PTR [rax-0x47260076]
   140013706:	mov    bh,bh
   140013708:	fnstcw WORD PTR [rax-0x48260076]
   14001370e:	mov    bh,bh
   140013710:	fnstcw WORD PTR [rax-0x5a2e0077]
   140013716:	push   QWORD PTR gs:[rdx-0x200d98a]
   14001371d:	(bad)  
   14001371e:	xchg   bh,bh
   140013720:	cli    
   140013721:	mov    ah,0x23
   140013723:	(bad)  
   140013724:	clc    
   140013725:	mov    al,0x19
   140013727:	(bad)  
   140013728:	stc    
   140013729:	iret   
   14001372a:	jl     0x14001372b
   14001372c:	cmc    
   14001372d:	retf   
   14001372e:	jnp    0x14001372f
   140013730:	repnz (bad) 
   140013732:	js     0x140013733
   140013734:	out    dx,al
   140013735:	shl    DWORD PTR [rbp-0x1],0xe9
   140013739:	mov    esp,0xb6e5ff73
   14001373e:	outs   dx,DWORD PTR ds:[rsi]
   14001373f:	jmp    rax
   140013741:	mov    cl,0x6e
   140013743:	(bad)  
   140013744:	fsubr  QWORD PTR [rbx-0x58270092]
   14001374a:	outs   dx,BYTE PTR ds:[rsi]
   14001374b:	push   QWORD PTR [rdi+0xff2e7d]
   140013751:	add    BYTE PTR [rax],al
   140013753:	add    BYTE PTR [rcx-0xf3a1],dl
   140013759:	(bad)  
   14001375a:	(bad)  
   14001375b:	push   rsi
   14001375d:	in     eax,dx
   14001375e:	call   0x101d62062
   140013763:	jmp    rsi
   140013765:	sar    BYTE PTR [rbx-0x48321a01],1
   14001376b:	jmp    rsp
   14001376d:	int3   
   14001376e:	mov    ah,0xff
   140013770:	xlat   BYTE PTR ds:[rbx]
   140013771:	scas   eax,DWORD PTR es:[rdi]
   140013772:	jge    0x140013773
   140013774:	mov    dl,0x76
   140013776:	es (bad) 
   140013778:	clc    
   140013779:	(bad)  
   14001377a:	mov    edi,edi
   14001377c:	clc    
   14001377d:	mov    ebp,0xbefbff41
   140013782:	rex.B (bad) 
   140013784:	sti    
   140013785:	mov    ebx,0xb2f8ff32
   14001378a:	and    bh,bh
   14001378c:	rep stos BYTE PTR es:[rdi],al
   14001378e:	sbb    bh,bh
   140013790:	in     eax,dx
   140013791:	movabs ds:0x91dfff109ae7ff13,al
   14001379a:	or     al,0xff
   14001379c:	xlat   BYTE PTR ds:[rbx]
   14001379d:	xchg   BYTE PTR [rsi],al
   14001379f:	dec    edi
   1400137a1:	jge    0x1400137a3
   1400137a3:	inc    edi
   1400137a5:	jae    0x1400137a7
   1400137a7:	(bad)  
   1400137a8:	fisubr DWORD PTR [rdx+0x7db7ff6e]
   1400137ae:	inc    DWORD PTR cs:[rax]
   1400137b1:	add    BYTE PTR [rax],al
   1400137b3:	add    BYTE PTR [rcx-0xf3a1],dl
   1400137b9:	(bad)  
   1400137ba:	(bad)  
   1400137bb:	(bad)  
   1400137bc:	(bad)  
   1400137bd:	(bad)  
   1400137be:	(bad)  
   1400137bf:	(bad)  
   1400137c0:	(bad)  
   1400137c1:	(bad)  
   1400137c2:	(bad)  
   1400137c3:	(bad)  
   1400137c4:	(bad)  
   1400137c5:	(bad)  
   1400137c6:	(bad)  
   1400137c7:	(bad)  
   1400137c8:	(bad)  
   1400137c9:	(bad)  
   1400137ca:	(bad)  
   1400137cb:	(bad)  
   1400137cc:	(bad)  
   1400137cd:	(bad)  
   1400137ce:	(bad)  
   1400137cf:	jmp    QWORD PTR [rbp-0x1200e99a]
   1400137d5:	shr    DWORD PTR [rdi-0x1],0xee
   1400137d9:	mov    cl,0x39
   1400137db:	push   rbx
   1400137dd:	mov    bh,0x3c
   1400137df:	(bad)  
   1400137e0:	clc    
   1400137e1:	mov    ebp,0xc1fbff41
   1400137e6:	rex.R (bad) 
   1400137e8:	sti    
   1400137e9:	mov    edi,0xb8f9ff41
   1400137ee:	xor    al,0xff
   1400137f0:	hlt    
   1400137f1:	scas   al,BYTE PTR es:[rdi]
   1400137f2:	and    al,0xff
   1400137f4:	out    dx,al
   1400137f5:	movabs ds:0x8fdfff0e99e6ff17,eax
   1400137fe:	or     edi,edi
   140013800:	(bad)  
   140013801:	xchg   BYTE PTR [rbx],al
   140013803:	dec    esi
   140013805:	jl     0x140013807
   140013807:	(bad)  
   140013808:	fild   QWORD PTR [rdi+0x7db7ff6e]
   14001380e:	inc    DWORD PTR cs:[rax]
   140013811:	add    BYTE PTR [rax],al
   140013813:	add    BYTE PTR [rcx-0x6e72f3a1],dl
   140013819:	pop    rdi
   14001381a:	or     al,0xff
   14001381c:	xchg   ecx,eax
   14001381d:	pop    rdi
   14001381e:	or     al,0xff
   140013820:	xchg   ecx,eax
   140013821:	pop    rdi
   140013822:	or     al,0xff
   140013824:	xchg   ecx,eax
   140013825:	pop    rdi
   140013826:	or     al,0xff
   140013828:	xchg   ecx,eax
   140013829:	pop    rdi
   14001382a:	or     al,0xff
   14001382c:	xchg   ecx,eax
   14001382d:	pop    rdi
   14001382e:	or     al,0xff
   140013830:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013831:	ins    BYTE PTR es:[rdi],dx
   140013832:	sbb    bh,bh
   140013834:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013835:	data16 (bad) 
   140013837:	(bad)  
   140013838:	out    dx,al
   140013839:	ret    0xff70
   14001383c:	out    dx,eax
   14001383d:	mov    cl,0x39
   14001383f:	push   rbp
   140013841:	mov    eax,0xbdf9ff3c
   140013846:	rex (bad) 
   140013848:	sti    
   140013849:	mov    edi,0xc0fbff42
   14001384e:	rex.XB (bad) 
   140013850:	cli    
   140013851:	mov    esi,0xb6f5ff41
   140013856:	(bad)  
   140013857:	(bad)  
   140013858:	out    dx,eax
   140013859:	stos   BYTE PTR es:[rdi],al
   14001385a:	sub    edi,edi
   14001385c:	out    0x9e,al
   14001385e:	sbb    edi,edi
   140013860:	ficom  WORD PTR [rcx-0x7a2a00f1]
   140013866:	add    al,0xff
   140013868:	loope  0x14001381d
   14001386a:	outs   dx,BYTE PTR ds:[rsi]
   14001386b:	push   QWORD PTR [rdi+0xff2e7d]
	...
   140013891:	add    BYTE PTR [rax],al
   140013893:	add    BYTE PTR [rbx-0x5a89da84],bh
   140013899:	data16 (bad) 
   14001389b:	(bad)  
   14001389c:	out    dx,al
   14001389d:	ret    0xff70
   1400138a0:	lock mov bl,0x3a
   1400138a3:	push   rbp
   1400138a5:	mov    ecx,0xbdfaff3c
   1400138aa:	rex (bad) 
   1400138ac:	sti    
   1400138ad:	rol    BYTE PTR [rcx-0x1],0xfb
   1400138b1:	mov    edi,0xbcf9ff41
   1400138b6:	rex push rdi
   1400138b9:	mov    eax,0xb1f1ff3f
   1400138be:	cmp    bh,bh
   1400138c0:	jmp    0x122006b6d
   1400138c5:	pushf  
   1400138c6:	and    eax,0x7bbee8ff
   1400138cb:	push   QWORD PTR [rdi+0xff2e7d]
	...
   1400138f5:	add    BYTE PTR [rax],al
   1400138f7:	add    BYTE PTR [rcx-0x5a91db87],bh
   1400138fd:	data16 (bad) 
   1400138ff:	(bad)  
   140013900:	out    dx,eax
   140013901:	ret    
   140013902:	jo     0x140013903
   140013904:	lock mov bl,0x39
   140013907:	push   rsi
   140013909:	mov    ecx,0x72afff3c
   14001390e:	and    bh,bh
   140013910:	mov    bl,0x78
   140013912:	sub    edi,edi
   140013914:	mov    bl,0x78
   140013916:	sub    edi,edi
   140013918:	mov    bl,0x78
   14001391a:	sub    edi,edi
   14001391c:	mov    bl,0x78
   14001391e:	sub    edi,edi
   140013920:	mov    bl,0x78
   140013922:	sub    edi,edi
   140013924:	mov    bl,0x78
   140013926:	sub    edi,edi
   140013928:	mov    bl,0x78
   14001392a:	sub    edi,edi
   14001392c:	mov    ebx,0x773281
	...
   140013959:	add    BYTE PTR [rax],al
   14001395b:	add    BYTE PTR [rdx-0x5a8eda86],bh
   140013961:	data16 (bad) 
   140013963:	push   rax
   140013965:	(bad)  
   140013966:	jo     0x140013967
   140013968:	lock mov bl,0x3a
   14001396b:	jmp    FWORD PTR [rdi+0xff2272]
	...
   1400139bd:	add    BYTE PTR [rax],al
   1400139bf:	add    BYTE PTR [rbx-0x5a8ada85],bh
   1400139c5:	data16 (bad) 
   1400139c7:	push   rdx
   1400139c9:	(bad)  
   1400139ca:	jno    0x1400139cb
   1400139cc:	scas   eax,DWORD PTR es:[rdi]
   1400139cd:	jb     0x1400139f1
   1400139cf:	inc    DWORD PTR [rax]
	...
   140013a21:	add    BYTE PTR [rax],al
   140013a23:	add    BYTE PTR [rdx-0x5a90db86],bh
   140013a29:	data16 (bad) 
   140013a2b:	jmp    FWORD PTR [rdi+0xf41d70]
	...
   140013a85:	add    BYTE PTR [rax],al
   140013a87:	add    BYTE PTR [rcx-0x5aa3dd8f],dh
   140013a8d:	data16 (bad) 
   140013a8f:	stos   BYTE PTR es:[rdi],al
	...
   140013ab0:	(bad)  
   140013ab1:	(bad)  
   140013ab2:	inc    DWORD PTR [rax]
   140013ab4:	(bad)  
   140013ab5:	(bad)  
   140013ab6:	inc    DWORD PTR [rax]
   140013ab8:	add    BYTE PTR [rax],0x1
   140013abb:	add    BYTE PTR [rax-0x7fffff00],al
   140013ac1:	add    BYTE PTR [rcx],al
   140013ac3:	add    BYTE PTR [rax-0x7fffff00],al
   140013ac9:	add    BYTE PTR [rcx],al
   140013acb:	add    BYTE PTR [rax-0x7fffff00],al
   140013ad1:	add    BYTE PTR [rcx],al
   140013ad3:	add    BYTE PTR [rax-0x7fffff00],al
   140013ad9:	add    BYTE PTR [rcx],al
   140013adb:	add    BYTE PTR [rax-0x7fffff00],al
   140013ae1:	add    BYTE PTR [rcx],al
   140013ae3:	add    BYTE PTR [rax-0x80000000],al
   140013ae9:	add    BYTE PTR [rax],al
   140013aeb:	add    BYTE PTR [rax-0x80000000],al
   140013af1:	add    BYTE PTR [rax],al
   140013af3:	add    BYTE PTR [rax-0x1000000],al
   140013af9:	add    BYTE PTR [rax],0x0
   140013afc:	inc    eax
   140013afe:	add    BYTE PTR [rax],al
   140013b00:	jmp    rax
   140013b02:	inc    DWORD PTR [rax]
   140013b04:	push   rax
   140013b06:	inc    DWORD PTR [rax]
   140013b08:	(bad)  
   140013b09:	clc    
   140013b0a:	inc    DWORD PTR [rax]
   140013b0c:	(bad)  
   140013b0d:	cld    
   140013b0e:	inc    DWORD PTR [rax]
   140013b10:	sub    BYTE PTR [rax],al
   140013b12:	add    BYTE PTR [rax],al
   140013b14:	adc    BYTE PTR [rax],al
   140013b16:	add    BYTE PTR [rax],al
   140013b18:	and    BYTE PTR [rax],al
   140013b1a:	add    BYTE PTR [rax],al
   140013b1c:	add    DWORD PTR [rax],eax
   140013b1e:	and    BYTE PTR [rax],al
   140013b20:	add    BYTE PTR [rax],al
   140013b22:	add    BYTE PTR [rax],al
   140013b24:	add    al,0x0
	...
   140013b37:	add    BYTE PTR [rcx-0x6e69f3a1],dl
   140013b3d:	pop    rdi
   140013b3e:	or     al,0xff
   140013b40:	xchg   ecx,eax
   140013b41:	pop    rdi
   140013b42:	or     al,0xff
   140013b44:	xchg   ecx,eax
   140013b45:	pop    rdi
   140013b46:	or     al,0xff
   140013b48:	xchg   ecx,eax
   140013b49:	pop    rdi
   140013b4a:	or     al,0xff
   140013b4c:	xchg   ecx,eax
   140013b4d:	pop    rdi
   140013b4e:	or     al,0xff
   140013b50:	xchg   ecx,eax
   140013b51:	pop    rdi
   140013b52:	or     al,0xff
   140013b54:	xchg   ecx,eax
   140013b55:	pop    rdi
   140013b56:	or     al,0xff
   140013b58:	xchg   ecx,eax
   140013b59:	pop    rdi
   140013b5a:	or     al,0xff
   140013b5c:	xchg   ecx,eax
   140013b5d:	pop    rdi
   140013b5e:	or     al,0xff
   140013b60:	xchg   ecx,eax
   140013b61:	pop    rdi
   140013b62:	or     al,0xff
   140013b64:	xchg   ecx,eax
   140013b65:	pop    rdi
   140013b66:	or     al,0xff
   140013b68:	xchg   ecx,eax
   140013b69:	pop    rdi
   140013b6a:	or     al,0xff
   140013b6c:	xchg   ecx,eax
   140013b6d:	pop    rdi
   140013b6e:	or     al,0xff
   140013b70:	xchg   ecx,eax
   140013b71:	pop    rdi
   140013b72:	or     al,0xff
   140013b74:	jge    0x140013bc8
   140013b76:	or     ch,BYTE PTR [rdi-0xf3a06f]
   140013b7c:	(bad)  
   140013b7d:	(bad)  
   140013b7e:	(bad)  
   140013b7f:	(bad)  
   140013b80:	cli    
   140013b81:	imul   ah
   140013b83:	(bad)  
   140013b84:	clc    
   140013b85:	repz out 0xff,al
   140013b88:	div    eax
   140013b8a:	loopne 0x140013b8b
   140013b8c:	cmc    
   140013b8d:	in     eax,dx
   140013b8e:	fcos   
   140013b90:	repz (bad) 
   140013b92:	sar    edi,cl
   140013b94:	bnd call 0x125f23b68
   140013b9a:	(bad)  
   140013b9b:	(bad)  
   140013b9c:	out    dx,al
   140013b9d:	loope  0x140013b60
   140013b9f:	(bad)  
   140013ba0:	in     al,dx
   140013ba1:	fidivr WORD PTR [rbx-0x4a241401]
   140013ba7:	(bad)  
   140013ba8:	(bad)  
   140013ba9:	fsubr  DWORD PTR [rdi-0x54291601]
   140013baf:	(bad)  
   140013bb0:	jmp    0xde00e78b
   140013bb5:	jo     0x140013bdd
   140013bb7:	call   QWORD PTR [rcx-0xf3a1]
   140013bbd:	(bad)  
   140013bbe:	(bad)  
   140013bbf:	(bad)  
   140013bc0:	cli    
   140013bc1:	imul   ah
   140013bc3:	(bad)  
   140013bc4:	clc    
   140013bc5:	repz out 0xff,al
   140013bc8:	div    eax
   140013bca:	loopne 0x140013bcb
   140013bcc:	cmc    
   140013bcd:	in     eax,dx
   140013bce:	fcos   
   140013bd0:	repz (bad) 
   140013bd2:	sar    edi,cl
   140013bd4:	bnd call 0x125f23ba8
   140013bda:	(bad)  
   140013bdb:	(bad)  
   140013bdc:	out    dx,al
   140013bdd:	loope  0x140013ba0
   140013bdf:	(bad)  
   140013be0:	in     al,dx
   140013be1:	fidivr WORD PTR [rbx-0x4a241401]
   140013be7:	(bad)  
   140013be8:	(bad)  
   140013be9:	fsubr  DWORD PTR [rdi-0x54291601]
   140013bef:	(bad)  
   140013bf0:	jmp    0x140013bcc
   140013bf2:	mov    bl,0xff
   140013bf4:	sahf   
   140013bf5:	jb     0x140013c20
   140013bf7:	call   QWORD PTR [rcx-0xf3a1]
   140013bfd:	(bad)  
   140013bfe:	(bad)  
   140013bff:	push   rbx
   140013c01:	call   0xe5d03bdd
   140013c06:	(bad)  
   140013c07:	dec    esi
   140013c09:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c0a:	(bad)  
   140013c0b:	dec    esi
   140013c0d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c0e:	(bad)  
   140013c0f:	dec    esi
   140013c11:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c12:	(bad)  
   140013c13:	push   rbx
   140013c15:	call   0x127f43bf1
   140013c1a:	int    0xff
   140013c1c:	lock in al,0xc6
   140013c1f:	(bad)  
   140013c20:	out    dx,al
   140013c21:	loopne 0x140013be2
   140013c23:	(bad)  
   140013c24:	in     al,dx
   140013c25:	fnstsw WORD PTR [rcx-0x4c251401]
   140013c2b:	(bad)  
   140013c2c:	jmp    0x12c00ea08
   140013c31:	fidiv  DWORD PTR [rbx+0x29729eff]
   140013c37:	call   QWORD PTR [rcx-0xf3a1]
   140013c3d:	(bad)  
   140013c3e:	(bad)  
   140013c3f:	dec    esi
   140013c41:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c42:	(bad)  
   140013c43:	inc    esp
   140013c45:	(bad)  
   140013c46:	(bad)  
   140013c47:	jmp    QWORD PTR [rsi-0x5e006347]
   140013c4d:	mov    eax,0xbbb4ff8e
   140013c52:	mov    edi,?
   140013c54:	(bad)  
   140013c55:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c56:	(bad)  
   140013c57:	push   rbx
   140013c59:	(bad)  
   140013c5a:	sar    bh,cl
   140013c5c:	repnz out 0xcd,eax
   140013c5f:	push   rax
   140013c61:	in     al,0xc6
   140013c63:	(bad)  
   140013c64:	out    dx,al
   140013c65:	loopne 0x140013c26
   140013c67:	(bad)  
   140013c68:	in     al,dx
   140013c69:	fnstsw WORD PTR [rcx-0x4c251401]
   140013c6f:	(bad)  
   140013c70:	jmp    0x140013c4c
   140013c72:	mov    bl,0xff
   140013c74:	sahf   
   140013c75:	jb     0x140013ca0
   140013c77:	call   QWORD PTR [rcx-0xf3a1]
   140013c7d:	(bad)  
   140013c7e:	(bad)  
   140013c7f:	dec    esi
   140013c81:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c82:	(bad)  
   140013c83:	dec    ebp
   140013c85:	rcl    BYTE PTR [rax-0x706d8801],0xff
   140013c8c:	jne    0x140013c1b
   140013c8e:	jns    0x140013c8f
   140013c90:	mov    ebx,0xceff7eb4
   140013c95:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013c96:	(bad)  
   140013c97:	push   rbp
   140013c99:	in     eax,dx
   140013c9a:	fdivr  st,st(7)
   140013c9c:	fadd   st(5),st
   140013c9e:	fwait
   140013c9f:	(bad)  
   140013ca0:	fadd   st(5),st
   140013ca2:	fwait
   140013ca3:	(bad)  
   140013ca4:	fadd   st(5),st
   140013ca6:	fwait
   140013ca7:	(bad)  
   140013ca8:	fadd   st(5),st
   140013caa:	fwait
   140013cab:	(bad)  
   140013cac:	fadd   st(5),st
   140013cae:	fwait
   140013caf:	(bad)  
   140013cb0:	jmp    0x140013c8c
   140013cb2:	mov    bl,0xff
   140013cb4:	sahf   
   140013cb5:	jb     0x140013ce0
   140013cb7:	call   QWORD PTR [rcx-0xf3a1]
   140013cbd:	(bad)  
   140013cbe:	(bad)  
   140013cbf:	dec    esi
   140013cc1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013cc2:	(bad)  
   140013cc3:	jmp    rax
   140013cc5:	iret   
   140013cc6:	mov    bl,0xff
   140013cc8:	xchg   esp,eax
   140013cc9:	mov    cl,0xcb
   140013ccb:	(bad)  
   140013ccc:	jg     0x140013c5b
   140013cce:	xchg   edi,eax
   140013ccf:	call   rsi
   140013cd1:	ret    
   140013cd2:	popf   
   140013cd3:	dec    esi
   140013cd5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013cd6:	(bad)  
   140013cd7:	push   rdi
   140013cd9:	lock (bad) 
   140013cdc:	cmc    
   140013cdd:	in     eax,dx
   140013cde:	fdivr  st,st(7)
   140013ce0:	repz (bad) 
   140013ce2:	sar    bh,cl
   140013ce4:	repnz out 0xcd,eax
   140013ce7:	push   rax
   140013ce9:	in     al,0xc6
   140013ceb:	(bad)  
   140013cec:	out    dx,al
   140013ced:	loopne 0x140013cae
   140013cef:	(bad)  
   140013cf0:	out    dx,al
   140013cf1:	loopne 0x140013cb2
   140013cf3:	call   FWORD PTR [rsi-0x6e00d68e]
   140013cf9:	pop    rdi
   140013cfa:	or     al,0xff
   140013cfc:	(bad)  
   140013cfd:	(bad)  
   140013cfe:	(bad)  
   140013cff:	dec    esi
   140013d01:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013d02:	(bad)  
   140013d03:	(bad)  
   140013d04:	jmp    0x10c0106e7
   140013d09:	(bad)  
   140013d0a:	(bad)  
   140013d0c:	stos   DWORD PTR es:[rdi],eax
   140013d0d:	mov    ah,0xbb
   140013d0f:	(bad)  
   140013d10:	fxch   st(7)
   140013d12:	mov    eax,0x61a5ceff
   140013d17:	(bad)  
   140013d18:	clc    
   140013d19:	repz in eax,0xff
   140013d1c:	retf   0x63a0
   140013d1f:	(bad)  
   140013d20:	mov    esi,0xdcff2e82
   140013d25:	(bad)
   140013d28:	fadd   st(5),st
   140013d2a:	fwait
   140013d2b:	(bad)  
   140013d2c:	fadd   st(5),st
   140013d2e:	fwait
   140013d2f:	(bad)  
   140013d30:	out    dx,al
   140013d31:	loopne 0x140013cf2
   140013d33:	call   FWORD PTR [rsi-0x6e00d68e]
   140013d39:	pop    rdi
   140013d3a:	or     al,0xff
   140013d3c:	(bad)  
   140013d3d:	(bad)  
   140013d3e:	(bad)  
   140013d3f:	push   rbx
   140013d41:	call   0xe5d03d1d
   140013d46:	(bad)  
   140013d47:	dec    esi
   140013d49:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013d4a:	(bad)  
   140013d4b:	dec    esi
   140013d4d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013d4e:	(bad)  
   140013d4f:	dec    esi
   140013d51:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013d52:	(bad)  
   140013d53:	push   rbx
   140013d55:	call   0xffdf3d31
   140013d5a:	xchg   edi,eax
   140013d5b:	(bad)  
   140013d5c:	mov    edi,0xbeff207b
   140013d61:	(bad)  
   140013d62:	cs (bad) 
   140013d64:	(bad)  
   140013d65:	std    
   140013d66:	sti    
   140013d67:	(bad)  
   140013d68:	(bad)  
   140013d69:	std    
   140013d6a:	sti    
   140013d6b:	(bad)  
   140013d6c:	(bad)  
   140013d6d:	std    
   140013d6e:	sti    
   140013d6f:	(bad)  
   140013d70:	(bad)  
   140013d71:	std    
   140013d72:	sti    
   140013d73:	call   FWORD PTR [rsi-0x6e00d68e]
   140013d79:	pop    rdi
   140013d7a:	or     al,0xff
   140013d7c:	(bad)  
   140013d7d:	(bad)  
   140013d7e:	(bad)  
   140013d7f:	(bad)  
   140013d80:	(bad)  
   140013d81:	(bad)  
   140013d82:	(bad)  
   140013d83:	(bad)  
   140013d84:	(bad)  
   140013d85:	(bad)  
   140013d86:	(bad)  
   140013d87:	(bad)  
   140013d88:	(bad)  
   140013d89:	(bad)  
   140013d8a:	(bad)  
   140013d8b:	(bad)  
   140013d8c:	(bad)  
   140013d8d:	(bad)  
   140013d8e:	(bad)  
   140013d8f:	(bad)  
   140013d90:	(bad)  
   140013d91:	std    
   140013d92:	cld    
   140013d93:	(bad)  
   140013d94:	fnstsw WORD PTR [rdi+0x7bbfff97]
   140013d9a:	and    bh,bh
   140013d9c:	cld    
   140013d9d:	sar    DWORD PTR [rsi-0x1],cl
   140013da0:	mov    esi,0xbeff2e82
   140013da5:	(bad)  
   140013da6:	cs (bad) 
   140013da8:	mov    esi,0xbeff2e82
   140013dad:	(bad)  
   140013dae:	cs (bad) 
   140013db0:	mov    esi,0xafff2e82
   140013db5:	ja     0x140013ddd
   140013db7:	call   QWORD PTR [rcx-0x409f3a1]
   140013dbd:	stc    
   140013dbe:	idiv   bh
   140013dc0:	(bad)  
   140013dc1:	(bad)  
   140013dc2:	(bad)  
   140013dc3:	(bad)  
   140013dc4:	(bad)  
   140013dc5:	(bad)  
   140013dc6:	(bad)  
   140013dc7:	(bad)  
   140013dc8:	(bad)  
   140013dc9:	(bad)  
   140013dca:	(bad)  
   140013dcb:	(bad)  
   140013dcc:	(bad)  
   140013dcd:	(bad)  
   140013dce:	(bad)  
   140013dcf:	(bad)  
   140013dd0:	ffree  st(0)
   140013dd2:	(bad)  
   140013dd3:	(bad)  
   140013dd4:	mov    edi,0xfcff207b
   140013dd9:	ficom  DWORD PTR [rbx+0x31b9fbff]
   140013ddf:	(bad)  
   140013de0:	sti    
   140013de1:	(bad)  
   140013de2:	mov    bh,bh
   140013de4:	clc    
   140013de5:	xlat   BYTE PTR ds:[rbx]
   140013de6:	xchg   edi,eax
   140013de7:	push   rcx
   140013de9:	enter  0xff80,0xea
   140013ded:	mov    edi,0xb7e3ff7c
   140013df2:	jns    0x140013df3
   140013df4:	mov    ebx,0x91ff2f80
   140013df9:	pop    rdi
   140013dfa:	or     al,0x8d
   140013dfc:	xchg   ecx,eax
   140013dfd:	pop    rdi
   140013dfe:	or     al,0xf6
   140013e00:	xchg   ecx,eax
   140013e01:	pop    rdi
   140013e02:	or     al,0xff
   140013e04:	xchg   ecx,eax
   140013e05:	pop    rdi
   140013e06:	or     al,0xff
   140013e08:	xchg   ecx,eax
   140013e09:	pop    rdi
   140013e0a:	or     al,0xff
   140013e0c:	xchg   ecx,eax
   140013e0d:	pop    rdi
   140013e0e:	or     al,0xff
   140013e10:	mov    ebx,0xe8ff1875
   140013e15:	(bad)
   140013e18:	out    dx,eax
   140013e19:	mov    bl,0x3a
   140013e1b:	(bad)  
   140013e1c:	clc    
   140013e1d:	mov    ebp,0xc0fcff42
   140013e22:	rex (bad) 
   140013e24:	clc    
   140013e25:	mov    dh,0x31
   140013e27:	(bad)  
   140013e28:	out    dx,eax
   140013e29:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013e2a:	(bad)  
   140013e2b:	jmp    rdx
   140013e2d:	xchg   esi,eax
   140013e2e:	(bad)  
   140013e2f:	(bad)  
   140013e30:	jmp    0xfc00b8f3
   140013e35:	sub    BYTE PTR [rdi],0xff
	...
   140013e50:	mov    ah,0x73
   140013e52:	(bad)  
   140013e53:	jae    0x140013e04
   140013e55:	ins    BYTE PTR es:[rdi],dx
   140013e56:	adc    al,0xff
   140013e58:	in     al,dx
   140013e59:	ret    0xf072
   140013e5c:	icebp  
   140013e5d:	mov    ah,0x3a
   140013e5f:	(bad)  
   140013e60:	stc    
   140013e61:	mov    ebp,0xc1fcff41
   140013e66:	rex.R (bad) 
   140013e68:	sti    
   140013e69:	(bad)  
   140013e6a:	push   rbx
   140013e6b:	push   rbx
   140013e6d:	mov    ecx,0xcdf1ff49
   140013e72:	mov    edi,?
   140013e74:	mov    ebx,0xff2f80
	...
   140013e91:	add    BYTE PTR [rax],al
   140013e93:	add    BYTE PTR [rbx+rsi*2+0x6caf731e],dh
   140013e9a:	adc    al,0xff
   140013e9c:	out    dx,al
   140013e9d:	ret    
   140013e9e:	jb     0x140013e91
   140013ea0:	mov    esp,0xbcff1e78
   140013ea5:	js     0x140013ec5
   140013ea7:	(bad)  
   140013ea8:	mov    esp,0xbcff1e78
   140013ead:	js     0x140013ecd
   140013eaf:	(bad)  
   140013eb0:	mov    esp,0xb9ff1e78
   140013eb5:	jge    0x140013ee2
   140013eb7:	mov    bh,0x0
	...
   140013ed5:	add    BYTE PTR [rax],al
   140013ed7:	add    BYTE PTR [rbx+rsi*2+0x6caf731e],dh
   140013ede:	adc    al,0xff
   140013ee0:	mov    esp,0xff1e78
	...
   140013f19:	add    BYTE PTR [rax],al
   140013f1b:	add    BYTE PTR [rbx+rsi*2+0x74b9731e],dh
   140013f22:	sbb    edi,edi
	...
   140013f68:	cld    
   140013f69:	add    BYTE PTR [rax],al
   140013f6b:	add    dh,bh
   140013f6d:	add    BYTE PTR [rax],al
   140013f6f:	add    bh,bh
   140013f71:	(bad)  
   140013f72:	add    BYTE PTR [rax],al
   140013f74:	call   FWORD PTR [rdi+0x0]
   140013f7a:	add    DWORD PTR [rax],eax
   140013f7c:	or     eax,0x10303000
   140013f81:	add    BYTE PTR [rcx],al
   140013f83:	add    BYTE PTR [rax+rax*1],al
   140013f86:	push   0x1000006
   140013f8b:	add    BYTE PTR [rax],ah
   140013f8d:	and    BYTE PTR [rax],dl
   140013f8f:	add    BYTE PTR [rcx],al
   140013f91:	add    BYTE PTR [rax+rax*1],al
   140013f94:	call   0x142013f9b
   140013f99:	add    BYTE PTR [rax],bl
   140013f9b:	sbb    BYTE PTR [rax],dl
   140013f9d:	add    BYTE PTR [rcx],al
   140013f9f:	add    BYTE PTR [rax+rax*1],al
   140013fa2:	call   0x143013fa8
   140013fa7:	add    BYTE PTR [rax],dl
   140013fa9:	adc    BYTE PTR [rax],dl
   140013fab:	add    BYTE PTR [rcx],al
   140013fad:	add    BYTE PTR [rax+rax*1],al
   140013fb0:	sub    BYTE PTR [rcx],al
   140013fb2:	add    BYTE PTR [rax],al
   140013fb4:	add    al,0x0
   140013fb6:	xor    BYTE PTR [rax],dh
   140013fb8:	add    BYTE PTR [rax],al
   140013fba:	add    DWORD PTR [rax],eax
   140013fbc:	or     BYTE PTR [rax],al
   140013fbe:	test   al,0xe
   140013fc0:	add    BYTE PTR [rax],al
   140013fc2:	add    eax,0x202000
   140013fc7:	add    BYTE PTR [rcx],al
   140013fc9:	add    BYTE PTR [rax],cl
   140013fcb:	add    BYTE PTR [rax+0x6000008],ch
   140013fd1:	add    BYTE PTR [rax],bl
   140013fd3:	sbb    BYTE PTR [rax],al
   140013fd5:	add    BYTE PTR [rcx],al
   140013fd7:	add    BYTE PTR [rax],cl
   140013fd9:	add    al,cl
   140013fdb:	(bad)  
   140013fdc:	add    BYTE PTR [rax],al
   140013fde:	(bad)  
   140013fdf:	add    BYTE PTR [rax],dl
   140013fe1:	adc    BYTE PTR [rax],al
   140013fe3:	add    BYTE PTR [rcx],al
   140013fe5:	add    BYTE PTR [rax],cl
   140013fe7:	add    BYTE PTR [rax+0x5],ch
   140013fea:	add    BYTE PTR [rax],al
   140013fec:	or     BYTE PTR [rax],al
   140013fee:	add    BYTE PTR [rax],al
   140013ff0:	add    BYTE PTR [rax],al
   140013ff2:	add    DWORD PTR [rax],eax
   140013ff4:	and    BYTE PTR [rax],al
   140013ff6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013ff7:	xor    eax,DWORD PTR [rax]
   140013ff9:	add    BYTE PTR [rcx],cl
   140013ffb:	add    BYTE PTR [rax],dh
   140013ffd:	xor    BYTE PTR [rax],al
   140013fff:	add    BYTE PTR [rcx],al
   140014001:	add    BYTE PTR [rax],ah
   140014003:	add    BYTE PTR [rax+0xa000025],ch
   140014009:	add    BYTE PTR [rax],ah
   14001400b:	and    BYTE PTR [rax],al
   14001400d:	add    BYTE PTR [rcx],al
   14001400f:	add    BYTE PTR [rax],ah
   140014011:	add    BYTE PTR [rax+0xb000010],ch
   140014017:	add    BYTE PTR [rax],bl
   140014019:	sbb    BYTE PTR [rax],al
   14001401b:	add    BYTE PTR [rcx],al
   14001401d:	add    BYTE PTR [rax],ah
   14001401f:	add    BYTE PTR [rax+0xc000009],cl
   140014025:	add    BYTE PTR [rax],dl
   140014027:	adc    BYTE PTR [rax],al
   140014029:	add    BYTE PTR [rcx],al
   14001402b:	add    BYTE PTR [rax],ah
   14001402d:	add    BYTE PTR [rax+0x4],ch
   140014030:	add    BYTE PTR [rax],al
   140014032:	or     eax,0x0
   140014037:	add    BYTE PTR [rbx+rax*1+0x34],ch
   14001403e:	push   rsi
   14001403f:	add    BYTE PTR [rbx+0x0],dl
   140014042:	pop    rdi
   140014043:	add    BYTE PTR [rsi+0x0],dl
   140014046:	add    BYTE PTR [r10+0x0],r10b
   14001404a:	push   rbx
   14001404b:	add    BYTE PTR [rcx+0x0],cl
   14001404e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140014052:	pop    rdi
   140014053:	add    BYTE PTR [rcx+0x0],cl
   140014056:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001405a:	rex.WRXB add BYTE PTR [r8],r8b
   14001405d:	add    BYTE PTR [rax],al
   14001405f:	add    BYTE PTR [rbp+0xfeef04],bh
   140014065:	add    BYTE PTR [rcx],al
   140014067:	add    BYTE PTR [rax],al
   140014069:	add    BYTE PTR [rdx],cl
   14001406b:	add    BYTE PTR [rax],al
   14001406d:	add    BYTE PTR [rax],bpl
   140014070:	add    BYTE PTR [rax],al
   140014072:	or     al,BYTE PTR [rax]
   140014074:	add    BYTE PTR [rax+0x0],al
   140014077:	sub    BYTE PTR [rdi],bh
   140014079:	add    BYTE PTR [rax],al
   14001407b:	add    BYTE PTR [rax],al
   14001407d:	add    BYTE PTR [rax],al
   14001407f:	add    BYTE PTR [rax+rax*1],al
   140014082:	add    al,0x0
   140014084:	add    DWORD PTR [rax],eax
	...
   140014092:	add    BYTE PTR [rax],al
   140014094:	or     al,BYTE PTR [rbx]
   140014096:	add    BYTE PTR [rax],al
   140014098:	add    DWORD PTR [rax],eax
   14001409a:	push   rbx
   14001409b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001409f:	add    BYTE PTR [rcx+0x0],ch
   1400140a2:	outs   dx,BYTE PTR ds:[rsi]
   1400140a3:	add    BYTE PTR [rdi+0x0],ah
   1400140a6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400140aa:	ins    BYTE PTR es:[rdi],dx
   1400140ab:	add    BYTE PTR [rbp+0x0],ah
   1400140ae:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400140b2:	data16 add BYTE PTR [rdi+0x0],ch
   1400140b6:	add    BYTE PTR [rax],al
   1400140b8:	out    0x2,al
   1400140ba:	add    BYTE PTR [rax],al
   1400140bc:	add    DWORD PTR [rax],eax
   1400140be:	xor    BYTE PTR [rax],al
   1400140c0:	xor    al,0x0
   1400140c2:	xor    BYTE PTR [rax],al
   1400140c4:	cmp    DWORD PTR [rax],eax
   1400140c6:	xor    BYTE PTR [rax],al
   1400140c8:	xor    al,0x0
   1400140ca:	rex.X add BYTE PTR [rax],sil
   1400140cd:	add    BYTE PTR [rax],al
   1400140cf:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400140d3:	add    BYTE PTR [rcx],al
   1400140d5:	add    BYTE PTR [rbx+0x0],al
   1400140d8:	outs   dx,DWORD PTR ds:[rsi]
   1400140d9:	add    BYTE PTR [rbp+0x0],ch
   1400140dc:	jo     0x1400140de
   1400140de:	(bad)  
   1400140df:	add    BYTE PTR [rsi+0x0],ch
   1400140e2:	jns    0x1400140e4
   1400140e4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400140e8:	ins    DWORD PTR es:[rdi],dx
   1400140e9:	add    BYTE PTR [rbp+0x0],ah
   1400140ec:	add    BYTE PTR [rax],al
   1400140ee:	add    BYTE PTR [rax],al
   1400140f0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400140f4:	movsxd eax,DWORD PTR [rax]
   1400140f6:	jb     0x1400140f8
   1400140f8:	outs   dx,DWORD PTR ds:[rsi]
   1400140f9:	add    BYTE PTR [rbx+0x0],dh
   1400140fc:	outs   dx,DWORD PTR ds:[rsi]
   1400140fd:	add    BYTE PTR [rsi+0x0],ah
   140014100:	je     0x140014102
   140014102:	and    BYTE PTR [rax],al
   140014104:	rex.XB add BYTE PTR [r15+0x0],bpl
   140014108:	jb     0x14001410a
   14001410a:	jo     0x14001410c
   14001410c:	outs   dx,DWORD PTR ds:[rsi]
   14001410d:	add    BYTE PTR [rdx+0x0],dh
   140014110:	(bad)  
   140014111:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014115:	add    BYTE PTR [rdi+0x0],ch
   140014118:	outs   dx,BYTE PTR ds:[rsi]
   140014119:	add    BYTE PTR [rax],al
   14001411b:	add    BYTE PTR [rsi+0x0],ch
   14001411e:	and    eax,DWORD PTR [rax]
   140014120:	add    DWORD PTR [rax],eax
   140014122:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140014126:	ins    BYTE PTR es:[rdi],dx
   140014127:	add    BYTE PTR [rbp+0x0],ah
   14001412a:	add    BYTE PTR [rbp+0x0],r12b
   14001412e:	jae    0x140014130
   140014130:	movsxd eax,DWORD PTR [rax]
   140014132:	jb     0x140014134
   140014134:	imul   eax,DWORD PTR [rax],0x740070
   14001413a:	imul   eax,DWORD PTR [rax],0x6e006f
   140014140:	add    BYTE PTR [rax],al
   140014142:	add    BYTE PTR [rax],al
   140014144:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014148:	movsxd eax,DWORD PTR [rax]
   14001414a:	jb     0x14001414c
   14001414c:	outs   dx,DWORD PTR ds:[rsi]
   14001414d:	add    BYTE PTR [rbx+0x0],dh
   140014150:	outs   dx,DWORD PTR ds:[rsi]
   140014151:	add    BYTE PTR [rsi+0x0],ah
   140014154:	je     0x140014156
   140014156:	and    BYTE PTR [rax],al
   140014158:	sub    BYTE PTR [rax],al
   14001415a:	push   rdx
   14001415b:	add    BYTE PTR [rcx],ch
   14001415d:	add    BYTE PTR [rax],ah
   14001415f:	add    BYTE PTR [rbx+0x0],al
   140014162:	outs   dx,DWORD PTR ds:[rsi]
   140014163:	add    BYTE PTR [rsi+0x0],ch
   140014166:	je     0x140014168
   140014168:	(bad)  
   140014169:	add    BYTE PTR [rbx+0x0],ah
   14001416c:	je     0x14001416e
   14001416e:	jae    0x140014170
   140014170:	and    BYTE PTR [rax],al
   140014172:	rex.WB add BYTE PTR [r13+0x0],bpl
   140014176:	jo     0x140014178
   140014178:	outs   dx,DWORD PTR ds:[rsi]
   140014179:	add    BYTE PTR [rdx+0x0],dh
   14001417c:	je     0x14001417e
   14001417e:	and    BYTE PTR [rax],al
   140014180:	push   rsp
   140014181:	add    BYTE PTR [rdi+0x0],ch
   140014184:	outs   dx,DWORD PTR ds:[rsi]
   140014185:	add    BYTE PTR [rax+rax*1+0x0],ch
   140014189:	add    BYTE PTR [rax],al
   14001418b:	add    BYTE PTR [rsi+0x0],ah
   14001418e:	and    eax,DWORD PTR [rax]
   140014190:	add    DWORD PTR [rax],eax
   140014192:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140014196:	ins    BYTE PTR es:[rdi],dx
   140014197:	add    BYTE PTR [rbp+0x0],ah
   14001419a:	push   rsi
   14001419b:	add    BYTE PTR [rbp+0x0],ah
   14001419e:	jb     0x1400141a0
   1400141a0:	jae    0x1400141a2
   1400141a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400141a8:	add    BYTE PTR [rax],al
   1400141aa:	add    BYTE PTR [rax],al
   1400141ac:	xor    DWORD PTR [rax],eax
   1400141ae:	xor    BYTE PTR [rax],al
   1400141b0:	add    BYTE PTR cs:[rax],dh
   1400141b3:	add    BYTE PTR [rsi],ch
   1400141b5:	add    BYTE PTR [rcx],dh
   1400141b7:	add    BYTE PTR [rax],dh
   1400141b9:	add    BYTE PTR [rdx],dh
   1400141bb:	add    BYTE PTR [rax+rax*1],dh
   1400141be:	xor    BYTE PTR [rax],al
   1400141c0:	add    BYTE PTR cs:[rcx],dh
   1400141c3:	add    BYTE PTR [rsi],dh
   1400141c5:	add    BYTE PTR [rbx],dh
   1400141c7:	add    BYTE PTR [rax],bh
   1400141c9:	add    BYTE PTR [rax+rax*1],dh
   1400141cc:	and    BYTE PTR [rax],al
   1400141ce:	sub    BYTE PTR [rax],al
   1400141d0:	je     0x1400141d2
   1400141d2:	push   0x2e003100
   1400141d7:	add    BYTE PTR [rcx],dh
   1400141d9:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770171df
   1400141df:	add    BYTE PTR [rax],dh
   1400141e1:	add    BYTE PTR [rcx],bh
   1400141e3:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770172e9
   1400141e9:	add    BYTE PTR [rax],dh
   1400141eb:	add    BYTE PTR [rax],dh
   1400141ed:	add    BYTE PTR [rcx],ch
   1400141ef:	add    BYTE PTR [rax],al
   1400141f1:	add    BYTE PTR [rax],al
   1400141f3:	add    BYTE PTR [rsi],dh
   1400141f5:	add    BYTE PTR [rbx],cl
   1400141f7:	add    BYTE PTR [rcx],al
   1400141f9:	add    BYTE PTR [rcx+0x0],cl
   1400141fc:	outs   dx,BYTE PTR ds:[rsi]
   1400141fd:	add    BYTE PTR [rax+rax*1+0x65],dh
   140014201:	add    BYTE PTR [rdx+0x0],dh
   140014204:	outs   dx,BYTE PTR ds:[rsi]
   140014205:	add    BYTE PTR [rcx+0x0],ah
   140014208:	ins    BYTE PTR es:[rdi],dx
   140014209:	add    BYTE PTR [rsi+0x0],cl
   14001420c:	(bad)  
   14001420d:	add    BYTE PTR [rbp+0x0],ch
   140014210:	add    BYTE PTR gs:[rax],al
   140014213:	add    BYTE PTR [rdi+0x0],dl
   140014216:	add    BYTE PTR [r10+0x0],al
   14001421a:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14001421e:	rex.RXB add BYTE PTR [r14],r13b
   140014221:	add    BYTE PTR [rbp+0x0],al
   140014224:	pop    rax
   140014225:	add    BYTE PTR [rbp+0x0],al
   140014228:	add    BYTE PTR [rax],al
   14001422a:	add    BYTE PTR [rax],al
   14001422c:	add    BYTE PTR [rax],0x2e
   14001422f:	add    BYTE PTR [rcx],al
   140014231:	add    BYTE PTR [rax+rax*1+0x65],cl
   140014235:	add    BYTE PTR [rdi+0x0],ah
   140014238:	(bad)  
   140014239:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001423d:	add    BYTE PTR [rdi+0x0],ch
   140014240:	jo     0x140014242
   140014242:	jns    0x140014244
   140014244:	jb     0x140014246
   140014246:	imul   eax,DWORD PTR [rax],0x680067
   14001424c:	je     0x14001424e
   14001424e:	add    BYTE PTR [rax],al
   140014250:	test   eax,0x4d002000
   140014255:	add    BYTE PTR [rcx+0x0],ch
   140014258:	movsxd eax,DWORD PTR [rax]
   14001425a:	jb     0x14001425c
   14001425c:	outs   dx,DWORD PTR ds:[rsi]
   14001425d:	add    BYTE PTR [rbx+0x0],dh
   140014260:	outs   dx,DWORD PTR ds:[rsi]
   140014261:	add    BYTE PTR [rsi+0x0],ah
   140014264:	je     0x140014266
   140014266:	and    BYTE PTR [rax],al
   140014268:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001426c:	jb     0x14001426e
   14001426e:	jo     0x140014270
   140014270:	outs   dx,DWORD PTR ds:[rsi]
   140014271:	add    BYTE PTR [rdx+0x0],dh
   140014274:	(bad)  
   140014275:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014279:	add    BYTE PTR [rdi+0x0],ch
   14001427c:	outs   dx,BYTE PTR ds:[rsi]
   14001427d:	add    BYTE PTR [rsi],ch
   14001427f:	add    BYTE PTR [rax],ah
   140014281:	add    BYTE PTR [rcx+0x0],al
   140014284:	ins    BYTE PTR es:[rdi],dx
   140014285:	add    BYTE PTR [rax+rax*1+0x20],ch
   140014289:	add    BYTE PTR [rdx+0x0],dh
   14001428c:	imul   eax,DWORD PTR [rax],0x680067
   140014292:	je     0x140014294
   140014294:	jae    0x140014296
   140014296:	and    BYTE PTR [rax],al
   140014298:	jb     0x14001429a
   14001429a:	add    BYTE PTR gs:[rbx+0x0],dh
   14001429e:	add    BYTE PTR gs:[rdx+0x0],dh
   1400142a2:	jbe    0x1400142a4
   1400142a4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400142a9:	add    BYTE PTR [rax],al
   1400142ab:	add    BYTE PTR [rsi],bh
   1400142ad:	add    BYTE PTR [rbx],cl
   1400142af:	add    BYTE PTR [rcx],al
   1400142b1:	add    BYTE PTR [rdi+0x0],cl
   1400142b4:	jb     0x1400142b6
   1400142b6:	imul   eax,DWORD PTR [rax],0x690067
   1400142bc:	outs   dx,BYTE PTR ds:[rsi]
   1400142bd:	add    BYTE PTR [rcx+0x0],ah
   1400142c0:	ins    BYTE PTR es:[rdi],dx
   1400142c1:	add    BYTE PTR [rsi+0x0],al
   1400142c4:	imul   eax,DWORD PTR [rax],0x65006c
   1400142ca:	outs   dx,BYTE PTR ds:[rsi]
   1400142cb:	add    BYTE PTR [rcx+0x0],ah
   1400142ce:	ins    DWORD PTR es:[rdi],dx
   1400142cf:	add    BYTE PTR [rbp+0x0],ah
   1400142d2:	add    BYTE PTR [rax],al
   1400142d4:	push   rdi
   1400142d5:	add    BYTE PTR [rcx+0x0],al
   1400142d8:	rex.X add BYTE PTR [rbp+0x0],cl
   1400142dc:	rex.WB add BYTE PTR [r15+0x0],al
   1400142e0:	add    BYTE PTR cs:[rbp+0x0],al
   1400142e4:	pop    rax
   1400142e5:	add    BYTE PTR [rbp+0x0],al
   1400142e8:	add    BYTE PTR [rax],al
   1400142ea:	add    BYTE PTR [rax],al
   1400142ec:	push   0x0
   1400142ee:	and    eax,0x50000100
   1400142f3:	add    BYTE PTR [rdx+0x0],dh
   1400142f6:	outs   dx,DWORD PTR ds:[rsi]
   1400142f7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400142fb:	add    BYTE PTR [rbx+0x0],ah
   1400142fe:	je     0x140014300
   140014300:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140014304:	ins    DWORD PTR es:[rdi],dx
   140014305:	add    BYTE PTR [rbp+0x0],ah
   140014308:	add    BYTE PTR [rax],al
   14001430a:	add    BYTE PTR [rax],al
   14001430c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140014310:	movsxd eax,DWORD PTR [rax]
   140014312:	jb     0x140014314
   140014314:	outs   dx,DWORD PTR ds:[rsi]
   140014315:	add    BYTE PTR [rbx+0x0],dh
   140014318:	outs   dx,DWORD PTR ds:[rsi]
   140014319:	add    BYTE PTR [rsi+0x0],ah
   14001431c:	je     0x14001431e
   14001431e:	scas   al,BYTE PTR es:[rdi]
   14001431f:	add    BYTE PTR [rax],ah
   140014321:	add    BYTE PTR [rdi+0x0],dl
   140014324:	imul   eax,DWORD PTR [rax],0x64006e
   14001432a:	outs   dx,DWORD PTR ds:[rsi]
   14001432b:	add    BYTE PTR [rdi+0x0],dh
   14001432e:	jae    0x140014330
   140014330:	scas   al,BYTE PTR es:[rdi]
   140014331:	add    BYTE PTR [rax],ah
   140014333:	add    BYTE PTR [rdi+0x0],cl
   140014336:	jo     0x140014338
   140014338:	add    BYTE PTR gs:[rdx+0x0],dh
   14001433c:	(bad)  
   14001433d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140014341:	add    BYTE PTR [rsi+0x0],ch
   140014344:	add    BYTE PTR [eax],ah
   140014347:	add    BYTE PTR [rbx+0x0],dl
   14001434a:	jns    0x14001434c
   14001434c:	jae    0x14001434e
   14001434e:	je     0x140014350
   140014350:	add    BYTE PTR gs:[rbp+0x0],ch
   140014354:	add    BYTE PTR [rax],al
   140014356:	add    BYTE PTR [rax],al
   140014358:	rex.RX add BYTE PTR [rcx],r10b
   14001435b:	add    BYTE PTR [rcx],al
   14001435d:	add    BYTE PTR [rax+0x0],dl
   140014360:	jb     0x140014362
   140014362:	outs   dx,DWORD PTR ds:[rsi]
   140014363:	add    BYTE PTR [rax+rax*1+0x75],ah
   140014367:	add    BYTE PTR [rbx+0x0],ah
   14001436a:	je     0x14001436c
   14001436c:	push   rsi
   14001436d:	add    BYTE PTR [rbp+0x0],ah
   140014370:	jb     0x140014372
   140014372:	jae    0x140014374
   140014374:	imul   eax,DWORD PTR [rax],0x6e006f
   14001437a:	add    BYTE PTR [rax],al
   14001437c:	xor    DWORD PTR [rax],eax
   14001437e:	xor    BYTE PTR [rax],al
   140014380:	add    BYTE PTR cs:[rax],dh
   140014383:	add    BYTE PTR [rsi],ch
   140014385:	add    BYTE PTR [rcx],dh
   140014387:	add    BYTE PTR [rax],dh
   140014389:	add    BYTE PTR [rdx],dh
   14001438b:	add    BYTE PTR [rax+rax*1],dh
   14001438e:	xor    BYTE PTR [rax],al
   140014390:	add    BYTE PTR cs:[rcx],dh
   140014393:	add    BYTE PTR [rsi],dh
   140014395:	add    BYTE PTR [rbx],dh
   140014397:	add    BYTE PTR [rax],bh
   140014399:	add    BYTE PTR [rax+rax*1],dh
   14001439c:	add    BYTE PTR [rax],al
   14001439e:	add    BYTE PTR [rax],al
   1400143a0:	add    BYTE PTR [rax],r8b
   1400143a3:	add    BYTE PTR [rcx],al
   1400143a5:	add    BYTE PTR [rsi+0x0],dl
   1400143a8:	(bad)  
   1400143a9:	add    BYTE PTR [rdx+0x0],dh
   1400143ac:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400143b0:	ins    BYTE PTR es:[rdi],dx
   1400143b1:	add    BYTE PTR [rbp+0x0],ah
   1400143b4:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400143b8:	data16 add BYTE PTR [rdi+0x0],ch
   1400143bc:	add    BYTE PTR [rax],al
   1400143be:	add    BYTE PTR [rax],al
   1400143c0:	and    al,0x0
   1400143c2:	add    al,0x0
   1400143c4:	add    BYTE PTR [rax],al
   1400143c6:	push   rsp
   1400143c7:	add    BYTE PTR [rdx+0x0],dh
   1400143ca:	(bad)  
   1400143cb:	add    BYTE PTR [rsi+0x0],ch
   1400143ce:	jae    0x1400143d0
   1400143d0:	ins    BYTE PTR es:[rdi],dx
   1400143d1:	add    BYTE PTR [rcx+0x0],ah
   1400143d4:	je     0x1400143d6
   1400143d6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400143dc:	add    BYTE PTR [rax],al
   1400143de:	add    BYTE PTR [rax],al
   1400143e0:	or     DWORD PTR [rax+rsi*4],eax
   1400143e3:	add    al,0x0
   1400143e5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140015000 <.reloc>:
   140015000:	add    BYTE PTR [rax+0x0],dl
   140015003:	add    BYTE PTR [rax],ah
   140015005:	add    BYTE PTR [rax],al
   140015007:	add    BYTE PTR [rax-0x5d],bl
   14001500a:	(bad)  
   14001500b:	movabs ds:0xa3e0a390a388a370,eax
   140015014:	call   0x130a828bc
   140015019:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001501a:	clc    
   14001501b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001501c:	.byte 0x0
   14001501d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
	...
