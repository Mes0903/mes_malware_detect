
a71a16c4b2d56acc3f8e2a2c576a0b9f1fc848e02110ba70e82c3708898a3328.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x4485]        # 0x4054a0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x4486]        # 0x4054b0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x4489]        # 0x4054c0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x444c]        # 0x405490
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x42cf]        # 0x405320
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4421]        # 0x405480
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4031f0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402150
  401081:	mov    rdx,QWORD PTR [rip+0x4358]        # 0x4053e0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x433e]        # 0x4053d0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x43a4]        # 0x405440
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x42ab]        # 0x405350
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401d30
  4010af:	mov    rax,QWORD PTR [rip+0x421a]        # 0x4052d0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4031f0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xf09]        # 0x402030
  401127:	call   0x402020
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4305]        # 0x405470
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4295]        # 0x405430
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403208
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x42ba]        # 0x405480
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x41bb]        # 0x4053b0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x818a]        # 0x40938c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x4197]        # 0x4053c0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x40ac]        # 0x405310
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402340
  40127d:	lea    rcx,[rip+0x165c]        # 0x4028e0
  401284:	call   QWORD PTR [rip+0x80fa]        # 0x409384
  40128a:	mov    rdx,QWORD PTR [rip+0x40df]        # 0x405370
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4027f0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403230
  4012a5:	call   0x402130
  4012aa:	mov    rax,QWORD PTR [rip+0x406f]        # 0x405320
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4081]        # 0x405340
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x403140
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403128
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x403140
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x403138
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401d00
  4013bb:	mov    rax,QWORD PTR [rip+0x3f6e]        # 0x405330
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x403370
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4031d8
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x3f89]        # 0x4053c0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4031e0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x3f9d]        # 0x405400
  401463:	mov    rcx,QWORD PTR [rip+0x3f86]        # 0x4053f0
  40146a:	call   0x4031b8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e93]        # 0x40932c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x3f79]        # 0x405420
  4014a7:	mov    rcx,QWORD PTR [rip+0x3f62]        # 0x405410
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4031b8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x403160
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x3fa5]        # 0x405480
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401d40
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x3f75]        # 0x405480
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401d40
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r12
  401532:	push   rbp
  401533:	push   rdi
  401534:	push   rsi
  401535:	push   rbx
  401536:	sub    rsp,0x50
  40153a:	mov    rdi,QWORD PTR [rip+0x7dcb]        # 0x40930c
  401541:	mov    esi,ecx
  401543:	mov    ebx,edx
  401545:	call   rdi
  401547:	mov    ecx,esi
  401549:	mov    r12,rax
  40154c:	or     bl,0x80
  40154f:	call   QWORD PTR [rip+0x7edf]        # 0x409434
  401555:	mov    rbp,rax
  401558:	call   rdi
  40155a:	lea    r9,[rsp+0x48]
  40155f:	mov    r8,r12
  401562:	mov    rdx,rbp
  401565:	mov    rcx,rax
  401568:	mov    DWORD PTR [rsp+0x30],0x2
  401570:	mov    DWORD PTR [rsp+0x28],0x0
  401578:	mov    DWORD PTR [rsp+0x20],0x0
  401580:	call   QWORD PTR [rip+0x7d6e]        # 0x4092f4
  401586:	mov    ecx,esi
  401588:	call   0x4030f0
  40158d:	mov    rcx,QWORD PTR [rsp+0x48]
  401592:	mov    edx,ebx
  401594:	call   QWORD PTR [rip+0x7eba]        # 0x409454
  40159a:	add    rsp,0x50
  40159e:	pop    rbx
  40159f:	pop    rsi
  4015a0:	pop    rdi
  4015a1:	pop    rbp
  4015a2:	pop    r12
  4015a4:	ret    
  4015a5:	nop
  4015a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015b0:	push   r15
  4015b2:	push   r14
  4015b4:	push   r13
  4015b6:	push   r12
  4015b8:	push   rbp
  4015b9:	push   rdi
  4015ba:	push   rsi
  4015bb:	push   rbx
  4015bc:	sub    rsp,0x68
  4015c0:	mov    QWORD PTR [rsp+0x58],0x0
  4015c9:	call   QWORD PTR [rip+0x7d35]        # 0x409304
  4015cf:	lea    rdx,[rsp+0x4c]
  4015d4:	mov    rcx,rax
  4015d7:	call   QWORD PTR [rip+0x7f37]        # 0x409514
  4015dd:	mov    rdi,rax
  4015e0:	mov    eax,DWORD PTR [rsp+0x4c]
  4015e4:	cmp    eax,0x9
  4015e7:	jle    0x401a26
  4015ed:	add    eax,0x1
  4015f0:	mov    edx,0x8
  4015f5:	xor    esi,esi
  4015f7:	movsxd rcx,eax
  4015fa:	call   0x401b80
  4015ff:	mov    rbx,rax
  401602:	mov    eax,DWORD PTR [rsp+0x4c]
  401606:	test   eax,eax
  401608:	jle    0x401b32
  40160e:	xchg   ax,ax
  401610:	mov    rcx,QWORD PTR [rdi+rsi*8]
  401614:	xor    r9d,r9d
  401617:	xor    r8d,r8d
  40161a:	mov    QWORD PTR [rsp+0x20],0x0
  401623:	mov    edx,0xffffffff
  401628:	call   0x401b70
  40162d:	mov    QWORD PTR [rbx+rsi*8],rax
  401631:	lea    eax,[rsi+0x1]
  401634:	add    rsi,0x1
  401638:	cmp    DWORD PTR [rsp+0x4c],eax
  40163c:	jg     0x401610
  40163e:	cdqe   
  401640:	shl    rax,0x3
  401644:	mov    QWORD PTR [rbx+rax*1],0x0
  40164c:	mov    rcx,QWORD PTR [rbx+0x8]
  401650:	xor    r12d,r12d
  401653:	call   0x403170
  401658:	mov    rsi,QWORD PTR [rbx+0x8]
  40165c:	mov    r13d,eax
  40165f:	mov    rcx,rsi
  401662:	call   0x403128
  401667:	cmp    BYTE PTR [rsi+rax*1-0x1],0x23
  40166c:	mov    rcx,QWORD PTR [rbx+0x10]
  401670:	sete   r12b
  401674:	call   0x403170
  401679:	mov    rcx,QWORD PTR [rbx+0x18]
  40167d:	mov    ebp,eax
  40167f:	add    r12d,0xa
  401683:	movzx  eax,BYTE PTR [rcx]
  401686:	cmp    al,0x2d
  401688:	je     0x4016a1
  40168a:	cmp    al,0x7a
  40168c:	je     0x401aea
  401692:	call   0x403170
  401697:	test   eax,eax
  401699:	mov    esi,eax
  40169b:	jne    0x401b02
  4016a1:	mov    rcx,QWORD PTR [rbx+0x20]
  4016a5:	movzx  eax,BYTE PTR [rcx]
  4016a8:	cmp    al,0x2d
  4016aa:	je     0x4016d3
  4016ac:	cmp    al,0x7a
  4016ae:	je     0x401ac9
  4016b4:	call   0x403170
  4016b9:	cmp    eax,0x1
  4016bc:	mov    esi,eax
  4016be:	je     0x4016d3
  4016c0:	mov    ecx,esi
  4016c2:	mov    edx,0x1
  4016c7:	call   0x4030f8
  4016cc:	mov    ecx,esi
  4016ce:	call   0x4030f0
  4016d3:	mov    rcx,QWORD PTR [rbx+0x28]
  4016d7:	movzx  eax,BYTE PTR [rcx]
  4016da:	cmp    al,0x2d
  4016dc:	je     0x401705
  4016de:	cmp    al,0x7a
  4016e0:	je     0x401a9e
  4016e6:	call   0x403170
  4016eb:	cmp    eax,0x2
  4016ee:	mov    esi,eax
  4016f0:	je     0x401705
  4016f2:	mov    ecx,esi
  4016f4:	mov    edx,0x2
  4016f9:	call   0x4030f8
  4016fe:	mov    ecx,esi
  401700:	call   0x4030f0
  401705:	mov    rax,QWORD PTR [rbx+0x30]
  401709:	cmp    BYTE PTR [rax],0x2d
  40170c:	je     0x401a4d
  401712:	mov    rcx,QWORD PTR [rdi+0x30]
  401716:	call   QWORD PTR [rip+0x7d48]        # 0x409464
  40171c:	test   eax,eax
  40171e:	js     0x401b60
  401724:	mov    rax,QWORD PTR [rbx+0x38]
  401728:	cmp    BYTE PTR [rax],0x79
  40172b:	je     0x401a64
  401731:	mov    edx,0x1
  401736:	mov    ecx,r13d
  401739:	movsxd r12,r12d
  40173c:	call   0x401530
  401741:	xor    edx,edx
  401743:	mov    ecx,ebp
  401745:	mov    DWORD PTR [rsp+0x34],eax
  401749:	call   0x401530
  40174e:	mov    DWORD PTR [rsp+0x38],eax
  401752:	mov    rax,QWORD PTR [rbx+0x48]
  401756:	lea    r15,[rdi+r12*8]
  40175a:	mov    esi,0x8
  40175f:	cmp    BYTE PTR [rax],0x77
  401762:	setne  al
  401765:	xor    ebp,ebp
  401767:	cmp    QWORD PTR [r15],0x0
  40176b:	movzx  eax,al
  40176e:	mov    DWORD PTR [rsp+0x3c],eax
  401772:	jne    0x401783
  401774:	jmp    0x401b39
  401779:	nop    DWORD PTR [rax+0x0]
  401780:	mov    rsi,rax
  401783:	lea    rax,[rsi+0x8]
  401787:	add    ebp,0x1
  40178a:	cmp    QWORD PTR [r15+rax*1-0x8],0x0
  401790:	jne    0x401780
  401792:	lea    ecx,[rbp+0x1]
  401795:	mov    edx,0x8
  40179a:	movsxd rcx,ecx
  40179d:	call   0x401b80
  4017a2:	mov    r12,rax
  4017a5:	mov    r14,rax
  4017a8:	lea    eax,[rbp-0x1]
  4017ab:	lea    rbp,[r12+rax*8+0x8]
  4017b0:	mov    rdx,QWORD PTR [r15]
  4017b3:	movzx  eax,WORD PTR [rdx]
  4017b6:	test   ax,ax
  4017b9:	je     0x401a0c
  4017bf:	xor    r13d,r13d
  4017c2:	xor    ecx,ecx
  4017c4:	jmp    0x4017f9
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	cmp    ax,0x20
  4017d4:	je     0x4017ff
  4017d6:	cmp    ax,0x22
  4017da:	je     0x401894
  4017e0:	cmp    ax,0x5c
  4017e4:	je     0x4018a0
  4017ea:	add    rdx,0x2
  4017ee:	movzx  eax,WORD PTR [rdx]
  4017f1:	add    ecx,0x1
  4017f4:	test   ax,ax
  4017f7:	je     0x401814
  4017f9:	cmp    ax,0x9
  4017fd:	jne    0x4017d0
  4017ff:	add    rdx,0x2
  401803:	movzx  eax,WORD PTR [rdx]
  401806:	add    ecx,0x1
  401809:	mov    r13d,0x1
  40180f:	test   ax,ax
  401812:	jne    0x4017f9
  401814:	lea    ecx,[rcx+r13*2+0x1]
  401819:	mov    edx,0x2
  40181e:	movsxd rcx,ecx
  401821:	call   0x401b80
  401826:	test   r13d,r13d
  401829:	mov    QWORD PTR [r14],rax
  40182c:	mov    rcx,QWORD PTR [r15]
  40182f:	je     0x4019e0
  401835:	mov    edx,0x22
  40183a:	lea    r9,[rax+0x2]
  40183e:	mov    WORD PTR [rax],dx
  401841:	movzx  edx,WORD PTR [rcx]
  401844:	test   dx,dx
  401847:	je     0x401916
  40184d:	mov    r10d,0x1
  401853:	jmp    0x40187a
  401855:	cmp    dx,0x5c
  401859:	movzx  r8d,WORD PTR [rcx]
  40185d:	mov    rax,r9
  401860:	je     0x4018d0
  401862:	add    rcx,0x2
  401866:	mov    WORD PTR [rax],r8w
  40186a:	lea    r9,[rax+0x2]
  40186e:	movzx  edx,WORD PTR [rcx]
  401871:	test   dx,dx
  401874:	je     0x401911
  40187a:	cmp    dx,0x22
  40187e:	jne    0x401855
  401880:	mov    r13d,0x5c
  401886:	lea    rax,[r9+0x2]
  40188a:	mov    WORD PTR [r9],r13w
  40188e:	movzx  r8d,WORD PTR [rcx]
  401892:	jmp    0x401862
  401894:	add    ecx,0x1
  401897:	jmp    0x4017ea
  40189c:	nop    DWORD PTR [rax+0x0]
  4018a0:	movzx  r8d,WORD PTR [rdx]
  4018a4:	cmp    r8w,0x5c
  4018a9:	jne    0x4018bf
  4018ab:	mov    rax,rdx
  4018ae:	xchg   ax,ax
  4018b0:	add    rax,0x2
  4018b4:	movzx  r8d,WORD PTR [rax]
  4018b8:	cmp    r8w,0x5c
  4018bd:	je     0x4018b0
  4018bf:	xor    eax,eax
  4018c1:	cmp    r8w,0x22
  4018c6:	sete   al
  4018c9:	add    ecx,eax
  4018cb:	jmp    0x4017ea
  4018d0:	cmp    r8w,0x5c
  4018d5:	jne    0x4019f7
  4018db:	mov    rax,rcx
  4018de:	xchg   ax,ax
  4018e0:	add    rax,0x2
  4018e4:	movzx  edx,WORD PTR [rax]
  4018e7:	cmp    dx,0x5c
  4018eb:	je     0x4018e0
  4018ed:	cmp    dx,0x22
  4018f1:	mov    rax,r9
  4018f4:	jne    0x401862
  4018fa:	mov    r11d,0x5c
  401900:	add    rax,0x2
  401904:	mov    WORD PTR [r9],r11w
  401908:	movzx  r8d,WORD PTR [rcx]
  40190c:	jmp    0x401862
  401911:	test   r10d,r10d
  401914:	je     0x401925
  401916:	mov    r8d,0x22
  40191c:	add    r9,0x2
  401920:	mov    WORD PTR [r9-0x2],r8w
  401925:	add    r14,0x8
  401929:	xor    ecx,ecx
  40192b:	add    r15,0x8
  40192f:	cmp    r14,rbp
  401932:	mov    WORD PTR [r9],cx
  401936:	jne    0x4017b0
  40193c:	mov    rax,QWORD PTR [rbx+0x40]
  401940:	mov    QWORD PTR [r12+rsi*1],0x0
  401948:	cmp    BYTE PTR [rax],0x79
  40194b:	je     0x401b17
  401951:	mov    rdx,QWORD PTR [rdi+0x50]
  401955:	mov    r8,r12
  401958:	mov    ecx,DWORD PTR [rsp+0x3c]
  40195c:	call   QWORD PTR [rip+0x7b0a]        # 0x40946c
  401962:	mov    QWORD PTR [rsp+0x50],rax
  401967:	call   QWORD PTR [rip+0x7aaf]        # 0x40941c
  40196d:	mov    edx,DWORD PTR [rax]
  40196f:	test   edx,edx
  401971:	je     0x40197f
  401973:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
  401979:	je     0x401b52
  40197f:	mov    esi,DWORD PTR [rsp+0x34]
  401983:	lea    rdx,[rsp+0x58]
  401988:	mov    r8d,0x8
  40198e:	mov    ecx,esi
  401990:	call   0x403110
  401995:	lea    rdx,[rsp+0x50]
  40199a:	mov    ecx,esi
  40199c:	mov    r8d,0x8
  4019a2:	call   0x403110
  4019a7:	mov    ecx,DWORD PTR [rsp+0x38]
  4019ab:	lea    rdx,[rsp+0x4b]
  4019b0:	mov    r8d,0x1
  4019b6:	call   0x403108
  4019bb:	mov    rcx,rdi
  4019be:	call   QWORD PTR [rip+0x7990]        # 0x409354
  4019c4:	mov    rcx,rbx
  4019c7:	call   0x401b78
  4019cc:	xor    eax,eax
  4019ce:	add    rsp,0x68
  4019d2:	pop    rbx
  4019d3:	pop    rsi
  4019d4:	pop    rdi
  4019d5:	pop    rbp
  4019d6:	pop    r12
  4019d8:	pop    r13
  4019da:	pop    r14
  4019dc:	pop    r15
  4019de:	ret    
  4019df:	nop
  4019e0:	mov    r9,rax
  4019e3:	movzx  edx,WORD PTR [rcx]
  4019e6:	xor    r10d,r10d
  4019e9:	test   dx,dx
  4019ec:	jne    0x40187a
  4019f2:	jmp    0x401925
  4019f7:	mov    edx,r8d
  4019fa:	mov    rax,r9
  4019fd:	cmp    dx,0x22
  401a01:	jne    0x401862
  401a07:	jmp    0x4018fa
  401a0c:	mov    ecx,0x1
  401a11:	mov    edx,0x2
  401a16:	call   0x401b80
  401a1b:	mov    QWORD PTR [r14],rax
  401a1e:	mov    r9,rax
  401a21:	mov    rcx,QWORD PTR [r15]
  401a24:	jmp    0x4019e3
  401a26:	lea    rax,[rip+0x35ee]        # 0x40501b
  401a2d:	lea    r9,[rip+0x35f9]        # 0x40502d
  401a34:	lea    rdx,[rip+0x35ca]        # 0x405005
  401a3b:	mov    r8d,0xd8
  401a41:	xor    ecx,ecx
  401a43:	mov    QWORD PTR [rsp+0x20],rax
  401a48:	call   0x401b88
  401a4d:	cmp    BYTE PTR [rax+0x1],0x0
  401a51:	jne    0x401712
  401a57:	mov    rax,QWORD PTR [rbx+0x38]
  401a5b:	cmp    BYTE PTR [rax],0x79
  401a5e:	jne    0x401731
  401a64:	mov    esi,0x3
  401a69:	mov    r14,QWORD PTR [rip+0x79c4]        # 0x409434
  401a70:	jmp    0x401a81
  401a72:	add    esi,0x1
  401a75:	cmp    esi,0x3e8
  401a7b:	je     0x401731
  401a81:	cmp    esi,ebp
  401a83:	je     0x401a72
  401a85:	cmp    esi,r13d
  401a88:	je     0x401a72
  401a8a:	mov    ecx,esi
  401a8c:	call   r14
  401a8f:	cmp    rax,0xffffffffffffffff
  401a93:	je     0x401a72
  401a95:	mov    ecx,esi
  401a97:	call   0x4030f0
  401a9c:	jmp    0x401a72
  401a9e:	lea    rcx,[rip+0x355b]        # 0x405000
  401aa5:	mov    edx,0x1
  401aaa:	call   0x403100
  401aaf:	cmp    eax,0x2
  401ab2:	mov    esi,eax
  401ab4:	jne    0x4016f2
  401aba:	mov    rax,QWORD PTR [rbx+0x30]
  401abe:	cmp    BYTE PTR [rax],0x2d
  401ac1:	jne    0x401712
  401ac7:	jmp    0x401a4d
  401ac9:	lea    rcx,[rip+0x3530]        # 0x405000
  401ad0:	mov    edx,0x1
  401ad5:	call   0x403100
  401ada:	cmp    eax,0x1
  401add:	mov    esi,eax
  401adf:	jne    0x4016c0
  401ae5:	jmp    0x4016d3
  401aea:	lea    rcx,[rip+0x350f]        # 0x405000
  401af1:	xor    edx,edx
  401af3:	call   0x403100
  401af8:	test   eax,eax
  401afa:	mov    esi,eax
  401afc:	je     0x4016a1
  401b02:	mov    ecx,esi
  401b04:	xor    edx,edx
  401b06:	call   0x4030f8
  401b0b:	mov    ecx,esi
  401b0d:	call   0x4030f0
  401b12:	jmp    0x4016a1
  401b17:	mov    rdx,QWORD PTR [rdi+0x50]
  401b1b:	mov    r8,r12
  401b1e:	mov    ecx,DWORD PTR [rsp+0x3c]
  401b22:	call   QWORD PTR [rip+0x794c]        # 0x409474
  401b28:	mov    QWORD PTR [rsp+0x50],rax
  401b2d:	jmp    0x401967
  401b32:	xor    eax,eax
  401b34:	jmp    0x401644
  401b39:	mov    edx,0x8
  401b3e:	mov    ecx,0x1
  401b43:	xor    esi,esi
  401b45:	call   0x401b80
  401b4a:	mov    r12,rax
  401b4d:	jmp    0x40193c
  401b52:	mov    ecx,DWORD PTR [rsp+0x34]
  401b56:	mov    edx,0x2
  401b5b:	call   0x403320
  401b60:	mov    edx,0x1
  401b65:	mov    ecx,r13d
  401b68:	call   0x403320
  401b6d:	nop
  401b6e:	nop
  401b6f:	nop
  401b70:	jmp    QWORD PTR [rip+0x7766]        # 0x4092dc
  401b76:	nop
  401b77:	nop
  401b78:	jmp    QWORD PTR [rip+0x7756]        # 0x4092d4
  401b7e:	nop
  401b7f:	nop
  401b80:	jmp    QWORD PTR [rip+0x7746]        # 0x4092cc
  401b86:	nop
  401b87:	nop
  401b88:	jmp    QWORD PTR [rip+0x7736]        # 0x4092c4
  401b8e:	nop
  401b8f:	nop
  401b90:	push   rbx
  401b91:	sub    rsp,0x30
  401b95:	mov    rbx,rcx
  401b98:	mov    rcx,QWORD PTR [rip+0x6e71]        # 0x408a10
  401b9f:	call   0x402140
  401ba4:	cmp    rax,0xffffffffffffffff
  401ba8:	mov    QWORD PTR [rsp+0x20],rax
  401bad:	je     0x401c25
  401baf:	mov    ecx,0x8
  401bb4:	call   0x4031b0
  401bb9:	mov    rcx,QWORD PTR [rip+0x6e50]        # 0x408a10
  401bc0:	call   0x402140
  401bc5:	mov    rcx,QWORD PTR [rip+0x6e4c]        # 0x408a18
  401bcc:	mov    QWORD PTR [rsp+0x20],rax
  401bd1:	call   0x402140
  401bd6:	lea    rdx,[rsp+0x20]
  401bdb:	lea    r8,[rsp+0x28]
  401be0:	mov    rcx,rbx
  401be3:	mov    QWORD PTR [rsp+0x28],rax
  401be8:	call   0x403210
  401bed:	mov    rcx,QWORD PTR [rsp+0x20]
  401bf2:	mov    rbx,rax
  401bf5:	call   0x402150
  401bfa:	mov    rcx,QWORD PTR [rsp+0x28]
  401bff:	mov    QWORD PTR [rip+0x6e0a],rax        # 0x408a10
  401c06:	call   0x402150
  401c0b:	mov    ecx,0x8
  401c10:	mov    QWORD PTR [rip+0x6e01],rax        # 0x408a18
  401c17:	call   0x403198
  401c1c:	mov    rax,rbx
  401c1f:	add    rsp,0x30
  401c23:	pop    rbx
  401c24:	ret    
  401c25:	mov    rax,QWORD PTR [rip+0x3734]        # 0x405360
  401c2c:	mov    rcx,rbx
  401c2f:	call   QWORD PTR [rax]
  401c31:	add    rsp,0x30
  401c35:	pop    rbx
  401c36:	ret    
  401c37:	nop    WORD PTR [rax+rax*1+0x0]
  401c40:	sub    rsp,0x28
  401c44:	call   0x401b90
  401c49:	test   rax,rax
  401c4c:	sete   al
  401c4f:	movzx  eax,al
  401c52:	neg    eax
  401c54:	add    rsp,0x28
  401c58:	ret    
  401c59:	nop
  401c5a:	nop
  401c5b:	nop
  401c5c:	nop
  401c5d:	nop
  401c5e:	nop
  401c5f:	nop
  401c60:	sub    rsp,0x28
  401c64:	mov    rax,QWORD PTR [rip+0x23a5]        # 0x404010
  401c6b:	mov    rax,QWORD PTR [rax]
  401c6e:	test   rax,rax
  401c71:	je     0x401c90
  401c73:	call   rax
  401c75:	mov    rax,QWORD PTR [rip+0x2394]        # 0x404010
  401c7c:	lea    rdx,[rax+0x8]
  401c80:	mov    rax,QWORD PTR [rax+0x8]
  401c84:	mov    QWORD PTR [rip+0x2385],rdx        # 0x404010
  401c8b:	test   rax,rax
  401c8e:	jne    0x401c73
  401c90:	add    rsp,0x28
  401c94:	ret    
  401c95:	nop
  401c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ca0:	push   rsi
  401ca1:	push   rbx
  401ca2:	sub    rsp,0x28
  401ca6:	mov    rsi,QWORD PTR [rip+0x3633]        # 0x4052e0
  401cad:	mov    rax,QWORD PTR [rsi]
  401cb0:	cmp    eax,0xffffffff
  401cb3:	mov    ebx,eax
  401cb5:	je     0x401ce0
  401cb7:	test   ebx,ebx
  401cb9:	je     0x401cca
  401cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cc0:	mov    eax,ebx
  401cc2:	call   QWORD PTR [rsi+rax*8]
  401cc5:	sub    ebx,0x1
  401cc8:	jne    0x401cc0
  401cca:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401c60
  401cd1:	add    rsp,0x28
  401cd5:	pop    rbx
  401cd6:	pop    rsi
  401cd7:	jmp    0x401c40
  401cdc:	nop    DWORD PTR [rax+0x0]
  401ce0:	xor    ebx,ebx
  401ce2:	jmp    0x401ce6
  401ce4:	mov    ebx,eax
  401ce6:	lea    edx,[rbx+0x1]
  401ce9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401cee:	mov    rax,rdx
  401cf1:	jne    0x401ce4
  401cf3:	jmp    0x401cb7
  401cf5:	nop
  401cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d00:	mov    eax,DWORD PTR [rip+0x632a]        # 0x408030
  401d06:	test   eax,eax
  401d08:	je     0x401d10
  401d0a:	repz ret 
  401d0c:	nop    DWORD PTR [rax+0x0]
  401d10:	mov    DWORD PTR [rip+0x6316],0x1        # 0x408030
  401d1a:	jmp    0x401ca0
  401d1c:	nop
  401d1d:	nop
  401d1e:	nop
  401d1f:	nop
  401d20:	mov    rax,QWORD PTR [rip+0x76c5]        # 0x4093ec
  401d27:	rex.W jmp rax
  401d2a:	nop
  401d2b:	nop
  401d2c:	nop
  401d2d:	nop
  401d2e:	nop
  401d2f:	nop
  401d30:	xor    eax,eax
  401d32:	ret    
  401d33:	nop
  401d34:	nop
  401d35:	nop
  401d36:	nop
  401d37:	nop
  401d38:	nop
  401d39:	nop
  401d3a:	nop
  401d3b:	nop
  401d3c:	nop
  401d3d:	nop
  401d3e:	nop
  401d3f:	nop
  401d40:	push   r12
  401d42:	push   rbp
  401d43:	push   rdi
  401d44:	push   rsi
  401d45:	push   rbx
  401d46:	sub    rsp,0x40
  401d4a:	mov    rbx,QWORD PTR [rip+0x231f]        # 0x404070
  401d51:	movabs rax,0x2b992ddfa232
  401d5b:	mov    QWORD PTR [rsp+0x20],0x0
  401d64:	cmp    rbx,rax
  401d67:	je     0x401d80
  401d69:	not    rbx
  401d6c:	mov    QWORD PTR [rip+0x230d],rbx        # 0x404080
  401d73:	add    rsp,0x40
  401d77:	pop    rbx
  401d78:	pop    rsi
  401d79:	pop    rdi
  401d7a:	pop    rbp
  401d7b:	pop    r12
  401d7d:	ret    
  401d7e:	xchg   ax,ax
  401d80:	lea    rcx,[rsp+0x20]
  401d85:	call   QWORD PTR [rip+0x75a9]        # 0x409334
  401d8b:	mov    r12,QWORD PTR [rsp+0x20]
  401d90:	call   QWORD PTR [rip+0x757e]        # 0x409314
  401d96:	mov    ebp,eax
  401d98:	call   QWORD PTR [rip+0x757e]        # 0x40931c
  401d9e:	mov    edi,eax
  401da0:	call   QWORD PTR [rip+0x7596]        # 0x40933c
  401da6:	lea    rcx,[rsp+0x30]
  401dab:	mov    esi,eax
  401dad:	call   QWORD PTR [rip+0x75a9]        # 0x40935c
  401db3:	xor    r12,QWORD PTR [rsp+0x30]
  401db8:	mov    edx,edi
  401dba:	movabs rax,0xffffffffffff
  401dc4:	xor    rbp,r12
  401dc7:	mov    rdi,rbp
  401dca:	xor    rdi,rdx
  401dcd:	mov    edx,esi
  401dcf:	xor    rdi,rdx
  401dd2:	mov    rsi,rdi
  401dd5:	and    rsi,rax
  401dd8:	cmp    rsi,rbx
  401ddb:	je     0x401e00
  401ddd:	mov    rax,rsi
  401de0:	not    rax
  401de3:	mov    QWORD PTR [rip+0x2286],rsi        # 0x404070
  401dea:	mov    QWORD PTR [rip+0x228f],rax        # 0x404080
  401df1:	add    rsp,0x40
  401df5:	pop    rbx
  401df6:	pop    rsi
  401df7:	pop    rdi
  401df8:	pop    rbp
  401df9:	pop    r12
  401dfb:	ret    
  401dfc:	nop    DWORD PTR [rax+0x0]
  401e00:	movabs rax,0xffffd466d2205dcc
  401e0a:	movabs rsi,0x2b992ddfa233
  401e14:	jmp    0x401de3
  401e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e20:	push   rbp
  401e21:	push   rsi
  401e22:	push   rbx
  401e23:	mov    rbp,rsp
  401e26:	sub    rsp,0x70
  401e2a:	mov    rsi,rcx
  401e2d:	lea    rcx,[rip+0x624c]        # 0x408080
  401e34:	call   QWORD PTR [rip+0x7532]        # 0x40936c
  401e3a:	mov    rbx,QWORD PTR [rip+0x6337]        # 0x408178
  401e41:	xor    r8d,r8d
  401e44:	lea    rdx,[rbp-0x28]
  401e48:	mov    rcx,rbx
  401e4b:	call   QWORD PTR [rip+0x7523]        # 0x409374
  401e51:	test   rax,rax
  401e54:	mov    r9,rax
  401e57:	je     0x401f00
  401e5d:	lea    rax,[rbp-0x20]
  401e61:	mov    QWORD PTR [rsp+0x38],0x0
  401e6a:	mov    r8,rbx
  401e6d:	mov    rdx,QWORD PTR [rbp-0x28]
  401e71:	xor    ecx,ecx
  401e73:	mov    QWORD PTR [rsp+0x30],rax
  401e78:	lea    rax,[rbp-0x18]
  401e7c:	mov    QWORD PTR [rsp+0x28],rax
  401e81:	lea    rax,[rip+0x61f8]        # 0x408080
  401e88:	mov    QWORD PTR [rsp+0x20],rax
  401e8d:	call   QWORD PTR [rip+0x74e9]        # 0x40937c
  401e93:	mov    rax,QWORD PTR [rip+0x62de]        # 0x408178
  401e9a:	xor    ecx,ecx
  401e9c:	mov    QWORD PTR [rip+0x625d],rsi        # 0x408100
  401ea3:	mov    DWORD PTR [rip+0x66d3],0xc0000409        # 0x408580
  401ead:	mov    DWORD PTR [rip+0x66cd],0x1        # 0x408584
  401eb7:	mov    QWORD PTR [rip+0x66d2],rax        # 0x408590
  401ebe:	mov    rax,QWORD PTR [rip+0x21ab]        # 0x404070
  401ec5:	mov    QWORD PTR [rbp-0x10],rax
  401ec9:	mov    rax,QWORD PTR [rip+0x21b0]        # 0x404080
  401ed0:	mov    QWORD PTR [rbp-0x8],rax
  401ed4:	call   QWORD PTR [rip+0x74aa]        # 0x409384
  401eda:	lea    rcx,[rip+0x315f]        # 0x405040
  401ee1:	call   QWORD PTR [rip+0x74bd]        # 0x4093a4
  401ee7:	call   QWORD PTR [rip+0x741f]        # 0x40930c
  401eed:	mov    edx,0xc0000409
  401ef2:	mov    rcx,rax
  401ef5:	call   QWORD PTR [rip+0x7499]        # 0x409394
  401efb:	call   0x403178
  401f00:	mov    rax,QWORD PTR [rbp+0x18]
  401f04:	mov    QWORD PTR [rip+0x626d],rax        # 0x408178
  401f0b:	lea    rax,[rbp+0x8]
  401f0f:	mov    QWORD PTR [rip+0x6202],rax        # 0x408118
  401f16:	jmp    0x401e93
  401f1b:	nop
  401f1c:	nop
  401f1d:	nop
  401f1e:	nop
  401f1f:	nop
  401f20:	sub    rsp,0x28
  401f24:	test   edx,edx
  401f26:	je     0x401f40
  401f28:	cmp    edx,0x3
  401f2b:	je     0x401f40
  401f2d:	mov    eax,0x1
  401f32:	add    rsp,0x28
  401f36:	ret    
  401f37:	nop    WORD PTR [rax+rax*1+0x0]
  401f40:	call   0x402c30
  401f45:	mov    eax,0x1
  401f4a:	add    rsp,0x28
  401f4e:	ret    
  401f4f:	nop
  401f50:	push   rsi
  401f51:	push   rbx
  401f52:	sub    rsp,0x28
  401f56:	mov    rax,QWORD PTR [rip+0x3363]        # 0x4052c0
  401f5d:	cmp    DWORD PTR [rax],0x2
  401f60:	je     0x401f68
  401f62:	mov    DWORD PTR [rax],0x2
  401f68:	cmp    edx,0x2
  401f6b:	je     0x401f80
  401f6d:	cmp    edx,0x1
  401f70:	je     0x401fb2
  401f72:	mov    eax,0x1
  401f77:	add    rsp,0x28
  401f7b:	pop    rbx
  401f7c:	pop    rsi
  401f7d:	ret    
  401f7e:	xchg   ax,ax
  401f80:	lea    rbx,[rip+0x80d9]        # 0x40a060
  401f87:	lea    rsi,[rip+0x80d2]        # 0x40a060
  401f8e:	cmp    rbx,rsi
  401f91:	je     0x401f72
  401f93:	mov    rax,QWORD PTR [rbx]
  401f96:	test   rax,rax
  401f99:	je     0x401f9d
  401f9b:	call   rax
  401f9d:	add    rbx,0x8
  401fa1:	cmp    rbx,rsi
  401fa4:	jne    0x401f93
  401fa6:	mov    eax,0x1
  401fab:	add    rsp,0x28
  401faf:	pop    rbx
  401fb0:	pop    rsi
  401fb1:	ret    
  401fb2:	call   0x402c30
  401fb7:	jmp    0x401f72
  401fb9:	nop    DWORD PTR [rax+0x0]
  401fc0:	xor    eax,eax
  401fc2:	ret    
  401fc3:	nop
  401fc4:	nop
  401fc5:	nop
  401fc6:	nop
  401fc7:	nop
  401fc8:	nop
  401fc9:	nop
  401fca:	nop
  401fcb:	nop
  401fcc:	nop
  401fcd:	nop
  401fce:	nop
  401fcf:	nop
  401fd0:	sub    rsp,0x58
  401fd4:	mov    rax,QWORD PTR [rip+0x6685]        # 0x408660
  401fdb:	test   rax,rax
  401fde:	je     0x40200c
  401fe0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401fe9:	mov    DWORD PTR [rsp+0x20],ecx
  401fed:	lea    rcx,[rsp+0x20]
  401ff2:	mov    QWORD PTR [rsp+0x28],rdx
  401ff7:	movsd  QWORD PTR [rsp+0x30],xmm2
  401ffd:	movsd  QWORD PTR [rsp+0x38],xmm3
  402003:	movsd  QWORD PTR [rsp+0x40],xmm0
  402009:	call   rax
  40200b:	nop
  40200c:	add    rsp,0x58
  402010:	ret    
  402011:	nop    DWORD PTR [rax+rax*1+0x0]
  402016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402020:	mov    QWORD PTR [rip+0x6639],rcx        # 0x408660
  402027:	jmp    0x4031e8
  40202c:	nop    DWORD PTR [rax+0x0]
  402030:	push   rsi
  402031:	push   rbx
  402032:	sub    rsp,0x78
  402036:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40203b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402040:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402046:	cmp    DWORD PTR [rcx],0x6
  402049:	ja     0x402120
  40204f:	mov    edx,DWORD PTR [rcx]
  402051:	lea    rax,[rip+0x312c]        # 0x405184
  402058:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40205c:	add    rax,rdx
  40205f:	jmp    rax
  402061:	lea    rbx,[rip+0x2ff8]        # 0x405060
  402068:	nop    DWORD PTR [rax+rax*1+0x0]
  402070:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402076:	mov    rsi,QWORD PTR [rcx+0x8]
  40207a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40207f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402084:	call   0x403200
  402089:	movsd  QWORD PTR [rsp+0x30],xmm8
  402090:	lea    rcx,[rax+0x60]
  402094:	lea    rdx,[rip+0x30bd]        # 0x405158
  40209b:	movsd  QWORD PTR [rsp+0x28],xmm7
  4020a1:	mov    r9,rsi
  4020a4:	mov    r8,rbx
  4020a7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4020ad:	call   0x403158
  4020b2:	nop
  4020b3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4020b8:	xor    eax,eax
  4020ba:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4020bf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4020c5:	add    rsp,0x78
  4020c9:	pop    rbx
  4020ca:	pop    rsi
  4020cb:	ret    
  4020cc:	nop    DWORD PTR [rax+0x0]
  4020d0:	lea    rbx,[rip+0x2fa8]        # 0x40507f
  4020d7:	jmp    0x402070
  4020d9:	nop    DWORD PTR [rax+0x0]
  4020e0:	lea    rbx,[rip+0x2fb9]        # 0x4050a0
  4020e7:	jmp    0x402070
  4020e9:	nop    DWORD PTR [rax+0x0]
  4020f0:	lea    rbx,[rip+0x3019]        # 0x405110
  4020f7:	jmp    0x402070
  4020fc:	nop    DWORD PTR [rax+0x0]
  402100:	lea    rbx,[rip+0x2fe1]        # 0x4050e8
  402107:	jmp    0x402070
  40210c:	nop    DWORD PTR [rax+0x0]
  402110:	lea    rbx,[rip+0x2fa9]        # 0x4050c0
  402117:	jmp    0x402070
  40211c:	nop    DWORD PTR [rax+0x0]
  402120:	lea    rbx,[rip+0x301f]        # 0x405146
  402127:	jmp    0x402070
  40212c:	nop
  40212d:	nop
  40212e:	nop
  40212f:	nop
  402130:	fninit 
  402132:	ret    
  402133:	nop
  402134:	nop
  402135:	nop
  402136:	nop
  402137:	nop
  402138:	nop
  402139:	nop
  40213a:	nop
  40213b:	nop
  40213c:	nop
  40213d:	nop
  40213e:	nop
  40213f:	nop
  402140:	mov    rax,rcx
  402143:	ret    
  402144:	xchg   ax,ax
  402146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402150:	mov    rax,rcx
  402153:	ret    
  402154:	nop
  402155:	nop
  402156:	nop
  402157:	nop
  402158:	nop
  402159:	nop
  40215a:	nop
  40215b:	nop
  40215c:	nop
  40215d:	nop
  40215e:	nop
  40215f:	nop
  402160:	push   rsi
  402161:	push   rbx
  402162:	sub    rsp,0x38
  402166:	lea    rax,[rsp+0x58]
  40216b:	mov    rbx,rcx
  40216e:	mov    QWORD PTR [rsp+0x58],rdx
  402173:	mov    QWORD PTR [rsp+0x60],r8
  402178:	mov    QWORD PTR [rsp+0x68],r9
  40217d:	mov    QWORD PTR [rsp+0x28],rax
  402182:	call   0x403200
  402187:	lea    rcx,[rip+0x3012]        # 0x4051a0
  40218e:	lea    r9,[rax+0x60]
  402192:	mov    r8d,0x1b
  402198:	mov    edx,0x1
  40219d:	call   0x403148
  4021a2:	mov    rsi,QWORD PTR [rsp+0x28]
  4021a7:	call   0x403200
  4021ac:	lea    rcx,[rax+0x60]
  4021b0:	mov    rdx,rbx
  4021b3:	mov    r8,rsi
  4021b6:	call   0x403118
  4021bb:	call   0x403178
  4021c0:	nop
  4021c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4021c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021d0:	push   r13
  4021d2:	push   r12
  4021d4:	push   rbp
  4021d5:	push   rdi
  4021d6:	push   rsi
  4021d7:	push   rbx
  4021d8:	sub    rsp,0x58
  4021dc:	movsxd rbp,DWORD PTR [rip+0x64a1]        # 0x408684
  4021e3:	mov    rbx,rcx
  4021e6:	mov    rsi,rdx
  4021e9:	mov    rdi,r8
  4021ec:	test   ebp,ebp
  4021ee:	jle    0x4022ea
  4021f4:	mov    rax,QWORD PTR [rip+0x648d]        # 0x408688
  4021fb:	xor    r9d,r9d
  4021fe:	add    rax,0x8
  402202:	mov    r10,QWORD PTR [rax]
  402205:	cmp    rbx,r10
  402208:	jb     0x40221e
  40220a:	mov    rdx,QWORD PTR [rax+0x8]
  40220e:	mov    r11d,DWORD PTR [rdx+0x8]
  402212:	add    r10,r11
  402215:	cmp    rbx,r10
  402218:	jb     0x4022d0
  40221e:	add    r9d,0x1
  402222:	add    rax,0x18
  402226:	cmp    r9d,ebp
  402229:	jne    0x402202
  40222b:	mov    rcx,rbx
  40222e:	call   0x402e40
  402233:	test   rax,rax
  402236:	mov    r12,rax
  402239:	je     0x402322
  40223f:	lea    rbp,[rbp+rbp*2+0x0]
  402244:	shl    rbp,0x3
  402248:	mov    r13,rbp
  40224b:	add    r13,QWORD PTR [rip+0x6436]        # 0x408688
  402252:	mov    QWORD PTR [r13+0x10],rax
  402256:	mov    DWORD PTR [r13+0x0],0x0
  40225e:	call   0x402f60
  402263:	mov    edx,DWORD PTR [r12+0xc]
  402268:	mov    r8d,0x30
  40226e:	add    rax,rdx
  402271:	lea    rdx,[rsp+0x20]
  402276:	mov    QWORD PTR [r13+0x8],rax
  40227a:	mov    rax,QWORD PTR [rip+0x6407]        # 0x408688
  402281:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402286:	call   QWORD PTR [rip+0x7128]        # 0x4093b4
  40228c:	test   rax,rax
  40228f:	je     0x402305
  402291:	mov    eax,DWORD PTR [rsp+0x44]
  402295:	lea    edx,[rax-0x4]
  402298:	and    edx,0xfffffffb
  40229b:	je     0x4022c9
  40229d:	sub    eax,0x40
  4022a0:	and    eax,0xffffffbf
  4022a3:	je     0x4022c9
  4022a5:	mov    r9,rbp
  4022a8:	add    r9,QWORD PTR [rip+0x63d9]        # 0x408688
  4022af:	mov    r8d,0x40
  4022b5:	mov    rdx,QWORD PTR [rsp+0x38]
  4022ba:	mov    rcx,QWORD PTR [rsp+0x20]
  4022bf:	call   QWORD PTR [rip+0x70e7]        # 0x4093ac
  4022c5:	test   eax,eax
  4022c7:	je     0x4022f1
  4022c9:	add    DWORD PTR [rip+0x63b4],0x1        # 0x408684
  4022d0:	mov    r8,rdi
  4022d3:	mov    rdx,rsi
  4022d6:	mov    rcx,rbx
  4022d9:	add    rsp,0x58
  4022dd:	pop    rbx
  4022de:	pop    rsi
  4022df:	pop    rdi
  4022e0:	pop    rbp
  4022e1:	pop    r12
  4022e3:	pop    r13
  4022e5:	jmp    0x403138
  4022ea:	xor    ebp,ebp
  4022ec:	jmp    0x40222b
  4022f1:	call   QWORD PTR [rip+0x702d]        # 0x409324
  4022f7:	lea    rcx,[rip+0x2f1a]        # 0x405218
  4022fe:	mov    edx,eax
  402300:	call   0x402160
  402305:	mov    rax,QWORD PTR [rip+0x637c]        # 0x408688
  40230c:	mov    edx,DWORD PTR [r12+0x8]
  402311:	lea    rcx,[rip+0x2ec8]        # 0x4051e0
  402318:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40231d:	call   0x402160
  402322:	lea    rcx,[rip+0x2e97]        # 0x4051c0
  402329:	mov    rdx,rbx
  40232c:	call   0x402160
  402331:	nop
  402332:	nop    DWORD PTR [rax+0x0]
  402336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402340:	push   rbp
  402341:	push   r14
  402343:	push   r13
  402345:	push   r12
  402347:	push   rdi
  402348:	push   rsi
  402349:	push   rbx
  40234a:	mov    rbp,rsp
  40234d:	sub    rsp,0x60
  402351:	mov    ebx,DWORD PTR [rip+0x6329]        # 0x408680
  402357:	test   ebx,ebx
  402359:	je     0x402370
  40235b:	mov    rsp,rbp
  40235e:	pop    rbx
  40235f:	pop    rsi
  402360:	pop    rdi
  402361:	pop    r12
  402363:	pop    r13
  402365:	pop    r14
  402367:	pop    rbp
  402368:	ret    
  402369:	nop    DWORD PTR [rax+0x0]
  402370:	mov    DWORD PTR [rip+0x6306],0x1        # 0x408680
  40237a:	call   0x402e90
  40237f:	cdqe   
  402381:	lea    rax,[rax+rax*2]
  402385:	lea    rax,[rax*8+0x1e]
  40238d:	and    rax,0xfffffffffffffff0
  402391:	call   0x4030b0
  402396:	mov    rsi,QWORD PTR [rip+0x2f53]        # 0x4052f0
  40239d:	mov    rbx,QWORD PTR [rip+0x2f5c]        # 0x405300
  4023a4:	sub    rsp,rax
  4023a7:	mov    DWORD PTR [rip+0x62d3],0x0        # 0x408684
  4023b1:	lea    rax,[rsp+0x20]
  4023b6:	mov    QWORD PTR [rip+0x62cb],rax        # 0x408688
  4023bd:	mov    rax,rsi
  4023c0:	sub    rax,rbx
  4023c3:	cmp    rax,0x7
  4023c7:	jle    0x40235b
  4023c9:	cmp    rax,0xb
  4023cd:	jle    0x4023f5
  4023cf:	mov    r11d,DWORD PTR [rbx]
  4023d2:	test   r11d,r11d
  4023d5:	jne    0x402520
  4023db:	mov    r10d,DWORD PTR [rbx+0x4]
  4023df:	test   r10d,r10d
  4023e2:	jne    0x402520
  4023e8:	mov    r9d,DWORD PTR [rbx+0x8]
  4023ec:	test   r9d,r9d
  4023ef:	jne    0x40240c
  4023f1:	add    rbx,0xc
  4023f5:	mov    r8d,DWORD PTR [rbx]
  4023f8:	test   r8d,r8d
  4023fb:	jne    0x402520
  402401:	mov    ecx,DWORD PTR [rbx+0x4]
  402404:	test   ecx,ecx
  402406:	jne    0x402520
  40240c:	mov    edx,DWORD PTR [rbx+0x8]
  40240f:	cmp    edx,0x1
  402412:	jne    0x40262c
  402418:	add    rbx,0xc
  40241c:	cmp    rbx,rsi
  40241f:	jae    0x40235b
  402425:	mov    r12,QWORD PTR [rip+0x2ef4]        # 0x405320
  40242c:	lea    r13,[rbp-0x30]
  402430:	movabs r14,0xffffffff00000000
  40243a:	mov    ecx,DWORD PTR [rbx+0x4]
  40243d:	mov    eax,DWORD PTR [rbx]
  40243f:	movzx  edx,BYTE PTR [rbx+0x8]
  402443:	add    rax,r12
  402446:	add    rcx,r12
  402449:	cmp    edx,0x10
  40244c:	mov    r8,QWORD PTR [rax]
  40244f:	je     0x402596
  402455:	jbe    0x40255d
  40245b:	cmp    edx,0x20
  40245e:	je     0x4025df
  402464:	cmp    edx,0x40
  402467:	jne    0x4025cb
  40246d:	sub    r8,rax
  402470:	mov    rdx,r13
  402473:	mov    rdi,r13
  402476:	mov    rax,r8
  402479:	add    rax,QWORD PTR [rcx]
  40247c:	mov    r8d,0x8
  402482:	mov    QWORD PTR [rbp-0x30],rax
  402486:	call   0x4021d0
  40248b:	add    rbx,0xc
  40248f:	cmp    rbx,rsi
  402492:	jb     0x40243a
  402494:	mov    eax,DWORD PTR [rip+0x61ea]        # 0x408684
  40249a:	xor    ebx,ebx
  40249c:	xor    esi,esi
  40249e:	test   eax,eax
  4024a0:	jle    0x40235b
  4024a6:	mov    r14,QWORD PTR [rip+0x6f07]        # 0x4093b4
  4024ad:	lea    r13,[rbp-0x34]
  4024b1:	mov    r12,QWORD PTR [rip+0x6ef4]        # 0x4093ac
  4024b8:	jmp    0x4024d3
  4024ba:	nop    WORD PTR [rax+rax*1+0x0]
  4024c0:	add    esi,0x1
  4024c3:	add    rbx,0x18
  4024c7:	cmp    esi,DWORD PTR [rip+0x61b7]        # 0x408684
  4024cd:	jge    0x40235b
  4024d3:	mov    rax,rbx
  4024d6:	add    rax,QWORD PTR [rip+0x61ab]        # 0x408688
  4024dd:	mov    edx,DWORD PTR [rax]
  4024df:	test   edx,edx
  4024e1:	je     0x4024c0
  4024e3:	mov    rcx,QWORD PTR [rax+0x8]
  4024e7:	mov    r8d,0x30
  4024ed:	mov    rdx,rdi
  4024f0:	call   r14
  4024f3:	test   rax,rax
  4024f6:	je     0x40260e
  4024fc:	mov    rax,QWORD PTR [rip+0x6185]        # 0x408688
  402503:	mov    r9,r13
  402506:	mov    rdx,QWORD PTR [rbp-0x18]
  40250a:	mov    rcx,QWORD PTR [rbp-0x30]
  40250e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402512:	call   r12
  402515:	jmp    0x4024c0
  402517:	nop    WORD PTR [rax+rax*1+0x0]
  402520:	cmp    rbx,rsi
  402523:	jae    0x40235b
  402529:	mov    r12,QWORD PTR [rip+0x2df0]        # 0x405320
  402530:	lea    rdi,[rbp-0x30]
  402534:	mov    ecx,DWORD PTR [rbx+0x4]
  402537:	mov    eax,DWORD PTR [rbx]
  402539:	mov    r8d,0x4
  40253f:	mov    rdx,rdi
  402542:	add    rbx,0x8
  402546:	add    rcx,r12
  402549:	add    eax,DWORD PTR [rcx]
  40254b:	mov    DWORD PTR [rbp-0x30],eax
  40254e:	call   0x4021d0
  402553:	cmp    rbx,rsi
  402556:	jb     0x402534
  402558:	jmp    0x402494
  40255d:	cmp    edx,0x8
  402560:	jne    0x4025cb
  402562:	movzx  edx,BYTE PTR [rcx]
  402565:	mov    rdi,r13
  402568:	mov    r10,rdx
  40256b:	or     r10,0xffffffffffffff00
  402572:	test   dl,dl
  402574:	cmovs  rdx,r10
  402578:	sub    rdx,rax
  40257b:	lea    rax,[r8+rdx*1]
  40257f:	mov    r8d,0x1
  402585:	mov    rdx,r13
  402588:	mov    QWORD PTR [rbp-0x30],rax
  40258c:	call   0x4021d0
  402591:	jmp    0x40248b
  402596:	movzx  edx,WORD PTR [rcx]
  402599:	mov    rdi,r13
  40259c:	mov    r10,rdx
  40259f:	or     r10,0xffffffffffff0000
  4025a6:	test   dx,dx
  4025a9:	cmovs  rdx,r10
  4025ad:	sub    rdx,rax
  4025b0:	lea    rax,[r8+rdx*1]
  4025b4:	mov    r8d,0x2
  4025ba:	mov    rdx,r13
  4025bd:	mov    QWORD PTR [rbp-0x30],rax
  4025c1:	call   0x4021d0
  4025c6:	jmp    0x40248b
  4025cb:	lea    rcx,[rip+0x2ca6]        # 0x405278
  4025d2:	mov    QWORD PTR [rbp-0x30],0x0
  4025da:	call   0x402160
  4025df:	mov    edx,DWORD PTR [rcx]
  4025e1:	mov    rdi,r13
  4025e4:	mov    r10,rdx
  4025e7:	or     r10,r14
  4025ea:	test   edx,edx
  4025ec:	cmovs  rdx,r10
  4025f0:	sub    rdx,rax
  4025f3:	lea    rax,[r8+rdx*1]
  4025f7:	mov    r8d,0x4
  4025fd:	mov    rdx,r13
  402600:	mov    QWORD PTR [rbp-0x30],rax
  402604:	call   0x4021d0
  402609:	jmp    0x40248b
  40260e:	add    rbx,QWORD PTR [rip+0x6073]        # 0x408688
  402615:	lea    rcx,[rip+0x2bc4]        # 0x4051e0
  40261c:	mov    rax,QWORD PTR [rbx+0x10]
  402620:	mov    r8,QWORD PTR [rbx+0x8]
  402624:	mov    edx,DWORD PTR [rax+0x8]
  402627:	call   0x402160
  40262c:	lea    rcx,[rip+0x2c0d]        # 0x405240
  402633:	call   0x402160
  402638:	nop
  402639:	nop
  40263a:	nop
  40263b:	nop
  40263c:	nop
  40263d:	nop
  40263e:	nop
  40263f:	nop
  402640:	sub    rsp,0x28
  402644:	mov    eax,DWORD PTR [rcx]
  402646:	cmp    eax,0xc0000091
  40264b:	ja     0x4026b0
  40264d:	cmp    eax,0xc000008d
  402652:	jae    0x4026cf
  402654:	cmp    eax,0xc0000008
  402659:	je     0x402770
  40265f:	ja     0x402740
  402665:	cmp    eax,0x80000002
  40266a:	je     0x402770
  402670:	cmp    eax,0xc0000005
  402675:	jne    0x40274e
  40267b:	xor    edx,edx
  40267d:	mov    ecx,0xb
  402682:	call   0x403130
  402687:	cmp    rax,0x1
  40268b:	je     0x4027d0
  402691:	test   rax,rax
  402694:	je     0x4027b0
  40269a:	mov    ecx,0xb
  40269f:	call   rax
  4026a1:	xor    eax,eax
  4026a3:	add    rsp,0x28
  4026a7:	ret    
  4026a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4026b0:	cmp    eax,0xc0000094
  4026b5:	je     0x402780
  4026bb:	ja     0x402700
  4026bd:	cmp    eax,0xc0000092
  4026c2:	je     0x402770
  4026c8:	cmp    eax,0xc0000093
  4026cd:	jne    0x40274e
  4026cf:	xor    edx,edx
  4026d1:	mov    ecx,0x8
  4026d6:	call   0x403130
  4026db:	cmp    rax,0x1
  4026df:	mov    rdx,rax
  4026e2:	je     0x402758
  4026e4:	test   rdx,rdx
  4026e7:	mov    eax,0x1
  4026ec:	je     0x4026a3
  4026ee:	mov    ecx,0x8
  4026f3:	call   rdx
  4026f5:	xor    eax,eax
  4026f7:	add    rsp,0x28
  4026fb:	ret    
  4026fc:	nop    DWORD PTR [rax+0x0]
  402700:	cmp    eax,0xc0000095
  402705:	je     0x402770
  402707:	cmp    eax,0xc0000096
  40270c:	jne    0x40274e
  40270e:	xor    edx,edx
  402710:	mov    ecx,0x4
  402715:	call   0x403130
  40271a:	cmp    rax,0x1
  40271e:	je     0x4027ba
  402724:	test   rax,rax
  402727:	je     0x4027b0
  40272d:	mov    ecx,0x4
  402732:	call   rax
  402734:	xor    eax,eax
  402736:	jmp    0x4026a3
  40273b:	nop    DWORD PTR [rax+rax*1+0x0]
  402740:	cmp    eax,0xc000001d
  402745:	je     0x40270e
  402747:	cmp    eax,0xc000008c
  40274c:	je     0x402770
  40274e:	mov    eax,0x1
  402753:	add    rsp,0x28
  402757:	ret    
  402758:	mov    edx,0x1
  40275d:	mov    ecx,0x8
  402762:	call   0x403130
  402767:	call   0x402130
  40276c:	nop    DWORD PTR [rax+0x0]
  402770:	xor    eax,eax
  402772:	add    rsp,0x28
  402776:	ret    
  402777:	nop    WORD PTR [rax+rax*1+0x0]
  402780:	xor    edx,edx
  402782:	mov    ecx,0x8
  402787:	call   0x403130
  40278c:	cmp    rax,0x1
  402790:	mov    rdx,rax
  402793:	jne    0x4026e4
  402799:	mov    edx,0x1
  40279e:	mov    ecx,0x8
  4027a3:	call   0x403130
  4027a8:	xor    eax,eax
  4027aa:	jmp    0x4026a3
  4027af:	nop
  4027b0:	mov    eax,0x4
  4027b5:	add    rsp,0x28
  4027b9:	ret    
  4027ba:	mov    edx,0x1
  4027bf:	mov    ecx,0x4
  4027c4:	call   0x403130
  4027c9:	xor    eax,eax
  4027cb:	jmp    0x4026a3
  4027d0:	mov    edx,0x1
  4027d5:	mov    ecx,0xb
  4027da:	call   0x403130
  4027df:	xor    eax,eax
  4027e1:	jmp    0x4026a3
  4027e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027f0:	push   r12
  4027f2:	push   rbp
  4027f3:	push   rdi
  4027f4:	push   rsi
  4027f5:	push   rbx
  4027f6:	sub    rsp,0x20
  4027fa:	call   0x402f60
  4027ff:	mov    rbp,rax
  402802:	mov    eax,DWORD PTR [rip+0x5ec0]        # 0x4086c8
  402808:	test   eax,eax
  40280a:	jne    0x402831
  40280c:	test   rbp,rbp
  40280f:	je     0x402831
  402811:	lea    rcx,[rip+0x2a98]        # 0x4052b0
  402818:	mov    DWORD PTR [rip+0x5ea6],0x1        # 0x4086c8
  402822:	call   0x402da0
  402827:	test   rax,rax
  40282a:	je     0x402840
  40282c:	mov    eax,0x1
  402831:	add    rsp,0x20
  402835:	pop    rbx
  402836:	pop    rsi
  402837:	pop    rdi
  402838:	pop    rbp
  402839:	pop    r12
  40283b:	ret    
  40283c:	nop    DWORD PTR [rax+0x0]
  402840:	lea    rbx,[rip+0x5fb9]        # 0x408800
  402847:	mov    ecx,0x30
  40284c:	lea    rdx,[rip+0x5ead]        # 0x408700
  402853:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402640
  40285a:	xor    esi,esi
  40285c:	mov    rdi,rbx
  40285f:	rep stos QWORD PTR es:[rdi],rax
  402862:	mov    rdi,rdx
  402865:	sub    r12,rbp
  402868:	mov    cl,0x20
  40286a:	rep stos QWORD PTR es:[rdi],rax
  40286d:	mov    rdi,rdx
  402870:	jmp    0x4028a0
  402872:	mov    BYTE PTR [rdi],0x9
  402875:	mov    DWORD PTR [rdi+0x4],r12d
  402879:	add    rsi,0x1
  40287d:	mov    edx,DWORD PTR [rax+0xc]
  402880:	add    rbx,0xc
  402884:	mov    DWORD PTR [rbx-0xc],edx
  402887:	add    edx,DWORD PTR [rax+0x8]
  40288a:	mov    rax,rdi
  40288d:	sub    rax,rbp
  402890:	add    rdi,0x8
  402894:	mov    DWORD PTR [rbx-0x4],eax
  402897:	mov    DWORD PTR [rbx-0x8],edx
  40289a:	cmp    rsi,0x20
  40289e:	je     0x4028d5
  4028a0:	mov    rcx,rsi
  4028a3:	call   0x402ed0
  4028a8:	test   rax,rax
  4028ab:	jne    0x402872
  4028ad:	test   rsi,rsi
  4028b0:	je     0x40282c
  4028b6:	mov    edx,esi
  4028b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028c0:	mov    r8,rbp
  4028c3:	lea    rcx,[rip+0x5f36]        # 0x408800
  4028ca:	call   QWORD PTR [rip+0x6a94]        # 0x409364
  4028d0:	jmp    0x40282c
  4028d5:	mov    edx,0x20
  4028da:	jmp    0x4028c0
  4028dc:	nop    DWORD PTR [rax+0x0]
  4028e0:	push   rbx
  4028e1:	sub    rsp,0x20
  4028e5:	mov    rdx,QWORD PTR [rcx]
  4028e8:	mov    eax,DWORD PTR [rdx]
  4028ea:	mov    r8d,eax
  4028ed:	and    r8d,0x20ffffff
  4028f4:	cmp    r8d,0x20474343
  4028fb:	je     0x402a00
  402901:	cmp    eax,0xc0000091
  402906:	mov    rbx,rcx
  402909:	ja     0x402990
  40290f:	cmp    eax,0xc000008d
  402914:	jae    0x4029a7
  40291a:	cmp    eax,0xc0000008
  40291f:	je     0x402953
  402921:	ja     0x402960
  402923:	cmp    eax,0x80000002
  402928:	je     0x402953
  40292a:	cmp    eax,0xc0000005
  40292f:	jne    0x402972
  402931:	xor    edx,edx
  402933:	mov    ecx,0xb
  402938:	call   0x403130
  40293d:	cmp    rax,0x1
  402941:	je     0x402a70
  402947:	test   rax,rax
  40294a:	je     0x402972
  40294c:	mov    ecx,0xb
  402951:	call   rax
  402953:	mov    eax,0xffffffff
  402958:	add    rsp,0x20
  40295c:	pop    rbx
  40295d:	ret    
  40295e:	xchg   ax,ax
  402960:	cmp    eax,0xc000001d
  402965:	je     0x402a26
  40296b:	cmp    eax,0xc000008c
  402970:	je     0x402953
  402972:	mov    rax,QWORD PTR [rip+0x5d47]        # 0x4086c0
  402979:	test   rax,rax
  40297c:	je     0x402958
  40297e:	mov    rcx,rbx
  402981:	add    rsp,0x20
  402985:	pop    rbx
  402986:	rex.W jmp rax
  402989:	nop    DWORD PTR [rax+0x0]
  402990:	cmp    eax,0xc0000094
  402995:	je     0x4029d2
  402997:	ja     0x402a10
  402999:	cmp    eax,0xc0000092
  40299e:	je     0x402953
  4029a0:	cmp    eax,0xc0000093
  4029a5:	jne    0x402972
  4029a7:	xor    edx,edx
  4029a9:	mov    ecx,0x8
  4029ae:	call   0x403130
  4029b3:	cmp    rax,0x1
  4029b7:	jne    0x4029e4
  4029b9:	mov    edx,0x1
  4029be:	mov    ecx,0x8
  4029c3:	call   0x403130
  4029c8:	call   0x402130
  4029cd:	jmp    0x402953
  4029d2:	xor    edx,edx
  4029d4:	mov    ecx,0x8
  4029d9:	call   0x403130
  4029de:	cmp    rax,0x1
  4029e2:	je     0x402a52
  4029e4:	test   rax,rax
  4029e7:	je     0x402972
  4029e9:	mov    ecx,0x8
  4029ee:	call   rax
  4029f0:	mov    eax,0xffffffff
  4029f5:	jmp    0x402958
  4029fa:	nop    WORD PTR [rax+rax*1+0x0]
  402a00:	test   BYTE PTR [rdx+0x4],0x1
  402a04:	jne    0x402901
  402a0a:	jmp    0x402953
  402a0f:	nop
  402a10:	cmp    eax,0xc0000095
  402a15:	je     0x402953
  402a1b:	cmp    eax,0xc0000096
  402a20:	jne    0x402972
  402a26:	xor    edx,edx
  402a28:	mov    ecx,0x4
  402a2d:	call   0x403130
  402a32:	cmp    rax,0x1
  402a36:	je     0x402a84
  402a38:	test   rax,rax
  402a3b:	je     0x402972
  402a41:	mov    ecx,0x4
  402a46:	call   rax
  402a48:	mov    eax,0xffffffff
  402a4d:	jmp    0x402958
  402a52:	mov    edx,0x1
  402a57:	mov    ecx,0x8
  402a5c:	call   0x403130
  402a61:	jmp    0x402953
  402a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a70:	mov    edx,0x1
  402a75:	mov    ecx,0xb
  402a7a:	call   0x403130
  402a7f:	jmp    0x402953
  402a84:	mov    edx,0x1
  402a89:	mov    ecx,0x4
  402a8e:	call   0x403130
  402a93:	jmp    0x402953
  402a98:	nop
  402a99:	nop
  402a9a:	nop
  402a9b:	nop
  402a9c:	nop
  402a9d:	nop
  402a9e:	nop
  402a9f:	nop
  402aa0:	push   rbp
  402aa1:	push   rdi
  402aa2:	push   rsi
  402aa3:	push   rbx
  402aa4:	sub    rsp,0x28
  402aa8:	lea    rcx,[rip+0x5ef1]        # 0x4089a0
  402aaf:	call   QWORD PTR [rip+0x6847]        # 0x4092fc
  402ab5:	mov    rbx,QWORD PTR [rip+0x5ec4]        # 0x408980
  402abc:	test   rbx,rbx
  402abf:	je     0x402af4
  402ac1:	mov    rbp,QWORD PTR [rip+0x68d4]        # 0x40939c
  402ac8:	mov    rdi,QWORD PTR [rip+0x6855]        # 0x409324
  402acf:	nop
  402ad0:	mov    ecx,DWORD PTR [rbx]
  402ad2:	call   rbp
  402ad4:	mov    rsi,rax
  402ad7:	call   rdi
  402ad9:	test   eax,eax
  402adb:	jne    0x402aeb
  402add:	test   rsi,rsi
  402ae0:	je     0x402aeb
  402ae2:	mov    rax,QWORD PTR [rbx+0x8]
  402ae6:	mov    rcx,rsi
  402ae9:	call   rax
  402aeb:	mov    rbx,QWORD PTR [rbx+0x10]
  402aef:	test   rbx,rbx
  402af2:	jne    0x402ad0
  402af4:	mov    rax,QWORD PTR [rip+0x6851]        # 0x40934c
  402afb:	lea    rcx,[rip+0x5e9e]        # 0x4089a0
  402b02:	add    rsp,0x28
  402b06:	pop    rbx
  402b07:	pop    rsi
  402b08:	pop    rdi
  402b09:	pop    rbp
  402b0a:	rex.W jmp rax
  402b0d:	nop    DWORD PTR [rax]
  402b10:	push   rdi
  402b11:	push   rsi
  402b12:	push   rbx
  402b13:	sub    rsp,0x20
  402b17:	mov    eax,DWORD PTR [rip+0x5e6b]        # 0x408988
  402b1d:	test   eax,eax
  402b1f:	jne    0x402b30
  402b21:	add    rsp,0x20
  402b25:	pop    rbx
  402b26:	pop    rsi
  402b27:	pop    rdi
  402b28:	ret    
  402b29:	nop    DWORD PTR [rax+0x0]
  402b30:	mov    rsi,rdx
  402b33:	mov    edi,ecx
  402b35:	mov    edx,0x18
  402b3a:	mov    ecx,0x1
  402b3f:	call   0x403168
  402b44:	test   rax,rax
  402b47:	mov    rbx,rax
  402b4a:	je     0x402b88
  402b4c:	mov    DWORD PTR [rax],edi
  402b4e:	mov    QWORD PTR [rax+0x8],rsi
  402b52:	lea    rcx,[rip+0x5e47]        # 0x4089a0
  402b59:	call   QWORD PTR [rip+0x679d]        # 0x4092fc
  402b5f:	mov    rax,QWORD PTR [rip+0x5e1a]        # 0x408980
  402b66:	lea    rcx,[rip+0x5e33]        # 0x4089a0
  402b6d:	mov    QWORD PTR [rip+0x5e0c],rbx        # 0x408980
  402b74:	mov    QWORD PTR [rbx+0x10],rax
  402b78:	call   QWORD PTR [rip+0x67ce]        # 0x40934c
  402b7e:	xor    eax,eax
  402b80:	add    rsp,0x20
  402b84:	pop    rbx
  402b85:	pop    rsi
  402b86:	pop    rdi
  402b87:	ret    
  402b88:	mov    eax,0xffffffff
  402b8d:	jmp    0x402b21
  402b8f:	nop
  402b90:	push   rbx
  402b91:	sub    rsp,0x20
  402b95:	mov    eax,DWORD PTR [rip+0x5ded]        # 0x408988
  402b9b:	test   eax,eax
  402b9d:	jne    0x402bb0
  402b9f:	xor    eax,eax
  402ba1:	add    rsp,0x20
  402ba5:	pop    rbx
  402ba6:	ret    
  402ba7:	nop    WORD PTR [rax+rax*1+0x0]
  402bb0:	mov    ebx,ecx
  402bb2:	lea    rcx,[rip+0x5de7]        # 0x4089a0
  402bb9:	call   QWORD PTR [rip+0x673d]        # 0x4092fc
  402bbf:	mov    rdx,QWORD PTR [rip+0x5dba]        # 0x408980
  402bc6:	test   rdx,rdx
  402bc9:	je     0x402be7
  402bcb:	mov    eax,DWORD PTR [rdx]
  402bcd:	cmp    eax,ebx
  402bcf:	jne    0x402bde
  402bd1:	jmp    0x402c1f
  402bd3:	mov    r8d,DWORD PTR [rax]
  402bd6:	cmp    r8d,ebx
  402bd9:	je     0x402c00
  402bdb:	mov    rdx,rax
  402bde:	mov    rax,QWORD PTR [rdx+0x10]
  402be2:	test   rax,rax
  402be5:	jne    0x402bd3
  402be7:	lea    rcx,[rip+0x5db2]        # 0x4089a0
  402bee:	call   QWORD PTR [rip+0x6758]        # 0x40934c
  402bf4:	xor    eax,eax
  402bf6:	add    rsp,0x20
  402bfa:	pop    rbx
  402bfb:	ret    
  402bfc:	nop    DWORD PTR [rax+0x0]
  402c00:	mov    rcx,rax
  402c03:	mov    rax,QWORD PTR [rax+0x10]
  402c07:	mov    QWORD PTR [rdx+0x10],rax
  402c0b:	call   0x403150
  402c10:	lea    rcx,[rip+0x5d89]        # 0x4089a0
  402c17:	call   QWORD PTR [rip+0x672f]        # 0x40934c
  402c1d:	jmp    0x402bf4
  402c1f:	mov    rax,QWORD PTR [rdx+0x10]
  402c23:	mov    rcx,rdx
  402c26:	mov    QWORD PTR [rip+0x5d53],rax        # 0x408980
  402c2d:	jmp    0x402c0b
  402c2f:	nop
  402c30:	push   rbx
  402c31:	sub    rsp,0x20
  402c35:	cmp    edx,0x1
  402c38:	je     0x402cd0
  402c3e:	jb     0x402c70
  402c40:	cmp    edx,0x2
  402c43:	je     0x402c60
  402c45:	cmp    edx,0x3
  402c48:	jne    0x402c65
  402c4a:	mov    eax,DWORD PTR [rip+0x5d38]        # 0x408988
  402c50:	test   eax,eax
  402c52:	je     0x402c65
  402c54:	call   0x402aa0
  402c59:	jmp    0x402c65
  402c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c60:	call   0x402130
  402c65:	mov    eax,0x1
  402c6a:	add    rsp,0x20
  402c6e:	pop    rbx
  402c6f:	ret    
  402c70:	mov    eax,DWORD PTR [rip+0x5d12]        # 0x408988
  402c76:	test   eax,eax
  402c78:	jne    0x402d00
  402c7e:	mov    eax,DWORD PTR [rip+0x5d04]        # 0x408988
  402c84:	cmp    eax,0x1
  402c87:	jne    0x402c65
  402c89:	mov    rcx,QWORD PTR [rip+0x5cf0]        # 0x408980
  402c90:	test   rcx,rcx
  402c93:	je     0x402ca6
  402c95:	mov    rbx,QWORD PTR [rcx+0x10]
  402c99:	call   0x403150
  402c9e:	test   rbx,rbx
  402ca1:	mov    rcx,rbx
  402ca4:	jne    0x402c95
  402ca6:	lea    rcx,[rip+0x5cf3]        # 0x4089a0
  402cad:	mov    QWORD PTR [rip+0x5cc8],0x0        # 0x408980
  402cb8:	mov    DWORD PTR [rip+0x5cc6],0x0        # 0x408988
  402cc2:	call   QWORD PTR [rip+0x6624]        # 0x4092ec
  402cc8:	jmp    0x402c65
  402cca:	nop    WORD PTR [rax+rax*1+0x0]
  402cd0:	mov    eax,DWORD PTR [rip+0x5cb2]        # 0x408988
  402cd6:	test   eax,eax
  402cd8:	je     0x402cf0
  402cda:	mov    eax,0x1
  402cdf:	mov    DWORD PTR [rip+0x5c9f],0x1        # 0x408988
  402ce9:	add    rsp,0x20
  402ced:	pop    rbx
  402cee:	ret    
  402cef:	nop
  402cf0:	lea    rcx,[rip+0x5ca9]        # 0x4089a0
  402cf7:	call   QWORD PTR [rip+0x6647]        # 0x409344
  402cfd:	jmp    0x402cda
  402cff:	nop
  402d00:	call   0x402aa0
  402d05:	jmp    0x402c7e
  402d0a:	nop
  402d0b:	nop
  402d0c:	nop
  402d0d:	nop
  402d0e:	nop
  402d0f:	nop
  402d10:	movsxd rax,DWORD PTR [rcx+0x3c]
  402d14:	add    rcx,rax
  402d17:	xor    eax,eax
  402d19:	cmp    DWORD PTR [rcx],0x4550
  402d1f:	je     0x402d23
  402d21:	repz ret 
  402d23:	xor    eax,eax
  402d25:	cmp    WORD PTR [rcx+0x18],0x20b
  402d2b:	sete   al
  402d2e:	ret    
  402d2f:	nop
  402d30:	cmp    WORD PTR [rcx],0x5a4d
  402d35:	je     0x402d40
  402d37:	xor    eax,eax
  402d39:	ret    
  402d3a:	nop    WORD PTR [rax+rax*1+0x0]
  402d40:	jmp    0x402d10
  402d42:	nop    DWORD PTR [rax+0x0]
  402d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d50:	movsxd rax,DWORD PTR [rcx+0x3c]
  402d54:	add    rcx,rax
  402d57:	movzx  eax,WORD PTR [rcx+0x14]
  402d5b:	lea    rax,[rcx+rax*1+0x18]
  402d60:	movzx  ecx,WORD PTR [rcx+0x6]
  402d64:	test   ecx,ecx
  402d66:	je     0x402d91
  402d68:	sub    ecx,0x1
  402d6b:	lea    rcx,[rcx+rcx*4]
  402d6f:	lea    r9,[rax+rcx*8+0x28]
  402d74:	mov    r8d,DWORD PTR [rax+0xc]
  402d78:	cmp    r8,rdx
  402d7b:	mov    rcx,r8
  402d7e:	ja     0x402d88
  402d80:	add    ecx,DWORD PTR [rax+0x8]
  402d83:	cmp    rdx,rcx
  402d86:	jb     0x402d93
  402d88:	add    rax,0x28
  402d8c:	cmp    rax,r9
  402d8f:	jne    0x402d74
  402d91:	xor    eax,eax
  402d93:	repz ret 
  402d95:	nop
  402d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402da0:	push   rdi
  402da1:	push   rsi
  402da2:	push   rbx
  402da3:	sub    rsp,0x20
  402da7:	mov    rsi,rcx
  402daa:	call   0x403128
  402daf:	cmp    rax,0x8
  402db3:	ja     0x402dd0
  402db5:	mov    rbx,QWORD PTR [rip+0x2564]        # 0x405320
  402dbc:	xor    edi,edi
  402dbe:	cmp    WORD PTR [rbx],0x5a4d
  402dc3:	je     0x402de0
  402dc5:	mov    rax,rdi
  402dc8:	add    rsp,0x20
  402dcc:	pop    rbx
  402dcd:	pop    rsi
  402dce:	pop    rdi
  402dcf:	ret    
  402dd0:	xor    edi,edi
  402dd2:	mov    rax,rdi
  402dd5:	add    rsp,0x20
  402dd9:	pop    rbx
  402dda:	pop    rsi
  402ddb:	pop    rdi
  402ddc:	ret    
  402ddd:	nop    DWORD PTR [rax]
  402de0:	mov    rcx,rbx
  402de3:	call   0x402d10
  402de8:	test   eax,eax
  402dea:	je     0x402dc5
  402dec:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402df0:	add    rdx,rbx
  402df3:	movzx  eax,WORD PTR [rdx+0x14]
  402df7:	lea    rbx,[rdx+rax*1+0x18]
  402dfc:	movzx  eax,WORD PTR [rdx+0x6]
  402e00:	test   eax,eax
  402e02:	je     0x402dc5
  402e04:	sub    eax,0x1
  402e07:	lea    rax,[rax+rax*4]
  402e0b:	lea    rdi,[rbx+rax*8+0x28]
  402e10:	jmp    0x402e1b
  402e12:	add    rbx,0x28
  402e16:	cmp    rbx,rdi
  402e19:	je     0x402dd0
  402e1b:	mov    r8d,0x8
  402e21:	mov    rdx,rsi
  402e24:	mov    rcx,rbx
  402e27:	call   0x403120
  402e2c:	test   eax,eax
  402e2e:	jne    0x402e12
  402e30:	mov    rdi,rbx
  402e33:	mov    rax,rdi
  402e36:	add    rsp,0x20
  402e3a:	pop    rbx
  402e3b:	pop    rsi
  402e3c:	pop    rdi
  402e3d:	ret    
  402e3e:	xchg   ax,ax
  402e40:	push   rsi
  402e41:	push   rbx
  402e42:	sub    rsp,0x28
  402e46:	mov    rbx,QWORD PTR [rip+0x24d3]        # 0x405320
  402e4d:	cmp    WORD PTR [rbx],0x5a4d
  402e52:	je     0x402e60
  402e54:	xor    eax,eax
  402e56:	add    rsp,0x28
  402e5a:	pop    rbx
  402e5b:	pop    rsi
  402e5c:	ret    
  402e5d:	nop    DWORD PTR [rax]
  402e60:	mov    rsi,rcx
  402e63:	mov    rcx,rbx
  402e66:	call   0x402d10
  402e6b:	test   eax,eax
  402e6d:	je     0x402e54
  402e6f:	sub    rsi,rbx
  402e72:	mov    rcx,rbx
  402e75:	mov    rdx,rsi
  402e78:	add    rsp,0x28
  402e7c:	pop    rbx
  402e7d:	pop    rsi
  402e7e:	jmp    0x402d50
  402e83:	nop    DWORD PTR [rax]
  402e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e90:	push   rbx
  402e91:	sub    rsp,0x20
  402e95:	mov    rbx,QWORD PTR [rip+0x2484]        # 0x405320
  402e9c:	xor    eax,eax
  402e9e:	cmp    WORD PTR [rbx],0x5a4d
  402ea3:	je     0x402eb0
  402ea5:	add    rsp,0x20
  402ea9:	pop    rbx
  402eaa:	ret    
  402eab:	nop    DWORD PTR [rax+rax*1+0x0]
  402eb0:	mov    rcx,rbx
  402eb3:	call   0x402d10
  402eb8:	test   eax,eax
  402eba:	je     0x402ea5
  402ebc:	movsxd rax,DWORD PTR [rbx+0x3c]
  402ec0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402ec5:	add    rsp,0x20
  402ec9:	pop    rbx
  402eca:	ret    
  402ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ed0:	push   rdi
  402ed1:	push   rsi
  402ed2:	push   rbx
  402ed3:	sub    rsp,0x20
  402ed7:	mov    rsi,QWORD PTR [rip+0x2442]        # 0x405320
  402ede:	xor    edi,edi
  402ee0:	mov    rbx,rcx
  402ee3:	cmp    WORD PTR [rsi],0x5a4d
  402ee8:	je     0x402ef5
  402eea:	mov    rax,rdi
  402eed:	add    rsp,0x20
  402ef1:	pop    rbx
  402ef2:	pop    rsi
  402ef3:	pop    rdi
  402ef4:	ret    
  402ef5:	mov    rcx,rsi
  402ef8:	call   0x402d10
  402efd:	test   eax,eax
  402eff:	je     0x402eea
  402f01:	movsxd rax,DWORD PTR [rsi+0x3c]
  402f05:	add    rsi,rax
  402f08:	movzx  eax,WORD PTR [rsi+0x14]
  402f0c:	lea    rdx,[rsi+rax*1+0x18]
  402f11:	movzx  eax,WORD PTR [rsi+0x6]
  402f15:	test   eax,eax
  402f17:	je     0x402eea
  402f19:	sub    eax,0x1
  402f1c:	lea    rax,[rax+rax*4]
  402f20:	lea    rax,[rdx+rax*8+0x28]
  402f25:	test   BYTE PTR [rdx+0x27],0x20
  402f29:	je     0x402f34
  402f2b:	test   rbx,rbx
  402f2e:	je     0x402f50
  402f30:	sub    rbx,0x1
  402f34:	add    rdx,0x28
  402f38:	cmp    rdx,rax
  402f3b:	jne    0x402f25
  402f3d:	xor    edi,edi
  402f3f:	mov    rax,rdi
  402f42:	add    rsp,0x20
  402f46:	pop    rbx
  402f47:	pop    rsi
  402f48:	pop    rdi
  402f49:	ret    
  402f4a:	nop    WORD PTR [rax+rax*1+0x0]
  402f50:	mov    rdi,rdx
  402f53:	mov    rax,rdi
  402f56:	add    rsp,0x20
  402f5a:	pop    rbx
  402f5b:	pop    rsi
  402f5c:	pop    rdi
  402f5d:	ret    
  402f5e:	xchg   ax,ax
  402f60:	push   rsi
  402f61:	push   rbx
  402f62:	sub    rsp,0x28
  402f66:	mov    rsi,QWORD PTR [rip+0x23b3]        # 0x405320
  402f6d:	xor    ebx,ebx
  402f6f:	cmp    WORD PTR [rsi],0x5a4d
  402f74:	je     0x402f80
  402f76:	mov    rax,rbx
  402f79:	add    rsp,0x28
  402f7d:	pop    rbx
  402f7e:	pop    rsi
  402f7f:	ret    
  402f80:	mov    rcx,rsi
  402f83:	call   0x402d10
  402f88:	test   eax,eax
  402f8a:	cmovne rbx,rsi
  402f8e:	mov    rax,rbx
  402f91:	add    rsp,0x28
  402f95:	pop    rbx
  402f96:	pop    rsi
  402f97:	ret    
  402f98:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	push   rsi
  402fa1:	push   rbx
  402fa2:	sub    rsp,0x28
  402fa6:	mov    rbx,QWORD PTR [rip+0x2373]        # 0x405320
  402fad:	xor    eax,eax
  402faf:	cmp    WORD PTR [rbx],0x5a4d
  402fb4:	je     0x402fc0
  402fb6:	add    rsp,0x28
  402fba:	pop    rbx
  402fbb:	pop    rsi
  402fbc:	ret    
  402fbd:	nop    DWORD PTR [rax]
  402fc0:	mov    rsi,rcx
  402fc3:	mov    rcx,rbx
  402fc6:	call   0x402d10
  402fcb:	test   eax,eax
  402fcd:	je     0x402fb6
  402fcf:	sub    rsi,rbx
  402fd2:	mov    rcx,rbx
  402fd5:	mov    rdx,rsi
  402fd8:	call   0x402d50
  402fdd:	test   rax,rax
  402fe0:	je     0x402ff1
  402fe2:	mov    eax,DWORD PTR [rax+0x24]
  402fe5:	not    eax
  402fe7:	shr    eax,0x1f
  402fea:	add    rsp,0x28
  402fee:	pop    rbx
  402fef:	pop    rsi
  402ff0:	ret    
  402ff1:	xor    eax,eax
  402ff3:	jmp    0x402fb6
  402ff5:	nop
  402ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403000:	push   rbp
  403001:	push   rdi
  403002:	push   rsi
  403003:	push   rbx
  403004:	sub    rsp,0x28
  403008:	mov    rdi,QWORD PTR [rip+0x2311]        # 0x405320
  40300f:	xor    ebp,ebp
  403011:	mov    esi,ecx
  403013:	cmp    WORD PTR [rdi],0x5a4d
  403018:	je     0x403030
  40301a:	mov    rax,rbp
  40301d:	add    rsp,0x28
  403021:	pop    rbx
  403022:	pop    rsi
  403023:	pop    rdi
  403024:	pop    rbp
  403025:	ret    
  403026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403030:	mov    rcx,rdi
  403033:	call   0x402d10
  403038:	test   eax,eax
  40303a:	je     0x40301a
  40303c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403040:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403047:	test   edx,edx
  403049:	je     0x40301a
  40304b:	mov    ebx,edx
  40304d:	mov    rcx,rdi
  403050:	mov    rdx,rbx
  403053:	call   0x402d50
  403058:	test   rax,rax
  40305b:	je     0x40301a
  40305d:	add    rbx,rdi
  403060:	mov    rdx,rbx
  403063:	jne    0x403077
  403065:	jmp    0x40301a
  403067:	nop    WORD PTR [rax+rax*1+0x0]
  403070:	sub    esi,0x1
  403073:	add    rdx,0x14
  403077:	mov    ecx,DWORD PTR [rdx+0x4]
  40307a:	test   ecx,ecx
  40307c:	jne    0x403085
  40307e:	mov    eax,DWORD PTR [rdx+0xc]
  403081:	test   eax,eax
  403083:	je     0x4030a0
  403085:	test   esi,esi
  403087:	jg     0x403070
  403089:	mov    ebp,DWORD PTR [rdx+0xc]
  40308c:	add    rbp,rdi
  40308f:	mov    rax,rbp
  403092:	add    rsp,0x28
  403096:	pop    rbx
  403097:	pop    rsi
  403098:	pop    rdi
  403099:	pop    rbp
  40309a:	ret    
  40309b:	nop    DWORD PTR [rax+rax*1+0x0]
  4030a0:	xor    ebp,ebp
  4030a2:	mov    rax,rbp
  4030a5:	add    rsp,0x28
  4030a9:	pop    rbx
  4030aa:	pop    rsi
  4030ab:	pop    rdi
  4030ac:	pop    rbp
  4030ad:	ret    
  4030ae:	nop
  4030af:	nop
  4030b0:	push   rcx
  4030b1:	push   rax
  4030b2:	cmp    rax,0x1000
  4030b8:	lea    rcx,[rsp+0x18]
  4030bd:	jb     0x4030d8
  4030bf:	sub    rcx,0x1000
  4030c6:	or     QWORD PTR [rcx],0x0
  4030ca:	sub    rax,0x1000
  4030d0:	cmp    rax,0x1000
  4030d6:	ja     0x4030bf
  4030d8:	sub    rcx,rax
  4030db:	or     QWORD PTR [rcx],0x0
  4030df:	pop    rax
  4030e0:	pop    rcx
  4030e1:	ret    
  4030e2:	nop
  4030e3:	nop
  4030e4:	nop
  4030e5:	nop
  4030e6:	nop
  4030e7:	nop
  4030e8:	nop
  4030e9:	nop
  4030ea:	nop
  4030eb:	nop
  4030ec:	nop
  4030ed:	nop
  4030ee:	nop
  4030ef:	nop
  4030f0:	jmp    QWORD PTR [rip+0x640e]        # 0x409504
  4030f6:	nop
  4030f7:	nop
  4030f8:	jmp    QWORD PTR [rip+0x63fe]        # 0x4094fc
  4030fe:	nop
  4030ff:	nop
  403100:	jmp    QWORD PTR [rip+0x63ee]        # 0x4094f4
  403106:	nop
  403107:	nop
  403108:	jmp    QWORD PTR [rip+0x63de]        # 0x4094ec
  40310e:	nop
  40310f:	nop
  403110:	jmp    QWORD PTR [rip+0x63ce]        # 0x4094e4
  403116:	nop
  403117:	nop
  403118:	jmp    QWORD PTR [rip+0x63be]        # 0x4094dc
  40311e:	nop
  40311f:	nop
  403120:	jmp    QWORD PTR [rip+0x63ae]        # 0x4094d4
  403126:	nop
  403127:	nop
  403128:	jmp    QWORD PTR [rip+0x639e]        # 0x4094cc
  40312e:	nop
  40312f:	nop
  403130:	jmp    QWORD PTR [rip+0x638e]        # 0x4094c4
  403136:	nop
  403137:	nop
  403138:	jmp    QWORD PTR [rip+0x637e]        # 0x4094bc
  40313e:	nop
  40313f:	nop
  403140:	jmp    QWORD PTR [rip+0x636e]        # 0x4094b4
  403146:	nop
  403147:	nop
  403148:	jmp    QWORD PTR [rip+0x635e]        # 0x4094ac
  40314e:	nop
  40314f:	nop
  403150:	jmp    QWORD PTR [rip+0x634e]        # 0x4094a4
  403156:	nop
  403157:	nop
  403158:	jmp    QWORD PTR [rip+0x633e]        # 0x40949c
  40315e:	nop
  40315f:	nop
  403160:	jmp    QWORD PTR [rip+0x632e]        # 0x409494
  403166:	nop
  403167:	nop
  403168:	jmp    QWORD PTR [rip+0x631e]        # 0x40948c
  40316e:	nop
  40316f:	nop
  403170:	jmp    QWORD PTR [rip+0x630e]        # 0x409484
  403176:	nop
  403177:	nop
  403178:	jmp    QWORD PTR [rip+0x62fe]        # 0x40947c
  40317e:	nop
  40317f:	nop
  403180:	jmp    QWORD PTR [rip+0x62ee]        # 0x409474
  403186:	nop
  403187:	nop
  403188:	jmp    QWORD PTR [rip+0x62de]        # 0x40946c
  40318e:	nop
  40318f:	nop
  403190:	jmp    QWORD PTR [rip+0x62ce]        # 0x409464
  403196:	nop
  403197:	nop
  403198:	jmp    QWORD PTR [rip+0x62be]        # 0x40945c
  40319e:	nop
  40319f:	nop
  4031a0:	jmp    QWORD PTR [rip+0x62ae]        # 0x409454
  4031a6:	nop
  4031a7:	nop
  4031a8:	jmp    QWORD PTR [rip+0x629e]        # 0x40944c
  4031ae:	nop
  4031af:	nop
  4031b0:	jmp    QWORD PTR [rip+0x628e]        # 0x409444
  4031b6:	nop
  4031b7:	nop
  4031b8:	jmp    QWORD PTR [rip+0x627e]        # 0x40943c
  4031be:	nop
  4031bf:	nop
  4031c0:	jmp    QWORD PTR [rip+0x626e]        # 0x409434
  4031c6:	nop
  4031c7:	nop
  4031c8:	jmp    QWORD PTR [rip+0x6256]        # 0x409424
  4031ce:	nop
  4031cf:	nop
  4031d0:	jmp    QWORD PTR [rip+0x6246]        # 0x40941c
  4031d6:	nop
  4031d7:	nop
  4031d8:	jmp    QWORD PTR [rip+0x6236]        # 0x409414
  4031de:	nop
  4031df:	nop
  4031e0:	jmp    QWORD PTR [rip+0x6226]        # 0x40940c
  4031e6:	nop
  4031e7:	nop
  4031e8:	jmp    QWORD PTR [rip+0x620e]        # 0x4093fc
  4031ee:	nop
  4031ef:	nop
  4031f0:	jmp    QWORD PTR [rip+0x61fe]        # 0x4093f4
  4031f6:	nop
  4031f7:	nop
  4031f8:	jmp    QWORD PTR [rip+0x61ee]        # 0x4093ec
  4031fe:	nop
  4031ff:	nop
  403200:	jmp    QWORD PTR [rip+0x61de]        # 0x4093e4
  403206:	nop
  403207:	nop
  403208:	jmp    QWORD PTR [rip+0x61c6]        # 0x4093d4
  40320e:	nop
  40320f:	nop
  403210:	jmp    QWORD PTR [rip+0x61b6]        # 0x4093cc
  403216:	nop
  403217:	nop
  403218:	jmp    QWORD PTR [rip+0x61a6]        # 0x4093c4
  40321e:	nop
  40321f:	nop
  403220:	mov    rax,QWORD PTR [rip+0x57c9]        # 0x4089f0
  403227:	ret    
  403228:	nop    DWORD PTR [rax+rax*1+0x0]
  403230:	mov    rax,rcx
  403233:	xchg   QWORD PTR [rip+0x57b6],rax        # 0x4089f0
  40323a:	ret    
  40323b:	nop
  40323c:	nop
  40323d:	nop
  40323e:	nop
  40323f:	nop
  403240:	jmp    QWORD PTR [rip+0x62ce]        # 0x409514
  403246:	nop
  403247:	nop
  403248:	nop    DWORD PTR [rax+rax*1+0x0]
  403250:	jmp    QWORD PTR [rip+0x615e]        # 0x4093b4
  403256:	nop
  403257:	nop
  403258:	jmp    QWORD PTR [rip+0x614e]        # 0x4093ac
  40325e:	nop
  40325f:	nop
  403260:	jmp    QWORD PTR [rip+0x613e]        # 0x4093a4
  403266:	nop
  403267:	nop
  403268:	jmp    QWORD PTR [rip+0x612e]        # 0x40939c
  40326e:	nop
  40326f:	nop
  403270:	jmp    QWORD PTR [rip+0x611e]        # 0x409394
  403276:	nop
  403277:	nop
  403278:	jmp    QWORD PTR [rip+0x610e]        # 0x40938c
  40327e:	nop
  40327f:	nop
  403280:	jmp    QWORD PTR [rip+0x60fe]        # 0x409384
  403286:	nop
  403287:	nop
  403288:	jmp    QWORD PTR [rip+0x60ee]        # 0x40937c
  40328e:	nop
  40328f:	nop
  403290:	jmp    QWORD PTR [rip+0x60de]        # 0x409374
  403296:	nop
  403297:	nop
  403298:	jmp    QWORD PTR [rip+0x60ce]        # 0x40936c
  40329e:	nop
  40329f:	nop
  4032a0:	jmp    QWORD PTR [rip+0x60be]        # 0x409364
  4032a6:	nop
  4032a7:	nop
  4032a8:	jmp    QWORD PTR [rip+0x60ae]        # 0x40935c
  4032ae:	nop
  4032af:	nop
  4032b0:	jmp    QWORD PTR [rip+0x609e]        # 0x409354
  4032b6:	nop
  4032b7:	nop
  4032b8:	jmp    QWORD PTR [rip+0x608e]        # 0x40934c
  4032be:	nop
  4032bf:	nop
  4032c0:	jmp    QWORD PTR [rip+0x607e]        # 0x409344
  4032c6:	nop
  4032c7:	nop
  4032c8:	jmp    QWORD PTR [rip+0x606e]        # 0x40933c
  4032ce:	nop
  4032cf:	nop
  4032d0:	jmp    QWORD PTR [rip+0x605e]        # 0x409334
  4032d6:	nop
  4032d7:	nop
  4032d8:	jmp    QWORD PTR [rip+0x604e]        # 0x40932c
  4032de:	nop
  4032df:	nop
  4032e0:	jmp    QWORD PTR [rip+0x603e]        # 0x409324
  4032e6:	nop
  4032e7:	nop
  4032e8:	jmp    QWORD PTR [rip+0x602e]        # 0x40931c
  4032ee:	nop
  4032ef:	nop
  4032f0:	jmp    QWORD PTR [rip+0x601e]        # 0x409314
  4032f6:	nop
  4032f7:	nop
  4032f8:	jmp    QWORD PTR [rip+0x600e]        # 0x40930c
  4032fe:	nop
  4032ff:	nop
  403300:	jmp    QWORD PTR [rip+0x5ffe]        # 0x409304
  403306:	nop
  403307:	nop
  403308:	jmp    QWORD PTR [rip+0x5fee]        # 0x4092fc
  40330e:	nop
  40330f:	nop
  403310:	jmp    QWORD PTR [rip+0x5fde]        # 0x4092f4
  403316:	nop
  403317:	nop
  403318:	jmp    QWORD PTR [rip+0x5fce]        # 0x4092ec
  40331e:	nop
  40331f:	nop
  403320:	push   rbx
  403321:	sub    rsp,0x30
  403325:	mov    ebx,ecx
  403327:	mov    QWORD PTR [rsp+0x48],rdx
  40332c:	call   QWORD PTR [rip+0x60ea]        # 0x40941c
  403332:	movsxd rax,DWORD PTR [rax]
  403335:	lea    rdx,[rsp+0x48]
  40333a:	mov    r8d,0x8
  403340:	mov    ecx,ebx
  403342:	mov    QWORD PTR [rsp+0x28],rax
  403347:	call   0x403110
  40334c:	lea    rdx,[rsp+0x28]
  403351:	mov    ecx,ebx
  403353:	mov    r8d,0x8
  403359:	call   0x403110
  40335e:	mov    ecx,0x1
  403363:	call   0x4031c8
  403368:	nop
  403369:	nop
  40336a:	nop
  40336b:	nop
  40336c:	nop
  40336d:	nop
  40336e:	nop
  40336f:	nop
  403370:	sub    rsp,0x28
  403374:	call   0x401d00
  403379:	mov    rax,QWORD PTR [rip+0x2020]        # 0x4053a0
  403380:	xor    edx,edx
  403382:	mov    r9d,DWORD PTR [rax]
  403385:	mov    rax,QWORD PTR [rip+0x2004]        # 0x405390
  40338c:	mov    r8,QWORD PTR [rax]
  40338f:	mov    rax,QWORD PTR [rip+0x1fea]        # 0x405380
  403396:	mov    rcx,QWORD PTR [rax]
  403399:	add    rsp,0x28
  40339d:	jmp    0x4015b0
  4033a2:	nop
  4033a3:	nop
  4033a4:	nop
  4033a5:	nop
  4033a6:	nop
  4033a7:	nop
  4033a8:	nop
  4033a9:	nop
  4033aa:	nop
  4033ab:	nop
  4033ac:	nop
  4033ad:	nop
  4033ae:	nop
  4033af:	nop
  4033b0:	(bad)  
  4033b1:	(bad)  
  4033b2:	(bad)  
  4033b3:	(bad)  
  4033b4:	(bad)  
  4033b5:	(bad)  
  4033b6:	(bad)  
  4033b7:	inc    DWORD PTR [rax]
  4033b9:	add    BYTE PTR [rax],al
  4033bb:	add    BYTE PTR [rax],al
  4033bd:	add    BYTE PTR [rax],al
  4033bf:	add    bh,bh
  4033c1:	(bad)  
  4033c2:	(bad)  
  4033c3:	(bad)  
  4033c4:	(bad)  
  4033c5:	(bad)  
  4033c6:	(bad)  
  4033c7:	inc    DWORD PTR [rax]
  4033c9:	add    BYTE PTR [rax],al
  4033cb:	add    BYTE PTR [rax],al
  4033cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	enter  0x4033,0x0
	...
  404020:	(bad)  
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rax],ah
  404061:	xor    al,BYTE PTR [rax+0x0]
  404064:	add    BYTE PTR [rax],al
  404066:	add    BYTE PTR [rax],al
  404068:	xor    BYTE PTR [rdx],dh
  40406a:	add    BYTE PTR [rax],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	rex.WRX push rbp
  405002:	rex.WR cmp r8b,BYTE PTR [rax]
  405005:	addr32 jae 0x405078
  405008:	(bad)  
  405009:	ja     0x405079
  40500b:	sub    eax,0x336e6977
  405010:	xor    ch,BYTE PTR [rip+0x706c6568]        # 0x70acb57e
  405016:	gs jb  0x405047
  405019:	movsxd eax,DWORD PTR [rax]
  40501b:	(bad)  
  40501c:	jb     0x405085
  40501e:	movsxd esp,DWORD PTR [rax]
  405020:	ds cmp eax,0x47524120
  405026:	pop    rdi
  405027:	rex.XB
  405028:	rex.WRXB push r13
  40502a:	rex.WRX push rsp
  40502c:	add    BYTE PTR [rdi+0x69],dl
  40502f:	outs   dx,BYTE PTR ds:[rsi]
  405030:	rex.WRB (bad) 
  405032:	imul   ebp,DWORD PTR [rsi+0x0],0x0
  405039:	add    BYTE PTR [rax],al
  40503b:	add    BYTE PTR [rax],al
  40503d:	add    BYTE PTR [rax],al
  40503f:	add    BYTE PTR [rax+0x4085],al
  405045:	add    BYTE PTR [rax],al
  405047:	add    BYTE PTR [rax+0x4080],al
  40504d:	add    BYTE PTR [rax],al
  40504f:	add    BYTE PTR [rax+0x1f],dl
  405052:	add    BYTE PTR [rax],al
	...
  40505d:	add    BYTE PTR [rax],al
  40505f:	add    BYTE PTR [rcx+0x72],al
  405062:	addr32 jne 0x4050d2
  405065:	outs   dx,BYTE PTR gs:[rsi]
  405067:	je     0x405089
  405069:	outs   dx,DWORD PTR fs:[rsi]
  40506b:	ins    DWORD PTR es:[rdi],dx
  40506c:	(bad)  
  40506d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405074:	jb     0x405096
  405076:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40507a:	rex.B
  40507b:	rex.WB
  40507c:	rex.WRX sub QWORD PTR [rax],r8
  40507f:	rex.B jb 0x4050e9
  405082:	jne    0x4050f1
  405084:	outs   dx,BYTE PTR gs:[rsi]
  405086:	je     0x4050a8
  405088:	jae    0x4050f3
  40508a:	outs   dx,BYTE PTR ds:[rsi]
  40508b:	addr32 jne 0x4050fa
  40508e:	(bad)  
  40508f:	jb     0x4050fa
  405091:	je     0x40510c
  405093:	and    BYTE PTR [rax],ch
  405095:	push   rbx
  405096:	rex.WB
  405097:	rex.RXB
  405098:	rex.WRX sub QWORD PTR [rax],r8
  40509b:	add    BYTE PTR [rax],al
  40509d:	add    BYTE PTR [rax],al
  40509f:	add    BYTE PTR [rdi+0x76],cl
  4050a2:	gs jb  0x40510b
  4050a5:	ins    BYTE PTR es:[rdi],dx
  4050a6:	outs   dx,DWORD PTR ds:[rsi]
  4050a7:	ja     0x4050c9
  4050a9:	jb     0x40510c
  4050ab:	outs   dx,BYTE PTR ds:[rsi]
  4050ac:	and    BYTE PTR gs:[ebp+0x72],ah
  4050b1:	jb     0x405122
  4050b3:	jb     0x4050d5
  4050b5:	sub    BYTE PTR [rdi+0x56],cl
  4050b8:	rex.RB push r10
  4050ba:	rex.RX
  4050bb:	rex.WR
  4050bc:	rex.WRXB push r15
  4050be:	sub    DWORD PTR [rax],eax
  4050c0:	push   rax
  4050c1:	(bad)  
  4050c2:	jb     0x405138
  4050c4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4050cb:	jae    0x4050ed
  4050cd:	outs   dx,DWORD PTR ds:[rsi]
  4050ce:	data16 and BYTE PTR [rbx+0x69],dh
  4050d2:	outs   dx,BYTE PTR ds:[esi]
  4050d4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4050db:	and    BYTE PTR gs:[rax],ch
  4050de:	push   rax
  4050df:	rex.WR
  4050e0:	rex.WRXB push r11
  4050e2:	push   rbx
  4050e3:	sub    DWORD PTR [rax],eax
  4050e5:	add    BYTE PTR [rax],al
  4050e7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4050eb:	(bad)  
  4050ec:	ins    BYTE PTR es:[rdi],dx
  4050ed:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4050f1:	jae    0x405113
  4050f3:	outs   dx,DWORD PTR ds:[rsi]
  4050f4:	data16 and BYTE PTR [rbx+0x69],dh
  4050f8:	outs   dx,BYTE PTR ds:[esi]
  4050fa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405101:	and    BYTE PTR gs:[rax],ch
  405104:	push   rsp
  405105:	rex.WR
  405106:	rex.WRXB push r11
  405108:	push   rbx
  405109:	sub    DWORD PTR [rax],eax
  40510b:	add    BYTE PTR [rax],al
  40510d:	add    BYTE PTR [rax],al
  40510f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405113:	and    BYTE PTR [rdx+0x65],dh
  405116:	jae    0x40518d
  405118:	ins    BYTE PTR es:[rdi],dx
  405119:	je     0x40513b
  40511b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405122:	jae    0x405191
  405124:	(bad)  
  405125:	ins    BYTE PTR es:[rdi],dx
  405126:	ins    BYTE PTR es:[rdi],dx
  405127:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40512b:	(bad)  
  40512c:	and    BYTE PTR gs:[rdx+0x65],dh
  405130:	jo     0x4051a4
  405132:	gs jae 0x40519a
  405135:	outs   dx,BYTE PTR ds:[rsi]
  405136:	je     0x40519d
  405138:	and    BYTE PTR fs:[rax],ch
  40513b:	push   rbp
  40513c:	rex.WRX
  40513d:	rex.R
  40513e:	rex.RB push r10
  405140:	rex.RX
  405141:	rex.WR
  405142:	rex.WRXB push r15
  405144:	sub    DWORD PTR [rax],eax
  405146:	push   rbp
  405147:	outs   dx,BYTE PTR ds:[rsi]
  405148:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40514c:	outs   dx,BYTE PTR ds:[rsi]
  40514d:	and    BYTE PTR [rbp+0x72],ah
  405150:	jb     0x4051c1
  405152:	jb     0x405154
  405154:	add    BYTE PTR [rax],al
  405156:	add    BYTE PTR [rax],al
  405158:	pop    rdi
  405159:	ins    DWORD PTR es:[rdi],dx
  40515a:	(bad)  
  40515b:	je     0x4051c5
  40515d:	gs jb  0x4051d2
  405160:	sub    BYTE PTR [rcx],ch
  405162:	cmp    ah,BYTE PTR [rax]
  405164:	and    eax,0x6e692073
  405169:	and    BYTE PTR [rip+0x67252873],ah        # 0x676579e2
  40516f:	sub    al,0x20
  405171:	and    eax,0x20202967
  405176:	sub    BYTE PTR [rdx+0x65],dh
  405179:	je     0x4051f1
  40517b:	(bad)  
  40517c:	ins    BYTE PTR es:[rdi],dx
  40517d:	cmp    eax,0xa296725
  405182:	add    BYTE PTR [rax],al
  405184:	pushf  
  405185:	iret   
  405186:	(bad)  
  405187:	(bad)  
  405188:	(bad)  
  40518a:	(bad)  
  40518b:	dec    DWORD PTR [rdi+rcx*8-0x1]
  40518f:	call   FWORD PTR [rdi+rcx*8-0x1]
  405193:	jmp    FWORD PTR [rdi+rcx*8-0x1]
  405197:	(bad)  
  405198:	jl     0x405169
  40519a:	(bad)  
  40519b:	dec    DWORD PTR [rdi+rcx*8+0x694dffff]
  4051a2:	outs   dx,BYTE PTR ds:[rsi]
  4051a3:	addr32 ja 0x4051d3
  4051a6:	ja     0x4051de
  4051a8:	xor    al,0x20
  4051aa:	jb     0x405221
  4051ac:	outs   dx,BYTE PTR ds:[rsi]
  4051ad:	je     0x405218
  4051af:	ins    DWORD PTR es:[rdi],dx
  4051b0:	and    BYTE PTR gs:[rsi+0x61],ah
  4051b4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4051bc:	add    BYTE PTR [rax],al
  4051be:	add    BYTE PTR [rax],al
  4051c0:	rex.B
  4051c1:	fs fs jb 0x40522a
  4051c5:	jae    0x40523a
  4051c7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8723d
  4051cd:	jae    0x4051ef
  4051cf:	outs   dx,BYTE PTR ds:[rsi]
  4051d0:	outs   dx,DWORD PTR ds:[rsi]
  4051d1:	and    BYTE PTR [rcx+0x6d],ch
  4051d4:	(bad)  
  4051d5:	addr32 gs sub eax,0x74636573
  4051dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4051e3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4051ea:	jne    0x405251
  4051ec:	jb     0x405267
  4051ee:	and    BYTE PTR [rsi+0x61],ah
  4051f1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4051f9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27263
  4051ff:	je     0x405266
  405201:	jae    0x405223
  405203:	(bad)  
  405204:	je     0x405226
  405206:	(bad)  
  405207:	fs fs jb 0x405270
  40520b:	jae    0x405280
  40520d:	and    BYTE PTR [rip+0x70],ah        # 0x405283
  405213:	add    BYTE PTR [rax],al
  405215:	add    BYTE PTR [rax],al
  405217:	add    BYTE PTR [rax],ah
  405219:	and    BYTE PTR [rsi+0x69],dl
  40521c:	jb     0x405292
  40521e:	jne    0x405281
  405220:	ins    BYTE PTR es:[rdi],dx
  405221:	push   rax
  405222:	jb     0x405293
  405224:	je     0x40528b
  405226:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40522a:	(bad)  
  40522b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405233:	push   0x646f6320
  405238:	and    BYTE PTR gs:[rax],dh
  40523b:	js     0x405262
  40523d:	js     0x40523f
  40523f:	add    BYTE PTR [rax],ah
  405241:	and    BYTE PTR [rbp+0x6e],dl
  405244:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405248:	outs   dx,BYTE PTR ds:[rsi]
  405249:	and    BYTE PTR [rax+0x73],dh
  40524c:	gs jne 0x4052b3
  40524f:	outs   dx,DWORD PTR ds:[rsi]
  405250:	and    BYTE PTR [rdx+0x65],dh
  405253:	ins    BYTE PTR es:[rdi],dx
  405254:	outs   dx,DWORD PTR ds:[rsi]
  405255:	movsxd esp,DWORD PTR [rcx+0x74]
  405258:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40525f:	je     0x4052d0
  405261:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405264:	and    BYTE PTR [rsi+0x65],dh
  405267:	jb     0x4052dc
  405269:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405270:	or     al,BYTE PTR [rax]
  405272:	add    BYTE PTR [rax],al
  405274:	add    BYTE PTR [rax],al
  405276:	add    BYTE PTR [rax],al
  405278:	and    BYTE PTR [rax],ah
  40527a:	push   rbp
  40527b:	outs   dx,BYTE PTR ds:[rsi]
  40527c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405280:	outs   dx,BYTE PTR ds:[rsi]
  405281:	and    BYTE PTR [rax+0x73],dh
  405284:	gs jne 0x4052eb
  405287:	outs   dx,DWORD PTR ds:[rsi]
  405288:	and    BYTE PTR [rdx+0x65],dh
  40528b:	ins    BYTE PTR es:[rdi],dx
  40528c:	outs   dx,DWORD PTR ds:[rsi]
  40528d:	movsxd esp,DWORD PTR [rcx+0x74]
  405290:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405297:	and    BYTE PTR [rbx+0x69],dh
  40529a:	jp     0x405301
  40529c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8106
	...
  4052ae:	add    BYTE PTR [rax],al
  4052b0:	cs jo  0x405317
  4052b3:	(bad)  
  4052b4:	je     0x405317
	...
  4052be:	add    BYTE PTR [rax],al
  4052c0:	rex
  4052c1:	rex
  4052c2:	add    BYTE PTR [rax],al
	...
  4052cd:	add    BYTE PTR [rax],al
  4052cf:	add    BYTE PTR [rax+0x40],dl
  4052d2:	add    BYTE PTR [rax],al
	...
  4052dd:	add    BYTE PTR [rax],al
  4052df:	add    BYTE PTR [rax+0x4033],dh
	...
  4052ed:	add    BYTE PTR [rax],al
  4052ef:	add    BYTE PTR [rax+0x58],dl
  4052f2:	add    BYTE PTR [rax],al
	...
  4052fd:	add    BYTE PTR [rax],al
  4052ff:	add    BYTE PTR [rax+0x58],dl
  405302:	add    BYTE PTR [rax],al
	...
  40530d:	add    BYTE PTR [rax],al
  40530f:	add    BYTE PTR [rax+0x50],dl
  405312:	add    BYTE PTR [rax],al
	...
  405321:	add    BYTE PTR [rax+0x0],al
	...
  405330:	fcom   QWORD PTR [rbx+0x40]
	...
  40533e:	add    BYTE PTR [rax],al
  405340:	add    al,0x94
  405342:	add    BYTE PTR [rax],al
	...
  40534d:	add    BYTE PTR [rax],al
  40534f:	add    BYTE PTR [rsp+rdx*4],ch
  405352:	add    BYTE PTR [rax],al
	...
  40535d:	add    BYTE PTR [rax],al
  40535f:	add    BYTE PTR [rsp+rdx*4+0x40],cl
	...
  40536f:	add    al,al
  405371:	xchg   BYTE PTR [rax+0x0],al
	...
  405380:	or     BYTE PTR [rdx+0x40],cl
	...
  40538e:	add    BYTE PTR [rax],al
  405390:	add    BYTE PTR [rdx+0x40],cl
	...
  40539e:	add    BYTE PTR [rax],al
  4053a0:	add    BYTE PTR [rax+0x40],al
	...
  4053af:	add    BYTE PTR [rax],ch
  4053b1:	mov    al,BYTE PTR [rax+0x0]
	...
  4053c0:	and    BYTE PTR [rdx+0x40],cl
	...
  4053ce:	add    BYTE PTR [rax],al
  4053d0:	adc    BYTE PTR [rdx+0x40],cl
	...
  4053de:	add    BYTE PTR [rax],al
  4053e0:	sbb    BYTE PTR [rdx+0x40],cl
	...
  4053ee:	add    BYTE PTR [rax],al
  4053f0:	add    BYTE PTR [rax+0x40],ah
	...
  4053fe:	add    BYTE PTR [rax],al
  405400:	adc    BYTE PTR [rax+0x40],ah
	...
  40540e:	add    BYTE PTR [rax],al
  405410:	sbb    BYTE PTR [rax+0x40],ah
	...
  40541e:	add    BYTE PTR [rax],al
  405420:	xor    BYTE PTR [rax+0x40],ah
	...
  40542e:	add    BYTE PTR [rax],al
  405430:	rex add BYTE PTR [rax+0x0],0x0
	...
  40543d:	add    BYTE PTR [rax],al
  40543f:	add    BYTE PTR [rax+0x4086],dl
	...
  40544d:	add    BYTE PTR [rax],al
  40544f:	add    al,ah
  405451:	sub    BYTE PTR [rax+0x0],al
	...
  405460:	xor    BYTE PTR [rax],ah
  405462:	add    BYTE PTR [rax],al
	...
  40546d:	add    BYTE PTR [rax],al
  40546f:	add    BYTE PTR [rax-0x7a],al
  405472:	add    BYTE PTR [rax],al
	...
  40547d:	add    BYTE PTR [rax],al
  40547f:	add    BYTE PTR [rax-0x7a],dh
  405482:	add    BYTE PTR [rax],al
	...
  40548d:	add    BYTE PTR [rax],al
  40548f:	add    BYTE PTR [rax-0x80],dl
  405492:	add    BYTE PTR [rax],al
	...
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rax-0x7a],bl
  4054a2:	add    BYTE PTR [rax],al
	...
  4054ad:	add    BYTE PTR [rax],al
  4054af:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4054bf:	add    BYTE PTR [rax-0x7a],dl
  4054c2:	add    BYTE PTR [rax],al
	...
  4054cd:	add    BYTE PTR [rax],al
  4054cf:	add    BYTE PTR [rdi+0x43],al
  4054d2:	rex.XB cmp spl,BYTE PTR [r8]
  4054d5:	sub    BYTE PTR [rdi+0x4e],al
  4054d8:	push   rbp
  4054d9:	sub    DWORD PTR [rax],esp
  4054db:	xor    al,0x2e
  4054dd:	cmp    DWORD PTR [rsi],ebp
  4054df:	xor    al,0x0
	...
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    BYTE PTR [rdi+0x43],al
  4054f2:	rex.XB cmp spl,BYTE PTR [r8]
  4054f5:	sub    BYTE PTR [rdi+0x4e],al
  4054f8:	push   rbp
  4054f9:	sub    DWORD PTR [rax],esp
  4054fb:	xor    al,0x2e
  4054fd:	cmp    DWORD PTR [rsi],ebp
  4054ff:	xor    al,0x0
	...
  40550d:	add    BYTE PTR [rax],al
  40550f:	add    BYTE PTR [rdi+0x43],al
  405512:	rex.XB cmp spl,BYTE PTR [r8]
  405515:	sub    BYTE PTR [rdi+0x4e],al
  405518:	push   rbp
  405519:	sub    DWORD PTR [rax],esp
  40551b:	xor    al,0x2e
  40551d:	cmp    DWORD PTR [rsi],ebp
  40551f:	xor    al,0x0
	...
  40552d:	add    BYTE PTR [rax],al
  40552f:	add    BYTE PTR [rdi+0x43],al
  405532:	rex.XB cmp spl,BYTE PTR [r8]
  405535:	sub    BYTE PTR [rdi+0x4e],al
  405538:	push   rbp
  405539:	sub    DWORD PTR [rax],esp
  40553b:	xor    al,0x2e
  40553d:	cmp    DWORD PTR [rsi],ebp
  40553f:	xor    al,0x0
	...
  40554d:	add    BYTE PTR [rax],al
  40554f:	add    BYTE PTR [rdi+0x43],al
  405552:	rex.XB cmp spl,BYTE PTR [r8]
  405555:	sub    BYTE PTR [rdi+0x4e],al
  405558:	push   rbp
  405559:	sub    DWORD PTR [rax],esp
  40555b:	xor    al,0x2e
  40555d:	cmp    DWORD PTR [rsi],ebp
  40555f:	xor    al,0x0
	...
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    BYTE PTR [rdi+0x43],al
  405572:	rex.XB cmp spl,BYTE PTR [r8]
  405575:	sub    BYTE PTR [rdi+0x4e],al
  405578:	push   rbp
  405579:	sub    DWORD PTR [rax],esp
  40557b:	xor    al,0x2e
  40557d:	cmp    DWORD PTR [rsi],ebp
  40557f:	xor    al,0x0
	...
  40558d:	add    BYTE PTR [rax],al
  40558f:	add    BYTE PTR [rdi+0x43],al
  405592:	rex.XB cmp spl,BYTE PTR [r8]
  405595:	sub    BYTE PTR [rdi+0x4e],al
  405598:	push   rbp
  405599:	sub    DWORD PTR [rax],esp
  40559b:	xor    al,0x2e
  40559d:	cmp    DWORD PTR [rsi],ebp
  40559f:	xor    al,0x0
	...
  4055ad:	add    BYTE PTR [rax],al
  4055af:	add    BYTE PTR [rdi+0x43],al
  4055b2:	rex.XB cmp spl,BYTE PTR [r8]
  4055b5:	sub    BYTE PTR [rdi+0x4e],al
  4055b8:	push   rbp
  4055b9:	sub    DWORD PTR [rax],esp
  4055bb:	xor    al,0x2e
  4055bd:	cmp    DWORD PTR [rsi],ebp
  4055bf:	xor    al,0x0
	...
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    BYTE PTR [rdi+0x43],al
  4055d2:	rex.XB cmp spl,BYTE PTR [r8]
  4055d5:	sub    BYTE PTR [rdi+0x4e],al
  4055d8:	push   rbp
  4055d9:	sub    DWORD PTR [rax],esp
  4055db:	xor    al,0x2e
  4055dd:	cmp    DWORD PTR [rsi],ebp
  4055df:	xor    al,0x0
	...
  4055ed:	add    BYTE PTR [rax],al
  4055ef:	add    BYTE PTR [rdi+0x43],al
  4055f2:	rex.XB cmp spl,BYTE PTR [r8]
  4055f5:	sub    BYTE PTR [rdi+0x4e],al
  4055f8:	push   rbp
  4055f9:	sub    DWORD PTR [rax],esp
  4055fb:	xor    al,0x2e
  4055fd:	cmp    DWORD PTR [rsi],ebp
  4055ff:	xor    al,0x0
	...
  40560d:	add    BYTE PTR [rax],al
  40560f:	add    BYTE PTR [rdi+0x43],al
  405612:	rex.XB cmp spl,BYTE PTR [r8]
  405615:	sub    BYTE PTR [rdi+0x4e],al
  405618:	push   rbp
  405619:	sub    DWORD PTR [rax],esp
  40561b:	xor    al,0x2e
  40561d:	cmp    DWORD PTR [rsi],ebp
  40561f:	xor    al,0x0
	...
  40562d:	add    BYTE PTR [rax],al
  40562f:	add    BYTE PTR [rdi+0x43],al
  405632:	rex.XB cmp spl,BYTE PTR [r8]
  405635:	sub    BYTE PTR [rdi+0x4e],al
  405638:	push   rbp
  405639:	sub    DWORD PTR [rax],esp
  40563b:	xor    al,0x2e
  40563d:	cmp    DWORD PTR [rsi],ebp
  40563f:	xor    al,0x0
	...
  40564d:	add    BYTE PTR [rax],al
  40564f:	add    BYTE PTR [rdi+0x43],al
  405652:	rex.XB cmp spl,BYTE PTR [r8]
  405655:	sub    BYTE PTR [rdi+0x4e],al
  405658:	push   rbp
  405659:	sub    DWORD PTR [rax],esp
  40565b:	xor    al,0x2e
  40565d:	cmp    DWORD PTR [rsi],ebp
  40565f:	xor    al,0x0
	...
  40566d:	add    BYTE PTR [rax],al
  40566f:	add    BYTE PTR [rdi+0x43],al
  405672:	rex.XB cmp spl,BYTE PTR [r8]
  405675:	sub    BYTE PTR [rdi+0x4e],al
  405678:	push   rbp
  405679:	sub    DWORD PTR [rax],esp
  40567b:	xor    al,0x2e
  40567d:	cmp    DWORD PTR [rsi],ebp
  40567f:	xor    al,0x0
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rdi+0x43],al
  405692:	rex.XB cmp spl,BYTE PTR [r8]
  405695:	sub    BYTE PTR [rdi+0x4e],al
  405698:	push   rbp
  405699:	sub    DWORD PTR [rax],esp
  40569b:	xor    al,0x2e
  40569d:	cmp    DWORD PTR [rsi],ebp
  40569f:	xor    al,0x0
	...
  4056ad:	add    BYTE PTR [rax],al
  4056af:	add    BYTE PTR [rdi+0x43],al
  4056b2:	rex.XB cmp spl,BYTE PTR [r8]
  4056b5:	sub    BYTE PTR [rdi+0x4e],al
  4056b8:	push   rbp
  4056b9:	sub    DWORD PTR [rax],esp
  4056bb:	xor    al,0x2e
  4056bd:	cmp    DWORD PTR [rsi],ebp
  4056bf:	xor    al,0x0
	...
  4056cd:	add    BYTE PTR [rax],al
  4056cf:	add    BYTE PTR [rdi+0x43],al
  4056d2:	rex.XB cmp spl,BYTE PTR [r8]
  4056d5:	sub    BYTE PTR [rdi+0x4e],al
  4056d8:	push   rbp
  4056d9:	sub    DWORD PTR [rax],esp
  4056db:	xor    al,0x2e
  4056dd:	cmp    DWORD PTR [rsi],ebp
  4056df:	xor    al,0x0
	...
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	add    BYTE PTR [rdi+0x43],al
  4056f2:	rex.XB cmp spl,BYTE PTR [r8]
  4056f5:	sub    BYTE PTR [rdi+0x4e],al
  4056f8:	push   rbp
  4056f9:	sub    DWORD PTR [rax],esp
  4056fb:	xor    al,0x2e
  4056fd:	cmp    DWORD PTR [rsi],ebp
  4056ff:	xor    al,0x0
	...
  40570d:	add    BYTE PTR [rax],al
  40570f:	add    BYTE PTR [rdi+0x43],al
  405712:	rex.XB cmp spl,BYTE PTR [r8]
  405715:	sub    BYTE PTR [rdi+0x4e],al
  405718:	push   rbp
  405719:	sub    DWORD PTR [rax],esp
  40571b:	xor    al,0x2e
  40571d:	cmp    DWORD PTR [rsi],ebp
  40571f:	xor    al,0x0
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    BYTE PTR [rdi+0x43],al
  405732:	rex.XB cmp spl,BYTE PTR [r8]
  405735:	sub    BYTE PTR [rdi+0x4e],al
  405738:	push   rbp
  405739:	sub    DWORD PTR [rax],esp
  40573b:	xor    al,0x2e
  40573d:	cmp    DWORD PTR [rsi],ebp
  40573f:	xor    al,0x0
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rdi+0x43],al
  405752:	rex.XB cmp spl,BYTE PTR [r8]
  405755:	sub    BYTE PTR [rdi+0x4e],al
  405758:	push   rbp
  405759:	sub    DWORD PTR [rax],esp
  40575b:	xor    al,0x2e
  40575d:	cmp    DWORD PTR [rsi],ebp
  40575f:	xor    al,0x0
	...
  40576d:	add    BYTE PTR [rax],al
  40576f:	add    BYTE PTR [rdi+0x43],al
  405772:	rex.XB cmp spl,BYTE PTR [r8]
  405775:	sub    BYTE PTR [rdi+0x4e],al
  405778:	push   rbp
  405779:	sub    DWORD PTR [rax],esp
  40577b:	xor    al,0x2e
  40577d:	cmp    DWORD PTR [rsi],ebp
  40577f:	xor    al,0x0
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    BYTE PTR [rdi+0x43],al
  405792:	rex.XB cmp spl,BYTE PTR [r8]
  405795:	sub    BYTE PTR [rdi+0x4e],al
  405798:	push   rbp
  405799:	sub    DWORD PTR [rax],esp
  40579b:	xor    al,0x2e
  40579d:	cmp    DWORD PTR [rsi],ebp
  40579f:	xor    al,0x0
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    BYTE PTR [rdi+0x43],al
  4057b2:	rex.XB cmp spl,BYTE PTR [r8]
  4057b5:	sub    BYTE PTR [rdi+0x4e],al
  4057b8:	push   rbp
  4057b9:	sub    DWORD PTR [rax],esp
  4057bb:	xor    al,0x2e
  4057bd:	cmp    DWORD PTR [rsi],ebp
  4057bf:	xor    al,0x0
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rdi+0x43],al
  4057d2:	rex.XB cmp spl,BYTE PTR [r8]
  4057d5:	sub    BYTE PTR [rdi+0x4e],al
  4057d8:	push   rbp
  4057d9:	sub    DWORD PTR [rax],esp
  4057db:	xor    al,0x2e
  4057dd:	cmp    DWORD PTR [rsi],ebp
  4057df:	xor    al,0x0
	...
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    BYTE PTR [rdi+0x43],al
  4057f2:	rex.XB cmp spl,BYTE PTR [r8]
  4057f5:	sub    BYTE PTR [rdi+0x4e],al
  4057f8:	push   rbp
  4057f9:	sub    DWORD PTR [rax],esp
  4057fb:	xor    al,0x2e
  4057fd:	cmp    DWORD PTR [rsi],ebp
  4057ff:	xor    al,0x0
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rdi+0x43],al
  405812:	rex.XB cmp spl,BYTE PTR [r8]
  405815:	sub    BYTE PTR [rdi+0x4e],al
  405818:	push   rbp
  405819:	sub    DWORD PTR [rax],esp
  40581b:	xor    al,0x2e
  40581d:	cmp    DWORD PTR [rsi],ebp
  40581f:	xor    al,0x0
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rdi+0x43],al
  405832:	rex.XB cmp spl,BYTE PTR [r8]
  405835:	sub    BYTE PTR [rdi+0x4e],al
  405838:	push   rbp
  405839:	sub    DWORD PTR [rax],esp
  40583b:	xor    al,0x2e
  40583d:	cmp    DWORD PTR [rsi],ebp
  40583f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x15a50000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffffb0000070
  406055:	adc    eax,0x1b6e0000
  40605a:	add    BYTE PTR [rax],al
  40605c:	js     0x4060ce
  40605e:	add    BYTE PTR [rax],al
  406060:	nop
  406061:	sbb    eax,DWORD PTR [rax]
  406063:	add    BYTE PTR [rdi],dh
  406065:	sbb    al,0x0
  406067:	add    BYTE PTR [rax+0x40000070],bl
  40606d:	sbb    al,0x0
  40606f:	add    BYTE PTR [rcx+0x1c],bl
  406072:	add    BYTE PTR [rax],al
  406074:	movabs al,ds:0x9500001c60000070
  40607d:	sbb    al,0x0
  40607f:	add    BYTE PTR [rax-0x5fffff90],dh
  406085:	sbb    al,0x0
  406087:	add    ch,dh
  406089:	sbb    al,0x0
  40608b:	add    BYTE PTR [rax+0x70],bh
  406091:	sbb    eax,0x1d1c0000
  406096:	add    BYTE PTR [rax],al
  406098:	(bad)  
  406099:	jo     0x40609b
  40609b:	add    BYTE PTR [rax],ah
  40609d:	sbb    eax,0x1d2a0000
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	enter  0x70,0x0
  4060a8:	xor    BYTE PTR [rip+0x1d330000],bl        # 0x1d7360ae
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	int3   
  4060b1:	jo     0x4060b3
  4060b3:	add    BYTE PTR [rax+0x1d],al
  4060b6:	add    BYTE PTR [rax],al
  4060b8:	(bad)  
  4060b9:	(bad)  
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	shl    BYTE PTR [rax+0x0],1
  4060bf:	add    BYTE PTR [rax],ah
  4060c1:	(bad)  
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	sbb    ebx,DWORD PTR [rdi]
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	loopne 0x40613a
  4060ca:	add    BYTE PTR [rax],al
  4060cc:	and    BYTE PTR [rdi],bl
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	rex.WRXB (bad) 
  4060d2:	add    BYTE PTR [rax],al
  4060d4:	lock jo 0x4060d7
  4060d7:	add    BYTE PTR [rax+0x1f],dl
  4060da:	add    BYTE PTR [rax],al
  4060dc:	mov    ecx,0xf800001f
  4060e1:	jo     0x4060e3
  4060e3:	add    al,al
  4060e5:	(bad)  
  4060e6:	add    BYTE PTR [rax],al
  4060e8:	ret    
  4060e9:	(bad)  
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	add    al,0x71
  4060ee:	add    BYTE PTR [rax],al
  4060f0:	rcr    BYTE PTR [rdi],1
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	adc    DWORD PTR [rax],esp
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	or     BYTE PTR [rcx+0x0],dh
  4060fb:	add    BYTE PTR [rax],ah
  4060fd:	and    BYTE PTR [rax],al
  4060ff:	add    BYTE PTR [rax+riz*1],ch
  406102:	add    BYTE PTR [rax],al
  406104:	adc    BYTE PTR [rcx+0x0],dh
  406107:	add    BYTE PTR [rax],dh
  406109:	and    BYTE PTR [rax],al
  40610b:	add    BYTE PTR [rcx+riz*1],ch
  40610e:	add    BYTE PTR [rax],al
  406110:	adc    al,0x71
  406112:	add    BYTE PTR [rax],al
  406114:	xor    BYTE PTR [rcx],ah
  406116:	add    BYTE PTR [rax],al
  406118:	xor    esp,DWORD PTR [rcx]
  40611a:	add    BYTE PTR [rax],al
  40611c:	sub    al,0x71
  40611e:	add    BYTE PTR [rax],al
  406120:	rex and DWORD PTR [rax],eax
  406123:	add    BYTE PTR [rcx+riz*1+0x0],al
  406127:	add    BYTE PTR [rax],dh
  406129:	jno    0x40612b
  40612b:	add    BYTE PTR [rax+0x21],dl
  40612e:	add    BYTE PTR [rax],al
  406130:	push   rsp
  406131:	and    DWORD PTR [rax],eax
  406133:	add    BYTE PTR [rcx+rsi*2],dh
  406136:	add    BYTE PTR [rax],al
  406138:	(bad)  
  406139:	and    DWORD PTR [rax],eax
  40613b:	add    cl,al
  40613d:	and    DWORD PTR [rax],eax
  40613f:	add    BYTE PTR [rax],bh
  406141:	jno    0x406143
  406143:	add    al,dl
  406145:	and    DWORD PTR [rax],eax
  406147:	add    BYTE PTR [rdx],dh
  406149:	and    eax,DWORD PTR [rax]
  40614b:	add    BYTE PTR [rcx+rsi*2+0x0],al
  40614f:	add    BYTE PTR [rax+0x23],al
  406152:	add    BYTE PTR [rax],al
  406154:	cmp    DWORD PTR [rsi],esp
  406156:	add    BYTE PTR [rax],al
  406158:	pop    rax
  406159:	jno    0x40615b
  40615b:	add    BYTE PTR [rax+0x26],al
  40615e:	add    BYTE PTR [rax],al
  406160:	out    0x27,al
  406162:	add    BYTE PTR [rax],al
  406164:	jo     0x4061d7
  406166:	add    BYTE PTR [rax],al
  406168:	lock (bad) 
  40616a:	add    BYTE PTR [rax],al
  40616c:	fsubr  QWORD PTR [rax]
  40616e:	add    BYTE PTR [rax],al
  406170:	js     0x4061e3
  406172:	add    BYTE PTR [rax],al
  406174:	loopne 0x40619e
  406176:	add    BYTE PTR [rax],al
  406178:	cwde   
  406179:	sub    al,BYTE PTR [rax]
  40617b:	add    BYTE PTR [rax-0x5fffff8f],cl
  406181:	sub    al,BYTE PTR [rax]
  406183:	add    BYTE PTR [rip+0xffffffff9000002b],cl        # 0xffffffff904061b4
  406189:	jno    0x40618b
  40618b:	add    BYTE PTR [rax],dl
  40618d:	sub    eax,DWORD PTR [rax]
  40618f:	add    BYTE PTR [rdi-0x5fffffd5],cl
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax+0x2f00002b],dl
  40619d:	sub    al,0x0
  40619f:	add    BYTE PTR [rcx+rsi*2+0x2c300000],ch
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	or     ch,BYTE PTR [rip+0x71b40000]        # 0x71f461ae
  4061ae:	add    BYTE PTR [rax],al
  4061b0:	adc    BYTE PTR [rip+0x2d2f0000],ch        # 0x2d6f61b6
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	mov    esp,0x30000071
  4061bd:	sub    eax,0x2d420000
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	shl    BYTE PTR [rcx+0x0],0x0
  4061c8:	push   rax
  4061c9:	sub    eax,0x2d950000
  4061ce:	add    BYTE PTR [rax],al
  4061d0:	(bad)  
  4061d1:	jno    0x4061d3
  4061d3:	add    BYTE PTR [rax+0x3e00002d],ah
  4061d9:	add    BYTE PTR cs:[rax],al
  4061dc:	enter  0x71,0x0
  4061e0:	rex
  4061e1:	add    BYTE PTR cs:[rax],al
  4061e4:	sub    DWORD PTR [rsi],0x0
  4061e7:	add    ah,dl
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax-0x34ffffd2],dl
  4061f1:	add    BYTE PTR cs:[rax],al
  4061f4:	loopne 0x406267
  4061f6:	add    BYTE PTR [rax],al
  4061f8:	shr    BYTE PTR [rsi],1
  4061fa:	add    BYTE PTR [rax],al
  4061fc:	pop    rsi
  4061fd:	(bad)  
  4061fe:	add    BYTE PTR [rax],al
  406200:	call   0x60406276
  406205:	(bad)  
  406206:	add    BYTE PTR [rax],al
  406208:	cwde   
  406209:	(bad)  
  40620a:	add    BYTE PTR [rax],al
  40620c:	hlt    
  40620d:	jno    0x40620f
  40620f:	add    BYTE PTR [rax-0xaffffd1],ah
  406215:	(bad)  
  406216:	add    BYTE PTR [rax],al
  406218:	add    BYTE PTR [rdx+0x0],dh
  40621b:	add    BYTE PTR [rax],al
  40621d:	xor    BYTE PTR [rax],al
  40621f:	add    BYTE PTR [rsi+0xc000030],ch
  406225:	jb     0x406227
  406227:	add    BYTE PTR [rax],ah
  406229:	xor    al,BYTE PTR [rax]
  40622b:	add    BYTE PTR [rax],ch
  40622d:	xor    al,BYTE PTR [rax]
  40622f:	add    BYTE PTR [rdx+rsi*2],bl
  406232:	add    BYTE PTR [rax],al
  406234:	xor    BYTE PTR [rdx],dh
  406236:	add    BYTE PTR [rax],al
  406238:	cmp    esi,DWORD PTR [rdx]
  40623a:	add    BYTE PTR [rax],al
  40623c:	and    BYTE PTR [rdx+0x0],dh
  40623f:	add    BYTE PTR [rax],ah
  406241:	xor    eax,DWORD PTR [rax]
  406243:	add    BYTE PTR [rcx+0x33],ch
  406246:	add    BYTE PTR [rax],al
  406248:	nop
  406249:	jo     0x40624b
  40624b:	add    BYTE PTR [rax+0x33],dh
  40624e:	add    BYTE PTR [rax],al
  406250:	.byte 0xa2
  406251:	xor    eax,DWORD PTR [rax]
  406253:	.byte 0x0
  406254:	test   al,0x70
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	sbb    BYTE PTR [rdx],dh
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    al,ah
  407041:	sub    BYTE PTR [rax],al
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	sbb    BYTE PTR [rdx],dh
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	loopne 0x40708a
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rdx],ecx
  40706a:	(bad)  
  40706b:	add    BYTE PTR [rdx],cl
  40706d:	xchg   edx,eax
  40706e:	(bad)  
  40706f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b074d5
  407075:	push   rax
  407076:	add    al,al
  407078:	add    DWORD PTR [rax],edx
  40707a:	or     DWORD PTR [rax],eax
  40707c:	adc    dl,al
  40707e:	or     al,0x30
  407080:	or     esp,DWORD PTR [rax+0xa]
  407083:	jo     0x40708e
  407085:	push   rax
  407086:	or     al,al
  407088:	(bad)  
  407089:	rol    BYTE PTR [rax+riz*8],1
  40708c:	add    dh,al
  40708e:	add    BYTE PTR [rax],al
  407090:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457098
  407096:	add    DWORD PTR [rax],esi
  407098:	add    DWORD PTR [rip+0x52050002],eax        # 0x524570a0
  40709e:	add    DWORD PTR [rax],esi
  4070a0:	add    DWORD PTR [rcx+rax*1],eax
  4070a3:	add    BYTE PTR [rdx+rax*2],al
  4070a6:	add    BYTE PTR [rax],al
  4070a8:	add    DWORD PTR [rcx+rax*1],eax
  4070ab:	add    BYTE PTR [rdx+rax*2],al
  4070ae:	add    BYTE PTR [rax],al
  4070b0:	add    DWORD PTR [rcx+rax*1],eax
  4070b3:	add    BYTE PTR [rdx+rax*2],al
  4070b6:	add    BYTE PTR [rax],al
  4070b8:	add    DWORD PTR [rsi],eax
  4070ba:	add    eax,DWORD PTR [rax]
  4070bc:	(bad)  
  4070bd:	rex.X add sil,BYTE PTR [rax]
  4070c0:	add    DWORD PTR [rax+0x0],esp
  4070c3:	add    BYTE PTR [rcx],al
  4070c5:	add    BYTE PTR [rax],al
  4070c7:	add    BYTE PTR [rcx],al
  4070c9:	add    BYTE PTR [rax],al
  4070cb:	add    BYTE PTR [rcx],al
  4070cd:	add    BYTE PTR [rax],al
  4070cf:	add    BYTE PTR [rcx],al
  4070d1:	or     al,BYTE PTR [rsi]
  4070d3:	add    BYTE PTR [rdx],cl
  4070d5:	jb     0x4070dd
  4070d7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0753d
  4070dd:	push   rax
  4070de:	add    al,al
  4070e0:	add    DWORD PTR [rdx],ecx
  4070e2:	add    eax,0x6d20a05
  4070e7:	add    eax,DWORD PTR [rbx]
  4070e9:	xor    BYTE PTR [rdx],al
  4070eb:	(bad)  
  4070ec:	add    DWORD PTR [rax+0x0],edx
  4070ef:	add    BYTE PTR [rcx],al
  4070f1:	add    al,0x1
  4070f3:	add    BYTE PTR [rdx+rax*2],al
  4070f6:	add    BYTE PTR [rax],al
  4070f8:	add    DWORD PTR [rsi],eax
  4070fa:	add    eax,DWORD PTR [rax]
  4070fc:	(bad)  
  4070fd:	rex.X add sil,BYTE PTR [rax]
  407100:	add    DWORD PTR [rax+0x0],esp
  407103:	add    BYTE PTR [rcx],al
  407105:	add    BYTE PTR [rax],al
  407107:	add    BYTE PTR [rcx],al
  407109:	add    al,0x1
  40710b:	add    BYTE PTR [rdx+riz*4],al
  40710e:	add    BYTE PTR [rax],al
  407110:	add    DWORD PTR [rax],eax
  407112:	add    BYTE PTR [rax],al
  407114:	add    DWORD PTR [rsi],edx
  407116:	or     DWORD PTR [rax],eax
  407118:	(bad)  
  407119:	mov    BYTE PTR [rsi],al
  40711b:	add    BYTE PTR [rax],dl
  40711d:	js     0x407124
  40711f:	add    BYTE PTR [rbx],cl
  407121:	push   0xffffffffe2060004
  407126:	add    dh,BYTE PTR [rax]
  407128:	add    DWORD PTR [rax+0x0],esp
  40712b:	add    BYTE PTR [rcx],al
  40712d:	add    BYTE PTR [rax],al
  40712f:	add    BYTE PTR [rcx],al
  407131:	add    BYTE PTR [rax],al
  407133:	add    BYTE PTR [rcx],al
  407135:	add    BYTE PTR [rax],al
  407137:	add    BYTE PTR [rcx],al
  407139:	(bad)  
  40713a:	add    eax,DWORD PTR [rax]
  40713c:	(bad)  
  40713d:	(bad)  
  40713f:	xor    BYTE PTR [rcx],al
  407141:	(bad)  
  407142:	add    BYTE PTR [rax],al
  407144:	add    DWORD PTR [rdi+rax*1],ecx
  407147:	add    BYTE PTR [rdx+riz*4],cl
  40714a:	or     BYTE PTR [rax],dh
  40714c:	(bad)  
  40714d:	(bad)  
  40714e:	(bad)  
  40714f:	jo     0x407156
  407151:	push   rax
  407152:	add    al,0xc0
  407154:	add    dl,al
  407156:	add    BYTE PTR [rax],al
  407158:	add    DWORD PTR [rcx],edx
  40715a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e2371
  407160:	or     dh,BYTE PTR [rax]
  407162:	or     DWORD PTR [rax+0x8],esp
  407165:	jo     0x40716e
  407167:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220753e
  40716e:	add    BYTE PTR [rax],al
  407170:	add    DWORD PTR [rcx+rax*1],eax
  407173:	add    BYTE PTR [rdx+rax*2],al
  407176:	add    BYTE PTR [rax],al
  407178:	add    DWORD PTR [rdx],ecx
  40717a:	(bad)  
  40717b:	add    BYTE PTR [rdx],cl
  40717d:	xor    al,BYTE PTR [rsi]
  40717f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075e5
  407185:	push   rax
  407186:	add    al,al
  407188:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457190
  40718e:	add    DWORD PTR [rax],esi
  407190:	add    DWORD PTR [rax],ecx
  407192:	add    eax,0x4420800
  407197:	xor    BYTE PTR [rbx],al
  407199:	(bad)  
  40719a:	add    dh,BYTE PTR [rax+0x1]
  40719d:	push   rax
  40719e:	add    BYTE PTR [rax],al
  4071a0:	add    DWORD PTR [rdi],eax
  4071a2:	add    al,0x0
  4071a4:	(bad)  
  4071a5:	xor    al,BYTE PTR [rbx]
  4071a7:	xor    BYTE PTR [rdx],al
  4071a9:	(bad)  
  4071aa:	add    DWORD PTR [rax+0x1],esi
  4071ad:	add    eax,0x32050002
  4071b2:	add    DWORD PTR [rax],esi
  4071b4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571bc
  4071ba:	add    DWORD PTR [rax],esi
  4071bc:	add    DWORD PTR [rax],eax
  4071be:	add    BYTE PTR [rax],al
  4071c0:	add    DWORD PTR [rax],eax
  4071c2:	add    BYTE PTR [rax],al
  4071c4:	add    DWORD PTR [rax],eax
  4071c6:	add    BYTE PTR [rax],al
  4071c8:	add    DWORD PTR [rdi],eax
  4071ca:	add    al,0x0
  4071cc:	(bad)  
  4071cd:	xor    al,BYTE PTR [rbx]
  4071cf:	xor    BYTE PTR [rdx],al
  4071d1:	(bad)  
  4071d2:	add    DWORD PTR [rax+0x1],esi
  4071d5:	(bad)  
  4071d6:	add    eax,DWORD PTR [rax]
  4071d8:	(bad)  
  4071d9:	rex.X add sil,BYTE PTR [rax]
  4071dc:	add    DWORD PTR [rax+0x0],esp
  4071df:	add    BYTE PTR [rcx],al
  4071e1:	add    eax,0x32050002
  4071e6:	add    DWORD PTR [rax],esi
  4071e8:	add    DWORD PTR [rdi],eax
  4071ea:	add    al,0x0
  4071ec:	(bad)  
  4071ed:	xor    al,BYTE PTR [rbx]
  4071ef:	xor    BYTE PTR [rdx],al
  4071f1:	(bad)  
  4071f2:	add    DWORD PTR [rax+0x1],esi
  4071f5:	(bad)  
  4071f6:	add    eax,DWORD PTR [rax]
  4071f8:	(bad)  
  4071f9:	rex.X add sil,BYTE PTR [rax]
  4071fc:	add    DWORD PTR [rax+0x0],esp
  4071ff:	add    BYTE PTR [rcx],al
  407201:	(bad)  
  407202:	add    eax,DWORD PTR [rax]
  407204:	(bad)  
  407205:	rex.X add sil,BYTE PTR [rax]
  407208:	add    DWORD PTR [rax+0x0],esp
  40720b:	add    BYTE PTR [rcx],al
  40720d:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a13
  407213:	xor    BYTE PTR [rbx],al
  407215:	(bad)  
  407216:	add    dh,BYTE PTR [rax+0x1]
  407219:	push   rax
  40721a:	add    BYTE PTR [rax],al
  40721c:	add    DWORD PTR [rax],eax
  40721e:	add    BYTE PTR [rax],al
  407220:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	fs nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	mov    WORD PTR [rcx-0x6d3c0000],ds
  409012:	add    BYTE PTR [rax],al
  409014:	mov    WORD PTR [rax+0x0],ss
  40901a:	add    BYTE PTR [rax],al
  40901c:	add    BYTE PTR [rax],al
  40901e:	add    BYTE PTR [rax],al
  409020:	or     BYTE PTR [rdx-0x6d140000],bl
  409026:	add    BYTE PTR [rax],al
  409028:	fs xchg ecx,eax
	...
  409032:	add    BYTE PTR [rax],al
  409034:	mov    esp,0xc400009a
  409039:	xchg   ebx,eax
  40903a:	add    BYTE PTR [rax],al
  40903c:	mov    ah,0x92
	...
  409046:	add    BYTE PTR [rax],al
  409048:	int3   
  409049:	(bad)  
  40904a:	add    BYTE PTR [rax],al
  40904c:	adc    al,0x95
	...
  409062:	add    BYTE PTR [rax],al
  409064:	and    al,0x95
  409066:	add    BYTE PTR [rax],al
  409068:	add    BYTE PTR [rax],al
  40906a:	add    BYTE PTR [rax],al
  40906c:	rex xchg ebp,eax
  40906e:	add    BYTE PTR [rax],al
  409070:	add    BYTE PTR [rax],al
  409072:	add    BYTE PTR [rax],al
  409074:	push   rax
  409075:	xchg   ebp,eax
  409076:	add    BYTE PTR [rax],al
  409078:	add    BYTE PTR [rax],al
  40907a:	add    BYTE PTR [rax],al
  40907c:	(bad)  
  40907d:	xchg   ebp,eax
	...
  40908a:	add    BYTE PTR [rax],al
  40908c:	je     0x409023
  40908e:	add    BYTE PTR [rax],al
  409090:	add    BYTE PTR [rax],al
  409092:	add    BYTE PTR [rax],al
  409094:	mov    WORD PTR [rbp+0x0],ss
  40909a:	add    BYTE PTR [rax],al
  40909c:	sahf   
  40909d:	xchg   ebp,eax
  40909e:	add    BYTE PTR [rax],al
  4090a0:	add    BYTE PTR [rax],al
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	mov    dh,0x95
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	add    BYTE PTR [rax],al
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	enter  0x95,0x0
  4090b0:	add    BYTE PTR [rax],al
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	fcom   QWORD PTR [rbp+0x0]
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	repnz xchg ebp,eax
  4090be:	add    BYTE PTR [rax],al
  4090c0:	add    BYTE PTR [rax],al
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	or     BYTE PTR [rsi+0x0],dl
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	sbb    BYTE PTR [rsi+0x0],dl
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	sub    dl,BYTE PTR [rsi+0x0]
  4090da:	add    BYTE PTR [rax],al
  4090dc:	rex.R xchg esi,eax
  4090de:	add    BYTE PTR [rax],al
  4090e0:	add    BYTE PTR [rax],al
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	push   rsp
  4090e5:	xchg   esi,eax
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	add    BYTE PTR [rax],al
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	jo     0x409084
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	add    BYTE PTR [rax],al
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	mov    BYTE PTR [rsi+0x0],dl
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	xchg   esp,eax
  4090fd:	xchg   esi,eax
  4090fe:	add    BYTE PTR [rax],al
  409100:	add    BYTE PTR [rax],al
  409102:	add    BYTE PTR [rax],al
  409104:	scas   al,BYTE PTR es:[rdi]
  409105:	xchg   esi,eax
  409106:	add    BYTE PTR [rax],al
  409108:	add    BYTE PTR [rax],al
  40910a:	add    BYTE PTR [rax],al
  40910c:	(bad)  
  40910d:	xchg   esi,eax
  40910e:	add    BYTE PTR [rax],al
  409110:	add    BYTE PTR [rax],al
  409112:	add    BYTE PTR [rax],al
  409114:	fcom   DWORD PTR [rsi+0x0]
  40911a:	add    BYTE PTR [rax],al
  40911c:	repnz xchg esi,eax
  40911e:	add    BYTE PTR [rax],al
  409120:	add    BYTE PTR [rax],al
  409122:	add    BYTE PTR [rax],al
  409124:	(bad)  
  409125:	xchg   edi,eax
  409126:	add    BYTE PTR [rax],al
  409128:	add    BYTE PTR [rax],al
  40912a:	add    BYTE PTR [rax],al
  40912c:	and    al,0x97
  40912e:	add    BYTE PTR [rax],al
  409130:	add    BYTE PTR [rax],al
  409132:	add    BYTE PTR [rax],al
  409134:	sub    al,0x97
  409136:	add    BYTE PTR [rax],al
  409138:	add    BYTE PTR [rax],al
  40913a:	add    BYTE PTR [rax],al
  40913c:	rex xchg edi,eax
  40913e:	add    BYTE PTR [rax],al
  409140:	add    BYTE PTR [rax],al
  409142:	add    BYTE PTR [rax],al
  409144:	rex.WRX xchg rdi,rax
  409146:	add    BYTE PTR [rax],al
  409148:	add    BYTE PTR [rax],al
  40914a:	add    BYTE PTR [rax],al
  40914c:	push   0xffffffffffffff97
  40914e:	add    BYTE PTR [rax],al
  409150:	add    BYTE PTR [rax],al
  409152:	add    BYTE PTR [rax],al
  409154:	jl     0x4090ed
	...
  409162:	add    BYTE PTR [rax],al
  409164:	mov    WORD PTR [rdi+0x0],ss
  40916a:	add    BYTE PTR [rax],al
  40916c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40916d:	xchg   edi,eax
  40916e:	add    BYTE PTR [rax],al
  409170:	add    BYTE PTR [rax],al
  409172:	add    BYTE PTR [rax],al
  409174:	mov    dl,0x97
  409176:	add    BYTE PTR [rax],al
  409178:	add    BYTE PTR [rax],al
  40917a:	add    BYTE PTR [rax],al
  40917c:	ret    0x97
  40917f:	add    BYTE PTR [rax],al
  409181:	add    BYTE PTR [rax],al
  409183:	add    dh,cl
  409185:	xchg   edi,eax
  409186:	add    BYTE PTR [rax],al
  409188:	add    BYTE PTR [rax],al
  40918a:	add    BYTE PTR [rax],al
  40918c:	fcom   QWORD PTR [rdi+0x0]
  409192:	add    BYTE PTR [rax],al
  409194:	in     al,dx
  409195:	xchg   edi,eax
  409196:	add    BYTE PTR [rax],al
  409198:	add    BYTE PTR [rax],al
  40919a:	add    BYTE PTR [rax],al
  40919c:	(bad)  
  40919d:	xchg   edi,eax
  40919e:	add    BYTE PTR [rax],al
  4091a0:	add    BYTE PTR [rax],al
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	adc    bl,BYTE PTR [rax+0x0]
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	sbb    al,0x98
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	add    BYTE PTR [rax],al
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	sub    bl,BYTE PTR [rax+0x0]
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	xor    al,0x98
  4091be:	add    BYTE PTR [rax],al
  4091c0:	add    BYTE PTR [rax],al
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	ds cwde 
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	add    BYTE PTR [rax],al
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	rex.RX cwde 
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax],al
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	push   rax
  4091d5:	cwde   
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	add    BYTE PTR [rax],al
  4091da:	add    BYTE PTR [rax],al
  4091dc:	(bad)  
  4091dd:	cwde   
  4091de:	add    BYTE PTR [rax],al
  4091e0:	add    BYTE PTR [rax],al
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	outs   dx,BYTE PTR ds:[rsi]
  4091e5:	cwde   
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	add    BYTE PTR [rax],al
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	jbe    0x409186
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	add    BYTE PTR [rax],al
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	sbb    BYTE PTR [rax+0x0],0x0
  4091fb:	add    BYTE PTR [rdx+0x98],dl
  409201:	add    BYTE PTR [rax],al
  409203:	add    BYTE PTR [rax+rbx*4+0x0],bl
  40920a:	add    BYTE PTR [rax],al
  40920c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40920d:	cwde   
  40920e:	add    BYTE PTR [rax],al
  409210:	add    BYTE PTR [rax],al
  409212:	add    BYTE PTR [rax],al
  409214:	mov    dl,0x98
  409216:	add    BYTE PTR [rax],al
  409218:	add    BYTE PTR [rax],al
  40921a:	add    BYTE PTR [rax],al
  40921c:	mov    esi,0x98
  409221:	add    BYTE PTR [rax],al
  409223:	add    dh,al
  409225:	cwde   
  409226:	add    BYTE PTR [rax],al
  409228:	add    BYTE PTR [rax],al
  40922a:	add    BYTE PTR [rax],al
  40922c:	(bad)  
  40922d:	cwde   
  40922e:	add    BYTE PTR [rax],al
  409230:	add    BYTE PTR [rax],al
  409232:	add    BYTE PTR [rax],al
  409234:	fcomp  DWORD PTR [rax+0x0]
  40923a:	add    BYTE PTR [rax],al
  40923c:	loopne 0x4091d6
  40923e:	add    BYTE PTR [rax],al
  409240:	add    BYTE PTR [rax],al
  409242:	add    BYTE PTR [rax],al
  409244:	(bad)  
  409245:	cwde   
  409246:	add    BYTE PTR [rax],al
  409248:	add    BYTE PTR [rax],al
  40924a:	add    BYTE PTR [rax],al
  40924c:	repnz cwde 
  40924e:	add    BYTE PTR [rax],al
  409250:	add    BYTE PTR [rax],al
  409252:	add    BYTE PTR [rax],al
  409254:	cld    
  409255:	cwde   
  409256:	add    BYTE PTR [rax],al
  409258:	add    BYTE PTR [rax],al
  40925a:	add    BYTE PTR [rax],al
  40925c:	(bad)  
  40925d:	cdq    
  40925e:	add    BYTE PTR [rax],al
  409260:	add    BYTE PTR [rax],al
  409262:	add    BYTE PTR [rax],al
  409264:	adc    BYTE PTR [rcx+0x0],bl
  40926a:	add    BYTE PTR [rax],al
  40926c:	sbb    bl,BYTE PTR [rcx+0x0]
  409272:	add    BYTE PTR [rax],al
  409274:	and    al,0x99
  409276:	add    BYTE PTR [rax],al
  409278:	add    BYTE PTR [rax],al
  40927a:	add    BYTE PTR [rax],al
  40927c:	cs cdq 
  40927e:	add    BYTE PTR [rax],al
  409280:	add    BYTE PTR [rax],al
  409282:	add    BYTE PTR [rax],al
  409284:	cmp    bl,BYTE PTR [rcx+0x0]
  40928a:	add    BYTE PTR [rax],al
  40928c:	rex.R cdq 
  40928e:	add    BYTE PTR [rax],al
  409290:	add    BYTE PTR [rax],al
  409292:	add    BYTE PTR [rax],al
  409294:	rex.WR cqo 
  409296:	add    BYTE PTR [rax],al
  409298:	add    BYTE PTR [rax],al
  40929a:	add    BYTE PTR [rax],al
  40929c:	push   rsp
  40929d:	cdq    
  40929e:	add    BYTE PTR [rax],al
  4092a0:	add    BYTE PTR [rax],al
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	pop    rsp
  4092a5:	cdq    
	...
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	cwd    
	...
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	and    al,0x95
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	add    BYTE PTR [rax],al
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	rex xchg ebp,eax
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	add    BYTE PTR [rax],al
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	push   rax
  4092d5:	xchg   ebp,eax
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    BYTE PTR [rax],al
  4092da:	add    BYTE PTR [rax],al
  4092dc:	(bad)  
  4092dd:	xchg   ebp,eax
	...
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	je     0x409283
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	add    BYTE PTR [rax],al
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	mov    WORD PTR [rbp+0x0],ss
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	sahf   
  4092fd:	xchg   ebp,eax
  4092fe:	add    BYTE PTR [rax],al
  409300:	add    BYTE PTR [rax],al
  409302:	add    BYTE PTR [rax],al
  409304:	mov    dh,0x95
  409306:	add    BYTE PTR [rax],al
  409308:	add    BYTE PTR [rax],al
  40930a:	add    BYTE PTR [rax],al
  40930c:	enter  0x95,0x0
  409310:	add    BYTE PTR [rax],al
  409312:	add    BYTE PTR [rax],al
  409314:	fcom   QWORD PTR [rbp+0x0]
  40931a:	add    BYTE PTR [rax],al
  40931c:	repnz xchg ebp,eax
  40931e:	add    BYTE PTR [rax],al
  409320:	add    BYTE PTR [rax],al
  409322:	add    BYTE PTR [rax],al
  409324:	or     BYTE PTR [rsi+0x0],dl
  40932a:	add    BYTE PTR [rax],al
  40932c:	sbb    BYTE PTR [rsi+0x0],dl
  409332:	add    BYTE PTR [rax],al
  409334:	sub    dl,BYTE PTR [rsi+0x0]
  40933a:	add    BYTE PTR [rax],al
  40933c:	rex.R xchg esi,eax
  40933e:	add    BYTE PTR [rax],al
  409340:	add    BYTE PTR [rax],al
  409342:	add    BYTE PTR [rax],al
  409344:	push   rsp
  409345:	xchg   esi,eax
  409346:	add    BYTE PTR [rax],al
  409348:	add    BYTE PTR [rax],al
  40934a:	add    BYTE PTR [rax],al
  40934c:	jo     0x4092e4
  40934e:	add    BYTE PTR [rax],al
  409350:	add    BYTE PTR [rax],al
  409352:	add    BYTE PTR [rax],al
  409354:	mov    BYTE PTR [rsi+0x0],dl
  40935a:	add    BYTE PTR [rax],al
  40935c:	xchg   esp,eax
  40935d:	xchg   esi,eax
  40935e:	add    BYTE PTR [rax],al
  409360:	add    BYTE PTR [rax],al
  409362:	add    BYTE PTR [rax],al
  409364:	scas   al,BYTE PTR es:[rdi]
  409365:	xchg   esi,eax
  409366:	add    BYTE PTR [rax],al
  409368:	add    BYTE PTR [rax],al
  40936a:	add    BYTE PTR [rax],al
  40936c:	(bad)  
  40936d:	xchg   esi,eax
  40936e:	add    BYTE PTR [rax],al
  409370:	add    BYTE PTR [rax],al
  409372:	add    BYTE PTR [rax],al
  409374:	fcom   DWORD PTR [rsi+0x0]
  40937a:	add    BYTE PTR [rax],al
  40937c:	repnz xchg esi,eax
  40937e:	add    BYTE PTR [rax],al
  409380:	add    BYTE PTR [rax],al
  409382:	add    BYTE PTR [rax],al
  409384:	(bad)  
  409385:	xchg   edi,eax
  409386:	add    BYTE PTR [rax],al
  409388:	add    BYTE PTR [rax],al
  40938a:	add    BYTE PTR [rax],al
  40938c:	and    al,0x97
  40938e:	add    BYTE PTR [rax],al
  409390:	add    BYTE PTR [rax],al
  409392:	add    BYTE PTR [rax],al
  409394:	sub    al,0x97
  409396:	add    BYTE PTR [rax],al
  409398:	add    BYTE PTR [rax],al
  40939a:	add    BYTE PTR [rax],al
  40939c:	rex xchg edi,eax
  40939e:	add    BYTE PTR [rax],al
  4093a0:	add    BYTE PTR [rax],al
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	rex.WRX xchg rdi,rax
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	add    BYTE PTR [rax],al
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	push   0xffffffffffffff97
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	add    BYTE PTR [rax],al
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	jl     0x40934d
	...
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	mov    WORD PTR [rdi+0x0],ss
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4093cd:	xchg   edi,eax
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	add    BYTE PTR [rax],al
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	mov    dl,0x97
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	add    BYTE PTR [rax],al
  4093da:	add    BYTE PTR [rax],al
  4093dc:	ret    0x97
  4093df:	add    BYTE PTR [rax],al
  4093e1:	add    BYTE PTR [rax],al
  4093e3:	add    dh,cl
  4093e5:	xchg   edi,eax
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	add    BYTE PTR [rax],al
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	fcom   QWORD PTR [rdi+0x0]
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	in     al,dx
  4093f5:	xchg   edi,eax
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	add    BYTE PTR [rax],al
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	(bad)  
  4093fd:	xchg   edi,eax
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rax],al
  409402:	add    BYTE PTR [rax],al
  409404:	adc    bl,BYTE PTR [rax+0x0]
  40940a:	add    BYTE PTR [rax],al
  40940c:	sbb    al,0x98
  40940e:	add    BYTE PTR [rax],al
  409410:	add    BYTE PTR [rax],al
  409412:	add    BYTE PTR [rax],al
  409414:	sub    bl,BYTE PTR [rax+0x0]
  40941a:	add    BYTE PTR [rax],al
  40941c:	xor    al,0x98
  40941e:	add    BYTE PTR [rax],al
  409420:	add    BYTE PTR [rax],al
  409422:	add    BYTE PTR [rax],al
  409424:	ds cwde 
  409426:	add    BYTE PTR [rax],al
  409428:	add    BYTE PTR [rax],al
  40942a:	add    BYTE PTR [rax],al
  40942c:	rex.RX cwde 
  40942e:	add    BYTE PTR [rax],al
  409430:	add    BYTE PTR [rax],al
  409432:	add    BYTE PTR [rax],al
  409434:	push   rax
  409435:	cwde   
  409436:	add    BYTE PTR [rax],al
  409438:	add    BYTE PTR [rax],al
  40943a:	add    BYTE PTR [rax],al
  40943c:	(bad)  
  40943d:	cwde   
  40943e:	add    BYTE PTR [rax],al
  409440:	add    BYTE PTR [rax],al
  409442:	add    BYTE PTR [rax],al
  409444:	outs   dx,BYTE PTR ds:[rsi]
  409445:	cwde   
  409446:	add    BYTE PTR [rax],al
  409448:	add    BYTE PTR [rax],al
  40944a:	add    BYTE PTR [rax],al
  40944c:	jbe    0x4093e6
  40944e:	add    BYTE PTR [rax],al
  409450:	add    BYTE PTR [rax],al
  409452:	add    BYTE PTR [rax],al
  409454:	sbb    BYTE PTR [rax+0x0],0x0
  40945b:	add    BYTE PTR [rdx+0x98],dl
  409461:	add    BYTE PTR [rax],al
  409463:	add    BYTE PTR [rax+rbx*4+0x0],bl
  40946a:	add    BYTE PTR [rax],al
  40946c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40946d:	cwde   
  40946e:	add    BYTE PTR [rax],al
  409470:	add    BYTE PTR [rax],al
  409472:	add    BYTE PTR [rax],al
  409474:	mov    dl,0x98
  409476:	add    BYTE PTR [rax],al
  409478:	add    BYTE PTR [rax],al
  40947a:	add    BYTE PTR [rax],al
  40947c:	mov    esi,0x98
  409481:	add    BYTE PTR [rax],al
  409483:	add    dh,al
  409485:	cwde   
  409486:	add    BYTE PTR [rax],al
  409488:	add    BYTE PTR [rax],al
  40948a:	add    BYTE PTR [rax],al
  40948c:	(bad)  
  40948d:	cwde   
  40948e:	add    BYTE PTR [rax],al
  409490:	add    BYTE PTR [rax],al
  409492:	add    BYTE PTR [rax],al
  409494:	fcomp  DWORD PTR [rax+0x0]
  40949a:	add    BYTE PTR [rax],al
  40949c:	loopne 0x409436
  40949e:	add    BYTE PTR [rax],al
  4094a0:	add    BYTE PTR [rax],al
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	(bad)  
  4094a5:	cwde   
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	add    BYTE PTR [rax],al
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	repnz cwde 
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	add    BYTE PTR [rax],al
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	cld    
  4094b5:	cwde   
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	add    BYTE PTR [rax],al
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	(bad)  
  4094bd:	cdq    
  4094be:	add    BYTE PTR [rax],al
  4094c0:	add    BYTE PTR [rax],al
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	adc    BYTE PTR [rcx+0x0],bl
  4094ca:	add    BYTE PTR [rax],al
  4094cc:	sbb    bl,BYTE PTR [rcx+0x0]
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	and    al,0x99
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	add    BYTE PTR [rax],al
  4094da:	add    BYTE PTR [rax],al
  4094dc:	cs cdq 
  4094de:	add    BYTE PTR [rax],al
  4094e0:	add    BYTE PTR [rax],al
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	cmp    bl,BYTE PTR [rcx+0x0]
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	rex.R cdq 
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	add    BYTE PTR [rax],al
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	rex.WR cqo 
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	add    BYTE PTR [rax],al
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	push   rsp
  4094fd:	cdq    
  4094fe:	add    BYTE PTR [rax],al
  409500:	add    BYTE PTR [rax],al
  409502:	add    BYTE PTR [rax],al
  409504:	pop    rsp
  409505:	cdq    
	...
  409512:	add    BYTE PTR [rax],al
  409514:	cwd    
	...
  409522:	add    BYTE PTR [rax],al
  409524:	sub    BYTE PTR [rax],al
  409526:	addr32 pop rdi
  409528:	(bad)  
  409529:	jae    0x40959e
  40952b:	gs jb  0x4095a2
  40952e:	imul   ebp,DWORD PTR [rdi+0x6e],0x73656d5f
  409535:	jae    0x409598
  409537:	addr32 gs pop rdi
  40953a:	gs js  0x4095ad
  40953d:	jb     0x40953f
  40953f:	add    BYTE PTR [rax+0x6d5f6702],bl
  409545:	(bad)  
  409546:	ins    BYTE PTR es:[rdi],dx
  409547:	ins    BYTE PTR es:[rdi],dx
  409548:	outs   dx,DWORD PTR ds:[rsi]
  409549:	movsxd ebx,DWORD PTR [rdi+0x6e]
  40954c:	add    BYTE PTR [rax],al
  40954e:	add    BYTE PTR [rax],al
  409550:	test   DWORD PTR [rdi+riz*2],eax
  409553:	pop    rdi
  409554:	jae    0x4095ca
  409556:	jb     0x4095be
  409558:	jb     0x4095bf
  40955a:	gs jbe 0x40955d
  40955d:	add    BYTE PTR [rax],al
  40955f:	add    BYTE PTR [rbp+rax*1+0x67],bh
  409563:	pop    rdi
  409564:	jne    0x4095da
  409566:	xor    WORD PTR [rsi],si
  409569:	pop    rdi
  40956a:	je     0x4095db
  40956c:	pop    rdi
  40956d:	jne    0x4095e3
  40956f:	data16 cmp BYTE PTR [rax],al
  409572:	add    BYTE PTR [rax],al
  409574:	fadd   DWORD PTR [rax]
  409576:	rex.R
  409577:	gs ins BYTE PTR es:[rdi],dx
  409579:	gs je  0x4095e1
  40957c:	rex.XB jb 0x4095e8
  40957f:	je     0x4095ea
  409581:	movsxd esp,DWORD PTR [rcx+0x6c]
  409584:	push   rbx
  409585:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40958a:	outs   dx,BYTE PTR ds:[rsi]
  40958b:	add    dl,dh
  40958d:	add    BYTE PTR [rbp+rsi*2+0x70],al
  409591:	ins    BYTE PTR es:[rdi],dx
  409592:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
  409599:	outs   dx,BYTE PTR ds:[rsi]
  40959a:	fs ins BYTE PTR es:[rdi],dx
  40959c:	gs add al,bh
  40959f:	add    BYTE PTR [rbp+0x6e],al
  4095a2:	je     0x409609
  4095a4:	jb     0x4095e9
  4095a6:	jb     0x409611
  4095a8:	je     0x409613
  4095aa:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095ad:	push   rbx
  4095ae:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095b3:	outs   dx,BYTE PTR ds:[rsi]
  4095b4:	add    BYTE PTR [rax],al
  4095b6:	xchg   esp,eax
  4095b7:	add    DWORD PTR [rdi+0x65],eax
  4095ba:	je     0x4095ff
  4095bc:	outs   dx,DWORD PTR ds:[rsi]
  4095bd:	ins    DWORD PTR es:[rdi],dx
  4095be:	ins    DWORD PTR es:[rdi],dx
  4095bf:	(bad)  
  4095c0:	outs   dx,BYTE PTR ds:[rsi]
  4095c1:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1cd0057
  4095ca:	rex.RXB
  4095cb:	gs je  0x409611
  4095ce:	jne    0x409642
  4095d0:	jb     0x409637
  4095d2:	outs   dx,BYTE PTR ds:[rsi]
  4095d3:	je     0x409625
  4095d5:	jb     0x409646
  4095d7:	movsxd esp,DWORD PTR [rbp+0x73]
  4095da:	jae    0x4095dc
  4095dc:	(bad)  
  4095dd:	add    DWORD PTR [rdi+0x65],eax
  4095e0:	je     0x409625
  4095e2:	jne    0x409656
  4095e4:	jb     0x40964b
  4095e6:	outs   dx,BYTE PTR ds:[rsi]
  4095e7:	je     0x409639
  4095e9:	jb     0x40965a
  4095eb:	movsxd esp,DWORD PTR [rbp+0x73]
  4095ee:	jae    0x409639
  4095f0:	fs add dl,dl
  4095f3:	add    DWORD PTR [rdi+0x65],eax
  4095f6:	je     0x40963b
  4095f8:	jne    0x40966c
  4095fa:	jb     0x409661
  4095fc:	outs   dx,BYTE PTR ds:[rsi]
  4095fd:	je     0x409653
  4095ff:	push   0x64616572
  409604:	rex.WB
  409605:	add    BYTE PTR fs:[rax],al
  409608:	adc    BYTE PTR [rdx],al
  40960a:	rex.RXB
  40960b:	gs je  0x40965a
  40960e:	(bad)  
  40960f:	jae    0x409685
  409611:	rex.RB jb 0x409686
  409614:	outs   dx,DWORD PTR ds:[rsi]
  409615:	jb     0x409617
  409617:	add    BYTE PTR [rbx+0x2],dh
  40961a:	rex.RXB
  40961b:	gs je  0x409671
  40961e:	je     0x409681
  409620:	jb     0x409696
  409622:	jne    0x409694
  409624:	rex.WB outs dx,BYTE PTR ds:[rsi]
  409626:	outs   dx,WORD PTR ds:[rsi]
  409628:	add    BYTE PTR [r10+0x74654702],cl
  40962f:	push   rbx
  409630:	jns    0x4096a5
  409632:	je     0x409699
  409634:	ins    DWORD PTR es:[rdi],dx
  409635:	push   rsp
  409636:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40963d:	ins    BYTE PTR es:[rdi],dx
  40963e:	gs push rsp
  409640:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  409647:	gs je  0x40969e
  40964a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  409651:	je     0x409653
  409653:	add    cl,bh
  409655:	add    cl,BYTE PTR [rcx+0x6e]
  409658:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409660:	rex.XB jb 0x4096cc
  409663:	je     0x4096ce
  409665:	movsxd esp,DWORD PTR [rcx+0x6c]
  409668:	push   rbx
  409669:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40966e:	outs   dx,BYTE PTR ds:[rsi]
  40966f:	add    BYTE PTR [rbx+0x3],cl
  409672:	rex.WR
  409673:	gs (bad) 
  409675:	jbe    0x4096dc
  409677:	rex.XB jb 0x4096e3
  40967a:	je     0x4096e5
  40967c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40967f:	push   rbx
  409680:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409685:	outs   dx,BYTE PTR ds:[rsi]
  409686:	add    BYTE PTR [rax],al
  409688:	pop    rbx
  409689:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
  40968d:	(bad)  
  40968e:	ins    BYTE PTR es:[rdi],dx
  40968f:	rex.RX jb 0x4096f7
  409692:	add    BYTE PTR gs:[rbx+0x65755103],bh
  409699:	jb     0x409714
  40969b:	push   rax
  40969c:	gs jb  0x409705
  40969f:	outs   dx,DWORD PTR ds:[rsi]
  4096a0:	jb     0x40970f
  4096a2:	(bad)  
  4096a3:	outs   dx,BYTE PTR ds:[rsi]
  4096a4:	movsxd esp,DWORD PTR [rbp+0x43]
  4096a7:	outs   dx,DWORD PTR ds:[rsi]
  4096a8:	jne    0x409718
  4096aa:	je     0x409711
  4096ac:	jb     0x4096ae
  4096ae:	add    DWORD PTR [rdx+rdx*2],eax
  4096b1:	je     0x40971f
  4096b3:	rex.B
  4096b4:	fs fs rex.RX jne 0x409727
  4096b9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096bd:	outs   dx,BYTE PTR ds:[rsi]
  4096be:	push   rsp
  4096bf:	(bad)  
  4096c0:	(bad)  
  4096c1:	ins    BYTE PTR es:[rdi],dx
  4096c2:	add    BYTE PTR gs:[rdx],al
  4096c5:	add    al,0x52
  4096c7:	je     0x409735
  4096c9:	rex.XB (bad) 
  4096cb:	jo     0x409741
  4096cd:	jne    0x409741
  4096cf:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4096d2:	outs   dx,BYTE PTR ds:[rsi]
  4096d3:	je     0x40973a
  4096d5:	js     0x40974b
  4096d7:	add    BYTE PTR [rcx],cl
  4096d9:	add    al,0x52
  4096db:	je     0x409749
  4096dd:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4096df:	outs   dx,DWORD PTR ds:[rsi]
  4096e0:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4096e4:	jne    0x409754
  4096e6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096ea:	outs   dx,BYTE PTR ds:[rsi]
  4096eb:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4096ed:	je     0x409761
  4096ef:	jns    0x4096f1
  4096f1:	add    BYTE PTR [rax],dl
  4096f3:	add    al,0x52
  4096f5:	je     0x409763
  4096f7:	push   rsi
  4096f8:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4096ff:	outs   dx,BYTE PTR ds:[rsi]
  409700:	ja     0x40976b
  409702:	outs   dx,BYTE PTR ds:[rsi]
  409703:	add    BYTE PTR fs:[rax],al
  409706:	lahf   
  409707:	add    al,0x53
  409709:	gs je  0x409761
  40970c:	outs   dx,BYTE PTR ds:[rsi]
  40970d:	push   0x6c646e61
  409712:	gs fs rex.RB js 0x40977a
  409717:	gs jo  0x40978e
  40971a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409721:	gs jb  0x409724
  409724:	lods   al,BYTE PTR ds:[rsi]
  409725:	add    al,0x53
  409727:	ins    BYTE PTR es:[rdi],dx
  409728:	gs gs jo 0x40972c
  40972c:	mov    edx,0x72655404
  409731:	ins    DWORD PTR es:[rdi],dx
  409732:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  409739:	outs   dx,DWORD PTR ds:[rsi]
  40973a:	movsxd esp,DWORD PTR [rbp+0x73]
  40973d:	jae    0x40973f
  40973f:	add    cl,al
  409741:	add    al,0x54
  409743:	ins    BYTE PTR es:[rdi],dx
  409744:	jae    0x40978d
  409746:	gs je  0x40979f
  409749:	(bad)  
  40974a:	ins    BYTE PTR es:[rdi],dx
  40974b:	jne    0x4097b2
  40974d:	add    dh,cl
  40974f:	add    al,0x55
  409751:	outs   dx,BYTE PTR ds:[rsi]
  409752:	push   0x6c646e61
  409757:	gs fs rex.RB js 0x4097bf
  40975c:	gs jo  0x4097d3
  40975f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409766:	gs jb  0x409769
  409769:	add    ah,ch
  40976b:	add    al,0x56
  40976d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409774:	jb     0x4097e5
  409776:	je     0x4097dd
  409778:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40977c:	out    dx,al
  40977d:	add    al,0x56
  40977f:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  409786:	jne    0x4097ed
  409788:	jb     0x409803
  40978a:	add    BYTE PTR [rax],al
  40978c:	(bad)  
  40978d:	add    BYTE PTR [rdi+0x5f],bl
  409790:	rex.XB pop r15
  409792:	jae    0x409804
  409794:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409798:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40979f:	ins    BYTE PTR es:[rdi],dx
  4097a0:	gs jb  0x4097a3
  4097a3:	add    BYTE PTR [rsi+0x0],cl
  4097a6:	pop    rdi
  4097a7:	pop    rdi
  4097a8:	fs ins BYTE PTR es:[rdi],dx
  4097aa:	ins    BYTE PTR es:[rdi],dx
  4097ab:	outs   dx,DWORD PTR ds:[rsi]
  4097ac:	outs   dx,BYTE PTR ds:[rsi]
  4097ad:	gs js  0x409819
  4097b0:	je     0x4097b2
  4097b2:	push   rcx
  4097b3:	add    BYTE PTR [rdi+0x5f],bl
  4097b6:	addr32 gs je 0x409827
  4097ba:	(bad)  
  4097bb:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4097c2:	push   rdx
  4097c3:	add    BYTE PTR [rdi+0x5f],bl
  4097c6:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4097cd:	add    BYTE PTR [rbx+0x0],dl
  4097d0:	pop    rdi
  4097d1:	pop    rdi
  4097d2:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4097d9:	movsxd eax,DWORD PTR [rax]
  4097db:	add    BYTE PTR [rdx+0x0],bl
  4097de:	pop    rdi
  4097df:	pop    rdi
  4097e0:	ins    BYTE PTR es:[rdi],dx
  4097e1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4097e4:	jbe    0x409845
  4097e6:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4097ed:	add    BYTE PTR [rdi+0x5f],bl
  4097f0:	jae    0x409857
  4097f2:	je     0x409853
  4097f4:	(bad)  
  4097f5:	jo     0x409867
  4097f7:	pop    rdi
  4097f8:	je     0x409873
  4097fa:	jo     0x409861
  4097fc:	add    BYTE PTR [rax],al
  4097fe:	(bad)  
  4097ff:	add    BYTE PTR [rdi+0x5f],bl
  409802:	jae    0x409869
  409804:	je     0x40987b
  409806:	jae    0x40986d
  409808:	jb     0x409877
  40980a:	(bad)  
  40980b:	je     0x409875
  40980d:	gs jb  0x409882
  409810:	add    BYTE PTR [rax],al
  409812:	jno    0x409814
  409814:	pop    rdi
  409815:	(bad)  
  409816:	movsxd ebp,DWORD PTR [rbp+0x64]
  409819:	ins    BYTE PTR es:[rdi],dx
  40981a:	outs   dx,BYTE PTR ds:[rsi]
  40981b:	add    BYTE PTR [rax+0x0],bh
  40981e:	pop    rdi
  40981f:	(bad)  
  409820:	ins    DWORD PTR es:[rdi],dx
  409821:	jae    0x40988a
  409823:	pop    rdi
  409824:	gs js  0x409890
  409827:	je     0x409829
  409829:	add    BYTE PTR [rdx+0x65635f00],cl
  40982f:	js     0x40989a
  409831:	je     0x409833
  409833:	add    BYTE PTR [rdx+0x72655f00],bh
  409839:	jb     0x4098a9
  40983b:	outs   dx,DWORD PTR ds:[rsi]
  40983c:	add    BYTE PTR [rax],al
  40983e:	ret    
  40983f:	add    BYTE PTR [rdi+0x65],bl
  409842:	js     0x4098ad
  409844:	je     0x409846
  409846:	fiadd  DWORD PTR [rax]
  409848:	pop    rdi
  409849:	ins    WORD PTR es:[rdi],dx
  40984b:	outs   dx,DWORD PTR ds:[rsi]
  40984c:	fs add BYTE PTR gs:[rax],al
  409850:	cli    
  409851:	add    BYTE PTR [rdi+0x67],bl
  409854:	gs je  0x4098b6
  409857:	outs   dx,DWORD PTR ds:[rsi]
  409858:	jae    0x4098c0
  40985a:	push   0x6c646e61
  40985f:	add    BYTE PTR gs:[rax],al
  409862:	sbb    al,BYTE PTR [rcx]
  409864:	pop    rdi
  409865:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40986c:	ins    DWORD PTR es:[rdi],dx
  40986d:	add    BYTE PTR [rax+0x6f6c5f01],al
  409873:	movsxd ebp,DWORD PTR [rbx+0x0]
  409876:	and    eax,0x6e6f5f02
  40987b:	gs js  0x4098e7
  40987e:	je     0x409880
  409880:	(bad)  
  409881:	add    bl,BYTE PTR [rdi+0x6f]
  409884:	jo     0x4098eb
  409886:	outs   dx,BYTE PTR ds:[rsi]
  409887:	pop    rdi
  409888:	outs   dx,DWORD PTR ds:[rsi]
  409889:	jae    0x4098f1
  40988b:	push   0x6c646e61
  409890:	gs add ah,al
  409893:	add    bl,BYTE PTR [rdi+0x75]
  409896:	outs   dx,BYTE PTR ds:[rsi]
  409897:	ins    BYTE PTR es:[rdi],dx
  409898:	outs   dx,DWORD PTR ds:[rsi]
  409899:	movsxd ebp,DWORD PTR [rbx+0x0]
  40989c:	sti    
  40989d:	add    bl,BYTE PTR [rdi+0x77]
  4098a0:	movsxd ebp,DWORD PTR [rax+0x64]
  4098a3:	imul   esi,DWORD PTR [rdx+0x0],0x775f0365
  4098aa:	jae    0x40991c
  4098ac:	(bad)  
  4098ad:	ja     0x40991d
  4098af:	jbe    0x4098b1
  4098b1:	add    BYTE PTR [rdi+0x3],ah
  4098b4:	pop    rdi
  4098b5:	ja     0x40992a
  4098b7:	jo     0x40991a
  4098b9:	ja     0x409929
  4098bb:	jbe    0x40992d
  4098bd:	add    BYTE PTR [rdi+0x3],bh
  4098c0:	(bad)  
  4098c1:	(bad)  
  4098c2:	outs   dx,DWORD PTR ds:[rsi]
  4098c3:	jb     0x409939
  4098c5:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  4098cc:	add    BYTE PTR [rax],al
  4098ce:	nop
  4098cf:	add    esp,DWORD PTR [rbx+0x61]
  4098d2:	ins    BYTE PTR es:[rdi],dx
  4098d3:	ins    BYTE PTR es:[rdi],dx
  4098d4:	outs   dx,DWORD PTR ds:[rsi]
  4098d5:	movsxd eax,DWORD PTR [rax]
  4098d7:	add    BYTE PTR [rbp+0x69786503],bl
  4098dd:	je     0x4098df
  4098df:	add    BYTE PTR [rax+0x72706603],dh
  4098e5:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  4098ec:	data16 jb 0x409954
  4098ef:	add    BYTE PTR gs:[rax],al
  4098f2:	ret    0x6603
  4098f5:	ja     0x409969
  4098f7:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  4098ff:	(bad)  
  409900:	ins    BYTE PTR es:[rdi],dx
  409901:	ins    BYTE PTR es:[rdi],dx
  409902:	outs   dx,DWORD PTR ds:[rsi]
  409903:	movsxd eax,DWORD PTR [rax]
  409905:	add    al,bh
  409907:	add    ebp,DWORD PTR [rbp+0x65]
  40990a:	ins    DWORD PTR es:[rdi],dx
  40990b:	movsxd esi,DWORD PTR [rax+0x79]
  40990e:	add    BYTE PTR [rax],al
  409910:	(bad)  
  409911:	add    al,0x73
  409913:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40991a:	sub    eax,DWORD PTR [rbx+rsi*2]
  40991d:	je     0x409991
  40991f:	ins    BYTE PTR es:[rdi],dx
  409920:	outs   dx,BYTE PTR gs:[rsi]
  409922:	add    BYTE PTR [rax],al
  409924:	cs add al,0x73
  409927:	je     0x40999b
  409929:	outs   dx,BYTE PTR ds:[rsi]
  40992a:	movsxd ebp,DWORD PTR [rbp+0x70]
  40992d:	add    BYTE PTR [rsi+0x4],cl
  409930:	jbe    0x409998
  409932:	jo     0x4099a6
  409934:	imul   ebp,DWORD PTR [rsi+0x74],0xa3000066
  40993b:	add    al,0x5f
  40993d:	ja     0x4099b1
  40993f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x5f04cd00
  409947:	jb     0x4099ae
  409949:	(bad)  
  40994a:	fs add bl,dl
  40994d:	add    al,0x5f
  40994f:	outs   dx,DWORD PTR ds:[rsi]
  409950:	jo     0x4099b7
  409952:	outs   dx,BYTE PTR ds:[rsi]
  409953:	add    al,bh
  409955:	add    al,0x5f
  409957:	fs jne 0x4099ca
  40995a:	xor    al,BYTE PTR [rax]
  40995c:	cld    
  40995d:	add    al,0x5f
  40995f:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  409963:	add    BYTE PTR gs:[rax],al
  409966:	or     al,BYTE PTR [rax]
  409968:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40996a:	ins    DWORD PTR es:[rdi],dx
  40996b:	ins    DWORD PTR es:[rdi],dx
  40996c:	(bad)  
  40996d:	outs   dx,BYTE PTR ds:[rsi]
  40996e:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
  409977:	addr32 jbe 0x4099d1
  40997a:	add    BYTE PTR [rax],al
  40997c:	add    BYTE PTR [rax-0x70000000],dl
  409982:	add    BYTE PTR [rax],al
  409984:	add    BYTE PTR [rax-0x70000000],dl
  40998a:	add    BYTE PTR [rax],al
  40998c:	ins    BYTE PTR es:[rdi],dx
  40998d:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  409994:	xor    ch,BYTE PTR [rsi]
  409996:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca4c7cc
  40999c:	ins    BYTE PTR es:[rdi],dx
  40999d:	add    BYTE PTR [rax],al
  40999f:	add    BYTE PTR [rax+rdx*4],dl
  4099a2:	add    BYTE PTR [rax],al
  4099a4:	adc    al,0x90
  4099a6:	add    BYTE PTR [rax],al
  4099a8:	adc    al,0x90
  4099aa:	add    BYTE PTR [rax],al
  4099ac:	adc    al,0x90
  4099ae:	add    BYTE PTR [rax],al
  4099b0:	adc    al,0x90
  4099b2:	add    BYTE PTR [rax],al
  4099b4:	adc    al,0x90
  4099b6:	add    BYTE PTR [rax],al
  4099b8:	adc    al,0x90
  4099ba:	add    BYTE PTR [rax],al
  4099bc:	adc    al,0x90
  4099be:	add    BYTE PTR [rax],al
  4099c0:	adc    al,0x90
  4099c2:	add    BYTE PTR [rax],al
  4099c4:	adc    al,0x90
  4099c6:	add    BYTE PTR [rax],al
  4099c8:	adc    al,0x90
  4099ca:	add    BYTE PTR [rax],al
  4099cc:	adc    al,0x90
  4099ce:	add    BYTE PTR [rax],al
  4099d0:	adc    al,0x90
  4099d2:	add    BYTE PTR [rax],al
  4099d4:	adc    al,0x90
  4099d6:	add    BYTE PTR [rax],al
  4099d8:	adc    al,0x90
  4099da:	add    BYTE PTR [rax],al
  4099dc:	adc    al,0x90
  4099de:	add    BYTE PTR [rax],al
  4099e0:	adc    al,0x90
  4099e2:	add    BYTE PTR [rax],al
  4099e4:	adc    al,0x90
  4099e6:	add    BYTE PTR [rax],al
  4099e8:	adc    al,0x90
  4099ea:	add    BYTE PTR [rax],al
  4099ec:	adc    al,0x90
  4099ee:	add    BYTE PTR [rax],al
  4099f0:	adc    al,0x90
  4099f2:	add    BYTE PTR [rax],al
  4099f4:	adc    al,0x90
  4099f6:	add    BYTE PTR [rax],al
  4099f8:	adc    al,0x90
  4099fa:	add    BYTE PTR [rax],al
  4099fc:	adc    al,0x90
  4099fe:	add    BYTE PTR [rax],al
  409a00:	adc    al,0x90
  409a02:	add    BYTE PTR [rax],al
  409a04:	adc    al,0x90
  409a06:	add    BYTE PTR [rax],al
  409a08:	rex.WXB
  409a09:	rex.RB push r10
  409a0b:	rex.WRX
  409a0c:	rex.RB
  409a0d:	xor    r14,QWORD PTR [rdx]
  409a10:	cs fs ins BYTE PTR es:[rdi],dx
  409a13:	ins    BYTE PTR es:[rdi],dx
  409a14:	add    BYTE PTR [rax],al
  409a16:	add    BYTE PTR [rax],al
  409a18:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a1e:	add    BYTE PTR [rax],al
  409a20:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a26:	add    BYTE PTR [rax],al
  409a28:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a2e:	add    BYTE PTR [rax],al
  409a30:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a36:	add    BYTE PTR [rax],al
  409a38:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a3e:	add    BYTE PTR [rax],al
  409a40:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a46:	add    BYTE PTR [rax],al
  409a48:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a4e:	add    BYTE PTR [rax],al
  409a50:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a56:	add    BYTE PTR [rax],al
  409a58:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a5e:	add    BYTE PTR [rax],al
  409a60:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a66:	add    BYTE PTR [rax],al
  409a68:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a6e:	add    BYTE PTR [rax],al
  409a70:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a76:	add    BYTE PTR [rax],al
  409a78:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a7e:	add    BYTE PTR [rax],al
  409a80:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a86:	add    BYTE PTR [rax],al
  409a88:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a8e:	add    BYTE PTR [rax],al
  409a90:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a96:	add    BYTE PTR [rax],al
  409a98:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a9e:	add    BYTE PTR [rax],al
  409aa0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409aa6:	add    BYTE PTR [rax],al
  409aa8:	sub    BYTE PTR [rax-0x6fd80000],dl
  409aae:	add    BYTE PTR [rax],al
  409ab0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409ab6:	add    BYTE PTR [rax],al
  409ab8:	sub    BYTE PTR [rax+0x736d0000],dl
  409abe:	jbe    0x409b23
  409ac0:	jb     0x409b36
  409ac2:	cs fs ins BYTE PTR es:[rdi],dx
  409ac5:	ins    BYTE PTR es:[rdi],dx
  409ac6:	add    BYTE PTR [rax],al
  409ac8:	cmp    al,0x90
  409aca:	add    BYTE PTR [rax],al
  409acc:	push   rbx
  409acd:	rex.W
  409ace:	rex.RB
  409acf:	rex.WR
  409ad0:	xor    r14,QWORD PTR [rdx]
  409ad3:	cs fs ins BYTE PTR es:[rdi],dx
  409ad6:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],ah
  40a029:	sbb    eax,0x40
	...
  40a03e:	add    BYTE PTR [rax],al
  40a040:	push   rax
  40a041:	(bad)  
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax],ah
  40a049:	(bad)  
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
