
6cbeb1e7555db4f22329195f26b455c475b79ece4b4b9566b94f91a94cb5a0d1.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	movaps xmm0,XMMWORD PTR [rip+0x9cf9]        # 0x14000ad00
   140001007:	movaps xmm1,XMMWORD PTR [rip+0x9d02]        # 0x14000ad10
   14000100e:	movdqu XMMWORD PTR [rip+0xdfea],xmm0        # 0x14000f000
   140001016:	movdqu XMMWORD PTR [rip+0xdff2],xmm1        # 0x14000f010
   14000101e:	ret    
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x8a19]        # 0x140009a40
   140001027:	jmp    0x140009100
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	int3   
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	mov    QWORD PTR [rsp+0x8],rbx
   14000103d:	xor    ebx,ebx
   14000103f:	lea    rax,[rdx-0x1]
   140001043:	mov    r10d,0x7ffffffe
   140001049:	mov    r9d,ebx
   14000104c:	cmp    rax,r10
   14000104f:	mov    r11d,0x80070057
   140001055:	cmova  r9d,r11d
   140001059:	test   r9d,r9d
   14000105c:	js     0x14000109d
   14000105e:	mov    r9d,ebx
   140001061:	test   rdx,rdx
   140001064:	je     0x140001091
   140001066:	sub    r10,rdx
   140001069:	sub    r8,rcx
   14000106c:	lea    rax,[r10+rdx*1]
   140001070:	test   rax,rax
   140001073:	je     0x14000108c
   140001075:	movzx  eax,WORD PTR [r8+rcx*1]
   14000107a:	test   ax,ax
   14000107d:	je     0x14000108c
   14000107f:	mov    WORD PTR [rcx],ax
   140001082:	add    rcx,0x2
   140001086:	sub    rdx,0x1
   14000108a:	jne    0x14000106c
   14000108c:	test   rdx,rdx
   14000108f:	jne    0x1400010a2
   140001091:	sub    rcx,0x2
   140001095:	mov    r9d,0x8007007a
   14000109b:	jmp    0x1400010a2
   14000109d:	test   rdx,rdx
   1400010a0:	je     0x1400010a5
   1400010a2:	mov    WORD PTR [rcx],bx
   1400010a5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400010aa:	mov    eax,r9d
   1400010ad:	ret    
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	int3   
   1400010b1:	int3   
   1400010b2:	int3   
   1400010b3:	int3   
   1400010b4:	mov    QWORD PTR [rsp+0x18],r8
   1400010b9:	mov    QWORD PTR [rsp+0x20],r9
   1400010be:	push   rbx
   1400010bf:	push   rsi
   1400010c0:	push   rdi
   1400010c1:	sub    rsp,0x20
   1400010c5:	xor    edi,edi
   1400010c7:	lea    rax,[rdx-0x1]
   1400010cb:	cmp    rax,0x7ffffffe
   1400010d1:	mov    rsi,rcx
   1400010d4:	mov    ecx,0x80070057
   1400010d9:	cmova  edi,ecx
   1400010dc:	test   edi,edi
   1400010de:	js     0x140001115
   1400010e0:	lea    rbx,[rdx-0x1]
   1400010e4:	mov    rcx,rsi
   1400010e7:	mov    rdx,rbx
   1400010ea:	lea    r9,[rsp+0x58]
   1400010ef:	xor    edi,edi
   1400010f1:	call   QWORD PTR [rip+0x9441]        # 0x14000a538
   1400010f7:	test   eax,eax
   1400010f9:	js     0x14000110a
   1400010fb:	cdqe   
   1400010fd:	cmp    rax,rbx
   140001100:	ja     0x14000110a
   140001102:	jne    0x14000111d
   140001104:	mov    BYTE PTR [rbx+rsi*1],dil
   140001108:	jmp    0x14000111d
   14000110a:	mov    BYTE PTR [rbx+rsi*1],dil
   14000110e:	mov    edi,0x8007007a
   140001113:	jmp    0x14000111d
   140001115:	test   rdx,rdx
   140001118:	je     0x14000111d
   14000111a:	mov    BYTE PTR [rsi],0x0
   14000111d:	mov    eax,edi
   14000111f:	add    rsp,0x20
   140001123:	pop    rdi
   140001124:	pop    rsi
   140001125:	pop    rbx
   140001126:	ret    
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    QWORD PTR [rsp+0x18],r8
   140001135:	mov    QWORD PTR [rsp+0x20],r9
   14000113a:	push   rbx
   14000113b:	push   rbp
   14000113c:	push   rsi
   14000113d:	push   rdi
   14000113e:	sub    rsp,0x28
   140001142:	xor    ebp,ebp
   140001144:	lea    rax,[rdx-0x1]
   140001148:	cmp    rax,0x7ffffffe
   14000114e:	mov    rsi,rcx
   140001151:	mov    edi,ebp
   140001153:	mov    ecx,0x80070057
   140001158:	cmova  edi,ecx
   14000115b:	test   edi,edi
   14000115d:	js     0x140001194
   14000115f:	lea    rbx,[rdx-0x1]
   140001163:	mov    rcx,rsi
   140001166:	mov    rdx,rbx
   140001169:	lea    r9,[rsp+0x68]
   14000116e:	mov    edi,ebp
   140001170:	call   QWORD PTR [rip+0x93ca]        # 0x14000a540
   140001176:	test   eax,eax
   140001178:	js     0x140001189
   14000117a:	cdqe   
   14000117c:	cmp    rax,rbx
   14000117f:	ja     0x140001189
   140001181:	jne    0x14000119c
   140001183:	mov    WORD PTR [rsi+rbx*2],bp
   140001187:	jmp    0x14000119c
   140001189:	mov    WORD PTR [rsi+rbx*2],bp
   14000118d:	mov    edi,0x8007007a
   140001192:	jmp    0x14000119c
   140001194:	test   rdx,rdx
   140001197:	je     0x14000119c
   140001199:	mov    WORD PTR [rsi],bp
   14000119c:	mov    eax,edi
   14000119e:	add    rsp,0x28
   1400011a2:	pop    rdi
   1400011a3:	pop    rsi
   1400011a4:	pop    rbp
   1400011a5:	pop    rbx
   1400011a6:	ret    
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	sub    rsp,0x38
   1400011b4:	and    QWORD PTR [rsp+0x20],0x0
   1400011ba:	movzx  r9d,dx
   1400011be:	mov    edx,0x2b
   1400011c3:	call   QWORD PTR [rip+0x93b7]        # 0x14000a580
   1400011c9:	add    rsp,0x38
   1400011cd:	ret    
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	int3   
   1400011d1:	int3   
   1400011d2:	int3   
   1400011d3:	int3   
   1400011d4:	mov    r11,rsp
   1400011d7:	mov    DWORD PTR [r11+0x20],r9d
   1400011db:	sub    rsp,0x48
   1400011df:	and    QWORD PTR [r11-0x18],0x0
   1400011e4:	lea    rax,[r11+0x20]
   1400011e8:	movzx  r9d,dx
   1400011ec:	mov    edx,0x2b
   1400011f1:	mov    QWORD PTR [r11-0x20],0x4
   1400011f9:	mov    QWORD PTR [r11-0x28],rax
   1400011fd:	call   QWORD PTR [rip+0x937d]        # 0x14000a580
   140001203:	add    rsp,0x48
   140001207:	ret    
   140001208:	int3   
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	mov    r11,rsp
   140001213:	mov    DWORD PTR [r11+0x20],r9d
   140001217:	sub    rsp,0x58
   14000121b:	and    QWORD PTR [r11-0x18],0x0
   140001220:	lea    rax,[r11+0x28]
   140001224:	mov    r9d,0x4
   14000122a:	mov    QWORD PTR [r11-0x20],r9
   14000122e:	mov    QWORD PTR [r11-0x28],rax
   140001232:	lea    rax,[r11+0x20]
   140001236:	mov    QWORD PTR [r11-0x30],r9
   14000123a:	movzx  r9d,dx
   14000123e:	mov    edx,0x2b
   140001243:	mov    QWORD PTR [r11-0x38],rax
   140001247:	call   QWORD PTR [rip+0x9333]        # 0x14000a580
   14000124d:	add    rsp,0x58
   140001251:	ret    
   140001252:	int3   
   140001253:	int3   
   140001254:	int3   
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	sub    rsp,0x48
   14000125c:	xor    r11d,r11d
   14000125f:	test   r9,r9
   140001262:	je     0x140001288
   140001264:	cmp    WORD PTR [r9],r11w
   140001268:	jne    0x140001270
   14000126a:	lea    eax,[r11+0xe]
   14000126e:	jmp    0x14000128d
   140001270:	or     rax,0xffffffffffffffff
   140001274:	inc    rax
   140001277:	cmp    WORD PTR [r9+rax*2],r11w
   14000127c:	jne    0x140001274
   14000127e:	lea    rax,[rax*2+0x2]
   140001286:	jmp    0x14000128d
   140001288:	mov    eax,0xa
   14000128d:	test   r9,r9
   140001290:	je     0x1400012a3
   140001292:	cmp    WORD PTR [r9],r11w
   140001296:	lea    r10,[rip+0x9453]        # 0x14000a6f0
   14000129d:	cmove  r9,r10
   1400012a1:	jmp    0x1400012aa
   1400012a3:	lea    r9,[rip+0x9456]        # 0x14000a700
   1400012aa:	mov    QWORD PTR [rsp+0x30],r11
   1400012af:	mov    QWORD PTR [rsp+0x28],rax
   1400012b4:	mov    QWORD PTR [rsp+0x20],r9
   1400012b9:	movzx  r9d,dx
   1400012bd:	mov    edx,0x2b
   1400012c2:	call   QWORD PTR [rip+0x92b8]        # 0x14000a580
   1400012c8:	add    rsp,0x48
   1400012cc:	ret    
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400012d9:	push   rsi
   1400012da:	sub    rsp,0x60
   1400012de:	mov    rax,QWORD PTR [rsp+0x90]
   1400012e6:	or     r8,0xffffffffffffffff
   1400012ea:	xor    ebx,ebx
   1400012ec:	mov    r11,rcx
   1400012ef:	mov    r10d,0xe
   1400012f5:	test   rax,rax
   1400012f8:	je     0x14000131a
   1400012fa:	cmp    WORD PTR [rax],bx
   1400012fd:	jne    0x140001304
   1400012ff:	mov    ecx,r10d
   140001302:	jmp    0x14000131f
   140001304:	mov    rcx,r8
   140001307:	inc    rcx
   14000130a:	cmp    WORD PTR [rax+rcx*2],bx
   14000130e:	jne    0x140001307
   140001310:	lea    rcx,[rcx*2+0x2]
   140001318:	jmp    0x14000131f
   14000131a:	mov    ecx,0xa
   14000131f:	lea    rsi,[rip+0x93ca]        # 0x14000a6f0
   140001326:	test   rax,rax
   140001329:	je     0x140001334
   14000132b:	cmp    WORD PTR [rax],bx
   14000132e:	cmove  rax,rsi
   140001332:	jmp    0x14000133b
   140001334:	lea    rax,[rip+0x93c5]        # 0x14000a700
   14000133b:	test   r9,r9
   14000133e:	je     0x14000135a
   140001340:	cmp    WORD PTR [r9],bx
   140001344:	je     0x140001360
   140001346:	inc    r8
   140001349:	cmp    WORD PTR [r9+r8*2],bx
   14000134e:	jne    0x140001346
   140001350:	lea    r10,[r8*2+0x2]
   140001358:	jmp    0x140001360
   14000135a:	mov    r10d,0xa
   140001360:	test   r9,r9
   140001363:	je     0x14000136f
   140001365:	cmp    WORD PTR [r9],bx
   140001369:	cmove  r9,rsi
   14000136d:	jmp    0x140001376
   14000136f:	lea    r9,[rip+0x938a]        # 0x14000a700
   140001376:	mov    QWORD PTR [rsp+0x50],rbx
   14000137b:	lea    r8,[rsp+0x98]
   140001383:	mov    QWORD PTR [rsp+0x48],0x4
   14000138c:	mov    QWORD PTR [rsp+0x40],r8
   140001391:	lea    r8,[rip+0x98e0]        # 0x14000ac78
   140001398:	mov    QWORD PTR [rsp+0x38],rcx
   14000139d:	mov    rcx,r11
   1400013a0:	mov    QWORD PTR [rsp+0x30],rax
   1400013a5:	mov    QWORD PTR [rsp+0x28],r10
   1400013aa:	mov    QWORD PTR [rsp+0x20],r9
   1400013af:	movzx  r9d,dx
   1400013b3:	mov    edx,0x2b
   1400013b8:	call   QWORD PTR [rip+0x91c2]        # 0x14000a580
   1400013be:	mov    rbx,QWORD PTR [rsp+0x70]
   1400013c3:	add    rsp,0x60
   1400013c7:	pop    rsi
   1400013c8:	ret    
   1400013c9:	int3   
   1400013ca:	int3   
   1400013cb:	int3   
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	sub    rsp,0x58
   1400013d4:	xor    r11d,r11d
   1400013d7:	test   r9,r9
   1400013da:	je     0x140001400
   1400013dc:	cmp    WORD PTR [r9],r11w
   1400013e0:	jne    0x1400013e8
   1400013e2:	lea    eax,[r11+0xe]
   1400013e6:	jmp    0x140001405
   1400013e8:	or     rax,0xffffffffffffffff
   1400013ec:	inc    rax
   1400013ef:	cmp    WORD PTR [r9+rax*2],r11w
   1400013f4:	jne    0x1400013ec
   1400013f6:	lea    rax,[rax*2+0x2]
   1400013fe:	jmp    0x140001405
   140001400:	mov    eax,0xa
   140001405:	test   r9,r9
   140001408:	je     0x14000141b
   14000140a:	cmp    WORD PTR [r9],r11w
   14000140e:	lea    r10,[rip+0x92db]        # 0x14000a6f0
   140001415:	cmove  r9,r10
   140001419:	jmp    0x140001422
   14000141b:	lea    r9,[rip+0x92de]        # 0x14000a700
   140001422:	mov    QWORD PTR [rsp+0x40],r11
   140001427:	lea    r10,[rsp+0x80]
   14000142f:	mov    QWORD PTR [rsp+0x38],0x4
   140001438:	mov    QWORD PTR [rsp+0x30],r10
   14000143d:	mov    QWORD PTR [rsp+0x28],rax
   140001442:	mov    QWORD PTR [rsp+0x20],r9
   140001447:	movzx  r9d,dx
   14000144b:	mov    edx,0x2b
   140001450:	call   QWORD PTR [rip+0x912a]        # 0x14000a580
   140001456:	add    rsp,0x58
   14000145a:	ret    
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	int3   
   140001461:	int3   
   140001462:	int3   
   140001463:	int3   
   140001464:	mov    r11,rsp
   140001467:	mov    DWORD PTR [r11+0x20],r9d
   14000146b:	sub    rsp,0x58
   14000146f:	and    QWORD PTR [r11-0x18],0x0
   140001474:	lea    rax,[r11+0x28]
   140001478:	mov    r8d,0x4
   14000147e:	movzx  r9d,dx
   140001482:	mov    QWORD PTR [r11-0x20],r8
   140001486:	mov    edx,0x2b
   14000148b:	mov    QWORD PTR [r11-0x28],rax
   14000148f:	lea    rax,[r11+0x20]
   140001493:	mov    QWORD PTR [r11-0x30],r8
   140001497:	lea    r8,[rip+0x97da]        # 0x14000ac78
   14000149e:	mov    QWORD PTR [r11-0x38],rax
   1400014a2:	call   QWORD PTR [rip+0x90d8]        # 0x14000a580
   1400014a8:	add    rsp,0x58
   1400014ac:	ret    
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	int3   
   1400014b1:	int3   
   1400014b2:	int3   
   1400014b3:	int3   
   1400014b4:	mov    r11,rsp
   1400014b7:	mov    DWORD PTR [r11+0x20],r9d
   1400014bb:	sub    rsp,0x78
   1400014bf:	and    QWORD PTR [r11-0x18],0x0
   1400014c4:	lea    rax,[r11+0x38]
   1400014c8:	mov    r8d,0x4
   1400014ce:	movzx  r9d,dx
   1400014d2:	mov    QWORD PTR [r11-0x20],r8
   1400014d6:	mov    edx,0x2b
   1400014db:	mov    QWORD PTR [r11-0x28],rax
   1400014df:	lea    rax,[r11+0x30]
   1400014e3:	mov    QWORD PTR [r11-0x30],r8
   1400014e7:	mov    QWORD PTR [r11-0x38],rax
   1400014eb:	lea    rax,[r11+0x28]
   1400014ef:	mov    QWORD PTR [r11-0x40],r8
   1400014f3:	mov    QWORD PTR [r11-0x48],rax
   1400014f7:	lea    rax,[r11+0x20]
   1400014fb:	mov    QWORD PTR [r11-0x50],r8
   1400014ff:	lea    r8,[rip+0x9772]        # 0x14000ac78
   140001506:	mov    QWORD PTR [r11-0x58],rax
   14000150a:	call   QWORD PTR [rip+0x9070]        # 0x14000a580
   140001510:	add    rsp,0x78
   140001514:	ret    
   140001515:	int3   
   140001516:	int3   
   140001517:	int3   
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	mov    r11,rsp
   14000151f:	mov    DWORD PTR [r11+0x20],r9d
   140001523:	sub    rsp,0x98
   14000152a:	and    QWORD PTR [r11-0x18],0x0
   14000152f:	lea    rax,[r11+0x48]
   140001533:	mov    r8d,0x4
   140001539:	movzx  r9d,dx
   14000153d:	mov    QWORD PTR [r11-0x20],r8
   140001541:	mov    edx,0x2b
   140001546:	mov    QWORD PTR [r11-0x28],rax
   14000154a:	lea    rax,[r11+0x40]
   14000154e:	mov    QWORD PTR [r11-0x30],r8
   140001552:	mov    QWORD PTR [r11-0x38],rax
   140001556:	lea    rax,[r11+0x38]
   14000155a:	mov    QWORD PTR [r11-0x40],r8
   14000155e:	mov    QWORD PTR [r11-0x48],rax
   140001562:	lea    rax,[r11+0x30]
   140001566:	mov    QWORD PTR [r11-0x50],r8
   14000156a:	mov    QWORD PTR [r11-0x58],rax
   14000156e:	lea    rax,[r11+0x28]
   140001572:	mov    QWORD PTR [r11-0x60],r8
   140001576:	mov    QWORD PTR [r11-0x68],rax
   14000157a:	lea    rax,[r11+0x20]
   14000157e:	mov    QWORD PTR [r11-0x70],r8
   140001582:	lea    r8,[rip+0x96ef]        # 0x14000ac78
   140001589:	mov    QWORD PTR [r11-0x78],rax
   14000158d:	call   QWORD PTR [rip+0x8fed]        # 0x14000a580
   140001593:	add    rsp,0x98
   14000159a:	ret    
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	int3   
   1400015a1:	int3   
   1400015a2:	int3   
   1400015a3:	int3   
   1400015a4:	mov    r11,rsp
   1400015a7:	mov    DWORD PTR [r11+0x20],r9d
   1400015ab:	sub    rsp,0x48
   1400015af:	and    QWORD PTR [r11-0x18],0x0
   1400015b4:	lea    rax,[r11+0x20]
   1400015b8:	mov    edx,0xe
   1400015bd:	mov    QWORD PTR [r11-0x20],0x4
   1400015c5:	movzx  r9d,dx
   1400015c9:	lea    r8,[rip+0x96a8]        # 0x14000ac78
   1400015d0:	mov    edx,0x2b
   1400015d5:	mov    QWORD PTR [r11-0x28],rax
   1400015d9:	call   QWORD PTR [rip+0x8fa1]        # 0x14000a580
   1400015df:	add    rsp,0x48
   1400015e3:	ret    
   1400015e4:	int3   
   1400015e5:	int3   
   1400015e6:	int3   
   1400015e7:	int3   
   1400015e8:	int3   
   1400015e9:	int3   
   1400015ea:	int3   
   1400015eb:	int3   
   1400015ec:	int3   
   1400015ed:	int3   
   1400015ee:	int3   
   1400015ef:	int3   
   1400015f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400015fa:	push   rdi
   1400015fb:	sub    rsp,0x20
   1400015ff:	and    DWORD PTR [r8],0x0
   140001603:	mov    rbx,rdx
   140001606:	sub    ecx,0x4
   140001609:	je     0x140001620
   14000160b:	cmp    ecx,0x1
   14000160e:	je     0x140001617
   140001610:	mov    eax,0x57
   140001615:	jmp    0x14000165f
   140001617:	xor    edi,edi
   140001619:	xor    eax,eax
   14000161b:	xor    sil,sil
   14000161e:	jmp    0x140001641
   140001620:	mov    rcx,r9
   140001623:	call   QWORD PTR [rip+0x8f6f]        # 0x14000a598
   140001629:	mov    rcx,rax
   14000162c:	mov    rdi,rax
   14000162f:	call   QWORD PTR [rip+0x8f3b]        # 0x14000a570
   140001635:	mov    rcx,rdi
   140001638:	mov    sil,al
   14000163b:	call   QWORD PTR [rip+0x8f37]        # 0x14000a578
   140001641:	test   BYTE PTR [rbx+0x1a],0x2
   140001645:	je     0x140001652
   140001647:	mov    rcx,QWORD PTR [rbx+0x10]
   14000164b:	test   rcx,rcx
   14000164e:	cmovne rbx,rcx
   140001652:	mov    QWORD PTR [rbx+0x10],rdi
   140001656:	mov    BYTE PTR [rbx+0x19],sil
   14000165a:	mov    DWORD PTR [rbx+0x1c],eax
   14000165d:	xor    eax,eax
   14000165f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001664:	mov    rsi,QWORD PTR [rsp+0x38]
   140001669:	add    rsp,0x20
   14000166d:	pop    rdi
   14000166e:	ret    
   14000166f:	int3   
   140001670:	int3   
   140001671:	int3   
   140001672:	int3   
   140001673:	int3   
   140001674:	int3   
   140001675:	int3   
   140001676:	int3   
   140001677:	int3   
   140001678:	mov    QWORD PTR [rsp+0x10],rbx
   14000167d:	mov    QWORD PTR [rsp+0x18],rsi
   140001682:	push   rbp
   140001683:	push   rdi
   140001684:	push   r15
   140001686:	lea    rbp,[rsp-0x370]
   14000168e:	sub    rsp,0x470
   140001695:	mov    rax,QWORD PTR [rip+0xc96c]        # 0x14000e008
   14000169c:	xor    rax,rsp
   14000169f:	mov    QWORD PTR [rbp+0x360],rax
   1400016a6:	xor    edi,edi
   1400016a8:	mov    rsi,rcx
   1400016ab:	test   BYTE PTR [rip+0xd992],0xc1        # 0x14000f044
   1400016b2:	je     0x14000185c
   1400016b8:	and    DWORD PTR [rsp+0x30],edi
   1400016bc:	lea    rcx,[rsp+0x30]
   1400016c1:	call   0x140008500
   1400016c6:	cmp    DWORD PTR [rsp+0x30],edi
   1400016ca:	jne    0x14000185c
   1400016d0:	and    QWORD PTR [rsp+0x38],rdi
   1400016d5:	lea    rdx,[rbp+0x150]
   1400016dc:	mov    r8d,0x104
   1400016e2:	xor    ecx,ecx
   1400016e4:	call   QWORD PTR [rip+0x8c36]        # 0x14000a320
   1400016ea:	test   eax,eax
   1400016ec:	je     0x14000185c
   1400016f2:	call   QWORD PTR [rip+0x8c50]        # 0x14000a348
   1400016f8:	lea    r8,[rsp+0x40]
   1400016fd:	mov    edx,0x20008
   140001702:	mov    rcx,rax
   140001705:	call   QWORD PTR [rip+0x8c35]        # 0x14000a340
   14000170b:	and    DWORD PTR [rsp+0x30],0x0
   140001710:	mov    r15d,0x1
   140001716:	mov    edi,eax
   140001718:	test   eax,eax
   14000171a:	je     0x140001749
   14000171c:	mov    rcx,QWORD PTR [rsp+0x40]
   140001721:	lea    rax,[rsp+0x30]
   140001726:	xor    r9d,r9d
   140001729:	mov    QWORD PTR [rsp+0x20],rax
   14000172e:	xor    r8d,r8d
   140001731:	mov    edx,r15d
   140001734:	call   QWORD PTR [rip+0x8cee]        # 0x14000a428
   14000173a:	test   eax,eax
   14000173c:	jne    0x140001749
   14000173e:	call   QWORD PTR [rip+0x8b5c]        # 0x14000a2a0
   140001744:	cmp    eax,0x7a
   140001747:	je     0x14000174b
   140001749:	xor    edi,edi
   14000174b:	test   edi,edi
   14000174d:	je     0x14000184c
   140001753:	mov    ebx,DWORD PTR [rsp+0x30]
   140001757:	call   QWORD PTR [rip+0x8b9b]        # 0x14000a2f8
   14000175d:	mov    r8d,ebx
   140001760:	mov    edx,0x8
   140001765:	mov    rcx,rax
   140001768:	call   QWORD PTR [rip+0x8b7a]        # 0x14000a2e8
   14000176e:	mov    rcx,rax
   140001771:	mov    rbx,rax
   140001774:	neg    rcx
   140001777:	sbb    edx,edx
   140001779:	and    edi,edx
   14000177b:	je     0x140001833
   140001781:	mov    r9d,DWORD PTR [rsp+0x30]
   140001786:	lea    rax,[rsp+0x30]
   14000178b:	mov    rcx,QWORD PTR [rsp+0x40]
   140001790:	mov    r8,rbx
   140001793:	mov    edx,r15d
   140001796:	mov    QWORD PTR [rsp+0x20],rax
   14000179b:	call   QWORD PTR [rip+0x8c87]        # 0x14000a428
   1400017a1:	neg    eax
   1400017a3:	sbb    ecx,ecx
   1400017a5:	and    edi,ecx
   1400017a7:	je     0x140001833
   1400017ad:	mov    rcx,QWORD PTR [rbx]
   1400017b0:	lea    rdx,[rsp+0x38]
   1400017b5:	call   QWORD PTR [rip+0x10885]        # 0x140012040
   1400017bb:	neg    eax
   1400017bd:	sbb    ecx,ecx
   1400017bf:	and    edi,ecx
   1400017c1:	je     0x140001833
   1400017c3:	mov    r9,QWORD PTR [rsp+0x38]
   1400017c8:	lea    r8,[rip+0x90f9]        # 0x14000a8c8
   1400017cf:	mov    edx,0x100
   1400017d4:	mov    QWORD PTR [rsp+0x20],rsi
   1400017d9:	lea    rcx,[rsp+0x50]
   1400017de:	call   0x140001130
   1400017e3:	xor    edi,edi
   1400017e5:	test   eax,eax
   1400017e7:	setns  dil
   1400017eb:	test   edi,edi
   1400017ed:	je     0x140001833
   1400017ef:	mov    DWORD PTR [rsp+0x28],r15d
   1400017f4:	lea    r9,[rsp+0x50]
   1400017f9:	and    QWORD PTR [rsp+0x20],0x0
   1400017ff:	lea    r8,[rbp+0x150]
   140001806:	lea    rdx,[rip+0x90db]        # 0x14000a8e8
   14000180d:	xor    ecx,ecx
   14000180f:	call   QWORD PTR [rip+0x88f3]        # 0x14000a108
   140001815:	mov    ecx,DWORD PTR [rip+0xd829]        # 0x14000f044
   14000181b:	mov    edi,r15d
   14000181e:	test   cl,0xc0
   140001821:	je     0x140001833
   140001823:	cmp    eax,0x20
   140001826:	jge    0x140001833
   140001828:	and    ecx,0xffffffbf
   14000182b:	mov    DWORD PTR [rip+0xd813],ecx        # 0x14000f044
   140001831:	xor    edi,edi
   140001833:	test   rbx,rbx
   140001836:	je     0x14000184c
   140001838:	call   QWORD PTR [rip+0x8aba]        # 0x14000a2f8
   14000183e:	mov    r8,rbx
   140001841:	xor    edx,edx
   140001843:	mov    rcx,rax
   140001846:	call   QWORD PTR [rip+0x8aa4]        # 0x14000a2f0
   14000184c:	mov    rcx,QWORD PTR [rsp+0x38]
   140001851:	test   rcx,rcx
   140001854:	je     0x14000185c
   140001856:	call   QWORD PTR [rip+0x885c]        # 0x14000a0b8
   14000185c:	mov    eax,edi
   14000185e:	mov    rcx,QWORD PTR [rbp+0x360]
   140001865:	xor    rcx,rsp
   140001868:	call   0x140009020
   14000186d:	lea    r11,[rsp+0x470]
   140001875:	mov    rbx,QWORD PTR [r11+0x28]
   140001879:	mov    rsi,QWORD PTR [r11+0x30]
   14000187d:	mov    rsp,r11
   140001880:	pop    r15
   140001882:	pop    rdi
   140001883:	pop    rbp
   140001884:	ret    
   140001885:	int3   
   140001886:	int3   
   140001887:	int3   
   140001888:	int3   
   140001889:	int3   
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	mov    QWORD PTR [rsp+0x10],rbx
   140001891:	mov    QWORD PTR [rsp+0x18],rbp
   140001896:	mov    QWORD PTR [rsp+0x20],rsi
   14000189b:	push   rdi
   14000189c:	push   r12
   14000189e:	push   r14
   1400018a0:	sub    rsp,0x50
   1400018a4:	xor    r9d,r9d
   1400018a7:	mov    rbp,r8
   1400018aa:	mov    rsi,rcx
   1400018ad:	xor    r8d,r8d
   1400018b0:	xor    ecx,ecx
   1400018b2:	lea    edx,[r9+0x1]
   1400018b6:	call   QWORD PTR [rip+0x8a24]        # 0x14000a2e0
   1400018bc:	xor    r14d,r14d
   1400018bf:	mov    QWORD PTR [rip+0xcf16],0x1        # 0x14000e7e0
   1400018ca:	lea    rax,[rip+0x9397]        # 0x14000ac68
   1400018d1:	mov    QWORD PTR [rip+0xcf00],r14        # 0x14000e7d8
   1400018d8:	lea    rbx,[rip+0xcee9]        # 0x14000e7c8
   1400018df:	mov    QWORD PTR [rip+0xcee2],r14        # 0x14000e7c8
   1400018e6:	mov    QWORD PTR [rip+0xcf03],rax        # 0x14000e7f0
   1400018ed:	lea    rdi,[rip+0xcefc]        # 0x14000e7f0
   1400018f4:	mov    QWORD PTR [rip+0xc875],rbx        # 0x14000e170
   1400018fb:	mov    r8,QWORD PTR [rdi]
   1400018fe:	lea    rax,[rbx+0x8]
   140001902:	mov    QWORD PTR [rsp+0x38],rax
   140001907:	lea    rcx,[rip+0xfffffffffffffce2]        # 0x1400015f0
   14000190e:	mov    QWORD PTR [rsp+0x30],r14
   140001913:	lea    rax,[rsp+0x40]
   140001918:	mov    QWORD PTR [rsp+0x40],r8
   14000191d:	lea    rdi,[rdi+0x8]
   140001921:	mov    QWORD PTR [rsp+0x48],r14
   140001926:	mov    r9d,0x1
   14000192c:	mov    QWORD PTR [rsp+0x28],r14
   140001931:	mov    rdx,rbx
   140001934:	mov    QWORD PTR [rsp+0x20],rax
   140001939:	mov    QWORD PTR [rbx+0x20],r8
   14000193d:	call   QWORD PTR [rip+0x8c45]        # 0x14000a588
   140001943:	mov    rbx,QWORD PTR [rbx]
   140001946:	test   rbx,rbx
   140001949:	jne    0x1400018fb
   14000194b:	xor    edx,edx
   14000194d:	lea    rcx,[rip+0x8fa0]        # 0x14000a8f4
   140001954:	call   QWORD PTR [rip+0x8756]        # 0x14000a0b0
   14000195a:	lea    rdi,[rip+0x9317]        # 0x14000ac78
   140001961:	lea    r12,[rip+0xc808]        # 0x14000e170
   140001968:	test   eax,eax
   14000196a:	jns    0x140001990
   14000196c:	mov    rcx,QWORD PTR [rip+0xc7fd]        # 0x14000e170
   140001973:	cmp    rcx,r12
   140001976:	je     0x140001990
   140001978:	test   BYTE PTR [rcx+0x1c],0x4
   14000197c:	je     0x140001990
   14000197e:	mov    rcx,QWORD PTR [rcx+0x10]
   140001982:	lea    edx,[rbx+0xa]
   140001985:	mov    r9d,eax
   140001988:	mov    r8,rdi
   14000198b:	call   0x1400011d4
   140001990:	mov    r9d,0x40
   140001996:	mov    QWORD PTR [rip+0xd6fb],rsi        # 0x14000f098
   14000199d:	lea    r8,[rip+0xd75c]        # 0x14000f100
   1400019a4:	mov    edx,0x3e8
   1400019a9:	mov    rcx,rsi
   1400019ac:	call   QWORD PTR [rip+0x884e]        # 0x14000a200
   1400019b2:	call   QWORD PTR [rip+0x10648]        # 0x140012000
   1400019b8:	lea    r8,[rip+0x8f39]        # 0x14000a8f8
   1400019bf:	xor    edx,edx
   1400019c1:	xor    ecx,ecx
   1400019c3:	call   QWORD PTR [rip+0x8a37]        # 0x14000a400
   1400019c9:	mov    rcx,rax
   1400019cc:	xor    edx,edx
   1400019ce:	mov    rsi,rax
   1400019d1:	call   QWORD PTR [rip+0x8a11]        # 0x14000a3e8
   1400019d7:	test   eax,eax
   1400019d9:	jne    0x140001b98
   1400019df:	call   0x140001c28
   1400019e4:	test   eax,eax
   1400019e6:	jle    0x140001b32
   1400019ec:	mov    rcx,QWORD PTR [rip+0xd6ad]        # 0x14000f0a0
   1400019f3:	mov    ebx,r14d
   1400019f6:	mov    eax,DWORD PTR [rip+0xd648]        # 0x14000f044
   1400019fc:	test   rcx,rcx
   1400019ff:	jne    0x140001a64
   140001a01:	cmp    QWORD PTR [rip+0xd780],r14        # 0x14000f188
   140001a08:	jne    0x140001a64
   140001a0a:	test   al,al
   140001a0c:	js     0x140001a64
   140001a0e:	lea    ebx,[rcx+0x1]
   140001a11:	test   bl,al
   140001a13:	jne    0x140001a20
   140001a15:	or     eax,0x40
   140001a18:	mov    DWORD PTR [rip+0xd626],eax        # 0x14000f044
   140001a1e:	jmp    0x140001a64
   140001a20:	call   0x1400051b8
   140001a25:	test   eax,eax
   140001a27:	je     0x140001a57
   140001a29:	mov    rcx,QWORD PTR [rip+0xc740]        # 0x14000e170
   140001a30:	cmp    rcx,r12
   140001a33:	je     0x140001a4c
   140001a35:	test   BYTE PTR [rcx+0x1c],0x2
   140001a39:	je     0x140001a4c
   140001a3b:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a3f:	mov    edx,0xb
   140001a44:	mov    r8,rdi
   140001a47:	call   0x1400011b0
   140001a4c:	mov    r8d,0xc
   140001a52:	jmp    0x140001b3a
   140001a57:	mov    rcx,QWORD PTR [rip+0xd642]        # 0x14000f0a0
   140001a5e:	mov    eax,DWORD PTR [rip+0xd5e0]        # 0x14000f044
   140001a64:	test   al,0x40
   140001a66:	je     0x140001a9d
   140001a68:	test   rcx,rcx
   140001a6b:	jne    0x140001a8d
   140001a6d:	cmp    QWORD PTR [rip+0xd714],r14        # 0x14000f188
   140001a74:	je     0x140001a8d
   140001a76:	cmp    QWORD PTR [rip+0xd63b],r14        # 0x14000f0b8
   140001a7d:	je     0x140001a8d
   140001a7f:	call   0x140006458
   140001a84:	xor    ecx,ecx
   140001a86:	call   0x1400074d8
   140001a8b:	jmp    0x140001a92
   140001a8d:	call   0x1400051b8
   140001a92:	test   eax,eax
   140001a94:	je     0x140001a9d
   140001a96:	and    DWORD PTR [rip+0xd5a7],0xffffffbf        # 0x14000f044
   140001a9d:	mov    rcx,rbp
   140001aa0:	call   0x140001678
   140001aa5:	test   eax,eax
   140001aa7:	jne    0x140001b48
   140001aad:	mov    ecx,DWORD PTR [rip+0xd591]        # 0x14000f044
   140001ab3:	mov    eax,ecx
   140001ab5:	and    eax,0x80
   140001aba:	je     0x140001ace
   140001abc:	cmp    QWORD PTR [rip+0xd5dd],r14        # 0x14000f0a0
   140001ac3:	jne    0x140001ae0
   140001ac5:	cmp    QWORD PTR [rip+0xd5ec],r14        # 0x14000f0b8
   140001acc:	jne    0x140001ae0
   140001ace:	test   cl,0x1
   140001ad1:	jne    0x140001ae0
   140001ad3:	cmp    QWORD PTR [rip+0xd6ae],r14        # 0x14000f188
   140001ada:	jne    0x140001ae0
   140001adc:	test   ebx,ebx
   140001ade:	je     0x140001b34
   140001ae0:	test   eax,eax
   140001ae2:	je     0x140001aeb
   140001ae4:	call   0x140004ee8
   140001ae9:	jmp    0x140001b48
   140001aeb:	mov    QWORD PTR [rsp+0x28],r14
   140001af0:	lea    r9,[rsp+0x70]
   140001af5:	lea    r8,[rip+0x404]        # 0x140001f00
   140001afc:	mov    DWORD PTR [rsp+0x20],r14d
   140001b01:	xor    edx,edx
   140001b03:	mov    DWORD PTR [rsp+0x70],0x1
   140001b0b:	xor    ecx,ecx
   140001b0d:	call   QWORD PTR [rip+0x8845]        # 0x14000a358
   140001b13:	mov    rbx,rax
   140001b16:	test   rax,rax
   140001b19:	je     0x140001b48
   140001b1b:	or     edx,0xffffffff
   140001b1e:	mov    rcx,rax
   140001b21:	call   QWORD PTR [rip+0x88c1]        # 0x14000a3e8
   140001b27:	mov    rcx,rbx
   140001b2a:	call   QWORD PTR [rip+0x87a0]        # 0x14000a2d0
   140001b30:	jmp    0x140001b48
   140001b32:	jns    0x140001b48
   140001b34:	mov    r8d,0x6
   140001b3a:	mov    rcx,QWORD PTR [rip+0xd557]        # 0x14000f098
   140001b41:	xor    edx,edx
   140001b43:	call   0x140004ae4
   140001b48:	cmp    QWORD PTR [rip+0xc4d1],r14        # 0x14000e020
   140001b4f:	je     0x140001b8d
   140001b51:	mov    rdi,r14
   140001b54:	lea    rbp,[rip+0xc4c5]        # 0x14000e020
   140001b5b:	mov    rbx,r14
   140001b5e:	mov    rcx,QWORD PTR [rbx+rbp*1+0x8]
   140001b63:	test   rcx,rcx
   140001b66:	je     0x140001b7d
   140001b68:	mov    rcx,QWORD PTR [rcx]
   140001b6b:	test   rcx,rcx
   140001b6e:	je     0x140001b7d
   140001b70:	call   0x140008be4
   140001b75:	mov    rax,QWORD PTR [rbx+rbp*1+0x8]
   140001b7a:	mov    QWORD PTR [rax],r14
   140001b7d:	inc    rdi
   140001b80:	mov    rbx,rdi
   140001b83:	shl    rbx,0x4
   140001b87:	cmp    QWORD PTR [rbx+rbp*1],r14
   140001b8b:	jne    0x140001b5e
   140001b8d:	mov    rcx,rsi
   140001b90:	call   QWORD PTR [rip+0x885a]        # 0x14000a3f0
   140001b96:	jmp    0x140001bbb
   140001b98:	mov    rbx,QWORD PTR [rip+0xc5d1]        # 0x14000e170
   140001b9f:	cmp    rbx,r12
   140001ba2:	je     0x140001bc2
   140001ba4:	test   BYTE PTR [rbx+0x1c],0x4
   140001ba8:	je     0x140001bc2
   140001baa:	mov    rcx,QWORD PTR [rbx+0x10]
   140001bae:	mov    edx,0xc
   140001bb3:	mov    r8,rdi
   140001bb6:	call   0x1400011b0
   140001bbb:	mov    rbx,QWORD PTR [rip+0xc5ae]        # 0x14000e170
   140001bc2:	test   rsi,rsi
   140001bc5:	je     0x140001bd7
   140001bc7:	mov    rcx,rsi
   140001bca:	call   QWORD PTR [rip+0x8700]        # 0x14000a2d0
   140001bd0:	mov    rbx,QWORD PTR [rip+0xc599]        # 0x14000e170
   140001bd7:	cmp    rbx,r12
   140001bda:	je     0x140001c00
   140001bdc:	jmp    0x140001bf4
   140001bde:	mov    rcx,QWORD PTR [rbx+0x8]
   140001be2:	test   rcx,rcx
   140001be5:	je     0x140001bf1
   140001be7:	call   QWORD PTR [rip+0x89a3]        # 0x14000a590
   140001bed:	mov    QWORD PTR [rbx+0x8],r14
   140001bf1:	mov    rbx,QWORD PTR [rbx]
   140001bf4:	test   rbx,rbx
   140001bf7:	jne    0x140001bde
   140001bf9:	mov    QWORD PTR [rip+0xc570],r12        # 0x14000e170
   140001c00:	mov    eax,DWORD PTR [rip+0xd57e]        # 0x14000f184
   140001c06:	lea    r11,[rsp+0x50]
   140001c0b:	mov    rbx,QWORD PTR [r11+0x28]
   140001c0f:	mov    rbp,QWORD PTR [r11+0x30]
   140001c13:	mov    rsi,QWORD PTR [r11+0x38]
   140001c17:	mov    rsp,r11
   140001c1a:	pop    r14
   140001c1c:	pop    r12
   140001c1e:	pop    rdi
   140001c1f:	ret    
   140001c20:	int3   
   140001c21:	int3   
   140001c22:	int3   
   140001c23:	int3   
   140001c24:	int3   
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	mov    QWORD PTR [rsp+0x10],rbx
   140001c2d:	mov    QWORD PTR [rsp+0x18],rsi
   140001c32:	mov    QWORD PTR [rsp+0x20],rdi
   140001c37:	push   r14
   140001c39:	sub    rsp,0x20
   140001c3d:	mov    ebx,0x1
   140001c42:	call   QWORD PTR [rip+0x86e8]        # 0x14000a330
   140001c48:	test   rax,rax
   140001c4b:	je     0x140001c99
   140001c4d:	and    DWORD PTR [rsp+0x30],0x0
   140001c52:	lea    rdx,[rsp+0x30]
   140001c57:	mov    rcx,rax
   140001c5a:	call   QWORD PTR [rip+0x84a0]        # 0x14000a100
   140001c60:	mov    rdi,rax
   140001c63:	test   rax,rax
   140001c66:	je     0x140001cc7
   140001c68:	mov    esi,ebx
   140001c6a:	cmp    DWORD PTR [rsp+0x30],ebx
   140001c6e:	jle    0x140001c8e
   140001c70:	lea    r14,[rax+0x8]
   140001c74:	test   ebx,ebx
   140001c76:	jle    0x140001c8e
   140001c78:	mov    rcx,QWORD PTR [r14]
   140001c7b:	call   0x140001ce8
   140001c80:	inc    esi
   140001c82:	add    r14,0x8
   140001c86:	mov    ebx,eax
   140001c88:	cmp    esi,DWORD PTR [rsp+0x30]
   140001c8c:	jl     0x140001c74
   140001c8e:	mov    rcx,rdi
   140001c91:	call   QWORD PTR [rip+0x8421]        # 0x14000a0b8
   140001c97:	jmp    0x140001cc7
   140001c99:	xor    ebx,ebx
   140001c9b:	mov    rcx,QWORD PTR [rip+0xc4ce]        # 0x14000e170
   140001ca2:	lea    rax,[rip+0xc4c7]        # 0x14000e170
   140001ca9:	cmp    rcx,rax
   140001cac:	je     0x140001cc7
   140001cae:	test   BYTE PTR [rcx+0x1c],0x2
   140001cb2:	je     0x140001cc7
   140001cb4:	mov    rcx,QWORD PTR [rcx+0x10]
   140001cb8:	lea    edx,[rbx+0xd]
   140001cbb:	lea    r8,[rip+0x8fb6]        # 0x14000ac78
   140001cc2:	call   0x1400011b0
   140001cc7:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ccc:	mov    eax,ebx
   140001cce:	mov    rbx,QWORD PTR [rsp+0x38]
   140001cd3:	mov    rdi,QWORD PTR [rsp+0x48]
   140001cd8:	add    rsp,0x20
   140001cdc:	pop    r14
   140001cde:	ret    
   140001cdf:	int3   
   140001ce0:	int3   
   140001ce1:	int3   
   140001ce2:	int3   
   140001ce3:	int3   
   140001ce4:	int3   
   140001ce5:	int3   
   140001ce6:	int3   
   140001ce7:	int3   
   140001ce8:	mov    QWORD PTR [rsp+0x8],rbx
   140001ced:	mov    QWORD PTR [rsp+0x18],rbp
   140001cf2:	mov    QWORD PTR [rsp+0x20],rsi
   140001cf7:	push   rdi
   140001cf8:	push   r14
   140001cfa:	push   r15
   140001cfc:	sub    rsp,0x20
   140001d00:	or     rdi,0xffffffffffffffff
   140001d04:	xor    ebx,ebx
   140001d06:	cmp    QWORD PTR [rip+0xc3c3],rbx        # 0x14000e0d0
   140001d0d:	mov    rsi,rcx
   140001d10:	je     0x140001d47
   140001d12:	lea    r14,[rip+0xc3b7]        # 0x14000e0d0
   140001d19:	xor    ebp,ebp
   140001d1b:	mov    rax,r14
   140001d1e:	mov    rdx,QWORD PTR [rax]
   140001d21:	mov    rcx,rsi
   140001d24:	call   QWORD PTR [rip+0x870e]        # 0x14000a438
   140001d2a:	test   eax,eax
   140001d2c:	je     0x140001df4
   140001d32:	inc    rbp
   140001d35:	inc    ebx
   140001d37:	mov    rax,rbp
   140001d3a:	shl    rax,0x4
   140001d3e:	add    rax,r14
   140001d41:	cmp    QWORD PTR [rax],0x0
   140001d45:	jne    0x140001d1e
   140001d47:	xor    ebp,ebp
   140001d49:	cmp    QWORD PTR [rip+0xc350],rbp        # 0x14000e0a0
   140001d50:	je     0x140001d9b
   140001d52:	xor    r14d,r14d
   140001d55:	lea    rbx,[rip+0xc344]        # 0x14000e0a0
   140001d5c:	mov    rcx,QWORD PTR [rbx]
   140001d5f:	call   QWORD PTR [rip+0x832b]        # 0x14000a090
   140001d65:	mov    rdx,QWORD PTR [rbx]
   140001d68:	mov    rcx,rsi
   140001d6b:	movsxd r15,eax
   140001d6e:	mov    r8,r15
   140001d71:	call   QWORD PTR [rip+0x86d9]        # 0x14000a450
   140001d77:	test   eax,eax
   140001d79:	je     0x140001e0a
   140001d7f:	inc    r14
   140001d82:	lea    rcx,[rip+0xc317]        # 0x14000e0a0
   140001d89:	mov    rbx,r14
   140001d8c:	inc    ebp
   140001d8e:	shl    rbx,0x4
   140001d92:	add    rbx,rcx
   140001d95:	cmp    QWORD PTR [rbx],0x0
   140001d99:	jne    0x140001d5c
   140001d9b:	xor    ebp,ebp
   140001d9d:	cmp    QWORD PTR [rip+0xc27c],rbp        # 0x14000e020
   140001da4:	je     0x140001edf
   140001daa:	xor    r14d,r14d
   140001dad:	lea    rbx,[rip+0xc26c]        # 0x14000e020
   140001db4:	mov    rcx,QWORD PTR [rbx]
   140001db7:	call   QWORD PTR [rip+0x82d3]        # 0x14000a090
   140001dbd:	mov    rdx,QWORD PTR [rbx]
   140001dc0:	mov    rcx,rsi
   140001dc3:	movsxd r15,eax
   140001dc6:	mov    r8,r15
   140001dc9:	call   QWORD PTR [rip+0x8681]        # 0x14000a450
   140001dcf:	test   eax,eax
   140001dd1:	je     0x140001e43
   140001dd3:	inc    r14
   140001dd6:	lea    rcx,[rip+0xc243]        # 0x14000e020
   140001ddd:	mov    rbx,r14
   140001de0:	inc    ebp
   140001de2:	shl    rbx,0x4
   140001de6:	add    rbx,rcx
   140001de9:	cmp    QWORD PTR [rbx],0x0
   140001ded:	jne    0x140001db4
   140001def:	jmp    0x140001edf
   140001df4:	movsxd rax,ebx
   140001df7:	add    rax,rax
   140001dfa:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   140001dff:	or     DWORD PTR [rip+0xd23f],eax        # 0x14000f044
   140001e05:	jmp    0x140001eda
   140001e0a:	lea    rbx,[rsi+r15*2]
   140001e0e:	xor    r8d,r8d
   140001e11:	mov    rcx,rbx
   140001e14:	lea    rdx,[rsp+0x48]
   140001e19:	call   QWORD PTR [rip+0x8649]        # 0x14000a468
   140001e1f:	cmp    QWORD PTR [rsp+0x48],rbx
   140001e24:	jbe    0x140001d9b
   140001e2a:	movsxd rcx,ebp
   140001e2d:	lea    rdx,[rip+0xc26c]        # 0x14000e0a0
   140001e34:	add    rcx,rcx
   140001e37:	mov    rcx,QWORD PTR [rdx+rcx*8+0x8]
   140001e3c:	mov    DWORD PTR [rcx],eax
   140001e3e:	jmp    0x140001eda
   140001e43:	lea    rbx,[rsi+r15*2]
   140001e47:	mov    rcx,rbx
   140001e4a:	call   QWORD PTR [rip+0x8240]        # 0x14000a090
   140001e50:	test   eax,eax
   140001e52:	jle    0x140001ec4
   140001e54:	lea    esi,[rax+0x1]
   140001e57:	mov    eax,0x2
   140001e5c:	movsxd r14,esi
   140001e5f:	mul    r14
   140001e62:	cmovo  rax,rdi
   140001e66:	mov    rcx,rax
   140001e69:	call   0x140008bd8
   140001e6e:	lea    rdx,[rip+0xc1ab]        # 0x14000e020
   140001e75:	movsxd r9,ebp
   140001e78:	add    r9,r9
   140001e7b:	mov    rcx,QWORD PTR [rdx+r9*8+0x8]
   140001e80:	mov    QWORD PTR [rcx],rax
   140001e83:	mov    rax,QWORD PTR [rdx+r9*8+0x8]
   140001e88:	mov    rcx,QWORD PTR [rax]
   140001e8b:	test   rcx,rcx
   140001e8e:	je     0x140001e9d
   140001e90:	mov    r8,rbx
   140001e93:	mov    rdx,r14
   140001e96:	call   0x140001038
   140001e9b:	jmp    0x140001eda
   140001e9d:	mov    rcx,QWORD PTR [rip+0xc2cc]        # 0x14000e170
   140001ea4:	lea    rax,[rip+0xc2c5]        # 0x14000e170
   140001eab:	cmp    rcx,rax
   140001eae:	je     0x140001edf
   140001eb0:	test   BYTE PTR [rcx+0x1c],0x2
   140001eb4:	je     0x140001edf
   140001eb6:	mov    rcx,QWORD PTR [rcx+0x10]
   140001eba:	mov    r9d,esi
   140001ebd:	call   0x1400015a4
   140001ec2:	jmp    0x140001edf
   140001ec4:	movsxd rax,ebp
   140001ec7:	lea    rcx,[rip+0xc152]        # 0x14000e020
   140001ece:	add    rax,rax
   140001ed1:	mov    rax,QWORD PTR [rcx+rax*8+0x8]
   140001ed6:	and    QWORD PTR [rax],0x0
   140001eda:	mov    edi,0x1
   140001edf:	mov    rbx,QWORD PTR [rsp+0x40]
   140001ee4:	mov    eax,edi
   140001ee6:	mov    rbp,QWORD PTR [rsp+0x50]
   140001eeb:	mov    rsi,QWORD PTR [rsp+0x58]
   140001ef0:	add    rsp,0x20
   140001ef4:	pop    r15
   140001ef6:	pop    r14
   140001ef8:	pop    rdi
   140001ef9:	ret    
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	mov    rax,rsp
   140001f03:	mov    QWORD PTR [rax+0x10],rbx
   140001f07:	mov    QWORD PTR [rax+0x18],rsi
   140001f0b:	mov    QWORD PTR [rax+0x20],rdi
   140001f0f:	push   rbp
   140001f10:	push   r12
   140001f12:	push   r13
   140001f14:	push   r14
   140001f16:	push   r15
   140001f18:	lea    rbp,[rax-0x38]
   140001f1c:	sub    rsp,0x110
   140001f23:	mov    rax,QWORD PTR [rip+0xc0de]        # 0x14000e008
   140001f2a:	xor    rax,rsp
   140001f2d:	mov    QWORD PTR [rbp+0x0],rax
   140001f31:	mov    esi,DWORD PTR [rip+0xd10d]        # 0x14000f044
   140001f37:	mov    r15,rcx
   140001f3a:	mov    r14d,esi
   140001f3d:	or     ecx,0xffffffff
   140001f40:	and    r14d,0x1
   140001f44:	and    esi,0x40
   140001f47:	call   QWORD PTR [rip+0x812b]        # 0x14000a078
   140001f4d:	xor    r12d,r12d
   140001f50:	mov    DWORD PTR [rsp+0x60],r12d
   140001f55:	call   0x140004b94
   140001f5a:	neg    eax
   140001f5c:	lea    r13,[rip+0xc20d]        # 0x14000e170
   140001f63:	lea    rbx,[rip+0x8d0e]        # 0x14000ac78
   140001f6a:	sbb    edi,edi
   140001f6c:	not    edi
   140001f6e:	and    edi,0x80004005
   140001f74:	jl     0x140002032
   140001f7a:	lea    rcx,[rsp+0x60]
   140001f7f:	call   0x140006b84
   140001f84:	mov    edi,eax
   140001f86:	test   eax,eax
   140001f88:	jns    0x140001fbf
   140001f8a:	mov    rcx,QWORD PTR [rip+0xc1df]        # 0x14000e170
   140001f91:	cmp    rcx,r13
   140001f94:	je     0x140001fad
   140001f96:	test   BYTE PTR [rcx+0x1c],0x2
   140001f9a:	je     0x140001fad
   140001f9c:	mov    rcx,QWORD PTR [rcx+0x10]
   140001fa0:	lea    edx,[r12+0xf]
   140001fa5:	mov    r8,rbx
   140001fa8:	call   0x1400011b0
   140001fad:	mov    rcx,QWORD PTR [rip+0xd0e4]        # 0x14000f098
   140001fb4:	xor    edx,edx
   140001fb6:	lea    r8d,[rdx+0x3]
   140001fba:	call   0x140004ae4
   140001fbf:	cmp    DWORD PTR [rsp+0x60],r12d
   140001fc4:	jne    0x140002000
   140001fc6:	mov    rcx,QWORD PTR [rip+0xc1a3]        # 0x14000e170
   140001fcd:	cmp    rcx,r13
   140001fd0:	je     0x140001fe9
   140001fd2:	test   BYTE PTR [rcx+0x1c],0x2
   140001fd6:	je     0x140001fe9
   140001fd8:	mov    rcx,QWORD PTR [rcx+0x10]
   140001fdc:	mov    edx,0x10
   140001fe1:	mov    r8,rbx
   140001fe4:	call   0x1400011b0
   140001fe9:	mov    rcx,QWORD PTR [rip+0xd0a8]        # 0x14000f098
   140001ff0:	xor    edx,edx
   140001ff2:	lea    r8d,[rdx+0x4]
   140001ff6:	call   0x140004ae4
   140001ffb:	mov    edi,0x80004005
   140002000:	test   edi,edi
   140002002:	js     0x140002032
   140002004:	call   0x140002524
   140002009:	mov    edi,eax
   14000200b:	test   eax,eax
   14000200d:	jns    0x140002032
   14000200f:	mov    rcx,QWORD PTR [rip+0xc15a]        # 0x14000e170
   140002016:	cmp    rcx,r13
   140002019:	je     0x140002032
   14000201b:	test   BYTE PTR [rcx+0x1c],0x2
   14000201f:	je     0x140002032
   140002021:	mov    rcx,QWORD PTR [rcx+0x10]
   140002025:	mov    edx,0x11
   14000202a:	mov    r8,rbx
   14000202d:	call   0x1400011b0
   140002032:	test   edi,edi
   140002034:	mov    ebx,r12d
   140002037:	mov    edi,0x1
   14000203c:	setns  bl
   14000203f:	cmp    ebx,edi
   140002041:	jne    0x140002209
   140002047:	test   r14d,r14d
   14000204a:	jne    0x140002081
   14000204c:	test   esi,esi
   14000204e:	je     0x140002059
   140002050:	cmp    QWORD PTR [rip+0xd061],r12        # 0x14000f0b8
   140002057:	je     0x140002081
   140002059:	mov    eax,DWORD PTR [rip+0xd089]        # 0x14000f0e8
   14000205f:	dec    eax
   140002061:	mov    QWORD PTR [rip+0xcfe0],r12        # 0x14000f048
   140002068:	mov    DWORD PTR [rip+0xcfe6],eax        # 0x14000f054
   14000206e:	mov    eax,DWORD PTR [rip+0xd078]        # 0x14000f0ec
   140002074:	dec    eax
   140002076:	mov    DWORD PTR [rip+0xcfd4],eax        # 0x14000f050
   14000207c:	jmp    0x140002101
   140002081:	mov    rcx,QWORD PTR [rip+0xd008]        # 0x14000f090
   140002088:	lea    rax,[rsp+0x60]
   14000208d:	mov    QWORD PTR [rsp+0x28],rax
   140002092:	xor    r9d,r9d
   140002095:	mov    r8d,edi
   140002098:	mov    DWORD PTR [rsp+0x20],r12d
   14000209d:	mov    edx,esi
   14000209f:	mov    DWORD PTR [rsp+0x60],r12d
   1400020a4:	call   0x14000593c
   1400020a9:	mov    QWORD PTR [rip+0xc0c8],rax        # 0x14000e178
   1400020b0:	cmp    rax,0xffffffffffffffff
   1400020b4:	je     0x14000217d
   1400020ba:	mov    rcx,QWORD PTR [rax+0x8]
   1400020be:	lea    rdx,[rip+0xcf83]        # 0x14000f048
   1400020c5:	call   0x140006320
   1400020ca:	test   eax,eax
   1400020cc:	je     0x140002140
   1400020ce:	mov    edx,DWORD PTR [rip+0xcf7c]        # 0x14000f050
   1400020d4:	mov    r8d,DWORD PTR [rip+0xcf79]        # 0x14000f054
   1400020db:	mov    eax,DWORD PTR [rip+0xd00b]        # 0x14000f0ec
   1400020e1:	mov    ecx,DWORD PTR [rip+0xd001]        # 0x14000f0e8
   1400020e7:	cmp    edx,r8d
   1400020ea:	jle    0x1400020f3
   1400020ec:	cmp    eax,ecx
   1400020ee:	jl     0x1400020f9
   1400020f0:	cmp    edx,r8d
   1400020f3:	jge    0x140002101
   1400020f5:	cmp    eax,ecx
   1400020f7:	jle    0x140002101
   1400020f9:	bts    DWORD PTR [rip+0xcf43],0x1f        # 0x14000f044
   140002101:	call   0x140002600
   140002106:	mov    ebx,eax
   140002108:	test   eax,eax
   14000210a:	jne    0x14000221d
   140002110:	mov    rcx,QWORD PTR [rip+0xc059]        # 0x14000e170
   140002117:	cmp    rcx,r13
   14000211a:	je     0x140002135
   14000211c:	test   BYTE PTR [rcx+0x1c],0x2
   140002120:	je     0x140002135
   140002122:	mov    rcx,QWORD PTR [rcx+0x10]
   140002126:	lea    edx,[rax+0x14]
   140002129:	lea    r8,[rip+0x8b48]        # 0x14000ac78
   140002130:	call   0x1400011b0
   140002135:	mov    r8d,0x7
   14000213b:	jmp    0x14000220f
   140002140:	mov    rcx,QWORD PTR [rip+0xc029]        # 0x14000e170
   140002147:	cmp    rcx,r13
   14000214a:	je     0x140002167
   14000214c:	test   BYTE PTR [rcx+0x1c],0x2
   140002150:	je     0x140002167
   140002152:	mov    rcx,QWORD PTR [rcx+0x10]
   140002156:	lea    r8,[rip+0x8b1b]        # 0x14000ac78
   14000215d:	mov    edx,0x12
   140002162:	call   0x1400011b0
   140002167:	mov    rcx,QWORD PTR [rip+0xcf2a]        # 0x14000f098
   14000216e:	mov    r8d,edi
   140002171:	xor    edx,edx
   140002173:	call   0x140004ae4
   140002178:	jmp    0x140002201
   14000217d:	cmp    DWORD PTR [rsp+0x60],r12d
   140002182:	je     0x1400021c9
   140002184:	mov    r8,QWORD PTR [rip+0xcf2d]        # 0x14000f0b8
   14000218b:	lea    rcx,[rbp-0x10]
   14000218f:	xor    eax,eax
   140002191:	mov    QWORD PTR [rbp-0x10],rax
   140002195:	mov    DWORD PTR [rbp-0x8],eax
   140002198:	lea    edx,[rax+0x6]
   14000219b:	call   0x140001038
   1400021a0:	cmp    eax,0x80070057
   1400021a5:	je     0x1400021b1
   1400021a7:	lea    rcx,[rbp-0x10]
   1400021ab:	call   QWORD PTR [rip+0x82af]        # 0x14000a460
   1400021b1:	mov    rcx,QWORD PTR [rip+0xcee0]        # 0x14000f098
   1400021b8:	lea    r9,[rbp-0x10]
   1400021bc:	xor    edx,edx
   1400021be:	lea    r8d,[rdx+0xb]
   1400021c2:	call   0x140004ae4
   1400021c7:	jmp    0x140002201
   1400021c9:	mov    rcx,QWORD PTR [rip+0xcec8]        # 0x14000f098
   1400021d0:	mov    r8d,edi
   1400021d3:	xor    edx,edx
   1400021d5:	call   0x140004ae4
   1400021da:	mov    rcx,QWORD PTR [rip+0xbf8f]        # 0x14000e170
   1400021e1:	cmp    rcx,r13
   1400021e4:	je     0x140002201
   1400021e6:	test   BYTE PTR [rcx+0x1c],0x4
   1400021ea:	je     0x140002201
   1400021ec:	mov    rcx,QWORD PTR [rcx+0x10]
   1400021f0:	lea    r8,[rip+0x8a81]        # 0x14000ac78
   1400021f7:	mov    edx,0x13
   1400021fc:	call   0x1400011b0
   140002201:	mov    ebx,r12d
   140002204:	jmp    0x140002463
   140002209:	mov    r8d,0x8
   14000220f:	mov    rcx,QWORD PTR [rip+0xce82]        # 0x14000f098
   140002216:	xor    edx,edx
   140002218:	call   0x140004ae4
   14000221d:	cmp    ebx,edi
   14000221f:	jne    0x140002463
   140002225:	test   DWORD PTR [rip+0xce15],0x100        # 0x14000f044
   14000222f:	jne    0x1400022af
   140002231:	cmp    QWORD PTR [rip+0xcea8],r12        # 0x14000f0e0
   140002238:	jne    0x1400022af
   14000223a:	call   QWORD PTR [rip+0x8110]        # 0x14000a350
   140002240:	mov    ecx,eax
   140002242:	call   QWORD PTR [rip+0x7fe0]        # 0x14000a228
   140002248:	xor    r9d,r9d
   14000224b:	mov    QWORD PTR [rsp+0x28],r12
   140002250:	xor    r8d,r8d
   140002253:	mov    QWORD PTR [rip+0xce86],rax        # 0x14000f0e0
   14000225a:	xor    edx,edx
   14000225c:	mov    DWORD PTR [rsp+0x20],0x10000000
   140002264:	lea    rcx,[rip+0x89dd]        # 0x14000ac48
   14000226b:	call   QWORD PTR [rip+0x7f2f]        # 0x14000a1a0
   140002271:	mov    QWORD PTR [rip+0xcdc0],rax        # 0x14000f038
   140002278:	test   rax,rax
   14000227b:	je     0x1400022af
   14000227d:	mov    rcx,rax
   140002280:	call   QWORD PTR [rip+0x7ed2]        # 0x14000a158
   140002286:	test   eax,eax
   140002288:	je     0x14000229b
   14000228a:	mov    rcx,QWORD PTR [rip+0xcda7]        # 0x14000f038
   140002291:	call   QWORD PTR [rip+0x7f89]        # 0x14000a220
   140002297:	test   eax,eax
   140002299:	jne    0x1400022af
   14000229b:	mov    rcx,QWORD PTR [rip+0xcd96]        # 0x14000f038
   1400022a2:	call   QWORD PTR [rip+0x7fd0]        # 0x14000a278
   1400022a8:	mov    QWORD PTR [rip+0xcd89],r12        # 0x14000f038
   1400022af:	mov    edi,0x50
   1400022b4:	lea    rcx,[rsp+0x70]
   1400022b9:	mov    r8d,edi
   1400022bc:	xor    edx,edx
   1400022be:	call   0x140009952
   1400022c3:	mov    rcx,QWORD PTR [rip+0xcdce]        # 0x14000f098
   1400022ca:	lea    rax,[rip+0x111f]        # 0x1400033f0
   1400022d1:	lea    edx,[rdi+0x14]
   1400022d4:	mov    QWORD PTR [rsp+0x78],rax
   1400022d9:	mov    QWORD PTR [rbp-0x78],rcx
   1400022dd:	mov    DWORD PTR [rsp+0x70],edi
   1400022e1:	mov    DWORD PTR [rsp+0x74],0x3
   1400022e9:	call   QWORD PTR [rip+0x7ee9]        # 0x14000a1d8
   1400022ef:	mov    rcx,QWORD PTR [rip+0xcda2]        # 0x14000f098
   1400022f6:	lea    edx,[rdi+0x78]
   1400022f9:	mov    QWORD PTR [rbp-0x70],rax
   1400022fd:	call   QWORD PTR [rip+0x7f4d]        # 0x14000a250
   140002303:	lea    rdi,[rip+0x8406]        # 0x14000a710
   14000230a:	mov    QWORD PTR [rbp-0x60],0x6
   140002312:	lea    rcx,[rsp+0x70]
   140002317:	mov    QWORD PTR [rbp-0x68],rax
   14000231b:	mov    QWORD PTR [rbp-0x50],rdi
   14000231f:	call   QWORD PTR [rip+0x7eab]        # 0x14000a1d0
   140002325:	cmp    r12w,ax
   140002329:	je     0x14000243c
   14000232f:	mov    rax,QWORD PTR [rip+0xcd62]        # 0x14000f098
   140002336:	lea    r8,[rip+0xcdc3]        # 0x14000f100
   14000233d:	mov    QWORD PTR [rsp+0x58],r12
   140002342:	mov    r9d,0x82000000
   140002348:	mov    QWORD PTR [rsp+0x50],rax
   14000234d:	mov    rdx,rdi
   140002350:	mov    eax,DWORD PTR [rip+0xcd92]        # 0x14000f0e8
   140002356:	mov    ecx,0x8
   14000235b:	mov    QWORD PTR [rsp+0x48],r12
   140002360:	mov    QWORD PTR [rsp+0x40],r12
   140002365:	mov    DWORD PTR [rsp+0x38],eax
   140002369:	mov    eax,DWORD PTR [rip+0xcd7d]        # 0x14000f0ec
   14000236f:	mov    DWORD PTR [rsp+0x30],eax
   140002373:	mov    eax,DWORD PTR [rip+0xce17]        # 0x14000f190
   140002379:	mov    DWORD PTR [rsp+0x28],eax
   14000237d:	mov    eax,DWORD PTR [rip+0xcd25]        # 0x14000f0a8
   140002383:	mov    DWORD PTR [rsp+0x20],eax
   140002387:	call   QWORD PTR [rip+0x7dc3]        # 0x14000a150
   14000238d:	mov    rdi,rax
   140002390:	test   rax,rax
   140002393:	je     0x1400023ea
   140002395:	mov    edx,0x1
   14000239a:	mov    rcx,rax
   14000239d:	call   QWORD PTR [rip+0x7e65]        # 0x14000a208
   1400023a3:	xor    r9d,r9d
   1400023a6:	xor    r8d,r8d
   1400023a9:	mov    edx,0x8001
   1400023ae:	mov    rcx,rdi
   1400023b1:	call   QWORD PTR [rip+0x7e89]        # 0x14000a240
   1400023b7:	jmp    0x1400023d2
   1400023b9:	cmp    eax,0xffffffff
   1400023bc:	je     0x140002426
   1400023be:	lea    rcx,[rbp-0x40]
   1400023c2:	call   QWORD PTR [rip+0x7d50]        # 0x14000a118
   1400023c8:	lea    rcx,[rbp-0x40]
   1400023cc:	call   QWORD PTR [rip+0x7d96]        # 0x14000a168
   1400023d2:	xor    r9d,r9d
   1400023d5:	lea    rcx,[rbp-0x40]
   1400023d9:	xor    r8d,r8d
   1400023dc:	xor    edx,edx
   1400023de:	call   QWORD PTR [rip+0x7dd4]        # 0x14000a1b8
   1400023e4:	test   eax,eax
   1400023e6:	jne    0x1400023b9
   1400023e8:	jmp    0x140002426
   1400023ea:	mov    rcx,QWORD PTR [rip+0xcca7]        # 0x14000f098
   1400023f1:	xor    edx,edx
   1400023f3:	lea    r8d,[rdx+0x1]
   1400023f7:	call   0x140004ae4
   1400023fc:	mov    rcx,QWORD PTR [rip+0xbd6d]        # 0x14000e170
   140002403:	cmp    rcx,r13
   140002406:	je     0x140002423
   140002408:	test   BYTE PTR [rcx+0x1c],0x2
   14000240c:	je     0x140002423
   14000240e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002412:	lea    r8,[rip+0x885f]        # 0x14000ac78
   140002419:	mov    edx,0x15
   14000241e:	call   0x1400011b0
   140002423:	mov    ebx,r12d
   140002426:	mov    rdx,QWORD PTR [rip+0xcc6b]        # 0x14000f098
   14000242d:	lea    rcx,[rip+0x82dc]        # 0x14000a710
   140002434:	call   QWORD PTR [rip+0x7dfe]        # 0x14000a238
   14000243a:	jmp    0x140002463
   14000243c:	mov    rcx,QWORD PTR [rip+0xbd2d]        # 0x14000e170
   140002443:	cmp    rcx,r13
   140002446:	je     0x140002463
   140002448:	test   BYTE PTR [rcx+0x1c],0x2
   14000244c:	je     0x140002463
   14000244e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002452:	lea    r8,[rip+0x881f]        # 0x14000ac78
   140002459:	mov    edx,0x16
   14000245e:	call   0x1400011b0
   140002463:	mov    rcx,QWORD PTR [rip+0xc2ee]        # 0x14000e758
   14000246a:	test   rcx,rcx
   14000246d:	je     0x14000247c
   14000246f:	call   QWORD PTR [rip+0x7c73]        # 0x14000a0e8
   140002475:	mov    QWORD PTR [rip+0xc2dc],r12        # 0x14000e758
   14000247c:	mov    rcx,QWORD PTR [rip+0xcbe5]        # 0x14000f068
   140002483:	test   rcx,rcx
   140002486:	je     0x140002495
   140002488:	call   QWORD PTR [rip+0x7fba]        # 0x14000a448
   14000248e:	mov    QWORD PTR [rip+0xcbd3],r12        # 0x14000f068
   140002495:	test   r14d,r14d
   140002498:	jne    0x14000249e
   14000249a:	test   esi,esi
   14000249c:	je     0x1400024c9
   14000249e:	mov    rdi,QWORD PTR [rip+0xbcd3]        # 0x14000e178
   1400024a5:	cmp    rdi,0xffffffffffffffff
   1400024a9:	je     0x1400024c9
   1400024ab:	mov    rcx,rdi
   1400024ae:	call   0x1400062cc
   1400024b3:	test   rdi,rdi
   1400024b6:	je     0x1400024c1
   1400024b8:	mov    rcx,rdi
   1400024bb:	call   QWORD PTR [rip+0x7f87]        # 0x14000a448
   1400024c1:	or     QWORD PTR [rip+0xbcaf],0xffffffffffffffff        # 0x14000e178
   1400024c9:	cmp    QWORD PTR [rip+0xcb68],r12        # 0x14000f038
   1400024d0:	je     0x1400024ec
   1400024d2:	mov    rcx,QWORD PTR [rip+0xcc07]        # 0x14000f0e0
   1400024d9:	call   QWORD PTR [rip+0x7d41]        # 0x14000a220
   1400024df:	mov    rcx,QWORD PTR [rip+0xcb52]        # 0x14000f038
   1400024e6:	call   QWORD PTR [rip+0x7d8c]        # 0x14000a278
   1400024ec:	mov    DWORD PTR [r15],ebx
   1400024ef:	xor    eax,eax
   1400024f1:	mov    rcx,QWORD PTR [rbp+0x0]
   1400024f5:	xor    rcx,rsp
   1400024f8:	call   0x140009020
   1400024fd:	lea    r11,[rsp+0x110]
   140002505:	mov    rbx,QWORD PTR [r11+0x38]
   140002509:	mov    rsi,QWORD PTR [r11+0x40]
   14000250d:	mov    rdi,QWORD PTR [r11+0x48]
   140002511:	mov    rsp,r11
   140002514:	pop    r15
   140002516:	pop    r14
   140002518:	pop    r13
   14000251a:	pop    r12
   14000251c:	pop    rbp
   14000251d:	ret    
   14000251e:	int3   
   14000251f:	int3   
   140002520:	int3   
   140002521:	int3   
   140002522:	int3   
   140002523:	int3   
   140002524:	rex push rbx
   140002526:	sub    rsp,0x60
   14000252a:	mov    rax,QWORD PTR [rip+0xbad7]        # 0x14000e008
   140002531:	xor    rax,rsp
   140002534:	mov    QWORD PTR [rsp+0x50],rax
   140002539:	lea    rcx,[rip+0xc218]        # 0x14000e758
   140002540:	call   QWORD PTR [rip+0x7baa]        # 0x14000a0f0
   140002546:	mov    ebx,eax
   140002548:	test   eax,eax
   14000254a:	js     0x1400025ca
   14000254c:	movdqa xmm0,XMMWORD PTR [rip+0x8cac]        # 0x14000b200
   140002554:	lea    r8,[rsp+0x20]
   140002559:	movdqa xmm1,XMMWORD PTR [rip+0x8caf]        # 0x14000b210
   140002561:	mov    edx,0x6
   140002566:	mov    rcx,QWORD PTR [rip+0xc1eb]        # 0x14000e758
   14000256d:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140002573:	movdqa xmm0,XMMWORD PTR [rip+0x8c75]        # 0x14000b1f0
   14000257b:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140002581:	movdqu XMMWORD PTR [rsp+0x30],xmm1
   140002587:	call   QWORD PTR [rip+0x7b53]        # 0x14000a0e0
   14000258d:	mov    ebx,eax
   14000258f:	test   eax,eax
   140002591:	js     0x1400025ca
   140002593:	mov    rcx,QWORD PTR [rip+0xc1be]        # 0x14000e758
   14000259a:	xor    r8d,r8d
   14000259d:	lea    edx,[r8+0x3]
   1400025a1:	call   QWORD PTR [rip+0x7b21]        # 0x14000a0c8
   1400025a7:	mov    ebx,eax
   1400025a9:	test   eax,eax
   1400025ab:	js     0x1400025ca
   1400025ad:	mov    rcx,QWORD PTR [rip+0xc1a4]        # 0x14000e758
   1400025b4:	lea    rdx,[rip+0x16c5]        # 0x140003c80
   1400025bb:	xor    r8d,r8d
   1400025be:	call   QWORD PTR [rip+0x7b0c]        # 0x14000a0d0
   1400025c4:	mov    ebx,eax
   1400025c6:	test   eax,eax
   1400025c8:	jns    0x1400025e4
   1400025ca:	mov    rcx,QWORD PTR [rip+0xc187]        # 0x14000e758
   1400025d1:	test   rcx,rcx
   1400025d4:	je     0x1400025e4
   1400025d6:	call   QWORD PTR [rip+0x7b0c]        # 0x14000a0e8
   1400025dc:	and    QWORD PTR [rip+0xc174],0x0        # 0x14000e758
   1400025e4:	mov    eax,ebx
   1400025e6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400025eb:	xor    rcx,rsp
   1400025ee:	call   0x140009020
   1400025f3:	add    rsp,0x60
   1400025f7:	pop    rbx
   1400025f8:	ret    
   1400025f9:	int3   
   1400025fa:	int3   
   1400025fb:	int3   
   1400025fc:	int3   
   1400025fd:	int3   
   1400025fe:	int3   
   1400025ff:	int3   
   140002600:	rex push rbp
   140002602:	push   rbx
   140002603:	push   rsi
   140002604:	push   rdi
   140002605:	push   r12
   140002607:	push   r13
   140002609:	push   r14
   14000260b:	push   r15
   14000260d:	mov    rbp,rsp
   140002610:	sub    rsp,0x58
   140002614:	mov    r12d,DWORD PTR [rip+0xca29]        # 0x14000f044
   14000261b:	xor    r13d,r13d
   14000261e:	mov    eax,r12d
   140002621:	mov    QWORD PTR [rbp-0x18],r13
   140002625:	mov    r10d,0x1
   14000262b:	shr    r12d,0x6
   14000262f:	and    eax,r10d
   140002632:	mov    QWORD PTR [rbp-0x10],r13
   140002636:	and    r12d,r10d
   140002639:	mov    DWORD PTR [rbp+0x58],eax
   14000263c:	mov    ebx,r13d
   14000263f:	mov    edi,r10d
   140002642:	mov    QWORD PTR [rbp+0x60],rbx
   140002646:	mov    esi,r13d
   140002649:	test   eax,eax
   14000264b:	je     0x1400028bd
   140002651:	mov    rcx,QWORD PTR [rip+0xca78]        # 0x14000f0d0
   140002658:	mov    r14d,r13d
   14000265b:	mov    QWORD PTR [rbp+0x48],r13
   14000265f:	test   rcx,rcx
   140002662:	je     0x140002743
   140002668:	cmp    QWORD PTR [rip+0xca69],r13        # 0x14000f0d8
   14000266f:	je     0x14000281c
   140002675:	mov    r9d,DWORD PTR [rip+0xca70]        # 0x14000f0ec
   14000267c:	lea    r8,[rbp+0x48]
   140002680:	lea    rdx,[rbp+0x60]
   140002684:	call   0x140002d28
   140002689:	mov    edi,eax
   14000268b:	lea    eax,[r13+0x1]
   14000268f:	cmp    edi,eax
   140002691:	jne    0x1400026ea
   140002693:	mov    r9d,DWORD PTR [rip+0xca4e]        # 0x14000f0e8
   14000269a:	lea    r8,[rbp+0x50]
   14000269e:	mov    rcx,QWORD PTR [rip+0xca33]        # 0x14000f0d8
   1400026a5:	lea    rdx,[rbp-0x10]
   1400026a9:	call   0x140002d28
   1400026ae:	mov    rsi,QWORD PTR [rbp-0x10]
   1400026b2:	lea    r10d,[r13+0x1]
   1400026b6:	mov    rbx,QWORD PTR [rbp+0x60]
   1400026ba:	mov    edi,eax
   1400026bc:	mov    QWORD PTR [rbp-0x18],rsi
   1400026c0:	cmp    eax,r10d
   1400026c3:	jne    0x1400026ee
   1400026c5:	mov    eax,DWORD PTR [rbp+0x48]
   1400026c8:	mov    DWORD PTR [rip+0xcab2],eax        # 0x14000f180
   1400026ce:	mov    eax,DWORD PTR [rbp+0x50]
   1400026d1:	mov    DWORD PTR [rip+0xc9a9],eax        # 0x14000f080
   1400026d7:	mov    QWORD PTR [rip+0xc9aa],rbx        # 0x14000f088
   1400026de:	mov    QWORD PTR [rip+0xc9cb],rsi        # 0x14000f0b0
   1400026e5:	jmp    0x140002828
   1400026ea:	mov    rbx,QWORD PTR [rbp+0x60]
   1400026ee:	test   rbx,rbx
   1400026f1:	je     0x1400026ff
   1400026f3:	mov    rcx,rbx
   1400026f6:	call   QWORD PTR [rip+0x7d4c]        # 0x14000a448
   1400026fc:	mov    rbx,r13
   1400026ff:	test   rsi,rsi
   140002702:	je     0x140002714
   140002704:	mov    rcx,rsi
   140002707:	call   QWORD PTR [rip+0x7d3b]        # 0x14000a448
   14000270d:	mov    rsi,r13
   140002710:	mov    QWORD PTR [rbp-0x18],r13
   140002714:	mov    r14d,DWORD PTR [rip+0xc9cd]        # 0x14000f0e8
   14000271b:	mov    r10d,0x1
   140002721:	mov    r15d,DWORD PTR [rip+0xc9c4]        # 0x14000f0ec
   140002728:	mov    r8d,DWORD PTR [rip+0xc999]        # 0x14000f0c8
   14000272f:	mov    r11d,DWORD PTR [rip+0xc996]        # 0x14000f0cc
   140002736:	test   edi,edi
   140002738:	je     0x140002a19
   14000273e:	jmp    0x1400028de
   140002743:	cmp    QWORD PTR [rip+0xc98e],r13        # 0x14000f0d8
   14000274a:	jne    0x14000281c
   140002750:	mov    r8d,DWORD PTR [rip+0xc971]        # 0x14000f0c8
   140002757:	mov    r11d,DWORD PTR [rip+0xc96e]        # 0x14000f0cc
   14000275e:	test   r8d,r8d
   140002761:	jne    0x140002809
   140002767:	test   r11d,r11d
   14000276a:	jne    0x1400027f6
   140002770:	lea    rax,[rbp+0x48]
   140002774:	mov    rcx,0xffffffff80000002
   14000277b:	mov    QWORD PTR [rsp+0x30],rax
   140002780:	lea    r8,[rip+0x81a1]        # 0x14000a928
   140002787:	lea    rax,[rbp+0x60]
   14000278b:	lea    rdx,[rip+0x81ae]        # 0x14000a940
   140002792:	mov    QWORD PTR [rsp+0x20],rax
   140002797:	call   0x140003124
   14000279c:	mov    rbx,QWORD PTR [rbp+0x48]
   1400027a0:	test   eax,eax
   1400027a2:	jne    0x1400027d6
   1400027a4:	lea    rax,[rbp-0x10]
   1400027a8:	mov    QWORD PTR [rsp+0x30],r13
   1400027ad:	lea    r8,[rip+0x81fc]        # 0x14000a9b0
   1400027b4:	mov    QWORD PTR [rsp+0x20],rax
   1400027b9:	xor    edx,edx
   1400027bb:	mov    rcx,rbx
   1400027be:	call   0x140003124
   1400027c3:	mov    rsi,QWORD PTR [rbp-0x10]
   1400027c7:	test   eax,eax
   1400027c9:	mov    r10d,edi
   1400027cc:	mov    QWORD PTR [rbp-0x18],rsi
   1400027d0:	cmove  r14d,edi
   1400027d4:	jmp    0x1400027d9
   1400027d6:	mov    r10d,edi
   1400027d9:	test   rbx,rbx
   1400027dc:	je     0x1400027f0
   1400027de:	mov    rcx,rbx
   1400027e1:	call   QWORD PTR [rip+0x7bd9]        # 0x14000a3c0
   1400027e7:	mov    rbx,QWORD PTR [rbp+0x60]
   1400027eb:	mov    r10d,edi
   1400027ee:	jmp    0x14000281f
   1400027f0:	mov    rbx,QWORD PTR [rbp+0x60]
   1400027f4:	jmp    0x14000281f
   1400027f6:	mov    r15d,DWORD PTR [rip+0xc8ef]        # 0x14000f0ec
   1400027fd:	mov    r14d,DWORD PTR [rip+0xc8e4]        # 0x14000f0e8
   140002804:	jmp    0x1400028f1
   140002809:	mov    r15d,DWORD PTR [rip+0xc8dc]        # 0x14000f0ec
   140002810:	mov    r14d,DWORD PTR [rip+0xc8d1]        # 0x14000f0e8
   140002817:	jmp    0x1400028fc
   14000281c:	mov    edi,r13d
   14000281f:	test   r14d,r14d
   140002822:	je     0x1400026ee
   140002828:	mov    eax,DWORD PTR [rbx]
   14000282a:	mov    r9d,r10d
   14000282d:	mov    r15d,DWORD PTR [rip+0xc8b8]        # 0x14000f0ec
   140002834:	mov    r8d,r15d
   140002837:	mov    DWORD PTR [rip+0xc81b],eax        # 0x14000f058
   14000283d:	mov    eax,DWORD PTR [rsi]
   14000283f:	mov    DWORD PTR [rip+0xc817],eax        # 0x14000f05c
   140002845:	mov    DWORD PTR [rip+0xc87c],r15d        # 0x14000f0c8
   14000284c:	cmp    DWORD PTR [rbx],r10d
   14000284f:	jbe    0x140002876
   140002851:	mov    eax,r9d
   140002854:	lea    ecx,[r9-0x1]
   140002858:	mov    edx,DWORD PTR [rbx+rax*4+0x4]
   14000285c:	sub    edx,DWORD PTR [rbx+rcx*4+0x4]
   140002860:	cmp    r8d,edx
   140002863:	cmovge r8d,edx
   140002867:	add    r9d,r10d
   14000286a:	mov    DWORD PTR [rip+0xc857],r8d        # 0x14000f0c8
   140002871:	cmp    r9d,DWORD PTR [rbx]
   140002874:	jb     0x140002851
   140002876:	mov    r14d,DWORD PTR [rip+0xc86b]        # 0x14000f0e8
   14000287d:	mov    r9d,r10d
   140002880:	mov    DWORD PTR [rip+0xc845],r14d        # 0x14000f0cc
   140002887:	mov    r11d,r14d
   14000288a:	cmp    DWORD PTR [rsi],r10d
   14000288d:	jbe    0x140002736
   140002893:	mov    eax,r9d
   140002896:	lea    ecx,[r9-0x1]
   14000289a:	mov    edx,DWORD PTR [rsi+rax*4+0x4]
   14000289e:	sub    edx,DWORD PTR [rsi+rcx*4+0x4]
   1400028a2:	cmp    r11d,edx
   1400028a5:	cmovge r11d,edx
   1400028a9:	add    r9d,r10d
   1400028ac:	mov    DWORD PTR [rip+0xc819],r11d        # 0x14000f0cc
   1400028b3:	cmp    r9d,DWORD PTR [rsi]
   1400028b6:	jb     0x140002893
   1400028b8:	jmp    0x140002736
   1400028bd:	mov    r11d,DWORD PTR [rip+0xc808]        # 0x14000f0cc
   1400028c4:	mov    r8d,DWORD PTR [rip+0xc7fd]        # 0x14000f0c8
   1400028cb:	mov    r15d,DWORD PTR [rip+0xc81a]        # 0x14000f0ec
   1400028d2:	mov    r14d,DWORD PTR [rip+0xc80f]        # 0x14000f0e8
   1400028d9:	test   r12d,r12d
   1400028dc:	je     0x1400028ec
   1400028de:	test   rbx,rbx
   1400028e1:	je     0x1400028ec
   1400028e3:	test   rsi,rsi
   1400028e6:	jne    0x1400029b2
   1400028ec:	test   r8d,r8d
   1400028ef:	jne    0x1400028fc
   1400028f1:	lea    r8d,[r15-0x50]
   1400028f5:	mov    DWORD PTR [rip+0xc7cc],r8d        # 0x14000f0c8
   1400028fc:	test   r11d,r11d
   1400028ff:	jne    0x14000290c
   140002901:	lea    r11d,[r14-0x50]
   140002905:	mov    DWORD PTR [rip+0xc7c0],r11d        # 0x14000f0cc
   14000290c:	cmp    r8d,r15d
   14000290f:	jge    0x1400029af
   140002915:	cmp    r11d,r14d
   140002918:	jge    0x1400029af
   14000291e:	mov    eax,r15d
   140002921:	cdq    
   140002922:	idiv   r8d
   140002925:	mov    DWORD PTR [rip+0xc72d],eax        # 0x14000f058
   14000292b:	mov    ecx,edx
   14000292d:	mov    eax,r14d
   140002930:	cdq    
   140002931:	idiv   r11d
   140002934:	mov    DWORD PTR [rip+0xc722],eax        # 0x14000f05c
   14000293a:	test   ecx,ecx
   14000293c:	je     0x140002945
   14000293e:	add    DWORD PTR [rip+0xc713],r10d        # 0x14000f058
   140002945:	test   edx,edx
   140002947:	je     0x140002950
   140002949:	add    DWORD PTR [rip+0xc70c],r10d        # 0x14000f05c
   140002950:	mov    r10d,DWORD PTR [rip+0xc701]        # 0x14000f058
   140002957:	mov    edi,0x1
   14000295c:	dec    r10d
   14000295f:	mov    eax,r15d
   140002962:	imul   r10d,r8d
   140002966:	mov    r8d,DWORD PTR [rip+0xc6ef]        # 0x14000f05c
   14000296d:	dec    r8d
   140002970:	imul   r8d,r11d
   140002974:	sub    eax,r10d
   140002977:	sub    eax,edi
   140002979:	cdq    
   14000297a:	sub    eax,edx
   14000297c:	sar    eax,1
   14000297e:	mov    DWORD PTR [rip+0xc6ec],eax        # 0x14000f070
   140002984:	lea    ecx,[r10+rax*1]
   140002988:	mov    eax,r14d
   14000298b:	sub    eax,r8d
   14000298e:	mov    DWORD PTR [rip+0xc6e4],ecx        # 0x14000f078
   140002994:	sub    eax,edi
   140002996:	mov    r10d,edi
   140002999:	cdq    
   14000299a:	sub    eax,edx
   14000299c:	sar    eax,1
   14000299e:	mov    DWORD PTR [rip+0xc6d0],eax        # 0x14000f074
   1400029a4:	add    eax,r8d
   1400029a7:	mov    DWORD PTR [rip+0xc6cf],eax        # 0x14000f07c
   1400029ad:	jmp    0x1400029b6
   1400029af:	mov    edi,r13d
   1400029b2:	test   edi,edi
   1400029b4:	je     0x140002a19
   1400029b6:	test   r12d,r12d
   1400029b9:	je     0x140002a19
   1400029bb:	or     DWORD PTR [rip+0xc682],0x8        # 0x14000f044
   1400029c2:	mov    eax,0x28
   1400029c7:	mov    DWORD PTR [rip+0xc6fb],eax        # 0x14000f0c8
   1400029cd:	mov    DWORD PTR [rip+0xc6f9],eax        # 0x14000f0cc
   1400029d3:	cmp    r15d,eax
   1400029d6:	jle    0x140002a16
   1400029d8:	cmp    r14d,eax
   1400029db:	jle    0x140002a16
   1400029dd:	lea    ecx,[rax-0x1e]
   1400029e0:	mov    DWORD PTR [rip+0xc66e],0x4        # 0x14000f058
   1400029ea:	lea    eax,[r15-0xa]
   1400029ee:	mov    DWORD PTR [rip+0xc67c],ecx        # 0x14000f070
   1400029f4:	mov    DWORD PTR [rip+0xc67e],eax        # 0x14000f078
   1400029fa:	lea    eax,[r14-0xa]
   1400029fe:	mov    DWORD PTR [rip+0xc678],eax        # 0x14000f07c
   140002a04:	mov    DWORD PTR [rip+0xc66a],ecx        # 0x14000f074
   140002a0a:	mov    DWORD PTR [rip+0xc648],0x4        # 0x14000f05c
   140002a14:	jmp    0x140002a22
   140002a16:	mov    edi,r13d
   140002a19:	cmp    edi,r10d
   140002a1c:	jne    0x140002ceb
   140002a22:	mov    r9d,DWORD PTR [rip+0xc62f]        # 0x14000f058
   140002a29:	or     r8d,0xffffffff
   140002a2d:	mov    ecx,DWORD PTR [rip+0xc629]        # 0x14000f05c
   140002a33:	xor    edx,edx
   140002a35:	mov    eax,r8d
   140002a38:	mov    edi,r13d
   140002a3b:	div    r9d
   140002a3e:	cmp    ecx,eax
   140002a40:	jae    0x140002ceb
   140002a46:	imul   ecx,r9d
   140002a4a:	xor    edx,edx
   140002a4c:	mov    eax,r8d
   140002a4f:	div    ecx
   140002a51:	cmp    eax,0x14
   140002a54:	jbe    0x140002ceb
   140002a5a:	lea    r13d,[rcx+rcx*4]
   140002a5e:	shl    r13d,0x2
   140002a62:	movsxd rax,r13d
   140002a65:	mov    rcx,rax
   140002a68:	mov    QWORD PTR [rbp+0x48],rax
   140002a6c:	call   QWORD PTR [rip+0x79e6]        # 0x14000a458
   140002a72:	mov    QWORD PTR [rip+0xc5ef],rax        # 0x14000f068
   140002a79:	test   rax,rax
   140002a7c:	je     0x140002cba
   140002a82:	mov    r8,QWORD PTR [rbp+0x48]
   140002a86:	xor    edx,edx
   140002a88:	mov    rcx,rax
   140002a8b:	call   0x140009952
   140002a90:	cmp    DWORD PTR [rbp+0x58],edi
   140002a93:	je     0x140002b23
   140002a99:	test   rbx,rbx
   140002a9c:	je     0x140002b23
   140002aa2:	test   rsi,rsi
   140002aa5:	je     0x140002b23
   140002aa7:	mov    ecx,DWORD PTR [rip+0xc5af]        # 0x14000f05c
   140002aad:	xor    r8d,r8d
   140002ab0:	test   ecx,ecx
   140002ab2:	jle    0x140002cb3
   140002ab8:	mov    eax,DWORD PTR [rip+0xc59a]        # 0x14000f058
   140002abe:	lea    r9,[rsi+0x4]
   140002ac2:	lea    esi,[r8+0x1]
   140002ac6:	xor    r10d,r10d
   140002ac9:	test   eax,eax
   140002acb:	jle    0x140002b12
   140002acd:	lea    r11,[rbx+0x4]
   140002ad1:	mov    ecx,DWORD PTR [r11]
   140002ad4:	lea    r11,[r11+0x4]
   140002ad8:	imul   eax,r8d
   140002adc:	add    eax,r10d
   140002adf:	add    r10d,esi
   140002ae2:	cdqe   
   140002ae4:	lea    rdx,[rax+rax*4]
   140002ae8:	mov    rax,QWORD PTR [rip+0xc579]        # 0x14000f068
   140002aef:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
   140002af3:	mov    rax,QWORD PTR [rip+0xc56e]        # 0x14000f068
   140002afa:	mov    ecx,DWORD PTR [r9]
   140002afd:	mov    DWORD PTR [rax+rdx*4+0x8],ecx
   140002b01:	mov    eax,DWORD PTR [rip+0xc551]        # 0x14000f058
   140002b07:	cmp    r10d,eax
   140002b0a:	jl     0x140002ad1
   140002b0c:	mov    ecx,DWORD PTR [rip+0xc54a]        # 0x14000f05c
   140002b12:	add    r8d,esi
   140002b15:	add    r9,0x4
   140002b19:	cmp    r8d,ecx
   140002b1c:	jl     0x140002ac6
   140002b1e:	jmp    0x140002caf
   140002b23:	test   r12d,r12d
   140002b26:	je     0x140002c2f
   140002b2c:	mov    eax,DWORD PTR [rip+0xc596]        # 0x14000f0c8
   140002b32:	xor    r11d,r11d
   140002b35:	mov    r12d,DWORD PTR [rip+0xc590]        # 0x14000f0cc
   140002b3c:	xor    r9d,r9d
   140002b3f:	mov    edi,DWORD PTR [rip+0xc517]        # 0x14000f05c
   140002b45:	xor    edx,edx
   140002b47:	lea    eax,[rax*2+0x14]
   140002b4e:	sub    r15d,eax
   140002b51:	lea    eax,[r12*2+0x14]
   140002b59:	sub    r14d,eax
   140002b5c:	test   edi,edi
   140002b5e:	jle    0x140002cb3
   140002b64:	mov    ecx,DWORD PTR [rip+0xc4ee]        # 0x14000f058
   140002b6a:	lea    r10d,[r11+r12*1]
   140002b6e:	test   edx,edx
   140002b70:	je     0x140002b8a
   140002b72:	mov    eax,edx
   140002b74:	and    eax,0x80000001
   140002b79:	jge    0x140002b82
   140002b7b:	dec    eax
   140002b7d:	or     eax,0xfffffffe
   140002b80:	inc    eax
   140002b82:	test   eax,eax
   140002b84:	jne    0x140002b8a
   140002b86:	lea    r10d,[r11+r14*1]
   140002b8a:	xor    r8d,r8d
   140002b8d:	mov    r13d,r11d
   140002b90:	mov    r11d,r10d
   140002b93:	test   ecx,ecx
   140002b95:	jle    0x140002c20
   140002b9b:	lea    edi,[r8+0x1]
   140002b9f:	imul   ecx,edx
   140002ba2:	add    ecx,r8d
   140002ba5:	cmp    ecx,0x4
   140002ba8:	jge    0x140002bb1
   140002baa:	lea    r10d,[r13+0xa]
   140002bae:	mov    r11d,r10d
   140002bb1:	test   r8d,r8d
   140002bb4:	je     0x140002bd0
   140002bb6:	mov    eax,r8d
   140002bb9:	and    eax,0x80000001
   140002bbe:	jge    0x140002bc7
   140002bc0:	sub    eax,edi
   140002bc2:	or     eax,0xfffffffe
   140002bc5:	add    eax,edi
   140002bc7:	test   eax,eax
   140002bc9:	jne    0x140002bd0
   140002bcb:	add    r9d,r15d
   140002bce:	jmp    0x140002bed
   140002bd0:	mov    eax,ecx
   140002bd2:	and    eax,0x80000003
   140002bd7:	jge    0x140002be0
   140002bd9:	sub    eax,edi
   140002bdb:	or     eax,0xfffffffc
   140002bde:	add    eax,edi
   140002be0:	test   eax,eax
   140002be2:	jne    0x140002bea
   140002be4:	lea    r9d,[rax+0xa]
   140002be8:	jmp    0x140002bed
   140002bea:	add    r9d,r12d
   140002bed:	movsxd rax,ecx
   140002bf0:	add    r8d,edi
   140002bf3:	lea    rcx,[rax+rax*4]
   140002bf7:	mov    rax,QWORD PTR [rip+0xc46a]        # 0x14000f068
   140002bfe:	mov    DWORD PTR [rax+rcx*4+0x4],r9d
   140002c03:	mov    rax,QWORD PTR [rip+0xc45e]        # 0x14000f068
   140002c0a:	mov    DWORD PTR [rax+rcx*4+0x8],r10d
   140002c0f:	mov    ecx,DWORD PTR [rip+0xc443]        # 0x14000f058
   140002c15:	cmp    r8d,ecx
   140002c18:	jl     0x140002b9f
   140002c1a:	mov    edi,DWORD PTR [rip+0xc43c]        # 0x14000f05c
   140002c20:	inc    edx
   140002c22:	cmp    edx,edi
   140002c24:	jl     0x140002b6a
   140002c2a:	jmp    0x140002cb3
   140002c2f:	mov    ecx,DWORD PTR [rip+0xc427]        # 0x14000f05c
   140002c35:	xor    r8d,r8d
   140002c38:	test   ecx,ecx
   140002c3a:	jle    0x140002cb3
   140002c3c:	mov    eax,DWORD PTR [rip+0xc416]        # 0x14000f058
   140002c42:	lea    esi,[r8+0x1]
   140002c46:	mov    r9d,DWORD PTR [rip+0xc47f]        # 0x14000f0cc
   140002c4d:	xor    r10d,r10d
   140002c50:	imul   r9d,r8d
   140002c54:	add    r9d,DWORD PTR [rip+0xc419]        # 0x14000f074
   140002c5b:	test   eax,eax
   140002c5d:	jle    0x140002ca7
   140002c5f:	mov    ecx,DWORD PTR [rip+0xc463]        # 0x14000f0c8
   140002c65:	imul   eax,r8d
   140002c69:	imul   ecx,r10d
   140002c6d:	add    eax,r10d
   140002c70:	add    r10d,esi
   140002c73:	add    ecx,DWORD PTR [rip+0xc3f7]        # 0x14000f070
   140002c79:	cdqe   
   140002c7b:	lea    rdx,[rax+rax*4]
   140002c7f:	mov    rax,QWORD PTR [rip+0xc3e2]        # 0x14000f068
   140002c86:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
   140002c8a:	mov    rax,QWORD PTR [rip+0xc3d7]        # 0x14000f068
   140002c91:	mov    DWORD PTR [rax+rdx*4+0x8],r9d
   140002c96:	mov    eax,DWORD PTR [rip+0xc3bc]        # 0x14000f058
   140002c9c:	cmp    r10d,eax
   140002c9f:	jl     0x140002c5f
   140002ca1:	mov    ecx,DWORD PTR [rip+0xc3b5]        # 0x14000f05c
   140002ca7:	add    r8d,esi
   140002caa:	cmp    r8d,ecx
   140002cad:	jl     0x140002c46
   140002caf:	mov    rsi,QWORD PTR [rbp-0x18]
   140002cb3:	mov    edi,0x1
   140002cb8:	jmp    0x140002ceb
   140002cba:	mov    rcx,QWORD PTR [rip+0xb4af]        # 0x14000e170
   140002cc1:	lea    rax,[rip+0xb4a8]        # 0x14000e170
   140002cc8:	cmp    rcx,rax
   140002ccb:	je     0x140002ceb
   140002ccd:	test   BYTE PTR [rcx+0x1c],0x2
   140002cd1:	je     0x140002ceb
   140002cd3:	mov    rcx,QWORD PTR [rcx+0x10]
   140002cd7:	lea    r8,[rip+0x7f9a]        # 0x14000ac78
   140002cde:	mov    edx,0x17
   140002ce3:	mov    r9d,r13d
   140002ce6:	call   0x1400011d4
   140002ceb:	cmp    rbx,QWORD PTR [rip+0xc396]        # 0x14000f088
   140002cf2:	je     0x140002cfd
   140002cf4:	mov    rcx,rbx
   140002cf7:	call   QWORD PTR [rip+0x774b]        # 0x14000a448
   140002cfd:	cmp    rsi,QWORD PTR [rip+0xc3ac]        # 0x14000f0b0
   140002d04:	je     0x140002d0f
   140002d06:	mov    rcx,rsi
   140002d09:	call   QWORD PTR [rip+0x7739]        # 0x14000a448
   140002d0f:	mov    eax,edi
   140002d11:	add    rsp,0x58
   140002d15:	pop    r15
   140002d17:	pop    r14
   140002d19:	pop    r13
   140002d1b:	pop    r12
   140002d1d:	pop    rdi
   140002d1e:	pop    rsi
   140002d1f:	pop    rbx
   140002d20:	pop    rbp
   140002d21:	ret    
   140002d22:	int3   
   140002d23:	int3   
   140002d24:	int3   
   140002d25:	int3   
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	mov    DWORD PTR [rsp+0x20],r9d
   140002d2d:	mov    QWORD PTR [rsp+0x18],r8
   140002d32:	mov    QWORD PTR [rsp+0x10],rdx
   140002d37:	push   rbx
   140002d38:	push   rbp
   140002d39:	push   rsi
   140002d3a:	push   rdi
   140002d3b:	push   r12
   140002d3d:	push   r13
   140002d3f:	push   r14
   140002d41:	push   r15
   140002d43:	sub    rsp,0x28
   140002d47:	xor    ebp,ebp
   140002d49:	mov    r13,rdx
   140002d4c:	mov    rsi,rcx
   140002d4f:	mov    r12d,ebp
   140002d52:	lea    edi,[rbp+0x2c]
   140002d55:	mov    edx,edi
   140002d57:	lea    ebx,[rbp+0x1]
   140002d5a:	call   QWORD PTR [rip+0x76e0]        # 0x14000a440
   140002d60:	test   rax,rax
   140002d63:	je     0x140002f5a
   140002d69:	mov    edx,edi
   140002d6b:	lea    rcx,[rax+0x2]
   140002d6f:	inc    ebx
   140002d71:	call   QWORD PTR [rip+0x76c9]        # 0x14000a440
   140002d77:	test   rax,rax
   140002d7a:	jne    0x140002d69
   140002d7c:	cmp    ebx,0x1
   140002d7f:	jbe    0x140002f5a
   140002d85:	lea    r15d,[rbx*4+0x4]
   140002d8d:	mov    ecx,r15d
   140002d90:	mov    r14d,r15d
   140002d93:	call   QWORD PTR [rip+0x76bf]        # 0x14000a458
   140002d99:	mov    rdi,rax
   140002d9c:	test   rax,rax
   140002d9f:	je     0x140002f27
   140002da5:	mov    rcx,rsi
   140002da8:	call   QWORD PTR [rip+0x7772]        # 0x14000a520
   140002dae:	mov    rbp,rax
   140002db1:	test   rax,rax
   140002db4:	je     0x140002ee2
   140002dba:	mov    r8d,r14d
   140002dbd:	xor    edx,edx
   140002dbf:	mov    rcx,rdi
   140002dc2:	call   0x140009952
   140002dc7:	lea    rdx,[rip+0x7bf6]        # 0x14000a9c4
   140002dce:	mov    DWORD PTR [rdi],ebx
   140002dd0:	mov    rcx,rbp
   140002dd3:	call   QWORD PTR [rip+0x7757]        # 0x14000a530
   140002dd9:	xor    r8d,r8d
   140002ddc:	mov    r13,rax
   140002ddf:	test   rax,rax
   140002de2:	je     0x140002ea1
   140002de8:	mov    esi,r8d
   140002deb:	test   ebx,ebx
   140002ded:	je     0x140002e85
   140002df3:	lea    r14,[rdi+0x4]
   140002df7:	xor    r8d,r8d
   140002dfa:	lea    rdx,[rsp+0x70]
   140002dff:	mov    rcx,r13
   140002e02:	call   QWORD PTR [rip+0x7700]        # 0x14000a508
   140002e08:	mov    edx,eax
   140002e0a:	mov    DWORD PTR [r14],eax
   140002e0d:	mov    rax,QWORD PTR [rsp+0x70]
   140002e12:	cmp    rax,r13
   140002e15:	je     0x140002e54
   140002e17:	xor    r8d,r8d
   140002e1a:	cmp    WORD PTR [rax],r8w
   140002e1e:	jne    0x140002e54
   140002e20:	cmp    edx,DWORD PTR [rsp+0x88]
   140002e27:	jae    0x140002e54
   140002e29:	test   esi,esi
   140002e2b:	je     0x140002e36
   140002e2d:	lea    eax,[rsi-0x1]
   140002e30:	cmp    edx,DWORD PTR [rdi+rax*4+0x4]
   140002e34:	jbe    0x140002e54
   140002e36:	lea    rdx,[rip+0x7b87]        # 0x14000a9c4
   140002e3d:	xor    ecx,ecx
   140002e3f:	inc    esi
   140002e41:	add    r14,0x4
   140002e45:	call   QWORD PTR [rip+0x76e5]        # 0x14000a530
   140002e4b:	mov    r13,rax
   140002e4e:	cmp    esi,ebx
   140002e50:	jb     0x140002df7
   140002e52:	jmp    0x140002e85
   140002e54:	mov    rcx,QWORD PTR [rip+0xb315]        # 0x14000e170
   140002e5b:	lea    rax,[rip+0xb30e]        # 0x14000e170
   140002e62:	cmp    rcx,rax
   140002e65:	je     0x140002e85
   140002e67:	test   BYTE PTR [rcx+0x1c],0x4
   140002e6b:	je     0x140002e85
   140002e6d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e71:	lea    r8,[rip+0x7e00]        # 0x14000ac78
   140002e78:	mov    edx,0x18
   140002e7d:	mov    r9,r13
   140002e80:	call   0x140001258
   140002e85:	cmp    esi,ebx
   140002e87:	jne    0x140002ed2
   140002e89:	mov    rax,QWORD PTR [rsp+0x80]
   140002e91:	mov    r12d,0x1
   140002e97:	test   rax,rax
   140002e9a:	je     0x140002ed2
   140002e9c:	mov    DWORD PTR [rax],r15d
   140002e9f:	jmp    0x140002ed2
   140002ea1:	mov    rcx,QWORD PTR [rip+0xb2c8]        # 0x14000e170
   140002ea8:	lea    rax,[rip+0xb2c1]        # 0x14000e170
   140002eaf:	cmp    rcx,rax
   140002eb2:	je     0x140002ed2
   140002eb4:	test   BYTE PTR [rcx+0x1c],0x4
   140002eb8:	je     0x140002ed2
   140002eba:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ebe:	lea    r8,[rip+0x7db3]        # 0x14000ac78
   140002ec5:	mov    edx,0x19
   140002eca:	mov    r9,rbp
   140002ecd:	call   0x140001258
   140002ed2:	mov    rcx,rbp
   140002ed5:	call   QWORD PTR [rip+0x756d]        # 0x14000a448
   140002edb:	mov    r13,QWORD PTR [rsp+0x78]
   140002ee0:	jmp    0x140002f10
   140002ee2:	mov    rcx,QWORD PTR [rip+0xb287]        # 0x14000e170
   140002ee9:	lea    rax,[rip+0xb280]        # 0x14000e170
   140002ef0:	cmp    rcx,rax
   140002ef3:	je     0x140002f1c
   140002ef5:	test   BYTE PTR [rcx+0x1c],0x4
   140002ef9:	je     0x140002f1c
   140002efb:	mov    rcx,QWORD PTR [rcx+0x10]
   140002eff:	lea    r8,[rip+0x7d72]        # 0x14000ac78
   140002f06:	mov    edx,0x1a
   140002f0b:	call   0x1400011b0
   140002f10:	cmp    r12d,0x1
   140002f14:	jne    0x140002f1c
   140002f16:	mov    QWORD PTR [r13+0x0],rdi
   140002f1a:	jmp    0x140002f8b
   140002f1c:	mov    rcx,rdi
   140002f1f:	call   QWORD PTR [rip+0x7523]        # 0x14000a448
   140002f25:	jmp    0x140002f8b
   140002f27:	mov    rcx,QWORD PTR [rip+0xb242]        # 0x14000e170
   140002f2e:	lea    rax,[rip+0xb23b]        # 0x14000e170
   140002f35:	cmp    rcx,rax
   140002f38:	je     0x140002f8b
   140002f3a:	test   BYTE PTR [rcx+0x1c],0x4
   140002f3e:	je     0x140002f8b
   140002f40:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f44:	lea    r8,[rip+0x7d2d]        # 0x14000ac78
   140002f4b:	mov    edx,0x1b
   140002f50:	mov    r9d,r15d
   140002f53:	call   0x1400011d4
   140002f58:	jmp    0x140002f8b
   140002f5a:	mov    rcx,QWORD PTR [rip+0xb20f]        # 0x14000e170
   140002f61:	lea    rax,[rip+0xb208]        # 0x14000e170
   140002f68:	cmp    rcx,rax
   140002f6b:	je     0x140002f8b
   140002f6d:	test   BYTE PTR [rcx+0x1c],0x4
   140002f71:	je     0x140002f8b
   140002f73:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f77:	lea    r8,[rip+0x7cfa]        # 0x14000ac78
   140002f7e:	mov    edx,0x1c
   140002f83:	mov    r9,rsi
   140002f86:	call   0x140001258
   140002f8b:	mov    eax,r12d
   140002f8e:	add    rsp,0x28
   140002f92:	pop    r15
   140002f94:	pop    r14
   140002f96:	pop    r13
   140002f98:	pop    r12
   140002f9a:	pop    rdi
   140002f9b:	pop    rsi
   140002f9c:	pop    rbp
   140002f9d:	pop    rbx
   140002f9e:	ret    
   140002f9f:	int3   
   140002fa0:	int3   
   140002fa1:	int3   
   140002fa2:	int3   
   140002fa3:	int3   
   140002fa4:	int3   
   140002fa5:	int3   
   140002fa6:	int3   
   140002fa7:	int3   
   140002fa8:	mov    r11,rsp
   140002fab:	mov    QWORD PTR [r11+0x8],rbx
   140002faf:	mov    QWORD PTR [r11+0x18],rsi
   140002fb3:	mov    DWORD PTR [r11+0x20],r9d
   140002fb7:	push   rdi
   140002fb8:	sub    rsp,0x30
   140002fbc:	xor    ebx,ebx
   140002fbe:	mov    rsi,r8
   140002fc1:	and    QWORD PTR [r11+0x10],rbx
   140002fc5:	mov    rdi,rdx
   140002fc8:	test   rdx,rdx
   140002fcb:	je     0x140002fed
   140002fcd:	lea    rax,[r11+0x10]
   140002fd1:	mov    r9d,0x20019
   140002fd7:	xor    r8d,r8d
   140002fda:	mov    QWORD PTR [r11-0x18],rax
   140002fde:	call   QWORD PTR [rip+0x73bc]        # 0x14000a3a0
   140002fe4:	mov    rcx,QWORD PTR [rsp+0x48]
   140002fe9:	mov    ebx,eax
   140002feb:	jmp    0x140002ff2
   140002fed:	mov    QWORD PTR [rsp+0x48],rcx
   140002ff2:	test   ebx,ebx
   140002ff4:	jne    0x1400030d7
   140002ffa:	lea    rax,[rsp+0x68]
   140002fff:	xor    r8d,r8d
   140003002:	mov    QWORD PTR [rsp+0x28],rax
   140003007:	lea    r9,[rsp+0x58]
   14000300c:	mov    rax,QWORD PTR [rsp+0x60]
   140003011:	mov    rdx,rsi
   140003014:	mov    QWORD PTR [rsp+0x20],rax
   140003019:	call   QWORD PTR [rip+0x7389]        # 0x14000a3a8
   14000301f:	mov    ebx,eax
   140003021:	test   eax,eax
   140003023:	jne    0x14000308d
   140003025:	mov    r9d,DWORD PTR [rsp+0x58]
   14000302a:	cmp    r9d,0x3
   14000302e:	je     0x140003069
   140003030:	lea    ebx,[rax+0xd]
   140003033:	mov    rcx,QWORD PTR [rip+0xb136]        # 0x14000e170
   14000303a:	lea    rax,[rip+0xb12f]        # 0x14000e170
   140003041:	cmp    rcx,rax
   140003044:	je     0x1400030c0
   140003046:	test   BYTE PTR [rcx+0x1c],0x4
   14000304a:	je     0x1400030c0
   14000304c:	mov    rcx,QWORD PTR [rcx+0x10]
   140003050:	lea    edx,[rbx+0x10]
   140003053:	lea    r8,[rip+0x7c1e]        # 0x14000ac78
   14000305a:	mov    DWORD PTR [rsp+0x20],0x3
   140003062:	call   0x140001210
   140003067:	jmp    0x1400030c0
   140003069:	mov    rcx,QWORD PTR [rsp+0x70]
   14000306e:	test   rcx,rcx
   140003071:	je     0x140003079
   140003073:	mov    eax,DWORD PTR [rsp+0x68]
   140003077:	mov    DWORD PTR [rcx],eax
   140003079:	mov    rcx,QWORD PTR [rsp+0x78]
   14000307e:	test   rcx,rcx
   140003081:	je     0x1400030c0
   140003083:	mov    rax,QWORD PTR [rsp+0x48]
   140003088:	mov    QWORD PTR [rcx],rax
   14000308b:	jmp    0x14000310c
   14000308d:	mov    rcx,QWORD PTR [rip+0xb0dc]        # 0x14000e170
   140003094:	lea    rax,[rip+0xb0d5]        # 0x14000e170
   14000309b:	cmp    rcx,rax
   14000309e:	je     0x1400030c0
   1400030a0:	test   BYTE PTR [rcx+0x1c],0x4
   1400030a4:	je     0x1400030c0
   1400030a6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030aa:	mov    edx,0x1e
   1400030af:	mov    DWORD PTR [rsp+0x28],ebx
   1400030b3:	mov    r9,rsi
   1400030b6:	mov    QWORD PTR [rsp+0x20],rdi
   1400030bb:	call   0x1400012d4
   1400030c0:	test   rdi,rdi
   1400030c3:	je     0x14000310c
   1400030c5:	mov    rcx,QWORD PTR [rsp+0x48]
   1400030ca:	test   rcx,rcx
   1400030cd:	je     0x14000310c
   1400030cf:	call   QWORD PTR [rip+0x72eb]        # 0x14000a3c0
   1400030d5:	jmp    0x14000310c
   1400030d7:	mov    rcx,QWORD PTR [rip+0xb092]        # 0x14000e170
   1400030de:	lea    rax,[rip+0xb08b]        # 0x14000e170
   1400030e5:	cmp    rcx,rax
   1400030e8:	je     0x14000310c
   1400030ea:	test   BYTE PTR [rcx+0x1c],0x4
   1400030ee:	je     0x14000310c
   1400030f0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030f4:	lea    r8,[rip+0x7b7d]        # 0x14000ac78
   1400030fb:	mov    edx,0x1f
   140003100:	mov    DWORD PTR [rsp+0x20],ebx
   140003104:	mov    r9,rdi
   140003107:	call   0x1400013d0
   14000310c:	mov    rsi,QWORD PTR [rsp+0x50]
   140003111:	mov    eax,ebx
   140003113:	mov    rbx,QWORD PTR [rsp+0x40]
   140003118:	add    rsp,0x30
   14000311c:	pop    rdi
   14000311d:	ret    
   14000311e:	int3   
   14000311f:	int3   
   140003120:	int3   
   140003121:	int3   
   140003122:	int3   
   140003123:	int3   
   140003124:	mov    r11,rsp
   140003127:	mov    QWORD PTR [r11+0x8],rbx
   14000312b:	mov    QWORD PTR [r11+0x10],rbp
   14000312f:	mov    QWORD PTR [r11+0x18],rsi
   140003133:	mov    DWORD PTR [r11+0x20],r9d
   140003137:	push   rdi
   140003138:	push   r14
   14000313a:	push   r15
   14000313c:	sub    rsp,0x40
   140003140:	and    QWORD PTR [r11+0x30],0x0
   140003145:	lea    rax,[r11+0x30]
   140003149:	mov    QWORD PTR [r11-0x20],rax
   14000314d:	mov    r15,r8
   140003150:	lea    rax,[r11+0x20]
   140003154:	mov    r14,rdx
   140003157:	mov    QWORD PTR [r11-0x28],rax
   14000315b:	and    DWORD PTR [rsp+0x28],0x0
   140003160:	and    QWORD PTR [r11-0x38],0x0
   140003165:	call   0x140002fa8
   14000316a:	mov    rdi,QWORD PTR [rsp+0x88]
   140003172:	mov    ebx,eax
   140003174:	test   eax,eax
   140003176:	jne    0x140003228
   14000317c:	mov    ebp,DWORD PTR [rsp+0x78]
   140003180:	mov    ecx,ebp
   140003182:	call   QWORD PTR [rip+0x72d0]        # 0x14000a458
   140003188:	mov    rsi,QWORD PTR [rsp+0x80]
   140003190:	mov    QWORD PTR [rsi],rax
   140003193:	test   rax,rax
   140003196:	je     0x1400031f5
   140003198:	and    QWORD PTR [rsp+0x38],0x0
   14000319e:	lea    rcx,[rsp+0x78]
   1400031a3:	mov    QWORD PTR [rsp+0x30],rcx
   1400031a8:	mov    r8,r15
   1400031ab:	mov    DWORD PTR [rsp+0x28],ebp
   1400031af:	mov    rcx,rdi
   1400031b2:	xor    edx,edx
   1400031b4:	mov    QWORD PTR [rsp+0x20],rax
   1400031b9:	call   0x140002fa8
   1400031be:	mov    ebx,eax
   1400031c0:	test   eax,eax
   1400031c2:	je     0x14000325f
   1400031c8:	mov    rcx,QWORD PTR [rsi]
   1400031cb:	call   QWORD PTR [rip+0x7277]        # 0x14000a448
   1400031d1:	and    QWORD PTR [rsi],0x0
   1400031d5:	mov    rcx,QWORD PTR [rip+0xaf94]        # 0x14000e170
   1400031dc:	lea    rax,[rip+0xaf8d]        # 0x14000e170
   1400031e3:	cmp    rcx,rax
   1400031e6:	je     0x14000325b
   1400031e8:	test   BYTE PTR [rcx+0x1c],0x4
   1400031ec:	je     0x14000325b
   1400031ee:	mov    edx,0x20
   1400031f3:	jmp    0x140003246
   1400031f5:	mov    rcx,QWORD PTR [rip+0xaf74]        # 0x14000e170
   1400031fc:	lea    rax,[rip+0xaf6d]        # 0x14000e170
   140003203:	cmp    rcx,rax
   140003206:	je     0x14000325f
   140003208:	test   BYTE PTR [rcx+0x1c],0x4
   14000320c:	je     0x14000325f
   14000320e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003212:	lea    r8,[rip+0x7a5f]        # 0x14000ac78
   140003219:	mov    edx,0x21
   14000321e:	mov    r9d,ebp
   140003221:	call   0x1400011d4
   140003226:	jmp    0x14000325b
   140003228:	mov    rcx,QWORD PTR [rip+0xaf41]        # 0x14000e170
   14000322f:	lea    rax,[rip+0xaf3a]        # 0x14000e170
   140003236:	cmp    rcx,rax
   140003239:	je     0x14000325b
   14000323b:	test   BYTE PTR [rcx+0x1c],0x4
   14000323f:	je     0x14000325b
   140003241:	mov    edx,0x22
   140003246:	mov    rcx,QWORD PTR [rcx+0x10]
   14000324a:	mov    r9,r14
   14000324d:	mov    DWORD PTR [rsp+0x28],ebx
   140003251:	mov    QWORD PTR [rsp+0x20],r15
   140003256:	call   0x1400012d4
   14000325b:	test   ebx,ebx
   14000325d:	jne    0x140003271
   14000325f:	mov    rax,QWORD PTR [rsp+0x90]
   140003267:	test   rax,rax
   14000326a:	je     0x140003271
   14000326c:	mov    QWORD PTR [rax],rdi
   14000326f:	jmp    0x140003284
   140003271:	test   r14,r14
   140003274:	je     0x140003284
   140003276:	test   rdi,rdi
   140003279:	je     0x140003284
   14000327b:	mov    rcx,rdi
   14000327e:	call   QWORD PTR [rip+0x713c]        # 0x14000a3c0
   140003284:	mov    rbp,QWORD PTR [rsp+0x68]
   140003289:	mov    eax,ebx
   14000328b:	mov    rbx,QWORD PTR [rsp+0x60]
   140003290:	mov    rsi,QWORD PTR [rsp+0x70]
   140003295:	add    rsp,0x40
   140003299:	pop    r15
   14000329b:	pop    r14
   14000329d:	pop    rdi
   14000329e:	ret    
   14000329f:	int3   
   1400032a0:	int3   
   1400032a1:	int3   
   1400032a2:	int3   
   1400032a3:	int3   
   1400032a4:	int3   
   1400032a5:	int3   
   1400032a6:	int3   
   1400032a7:	int3   
   1400032a8:	mov    r11,rsp
   1400032ab:	mov    QWORD PTR [r11+0x8],rbx
   1400032af:	mov    QWORD PTR [r11+0x18],rsi
   1400032b3:	push   rdi
   1400032b4:	sub    rsp,0x50
   1400032b8:	xor    ebx,ebx
   1400032ba:	mov    rsi,r8
   1400032bd:	and    QWORD PTR [r11+0x10],rbx
   1400032c1:	mov    rdi,rdx
   1400032c4:	test   rdx,rdx
   1400032c7:	je     0x1400032fa
   1400032c9:	and    QWORD PTR [r11-0x18],rbx
   1400032cd:	lea    rax,[r11+0x10]
   1400032d1:	mov    QWORD PTR [r11-0x20],rax
   1400032d5:	xor    r9d,r9d
   1400032d8:	and    QWORD PTR [r11-0x28],rbx
   1400032dc:	xor    r8d,r8d
   1400032df:	mov    DWORD PTR [rsp+0x28],0x2001f
   1400032e7:	and    DWORD PTR [rsp+0x20],ebx
   1400032eb:	call   QWORD PTR [rip+0x70c7]        # 0x14000a3b8
   1400032f1:	mov    rcx,QWORD PTR [rsp+0x68]
   1400032f6:	mov    ebx,eax
   1400032f8:	jmp    0x1400032ff
   1400032fa:	mov    QWORD PTR [rsp+0x68],rcx
   1400032ff:	test   ebx,ebx
   140003301:	jne    0x140003396
   140003307:	mov    eax,DWORD PTR [rsp+0x88]
   14000330e:	lea    r9d,[rbx+0x3]
   140003312:	mov    DWORD PTR [rsp+0x28],eax
   140003316:	xor    r8d,r8d
   140003319:	mov    rax,QWORD PTR [rsp+0x80]
   140003321:	mov    rdx,rsi
   140003324:	mov    QWORD PTR [rsp+0x20],rax
   140003329:	call   QWORD PTR [rip+0x7081]        # 0x14000a3b0
   14000332f:	mov    ebx,eax
   140003331:	test   eax,eax
   140003333:	je     0x14000337f
   140003335:	mov    rcx,QWORD PTR [rip+0xae34]        # 0x14000e170
   14000333c:	lea    rax,[rip+0xae2d]        # 0x14000e170
   140003343:	cmp    rcx,rax
   140003346:	je     0x140003368
   140003348:	test   BYTE PTR [rcx+0x1c],0x4
   14000334c:	je     0x140003368
   14000334e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003352:	mov    edx,0x23
   140003357:	mov    DWORD PTR [rsp+0x28],ebx
   14000335b:	mov    r9,rsi
   14000335e:	mov    QWORD PTR [rsp+0x20],rdi
   140003363:	call   0x1400012d4
   140003368:	test   rdi,rdi
   14000336b:	je     0x1400033cb
   14000336d:	mov    rcx,QWORD PTR [rsp+0x68]
   140003372:	test   rcx,rcx
   140003375:	je     0x1400033cb
   140003377:	call   QWORD PTR [rip+0x7043]        # 0x14000a3c0
   14000337d:	jmp    0x1400033cb
   14000337f:	mov    rcx,QWORD PTR [rsp+0x90]
   140003387:	test   rcx,rcx
   14000338a:	je     0x140003368
   14000338c:	mov    rax,QWORD PTR [rsp+0x68]
   140003391:	mov    QWORD PTR [rcx],rax
   140003394:	jmp    0x1400033cb
   140003396:	mov    rcx,QWORD PTR [rip+0xadd3]        # 0x14000e170
   14000339d:	lea    rax,[rip+0xadcc]        # 0x14000e170
   1400033a4:	cmp    rcx,rax
   1400033a7:	je     0x1400033cb
   1400033a9:	test   BYTE PTR [rcx+0x1c],0x4
   1400033ad:	je     0x1400033cb
   1400033af:	mov    rcx,QWORD PTR [rcx+0x10]
   1400033b3:	lea    r8,[rip+0x78be]        # 0x14000ac78
   1400033ba:	mov    edx,0x24
   1400033bf:	mov    DWORD PTR [rsp+0x20],ebx
   1400033c3:	mov    r9,rdi
   1400033c6:	call   0x1400013d0
   1400033cb:	mov    rsi,QWORD PTR [rsp+0x70]
   1400033d0:	mov    eax,ebx
   1400033d2:	mov    rbx,QWORD PTR [rsp+0x60]
   1400033d7:	add    rsp,0x50
   1400033db:	pop    rdi
   1400033dc:	ret    
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	int3   
   1400033e1:	int3   
   1400033e2:	int3   
   1400033e3:	int3   
   1400033e4:	int3   
   1400033e5:	int3   
   1400033e6:	int3   
   1400033e7:	int3   
   1400033e8:	int3   
   1400033e9:	int3   
   1400033ea:	int3   
   1400033eb:	int3   
   1400033ec:	int3   
   1400033ed:	int3   
   1400033ee:	int3   
   1400033ef:	int3   
   1400033f0:	rex push rbp
   1400033f2:	push   rbx
   1400033f3:	push   rsi
   1400033f4:	push   rdi
   1400033f5:	push   r12
   1400033f7:	push   r13
   1400033f9:	push   r14
   1400033fb:	push   r15
   1400033fd:	lea    rbp,[rsp-0x1f]
   140003402:	sub    rsp,0xf8
   140003409:	mov    rax,QWORD PTR [rip+0xabf8]        # 0x14000e008
   140003410:	xor    rax,rsp
   140003413:	mov    QWORD PTR [rbp+0x7],rax
   140003417:	xor    ebx,ebx
   140003419:	mov    eax,0x138
   14000341e:	mov    rdi,rcx
   140003421:	mov    esi,ebx
   140003423:	cmp    edx,eax
   140003425:	ja     0x140003a0a
   14000342b:	je     0x1400039d7
   140003431:	mov    eax,edx
   140003433:	sub    eax,0x1
   140003436:	je     0x1400037ff
   14000343c:	sub    eax,0x1
   14000343f:	je     0x1400037f2
   140003445:	sub    eax,0xd
   140003448:	je     0x140003522
   14000344e:	sub    eax,0x1
   140003451:	je     0x140003492
   140003453:	sub    eax,0x72
   140003456:	je     0x140003477
   140003458:	cmp    eax,0x80
   14000345d:	jne    0x140003c2e
   140003463:	cmp    r8,0x1b
   140003467:	jne    0x140003c51
   14000346d:	mov    edx,0x8003
   140003472:	jmp    0x140003a53
   140003477:	mov    rcx,QWORD PTR [rip+0xbc72]        # 0x14000f0f0
   14000347e:	test   rcx,rcx
   140003481:	je     0x140003c51
   140003487:	call   QWORD PTR [rip+0x6b83]        # 0x14000a010
   14000348d:	jmp    0x140003c51
   140003492:	mov    rcx,QWORD PTR [rip+0xbbef]        # 0x14000f088
   140003499:	test   rcx,rcx
   14000349c:	je     0x1400034ab
   14000349e:	call   QWORD PTR [rip+0x6fa4]        # 0x14000a448
   1400034a4:	mov    QWORD PTR [rip+0xbbdd],rbx        # 0x14000f088
   1400034ab:	mov    rcx,QWORD PTR [rip+0xbbfe]        # 0x14000f0b0
   1400034b2:	test   rcx,rcx
   1400034b5:	je     0x1400034c4
   1400034b7:	call   QWORD PTR [rip+0x6f8b]        # 0x14000a448
   1400034bd:	mov    QWORD PTR [rip+0xbbec],rbx        # 0x14000f0b0
   1400034c4:	test   BYTE PTR [rip+0xbb79],0x1        # 0x14000f044
   1400034cb:	jne    0x1400034e8
   1400034cd:	call   0x140007260
   1400034d2:	mov    rcx,QWORD PTR [rip+0xac9f]        # 0x14000e178
   1400034d9:	cmp    rcx,0xffffffffffffffff
   1400034dd:	je     0x1400034e8
   1400034df:	mov    rcx,QWORD PTR [rcx]
   1400034e2:	call   QWORD PTR [rip+0x6e20]        # 0x14000a308
   1400034e8:	mov    r8d,DWORD PTR [rip+0xbca1]        # 0x14000f190
   1400034ef:	mov    r9d,0x1
   1400034f5:	mov    edx,DWORD PTR [rip+0xbbad]        # 0x14000f0a8
   1400034fb:	mov    rcx,rdi
   1400034fe:	mov    DWORD PTR [rsp+0x28],0x1
   140003506:	mov    DWORD PTR [rsp+0x20],0x1
   14000350e:	call   QWORD PTR [rip+0x6c4c]        # 0x14000a160
   140003514:	mov    rcx,rdi
   140003517:	call   QWORD PTR [rip+0x6c8b]        # 0x14000a1a8
   14000351d:	jmp    0x140003c51
   140003522:	lea    rdx,[rbp-0x59]
   140003526:	call   QWORD PTR [rip+0x6d54]        # 0x14000a280
   14000352c:	test   BYTE PTR [rip+0xbb11],0x1        # 0x14000f044
   140003533:	mov    r14,rax
   140003536:	je     0x14000361a
   14000353c:	mov    eax,DWORD PTR [rip+0xbbaa]        # 0x14000f0ec
   140003542:	mov    ecx,0x5
   140003547:	add    eax,0xfffffe70
   14000354c:	cdq    
   14000354d:	sub    eax,edx
   14000354f:	sar    eax,1
   140003551:	mov    DWORD PTR [rbp-0x71],eax
   140003554:	add    eax,0x190
   140003559:	mov    DWORD PTR [rbp-0x69],eax
   14000355c:	mov    eax,DWORD PTR [rip+0xbb86]        # 0x14000f0e8
   140003562:	add    eax,0xffffff38
   140003567:	cdq    
   140003568:	sub    eax,edx
   14000356a:	sar    eax,1
   14000356c:	mov    DWORD PTR [rbp-0x6d],eax
   14000356f:	add    eax,0xc8
   140003574:	mov    DWORD PTR [rbp-0x65],eax
   140003577:	call   QWORD PTR [rip+0x6c7b]        # 0x14000a1f8
   14000357d:	mov    edx,eax
   14000357f:	mov    rcx,r14
   140003582:	call   QWORD PTR [rip+0x6a98]        # 0x14000a020
   140003588:	mov    ecx,0x8
   14000358d:	mov    r15d,eax
   140003590:	call   QWORD PTR [rip+0x6c62]        # 0x14000a1f8
   140003596:	mov    edx,eax
   140003598:	mov    rcx,r14
   14000359b:	call   QWORD PTR [rip+0x6a8f]        # 0x14000a030
   1400035a1:	lea    rcx,[rip+0xb258]        # 0x14000e800
   1400035a8:	mov    r12d,eax
   1400035ab:	call   QWORD PTR [rip+0x6adf]        # 0x14000a090
   1400035b1:	lea    r9,[rbp-0x71]
   1400035b5:	mov    DWORD PTR [rsp+0x20],0x10
   1400035bd:	mov    r8d,eax
   1400035c0:	lea    rdx,[rip+0xb239]        # 0x14000e800
   1400035c7:	mov    rcx,r14
   1400035ca:	call   QWORD PTR [rip+0x6c78]        # 0x14000a248
   1400035d0:	test   eax,eax
   1400035d2:	jne    0x140003602
   1400035d4:	mov    rcx,QWORD PTR [rip+0xab95]        # 0x14000e170
   1400035db:	lea    rax,[rip+0xab8e]        # 0x14000e170
   1400035e2:	cmp    rcx,rax
   1400035e5:	je     0x140003602
   1400035e7:	test   BYTE PTR [rcx+0x1c],0x2
   1400035eb:	je     0x140003602
   1400035ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400035f1:	lea    r8,[rip+0x7680]        # 0x14000ac78
   1400035f8:	mov    edx,0x29
   1400035fd:	call   0x1400011b0
   140003602:	mov    edx,r12d
   140003605:	mov    rcx,r14
   140003608:	call   QWORD PTR [rip+0x6a22]        # 0x14000a030
   14000360e:	mov    edx,r15d
   140003611:	mov    rcx,r14
   140003614:	call   QWORD PTR [rip+0x6a06]        # 0x14000a020
   14000361a:	xor    edx,edx
   14000361c:	xor    ecx,ecx
   14000361e:	mov    r8d,0xff0000
   140003624:	call   QWORD PTR [rip+0x69d6]        # 0x14000a000
   14000362a:	mov    r13,rax
   14000362d:	test   rax,rax
   140003630:	je     0x14000379f
   140003636:	mov    rdx,rax
   140003639:	mov    rcx,r14
   14000363c:	call   QWORD PTR [rip+0x69c6]        # 0x14000a008
   140003642:	cmp    DWORD PTR [rip+0xba14],ebx        # 0x14000f05c
   140003648:	mov    r15d,ebx
   14000364b:	mov    QWORD PTR [rbp-0x79],rax
   14000364f:	jle    0x1400036eb
   140003655:	mov    ecx,DWORD PTR [rip+0xb9fd]        # 0x14000f058
   14000365b:	imul   ecx,r15d
   14000365f:	cmp    DWORD PTR [rip+0xb9db],ebx        # 0x14000f040
   140003665:	movsxd rax,ecx
   140003668:	lea    rcx,[rax+rax*4]
   14000366c:	mov    rax,QWORD PTR [rip+0xb9f5]        # 0x14000f068
   140003673:	lea    rdx,[rax+rcx*4]
   140003677:	je     0x140003684
   140003679:	mov    eax,DWORD PTR [rip+0xba6d]        # 0x14000f0ec
   14000367f:	sub    eax,DWORD PTR [rdx+0x4]
   140003682:	jmp    0x140003687
   140003684:	mov    eax,DWORD PTR [rdx+0x4]
   140003687:	mov    r8d,DWORD PTR [rdx+0x8]
   14000368b:	xor    r9d,r9d
   14000368e:	mov    edx,eax
   140003690:	mov    rcx,r14
   140003693:	call   QWORD PTR [rip+0x69af]        # 0x14000a048
   140003699:	inc    r15d
   14000369c:	mov    eax,r15d
   14000369f:	imul   eax,DWORD PTR [rip+0xb9b2]        # 0x14000f058
   1400036a6:	dec    eax
   1400036a8:	cmp    DWORD PTR [rip+0xb992],ebx        # 0x14000f040
   1400036ae:	cdqe   
   1400036b0:	lea    rcx,[rax+rax*4]
   1400036b4:	mov    rax,QWORD PTR [rip+0xb9ad]        # 0x14000f068
   1400036bb:	lea    rdx,[rax+rcx*4]
   1400036bf:	je     0x1400036cc
   1400036c1:	mov    eax,DWORD PTR [rip+0xba25]        # 0x14000f0ec
   1400036c7:	sub    eax,DWORD PTR [rdx+0x4]
   1400036ca:	jmp    0x1400036cf
   1400036cc:	mov    eax,DWORD PTR [rdx+0x4]
   1400036cf:	mov    r8d,DWORD PTR [rdx+0x8]
   1400036d3:	mov    rcx,r14
   1400036d6:	mov    edx,eax
   1400036d8:	call   QWORD PTR [rip+0x695a]        # 0x14000a038
   1400036de:	cmp    r15d,DWORD PTR [rip+0xb977]        # 0x14000f05c
   1400036e5:	jl     0x140003655
   1400036eb:	cmp    DWORD PTR [rip+0xb967],ebx        # 0x14000f058
   1400036f1:	mov    r12d,ebx
   1400036f4:	jle    0x140003789
   1400036fa:	mov    r15,rbx
   1400036fd:	mov    rcx,QWORD PTR [rip+0xb964]        # 0x14000f068
   140003704:	add    rcx,r15
   140003707:	cmp    DWORD PTR [rip+0xb933],ebx        # 0x14000f040
   14000370d:	je     0x14000371a
   14000370f:	mov    edx,DWORD PTR [rip+0xb9d7]        # 0x14000f0ec
   140003715:	sub    edx,DWORD PTR [rcx+0x4]
   140003718:	jmp    0x14000371d
   14000371a:	mov    edx,DWORD PTR [rcx+0x4]
   14000371d:	mov    r8d,DWORD PTR [rcx+0x8]
   140003721:	xor    r9d,r9d
   140003724:	mov    rcx,r14
   140003727:	call   QWORD PTR [rip+0x691b]        # 0x14000a048
   14000372d:	mov    eax,DWORD PTR [rip+0xb929]        # 0x14000f05c
   140003733:	dec    eax
   140003735:	imul   eax,DWORD PTR [rip+0xb91c]        # 0x14000f058
   14000373c:	add    eax,r12d
   14000373f:	cmp    DWORD PTR [rip+0xb8fb],ebx        # 0x14000f040
   140003745:	cdqe   
   140003747:	lea    rcx,[rax+rax*4]
   14000374b:	mov    rax,QWORD PTR [rip+0xb916]        # 0x14000f068
   140003752:	lea    rdx,[rax+rcx*4]
   140003756:	je     0x140003763
   140003758:	mov    eax,DWORD PTR [rip+0xb98e]        # 0x14000f0ec
   14000375e:	sub    eax,DWORD PTR [rdx+0x4]
   140003761:	jmp    0x140003766
   140003763:	mov    eax,DWORD PTR [rdx+0x4]
   140003766:	mov    r8d,DWORD PTR [rdx+0x8]
   14000376a:	mov    rcx,r14
   14000376d:	mov    edx,eax
   14000376f:	call   QWORD PTR [rip+0x68c3]        # 0x14000a038
   140003775:	inc    r12d
   140003778:	add    r15,0x14
   14000377c:	cmp    r12d,DWORD PTR [rip+0xb8d5]        # 0x14000f058
   140003783:	jl     0x1400036fd
   140003789:	mov    rdx,QWORD PTR [rbp-0x79]
   14000378d:	mov    rcx,r14
   140003790:	call   QWORD PTR [rip+0x6872]        # 0x14000a008
   140003796:	mov    rcx,r13
   140003799:	call   QWORD PTR [rip+0x6871]        # 0x14000a010
   14000379f:	cmp    DWORD PTR [rip+0xb9df],ebx        # 0x14000f184
   1400037a5:	jne    0x1400037e0
   1400037a7:	mov    eax,DWORD PTR [rip+0xb913]        # 0x14000f0c0
   1400037ad:	mov    rdx,r14
   1400037b0:	imul   eax,DWORD PTR [rip+0xb8a1]        # 0x14000f058
   1400037b7:	mov    DWORD PTR [rsp+0x20],ebx
   1400037bb:	add    eax,DWORD PTR [rip+0xb8c3]        # 0x14000f084
   1400037c1:	cdqe   
   1400037c3:	lea    rcx,[rax+rax*4]
   1400037c7:	mov    rax,QWORD PTR [rip+0xb89a]        # 0x14000f068
   1400037ce:	mov    r9d,DWORD PTR [rax+rcx*4+0x8]
   1400037d3:	mov    r8d,DWORD PTR [rax+rcx*4+0x4]
   1400037d8:	mov    rcx,rdi
   1400037db:	call   0x1400040c4
   1400037e0:	lea    rdx,[rbp-0x59]
   1400037e4:	mov    rcx,rdi
   1400037e7:	call   QWORD PTR [rip+0x69ab]        # 0x14000a198
   1400037ed:	jmp    0x140003c51
   1400037f2:	xor    ecx,ecx
   1400037f4:	call   QWORD PTR [rip+0x69c6]        # 0x14000a1c0
   1400037fa:	jmp    0x140003c51
   1400037ff:	call   0x140007160
   140003804:	test   eax,eax
   140003806:	je     0x1400039ce
   14000380c:	mov    ecx,DWORD PTR [rip+0xb832]        # 0x14000f044
   140003812:	shr    ecx,1
   140003814:	and    ecx,0x1
   140003817:	call   QWORD PTR [rip+0x69ab]        # 0x14000a1c8
   14000381d:	mov    eax,DWORD PTR [rip+0xb821]        # 0x14000f044
   140003823:	lea    r8,[rip+0xafd6]        # 0x14000e800
   14000382a:	mov    rcx,QWORD PTR [rip+0xb867]        # 0x14000f098
   140003831:	and    al,0x4
   140003833:	neg    al
   140003835:	mov    r9d,0x400
   14000383b:	sbb    edx,edx
   14000383d:	neg    edx
   14000383f:	add    edx,0x3e9
   140003845:	call   QWORD PTR [rip+0x69b5]        # 0x14000a200
   14000384b:	test   eax,eax
   14000384d:	je     0x1400039a0
   140003853:	test   BYTE PTR [rip+0xb7ea],0x1        # 0x14000f044
   14000385a:	jne    0x140003c51
   140003860:	mov    eax,DWORD PTR [rip+0xb882]        # 0x14000f0e8
   140003866:	mov    r9d,0x50000000
   14000386c:	add    eax,0xffffff38
   140003871:	mov    QWORD PTR [rsp+0x58],rbx
   140003876:	cdq    
   140003877:	sub    eax,edx
   140003879:	sar    eax,1
   14000387b:	mov    r8d,eax
   14000387e:	mov    eax,DWORD PTR [rip+0xb868]        # 0x14000f0ec
   140003884:	add    eax,0xfffffe70
   140003889:	cdq    
   14000388a:	sub    eax,edx
   14000388c:	lea    rdx,[rip+0x7135]        # 0x14000a9c8
   140003893:	sar    eax,1
   140003895:	mov    ecx,eax
   140003897:	mov    rax,QWORD PTR [rip+0xb7fa]        # 0x14000f098
   14000389e:	mov    QWORD PTR [rsp+0x50],rax
   1400038a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400038a8:	mov    QWORD PTR [rsp+0x40],rdi
   1400038ad:	mov    DWORD PTR [rsp+0x38],0xc8
   1400038b5:	mov    DWORD PTR [rsp+0x30],0x190
   1400038bd:	mov    DWORD PTR [rsp+0x28],r8d
   1400038c2:	lea    r8,[rip+0xaf37]        # 0x14000e800
   1400038c9:	mov    DWORD PTR [rsp+0x20],ecx
   1400038cd:	xor    ecx,ecx
   1400038cf:	call   QWORD PTR [rip+0x687b]        # 0x14000a150
   1400038d5:	mov    r14,rax
   1400038d8:	test   rax,rax
   1400038db:	jne    0x140003907
   1400038dd:	mov    rcx,QWORD PTR [rip+0xa88c]        # 0x14000e170
   1400038e4:	lea    rax,[rip+0xa885]        # 0x14000e170
   1400038eb:	cmp    rcx,rax
   1400038ee:	je     0x1400039ce
   1400038f4:	test   BYTE PTR [rcx+0x1c],0x2
   1400038f8:	je     0x1400039ce
   1400038fe:	lea    edx,[r14+0x25]
   140003902:	jmp    0x1400039be
   140003907:	mov    rcx,rdi
   14000390a:	call   QWORD PTR [rip+0x6980]        # 0x14000a290
   140003910:	test   rax,rax
   140003913:	jne    0x140003949
   140003915:	mov    rcx,QWORD PTR [rip+0xa854]        # 0x14000e170
   14000391c:	lea    rax,[rip+0xa84d]        # 0x14000e170
   140003923:	cmp    rcx,rax
   140003926:	je     0x140003943
   140003928:	test   BYTE PTR [rcx+0x1c],0x2
   14000392c:	je     0x140003943
   14000392e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003932:	lea    r8,[rip+0x733f]        # 0x14000ac78
   140003939:	mov    edx,0x26
   14000393e:	call   0x1400011b0
   140003943:	or     rsi,0xffffffffffffffff
   140003947:	jmp    0x14000395b
   140003949:	mov    rcx,rax
   14000394c:	call   QWORD PTR [rip+0x66ee]        # 0x14000a040
   140003952:	and    eax,0x1
   140003955:	mov    DWORD PTR [rip+0xb6e5],eax        # 0x14000f040
   14000395b:	xor    edx,edx
   14000395d:	lea    rcx,[rbp-0x59]
   140003961:	lea    r8d,[rdx+0x5c]
   140003965:	call   0x140009952
   14000396a:	lea    rcx,[rbp-0x59]
   14000396e:	mov    BYTE PTR [rbp-0x42],0x1
   140003972:	call   QWORD PTR [rip+0x66b0]        # 0x14000a028
   140003978:	mov    QWORD PTR [rip+0xb771],rax        # 0x14000f0f0
   14000397f:	test   rax,rax
   140003982:	je     0x140003c51
   140003988:	xor    r9d,r9d
   14000398b:	mov    r8,rax
   14000398e:	mov    rcx,r14
   140003991:	lea    edx,[r9+0x30]
   140003995:	call   QWORD PTR [rip+0x679d]        # 0x14000a138
   14000399b:	jmp    0x140003c51
   1400039a0:	mov    rcx,QWORD PTR [rip+0xa7c9]        # 0x14000e170
   1400039a7:	lea    rax,[rip+0xa7c2]        # 0x14000e170
   1400039ae:	cmp    rcx,rax
   1400039b1:	je     0x1400039ce
   1400039b3:	test   BYTE PTR [rcx+0x1c],0x2
   1400039b7:	je     0x1400039ce
   1400039b9:	mov    edx,0x27
   1400039be:	mov    rcx,QWORD PTR [rcx+0x10]
   1400039c2:	lea    r8,[rip+0x72af]        # 0x14000ac78
   1400039c9:	call   0x1400011b0
   1400039ce:	or     rsi,0xffffffffffffffff
   1400039d2:	jmp    0x140003c51
   1400039d7:	test   BYTE PTR [rip+0xb666],0x1        # 0x14000f044
   1400039de:	jne    0x140003c51
   1400039e4:	mov    edx,0x1
   1400039e9:	mov    rcx,r8
   1400039ec:	call   QWORD PTR [rip+0x6626]        # 0x14000a018
   1400039f2:	mov    ecx,0x5
   1400039f7:	call   QWORD PTR [rip+0x67fb]        # 0x14000a1f8
   1400039fd:	mov    ecx,eax
   1400039ff:	call   QWORD PTR [rip+0x680b]        # 0x14000a210
   140003a05:	jmp    0x140003c34
   140003a0a:	cmp    edx,0x204
   140003a10:	je     0x140003c39
   140003a16:	cmp    edx,0x244
   140003a1c:	jbe    0x140003c2e
   140003a22:	cmp    edx,0x247
   140003a28:	jbe    0x140003c1e
   140003a2e:	cmp    edx,0x8001
   140003a34:	je     0x140003bf0
   140003a3a:	cmp    edx,0x8002
   140003a40:	je     0x140003a64
   140003a42:	cmp    edx,0x8003
   140003a48:	jne    0x140003c2e
   140003a4e:	mov    edx,0x10
   140003a53:	xor    r9d,r9d
   140003a56:	xor    r8d,r8d
   140003a59:	call   QWORD PTR [rip+0x67e1]        # 0x14000a240
   140003a5f:	jmp    0x140003c51
   140003a64:	mov    r9d,DWORD PTR [rip+0xb5f1]        # 0x14000f05c
   140003a6b:	imul   r9d,DWORD PTR [rip+0xb5e5]        # 0x14000f058
   140003a73:	mov    r8d,DWORD PTR [rip+0xb5e6]        # 0x14000f060
   140003a7a:	cmp    r8d,r9d
   140003a7d:	jne    0x140003bc2
   140003a83:	mov    edx,DWORD PTR [rip+0xb5bb]        # 0x14000f044
   140003a89:	shr    edx,0x1f
   140003a8c:	call   0x140004228
   140003a91:	mov    r14,rax
   140003a94:	test   rax,rax
   140003a97:	je     0x140003c51
   140003a9d:	cmp    QWORD PTR [rip+0xb62c],rbx        # 0x14000f0d0
   140003aa4:	je     0x140003b32
   140003aaa:	cmp    QWORD PTR [rip+0xb627],rbx        # 0x14000f0d8
   140003ab1:	je     0x140003b32
   140003ab3:	mov    ecx,DWORD PTR [rip+0xb6c7]        # 0x14000f180
   140003ab9:	lea    rax,[rbp-0x79]
   140003abd:	mov    QWORD PTR [rsp+0x30],rax
   140003ac2:	lea    r8,[rip+0x6e5f]        # 0x14000a928
   140003ac9:	mov    rax,QWORD PTR [rip+0xb5b8]        # 0x14000f088
   140003ad0:	lea    rdx,[rip+0x6e69]        # 0x14000a940
   140003ad7:	mov    DWORD PTR [rsp+0x28],ecx
   140003adb:	mov    rcx,0xffffffff80000002
   140003ae2:	mov    QWORD PTR [rsp+0x20],rax
   140003ae7:	mov    QWORD PTR [rbp-0x79],rbx
   140003aeb:	call   0x1400032a8
   140003af0:	mov    r15,QWORD PTR [rbp-0x79]
   140003af4:	test   eax,eax
   140003af6:	jne    0x140003b24
   140003af8:	mov    eax,DWORD PTR [rip+0xb582]        # 0x14000f080
   140003afe:	lea    r8,[rip+0x6eab]        # 0x14000a9b0
   140003b05:	mov    QWORD PTR [rsp+0x30],rbx
   140003b0a:	xor    edx,edx
   140003b0c:	mov    DWORD PTR [rsp+0x28],eax
   140003b10:	mov    rcx,r15
   140003b13:	mov    rax,QWORD PTR [rip+0xb596]        # 0x14000f0b0
   140003b1a:	mov    QWORD PTR [rsp+0x20],rax
   140003b1f:	call   0x1400032a8
   140003b24:	test   r15,r15
   140003b27:	je     0x140003b32
   140003b29:	mov    rcx,r15
   140003b2c:	call   QWORD PTR [rip+0x688e]        # 0x14000a3c0
   140003b32:	mov    eax,DWORD PTR [rip+0xb50c]        # 0x14000f044
   140003b38:	test   al,0x1
   140003b3a:	je     0x140003b59
   140003b3c:	xor    edx,edx
   140003b3e:	mov    rcx,r14
   140003b41:	call   0x140004a64
   140003b46:	test   BYTE PTR [rip+0xb4f7],0x10        # 0x14000f044
   140003b4d:	je     0x140003bb1
   140003b4f:	mov    rcx,r14
   140003b52:	call   0x14000460c
   140003b57:	jmp    0x140003bb1
   140003b59:	test   al,0x40
   140003b5b:	je     0x140003b6c
   140003b5d:	mov    edx,0x1
   140003b62:	mov    rcx,r14
   140003b65:	call   0x140004a64
   140003b6a:	jmp    0x140003bb1
   140003b6c:	mov    ecx,DWORD PTR [rip+0xb4b6]        # 0x14000f028
   140003b72:	test   ecx,ecx
   140003b74:	jle    0x140003bb1
   140003b76:	mov    rdx,QWORD PTR [rip+0xb4a3]        # 0x14000f020
   140003b7d:	mov    r8d,DWORD PTR [rip+0xb618]        # 0x14000f19c
   140003b84:	mov    rax,rdx
   140003b87:	cmp    DWORD PTR [rax],r8d
   140003b8a:	je     0x140003b9a
   140003b8c:	inc    ebx
   140003b8e:	add    rax,0x4b0
   140003b94:	cmp    ebx,ecx
   140003b96:	jl     0x140003b87
   140003b98:	jmp    0x140003bb1
   140003b9a:	movsxd rax,ebx
   140003b9d:	imul   rcx,rax,0x4b0
   140003ba4:	add    rcx,rdx
   140003ba7:	je     0x140003bb1
   140003ba9:	mov    rdx,r14
   140003bac:	call   0x140006534
   140003bb1:	mov    rcx,r14
   140003bb4:	call   QWORD PTR [rip+0x688e]        # 0x14000a448
   140003bba:	mov    rcx,rdi
   140003bbd:	jmp    0x140003a4e
   140003bc2:	mov    rcx,QWORD PTR [rip+0xa5a7]        # 0x14000e170
   140003bc9:	lea    rax,[rip+0xa5a0]        # 0x14000e170
   140003bd0:	cmp    rcx,rax
   140003bd3:	je     0x140003c51
   140003bd5:	test   BYTE PTR [rcx+0x1c],0x2
   140003bd9:	je     0x140003c51
   140003bdb:	mov    rcx,QWORD PTR [rcx+0x10]
   140003bdf:	mov    edx,0x28
   140003be4:	mov    DWORD PTR [rsp+0x20],r8d
   140003be9:	call   0x140001464
   140003bee:	jmp    0x140003c51
   140003bf0:	mov    eax,DWORD PTR [rip+0xb4f2]        # 0x14000f0e8
   140003bf6:	mov    r9d,DWORD PTR [rip+0xb4ef]        # 0x14000f0ec
   140003bfd:	mov    r8d,DWORD PTR [rip+0xb58c]        # 0x14000f190
   140003c04:	mov    edx,DWORD PTR [rip+0xb49e]        # 0x14000f0a8
   140003c0a:	mov    DWORD PTR [rsp+0x28],0x1
   140003c12:	mov    DWORD PTR [rsp+0x20],eax
   140003c16:	call   QWORD PTR [rip+0x6544]        # 0x14000a160
   140003c1c:	jmp    0x140003c51
   140003c1e:	call   0x140003d28
   140003c23:	test   eax,eax
   140003c25:	setns  sil
   140003c29:	dec    rsi
   140003c2c:	jmp    0x140003c51
   140003c2e:	call   QWORD PTR [rip+0x64ec]        # 0x14000a120
   140003c34:	mov    rsi,rax
   140003c37:	jmp    0x140003c51
   140003c39:	test   BYTE PTR [rip+0xb404],0x4        # 0x14000f044
   140003c40:	jne    0x140003c51
   140003c42:	cmp    DWORD PTR [rip+0xb53c],ebx        # 0x14000f184
   140003c48:	jne    0x140003c51
   140003c4a:	xor    edx,edx
   140003c4c:	call   0x140003f5c
   140003c51:	mov    rax,rsi
   140003c54:	mov    rcx,QWORD PTR [rbp+0x7]
   140003c58:	xor    rcx,rsp
   140003c5b:	call   0x140009020
   140003c60:	add    rsp,0xf8
   140003c67:	pop    r15
   140003c69:	pop    r14
   140003c6b:	pop    r13
   140003c6d:	pop    r12
   140003c6f:	pop    rdi
   140003c70:	pop    rsi
   140003c71:	pop    rbx
   140003c72:	pop    rbp
   140003c73:	ret    
   140003c74:	int3   
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	sub    rsp,0x88
   140003c87:	mov    ecx,DWORD PTR [rdx]
   140003c89:	sub    ecx,0x2
   140003c8c:	je     0x140003cbe
   140003c8e:	cmp    ecx,0x1
   140003c91:	jne    0x140003d19
   140003c97:	test   BYTE PTR [rip+0xb3a6],0x4        # 0x14000f044
   140003c9e:	jne    0x140003d19
   140003ca0:	cmp    DWORD PTR [rip+0xb4dd],0x0        # 0x14000f184
   140003ca7:	jne    0x140003d19
   140003ca9:	mov    rcx,QWORD PTR [rip+0xab10]        # 0x14000e7c0
   140003cb0:	xor    edx,edx
   140003cb2:	add    rsp,0x88
   140003cb9:	jmp    0x140003f5c
   140003cbe:	cmp    DWORD PTR [rip+0xb4bf],0x0        # 0x14000f184
   140003cc5:	movaps xmm0,XMMWORD PTR [rip+0xaa94]        # 0x14000e760
   140003ccc:	movaps xmm1,XMMWORD PTR [rip+0xaa9d]        # 0x14000e770
   140003cd3:	movaps XMMWORD PTR [rsp+0x20],xmm0
   140003cd8:	movaps xmm0,XMMWORD PTR [rip+0xaaa1]        # 0x14000e780
   140003cdf:	movaps XMMWORD PTR [rsp+0x30],xmm1
   140003ce4:	movaps xmm1,XMMWORD PTR [rip+0xaaa5]        # 0x14000e790
   140003ceb:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140003cf0:	movaps xmm0,XMMWORD PTR [rip+0xaaa9]        # 0x14000e7a0
   140003cf7:	movaps XMMWORD PTR [rsp+0x50],xmm1
   140003cfc:	movaps xmm1,XMMWORD PTR [rip+0xaaad]        # 0x14000e7b0
   140003d03:	movaps XMMWORD PTR [rsp+0x60],xmm0
   140003d08:	movaps XMMWORD PTR [rsp+0x70],xmm1
   140003d0d:	jne    0x140003d19
   140003d0f:	lea    rcx,[rsp+0x20]
   140003d14:	call   0x140007840
   140003d19:	add    rsp,0x88
   140003d20:	ret    
   140003d21:	int3   
   140003d22:	int3   
   140003d23:	int3   
   140003d24:	int3   
   140003d25:	int3   
   140003d26:	int3   
   140003d27:	int3   
   140003d28:	mov    rax,rsp
   140003d2b:	mov    QWORD PTR [rax+0x8],rbx
   140003d2f:	mov    QWORD PTR [rax+0x18],rsi
   140003d33:	mov    QWORD PTR [rax+0x20],r9
   140003d37:	mov    DWORD PTR [rax+0x10],edx
   140003d3a:	push   rdi
   140003d3b:	sub    rsp,0x20
   140003d3f:	and    DWORD PTR [rax+0x20],0x0
   140003d43:	lea    rdx,[rip+0xaa16]        # 0x14000e760
   140003d4a:	and    DWORD PTR [rax+0x10],0x0
   140003d4e:	movzx  esi,r8w
   140003d52:	mov    QWORD PTR [rip+0xaa67],rcx        # 0x14000e7c0
   140003d59:	mov    ecx,esi
   140003d5b:	call   QWORD PTR [rip+0x63cf]        # 0x14000a130
   140003d61:	test   eax,eax
   140003d63:	je     0x140003e16
   140003d69:	xor    r9d,r9d
   140003d6c:	lea    r8,[rsp+0x38]
   140003d71:	lea    rdx,[rsp+0x48]
   140003d76:	mov    ecx,esi
   140003d78:	call   QWORD PTR [rip+0x649a]        # 0x14000a218
   140003d7e:	test   eax,eax
   140003d80:	je     0x140003e16
   140003d86:	mov    ecx,DWORD PTR [rsp+0x48]
   140003d8a:	test   ecx,ecx
   140003d8c:	je     0x140003e16
   140003d92:	mov    eax,DWORD PTR [rsp+0x38]
   140003d96:	test   eax,eax
   140003d98:	je     0x140003e16
   140003d9a:	imul   ecx,eax
   140003d9d:	mov    eax,0x60
   140003da2:	mul    rcx
   140003da5:	mov    rcx,0xffffffffffffffff
   140003dac:	cmovo  rax,rcx
   140003db0:	mov    rcx,rax
   140003db3:	call   0x140008bd8
   140003db8:	mov    rcx,rax
   140003dbb:	mov    rdi,rax
   140003dbe:	neg    rcx
   140003dc1:	sbb    ebx,ebx
   140003dc3:	not    ebx
   140003dc5:	and    ebx,0x8007000e
   140003dcb:	jl     0x140003e07
   140003dcd:	mov    r9,rax
   140003dd0:	lea    r8,[rsp+0x38]
   140003dd5:	lea    rdx,[rsp+0x48]
   140003dda:	mov    ecx,esi
   140003ddc:	call   QWORD PTR [rip+0x6436]        # 0x14000a218
   140003de2:	test   eax,eax
   140003de4:	je     0x140003e07
   140003de6:	mov    r8d,DWORD PTR [rsp+0x38]
   140003deb:	mov    r9,rdi
   140003dee:	mov    edx,DWORD PTR [rsp+0x48]
   140003df2:	mov    rcx,QWORD PTR [rip+0xa95f]        # 0x14000e758
   140003df9:	call   QWORD PTR [rip+0x62d9]        # 0x14000a0d8
   140003dff:	mov    ecx,esi
   140003e01:	call   QWORD PTR [rip+0x63e9]        # 0x14000a1f0
   140003e07:	test   rdi,rdi
   140003e0a:	je     0x140003e1b
   140003e0c:	mov    rcx,rdi
   140003e0f:	call   0x140008be4
   140003e14:	jmp    0x140003e1b
   140003e16:	mov    ebx,0x80004005
   140003e1b:	mov    rsi,QWORD PTR [rsp+0x40]
   140003e20:	mov    eax,ebx
   140003e22:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e27:	add    rsp,0x20
   140003e2b:	pop    rdi
   140003e2c:	ret    
   140003e2d:	int3   
   140003e2e:	int3   
   140003e2f:	int3   
   140003e30:	int3   
   140003e31:	int3   
   140003e32:	int3   
   140003e33:	int3   
   140003e34:	mov    QWORD PTR [rsp+0x8],rbx
   140003e39:	mov    QWORD PTR [rsp+0x10],rbp
   140003e3e:	mov    QWORD PTR [rsp+0x18],rdi
   140003e43:	push   r14
   140003e45:	sub    rsp,0x40
   140003e49:	mov    r10d,DWORD PTR [rip+0xb208]        # 0x14000f058
   140003e50:	xor    ebx,ebx
   140003e52:	imul   r10d,DWORD PTR [rip+0xb266]        # 0x14000f0c0
   140003e5a:	mov    r11d,edx
   140003e5d:	mov    rdi,QWORD PTR [rip+0xb204]        # 0x14000f068
   140003e64:	mov    r14,rcx
   140003e67:	add    r10d,DWORD PTR [rip+0xb216]        # 0x14000f084
   140003e6e:	test   BYTE PTR [rip+0xb1cf],0x8        # 0x14000f044
   140003e75:	jne    0x140003eea
   140003e77:	movsxd rax,r10d
   140003e7a:	lea    rbp,[rax+rax*4]
   140003e7e:	mov    eax,edx
   140003e80:	sub    eax,DWORD PTR [rdi+rbp*4+0x4]
   140003e84:	cdq    
   140003e85:	xor    eax,edx
   140003e87:	sub    eax,edx
   140003e89:	cmp    eax,0x28
   140003e8c:	jge    0x140003e9f
   140003e8e:	mov    eax,r8d
   140003e91:	sub    eax,DWORD PTR [rdi+rbp*4+0x8]
   140003e95:	cdq    
   140003e96:	xor    eax,edx
   140003e98:	sub    eax,edx
   140003e9a:	cmp    eax,0x28
   140003e9d:	jl     0x140003eea
   140003e9f:	mov    rcx,QWORD PTR [rip+0xa2ca]        # 0x14000e170
   140003ea6:	lea    rax,[rip+0xa2c3]        # 0x14000e170
   140003ead:	cmp    rcx,rax
   140003eb0:	je     0x140003edd
   140003eb2:	test   BYTE PTR [rcx+0x1c],0x4
   140003eb6:	je     0x140003edd
   140003eb8:	mov    eax,DWORD PTR [rdi+rbp*4+0x8]
   140003ebc:	mov    edx,0x2a
   140003ec1:	mov    r9d,DWORD PTR [rdi+rbp*4+0x4]
   140003ec6:	mov    rcx,QWORD PTR [rcx+0x10]
   140003eca:	mov    DWORD PTR [rsp+0x30],r8d
   140003ecf:	mov    DWORD PTR [rsp+0x28],r11d
   140003ed4:	mov    DWORD PTR [rsp+0x20],eax
   140003ed8:	call   0x1400014b4
   140003edd:	mov    ecx,0x30
   140003ee2:	call   QWORD PTR [rip+0x6380]        # 0x14000a268
   140003ee8:	jmp    0x140003f3b
   140003eea:	test   BYTE PTR [rip+0xb153],0x41        # 0x14000f044
   140003ef1:	je     0x140003efb
   140003ef3:	mov    r8d,DWORD PTR [rsp+0x70]
   140003ef8:	mov    r11d,r9d
   140003efb:	movsxd rax,r10d
   140003efe:	mov    ebx,0x1
   140003f03:	lea    rcx,[rax+rax*4]
   140003f07:	mov    DWORD PTR [rdi+rcx*4+0xc],r11d
   140003f0c:	mov    rax,QWORD PTR [rip+0xb155]        # 0x14000f068
   140003f13:	mov    DWORD PTR [rax+rcx*4+0x10],r8d
   140003f18:	mov    rdx,QWORD PTR [rip+0xb149]        # 0x14000f068
   140003f1f:	mov    eax,DWORD PTR [rdx+rcx*4]
   140003f22:	test   bl,al
   140003f24:	jne    0x140003f31
   140003f26:	or     eax,ebx
   140003f28:	mov    DWORD PTR [rdx+rcx*4],eax
   140003f2b:	add    DWORD PTR [rip+0xb12f],ebx        # 0x14000f060
   140003f31:	mov    edx,ebx
   140003f33:	mov    rcx,r14
   140003f36:	call   0x140003f5c
   140003f3b:	mov    rbp,QWORD PTR [rsp+0x58]
   140003f40:	mov    eax,ebx
   140003f42:	mov    rbx,QWORD PTR [rsp+0x50]
   140003f47:	mov    rdi,QWORD PTR [rsp+0x60]
   140003f4c:	add    rsp,0x40
   140003f50:	pop    r14
   140003f52:	ret    
   140003f53:	int3   
   140003f54:	int3   
   140003f55:	int3   
   140003f56:	int3   
   140003f57:	int3   
   140003f58:	int3   
   140003f59:	int3   
   140003f5a:	int3   
   140003f5b:	int3   
   140003f5c:	mov    QWORD PTR [rsp+0x8],rbx
   140003f61:	mov    QWORD PTR [rsp+0x10],rsi
   140003f66:	push   rdi
   140003f67:	sub    rsp,0x30
   140003f6b:	mov    eax,DWORD PTR [rip+0xb0e7]        # 0x14000f058
   140003f71:	mov    ebx,edx
   140003f73:	imul   eax,DWORD PTR [rip+0xb146]        # 0x14000f0c0
   140003f7a:	xor    edx,edx
   140003f7c:	mov    rsi,rcx
   140003f7f:	mov    DWORD PTR [rsp+0x20],0x1
   140003f87:	xor    edi,edi
   140003f89:	add    eax,DWORD PTR [rip+0xb0f5]        # 0x14000f084
   140003f8f:	cdqe   
   140003f91:	lea    r8,[rax+rax*4]
   140003f95:	mov    rax,QWORD PTR [rip+0xb0cc]        # 0x14000f068
   140003f9c:	mov    r9d,DWORD PTR [rax+r8*4+0x8]
   140003fa1:	mov    r8d,DWORD PTR [rax+r8*4+0x4]
   140003fa6:	call   0x1400040c4
   140003fab:	mov    r9d,DWORD PTR [rip+0xb0d2]        # 0x14000f084
   140003fb2:	mov    ecx,DWORD PTR [rip+0xb108]        # 0x14000f0c0
   140003fb8:	test   ebx,ebx
   140003fba:	je     0x140003ff9
   140003fbc:	mov    eax,DWORD PTR [rip+0xb096]        # 0x14000f058
   140003fc2:	dec    eax
   140003fc4:	cmp    r9d,eax
   140003fc7:	jge    0x140003fce
   140003fc9:	inc    r9d
   140003fcc:	jmp    0x140004019
   140003fce:	mov    eax,DWORD PTR [rip+0xb088]        # 0x14000f05c
   140003fd4:	dec    eax
   140003fd6:	cmp    ecx,eax
   140003fd8:	jge    0x140003fed
   140003fda:	inc    ecx
   140003fdc:	mov    DWORD PTR [rip+0xb0a2],edi        # 0x14000f084
   140003fe2:	mov    DWORD PTR [rip+0xb0d8],ecx        # 0x14000f0c0
   140003fe8:	mov    r9d,edi
   140003feb:	jmp    0x140004020
   140003fed:	mov    DWORD PTR [rip+0xb18d],0x2        # 0x14000f184
   140003ff7:	jmp    0x140004020
   140003ff9:	test   r9d,r9d
   140003ffc:	jle    0x140004003
   140003ffe:	dec    r9d
   140004001:	jmp    0x140004019
   140004003:	test   ecx,ecx
   140004005:	jle    0x140004020
   140004007:	mov    r9d,DWORD PTR [rip+0xb04a]        # 0x14000f058
   14000400e:	dec    r9d
   140004011:	dec    ecx
   140004013:	mov    DWORD PTR [rip+0xb0a7],ecx        # 0x14000f0c0
   140004019:	mov    DWORD PTR [rip+0xb064],r9d        # 0x14000f084
   140004020:	mov    rax,QWORD PTR [rip+0xa149]        # 0x14000e170
   140004027:	lea    rdx,[rip+0xa142]        # 0x14000e170
   14000402e:	cmp    rax,rdx
   140004031:	je     0x14000404b
   140004033:	test   BYTE PTR [rax+0x1c],0x8
   140004037:	je     0x14000404b
   140004039:	mov    DWORD PTR [rsp+0x20],ecx
   14000403d:	mov    edx,0x2b
   140004042:	mov    rcx,QWORD PTR [rax+0x10]
   140004046:	call   0x140001464
   14000404b:	cmp    DWORD PTR [rip+0xb133],edi        # 0x14000f184
   140004051:	jne    0x1400040a9
   140004053:	mov    rcx,rsi
   140004056:	call   QWORD PTR [rip+0x6234]        # 0x14000a290
   14000405c:	mov    rbx,rax
   14000405f:	mov    DWORD PTR [rsp+0x20],edi
   140004063:	mov    eax,DWORD PTR [rip+0xafef]        # 0x14000f058
   140004069:	mov    rdx,rbx
   14000406c:	imul   eax,DWORD PTR [rip+0xb04d]        # 0x14000f0c0
   140004073:	add    eax,DWORD PTR [rip+0xb00b]        # 0x14000f084
   140004079:	cdqe   
   14000407b:	lea    rcx,[rax+rax*4]
   14000407f:	mov    rax,QWORD PTR [rip+0xafe2]        # 0x14000f068
   140004086:	mov    r9d,DWORD PTR [rax+rcx*4+0x8]
   14000408b:	mov    r8d,DWORD PTR [rax+rcx*4+0x4]
   140004090:	mov    rcx,rsi
   140004093:	call   0x1400040c4
   140004098:	mov    rdx,rbx
   14000409b:	mov    rcx,rsi
   14000409e:	call   QWORD PTR [rip+0x6144]        # 0x14000a1e8
   1400040a4:	mov    edi,0x1
   1400040a9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400040ae:	mov    eax,edi
   1400040b0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400040b5:	add    rsp,0x30
   1400040b9:	pop    rdi
   1400040ba:	ret    
   1400040bb:	int3   
   1400040bc:	int3   
   1400040bd:	int3   
   1400040be:	int3   
   1400040bf:	int3   
   1400040c0:	int3   
   1400040c1:	int3   
   1400040c2:	int3   
   1400040c3:	int3   
   1400040c4:	rex push rbx
   1400040c6:	push   rbp
   1400040c7:	push   rsi
   1400040c8:	push   rdi
   1400040c9:	push   r14
   1400040cb:	sub    rsp,0x40
   1400040cf:	mov    rax,QWORD PTR [rip+0x9f32]        # 0x14000e008
   1400040d6:	xor    rax,rsp
   1400040d9:	mov    QWORD PTR [rsp+0x30],rax
   1400040de:	mov    eax,DWORD PTR [rip+0xb008]        # 0x14000f0ec
   1400040e4:	mov    ebx,r8d
   1400040e7:	sub    eax,r8d
   1400040ea:	mov    ebp,r9d
   1400040ed:	cmp    DWORD PTR [rip+0xaf4c],0x0        # 0x14000f040
   1400040f4:	mov    rdi,rdx
   1400040f7:	cmovne ebx,eax
   1400040fa:	cmp    DWORD PTR [rsp+0x90],0x0
   140004102:	je     0x140004138
   140004104:	lea    eax,[rbx-0x28]
   140004107:	mov    r8d,0x1
   14000410d:	mov    DWORD PTR [rsp+0x20],eax
   140004111:	lea    rdx,[rsp+0x20]
   140004116:	lea    eax,[r9-0x28]
   14000411a:	mov    DWORD PTR [rsp+0x24],eax
   14000411e:	lea    eax,[rbx+0x28]
   140004121:	mov    DWORD PTR [rsp+0x28],eax
   140004125:	lea    eax,[r9+0x28]
   140004129:	mov    DWORD PTR [rsp+0x2c],eax
   14000412d:	call   QWORD PTR [rip+0x60ad]        # 0x14000a1e0
   140004133:	jmp    0x140004209
   140004138:	xor    r14d,r14d
   14000413b:	lea    ecx,[r14+0x8]
   14000413f:	call   QWORD PTR [rip+0x60b3]        # 0x14000a1f8
   140004145:	lea    edx,[r14+0x3]
   140004149:	xor    ecx,ecx
   14000414b:	mov    r8d,eax
   14000414e:	call   QWORD PTR [rip+0x5eac]        # 0x14000a000
   140004154:	mov    rsi,rax
   140004157:	test   rax,rax
   14000415a:	je     0x14000416b
   14000415c:	mov    rdx,rax
   14000415f:	mov    rcx,rdi
   140004162:	call   QWORD PTR [rip+0x5ea0]        # 0x14000a008
   140004168:	mov    r14,rax
   14000416b:	lea    edx,[rbx-0x26]
   14000416e:	xor    r9d,r9d
   140004171:	mov    r8d,ebp
   140004174:	mov    rcx,rdi
   140004177:	call   QWORD PTR [rip+0x5ecb]        # 0x14000a048
   14000417d:	lea    edx,[rbx-0x4]
   140004180:	mov    r8d,ebp
   140004183:	mov    rcx,rdi
   140004186:	call   QWORD PTR [rip+0x5eac]        # 0x14000a038
   14000418c:	lea    edx,[rbx+0x4]
   14000418f:	xor    r9d,r9d
   140004192:	mov    r8d,ebp
   140004195:	mov    rcx,rdi
   140004198:	call   QWORD PTR [rip+0x5eaa]        # 0x14000a048
   14000419e:	lea    edx,[rbx+0x26]
   1400041a1:	mov    r8d,ebp
   1400041a4:	mov    rcx,rdi
   1400041a7:	call   QWORD PTR [rip+0x5e8b]        # 0x14000a038
   1400041ad:	lea    r8d,[rbp-0x26]
   1400041b1:	xor    r9d,r9d
   1400041b4:	mov    edx,ebx
   1400041b6:	mov    rcx,rdi
   1400041b9:	call   QWORD PTR [rip+0x5e89]        # 0x14000a048
   1400041bf:	lea    r8d,[rbp-0x4]
   1400041c3:	mov    edx,ebx
   1400041c5:	mov    rcx,rdi
   1400041c8:	call   QWORD PTR [rip+0x5e6a]        # 0x14000a038
   1400041ce:	lea    r8d,[rbp+0x4]
   1400041d2:	xor    r9d,r9d
   1400041d5:	mov    edx,ebx
   1400041d7:	mov    rcx,rdi
   1400041da:	call   QWORD PTR [rip+0x5e68]        # 0x14000a048
   1400041e0:	lea    r8d,[rbp+0x26]
   1400041e4:	mov    edx,ebx
   1400041e6:	mov    rcx,rdi
   1400041e9:	call   QWORD PTR [rip+0x5e49]        # 0x14000a038
   1400041ef:	test   r14,r14
   1400041f2:	je     0x140004209
   1400041f4:	mov    rdx,r14
   1400041f7:	mov    rcx,rdi
   1400041fa:	call   QWORD PTR [rip+0x5e08]        # 0x14000a008
   140004200:	mov    rcx,rsi
   140004203:	call   QWORD PTR [rip+0x5e07]        # 0x14000a010
   140004209:	mov    rcx,QWORD PTR [rsp+0x30]
   14000420e:	xor    rcx,rsp
   140004211:	call   0x140009020
   140004216:	add    rsp,0x40
   14000421a:	pop    r14
   14000421c:	pop    rdi
   14000421d:	pop    rsi
   14000421e:	pop    rbp
   14000421f:	pop    rbx
   140004220:	ret    
   140004221:	int3   
   140004222:	int3   
   140004223:	int3   
   140004224:	int3   
   140004225:	int3   
   140004226:	int3   
   140004227:	int3   
   140004228:	mov    DWORD PTR [rsp+0x10],edx
   14000422c:	mov    QWORD PTR [rsp+0x8],rcx
   140004231:	push   rbx
   140004232:	push   rbp
   140004233:	push   rsi
   140004234:	push   rdi
   140004235:	push   r12
   140004237:	push   r13
   140004239:	push   r14
   14000423b:	push   r15
   14000423d:	sub    rsp,0x58
   140004241:	mov    edi,DWORD PTR [rip+0xae15]        # 0x14000f05c
   140004247:	mov    r15d,edx
   14000424a:	mov    esi,DWORD PTR [rip+0xae08]        # 0x14000f058
   140004250:	mov    eax,edi
   140004252:	imul   eax,esi
   140004255:	lea    ebp,[rax*8+0x20]
   14000425c:	movsxd r14,ebp
   14000425f:	mov    rcx,r14
   140004262:	call   QWORD PTR [rip+0x61f0]        # 0x14000a458
   140004268:	xor    r13d,r13d
   14000426b:	mov    rbx,rax
   14000426e:	test   rax,rax
   140004271:	je     0x1400045c1
   140004277:	mov    r8,r14
   14000427a:	xor    edx,edx
   14000427c:	mov    rcx,rax
   14000427f:	call   0x140009952
   140004284:	mov    DWORD PTR [rbx],ebp
   140004286:	mov    eax,0x8000
   14000428b:	mov    DWORD PTR [rbx+0x10],eax
   14000428e:	mov    DWORD PTR [rbx+0x14],eax
   140004291:	mov    DWORD PTR [rbx+0x4],0x2
   140004298:	mov    WORD PTR [rbx+0x1c],si
   14000429c:	mov    WORD PTR [rbx+0x1e],di
   1400042a0:	test   r15d,r15d
   1400042a3:	je     0x1400042ad
   1400042a5:	mov    WORD PTR [rbx+0x1c],di
   1400042a9:	mov    WORD PTR [rbx+0x1e],si
   1400042ad:	mov    ecx,DWORD PTR [rip+0xad9d]        # 0x14000f050
   1400042b3:	mov    eax,ecx
   1400042b5:	mov    r15d,DWORD PTR [rip+0xad8c]        # 0x14000f048
   1400042bc:	sub    eax,r15d
   1400042bf:	mov    r8d,DWORD PTR [rip+0xad8e]        # 0x14000f054
   1400042c6:	inc    eax
   1400042c8:	mov    r12d,DWORD PTR [rip+0xad7d]        # 0x14000f04c
   1400042cf:	mov    DWORD PTR [rsp+0xa0],eax
   1400042d6:	mov    eax,r8d
   1400042d9:	sub    eax,r12d
   1400042dc:	inc    eax
   1400042de:	mov    DWORD PTR [rsp+0xb0],eax
   1400042e5:	mov    r10,QWORD PTR [rip+0x9e84]        # 0x14000e170
   1400042ec:	lea    r14,[rip+0x9e7d]        # 0x14000e170
   1400042f3:	cmp    r10,r14
   1400042f6:	je     0x140004333
   1400042f8:	test   BYTE PTR [r10+0x1c],0x8
   1400042fd:	je     0x140004333
   1400042ff:	mov    DWORD PTR [rsp+0x30],r8d
   140004304:	mov    edx,0x2c
   140004309:	mov    DWORD PTR [rsp+0x28],ecx
   14000430d:	mov    r9d,r15d
   140004310:	mov    rcx,QWORD PTR [r10+0x10]
   140004314:	mov    DWORD PTR [rsp+0x20],r12d
   140004319:	call   0x1400014b4
   14000431e:	mov    r10,QWORD PTR [rip+0x9e4b]        # 0x14000e170
   140004325:	mov    r12d,DWORD PTR [rip+0xad20]        # 0x14000f04c
   14000432c:	mov    r15d,DWORD PTR [rip+0xad15]        # 0x14000f048
   140004333:	mov    ebp,r13d
   140004336:	cmp    r13w,WORD PTR [rbx+0x1e]
   14000433b:	jae    0x1400045f2
   140004341:	mov    r9,QWORD PTR [rip+0xad20]        # 0x14000f068
   140004348:	mov    r11d,DWORD PTR [rip+0xad99]        # 0x14000f0e8
   14000434f:	mov    esi,r13d
   140004352:	cmp    r13w,WORD PTR [rbx+0x1c]
   140004357:	jae    0x1400045b1
   14000435d:	movzx  edi,WORD PTR [rbx+0x1c]
   140004361:	mov    r13d,edi
   140004364:	imul   r13d,ebp
   140004368:	add    r13d,esi
   14000436b:	cmp    DWORD PTR [rsp+0xa8],0x0
   140004373:	je     0x140004433
   140004379:	sub    edi,esi
   14000437b:	dec    edi
   14000437d:	imul   edi,DWORD PTR [rip+0xacd4]        # 0x14000f058
   140004384:	add    edi,ebp
   140004386:	cmp    r10,r14
   140004389:	je     0x1400043f9
   14000438b:	test   BYTE PTR [r10+0x1c],0x8
   140004390:	je     0x1400043f9
   140004392:	movsxd rax,edi
   140004395:	mov    edx,0x2d
   14000439a:	lea    rcx,[rax+rax*4]
   14000439e:	mov    eax,DWORD PTR [r9+rcx*4+0x10]
   1400043a3:	sub    r11d,DWORD PTR [r9+rcx*4+0x8]
   1400043a8:	mov    DWORD PTR [rsp+0x40],eax
   1400043ac:	dec    r11d
   1400043af:	mov    eax,DWORD PTR [r9+rcx*4+0xc]
   1400043b4:	mov    DWORD PTR [rsp+0x38],eax
   1400043b8:	mov    eax,DWORD PTR [r9+rcx*4+0x4]
   1400043bd:	mov    r9d,esi
   1400043c0:	mov    rcx,QWORD PTR [r10+0x10]
   1400043c4:	mov    DWORD PTR [rsp+0x30],eax
   1400043c8:	mov    DWORD PTR [rsp+0x28],r11d
   1400043cd:	mov    DWORD PTR [rsp+0x20],ebp
   1400043d1:	call   0x14000151c
   1400043d6:	mov    r9,QWORD PTR [rip+0xac8b]        # 0x14000f068
   1400043dd:	mov    r10,QWORD PTR [rip+0x9d8c]        # 0x14000e170
   1400043e4:	mov    r11d,DWORD PTR [rip+0xacfd]        # 0x14000f0e8
   1400043eb:	mov    r12d,DWORD PTR [rip+0xac5a]        # 0x14000f04c
   1400043f2:	mov    r15d,DWORD PTR [rip+0xac4f]        # 0x14000f048
   1400043f9:	movsxd rax,edi
   1400043fc:	movsxd rcx,r13d
   1400043ff:	lea    r8,[rax+rax*4]
   140004403:	mov    eax,r11d
   140004406:	sub    eax,DWORD PTR [r9+r8*4+0x8]
   14000440b:	dec    eax
   14000440d:	shl    eax,0xf
   140004410:	cdq    
   140004411:	idiv   r11d
   140004414:	mov    edi,eax
   140004416:	mov    eax,DWORD PTR [r9+r8*4+0x4]
   14000441b:	shl    eax,0xf
   14000441e:	add    di,r15w
   140004422:	cdq    
   140004423:	mov    WORD PTR [rbx+rcx*8+0x20],di
   140004428:	idiv   DWORD PTR [rip+0xacbe]        # 0x14000f0ec
   14000442e:	jmp    0x1400044d0
   140004433:	cmp    r10,r14
   140004436:	je     0x1400044a2
   140004438:	test   BYTE PTR [r10+0x1c],0x8
   14000443d:	je     0x1400044a2
   14000443f:	movsxd rax,r13d
   140004442:	mov    edx,0x2e
   140004447:	lea    rcx,[rax+rax*4]
   14000444b:	mov    eax,DWORD PTR [r9+rcx*4+0x10]
   140004450:	mov    DWORD PTR [rsp+0x40],eax
   140004454:	mov    eax,DWORD PTR [r9+rcx*4+0xc]
   140004459:	mov    DWORD PTR [rsp+0x38],eax
   14000445d:	mov    eax,DWORD PTR [r9+rcx*4+0x8]
   140004462:	mov    DWORD PTR [rsp+0x30],eax
   140004466:	mov    eax,DWORD PTR [r9+rcx*4+0x4]
   14000446b:	mov    r9d,esi
   14000446e:	mov    rcx,QWORD PTR [r10+0x10]
   140004472:	mov    DWORD PTR [rsp+0x28],eax
   140004476:	mov    DWORD PTR [rsp+0x20],ebp
   14000447a:	call   0x14000151c
   14000447f:	mov    r9,QWORD PTR [rip+0xabe2]        # 0x14000f068
   140004486:	mov    r10,QWORD PTR [rip+0x9ce3]        # 0x14000e170
   14000448d:	mov    r11d,DWORD PTR [rip+0xac54]        # 0x14000f0e8
   140004494:	mov    r12d,DWORD PTR [rip+0xabb1]        # 0x14000f04c
   14000449b:	mov    r15d,DWORD PTR [rip+0xaba6]        # 0x14000f048
   1400044a2:	movsxd rcx,r13d
   1400044a5:	lea    r8,[rcx+rcx*4]
   1400044a9:	mov    eax,DWORD PTR [r9+r8*4+0x4]
   1400044ae:	shl    eax,0xf
   1400044b1:	cdq    
   1400044b2:	idiv   DWORD PTR [rip+0xac34]        # 0x14000f0ec
   1400044b8:	add    ax,r15w
   1400044bc:	movzx  edi,ax
   1400044bf:	mov    WORD PTR [rbx+rcx*8+0x20],ax
   1400044c4:	mov    eax,DWORD PTR [r9+r8*4+0x8]
   1400044c9:	shl    eax,0xf
   1400044cc:	cdq    
   1400044cd:	idiv   r11d
   1400044d0:	add    ax,r12w
   1400044d4:	lea    r13,[rcx*8+0x22]
   1400044dc:	add    r13,rbx
   1400044df:	mov    WORD PTR [r13+0x0],ax
   1400044e4:	lea    rax,[rcx*8+0x24]
   1400044ec:	add    rax,rbx
   1400044ef:	mov    QWORD PTR [rsp+0xb8],rax
   1400044f7:	mov    eax,DWORD PTR [r9+r8*4+0xc]
   1400044fc:	sub    eax,r15d
   1400044ff:	shl    eax,0xf
   140004502:	cdq    
   140004503:	idiv   DWORD PTR [rsp+0xa0]
   14000450a:	lea    rdx,[rbx+rcx*8]
   14000450e:	mov    WORD PTR [rdx+0x24],ax
   140004512:	lea    rcx,[rcx*8+0x26]
   14000451a:	mov    eax,DWORD PTR [r9+r8*4+0x10]
   14000451f:	add    rcx,rbx
   140004522:	sub    eax,r12d
   140004525:	shl    eax,0xf
   140004528:	cdq    
   140004529:	idiv   DWORD PTR [rsp+0xb0]
   140004530:	mov    WORD PTR [rcx],ax
   140004533:	cmp    r10,r14
   140004536:	je     0x1400045a0
   140004538:	test   BYTE PTR [r10+0x1c],0x8
   14000453d:	je     0x1400045a0
   14000453f:	mov    rcx,QWORD PTR [rsp+0xb8]
   140004547:	mov    edx,0x2f
   14000454c:	movzx  r8d,WORD PTR [r13+0x0]
   140004551:	movzx  r9d,di
   140004555:	movzx  eax,ax
   140004558:	movzx  ecx,WORD PTR [rcx]
   14000455b:	mov    DWORD PTR [rsp+0x40],eax
   14000455f:	mov    DWORD PTR [rsp+0x38],ecx
   140004563:	mov    rcx,QWORD PTR [r10+0x10]
   140004567:	mov    DWORD PTR [rsp+0x30],r8d
   14000456c:	mov    DWORD PTR [rsp+0x28],r9d
   140004571:	mov    r9d,esi
   140004574:	mov    DWORD PTR [rsp+0x20],ebp
   140004578:	call   0x14000151c
   14000457d:	mov    r9,QWORD PTR [rip+0xaae4]        # 0x14000f068
   140004584:	mov    r10,QWORD PTR [rip+0x9be5]        # 0x14000e170
   14000458b:	mov    r11d,DWORD PTR [rip+0xab56]        # 0x14000f0e8
   140004592:	mov    r12d,DWORD PTR [rip+0xaab3]        # 0x14000f04c
   140004599:	mov    r15d,DWORD PTR [rip+0xaaa8]        # 0x14000f048
   1400045a0:	movzx  eax,WORD PTR [rbx+0x1c]
   1400045a4:	inc    esi
   1400045a6:	cmp    esi,eax
   1400045a8:	jl     0x14000435d
   1400045ae:	xor    r13d,r13d
   1400045b1:	movzx  eax,WORD PTR [rbx+0x1e]
   1400045b5:	inc    ebp
   1400045b7:	cmp    ebp,eax
   1400045b9:	jl     0x14000434f
   1400045bf:	jmp    0x1400045f2
   1400045c1:	mov    rcx,QWORD PTR [rip+0x9ba8]        # 0x14000e170
   1400045c8:	lea    r14,[rip+0x9ba1]        # 0x14000e170
   1400045cf:	cmp    rcx,r14
   1400045d2:	je     0x1400045f2
   1400045d4:	test   BYTE PTR [rcx+0x1c],0x2
   1400045d8:	je     0x1400045f2
   1400045da:	mov    rcx,QWORD PTR [rcx+0x10]
   1400045de:	lea    r8,[rip+0x6693]        # 0x14000ac78
   1400045e5:	mov    edx,0x30
   1400045ea:	mov    r9d,ebp
   1400045ed:	call   0x1400011d4
   1400045f2:	mov    rax,rbx
   1400045f5:	add    rsp,0x58
   1400045f9:	pop    r15
   1400045fb:	pop    r14
   1400045fd:	pop    r13
   1400045ff:	pop    r12
   140004601:	pop    rdi
   140004602:	pop    rsi
   140004603:	pop    rbp
   140004604:	pop    rbx
   140004605:	ret    
   140004606:	int3   
   140004607:	int3   
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	mov    QWORD PTR [rsp+0x10],rbx
   140004611:	mov    QWORD PTR [rsp+0x18],rbp
   140004616:	mov    QWORD PTR [rsp+0x20],rsi
   14000461b:	push   rdi
   14000461c:	push   r12
   14000461e:	push   r15
   140004620:	sub    rsp,0x50
   140004624:	mov    rax,QWORD PTR [rip+0x99dd]        # 0x14000e008
   14000462b:	xor    rax,rsp
   14000462e:	mov    QWORD PTR [rsp+0x40],rax
   140004633:	xor    r12d,r12d
   140004636:	lea    rbp,[rip+0x9b33]        # 0x14000e170
   14000463d:	mov    ebx,r12d
   140004640:	mov    rdi,rcx
   140004643:	mov    esi,0x1
   140004648:	mov    ecx,DWORD PTR [rip+0xa9f6]        # 0x14000f044
   14000464e:	lea    rdx,[rip+0x6383]        # 0x14000a9d8
   140004655:	and    cl,0x20
   140004658:	lea    rax,[rip+0x637d]        # 0x14000a9dc
   14000465f:	mov    r9d,ebx
   140004662:	lea    r8,[rip+0x6377]        # 0x14000a9e0
   140004669:	cmovne rax,rdx
   14000466d:	lea    rcx,[rsp+0x30]
   140004672:	mov    edx,0x10
   140004677:	mov    QWORD PTR [rsp+0x20],rax
   14000467c:	mov    r15d,ebx
   14000467f:	call   0x1400010b4
   140004684:	test   eax,eax
   140004686:	jne    0x14000469a
   140004688:	lea    rcx,[rsp+0x30]
   14000468d:	call   QWORD PTR [rip+0x5c2d]        # 0x14000a2c0
   140004693:	cmp    eax,0xffffffff
   140004696:	je     0x1400046cf
   140004698:	jmp    0x1400046c4
   14000469a:	mov    rcx,QWORD PTR [rip+0x9acf]        # 0x14000e170
   1400046a1:	cmp    rcx,rbp
   1400046a4:	je     0x1400046c4
   1400046a6:	test   BYTE PTR [rcx+0x1c],0x2
   1400046aa:	je     0x1400046c4
   1400046ac:	mov    rcx,QWORD PTR [rcx+0x10]
   1400046b0:	lea    r8,[rip+0x65c1]        # 0x14000ac78
   1400046b7:	mov    edx,0x31
   1400046bc:	mov    r9d,eax
   1400046bf:	call   0x1400011d4
   1400046c4:	add    ebx,esi
   1400046c6:	cmp    ebx,0xa
   1400046c9:	jl     0x140004648
   1400046cf:	lea    rdx,[rip+0x631a]        # 0x14000a9f0
   1400046d6:	lea    rcx,[rsp+0x30]
   1400046db:	call   QWORD PTR [rip+0x5e6f]        # 0x14000a550
   1400046e1:	mov    rbx,rax
   1400046e4:	test   rax,rax
   1400046e7:	je     0x1400049f3
   1400046ed:	test   BYTE PTR [rip+0xa950],0x20        # 0x14000f044
   1400046f4:	mov    rcx,rax
   1400046f7:	je     0x140004754
   1400046f9:	mov    r8,QWORD PTR [rip+0x9a78]        # 0x14000e178
   140004700:	lea    rdx,[rip+0x62ed]        # 0x14000a9f4
   140004707:	add    r8,0x50
   14000470b:	call   QWORD PTR [rip+0x5e37]        # 0x14000a548
   140004711:	mov    ebp,r12d
   140004714:	cmp    DWORD PTR [rdi],r12d
   140004717:	jbe    0x140004736
   140004719:	mov    eax,ebp
   14000471b:	lea    rdx,[rip+0x62d6]        # 0x14000a9f8
   140004722:	mov    rcx,rbx
   140004725:	movzx  r8d,BYTE PTR [rax+rdi*1]
   14000472a:	call   QWORD PTR [rip+0x5e18]        # 0x14000a548
   140004730:	add    ebp,esi
   140004732:	cmp    ebp,DWORD PTR [rdi]
   140004734:	jb     0x140004719
   140004736:	lea    rdx,[rip+0x62c3]        # 0x14000aa00
   14000473d:	mov    rcx,rbx
   140004740:	call   QWORD PTR [rip+0x5e02]        # 0x14000a548
   140004746:	mov    rcx,rbx
   140004749:	call   QWORD PTR [rip+0x5dd9]        # 0x14000a528
   14000474f:	jmp    0x140004a31
   140004754:	lea    rdx,[rip+0x62ad]        # 0x14000aa08
   14000475b:	call   QWORD PTR [rip+0x5de7]        # 0x14000a548
   140004761:	mov    eax,DWORD PTR [rip+0xa8dd]        # 0x14000f044
   140004767:	lea    rcx,[rip+0x62c2]        # 0x14000aa30
   14000476e:	and    al,sil
   140004771:	lea    r8,[rip+0x6308]        # 0x14000aa80
   140004778:	lea    rdx,[rip+0x6339]        # 0x14000aab8
   14000477f:	cmovne r8,rcx
   140004783:	mov    rcx,rbx
   140004786:	call   QWORD PTR [rip+0x5dbc]        # 0x14000a548
   14000478c:	test   BYTE PTR [rip+0xa8b1],sil        # 0x14000f044
   140004793:	mov    rcx,rbx
   140004796:	je     0x1400047b2
   140004798:	mov    r8,QWORD PTR [rip+0x99d9]        # 0x14000e178
   14000479f:	lea    rdx,[rip+0x631a]        # 0x14000aac0
   1400047a6:	add    r8,0x50
   1400047aa:	call   QWORD PTR [rip+0x5d98]        # 0x14000a548
   1400047b0:	jmp    0x1400047d4
   1400047b2:	mov    eax,DWORD PTR [rip+0xa930]        # 0x14000f0e8
   1400047b8:	lea    rdx,[rip+0x6311]        # 0x14000aad0
   1400047bf:	cmp    DWORD PTR [rip+0xa927],eax        # 0x14000f0ec
   1400047c5:	jg     0x1400047ce
   1400047c7:	lea    rdx,[rip+0x631a]        # 0x14000aae8
   1400047ce:	call   QWORD PTR [rip+0x5d74]        # 0x14000a548
   1400047d4:	mov    ebp,r12d
   1400047d7:	cmp    DWORD PTR [rdi],r12d
   1400047da:	jbe    0x140004827
   1400047dc:	test   ebp,ebp
   1400047de:	je     0x1400047f6
   1400047e0:	test   bpl,0xf
   1400047e4:	jne    0x1400047f6
   1400047e6:	lea    rdx,[rip+0x630b]        # 0x14000aaf8
   1400047ed:	mov    rcx,rbx
   1400047f0:	call   QWORD PTR [rip+0x5d52]        # 0x14000a548
   1400047f6:	mov    eax,ebp
   1400047f8:	lea    rdx,[rip+0x61f9]        # 0x14000a9f8
   1400047ff:	mov    rcx,rbx
   140004802:	movzx  r8d,BYTE PTR [rax+rdi*1]
   140004807:	call   QWORD PTR [rip+0x5d3b]        # 0x14000a548
   14000480d:	inc    ebp
   14000480f:	cmp    ebp,DWORD PTR [rdi]
   140004811:	jae    0x140004827
   140004813:	lea    rdx,[rip+0x62f2]        # 0x14000ab0c
   14000481a:	mov    rcx,rbx
   14000481d:	call   QWORD PTR [rip+0x5d25]        # 0x14000a548
   140004823:	cmp    ebp,DWORD PTR [rdi]
   140004825:	jb     0x1400047dc
   140004827:	lea    rdx,[rip+0x61d2]        # 0x14000aa00
   14000482e:	mov    rcx,rbx
   140004831:	call   QWORD PTR [rip+0x5d11]        # 0x14000a548
   140004837:	mov    rcx,rbx
   14000483a:	call   QWORD PTR [rip+0x5ce8]        # 0x14000a528
   140004840:	mov    r9d,r15d
   140004843:	lea    r8,[rip+0x62c6]        # 0x14000ab10
   14000484a:	mov    edx,0x10
   14000484f:	lea    rcx,[rsp+0x30]
   140004854:	call   0x1400010b4
   140004859:	test   eax,eax
   14000485b:	jne    0x1400049c0
   140004861:	lea    rdx,[rip+0x6188]        # 0x14000a9f0
   140004868:	lea    rcx,[rsp+0x30]
   14000486d:	call   QWORD PTR [rip+0x5cdd]        # 0x14000a550
   140004873:	mov    rbx,rax
   140004876:	test   rax,rax
   140004879:	je     0x140004989
   14000487f:	mov    ebp,r12d
   140004882:	cmp    r12w,WORD PTR [rdi+0x1c]
   140004887:	jae    0x1400048a6
   140004889:	mov    r8d,ebp
   14000488c:	lea    rdx,[rip+0x628d]        # 0x14000ab20
   140004893:	mov    rcx,rbx
   140004896:	call   QWORD PTR [rip+0x5cac]        # 0x14000a548
   14000489c:	movzx  eax,WORD PTR [rdi+0x1c]
   1400048a0:	add    ebp,esi
   1400048a2:	cmp    ebp,eax
   1400048a4:	jl     0x140004889
   1400048a6:	lea    rdx,[rip+0x6153]        # 0x14000aa00
   1400048ad:	mov    rcx,rbx
   1400048b0:	call   QWORD PTR [rip+0x5c92]        # 0x14000a548
   1400048b6:	mov    ebp,r12d
   1400048b9:	cmp    r12w,WORD PTR [rdi+0x1e]
   1400048be:	jae    0x14000497b
   1400048c4:	mov    r8d,ebp
   1400048c7:	lea    rdx,[rip+0x625a]        # 0x14000ab28
   1400048ce:	mov    rcx,rbx
   1400048d1:	call   QWORD PTR [rip+0x5c71]        # 0x14000a548
   1400048d7:	movzx  eax,WORD PTR [rdi+0x1c]
   1400048db:	mov    r15d,r12d
   1400048de:	test   eax,eax
   1400048e0:	jle    0x140004912
   1400048e2:	imul   eax,ebp
   1400048e5:	lea    rdx,[rip+0x6240]        # 0x14000ab2c
   1400048ec:	mov    rcx,rbx
   1400048ef:	add    eax,r15d
   1400048f2:	cdqe   
   1400048f4:	movzx  r9d,WORD PTR [rdi+rax*8+0x22]
   1400048fa:	movzx  r8d,WORD PTR [rdi+rax*8+0x20]
   140004900:	call   QWORD PTR [rip+0x5c42]        # 0x14000a548
   140004906:	movzx  eax,WORD PTR [rdi+0x1c]
   14000490a:	add    r15d,esi
   14000490d:	cmp    r15d,eax
   140004910:	jl     0x1400048e2
   140004912:	lea    rdx,[rip+0x60e7]        # 0x14000aa00
   140004919:	mov    rcx,rbx
   14000491c:	call   QWORD PTR [rip+0x5c26]        # 0x14000a548
   140004922:	movzx  eax,WORD PTR [rdi+0x1c]
   140004926:	mov    r15d,r12d
   140004929:	test   eax,eax
   14000492b:	jle    0x14000495d
   14000492d:	imul   eax,ebp
   140004930:	lea    rdx,[rip+0x61f5]        # 0x14000ab2c
   140004937:	mov    rcx,rbx
   14000493a:	add    eax,r15d
   14000493d:	cdqe   
   14000493f:	movzx  r9d,WORD PTR [rdi+rax*8+0x26]
   140004945:	movzx  r8d,WORD PTR [rdi+rax*8+0x24]
   14000494b:	call   QWORD PTR [rip+0x5bf7]        # 0x14000a548
   140004951:	movzx  eax,WORD PTR [rdi+0x1c]
   140004955:	add    r15d,esi
   140004958:	cmp    r15d,eax
   14000495b:	jl     0x14000492d
   14000495d:	lea    rdx,[rip+0x609c]        # 0x14000aa00
   140004964:	mov    rcx,rbx
   140004967:	call   QWORD PTR [rip+0x5bdb]        # 0x14000a548
   14000496d:	movzx  eax,WORD PTR [rdi+0x1e]
   140004971:	add    ebp,esi
   140004973:	cmp    ebp,eax
   140004975:	jl     0x1400048c4
   14000497b:	mov    rcx,rbx
   14000497e:	call   QWORD PTR [rip+0x5ba4]        # 0x14000a528
   140004984:	jmp    0x140004a34
   140004989:	mov    rcx,QWORD PTR [rip+0xa708]        # 0x14000f098
   140004990:	lea    r9,[rsp+0x30]
   140004995:	xor    edx,edx
   140004997:	lea    r8d,[rdx+0x2]
   14000499b:	call   0x140004ae4
   1400049a0:	mov    rcx,QWORD PTR [rip+0x97c9]        # 0x14000e170
   1400049a7:	lea    rdx,[rip+0x97c2]        # 0x14000e170
   1400049ae:	cmp    rcx,rdx
   1400049b1:	je     0x140004a31
   1400049b3:	test   BYTE PTR [rcx+0x1c],0x4
   1400049b7:	je     0x140004a31
   1400049b9:	mov    edx,0x33
   1400049be:	jmp    0x140004a21
   1400049c0:	mov    rcx,QWORD PTR [rip+0x97a9]        # 0x14000e170
   1400049c7:	lea    rdx,[rip+0x97a2]        # 0x14000e170
   1400049ce:	cmp    rcx,rdx
   1400049d1:	je     0x140004a34
   1400049d3:	test   BYTE PTR [rcx+0x1c],0x2
   1400049d7:	je     0x140004a34
   1400049d9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400049dd:	lea    r8,[rip+0x6294]        # 0x14000ac78
   1400049e4:	mov    edx,0x34
   1400049e9:	mov    r9d,eax
   1400049ec:	call   0x1400011d4
   1400049f1:	jmp    0x140004a34
   1400049f3:	mov    rcx,QWORD PTR [rip+0xa69e]        # 0x14000f098
   1400049fa:	lea    r9,[rsp+0x30]
   1400049ff:	xor    edx,edx
   140004a01:	lea    r8d,[rdx+0x2]
   140004a05:	call   0x140004ae4
   140004a0a:	mov    rcx,QWORD PTR [rip+0x975f]        # 0x14000e170
   140004a11:	cmp    rcx,rbp
   140004a14:	je     0x140004a31
   140004a16:	test   BYTE PTR [rcx+0x1c],0x4
   140004a1a:	je     0x140004a31
   140004a1c:	mov    edx,0x32
   140004a21:	mov    rcx,QWORD PTR [rcx+0x10]
   140004a25:	lea    r8,[rip+0x624c]        # 0x14000ac78
   140004a2c:	call   0x1400011b0
   140004a31:	mov    esi,r12d
   140004a34:	mov    eax,esi
   140004a36:	mov    rcx,QWORD PTR [rsp+0x40]
   140004a3b:	xor    rcx,rsp
   140004a3e:	call   0x140009020
   140004a43:	lea    r11,[rsp+0x50]
   140004a48:	mov    rbx,QWORD PTR [r11+0x28]
   140004a4c:	mov    rbp,QWORD PTR [r11+0x30]
   140004a50:	mov    rsi,QWORD PTR [r11+0x38]
   140004a54:	mov    rsp,r11
   140004a57:	pop    r15
   140004a59:	pop    r12
   140004a5b:	pop    rdi
   140004a5c:	ret    
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	int3   
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	mov    QWORD PTR [rsp+0x8],rbx
   140004a69:	mov    QWORD PTR [rsp+0x10],rsi
   140004a6e:	push   rdi
   140004a6f:	sub    rsp,0x20
   140004a73:	mov    rax,QWORD PTR [rip+0x96fe]        # 0x14000e178
   140004a7a:	xor    ebx,ebx
   140004a7c:	mov    r8,rcx
   140004a7f:	mov    edi,ebx
   140004a81:	mov    esi,0x80004005
   140004a86:	cmp    QWORD PTR [rax],rbx
   140004a89:	cmove  edi,esi
   140004a8c:	neg    edx
   140004a8e:	mov    edx,DWORD PTR [rcx]
   140004a90:	mov    rcx,QWORD PTR [rax]
   140004a93:	sbb    r9d,r9d
   140004a96:	neg    r9d
   140004a99:	inc    r9d
   140004a9c:	call   QWORD PTR [rip+0x57be]        # 0x14000a260
   140004aa2:	test   eax,eax
   140004aa4:	jne    0x140004ac1
   140004aa6:	call   QWORD PTR [rip+0x57f4]        # 0x14000a2a0
   140004aac:	movzx  ecx,ax
   140004aaf:	mov    edi,esi
   140004ab1:	or     ecx,0x80070000
   140004ab7:	test   eax,eax
   140004ab9:	cmovle ecx,eax
   140004abc:	test   ecx,ecx
   140004abe:	cmovs  edi,ecx
   140004ac1:	call   0x1400083a4
   140004ac6:	mov    rsi,QWORD PTR [rsp+0x38]
   140004acb:	test   edi,edi
   140004acd:	setns  bl
   140004ad0:	mov    eax,ebx
   140004ad2:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ad7:	add    rsp,0x20
   140004adb:	pop    rdi
   140004adc:	ret    
   140004add:	int3   
   140004ade:	int3   
   140004adf:	int3   
   140004ae0:	int3   
   140004ae1:	int3   
   140004ae2:	int3   
   140004ae3:	int3   
   140004ae4:	mov    DWORD PTR [rsp+0x18],r8d
   140004ae9:	mov    QWORD PTR [rsp+0x20],r9
   140004aee:	push   rbx
   140004aef:	push   rsi
   140004af0:	push   rdi
   140004af1:	sub    rsp,0x20
   140004af5:	xor    ebx,ebx
   140004af7:	mov    eax,r8d
   140004afa:	test   BYTE PTR [rip+0xa543],0x4        # 0x14000f044
   140004b01:	mov    rdi,rdx
   140004b04:	jne    0x140004b84
   140004b06:	mov    r9d,0x400
   140004b0c:	lea    r8,[rip+0xae8d]        # 0x14000f9a0
   140004b13:	mov    edx,eax
   140004b15:	call   QWORD PTR [rip+0x56e5]        # 0x14000a200
   140004b1b:	mov    esi,0x3ff
   140004b20:	lea    r9,[rsp+0x58]
   140004b25:	mov    edx,esi
   140004b27:	lea    r8,[rip+0xae72]        # 0x14000f9a0
   140004b2e:	lea    rcx,[rip+0xa66b]        # 0x14000f1a0
   140004b35:	call   QWORD PTR [rip+0x5a05]        # 0x14000a540
   140004b3b:	test   eax,eax
   140004b3d:	js     0x140004b7d
   140004b3f:	cdqe   
   140004b41:	cmp    rax,rsi
   140004b44:	ja     0x140004b7d
   140004b46:	jne    0x140004b4f
   140004b48:	mov    WORD PTR [rip+0xae4f],bx        # 0x14000f99e
   140004b4f:	lea    rcx,[rip+0xa64a]        # 0x14000f1a0
   140004b56:	call   QWORD PTR [rip+0x5534]        # 0x14000a090
   140004b5c:	mov    r9d,0x10
   140004b62:	lea    r8,[rip+0xa597]        # 0x14000f100
   140004b69:	lea    rdx,[rip+0xa630]        # 0x14000f1a0
   140004b70:	mov    rcx,rdi
   140004b73:	mov    ebx,eax
   140004b75:	call   QWORD PTR [rip+0x55cd]        # 0x14000a148
   140004b7b:	jmp    0x140004b84
   140004b7d:	mov    WORD PTR [rip+0xae1a],bx        # 0x14000f99e
   140004b84:	mov    eax,ebx
   140004b86:	add    rsp,0x20
   140004b8a:	pop    rdi
   140004b8b:	pop    rsi
   140004b8c:	pop    rbx
   140004b8d:	ret    
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	int3   
   140004b91:	int3   
   140004b92:	int3   
   140004b93:	int3   
   140004b94:	mov    rax,rsp
   140004b97:	mov    QWORD PTR [rax+0x8],rbx
   140004b9b:	mov    QWORD PTR [rax+0x10],rsi
   140004b9f:	mov    QWORD PTR [rax+0x18],rdi
   140004ba3:	push   rbp
   140004ba4:	lea    rbp,[rax-0x38]
   140004ba8:	sub    rsp,0x130
   140004baf:	mov    rax,QWORD PTR [rip+0x9452]        # 0x14000e008
   140004bb6:	xor    rax,rsp
   140004bb9:	mov    QWORD PTR [rbp+0x20],rax
   140004bbd:	xor    esi,esi
   140004bbf:	lea    rcx,[rsp+0x42]
   140004bc4:	xor    edx,edx
   140004bc6:	mov    WORD PTR [rsp+0x40],si
   140004bcb:	mov    ebx,esi
   140004bcd:	lea    r8d,[rsi+0x3e]
   140004bd1:	call   0x140009952
   140004bd6:	xor    edx,edx
   140004bd8:	lea    rcx,[rbp-0x80]
   140004bdc:	mov    r8d,0x9c
   140004be2:	call   0x140009952
   140004be7:	test   BYTE PTR [rip+0xa456],0x40        # 0x14000f044
   140004bee:	je     0x140004c69
   140004bf0:	mov    rcx,QWORD PTR [rip+0xa591]        # 0x14000f188
   140004bf7:	lea    edi,[rsi+0x4]
   140004bfa:	mov    r9d,edi
   140004bfd:	mov    DWORD PTR [rbp-0x7c],0xdc
   140004c04:	lea    r8,[rsp+0x40]
   140004c09:	or     edx,0xffffffff
   140004c0c:	call   QWORD PTR [rip+0x565e]        # 0x14000a270
   140004c12:	test   eax,eax
   140004c14:	je     0x140004c69
   140004c16:	mov    eax,DWORD PTR [rbp-0x78]
   140004c19:	test   al,al
   140004c1b:	jns    0x140004c69
   140004c1d:	mov    ecx,DWORD PTR [rbp-0x6c]
   140004c20:	test   ecx,ecx
   140004c22:	je     0x140004c69
   140004c24:	cmp    ecx,0x2
   140004c27:	je     0x140004c3a
   140004c29:	mov    eax,DWORD PTR [rbp-0x10]
   140004c2c:	mov    ecx,DWORD PTR [rbp-0x14]
   140004c2f:	mov    DWORD PTR [rbp-0x14],eax
   140004c32:	mov    eax,0x180000
   140004c37:	mov    DWORD PTR [rbp-0x10],ecx
   140004c3a:	mov    rcx,QWORD PTR [rip+0xa547]        # 0x14000f188
   140004c41:	lea    rdx,[rsp+0x40]
   140004c46:	bts    eax,0x7
   140004c4a:	mov    DWORD PTR [rbp-0x6c],esi
   140004c4d:	mov    r9d,edi
   140004c50:	mov    DWORD PTR [rbp-0x78],eax
   140004c53:	xor    r8d,r8d
   140004c56:	mov    QWORD PTR [rsp+0x20],rsi
   140004c5b:	call   QWORD PTR [rip+0x55cf]        # 0x14000a230
   140004c61:	test   eax,eax
   140004c63:	jne    0x140004dc3
   140004c69:	xor    ecx,ecx
   140004c6b:	call   QWORD PTR [rip+0x54cf]        # 0x14000a140
   140004c71:	mov    ecx,0x1
   140004c76:	mov    DWORD PTR [rip+0xa470],eax        # 0x14000f0ec
   140004c7c:	call   QWORD PTR [rip+0x54be]        # 0x14000a140
   140004c82:	mov    ecx,0x4e
   140004c87:	mov    DWORD PTR [rip+0xa45b],eax        # 0x14000f0e8
   140004c8d:	call   QWORD PTR [rip+0x54ad]        # 0x14000a140
   140004c93:	mov    ecx,0x4f
   140004c98:	mov    edi,eax
   140004c9a:	call   QWORD PTR [rip+0x54a0]        # 0x14000a140
   140004ca0:	mov    r10d,DWORD PTR [rip+0xa445]        # 0x14000f0ec
   140004ca7:	mov    r8d,eax
   140004caa:	mov    r9d,DWORD PTR [rip+0xa437]        # 0x14000f0e8
   140004cb1:	test   r10d,r10d
   140004cb4:	je     0x140004d8b
   140004cba:	test   r9d,r9d
   140004cbd:	je     0x140004d8b
   140004cc3:	test   edi,edi
   140004cc5:	je     0x140004d8b
   140004ccb:	test   eax,eax
   140004ccd:	je     0x140004d8b
   140004cd3:	cmp    QWORD PTR [rip+0xa4ae],rsi        # 0x14000f188
   140004cda:	je     0x140004d84
   140004ce0:	cmp    r10d,edi
   140004ce3:	jne    0x140004cee
   140004ce5:	cmp    r9d,eax
   140004ce8:	je     0x140004d84
   140004cee:	xor    r9d,r9d
   140004cf1:	mov    DWORD PTR [rip+0xa3f5],esi        # 0x14000f0ec
   140004cf7:	lea    r8,[rip+0xf2]        # 0x140004df0
   140004cfe:	mov    DWORD PTR [rip+0xa3e4],esi        # 0x14000f0e8
   140004d04:	xor    edx,edx
   140004d06:	xor    ecx,ecx
   140004d08:	call   QWORD PTR [rip+0x54a2]        # 0x14000a1b0
   140004d0e:	mov    ebx,eax
   140004d10:	mov    eax,DWORD PTR [rip+0xa3d6]        # 0x14000f0ec
   140004d16:	test   ebx,ebx
   140004d18:	jne    0x140004d23
   140004d1a:	test   eax,eax
   140004d1c:	je     0x140004d33
   140004d1e:	mov    ebx,0x1
   140004d23:	test   eax,eax
   140004d25:	je     0x140004d33
   140004d27:	cmp    DWORD PTR [rip+0xa3bb],esi        # 0x14000f0e8
   140004d2d:	jne    0x140004dc3
   140004d33:	mov    rcx,QWORD PTR [rip+0x9436]        # 0x14000e170
   140004d3a:	lea    rax,[rip+0x942f]        # 0x14000e170
   140004d41:	cmp    rcx,rax
   140004d44:	je     0x140004d61
   140004d46:	test   BYTE PTR [rcx+0x1c],0x2
   140004d4a:	je     0x140004d61
   140004d4c:	mov    rcx,QWORD PTR [rcx+0x10]
   140004d50:	lea    r8,[rip+0x5f21]        # 0x14000ac78
   140004d57:	mov    edx,0x36
   140004d5c:	call   0x1400011b0
   140004d61:	xor    ecx,ecx
   140004d63:	call   QWORD PTR [rip+0x53d7]        # 0x14000a140
   140004d69:	mov    ecx,0x1
   140004d6e:	mov    DWORD PTR [rip+0xa378],eax        # 0x14000f0ec
   140004d74:	call   QWORD PTR [rip+0x53c6]        # 0x14000a140
   140004d7a:	mov    DWORD PTR [rip+0xa368],eax        # 0x14000f0e8
   140004d80:	mov    ebx,esi
   140004d82:	jmp    0x140004dc3
   140004d84:	mov    ebx,0x1
   140004d89:	jmp    0x140004dc3
   140004d8b:	mov    rcx,QWORD PTR [rip+0x93de]        # 0x14000e170
   140004d92:	lea    rax,[rip+0x93d7]        # 0x14000e170
   140004d99:	cmp    rcx,rax
   140004d9c:	je     0x140004dc3
   140004d9e:	test   BYTE PTR [rcx+0x1c],0x2
   140004da2:	je     0x140004dc3
   140004da4:	mov    rcx,QWORD PTR [rcx+0x10]
   140004da8:	mov    edx,0x35
   140004dad:	mov    DWORD PTR [rsp+0x30],r8d
   140004db2:	mov    DWORD PTR [rsp+0x28],edi
   140004db6:	mov    DWORD PTR [rsp+0x20],r9d
   140004dbb:	mov    r9d,r10d
   140004dbe:	call   0x1400014b4
   140004dc3:	mov    eax,ebx
   140004dc5:	mov    rcx,QWORD PTR [rbp+0x20]
   140004dc9:	xor    rcx,rsp
   140004dcc:	call   0x140009020
   140004dd1:	lea    r11,[rsp+0x130]
   140004dd9:	mov    rbx,QWORD PTR [r11+0x10]
   140004ddd:	mov    rsi,QWORD PTR [r11+0x18]
   140004de1:	mov    rdi,QWORD PTR [r11+0x20]
   140004de5:	mov    rsp,r11
   140004de8:	pop    rbp
   140004de9:	ret    
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	int3   
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	mov    QWORD PTR [rsp+0x10],rbx
   140004df5:	push   rdi
   140004df6:	sub    rsp,0xa0
   140004dfd:	mov    rax,QWORD PTR [rip+0x9204]        # 0x14000e008
   140004e04:	xor    rax,rsp
   140004e07:	mov    QWORD PTR [rsp+0x90],rax
   140004e0f:	mov    rdi,rcx
   140004e12:	mov    ebx,0x1
   140004e17:	xor    edx,edx
   140004e19:	lea    rcx,[rsp+0x20]
   140004e1e:	lea    r8d,[rbx+0x67]
   140004e22:	call   0x140009952
   140004e27:	cmp    DWORD PTR [rip+0xa2be],0x0        # 0x14000f0ec
   140004e2e:	mov    DWORD PTR [rsp+0x20],0x68
   140004e36:	je     0x140004e66
   140004e38:	mov    rcx,QWORD PTR [rip+0x9331]        # 0x14000e170
   140004e3f:	lea    rax,[rip+0x932a]        # 0x14000e170
   140004e46:	cmp    rcx,rax
   140004e49:	je     0x140004eba
   140004e4b:	test   BYTE PTR [rcx+0x1c],0x8
   140004e4f:	je     0x140004eba
   140004e51:	mov    rcx,QWORD PTR [rcx+0x10]
   140004e55:	lea    edx,[rbx+0x36]
   140004e58:	lea    r8,[rip+0x5e19]        # 0x14000ac78
   140004e5f:	call   0x1400011b0
   140004e64:	jmp    0x140004eba
   140004e66:	lea    rdx,[rsp+0x20]
   140004e6b:	mov    rcx,rdi
   140004e6e:	call   QWORD PTR [rip+0x52b4]        # 0x14000a128
   140004e74:	test   eax,eax
   140004e76:	je     0x140004ebc
   140004e78:	mov    rcx,QWORD PTR [rip+0xa309]        # 0x14000f188
   140004e7f:	lea    rdx,[rsp+0x48]
   140004e84:	call   QWORD PTR [rip+0x55ae]        # 0x14000a438
   140004e8a:	test   eax,eax
   140004e8c:	jne    0x140004ebc
   140004e8e:	mov    ecx,DWORD PTR [rsp+0x24]
   140004e92:	mov    edx,DWORD PTR [rsp+0x28]
   140004e96:	mov    eax,DWORD PTR [rsp+0x2c]
   140004e9a:	sub    eax,ecx
   140004e9c:	mov    DWORD PTR [rip+0xa206],ecx        # 0x14000f0a8
   140004ea2:	mov    DWORD PTR [rip+0xa244],eax        # 0x14000f0ec
   140004ea8:	mov    eax,DWORD PTR [rsp+0x30]
   140004eac:	sub    eax,edx
   140004eae:	mov    DWORD PTR [rip+0xa2dc],edx        # 0x14000f190
   140004eb4:	mov    DWORD PTR [rip+0xa22e],eax        # 0x14000f0e8
   140004eba:	xor    ebx,ebx
   140004ebc:	mov    eax,ebx
   140004ebe:	mov    rcx,QWORD PTR [rsp+0x90]
   140004ec6:	xor    rcx,rsp
   140004ec9:	call   0x140009020
   140004ece:	mov    rbx,QWORD PTR [rsp+0xb8]
   140004ed6:	add    rsp,0xa0
   140004edd:	pop    rdi
   140004ede:	ret    
   140004edf:	int3   
   140004ee0:	int3   
   140004ee1:	int3   
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	int3   
   140004ee5:	int3   
   140004ee6:	int3   
   140004ee7:	int3   
   140004ee8:	mov    QWORD PTR [rsp+0x8],rbx
   140004eed:	mov    QWORD PTR [rsp+0x10],rbp
   140004ef2:	mov    QWORD PTR [rsp+0x18],rsi
   140004ef7:	push   rdi
   140004ef8:	push   r12
   140004efa:	push   r13
   140004efc:	sub    rsp,0x690
   140004f03:	mov    rax,QWORD PTR [rip+0x90fe]        # 0x14000e008
   140004f0a:	xor    rax,rsp
   140004f0d:	mov    QWORD PTR [rsp+0x680],rax
   140004f15:	mov    ebx,DWORD PTR [rip+0xa129]        # 0x14000f044
   140004f1b:	lea    rcx,[rsp+0x30]
   140004f20:	and    DWORD PTR [rsp+0x30],0x0
   140004f25:	xor    ebp,ebp
   140004f27:	not    ebx
   140004f29:	xor    esi,esi
   140004f2b:	lea    edi,[rbp+0x1]
   140004f2e:	and    ebx,edi
   140004f30:	call   0x140008500
   140004f35:	cmp    DWORD PTR [rsp+0x30],esi
   140004f39:	je     0x140005182
   140004f3f:	cmp    QWORD PTR [rip+0xa172],rsi        # 0x14000f0b8
   140004f46:	je     0x140004f56
   140004f48:	xor    ecx,ecx
   140004f4a:	call   0x140006458
   140004f4f:	mov    ecx,edi
   140004f51:	call   0x1400074d8
   140004f56:	and    QWORD PTR [rsp+0x28],rsi
   140004f5b:	lea    r9,[rsp+0x480]
   140004f63:	mov    rcx,QWORD PTR [rip+0xa136]        # 0x14000f0a0
   140004f6a:	mov    r8d,edi
   140004f6d:	mov    edx,ebx
   140004f6f:	mov    DWORD PTR [rsp+0x20],0x100
   140004f77:	call   0x14000593c
   140004f7c:	mov    rcx,rax
   140004f7f:	mov    rdi,rax
   140004f82:	call   0x140005538
   140004f87:	lea    r13,[rip+0x5cea]        # 0x14000ac78
   140004f8e:	lea    r12,[rip+0x91db]        # 0x14000e170
   140004f95:	test   eax,eax
   140004f97:	jne    0x140004fba
   140004f99:	mov    rcx,QWORD PTR [rip+0x91d0]        # 0x14000e170
   140004fa0:	cmp    rcx,r12
   140004fa3:	je     0x140004fba
   140004fa5:	test   BYTE PTR [rcx+0x1c],0x2
   140004fa9:	je     0x140004fba
   140004fab:	mov    rcx,QWORD PTR [rcx+0x10]
   140004faf:	lea    edx,[rax+0x38]
   140004fb2:	mov    r8,r13
   140004fb5:	call   0x1400011b0
   140004fba:	cmp    rdi,0xffffffffffffffff
   140004fbe:	je     0x140005039
   140004fc0:	test   ebx,ebx
   140004fc2:	jne    0x140004fdc
   140004fc4:	mov    r8,rdi
   140004fc7:	lea    rdx,[rip+0x5bb2]        # 0x14000ab80
   140004fce:	lea    rcx,[rip+0x596b]        # 0x14000a940
   140004fd5:	call   0x1400053dc
   140004fda:	mov    esi,eax
   140004fdc:	mov    r8,rdi
   140004fdf:	lea    rdx,[rip+0x5bba]        # 0x14000aba0
   140004fe6:	lea    rcx,[rip+0x5be3]        # 0x14000abd0
   140004fed:	call   0x1400053dc
   140004ff2:	mov    ebp,eax
   140004ff4:	test   eax,eax
   140004ff6:	jne    0x140005023
   140004ff8:	test   ebx,ebx
   140004ffa:	je     0x140005000
   140004ffc:	test   esi,esi
   140004ffe:	jne    0x140005023
   140005000:	mov    rcx,QWORD PTR [rip+0x9169]        # 0x14000e170
   140005007:	cmp    rcx,r12
   14000500a:	je     0x140005023
   14000500c:	test   BYTE PTR [rcx+0x1c],0x2
   140005010:	je     0x140005023
   140005012:	mov    rcx,QWORD PTR [rcx+0x10]
   140005016:	mov    edx,0x39
   14000501b:	mov    r8,r13
   14000501e:	call   0x1400011b0
   140005023:	mov    rcx,rdi
   140005026:	call   0x1400062cc
   14000502b:	test   rdi,rdi
   14000502e:	je     0x140005039
   140005030:	mov    rcx,rdi
   140005033:	call   QWORD PTR [rip+0x540f]        # 0x14000a448
   140005039:	call   0x140007308
   14000503e:	test   eax,eax
   140005040:	jne    0x140005063
   140005042:	mov    rcx,QWORD PTR [rip+0x9127]        # 0x14000e170
   140005049:	cmp    rcx,r12
   14000504c:	je     0x140005063
   14000504e:	test   BYTE PTR [rcx+0x1c],0x2
   140005052:	je     0x140005063
   140005054:	mov    rcx,QWORD PTR [rcx+0x10]
   140005058:	lea    edx,[rax+0x3a]
   14000505b:	mov    r8,r13
   14000505e:	call   0x1400011b0
   140005063:	test   ebp,ebp
   140005065:	jne    0x140005086
   140005067:	test   ebx,ebx
   140005069:	je     0x14000506f
   14000506b:	test   esi,esi
   14000506d:	jne    0x140005086
   14000506f:	mov    rcx,QWORD PTR [rip+0xa022]        # 0x14000f098
   140005076:	xor    edx,edx
   140005078:	lea    r8d,[rdx+0xa]
   14000507c:	call   0x140004ae4
   140005081:	jmp    0x14000515f
   140005086:	mov    rcx,QWORD PTR [rip+0xa00b]        # 0x14000f098
   14000508d:	lea    r8,[rip+0x976c]        # 0x14000e800
   140005094:	mov    r9d,0x400
   14000509a:	mov    edx,0x9
   14000509f:	call   QWORD PTR [rip+0x515b]        # 0x14000a200
   1400050a5:	xor    r9d,r9d
   1400050a8:	lea    r8,[rip+0xa051]        # 0x14000f100
   1400050af:	lea    rdx,[rip+0x974a]        # 0x14000e800
   1400050b6:	xor    ecx,ecx
   1400050b8:	call   QWORD PTR [rip+0x508a]        # 0x14000a148
   1400050be:	mov    rax,QWORD PTR [rip+0x9fdb]        # 0x14000f0a0
   1400050c5:	lea    rcx,[rsp+0x480]
   1400050cd:	test   rax,rax
   1400050d0:	lea    rdx,[rsp+0x40]
   1400050d5:	cmovne rcx,rax
   1400050d9:	call   0x140007d28
   1400050de:	test   eax,eax
   1400050e0:	js     0x14000515a
   1400050e2:	test   ebx,ebx
   1400050e4:	jne    0x14000511f
   1400050e6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400050eb:	lea    r9d,[rbx+0x1]
   1400050ef:	xor    r8d,r8d
   1400050f2:	xor    edx,edx
   1400050f4:	call   QWORD PTR [rip+0x5166]        # 0x14000a260
   1400050fa:	test   eax,eax
   1400050fc:	jne    0x14000511f
   1400050fe:	mov    rcx,QWORD PTR [rip+0x906b]        # 0x14000e170
   140005105:	cmp    rcx,r12
   140005108:	je     0x14000511f
   14000510a:	test   BYTE PTR [rcx+0x1c],0x2
   14000510e:	je     0x14000511f
   140005110:	mov    rcx,QWORD PTR [rcx+0x10]
   140005114:	lea    edx,[rbx+0x3b]
   140005117:	mov    r8,r13
   14000511a:	call   0x1400011b0
   14000511f:	mov    rcx,QWORD PTR [rsp+0x48]
   140005124:	mov    r9d,0x2
   14000512a:	xor    r8d,r8d
   14000512d:	xor    edx,edx
   14000512f:	call   QWORD PTR [rip+0x512b]        # 0x14000a260
   140005135:	test   eax,eax
   140005137:	jne    0x14000515a
   140005139:	mov    rcx,QWORD PTR [rip+0x9030]        # 0x14000e170
   140005140:	cmp    rcx,r12
   140005143:	je     0x14000515a
   140005145:	test   BYTE PTR [rcx+0x1c],0x2
   140005149:	je     0x14000515a
   14000514b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000514f:	lea    edx,[rax+0x3c]
   140005152:	mov    r8,r13
   140005155:	call   0x1400011b0
   14000515a:	call   0x1400083a4
   14000515f:	mov    rcx,QWORD PTR [rip+0x9f3a]        # 0x14000f0a0
   140005166:	test   rcx,rcx
   140005169:	je     0x140005182
   14000516b:	cmp    QWORD PTR [rip+0x9f45],0x0        # 0x14000f0b8
   140005173:	je     0x140005182
   140005175:	call   0x140008be4
   14000517a:	and    QWORD PTR [rip+0x9f1e],0x0        # 0x14000f0a0
   140005182:	mov    rcx,QWORD PTR [rsp+0x680]
   14000518a:	xor    rcx,rsp
   14000518d:	call   0x140009020
   140005192:	lea    r11,[rsp+0x690]
   14000519a:	mov    rbx,QWORD PTR [r11+0x20]
   14000519e:	mov    rbp,QWORD PTR [r11+0x28]
   1400051a2:	mov    rsi,QWORD PTR [r11+0x30]
   1400051a6:	mov    rsp,r11
   1400051a9:	pop    r13
   1400051ab:	pop    r12
   1400051ad:	pop    rdi
   1400051ae:	ret    
   1400051af:	int3   
   1400051b0:	int3   
   1400051b1:	int3   
   1400051b2:	int3   
   1400051b3:	int3   
   1400051b4:	int3   
   1400051b5:	int3   
   1400051b6:	int3   
   1400051b7:	int3   
   1400051b8:	mov    rax,rsp
   1400051bb:	mov    QWORD PTR [rax+0x18],rbx
   1400051bf:	mov    QWORD PTR [rax+0x20],rbp
   1400051c3:	push   rsi
   1400051c4:	push   rdi
   1400051c5:	push   r13
   1400051c7:	push   r14
   1400051c9:	push   r15
   1400051cb:	sub    rsp,0x40
   1400051cf:	mov    rcx,QWORD PTR [rip+0x9eba]        # 0x14000f090
   1400051d6:	xor    esi,esi
   1400051d8:	and    QWORD PTR [rax-0x40],rsi
   1400051dc:	xor    ebp,ebp
   1400051de:	and    QWORD PTR [rax+0x8],rsi
   1400051e2:	xor    r9d,r9d
   1400051e5:	and    QWORD PTR [rax+0x10],rsi
   1400051e9:	xor    r8d,r8d
   1400051ec:	and    DWORD PTR [rax-0x48],esi
   1400051ef:	xor    r15d,r15d
   1400051f2:	lea    r13d,[rbp+0x1]
   1400051f6:	mov    edx,r13d
   1400051f9:	call   0x14000593c
   1400051fe:	mov    rbx,rax
   140005201:	dec    rax
   140005204:	cmp    rax,0xfffffffffffffffd
   140005208:	ja     0x14000536d
   14000520e:	mov    rdi,QWORD PTR [rbx+0xd0]
   140005215:	cmp    rdi,0xffffffffffffffff
   140005219:	je     0x140005322
   14000521f:	and    QWORD PTR [rsp+0x30],rsi
   140005224:	lea    rax,[rsp+0x70]
   140005229:	lea    r8,[rip+0x5950]        # 0x14000ab80
   140005230:	mov    QWORD PTR [rsp+0x20],rax
   140005235:	xor    edx,edx
   140005237:	mov    rcx,rdi
   14000523a:	call   0x140003124
   14000523f:	test   eax,eax
   140005241:	jne    0x14000524b
   140005243:	mov    ebp,r13d
   140005246:	jmp    0x140005350
   14000524b:	mov    r14,QWORD PTR [rbx+0xd8]
   140005252:	test   r14,r14
   140005255:	je     0x14000528d
   140005257:	lea    rax,[rsp+0x78]
   14000525c:	mov    r8,r14
   14000525f:	mov    QWORD PTR [rsp+0x30],rax
   140005264:	lea    rdx,[rip+0x56d5]        # 0x14000a940
   14000526b:	lea    rax,[rsp+0x70]
   140005270:	mov    rcx,0xffffffff80000002
   140005277:	mov    QWORD PTR [rsp+0x20],rax
   14000527c:	call   0x140003124
   140005281:	test   eax,eax
   140005283:	jne    0x1400052bb
   140005285:	mov    ebp,r13d
   140005288:	jmp    0x140005315
   14000528d:	mov    rcx,QWORD PTR [rip+0x8edc]        # 0x14000e170
   140005294:	lea    rax,[rip+0x8ed5]        # 0x14000e170
   14000529b:	cmp    rcx,rax
   14000529e:	je     0x1400052bb
   1400052a0:	test   BYTE PTR [rcx+0x1c],0x2
   1400052a4:	je     0x1400052bb
   1400052a6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400052aa:	lea    r8,[rip+0x59c7]        # 0x14000ac78
   1400052b1:	mov    edx,0x3d
   1400052b6:	call   0x1400011b0
   1400052bb:	and    QWORD PTR [rsp+0x30],rsi
   1400052c0:	lea    rax,[rsp+0x70]
   1400052c5:	lea    r8,[rip+0x58d4]        # 0x14000aba0
   1400052cc:	mov    QWORD PTR [rsp+0x20],rax
   1400052d1:	xor    edx,edx
   1400052d3:	mov    rcx,rdi
   1400052d6:	call   0x140003124
   1400052db:	test   eax,eax
   1400052dd:	jne    0x1400052e4
   1400052df:	mov    esi,r13d
   1400052e2:	jmp    0x140005350
   1400052e4:	lea    rax,[rsp+0x78]
   1400052e9:	mov    r8,r14
   1400052ec:	mov    QWORD PTR [rsp+0x30],rax
   1400052f1:	lea    rdx,[rip+0x58d8]        # 0x14000abd0
   1400052f8:	lea    rax,[rsp+0x70]
   1400052fd:	mov    rcx,0xffffffff80000002
   140005304:	mov    QWORD PTR [rsp+0x20],rax
   140005309:	call   0x140003124
   14000530e:	test   eax,eax
   140005310:	jne    0x140005350
   140005312:	mov    esi,r13d
   140005315:	mov    rcx,QWORD PTR [rsp+0x78]
   14000531a:	call   QWORD PTR [rip+0x50a0]        # 0x14000a3c0
   140005320:	jmp    0x140005350
   140005322:	mov    rcx,QWORD PTR [rip+0x8e47]        # 0x14000e170
   140005329:	lea    rax,[rip+0x8e40]        # 0x14000e170
   140005330:	cmp    rcx,rax
   140005333:	je     0x14000539b
   140005335:	test   BYTE PTR [rcx+0x1c],0x2
   140005339:	je     0x14000539b
   14000533b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000533f:	lea    r8,[rip+0x5932]        # 0x14000ac78
   140005346:	mov    edx,0x3e
   14000534b:	call   0x1400011b0
   140005350:	mov    rcx,QWORD PTR [rsp+0x70]
   140005355:	test   rcx,rcx
   140005358:	je     0x140005360
   14000535a:	call   QWORD PTR [rip+0x50e8]        # 0x14000a448
   140005360:	test   ebp,ebp
   140005362:	jne    0x140005368
   140005364:	test   esi,esi
   140005366:	je     0x14000539b
   140005368:	mov    r15d,r13d
   14000536b:	jmp    0x14000539b
   14000536d:	mov    rcx,QWORD PTR [rip+0x8dfc]        # 0x14000e170
   140005374:	lea    rax,[rip+0x8df5]        # 0x14000e170
   14000537b:	cmp    rcx,rax
   14000537e:	je     0x14000539b
   140005380:	test   BYTE PTR [rcx+0x1c],0x2
   140005384:	je     0x14000539b
   140005386:	mov    rcx,QWORD PTR [rcx+0x10]
   14000538a:	lea    r8,[rip+0x58e7]        # 0x14000ac78
   140005391:	mov    edx,0x3f
   140005396:	call   0x1400011b0
   14000539b:	cmp    rbx,0xffffffffffffffff
   14000539f:	je     0x1400053b7
   1400053a1:	mov    rcx,rbx
   1400053a4:	call   0x1400062cc
   1400053a9:	test   rbx,rbx
   1400053ac:	je     0x1400053b7
   1400053ae:	mov    rcx,rbx
   1400053b1:	call   QWORD PTR [rip+0x5091]        # 0x14000a448
   1400053b7:	lea    r11,[rsp+0x40]
   1400053bc:	mov    eax,r15d
   1400053bf:	mov    rbx,QWORD PTR [r11+0x40]
   1400053c3:	mov    rbp,QWORD PTR [r11+0x48]
   1400053c7:	mov    rsp,r11
   1400053ca:	pop    r15
   1400053cc:	pop    r14
   1400053ce:	pop    r13
   1400053d0:	pop    rdi
   1400053d1:	pop    rsi
   1400053d2:	ret    
   1400053d3:	int3   
   1400053d4:	int3   
   1400053d5:	int3   
   1400053d6:	int3   
   1400053d7:	int3   
   1400053d8:	int3   
   1400053d9:	int3   
   1400053da:	int3   
   1400053db:	int3   
   1400053dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400053e1:	mov    QWORD PTR [rsp+0x18],rbp
   1400053e6:	push   rsi
   1400053e7:	push   rdi
   1400053e8:	push   r14
   1400053ea:	sub    rsp,0x30
   1400053ee:	xor    ebx,ebx
   1400053f0:	mov    rsi,r8
   1400053f3:	mov    rdi,rcx
   1400053f6:	test   rcx,rcx
   1400053f9:	je     0x14000551a
   1400053ff:	test   rdx,rdx
   140005402:	je     0x14000551a
   140005408:	cmp    r8,0xffffffffffffffff
   14000540c:	je     0x14000551a
   140005412:	mov    rcx,QWORD PTR [rsi+0xd0]
   140005419:	mov    r8,rdx
   14000541c:	xor    edx,edx
   14000541e:	call   QWORD PTR [rip+0x4fb4]        # 0x14000a3d8
   140005424:	lea    r14,[rip+0x8d45]        # 0x14000e170
   14000542b:	mov    ebp,eax
   14000542d:	test   eax,eax
   14000542f:	je     0x140005456
   140005431:	mov    rcx,QWORD PTR [rip+0x8d38]        # 0x14000e170
   140005438:	cmp    rcx,r14
   14000543b:	je     0x140005456
   14000543d:	test   BYTE PTR [rcx+0x1c],0x2
   140005441:	je     0x140005456
   140005443:	mov    rcx,QWORD PTR [rcx+0x10]
   140005447:	lea    edx,[rbx+0x40]
   14000544a:	lea    r8,[rip+0x5827]        # 0x14000ac78
   140005451:	call   0x1400011b0
   140005456:	mov    rsi,QWORD PTR [rsi+0xd8]
   14000545d:	test   rsi,rsi
   140005460:	je     0x140005501
   140005466:	lea    rdx,[rip+0x5763]        # 0x14000abd0
   14000546d:	mov    rcx,rdi
   140005470:	call   QWORD PTR [rip+0x4fc2]        # 0x14000a438
   140005476:	test   eax,eax
   140005478:	jne    0x140005501
   14000547e:	lea    rax,[rsp+0x50]
   140005483:	mov    r9d,0x2001f
   140005489:	xor    r8d,r8d
   14000548c:	mov    QWORD PTR [rsp+0x20],rax
   140005491:	mov    rdx,rdi
   140005494:	mov    rcx,0xffffffff80000002
   14000549b:	call   QWORD PTR [rip+0x4eff]        # 0x14000a3a0
   1400054a1:	test   eax,eax
   1400054a3:	jne    0x1400054f7
   1400054a5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400054aa:	mov    r8,rsi
   1400054ad:	xor    edx,edx
   1400054af:	call   QWORD PTR [rip+0x4f23]        # 0x14000a3d8
   1400054b5:	test   eax,0xfffffffd
   1400054ba:	je     0x1400054e5
   1400054bc:	mov    rcx,QWORD PTR [rip+0x8cad]        # 0x14000e170
   1400054c3:	cmp    rcx,r14
   1400054c6:	je     0x1400054ea
   1400054c8:	test   BYTE PTR [rcx+0x1c],0x2
   1400054cc:	je     0x1400054ea
   1400054ce:	mov    rcx,QWORD PTR [rcx+0x10]
   1400054d2:	lea    r8,[rip+0x579f]        # 0x14000ac78
   1400054d9:	mov    edx,0x41
   1400054de:	call   0x1400011b0
   1400054e3:	jmp    0x1400054ea
   1400054e5:	mov    ebx,0x1
   1400054ea:	mov    rcx,QWORD PTR [rsp+0x50]
   1400054ef:	call   QWORD PTR [rip+0x4ecb]        # 0x14000a3c0
   1400054f5:	jmp    0x14000551a
   1400054f7:	cmp    eax,0x2
   1400054fa:	jne    0x14000551a
   1400054fc:	lea    ebx,[rax-0x1]
   1400054ff:	jmp    0x14000551a
   140005501:	lea    rdx,[rip+0x5438]        # 0x14000a940
   140005508:	mov    rcx,rdi
   14000550b:	call   QWORD PTR [rip+0x4f27]        # 0x14000a438
   140005511:	test   eax,eax
   140005513:	jne    0x14000551a
   140005515:	test   ebp,ebp
   140005517:	sete   bl
   14000551a:	mov    rbp,QWORD PTR [rsp+0x60]
   14000551f:	mov    eax,ebx
   140005521:	mov    rbx,QWORD PTR [rsp+0x58]
   140005526:	add    rsp,0x30
   14000552a:	pop    r14
   14000552c:	pop    rdi
   14000552d:	pop    rsi
   14000552e:	ret    
   14000552f:	int3   
   140005530:	int3   
   140005531:	int3   
   140005532:	int3   
   140005533:	int3   
   140005534:	int3   
   140005535:	int3   
   140005536:	int3   
   140005537:	int3   
   140005538:	mov    QWORD PTR [rsp+0x8],rbx
   14000553d:	push   rbp
   14000553e:	push   rsi
   14000553f:	push   rdi
   140005540:	mov    rbp,rsp
   140005543:	sub    rsp,0x60
   140005547:	xor    ebx,ebx
   140005549:	lea    rax,[rbp+0x38]
   14000554d:	mov    rsi,rcx
   140005550:	mov    QWORD PTR [rbp+0x38],rbx
   140005554:	mov    rcx,0xffffffff80000002
   14000555b:	mov    DWORD PTR [rbp+0x28],ebx
   14000555e:	mov    r9d,0x2001f
   140005564:	mov    DWORD PTR [rbp+0x30],ebx
   140005567:	xor    r8d,r8d
   14000556a:	mov    QWORD PTR [rsp+0x20],rax
   14000556f:	lea    rdx,[rip+0x53ca]        # 0x14000a940
   140005576:	call   QWORD PTR [rip+0x4e24]        # 0x14000a3a0
   14000557c:	test   eax,eax
   14000557e:	jne    0x14000567d
   140005584:	mov    rcx,QWORD PTR [rbp+0x38]
   140005588:	lea    rax,[rbp+0x30]
   14000558c:	mov    QWORD PTR [rsp+0x58],rbx
   140005591:	xor    r9d,r9d
   140005594:	mov    QWORD PTR [rsp+0x50],rbx
   140005599:	xor    r8d,r8d
   14000559c:	mov    QWORD PTR [rsp+0x48],rbx
   1400055a1:	xor    edx,edx
   1400055a3:	mov    QWORD PTR [rsp+0x40],rax
   1400055a8:	lea    rax,[rbp+0x28]
   1400055ac:	mov    QWORD PTR [rsp+0x38],rax
   1400055b1:	mov    QWORD PTR [rsp+0x30],rbx
   1400055b6:	mov    QWORD PTR [rsp+0x28],rbx
   1400055bb:	mov    QWORD PTR [rsp+0x20],rbx
   1400055c0:	call   QWORD PTR [rip+0x4e02]        # 0x14000a3c8
   1400055c6:	test   eax,eax
   1400055c8:	jne    0x140005645
   1400055ca:	mov    ecx,DWORD PTR [rbp+0x28]
   1400055cd:	lea    eax,[rbx+0x8]
   1400055d0:	mul    rcx
   1400055d3:	lea    rcx,[rbx-0x1]
   1400055d7:	cmovo  rax,rcx
   1400055db:	mov    rcx,rax
   1400055de:	call   0x140008bd8
   1400055e3:	mov    rdi,rax
   1400055e6:	test   rax,rax
   1400055e9:	je     0x140005625
   1400055eb:	mov    r8d,DWORD PTR [rbp+0x28]
   1400055ef:	xor    edx,edx
   1400055f1:	shl    r8,0x3
   1400055f5:	mov    rcx,rax
   1400055f8:	call   0x140009952
   1400055fd:	mov    rcx,QWORD PTR [rbp+0x38]
   140005601:	mov    rdx,rsi
   140005604:	mov    r9d,DWORD PTR [rbp+0x30]
   140005608:	mov    r8d,DWORD PTR [rbp+0x28]
   14000560c:	mov    QWORD PTR [rsp+0x20],rcx
   140005611:	mov    rcx,rdi
   140005614:	call   0x140005698
   140005619:	mov    rcx,rdi
   14000561c:	mov    ebx,eax
   14000561e:	call   0x140008be4
   140005623:	jmp    0x140005673
   140005625:	mov    rcx,QWORD PTR [rip+0x8b44]        # 0x14000e170
   14000562c:	lea    rax,[rip+0x8b3d]        # 0x14000e170
   140005633:	cmp    rcx,rax
   140005636:	je     0x140005673
   140005638:	test   BYTE PTR [rcx+0x1c],0x2
   14000563c:	je     0x140005673
   14000563e:	mov    edx,0x42
   140005643:	jmp    0x140005663
   140005645:	mov    rcx,QWORD PTR [rip+0x8b24]        # 0x14000e170
   14000564c:	lea    rax,[rip+0x8b1d]        # 0x14000e170
   140005653:	cmp    rcx,rax
   140005656:	je     0x140005673
   140005658:	test   BYTE PTR [rcx+0x1c],0x2
   14000565c:	je     0x140005673
   14000565e:	mov    edx,0x43
   140005663:	mov    rcx,QWORD PTR [rcx+0x10]
   140005667:	lea    r8,[rip+0x560a]        # 0x14000ac78
   14000566e:	call   0x1400011b0
   140005673:	mov    rcx,QWORD PTR [rbp+0x38]
   140005677:	call   QWORD PTR [rip+0x4d43]        # 0x14000a3c0
   14000567d:	mov    eax,ebx
   14000567f:	mov    rbx,QWORD PTR [rsp+0x80]
   140005687:	add    rsp,0x60
   14000568b:	pop    rdi
   14000568c:	pop    rsi
   14000568d:	pop    rbp
   14000568e:	ret    
   14000568f:	int3   
   140005690:	int3   
   140005691:	int3   
   140005692:	int3   
   140005693:	int3   
   140005694:	int3   
   140005695:	int3   
   140005696:	int3   
   140005697:	int3   
   140005698:	mov    rax,rsp
   14000569b:	mov    QWORD PTR [rax+0x20],rbx
   14000569f:	push   rbp
   1400056a0:	push   rsi
   1400056a1:	push   rdi
   1400056a2:	push   r12
   1400056a4:	push   r13
   1400056a6:	push   r14
   1400056a8:	push   r15
   1400056aa:	sub    rsp,0x50
   1400056ae:	and    DWORD PTR [rax+0x18],0x0
   1400056b2:	xor    edi,edi
   1400056b4:	and    DWORD PTR [rax+0x8],edi
   1400056b7:	xor    ebp,ebp
   1400056b9:	mov    rax,QWORD PTR [rdx+0xd8]
   1400056c0:	mov    esi,0x1
   1400056c5:	mov    QWORD PTR [rsp+0x40],rax
   1400056ca:	mov    r15d,r9d
   1400056cd:	mov    r13d,r8d
   1400056d0:	mov    rbx,rcx
   1400056d3:	mov    DWORD PTR [rsp+0x98],esi
   1400056da:	test   rcx,rcx
   1400056dd:	je     0x1400056e4
   1400056df:	test   rax,rax
   1400056e2:	jne    0x1400056ed
   1400056e4:	xor    esi,esi
   1400056e6:	mov    DWORD PTR [rsp+0x98],esi
   1400056ed:	mov    rcx,0xffffffffffffffff
   1400056f4:	mov    eax,0x8
   1400056f9:	mul    r13
   1400056fc:	mov    r12,r13
   1400056ff:	cmovo  rax,rcx
   140005703:	mov    rcx,rax
   140005706:	call   0x140008bd8
   14000570b:	mov    r14,rax
   14000570e:	test   rax,rax
   140005711:	je     0x140005893
   140005717:	test   esi,esi
   140005719:	je     0x140005893
   14000571f:	mov    r8,r13
   140005722:	xor    edx,edx
   140005724:	shl    r8,0x3
   140005728:	mov    rcx,rax
   14000572b:	call   0x140009952
   140005730:	test   r13d,r13d
   140005733:	je     0x140005818
   140005739:	mov    r12,QWORD PTR [rsp+0x40]
   14000573e:	lea    esi,[r15+0x1]
   140005742:	mov    ecx,esi
   140005744:	mov    eax,0x2
   140005749:	mov    DWORD PTR [rsp+0xa0],esi
   140005750:	mul    rcx
   140005753:	mov    rcx,0xffffffffffffffff
   14000575a:	cmovo  rax,rcx
   14000575e:	mov    rcx,rax
   140005761:	call   0x140008bd8
   140005766:	xor    edx,edx
   140005768:	mov    QWORD PTR [rbx+rdi*8],rax
   14000576c:	test   rax,rax
   14000576f:	je     0x140005803
   140005775:	mov    QWORD PTR [rsp+0x38],rdx
   14000577a:	lea    rcx,[rsp+0x90]
   140005782:	mov    QWORD PTR [rsp+0x30],rdx
   140005787:	lea    r9,[rsp+0xa0]
   14000578f:	mov    QWORD PTR [rsp+0x28],rcx
   140005794:	mov    r8,rax
   140005797:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000579f:	mov    QWORD PTR [rsp+0x20],rdx
   1400057a4:	mov    edx,edi
   1400057a6:	call   QWORD PTR [rip+0x4bec]        # 0x14000a398
   1400057ac:	test   eax,eax
   1400057ae:	jne    0x140005801
   1400057b0:	cmp    DWORD PTR [rsp+0x90],0x3
   1400057b8:	jne    0x140005801
   1400057ba:	mov    rdx,QWORD PTR [rbx+rdi*8]
   1400057be:	mov    rcx,r12
   1400057c1:	call   QWORD PTR [rip+0x4c71]        # 0x14000a438
   1400057c7:	test   eax,eax
   1400057c9:	je     0x1400057f7
   1400057cb:	mov    rcx,QWORD PTR [rbx+rdi*8]
   1400057cf:	lea    rdx,[rip+0x5152]        # 0x14000a928
   1400057d6:	call   QWORD PTR [rip+0x4d7c]        # 0x14000a558
   1400057dc:	test   rax,rax
   1400057df:	jne    0x140005801
   1400057e1:	mov    rcx,QWORD PTR [rbx+rdi*8]
   1400057e5:	lea    rdx,[rip+0x51c4]        # 0x14000a9b0
   1400057ec:	call   QWORD PTR [rip+0x4d66]        # 0x14000a558
   1400057f2:	test   rax,rax
   1400057f5:	jne    0x140005801
   1400057f7:	mov    rax,QWORD PTR [rbx+rdi*8]
   1400057fb:	mov    QWORD PTR [r14+rbp*8],rax
   1400057ff:	inc    ebp
   140005801:	inc    edi
   140005803:	mov    ecx,esi
   140005805:	cmp    edi,r13d
   140005808:	jb     0x140005744
   14000580e:	mov    esi,DWORD PTR [rsp+0x98]
   140005815:	mov    r12,r13
   140005818:	test   ebp,ebp
   14000581a:	je     0x140005870
   14000581c:	mov    rdi,r14
   14000581f:	mov    r8,QWORD PTR [rdi]
   140005822:	xor    edx,edx
   140005824:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000582c:	call   QWORD PTR [rip+0x4ba6]        # 0x14000a3d8
   140005832:	test   eax,eax
   140005834:	je     0x140005866
   140005836:	mov    rcx,QWORD PTR [rip+0x8933]        # 0x14000e170
   14000583d:	lea    rax,[rip+0x892c]        # 0x14000e170
   140005844:	cmp    rcx,rax
   140005847:	je     0x140005864
   140005849:	test   BYTE PTR [rcx+0x1c],0x2
   14000584d:	je     0x140005864
   14000584f:	mov    rcx,QWORD PTR [rcx+0x10]
   140005853:	lea    r8,[rip+0x541e]        # 0x14000ac78
   14000585a:	mov    edx,0x44
   14000585f:	call   0x1400011b0
   140005864:	xor    esi,esi
   140005866:	add    rdi,0x8
   14000586a:	sub    rbp,0x1
   14000586e:	jne    0x14000581f
   140005870:	test   r13d,r13d
   140005873:	je     0x14000588b
   140005875:	mov    rcx,QWORD PTR [rbx]
   140005878:	call   0x140008be4
   14000587d:	and    QWORD PTR [rbx],0x0
   140005881:	lea    rbx,[rbx+0x8]
   140005885:	sub    r12,0x1
   140005889:	jne    0x140005875
   14000588b:	mov    rcx,r14
   14000588e:	call   0x140008be4
   140005893:	mov    eax,esi
   140005895:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000589d:	add    rsp,0x50
   1400058a1:	pop    r15
   1400058a3:	pop    r14
   1400058a5:	pop    r13
   1400058a7:	pop    r12
   1400058a9:	pop    rdi
   1400058aa:	pop    rsi
   1400058ab:	pop    rbp
   1400058ac:	ret    
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	int3   
   1400058b1:	int3   
   1400058b2:	int3   
   1400058b3:	int3   
   1400058b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400058b9:	xor    r11d,r11d
   1400058bc:	lea    rax,[rdx-0x1]
   1400058c0:	cmp    rax,0x7ffffffe
   1400058c6:	mov    r10d,r11d
   1400058c9:	mov    ebx,0x80070057
   1400058ce:	cmova  r10d,ebx
   1400058d2:	test   r10d,r10d
   1400058d5:	js     0x140005924
   1400058d7:	cmp    r9,0x7ffffffe
   1400058de:	jbe    0x1400058e5
   1400058e0:	mov    r10d,ebx
   1400058e3:	jmp    0x140005929
   1400058e5:	mov    r10d,r11d
   1400058e8:	test   rdx,rdx
   1400058eb:	je     0x140005918
   1400058ed:	sub    r9,rdx
   1400058f0:	sub    r8,rcx
   1400058f3:	lea    rax,[r9+rdx*1]
   1400058f7:	test   rax,rax
   1400058fa:	je     0x140005913
   1400058fc:	movzx  eax,WORD PTR [r8+rcx*1]
   140005901:	test   ax,ax
   140005904:	je     0x140005913
   140005906:	mov    WORD PTR [rcx],ax
   140005909:	add    rcx,0x2
   14000590d:	sub    rdx,0x1
   140005911:	jne    0x1400058f3
   140005913:	test   rdx,rdx
   140005916:	jne    0x140005929
   140005918:	sub    rcx,0x2
   14000591c:	mov    r10d,0x8007007a
   140005922:	jmp    0x140005929
   140005924:	test   rdx,rdx
   140005927:	je     0x14000592d
   140005929:	mov    WORD PTR [rcx],r11w
   14000592d:	mov    rbx,QWORD PTR [rsp+0x8]
   140005932:	mov    eax,r10d
   140005935:	ret    
   140005936:	int3   
   140005937:	int3   
   140005938:	int3   
   140005939:	int3   
   14000593a:	int3   
   14000593b:	int3   
   14000593c:	mov    QWORD PTR [rsp+0x10],rbx
   140005941:	push   rbp
   140005942:	push   rsi
   140005943:	push   rdi
   140005944:	push   r12
   140005946:	push   r13
   140005948:	push   r14
   14000594a:	push   r15
   14000594c:	lea    rbp,[rsp-0xb0]
   140005954:	sub    rsp,0x1b0
   14000595b:	mov    rax,QWORD PTR [rip+0x86a6]        # 0x14000e008
   140005962:	xor    rax,rsp
   140005965:	mov    QWORD PTR [rbp+0xa0],rax
   14000596c:	mov    rax,QWORD PTR [rbp+0x118]
   140005973:	xor    edi,edi
   140005975:	mov    DWORD PTR [rsp+0x4c],r8d
   14000597a:	mov    ebx,edi
   14000597c:	mov    DWORD PTR [rsp+0x30],edx
   140005980:	mov    r8d,0xd8
   140005986:	mov    QWORD PTR [rsp+0x58],rcx
   14000598b:	xor    edx,edx
   14000598d:	lea    rcx,[rsp+0x78]
   140005992:	mov    QWORD PTR [rsp+0x60],rax
   140005997:	mov    QWORD PTR [rsp+0x70],rdi
   14000599c:	mov    QWORD PTR [rsp+0x50],r9
   1400059a1:	call   0x140009952
   1400059a6:	lea    rcx,[rsp+0x40]
   1400059ab:	mov    DWORD PTR [rsp+0x34],edi
   1400059af:	mov    r15d,edi
   1400059b2:	mov    DWORD PTR [rsp+0x48],edi
   1400059b6:	mov    r14d,edi
   1400059b9:	call   0x140006458
   1400059be:	lea    rcx,[rbp+0x50]
   1400059c2:	mov    DWORD PTR [rsp+0x3c],eax
   1400059c6:	call   QWORD PTR [rip+0x4694]        # 0x14000a060
   1400059cc:	lea    r9d,[rdi+0x12]
   1400059d0:	xor    r8d,r8d
   1400059d3:	xor    edx,edx
   1400059d5:	lea    rcx,[rbp+0x50]
   1400059d9:	call   QWORD PTR [rip+0xc631]        # 0x140012010
   1400059df:	mov    r13,rax
   1400059e2:	cmp    rax,0xffffffffffffffff
   1400059e6:	je     0x140005f92
   1400059ec:	mov    ecx,0xe0
   1400059f1:	call   QWORD PTR [rip+0x4a61]        # 0x14000a458
   1400059f7:	mov    rbx,rax
   1400059fa:	test   rax,rax
   1400059fd:	je     0x140005f62
   140005a03:	lea    rax,[rbp+0x60]
   140005a07:	mov    DWORD PTR [rsp+0x44],edi
   140005a0b:	xor    r9d,r9d
   140005a0e:	mov    QWORD PTR [rsp+0x20],rax
   140005a13:	lea    r8,[rbp+0x50]
   140005a17:	mov    DWORD PTR [rbp+0x60],0x20
   140005a1e:	xor    edx,edx
   140005a20:	mov    rcx,r13
   140005a23:	mov    r12d,edi
   140005a26:	call   QWORD PTR [rip+0xc604]        # 0x140012030
   140005a2c:	lea    rdi,[rip+0x873d]        # 0x14000e170
   140005a33:	lea    rsi,[rip+0x528e]        # 0x14000acc8
   140005a3a:	test   eax,eax
   140005a3c:	je     0x140005e0b
   140005a42:	lea    rax,[rsp+0x38]
   140005a47:	mov    QWORD PTR [rsp+0x28],r15
   140005a4c:	xor    r9d,r9d
   140005a4f:	mov    QWORD PTR [rsp+0x20],rax
   140005a54:	xor    r8d,r8d
   140005a57:	mov    DWORD PTR [rsp+0x38],r15d
   140005a5c:	lea    rdx,[rbp+0x60]
   140005a60:	mov    DWORD PTR [rbp+0x80],0x20
   140005a6a:	mov    rcx,r13
   140005a6d:	call   QWORD PTR [rip+0xc5a5]        # 0x140012018
   140005a73:	mov    ecx,DWORD PTR [rsp+0x38]
   140005a77:	call   QWORD PTR [rip+0x49db]        # 0x14000a458
   140005a7d:	mov    r14,rax
   140005a80:	test   rax,rax
   140005a83:	je     0x140005afb
   140005a85:	mov    DWORD PTR [rax],0x8
   140005a8b:	lea    rdx,[rbp+0x60]
   140005a8f:	mov    r9d,DWORD PTR [rsp+0x38]
   140005a94:	lea    rax,[rbp+0x80]
   140005a9b:	mov    QWORD PTR [rsp+0x28],rax
   140005aa0:	mov    r8,r14
   140005aa3:	lea    rax,[rsp+0x38]
   140005aa8:	mov    rcx,r13
   140005aab:	mov    QWORD PTR [rsp+0x20],rax
   140005ab0:	call   QWORD PTR [rip+0xc562]        # 0x140012018
   140005ab6:	test   eax,eax
   140005ab8:	jne    0x140005b1e
   140005aba:	mov    rax,QWORD PTR [rip+0x86af]        # 0x14000e170
   140005ac1:	cmp    rax,rdi
   140005ac4:	je     0x140005aed
   140005ac6:	test   BYTE PTR [rax+0x1c],0x2
   140005aca:	je     0x140005aed
   140005acc:	call   QWORD PTR [rip+0x47ce]        # 0x14000a2a0
   140005ad2:	mov    rcx,QWORD PTR [rip+0x8697]        # 0x14000e170
   140005ad9:	mov    edx,0x11
   140005ade:	mov    r9d,eax
   140005ae1:	mov    r8,rsi
   140005ae4:	mov    rcx,QWORD PTR [rcx+0x10]
   140005ae8:	call   0x1400011d4
   140005aed:	mov    rcx,r14
   140005af0:	call   QWORD PTR [rip+0x4952]        # 0x14000a448
   140005af6:	mov    r14,r15
   140005af9:	jmp    0x140005b1e
   140005afb:	mov    rcx,QWORD PTR [rip+0x866e]        # 0x14000e170
   140005b02:	cmp    rcx,rdi
   140005b05:	je     0x140005b25
   140005b07:	test   BYTE PTR [rcx+0x1c],0x2
   140005b0b:	je     0x140005b25
   140005b0d:	mov    rcx,QWORD PTR [rcx+0x10]
   140005b11:	mov    edx,0x12
   140005b16:	mov    r8,rsi
   140005b19:	call   0x1400011b0
   140005b1e:	mov    rcx,QWORD PTR [rip+0x864b]        # 0x14000e170
   140005b25:	test   r14,r14
   140005b28:	je     0x140005dd2
   140005b2e:	cmp    rcx,rdi
   140005b31:	je     0x140005b4e
   140005b33:	test   BYTE PTR [rcx+0x1c],0x8
   140005b37:	je     0x140005b4e
   140005b39:	mov    rcx,QWORD PTR [rcx+0x10]
   140005b3d:	lea    r9,[r14+0x4]
   140005b41:	mov    edx,0xa
   140005b46:	mov    r8,rsi
   140005b49:	call   0x140001258
   140005b4e:	lea    r15,[r14+0x4]
   140005b52:	mov    rdx,rbx
   140005b55:	mov    rcx,r15
   140005b58:	call   0x140006014
   140005b5d:	xor    r9d,r9d
   140005b60:	test   eax,eax
   140005b62:	je     0x140005dc3
   140005b68:	mov    rcx,QWORD PTR [rip+0x8601]        # 0x14000e170
   140005b6f:	cmp    rcx,rdi
   140005b72:	je     0x140005ba2
   140005b74:	test   BYTE PTR [rcx+0x1c],0x8
   140005b78:	je     0x140005ba2
   140005b7a:	movzx  eax,WORD PTR [rbx+0x10]
   140005b7e:	mov    edx,0xb
   140005b83:	movzx  r9d,WORD PTR [rbx+0x12]
   140005b88:	mov    r8,rsi
   140005b8b:	mov    rcx,QWORD PTR [rcx+0x10]
   140005b8f:	mov    DWORD PTR [rsp+0x20],eax
   140005b93:	call   0x140001210
   140005b98:	mov    rcx,QWORD PTR [rip+0x85d1]        # 0x14000e170
   140005b9f:	xor    r9d,r9d
   140005ba2:	mov    eax,DWORD PTR [rsp+0x30]
   140005ba6:	test   eax,eax
   140005ba8:	je     0x140005bd0
   140005baa:	mov    rdx,QWORD PTR [rip+0x94ef]        # 0x14000f0a0
   140005bb1:	test   rdx,rdx
   140005bb4:	je     0x140005bd0
   140005bb6:	mov    rcx,r15
   140005bb9:	call   QWORD PTR [rip+0x44d9]        # 0x14000a098
   140005bbf:	xor    r9d,r9d
   140005bc2:	test   eax,eax
   140005bc4:	mov    r12d,r9d
   140005bc7:	sete   r12b
   140005bcb:	jmp    0x140005c74
   140005bd0:	mov    r8d,DWORD PTR [rsp+0x3c]
   140005bd5:	test   r8d,r8d
   140005bd8:	je     0x140005c1b
   140005bda:	mov    edx,0xd
   140005bdf:	cmp    dx,WORD PTR [rbx+0x12]
   140005be3:	jne    0x140005dbb
   140005be9:	movzx  edx,WORD PTR [rsp+0x40]
   140005bee:	cmp    dx,WORD PTR [rbx+0x10]
   140005bf2:	jne    0x140005dbb
   140005bf8:	mov    edx,DWORD PTR [rsp+0x34]
   140005bfc:	mov    r8d,0x1
   140005c02:	add    edx,r8d
   140005c05:	mov    DWORD PTR [rsp+0x34],edx
   140005c09:	cmp    edx,r8d
   140005c0c:	jbe    0x140005c16
   140005c0e:	test   eax,eax
   140005c10:	je     0x140005e44
   140005c16:	mov    r12d,r8d
   140005c19:	jmp    0x140005c7d
   140005c1b:	cmp    QWORD PTR [rip+0x9496],r9        # 0x14000f0b8
   140005c22:	jne    0x140005dbb
   140005c28:	mov    eax,0xd
   140005c2d:	cmp    ax,WORD PTR [rbx+0x12]
   140005c31:	jne    0x140005dbb
   140005c37:	movzx  eax,WORD PTR [rbx+0x10]
   140005c3b:	mov    ecx,0xfffd
   140005c40:	sub    ax,0x2
   140005c44:	test   cx,ax
   140005c47:	jne    0x140005dbb
   140005c4d:	mov    rax,QWORD PTR [rsp+0x58]
   140005c52:	test   rax,rax
   140005c55:	je     0x140005c6e
   140005c57:	mov    rdx,r15
   140005c5a:	mov    rcx,rax
   140005c5d:	call   QWORD PTR [rip+0x4435]        # 0x14000a098
   140005c63:	xor    r9d,r9d
   140005c66:	test   eax,eax
   140005c68:	jne    0x140005dbb
   140005c6e:	mov    r12d,0x1
   140005c74:	test   r12d,r12d
   140005c77:	je     0x140005dbb
   140005c7d:	cmp    QWORD PTR [rsp+0x50],r9
   140005c82:	je     0x140005ca9
   140005c84:	movsxd rdx,DWORD PTR [rbp+0x110]
   140005c8b:	mov    r8,r15
   140005c8e:	mov    r15,QWORD PTR [rsp+0x50]
   140005c93:	mov    rcx,r15
   140005c96:	call   0x140001038
   140005c9b:	xor    r9d,r9d
   140005c9e:	test   eax,eax
   140005ca0:	cmovs  r15,r9
   140005ca4:	mov    QWORD PTR [rsp+0x50],r15
   140005ca9:	cmp    DWORD PTR [rsp+0x4c],r9d
   140005cae:	lea    rdx,[rbp+0x80]
   140005cb5:	mov    eax,0x20019
   140005cba:	mov    r15d,r9d
   140005cbd:	lea    ecx,[rax+0x6]
   140005cc0:	cmovne eax,ecx
   140005cc3:	xor    r9d,r9d
   140005cc6:	mov    DWORD PTR [rsp+0x28],eax
   140005cca:	mov    rcx,r13
   140005ccd:	mov    eax,0x1
   140005cd2:	mov    r8d,eax
   140005cd5:	mov    DWORD PTR [rsp+0x20],eax
   140005cd9:	call   QWORD PTR [rip+0xc341]        # 0x140012020
   140005cdf:	cmp    rax,0xffffffffffffffff
   140005ce3:	mov    QWORD PTR [rbx+0xd0],rax
   140005cea:	mov    eax,0x1
   140005cef:	cmovne r15d,eax
   140005cf3:	mov    DWORD PTR [rsp+0x48],r15d
   140005cf8:	test   r15d,r15d
   140005cfb:	jne    0x140005d1e
   140005cfd:	mov    rcx,QWORD PTR [rip+0x846c]        # 0x14000e170
   140005d04:	cmp    rcx,rdi
   140005d07:	je     0x140005d1e
   140005d09:	test   BYTE PTR [rcx+0x1c],0x2
   140005d0d:	je     0x140005d1e
   140005d0f:	mov    rcx,QWORD PTR [rcx+0x10]
   140005d13:	lea    edx,[rax+0xc]
   140005d16:	mov    r8,rsi
   140005d19:	call   0x1400011b0
   140005d1e:	mov    ecx,DWORD PTR [rsp+0x3c]
   140005d22:	xor    r15d,r15d
   140005d25:	mov    eax,DWORD PTR [rsp+0x30]
   140005d29:	test   ecx,ecx
   140005d2b:	je     0x140005e84
   140005d31:	test   eax,eax
   140005d33:	jne    0x140005e84
   140005d39:	movups xmm0,XMMWORD PTR [rbx]
   140005d3c:	lea    rcx,[rsp+0x70]
   140005d41:	mov    edx,0x80
   140005d46:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140005d4a:	mov    r12d,r15d
   140005d4d:	movups XMMWORD PTR [rcx],xmm0
   140005d50:	lea    rax,[rdx+rbx*1]
   140005d54:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140005d58:	movups XMMWORD PTR [rcx+0x10],xmm1
   140005d5c:	movups xmm1,XMMWORD PTR [rbx+0x30]
   140005d60:	movups XMMWORD PTR [rcx+0x20],xmm0
   140005d64:	movups xmm0,XMMWORD PTR [rbx+0x40]
   140005d68:	movups XMMWORD PTR [rcx+0x30],xmm1
   140005d6c:	movups xmm1,XMMWORD PTR [rbx+0x50]
   140005d70:	movups XMMWORD PTR [rcx+0x40],xmm0
   140005d74:	movups xmm0,XMMWORD PTR [rbx+0x60]
   140005d78:	movups XMMWORD PTR [rcx+0x50],xmm1
   140005d7c:	movups xmm1,XMMWORD PTR [rbx+0x70]
   140005d80:	movups XMMWORD PTR [rcx+0x60],xmm0
   140005d84:	add    rcx,rdx
   140005d87:	movups xmm0,XMMWORD PTR [rax]
   140005d8a:	movups XMMWORD PTR [rcx-0x10],xmm1
   140005d8e:	movups xmm1,XMMWORD PTR [rax+0x10]
   140005d92:	movups XMMWORD PTR [rcx],xmm0
   140005d95:	movups xmm0,XMMWORD PTR [rax+0x20]
   140005d99:	movups XMMWORD PTR [rcx+0x10],xmm1
   140005d9d:	movups xmm1,XMMWORD PTR [rax+0x30]
   140005da1:	movups XMMWORD PTR [rcx+0x20],xmm0
   140005da5:	movups xmm0,XMMWORD PTR [rax+0x40]
   140005da9:	movups XMMWORD PTR [rcx+0x30],xmm1
   140005dad:	movups xmm1,XMMWORD PTR [rax+0x50]
   140005db1:	movups XMMWORD PTR [rcx+0x40],xmm0
   140005db5:	movups XMMWORD PTR [rcx+0x50],xmm1
   140005db9:	jmp    0x140005dc6
   140005dbb:	mov    rcx,rbx
   140005dbe:	call   0x1400062cc
   140005dc3:	xor    r15d,r15d
   140005dc6:	mov    rcx,r14
   140005dc9:	call   QWORD PTR [rip+0x4679]        # 0x14000a448
   140005dcf:	mov    r14,r15
   140005dd2:	mov    eax,DWORD PTR [rsp+0x44]
   140005dd6:	lea    rcx,[rbp+0x60]
   140005dda:	inc    eax
   140005ddc:	mov    QWORD PTR [rsp+0x20],rcx
   140005de1:	mov    r9d,eax
   140005de4:	mov    DWORD PTR [rsp+0x44],eax
   140005de8:	lea    r8,[rbp+0x50]
   140005dec:	mov    DWORD PTR [rbp+0x60],0x20
   140005df3:	xor    edx,edx
   140005df5:	mov    rcx,r13
   140005df8:	call   QWORD PTR [rip+0xc232]        # 0x140012030
   140005dfe:	test   eax,eax
   140005e00:	jne    0x140005a42
   140005e06:	mov    r15d,DWORD PTR [rsp+0x34]
   140005e0b:	call   QWORD PTR [rip+0x448f]        # 0x14000a2a0
   140005e11:	cmp    eax,0x103
   140005e16:	je     0x140005e3e
   140005e18:	mov    rcx,QWORD PTR [rip+0x8351]        # 0x14000e170
   140005e1f:	cmp    rcx,rdi
   140005e22:	je     0x140005e3e
   140005e24:	test   BYTE PTR [rcx+0x1c],0x2
   140005e28:	je     0x140005e3e
   140005e2a:	mov    rcx,QWORD PTR [rcx+0x10]
   140005e2e:	mov    edx,0xe
   140005e33:	mov    r9d,eax
   140005e36:	mov    r8,rsi
   140005e39:	call   0x1400011d4
   140005e3e:	mov    eax,DWORD PTR [rsp+0x30]
   140005e42:	jmp    0x140005e89
   140005e44:	cmp    rcx,rdi
   140005e47:	je     0x140005e60
   140005e49:	test   BYTE PTR [rcx+0x1c],0x2
   140005e4d:	je     0x140005e60
   140005e4f:	mov    rcx,QWORD PTR [rcx+0x10]
   140005e53:	mov    edx,0xc
   140005e58:	mov    r8,rsi
   140005e5b:	call   0x1400011b0
   140005e60:	mov    rcx,rbx
   140005e63:	call   0x1400062cc
   140005e68:	mov    rax,QWORD PTR [rsp+0x60]
   140005e6d:	mov    edx,0x1
   140005e72:	mov    r15d,DWORD PTR [rsp+0x34]
   140005e77:	test   rax,rax
   140005e7a:	je     0x140005e7e
   140005e7c:	mov    DWORD PTR [rax],edx
   140005e7e:	mov    eax,DWORD PTR [rsp+0x30]
   140005e82:	jmp    0x140005e8e
   140005e84:	mov    r15d,DWORD PTR [rsp+0x34]
   140005e89:	mov    edx,0x1
   140005e8e:	cmp    DWORD PTR [rsp+0x3c],0x0
   140005e93:	je     0x140005f30
   140005e99:	cmp    r15d,edx
   140005e9c:	jne    0x140005f30
   140005ea2:	xor    r15d,r15d
   140005ea5:	test   eax,eax
   140005ea7:	jne    0x140005f33
   140005ead:	lea    rax,[rsp+0x70]
   140005eb2:	mov    r8d,0x80
   140005eb8:	movups xmm0,XMMWORD PTR [rax]
   140005ebb:	mov    r12d,edx
   140005ebe:	movups xmm1,XMMWORD PTR [rax+0x10]
   140005ec2:	lea    rcx,[r8+rbx*1]
   140005ec6:	movups XMMWORD PTR [rbx],xmm0
   140005ec9:	movups xmm0,XMMWORD PTR [rax+0x20]
   140005ecd:	movups XMMWORD PTR [rbx+0x10],xmm1
   140005ed1:	movups xmm1,XMMWORD PTR [rax+0x30]
   140005ed5:	movups XMMWORD PTR [rbx+0x20],xmm0
   140005ed9:	movups xmm0,XMMWORD PTR [rax+0x40]
   140005edd:	movups XMMWORD PTR [rbx+0x30],xmm1
   140005ee1:	movups xmm1,XMMWORD PTR [rax+0x50]
   140005ee5:	movups XMMWORD PTR [rbx+0x40],xmm0
   140005ee9:	movups xmm0,XMMWORD PTR [rax+0x60]
   140005eed:	movups XMMWORD PTR [rbx+0x50],xmm1
   140005ef1:	movups xmm1,XMMWORD PTR [rax+0x70]
   140005ef5:	add    rax,r8
   140005ef8:	movups XMMWORD PTR [rbx+0x60],xmm0
   140005efc:	movups XMMWORD PTR [rcx-0x10],xmm1
   140005f00:	movups xmm0,XMMWORD PTR [rax]
   140005f03:	movups xmm1,XMMWORD PTR [rax+0x10]
   140005f07:	movups XMMWORD PTR [rcx],xmm0
   140005f0a:	movups xmm0,XMMWORD PTR [rax+0x20]
   140005f0e:	movups XMMWORD PTR [rcx+0x10],xmm1
   140005f12:	movups xmm1,XMMWORD PTR [rax+0x30]
   140005f16:	movups XMMWORD PTR [rcx+0x20],xmm0
   140005f1a:	movups xmm0,XMMWORD PTR [rax+0x40]
   140005f1e:	movups XMMWORD PTR [rcx+0x30],xmm1
   140005f22:	movups xmm1,XMMWORD PTR [rax+0x50]
   140005f26:	movups XMMWORD PTR [rcx+0x40],xmm0
   140005f2a:	movups XMMWORD PTR [rcx+0x50],xmm1
   140005f2e:	jmp    0x140005f33
   140005f30:	xor    r15d,r15d
   140005f33:	test   r12d,r12d
   140005f36:	jne    0x140005f44
   140005f38:	mov    rcx,rbx
   140005f3b:	call   QWORD PTR [rip+0x4507]        # 0x14000a448
   140005f41:	mov    rbx,r15
   140005f44:	test   r14,r14
   140005f47:	je     0x140005f52
   140005f49:	mov    rcx,r14
   140005f4c:	call   QWORD PTR [rip+0x44f6]        # 0x14000a448
   140005f52:	mov    rcx,r13
   140005f55:	call   QWORD PTR [rip+0xc0cd]        # 0x140012028
   140005f5b:	mov    r14d,DWORD PTR [rsp+0x48]
   140005f60:	jmp    0x140005fd0
   140005f62:	mov    rcx,QWORD PTR [rip+0x8207]        # 0x14000e170
   140005f69:	lea    rdi,[rip+0x8200]        # 0x14000e170
   140005f70:	cmp    rcx,rdi
   140005f73:	je     0x140005fda
   140005f75:	test   BYTE PTR [rcx+0x1c],0x2
   140005f79:	je     0x140005fda
   140005f7b:	mov    rcx,QWORD PTR [rcx+0x10]
   140005f7f:	lea    r8,[rip+0x4d42]        # 0x14000acc8
   140005f86:	mov    edx,0xf
   140005f8b:	call   0x1400011b0
   140005f90:	jmp    0x140005fd0
   140005f92:	mov    rax,QWORD PTR [rip+0x81d7]        # 0x14000e170
   140005f99:	lea    rdi,[rip+0x81d0]        # 0x14000e170
   140005fa0:	cmp    rax,rdi
   140005fa3:	je     0x140005fda
   140005fa5:	test   BYTE PTR [rax+0x1c],0x2
   140005fa9:	je     0x140005fda
   140005fab:	call   QWORD PTR [rip+0x42ef]        # 0x14000a2a0
   140005fb1:	mov    rcx,QWORD PTR [rip+0x81b8]        # 0x14000e170
   140005fb8:	lea    r8,[rip+0x4d09]        # 0x14000acc8
   140005fbf:	mov    r9d,eax
   140005fc2:	mov    edx,0x10
   140005fc7:	mov    rcx,QWORD PTR [rcx+0x10]
   140005fcb:	call   0x1400011d4
   140005fd0:	test   rbx,rbx
   140005fd3:	je     0x140005fda
   140005fd5:	test   r14d,r14d
   140005fd8:	jne    0x140005fde
   140005fda:	or     rbx,0xffffffffffffffff
   140005fde:	mov    rax,rbx
   140005fe1:	mov    rcx,QWORD PTR [rbp+0xa0]
   140005fe8:	xor    rcx,rsp
   140005feb:	call   0x140009020
   140005ff0:	mov    rbx,QWORD PTR [rsp+0x1f8]
   140005ff8:	add    rsp,0x1b0
   140005fff:	pop    r15
   140006001:	pop    r14
   140006003:	pop    r13
   140006005:	pop    r12
   140006007:	pop    rdi
   140006008:	pop    rsi
   140006009:	pop    rbp
   14000600a:	ret    
   14000600b:	int3   
   14000600c:	int3   
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	int3   
   140006011:	int3   
   140006012:	int3   
   140006013:	int3   
   140006014:	mov    QWORD PTR [rsp+0x18],rbx
   140006019:	push   rbp
   14000601a:	push   rsi
   14000601b:	push   rdi
   14000601c:	push   r14
   14000601e:	push   r15
   140006020:	sub    rsp,0x490
   140006027:	mov    rax,QWORD PTR [rip+0x7fda]        # 0x14000e008
   14000602e:	xor    rax,rsp
   140006031:	mov    QWORD PTR [rsp+0x480],rax
   140006039:	mov    r14,rdx
   14000603c:	mov    rsi,rcx
   14000603f:	mov    rcx,r14
   140006042:	xor    edx,edx
   140006044:	mov    r8d,0xe0
   14000604a:	call   0x140009952
   14000604f:	lea    rdx,[rsp+0x40]
   140006054:	mov    rcx,rsi
   140006057:	call   0x140007d28
   14000605c:	mov    rcx,QWORD PTR [rsp+0x48]
   140006061:	lea    r15,[rip+0x8108]        # 0x14000e170
   140006068:	xor    ebx,ebx
   14000606a:	mov    QWORD PTR [r14],rcx
   14000606d:	mov    edi,eax
   14000606f:	test   eax,eax
   140006071:	js     0x140006250
   140006077:	mov    ebp,0x20000005
   14000607c:	mov    DWORD PTR [rsp+0x30],ebx
   140006080:	mov    edx,ebp
   140006082:	lea    r9,[rsp+0x30]
   140006087:	xor    r8d,r8d
   14000608a:	call   QWORD PTR [rip+0x4100]        # 0x14000a190
   140006090:	test   eax,eax
   140006092:	je     0x1400060b2
   140006094:	call   QWORD PTR [rip+0x4206]        # 0x14000a2a0
   14000609a:	movzx  ecx,ax
   14000609d:	mov    edi,0x80004005
   1400060a2:	or     ecx,0x80070000
   1400060a8:	test   eax,eax
   1400060aa:	cmovle ecx,eax
   1400060ad:	test   ecx,ecx
   1400060af:	cmovs  edi,ecx
   1400060b2:	test   edi,edi
   1400060b4:	js     0x14000610d
   1400060b6:	mov    ecx,DWORD PTR [rsp+0x30]
   1400060ba:	call   QWORD PTR [rip+0x4398]        # 0x14000a458
   1400060c0:	test   rax,rax
   1400060c3:	mov    QWORD PTR [r14+0x8],rax
   1400060c7:	mov    ecx,0x8007000e
   1400060cc:	cmove  edi,ecx
   1400060cf:	test   edi,edi
   1400060d1:	js     0x14000610d
   1400060d3:	mov    rcx,QWORD PTR [r14]
   1400060d6:	lea    r9,[rsp+0x30]
   1400060db:	mov    r8,rax
   1400060de:	mov    edx,ebp
   1400060e0:	call   QWORD PTR [rip+0x40aa]        # 0x14000a190
   1400060e6:	cmp    eax,0xffffffff
   1400060e9:	jne    0x140006109
   1400060eb:	call   QWORD PTR [rip+0x41af]        # 0x14000a2a0
   1400060f1:	movzx  ecx,ax
   1400060f4:	mov    edi,0x80004005
   1400060f9:	or     ecx,0x80070000
   1400060ff:	test   eax,eax
   140006101:	cmovle ecx,eax
   140006104:	test   ecx,ecx
   140006106:	cmovs  edi,ecx
   140006109:	test   edi,edi
   14000610b:	jns    0x14000613f
   14000610d:	mov    rcx,QWORD PTR [rip+0x805c]        # 0x14000e170
   140006114:	cmp    rcx,r15
   140006117:	je     0x140006137
   140006119:	test   BYTE PTR [rcx+0x1c],0x2
   14000611d:	je     0x140006137
   14000611f:	mov    rcx,QWORD PTR [rcx+0x10]
   140006123:	lea    r8,[rip+0x4b9e]        # 0x14000acc8
   14000612a:	mov    edx,0x13
   14000612f:	mov    r9d,edi
   140006132:	call   0x1400011d4
   140006137:	test   edi,edi
   140006139:	js     0x140006250
   14000613f:	mov    rcx,QWORD PTR [r14+0x8]
   140006143:	lea    rdx,[r14+0x10]
   140006147:	call   QWORD PTR [rip+0x3f1b]        # 0x14000a068
   14000614d:	cmp    eax,0x110000
   140006152:	je     0x140006172
   140006154:	call   QWORD PTR [rip+0x4146]        # 0x14000a2a0
   14000615a:	movzx  ecx,ax
   14000615d:	mov    edi,0x80004005
   140006162:	or     ecx,0x80070000
   140006168:	test   eax,eax
   14000616a:	cmovle ecx,eax
   14000616d:	test   ecx,ecx
   14000616f:	cmovs  edi,ecx
   140006172:	test   edi,edi
   140006174:	js     0x140006250
   14000617a:	mov    rcx,QWORD PTR [r14]
   14000617d:	lea    rdx,[rsp+0x40]
   140006182:	call   QWORD PTR [rip+0x4000]        # 0x14000a188
   140006188:	mov    ebp,0x40
   14000618d:	test   eax,eax
   14000618f:	je     0x1400061a5
   140006191:	lea    rcx,[r14+0x50]
   140006195:	mov    edx,ebp
   140006197:	lea    r8,[rsp+0x66]
   14000619c:	call   0x140001038
   1400061a1:	test   eax,eax
   1400061a3:	jns    0x1400061df
   1400061a5:	mov    rcx,QWORD PTR [rip+0x7fc4]        # 0x14000e170
   1400061ac:	cmp    rcx,r15
   1400061af:	je     0x1400061cc
   1400061b1:	test   BYTE PTR [rcx+0x1c],0x4
   1400061b5:	je     0x1400061cc
   1400061b7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400061bb:	lea    r8,[rip+0x4b06]        # 0x14000acc8
   1400061c2:	mov    edx,0x14
   1400061c7:	call   0x1400011b0
   1400061cc:	lea    rcx,[r14+0x50]
   1400061d0:	mov    rdx,rbp
   1400061d3:	lea    r8,[rip+0x4aae]        # 0x14000ac88
   1400061da:	call   0x140001038
   1400061df:	mov    r15d,0x23
   1400061e5:	mov    QWORD PTR [r14+0xd8],rbx
   1400061ec:	mov    edx,r15d
   1400061ef:	mov    rcx,rsi
   1400061f2:	call   QWORD PTR [rip+0x4248]        # 0x14000a440
   1400061f8:	mov    rbp,rax
   1400061fb:	test   rax,rax
   1400061fe:	je     0x140006297
   140006204:	add    rbp,0x2
   140006208:	mov    edx,r15d
   14000620b:	mov    rcx,rbp
   14000620e:	call   QWORD PTR [rip+0x422c]        # 0x14000a440
   140006214:	mov    rsi,rax
   140006217:	test   rax,rax
   14000621a:	je     0x140006297
   14000621c:	sub    rsi,rbp
   14000621f:	sar    rsi,1
   140006222:	lea    rcx,[rsi*2+0x2]
   14000622a:	call   QWORD PTR [rip+0x4228]        # 0x14000a458
   140006230:	mov    QWORD PTR [r14+0xd8],rax
   140006237:	test   rax,rax
   14000623a:	je     0x140006297
   14000623c:	lea    rdx,[rsi+0x1]
   140006240:	mov    r9,rsi
   140006243:	mov    r8,rbp
   140006246:	mov    rcx,rax
   140006249:	call   0x1400058b4
   14000624e:	jmp    0x140006297
   140006250:	mov    rcx,r14
   140006253:	call   0x1400062cc
   140006258:	or     QWORD PTR [r14],0xffffffffffffffff
   14000625c:	mov    rax,QWORD PTR [rip+0x7f0d]        # 0x14000e170
   140006263:	cmp    rax,r15
   140006266:	je     0x140006297
   140006268:	test   BYTE PTR [rax+0x1c],0x2
   14000626c:	je     0x140006297
   14000626e:	call   QWORD PTR [rip+0x402c]        # 0x14000a2a0
   140006274:	mov    rcx,QWORD PTR [rip+0x7ef5]        # 0x14000e170
   14000627b:	lea    r8,[rip+0x4a46]        # 0x14000acc8
   140006282:	mov    edx,0x15
   140006287:	mov    DWORD PTR [rsp+0x20],eax
   14000628b:	mov    r9,rsi
   14000628e:	mov    rcx,QWORD PTR [rcx+0x10]
   140006292:	call   0x1400013d0
   140006297:	test   edi,edi
   140006299:	setns  bl
   14000629c:	mov    eax,ebx
   14000629e:	mov    rcx,QWORD PTR [rsp+0x480]
   1400062a6:	xor    rcx,rsp
   1400062a9:	call   0x140009020
   1400062ae:	mov    rbx,QWORD PTR [rsp+0x4d0]
   1400062b6:	add    rsp,0x490
   1400062bd:	pop    r15
   1400062bf:	pop    r14
   1400062c1:	pop    rdi
   1400062c2:	pop    rsi
   1400062c3:	pop    rbp
   1400062c4:	ret    
   1400062c5:	int3   
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	int3   
   1400062c9:	int3   
   1400062ca:	int3   
   1400062cb:	int3   
   1400062cc:	test   rcx,rcx
   1400062cf:	je     0x140006318
   1400062d1:	push   rbx
   1400062d2:	sub    rsp,0x20
   1400062d6:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   1400062da:	mov    rbx,rcx
   1400062dd:	je     0x140006313
   1400062df:	mov    rcx,QWORD PTR [rcx+0xd0]
   1400062e6:	cmp    rcx,0xffffffffffffffff
   1400062ea:	je     0x1400062f2
   1400062ec:	call   QWORD PTR [rip+0x40ce]        # 0x14000a3c0
   1400062f2:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400062f9:	test   rcx,rcx
   1400062fc:	je     0x140006304
   1400062fe:	call   QWORD PTR [rip+0x4144]        # 0x14000a448
   140006304:	mov    rcx,QWORD PTR [rbx+0x8]
   140006308:	test   rcx,rcx
   14000630b:	je     0x140006313
   14000630d:	call   QWORD PTR [rip+0x4135]        # 0x14000a448
   140006313:	add    rsp,0x20
   140006317:	pop    rbx
   140006318:	ret    
   140006319:	int3   
   14000631a:	int3   
   14000631b:	int3   
   14000631c:	int3   
   14000631d:	int3   
   14000631e:	int3   
   14000631f:	int3   
   140006320:	mov    QWORD PTR [rsp+0x18],rbx
   140006325:	mov    QWORD PTR [rsp+0x20],rsi
   14000632a:	push   rbp
   14000632b:	push   rdi
   14000632c:	push   r14
   14000632e:	lea    rbp,[rsp-0x47]
   140006333:	sub    rsp,0xb0
   14000633a:	mov    rax,QWORD PTR [rip+0x7cc7]        # 0x14000e008
   140006341:	xor    rax,rsp
   140006344:	mov    QWORD PTR [rbp+0x37],rax
   140006348:	xor    ebx,ebx
   14000634a:	mov    rdi,rdx
   14000634d:	mov    rsi,rcx
   140006350:	mov    WORD PTR [rbp-0x19],bx
   140006354:	xor    edx,edx
   140006356:	lea    rcx,[rbp-0x17]
   14000635a:	lea    r8d,[rbx+0x46]
   14000635e:	call   0x140009952
   140006363:	lea    rax,[rbp-0x29]
   140006367:	mov    QWORD PTR [rsp+0x30],rsi
   14000636c:	mov    QWORD PTR [rsp+0x28],rax
   140006371:	lea    r14d,[rbx+0x1]
   140006375:	lea    rax,[rbp-0x19]
   140006379:	mov    WORD PTR [rbp-0x29],r14w
   14000637e:	lea    r9d,[rbx+0x30]
   140006382:	mov    QWORD PTR [rsp+0x20],rax
   140006387:	xor    r8d,r8d
   14000638a:	mov    edx,r14d
   14000638d:	xor    ecx,ecx
   14000638f:	call   QWORD PTR [rip+0x3cc3]        # 0x14000a058
   140006395:	cmp    eax,0x110000
   14000639a:	je     0x1400063a7
   14000639c:	cmp    eax,0xc0110007
   1400063a1:	jne    0x14000642c
   1400063a7:	cmp    WORD PTR [rbp-0x29],r14w
   1400063ac:	jb     0x14000642c
   1400063ae:	mov    eax,DWORD PTR [rbp+0xf]
   1400063b1:	test   eax,eax
   1400063b3:	js     0x14000642c
   1400063b5:	mov    ecx,DWORD PTR [rbp+0x13]
   1400063b8:	cmp    ecx,eax
   1400063ba:	jle    0x14000642c
   1400063bc:	xor    edx,edx
   1400063be:	mov    DWORD PTR [rdi+0x8],ecx
   1400063c1:	lea    rcx,[rbp-0x19]
   1400063c5:	mov    DWORD PTR [rdi],eax
   1400063c7:	mov    WORD PTR [rbp-0x29],r14w
   1400063cc:	lea    r8d,[rdx+0x48]
   1400063d0:	call   0x140009952
   1400063d5:	lea    rax,[rbp-0x29]
   1400063d9:	mov    QWORD PTR [rsp+0x30],rsi
   1400063de:	mov    QWORD PTR [rsp+0x28],rax
   1400063e3:	mov    r9d,0x31
   1400063e9:	lea    rax,[rbp-0x19]
   1400063ed:	xor    r8d,r8d
   1400063f0:	mov    edx,r14d
   1400063f3:	mov    QWORD PTR [rsp+0x20],rax
   1400063f8:	xor    ecx,ecx
   1400063fa:	call   QWORD PTR [rip+0x3c58]        # 0x14000a058
   140006400:	cmp    eax,0x110000
   140006405:	je     0x14000640e
   140006407:	cmp    eax,0xc0110007
   14000640c:	jne    0x14000642c
   14000640e:	cmp    WORD PTR [rbp-0x29],r14w
   140006413:	jb     0x14000642c
   140006415:	mov    eax,DWORD PTR [rbp+0xf]
   140006418:	test   eax,eax
   14000641a:	js     0x14000642c
   14000641c:	mov    ecx,DWORD PTR [rbp+0x13]
   14000641f:	cmp    ecx,eax
   140006421:	jle    0x14000642c
   140006423:	mov    DWORD PTR [rdi+0x4],eax
   140006426:	mov    ebx,r14d
   140006429:	mov    DWORD PTR [rdi+0xc],ecx
   14000642c:	mov    eax,ebx
   14000642e:	mov    rcx,QWORD PTR [rbp+0x37]
   140006432:	xor    rcx,rsp
   140006435:	call   0x140009020
   14000643a:	lea    r11,[rsp+0xb0]
   140006442:	mov    rbx,QWORD PTR [r11+0x30]
   140006446:	mov    rsi,QWORD PTR [r11+0x38]
   14000644a:	mov    rsp,r11
   14000644d:	pop    r14
   14000644f:	pop    rdi
   140006450:	pop    rbp
   140006451:	ret    
   140006452:	int3   
   140006453:	int3   
   140006454:	int3   
   140006455:	int3   
   140006456:	int3   
   140006457:	int3   
   140006458:	mov    QWORD PTR [rsp+0x8],rbx
   14000645d:	push   rdi
   14000645e:	sub    rsp,0x20
   140006462:	mov    rdx,QWORD PTR [rip+0x8c4f]        # 0x14000f0b8
   140006469:	xor    ebx,ebx
   14000646b:	mov    rdi,rcx
   14000646e:	test   rdx,rdx
   140006471:	je     0x1400064cd
   140006473:	lea    rcx,[rip+0x4836]        # 0x14000acb0
   14000647a:	call   QWORD PTR [rip+0x3c18]        # 0x14000a098
   140006480:	test   eax,eax
   140006482:	jne    0x140006498
   140006484:	mov    DWORD PTR [rip+0x7cf2],0x1        # 0x14000e180
   14000648e:	test   rdi,rdi
   140006491:	je     0x1400064cd
   140006493:	lea    eax,[rbx+0x2]
   140006496:	jmp    0x1400064c5
   140006498:	mov    rdx,QWORD PTR [rip+0x8c19]        # 0x14000f0b8
   14000649f:	lea    rcx,[rip+0x4812]        # 0x14000acb8
   1400064a6:	call   QWORD PTR [rip+0x3bec]        # 0x14000a098
   1400064ac:	test   eax,eax
   1400064ae:	jne    0x1400064cd
   1400064b0:	mov    eax,0x2
   1400064b5:	mov    DWORD PTR [rip+0x7cc5],eax        # 0x14000e180
   1400064bb:	test   rdi,rdi
   1400064be:	je     0x1400064cd
   1400064c0:	mov    eax,0x4
   1400064c5:	mov    ebx,0x1
   1400064ca:	mov    WORD PTR [rdi],ax
   1400064cd:	mov    eax,ebx
   1400064cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400064d4:	add    rsp,0x20
   1400064d8:	pop    rdi
   1400064d9:	ret    
   1400064da:	int3   
   1400064db:	int3   
   1400064dc:	int3   
   1400064dd:	int3   
   1400064de:	int3   
   1400064df:	int3   
   1400064e0:	mov    r11,rsp
   1400064e3:	mov    DWORD PTR [r11+0x20],r9d
   1400064e7:	sub    rsp,0x58
   1400064eb:	and    QWORD PTR [r11-0x18],0x0
   1400064f0:	lea    rax,[r11+0x28]
   1400064f4:	mov    r8d,0xe
   1400064fa:	movzx  r9d,r8w
   1400064fe:	lea    edx,[r8-0xa]
   140006502:	mov    QWORD PTR [r11-0x20],rdx
   140006506:	lea    r8,[rip+0x47e3]        # 0x14000acf0
   14000650d:	mov    QWORD PTR [r11-0x28],rax
   140006511:	lea    rax,[r11+0x20]
   140006515:	mov    QWORD PTR [r11-0x30],rdx
   140006519:	mov    edx,0x2b
   14000651e:	mov    QWORD PTR [r11-0x38],rax
   140006522:	call   QWORD PTR [rip+0x4058]        # 0x14000a580
   140006528:	add    rsp,0x58
   14000652c:	ret    
   14000652d:	int3   
   14000652e:	int3   
   14000652f:	int3   
   140006530:	int3   
   140006531:	int3   
   140006532:	int3   
   140006533:	int3   
   140006534:	mov    QWORD PTR [rsp+0x10],rbx
   140006539:	mov    QWORD PTR [rsp+0x18],rsi
   14000653e:	push   rdi
   14000653f:	sub    rsp,0x30
   140006543:	mov    rsi,rdx
   140006546:	xor    ebx,ebx
   140006548:	mov    edx,DWORD PTR [rdx]
   14000654a:	mov    rdi,rcx
   14000654d:	test   edx,edx
   14000654f:	je     0x140006584
   140006551:	mov    rcx,QWORD PTR [rcx+0x28]
   140006555:	lea    r9d,[rbx+0x3]
   140006559:	mov    r8,rsi
   14000655c:	call   QWORD PTR [rip+0x3cfe]        # 0x14000a260
   140006562:	test   eax,eax
   140006564:	jne    0x140006584
   140006566:	call   QWORD PTR [rip+0x3d34]        # 0x14000a2a0
   14000656c:	movzx  ecx,ax
   14000656f:	mov    ebx,0x80004005
   140006574:	or     ecx,0x80070000
   14000657a:	test   eax,eax
   14000657c:	cmovle ecx,eax
   14000657f:	test   ecx,ecx
   140006581:	cmovs  ebx,ecx
   140006584:	test   ebx,ebx
   140006586:	js     0x140006616
   14000658c:	mov    rdx,QWORD PTR [rdi+0x10]
   140006590:	lea    rax,[rsp+0x40]
   140006595:	mov    ecx,DWORD PTR [rip+0x8bfd]        # 0x14000f198
   14000659b:	xor    r9d,r9d
   14000659e:	and    DWORD PTR [rsp+0x40],0x0
   1400065a3:	mov    QWORD PTR [rsp+0x20],rax
   1400065a8:	call   0x140007f60
   1400065ad:	mov    ebx,eax
   1400065af:	test   eax,eax
   1400065b1:	js     0x140006616
   1400065b3:	cmp    DWORD PTR [rsp+0x40],0x0
   1400065b8:	jne    0x1400065f5
   1400065ba:	mov    edx,DWORD PTR [rsi]
   1400065bc:	xor    ebx,ebx
   1400065be:	test   edx,edx
   1400065c0:	je     0x1400065f5
   1400065c2:	mov    rcx,QWORD PTR [rdi+0x28]
   1400065c6:	lea    r9d,[rbx+0x3]
   1400065ca:	mov    r8,rsi
   1400065cd:	call   QWORD PTR [rip+0x3c8d]        # 0x14000a260
   1400065d3:	test   eax,eax
   1400065d5:	jne    0x1400065f5
   1400065d7:	call   QWORD PTR [rip+0x3cc3]        # 0x14000a2a0
   1400065dd:	movzx  ecx,ax
   1400065e0:	mov    ebx,0x80004005
   1400065e5:	or     ecx,0x80070000
   1400065eb:	test   eax,eax
   1400065ed:	cmovle ecx,eax
   1400065f0:	test   ecx,ecx
   1400065f2:	cmovs  ebx,ecx
   1400065f5:	test   ebx,ebx
   1400065f7:	js     0x140006616
   1400065f9:	cmp    DWORD PTR [rdi+0x4],0x0
   1400065fd:	jbe    0x140006616
   1400065ff:	mov    rcx,QWORD PTR [rdi+0x8]
   140006603:	test   rcx,rcx
   140006606:	je     0x140006616
   140006608:	call   0x140008be4
   14000660d:	and    QWORD PTR [rdi+0x8],0x0
   140006612:	and    DWORD PTR [rdi+0x4],0x0
   140006616:	mov    rsi,QWORD PTR [rsp+0x50]
   14000661b:	mov    eax,ebx
   14000661d:	mov    rbx,QWORD PTR [rsp+0x48]
   140006622:	add    rsp,0x30
   140006626:	pop    rdi
   140006627:	ret    
   140006628:	int3   
   140006629:	int3   
   14000662a:	int3   
   14000662b:	int3   
   14000662c:	int3   
   14000662d:	int3   
   14000662e:	int3   
   14000662f:	int3   
   140006630:	mov    QWORD PTR [rsp+0x8],rbx
   140006635:	push   rdi
   140006636:	sub    rsp,0x20
   14000663a:	mov    edx,DWORD PTR [rcx+0x4]
   14000663d:	xor    edi,edi
   14000663f:	mov    rbx,rcx
   140006642:	test   edx,edx
   140006644:	je     0x1400066cc
   14000664a:	mov    r8,QWORD PTR [rcx+0x8]
   14000664e:	test   r8,r8
   140006651:	je     0x1400066cc
   140006653:	mov    rcx,QWORD PTR [rcx+0x28]
   140006657:	lea    r9d,[rdi+0x3]
   14000665b:	call   QWORD PTR [rip+0x3bff]        # 0x14000a260
   140006661:	test   eax,eax
   140006663:	jne    0x140006683
   140006665:	call   QWORD PTR [rip+0x3c35]        # 0x14000a2a0
   14000666b:	movzx  ecx,ax
   14000666e:	mov    edi,0x80004005
   140006673:	or     ecx,0x80070000
   140006679:	test   eax,eax
   14000667b:	cmovle ecx,eax
   14000667e:	test   ecx,ecx
   140006680:	cmovs  edi,ecx
   140006683:	test   edi,edi
   140006685:	js     0x14000669b
   140006687:	mov    rcx,QWORD PTR [rbx+0x8]
   14000668b:	call   0x140008be4
   140006690:	and    QWORD PTR [rbx+0x8],0x0
   140006695:	and    DWORD PTR [rbx+0x4],0x0
   140006699:	jmp    0x1400066cc
   14000669b:	mov    rcx,QWORD PTR [rip+0x7ace]        # 0x14000e170
   1400066a2:	lea    rax,[rip+0x7ac7]        # 0x14000e170
   1400066a9:	cmp    rcx,rax
   1400066ac:	je     0x1400066cc
   1400066ae:	test   BYTE PTR [rcx+0x1c],0x2
   1400066b2:	je     0x1400066cc
   1400066b4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400066b8:	lea    r8,[rip+0x4631]        # 0x14000acf0
   1400066bf:	mov    edx,0xa
   1400066c4:	mov    r9d,edi
   1400066c7:	call   0x1400011d4
   1400066cc:	mov    eax,edi
   1400066ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400066d3:	add    rsp,0x20
   1400066d7:	pop    rdi
   1400066d8:	ret    
   1400066d9:	int3   
   1400066da:	int3   
   1400066db:	int3   
   1400066dc:	int3   
   1400066dd:	int3   
   1400066de:	int3   
   1400066df:	int3   
   1400066e0:	mov    rax,rsp
   1400066e3:	mov    QWORD PTR [rax+0x8],rbx
   1400066e7:	mov    QWORD PTR [rax+0x10],rbp
   1400066eb:	mov    QWORD PTR [rax+0x18],rsi
   1400066ef:	mov    QWORD PTR [rax+0x20],rdi
   1400066f3:	push   r12
   1400066f5:	push   r14
   1400066f7:	push   r15
   1400066f9:	sub    rsp,0x20
   1400066fd:	mov    rbp,rdx
   140006700:	lea    rsi,[rcx+0x4a8]
   140006707:	mov    rdi,rcx
   14000670a:	xor    ebx,ebx
   14000670c:	xor    r8d,r8d
   14000670f:	mov    rdx,rsi
   140006712:	mov    r14d,ebx
   140006715:	mov    r15d,ebx
   140006718:	mov    rcx,QWORD PTR [rbp+0x10]
   14000671c:	call   QWORD PTR [rip+0x3a5e]        # 0x14000a180
   140006722:	test   eax,eax
   140006724:	je     0x140006847
   14000672a:	mov    ecx,DWORD PTR [rsi]
   14000672c:	lea    eax,[rbx+0x1c]
   14000672f:	mul    rcx
   140006732:	lea    r12,[rbx-0x1]
   140006736:	cmovo  rax,r12
   14000673a:	mov    rcx,rax
   14000673d:	call   0x140008bd8
   140006742:	mov    ecx,DWORD PTR [rsi]
   140006744:	mov    QWORD PTR [rdi+0x490],rax
   14000674b:	lea    eax,[rbx+0x4]
   14000674e:	mul    rcx
   140006751:	cmovo  rax,r12
   140006755:	mov    rcx,rax
   140006758:	call   0x140008bd8
   14000675d:	mov    r8,QWORD PTR [rdi+0x490]
   140006764:	mov    QWORD PTR [rdi+0x498],rax
   14000676b:	test   r8,r8
   14000676e:	je     0x140006819
   140006774:	test   rax,rax
   140006777:	je     0x140006819
   14000677d:	mov    rcx,QWORD PTR [rbp+0x10]
   140006781:	mov    rdx,rsi
   140006784:	call   QWORD PTR [rip+0x39f6]        # 0x14000a180
   14000678a:	test   eax,eax
   14000678c:	je     0x1400067f9
   14000678e:	mov    r8d,DWORD PTR [rsi]
   140006791:	mov    ecx,ebx
   140006793:	test   r8d,r8d
   140006796:	je     0x140006847
   14000679c:	lea    r9d,[rbx+0x1]
   1400067a0:	test   r14d,r14d
   1400067a3:	je     0x1400067ae
   1400067a5:	test   r15d,r15d
   1400067a8:	jne    0x140006847
   1400067ae:	mov    eax,ecx
   1400067b0:	imul   rdx,rax,0x1c
   1400067b4:	mov    rax,QWORD PTR [rdi+0x490]
   1400067bb:	cmp    WORD PTR [rdx+rax*1+0x18],r9w
   1400067c1:	jne    0x1400067ef
   1400067c3:	cmp    WORD PTR [rdx+rax*1+0x1a],0x30
   1400067c9:	jne    0x1400067d6
   1400067cb:	mov    DWORD PTR [rdi+0x4a0],ecx
   1400067d1:	mov    r14d,r9d
   1400067d4:	jmp    0x1400067ef
   1400067d6:	cmp    WORD PTR [rdx+rax*1+0x18],r9w
   1400067dc:	jne    0x1400067ef
   1400067de:	cmp    WORD PTR [rdx+rax*1+0x1a],0x31
   1400067e4:	jne    0x1400067ef
   1400067e6:	mov    DWORD PTR [rdi+0x4a4],ecx
   1400067ec:	mov    r15d,r9d
   1400067ef:	add    ecx,r9d
   1400067f2:	cmp    ecx,r8d
   1400067f5:	jb     0x1400067a0
   1400067f7:	jmp    0x140006847
   1400067f9:	mov    rcx,QWORD PTR [rip+0x7970]        # 0x14000e170
   140006800:	lea    rax,[rip+0x7969]        # 0x14000e170
   140006807:	cmp    rcx,rax
   14000680a:	je     0x140006847
   14000680c:	test   BYTE PTR [rcx+0x1c],0x2
   140006810:	je     0x140006847
   140006812:	mov    edx,0xb
   140006817:	jmp    0x140006837
   140006819:	mov    rcx,QWORD PTR [rip+0x7950]        # 0x14000e170
   140006820:	lea    rax,[rip+0x7949]        # 0x14000e170
   140006827:	cmp    rcx,rax
   14000682a:	je     0x140006847
   14000682c:	test   BYTE PTR [rcx+0x1c],0x2
   140006830:	je     0x140006847
   140006832:	mov    edx,0xc
   140006837:	mov    rcx,QWORD PTR [rcx+0x10]
   14000683b:	lea    r8,[rip+0x44ae]        # 0x14000acf0
   140006842:	call   0x1400011b0
   140006847:	mov    ecx,DWORD PTR [rdi+0x4a0]
   14000684d:	cmp    DWORD PTR [rdi+0x4a4],ecx
   140006853:	mov    rbp,QWORD PTR [rsp+0x48]
   140006858:	mov    rsi,QWORD PTR [rsp+0x50]
   14000685d:	setne  bl
   140006860:	mov    rdi,QWORD PTR [rsp+0x58]
   140006865:	mov    eax,ebx
   140006867:	mov    rbx,QWORD PTR [rsp+0x40]
   14000686c:	add    rsp,0x20
   140006870:	pop    r15
   140006872:	pop    r14
   140006874:	pop    r12
   140006876:	ret    
   140006877:	int3   
   140006878:	int3   
   140006879:	int3   
   14000687a:	int3   
   14000687b:	int3   
   14000687c:	int3   
   14000687d:	int3   
   14000687e:	int3   
   14000687f:	int3   
   140006880:	mov    rax,rsp
   140006883:	mov    QWORD PTR [rax+0x8],rbx
   140006887:	mov    QWORD PTR [rax+0x10],rsi
   14000688b:	push   rdi
   14000688c:	sub    rsp,0x90
   140006893:	and    DWORD PTR [rdx],0x0
   140006896:	mov    rsi,r8
   140006899:	and    DWORD PTR [rdx+0x4],0x0
   14000689d:	mov    rdi,rdx
   1400068a0:	cmp    QWORD PTR [rcx+0x490],0x0
   1400068a8:	mov    rbx,rcx
   1400068ab:	jne    0x1400068eb
   1400068ad:	movups xmm0,XMMWORD PTR [r8]
   1400068b1:	lea    rdx,[rax-0x68]
   1400068b5:	movups xmm1,XMMWORD PTR [r8+0x10]
   1400068ba:	movaps XMMWORD PTR [rax-0x68],xmm0
   1400068be:	movups xmm0,XMMWORD PTR [r8+0x20]
   1400068c3:	movaps XMMWORD PTR [rax-0x58],xmm1
   1400068c7:	movups xmm1,XMMWORD PTR [r8+0x30]
   1400068cc:	movaps XMMWORD PTR [rax-0x48],xmm0
   1400068d0:	movups xmm0,XMMWORD PTR [r8+0x40]
   1400068d5:	movaps XMMWORD PTR [rax-0x38],xmm1
   1400068d9:	movups xmm1,XMMWORD PTR [r8+0x50]
   1400068de:	movaps XMMWORD PTR [rax-0x28],xmm0
   1400068e2:	movaps XMMWORD PTR [rax-0x18],xmm1
   1400068e6:	call   0x1400066e0
   1400068eb:	mov    r9,QWORD PTR [rbx+0x490]
   1400068f2:	test   r9,r9
   1400068f5:	je     0x14000699e
   1400068fb:	mov    rax,QWORD PTR [rbx+0x498]
   140006902:	mov    edx,0x1
   140006907:	mov    r8d,DWORD PTR [rbx+0x4a8]
   14000690e:	mov    ecx,DWORD PTR [rsi+0x4]
   140006911:	mov    QWORD PTR [rsp+0x20],rax
   140006916:	call   QWORD PTR [rip+0x393c]        # 0x14000a258
   14000691c:	test   eax,eax
   14000691e:	je     0x14000699e
   140006920:	movsxd rax,DWORD PTR [rbx+0x4a0]
   140006927:	mov    rcx,QWORD PTR [rbx+0x498]
   14000692e:	mov    r8d,DWORD PTR [rbx+0x45c]
   140006935:	mov    edx,DWORD PTR [rbx+0x464]
   14000693b:	cmp    DWORD PTR [rcx+rax*4],r8d
   14000693f:	jge    0x140006947
   140006941:	mov    DWORD PTR [rcx+rax*4],r8d
   140006945:	jmp    0x14000694f
   140006947:	cmp    DWORD PTR [rcx+rax*4],edx
   14000694a:	jle    0x14000694f
   14000694c:	mov    DWORD PTR [rcx+rax*4],edx
   14000694f:	movsxd rax,DWORD PTR [rbx+0x4a4]
   140006956:	mov    rcx,QWORD PTR [rbx+0x498]
   14000695d:	mov    r8d,DWORD PTR [rbx+0x460]
   140006964:	mov    edx,DWORD PTR [rbx+0x468]
   14000696a:	cmp    DWORD PTR [rcx+rax*4],r8d
   14000696e:	jge    0x140006976
   140006970:	mov    DWORD PTR [rcx+rax*4],r8d
   140006974:	jmp    0x14000697e
   140006976:	cmp    DWORD PTR [rcx+rax*4],edx
   140006979:	jle    0x14000697e
   14000697b:	mov    DWORD PTR [rcx+rax*4],edx
   14000697e:	mov    rdx,QWORD PTR [rbx+0x498]
   140006985:	movsxd rax,DWORD PTR [rbx+0x4a0]
   14000698c:	mov    ecx,DWORD PTR [rdx+rax*4]
   14000698f:	movsxd rax,DWORD PTR [rbx+0x4a4]
   140006996:	mov    DWORD PTR [rdi],ecx
   140006998:	mov    ecx,DWORD PTR [rdx+rax*4]
   14000699b:	mov    DWORD PTR [rdi+0x4],ecx
   14000699e:	lea    r11,[rsp+0x90]
   1400069a6:	mov    rax,rdi
   1400069a9:	mov    rbx,QWORD PTR [r11+0x10]
   1400069ad:	mov    rsi,QWORD PTR [r11+0x18]
   1400069b1:	mov    rsp,r11
   1400069b4:	pop    rdi
   1400069b5:	ret    
   1400069b6:	int3   
   1400069b7:	int3   
   1400069b8:	int3   
   1400069b9:	int3   
   1400069ba:	int3   
   1400069bb:	int3   
   1400069bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400069c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400069c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400069cb:	push   rdi
   1400069cc:	sub    rsp,0x30
   1400069d0:	mov    edx,DWORD PTR [rip+0x8652]        # 0x14000f028
   1400069d6:	xor    ebp,ebp
   1400069d8:	xor    edi,edi
   1400069da:	mov    ebx,ecx
   1400069dc:	test   edx,edx
   1400069de:	jle    0x140006b67
   1400069e4:	mov    r9,QWORD PTR [rip+0x86b5]        # 0x14000f0a0
   1400069eb:	xor    esi,esi
   1400069ed:	test   ebp,ebp
   1400069ef:	js     0x140006b67
   1400069f5:	mov    rcx,QWORD PTR [rip+0x8624]        # 0x14000f020
   1400069fc:	add    rcx,rsi
   1400069ff:	mov    rax,QWORD PTR [rcx+0x10]
   140006a03:	test   rax,rax
   140006a06:	je     0x140006b05
   140006a0c:	test   r9,r9
   140006a0f:	jne    0x140006ad0
   140006a15:	cmp    QWORD PTR [rip+0x869c],r9        # 0x14000f0b8
   140006a1c:	je     0x140006b61
   140006a22:	mov    eax,DWORD PTR [rip+0x7758]        # 0x14000e180
   140006a28:	cmp    DWORD PTR [rcx+0x18],eax
   140006a2b:	jne    0x140006b05
   140006a31:	cmp    ebx,DWORD PTR [rcx]
   140006a33:	jne    0x140006b05
   140006a39:	test   BYTE PTR [rip+0x8604],0x40        # 0x14000f044
   140006a40:	je     0x140006b61
   140006a46:	mov    rax,QWORD PTR [rcx+0x10]
   140006a4a:	lea    edx,[r9+0x1]
   140006a4e:	and    QWORD PTR [rsp+0x28],r9
   140006a53:	mov    r8d,edx
   140006a56:	and    DWORD PTR [rsp+0x20],r9d
   140006a5b:	xor    ecx,ecx
   140006a5d:	mov    QWORD PTR [rip+0x863c],rax        # 0x14000f0a0
   140006a64:	call   0x14000593c
   140006a69:	mov    QWORD PTR [rip+0x7708],rax        # 0x14000e178
   140006a70:	cmp    rax,0xffffffffffffffff
   140006a74:	je     0x140006b57
   140006a7a:	mov    rcx,QWORD PTR [rax+0x8]
   140006a7e:	lea    rdx,[rip+0x85c3]        # 0x14000f048
   140006a85:	call   0x140006320
   140006a8a:	test   eax,eax
   140006a8c:	je     0x140006b17
   140006a92:	mov    edx,DWORD PTR [rip+0x85b8]        # 0x14000f050
   140006a98:	mov    r8d,DWORD PTR [rip+0x85b5]        # 0x14000f054
   140006a9f:	mov    eax,DWORD PTR [rip+0x8647]        # 0x14000f0ec
   140006aa5:	mov    ecx,DWORD PTR [rip+0x863d]        # 0x14000f0e8
   140006aab:	cmp    edx,r8d
   140006aae:	jle    0x140006ab7
   140006ab0:	cmp    eax,ecx
   140006ab2:	jl     0x140006abd
   140006ab4:	cmp    edx,r8d
   140006ab7:	jge    0x140006ac5
   140006ab9:	cmp    eax,ecx
   140006abb:	jle    0x140006ac5
   140006abd:	bts    DWORD PTR [rip+0x857f],0x1f        # 0x14000f044
   140006ac5:	mov    DWORD PTR [rip+0x86d1],ebx        # 0x14000f19c
   140006acb:	jmp    0x140006b57
   140006ad0:	sub    r9,rax
   140006ad3:	movzx  edx,WORD PTR [rax]
   140006ad6:	movzx  r8d,WORD PTR [rax+r9*1]
   140006adb:	sub    edx,r8d
   140006ade:	jne    0x140006ae9
   140006ae0:	add    rax,0x2
   140006ae4:	test   r8d,r8d
   140006ae7:	jne    0x140006ad3
   140006ae9:	test   edx,edx
   140006aeb:	jne    0x140006af1
   140006aed:	cmp    ebx,DWORD PTR [rcx]
   140006aef:	je     0x140006b61
   140006af1:	call   0x140006630
   140006af6:	mov    edx,DWORD PTR [rip+0x852c]        # 0x14000f028
   140006afc:	mov    ebp,eax
   140006afe:	mov    r9,QWORD PTR [rip+0x859b]        # 0x14000f0a0
   140006b05:	inc    edi
   140006b07:	add    rsi,0x4b0
   140006b0e:	cmp    edi,edx
   140006b10:	jge    0x140006b67
   140006b12:	jmp    0x1400069ed
   140006b17:	mov    rcx,QWORD PTR [rip+0x7652]        # 0x14000e170
   140006b1e:	lea    rax,[rip+0x764b]        # 0x14000e170
   140006b25:	cmp    rcx,rax
   140006b28:	je     0x140006b45
   140006b2a:	test   BYTE PTR [rcx+0x1c],0x2
   140006b2e:	je     0x140006b45
   140006b30:	mov    rcx,QWORD PTR [rcx+0x10]
   140006b34:	lea    r8,[rip+0x41b5]        # 0x14000acf0
   140006b3b:	mov    edx,0xd
   140006b40:	call   0x1400011b0
   140006b45:	mov    rcx,QWORD PTR [rip+0x854c]        # 0x14000f098
   140006b4c:	xor    edx,edx
   140006b4e:	lea    r8d,[rdx+0x1]
   140006b52:	call   0x140004ae4
   140006b57:	and    QWORD PTR [rip+0x8541],0x0        # 0x14000f0a0
   140006b5f:	jmp    0x140006b67
   140006b61:	mov    DWORD PTR [rip+0x8635],ebx        # 0x14000f19c
   140006b67:	mov    rbx,QWORD PTR [rsp+0x40]
   140006b6c:	mov    eax,ebp
   140006b6e:	mov    rbp,QWORD PTR [rsp+0x48]
   140006b73:	mov    rsi,QWORD PTR [rsp+0x50]
   140006b78:	add    rsp,0x30
   140006b7c:	pop    rdi
   140006b7d:	ret    
   140006b7e:	int3   
   140006b7f:	int3   
   140006b80:	int3   
   140006b81:	int3   
   140006b82:	int3   
   140006b83:	int3   
   140006b84:	mov    rax,rsp
   140006b87:	mov    QWORD PTR [rax+0x10],rbx
   140006b8b:	mov    QWORD PTR [rax+0x18],rsi
   140006b8f:	mov    QWORD PTR [rax+0x20],rdi
   140006b93:	push   rbp
   140006b94:	push   r12
   140006b96:	push   r13
   140006b98:	push   r14
   140006b9a:	push   r15
   140006b9c:	lea    rbp,[rax-0xca8]
   140006ba3:	sub    rsp,0xd80
   140006baa:	mov    rax,QWORD PTR [rip+0x7457]        # 0x14000e008
   140006bb1:	xor    rax,rsp
   140006bb4:	mov    QWORD PTR [rbp+0xc70],rax
   140006bbb:	mov    rsi,rcx
   140006bbe:	mov    QWORD PTR [rsp+0x30],rcx
   140006bc3:	xor    ebx,ebx
   140006bc5:	lea    rcx,[rsp+0x28]
   140006bca:	lea    rdx,[rsp+0x20]
   140006bcf:	mov    QWORD PTR [rsp+0x20],rbx
   140006bd4:	call   0x140007c60
   140006bd9:	mov    edi,eax
   140006bdb:	test   eax,eax
   140006bdd:	js     0x140007128
   140006be3:	mov    r12d,ebx
   140006be6:	mov    r13,QWORD PTR [rsp+0x20]
   140006beb:	cmp    DWORD PTR [rsp+0x28],ebx
   140006bef:	jbe    0x140007111
   140006bf5:	mov    r14d,0x80
   140006bfb:	mov    eax,r12d
   140006bfe:	lea    rcx,[rbp+0x380]
   140006c05:	imul   rsi,rax,0x438
   140006c0c:	mov    edx,0x8
   140006c11:	add    rsi,r13
   140006c14:	mov    rax,rsi
   140006c17:	movups xmm0,XMMWORD PTR [rax]
   140006c1a:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006c1e:	movups XMMWORD PTR [rcx],xmm0
   140006c21:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006c25:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006c29:	movups xmm1,XMMWORD PTR [rax+0x30]
   140006c2d:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006c31:	movups xmm0,XMMWORD PTR [rax+0x40]
   140006c35:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006c39:	movups xmm1,XMMWORD PTR [rax+0x50]
   140006c3d:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006c41:	movups xmm0,XMMWORD PTR [rax+0x60]
   140006c45:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006c49:	movups xmm1,XMMWORD PTR [rax+0x70]
   140006c4d:	add    rax,r14
   140006c50:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006c54:	add    rcx,r14
   140006c57:	movups XMMWORD PTR [rcx-0x10],xmm1
   140006c5b:	sub    rdx,0x1
   140006c5f:	jne    0x140006c17
   140006c61:	movups xmm0,XMMWORD PTR [rax]
   140006c64:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006c68:	movups XMMWORD PTR [rcx],xmm0
   140006c6b:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006c6f:	mov    rax,QWORD PTR [rax+0x30]
   140006c73:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006c77:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006c7b:	mov    QWORD PTR [rcx+0x30],rax
   140006c7f:	mov    eax,DWORD PTR [rbp+0x390]
   140006c85:	dec    eax
   140006c87:	test   eax,0xfffffffd
   140006c8c:	jne    0x1400070fe
   140006c92:	cmp    QWORD PTR [rsi+0x18],rbx
   140006c96:	je     0x1400070fe
   140006c9c:	mov    r8d,0x438
   140006ca2:	mov    QWORD PTR [rbp+0x7c0],rbx
   140006ca9:	lea    rcx,[rbp+0x7e0]
   140006cb0:	mov    QWORD PTR [rbp+0x7c8],rbx
   140006cb7:	mov    QWORD PTR [rbp+0x7d0],rbx
   140006cbe:	mov    DWORD PTR [rbp+0x7d8],ebx
   140006cc4:	mov    DWORD PTR [rbp+0xc18],ebx
   140006cca:	call   0x140009952
   140006ccf:	xorps  xmm0,xmm0
   140006cd2:	mov    QWORD PTR [rbp+0xc60],rbx
   140006cd9:	movdqa XMMWORD PTR [rbp+0xc50],xmm0
   140006ce1:	lea    r15,[rsi+0x8]
   140006ce5:	mov    DWORD PTR [rbp+0xc68],ebx
   140006ceb:	lea    r9,[rsp+0x20]
   140006cf0:	mov    DWORD PTR [rsp+0x20],ebx
   140006cf4:	xor    r8d,r8d
   140006cf7:	mov    rcx,QWORD PTR [r15]
   140006cfa:	mov    edx,0x20000007
   140006cff:	mov    r14,rbx
   140006d02:	call   QWORD PTR [rip+0x3488]        # 0x14000a190
   140006d08:	test   eax,eax
   140006d0a:	je     0x140006d2a
   140006d0c:	call   QWORD PTR [rip+0x358e]        # 0x14000a2a0
   140006d12:	movzx  ecx,ax
   140006d15:	mov    edi,0x80004005
   140006d1a:	or     ecx,0x80070000
   140006d20:	test   eax,eax
   140006d22:	cmovle ecx,eax
   140006d25:	test   ecx,ecx
   140006d27:	cmovs  edi,ecx
   140006d2a:	test   edi,edi
   140006d2c:	js     0x140006dba
   140006d32:	mov    ecx,DWORD PTR [rsp+0x20]
   140006d36:	mov    eax,0x2
   140006d3b:	inc    ecx
   140006d3d:	mul    rcx
   140006d40:	mov    rcx,0xffffffffffffffff
   140006d47:	cmovo  rax,rcx
   140006d4b:	mov    rcx,rax
   140006d4e:	call   0x140008bd8
   140006d53:	test   rax,rax
   140006d56:	mov    r14,rax
   140006d59:	mov    eax,0x8007000e
   140006d5e:	cmove  edi,eax
   140006d61:	test   edi,edi
   140006d63:	js     0x140006dba
   140006d65:	mov    rcx,QWORD PTR [r15]
   140006d68:	lea    r9,[rsp+0x20]
   140006d6d:	mov    r8,r14
   140006d70:	mov    edx,0x20000007
   140006d75:	call   QWORD PTR [rip+0x3415]        # 0x14000a190
   140006d7b:	test   eax,eax
   140006d7d:	jne    0x140006d9d
   140006d7f:	call   QWORD PTR [rip+0x351b]        # 0x14000a2a0
   140006d85:	movzx  ecx,ax
   140006d88:	mov    edi,0x80004005
   140006d8d:	or     ecx,0x80070000
   140006d93:	test   eax,eax
   140006d95:	cmovle ecx,eax
   140006d98:	test   ecx,ecx
   140006d9a:	cmovs  edi,ecx
   140006d9d:	test   edi,edi
   140006d9f:	js     0x140006dba
   140006da1:	cmp    DWORD PTR [rsp+0x20],0x1
   140006da6:	jb     0x140006dba
   140006da8:	mov    eax,DWORD PTR [rsp+0x20]
   140006dac:	mov    WORD PTR [r14+rax*2],bx
   140006db1:	mov    QWORD PTR [rbp+0x7d0],r14
   140006db8:	jmp    0x140006dc2
   140006dba:	mov    rcx,r14
   140006dbd:	call   0x140008be4
   140006dc2:	mov    r14d,0x80
   140006dc8:	test   edi,edi
   140006dca:	js     0x1400070c2
   140006dd0:	lea    r8d,[r14-0x78]
   140006dd4:	mov    rax,rsi
   140006dd7:	mov    edx,r8d
   140006dda:	lea    rcx,[rsp+0x40]
   140006ddf:	movups xmm0,XMMWORD PTR [rax]
   140006de2:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006de6:	movups XMMWORD PTR [rcx],xmm0
   140006de9:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006ded:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006df1:	movups xmm1,XMMWORD PTR [rax+0x30]
   140006df5:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006df9:	movups xmm0,XMMWORD PTR [rax+0x40]
   140006dfd:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006e01:	movups xmm1,XMMWORD PTR [rax+0x50]
   140006e05:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006e09:	movups xmm0,XMMWORD PTR [rax+0x60]
   140006e0d:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006e11:	movups xmm1,XMMWORD PTR [rax+0x70]
   140006e15:	add    rax,r14
   140006e18:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006e1c:	add    rcx,r14
   140006e1f:	movups XMMWORD PTR [rcx-0x10],xmm1
   140006e23:	sub    rdx,0x1
   140006e27:	jne    0x140006ddf
   140006e29:	movups xmm0,XMMWORD PTR [rax]
   140006e2c:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006e30:	movups XMMWORD PTR [rcx],xmm0
   140006e33:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006e37:	mov    rax,QWORD PTR [rax+0x30]
   140006e3b:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006e3f:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006e43:	mov    QWORD PTR [rcx+0x30],rax
   140006e47:	mov    eax,DWORD PTR [rsp+0x50]
   140006e4b:	test   eax,eax
   140006e4d:	jle    0x140006e65
   140006e4f:	cmp    eax,0x2
   140006e52:	jle    0x140006e5e
   140006e54:	cmp    eax,0x3
   140006e57:	jne    0x140006e65
   140006e59:	lea    eax,[rdx+0x2]
   140006e5c:	jmp    0x140006e67
   140006e5e:	mov    eax,0x1
   140006e63:	jmp    0x140006e67
   140006e65:	mov    eax,ebx
   140006e67:	mov    DWORD PTR [rbp+0x7d8],eax
   140006e6d:	lea    rcx,[rbp+0x7e0]
   140006e74:	mov    rax,r8
   140006e77:	movups xmm0,XMMWORD PTR [rsi]
   140006e7a:	movups XMMWORD PTR [rcx],xmm0
   140006e7d:	movups xmm1,XMMWORD PTR [rsi+0x10]
   140006e81:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006e85:	movups xmm0,XMMWORD PTR [rsi+0x20]
   140006e89:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006e8d:	movups xmm1,XMMWORD PTR [rsi+0x30]
   140006e91:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006e95:	movups xmm0,XMMWORD PTR [rsi+0x40]
   140006e99:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006e9d:	movups xmm1,XMMWORD PTR [rsi+0x50]
   140006ea1:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006ea5:	movups xmm0,XMMWORD PTR [rsi+0x60]
   140006ea9:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006ead:	add    rcx,r14
   140006eb0:	movups xmm1,XMMWORD PTR [rsi+0x70]
   140006eb4:	add    rsi,r14
   140006eb7:	movups XMMWORD PTR [rcx-0x10],xmm1
   140006ebb:	sub    rax,0x1
   140006ebf:	jne    0x140006e77
   140006ec1:	movups xmm0,XMMWORD PTR [rsi]
   140006ec4:	mov    DWORD PTR [rsp+0x20],ebx
   140006ec8:	lea    r9,[rsp+0x20]
   140006ecd:	xor    r8d,r8d
   140006ed0:	mov    edx,0x20000005
   140006ed5:	movups XMMWORD PTR [rcx],xmm0
   140006ed8:	movups xmm1,XMMWORD PTR [rsi+0x10]
   140006edc:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006ee0:	movups xmm0,XMMWORD PTR [rsi+0x20]
   140006ee4:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006ee8:	mov    rax,QWORD PTR [rsi+0x30]
   140006eec:	mov    QWORD PTR [rcx+0x30],rax
   140006ef0:	mov    eax,DWORD PTR [r15]
   140006ef3:	mov    DWORD PTR [rbp+0x7c0],eax
   140006ef9:	mov    rcx,QWORD PTR [r15]
   140006efc:	call   QWORD PTR [rip+0x328e]        # 0x14000a190
   140006f02:	test   eax,eax
   140006f04:	je     0x140006f24
   140006f06:	call   QWORD PTR [rip+0x3394]        # 0x14000a2a0
   140006f0c:	movzx  ecx,ax
   140006f0f:	mov    edi,0x80004005
   140006f14:	or     ecx,0x80070000
   140006f1a:	test   eax,eax
   140006f1c:	cmovle ecx,eax
   140006f1f:	test   ecx,ecx
   140006f21:	cmovs  edi,ecx
   140006f24:	test   edi,edi
   140006f26:	js     0x1400070c2
   140006f2c:	mov    ecx,DWORD PTR [rsp+0x20]
   140006f30:	call   QWORD PTR [rip+0x3522]        # 0x14000a458
   140006f36:	mov    rsi,rax
   140006f39:	test   rax,rax
   140006f3c:	jne    0x140006f48
   140006f3e:	mov    edi,0x8007000e
   140006f43:	jmp    0x1400070c2
   140006f48:	mov    rcx,QWORD PTR [r15]
   140006f4b:	lea    r9,[rsp+0x20]
   140006f50:	mov    r8,rax
   140006f53:	mov    edx,0x20000005
   140006f58:	call   QWORD PTR [rip+0x3232]        # 0x14000a190
   140006f5e:	cmp    eax,0xffffffff
   140006f61:	jne    0x140006f81
   140006f63:	call   QWORD PTR [rip+0x3337]        # 0x14000a2a0
   140006f69:	movzx  ecx,ax
   140006f6c:	mov    edi,0x80004005
   140006f71:	or     ecx,0x80070000
   140006f77:	test   eax,eax
   140006f79:	cmovle ecx,eax
   140006f7c:	test   ecx,ecx
   140006f7e:	cmovs  edi,ecx
   140006f81:	test   edi,edi
   140006f83:	js     0x140006f9e
   140006f85:	lea    rdx,[rbp+0xc1c]
   140006f8c:	mov    rcx,rsi
   140006f8f:	call   0x140006320
   140006f94:	test   eax,eax
   140006f96:	mov    eax,0x80004005
   140006f9b:	cmove  edi,eax
   140006f9e:	mov    rcx,rsi
   140006fa1:	call   QWORD PTR [rip+0x34a1]        # 0x14000a448
   140006fa7:	test   edi,edi
   140006fa9:	js     0x1400070c2
   140006faf:	mov    rcx,QWORD PTR [r15]
   140006fb2:	lea    r8,[rbp+0xc3c]
   140006fb9:	lea    rdx,[rbp+0xc2c]
   140006fc0:	call   QWORD PTR [rip+0x31b2]        # 0x14000a178
   140006fc6:	test   eax,eax
   140006fc8:	jne    0x140006fea
   140006fca:	call   QWORD PTR [rip+0x32d0]        # 0x14000a2a0
   140006fd0:	movzx  ecx,ax
   140006fd3:	mov    edi,0x80004005
   140006fd8:	or     ecx,0x80070000
   140006fde:	test   eax,eax
   140006fe0:	cmovle ecx,eax
   140006fe3:	test   ecx,ecx
   140006fe5:	cmovs  edi,ecx
   140006fe8:	jmp    0x14000700b
   140006fea:	mov    eax,DWORD PTR [rbp+0xc38]
   140006ff0:	cmp    eax,DWORD PTR [rbp+0xc30]
   140006ff6:	je     0x140007006
   140006ff8:	mov    eax,DWORD PTR [rbp+0xc34]
   140006ffe:	cmp    eax,DWORD PTR [rbp+0xc2c]
   140007004:	jne    0x14000700b
   140007006:	mov    edi,0x8000ffff
   14000700b:	test   edi,edi
   14000700d:	js     0x1400070c2
   140007013:	movsxd rsi,DWORD PTR [rip+0x800e]        # 0x14000f028
   14000701a:	test   esi,esi
   14000701c:	jns    0x140007028
   14000701e:	mov    edi,0x80070057
   140007023:	jmp    0x1400070c2
   140007028:	lea    ecx,[rsi+0x1]
   14000702b:	test   ecx,ecx
   14000702d:	jns    0x140007039
   14000702f:	mov    edi,0x80070057
   140007034:	jmp    0x1400070be
   140007039:	call   0x140007a2c
   14000703e:	mov    edi,eax
   140007040:	test   eax,eax
   140007042:	js     0x1400070be
   140007044:	imul   rdx,rsi,0x4b0
   14000704b:	lea    rax,[rbp+0x7c0]
   140007052:	mov    ecx,0x9
   140007057:	add    rdx,QWORD PTR [rip+0x7fc2]        # 0x14000f020
   14000705e:	movups xmm0,XMMWORD PTR [rax]
   140007061:	movups XMMWORD PTR [rdx],xmm0
   140007064:	movups xmm1,XMMWORD PTR [rax+0x10]
   140007068:	movups XMMWORD PTR [rdx+0x10],xmm1
   14000706c:	movups xmm0,XMMWORD PTR [rax+0x20]
   140007070:	movups XMMWORD PTR [rdx+0x20],xmm0
   140007074:	movups xmm1,XMMWORD PTR [rax+0x30]
   140007078:	movups XMMWORD PTR [rdx+0x30],xmm1
   14000707c:	movups xmm0,XMMWORD PTR [rax+0x40]
   140007080:	movups XMMWORD PTR [rdx+0x40],xmm0
   140007084:	movups xmm1,XMMWORD PTR [rax+0x50]
   140007088:	movups XMMWORD PTR [rdx+0x50],xmm1
   14000708c:	movups xmm0,XMMWORD PTR [rax+0x60]
   140007090:	movups XMMWORD PTR [rdx+0x60],xmm0
   140007094:	add    rdx,r14
   140007097:	movups xmm1,XMMWORD PTR [rax+0x70]
   14000709b:	add    rax,r14
   14000709e:	movups XMMWORD PTR [rdx-0x10],xmm1
   1400070a2:	sub    rcx,0x1
   1400070a6:	jne    0x14000705e
   1400070a8:	movups xmm0,XMMWORD PTR [rax]
   1400070ab:	movups XMMWORD PTR [rdx],xmm0
   1400070ae:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400070b2:	movups XMMWORD PTR [rdx+0x10],xmm1
   1400070b6:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400070ba:	movups XMMWORD PTR [rdx+0x20],xmm0
   1400070be:	test   edi,edi
   1400070c0:	jns    0x1400070fe
   1400070c2:	lea    rcx,[rbp+0x7c0]
   1400070c9:	call   0x140006630
   1400070ce:	mov    rcx,QWORD PTR [rbp+0x7d0]
   1400070d5:	call   0x140008be4
   1400070da:	mov    rcx,QWORD PTR [rbp+0x7c8]
   1400070e1:	call   0x140008be4
   1400070e6:	mov    rcx,QWORD PTR [rbp+0xc50]
   1400070ed:	call   0x140008be4
   1400070f2:	mov    rcx,QWORD PTR [rbp+0xc58]
   1400070f9:	call   0x140008be4
   1400070fe:	inc    r12d
   140007101:	cmp    r12d,DWORD PTR [rsp+0x28]
   140007106:	jb     0x140006bfb
   14000710c:	mov    rsi,QWORD PTR [rsp+0x30]
   140007111:	mov    rcx,r13
   140007114:	call   0x140008be4
   140007119:	test   edi,edi
   14000711b:	js     0x140007128
   14000711d:	cmp    DWORD PTR [rip+0x7f05],ebx        # 0x14000f028
   140007123:	setg   bl
   140007126:	mov    DWORD PTR [rsi],ebx
   140007128:	mov    eax,edi
   14000712a:	mov    rcx,QWORD PTR [rbp+0xc70]
   140007131:	xor    rcx,rsp
   140007134:	call   0x140009020
   140007139:	lea    r11,[rsp+0xd80]
   140007141:	mov    rbx,QWORD PTR [r11+0x38]
   140007145:	mov    rsi,QWORD PTR [r11+0x40]
   140007149:	mov    rdi,QWORD PTR [r11+0x48]
   14000714d:	mov    rsp,r11
   140007150:	pop    r15
   140007152:	pop    r14
   140007154:	pop    r13
   140007156:	pop    r12
   140007158:	pop    rbp
   140007159:	ret    
   14000715a:	int3   
   14000715b:	int3   
   14000715c:	int3   
   14000715d:	int3   
   14000715e:	int3   
   14000715f:	int3   
   140007160:	mov    rax,rsp
   140007163:	mov    QWORD PTR [rax+0x8],rbx
   140007167:	mov    QWORD PTR [rax+0x10],rbp
   14000716b:	mov    QWORD PTR [rax+0x18],rsi
   14000716f:	mov    QWORD PTR [rax+0x20],rdi
   140007173:	push   r14
   140007175:	sub    rsp,0x30
   140007179:	xor    ebx,ebx
   14000717b:	mov    edi,ebx
   14000717d:	call   0x1400073f4
   140007182:	cmp    DWORD PTR [rip+0x7ea0],ebx        # 0x14000f028
   140007188:	mov    ebp,ebx
   14000718a:	jle    0x140007236
   140007190:	mov    esi,ebx
   140007192:	test   edi,edi
   140007194:	js     0x140007238
   14000719a:	mov    r14,QWORD PTR [rip+0x7e7f]        # 0x14000f020
   1400071a1:	mov    ecx,DWORD PTR [rip+0x7fed]        # 0x14000f194
   1400071a7:	mov    rdx,QWORD PTR [rsi+r14*1+0x10]
   1400071ac:	lea    rax,[r14+0x4]
   1400071b0:	add    rax,rsi
   1400071b3:	lea    r9,[r14+0x8]
   1400071b7:	add    r9,rsi
   1400071ba:	mov    QWORD PTR [rsp+0x20],rax
   1400071bf:	call   0x140007f60
   1400071c4:	mov    edi,eax
   1400071c6:	test   eax,eax
   1400071c8:	js     0x140007218
   1400071ca:	mov    edx,DWORD PTR [rip+0x7fc4]        # 0x14000f194
   1400071d0:	mov    rcx,QWORD PTR [rsi+r14*1+0x10]
   1400071d5:	call   0x14000815c
   1400071da:	mov    edi,eax
   1400071dc:	test   eax,eax
   1400071de:	js     0x140007218
   1400071e0:	mov    rcx,QWORD PTR [rsi+r14*1+0x28]
   1400071e5:	mov    r9d,0x3
   1400071eb:	xor    r8d,r8d
   1400071ee:	xor    edx,edx
   1400071f0:	call   QWORD PTR [rip+0x306a]        # 0x14000a260
   1400071f6:	test   eax,eax
   1400071f8:	jne    0x140007218
   1400071fa:	call   QWORD PTR [rip+0x30a0]        # 0x14000a2a0
   140007200:	movzx  ecx,ax
   140007203:	mov    edi,0x80004005
   140007208:	or     ecx,0x80070000
   14000720e:	test   eax,eax
   140007210:	cmovle ecx,eax
   140007213:	test   ecx,ecx
   140007215:	cmovs  edi,ecx
   140007218:	test   edi,edi
   14000721a:	jns    0x140007221
   14000721c:	call   0x140007260
   140007221:	inc    ebp
   140007223:	add    rsi,0x4b0
   14000722a:	cmp    ebp,DWORD PTR [rip+0x7df8]        # 0x14000f028
   140007230:	jl     0x140007192
   140007236:	test   edi,edi
   140007238:	mov    rbp,QWORD PTR [rsp+0x48]
   14000723d:	setns  bl
   140007240:	mov    rsi,QWORD PTR [rsp+0x50]
   140007245:	mov    eax,ebx
   140007247:	mov    rbx,QWORD PTR [rsp+0x40]
   14000724c:	mov    rdi,QWORD PTR [rsp+0x58]
   140007251:	add    rsp,0x30
   140007255:	pop    r14
   140007257:	ret    
   140007258:	int3   
   140007259:	int3   
   14000725a:	int3   
   14000725b:	int3   
   14000725c:	int3   
   14000725d:	int3   
   14000725e:	int3   
   14000725f:	int3   
   140007260:	mov    QWORD PTR [rsp+0x8],rbx
   140007265:	mov    QWORD PTR [rsp+0x10],rsi
   14000726a:	push   rdi
   14000726b:	sub    rsp,0x20
   14000726f:	xor    edi,edi
   140007271:	cmp    DWORD PTR [rip+0x7db1],edi        # 0x14000f028
   140007277:	jle    0x1400072e4
   140007279:	xor    esi,esi
   14000727b:	mov    rbx,QWORD PTR [rip+0x7d9e]        # 0x14000f020
   140007282:	add    rbx,rsi
   140007285:	mov    rcx,rbx
   140007288:	call   0x140006630
   14000728d:	mov    rcx,QWORD PTR [rbx+0x10]
   140007291:	call   0x140008be4
   140007296:	mov    rcx,QWORD PTR [rbx+0x8]
   14000729a:	call   0x140008be4
   14000729f:	mov    rcx,QWORD PTR [rbx+0x490]
   1400072a6:	call   0x140008be4
   1400072ab:	mov    rcx,QWORD PTR [rbx+0x498]
   1400072b2:	call   0x140008be4
   1400072b7:	and    DWORD PTR [rbx+0x4],0x0
   1400072bb:	inc    edi
   1400072bd:	and    DWORD PTR [rbx],0x0
   1400072c0:	add    rsi,0x4b0
   1400072c7:	and    QWORD PTR [rbx+0x10],0x0
   1400072cc:	and    QWORD PTR [rbx+0x490],0x0
   1400072d4:	and    QWORD PTR [rbx+0x498],0x0
   1400072dc:	cmp    edi,DWORD PTR [rip+0x7d46]        # 0x14000f028
   1400072e2:	jl     0x14000727b
   1400072e4:	xor    ecx,ecx
   1400072e6:	call   0x140007a2c
   1400072eb:	and    DWORD PTR [rip+0x7eaa],0x0        # 0x14000f19c
   1400072f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072f7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400072fc:	add    rsp,0x20
   140007300:	pop    rdi
   140007301:	ret    
   140007302:	int3   
   140007303:	int3   
   140007304:	int3   
   140007305:	int3   
   140007306:	int3   
   140007307:	int3   
   140007308:	mov    QWORD PTR [rsp+0x8],rbx
   14000730d:	mov    QWORD PTR [rsp+0x10],rbp
   140007312:	mov    QWORD PTR [rsp+0x18],rsi
   140007317:	push   rdi
   140007318:	sub    rsp,0x470
   14000731f:	xor    ebx,ebx
   140007321:	lea    rsi,[rip+0x39b8]        # 0x14000ace0
   140007328:	mov    edi,ebx
   14000732a:	mov    ebp,ebx
   14000732c:	test   edi,edi
   14000732e:	js     0x1400073cf
   140007334:	mov    edx,DWORD PTR [rsi]
   140007336:	mov    rcx,QWORD PTR [rip+0x7d63]        # 0x14000f0a0
   14000733d:	call   0x14000815c
   140007342:	mov    edi,eax
   140007344:	test   eax,eax
   140007346:	jns    0x140007373
   140007348:	mov    rcx,QWORD PTR [rip+0x6e21]        # 0x14000e170
   14000734f:	lea    rax,[rip+0x6e1a]        # 0x14000e170
   140007356:	cmp    rcx,rax
   140007359:	je     0x140007373
   14000735b:	test   BYTE PTR [rcx+0x1c],0x2
   14000735f:	je     0x140007373
   140007361:	mov    edx,DWORD PTR [rsi]
   140007363:	mov    r9d,edi
   140007366:	mov    rcx,QWORD PTR [rcx+0x10]
   14000736a:	mov    DWORD PTR [rsp+0x20],edx
   14000736e:	call   0x1400064e0
   140007373:	inc    ebp
   140007375:	add    rsi,0x4
   140007379:	cmp    ebp,0x4
   14000737c:	jb     0x14000732c
   14000737e:	test   edi,edi
   140007380:	js     0x1400073cf
   140007382:	mov    rcx,QWORD PTR [rip+0x7d17]        # 0x14000f0a0
   140007389:	lea    rdx,[rsp+0x30]
   14000738e:	call   0x140007d28
   140007393:	mov    rcx,QWORD PTR [rsp+0x38]
   140007398:	mov    r9d,0x3
   14000739e:	xor    r8d,r8d
   1400073a1:	xor    edx,edx
   1400073a3:	mov    edi,eax
   1400073a5:	call   QWORD PTR [rip+0x2eb5]        # 0x14000a260
   1400073ab:	test   eax,eax
   1400073ad:	jne    0x1400073cd
   1400073af:	call   QWORD PTR [rip+0x2eeb]        # 0x14000a2a0
   1400073b5:	movzx  ecx,ax
   1400073b8:	mov    edi,0x80004005
   1400073bd:	or     ecx,0x80070000
   1400073c3:	test   eax,eax
   1400073c5:	cmovle ecx,eax
   1400073c8:	test   ecx,ecx
   1400073ca:	cmovs  edi,ecx
   1400073cd:	test   edi,edi
   1400073cf:	lea    r11,[rsp+0x470]
   1400073d7:	setns  bl
   1400073da:	mov    rbp,QWORD PTR [r11+0x18]
   1400073de:	mov    eax,ebx
   1400073e0:	mov    rbx,QWORD PTR [r11+0x10]
   1400073e4:	mov    rsi,QWORD PTR [r11+0x20]
   1400073e8:	mov    rsp,r11
   1400073eb:	pop    rdi
   1400073ec:	ret    
   1400073ed:	int3   
   1400073ee:	int3   
   1400073ef:	int3   
   1400073f0:	int3   
   1400073f1:	int3   
   1400073f2:	int3   
   1400073f3:	int3   
   1400073f4:	rex push rbx
   1400073f6:	sub    rsp,0x110
   1400073fd:	mov    rax,QWORD PTR [rip+0x6c04]        # 0x14000e008
   140007404:	xor    rax,rsp
   140007407:	mov    QWORD PTR [rsp+0x100],rax
   14000740f:	mov    ebx,0xdc
   140007414:	lea    rcx,[rsp+0x20]
   140007419:	mov    r8d,ebx
   14000741c:	xor    edx,edx
   14000741e:	call   0x140009952
   140007423:	mov    r9d,0x4
   140007429:	mov    WORD PTR [rsp+0x64],bx
   14000742e:	lea    r8,[rsp+0x20]
   140007433:	or     edx,0xffffffff
   140007436:	xor    ecx,ecx
   140007438:	call   QWORD PTR [rip+0x2e32]        # 0x14000a270
   14000743e:	test   eax,eax
   140007440:	je     0x1400074a2
   140007442:	test   BYTE PTR [rsp+0x68],0x80
   140007447:	je     0x1400074a2
   140007449:	mov    ecx,DWORD PTR [rsp+0x74]
   14000744d:	test   ecx,ecx
   14000744f:	je     0x1400074a2
   140007451:	cmp    ecx,0x1
   140007454:	jne    0x14000746c
   140007456:	mov    DWORD PTR [rip+0x7d34],0x10        # 0x14000f194
   140007460:	mov    DWORD PTR [rip+0x7d2e],0x1000        # 0x14000f198
   14000746a:	jmp    0x1400074b6
   14000746c:	cmp    ecx,0x2
   14000746f:	jne    0x140007487
   140007471:	mov    DWORD PTR [rip+0x7d19],0x100        # 0x14000f194
   14000747b:	mov    DWORD PTR [rip+0x7d13],0x8        # 0x14000f198
   140007485:	jmp    0x1400074b6
   140007487:	cmp    ecx,0x3
   14000748a:	jne    0x1400074b6
   14000748c:	mov    DWORD PTR [rip+0x7cfe],0x1000        # 0x14000f194
   140007496:	mov    DWORD PTR [rip+0x7cf8],0x10        # 0x14000f198
   1400074a0:	jmp    0x1400074b6
   1400074a2:	mov    DWORD PTR [rip+0x7ce8],0x8        # 0x14000f194
   1400074ac:	mov    DWORD PTR [rip+0x7ce2],0x100        # 0x14000f198
   1400074b6:	mov    rcx,QWORD PTR [rsp+0x100]
   1400074be:	xor    rcx,rsp
   1400074c1:	call   0x140009020
   1400074c6:	add    rsp,0x110
   1400074cd:	pop    rbx
   1400074ce:	ret    
   1400074cf:	int3   
   1400074d0:	int3   
   1400074d1:	int3   
   1400074d2:	int3   
   1400074d3:	int3   
   1400074d4:	int3   
   1400074d5:	int3   
   1400074d6:	int3   
   1400074d7:	int3   
   1400074d8:	mov    rax,rsp
   1400074db:	mov    QWORD PTR [rax+0x8],rbx
   1400074df:	mov    QWORD PTR [rax+0x10],rsi
   1400074e3:	mov    QWORD PTR [rax+0x18],rdi
   1400074e7:	push   rbp
   1400074e8:	push   r12
   1400074ea:	push   r13
   1400074ec:	push   r14
   1400074ee:	push   r15
   1400074f0:	lea    rbp,[rax-0x858]
   1400074f7:	sub    rsp,0x930
   1400074fe:	mov    rax,QWORD PTR [rip+0x6b03]        # 0x14000e008
   140007505:	xor    rax,rsp
   140007508:	mov    QWORD PTR [rbp+0x820],rax
   14000750f:	mov    r13d,ecx
   140007512:	lea    rdx,[rsp+0x20]
   140007517:	xor    r15d,r15d
   14000751a:	lea    rcx,[rsp+0x28]
   14000751f:	and    QWORD PTR [rsp+0x20],r15
   140007524:	call   0x140007c60
   140007529:	mov    ebx,eax
   14000752b:	test   eax,eax
   14000752d:	js     0x140007804
   140007533:	mov    r12,QWORD PTR [rsp+0x20]
   140007538:	xor    r14d,r14d
   14000753b:	cmp    DWORD PTR [rsp+0x28],r14d
   140007540:	jbe    0x1400077fc
   140007546:	test   ebx,ebx
   140007548:	js     0x1400077fc
   14000754e:	test   r15d,r15d
   140007551:	jne    0x1400077fc
   140007557:	mov    eax,r14d
   14000755a:	lea    rcx,[rbp+0x370]
   140007561:	imul   rsi,rax,0x438
   140007568:	lea    edx,[r15+0x8]
   14000756c:	add    rsi,r12
   14000756f:	mov    rax,rsi
   140007572:	movups xmm0,XMMWORD PTR [rax]
   140007575:	movups xmm1,XMMWORD PTR [rax+0x10]
   140007579:	lea    rax,[rax+0x80]
   140007580:	movups XMMWORD PTR [rcx],xmm0
   140007583:	movups xmm0,XMMWORD PTR [rax-0x60]
   140007587:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000758b:	movups xmm1,XMMWORD PTR [rax-0x50]
   14000758f:	movups XMMWORD PTR [rcx+0x20],xmm0
   140007593:	movups xmm0,XMMWORD PTR [rax-0x40]
   140007597:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000759b:	movups xmm1,XMMWORD PTR [rax-0x30]
   14000759f:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400075a3:	movups xmm0,XMMWORD PTR [rax-0x20]
   1400075a7:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400075ab:	movups xmm1,XMMWORD PTR [rax-0x10]
   1400075af:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400075b3:	lea    rcx,[rcx+0x80]
   1400075ba:	movups XMMWORD PTR [rcx-0x10],xmm1
   1400075be:	sub    rdx,0x1
   1400075c2:	jne    0x140007572
   1400075c4:	movups xmm0,XMMWORD PTR [rax]
   1400075c7:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400075cb:	movups XMMWORD PTR [rcx],xmm0
   1400075ce:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400075d2:	mov    rax,QWORD PTR [rax+0x30]
   1400075d6:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400075da:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400075de:	mov    QWORD PTR [rcx+0x30],rax
   1400075e2:	mov    eax,DWORD PTR [rbp+0x380]
   1400075e8:	dec    eax
   1400075ea:	test   eax,0xfffffffd
   1400075ef:	jne    0x1400077ee
   1400075f5:	mov    rax,rsi
   1400075f8:	lea    rcx,[rsp+0x30]
   1400075fd:	mov    edx,0x8
   140007602:	movups xmm0,XMMWORD PTR [rax]
   140007605:	movups xmm1,XMMWORD PTR [rax+0x10]
   140007609:	lea    rax,[rax+0x80]
   140007610:	movups XMMWORD PTR [rcx],xmm0
   140007613:	movups xmm0,XMMWORD PTR [rax-0x60]
   140007617:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000761b:	movups xmm1,XMMWORD PTR [rax-0x50]
   14000761f:	movups XMMWORD PTR [rcx+0x20],xmm0
   140007623:	movups xmm0,XMMWORD PTR [rax-0x40]
   140007627:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000762b:	movups xmm1,XMMWORD PTR [rax-0x30]
   14000762f:	movups XMMWORD PTR [rcx+0x40],xmm0
   140007633:	movups xmm0,XMMWORD PTR [rax-0x20]
   140007637:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000763b:	movups xmm1,XMMWORD PTR [rax-0x10]
   14000763f:	movups XMMWORD PTR [rcx+0x60],xmm0
   140007643:	lea    rcx,[rcx+0x80]
   14000764a:	movups XMMWORD PTR [rcx-0x10],xmm1
   14000764e:	sub    rdx,0x1
   140007652:	jne    0x140007602
   140007654:	movups xmm0,XMMWORD PTR [rax]
   140007657:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000765b:	movups XMMWORD PTR [rcx],xmm0
   14000765e:	movups xmm0,XMMWORD PTR [rax+0x20]
   140007662:	mov    rax,QWORD PTR [rax+0x30]
   140007666:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000766a:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000766e:	mov    QWORD PTR [rcx+0x30],rax
   140007672:	mov    eax,DWORD PTR [rsp+0x40]
   140007676:	test   eax,eax
   140007678:	jle    0x140007690
   14000767a:	cmp    eax,0x2
   14000767d:	jle    0x140007689
   14000767f:	cmp    eax,0x3
   140007682:	jne    0x140007690
   140007684:	lea    edi,[rdx+0x2]
   140007687:	jmp    0x140007692
   140007689:	mov    edi,0x1
   14000768e:	jmp    0x140007692
   140007690:	xor    edi,edi
   140007692:	mov    DWORD PTR [rbp+0x7b0],0x68
   14000769c:	lea    rdx,[rbp+0x7b0]
   1400076a3:	mov    rcx,QWORD PTR [rsi+0x18]
   1400076a7:	call   QWORD PTR [rip+0x2a7b]        # 0x14000a128
   1400076ad:	test   eax,eax
   1400076af:	jne    0x1400076cf
   1400076b1:	call   QWORD PTR [rip+0x2be9]        # 0x14000a2a0
   1400076b7:	movzx  ecx,ax
   1400076ba:	mov    ebx,0x80004005
   1400076bf:	or     ecx,0x80070000
   1400076c5:	test   eax,eax
   1400076c7:	cmovle ecx,eax
   1400076ca:	test   ecx,ecx
   1400076cc:	cmovs  ebx,ecx
   1400076cf:	test   ebx,ebx
   1400076d1:	js     0x1400077ee
   1400076d7:	cmp    edi,DWORD PTR [rip+0x6aa3]        # 0x14000e180
   1400076dd:	jne    0x1400077ee
   1400076e3:	mov    rcx,QWORD PTR [rip+0x7a9e]        # 0x14000f188
   1400076ea:	lea    rdx,[rbp+0x7d8]
   1400076f1:	call   QWORD PTR [rip+0x2d41]        # 0x14000a438
   1400076f7:	test   eax,eax
   1400076f9:	jne    0x1400077ee
   1400076ff:	and    DWORD PTR [rsp+0x20],eax
   140007703:	lea    r9,[rsp+0x20]
   140007708:	mov    rcx,QWORD PTR [rsi+0x8]
   14000770c:	xor    r8d,r8d
   14000770f:	mov    edx,0x20000007
   140007714:	call   QWORD PTR [rip+0x2a76]        # 0x14000a190
   14000771a:	test   eax,eax
   14000771c:	je     0x14000773c
   14000771e:	call   QWORD PTR [rip+0x2b7c]        # 0x14000a2a0
   140007724:	movzx  ecx,ax
   140007727:	mov    ebx,0x80004005
   14000772c:	or     ecx,0x80070000
   140007732:	test   eax,eax
   140007734:	cmovle ecx,eax
   140007737:	test   ecx,ecx
   140007739:	cmovs  ebx,ecx
   14000773c:	test   ebx,ebx
   14000773e:	js     0x1400077ee
   140007744:	mov    ecx,DWORD PTR [rsp+0x20]
   140007748:	mov    eax,0x2
   14000774d:	inc    ecx
   14000774f:	mul    rcx
   140007752:	mov    rcx,0xffffffffffffffff
   140007759:	cmovo  rax,rcx
   14000775d:	mov    rcx,rax
   140007760:	call   0x140008bd8
   140007765:	mov    rdi,rax
   140007768:	mov    eax,0x8007000e
   14000776d:	test   rdi,rdi
   140007770:	cmove  ebx,eax
   140007773:	test   ebx,ebx
   140007775:	js     0x1400077e1
   140007777:	mov    rcx,QWORD PTR [rsi+0x8]
   14000777b:	lea    r9,[rsp+0x20]
   140007780:	mov    r8,rdi
   140007783:	mov    edx,0x20000007
   140007788:	call   QWORD PTR [rip+0x2a02]        # 0x14000a190
   14000778e:	test   eax,eax
   140007790:	jne    0x1400077b0
   140007792:	call   QWORD PTR [rip+0x2b08]        # 0x14000a2a0
   140007798:	movzx  ecx,ax
   14000779b:	mov    ebx,0x80004005
   1400077a0:	or     ecx,0x80070000
   1400077a6:	test   eax,eax
   1400077a8:	cmovle ecx,eax
   1400077ab:	test   ecx,ecx
   1400077ad:	cmovs  ebx,ecx
   1400077b0:	test   ebx,ebx
   1400077b2:	js     0x1400077e1
   1400077b4:	cmp    DWORD PTR [rsp+0x20],0x1
   1400077b9:	jb     0x1400077e1
   1400077bb:	mov    QWORD PTR [rip+0x78de],rdi        # 0x14000f0a0
   1400077c2:	call   0x1400051b8
   1400077c7:	mov    r15d,eax
   1400077ca:	test   r13d,r13d
   1400077cd:	jne    0x1400077ee
   1400077cf:	mov    rcx,rdi
   1400077d2:	call   0x140008be4
   1400077d7:	and    QWORD PTR [rip+0x78c1],0x0        # 0x14000f0a0
   1400077df:	jmp    0x1400077ee
   1400077e1:	test   rdi,rdi
   1400077e4:	je     0x1400077ee
   1400077e6:	mov    rcx,rdi
   1400077e9:	call   0x140008be4
   1400077ee:	inc    r14d
   1400077f1:	cmp    r14d,DWORD PTR [rsp+0x28]
   1400077f6:	jb     0x140007546
   1400077fc:	mov    rcx,r12
   1400077ff:	call   0x140008be4
   140007804:	mov    eax,r15d
   140007807:	mov    rcx,QWORD PTR [rbp+0x820]
   14000780e:	xor    rcx,rsp
   140007811:	call   0x140009020
   140007816:	lea    r11,[rsp+0x930]
   14000781e:	mov    rbx,QWORD PTR [r11+0x30]
   140007822:	mov    rsi,QWORD PTR [r11+0x38]
   140007826:	mov    rdi,QWORD PTR [r11+0x40]
   14000782a:	mov    rsp,r11
   14000782d:	pop    r15
   14000782f:	pop    r14
   140007831:	pop    r13
   140007833:	pop    r12
   140007835:	pop    rbp
   140007836:	ret    
   140007837:	int3   
   140007838:	int3   
   140007839:	int3   
   14000783a:	int3   
   14000783b:	int3   
   14000783c:	int3   
   14000783d:	int3   
   14000783e:	int3   
   14000783f:	int3   
   140007840:	mov    rax,rsp
   140007843:	mov    QWORD PTR [rax+0x8],rbx
   140007847:	mov    QWORD PTR [rax+0x18],rsi
   14000784b:	mov    QWORD PTR [rax+0x20],rdi
   14000784f:	push   rbp
   140007850:	push   r14
   140007852:	push   r15
   140007854:	lea    rbp,[rax-0x5f]
   140007858:	sub    rsp,0x90
   14000785f:	mov    edx,DWORD PTR [rip+0x7937]        # 0x14000f19c
   140007865:	xor    ebx,ebx
   140007867:	mov    r15,QWORD PTR [rip+0x6f52]        # 0x14000e7c0
   14000786e:	mov    rsi,rcx
   140007871:	mov    r14d,ebx
   140007874:	test   edx,edx
   140007876:	jne    0x140007891
   140007878:	mov    ecx,DWORD PTR [rcx+0x10]
   14000787b:	call   0x1400069bc
   140007880:	mov    r14d,eax
   140007883:	test   eax,eax
   140007885:	js     0x140007a06
   14000788b:	mov    edx,DWORD PTR [rip+0x790b]        # 0x14000f19c
   140007891:	mov    r8d,DWORD PTR [rip+0x7790]        # 0x14000f028
   140007898:	mov    ecx,ebx
   14000789a:	mov    r9d,DWORD PTR [rsi+0x10]
   14000789e:	test   r8d,r8d
   1400078a1:	jle    0x140007a06
   1400078a7:	mov    r10,QWORD PTR [rip+0x7772]        # 0x14000f020
   1400078ae:	mov    rax,r10
   1400078b1:	cmp    DWORD PTR [rax],r9d
   1400078b4:	je     0x1400078c8
   1400078b6:	inc    ecx
   1400078b8:	add    rax,0x4b0
   1400078be:	cmp    ecx,r8d
   1400078c1:	jl     0x1400078b1
   1400078c3:	jmp    0x140007a06
   1400078c8:	movsxd rax,ecx
   1400078cb:	imul   rdi,rax,0x4b0
   1400078d2:	add    rdi,r10
   1400078d5:	je     0x140007a06
   1400078db:	cmp    edx,r9d
   1400078de:	jne    0x1400079df
   1400078e4:	movups xmm0,XMMWORD PTR [rsi]
   1400078e7:	lea    r8,[rbp-0x19]
   1400078eb:	mov    rcx,rdi
   1400078ee:	movups xmm1,XMMWORD PTR [rsi+0x10]
   1400078f2:	lea    rdx,[rbp+0x6f]
   1400078f6:	movaps XMMWORD PTR [rbp-0x19],xmm0
   1400078fa:	movups xmm0,XMMWORD PTR [rsi+0x20]
   1400078fe:	movaps XMMWORD PTR [rbp-0x9],xmm1
   140007902:	movups xmm1,XMMWORD PTR [rsi+0x30]
   140007906:	movaps XMMWORD PTR [rbp+0x7],xmm0
   14000790a:	movups xmm0,XMMWORD PTR [rsi+0x40]
   14000790e:	movaps XMMWORD PTR [rbp+0x17],xmm1
   140007912:	movups xmm1,XMMWORD PTR [rsi+0x50]
   140007916:	movaps XMMWORD PTR [rbp+0x27],xmm0
   14000791a:	movaps XMMWORD PTR [rbp+0x37],xmm1
   14000791e:	call   0x140006880
   140007923:	movups xmm2,XMMWORD PTR [rsi+0x30]
   140007927:	mov    eax,DWORD PTR [rbp+0x73]
   14000792a:	mov    rcx,r15
   14000792d:	mov    r9d,DWORD PTR [rbp+0x6f]
   140007931:	movd   edx,xmm2
   140007935:	psrldq xmm2,0x4
   14000793a:	movd   r8d,xmm2
   14000793f:	sub    edx,DWORD PTR [rdi+0x47c]
   140007945:	mov    DWORD PTR [rdi+0x458],ebx
   14000794b:	sub    r8d,DWORD PTR [rdi+0x480]
   140007952:	mov    DWORD PTR [rsp+0x20],eax
   140007956:	call   0x140003e34
   14000795b:	cmp    DWORD PTR [rip+0x7822],0x2        # 0x14000f184
   140007962:	jne    0x140007a06
   140007968:	mov    ecx,0x1
   14000796d:	call   QWORD PTR [rip+0x2855]        # 0x14000a1c8
   140007973:	test   BYTE PTR [rip+0x76ca],0x4        # 0x14000f044
   14000797a:	jne    0x1400079bf
   14000797c:	mov    rcx,QWORD PTR [rip+0x7715]        # 0x14000f098
   140007983:	lea    r8,[rip+0x6e76]        # 0x14000e800
   14000798a:	mov    r9d,0x400
   140007990:	lea    edx,[r9-0x15]
   140007994:	call   QWORD PTR [rip+0x2866]        # 0x14000a200
   14000799a:	mov    r9d,0x4
   1400079a0:	lea    r8,[rip+0x7759]        # 0x14000f100
   1400079a7:	lea    rdx,[rip+0x6e52]        # 0x14000e800
   1400079ae:	mov    rcx,r15
   1400079b1:	call   QWORD PTR [rip+0x2791]        # 0x14000a148
   1400079b7:	cmp    eax,0x6
   1400079ba:	sete   bl
   1400079bd:	jmp    0x1400079c4
   1400079bf:	mov    ebx,0x1
   1400079c4:	neg    ebx
   1400079c6:	mov    rcx,r15
   1400079c9:	sbb    edx,edx
   1400079cb:	xor    r9d,r9d
   1400079ce:	add    edx,0x8003
   1400079d4:	xor    r8d,r8d
   1400079d7:	call   QWORD PTR [rip+0x2863]        # 0x14000a240
   1400079dd:	jmp    0x140007a06
   1400079df:	cmp    DWORD PTR [rdi+0x458],ebx
   1400079e5:	jne    0x140007a06
   1400079e7:	mov    rcx,QWORD PTR [rip+0x76aa]        # 0x14000f098
   1400079ee:	mov    r8d,0x5
   1400079f4:	mov    rdx,r15
   1400079f7:	call   0x140004ae4
   1400079fc:	mov    DWORD PTR [rdi+0x458],0x1
   140007a06:	lea    r11,[rsp+0x90]
   140007a0e:	mov    eax,r14d
   140007a11:	mov    rbx,QWORD PTR [r11+0x20]
   140007a15:	mov    rsi,QWORD PTR [r11+0x30]
   140007a19:	mov    rdi,QWORD PTR [r11+0x38]
   140007a1d:	mov    rsp,r11
   140007a20:	pop    r15
   140007a22:	pop    r14
   140007a24:	pop    rbp
   140007a25:	ret    
   140007a26:	int3   
   140007a27:	int3   
   140007a28:	int3   
   140007a29:	int3   
   140007a2a:	int3   
   140007a2b:	int3   
   140007a2c:	mov    QWORD PTR [rsp+0x8],rbx
   140007a31:	mov    QWORD PTR [rsp+0x10],rbp
   140007a36:	mov    QWORD PTR [rsp+0x18],rsi
   140007a3b:	push   rdi
   140007a3c:	sub    rsp,0x20
   140007a40:	xor    ebx,ebx
   140007a42:	movsxd rdi,ecx
   140007a45:	test   ecx,ecx
   140007a47:	jne    0x140007a6d
   140007a49:	mov    rcx,QWORD PTR [rip+0x75d0]        # 0x14000f020
   140007a50:	test   rcx,rcx
   140007a53:	je     0x140007a61
   140007a55:	call   0x140008be4
   140007a5a:	mov    QWORD PTR [rip+0x75bf],rbx        # 0x14000f020
   140007a61:	mov    QWORD PTR [rip+0x75c0],rbx        # 0x14000f028
   140007a68:	jmp    0x140007b93
   140007a6d:	mov    r8,QWORD PTR [rip+0x75ac]        # 0x14000f020
   140007a74:	test   r8,r8
   140007a77:	jne    0x140007aa7
   140007a79:	imul   rcx,rdi,0x4b0
   140007a80:	call   0x140008bd8
   140007a85:	test   rax,rax
   140007a88:	je     0x140007b8e
   140007a8e:	mov    edx,edi
   140007a90:	mov    QWORD PTR [rip+0x7589],rax        # 0x14000f020
   140007a97:	mov    rcx,rax
   140007a9a:	call   0x140007bb0
   140007a9f:	mov    DWORD PTR [rip+0x7587],edi        # 0x14000f02c
   140007aa5:	jmp    0x140007ad1
   140007aa7:	mov    r9d,DWORD PTR [rip+0x757e]        # 0x14000f02c
   140007aae:	cmp    edi,r9d
   140007ab1:	jg     0x140007adc
   140007ab3:	movsxd rax,DWORD PTR [rip+0x756e]        # 0x14000f028
   140007aba:	cmp    edi,eax
   140007abc:	jle    0x140007ad1
   140007abe:	imul   rcx,rax,0x4b0
   140007ac5:	mov    edx,edi
   140007ac7:	add    rcx,r8
   140007aca:	sub    edx,eax
   140007acc:	call   0x140007bb0
   140007ad1:	mov    DWORD PTR [rip+0x7551],edi        # 0x14000f028
   140007ad7:	jmp    0x140007b93
   140007adc:	mov    ecx,DWORD PTR [rip+0x754e]        # 0x14000f030
   140007ae2:	mov    r8d,DWORD PTR [rip+0x753f]        # 0x14000f028
   140007ae9:	test   ecx,ecx
   140007aeb:	jne    0x140007b0f
   140007aed:	mov    eax,r8d
   140007af0:	cdq    
   140007af1:	and    edx,0x7
   140007af4:	add    eax,edx
   140007af6:	mov    edx,0x400
   140007afb:	sar    eax,0x3
   140007afe:	cmp    eax,edx
   140007b00:	mov    ecx,eax
   140007b02:	cmovg  ecx,edx
   140007b05:	mov    edx,0x4
   140007b0a:	cmp    eax,edx
   140007b0c:	cmovl  ecx,edx
   140007b0f:	lea    eax,[r9+rcx*1]
   140007b13:	mov    esi,edi
   140007b15:	cmp    edi,eax
   140007b17:	cmovl  esi,eax
   140007b1a:	cmp    esi,r8d
   140007b1d:	jl     0x140007b8e
   140007b1f:	movsxd rax,esi
   140007b22:	imul   rcx,rax,0x4b0
   140007b29:	call   0x140008bd8
   140007b2e:	mov    rbp,rax
   140007b31:	test   rax,rax
   140007b34:	je     0x140007b8e
   140007b36:	movsxd rax,DWORD PTR [rip+0x74eb]        # 0x14000f028
   140007b3d:	mov    rcx,rbp
   140007b40:	mov    rdx,QWORD PTR [rip+0x74d9]        # 0x14000f020
   140007b47:	imul   r8,rax,0x4b0
   140007b4e:	call   0x140009946
   140007b53:	movsxd rax,DWORD PTR [rip+0x74ce]        # 0x14000f028
   140007b5a:	mov    edx,edi
   140007b5c:	imul   rcx,rax,0x4b0
   140007b63:	sub    edx,eax
   140007b65:	add    rcx,rbp
   140007b68:	call   0x140007bb0
   140007b6d:	mov    rcx,QWORD PTR [rip+0x74ac]        # 0x14000f020
   140007b74:	call   0x140008be4
   140007b79:	mov    QWORD PTR [rip+0x74a0],rbp        # 0x14000f020
   140007b80:	mov    DWORD PTR [rip+0x74a2],edi        # 0x14000f028
   140007b86:	mov    DWORD PTR [rip+0x74a0],esi        # 0x14000f02c
   140007b8c:	jmp    0x140007b93
   140007b8e:	mov    ebx,0x8007000e
   140007b93:	mov    rbp,QWORD PTR [rsp+0x38]
   140007b98:	mov    eax,ebx
   140007b9a:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b9f:	mov    rsi,QWORD PTR [rsp+0x40]
   140007ba4:	add    rsp,0x20
   140007ba8:	pop    rdi
   140007ba9:	ret    
   140007baa:	int3   
   140007bab:	int3   
   140007bac:	int3   
   140007bad:	int3   
   140007bae:	int3   
   140007baf:	int3   
   140007bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140007bb5:	push   rdi
   140007bb6:	sub    rsp,0x20
   140007bba:	movsxd rdi,edx
   140007bbd:	mov    rbx,rcx
   140007bc0:	imul   rcx,rdi,0x4b0
   140007bc7:	mov    eax,0xffffffff
   140007bcc:	cmp    rcx,rax
   140007bcf:	jae    0x140007c4d
   140007bd1:	mov    r8d,ecx
   140007bd4:	xor    edx,edx
   140007bd6:	mov    rcx,rbx
   140007bd9:	call   0x140009952
   140007bde:	test   edi,edi
   140007be0:	je     0x140007c4d
   140007be2:	add    rbx,0x8
   140007be6:	dec    edi
   140007be8:	lea    rax,[rbx-0x8]
   140007bec:	test   rax,rax
   140007bef:	je     0x140007c42
   140007bf1:	and    DWORD PTR [rax],0x0
   140007bf4:	lea    rcx,[rbx+0x18]
   140007bf8:	and    DWORD PTR [rbx-0x4],0x0
   140007bfc:	xor    edx,edx
   140007bfe:	and    QWORD PTR [rbx],0x0
   140007c02:	mov    r8d,0x438
   140007c08:	and    QWORD PTR [rbx+0x8],0x0
   140007c0d:	and    DWORD PTR [rbx+0x10],0x0
   140007c11:	and    DWORD PTR [rbx+0x450],0x0
   140007c18:	call   0x140009952
   140007c1d:	and    QWORD PTR [rbx+0x488],0x0
   140007c25:	and    QWORD PTR [rbx+0x490],0x0
   140007c2d:	and    DWORD PTR [rbx+0x498],0x0
   140007c34:	and    DWORD PTR [rbx+0x49c],0x0
   140007c3b:	and    DWORD PTR [rbx+0x4a0],0x0
   140007c42:	add    rbx,0x4b0
   140007c49:	test   edi,edi
   140007c4b:	jne    0x140007be6
   140007c4d:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c52:	add    rsp,0x20
   140007c56:	pop    rdi
   140007c57:	ret    
   140007c58:	int3   
   140007c59:	int3   
   140007c5a:	int3   
   140007c5b:	int3   
   140007c5c:	int3   
   140007c5d:	int3   
   140007c5e:	int3   
   140007c5f:	int3   
   140007c60:	mov    QWORD PTR [rsp+0x8],rbx
   140007c65:	mov    QWORD PTR [rsp+0x10],rsi
   140007c6a:	push   rdi
   140007c6b:	sub    rsp,0x20
   140007c6f:	mov    rdi,rdx
   140007c72:	xor    ebx,ebx
   140007c74:	and    QWORD PTR [rdx],rbx
   140007c77:	mov    rsi,rcx
   140007c7a:	xor    edx,edx
   140007c7c:	call   QWORD PTR [rip+0x24ee]        # 0x14000a170
   140007c82:	test   eax,eax
   140007c84:	jne    0x140007c9e
   140007c86:	call   QWORD PTR [rip+0x2614]        # 0x14000a2a0
   140007c8c:	movzx  ebx,ax
   140007c8f:	or     ebx,0x80070000
   140007c95:	test   eax,eax
   140007c97:	cmovle ebx,eax
   140007c9a:	test   ebx,ebx
   140007c9c:	js     0x140007cff
   140007c9e:	mov    ecx,DWORD PTR [rsi]
   140007ca0:	mov    eax,0x438
   140007ca5:	mul    rcx
   140007ca8:	mov    rcx,0xffffffffffffffff
   140007caf:	cmovo  rax,rcx
   140007cb3:	mov    rcx,rax
   140007cb6:	call   0x140008bd8
   140007cbb:	test   rax,rax
   140007cbe:	mov    QWORD PTR [rdi],rax
   140007cc1:	mov    ecx,0x8007000e
   140007cc6:	cmove  ebx,ecx
   140007cc9:	test   ebx,ebx
   140007ccb:	js     0x140007cff
   140007ccd:	mov    rdx,rax
   140007cd0:	mov    rcx,rsi
   140007cd3:	call   QWORD PTR [rip+0x2497]        # 0x14000a170
   140007cd9:	test   eax,eax
   140007cdb:	jne    0x140007cfb
   140007cdd:	call   QWORD PTR [rip+0x25bd]        # 0x14000a2a0
   140007ce3:	movzx  ecx,ax
   140007ce6:	mov    ebx,0x80004005
   140007ceb:	or     ecx,0x80070000
   140007cf1:	test   eax,eax
   140007cf3:	cmovle ecx,eax
   140007cf6:	test   ecx,ecx
   140007cf8:	cmovs  ebx,ecx
   140007cfb:	test   ebx,ebx
   140007cfd:	jns    0x140007d0e
   140007cff:	mov    rcx,QWORD PTR [rdi]
   140007d02:	call   0x140008be4
   140007d07:	and    QWORD PTR [rdi],0x0
   140007d0b:	and    DWORD PTR [rsi],0x0
   140007d0e:	mov    rsi,QWORD PTR [rsp+0x38]
   140007d13:	mov    eax,ebx
   140007d15:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d1a:	add    rsp,0x20
   140007d1e:	pop    rdi
   140007d1f:	ret    
   140007d20:	int3   
   140007d21:	int3   
   140007d22:	int3   
   140007d23:	int3   
   140007d24:	int3   
   140007d25:	int3   
   140007d26:	int3   
   140007d27:	int3   
   140007d28:	mov    rax,rsp
   140007d2b:	mov    QWORD PTR [rax+0x10],rbx
   140007d2f:	mov    QWORD PTR [rax+0x8],rcx
   140007d33:	push   rbp
   140007d34:	push   rsi
   140007d35:	push   rdi
   140007d36:	push   r12
   140007d38:	push   r13
   140007d3a:	push   r14
   140007d3c:	push   r15
   140007d3e:	sub    rsp,0x30
   140007d42:	mov    r13,rdx
   140007d45:	lea    rcx,[rax+0x20]
   140007d49:	xor    ebx,ebx
   140007d4b:	lea    rdx,[rax+0x18]
   140007d4f:	mov    QWORD PTR [rax+0x18],rbx
   140007d53:	mov    bpl,bl
   140007d56:	call   0x140007c60
   140007d5b:	mov    DWORD PTR [rsp+0x20],eax
   140007d5f:	mov    esi,eax
   140007d61:	test   eax,eax
   140007d63:	js     0x140007f3d
   140007d69:	mov    r14d,ebx
   140007d6c:	mov    r12,QWORD PTR [rsp+0x80]
   140007d74:	cmp    DWORD PTR [rsp+0x88],ebx
   140007d7b:	jbe    0x140007f30
   140007d81:	mov    rsi,QWORD PTR [rsp+0x70]
   140007d86:	test   bpl,bpl
   140007d89:	jne    0x140007f2c
   140007d8f:	mov    DWORD PTR [rsp+0x80],ebx
   140007d96:	lea    r9,[rsp+0x80]
   140007d9e:	mov    eax,r14d
   140007da1:	mov    edi,ebx
   140007da3:	mov    r15,rbx
   140007da6:	xor    r8d,r8d
   140007da9:	imul   rbx,rax,0x438
   140007db0:	mov    edx,0x20000007
   140007db5:	add    rbx,r12
   140007db8:	mov    rcx,QWORD PTR [rbx+0x8]
   140007dbc:	call   QWORD PTR [rip+0x23ce]        # 0x14000a190
   140007dc2:	test   eax,eax
   140007dc4:	je     0x140007dec
   140007dc6:	call   QWORD PTR [rip+0x24d4]        # 0x14000a2a0
   140007dcc:	movzx  ecx,ax
   140007dcf:	mov    edi,0x80004005
   140007dd4:	or     ecx,0x80070000
   140007dda:	test   eax,eax
   140007ddc:	cmovle ecx,eax
   140007ddf:	test   ecx,ecx
   140007de1:	cmovs  edi,ecx
   140007de4:	test   edi,edi
   140007de6:	js     0x140007f0e
   140007dec:	mov    ecx,DWORD PTR [rsp+0x80]
   140007df3:	mov    eax,0x2
   140007df8:	inc    ecx
   140007dfa:	mul    rcx
   140007dfd:	mov    rcx,0xffffffffffffffff
   140007e04:	cmovo  rax,rcx
   140007e08:	mov    rcx,rax
   140007e0b:	call   0x140008bd8
   140007e10:	mov    r15,rax
   140007e13:	mov    eax,0x8007000e
   140007e18:	test   r15,r15
   140007e1b:	cmove  edi,eax
   140007e1e:	test   edi,edi
   140007e20:	js     0x140007f0e
   140007e26:	mov    rcx,QWORD PTR [rbx+0x8]
   140007e2a:	lea    r9,[rsp+0x80]
   140007e32:	mov    r8,r15
   140007e35:	mov    edx,0x20000007
   140007e3a:	call   QWORD PTR [rip+0x2350]        # 0x14000a190
   140007e40:	xor    edx,edx
   140007e42:	test   eax,eax
   140007e44:	jne    0x140007e66
   140007e46:	call   QWORD PTR [rip+0x2454]        # 0x14000a2a0
   140007e4c:	xor    edx,edx
   140007e4e:	movzx  ecx,ax
   140007e51:	or     ecx,0x80070000
   140007e57:	mov    edi,0x80004005
   140007e5c:	test   eax,eax
   140007e5e:	cmovle ecx,eax
   140007e61:	test   ecx,ecx
   140007e63:	cmovs  edi,ecx
   140007e66:	test   edi,edi
   140007e68:	js     0x140007f0e
   140007e6e:	cmp    DWORD PTR [rsp+0x80],0x1
   140007e76:	jb     0x140007f0e
   140007e7c:	mov    eax,DWORD PTR [rsp+0x80]
   140007e83:	mov    rcx,rsi
   140007e86:	mov    WORD PTR [r15+rax*2],dx
   140007e8b:	mov    rdx,r15
   140007e8e:	call   QWORD PTR [rip+0x25a4]        # 0x14000a438
   140007e94:	test   eax,eax
   140007e96:	jne    0x140007f0e
   140007e98:	mov    eax,0x8
   140007e9d:	mov    rdx,r13
   140007ea0:	lea    edi,[rax+0x78]
   140007ea3:	movups xmm0,XMMWORD PTR [rbx]
   140007ea6:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140007eaa:	movups XMMWORD PTR [rdx],xmm0
   140007ead:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140007eb1:	movups XMMWORD PTR [rdx+0x10],xmm1
   140007eb5:	movups xmm1,XMMWORD PTR [rbx+0x30]
   140007eb9:	movups XMMWORD PTR [rdx+0x20],xmm0
   140007ebd:	movups xmm0,XMMWORD PTR [rbx+0x40]
   140007ec1:	movups XMMWORD PTR [rdx+0x30],xmm1
   140007ec5:	movups xmm1,XMMWORD PTR [rbx+0x50]
   140007ec9:	movups XMMWORD PTR [rdx+0x40],xmm0
   140007ecd:	movups xmm0,XMMWORD PTR [rbx+0x60]
   140007ed1:	movups XMMWORD PTR [rdx+0x50],xmm1
   140007ed5:	movups xmm1,XMMWORD PTR [rbx+0x70]
   140007ed9:	add    rbx,rdi
   140007edc:	movups XMMWORD PTR [rdx+0x60],xmm0
   140007ee0:	add    rdx,rdi
   140007ee3:	movups XMMWORD PTR [rdx-0x10],xmm1
   140007ee7:	sub    rax,0x1
   140007eeb:	jne    0x140007ea3
   140007eed:	movups xmm0,XMMWORD PTR [rbx]
   140007ef0:	mov    rax,QWORD PTR [rbx+0x30]
   140007ef4:	mov    bpl,0x1
   140007ef7:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140007efb:	movups XMMWORD PTR [rdx],xmm0
   140007efe:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140007f02:	movups XMMWORD PTR [rdx+0x10],xmm1
   140007f06:	movups XMMWORD PTR [rdx+0x20],xmm0
   140007f0a:	mov    QWORD PTR [rdx+0x30],rax
   140007f0e:	mov    rcx,r15
   140007f11:	call   0x140008be4
   140007f16:	inc    r14d
   140007f19:	mov    ebx,0x0
   140007f1e:	cmp    r14d,DWORD PTR [rsp+0x88]
   140007f26:	jb     0x140007d86
   140007f2c:	mov    esi,DWORD PTR [rsp+0x20]
   140007f30:	mov    rcx,r12
   140007f33:	call   0x140008be4
   140007f38:	test   bpl,bpl
   140007f3b:	jne    0x140007f42
   140007f3d:	mov    esi,0x80070002
   140007f42:	mov    eax,esi
   140007f44:	mov    rbx,QWORD PTR [rsp+0x78]
   140007f49:	add    rsp,0x30
   140007f4d:	pop    r15
   140007f4f:	pop    r14
   140007f51:	pop    r13
   140007f53:	pop    r12
   140007f55:	pop    rdi
   140007f56:	pop    rsi
   140007f57:	pop    rbp
   140007f58:	ret    
   140007f59:	int3   
   140007f5a:	int3   
   140007f5b:	int3   
   140007f5c:	int3   
   140007f5d:	int3   
   140007f5e:	int3   
   140007f5f:	int3   
   140007f60:	mov    QWORD PTR [rsp+0x8],rbx
   140007f65:	push   rbp
   140007f66:	push   rsi
   140007f67:	push   rdi
   140007f68:	push   r12
   140007f6a:	push   r13
   140007f6c:	push   r14
   140007f6e:	push   r15
   140007f70:	lea    rbp,[rsp-0x1f]
   140007f75:	sub    rsp,0xc0
   140007f7c:	mov    rax,QWORD PTR [rip+0x6085]        # 0x14000e008
   140007f83:	xor    rax,rsp
   140007f86:	mov    QWORD PTR [rbp+0x17],rax
   140007f8a:	mov    r14,QWORD PTR [rbp+0x7f]
   140007f8e:	xor    ebx,ebx
   140007f90:	mov    r12,r9
   140007f93:	mov    rdi,rdx
   140007f96:	mov    r13d,ecx
   140007f99:	mov    DWORD PTR [r14],ebx
   140007f9c:	test   r9,r9
   140007f9f:	je     0x140007fa4
   140007fa1:	mov    QWORD PTR [r9],rbx
   140007fa4:	xor    eax,eax
   140007fa6:	lea    rcx,[rbp-0x69]
   140007faa:	xor    edx,edx
   140007fac:	mov    QWORD PTR [rbp-0x79],rax
   140007fb0:	mov    QWORD PTR [rbp-0x71],rax
   140007fb4:	lea    r8d,[rax+0x20]
   140007fb8:	call   0x140009952
   140007fbd:	mov    QWORD PTR [rsp+0x20],rbx
   140007fc2:	lea    rax,[rip+0x30f7]        # 0x14000b0c0
   140007fc9:	mov    QWORD PTR [rbp-0x9],rax
   140007fcd:	lea    rax,[rip+0x2f9c]        # 0x14000af70
   140007fd4:	mov    QWORD PTR [rbp-0x1],rax
   140007fd8:	lea    rax,[rip+0x3001]        # 0x14000afe0
   140007fdf:	mov    QWORD PTR [rbp+0x7],rax
   140007fe3:	lea    rax,[rip+0x3066]        # 0x14000b050
   140007fea:	mov    QWORD PTR [rbp+0xf],rax
   140007fee:	lea    rax,[rbp-0x79]
   140007ff2:	mov    QWORD PTR [rbp-0x49],rax
   140007ff6:	lea    rax,[rbp-0x75]
   140007ffa:	mov    QWORD PTR [rbp-0x41],rax
   140007ffe:	lea    rax,[rbp-0x71]
   140008002:	mov    QWORD PTR [rbp-0x39],rax
   140008006:	lea    rax,[rbp-0x6d]
   14000800a:	mov    QWORD PTR [rbp-0x31],rax
   14000800e:	lea    rax,[rbp-0x69]
   140008012:	mov    QWORD PTR [rbp-0x29],rax
   140008016:	lea    rax,[rbp-0x61]
   14000801a:	mov    QWORD PTR [rbp-0x21],rax
   14000801e:	lea    rax,[rbp-0x59]
   140008022:	mov    QWORD PTR [rbp-0x19],rax
   140008026:	lea    rax,[rbp-0x51]
   14000802a:	mov    QWORD PTR [rbp-0x11],rax
   14000802e:	mov    r15,rbx
   140008031:	test   rdi,rdi
   140008034:	je     0x14000804e
   140008036:	lea    rdx,[rsp+0x20]
   14000803b:	mov    rcx,rdi
   14000803e:	call   0x14000898c
   140008043:	mov    r15,QWORD PTR [rsp+0x20]
   140008048:	test   eax,eax
   14000804a:	cmovs  r15,rbx
   14000804e:	mov    rsi,rbx
   140008051:	test   r15,r15
   140008054:	je     0x140008073
   140008056:	mov    r9,QWORD PTR [rbp+rsi*1-0x29]
   14000805b:	mov    rcx,r15
   14000805e:	mov    r8,QWORD PTR [rbp+rsi*1-0x49]
   140008063:	mov    rdx,QWORD PTR [rbp+rsi*1-0x9]
   140008068:	call   0x140008a84
   14000806d:	mov    edi,eax
   14000806f:	test   eax,eax
   140008071:	jns    0x14000808f
   140008073:	mov    r9,QWORD PTR [rbp+rsi*1-0x29]
   140008078:	xor    ecx,ecx
   14000807a:	mov    r8,QWORD PTR [rbp+rsi*1-0x49]
   14000807f:	mov    rdx,QWORD PTR [rbp+rsi*1-0x9]
   140008084:	call   0x140008a84
   140008089:	mov    edi,eax
   14000808b:	test   eax,eax
   14000808d:	js     0x140008099
   14000808f:	add    rsi,0x8
   140008093:	cmp    rsi,0x20
   140008097:	jl     0x140008051
   140008099:	mov    rcx,r15
   14000809c:	call   0x140008be4
   1400080a1:	test   edi,edi
   1400080a3:	js     0x14000811a
   1400080a5:	cmp    r13d,0x10
   1400080a9:	je     0x1400080d8
   1400080ab:	cmp    r13d,0x100
   1400080b2:	je     0x1400080cf
   1400080b4:	cmp    r13d,0x1000
   1400080bb:	je     0x1400080c6
   1400080bd:	mov    eax,DWORD PTR [rbp-0x79]
   1400080c0:	mov    rsi,QWORD PTR [rbp-0x69]
   1400080c4:	jmp    0x1400080df
   1400080c6:	mov    eax,DWORD PTR [rbp-0x6d]
   1400080c9:	mov    rsi,QWORD PTR [rbp-0x51]
   1400080cd:	jmp    0x1400080df
   1400080cf:	mov    eax,DWORD PTR [rbp-0x71]
   1400080d2:	mov    rsi,QWORD PTR [rbp-0x59]
   1400080d6:	jmp    0x1400080df
   1400080d8:	mov    eax,DWORD PTR [rbp-0x75]
   1400080db:	mov    rsi,QWORD PTR [rbp-0x61]
   1400080df:	mov    DWORD PTR [r14],eax
   1400080e2:	test   rsi,rsi
   1400080e5:	jne    0x1400080ec
   1400080e7:	mov    DWORD PTR [r14],ebx
   1400080ea:	jmp    0x14000811a
   1400080ec:	test   r12,r12
   1400080ef:	je     0x14000811a
   1400080f1:	mov    ecx,DWORD PTR [r14]
   1400080f4:	call   0x140008bd8
   1400080f9:	test   rax,rax
   1400080fc:	mov    QWORD PTR [r12],rax
   140008100:	mov    ecx,0x8007000e
   140008105:	cmove  edi,ecx
   140008108:	test   edi,edi
   14000810a:	js     0x14000811a
   14000810c:	mov    r8d,DWORD PTR [r14]
   14000810f:	mov    rdx,rsi
   140008112:	mov    rcx,rax
   140008115:	call   0x140009946
   14000811a:	mov    rcx,QWORD PTR [rbp+rbx*8-0x69]
   14000811f:	call   0x140008be4
   140008124:	inc    rbx
   140008127:	cmp    rbx,0x4
   14000812b:	jl     0x14000811a
   14000812d:	mov    eax,edi
   14000812f:	mov    rcx,QWORD PTR [rbp+0x17]
   140008133:	xor    rcx,rsp
   140008136:	call   0x140009020
   14000813b:	mov    rbx,QWORD PTR [rsp+0x100]
   140008143:	add    rsp,0xc0
   14000814a:	pop    r15
   14000814c:	pop    r14
   14000814e:	pop    r13
   140008150:	pop    r12
   140008152:	pop    rdi
   140008153:	pop    rsi
   140008154:	pop    rbp
   140008155:	ret    
   140008156:	int3   
   140008157:	int3   
   140008158:	int3   
   140008159:	int3   
   14000815a:	int3   
   14000815b:	int3   
   14000815c:	mov    rax,rsp
   14000815f:	mov    QWORD PTR [rax+0x10],rbx
   140008163:	mov    QWORD PTR [rax+0x18],rsi
   140008167:	mov    QWORD PTR [rax+0x20],rdi
   14000816b:	push   rbp
   14000816c:	push   r14
   14000816e:	push   r15
   140008170:	lea    rbp,[rax-0x188]
   140008177:	sub    rsp,0x270
   14000817e:	mov    rax,QWORD PTR [rip+0x5e83]        # 0x14000e008
   140008185:	xor    rax,rsp
   140008188:	mov    QWORD PTR [rbp+0x160],rax
   14000818f:	xor    r15d,r15d
   140008192:	mov    r14d,edx
   140008195:	lea    rdx,[rsp+0x50]
   14000819a:	mov    WORD PTR [rsp+0x60],r15w
   1400081a0:	mov    QWORD PTR [rsp+0x58],r15
   1400081a5:	mov    esi,r15d
   1400081a8:	mov    QWORD PTR [rsp+0x50],r15
   1400081ad:	call   0x14000898c
   1400081b2:	mov    ebx,eax
   1400081b4:	mov    edi,0x100
   1400081b9:	test   eax,eax
   1400081bb:	js     0x1400081f3
   1400081bd:	cmp    r14d,0x10
   1400081c1:	je     0x1400081ec
   1400081c3:	cmp    r14d,edi
   1400081c6:	je     0x1400081e3
   1400081c8:	cmp    r14d,0x1000
   1400081cf:	lea    rsi,[rip+0x2eea]        # 0x14000b0c0
   1400081d6:	lea    rax,[rip+0x2e73]        # 0x14000b050
   1400081dd:	cmove  rsi,rax
   1400081e1:	jmp    0x1400081f3
   1400081e3:	lea    rsi,[rip+0x2df6]        # 0x14000afe0
   1400081ea:	jmp    0x1400081f3
   1400081ec:	lea    rsi,[rip+0x2d7d]        # 0x14000af70
   1400081f3:	mov    rdx,QWORD PTR [rip+0x6efe]        # 0x14000f0f8
   1400081fa:	test   rdx,rdx
   1400081fd:	je     0x14000821f
   1400081ff:	mov    r9,rdx
   140008202:	lea    r8,[rip+0x2f2f]        # 0x14000b138
   140008209:	mov    rdx,rdi
   14000820c:	lea    rcx,[rsp+0x60]
   140008211:	call   0x140001130
   140008216:	mov    rdx,QWORD PTR [rip+0x6edb]        # 0x14000f0f8
   14000821d:	mov    ebx,eax
   14000821f:	test   ebx,ebx
   140008221:	js     0x140008363
   140008227:	mov    rcx,rdi
   14000822a:	lea    rax,[rsp+0x60]
   14000822f:	cmp    WORD PTR [rax],r15w
   140008233:	je     0x14000823f
   140008235:	add    rax,0x2
   140008239:	sub    rcx,0x1
   14000823d:	jne    0x14000822f
   14000823f:	test   rcx,rcx
   140008242:	je     0x14000835e
   140008248:	mov    rax,rdi
   14000824b:	lea    r8,[rip+0x2d0e]        # 0x14000af60
   140008252:	sub    rax,rcx
   140008255:	mov    ebx,r15d
   140008258:	sub    rdi,rax
   14000825b:	lea    rcx,[rsp+0x60]
   140008260:	test   rsi,rsi
   140008263:	cmovne r8,rsi
   140008267:	lea    rcx,[rcx+rax*2]
   14000826b:	cmp    rdi,0x1
   14000826f:	ja     0x140008281
   140008271:	cmp    WORD PTR [r8],r15w
   140008275:	je     0x1400082ca
   140008277:	mov    ebx,0x8007007a
   14000827c:	jmp    0x140008363
   140008281:	test   rdi,rdi
   140008284:	je     0x1400082b6
   140008286:	mov    edx,0x7ffffffe
   14000828b:	sub    rdx,rdi
   14000828e:	sub    r8,rcx
   140008291:	lea    rax,[rdx+rdi*1]
   140008295:	test   rax,rax
   140008298:	je     0x1400082b1
   14000829a:	movzx  eax,WORD PTR [r8+rcx*1]
   14000829f:	test   ax,ax
   1400082a2:	je     0x1400082b1
   1400082a4:	mov    WORD PTR [rcx],ax
   1400082a7:	add    rcx,0x2
   1400082ab:	sub    rdi,0x1
   1400082af:	jne    0x140008291
   1400082b1:	test   rdi,rdi
   1400082b4:	jne    0x1400082bf
   1400082b6:	sub    rcx,0x2
   1400082ba:	mov    ebx,0x8007007a
   1400082bf:	mov    WORD PTR [rcx],r15w
   1400082c3:	mov    rdx,QWORD PTR [rip+0x6e2e]        # 0x14000f0f8
   1400082ca:	test   ebx,ebx
   1400082cc:	js     0x140008363
   1400082d2:	mov    QWORD PTR [rsp+0x40],r15
   1400082d7:	lea    rax,[rsp+0x58]
   1400082dc:	mov    QWORD PTR [rsp+0x38],rax
   1400082e1:	neg    rdx
   1400082e4:	mov    QWORD PTR [rsp+0x30],r15
   1400082e9:	lea    rdx,[rsp+0x60]
   1400082ee:	sbb    rcx,rcx
   1400082f1:	mov    DWORD PTR [rsp+0x28],0x20006
   1400082f9:	and    ecx,0x2
   1400082fc:	mov    DWORD PTR [rsp+0x20],r15d
   140008301:	add    rcx,0xffffffff80000001
   140008308:	xor    r9d,r9d
   14000830b:	xor    r8d,r8d
   14000830e:	call   QWORD PTR [rip+0x20a4]        # 0x14000a3b8
   140008314:	movzx  ebx,ax
   140008317:	mov    edi,0x80070000
   14000831c:	or     ebx,edi
   14000831e:	test   eax,eax
   140008320:	cmovle ebx,eax
   140008323:	test   ebx,ebx
   140008325:	js     0x140008363
   140008327:	mov    rdx,QWORD PTR [rsp+0x50]
   14000832c:	xor    r9d,r9d
   14000832f:	mov    rcx,QWORD PTR [rsp+0x58]
   140008334:	xor    r8d,r8d
   140008337:	mov    DWORD PTR [rsp+0x28],r15d
   14000833c:	mov    QWORD PTR [rsp+0x20],r15
   140008341:	call   QWORD PTR [rip+0x2069]        # 0x14000a3b0
   140008347:	mov    rcx,QWORD PTR [rsp+0x58]
   14000834c:	movzx  ebx,ax
   14000834f:	or     ebx,edi
   140008351:	test   eax,eax
   140008353:	cmovle ebx,eax
   140008356:	call   QWORD PTR [rip+0x2064]        # 0x14000a3c0
   14000835c:	jmp    0x140008363
   14000835e:	mov    ebx,0x80070057
   140008363:	mov    rcx,QWORD PTR [rsp+0x50]
   140008368:	call   0x140008be4
   14000836d:	mov    eax,ebx
   14000836f:	mov    rcx,QWORD PTR [rbp+0x160]
   140008376:	xor    rcx,rsp
   140008379:	call   0x140009020
   14000837e:	lea    r11,[rsp+0x270]
   140008386:	mov    rbx,QWORD PTR [r11+0x28]
   14000838a:	mov    rsi,QWORD PTR [r11+0x30]
   14000838e:	mov    rdi,QWORD PTR [r11+0x38]
   140008392:	mov    rsp,r11
   140008395:	pop    r15
   140008397:	pop    r14
   140008399:	pop    rbp
   14000839a:	ret    
   14000839b:	int3   
   14000839c:	int3   
   14000839d:	int3   
   14000839e:	int3   
   14000839f:	int3   
   1400083a0:	int3   
   1400083a1:	int3   
   1400083a2:	int3   
   1400083a3:	int3   
   1400083a4:	mov    QWORD PTR [rsp+0x10],rdx
   1400083a9:	mov    DWORD PTR [rsp+0x8],ecx
   1400083ad:	push   rbp
   1400083ae:	push   rbx
   1400083af:	push   rsi
   1400083b0:	mov    rbp,rsp
   1400083b3:	sub    rsp,0x70
   1400083b7:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   1400083bf:	and    DWORD PTR [rbp+0x28],0x0
   1400083c3:	lea    rax,[rbp+0x28]
   1400083c7:	mov    QWORD PTR [rbp-0x18],rax
   1400083cb:	lea    rax,[rip+0x2d6e]        # 0x14000b140
   1400083d2:	mov    QWORD PTR [rbp-0x10],rax
   1400083d6:	lea    rsi,[rip+0x5d93]        # 0x14000e170
   1400083dd:	cmp    QWORD PTR [rip+0x5d8c],rsi        # 0x14000e170
   1400083e4:	je     0x1400083f0
   1400083e6:	lea    rcx,[rbp-0x18]
   1400083ea:	call   0x1400087ac
   1400083ef:	nop
   1400083f0:	and    QWORD PTR [rbp+0x30],0x0
   1400083f5:	and    DWORD PTR [rbp+0x20],0x0
   1400083f9:	lea    rax,[rbp+0x20]
   1400083fd:	mov    QWORD PTR [rbp-0x28],rax
   140008401:	lea    rax,[rip+0x2d90]        # 0x14000b198
   140008408:	mov    QWORD PTR [rbp-0x20],rax
   14000840c:	cmp    QWORD PTR [rip+0x5d5d],rsi        # 0x14000e170
   140008413:	je     0x14000841f
   140008415:	lea    rcx,[rbp-0x28]
   140008419:	call   0x1400087ac
   14000841e:	nop
   14000841f:	lea    rax,[rbp+0x30]
   140008423:	mov    QWORD PTR [rsp+0x30],rax
   140008428:	mov    DWORD PTR [rsp+0x28],0xc8
   140008430:	mov    DWORD PTR [rsp+0x20],0x2
   140008438:	lea    r9,[rip+0x2701]        # 0x14000ab40
   14000843f:	xor    r8d,r8d
   140008442:	lea    edx,[r8+0x1a]
   140008446:	mov    ecx,0xffff
   14000844b:	call   QWORD PTR [rip+0x1e37]        # 0x14000a288
   140008451:	test   rax,rax
   140008454:	jne    0x14000849f
   140008456:	call   QWORD PTR [rip+0x1e44]        # 0x14000a2a0
   14000845c:	test   eax,eax
   14000845e:	je     0x14000849f
   140008460:	movzx  r8d,ax
   140008464:	or     r8d,0x80070000
   14000846b:	test   eax,eax
   14000846d:	cmovle r8d,eax
   140008471:	mov    DWORD PTR [rbp+0x20],r8d
   140008475:	mov    rcx,QWORD PTR [rip+0x5cf4]        # 0x14000e170
   14000847c:	cmp    rcx,rsi
   14000847f:	je     0x1400084a3
   140008481:	test   BYTE PTR [rcx+0x1c],0x4
   140008485:	je     0x1400084a3
   140008487:	mov    edx,0x3b
   14000848c:	mov    r9d,r8d
   14000848f:	lea    r8,[rip+0x2d3a]        # 0x14000b1d0
   140008496:	mov    rcx,QWORD PTR [rcx+0x10]
   14000849a:	call   0x1400011d4
   14000849f:	mov    r8d,DWORD PTR [rbp+0x20]
   1400084a3:	mov    DWORD PTR [rbp+0x28],r8d
   1400084a7:	lea    rcx,[rbp-0x28]
   1400084ab:	call   0x1400087e8
   1400084b0:	mov    ebx,DWORD PTR [rbp+0x28]
   1400084b3:	test   ebx,ebx
   1400084b5:	jns    0x1400084e4
   1400084b7:	mov    rcx,QWORD PTR [rip+0x5cb2]        # 0x14000e170
   1400084be:	cmp    rcx,rsi
   1400084c1:	je     0x1400084e4
   1400084c3:	test   BYTE PTR [rcx+0x1c],0x4
   1400084c7:	je     0x1400084e4
   1400084c9:	mov    edx,0x1d
   1400084ce:	mov    r9d,ebx
   1400084d1:	lea    r8,[rip+0x2ca8]        # 0x14000b180
   1400084d8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400084dc:	call   0x1400011d4
   1400084e1:	mov    ebx,DWORD PTR [rbp+0x28]
   1400084e4:	lea    rcx,[rbp-0x18]
   1400084e8:	call   0x1400087e8
   1400084ed:	mov    eax,ebx
   1400084ef:	add    rsp,0x70
   1400084f3:	pop    rsi
   1400084f4:	pop    rbx
   1400084f5:	pop    rbp
   1400084f6:	ret    
   1400084f7:	int3   
   1400084f8:	int3   
   1400084f9:	int3   
   1400084fa:	int3   
   1400084fb:	int3   
   1400084fc:	int3   
   1400084fd:	int3   
   1400084fe:	int3   
   1400084ff:	int3   
   140008500:	rex push rbp
   140008502:	push   rbx
   140008503:	push   r14
   140008505:	mov    rbp,rsp
   140008508:	sub    rsp,0x50
   14000850c:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140008514:	mov    rbx,rcx
   140008517:	and    DWORD PTR [rbp+0x20],0x0
   14000851b:	lea    rax,[rbp+0x20]
   14000851f:	mov    QWORD PTR [rbp-0x18],rax
   140008523:	lea    rax,[rip+0x2c3e]        # 0x14000b168
   14000852a:	mov    QWORD PTR [rbp-0x10],rax
   14000852e:	lea    r14,[rip+0x5c3b]        # 0x14000e170
   140008535:	cmp    QWORD PTR [rip+0x5c34],r14        # 0x14000e170
   14000853c:	je     0x140008548
   14000853e:	lea    rcx,[rbp-0x18]
   140008542:	call   0x1400087ac
   140008547:	nop
   140008548:	test   rbx,rbx
   14000854b:	jne    0x14000855a
   14000854d:	mov    ebx,0x80004003
   140008552:	mov    DWORD PTR [rbp+0x20],ebx
   140008555:	jmp    0x1400086b4
   14000855a:	and    QWORD PTR [rbp+0x38],0x0
   14000855f:	call   QWORD PTR [rip+0x1b23]        # 0x14000a088
   140008565:	mov    rcx,rax
   140008568:	lea    r9,[rbp+0x38]
   14000856c:	xor    r8d,r8d
   14000856f:	lea    edx,[r8+0xa]
   140008573:	call   QWORD PTR [rip+0x1dff]        # 0x14000a378
   140008579:	test   eax,eax
   14000857b:	jne    0x14000861e
   140008581:	call   QWORD PTR [rip+0x1d19]        # 0x14000a2a0
   140008587:	cmp    eax,0x3f0
   14000858c:	je     0x1400085bc
   14000858e:	movzx  r9d,ax
   140008592:	or     r9d,0x80070000
   140008599:	test   eax,eax
   14000859b:	cmovle r9d,eax
   14000859f:	mov    DWORD PTR [rbp+0x20],r9d
   1400085a3:	mov    rcx,QWORD PTR [rip+0x5bc6]        # 0x14000e170
   1400085aa:	cmp    rcx,r14
   1400085ad:	je     0x14000861e
   1400085af:	test   BYTE PTR [rcx+0x1c],0x4
   1400085b3:	je     0x14000861e
   1400085b5:	mov    edx,0x20
   1400085ba:	jmp    0x14000860e
   1400085bc:	and    DWORD PTR [rbp+0x20],0x0
   1400085c0:	call   QWORD PTR [rip+0x1d82]        # 0x14000a348
   1400085c6:	mov    rcx,rax
   1400085c9:	lea    r8,[rbp+0x38]
   1400085cd:	mov    edx,0xa
   1400085d2:	call   QWORD PTR [rip+0x1d68]        # 0x14000a340
   1400085d8:	test   eax,eax
   1400085da:	jne    0x14000861e
   1400085dc:	call   QWORD PTR [rip+0x1cbe]        # 0x14000a2a0
   1400085e2:	movzx  r9d,ax
   1400085e6:	or     r9d,0x80070000
   1400085ed:	test   eax,eax
   1400085ef:	cmovle r9d,eax
   1400085f3:	mov    DWORD PTR [rbp+0x20],r9d
   1400085f7:	mov    rcx,QWORD PTR [rip+0x5b72]        # 0x14000e170
   1400085fe:	cmp    rcx,r14
   140008601:	je     0x14000861e
   140008603:	test   BYTE PTR [rcx+0x1c],0x4
   140008607:	je     0x14000861e
   140008609:	mov    edx,0x21
   14000860e:	lea    r8,[rip+0x2b6b]        # 0x14000b180
   140008615:	mov    rcx,QWORD PTR [rcx+0x10]
   140008619:	call   0x1400011d4
   14000861e:	cmp    DWORD PTR [rbp+0x20],0x0
   140008622:	jl     0x14000869e
   140008624:	mov    DWORD PTR [rbp+0x28],0x4
   14000862b:	lea    rax,[rbp+0x28]
   14000862f:	mov    QWORD PTR [rsp+0x20],rax
   140008634:	mov    r9d,0x4
   14000863a:	lea    r8,[rbp+0x30]
   14000863e:	lea    edx,[r9+0x10]
   140008642:	mov    rcx,QWORD PTR [rbp+0x38]
   140008646:	call   QWORD PTR [rip+0x1ddc]        # 0x14000a428
   14000864c:	test   eax,eax
   14000864e:	jne    0x140008694
   140008650:	call   QWORD PTR [rip+0x1c4a]        # 0x14000a2a0
   140008656:	movzx  r9d,ax
   14000865a:	or     r9d,0x80070000
   140008661:	test   eax,eax
   140008663:	cmovle r9d,eax
   140008667:	mov    DWORD PTR [rbp+0x20],r9d
   14000866b:	mov    rcx,QWORD PTR [rip+0x5afe]        # 0x14000e170
   140008672:	cmp    rcx,r14
   140008675:	je     0x14000869e
   140008677:	test   BYTE PTR [rcx+0x1c],0x4
   14000867b:	je     0x14000869e
   14000867d:	mov    edx,0x22
   140008682:	lea    r8,[rip+0x2af7]        # 0x14000b180
   140008689:	mov    rcx,QWORD PTR [rcx+0x10]
   14000868d:	call   0x1400011d4
   140008692:	jmp    0x14000869e
   140008694:	xor    eax,eax
   140008696:	cmp    DWORD PTR [rbp+0x30],eax
   140008699:	setne  al
   14000869c:	mov    DWORD PTR [rbx],eax
   14000869e:	mov    rcx,QWORD PTR [rbp+0x38]
   1400086a2:	test   rcx,rcx
   1400086a5:	je     0x1400086b1
   1400086a7:	call   0x140008868
   1400086ac:	and    QWORD PTR [rbp+0x38],0x0
   1400086b1:	mov    ebx,DWORD PTR [rbp+0x20]
   1400086b4:	lea    rcx,[rbp-0x18]
   1400086b8:	call   0x1400087e8
   1400086bd:	mov    eax,ebx
   1400086bf:	add    rsp,0x50
   1400086c3:	pop    r14
   1400086c5:	pop    rbx
   1400086c6:	pop    rbp
   1400086c7:	ret    
   1400086c8:	int3   
   1400086c9:	int3   
   1400086ca:	int3   
   1400086cb:	int3   
   1400086cc:	int3   
   1400086cd:	int3   
   1400086ce:	int3   
   1400086cf:	int3   
   1400086d0:	sub    rsp,0x48
   1400086d4:	test   r9,r9
   1400086d7:	je     0x1400086ec
   1400086d9:	or     r8,0xffffffffffffffff
   1400086dd:	inc    r8
   1400086e0:	cmp    BYTE PTR [r9+r8*1],0x0
   1400086e5:	jne    0x1400086dd
   1400086e7:	inc    r8
   1400086ea:	jmp    0x1400086f2
   1400086ec:	mov    r8d,0x5
   1400086f2:	test   r9,r9
   1400086f5:	lea    rax,[rip+0x2a94]        # 0x14000b190
   1400086fc:	cmovne rax,r9
   140008700:	and    QWORD PTR [rsp+0x30],0x0
   140008706:	mov    QWORD PTR [rsp+0x28],r8
   14000870b:	lea    r8,[rip+0x2abe]        # 0x14000b1d0
   140008712:	movzx  r9d,dx
   140008716:	mov    edx,0x2b
   14000871b:	mov    QWORD PTR [rsp+0x20],rax
   140008720:	call   QWORD PTR [rip+0x1e5a]        # 0x14000a580
   140008726:	add    rsp,0x48
   14000872a:	ret    
   14000872b:	int3   
   14000872c:	int3   
   14000872d:	int3   
   14000872e:	int3   
   14000872f:	int3   
   140008730:	int3   
   140008731:	int3   
   140008732:	int3   
   140008733:	int3   
   140008734:	sub    rsp,0x58
   140008738:	test   r9,r9
   14000873b:	je     0x140008750
   14000873d:	or     rdx,0xffffffffffffffff
   140008741:	inc    rdx
   140008744:	cmp    BYTE PTR [r9+rdx*1],0x0
   140008749:	jne    0x140008741
   14000874b:	inc    rdx
   14000874e:	jmp    0x140008755
   140008750:	mov    edx,0x5
   140008755:	test   r9,r9
   140008758:	lea    r8,[rsp+0x80]
   140008760:	lea    rax,[rip+0x2a29]        # 0x14000b190
   140008767:	cmovne rax,r9
   14000876b:	and    QWORD PTR [rsp+0x40],0x0
   140008771:	mov    QWORD PTR [rsp+0x38],0x4
   14000877a:	mov    r9d,0xb
   140008780:	mov    QWORD PTR [rsp+0x30],r8
   140008785:	lea    r8,[rip+0x2a44]        # 0x14000b1d0
   14000878c:	mov    QWORD PTR [rsp+0x28],rdx
   140008791:	mov    QWORD PTR [rsp+0x20],rax
   140008796:	lea    edx,[r9+0x20]
   14000879a:	call   QWORD PTR [rip+0x1de0]        # 0x14000a580
   1400087a0:	add    rsp,0x58
   1400087a4:	ret    
   1400087a5:	int3   
   1400087a6:	int3   
   1400087a7:	int3   
   1400087a8:	int3   
   1400087a9:	int3   
   1400087aa:	int3   
   1400087ab:	int3   
   1400087ac:	rex push rbx
   1400087ae:	sub    rsp,0x20
   1400087b2:	mov    rbx,rcx
   1400087b5:	mov    rcx,QWORD PTR [rip+0x59b4]        # 0x14000e170
   1400087bc:	test   DWORD PTR [rcx+0x1c],0x400
   1400087c3:	je     0x1400087d7
   1400087c5:	mov    r9,QWORD PTR [rbx+0x8]
   1400087c9:	mov    edx,0xa
   1400087ce:	mov    rcx,QWORD PTR [rcx+0x10]
   1400087d2:	call   0x1400086d0
   1400087d7:	mov    rax,rbx
   1400087da:	add    rsp,0x20
   1400087de:	pop    rbx
   1400087df:	ret    
   1400087e0:	int3   
   1400087e1:	int3   
   1400087e2:	int3   
   1400087e3:	int3   
   1400087e4:	int3   
   1400087e5:	int3   
   1400087e6:	int3   
   1400087e7:	int3   
   1400087e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400087ed:	push   rdi
   1400087ee:	sub    rsp,0x30
   1400087f2:	mov    rax,QWORD PTR [rcx]
   1400087f5:	lea    rdi,[rip+0x5974]        # 0x14000e170
   1400087fc:	mov    rbx,rcx
   1400087ff:	test   rax,rax
   140008802:	je     0x14000882d
   140008804:	mov    edx,DWORD PTR [rax]
   140008806:	test   edx,edx
   140008808:	jns    0x14000882d
   14000880a:	mov    rcx,QWORD PTR [rip+0x595f]        # 0x14000e170
   140008811:	cmp    rcx,rdi
   140008814:	je     0x140008854
   140008816:	test   BYTE PTR [rcx+0x1c],0x4
   14000881a:	je     0x140008834
   14000881c:	mov    r9,QWORD PTR [rbx+0x8]
   140008820:	mov    rcx,QWORD PTR [rcx+0x10]
   140008824:	mov    DWORD PTR [rsp+0x20],edx
   140008828:	call   0x140008734
   14000882d:	mov    rcx,QWORD PTR [rip+0x593c]        # 0x14000e170
   140008834:	cmp    rcx,rdi
   140008837:	je     0x140008854
   140008839:	test   DWORD PTR [rcx+0x1c],0x400
   140008840:	je     0x140008854
   140008842:	mov    r9,QWORD PTR [rbx+0x8]
   140008846:	mov    edx,0xc
   14000884b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000884f:	call   0x1400086d0
   140008854:	mov    rbx,QWORD PTR [rsp+0x40]
   140008859:	add    rsp,0x30
   14000885d:	pop    rdi
   14000885e:	ret    
   14000885f:	int3   
   140008860:	int3   
   140008861:	int3   
   140008862:	int3   
   140008863:	int3   
   140008864:	int3   
   140008865:	int3   
   140008866:	int3   
   140008867:	int3   
   140008868:	mov    r11,rsp
   14000886b:	mov    QWORD PTR [r11+0x10],rdx
   14000886f:	push   rdi
   140008870:	sub    rsp,0x40
   140008874:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   14000887c:	mov    QWORD PTR [r11+0x8],rbx
   140008880:	mov    rbx,rcx
   140008883:	and    DWORD PTR [rsp+0x58],0x0
   140008888:	lea    rax,[r11+0x10]
   14000888c:	mov    QWORD PTR [r11-0x20],rax
   140008890:	lea    rax,[rip+0x2921]        # 0x14000b1b8
   140008897:	mov    QWORD PTR [r11-0x18],rax
   14000889b:	lea    rdi,[rip+0x58ce]        # 0x14000e170
   1400088a2:	cmp    QWORD PTR [rip+0x58c7],rdi        # 0x14000e170
   1400088a9:	je     0x1400088b5
   1400088ab:	lea    rcx,[r11-0x20]
   1400088af:	call   0x1400087ac
   1400088b4:	nop
   1400088b5:	mov    rcx,rbx
   1400088b8:	call   QWORD PTR [rip+0x1a12]        # 0x14000a2d0
   1400088be:	mov    ebx,eax
   1400088c0:	test   eax,eax
   1400088c2:	jne    0x140008906
   1400088c4:	call   QWORD PTR [rip+0x19d6]        # 0x14000a2a0
   1400088ca:	movzx  r9d,ax
   1400088ce:	or     r9d,0x80070000
   1400088d5:	test   eax,eax
   1400088d7:	cmovle r9d,eax
   1400088db:	mov    DWORD PTR [rsp+0x58],r9d
   1400088e0:	mov    rcx,QWORD PTR [rip+0x5889]        # 0x14000e170
   1400088e7:	cmp    rcx,rdi
   1400088ea:	je     0x140008906
   1400088ec:	test   BYTE PTR [rcx+0x1c],0x4
   1400088f0:	je     0x140008906
   1400088f2:	lea    edx,[rbx+0x4b]
   1400088f5:	lea    r8,[rip+0x28d4]        # 0x14000b1d0
   1400088fc:	mov    rcx,QWORD PTR [rcx+0x10]
   140008900:	call   0x1400011d4
   140008905:	nop
   140008906:	lea    rcx,[rsp+0x28]
   14000890b:	call   0x1400087e8
   140008910:	mov    eax,ebx
   140008912:	mov    rbx,QWORD PTR [rsp+0x50]
   140008917:	add    rsp,0x40
   14000891b:	pop    rdi
   14000891c:	ret    
   14000891d:	int3   
   14000891e:	int3   
   14000891f:	int3   
   140008920:	int3   
   140008921:	int3   
   140008922:	int3   
   140008923:	int3   
   140008924:	mov    QWORD PTR [rsp+0x8],rbx
   140008929:	push   rdi
   14000892a:	sub    rsp,0x20
   14000892e:	mov    rdi,r8
   140008931:	mov    rbx,rdx
   140008934:	test   rdx,rdx
   140008937:	je     0x140008976
   140008939:	test   r8,r8
   14000893c:	je     0x140008976
   14000893e:	mov    edx,0x23
   140008943:	call   QWORD PTR [rip+0x1af7]        # 0x14000a440
   140008949:	mov    QWORD PTR [rbx],rax
   14000894c:	test   rax,rax
   14000894f:	je     0x14000896f
   140008951:	lea    rcx,[rax+0x2]
   140008955:	mov    edx,0x23
   14000895a:	mov    QWORD PTR [rbx],rcx
   14000895d:	call   QWORD PTR [rip+0x1add]        # 0x14000a440
   140008963:	mov    QWORD PTR [rdi],rax
   140008966:	test   rax,rax
   140008969:	je     0x14000896f
   14000896b:	xor    eax,eax
   14000896d:	jmp    0x14000897b
   14000896f:	mov    eax,0x80004005
   140008974:	jmp    0x14000897b
   140008976:	mov    eax,0x80070057
   14000897b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008980:	add    rsp,0x20
   140008984:	pop    rdi
   140008985:	ret    
   140008986:	int3   
   140008987:	int3   
   140008988:	int3   
   140008989:	int3   
   14000898a:	int3   
   14000898b:	int3   
   14000898c:	mov    rax,rsp
   14000898f:	mov    QWORD PTR [rax+0x10],rbx
   140008993:	mov    QWORD PTR [rax+0x18],rbp
   140008997:	push   rsi
   140008998:	push   rdi
   140008999:	push   r14
   14000899b:	sub    rsp,0x20
   14000899f:	xor    esi,esi
   1400089a1:	mov    r14,rdx
   1400089a4:	and    QWORD PTR [rax+0x20],rsi
   1400089a8:	mov    rdi,rcx
   1400089ab:	mov    QWORD PTR [rax+0x8],rsi
   1400089af:	mov    ebp,0x80070057
   1400089b4:	test   rcx,rcx
   1400089b7:	je     0x1400089cf
   1400089b9:	lea    r8,[rax+0x20]
   1400089bd:	lea    rdx,[rax+0x8]
   1400089c1:	call   0x140008924
   1400089c6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400089cb:	mov    ebx,eax
   1400089cd:	jmp    0x1400089d1
   1400089cf:	mov    ebx,ebp
   1400089d1:	test   ebx,ebx
   1400089d3:	js     0x140008a69
   1400089d9:	test   rdi,rdi
   1400089dc:	je     0x140008a67
   1400089e2:	mov    ebx,0x23
   1400089e7:	mov    rcx,rdi
   1400089ea:	mov    edx,ebx
   1400089ec:	call   QWORD PTR [rip+0x1a4e]        # 0x14000a440
   1400089f2:	test   rax,rax
   1400089f5:	je     0x140008a60
   1400089f7:	lea    rcx,[rax+0x2]
   1400089fb:	mov    edx,ebx
   1400089fd:	call   QWORD PTR [rip+0x1a3d]        # 0x14000a440
   140008a03:	test   rax,rax
   140008a06:	je     0x140008a60
   140008a08:	lea    rcx,[rax+0x2]
   140008a0c:	mov    edx,ebx
   140008a0e:	call   QWORD PTR [rip+0x1a2c]        # 0x14000a440
   140008a14:	mov    rdi,rax
   140008a17:	test   rax,rax
   140008a1a:	je     0x140008a60
   140008a1c:	xor    ebx,ebx
   140008a1e:	sub    rdi,rsi
   140008a21:	sar    rdi,1
   140008a24:	lea    rcx,[rbx-0x1]
   140008a28:	lea    rbp,[rdi+0x1]
   140008a2c:	lea    eax,[rbx+0x2]
   140008a2f:	mul    rbp
   140008a32:	cmovo  rax,rcx
   140008a36:	mov    rcx,rax
   140008a39:	call   0x140008bd8
   140008a3e:	mov    QWORD PTR [r14],rax
   140008a41:	test   rax,rax
   140008a44:	jne    0x140008a4d
   140008a46:	mov    eax,0x8007000e
   140008a4b:	jmp    0x140008a6b
   140008a4d:	mov    r9,rdi
   140008a50:	mov    r8,rsi
   140008a53:	mov    rdx,rbp
   140008a56:	mov    rcx,rax
   140008a59:	call   0x1400058b4
   140008a5e:	jmp    0x140008a69
   140008a60:	mov    ebx,0x80004005
   140008a65:	jmp    0x140008a69
   140008a67:	mov    ebx,ebp
   140008a69:	mov    eax,ebx
   140008a6b:	mov    rbx,QWORD PTR [rsp+0x48]
   140008a70:	mov    rbp,QWORD PTR [rsp+0x50]
   140008a75:	add    rsp,0x20
   140008a79:	pop    r14
   140008a7b:	pop    rdi
   140008a7c:	pop    rsi
   140008a7d:	ret    
   140008a7e:	int3   
   140008a7f:	int3   
   140008a80:	int3   
   140008a81:	int3   
   140008a82:	int3   
   140008a83:	int3   
   140008a84:	mov    r11,rsp
   140008a87:	mov    QWORD PTR [r11+0x8],rbx
   140008a8b:	mov    QWORD PTR [r11+0x10],rsi
   140008a8f:	push   rdi
   140008a90:	sub    rsp,0x40
   140008a94:	mov    rbx,r9
   140008a97:	lea    rax,[r11-0x18]
   140008a9b:	mov    rdi,r8
   140008a9e:	mov    QWORD PTR [r11-0x28],rax
   140008aa2:	mov    rsi,rcx
   140008aa5:	mov    r9d,0x1
   140008aab:	xor    r8d,r8d
   140008aae:	mov    rcx,0xffffffff80000001
   140008ab5:	call   QWORD PTR [rip+0x18e5]        # 0x14000a3a0
   140008abb:	test   eax,eax
   140008abd:	jne    0x140008b7d
   140008ac3:	mov    rcx,QWORD PTR [rsp+0x30]
   140008ac8:	xor    r9d,r9d
   140008acb:	mov    QWORD PTR [rsp+0x28],rdi
   140008ad0:	xor    r8d,r8d
   140008ad3:	and    QWORD PTR [rsp+0x20],0x0
   140008ad9:	mov    rdx,rsi
   140008adc:	call   QWORD PTR [rip+0x18c6]        # 0x14000a3a8
   140008ae2:	test   eax,eax
   140008ae4:	jne    0x140008b72
   140008aea:	mov    eax,DWORD PTR [rdi]
   140008aec:	sub    eax,0x28
   140008aef:	cmp    eax,0xffd7
   140008af4:	ja     0x140008b72
   140008af6:	mov    rcx,QWORD PTR [rbx]
   140008af9:	test   rcx,rcx
   140008afc:	je     0x140008b07
   140008afe:	call   0x140008be4
   140008b03:	and    QWORD PTR [rbx],0x0
   140008b07:	mov    ecx,DWORD PTR [rdi]
   140008b09:	call   0x140008bd8
   140008b0e:	mov    QWORD PTR [rbx],rax
   140008b11:	test   rax,rax
   140008b14:	jne    0x140008b28
   140008b16:	mov    rcx,QWORD PTR [rsp+0x30]
   140008b1b:	call   QWORD PTR [rip+0x189f]        # 0x14000a3c0
   140008b21:	mov    eax,0x80004005
   140008b26:	jmp    0x140008b7f
   140008b28:	mov    r8d,DWORD PTR [rdi]
   140008b2b:	xor    edx,edx
   140008b2d:	mov    rcx,rax
   140008b30:	call   0x140009952
   140008b35:	mov    rax,QWORD PTR [rbx]
   140008b38:	xor    r9d,r9d
   140008b3b:	mov    rcx,QWORD PTR [rsp+0x30]
   140008b40:	xor    r8d,r8d
   140008b43:	mov    QWORD PTR [rsp+0x28],rdi
   140008b48:	mov    rdx,rsi
   140008b4b:	mov    QWORD PTR [rsp+0x20],rax
   140008b50:	call   QWORD PTR [rip+0x1852]        # 0x14000a3a8
   140008b56:	test   eax,eax
   140008b58:	jne    0x140008b72
   140008b5a:	mov    rcx,QWORD PTR [rbx]
   140008b5d:	mov    eax,DWORD PTR [rdi]
   140008b5f:	cmp    DWORD PTR [rcx],eax
   140008b61:	jne    0x140008b69
   140008b63:	cmp    DWORD PTR [rcx+0x4],0x2
   140008b67:	je     0x140008b72
   140008b69:	call   0x140008be4
   140008b6e:	and    QWORD PTR [rbx],0x0
   140008b72:	mov    rcx,QWORD PTR [rsp+0x30]
   140008b77:	call   QWORD PTR [rip+0x1843]        # 0x14000a3c0
   140008b7d:	xor    eax,eax
   140008b7f:	mov    rbx,QWORD PTR [rsp+0x50]
   140008b84:	mov    rsi,QWORD PTR [rsp+0x58]
   140008b89:	add    rsp,0x40
   140008b8d:	pop    rdi
   140008b8e:	ret    
   140008b8f:	int3   
   140008b90:	int3   
   140008b91:	int3   
   140008b92:	int3   
   140008b93:	int3   
   140008b94:	int3   
   140008b95:	int3   
   140008b96:	int3   
   140008b97:	int3   
   140008b98:	int3   
   140008b99:	int3   
   140008b9a:	int3   
   140008b9b:	int3   
   140008b9c:	int3   
   140008b9d:	int3   
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	sub    rsp,0x38
   140008ba4:	and    DWORD PTR [rsp+0x28],0x0
   140008ba9:	mov    r9,QWORD PTR [rip+0x14f0]        # 0x14000a0a0
   140008bb0:	mov    r8,QWORD PTR [rip+0x2629]        # 0x14000b1e0
   140008bb7:	mov    QWORD PTR [rsp+0x20],rdx
   140008bbc:	mov    rdx,rcx
   140008bbf:	lea    rcx,[rip+0xffffffffffff743a]        # 0x140000000
   140008bc6:	call   QWORD PTR [rip+0x14dc]        # 0x14000a0a8
   140008bcc:	add    rsp,0x38
   140008bd0:	ret    
   140008bd1:	int3   
   140008bd2:	int3   
   140008bd3:	int3   
   140008bd4:	int3   
   140008bd5:	int3   
   140008bd6:	int3   
   140008bd7:	int3   
   140008bd8:	jmp    0x140008bf0
   140008bdd:	int3   
   140008bde:	int3   
   140008bdf:	int3   
   140008be0:	int3   
   140008be1:	int3   
   140008be2:	int3   
   140008be3:	int3   
   140008be4:	jmp    0x140008c30
   140008be9:	int3   
   140008bea:	int3   
   140008beb:	int3   
   140008bec:	int3   
   140008bed:	int3   
   140008bee:	int3   
   140008bef:	int3   
   140008bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140008bf5:	push   rdi
   140008bf6:	sub    rsp,0x20
   140008bfa:	mov    rdi,rcx
   140008bfd:	jmp    0x140008c0e
   140008bff:	mov    rcx,rdi
   140008c02:	call   0x1400092d8
   140008c07:	test   eax,eax
   140008c09:	je     0x140008c1b
   140008c0b:	mov    rcx,rdi
   140008c0e:	call   0x140009050
   140008c13:	mov    rbx,rax
   140008c16:	test   rax,rax
   140008c19:	je     0x140008bff
   140008c1b:	mov    rax,rbx
   140008c1e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c23:	add    rsp,0x20
   140008c27:	pop    rdi
   140008c28:	ret    
   140008c29:	int3   
   140008c2a:	int3   
   140008c2b:	int3   
   140008c2c:	int3   
   140008c2d:	int3   
   140008c2e:	int3   
   140008c2f:	int3   
   140008c30:	jmp    0x140009044
   140008c35:	int3   
   140008c36:	int3   
   140008c37:	int3   
   140008c38:	int3   
   140008c39:	int3   
   140008c3a:	int3   
   140008c3b:	int3   
   140008c3c:	int3   
   140008c3d:	int3   
   140008c3e:	int3   
   140008c3f:	int3   
   140008c40:	sub    rsp,0x28
   140008c44:	mov    eax,0x5a4d
   140008c49:	cmp    WORD PTR [rip+0xffffffffffff73b0],ax        # 0x140000000
   140008c50:	je     0x140008c56
   140008c52:	xor    eax,eax
   140008c54:	jmp    0x140008ca5
   140008c56:	movsxd rcx,DWORD PTR [rip+0xffffffffffff73df]        # 0x14000003c
   140008c5d:	lea    rax,[rip+0xffffffffffff739c]        # 0x140000000
   140008c64:	add    rcx,rax
   140008c67:	cmp    DWORD PTR [rcx],0x4550
   140008c6d:	jne    0x140008c52
   140008c6f:	movzx  eax,WORD PTR [rcx+0x18]
   140008c73:	cmp    eax,0x10b
   140008c78:	je     0x140008c94
   140008c7a:	cmp    eax,0x20b
   140008c7f:	jne    0x140008c52
   140008c81:	xor    eax,eax
   140008c83:	cmp    DWORD PTR [rcx+0x84],0xe
   140008c8a:	jbe    0x140008ca5
   140008c8c:	cmp    DWORD PTR [rcx+0xf8],eax
   140008c92:	jmp    0x140008ca2
   140008c94:	xor    eax,eax
   140008c96:	cmp    DWORD PTR [rcx+0x74],0xe
   140008c9a:	jbe    0x140008ca5
   140008c9c:	cmp    DWORD PTR [rcx+0xe8],eax
   140008ca2:	setne  al
   140008ca5:	mov    ecx,0x2
   140008caa:	mov    DWORD PTR [rip+0x5500],eax        # 0x14000e1b0
   140008cb0:	call   0x1400093b8
   140008cb5:	mov    ecx,eax
   140008cb7:	call   QWORD PTR [rip+0x1823]        # 0x14000a4e0
   140008cbd:	mov    rcx,QWORD PTR [rip+0x17dc]        # 0x14000a4a0
   140008cc4:	or     rax,0xffffffffffffffff
   140008cc8:	mov    QWORD PTR [rip+0x74e1],rax        # 0x1400101b0
   140008ccf:	mov    QWORD PTR [rip+0x74e2],rax        # 0x1400101b8
   140008cd6:	mov    eax,DWORD PTR [rip+0x5a60]        # 0x14000e73c
   140008cdc:	mov    DWORD PTR [rcx],eax
   140008cde:	mov    rcx,QWORD PTR [rip+0x17b3]        # 0x14000a498
   140008ce5:	mov    eax,DWORD PTR [rip+0x5a45]        # 0x14000e730
   140008ceb:	mov    DWORD PTR [rcx],eax
   140008ced:	call   0x1400095d0
   140008cf2:	cmp    DWORD PTR [rip+0x5307],0x0        # 0x14000e000
   140008cf9:	jne    0x140008d08
   140008cfb:	lea    rcx,[rip+0x8ce]        # 0x1400095d0
   140008d02:	call   QWORD PTR [rip+0x17b8]        # 0x14000a4c0
   140008d08:	xor    eax,eax
   140008d0a:	add    rsp,0x28
   140008d0e:	ret    
   140008d0f:	int3   
   140008d10:	int3   
   140008d11:	int3   
   140008d12:	int3   
   140008d13:	int3   
   140008d14:	int3   
   140008d15:	int3   
   140008d16:	int3   
   140008d17:	int3   
   140008d18:	int3   
   140008d19:	int3   
   140008d1a:	int3   
   140008d1b:	int3   
   140008d1c:	int3   
   140008d1d:	int3   
   140008d1e:	int3   
   140008d1f:	int3   
   140008d20:	sub    rsp,0x38
   140008d24:	mov    eax,DWORD PTR [rip+0x5a0e]        # 0x14000e738
   140008d2a:	lea    r8,[rip+0x5477]        # 0x14000e1a8
   140008d31:	mov    r9d,DWORD PTR [rip+0x59fc]        # 0x14000e734
   140008d38:	lea    rdx,[rip+0x5461]        # 0x14000e1a0
   140008d3f:	mov    DWORD PTR [rip+0x546f],eax        # 0x14000e1b4
   140008d45:	lea    rcx,[rip+0x544c]        # 0x14000e198
   140008d4c:	lea    rax,[rip+0x5461]        # 0x14000e1b4
   140008d53:	mov    QWORD PTR [rsp+0x20],rax
   140008d58:	call   QWORD PTR [rip+0x178a]        # 0x14000a4e8
   140008d5e:	mov    DWORD PTR [rip+0x5438],eax        # 0x14000e19c
   140008d64:	add    rsp,0x38
   140008d68:	ret    
   140008d69:	int3   
   140008d6a:	int3   
   140008d6b:	int3   
   140008d6c:	int3   
   140008d6d:	int3   
   140008d6e:	int3   
   140008d6f:	int3   
   140008d70:	mov    QWORD PTR [rsp+0x8],rbx
   140008d75:	mov    QWORD PTR [rsp+0x10],rsi
   140008d7a:	mov    QWORD PTR [rsp+0x18],rdi
   140008d7f:	push   r12
   140008d81:	push   r14
   140008d83:	push   r15
   140008d85:	sub    rsp,0xb0
   140008d8c:	xor    r15d,r15d
   140008d8f:	mov    DWORD PTR [rsp+0x20],r15d
   140008d94:	lea    rcx,[rsp+0x40]
   140008d99:	call   QWORD PTR [rip+0x15c1]        # 0x14000a360
   140008d9f:	nop
   140008da0:	mov    rax,QWORD PTR gs:0x30
   140008da9:	mov    rbx,QWORD PTR [rax+0x8]
   140008dad:	mov    r14d,r15d
   140008db0:	xor    eax,eax
   140008db2:	lock cmpxchg QWORD PTR [rip+0x73e5],rbx        # 0x1400101a0
   140008dbb:	je     0x140008dd9
   140008dbd:	cmp    rax,rbx
   140008dc0:	jne    0x140008dcc
   140008dc2:	mov    edi,0x1
   140008dc7:	mov    r14d,edi
   140008dca:	jmp    0x140008dde
   140008dcc:	mov    ecx,0x3e8
   140008dd1:	call   QWORD PTR [rip+0x1621]        # 0x14000a3f8
   140008dd7:	jmp    0x140008db0
   140008dd9:	mov    edi,0x1
   140008dde:	mov    eax,DWORD PTR [rip+0x73c4]        # 0x1400101a8
   140008de4:	cmp    eax,edi
   140008de6:	jne    0x140008df6
   140008de8:	mov    esi,0x1f
   140008ded:	mov    ecx,esi
   140008def:	call   0x140009404
   140008df4:	jmp    0x140008e67
   140008df6:	mov    eax,DWORD PTR [rip+0x73ac]        # 0x1400101a8
   140008dfc:	test   eax,eax
   140008dfe:	jne    0x140008e5c
   140008e00:	mov    DWORD PTR [rip+0x73a2],edi        # 0x1400101a8
   140008e06:	lea    r12,[rip+0x1803]        # 0x14000a610
   140008e0d:	lea    rbx,[rip+0x17e4]        # 0x14000a5f8
   140008e14:	mov    QWORD PTR [rsp+0x30],rbx
   140008e19:	mov    eax,r15d
   140008e1c:	mov    DWORD PTR [rsp+0x24],eax
   140008e20:	cmp    rbx,r12
   140008e23:	jae    0x140008e4e
   140008e25:	test   eax,eax
   140008e27:	jne    0x140008e52
   140008e29:	mov    rsi,QWORD PTR [rbx]
   140008e2c:	test   rsi,rsi
   140008e2f:	je     0x140008e43
   140008e31:	mov    rcx,rsi
   140008e34:	mov    rax,QWORD PTR [rip+0x1785]        # 0x14000a5c0
   140008e3b:	call   rax
   140008e3d:	call   rsi
   140008e3f:	mov    DWORD PTR [rsp+0x24],eax
   140008e43:	add    rbx,0x8
   140008e47:	mov    QWORD PTR [rsp+0x30],rbx
   140008e4c:	jmp    0x140008e20
   140008e4e:	test   eax,eax
   140008e50:	je     0x140008e62
   140008e52:	mov    eax,0xff
   140008e57:	jmp    0x140008fc3
   140008e5c:	mov    DWORD PTR [rip+0x5332],edi        # 0x14000e194
   140008e62:	mov    esi,0x1f
   140008e67:	mov    eax,DWORD PTR [rip+0x733b]        # 0x1400101a8
   140008e6d:	cmp    eax,edi
   140008e6f:	jne    0x140008e8e
   140008e71:	lea    rdx,[rip+0x1778]        # 0x14000a5f0
   140008e78:	lea    rcx,[rip+0x1751]        # 0x14000a5d0
   140008e7f:	call   0x1400095da
   140008e84:	mov    DWORD PTR [rip+0x731a],0x2        # 0x1400101a8
   140008e8e:	test   r14d,r14d
   140008e91:	jne    0x140008e9d
   140008e93:	mov    rax,r15
   140008e96:	xchg   QWORD PTR [rip+0x7303],rax        # 0x1400101a0
   140008e9d:	cmp    QWORD PTR [rip+0x731c],r15        # 0x1400101c0
   140008ea4:	je     0x140008ed4
   140008ea6:	lea    rcx,[rip+0x7313]        # 0x1400101c0
   140008ead:	call   0x140009460
   140008eb2:	test   eax,eax
   140008eb4:	je     0x140008ed4
   140008eb6:	mov    rbx,QWORD PTR [rip+0x7303]        # 0x1400101c0
   140008ebd:	mov    rcx,rbx
   140008ec0:	mov    rax,QWORD PTR [rip+0x16f9]        # 0x14000a5c0
   140008ec7:	call   rax
   140008ec9:	xor    r8d,r8d
   140008ecc:	lea    edx,[r8+0x2]
   140008ed0:	xor    ecx,ecx
   140008ed2:	call   rbx
   140008ed4:	mov    rax,QWORD PTR [rip+0x15cd]        # 0x14000a4a8
   140008edb:	mov    rdx,QWORD PTR [rax]
   140008ede:	test   rdx,rdx
   140008ee1:	jne    0x140008eed
   140008ee3:	mov    eax,0xff
   140008ee8:	jmp    0x140008fc3
   140008eed:	mov    QWORD PTR [rsp+0x28],rdx
   140008ef2:	mov    ecx,DWORD PTR [rsp+0x20]
   140008ef6:	cmp    WORD PTR [rdx],0x20
   140008efa:	ja     0x140008f74
   140008efc:	cmp    WORD PTR [rdx],r15w
   140008f00:	je     0x140008f06
   140008f02:	test   ecx,ecx
   140008f04:	jne    0x140008f74
   140008f06:	movzx  eax,WORD PTR [rdx]
   140008f09:	sub    ax,di
   140008f0c:	cmp    ax,si
   140008f0f:	ja     0x140008f1c
   140008f11:	add    rdx,0x2
   140008f15:	mov    QWORD PTR [rsp+0x28],rdx
   140008f1a:	jmp    0x140008f06
   140008f1c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140008f20:	movzx  eax,WORD PTR [rsp+0x80]
   140008f28:	mov    r9d,0xa
   140008f2e:	and    cl,dil
   140008f31:	cmovne r9d,eax
   140008f35:	mov    r8,rdx
   140008f38:	xor    edx,edx
   140008f3a:	lea    rcx,[rip+0xffffffffffff70bf]        # 0x140000000
   140008f41:	call   0x14000188c
   140008f46:	mov    DWORD PTR [rip+0x5244],eax        # 0x14000e190
   140008f4c:	cmp    DWORD PTR [rip+0x525d],r15d        # 0x14000e1b0
   140008f53:	jne    0x140008f5d
   140008f55:	mov    ecx,eax
   140008f57:	call   QWORD PTR [rip+0x157b]        # 0x14000a4d8
   140008f5d:	cmp    DWORD PTR [rip+0x5230],r15d        # 0x14000e194
   140008f64:	jne    0x140008f72
   140008f66:	call   QWORD PTR [rip+0x155c]        # 0x14000a4c8
   140008f6c:	mov    eax,DWORD PTR [rip+0x521e]        # 0x14000e190
   140008f72:	jmp    0x140008fc3
   140008f74:	cmp    WORD PTR [rdx],0x22
   140008f78:	jne    0x140008f88
   140008f7a:	mov    eax,r15d
   140008f7d:	test   ecx,ecx
   140008f7f:	sete   al
   140008f82:	mov    ecx,eax
   140008f84:	mov    DWORD PTR [rsp+0x20],eax
   140008f88:	add    rdx,0x2
   140008f8c:	mov    QWORD PTR [rsp+0x28],rdx
   140008f91:	jmp    0x140008ef6
   140008f96:	mov    DWORD PTR [rip+0x51f4],eax        # 0x14000e190
   140008f9c:	cmp    DWORD PTR [rip+0x520d],0x0        # 0x14000e1b0
   140008fa3:	jne    0x140008fae
   140008fa5:	mov    ecx,eax
   140008fa7:	call   QWORD PTR [rip+0x1523]        # 0x14000a4d0
   140008fad:	int3   
   140008fae:	cmp    DWORD PTR [rip+0x51df],0x0        # 0x14000e194
   140008fb5:	jne    0x140008fc3
   140008fb7:	call   QWORD PTR [rip+0x150b]        # 0x14000a4c8
   140008fbd:	mov    eax,DWORD PTR [rip+0x51cd]        # 0x14000e190
   140008fc3:	lea    r11,[rsp+0xb0]
   140008fcb:	mov    rbx,QWORD PTR [r11+0x20]
   140008fcf:	mov    rsi,QWORD PTR [r11+0x28]
   140008fd3:	mov    rdi,QWORD PTR [r11+0x30]
   140008fd7:	mov    rsp,r11
   140008fda:	pop    r15
   140008fdc:	pop    r14
   140008fde:	pop    r12
   140008fe0:	ret    
   140008fe1:	int3   
   140008fe2:	int3   
   140008fe3:	int3   
   140008fe4:	int3   
   140008fe5:	int3   
   140008fe6:	int3   
   140008fe7:	int3   
   140008fe8:	int3   
   140008fe9:	int3   
   140008fea:	int3   
   140008feb:	int3   
   140008fec:	int3   
   140008fed:	int3   
   140008fee:	int3   
   140008fef:	int3   
   140008ff0:	sub    rsp,0x28
   140008ff4:	call   0x1400094f4
   140008ff9:	add    rsp,0x28
   140008ffd:	jmp    0x140008d70
   140009002:	int3   
   140009003:	int3   
   140009004:	int3   
   140009005:	int3   
   140009006:	int3   
   140009007:	int3   
   140009008:	int3   
   140009009:	int3   
   14000900a:	int3   
   14000900b:	int3   
   14000900c:	int3   
   14000900d:	int3   
   14000900e:	int3   
   14000900f:	int3   
   140009010:	int3   
   140009011:	int3   
   140009012:	int3   
   140009013:	int3   
   140009014:	int3   
   140009015:	int3   
   140009016:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009020:	cmp    rcx,QWORD PTR [rip+0x4fe1]        # 0x14000e008
   140009027:	jne    0x140009039
   140009029:	rol    rcx,0x10
   14000902d:	test   cx,0xffff
   140009032:	jne    0x140009035
   140009034:	ret    
   140009035:	ror    rcx,0x10
   140009039:	jmp    0x140009160
   14000903e:	int3   
   14000903f:	int3   
   140009040:	int3   
   140009041:	int3   
   140009042:	int3   
   140009043:	int3   
   140009044:	jmp    QWORD PTR [rip+0x13fe]        # 0x14000a448
   14000904a:	int3   
   14000904b:	int3   
   14000904c:	int3   
   14000904d:	int3   
   14000904e:	int3   
   14000904f:	int3   
   140009050:	jmp    QWORD PTR [rip+0x1402]        # 0x14000a458
   140009056:	int3   
   140009057:	int3   
   140009058:	int3   
   140009059:	int3   
   14000905a:	int3   
   14000905b:	int3   
   14000905c:	mov    QWORD PTR [rsp+0x8],rbx
   140009061:	push   rdi
   140009062:	sub    rsp,0x20
   140009066:	mov    rdi,rcx
   140009069:	mov    rax,QWORD PTR [rip+0x7148]        # 0x1400101b8
   140009070:	mov    QWORD PTR [rsp+0x38],rax
   140009075:	cmp    rax,0xffffffffffffffff
   140009079:	jne    0x140009092
   14000907b:	mov    rbx,QWORD PTR [rip+0x13f6]        # 0x14000a478
   140009082:	mov    rcx,rbx
   140009085:	call   QWORD PTR [rip+0x1535]        # 0x14000a5c0
   14000908b:	mov    rcx,rdi
   14000908e:	call   rbx
   140009090:	jmp    0x1400090ef
   140009092:	mov    ecx,0x8
   140009097:	call   0x14000960a
   14000909c:	nop
   14000909d:	mov    rax,QWORD PTR [rip+0x7114]        # 0x1400101b8
   1400090a4:	mov    QWORD PTR [rsp+0x38],rax
   1400090a9:	mov    rax,QWORD PTR [rip+0x7100]        # 0x1400101b0
   1400090b0:	mov    QWORD PTR [rsp+0x40],rax
   1400090b5:	lea    r8,[rsp+0x40]
   1400090ba:	lea    rdx,[rsp+0x38]
   1400090bf:	mov    rcx,rdi
   1400090c2:	call   0x140009622
   1400090c7:	mov    rbx,rax
   1400090ca:	mov    rdx,QWORD PTR [rsp+0x38]
   1400090cf:	mov    QWORD PTR [rip+0x70e2],rdx        # 0x1400101b8
   1400090d6:	mov    rdx,QWORD PTR [rsp+0x40]
   1400090db:	mov    QWORD PTR [rip+0x70ce],rdx        # 0x1400101b0
   1400090e2:	mov    ecx,0x8
   1400090e7:	call   0x140009616
   1400090ec:	mov    rax,rbx
   1400090ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400090f4:	add    rsp,0x20
   1400090f8:	pop    rdi
   1400090f9:	ret    
   1400090fa:	int3   
   1400090fb:	int3   
   1400090fc:	int3   
   1400090fd:	int3   
   1400090fe:	int3   
   1400090ff:	int3   
   140009100:	sub    rsp,0x28
   140009104:	call   0x14000905c
   140009109:	neg    rax
   14000910c:	sbb    eax,eax
   14000910e:	neg    eax
   140009110:	dec    eax
   140009112:	add    rsp,0x28
   140009116:	ret    
   140009117:	int3   
   140009118:	int3   
   140009119:	int3   
   14000911a:	int3   
   14000911b:	int3   
   14000911c:	int3   
   14000911d:	int3   
   14000911e:	int3   
   14000911f:	int3   
   140009120:	rex push rbx
   140009122:	sub    rsp,0x20
   140009126:	mov    rbx,rcx
   140009129:	xor    ecx,ecx
   14000912b:	call   QWORD PTR [rip+0x117f]        # 0x14000a2b0
   140009131:	mov    rcx,rbx
   140009134:	call   QWORD PTR [rip+0x116e]        # 0x14000a2a8
   14000913a:	call   QWORD PTR [rip+0x1208]        # 0x14000a348
   140009140:	mov    rcx,rax
   140009143:	mov    edx,0xc0000409
   140009148:	add    rsp,0x20
   14000914c:	pop    rbx
   14000914d:	rex.W jmp QWORD PTR [rip+0x1214]        # 0x14000a368
   140009154:	int3   
   140009155:	int3   
   140009156:	int3   
   140009157:	int3   
   140009158:	int3   
   140009159:	int3   
   14000915a:	int3   
   14000915b:	int3   
   14000915c:	int3   
   14000915d:	int3   
   14000915e:	int3   
   14000915f:	int3   
   140009160:	mov    QWORD PTR [rsp+0x8],rcx
   140009165:	sub    rsp,0x88
   14000916c:	lea    rcx,[rip+0x50ed]        # 0x14000e260
   140009173:	call   QWORD PTR [rip+0x1427]        # 0x14000a5a0
   140009179:	mov    rax,QWORD PTR [rip+0x51d8]        # 0x14000e358
   140009180:	mov    QWORD PTR [rsp+0x48],rax
   140009185:	xor    r8d,r8d
   140009188:	lea    rdx,[rsp+0x50]
   14000918d:	mov    rcx,QWORD PTR [rsp+0x48]
   140009192:	call   QWORD PTR [rip+0x1410]        # 0x14000a5a8
   140009198:	mov    QWORD PTR [rsp+0x40],rax
   14000919d:	cmp    QWORD PTR [rsp+0x40],0x0
   1400091a3:	je     0x1400091e7
   1400091a5:	mov    QWORD PTR [rsp+0x38],0x0
   1400091ae:	lea    rax,[rsp+0x58]
   1400091b3:	mov    QWORD PTR [rsp+0x30],rax
   1400091b8:	lea    rax,[rsp+0x60]
   1400091bd:	mov    QWORD PTR [rsp+0x28],rax
   1400091c2:	lea    rax,[rip+0x5097]        # 0x14000e260
   1400091c9:	mov    QWORD PTR [rsp+0x20],rax
   1400091ce:	mov    r9,QWORD PTR [rsp+0x40]
   1400091d3:	mov    r8,QWORD PTR [rsp+0x48]
   1400091d8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400091dd:	xor    ecx,ecx
   1400091df:	call   QWORD PTR [rip+0x13cb]        # 0x14000a5b0
   1400091e5:	jmp    0x14000920a
   1400091e7:	mov    rax,QWORD PTR [rip+0x510a]        # 0x14000e2f8
   1400091ee:	mov    rax,QWORD PTR [rax]
   1400091f1:	mov    QWORD PTR [rip+0x5160],rax        # 0x14000e358
   1400091f8:	mov    rax,QWORD PTR [rip+0x50f9]        # 0x14000e2f8
   1400091ff:	add    rax,0x8
   140009203:	mov    QWORD PTR [rip+0x50ee],rax        # 0x14000e2f8
   14000920a:	mov    rax,QWORD PTR [rip+0x5147]        # 0x14000e358
   140009211:	mov    QWORD PTR [rip+0x4fb8],rax        # 0x14000e1d0
   140009218:	mov    rax,QWORD PTR [rsp+0x90]
   140009220:	mov    QWORD PTR [rip+0x50b9],rax        # 0x14000e2e0
   140009227:	mov    DWORD PTR [rip+0x4f8f],0xc0000409        # 0x14000e1c0
   140009231:	mov    DWORD PTR [rip+0x4f89],0x1        # 0x14000e1c4
   14000923b:	mov    DWORD PTR [rip+0x4f93],0x3        # 0x14000e1d8
   140009245:	mov    eax,0x8
   14000924a:	imul   rax,rax,0x0
   14000924e:	lea    rcx,[rip+0x4f8b]        # 0x14000e1e0
   140009255:	mov    QWORD PTR [rcx+rax*1],0x2
   14000925d:	mov    eax,0x8
   140009262:	imul   rax,rax,0x1
   140009266:	lea    rcx,[rip+0x4f73]        # 0x14000e1e0
   14000926d:	mov    rdx,QWORD PTR [rip+0x4d94]        # 0x14000e008
   140009274:	mov    QWORD PTR [rcx+rax*1],rdx
   140009278:	mov    eax,0x8
   14000927d:	imul   rax,rax,0x2
   140009281:	lea    rcx,[rip+0x4f58]        # 0x14000e1e0
   140009288:	mov    rdx,QWORD PTR [rip+0x4d81]        # 0x14000e010
   14000928f:	mov    QWORD PTR [rcx+rax*1],rdx
   140009293:	mov    eax,0x8
   140009298:	imul   rax,rax,0x0
   14000929c:	mov    rcx,QWORD PTR [rip+0x4d65]        # 0x14000e008
   1400092a3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400092a8:	mov    eax,0x8
   1400092ad:	imul   rax,rax,0x1
   1400092b1:	mov    rcx,QWORD PTR [rip+0x4d58]        # 0x14000e010
   1400092b8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400092bd:	lea    rcx,[rip+0x13cc]        # 0x14000a690
   1400092c4:	call   0x140009120
   1400092c9:	add    rsp,0x88
   1400092d0:	ret    
   1400092d1:	int3   
   1400092d2:	int3   
   1400092d3:	int3   
   1400092d4:	int3   
   1400092d5:	int3   
   1400092d6:	int3   
   1400092d7:	int3   
   1400092d8:	jmp    QWORD PTR [rip+0x123a]        # 0x14000a518
   1400092de:	int3   
   1400092df:	int3   
   1400092e0:	int3   
   1400092e1:	int3   
   1400092e2:	int3   
   1400092e3:	int3   
   1400092e4:	int3   
   1400092e5:	int3   
   1400092e6:	int3   
   1400092e7:	int3   
   1400092e8:	int3   
   1400092e9:	int3   
   1400092ea:	int3   
   1400092eb:	int3   
   1400092ec:	int3   
   1400092ed:	int3   
   1400092ee:	int3   
   1400092ef:	int3   
   1400092f0:	sub    rsp,0x28
   1400092f4:	mov    rax,QWORD PTR [rcx]
   1400092f7:	cmp    DWORD PTR [rax],0xe06d7363
   1400092fd:	jne    0x140009322
   1400092ff:	cmp    DWORD PTR [rax+0x18],0x4
   140009303:	jne    0x140009322
   140009305:	mov    ecx,DWORD PTR [rax+0x20]
   140009308:	lea    eax,[rcx-0x19930520]
   14000930e:	cmp    eax,0x2
   140009311:	jbe    0x14000931b
   140009313:	cmp    ecx,0x1994000
   140009319:	jne    0x140009322
   14000931b:	call   QWORD PTR [rip+0x114f]        # 0x14000a470
   140009321:	int3   
   140009322:	xor    eax,eax
   140009324:	add    rsp,0x28
   140009328:	ret    
   140009329:	int3   
   14000932a:	int3   
   14000932b:	int3   
   14000932c:	int3   
   14000932d:	int3   
   14000932e:	int3   
   14000932f:	int3   
   140009330:	sub    rsp,0x28
   140009334:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400092f0
   14000933b:	call   QWORD PTR [rip+0xf6f]        # 0x14000a2b0
   140009341:	xor    eax,eax
   140009343:	add    rsp,0x28
   140009347:	ret    
   140009348:	int3   
   140009349:	int3   
   14000934a:	int3   
   14000934b:	int3   
   14000934c:	int3   
   14000934d:	int3   
   14000934e:	jmp    QWORD PTR [rip+0x11bc]        # 0x14000a510
   140009354:	int3   
   140009355:	int3   
   140009356:	int3   
   140009357:	int3   
   140009358:	int3   
   140009359:	int3   
   14000935a:	int3   
   14000935b:	int3   
   14000935c:	sub    rsp,0x18
   140009360:	xor    edx,edx
   140009362:	lea    rax,[rcx-0x1]
   140009366:	cmp    rax,0xfffffffffffffffd
   14000936a:	ja     0x1400093a8
   14000936c:	mov    eax,0x5a4d
   140009371:	cmp    WORD PTR [rcx],ax
   140009374:	jne    0x1400093a0
   140009376:	cmp    DWORD PTR [rcx+0x3c],edx
   140009379:	jl     0x1400093a0
   14000937b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140009382:	jae    0x1400093a0
   140009384:	movsxd rax,DWORD PTR [rcx+0x3c]
   140009388:	add    rax,rcx
   14000938b:	mov    QWORD PTR [rsp],rax
   14000938f:	cmp    DWORD PTR [rax],0x4550
   140009395:	cmovne rax,rdx
   140009399:	mov    rdx,rax
   14000939c:	mov    QWORD PTR [rsp],rax
   1400093a0:	jmp    0x1400093a8
   1400093a2:	xor    edx,edx
   1400093a4:	mov    QWORD PTR [rsp],rdx
   1400093a8:	mov    rax,rdx
   1400093ab:	add    rsp,0x18
   1400093af:	ret    
   1400093b0:	int3   
   1400093b1:	int3   
   1400093b2:	int3   
   1400093b3:	int3   
   1400093b4:	int3   
   1400093b5:	int3   
   1400093b6:	int3   
   1400093b7:	int3   
   1400093b8:	rex push rbx
   1400093ba:	sub    rsp,0x20
   1400093be:	mov    ebx,ecx
   1400093c0:	xor    ecx,ecx
   1400093c2:	call   QWORD PTR [rip+0xf50]        # 0x14000a318
   1400093c8:	test   rax,rax
   1400093cb:	je     0x1400093f5
   1400093cd:	mov    rcx,rax
   1400093d0:	call   0x14000935c
   1400093d5:	test   rax,rax
   1400093d8:	je     0x1400093f5
   1400093da:	mov    ecx,0x2
   1400093df:	cmp    WORD PTR [rax+0x5c],cx
   1400093e3:	jne    0x1400093e9
   1400093e5:	mov    eax,ecx
   1400093e7:	jmp    0x1400093f7
   1400093e9:	cmp    WORD PTR [rax+0x5c],0x3
   1400093ee:	mov    eax,0x1
   1400093f3:	je     0x1400093f7
   1400093f5:	mov    eax,ebx
   1400093f7:	add    rsp,0x20
   1400093fb:	pop    rbx
   1400093fc:	ret    
   1400093fd:	int3   
   1400093fe:	int3   
   1400093ff:	int3   
   140009400:	int3   
   140009401:	int3   
   140009402:	int3   
   140009403:	int3   
   140009404:	jmp    QWORD PTR [rip+0x10e6]        # 0x14000a4f0
   14000940a:	int3   
   14000940b:	int3   
   14000940c:	int3   
   14000940d:	int3   
   14000940e:	int3   
   14000940f:	int3   
   140009410:	movsxd r8,DWORD PTR [rcx+0x3c]
   140009414:	xor    r9d,r9d
   140009417:	add    r8,rcx
   14000941a:	mov    r10,rdx
   14000941d:	movzx  eax,WORD PTR [r8+0x14]
   140009422:	movzx  r11d,WORD PTR [r8+0x6]
   140009427:	add    rax,0x18
   14000942b:	add    rax,r8
   14000942e:	test   r11d,r11d
   140009431:	je     0x140009451
   140009433:	mov    edx,DWORD PTR [rax+0xc]
   140009436:	cmp    r10,rdx
   140009439:	jb     0x140009445
   14000943b:	mov    ecx,DWORD PTR [rax+0x8]
   14000943e:	add    ecx,edx
   140009440:	cmp    r10,rcx
   140009443:	jb     0x140009453
   140009445:	inc    r9d
   140009448:	add    rax,0x28
   14000944c:	cmp    r9d,r11d
   14000944f:	jb     0x140009433
   140009451:	xor    eax,eax
   140009453:	ret    
   140009454:	int3   
   140009455:	int3   
   140009456:	int3   
   140009457:	int3   
   140009458:	int3   
   140009459:	int3   
   14000945a:	int3   
   14000945b:	int3   
   14000945c:	int3   
   14000945d:	int3   
   14000945e:	int3   
   14000945f:	int3   
   140009460:	mov    QWORD PTR [rsp+0x8],rbx
   140009465:	push   rdi
   140009466:	sub    rsp,0x20
   14000946a:	mov    rbx,rcx
   14000946d:	lea    rdi,[rip+0xffffffffffff6b8c]        # 0x140000000
   140009474:	mov    rcx,rdi
   140009477:	call   0x1400094c0
   14000947c:	test   eax,eax
   14000947e:	je     0x1400094a2
   140009480:	sub    rbx,rdi
   140009483:	mov    rdx,rbx
   140009486:	mov    rcx,rdi
   140009489:	call   0x140009410
   14000948e:	test   rax,rax
   140009491:	je     0x1400094a2
   140009493:	mov    eax,DWORD PTR [rax+0x24]
   140009496:	shr    eax,0x1f
   140009499:	not    eax
   14000949b:	and    eax,0x1
   14000949e:	jmp    0x1400094a2
   1400094a0:	xor    eax,eax
   1400094a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094a7:	add    rsp,0x20
   1400094ab:	pop    rdi
   1400094ac:	ret    
   1400094ad:	int3   
   1400094ae:	int3   
   1400094af:	int3   
   1400094b0:	int3   
   1400094b1:	int3   
   1400094b2:	int3   
   1400094b3:	int3   
   1400094b4:	int3   
   1400094b5:	int3   
   1400094b6:	int3   
   1400094b7:	int3   
   1400094b8:	int3   
   1400094b9:	int3   
   1400094ba:	int3   
   1400094bb:	int3   
   1400094bc:	int3   
   1400094bd:	int3   
   1400094be:	int3   
   1400094bf:	int3   
   1400094c0:	mov    rax,rcx
   1400094c3:	mov    ecx,0x5a4d
   1400094c8:	cmp    WORD PTR [rax],cx
   1400094cb:	je     0x1400094d0
   1400094cd:	xor    eax,eax
   1400094cf:	ret    
   1400094d0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400094d4:	add    rcx,rax
   1400094d7:	xor    eax,eax
   1400094d9:	cmp    DWORD PTR [rcx],0x4550
   1400094df:	jne    0x1400094ed
   1400094e1:	mov    edx,0x20b
   1400094e6:	cmp    WORD PTR [rcx+0x18],dx
   1400094ea:	sete   al
   1400094ed:	ret    
   1400094ee:	int3   
   1400094ef:	int3   
   1400094f0:	int3   
   1400094f1:	int3   
   1400094f2:	int3   
   1400094f3:	int3   
   1400094f4:	mov    QWORD PTR [rsp+0x20],rbx
   1400094f9:	push   rbp
   1400094fa:	mov    rbp,rsp
   1400094fd:	sub    rsp,0x20
   140009501:	and    QWORD PTR [rbp+0x18],0x0
   140009506:	movabs rbx,0x2b992ddfa232
   140009510:	mov    rax,QWORD PTR [rip+0x4af1]        # 0x14000e008
   140009517:	cmp    rax,rbx
   14000951a:	jne    0x1400095af
   140009520:	lea    rcx,[rbp+0x18]
   140009524:	call   QWORD PTR [rip+0xeee]        # 0x14000a418
   14000952a:	mov    rax,QWORD PTR [rbp+0x18]
   14000952e:	mov    QWORD PTR [rbp+0x10],rax
   140009532:	call   QWORD PTR [rip+0xe38]        # 0x14000a370
   140009538:	mov    eax,eax
   14000953a:	xor    QWORD PTR [rbp+0x10],rax
   14000953e:	call   QWORD PTR [rip+0xe0c]        # 0x14000a350
   140009544:	mov    eax,eax
   140009546:	xor    QWORD PTR [rbp+0x10],rax
   14000954a:	call   QWORD PTR [rip+0xec0]        # 0x14000a410
   140009550:	mov    eax,eax
   140009552:	shl    rax,0x18
   140009556:	xor    QWORD PTR [rbp+0x10],rax
   14000955a:	call   QWORD PTR [rip+0xeb0]        # 0x14000a410
   140009560:	mov    eax,eax
   140009562:	lea    rcx,[rbp+0x10]
   140009566:	xor    rax,QWORD PTR [rbp+0x10]
   14000956a:	xor    rax,rcx
   14000956d:	lea    rcx,[rbp+0x20]
   140009571:	mov    QWORD PTR [rbp+0x10],rax
   140009575:	call   QWORD PTR [rip+0xe0d]        # 0x14000a388
   14000957b:	mov    eax,DWORD PTR [rbp+0x20]
   14000957e:	movabs rcx,0xffffffffffff
   140009588:	shl    rax,0x20
   14000958c:	xor    rax,QWORD PTR [rbp+0x20]
   140009590:	xor    rax,QWORD PTR [rbp+0x10]
   140009594:	and    rax,rcx
   140009597:	movabs rcx,0x2b992ddfa233
   1400095a1:	cmp    rax,rbx
   1400095a4:	cmove  rax,rcx
   1400095a8:	mov    QWORD PTR [rip+0x4a59],rax        # 0x14000e008
   1400095af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400095b4:	not    rax
   1400095b7:	mov    QWORD PTR [rip+0x4a52],rax        # 0x14000e010
   1400095be:	add    rsp,0x20
   1400095c2:	pop    rbp
   1400095c3:	ret    
   1400095c4:	int3   
   1400095c5:	int3   
   1400095c6:	int3   
   1400095c7:	int3   
   1400095c8:	int3   
   1400095c9:	int3   
   1400095ca:	int3   
   1400095cb:	int3   
   1400095cc:	int3   
   1400095cd:	int3   
   1400095ce:	int3   
   1400095cf:	int3   
   1400095d0:	xor    eax,eax
   1400095d2:	ret    
   1400095d3:	int3   
   1400095d4:	int3   
   1400095d5:	int3   
   1400095d6:	int3   
   1400095d7:	int3   
   1400095d8:	int3   
   1400095d9:	int3   
   1400095da:	jmp    QWORD PTR [rip+0xed8]        # 0x14000a4b8
   1400095e0:	int3   
   1400095e1:	int3   
   1400095e2:	int3   
   1400095e3:	int3   
   1400095e4:	int3   
   1400095e5:	int3   
   1400095e6:	jmp    QWORD PTR [rip+0xec4]        # 0x14000a4b0
   1400095ec:	int3   
   1400095ed:	int3   
   1400095ee:	int3   
   1400095ef:	int3   
   1400095f0:	int3   
   1400095f1:	int3   
   1400095f2:	int3   
   1400095f3:	int3   
   1400095f4:	int3   
   1400095f5:	int3   
   1400095f6:	int3   
   1400095f7:	int3   
   1400095f8:	int3   
   1400095f9:	int3   
   1400095fa:	int3   
   1400095fb:	int3   
   1400095fc:	int3   
   1400095fd:	int3   
   1400095fe:	int3   
   1400095ff:	int3   
   140009600:	ret    0x0
   140009603:	int3   
   140009604:	int3   
   140009605:	int3   
   140009606:	int3   
   140009607:	int3   
   140009608:	int3   
   140009609:	int3   
   14000960a:	jmp    QWORD PTR [rip+0xe80]        # 0x14000a490
   140009610:	int3   
   140009611:	int3   
   140009612:	int3   
   140009613:	int3   
   140009614:	int3   
   140009615:	int3   
   140009616:	jmp    QWORD PTR [rip+0xe6c]        # 0x14000a488
   14000961c:	int3   
   14000961d:	int3   
   14000961e:	int3   
   14000961f:	int3   
   140009620:	int3   
   140009621:	int3   
   140009622:	jmp    QWORD PTR [rip+0xe58]        # 0x14000a480
   140009628:	int3   
   140009629:	int3   
   14000962a:	int3   
   14000962b:	int3   
   14000962c:	int3   
   14000962d:	int3   
   14000962e:	int3   
   14000962f:	int3   
   140009630:	int3   
   140009631:	int3   
   140009632:	int3   
   140009633:	int3   
   140009634:	int3   
   140009635:	int3   
   140009636:	int3   
   140009637:	int3   
   140009638:	int3   
   140009639:	int3   
   14000963a:	int3   
   14000963b:	int3   
   14000963c:	int3   
   14000963d:	int3   
   14000963e:	int3   
   14000963f:	int3   
   140009640:	lea    rax,[rip+0x89f9]        # 0x140012040
   140009647:	jmp    0x140009660
   14000964c:	int3   
   14000964d:	int3   
   14000964e:	int3   
   14000964f:	int3   
   140009650:	int3   
   140009651:	int3   
   140009652:	int3   
   140009653:	int3   
   140009654:	int3   
   140009655:	int3   
   140009656:	int3   
   140009657:	int3   
   140009658:	int3   
   140009659:	int3   
   14000965a:	int3   
   14000965b:	int3   
   14000965c:	int3   
   14000965d:	int3   
   14000965e:	int3   
   14000965f:	int3   
   140009660:	mov    QWORD PTR [rsp+0x8],rcx
   140009665:	mov    QWORD PTR [rsp+0x10],rdx
   14000966a:	mov    QWORD PTR [rsp+0x18],r8
   14000966f:	mov    QWORD PTR [rsp+0x20],r9
   140009674:	sub    rsp,0x68
   140009678:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000967e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140009684:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000968a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140009690:	mov    rdx,rax
   140009693:	lea    rcx,[rip+0x2672]        # 0x14000bd0c
   14000969a:	call   0x140008ba0
   14000969f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400096a5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400096ab:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400096b1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400096b7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400096bc:	mov    rdx,QWORD PTR [rsp+0x78]
   1400096c1:	mov    r8,QWORD PTR [rsp+0x80]
   1400096c9:	mov    r9,QWORD PTR [rsp+0x88]
   1400096d1:	add    rsp,0x68
   1400096d5:	jmp    0x1400096d7
   1400096d7:	jmp    rax
   1400096d9:	int3   
   1400096da:	int3   
   1400096db:	int3   
   1400096dc:	int3   
   1400096dd:	int3   
   1400096de:	int3   
   1400096df:	int3   
   1400096e0:	lea    rax,[rip+0x8941]        # 0x140012028
   1400096e7:	jmp    0x140009700
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	int3   
   1400096f1:	int3   
   1400096f2:	int3   
   1400096f3:	int3   
   1400096f4:	int3   
   1400096f5:	int3   
   1400096f6:	int3   
   1400096f7:	int3   
   1400096f8:	int3   
   1400096f9:	int3   
   1400096fa:	int3   
   1400096fb:	int3   
   1400096fc:	int3   
   1400096fd:	int3   
   1400096fe:	int3   
   1400096ff:	int3   
   140009700:	mov    QWORD PTR [rsp+0x8],rcx
   140009705:	mov    QWORD PTR [rsp+0x10],rdx
   14000970a:	mov    QWORD PTR [rsp+0x18],r8
   14000970f:	mov    QWORD PTR [rsp+0x20],r9
   140009714:	sub    rsp,0x68
   140009718:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000971e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140009724:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000972a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140009730:	mov    rdx,rax
   140009733:	lea    rcx,[rip+0x25f2]        # 0x14000bd2c
   14000973a:	call   0x140008ba0
   14000973f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140009745:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000974b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140009751:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140009757:	mov    rcx,QWORD PTR [rsp+0x70]
   14000975c:	mov    rdx,QWORD PTR [rsp+0x78]
   140009761:	mov    r8,QWORD PTR [rsp+0x80]
   140009769:	mov    r9,QWORD PTR [rsp+0x88]
   140009771:	add    rsp,0x68
   140009775:	jmp    0x140009777
   140009777:	jmp    rax
   140009779:	int3   
   14000977a:	int3   
   14000977b:	int3   
   14000977c:	int3   
   14000977d:	int3   
   14000977e:	int3   
   14000977f:	int3   
   140009780:	lea    rax,[rip+0x8899]        # 0x140012020
   140009787:	jmp    0x140009700
   14000978c:	int3   
   14000978d:	int3   
   14000978e:	int3   
   14000978f:	int3   
   140009790:	int3   
   140009791:	int3   
   140009792:	int3   
   140009793:	int3   
   140009794:	int3   
   140009795:	int3   
   140009796:	int3   
   140009797:	int3   
   140009798:	int3   
   140009799:	int3   
   14000979a:	int3   
   14000979b:	int3   
   14000979c:	int3   
   14000979d:	int3   
   14000979e:	int3   
   14000979f:	int3   
   1400097a0:	lea    rax,[rip+0x8869]        # 0x140012010
   1400097a7:	jmp    0x140009700
   1400097ac:	int3   
   1400097ad:	int3   
   1400097ae:	int3   
   1400097af:	int3   
   1400097b0:	int3   
   1400097b1:	int3   
   1400097b2:	int3   
   1400097b3:	int3   
   1400097b4:	int3   
   1400097b5:	int3   
   1400097b6:	int3   
   1400097b7:	int3   
   1400097b8:	int3   
   1400097b9:	int3   
   1400097ba:	int3   
   1400097bb:	int3   
   1400097bc:	int3   
   1400097bd:	int3   
   1400097be:	int3   
   1400097bf:	int3   
   1400097c0:	lea    rax,[rip+0x8869]        # 0x140012030
   1400097c7:	jmp    0x140009700
   1400097cc:	int3   
   1400097cd:	int3   
   1400097ce:	int3   
   1400097cf:	int3   
   1400097d0:	int3   
   1400097d1:	int3   
   1400097d2:	int3   
   1400097d3:	int3   
   1400097d4:	int3   
   1400097d5:	int3   
   1400097d6:	int3   
   1400097d7:	int3   
   1400097d8:	int3   
   1400097d9:	int3   
   1400097da:	int3   
   1400097db:	int3   
   1400097dc:	int3   
   1400097dd:	int3   
   1400097de:	int3   
   1400097df:	int3   
   1400097e0:	lea    rax,[rip+0x8831]        # 0x140012018
   1400097e7:	jmp    0x140009700
   1400097ec:	int3   
   1400097ed:	int3   
   1400097ee:	int3   
   1400097ef:	int3   
   1400097f0:	int3   
   1400097f1:	int3   
   1400097f2:	int3   
   1400097f3:	int3   
   1400097f4:	int3   
   1400097f5:	int3   
   1400097f6:	int3   
   1400097f7:	int3   
   1400097f8:	int3   
   1400097f9:	int3   
   1400097fa:	int3   
   1400097fb:	int3   
   1400097fc:	int3   
   1400097fd:	int3   
   1400097fe:	int3   
   1400097ff:	int3   
   140009800:	lea    rax,[rip+0x87f9]        # 0x140012000
   140009807:	jmp    0x140009820
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	int3   
   140009811:	int3   
   140009812:	int3   
   140009813:	int3   
   140009814:	int3   
   140009815:	int3   
   140009816:	int3   
   140009817:	int3   
   140009818:	int3   
   140009819:	int3   
   14000981a:	int3   
   14000981b:	int3   
   14000981c:	int3   
   14000981d:	int3   
   14000981e:	int3   
   14000981f:	int3   
   140009820:	mov    QWORD PTR [rsp+0x8],rcx
   140009825:	mov    QWORD PTR [rsp+0x10],rdx
   14000982a:	mov    QWORD PTR [rsp+0x18],r8
   14000982f:	mov    QWORD PTR [rsp+0x20],r9
   140009834:	sub    rsp,0x68
   140009838:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000983e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140009844:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000984a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140009850:	mov    rdx,rax
   140009853:	lea    rcx,[rip+0x24f2]        # 0x14000bd4c
   14000985a:	call   0x140008ba0
   14000985f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140009865:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000986b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140009871:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140009877:	mov    rcx,QWORD PTR [rsp+0x70]
   14000987c:	mov    rdx,QWORD PTR [rsp+0x78]
   140009881:	mov    r8,QWORD PTR [rsp+0x80]
   140009889:	mov    r9,QWORD PTR [rsp+0x88]
   140009891:	add    rsp,0x68
   140009895:	jmp    0x140009897
   140009897:	jmp    rax
   140009899:	int3   
   14000989a:	int3   
   14000989b:	int3   
   14000989c:	int3   
   14000989d:	int3   
   14000989e:	int3   
   14000989f:	int3   
   1400098a0:	jmp    QWORD PTR [rip+0x7fa]        # 0x14000a0a0
   1400098a6:	int3   
   1400098a7:	int3   
   1400098a8:	int3   
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	jmp    QWORD PTR [rip+0xc46]        # 0x14000a4f8
   1400098b2:	int3   
   1400098b3:	int3   
   1400098b4:	int3   
   1400098b5:	int3   
   1400098b6:	int3   
   1400098b7:	int3   
   1400098b8:	sub    rsp,0x28
   1400098bc:	mov    r8,QWORD PTR [r9+0x38]
   1400098c0:	mov    rcx,rdx
   1400098c3:	mov    rdx,r9
   1400098c6:	call   0x1400098dc
   1400098cb:	mov    eax,0x1
   1400098d0:	add    rsp,0x28
   1400098d4:	ret    
   1400098d5:	int3   
   1400098d6:	int3   
   1400098d7:	int3   
   1400098d8:	int3   
   1400098d9:	int3   
   1400098da:	int3   
   1400098db:	int3   
   1400098dc:	rex push rbx
   1400098de:	sub    rsp,0x20
   1400098e2:	mov    r11d,DWORD PTR [r8]
   1400098e5:	mov    rbx,rdx
   1400098e8:	and    r11d,0xfffffff8
   1400098ec:	mov    r9,rcx
   1400098ef:	test   BYTE PTR [r8],0x4
   1400098f3:	mov    r10,rcx
   1400098f6:	je     0x14000990b
   1400098f8:	mov    eax,DWORD PTR [r8+0x8]
   1400098fc:	movsxd r10,DWORD PTR [r8+0x4]
   140009900:	neg    eax
   140009902:	add    r10,rcx
   140009905:	movsxd rcx,eax
   140009908:	and    r10,rcx
   14000990b:	movsxd rax,r11d
   14000990e:	mov    rdx,QWORD PTR [rax+r10*1]
   140009912:	mov    rax,QWORD PTR [rbx+0x10]
   140009916:	mov    ecx,DWORD PTR [rax+0x8]
   140009919:	add    rcx,QWORD PTR [rbx+0x8]
   14000991d:	test   BYTE PTR [rcx+0x3],0xf
   140009921:	je     0x14000992f
   140009923:	movzx  eax,BYTE PTR [rcx+0x3]
   140009927:	and    eax,0xfffffff0
   14000992a:	cdqe   
   14000992c:	add    r9,rax
   14000992f:	xor    r9,rdx
   140009932:	mov    rcx,r9
   140009935:	add    rsp,0x20
   140009939:	pop    rbx
   14000993a:	jmp    0x140009020
   14000993f:	int3   
   140009940:	int3   
   140009941:	int3   
   140009942:	int3   
   140009943:	int3   
   140009944:	int3   
   140009945:	int3   
   140009946:	jmp    QWORD PTR [rip+0xbb4]        # 0x14000a500
   14000994c:	int3   
   14000994d:	int3   
   14000994e:	int3   
   14000994f:	int3   
   140009950:	int3   
   140009951:	int3   
   140009952:	jmp    QWORD PTR [rip+0xc08]        # 0x14000a560
   140009958:	int3   
   140009959:	int3   
   14000995a:	int3   
   14000995b:	int3   
   14000995c:	int3   
   14000995d:	int3   
   14000995e:	int3   
   14000995f:	int3   
   140009960:	int3   
   140009961:	int3   
   140009962:	int3   
   140009963:	int3   
   140009964:	int3   
   140009965:	int3   
   140009966:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009970:	jmp    rax
   140009972:	int3   
   140009973:	int3   
   140009974:	int3   
   140009975:	int3   
   140009976:	int3   
   140009977:	int3   
   140009978:	int3   
   140009979:	int3   
   14000997a:	int3   
   14000997b:	int3   
   14000997c:	int3   
   14000997d:	int3   
   14000997e:	int3   
   14000997f:	int3   
   140009980:	int3   
   140009981:	int3   
   140009982:	int3   
   140009983:	int3   
   140009984:	int3   
   140009985:	int3   
   140009986:	lea    rcx,[rdx+0x58]
   14000998d:	jmp    0x1400087e8
   140009992:	lea    rcx,[rdx+0x48]
   140009999:	jmp    0x1400087e8
   14000999e:	int3   
   14000999f:	int3   
   1400099a0:	int3   
   1400099a1:	int3   
   1400099a2:	int3   
   1400099a3:	int3   
   1400099a4:	lea    rcx,[rdx+0x38]
   1400099ab:	jmp    0x1400087e8
   1400099b0:	int3   
   1400099b1:	int3   
   1400099b2:	int3   
   1400099b3:	int3   
   1400099b4:	int3   
   1400099b5:	int3   
   1400099b6:	lea    rcx,[rdx+0x28]
   1400099bd:	jmp    0x1400087e8
   1400099c2:	int3   
   1400099c3:	int3   
   1400099c4:	int3   
   1400099c5:	int3   
   1400099c6:	int3   
   1400099c7:	int3   
   1400099c8:	rex push rbp
   1400099ca:	sub    rsp,0x20
   1400099ce:	mov    rbp,rdx
   1400099d1:	mov    rax,QWORD PTR [rcx]
   1400099d4:	mov    rdx,rcx
   1400099d7:	mov    ecx,DWORD PTR [rax]
   1400099d9:	call   0x14000934e
   1400099de:	nop
   1400099df:	add    rsp,0x20
   1400099e3:	pop    rbp
   1400099e4:	ret    
   1400099e5:	int3   
   1400099e6:	int3   
   1400099e7:	int3   
   1400099e8:	int3   
   1400099e9:	int3   
   1400099ea:	int3   
   1400099eb:	int3   
   1400099ec:	rex push rbp
   1400099ee:	sub    rsp,0x20
   1400099f2:	mov    rbp,rdx
   1400099f5:	mov    ecx,0x8
   1400099fa:	call   0x140009616
   1400099ff:	nop
   140009a00:	add    rsp,0x20
   140009a04:	pop    rbp
   140009a05:	ret    
   140009a06:	int3   
   140009a07:	int3   
   140009a08:	int3   
   140009a09:	int3   
   140009a0a:	int3   
   140009a0b:	int3   
   140009a0c:	int3   
   140009a0d:	int3   
   140009a0e:	int3   
   140009a0f:	int3   
   140009a10:	rex push rbp
   140009a12:	sub    rsp,0x20
   140009a16:	mov    rbp,rdx
   140009a19:	mov    rax,QWORD PTR [rcx]
   140009a1c:	xor    ecx,ecx
   140009a1e:	cmp    DWORD PTR [rax],0xc0000005
   140009a24:	sete   cl
   140009a27:	mov    eax,ecx
   140009a29:	add    rsp,0x20
   140009a2d:	pop    rbp
   140009a2e:	ret    
   140009a2f:	int3   
   140009a30:	int3   
   140009a31:	int3   
   140009a32:	int3   
   140009a33:	int3   
   140009a34:	int3   
   140009a35:	int3   
   140009a36:	int3   
   140009a37:	int3   
   140009a38:	int3   
   140009a39:	int3   
   140009a3a:	int3   
   140009a3b:	int3   
   140009a3c:	int3   
   140009a3d:	int3   
   140009a3e:	int3   
   140009a3f:	int3   
   140009a40:	sub    rsp,0x28
   140009a44:	mov    rcx,QWORD PTR [rip+0x55d5]        # 0x14000f020
   140009a4b:	test   rcx,rcx
   140009a4e:	je     0x140009a55
   140009a50:	call   0x140008be4
   140009a55:	add    rsp,0x28
   140009a59:	ret    

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	add    dh,0x0
   14000a003:	add    BYTE PTR [rax],al
   14000a005:	add    BYTE PTR [rax],al
   14000a007:	add    BYTE PTR [rsi+rax*8+0x0],cl
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	pushf  
   14000a011:	mov    BYTE PTR [rax],0x0
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	lods   al,BYTE PTR ds:[rsi]
   14000a019:	mov    BYTE PTR [rax],0x0
   14000a01c:	add    BYTE PTR [rax],al
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	mov    eax,0xc6
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	add    dh,al
   14000a029:	mov    BYTE PTR [rax],0x0
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	fadd   st(6),st
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	in     al,dx
   14000a039:	mov    BYTE PTR [rax],0x0
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	test   dh,0x0
   14000a043:	add    BYTE PTR [rax],al
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    BYTE PTR [rdx],al
   14000a049:	mov    DWORD PTR [rax],0x0
	...
   14000a057:	add    dl,cl
   14000a059:	rol    DWORD PTR [rax],1
   14000a05b:	add    BYTE PTR [rax],al
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    BYTE PTR [rax+0xd1],bh
   14000a065:	add    BYTE PTR [rax],al
   14000a067:	add    BYTE PTR [rax+0xd1],ch
	...
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    dh,ch
   14000a079:	rol    DWORD PTR [rax],1
	...
   14000a087:	add    BYTE PTR [rbx+rdx*8+0x0],dh
   14000a08b:	add    BYTE PTR [rax],al
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rax-0x2d],dl
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	add    BYTE PTR [rax],al
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	push   0xd3
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    dh,dl
   14000a0a1:	rol    DWORD PTR [rax],cl
   14000a0a3:	add    BYTE PTR [rax],al
   14000a0a5:	add    BYTE PTR [rax],al
   14000a0a7:	add    BYTE PTR [rsi+0xd3],bh
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    BYTE PTR [rdx],dh
   14000a0b1:	rol    DWORD PTR [rax],cl
   14000a0b3:	add    BYTE PTR [rax],al
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    BYTE PTR [rbx+rdx*8+0x0],bl
	...
   14000a0c7:	add    BYTE PTR [rax-0x2e],cl
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	push   0xd2
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    BYTE PTR [rdx+rdx*8+0x0],dl
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	mov    esi,0xd2
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rdx],cl
   14000a0e9:	rol    DWORD PTR [rax],cl
   14000a0eb:	add    BYTE PTR [rax],al
   14000a0ed:	add    BYTE PTR [rax],al
   14000a0ef:	add    dh,ch
   14000a0f1:	rol    BYTE PTR [rax],cl
	...
   14000a0ff:	add    BYTE PTR [rsi],ah
   14000a101:	rol    BYTE PTR [rax],cl
   14000a103:	add    BYTE PTR [rax],al
   14000a105:	add    BYTE PTR [rax],al
   14000a107:	add    BYTE PTR [rsi],dl
   14000a109:	rol    BYTE PTR [rax],cl
	...
   14000a117:	add    BYTE PTR [rax+rcx*8+0x0],bl
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	cmp    al,bh
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rax],al
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	rex.WR mov QWORD PTR [rax],0x0
   14000a12f:	add    BYTE PTR [rsi-0x39],bl
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	jo     0x14000a101
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	add    bh,0x0
   14000a143:	add    BYTE PTR [rax],al
   14000a145:	add    BYTE PTR [rax],al
   14000a147:	add    BYTE PTR [rdi+rax*8+0x0],dl
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	movabs ds:0xb4000000000000c7,al
   14000a159:	mov    DWORD PTR [rax],0x0
   14000a15f:	add    BYTE PTR [rdi+rax*8],ch
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	add    BYTE PTR [rax],al
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	sbb    bh,al
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rax],al
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	rex.WRX retf 0x0
   14000a174:	add    BYTE PTR [rax],al
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	sbb    al,0xca
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	dec    cl
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	add    BYTE PTR [rax],al
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	(bad)  
   14000a189:	leave  
   14000a18a:	add    BYTE PTR [rax],al
   14000a18c:	add    BYTE PTR [rax],al
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	ror    cl,1
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	add    BYTE PTR [rax],al
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	(bad)  
   14000a199:	leave  
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	mov    dl,0xc9
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	add    BYTE PTR [rax],al
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	movabs ds:0x8c000000000000c9,al
   14000a1b1:	leave  
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	jle    0x14000a183
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	add    BYTE PTR [rax],al
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	ins    BYTE PTR es:[rdi],dx
   14000a1c1:	leave  
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	add    BYTE PTR [rax],al
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	mov    cs,eax
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	add    BYTE PTR [rax],al
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	jp     0x14000a19a
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	add    BYTE PTR [rax],al
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	outs   dx,BYTE PTR ds:[rsi]
   14000a1d9:	enter  0x0,0x0
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    BYTE PTR [rax+rcx*8+0x0],bl
   14000a1e3:	add    BYTE PTR [rax],al
   14000a1e5:	add    BYTE PTR [rax],al
   14000a1e7:	add    BYTE PTR [rax-0x38],dl
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	add    BYTE PTR [rax],al
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	xor    al,0xc8
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	add    BYTE PTR [rax],al
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	es enter 0x0,0x0
   14000a1fd:	add    BYTE PTR [rax],al
   14000a1ff:	add    BYTE PTR [rax],bl
   14000a201:	enter  0x0,0x0
   14000a205:	add    BYTE PTR [rax],al
   14000a207:	add    BYTE PTR [rdx],cl
   14000a209:	enter  0x0,0x0
   14000a20d:	add    BYTE PTR [rax],al
   14000a20f:	add    dh,dh
   14000a211:	mov    DWORD PTR [rax],0x0
   14000a217:	add    al,bl
   14000a219:	mov    DWORD PTR [rax],0x0
   14000a21f:	add    al,cl
   14000a221:	mov    DWORD PTR [rax],0x0
   14000a227:	add    BYTE PTR [rax-0x37],bl
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	cmp    al,0xc9
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	sub    cl,cl
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	sbb    cl,cl
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	add    BYTE PTR [rax],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	or     al,0xc9
   14000a24a:	add    BYTE PTR [rax],al
   14000a24c:	add    BYTE PTR [rax],al
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	dec    al
   14000a252:	add    BYTE PTR [rax],al
   14000a254:	add    BYTE PTR [rax],al
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	xor    al,0xca
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	add    BYTE PTR [rax],al
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	jrcxz  0x14000a26b
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	add    BYTE PTR [rax],al
   14000a266:	add    BYTE PTR [rax+0xc8f0],al
   14000a26c:	add    BYTE PTR [rax],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	(bad)  
   14000a271:	enter  0x0,0x0
   14000a275:	add    BYTE PTR [rax],al
   14000a277:	add    dh,al
   14000a279:	enter  0x0,0x0
   14000a27d:	add    BYTE PTR [rax],al
   14000a27f:	add    BYTE PTR [rax+0xc8],bh
   14000a285:	add    BYTE PTR [rax],al
   14000a287:	add    BYTE PTR [rsi+0xd3],dl
   14000a28d:	add    BYTE PTR [rax],al
   14000a28f:	add    BYTE PTR [rax+0xc8],dh
	...
   14000a29d:	add    BYTE PTR [rax],al
   14000a29f:	add    dh,bh
   14000a2a1:	int3   
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    BYTE PTR [rax],al
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	(bad)  
   14000a2a9:	int    0x0
   14000a2ab:	add    BYTE PTR [rax],al
   14000a2ad:	add    BYTE PTR [rax],al
   14000a2af:	add    BYTE PTR [rdx],ch
   14000a2b1:	int    0x0
	...
   14000a2bf:	add    BYTE PTR [rdx-0x33],dh
	...
   14000a2ce:	add    BYTE PTR [rax],al
   14000a2d0:	test   al,0xcd
	...
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	add    cl,dh
   14000a2e2:	add    BYTE PTR [rax],al
   14000a2e4:	add    BYTE PTR [rax],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	fmul   st,st(5)
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	add    BYTE PTR [rax],al
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	in     al,0xcd
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    BYTE PTR [rax],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	lock int 0x0
	...
   14000a307:	add    BYTE PTR [rax],bh
   14000a309:	(bad)  
	...
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	js     0x14000a2e8
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	add    BYTE PTR [rax],al
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	(bad)  
   14000a321:	(bad)  
	...
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	mov    cs,edi
	...
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	(bad)  
   14000a341:	iret   
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	add    BYTE PTR [rax],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	loop   0x14000a319
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	add    BYTE PTR [rax],al
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	test   bh,0x0
   14000a353:	add    BYTE PTR [rax],al
   14000a355:	add    BYTE PTR [rax],al
   14000a357:	add    BYTE PTR [rax+rdx*8],cl
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	add    BYTE PTR [rax],al
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	sbb    al,0xd0
   14000a362:	add    BYTE PTR [rax],al
   14000a364:	add    BYTE PTR [rax],al
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	rol    BYTE PTR cs:[rax],1
   14000a36b:	add    BYTE PTR [rax],al
   14000a36d:	add    BYTE PTR [rax],al
   14000a36f:	add    BYTE PTR [rdx-0x30],al
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	lods   al,BYTE PTR ds:[rsi]
   14000a379:	rol    DWORD PTR [rax],cl
	...
   14000a387:	add    BYTE PTR [rdx+0xd0],al
	...
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    BYTE PTR [rsi],al
   14000a399:	iret   
   14000a39a:	add    BYTE PTR [rax],al
   14000a39c:	add    BYTE PTR [rax],al
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	(bad)  
   14000a3a1:	iret   
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	add    BYTE PTR [rax],al
   14000a3a6:	add    BYTE PTR [rax],al
   14000a3a8:	enter  0xce,0x0
   14000a3ac:	add    BYTE PTR [rax],al
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	xor    al,0xcf
   14000a3b2:	add    BYTE PTR [rax],al
   14000a3b4:	add    BYTE PTR [rax],al
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	mov    dh,0xce
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	add    BYTE PTR [rax],al
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	es iret 
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	add    BYTE PTR [rax],al
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	fmul   st(6),st
	...
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	lock (bad) 
	...
   14000a3e6:	add    BYTE PTR [rax],al
   14000a3e8:	rcl    al,1
   14000a3ea:	add    BYTE PTR [rax],al
   14000a3ec:	add    BYTE PTR [rax],al
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	out    0xd0,al
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	add    BYTE PTR [rax],al
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	not    al
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	add    BYTE PTR [rax],al
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	rcl    al,0x0
	...
   14000a40f:	add    BYTE PTR [rdx],bh
   14000a411:	rol    DWORD PTR [rax],1
   14000a413:	add    BYTE PTR [rax],al
   14000a415:	add    BYTE PTR [rax],al
   14000a417:	add    BYTE PTR [rax],ah
   14000a419:	rol    DWORD PTR [rax],1
	...
   14000a427:	add    BYTE PTR [rsi-0x2f],ch
	...
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	js     0x14000a404
   14000a43a:	add    BYTE PTR [rax],al
   14000a43c:	add    BYTE PTR [rax],al
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	outs   dx,BYTE PTR ds:[rsi]
   14000a441:	retf   0x0
   14000a444:	add    BYTE PTR [rax],al
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	mov    cs,edx
   14000a44a:	add    BYTE PTR [rax],al
   14000a44c:	add    BYTE PTR [rax],al
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	xchg   esi,eax
   14000a451:	retf   0x0
   14000a454:	add    BYTE PTR [rax],al
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	movabs ds:0xac000000000000ca,al
   14000a461:	retf   0x0
   14000a464:	add    BYTE PTR [rax],al
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	mov    dh,0xca
   14000a46a:	add    BYTE PTR [rax],al
   14000a46c:	add    BYTE PTR [rax],al
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	or     cl,ah
   14000a472:	add    BYTE PTR [rax],al
   14000a474:	add    BYTE PTR [rax],al
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	add    ah,cl
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	add    BYTE PTR [rax],al
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	repnz retf 
   14000a482:	add    BYTE PTR [rax],al
   14000a484:	add    BYTE PTR [rax],al
   14000a486:	add    BYTE PTR [rax],al
   14000a488:	call   0x14000a558
   14000a48d:	add    BYTE PTR [rax],al
   14000a48f:	add    al,ah
   14000a491:	retf   
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	add    BYTE PTR [rax],al
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	enter  0xcb,0x0
   14000a49c:	add    BYTE PTR [rax],al
   14000a49e:	add    BYTE PTR [rax],al
   14000a4a0:	mov    esi,0xcb
   14000a4a5:	add    BYTE PTR [rax],al
   14000a4a7:	add    BYTE PTR [rbx+rcx*8+0x0],dh
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	pushf  
   14000a4b1:	retf   
   14000a4b2:	add    BYTE PTR [rax],al
   14000a4b4:	add    BYTE PTR [rax],al
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	nop
   14000a4b9:	retf   
   14000a4ba:	add    BYTE PTR [rax],al
   14000a4bc:	add    BYTE PTR [rax],al
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	jl     0x14000a48d
   14000a4c2:	add    BYTE PTR [rax],al
   14000a4c4:	add    BYTE PTR [rax],al
   14000a4c6:	add    BYTE PTR [rax],al
   14000a4c8:	jb     0x14000a495
   14000a4ca:	add    BYTE PTR [rax],al
   14000a4cc:	add    BYTE PTR [rax],al
   14000a4ce:	add    BYTE PTR [rax],al
   14000a4d0:	push   0xffffffffffffffcb
   14000a4d2:	add    BYTE PTR [rax],al
   14000a4d4:	add    BYTE PTR [rax],al
   14000a4d6:	add    BYTE PTR [rax],al
   14000a4d8:	(bad)  
   14000a4d9:	retf   
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	add    BYTE PTR [rax],al
   14000a4de:	add    BYTE PTR [rax],al
   14000a4e0:	push   rax
   14000a4e1:	retf   
   14000a4e2:	add    BYTE PTR [rax],al
   14000a4e4:	add    BYTE PTR [rax],al
   14000a4e6:	add    BYTE PTR [rax],al
   14000a4e8:	ds retf 
   14000a4ea:	add    BYTE PTR [rax],al
   14000a4ec:	add    BYTE PTR [rax],al
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	xor    bl,cl
   14000a4f2:	add    BYTE PTR [rax],al
   14000a4f4:	add    BYTE PTR [rax],al
   14000a4f6:	add    BYTE PTR [rax],al
   14000a4f8:	out    dx,al
   14000a4f9:	rol    DWORD PTR [rax],cl
   14000a4fb:	add    BYTE PTR [rax],al
   14000a4fd:	add    BYTE PTR [rax],al
   14000a4ff:	add    BYTE PTR [rsp+rdx*8],al
   14000a502:	add    BYTE PTR [rax],al
   14000a504:	add    BYTE PTR [rax],al
   14000a506:	add    BYTE PTR [rax],al
   14000a508:	test   dl,cl
   14000a50a:	add    BYTE PTR [rax],al
   14000a50c:	add    BYTE PTR [rax],al
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	and    cl,bl
   14000a512:	add    BYTE PTR [rax],al
   14000a514:	add    BYTE PTR [rax],al
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	(bad)  
   14000a519:	retf   
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	add    BYTE PTR [rax],al
   14000a51e:	add    BYTE PTR [rax],al
   14000a520:	or     al,0xcb
   14000a522:	add    BYTE PTR [rax],al
   14000a524:	add    BYTE PTR [rax],al
   14000a526:	add    BYTE PTR [rax],al
   14000a528:	add    cl,bl
   14000a52a:	add    BYTE PTR [rax],al
   14000a52c:	add    BYTE PTR [rax],al
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	clc    
   14000a531:	retf   0x0
   14000a534:	add    BYTE PTR [rax],al
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	(bad)  
   14000a539:	retf   0x0
   14000a53c:	add    BYTE PTR [rax],al
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	fmul   st(2),st
   14000a542:	add    BYTE PTR [rax],al
   14000a544:	add    BYTE PTR [rax],al
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	ror    dl,cl
   14000a54a:	add    BYTE PTR [rax],al
   14000a54c:	add    BYTE PTR [rax],al
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	retf   0xca
   14000a553:	add    BYTE PTR [rax],al
   14000a555:	add    BYTE PTR [rax],al
   14000a557:	add    al,al
   14000a559:	retf   0x0
   14000a55c:	add    BYTE PTR [rax],al
   14000a55e:	add    BYTE PTR [rax],al
   14000a560:	(bad)  
   14000a561:	(bad)  
	...
   14000a56e:	add    BYTE PTR [rax],al
   14000a570:	(bad)  
   14000a571:	int3   
   14000a572:	add    BYTE PTR [rax],al
   14000a574:	add    BYTE PTR [rax],al
   14000a576:	add    BYTE PTR [rax],al
   14000a578:	cmp    ah,cl
   14000a57a:	add    BYTE PTR [rax],al
   14000a57c:	add    BYTE PTR [rax],al
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	push   rdx
   14000a581:	int3   
   14000a582:	add    BYTE PTR [rax],al
   14000a584:	add    BYTE PTR [rax],al
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	fs int3 
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	add    BYTE PTR [rax],al
   14000a58e:	add    BYTE PTR [rax],al
   14000a590:	jle    0x14000a55e
   14000a592:	add    BYTE PTR [rax],al
   14000a594:	add    BYTE PTR [rax],al
   14000a596:	add    BYTE PTR [rax],al
   14000a598:	cwde   
   14000a599:	int3   
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	add    BYTE PTR [rax],al
   14000a59e:	add    BYTE PTR [rax],al
   14000a5a0:	mov    dl,0xcc
   14000a5a2:	add    BYTE PTR [rax],al
   14000a5a4:	add    BYTE PTR [rax],al
   14000a5a6:	add    BYTE PTR [rax],al
   14000a5a8:	(bad)  
   14000a5a9:	int3   
   14000a5aa:	add    BYTE PTR [rax],al
   14000a5ac:	add    BYTE PTR [rax],al
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	loopne 0x14000a57e
	...
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	add    BYTE PTR [rsi+0x14000],dl
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	jo     0x14000a563
   14000a5ca:	add    BYTE PTR [rax+0x1],al
	...
   14000a5d5:	add    BYTE PTR [rax],al
   14000a5d7:	add    BYTE PTR [rax],ah
   14000a5d9:	lea    eax,[rax]
   14000a5db:	rex add DWORD PTR [rax],eax
   14000a5de:	add    BYTE PTR [rax],al
   14000a5e0:	add    BYTE PTR [rax],dl
   14000a5e2:	add    BYTE PTR [rax+0x1],al
   14000a5e5:	add    BYTE PTR [rax],al
   14000a5e7:	add    BYTE PTR [rax],ah
   14000a5e9:	adc    BYTE PTR [rax],al
   14000a5eb:	rex add DWORD PTR [rax],eax
	...
   14000a5fe:	add    BYTE PTR [rax],al
   14000a600:	rex mov WORD PTR [rax],es
   14000a603:	rex add DWORD PTR [rax],eax
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	xor    BYTE PTR [rbx+0x14000],dl
	...
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	add    BYTE PTR [rax],dl
   14000a61a:	add    BYTE PTR [rax],al
   14000a61c:	and    BYTE PTR [rax],dl
   14000a61e:	add    BYTE PTR [rax],al
   14000a620:	lock adc eax,0x1f000000
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	lock xor eax,DWORD PTR [rax]
   14000a62b:	add    BYTE PTR [rax-0xfffffc4],al
   14000a631:	rex.WRB add BYTE PTR [r8],r8b
   14000a634:	movabs al,ds:0x2000008c4000008b
   14000a63d:	lea    eax,[rax]
   14000a63f:	add    al,dh
   14000a641:	pop    QWORD PTR [rax]
   14000a643:	add    BYTE PTR [rax-0x6f],ah
   14000a646:	add    BYTE PTR [rax],al
   14000a648:	lock xchg edx,eax
   14000a64a:	add    BYTE PTR [rax],al
   14000a64c:	xor    BYTE PTR [rbx-0x6a300000],dl
   14000a652:	add    BYTE PTR [rax],al
   14000a654:	add    BYTE PTR [rsi-0x69c00000],dl
   14000a65a:	add    BYTE PTR [rax],al
   14000a65c:	(bad)  
   14000a65d:	xchg   esi,eax
   14000a65e:	add    BYTE PTR [rax],al
   14000a660:	loopne 0x14000a5f8
   14000a662:	add    BYTE PTR [rax],al
   14000a664:	add    BYTE PTR [rdi-0x68800000],dl
   14000a66a:	add    BYTE PTR [rax],al
   14000a66c:	movabs al,ds:0xe0000097c0000097
   14000a675:	xchg   edi,eax
   14000a676:	add    BYTE PTR [rax],al
   14000a678:	add    BYTE PTR [rax-0x67e00000],bl
   14000a67e:	add    BYTE PTR [rax],al
   14000a680:	movabs al,ds:0x9a40000098
   14000a689:	add    BYTE PTR [rax],al
   14000a68b:	add    BYTE PTR [rax],al
   14000a68d:	add    BYTE PTR [rax],al
   14000a68f:	add    al,al
   14000a691:	loope  0x14000a693
   14000a693:	rex add DWORD PTR [rax],eax
   14000a696:	add    BYTE PTR [rax],al
   14000a698:	(bad)  
   14000a699:	loop   0x14000a69b
   14000a69b:	rex add DWORD PTR [rax],eax
   14000a69e:	add    BYTE PTR [rax],al
   14000a6a0:	(bad)  
   14000a6a1:	jo     0x14000a70c
   14000a6a3:	sub    eax,0x772d736d
   14000a6a8:	imul   ebp,DWORD PTR [rsi+0x2d],0x75636573
   14000a6af:	jb     0x14000a71a
   14000a6b1:	je     0x14000a72c
   14000a6b3:	sub    eax,0x6c646473
   14000a6b8:	sub    eax,0x312d316c
   14000a6bd:	sub    eax,0x6c642e30
   14000a6c2:	ins    BYTE PTR es:[rdi],dx
	...
   14000a6cf:	add    BYTE PTR [rbx+0x45],dl
   14000a6d2:	push   rsp
   14000a6d3:	push   rbp
   14000a6d4:	push   rax
   14000a6d5:	push   r8
   14000a6d7:	rex.WB
   14000a6d8:	cs fs ins BYTE PTR es:[rdi],dx
   14000a6db:	ins    BYTE PTR es:[rdi],dx
   14000a6dc:	add    BYTE PTR [rax],al
   14000a6de:	add    BYTE PTR [rax],al
   14000a6e0:	rex.XB
   14000a6e1:	rex.WRXB
   14000a6e2:	rex.WRB
   14000a6e3:	rex.XB push r12
   14000a6e5:	xor    r14,QWORD PTR [rdx]
   14000a6e8:	cs fs ins BYTE PTR es:[rdi],dx
   14000a6eb:	ins    BYTE PTR es:[rdi],dx
   14000a6ec:	add    BYTE PTR [rax],al
   14000a6ee:	add    BYTE PTR [rax],al
   14000a6f0:	cmp    al,0x0
   14000a6f2:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000a6f6:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   14000a6fb:	add    BYTE PTR [rax],al
   14000a6fd:	add    BYTE PTR [rax],al
   14000a6ff:	add    BYTE PTR [rsi+0x0],cl
   14000a702:	push   rbp
   14000a703:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   14000a70f:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000a713:	add    BYTE PTR [rdx+0x0],ah
   14000a716:	rex.XB add BYTE PTR [r9+0x0],spl
   14000a71a:	ins    BYTE PTR es:[rdi],dx
   14000a71b:	add    BYTE PTR [rdi+0x0],bl
   14000a71e:	push   rdi
   14000a71f:	add    BYTE PTR [rsi+0x0],ch
   14000a722:	add    BYTE PTR fs:[rbx+0x0],al
   14000a726:	ins    BYTE PTR es:[rdi],dx
   14000a727:	add    BYTE PTR [rcx+0x0],ah
   14000a72a:	jae    0x14000a72c
   14000a72c:	jae    0x14000a72e
   14000a72e:	add    BYTE PTR [rax],al
   14000a730:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000a734:	outs   dx,BYTE PTR ds:[rsi]
   14000a735:	add    BYTE PTR [rbx+0x0],al
   14000a738:	(bad)  
   14000a739:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a73d:	add    BYTE PTR [rax],al
   14000a73f:	add    BYTE PTR [rbx+0x0],dl
   14000a742:	push   0x77006f00
   14000a747:	add    BYTE PTR [rbx+0x0],al
   14000a74a:	jne    0x14000a74c
   14000a74c:	jb     0x14000a74e
   14000a74e:	jae    0x14000a750
   14000a750:	outs   dx,DWORD PTR ds:[rsi]
   14000a751:	add    BYTE PTR [rdx+0x0],dh
   14000a754:	add    BYTE PTR [rax],al
   14000a756:	add    BYTE PTR [rax],al
   14000a758:	push   rcx
   14000a759:	add    BYTE PTR [rbp+0x0],dh
   14000a75c:	imul   eax,DWORD PTR [rax],0x740065
   14000a762:	add    BYTE PTR [rax],al
   14000a764:	add    BYTE PTR [rax],al
   14000a766:	add    BYTE PTR [rax],al
   14000a768:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000a76c:	push   rsi
   14000a76d:	add    BYTE PTR [rcx+0x0],ah
   14000a770:	ins    BYTE PTR es:[rdi],dx
   14000a771:	add    BYTE PTR [rcx+0x0],ch
   14000a774:	add    BYTE PTR fs:[rcx+0x0],ah
   14000a778:	je     0x14000a77a
   14000a77a:	add    BYTE PTR gs:[rax],al
   14000a77d:	add    BYTE PTR [rax],al
   14000a77f:	add    BYTE PTR [rbx+0x0],dl
   14000a782:	(bad)  
   14000a783:	add    BYTE PTR [rsi+0x0],dh
   14000a786:	add    BYTE PTR gs:[rsi+0x0],al
   14000a78a:	imul   eax,DWORD PTR [rax],0x65006c
   14000a790:	jae    0x14000a792
   14000a792:	add    BYTE PTR [rax],al
   14000a794:	add    BYTE PTR [rax],al
   14000a796:	add    BYTE PTR [rax],al
   14000a798:	add    BYTE PTR [r8+0x0],r15b
   14000a79c:	jo     0x14000a79e
   14000a79e:	outs   dx,DWORD PTR ds:[rsi]
   14000a79f:	add    BYTE PTR [rdx+0x0],dh
   14000a7a2:	je     0x14000a7a4
   14000a7a4:	add    BYTE PTR [rax],al
   14000a7a6:	add    BYTE PTR [rax],al
   14000a7a8:	push   rbp
   14000a7a9:	add    BYTE PTR [rbx+0x0],dh
   14000a7ac:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a7b0:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000a7b4:	outs   dx,BYTE PTR ds:[rsi]
   14000a7b5:	add    BYTE PTR [rbx+0x0],al
   14000a7b8:	(bad)  
   14000a7b9:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a7bd:	add    BYTE PTR [rax],al
   14000a7bf:	add    BYTE PTR [rbx+0x0],al
   14000a7c2:	ins    BYTE PTR es:[rdi],dx
   14000a7c3:	add    BYTE PTR [rbp+0x0],ah
   14000a7c6:	(bad)  
   14000a7c7:	add    BYTE PTR [rdx+0x0],dh
   14000a7ca:	rex.XB add BYTE PTR [r9+0x0],spl
   14000a7ce:	ins    BYTE PTR es:[rdi],dx
	...
   14000a7d7:	add    BYTE PTR [rsi+0x0],cl
   14000a7da:	outs   dx,DWORD PTR ds:[rsi]
   14000a7db:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a7df:	add    BYTE PTR [rbx+0x0],dh
   14000a7e2:	imul   eax,DWORD PTR [rax],0x74
   14000a7e5:	add    BYTE PTR [rdi+0x0],ch
   14000a7e8:	jo     0x14000a7ea
   14000a7ea:	add    BYTE PTR [rax],al
   14000a7ec:	add    BYTE PTR [rax],al
   14000a7ee:	add    BYTE PTR [rax],al
   14000a7f0:	pop    rax
   14000a7f1:	add    BYTE PTR [rcx+0x0],cl
   14000a7f4:	outs   dx,BYTE PTR ds:[rsi]
   14000a7f5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a7f9:	add    BYTE PTR [rdx+0x0],dh
   14000a7fc:	jbe    0x14000a7fe
   14000a7fe:	(bad)  
   14000a7ff:	add    BYTE PTR [rax+rax*1+0x3d],ch
   14000a803:	add    BYTE PTR [rax],al
   14000a805:	add    BYTE PTR [rax],al
   14000a807:	add    BYTE PTR [rcx+0x0],bl
   14000a80a:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000a80e:	je     0x14000a810
   14000a810:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a814:	jbe    0x14000a816
   14000a816:	(bad)  
   14000a817:	add    BYTE PTR [rax+rax*1+0x3d],ch
   14000a81b:	add    BYTE PTR [rax],al
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    BYTE PTR [rax+0x0],bl
   14000a822:	rex.RXB add BYTE PTR [r10+0x0],r14b
   14000a826:	imul   eax,DWORD PTR [rax],0x500064
   14000a82c:	je     0x14000a82e
   14000a82e:	jae    0x14000a830
   14000a830:	cmp    eax,0x0
   14000a835:	add    BYTE PTR [rax],al
   14000a837:	add    BYTE PTR [rcx+0x0],bl
   14000a83a:	rex.RXB add BYTE PTR [r10+0x0],r14b
   14000a83e:	imul   eax,DWORD PTR [rax],0x500064
   14000a844:	je     0x14000a846
   14000a846:	jae    0x14000a848
   14000a848:	cmp    eax,0x0
   14000a84d:	add    BYTE PTR [rax],al
   14000a84f:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a853:	add    BYTE PTR [rsi+0x0],dh
   14000a856:	imul   eax,DWORD PTR [rax],0x650063
   14000a85c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000a860:	ins    DWORD PTR es:[rdi],dx
   14000a861:	add    BYTE PTR [rbp+0x0],ah
   14000a864:	cmp    eax,0x44000000
   14000a869:	add    BYTE PTR [rbp+0x0],ah
   14000a86c:	jbe    0x14000a86e
   14000a86e:	imul   eax,DWORD PTR [rax],0x650063
   14000a874:	push   rax
   14000a875:	add    BYTE PTR [rcx+0x0],ah
   14000a878:	je     0x14000a87a
   14000a87a:	push   0x3d00
   14000a87f:	add    BYTE PTR [rax+rax*1+0x69],al
   14000a883:	add    BYTE PTR [rbx+0x0],dh
   14000a886:	jo     0x14000a888
   14000a888:	ins    BYTE PTR es:[rdi],dx
   14000a889:	add    BYTE PTR [rcx+0x0],ah
   14000a88c:	jns    0x14000a88e
   14000a88e:	rex.WB add BYTE PTR [r8+rax*1+0x3d],al
   14000a893:	add    BYTE PTR [rax],al
   14000a895:	add    BYTE PTR [rax],al
   14000a897:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a89b:	add    BYTE PTR [rsi+0x0],dh
   14000a89e:	imul   eax,DWORD PTR [rax],0x650063
   14000a8a4:	rex.WXB add BYTE PTR [r9+0x0],bpl
   14000a8a8:	outs   dx,BYTE PTR ds:[rsi]
   14000a8a9:	add    BYTE PTR [rax+rax*1+0x3d],ah
   14000a8ad:	add    BYTE PTR [rax],al
   14000a8af:	add    BYTE PTR [rbp+0x0],dl
   14000a8b2:	jae    0x14000a8b4
   14000a8b4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a8b8:	push   rbx
   14000a8b9:	add    BYTE PTR [rcx+0x0],ch
   14000a8bc:	add    BYTE PTR fs:[rip+0x0],bh        # 0x14000a8c3
   14000a8c3:	add    BYTE PTR [rax],al
   14000a8c5:	add    BYTE PTR [rax],al
   14000a8c7:	add    BYTE PTR [rbp+0x0],dl
   14000a8ca:	jae    0x14000a8cc
   14000a8cc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a8d0:	push   rbx
   14000a8d1:	add    BYTE PTR [rcx+0x0],ch
   14000a8d4:	add    BYTE PTR fs:[rip+0x73002500],bh        # 0x1b300cddb
   14000a8db:	add    BYTE PTR [rax],ah
   14000a8dd:	add    BYTE PTR [rip+0x7300],ah        # 0x140011be3
   14000a8e3:	add    BYTE PTR [rax],al
   14000a8e5:	add    BYTE PTR [rax],al
   14000a8e7:	add    BYTE PTR [rdx+0x0],dl
   14000a8ea:	jne    0x14000a8ec
   14000a8ec:	outs   dx,BYTE PTR ds:[rsi]
   14000a8ed:	add    BYTE PTR [rcx+0x0],al
   14000a8f0:	jae    0x14000a8f2
   14000a8f2:	add    BYTE PTR [rax],al
   14000a8f4:	and    BYTE PTR [rax],al
   14000a8f6:	add    BYTE PTR [rax],al
   14000a8f8:	push   rsp
   14000a8f9:	add    BYTE PTR [rcx+0x0],ah
   14000a8fc:	(bad)  
   14000a8fd:	add    BYTE PTR [rbx+0x0],al
   14000a900:	(bad)  
   14000a901:	add    BYTE PTR [rax+rax*1+0x53],ch
   14000a905:	add    BYTE PTR [rcx+0x0],ch
   14000a908:	outs   dx,BYTE PTR ds:[rsi]
   14000a909:	add    BYTE PTR [rdi+0x0],ah
   14000a90c:	ins    BYTE PTR es:[rdi],dx
   14000a90d:	add    BYTE PTR [rbp+0x0],ah
   14000a910:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000a914:	jae    0x14000a916
   14000a916:	je     0x14000a918
   14000a918:	(bad)  
   14000a919:	add    BYTE PTR [rsi+0x0],ch
   14000a91c:	movsxd eax,DWORD PTR [rax]
   14000a91e:	add    BYTE PTR gs:[rax],al
   14000a921:	add    BYTE PTR [rax],al
   14000a923:	add    BYTE PTR [rax],al
   14000a925:	add    BYTE PTR [rax],al
   14000a927:	add    BYTE PTR [rax+0x0],bl
   14000a92a:	rex.RXB add BYTE PTR [r10+0x0],r14b
   14000a92e:	imul   eax,DWORD PTR [rax],0x500064
   14000a934:	je     0x14000a936
   14000a936:	jae    0x14000a938
	...
   14000a940:	push   rbx
   14000a941:	add    BYTE PTR [rcx+0x0],bh
   14000a944:	jae    0x14000a946
   14000a946:	je     0x14000a948
   14000a948:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a94c:	pop    rsp
   14000a94d:	add    BYTE PTR [rbx+0x0],al
   14000a950:	jne    0x14000a952
   14000a952:	jb     0x14000a954
   14000a954:	jb     0x14000a956
   14000a956:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a95a:	je     0x14000a95c
   14000a95c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a960:	outs   dx,BYTE PTR ds:[rsi]
   14000a961:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000a965:	add    BYTE PTR [rdi+0x0],ch
   14000a968:	ins    BYTE PTR es:[rdi],dx
   14000a969:	add    BYTE PTR [rbx+0x0],dl
   14000a96c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000a971:	add    BYTE PTR [rbx+0x0],al
   14000a974:	outs   dx,DWORD PTR ds:[rsi]
   14000a975:	add    BYTE PTR [rsi+0x0],ch
   14000a978:	je     0x14000a97a
   14000a97a:	jb     0x14000a97c
   14000a97c:	outs   dx,DWORD PTR ds:[rsi]
   14000a97d:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000a981:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000a985:	add    BYTE PTR [rdx+0x0],ah
   14000a988:	ins    BYTE PTR es:[rdi],dx
   14000a989:	add    BYTE PTR [rbp+0x0],ah
   14000a98c:	je     0x14000a98e
   14000a98e:	push   rax
   14000a98f:	add    BYTE PTR [rbx+0x0],al
   14000a992:	pop    rsp
   14000a993:	add    BYTE PTR [rax+rax*1+0x69],cl
   14000a997:	add    BYTE PTR [rsi+0x0],ch
   14000a99a:	add    BYTE PTR gs:[rcx+0x0],ah
   14000a99e:	jb     0x14000a9a0
   14000a9a0:	imul   eax,DWORD PTR [rax],0x790074
   14000a9a6:	add    BYTE PTR [rcx+0x0],r12b
   14000a9aa:	je     0x14000a9ac
   14000a9ac:	(bad)  
   14000a9ad:	add    BYTE PTR [rax],al
   14000a9af:	add    BYTE PTR [rcx+0x0],bl
   14000a9b2:	rex.RXB add BYTE PTR [r10+0x0],r14b
   14000a9b6:	imul   eax,DWORD PTR [rax],0x500064
   14000a9bc:	je     0x14000a9be
   14000a9be:	jae    0x14000a9c0
   14000a9c0:	add    BYTE PTR [rax],al
   14000a9c2:	add    BYTE PTR [rax],al
   14000a9c4:	sub    al,0x0
   14000a9c6:	add    BYTE PTR [rax],al
   14000a9c8:	jae    0x14000a9ca
   14000a9ca:	je     0x14000a9cc
   14000a9cc:	(bad)  
   14000a9cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a9d1:	add    BYTE PTR [rbx+0x0],ah
   14000a9d4:	add    BYTE PTR [rax],al
   14000a9d6:	add    BYTE PTR [rax],al
   14000a9d8:	je     0x14000aa52
   14000a9da:	je     0x14000a9dc
   14000a9dc:	jb     0x14000aa43
   14000a9de:	add    BYTE PTR [ebx+0x61],ah
   14000a9e2:	ins    BYTE PTR es:[rdi],dx
   14000a9e3:	fs (bad) 
   14000a9e5:	je     0x14000aa48
   14000a9e7:	and    eax,0x73252e64
   14000a9ec:	add    BYTE PTR [rax],al
   14000a9ee:	add    BYTE PTR [rax],al
   14000a9f0:	ja     0x14000aa66
   14000a9f2:	add    BYTE PTR [rax],al
   14000a9f4:	and    eax,0x25000a53
   14000a9f9:	xor    BYTE PTR [rdx],dh
   14000a9fb:	js     0x14000a9fd
   14000a9fd:	add    BYTE PTR [rax],al
   14000a9ff:	add    BYTE PTR [rdx],cl
   14000aa01:	add    BYTE PTR [rax],al
   14000aa03:	add    BYTE PTR [rax],al
   14000aa05:	add    BYTE PTR [rax],al
   14000aa07:	add    BYTE PTR [rdi+0x69],dl
   14000aa0a:	outs   dx,BYTE PTR ds:[rsi]
   14000aa0b:	outs   dx,DWORD PTR fs:[rsi]
   14000aa0d:	ja     0x14000aa82
   14000aa0f:	and    BYTE PTR [rdx+0x65],dl
   14000aa12:	imul   esi,DWORD PTR [ebx+0x74],0x45207972
   14000aa1a:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x72655620
   14000aa23:	jae    0x14000aa8e
   14000aa25:	outs   dx,DWORD PTR ds:[rsi]
   14000aa26:	outs   dx,BYTE PTR ds:[rsi]
   14000aa27:	and    BYTE PTR [rip+0xa30302e],dh        # 0x14a30da5b
   14000aa2d:	or     al,BYTE PTR [rax]
   14000aa2f:	add    BYTE PTR [rax+0x4b],cl
   14000aa32:	rex.RB pop r9
   14000aa34:	pop    rdi
   14000aa35:	rex.WR
   14000aa36:	rex.WRXB
   14000aa37:	rex.XB
   14000aa38:	rex.B
   14000aa39:	rex.WR pop rdi
   14000aa3b:	rex.WRB
   14000aa3c:	rex.B
   14000aa3d:	rex.XB
   14000aa3e:	rex.W
   14000aa3f:	rex.WB
   14000aa40:	rex.WRX
   14000aa41:	rex.RB pop r12
   14000aa43:	push   rbx
   14000aa44:	pop    rcx
   14000aa45:	push   rbx
   14000aa46:	push   rsp
   14000aa47:	rex.RB
   14000aa48:	rex.WRB pop r12
   14000aa4a:	rex.XB jne 0x14000aabf
   14000aa4d:	jb     0x14000aab4
   14000aa4f:	outs   dx,BYTE PTR ds:[rsi]
   14000aa50:	je     0x14000aa95
   14000aa52:	outs   dx,DWORD PTR ds:[rsi]
   14000aa53:	outs   dx,BYTE PTR ds:[rsi]
   14000aa54:	je     0x14000aac8
   14000aa56:	outs   dx,DWORD PTR ds:[rsi]
   14000aa57:	ins    BYTE PTR es:[rdi],dx
   14000aa58:	push   rbx
   14000aa59:	gs je  0x14000aab8
   14000aa5c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000aa5e:	outs   dx,BYTE PTR ds:[rsi]
   14000aa5f:	je     0x14000aad3
   14000aa61:	outs   dx,DWORD PTR ds:[rsi]
   14000aa62:	ins    BYTE PTR es:[rdi],dx
   14000aa63:	pop    rsp
   14000aa64:	push   rsp
   14000aa65:	(bad)  
   14000aa66:	(bad)  
   14000aa67:	ins    BYTE PTR es:[rdi],dx
   14000aa68:	gs je  0x14000aabb
   14000aa6b:	rex.XB pop r12
   14000aa6d:	imul   r13,QWORD PTR [rsi+0x65],0x74697261
   14000aa75:	jns    0x14000aabb
   14000aa77:	(bad)  
   14000aa78:	je     0x14000aadb
   14000aa7a:	add    BYTE PTR [rax],al
   14000aa7c:	add    BYTE PTR [rax],al
   14000aa7e:	add    BYTE PTR [rax],al
   14000aa80:	rex.W
   14000aa81:	rex.WXB
   14000aa82:	rex.RB pop r9
   14000aa84:	pop    rdi
   14000aa85:	rex.XB push r13
   14000aa87:	push   rdx
   14000aa88:	push   rdx
   14000aa89:	rex.RB
   14000aa8a:	rex.WRX push rsp
   14000aa8c:	pop    rdi
   14000aa8d:	push   rbp
   14000aa8e:	push   rbx
   14000aa8f:	rex.RB push r10
   14000aa91:	pop    rsp
   14000aa92:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000aa94:	outs   dx,BYTE PTR ds:[rsi]
   14000aa95:	je     0x14000ab09
   14000aa97:	outs   dx,DWORD PTR ds:[rsi]
   14000aa98:	ins    BYTE PTR es:[rdi],dx
   14000aa99:	and    BYTE PTR [rax+0x61],dl
   14000aa9c:	outs   dx,BYTE PTR ds:[rsi]
   14000aa9d:	gs ins BYTE PTR es:[rdi],dx
   14000aa9f:	pop    rsp
   14000aaa0:	push   rsp
   14000aaa1:	(bad)  
   14000aaa2:	(bad)  
   14000aaa3:	ins    BYTE PTR es:[rdi],dx
   14000aaa4:	gs je  0x14000aaf7
   14000aaa7:	rex.XB pop r12
   14000aaa9:	push   rax
   14000aaaa:	outs   dx,BYTE PTR gs:[rsi]
   14000aaac:	push   rsp
   14000aaad:	imul   ebp,DWORD PTR [rsp+rsi*2+0x44],0x617461
   14000aab5:	add    BYTE PTR [rax],al
   14000aab7:	add    BYTE PTR [rbx+0x25],bl
   14000aaba:	jae    0x14000ab19
   14000aabc:	or     al,BYTE PTR [rax]
   14000aabe:	add    BYTE PTR [rax],al
   14000aac0:	and    ah,BYTE PTR [rip+0x683d2253]        # 0x1a83dcd19
   14000aac6:	gs js  0x14000ab03
   14000aac9:	add    BYTE PTR [rax],al
   14000aacb:	add    BYTE PTR [rax],al
   14000aacd:	add    BYTE PTR [rax],al
   14000aacf:	add    BYTE PTR [rdx],ah
   14000aad1:	rex.WR (bad) 
   14000aad3:	outs   dx,BYTE PTR ds:[rsi]
   14000aad4:	fs jae 0x14000ab3a
   14000aad7:	(bad)  
   14000aad8:	jo     0x14000ab3f
   14000aada:	and    bh,BYTE PTR [rip+0x3a786568]        # 0x17a791048
	...
   14000aae8:	and    dl,BYTE PTR [rax+0x6f]
   14000aaeb:	jb     0x14000ab61
   14000aaed:	jb     0x14000ab50
   14000aaef:	imul   esi,DWORD PTR [rdx+riz*1+0x3d],0x3a786568
   14000aaf7:	add    BYTE PTR [rdx+rcx*1+0x20],bl
   14000aafb:	and    BYTE PTR [rax],ah
   14000aafd:	and    BYTE PTR [rax],ah
   14000aaff:	and    BYTE PTR [rax],ah
   14000ab01:	and    BYTE PTR [rax],ah
   14000ab03:	and    BYTE PTR [rax],ah
   14000ab05:	and    BYTE PTR [rax],ah
   14000ab07:	and    BYTE PTR [rax],ah
   14000ab09:	and    BYTE PTR [rax],al
   14000ab0b:	add    BYTE PTR [rax+rax*1],ch
   14000ab0e:	add    BYTE PTR [rax],al
   14000ab10:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ab13:	fs (bad) 
   14000ab15:	je     0x14000ab78
   14000ab17:	and    eax,0x73632e64
   14000ab1c:	jbe    0x14000ab1e
   14000ab1e:	add    BYTE PTR [rax],al
   14000ab20:	sub    al,0x2c
   14000ab22:	and    eax,0x64
   14000ab27:	add    BYTE PTR [rip+0x2c000064],ah        # 0x16c00ab91
   14000ab2d:	and    eax,0x64252c64
	...
   14000ab3e:	add    BYTE PTR [rax],al
   14000ab40:	push   rsp
   14000ab41:	add    BYTE PTR [rcx+0x0],ah
   14000ab44:	(bad)  
   14000ab45:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000ab49:	add    BYTE PTR [rax+rax*1+0x50],dh
   14000ab4d:	add    BYTE PTR [rbx+0x0],al
   14000ab50:	add    BYTE PTR [rcx+0x0],r13b
   14000ab54:	add    BYTE PTR [ecx+0x0],ch
   14000ab58:	je     0x14000ab5a
   14000ab5a:	imul   eax,DWORD PTR [rax],0x65007a
   14000ab60:	jb     0x14000ab62
   14000ab62:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000ab66:	jo     0x14000ab68
   14000ab68:	jo     0x14000ab6a
   14000ab6a:	imul   eax,DWORD PTR [rax],0x67006e
   14000ab70:	rex.XB add BYTE PTR [r8+0x0],bpl
   14000ab74:	(bad)  
   14000ab75:	add    BYTE PTR [rsi+0x0],ch
   14000ab78:	add    BYTE PTR [ebp+0x0],ah
   14000ab7c:	add    BYTE PTR fs:[rax],al
   14000ab7f:	add    BYTE PTR [rax+rax*1+0x69],cl
   14000ab83:	add    BYTE PTR [rsi+0x0],ch
   14000ab86:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ab8a:	jb     0x14000ab8c
   14000ab8c:	imul   eax,DWORD PTR [rax],0x790074
   14000ab92:	add    BYTE PTR [rcx+0x0],r12b
   14000ab96:	je     0x14000ab98
   14000ab98:	(bad)  
   14000ab99:	add    BYTE PTR [rax],al
   14000ab9b:	add    BYTE PTR [rax],al
   14000ab9d:	add    BYTE PTR [rax],al
   14000ab9f:	add    BYTE PTR [rbp+0x0],dl
   14000aba2:	jae    0x14000aba4
   14000aba4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aba8:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000abac:	outs   dx,BYTE PTR ds:[rsi]
   14000abad:	add    BYTE PTR [rbp+0x0],ah
   14000abb0:	(bad)  
   14000abb1:	add    BYTE PTR [rdx+0x0],dh
   14000abb4:	imul   eax,DWORD PTR [rax],0x790074
   14000abba:	add    BYTE PTR [rcx+0x0],r12b
   14000abbe:	je     0x14000abc0
   14000abc0:	(bad)  
	...
   14000abcd:	add    BYTE PTR [rax],al
   14000abcf:	add    BYTE PTR [rbx+0x0],dl
   14000abd2:	jns    0x14000abd4
   14000abd4:	jae    0x14000abd6
   14000abd6:	je     0x14000abd8
   14000abd8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000abdc:	pop    rsp
   14000abdd:	add    BYTE PTR [rbx+0x0],al
   14000abe0:	jne    0x14000abe2
   14000abe2:	jb     0x14000abe4
   14000abe4:	jb     0x14000abe6
   14000abe6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000abea:	je     0x14000abec
   14000abec:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000abf0:	outs   dx,BYTE PTR ds:[rsi]
   14000abf1:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000abf5:	add    BYTE PTR [rdi+0x0],ch
   14000abf8:	ins    BYTE PTR es:[rdi],dx
   14000abf9:	add    BYTE PTR [rbx+0x0],dl
   14000abfc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000ac01:	add    BYTE PTR [rbx+0x0],al
   14000ac04:	outs   dx,DWORD PTR ds:[rsi]
   14000ac05:	add    BYTE PTR [rsi+0x0],ch
   14000ac08:	je     0x14000ac0a
   14000ac0a:	jb     0x14000ac0c
   14000ac0c:	outs   dx,DWORD PTR ds:[rsi]
   14000ac0d:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000ac11:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000ac15:	add    BYTE PTR [rdx+0x0],ah
   14000ac18:	ins    BYTE PTR es:[rdi],dx
   14000ac19:	add    BYTE PTR [rbp+0x0],ah
   14000ac1c:	je     0x14000ac1e
   14000ac1e:	push   rax
   14000ac1f:	add    BYTE PTR [rbx+0x0],al
   14000ac22:	pop    rsp
   14000ac23:	add    BYTE PTR [rbp+0x0],dl
   14000ac26:	jae    0x14000ac28
   14000ac28:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ac2c:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000ac30:	outs   dx,BYTE PTR ds:[rsi]
   14000ac31:	add    BYTE PTR [rbp+0x0],ah
   14000ac34:	(bad)  
   14000ac35:	add    BYTE PTR [rdx+0x0],dh
   14000ac38:	imul   eax,DWORD PTR [rax],0x790074
   14000ac3e:	add    BYTE PTR [rcx+0x0],r12b
   14000ac42:	je     0x14000ac44
   14000ac44:	(bad)  
   14000ac45:	add    BYTE PTR [rax],al
   14000ac47:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000ac4b:	add    BYTE PTR [rdx+0x0],ah
   14000ac4e:	rex.XB add BYTE PTR [r9+0x0],spl
   14000ac52:	ins    BYTE PTR es:[rdi],dx
   14000ac53:	add    BYTE PTR [rax+rax*1+0x65],al
   14000ac57:	add    BYTE PTR [rbx+0x0],dh
   14000ac5a:	imul   eax,DWORD PTR [rax],0x74
   14000ac5d:	add    BYTE PTR [rdi+0x0],ch
   14000ac60:	jo     0x14000ac62
   14000ac62:	add    BYTE PTR [rax],al
   14000ac64:	add    BYTE PTR [rax],al
   14000ac66:	add    BYTE PTR [rax],al
   14000ac68:	rex.R outs dx,BYTE PTR ds:[rsi]
   14000ac6a:	repz (bad) 
   14000ac6c:	out    dx,eax
   14000ac6d:	pop    rsi
   14000ac6e:	(bad)  
   14000ac6f:	rex.WR cmp rbx,0xffffffffebfaa780
   14000ac76:	shl    eax,0xab
   14000ac79:	add    esp,edi
   14000ac7b:	sahf   
   14000ac7c:	es xor eax,0xe995c6c9
   14000ac82:	mov    bl,0x40
   14000ac84:	sub    esp,DWORD PTR [rdx]
   14000ac86:	rex.RX call 0x14065acd3
   14000ac8c:	outs   dx,BYTE PTR ds:[rsi]
   14000ac8d:	add    BYTE PTR [rbp+0x0],ah
   14000ac90:	jb     0x14000ac92
   14000ac92:	imul   eax,DWORD PTR [rax],0x440063
   14000ac98:	imul   eax,DWORD PTR [rax],0x690067
   14000ac9e:	je     0x14000aca0
   14000aca0:	imul   eax,DWORD PTR [rax],0x65007a
   14000aca6:	jb     0x14000aca8
	...
   14000acb0:	jo     0x14000acb2
   14000acb2:	add    BYTE PTR gs:[rsi+0x0],ch
   14000acb6:	add    BYTE PTR [rax],al
   14000acb8:	je     0x14000acba
   14000acba:	outs   dx,DWORD PTR ds:[rsi]
   14000acbb:	add    BYTE PTR [rbp+0x0],dh
   14000acbe:	movsxd eax,DWORD PTR [rax]
   14000acc0:	push   0x0
   14000acc5:	add    BYTE PTR [rax],al
   14000acc7:	add    BYTE PTR [rcx-0x48f6c40b],ch
   14000accd:	add    al,0x20
   14000accf:	sbb    eax,0x3413590
   14000acd4:	(bad)  
   14000acd5:	rex.R rol DWORD PTR [rbp+0x0],cl
   14000acd9:	add    BYTE PTR [rax],al
   14000acdb:	add    BYTE PTR [rax],al
   14000acdd:	add    BYTE PTR [rax],al
   14000acdf:	add    BYTE PTR [rax],cl
   14000ace1:	add    BYTE PTR [rax],al
   14000ace3:	add    BYTE PTR [rax],dl
   14000ace5:	add    BYTE PTR [rax],al
   14000ace7:	add    BYTE PTR [rax],al
   14000ace9:	add    DWORD PTR [rax],eax
   14000aceb:	add    BYTE PTR [rax],al
   14000aced:	adc    BYTE PTR [rax],al
   14000acef:	add    BYTE PTR [rsi-0x47],dh
   14000acf2:	(bad)  
   14000acf3:	lahf   
   14000acf4:	mov    bl,0x59
   14000acf6:	rex.WXB xchg r12,rbp
   14000acf9:	jrcxz  0x14000ac92
   14000acfb:	push   rbx
   14000acfc:	pop    rsp
   14000acfe:	push   rdi
   14000acff:	push   rsp
   14000ad00:	(bad)
   14000ad04:	rcl    BYTE PTR [rdx-0x60],0x4b
   14000ad08:	xchg   ebx,eax
   14000ad09:	scas   eax,DWORD PTR es:[rdi]
   14000ad0a:	scas   eax,DWORD PTR es:[rdi]
   14000ad0b:	xor    eax,0x61a51174
   14000ad10:	jne    0x14000acb1
   14000ad12:	(bad)  
   14000ad13:	mov    ch,0xe0
   14000ad15:	add    al,0x98
   14000ad17:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ad19:	out    dx,al
   14000ad1a:	ret    
   14000ad1b:	or     eax,0x11905abb
   14000ad20:	xor    bl,bl
   14000ad22:	pop    rdx
   14000ad23:	jae    0x14000ace0
   14000ad25:	(bad)  
   14000ad26:	mov    BYTE PTR [rdi-0x60],al
   14000ad29:	in     al,0xf
   14000ad2b:	xor    DWORD PTR [rax+rdx*4+0x5],esp
   14000ad2f:	pop    rbp
   14000ad30:	mov    edi,0xe76e0e07
   14000ad35:	scas   eax,DWORD PTR es:[rdi]
   14000ad36:	test   DWORD PTR [rdi+rax*4-0x2f],0x204664af
   14000ad3e:	test   BYTE PTR [rax],bl
   14000ad40:	(bad)
   14000ad43:	rex.XB sar r14d,cl
   14000ad46:	rol    DWORD PTR [rbp-0x75],1
   14000ad49:	jbe    0x14000adbc
   14000ad4b:	shr    edx,cl
   14000ad4d:	jp     0x14000acd1
   14000ad4f:	popf   
   14000ad50:	push   rsi
   14000ad51:	sbb    ebp,DWORD PTR [rax-0x6cf6ca88]
   14000ad57:	rex.R mov edx,0x1a5400ae
   14000ad5d:	mov    dl,BYTE PTR [rsi]
   14000ad5f:	(bad)  
   14000ad60:	sub    eax,0xf4730750
   14000ad65:	stc    
   14000ad66:	sbb    BYTE PTR [rsi-0x4d],cl
   14000ad69:	repnz sub al,0xe1
   14000ad6c:	mov    cl,0xa3
   14000ad6e:	(bad)  
   14000ad6f:	or     al,0x8b
   14000ad71:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ad73:	ins    DWORD PTR es:[rdi],dx
   14000ad74:	rex.R push rdx
   14000ad76:	in     al,dx
   14000ad77:	xchg   r8d,eax
   14000ad79:	pop    rbx
   14000ad7a:	xor    bl,al
   14000ad7c:	(bad)  
   14000ad7d:	mov    eax,0xefc40908
   14000ad82:	jg     0x14000ad0f
   14000ad84:	stos   BYTE PTR es:[rdi],al
   14000ad85:	xchg   esi,eax
   14000ad86:	dec    BYTE PTR [rbx-0x54]
   14000ad89:	mov    bl,BYTE PTR es:[rdi+0xb]
   14000ad8d:	loopne 0x14000ae0a
   14000ad8f:	cmc    
   14000ad90:	cmp    bh,BYTE PTR [rbx-0x30]
   14000ad93:	test   al,0xf0
   14000ad95:	mov    esi,DWORD PTR [rax-0x47566ac0]
   14000ad9b:	or     ch,BYTE PTR [rbx-0x49]
   14000ad9e:	xchg   DWORD PTR [rdi+0xe932389],edi
   14000ada4:	ja     0x14000adc3
   14000ada6:	scas   eax,DWORD PTR es:[rdi]
   14000ada7:	rex.XB lods al,BYTE PTR ds:[rsi]
   14000ada9:	add    BYTE PTR [rbx-0x6b],bl
   14000adac:	or     eax,0xb42d4b6d
   14000adb1:	and    edx,DWORD PTR [rcx+0xb882802]
   14000adb7:	mov    r10b,0x50
   14000adba:	movabs al,ds:0xdec5c7dce5956553
   14000adc3:	(bad)  
   14000adc4:	mov    edx,0x894906f6
   14000adc9:	rex.WRXB
   14000adca:	data16 (bad) 
   14000adcc:	(bad)  
   14000adcd:	cld    
   14000adce:	rex.RB ins BYTE PTR es:[rdi],dx
   14000add0:	(bad)  
   14000add1:	rex.WB xor cl,BYTE PTR [rip+0x41e413b2]        # 0x181e4c18a
   14000add8:	lods   al,BYTE PTR ds:[rsi]
   14000add9:	out    0x7a,al
   14000addb:	jmp    0x17b2debb4
   14000ade0:	mov    bh,0x57
   14000ade2:	jle    0x14000ae63
   14000ade4:	(bad)  
   14000ade5:	mov    esi,0x56a34be1
   14000adea:	jp     0x14000ad70
   14000adec:	(bad)  
   14000aded:	(bad)  
   14000adee:	sbb    BYTE PTR [rbx+0x5d5d5e56],dl
   14000adf4:	test   eax,0x9f4c5b6b
   14000adf9:	mov    al,0x85
   14000adfb:	sbb    al,0x91
   14000adfd:	jno    0x14000ae4d
   14000adff:	push   rsi
   14000ae00:	sbb    BYTE PTR [rcx+0x7c3a6a84],0xb7
   14000ae07:	rex.RB stos BYTE PTR es:[rdi],al
   14000ae09:	(bad)  
   14000ae0a:	nop
   14000ae0b:	movabs ds:0x33c1df83890e9562,al
   14000ae14:	fucomi st,st(4)
   14000ae16:	lock rex.R mov ecx,0xa5d1db23
   14000ae1d:	mov    dl,0x13
   14000ae1f:	outs   dx,BYTE PTR ds:[rsi]
   14000ae20:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ae21:	int    0x29
   14000ae23:	push   rbx
   14000ae24:	pop    rbx
   14000ae25:	cli    
   14000ae26:	ror    BYTE PTR [rsi-0x45],cl
   14000ae29:	xor    al,BYTE PTR [rbx+0x44720146]
   14000ae2f:	sub    BYTE PTR [rdi-0x73ffd207],ch
   14000ae35:	fisttp QWORD PTR [rcx+0x49]
   14000ae38:	mov    edx,0x105ed646
   14000ae3d:	jge    0x14000ae59
   14000ae3f:	mov    cl,dl
   14000ae41:	mov    bh,0x32
   14000ae43:	popf   
   14000ae44:	adc    edx,DWORD PTR [rdx]
   14000ae46:	push   rsp
   14000ae47:	rex.WRXB mov r15b,0xe4
   14000ae4a:	leave  
   14000ae4b:	add    eax,0x387ae10e
   14000ae50:	mov    ecx,0x59e71caa
   14000ae55:	or     BYTE PTR [rip+0x7cdba24c],0x79        # 0x1bcdc50a8
   14000ae5c:	push   rsp
   14000ae5d:	rex.RXB lea r8d,[r10+0x5c0b730a]
   14000ae64:	xchg   esp,eax
   14000ae65:	repz (bad) 
   14000ae67:	rex.WB test rax,0x34c43733
   14000ae6d:	hlt    
   14000ae6e:	mov    bh,0xeb
   14000ae70:	mov    rdx,db2
   14000ae73:	sub    BYTE PTR [rsi],bl
   14000ae75:	xchg   DWORD PTR [rcx+0x4907864d],edx
   14000ae7b:	xor    bh,BYTE PTR [rbp-0x21]
   14000ae7e:	or     bl,BYTE PTR [rdi-0x7ca65f06]
   14000ae84:	rex.R (bad) 
   14000ae86:	out    0x4d,al
   14000ae88:	xchg   edx,eax
   14000ae89:	or     esi,0xf59c895a
   14000ae8f:	(bad)  
   14000ae90:	fld    QWORD PTR [rdx+0x46]
   14000ae93:	rex.WR sahf 
   14000ae95:	rex.RXB
   14000ae96:	data16 rex.WR mov spl,0x40
   14000ae9a:	(bad)  
   14000ae9b:	int    0x83
   14000ae9d:	xchg   ebp,eax
   14000ae9e:	pop    QWORD PTR [rax]
   14000aea0:	mov    bl,BYTE PTR [rdx-0x1a7131d3]
   14000aea6:	mov    edx,0x18fa9340
   14000aeab:	fwait
   14000aeac:	mov    bl,0x90
   14000aeae:	add    BYTE PTR [rsi-0x3c38b7f1],ch
   14000aeb4:	cmp    DWORD PTR [rax-0x11],ebx
   14000aeb7:	rex.RX movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000aeb9:	data16 fmul DWORD PTR [rax+0x1c]
   14000aebd:	jp     0x14000aebd
   14000aebf:	shr    DWORD PTR [rdi-0x6215dd88],0xc5
   14000aec6:	hlt    
   14000aec7:	rex.WRX cdqe 
   14000aec9:	pop    rbx
   14000aeca:	(bad)  
   14000aecb:	mov    esi,0x3422df12
   14000aed0:	leave  
   14000aed1:	or     eax,0xcc5cb863
   14000aed6:	xor    ecx,DWORD PTR [rbp+rcx*4-0x53]
   14000aeda:	mov    ah,0x7f
   14000aedc:	(bad)  
   14000aedd:	sub    ecx,DWORD PTR [rcx+rdi*2+0x15e2f8e6]
   14000aee4:	and    DWORD PTR [rbx-0x75],0x165a94e
   14000aeeb:	(bad)  
   14000aeec:	jge    0x14000af6d
   14000aeee:	retf   0xe438
   14000aef1:	sti    
   14000aef2:	data16 jo 0x14000af33
   14000aef5:	rex.RXB jne 0x14000af3e
   14000aef8:	pushf  
   14000aef9:	and    eax,0x9b822600
   14000aefe:	rex (bad) 
   14000af00:	(bad)  
   14000af01:	pop    rbx
   14000af02:	enter  0xe6bb,0xad
   14000af06:	xchg   ebx,eax
   14000af07:	mov    bl,0xbb
   14000af0a:	fs (bad) 
   14000af0c:	movabs eax,ds:0xcb039143d31a7ad3
   14000af15:	js     0x14000aeb3
   14000af17:	rex.R test al,0xe7
   14000af1a:	ror    DWORD PTR [eax-0x7dcd3c9c],1
   14000af21:	(bad)  
   14000af22:	je     0x14000af8b
   14000af24:	in     eax,0xe
   14000af26:	(bad)  
   14000af27:	rex.B movabs eax,ds:0x283d8fc09e3a272b
   14000af31:	add    esi,DWORD PTR [rdx-0x10]
   14000af34:	cmp    esp,DWORD PTR [rsi-0x71]
   14000af37:	test   DWORD PTR [r14+0x3eae3195],esp
   14000af3e:	int    0xfa
   14000af40:	fisttp QWORD PTR [rcx+rsi*2-0x6af2535f]
   14000af47:	rex movabs eax,ds:0xd2fb6b10cb597b81
   14000af51:	je     0x14000af5d
   14000af53:	and    edx,0x824e396e
   14000af59:	pop    rsi
   14000af5a:	ins    DWORD PTR es:[rdi],dx
   14000af5b:	out    dx,eax
   14000af5c:	(bad)  
   14000af5d:	push   0xffffffffffffffff
   14000af5f:	(bad)
	...
   14000af6e:	add    BYTE PTR [rax],al
   14000af70:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000af74:	outs   dx,BYTE PTR ds:[rsi]
   14000af75:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000af79:	add    BYTE PTR [rdi+0x0],ch
   14000af7c:	ins    BYTE PTR es:[rdi],dx
   14000af7d:	add    BYTE PTR [rax],ah
   14000af7f:	add    BYTE PTR [rax+0x0],dl
   14000af82:	(bad)  
   14000af83:	add    BYTE PTR [rsi+0x0],ch
   14000af86:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14000af8b:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000af8f:	add    BYTE PTR [rdx+0x0],ah
   14000af92:	ins    BYTE PTR es:[rdi],dx
   14000af93:	add    BYTE PTR [rbp+0x0],ah
   14000af96:	je     0x14000af98
   14000af98:	push   rax
   14000af99:	add    BYTE PTR [rbx+0x0],al
   14000af9c:	pop    rsp
   14000af9d:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000afa1:	add    BYTE PTR [rax+rax*1+0x74],ch
   14000afa5:	add    BYTE PTR [rax+rax*1+0x61],al
   14000afa9:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000afad:	add    BYTE PTR [rax+rax*1+0x44],bl
   14000afb1:	add    BYTE PTR [rcx+0x0],ch
   14000afb4:	jae    0x14000afb6
   14000afb6:	jo     0x14000afb8
   14000afb8:	ins    BYTE PTR es:[rdi],dx
   14000afb9:	add    BYTE PTR [rcx+0x0],ah
   14000afbc:	jns    0x14000afbe
   14000afbe:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000afc2:	imul   eax,DWORD PTR [rax],0x6e0065
   14000afc8:	je     0x14000afca
   14000afca:	(bad)  
   14000afcb:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000afcf:	add    BYTE PTR [rdi+0x0],ch
   14000afd2:	outs   dx,BYTE PTR ds:[rsi]
   14000afd3:	add    BYTE PTR [rcx],bh
   14000afd5:	add    BYTE PTR [rax],dh
	...
   14000afdf:	add    BYTE PTR [rbx+0x0],al
   14000afe2:	outs   dx,DWORD PTR ds:[rsi]
   14000afe3:	add    BYTE PTR [rsi+0x0],ch
   14000afe6:	je     0x14000afe8
   14000afe8:	jb     0x14000afea
   14000afea:	outs   dx,DWORD PTR ds:[rsi]
   14000afeb:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000afef:	add    BYTE PTR [rax+0x0],dl
   14000aff2:	(bad)  
   14000aff3:	add    BYTE PTR [rsi+0x0],ch
   14000aff6:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14000affb:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000afff:	add    BYTE PTR [rdx+0x0],ah
   14000b002:	ins    BYTE PTR es:[rdi],dx
   14000b003:	add    BYTE PTR [rbp+0x0],ah
   14000b006:	je     0x14000b008
   14000b008:	push   rax
   14000b009:	add    BYTE PTR [rbx+0x0],al
   14000b00c:	pop    rsp
   14000b00d:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000b011:	add    BYTE PTR [rax+rax*1+0x74],ch
   14000b015:	add    BYTE PTR [rax+rax*1+0x61],al
   14000b019:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b01d:	add    BYTE PTR [rax+rax*1+0x44],bl
   14000b021:	add    BYTE PTR [rcx+0x0],ch
   14000b024:	jae    0x14000b026
   14000b026:	jo     0x14000b028
   14000b028:	ins    BYTE PTR es:[rdi],dx
   14000b029:	add    BYTE PTR [rcx+0x0],ah
   14000b02c:	jns    0x14000b02e
   14000b02e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000b032:	imul   eax,DWORD PTR [rax],0x6e0065
   14000b038:	je     0x14000b03a
   14000b03a:	(bad)  
   14000b03b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b03f:	add    BYTE PTR [rdi+0x0],ch
   14000b042:	outs   dx,BYTE PTR ds:[rsi]
   14000b043:	add    BYTE PTR [rcx],dh
   14000b045:	add    BYTE PTR [rax],bh
   14000b047:	add    BYTE PTR [rax],dh
   14000b049:	add    BYTE PTR [rax],al
   14000b04b:	add    BYTE PTR [rax],al
   14000b04d:	add    BYTE PTR [rax],al
   14000b04f:	add    BYTE PTR [rbx+0x0],al
   14000b052:	outs   dx,DWORD PTR ds:[rsi]
   14000b053:	add    BYTE PTR [rsi+0x0],ch
   14000b056:	je     0x14000b058
   14000b058:	jb     0x14000b05a
   14000b05a:	outs   dx,DWORD PTR ds:[rsi]
   14000b05b:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b05f:	add    BYTE PTR [rax+0x0],dl
   14000b062:	(bad)  
   14000b063:	add    BYTE PTR [rsi+0x0],ch
   14000b066:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14000b06b:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000b06f:	add    BYTE PTR [rdx+0x0],ah
   14000b072:	ins    BYTE PTR es:[rdi],dx
   14000b073:	add    BYTE PTR [rbp+0x0],ah
   14000b076:	je     0x14000b078
   14000b078:	push   rax
   14000b079:	add    BYTE PTR [rbx+0x0],al
   14000b07c:	pop    rsp
   14000b07d:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000b081:	add    BYTE PTR [rax+rax*1+0x74],ch
   14000b085:	add    BYTE PTR [rax+rax*1+0x61],al
   14000b089:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b08d:	add    BYTE PTR [rax+rax*1+0x44],bl
   14000b091:	add    BYTE PTR [rcx+0x0],ch
   14000b094:	jae    0x14000b096
   14000b096:	jo     0x14000b098
   14000b098:	ins    BYTE PTR es:[rdi],dx
   14000b099:	add    BYTE PTR [rcx+0x0],ah
   14000b09c:	jns    0x14000b09e
   14000b09e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000b0a2:	imul   eax,DWORD PTR [rax],0x6e0065
   14000b0a8:	je     0x14000b0aa
   14000b0aa:	(bad)  
   14000b0ab:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b0af:	add    BYTE PTR [rdi+0x0],ch
   14000b0b2:	outs   dx,BYTE PTR ds:[rsi]
   14000b0b3:	add    BYTE PTR [rdx],dh
   14000b0b5:	add    BYTE PTR [rdi],dh
   14000b0b7:	add    BYTE PTR [rax],dh
   14000b0b9:	add    BYTE PTR [rax],al
   14000b0bb:	add    BYTE PTR [rax],al
   14000b0bd:	add    BYTE PTR [rax],al
   14000b0bf:	add    BYTE PTR [rbx+0x0],al
   14000b0c2:	outs   dx,DWORD PTR ds:[rsi]
   14000b0c3:	add    BYTE PTR [rsi+0x0],ch
   14000b0c6:	je     0x14000b0c8
   14000b0c8:	jb     0x14000b0ca
   14000b0ca:	outs   dx,DWORD PTR ds:[rsi]
   14000b0cb:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b0cf:	add    BYTE PTR [rax+0x0],dl
   14000b0d2:	(bad)  
   14000b0d3:	add    BYTE PTR [rsi+0x0],ch
   14000b0d6:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14000b0db:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000b0df:	add    BYTE PTR [rdx+0x0],ah
   14000b0e2:	ins    BYTE PTR es:[rdi],dx
   14000b0e3:	add    BYTE PTR [rbp+0x0],ah
   14000b0e6:	je     0x14000b0e8
   14000b0e8:	push   rax
   14000b0e9:	add    BYTE PTR [rbx+0x0],al
   14000b0ec:	pop    rsp
   14000b0ed:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000b0f1:	add    BYTE PTR [rax+rax*1+0x74],ch
   14000b0f5:	add    BYTE PTR [rax+rax*1+0x61],al
   14000b0f9:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b0fd:	add    BYTE PTR [rax+rax*1+0x44],bl
   14000b101:	add    BYTE PTR [rcx+0x0],ch
   14000b104:	jae    0x14000b106
   14000b106:	jo     0x14000b108
   14000b108:	ins    BYTE PTR es:[rdi],dx
   14000b109:	add    BYTE PTR [rcx+0x0],ah
   14000b10c:	jns    0x14000b10e
   14000b10e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000b112:	imul   eax,DWORD PTR [rax],0x6e0065
   14000b118:	je     0x14000b11a
   14000b11a:	(bad)  
   14000b11b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b11f:	add    BYTE PTR [rdi+0x0],ch
   14000b122:	outs   dx,BYTE PTR ds:[rsi]
   14000b123:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b127:	add    BYTE PTR [rsi+0x0],ah
   14000b12a:	(bad)  
   14000b12b:	add    BYTE PTR [rbp+0x0],dh
   14000b12e:	ins    BYTE PTR es:[rdi],dx
   14000b12f:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000b133:	add    BYTE PTR [rax],al
   14000b135:	add    BYTE PTR [rax],al
   14000b137:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c01243d
   14000b13d:	add    BYTE PTR [rax],al
   14000b13f:	add    BYTE PTR [rcx+riz*2+0x62],dl
   14000b143:	push   rbp
   14000b144:	je     0x14000b1af
   14000b146:	ins    BYTE PTR es:[rdi],dx
   14000b147:	jae    0x14000b183
   14000b149:	cmp    al,BYTE PTR [rdx+0x72]
   14000b14c:	outs   dx,DWORD PTR ds:[rsi]
   14000b14d:	(bad)  
   14000b14e:	movsxd esp,DWORD PTR fs:[rcx+0x73]
   14000b152:	je     0x14000b1a7
   14000b154:	gs je  0x14000b1cb
   14000b157:	imul   ebp,DWORD PTR [rsi+0x67],0x6e616843
   14000b15e:	add    BYTE PTR gs:[eax],al
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	add    BYTE PTR [rax],al
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	push   rsp
   14000b169:	(bad)  
   14000b16a:	(bad)  
   14000b16b:	push   rbp
   14000b16c:	je     0x14000b1d7
   14000b16e:	ins    BYTE PTR es:[rdi],dx
   14000b16f:	jae    0x14000b1ab
   14000b171:	cmp    cl,BYTE PTR [rcx+0x73]
   14000b174:	rex.RB ins BYTE PTR es:[rdi],dx
   14000b176:	gs jbe 0x14000b1da
   14000b179:	je     0x14000b1e0
   14000b17b:	add    BYTE PTR fs:[rax],al
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	enter  0x8f1b,0xda
   14000b184:	jns    0x14000b14b
   14000b186:	iret   
   14000b187:	in     al,dx
   14000b188:	adc    eax,0xe68a74b9
   14000b18e:	mov    al,0x6
   14000b190:	rex.WRX push rbp
   14000b192:	rex.WR
   14000b193:	rex.WR add BYTE PTR [rax],r8b
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	rex.W
   14000b199:	gs ins BYTE PTR es:[rdi],dx
   14000b19b:	jo     0x14000b202
   14000b19d:	jb     0x14000b212
   14000b19f:	cmp    bh,BYTE PTR [rdx]
   14000b1a1:	push   rbx
   14000b1a2:	outs   dx,BYTE PTR gs:[rsi]
   14000b1a4:	fs rex.WRB
   14000b1a6:	gs jae 0x14000b21c
   14000b1a9:	(bad)  
   14000b1aa:	addr32 gs push rsp
   14000b1ad:	imul   ebp,DWORD PTR [rbp+0x65],0x5774756f
   14000b1b4:	add    BYTE PTR [rax],al
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	rex.W
   14000b1b9:	gs ins BYTE PTR es:[rdi],dx
   14000b1bb:	jo     0x14000b222
   14000b1bd:	jb     0x14000b232
   14000b1bf:	cmp    bh,BYTE PTR [rdx]
   14000b1c1:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b1c3:	outs   dx,DWORD PTR ds:[rsi]
   14000b1c4:	jae    0x14000b22b
   14000b1c6:	rex.W (bad) 
   14000b1c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b1c9:	fs ins BYTE PTR es:[rdi],dx
   14000b1cb:	add    BYTE PTR gs:[rax],al
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	jb     0x14000b17f
   14000b1d2:	(bad)  
   14000b1d3:	xor    DWORD PTR [rdx],esp
   14000b1d5:	cmp    esp,DWORD PTR [rsi]
   14000b1d7:	mov    dh,0xdc
   14000b1d9:	sahf   
   14000b1da:	test   BYTE PTR [rdi],ah
   14000b1dc:	sbb    DWORD PTR [rax+0xd39d],esp
	...
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	add    eax,0x0
   14000b1f5:	add    BYTE PTR [rax],al
   14000b1f7:	add    BYTE PTR [rsi],al
   14000b1f9:	add    BYTE PTR [rax],al
   14000b1fb:	add    BYTE PTR [rax],al
   14000b1fd:	add    BYTE PTR [rax],al
   14000b1ff:	add    BYTE PTR [rcx],al
   14000b201:	add    BYTE PTR [rax],al
   14000b203:	add    bh,bh
   14000b205:	add    BYTE PTR [rax],al
   14000b207:	add    BYTE PTR [rdx],al
   14000b209:	add    BYTE PTR [rax],al
   14000b20b:	add    BYTE PTR [rcx],al
   14000b20d:	add    BYTE PTR [rax],al
   14000b20f:	add    BYTE PTR [rbx],al
   14000b211:	add    BYTE PTR [rax],al
   14000b213:	add    BYTE PTR [rcx],al
   14000b215:	add    BYTE PTR [rax],al
   14000b217:	add    BYTE PTR [rax+rax*1],al
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	add    DWORD PTR [rax],eax
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	and    al,BYTE PTR [rip+0x21993]        # 0x14002cbb9
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	push   rsp
   14000b229:	mov    ebx,0x0
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	add    BYTE PTR [rax],al
   14000b232:	add    BYTE PTR [rax],al
   14000b234:	add    eax,0x68000000
   14000b239:	mov    ebx,0x400000
	...
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	and    al,BYTE PTR [rip+0x11993]        # 0x14001cbe1
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b251:	mov    ebx,0x0
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	add    BYTE PTR [rax],al
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	add    eax,DWORD PTR [rax]
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	mov    al,0xbb
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	xor    BYTE PTR [rax],al
	...
   14000b26e:	add    BYTE PTR [rax],al
   14000b270:	and    al,BYTE PTR [rip+0x11993]        # 0x14001cc09
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	lock mov ebx,0x0
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	add    BYTE PTR [rax],al
   14000b282:	add    BYTE PTR [rax],al
   14000b284:	add    eax,DWORD PTR [rax]
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	clc    
   14000b289:	mov    ebx,0x200000
	...
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	(bad)  
   14000b2a5:	cmp    bl,BYTE PTR [rdi+0x55]
   14000b2ab:	add    BYTE PTR [rdx],al
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rbx],ah
   14000b2b1:	add    BYTE PTR [rax],al
   14000b2b3:	add    BYTE PTR [rax-0x5fffff4d],ah
   14000b2b9:	movabs ds:0x3a37000000000000,eax
   14000b2c2:	lahf   
   14000b2c3:	push   rbp
   14000b2c4:	add    BYTE PTR [rax],al
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	or     eax,0x94000000
   14000b2cd:	add    al,BYTE PTR [rax]
   14000b2cf:	add    al,bl
   14000b2d1:	mov    bl,0x0
   14000b2d3:	add    al,bl
   14000b2d5:	movabs ds:0x0,eax
	...
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	movabs al,ds:0x0
	...
   14000b355:	add    BYTE PTR [rax],al
   14000b357:	add    BYTE PTR [rax],cl
   14000b359:	loopne 0x14000b35b
   14000b35b:	rex add DWORD PTR [rax],eax
	...
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	shl    BYTE PTR [rbp+0x14000],0x0
   14000b377:	add    al,cl
   14000b379:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b37a:	add    BYTE PTR [rax+0x1],al
   14000b37d:	add    BYTE PTR [rax],al
   14000b37f:	add    BYTE PTR [rax],bl
   14000b381:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b382:	add    BYTE PTR [rax+0x1],al
   14000b385:	add    BYTE PTR [rax],al
   14000b387:	add    BYTE PTR [rax+rax*1],bl
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	add    BYTE PTR [rax],al
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	add    BYTE PTR [rip+0x0],dh        # 0x14000b396
	...
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	push   rdx
   14000b3a1:	push   rbx
   14000b3a2:	rex.R push rbx
   14000b3a4:	or     al,0xba
   14000b3a6:	(bad)  [rbp+0x3b]
   14000b3a9:	(bad)  
   14000b3aa:	and    al,0x48
   14000b3ac:	mov    bh,0x67
   14000b3ae:	sub    DWORD PTR [rbx],ebx
   14000b3b0:	or     DWORD PTR [rbp-0x58],esp
   14000b3b3:	add    DWORD PTR gs:[rax],eax
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	je     0x14000b41b
   14000b3ba:	(bad)  
   14000b3bc:	(bad)  
   14000b3bd:	ins    BYTE PTR es:[rdi],dx
   14000b3be:	cs jo  0x14000b425
   14000b3c1:	(bad)  
	...
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	rex.RXB
   14000b3d9:	rex.XB push r12
   14000b3db:	rex.WR add BYTE PTR [rax],r10b
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	sub    al,0x0
   14000b3e2:	add    BYTE PTR [rax],al
   14000b3e4:	cs je  0x14000b44c
   14000b3e7:	js     0x14000b45d
   14000b3e9:	and    al,0x64
   14000b3eb:	imul   eax,DWORD PTR [rax],0x30000000
   14000b3f1:	adc    BYTE PTR [rax],al
   14000b3f3:	add    BYTE PTR [rax],ch
   14000b3f5:	mov    DWORD PTR [rax],eax
   14000b3f7:	add    BYTE PTR [rsi],ch
   14000b3f9:	je     0x14000b460
   14000b3fb:	js     0x14000b471
   14000b3fd:	and    al,0x6d
   14000b3ff:	outs   dx,BYTE PTR ds:[rsi]
   14000b400:	add    BYTE PTR [rax],al
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	(bad)  
   14000b405:	cdq    
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	adc    al,BYTE PTR [rax]
   14000b40a:	add    BYTE PTR [rax],al
   14000b40c:	cs je  0x14000b474
   14000b40f:	js     0x14000b485
   14000b411:	and    al,0x6d
   14000b413:	outs   dx,BYTE PTR ds:[rsi]
   14000b414:	and    al,0x30
   14000b416:	xor    BYTE PTR [rax],al
   14000b418:	sbb    BYTE PTR [rcx+0xb00000],0x0
   14000b41f:	add    BYTE PTR [rsi],ch
   14000b421:	je     0x14000b488
   14000b423:	js     0x14000b499
   14000b425:	and    al,0x78
   14000b427:	add    BYTE PTR [rax],dh
   14000b429:	(bad)  
   14000b42a:	add    BYTE PTR [rax],al
   14000b42c:	sub    al,BYTE PTR [rax]
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	cs je  0x14000b498
   14000b433:	js     0x14000b4a9
   14000b435:	and    al,0x79
   14000b437:	add    BYTE PTR fs:[rax],al
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	add    BYTE PTR [rax+0x5c00000],ah
   14000b442:	add    BYTE PTR [rax],al
   14000b444:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000b44d:	add    BYTE PTR [rax],al
   14000b44f:	add    al,al
   14000b451:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	adc    BYTE PTR [rax],al
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	xor    BYTE PTR cs:[rax],dh
   14000b45b:	movsxd esp,DWORD PTR [rsi+0x67]
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	shl    BYTE PTR [rbp+0x80000],1
   14000b466:	add    BYTE PTR [rax],al
   14000b468:	cs rex.XB push r10
   14000b46b:	push   rsp
   14000b46c:	and    al,0x58
   14000b46e:	rex.XB
   14000b46f:	add    BYTE PTR [r8],al
   14000b472:	add    BYTE PTR [rax],al
   14000b474:	fsub   DWORD PTR [rbp+0x80000]
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	cs rex.XB push r10
   14000b47f:	push   rsp
   14000b480:	and    al,0x58
   14000b482:	rex.XB
   14000b483:	rex.B
   14000b484:	add    BYTE PTR [r8],al
   14000b487:	add    al,ah
   14000b489:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b48a:	add    BYTE PTR [rax],al
   14000b48c:	adc    BYTE PTR [rax],al
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	cs rex.XB push r10
   14000b493:	push   rsp
   14000b494:	and    al,0x58
   14000b496:	rex.XB push r13
   14000b498:	add    BYTE PTR [rax],al
   14000b49a:	add    BYTE PTR [rax],al
   14000b49c:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b49e:	add    BYTE PTR [rax],al
   14000b4a0:	or     BYTE PTR [rax],al
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	cs rex.XB push r10
   14000b4a7:	push   rsp
   14000b4a8:	and    al,0x58
   14000b4aa:	rex.XB pop r10
   14000b4ac:	add    BYTE PTR [rax],al
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	clc    
   14000b4b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b4b2:	add    BYTE PTR [rax],al
   14000b4b4:	or     BYTE PTR [rax],al
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	cs rex.XB push r10
   14000b4bb:	push   rsp
   14000b4bc:	and    al,0x58
   14000b4be:	rex.WB
   14000b4bf:	add    BYTE PTR [r8],al
   14000b4c2:	add    BYTE PTR [rax],al
   14000b4c4:	add    BYTE PTR [rsi+0x80000],ah
   14000b4ca:	add    BYTE PTR [rax],al
   14000b4cc:	cs rex.XB push r10
   14000b4cf:	push   rsp
   14000b4d0:	and    al,0x58
   14000b4d2:	rex.WB
   14000b4d3:	rex.B
   14000b4d4:	add    BYTE PTR [r8],al
   14000b4d7:	add    BYTE PTR [rax],cl
   14000b4d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b4da:	add    BYTE PTR [rax],al
   14000b4dc:	or     BYTE PTR [rax],al
   14000b4de:	add    BYTE PTR [rax],al
   14000b4e0:	cs rex.XB push r10
   14000b4e3:	push   rsp
   14000b4e4:	and    al,0x58
   14000b4e6:	rex.WB pop r9
   14000b4e8:	add    BYTE PTR [rax],al
   14000b4ea:	add    BYTE PTR [rax],al
   14000b4ec:	adc    BYTE PTR [rsi+0x80000],ah
   14000b4f2:	add    BYTE PTR [rax],al
   14000b4f4:	cs rex.XB push r10
   14000b4f7:	push   rsp
   14000b4f8:	and    al,0x58
   14000b4fa:	rex.WB pop r10
   14000b4fc:	add    BYTE PTR [rax],al
   14000b4fe:	add    BYTE PTR [rax],al
   14000b500:	sbb    BYTE PTR [rsi+0x700000],ah
   14000b506:	add    BYTE PTR [rax],al
   14000b508:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000b511:	add    BYTE PTR [rax],al
   14000b513:	add    BYTE PTR [rax+0x100000a6],dl
   14000b519:	or     eax,0x722e0000
   14000b51e:	fs (bad) 
   14000b520:	je     0x14000b583
   14000b522:	add    BYTE PTR [rax],al
   14000b524:	movabs al,ds:0x2e000002cc0000b3
   14000b52d:	jb     0x14000b593
   14000b52f:	(bad)  
   14000b530:	je     0x14000b593
   14000b532:	and    al,0x7a
   14000b534:	jp     0x14000b5b0
   14000b536:	fs (bad) 
   14000b538:	add    BYTE PTR [eax],al
   14000b53b:	add    BYTE PTR [rax-0x4a],dh
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	pushf  
   14000b541:	(bad)  
   14000b542:	add    BYTE PTR [rax],al
   14000b544:	cs js  0x14000b5ab
   14000b547:	(bad)  
   14000b548:	je     0x14000b5ab
   14000b54a:	add    BYTE PTR [rax],al
   14000b54c:	or     al,0xbd
   14000b54e:	add    BYTE PTR [rax],al
   14000b550:	(bad)  
   14000b551:	add    BYTE PTR [rax],al
   14000b553:	add    BYTE PTR [rsi],ch
   14000b555:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   14000b55e:	add    BYTE PTR [rax],al
   14000b560:	ins    BYTE PTR es:[rdi],dx
   14000b561:	mov    ebp,0x200000
   14000b566:	add    BYTE PTR [rax],al
   14000b568:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000b572:	add    BYTE PTR [rax],al
   14000b574:	nop
   14000b575:	mov    ebp,0x500000
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000b586:	add    BYTE PTR [rax],al
   14000b588:	loopne 0x14000b547
   14000b58a:	add    BYTE PTR [rax],al
   14000b58c:	lods   al,BYTE PTR ds:[rsi]
   14000b58d:	add    BYTE PTR [rax],al
   14000b58f:	add    BYTE PTR [rsi],ch
   14000b591:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000b59a:	add    BYTE PTR [rax],al
   14000b59c:	nop
   14000b59d:	mov    esi,0x500000
   14000b5a2:	add    BYTE PTR [rax],al
   14000b5a4:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000b5ae:	add    BYTE PTR [rax],al
   14000b5b0:	loopne 0x14000b570
   14000b5b2:	add    BYTE PTR [rax],al
   14000b5b4:	int3   
   14000b5b5:	add    DWORD PTR [rax],eax
   14000b5b7:	add    BYTE PTR [rsi],ch
   14000b5b9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000b5c1:	add    BYTE PTR [rax],al
   14000b5c3:	add    BYTE PTR [rax+rax*8+0x140000],ch
   14000b5ca:	add    BYTE PTR [rax],al
   14000b5cc:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000b5d5:	add    BYTE PTR [rax],al
   14000b5d7:	add    al,al
   14000b5d9:	rol    BYTE PTR [rax],0x0
   14000b5dc:	rol    BYTE PTR [rip+0x692e0000],0x64        # 0x1a92eb5e3
   14000b5e3:	(bad)  
   14000b5e4:	je     0x14000b647
   14000b5e6:	and    al,0x34
   14000b5e8:	add    BYTE PTR [rax],al
   14000b5ea:	add    BYTE PTR [rax],al
   14000b5ec:	add    dh,0x0
   14000b5ef:	add    BYTE PTR [rax+0x2e00000d],bl
   14000b5f5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000b5fd:	add    BYTE PTR [rax],al
   14000b5ff:	add    BYTE PTR [rax],al
   14000b601:	loopne 0x14000b603
   14000b603:	add    BYTE PTR [rcx+rax*1+0x642e0000],al
   14000b60a:	(bad)  
   14000b60b:	je     0x14000b66e
   14000b60d:	add    BYTE PTR [rax],al
   14000b60f:	add    BYTE PTR [rax+0x380000e1],dl
   14000b615:	and    BYTE PTR [rax],al
   14000b617:	add    BYTE PTR [rsi],ch
   14000b619:	(bad)  
   14000b61b:	jae    0x14000b61d
   14000b61d:	add    BYTE PTR [rax],al
   14000b61f:	add    BYTE PTR [rax],al
   14000b621:	adc    BYTE PTR [rcx],al
   14000b623:	add    al,ah
   14000b625:	add    al,0x0
   14000b627:	add    BYTE PTR [rsi],ch
   14000b629:	jo     0x14000b68f
   14000b62b:	(bad)  
   14000b62c:	je     0x14000b68f
   14000b62e:	add    BYTE PTR [rax],al
   14000b630:	add    BYTE PTR [rax],ah
   14000b632:	add    DWORD PTR [rax],eax
   14000b634:	push   rax
   14000b635:	add    BYTE PTR [rax],al
   14000b637:	add    BYTE PTR [rsi],ch
   14000b639:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000b642:	add    BYTE PTR [rax],al
   14000b644:	add    BYTE PTR [rax],dh
   14000b646:	add    DWORD PTR [rax],eax
   14000b648:	nop
   14000b649:	add    eax,DWORD PTR [rax]
   14000b64b:	add    BYTE PTR [rsi],ch
   14000b64d:	jb     0x14000b6c2
   14000b64f:	jb     0x14000b6b4
   14000b651:	and    al,0x30
   14000b653:	xor    DWORD PTR [rax],eax
   14000b655:	add    BYTE PTR [rax],al
   14000b657:	add    BYTE PTR [rax-0x57fffecd],dl
   14000b65d:	outs   dx,BYTE PTR ds:[rsi]
   14000b65e:	add    BYTE PTR [rax],al
   14000b660:	cs jb  0x14000b6d6
   14000b663:	jb     0x14000b6c8
   14000b665:	and    al,0x30
   14000b667:	xor    al,BYTE PTR [rax]
   14000b669:	add    BYTE PTR [rax],al
   14000b66b:	add    BYTE PTR [rax],al
   14000b66d:	add    BYTE PTR [rax],al
   14000b66f:	add    BYTE PTR [rcx],al
   14000b671:	add    eax,0x34050002
   14000b676:	add    DWORD PTR [rax],eax
   14000b678:	add    DWORD PTR [rcx],edx
   14000b67a:	add    al,0x0
   14000b67c:	adc    DWORD PTR [rdx],esi
   14000b67e:	or     eax,0xb600c70
   14000b683:	xor    BYTE PTR [rcx],al
   14000b685:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e42c88b
   14000b68b:	jo     0x14000b69a
   14000b68d:	(bad)  
   14000b68e:	or     al,0x50
   14000b690:	or     esi,DWORD PTR [rax]
   14000b692:	add    BYTE PTR [rax],al
   14000b694:	add    DWORD PTR [rcx+rax*1],eax
   14000b697:	add    BYTE PTR [rdx+riz*2],al
   14000b69a:	add    BYTE PTR [rax],al
   14000b69c:	add    DWORD PTR [rbx],ecx
   14000b69e:	add    DWORD PTR [rax],eax
   14000b6a0:	or     eax,DWORD PTR [rdx+0xb010000]
   14000b6a6:	add    DWORD PTR [rax],eax
   14000b6a8:	or     esp,DWORD PTR [rdx+0x4010000]
   14000b6ae:	add    DWORD PTR [rax],eax
   14000b6b0:	add    al,0x82
   14000b6b2:	add    BYTE PTR [rax],al
   14000b6b4:	add    DWORD PTR [rdx],ecx
   14000b6b6:	add    al,0x0
   14000b6b8:	or     dh,BYTE PTR [rsi+rcx*1]
   14000b6bb:	add    BYTE PTR [rdx],cl
   14000b6bd:	mov    dl,0x6
   14000b6bf:	(bad)  
   14000b6c0:	add    DWORD PTR [rcx+rax*1],eax
   14000b6c3:	add    BYTE PTR [rdx+riz*4],al
   14000b6c6:	add    BYTE PTR [rax],al
   14000b6c8:	add    DWORD PTR [rbx],ecx
   14000b6ca:	add    DWORD PTR [rax],eax
   14000b6cc:	or     esp,edx
   14000b6ce:	add    BYTE PTR [rax],al
   14000b6d0:	add    DWORD PTR [rsi],ecx
   14000b6d2:	add    al,BYTE PTR [rax]
   14000b6d4:	(bad)  
   14000b6d5:	add    DWORD PTR [rbx],edx
   14000b6d7:	add    BYTE PTR [rcx],al
   14000b6d9:	clts   
   14000b6db:	add    BYTE PTR [rdi],cl
   14000b6dd:	fs (bad) 
   14000b6df:	add    BYTE PTR [rdi],cl
   14000b6e1:	xor    al,0x6
   14000b6e3:	add    BYTE PTR [rdi],cl
   14000b6e5:	xor    cl,BYTE PTR [rbx]
   14000b6e7:	jo     0x14000b702
   14000b6e9:	or     DWORD PTR cs:[rax],eax
   14000b6ec:	sbb    eax,0x1d009464
   14000b6f1:	xor    al,0x93
   14000b6f3:	add    BYTE PTR [rip+0xe008e01],bl        # 0x14e0144fa
   14000b6f9:	lock or al,0x70
   14000b6fc:	or     edx,DWORD PTR [rax+0x0]
   14000b6ff:	add    BYTE PTR [rax+0x60000098],bh
   14000b705:	add    al,0x0
   14000b707:	add    BYTE PTR [rcx],al
   14000b709:	sbb    BYTE PTR [rdx],cl
   14000b70b:	add    BYTE PTR [rax],bl
   14000b70d:	adc    DWORD PTR fs:[rax],eax
   14000b710:	sbb    BYTE PTR [rax+rdx*1+0x0],dl
   14000b714:	sbb    BYTE PTR [rdi+rcx*1],dh
   14000b717:	add    BYTE PTR [rax],bl
   14000b719:	xchg   edx,eax
   14000b71a:	adc    al,0xe0
   14000b71c:	adc    al,al
   14000b71e:	adc    BYTE PTR [rax+0x1],dh
   14000b721:	adc    eax,0x74150008
   14000b726:	or     DWORD PTR [rax],eax
   14000b728:	adc    eax,0x15000864
   14000b72d:	xor    al,0x7
   14000b72f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0c867
   14000b735:	sbb    BYTE PTR [rdx],cl
   14000b737:	add    BYTE PTR [rax],bl
   14000b739:	or     eax,DWORD PTR fs:[rax]
   14000b73c:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000b740:	sbb    BYTE PTR [rax+rcx*1],dh
   14000b743:	add    BYTE PTR [rax],bl
   14000b745:	xor    dl,BYTE PTR [rax+rsi*8]
   14000b748:	adc    ah,al
   14000b74a:	adc    BYTE PTR [rax+0x19],dh
   14000b74d:	xor    DWORD PTR [rip+0x2b742300],ecx        # 0x16b74da53
   14000b753:	add    BYTE PTR [rbx],ah
   14000b755:	sub    al,BYTE PTR fs:[rax]
   14000b758:	and    esi,DWORD PTR [rcx+rbp*1]
   14000b75b:	add    BYTE PTR [rbx],ah
   14000b75d:	add    DWORD PTR [rdx],esp
   14000b75f:	add    BYTE PTR [rax],bl
   14000b761:	lock (bad) 
   14000b763:	loopne 0x14000b779
   14000b765:	rcl    BYTE PTR [rdx],1
   14000b767:	rcl    BYTE PTR [rax],0x50
   14000b76a:	add    BYTE PTR [rax],al
   14000b76c:	mov    eax,0x98
   14000b771:	add    DWORD PTR [rax],eax
   14000b773:	add    BYTE PTR [rcx],bl
   14000b775:	adc    eax,0xb2060002
   14000b77a:	add    dh,BYTE PTR [rax]
   14000b77c:	mov    eax,0x50000098
   14000b781:	add    BYTE PTR [rax],al
   14000b783:	add    BYTE PTR [rcx],al
   14000b785:	adc    al,0x9
   14000b787:	add    BYTE PTR [rdx+riz*4],dl
   14000b78a:	or     eax,0x9e00bf0
   14000b78f:	rol    BYTE PTR [rdi],1
   14000b791:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360bc08
   14000b798:	add    dl,BYTE PTR [rax+0x0]
   14000b79b:	add    BYTE PTR [rcx],al
   14000b79d:	(bad)  
   14000b79e:	or     DWORD PTR [rax],eax
   14000b7a0:	(bad)  
   14000b7a1:	rex.X sbb esi,eax
   14000b7a4:	sbb    eax,esp
   14000b7a6:	(bad)  
   14000b7a7:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15270cb6d
   14000b7ad:	(bad)  
   14000b7ae:	adc    DWORD PTR [rax+0x10],edx
   14000b7b1:	xor    BYTE PTR [rax],al
   14000b7b3:	add    BYTE PTR [rcx],al
   14000b7b5:	adc    al,0x6
   14000b7b7:	add    BYTE PTR [rsp+riz*2],dl
   14000b7ba:	or     al,BYTE PTR [rax]
   14000b7bc:	adc    al,0x34
   14000b7be:	or     BYTE PTR [rax],al
   14000b7c0:	adc    al,0x52
   14000b7c2:	adc    BYTE PTR [rax+0x1],dh
   14000b7c5:	sbb    al,0xa
   14000b7c7:	add    BYTE PTR [rsp+riz*2],bl
   14000b7ca:	(bad)  
   14000b7cb:	add    BYTE PTR [rsp+rdx*2],bl
   14000b7ce:	or     eax,0xc341c00
   14000b7d3:	add    BYTE PTR [rdx+rsi*2],bl
   14000b7d6:	sbb    al,dh
   14000b7d8:	(bad)  
   14000b7d9:	loopne 0x14000b7ef
   14000b7db:	jo     0x14000b7de
   14000b7dd:	adc    BYTE PTR [rsi],al
   14000b7df:	add    BYTE PTR [rax],dl
   14000b7e1:	fs (bad) 
   14000b7e3:	add    BYTE PTR [rax],dl
   14000b7e5:	xor    al,0xc
   14000b7e7:	add    BYTE PTR [rax],dl
   14000b7e9:	xchg   edx,eax
   14000b7ea:	or     al,0x70
   14000b7ec:	sbb    DWORD PTR [rdi],esp
   14000b7ee:	or     al,BYTE PTR [rax]
   14000b7f0:	sbb    DWORD PTR [rcx],eax
   14000b7f2:	(bad)  
   14000b7f3:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0c3e9
   14000b7f9:	rol    BYTE PTR [rdi],1
   14000b7fb:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360bc72
   14000b802:	add    dl,BYTE PTR [rax-0x48]
   14000b805:	cwde   
   14000b806:	add    BYTE PTR [rax],al
   14000b808:	loopne 0x14000b80a
   14000b80a:	add    BYTE PTR [rax],al
   14000b80c:	add    DWORD PTR [rdi],eax
   14000b80e:	add    al,BYTE PTR [rax]
   14000b810:	(bad)  
   14000b811:	add    DWORD PTR [rcx],edx
   14000b813:	add    BYTE PTR [rcx],al
   14000b815:	(bad)  
   14000b816:	(bad)  
   14000b817:	add    BYTE PTR [rdi],dl
   14000b819:	or     BYTE PTR fs:[rax],al
   14000b81c:	(bad)  
   14000b81d:	xor    al,0x6
   14000b81f:	add    BYTE PTR [rdi],dl
   14000b821:	xor    dl,BYTE PTR [rbx]
   14000b823:	jo     0x14000b826
   14000b825:	adc    eax,0x74150008
   14000b82a:	or     al,0x0
   14000b82c:	adc    eax,0x15000b54
   14000b831:	xor    al,0xa
   14000b833:	add    BYTE PTR [rip+0x1e01172],dl        # 0x141e0c9ab
   14000b839:	clts   
   14000b83b:	add    BYTE PTR [rdi],cl
   14000b83d:	or     DWORD PTR fs:[rax],eax
   14000b840:	sysenter 
   14000b842:	or     BYTE PTR [rax],al
   14000b844:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000b847:	jo     0x14000b862
   14000b849:	sbb    al,BYTE PTR [rsi]
   14000b84b:	add    BYTE PTR [rbx],cl
   14000b84d:	jb     0x14000b856
   14000b84f:	loopne 0x14000b856
   14000b851:	jo     0x14000b857
   14000b853:	(bad)  
   14000b854:	add    edx,DWORD PTR [rax+0x2]
   14000b857:	xor    BYTE PTR [rax+0x30000098],bh
   14000b85d:	add    BYTE PTR [rax],al
   14000b85f:	add    BYTE PTR [rcx],al
   14000b861:	sbb    DWORD PTR [rcx],ecx
   14000b863:	add    BYTE PTR [rcx],bl
   14000b865:	movabs ds:0xc00fd011e013f015,al
   14000b86e:	or     eax,0xb600c70
   14000b873:	push   rax
   14000b874:	or     dh,BYTE PTR [rax]
   14000b876:	add    BYTE PTR [rax],al
   14000b878:	sbb    DWORD PTR [rdi],esp
   14000b87a:	or     al,BYTE PTR [rax]
   14000b87c:	sbb    BYTE PTR [rcx+rdx*1+0x0],ah
   14000b880:	sbb    BYTE PTR [rax+rdx*1+0x0],dl
   14000b884:	sbb    BYTE PTR [rdi+rcx*1],dh
   14000b887:	add    BYTE PTR [rax],bl
   14000b889:	xchg   edx,eax
   14000b88a:	adc    al,0xf0
   14000b88c:	adc    al,al
   14000b88e:	adc    BYTE PTR [rax-0x48],dh
   14000b891:	cwde   
   14000b892:	add    BYTE PTR [rax],al
   14000b894:	add    BYTE PTR [rax],al
   14000b897:	add    BYTE PTR [rcx],bl
   14000b899:	sub    DWORD PTR [rcx],ecx
   14000b89b:	add    BYTE PTR [rbx],bl
   14000b89d:	je     0x14000b8c9
   14000b89f:	add    BYTE PTR [rbx],bl
   14000b8a1:	sub    DWORD PTR fs:[rax],eax
   14000b8a4:	sbb    esi,DWORD PTR [rax+rbp*1]
   14000b8a7:	add    BYTE PTR [rbx],bl
   14000b8a9:	add    DWORD PTR [rsi],esp
   14000b8ab:	add    BYTE PTR [rax],dl
   14000b8ad:	push   rax
   14000b8ae:	add    BYTE PTR [rax],al
   14000b8b0:	mov    eax,0x20000098
   14000b8b5:	add    DWORD PTR [rax],eax
   14000b8b7:	add    BYTE PTR [rcx],bl
   14000b8b9:	(bad)  
   14000b8ba:	add    eax,0x17340d00
   14000b8bf:	add    BYTE PTR [rip+0x6001401],cl        # 0x14600ccc6
   14000b8c5:	jo     0x14000b8c7
   14000b8c7:	add    BYTE PTR [rax-0x6fffff68],bh
   14000b8cd:	add    BYTE PTR [rax],al
   14000b8cf:	add    BYTE PTR [rcx],bl
   14000b8d1:	sub    eax,0x641b000b
   14000b8d6:	fadd   DWORD PTR [rax]
   14000b8d8:	sbb    edx,DWORD PTR [rdi+rdx*8+0x0]
   14000b8dc:	sbb    esi,DWORD PTR [rsi+rdx*8]
   14000b8df:	add    BYTE PTR [rbx],bl
   14000b8e1:	add    edx,edx
   14000b8e3:	add    BYTE PTR [rax+rdx*8],dl
   14000b8e6:	adc    al,al
   14000b8e8:	adc    BYTE PTR [rax+0x0],dh
   14000b8eb:	add    BYTE PTR [rax-0x7fffff68],bh
   14000b8f1:	(bad)  
   14000b8f2:	add    BYTE PTR [rax],al
   14000b8f4:	add    DWORD PTR [rdi],edx
   14000b8f6:	or     al,BYTE PTR [rax]
   14000b8f8:	(bad)  
   14000b8f9:	push   rsp
   14000b8fa:	adc    DWORD PTR [rax],eax
   14000b8fc:	(bad)  
   14000b8fd:	xor    al,0x10
   14000b8ff:	add    BYTE PTR [rdi],dl
   14000b901:	jb     0x14000b916
   14000b903:	lock adc eax,esp
   14000b906:	(bad)  
   14000b908:	or     eax,0x1600c70
   14000b90d:	adc    cl,BYTE PTR [rax]
   14000b90f:	add    BYTE PTR [rdx],dl
   14000b911:	push   rsp
   14000b912:	or     al,0x0
   14000b914:	adc    dh,BYTE PTR [rbx+rcx*1]
   14000b917:	add    BYTE PTR [rdx],dl
   14000b919:	push   rdx
   14000b91a:	(bad)  
   14000b91b:	loopne 0x14000b929
   14000b91d:	jo     0x14000b92a
   14000b91f:	(bad)  
   14000b920:	add    DWORD PTR [rdi],ecx
   14000b922:	(bad)  
   14000b923:	add    BYTE PTR [rdi],cl
   14000b925:	xor    al,0x10
   14000b927:	add    BYTE PTR [rdi],cl
   14000b929:	mov    dl,0x8
   14000b92b:	jo     0x14000b934
   14000b92d:	(bad)  
   14000b92e:	(bad)  
   14000b92f:	push   rax
   14000b930:	add    DWORD PTR [rsi],edx
   14000b932:	or     al,BYTE PTR [rax]
   14000b934:	(bad)  
   14000b935:	xor    al,0x15
   14000b937:	add    BYTE PTR [rsi],dl
   14000b939:	xchg   edx,eax
   14000b93a:	adc    dh,al
   14000b93c:	adc    al,ah
   14000b93e:	(bad)  
   14000b93f:	ror    BYTE PTR [rax+rax*8],1
   14000b942:	or     dh,BYTE PTR [rax+0x9]
   14000b945:	(bad)  
   14000b946:	or     BYTE PTR [rax+0x19],dl
   14000b949:	xor    BYTE PTR [rbx],cl
   14000b94b:	add    BYTE PTR [rdi],bl
   14000b94d:	xor    al,0x3f
   14000b94f:	add    BYTE PTR [rdi],bl
   14000b951:	add    DWORD PTR [rsi],esi
   14000b953:	add    BYTE PTR [rax],dl
   14000b955:	lock (bad) 
   14000b957:	loopne 0x14000b965
   14000b959:	ror    BYTE PTR [rdx],1
   14000b95b:	ror    BYTE PTR [rax],0x70
   14000b95e:	(bad)  
   14000b95f:	(bad)  
   14000b960:	(bad)  
   14000b961:	push   rax
   14000b962:	add    BYTE PTR [rax],al
   14000b964:	mov    eax,0xa0000098
   14000b969:	add    DWORD PTR [rax],eax
   14000b96b:	add    BYTE PTR [rcx],bl
   14000b96d:	and    eax,0x34130009
   14000b972:	(bad)  
   14000b973:	add    BYTE PTR [rbx],dl
   14000b975:	add    DWORD PTR [rdx+0xaf00c00],edx
   14000b97b:	loopne 0x14000b985
   14000b97d:	jo     0x14000b986
   14000b97f:	(bad)  
   14000b980:	(bad)  
   14000b981:	push   rax
   14000b982:	add    BYTE PTR [rax],al
   14000b984:	mov    eax,0x80000098
   14000b989:	add    al,0x0
   14000b98b:	add    BYTE PTR [rcx],al
   14000b98d:	or     al,BYTE PTR [rdx]
   14000b98f:	add    BYTE PTR [rdx],cl
   14000b991:	xor    al,BYTE PTR [rsi]
   14000b993:	xor    BYTE PTR [rcx],bl
   14000b995:	sub    BYTE PTR [rcx],cl
   14000b997:	add    BYTE PTR [rdx],bl
   14000b999:	fs sbb eax,0x1c341a00
   14000b99f:	add    BYTE PTR [rdx],bl
   14000b9a1:	add    DWORD PTR [rsi],edx
   14000b9a3:	add    BYTE PTR [rsi],cl
   14000b9a5:	loopne 0x14000b9b3
   14000b9a7:	jo     0x14000b9b4
   14000b9a9:	push   rax
   14000b9aa:	add    BYTE PTR [rax],al
   14000b9ac:	mov    eax,0xa0000098
   14000b9b1:	add    BYTE PTR [rax],al
   14000b9b3:	add    BYTE PTR [rcx],al
   14000b9b5:	or     al,BYTE PTR [rax+rax*1]
   14000b9b8:	or     dh,BYTE PTR [rsi+rax*1]
   14000b9bb:	add    BYTE PTR [rdx],cl
   14000b9bd:	xor    al,BYTE PTR [rsi]
   14000b9bf:	jo     0x14000b9c2
   14000b9c1:	clts   
   14000b9c3:	add    BYTE PTR [rdi],cl
   14000b9c5:	or     al,BYTE PTR fs:[rax]
   14000b9c8:	sysenter 
   14000b9ca:	or     DWORD PTR [rax],eax
   14000b9cc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000b9cf:	jo     0x14000b9d2
   14000b9d1:	sbb    eax,0x741d000c
   14000b9d6:	or     eax,DWORD PTR [rax]
   14000b9d8:	sbb    eax,0x1d000a64
   14000b9dd:	push   rsp
   14000b9de:	or     DWORD PTR [rax],eax
   14000b9e0:	sbb    eax,0x1d000834
   14000b9e5:	xor    bl,BYTE PTR [rcx]
   14000b9e7:	lock (bad) 
   14000b9e9:	loopne 0x14000ba00
   14000b9eb:	rol    BYTE PTR [rcx],0x13
   14000b9ee:	(bad)  
   14000b9ef:	add    BYTE PTR [rbx],dl
   14000b9f1:	fs adc eax,0x14341300
   14000b9f7:	add    BYTE PTR [rbx],dl
   14000b9f9:	add    DWORD PTR [rdx],edx
   14000b9fb:	add    BYTE PTR [rax+rsi*2],cl
   14000b9fe:	add    BYTE PTR [rax],al
   14000ba00:	add    DWORD PTR [rcx+rax*1],eax
   14000ba03:	add    BYTE PTR [rdx+rax*2],al
   14000ba06:	add    BYTE PTR [rax],al
   14000ba08:	add    DWORD PTR [rax+rcx*1],edx
   14000ba0b:	add    BYTE PTR [rsp+riz*2],dl
   14000ba0e:	or     al,BYTE PTR [rax]
   14000ba10:	adc    al,0x54
   14000ba12:	or     DWORD PTR [rax],eax
   14000ba14:	adc    al,0x34
   14000ba16:	or     BYTE PTR [rax],al
   14000ba18:	adc    al,0x52
   14000ba1a:	adc    BYTE PTR [rax+0x19],dh
   14000ba1d:	(bad)  
   14000ba1e:	or     eax,0xb9742600
   14000ba23:	add    DWORD PTR [rsi],esp
   14000ba25:	fs mov eax,0xb7342601
   14000ba2b:	add    DWORD PTR [rsi],esp
   14000ba2d:	add    DWORD PTR [rax+0x16f01801],esi
   14000ba33:	loopne 0x14000ba49
   14000ba35:	rcl    BYTE PTR [rdx],1
   14000ba37:	rcl    BYTE PTR [rax],0x50
   14000ba3a:	add    BYTE PTR [rax],al
   14000ba3c:	mov    eax,0x70000098
   14000ba41:	or     eax,0x19010000
   14000ba46:	or     al,BYTE PTR [rax]
   14000ba48:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   14000ba4c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14000ba50:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14000ba54:	sbb    DWORD PTR [rax+rcx*1],esi
   14000ba57:	add    BYTE PTR [rcx],bl
   14000ba59:	push   rdx
   14000ba5a:	adc    eax,0x91701e0
   14000ba5f:	add    BYTE PTR [rdi],dl
   14000ba61:	fs xchg edx,eax
   14000ba63:	add    BYTE PTR [rdi],dl
   14000ba65:	push   rsp
   14000ba66:	xchg   ecx,eax
   14000ba67:	add    BYTE PTR [rdi],dl
   14000ba69:	xor    al,0x90
   14000ba6b:	add    BYTE PTR [rdi],dl
   14000ba6d:	add    DWORD PTR [rsi+0x701000],ecx
   14000ba73:	add    BYTE PTR [rcx],bl
   14000ba75:	sbb    eax,DWORD PTR [rbx]
   14000ba77:	add    BYTE PTR [rcx],cl
   14000ba79:	add    DWORD PTR [rdx],esp
   14000ba7b:	add    BYTE PTR [rdx],al
   14000ba7d:	xor    BYTE PTR [rax],al
   14000ba7f:	add    BYTE PTR [rax+0x98],bh
   14000ba85:	add    DWORD PTR [rax],eax
   14000ba87:	add    BYTE PTR [rcx],bl
   14000ba89:	(bad)  
   14000ba8a:	or     eax,0x2e742600
   14000ba8f:	add    DWORD PTR [rsi],esp
   14000ba91:	fs sub eax,0x2c342601
   14000ba97:	add    DWORD PTR [rsi],esp
   14000ba99:	add    DWORD PTR [rsi],esp
   14000ba9b:	add    DWORD PTR [rax],ebx
   14000ba9d:	lock (bad) 
   14000ba9f:	loopne 0x14000bab5
   14000baa1:	rcl    BYTE PTR [rdx],1
   14000baa3:	rcl    BYTE PTR [rax],0x50
   14000baa6:	add    BYTE PTR [rax],al
   14000baa8:	mov    eax,0x20000098
   14000baad:	or     DWORD PTR [rax],eax
   14000baaf:	add    BYTE PTR [rcx],al
   14000bab1:	(bad)  
   14000bab2:	or     eax,DWORD PTR [rax]
   14000bab4:	(bad)  
   14000bab5:	je     0x14000bad0
   14000bab7:	add    BYTE PTR [rdi],bl
   14000bab9:	sbb    BYTE PTR fs:[rax],al
   14000babc:	(bad)  
   14000babd:	xor    al,0x16
   14000babf:	add    BYTE PTR [rdi],bl
   14000bac1:	add    DWORD PTR [rdx],edx
   14000bac3:	add    BYTE PTR [rax+rsi*8],dl
   14000bac6:	adc    ah,al
   14000bac8:	adc    BYTE PTR [rax+0x0],dl
   14000bacb:	add    BYTE PTR [rcx],al
   14000bacd:	adc    al,0x8
   14000bacf:	add    BYTE PTR [rsp+riz*2],dl
   14000bad2:	or     BYTE PTR [rax],al
   14000bad4:	adc    al,0x54
   14000bad6:	(bad)  
   14000bad7:	add    BYTE PTR [rsp+rsi*1],dl
   14000bada:	(bad)  
   14000badb:	add    BYTE PTR [rdx+rsi*1],dl
   14000bade:	adc    BYTE PTR [rax+0x1],dh
   14000bae1:	sbb    cl,BYTE PTR [rdx]
   14000bae3:	add    BYTE PTR [rdx],bl
   14000bae5:	xor    al,0xf
   14000bae7:	add    BYTE PTR [rdx],bl
   14000bae9:	push   rdx
   14000baea:	(bad)  
   14000baeb:	lock adc al,0xe0
   14000baee:	adc    dl,al
   14000baf0:	adc    al,al
   14000baf2:	(bad)  
   14000baf3:	jo     0x14000bb02
   14000baf5:	(bad)  
   14000baf6:	or     al,0x50
   14000baf8:	sbb    DWORD PTR [rdx],ebp
   14000bafa:	or     eax,DWORD PTR [rax]
   14000bafc:	sbb    al,0x34
   14000bafe:	and    BYTE PTR [rax],al
   14000bb00:	sbb    al,0x1
   14000bb02:	sbb    BYTE PTR [rax],al
   14000bb04:	adc    al,dh
   14000bb06:	(bad)  
   14000bb07:	loopne 0x14000bb15
   14000bb09:	ror    BYTE PTR [rdx],1
   14000bb0b:	ror    BYTE PTR [rax],0x70
   14000bb0e:	(bad)  
   14000bb0f:	(bad)  
   14000bb10:	(bad)  
   14000bb11:	push   rax
   14000bb12:	add    BYTE PTR [rax],al
   14000bb14:	mov    eax,0xb8000098
   14000bb19:	add    BYTE PTR [rax],al
   14000bb1b:	add    BYTE PTR [rcx],bl
   14000bb1d:	xor    ecx,DWORD PTR [rbx]
   14000bb1f:	add    BYTE PTR [rdx],ah
   14000bb21:	je     0x14000bb78
   14000bb23:	add    BYTE PTR [rdx],ah
   14000bb25:	fs push rsp
   14000bb27:	add    BYTE PTR [rdx],ah
   14000bb29:	xor    al,0x53
   14000bb2b:	add    BYTE PTR [rdx],ah
   14000bb2d:	add    DWORD PTR [rsi+0x0],ecx
   14000bb30:	adc    al,0xf0
   14000bb32:	adc    ah,al
   14000bb34:	adc    BYTE PTR [rax+0x0],dl
   14000bb37:	add    BYTE PTR [rax+0x60000098],bh
   14000bb3d:	add    al,BYTE PTR [rax]
   14000bb3f:	add    BYTE PTR [rcx],dl
   14000bb41:	sbb    eax,DWORD PTR [rax+rax*1]
   14000bb44:	adc    edx,edx
   14000bb46:	or     al,0x60
   14000bb48:	or     esi,DWORD PTR [rax]
   14000bb4a:	or     dl,BYTE PTR [rax-0x54]
   14000bb4d:	cwde   
   14000bb4e:	add    BYTE PTR [rax],al
   14000bb50:	and    BYTE PTR [rdx-0x10000],dh
   14000bb56:	(bad)  
   14000bb57:	inc    DWORD PTR [rsi+0x99]
   14000bb5d:	add    BYTE PTR [rax],al
   14000bb5f:	add    BYTE PTR [rdx+0x99],dl
   14000bb65:	add    BYTE PTR [rax],al
   14000bb67:	add    BYTE PTR [rbx+rax*4-0x10000],ah
   14000bb6e:	(bad)  
   14000bb6f:	push   rax
   14000bb71:	add    DWORD PTR [rax],0x0
   14000bb74:	add    BYTE PTR [rax],al
   14000bb76:	add    BYTE PTR [rax],al
   14000bb78:	(bad)  
   14000bb79:	test   BYTE PTR [rax],al
   14000bb7b:	add    BYTE PTR [rcx],al
   14000bb7d:	add    BYTE PTR [rax],al
   14000bb7f:	add    BYTE PTR [rdi+0x84],ah
   14000bb85:	add    BYTE PTR [rax],al
   14000bb87:	add    ah,ah
   14000bb89:	test   BYTE PTR [rax],al
   14000bb8b:	add    bh,bh
   14000bb8d:	(bad)  
   14000bb8e:	(bad)  
   14000bb8f:	call   QWORD PTR [rcx]
   14000bb91:	adc    al,0x4
   14000bb93:	add    BYTE PTR [rdx+rdx*4],cl
   14000bb96:	add    eax,0x23003e0
   14000bb9b:	push   rax
   14000bb9c:	lods   al,BYTE PTR ds:[rsi]
   14000bb9d:	cwde   
   14000bb9e:	add    BYTE PTR [rax],al
   14000bba0:	rex.W mov dl,0x0
   14000bba3:	add    bh,bh
   14000bba5:	(bad)  
   14000bba6:	(bad)  
   14000bba7:	jmp    QWORD PTR [rcx+rbx*4+0x0]
   14000bbae:	add    BYTE PTR [rax],al
   14000bbb0:	add    BYTE PTR [rbp-0x10000],al
   14000bbb6:	(bad)  
   14000bbb7:	dec    DWORD PTR [rax-0x7b]
   14000bbba:	add    BYTE PTR [rax],al
   14000bbbc:	add    BYTE PTR [rax],al
   14000bbbe:	add    BYTE PTR [rax],al
   14000bbc0:	mov    ah,0x86
   14000bbc2:	add    BYTE PTR [rax],al
   14000bbc4:	(bad)  
   14000bbc5:	(bad)  
   14000bbc6:	(bad)  
   14000bbc7:	inc    DWORD PTR [rcx]
   14000bbc9:	(bad)  
   14000bbca:	add    al,BYTE PTR [rax]
   14000bbcc:	(bad)  
   14000bbcd:	xor    al,BYTE PTR [rdx]
   14000bbcf:	xor    BYTE PTR [rcx],al
   14000bbd1:	or     al,BYTE PTR [rax+rax*1]
   14000bbd4:	or     dh,BYTE PTR [rax+rcx*1]
   14000bbd7:	add    BYTE PTR [rdx],cl
   14000bbd9:	push   rdx
   14000bbda:	(bad)  
   14000bbdb:	jo     0x14000bbee
   14000bbdd:	sbb    BYTE PTR [rax+rax*1],al
   14000bbe0:	sbb    BYTE PTR [rdx+rcx*1],dh
   14000bbe3:	add    BYTE PTR [rdx+rsi*2],cl
   14000bbe6:	or     BYTE PTR [rax-0x54],dh
   14000bbe9:	cwde   
   14000bbea:	add    BYTE PTR [rax],al
   14000bbec:	jo     0x14000bba0
   14000bbee:	add    BYTE PTR [rax],al
   14000bbf0:	(bad)  
   14000bbf1:	(bad)  
   14000bbf2:	(bad)  
   14000bbf3:	push   QWORD PTR [rsi+0x68000099]
   14000bbf9:	mov    BYTE PTR [rax],al
   14000bbfb:	add    bh,bh
   14000bbfd:	(bad)  
   14000bbfe:	(bad)  
   14000bbff:	push   QWORD PTR [rbp+0x88]
   14000bc05:	add    BYTE PTR [rax],al
   14000bc07:	add    BYTE PTR [rsi],al
   14000bc09:	mov    DWORD PTR [rax],eax
   14000bc0b:	add    bh,bh
   14000bc0d:	(bad)  
   14000bc0e:	(bad)  
   14000bc0f:	inc    DWORD PTR [rcx]
   14000bc11:	adc    ecx,DWORD PTR [rax]
   14000bc13:	add    BYTE PTR [rbx],dl
   14000bc15:	push   rsp
   14000bc16:	or     al,BYTE PTR [rax]
   14000bc18:	adc    esi,DWORD PTR [rcx+rcx*1]
   14000bc1b:	add    BYTE PTR [rbx],dl
   14000bc1d:	xor    cl,BYTE PTR [rdi]
   14000bc1f:	loopne 0x14000bc2e
   14000bc21:	jo     0x14000bc2f
   14000bc23:	(bad)  
   14000bc24:	add    DWORD PTR [rax],edx
   14000bc26:	(bad)  
   14000bc27:	add    BYTE PTR [rax],dl
   14000bc29:	or     eax,DWORD PTR fs:[rax]
   14000bc2c:	adc    BYTE PTR [rdx+rcx*1],dh
   14000bc2f:	add    BYTE PTR [rax],dl
   14000bc31:	jb     0x14000bc3f
   14000bc33:	jo     0x14000bc3e
   14000bc35:	sbb    al,0xb
   14000bc37:	add    BYTE PTR [rsp+rsi*2],bl
   14000bc3a:	sbb    al,0x0
   14000bc3c:	sbb    al,0x64
   14000bc3e:	sbb    eax,DWORD PTR [rax]
   14000bc40:	sbb    al,0x34
   14000bc42:	sbb    al,BYTE PTR [rax]
   14000bc44:	sbb    al,0x1
   14000bc46:	(bad)  
   14000bc47:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0d03d
   14000bc4d:	rol    BYTE PTR [rax],0x0
   14000bc50:	out    0x95,al
   14000bc52:	add    BYTE PTR [rax],al
   14000bc54:	add    DWORD PTR [rax],eax
   14000bc56:	add    BYTE PTR [rax],al
   14000bc58:	movabs al,ds:0xc800008f9600008d
   14000bc61:	cdq    
   14000bc62:	add    BYTE PTR [rax],al
   14000bc64:	xchg   esi,eax
   14000bc65:	pop    QWORD PTR [rax]
   14000bc67:	add    BYTE PTR [rcx],al
   14000bc69:	add    BYTE PTR [rax],al
   14000bc6b:	add    BYTE PTR [rcx],dl
   14000bc6d:	or     al,BYTE PTR [rax+rax*1]
   14000bc70:	or     dh,BYTE PTR [rsi+rax*1]
   14000bc73:	add    BYTE PTR [rdx],cl
   14000bc75:	xor    al,BYTE PTR [rsi]
   14000bc77:	jo     0x14000bc5f
   14000bc79:	xchg   ebp,eax
   14000bc7a:	add    BYTE PTR [rax],al
   14000bc7c:	add    DWORD PTR [rax],eax
   14000bc7e:	add    BYTE PTR [rax],al
   14000bc80:	popf   
   14000bc81:	nop
   14000bc82:	add    BYTE PTR [rax],al
   14000bc84:	loop   0x14000bc16
   14000bc86:	add    BYTE PTR [rax],al
   14000bc88:	in     al,dx
   14000bc89:	cdq    
   14000bc8a:	add    BYTE PTR [rax],al
   14000bc8c:	add    BYTE PTR [rax],al
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	add    DWORD PTR [rdx+rax*1],ecx
   14000bc93:	add    BYTE PTR [rcx+rax*1],cl
   14000bc96:	adc    DWORD PTR [rax],eax
   14000bc98:	or     DWORD PTR [rcx+rax*1],eax
   14000bc9b:	add    BYTE PTR [rdx+riz*1],al
   14000bc9e:	add    BYTE PTR [rax],al
   14000bca0:	out    0x95,al
   14000bca2:	add    BYTE PTR [rax],al
   14000bca4:	add    DWORD PTR [rax],eax
   14000bca6:	add    BYTE PTR [rax],al
   14000bca8:	ins    BYTE PTR es:[rdi],dx
   14000bca9:	xchg   ebx,eax
   14000bcaa:	add    BYTE PTR [rax],al
   14000bcac:	movabs ds:0xa200000001000093,al
   14000bcb5:	xchg   ebx,eax
   14000bcb6:	add    BYTE PTR [rax],al
   14000bcb8:	or     DWORD PTR [rdx],ecx
   14000bcba:	add    al,0x0
   14000bcbc:	or     dh,BYTE PTR [rsi+rax*1]
   14000bcbf:	add    BYTE PTR [rdx],cl
   14000bcc1:	xor    al,BYTE PTR [rsi]
   14000bcc3:	jo     0x14000bcab
   14000bcc5:	xchg   ebp,eax
   14000bcc6:	add    BYTE PTR [rax],al
   14000bcc8:	add    DWORD PTR [rax],eax
   14000bcca:	add    BYTE PTR [rax],al
   14000bccc:	ins    DWORD PTR es:[rdi],dx
   14000bccd:	xchg   esp,eax
   14000bcce:	add    BYTE PTR [rax],al
   14000bcd0:	movabs al,ds:0xa000009a10000094
   14000bcd9:	xchg   esp,eax
   14000bcda:	add    BYTE PTR [rax],al
   14000bcdc:	add    DWORD PTR [rsi],eax
   14000bcde:	add    al,BYTE PTR [rax]
   14000bce0:	(bad)  
   14000bce1:	xor    al,BYTE PTR [rdx]
   14000bce3:	push   rax
   14000bce4:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dbcee
   14000bcea:	or     DWORD PTR [rax],eax
   14000bcec:	or     eax,0x1500632
   14000bcf1:	add    BYTE PTR [rax],al
   14000bcf3:	add    BYTE PTR [rcx],al
   14000bcf5:	sbb    BYTE PTR [rcx],al
   14000bcf7:	add    BYTE PTR [rax],bl
   14000bcf9:	ret    0x0
   14000bcfc:	add    DWORD PTR [rax],ebx
   14000bcfe:	add    DWORD PTR [rax],eax
   14000bd00:	sbb    dl,al
   14000bd02:	add    BYTE PTR [rax],al
   14000bd04:	add    DWORD PTR [rax],ebx
   14000bd06:	add    DWORD PTR [rax],eax
   14000bd08:	sbb    dl,al
   14000bd0a:	add    BYTE PTR [rax],al
   14000bd0c:	add    DWORD PTR [rax],eax
   14000bd0e:	add    BYTE PTR [rax],al
   14000bd10:	movabs al,ds:0x400000e7400000a6
   14000bd19:	and    BYTE PTR [rcx],al
   14000bd1b:	add    al,dl
   14000bd1d:	mov    ebp,0xbe900000
	...
   14000bd2a:	add    BYTE PTR [rax],al
   14000bd2c:	add    DWORD PTR [rax],eax
   14000bd2e:	add    BYTE PTR [rax],al
   14000bd30:	shl    BYTE PTR [rsi-0x18b80000],1
   14000bd36:	add    BYTE PTR [rax],al
   14000bd38:	adc    BYTE PTR [rax],ah
   14000bd3a:	add    DWORD PTR [rax],eax
   14000bd3c:	movabs al,ds:0xbea00000bd
   14000bd45:	add    BYTE PTR [rax],al
   14000bd47:	add    BYTE PTR [rax],al
   14000bd49:	add    BYTE PTR [rax],al
   14000bd4b:	add    BYTE PTR [rcx],al
   14000bd4d:	add    BYTE PTR [rax],al
   14000bd4f:	add    al,ah
   14000bd51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bd52:	add    BYTE PTR [rax],al
   14000bd54:	push   rax
   14000bd55:	out    0x0,eax
   14000bd57:	add    BYTE PTR [rax],al
   14000bd59:	and    BYTE PTR [rcx],al
   14000bd5b:	add    BYTE PTR [rax-0x2fffff43],dl
   14000bd61:	mov    esi,0x0
	...
   14000bd8e:	add    BYTE PTR [rax],al
   14000bd90:	adc    DWORD PTR [rax],eax
   14000bd92:	add    BYTE PTR [rax],al
   14000bd94:	add    BYTE PTR [rax],al
   14000bd96:	add    BYTE PTR [rax+0x0],al
   14000bd9c:	add    BYTE PTR [rax],al
   14000bd9e:	add    BYTE PTR [rax],al
   14000bda0:	xor    bh,BYTE PTR [rsi+0x0]
   14000bda6:	add    BYTE PTR [rax],al
   14000bda8:	push   0xbe
   14000bdad:	add    BYTE PTR [rax],al
   14000bdaf:	add    BYTE PTR [rdx],bl
   14000bdb1:	mov    esi,0x0
   14000bdb6:	add    BYTE PTR [rax],al
   14000bdb8:	cli    
   14000bdb9:	mov    ebp,0x0
   14000bdbe:	add    BYTE PTR [rax],al
   14000bdc0:	rex.WX movabs rsi,0x0
   14000bdca:	add    BYTE PTR [rax],al
   14000bdcc:	add    BYTE PTR [rax],al
   14000bdce:	add    BYTE PTR [rax],al
   14000bdd0:	loopne 0x14000bd8f
	...
   14000bde2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bde4:	outs   dx,BYTE PTR ds:[rsi]
   14000bde5:	jbe    0x14000be4c
   14000bde7:	jb     0x14000be5d
   14000bde9:	push   rbx
   14000bdea:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   14000bdf2:	outs   dx,BYTE PTR ds:[rsi]
   14000bdf3:	addr32 push rbx
   14000bdf5:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x53000000
   14000bdfd:	gs je  0x14000be75
   14000be00:	jo     0x14000be46
   14000be02:	imul   eax,DWORD PTR [rbp+riz*2+0x73],0x796f7274
   14000be0a:	rex.R
   14000be0b:	gs jbe 0x14000be77
   14000be0e:	movsxd esp,DWORD PTR [rbp+0x49]
   14000be11:	outs   dx,BYTE PTR ds:[rsi]
   14000be12:	outs   dx,WORD PTR ds:[rsi]
   14000be14:	imul   r14,QWORD PTR [rbx+0x74],0x0
   14000be1c:	push   rbx
   14000be1d:	gs je  0x14000be95
   14000be20:	jo     0x14000be66
   14000be22:	imul   ecx,DWORD PTR [rdi+0x70],0x65446e65
   14000be29:	jbe    0x14000be7d
   14000be2b:	gs addr32 rex.WXB
   14000be2e:	gs jns 0x14000be31
   14000be31:	add    BYTE PTR [rax],al
   14000be33:	add    BYTE PTR [rbx+0x65],dl
   14000be36:	je     0x14000bead
   14000be38:	jo     0x14000be7e
   14000be3a:	imul   eax,DWORD PTR [rdi+0x65],0x616c4374
   14000be41:	jae    0x14000beb6
   14000be43:	rex.R
   14000be44:	gs jbe 0x14000beba
   14000be47:	push   rdi
   14000be48:	add    BYTE PTR [rax],al
   14000be4a:	add    BYTE PTR [rax],al
   14000be4c:	push   rbx
   14000be4d:	gs je  0x14000bec5
   14000be50:	jo     0x14000be96
   14000be52:	imul   eax,DWORD PTR [rbp+0x6e],0x65446d75
   14000be59:	jbe    0x14000bec4
   14000be5b:	movsxd esp,DWORD PTR [rbp+0x49]
   14000be5e:	outs   dx,BYTE PTR ds:[rsi]
   14000be5f:	je     0x14000bec6
   14000be61:	jb     0x14000bec9
   14000be63:	(bad)  
   14000be64:	movsxd esp,DWORD PTR [rbp+0x73]
   14000be67:	add    BYTE PTR [rax],al
   14000be69:	add    BYTE PTR [rbx+0x65],dl
   14000be6c:	je     0x14000bee3
   14000be6e:	jo     0x14000beb4
   14000be70:	imul   eax,DWORD PTR [rdi+0x65],0x76654474
   14000be77:	imul   esp,DWORD PTR [rbx+0x65],0x65746e49
   14000be7e:	jb     0x14000bee6
   14000be80:	(bad)  
   14000be81:	movsxd esp,DWORD PTR [rbp+0x44]
   14000be84:	gs je  0x14000bee8
   14000be87:	imul   ebp,DWORD PTR [rdi+rdx*2+0x0],0x0
	...
   14000bedf:	add    al,al
   14000bee1:	rol    BYTE PTR [rax],0x0
	...
   14000beec:	(bad)  
   14000beed:	mov    DWORD PTR [rax],0xa00000
   14000bef3:	add    al,bl
   14000bef5:	rol    DWORD PTR [rax],0x0
	...
   14000bf00:	(bad)  
   14000bf01:	retf   0x0
   14000bf04:	sbb    BYTE PTR [rcx-0x3b080000],ah
	...
   14000bf12:	add    BYTE PTR [rax],al
   14000bf14:	(bad)  
   14000bf15:	retf   
   14000bf16:	add    BYTE PTR [rax],al
   14000bf18:	cmp    BYTE PTR [rax+rax*1+0xc63000],ah
	...
   14000bf27:	add    ah,dh
   14000bf29:	int3   
   14000bf2a:	add    BYTE PTR [rax],al
   14000bf2c:	jo     0x14000bed3
   14000bf2e:	add    BYTE PTR [rax],al
   14000bf30:	(bad)  
   14000bf31:	ret    
	...
   14000bf3a:	add    BYTE PTR [rax],al
   14000bf3c:	rex.W int 0x0
   14000bf3f:	add    BYTE PTR [rax-0x7fffff5e],ah
   14000bf45:	ret    
	...
   14000bf4e:	add    BYTE PTR [rax],al
   14000bf50:	mov    ch,cl
   14000bf52:	add    BYTE PTR [rax],al
   14000bf54:	shl    BYTE PTR [rdx-0x3c700000],0x0
	...
   14000bf63:	add    BYTE PTR [rsi-0x2fffff33],dh
   14000bf69:	movabs ds:0xc3a00000,al
   14000bf72:	add    BYTE PTR [rax],al
   14000bf74:	add    BYTE PTR [rax],al
   14000bf76:	add    BYTE PTR [rax],al
   14000bf78:	sbb    dh,cl
   14000bf7a:	add    BYTE PTR [rax],al
   14000bf7c:	loopne 0x14000bf20
   14000bf7e:	add    BYTE PTR [rax],al
   14000bf80:	enter  0xc3,0x0
	...
   14000bf8c:	rex.R (bad) 
   14000bf8e:	add    BYTE PTR [rax],al
   14000bf90:	or     BYTE PTR [rbx-0x3c280000],ah
	...
   14000bf9e:	add    BYTE PTR [rax],al
   14000bfa0:	mov    esi,cs
   14000bfa2:	add    BYTE PTR [rax],al
   14000bfa4:	sbb    BYTE PTR [rbx-0x3ba80000],ah
	...
   14000bfb2:	add    BYTE PTR [rax],al
   14000bfb4:	rex.RX iret 
   14000bfb6:	add    BYTE PTR [rax],al
   14000bfb8:	cwde   
   14000bfb9:	movabs ds:0xc4980000,eax
   14000bfc2:	add    BYTE PTR [rax],al
   14000bfc4:	add    BYTE PTR [rax],al
   14000bfc6:	add    BYTE PTR [rax],al
   14000bfc8:	push   0xffffffffffffffcf
   14000bfca:	add    BYTE PTR [rax],al
   14000bfcc:	fsub   DWORD PTR [rbx-0x3c100000]
	...
   14000bfda:	add    BYTE PTR [rax],al
   14000bfdc:	movabs al,ds:0xa3300000cf
   14000bfe5:	(bad)  
	...
   14000bfee:	add    BYTE PTR [rax],al
   14000bff0:	pop    rax
   14000bff1:	rol    BYTE PTR [rax],1
   14000bff3:	add    BYTE PTR [rax-0x5d],al
   14000bff6:	add    BYTE PTR [rax],al
   14000bff8:	rex.W (bad) 
	...
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	pushf  
   14000c005:	rol    BYTE PTR [rax],1
   14000c007:	add    BYTE PTR [rax-0x57ffff5d],cl
   14000c00d:	(bad)  
	...
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	(bad)  
   14000c019:	rol    BYTE PTR [rax],1
   14000c01b:	add    al,ch
   14000c01d:	movabs ds:0xc4d00000,eax
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	add    BYTE PTR [rax],al
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	rex.WX rol QWORD PTR [rax],1
   14000c02f:	add    BYTE PTR [rax],dl
   14000c031:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	call   0x14000c0fd
   14000c039:	add    BYTE PTR [rax],al
   14000c03b:	add    BYTE PTR [rax],al
   14000c03d:	add    BYTE PTR [rax],al
   14000c03f:	add    BYTE PTR [rcx+rdx*8-0x5bd80000],al
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	sbb    cl,al
	...
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	out    0xd1,al
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	pop    rax
   14000c059:	movabs al,ds:0xc1380000
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	or     al,0xd2
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	js     0x14000c00e
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	rol    cl,0x0
	...
   14000c07b:	add    BYTE PTR [rdx+rdx*8],bh
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	add    BYTE PTR [rcx-0x3e780000],ah
	...
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	rol    DWORD PTR es:[rax],cl
   14000c093:	add    al,cl
   14000c095:	movabs al,ds:0xc1480000
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	add    BYTE PTR [rax],al
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	mov    bl,dl
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	mov    BYTE PTR [rax+0x0],ah
	...
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	add    dh,0x0
   14000c0c3:	add    BYTE PTR [rax],al
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    BYTE PTR [rsi+rax*8+0x0],cl
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	pushf  
   14000c0d1:	mov    BYTE PTR [rax],0x0
   14000c0d4:	add    BYTE PTR [rax],al
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	lods   al,BYTE PTR ds:[rsi]
   14000c0d9:	mov    BYTE PTR [rax],0x0
   14000c0dc:	add    BYTE PTR [rax],al
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	mov    eax,0xc6
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    dh,al
   14000c0e9:	mov    BYTE PTR [rax],0x0
   14000c0ec:	add    BYTE PTR [rax],al
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	fadd   st(6),st
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	add    BYTE PTR [rax],al
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	in     al,dx
   14000c0f9:	mov    BYTE PTR [rax],0x0
   14000c0fc:	add    BYTE PTR [rax],al
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	test   dh,0x0
   14000c103:	add    BYTE PTR [rax],al
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    BYTE PTR [rdx],al
   14000c109:	mov    DWORD PTR [rax],0x0
	...
   14000c117:	add    dl,cl
   14000c119:	rol    DWORD PTR [rax],1
   14000c11b:	add    BYTE PTR [rax],al
   14000c11d:	add    BYTE PTR [rax],al
   14000c11f:	add    BYTE PTR [rax+0xd1],bh
   14000c125:	add    BYTE PTR [rax],al
   14000c127:	add    BYTE PTR [rax+0xd1],ch
	...
   14000c135:	add    BYTE PTR [rax],al
   14000c137:	add    dh,ch
   14000c139:	rol    DWORD PTR [rax],1
	...
   14000c147:	add    BYTE PTR [rbx+rdx*8+0x0],dh
   14000c14b:	add    BYTE PTR [rax],al
   14000c14d:	add    BYTE PTR [rax],al
   14000c14f:	add    BYTE PTR [rax-0x2d],dl
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	add    BYTE PTR [rax],al
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	push   0xd3
   14000c15d:	add    BYTE PTR [rax],al
   14000c15f:	add    dh,dl
   14000c161:	rol    DWORD PTR [rax],cl
   14000c163:	add    BYTE PTR [rax],al
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rsi+0xd3],bh
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    BYTE PTR [rdx],dh
   14000c171:	rol    DWORD PTR [rax],cl
   14000c173:	add    BYTE PTR [rax],al
   14000c175:	add    BYTE PTR [rax],al
   14000c177:	add    BYTE PTR [rbx+rdx*8+0x0],bl
	...
   14000c187:	add    BYTE PTR [rax-0x2e],cl
   14000c18a:	add    BYTE PTR [rax],al
   14000c18c:	add    BYTE PTR [rax],al
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	push   0xd2
   14000c195:	add    BYTE PTR [rax],al
   14000c197:	add    BYTE PTR [rdx+rdx*8+0x0],dl
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	mov    esi,0xd2
   14000c1a5:	add    BYTE PTR [rax],al
   14000c1a7:	add    BYTE PTR [rdx],cl
   14000c1a9:	rol    DWORD PTR [rax],cl
   14000c1ab:	add    BYTE PTR [rax],al
   14000c1ad:	add    BYTE PTR [rax],al
   14000c1af:	add    dh,ch
   14000c1b1:	rol    BYTE PTR [rax],cl
	...
   14000c1bf:	add    BYTE PTR [rsi],ah
   14000c1c1:	rol    BYTE PTR [rax],cl
   14000c1c3:	add    BYTE PTR [rax],al
   14000c1c5:	add    BYTE PTR [rax],al
   14000c1c7:	add    BYTE PTR [rsi],dl
   14000c1c9:	rol    BYTE PTR [rax],cl
	...
   14000c1d7:	add    BYTE PTR [rax+rcx*8+0x0],bl
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	cmp    al,bh
   14000c1e2:	add    BYTE PTR [rax],al
   14000c1e4:	add    BYTE PTR [rax],al
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	rex.WR mov QWORD PTR [rax],0x0
   14000c1ef:	add    BYTE PTR [rsi-0x39],bl
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	add    BYTE PTR [rax],al
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	jo     0x14000c1c1
   14000c1fa:	add    BYTE PTR [rax],al
   14000c1fc:	add    BYTE PTR [rax],al
   14000c1fe:	add    BYTE PTR [rax],al
   14000c200:	add    bh,0x0
   14000c203:	add    BYTE PTR [rax],al
   14000c205:	add    BYTE PTR [rax],al
   14000c207:	add    BYTE PTR [rdi+rax*8+0x0],dl
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	movabs ds:0xb4000000000000c7,al
   14000c219:	mov    DWORD PTR [rax],0x0
   14000c21f:	add    BYTE PTR [rdi+rax*8],ch
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	add    BYTE PTR [rax],al
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	sbb    bh,al
   14000c22a:	add    BYTE PTR [rax],al
   14000c22c:	add    BYTE PTR [rax],al
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	rex.WRX retf 0x0
   14000c234:	add    BYTE PTR [rax],al
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	sbb    al,0xca
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	add    BYTE PTR [rax],al
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	dec    cl
   14000c242:	add    BYTE PTR [rax],al
   14000c244:	add    BYTE PTR [rax],al
   14000c246:	add    BYTE PTR [rax],al
   14000c248:	(bad)  
   14000c249:	leave  
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	add    BYTE PTR [rax],al
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	ror    cl,1
   14000c252:	add    BYTE PTR [rax],al
   14000c254:	add    BYTE PTR [rax],al
   14000c256:	add    BYTE PTR [rax],al
   14000c258:	(bad)  
   14000c259:	leave  
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	add    BYTE PTR [rax],al
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	mov    dl,0xc9
   14000c262:	add    BYTE PTR [rax],al
   14000c264:	add    BYTE PTR [rax],al
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	movabs ds:0x8c000000000000c9,al
   14000c271:	leave  
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	add    BYTE PTR [rax],al
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	jle    0x14000c243
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	add    BYTE PTR [rax],al
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	ins    BYTE PTR es:[rdi],dx
   14000c281:	leave  
   14000c282:	add    BYTE PTR [rax],al
   14000c284:	add    BYTE PTR [rax],al
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	mov    cs,eax
   14000c28a:	add    BYTE PTR [rax],al
   14000c28c:	add    BYTE PTR [rax],al
   14000c28e:	add    BYTE PTR [rax],al
   14000c290:	jp     0x14000c25a
   14000c292:	add    BYTE PTR [rax],al
   14000c294:	add    BYTE PTR [rax],al
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	outs   dx,BYTE PTR ds:[rsi]
   14000c299:	enter  0x0,0x0
   14000c29d:	add    BYTE PTR [rax],al
   14000c29f:	add    BYTE PTR [rax+rcx*8+0x0],bl
   14000c2a3:	add    BYTE PTR [rax],al
   14000c2a5:	add    BYTE PTR [rax],al
   14000c2a7:	add    BYTE PTR [rax-0x38],dl
   14000c2aa:	add    BYTE PTR [rax],al
   14000c2ac:	add    BYTE PTR [rax],al
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	xor    al,0xc8
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	add    BYTE PTR [rax],al
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	es enter 0x0,0x0
   14000c2bd:	add    BYTE PTR [rax],al
   14000c2bf:	add    BYTE PTR [rax],bl
   14000c2c1:	enter  0x0,0x0
   14000c2c5:	add    BYTE PTR [rax],al
   14000c2c7:	add    BYTE PTR [rdx],cl
   14000c2c9:	enter  0x0,0x0
   14000c2cd:	add    BYTE PTR [rax],al
   14000c2cf:	add    dh,dh
   14000c2d1:	mov    DWORD PTR [rax],0x0
   14000c2d7:	add    al,bl
   14000c2d9:	mov    DWORD PTR [rax],0x0
   14000c2df:	add    al,cl
   14000c2e1:	mov    DWORD PTR [rax],0x0
   14000c2e7:	add    BYTE PTR [rax-0x37],bl
   14000c2ea:	add    BYTE PTR [rax],al
   14000c2ec:	add    BYTE PTR [rax],al
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	cmp    al,0xc9
   14000c2f2:	add    BYTE PTR [rax],al
   14000c2f4:	add    BYTE PTR [rax],al
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	sub    cl,cl
   14000c2fa:	add    BYTE PTR [rax],al
   14000c2fc:	add    BYTE PTR [rax],al
   14000c2fe:	add    BYTE PTR [rax],al
   14000c300:	sbb    cl,cl
   14000c302:	add    BYTE PTR [rax],al
   14000c304:	add    BYTE PTR [rax],al
   14000c306:	add    BYTE PTR [rax],al
   14000c308:	or     al,0xc9
   14000c30a:	add    BYTE PTR [rax],al
   14000c30c:	add    BYTE PTR [rax],al
   14000c30e:	add    BYTE PTR [rax],al
   14000c310:	dec    al
   14000c312:	add    BYTE PTR [rax],al
   14000c314:	add    BYTE PTR [rax],al
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	xor    al,0xca
   14000c31a:	add    BYTE PTR [rax],al
   14000c31c:	add    BYTE PTR [rax],al
   14000c31e:	add    BYTE PTR [rax],al
   14000c320:	jrcxz  0x14000c32b
   14000c322:	add    BYTE PTR [rax],al
   14000c324:	add    BYTE PTR [rax],al
   14000c326:	add    BYTE PTR [rax+0xc8f0],al
   14000c32c:	add    BYTE PTR [rax],al
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	(bad)  
   14000c331:	enter  0x0,0x0
   14000c335:	add    BYTE PTR [rax],al
   14000c337:	add    dh,al
   14000c339:	enter  0x0,0x0
   14000c33d:	add    BYTE PTR [rax],al
   14000c33f:	add    BYTE PTR [rax+0xc8],bh
   14000c345:	add    BYTE PTR [rax],al
   14000c347:	add    BYTE PTR [rsi+0xd3],dl
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    BYTE PTR [rax+0xc8],dh
	...
   14000c35d:	add    BYTE PTR [rax],al
   14000c35f:	add    dh,bh
   14000c361:	int3   
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	add    BYTE PTR [rax],al
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	(bad)  
   14000c369:	int    0x0
   14000c36b:	add    BYTE PTR [rax],al
   14000c36d:	add    BYTE PTR [rax],al
   14000c36f:	add    BYTE PTR [rdx],ch
   14000c371:	int    0x0
	...
   14000c37f:	add    BYTE PTR [rdx-0x33],dh
	...
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	test   al,0xcd
	...
   14000c39e:	add    BYTE PTR [rax],al
   14000c3a0:	add    cl,dh
   14000c3a2:	add    BYTE PTR [rax],al
   14000c3a4:	add    BYTE PTR [rax],al
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	fmul   st,st(5)
   14000c3aa:	add    BYTE PTR [rax],al
   14000c3ac:	add    BYTE PTR [rax],al
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	in     al,0xcd
   14000c3b2:	add    BYTE PTR [rax],al
   14000c3b4:	add    BYTE PTR [rax],al
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	lock int 0x0
	...
   14000c3c7:	add    BYTE PTR [rax],bh
   14000c3c9:	(bad)  
	...
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	js     0x14000c3a8
   14000c3da:	add    BYTE PTR [rax],al
   14000c3dc:	add    BYTE PTR [rax],al
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	(bad)  
   14000c3e1:	(bad)  
	...
   14000c3ee:	add    BYTE PTR [rax],al
   14000c3f0:	mov    cs,edi
	...
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	(bad)  
   14000c401:	iret   
   14000c402:	add    BYTE PTR [rax],al
   14000c404:	add    BYTE PTR [rax],al
   14000c406:	add    BYTE PTR [rax],al
   14000c408:	loop   0x14000c3d9
   14000c40a:	add    BYTE PTR [rax],al
   14000c40c:	add    BYTE PTR [rax],al
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	test   bh,0x0
   14000c413:	add    BYTE PTR [rax],al
   14000c415:	add    BYTE PTR [rax],al
   14000c417:	add    BYTE PTR [rax+rdx*8],cl
   14000c41a:	add    BYTE PTR [rax],al
   14000c41c:	add    BYTE PTR [rax],al
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	sbb    al,0xd0
   14000c422:	add    BYTE PTR [rax],al
   14000c424:	add    BYTE PTR [rax],al
   14000c426:	add    BYTE PTR [rax],al
   14000c428:	rol    BYTE PTR cs:[rax],1
   14000c42b:	add    BYTE PTR [rax],al
   14000c42d:	add    BYTE PTR [rax],al
   14000c42f:	add    BYTE PTR [rdx-0x30],al
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	add    BYTE PTR [rax],al
   14000c436:	add    BYTE PTR [rax],al
   14000c438:	lods   al,BYTE PTR ds:[rsi]
   14000c439:	rol    DWORD PTR [rax],cl
	...
   14000c447:	add    BYTE PTR [rdx+0xd0],al
	...
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    BYTE PTR [rsi],al
   14000c459:	iret   
   14000c45a:	add    BYTE PTR [rax],al
   14000c45c:	add    BYTE PTR [rax],al
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	(bad)  
   14000c461:	iret   
   14000c462:	add    BYTE PTR [rax],al
   14000c464:	add    BYTE PTR [rax],al
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	enter  0xce,0x0
   14000c46c:	add    BYTE PTR [rax],al
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	xor    al,0xcf
   14000c472:	add    BYTE PTR [rax],al
   14000c474:	add    BYTE PTR [rax],al
   14000c476:	add    BYTE PTR [rax],al
   14000c478:	mov    dh,0xce
   14000c47a:	add    BYTE PTR [rax],al
   14000c47c:	add    BYTE PTR [rax],al
   14000c47e:	add    BYTE PTR [rax],al
   14000c480:	es iret 
   14000c482:	add    BYTE PTR [rax],al
   14000c484:	add    BYTE PTR [rax],al
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	fmul   st(6),st
	...
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	lock (bad) 
	...
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	rcl    al,1
   14000c4aa:	add    BYTE PTR [rax],al
   14000c4ac:	add    BYTE PTR [rax],al
   14000c4ae:	add    BYTE PTR [rax],al
   14000c4b0:	out    0xd0,al
   14000c4b2:	add    BYTE PTR [rax],al
   14000c4b4:	add    BYTE PTR [rax],al
   14000c4b6:	add    BYTE PTR [rax],al
   14000c4b8:	not    al
   14000c4ba:	add    BYTE PTR [rax],al
   14000c4bc:	add    BYTE PTR [rax],al
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	rcl    al,0x0
	...
   14000c4cf:	add    BYTE PTR [rdx],bh
   14000c4d1:	rol    DWORD PTR [rax],1
   14000c4d3:	add    BYTE PTR [rax],al
   14000c4d5:	add    BYTE PTR [rax],al
   14000c4d7:	add    BYTE PTR [rax],ah
   14000c4d9:	rol    DWORD PTR [rax],1
	...
   14000c4e7:	add    BYTE PTR [rsi-0x2f],ch
	...
   14000c4f6:	add    BYTE PTR [rax],al
   14000c4f8:	js     0x14000c4c4
   14000c4fa:	add    BYTE PTR [rax],al
   14000c4fc:	add    BYTE PTR [rax],al
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	outs   dx,BYTE PTR ds:[rsi]
   14000c501:	retf   0x0
   14000c504:	add    BYTE PTR [rax],al
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	mov    cs,edx
   14000c50a:	add    BYTE PTR [rax],al
   14000c50c:	add    BYTE PTR [rax],al
   14000c50e:	add    BYTE PTR [rax],al
   14000c510:	xchg   esi,eax
   14000c511:	retf   0x0
   14000c514:	add    BYTE PTR [rax],al
   14000c516:	add    BYTE PTR [rax],al
   14000c518:	movabs ds:0xac000000000000ca,al
   14000c521:	retf   0x0
   14000c524:	add    BYTE PTR [rax],al
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	mov    dh,0xca
   14000c52a:	add    BYTE PTR [rax],al
   14000c52c:	add    BYTE PTR [rax],al
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	or     cl,ah
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	add    BYTE PTR [rax],al
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	add    ah,cl
   14000c53a:	add    BYTE PTR [rax],al
   14000c53c:	add    BYTE PTR [rax],al
   14000c53e:	add    BYTE PTR [rax],al
   14000c540:	repnz retf 
   14000c542:	add    BYTE PTR [rax],al
   14000c544:	add    BYTE PTR [rax],al
   14000c546:	add    BYTE PTR [rax],al
   14000c548:	call   0x14000c618
   14000c54d:	add    BYTE PTR [rax],al
   14000c54f:	add    al,ah
   14000c551:	retf   
   14000c552:	add    BYTE PTR [rax],al
   14000c554:	add    BYTE PTR [rax],al
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	enter  0xcb,0x0
   14000c55c:	add    BYTE PTR [rax],al
   14000c55e:	add    BYTE PTR [rax],al
   14000c560:	mov    esi,0xcb
   14000c565:	add    BYTE PTR [rax],al
   14000c567:	add    BYTE PTR [rbx+rcx*8+0x0],dh
   14000c56e:	add    BYTE PTR [rax],al
   14000c570:	pushf  
   14000c571:	retf   
   14000c572:	add    BYTE PTR [rax],al
   14000c574:	add    BYTE PTR [rax],al
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	nop
   14000c579:	retf   
   14000c57a:	add    BYTE PTR [rax],al
   14000c57c:	add    BYTE PTR [rax],al
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	jl     0x14000c54d
   14000c582:	add    BYTE PTR [rax],al
   14000c584:	add    BYTE PTR [rax],al
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	jb     0x14000c555
   14000c58a:	add    BYTE PTR [rax],al
   14000c58c:	add    BYTE PTR [rax],al
   14000c58e:	add    BYTE PTR [rax],al
   14000c590:	push   0xffffffffffffffcb
   14000c592:	add    BYTE PTR [rax],al
   14000c594:	add    BYTE PTR [rax],al
   14000c596:	add    BYTE PTR [rax],al
   14000c598:	(bad)  
   14000c599:	retf   
   14000c59a:	add    BYTE PTR [rax],al
   14000c59c:	add    BYTE PTR [rax],al
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	push   rax
   14000c5a1:	retf   
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	add    BYTE PTR [rax],al
   14000c5a6:	add    BYTE PTR [rax],al
   14000c5a8:	ds retf 
   14000c5aa:	add    BYTE PTR [rax],al
   14000c5ac:	add    BYTE PTR [rax],al
   14000c5ae:	add    BYTE PTR [rax],al
   14000c5b0:	xor    bl,cl
   14000c5b2:	add    BYTE PTR [rax],al
   14000c5b4:	add    BYTE PTR [rax],al
   14000c5b6:	add    BYTE PTR [rax],al
   14000c5b8:	out    dx,al
   14000c5b9:	rol    DWORD PTR [rax],cl
   14000c5bb:	add    BYTE PTR [rax],al
   14000c5bd:	add    BYTE PTR [rax],al
   14000c5bf:	add    BYTE PTR [rsp+rdx*8],al
   14000c5c2:	add    BYTE PTR [rax],al
   14000c5c4:	add    BYTE PTR [rax],al
   14000c5c6:	add    BYTE PTR [rax],al
   14000c5c8:	test   dl,cl
   14000c5ca:	add    BYTE PTR [rax],al
   14000c5cc:	add    BYTE PTR [rax],al
   14000c5ce:	add    BYTE PTR [rax],al
   14000c5d0:	and    cl,bl
   14000c5d2:	add    BYTE PTR [rax],al
   14000c5d4:	add    BYTE PTR [rax],al
   14000c5d6:	add    BYTE PTR [rax],al
   14000c5d8:	(bad)  
   14000c5d9:	retf   
   14000c5da:	add    BYTE PTR [rax],al
   14000c5dc:	add    BYTE PTR [rax],al
   14000c5de:	add    BYTE PTR [rax],al
   14000c5e0:	or     al,0xcb
   14000c5e2:	add    BYTE PTR [rax],al
   14000c5e4:	add    BYTE PTR [rax],al
   14000c5e6:	add    BYTE PTR [rax],al
   14000c5e8:	add    cl,bl
   14000c5ea:	add    BYTE PTR [rax],al
   14000c5ec:	add    BYTE PTR [rax],al
   14000c5ee:	add    BYTE PTR [rax],al
   14000c5f0:	clc    
   14000c5f1:	retf   0x0
   14000c5f4:	add    BYTE PTR [rax],al
   14000c5f6:	add    BYTE PTR [rax],al
   14000c5f8:	(bad)  
   14000c5f9:	retf   0x0
   14000c5fc:	add    BYTE PTR [rax],al
   14000c5fe:	add    BYTE PTR [rax],al
   14000c600:	fmul   st(2),st
   14000c602:	add    BYTE PTR [rax],al
   14000c604:	add    BYTE PTR [rax],al
   14000c606:	add    BYTE PTR [rax],al
   14000c608:	ror    dl,cl
   14000c60a:	add    BYTE PTR [rax],al
   14000c60c:	add    BYTE PTR [rax],al
   14000c60e:	add    BYTE PTR [rax],al
   14000c610:	retf   0xca
   14000c613:	add    BYTE PTR [rax],al
   14000c615:	add    BYTE PTR [rax],al
   14000c617:	add    al,al
   14000c619:	retf   0x0
   14000c61c:	add    BYTE PTR [rax],al
   14000c61e:	add    BYTE PTR [rax],al
   14000c620:	(bad)  
   14000c621:	(bad)  
	...
   14000c62e:	add    BYTE PTR [rax],al
   14000c630:	(bad)  
   14000c631:	int3   
   14000c632:	add    BYTE PTR [rax],al
   14000c634:	add    BYTE PTR [rax],al
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	cmp    ah,cl
   14000c63a:	add    BYTE PTR [rax],al
   14000c63c:	add    BYTE PTR [rax],al
   14000c63e:	add    BYTE PTR [rax],al
   14000c640:	push   rdx
   14000c641:	int3   
   14000c642:	add    BYTE PTR [rax],al
   14000c644:	add    BYTE PTR [rax],al
   14000c646:	add    BYTE PTR [rax],al
   14000c648:	fs int3 
   14000c64a:	add    BYTE PTR [rax],al
   14000c64c:	add    BYTE PTR [rax],al
   14000c64e:	add    BYTE PTR [rax],al
   14000c650:	jle    0x14000c61e
   14000c652:	add    BYTE PTR [rax],al
   14000c654:	add    BYTE PTR [rax],al
   14000c656:	add    BYTE PTR [rax],al
   14000c658:	cwde   
   14000c659:	int3   
   14000c65a:	add    BYTE PTR [rax],al
   14000c65c:	add    BYTE PTR [rax],al
   14000c65e:	add    BYTE PTR [rax],al
   14000c660:	mov    dl,0xcc
   14000c662:	add    BYTE PTR [rax],al
   14000c664:	add    BYTE PTR [rax],al
   14000c666:	add    BYTE PTR [rax],al
   14000c668:	(bad)  
   14000c669:	int3   
   14000c66a:	add    BYTE PTR [rax],al
   14000c66c:	add    BYTE PTR [rax],al
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	loopne 0x14000c63e
	...
   14000c67e:	add    BYTE PTR [rax],al
   14000c680:	rex.WR add BYTE PTR [rbx+0x72],r8b
   14000c684:	gs (bad) 
   14000c686:	je     0x14000c6ed
   14000c688:	push   rax
   14000c689:	outs   dx,BYTE PTR gs:[rsi]
   14000c68b:	add    BYTE PTR [rip+0x6c655303],al        # 0x1ac661994
   14000c691:	movsxd esi,DWORD PTR gs:[rdi+rcx*2+0x62]
   14000c696:	push   0x65
   14000c698:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000c69c:	add    DWORD PTR ds:[rbp+riz*2+0x6c],eax
   14000c6a1:	gs je  0x14000c709
   14000c6a4:	rex.WRXB (bad) 
   14000c6a6:	push   0x65
   14000c6a8:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000c6ac:	or     eax,0x74655303
   14000c6b1:	rex.X imul ecx,DWORD PTR [rbp+0x6f],0x64
   14000c6b6:	add    BYTE PTR gs:[rbx+rax*1],cl
   14000c6ba:	push   rbx
   14000c6bb:	gs je  0x14000c700
   14000c6be:	imul   eax,DWORD PTR [rbx+0x6f],0x6c
   14000c6c2:	outs   dx,DWORD PTR ds:[rsi]
   14000c6c3:	jb     0x14000c6c5
   14000c6c5:	add    BYTE PTR [rcx+0x0],al
   14000c6c8:	rex.XB jb 0x14000c730
   14000c6cb:	(bad)  
   14000c6cc:	je     0x14000c733
   14000c6ce:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000c6d0:	outs   dx,BYTE PTR ds:[rsi]
   14000c6d1:	je     0x14000c71c
   14000c6d3:	outs   dx,BYTE PTR ds:[rsi]
   14000c6d4:	imul   esi,DWORD PTR fs:[rdx+0x65],0x577463
   14000c6dc:	xor    al,0x3
   14000c6de:	push   rbx
   14000c6df:	gs je  0x14000c736
   14000c6e2:	gs js  0x14000c759
   14000c6e5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c6e7:	ins    BYTE PTR es:[rdi],dx
   14000c6e8:	outs   dx,DWORD PTR ds:[rsi]
   14000c6e9:	jb     0x14000c6eb
   14000c6eb:	add    BYTE PTR [rdx+0x6e694c02],dl
   14000c6f1:	gs push rsp
   14000c6f3:	outs   dx,DWORD PTR ds:[rsi]
   14000c6f4:	add    BYTE PTR [rax],al
   14000c6f6:	rex.WB add al,BYTE PTR [r15+0x65]
   14000c6fa:	je     0x14000c748
   14000c6fc:	(bad)  
   14000c6fd:	jns    0x14000c76e
   14000c6ff:	jne    0x14000c775
   14000c701:	add    BYTE PTR [rax+0x766f4d02],ah
   14000c707:	gs push rsp
   14000c709:	outs   dx,DWORD PTR ds:[rsi]
   14000c70a:	rex.RB js 0x14000c70d
   14000c70d:	add    BYTE PTR [rdi+0x44],al
   14000c710:	xor    rsi,QWORD PTR [r10]
   14000c713:	cs fs ins BYTE PTR es:[rdi],dx
   14000c716:	ins    BYTE PTR es:[rdi],dx
   14000c717:	add    BYTE PTR [rsi+0x73694400],dh
   14000c71d:	jo     0x14000c780
   14000c71f:	je     0x14000c784
   14000c721:	push   0x7373654d
   14000c726:	(bad)  
   14000c727:	addr32 gs push rdi
   14000c72a:	add    BYTE PTR [rax],al
   14000c72c:	data16 add cl,BYTE PTR [rbp+0x6f]
   14000c730:	jbe    0x14000c797
   14000c732:	push   rdi
   14000c733:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000c73a:	movabs ds:0x646e695766654400,al
   14000c743:	outs   dx,DWORD PTR ds:[rsi]
   14000c744:	ja     0x14000c796
   14000c746:	jb     0x14000c7b7
   14000c748:	movsxd edx,DWORD PTR [rdi+0x0]
   14000c74b:	add    BYTE PTR [rdx+0x1],bh
   14000c74e:	rex.RXB
   14000c74f:	gs je  0x14000c79f
   14000c752:	outs   dx,DWORD PTR ds:[rsi]
   14000c753:	outs   dx,BYTE PTR ds:[rsi]
   14000c754:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6f666e49
   14000c75c:	push   rdi
   14000c75d:	add    BYTE PTR [rsi+0x74654701],cl
   14000c763:	push   rax
   14000c764:	outs   dx,DWORD PTR ds:[rsi]
   14000c765:	imul   ebp,DWORD PTR [rsi+0x74],0x6e497265
   14000c76c:	outs   dx,WORD PTR ds:[rsi]
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	loop   0x14000c774
   14000c772:	push   rbx
   14000c773:	outs   dx,BYTE PTR gs:[rsi]
   14000c775:	fs rex.WRB
   14000c777:	gs jae 0x14000c7ed
   14000c77a:	(bad)  
   14000c77b:	addr32 gs push rdi
   14000c77e:	add    BYTE PTR [rax],al
   14000c780:	mov    al,0x1
   14000c782:	rex.RXB
   14000c783:	gs je  0x14000c7d9
   14000c786:	jns    0x14000c7fb
   14000c788:	je     0x14000c7ef
   14000c78a:	ins    DWORD PTR es:[rdi],dx
   14000c78b:	rex.WRB
   14000c78c:	gs je  0x14000c801
   14000c78f:	imul   esp,DWORD PTR [rbx+0x73],0x2600000
   14000c796:	rex.WRB
   14000c797:	gs jae 0x14000c80d
   14000c79a:	(bad)  
   14000c79b:	rex.X outs dx,DWORD PTR gs:[esi]
   14000c79f:	js     0x14000c7f8
   14000c7a1:	add    BYTE PTR [rcx+0x0],dh
   14000c7a4:	rex.XB jb 0x14000c80c
   14000c7a7:	(bad)  
   14000c7a8:	je     0x14000c80f
   14000c7aa:	push   rdi
   14000c7ab:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   14000c7b2:	push   rdi
   14000c7b3:	add    BYTE PTR [rcx],ch
   14000c7b5:	add    edx,DWORD PTR [rbx+0x65]
   14000c7b8:	je     0x14000c80e
   14000c7ba:	push   0x64616572
   14000c7bf:	rex.R
   14000c7c0:	gs jae 0x14000c82e
   14000c7c3:	je     0x14000c834
   14000c7c5:	jo     0x14000c7c7
   14000c7c7:	add    BYTE PTR [rdi+0x3],dl
   14000c7ca:	push   rbx
   14000c7cb:	ja     0x14000c836
   14000c7cd:	je     0x14000c832
   14000c7cf:	push   0x6b736544
   14000c7d4:	je     0x14000c845
   14000c7d6:	jo     0x14000c7d8
   14000c7d8:	mov    DWORD PTR [rcx],eax
   14000c7da:	rex.RXB
   14000c7db:	gs je  0x14000c82e
   14000c7de:	outs   dx,DWORD PTR ds:[rsi]
   14000c7df:	imul   ebp,DWORD PTR [rsi+0x74],0x72467265
   14000c7e6:	(bad)  
   14000c7e7:	ins    DWORD PTR es:[rdi],dx
   14000c7e8:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14000c7eb:	outs   dx,WORD PTR ds:[rsi]
   14000c7ed:	imul   rsi,QWORD PTR [rbx+0x74],0x79726f
   14000c7f5:	add    BYTE PTR [rsi+0x74654701],ch
   14000c7fb:	push   rbx
   14000c7fc:	jns    0x14000c871
   14000c7fe:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c800:	ins    BYTE PTR es:[rdi],dx
   14000c801:	outs   dx,DWORD PTR ds:[rsi]
   14000c802:	jb     0x14000c846
   14000c804:	jb     0x14000c87b
   14000c806:	jae    0x14000c870
   14000c808:	add    BYTE PTR [rax],al
   14000c80a:	add    r10,QWORD PTR [rbx+0x68]
   14000c80e:	outs   dx,DWORD PTR ds:[rsi]
   14000c80f:	ja     0x14000c868
   14000c811:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000c818:	add    cl,BYTE PTR [r15+r13*2+0x61]
   14000c81d:	fs push rbx
   14000c81f:	je     0x14000c893
   14000c821:	imul   ebp,DWORD PTR [rsi+0x67],0x1ad0057
   14000c828:	rex.RXB
   14000c829:	gs je  0x14000c87f
   14000c82c:	jns    0x14000c8a1
   14000c82e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c830:	ins    BYTE PTR es:[rdi],dx
   14000c831:	outs   dx,DWORD PTR ds:[rsi]
   14000c832:	jb     0x14000c834
   14000c834:	push   rdx
   14000c835:	add    edx,DWORD PTR [rbx+0x6b]
   14000c838:	imul   esi,DWORD PTR [rax+0x50],0x746e696f
   14000c83f:	gs jb  0x14000c888
   14000c842:	jb     0x14000c8a5
   14000c844:	ins    DWORD PTR es:[rdi],dx
   14000c845:	gs rex.WRB
   14000c847:	gs jae 0x14000c8bd
   14000c84a:	(bad)  
   14000c84b:	addr32 gs jae 0x14000c84f
   14000c84f:	add    dl,cl
   14000c851:	add    dl,BYTE PTR [rdx+0x65]
   14000c854:	ins    BYTE PTR es:[rdi],dx
   14000c855:	gs (bad) 
   14000c857:	jae    0x14000c8be
   14000c859:	rex.R
   14000c85a:	rex.XB add r15b,dil
   14000c85d:	add    DWORD PTR [rcx+0x6e],ecx
   14000c860:	jbe    0x14000c8c3
   14000c862:	ins    BYTE PTR es:[rdi],dx
   14000c863:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x63655265
   14000c86b:	je     0x14000c86d
   14000c86d:	add    BYTE PTR [rsi],dh
   14000c86f:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   14000c873:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   14000c878:	push   rdi
   14000c879:	add    BYTE PTR [rdx+rax*1+0x69676552],ch
   14000c880:	jae    0x14000c8f6
   14000c882:	gs jb  0x14000c8c8
   14000c885:	ins    BYTE PTR es:[rdi],dx
   14000c886:	(bad)  
   14000c887:	jae    0x14000c8fc
   14000c889:	rex.RB js 0x14000c8e3
   14000c88c:	add    BYTE PTR [rax],al
   14000c88e:	rex.RXB add r10d,DWORD PTR [r11+0x68]
   14000c892:	outs   dx,DWORD PTR ds:[rsi]
   14000c893:	ja     0x14000c8d8
   14000c895:	jne    0x14000c909
   14000c897:	jae    0x14000c908
   14000c899:	jb     0x14000c89b
   14000c89b:	add    BYTE PTR [rbx+0x3],ch
   14000c89e:	push   rsp
   14000c89f:	jb     0x14000c902
   14000c8a1:	outs   dx,BYTE PTR ds:[rsi]
   14000c8a2:	jae    0x14000c910
   14000c8a4:	(bad)  
   14000c8a5:	je     0x14000c90c
   14000c8a7:	rex.WRB
   14000c8a8:	gs jae 0x14000c91e
   14000c8ab:	(bad)  
   14000c8ac:	add    BYTE PTR gs:[eax],al
   14000c8b0:	cmp    BYTE PTR [rcx],al
   14000c8b2:	rex.RXB
   14000c8b3:	gs je  0x14000c8fa
   14000c8b6:	rex.XB add BYTE PTR [r14],cl
   14000c8b9:	add    BYTE PTR [rdx+0x65],al
   14000c8bc:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
   14000c8c4:	add    BYTE PTR [rax],al
   14000c8c6:	rex.WR add BYTE PTR [rbx+0x6c],r8b
   14000c8ca:	outs   dx,DWORD PTR ds:[rsi]
   14000c8cb:	jae    0x14000c932
   14000c8cd:	rex.R
   14000c8ce:	gs jae 0x14000c93c
   14000c8d1:	je     0x14000c942
   14000c8d3:	jo     0x14000c8d5
   14000c8d5:	add    al,bh
   14000c8d7:	add    BYTE PTR [rbp+0x6e],al
   14000c8da:	jne    0x14000c949
   14000c8dc:	imul   r14d,DWORD PTR [rbx+0x70],0x5379616c
   14000c8e4:	gs je  0x14000c95b
   14000c8e7:	imul   ebp,DWORD PTR [rsi+0x67],0x57784573
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	pop    rax
   14000c8f1:	add    cl,BYTE PTR [rbp+0x65]
   14000c8f4:	jae    0x14000c969
   14000c8f6:	(bad)  
   14000c8f7:	addr32 gs rex.X
   14000c8fa:	gs gs jo 0x14000c8fe
   14000c8fe:	xor    al,0x2
   14000c900:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000c902:	(bad)  
   14000c903:	fs rex.XB jne 0x14000c979
   14000c907:	jae    0x14000c978
   14000c909:	jb     0x14000c962
   14000c90b:	add    bh,dl
   14000c90d:	add    BYTE PTR [rdx+rsi*2+0x61],al
   14000c911:	ja     0x14000c967
   14000c913:	gs js  0x14000c98a
   14000c916:	push   rdi
   14000c917:	add    BYTE PTR [rbx+0x736f5002],al
   14000c91d:	je     0x14000c96c
   14000c91f:	gs jae 0x14000c995
   14000c922:	(bad)  
   14000c923:	addr32 gs push rdi
   14000c926:	add    BYTE PTR [rax],al
   14000c928:	jne    0x14000c92d
   14000c92a:	push   rbp
   14000c92b:	outs   dx,BYTE PTR ds:[rsi]
   14000c92c:	jb     0x14000c993
   14000c92e:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14000c936:	(bad)  
   14000c937:	jae    0x14000c9ac
   14000c939:	push   rdi
   14000c93a:	add    BYTE PTR [rax],al
   14000c93c:	and    eax,0x61684300
   14000c941:	outs   dx,BYTE PTR ds:[rsi]
   14000c942:	imul   r14d,DWORD PTR gs:[ebx+0x70],0x5379616c
   14000c94c:	gs je  0x14000c9c3
   14000c94f:	imul   ebp,DWORD PTR [rsi+0x67],0x57784573
   14000c956:	add    BYTE PTR [rax],al
   14000c958:	mov    ah,0x1
   14000c95a:	rex.RXB
   14000c95b:	gs je  0x14000c9b2
   14000c95e:	push   0x64616572
   14000c963:	rex.R
   14000c964:	gs jae 0x14000c9d2
   14000c967:	je     0x14000c9d8
   14000c969:	jo     0x14000c96b
   14000c96b:	add    BYTE PTR [rdx+rax*1+0x74736f50],al
   14000c972:	push   rcx
   14000c973:	jne    0x14000c9de
   14000c975:	je     0x14000c9c4
   14000c977:	gs jae 0x14000c9ed
   14000c97a:	(bad)  
   14000c97b:	add    BYTE PTR gs:[eax+0x1],bh
   14000c980:	rex.RXB
   14000c981:	gs je  0x14000c9d1
   14000c984:	gs jae 0x14000c9fa
   14000c987:	(bad)  
   14000c988:	addr32 gs push rdi
   14000c98b:	add    ch,dh
   14000c98d:	add    BYTE PTR [rbp+0x6e],al
   14000c990:	jne    0x14000c9ff
   14000c992:	imul   r14d,DWORD PTR [rbx+0x70],0x4d79616c
   14000c99a:	outs   dx,DWORD PTR ds:[rsi]
   14000c99b:	outs   dx,BYTE PTR ds:[rsi]
   14000c99c:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0xae0073
   14000c9a4:	rex.R
   14000c9a5:	gs jae 0x14000ca1c
   14000c9a8:	jb     0x14000ca19
   14000c9aa:	jns    0x14000ca03
   14000c9ac:	imul   ebp,DWORD PTR [rsi+0x64],0x6100776f
   14000c9b3:	add    BYTE PTR [rbx+0x72],al
   14000c9b6:	gs (bad) 
   14000c9b8:	je     0x14000ca1f
   14000c9ba:	rex.R
   14000c9bb:	gs jae 0x14000ca29
   14000c9be:	je     0x14000ca2f
   14000c9c0:	jo     0x14000ca19
   14000c9c2:	add    BYTE PTR [rax],al
   14000c9c4:	jmp    0x14000c9c6
   14000c9c6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c9c8:	fs push rax
   14000c9ca:	(bad)  
   14000c9cb:	imul   ebp,DWORD PTR [rsi+0x74],0x1a10000
   14000c9d2:	rex.RXB
   14000c9d3:	gs je  0x14000ca28
   14000c9d6:	(bad)  
   14000c9d7:	ja     0x14000ca22
   14000c9d9:	outs   dx,BYTE PTR ds:[rsi]
   14000c9da:	jo     0x14000ca51
   14000c9dc:	je     0x14000ca22
   14000c9de:	gs jbe 0x14000ca4a
   14000c9e1:	movsxd esp,DWORD PTR [rbp+0x49]
   14000c9e4:	outs   dx,BYTE PTR ds:[rsi]
   14000c9e5:	outs   dx,WORD PTR ds:[rsi]
   14000c9e7:	push   rdi
   14000c9e8:	add    BYTE PTR [rax],al
   14000c9ea:	(bad)  
   14000c9eb:	add    DWORD PTR [rdi+0x65],eax
   14000c9ee:	je     0x14000ca40
   14000c9f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c9f1:	imul   ebp,DWORD PTR [rsi+0x74],0x65447265
   14000c9f8:	jbe    0x14000ca63
   14000c9fa:	movsxd esp,DWORD PTR [rbp+0x0]
   14000c9fd:	add    BYTE PTR [rcx+rax*1+0x50746547],al
   14000ca04:	outs   dx,DWORD PTR ds:[rsi]
   14000ca05:	imul   ebp,DWORD PTR [rsi+0x74],0x65447265
   14000ca0c:	jbe    0x14000ca77
   14000ca0e:	movsxd esp,DWORD PTR [rbp+0x50]
   14000ca11:	jb     0x14000ca82
   14000ca13:	jo     0x14000ca7a
   14000ca15:	jb     0x14000ca8b
   14000ca17:	imul   esp,DWORD PTR [rbp+0x73],0x1850000
   14000ca1e:	rex.RXB
   14000ca1f:	gs je  0x14000ca72
   14000ca22:	outs   dx,DWORD PTR ds:[rsi]
   14000ca23:	imul   ebp,DWORD PTR [rsi+0x74],0x65447265
   14000ca2a:	jbe    0x14000ca95
   14000ca2c:	movsxd esp,DWORD PTR [rbp+0x52]
   14000ca2f:	movsxd esi,DWORD PTR gs:[rbx+rsi*2+0x0]
   14000ca34:	movabs ds:0x5077615274654701,eax
   14000ca3d:	outs   dx,DWORD PTR ds:[rsi]
   14000ca3e:	imul   ebp,DWORD PTR [rsi+0x74],0x65447265
   14000ca45:	jbe    0x14000cab0
   14000ca47:	movsxd esp,DWORD PTR [rbp+0x44]
   14000ca4a:	(bad)  
   14000ca4b:	je     0x14000caae
   14000ca4d:	add    BYTE PTR [rsi+0x74654701],al
   14000ca53:	push   rax
   14000ca54:	outs   dx,DWORD PTR ds:[rsi]
   14000ca55:	imul   ebp,DWORD PTR [rsi+0x74],0x65447265
   14000ca5c:	jbe    0x14000cac7
   14000ca5e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ca61:	add    BYTE PTR [rbp+0x53],dl
   14000ca64:	rex.RB push r10
   14000ca66:	xor    esi,DWORD PTR [rdx]
   14000ca68:	cs fs ins BYTE PTR es:[rdi],dx
   14000ca6b:	ins    BYTE PTR es:[rdi],dx
   14000ca6c:	add    BYTE PTR [rax],al
   14000ca6e:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a3742deb
   14000ca74:	push   0xffffffff8a000072
   14000ca79:	add    ebx,DWORD PTR [rdi+0x77]
   14000ca7c:	movsxd esi,DWORD PTR [rbx+0x69]
   14000ca7f:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000ca82:	add    BYTE PTR [rax],al
   14000ca84:	sbb    eax,DWORD PTR [rip+0x74736377]        # 0x1b4742e01
   14000ca8a:	outs   dx,DWORD PTR ds:[rsi]
   14000ca8b:	jne    0x14000caf9
   14000ca8d:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000ca91:	jb     0x14000caf8
   14000ca93:	add    BYTE PTR gs:[rax],al
   14000ca96:	xchg   esp,eax
   14000ca97:	add    ebx,DWORD PTR [rdi+0x77]
   14000ca9a:	movsxd esi,DWORD PTR [rbx+0x6e]
   14000ca9d:	imul   esp,DWORD PTR [rbx+0x6d],0x4860070
   14000caa4:	ins    DWORD PTR es:[rdi],dx
   14000caa5:	(bad)  
   14000caa6:	ins    BYTE PTR es:[rdi],dx
   14000caa7:	ins    BYTE PTR es:[rdi],dx
   14000caa8:	outs   dx,DWORD PTR ds:[rsi]
   14000caa9:	movsxd eax,DWORD PTR [rax]
   14000caab:	add    BYTE PTR [rsi+0x63775f03],cl
   14000cab1:	jae    0x14000cb1f
   14000cab3:	ja     0x14000cb27
   14000cab5:	add    BYTE PTR [rax],bl
   14000cab7:	add    eax,0x74736377
   14000cabc:	outs   dx,DWORD PTR ds:[rsi]
   14000cabd:	ins    BYTE PTR es:[rdi],dx
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	adc    al,0x5
   14000cac2:	ja     0x14000cb27
   14000cac4:	jae    0x14000cb39
   14000cac6:	je     0x14000cb3a
   14000cac8:	add    BYTE PTR [rax],al
   14000caca:	rex.XB add al,0x66
   14000cacd:	outs   dx,DWORD PTR ds:[rsi]
   14000cace:	jo     0x14000cb35
   14000cad0:	outs   dx,BYTE PTR ds:[rsi]
   14000cad1:	add    BYTE PTR [rbp+0x4],al
   14000cad4:	data16 jo 0x14000cb49
   14000cad7:	imul   ebp,DWORD PTR [rsi+0x74],0x3690066
   14000cade:	pop    rdi
   14000cadf:	jbe    0x14000cb54
   14000cae1:	outs   dx,BYTE PTR ds:[rsi]
   14000cae2:	ja     0x14000cb54
   14000cae4:	jb     0x14000cb4f
   14000cae6:	outs   dx,BYTE PTR ds:[rsi]
   14000cae7:	je     0x14000cb4f
   14000cae9:	add    BYTE PTR [rbx+0x3],ah
   14000caec:	pop    rdi
   14000caed:	jbe    0x14000cb62
   14000caef:	outs   dx,BYTE PTR ds:[rsi]
   14000caf0:	jo     0x14000cb64
   14000caf2:	imul   ebp,DWORD PTR [rsi+0x74],0x16000066
   14000caf9:	add    eax,0x74736377
   14000cafe:	outs   dx,DWORD PTR ds:[rsi]
   14000caff:	imul   eax,DWORD PTR [rax],0x0
   14000cb02:	ss add al,0x66
   14000cb05:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14000cb09:	add    BYTE PTR gs:[rax],al
   14000cb0c:	test   DWORD PTR [rbx],eax
   14000cb0e:	pop    rdi
   14000cb0f:	ja     0x14000cb74
   14000cb11:	jae    0x14000cb77
   14000cb13:	jne    0x14000cb85
   14000cb15:	add    BYTE PTR [rdi+0x61635f00],bh
   14000cb1b:	ins    BYTE PTR es:[rdi],dx
   14000cb1c:	ins    BYTE PTR es:[rdi],dx
   14000cb1d:	outs   dx,BYTE PTR ds:[rsi]
   14000cb1e:	gs ja  0x14000cb89
   14000cb21:	add    BYTE PTR [rbp+0x0],dl
   14000cb24:	pop    rdi
   14000cb25:	pop    rax
   14000cb26:	movsxd esi,DWORD PTR [rax+0x74]
   14000cb29:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000cb32:	pop    rdi
   14000cb33:	(bad)  
   14000cb34:	ins    DWORD PTR es:[rdi],dx
   14000cb35:	jae    0x14000cb9e
   14000cb37:	pop    rdi
   14000cb38:	gs js  0x14000cba4
   14000cb3b:	je     0x14000cb3d
   14000cb3d:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000cb43:	addr32 gs je 0x14000cbb4
   14000cb47:	(bad)  
   14000cb48:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000cb4f:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000cb55:	gs je  0x14000cbb7
   14000cb58:	(bad)  
   14000cb59:	jo     0x14000cbcb
   14000cb5b:	pop    rdi
   14000cb5c:	je     0x14000cbd7
   14000cb5e:	jo     0x14000cbc5
   14000cb60:	add    BYTE PTR [rax],al
   14000cb62:	xor    al,BYTE PTR [riz*2+0x746978]
   14000cb69:	add    BYTE PTR [rsi],cl
   14000cb6b:	add    DWORD PTR [rdi+0x65],ebx
   14000cb6e:	js     0x14000cbd9
   14000cb70:	je     0x14000cb72
   14000cb72:	rol    DWORD PTR [rax],0x5f
   14000cb75:	movsxd esp,DWORD PTR [rbp+0x78]
   14000cb78:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000cb80:	jae    0x14000cbe7
   14000cb82:	je     0x14000cbf9
   14000cb84:	jae    0x14000cbeb
   14000cb86:	jb     0x14000cbf5
   14000cb88:	(bad)  
   14000cb89:	je     0x14000cbf3
   14000cb8b:	gs jb  0x14000cc00
   14000cb8e:	add    BYTE PTR [rax],al
   14000cb90:	jge    0x14000cb93
   14000cb92:	pop    rdi
   14000cb93:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000cb9a:	ins    DWORD PTR es:[rdi],dx
   14000cb9b:	add    BYTE PTR [rdi+0x0],dl
   14000cb9e:	pop    rdi
   14000cb9f:	pop    rdi
   14000cba0:	rex.XB pop r15
   14000cba2:	jae    0x14000cc14
   14000cba4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000cba8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000cbaf:	ins    BYTE PTR es:[rdi],dx
   14000cbb0:	gs jb  0x14000cbb3
   14000cbb3:	add    BYTE PTR [rdx+0x63775f03],al
   14000cbb9:	ins    DWORD PTR es:[rdi],dx
   14000cbba:	fs ins BYTE PTR es:[rdi],dx
   14000cbbc:	outs   dx,BYTE PTR ds:[rsi]
   14000cbbd:	add    BYTE PTR [rdi],ah
   14000cbbf:	add    DWORD PTR [rdi+0x66],ebx
   14000cbc2:	ins    DWORD PTR es:[rdi],dx
   14000cbc3:	outs   dx,DWORD PTR ds:[rsi]
   14000cbc4:	fs add BYTE PTR gs:[rax],al
   14000cbc8:	rol    BYTE PTR [rax],cl
   14000cbca:	pop    rdi
   14000cbcb:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000cbce:	ins    DWORD PTR es:[rdi],dx
   14000cbcf:	outs   dx,DWORD PTR ds:[rsi]
   14000cbd0:	fs add BYTE PTR gs:[rax],al
   14000cbd4:	ins    DWORD PTR es:[rdi],dx
   14000cbd5:	jae    0x14000cc4d
   14000cbd7:	movsxd esi,DWORD PTR [rdx+0x74]
   14000cbda:	cs fs ins BYTE PTR es:[rdi],dx
   14000cbdd:	ins    BYTE PTR es:[rdi],dx
   14000cbde:	add    BYTE PTR [rax],al
   14000cbe0:	out    0x1,al
   14000cbe2:	pop    rdi
   14000cbe3:	ins    BYTE PTR es:[rdi],dx
   14000cbe4:	outs   dx,DWORD PTR ds:[rsi]
   14000cbe5:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000cbe8:	add    ebx,DWORD PTR [r15+0x75]
   14000cbec:	outs   dx,BYTE PTR ds:[rsi]
   14000cbed:	ins    BYTE PTR es:[rdi],dx
   14000cbee:	outs   dx,DWORD PTR ds:[rsi]
   14000cbef:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000cbf2:	jnp    0x14000cbf4
   14000cbf4:	pop    rdi
   14000cbf5:	pop    rdi
   14000cbf6:	fs ins BYTE PTR es:[rdi],dx
   14000cbf8:	ins    BYTE PTR es:[rdi],dx
   14000cbf9:	outs   dx,DWORD PTR ds:[rsi]
   14000cbfa:	outs   dx,BYTE PTR ds:[rsi]
   14000cbfb:	gs js  0x14000cc67
   14000cbfe:	je     0x14000cc00
   14000cc00:	nop
   14000cc01:	add    bl,BYTE PTR [rdi+0x6f]
   14000cc04:	outs   dx,BYTE PTR ds:[rsi]
   14000cc05:	gs js  0x14000cc71
   14000cc08:	je     0x14000cc0a
   14000cc0a:	(bad)  
   14000cc0b:	add    BYTE PTR [rdi],bh
   14000cc0d:	je     0x14000cc74
   14000cc0f:	jb     0x14000cc7e
   14000cc11:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000cc18:	pop    rcx
   14000cc19:	pop    r8
   14000cc1b:	pop    rax
   14000cc1c:	pop    rdx
   14000cc1d:	add    BYTE PTR [rbp+0x0],al
   14000cc20:	rex.RB je 0x14000cc9a
   14000cc23:	rex.RXB
   14000cc24:	gs je  0x14000cc7b
   14000cc27:	jb     0x14000cc8a
   14000cc29:	movsxd esp,DWORD PTR [rbp+0x45]
   14000cc2c:	outs   dx,BYTE PTR ds:[rsi]
   14000cc2d:	(bad)  
   14000cc2e:	(bad)  
   14000cc2f:	ins    BYTE PTR es:[rdi],dx
   14000cc30:	gs rex.WR
   14000cc32:	gs jbe 0x14000cc9a
   14000cc35:	ins    BYTE PTR es:[rdi],dx
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	add    BYTE PTR [rbp+0x74],r8b
   14000cc3c:	ja     0x14000cc85
   14000cc3e:	gs je  0x14000cc95
   14000cc41:	jb     0x14000cca4
   14000cc43:	movsxd esp,DWORD PTR [rbp+0x45]
   14000cc46:	outs   dx,BYTE PTR ds:[rsi]
   14000cc47:	(bad)  
   14000cc48:	(bad)  
   14000cc49:	ins    BYTE PTR es:[rdi],dx
   14000cc4a:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000cc4d:	(bad)  
   14000cc4e:	addr32 jae 0x14000cc51
   14000cc51:	add    BYTE PTR [rdx+0x0],dl
   14000cc54:	rex.RB je 0x14000ccce
   14000cc57:	push   rsp
   14000cc58:	jb     0x14000ccbb
   14000cc5a:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000cc5d:	gs jae 0x14000ccd3
   14000cc60:	(bad)  
   14000cc61:	add    BYTE PTR gs:[ebp+0x0],cl
   14000cc66:	rex.RB je 0x14000cce0
   14000cc69:	push   rdx
   14000cc6a:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000cc73:	(bad)  
   14000cc74:	movsxd esp,DWORD PTR [rbp+0x47]
   14000cc77:	jne    0x14000cce2
   14000cc79:	fs jae 0x14000ccd3
   14000cc7c:	add    BYTE PTR [rax],al
   14000cc7e:	push   rsp
   14000cc7f:	add    BYTE PTR [rbp+0x74],al
   14000cc82:	ja     0x14000ccd9
   14000cc84:	outs   dx,BYTE PTR ds:[rsi]
   14000cc85:	jb     0x14000ccec
   14000cc87:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000cc8f:	(bad)  
   14000cc90:	movsxd esp,DWORD PTR [rbp+0x47]
   14000cc93:	jne    0x14000ccfe
   14000cc95:	fs jae 0x14000cc98
   14000cc98:	rex.RX add BYTE PTR [rbp+0x74],r8b
   14000cc9c:	ja     0x14000cce5
   14000cc9e:	gs je  0x14000ccf5
   14000cca1:	jb     0x14000cd04
   14000cca3:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000cca6:	outs   dx,DWORD PTR ds:[rsi]
   14000cca7:	addr32 addr32 gs jb 0x14000ccf4
   14000ccac:	(bad)  
   14000ccad:	outs   dx,BYTE PTR ds:[rsi]
   14000ccae:	fs ins BYTE PTR es:[rdi],dx
   14000ccb0:	gs add dh,al
   14000ccb3:	add    dl,BYTE PTR [rdx+0x74]
   14000ccb6:	ins    BYTE PTR es:[rdi],dx
   14000ccb7:	rex.XB (bad) 
   14000ccb9:	jo     0x14000cd2f
   14000ccbb:	jne    0x14000cd2f
   14000ccbd:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000ccc0:	outs   dx,BYTE PTR ds:[rsi]
   14000ccc1:	je     0x14000cd28
   14000ccc3:	js     0x14000cd39
   14000ccc5:	add    BYTE PTR [rdi+0x4],dh
   14000ccc8:	push   rdx
   14000ccc9:	je     0x14000cd37
   14000cccb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000cccd:	outs   dx,DWORD PTR ds:[rsi]
   14000ccce:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000ccd2:	jne    0x14000cd42
   14000ccd4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000ccd8:	outs   dx,BYTE PTR ds:[rsi]
   14000ccd9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000ccdb:	je     0x14000cd4f
   14000ccdd:	jns    0x14000ccdf
   14000ccdf:	add    BYTE PTR [rbx+0x6c745205],cl
   14000cce5:	push   rsi
   14000cce6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000cced:	outs   dx,BYTE PTR ds:[rsi]
   14000ccee:	ja     0x14000cd59
   14000ccf0:	outs   dx,BYTE PTR ds:[rsi]
   14000ccf1:	add    BYTE PTR fs:[rax],al
   14000ccf4:	outs   dx,BYTE PTR ds:[rsi]
   14000ccf5:	je     0x14000cd5b
   14000ccf7:	ins    BYTE PTR es:[rdi],dx
   14000ccf8:	ins    BYTE PTR es:[rdi],dx
   14000ccf9:	cs fs ins BYTE PTR es:[rdi],dx
   14000ccfc:	ins    BYTE PTR es:[rdi],dx
   14000ccfd:	add    BYTE PTR [rip+0x74654700],al        # 0x1b4661403
   14000cd03:	rex.WR (bad) 
   14000cd05:	jae    0x14000cd7b
   14000cd07:	rex.RB jb 0x14000cd7c
   14000cd0a:	outs   dx,DWORD PTR ds:[rsi]
   14000cd0b:	jb     0x14000cd0d
   14000cd0d:	add    BYTE PTR [rcx],dl
   14000cd0f:	add    BYTE PTR [rbp+0x6e],dl
   14000cd12:	push   0x6c646e61
   14000cd17:	gs fs rex.RB js 0x14000cd7f
   14000cd1c:	gs jo  0x14000cd93
   14000cd1f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000cd26:	gs jb  0x14000cd29
   14000cd29:	add    BYTE PTR [rdi],cl
   14000cd2b:	add    BYTE PTR [rbx+0x65],dl
   14000cd2e:	je     0x14000cd85
   14000cd30:	outs   dx,BYTE PTR ds:[rsi]
   14000cd31:	push   0x6c646e61
   14000cd36:	gs fs rex.RB js 0x14000cd9e
   14000cd3b:	gs jo  0x14000cdb2
   14000cd3e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000cd45:	gs jb  0x14000cd48
   14000cd48:	(bad)  
   14000cd49:	jo     0x14000cdb4
   14000cd4b:	sub    eax,0x772d736d
   14000cd50:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cd57:	sub    eax,0x6f727265
   14000cd5c:	jb     0x14000cdc6
   14000cd5e:	(bad)  
   14000cd5f:	outs   dx,BYTE PTR ds:[rsi]
   14000cd60:	fs ins BYTE PTR es:[rdi],dx
   14000cd62:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000cd69:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64fba0
   14000cd6f:	ins    BYTE PTR es:[rdi],dx
   14000cd70:	add    BYTE PTR [rax],al
   14000cd72:	(bad)  
   14000cd73:	add    BYTE PTR [rdi+0x65],al
   14000cd76:	je     0x14000cdbe
   14000cd78:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000cd80:	(bad)  
   14000cd81:	jne    0x14000cdf7
   14000cd83:	gs jae 0x14000cdc7
   14000cd86:	add    BYTE PTR [rax],al
   14000cd88:	(bad)  
   14000cd89:	jo     0x14000cdf4
   14000cd8b:	sub    eax,0x772d736d
   14000cd90:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cd97:	sub    eax,0x656c6966
   14000cd9c:	sub    eax,0x322d316c
   14000cda1:	sub    eax,0x6c642e31
   14000cda6:	ins    BYTE PTR es:[rdi],dx
   14000cda7:	add    BYTE PTR [rax],al
   14000cda9:	add    BYTE PTR [rbx+0x6c],al
   14000cdac:	outs   dx,DWORD PTR ds:[rsi]
   14000cdad:	jae    0x14000ce14
   14000cdaf:	rex.W (bad) 
   14000cdb1:	outs   dx,BYTE PTR ds:[rsi]
   14000cdb2:	fs ins BYTE PTR es:[rdi],dx
   14000cdb4:	add    BYTE PTR gs:[rcx+0x70],ah
   14000cdb8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e412f
   14000cdc2:	outs   dx,DWORD PTR ds:[rsi]
   14000cdc3:	jb     0x14000ce2a
   14000cdc5:	sub    eax,0x646e6168
   14000cdca:	ins    BYTE PTR es:[rdi],dx
   14000cdcb:	gs sub eax,0x312d316c
   14000cdd1:	sub    eax,0x6c642e30
   14000cdd6:	ins    BYTE PTR es:[rdi],dx
   14000cdd7:	add    BYTE PTR [rdx],al
   14000cdd9:	add    BYTE PTR [rax+0x65],cl
   14000cddc:	(bad)  
   14000cddd:	jo     0x14000ce20
   14000cddf:	ins    BYTE PTR es:[rdi],dx
   14000cde0:	ins    BYTE PTR es:[rdi],dx
   14000cde1:	outs   dx,DWORD PTR ds:[rsi]
   14000cde2:	movsxd eax,DWORD PTR [rax]
   14000cde4:	(bad)  
   14000cde5:	add    BYTE PTR [rax+0x65],cl
   14000cde8:	(bad)  
   14000cde9:	jo     0x14000ce31
   14000cdeb:	jb     0x14000ce52
   14000cded:	add    BYTE PTR gs:[rax],al
   14000cdf0:	add    BYTE PTR [rax],al
   14000cdf2:	rex.RXB
   14000cdf3:	gs je  0x14000ce46
   14000cdf6:	jb     0x14000ce67
   14000cdf8:	movsxd esp,DWORD PTR [rbp+0x73]
   14000cdfb:	jae    0x14000ce45
   14000cdfd:	gs (bad) 
   14000cdff:	jo     0x14000ce01
   14000ce01:	add    BYTE PTR [rdx],cl
   14000ce03:	add    BYTE PTR [rax+0x65],cl
   14000ce06:	(bad)  
   14000ce07:	jo     0x14000ce5c
   14000ce09:	gs je  0x14000ce55
   14000ce0c:	outs   dx,BYTE PTR ds:[rsi]
   14000ce0d:	outs   dx,WORD PTR ds:[rsi]
   14000ce0f:	jb     0x14000ce7e
   14000ce11:	(bad)  
   14000ce12:	je     0x14000ce7d
   14000ce14:	outs   dx,DWORD PTR ds:[rsi]
   14000ce15:	outs   dx,BYTE PTR ds:[rsi]
   14000ce16:	add    BYTE PTR [rax],al
   14000ce18:	(bad)  
   14000ce19:	jo     0x14000ce84
   14000ce1b:	sub    eax,0x772d736d
   14000ce20:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ce27:	sub    eax,0x70616568
   14000ce2c:	sub    eax,0x322d316c
   14000ce31:	sub    eax,0x6c642e30
   14000ce36:	ins    BYTE PTR es:[rdi],dx
   14000ce37:	add    BYTE PTR [rax],al
   14000ce39:	add    BYTE PTR [rbx+0x61],al
   14000ce3c:	outs   dx,BYTE PTR ds:[rsi]
   14000ce3d:	movsxd esp,DWORD PTR [rbp+0x6c]
   14000ce40:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000ce42:	add    BYTE PTR [rax],al
   14000ce44:	(bad)  
   14000ce45:	jo     0x14000ceb0
   14000ce47:	sub    eax,0x772d736d
   14000ce4c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ce53:	sub    eax,0x6c2d6f69
   14000ce58:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31fb8f
   14000ce5e:	fs ins BYTE PTR es:[rdi],dx
   14000ce60:	ins    BYTE PTR es:[rdi],dx
   14000ce61:	add    BYTE PTR [rdi],cl
   14000ce63:	add    BYTE PTR [rdi+0x65],al
   14000ce66:	je     0x14000ceb5
   14000ce68:	outs   dx,DWORD PTR ds:[rsi]
   14000ce69:	fs jne 0x14000ced8
   14000ce6c:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000ce76:	add    BYTE PTR [rax],al
   14000ce78:	adc    eax,DWORD PTR [rax]
   14000ce7a:	rex.RXB
   14000ce7b:	gs je  0x14000cecb
   14000ce7e:	outs   dx,DWORD PTR ds:[rsi]
   14000ce7f:	fs jne 0x14000ceee
   14000ce82:	gs rex.W (bad) 
   14000ce85:	outs   dx,BYTE PTR ds:[rsi]
   14000ce86:	fs ins BYTE PTR es:[rdi],dx
   14000ce88:	gs push rdi
   14000ce8a:	add    BYTE PTR [rax],al
   14000ce8c:	(bad)  
   14000ce8d:	jo     0x14000cef8
   14000ce8f:	sub    eax,0x772d736d
   14000ce94:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ce9b:	sub    eax,0x7262696c
   14000cea0:	(bad)  
   14000cea1:	jb     0x14000cf1c
   14000cea3:	ins    BYTE PTR es:[rdi],dx
   14000cea4:	outs   dx,DWORD PTR ds:[rsi]
   14000cea5:	(bad)  
   14000cea6:	fs gs jb 0x14000ced7
   14000ceaa:	ins    BYTE PTR es:[rdi],dx
   14000ceab:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30fbe3
   14000ceb1:	fs ins BYTE PTR es:[rdi],dx
   14000ceb3:	ins    BYTE PTR es:[rdi],dx
   14000ceb4:	add    BYTE PTR [rax],al
   14000ceb6:	add    eax,DWORD PTR [rax]
   14000ceb8:	push   rdx
   14000ceb9:	gs addr32 rex.XB jb 0x14000cf23
   14000cebe:	(bad)  
   14000cebf:	je     0x14000cf26
   14000cec1:	rex.WXB
   14000cec2:	gs jns 0x14000cf0a
   14000cec5:	js     0x14000cf1e
   14000cec7:	add    BYTE PTR [rbx],ah
   14000cec9:	add    BYTE PTR [rdx+0x65],dl
   14000cecc:	addr32 push rcx
   14000cece:	jne    0x14000cf35
   14000ced0:	jb     0x14000cf4b
   14000ced2:	push   rsi
   14000ced3:	(bad)  
   14000ced4:	ins    BYTE PTR es:[rdi],dx
   14000ced5:	jne    0x14000cf3c
   14000ced7:	rex.RB js 0x14000cf31
   14000ceda:	add    BYTE PTR [rax],al
   14000cedc:	and    DWORD PTR [rax],eax
   14000cede:	push   rdx
   14000cedf:	gs addr32 push rcx
   14000cee2:	jne    0x14000cf49
   14000cee4:	jb     0x14000cf5f
   14000cee6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000cee8:	outs   dx,WORD PTR ds:[rsi]
   14000ceea:	rex.WXB
   14000ceeb:	gs jns 0x14000cf45
   14000ceee:	add    BYTE PTR [rax],al
   14000cef0:	(bad)  
   14000cef1:	add    BYTE PTR [rdx+0x65],dl
   14000cef4:	addr32 rex.R
   14000cef6:	gs ins BYTE PTR es:[rdi],dx
   14000cef8:	gs je  0x14000cf60
   14000cefb:	rex.WXB
   14000cefc:	gs jns 0x14000cf55
   14000ceff:	(bad)  
   14000cf00:	ins    BYTE PTR es:[rdi],dx
   14000cf01:	jne    0x14000cf68
   14000cf03:	push   rdi
   14000cf04:	add    BYTE PTR [rax],al
   14000cf06:	adc    BYTE PTR [rax],al
   14000cf08:	push   rdx
   14000cf09:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000cf0d:	jne    0x14000cf7c
   14000cf0f:	push   rsi
   14000cf10:	(bad)  
   14000cf11:	ins    BYTE PTR es:[rdi],dx
   14000cf12:	jne    0x14000cf79
   14000cf14:	push   rdi
   14000cf15:	add    BYTE PTR [rsi],bl
   14000cf17:	add    BYTE PTR [rdx+0x65],dl
   14000cf1a:	addr32 rex.WRXB jo 0x14000cf83
   14000cf1e:	outs   dx,BYTE PTR ds:[rsi]
   14000cf1f:	rex.WXB
   14000cf20:	gs jns 0x14000cf68
   14000cf23:	js     0x14000cf7c
   14000cf25:	add    BYTE PTR [rax],al
   14000cf27:	add    BYTE PTR [rdx+0x65],dl
   14000cf2a:	rex.XB ins BYTE PTR es:[edi],dx
   14000cf2d:	outs   dx,DWORD PTR ds:[rsi]
   14000cf2e:	jae    0x14000cf95
   14000cf30:	rex.WXB
   14000cf31:	gs jns 0x14000cf34
   14000cf34:	sub    al,0x0
   14000cf36:	push   rdx
   14000cf37:	gs addr32 push rbx
   14000cf3a:	gs je  0x14000cf93
   14000cf3d:	(bad)  
   14000cf3e:	ins    BYTE PTR es:[rdi],dx
   14000cf3f:	jne    0x14000cfa6
   14000cf41:	rex.RB js 0x14000cf9b
   14000cf44:	add    BYTE PTR [rax],al
   14000cf46:	(bad)  
   14000cf47:	jo     0x14000cfb2
   14000cf49:	sub    eax,0x772d736d
   14000cf4e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000cf55:	sub    eax,0x69676572
   14000cf5a:	jae    0x14000cfd0
   14000cf5c:	jb     0x14000cfd7
   14000cf5e:	sub    eax,0x312d316c
   14000cf63:	sub    eax,0x6c642e30
   14000cf68:	ins    BYTE PTR es:[rdi],dx
   14000cf69:	add    BYTE PTR [rcx+0x70],ah
   14000cf6c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e42e3
   14000cf76:	outs   dx,DWORD PTR ds:[rsi]
   14000cf77:	jb     0x14000cfde
   14000cf79:	sub    eax,0x69676572
   14000cf7e:	jae    0x14000cff4
   14000cf80:	jb     0x14000cffb
   14000cf82:	sub    eax,0x312d316c
   14000cf87:	sub    eax,0x6c642e31
   14000cf8c:	ins    BYTE PTR es:[rdi],dx
   14000cf8d:	add    BYTE PTR [rip+0x74654700],al        # 0x1b4661693
   14000cf93:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000cf95:	ins    DWORD PTR es:[rdi],dx
   14000cf96:	ins    DWORD PTR es:[rdi],dx
   14000cf97:	(bad)  
   14000cf98:	outs   dx,BYTE PTR ds:[rsi]
   14000cf99:	imul   r13,QWORD PTR fs:[rsi+0x65],0x70610057
   14000cfa2:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4319
   14000cfac:	outs   dx,DWORD PTR ds:[rsi]
   14000cfad:	jb     0x14000d014
   14000cfaf:	sub    eax,0x636f7270
   14000cfb4:	gs jae 0x14000d02a
   14000cfb7:	outs   dx,BYTE PTR gs:[rsi]
   14000cfb9:	jbe    0x14000d024
   14000cfbb:	jb     0x14000d02c
   14000cfbd:	outs   dx,BYTE PTR ds:[rsi]
   14000cfbe:	ins    DWORD PTR es:[rdi],dx
   14000cfbf:	outs   dx,BYTE PTR gs:[rsi]
   14000cfc1:	je     0x14000cff0
   14000cfc3:	ins    BYTE PTR es:[rdi],dx
   14000cfc4:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30fcfc
   14000cfca:	fs ins BYTE PTR es:[rdi],dx
   14000cfcc:	ins    BYTE PTR es:[rdi],dx
   14000cfcd:	add    BYTE PTR [rax],dh
   14000cfcf:	add    BYTE PTR [rdi+0x70],cl
   14000cfd2:	outs   dx,BYTE PTR gs:[rsi]
   14000cfd4:	push   rax
   14000cfd5:	jb     0x14000d046
   14000cfd7:	movsxd esp,DWORD PTR [rbp+0x73]
   14000cfda:	jae    0x14000d030
   14000cfdc:	outs   dx,DWORD PTR ds:[rsi]
   14000cfdd:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000cfe1:	add    BYTE PTR [rax+rax*1],cl
   14000cfe4:	rex.RXB
   14000cfe5:	gs je  0x14000d02b
   14000cfe8:	jne    0x14000d05c
   14000cfea:	jb     0x14000d051
   14000cfec:	outs   dx,BYTE PTR ds:[rsi]
   14000cfed:	je     0x14000d03f
   14000cfef:	jb     0x14000d060
   14000cff1:	movsxd esp,DWORD PTR [rbp+0x73]
   14000cff4:	jae    0x14000cff6
   14000cff6:	adc    DWORD PTR [rax],eax
   14000cff8:	rex.RXB
   14000cff9:	gs je  0x14000d03f
   14000cffc:	jne    0x14000d070
   14000cffe:	jb     0x14000d065
   14000d000:	outs   dx,BYTE PTR ds:[rsi]
   14000d001:	je     0x14000d057
   14000d003:	push   0x64616572
   14000d008:	rex.WB
   14000d009:	add    BYTE PTR fs:[rax],al
   14000d00c:	(bad)  
   14000d00d:	add    BYTE PTR [rbx+0x72],al
   14000d010:	gs (bad) 
   14000d012:	je     0x14000d079
   14000d014:	push   rsp
   14000d015:	push   0x64616572
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	and    BYTE PTR [rax],al
   14000d01e:	rex.RXB
   14000d01f:	gs je  0x14000d075
   14000d022:	je     0x14000d085
   14000d024:	jb     0x14000d09a
   14000d026:	jne    0x14000d098
   14000d028:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d02a:	outs   dx,WORD PTR ds:[rsi]
   14000d02c:	push   rdi
   14000d02d:	add    BYTE PTR [rbx+0x0],cl
   14000d030:	push   rsp
   14000d031:	gs jb  0x14000d0a1
   14000d034:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000d03b:	outs   dx,DWORD PTR ds:[rsi]
   14000d03c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d03f:	jae    0x14000d041
   14000d041:	add    BYTE PTR [rip+0x74654700],cl        # 0x1b4661747
   14000d047:	rex.XB jne 0x14000d0bc
   14000d04a:	jb     0x14000d0b1
   14000d04c:	outs   dx,BYTE PTR ds:[rsi]
   14000d04d:	je     0x14000d09f
   14000d04f:	jb     0x14000d0c0
   14000d051:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d054:	jae    0x14000d09f
   14000d056:	add    BYTE PTR fs:[rcx+0x70],ah
   14000d05a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e43d1
   14000d064:	outs   dx,DWORD PTR ds:[rsi]
   14000d065:	jb     0x14000d0cc
   14000d067:	sub    eax,0x636f7270
   14000d06c:	gs jae 0x14000d0e2
   14000d06f:	je     0x14000d0d9
   14000d071:	jb     0x14000d0d8
   14000d073:	(bad)  
   14000d074:	fs jae 0x14000d0a4
   14000d077:	ins    BYTE PTR es:[rdi],dx
   14000d078:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32fdaf
   14000d07e:	fs ins BYTE PTR es:[rdi],dx
   14000d080:	ins    BYTE PTR es:[rdi],dx
   14000d081:	add    BYTE PTR [rax],al
   14000d083:	add    BYTE PTR [rcx+0x75],dl
   14000d086:	gs jb  0x14000d102
   14000d089:	push   rax
   14000d08a:	gs jb  0x14000d0f3
   14000d08d:	outs   dx,DWORD PTR ds:[rsi]
   14000d08e:	jb     0x14000d0fd
   14000d090:	(bad)  
   14000d091:	outs   dx,BYTE PTR ds:[rsi]
   14000d092:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d095:	outs   dx,DWORD PTR ds:[rsi]
   14000d096:	jne    0x14000d106
   14000d098:	je     0x14000d0ff
   14000d09a:	jb     0x14000d09c
   14000d09c:	(bad)  
   14000d09d:	jo     0x14000d108
   14000d09f:	sub    eax,0x772d736d
   14000d0a4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d0ab:	sub    eax,0x666f7270
   14000d0b0:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000d0b8:	sub    eax,0x6c642e30
   14000d0bd:	ins    BYTE PTR es:[rdi],dx
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	or     al,BYTE PTR [rax]
   14000d0c2:	rex.XB jb 0x14000d12a
   14000d0c5:	(bad)  
   14000d0c6:	je     0x14000d12d
   14000d0c8:	rex.WRB jne 0x14000d13f
   14000d0cb:	gs js  0x14000d125
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	add    BYTE PTR ss:[rdi+0x61],dl
   14000d0d4:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000d0dc:	ins    BYTE PTR es:[edi],dx
   14000d0de:	gs rex.WRXB (bad) 
   14000d0e1:	push   0x65
   14000d0e3:	movsxd esi,DWORD PTR [rax+rax*1+0x23]
   14000d0e7:	add    BYTE PTR [rdx+0x65],dl
   14000d0ea:	ins    BYTE PTR es:[rdi],dx
   14000d0eb:	gs (bad) 
   14000d0ed:	jae    0x14000d154
   14000d0ef:	rex.WRB jne 0x14000d166
   14000d0f2:	gs js  0x14000d0f5
   14000d0f5:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56d23fb
   14000d0fb:	gs jo  0x14000d0fe
   14000d0fe:	(bad)  
   14000d0ff:	jo     0x14000d16a
   14000d101:	sub    eax,0x772d736d
   14000d106:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d10d:	sub    eax,0x636e7973
   14000d112:	push   0x2d316c2d
   14000d117:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64ff4d
   14000d11d:	ins    BYTE PTR es:[rdi],dx
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	adc    al,0x0
   14000d122:	rex.RXB
   14000d123:	gs je  0x14000d179
   14000d126:	jns    0x14000d19b
   14000d128:	je     0x14000d18f
   14000d12a:	ins    DWORD PTR es:[rdi],dx
   14000d12b:	push   rsp
   14000d12c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000d133:	ins    BYTE PTR es:[rdi],dx
   14000d134:	gs push rsp
   14000d136:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000d13d:	gs je  0x14000d194
   14000d140:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000d147:	je     0x14000d149
   14000d149:	add    BYTE PTR [rcx+0x70],ah
   14000d14c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e44c3
   14000d156:	outs   dx,DWORD PTR ds:[rsi]
   14000d157:	jb     0x14000d1be
   14000d159:	sub    eax,0x69737973
   14000d15e:	outs   dx,BYTE PTR ds:[rsi]
   14000d15f:	outs   dx,WORD PTR ds:[rsi]
   14000d161:	sub    eax,0x322d316c
   14000d166:	sub    eax,0x6c642e31
   14000d16b:	ins    BYTE PTR es:[rdi],dx
   14000d16c:	add    BYTE PTR [rax],al
   14000d16e:	add    BYTE PTR [rdi+0x65],al
   14000d172:	je     0x14000d1c8
   14000d174:	outs   dx,DWORD PTR ds:[rsi]
   14000d175:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000d179:	outs   dx,BYTE PTR ds:[rsi]
   14000d17a:	outs   dx,WORD PTR ds:[rsi]
   14000d17c:	jb     0x14000d1eb
   14000d17e:	(bad)  
   14000d17f:	je     0x14000d1ea
   14000d181:	outs   dx,DWORD PTR ds:[rsi]
   14000d182:	outs   dx,BYTE PTR ds:[rsi]
   14000d183:	add    BYTE PTR [rcx+0x70],ah
   14000d186:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e44fd
   14000d190:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000d194:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x65736162
   14000d19c:	sub    eax,0x322d316c
   14000d1a1:	sub    eax,0x6c642e30
   14000d1a6:	ins    BYTE PTR es:[rdi],dx
   14000d1a7:	add    BYTE PTR [rip+0x64694800],dl        # 0x1a46a19ad
   14000d1ad:	push   rax
   14000d1ae:	pop    rdi
   14000d1af:	rex.RXB
   14000d1b0:	gs je  0x14000d1f6
   14000d1b3:	(bad)  
   14000d1b4:	jo     0x14000d229
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	add    eax,0x64694800
   14000d1bd:	rex.R pop rdi
   14000d1bf:	rex.RXB
   14000d1c0:	gs je  0x14000d20b
   14000d1c3:	imul   esp,DWORD PTR [rdi+rax*2+0x75],0x1b006469
   14000d1cb:	add    BYTE PTR [rax+0x69],cl
   14000d1ce:	fs push rax
   14000d1d0:	pop    rdi
   14000d1d1:	rex.RXB
   14000d1d2:	gs je  0x14000d228
   14000d1d5:	jo     0x14000d23c
   14000d1d7:	movsxd ebp,DWORD PTR [rcx+0x66]
   14000d1da:	imul   esp,DWORD PTR [rbx+0x56],0x65756c61
   14000d1e1:	rex.XB (bad) 
   14000d1e3:	jo     0x14000d258
   14000d1e5:	add    BYTE PTR [rax+0x49],cl
   14000d1e8:	rex.R
   14000d1e9:	cs rex.R
   14000d1eb:	rex.WR
   14000d1ec:	rex.WR add BYTE PTR [rax],r13b
   14000d1ef:	add    BYTE PTR [rcx+0x6d],cl
   14000d1f2:	ins    DWORD PTR es:[rdi],dx
   14000d1f3:	imul   r14d,DWORD PTR [rbx+0x61],0x54656c62
   14000d1fb:	gs js  0x14000d272
   14000d1fe:	rex.RX jb 0x14000d262
   14000d201:	ins    DWORD PTR es:[rdi],dx
   14000d202:	gs push rbx
   14000d204:	gs jb  0x14000d27d
   14000d207:	imul   esp,DWORD PTR [rbx+0x65],0x4d490000
   14000d20e:	xor    r14,QWORD PTR [r10]
   14000d211:	cs fs ins BYTE PTR es:[rdi],dx
   14000d214:	ins    BYTE PTR es:[rdi],dx
   14000d215:	add    BYTE PTR [rsi+0x65685301],dh
   14000d21b:	ins    BYTE PTR es:[rdi],dx
   14000d21c:	ins    BYTE PTR es:[rdi],dx
   14000d21d:	rex.RB js 0x14000d285
   14000d220:	movsxd esi,DWORD PTR [rbp+0x74]
   14000d223:	gs push rdi
   14000d225:	add    BYTE PTR [rdi],al
   14000d227:	add    BYTE PTR [rbx+0x6f],al
   14000d22a:	ins    DWORD PTR es:[rdi],dx
   14000d22b:	ins    DWORD PTR es:[rdi],dx
   14000d22c:	(bad)  
   14000d22d:	outs   dx,BYTE PTR ds:[rsi]
   14000d22e:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14000d237:	addr32 jbe 0x14000d291
   14000d23a:	add    BYTE PTR [rax],al
   14000d23c:	push   rbx
   14000d23d:	rex.W
   14000d23e:	rex.RB
   14000d23f:	rex.WR
   14000d240:	xor    r14,QWORD PTR [rdx]
   14000d243:	cs fs ins BYTE PTR es:[rdi],dx
   14000d246:	ins    BYTE PTR es:[rdi],dx
   14000d247:	add    BYTE PTR [rsi],dl
   14000d249:	add    BYTE PTR [rbx+0x65],dl
   14000d24c:	je     0x14000d29e
   14000d24e:	jb     0x14000d2bf
   14000d250:	jo     0x14000d2b7
   14000d252:	jb     0x14000d2c8
   14000d254:	jns    0x14000d29f
   14000d256:	outs   dx,BYTE PTR ds:[rsi]
   14000d257:	je     0x14000d2be
   14000d259:	jb     0x14000d2bc
   14000d25b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d25f:	outs   dx,BYTE PTR ds:[rsi]
   14000d260:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d262:	outs   dx,BYTE PTR ds:[rsi]
   14000d263:	je     0x14000d2ca
   14000d265:	js     0x14000d2db
   14000d267:	add    BYTE PTR [rsi],cl
   14000d269:	add    BYTE PTR [rdx+0x65],dl
   14000d26c:	imul   esi,DWORD PTR [ebx+0x74],0x754f7265
   14000d274:	je     0x14000d2e6
   14000d276:	jne    0x14000d2ec
   14000d278:	rex.XB (bad) 
   14000d27a:	ins    BYTE PTR es:[rdi],dx
   14000d27b:	ins    BYTE PTR es:[rdi],dx
   14000d27c:	(bad)  
   14000d27e:	movsxd ebp,DWORD PTR [rbx+0x49]
   14000d281:	outs   dx,BYTE PTR ds:[rsi]
   14000d282:	je     0x14000d2e9
   14000d284:	jb     0x14000d2e7
   14000d286:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d28a:	outs   dx,BYTE PTR ds:[rsi]
   14000d28b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d28d:	outs   dx,BYTE PTR ds:[rsi]
   14000d28e:	je     0x14000d2f5
   14000d290:	js     0x14000d306
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	or     eax,0x6f725000
   14000d299:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d29c:	jae    0x14000d2ee
   14000d29e:	outs   dx,DWORD PTR ds:[rsi]
   14000d29f:	imul   ebp,DWORD PTR [rsi+0x74],0x72467265
   14000d2a6:	(bad)  
   14000d2a7:	ins    DWORD PTR es:[rdi],dx
   14000d2a8:	gs jae 0x14000d2f4
   14000d2ab:	outs   dx,BYTE PTR ds:[rsi]
   14000d2ac:	je     0x14000d313
   14000d2ae:	jb     0x14000d311
   14000d2b0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d2b4:	outs   dx,BYTE PTR ds:[rsi]
   14000d2b5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d2b7:	outs   dx,BYTE PTR ds:[rsi]
   14000d2b8:	je     0x14000d31f
   14000d2ba:	js     0x14000d330
   14000d2bc:	add    BYTE PTR [rax],al
   14000d2be:	adc    eax,DWORD PTR [rax]
   14000d2c0:	push   rbx
   14000d2c1:	gs je  0x14000d30d
   14000d2c4:	outs   dx,BYTE PTR ds:[rsi]
   14000d2c5:	je     0x14000d32c
   14000d2c7:	jb     0x14000d32a
   14000d2c9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d2cd:	outs   dx,BYTE PTR ds:[rsi]
   14000d2ce:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d2d0:	outs   dx,BYTE PTR ds:[rsi]
   14000d2d1:	imul   sp,WORD PTR [rdi+0x75],0x6172
   14000d2d7:	je     0x14000d342
   14000d2d9:	outs   dx,DWORD PTR ds:[rsi]
   14000d2da:	outs   dx,BYTE PTR ds:[rsi]
   14000d2db:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d2dd:	je     0x14000d344
   14000d2df:	jb     0x14000d342
   14000d2e1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d2e5:	outs   dx,BYTE PTR ds:[rsi]
   14000d2e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d2e8:	outs   dx,BYTE PTR ds:[rsi]
   14000d2e9:	je     0x14000d350
   14000d2eb:	js     0x14000d361
   14000d2ed:	add    BYTE PTR [rdx],al
   14000d2ef:	add    BYTE PTR [rbx+0x72],al
   14000d2f2:	gs (bad) 
   14000d2f4:	je     0x14000d35b
   14000d2f6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d2f8:	je     0x14000d35f
   14000d2fa:	jb     0x14000d35d
   14000d2fc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d300:	outs   dx,BYTE PTR ds:[rsi]
   14000d301:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d303:	outs   dx,BYTE PTR ds:[rsi]
   14000d304:	je     0x14000d36b
   14000d306:	js     0x14000d37c
   14000d308:	add    BYTE PTR [rax],al
   14000d30a:	add    al,0x0
   14000d30c:	rex.R
   14000d30d:	gs jae 0x14000d384
   14000d310:	jb     0x14000d381
   14000d312:	jns    0x14000d35d
   14000d314:	outs   dx,BYTE PTR ds:[rsi]
   14000d315:	je     0x14000d37c
   14000d317:	jb     0x14000d37a
   14000d319:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d31d:	outs   dx,BYTE PTR ds:[rsi]
   14000d31e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d320:	outs   dx,BYTE PTR ds:[rsi]
   14000d321:	je     0x14000d388
   14000d323:	js     0x14000d399
   14000d325:	add    BYTE PTR [rsi+0x49],cl
   14000d328:	outs   dx,BYTE PTR ds:[rsi]
   14000d329:	jo     0x14000d3a0
   14000d32b:	je     0x14000d35b
   14000d32d:	fs ins BYTE PTR es:[rdi],dx
   14000d32f:	ins    BYTE PTR es:[rdi],dx
   14000d330:	add    BYTE PTR [rax],al
   14000d332:	mov    BYTE PTR [rdx+rdx*2],al
   14000d335:	imul   esi,DWORD PTR gs:[ebx+0x74],0x70417265
   14000d33e:	jo     0x14000d3ac
   14000d340:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d347:	push   rdx
   14000d348:	gs jae 0x14000d3bf
   14000d34b:	(bad)  
   14000d34c:	jb     0x14000d3c2
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	sub    DWORD PTR [rsi],eax
   14000d352:	ins    BYTE PTR es:[rdi],dx
   14000d353:	jae    0x14000d3c9
   14000d355:	jb     0x14000d3c3
   14000d357:	outs   dx,BYTE PTR gs:[rsi]
   14000d359:	push   rdi
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	mov    bh,0x3
   14000d35e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d360:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d363:	rex.RX jb 0x14000d3cb
   14000d366:	add    BYTE PTR gs:[rax],ah
   14000d369:	(bad)  
   14000d36a:	ins    BYTE PTR es:[rdi],dx
   14000d36b:	jae    0x14000d3e1
   14000d36d:	jb     0x14000d3d2
   14000d36f:	ins    DWORD PTR es:[rdi],dx
   14000d370:	jo     0x14000d3db
   14000d372:	push   rdi
   14000d373:	add    BYTE PTR [rdx],dl
   14000d375:	add    al,BYTE PTR [rdi+0x65]
   14000d378:	je     0x14000d3bd
   14000d37a:	jne    0x14000d3ee
   14000d37c:	jb     0x14000d3e3
   14000d37e:	outs   dx,BYTE PTR ds:[rsi]
   14000d37f:	je     0x14000d3d5
   14000d381:	push   0x64616572
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	rex.WXB
   14000d389:	rex.RB push r10
   14000d38b:	rex.WRX
   14000d38c:	rex.RB
   14000d38d:	xor    r14,QWORD PTR [rdx]
   14000d390:	cs fs ins BYTE PTR es:[rdi],dx
   14000d393:	ins    BYTE PTR es:[rdi],dx
   14000d394:	add    BYTE PTR [rax],al
   14000d396:	loope  0x14000d39a
   14000d398:	push   rbx
   14000d399:	outs   dx,BYTE PTR gs:[rsi]
   14000d39b:	fs rex.WRB
   14000d39d:	gs jae 0x14000d413
   14000d3a0:	(bad)  
   14000d3a1:	addr32 gs push rsp
   14000d3a4:	imul   ebp,DWORD PTR [rbp+0x65],0x5774756f
   14000d3ab:	add    BYTE PTR [rdx],dh
   14000d3ad:	add    BYTE PTR [rdi+0x70],cl
   14000d3b0:	outs   dx,BYTE PTR gs:[rsi]
   14000d3b2:	push   rsp
   14000d3b3:	push   0x64616572
   14000d3b8:	push   rsp
   14000d3b9:	outs   dx,DWORD PTR ds:[rsi]
   14000d3ba:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000d3be:	lods   eax,DWORD PTR ds:[rsi]
   14000d3bf:	add    al,0x52
   14000d3c1:	gs jae 0x14000d433
   14000d3c4:	ins    BYTE PTR es:[rdi],dx
   14000d3c5:	jbe    0x14000d42c
   14000d3c7:	rex.R
   14000d3c8:	gs ins BYTE PTR es:[rdi],dx
   14000d3ca:	(bad)  
   14000d3cb:	jns    0x14000d419
   14000d3cd:	outs   dx,DWORD PTR ds:[rsi]
   14000d3ce:	(bad)  
   14000d3cf:	fs gs fs push r8
   14000d3d4:	rex.WB add BYTE PTR [r8],al
   14000d3d7:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14000d3db:	(bad)  
   14000d3dc:	jns    0x14000d42a
   14000d3de:	outs   dx,DWORD PTR ds:[rsi]
   14000d3df:	(bad)  
   14000d3e0:	fs rex.RX (bad) 
   14000d3e3:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000d3eb:	imul   eax,DWORD PTR [rax],0x0
   14000d3ee:	pop    rbx
   14000d3ef:	add    BYTE PTR [rdi+0x5f],bl
   14000d3f2:	rex.XB js 0x14000d46d
   14000d3f5:	rex.RX jb 0x14000d459
   14000d3f8:	ins    DWORD PTR es:[rdi],dx
   14000d3f9:	gs rex.W (bad) 
   14000d3fc:	outs   dx,BYTE PTR ds:[rsi]
   14000d3fd:	fs ins BYTE PTR es:[rdi],dx
   14000d3ff:	gs jb  0x14000d435
   14000d402:	add    BYTE PTR [rax],al
   14000d404:	xchg   edx,eax
   14000d405:	add    al,0x6d
   14000d407:	gs ins DWORD PTR es:[rdi],dx
   14000d409:	movsxd esi,DWORD PTR [rax+0x79]
   14000d40c:	add    BYTE PTR [rax],al
   14000d40e:	xchg   esi,eax
   14000d40f:	add    al,0x6d
   14000d411:	gs ins DWORD PTR es:[rdi],dx
   14000d413:	jae    0x14000d47a
   14000d415:	je     0x14000d417
	...

Disassembly of section .data:

000000014000e000 <.data>:
   14000e000:	add    DWORD PTR [rax],eax
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	int    0x5d
   14000e012:	and    dl,dl
   14000e014:	data16 (bad) 
   14000e016:	(bad)  
   14000e017:	inc    DWORD PTR [rax]
   14000e019:	add    BYTE PTR [rax],al
   14000e01b:	add    BYTE PTR [rax],al
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    BYTE PTR [rax],ah
   14000e021:	test   al,0x0
   14000e023:	rex add DWORD PTR [rax],eax
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	shl    al,1
   14000e02a:	add    BYTE PTR [rax+0x1],al
   14000e02d:	add    BYTE PTR [rax],al
   14000e02f:	add    BYTE PTR [rax],bh
   14000e031:	test   al,0x0
   14000e033:	rex add DWORD PTR [rax],eax
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	fdiv   st,st(0)
   14000e03a:	add    BYTE PTR [rax+0x1],al
   14000e03d:	add    BYTE PTR [rax],al
   14000e03f:	add    BYTE PTR [rax-0x58],dl
   14000e042:	add    BYTE PTR [rax+0x1],al
   14000e045:	add    BYTE PTR [rax],al
   14000e047:	add    BYTE PTR [rax+0x14000f0],dl
   14000e04d:	add    BYTE PTR [rax],al
   14000e04f:	add    BYTE PTR [rax-0x58],ch
   14000e052:	add    BYTE PTR [rax+0x1],al
   14000e055:	add    BYTE PTR [rax],al
   14000e057:	add    BYTE PTR [rax+0x14000f0],ah
   14000e05d:	add    BYTE PTR [rax],al
   14000e05f:	add    BYTE PTR [rax+0x14000a8],al
   14000e065:	add    BYTE PTR [rax],al
   14000e067:	add    BYTE PTR [rax+0x14000f1],cl
   14000e06d:	add    BYTE PTR [rax],al
   14000e06f:	add    BYTE PTR [rax+0x14000a8],bl
   14000e075:	add    BYTE PTR [rax],al
   14000e077:	add    BYTE PTR [rax+0x14000f0],bh
   14000e07d:	add    BYTE PTR [rax],al
   14000e07f:	add    BYTE PTR [rax+0x14000a8],dh
   14000e085:	add    BYTE PTR [rax],al
   14000e087:	add    al,bh
   14000e089:	lock add BYTE PTR [rax+0x1],al
	...
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    al,dh
   14000e0a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e0a2:	add    BYTE PTR [rax+0x1],al
   14000e0a5:	add    BYTE PTR [rax],al
   14000e0a7:	add    al,cl
   14000e0a9:	lock add BYTE PTR [rax+0x1],al
   14000e0ad:	add    BYTE PTR [rax],al
   14000e0af:	add    BYTE PTR [rax],cl
   14000e0b1:	test   al,0x0
   14000e0b3:	rex add DWORD PTR [rax],eax
   14000e0b6:	add    BYTE PTR [rax],al
   14000e0b8:	int3   
   14000e0b9:	lock add BYTE PTR [rax+0x1],al
	...
   14000e0cd:	add    BYTE PTR [rax],al
   14000e0cf:	add    BYTE PTR [rax],dh
   14000e0d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e0d2:	add    BYTE PTR [rax+0x1],al
   14000e0d5:	add    BYTE PTR [rax],al
   14000e0d7:	add    BYTE PTR [rcx],al
   14000e0d9:	add    BYTE PTR [rax],al
   14000e0db:	add    BYTE PTR [rax],al
   14000e0dd:	add    BYTE PTR [rax],al
   14000e0df:	add    BYTE PTR [rax-0x59],al
   14000e0e2:	add    BYTE PTR [rax+0x1],al
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rdx],al
   14000e0e9:	add    BYTE PTR [rax],al
   14000e0eb:	add    BYTE PTR [rax],al
   14000e0ed:	add    BYTE PTR [rax],al
   14000e0ef:	add    BYTE PTR [rax-0x59],bl
   14000e0f2:	add    BYTE PTR [rax+0x1],al
   14000e0f5:	add    BYTE PTR [rax],al
   14000e0f7:	add    BYTE PTR [rax+rax*1],al
   14000e0fa:	add    BYTE PTR [rax],al
   14000e0fc:	add    BYTE PTR [rax],al
   14000e0fe:	add    BYTE PTR [rax],al
   14000e100:	push   0x14000a7
   14000e105:	add    BYTE PTR [rax],al
   14000e107:	add    BYTE PTR [rax],cl
   14000e109:	add    BYTE PTR [rax],al
   14000e10b:	add    BYTE PTR [rax],al
   14000e10d:	add    BYTE PTR [rax],al
   14000e10f:	add    BYTE PTR [rax+0x14000a7],al
   14000e115:	add    BYTE PTR [rax],al
   14000e117:	add    BYTE PTR [rax],dl
   14000e119:	add    BYTE PTR [rax],al
   14000e11b:	add    BYTE PTR [rax],al
   14000e11d:	add    BYTE PTR [rax],al
   14000e11f:	add    BYTE PTR [rax+0x14000a7],bl
   14000e125:	add    BYTE PTR [rax],al
   14000e127:	add    BYTE PTR [rcx],dh
   14000e129:	add    BYTE PTR [rax],al
   14000e12b:	add    BYTE PTR [rax],al
   14000e12d:	add    BYTE PTR [rax],al
   14000e12f:	add    BYTE PTR [rax+0x14000a7],ch
   14000e135:	add    BYTE PTR [rax],al
   14000e137:	add    BYTE PTR [rax+0x0],al
   14000e13a:	add    BYTE PTR [rax],al
   14000e13c:	add    BYTE PTR [rax],al
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	shl    BYTE PTR [rdi+0x14000],0x0
   14000e147:	add    BYTE PTR [rax+0x0],al
   14000e14d:	add    BYTE PTR [rax],al
   14000e14f:	add    al,bl
   14000e151:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e152:	add    BYTE PTR [rax+0x1],al
   14000e155:	add    BYTE PTR [rax],al
   14000e157:	add    BYTE PTR [rax],al
   14000e159:	add    DWORD PTR [rax],eax
	...
   14000e16f:	add    BYTE PTR [rax-0x1f],dh
   14000e172:	add    BYTE PTR [rax+0x1],al
   14000e175:	add    BYTE PTR [rax],al
   14000e177:	add    bh,bh
   14000e179:	(bad)  
   14000e17a:	(bad)  
   14000e17b:	(bad)  
   14000e17c:	(bad)  
   14000e17d:	(bad)  
   14000e17e:	(bad)  
   14000e17f:	inc    DWORD PTR [rdx]
	...

Disassembly of section .pdata:

0000000140011000 <.pdata>:
   140011000:	cmp    BYTE PTR [rax],dl
   140011002:	add    BYTE PTR [rax],al
   140011004:	scas   al,BYTE PTR es:[rdi]
   140011005:	adc    BYTE PTR [rax],al
   140011007:	add    BYTE PTR [rax-0x4a],dh
   14001100a:	add    BYTE PTR [rax],al
   14001100c:	mov    ah,0x10
   14001100e:	add    BYTE PTR [rax],al
   140011010:	(bad)  
   140011011:	adc    DWORD PTR [rax],eax
   140011013:	add    BYTE PTR [rax-0x4a],bh
   140011016:	add    BYTE PTR [rax],al
   140011018:	xor    BYTE PTR [rcx],dl
   14001101a:	add    BYTE PTR [rax],al
   14001101c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001101d:	adc    DWORD PTR [rax],eax
   14001101f:	add    BYTE PTR [rsi+rsi*4+0x11b00000],al
   140011026:	add    BYTE PTR [rax],al
   140011028:	(bad)  
   140011029:	adc    DWORD PTR [rax],eax
   14001102b:	add    BYTE PTR [rsi+rsi*4+0x11d40000],dl
   140011032:	add    BYTE PTR [rax],al
   140011034:	or     BYTE PTR [rdx],dl
   140011036:	add    BYTE PTR [rax],al
   140011038:	pushf  
   140011039:	mov    dh,0x0
   14001103b:	add    BYTE PTR [rax],dl
   14001103d:	adc    al,BYTE PTR [rax]
   14001103f:	add    BYTE PTR [rdx+0x12],dl
   140011042:	add    BYTE PTR [rax],al
   140011044:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011045:	mov    dh,0x0
   140011047:	add    BYTE PTR [rax+0x12],bl
   14001104a:	add    BYTE PTR [rax],al
   14001104c:	int    0x12
   14001104e:	add    BYTE PTR [rax],al
   140011050:	lods   al,BYTE PTR ds:[rsi]
   140011051:	mov    dh,0x0
   140011053:	add    ah,dl
   140011055:	adc    al,BYTE PTR [rax]
   140011057:	add    cl,cl
   140011059:	adc    eax,DWORD PTR [rax]
   14001105b:	add    BYTE PTR [rsi+rsi*4+0x13d00000],dh
   140011062:	add    BYTE PTR [rax],al
   140011064:	pop    rbx
   140011065:	adc    al,0x0
   140011067:	add    al,al
   140011069:	mov    dh,0x0
   14001106b:	add    BYTE PTR [rsp+rdx*1+0x0],ah
   14001106f:	add    BYTE PTR [rbp-0x5bffffec],ch
   140011075:	mov    dh,0x0
   140011077:	add    BYTE PTR [rsp+rdx*1+0x15150000],dh
   14001107e:	add    BYTE PTR [rax],al
   140011080:	enter  0xb6,0x0
   140011084:	sbb    al,0x15
   140011086:	add    BYTE PTR [rax],al
   140011088:	fwait
   140011089:	adc    eax,0xb6d00000
   14001108e:	add    BYTE PTR [rax],al
   140011090:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011091:	adc    eax,0x15e40000
   140011096:	add    BYTE PTR [rax],al
   140011098:	pushf  
   140011099:	mov    dh,0x0
   14001109b:	add    al,dh
   14001109d:	adc    eax,0x166f0000
   1400110a2:	add    BYTE PTR [rax],al
   1400110a4:	fdiv   DWORD PTR [rsi+0x16780000]
   1400110aa:	add    BYTE PTR [rax],al
   1400110ac:	test   DWORD PTR [rax],ebx
   1400110ae:	add    BYTE PTR [rax],al
   1400110b0:	call   0xcc01116b
   1400110b5:	sbb    BYTE PTR [rax],al
   1400110b7:	add    BYTE PTR [rax],ah
   1400110b9:	sbb    al,0x0
   1400110bb:	add    BYTE PTR [rax],cl
   1400110bd:	mov    bh,0x0
   1400110bf:	add    BYTE PTR [rax],ch
   1400110c1:	sbb    al,0x0
   1400110c3:	add    bh,bl
   1400110c5:	sbb    al,0x0
   1400110c7:	add    BYTE PTR [rax],ah
   1400110c9:	mov    bh,0x0
   1400110cb:	add    al,ch
   1400110cd:	sbb    al,0x0
   1400110cf:	add    dl,bh
   1400110d1:	(bad)  
   1400110d2:	add    BYTE PTR [rax],al
   1400110d4:	xor    al,0xb7
   1400110d6:	add    BYTE PTR [rax],al
   1400110d8:	add    BYTE PTR [rdi],bl
   1400110da:	add    BYTE PTR [rax],al
   1400110dc:	(bad)  
   1400110dd:	and    eax,0xb74c0000
   1400110e2:	add    BYTE PTR [rax],al
   1400110e4:	and    al,0x25
   1400110e6:	add    BYTE PTR [rax],al
   1400110e8:	stc    
   1400110e9:	and    eax,0xb7740000
   1400110ee:	add    BYTE PTR [rax],al
   1400110f0:	add    BYTE PTR [rsi],ah
   1400110f2:	add    BYTE PTR [rax],al
   1400110f4:	and    ch,BYTE PTR [rip+0xffffffffb7840000]        # 0xf78510fa
   1400110fa:	add    BYTE PTR [rax],al
   1400110fc:	sub    BYTE PTR [rip+0x2f9f0000],ch        # 0x16fa01102
   140011102:	add    BYTE PTR [rax],al
   140011104:	pushf  
   140011105:	mov    bh,0x0
   140011107:	add    BYTE PTR [rax+0x1e00002f],ch
   14001110d:	xor    DWORD PTR [rax],eax
   14001110f:	add    BYTE PTR [rdi+rsi*4+0x31240000],dh
   140011116:	add    BYTE PTR [rax],al
   140011118:	lahf   
   140011119:	xor    al,BYTE PTR [rax]
   14001111b:	add    ah,al
   14001111d:	mov    bh,0x0
   14001111f:	add    BYTE PTR [rax-0x22ffffce],ch
   140011125:	xor    eax,DWORD PTR [rax]
   140011127:	add    ah,bl
   140011129:	mov    bh,0x0
   14001112b:	add    al,dh
   14001112d:	xor    eax,DWORD PTR [rax]
   14001112f:	add    BYTE PTR [rsp+rdi*1+0x0],dh
   140011133:	add    ah,ch
   140011135:	mov    bh,0x0
   140011137:	add    BYTE PTR [rax+0x2100003c],al
   14001113d:	cmp    eax,0xb80c0000
   140011142:	add    BYTE PTR [rax],al
   140011144:	sub    BYTE PTR [rip+0x3e2d0000],bh        # 0x17e2e114a
   14001114a:	add    BYTE PTR [rax],al
   14001114c:	adc    al,0xb8
   14001114e:	add    BYTE PTR [rax],al
   140011150:	xor    al,0x3e
   140011152:	add    BYTE PTR [rax],al
   140011154:	push   rbx
   140011155:	(bad)  
   140011156:	add    BYTE PTR [rax],al
   140011158:	and    al,0xb8
   14001115a:	add    BYTE PTR [rax],al
   14001115c:	pop    rsp
   14001115d:	(bad)  
   14001115e:	add    BYTE PTR [rax],al
   140011160:	mov    ebx,0x38000040
   140011165:	mov    eax,0x40c40000
   14001116a:	add    BYTE PTR [rax],al
   14001116c:	and    DWORD PTR [rdx+0x0],eax
   14001116f:	add    BYTE PTR [rax-0x48],cl
   140011172:	add    BYTE PTR [rax],al
   140011174:	sub    BYTE PTR [rdx+0x0],al
   140011177:	add    BYTE PTR [rsi],al
   140011179:	rex.RX add BYTE PTR [rax],r8b
   14001117c:	(bad)  
   14001117d:	mov    eax,0x460c0000
   140011182:	add    BYTE PTR [rax],al
   140011184:	pop    rbp
   140011185:	rex.WX add BYTE PTR [rax],al
   140011188:	js     0x140011142
   14001118a:	add    BYTE PTR [rax],al
   14001118c:	rex.WX add BYTE PTR fs:[rax],al
   140011190:	fisttp QWORD PTR [rdx+0x0]
   140011193:	add    al,bl
   140011195:	mov    dh,0x0
   140011197:	add    ah,ah
   140011199:	rex.WX add BYTE PTR [rax],al
   14001119c:	mov    cs,WORD PTR [rbx+0x0]
   14001119f:	add    BYTE PTR [rax-0x4a],bh
   1400111a2:	add    BYTE PTR [rax],al
   1400111a4:	xchg   esp,eax
   1400111a5:	rex.WXB add BYTE PTR [r8],al
   1400111a8:	(bad)  
   1400111a9:	rex.WRB add BYTE PTR [r8],r8b
   1400111ac:	cwde   
   1400111ad:	mov    eax,0x4df00000
   1400111b2:	add    BYTE PTR [rax],al
   1400111b4:	fisttp WORD PTR [rsi+0x0]
   1400111b7:	add    BYTE PTR [rax-0x17ffff48],bh
   1400111bd:	rex.WRX add BYTE PTR [rax],r8b
   1400111c0:	scas   eax,DWORD PTR es:[rdi]
   1400111c1:	push   rcx
   1400111c2:	add    BYTE PTR [rax],al
   1400111c4:	sar    BYTE PTR [rax+0x51b80000],1
   1400111ca:	add    BYTE PTR [rax],al
   1400111cc:	rcl    DWORD PTR [rbx+0x0],cl
   1400111cf:	add    ah,dh
   1400111d1:	mov    eax,0x53dc0000
   1400111d6:	add    BYTE PTR [rax],al
   1400111d8:	(bad)  
   1400111d9:	push   rbp
   1400111da:	add    BYTE PTR [rax],al
   1400111dc:	or     al,0xb9
   1400111de:	add    BYTE PTR [rax],al
   1400111e0:	cmp    BYTE PTR [rbp+0x0],dl
   1400111e3:	add    BYTE PTR [rdi+0x20000056],cl
   1400111e9:	mov    ecx,0x56980000
   1400111ee:	add    BYTE PTR [rax],al
   1400111f0:	lods   eax,DWORD PTR ds:[rsi]
   1400111f1:	pop    rax
   1400111f2:	add    BYTE PTR [rax],al
   1400111f4:	xor    BYTE PTR [rcx+0x58b40000],bh
   1400111fa:	add    BYTE PTR [rax],al
   1400111fc:	ss pop rcx
   1400111fe:	add    BYTE PTR [rax],al
   140011200:	jo     0x1400111b8
   140011202:	add    BYTE PTR [rax],al
   140011204:	cmp    al,0x59
   140011206:	add    BYTE PTR [rax],al
   140011208:	or     esp,DWORD PTR [rax+0x0]
   14001120b:	add    BYTE PTR [rax-0x47],cl
   14001120e:	add    BYTE PTR [rax],al
   140011210:	adc    al,0x60
   140011212:	add    BYTE PTR [rax],al
   140011214:	(bad)
   140011217:	add    BYTE PTR [rcx+rdi*4+0x0],ch
   14001121b:	add    ah,cl
   14001121d:	(bad)  
   14001121e:	add    BYTE PTR [rax],al
   140011220:	sbb    DWORD PTR [rbx+0x0],esp
   140011223:	add    BYTE PTR [rcx+rdi*4+0x63200000],cl
   14001122a:	add    BYTE PTR [rax],al
   14001122c:	push   rdx
   14001122d:	add    BYTE PTR fs:[rax],al
   140011230:	xchg   esp,eax
   140011231:	mov    ecx,0x64580000
   140011236:	add    BYTE PTR [rax],al
   140011238:	fisub  DWORD PTR [rax+rax*1+0x0]
   14001123c:	mov    ah,0xb9
   14001123e:	add    BYTE PTR [rax],al
   140011240:	loopne 0x1400112a6
   140011242:	add    BYTE PTR [rax],al
   140011244:	sub    eax,0xa4000065
   140011249:	mov    dh,0x0
   14001124b:	add    BYTE PTR [riz*2+0x66280000],dh
   140011252:	add    BYTE PTR [rax],al
   140011254:	sar    BYTE PTR [rcx+0x66300000],0x0
   14001125b:	add    cl,bl
   14001125d:	data16 add BYTE PTR [rax],al
   140011260:	mov    ah,0xb9
   140011262:	add    BYTE PTR [rax],al
   140011264:	loopne 0x1400112cc
   140011266:	add    BYTE PTR [rax],al
   140011268:	ja     0x1400112d2
   14001126a:	add    BYTE PTR [rax],al
   14001126c:	sar    BYTE PTR [rcx+0x68800000],1
   140011272:	add    BYTE PTR [rax],al
   140011274:	mov    dh,0x69
   140011276:	add    BYTE PTR [rax],al
   140011278:	in     al,dx
   140011279:	mov    ecx,0x69bc0000
   14001127e:	add    BYTE PTR [rax],al
   140011280:	jle    0x1400112ed
   140011282:	add    BYTE PTR [rax],al
   140011284:	or     BYTE PTR [rdx+0x6b840000],bh
   14001128a:	add    BYTE PTR [rax],al
   14001128c:	pop    rdx
   14001128d:	jno    0x14001128f
   14001128f:	add    BYTE PTR [rdx+rdi*4],bl
   140011292:	add    BYTE PTR [rax],al
   140011294:	(bad)  
   140011295:	jno    0x140011297
   140011297:	add    BYTE PTR [rax+0x72],bl
   14001129a:	add    BYTE PTR [rax],al
   14001129c:	rex.R mov edx,0x72600000
   1400112a2:	add    BYTE PTR [rax],al
   1400112a4:	add    dh,BYTE PTR [rbx+0x0]
   1400112a7:	add    al,bl
   1400112a9:	mov    dh,0x0
   1400112ab:	add    BYTE PTR [rax],cl
   1400112ad:	jae    0x1400112af
   1400112af:	add    ch,ch
   1400112b1:	jae    0x1400112b3
   1400112b3:	add    BYTE PTR [rdx+rdi*4+0x0],bl
   1400112b7:	add    ah,dh
   1400112b9:	jae    0x1400112bb
   1400112bb:	add    bh,cl
   1400112bd:	je     0x1400112bf
   1400112bf:	add    BYTE PTR [rdx+rdi*4+0x0],dh
   1400112c3:	add    al,bl
   1400112c5:	je     0x1400112c7
   1400112c7:	add    BYTE PTR [rdi],dh
   1400112c9:	js     0x1400112cb
   1400112cb:	add    BYTE PTR [rax+0x400000ba],cl
   1400112d1:	js     0x1400112d3
   1400112d3:	add    BYTE PTR [rsi],ah
   1400112d5:	jp     0x1400112d7
   1400112d7:	add    BYTE PTR [rax+0x2c0000ba],dh
   1400112dd:	jp     0x1400112df
   1400112df:	add    BYTE PTR [rdx-0x33ffff85],ch
   1400112e5:	mov    edx,0x7bb00000
   1400112ea:	add    BYTE PTR [rax],al
   1400112ec:	pop    rax
   1400112ed:	jl     0x1400112ef
   1400112ef:	add    BYTE PTR [rcx+rdi*4+0x7c600000],dh
   1400112f6:	add    BYTE PTR [rax],al
   1400112f8:	and    BYTE PTR [rbp+0x0],bh
   1400112fb:	add    al,bl
   1400112fd:	mov    dh,0x0
   1400112ff:	add    BYTE PTR [rax],ch
   140011301:	jge    0x140011303
   140011303:	add    BYTE PTR [rcx+0x7f],bl
   140011306:	add    BYTE PTR [rax],al
   140011308:	loopne 0x1400112c4
   14001130a:	add    BYTE PTR [rax],al
   14001130c:	(bad)  
   14001130d:	jg     0x14001130f
   14001130f:	add    BYTE PTR [rsi-0x7f],dl
   140011312:	add    BYTE PTR [rax],al
   140011314:	clc    
   140011315:	mov    edx,0x815c0000
   14001131a:	add    BYTE PTR [rax],al
   14001131c:	fwait
   14001131d:	add    DWORD PTR [rax],0x0
   140011320:	sbb    al,0xbb
   140011322:	add    BYTE PTR [rax],al
   140011324:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011325:	add    DWORD PTR [rax],0x0
   140011328:	test   DWORD PTR [rax+rax*1+0xbb4000],0x850000
   140011333:	add    al,cl
   140011335:	xchg   BYTE PTR [rax],al
   140011337:	add    BYTE PTR [rax-0x2fffff45],dl
   14001133d:	xchg   BYTE PTR [rax],al
   14001133f:	add    BYTE PTR [rbx],ch
   140011341:	xchg   DWORD PTR [rax],eax
   140011343:	add    BYTE PTR [rsi+rsi*4-0x78cc0000],ch
   14001134a:	add    BYTE PTR [rax],al
   14001134c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001134d:	xchg   DWORD PTR [rax],eax
   14001134f:	add    al,al
   140011351:	mov    dh,0x0
   140011353:	add    BYTE PTR [rdi+rax*4-0x78200000],ch
   14001135a:	add    BYTE PTR [rax],al
   14001135c:	enter  0xbb,0x0
   140011360:	call   0x19f0113ec
   140011365:	mov    BYTE PTR [rax],al
   140011367:	add    al,dl
   140011369:	mov    ebx,0x88680000
   14001136e:	add    BYTE PTR [rax],al
   140011370:	sbb    eax,0xdc000089
   140011375:	mov    ebx,0x89240000
   14001137a:	add    BYTE PTR [rax],al
   14001137c:	xchg   BYTE PTR [rcx-0x464c0000],cl
   140011382:	add    BYTE PTR [rax],al
   140011384:	mov    WORD PTR [rcx-0x75820000],cs
   14001138a:	add    BYTE PTR [rax],al
   14001138c:	adc    BYTE PTR [rax+rax*1+0x8a8400],bh
   140011393:	add    BYTE PTR [rdi+0x2400008b],cl
   140011399:	mov    esp,0x8ba00000
   14001139e:	add    BYTE PTR [rax],al
   1400113a0:	ror    DWORD PTR [rbx-0x496c0000],1
   1400113a6:	add    BYTE PTR [rax],al
   1400113a8:	lock mov eax,DWORD PTR [rax]
   1400113ab:	add    BYTE PTR [rcx],ch
   1400113ad:	mov    WORD PTR [rax],es
   1400113af:	add    BYTE PTR [rcx+rdi*4-0x73c00000],dh
   1400113b6:	add    BYTE PTR [rax],al
   1400113b8:	jge    0xfa0113be
   1400113be:	add    BYTE PTR [rax],al
   1400113c0:	and    BYTE PTR [rbp-0x72970000],cl
   1400113c6:	add    BYTE PTR [rax],al
   1400113c8:	xchg   esp,eax
   1400113c9:	mov    dh,0x0
   1400113cb:	add    BYTE PTR [rax-0x73],dh
   1400113ce:	add    BYTE PTR [rax],al
   1400113d0:	loope  0x140011361
   1400113d2:	add    BYTE PTR [rax],al
   1400113d4:	xor    al,0xbc
   1400113d6:	add    BYTE PTR [rax],al
   1400113d8:	lock pop QWORD PTR [rax]
   1400113db:	add    BYTE PTR [rdx],al
   1400113dd:	nop
   1400113de:	add    BYTE PTR [rax],al
   1400113e0:	add    BYTE PTR [rdx-0x6fe00000],bh
   1400113e6:	add    BYTE PTR [rax],al
   1400113e8:	ds nop
   1400113ea:	add    BYTE PTR [rax],al
   1400113ec:	push   0x5c0000bc
   1400113f1:	nop
   1400113f2:	add    BYTE PTR [rax],al
   1400113f4:	cli    
   1400113f5:	nop
   1400113f6:	add    BYTE PTR [rax],al
   1400113f8:	ins    BYTE PTR es:[rdi],dx
   1400113f9:	mov    esp,0x91000000
   1400113fe:	add    BYTE PTR [rax],al
   140011400:	(bad)  
   140011401:	xchg   ecx,eax
   140011402:	add    BYTE PTR [rax],al
   140011404:	add    BYTE PTR [rdx-0x6ee00000],bh
   14001140a:	add    BYTE PTR [rax],al
   14001140c:	push   rsp
   14001140d:	xchg   ecx,eax
   14001140e:	add    BYTE PTR [rax],al
   140011410:	enter  0xbb,0x0
   140011414:	(bad)  
   140011415:	xchg   ecx,eax
   140011416:	add    BYTE PTR [rax],al
   140011418:	rcl    DWORD PTR [rdx-0x43700000],1
   14001141e:	add    BYTE PTR [rax],al
   140011420:	lock xchg edx,eax
   140011422:	add    BYTE PTR [rax],al
   140011424:	sub    DWORD PTR [rbx-0x46000000],edx
   14001142a:	add    BYTE PTR [rax],al
   14001142c:	xor    BYTE PTR [rbx-0x6cb80000],dl
   140011432:	add    BYTE PTR [rax],al
   140011434:	add    BYTE PTR [rdx-0x6ca40000],bh
   14001143a:	add    BYTE PTR [rax],al
   14001143c:	mov    al,0x93
   14001143e:	add    BYTE PTR [rax],al
   140011440:	cwde   
   140011441:	mov    esp,0x93b80000
   140011446:	add    BYTE PTR [rax],al
   140011448:	std    
   140011449:	xchg   ebx,eax
   14001144a:	add    BYTE PTR [rax],al
   14001144c:	enter  0xbb,0x0
   140011450:	(bad)  
   140011451:	xchg   esp,eax
   140011452:	add    BYTE PTR [rax],al
   140011454:	lods   eax,DWORD PTR ds:[rsi]
   140011455:	xchg   esp,eax
   140011456:	add    BYTE PTR [rax],al
   140011458:	mov    eax,0xf40000bc
   14001145d:	xchg   esp,eax
   14001145e:	add    BYTE PTR [rax],al
   140011460:	(bad)  
   140011461:	xchg   ebp,eax
   140011462:	add    BYTE PTR [rax],al
   140011464:	in     al,0xbc
   140011466:	add    BYTE PTR [rax],al
   140011468:	(bad)  
   140011469:	xchg   esi,eax
   14001146a:	add    BYTE PTR [rax],al
   14001146c:	xlat   BYTE PTR ds:[rbx]
   14001146d:	xchg   esi,eax
   14001146e:	add    BYTE PTR [rax],al
   140011470:	hlt    
   140011471:	mov    esp,0x97000000
   140011476:	add    BYTE PTR [rax],al
   140011478:	ja     0x140011411
   14001147a:	add    BYTE PTR [rax],al
   14001147c:	cld    
   14001147d:	mov    esp,0x98200000
   140011482:	add    BYTE PTR [rax],al
   140011484:	xchg   edi,eax
   140011485:	cwde   
   140011486:	add    BYTE PTR [rax],al
   140011488:	add    al,0xbd
   14001148a:	add    BYTE PTR [rax],al
   14001148c:	mov    eax,0xd5000098
   140011491:	cwde   
   140011492:	add    BYTE PTR [rax],al
   140011494:	add    BYTE PTR [rdx-0x67240000],bh
   14001149a:	add    BYTE PTR [rax],al
   14001149c:	(bad)  
   14001149d:	cdq    
   14001149e:	add    BYTE PTR [rax],al
   1400114a0:	enter  0xbb,0x0
   1400114a4:	jo     0x14001143f
   1400114a6:	add    BYTE PTR [rax],al
   1400114a8:	jb     0x140011443
   1400114aa:	add    BYTE PTR [rax],al
   1400114ac:	lock mov esp,0x99c80000
   1400114b2:	add    BYTE PTR [rax],al
   1400114b4:	out    0x99,al
   1400114b6:	add    BYTE PTR [rax],al
   1400114b8:	fdivr  QWORD PTR [rax+rax*1+0x99ec00]
   1400114bf:	add    BYTE PTR [rdi],al
   1400114c1:	(bad)  
   1400114c2:	add    BYTE PTR [rax],al
   1400114c4:	fdivr  QWORD PTR [rax+rax*1+0x9a1000]
   1400114cb:	add    BYTE PTR [rax],dh
   1400114cd:	(bad)  
   1400114ce:	add    BYTE PTR [rax],al
   1400114d0:	fdivr  QWORD PTR [rax+rax*1+0x9a4000]
   1400114d7:	add    BYTE PTR [rdx-0x66],bl
   1400114da:	add    BYTE PTR [rax],al
   1400114dc:	.byte 0x0
   1400114dd:	.byte 0xba
	...

Disassembly of section .didat:

0000000140012000 <.didat>:
   140012000:	add    BYTE PTR [rax+0x14000],bl
	...
   14001200e:	add    BYTE PTR [rax],al
   140012010:	movabs al,ds:0xe000000001400097
   140012019:	xchg   edi,eax
   14001201a:	add    BYTE PTR [rax+0x1],al
   14001201d:	add    BYTE PTR [rax],al
   14001201f:	add    BYTE PTR [rax+0x1400097],al
   140012025:	add    BYTE PTR [rax],al
   140012027:	add    al,ah
   140012029:	xchg   esi,eax
   14001202a:	add    BYTE PTR [rax+0x1],al
   14001202d:	add    BYTE PTR [rax],al
   14001202f:	add    al,al
   140012031:	xchg   edi,eax
   140012032:	add    BYTE PTR [rax+0x1],al
	...
   14001203d:	add    BYTE PTR [rax],al
   14001203f:	add    BYTE PTR [rax-0x6a],al
   140012042:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

0000000140013000 <.rsrc>:
	...
   14001300c:	add    DWORD PTR [rax],eax
   14001300e:	(bad)  
   14001300f:	add    BYTE PTR [rax+0x48800003],cl
   140013015:	add    BYTE PTR [rax],al
   140013017:	add    BYTE PTR [rcx],0x0
   14001301a:	add    BYTE PTR [rax],al
   14001301c:	(bad)  
   14001301d:	add    BYTE PTR [rax],al
   14001301f:	add    BYTE PTR [rbx],0x0
   140013022:	add    BYTE PTR [rax],al
   140013024:	js     0x140013026
   140013026:	add    BYTE PTR [rax+0xc],al
   14001302c:	rol    BYTE PTR [rax],1
   14001302e:	add    BYTE PTR [rax+0xe],al
   140013034:	call   0x150813039
   140013039:	add    BYTE PTR [rax],al
   14001303b:	add    BYTE PTR [rax],al
   14001303d:	add    DWORD PTR [rax],eax
   14001303f:	sbb    BYTE PTR [rax],0x0
   140013042:	add    BYTE PTR [rax],al
   140013044:	sbb    BYTE PTR [rcx],al
   140013046:	add    BYTE PTR [rax+0x0],al
	...
   140013054:	add    BYTE PTR [rax],al
   140013056:	add    DWORD PTR [rax],eax
   140013058:	add    DWORD PTR [rax],eax
   14001305a:	add    BYTE PTR [rax],al
   14001305c:	xor    BYTE PTR [rcx],al
   14001305e:	add    BYTE PTR [rax+0x0],al
	...
   14001306c:	add    BYTE PTR [rax],al
   14001306e:	add    DWORD PTR [rax],eax
   140013070:	or     al,BYTE PTR [rax]
   140013072:	add    BYTE PTR [rax],al
   140013074:	add    QWORD PTR [rax],rax
   140013077:	add    BYTE PTR [rax],0x0
	...
   140013086:	or     DWORD PTR [rax],eax
   140013088:	add    DWORD PTR [rax],eax
   14001308a:	add    BYTE PTR [rax],al
   14001308c:	(bad)  
   14001308d:	add    DWORD PTR [rax],eax
   14001308f:	add    BYTE PTR [rdx],0x0
   140013092:	add    BYTE PTR [rax],al
   140013094:	js     0x140013097
   140013096:	add    BYTE PTR [rax+0x3],al
   14001309c:	nop
   14001309d:	add    DWORD PTR [rax],eax
   14001309f:	add    BYTE PTR [rax+rax*1],0x0
   1400130a3:	add    BYTE PTR [rax+0x5800001],ch
   1400130a9:	add    BYTE PTR [rax],al
   1400130ab:	add    al,al
   1400130ad:	add    DWORD PTR [rax],eax
   1400130af:	add    BYTE PTR [rsi],0x0
   1400130b2:	add    BYTE PTR [rax],al
   1400130b4:	fadd   DWORD PTR [rcx]
   1400130b6:	add    BYTE PTR [rax+0x7],al
   1400130bc:	lock add DWORD PTR [rax],eax
   1400130bf:	or     BYTE PTR [rax],0x0
   1400130c2:	add    BYTE PTR [rax],al
   1400130c4:	or     BYTE PTR [rdx],al
   1400130c6:	add    BYTE PTR [rax+0x9],al
   1400130cc:	and    BYTE PTR [rdx],al
   1400130ce:	add    BYTE PTR [rax+0x0],al
	...
   1400130dc:	add    BYTE PTR [rax],al
   1400130de:	add    DWORD PTR [rax],eax
   1400130e0:	enter  0x0,0x0
   1400130e4:	cmp    BYTE PTR [rdx],al
   1400130e6:	add    BYTE PTR [rax+0x0],al
	...
   1400130f4:	add    BYTE PTR [rax],al
   1400130f6:	add    DWORD PTR [rax],eax
   1400130f8:	add    BYTE PTR fs:[rax],al
   1400130fb:	add    BYTE PTR [rax+0x2],dl
   1400130fe:	add    BYTE PTR [rax+0x0],al
	...
   14001310c:	add    BYTE PTR [rax],al
   14001310e:	add    DWORD PTR [rax],eax
   140013110:	add    DWORD PTR [rax],eax
   140013112:	add    BYTE PTR [rax],al
   140013114:	push   0x800002
	...
   140013125:	add    BYTE PTR [rcx],al
   140013127:	add    BYTE PTR [rcx],al
   140013129:	add    BYTE PTR [rax],al
   14001312b:	add    BYTE PTR [rax+0x800002],al
	...
   14001313d:	add    BYTE PTR [rcx],al
   14001313f:	add    BYTE PTR [rcx],cl
   140013141:	add    al,0x0
   140013143:	add    BYTE PTR [rax+0x2],bl
	...
   140013155:	add    BYTE PTR [rcx],al
   140013157:	add    BYTE PTR [rcx],cl
   140013159:	add    al,0x0
   14001315b:	add    BYTE PTR [rax+0x2],ch
	...
   14001316d:	add    BYTE PTR [rcx],al
   14001316f:	add    BYTE PTR [rcx],cl
   140013171:	add    al,0x0
   140013173:	add    BYTE PTR [rax+0x2],bh
	...
   140013185:	add    BYTE PTR [rcx],al
   140013187:	add    BYTE PTR [rcx],cl
   140013189:	add    al,0x0
   14001318b:	add    al,cl
   14001318d:	add    al,BYTE PTR [rax]
	...
   14001319b:	add    BYTE PTR [rax],al
   14001319d:	add    BYTE PTR [rcx],al
   14001319f:	add    BYTE PTR [rcx],cl
   1400131a1:	add    al,0x0
   1400131a3:	add    al,bl
   1400131a5:	add    al,BYTE PTR [rax]
	...
   1400131b3:	add    BYTE PTR [rax],al
   1400131b5:	add    BYTE PTR [rcx],al
   1400131b7:	add    BYTE PTR [rcx],cl
   1400131b9:	add    al,0x0
   1400131bb:	add    al,ch
   1400131bd:	add    al,BYTE PTR [rax]
	...
   1400131cb:	add    BYTE PTR [rax],al
   1400131cd:	add    BYTE PTR [rcx],al
   1400131cf:	add    BYTE PTR [rcx],cl
   1400131d1:	add    al,0x0
   1400131d3:	add    al,bh
   1400131d5:	add    al,BYTE PTR [rax]
	...
   1400131e3:	add    BYTE PTR [rax],al
   1400131e5:	add    BYTE PTR [rcx],al
   1400131e7:	add    BYTE PTR [rcx],cl
   1400131e9:	add    al,0x0
   1400131eb:	add    BYTE PTR [rax],cl
   1400131ed:	add    eax,DWORD PTR [rax]
	...
   1400131fb:	add    BYTE PTR [rax],al
   1400131fd:	add    BYTE PTR [rcx],al
   1400131ff:	add    BYTE PTR [rcx],cl
   140013201:	add    al,0x0
   140013203:	add    BYTE PTR [rax],bl
   140013205:	add    eax,DWORD PTR [rax]
	...
   140013213:	add    BYTE PTR [rax],al
   140013215:	add    BYTE PTR [rcx],al
   140013217:	add    BYTE PTR [rcx],cl
   140013219:	add    al,0x0
   14001321b:	add    BYTE PTR [rax],ch
   14001321d:	add    eax,DWORD PTR [rax]
	...
   14001322b:	add    BYTE PTR [rax],al
   14001322d:	add    BYTE PTR [rcx],al
   14001322f:	add    BYTE PTR [rcx],cl
   140013231:	add    al,0x0
   140013233:	add    BYTE PTR [rax],bh
   140013235:	add    eax,DWORD PTR [rax]
	...
   140013243:	add    BYTE PTR [rax],al
   140013245:	add    BYTE PTR [rcx],al
   140013247:	add    BYTE PTR [rcx],cl
   140013249:	add    al,0x0
   14001324b:	add    BYTE PTR [rax+0x3],cl
	...
   14001325e:	add    DWORD PTR [rax],eax
   140013260:	or     DWORD PTR [rax+rax*1],eax
   140013263:	add    BYTE PTR [rax+0x3],bl
	...
   140013276:	add    DWORD PTR [rax],eax
   140013278:	or     DWORD PTR [rax+rax*1],eax
   14001327b:	add    BYTE PTR [rax+0x3],ch
	...
   14001328e:	add    DWORD PTR [rax],eax
   140013290:	or     DWORD PTR [rax+rax*1],eax
   140013293:	add    BYTE PTR [rax+0x3],bh
   140013296:	add    BYTE PTR [rax],al
   140013298:	(bad)  
   140013299:	movabs eax,ds:0xd80001
   1400132a2:	add    BYTE PTR [rax],al
   1400132a4:	add    BYTE PTR [rax],al
   1400132a6:	add    BYTE PTR [rax],al
   1400132a8:	pop    rax
   1400132a9:	sahf   
   1400132aa:	add    DWORD PTR [rax],eax
   1400132ac:	in     al,dx
   1400132ad:	add    al,BYTE PTR [rax]
	...
   1400132b7:	add    al,ch
   1400132b9:	cmp    eax,DWORD PTR [rcx]
   1400132bb:	add    BYTE PTR [rax+0x6],ch
	...
   1400132c6:	add    BYTE PTR [rax],al
   1400132c8:	push   rax
   1400132c9:	rex.X add DWORD PTR [rax],eax
   1400132cc:	call   0x1400132d3
   1400132d1:	add    BYTE PTR [rax],al
   1400132d3:	add    BYTE PTR [rax],al
   1400132d5:	add    BYTE PTR [rax],al
   1400132d7:	add    BYTE PTR [rax],bh
   1400132d9:	add    DWORD PTR [r8],r8d
   1400132dc:	sub    BYTE PTR [rcx],al
	...
   1400132e6:	add    BYTE PTR [rax],al
   1400132e8:	(bad)  
   1400132e9:	rex.RX add DWORD PTR [rax],r8d
   1400132ec:	test   al,0xe
	...
   1400132f6:	add    BYTE PTR [rax],al
   1400132f8:	or     BYTE PTR [rbp+0x1],dl
   1400132fb:	add    BYTE PTR [rax+0x8],ch
   140013301:	add    BYTE PTR [rax],al
   140013303:	add    BYTE PTR [rax],al
   140013305:	add    BYTE PTR [rax],al
   140013307:	add    BYTE PTR [rax+0x6800015d],dh
   14001330d:	add    eax,0x0
   140013312:	add    BYTE PTR [rax],al
   140013314:	add    BYTE PTR [rax],al
   140013316:	add    BYTE PTR [rax],al
   140013318:	sbb    BYTE PTR [rbx+0x1],ah
   14001331b:	add    BYTE PTR [rax+0x25],ch
   140013321:	add    BYTE PTR [rax],al
   140013323:	add    BYTE PTR [rax],al
   140013325:	add    BYTE PTR [rax],al
   140013327:	add    al,al
   140013329:	mov    BYTE PTR [rcx],al
   14001332b:	add    BYTE PTR [rax+0x10],ch
   140013331:	add    BYTE PTR [rax],al
   140013333:	add    BYTE PTR [rax],al
   140013335:	add    BYTE PTR [rax],al
   140013337:	add    BYTE PTR [rax-0x67],ch
   14001333a:	add    DWORD PTR [rax],eax
   14001333c:	push   0x4
   140013341:	add    BYTE PTR [rax],al
   140013343:	add    BYTE PTR [rax],al
   140013345:	add    BYTE PTR [rax],al
   140013347:	add    BYTE PTR [rax-0x5f],cl
   14001334a:	add    DWORD PTR [rax],eax
   14001334c:	adc    al,0x0
	...
   140013356:	add    BYTE PTR [rax],al
   140013358:	rcr    BYTE PTR [rbp+0x840001],1
	...
   140013366:	add    BYTE PTR [rax],al
   140013368:	rex.W cmp BYTE PTR [rcx],al
   14001336b:	add    BYTE PTR [rbx+rax*1+0x0],bl
   140013372:	add    BYTE PTR [rax],al
   140013374:	add    BYTE PTR [rax],al
   140013376:	add    BYTE PTR [rax],al
   140013378:	nop
   140013379:	xor    eax,DWORD PTR [rcx]
   14001337b:	add    BYTE PTR [rsp+rax*1+0x0],dh
   140013382:	add    BYTE PTR [rax],al
   140013384:	add    BYTE PTR [rax],al
   140013386:	add    BYTE PTR [rax],al
   140013388:	add    eax,DWORD PTR [rax]
   14001338a:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14001338e:	rex.WB add BYTE PTR [r15+rdi*1],dil
   140013392:	js     0x140013401
   140013394:	ins    BYTE PTR es:[rdi],dx
   140013395:	and    BYTE PTR [rsi+0x65],dh
   140013398:	jb     0x14001340d
   14001339a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400133a1:	xor    BYTE PTR [rdx],ah
   1400133a3:	and    BYTE PTR [rbp+0x6e],ah
   1400133a6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400133a9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400133b0:	rex.RX sub eax,0x73202238
   1400133b6:	je     0x140013419
   1400133b8:	outs   dx,BYTE PTR ds:[rsi]
   1400133b9:	fs (bad) 
   1400133bb:	ins    BYTE PTR es:[rdi],dx
   1400133bc:	outs   dx,DWORD PTR ds:[rsi]
   1400133bd:	outs   dx,BYTE PTR ds:[rsi]
   1400133be:	gs cmp eax,0x73657922
   1400133c4:	and    bh,BYTE PTR [rdi]
   1400133c6:	ds or  eax,0x2d213c0a
   1400133cc:	sub    eax,0x706f4320
   1400133d1:	jns    0x140013445
   1400133d3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400133da:	sub    DWORD PTR [rax],esp
   1400133dc:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400133e4:	je     0x140013406
   1400133e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400133e8:	jb     0x14001345a
   1400133ea:	outs   dx,DWORD PTR ds:[rsi]
   1400133eb:	jb     0x14001344e
   1400133ed:	je     0x140013458
   1400133ef:	outs   dx,DWORD PTR ds:[rsi]
   1400133f0:	outs   dx,BYTE PTR ds:[rsi]
   1400133f1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e7224
   1400133f7:	cmp    al,0x61
   1400133f9:	jae    0x14001346e
   1400133fb:	gs ins DWORD PTR es:[rdi],dx
   1400133fd:	(bad)  
   1400133fe:	ins    BYTE PTR es:[rdi],dx
   1400133ff:	jns    0x140013421
   140013401:	js     0x140013470
   140013403:	ins    BYTE PTR es:[rdi],dx
   140013404:	outs   dx,BYTE PTR ds:[rsi]
   140013405:	jae    0x140013444
   140013407:	and    dh,BYTE PTR [rbp+0x72]
   14001340a:	outs   dx,BYTE PTR ds:[rsi]
   14001340b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001340e:	push   0x73616d65
   140013413:	sub    eax,0x7263696d
   140013418:	outs   dx,DWORD PTR ds:[rsi]
   140013419:	jae    0x14001348a
   14001341b:	data16 je 0x14001344b
   14001341e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140013421:	cmp    ah,BYTE PTR [rcx+0x73]
   140013424:	ins    DWORD PTR es:[rdi],dx
   140013425:	cs jbe 0x140013459
   140013428:	and    ah,BYTE PTR [rax]
   14001342a:	ins    DWORD PTR es:[rdi],dx
   14001342b:	(bad)  
   14001342c:	outs   dx,BYTE PTR ds:[rsi]
   14001342d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140013434:	jb     0x1400134a9
   140013436:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001343d:	xor    BYTE PTR [rdx],ah
   14001343f:	and    BYTE PTR [rax+0x6d],bh
   140013442:	ins    BYTE PTR es:[rdi],dx
   140013443:	outs   dx,BYTE PTR ds:[rsi]
   140013444:	jae    0x140013480
   140013446:	(bad)  
   140013447:	jae    0x1400134b6
   140013449:	jbe    0x14001347e
   14001344b:	cmp    eax,0x6e727522
   140013450:	cmp    dh,BYTE PTR [rbx+0x63]
   140013453:	push   0x73616d65
   140013458:	sub    eax,0x7263696d
   14001345d:	outs   dx,DWORD PTR ds:[rsi]
   14001345e:	jae    0x1400134cf
   140013460:	data16 je 0x140013490
   140013463:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140013466:	cmp    ah,BYTE PTR [rcx+0x73]
   140013469:	ins    DWORD PTR es:[rdi],dx
   14001346a:	cs jbe 0x1400134a0
   14001346d:	and    bh,BYTE PTR [rsi]
   14001346f:	or     eax,0x73613c0a
   140013474:	jae    0x1400134db
   140013476:	ins    DWORD PTR es:[rdi],dx
   140013477:	(bad)  
   140013478:	ins    BYTE PTR es:[rdi],dx
   140013479:	jns    0x1400134c4
   14001347b:	fs outs dx,BYTE PTR gs:[rsi]
   14001347e:	je     0x1400134e9
   140013480:	je     0x1400134fb
   140013482:	or     eax,0x2020200a
   140013487:	and    BYTE PTR [rsi+0x65],dh
   14001348a:	jb     0x1400134ff
   14001348c:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140013493:	xor    DWORD PTR [rsi],ebp
   140013495:	xor    BYTE PTR [rsi],ch
   140013497:	xor    BYTE PTR [rdx],ah
   140013499:	or     eax,0x2020200a
   14001349e:	and    BYTE PTR [rax+0x72],dh
   1400134a1:	outs   dx,DWORD PTR ds:[rsi]
   1400134a2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400134a5:	jae    0x140013516
   1400134a7:	jb     0x1400134ea
   1400134a9:	jb     0x14001350e
   1400134ab:	push   0x63657469
   1400134b0:	je     0x140013527
   1400134b2:	jb     0x140013519
   1400134b4:	cmp    eax,0x646d6122
   1400134b9:	ss xor al,0x22
   1400134bc:	or     eax,0x2020200a
   1400134c1:	and    BYTE PTR [rsi+0x61],ch
   1400134c4:	ins    DWORD PTR es:[rdi],dx
   1400134c5:	gs cmp eax,0x63694d22
   1400134cb:	jb     0x14001353c
   1400134cd:	jae    0x14001353e
   1400134cf:	data16 je 0x140013500
   1400134d2:	push   rsp
   1400134d3:	(bad)  
   1400134d4:	(bad)  
   1400134d5:	ins    BYTE PTR es:[rdi],dx
   1400134d6:	gs je  0x140013529
   1400134d9:	rex.XB
   1400134da:	cs push rsp
   1400134dc:	(bad)  
   1400134dd:	(bad)  
   1400134df:	(bad)  
   1400134e0:	ins    BYTE PTR es:[rdi],dx
   1400134e1:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602154f1
   1400134e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400134eb:	gs cmp eax,0x6e697722
   1400134f1:	xor    esi,DWORD PTR [rdx]
   1400134f3:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f6403
   1400134f9:	or     bh,BYTE PTR [rsp+riz*2]
   1400134fc:	gs jae 0x140013562
   1400134ff:	jb     0x14001356a
   140013501:	jo     0x140013577
   140013503:	imul   ebp,DWORD PTR [rdi+0x6e],0x6261543e
   14001350a:	ins    BYTE PTR es:[rdi],dx
   14001350b:	gs je  0x14001352e
   14001350e:	push   rax
   14001350f:	rex.XB and BYTE PTR [r11+0x61],al
   140013513:	ins    BYTE PTR es:[rdi],dx
   140013514:	imul   esp,DWORD PTR [rdx+0x72],0x6f697461
   14001351b:	outs   dx,BYTE PTR ds:[rsi]
   14001351c:	cmp    al,0x2f
   14001351e:	fs gs jae 0x140013585
   140013522:	jb     0x14001358d
   140013524:	jo     0x14001359a
   140013526:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14001352d:	fs gs jo 0x140013596
   140013531:	outs   dx,BYTE PTR ds:[rsi]
   140013532:	fs outs dx,BYTE PTR gs:[rsi]
   140013535:	movsxd edi,DWORD PTR [rcx+0x3e]
   140013538:	or     eax,0x2020200a
   14001353d:	and    BYTE PTR [rsp+riz*2],bh
   140013540:	gs jo  0x1400135a8
   140013543:	outs   dx,BYTE PTR ds:[rsi]
   140013544:	fs outs dx,BYTE PTR gs:[rsi]
   140013547:	je     0x14001358a
   140013549:	jae    0x1400135be
   14001354b:	gs ins DWORD PTR es:[rdi],dx
   14001354d:	(bad)  
   14001354e:	ins    BYTE PTR es:[rdi],dx
   14001354f:	jns    0x14001358f
   140013551:	or     eax,0x2020200a
   140013556:	and    BYTE PTR [rax],ah
   140013558:	and    BYTE PTR [rax],ah
   14001355a:	and    BYTE PTR [rcx+riz*2],bh
   14001355d:	jae    0x1400135d2
   14001355f:	gs ins DWORD PTR es:[rdi],dx
   140013561:	(bad)  
   140013562:	ins    BYTE PTR es:[rdi],dx
   140013563:	jns    0x1400135ae
   140013565:	fs outs dx,BYTE PTR gs:[rsi]
   140013568:	je     0x1400135d3
   14001356a:	je     0x1400135e5
   14001356c:	or     eax,0x2020200a
   140013571:	and    BYTE PTR [rax],ah
   140013573:	and    BYTE PTR [rax],ah
   140013575:	and    BYTE PTR [rax],ah
   140013577:	and    BYTE PTR [rax],ah
   140013579:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001357d:	gs cmp eax,0x6e697722
   140013583:	xor    esi,DWORD PTR [rdx]
   140013585:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160215595
   14001358b:	and    BYTE PTR [rax],ah
   14001358d:	and    BYTE PTR [rax],ah
   14001358f:	and    BYTE PTR [rax],ah
   140013591:	and    BYTE PTR [rax],ah
   140013593:	and    BYTE PTR [rsi+0x61],ch
   140013596:	ins    DWORD PTR es:[rdi],dx
   140013597:	gs cmp eax,0x63694d22
   14001359d:	jb     0x14001360e
   14001359f:	jae    0x140013610
   1400135a1:	data16 je 0x1400135d2
   1400135a4:	push   rdi
   1400135a5:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400135ac:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400135ae:	ins    DWORD PTR es:[rdi],dx
   1400135af:	ins    DWORD PTR es:[rdi],dx
   1400135b0:	outs   dx,DWORD PTR ds:[rsi]
   1400135b1:	outs   dx,BYTE PTR ds:[rsi]
   1400135b2:	sub    eax,0x746e6f43
   1400135b7:	jb     0x140013628
   1400135b9:	ins    BYTE PTR es:[rdi],dx
   1400135ba:	jae    0x1400135de
   1400135bc:	or     eax,0x2020200a
   1400135c1:	and    BYTE PTR [rax],ah
   1400135c3:	and    BYTE PTR [rax],ah
   1400135c5:	and    BYTE PTR [rax],ah
   1400135c7:	and    BYTE PTR [rax],ah
   1400135c9:	and    BYTE PTR [rsi+0x65],dh
   1400135cc:	jb     0x140013641
   1400135ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   1400135d5:	xor    BYTE PTR [rsi],ch
   1400135d7:	xor    BYTE PTR [rsi],ch
   1400135d9:	xor    BYTE PTR [rdx],ah
   1400135db:	or     eax,0x2020200a
   1400135e0:	and    BYTE PTR [rax],ah
   1400135e2:	and    BYTE PTR [rax],ah
   1400135e4:	and    BYTE PTR [rax],ah
   1400135e6:	and    BYTE PTR [rax],ah
   1400135e8:	and    BYTE PTR [rax+0x72],dh
   1400135eb:	outs   dx,DWORD PTR ds:[rsi]
   1400135ec:	movsxd esp,DWORD PTR [rbp+0x73]
   1400135ef:	jae    0x140013660
   1400135f1:	jb     0x140013634
   1400135f3:	jb     0x140013658
   1400135f5:	push   0x63657469
   1400135fa:	je     0x140013671
   1400135fc:	jb     0x140013663
   1400135fe:	cmp    eax,0x646d6122
   140013603:	ss xor al,0x22
   140013606:	or     eax,0x2020200a
   14001360b:	and    BYTE PTR [rax],ah
   14001360d:	and    BYTE PTR [rax],ah
   14001360f:	and    BYTE PTR [rax],ah
   140013611:	and    BYTE PTR [rax],ah
   140013613:	and    BYTE PTR [rax+0x75],dh
   140013616:	(bad)  
   140013617:	ins    BYTE PTR es:[rdi],dx
   140013618:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14001361f:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140013623:	and    dh,BYTE PTR [rsi]
   140013625:	xor    eax,0x36623539
   14001362a:	xor    al,0x31
   14001362c:	xor    al,0x34
   14001362e:	movsxd esp,DWORD PTR [rbx+0x66]
   140013631:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140013635:	or     eax,0x2020200a
   14001363a:	and    BYTE PTR [rax],ah
   14001363c:	and    BYTE PTR [rax],ah
   14001363e:	and    BYTE PTR [rax],ah
   140013640:	and    BYTE PTR [rax],ah
   140013642:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140013646:	addr32 jne 0x1400136aa
   140013649:	addr32 gs cmp eax,0xd222a22
   140013650:	or     ah,BYTE PTR [rax]
   140013652:	and    BYTE PTR [rax],ah
   140013654:	and    BYTE PTR [rax],ah
   140013656:	and    BYTE PTR [rax],ah
   140013658:	and    BYTE PTR [rdi],ch
   14001365a:	ds or  eax,0x2020200a
   140013660:	and    BYTE PTR [rdi+rbp*1],bh
   140013663:	fs gs jo 0x1400136cc
   140013667:	outs   dx,BYTE PTR ds:[rsi]
   140013668:	fs outs dx,BYTE PTR gs:[rsi]
   14001366b:	je     0x1400136ae
   14001366d:	jae    0x1400136e2
   14001366f:	gs ins DWORD PTR es:[rdi],dx
   140013671:	(bad)  
   140013672:	ins    BYTE PTR es:[rdi],dx
   140013673:	jns    0x1400136b3
   140013675:	or     eax,0x642f3c0a
   14001367a:	gs jo  0x1400136e2
   14001367d:	outs   dx,BYTE PTR ds:[rsi]
   14001367e:	fs outs dx,BYTE PTR gs:[rsi]
   140013681:	movsxd edi,DWORD PTR [rcx+0x3e]
   140013684:	or     eax,0x3c0a0d0a
   140013689:	je     0x1400136fd
   14001368b:	jne    0x140013700
   14001368d:	je     0x1400136d8
   14001368f:	outs   dx,BYTE PTR ds:[rsi]
   140013690:	outs   dx,WORD PTR ds:[rsi]
   140013692:	and    BYTE PTR [rax+0x6d],bh
   140013695:	ins    BYTE PTR es:[rdi],dx
   140013696:	outs   dx,BYTE PTR ds:[rsi]
   140013697:	jae    0x1400136d6
   140013699:	and    dh,BYTE PTR [rbp+0x72]
   14001369c:	outs   dx,BYTE PTR ds:[rsi]
   14001369d:	cmp    dh,BYTE PTR [rbx+0x63]
   1400136a0:	push   0x73616d65
   1400136a5:	sub    eax,0x7263696d
   1400136aa:	outs   dx,DWORD PTR ds:[rsi]
   1400136ab:	jae    0x14001371c
   1400136ad:	data16 je 0x1400136dd
   1400136b0:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400136b3:	cmp    ah,BYTE PTR [rcx+0x73]
   1400136b6:	ins    DWORD PTR es:[rdi],dx
   1400136b7:	cs jbe 0x1400136ed
   1400136ba:	and    bh,BYTE PTR [rsi]
   1400136bc:	or     eax,0x2020200a
   1400136c1:	and    BYTE PTR [rbx+rsi*2],bh
   1400136c4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400136c8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400136d0:	and    BYTE PTR [rax],ah
   1400136d2:	and    BYTE PTR [rax],ah
   1400136d4:	and    BYTE PTR [rax],ah
   1400136d6:	cmp    al,0x72
   1400136d8:	gs jno 0x140013750
   1400136db:	gs jae 0x140013752
   1400136de:	gs fs push rax
   1400136e1:	jb     0x14001374c
   1400136e3:	jbe    0x14001374e
   1400136e5:	ins    BYTE PTR es:[rdi],dx
   1400136e6:	gs addr32 gs jae 0x140013729
   1400136eb:	or     eax,0x2020200a
   1400136f0:	and    BYTE PTR [rax],ah
   1400136f2:	and    BYTE PTR [rax],ah
   1400136f4:	and    BYTE PTR [rax],ah
   1400136f6:	and    BYTE PTR [rax],ah
   1400136f8:	and    BYTE PTR [rdx+rsi*2],bh
   1400136fb:	gs jno 0x140013773
   1400136fe:	gs jae 0x140013775
   140013701:	gs fs rex.RB js 0x14001376b
   140013706:	movsxd esi,DWORD PTR [rbp+0x74]
   140013709:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140013710:	ins    BYTE PTR es:[rdi],dx
   140013711:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140013715:	gs ins BYTE PTR es:[rdi],dx
   140013717:	cmp    eax,0x49736122
   14001371c:	outs   dx,BYTE PTR ds:[rsi]
   14001371d:	jbe    0x14001378e
   14001371f:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140013723:	and    BYTE PTR [rdi],ch
   140013725:	ds or  eax,0x2020200a
   14001372b:	and    BYTE PTR [rax],ah
   14001372d:	and    BYTE PTR [rax],ah
   14001372f:	and    BYTE PTR [rdi+rbp*1],bh
   140013732:	jb     0x140013799
   140013734:	jno    0x1400137ab
   140013736:	gs jae 0x1400137ad
   140013739:	gs fs push rax
   14001373c:	jb     0x1400137a7
   14001373e:	jbe    0x1400137a9
   140013740:	ins    BYTE PTR es:[rdi],dx
   140013741:	gs addr32 gs jae 0x140013784
   140013746:	or     eax,0x2020200a
   14001374b:	and    BYTE PTR [rdi+rbp*1],bh
   14001374e:	jae    0x1400137b5
   140013750:	movsxd esi,DWORD PTR [rbp+0x72]
   140013753:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14001375b:	je     0x1400137cf
   14001375d:	jne    0x1400137d2
   14001375f:	je     0x1400137aa
   140013761:	outs   dx,BYTE PTR ds:[rsi]
   140013762:	outs   dx,WORD PTR ds:[rsi]
   140013764:	ds or  eax,0x3c0a0d0a
   14001376a:	(bad)  
   14001376b:	jae    0x1400137da
   14001376d:	jbe    0x1400137a2
   14001376f:	cmp    ah,BYTE PTR [rcx+0x70]
   140013772:	jo     0x1400137e0
   140013774:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001377b:	ds or  eax,0x2020200a
   140013781:	and    BYTE PTR [rcx+riz*2],bh
   140013784:	jae    0x1400137f3
   140013786:	jbe    0x1400137bb
   140013788:	cmp    dh,BYTE PTR [rdi+0x69]
   14001378b:	outs   dx,BYTE PTR ds:[rsi]
   14001378c:	outs   dx,DWORD PTR fs:[rsi]
   14001378e:	ja     0x140013803
   140013790:	push   rbx
   140013791:	gs je  0x140013808
   140013794:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14001379b:	ins    BYTE PTR es:[rdi],dx
   14001379c:	outs   dx,BYTE PTR ds:[rsi]
   14001379d:	jae    0x1400137dc
   14001379f:	and    ch,BYTE PTR [rax+0x74]
   1400137a2:	je     0x140013814
   1400137a4:	cmp    ch,BYTE PTR [rdi]
   1400137a6:	(bad)  
   1400137a7:	jae    0x14001380c
   1400137a9:	push   0x73616d65
   1400137ae:	cs ins DWORD PTR es:[rdi],dx
   1400137b0:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   1400137b7:	je     0x1400137e7
   1400137b9:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400137bc:	(bad)  
   1400137bd:	push   rbx
   1400137be:	rex.WRB
   1400137bf:	rex.WB (bad) 
   1400137c1:	xor    dh,BYTE PTR [rax]
   1400137c3:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a8ef8
   1400137c9:	outs   dx,DWORD PTR fs:[rsi]
   1400137cb:	ja     0x140013840
   1400137cd:	push   rbx
   1400137ce:	gs je  0x140013845
   1400137d1:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   1400137d8:	or     ah,BYTE PTR [rax]
   1400137da:	and    BYTE PTR [rax],ah
   1400137dc:	and    BYTE PTR [rax],ah
   1400137de:	and    BYTE PTR [rax],ah
   1400137e0:	and    BYTE PTR [rsp+riz*2],bh
   1400137e3:	jo     0x14001384e
   1400137e5:	rex.B ja 0x140013849
   1400137e8:	jb     0x14001384f
   1400137ea:	ds jo  0x140013852
   1400137ed:	jb     0x14001380f
   1400137ef:	ins    DWORD PTR es:[rdi],dx
   1400137f0:	outs   dx,DWORD PTR ds:[rsi]
   1400137f1:	outs   dx,BYTE PTR ds:[rsi]
   1400137f2:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x70642f3c
   1400137fa:	imul   eax,DWORD PTR [rcx+0x77],0x3e657261
   140013801:	or     eax,0x2020200a
   140013806:	and    BYTE PTR [rdi+rbp*1],bh
   140013809:	(bad)  
   14001380a:	jae    0x140013879
   14001380c:	jbe    0x140013841
   14001380e:	cmp    dh,BYTE PTR [rdi+0x69]
   140013811:	outs   dx,BYTE PTR ds:[rsi]
   140013812:	outs   dx,DWORD PTR fs:[rsi]
   140013814:	ja     0x140013889
   140013816:	push   rbx
   140013817:	gs je  0x14001388e
   14001381a:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   140013821:	cmp    al,0x2f
   140013823:	(bad)  
   140013824:	jae    0x140013893
   140013826:	jbe    0x14001385b
   140013828:	cmp    ah,BYTE PTR [rcx+0x70]
   14001382b:	jo     0x140013899
   14001382d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140013834:	ds or  eax,0x612f3c0a
   14001383a:	jae    0x1400138af
   14001383c:	gs ins DWORD PTR es:[rdi],dx
   14001383e:	(bad)  
   14001383f:	ins    BYTE PTR es:[rdi],dx
   140013840:	jns    0x140013880
   140013842:	or     eax,0xa
   140013847:	add    BYTE PTR [rbx+rax*1+0x34],bl
   14001384e:	push   rsi
   14001384f:	add    BYTE PTR [rbx+0x0],dl
   140013852:	pop    rdi
   140013853:	add    BYTE PTR [rsi+0x0],dl
   140013856:	add    BYTE PTR [r10+0x0],r10b
   14001385a:	push   rbx
   14001385b:	add    BYTE PTR [rcx+0x0],cl
   14001385e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140013862:	pop    rdi
   140013863:	add    BYTE PTR [rcx+0x0],cl
   140013866:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001386a:	rex.WRXB add BYTE PTR [r8],r8b
   14001386d:	add    BYTE PTR [rax],al
   14001386f:	add    BYTE PTR [rbp+0xfeef04],bh
   140013875:	add    BYTE PTR [rcx],al
   140013877:	add    BYTE PTR [rax],al
   140013879:	add    BYTE PTR [rdx],cl
   14001387b:	add    BYTE PTR [rax],al
   14001387d:	add    BYTE PTR [rax],bpl
   140013880:	add    BYTE PTR [rax],al
   140013882:	or     al,BYTE PTR [rax]
   140013884:	add    BYTE PTR [rax+0x0],al
   140013887:	sub    BYTE PTR [rdi],bh
   140013889:	add    BYTE PTR [rax],al
   14001388b:	add    BYTE PTR [rax],al
   14001388d:	add    BYTE PTR [rax],al
   14001388f:	add    BYTE PTR [rax+rax*1],al
   140013892:	add    al,0x0
   140013894:	add    DWORD PTR [rax],eax
	...
   1400138a2:	add    BYTE PTR [rax],al
   1400138a4:	cli    
   1400138a5:	add    al,BYTE PTR [rax]
   1400138a7:	add    BYTE PTR [rcx],al
   1400138a9:	add    BYTE PTR [rbx+0x0],dl
   1400138ac:	je     0x1400138ae
   1400138ae:	jb     0x1400138b0
   1400138b0:	imul   eax,DWORD PTR [rax],0x67006e
   1400138b6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400138ba:	ins    BYTE PTR es:[rdi],dx
   1400138bb:	add    BYTE PTR [rbp+0x0],ah
   1400138be:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400138c2:	data16 add BYTE PTR [rdi+0x0],ch
   1400138c6:	add    BYTE PTR [rax],al
   1400138c8:	(bad)  
   1400138c9:	add    al,BYTE PTR [rax]
   1400138cb:	add    BYTE PTR [rcx],al
   1400138cd:	add    BYTE PTR [rax],dh
   1400138cf:	add    BYTE PTR [rax+rax*1],dh
   1400138d2:	xor    BYTE PTR [rax],al
   1400138d4:	cmp    DWORD PTR [rax],eax
   1400138d6:	xor    BYTE PTR [rax],al
   1400138d8:	xor    al,0x0
   1400138da:	rex.X add BYTE PTR [rax],sil
   1400138dd:	add    BYTE PTR [rax],al
   1400138df:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400138e3:	add    BYTE PTR [rcx],al
   1400138e5:	add    BYTE PTR [rbx+0x0],al
   1400138e8:	outs   dx,DWORD PTR ds:[rsi]
   1400138e9:	add    BYTE PTR [rbp+0x0],ch
   1400138ec:	jo     0x1400138ee
   1400138ee:	(bad)  
   1400138ef:	add    BYTE PTR [rsi+0x0],ch
   1400138f2:	jns    0x1400138f4
   1400138f4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400138f8:	ins    DWORD PTR es:[rdi],dx
   1400138f9:	add    BYTE PTR [rbp+0x0],ah
   1400138fc:	add    BYTE PTR [rax],al
   1400138fe:	add    BYTE PTR [rax],al
   140013900:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140013904:	movsxd eax,DWORD PTR [rax]
   140013906:	jb     0x140013908
   140013908:	outs   dx,DWORD PTR ds:[rsi]
   140013909:	add    BYTE PTR [rbx+0x0],dh
   14001390c:	outs   dx,DWORD PTR ds:[rsi]
   14001390d:	add    BYTE PTR [rsi+0x0],ah
   140013910:	je     0x140013912
   140013912:	and    BYTE PTR [rax],al
   140013914:	rex.XB add BYTE PTR [r15+0x0],bpl
   140013918:	jb     0x14001391a
   14001391a:	jo     0x14001391c
   14001391c:	outs   dx,DWORD PTR ds:[rsi]
   14001391d:	add    BYTE PTR [rdx+0x0],dh
   140013920:	(bad)  
   140013921:	add    BYTE PTR [rax+rax*1+0x69],dh
   140013925:	add    BYTE PTR [rdi+0x0],ch
   140013928:	outs   dx,BYTE PTR ds:[rsi]
   140013929:	add    BYTE PTR [rax],al
   14001392b:	add    BYTE PTR [rsi+0x0],bl
   14001392e:	sbb    eax,DWORD PTR [rax]
   140013930:	add    DWORD PTR [rax],eax
   140013932:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140013936:	ins    BYTE PTR es:[rdi],dx
   140013937:	add    BYTE PTR [rbp+0x0],ah
   14001393a:	add    BYTE PTR [rbp+0x0],r12b
   14001393e:	jae    0x140013940
   140013940:	movsxd eax,DWORD PTR [rax]
   140013942:	jb     0x140013944
   140013944:	imul   eax,DWORD PTR [rax],0x740070
   14001394a:	imul   eax,DWORD PTR [rax],0x6e006f
   140013950:	add    BYTE PTR [rax],al
   140013952:	add    BYTE PTR [rax],al
   140013954:	add    BYTE PTR [rcx+0x0],r13b
   140013958:	add    BYTE PTR [ecx+0x0],ch
   14001395c:	je     0x14001395e
   14001395e:	imul   eax,DWORD PTR [rax],0x65007a
   140013964:	jb     0x140013966
   140013966:	and    BYTE PTR [rax],al
   140013968:	rex.XB add BYTE PTR [r9+0x0],spl
   14001396c:	ins    BYTE PTR es:[rdi],dx
   14001396d:	add    BYTE PTR [rcx+0x0],ch
   140013970:	(bad)  
   140013971:	add    BYTE PTR [rdx+0x0],dh
   140013974:	(bad)  
   140013975:	add    BYTE PTR [rax+rax*1+0x69],dh
   140013979:	add    BYTE PTR [rdi+0x0],ch
   14001397c:	outs   dx,BYTE PTR ds:[rsi]
   14001397d:	add    BYTE PTR [rax],ah
   14001397f:	add    BYTE PTR [rax+rax*1+0x6f],dl
   140013983:	add    BYTE PTR [rdi+0x0],ch
   140013986:	ins    BYTE PTR es:[rdi],dx
   140013987:	add    BYTE PTR [rax],al
   140013989:	add    BYTE PTR [rax],al
   14001398b:	add    BYTE PTR [rsi+0x0],ah
   14001398e:	and    eax,DWORD PTR [rax]
   140013990:	add    DWORD PTR [rax],eax
   140013992:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140013996:	ins    BYTE PTR es:[rdi],dx
   140013997:	add    BYTE PTR [rbp+0x0],ah
   14001399a:	push   rsi
   14001399b:	add    BYTE PTR [rbp+0x0],ah
   14001399e:	jb     0x1400139a0
   1400139a0:	jae    0x1400139a2
   1400139a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400139a8:	add    BYTE PTR [rax],al
   1400139aa:	add    BYTE PTR [rax],al
   1400139ac:	xor    DWORD PTR [rax],eax
   1400139ae:	xor    BYTE PTR [rax],al
   1400139b0:	add    BYTE PTR cs:[rax],dh
   1400139b3:	add    BYTE PTR [rsi],ch
   1400139b5:	add    BYTE PTR [rcx],dh
   1400139b7:	add    BYTE PTR [rax],dh
   1400139b9:	add    BYTE PTR [rdx],dh
   1400139bb:	add    BYTE PTR [rax+rax*1],dh
   1400139be:	xor    BYTE PTR [rax],al
   1400139c0:	add    BYTE PTR cs:[rcx],dh
   1400139c3:	add    BYTE PTR [rsi],dh
   1400139c5:	add    BYTE PTR [rbx],dh
   1400139c7:	add    BYTE PTR [rax],bh
   1400139c9:	add    BYTE PTR [rax+rax*1],dh
   1400139cc:	and    BYTE PTR [rax],al
   1400139ce:	sub    BYTE PTR [rax],al
   1400139d0:	je     0x1400139d2
   1400139d2:	push   0x2e003100
   1400139d7:	add    BYTE PTR [rcx],dh
   1400139d9:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770169df
   1400139df:	add    BYTE PTR [rax],dh
   1400139e1:	add    BYTE PTR [rcx],bh
   1400139e3:	add    BYTE PTR [rip+0x37003100],ch        # 0x177016ae9
   1400139e9:	add    BYTE PTR [rax],dh
   1400139eb:	add    BYTE PTR [rax],dh
   1400139ed:	add    BYTE PTR [rcx],ch
   1400139ef:	add    BYTE PTR [rax],al
   1400139f1:	add    BYTE PTR [rax],al
   1400139f3:	add    BYTE PTR [rsi],dh
   1400139f5:	add    BYTE PTR [rbx],cl
   1400139f7:	add    BYTE PTR [rcx],al
   1400139f9:	add    BYTE PTR [rcx+0x0],cl
   1400139fc:	outs   dx,BYTE PTR ds:[rsi]
   1400139fd:	add    BYTE PTR [rax+rax*1+0x65],dh
   140013a01:	add    BYTE PTR [rdx+0x0],dh
   140013a04:	outs   dx,BYTE PTR ds:[rsi]
   140013a05:	add    BYTE PTR [rcx+0x0],ah
   140013a08:	ins    BYTE PTR es:[rdi],dx
   140013a09:	add    BYTE PTR [rsi+0x0],cl
   140013a0c:	(bad)  
   140013a0d:	add    BYTE PTR [rbp+0x0],ch
   140013a10:	add    BYTE PTR gs:[rax],al
   140013a13:	add    BYTE PTR [rax+rax*1+0x61],dh
   140013a17:	add    BYTE PTR [rdx+0x0],ah
   140013a1a:	movsxd eax,DWORD PTR [rax]
   140013a1c:	(bad)  
   140013a1d:	add    BYTE PTR [rax+rax*1+0x2e],ch
   140013a21:	add    BYTE PTR [rbp+0x0],ah
   140013a24:	js     0x140013a26
   140013a26:	add    BYTE PTR gs:[rax],al
   140013a29:	add    BYTE PTR [rax],al
   140013a2b:	add    BYTE PTR [rax+0x1002e00],al
   140013a31:	add    BYTE PTR [rax+rax*1+0x65],cl
   140013a35:	add    BYTE PTR [rdi+0x0],ah
   140013a38:	(bad)  
   140013a39:	add    BYTE PTR [rax+rax*1+0x43],ch
   140013a3d:	add    BYTE PTR [rdi+0x0],ch
   140013a40:	jo     0x140013a42
   140013a42:	jns    0x140013a44
   140013a44:	jb     0x140013a46
   140013a46:	imul   eax,DWORD PTR [rax],0x680067
   140013a4c:	je     0x140013a4e
   140013a4e:	add    BYTE PTR [rax],al
   140013a50:	test   eax,0x4d002000
   140013a55:	add    BYTE PTR [rcx+0x0],ch
   140013a58:	movsxd eax,DWORD PTR [rax]
   140013a5a:	jb     0x140013a5c
   140013a5c:	outs   dx,DWORD PTR ds:[rsi]
   140013a5d:	add    BYTE PTR [rbx+0x0],dh
   140013a60:	outs   dx,DWORD PTR ds:[rsi]
   140013a61:	add    BYTE PTR [rsi+0x0],ah
   140013a64:	je     0x140013a66
   140013a66:	and    BYTE PTR [rax],al
   140013a68:	rex.XB add BYTE PTR [r15+0x0],bpl
   140013a6c:	jb     0x140013a6e
   140013a6e:	jo     0x140013a70
   140013a70:	outs   dx,DWORD PTR ds:[rsi]
   140013a71:	add    BYTE PTR [rdx+0x0],dh
   140013a74:	(bad)  
   140013a75:	add    BYTE PTR [rax+rax*1+0x69],dh
   140013a79:	add    BYTE PTR [rdi+0x0],ch
   140013a7c:	outs   dx,BYTE PTR ds:[rsi]
   140013a7d:	add    BYTE PTR [rsi],ch
   140013a7f:	add    BYTE PTR [rax],ah
   140013a81:	add    BYTE PTR [rcx+0x0],al
   140013a84:	ins    BYTE PTR es:[rdi],dx
   140013a85:	add    BYTE PTR [rax+rax*1+0x20],ch
   140013a89:	add    BYTE PTR [rdx+0x0],dh
   140013a8c:	imul   eax,DWORD PTR [rax],0x680067
   140013a92:	je     0x140013a94
   140013a94:	jae    0x140013a96
   140013a96:	and    BYTE PTR [rax],al
   140013a98:	jb     0x140013a9a
   140013a9a:	add    BYTE PTR gs:[rbx+0x0],dh
   140013a9e:	add    BYTE PTR gs:[rdx+0x0],dh
   140013aa2:	jbe    0x140013aa4
   140013aa4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140013aa9:	add    BYTE PTR [rax],al
   140013aab:	add    BYTE PTR [rsi],bh
   140013aad:	add    BYTE PTR [rbx],cl
   140013aaf:	add    BYTE PTR [rcx],al
   140013ab1:	add    BYTE PTR [rdi+0x0],cl
   140013ab4:	jb     0x140013ab6
   140013ab6:	imul   eax,DWORD PTR [rax],0x690067
   140013abc:	outs   dx,BYTE PTR ds:[rsi]
   140013abd:	add    BYTE PTR [rcx+0x0],ah
   140013ac0:	ins    BYTE PTR es:[rdi],dx
   140013ac1:	add    BYTE PTR [rsi+0x0],al
   140013ac4:	imul   eax,DWORD PTR [rax],0x65006c
   140013aca:	outs   dx,BYTE PTR ds:[rsi]
   140013acb:	add    BYTE PTR [rcx+0x0],ah
   140013ace:	ins    DWORD PTR es:[rdi],dx
   140013acf:	add    BYTE PTR [rbp+0x0],ah
   140013ad2:	add    BYTE PTR [rax],al
   140013ad4:	je     0x140013ad6
   140013ad6:	(bad)  
   140013ad7:	add    BYTE PTR [rdx+0x0],ah
   140013ada:	movsxd eax,DWORD PTR [rax]
   140013adc:	(bad)  
   140013add:	add    BYTE PTR [rax+rax*1+0x2e],ch
   140013ae1:	add    BYTE PTR [rbp+0x0],ah
   140013ae4:	js     0x140013ae6
   140013ae6:	add    BYTE PTR gs:[rax],al
   140013ae9:	add    BYTE PTR [rax],al
   140013aeb:	add    BYTE PTR [rdx+0x0],ch
   140013aee:	and    eax,0x50000100
   140013af3:	add    BYTE PTR [rdx+0x0],dh
   140013af6:	outs   dx,DWORD PTR ds:[rsi]
   140013af7:	add    BYTE PTR [rax+rax*1+0x75],ah
   140013afb:	add    BYTE PTR [rbx+0x0],ah
   140013afe:	je     0x140013b00
   140013b00:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140013b04:	ins    DWORD PTR es:[rdi],dx
   140013b05:	add    BYTE PTR [rbp+0x0],ah
   140013b08:	add    BYTE PTR [rax],al
   140013b0a:	add    BYTE PTR [rax],al
   140013b0c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140013b10:	movsxd eax,DWORD PTR [rax]
   140013b12:	jb     0x140013b14
   140013b14:	outs   dx,DWORD PTR ds:[rsi]
   140013b15:	add    BYTE PTR [rbx+0x0],dh
   140013b18:	outs   dx,DWORD PTR ds:[rsi]
   140013b19:	add    BYTE PTR [rsi+0x0],ah
   140013b1c:	je     0x140013b1e
   140013b1e:	scas   al,BYTE PTR es:[rdi]
   140013b1f:	add    BYTE PTR [rax],ah
   140013b21:	add    BYTE PTR [rdi+0x0],dl
   140013b24:	imul   eax,DWORD PTR [rax],0x64006e
   140013b2a:	outs   dx,DWORD PTR ds:[rsi]
   140013b2b:	add    BYTE PTR [rdi+0x0],dh
   140013b2e:	jae    0x140013b30
   140013b30:	scas   al,BYTE PTR es:[rdi]
   140013b31:	add    BYTE PTR [rax],ah
   140013b33:	add    BYTE PTR [rdi+0x0],cl
   140013b36:	jo     0x140013b38
   140013b38:	add    BYTE PTR gs:[rdx+0x0],dh
   140013b3c:	(bad)  
   140013b3d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140013b41:	add    BYTE PTR [rsi+0x0],ch
   140013b44:	add    BYTE PTR [eax],ah
   140013b47:	add    BYTE PTR [rbx+0x0],dl
   140013b4a:	jns    0x140013b4c
   140013b4c:	jae    0x140013b4e
   140013b4e:	je     0x140013b50
   140013b50:	add    BYTE PTR gs:[rbp+0x0],ch
   140013b54:	add    BYTE PTR [rax],al
   140013b56:	add    BYTE PTR [rax],al
   140013b58:	rex.RX add BYTE PTR [rcx],r10b
   140013b5b:	add    BYTE PTR [rcx],al
   140013b5d:	add    BYTE PTR [rax+0x0],dl
   140013b60:	jb     0x140013b62
   140013b62:	outs   dx,DWORD PTR ds:[rsi]
   140013b63:	add    BYTE PTR [rax+rax*1+0x75],ah
   140013b67:	add    BYTE PTR [rbx+0x0],ah
   140013b6a:	je     0x140013b6c
   140013b6c:	push   rsi
   140013b6d:	add    BYTE PTR [rbp+0x0],ah
   140013b70:	jb     0x140013b72
   140013b72:	jae    0x140013b74
   140013b74:	imul   eax,DWORD PTR [rax],0x6e006f
   140013b7a:	add    BYTE PTR [rax],al
   140013b7c:	xor    DWORD PTR [rax],eax
   140013b7e:	xor    BYTE PTR [rax],al
   140013b80:	add    BYTE PTR cs:[rax],dh
   140013b83:	add    BYTE PTR [rsi],ch
   140013b85:	add    BYTE PTR [rcx],dh
   140013b87:	add    BYTE PTR [rax],dh
   140013b89:	add    BYTE PTR [rdx],dh
   140013b8b:	add    BYTE PTR [rax+rax*1],dh
   140013b8e:	xor    BYTE PTR [rax],al
   140013b90:	add    BYTE PTR cs:[rcx],dh
   140013b93:	add    BYTE PTR [rsi],dh
   140013b95:	add    BYTE PTR [rbx],dh
   140013b97:	add    BYTE PTR [rax],bh
   140013b99:	add    BYTE PTR [rax+rax*1],dh
   140013b9c:	add    BYTE PTR [rax],al
   140013b9e:	add    BYTE PTR [rax],al
   140013ba0:	add    BYTE PTR [rax],r8b
   140013ba3:	add    BYTE PTR [rcx],al
   140013ba5:	add    BYTE PTR [rsi+0x0],dl
   140013ba8:	(bad)  
   140013ba9:	add    BYTE PTR [rdx+0x0],dh
   140013bac:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140013bb0:	ins    BYTE PTR es:[rdi],dx
   140013bb1:	add    BYTE PTR [rbp+0x0],ah
   140013bb4:	rex.WB add BYTE PTR [r14+0x0],bpl
   140013bb8:	data16 add BYTE PTR [rdi+0x0],ch
   140013bbc:	add    BYTE PTR [rax],al
   140013bbe:	add    BYTE PTR [rax],al
   140013bc0:	and    al,0x0
   140013bc2:	add    al,0x0
   140013bc4:	add    BYTE PTR [rax],al
   140013bc6:	push   rsp
   140013bc7:	add    BYTE PTR [rdx+0x0],dh
   140013bca:	(bad)  
   140013bcb:	add    BYTE PTR [rsi+0x0],ch
   140013bce:	jae    0x140013bd0
   140013bd0:	ins    BYTE PTR es:[rdi],dx
   140013bd1:	add    BYTE PTR [rcx+0x0],ah
   140013bd4:	je     0x140013bd6
   140013bd6:	imul   eax,DWORD PTR [rax],0x6e006f
   140013bdc:	add    BYTE PTR [rax],al
   140013bde:	add    BYTE PTR [rax],al
   140013be0:	or     DWORD PTR [rax+rsi*4],eax
   140013be3:	add    al,0x0
   140013be5:	add    BYTE PTR [rax],al
   140013be7:	add    BYTE PTR [rax],ch
   140013be9:	add    BYTE PTR [rax],al
   140013beb:	add    BYTE PTR [rax],dh
   140013bed:	add    BYTE PTR [rax],al
   140013bef:	add    BYTE PTR [rax+0x0],ah
   140013bf2:	add    BYTE PTR [rax],al
   140013bf4:	add    DWORD PTR [rax],eax
   140013bf6:	add    al,0x0
	...
   140013c18:	add    BYTE PTR [rax-0x80000000],al
   140013c1e:	add    BYTE PTR [rax],0x80
   140013c21:	add    BYTE PTR [rax],al
   140013c23:	add    BYTE PTR [rax-0x7fff8000],al
   140013c29:	add    BYTE PTR [rax],0x0
   140013c2c:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   140013c33:	add    BYTE PTR [rax],al
   140013c35:	add    bh,bh
   140013c37:	add    BYTE PTR [rax],al
   140013c39:	add    BYTE PTR [rax],al
   140013c3b:	add    BYTE PTR [rax],al
   140013c3d:	(bad)  
   140013c3e:	inc    DWORD PTR [rax]
   140013c40:	inc    DWORD PTR [rax]
   140013c42:	add    BYTE PTR [rax],al
   140013c44:	inc    DWORD PTR [rax]
   140013c46:	inc    DWORD PTR [rax]
   140013c48:	(bad)  
   140013c49:	inc    DWORD PTR [rax]
   140013c4b:	add    bh,bh
   140013c4d:	(bad)  
   140013c4e:	inc    DWORD PTR [rax]
   140013c50:	adc    DWORD PTR [rcx],edx
   140013c52:	adc    DWORD PTR [rcx],edx
   140013c54:	adc    DWORD PTR [rcx],edx
   140013c56:	adc    DWORD PTR [rcx],edx
   140013c58:	adc    DWORD PTR [rcx],edx
   140013c5a:	adc    DWORD PTR [rcx],edx
   140013c5c:	adc    DWORD PTR [rcx],edx
   140013c5e:	adc    DWORD PTR [rcx],edx
   140013c60:	adc    DWORD PTR [rcx],edx
   140013c62:	adc    DWORD PTR [rcx],edx
   140013c64:	adc    DWORD PTR [rcx],edx
   140013c66:	adc    DWORD PTR [rcx],edx
   140013c68:	adc    DWORD PTR [rcx],edx
   140013c6a:	adc    DWORD PTR [rcx],edx
   140013c6c:	adc    DWORD PTR [rcx],edx
   140013c6e:	adc    DWORD PTR [rcx],edx
   140013c70:	adc    DWORD PTR [rcx],edx
   140013c72:	adc    DWORD PTR [rcx],edx
   140013c74:	adc    DWORD PTR [rcx],edx
   140013c76:	adc    DWORD PTR [rcx],edx
   140013c78:	adc    DWORD PTR [rcx],edx
   140013c7a:	adc    DWORD PTR [rcx],edx
   140013c7c:	adc    DWORD PTR [rcx],edx
   140013c7e:	adc    DWORD PTR [rcx],edx
   140013c80:	adc    DWORD PTR [rcx],edx
   140013c82:	adc    DWORD PTR [rcx],edx
   140013c84:	adc    DWORD PTR [rcx],edx
   140013c86:	adc    DWORD PTR [rcx],edx
   140013c88:	adc    DWORD PTR [rcx],edx
   140013c8a:	adc    DWORD PTR [rcx],edx
   140013c8c:	adc    DWORD PTR [rcx],edx
   140013c8e:	adc    DWORD PTR [rcx],edx
   140013c90:	adc    DWORD PTR [rcx],edx
   140013c92:	adc    DWORD PTR [rcx],edx
   140013c94:	adc    DWORD PTR [rcx],edx
   140013c96:	adc    DWORD PTR [rcx],edx
   140013c98:	adc    DWORD PTR [rcx],edx
   140013c9a:	adc    DWORD PTR [rax],eax
   140013c9c:	add    BYTE PTR [rcx],al
   140013c9e:	adc    DWORD PTR [rcx],edx
   140013ca0:	adc    DWORD PTR [rcx],edx
   140013ca2:	adc    DWORD PTR [rcx],edx
   140013ca4:	adc    DWORD PTR [rcx],edx
   140013ca6:	adc    DWORD PTR [rcx],edx
   140013ca8:	adc    DWORD PTR [rcx],edx
   140013caa:	adc    DWORD PTR [rcx],edx
   140013cac:	adc    DWORD PTR [rcx],edx
   140013cae:	adc    DWORD PTR [rcx],edx
   140013cb0:	adc    DWORD PTR [rcx],edx
   140013cb2:	(bad)  
   140013cb3:	mov    BYTE PTR [rdi+0x70],dh
   140013cb6:	add    BYTE PTR [rcx],al
   140013cb8:	adc    DWORD PTR [rcx],edx
   140013cba:	adc    DWORD PTR [rcx],edx
   140013cbc:	adc    DWORD PTR [rcx],edx
   140013cbe:	adc    DWORD PTR [rcx],edx
   140013cc0:	adc    DWORD PTR [rcx],edx
   140013cc2:	adc    DWORD PTR [rcx],edx
   140013cc4:	adc    DWORD PTR [rcx],edx
   140013cc6:	adc    DWORD PTR [rcx],edx
   140013cc8:	adc    DWORD PTR [rcx],edx
   140013cca:	js     0x140013c54
   140013ccc:	ja     0x140013d45
   140013cce:	ja     0x140013d40
   140013cd0:	add    BYTE PTR [rcx],al
   140013cd2:	adc    DWORD PTR [rcx],edx
   140013cd4:	adc    DWORD PTR [rcx],edx
   140013cd6:	adc    DWORD PTR [rcx],edx
   140013cd8:	adc    DWORD PTR [rcx],edx
   140013cda:	adc    DWORD PTR [rcx],edx
   140013cdc:	adc    DWORD PTR [rcx],edx
   140013cde:	adc    DWORD PTR [rcx],edx
   140013ce0:	adc    DWORD PTR [rcx],edx
   140013ce2:	jg     0x140013c6c
   140013ce4:	ja     0x140013d5d
   140013ce6:	ja     0x140013d5f
   140013ce8:	ja     0x140013d5a
   140013cea:	add    BYTE PTR [rcx],al
   140013cec:	adc    DWORD PTR [rcx],edx
   140013cee:	adc    DWORD PTR [rcx],edx
   140013cf0:	adc    DWORD PTR [rcx],edx
   140013cf2:	adc    DWORD PTR [rcx],edx
   140013cf4:	adc    DWORD PTR [rcx],edx
   140013cf6:	adc    DWORD PTR [rcx],edx
   140013cf8:	adc    DWORD PTR [rcx],edx
   140013cfa:	jg     0x140013c84
   140013cfc:	ja     0x140013d75
   140013cfe:	ja     0x140013d77
   140013d00:	ja     0x140013d79
   140013d02:	ja     0x140013d74
   140013d04:	add    BYTE PTR [rcx],al
   140013d06:	adc    DWORD PTR [rcx],edx
   140013d08:	adc    DWORD PTR [rcx],edx
   140013d0a:	adc    DWORD PTR [rcx],edx
   140013d0c:	adc    DWORD PTR [rcx],edx
   140013d0e:	adc    DWORD PTR [rcx],edx
   140013d10:	adc    DWORD PTR [rcx],edx
   140013d12:	jg     0x140013c9c
   140013d14:	ja     0x140013d15
   140013d16:	push   QWORD PTR [rdi+0x77]
   140013d19:	ja     0x140013d92
   140013d1b:	ja     0x140013d94
   140013d1d:	jo     0x140013d1f
   140013d1f:	add    DWORD PTR [rcx],edx
   140013d21:	adc    DWORD PTR [rcx],edx
   140013d23:	adc    DWORD PTR [rcx],edx
   140013d25:	adc    DWORD PTR [rcx],edx
   140013d27:	adc    DWORD PTR [rcx],edx
   140013d29:	adc    DWORD PTR [rdi-0x78],edi
   140013d2c:	ja     0x140013d16
   140013d2e:	call   0x1b7793532
   140013d33:	ja     0x140013dac
   140013d35:	ja     0x140013dae
   140013d37:	jo     0x140013d4a
   140013d39:	adc    DWORD PTR [rcx],edx
   140013d3b:	adc    DWORD PTR [rcx],edx
   140013d3d:	adc    DWORD PTR [rcx],edx
   140013d3f:	adc    DWORD PTR [rcx],edx
   140013d41:	adc    DWORD PTR [rdi-0x78],edi
   140013d44:	ja     0x140013cd4
   140013d46:	mov    cs,WORD PTR [rsi+0x77f7ff8f]
   140013d4c:	ja     0x140013dc5
   140013d4e:	ja     0x140013dc0
   140013d50:	adc    DWORD PTR [rcx],edx
   140013d52:	adc    DWORD PTR [rcx],edx
   140013d54:	adc    DWORD PTR [rcx],edx
   140013d56:	adc    DWORD PTR [rcx],edx
   140013d58:	adc    DWORD PTR [rcx],edx
   140013d5a:	jg     0x140013ce4
   140013d5c:	ja     0x140013d46
   140013d5e:	call   0x12fea264b
   140013d63:	push   rdi
   140013d65:	ja     0x140013dde
   140013d67:	jo     0x140013d7a
   140013d69:	adc    DWORD PTR [rcx],edx
   140013d6b:	adc    DWORD PTR [rcx],edx
   140013d6d:	adc    DWORD PTR [rcx],edx
   140013d6f:	adc    DWORD PTR [rcx],edx
   140013d71:	adc    DWORD PTR [rdi-0x78],edi
   140013d74:	ja     0x140013d04
   140013d76:	mov    cs,WORD PTR [rsi-0x71717172]
   140013d7c:	(bad)  
   140013d7d:	push   rdi
   140013d7f:	jo     0x140013d92
   140013d81:	adc    DWORD PTR [rcx],edx
   140013d83:	adc    DWORD PTR [rcx],edx
   140013d85:	adc    DWORD PTR [rcx],edx
   140013d87:	adc    DWORD PTR [rcx],edx
   140013d89:	adc    DWORD PTR [rdi-0x78],edi
   140013d8c:	ja     0x140013d76
   140013d8e:	call   0x128ea267b
   140013d93:	call   0x1b0f92680
   140013d98:	adc    DWORD PTR [rcx],edx
   140013d9a:	adc    DWORD PTR [rcx],edx
   140013d9c:	adc    DWORD PTR [rcx],edx
   140013d9e:	adc    DWORD PTR [rcx],edx
   140013da0:	adc    DWORD PTR [rcx],edx
   140013da2:	jg     0x140013d2c
   140013da4:	ja     0x140013d34
   140013da6:	mov    cs,WORD PTR [rsi-0x71717172]
   140013dac:	mov    cs,WORD PTR [rsi+0x111170f7]
   140013db2:	adc    DWORD PTR [rcx],edx
   140013db4:	adc    DWORD PTR [rcx],edx
   140013db6:	adc    DWORD PTR [rcx],edx
   140013db8:	adc    DWORD PTR [rcx],edx
   140013dba:	jg     0x140013d43
   140013dbc:	js     0x140013da6
   140013dbe:	call   0x128ea26ab
   140013dc3:	call   0x1b0f926b0
   140013dc8:	adc    DWORD PTR [rcx],edx
   140013dca:	adc    DWORD PTR [rcx],edx
   140013dcc:	adc    DWORD PTR [rcx],edx
   140013dce:	adc    DWORD PTR [rcx],edx
   140013dd0:	adc    DWORD PTR [rcx],edx
   140013dd2:	jg     0x140013d5b
   140013dd4:	js     0x140013dc4
   140013dd6:	out    dx,al
   140013dd7:	out    dx,al
   140013dd8:	out    dx,al
   140013dd9:	out    dx,al
   140013dda:	mov    cs,WORD PTR [rsi+0x70f78e8e]
   140013de0:	adc    DWORD PTR [rcx],edx
   140013de2:	adc    DWORD PTR [rcx],edx
   140013de4:	adc    DWORD PTR [rcx],edx
   140013de6:	adc    DWORD PTR [rcx],edx
   140013de8:	adc    DWORD PTR [rdi],edx
   140013dea:	mov    BYTE PTR [rdi-0x11171188],al
   140013df0:	call   0x128ea26dd
   140013df5:	call   0x15112aef1
   140013dfa:	adc    DWORD PTR [rcx],edx
   140013dfc:	adc    DWORD PTR [rcx],edx
   140013dfe:	adc    DWORD PTR [rcx],edx
   140013e00:	adc    DWORD PTR [rdi],edx
   140013e02:	clc    
   140013e03:	xchg   DWORD PTR [rax-0x18],edi
   140013e06:	out    dx,al
   140013e07:	call   0xcef02cfa
   140013e0c:	mov    cs,WORD PTR [rsi+0x111170f7]
   140013e12:	adc    DWORD PTR [rcx],edx
   140013e14:	adc    DWORD PTR [rcx],edx
   140013e16:	adc    DWORD PTR [rcx],edx
   140013e18:	adc    DWORD PTR [rdi],edx
   140013e1a:	clc    
   140013e1b:	xchg   DWORD PTR [rax-0x2],edi
   140013e1e:	call   0x128ea2711
   140013e23:	call   0x1b0f92710
   140013e28:	adc    DWORD PTR [rcx],edx
   140013e2a:	adc    DWORD PTR [rcx],edx
   140013e2c:	adc    DWORD PTR [rcx],edx
   140013e2e:	adc    DWORD PTR [rcx],edx
   140013e30:	adc    DWORD PTR [rdi],edx
   140013e32:	clc    
   140013e33:	xchg   DWORD PTR [rax-0x12],edi
   140013e36:	out    dx,al
   140013e37:	call   0x12ef02d2a
   140013e3c:	mov    cs,WORD PTR [rsi+0x111170f7]
   140013e42:	adc    DWORD PTR [rcx],edx
   140013e44:	adc    DWORD PTR [rcx],edx
   140013e46:	adc    DWORD PTR [rcx],edx
   140013e48:	adc    DWORD PTR [rdi],edx
   140013e4a:	clc    
   140013e4b:	xchg   DWORD PTR [rax-0x2],edi
   140013e4e:	out    dx,al
   140013e4f:	out    dx,al
   140013e50:	call   0x128ea2743
   140013e55:	call   0x15112af51
   140013e5a:	adc    DWORD PTR [rcx],edx
   140013e5c:	adc    DWORD PTR [rcx],edx
   140013e5e:	adc    DWORD PTR [rcx],edx
   140013e60:	adc    DWORD PTR [rdi],edx
   140013e62:	clc    
   140013e63:	xchg   DWORD PTR [rax-0x11],edi
   140013e66:	out    dx,al
   140013e67:	call   0x12ef0275a
   140013e6c:	mov    cs,WORD PTR [rsi+0x111170f7]
   140013e72:	adc    DWORD PTR [rcx],edx
   140013e74:	adc    DWORD PTR [rcx],edx
   140013e76:	adc    DWORD PTR [rcx],edx
   140013e78:	adc    DWORD PTR [rdi],edx
   140013e7a:	clc    
   140013e7b:	xchg   DWORD PTR [rax-0x2],edi
   140013e7e:	(bad)  
   140013e7f:	out    dx,al
   140013e80:	call   0x128ea2773
   140013e85:	call   0x15112af81
   140013e8a:	adc    DWORD PTR [rcx],edx
   140013e8c:	adc    DWORD PTR [rcx],edx
   140013e8e:	adc    DWORD PTR [rcx],edx
   140013e90:	adc    DWORD PTR [rdi],edx
   140013e92:	clc    
   140013e93:	xchg   DWORD PTR [rax-0x11],edi
   140013e96:	out    dx,eax
   140013e97:	out    dx,al
   140013e98:	rol    BYTE PTR [rax],0x0
   140013e9b:	(bad)  
   140013e9c:	mov    cs,WORD PTR [rsi+0x111170f7]
   140013ea2:	adc    DWORD PTR [rcx],edx
   140013ea4:	adc    DWORD PTR [rcx],edx
   140013ea6:	adc    DWORD PTR [rcx],edx
   140013ea8:	adc    DWORD PTR [rdi],edx
   140013eaa:	clc    
   140013eab:	xchg   DWORD PTR [rax-0x2],edi
   140013eae:	(bad)  
   140013eaf:	dec    BYTE PTR [rsp+rcx*8+0x66]
   140013eb3:	(bad)  
   140013eb4:	add    al,ch
   140013eb6:	out    0x70,eax
   140013eb8:	adc    DWORD PTR [rcx],edx
   140013eba:	adc    DWORD PTR [rcx],edx
   140013ebc:	adc    DWORD PTR [rcx],edx
   140013ebe:	adc    DWORD PTR [rcx],edx
   140013ec0:	adc    DWORD PTR [rdi],edx
   140013ec2:	clc    
   140013ec3:	xchg   DWORD PTR [rax-0x1],edi
   140013ec6:	(bad)  
   140013ec7:	out    dx,eax
   140013ec8:	in     al,0x88
   140013eca:	int3   
   140013ecb:	(bad)  
   140013ecc:	data16 add BYTE PTR [rdi],al
   140013ecf:	jo     0x140013ee2
   140013ed1:	adc    DWORD PTR [rcx],edx
   140013ed3:	adc    DWORD PTR [rcx],edx
   140013ed5:	adc    DWORD PTR [rcx],edx
   140013ed7:	adc    DWORD PTR [rcx],edx
   140013ed9:	(bad)  
   140013eda:	clc    
   140013edb:	xchg   DWORD PTR [rax-0x2],edi
   140013ede:	(bad)  
   140013edf:	(bad)  
   140013ee0:	dec    BYTE PTR [rsi-0x18]
   140013ee3:	mov    esp,cs
   140013ee5:	data16 (bad) 
   140013ee7:	add    BYTE PTR [rcx],dl
   140013ee9:	adc    DWORD PTR [rcx],edx
   140013eeb:	adc    DWORD PTR [rcx],edx
   140013eed:	adc    DWORD PTR [rcx],edx
   140013eef:	adc    DWORD PTR [rcx],edx
   140013ef1:	(bad)  
   140013ef2:	clc    
   140013ef3:	xchg   DWORD PTR [rax-0x10000001],ecx
   140013ef9:	in     al,0xee
   140013efb:	call   0x1a6c80b88
   140013f00:	add    BYTE PTR [rcx],al
   140013f02:	adc    DWORD PTR [rcx],edx
   140013f04:	adc    DWORD PTR [rcx],edx
   140013f06:	adc    DWORD PTR [rcx],edx
   140013f08:	adc    DWORD PTR [rdi],edx
   140013f0a:	clc    
   140013f0b:	ja     0x140013e9c
   140013f0d:	(bad)  
   140013f0e:	(bad)  
   140013f0f:	(bad)  
   140013f10:	(bad)  
   140013f11:	inc    BYTE PTR [rsi+rbp*8-0x12]
   140013f15:	mov    BYTE PTR [rsp+rcx*8+0x11006066],cl
   140013f1c:	adc    DWORD PTR [rcx],edx
   140013f1e:	adc    DWORD PTR [rcx],edx
   140013f20:	adc    DWORD PTR [rdi],edx
   140013f22:	clc    
   140013f23:	ja     0x140013eb4
   140013f25:	(bad)  
   140013f26:	(bad)  
   140013f27:	(bad)  
   140013f28:	(bad)  
   140013f29:	out    dx,eax
   140013f2a:	out    dx,eax
   140013f2b:	rex.R out dx,al
   140013f2d:	out    dx,al
   140013f2e:	call   0x1a6c80bbb
   140013f33:	add    BYTE PTR [rcx],dl
   140013f35:	adc    DWORD PTR [rcx],edx
   140013f37:	adc    DWORD PTR [rcx],edx
   140013f39:	js     0x140013ec3
   140013f3b:	ja     0x140013ecc
   140013f3d:	(bad)  
   140013f3e:	(bad)  
   140013f3f:	(bad)  
   140013f40:	(bad)  
   140013f41:	(bad)  
   140013f42:	(bad)  
   140013f43:	inc    BYTE PTR [rsi+rbp*8-0x12]
   140013f47:	out    dx,al
   140013f48:	mov    BYTE PTR [rsp+rcx*8+0x11110066],cl
   140013f4f:	adc    DWORD PTR [rcx],edx
   140013f51:	jg     0x140013edb
   140013f53:	ja     0x140013ee4
   140013f55:	(bad)  
   140013f56:	(bad)  
   140013f57:	(bad)  
   140013f58:	(bad)  
   140013f59:	(bad)  
   140013f5a:	out    dx,eax
   140013f5b:	out    dx,eax
   140013f5c:	out    dx,al
   140013f5d:	rex.R out dx,al
   140013f5f:	out    dx,al
   140013f60:	out    dx,al
   140013f61:	enter  0xcc88,0x66
   140013f65:	add    BYTE PTR [rcx],dl
   140013f67:	adc    DWORD PTR [rcx],edx
   140013f69:	jg     0x140013ef3
   140013f6b:	ja     0x140013efc
   140013f6d:	(bad)  
   140013f6e:	(bad)  
   140013f6f:	(bad)  
   140013f70:	(bad)  
   140013f71:	(bad)  
   140013f72:	(bad)  
   140013f73:	(bad)  
   140013f74:	(bad)  
   140013f75:	out    dx,al
   140013f76:	rex.R out dx,al
   140013f78:	out    dx,al
   140013f79:	outs   dx,BYTE PTR ds:[rsi]
   140013f7a:	out    dx,al
   140013f7b:	mov    ah,cl
   140013f7d:	data16 add BYTE PTR [rcx],dl
   140013f80:	adc    DWORD PTR [rdi-0x78],edi
   140013f83:	ja     0x140013f14
   140013f85:	(bad)  
   140013f86:	(bad)  
   140013f87:	(bad)  
   140013f88:	(bad)  
   140013f89:	(bad)  
   140013f8a:	(bad)  
   140013f8b:	out    dx,eax
   140013f8c:	out    dx,eax
   140013f8d:	out    dx,al
   140013f8e:	test   DWORD PTR [rsi-0x1a],0x88eeeeee
   140013f95:	int3   
   140013f96:	add    WORD PTR [rcx],dx
   140013f99:	jg     0x140013f23
   140013f9b:	ja     0x140013f2c
   140013f9d:	(bad)  
   140013f9e:	(bad)  
   140013f9f:	(bad)  
   140013fa0:	(bad)  
   140013fa1:	(bad)  
   140013fa2:	(bad)  
   140013fa3:	(bad)  
   140013fa4:	(bad)  
   140013fa5:	(bad)  
   140013fa6:	div    DWORD PTR [rsi+rcx*2-0x1]
   140013faa:	out    dx,al
   140013fab:	out    dx,al
   140013fac:	out    dx,al
   140013fad:	mov    ah,cl
   140013faf:	(bad)  
   140013fb0:	adc    DWORD PTR [rdi-0x78],edi
   140013fb3:	ja     0x140013f44
   140013fb5:	(bad)  
   140013fb6:	(bad)  
   140013fb7:	(bad)  
   140013fb8:	(bad)  
   140013fb9:	(bad)  
   140013fba:	(bad)  
   140013fbb:	(bad)  
   140013fbc:	(bad)  
   140013fbd:	out    dx,eax
   140013fbe:	div    DWORD PTR [rax+0x44]
   140013fc1:	out    dx,al
   140013fc2:	(bad)  
   140013fc3:	(bad)  
   140013fc4:	out    dx,al
   140013fc5:	out    dx,al
   140013fc6:	enter  0x1160,0x7f
   140013fca:	mov    BYTE PTR [rdi-0x78],dh
   140013fcd:	(bad)  
   140013fce:	(bad)  
   140013fcf:	(bad)  
   140013fd0:	(bad)  
   140013fd1:	(bad)  
   140013fd2:	(bad)  
   140013fd3:	(bad)  
   140013fd4:	(bad)  
   140013fd5:	(bad)  
   140013fd6:	div    DWORD PTR [rax+0x4e]
   140013fd9:	rex.R out dx,al
   140013fdb:	out    dx,eax
   140013fdc:	(bad)  
   140013fdd:	call   0x1bf12a04a
   140013fe2:	mov    BYTE PTR [rdi+0x77],dh
   140013fe5:	mov    BYTE PTR [rax-0x7778],cl
   140013feb:	(bad)  
   140013fec:	(bad)  
   140013fed:	push   rdi
   140013fef:	jo     0x140014005
   140013ff1:	out    dx,al
   140013ff2:	rex.R
   140013ff3:	rex.WRX out dx,al
   140013ff5:	out    0xee,al
   140013ff7:	(bad)  
   140013ff8:	adc    DWORD PTR [rdi-0x78],edi
   140013ffb:	ja     0x140014074
   140013ffd:	ja     0x140014076
   140013fff:	ja     0x140014079
   140014001:	mov    BYTE PTR [rax-0x8007078],cl
   140014007:	jo     0x14001401a
   140014009:	int3   
   14001400a:	out    dx,al
   14001400b:	in     al,0x4e
   14001400d:	mov    dh,bh
   14001400f:	rcl    DWORD PTR [rcx],0x7f
   140014012:	mov    BYTE PTR [rax+0x77777788],cl
   140014018:	ja     0x140014091
   14001401a:	ja     0x140014093
   14001401c:	mov    BYTE PTR [rax+0x111170f7],cl
   140014022:	int3   
   140014023:	int3   
   140014024:	int3   
   140014025:	int3   
   140014026:	int3   
   140014027:	adc    DWORD PTR [rcx],edx
   140014029:	(bad)  
   14001402a:	(bad)  
   14001402b:	(bad)  
   14001402c:	dec    DWORD PTR [rax+0x77878888]
   140014032:	ja     0x1400140ab
   140014034:	ja     0x1400140ad
   140014036:	ja     0x1400140a8
   140014038:	adc    DWORD PTR [rcx],edx
   14001403a:	adc    DWORD PTR [rcx],edx
   14001403c:	adc    DWORD PTR [rcx],edx
   14001403e:	adc    DWORD PTR [rcx],edx
   140014040:	adc    DWORD PTR [rcx],edx
   140014042:	ja     0x1400140bb
   140014044:	ja     0x140013fd5
   140014046:	(bad)  
   140014047:	(bad)  
   140014048:	clc    
   140014049:	mov    BYTE PTR [rax+0x77777788],cl
   14001404f:	jo     0x140014062
   140014051:	adc    DWORD PTR [rcx],edx
   140014053:	adc    DWORD PTR [rcx],edx
   140014055:	adc    DWORD PTR [rcx],edx
   140014057:	adc    DWORD PTR [rcx],edx
   140014059:	adc    DWORD PTR [rcx],edx
   14001405b:	adc    DWORD PTR [rcx],edx
   14001405d:	ja     0x1400140d6
   14001405f:	ja     0x1400140d9
   140014061:	(bad)  
   140014062:	(bad)  
   140014063:	dec    DWORD PTR [rax+0x11708788]
   140014069:	adc    DWORD PTR [rcx],edx
   14001406b:	adc    DWORD PTR [rcx],edx
   14001406d:	adc    DWORD PTR [rcx],edx
   14001406f:	adc    DWORD PTR [rcx],edx
   140014071:	adc    DWORD PTR [rcx],edx
   140014073:	adc    DWORD PTR [rcx],edx
   140014075:	adc    DWORD PTR [rcx],edx
   140014077:	adc    DWORD PTR [rdi],edx
   140014079:	ja     0x1400140f2
   14001407b:	ja     0x14001400c
   14001407d:	push   rdi
   14001407f:	add    DWORD PTR [rcx],edx
   140014081:	adc    DWORD PTR [rcx],edx
   140014083:	adc    DWORD PTR [rcx],edx
   140014085:	adc    DWORD PTR [rcx],edx
   140014087:	adc    DWORD PTR [rcx],edx
   140014089:	adc    DWORD PTR [rcx],edx
   14001408b:	adc    DWORD PTR [rcx],edx
   14001408d:	adc    DWORD PTR [rcx],edx
   14001408f:	adc    DWORD PTR [rcx],edx
   140014091:	adc    DWORD PTR [rcx],edx
   140014093:	adc    DWORD PTR [rdi+0x77],esi
   140014096:	ja     0x1400140a9
   140014098:	adc    DWORD PTR [rcx],edx
   14001409a:	adc    DWORD PTR [rcx],edx
   14001409c:	adc    DWORD PTR [rcx],edx
   14001409e:	adc    DWORD PTR [rcx],edx
   1400140a0:	adc    DWORD PTR [rcx],edx
   1400140a2:	adc    DWORD PTR [rcx],edx
   1400140a4:	adc    DWORD PTR [rcx],edx
   1400140a6:	adc    DWORD PTR [rcx],edx
   1400140a8:	adc    DWORD PTR [rcx],edx
   1400140aa:	adc    DWORD PTR [rcx],edx
   1400140ac:	adc    DWORD PTR [rcx],edx
   1400140ae:	adc    DWORD PTR [rcx],edx
   1400140b0:	adc    DWORD PTR [rcx],edx
   1400140b2:	adc    DWORD PTR [rcx],edx
   1400140b4:	adc    DWORD PTR [rcx],edx
   1400140b6:	adc    DWORD PTR [rcx],edx
   1400140b8:	adc    DWORD PTR [rcx],edx
   1400140ba:	adc    DWORD PTR [rcx],edx
   1400140bc:	adc    DWORD PTR [rcx],edx
   1400140be:	adc    DWORD PTR [rcx],edx
   1400140c0:	adc    DWORD PTR [rcx],edx
   1400140c2:	adc    DWORD PTR [rcx],edx
   1400140c4:	adc    DWORD PTR [rcx],edx
   1400140c6:	adc    DWORD PTR [rcx],edx
   1400140c8:	adc    DWORD PTR [rcx],edx
   1400140ca:	adc    DWORD PTR [rcx],edx
   1400140cc:	adc    DWORD PTR [rcx],edx
   1400140ce:	adc    DWORD PTR [rcx],edx
   1400140d0:	(bad)  
   1400140d1:	(bad)  
   1400140d2:	(bad)  
   1400140d3:	(bad)  
   1400140d4:	(bad)  
   1400140d5:	inc    DWORD PTR [rax]
   1400140d7:	add    bh,bh
   1400140d9:	(bad)  
   1400140da:	(bad)  
   1400140db:	(bad)  
   1400140dc:	(bad)  
   1400140dd:	inc    DWORD PTR [rax]
   1400140df:	add    bh,bh
   1400140e1:	(bad)  
   1400140e2:	(bad)  
   1400140e3:	(bad)  
   1400140e4:	(bad)  
   1400140e5:	inc    DWORD PTR [rax]
   1400140e7:	add    ah,bh
   1400140e9:	(bad)  
   1400140ea:	(bad)  
   1400140eb:	(bad)  
   1400140ec:	(bad)  
   1400140ed:	inc    DWORD PTR [rax]
   1400140ef:	add    al,bh
   1400140f1:	add    edi,edi
   1400140f3:	(bad)  
   1400140f4:	(bad)  
   1400140f5:	inc    DWORD PTR [rax]
   1400140f7:	add    al,dh
   1400140f9:	add    BYTE PTR [rdi],bl
   1400140fb:	(bad)  
   1400140fc:	(bad)  
   1400140fd:	inc    DWORD PTR [rax]
   1400140ff:	add    al,dh
   140014101:	add    BYTE PTR [rcx],al
   140014103:	(bad)  
   140014104:	(bad)  
   140014105:	inc    DWORD PTR [rax]
   140014107:	add    al,dh
   140014109:	add    BYTE PTR [rax],al
   14001410b:	(bad)  
   14001410c:	(bad)  
   14001410d:	inc    DWORD PTR [rax]
   14001410f:	add    al,dh
   140014111:	add    BYTE PTR [rax],al
   140014113:	add    edi,edi
   140014115:	inc    DWORD PTR [rax]
   140014117:	add    al,dh
   140014119:	add    BYTE PTR [rax],al
   14001411b:	add    bh,bh
   14001411d:	inc    DWORD PTR [rax]
   14001411f:	add    al,dh
   140014121:	add    BYTE PTR [rax],al
   140014123:	add    bh,bh
   140014125:	inc    DWORD PTR [rax]
   140014127:	add    al,dh
   140014129:	add    BYTE PTR [rax],al
   14001412b:	add    bh,bh
   14001412d:	inc    DWORD PTR [rax]
   14001412f:	add    al,dh
   140014131:	add    BYTE PTR [rax],al
   140014133:	add    bh,bh
   140014135:	inc    DWORD PTR [rax]
   140014137:	add    al,dh
   140014139:	add    BYTE PTR [rax],al
   14001413b:	add    bh,bh
   14001413d:	inc    DWORD PTR [rax]
   14001413f:	add    al,dh
   140014141:	add    BYTE PTR [rax],al
   140014143:	add    bh,bh
   140014145:	inc    DWORD PTR [rax]
   140014147:	add    al,dh
   140014149:	add    BYTE PTR [rax],al
   14001414b:	add    bh,bh
   14001414d:	inc    DWORD PTR [rax]
   14001414f:	add    al,dh
   140014151:	add    BYTE PTR [rax],al
   140014153:	add    bh,bh
   140014155:	inc    DWORD PTR [rax]
   140014157:	add    al,ah
   140014159:	add    BYTE PTR [rax],al
   14001415b:	add    bh,bh
   14001415d:	inc    DWORD PTR [rax]
   14001415f:	add    al,ah
   140014161:	add    BYTE PTR [rax],al
   140014163:	add    bh,bh
   140014165:	inc    DWORD PTR [rax]
   140014167:	add    al,ah
   140014169:	add    BYTE PTR [rax],al
   14001416b:	add    bh,bh
   14001416d:	inc    DWORD PTR [rax]
   14001416f:	add    al,ah
   140014171:	add    BYTE PTR [rax],al
   140014173:	add    bh,bh
   140014175:	inc    DWORD PTR [rax]
   140014177:	add    al,ah
   140014179:	add    BYTE PTR [rax],al
   14001417b:	add    bh,bh
   14001417d:	inc    DWORD PTR [rax]
   14001417f:	add    al,ah
   140014181:	add    BYTE PTR [rax],al
   140014183:	add    bh,bh
   140014185:	inc    DWORD PTR [rax]
   140014187:	add    al,ah
   140014189:	add    BYTE PTR [rax],al
   14001418b:	add    bh,bh
   14001418d:	inc    DWORD PTR [rax]
   14001418f:	add    al,ah
   140014191:	add    BYTE PTR [rax],al
   140014193:	add    bh,bh
   140014195:	inc    DWORD PTR [rax]
   140014197:	add    al,ah
   140014199:	add    BYTE PTR [rax],al
   14001419b:	add    bh,bh
   14001419d:	inc    DWORD PTR [rax]
   14001419f:	add    al,ah
   1400141a1:	add    BYTE PTR [rax],al
   1400141a3:	add    bh,bh
   1400141a5:	inc    DWORD PTR [rax]
   1400141a7:	add    al,ah
   1400141a9:	add    BYTE PTR [rax],al
   1400141ab:	add    bh,bh
   1400141ad:	inc    DWORD PTR [rax]
   1400141af:	add    al,ah
   1400141b1:	add    BYTE PTR [rax],al
   1400141b3:	add    BYTE PTR [rdi],bl
   1400141b5:	inc    DWORD PTR [rax]
   1400141b7:	add    al,ah
   1400141b9:	add    BYTE PTR [rax],al
   1400141bb:	add    BYTE PTR [rbx],al
   1400141bd:	inc    DWORD PTR [rax]
   1400141bf:	add    al,ah
   1400141c1:	add    BYTE PTR [rax],al
   1400141c3:	add    BYTE PTR [rax],al
   1400141c5:	inc    DWORD PTR [rax]
   1400141c7:	add    al,al
   1400141c9:	add    BYTE PTR [rax],al
   1400141cb:	add    BYTE PTR [rax],al
   1400141cd:	(bad)  
   1400141ce:	add    BYTE PTR [rax],al
   1400141d0:	rol    BYTE PTR [rax],0x0
   1400141d3:	add    BYTE PTR [rax],al
   1400141d5:	sldt   WORD PTR [rax]
   1400141d8:	rol    BYTE PTR [rax],0x0
   1400141db:	add    BYTE PTR [rax],al
   1400141dd:	add    eax,DWORD PTR [rax]
   1400141df:	add    al,al
   1400141e1:	add    BYTE PTR [rax],al
   1400141e3:	add    BYTE PTR [rax],al
   1400141e5:	add    DWORD PTR [rax],eax
   1400141e7:	add    al,al
   1400141e9:	add    BYTE PTR [rax],al
   1400141eb:	add    BYTE PTR [rax],al
   1400141ed:	add    BYTE PTR [rax],al
   1400141ef:	add    al,al
   1400141f1:	add    BYTE PTR [rax],al
   1400141f3:	add    BYTE PTR [rax],al
   1400141f5:	add    BYTE PTR [rax],al
   1400141f7:	add    al,al
   1400141f9:	add    BYTE PTR [rax],al
   1400141fb:	add    BYTE PTR [rax],al
   1400141fd:	add    BYTE PTR [rax],al
   1400141ff:	add    al,al
   140014201:	add    BYTE PTR [rax],al
   140014203:	add    BYTE PTR [rax-0x40000000],al
   140014209:	add    BYTE PTR [rax],al
   14001420b:	add    al,al
   14001420d:	add    DWORD PTR [rax],eax
   14001420f:	add    al,al
   140014211:	add    BYTE PTR [rax],al
   140014213:	add    al,dh
   140014215:	add    eax,DWORD PTR [rax]
   140014217:	add    al,ah
   140014219:	add    BYTE PTR [rax],al
   14001421b:	add    bh,bh
   14001421d:	inc    DWORD PTR [rax]
   14001421f:	add    al,dh
   140014221:	add    BYTE PTR [rax],al
   140014223:	add    bh,bh
   140014225:	inc    DWORD PTR [rax]
   140014227:	add    bh,bh
   140014229:	rol    BYTE PTR [rax],0x0
   14001422c:	(bad)  
   14001422d:	inc    DWORD PTR [rax]
   14001422f:	add    bh,bh
   140014231:	inc    DWORD PTR [rax+0xffff01]
   140014237:	add    bh,bh
   140014239:	(bad)  
   14001423a:	inc    DWORD PTR [rbx]
   14001423c:	(bad)  
   14001423d:	inc    DWORD PTR [rax]
   14001423f:	add    bh,bh
   140014241:	(bad)  
   140014242:	(bad)  
   140014243:	(bad)  
   140014244:	(bad)  
   140014245:	inc    DWORD PTR [rax]
   140014247:	add    bh,bh
   140014249:	(bad)  
   14001424a:	(bad)  
   14001424b:	(bad)  
   14001424c:	(bad)  
   14001424d:	inc    DWORD PTR [rax]
   14001424f:	add    BYTE PTR [rax],ch
   140014251:	add    BYTE PTR [rax],al
   140014253:	add    BYTE PTR [rax],ah
   140014255:	add    BYTE PTR [rax],al
   140014257:	add    BYTE PTR [rax+0x0],al
   14001425a:	add    BYTE PTR [rax],al
   14001425c:	add    DWORD PTR [rax],eax
   14001425e:	add    al,0x0
	...
   140014280:	add    BYTE PTR [rax-0x80000000],al
   140014286:	add    BYTE PTR [rax],0x80
   140014289:	add    BYTE PTR [rax],al
   14001428b:	add    BYTE PTR [rax-0x7fff8000],al
   140014291:	add    BYTE PTR [rax],0x0
   140014294:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   14001429b:	add    BYTE PTR [rax],al
   14001429d:	add    bh,bh
   14001429f:	add    BYTE PTR [rax],al
   1400142a1:	add    BYTE PTR [rax],al
   1400142a3:	add    BYTE PTR [rax],al
   1400142a5:	(bad)  
   1400142a6:	inc    DWORD PTR [rax]
   1400142a8:	inc    DWORD PTR [rax]
   1400142aa:	add    BYTE PTR [rax],al
   1400142ac:	inc    DWORD PTR [rax]
   1400142ae:	inc    DWORD PTR [rax]
   1400142b0:	(bad)  
   1400142b1:	inc    DWORD PTR [rax]
   1400142b3:	add    bh,bh
   1400142b5:	(bad)  
   1400142b6:	inc    DWORD PTR [rax]
   1400142b8:	adc    DWORD PTR [rcx],edx
   1400142ba:	adc    DWORD PTR [rcx],edx
   1400142bc:	adc    DWORD PTR [rcx],edx
   1400142be:	adc    DWORD PTR [rcx],edx
   1400142c0:	adc    DWORD PTR [rcx],edx
   1400142c2:	adc    DWORD PTR [rcx],edx
   1400142c4:	adc    DWORD PTR [rcx],edx
   1400142c6:	adc    DWORD PTR [rcx],edx
   1400142c8:	adc    DWORD PTR [rax],edx
   1400142ca:	add    BYTE PTR [rcx],dl
   1400142cc:	adc    DWORD PTR [rcx],edx
   1400142ce:	adc    DWORD PTR [rcx],edx
   1400142d0:	adc    DWORD PTR [rcx],edx
   1400142d2:	adc    DWORD PTR [rcx],edx
   1400142d4:	adc    DWORD PTR [rcx],edx
   1400142d6:	adc    DWORD PTR [rcx],edx
   1400142d8:	(bad)  
   1400142d9:	ja     0x140014352
   1400142db:	add    BYTE PTR [rcx],al
   1400142dd:	adc    DWORD PTR [rcx],edx
   1400142df:	adc    DWORD PTR [rcx],edx
   1400142e1:	adc    DWORD PTR [rcx],edx
   1400142e3:	adc    DWORD PTR [rcx],edx
   1400142e5:	adc    DWORD PTR [rcx],edx
   1400142e7:	adc    DWORD PTR [rax-0x79],edi
   1400142ea:	ja     0x140014363
   1400142ec:	jo     0x1400142ee
   1400142ee:	adc    DWORD PTR [rcx],edx
   1400142f0:	adc    DWORD PTR [rcx],edx
   1400142f2:	adc    DWORD PTR [rcx],edx
   1400142f4:	adc    DWORD PTR [rcx],edx
   1400142f6:	adc    DWORD PTR [rcx],edx
   1400142f8:	jg     0x140014281
   1400142fa:	ja     0x140014373
   1400142fc:	ja     0x140014375
   1400142fe:	add    BYTE PTR [rcx],al
   140014300:	adc    DWORD PTR [rcx],edx
   140014302:	adc    DWORD PTR [rcx],edx
   140014304:	adc    DWORD PTR [rcx],edx
   140014306:	adc    DWORD PTR [rcx],edx
   140014308:	jg     0x140014291
   14001430a:	js     0x14001430b
   14001430c:	ja     0x140014385
   14001430e:	ja     0x140014380
   140014310:	add    BYTE PTR [rcx],dl
   140014312:	adc    DWORD PTR [rcx],edx
   140014314:	adc    DWORD PTR [rcx],edx
   140014316:	adc    DWORD PTR [rcx],edx
   140014318:	jg     0x1400142a1
   14001431a:	jle    0x1400142aa
   14001431c:	push   rdi
   14001431e:	ja     0x140014397
   140014320:	ja     0x140014322
   140014322:	adc    DWORD PTR [rcx],edx
   140014324:	adc    DWORD PTR [rcx],edx
   140014326:	adc    DWORD PTR [rcx],edx
   140014328:	jg     0x1400142b1
   14001432a:	js     0x140014314
   14001432c:	call   0x1b7794320
   140014331:	ja     0x140014334
   140014333:	adc    DWORD PTR [rcx],edx
   140014335:	adc    DWORD PTR [rcx],edx
   140014337:	adc    DWORD PTR [rdi-0x79],edi
   14001433a:	jle    0x1400142ca
   14001433c:	mov    cs,WORD PTR [rsi+0x77f7ff8e]
   140014342:	add    DWORD PTR [rcx],edx
   140014344:	adc    DWORD PTR [rcx],edx
   140014346:	adc    DWORD PTR [rcx],edx
   140014348:	jg     0x1400142d1
   14001434a:	js     0x140014334
   14001434c:	call   0x12fea2c39
   140014351:	test   DWORD PTR [rcx],0x11111111
   140014357:	adc    DWORD PTR [rdi-0x79],edi
   14001435a:	jle    0x1400142ea
   14001435c:	mov    cs,WORD PTR [rsi-0x8717172]
   140014362:	add    DWORD PTR [rcx],edx
   140014364:	adc    DWORD PTR [rcx],edx
   140014366:	adc    DWORD PTR [rcx],edx
   140014368:	jg     0x1400142f1
   14001436a:	jle    0x14001435a
   14001436c:	out    dx,al
   14001436d:	call   0x137ea2c5a
   140014372:	add    DWORD PTR [rcx],edx
   140014374:	adc    DWORD PTR [rcx],edx
   140014376:	adc    DWORD PTR [rcx],edx
   140014378:	jg     0x140014301
   14001437a:	jle    0x14001430a
   14001437c:	mov    cs,WORD PTR [rsi-0x8717172]
   140014382:	add    DWORD PTR [rcx],edx
   140014384:	adc    DWORD PTR [rcx],edx
   140014386:	adc    DWORD PTR [rcx],edx
   140014388:	jg     0x140014311
   14001438a:	jle    0x14001437a
   14001438c:	out    dx,al
   14001438d:	out    dx,al
   14001438e:	call   0x141f92c7b
   140014393:	adc    DWORD PTR [rcx],edx
   140014395:	adc    DWORD PTR [rcx],edx
   140014397:	adc    DWORD PTR [rdi-0x79],edi
   14001439a:	jle    0x14001438a
   14001439c:	out    dx,al
   14001439d:	mov    cs,WORD PTR [rsi+0x1f78e8e]
   1400143a3:	adc    DWORD PTR [rcx],edx
   1400143a5:	adc    DWORD PTR [rcx],edx
   1400143a7:	adc    DWORD PTR [rdi-0x79],edi
   1400143aa:	jg     0x14001439b
   1400143ac:	out    dx,al
   1400143ad:	out    dx,al
   1400143ae:	call   0x141f92c9b
   1400143b3:	adc    DWORD PTR [rcx],edx
   1400143b5:	adc    DWORD PTR [rcx],edx
   1400143b7:	adc    DWORD PTR [rdi-0x79],edi
   1400143ba:	jle    0x1400143ba
   1400143bc:	(bad)  
   1400143bd:	out    dx,al
   1400143be:	mov    cs,WORD PTR [rsi+0x1101f78e]
   1400143c4:	adc    DWORD PTR [rcx],edx
   1400143c6:	adc    DWORD PTR [rcx],edx
   1400143c8:	jg     0x140014351
   1400143ca:	jg     0x1400143bb
   1400143cc:	out    dx,eax
   1400143cd:	loopne 0x1400143cf
   1400143cf:	or     al,ch
   1400143d1:	test   DWORD PTR [rcx],0x11111111
   1400143d7:	adc    DWORD PTR [rdi-0x79],edi
   1400143da:	jle    0x1400143da
   1400143dc:	(bad)  
   1400143dd:	cld    
   1400143de:	data16 (bad) 
   1400143e0:	add    bh,dh
   1400143e2:	add    DWORD PTR [rcx],edx
   1400143e4:	adc    DWORD PTR [rcx],edx
   1400143e6:	adc    DWORD PTR [rcx],edx
   1400143e8:	jg     0x140014371
   1400143ea:	jg     0x1400143db
   1400143ec:	(bad)  
   1400143ed:	out    dx,eax
   1400143ee:	(bad)  
   1400143ef:	out    0x66,al
   1400143f1:	add    BYTE PTR [rcx],al
   1400143f3:	adc    DWORD PTR [rcx],edx
   1400143f5:	adc    DWORD PTR [rcx],edx
   1400143f7:	adc    DWORD PTR [rdi-0x79],edi
   1400143fa:	jle    0x1400143fa
   1400143fc:	(bad)  
   1400143fd:	(bad)  
   1400143fe:	cld    
   1400143ff:	(bad)  
   140014400:	out    dx,al
   140014401:	data16 (bad) 
   140014403:	add    BYTE PTR [rcx],dl
   140014405:	adc    DWORD PTR [rcx],edx
   140014407:	adc    DWORD PTR [rdi-0x79],edi
   14001440a:	jg     0x14001440b
   14001440c:	(bad)  
   14001440d:	(bad)  
   14001440e:	out    dx,eax
   14001440f:	in     al,dx
   140014410:	(bad)  
   140014411:	out    dx,al
   140014412:	out    0x66,al
   140014414:	add    BYTE PTR [rcx],al
   140014416:	adc    DWORD PTR [rcx],edx
   140014418:	jg     0x1400143a1
   14001441a:	jg     0x14001441a
   14001441c:	(bad)  
   14001441d:	(bad)  
   14001441e:	(bad)  
   14001441f:	(bad)  
   140014420:	in     al,dx
   140014421:	(bad)  
   140014422:	out    dx,al
   140014423:	out    dx,al
   140014424:	data16 (bad) 
   140014426:	add    DWORD PTR [rcx],edx
   140014428:	jg     0x1400143b1
   14001442a:	jg     0x14001442b
   14001442c:	(bad)  
   14001442d:	(bad)  
   14001442e:	out    dx,eax
   14001442f:	out    dx,eax
   140014430:	out    dx,al
   140014431:	cld    
   140014432:	(bad)  
   140014433:	out    dx,al
   140014434:	out    dx,al
   140014435:	out    0x60,al
   140014437:	add    DWORD PTR [rdi-0x79],edi
   14001443a:	jg     0x14001443b
   14001443c:	(bad)  
   14001443d:	(bad)  
   14001443e:	(bad)  
   14001443f:	(bad)  
   140014440:	out    dx,al
   140014441:	test   DWORD PTR [rsp+rcx*8],0x60e6eece
   140014448:	jg     0x1400143d1
   14001444a:	ja     0x1400144c3
   14001444c:	jg     0x14001444d
   14001444e:	(bad)  
   14001444f:	out    dx,eax
   140014450:	out    dx,al
   140014451:	test   DWORD PTR [rcx],0xe6ceecce
   140014457:	loopne 0x1400144d8
   140014459:	xchg   DWORD PTR [rdi+0x77],esi
   14001445c:	ja     0x1400144d5
   14001445e:	jle    0x14001445e
   140014460:	out    dx,al
   140014461:	test   DWORD PTR [rcx],0xeeeece1c
   140014467:	loopne 0x1400144e1
   140014469:	(bad)  
   14001446a:	clc    
   14001446b:	mov    BYTE PTR [rdi+0x77],dh
   14001446e:	ja     0x1400144e7
   140014470:	ja     0x140014459
   140014472:	add    DWORD PTR [rcx],edx
   140014474:	sbb    al,0xcc
   140014476:	int3   
   140014477:	rcl    DWORD PTR [rdi],0x77
   14001447a:	js     0x14001447b
   14001447c:	dec    DWORD PTR [rax+0x77777787]
   140014482:	add    DWORD PTR [rcx],edx
   140014484:	adc    DWORD PTR [rcx],edx
   140014486:	adc    DWORD PTR [rcx],edx
   140014488:	adc    DWORD PTR [rcx],edx
   14001448a:	(bad)  
   14001448b:	ja     0x140014504
   14001448d:	(bad)  
   14001448e:	(bad)  
   14001448f:	clc    
   140014490:	mov    BYTE PTR [rdi+0x11111101],al
   140014496:	adc    DWORD PTR [rcx],edx
   140014498:	adc    DWORD PTR [rcx],edx
   14001449a:	adc    DWORD PTR [rcx],edx
   14001449c:	adc    DWORD PTR [rdi+0x77],esi
   14001449f:	js     0x1400144a0
   1400144a1:	clc    
   1400144a2:	add    DWORD PTR [rcx],edx
   1400144a4:	adc    DWORD PTR [rcx],edx
   1400144a6:	adc    DWORD PTR [rcx],edx
   1400144a8:	adc    DWORD PTR [rcx],edx
   1400144aa:	adc    DWORD PTR [rcx],edx
   1400144ac:	adc    DWORD PTR [rcx],edx
   1400144ae:	adc    DWORD PTR [rdi],edx
   1400144b0:	ja     0x140014529
   1400144b2:	adc    DWORD PTR [rcx],edx
   1400144b4:	adc    DWORD PTR [rcx],edx
   1400144b6:	adc    DWORD PTR [rcx],edx
   1400144b8:	(bad)  
   1400144b9:	(bad)  
   1400144ba:	(bad)  
   1400144bb:	jmp    rbx
   1400144bd:	(bad)  
   1400144be:	(bad)  
   1400144bf:	inc    DWORD PTR [rax+0xffff7f]
   1400144c5:	ud0    edi,edi
   1400144c8:	add    BYTE PTR [rcx],al
   1400144ca:	(bad)  
   1400144cb:	inc    DWORD PTR [rax]
   1400144cd:	add    BYTE PTR [rdi],bh
   1400144cf:	inc    DWORD PTR [rax]
   1400144d1:	add    BYTE PTR [rdi],cl
   1400144d3:	inc    DWORD PTR [rax]
   1400144d5:	add    BYTE PTR [rdi],al
   1400144d7:	inc    DWORD PTR [rax]
   1400144d9:	add    BYTE PTR [rdi],al
   1400144db:	inc    DWORD PTR [rax]
   1400144dd:	add    BYTE PTR [rdi],al
   1400144df:	inc    DWORD PTR [rax]
   1400144e1:	add    BYTE PTR [rdi],al
   1400144e3:	inc    DWORD PTR [rax]
   1400144e5:	add    BYTE PTR [rdi],al
   1400144e7:	inc    DWORD PTR [rax]
   1400144e9:	add    BYTE PTR [rdi],al
   1400144eb:	inc    DWORD PTR [rax]
   1400144ed:	add    BYTE PTR [rdi],al
   1400144ef:	inc    DWORD PTR [rax]
   1400144f1:	add    BYTE PTR [rdi],al
   1400144f3:	inc    DWORD PTR [rax]
   1400144f5:	add    BYTE PTR [rdi],al
   1400144f7:	inc    DWORD PTR [rax]
   1400144f9:	add    BYTE PTR [rdi],al
   1400144fb:	inc    DWORD PTR [rax]
   1400144fd:	add    BYTE PTR [rdi],al
   1400144ff:	inc    DWORD PTR [rax]
   140014501:	add    BYTE PTR [rdi],al
   140014503:	inc    DWORD PTR [rax]
   140014505:	add    BYTE PTR [rdi],al
   140014507:	inc    DWORD PTR [rax]
   140014509:	add    BYTE PTR [rax],al
   14001450b:	inc    DWORD PTR [rax]
   14001450d:	add    BYTE PTR [rax],al
   14001450f:	(bad)  
   140014510:	add    BYTE PTR [rax],al
   140014512:	add    BYTE PTR [rdi],al
   140014514:	add    BYTE PTR [rax],al
   140014516:	add    BYTE PTR [rcx],al
   140014518:	add    BYTE PTR [rax],al
   14001451a:	add    BYTE PTR [rax],al
   14001451c:	add    BYTE PTR [rax],al
   14001451e:	add    al,0x0
   140014520:	add    BYTE PTR [rax],al
   140014522:	(bad)  
   140014523:	add    BYTE PTR [rax],al
   140014525:	add    BYTE PTR [rdi],al
   140014527:	add    DWORD PTR [rax-0x700f900],0xffff0700
   140014531:	rol    BYTE PTR [rdi],0xff
   140014534:	(bad)  
   140014535:	dec    BYTE PTR [rdi]
   140014537:	jmp    FWORD PTR [rax]
   140014539:	add    BYTE PTR [rax],al
   14001453b:	add    BYTE PTR [rax],dl
   14001453d:	add    BYTE PTR [rax],al
   14001453f:	add    BYTE PTR [rax],ah
   140014541:	add    BYTE PTR [rax],al
   140014543:	add    BYTE PTR [rcx],al
   140014545:	add    BYTE PTR [rax+rax*1],al
	...
   140014568:	add    BYTE PTR [rax-0x80000000],al
   14001456e:	add    BYTE PTR [rax],0x80
   140014571:	add    BYTE PTR [rax],al
   140014573:	add    BYTE PTR [rax-0x7fff8000],al
   140014579:	add    BYTE PTR [rax],0x0
   14001457c:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   140014583:	add    BYTE PTR [rax],al
   140014585:	add    bh,bh
   140014587:	add    BYTE PTR [rax],al
   140014589:	add    BYTE PTR [rax],al
   14001458b:	add    BYTE PTR [rax],al
   14001458d:	(bad)  
   14001458e:	inc    DWORD PTR [rax]
   140014590:	inc    DWORD PTR [rax]
   140014592:	add    BYTE PTR [rax],al
   140014594:	inc    DWORD PTR [rax]
   140014596:	inc    DWORD PTR [rax]
   140014598:	(bad)  
   140014599:	inc    DWORD PTR [rax]
   14001459b:	add    bh,bh
   14001459d:	(bad)  
   14001459e:	inc    DWORD PTR [rax]
   1400145a0:	adc    DWORD PTR [rcx],edx
   1400145a2:	adc    DWORD PTR [rcx],edx
   1400145a4:	adc    DWORD PTR [rcx],edx
   1400145a6:	adc    DWORD PTR [rcx],edx
   1400145a8:	adc    BYTE PTR [rax],al
   1400145aa:	add    DWORD PTR [rcx],edx
   1400145ac:	adc    DWORD PTR [rcx],edx
   1400145ae:	adc    DWORD PTR [rcx],edx
   1400145b0:	ja     0x140014629
   1400145b2:	jo     0x1400145b4
   1400145b4:	add    DWORD PTR [rcx],edx
   1400145b6:	adc    DWORD PTR [rcx],edx
   1400145b8:	js     0x140014632
   1400145ba:	xchg   DWORD PTR [rdi+0x70],esi
   1400145bd:	adc    DWORD PTR [rcx],edx
   1400145bf:	adc    DWORD PTR [rax+0x7e],edi
   1400145c2:	mov    cs,WORD PTR [rax+0x11111170]
   1400145c8:	js     0x140014642
   1400145ca:	call   0x15112b6b7
   1400145cf:	adc    DWORD PTR [rax+0x7e],edi
   1400145d2:	mov    cs,WORD PTR [rax+0x11111170]
   1400145d8:	js     0x140014659
   1400145da:	in     al,0x44
   1400145dc:	jo     0x1400145ef
   1400145de:	adc    DWORD PTR [rcx],edx
   1400145e0:	js     0x140014660
   1400145e2:	dec    dh
   1400145e4:	adc    DWORD PTR [rcx],r10d
   1400145e7:	adc    DWORD PTR [rax+0x7f],edi
   1400145ea:	out    dx,eax
   1400145eb:	in     al,dx
   1400145ec:	out    dx,al
   1400145ed:	add    BYTE PTR [rcx],al
   1400145ef:	adc    DWORD PTR [rax+0x7f],edi
   1400145f2:	(bad)  
   1400145f3:	dec    ah
   1400145f5:	out    dx,al
   1400145f6:	loopne 0x1400145f9
   1400145f8:	js     0x140014671
   1400145fa:	jg     0x1400145eb
   1400145fc:	lock int3 
   1400145fe:	out    dx,al
   1400145ff:	loopne 0x140014679
   140014601:	mov    BYTE PTR [rdi-0x33ee8f89],al
   140014607:	rcl    BYTE PTR [rdi],0x77
   14001460a:	js     0x140014594
   14001460c:	adc    BYTE PTR [rcx],0x11
   14001460f:	adc    DWORD PTR [rcx],edx
   140014611:	adc    DWORD PTR [rdi],edx
   140014613:	ja     0x140014686
   140014615:	adc    DWORD PTR [rcx],edx
   140014617:	adc    DWORD PTR [rcx],edx
   140014619:	adc    DWORD PTR [rcx],edx
   14001461b:	adc    DWORD PTR [rcx],edx
   14001461d:	adc    DWORD PTR [rcx],edx
   14001461f:	adc    edi,edi
   140014621:	(bad)  
   140014622:	jle    0x1400145b2
   140014624:	xchg   edi,edi
   140014626:	mov    ?,edi
   140014628:	add    BYTE PTR [rdi+0x1],bh
   14001462b:	adc    DWORD PTR [rax],eax
   14001462d:	(bad)  
   14001462e:	adc    DWORD PTR [rcx],edx
   140014630:	add    BYTE PTR [rdi],bh
   140014632:	js     0x14001461c
   140014634:	add    BYTE PTR [rdi],bh
   140014636:	call   0x141404723
   14001463b:	adc    DWORD PTR [rax],eax
   14001463d:	(bad)  
   14001463e:	adc    DWORD PTR [rcx],edx
   140014640:	add    BYTE PTR [rdi],bh
   140014642:	jle    0x1400145d2
   140014644:	add    BYTE PTR [rdi],al
   140014646:	mov    cs,WORD PTR [rsi+0x11010100]
   14001464c:	add    BYTE PTR [rax],al
   14001464e:	adc    DWORD PTR [rcx],edx
   140014650:	add    BYTE PTR [rax],dh
   140014652:	jle    0x140014642
   140014654:	cmp    BYTE PTR [rdi],0xe8
   140014657:	call   0x15102c654
   14001465c:	(bad)  
   14001465d:	call   QWORD PTR [rcx]
   14001465f:	adc    DWORD PTR [rax],ebp
   140014661:	add    BYTE PTR [rax],al
   140014663:	add    BYTE PTR [rax],dh
   140014665:	add    BYTE PTR [rax],al
   140014667:	add    BYTE PTR [rax+0x0],ah
   14001466a:	add    BYTE PTR [rax],al
   14001466c:	add    DWORD PTR [rax],eax
   14001466e:	or     BYTE PTR [rax],al
	...
   14001468c:	(bad)  
   14001468d:	(bad)  
   14001468e:	inc    DWORD PTR [rax]
   140014690:	add    BYTE PTR [rax],al
   140014692:	add    BYTE PTR [rax],al
   140014694:	pop    rbp
   140014695:	(bad)  
   140014696:	(bad)  
   140014697:	add    BYTE PTR [rdi+0x45],al
   14001469a:	add    BYTE PTR [r8-0x3fff4f52],r14b
   1400146a1:	mov    edi,0xb1b200c0
   1400146a6:	mov    dl,0x0
   1400146a8:	call   FWORD PTR [rdi-0x5b00ff61]
   1400146ae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400146af:	add    bh,bh
   1400146b1:	test   al,0xa8
   1400146b3:	add    bh,bh
   1400146b5:	lods   al,BYTE PTR ds:[rsi]
   1400146b6:	lods   al,BYTE PTR ds:[rsi]
   1400146b7:	add    bh,bh
   1400146b9:	scas   al,BYTE PTR es:[rdi]
   1400146ba:	scas   al,BYTE PTR es:[rdi]
   1400146bb:	add    bh,bh
   1400146bd:	mov    cl,0xb1
   1400146bf:	add    ah,bh
   1400146c1:	mov    cl,0xb1
   1400146c3:	add    bh,bh
   1400146c5:	mov    ah,0xb4
   1400146c7:	add    bh,bh
   1400146c9:	mov    bh,0xb7
   1400146cb:	add    bh,bh
   1400146cd:	mov    edx,0xb8fd00ba
   1400146d2:	mov    eax,0xb7b7fa00
   1400146d7:	add    bl,bh
   1400146d9:	mov    ecx,0xbdff00b9
   1400146de:	mov    ebp,0xbbbbfc00
   1400146e3:	add    bh,bh
   1400146e5:	rol    al,0x0
   1400146e8:	(bad)  
   1400146e9:	xchg   esi,eax
   1400146ea:	xchg   esi,eax
   1400146eb:	add    al,cl
   1400146ed:	xchg   edi,eax
   1400146ee:	xchg   edi,eax
   1400146ef:	add    ch,al
   1400146f1:	xchg   ebp,eax
   1400146f2:	xchg   ebp,eax
   1400146f3:	add    bh,bh
   1400146f5:	ret    0xc2
   1400146f8:	cld    
   1400146f9:	mov    edi,0x9aca00bf
   1400146fe:	(bad)  
   1400146ff:	add    BYTE PTR [rdi-0x3eff6d6e],bh
   140014705:	xchg   esp,eax
   140014706:	xchg   esp,eax
   140014707:	add    BYTE PTR [rbp-0xff6e6f],bh
   14001470d:	(bad)
   140014710:	mov    ebx,0xb7009191
   140014715:	mov    cs,WORD PTR [rsi-0x6f6f4700]
   14001471b:	add    BYTE PTR [rbp-0xff7273],dh
   140014721:	leave  
   140014722:	leave  
   140014723:	add    BYTE PTR [rbx-0x50ff7273],dh
   140014729:	mov    cl,BYTE PTR [rdx-0x73734f00]
   14001472f:	add    bh,bh
   140014731:	retf   
   140014732:	retf   
   140014733:	add    BYTE PTR [rcx+rcx*4-0x7552ff77],ch
   14001473a:	mov    al,BYTE PTR [rax]
   14001473c:	stos   BYTE PTR es:[rdi],al
   14001473d:	mov    BYTE PTR [rax-0x31310100],cl
   140014743:	add    cl,bh
   140014745:	retf   0xca
   140014748:	ret    0x9d9d
   14001474b:	add    BYTE PTR [rbp-0xff797a],ah
   140014751:	rcl    ecx,1
   140014753:	add    BYTE PTR [rsi-0x61ff6a6b],dh
   140014759:	(bad)  
   14001475a:	(bad)  
   14001475b:	add    bh,bh
   14001475d:	(bad)  
   14001475e:	(bad)  
   14001475f:	add    bl,dl
   140014761:	mov    al,0xb0
   140014763:	add    cl,dl
   140014765:	scas   al,BYTE PTR es:[rdi]
   140014766:	scas   al,BYTE PTR es:[rdi]
   140014767:	add    dh,cl
   140014769:	lods   al,BYTE PTR ds:[rsi]
   14001476a:	lods   al,BYTE PTR ds:[rsi]
   14001476b:	add    BYTE PTR [rdx-0xff6465],bh
   140014771:	(bad)  
   140014772:	(bad)  
   140014773:	add    BYTE PTR [rcx-0x6cff7f80],bl
   140014779:	jl     0x1400147f7
   14001477b:	add    dl,cl
   14001477d:	stos   DWORD PTR es:[rdi],eax
   14001477e:	stos   DWORD PTR es:[rdi],eax
   14001477f:	add    BYTE PTR [rbp-0xff8182],dl
   140014785:	(bad)  
   140014787:	add    BYTE PTR [rcx-0x5cff8485],dl
   14001478d:	mov    ecx,DWORD PTR [rbx-0x64644b00]
   140014793:	add    BYTE PTR [rsi-0xff8586],cl
   140014799:	(bad)  
   14001479b:	add    bh,bh
   14001479d:	(bad)  
   14001479f:	add    BYTE PTR [rbx-0x76ff8687],cl
   1400147a5:	ja     0x14001481e
   1400147a7:	add    BYTE PTR [rdi-0xff898a],al
   1400147ad:	loope  0x140014790
   1400147af:	add    dl,dh
   1400147b1:	(bad)  
   1400147b2:	(bad)  
   1400147b3:	add    BYTE PTR [rbp+rsi*2+0x73820075],al
   1400147ba:	jae    0x1400147bc
   1400147bc:	ret    
   1400147bd:	lods   eax,DWORD PTR ds:[rsi]
   1400147be:	lods   eax,DWORD PTR ds:[rsi]
   1400147bf:	add    BYTE PTR [rbp-0x1aff898a],al
   1400147c5:	int3   
   1400147c6:	int3   
   1400147c7:	add    ah,bl
   1400147c9:	(bad)  
   1400147ca:	(bad)  
   1400147cb:	add    bh,cl
   1400147cd:	mov    ecx,0xe5ff00b9
   1400147d2:	in     eax,0x0
   1400147d4:	fwait
   1400147d5:	mov    ecx,DWORD PTR [rbx-0x7d7d6f00]
   1400147db:	add    cl,bh
   1400147dd:	loope  0x1400147c0
   1400147df:	add    BYTE PTR [rsi+0x72],bh
   1400147e2:	jb     0x1400147e4
   1400147e4:	rex.WX
   1400147e5:	rex.XB
   1400147e6:	rex.XB add r15b,dil
   1400147e9:	call   0x11ef448d6
   1400147ee:	fiadd  WORD PTR [rax]
   1400147f0:	movabs ds:0x7900757580009494,al
   1400147f9:	outs   dx,DWORD PTR ds:[rsi]
   1400147fa:	outs   dx,DWORD PTR ds:[rsi]
   1400147fb:	add    bh,bh
   1400147fd:	jmp    0x1400147ea
   1400147ff:	add    BYTE PTR [rbx+0x71],bh
   140014802:	jno    0x140014804
   140014804:	(bad)  
   140014806:	int3   
   140014807:	add    cl,ah
   140014809:	rcl    ecx,1
   14001480b:	add    dl,al
   14001480d:	mov    ah,0xb4
   14001480f:	add    BYTE PTR [rcx-0xff6263],ch
   140014815:	out    dx,al
   140014816:	out    dx,al
   140014817:	add    BYTE PTR [rbp-0x27ff6566],ah
   14001481d:	retf   0xca
   140014820:	sahf   
   140014821:	xchg   esp,eax
   140014822:	xchg   esp,eax
   140014823:	add    BYTE PTR [rdx+0x75008989],dl
   140014829:	outs   dx,BYTE PTR ds:[rsi]
   14001482a:	outs   dx,BYTE PTR ds:[rsi]
   14001482b:	add    bh,bh
   14001482d:	icebp  
   14001482e:	icebp  
   14001482f:	add    cl,dl
   140014831:	(bad)
   140014834:	jmp    0x1b2022616
   140014839:	ins    BYTE PTR es:[rdi],dx
   14001483a:	ins    BYTE PTR es:[rdi],dx
   14001483b:	add    bh,bh
   14001483d:	repz repz add bl,cl
   140014841:	ret    0xc2
   140014844:	jo     0x1400148b1
   140014846:	imul   eax,DWORD PTR [rax],0xffffffff
   140014849:	div    dh
   14001484b:	add    BYTE PTR [rax-0x75ff6566],ah
   140014851:	test   DWORD PTR [rbp-0x56565100],eax
   140014857:	add    BYTE PTR [rdi-0x39ff6d6e],dl
   14001485d:	rol    al,0x0
   140014860:	xchg   DWORD PTR [rbx+0x6a6d0083],eax
   140014866:	push   0x0
   140014868:	(bad)  
   140014869:	stc    
   14001486a:	stc    
   14001486b:	add    al,dh
   14001486d:	(bad)  
   14001486e:	(bad)  
   14001486f:	add    BYTE PTR [rbp-0x57ff4748],bh
   140014875:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014876:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014877:	add    BYTE PTR [rax-0x47ff8283],al
   14001487d:	mov    ch,0xb5
   14001487f:	add    BYTE PTR [rbx-0x4fff4f50],dh
   140014885:	lods   eax,DWORD PTR ds:[rsi]
   140014886:	lods   eax,DWORD PTR ds:[rsi]
   140014887:	add    BYTE PTR [rbp-0x5fff5d5e],ah
   14001488d:	popf   
   14001488e:	popf   
   14001488f:	add    BYTE PTR [rdx+0x68],ch
   140014892:	push   0xfffffffffcfcff00
   140014897:	add    cl,bl
   140014899:	(bad)  
   14001489a:	(bad)  
   14001489b:	add    dh,dl
   14001489d:	rcl    ebx,cl
   14001489f:	add    BYTE PTR [rdx+rcx*4-0x1b19ff76],cl
   1400148a6:	in     al,0x0
   1400148a8:	(bad)  
   1400148aa:	fld    QWORD PTR [rax]
   1400148ac:	mov    bh,0xb5
   1400148ae:	mov    ch,0x0
   1400148b0:	push   0xffffffffbe006767
   1400148b5:	mov    ebp,0xb9ba00bd
   1400148ba:	mov    ecx,0xc2c3f300
   1400148bf:	add    BYTE PTR [rbp+rdx*4-0x4c0dff6d],ch
   1400148c6:	lods   eax,DWORD PTR ds:[rsi]
   1400148c7:	add    BYTE PTR [rbx-0x6ff7f7c],ch
   1400148cd:	(bad)  
   1400148ce:	rol    BYTE PTR [rax],cl
   1400148d0:	out    0x9e,al
   1400148d2:	xchg   edx,eax
   1400148d3:	add    BYTE PTR [rdi+rsi*2-0x5c19ff8f],bl
   1400148da:	xchg   esi,eax
   1400148db:	add    dh,ah
   1400148dd:	scas   al,BYTE PTR es:[rdi]
   1400148de:	movabs eax,ds:0x889bd9007a8dcf00
   1400148e7:	add    cl,cl
   1400148e9:	jnp    0x14001494b
   1400148eb:	add    ah,cl
   1400148ed:	xchg   BYTE PTR [rax+rax*1-0x2e],ch
   1400148f1:	xchg   edx,eax
   1400148f2:	jl     0x1400148f4
   1400148f4:	(bad)  
   1400148f5:	push   rbp
   1400148f6:	cmp    BYTE PTR [rax],al
   1400148f8:	movabs ds:0xac0019387a00445e,al
   140014901:	push   rcx
   140014902:	sub    BYTE PTR [rax],al
   140014904:	mov    bl,0x5c
   140014906:	add    BYTE PTR ss:[rsi-0x7cffc89e],dh
   14001490d:	push   rsi
   14001490e:	add    BYTE PTR [rdx-0x5eff5050],sil
   140014915:	cmp    al,0x3
   140014917:	add    BYTE PTR [rsi-0x59ffe5b5],ah
   14001491d:	add    BYTE PTR [rax],al
   140014920:	fwait
   140014921:	adc    DWORD PTR [rax],r8d
   140014924:	mov    edi,0xac004d78
   140014929:	rex.RX add BYTE PTR [rax],r8b
   14001492c:	scas   eax,DWORD PTR es:[rdi]
   14001492d:	rex.WB add BYTE PTR [r8],al
   140014930:	mov    bl,0x4e
   140014932:	add    al,BYTE PTR [rax]
   140014934:	mov    ch,0x51
   140014936:	(bad)  
   140014937:	add    BYTE PTR [rcx-0x43ffffad],bh
   14001493d:	pop    rsp
   14001493e:	or     eax,0x1a63bc00
   140014943:	add    ch,dl
   140014945:	mov    ss,WORD PTR [rbx+0x0]
   140014948:	(bad)  
   140014949:	cdq    
   14001494a:	data16 add BYTE PTR [rdi-0x3cffffa7],bh
   140014951:	(bad)  
   140014952:	or     al,BYTE PTR [rax]
   140014954:	leave  
   140014955:	push   0x17
   140014957:	add    al,cl
   140014959:	fs add al,0x0
   14001495c:	int    0x6b
   14001495e:	or     DWORD PTR [rax],eax
   140014960:	shr    DWORD PTR [rdi+0xd],1
   140014963:	add    dl,dl
   140014965:	jb     0x14001497a
   140014967:	add    ah,dl
   140014969:	ja     0x140014984
   14001496b:	add    dh,dl
   14001496d:	jp     0x14001498c
   14001496f:	add    bh,dl
   140014971:	jge    0x140014999
   140014973:	add    bl,bl
   140014975:	test   BYTE PTR [rip+0x3988db00],ch        # 0x1798a247b
   14001497b:	add    cl,ah
   14001497d:	(bad)  
   14001497e:	cmp    al,0x0
   140014980:	in     al,0x95
   140014982:	add    r13b,r12b
   140014985:	xchg   edi,eax
   140014986:	rex.WX add bpl,spl
   140014989:	cwde   
   14001498a:	rex.WXB add r15b,spl
   14001498d:	fwait
   14001498e:	rex.WRXB add r15b,r12b
   140014991:	sahf   
   140014992:	pop    rax
   140014993:	add    bl,ch
   140014995:	movabs ds:0xb0f1006daff0005b,eax
   14001499e:	outs   dx,DWORD PTR ds:[rsi]
   14001499f:	add    bl,dh
   1400149a1:	mov    ch,0x76
   1400149a3:	add    ah,cl
   1400149a5:	xchg   esi,eax
   1400149a6:	movsxd eax,DWORD PTR [rax]
   1400149a8:	idiv   DWORD PTR [rcx+rax*4-0x773e0700]
   1400149af:	add    ah,bh
   1400149b1:	(bad)  
   1400149b2:	nop
   1400149b3:	add    ch,bh
   1400149b5:	retf   0x96
   1400149b8:	in     al,dx
   1400149b9:	test   eax,0xceff0063
   1400149be:	fwait
   1400149bf:	add    bh,bh
   1400149c1:	rcr    DWORD PTR [rsi+0x77aad700],1
   1400149c7:	add    bh,bh
   1400149c9:	(bad)  
   1400149ca:	movabs eax,ds:0x8fc2e600a5d8ff00
   1400149d3:	add    bh,bl
   1400149d5:	mov    edi,0xddff0093
   1400149da:	stos   BYTE PTR es:[rdi],al
   1400149db:	add    BYTE PTR [rdi+0x4d],ch
   1400149de:	sbb    BYTE PTR [rax],al
   1400149e0:	out    0xcc,al
   1400149e2:	movabs ds:0xa6d9f200afe2fe00,eax
   1400149eb:	add    dl,dh
   1400149ed:	fld    TBYTE PTR [rax-0x49170200]
   1400149f3:	add    ah,bh
   1400149f5:	out    0xb3,al
   1400149f7:	add    bh,bh
   1400149f9:	in     al,dx
   1400149fa:	mov    ecx,0xbff2fe00
   1400149ff:	add    bh,bh
   140014a01:	test   ecx,0xebffff00
   140014a07:	add    BYTE PTR [rdi-0x49ff4949],dh
   140014a0d:	mov    dh,0xb5
   140014a0f:	add    BYTE PTR [rcx-0x42ff4f4f],dh
   140014a15:	mov    esi,0xb6b500ba
   140014a1a:	mov    ch,0x0
   140014a1c:	scas   eax,DWORD PTR es:[rdi]
   140014a1d:	mov    al,0xaf
   140014a1f:	add    BYTE PTR [rsi],dh
   140014a21:	rex.RX cmp eax,0xb8b9b700
   140014a27:	add    BYTE PTR [rcx-0x4eff5556],ch
   140014a2d:	mov    dl,0xb3
   140014a2f:	add    ch,al
   140014a31:	(bad)
   140014a34:	mov    cl,0xb1
   140014a36:	mov    dl,0x0
   140014a38:	stc    
   140014a39:	stc    
   140014a3a:	stc    
   140014a3b:	add    bl,bl
   140014a3d:	fcmovnu st,st(3)
   140014a3f:	add    cl,bl
   140014a41:	(bad)  
   140014a43:	add    bh,dl
   140014a45:	xlat   BYTE PTR ds:[rbx]
   140014a46:	xlat   BYTE PTR ds:[rbx]
   140014a47:	add    ah,dl
   140014a49:	(bad)  
   140014a4a:	(bad)  
   140014a4b:	add    dl,dl
   140014a4d:	rcl    dl,cl
   140014a4f:	add    al,dl
   140014a51:	rcl    al,1
   140014a53:	add    dh,cl
   140014a55:	(bad)  
   140014a56:	(bad)  
   140014a57:	add    ch,cl
   140014a59:	int    0xcd
   140014a5b:	add    cl,cl
   140014a5d:	leave  
   140014a5e:	leave  
   140014a5f:	add    dl,al
   140014a61:	ret    0xc2
   140014a64:	mov    ah,0xb4
   140014a66:	mov    ah,0x0
   140014a68:	mov    dl,0xb2
   140014a6a:	mov    dl,0x0
   140014a6c:	scas   al,BYTE PTR es:[rdi]
   140014a6d:	scas   al,BYTE PTR es:[rdi]
   140014a6e:	scas   al,BYTE PTR es:[rdi]
   140014a6f:	add    BYTE PTR [rsp+rbp*4-0x5a5aff54],ch
   140014a76:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014a77:	add    BYTE PTR [rdx-0x63ff5d5e],ah
   140014a7d:	pushf  
   140014a7e:	pushf  
   140014a7f:	add    BYTE PTR [rbp+0x75],dh
   140014a82:	jne    0x140014a84
   140014a84:	(bad)  
   140014a85:	(bad)  
   140014a86:	inc    DWORD PTR [rax]
	...
   140014b1c:	add    BYTE PTR [rax],al
   140014b1e:	add    al,0x4
   140014b20:	push   rdi
   140014b21:	add    al,0x4
	...
   140014b4b:	add    BYTE PTR [rax],al
   140014b4d:	out    0xfd,al
   140014b4f:	data16 sub al,0x2c
   140014b52:	sub    BYTE PTR [rsp+rax*1],al
   140014b55:	add    al,0x4
	...
   140014b7b:	add    BYTE PTR [rbx],al
   140014b7d:	std    
   140014b7e:	std    
   140014b7f:	sub    bp,WORD PTR [rax+rbp*1]
   140014b83:	sub    DWORD PTR [rsp+rbp*1],ebp
   140014b86:	sub    al,0x4
   140014b88:	add    al,0x4
   140014b8a:	add    al,0x0
	...
   140014bac:	add    edi,esp
   140014bae:	xor    DWORD PTR [rcx+0x2d],0x29282c2b
   140014bb5:	(bad)  
   140014bb6:	and    eax,0x25252525
   140014bbb:	add    al,0x4
   140014bbd:	add    al,0x4
	...
   140014bdb:	add    BYTE PTR [rbx],al
   140014bdd:	sti    
   140014bde:	cld    
   140014bdf:	pop    rdx
   140014be0:	xor    DWORD PTR [rip+0x29282c42],ebp        # 0x169297828
   140014be6:	(bad)  
   140014be7:	and    eax,0x20222423
   140014bec:	and    BYTE PTR [rax],ah
   140014bee:	sbb    al,BYTE PTR [rsp+rax*1]
   140014bf1:	add    al,0x4
	...
   140014c0b:	add    BYTE PTR [rbx],al
   140014c0d:	sti    
   140014c0e:	cld    
   140014c0f:	pop    rdx
   140014c10:	xor    DWORD PTR [rcx],esi
   140014c12:	gs icebp 
   140014c14:	outs   dx,BYTE PTR ds:[rsi]
   140014c15:	cmp    QWORD PTR [r15],r12
   140014c18:	and    eax,0x20222423
   140014c1d:	(bad)  
   140014c1e:	and    BYTE PTR [rax],ah
   140014c20:	(bad)  
   140014c21:	sbb    bl,BYTE PTR [rdx]
   140014c23:	add    al,0x4
   140014c25:	add    al,0x4
	...
   140014c3b:	add    BYTE PTR [rbx],al
   140014c3d:	sti    
   140014c3e:	sbb    BYTE PTR [rdx+0x31],0x31
   140014c42:	(bad)  
   140014c43:	sbb    al,0x8d
   140014c45:	rex.WRXB (bad) 
   140014c47:	test   BYTE PTR [rdx+0x3d],ch
   140014c4a:	cmp    DWORD PTR [rdx+riz*1],esp
   140014c4d:	and    BYTE PTR [rsi],bl
   140014c4f:	(bad)  
   140014c50:	(bad)  
   140014c51:	sbb    bl,BYTE PTR [rax]
   140014c53:	sbb    BYTE PTR [rdx],bl
   140014c55:	sbb    bl,BYTE PTR [rdx]
   140014c57:	add    al,0x0
	...
   140014c69:	add    BYTE PTR [rax],al
   140014c6b:	add    BYTE PTR [rbx],al
   140014c6d:	call   0x18132a6f2
   140014c72:	sbb    edx,DWORD PTR [rdi]
   140014c74:	adc    eax,0x8d141011
   140014c79:	rex.WRXB imul r9,QWORD PTR [r8+0x1e1f3865],0x1f
   140014c81:	(bad)  
   140014c82:	sbb    bl,BYTE PTR [rax]
   140014c84:	sbb    DWORD PTR [rcx],ebx
   140014c86:	sbb    al,BYTE PTR [rax+rax*1]
	...
   140014c99:	add    BYTE PTR [rax],al
   140014c9b:	add    BYTE PTR [rbx],al
   140014c9d:	call   0xce35a722
   140014ca2:	and    DWORD PTR [rbx],ebx
   140014ca4:	(bad)  
   140014ca5:	adc    eax,0xd0f1011
   140014caa:	or     al,0x13
   140014cac:	lea    ecx,[rdx+0x79]
   140014caf:	imul   edx,DWORD PTR [rax+0x38],0x1f
   140014cb3:	sbb    bl,BYTE PTR [rax]
   140014cb5:	sbb    DWORD PTR [rcx],ebx
   140014cb7:	add    al,0x0
	...
   140014cc9:	add    BYTE PTR [rax],al
   140014ccb:	add    BYTE PTR [rbx],al
   140014ccd:	cli    
   140014cce:	call   0x166348114
   140014cd3:	and    DWORD PTR [rbx],ebx
   140014cd5:	(bad)  
   140014cd6:	adc    eax,0xd0f1011
   140014cdb:	or     al,0xb
   140014cdd:	or     cl,BYTE PTR [rcx]
   140014cdf:	(bad)  
   140014ce0:	(bad)  
   140014ce1:	push   rbp
   140014ce2:	in     al,dx
   140014ce3:	imul   edx,DWORD PTR [rax+0x1d],0x19
   140014ce7:	add    al,0x0
	...
   140014cf9:	add    BYTE PTR [rax],al
   140014cfb:	add    BYTE PTR [rbx],al
   140014cfd:	cli    
   140014cfe:	cli    
   140014cff:	push   rbx
   140014d00:	xor    al,0x33
   140014d02:	sub    ah,BYTE PTR [rsi]
   140014d04:	and    DWORD PTR [rbx],ebx
   140014d06:	(bad)  
   140014d07:	adc    eax,0xd0f1011
   140014d0c:	or     al,0xb
   140014d0e:	or     cl,BYTE PTR [rcx]
   140014d10:	or     DWORD PTR [rax],ecx
   140014d12:	or     BYTE PTR [rdx],dl
   140014d14:	imul   esi,DWORD PTR [rsi],0x418
	...
   140014d2a:	add    BYTE PTR [rax],al
   140014d2c:	add    edi,ecx
   140014d2e:	stc    
   140014d2f:	push   rbx
   140014d30:	cmp    esi,DWORD PTR [rbx]
   140014d32:	sub    ah,BYTE PTR cs:[rsi]
   140014d35:	and    DWORD PTR [rbx],ebx
   140014d37:	(bad)  
   140014d38:	adc    eax,0xd0f1011
   140014d3d:	or     al,0xb
   140014d3f:	or     cl,BYTE PTR [rcx]
   140014d41:	or     DWORD PTR [rax],ecx
   140014d43:	or     BYTE PTR [rbp+0x37],dl
   140014d46:	sbb    al,BYTE PTR [rax+rax*1]
	...
   140014d59:	add    BYTE PTR [rax],al
   140014d5b:	add    BYTE PTR [rbx],al
   140014d5d:	stc    
   140014d5e:	in     eax,0x53
   140014d60:	cmp    edi,DWORD PTR [rcx]
   140014d62:	xor    ch,BYTE PTR [rsi]
   140014d64:	sub    ah,BYTE PTR [rsi]
   140014d66:	and    DWORD PTR [rbx],ebx
   140014d68:	(bad)  
   140014d69:	adc    eax,0xd0f1011
   140014d6e:	or     al,0xb
   140014d70:	or     cl,BYTE PTR [rcx]
   140014d72:	or     DWORD PTR [rax],ecx
   140014d74:	push   rbp
   140014d75:	cmp    BYTE PTR [rdi],bl
   140014d77:	add    al,0x0
	...
   140014d89:	add    BYTE PTR [rax],al
   140014d8b:	add    BYTE PTR [rbx],al
   140014d8d:	call   0x17d3fa174
   140014d92:	xor    eax,0x262a2e32
   140014d97:	and    DWORD PTR [rbx],ebx
   140014d99:	(bad)  
   140014d9a:	adc    eax,0xd0f1011
   140014d9f:	or     al,0xb
   140014da1:	or     cl,BYTE PTR [rcx]
   140014da3:	or     DWORD PTR [rcx+0x38],ebx
   140014da6:	(bad)  
   140014da7:	add    al,0x0
	...
   140014db9:	add    BYTE PTR [rax],al
   140014dbb:	add    edi,eax
   140014dbd:	jmp    0x17d3d8a64
   140014dc2:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662b7bfa
   140014dc8:	and    DWORD PTR [rbx],ebx
   140014dca:	(bad)  
   140014dcb:	adc    eax,0xd0f1011
   140014dd0:	or     al,0xb
   140014dd2:	or     cl,BYTE PTR [rcx]
   140014dd4:	jns    0x140014e13
   140014dd6:	(bad)  
   140014dd7:	add    al,0x0
	...
   140014de9:	add    BYTE PTR [rax],al
   140014deb:	add    edi,edx
   140014ded:	jmp    0x17d3d8e94
   140014df2:	(bad)  
   140014df3:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662b7c2b
   140014df9:	and    DWORD PTR [rbx],ebx
   140014dfb:	(bad)  
   140014dfc:	adc    eax,0xd0f1011
   140014e01:	or     al,0xb
   140014e03:	or     bh,BYTE PTR [rcx+0x30]
   140014e06:	and    BYTE PTR [rax+rax*1],al
	...
   140014e19:	add    BYTE PTR [rax],al
   140014e1b:	add    ebp,ebx
   140014e1d:	loopne 0x140014e03
   140014e1f:	rex.XB
   140014e20:	rex cmp eax,0x353a3f44
   140014e26:	xor    ch,BYTE PTR [rsi]
   140014e28:	sub    ah,BYTE PTR [rsi]
   140014e2a:	and    DWORD PTR [rbx],ebx
   140014e2c:	(bad)  
   140014e2d:	adc    eax,0xd0f1011
   140014e32:	or     al,0xb
   140014e34:	xchg   DWORD PTR [rdx+riz*1],esp
   140014e37:	add    al,0x0
	...
   140014e49:	add    BYTE PTR [rax],al
   140014e4b:	add    eax,DWORD PTR [rip+0x4343a2e0]        # 0x18344f131
   140014e51:	push   rcx
   140014e52:	rex.RB
   140014e53:	rex.R (bad) 
   140014e55:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662b7c8d
   140014e5b:	and    DWORD PTR [rbx],ebx
   140014e5d:	(bad)  
   140014e5e:	adc    eax,0xd0f1011
   140014e63:	or     al,0x87
   140014e65:	and    esp,DWORD PTR [rsp+rax*1]
	...
   140014e78:	add    BYTE PTR [rax],al
   140014e7a:	add    BYTE PTR [rbx],al
   140014e7c:	(bad)  
   140014e7d:	out    0xe1,eax
   140014e7f:	rex.RX
   140014e80:	rex.RX
   140014e81:	rex.WRXB
   140014e82:	rex.WB
   140014e83:	rex.RB
   140014e84:	rex.R (bad) 
   140014e86:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662b7cbe
   140014e8c:	and    DWORD PTR [rbx],ebx
   140014e8e:	(bad)  
   140014e8f:	adc    eax,0xd0f1011
   140014e94:	mov    BYTE PTR [rip+0x423],ah        # 0x1400152bd
	...
   140014eaa:	add    BYTE PTR [rbx],al
   140014eac:	in     al,0x8c
   140014eae:	jae    0x140014ef7
   140014eb0:	rex.RX
   140014eb1:	rex.WRXB push r10
   140014eb3:	rex.WB
   140014eb4:	rex.RB
   140014eb5:	rex.R (bad) 
   140014eb7:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662b7cef
   140014ebd:	and    DWORD PTR [rbx],ebx
   140014ebf:	(bad)  
   140014ec0:	adc    eax,0xed0f1011
   140014ec5:	(bad)  
   140014ec6:	and    eax,0x4
	...
   140014edb:	add    ecx,DWORD PTR [rbx+0x4748738c]
   140014ee1:	rex.WRXB pop r8
   140014ee3:	push   rdx
   140014ee4:	rex.WB
   140014ee5:	rex.RB
   140014ee6:	rex.R (bad) 
   140014ee8:	cmp    dh,BYTE PTR [rip+0x26262f2e]        # 0x166277e1c
   140014eee:	and    DWORD PTR [rbx],ebx
   140014ef0:	(bad)  
   140014ef1:	adc    eax,0x29ee1011
   140014ef6:	(bad)  
   140014ef7:	add    al,0x0
	...
   140014f09:	add    BYTE PTR [rax],al
   140014f0b:	add    ecx,DWORD PTR [rbx+0x484e73e3]
   140014f11:	(bad)  
   140014f12:	pop    rbp
   140014f13:	pop    rax
   140014f14:	push   rdx
   140014f15:	rex.WB
   140014f16:	lea    r11d,[r15-0x66676061]
   140014f1d:	cwde   
   140014f1e:	xchg   esp,eax
   140014f1f:	(bad)  
   140014f20:	sbb    edx,DWORD PTR [rdi]
   140014f22:	adc    eax,0x2928f016
   140014f27:	add    al,0x0
	...
   140014f39:	add    BYTE PTR [rax],al
   140014f3b:	add    eax,DWORD PTR [rsi]
   140014f3d:	mov    edi,DWORD PTR [rdi+0x4b]
   140014f40:	rex.W jns 0x140014fa6
   140014f43:	pop    rbp
   140014f44:	pop    rax
   140014f45:	push   rdx
   140014f46:	rex.WB cqo 
   140014f48:	movabs eax,ds:0xa0a3aaabb3babcc7
   140014f51:	xchg   edx,eax
   140014f52:	adc    eax,0x282cf18d
   140014f57:	add    al,0x0
	...
   140014f69:	add    BYTE PTR [rax],al
   140014f6b:	add    ebp,edx
   140014f6d:	idiv   BYTE PTR [rbx+0x4c]
   140014f70:	rex.WXB ins DWORD PTR es:[rdi],dx
   140014f72:	imul   esp,DWORD PTR [rbx+0x5d],0x9e915258
   140014f79:	scas   eax,DWORD PTR es:[rdi]
   140014f7a:	enter  0xc1cc,0xc2
   140014f7e:	mov    esi,0x9ea5b1b7
   140014f83:	xchg   esi,eax
   140014f84:	jne    0x140014fb1
   140014f86:	sub    al,0x4
	...
   140014f98:	add    BYTE PTR [rax],al
   140014f9a:	add    BYTE PTR [rbx],al
   140014f9c:	(bad)  
   140014f9d:	(bad)  
   140014f9e:	jno    0x140014ff6
   140014fa0:	rex.WR jo 0x140015010
   140014fa3:	imul   esp,DWORD PTR [rbx+0x5d],0x9e915258
   140014faa:	mov    al,0xcb
   140014fac:	leave  
   140014fad:	rol    esi,1
   140014faf:	mov    ebp,0xa8b4b6ba
   140014fb4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014fb5:	pushf  
   140014fb6:	nop
   140014fb7:	add    al,0x0
	...
   140014fc9:	add    BYTE PTR [rax],al
   140014fcb:	add    esi,ebp
   140014fcd:	(bad)  
   140014fce:	jno    0x140015026
   140014fd0:	push   rsi
   140014fd1:	js     0x140015043
   140014fd3:	ins    DWORD PTR es:[rdi],dx
   140014fd4:	imul   esp,DWORD PTR [rbx+0x5d],0xa0915258
   140014fdb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014fdc:	xlat   BYTE PTR ds:[rbx]
   140014fdd:	(bad)  
   140014fdf:	mov    bl,0xbe
   140014fe2:	mov    ebx,0xa3aab4b7
   140014fe7:	popf   
	...
   140014ff8:	add    BYTE PTR [rax],al
   140014ffa:	add    BYTE PTR [rbx],al
   140014ffc:	cmc    
   140014ffd:	cmc    
   140014ffe:	jno    0x14001505e
   140015000:	pop    rbx
   140015001:	cmp    DWORD PTR [rax+0x70],0x6d
   140015005:	imul   esp,DWORD PTR [rbx+0x5d],0xa7495258
   14001500c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001500d:	fst    st(4)
   14001500f:	(bad)  
   140015010:	retf   0xccc6
   140015013:	mov    edi,0xacb5b8bc
   140015018:	movabs ds:0xa3a5,eax
	...
   140015029:	add    BYTE PTR [rax],al
   14001502b:	add    esi,esp
   14001502d:	cmc    
   14001502e:	sbb    DWORD PTR [rsp+rsi*2+0x1],0x6d707883
   140015036:	imul   esp,DWORD PTR [rbx+0x5d],0x99495258
   14001503d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001503e:	(bad)  
   14001503f:	xlat   BYTE PTR ds:[rbx]
   140015040:	xlat   BYTE PTR ds:[rbx]
   140015041:	ror    bl,1
   140015043:	enter  0xc1cc,0xbd
   140015047:	mov    ecx,0xa9b7b3b6
   14001504c:	test   eax,0xa9
	...
   140015059:	add    BYTE PTR [rbx],al
   14001505b:	lock hlt 
   14001505d:	hlt    
   14001505e:	addr32 pop rsp
   140015060:	add    WORD PTR [rcx],ax
   140015063:	cmp    DWORD PTR [rax+0x70],0x6d
   140015067:	imul   esp,DWORD PTR [rbx+0x5d],0x91495258
   14001506e:	(bad)  
   14001506f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015070:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015071:	fcomp  st(3)
   140015073:	ror    bl,1
   140015075:	leave  
   140015076:	(bad)
   14001507a:	mov    ebp,0xa9b9bbbc
   14001507f:	test   eax,0xa9
   140015084:	add    BYTE PTR [rax],al
   140015086:	add    BYTE PTR [rax],al
   140015088:	add    BYTE PTR [rax],al
   14001508a:	add    esi,eax
   14001508c:	repz hlt 
   14001508e:	jb     0x1400150f8
   140015090:	je     0x140015093
   140015092:	add    DWORD PTR [rcx],eax
   140015094:	cmp    DWORD PTR [rax+0x70],0x6d
   140015098:	imul   esp,DWORD PTR [rbx+0x5d],0x45495258
   14001509f:	rex.R xchg edi,eax
   1400150a1:	lahf   
   1400150a2:	movabs al,ds:0xc3c5c8c9cdd4dbd2
   1400150ab:	sar    DWORD PTR [rsi-0x48454443],0xaa
   1400150b2:	test   eax,0x0
   1400150b7:	add    BYTE PTR [rax],al
   1400150b9:	add    BYTE PTR [rbx],al
   1400150bb:	lock bnd repz jb 0x140015128
   1400150c0:	je     0x1400150c3
   1400150c2:	add    DWORD PTR [rcx],eax
   1400150c4:	add    DWORD PTR [rbx+0x696d7078],eax
   1400150ca:	movsxd ebx,DWORD PTR [rbp+0x58]
   1400150cd:	push   rdx
   1400150ce:	rex.WB
   1400150cf:	rex.RB
   1400150d0:	rex.R (bad) 
   1400150d2:	xchg   ebp,eax
   1400150d3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400150d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400150d5:	iret   
   1400150d6:	(bad)  
   1400150d8:	int    0xcb
   1400150da:	enter  0xc3c5,0xbf
   1400150de:	mov    ebp,0xb5b8babc
   1400150e3:	stos   BYTE PTR es:[rdi],al
   1400150e4:	test   eax,0x0
   1400150e9:	add    BYTE PTR [rbx],al
   1400150eb:	lock icebp 
   1400150ed:	bnd jbe 0x14001515c
   1400150f0:	jno    0x1400150f3
   1400150f2:	add    DWORD PTR [rcx],eax
   1400150f4:	add    DWORD PTR [rcx],eax
   1400150f6:	cmp    DWORD PTR [rax+0x70],0x6d
   1400150fa:	imul   esp,DWORD PTR [rbx+0x5d],0x45495258
   140015101:	rex.R (bad) 
   140015103:	pop    rdi
   140015104:	mov    ds,WORD PTR [rbx-0x2f284f5a]
   14001510a:	int    0xca
   14001510c:	enter  0xccc5,0xc2
   140015110:	sar    BYTE PTR [rbp-0x56474645],0xa9
   140015117:	add    BYTE PTR [rax],al
   140015119:	add    BYTE PTR [rbx],al
   14001511b:	out    dx,al
   14001511c:	lock icebp 
   14001511e:	jbe    0x14001518f
   140015120:	jge    0x140015123
   140015122:	add    DWORD PTR [rcx],eax
   140015124:	add    DWORD PTR [rcx],eax
   140015126:	add    DWORD PTR [rbx+0x696d7078],eax
   14001512c:	movsxd ebx,DWORD PTR [rbp+0x58]
   14001512f:	push   rdx
   140015130:	rex.WB
   140015131:	rex.RB
   140015132:	rex.R pop rdi
   140015134:	(bad)  
   140015135:	cmp    edx,DWORD PTR [rbx-0x2825225c]
   14001513b:	(bad)  
   14001513c:	int    0xcb
   14001513e:	enter  0xccc6,0xc1
   140015142:	mov    edi,0xbcc0c1bf
   140015147:	test   eax,0xee030000
   14001514c:	out    dx,eax
   14001514d:	lock ja 0x1400151c7
   140015150:	mov    DWORD PTR [rcx],eax
   140015152:	add    DWORD PTR [rcx],eax
   140015154:	add    DWORD PTR [rcx],eax
   140015156:	add    DWORD PTR [rcx],eax
   140015158:	cmp    DWORD PTR [rax+0x70],0x6d
   14001515c:	imul   esp,DWORD PTR [rbx+0x5d],0x45495258
   140015163:	pop    rdi
   140015164:	(bad)  
   140015165:	cmp    edi,DWORD PTR [rsi]
   140015167:	(bad)  
   140015168:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015169:	iret   
   14001516a:	fcmovu st,st(5)
   14001516c:	fcmovbe st,st(4)
   14001516e:	(bad)  
   14001516f:	retf   
   140015170:	leave  
   140015171:	mov    ah,0xcd
   140015174:	int    0xc8
   140015176:	ret    0xa9
   140015179:	add    BYTE PTR [rbx],al
   14001517b:	out    dx,al
   14001517c:	out    dx,eax
   14001517d:	out    dx,eax
   14001517e:	(bad)  
   14001517f:	ja     0x1400151fd
   140015181:	je     0x140015200
   140015183:	icebp  
   140015184:	xchg   DWORD PTR [rcx],eax
   140015186:	add    DWORD PTR [rcx],eax
   140015188:	add    DWORD PTR [rbx+0x696d7078],eax
   14001518e:	movsxd ebx,DWORD PTR [rbp+0x58]
   140015191:	push   rdx
   140015192:	rex.WB pop r15
   140015194:	(bad)  
   140015195:	cmp    eax,DWORD PTR ds:[rbx+riz*4]
   140015199:	mov    dl,0xad
   14001519b:	scas   al,BYTE PTR es:[rdi]
   14001519c:	iret   
   14001519d:	fcmovnu st,st(4)
   14001519f:	xlat   BYTE PTR ds:[rbx]
   1400151a0:	ror    ch,1
   1400151a2:	int    0xd4
   1400151a4:	ror    esi,1
   1400151a6:	retf   0xa9
   1400151a9:	add    BYTE PTR [rbx],al
   1400151ab:	in     eax,dx
   1400151ac:	out    dx,al
   1400151ad:	out    dx,eax
   1400151ae:	mov    al,BYTE PTR [rdx+0x6c6f7777]
   1400151b4:	push   0x7a816768
   1400151b9:	test   DWORD PTR [rdi+0x69697078],eax
   1400151bf:	movsxd ebx,DWORD PTR [rbp+0x58]
   1400151c2:	push   rdx
   1400151c3:	pop    rdi
   1400151c4:	fs cmp al,0x3e
   1400151c7:	add    al,0xa6
   1400151c9:	ret    0xb8bb
   1400151cc:	lods   al,BYTE PTR ds:[rsi]
   1400151cd:	lods   al,BYTE PTR ds:[rsi]
   1400151ce:	(bad)  
   1400151cf:	(bad)  
   1400151d1:	xlat   BYTE PTR ds:[rbx]
   1400151d2:	(bad)  
   1400151d4:	(bad)  
   1400151d6:	shr    BYTE PTR [rcx-0x77fd0000],1
   1400151dc:	in     eax,dx
   1400151dd:	out    dx,al
   1400151de:	stc    
   1400151df:	add    DWORD PTR [rsi+0x6c6f7776],0x5c5c6868
   1400151e9:	pop    rsi
   1400151ea:	push   rsi
   1400151eb:	push   rsi
   1400151ec:	push   rbx
   1400151ed:	jae    0x140015250
   1400151ef:	(bad)  
   1400151f0:	pop    rcx
   1400151f1:	pop    rbp
   1400151f2:	pop    rax
   1400151f3:	pop    rdi
   1400151f4:	jno    0x140015232
   1400151f6:	cmp    al,0x4
   1400151f8:	add    BYTE PTR [rsp+rbp*4-0x53453d3e],ch
   1400151ff:	lods   al,BYTE PTR ds:[rsi]
   140015200:	lods   al,BYTE PTR ds:[rsi]
   140015201:	int3   
   140015202:	(bad)  
   140015204:	(bad)  
   140015206:	lods   al,BYTE PTR ds:[rsi]
   140015207:	add    BYTE PTR [rax],al
   140015209:	add    BYTE PTR [rax],al
   14001520b:	add    edi,eax
   14001520d:	(bad)  
   14001520e:	out    dx,al
   14001520f:	out    dx,eax
   140015210:	out    dx,eax
   140015211:	lock icebp 
   140015213:	cmc    
   140015214:	mov    DWORD PTR [rax+0x5c767281],eax
   14001521a:	pop    rsi
   14001521b:	push   rsi
   14001521c:	push   rsi
   14001521d:	rex.WR
   14001521e:	rex.WXB
   14001521f:	rex.WRX
   140015220:	rex.W
   140015221:	rex.RXB mov ds,WORD PTR [r10+0x53]
   140015225:	cmp    al,0x4
   140015228:	add    BYTE PTR [rax],al
   14001522a:	add    ch,dl
   14001522c:	lods   al,BYTE PTR ds:[rsi]
   14001522d:	lods   al,BYTE PTR ds:[rsi]
   14001522e:	scas   eax,DWORD PTR es:[rdi]
   14001522f:	mov    ebx,0xd3acacaf
   140015234:	(bad)  
   140015235:	lods   al,BYTE PTR ds:[rsi]
   140015236:	add    BYTE PTR [rax],al
   140015238:	add    BYTE PTR [rax],al
   14001523a:	add    BYTE PTR [rax],al
   14001523c:	add    eax,DWORD PTR [rbx]
   14001523e:	add    eax,DWORD PTR [rbx]
   140015240:	add    eax,DWORD PTR [rbx]
   140015242:	div    edi
   140015244:	repnz repz hlt 
   140015247:	hlt    
   140015248:	cmc    
   140015249:	cmc    
   14001524a:	mov    edi,DWORD PTR [rsi-0x80]
   14001524d:	jno    0x1400152b6
   14001524f:	push   rsp
   140015250:	rex.WRX
   140015251:	rex.W
   140015252:	rex.RXB
   140015253:	rex.RX
   140015254:	rex.XB
   140015255:	rex.XB
   140015256:	add    al,0x0
   140015259:	add    BYTE PTR [rax],al
   14001525b:	add    BYTE PTR [rax],al
   14001525d:	add    BYTE PTR [rsp+rbp*4-0x53535354],ch
   140015264:	lods   al,BYTE PTR ds:[rsi]
	...
   140015271:	add    BYTE PTR [rbx],al
   140015273:	add    eax,DWORD PTR [rbx]
   140015275:	add    eax,DWORD PTR [rbx]
   140015277:	add    eax,DWORD PTR [rbx]
   140015279:	sti    
   14001527a:	mov    ebp,edx
   14001527c:	(bad)  
   14001527d:	div    dh
   14001527f:	(bad)  
   140015280:	mov    esp,DWORD PTR [rdx+0x53667173]
   140015286:	push   rsp
   140015287:	add    al,0x0
	...
   1400152a9:	add    eax,DWORD PTR [rbx]
   1400152ab:	add    eax,DWORD PTR [rbx]
   1400152ad:	add    eax,DWORD PTR [rbx]
   1400152af:	add    edi,ebx
   1400152b1:	mov    ecx,DWORD PTR [rbx+0x4fe74f8]
	...
   1400152df:	add    BYTE PTR [rbx],al
   1400152e1:	add    eax,DWORD PTR [rbx]
   1400152e3:	add    eax,DWORD PTR [rbx]
   1400152e5:	add    eax,DWORD PTR [rax]
	...
   140015387:	add    bh,bh
   140015389:	(bad)  
   14001538a:	(bad)  
   14001538b:	(bad)  
   14001538c:	(bad)  
   14001538d:	inc    DWORD PTR [rax]
   14001538f:	add    bh,bh
   140015391:	(bad)  
   140015392:	(bad)  
   140015393:	(bad)  
   140015394:	(bad)  
   140015395:	inc    DWORD PTR [rax]
   140015397:	add    bh,bh
   140015399:	(bad)  
   14001539a:	(bad)  
   14001539b:	(bad)  
   14001539c:	(bad)  
   14001539d:	inc    DWORD PTR [rax]
   14001539f:	add    ah,bh
   1400153a1:	(bad)  
   1400153a2:	(bad)  
   1400153a3:	(bad)  
   1400153a4:	(bad)  
   1400153a5:	inc    DWORD PTR [rax]
   1400153a7:	add    al,bh
   1400153a9:	add    edi,edi
   1400153ab:	(bad)  
   1400153ac:	(bad)  
   1400153ad:	inc    DWORD PTR [rax]
   1400153af:	add    al,dh
   1400153b1:	add    BYTE PTR [rdi],bl
   1400153b3:	(bad)  
   1400153b4:	(bad)  
   1400153b5:	inc    DWORD PTR [rax]
   1400153b7:	add    al,dh
   1400153b9:	add    BYTE PTR [rcx],al
   1400153bb:	(bad)  
   1400153bc:	(bad)  
   1400153bd:	inc    DWORD PTR [rax]
   1400153bf:	add    al,dh
   1400153c1:	add    BYTE PTR [rax],al
   1400153c3:	(bad)  
   1400153c4:	(bad)  
   1400153c5:	inc    DWORD PTR [rax]
   1400153c7:	add    al,dh
   1400153c9:	add    BYTE PTR [rax],al
   1400153cb:	add    edi,edi
   1400153cd:	inc    DWORD PTR [rax]
   1400153cf:	add    al,dh
   1400153d1:	add    BYTE PTR [rax],al
   1400153d3:	add    bh,bh
   1400153d5:	inc    DWORD PTR [rax]
   1400153d7:	add    al,dh
   1400153d9:	add    BYTE PTR [rax],al
   1400153db:	add    bh,bh
   1400153dd:	inc    DWORD PTR [rax]
   1400153df:	add    al,dh
   1400153e1:	add    BYTE PTR [rax],al
   1400153e3:	add    bh,bh
   1400153e5:	inc    DWORD PTR [rax]
   1400153e7:	add    al,dh
   1400153e9:	add    BYTE PTR [rax],al
   1400153eb:	add    bh,bh
   1400153ed:	inc    DWORD PTR [rax]
   1400153ef:	add    al,dh
   1400153f1:	add    BYTE PTR [rax],al
   1400153f3:	add    bh,bh
   1400153f5:	inc    DWORD PTR [rax]
   1400153f7:	add    al,dh
   1400153f9:	add    BYTE PTR [rax],al
   1400153fb:	add    bh,bh
   1400153fd:	inc    DWORD PTR [rax]
   1400153ff:	add    al,dh
   140015401:	add    BYTE PTR [rax],al
   140015403:	add    bh,bh
   140015405:	inc    DWORD PTR [rax]
   140015407:	add    al,dh
   140015409:	add    BYTE PTR [rax],al
   14001540b:	add    bh,bh
   14001540d:	inc    DWORD PTR [rax]
   14001540f:	add    al,ah
   140015411:	add    BYTE PTR [rax],al
   140015413:	add    bh,bh
   140015415:	inc    DWORD PTR [rax]
   140015417:	add    al,ah
   140015419:	add    BYTE PTR [rax],al
   14001541b:	add    bh,bh
   14001541d:	inc    DWORD PTR [rax]
   14001541f:	add    al,ah
   140015421:	add    BYTE PTR [rax],al
   140015423:	add    bh,bh
   140015425:	inc    DWORD PTR [rax]
   140015427:	add    al,ah
   140015429:	add    BYTE PTR [rax],al
   14001542b:	add    bh,bh
   14001542d:	inc    DWORD PTR [rax]
   14001542f:	add    al,ah
   140015431:	add    BYTE PTR [rax],al
   140015433:	add    bh,bh
   140015435:	inc    DWORD PTR [rax]
   140015437:	add    al,ah
   140015439:	add    BYTE PTR [rax],al
   14001543b:	add    bh,bh
   14001543d:	inc    DWORD PTR [rax]
   14001543f:	add    al,ah
   140015441:	add    BYTE PTR [rax],al
   140015443:	add    bh,bh
   140015445:	inc    DWORD PTR [rax]
   140015447:	add    al,ah
   140015449:	add    BYTE PTR [rax],al
   14001544b:	add    bh,bh
   14001544d:	inc    DWORD PTR [rax]
   14001544f:	add    al,ah
   140015451:	add    BYTE PTR [rax],al
   140015453:	add    bh,bh
   140015455:	inc    DWORD PTR [rax]
   140015457:	add    al,ah
   140015459:	add    BYTE PTR [rax],al
   14001545b:	add    bh,bh
   14001545d:	inc    DWORD PTR [rax]
   14001545f:	add    al,ah
   140015461:	add    BYTE PTR [rax],al
   140015463:	add    bh,bh
   140015465:	inc    DWORD PTR [rax]
   140015467:	add    al,ah
   140015469:	add    BYTE PTR [rax],al
   14001546b:	add    bh,bh
   14001546d:	inc    DWORD PTR [rax]
   14001546f:	add    al,ah
   140015471:	add    BYTE PTR [rax],al
   140015473:	add    BYTE PTR [rdi],bl
   140015475:	inc    DWORD PTR [rax]
   140015477:	add    al,ah
   140015479:	add    BYTE PTR [rax],al
   14001547b:	add    BYTE PTR [rbx],al
   14001547d:	inc    DWORD PTR [rax]
   14001547f:	add    al,al
   140015481:	add    BYTE PTR [rax],al
   140015483:	add    BYTE PTR [rax],al
   140015485:	jg     0x140015487
   140015487:	add    al,al
   140015489:	add    BYTE PTR [rax],al
   14001548b:	add    BYTE PTR [rax],al
   14001548d:	(bad)  
   14001548e:	add    BYTE PTR [rax],al
   140015490:	rol    BYTE PTR [rax],0x0
   140015493:	add    BYTE PTR [rax],al
   140015495:	(bad)  
   140015496:	add    BYTE PTR [rax],al
   140015498:	rol    BYTE PTR [rax],0x0
   14001549b:	add    BYTE PTR [rax],al
   14001549d:	add    DWORD PTR [rax],eax
   14001549f:	add    al,al
   1400154a1:	add    BYTE PTR [rax],al
   1400154a3:	add    BYTE PTR [rax],al
   1400154a5:	add    BYTE PTR [rax],al
   1400154a7:	add    al,al
   1400154a9:	add    BYTE PTR [rax],al
   1400154ab:	add    BYTE PTR [rax],al
   1400154ad:	add    BYTE PTR [rax],al
   1400154af:	add    al,al
   1400154b1:	add    BYTE PTR [rax],al
   1400154b3:	add    BYTE PTR [rax],al
   1400154b5:	add    BYTE PTR [rax],al
   1400154b7:	add    al,al
   1400154b9:	add    BYTE PTR [rax],al
   1400154bb:	add    BYTE PTR [rax],al
   1400154bd:	add    BYTE PTR [rax],al
   1400154bf:	add    al,al
   1400154c1:	add    BYTE PTR [rax],al
   1400154c3:	add    BYTE PTR [rax-0x1fffffff],al
   1400154c9:	add    BYTE PTR [rax],al
   1400154cb:	add    al,ah
   1400154cd:	add    eax,DWORD PTR [rax]
   1400154cf:	add    al,dh
   1400154d1:	add    BYTE PTR [rax],al
   1400154d3:	add    ah,bh
   1400154d5:	(bad)  
   1400154d6:	add    BYTE PTR [rax],al
   1400154d8:	inc    eax
   1400154da:	add    BYTE PTR [rax],al
   1400154dc:	(bad)  
   1400154dd:	inc    DWORD PTR [rax]
   1400154df:	add    bh,bh
   1400154e1:	inc    DWORD PTR [rax+0xffff01]
   1400154e7:	add    bh,bh
   1400154e9:	(bad)  
   1400154ea:	inc    DWORD PTR [rbx]
   1400154ec:	(bad)  
   1400154ed:	inc    DWORD PTR [rax]
   1400154ef:	add    bh,bh
   1400154f1:	(bad)  
   1400154f2:	(bad)  
   1400154f3:	(bad)  
   1400154f4:	(bad)  
   1400154f5:	inc    DWORD PTR [rax]
   1400154f7:	add    bh,bh
   1400154f9:	(bad)  
   1400154fa:	(bad)  
   1400154fb:	(bad)  
   1400154fc:	(bad)  
   1400154fd:	inc    DWORD PTR [rax]
   1400154ff:	add    bh,bh
   140015501:	(bad)  
   140015502:	(bad)  
   140015503:	(bad)  
   140015504:	(bad)  
   140015505:	inc    DWORD PTR [rax]
   140015507:	add    BYTE PTR [rax],ch
   140015509:	add    BYTE PTR [rax],al
   14001550b:	add    BYTE PTR [rax],ah
   14001550d:	add    BYTE PTR [rax],al
   14001550f:	add    BYTE PTR [rax+0x0],al
   140015512:	add    BYTE PTR [rax],al
   140015514:	add    DWORD PTR [rax],eax
   140015516:	or     BYTE PTR [rax],al
	...
   140015534:	(bad)  
   140015535:	(bad)  
   140015536:	inc    DWORD PTR [rax]
   140015538:	pop    rbp
   140015539:	(bad)  
   14001553a:	(bad)  
   14001553b:	add    BYTE PTR [rdi+0x45],al
   14001553e:	add    BYTE PTR [r15-0xffffa7],r15b
   140015545:	popf   
   140015546:	popf   
   140015547:	add    bh,bh
   140015549:	movabs eax,ds:0xaaff00a5a5ff00a1
   140015552:	stos   BYTE PTR es:[rdi],al
   140015553:	add    bh,bh
   140015555:	lods   eax,DWORD PTR ds:[rsi]
   140015556:	lods   eax,DWORD PTR ds:[rsi]
   140015557:	add    dh,bh
   140015559:	scas   al,BYTE PTR es:[rdi]
   14001555a:	scas   al,BYTE PTR es:[rdi]
   14001555b:	add    bh,bh
   14001555d:	mov    dl,0xb2
   14001555f:	add    ah,bh
   140015561:	mov    cl,0xb1
   140015563:	add    ah,bh
   140015565:	mov    dl,0xb2
   140015567:	add    bh,bh
   140015569:	mov    bh,0xb7
   14001556b:	add    bh,bh
   14001556d:	mov    ebx,0xb9fc00bb
   140015572:	mov    ecx,0xb8b8fb00
   140015577:	add    cl,bh
   140015579:	mov    ecx,0xbfff00b9
   14001557e:	mov    edi,0x9898cb00
   140015583:	add    al,bh
   140015585:	mov    ebx,0x97c800bb
   14001558a:	xchg   edi,eax
   14001558b:	add    ch,al
   14001558d:	xchg   ebp,eax
   14001558e:	xchg   ebp,eax
   14001558f:	add    bl,al
   140015591:	xchg   esp,eax
   140015592:	xchg   esp,eax
   140015593:	add    bh,bh
   140015595:	ret    
   140015596:	ret    
   140015597:	add    dh,dh
   140015599:	mov    esi,0x93bf00be
   14001559e:	xchg   ebx,eax
   14001559f:	add    BYTE PTR [rcx+rdx*4-0x3900ff6f],bh
   1400155a6:	mov    BYTE PTR [rax],0xf9
   1400155a9:	rol    ecx,0x0
   1400155ac:	mov    edx,0xb3009090
   1400155b1:	mov    ecx,DWORD PTR [rbx-0x37370100]
   1400155b7:	add    dl,al
   1400155b9:	cwde   
   1400155ba:	cwde   
   1400155bb:	add    BYTE PTR [rdi-0x4bff7071],dh
   1400155c1:	lea    ecx,[rbp-0x3e3e0c00]
   1400155c7:	add    cl,dl
   1400155c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400155ca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400155cb:	add    BYTE PTR [rax-0x61ff7475],dh
   1400155d1:	jge    0x140015650
   1400155d3:	add    BYTE PTR [rsi-0xff7576],ch
   1400155d9:	int    0xcd
   1400155db:	add    bh,cl
   1400155dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400155de:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400155df:	add    BYTE PTR [rbp-0xff797a],ah
   1400155e5:	rcl    al,1
   1400155e7:	add    ch,cl
   1400155e9:	test   al,0xa8
   1400155eb:	add    BYTE PTR [rbp+rcx*4-0x6341ff73],ch
   1400155f2:	pushf  
   1400155f3:	add    BYTE PTR [rsi-0x77ff7d7e],bl
   1400155f9:	jo     0x14001566b
   1400155fb:	add    BYTE PTR [rdx-0xff7f80],bl
   140015601:	(bad)  
   140015602:	(bad)  
   140015603:	add    dh,dl
   140015605:	mov    ah,0xb4
   140015607:	add    BYTE PTR [rsi-0x6cff8182],dl
   14001560d:	jl     0x14001568b
   14001560f:	add    ch,ah
   140015611:	ret    0xc2
   140015614:	mov    ah,0x99
   140015616:	cdq    
   140015617:	add    BYTE PTR [rcx-0xff8485],dl
   14001561d:	fcmovu st,st(2)
   14001561f:	add    dh,ch
   140015621:	retf   
   140015622:	retf   
   140015623:	add    ah,cl
   140015625:	scas   al,BYTE PTR es:[rdi]
   140015626:	scas   al,BYTE PTR es:[rdi]
   140015627:	add    dh,ah
   140015629:	(bad)
   14001562c:	mov    ?,WORD PTR [rdx+0x7a]
   14001562f:	add    dh,dh
   140015631:	(bad)  
   140015632:	(bad)  
   140015633:	add    bh,bh
   140015635:	fstp   st(5)
   140015637:	add    BYTE PTR [rdx-0x74ff5e5f],bh
   14001563d:	js     0x1400156b7
   14001563f:	add    BYTE PTR [rax-0x3bff898a],cl
   140015645:	stos   DWORD PTR es:[rdi],eax
   140015646:	stos   DWORD PTR es:[rdi],eax
   140015647:	add    BYTE PTR [rsi-0x79ff8384],cl
   14001564d:	jne    0x1400156c4
   14001564f:	add    bl,ah
   140015651:	mov    edi,0xe1e1ff00
   140015657:	add    BYTE PTR [rbx-0x5bff8b8c],al
   14001565d:	xchg   edx,eax
   14001565e:	xchg   edx,eax
   14001565f:	add    bh,bl
   140015661:	mov    edi,0x85859500
   140015667:	add    dl,ah
   140015669:	retf   
   14001566a:	retf   
   14001566b:	add    bl,bl
   14001566d:	(bad)  
   14001566e:	(bad)  
   14001566f:	add    BYTE PTR [rdi+0x72],bh
   140015672:	jb     0x140015674
   140015674:	jmp    rsi
   140015676:	out    0x0,al
   140015678:	sar    BYTE PTR [rbp-0x4a36ff43],cl
   14001567e:	mov    ch,0x0
   140015680:	(bad)  
   140015681:	rol    ecx,0x0
   140015684:	(bad)
   140015687:	add    BYTE PTR [rbp+0x7c008888],dl
   14001568d:	jno    0x140015700
   14001568f:	add    dl,ch
   140015691:	(bad)  
   140015692:	(bad)  
   140015693:	add    cl,ah
   140015695:	(bad)  
   140015696:	(bad)  
   140015697:	add    ah,cl
   140015699:	mov    ebx,0xebff00bb
   14001569e:	jmp    0x1400156a0
   1400156a0:	cli    
   1400156a1:	out    0xe7,eax
   1400156a3:	add    dh,bl
   1400156a5:	int    0xcd
   1400156a7:	add    bl,bl
   1400156a9:	retf   
   1400156aa:	retf   
   1400156ab:	add    BYTE PTR [rsi+0x75],bh
   1400156ae:	jne    0x1400156b0
   1400156b0:	(bad)  
   1400156b1:	out    dx,al
   1400156b2:	out    dx,al
   1400156b3:	add    BYTE PTR [rbx-0x4fff6e6f],bl
   1400156b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400156ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400156bb:	add    BYTE PTR [rbx+0x6c],dh
   1400156be:	ins    BYTE PTR es:[rdi],dx
   1400156bf:	add    BYTE PTR [rbx+0x71009393],bl
   1400156c5:	imul   ebp,DWORD PTR [rbx+0x0],0xffffffff
   1400156c9:	repz repz add BYTE PTR [rbp-0x73ff797a],cl
   1400156d1:	test   DWORD PTR [rbp-0x39393100],eax
   1400156d7:	add    al,ah
   1400156d9:	xlat   BYTE PTR ds:[rbx]
   1400156da:	xlat   BYTE PTR ds:[rbx]
   1400156db:	add    BYTE PTR [rax-0x6cff6d6e],bl
   1400156e1:	lea    ecx,[rbp-0x64645f00]
   1400156e7:	add    BYTE PTR [rdx-0x67ff7a7b],cl
   1400156ed:	xchg   ebx,eax
   1400156ee:	xchg   ebx,eax
   1400156ef:	add    BYTE PTR [rsi+0x7c009191],dl
   1400156f5:	js     0x14001576f
   1400156f7:	add    BYTE PTR [rbx+0x77],bh
   1400156fa:	ja     0x1400156fc
   1400156fc:	jb     0x14001576c
   1400156fe:	outs   dx,BYTE PTR ds:[rsi]
   1400156ff:	add    bh,bh
   140015701:	clc    
   140015702:	clc    
   140015703:	add    BYTE PTR [rsi-0x6dff5657],ch
   140015709:	mov    cs,WORD PTR [rsi+0x7d7d8100]
   14001570f:	add    BYTE PTR [rbp-0x69ff4748],bh
   140015715:	xchg   edx,eax
   140015716:	xchg   edx,eax
   140015717:	add    BYTE PTR [rbp-0x6bff6e6f],dl
   14001571d:	nop
   14001571e:	nop
   14001571f:	add    BYTE PTR [rcx+rcx*4-0x7d7aff77],cl
   140015726:	(bad)  
   140015727:	add    bh,bh
   140015729:	sti    
   14001572a:	sti    
   14001572b:	add    BYTE PTR [rbx-0x5fff4f50],dh
   140015731:	sahf   
   140015732:	sahf   
   140015733:	add    BYTE PTR [rbp-0x6dff6c6d],dl
   140015739:	nop
   14001573a:	nop
   14001573b:	add    BYTE PTR [rdi-0x23ff7273],cl
   140015741:	fcmovu st,st(2)
   140015743:	add    al,al
   140015745:	mov    esi,0xbfc000be
   14001574a:	mov    edi,0x89898a00
   14001574f:	add    cl,bh
   140015751:	mov    edx,0x93ab00b7
   140015756:	lea    eax,[rax]
   140015758:	(bad)
   14001575c:	mov    ecx,0xc6001359
   140015761:	outs   dx,BYTE PTR ds:[rsi]
   140015762:	sub    DWORD PTR [rax],eax
   140015764:	mov    esp,0xd500316e
   140015769:	pushf  
   14001576a:	ins    BYTE PTR es:[rdi],dx
   14001576b:	add    ah,dl
   14001576d:	jbe    0x140015786
   14001576f:	add    dl,dl
   140015771:	jne    0x14001578d
   140015773:	add    al,bl
   140015775:	jg     0x14001579c
   140015777:	add    cl,bl
   140015779:	and    BYTE PTR [rsi],0x0
   14001577c:	fiadd  DWORD PTR [rcx-0x7a24ffd7]
   140015782:	cs add ah,bl
   140015785:	xchg   BYTE PTR [rax],dh
   140015787:	add    al,ah
   140015789:	lea    edi,[rdx]
   14001578b:	add    dl,ah
   14001578d:	xchg   edx,eax
   14001578e:	add    r11b,spl
   140015791:	xchg   esp,eax
   140015792:	rex.RX add dl,r12b
   140015795:	xchg   ebp,eax
   140015796:	rex.WB add r12b,spl
   140015799:	(bad)  
   14001579a:	rex.WRXB add r9b,r13b
   14001579d:	lahf   
   14001579e:	push   rbp
   14001579f:	add    dl,ch
   1400157a1:	lahf   
   1400157a2:	push   rsi
   1400157a3:	add    cl,ch
   1400157a5:	movabs eax,ds:0xabef005ba3eb0057
   1400157ae:	imul   eax,DWORD PTR [rax],0x6aadef
   1400157b4:	repnz mov bl,0x73
   1400157b7:	add    ch,dh
   1400157b9:	mov    eax,0xbcf7007a
   1400157be:	add    DWORD PTR [rax],0x3e90de
   1400157c4:	loop   0x140015764
   1400157c6:	push   rdx
   1400157c7:	add    ah,dh
   1400157c9:	mov    edx,0xc1f9007c
   1400157ce:	xchg   DWORD PTR [rax],eax
   1400157d0:	cli    
   1400157d1:	(bad)  
   1400157d2:	mov    WORD PTR [rax],es
   1400157d4:	sti    
   1400157d5:	(bad)  
   1400157d6:	nop
   1400157d7:	add    ch,bh
   1400157d9:	retf   
   1400157da:	xchg   ebp,eax
   1400157db:	add    ch,bh
   1400157dd:	(bad)  
   1400157de:	cdq    
   1400157df:	add    dl,bh
   1400157e1:	retf   
   1400157e2:	xchg   esp,eax
   1400157e3:	add    bh,bh
   1400157e5:	shl    DWORD PTR [rax+0x7abaea00],cl
   1400157eb:	add    bh,ah
   1400157ed:	mov    esi,0xd9ff0088
   1400157f2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400157f3:	add    dh,bh
   1400157f5:	fldenv [rbp-0x56230100]
   1400157fb:	add    ah,ch
   1400157fd:	int3   
   1400157fe:	xchg   edi,eax
   1400157ff:	add    ch,dh
   140015801:	rcr    DWORD PTR [rcx-0x4f1d0100],cl
   140015807:	add    bh,bh
   140015809:	out    0xb2,al
   14001580b:	add    bh,bh
   14001580d:	out    0xb4,eax
   14001580f:	add    bh,bh
   140015811:	out    dx,al
   140015812:	mov    ebx,0xbff2ff00
   140015817:	add    ah,bh
   140015819:	repnz leave 
   14001581b:	add    bh,bh
   14001581d:	(bad)  
   14001581e:	jmp    0x140015820
   140015820:	xchg   edi,eax
   140015821:	cwde   
   140015822:	xchg   edi,eax
   140015823:	add    dh,dl
   140015825:	(bad)  
   140015826:	xlat   BYTE PTR ds:[rbx]
   140015827:	add    al,dl
   140015829:	rcl    cl,1
   14001582b:	add    ah,bl
   14001582d:	(bad)  
   14001582f:	add    dl,bl
   140015831:	fcmovu st,st(2)
   140015833:	add    cl,bl
   140015835:	(bad)  
   140015837:	add    bh,dl
   140015839:	xlat   BYTE PTR ds:[rbx]
   14001583a:	xlat   BYTE PTR ds:[rbx]
   14001583b:	add    ch,dl
   14001583d:	(bad)  
   14001583e:	(bad)  
   14001583f:	add    bl,dl
   140015841:	rcl    ebx,cl
   140015843:	add    dl,dl
   140015845:	rcl    dl,cl
   140015847:	add    bh,cl
   140015849:	iret   
   14001584a:	iret   
   14001584b:	add    dh,cl
   14001584d:	(bad)  
   14001584e:	(bad)  
   14001584f:	add    ah,cl
   140015851:	int3   
   140015852:	int3   
   140015853:	add    dl,cl
   140015855:	retf   0xca
   140015858:	enter  0xc8c8,0x0
   14001585c:	mov    edi,0xc5c500c7
   140015862:	(bad)
   140015865:	rol    ecx,0x0
   140015868:	rol    al,0xc0
   14001586b:	add    BYTE PTR [rdi-0x41ff4041],bh
   140015871:	mov    esi,0xbdbd00be
   140015876:	mov    ebp,0xbbbbbb00
   14001587b:	add    BYTE PTR [rdx-0x48ff4546],bh
   140015881:	mov    bh,0xb7
   140015883:	add    BYTE PTR [rsp+rsi*4-0x4c4cff4c],dh
   14001588a:	mov    bl,0x0
   14001588c:	mov    dl,0xb2
   14001588e:	mov    dl,0x0
   140015890:	mov    cl,0xb1
   140015892:	mov    cl,0x0
   140015894:	lods   eax,DWORD PTR ds:[rsi]
   140015895:	lods   eax,DWORD PTR ds:[rsi]
   140015896:	lods   eax,DWORD PTR ds:[rsi]
   140015897:	add    BYTE PTR [rdx-0x56ff5556],ch
   14001589d:	test   eax,0xa7a700a9
   1400158a2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400158a3:	add    BYTE PTR [rbp-0x5bff5a5b],ah
   1400158a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400158aa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400158ab:	add    BYTE PTR [rbx-0x5fff5c5d],ah
   1400158b1:	movabs al,ds:0x9d9d009e9e9e00a0
   1400158ba:	popf   
   1400158bb:	add    BYTE PTR [rbx-0x65ff6465],bl
   1400158c1:	(bad)  
   1400158c2:	(bad)  
   1400158c3:	add    BYTE PTR [rsi-0x6aff696a],dl
   1400158c9:	xchg   ebp,eax
   1400158ca:	xchg   ebp,eax
   1400158cb:	add    BYTE PTR [rcx-0x72ff6e6f],dl
   1400158d1:	lea    ecx,[rbp-0x75757600]
   1400158d7:	add    BYTE PTR [rax-0x7aff7778],cl
   1400158dd:	test   DWORD PTR [rbp-0x7b7b7c00],eax
   1400158e3:	add    BYTE PTR [rdx-0x7fff7d7e],al
   1400158e9:	add    BYTE PTR [rax+0x7f7f7f00],0x0
   1400158f0:	jle    0x140015970
   1400158f2:	jle    0x1400158f4
   1400158f4:	jl     0x140015972
   1400158f6:	jl     0x1400158f8
   1400158f8:	jp     0x140015974
   1400158fa:	jp     0x1400158fc
	...
   140015950:	add    BYTE PTR [rax],al
   140015952:	add    BYTE PTR [rbx],al
   140015954:	add    eax,DWORD PTR [rbx]
	...
   14001596e:	add    BYTE PTR [rax],al
   140015970:	add    BYTE PTR [rdx],al
   140015972:	add    dh,dl
   140015974:	sub    al,0x32
   140015976:	add    eax,DWORD PTR [rbx]
   140015978:	add    eax,DWORD PTR [rax]
	...
   14001598e:	add    BYTE PTR [rax],al
   140015990:	add    dh,dl
   140015992:	in     eax,0xf2
   140015994:	sub    al,0x29
   140015996:	(bad)  
   140015997:	and    al,0x28
   140015999:	add    eax,DWORD PTR [rbx]
   14001599b:	add    eax,DWORD PTR [rax]
	...
   1400159ad:	add    BYTE PTR [rax],al
   1400159af:	add    BYTE PTR [rdx],al
   1400159b1:	repnz in eax,0xf1
   1400159b4:	sub    al,0x29
   1400159b6:	(bad)  
   1400159b7:	and    al,0x24
   1400159b9:	and    ebx,DWORD PTR [rdi]
   1400159bb:	and    BYTE PTR [rbx],al
   1400159bd:	add    eax,DWORD PTR [rbx]
	...
   1400159cf:	add    BYTE PTR [rdx],al
   1400159d1:	out    dx,eax
   1400159d2:	in     al,0xf0
   1400159d4:	sub    al,0x2f
   1400159d6:	cmp    DWORD PTR [rdi],esp
   1400159d8:	and    al,0x23
   1400159da:	(bad)  
   1400159db:	and    al,0x1c
   1400159dd:	sbb    ebx,DWORD PTR [rax]
   1400159df:	add    eax,DWORD PTR [rbx]
   1400159e1:	add    eax,DWORD PTR [rax]
	...
   1400159ef:	add    BYTE PTR [rdx],al
   1400159f1:	in     al,dx
   1400159f2:	loop   0x1400159e2
   1400159f4:	sub    al,0x30
   1400159f6:	ds pop rsi
   1400159f8:	pop    rdx
   1400159f9:	xor    BYTE PTR [r15],r11b
   1400159fc:	sbb    al,0x1b
   1400159fe:	sbb    BYTE PTR [rax],bl
   140015a00:	(bad)  
   140015a01:	(bad)  
   140015a02:	add    eax,DWORD PTR [rbx]
	...
   140015a10:	add    ch,dl
   140015a12:	loopne 0x140015a01
   140015a14:	sub    al,0x26
   140015a16:	adc    ecx,DWORD PTR [rdi]
   140015a18:	adc    BYTE PTR [rip+0x3d54593c],ah        # 0x17d55b35a
   140015a1e:	and    bl,BYTE PTR [rax]
   140015a20:	(bad)  
   140015a21:	(bad)  
   140015a22:	adc    al,0x14
   140015a24:	add    eax,DWORD PTR [rax]
	...
   140015a2e:	add    BYTE PTR [rax],al
   140015a30:	add    ch,al
   140015a32:	fucomip st,st(3)
   140015a34:	xor    DWORD PTR [rsi],esp
   140015a36:	sbb    DWORD PTR [rbx],edx
   140015a38:	femms  
   140015a3a:	or     ecx,DWORD PTR [rcx]
   140015a3c:	or     eax,0x4c58401e
   140015a41:	xor    eax,0x31416
	...
   140015a4e:	add    BYTE PTR [rax],al
   140015a50:	add    ah,bh
   140015a52:	fsub   st(2),st
   140015a54:	xor    DWORD PTR [rbx],ebp
   140015a56:	and    DWORD PTR [rcx],ebx
   140015a58:	adc    ecx,DWORD PTR [rdi]
   140015a5a:	(bad)  
   140015a5b:	or     ecx,DWORD PTR [rcx]
   140015a5d:	or     BYTE PTR [rdi],al
   140015a5f:	(bad)  
   140015a60:	or     bl,BYTE PTR [rip+0x31658]        # 0x1400470be
	...
   140015a6e:	add    BYTE PTR [rax],al
   140015a70:	add    ah,ch
   140015a72:	fiadd  DWORD PTR [rdi+0x212a2e33]
   140015a78:	sbb    DWORD PTR [rbx],edx
   140015a7a:	femms  
   140015a7c:	or     ecx,DWORD PTR [rcx]
   140015a7e:	or     BYTE PTR [rdi],al
   140015a80:	(bad)  
   140015a81:	add    eax,0x3174c
	...
   140015a8e:	add    BYTE PTR [rax],al
   140015a90:	add    ah,bl
   140015a92:	fnstcw WORD PTR [rsi+rsi*1+0x35]
   140015a96:	sub    eax,0x1319212a
   140015a9b:	femms  
   140015a9d:	or     ecx,DWORD PTR [rcx]
   140015a9f:	or     BYTE PTR [rdi],al
   140015aa1:	or     al,0x4f
   140015aa3:	sbb    BYTE PTR [rbx],al
	...
   140015aad:	add    BYTE PTR [rax],al
   140015aaf:	add    BYTE PTR [rdx],al
   140015ab1:	loopne 0x140015a8b
   140015ab3:	xor    DWORD PTR [rdi],0x38
   140015ab6:	xor    al,0x2d
   140015ab8:	sub    ah,BYTE PTR [rcx]
   140015aba:	sbb    DWORD PTR [rbx],edx
   140015abc:	femms  
   140015abe:	or     ecx,DWORD PTR [rcx]
   140015ac0:	or     BYTE PTR [rcx],dl
   140015ac2:	push   rsp
   140015ac3:	sbb    eax,DWORD PTR [rbx]
	...
   140015acd:	add    BYTE PTR [rax],al
   140015acf:	add    BYTE PTR [rdx],al
   140015ad1:	(bad)  
   140015ad3:	(bad)  
   140015ad4:	cmp    bh,BYTE PTR [rsi]
   140015ad6:	cmp    esi,DWORD PTR [rbp*1+0x1319212a]
   140015add:	femms  
   140015adf:	or     ecx,DWORD PTR [rcx]
   140015ae1:	adc    dl,BYTE PTR [rdx+0x1c]
   140015ae4:	add    eax,DWORD PTR [rax]
	...
   140015aee:	add    BYTE PTR [rax],al
   140015af0:	add    bl,bl
   140015af2:	(bad)  
   140015af3:	cmp    DWORD PTR [rdi],0x343b4148
   140015af9:	sub    eax,0x1319212a
   140015afe:	femms  
   140015b00:	or     edx,DWORD PTR [rip+0x31f5a]        # 0x140047a60
	...
   140015b0e:	add    BYTE PTR [rax],al
   140015b10:	add    bl,cl
   140015b12:	shl    BYTE PTR [rsi+0x43],cl
   140015b15:	rex.WRX
   140015b16:	rex.WB
   140015b17:	cmp    esi,DWORD PTR [rbp*1+0x1319212a]
   140015b1f:	femms  
   140015b21:	sbb    dl,BYTE PTR [rbx+0x23]
   140015b24:	add    eax,DWORD PTR [rax]
	...
   140015b2e:	add    BYTE PTR [rax],al
   140015b30:	add    dl,bh
   140015b32:	shr    BYTE PTR [rsp+rax*2+0x5c],1
   140015b36:	push   rcx
   140015b37:	rex.WB
   140015b38:	cmp    esi,DWORD PTR [rbp*1+0x1319212a]
   140015b40:	bndldx bnd2,[rbp+0x24]
   140015b44:	add    eax,DWORD PTR [rax]
	...
   140015b4e:	add    BYTE PTR [rax],al
   140015b50:	add    dl,ah
   140015b52:	int    0x7b
   140015b54:	rex.RXB (bad) 
   140015b56:	pop    rbx
   140015b57:	push   rcx
   140015b58:	rex.WB xor al,0x8e
   140015b5b:	mov    ecx,DWORD PTR [rbx+0x13888b8b]
   140015b61:	and    eax,0x32742
	...
   140015b6e:	add    BYTE PTR [rax],al
   140015b70:	add    dl,dl
   140015b72:	int3   
   140015b73:	jns    0x140015bbf
   140015b75:	data16 (bad) 
   140015b77:	pop    rbx
   140015b78:	push   rcx
   140015b79:	cmp    rcx,QWORD PTR [r14+0x49ea6a3]
   140015b80:	add    al,0x4
   140015b82:	cmp    DWORD PTR [rcx],ebp
   140015b84:	add    eax,DWORD PTR [rax]
	...
   140015b8e:	add    BYTE PTR [rax],al
   140015b90:	add    cl,dh
   140015b92:	retf   0x506f
   140015b95:	je     0x140015bfd
   140015b97:	(bad)  
   140015b98:	pop    rbx
   140015b99:	push   rcx
   140015b9a:	cmp    rcx,QWORD PTR [r14-0x675f5348]
   140015ba1:	xchg   edx,eax
   140015ba2:	mov    eax,DWORD PTR [rsp+rax*1]
	...
   140015bad:	add    BYTE PTR [rax],al
   140015baf:	add    BYTE PTR [rdx],al
   140015bb1:	int3   
   140015bb2:	enter  0x5f67,0x7e
   140015bb6:	je     0x140015c1e
   140015bb8:	(bad)  
   140015bb9:	pop    rbx
   140015bba:	push   rcx
   140015bbb:	cmp    rcx,QWORD PTR [r14-0x5e574f72]
   140015bc2:	(bad)  
   140015bc3:	xchg   ebp,eax
   140015bc4:	nop
   140015bc5:	add    al,0x4
   140015bc7:	add    al,0x0
   140015bc9:	add    BYTE PTR [rax],al
   140015bcb:	add    BYTE PTR [rax],al
   140015bcd:	add    BYTE PTR [rax],al
   140015bcf:	add    BYTE PTR [rdx],al
   140015bd1:	leave  
   140015bd2:	(bad)  
   140015bd3:	push   0x747e0164
   140015bd8:	data16 (bad) 
   140015bda:	pop    rbx
   140015bdb:	push   rcx
   140015bdc:	rex.WB
   140015bdd:	cmp    ecx,DWORD PTR [r14-0x5d554d72]
   140015be4:	sahf   
   140015be5:	xchg   edi,eax
   140015be6:	xchg   esp,eax
   140015be7:	pop    QWORD PTR [rsp+rax*1]
   140015bea:	add    al,0x0
   140015bec:	add    BYTE PTR [rax],al
   140015bee:	add    BYTE PTR [rax],al
   140015bf0:	add    al,bh
   140015bf2:	(bad)
   140015bf5:	add    DWORD PTR [rcx],eax
   140015bf7:	jle    0x140015c6d
   140015bf9:	data16 (bad) 
   140015bfb:	pop    rbx
   140015bfc:	push   rcx
   140015bfd:	rex.WB
   140015bfe:	cmp    ecx,DWORD PTR [r10-0x564d7172]
   140015c05:	movabs ds:0x4049196979ca0,al
   140015c0e:	add    BYTE PTR [rax],al
   140015c10:	add    al,ah
   140015c12:	ret    
   140015c13:	outs   dx,BYTE PTR ds:[rsi]
   140015c14:	jo     0x140015c17
   140015c16:	add    DWORD PTR [rcx],eax
   140015c18:	jle    0x140015c8e
   140015c1a:	data16 (bad) 
   140015c1c:	pop    rbx
   140015c1d:	push   rcx
   140015c1e:	rex.WB
   140015c1f:	cmp    ecx,DWORD PTR [r14-0x77]
   140015c23:	mov    ?,WORD PTR [rsi-0x605c5550]
   140015c29:	sahf   
   140015c2a:	fwait
   140015c2b:	popf   
   140015c2c:	cdq    
   140015c2d:	add    al,0x0
   140015c2f:	add    BYTE PTR [rdx],al
   140015c31:	ret    0x77c1
   140015c34:	jp     0x140015c37
   140015c36:	add    DWORD PTR [rcx],eax
   140015c38:	add    DWORD PTR [rsi+0x74],edi
   140015c3b:	data16 (bad) 
   140015c3d:	pop    rbx
   140015c3e:	push   rcx
   140015c3f:	rex.WB
   140015c40:	pop    r13
   140015c42:	rex.WXB add rcx,QWORD PTR [r13-0x544e484d]
   140015c49:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015c4a:	sahf   
   140015c4b:	fwait
   140015c4c:	popf   
   140015c4d:	cdq    
   140015c4e:	add    al,0x0
   140015c50:	add    bh,BYTE PTR [rdi-0x7a888e41]
   140015c56:	test   BYTE PTR [rcx],al
   140015c58:	add    DWORD PTR [rcx],eax
   140015c5a:	jle    0x140015cd0
   140015c5c:	data16 (bad) 
   140015c5e:	pop    rbx
   140015c5f:	push   rcx
   140015c60:	rex.WB pop r13
   140015c62:	add    ecx,DWORD PTR ss:[rbx+rdx*4-0x494b5066]
   140015c6a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015c6b:	test   eax,0x4a9ad
   140015c70:	add    bh,BYTE PTR [rdi+0x7372bcc0]
   140015c76:	movsxd edi,DWORD PTR gs:[rbp+0x64]
   140015c7a:	js     0x140015ce5
   140015c7c:	push   0x66
   140015c7e:	(bad)  
   140015c7f:	pop    rbx
   140015c80:	push   rcx
   140015c81:	imul   esi,DWORD PTR [rdi],0x4040003
   140015c87:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015c88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015c89:	mov    ah,0xb6
   140015c8b:	mov    ecx,0x4b5ba
   140015c90:	add    dl,dh
   140015c92:	sar    BYTE PTR [rbp-0x7f287942],0x7a
   140015c99:	push   0x4a50575f
   140015c9e:	rex.WRB
   140015c9f:	rex.WXB push r13
   140015ca1:	(bad)  
   140015ca2:	cmp    al,BYTE PTR [rbx]
   140015ca4:	add    BYTE PTR [rax],al
   140015ca6:	add    BYTE PTR [rsp+rax*1],al
   140015ca9:	scas   al,BYTE PTR es:[rdi]
   140015caa:	mov    ecx,0x4b3bbba
   140015caf:	add    BYTE PTR [rax],al
   140015cb1:	add    al,BYTE PTR [rdx]
   140015cb3:	add    al,BYTE PTR [rdx]
   140015cb5:	jge    0x140015c91
   140015cb7:	ror    eax,cl
   140015cb9:	enter  0xcbc9,0x7f
   140015cbd:	jne    0x140015d2c
   140015cbf:	(bad)  
   140015cc0:	push   rsi
   140015cc1:	rex.RX (bad) 
   140015cc3:	add    eax,DWORD PTR [rax]
   140015cc5:	add    BYTE PTR [rax],al
   140015cc7:	add    BYTE PTR [rax],al
   140015cc9:	add    al,0x4
   140015ccb:	add    al,0x4
   140015ccd:	add    al,0x0
   140015ccf:	add    BYTE PTR [rax],al
   140015cd1:	add    BYTE PTR [rax],al
   140015cd3:	add    BYTE PTR [rax],al
   140015cd5:	add    al,BYTE PTR [rdx]
   140015cd7:	add    al,BYTE PTR [rdx]
   140015cd9:	add    bl,ah
   140015cdb:	out    0xe9,al
   140015cdd:	in     eax,0xe1
   140015cdf:	iret   
   140015ce0:	rcl    ebx,1
   140015ce2:	in     eax,0x3
	...
   140015cf8:	add    BYTE PTR [rax],al
   140015cfa:	add    al,BYTE PTR [rdx]
   140015cfc:	add    al,BYTE PTR [rdx]
   140015cfe:	add    dl,bh
   140015d00:	xlat   BYTE PTR ds:[rbx]
   140015d01:	fucom  st(5)
   140015d03:	add    eax,DWORD PTR [rax]
	...
   140015d1d:	add    BYTE PTR [rax],al
   140015d1f:	add    al,BYTE PTR [rdx]
   140015d21:	add    al,BYTE PTR [rdx]
	...
   140015d2f:	add    bh,bh
   140015d31:	(bad)  
   140015d32:	(bad)  
   140015d33:	jmp    rbx
   140015d35:	(bad)  
   140015d36:	(bad)  
   140015d37:	inc    DWORD PTR [rax+0xffff7f]
   140015d3d:	ud0    edi,edi
   140015d40:	add    BYTE PTR [rcx],al
   140015d42:	(bad)  
   140015d43:	inc    DWORD PTR [rax]
   140015d45:	add    BYTE PTR [rdi],bh
   140015d47:	inc    DWORD PTR [rax]
   140015d49:	add    BYTE PTR [rdi],cl
   140015d4b:	inc    DWORD PTR [rax]
   140015d4d:	add    BYTE PTR [rdi],al
   140015d4f:	inc    DWORD PTR [rax]
   140015d51:	add    BYTE PTR [rdi],al
   140015d53:	inc    DWORD PTR [rax]
   140015d55:	add    BYTE PTR [rdi],al
   140015d57:	inc    DWORD PTR [rax]
   140015d59:	add    BYTE PTR [rdi],al
   140015d5b:	inc    DWORD PTR [rax]
   140015d5d:	add    BYTE PTR [rdi],al
   140015d5f:	inc    DWORD PTR [rax]
   140015d61:	add    BYTE PTR [rdi],al
   140015d63:	inc    DWORD PTR [rax]
   140015d65:	add    BYTE PTR [rdi],al
   140015d67:	inc    DWORD PTR [rax]
   140015d69:	add    BYTE PTR [rdi],al
   140015d6b:	inc    DWORD PTR [rax]
   140015d6d:	add    BYTE PTR [rdi],al
   140015d6f:	inc    DWORD PTR [rax]
   140015d71:	add    BYTE PTR [rdi],al
   140015d73:	inc    DWORD PTR [rax]
   140015d75:	add    BYTE PTR [rdi],al
   140015d77:	inc    DWORD PTR [rax]
   140015d79:	add    BYTE PTR [rdi],al
   140015d7b:	inc    DWORD PTR [rax]
   140015d7d:	add    BYTE PTR [rdi],al
   140015d7f:	inc    DWORD PTR [rax]
   140015d81:	add    BYTE PTR [rax],al
   140015d83:	inc    DWORD PTR [rax]
   140015d85:	add    BYTE PTR [rax],al
   140015d87:	(bad)  
   140015d88:	add    BYTE PTR [rax],al
   140015d8a:	add    BYTE PTR [rdi],al
   140015d8c:	add    BYTE PTR [rax],al
   140015d8e:	add    BYTE PTR [rbx],al
   140015d90:	add    BYTE PTR [rax],al
   140015d92:	add    BYTE PTR [rcx],al
   140015d94:	add    BYTE PTR [rax],al
   140015d96:	add    BYTE PTR [rcx],al
   140015d98:	add    BYTE PTR [rax],al
   140015d9a:	or     BYTE PTR [rcx],al
   140015d9c:	add    BYTE PTR [rax],al
   140015d9e:	(bad)  
   140015d9f:	add    DWORD PTR [rax-0x77cf100],eax
   140015da5:	add    BYTE PTR [rdi],cl
   140015da7:	(bad)  
   140015da8:	inc    eax
   140015daa:	ud0    edi,edi
   140015dad:	(bad)  
   140015dae:	(bad)  
   140015daf:	jmp    FWORD PTR [rax]
   140015db1:	add    BYTE PTR [rax],al
   140015db3:	add    BYTE PTR [rax],dl
   140015db5:	add    BYTE PTR [rax],al
   140015db7:	add    BYTE PTR [rax],ah
   140015db9:	add    BYTE PTR [rax],al
   140015dbb:	add    BYTE PTR [rcx],al
   140015dbd:	add    BYTE PTR [rax],cl
	...
   140015ddb:	add    bh,bh
   140015ddd:	(bad)  
   140015dde:	inc    DWORD PTR [rax]
   140015de0:	jo     0x140015e48
   140015de2:	push   0xffffffffccc5f300
   140015de7:	add    bh,bh
   140015de9:	in     eax,dx
   140015dea:	out    dx,eax
   140015deb:	add    bh,bh
   140015ded:	out    dx,eax
   140015dee:	icebp  
   140015def:	add    bh,bh
   140015df1:	idiv   eax
   140015df3:	add    dl,al
   140015df5:	mov    al,0xb1
   140015df7:	add    bh,bh
   140015df9:	rol    esp,0x0
   140015dfc:	dec    ebx
   140015dfe:	int    0x0
   140015e00:	push   QWORD PTR [rsi-0x2d00ff49]
   140015e06:	rol    DWORD PTR [rax],cl
   140015e08:	jmp    QWORD PTR [rsi-0x5500ff5a]
   140015e0e:	stos   BYTE PTR es:[rdi],al
   140015e0f:	add    bh,bh
   140015e11:	lods   eax,DWORD PTR ds:[rsi]
   140015e12:	lods   eax,DWORD PTR ds:[rsi]
   140015e13:	add    bh,bh
   140015e15:	mov    ah,0xb4
   140015e17:	add    bh,bh
   140015e19:	mov    dh,0xb6
   140015e1b:	add    bh,bh
   140015e1d:	mov    esi,0xbfff00be
   140015e22:	mov    edi,0xbdbdfd00
   140015e27:	add    dl,bh
   140015e29:	mov    ebx,0xbdfb00bb
   140015e2e:	mov    ebp,0xbbbbf600
   140015e33:	add    bh,bh
   140015e35:	(bad)
   140015e38:	idiv   BYTE PTR [rdi-0x440fff41]
   140015e3e:	mov    ebx,0xc9c9ff00
   140015e43:	add    bh,bh
   140015e45:	int3   
   140015e46:	int3   
   140015e47:	add    dl,bl
   140015e49:	scas   al,BYTE PTR es:[rdi]
   140015e4a:	scas   al,BYTE PTR es:[rdi]
   140015e4b:	add    dh,al
   140015e4d:	sahf   
   140015e4e:	sahf   
   140015e4f:	add    bh,ah
   140015e51:	mov    ebx,0x9abc00bb
   140015e56:	(bad)  
   140015e57:	add    cl,al
   140015e59:	lahf   
   140015e5a:	lahf   
   140015e5b:	add    dl,cl
   140015e5d:	test   al,0xa8
   140015e5f:	add    bh,bh
   140015e61:	(bad)  
   140015e62:	(bad)  
   140015e63:	add    cl,bl
   140015e65:	mov    dh,0xb6
   140015e67:	add    bh,al
   140015e69:	test   al,0xa8
   140015e6b:	add    ah,al
   140015e6d:	stos   DWORD PTR es:[rdi],eax
   140015e6e:	stos   DWORD PTR es:[rdi],eax
   140015e6f:	add    bh,bh
   140015e71:	loopne 0x140015e53
   140015e73:	add    al,cl
   140015e75:	mov    ch,0xb5
   140015e77:	add    bh,bh
   140015e79:	in     al,dx
   140015e7a:	in     al,dx
   140015e7b:	add    ch,bl
   140015e7d:	(bad)  
   140015e7e:	(bad)  
   140015e7f:	add    al,cl
   140015e81:	mov    esi,0xb0b900be
   140015e86:	mov    al,0x0
   140015e88:	push   rsp
   140015e8a:	hlt    
   140015e8b:	add    bh,bh
   140015e8d:	div    edi
   140015e8f:	add    bh,bh
   140015e91:	sti    
   140015e92:	sti    
   140015e93:	add    bh,al
   140015e95:	(bad)  
   140015e96:	(bad)  
   140015e97:	add    BYTE PTR [rdx-0x2eff5f60],ah
   140015e9d:	iret   
   140015e9e:	iret   
   140015e9f:	add    BYTE PTR [rbx-0xff4e4f],dh
   140015ea5:	(bad)  
   140015ea6:	inc    BYTE PTR [rax]
   140015ea8:	sar    BYTE PTR [rdi-0x2b05ff41],0xd3
   140015eaf:	add    cl,bh
   140015eb1:	(bad)  
   140015eb3:	add    ah,bh
   140015eb5:	(bad)  
   140015eb7:	add    bl,al
   140015eb9:	push   0x22
   140015ebb:	add    bh,bh
   140015ebd:	mov    cl,0x69
   140015ebf:	add    dh,bl
   140015ec1:	mov    edi,DWORD PTR [rip+0x5da7ee00]        # 0x19da94cc7
   140015ec7:	add    bh,bh
   140015ec9:	iret   
   140015eca:	xchg   ebp,eax
   140015ecb:	add    al,ah
   140015ecd:	rcl    DWORD PTR [rbx+0x56795000],0x0
   140015ed4:	add    BYTE PTR [rax],al
   140015ed6:	add    BYTE PTR [rax],al
   140015ed8:	or     dl,ah
   140015eda:	pop    rdi
   140015edb:	add    BYTE PTR [rdi],bh
   140015edd:	test   BYTE PTR [rsi+0x0],bl
   140015ee0:	pushf  
   140015ee1:	lahf   
   140015ee2:	movabs eax,ds:0xffffff00
	...
   1400161e7:	add    BYTE PTR [rax],al
   1400161e9:	add    al,BYTE PTR [rdx]
   1400161eb:	add    al,BYTE PTR [rdx]
   1400161ed:	add    al,BYTE PTR [rax]
	...
   1400161f7:	add    BYTE PTR [rax],al
   1400161f9:	rex.X xor BYTE PTR [rdi],bl
   1400161fc:	and    esp,DWORD PTR [rcx]
   1400161fe:	add    al,BYTE PTR [rdx]
   140016200:	add    al,BYTE PTR [rdx]
   140016202:	add    BYTE PTR [rax],al
   140016204:	add    BYTE PTR [rax],al
   140016206:	add    BYTE PTR [rax],al
   140016208:	add    BYTE PTR [rdx+0x34],al
   14001620b:	sbb    eax,0x19161517
   140016210:	(bad)  
   140016211:	sbb    al,0x2
   140016213:	add    BYTE PTR [rax],al
   140016215:	add    BYTE PTR [rax],al
   140016217:	add    BYTE PTR [rax],al
   140016219:	rex.X xor al,0x20
   14001621c:	sbb    edx,DWORD PTR [rdx]
   14001621e:	femms  
   140016220:	or     al,0x11
   140016222:	add    al,BYTE PTR [rax]
   140016224:	add    BYTE PTR [rax],al
   140016226:	add    BYTE PTR [rax],al
   140016228:	add    BYTE PTR [rdx+0x34],al
   14001622b:	and    al,0x22
   14001622d:	sbb    dl,BYTE PTR [rcx]
   14001622f:	adc    BYTE PTR [rip+0x214],cl        # 0x140016449
   140016235:	add    BYTE PTR [rax],al
   140016237:	add    BYTE PTR [rax],al
   140016239:	rex.X xor al,0x25
   14001623c:	or     ecx,DWORD PTR es:[rcx]
   14001623f:	or     BYTE PTR [rdx],cl
   140016241:	sbb    BYTE PTR [rdx],al
   140016243:	add    BYTE PTR [rax],al
   140016245:	add    BYTE PTR [rax],al
   140016247:	add    BYTE PTR [rax],al
   140016249:	rex.X xor al,0x27
   14001624c:	sub    BYTE PTR [rip+0x3133a3a],dh        # 0x143149c8c
   140016252:	add    al,BYTE PTR [rax]
   140016254:	add    BYTE PTR [rax],al
   140016256:	add    BYTE PTR [rax],al
   140016258:	add    BYTE PTR [rdx+0x34],al
   14001625b:	sub    al,BYTE PTR [rsi]
   14001625d:	cmp    bh,BYTE PTR ss:[rdx+rdi*1]
   140016261:	cmp    al,BYTE PTR [rdx]
   140016263:	add    BYTE PTR [rax],al
   140016265:	add    BYTE PTR [rax],al
   140016267:	add    BYTE PTR [rax],al
   140016269:	rex.X xor al,0x2f
   14001626c:	xor    eax,DWORD PTR [rdi+rsi*1]
   14001626f:	cmp    bh,BYTE PTR [rsp+rdi*1]
   140016272:	cmp    BYTE PTR [rax],bh
   140016274:	cmp    BYTE PTR [rax],al
   140016276:	add    BYTE PTR [rax],al
   140016278:	add    BYTE PTR [rdx+0x34],al
   14001627b:	xor    DWORD PTR [rcx],eax
   14001627d:	sub    eax,0x3a393704
   140016282:	cmp    al,0x3c
   140016284:	cmp    edi,DWORD PTR [rax]
   140016286:	cmp    BYTE PTR [rax],al
   140016288:	add    BYTE PTR [rdx+0x34],al
   14001628b:	xor    dh,BYTE PTR [rdx]
   14001628d:	xor    ch,BYTE PTR [rsi]
   14001628f:	sub    al,0x5
   140016291:	cmp    eax,0x3c3c3838
   140016296:	cmp    al,0x38
   140016298:	add    BYTE PTR [rdx+0x34],al
   14001629b:	xor    al,0x34
   14001629d:	xor    al,0x2b
   14001629f:	xor    dh,BYTE PTR [rdx]
   1400162a1:	(bad)  
   1400162a2:	add    BYTE PTR ds:[rax],bh
   1400162a5:	cmp    BYTE PTR [rax],bh
   1400162a7:	cmp    BYTE PTR [rax],al
   1400162a9:	add    BYTE PTR [rdx+0x42],al
   1400162ac:	rex.X
   1400162ad:	rex.X sub DWORD PTR [rcx],ebp
   1400162b0:	sub    DWORD PTR [rcx],ebp
   1400162b2:	add    BYTE PTR [r8],al
	...
   1400162bd:	add    BYTE PTR [rdx+0x42],al
   1400162c0:	rex.X
   1400162c1:	rex.X
   1400162c2:	rex.X add BYTE PTR [rax],al
	...
   1400162d5:	add    BYTE PTR [rax],al
   1400162d7:	add    bh,bh
   1400162d9:	(bad)  
   1400162da:	fucomip st,st(3)
   1400162dc:	cmp    edi,0x19
   1400162df:	adc    eax,DWORD PTR [rax-0x7ff6f4c1]
   1400162e5:	(bad)  
   1400162e6:	rex pop rax
   1400162e8:	sbb    BYTE PTR [rdi],0x16
   1400162eb:	adc    al,0x80
   1400162ed:	(bad)  
   1400162ee:	add    BYTE PTR [rax],al
   1400162f0:	sbb    BYTE PTR [rdi],0x0
   1400162f3:	add    BYTE PTR [rax-0x7fffffe1],al
   1400162f9:	(bad)  
   1400162fa:	fsub   st(2),st
   1400162fc:	add    BYTE PTR [rdi],0x21
   1400162ff:	sbb    DWORD PTR [rax-0x7ff4f1ff],eax
   140016305:	add    BYTE PTR [rdi],al
   140016307:	(bad)  
   140016308:	adc    BYTE PTR [rax],0x58
   14001630b:	(bad)  
   14001630c:	rcr    BYTE PTR [rdi],0x0
   14001630f:	add    ah,bh
   140016311:	(bad)  
   140016312:	add    BYTE PTR [rax],al
   140016314:	(bad)  
   140016315:	inc    DWORD PTR [rax]
   140016317:	add    BYTE PTR [rax],ch
   140016319:	add    BYTE PTR [rax],al
   14001631b:	add    BYTE PTR [rax],dh
   14001631d:	add    BYTE PTR [rax],al
   14001631f:	add    BYTE PTR [rax+0x0],ah
   140016322:	add    BYTE PTR [rax],al
   140016324:	add    DWORD PTR [rax],eax
   140016326:	and    BYTE PTR [rax],al
	...
   140016414:	add    BYTE PTR [rax],al
   140016416:	add    BYTE PTR [rbx],al
   140016418:	add    BYTE PTR [rax],al
   14001641a:	add    BYTE PTR [rdi],al
   14001641c:	add    BYTE PTR [rax],al
   14001641e:	add    BYTE PTR [rax+rax*1],al
   140016421:	add    BYTE PTR [rax],al
   140016423:	add    DWORD PTR [rax],eax
	...
   1400164cd:	add    BYTE PTR [rax],al
   1400164cf:	add    al,BYTE PTR [rax]
   1400164d1:	add    BYTE PTR [rax],al
   1400164d3:	or     eax,0x27000000
   1400164d8:	add    BYTE PTR [rax],al
   1400164da:	add    BYTE PTR [rdx],bh
   1400164dc:	add    BYTE PTR [rax],al
   1400164de:	add    BYTE PTR [rsi],dh
   1400164e0:	add    BYTE PTR [rax],al
   1400164e2:	add    BYTE PTR [rsi],ah
   1400164e4:	add    BYTE PTR [rax],al
   1400164e6:	add    BYTE PTR [rdi],dl
   1400164e8:	add    BYTE PTR [rax],al
   1400164ea:	add    BYTE PTR [rdx],cl
   1400164ec:	add    BYTE PTR [rax],al
   1400164ee:	add    BYTE PTR [rdx],al
	...
   140016588:	add    BYTE PTR [rax],al
   14001658a:	add    BYTE PTR [rsi],al
   14001658c:	add    BYTE PTR [rax],al
   14001658e:	add    BYTE PTR [rax+rax*1],bl
   140016591:	add    BYTE PTR [rax],al
   140016593:	rex.RX adc eax,0x5981515
   140016599:	add    eax,0x9805
   14001659e:	add    BYTE PTR [rdi+0x7b000000],cl
   1400165a4:	add    BYTE PTR [rax],al
   1400165a6:	add    BYTE PTR [rdi+0x0],bl
   1400165a9:	add    BYTE PTR [rax],al
   1400165ab:	rex.XB add BYTE PTR [r8],al
   1400165ae:	add    BYTE PTR [rsi],ch
   1400165b0:	add    BYTE PTR [rax],al
   1400165b2:	add    BYTE PTR [rsi],bl
   1400165b4:	add    BYTE PTR [rax],al
   1400165b6:	add    BYTE PTR [rax],dl
   1400165b8:	add    BYTE PTR [rax],al
   1400165ba:	add    BYTE PTR [rsi],al
   1400165bc:	add    BYTE PTR [rax],al
   1400165be:	add    BYTE PTR [rcx],al
	...
   140016648:	add    BYTE PTR [rax],al
   14001664a:	add    BYTE PTR [rdi],dl
   14001664c:	adc    eax,0x2d751515
   140016651:	sub    eax,0x585bea2d
   140016656:	pop    rax
   140016657:	dec    DWORD PTR [rdx+0x43]
   14001665a:	rex.XB jmp FWORD PTR [r11]
   14001665d:	sub    ebp,DWORD PTR [rbx]
   14001665f:	repz (bad) 
   140016661:	(bad)  
   140016662:	(bad)  
   140016663:	fimul  DWORD PTR [rip+0xb80d0d]        # 0x140b97376
   140016669:	add    BYTE PTR [rax],al
   14001666b:	cwde   
   14001666c:	add    BYTE PTR [rax],al
   14001666e:	add    BYTE PTR [rbp+0x6d000000],al
   140016674:	add    BYTE PTR [rax],al
   140016676:	add    BYTE PTR [rdx+0x0],dl
   140016679:	add    BYTE PTR [rax],al
   14001667b:	cmp    DWORD PTR [rax],eax
   14001667d:	add    BYTE PTR [rax],al
   14001667f:	add    BYTE PTR es:[rax],al
   140016682:	add    BYTE PTR [rax],bl
   140016684:	add    BYTE PTR [rax],al
   140016686:	add    BYTE PTR [rax+rax*1],cl
   140016689:	add    BYTE PTR [rax],al
   14001668b:	add    eax,DWORD PTR [rax]
	...
   140016705:	add    BYTE PTR [rax],al
   140016707:	add    ebp,DWORD PTR [rbx]
   140016709:	sub    ebp,DWORD PTR [rbx]
   14001670b:	xchg   edi,eax
   14001670c:	rex.RXB
   14001670d:	rex.RXB
   14001670e:	rex.RXB dec DWORD PTR [r8-0x60007778]
   140016715:	xchg   esp,eax
   140016716:	xchg   esp,eax
   140016717:	jmp    FWORD PTR [rbp-0x60007576]
   14001671d:	add    BYTE PTR [rax+0x6b6b82ff],0xff
   140016724:	pop    rbx
   140016725:	rex.WRXB
   140016726:	rex.WRXB (bad) 
   140016728:	cmp    DWORD PTR [rsi],esi
   14001672a:	ss sti 
   14001672c:	and    esp,DWORD PTR [rbx]
   14001672e:	and    esp,ebp
   140016730:	sbb    BYTE PTR [rax],bl
   140016732:	sbb    ah,cl
   140016734:	add    eax,0xa60505
   140016739:	add    BYTE PTR [rax],al
   14001673b:	xchg   ecx,eax
   14001673c:	add    BYTE PTR [rax],al
   14001673e:	add    BYTE PTR [rbx+0x0],bh
   140016741:	add    BYTE PTR [rax],al
   140016743:	(bad)  
   140016744:	add    BYTE PTR [rax],al
   140016746:	add    BYTE PTR [rsi+0x0],al
   140016749:	add    BYTE PTR [rax],al
   14001674b:	xor    BYTE PTR [rax],al
   14001674d:	add    BYTE PTR [rax],al
   14001674f:	(bad)  
   140016750:	add    BYTE PTR [rax],al
   140016752:	add    BYTE PTR [rdx],dl
   140016754:	add    BYTE PTR [rax],al
   140016756:	add    BYTE PTR [rdi],al
   140016758:	add    BYTE PTR [rax],al
   14001675a:	add    BYTE PTR [rcx],al
	...
   1400167c4:	add    BYTE PTR [rax],al
   1400167c6:	add    BYTE PTR [rcx],cl
   1400167c8:	rex.RXB
   1400167c9:	rex.RXB
   1400167ca:	rex.RXB call FWORD PTR [r15-0x62006061]
   1400167d1:	popf   
   1400167d2:	popf   
   1400167d3:	jmp    QWORD PTR [rbx-0x53006d6e]
   1400167d9:	mov    DWORD PTR [rcx-0x75755201],ecx
   1400167df:	jmp    FWORD PTR [rdi-0x4e007475]
   1400167e5:	mov    WORD PTR [rdi+rdi*8-0x72724d],cs
   1400167ec:	xchg   ebp,eax
   1400167ed:	ja     0x140016866
   1400167ef:	jmp    FWORD PTR [rbp+0x5b]
   1400167f2:	pop    rbx
   1400167f3:	dec    DWORD PTR [rsp+rax*2+0x44]
   1400167f7:	jmp    FWORD PTR [rbx]
   1400167f9:	sub    ebp,DWORD PTR [rbx]
   1400167fb:	repz (bad) 
   1400167fd:	(bad)  
   1400167fe:	(bad)  
   1400167ff:	ficom  DWORD PTR [rcx]
   140016801:	adc    DWORD PTR [rcx],edx
   140016803:	mov    esi,0x9a000000
   140016808:	add    BYTE PTR [rax],al
   14001680a:	add    BYTE PTR [rax+0x70000000],cl
   140016810:	add    BYTE PTR [rax],al
   140016812:	add    BYTE PTR [rbp+0x0],dl
   140016815:	add    BYTE PTR [rax],al
   140016817:	cmp    al,0x0
   140016819:	add    BYTE PTR [rax],al
   14001681b:	sub    BYTE PTR [rax],al
   14001681d:	add    BYTE PTR [rax],al
   14001681f:	sbb    DWORD PTR [rax],eax
   140016821:	add    BYTE PTR [rax],al
   140016823:	or     al,0x0
   140016825:	add    BYTE PTR [rax],al
   140016827:	add    eax,DWORD PTR [rax]
	...
   140016881:	add    BYTE PTR [rax],al
   140016883:	add    BYTE PTR [rip+0x64492d2d],ch        # 0x1a44a95b6
   140016889:	fs jmp QWORD PTR fs:[rcx-0x60005e5f]
   140016891:	lahf   
   140016892:	lahf   
   140016893:	jmp    QWORD PTR [rbx-0x55006c6d]
   140016899:	mov    BYTE PTR [rax-0x76765301],cl
   14001689f:	jmp    FWORD PTR [rbp-0x50007576]
   1400168a5:	mov    ecx,DWORD PTR [rbx-0x73734e01]
   1400168ab:	push   QWORD PTR [rbx-0x49007273]
   1400168b1:	mov    cs,WORD PTR [rsi-0x71714801]
   1400168b7:	jmp    FWORD PTR [rax-0x77007b7c]
   1400168bd:	outs   dx,BYTE PTR ds:[rsi]
   1400168be:	outs   dx,BYTE PTR ds:[rsi]
   1400168bf:	call   FWORD PTR [rsi+0x50]
   1400168c2:	push   rax
   1400168c3:	(bad)  
   1400168c4:	cmp    DWORD PTR [rsi],esi
   1400168c6:	ss sti 
   1400168c8:	es es es jmp 0x10d1980e8
   1400168d0:	or     DWORD PTR [rcx],ecx
   1400168d2:	or     DWORD PTR [rsi-0x6e000000],ebp
   1400168d8:	add    BYTE PTR [rax],al
   1400168da:	add    BYTE PTR [rbp+0x0],bh
   1400168dd:	add    BYTE PTR [rax],al
   1400168df:	add    BYTE PTR fs:[rax],al
   1400168e2:	add    BYTE PTR [rax+0x0],cl
   1400168e5:	add    BYTE PTR [rax],al
   1400168e7:	xor    BYTE PTR [rax],al
   1400168e9:	add    BYTE PTR [rax],al
   1400168eb:	(bad)  
   1400168ec:	add    BYTE PTR [rax],al
   1400168ee:	add    BYTE PTR [rdx],dl
   1400168f0:	add    BYTE PTR [rax],al
   1400168f2:	add    BYTE PTR [rdi],al
   1400168f4:	add    BYTE PTR [rax],al
   1400168f6:	add    BYTE PTR [rcx],al
	...
   140016944:	sub    eax,0x6b492d2d
   140016949:	imul   ebp,DWORD PTR [rbx-0x1],0xffffffa3
   14001694d:	movabs ds:0x93a3ffa1a1a1ffa3,eax
   140016956:	xchg   ebx,eax
   140016957:	jmp    QWORD PTR [rdi-0x51007879]
   14001695d:	xchg   ecx,eax
   14001695e:	xchg   ecx,eax
   14001695f:	(bad)  
   140016960:	mov    edx,0xb2ffa4a4
   140016965:	xchg   ebx,eax
   140016966:	xchg   ebx,eax
   140016967:	jmp    FWORD PTR [rdi-0x4e007475]
   14001696d:	mov    WORD PTR [rdi+rdi*8-0x72724d],cs
   140016974:	mov    dh,0x8e
   140016976:	mov    ?,edi
   140016978:	mov    bh,0x8e
   14001697a:	mov    ?,edi
   14001697c:	mov    ecx,0xbbff9090
   140016981:	xchg   ecx,eax
   140016982:	xchg   ecx,eax
   140016983:	(bad)  
   140016984:	mov    ebp,0xa5ff9191
   140016989:	add    BYTE PTR [rax+0x63637aff],0xff
   140016990:	rex.WRX
   140016991:	rex.RB
   140016992:	rex.RB jmp FWORD PTR [r11]
   140016995:	sub    ebp,DWORD PTR [rbx]
   140016997:	repz and DWORD PTR [rcx],esp
   14001699a:	and    esi,ebx
   14001699c:	adc    DWORD PTR [rcx],edx
   14001699e:	adc    DWORD PTR [rdi-0x66000000],edi
   1400169a4:	add    BYTE PTR [rax],al
   1400169a6:	add    BYTE PTR [rax+0x70000000],cl
   1400169ac:	add    BYTE PTR [rax],al
   1400169ae:	add    BYTE PTR [rbp+0x0],dl
   1400169b1:	add    BYTE PTR [rax],al
   1400169b3:	cmp    al,0x0
   1400169b5:	add    BYTE PTR [rax],al
   1400169b7:	(bad)  
   1400169b8:	add    BYTE PTR [rax],al
   1400169ba:	add    BYTE PTR [rbx],dl
   1400169bc:	add    BYTE PTR [rax],al
   1400169be:	add    BYTE PTR [rip+0x0],al        # 0x1400169c4
	...
   140016a04:	sub    al,0x2c
   140016a06:	sub    al,0x4a
   140016a08:	ins    BYTE PTR es:[rdi],dx
   140016a09:	ins    BYTE PTR es:[rdi],dx
   140016a0a:	ins    BYTE PTR es:[rdi],dx
   140016a0b:	jmp    QWORD PTR [rsp+riz*4-0x5c5c005c]
   140016a12:	movabs ds:0x8686a6ff9393a3ff,eax
   140016a1b:	push   QWORD PTR [rsi-0x2200696a]
   140016a21:	leave  
   140016a22:	leave  
   140016a23:	call   rsp
   140016a25:	rcl    al,1
   140016a27:	dec    esi
   140016a29:	mov    edi,0xb6b6c6ff
   140016a2f:	(bad)  
   140016a30:	mov    esi,0xb3ffa5a5
   140016a35:	lea    ecx,[rbp-0x71714901]
   140016a3b:	push   QWORD PTR [rdi-0x46007172]
   140016a41:	nop
   140016a42:	nop
   140016a43:	(bad)  
   140016a44:	mov    ebx,0xbdff9191
   140016a49:	xchg   ecx,eax
   140016a4a:	xchg   ecx,eax
   140016a4b:	(bad)  
   140016a4c:	mov    edi,0xc1ff9292
   140016a51:	xchg   esp,eax
   140016a52:	xchg   esp,eax
   140016a53:	(bad)  
   140016a54:	mov    edx,0x8eff8f8f
   140016a59:	jo     0x140016acb
   140016a5b:	jmp    FWORD PTR [rbx+0x58]
   140016a5e:	pop    rax
   140016a5f:	(bad)  
   140016a60:	cmp    dh,BYTE PTR [rdi]
   140016a62:	(bad)  
   140016a63:	sti    
   140016a64:	es es es jmp 0x10d198284
   140016a6c:	or     DWORD PTR [rcx],ecx
   140016a6e:	or     DWORD PTR [rsi-0x6e000000],ebp
   140016a74:	add    BYTE PTR [rax],al
   140016a76:	add    BYTE PTR [rdi+0x0],dh
   140016a79:	add    BYTE PTR [rax],al
   140016a7b:	rex.RX add BYTE PTR [rax],r8b
   140016a7e:	add    BYTE PTR [rbx],dl
	...
   140016ac4:	sub    ebp,DWORD PTR [rbx]
   140016ac6:	sub    ecx,DWORD PTR [rsi+rbp*2+0x6e]
   140016aca:	outs   dx,BYTE PTR ds:[rsi]
   140016acb:	jmp    QWORD PTR [rsi-0x5b00595a]
   140016ad1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016ad2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016ad3:	jmp    QWORD PTR [rdx-0x5b006f70]
   140016ad9:	test   DWORD PTR [rbp-0x6a6a4301],eax
   140016adf:	(bad)  
   140016ae0:	inc    eax
   140016ae2:	sar    bh,0xff
   140016ae5:	mov    ebp,0xbff7ffbd
   140016aea:	mov    edi,0xc5c5edff
   140016aef:	jmp    rbx
   140016af1:	rcl    ecx,1
   140016af3:	(bad)  
   140016af4:	(bad)  
   140016af6:	fdiv   st(7),st
   140016af8:	(bad)  
   140016af9:	retf   
   140016afa:	retf   
   140016afb:	dec    ebp
   140016afd:	mov    ecx,0x9fc0ffb9
   140016b02:	lahf   
   140016b03:	(bad)  
   140016b04:	mov    ecx,0xbbff9090
   140016b09:	xchg   ecx,eax
   140016b0a:	xchg   ecx,eax
   140016b0b:	(bad)  
   140016b0c:	mov    ebp,0xbfff9191
   140016b11:	xchg   edx,eax
   140016b12:	xchg   edx,eax
   140016b13:	inc    ecx
   140016b15:	xchg   esp,eax
   140016b16:	xchg   esp,eax
   140016b17:	inc    ebx
   140016b19:	xchg   ebp,eax
   140016b1a:	xchg   ebp,eax
   140016b1b:	inc    ebp
   140016b1d:	xchg   ebp,eax
   140016b1e:	xchg   ebp,eax
   140016b1f:	inc    edi
   140016b21:	xchg   esi,eax
   140016b22:	xchg   esi,eax
   140016b23:	jmp    FWORD PTR [rbp+0x7fff8585]
   140016b29:	data16 call WORD PTR [rax+0x46]
   140016b2e:	rex.RX jmp FWORD PTR [rbx]
   140016b31:	sub    ebp,DWORD PTR [rbx]
   140016b33:	repz sbb ebx,DWORD PTR [rbx]
   140016b36:	sbb    edx,eax
   140016b38:	add    BYTE PTR [rax],al
   140016b3a:	add    BYTE PTR [rbp+0x0],ch
   140016b3d:	add    BYTE PTR [rax],al
   140016b3f:	(bad)  
	...
   140016b84:	sub    ebp,DWORD PTR [rbx]
   140016b86:	sub    ebx,DWORD PTR [rdi+0x76]
   140016b89:	jbe    0x140016c01
   140016b8b:	jmp    FWORD PTR [rax-0x59005758]
   140016b91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016b92:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016b93:	jmp    QWORD PTR [rcx-0x5d007374]
   140016b99:	test   BYTE PTR [rdi+rdi*8-0x6a6a45],al
   140016ba0:	inc    edx
   140016ba2:	ret    0xffff
   140016ba5:	rol    al,0xff
   140016ba8:	(bad)  
   140016ba9:	mov    ebp,0xbaffffbd
   140016bae:	mov    edx,0xb7b7ffff
   140016bb3:	(bad)  
   140016bb4:	push   QWORD PTR [rsp+rsi*4-0x43430801]
   140016bbb:	push   rax
   140016bbd:	mov    edi,0xdadaeaff
   140016bc3:	jmp    rsp
   140016bc5:	loop   0x140016ba9
   140016bc7:	(bad)  
   140016bc8:	fmul   st(7),st
   140016bca:	iret   
   140016bcb:	call   rdx
   140016bcd:	mov    edx,0x9dc4ffba
   140016bd2:	popf   
   140016bd3:	(bad)  
   140016bd4:	mov    edi,0xc1ff9292
   140016bd9:	xchg   esp,eax
   140016bda:	xchg   esp,eax
   140016bdb:	inc    ebx
   140016bdd:	xchg   ebp,eax
   140016bde:	xchg   ebp,eax
   140016bdf:	inc    ebp
   140016be1:	xchg   ebp,eax
   140016be2:	xchg   ebp,eax
   140016be3:	inc    edi
   140016be5:	xchg   esi,eax
   140016be6:	xchg   esi,eax
   140016be7:	dec    ecx
   140016be9:	cwde   
   140016bea:	cwde   
   140016beb:	dec    ebx
   140016bed:	cdq    
   140016bee:	cdq    
   140016bef:	inc    edx
   140016bf1:	xchg   ebx,eax
   140016bf2:	xchg   ebx,eax
   140016bf3:	jmp    FWORD PTR [rcx]
   140016bf5:	sub    DWORD PTR [rcx],ebp
   140016bf7:	in     al,dx
   140016bf8:	add    BYTE PTR [rax],al
   140016bfa:	add    BYTE PTR [rdi+0x0],dh
   140016bfd:	add    BYTE PTR [rax],al
   140016bff:	and    eax,DWORD PTR [rax]
	...
   140016c41:	add    BYTE PTR [rax],al
   140016c43:	add    BYTE PTR [rdi],ch
   140016c45:	(bad)  
   140016c46:	(bad)  
   140016c47:	mov    WORD PTR [rbp-0x55007273],cs
   140016c4d:	stos   BYTE PTR es:[rdi],al
   140016c4e:	stos   BYTE PTR es:[rdi],al
   140016c4f:	jmp    FWORD PTR [rax-0x5f005758]
   140016c55:	mov    ecx,DWORD PTR [rbx-0x7c7c5f01]
   140016c5b:	(bad)  
   140016c5c:	mov    ebx,0xffff9999
   140016c61:	(bad)
   140016c64:	inc    edx
   140016c66:	ret    0xffff
   140016c69:	rol    al,0xff
   140016c6c:	(bad)  
   140016c6d:	mov    ebp,0xbaffffbd
   140016c72:	mov    edx,0xb7b7ffff
   140016c77:	(bad)  
   140016c78:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   140016c7f:	(bad)  
   140016c80:	jmp    FWORD PTR [rbp-0x51020053]
   140016c86:	scas   al,BYTE PTR es:[rdi]
   140016c87:	(bad)  
   140016c88:	clc    
   140016c89:	mov    ebp,0xcdf5ffbd
   140016c8e:	int    0xff
   140016c90:	repz loop 0x140016c75
   140016c93:	(bad)  
   140016c94:	in     al,dx
   140016c95:	out    0xe7,eax
   140016c97:	jmp    rcx
   140016c99:	rcl    ecx,1
   140016c9b:	call   rbx
   140016c9d:	mov    ah,0xb4
   140016c9f:	inc    esi
   140016ca1:	fwait
   140016ca2:	fwait
   140016ca3:	inc    ebp
   140016ca5:	xchg   ebp,eax
   140016ca6:	xchg   ebp,eax
   140016ca7:	inc    edi
   140016ca9:	xchg   esi,eax
   140016caa:	xchg   esi,eax
   140016cab:	dec    ecx
   140016cad:	cwde   
   140016cae:	cwde   
   140016caf:	dec    ebx
   140016cb1:	cdq    
   140016cb2:	cdq    
   140016cb3:	jmp    FWORD PTR [rcx]
   140016cb5:	sub    DWORD PTR [rcx],ebp
   140016cb7:	in     al,dx
   140016cb8:	add    BYTE PTR [rax],al
   140016cba:	add    BYTE PTR [rdi+0x0],dh
   140016cbd:	add    BYTE PTR [rax],al
   140016cbf:	and    eax,DWORD PTR [rax]
	...
   140016d01:	add    BYTE PTR [rax],al
   140016d03:	add    BYTE PTR [rdi],ch
   140016d05:	(bad)  
   140016d06:	(bad)  
   140016d07:	mov    WORD PTR [rsi-0x54007172],cs
   140016d0d:	stos   DWORD PTR es:[rdi],eax
   140016d0e:	stos   DWORD PTR es:[rdi],eax
   140016d0f:	jmp    FWORD PTR [rdx-0x60005556]
   140016d15:	mov    ecx,DWORD PTR [rbx-0x7d7d6101]
   140016d1b:	dec    eax
   140016d1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016d1e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016d1f:	(bad)  
   140016d20:	dec    ecx
   140016d22:	leave  
   140016d23:	(bad)  
   140016d24:	inc    ebp
   140016d26:	(bad)  
   140016d29:	ret    0xffc2
   140016d2c:	inc    eax
   140016d2e:	sar    bh,0xff
   140016d31:	mov    ebp,0xbaffffbd
   140016d36:	mov    edx,0xb7b7ffff
   140016d3b:	(bad)  
   140016d3c:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   140016d43:	(bad)  
   140016d44:	jmp    FWORD PTR [rbp-0x54000053]
   140016d4a:	stos   DWORD PTR es:[rdi],eax
   140016d4b:	(bad)  
   140016d4c:	jmp    FWORD PTR [rax-0x5a000058]
   140016d52:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016d53:	(bad)  
   140016d54:	std    
   140016d55:	lods   al,BYTE PTR ds:[rsi]
   140016d56:	lods   al,BYTE PTR ds:[rsi]
   140016d57:	(bad)  
   140016d58:	sti    
   140016d59:	rol    al,0xff
   140016d5c:	sti    
   140016d5d:	(bad)  
   140016d5e:	(bad)  
   140016d5f:	(bad)  
   140016d60:	sti    
   140016d61:	out    dx,al
   140016d62:	out    dx,al
   140016d63:	push   rbx
   140016d65:	(bad)  
   140016d66:	(bad)  
   140016d67:	(bad)  
   140016d68:	ffreep st(4)
   140016d6a:	(bad)  
   140016d6b:	inc    edi
   140016d6d:	xchg   esi,eax
   140016d6e:	xchg   esi,eax
   140016d6f:	dec    ecx
   140016d71:	cwde   
   140016d72:	cwde   
   140016d73:	jmp    FWORD PTR [rcx]
   140016d75:	sub    DWORD PTR [rcx],ebp
   140016d77:	in     al,dx
   140016d78:	add    BYTE PTR [rax],al
   140016d7a:	add    BYTE PTR [rdi+0x0],dh
   140016d7d:	add    BYTE PTR [rax],al
   140016d7f:	and    eax,DWORD PTR [rax]
	...
   140016dc1:	add    BYTE PTR [rax],al
   140016dc3:	add    BYTE PTR [rdi],ch
   140016dc5:	(bad)  
   140016dc6:	(bad)  
   140016dc7:	mov    WORD PTR [rax-0x52006f70],ss
   140016dcd:	lods   eax,DWORD PTR ds:[rsi]
   140016dce:	lods   eax,DWORD PTR ds:[rsi]
   140016dcf:	jmp    FWORD PTR [rbx-0x61005455]
   140016dd5:	mov    ecx,DWORD PTR [rbx-0x7e7e6301]
   140016ddb:	dec    esi
   140016ddd:	test   al,0xa8
   140016ddf:	(bad)  
   140016de0:	dec    ebx
   140016de2:	retf   
   140016de3:	(bad)  
   140016de4:	dec    ecx
   140016de6:	leave  
   140016de7:	(bad)  
   140016de8:	inc    ebp
   140016dea:	(bad)  
   140016ded:	ret    0xffc2
   140016df0:	inc    eax
   140016df2:	sar    bh,0xff
   140016df5:	mov    ebp,0xbaffffbd
   140016dfa:	mov    edx,0xb7b7ffff
   140016dff:	(bad)  
   140016e00:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   140016e07:	(bad)  
   140016e08:	jmp    FWORD PTR [rbp-0x54000053]
   140016e0e:	stos   DWORD PTR es:[rdi],eax
   140016e0f:	(bad)  
   140016e10:	jmp    FWORD PTR [rax-0x5a000058]
   140016e16:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016e17:	(bad)  
   140016e18:	jmp    QWORD PTR [rdx-0x5f00005e]
   140016e1e:	movabs al,ds:0xbebefdff9c9cffff
   140016e27:	(bad)  
   140016e28:	out    dx,eax
   140016e29:	in     al,0xe4
   140016e2b:	inc    ebp
   140016e2d:	xchg   ebp,eax
   140016e2e:	xchg   ebp,eax
   140016e2f:	inc    edi
   140016e31:	xchg   esi,eax
   140016e32:	xchg   esi,eax
   140016e33:	jmp    FWORD PTR [rcx]
   140016e35:	sub    DWORD PTR [rcx],ebp
   140016e37:	in     al,dx
   140016e38:	add    BYTE PTR [rax],al
   140016e3a:	add    BYTE PTR [rdi+0x0],dh
   140016e3d:	add    BYTE PTR [rax],al
   140016e3f:	and    eax,DWORD PTR [rax]
	...
   140016e81:	add    BYTE PTR [rax],al
   140016e83:	add    BYTE PTR [rsi],ch
   140016e85:	cs cs (bad) 
   140016e88:	xchg   ecx,eax
   140016e89:	xchg   ecx,eax
   140016e8a:	xchg   ecx,eax
   140016e8b:	jmp    FWORD PTR [rdi-0x52005051]
   140016e91:	lods   eax,DWORD PTR ds:[rsi]
   140016e92:	lods   eax,DWORD PTR ds:[rsi]
   140016e93:	call   FWORD PTR [rcx-0x65007d7e]
   140016e99:	add    BYTE PTR [rax-0x56563101],0xff
   140016ea0:	dec    esi
   140016ea2:	(bad)  
   140016ea3:	(bad)  
   140016ea4:	dec    ebx
   140016ea6:	retf   
   140016ea7:	(bad)  
   140016ea8:	dec    ecx
   140016eaa:	leave  
   140016eab:	(bad)  
   140016eac:	inc    ebp
   140016eae:	(bad)  
   140016eb1:	ret    0xffc2
   140016eb4:	inc    eax
   140016eb6:	sar    bh,0xff
   140016eb9:	mov    ebp,0xbaffffbd
   140016ebe:	mov    edx,0xb7b7ffff
   140016ec3:	(bad)  
   140016ec4:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   140016ecb:	(bad)  
   140016ecc:	jmp    FWORD PTR [rbp-0x54000053]
   140016ed2:	stos   DWORD PTR es:[rdi],eax
   140016ed3:	(bad)  
   140016ed4:	jmp    FWORD PTR [rax-0x5a000058]
   140016eda:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016edb:	(bad)  
   140016edc:	jmp    QWORD PTR [rdx-0x5f00005e]
   140016ee2:	movabs al,ds:0xe1e1ecffb9b9fdff
   140016eeb:	inc    ebx
   140016eed:	xchg   ebp,eax
   140016eee:	xchg   ebp,eax
   140016eef:	inc    ebp
   140016ef1:	xchg   ebp,eax
   140016ef2:	xchg   ebp,eax
   140016ef3:	jmp    FWORD PTR [rcx]
   140016ef5:	sub    DWORD PTR [rcx],ebp
   140016ef7:	jmp    0x140016ef9
   140016ef9:	add    BYTE PTR [rax],al
   140016efb:	jno    0x140016efd
   140016efd:	add    BYTE PTR [rax],al
   140016eff:	and    BYTE PTR [rax],al
	...
   140016f41:	add    BYTE PTR [rax],al
   140016f43:	add    BYTE PTR [rax],dh
   140016f45:	xor    BYTE PTR [rax],dh
   140016f47:	mov    edx,0xffa2a2a2
   140016f4c:	mov    al,0xb0
   140016f4e:	mov    al,0xff
   140016f50:	scas   eax,DWORD PTR es:[rdi]
   140016f51:	scas   eax,DWORD PTR es:[rdi]
   140016f52:	scas   eax,DWORD PTR es:[rdi]
   140016f53:	call   QWORD PTR [rsi-0x67008182]
   140016f59:	jg     0x140016fda
   140016f5b:	dec    esp
   140016f5d:	test   eax,0xd1ffffa9
   140016f62:	sar    edi,1
   140016f64:	dec    esi
   140016f66:	(bad)  
   140016f67:	(bad)  
   140016f68:	dec    ebx
   140016f6a:	retf   
   140016f6b:	(bad)  
   140016f6c:	dec    ecx
   140016f6e:	leave  
   140016f6f:	(bad)  
   140016f70:	inc    ebp
   140016f72:	(bad)  
   140016f75:	ret    0xffc2
   140016f78:	inc    eax
   140016f7a:	sar    bh,0xff
   140016f7d:	mov    ebp,0xbaffffbd
   140016f82:	mov    edx,0xb7b7ffff
   140016f87:	(bad)  
   140016f88:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   140016f8f:	(bad)  
   140016f90:	jmp    FWORD PTR [rbp-0x54000053]
   140016f96:	stos   DWORD PTR es:[rdi],eax
   140016f97:	(bad)  
   140016f98:	jmp    FWORD PTR [rax-0x5a000058]
   140016f9e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016f9f:	(bad)  
   140016fa0:	jmp    QWORD PTR [rdx-0x3505005e]
   140016fa6:	retf   0xdbff
   140016fa9:	(bad)  
   140016faa:	(bad)  
   140016fab:	inc    ecx
   140016fad:	xchg   esp,eax
   140016fae:	xchg   esp,eax
   140016faf:	inc    ebx
   140016fb1:	xchg   ebp,eax
   140016fb2:	xchg   ebp,eax
   140016fb3:	jmp    FWORD PTR [rdx]
   140016fb5:	sub    ch,BYTE PTR [rdx]
   140016fb7:	(bad)  
   140016fb8:	add    BYTE PTR [rax],al
   140016fba:	add    BYTE PTR [rbp+0x0],ah
   140016fbd:	add    BYTE PTR [rax],al
   140016fbf:	sbb    al,BYTE PTR [rax]
	...
   140017001:	add    BYTE PTR [rax],al
   140017003:	add    BYTE PTR [rcx],dh
   140017005:	xor    DWORD PTR [rcx],esi
   140017007:	enter  0xb4b4,0xb4
   14001700b:	push   QWORD PTR [rdx-0x4f004d4e]
   140017011:	mov    al,0xb0
   140017013:	call   QWORD PTR [rbp+rdi*2+0x7e96ff7d]
   14001701a:	jle    0x14001701b
   14001701c:	shl    BYTE PTR [rdx-0x2b00004e],1
   140017022:	(bad)  
   140017023:	(bad)  
   140017024:	call   rcx
   140017026:	sar    edi,1
   140017028:	dec    esi
   14001702a:	(bad)  
   14001702b:	(bad)  
   14001702c:	dec    ebx
   14001702e:	retf   
   14001702f:	(bad)  
   140017030:	dec    ecx
   140017032:	leave  
   140017033:	(bad)  
   140017034:	inc    ebp
   140017036:	(bad)  
   140017039:	ret    0xffc2
   14001703c:	inc    eax
   14001703e:	sar    bh,0xff
   140017041:	mov    ebp,0xbaffffbd
   140017046:	mov    edx,0xb7b7ffff
   14001704b:	(bad)  
   14001704c:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   140017053:	(bad)  
   140017054:	jmp    FWORD PTR [rbp-0x54000053]
   14001705a:	stos   DWORD PTR es:[rdi],eax
   14001705b:	(bad)  
   14001705c:	jmp    FWORD PTR [rax-0x5a000058]
   140017062:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017063:	(bad)  
   140017064:	clc    
   140017065:	leave  
   140017066:	leave  
   140017067:	(bad)  
   140017068:	fadd   st,st(2)
   14001706a:	ret    0xbfff
   14001706d:	xchg   edx,eax
   14001706e:	xchg   edx,eax
   14001706f:	call   FWORD PTR [rbp+0x1fff7c7c]
   140017075:	(bad)  
   140017076:	(bad)  
   140017077:	rol    DWORD PTR [rax],cl
   140017079:	add    BYTE PTR [rax],al
   14001707b:	pop    rdi
   14001707c:	add    BYTE PTR [rax],al
   14001707e:	add    BYTE PTR [rax],bl
	...
   1400170c4:	xor    DWORD PTR [rcx],esi
   1400170c6:	xor    eax,ecx
   1400170c8:	mov    dh,0xb6
   1400170ca:	mov    dh,0xff
   1400170cc:	mov    ah,0xb4
   1400170ce:	mov    ah,0xff
   1400170d0:	mov    dl,0xb2
   1400170d2:	mov    dl,0xff
   1400170d4:	xchg   edx,eax
   1400170d5:	jl     0x140017153
   1400170d7:	call   QWORD PTR [rbp+rdi*2-0x3e1e0083]
   1400170de:	sar    edi,0xff
   1400170e1:	xlat   BYTE PTR ds:[rbx]
   1400170e2:	xlat   BYTE PTR ds:[rbx]
   1400170e3:	(bad)  
   1400170e4:	call   rsp
   1400170e6:	(bad)  
   1400170e7:	(bad)  
   1400170e8:	call   rcx
   1400170ea:	sar    edi,1
   1400170ec:	dec    esi
   1400170ee:	(bad)  
   1400170ef:	(bad)  
   1400170f0:	dec    ebx
   1400170f2:	retf   
   1400170f3:	(bad)  
   1400170f4:	dec    ecx
   1400170f6:	leave  
   1400170f7:	(bad)  
   1400170f8:	inc    ebp
   1400170fa:	(bad)  
   1400170fd:	ret    0xffc2
   140017100:	inc    eax
   140017102:	sar    bh,0xff
   140017105:	mov    ebp,0xbaffffbd
   14001710a:	mov    edx,0xb7b7ffff
   14001710f:	(bad)  
   140017110:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   140017117:	(bad)  
   140017118:	jmp    FWORD PTR [rbp-0x54000053]
   14001711e:	stos   DWORD PTR es:[rdi],eax
   14001711f:	(bad)  
   140017120:	jmp    FWORD PTR [rax-0x370a0058]
   140017126:	enter  0xd5ff,0xc0
   14001712a:	sar    bh,0xbd
   14001712d:	xchg   ecx,eax
   14001712e:	xchg   ecx,eax
   14001712f:	call   FWORD PTR [rdx+rdi*2+0x1f1fff7a]
   140017136:	(bad)  
   140017137:	rol    DWORD PTR [rax],cl
   140017139:	add    BYTE PTR [rax],al
   14001713b:	pop    rdi
   14001713c:	add    BYTE PTR [rax],al
   14001713e:	add    BYTE PTR [rax],bl
	...
   140017184:	xor    BYTE PTR [rax],dh
   140017186:	xor    cl,cl
   140017188:	mov    eax,0xb6ffb8b8
   14001718d:	mov    dh,0xb6
   14001718f:	push   QWORD PTR [rsp+rsi*4+0x7b90ffb4]
   140017196:	jnp    0x140017197
   140017198:	xchg   edx,eax
   140017199:	jl     0x140017217
   14001719b:	jmp    rsp
   14001719d:	(bad)  
   14001719e:	(bad)  
   14001719f:	(bad)  
   1400171a0:	(bad)  
   1400171a1:	fcmovu st,st(2)
   1400171a3:	(bad)  
   1400171a4:	call   rdi
   1400171a6:	xlat   BYTE PTR ds:[rbx]
   1400171a7:	(bad)  
   1400171a8:	call   rsp
   1400171aa:	(bad)  
   1400171ab:	(bad)  
   1400171ac:	call   rcx
   1400171ae:	sar    edi,1
   1400171b0:	dec    esi
   1400171b2:	(bad)  
   1400171b3:	(bad)  
   1400171b4:	dec    ebx
   1400171b6:	retf   
   1400171b7:	(bad)  
   1400171b8:	dec    ecx
   1400171ba:	leave  
   1400171bb:	(bad)  
   1400171bc:	inc    ebp
   1400171be:	(bad)  
   1400171c1:	ret    0xffc2
   1400171c4:	inc    eax
   1400171c6:	sar    bh,0xff
   1400171c9:	mov    ebp,0xbaffffbd
   1400171ce:	mov    edx,0xb7b7ffff
   1400171d3:	(bad)  
   1400171d4:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   1400171db:	(bad)  
   1400171dc:	jmp    FWORD PTR [rbp-0x54000053]
   1400171e2:	stos   DWORD PTR es:[rdi],eax
   1400171e3:	push   rsp
   1400171e5:	leave  
   1400171e6:	leave  
   1400171e7:	call   rdx
   1400171e9:	mov    esi,0x91bbffbe
   1400171ee:	xchg   ecx,eax
   1400171ef:	call   FWORD PTR [rdx+0x1fff7a7a]
   1400171f5:	(bad)  
   1400171f6:	(bad)  
   1400171f7:	rol    DWORD PTR [rax],cl
   1400171f9:	add    BYTE PTR [rax],al
   1400171fb:	pop    rdi
   1400171fc:	add    BYTE PTR [rax],al
   1400171fe:	add    BYTE PTR [rax],bl
	...
   140017244:	xor    BYTE PTR [rax],dh
   140017246:	xor    dl,cl
   140017248:	mov    ecx,0xb8ffb9b9
   14001724d:	mov    eax,0xa7acffb8
   140017252:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017253:	dec    DWORD PTR [rsi-0x6f008586]
   140017259:	jnp    0x1400172d6
   14001725b:	jmp    rsp
   14001725d:	mov    dh,0xff
   140017260:	(bad)  
   140017261:	fstp   st(5)
   140017263:	(bad)  
   140017264:	(bad)  
   140017265:	fcmovu st,st(2)
   140017267:	(bad)  
   140017268:	call   rdi
   14001726a:	xlat   BYTE PTR ds:[rbx]
   14001726b:	(bad)  
   14001726c:	call   rsp
   14001726e:	(bad)  
   14001726f:	(bad)  
   140017270:	call   rcx
   140017272:	sar    edi,1
   140017274:	dec    esi
   140017276:	(bad)  
   140017277:	(bad)  
   140017278:	dec    ebx
   14001727a:	retf   
   14001727b:	(bad)  
   14001727c:	dec    ecx
   14001727e:	leave  
   14001727f:	(bad)  
   140017280:	inc    ebp
   140017282:	(bad)  
   140017285:	ret    0xffc2
   140017288:	inc    eax
   14001728a:	sar    bh,0xff
   14001728d:	mov    ebp,0xbaffffbd
   140017292:	mov    edx,0xb7b7ffff
   140017297:	(bad)  
   140017298:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14001729f:	(bad)  
   1400172a0:	jmp    FWORD PTR [rbp-0x370d0053]
   1400172a6:	enter  0xcfff,0xba
   1400172aa:	mov    edx,0x9090b9ff
   1400172af:	call   FWORD PTR [rcx+0x1fff7979]
   1400172b5:	(bad)  
   1400172b6:	(bad)  
   1400172b7:	rol    DWORD PTR [rax],cl
   1400172b9:	add    BYTE PTR [rax],al
   1400172bb:	pop    rdi
   1400172bc:	add    BYTE PTR [rax],al
   1400172be:	add    BYTE PTR [rax],bl
	...
   140017304:	push   rbp
   140017305:	push   rbp
   140017306:	push   rbp
   140017307:	(bad)  
   140017308:	mov    ebx,0xb9ffbbbb
   14001730d:	mov    ecx,0xa8adffb9
   140017312:	test   al,0xff
   140017314:	mov    WORD PTR [rcx+0x79],?
   140017317:	dec    DWORD PTR [rsi-0x1c008586]
   14001731d:	enter  0xffc8,0xff
   140017321:	(bad)  
   140017323:	(bad)  
   140017324:	(bad)  
   140017325:	fstp   st(5)
   140017327:	(bad)  
   140017328:	(bad)  
   140017329:	fcmovu st,st(2)
   14001732b:	(bad)  
   14001732c:	call   rdi
   14001732e:	xlat   BYTE PTR ds:[rbx]
   14001732f:	(bad)  
   140017330:	call   rsp
   140017332:	(bad)  
   140017333:	(bad)  
   140017334:	call   rcx
   140017336:	sar    edi,1
   140017338:	dec    esi
   14001733a:	(bad)  
   14001733b:	(bad)  
   14001733c:	dec    ebx
   14001733e:	retf   
   14001733f:	(bad)  
   140017340:	dec    ecx
   140017342:	leave  
   140017343:	(bad)  
   140017344:	inc    ebp
   140017346:	(bad)  
   140017349:	ret    0xffc2
   14001734c:	inc    eax
   14001734e:	sar    bh,0xff
   140017351:	mov    ebp,0xbaffffbd
   140017356:	mov    edx,0xb7b7ffff
   14001735b:	(bad)  
   14001735c:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   140017363:	push   rax
   140017365:	mov    edi,0xb8b8ccff
   14001736b:	push   QWORD PTR [rdi-0x68007172]
   140017371:	jns    0x1400173ec
   140017373:	call   FWORD PTR [rdi]
   140017375:	(bad)  
   140017376:	(bad)  
   140017377:	rol    DWORD PTR [rax],cl
   140017379:	add    BYTE PTR [rax],al
   14001737b:	pop    rdi
   14001737c:	add    BYTE PTR [rax],al
   14001737e:	add    BYTE PTR [rax],bl
	...
   1400173c4:	push   rsi
   1400173c5:	push   rsi
   1400173c6:	push   rsi
   1400173c7:	(bad)  
   1400173c8:	mov    esp,0xbbffbcbc
   1400173cd:	mov    ebx,0xa9adffbb
   1400173d2:	test   eax,0x78788aff
   1400173d7:	dec    DWORD PTR [rcx+rdi*2-0x26100087]
   1400173de:	fcos   
   1400173e0:	jmp    rdx
   1400173e2:	loop   0x1400173e3
   1400173e4:	(bad)  
   1400173e5:	(bad)  
   1400173e7:	(bad)  
   1400173e8:	(bad)  
   1400173e9:	fstp   st(5)
   1400173eb:	(bad)  
   1400173ec:	(bad)  
   1400173ed:	fcmovu st,st(2)
   1400173ef:	(bad)  
   1400173f0:	call   rdi
   1400173f2:	xlat   BYTE PTR ds:[rbx]
   1400173f3:	(bad)  
   1400173f4:	call   rsp
   1400173f6:	(bad)  
   1400173f7:	(bad)  
   1400173f8:	call   rcx
   1400173fa:	sar    edi,1
   1400173fc:	dec    esi
   1400173fe:	(bad)  
   1400173ff:	(bad)  
   140017400:	dec    ebx
   140017402:	retf   
   140017403:	(bad)  
   140017404:	dec    ecx
   140017406:	leave  
   140017407:	(bad)  
   140017408:	inc    ebp
   14001740a:	(bad)  
   14001740d:	ret    
   14001740e:	ret    
   14001740f:	(bad)  
   140017410:	inc    eax
   140017412:	sar    bh,0xff
   140017415:	mov    ebp,0xbaffffbd
   14001741a:	mov    edx,0xb7b7ffff
   14001741f:	(bad)  
   140017420:	push   QWORD PTR [rsp+rsi*4-0x38381101]
   140017427:	dec    edx
   140017429:	mov    dh,0xb6
   14001742b:	push   QWORD PTR [rsi-0x69007172]
   140017431:	ja     0x1400174aa
   140017433:	call   FWORD PTR [rdi]
   140017435:	(bad)  
   140017436:	(bad)  
   140017437:	rol    DWORD PTR [rax],cl
   140017439:	add    BYTE PTR [rax],al
   14001743b:	pop    rdi
   14001743c:	add    BYTE PTR [rax],al
   14001743e:	add    BYTE PTR [rax],bl
	...
   140017480:	add    BYTE PTR [rax],al
   140017482:	add    BYTE PTR [rcx],al
   140017484:	push   rsi
   140017485:	push   rsi
   140017486:	push   rsi
   140017487:	(bad)  
   140017488:	mov    esi,0xbcffbebe
   14001748d:	mov    esp,0xaaaeffbc
   140017492:	stos   BYTE PTR es:[rdi],al
   140017493:	dec    DWORD PTR [rax-0x75008889]
   140017499:	js     0x140017513
   14001749b:	(bad)  
   14001749c:	(bad)  
   14001749d:	jmp    0x12701748b
   1400174a2:	out    0xff,al
   1400174a4:	jmp    rdx
   1400174a6:	loop   0x1400174a7
   1400174a8:	(bad)  
   1400174a9:	(bad)  
   1400174ab:	(bad)  
   1400174ac:	(bad)  
   1400174ad:	fstp   st(5)
   1400174af:	(bad)  
   1400174b0:	(bad)  
   1400174b1:	fcmovu st,st(2)
   1400174b3:	(bad)  
   1400174b4:	call   rdi
   1400174b6:	xlat   BYTE PTR ds:[rbx]
   1400174b7:	(bad)  
   1400174b8:	call   rsp
   1400174ba:	(bad)  
   1400174bb:	(bad)  
   1400174bc:	call   rcx
   1400174be:	sar    edi,1
   1400174c0:	dec    esi
   1400174c2:	(bad)  
   1400174c3:	(bad)  
   1400174c4:	dec    ebx
   1400174c6:	retf   
   1400174c7:	(bad)  
   1400174c8:	dec    ecx
   1400174ca:	leave  
   1400174cb:	(bad)  
   1400174cc:	inc    esi
   1400174ce:	(bad)  
   1400174cf:	(bad)  
   1400174d0:	inc    ebx
   1400174d2:	ret    
   1400174d3:	(bad)  
   1400174d4:	inc    eax
   1400174d6:	sar    bh,0xff
   1400174d9:	mov    ebp,0xbaffffbd
   1400174de:	mov    edx,0xb7b7ffff
   1400174e3:	jmp    rsp
   1400174e5:	int    0xcd
   1400174e7:	inc    esi
   1400174e9:	mov    ah,0xb4
   1400174eb:	push   QWORD PTR [rbx-0x6a007273]
   1400174f1:	ja     0x14001756a
   1400174f3:	call   FWORD PTR [rdi]
   1400174f5:	(bad)  
   1400174f6:	(bad)  
   1400174f7:	rol    DWORD PTR [rax],cl
   1400174f9:	add    BYTE PTR [rax],al
   1400174fb:	pop    rdi
   1400174fc:	add    BYTE PTR [rax],al
   1400174fe:	add    BYTE PTR [rax],bl
	...
   140017540:	add    BYTE PTR [rax],al
   140017542:	add    BYTE PTR [rsi],al
   140017544:	push   rdi
   140017545:	push   rdi
   140017546:	push   rdi
   140017547:	inc    eax
   140017549:	rol    al,0xff
   14001754c:	mov    esi,0xabffbebe
   140017551:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017552:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017553:	inc    DWORD PTR [rsi-0x7700898a]
   140017559:	ja     0x1400175d2
   14001755b:	(bad)  
   14001755c:	(bad)  
   14001755d:	in     al,dx
   14001755e:	in     al,dx
   14001755f:	(bad)  
   140017560:	(bad)  
   140017561:	jmp    0x12701754f
   140017566:	out    0xff,al
   140017568:	jmp    rdx
   14001756a:	loop   0x14001756b
   14001756c:	(bad)  
   14001756d:	(bad)  
   14001756f:	(bad)  
   140017570:	(bad)  
   140017571:	fstp   st(5)
   140017573:	(bad)  
   140017574:	stc    
   140017575:	iret   
   140017576:	int3   
   140017577:	(bad)  
   140017578:	fbld   TBYTE PTR [rbx-0x5419006d]
   14001757e:	sahf   
   14001757f:	jmp    rsi
   140017581:	stos   BYTE PTR es:[rdi],al
   140017582:	popf   
   140017583:	(bad)  
   140017584:	stc    
   140017585:	(bad)  
   140017589:	retf   
   14001758a:	retf   
   14001758b:	(bad)  
   14001758c:	dec    ecx
   14001758e:	leave  
   14001758f:	(bad)  
   140017590:	inc    esi
   140017592:	(bad)  
   140017593:	(bad)  
   140017594:	inc    ebx
   140017596:	ret    
   140017597:	(bad)  
   140017598:	inc    eax
   14001759a:	sar    bh,0xff
   14001759d:	mov    ebp,0xbaffffbd
   1400175a2:	mov    edx,0xcecee0ff
   1400175a7:	(bad)  
   1400175a8:	mov    ecx,0xb1ff9e9e
   1400175ad:	mov    WORD PTR [rdi+rdi*8-0x89896d],cs
   1400175b4:	(bad)  
   1400175b5:	(bad)  
   1400175b6:	(bad)  
   1400175b7:	rol    DWORD PTR [rax],cl
   1400175b9:	add    BYTE PTR [rax],al
   1400175bb:	pop    rdi
   1400175bc:	add    BYTE PTR [rax],al
   1400175be:	add    BYTE PTR [rax],bl
	...
   140017600:	sub    BYTE PTR [rax],ch
   140017602:	sub    BYTE PTR [rcx],ch
   140017604:	(bad)  
   140017605:	(bad)  
   140017606:	(bad)  
   140017607:	inc    edx
   140017609:	ret    0xffc2
   14001760c:	rol    al,0xc0
   14001760f:	jmp    QWORD PTR [rcx-0x7b006566]
   140017615:	jne    0x14001768c
   140017617:	inc    DWORD PTR [rsi-0x898a]
   14001761d:	out    dx,eax
   14001761e:	out    dx,eax
   14001761f:	(bad)  
   140017620:	(bad)  
   140017621:	in     al,dx
   140017622:	in     al,dx
   140017623:	(bad)  
   140017624:	(bad)  
   140017625:	jmp    0x127017613
   14001762a:	out    0xff,al
   14001762c:	jmp    rdx
   14001762e:	loop   0x14001762f
   140017630:	jmp    rax
   140017632:	loopne 0x140017633
   140017634:	mov    ecx,0x83ff4568
   140017639:	push   rax
   14001763a:	ss (bad) 
   14001763c:	mov    edx,0xabff2160
   140017641:	rex.WB (bad) 
   140017643:	jmp    FWORD PTR [rcx-0x5c00f5ba]
   140017649:	ds add bh,bh
   14001764c:	cdq    
   14001764d:	xor    eax,DWORD PTR [rax]
   14001764f:	jmp    FWORD PTR [rdi+rcx*2+0x7cccff25]
   140017656:	movsxd edi,edi
   140017658:	stc    
   140017659:	mov    edx,0xc0ffffb6
   14001765e:	sar    bh,0xff
   140017661:	mov    ebp,0xccddffbd
   140017666:	int3   
   140017667:	push   QWORD PTR [rdi-0x50006364]
   14001766d:	mov    ecx,DWORD PTR [rbx+0x767692ff]
   140017673:	call   FWORD PTR [rdi]
   140017675:	(bad)  
   140017676:	(bad)  
   140017677:	rol    DWORD PTR [rax],cl
   140017679:	add    BYTE PTR [rax],al
   14001767b:	pop    rdi
   14001767c:	add    BYTE PTR [rax],al
   14001767e:	add    BYTE PTR [rax],bl
	...
   1400176c0:	sub    eax,0x7c492d2d
   1400176c5:	jl     0x140017743
   1400176c7:	inc    esp
   1400176c9:	(bad)  
   1400176ca:	(bad)  
   1400176cb:	inc    edx
   1400176cd:	ret    0xffc2
   1400176d0:	movabs eax,ds:0x84ff747483ff9a9a
   1400176d9:	jne    0x140017750
   1400176db:	(bad)  
   1400176dc:	push   rdx
   1400176de:	repnz (bad) 
   1400176e0:	(bad)  
   1400176e1:	out    dx,eax
   1400176e2:	out    dx,eax
   1400176e3:	(bad)  
   1400176e4:	(bad)  
   1400176e5:	in     al,dx
   1400176e6:	in     al,dx
   1400176e7:	(bad)  
   1400176e8:	(bad)  
   1400176e9:	jmp    0x1270176d7
   1400176ee:	out    0xff,al
   1400176f0:	jmp    rdx
   1400176f2:	loop   0x1400176f3
   1400176f4:	mov    edi,0xa8ff5574
   1400176f9:	push   0xffffffffb5f4ff44
   1400176fe:	js     0x1400176ff
   140017700:	in     al,dx
   140017701:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017702:	(bad)  
   140017703:	jmp    rbx
   140017705:	xchg   esp,eax
   140017706:	rex.RB (bad) 
   140017708:	fild   DWORD PTR [rbp-0x7c2500d3]
   14001770e:	sub    edi,edi
   140017710:	iret   
   140017711:	jo     0x140017726
   140017713:	push   QWORD PTR [rbx-0x5900ffb3]
   140017719:	rex.X or al,0xff
   14001771c:	mov    edi,0xf2ff4969
   140017721:	scas   al,BYTE PTR es:[rdi]
   140017722:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017723:	(bad)  
   140017724:	fcmove st,st(1)
   140017726:	leave  
   140017727:	push   QWORD PTR [rbp-0x52006465]
   14001772d:	mov    cl,BYTE PTR [rdx+0x757590ff]
   140017733:	call   FWORD PTR [rdi]
   140017735:	(bad)  
   140017736:	(bad)  
   140017737:	rol    DWORD PTR [rax],cl
   140017739:	add    BYTE PTR [rax],al
   14001773b:	pop    rsp
   14001773c:	add    BYTE PTR [rax],al
   14001773e:	add    BYTE PTR [rsi],dl
	...
   140017780:	sub    eax,0x7d492d2d
   140017785:	jge    0x140017804
   140017787:	inc    ebp
   140017789:	(bad)
   14001778c:	(bad)  
   14001778d:	(bad)  
   14001778e:	(bad)  
   14001778f:	jmp    QWORD PTR [rax-0x7f006566]
   140017795:	jae    0x14001780a
   140017797:	call   FWORD PTR [rax+rdx*4-0xa000070]
   14001779e:	cmc    
   14001779f:	(bad)  
   1400177a0:	push   rdx
   1400177a2:	repnz (bad) 
   1400177a4:	(bad)  
   1400177a5:	out    dx,eax
   1400177a6:	out    dx,eax
   1400177a7:	(bad)  
   1400177a8:	(bad)  
   1400177a9:	in     al,dx
   1400177aa:	in     al,dx
   1400177ab:	(bad)  
   1400177ac:	(bad)  
   1400177ad:	jmp    0x12701779b
   1400177b2:	out    0xff,al
   1400177b4:	jmp    rdx
   1400177b6:	loop   0x1400177b7
   1400177b8:	mov    edi,0xbfff5575
   1400177bd:	ins    BYTE PTR es:[rdi],dx
   1400177be:	cmp    edi,edi
   1400177c0:	cld    
   1400177c1:	(bad)  
   1400177c2:	xchg   ecx,eax
   1400177c3:	push   rsi
   1400177c5:	mov    edx,0xb3f1ff7f
   1400177ca:	jae    0x1400177cb
   1400177cc:	stc    
   1400177cd:	ret    0xff8a
   1400177d0:	in     al,0x96
   1400177d2:	rex.RXB call r12
   1400177d5:	jbe    0x1400177ef
   1400177d7:	dec    edi
   1400177d9:	ins    DWORD PTR es:[rdi],dx
   1400177da:	or     bh,bh
   1400177dc:	mov    ecx,0xa3ff0053
   1400177e1:	cmp    eax,0x62acff00
   1400177e6:	(bad)  
   1400177e7:	jmp    FWORD PTR [rdx-0x53009085]
   1400177ed:	mov    DWORD PTR [rcx+0x74748fff],ecx
   1400177f3:	call   FWORD PTR [rdi]
   1400177f5:	(bad)  
   1400177f6:	(bad)  
   1400177f7:	(bad)  
   1400177f8:	add    BYTE PTR [rax],al
   1400177fa:	add    BYTE PTR [rcx+0x0],ch
   1400177fd:	add    BYTE PTR [rax],al
   1400177ff:	add    BYTE PTR cs:[rax],al
   140017802:	add    BYTE PTR [rdi],bl
   140017804:	add    BYTE PTR [rax],al
   140017806:	add    BYTE PTR [rax+rax*1],bl
   140017809:	add    BYTE PTR [rax],al
   14001780b:	sldt   WORD PTR [rax]
   14001780e:	add    BYTE PTR [rax+rax*1],al
	...
   14001783d:	add    BYTE PTR [rax],al
   14001783f:	add    BYTE PTR [rsp+rbp*1],ch
   140017842:	sub    al,0x4a
   140017844:	jle    0x1400178c4
   140017846:	jle    0x140017847
   140017848:	mov    edi,0xc5c5ffc7
   14001784e:	(bad)  
   140017851:	fwait
   140017852:	fwait
   140017853:	(bad)  
   140017854:	jle    0x1400178c8
   140017856:	jb     0x140017857
   140017858:	movabs al,ds:0xfffff7f7ffff9494
   140017861:	cmc    
   140017862:	cmc    
   140017863:	(bad)  
   140017864:	push   rdx
   140017866:	repnz (bad) 
   140017868:	(bad)  
   140017869:	out    dx,eax
   14001786a:	out    dx,eax
   14001786b:	(bad)  
   14001786c:	(bad)  
   14001786d:	in     al,dx
   14001786e:	in     al,dx
   14001786f:	(bad)  
   140017870:	(bad)  
   140017871:	jmp    0x12701785f
   140017876:	out    0xff,al
   140017878:	jmp    rdx
   14001787a:	loop   0x14001787b
   14001787c:	mov    edi,0xbfff5575
   140017881:	jae    0x1400178c3
   140017883:	(bad)  
   140017884:	call   rdi
   140017886:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017887:	(bad)  
   140017888:	jmp    rdx
   14001788a:	scas   eax,DWORD PTR es:[rdi]
   14001788b:	(bad)  
   14001788c:	std    
   14001788d:	fsub   QWORD PTR [rdi+0x69acefff]
   140017893:	(bad)  
   140017894:	call   0x12000cc37
   140017899:	lea    edi,[rcx]
   14001789b:	call   rdi
   14001789d:	jnp    0x1400178be
   14001789f:	call   rcx
   1400178a1:	jo     0x1400178b1
   1400178a3:	(bad)  
   1400178a4:	mov    edi,0xa9ff0059
   1400178a9:	rex.XB add r15b,dil
   1400178ac:	pushf  
   1400178ad:	rex.XB sbb dil,r15b
   1400178b0:	mov    ds,WORD PTR [rcx+0x46]
   1400178b3:	call   QWORD PTR [rdi]
   1400178b5:	(bad)  
   1400178b6:	(bad)  
   1400178b7:	rol    DWORD PTR [rax],1
   1400178b9:	add    BYTE PTR [rax],al
   1400178bb:	xchg   esp,eax
   1400178bc:	add    BYTE PTR [rax],al
   1400178be:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400178c2:	add    BYTE PTR [rsi+0x0],ch
   1400178c5:	add    BYTE PTR [rax],al
   1400178c7:	push   0x4d000000
   1400178cc:	add    BYTE PTR [rax],al
   1400178ce:	add    BYTE PTR [rax+rax*1],ch
   1400178d1:	add    BYTE PTR [rax],al
   1400178d3:	adc    eax,DWORD PTR [rax]
   1400178d5:	add    BYTE PTR [rax],al
   1400178d7:	(bad)  
   1400178d8:	add    BYTE PTR [rax],al
   1400178da:	add    BYTE PTR [rcx],al
	...
   140017900:	sub    ch,BYTE PTR [rdx]
   140017902:	sub    cl,BYTE PTR [rsi+0x7f]
   140017905:	jg     0x140017986
   140017907:	dec    ecx
   140017909:	leave  
   14001790a:	leave  
   14001790b:	inc    edi
   14001790d:	mov    edi,0x909097ff
   140017913:	(bad)  
   140017914:	jl     0x140017987
   140017916:	jno    0x140017917
   140017918:	sahf   
   140017919:	xchg   ebp,eax
   14001791a:	xchg   ebp,eax
   14001791b:	(bad)  
   14001791c:	(bad)  
   14001791d:	cli    
   14001791e:	cli    
   14001791f:	(bad)  
   140017920:	push   rdi
   140017922:	idiv   edi
   140017924:	push   rbp
   140017926:	cmc    
   140017927:	(bad)  
   140017928:	push   rdx
   14001792a:	repnz (bad) 
   14001792c:	(bad)  
   14001792d:	out    dx,eax
   14001792e:	out    dx,eax
   14001792f:	(bad)  
   140017930:	(bad)  
   140017931:	in     al,dx
   140017932:	in     al,dx
   140017933:	(bad)  
   140017934:	(bad)  
   140017935:	jmp    0x127017923
   14001793a:	out    0xff,al
   14001793c:	jmp    rdx
   14001793e:	loop   0x14001793f
   140017940:	int3   
   140017941:	mov    dh,BYTE PTR [rcx-0x1]
   140017944:	lods   al,BYTE PTR ds:[rsi]
   140017945:	push   rbp
   140017946:	and    bh,bh
   140017948:	stc    
   140017949:	in     eax,dx
   14001794a:	mov    edx,0xb6e9ffff
   14001794f:	(bad)  
   140017950:	dec    dh
   140017952:	fwait
   140017953:	(bad)  
   140017954:	stc    
   140017955:	ror    DWORD PTR [rax+0x70b1f1ff],0xff
   14001795c:	(bad)  
   14001795d:	movabs ds:0x80d9ff3e90e1ff5b,al
   140017966:	es call rdx
   140017969:	jno    0x14001797c
   14001796b:	inc    esi
   14001796d:	(bad)  
   14001796e:	add    bh,bh
   140017970:	lods   al,BYTE PTR ds:[rsi]
   140017971:	rex.RX add dil,r15b
   140017974:	mov    ?,WORD PTR [rdx]
   140017976:	add    bh,dh
   140017978:	(bad)  
   14001797a:	add    bh,bl
   14001797c:	je     0x1400179a5
   14001797e:	add    dh,ah
   140017980:	je     0x1400179a9
   140017982:	add    dh,ah
   140017984:	ds adc eax,0xc600
   14001798a:	add    BYTE PTR [rax+rax*1+0x7e0000],bl
   140017991:	add    BYTE PTR [rax],al
   140017993:	push   rdi
   140017994:	add    BYTE PTR [rax],al
   140017996:	add    BYTE PTR [rax+rax*1],dh
   140017999:	add    BYTE PTR [rax],al
   14001799b:	sbb    DWORD PTR [rax],eax
   14001799d:	add    BYTE PTR [rax],al
   14001799f:	or     DWORD PTR [rax],eax
   1400179a1:	add    BYTE PTR [rax],al
   1400179a3:	add    DWORD PTR [rax],eax
	...
   1400179bd:	add    BYTE PTR [rax],al
   1400179bf:	add    BYTE PTR [rsi],ch
   1400179c1:	cs cs jge 0x140017961
   1400179c5:	pushf  
   1400179c6:	pushf  
   1400179c7:	dec    ebx
   1400179c9:	retf   
   1400179ca:	retf   
   1400179cb:	dec    ecx
   1400179cd:	leave  
   1400179ce:	leave  
   1400179cf:	dec    DWORD PTR [rbp+0x7aff8585]
   1400179d5:	jo     0x140017a47
   1400179d7:	call   FWORD PTR [rbp-0x6a6b]
   1400179dd:	(bad)  
   1400179de:	(bad)  
   1400179df:	(bad)  
   1400179e0:	(bad)  
   1400179e1:	cli    
   1400179e2:	cli    
   1400179e3:	(bad)  
   1400179e4:	push   rdi
   1400179e6:	idiv   edi
   1400179e8:	push   rbp
   1400179ea:	cmc    
   1400179eb:	(bad)  
   1400179ec:	push   rdx
   1400179ee:	repnz (bad) 
   1400179f0:	(bad)  
   1400179f1:	out    dx,eax
   1400179f2:	out    dx,eax
   1400179f3:	(bad)  
   1400179f4:	(bad)  
   1400179f5:	in     al,dx
   1400179f6:	in     al,dx
   1400179f7:	(bad)  
   1400179f8:	(bad)  
   1400179f9:	jmp    0x1270179e7
   1400179fe:	out    0xff,al
   140017a00:	jmp    rdx
   140017a02:	loop   0x140017a03
   140017a04:	fstp   DWORD PTR [rdi+0x4da6ff8c]
   140017a0a:	sbb    bh,bh
   140017a0c:	fldcw  WORD PTR [rdi-0x21060084]
   140017a12:	stos   DWORD PTR es:[rdi],eax
   140017a13:	(bad)  
   140017a14:	(bad)  
   140017a15:	fisubr WORD PTR [rbx-0x602d0001]
   140017a1b:	(bad)  
   140017a1c:	cli    
   140017a1d:	ret    
   140017a1e:	mov    edi,?
   140017a20:	hlt    
   140017a21:	mov    ch,0x78
   140017a23:	(bad)  
   140017a24:	in     al,dx
   140017a25:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017a26:	(bad)  
   140017a27:	jmp    rbx
   140017a29:	xchg   esp,eax
   140017a2a:	rex.RB (bad) 
   140017a2c:	fild   DWORD PTR [rbp+0x75d3ff2d]
   140017a32:	adc    eax,0x566caff
   140017a37:	(bad)  
   140017a38:	mov    eax,0xc3ff0755
   140017a3d:	(bad)  
   140017a3e:	or     bh,bh
   140017a40:	ret    0x5c
   140017a43:	jmp    FWORD PTR [rsi+rax*2+0x2e8aff00]
   140017a4a:	add    bh,dh
   140017a4c:	rex.RX (bad) 
   140017a4e:	add    cl,dl
   140017a50:	(bad)  
   140017a51:	add    eax,0xa800
   140017a56:	add    BYTE PTR [rsi+0x61000000],al
   140017a5c:	add    BYTE PTR [rax],al
   140017a5e:	add    BYTE PTR [rip+0x1f000000],bh        # 0x15f017a64
   140017a64:	add    BYTE PTR [rax],al
   140017a66:	add    BYTE PTR [rbx],cl
   140017a68:	add    BYTE PTR [rax],al
   140017a6a:	add    BYTE PTR [rdx],al
	...
   140017a80:	(bad)  
   140017a81:	(bad)  
   140017a82:	(bad)  
   140017a83:	mov    WORD PTR [rdi-0x33005859],fs
   140017a89:	int3   
   140017a8a:	int3   
   140017a8b:	dec    ebx
   140017a8d:	retf   
   140017a8e:	retf   
   140017a8f:	dec    DWORD PTR [rbp+rax*4+0x6f79ff85]
   140017a96:	outs   dx,DWORD PTR ds:[rsi]
   140017a97:	call   FWORD PTR [rsi-0x6869]
   140017a9d:	(bad)  
   140017a9e:	(bad)  
   140017a9f:	(bad)  
   140017aa0:	(bad)  
   140017aa1:	(bad)  
   140017aa2:	(bad)  
   140017aa3:	(bad)  
   140017aa4:	(bad)  
   140017aa5:	cli    
   140017aa6:	cli    
   140017aa7:	(bad)  
   140017aa8:	push   rdi
   140017aaa:	idiv   edi
   140017aac:	push   rbp
   140017aae:	cmc    
   140017aaf:	(bad)  
   140017ab0:	push   rdx
   140017ab2:	repnz (bad) 
   140017ab4:	(bad)  
   140017ab5:	out    dx,eax
   140017ab6:	out    dx,eax
   140017ab7:	(bad)  
   140017ab8:	(bad)  
   140017ab9:	in     al,dx
   140017aba:	in     al,dx
   140017abb:	(bad)  
   140017abc:	(bad)  
   140017abd:	jmp    0x127017aab
   140017ac2:	out    0xff,al
   140017ac4:	jmp    rdx
   140017ac6:	loop   0x140017ac7
   140017ac8:	repnz retf 0xffc4
   140017acc:	(bad)  
   140017acd:	jle    0x140017b30
   140017acf:	jmp    QWORD PTR [rsi-0x3300e5b6]
   140017ad5:	xchg   esp,eax
   140017ad6:	(bad)  
   140017ad7:	push   rdx
   140017ad9:	(bad)  
   140017ada:	movabs ds:0xa1d4ffffaee1ffff,al
   140017ae3:	(bad)  
   140017ae4:	cld    
   140017ae5:	(bad)  
   140017ae6:	xchg   ecx,eax
   140017ae7:	push   rsi
   140017ae9:	mov    edx,0xa9edff7f
   140017aee:	fs jmp rbp
   140017af1:	cdq    
   140017af2:	rex.WR (bad) 
   140017af4:	fimul  WORD PTR [rcx-0x711f00cc]
   140017afa:	cmp    edi,edi
   140017afc:	fadd   QWORD PTR [rsi+0x7dd7ff30]
   140017b02:	and    edi,edi
   140017b04:	shl    DWORD PTR [rax+0xe],1
   140017b07:	inc    esi
   140017b09:	(bad)  
   140017b0a:	add    bh,bh
   140017b0c:	mov    bl,0x4d
   140017b0e:	add    bh,bh
   140017b10:	xchg   ebp,eax
   140017b11:	xor    eax,DWORD PTR [rax]
   140017b13:	sti    
   140017b14:	pop    rcx
   140017b15:	(bad)  
   140017b16:	add    ah,bl
   140017b18:	sbb    al,0x9
   140017b1a:	add    BYTE PTR [rbx-0x71000000],dh
   140017b20:	add    BYTE PTR [rax],al
   140017b22:	add    BYTE PTR [rbx+0x0],ch
   140017b25:	add    BYTE PTR [rax],al
   140017b27:	add    BYTE PTR [rax],r8b
   140017b2a:	add    BYTE PTR [rip+0xe000000],ah        # 0x14e017b30
   140017b30:	add    BYTE PTR [rax],al
   140017b32:	add    BYTE PTR [rbx],al
	...
   140017b40:	(bad)  
   140017b41:	(bad)  
   140017b42:	(bad)  
   140017b43:	mov    WORD PTR [rax-0x31005758],gs
   140017b49:	(bad)  
   140017b4a:	(bad)  
   140017b4b:	dec    esp
   140017b4d:	int3   
   140017b4e:	int3   
   140017b4f:	dec    DWORD PTR [rdx+0x77ff8585]
   140017b55:	outs   dx,BYTE PTR ds:[rsi]
   140017b56:	outs   dx,BYTE PTR ds:[rsi]
   140017b57:	(bad)  
   140017b58:	mov    esp,0xffffb7b7
   140017b5d:	(bad)  
   140017b5e:	(bad)  
   140017b5f:	(bad)  
   140017b60:	(bad)  
   140017b61:	(bad)  
   140017b62:	(bad)  
   140017b63:	(bad)  
   140017b64:	(bad)  
   140017b65:	(bad)  
   140017b66:	(bad)  
   140017b67:	(bad)  
   140017b68:	(bad)  
   140017b69:	cli    
   140017b6a:	cli    
   140017b6b:	(bad)  
   140017b6c:	push   rdi
   140017b6e:	idiv   edi
   140017b70:	push   rbp
   140017b72:	cmc    
   140017b73:	(bad)  
   140017b74:	push   rdx
   140017b76:	repnz (bad) 
   140017b78:	(bad)  
   140017b79:	out    dx,eax
   140017b7a:	out    dx,eax
   140017b7b:	(bad)  
   140017b7c:	(bad)  
   140017b7d:	in     al,dx
   140017b7e:	in     al,dx
   140017b7f:	(bad)  
   140017b80:	(bad)  
   140017b81:	jmp    0x127017b6f
   140017b86:	out    0xff,al
   140017b88:	jmp    rdx
   140017b8a:	loop   0x140017b8b
   140017b8c:	jmp    rax
   140017b8e:	loopne 0x140017b8f
   140017b90:	stc    
   140017b91:	ror    bh,cl
   140017b93:	call   rdx
   140017b95:	xchg   ecx,eax
   140017b96:	jnp    0x140017b97
   140017b98:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017b99:	sbb    rdi,rdi
   140017b9c:	mov    edi,0xecff497c
   140017ba1:	int3   
   140017ba2:	cdq    
   140017ba3:	(bad)  
   140017ba4:	jmp    rbp
   140017ba6:	mov    dl,0xff
   140017ba8:	call   rdi
   140017baa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017bab:	(bad)  
   140017bac:	std    
   140017bad:	retf   
   140017bae:	xchg   edi,eax
   140017baf:	(bad)  
   140017bb0:	clc    
   140017bb1:	mov    ebp,0xaff0ff84
   140017bb6:	outs   dx,BYTE PTR ds:[rsi]
   140017bb7:	(bad)  
   140017bb8:	out    dx,eax
   140017bb9:	lods   al,BYTE PTR ds:[rsi]
   140017bba:	imul   edi,edi,0xff569fe8
   140017bc0:	in     al,0x96
   140017bc2:	rex.RXB (bad) 
   140017bc4:	fimul  WORD PTR [rcx+0x7ed8ff34]
   140017bca:	and    al,0xff
   140017bcc:	shl    DWORD PTR [rbx+0x13],cl
   140017bcf:	dec    edx
   140017bd1:	fs add bh,bh
   140017bd4:	mov    ecx,0x9fff0053
   140017bd9:	cmp    DWORD PTR [rax],eax
   140017bdb:	jmp    FWORD PTR [rdx+0x23]
   140017bde:	add    ch,ah
   140017be0:	(bad)  
   140017be1:	or     eax,0xbc00
   140017be6:	add    BYTE PTR [rbp+0x73000000],dl
   140017bec:	add    BYTE PTR [rax],al
   140017bee:	add    BYTE PTR [rcx+0x0],cl
   140017bf1:	add    BYTE PTR [rax],al
   140017bf3:	and    al,BYTE PTR [rax]
   140017bf5:	add    BYTE PTR [rax],al
   140017bf7:	(bad)  
	...
   140017c00:	cs cs mov gs,WORD PTR cs:[rdx-0x2f005556]
   140017c09:	rcl    al,1
   140017c0b:	dec    esi
   140017c0d:	(bad)  
   140017c0e:	(bad)  
   140017c0f:	dec    DWORD PTR [rcx+0x74ff8585]
   140017c15:	ins    DWORD PTR es:[rdi],dx
   140017c16:	ins    DWORD PTR es:[rdi],dx
   140017c17:	(bad)  
   140017c18:	mov    ebx,0xffffb7b7
   140017c1d:	(bad)  
   140017c1e:	(bad)  
   140017c1f:	(bad)  
   140017c20:	(bad)  
   140017c21:	(bad)  
   140017c22:	(bad)  
   140017c23:	(bad)  
   140017c24:	(bad)  
   140017c25:	(bad)  
   140017c26:	(bad)  
   140017c27:	(bad)  
   140017c28:	(bad)  
   140017c29:	(bad)  
   140017c2a:	(bad)  
   140017c2b:	(bad)  
   140017c2c:	(bad)  
   140017c2d:	cli    
   140017c2e:	cli    
   140017c2f:	(bad)  
   140017c30:	push   rdi
   140017c32:	idiv   edi
   140017c34:	push   rbp
   140017c36:	cmc    
   140017c37:	(bad)  
   140017c38:	push   rdx
   140017c3a:	repnz (bad) 
   140017c3c:	(bad)  
   140017c3d:	out    dx,eax
   140017c3e:	out    dx,eax
   140017c3f:	(bad)  
   140017c40:	(bad)  
   140017c41:	in     al,dx
   140017c42:	in     al,dx
   140017c43:	(bad)  
   140017c44:	(bad)  
   140017c45:	jmp    0x127017c33
   140017c4a:	out    0xff,al
   140017c4c:	jmp    rdx
   140017c4e:	loop   0x140017c4f
   140017c50:	jmp    rax
   140017c52:	loopne 0x140017c53
   140017c54:	(bad)  
   140017c55:	fstp   st(5)
   140017c57:	(bad)  
   140017c58:	(bad)  
   140017c59:	fcmovu st,st(2)
   140017c5b:	(bad)  
   140017c5c:	fstp   DWORD PTR [rdx+0x5cb3ff87]
   140017c62:	push   QWORD PTR ss:[rbx-0x2000ce9c]
   140017c69:	mov    dh,0x83
   140017c6b:	(bad)  
   140017c6c:	(bad)  
   140017c6d:	call   0x11b017c27
   140017c72:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017c73:	(bad)  
   140017c74:	dec    esi
   140017c76:	fwait
   140017c77:	(bad)  
   140017c78:	sti    
   140017c79:	(bad)  
   140017c7a:	(bad)  
   140017c7b:	push   rbp
   140017c7d:	mov    ecx,0xaff0ff7d
   140017c82:	outs   dx,BYTE PTR ds:[rsi]
   140017c83:	(bad)  
   140017c84:	(bad)  
   140017c85:	movabs ds:0x8ddfff4a97e4ff5b,al
   140017c8e:	cmp    edi,edi
   140017c90:	fiadd  DWORD PTR [rdx+0x76d4ff28]
   140017c96:	sbb    bh,bh
   140017c98:	(bad)  
   140017c99:	imul   eax,DWORD PTR [rip+0x56bcff],0x40a6ff        # 0x1405839a2
   140017ca3:	(bad)  
   140017ca4:	jnp    0x140017ccf
   140017ca6:	add    dh,ch
   140017ca8:	xor    dl,BYTE PTR [rcx]
   140017caa:	add    ah,al
   140017cac:	add    BYTE PTR [rax],al
   140017cae:	add    BYTE PTR [rdi+0x65000000],dl
   140017cb4:	add    BYTE PTR [rax],al
   140017cb6:	add    BYTE PTR [rax],ch
   140017cb8:	add    BYTE PTR [rax],al
   140017cba:	add    BYTE PTR [rsi],al
   140017cbc:	add    BYTE PTR [rax],al
   140017cbe:	add    BYTE PTR [rax],al
   140017cc0:	cs cs cs popf 
   140017cc4:	stos   DWORD PTR es:[rdi],eax
   140017cc5:	stos   DWORD PTR es:[rdi],eax
   140017cc6:	stos   DWORD PTR es:[rdi],eax
   140017cc7:	call   rcx
   140017cc9:	rcl    ecx,1
   140017ccb:	call   rax
   140017ccd:	rcl    al,1
   140017ccf:	push   QWORD PTR [rdi+0x71]
   140017cd2:	jno    0x140017cd3
   140017cd4:	jae    0x140017d43
   140017cd6:	ins    DWORD PTR es:[rdi],dx
   140017cd7:	(bad)  
   140017cd8:	mov    ecx,0xffffb6b6
   140017cdd:	(bad)  
   140017cde:	(bad)  
   140017cdf:	(bad)  
   140017ce0:	(bad)  
   140017ce1:	(bad)  
   140017ce2:	(bad)  
   140017ce3:	(bad)  
   140017ce4:	(bad)  
   140017ce5:	(bad)  
   140017ce6:	(bad)  
   140017ce7:	(bad)  
   140017ce8:	(bad)  
   140017ce9:	(bad)  
   140017cea:	(bad)  
   140017ceb:	(bad)  
   140017cec:	(bad)  
   140017ced:	(bad)  
   140017cee:	(bad)  
   140017cef:	(bad)  
   140017cf0:	(bad)  
   140017cf1:	cli    
   140017cf2:	cli    
   140017cf3:	(bad)  
   140017cf4:	push   rdi
   140017cf6:	idiv   edi
   140017cf8:	push   rbp
   140017cfa:	cmc    
   140017cfb:	(bad)  
   140017cfc:	push   rdx
   140017cfe:	repnz (bad) 
   140017d00:	(bad)  
   140017d01:	out    dx,eax
   140017d02:	out    dx,eax
   140017d03:	(bad)  
   140017d04:	(bad)  
   140017d05:	in     al,dx
   140017d06:	in     al,dx
   140017d07:	(bad)  
   140017d08:	(bad)  
   140017d09:	jmp    0x127017cf7
   140017d0e:	out    0xff,al
   140017d10:	jmp    rdx
   140017d12:	loop   0x140017d13
   140017d14:	jmp    rax
   140017d16:	loopne 0x140017d17
   140017d18:	(bad)  
   140017d19:	fstp   st(5)
   140017d1b:	(bad)  
   140017d1c:	(bad)  
   140017d1d:	fcmovu st,st(2)
   140017d1f:	(bad)  
   140017d20:	call   rdi
   140017d22:	xlat   BYTE PTR ds:[rbx]
   140017d23:	push   QWORD PTR [rsi-0x65006f63]
   140017d29:	push   rax
   140017d2a:	xor    bh,bh
   140017d2c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017d2d:	sbb    rdi,r15
   140017d30:	fldcw  WORD PTR [rbx-0x22000088]
   140017d36:	stos   BYTE PTR es:[rdi],al
   140017d37:	(bad)  
   140017d38:	call   rbp
   140017d3a:	movabs ds:0x92c7fdff9bceffff,al
   140017d43:	push   rdi
   140017d45:	mov    esp,0xb0f1ff81
   140017d4a:	jno    0x140017d4b
   140017d4c:	in     al,dx
   140017d4d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017d4e:	(bad)  
   140017d4f:	jmp    rsi
   140017d51:	fwait
   140017d52:	rex.WRX jmp rcx
   140017d55:	nop
   140017d56:	ds (bad) 
   140017d58:	fild   DWORD PTR [rbx+0x7ad6ff2b]
   140017d5e:	sbb    eax,0xe70d1ff
   140017d63:	dec    esi
   140017d65:	jno    0x140017d81
   140017d67:	jmp    FWORD PTR [rbp+0x73ff0c4b]
   140017d6d:	es add dl,ch
   140017d70:	add    BYTE PTR [rax],al
   140017d72:	add    BYTE PTR [rdi+0x5a000000],bl
   140017d78:	add    BYTE PTR [rax],al
   140017d7a:	add    BYTE PTR [rsi],dl
   140017d7c:	add    BYTE PTR [rax],al
   140017d7e:	add    BYTE PTR [rax],al
   140017d80:	xor    DWORD PTR [rcx],esi
   140017d82:	xor    eax,ecx
   140017d84:	(bad)  
   140017d85:	(bad)  
   140017d86:	(bad)  
   140017d87:	call   rbx
   140017d89:	rcl    ebx,cl
   140017d8b:	call   rcx
   140017d8d:	rcl    ecx,1
   140017d8f:	jmp    FWORD PTR [rdi+0x6a]
   140017d92:	push   0xffffffffffffffff
   140017d94:	jno    0x140017e01
   140017d96:	imul   edi,edi,0xffffffb9
   140017d99:	mov    dh,0xb6
   140017d9b:	(bad)  
   140017d9c:	(bad)  
   140017d9d:	(bad)  
   140017d9e:	(bad)  
   140017d9f:	(bad)  
   140017da0:	(bad)  
   140017da1:	(bad)  
   140017da2:	(bad)  
   140017da3:	(bad)  
   140017da4:	(bad)  
   140017da5:	(bad)  
   140017da6:	(bad)  
   140017da7:	(bad)  
   140017da8:	(bad)  
   140017da9:	(bad)  
   140017daa:	(bad)  
   140017dab:	(bad)  
   140017dac:	(bad)  
   140017dad:	(bad)  
   140017dae:	(bad)  
   140017daf:	(bad)  
   140017db0:	(bad)  
   140017db1:	(bad)  
   140017db2:	(bad)  
   140017db3:	(bad)  
   140017db4:	(bad)  
   140017db5:	cli    
   140017db6:	cli    
   140017db7:	(bad)  
   140017db8:	push   rdi
   140017dba:	idiv   edi
   140017dbc:	push   rbp
   140017dbe:	cmc    
   140017dbf:	(bad)  
   140017dc0:	push   rdx
   140017dc2:	repnz (bad) 
   140017dc4:	(bad)  
   140017dc5:	out    dx,eax
   140017dc6:	out    dx,eax
   140017dc7:	(bad)  
   140017dc8:	(bad)  
   140017dc9:	in     al,dx
   140017dca:	in     al,dx
   140017dcb:	(bad)  
   140017dcc:	(bad)  
   140017dcd:	jmp    0x127017dbb
   140017dd2:	out    0xff,al
   140017dd4:	jmp    rdx
   140017dd6:	loop   0x140017dd7
   140017dd8:	jmp    rax
   140017dda:	loopne 0x140017ddb
   140017ddc:	(bad)  
   140017ddd:	fstp   st(5)
   140017ddf:	(bad)  
   140017de0:	(bad)  
   140017de1:	fcmovu st,st(2)
   140017de3:	(bad)  
   140017de4:	mov    esi,0x9affbebe
   140017de9:	add    BYTE PTR [rax+0x71779bff],0xff
   140017df0:	cdq    
   140017df1:	cmp    eax,0xd9f2ff10
   140017df6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017df7:	(bad)  
   140017df8:	(bad)  
   140017df9:	jmp    0x120017db4
   140017dfe:	lods   al,BYTE PTR ds:[rsi]
   140017dff:	(bad)  
   140017e00:	call   rsi
   140017e02:	movabs ds:0x97cafeff9ccfffff,eax
   140017e0b:	(bad)  
   140017e0c:	stc    
   140017e0d:	mov    edi,0xb4f3ff86
   140017e12:	jne    0x140017e13
   140017e14:	in     eax,dx
   140017e15:	test   eax,0x9ce7ff64
   140017e1a:	push   rcx
   140017e1b:	jmp    rdx
   140017e1d:	xchg   ebx,eax
   140017e1e:	rex.XB (bad) 
   140017e20:	call   0x12a00d2c3
   140017e25:	movabs eax,ds:0x61bdff4796e4ff58
   140017e2e:	(bad)  
   140017e2f:	call   FWORD PTR [rcx+0x1e]
   140017e32:	add    ah,bl
   140017e34:	add    BYTE PTR [rax],al
   140017e36:	add    BYTE PTR [rax+0x28000000],al
   140017e3c:	add    BYTE PTR [rax],al
   140017e3e:	add    BYTE PTR [rax],al
   140017e40:	xor    DWORD PTR [rcx],esi
   140017e42:	xor    eax,ecx
   140017e44:	xlat   BYTE PTR ds:[rbx]
   140017e45:	xlat   BYTE PTR ds:[rbx]
   140017e46:	xlat   BYTE PTR ds:[rbx]
   140017e47:	call   rbp
   140017e49:	(bad)  
   140017e4a:	(bad)  
   140017e4b:	call   rbx
   140017e4d:	rcl    ebx,cl
   140017e4f:	jmp    FWORD PTR [rbp+0x6a]
   140017e52:	push   0xffffffffffffffff
   140017e54:	outs   dx,DWORD PTR ds:[rsi]
   140017e55:	push   0x6a
   140017e57:	dec    edx
   140017e59:	mov    edi,0xffffffff
   140017e5f:	(bad)  
   140017e60:	(bad)  
   140017e61:	(bad)  
   140017e62:	(bad)  
   140017e63:	(bad)  
   140017e64:	(bad)  
   140017e65:	(bad)  
   140017e66:	(bad)  
   140017e67:	(bad)  
   140017e68:	(bad)  
   140017e69:	(bad)  
   140017e6a:	(bad)  
   140017e6b:	(bad)  
   140017e6c:	(bad)  
   140017e6d:	(bad)  
   140017e6e:	(bad)  
   140017e6f:	(bad)  
   140017e70:	(bad)  
   140017e71:	(bad)  
   140017e72:	(bad)  
   140017e73:	(bad)  
   140017e74:	(bad)  
   140017e75:	(bad)  
   140017e76:	(bad)  
   140017e77:	(bad)  
   140017e78:	(bad)  
   140017e79:	cli    
   140017e7a:	cli    
   140017e7b:	(bad)  
   140017e7c:	push   rdi
   140017e7e:	idiv   edi
   140017e80:	push   rbp
   140017e82:	cmc    
   140017e83:	(bad)  
   140017e84:	push   rdx
   140017e86:	repnz (bad) 
   140017e88:	(bad)  
   140017e89:	out    dx,eax
   140017e8a:	out    dx,eax
   140017e8b:	(bad)  
   140017e8c:	(bad)  
   140017e8d:	in     al,dx
   140017e8e:	in     al,dx
   140017e8f:	(bad)  
   140017e90:	(bad)  
   140017e91:	jmp    0x127017e7f
   140017e96:	out    0xff,al
   140017e98:	jmp    rdx
   140017e9a:	loop   0x140017e9b
   140017e9c:	jmp    rax
   140017e9e:	loopne 0x140017e9f
   140017ea0:	(bad)  
   140017ea1:	fstp   st(5)
   140017ea3:	(bad)  
   140017ea4:	mov    esp,0x98ffbcbc
   140017ea9:	jg     0x140017f2a
   140017eab:	call   FWORD PTR [rdx-0x78007f80]
   140017eb1:	pop    rdx
   140017eb2:	rex.WX jmp QWORD PTR [rsi-0x2600e5b3]
   140017eb9:	scas   eax,DWORD PTR es:[rdi]
   140017eba:	jl     0x140017ebb
   140017ebc:	push   rsp
   140017ebe:	sar    edi,0xff
   140017ec1:	in     al,dx
   140017ec2:	mov    ecx,0xaee1ffff
   140017ec7:	(bad)  
   140017ec8:	(bad)  
   140017ec9:	fldenv [rsi-0x612e0001]
   140017ecf:	(bad)  
   140017ed0:	dec    esp
   140017ed2:	cdq    
   140017ed3:	(bad)  
   140017ed4:	cli    
   140017ed5:	ret    0xff8b
   140017ed8:	hlt    
   140017ed9:	mov    ch,0x78
   140017edb:	push   rsp
   140017edd:	mov    bh,0x79
   140017edf:	(bad)  
   140017ee0:	dec    edi
   140017ee2:	pushf  
   140017ee3:	(bad)  
   140017ee4:	cld    
   140017ee5:	(bad)  
   140017ee6:	nop
   140017ee7:	push   rsp
   140017ee9:	mov    bh,0x7a
   140017eeb:	jmp    rdi
   140017eed:	sahf   
   140017eee:	push   rbx
   140017eef:	call   QWORD PTR [rdx+0xfb0031]
   140017ef5:	add    BYTE PTR [rax],al
   140017ef7:	mov    WORD PTR [rax],es
   140017ef9:	add    BYTE PTR [rax],al
   140017efb:	add    BYTE PTR cs:[rax],al
   140017efe:	add    BYTE PTR [rax],al
   140017f00:	xor    DWORD PTR [rcx],esi
   140017f02:	xor    eax,ecx
   140017f04:	(bad)  
   140017f06:	fcos   
   140017f08:	xlat   BYTE PTR ds:[rbx]
   140017f09:	xlat   BYTE PTR ds:[rbx]
   140017f0a:	xlat   BYTE PTR ds:[rbx]
   140017f0b:	call   rbp
   140017f0d:	(bad)  
   140017f0e:	(bad)  
   140017f0f:	jmp    FWORD PTR [rbx+0x69]
   140017f12:	imul   edi,edi,0xff6a6a6d
   140017f18:	xchg   edx,eax
   140017f19:	(bad)  
   140017f1a:	(bad)  
   140017f1b:	(bad)  
   140017f1c:	mov    eax,0xdcffb5b5
   140017f21:	fcmovu st,st(2)
   140017f23:	(bad)  
   140017f24:	out    dx,al
   140017f25:	in     eax,dx
   140017f26:	in     eax,dx
   140017f27:	(bad)  
   140017f28:	(bad)  
   140017f29:	(bad)  
   140017f2a:	(bad)  
   140017f2b:	(bad)  
   140017f2c:	(bad)  
   140017f2d:	(bad)  
   140017f2e:	(bad)  
   140017f2f:	(bad)  
   140017f30:	(bad)  
   140017f31:	(bad)  
   140017f32:	(bad)  
   140017f33:	(bad)  
   140017f34:	(bad)  
   140017f35:	(bad)  
   140017f36:	(bad)  
   140017f37:	(bad)  
   140017f38:	(bad)  
   140017f39:	(bad)  
   140017f3a:	(bad)  
   140017f3b:	(bad)  
   140017f3c:	(bad)  
   140017f3d:	cli    
   140017f3e:	cli    
   140017f3f:	(bad)  
   140017f40:	push   rdi
   140017f42:	idiv   edi
   140017f44:	push   rbp
   140017f46:	cmc    
   140017f47:	(bad)  
   140017f48:	push   rdx
   140017f4a:	repnz (bad) 
   140017f4c:	(bad)  
   140017f4d:	out    dx,eax
   140017f4e:	out    dx,eax
   140017f4f:	(bad)  
   140017f50:	(bad)  
   140017f51:	in     al,dx
   140017f52:	in     al,dx
   140017f53:	(bad)  
   140017f54:	(bad)  
   140017f55:	jmp    0x127017f43
   140017f5a:	out    0xff,al
   140017f5c:	jmp    rdx
   140017f5e:	loop   0x140017f5f
   140017f60:	jmp    rax
   140017f62:	loopne 0x140017f63
   140017f64:	mov    ebx,0x96ffbbbb
   140017f69:	jle    0x140017fe9
   140017f6b:	call   FWORD PTR [rax+0x66ff7f7f]
   140017f71:	pop    rdx
   140017f72:	pop    rdx
   140017f73:	(bad)  
   140017f74:	jns    0x140017fa7
   140017f76:	or     eax,0x550b4fa
   140017f7b:	inc    esi
   140017f7d:	ins    BYTE PTR es:[rdi],dx
   140017f7e:	sbb    bh,bh
   140017f80:	iret   
   140017f81:	fwait
   140017f82:	fs (bad) 
   140017f84:	stc    
   140017f85:	jmp    0x12f017f40
   140017f8a:	mov    ebx,0xb1e4ffff
   140017f8f:	(bad)  
   140017f90:	(bad)  
   140017f91:	fld    TBYTE PTR [rax-0x5f2c0001]
   140017f97:	(bad)  
   140017f98:	dec    ebp
   140017f9a:	(bad)  
   140017f9b:	(bad)  
   140017f9c:	(bad)  
   140017f9d:	fsub   DWORD PTR [rdi+rdi*8-0x532001]
   140017fa4:	(bad)  
   140017fa5:	fisub  DWORD PTR [rdi-0x622f0001]
   140017fab:	push   rdi
   140017fad:	mov    esp,0x50aeff81
   140017fb2:	sbb    bh,bh
   140017fb4:	add    BYTE PTR [rax],al
   140017fb6:	add    BYTE PTR [rdx+0x28000000],al
   140017fbc:	add    BYTE PTR [rax],al
   140017fbe:	add    BYTE PTR [rax],al
   140017fc0:	xor    BYTE PTR [rax],dh
   140017fc2:	xor    cl,cl
   140017fc4:	fcmovnu st,st(3)
   140017fc6:	(bad)  
   140017fc8:	(bad)  
   140017fca:	fcos   
   140017fcc:	xlat   BYTE PTR ds:[rbx]
   140017fcd:	xlat   BYTE PTR ds:[rbx]
   140017fce:	xlat   BYTE PTR ds:[rbx]
   140017fcf:	jmp    FWORD PTR [rcx+0x67]
   140017fd2:	jmp    FWORD PTR [ebx+0x69]
   140017fd6:	imul   edi,edi,0xff6a6a6d
   140017fdc:	outs   dx,DWORD PTR ds:[rsi]
   140017fdd:	push   0x6a
   140017fdf:	push   QWORD PTR [rcx+0x6b]
   140017fe2:	imul   edi,edi,0x73
   140017fe5:	ins    DWORD PTR es:[rdi],dx
   140017fe6:	ins    DWORD PTR es:[rdi],dx
   140017fe7:	push   QWORD PTR [rbp+rbp*2+0x6d]
   140017feb:	call   FWORD PTR [rax-0x54006d6e]
   140017ff1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017ff2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017ff3:	(bad)  
   140017ff4:	mov    esp,0xdeffb7b7
   140017ff9:	(bad)  
   140017ffb:	(bad)  
   140017ffc:	out    dx,eax
   140017ffd:	in     al,dx
   140017ffe:	in     al,dx
   140017fff:	(bad)  
   140018000:	(bad)  
   140018001:	cli    
   140018002:	cli    
   140018003:	(bad)  
   140018004:	push   rdi
   140018006:	idiv   edi
   140018008:	push   rbp
   14001800a:	cmc    
   14001800b:	(bad)  
   14001800c:	push   rdx
   14001800e:	repnz (bad) 
   140018010:	(bad)  
   140018011:	out    dx,eax
   140018012:	out    dx,eax
   140018013:	(bad)  
   140018014:	(bad)  
   140018015:	in     al,dx
   140018016:	in     al,dx
   140018017:	(bad)  
   140018018:	(bad)  
   140018019:	jmp    0x127018007
   14001801e:	out    0xff,al
   140018020:	repnz fcmovu st,st(2)
   140018023:	(bad)  
   140018024:	mov    ecx,0x94ffb9b9
   140018029:	jge    0x1400180a8
   14001802b:	call   QWORD PTR [rsi+0x65ff7e7e]
   140018031:	pop    rcx
   140018032:	pop    rcx
   140018033:	(bad)  
   140018034:	jns    0x140018067
   140018036:	or     eax,0x397ccff9
   14001803b:	(bad)  
   14001803c:	fild   DWORD PTR [rbp+rbp*1+0xc5ec0ff]
   140018043:	jmp    QWORD PTR [rsi-0x4000ffc0]
   140018049:	jg     0x140018097
   14001804b:	push   rdx
   14001804d:	fild   QWORD PTR [rdi+rdi*8-0x420f01]
   140018054:	jmp    rdi
   140018056:	mov    ah,0xff
   140018058:	(bad)  
   140018059:	(bad)  [rdx-0x420f0001]
   14001805f:	(bad)  
   140018060:	push   rsp
   140018062:	sar    edi,1
   140018064:	push   rdx
   140018066:	(bad)  
   140018067:	(bad)  
   140018068:	jmp    rcx
   14001806a:	scas   al,BYTE PTR es:[rdi]
   14001806b:	(bad)  
   14001806c:	dec    edi
   14001806e:	pushf  
   14001806f:	call   QWORD PTR [rbx+0xf90031]
   140018075:	add    BYTE PTR [rax],al
   140018077:	(bad)  
   140018078:	add    BYTE PTR [rax],al
   14001807a:	add    BYTE PTR [rcx],bl
   14001807c:	add    BYTE PTR [rax],al
   14001807e:	add    BYTE PTR [rax],al
   140018080:	rex.WB
   140018081:	rex.WB
   140018082:	rex.WB in al,0xdc
   140018085:	(bad)  
   140018087:	(bad)  
   140018088:	fcmovnu st,st(3)
   14001808a:	(bad)  
   14001808c:	retf   0xcaca
   14001808f:	jmp    QWORD PTR [rax-0x74006061]
   140018095:	mov    cl,BYTE PTR [rdx-0x7b7b7a01]
   14001809b:	jmp    FWORD PTR [rbp+0x6a]
   14001809e:	push   0xffffffffffffffff
   1400180a0:	outs   dx,DWORD PTR ds:[rsi]
   1400180a1:	push   0x6a
   1400180a3:	push   QWORD PTR [rcx+0x6b]
   1400180a6:	imul   edi,edi,0x73
   1400180a9:	ins    DWORD PTR es:[rdi],dx
   1400180aa:	ins    DWORD PTR es:[rdi],dx
   1400180ab:	push   QWORD PTR [rbp+rbp*2+0x6d]
   1400180af:	push   QWORD PTR [rdi+0x6e]
   1400180b2:	outs   dx,BYTE PTR ds:[rsi]
   1400180b3:	(bad)  
   1400180b4:	jns    0x140018125
   1400180b6:	outs   dx,DWORD PTR ds:[rsi]
   1400180b7:	(bad)  
   1400180b8:	jp     0x14001812a
   1400180ba:	jo     0x1400180bb
   1400180bc:	jl     0x14001812f
   1400180be:	jno    0x1400180bf
   1400180c0:	jle    0x140018134
   1400180c2:	jb     0x1400180c3
   1400180c4:	movabs al,ds:0xc9ffa5a5b1ff9494
   1400180cd:	mov    esp,0xd2e1ffbc
   1400180d2:	sar    bh,cl
   1400180d4:	mul    edi
   1400180d6:	out    0xff,eax
   1400180d8:	(bad)  
   1400180d9:	in     al,dx
   1400180da:	in     al,dx
   1400180db:	(bad)  
   1400180dc:	(bad)  
   1400180dd:	jmp    0x11aef80cb
   1400180e2:	(bad)  
   1400180e4:	mov    dl,0xaf
   1400180e6:	scas   eax,DWORD PTR es:[rdi]
   1400180e7:	call   QWORD PTR [rdx-0x6b008384]
   1400180ed:	jge    0x14001816c
   1400180ef:	jmp    QWORD PTR [rax+rbx*2+0x58]
   1400180f3:	push   QWORD PTR [rsi]
   1400180f5:	sbb    eax,0x3193c311
   1400180fa:	add    al,ch
   1400180fc:	mov    edx,0xe3ff2961
   140018101:	(bad)  
   140018102:	pop    rax
   140018103:	(bad)  
   140018104:	fisttp WORD PTR [rcx+rdi*1+0x1165c5ff]
   14001810b:	(bad)  
   14001810c:	mov    edx,0xc9ff0255
   140018111:	movsxd eax,DWORD PTR [rax]
   140018113:	(bad)  
   140018114:	fistp  WORD PTR [rbx-0x200600b8]
   14001811a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001811b:	(bad)  
   14001811c:	(bad)  
   14001811d:	call   rdx
   14001811f:	(bad)  
   140018120:	(bad)  
   140018121:	(bad)  
   140018122:	cld    
   140018123:	(bad)  
   140018124:	(bad)  
   140018125:	jmp    rsp
   140018127:	(bad)  
   140018128:	(bad)  
   140018129:	in     al,dx
   14001812a:	mov    edx,0x5d90d2ff
   14001812f:	push   QWORD PTR [rcx+0x26]
   140018132:	add    cl,al
   140018134:	add    BYTE PTR [rax],al
   140018136:	add    BYTE PTR [rax],dh
   140018138:	add    BYTE PTR [rax],al
   14001813a:	add    BYTE PTR [rdi],al
   14001813c:	add    BYTE PTR [rax],al
   14001813e:	add    BYTE PTR [rax],al
   140018140:	rex.W
   140018141:	rex.W
   140018142:	rex.W push QWORD PTR [rbx-0x43004c4d]
   140018149:	mov    esp,0xdbdbffbc
   14001814e:	(bad)  
   140018150:	(bad)  
   140018152:	fcos   
   140018154:	xlat   BYTE PTR ds:[rbx]
   140018155:	xlat   BYTE PTR ds:[rbx]
   140018156:	xlat   BYTE PTR ds:[rbx]
   140018157:	call   rbp
   140018159:	(bad)  
   14001815a:	(bad)  
   14001815b:	call   rbx
   14001815d:	rcl    ebx,cl
   14001815f:	dec    ebx
   140018161:	retf   
   140018162:	retf   
   140018163:	(bad)  
   140018164:	mov    eax,0xa5ffb7b7
   140018169:	movabs ds:0x858aff9d9da0ffa3,eax
   140018172:	test   edi,edi
   140018174:	xchg   BYTE PTR [rdi+0x7f],bh
   140018177:	(bad)  
   140018178:	jns    0x1400181e9
   14001817a:	outs   dx,DWORD PTR ds:[rsi]
   14001817b:	(bad)  
   14001817c:	jp     0x1400181ee
   14001817e:	jo     0x14001817f
   140018180:	jl     0x1400181f3
   140018182:	jno    0x140018183
   140018184:	jle    0x1400181f8
   140018186:	jb     0x140018187
   140018188:	xor    BYTE PTR [rbx+0x73],0xff
   14001818c:	xor    DWORD PTR [rsp+rsi*2-0x1],0xffffff84
   140018191:	jne    0x140018208
   140018193:	inc    DWORD PTR [rsi-0x6f00898a]
   140018199:	jle    0x140018219
   14001819b:	jmp    QWORD PTR [rdi-0x4a006b6c]
   1400181a1:	movabs ds:0x7b90ff90909dffa3,eax
   1400181aa:	jnp    0x1400181ab
   1400181ac:	xchg   edx,eax
   1400181ad:	jl     0x14001822b
   1400181af:	call   QWORD PTR [rcx+0x4a]
   1400181b2:	rex.WX inc QWORD PTR [rax]
   1400181b5:	add    BYTE PTR [rax],al
   1400181b7:	pop    QWORD PTR [rax]
   1400181b9:	add    BYTE PTR [rax],al
   1400181bb:	(bad)  
   1400181bc:	xchg   esi,eax
   1400181bd:	xor    al,BYTE PTR [rax]
   1400181bf:	(bad)  
   1400181c0:	xchg   edi,eax
   1400181c1:	xor    al,BYTE PTR [rax]
   1400181c3:	shr    BYTE PTR [rdi-0x2600e2ad],cl
   1400181c9:	mov    cs,WORD PTR [rdi-0x1]
   1400181cc:	jrcxz  0x140018162
   1400181ce:	rex.RB call r8
   1400181d1:	jno    0x1400181e8
   1400181d3:	(bad)  
   1400181d4:	mov    ecx,0xa9ff0053
   1400181d9:	rex.WB or rax,0xffffffff80b3d9ff
   1400181df:	(bad)  
   1400181e0:	stc    
   1400181e1:	repnz leave 
   1400181e3:	push   rdx
   1400181e5:	in     eax,0xb6
   1400181e7:	dec    esp
   1400181e9:	nop
   1400181ea:	pop    rbp
   1400181eb:	dec    DWORD PTR [rsi+0x2adf002f]
   1400181f1:	(bad)  
   1400181f2:	add    BYTE PTR [rdx],bh
   1400181f4:	add    BYTE PTR [rax],al
   1400181f6:	add    BYTE PTR [rax+rax*1],cl
   1400181f9:	add    BYTE PTR [rax],al
   1400181fb:	add    DWORD PTR [rax],eax
   1400181fd:	add    BYTE PTR [rax],al
   1400181ff:	add    BYTE PTR [rcx],dh
   140018201:	xor    DWORD PTR [rcx],esi
   140018203:	rex.X (bad) 
   140018205:	(bad)  
   140018206:	(bad)  
   140018207:	push   rdi
   140018208:	xor    BYTE PTR [rax],dh
   14001820a:	xor    BYTE PTR [rax-0x49cececf],cl
   140018210:	pop    rcx
   140018211:	pop    rcx
   140018212:	pop    rcx
   140018213:	(bad)  
   140018214:	pop    rsp
   140018215:	pop    rsp
   140018216:	pop    rsp
   140018217:	inc    DWORD PTR [rbp-0x67007a7b]
   14001821d:	cwde   
   14001821e:	cwde   
   14001821f:	jmp    FWORD PTR [rbx-0x2e005455]
   140018225:	rcl    ecx,1
   140018227:	call   rax
   140018229:	rcl    al,1
   14001822b:	dec    esi
   14001822d:	(bad)  
   14001822e:	(bad)  
   14001822f:	dec    esp
   140018231:	int3   
   140018232:	int3   
   140018233:	dec    ebx
   140018235:	retf   
   140018236:	retf   
   140018237:	dec    ecx
   140018239:	leave  
   14001823a:	leave  
   14001823b:	(bad)  
   14001823c:	mov    ebp,0xb3ffbcbc
   140018241:	mov    al,0xb0
   140018243:	jmp    QWORD PTR [rbp-0x5f005f60]
   140018249:	(bad)  
   14001824a:	(bad)  
   14001824b:	call   QWORD PTR [rcx-0x7000797a]
   140018251:	add    DWORD PTR [rbx+0x757584ff],0xffffffff
   140018258:	xchg   BYTE PTR [rsi+0x76],dh
   14001825b:	dec    DWORD PTR [rax-0x75008889]
   140018261:	js     0x1400182db
   140018263:	dec    DWORD PTR [rcx+rdi*2+0x7a8eff79]
   14001826a:	jp     0x14001826b
   14001826c:	nop
   14001826d:	jnp    0x1400182ea
   14001826f:	dec    DWORD PTR [rbx+0x45]
   140018272:	rex.RB inc DWORD PTR [r8]
   140018275:	add    BYTE PTR [rax],al
   140018277:	mov    eax,DWORD PTR [rax]
   140018279:	add    BYTE PTR [rax],al
   14001827b:	sub    eax,0x0
   140018280:	add    BYTE PTR [rax],al
   140018282:	add    BYTE PTR [rax],al
   140018284:	xchg   esp,eax
   140018285:	xor    DWORD PTR [rax],eax
   140018287:	rex.X xchg ebp,eax
   140018289:	xor    al,BYTE PTR [rax]
   14001828b:	mov    bl,0xa4
   14001828d:	rex.XB (bad) 
   14001828f:	call   FWORD PTR [rbx-0x771af7c6]
   140018295:	sub    eax,0x2776a100
   14001829a:	add    BYTE PTR [rbx-0x6f],dl
   14001829d:	xor    BYTE PTR [rax],al
   14001829f:	xchg   edi,eax
   1400182a0:	xchg   esp,eax
   1400182a1:	xor    DWORD PTR [rax],eax
   1400182a3:	(bad)
   1400182a6:	add    bh,al
   1400182a8:	test   DWORD PTR [rax+rax*1],ebp
   1400182ab:	or     DWORD PTR [rax+0x18],0x2200
   1400182b2:	add    BYTE PTR [rdi],al
   1400182b4:	add    BYTE PTR [rax],al
   1400182b6:	add    BYTE PTR [rcx],al
	...
   1400182d8:	xor    DWORD PTR [rcx],esi
   1400182da:	xor    DWORD PTR [rcx],esp
   1400182dc:	xor    BYTE PTR [rax],dh
   1400182de:	xor    BYTE PTR [rax+rsi*1+0x30],al
   1400182e2:	xor    BYTE PTR [rdi+0x30],dh
   1400182e5:	xor    BYTE PTR [rax],dh
   1400182e7:	xchg   edi,eax
   1400182e8:	ds ds ds (bad) 
   1400182ec:	pop    rsi
   1400182ed:	pop    rsi
   1400182ee:	pop    rsi
   1400182ef:	jrcxz  0x140018368
   1400182f1:	ja     0x14001836a
   1400182f3:	inc    DWORD PTR [rax-0x5a007f80]
   1400182f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400182fa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400182fb:	push   QWORD PTR [rdi-0x38004849]
   140018301:	mov    edi,0xc5c5c5ff
   140018307:	inc    esp
   140018309:	(bad)  
   14001830a:	(bad)  
   14001830b:	inc    edx
   14001830d:	ret    0xffc2
   140018310:	rol    al,0xc0
   140018313:	(bad)  
   140018314:	mov    esi,0xb6ffbebe
   140018319:	mov    ah,0xb4
   14001831b:	jmp    FWORD PTR [rsi-0x5b005556]
   140018321:	popf   
   140018322:	popf   
   140018323:	call   FWORD PTR [rdi-0x68006a6b]
   140018329:	mov    BYTE PTR [rax-0x7e7e6c01],cl
   14001832f:	dec    DWORD PTR [rdx+0x45]
   140018332:	rex.RB inc DWORD PTR [r8]
   140018335:	add    BYTE PTR [rax],al
   140018337:	movsxd eax,DWORD PTR [rax]
   140018339:	add    BYTE PTR [rax],al
   14001833b:	(bad)  
	...
   14001834c:	xchg   esp,eax
   14001834d:	xor    DWORD PTR [rax],eax
   14001834f:	and    DWORD PTR [rax],eax
   140018351:	add    BYTE PTR [rax],al
   140018353:	add    eax,DWORD PTR [rax]
   140018355:	add    BYTE PTR [rax],al
   140018357:	add    DWORD PTR [rax],eax
	...
   1400183b1:	add    BYTE PTR [rax],al
   1400183b3:	add    BYTE PTR [rcx],dh
   1400183b5:	xor    DWORD PTR [rcx],esi
   1400183b7:	rex.X (bad) 
   1400183b9:	(bad)  
   1400183ba:	(bad)  
   1400183bb:	push   rdi
   1400183bc:	xor    BYTE PTR [rax],dh
   1400183be:	xor    BYTE PTR [rax-0x49cececf],cl
   1400183c4:	push   rbp
   1400183c5:	push   rbp
   1400183c6:	push   rbp
   1400183c7:	(bad)  
   1400183c8:	(bad)  
   1400183c9:	(bad)  
   1400183ca:	(bad)  
   1400183cb:	(bad)  
   1400183cc:	jnp    0x140018449
   1400183ce:	jnp    0x1400183cf
   1400183d0:	mov    WORD PTR [rsp+rcx*4-0x62626201],cs
   1400183d7:	(bad)  
   1400183d8:	mov    esi,0xbdffbebe
   1400183dd:	mov    ebp,0xbbbbffbd
   1400183e2:	mov    ebx,0xa0a0a0ff
   1400183e7:	inc    DWORD PTR [rsi+0x6cff8686]
   1400183ed:	ins    BYTE PTR es:[rdi],dx
   1400183ee:	ins    BYTE PTR es:[rdi],dx
   1400183ef:	(bad)  
   1400183f0:	cmp    bh,BYTE PTR [rdx]
   1400183f2:	cmp    bl,cl
   1400183f4:	add    BYTE PTR [rax],al
   1400183f6:	add    BYTE PTR [rax],ah
   1400183f8:	add    BYTE PTR [rax],al
   1400183fa:	add    BYTE PTR [rcx],cl
	...
   14001848c:	xor    DWORD PTR [rcx],esi
   14001848e:	xor    DWORD PTR [rcx],esp
   140018490:	xor    BYTE PTR [rax],dh
   140018492:	xor    BYTE PTR [rcx+rsi*1+0x31],al
   140018496:	xor    DWORD PTR [rsi-0x67cfcfd0],eax
   14001849c:	cmp    eax,0x3cc63d3d
   1400184a1:	cmp    al,0x3c
   1400184a3:	mov    ecx,0x8f2e2e2e
   1400184a8:	sub    DWORD PTR [rcx],ebp
   1400184aa:	sub    DWORD PTR [rax+0x1d],edx
   1400184ad:	sbb    eax,0x1c1d
   1400184b2:	add    BYTE PTR [rax+rax*1],al
   1400184b5:	add    BYTE PTR [rax],al
   1400184b7:	add    DWORD PTR [rax],eax
	...
   14001873d:	add    BYTE PTR [rax],al
   14001873f:	add    bh,bh
   140018741:	(bad)  
   140018742:	(bad)  
   140018743:	(bad)  
   140018744:	(bad)  
   140018745:	inc    DWORD PTR [rax]
   140018747:	add    al,bh
   140018749:	jg     0x14001874a
   14001874b:	(bad)  
   14001874c:	(bad)  
   14001874d:	inc    DWORD PTR [rax]
   14001874f:	add    al,ah
   140018751:	ud0    edi,edi
   140018754:	(bad)  
   140018755:	inc    DWORD PTR [rax]
   140018757:	add    al,al
   140018759:	add    bh,bh
   14001875b:	(bad)  
   14001875c:	(bad)  
   14001875d:	inc    DWORD PTR [rax]
   14001875f:	add    al,al
   140018761:	add    BYTE PTR [rdi],bl
   140018763:	(bad)  
   140018764:	(bad)  
   140018765:	inc    DWORD PTR [rax]
   140018767:	add    BYTE PTR [rax-0xff00],al
   14001876d:	inc    DWORD PTR [rax]
   14001876f:	add    BYTE PTR [rax-0xc10000],al
   140018775:	inc    DWORD PTR [rax]
   140018777:	add    BYTE PTR [rax-0xfd0000],al
   14001877d:	inc    DWORD PTR [rax]
   14001877f:	add    BYTE PTR [rax-0x1000000],al
   140018785:	inc    DWORD PTR [rax]
   140018787:	add    BYTE PTR [rax-0x1000000],al
   14001878d:	inc    DWORD PTR [rax]
   14001878f:	add    BYTE PTR [rax-0x1000000],al
   140018795:	inc    DWORD PTR [rax]
   140018797:	add    BYTE PTR [rax-0x1000000],al
   14001879d:	inc    DWORD PTR [rax]
   14001879f:	add    BYTE PTR [rax-0x1000000],al
   1400187a5:	inc    DWORD PTR [rax]
   1400187a7:	add    BYTE PTR [rax-0x1000000],al
   1400187ad:	inc    DWORD PTR [rax]
   1400187af:	add    BYTE PTR [rax-0x1000000],al
   1400187b5:	inc    DWORD PTR [rax]
   1400187b7:	add    BYTE PTR [rax-0x1000000],al
   1400187bd:	inc    DWORD PTR [rax]
   1400187bf:	add    BYTE PTR [rax-0x1000000],al
   1400187c5:	inc    DWORD PTR [rax]
   1400187c7:	add    BYTE PTR [rax-0x1000000],al
   1400187cd:	inc    DWORD PTR [rax]
   1400187cf:	add    BYTE PTR [rax-0x1000000],al
   1400187d5:	inc    DWORD PTR [rax]
   1400187d7:	add    BYTE PTR [rax-0x1000000],al
   1400187dd:	inc    DWORD PTR [rax]
   1400187df:	add    BYTE PTR [rax-0x1000000],al
   1400187e5:	inc    DWORD PTR [rax]
   1400187e7:	add    BYTE PTR [rax-0x1000000],al
   1400187ed:	inc    DWORD PTR [rax]
   1400187ef:	add    BYTE PTR [rax-0x1000000],al
   1400187f5:	inc    DWORD PTR [rax]
   1400187f7:	add    BYTE PTR [rax],al
   1400187f9:	add    BYTE PTR [rax],al
   1400187fb:	add    bh,bh
   1400187fd:	inc    DWORD PTR [rax]
   1400187ff:	add    BYTE PTR [rax],al
   140018801:	add    BYTE PTR [rax],al
   140018803:	add    bh,bh
   140018805:	inc    DWORD PTR [rax]
   140018807:	add    BYTE PTR [rax],al
   140018809:	add    BYTE PTR [rax],al
   14001880b:	add    bh,bh
   14001880d:	inc    DWORD PTR [rax]
   14001880f:	add    BYTE PTR [rax],al
   140018811:	add    BYTE PTR [rax],al
   140018813:	add    bh,bh
   140018815:	inc    DWORD PTR [rax]
   140018817:	add    BYTE PTR [rax],al
   140018819:	add    BYTE PTR [rax],al
   14001881b:	add    BYTE PTR [rdi],cl
   14001881d:	inc    DWORD PTR [rax]
   14001881f:	add    BYTE PTR [rax],al
   140018821:	add    BYTE PTR [rax],al
   140018823:	add    BYTE PTR [rcx],al
   140018825:	inc    DWORD PTR [rax]
   140018827:	add    BYTE PTR [rax],al
   140018829:	add    BYTE PTR [rax],al
   14001882b:	add    BYTE PTR [rax],al
   14001882d:	jg     0x14001882f
   14001882f:	add    BYTE PTR [rax],al
   140018831:	add    BYTE PTR [rax],al
   140018833:	add    BYTE PTR [rax],al
   140018835:	(bad)  
   140018836:	add    BYTE PTR [rax],al
   140018838:	add    BYTE PTR [rax],al
   14001883a:	add    BYTE PTR [rax],al
   14001883c:	add    BYTE PTR [rdi],al
   14001883e:	add    BYTE PTR [rax],al
   140018840:	add    BYTE PTR [rax],al
   140018842:	add    BYTE PTR [rax],al
   140018844:	add    BYTE PTR [rbx],al
   140018846:	add    BYTE PTR [rax],al
   140018848:	add    BYTE PTR [rax],al
   14001884a:	add    BYTE PTR [rax],al
   14001884c:	add    BYTE PTR [rcx],al
   14001884e:	add    BYTE PTR [rax],al
   140018850:	add    BYTE PTR [rax],al
   140018852:	add    BYTE PTR [rax],al
   140018854:	add    BYTE PTR [rcx],al
   140018856:	add    BYTE PTR [rax],al
   140018858:	add    BYTE PTR [rax],al
   14001885a:	add    BYTE PTR [rax],al
   14001885c:	add    BYTE PTR [rcx],al
   14001885e:	add    BYTE PTR [rax],al
   140018860:	add    BYTE PTR [rax],al
   140018862:	add    BYTE PTR [rax],al
   140018864:	add    BYTE PTR [rcx],al
   140018866:	add    BYTE PTR [rax],al
   140018868:	add    BYTE PTR [rax],al
   14001886a:	add    BYTE PTR [rax],al
   14001886c:	add    BYTE PTR [rcx],al
   14001886e:	add    BYTE PTR [rax],al
   140018870:	add    BYTE PTR [rax],al
   140018872:	add    BYTE PTR [rax],al
   140018874:	add    BYTE PTR [rcx],al
   140018876:	add    BYTE PTR [rax],al
   140018878:	add    BYTE PTR [rax],al
   14001887a:	add    BYTE PTR [rax],al
   14001887c:	add    BYTE PTR [rcx],al
   14001887e:	add    BYTE PTR [rax],al
   140018880:	add    BYTE PTR [rax],al
   140018882:	add    BYTE PTR [rax],al
   140018884:	add    BYTE PTR [rcx],al
   140018886:	add    BYTE PTR [rax],al
   140018888:	add    BYTE PTR [rax],al
   14001888a:	add    BYTE PTR [rcx],al
   14001888c:	add    BYTE PTR [rbx],0x0
   14001888f:	add    ah,bh
   140018891:	add    BYTE PTR [rax],al
   140018893:	add    ebx,esp
   140018895:	inc    DWORD PTR [rax]
   140018897:	add    bh,bh
   140018899:	clc    
   14001889a:	add    BYTE PTR [rcx],al
   14001889c:	(bad)  
   14001889d:	inc    DWORD PTR [rax]
   14001889f:	add    bh,bh
   1400188a1:	jmp    rax
   1400188a3:	add    edi,edi
   1400188a5:	inc    DWORD PTR [rax]
   1400188a7:	add    bh,bh
   1400188a9:	(bad)  
   1400188aa:	(bad)  
   1400188ab:	(bad)  
   1400188ac:	(bad)  
   1400188ad:	inc    DWORD PTR [rax]
   1400188af:	add    bh,bh
   1400188b1:	(bad)  
   1400188b2:	(bad)  
   1400188b3:	(bad)  
   1400188b4:	(bad)  
   1400188b5:	inc    DWORD PTR [rax]
   1400188b7:	add    bh,bh
   1400188b9:	(bad)  
   1400188ba:	(bad)  
   1400188bb:	(bad)  
   1400188bc:	(bad)  
   1400188bd:	inc    DWORD PTR [rax]
   1400188bf:	add    BYTE PTR [rax],ch
   1400188c1:	add    BYTE PTR [rax],al
   1400188c3:	add    BYTE PTR [rax],ah
   1400188c5:	add    BYTE PTR [rax],al
   1400188c7:	add    BYTE PTR [rax+0x0],al
   1400188ca:	add    BYTE PTR [rax],al
   1400188cc:	add    DWORD PTR [rax],eax
   1400188ce:	and    BYTE PTR [rax],al
	...
   1400189f4:	add    BYTE PTR [rax],al
   1400189f6:	add    BYTE PTR [rbx],al
   1400189f8:	add    BYTE PTR [rax],al
   1400189fa:	add    BYTE PTR [rip+0x15000000],cl        # 0x155018a00
   140018a00:	add    BYTE PTR [rax],al
   140018a02:	add    BYTE PTR [rdi],cl
   140018a04:	add    BYTE PTR [rax],al
   140018a06:	add    BYTE PTR [rip+0x1000000],al        # 0x141018a0c
	...
   140018a6c:	add    BYTE PTR [rax],al
   140018a6e:	add    BYTE PTR [rcx],al
   140018a70:	add    BYTE PTR [rax],al
   140018a72:	add    BYTE PTR [rdi],al
   140018a74:	add    BYTE PTR [rax],al
   140018a76:	add    BYTE PTR [rdi],bl
   140018a78:	add    BYTE PTR [rax],al
   140018a7a:	add    BYTE PTR [rbp+0x0],al
   140018a7d:	add    BYTE PTR [rax],al
   140018a7f:	pop    rbx
   140018a80:	add    BYTE PTR [rax],al
   140018a82:	add    BYTE PTR [rdi+0x0],cl
   140018a85:	add    BYTE PTR [rax],al
   140018a87:	(bad)  
   140018a88:	add    BYTE PTR [rax],al
   140018a8a:	add    BYTE PTR [rax+rax*1],ah
   140018a8d:	add    BYTE PTR [rax],al
   140018a8f:	adc    eax,0xa000000
   140018a94:	add    BYTE PTR [rax],al
   140018a96:	add    BYTE PTR [rdx],al
	...
   140018aec:	add    BYTE PTR [rax],al
   140018aee:	add    BYTE PTR [rax+rax*1],al
   140018af1:	add    BYTE PTR [rax],al
   140018af3:	and    bl,BYTE PTR [rax]
   140018af5:	sbb    BYTE PTR [rax],bl
   140018af7:	xchg   BYTE PTR [rsi],ah
   140018af9:	es es (bad) 
   140018afc:	adc    eax,0x5c11515
   140018b01:	add    eax,0xa505
   140018b06:	add    BYTE PTR [rsi+0x76000000],cl
   140018b0c:	add    BYTE PTR [rax],al
   140018b0e:	add    BYTE PTR [rbx+0x0],bl
   140018b11:	add    BYTE PTR [rax],al
   140018b13:	add    BYTE PTR [r8],al
   140018b16:	add    BYTE PTR [rax+rax*1],ch
   140018b19:	add    BYTE PTR [rax],al
   140018b1b:	sbb    eax,0x10000000
   140018b20:	add    BYTE PTR [rax],al
   140018b22:	add    BYTE PTR [rsi],al
   140018b24:	add    BYTE PTR [rax],al
   140018b26:	add    BYTE PTR [rcx],al
	...
   140018b6c:	and    DWORD PTR [rcx],esp
   140018b6e:	and    DWORD PTR [rcx],ebx
   140018b70:	xor    eax,0x6eaa3535
   140018b75:	outs   dx,BYTE PTR ds:[rsi]
   140018b76:	outs   dx,BYTE PTR ds:[rsi]
   140018b77:	jmp    QWORD PTR [rbp-0x76006e6f]
   140018b7d:	outs   dx,DWORD PTR ds:[rsi]
   140018b7e:	outs   dx,DWORD PTR ds:[rsi]
   140018b7f:	jmp    FWORD PTR [rbx+0x5a]
   140018b82:	pop    rdx
   140018b83:	inc    DWORD PTR [rbx+rdi*1+0x3b]
   140018b87:	out    dx,al
   140018b88:	sbb    ebx,DWORD PTR [rbx]
   140018b8a:	sbb    edx,esp
   140018b8c:	or     eax,0xb60d0d
   140018b91:	add    BYTE PTR [rax],al
   140018b93:	xchg   esi,eax
   140018b94:	add    BYTE PTR [rax],al
   140018b96:	add    BYTE PTR [rdx+0x6b000000],al
   140018b9c:	add    BYTE PTR [rax],al
   140018b9e:	add    BYTE PTR [rdx+0x0],dl
   140018ba1:	add    BYTE PTR [rax],al
   140018ba3:	cmp    DWORD PTR [rax],eax
   140018ba5:	add    BYTE PTR [rax],al
   140018ba7:	add    BYTE PTR es:[rax],al
   140018baa:	add    BYTE PTR [rdi],dl
   140018bac:	add    BYTE PTR [rax],al
   140018bae:	add    BYTE PTR [rdx],cl
   140018bb0:	add    BYTE PTR [rax],al
   140018bb2:	add    BYTE PTR [rdx],al
	...
   140018bec:	sub    eax,0x7e492d2d
   140018bf1:	jle    0x140018c71
   140018bf3:	call   FWORD PTR [rsi-0x58006162]
   140018bf9:	mov    cs,WORD PTR [rsi-0x76765201]
   140018bff:	push   QWORD PTR [rax-0x4c007475]
   140018c05:	lea    ecx,[rbp-0x7d7d5a01]
   140018c0b:	inc    DWORD PTR [rsi+0x59ff6d6d]
   140018c11:	rex.WR
   140018c12:	rex.WR imul QWORD PTR [rip+0x18e42a2a]        # 0x158e5b643
   140018c19:	sbb    BYTE PTR [rax],bl
   140018c1b:	int3   
   140018c1c:	add    eax,0xa60505
   140018c21:	add    BYTE PTR [rax],al
   140018c23:	xchg   ecx,eax
   140018c24:	add    BYTE PTR [rax],al
   140018c26:	add    BYTE PTR [rbx+0x0],bh
   140018c29:	add    BYTE PTR [rax],al
   140018c2b:	pop    rdi
   140018c2c:	add    BYTE PTR [rax],al
   140018c2e:	add    BYTE PTR [rbx+0x0],al
   140018c31:	add    BYTE PTR [rax],al
   140018c33:	add    BYTE PTR cs:[rax],al
   140018c36:	add    BYTE PTR [rsi],bl
   140018c38:	add    BYTE PTR [rax],al
   140018c3a:	add    BYTE PTR [rax],dl
   140018c3c:	add    BYTE PTR [rax],al
   140018c3e:	add    BYTE PTR [rax+rax*1],al
	...
   140018c69:	add    BYTE PTR [rax],al
   140018c6b:	add    BYTE PTR [rip+0xffffffff87492d2d],ch        # 0xc74ab99e
   140018c71:	xchg   DWORD PTR [rdi-0x5e5e5e01],eax
   140018c77:	jmp    QWORD PTR [rbp-0x51007273]
   140018c7d:	xchg   ecx,eax
   140018c7e:	xchg   ecx,eax
   140018c7f:	(bad)  
   140018c80:	mov    ebx,0xb2ffa5a5
   140018c85:	nop
   140018c86:	nop
   140018c87:	push   QWORD PTR [rbx-0x49007273]
   140018c8d:	mov    cs,WORD PTR [rsi-0x6f6f4601]
   140018c93:	(bad)  
   140018c94:	mov    esp,0x9cff9191
   140018c99:	jp     0x140018d15
   140018c9b:	push   QWORD PTR [rcx+0x5d]
   140018c9e:	pop    rbp
   140018c9f:	inc    DWORD PTR [rdi+0x3f]
   140018ca2:	(bad)  
   140018ca3:	repz (bad) 
   140018ca5:	(bad)  
   140018ca6:	(bad)  
   140018ca7:	fimul  DWORD PTR [rip+0xb80d0d]        # 0x140b999ba
   140018cad:	add    BYTE PTR [rax],al
   140018caf:	cwde   
   140018cb0:	add    BYTE PTR [rax],al
   140018cb2:	add    BYTE PTR [rbp+0x6d000000],al
   140018cb8:	add    BYTE PTR [rax],al
   140018cba:	add    BYTE PTR [rax+rax*1+0x0],al
   140018cbe:	add    BYTE PTR [rax+rax*1],dl
	...
   140018ce9:	add    BYTE PTR [rax],al
   140018ceb:	add    BYTE PTR [rsp+rbp*1],ch
   140018cee:	sub    al,0x4b
   140018cf0:	mov    cl,BYTE PTR [rdx-0x5b5b0076]
   140018cf6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018cf7:	jmp    QWORD PTR [rsp+rcx*4-0x6a460074]
   140018cfe:	xchg   ebp,eax
   140018cff:	push   rax
   140018d01:	(bad)  
   140018d02:	(bad)  
   140018d03:	(bad)  
   140018d04:	call   0x11a0157d3
   140018d09:	(bad)  
   140018d0a:	(bad)  
   140018d0b:	dec    ebx
   140018d0d:	mov    edx,0xa8c4ffba
   140018d12:	test   al,0xff
   140018d14:	mov    esp,0xbcff9595
   140018d19:	xchg   ecx,eax
   140018d1a:	xchg   ecx,eax
   140018d1b:	(bad)  
   140018d1c:	mov    edi,0xc2ff9292
   140018d21:	xchg   esp,eax
   140018d22:	xchg   esp,eax
   140018d23:	(bad)  
   140018d24:	mov    esp,0x90ff8f8f
   140018d29:	jno    0x140018d9c
   140018d2b:	jmp    FWORD PTR [rdx+0x57]
   140018d2e:	push   rdi
   140018d2f:	sti    
   140018d30:	sub    ch,BYTE PTR cs:[rdx]
   140018d33:	in     eax,0x18
   140018d35:	sbb    BYTE PTR [rax],bl
   140018d37:	int3   
   140018d38:	add    BYTE PTR [rax],al
   140018d3a:	add    BYTE PTR [rax+rax*1+0x0],bh
   140018d3e:	add    BYTE PTR [rax],ch
	...
   140018d6c:	sub    DWORD PTR [rcx],ebp
   140018d6e:	sub    DWORD PTR [rax-0x74],edx
   140018d71:	mov    WORD PTR [rdi+rdi*8-0x585859],cs
   140018d78:	movabs ds:0xffffa1a1c1ff8c8c,al
   140018d81:	ret    0xffc2
   140018d84:	(bad)  
   140018d85:	mov    esi,0xb9ffffbe
   140018d8a:	mov    ecx,0xb9b9fbff
   140018d8f:	push   rsp
   140018d91:	ret    
   140018d92:	ret    
   140018d93:	(bad)  
   140018d94:	out    dx,eax
   140018d95:	rcl    al,1
   140018d97:	jmp    rcx
   140018d99:	int3   
   140018d9a:	int3   
   140018d9b:	call   rsi
   140018d9d:	rol    al,0xff
   140018da0:	int    0xab
   140018da2:	stos   DWORD PTR es:[rdi],eax
   140018da3:	inc    ecx
   140018da5:	xchg   esp,eax
   140018da6:	xchg   esp,eax
   140018da7:	inc    ebp
   140018da9:	xchg   ebp,eax
   140018daa:	xchg   ebp,eax
   140018dab:	dec    eax
   140018dad:	xchg   edi,eax
   140018dae:	xchg   edi,eax
   140018daf:	dec    ebx
   140018db1:	cdq    
   140018db2:	cdq    
   140018db3:	push   QWORD PTR [rsi+0x60]
   140018db6:	(bad)  
   140018db7:	inc    DWORD PTR [rax]
   140018db9:	add    BYTE PTR [rax],al
   140018dbb:	pop    QWORD PTR [rax]
   140018dbd:	add    BYTE PTR [rax],al
   140018dbf:	(bad)  
	...
   140018dec:	(bad)  
   140018ded:	(bad)  
   140018dee:	(bad)  
   140018def:	mov    WORD PTR [rsp+riz*4-0x5656005c],fs
   140018df6:	test   eax,0x84849eff
   140018dfb:	dec    edi
   140018dfd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018dfe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018dff:	(bad)  
   140018e00:	inc    esi
   140018e02:	(bad)  
   140018e03:	(bad)  
   140018e04:	inc    edx
   140018e06:	ret    0xffff
   140018e09:	mov    esi,0xb9ffffbe
   140018e0e:	mov    ecx,0xb4b4ffff
   140018e13:	(bad)  
   140018e14:	push   QWORD PTR [rax-0x54000050]
   140018e1a:	stos   DWORD PTR es:[rdi],eax
   140018e1b:	(bad)  
   140018e1c:	std    
   140018e1d:	mov    al,0xb0
   140018e1f:	(bad)  
   140018e20:	cli    
   140018e21:	rol    ecx,0xff
   140018e24:	test   bh,0xcf
   140018e27:	(bad)  
   140018e28:	(bad)  
   140018e29:	(bad)  
   140018e2a:	(bad)  
   140018e2b:	(bad)  
   140018e2c:	ffreep st(4)
   140018e2e:	(bad)  
   140018e2f:	dec    eax
   140018e31:	xchg   edi,eax
   140018e32:	xchg   edi,eax
   140018e33:	(bad)  
   140018e34:	jg     0x140018e9c
   140018e36:	inc    WORD PTR [rax]
   140018e39:	add    BYTE PTR [rax],al
   140018e3b:	pop    QWORD PTR [rax]
   140018e3d:	add    BYTE PTR [rax],al
   140018e3f:	(bad)  
	...
   140018e6c:	(bad)  
   140018e6d:	(bad)  
   140018e6e:	(bad)  
   140018e6f:	mov    WORD PTR [rdi-0x53005051],gs
   140018e75:	lods   al,BYTE PTR ds:[rsi]
   140018e76:	lods   al,BYTE PTR ds:[rsi]
   140018e77:	call   FWORD PTR [rbx-0x31007e7f]
   140018e7d:	test   al,0xa8
   140018e7f:	(bad)  
   140018e80:	dec    ebx
   140018e82:	retf   
   140018e83:	(bad)  
   140018e84:	inc    edi
   140018e86:	(bad)  
   140018e87:	(bad)  
   140018e88:	inc    edx
   140018e8a:	ret    0xffff
   140018e8d:	mov    esi,0xb9ffffbe
   140018e92:	mov    ecx,0xb4b4ffff
   140018e97:	(bad)  
   140018e98:	push   QWORD PTR [rax-0x54000050]
   140018e9e:	stos   DWORD PTR es:[rdi],eax
   140018e9f:	(bad)  
   140018ea0:	jmp    QWORD PTR [rdi-0x5d000059]
   140018ea6:	movabs ds:0xd2d2feff9e9effff,al
   140018eaf:	inc    ebp
   140018eb1:	xchg   ebp,eax
   140018eb2:	xchg   ebp,eax
   140018eb3:	(bad)  
   140018eb4:	jge    0x140018f1b
   140018eb6:	inc    DWORD PTR gs:[rax]
   140018eb9:	add    BYTE PTR [rax],al
   140018ebb:	pop    QWORD PTR [rax]
   140018ebd:	add    BYTE PTR [rax],al
   140018ebf:	(bad)  
	...
   140018eec:	(bad)  
   140018eed:	(bad)  
   140018eee:	(bad)  
   140018eef:	mov    WORD PTR [rcx-0x50004e4f],?
   140018ef5:	scas   eax,DWORD PTR es:[rdi]
   140018ef6:	scas   eax,DWORD PTR es:[rdi]
   140018ef7:	call   QWORD PTR [rdi-0x32008081]
   140018efd:	test   eax,0xcfffffa9
   140018f02:	iret   
   140018f03:	(bad)  
   140018f04:	dec    ebx
   140018f06:	retf   
   140018f07:	(bad)  
   140018f08:	inc    edi
   140018f0a:	(bad)  
   140018f0b:	(bad)  
   140018f0c:	inc    edx
   140018f0e:	ret    0xffff
   140018f11:	mov    esi,0xbaffffbe
   140018f16:	mov    edx,0xb4b4ffff
   140018f1b:	(bad)  
   140018f1c:	push   QWORD PTR [rax-0x54000050]
   140018f22:	stos   DWORD PTR es:[rdi],eax
   140018f23:	(bad)  
   140018f24:	jmp    QWORD PTR [rdi-0x5d000059]
   140018f2a:	movabs ds:0x9494c1ffcbcbfbff,al
   140018f33:	(bad)  
   140018f34:	jl     0x140018f9a
   140018f36:	inc    DWORD PTR fs:[rax]
   140018f39:	add    BYTE PTR [rax],al
   140018f3b:	pop    QWORD PTR [rax]
   140018f3d:	add    BYTE PTR [rax],al
   140018f3f:	(bad)  
	...
   140018f6c:	cs cs mov ?,WORD PTR cs:[rsp+rsi*4-0x4e4e004c]
   140018f76:	mov    cl,0xff
   140018f78:	xchg   ebp,eax
   140018f79:	jge    0x140018ff8
   140018f7b:	dec    ebx
   140018f7d:	stos   DWORD PTR es:[rdi],eax
   140018f7e:	stos   DWORD PTR es:[rdi],eax
   140018f7f:	(bad)  
   140018f80:	call   rsp
   140018f82:	(bad)  
   140018f83:	(bad)  
   140018f84:	dec    edi
   140018f86:	iret   
   140018f87:	(bad)  
   140018f88:	dec    ebx
   140018f8a:	retf   
   140018f8b:	(bad)  
   140018f8c:	inc    edi
   140018f8e:	(bad)  
   140018f8f:	(bad)  
   140018f90:	inc    edx
   140018f92:	ret    0xffff
   140018f95:	mov    esi,0xbaffffbe
   140018f9a:	mov    edx,0xb4b4ffff
   140018f9f:	(bad)  
   140018fa0:	push   QWORD PTR [rax-0x54000050]
   140018fa6:	stos   DWORD PTR es:[rdi],eax
   140018fa7:	(bad)  
   140018fa8:	jmp    QWORD PTR [rdi-0x260a0059]
   140018fae:	fcos   
   140018fb0:	mov    edi,0x7aff9292
   140018fb5:	movsxd esp,DWORD PTR [rbx-0x1]
   140018fb8:	add    BYTE PTR [rax],al
   140018fba:	add    BYTE PTR [rdi+0x2f000000],cl
	...
   140018fec:	cmp    al,0x3c
   140018fee:	cmp    al,0x9d
   140018ff0:	mov    bh,0xb7
   140018ff2:	mov    bh,0xff
   140018ff4:	mov    ah,0xb4
   140018ff6:	mov    ah,0xff
   140018ff8:	xchg   ecx,eax
   140018ff9:	jnp    0x140019076
   140018ffb:	(bad)  
   140018ffc:	fadd   st(0),st
   140018ffe:	sar    bh,0xff
   140019001:	(bad)  
   140019003:	(bad)  
   140019004:	call   rsp
   140019006:	(bad)  
   140019007:	(bad)  
   140019008:	dec    edi
   14001900a:	iret   
   14001900b:	(bad)  
   14001900c:	dec    ebx
   14001900e:	retf   
   14001900f:	(bad)  
   140019010:	inc    edi
   140019012:	(bad)  
   140019013:	(bad)  
   140019014:	inc    edx
   140019016:	ret    0xffff
   140019019:	mov    esi,0xbaffffbe
   14001901e:	mov    edx,0xb4b4ffff
   140019023:	(bad)  
   140019024:	push   QWORD PTR [rax-0x53000050]
   14001902a:	lods   al,BYTE PTR ds:[rsi]
   14001902b:	push   rax
   14001902d:	fcmovu st,st(2)
   14001902f:	(bad)  
   140019030:	mov    esp,0x78ff9191
   140019035:	(bad)  
   14001903a:	add    BYTE PTR [rdi+0x2f000000],cl
	...
   14001906c:	pop    rsp
   14001906d:	pop    rsp
   14001906e:	pop    rsp
   14001906f:	enter  0xbaba,0xba
   140019073:	jmp    FWORD PTR [rbp-0x71005758]
   140019079:	jp     0x1400190f5
   14001907b:	jmp    rbx
   14001907d:	mov    edi,0xddddffff
   140019083:	(bad)  
   140019084:	(bad)  
   140019085:	(bad)  
   140019087:	(bad)  
   140019088:	call   rsp
   14001908a:	(bad)  
   14001908b:	(bad)  
   14001908c:	call   rax
   14001908e:	sar    bh,1
   140019090:	dec    ebx
   140019092:	retf   
   140019093:	(bad)  
   140019094:	inc    edi
   140019096:	(bad)  
   140019097:	(bad)  
   140019098:	inc    edx
   14001909a:	ret    0xffff
   14001909d:	mov    esi,0xbaffffbe
   1400190a2:	mov    edx,0xb4b4ffff
   1400190a7:	(bad)  
   1400190a8:	push   QWORD PTR [rax-0x29140050]
   1400190ae:	(bad)  
   1400190af:	(bad)  
   1400190b0:	mov    eax,0x77ff8f8f
   1400190b5:	(bad)  
   1400190ba:	add    BYTE PTR [rdi+0x2f000000],cl
	...
   1400190ec:	pop    rbp
   1400190ed:	pop    rbp
   1400190ee:	pop    rbp
   1400190ef:	enter  0xbcbc,0xbc
   1400190f3:	jmp    FWORD PTR [rsi-0x73005657]
   1400190f9:	jns    0x140019174
   1400190fb:	jmp    rbx
   1400190fd:	retf   
   1400190fe:	retf   
   1400190ff:	(bad)  
   140019100:	jmp    rcx
   140019102:	loope  0x140019103
   140019104:	(bad)  
   140019105:	fstp   st(5)
   140019107:	(bad)  
   140019108:	(bad)  
   140019109:	(bad)  
   14001910b:	(bad)  
   14001910c:	call   rsp
   14001910e:	(bad)  
   14001910f:	(bad)  
   140019110:	call   rax
   140019112:	sar    bh,1
   140019114:	dec    ebx
   140019116:	retf   
   140019117:	(bad)  
   140019118:	inc    edi
   14001911a:	(bad)  
   14001911b:	(bad)  
   14001911c:	inc    edx
   14001911e:	ret    0xffff
   140019121:	mov    esi,0xbaffffbe
   140019126:	mov    edx,0xb4b4ffff
   14001912b:	jmp    rdi
   14001912d:	rcl    ebx,cl
   14001912f:	push   QWORD PTR [rsi+0x75ff8e8e]
   140019135:	(bad)  
   140019136:	(bad)  
   140019137:	inc    DWORD PTR [rax]
   140019139:	add    BYTE PTR [rax],al
   14001913b:	pop    QWORD PTR [rax]
   14001913d:	add    BYTE PTR [rax],al
   14001913f:	(bad)  
	...
   14001916c:	pop    rsi
   14001916d:	pop    rsi
   14001916e:	pop    rsi
   14001916f:	enter  0xbfbf,0xbf
   140019173:	jmp    FWORD PTR [rdi-0x77005455]
   140019179:	ja     0x1400191f2
   14001917b:	jmp    rdx
   14001917d:	(bad)  
   14001917e:	(bad)  
   14001917f:	(bad)  
   140019180:	jmp    rsi
   140019182:	out    0xff,al
   140019184:	jmp    rcx
   140019186:	loope  0x140019187
   140019188:	(bad)  
   140019189:	fstp   st(5)
   14001918b:	(bad)  
   14001918c:	(bad)  
   14001918d:	(bad)  
   14001918f:	(bad)  
   140019190:	call   rsp
   140019192:	(bad)  
   140019193:	(bad)  
   140019194:	call   rax
   140019196:	sar    bh,1
   140019198:	dec    ebx
   14001919a:	retf   
   14001919b:	(bad)  
   14001919c:	inc    edi
   14001919e:	(bad)  
   14001919f:	(bad)  
   1400191a0:	inc    ebx
   1400191a2:	ret    
   1400191a3:	(bad)  
   1400191a4:	(bad)  
   1400191a5:	mov    esi,0xbaffffbe
   1400191aa:	mov    edx,0xd0d0e2ff
   1400191af:	push   QWORD PTR [rdx+0x74ff8c8c]
   1400191b5:	(bad)  
   1400191b6:	(bad)  
   1400191b7:	inc    DWORD PTR [rax]
   1400191b9:	add    BYTE PTR [rax],al
   1400191bb:	pop    QWORD PTR [rax]
   1400191bd:	add    BYTE PTR [rax],al
   1400191bf:	(bad)  
	...
   1400191ec:	pop    rsi
   1400191ed:	pop    rsi
   1400191ee:	pop    rsi
   1400191ef:	retf   0xc1c1
   1400191f2:	sar    edi,0xb0
   1400191f5:	lods   eax,DWORD PTR ds:[rsi]
   1400191f6:	lods   eax,DWORD PTR ds:[rsi]
   1400191f7:	inc    DWORD PTR [rbp-0x1c00898a]
   1400191fd:	(bad)  
   1400191fe:	(bad)  
   1400191ff:	(bad)  
   140019200:	(bad)  
   140019201:	jmp    0x1400191ee
   140019203:	(bad)  
   140019204:	jmp    rsi
   140019206:	out    0xff,al
   140019208:	jmp    rdx
   14001920a:	loop   0x14001920b
   14001920c:	mov    esp,0xa6ff5c78
   140019211:	(bad)  
   140019212:	xor    eax,0x1d60bcff
   140019217:	(bad)  
   140019218:	mov    esp,0xbfff2360
   14001921d:	gs xor bh,bh
   140019220:	ret    0x4a6d
   140019223:	push   rdx
   140019225:	mov    al,0xaa
   140019227:	(bad)  
   140019228:	(bad)  
   140019229:	mov    esi,0xbfd7ffbe
   14001922e:	mov    edi,0x8b8bafff
   140019233:	push   QWORD PTR [rdx+0x60]
   140019236:	(bad)  
   140019237:	inc    DWORD PTR [rax]
   140019239:	add    BYTE PTR [rax],al
   14001923b:	lea    eax,[rax]
   14001923d:	add    BYTE PTR [rax],al
   14001923f:	(bad)  
   140019240:	add    BYTE PTR [rax],al
   140019242:	add    BYTE PTR [rcx],al
	...
   14001926c:	ja     0x1400192e5
   14001926e:	ja     0x140019262
   140019270:	(bad)
   140019273:	jmp    FWORD PTR [rbp-0x7c005657]
   140019279:	je     0x1400192ef
   14001927b:	(bad)  
   14001927c:	push   rsp
   14001927e:	hlt    
   14001927f:	(bad)  
   140019280:	push   rax
   140019282:	lock (bad) 
   140019284:	(bad)  
   140019285:	jmp    0x140019272
   140019287:	(bad)  
   140019288:	jmp    rsi
   14001928a:	out    0xff,al
   14001928c:	fldenv [rcx-0x71290072]
   140019292:	pop    rbx
   140019293:	push   rsp
   140019295:	mov    dh,0x78
   140019297:	(bad)  
   140019298:	jmp    0x12a00ec3f
   14001929d:	movabs eax,ds:0x53b9ff1575d3ff58
   1400192a6:	add    bh,bh
   1400192a8:	mov    ecx,0xbeff305d
   1400192ad:	xchg   ebx,eax
   1400192ae:	xchg   edi,edi
   1400192b0:	lods   al,BYTE PTR ds:[rsi]
   1400192b1:	mov    DWORD PTR [rcx+0x5f5f71ff],ecx
   1400192b7:	inc    DWORD PTR [rax]
   1400192b9:	add    BYTE PTR [rax],al
   1400192bb:	xchg   edi,eax
   1400192bc:	add    BYTE PTR [rax],al
   1400192be:	add    BYTE PTR [rbx+0x0],dl
   1400192c1:	add    BYTE PTR [rax],al
   1400192c3:	(bad)  
   1400192c4:	add    BYTE PTR [rax],al
   1400192c6:	add    BYTE PTR [rip+0x13000000],ah        # 0x1530192cc
   1400192cc:	add    BYTE PTR [rax],al
   1400192ce:	add    BYTE PTR [rax+rax*1],al
	...
   1400192e9:	add    BYTE PTR [rax],al
   1400192eb:	add    BYTE PTR [rsi+0x7e],bh
   1400192ee:	jle    0x1400192ef
   1400192f0:	mov    edi,0x9ba1ffc7
   1400192f6:	fwait
   1400192f7:	(bad)  
   1400192f8:	jg     0x14001936c
   1400192fa:	jb     0x1400192fb
   1400192fc:	(bad)  
   1400192fd:	clc    
   1400192fe:	clc    
   1400192ff:	(bad)  
   140019300:	push   rsp
   140019302:	hlt    
   140019303:	(bad)  
   140019304:	push   rax
   140019306:	lock (bad) 
   140019308:	(bad)  
   140019309:	jmp    0x1400192f6
   14001930b:	(bad)  
   14001930c:	jmp    rsi
   14001930e:	out    0xff,al
   140019310:	in     al,dx
   140019311:	ret    0xffb8
   140019314:	(bad)  
   140019315:	jnp    0x140019363
   140019317:	(bad)  
   140019318:	(bad)  
   140019319:	fild   QWORD PTR [rbx-0x602a0301]
   14001931f:	(bad)  
   140019320:	jmp    0x1400192c6
   140019322:	pop    rbp
   140019323:	(bad)  
   140019324:	fimul  WORD PTR [rbx+0x75d3ff37]
   14001932a:	adc    eax,0x25bc0ff
   14001932f:	jmp    FWORD PTR [rbx+0x65ff114e]
   140019335:	cmp    DWORD PTR [rip+0x40df7],esp        # 0x14005a132
   14001933b:	mov    dh,0x0
   14001933d:	add    BYTE PTR [rax],al
   14001933f:	fwait
   140019340:	add    BYTE PTR [rax],al
   140019342:	add    BYTE PTR [rbp+0x7a000000],cl
   140019348:	add    BYTE PTR [rax],al
   14001934a:	add    BYTE PTR [rbp+0x0],dl
   14001934d:	add    BYTE PTR [rax],al
   14001934f:	xor    DWORD PTR [rax],eax
   140019351:	add    BYTE PTR [rax],al
   140019353:	sbb    BYTE PTR [rax],al
   140019355:	add    BYTE PTR [rax],al
   140019357:	or     DWORD PTR [rax],eax
   140019359:	add    BYTE PTR [rax],al
   14001935b:	add    DWORD PTR [rax],eax
	...
   140019369:	add    BYTE PTR [rax],al
   14001936b:	add    DWORD PTR [rdi+0x7f],edi
   14001936e:	jg     0x14001936f
   140019370:	retf   0xcaca
   140019373:	jmp    QWORD PTR [rcx+0x7cff9c9c]
   140019379:	jno    0x1400193ec
   14001937b:	(bad)  
   14001937c:	(bad)  
   14001937d:	std    
   14001937e:	std    
   14001937f:	(bad)  
   140019380:	(bad)  
   140019381:	stc    
   140019382:	stc    
   140019383:	(bad)  
   140019384:	push   rsp
   140019386:	hlt    
   140019387:	(bad)  
   140019388:	push   rax
   14001938a:	lock (bad) 
   14001938c:	(bad)  
   14001938d:	jmp    0x14001937a
   14001938f:	(bad)  
   140019390:	jmp    rdi
   140019392:	out    0xff,eax
   140019394:	in     al,dx
   140019395:	ret    0xffb8
   140019398:	mov    edi,0xf2ff4c7c
   14001939d:	fldenv [rsi-0x5c280101]
   1400193a3:	(bad)  
   1400193a4:	stc    
   1400193a5:	ret    0xff8a
   1400193a8:	out    dx,al
   1400193a9:	stos   BYTE PTR es:[rdi],al
   1400193aa:	addr32 jmp rdx
   1400193ad:	xchg   ebx,eax
   1400193ae:	rex.XB call r14
   1400193b1:	jns    0x1400193d0
   1400193b3:	inc    edi
   1400193b5:	movsxd eax,DWORD PTR [rip+0x54db1ff]        # 0x1454f45ba
   1400193bb:	push   QWORD PTR [rbx-0x6700fdb2]
   1400193c1:	cmp    al,0x0
   1400193c3:	test   DWORD PTR [rsi+0x17],0xd100
   1400193ca:	add    BYTE PTR [rcx-0x7b000000],ah
   1400193d0:	add    BYTE PTR [rax],al
   1400193d2:	add    BYTE PTR [rcx+0x0],ah
   1400193d5:	add    BYTE PTR [rax],al
   1400193d7:	cmp    eax,0x1f000000
   1400193dc:	add    BYTE PTR [rax],al
   1400193de:	add    BYTE PTR [rbx],cl
   1400193e0:	add    BYTE PTR [rax],al
   1400193e2:	add    BYTE PTR [rdx],al
   1400193e4:	add    BYTE PTR [rax],al
   1400193e6:	add    BYTE PTR [rax],al
   1400193e8:	add    BYTE PTR [rax],al
   1400193ea:	add    BYTE PTR [rcx+rax*4],al
   1400193ed:	add    DWORD PTR [rcx-0x33333301],0x9d9da1ff
   1400193f7:	(bad)  
   1400193f8:	jns    0x140019469
   1400193fa:	outs   dx,DWORD PTR ds:[rsi]
   1400193fb:	(bad)  
   1400193fc:	(bad)  
   1400193fd:	(bad)  
   1400193fe:	(bad)  
   1400193ff:	(bad)  
   140019400:	(bad)  
   140019401:	std    
   140019402:	std    
   140019403:	(bad)  
   140019404:	(bad)  
   140019405:	stc    
   140019406:	stc    
   140019407:	(bad)  
   140019408:	push   rsp
   14001940a:	hlt    
   14001940b:	(bad)  
   14001940c:	push   rax
   14001940e:	lock (bad) 
   140019410:	(bad)  
   140019411:	in     al,dx
   140019412:	in     al,dx
   140019413:	(bad)  
   140019414:	jmp    rdi
   140019416:	out    0xff,eax
   140019418:	jmp    rdx
   14001941a:	loop   0x14001941b
   14001941c:	fstp   DWORD PTR [rsi-0x7b390075]
   140019422:	pop    rax
   140019423:	jmp    rsi
   140019425:	mov    ebp,0xdcffff8a
   14001942a:	test   eax,0x91c8fbff
   14001942f:	push   rcx
   140019431:	mov    cl,0x70
   140019433:	jmp    rbp
   140019435:	cdq    
   140019436:	rex.WR jmp rdx
   140019439:	xchg   ebx,eax
   14001943a:	rex.XB (bad) 
   14001943c:	fisttp QWORD PTR [rax+0x75d3ff32]
   140019442:	adc    eax,0x563c7ff
   140019447:	jmp    QWORD PTR [rbp+0x5cfb0044]
   14001944d:	and    DWORD PTR [rax],eax
   14001944f:	fcomp  QWORD PTR [rcx+rcx*1]
   140019452:	add    BYTE PTR [rbx-0x71000000],dh
   140019458:	add    BYTE PTR [rax],al
   14001945a:	add    BYTE PTR [rbx+0x0],ch
   14001945d:	add    BYTE PTR [rax],al
   14001945f:	add    BYTE PTR [rax],al
   140019462:	add    BYTE PTR [rcx],bl
   140019464:	add    BYTE PTR [rax],al
   140019466:	add    BYTE PTR [rcx+riz*1],al
   140019469:	and    DWORD PTR [rcx],esp
   14001946b:	sbb    DWORD PTR [rdx-0x30007d7e],eax
   140019471:	iret   
   140019472:	iret   
   140019473:	jmp    QWORD PTR [rax-0x78006263]
   140019479:	add    BYTE PTR [rax-0x1],0xff
   140019480:	(bad)  
   140019481:	(bad)  
   140019482:	(bad)  
   140019483:	(bad)  
   140019484:	(bad)  
   140019485:	std    
   140019486:	std    
   140019487:	(bad)  
   140019488:	(bad)  
   140019489:	stc    
   14001948a:	stc    
   14001948b:	(bad)  
   14001948c:	push   rsp
   14001948e:	hlt    
   14001948f:	(bad)  
   140019490:	push   rax
   140019492:	lock (bad) 
   140019494:	(bad)  
   140019495:	in     al,dx
   140019496:	in     al,dx
   140019497:	(bad)  
   140019498:	jmp    rdi
   14001949a:	out    0xff,eax
   14001949c:	jmp    rdx
   14001949e:	loop   0x14001949f
   1400194a0:	(bad)  
   1400194a1:	(bad)  
   1400194a3:	jmp    rsi
   1400194a5:	mov    al,0xa3
   1400194a7:	(bad)  
   1400194a8:	mov    edi,0xd9ff4d74
   1400194ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400194ae:	je     0x1400194af
   1400194b0:	jmp    rcx
   1400194b2:	scas   al,BYTE PTR es:[rdi]
   1400194b3:	(bad)  
   1400194b4:	std    
   1400194b5:	(bad)  
   1400194b6:	(bad)  
   1400194b7:	(bad)  
   1400194b8:	stc    
   1400194b9:	mov    edi,0xacefff86
   1400194be:	imul   edi,edi,0xff519ce7
   1400194c4:	fimul  WORD PTR [rbx+0x78d5ff37]
   1400194ca:	sbb    bh,bh
   1400194cc:	int3   
   1400194cd:	imul   ecx,DWORD PTR [rdx],0x50b6ff
   1400194d3:	push   QWORD PTR [rcx+0x2a]
   1400194d6:	add    ch,ah
   1400194d8:	(bad)  
   1400194d9:	or     eax,0xbc00
   1400194de:	add    BYTE PTR [rbx+0x4e000000],cl
   1400194e4:	add    BYTE PTR [rax],al
   1400194e6:	add    BYTE PTR [rbx],dl
   1400194e8:	sub    eax,0xac492d2d
   1400194ed:	lods   al,BYTE PTR ds:[rsi]
   1400194ee:	lods   al,BYTE PTR ds:[rsi]
   1400194ef:	call   rdx
   1400194f1:	rcl    dl,cl
   1400194f3:	dec    DWORD PTR [rsi-0x69007576]
   1400194f9:	xchg   ecx,eax
   1400194fa:	xchg   ecx,eax
   1400194fb:	(bad)  
   1400194fc:	(bad)  
   1400194fd:	(bad)  
   1400194fe:	(bad)  
   1400194ff:	(bad)  
   140019500:	(bad)  
   140019501:	(bad)  
   140019502:	(bad)  
   140019503:	(bad)  
   140019504:	(bad)  
   140019505:	(bad)  
   140019506:	(bad)  
   140019507:	(bad)  
   140019508:	(bad)  
   140019509:	std    
   14001950a:	std    
   14001950b:	(bad)  
   14001950c:	(bad)  
   14001950d:	stc    
   14001950e:	stc    
   14001950f:	(bad)  
   140019510:	push   rsp
   140019512:	hlt    
   140019513:	(bad)  
   140019514:	push   rax
   140019516:	lock (bad) 
   140019518:	(bad)  
   140019519:	in     al,dx
   14001951a:	in     al,dx
   14001951b:	(bad)  
   14001951c:	jmp    rdi
   14001951e:	out    0xff,eax
   140019520:	jmp    rdx
   140019522:	loop   0x140019523
   140019524:	(bad)  
   140019525:	(bad)  
   140019527:	(bad)  
   140019528:	(bad)  
   140019529:	(bad)  
   14001952b:	push   QWORD PTR [rdx+riz*4+0x5ca1ff9c]
   140019532:	cmp    al,0xff
   140019534:	fbstp  TBYTE PTR [rax-0x24000083]
   14001953a:	test   al,0xff
   14001953c:	call   rax
   14001953e:	popf   
   14001953f:	(bad)  
   140019540:	cli    
   140019541:	ret    0xff8b
   140019544:	icebp  
   140019545:	mov    cl,0x70
   140019547:	(bad)  
   140019548:	jmp    0x12200edee
   14001954d:	nop
   14001954e:	ds (bad) 
   140019550:	fiadd  DWORD PTR [rcx-0x762200d8]
   140019556:	xor    al,0xff
   140019558:	ret    0x2468
   14001955b:	inc    DWORD PTR [rsi+0x17]
   14001955e:	add    cl,dl
   140019560:	add    BYTE PTR [rax],al
   140019562:	add    BYTE PTR [rbp+0x0],bh
   140019565:	add    BYTE PTR [rax],al
   140019567:	es sub eax,0xae492d2d
   14001956d:	scas   al,BYTE PTR es:[rdi]
   14001956e:	scas   al,BYTE PTR es:[rdi]
   14001956f:	call   rbp
   140019571:	(bad)  
   140019572:	(bad)  
   140019573:	inc    DWORD PTR [rdi-0x6c007b7c]
   140019579:	nop
   14001957a:	nop
   14001957b:	(bad)  
   14001957c:	(bad)  
   14001957d:	(bad)  
   14001957e:	(bad)  
   14001957f:	(bad)  
   140019580:	(bad)  
   140019581:	(bad)  
   140019582:	(bad)  
   140019583:	(bad)  
   140019584:	(bad)  
   140019585:	(bad)  
   140019586:	(bad)  
   140019587:	(bad)  
   140019588:	(bad)  
   140019589:	(bad)  
   14001958a:	(bad)  
   14001958b:	(bad)  
   14001958c:	(bad)  
   14001958d:	(bad)  
   14001958e:	(bad)  
   14001958f:	(bad)  
   140019590:	(bad)  
   140019591:	stc    
   140019592:	stc    
   140019593:	(bad)  
   140019594:	push   rsp
   140019596:	hlt    
   140019597:	(bad)  
   140019598:	push   rax
   14001959a:	lock (bad) 
   14001959c:	(bad)  
   14001959d:	in     al,dx
   14001959e:	in     al,dx
   14001959f:	(bad)  
   1400195a0:	jmp    rdi
   1400195a2:	out    0xff,eax
   1400195a4:	jmp    rdx
   1400195a6:	loop   0x1400195a7
   1400195a8:	(bad)  
   1400195a9:	(bad)  
   1400195ab:	push   QWORD PTR [rcx-0x65005657]
   1400195b1:	add    BYTE PTR [rax+0x3a5a93ff],0xff
   1400195b8:	fldcw  WORD PTR [rbp-0x13000086]
   1400195be:	mov    ecx,0xacdfffff
   1400195c3:	(bad)  
   1400195c4:	call   rdx
   1400195c6:	lahf   
   1400195c7:	(bad)  
   1400195c8:	cld    
   1400195c9:	(bad)  
   1400195ca:	nop
   1400195cb:	push   rbp
   1400195cd:	mov    ecx,0xbaf4ff7c
   1400195d2:	jl     0x1400195d3
   1400195d4:	cld    
   1400195d5:	enter  0xff92,0xf3
   1400195d9:	mov    ah,0x75
   1400195db:	jmp    FWORD PTR [rdi+0xfb1f59]
   1400195e1:	add    BYTE PTR [rax],al
   1400195e3:	test   DWORD PTR [rax],eax
   1400195e5:	add    BYTE PTR [rax],al
   1400195e7:	sub    ch,BYTE PTR [rip+0xffffffffb0482d2d]        # 0xf049c31a
   1400195ed:	mov    al,0xb0
   1400195ef:	call   rdi
   1400195f1:	xlat   BYTE PTR ds:[rbx]
   1400195f2:	xlat   BYTE PTR ds:[rbx]
   1400195f3:	inc    DWORD PTR [rbp+0x76ff8484]
   1400195f9:	jae    0x14001966e
   1400195fb:	call   QWORD PTR [rbx-0x4f006f70]
   140019601:	lods   al,BYTE PTR ds:[rsi]
   140019602:	lods   al,BYTE PTR ds:[rsi]
   140019603:	inc    ebx
   140019605:	mov    edi,0xdbddffbf
   14001960a:	(bad)  
   14001960c:	div    esi
   14001960e:	idiv   bh
   140019610:	(bad)  
   140019611:	(bad)  
   140019612:	(bad)  
   140019613:	(bad)  
   140019614:	(bad)  
   140019615:	stc    
   140019616:	stc    
   140019617:	(bad)  
   140019618:	push   rbp
   14001961a:	cmc    
   14001961b:	(bad)  
   14001961c:	push   rax
   14001961e:	lock (bad) 
   140019620:	(bad)  
   140019621:	in     al,dx
   140019622:	in     al,dx
   140019623:	(bad)  
   140019624:	jmp    rdi
   140019626:	out    0xff,eax
   140019628:	jmp    rdx
   14001962a:	loop   0x14001962b
   14001962c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001962d:	pushf  
   14001962e:	pushf  
   14001962f:	call   QWORD PTR [rdi+0x66ff7e7e]
   140019635:	rex.RX cmp edi,r15d
   140019638:	leave  
   140019639:	ins    BYTE PTR es:[rdi],dx
   14001963a:	sbb    eax,0x1e76ceff
   14001963f:	call   rdx
   140019641:	fwait
   140019642:	(bad)  
   140019643:	(bad)  
   140019644:	stc    
   140019645:	in     al,0xb1
   140019647:	(bad)  
   140019648:	jmp    rbx
   14001964a:	mov    al,0xff
   14001964c:	call   rbp
   14001964e:	movabs ds:0xbce9ffffb5e8ffff,al
   140019657:	(bad)  
   140019658:	(bad)  
   140019659:	fsub   DWORD PTR [rbp+0x457bcaff]
   14001965f:	inc    DWORD PTR [rax]
   140019661:	add    BYTE PTR [rax],al
   140019663:	(bad)  
   140019664:	add    BYTE PTR [rax],al
   140019666:	add    BYTE PTR [rbx],bl
   140019668:	(bad)  
   140019669:	(bad)  
   14001966a:	(bad)  
   14001966b:	rex.RB mov r10b,0xb2
   14001966e:	mov    dl,0xff
   140019670:	fcmovnu st,st(3)
   140019672:	(bad)  
   140019674:	scas   al,BYTE PTR es:[rdi]
   140019675:	scas   al,BYTE PTR es:[rdi]
   140019676:	scas   al,BYTE PTR es:[rdi]
   140019677:	jmp    QWORD PTR [rax-0x78006061]
   14001967d:	test   BYTE PTR [rdi+rdi*8-0x81817e],al
   140019684:	jb     0x1400196f2
   140019686:	ins    BYTE PTR es:[rdi],dx
   140019687:	push   QWORD PTR [rsi+0x6e]
   14001968a:	outs   dx,BYTE PTR ds:[rsi]
   14001968b:	(bad)  
   14001968c:	jns    0x1400196fd
   14001968e:	outs   dx,DWORD PTR ds:[rsi]
   14001968f:	inc    DWORD PTR [rdx+rdi*2-0x6a600086]
   140019696:	xchg   ebp,eax
   140019697:	(bad)  
   140019698:	mov    eax,0xc9ffadad
   14001969d:	mov    esp,0xd1e1ffbc
   1400196a2:	sar    edi,1
   1400196a4:	clc    
   1400196a5:	in     al,0xe4
   1400196a7:	(bad)  
   1400196a8:	jmp    rdi
   1400196aa:	out    0xff,eax
   1400196ac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400196ad:	cdq    
   1400196ae:	cdq    
   1400196af:	call   QWORD PTR [rbp+rdi*2+0x404cff7d]
   1400196b6:	cmp    al,0xf1
   1400196b8:	mov    bh,BYTE PTR [rcx+rdx*1]
   1400196bb:	xlat   BYTE PTR ds:[rbx]
   1400196bc:	retf   
   1400196bd:	js     0x1400196f6
   1400196bf:	(bad)  
   1400196c0:	fld    DWORD PTR [rbx+0x6bc6ff30]
   1400196c6:	sbb    edi,edi
   1400196c8:	(bad)  [rbx-0x561900cf]
   1400196ce:	pop    rsp
   1400196cf:	(bad)  
   1400196d0:	(bad)  
   1400196d1:	(bad)  
   1400196d2:	fcos   
   1400196d4:	(bad)  
   1400196d5:	(bad)  
   1400196d6:	out    dx,eax
   1400196d7:	(bad)  
   1400196d8:	stc    
   1400196d9:	fisubr WORD PTR [rbp+0x1a438cff]
   1400196df:	(bad)  
   1400196e0:	add    BYTE PTR [rax],al
   1400196e2:	add    BYTE PTR [rax+rax*1],ch
   1400196e5:	add    BYTE PTR [rax],al
   1400196e7:	or     BYTE PTR [rcx],dh
   1400196e9:	xor    DWORD PTR [rcx],esi
   1400196eb:	xor    bl,BYTE PTR [rbp+0x5d]
   1400196ee:	pop    rbp
   1400196ef:	ret    0x8b8b
   1400196f2:	mov    edx,esp
   1400196f4:	xchg   ecx,eax
   1400196f5:	xchg   ecx,eax
   1400196f6:	xchg   ecx,eax
   1400196f7:	jmp    FWORD PTR [rsi-0x3e005152]
   1400196fd:	rol    ecx,0xff
   140019700:	rcl    dl,cl
   140019702:	sar    bh,cl
   140019704:	iret   
   140019705:	iret   
   140019706:	iret   
   140019707:	inc    edx
   140019709:	rol    ecx,0xff
   14001970c:	mov    dh,0xb3
   14001970e:	mov    bl,0xff
   140019710:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019711:	movabs eax,ds:0x8790ff9c9ca1ffa1
   14001971a:	xchg   edi,edi
   14001971c:	mov    es,WORD PTR [rdx+0x7585ff82]
   140019722:	jne    0x140019723
   140019724:	mov    BYTE PTR [rdi+0x77],dh
   140019727:	dec    DWORD PTR [rbp-0x6c008384]
   14001972d:	add    DWORD PTR [rcx+0x7b7b91ff],0x3e3e45ff
   140019737:	out    0x0,al
   140019739:	add    BYTE PTR [rax],al
   14001973b:	fs push rbp
   14001973d:	sbb    al,0x0
   14001973f:	cmp    bl,BYTE PTR [rsi-0x415cf3c2]
   140019745:	addr32 sub esi,ecx
   140019748:	mov    ch,0x56
   14001974a:	adc    dh,dl
   14001974c:	xchg   ebx,eax
   14001974d:	(bad)  
   14001974e:	add    BYTE PTR [rax-0x29c2914e],dh
   140019754:	(bad)  
   140019755:	xchg   ecx,eax
   140019756:	pop    rsi
   140019757:	icebp  
   140019758:	sahf   
   140019759:	push   rcx
   14001975a:	and    ebp,DWORD PTR [rsi+0x2800143d]
   140019760:	add    BYTE PTR [rax],al
   140019762:	add    BYTE PTR [rax],cl
   140019764:	add    BYTE PTR [rax],al
   140019766:	add    BYTE PTR [rcx],al
	...
   140019778:	xor    DWORD PTR [rcx],esi
   14001977a:	xor    DWORD PTR [rdx],esi
   14001977c:	(bad)  
   14001977d:	(bad)  
   14001977e:	(bad)  
   14001977f:	xor    BYTE PTR [r8],r14b
   140019782:	xor    BYTE PTR [rdi-0x58a2a2a3],al
   140019788:	jo     0x1400197fa
   14001978a:	jo     0x140019752
   14001978c:	test   BYTE PTR [rsp+rax*4-0x6e6e6e0f],al
   140019793:	jmp    QWORD PTR [rdx-0x3a005d5e]
   140019799:	(bad)
   14001979c:	ret    0xc2c2
   14001979f:	inc    eax
   1400197a1:	rol    al,0xff
   1400197a4:	mov    dh,0xb4
   1400197a6:	mov    ah,0xff
   1400197a8:	scas   al,BYTE PTR es:[rdi]
   1400197a9:	stos   BYTE PTR es:[rdi],al
   1400197aa:	stos   BYTE PTR es:[rdi],al
   1400197ab:	jmp    QWORD PTR [rbp-0x5d006263]
   1400197b1:	cwde   
   1400197b2:	cwde   
   1400197b3:	dec    DWORD PTR [rax+rcx*2+0x48]
   1400197b7:	(bad)  
   1400197b8:	add    BYTE PTR [rax],al
   1400197ba:	add    BYTE PTR [rdx],dh
   1400197bc:	add    BYTE PTR [rax],al
   1400197be:	add    BYTE PTR [rip+0x0],cl        # 0x1400197c4
   1400197c4:	nop
   1400197c5:	xor    BYTE PTR [rax],al
   1400197c7:	adc    DWORD PTR [rax+0x12002d],ecx
   1400197cd:	add    BYTE PTR [rax],al
   1400197cf:	add    al,BYTE PTR [rax]
   1400197d1:	add    BYTE PTR [rax],al
   1400197d3:	add    DWORD PTR [rax],eax
	...
   140019811:	add    BYTE PTR [rax],al
   140019813:	add    BYTE PTR [rcx],dh
   140019815:	xor    DWORD PTR [rcx],esi
   140019817:	rex.X xor BYTE PTR [rax],sil
   14001981a:	xor    BYTE PTR [rsi+0x40],ah
   14001981d:	rex
   14001981e:	rex mov DWORD PTR [rbx+0x63],esp
   140019822:	movsxd esi,DWORD PTR [rdi-0x2a848485]
   140019828:	jnp    0x1400198a5
   14001982a:	jnp    0x14001981d
   14001982c:	pop    rbp
   14001982d:	pop    rbp
   14001982e:	pop    rbp
   14001982f:	mov    esp,0x903d3d3d
   140019834:	and    eax,0x422525
   140019839:	add    BYTE PTR [rax],al
   14001983b:	or     al,BYTE PTR [rax]
   14001983d:	add    BYTE PTR [rax],al
   14001983f:	add    al,BYTE PTR [rax]
	...
   1400198e5:	add    BYTE PTR [rax],al
   1400198e7:	add    bh,bh
   1400198e9:	(bad)  
   1400198ea:	(bad)  
   1400198eb:	(bad)  
   1400198ec:	(bad)  
   1400198ed:	(bad)  
   1400198ee:	(bad)  
   1400198ef:	jmp    rax
   1400198f1:	jg     0x1400198f2
   1400198f3:	inc    DWORD PTR [rax-0x7f0000f1]
   1400198f9:	add    bh,bh
   1400198fb:	inc    DWORD PTR [rax-0x7f00e100]
   140019901:	add    BYTE PTR [rbx],al
   140019903:	inc    DWORD PTR [rax-0x7f00fd00]
   140019909:	add    BYTE PTR [rbx],al
   14001990b:	inc    DWORD PTR [rax-0x7f00fd00]
   140019911:	add    BYTE PTR [rbx],al
   140019913:	inc    DWORD PTR [rax-0x7f00fd00]
   140019919:	add    BYTE PTR [rbx],al
   14001991b:	inc    DWORD PTR [rax-0x7f00fd00]
   140019921:	add    BYTE PTR [rbx],al
   140019923:	inc    DWORD PTR [rax-0x7f00fd00]
   140019929:	add    BYTE PTR [rbx],al
   14001992b:	inc    DWORD PTR [rax-0x7f00fd00]
   140019931:	add    BYTE PTR [rcx],al
   140019933:	inc    DWORD PTR [rax-0x7fc10000]
   140019939:	add    BYTE PTR [rax],al
   14001993b:	(bad)  
   14001993c:	add    BYTE PTR [rax],al
   14001993e:	add    BYTE PTR [rcx],al
	...
   14001995c:	lock add BYTE PTR [rdx],al
   14001995f:	(bad)  
   140019960:	jmp    rax
   140019962:	add    edi,edi
   140019964:	(bad)  
   140019965:	(bad)  
   140019966:	(bad)  
   140019967:	jmp    FWORD PTR [rax]
   140019969:	add    BYTE PTR [rax],al
   14001996b:	add    BYTE PTR [rax],dl
   14001996d:	add    BYTE PTR [rax],al
   14001996f:	add    BYTE PTR [rax],ah
   140019971:	add    BYTE PTR [rax],al
   140019973:	add    BYTE PTR [rcx],al
   140019975:	add    BYTE PTR [rax],ah
	...
   140019997:	add    al,0x0
   140019999:	add    BYTE PTR [rax],al
   14001999b:	or     eax,0x11000000
   1400199a0:	add    BYTE PTR [rax],al
   1400199a2:	add    BYTE PTR [rip+0x7000000],cl        # 0x1470199a8
   1400199a8:	add    BYTE PTR [rax],al
   1400199aa:	add    BYTE PTR [rcx],al
	...
   1400199d0:	add    BYTE PTR [rax],al
   1400199d2:	add    BYTE PTR [rdx],al
   1400199d4:	add    BYTE PTR [rax],al
   1400199d6:	add    BYTE PTR [rax],bl
   1400199d8:	add    BYTE PTR [rax],al
   1400199da:	add    BYTE PTR [rax+0x0],al
   1400199dd:	add    BYTE PTR [rax],al
   1400199df:	push   rbx
   1400199e0:	add    BYTE PTR [rax],al
   1400199e2:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400199e6:	add    BYTE PTR [rdx],bh
   1400199e8:	add    BYTE PTR [rax],al
   1400199ea:	add    BYTE PTR [rdx],ch
   1400199ec:	add    BYTE PTR [rax],al
   1400199ee:	add    BYTE PTR [rax+rax*1],bl
   1400199f1:	add    BYTE PTR [rax],al
   1400199f3:	sldt   WORD PTR [rax]
   1400199f6:	add    BYTE PTR [rip+0x1000000],al        # 0x1410199fc
	...
   140019a10:	sbb    DWORD PTR [rdx],ebx
   140019a12:	sbb    cl,BYTE PTR [rdi+rsi*1]
   140019a15:	(bad)  
   140019a16:	(bad)  
   140019a17:	je     0x140019a5b
   140019a19:	cmp    bh,BYTE PTR [rdx]
   140019a1b:	mov    dh,0x25
   140019a1d:	(bad)  
   140019a1e:	(bad)  
   140019a1f:	mov    ebp,0xaa0e0e0f
   140019a24:	add    DWORD PTR [rcx],eax
   140019a26:	add    DWORD PTR [rdx+0x7e000000],edx
   140019a2c:	add    BYTE PTR [rax],al
   140019a2e:	add    BYTE PTR [rdi+0x0],ah
   140019a31:	add    BYTE PTR [rax],al
   140019a33:	rex.WRB add BYTE PTR [r8],r8b
   140019a36:	add    BYTE PTR [rip+0xd000000],ch        # 0x14d019a3c
	...
   140019a50:	sub    eax,0x8c332e2e
   140019a55:	mov    WORD PTR [rdi+rdi*8-0x6b6b51],cs
   140019a5c:	mov    esp,0xa2ff9c9c
   140019a61:	test   DWORD PTR [rbp+0x58586cfe],eax
   140019a67:	repnz rex.B (bad) 
   140019a6a:	(bad)  
   140019a6b:	loope  0x140019a8a
   140019a6d:	sbb    bl,BYTE PTR [rdx]
   140019a6f:	(bad)
   140019a72:	or     BYTE PTR [rbx+0x6c000000],ah
   140019a78:	add    BYTE PTR [rax],al
   140019a7a:	add    BYTE PTR [rip+0x1000000],ah        # 0x141019a80
	...
   140019a90:	cs (bad) 
   140019a92:	(bad)  
   140019a93:	cmp    al,0x91
   140019a95:	xchg   ecx,eax
   140019a96:	xchg   ecx,eax
   140019a97:	sti    
   140019a98:	mov    ecx,0xfaff9c9c
   140019a9d:	ret    
   140019a9e:	ret    
   140019a9f:	push   rdx
   140019aa1:	mov    esi,0xbae6ffbe
   140019aa6:	mov    edx,0xb1b1daff
   140019aab:	dec    edx
   140019aad:	movabs ds:0x607f870708bffa3,eax
   140019ab6:	(bad)  
   140019ab7:	nop
   140019ab8:	add    BYTE PTR [rax],al
   140019aba:	add    BYTE PTR [rcx],dh
   140019abc:	add    BYTE PTR [rax],al
   140019abe:	add    BYTE PTR [rdx],al
	...
   140019ad0:	xor    esi,DWORD PTR [rsp+rsi*1]
   140019ad3:	push   rbx
   140019ad4:	movabs al,ds:0xffff9c9cbaffa0a0
   140019add:	enter  0xffc8,0xff
   140019ae1:	mov    esi,0xb2ffffbe
   140019ae6:	mov    dl,0xff
   140019ae8:	jmp    FWORD PTR [rsi-0x47000052]
   140019aee:	mov    eax,0xa0a0c8ff
   140019af3:	cld    
   140019af4:	(bad)  
   140019af5:	or     ecx,DWORD PTR [rbx]
   140019af7:	xchg   ebx,eax
   140019af8:	add    BYTE PTR [rax],al
   140019afa:	add    BYTE PTR [rdx],dh
   140019afc:	add    BYTE PTR [rax],al
   140019afe:	add    BYTE PTR [rdx],al
	...
   140019b10:	cmp    BYTE PTR [rax],bh
   140019b12:	cmp    BYTE PTR [rsi-0x5b],dl
   140019b15:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019b16:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019b17:	(bad)  
   140019b18:	mov    ecx,0xffff9f9f
   140019b1d:	(bad)  
   140019b1e:	(bad)  
   140019b1f:	(bad)  
   140019b20:	dec    eax
   140019b22:	enter  0xffff,0xbd
   140019b26:	mov    ebp,0xb2b2ffff
   140019b2b:	(bad)  
   140019b2c:	push   QWORD PTR [rdx-0x6241004e]
   140019b32:	popf   
   140019b33:	sti    
   140019b34:	or     al,0xa
   140019b36:	or     dl,BYTE PTR [rbx+0x32000000]
   140019b3c:	add    BYTE PTR [rax],al
   140019b3e:	add    BYTE PTR [rdx],al
	...
   140019b50:	pop    rdx
   140019b51:	pop    rbx
   140019b52:	pop    rbx
   140019b53:	ins    DWORD PTR es:[rdi],dx
   140019b54:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019b55:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019b56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019b57:	(bad)  
   140019b58:	mov    ebp,0xffffa6a6
   140019b5d:	loopne 0x140019b3f
   140019b5f:	(bad)  
   140019b60:	call   rsi
   140019b62:	fdivr  st,st(7)
   140019b64:	dec    ebp
   140019b66:	sar    edi,1
   140019b68:	inc    ebx
   140019b6a:	(bad)  
   140019b6b:	(bad)  
   140019b6c:	(bad)  
   140019b6d:	mov    edi,0x9cb8ffc0
   140019b72:	pushf  
   140019b73:	sti    
   140019b74:	or     al,0xa
   140019b76:	or     dl,BYTE PTR [rax+rax*1+0x340000]
   140019b7d:	add    BYTE PTR [rax],al
   140019b7f:	add    al,0x0
	...
   140019b8d:	add    BYTE PTR [rax],al
   140019b8f:	add    BYTE PTR [rdi+0x60],bl
   140019b92:	(bad)  
   140019b93:	jno    0x140019b3e
   140019b95:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019b96:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019b97:	(bad)  
   140019b98:	mov    ebx,0xffffabaa
   140019b9d:	jmp    0x140019b8b
   140019b9f:	jmp    rbx
   140019ba1:	mov    cl,0xa0
   140019ba3:	(bad)  
   140019ba4:	ficom  WORD PTR [rdi-0x6a1e008c]
   140019baa:	jnp    0x140019bab
   140019bac:	div    BYTE PTR [rsi-0x6851004e]
   140019bb2:	pushf  
   140019bb3:	sti    
   140019bb4:	or     BYTE PTR [rsi],al
   140019bb6:	(bad)  
   140019bb7:	lahf   
   140019bb8:	add    BYTE PTR [rax],al
   140019bba:	add    BYTE PTR [rdx+0x0],bl
   140019bbd:	add    BYTE PTR [rax],al
   140019bbf:	sub    eax,0x18000000
   140019bc4:	add    BYTE PTR [rax],al
   140019bc6:	add    BYTE PTR [rax],cl
   140019bc8:	add    BYTE PTR [rax],al
   140019bca:	add    BYTE PTR [rcx],al
   140019bcc:	add    BYTE PTR [rax],al
   140019bce:	add    BYTE PTR [rax],al
   140019bd0:	jns    0x140019c4b
   140019bd2:	jns    0x140019b5d
   140019bd4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019bd5:	movabs ds:0xfcffffb7b6c1ffa3,eax
   140019bde:	std    
   140019bdf:	(bad)  
   140019be0:	call   0x11f0147a1
   140019be5:	movabs al,ds:0x79d3ff5aa7e8ff63
   140019bee:	sub    edi,edi
   140019bf0:	movabs eax,ds:0xac0000e24fb335d
   140019bf9:	add    al,0x0
   140019bfb:	movabs al,ds:0x5e0000007f000000
   140019c04:	add    BYTE PTR [rax],al
   140019c06:	add    BYTE PTR [rdx],dh
   140019c08:	add    BYTE PTR [rax],al
   140019c0a:	add    BYTE PTR [rip+0x0],cl        # 0x140019c10
   140019c10:	movsxd esp,DWORD PTR [rsp+riz*2-0x72]
   140019c14:	stos   BYTE PTR es:[rdi],al
   140019c15:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019c16:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019c17:	(bad)  
   140019c18:	mov    esi,0xffffb9b9
   140019c1d:	(bad)  
   140019c1e:	(bad)  
   140019c1f:	(bad)  
   140019c20:	push   rax
   140019c22:	repz push rax
   140019c25:	(bad)  
   140019c26:	(bad)  
   140019c27:	jmp    rsi
   140019c29:	mov    ecx,0xb8edff99
   140019c2e:	(bad)  
   140019c2f:	(bad)  
   140019c30:	in     al,dx
   140019c31:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019c32:	pop    rcx
   140019c33:	call   rsp
   140019c35:	jl     0x140019c64
   140019c37:	jmp    FWORD PTR [rsp+rdx*2+0x2764f60a]
   140019c3e:	add    dl,bl
   140019c40:	sbb    cl,BYTE PTR [rax]
   140019c42:	add    BYTE PTR [rsi+0x6f000000],ch
   140019c48:	add    BYTE PTR [rax],al
   140019c4a:	add    BYTE PTR [rdx],ah
   140019c4c:	add    BYTE PTR [rax],al
   140019c4e:	add    BYTE PTR [rax],al
   140019c50:	push   0xffffffffada06969
   140019c55:	lods   al,BYTE PTR ds:[rsi]
   140019c56:	lods   al,BYTE PTR ds:[rsi]
   140019c57:	dec    eax
   140019c59:	(bad)
   140019c5c:	(bad)  
   140019c5d:	(bad)  
   140019c5e:	(bad)  
   140019c5f:	(bad)  
   140019c60:	(bad)  
   140019c61:	(bad)  
   140019c62:	(bad)  
   140019c63:	(bad)  
   140019c64:	push   rbp
   140019c66:	idiv   bh
   140019c68:	jmp    rdi
   140019c6a:	jmp    0x102c78a6e
   140019c6f:	dec    ecx
   140019c71:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019c72:	mov    edi,edi
   140019c74:	sti    
   140019c75:	rcr    DWORD PTR [rdi+rdi*8-0x7d3e08],1
   140019c7c:	out    0x98,al
   140019c7e:	inc    r9
   140019c81:	outs   dx,DWORD PTR ds:[rsi]
   140019c82:	sub    esi,esi
   140019c84:	add    BYTE PTR [rax],al
   140019c86:	add    BYTE PTR [rbx+0x0],bh
   140019c89:	add    BYTE PTR [rax],al
   140019c8b:	sub    BYTE PTR [rax],al
   140019c8d:	add    BYTE PTR [rax],al
   140019c8f:	add    BYTE PTR [rdi+0x77],dh
   140019c92:	ja     0x140019c3d
   140019c94:	mov    edx,0x99ffbaba
   140019c99:	xchg   edi,eax
   140019c9a:	xchg   edi,eax
   140019c9b:	(bad)  
   140019c9c:	mov    ecx,0xd3ffb6b6
   140019ca1:	rcl    al,1
   140019ca3:	jmp    rbp
   140019ca5:	fstp   st(5)
   140019ca7:	push   rbx
   140019ca9:	loop   0x140019c8d
   140019cab:	(bad)  
   140019cac:	(bad)  
   140019cad:	call   0x1bf9a9c9d
   140019cb2:	jp     0x140019cb1
   140019cb4:	(bad)  
   140019cb5:	js     0x140019cee
   140019cb7:	std    
   140019cb8:	jmp    0x139011474
   140019cbd:	iret   
   140019cbe:	xchg   ebx,eax
   140019cbf:	(bad)  
   140019cc0:	(bad)  
   140019cc1:	jmp    0x140029b81
   140019cc6:	add    BYTE PTR [rax+0x0],cl
   140019cc9:	add    BYTE PTR [rax],al
   140019ccb:	(bad)  
   140019ccc:	add    BYTE PTR [rax],al
   140019cce:	add    BYTE PTR [rax],al
   140019cd0:	push   rax
   140019cd1:	push   rax
   140019cd2:	push   rax
   140019cd3:	push   rax
   140019cd4:	xchg   edx,eax
   140019cd5:	xchg   edx,eax
   140019cd6:	xchg   edx,eax
   140019cd7:	movabs al,ds:0xdb868687bc7b7b7b
   140019ce0:	xchg   ecx,eax
   140019ce1:	mov    cs,WORD PTR [rsi-0x65656007]
   140019ce7:	jmp    FWORD PTR [rax-0x54006061]
   140019ced:	lahf   
   140019cee:	movabs al,ds:0xa1c3ef1777783ff
   140019cf7:	imul   ebx,DWORD PTR [rbx-0x5a6cf8c1],0x4b
   140019cfe:	or     eax,0x4d78b099
   140019d03:	mov    BYTE PTR [rax],al
   140019d05:	add    BYTE PTR [rax],al
   140019d07:	adc    al,BYTE PTR [rax]
   140019d09:	add    BYTE PTR [rax],al
   140019d0b:	add    eax,0x0
	...
   140019d18:	xor    dh,BYTE PTR [rdx]
   140019d1a:	xor    al,BYTE PTR [rsi+rax*2]
   140019d1d:	rex.RXB
   140019d1e:	rex.RXB (bad) 
   140019d20:	jge    0x140019d9f
   140019d22:	jge    0x140019d62
   140019d24:	push   rdx
   140019d25:	push   rbx
   140019d26:	push   rbx
   140019d27:	ins    BYTE PTR es:[rdi],dx
   140019d28:	push   0x6a
   140019d2a:	push   0xffffffffffffff95
   140019d2c:	test   BYTE PTR [rsp+rax*4+0x59554fba],al
   140019d33:	mov    DWORD PTR [rax],eax
   140019d35:	add    BYTE PTR [rax],al
   140019d37:	adc    eax,DWORD PTR [rax]
   140019d39:	add    BYTE PTR [rax],al
   140019d3b:	add    eax,0x0
	...
   140019d90:	cmp    edi,0x1f000000
   140019d96:	sub    al,0x4b
   140019d98:	add    BYTE PTR [rdi],bl
   140019d9a:	mov    bh,bh
   140019d9c:	add    BYTE PTR [rdi],cl
   140019d9e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019d9f:	inc    DWORD PTR [rax]
   140019da1:	jl     0xd5109ea6
   140019da7:	inc    DWORD PTR [rax]
   140019da9:	pinsrw mm7,edi,0x0
   140019dad:	bswap  edx
   140019daf:	inc    DWORD PTR [rax]
   140019db1:	add    esp,eax
   140019db3:	inc    DWORD PTR [rax]
   140019db5:	add    DWORD PTR [rdx-0x57feff01],edi
   140019dbb:	inc    DWORD PTR [rax]
   140019dbd:	add    DWORD PTR [rbp-0x6efeff01],edx
   140019dc3:	inc    DWORD PTR [rax]
   140019dc5:	add    DWORD PTR [rdx-0x6be03f01],edx
   140019dcb:	(bad)  
   140019dcc:	(bad)  
   140019dcd:	dec    DWORD PTR [rdi+0x10000ff]
   140019dd3:	add    BYTE PTR [rcx],cl
   140019dd5:	add    BYTE PTR [rax],dh
   140019dd7:	xor    BYTE PTR [rax],dl
   140019dd9:	add    BYTE PTR [rcx],al
   140019ddb:	add    BYTE PTR [rax+rax*1],al
   140019dde:	push   0x1000006
   140019de3:	add    BYTE PTR [rax],ah
   140019de5:	and    BYTE PTR [rax],dl
   140019de7:	add    BYTE PTR [rcx],al
   140019de9:	add    BYTE PTR [rax+rax*1],al
   140019dec:	call   0x142019df3
   140019df1:	add    BYTE PTR [rax],dl
   140019df3:	adc    BYTE PTR [rax],dl
   140019df5:	add    BYTE PTR [rcx],al
   140019df7:	add    BYTE PTR [rax+rax*1],al
   140019dfa:	sub    BYTE PTR [rcx],al
   140019dfc:	add    BYTE PTR [rax],al
   140019dfe:	add    eax,DWORD PTR [rax]
   140019e00:	xor    BYTE PTR [rax],dh
   140019e02:	add    BYTE PTR [rax],al
   140019e04:	add    DWORD PTR [rax],eax
   140019e06:	or     BYTE PTR [rax],al
   140019e08:	test   al,0xe
   140019e0a:	add    BYTE PTR [rax],al
   140019e0c:	add    al,0x0
   140019e0e:	and    BYTE PTR [rax],ah
   140019e10:	add    BYTE PTR [rax],al
   140019e12:	add    DWORD PTR [rax],eax
   140019e14:	or     BYTE PTR [rax],al
   140019e16:	test   al,0x8
   140019e18:	add    BYTE PTR [rax],al
   140019e1a:	add    eax,0x101000
   140019e1f:	add    BYTE PTR [rcx],al
   140019e21:	add    BYTE PTR [rax],cl
   140019e23:	add    BYTE PTR [rax+0x5],ch
   140019e26:	add    BYTE PTR [rax],al
   140019e28:	(bad)  
   140019e29:	add    BYTE PTR [rax],dh
   140019e2b:	xor    BYTE PTR [rax],al
   140019e2d:	add    BYTE PTR [rcx],al
   140019e2f:	add    BYTE PTR [rax],ah
   140019e31:	add    BYTE PTR [rax+0x7000025],ch
   140019e37:	add    BYTE PTR [rax],ah
   140019e39:	and    BYTE PTR [rax],al
   140019e3b:	add    BYTE PTR [rcx],al
   140019e3d:	add    BYTE PTR [rax],ah
   140019e3f:	add    BYTE PTR [rax+0x8000010],ch
   140019e45:	add    BYTE PTR [rax],dl
   140019e47:	adc    BYTE PTR [rax],al
   140019e49:	add    BYTE PTR [rcx],al
   140019e4b:	add    BYTE PTR [rax],ah
   140019e4d:	add    BYTE PTR [rax+0x4],ch
   140019e50:	add    BYTE PTR [rax],al
   140019e52:	or     DWORD PTR [rax],eax
   140019e54:	add    BYTE PTR [rax],al
   140019e56:	add    BYTE PTR [rax],al
   140019e58:	add    al,BYTE PTR [rax]
   140019e5a:	add    al,0x0
   140019e5c:	sub    BYTE PTR [rax],al
   140019e5e:	add    BYTE PTR [rax],al
   140019e60:	and    BYTE PTR [rax],al
   140019e62:	add    BYTE PTR [rax],al
   140019e64:	add    BYTE PTR [rax],al
   140019e67:	add    BYTE PTR [rcx],al
   140019e69:	add    BYTE PTR [rax+rax*1],al
   140019e6c:	add    BYTE PTR [rax],al
   140019e6e:	add    BYTE PTR [rax],al
   140019e70:	add    BYTE PTR [rdx],0x0
	...
   140019e87:	add    BYTE PTR [rax],al
   140019e89:	add    BYTE PTR [rax+0x800000],al
   140019e8f:	add    BYTE PTR [rax],al
   140019e91:	add    BYTE PTR [rax+0x8000],0x0
   140019e98:	add    BYTE PTR [rax],0x80
   140019e9b:	add    BYTE PTR [rax-0x3fffff80],al
   140019ea1:	rol    al,0x0
   140019ea4:	add    BYTE PTR [rax+0x80],0xff
   140019eab:	add    BYTE PTR [rax],al
   140019ead:	inc    DWORD PTR [rax]
   140019eaf:	add    BYTE PTR [rax],al
   140019eb1:	(bad)  
   140019eb2:	inc    DWORD PTR [rax]
   140019eb4:	inc    DWORD PTR [rax]
   140019eb6:	add    BYTE PTR [rax],al
   140019eb8:	inc    DWORD PTR [rax]
   140019eba:	inc    DWORD PTR [rax]
   140019ebc:	(bad)  
   140019ebd:	inc    DWORD PTR [rax]
   140019ebf:	add    bh,bh
   140019ec1:	(bad)  
   140019ec2:	inc    DWORD PTR [rax]
	...
   14001a0c4:	(bad)  
   14001a0c5:	(bad)  
   14001a0c6:	(bad)  
   14001a0c7:	(bad)  
   14001a0c8:	(bad)  
   14001a0c9:	(bad)  
   14001a0ca:	(bad)  
   14001a0cb:	(bad)  
   14001a0cc:	(bad)  
   14001a0cd:	(bad)  
   14001a0ce:	(bad)  
   14001a0cf:	(bad)  
   14001a0d0:	jmp    rbx
   14001a0d2:	(bad)  
   14001a0d3:	(bad)  
   14001a0d4:	(bad)  
   14001a0d5:	(bad)  
   14001a0d7:	(bad)  
   14001a0d8:	(bad)  
   14001a0d9:	(bad)  
   14001a0db:	(bad)  
   14001a0dc:	(bad)  
   14001a0dd:	mov    ebx,0xbbffffff
   14001a0e2:	(bad)  
   14001a0e3:	(bad)  
   14001a0e4:	fbstp  TBYTE PTR [rdi-0x1]
   14001a0e7:	dec    edi
   14001a0e9:	ja     0x14001a0ea
   14001a0eb:	call   rsi
   14001a0ed:	out    dx,eax
   14001a0ee:	(bad)  
   14001a0ef:	(bad)  
   14001a0f0:	(bad)  
   14001a0f2:	(bad)  
   14001a0f3:	(bad)  
   14001a0f4:	fstp   st(7)
   14001a0f6:	(bad)  
   14001a0f7:	(bad)  
   14001a0f8:	ffreep st(0)
   14001a0fa:	jg     0x14001a0fb
   14001a0fc:	(bad)  
   14001a0fe:	(bad)  
   14001a0ff:	(bad)  
   14001a100:	(bad)  
   14001a102:	(bad)  
   14001a103:	(bad)  
   14001a104:	(bad)  
   14001a106:	(bad)  
   14001a107:	(bad)  
   14001a108:	fcomip st,st(7)
   14001a10a:	(bad)  
   14001a10b:	(bad)  
   14001a10c:	fucomip st,st(7)
   14001a10e:	(bad)  
   14001a10f:	(bad)  
   14001a110:	(bad)  
   14001a112:	(bad)  
   14001a113:	(bad)  
   14001a114:	fistp  QWORD PTR [rdi+0x7fdfffff]
   14001a11a:	(bad)  
   14001a11b:	(bad)  
   14001a11c:	fdivp  st(7),st
   14001a11e:	(bad)  
   14001a11f:	(bad)  
   14001a120:	(bad)  
   14001a122:	(bad)  
   14001a123:	(bad)  
   14001a124:	(bad)  
   14001a126:	(bad)  
   14001a127:	call   rdi
   14001a129:	(bad)  
   14001a12a:	(bad)  
   14001a12b:	dec    edi
   14001a12d:	(bad)  
   14001a12e:	(bad)  
   14001a12f:	(bad)  
   14001a130:	(bad)  
   14001a132:	(bad)  
   14001a133:	(bad)  
   14001a134:	(bad)  
   14001a135:	(bad)  
   14001a136:	(bad)  
   14001a137:	(bad)  
   14001a138:	(bad)  
   14001a139:	(bad)  
   14001a13a:	(bad)  
   14001a13b:	(bad)  
   14001a13c:	(bad)  
   14001a13d:	(bad)  
   14001a13e:	(bad)  
   14001a13f:	(bad)  
   14001a140:	(bad)  
   14001a141:	(bad)  
   14001a142:	(bad)  
   14001a143:	inc    DWORD PTR [rax]
   14001a145:	add    BYTE PTR [rax],al
   14001a147:	add    BYTE PTR [rax],al
   14001a149:	add    BYTE PTR [rdx],al
   14001a14b:	add    BYTE PTR [rcx],al
   14001a14d:	add    BYTE PTR [rax],ah
   14001a14f:	add    BYTE PTR [rax+0x0],al
   14001a152:	add    DWORD PTR [rax],eax
   14001a154:	add    al,0x0
   14001a156:	in     al,dx
   14001a157:	add    al,BYTE PTR [rax]
   14001a159:	add    BYTE PTR [rdx],cl
   14001a15b:	add    BYTE PTR [rax],al
   14001a15d:	add    BYTE PTR [rax],al
   14001a15f:	add    ch,cl
   14001a161:	dec    ch
   14001a163:	(bad)  
   14001a164:	fadd   DWORD PTR [rax]
   14001a166:	add    BYTE PTR [rax],al
   14001a168:	add    BYTE PTR [rax],al
   14001a16a:	add    DWORD PTR [rax],eax
   14001a16c:	add    BYTE PTR [rax],al
   14001a16e:	add    BYTE PTR [rax],al
   14001a170:	adc    DWORD PTR [rax],eax
   14001a172:	add    BYTE PTR [rax],al
   14001a174:	add    BYTE PTR [rax],al
   14001a176:	add    BYTE PTR [rax],al
   14001a178:	add    al,BYTE PTR [rax]
   14001a17a:	add    BYTE PTR [rax],al
   14001a17c:	sahf   
   14001a17d:	mov    al,0xad
   14001a17f:	mov    edi,0x7ec63ee1
   14001a184:	test   BYTE PTR [rbp+rdx*2+0x41a157d2],bl
   14001a18b:	mov    cl,0x6f
   14001a18d:	sbb    eax,0xbeb978d4
   14001a192:	iret   
   14001a193:	pop    rsi
   14001a194:	(bad)
   14001a197:	xchg   esi,eax
   14001a198:	mov    WORD PTR [rsp+rcx*2+0xd7],ss
	...
   14001a1b3:	add    BYTE PTR [rax+0xe000000],cl
   14001a1b9:	add    BYTE PTR [rax],al
   14001a1bb:	add    BYTE PTR [rax+0x18000000],bl
   14001a1c1:	add    BYTE PTR [rax],al
   14001a1c3:	add    BYTE PTR [rax+0xe000000],dh
   14001a1c9:	add    BYTE PTR [rax],al
   14001a1cb:	add    al,al
   14001a1cd:	add    BYTE PTR [rax],al
   14001a1cf:	add    BYTE PTR [rax],cl
	...
   14001a1d9:	add    BYTE PTR [rax],al
   14001a1db:	add    al,cl
   14001a1dd:	add    BYTE PTR [rax],al
   14001a1df:	add    BYTE PTR [rax+rax*1],cl
   14001a1e2:	add    BYTE PTR [rax],al
   14001a1e4:	add    BYTE PTR [rax],al
   14001a1e6:	add    BYTE PTR [rax],al
   14001a1e8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14001a1ec:	rex.WB add BYTE PTR [r8],al
	...
   14001a1f7:	add    BYTE PTR [rcx],al
   14001a1f9:	add    BYTE PTR [rax],al
   14001a1fb:	add    BYTE PTR [rbx],al
   14001a1fd:	add    BYTE PTR [rax],al
   14001a1ff:	add    BYTE PTR [rax+rax*1],cl
   14001a202:	add    BYTE PTR [rax],al
   14001a204:	(bad)  
   14001a205:	add    BYTE PTR [rax],al
   14001a207:	add    BYTE PTR [rax],dl
   14001a209:	add    BYTE PTR [rax],al
   14001a20b:	add    BYTE PTR [rax],bl
   14001a20d:	add    BYTE PTR [rax],al
   14001a20f:	add    BYTE PTR [rbp+0x0],cl
   14001a212:	push   rbp
   14001a213:	add    BYTE PTR [rcx+0x0],cl
	...
   14001a21e:	add    BYTE PTR [rax],al
   14001a220:	(bad)  
   14001a221:	add    BYTE PTR [rax],al
   14001a223:	add    BYTE PTR [rax],dl
   14001a225:	add    BYTE PTR [rax],al
   14001a227:	add    BYTE PTR [rbp+0x0],ah
   14001a22a:	outs   dx,BYTE PTR ds:[rsi]
   14001a22b:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301f731
   14001a231:	add    BYTE PTR [rax],al
   14001a233:	add    BYTE PTR [rax],al
   14001a235:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014001b000 <.reloc>:
   14001b000:	add    BYTE PTR [rax+0x1c0000],ah
   14001b006:	add    BYTE PTR [rax],al
   14001b008:	shl    BYTE PTR [rbp-0x5a275a38],0xe0
   14001b00f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b010:	call   0x148a7b0ba
   14001b015:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b016:	nop
   14001b017:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b018:	cwde   
   14001b019:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b01a:	add    BYTE PTR [rax],al
   14001b01c:	add    BYTE PTR [rax+0x100000],dh
   14001b022:	add    BYTE PTR [rax],al
   14001b024:	pop    rax
   14001b025:	movabs ds:0xe000a380a378a370,eax
   14001b02e:	add    BYTE PTR [rax],al
   14001b030:	add    BYTE PTR [rax],al
   14001b033:	add    BYTE PTR [rax],ah
   14001b035:	movabs al,ds:0xa040a038a030a028
   14001b03e:	rex.W movabs al,ds:0xa068a060a058a050
   14001b048:	jo     0x14001afea
   14001b04a:	js     0x14001afec
   14001b04c:	and    BYTE PTR [rax-0x5f5f5f78],0xa8
   14001b053:	movabs al,ds:0xa0e0a0d0a0b8a0b0
   14001b05c:	lock movabs al,ds:0xa130a120a110a100
   14001b066:	rex movabs eax,ds:0x12000a170a150
   14001b070:	sbb    BYTE PTR [rax],al
   14001b072:	add    BYTE PTR [rax],al
   14001b074:	add    BYTE PTR [rax-0x5fe75ff0],ah
   14001b07a:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   14001b080:	rex
   14001b081:	.byte 0xa0
	...
