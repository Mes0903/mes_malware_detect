
2947757db8135ac19893707e98680aa279ec99eddbad267d8f20ffd9e4e2feec.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x2ca35]        # 0x42da50
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x2ca36]        # 0x42da60
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x2ca39]        # 0x42da70
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x2c9fc]        # 0x42da40
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x2c85f]        # 0x42d8b0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x2c9d1]        # 0x42da30
  40105f:	mov    DWORD PTR [rip+0x31fa3],edx        # 0x433008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x422980
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x41c330
  401081:	mov    rdx,QWORD PTR [rip+0x2c8c8]        # 0x42d950
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x2c8ae]        # 0x42d940
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x2c924]        # 0x42d9c0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x2c84b]        # 0x42d8f0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x41bf10
  4010af:	mov    rax,QWORD PTR [rip+0x2c7aa]        # 0x42d860
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x422980
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1b0e9]        # 0x41c210
  401127:	call   0x41c200
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x2c885]        # 0x42d9f0
  40116b:	lea    r8,[rip+0x31ea6]        # 0x433018
  401172:	lea    rdx,[rip+0x31ea7]        # 0x433020
  401179:	lea    rcx,[rip+0x31ea8]        # 0x433028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x31e78],eax        # 0x433000
  401188:	lea    rax,[rip+0x31e71]        # 0x433000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x2c815]        # 0x42d9b0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x422998
  4011a3:	mov    DWORD PTR [rip+0x31e67],eax        # 0x433010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x2c86a]        # 0x42da30
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x2c72b]        # 0x42d920
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x35e4a]        # 0x43704c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x2c707]        # 0x42d930
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x31dba],0x1        # 0x433004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x2c63c]        # 0x42d8a0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x41c520
  40127d:	lea    rcx,[rip+0x1b83c]        # 0x41cac0
  401284:	call   QWORD PTR [rip+0x35dba]        # 0x437044
  40128a:	mov    rdx,QWORD PTR [rip+0x2c67f]        # 0x42d910
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x41c9d0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4229d0
  4012a5:	call   0x41c310
  4012aa:	mov    rax,QWORD PTR [rip+0x2c5ff]        # 0x42d8b0
  4012b1:	mov    QWORD PTR [rip+0x34840],rax        # 0x435af8
  4012b8:	mov    rax,QWORD PTR [rip+0x2c621]        # 0x42d8e0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x347d9],rax        # 0x435af0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x22cca],eax        # 0x424000
  401336:	mov    r12d,DWORD PTR [rip+0x31ceb]        # 0x433028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x422820
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x31cc2]        # 0x433020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4227a8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x422820
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x422810
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x31c6a],rbp        # 0x433020
  4013b6:	call   0x41bee0
  4013bb:	mov    rax,QWORD PTR [rip+0x2c4fe]        # 0x42d8c0
  4013c2:	mov    rdx,QWORD PTR [rip+0x31c4f]        # 0x433018
  4013c9:	mov    ecx,DWORD PTR [rip+0x31c59]        # 0x433028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x31c3c]        # 0x433018
  4013dc:	mov    rdx,QWORD PTR [rip+0x31c3d]        # 0x433020
  4013e3:	call   0x422d70
  4013e8:	mov    ecx,DWORD PTR [rip+0x31c1a]        # 0x433008
  4013ee:	mov    DWORD PTR [rip+0x31c18],eax        # 0x43300c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x31c02]        # 0x433004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x422968
  40140b:	mov    eax,DWORD PTR [rip+0x31bfb]        # 0x43300c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x2c4f9]        # 0x42d930
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x422970
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2c51d]        # 0x42d980
  401463:	mov    rcx,QWORD PTR [rip+0x2c506]        # 0x42d970
  40146a:	call   0x422910
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x35b3b]        # 0x436fd4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x2c4f9]        # 0x42d9a0
  4014a7:	mov    rcx,QWORD PTR [rip+0x2c4e2]        # 0x42d990
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x422910
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4228a0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x2c555]        # 0x42da30
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x41bf20
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x2c525]        # 0x42da30
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x41bf20
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	mov    eax,0xffffffff
  401535:	cmp    edx,0x2
  401538:	jne    0x40155b
  40153a:	mov    rdx,QWORD PTR [rip+0x31aff]        # 0x433040
  401541:	test   rdx,rdx
  401544:	je     0x40155b
  401546:	mov    QWORD PTR [r8+0x8],rdx
  40154a:	mov    DWORD PTR [r8],0x2
  401551:	xor    eax,eax
  401553:	mov    DWORD PTR [r8+0x10],0x0
  40155b:	repz ret 
  40155d:	nop    DWORD PTR [rax]
  401560:	sub    rsp,0x38
  401564:	mov    QWORD PTR [rsp+0x48],rdx
  401569:	lea    rdx,[rsp+0x48]
  40156e:	mov    QWORD PTR [rsp+0x50],r8
  401573:	mov    QWORD PTR [rsp+0x58],r9
  401578:	mov    QWORD PTR [rsp+0x28],rdx
  40157d:	call   0x41dd10
  401582:	add    rsp,0x38
  401586:	ret    
  401587:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	push   rdi
  401591:	push   rsi
  401592:	push   rbx
  401593:	sub    rsp,0x30
  401597:	mov    rbx,rcx
  40159a:	call   0x406a50
  40159f:	mov    rcx,rbx
  4015a2:	mov    rdi,rax
  4015a5:	call   0x406dd0
  4015aa:	cmp    eax,0x1
  4015ad:	je     0x4015c0
  4015af:	xor    esi,esi
  4015b1:	mov    eax,esi
  4015b3:	add    rsp,0x30
  4015b7:	pop    rbx
  4015b8:	pop    rsi
  4015b9:	pop    rdi
  4015ba:	ret    
  4015bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	mov    eax,DWORD PTR [rip+0x3453a]        # 0x435b00
  4015c6:	test   eax,eax
  4015c8:	je     0x401610
  4015ca:	xor    r8d,r8d
  4015cd:	xor    edx,edx
  4015cf:	mov    rcx,rbx
  4015d2:	call   0x404ea0
  4015d7:	test   eax,eax
  4015d9:	jne    0x4015af
  4015db:	nop    DWORD PTR [rax+rax*1+0x0]
  4015e0:	mov    r8d,0x31
  4015e6:	mov    edx,0x2
  4015eb:	mov    rcx,rbx
  4015ee:	call   0x406df8
  4015f3:	cmp    eax,0xffffffe4
  4015f6:	je     0x4015e0
  4015f8:	cmp    eax,0xffffffcc
  4015fb:	je     0x4015e0
  4015fd:	mov    DWORD PTR [rdi+0x2c],0x3
  401604:	mov    esi,0xffffffff
  401609:	jmp    0x4015b1
  40160b:	nop    DWORD PTR [rax+rax*1+0x0]
  401610:	lea    rdx,[rsp+0x2c]
  401615:	mov    rcx,rbx
  401618:	call   0x406da8
  40161d:	test   rax,rax
  401620:	je     0x4015af
  401622:	mov    esi,DWORD PTR [rip+0x344d8]        # 0x435b00
  401628:	test   esi,esi
  40162a:	jne    0x4015ca
  40162c:	mov    rax,QWORD PTR [rip+0x2c3ed]        # 0x42da20
  401633:	mov    rax,QWORD PTR [rax+0x78]
  401637:	test   BYTE PTR [rax+0x4f0],0x20
  40163e:	je     0x4015ca
  401640:	lea    rcx,[rip+0x249b9]        # 0x426000
  401647:	call   0x401560
  40164c:	jmp    0x4015b1
  401651:	nop    DWORD PTR [rax+rax*1+0x0]
  401656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401660:	push   rdi
  401661:	push   rsi
  401662:	push   rbx
  401663:	mov    r10,QWORD PTR [rip+0x31a86]        # 0x4330f0
  40166a:	mov    rcx,QWORD PTR [rdx+0x8]
  40166e:	mov    r11,QWORD PTR [rdx]
  401671:	mov    rsi,QWORD PTR [r8]
  401674:	mov    r8,QWORD PTR [r8+0x8]
  401678:	test   r10,r10
  40167b:	sete   dl
  40167e:	cmp    ecx,0x20
  401681:	seta   al
  401684:	or     dl,al
  401686:	jne    0x4017e4
  40168c:	cmp    r8d,0x400
  401693:	ja     0x4017e4
  401699:	movsxd rax,DWORD PTR [rip+0x31990]        # 0x433030
  4016a0:	mov    edx,ecx
  4016a2:	mov    r9,rax
  4016a5:	imul   rax,rax,0x428
  4016ac:	add    rax,r10
  4016af:	cmp    edx,0x8
  4016b2:	jb     0x401750
  4016b8:	mov    r9,QWORD PTR [r11]
  4016bb:	mov    QWORD PTR [rax],r9
  4016be:	mov    r9d,edx
  4016c1:	mov    rdi,QWORD PTR [r9+r11*1-0x8]
  4016c6:	mov    QWORD PTR [rax+r9*1-0x8],rdi
  4016cb:	lea    r9,[rax+0x8]
  4016cf:	and    r9,0xfffffffffffffff8
  4016d3:	sub    rax,r9
  4016d6:	sub    r11,rax
  4016d9:	add    eax,edx
  4016db:	and    eax,0xfffffff8
  4016de:	cmp    eax,0x8
  4016e1:	jb     0x4016f9
  4016e3:	and    eax,0xfffffff8
  4016e6:	xor    edx,edx
  4016e8:	mov    edi,edx
  4016ea:	add    edx,0x8
  4016ed:	mov    rbx,QWORD PTR [r11+rdi*1]
  4016f1:	cmp    edx,eax
  4016f3:	mov    QWORD PTR [r9+rdi*1],rbx
  4016f7:	jb     0x4016e8
  4016f9:	mov    r9d,DWORD PTR [rip+0x31930]        # 0x433030
  401700:	movsxd rax,r9d
  401703:	mov    edx,r8d
  401706:	imul   rax,rax,0x428
  40170d:	add    rax,r10
  401710:	cmp    edx,0x8
  401713:	mov    DWORD PTR [rax+0x20],ecx
  401716:	lea    rcx,[rax+0x24]
  40171a:	jae    0x401790
  40171c:	test   dl,0x4
  40171f:	jne    0x401810
  401725:	test   edx,edx
  401727:	jne    0x4017c0
  40172d:	mov    DWORD PTR [rax+0x424],r8d
  401734:	lea    eax,[r9+0x1]
  401738:	cdq    
  401739:	shr    edx,0x19
  40173c:	add    eax,edx
  40173e:	and    eax,0x7f
  401741:	sub    eax,edx
  401743:	mov    DWORD PTR [rip+0x318e7],eax        # 0x433030
  401749:	xor    eax,eax
  40174b:	pop    rbx
  40174c:	pop    rsi
  40174d:	pop    rdi
  40174e:	ret    
  40174f:	nop
  401750:	test   dl,0x4
  401753:	jne    0x4017f0
  401759:	test   edx,edx
  40175b:	je     0x401700
  40175d:	movzx  r9d,BYTE PTR [r11]
  401761:	test   dl,0x2
  401764:	mov    BYTE PTR [rax],r9b
  401767:	mov    r9d,DWORD PTR [rip+0x318c2]        # 0x433030
  40176e:	je     0x401700
  401770:	mov    edx,edx
  401772:	movzx  r9d,WORD PTR [rdx+r11*1-0x2]
  401778:	mov    WORD PTR [rax+rdx*1-0x2],r9w
  40177e:	mov    r9d,DWORD PTR [rip+0x318ab]        # 0x433030
  401785:	jmp    0x401700
  40178a:	nop    WORD PTR [rax+rax*1+0x0]
  401790:	mov    r10,QWORD PTR [rsi]
  401793:	lea    rdi,[rax+0x2c]
  401797:	and    rdi,0xfffffffffffffff8
  40179b:	mov    QWORD PTR [rax+0x24],r10
  40179f:	mov    r10d,edx
  4017a2:	mov    r11,QWORD PTR [r10+rsi*1-0x8]
  4017a7:	mov    QWORD PTR [rcx+r10*1-0x8],r11
  4017ac:	sub    rcx,rdi
  4017af:	sub    rsi,rcx
  4017b2:	add    ecx,edx
  4017b4:	shr    ecx,0x3
  4017b7:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4017ba:	jmp    0x40172d
  4017bf:	nop
  4017c0:	movzx  r10d,BYTE PTR [rsi]
  4017c4:	test   dl,0x2
  4017c7:	mov    BYTE PTR [rax+0x24],r10b
  4017cb:	je     0x40172d
  4017d1:	mov    edx,edx
  4017d3:	movzx  r10d,WORD PTR [rdx+rsi*1-0x2]
  4017d9:	mov    WORD PTR [rcx+rdx*1-0x2],r10w
  4017df:	jmp    0x40172d
  4017e4:	mov    eax,0xffffffff
  4017e9:	jmp    0x40174b
  4017ee:	xchg   ax,ax
  4017f0:	mov    r9d,DWORD PTR [r11]
  4017f3:	mov    edx,edx
  4017f5:	mov    DWORD PTR [rax],r9d
  4017f8:	mov    r9d,DWORD PTR [rdx+r11*1-0x4]
  4017fd:	mov    DWORD PTR [rax+rdx*1-0x4],r9d
  401802:	mov    r9d,DWORD PTR [rip+0x31827]        # 0x433030
  401809:	jmp    0x401700
  40180e:	xchg   ax,ax
  401810:	mov    r10d,DWORD PTR [rsi]
  401813:	mov    edx,edx
  401815:	mov    DWORD PTR [rax+0x24],r10d
  401819:	mov    r10d,DWORD PTR [rdx+rsi*1-0x4]
  40181e:	mov    DWORD PTR [rcx+rdx*1-0x4],r10d
  401823:	jmp    0x40172d
  401828:	nop    DWORD PTR [rax+rax*1+0x0]
  401830:	push   r12
  401832:	push   rbp
  401833:	push   rdi
  401834:	push   rsi
  401835:	push   rbx
  401836:	sub    rsp,0x20
  40183a:	mov    rbx,QWORD PTR [rip+0x318af]        # 0x4330f0
  401841:	mov    r12,QWORD PTR [rdx]
  401844:	mov    esi,DWORD PTR [rdx+0x8]
  401847:	test   rbx,rbx
  40184a:	je     0x4018a0
  40184c:	lea    rdi,[rbx+0x21400]
  401853:	mov    ebp,esi
  401855:	jmp    0x40186c
  401857:	nop    WORD PTR [rax+rax*1+0x0]
  401860:	add    rbx,0x428
  401867:	cmp    rbx,rdi
  40186a:	je     0x4018a0
  40186c:	cmp    DWORD PTR [rbx+0x20],esi
  40186f:	jne    0x401860
  401871:	mov    r8,rbp
  401874:	mov    rdx,rbx
  401877:	mov    rcx,r12
  40187a:	call   0x422818
  40187f:	test   eax,eax
  401881:	jne    0x401860
  401883:	mov    DWORD PTR [rbx+0x20],0x0
  40188a:	mov    DWORD PTR [rbx+0x424],0x0
  401894:	add    rsp,0x20
  401898:	pop    rbx
  401899:	pop    rsi
  40189a:	pop    rdi
  40189b:	pop    rbp
  40189c:	pop    r12
  40189e:	ret    
  40189f:	nop
  4018a0:	mov    eax,0xffffffff
  4018a5:	add    rsp,0x20
  4018a9:	pop    rbx
  4018aa:	pop    rsi
  4018ab:	pop    rdi
  4018ac:	pop    rbp
  4018ad:	pop    r12
  4018af:	ret    
  4018b0:	push   r13
  4018b2:	push   r12
  4018b4:	push   rbp
  4018b5:	push   rdi
  4018b6:	push   rsi
  4018b7:	push   rbx
  4018b8:	sub    rsp,0x28
  4018bc:	mov    rbx,QWORD PTR [rip+0x3182d]        # 0x4330f0
  4018c3:	mov    ebp,DWORD PTR [r8+0x8]
  4018c7:	xor    esi,esi
  4018c9:	mov    r12,rcx
  4018cc:	mov    r13,QWORD PTR [r8]
  4018cf:	test   rbx,rbx
  4018d2:	mov    rdi,rbp
  4018d5:	jne    0x4018f7
  4018d7:	jmp    0x401960
  4018dc:	nop    DWORD PTR [rax+0x0]
  4018e0:	add    rsi,0x428
  4018e7:	add    rbx,0x428
  4018ee:	cmp    rsi,0x21400
  4018f5:	je     0x401960
  4018f7:	cmp    DWORD PTR [rbx+0x20],edi
  4018fa:	jne    0x4018e0
  4018fc:	mov    r8,rbp
  4018ff:	mov    rdx,rbx
  401902:	mov    rcx,r13
  401905:	call   0x422818
  40190a:	test   eax,eax
  40190c:	jne    0x4018e0
  40190e:	mov    edi,DWORD PTR [rbx+0x424]
  401914:	mov    rax,QWORD PTR [rip+0x2c0f5]        # 0x42da10
  40191b:	mov    rcx,rdi
  40191e:	call   QWORD PTR [rax]
  401920:	test   rax,rax
  401923:	je     0x401981
  401925:	mov    rdx,rsi
  401928:	add    rdx,QWORD PTR [rip+0x317c1]        # 0x4330f0
  40192f:	mov    r8,rdi
  401932:	mov    rcx,rax
  401935:	add    rdx,0x24
  401939:	call   0x422810
  40193e:	mov    QWORD PTR [r12],rax
  401942:	mov    rax,r12
  401945:	mov    DWORD PTR [r12+0x8],edi
  40194a:	add    rsp,0x28
  40194e:	pop    rbx
  40194f:	pop    rsi
  401950:	pop    rdi
  401951:	pop    rbp
  401952:	pop    r12
  401954:	pop    r13
  401956:	ret    
  401957:	nop    WORD PTR [rax+rax*1+0x0]
  401960:	mov    rax,r12
  401963:	mov    QWORD PTR [r12],0x0
  40196b:	mov    DWORD PTR [r12+0x8],0x0
  401974:	add    rsp,0x28
  401978:	pop    rbx
  401979:	pop    rsi
  40197a:	pop    rdi
  40197b:	pop    rbp
  40197c:	pop    r12
  40197e:	pop    r13
  401980:	ret    
  401981:	mov    rax,r12
  401984:	mov    QWORD PTR [r12],0x0
  40198c:	mov    DWORD PTR [r12+0x8],edi
  401991:	add    rsp,0x28
  401995:	pop    rbx
  401996:	pop    rsi
  401997:	pop    rdi
  401998:	pop    rbp
  401999:	pop    r12
  40199b:	pop    r13
  40199d:	ret    
  40199e:	xchg   ax,ax
  4019a0:	sub    rsp,0x38
  4019a4:	mov    QWORD PTR [rsp+0x50],r8
  4019a9:	lea    r8,[rsp+0x50]
  4019ae:	mov    QWORD PTR [rsp+0x58],r9
  4019b3:	mov    QWORD PTR [rsp+0x28],r8
  4019b8:	call   0x41dce0
  4019bd:	add    rsp,0x38
  4019c1:	ret    
  4019c2:	nop    DWORD PTR [rax+0x0]
  4019c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019d0:	push   rsi
  4019d1:	push   rbx
  4019d2:	sub    rsp,0x28
  4019d6:	mov    rbx,rcx
  4019d9:	mov    rsi,rdx
  4019dc:	call   QWORD PTR [rip+0x356e2]        # 0x4370c4
  4019e2:	lea    rdx,[rip+0x2463f]        # 0x426028
  4019e9:	lea    rcx,[rax+0x60]
  4019ed:	mov    r9,rsi
  4019f0:	mov    r8,rbx
  4019f3:	add    rsp,0x28
  4019f7:	pop    rbx
  4019f8:	pop    rsi
  4019f9:	jmp    0x4019a0
  4019fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401a00:	push   rsi
  401a01:	push   rbx
  401a02:	sub    rsp,0x28
  401a06:	mov    ebx,ecx
  401a08:	mov    rsi,rdx
  401a0b:	call   QWORD PTR [rip+0x356b3]        # 0x4370c4
  401a11:	lea    rdx,[rip+0x2461a]        # 0x426032
  401a18:	lea    rcx,[rax+0x60]
  401a1c:	mov    r9,rsi
  401a1f:	mov    r8d,ebx
  401a22:	add    rsp,0x28
  401a26:	pop    rbx
  401a27:	pop    rsi
  401a28:	jmp    0x4019a0
  401a2d:	nop    DWORD PTR [rax]
  401a30:	sub    rsp,0x258
  401a37:	imul   edx,edx,0x3e8
  401a3d:	movsxd rax,ecx
  401a40:	mov    DWORD PTR [rsp+0x40],0x1
  401a48:	mov    QWORD PTR [rsp+0x48],rax
  401a4d:	mov    QWORD PTR [rsp+0x30],0x0
  401a56:	mov    eax,0x1
  401a5b:	cmp    edx,0xf423f
  401a61:	mov    DWORD PTR [rsp+0x38],edx
  401a65:	jle    0x401a8e
  401a67:	nop    WORD PTR [rax+rax*1+0x0]
  401a70:	sub    edx,0xf4240
  401a76:	mov    r8,rax
  401a79:	add    rax,0x1
  401a7d:	cmp    edx,0xf423f
  401a83:	jg     0x401a70
  401a85:	mov    DWORD PTR [rsp+0x38],edx
  401a89:	mov    QWORD PTR [rsp+0x30],r8
  401a8e:	lea    rax,[rsp+0x30]
  401a93:	lea    rdx,[rsp+0x40]
  401a98:	add    ecx,0x1
  401a9b:	xor    r9d,r9d
  401a9e:	xor    r8d,r8d
  401aa1:	mov    QWORD PTR [rsp+0x20],rax
  401aa6:	call   0x4187f0
  401aab:	add    rsp,0x258
  401ab2:	ret    
  401ab3:	nop    DWORD PTR [rax]
  401ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ac0:	xor    r9d,r9d
  401ac3:	jmp    0x417c10
  401ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ad0:	xor    r9d,r9d
  401ad3:	jmp    0x4194e0
  401ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ae0:	push   rbx
  401ae1:	sub    rsp,0x20
  401ae5:	mov    rbx,rcx
  401ae8:	mov    rcx,QWORD PTR [rcx+0x10]
  401aec:	call   0x422858
  401af1:	mov    rcx,QWORD PTR [rbx+0x18]
  401af5:	call   0x422858
  401afa:	mov    eax,DWORD PTR [rbx+0x34]
  401afd:	test   eax,eax
  401aff:	js     0x401b32
  401b01:	mov    rcx,QWORD PTR [rbx+0x38]
  401b05:	mov    edx,0x1
  401b0a:	call   0x406dc8
  401b0f:	mov    ecx,DWORD PTR [rbx+0x34]
  401b12:	mov    edx,0x2
  401b17:	call   0x41a0a0
  401b1c:	mov    ecx,DWORD PTR [rbx+0x34]
  401b1f:	call   0x4172f0
  401b24:	mov    rcx,QWORD PTR [rbx+0x38]
  401b28:	add    rsp,0x20
  401b2c:	pop    rbx
  401b2d:	jmp    0x406cc0
  401b32:	add    rsp,0x20
  401b36:	pop    rbx
  401b37:	ret    
  401b38:	nop    DWORD PTR [rax+rax*1+0x0]
  401b40:	push   rsi
  401b41:	push   rbx
  401b42:	sub    rsp,0x38
  401b46:	cmp    QWORD PTR [rip+0x31522],0x0        # 0x433070
  401b4e:	je     0x401dc0
  401b54:	test   ecx,ecx
  401b56:	lea    rcx,[rsp+0x20]
  401b5b:	je     0x401c90
  401b61:	mov    edx,0x5
  401b66:	call   0x406bc8
  401b6b:	mov    rcx,QWORD PTR [rsp+0x20]
  401b70:	mov    edx,0x1
  401b75:	call   0x406be8
  401b7a:	mov    r8d,DWORD PTR [rip+0x3157b]        # 0x4330fc
  401b81:	test   r8d,r8d
  401b84:	je     0x401d20
  401b8a:	mov    ecx,DWORD PTR [rip+0x31568]        # 0x4330f8
  401b90:	test   ecx,ecx
  401b92:	je     0x401d03
  401b98:	lea    rsi,[rsp+0x28]
  401b9d:	mov    rdx,QWORD PTR [rip+0x314cc]        # 0x433070
  401ba4:	mov    rcx,QWORD PTR [rsp+0x20]
  401ba9:	mov    r8,rsi
  401bac:	call   0x406b18
  401bb1:	test   eax,eax
  401bb3:	js     0x401df6
  401bb9:	mov    r8,QWORD PTR [rip+0x31490]        # 0x433050
  401bc0:	mov    rcx,QWORD PTR [rsp+0x20]
  401bc5:	mov    edx,0x2
  401bca:	call   0x406ce8
  401bcf:	mov    r8,QWORD PTR [rip+0x3148a]        # 0x433060
  401bd6:	test   r8,r8
  401bd9:	je     0x401bea
  401bdb:	mov    rcx,QWORD PTR [rsp+0x20]
  401be0:	mov    edx,0x3
  401be5:	call   0x406ce8
  401bea:	mov    r8,QWORD PTR [rip+0x31467]        # 0x433058
  401bf1:	test   r8,r8
  401bf4:	je     0x401c05
  401bf6:	mov    rcx,QWORD PTR [rsp+0x20]
  401bfb:	mov    edx,0x4
  401c00:	call   0x406ce8
  401c05:	mov    rcx,QWORD PTR [rip+0x3143c]        # 0x433048
  401c0c:	test   rcx,rcx
  401c0f:	je     0x401c33
  401c11:	lea    rdx,[rip+0xfffffffffffff978]        # 0x401590
  401c18:	call   0x406d70
  401c1d:	mov    r8,QWORD PTR [rip+0x31424]        # 0x433048
  401c24:	mov    rcx,QWORD PTR [rsp+0x20]
  401c29:	mov    edx,0x1
  401c2e:	call   0x406ce8
  401c33:	mov    edx,DWORD PTR [rip+0x33ecb]        # 0x435b04
  401c39:	test   edx,edx
  401c3b:	jne    0x401d64
  401c41:	mov    eax,DWORD PTR [rip+0x33eb9]        # 0x435b00
  401c47:	test   eax,eax
  401c49:	jne    0x401ca0
  401c4b:	mov    rcx,QWORD PTR [rsp+0x20]
  401c50:	mov    edx,0x1
  401c55:	call   0x406da0
  401c5a:	mov    rbx,QWORD PTR [rip+0x2bdbf]        # 0x42da20
  401c61:	mov    rax,QWORD PTR [rbx+0x78]
  401c65:	test   BYTE PTR [rax+0x558],0xf
  401c6c:	mov    rdx,rax
  401c6f:	jne    0x401d75
  401c75:	test   BYTE PTR [rdx+0x3b8],0xf
  401c7c:	jne    0x401cb1
  401c7e:	mov    rax,QWORD PTR [rsp+0x20]
  401c83:	add    rsp,0x38
  401c87:	pop    rbx
  401c88:	pop    rsi
  401c89:	ret    
  401c8a:	nop    WORD PTR [rax+rax*1+0x0]
  401c90:	mov    edx,0x1
  401c95:	call   0x406bc8
  401c9a:	jmp    0x401b6b
  401c9f:	nop
  401ca0:	mov    rcx,QWORD PTR [rsp+0x20]
  401ca5:	mov    edx,0x2
  401caa:	call   0x406da0
  401caf:	jmp    0x401c5a
  401cb1:	mov    rdx,QWORD PTR [rdx+0x3c0]
  401cb8:	mov    rcx,QWORD PTR [rsp+0x20]
  401cbd:	mov    r8,rsi
  401cc0:	call   0x4069e0
  401cc5:	cmp    eax,0xffffffce
  401cc8:	je     0x401dd3
  401cce:	test   eax,eax
  401cd0:	je     0x401d90
  401cd6:	mov    ecx,eax
  401cd8:	call   0x4069d8
  401cdd:	mov    rbx,rax
  401ce0:	call   QWORD PTR [rip+0x353de]        # 0x4370c4
  401ce6:	lea    rdx,[rip+0x2441a]        # 0x426107
  401ced:	lea    rcx,[rax+0x60]
  401cf1:	mov    r8,rbx
  401cf4:	call   0x4019a0
  401cf9:	mov    ecx,0x1
  401cfe:	call   0x4228a0
  401d03:	mov    rcx,QWORD PTR [rsp+0x20]
  401d08:	lea    rdx,[rip+0x33e01]        # 0x435b10
  401d0f:	call   0x406a38
  401d14:	jmp    0x401b98
  401d19:	nop    DWORD PTR [rax+0x0]
  401d20:	mov    rcx,QWORD PTR [rsp+0x20]
  401d25:	lea    rdx,[rip+0xfffffffffffffb84]        # 0x4018b0
  401d2c:	call   0x406cd0
  401d31:	mov    rcx,QWORD PTR [rsp+0x20]
  401d36:	lea    rdx,[rip+0xfffffffffffffaf3]        # 0x401830
  401d3d:	call   0x406cd8
  401d42:	mov    rcx,QWORD PTR [rsp+0x20]
  401d47:	lea    rdx,[rip+0xfffffffffffff912]        # 0x401660
  401d4e:	call   0x406cc8
  401d53:	mov    rcx,QWORD PTR [rsp+0x20]
  401d58:	xor    edx,edx
  401d5a:	call   0x406ce0
  401d5f:	jmp    0x401b8a
  401d64:	mov    rcx,QWORD PTR [rsp+0x20]
  401d69:	xor    edx,edx
  401d6b:	call   0x406da0
  401d70:	jmp    0x401c5a
  401d75:	mov    rcx,QWORD PTR [rsp+0x20]
  401d7a:	mov    edx,0x1
  401d7f:	call   0x406be0
  401d84:	mov    rdx,QWORD PTR [rbx+0x78]
  401d88:	jmp    0x401c75
  401d8d:	nop    DWORD PTR [rax]
  401d90:	mov    rax,QWORD PTR [rbx+0x78]
  401d94:	mov    rbx,QWORD PTR [rax+0x3c0]
  401d9b:	call   QWORD PTR [rip+0x35323]        # 0x4370c4
  401da1:	lea    rdx,[rip+0x24376]        # 0x42611e
  401da8:	lea    rcx,[rax+0x60]
  401dac:	mov    r8,rbx
  401daf:	call   0x4019a0
  401db4:	mov    rax,QWORD PTR [rsp+0x20]
  401db9:	add    rsp,0x38
  401dbd:	pop    rbx
  401dbe:	pop    rsi
  401dbf:	ret    
  401dc0:	lea    rax,[rip+0x24324]        # 0x4260eb
  401dc7:	mov    QWORD PTR [rip+0x312a2],rax        # 0x433070
  401dce:	jmp    0x401b54
  401dd3:	mov    rbx,QWORD PTR [rsp+0x28]
  401dd8:	call   QWORD PTR [rip+0x352e6]        # 0x4370c4
  401dde:	lea    rdx,[rip+0x2430d]        # 0x4260f2
  401de5:	lea    rcx,[rax+0x60]
  401de9:	mov    r8,rbx
  401dec:	call   0x4019a0
  401df1:	jmp    0x401cf9
  401df6:	mov    rbx,QWORD PTR [rsp+0x28]
  401dfb:	call   QWORD PTR [rip+0x352c3]        # 0x4370c4
  401e01:	lea    rdx,[rip+0x242ea]        # 0x4260f2
  401e08:	lea    rcx,[rax+0x60]
  401e0c:	mov    r8,rbx
  401e0f:	call   0x4019a0
  401e14:	mov    ecx,0x1
  401e19:	call   0x4228a0
  401e1e:	nop
  401e1f:	nop
  401e20:	push   r13
  401e22:	push   r12
  401e24:	push   rbp
  401e25:	push   rdi
  401e26:	push   rsi
  401e27:	push   rbx
  401e28:	sub    rsp,0x48
  401e2c:	test   r8,r8
  401e2f:	je     0x401f60
  401e35:	test   r9,r9
  401e38:	je     0x401f60
  401e3e:	mov    BYTE PTR [r8],0x0
  401e42:	movzx  eax,WORD PTR [rcx]
  401e45:	mov    rbx,r9
  401e48:	mov    rsi,r8
  401e4b:	mov    ebp,edx
  401e4d:	mov    rdi,rcx
  401e50:	cmp    ax,0x2
  401e54:	je     0x401f40
  401e5a:	cmp    ax,0x17
  401e5e:	je     0x401f20
  401e64:	lea    r12,[rsi+0x5]
  401e68:	sub    rbx,0x5
  401e6c:	mov    DWORD PTR [rsp+0x30],0x2
  401e74:	mov    DWORD PTR [rsp+0x28],0x0
  401e7c:	mov    QWORD PTR [rsp+0x20],0x0
  401e85:	mov    r9d,ebx
  401e88:	mov    r8,r12
  401e8b:	mov    edx,ebp
  401e8d:	mov    rcx,rdi
  401e90:	mov    r13,QWORD PTR [rip+0x355b5]        # 0x43744c
  401e97:	call   r13
  401e9a:	test   eax,eax
  401e9c:	jne    0x401f60
  401ea2:	mov    rcx,r12
  401ea5:	call   0x4227a8
  401eaa:	sub    rbx,rax
  401ead:	cmp    rbx,0x7
  401eb1:	ja     0x401ec3
  401eb3:	mov    rax,rsi
  401eb6:	add    rsp,0x48
  401eba:	pop    rbx
  401ebb:	pop    rsi
  401ebc:	pop    rdi
  401ebd:	pop    rbp
  401ebe:	pop    r12
  401ec0:	pop    r13
  401ec2:	ret    
  401ec3:	add    rax,r12
  401ec6:	mov    edx,0x2074
  401ecb:	sub    rbx,0x6
  401ecf:	lea    r12,[rax+0x6]
  401ed3:	mov    WORD PTR [rax+0x4],dx
  401ed7:	mov    DWORD PTR [rax],0x726f7020
  401edd:	mov    BYTE PTR [rax+0x6],0x0
  401ee1:	xor    r9d,r9d
  401ee4:	xor    r8d,r8d
  401ee7:	mov    DWORD PTR [rsp+0x30],0x8
  401eef:	mov    DWORD PTR [rsp+0x28],ebx
  401ef3:	mov    edx,ebp
  401ef5:	mov    QWORD PTR [rsp+0x20],r12
  401efa:	mov    rcx,rdi
  401efd:	call   r13
  401f00:	test   eax,eax
  401f02:	je     0x401eb3
  401f04:	lea    r9,[rip+0x24237]        # 0x426142
  401f0b:	lea    r8,[rip+0x24239]        # 0x42614b
  401f12:	mov    rdx,rbx
  401f15:	mov    rcx,r12
  401f18:	call   0x413f80
  401f1d:	jmp    0x401eb3
  401f1f:	nop
  401f20:	lea    r8,[rip+0x2420f]        # 0x426136
  401f27:	mov    rdx,r9
  401f2a:	mov    rcx,rsi
  401f2d:	call   0x413f80
  401f32:	jmp    0x401e64
  401f37:	nop    WORD PTR [rax+rax*1+0x0]
  401f40:	lea    r8,[rip+0x241f5]        # 0x42613c
  401f47:	mov    rdx,r9
  401f4a:	mov    rcx,rsi
  401f4d:	call   0x413f80
  401f52:	jmp    0x401e64
  401f57:	nop    WORD PTR [rax+rax*1+0x0]
  401f60:	xor    eax,eax
  401f62:	add    rsp,0x48
  401f66:	pop    rbx
  401f67:	pop    rsi
  401f68:	pop    rdi
  401f69:	pop    rbp
  401f6a:	pop    r12
  401f6c:	pop    r13
  401f6e:	ret    
  401f6f:	nop
  401f70:	push   rsi
  401f71:	push   rbx
  401f72:	sub    rsp,0x458
  401f79:	mov    rax,QWORD PTR [rip+0x220c8]        # 0x424048
  401f80:	mov    DWORD PTR [rsp+0x30],0x0
  401f88:	mov    DWORD PTR [rsp+0x240],0x0
  401f93:	test   rax,rax
  401f96:	je     0x40210e
  401f9c:	lea    rbx,[rsp+0x30]
  401fa1:	xor    r8d,r8d
  401fa4:	xor    esi,esi
  401fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fb0:	mov    ecx,DWORD PTR [rax+0x30]
  401fb3:	mov    r10,QWORD PTR [rax]
  401fb6:	mov    edx,r8d
  401fb9:	test   ecx,ecx
  401fbb:	je     0x40200a
  401fbd:	movsxd r9,DWORD PTR [rax+0x34]
  401fc1:	test   r8d,r8d
  401fc4:	mov    r11,r9
  401fc7:	je     0x4020dc
  401fcd:	cmp    QWORD PTR [rsp+0x38],r9
  401fd2:	je     0x402003
  401fd4:	lea    rcx,[rbx+0x10]
  401fd8:	xor    eax,eax
  401fda:	jmp    0x401fee
  401fdc:	nop    DWORD PTR [rax+0x0]
  401fe0:	add    rcx,0x8
  401fe4:	cmp    QWORD PTR [rcx-0x8],r9
  401fe8:	je     0x4020d4
  401fee:	add    eax,0x1
  401ff1:	cmp    eax,r8d
  401ff4:	jne    0x401fe0
  401ff6:	cmp    r8d,0x3f
  401ffa:	mov    edx,r8d
  401ffd:	jbe    0x4020dc
  402003:	cmp    esi,r11d
  402006:	cmovl  esi,r11d
  40200a:	test   r10,r10
  40200d:	mov    rax,r10
  402010:	mov    r8d,edx
  402013:	jne    0x401fb0
  402015:	lea    ecx,[rsi+0x1]
  402018:	mov    DWORD PTR [rsp+0x30],edx
  40201c:	lea    r8,[rsp+0x240]
  402024:	xor    r9d,r9d
  402027:	mov    QWORD PTR [rsp+0x20],0x0
  402030:	mov    rdx,rbx
  402033:	call   0x4187f0
  402038:	cmp    eax,0xffffffff
  40203b:	je     0x4020ed
  402041:	test   eax,eax
  402043:	js     0x4020f8
  402049:	mov    r9,QWORD PTR [rip+0x21ff8]        # 0x424048
  402050:	test   r9,r9
  402053:	je     0x4020a7
  402055:	mov    r11d,DWORD PTR [rsp+0x30]
  40205a:	mov    rsi,QWORD PTR [rsp+0x38]
  40205f:	lea    eax,[r11-0x1]
  402063:	lea    r8,[rbx+rax*8+0x10]
  402068:	nop    DWORD PTR [rax+rax*1+0x0]
  402070:	movsxd rcx,DWORD PTR [r9+0x34]
  402074:	test   r11d,r11d
  402077:	mov    r10,QWORD PTR [r9]
  40207a:	mov    rdx,rcx
  40207d:	je     0x40209f
  40207f:	cmp    rcx,rsi
  402082:	je     0x4020c0
  402084:	lea    rax,[rbx+0x10]
  402088:	jmp    0x40209a
  40208a:	nop    WORD PTR [rax+rax*1+0x0]
  402090:	add    rax,0x8
  402094:	cmp    rcx,QWORD PTR [rax-0x8]
  402098:	je     0x4020c0
  40209a:	cmp    rax,r8
  40209d:	jne    0x402090
  40209f:	test   r10,r10
  4020a2:	mov    r9,r10
  4020a5:	jne    0x402070
  4020a7:	mov    eax,0xffffffff
  4020ac:	add    rsp,0x458
  4020b3:	pop    rbx
  4020b4:	pop    rsi
  4020b5:	ret    
  4020b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020c0:	mov    eax,DWORD PTR [r9+0x30]
  4020c4:	test   eax,eax
  4020c6:	je     0x40209f
  4020c8:	mov    eax,edx
  4020ca:	add    rsp,0x458
  4020d1:	pop    rbx
  4020d2:	pop    rsi
  4020d3:	ret    
  4020d4:	mov    edx,r8d
  4020d7:	jmp    0x402003
  4020dc:	mov    eax,r8d
  4020df:	lea    edx,[r8+0x1]
  4020e3:	mov    QWORD PTR [rsp+rax*8+0x38],r9
  4020e8:	jmp    0x402003
  4020ed:	call   QWORD PTR [rip+0x35021]        # 0x437114
  4020f3:	cmp    DWORD PTR [rax],0x4
  4020f6:	je     0x4020a7
  4020f8:	lea    rcx,[rip+0x2404f]        # 0x42614e
  4020ff:	call   0x4227f8
  402104:	mov    ecx,0x1
  402109:	call   0x4228a0
  40210e:	mov    ecx,0x1
  402113:	lea    rbx,[rsp+0x30]
  402118:	jmp    0x40201c
  40211d:	nop    DWORD PTR [rax]
  402120:	push   r15
  402122:	push   r14
  402124:	push   r13
  402126:	push   r12
  402128:	push   rbp
  402129:	push   rdi
  40212a:	push   rsi
  40212b:	push   rbx
  40212c:	sub    rsp,0x288
  402133:	lea    rbx,[rsp+0x40]
  402138:	mov    r14d,r8d
  40213b:	lea    r8,[rip+0x24015]        # 0x426157
  402142:	mov    r9d,edx
  402145:	mov    r12,rcx
  402148:	mov    edx,0x6
  40214d:	mov    rcx,rbx
  402150:	call   0x413f80
  402155:	lea    r8,[rsp+0x50]
  40215a:	xor    eax,eax
  40215c:	mov    ecx,0x6
  402161:	lea    r9,[rsp+0x48]
  402166:	mov    rdx,rbx
  402169:	mov    rdi,r8
  40216c:	rep stos QWORD PTR es:[rdi],rax
  40216f:	mov    DWORD PTR [rsp+0x58],r14d
  402174:	mov    DWORD PTR [rsp+0x50],0x401
  40217c:	call   QWORD PTR [rip+0x352c2]        # 0x437444
  402182:	test   eax,eax
  402184:	mov    esi,eax
  402186:	jne    0x40239a
  40218c:	mov    rbx,QWORD PTR [rsp+0x48]
  402191:	mov    rbp,QWORD PTR [rip+0x34f2c]        # 0x4370c4
  402198:	lea    r13,[rsp+0x80]
  4021a0:	lea    r15,[rsp+0x3c]
  4021a5:	test   rbx,rbx
  4021a8:	jne    0x40224b
  4021ae:	jmp    0x402320
  4021b3:	mov    rdx,QWORD PTR [rbx+0x20]
  4021b7:	mov    r8d,DWORD PTR [rbx+0x10]
  4021bb:	mov    ecx,eax
  4021bd:	call   0x416ef0
  4021c2:	test   eax,eax
  4021c4:	js     0x402350
  4021ca:	movsxd rcx,DWORD PTR [rip+0x21e73]        # 0x424044
  4021d1:	call   0x413870
  4021d6:	movsxd r8,DWORD PTR [rip+0x21e67]        # 0x424044
  4021dd:	xor    edx,edx
  4021df:	mov    rcx,rax
  4021e2:	mov    rsi,rax
  4021e5:	call   0x422800
  4021ea:	mov    rax,QWORD PTR [rip+0x21e5f]        # 0x424050
  4021f1:	test   rax,rax
  4021f4:	mov    QWORD PTR [rsi+0x8],rax
  4021f8:	je     0x4021fd
  4021fa:	mov    QWORD PTR [rax],rsi
  4021fd:	cmp    QWORD PTR [rip+0x21e43],0x0        # 0x424048
  402205:	mov    QWORD PTR [rsi],0x0
  40220c:	je     0x402370
  402212:	mov    QWORD PTR [rip+0x21e37],rsi        # 0x424050
  402219:	mov    DWORD PTR [rsi+0x30],0x1
  402220:	mov    DWORD PTR [rsi+0x34],edi
  402223:	add    DWORD PTR [rip+0x21e16],0x1        # 0x424040
  40222a:	mov    esi,edi
  40222c:	call   rbp
  40222e:	lea    rdx,[rip+0x23f97]        # 0x4261cc
  402235:	lea    rcx,[rax+0x60]
  402239:	call   0x4019a0
  40223e:	mov    rbx,QWORD PTR [rbx+0x28]
  402242:	test   rbx,rbx
  402245:	je     0x402320
  40224b:	mov    rcx,QWORD PTR [rbx+0x20]
  40224f:	mov    edx,DWORD PTR [rbx+0x10]
  402252:	mov    r9d,0x200
  402258:	mov    r8,r13
  40225b:	call   0x401e20
  402260:	mov    rdi,rax
  402263:	call   rbp
  402265:	lea    rdx,[rip+0x23f08]        # 0x426174
  40226c:	lea    rcx,[rax+0x60]
  402270:	mov    r9,rdi
  402273:	mov    r8,r12
  402276:	call   0x4019a0
  40227b:	mov    edx,DWORD PTR [rbx+0x8]
  40227e:	mov    ecx,DWORD PTR [rbx+0x4]
  402281:	mov    r8d,DWORD PTR [rbx+0xc]
  402285:	call   0x41a470
  40228a:	test   eax,eax
  40228c:	mov    edi,eax
  40228e:	js     0x402304
  402290:	cmp    r14d,0x1
  402294:	jne    0x4021b3
  40229a:	mov    DWORD PTR [rsp+0x20],0x4
  4022a2:	mov    r9,r15
  4022a5:	mov    r8d,0x4
  4022ab:	mov    edx,0xffff
  4022b0:	mov    ecx,eax
  4022b2:	mov    DWORD PTR [rsp+0x3c],0x1
  4022ba:	call   0x419c80
  4022bf:	test   eax,eax
  4022c1:	js     0x402380
  4022c7:	mov    rdx,QWORD PTR [rbx+0x20]
  4022cb:	mov    r8d,DWORD PTR [rbx+0x10]
  4022cf:	mov    ecx,edi
  4022d1:	call   0x416ef0
  4022d6:	test   eax,eax
  4022d8:	js     0x402350
  4022da:	mov    edx,0xa
  4022df:	mov    ecx,edi
  4022e1:	call   0x4177e0
  4022e6:	test   eax,eax
  4022e8:	jns    0x4021ca
  4022ee:	lea    rcx,[rip+0x23ec7]        # 0x4261bc
  4022f5:	call   0x4227f8
  4022fa:	mov    ecx,0x1
  4022ff:	call   0x4228a0
  402304:	lea    rcx,[rip+0x23e7f]        # 0x42618a
  40230b:	call   0x4227f8
  402310:	mov    rbx,QWORD PTR [rbx+0x28]
  402314:	test   rbx,rbx
  402317:	jne    0x40224b
  40231d:	nop    DWORD PTR [rax]
  402320:	call   rbp
  402322:	lea    rcx,[rax+0x60]
  402326:	call   0x422888
  40232b:	mov    rcx,QWORD PTR [rsp+0x48]
  402330:	call   QWORD PTR [rip+0x35106]        # 0x43743c
  402336:	mov    eax,esi
  402338:	add    rsp,0x288
  40233f:	pop    rbx
  402340:	pop    rsi
  402341:	pop    rdi
  402342:	pop    rbp
  402343:	pop    r12
  402345:	pop    r13
  402347:	pop    r14
  402349:	pop    r15
  40234b:	ret    
  40234c:	nop    DWORD PTR [rax+0x0]
  402350:	lea    rcx,[rip+0x23e57]        # 0x4261ae
  402357:	mov    esi,edi
  402359:	call   0x4227f8
  40235e:	mov    ecx,edi
  402360:	call   0x4172f0
  402365:	jmp    0x40223e
  40236a:	nop    WORD PTR [rax+rax*1+0x0]
  402370:	mov    QWORD PTR [rip+0x21cd1],rsi        # 0x424048
  402377:	jmp    0x402212
  40237c:	nop    DWORD PTR [rax+0x0]
  402380:	lea    rcx,[rip+0x23e13]        # 0x42619a
  402387:	mov    esi,edi
  402389:	call   0x4227f8
  40238e:	mov    ecx,edi
  402390:	call   0x4172f0
  402395:	jmp    0x40223e
  40239a:	mov    ecx,eax
  40239c:	call   0x417710
  4023a1:	mov    rbx,rax
  4023a4:	call   QWORD PTR [rip+0x34d1a]        # 0x4370c4
  4023aa:	lea    rdx,[rip+0x23da9]        # 0x42615a
  4023b1:	lea    rcx,[rax+0x60]
  4023b5:	mov    r8,rbx
  4023b8:	call   0x4019a0
  4023bd:	mov    eax,0xffffffff
  4023c2:	jmp    0x402338
  4023c7:	nop    WORD PTR [rax+rax*1+0x0]
  4023d0:	push   r15
  4023d2:	push   r14
  4023d4:	push   r13
  4023d6:	push   r12
  4023d8:	push   rbp
  4023d9:	push   rdi
  4023da:	push   rsi
  4023db:	push   rbx
  4023dc:	sub    rsp,0xc88
  4023e3:	mov    r8d,0x1
  4023e9:	call   0x402120
  4023ee:	test   eax,eax
  4023f0:	js     0x402c34
  4023f6:	lea    rax,[rsp+0xb0]
  4023fe:	lea    r15,[rsp+0x670]
  402406:	lea    r14,[rsp+0x460]
  40240e:	mov    QWORD PTR [rsp+0x40],rax
  402413:	mov    rax,QWORD PTR [rip+0x34caa]        # 0x4370c4
  40241a:	mov    QWORD PTR [rsp+0x88],rax
  402422:	mov    QWORD PTR [rsp+0x70],rax
  402427:	mov    QWORD PTR [rsp+0x78],rax
  40242c:	mov    rax,r15
  40242f:	mov    r15,r14
  402432:	mov    r14,rax
  402435:	xor    ecx,ecx
  402437:	call   QWORD PTR [rip+0x34d5f]        # 0x43719c
  40243d:	mov    rbx,QWORD PTR [rip+0x21c04]        # 0x424048
  402444:	mov    rbp,rax
  402447:	mov    DWORD PTR [rsp+0x460],0x0
  402452:	mov    DWORD PTR [rsp+0x670],0x0
  40245d:	test   rbx,rbx
  402460:	je     0x402c68
  402466:	xor    esi,esi
  402468:	nop    DWORD PTR [rax+rax*1+0x0]
  402470:	mov    rax,QWORD PTR [rbx+0x48]
  402474:	mov    rdi,QWORD PTR [rbx]
  402477:	test   rax,rax
  40247a:	je     0x4026d0
  402480:	mov    rdx,rbp
  402483:	sub    rdx,rax
  402486:	cmp    rdx,0x1e
  40248a:	jle    0x4026d0
  402490:	mov    r13d,DWORD PTR [rip+0x21ce1]        # 0x424178
  402497:	test   r13d,r13d
  40249a:	jne    0x402b41
  4024a0:	mov    r12d,DWORD PTR [rbx+0x30]
  4024a4:	mov    DWORD PTR [rbx+0x2c],0x3
  4024ab:	test   r12d,r12d
  4024ae:	je     0x40251b
  4024b0:	mov    r9d,0x3
  4024b6:	mov    ecx,DWORD PTR [rsp+0x460]
  4024bd:	movsxd r8,DWORD PTR [rbx+0x34]
  4024c1:	test   ecx,ecx
  4024c3:	mov    r10,r8
  4024c6:	je     0x402b5c
  4024cc:	cmp    QWORD PTR [rsp+0x468],r8
  4024d4:	je     0x402500
  4024d6:	lea    rdx,[r15+0x10]
  4024da:	xor    eax,eax
  4024dc:	jmp    0x4024ea
  4024de:	xchg   ax,ax
  4024e0:	add    rdx,0x8
  4024e4:	cmp    QWORD PTR [rdx-0x8],r8
  4024e8:	je     0x402500
  4024ea:	add    eax,0x1
  4024ed:	cmp    eax,ecx
  4024ef:	jne    0x4024e0
  4024f1:	cmp    ecx,0x3f
  4024f4:	jbe    0x402b5c
  4024fa:	nop    WORD PTR [rax+rax*1+0x0]
  402500:	cmp    esi,r10d
  402503:	cmovl  esi,r10d
  402507:	cmp    r9d,0x1
  40250b:	je     0x402a60
  402511:	cmp    r9d,0x2
  402515:	je     0x402a00
  40251b:	test   rdi,rdi
  40251e:	mov    rbx,rdi
  402521:	jne    0x402470
  402527:	lea    ecx,[rsi+0x1]
  40252a:	mov    rax,QWORD PTR [rsp+0x40]
  40252f:	xor    r9d,r9d
  402532:	mov    r8,r14
  402535:	mov    rdx,r15
  402538:	mov    QWORD PTR [rsp+0xb0],0xa
  402544:	mov    DWORD PTR [rsp+0xb8],0x0
  40254f:	mov    QWORD PTR [rsp+0x20],rax
  402554:	call   0x4187f0
  402559:	cmp    eax,0xffffffff
  40255c:	je     0x402c19
  402562:	test   eax,eax
  402564:	js     0x402c28
  40256a:	mov    r13,QWORD PTR [rip+0x21ad7]        # 0x424048
  402571:	test   r13,r13
  402574:	je     0x402435
  40257a:	mov    rax,r15
  40257d:	mov    r15,r13
  402580:	mov    r13,rax
  402583:	mov    r8d,DWORD PTR [rsp+0x460]
  40258b:	mov    rbx,QWORD PTR [r15]
  40258e:	movsxd rdx,DWORD PTR [r15+0x34]
  402592:	test   r8d,r8d
  402595:	je     0x4025fa
  402597:	mov    r9,QWORD PTR [rsp+0x468]
  40259f:	cmp    rdx,r9
  4025a2:	je     0x4026f0
  4025a8:	lea    ecx,[r8-0x1]
  4025ac:	lea    rax,[r13+0x10]
  4025b0:	lea    rcx,[r13+rcx*8+0x10]
  4025b5:	jmp    0x4025ce
  4025b7:	nop    WORD PTR [rax+rax*1+0x0]
  4025c0:	add    rax,0x8
  4025c4:	cmp    rdx,QWORD PTR [rax-0x8]
  4025c8:	je     0x4026f0
  4025ce:	cmp    rax,rcx
  4025d1:	jne    0x4025c0
  4025d3:	lea    rcx,[r13+0x10]
  4025d7:	xor    eax,eax
  4025d9:	jmp    0x4025ee
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e0:	add    rcx,0x8
  4025e4:	cmp    rdx,QWORD PTR [rcx-0x8]
  4025e8:	je     0x402990
  4025ee:	add    eax,0x1
  4025f1:	cmp    eax,r8d
  4025f4:	jb     0x4025e0
  4025f6:	movsxd rdx,DWORD PTR [r15+0x34]
  4025fa:	mov    ecx,DWORD PTR [rsp+0x670]
  402601:	test   ecx,ecx
  402603:	je     0x402634
  402605:	cmp    rdx,QWORD PTR [rsp+0x678]
  40260d:	je     0x4029c0
  402613:	sub    ecx,0x1
  402616:	lea    rax,[r14+0x10]
  40261a:	lea    rcx,[r14+rcx*8+0x10]
  40261f:	jmp    0x40262f
  402621:	add    rax,0x8
  402625:	cmp    QWORD PTR [rax-0x8],rdx
  402629:	je     0x4029c0
  40262f:	cmp    rax,rcx
  402632:	jne    0x402621
  402634:	test   rbx,rbx
  402637:	mov    r15,rbx
  40263a:	jne    0x402583
  402640:	mov    rbx,QWORD PTR [rip+0x21a01]        # 0x424048
  402647:	mov    r15,r13
  40264a:	test   rbx,rbx
  40264d:	jne    0x402660
  40264f:	jmp    0x402435
  402654:	test   rsi,rsi
  402657:	mov    rbx,rsi
  40265a:	je     0x402435
  402660:	cmp    DWORD PTR [rbx+0x2c],0x3
  402664:	mov    rsi,QWORD PTR [rbx]
  402667:	jne    0x402654
  402669:	cmp    rbx,QWORD PTR [rip+0x219d8]        # 0x424048
  402670:	mov    QWORD PTR [rip+0x219dd],0x0        # 0x424058
  40267b:	je     0x402b9e
  402681:	cmp    rbx,QWORD PTR [rip+0x219c8]        # 0x424050
  402688:	je     0x402b8e
  40268e:	mov    rax,QWORD PTR [rbx]
  402691:	test   rax,rax
  402694:	je     0x40269e
  402696:	mov    rdx,QWORD PTR [rbx+0x8]
  40269a:	mov    QWORD PTR [rax+0x8],rdx
  40269e:	mov    rdx,QWORD PTR [rbx+0x8]
  4026a2:	test   rdx,rdx
  4026a5:	je     0x4026aa
  4026a7:	mov    QWORD PTR [rdx],rax
  4026aa:	mov    rax,QWORD PTR [rip+0x219af]        # 0x424060
  4026b1:	test   rax,rax
  4026b4:	je     0x4026bb
  4026b6:	mov    rcx,rbx
  4026b9:	call   rax
  4026bb:	mov    rcx,rbx
  4026be:	call   0x422858
  4026c3:	sub    DWORD PTR [rip+0x21976],0x1        # 0x424040
  4026ca:	jmp    0x402654
  4026cc:	nop    DWORD PTR [rax+0x0]
  4026d0:	mov    r11d,DWORD PTR [rbx+0x30]
  4026d4:	mov    r9d,DWORD PTR [rbx+0x2c]
  4026d8:	test   r11d,r11d
  4026db:	jne    0x4024b6
  4026e1:	jmp    0x402507
  4026e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026f0:	mov    ecx,DWORD PTR [r15+0x30]
  4026f4:	test   ecx,ecx
  4026f6:	jne    0x402834
  4026fc:	cmp    rdx,r9
  4026ff:	jne    0x4025d3
  402705:	mov    eax,DWORD PTR [r15+0x40]
  402709:	test   eax,eax
  40270b:	je     0x4029a8
  402711:	cmp    eax,0x1
  402714:	jne    0x4025f6
  40271a:	lea    rdi,[rsp+0x880]
  402722:	mov    rcx,QWORD PTR [r15+0x38]
  402726:	mov    r8d,0x400
  40272c:	mov    rdx,rdi
  40272f:	call   0x406ac0
  402734:	cmp    eax,0xffffffe4
  402737:	mov    rsi,rax
  40273a:	mov    ebp,eax
  40273c:	je     0x402793
  40273e:	cmp    eax,0xffffffcc
  402741:	je     0x402793
  402743:	test   eax,eax
  402745:	jle    0x402c72
  40274b:	mov    edx,DWORD PTR [r15+0x20]
  40274f:	mov    rcx,QWORD PTR [r15+0x10]
  402753:	add    edx,eax
  402755:	add    edx,0x1
  402758:	movsxd rdx,edx
  40275b:	call   0x413f30
  402760:	test   rax,rax
  402763:	mov    QWORD PTR [r15+0x10],rax
  402767:	je     0x402e25
  40276d:	movsxd rdx,DWORD PTR [r15+0x20]
  402771:	movsxd r8,esi
  402774:	lea    rcx,[rax+rdx*1]
  402778:	mov    rdx,rdi
  40277b:	call   0x422810
  402780:	add    esi,DWORD PTR [r15+0x20]
  402784:	mov    rax,QWORD PTR [r15+0x10]
  402788:	mov    DWORD PTR [r15+0x20],esi
  40278c:	movsxd rsi,esi
  40278f:	mov    BYTE PTR [rax+rsi*1],0x0
  402793:	cmp    DWORD PTR [r15+0x2c],0x1
  402798:	mov    QWORD PTR [r15+0x18],0x0
  4027a0:	jne    0x4025f6
  4027a6:	mov    rsi,QWORD PTR [r15+0x10]
  4027aa:	test   rsi,rsi
  4027ad:	je     0x4025f6
  4027b3:	mov    r9d,DWORD PTR [rip+0x3094e]        # 0x433108
  4027ba:	test   r9d,r9d
  4027bd:	jne    0x402d01
  4027c3:	mov    edx,0xa
  4027c8:	mov    rcx,rsi
  4027cb:	call   0x4227d0
  4027d0:	test   rax,rax
  4027d3:	je     0x4032bd
  4027d9:	mov    rdi,QWORD PTR [r15+0x38]
  4027dd:	mov    rax,QWORD PTR [rsp+0x88]
  4027e5:	call   rax
  4027e7:	lea    rdx,[rip+0x23f18]        # 0x426706
  4027ee:	lea    rcx,[rax+0x60]
  4027f2:	mov    r8,rsi
  4027f5:	call   0x4019a0
  4027fa:	mov    rdx,rsi
  4027fd:	mov    rcx,rdi
  402800:	call   0x4064b0
  402805:	test   eax,eax
  402807:	mov    ebp,eax
  402809:	je     0x402e69
  40280f:	mov    QWORD PTR [r15+0x18],0x0
  402817:	mov    DWORD PTR [r15+0x24],0x0
  40281f:	mov    DWORD PTR [r15+0x2c],0x2
  402827:	mov    DWORD PTR [r15+0x28],0x0
  40282f:	jmp    0x4025f6
  402834:	lea    rbp,[rsp+0xe0]
  40283c:	xor    eax,eax
  40283e:	mov    ecx,0x10
  402843:	lea    r8,[rsp+0x98]
  40284b:	mov    DWORD PTR [rsp+0x98],0x80
  402856:	mov    rdi,rbp
  402859:	mov    rdx,rbp
  40285c:	rep stos QWORD PTR es:[rdi],rax
  40285f:	mov    ecx,DWORD PTR [r15+0x34]
  402863:	call   0x416b50
  402868:	test   eax,eax
  40286a:	mov    esi,eax
  40286c:	js     0x402baa
  402872:	xor    ecx,ecx
  402874:	call   QWORD PTR [rip+0x34922]        # 0x43719c
  40287a:	movsxd rcx,DWORD PTR [rip+0x217c3]        # 0x424044
  402881:	mov    QWORD PTR [rsp+0x880],rax
  402889:	call   0x413870
  40288e:	movsxd r8,DWORD PTR [rip+0x217af]        # 0x424044
  402895:	xor    edx,edx
  402897:	mov    rcx,rax
  40289a:	mov    r15,rax
  40289d:	call   0x422800
  4028a2:	mov    rax,QWORD PTR [rip+0x217a7]        # 0x424050
  4028a9:	test   rax,rax
  4028ac:	mov    QWORD PTR [r15+0x8],rax
  4028b0:	je     0x4028b5
  4028b2:	mov    QWORD PTR [rax],r15
  4028b5:	cmp    QWORD PTR [rip+0x2178b],0x0        # 0x424048
  4028bd:	mov    QWORD PTR [r15],0x0
  4028c4:	je     0x402c0d
  4028ca:	lea    rcx,[rip+0x2393a]        # 0x42620b
  4028d1:	add    DWORD PTR [rip+0x21768],0x1        # 0x424040
  4028d8:	mov    QWORD PTR [rip+0x21771],r15        # 0x424050
  4028df:	call   0x41a820
  4028e4:	mov    QWORD PTR [r15+0x10],rax
  4028e8:	xor    ecx,ecx
  4028ea:	mov    rax,QWORD PTR [rsp+0x880]
  4028f2:	mov    DWORD PTR [r15+0x34],esi
  4028f6:	mov    DWORD PTR [r15+0x2c],0x1
  4028fe:	mov    QWORD PTR [r15+0x48],rax
  402902:	call   0x401b40
  402907:	mov    rdx,r15
  40290a:	mov    rcx,rax
  40290d:	mov    QWORD PTR [r15+0x38],rax
  402911:	call   0x406a40
  402916:	mov    rcx,QWORD PTR [r15+0x38]
  40291a:	mov    r8d,esi
  40291d:	mov    edx,esi
  40291f:	call   0x4069c8
  402924:	mov    rsi,QWORD PTR [r15+0x38]
  402928:	lea    rdx,[rip+0xfffffffffffff1a1]        # 0x401ad0
  40292f:	mov    rcx,rsi
  402932:	call   0x4069a8
  402937:	lea    rdx,[rip+0xfffffffffffff182]        # 0x401ac0
  40293e:	mov    rcx,rsi
  402941:	call   0x4069b8
  402946:	lea    rdx,[rip+0xfffffffffffff0e3]        # 0x401a30
  40294d:	mov    rcx,rsi
  402950:	call   0x4069b0
  402955:	mov    r10d,DWORD PTR [rip+0x2181c]        # 0x424178
  40295c:	mov    DWORD PTR [r15+0x40],0x0
  402964:	test   r10d,r10d
  402967:	jne    0x402bbb
  40296d:	mov    r8d,DWORD PTR [rsp+0x460]
  402975:	movsxd rdx,DWORD PTR [r15+0x34]
  402979:	test   r8d,r8d
  40297c:	je     0x4025fa
  402982:	cmp    rdx,QWORD PTR [rsp+0x468]
  40298a:	jne    0x4025d3
  402990:	mov    eax,DWORD PTR [r15+0x30]
  402994:	test   eax,eax
  402996:	jne    0x4025f6
  40299c:	mov    eax,DWORD PTR [r15+0x40]
  4029a0:	test   eax,eax
  4029a2:	jne    0x402711
  4029a8:	mov    rcx,r15
  4029ab:	call   0x422c7a
  4029b0:	mov    eax,DWORD PTR [r15+0x40]
  4029b4:	jmp    0x402711
  4029b9:	nop    DWORD PTR [rax+0x0]
  4029c0:	mov    eax,DWORD PTR [r15+0x40]
  4029c4:	test   eax,eax
  4029c6:	je     0x402ab0
  4029cc:	cmp    eax,0x1
  4029cf:	je     0x402ac5
  4029d5:	mov    rax,QWORD PTR [r15+0x10]
  4029d9:	test   rbx,rbx
  4029dc:	mov    DWORD PTR [r15+0x20],0x0
  4029e4:	mov    BYTE PTR [rax],0x0
  4029e7:	mov    DWORD PTR [r15+0x2c],0x1
  4029ef:	mov    r15,rbx
  4029f2:	jne    0x402583
  4029f8:	jmp    0x402640
  4029fd:	nop    DWORD PTR [rax]
  402a00:	mov    ecx,DWORD PTR [rsp+0x670]
  402a07:	movsxd r8,DWORD PTR [rbx+0x34]
  402a0b:	test   ecx,ecx
  402a0d:	mov    r9,r8
  402a10:	je     0x402b75
  402a16:	cmp    QWORD PTR [rsp+0x678],r8
  402a1e:	je     0x402a50
  402a20:	lea    rdx,[r14+0x10]
  402a24:	xor    eax,eax
  402a26:	jmp    0x402a3a
  402a28:	nop    DWORD PTR [rax+rax*1+0x0]
  402a30:	add    rdx,0x8
  402a34:	cmp    QWORD PTR [rdx-0x8],r8
  402a38:	je     0x402a50
  402a3a:	add    eax,0x1
  402a3d:	cmp    eax,ecx
  402a3f:	jne    0x402a30
  402a41:	cmp    ecx,0x3f
  402a44:	jbe    0x402b75
  402a4a:	nop    WORD PTR [rax+rax*1+0x0]
  402a50:	cmp    esi,r9d
  402a53:	cmovl  esi,r9d
  402a57:	jmp    0x40251b
  402a5c:	nop    DWORD PTR [rax+0x0]
  402a60:	mov    ecx,DWORD PTR [rsp+0x460]
  402a67:	movsxd r8,DWORD PTR [rbx+0x34]
  402a6b:	test   ecx,ecx
  402a6d:	mov    r9,r8
  402a70:	je     0x402a9a
  402a72:	cmp    QWORD PTR [rsp+0x468],r8
  402a7a:	je     0x402a50
  402a7c:	lea    rdx,[r15+0x10]
  402a80:	xor    eax,eax
  402a82:	jmp    0x402a8e
  402a84:	add    rdx,0x8
  402a88:	cmp    QWORD PTR [rdx-0x8],r8
  402a8c:	je     0x402a50
  402a8e:	add    eax,0x1
  402a91:	cmp    eax,ecx
  402a93:	jne    0x402a84
  402a95:	cmp    ecx,0x3f
  402a98:	ja     0x402a50
  402a9a:	mov    eax,ecx
  402a9c:	add    ecx,0x1
  402a9f:	mov    QWORD PTR [rsp+rax*8+0x468],r8
  402aa7:	mov    DWORD PTR [rsp+0x460],ecx
  402aae:	jmp    0x402a50
  402ab0:	mov    rcx,r15
  402ab3:	call   0x422c7a
  402ab8:	mov    eax,DWORD PTR [r15+0x40]
  402abc:	cmp    eax,0x1
  402abf:	jne    0x4029d5
  402ac5:	mov    rdx,QWORD PTR [r15+0x18]
  402ac9:	test   rdx,rdx
  402acc:	je     0x402b28
  402ace:	movsxd rax,DWORD PTR [r15+0x28]
  402ad2:	mov    r8d,DWORD PTR [r15+0x24]
  402ad6:	mov    rcx,QWORD PTR [r15+0x38]
  402ada:	sub    r8d,eax
  402add:	add    rdx,rax
  402ae0:	movsxd r8,r8d
  402ae3:	call   0x406ab0
  402ae8:	cmp    eax,0xffffffe4
  402aeb:	mov    rsi,rax
  402aee:	je     0x402634
  402af4:	cmp    eax,0xffffffcc
  402af7:	je     0x402634
  402afd:	cmp    eax,0x0
  402b00:	jle    0x402c3e
  402b06:	add    esi,DWORD PTR [r15+0x28]
  402b0a:	cmp    esi,DWORD PTR [r15+0x24]
  402b0e:	mov    DWORD PTR [r15+0x28],esi
  402b12:	jne    0x402634
  402b18:	mov    r8d,DWORD PTR [rip+0x305e9]        # 0x433108
  402b1f:	test   r8d,r8d
  402b22:	je     0x402e32
  402b28:	test   rbx,rbx
  402b2b:	mov    DWORD PTR [r15+0x2c],0x3
  402b33:	mov    r15,rbx
  402b36:	jne    0x402583
  402b3c:	jmp    0x402640
  402b41:	call   QWORD PTR [rip+0x3457d]        # 0x4370c4
  402b47:	lea    rdx,[rip+0x2368a]        # 0x4261d8
  402b4e:	lea    rcx,[rax+0x60]
  402b52:	call   0x4019a0
  402b57:	jmp    0x4024a0
  402b5c:	mov    eax,ecx
  402b5e:	add    ecx,0x1
  402b61:	mov    QWORD PTR [rsp+rax*8+0x468],r8
  402b69:	mov    DWORD PTR [rsp+0x460],ecx
  402b70:	jmp    0x402500
  402b75:	mov    eax,ecx
  402b77:	add    ecx,0x1
  402b7a:	mov    QWORD PTR [rsp+rax*8+0x678],r8
  402b82:	mov    DWORD PTR [rsp+0x670],ecx
  402b89:	jmp    0x402a50
  402b8e:	mov    rax,QWORD PTR [rbx+0x8]
  402b92:	mov    QWORD PTR [rip+0x214b7],rax        # 0x424050
  402b99:	jmp    0x40268e
  402b9e:	mov    QWORD PTR [rip+0x214a3],rsi        # 0x424048
  402ba5:	jmp    0x402681
  402baa:	lea    rcx,[rip+0x23651]        # 0x426202
  402bb1:	call   0x4227f8
  402bb6:	jmp    0x40296d
  402bbb:	lea    rcx,[rsp+0x880]
  402bc3:	call   QWORD PTR [rip+0x34543]        # 0x43710c
  402bc9:	mov    rsi,rax
  402bcc:	mov    rcx,rax
  402bcf:	call   0x4227a8
  402bd4:	mov    BYTE PTR [rsi+rax*1-0x1],0x0
  402bd9:	mov    edx,DWORD PTR [rsp+0x98]
  402be0:	lea    r8,[rsp+0x260]
  402be8:	mov    rcx,rbp
  402beb:	mov    r9d,0x200
  402bf1:	call   0x401e20
  402bf6:	lea    rcx,[rip+0x23613]        # 0x426210
  402bfd:	mov    r8,rsi
  402c00:	mov    rdx,rax
  402c03:	call   0x401560
  402c08:	jmp    0x40296d
  402c0d:	mov    QWORD PTR [rip+0x21434],r15        # 0x424048
  402c14:	jmp    0x4028ca
  402c19:	call   QWORD PTR [rip+0x344f5]        # 0x437114
  402c1f:	cmp    DWORD PTR [rax],0x4
  402c22:	je     0x402435
  402c28:	lea    rcx,[rip+0x2351f]        # 0x42614e
  402c2f:	call   0x4227f8
  402c34:	mov    ecx,0x1
  402c39:	call   0x4228a0
  402c3e:	mov    DWORD PTR [r15+0x2c],0x3
  402c46:	jne    0x4033d3
  402c4c:	mov    rcx,QWORD PTR [r15+0x38]
  402c50:	mov    edx,esi
  402c52:	mov    r15,rbx
  402c55:	call   0x422c20
  402c5a:	test   rbx,rbx
  402c5d:	jne    0x402583
  402c63:	jmp    0x402640
  402c68:	mov    ecx,0x1
  402c6d:	jmp    0x40252a
  402c72:	cmp    eax,0xfffffedb
  402c77:	je     0x40341c
  402c7d:	cmp    eax,0xffffffdb
  402c80:	je     0x403345
  402c86:	test   eax,eax
  402c88:	mov    DWORD PTR [r15+0x2c],0x3
  402c90:	je     0x402793
  402c96:	mov    rcx,QWORD PTR [r15+0x38]
  402c9a:	mov    edx,eax
  402c9c:	call   0x422c20
  402ca1:	mov    rax,QWORD PTR [rsp+0x70]
  402ca6:	call   rax
  402ca8:	lea    rdx,[rip+0x235a3]        # 0x426252
  402caf:	lea    rcx,[rax+0x60]
  402cb3:	call   0x4019a0
  402cb8:	mov    rcx,QWORD PTR [r15+0x38]
  402cbc:	mov    edx,ebp
  402cbe:	call   0x406df0
  402cc3:	cmp    eax,0xffffffcc
  402cc6:	je     0x402cb8
  402cc8:	cmp    eax,0xffffffe4
  402ccb:	je     0x402cb8
  402ccd:	mov    ecx,esi
  402ccf:	call   0x4069d8
  402cd4:	test   rax,rax
  402cd7:	mov    rsi,rax
  402cda:	cmove  rsi,QWORD PTR [rip+0x2adae]        # 0x42da90
  402ce2:	mov    rax,QWORD PTR [rsp+0x70]
  402ce7:	call   rax
  402ce9:	lea    rdx,[rip+0x233b7]        # 0x4260a7
  402cf0:	lea    rcx,[rax+0x30]
  402cf4:	mov    r8,rsi
  402cf7:	call   0x4019a0
  402cfc:	jmp    0x402793
  402d01:	lea    rdx,[rip+0x23a0c]        # 0x426714
  402d08:	mov    rcx,rsi
  402d0b:	call   0x422780
  402d10:	test   rax,rax
  402d13:	je     0x403328
  402d19:	mov    rax,QWORD PTR [r15+0x38]
  402d1d:	lea    rdx,[rip+0x2354a]        # 0x42626e
  402d24:	mov    r8d,0x4
  402d2a:	mov    rcx,rsi
  402d2d:	mov    QWORD PTR [rsp+0x38],rax
  402d32:	call   0x4227a0
  402d37:	test   eax,eax
  402d39:	jne    0x4032f2
  402d3f:	mov    edx,0xa
  402d44:	mov    rcx,rsi
  402d47:	call   0x4227d0
  402d4c:	test   rax,rax
  402d4f:	je     0x4032f2
  402d55:	lea    rdi,[rax+0x1]
  402d59:	mov    BYTE PTR [rax],0x0
  402d5c:	movzx  eax,BYTE PTR [rax+0x1]
  402d60:	mov    QWORD PTR [rsp+0x50],rdi
  402d65:	cmp    al,0xa
  402d67:	je     0x402e5f
  402d6d:	cmp    al,0xd
  402d6f:	jne    0x402d8a
  402d71:	mov    rax,rdi
  402d74:	add    rax,0x1
  402d78:	movzx  edx,BYTE PTR [rax]
  402d7b:	cmp    dl,0xa
  402d7e:	je     0x402d74
  402d80:	cmp    dl,0xd
  402d83:	je     0x402d74
  402d85:	mov    QWORD PTR [rsp+0x50],rax
  402d8a:	lea    rcx,[rsi+0x4]
  402d8e:	mov    edx,0x20
  402d93:	call   0x4227d0
  402d98:	test   rax,rax
  402d9b:	je     0x4032f2
  402da1:	mov    rdi,QWORD PTR [rsp+0x50]
  402da6:	mov    BYTE PTR [rax],0x0
  402da9:	or     rcx,0xffffffffffffffff
  402dad:	xor    eax,eax
  402daf:	repnz scas al,BYTE PTR es:[rdi]
  402db1:	cmp    DWORD PTR [rip+0x213c0],0x0        # 0x424178
  402db8:	mov    rax,rcx
  402dbb:	not    rax
  402dbe:	lea    r12,[rax+0x4fff]
  402dc5:	jne    0x402e97
  402dcb:	mov    rcx,r12
  402dce:	call   0x413870
  402dd3:	test   rax,rax
  402dd6:	je     0x4036c2
  402ddc:	lea    rsi,[rip+0x23495]        # 0x426278
  402de3:	mov    ecx,0x96
  402de8:	mov    rdi,rax
  402deb:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  402ded:	lea    rdi,[rax+0x95]
  402df4:	lea    rsi,[rip+0x23925]        # 0x426720
  402dfb:	lea    rdx,[rax+0x136]
  402e02:	mov    cl,0xa2
  402e04:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  402e06:	lea    rsi,[rip+0x23501]        # 0x42630e
  402e0d:	mov    rdi,rdx
  402e10:	mov    cl,0x11
  402e12:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  402e14:	mov    DWORD PTR [r15+0x24],0x146
  402e1c:	mov    QWORD PTR [r15+0x18],rax
  402e20:	jmp    0x40281f
  402e25:	mov    DWORD PTR [r15+0x2c],0x3
  402e2d:	jmp    0x402793
  402e32:	mov    rcx,QWORD PTR [r15+0x18]
  402e36:	mov    DWORD PTR [r15+0x2c],0x1
  402e3e:	call   0x422858
  402e43:	mov    rax,QWORD PTR [r15+0x10]
  402e47:	mov    DWORD PTR [r15+0x24],0x0
  402e4f:	mov    DWORD PTR [r15+0x20],0x0
  402e57:	mov    BYTE PTR [rax],0x0
  402e5a:	jmp    0x402634
  402e5f:	mov    rax,QWORD PTR [rsp+0x50]
  402e64:	jmp    0x402d74
  402e69:	mov    rcx,rsi
  402e6c:	call   0x41a820
  402e71:	test   rax,rax
  402e74:	mov    rdi,rax
  402e77:	mov    QWORD PTR [r15+0x18],rax
  402e7b:	je     0x402e8e
  402e7d:	xor    eax,eax
  402e7f:	or     rcx,0xffffffffffffffff
  402e83:	repnz scas al,BYTE PTR es:[rdi]
  402e85:	mov    rax,rcx
  402e88:	not    rax
  402e8b:	lea    ebp,[rax-0x1]
  402e8e:	mov    DWORD PTR [r15+0x24],ebp
  402e92:	jmp    0x40281f
  402e97:	mov    rcx,QWORD PTR [rsp+0x38]
  402e9c:	call   0x406d50
  402ea1:	sub    eax,0x1
  402ea4:	mov    QWORD PTR [rsp+0x48],0x0
  402ead:	je     0x403583
  402eb3:	mov    rcx,r12
  402eb6:	call   0x413870
  402ebb:	test   rax,rax
  402ebe:	mov    rbp,rax
  402ec1:	je     0x4034fa
  402ec7:	mov    rdi,rax
  402eca:	lea    rsi,[rip+0x233a7]        # 0x426278
  402ed1:	mov    ecx,0x96
  402ed6:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  402ed8:	lea    rax,[rsp+0xc0]
  402ee0:	mov    rcx,QWORD PTR [rsp+0x38]
  402ee5:	lea    r8,[rsp+0xa0]
  402eed:	mov    rdi,rbp
  402ef0:	mov    QWORD PTR [rsp+0xa0],0x20
  402efc:	xor    esi,esi
  402efe:	mov    rdx,rax
  402f01:	mov    QWORD PTR [rsp+0x60],rax
  402f06:	call   0x406a58
  402f0b:	xor    eax,eax
  402f0d:	or     rcx,0xffffffffffffffff
  402f11:	mov    rdx,r12
  402f14:	repnz scas al,BYTE PTR es:[rdi]
  402f16:	lea    r8,[rip+0x23411]        # 0x42632e
  402f1d:	mov    rax,rcx
  402f20:	not    rax
  402f23:	sub    rax,0x1
  402f27:	lea    rcx,[rbp+rax*1+0x0]
  402f2c:	sub    rdx,rax
  402f2f:	call   0x413f80
  402f34:	cmp    QWORD PTR [rsp+0xa0],0x0
  402f3d:	mov    rdi,QWORD PTR [rsp+0x60]
  402f42:	je     0x402f76
  402f44:	mov    rcx,rbp
  402f47:	call   0x4227a8
  402f4c:	movzx  r9d,BYTE PTR [rdi+rsi*1]
  402f51:	mov    rdx,r12
  402f54:	lea    rcx,[rbp+rax*1+0x0]
  402f59:	lea    r8,[rip+0x23477]        # 0x4263d7
  402f60:	sub    rdx,rax
  402f63:	add    rsi,0x1
  402f67:	call   0x413f80
  402f6c:	cmp    rsi,QWORD PTR [rsp+0xa0]
  402f74:	jb     0x402f44
  402f76:	xor    eax,eax
  402f78:	or     rcx,0xffffffffffffffff
  402f7c:	mov    rdi,rbp
  402f7f:	repnz scas al,BYTE PTR es:[rdi]
  402f81:	lea    r8,[rip+0x233ba]        # 0x426342
  402f88:	mov    rdx,r12
  402f8b:	mov    rdi,rbp
  402f8e:	mov    rax,rcx
  402f91:	lea    rsi,[rsp+0x160]
  402f99:	not    rax
  402f9c:	sub    rax,0x1
  402fa0:	lea    rcx,[rbp+rax*1+0x0]
  402fa5:	sub    rdx,rax
  402fa8:	call   0x413f80
  402fad:	xor    eax,eax
  402faf:	or     rcx,0xffffffffffffffff
  402fb3:	lea    r8,[rip+0x23396]        # 0x426350
  402fba:	repnz scas al,BYTE PTR es:[rdi]
  402fbc:	mov    rdx,r12
  402fbf:	mov    rax,rcx
  402fc2:	not    rax
  402fc5:	sub    rax,0x1
  402fc9:	lea    rcx,[rbp+rax*1+0x0]
  402fce:	sub    rdx,rax
  402fd1:	call   0x413f80
  402fd6:	mov    rcx,QWORD PTR [rsp+0x38]
  402fdb:	lea    r9,[rsp+0x9c]
  402fe3:	lea    r8,[rsp+0xa8]
  402feb:	mov    DWORD PTR [rsp+0x20],0x0
  402ff3:	mov    rdx,rsi
  402ff6:	mov    QWORD PTR [rsp+0xa8],0x100
  403002:	call   0x406a80
  403007:	test   eax,eax
  403009:	je     0x4034c6
  40300f:	mov    rcx,QWORD PTR [rsp+0x38]
  403014:	call   0x406bb8
  403019:	cmp    eax,0x5
  40301c:	mov    esi,eax
  40301e:	je     0x4034ba
  403024:	cmp    eax,0x9
  403027:	je     0x40347e
  40302d:	cmp    eax,0x4
  403030:	je     0x403547
  403036:	lea    eax,[rax-0x2]
  403039:	cmp    eax,0x1
  40303c:	jbe    0x40350b
  403042:	xor    eax,eax
  403044:	or     rcx,0xffffffffffffffff
  403048:	mov    rdi,rbp
  40304b:	repnz scas al,BYTE PTR es:[rdi]
  40304d:	mov    rdi,rbp
  403050:	not    rcx
  403053:	lea    rax,[rbp+rcx*1-0x1]
  403058:	mov    rcx,QWORD PTR [rsp+0x38]
  40305d:	mov    DWORD PTR [rax],0xa3e503c
  403063:	mov    BYTE PTR [rax+0x4],0x0
  403067:	call   0x406b00
  40306c:	mov    ecx,eax
  40306e:	call   0x406b08
  403073:	test   rax,rax
  403076:	mov    r9,rax
  403079:	cmove  r9,QWORD PTR [rip+0x2aa0f]        # 0x42da90
  403081:	xor    eax,eax
  403083:	or     rcx,0xffffffffffffffff
  403087:	lea    r8,[rip+0x233fa]        # 0x426488
  40308e:	repnz scas al,BYTE PTR es:[rdi]
  403090:	mov    rdx,r12
  403093:	not    rcx
  403096:	sub    rcx,0x1
  40309a:	sub    rdx,rcx
  40309d:	add    rcx,rbp
  4030a0:	call   0x413f80
  4030a5:	mov    rcx,QWORD PTR [rsp+0x38]
  4030aa:	call   0x406dd0
  4030af:	sub    eax,0x1
  4030b2:	je     0x403433
  4030b8:	mov    ecx,esi
  4030ba:	mov    rdi,rbp
  4030bd:	call   0x406bb0
  4030c2:	test   rax,rax
  4030c5:	mov    r9,rax
  4030c8:	cmove  r9,QWORD PTR [rip+0x2a9c0]        # 0x42da90
  4030d0:	xor    eax,eax
  4030d2:	or     rcx,0xffffffffffffffff
  4030d6:	lea    r8,[rip+0x2341b]        # 0x4264f8
  4030dd:	repnz scas al,BYTE PTR es:[rdi]
  4030df:	mov    rdx,r12
  4030e2:	mov    rdi,rbp
  4030e5:	not    rcx
  4030e8:	sub    rcx,0x1
  4030ec:	sub    rdx,rcx
  4030ef:	add    rcx,rbp
  4030f2:	call   0x413f80
  4030f7:	mov    rcx,QWORD PTR [rsp+0x38]
  4030fc:	call   0x406d00
  403101:	mov    ecx,eax
  403103:	call   0x406cf8
  403108:	test   rax,rax
  40310b:	mov    r9,rax
  40310e:	cmove  r9,QWORD PTR [rip+0x2a97a]        # 0x42da90
  403116:	xor    eax,eax
  403118:	or     rcx,0xffffffffffffffff
  40311c:	lea    r8,[rip+0x23405]        # 0x426528
  403123:	repnz scas al,BYTE PTR es:[rdi]
  403125:	mov    rdx,r12
  403128:	mov    rdi,rbp
  40312b:	not    rcx
  40312e:	sub    rcx,0x1
  403132:	sub    rdx,rcx
  403135:	add    rcx,rbp
  403138:	call   0x413f80
  40313d:	mov    rcx,QWORD PTR [rsp+0x38]
  403142:	call   0x406d28
  403147:	mov    ecx,eax
  403149:	call   0x406d20
  40314e:	test   rax,rax
  403151:	mov    r9,rax
  403154:	cmove  r9,QWORD PTR [rip+0x2a934]        # 0x42da90
  40315c:	xor    eax,eax
  40315e:	or     rcx,0xffffffffffffffff
  403162:	lea    r8,[rip+0x233ef]        # 0x426558
  403169:	repnz scas al,BYTE PTR es:[rdi]
  40316b:	mov    rdx,r12
  40316e:	mov    rdi,rbp
  403171:	not    rcx
  403174:	sub    rcx,0x1
  403178:	sub    rdx,rcx
  40317b:	add    rcx,rbp
  40317e:	call   0x413f80
  403183:	mov    rcx,QWORD PTR [rsp+0x38]
  403188:	call   0x406ba0
  40318d:	mov    ecx,eax
  40318f:	call   0x406b98
  403194:	test   rax,rax
  403197:	mov    r9,rax
  40319a:	cmove  r9,QWORD PTR [rip+0x2a8ee]        # 0x42da90
  4031a2:	xor    eax,eax
  4031a4:	or     rcx,0xffffffffffffffff
  4031a8:	lea    r8,[rip+0x233d1]        # 0x426580
  4031af:	repnz scas al,BYTE PTR es:[rdi]
  4031b1:	mov    rdx,r12
  4031b4:	not    rcx
  4031b7:	sub    rcx,0x1
  4031bb:	sub    rdx,rcx
  4031be:	add    rcx,rbp
  4031c1:	call   0x413f80
  4031c6:	mov    rcx,QWORD PTR [rsp+0x38]
  4031cb:	call   0x406ba0
  4031d0:	mov    rcx,QWORD PTR [rsp+0x38]
  4031d5:	mov    edi,eax
  4031d7:	call   0x406d28
  4031dc:	mov    r8d,edi
  4031df:	mov    ecx,esi
  4031e1:	mov    edx,eax
  4031e3:	call   0x406d10
  4031e8:	mov    rdi,rbp
  4031eb:	test   rax,rax
  4031ee:	mov    r9,rax
  4031f1:	cmove  r9,QWORD PTR [rip+0x2a897]        # 0x42da90
  4031f9:	xor    eax,eax
  4031fb:	or     rcx,0xffffffffffffffff
  4031ff:	repnz scas al,BYTE PTR es:[rdi]
  403201:	mov    rdx,r12
  403204:	lea    r8,[rip+0x2339d]        # 0x4265a8
  40320b:	not    rcx
  40320e:	sub    rcx,0x1
  403212:	sub    rdx,rcx
  403215:	add    rcx,rbp
  403218:	call   0x413f80
  40321d:	mov    rsi,QWORD PTR [rsp+0x48]
  403222:	test   rsi,rsi
  403225:	je     0x40325e
  403227:	xor    eax,eax
  403229:	or     rcx,0xffffffffffffffff
  40322d:	mov    rdi,rbp
  403230:	repnz scas al,BYTE PTR es:[rdi]
  403232:	mov    rdx,r12
  403235:	lea    r8,[rip+0x233a2]        # 0x4265de
  40323c:	mov    r9,rsi
  40323f:	mov    rax,rcx
  403242:	not    rax
  403245:	sub    rax,0x1
  403249:	lea    rcx,[rbp+rax*1+0x0]
  40324e:	sub    rdx,rax
  403251:	call   0x413f80
  403256:	mov    rcx,rsi
  403259:	call   0x422858
  40325e:	or     r10,0xffffffffffffffff
  403262:	xor    esi,esi
  403264:	mov    rdi,rbp
  403267:	mov    rcx,r10
  40326a:	mov    QWORD PTR [rsp+0x38],r10
  40326f:	mov    eax,esi
  403271:	repnz scas al,BYTE PTR es:[rdi]
  403273:	mov    r9,QWORD PTR [rsp+0x50]
  403278:	mov    rdx,r12
  40327b:	lea    r8,[rip+0x23376]        # 0x4265f8
  403282:	mov    rax,rcx
  403285:	mov    rdi,rbp
  403288:	not    rax
  40328b:	add    rax,r10
  40328e:	lea    rcx,[rbp+rax*1+0x0]
  403293:	sub    rdx,rax
  403296:	call   0x413f80
  40329b:	mov    r10,QWORD PTR [rsp+0x38]
  4032a0:	mov    eax,esi
  4032a2:	mov    rcx,r10
  4032a5:	repnz scas al,BYTE PTR es:[rdi]
  4032a7:	mov    rax,rcx
  4032aa:	not    rax
  4032ad:	sub    rax,0x1
  4032b1:	mov    DWORD PTR [r15+0x24],eax
  4032b5:	mov    rax,rbp
  4032b8:	jmp    0x402e1c
  4032bd:	lea    rdx,[rip+0x23450]        # 0x426714
  4032c4:	mov    rcx,rsi
  4032c7:	call   0x422780
  4032cc:	test   rax,rax
  4032cf:	jne    0x4027d9
  4032d5:	lea    rdx,[rip+0x2343d]        # 0x426719
  4032dc:	mov    rcx,rsi
  4032df:	call   0x422780
  4032e4:	test   rax,rax
  4032e7:	jne    0x4027d9
  4032ed:	jmp    0x4025f6
  4032f2:	lea    rcx,[rip+0x2333f]        # 0x426638
  4032f9:	call   0x41a820
  4032fe:	test   rax,rax
  403301:	mov    rdi,rax
  403304:	mov    QWORD PTR [r15+0x18],rax
  403308:	je     0x40342c
  40330e:	xor    eax,eax
  403310:	or     rcx,0xffffffffffffffff
  403314:	repnz scas al,BYTE PTR es:[rdi]
  403316:	mov    rax,rcx
  403319:	not    rax
  40331c:	sub    eax,0x1
  40331f:	mov    DWORD PTR [r15+0x24],eax
  403323:	jmp    0x40281f
  403328:	lea    rdx,[rip+0x233ea]        # 0x426719
  40332f:	mov    rcx,rsi
  403332:	call   0x422780
  403337:	test   rax,rax
  40333a:	jne    0x402d19
  403340:	jmp    0x4025f6
  403345:	mov    rax,QWORD PTR [rsp+0x78]
  40334a:	call   rax
  40334c:	lea    rdx,[rip+0x22ee3]        # 0x426236
  403353:	lea    rcx,[rax+0x60]
  403357:	call   0x4019a0
  40335c:	mov    rcx,QWORD PTR [r15+0x38]
  403360:	call   0x406bf0
  403365:	cmp    eax,0xffffffe4
  403368:	je     0x40335c
  40336a:	cmp    eax,0xffffffcc
  40336d:	je     0x40335c
  40336f:	test   eax,eax
  403371:	mov    esi,eax
  403373:	js     0x403382
  403375:	mov    DWORD PTR [r15+0x2c],0x1
  40337d:	jmp    0x402793
  403382:	mov    rcx,QWORD PTR [r15+0x38]
  403386:	mov    edx,esi
  403388:	call   0x406df0
  40338d:	cmp    eax,0xffffffcc
  403390:	je     0x403382
  403392:	cmp    eax,0xffffffe4
  403395:	je     0x403382
  403397:	mov    ecx,esi
  403399:	call   0x4069d8
  40339e:	test   rax,rax
  4033a1:	mov    rsi,rax
  4033a4:	cmove  rsi,QWORD PTR [rip+0x2a6e4]        # 0x42da90
  4033ac:	mov    rax,QWORD PTR [rsp+0x78]
  4033b1:	call   rax
  4033b3:	lea    rdx,[rip+0x22ced]        # 0x4260a7
  4033ba:	lea    rcx,[rax+0x30]
  4033be:	mov    r8,rsi
  4033c1:	call   0x4019a0
  4033c6:	mov    DWORD PTR [r15+0x2c],0x3
  4033ce:	jmp    0x402793
  4033d3:	call   QWORD PTR [rip+0x33ceb]        # 0x4370c4
  4033d9:	lea    rdx,[rip+0x2330c]        # 0x4266ec
  4033e0:	lea    rcx,[rax+0x60]
  4033e4:	call   0x4019a0
  4033e9:	mov    ecx,esi
  4033eb:	call   0x4069d8
  4033f0:	test   rax,rax
  4033f3:	mov    rdi,rax
  4033f6:	cmove  rdi,QWORD PTR [rip+0x2a692]        # 0x42da90
  4033fe:	call   QWORD PTR [rip+0x33cc0]        # 0x4370c4
  403404:	lea    rdx,[rip+0x22c9c]        # 0x4260a7
  40340b:	lea    rcx,[rax+0x30]
  40340f:	mov    r8,rdi
  403412:	call   0x4019a0
  403417:	jmp    0x402c4c
  40341c:	mov    rcx,QWORD PTR [r15+0x38]
  403420:	xor    edx,edx
  403422:	call   0x406bd0
  403427:	jmp    0x402793
  40342c:	xor    eax,eax
  40342e:	jmp    0x40331f
  403433:	mov    rcx,QWORD PTR [rsp+0x38]
  403438:	mov    rdi,rbp
  40343b:	call   0x406d50
  403440:	mov    ecx,eax
  403442:	call   0x406d48
  403447:	test   rax,rax
  40344a:	mov    r9,rax
  40344d:	cmove  r9,QWORD PTR [rip+0x2a63b]        # 0x42da90
  403455:	or     rcx,0xffffffffffffffff
  403459:	xor    eax,eax
  40345b:	mov    rdx,r12
  40345e:	repnz scas al,BYTE PTR es:[rdi]
  403460:	lea    r8,[rip+0x23061]        # 0x4264c8
  403467:	not    rcx
  40346a:	sub    rcx,0x1
  40346e:	sub    rdx,rcx
  403471:	add    rcx,rbp
  403474:	call   0x413f80
  403479:	jmp    0x4030b8
  40347e:	mov    rcx,QWORD PTR [rsp+0x38]
  403483:	call   0x406ae0
  403488:	mov    r9,rax
  40348b:	or     rcx,0xffffffffffffffff
  40348f:	xor    eax,eax
  403491:	mov    rdi,rbp
  403494:	mov    rdx,r12
  403497:	lea    r8,[rip+0x22f5a]        # 0x4263f8
  40349e:	repnz scas al,BYTE PTR es:[rdi]
  4034a0:	mov    rax,rcx
  4034a3:	not    rax
  4034a6:	lea    rcx,[rax-0x1]
  4034aa:	sub    rdx,rcx
  4034ad:	add    rcx,rbp
  4034b0:	call   0x413f80
  4034b5:	jmp    0x403042
  4034ba:	mov    rcx,QWORD PTR [rsp+0x38]
  4034bf:	call   0x406a00
  4034c4:	jmp    0x403488
  4034c6:	xor    eax,eax
  4034c8:	or     rcx,0xffffffffffffffff
  4034cc:	mov    rdi,rbp
  4034cf:	repnz scas al,BYTE PTR es:[rdi]
  4034d1:	mov    rdx,r12
  4034d4:	lea    r8,[rip+0x22f01]        # 0x4263dc
  4034db:	mov    r9,rsi
  4034de:	mov    rax,rcx
  4034e1:	not    rax
  4034e4:	sub    rax,0x1
  4034e8:	lea    rcx,[rbp+rax*1+0x0]
  4034ed:	sub    rdx,rax
  4034f0:	call   0x413f80
  4034f5:	jmp    0x40300f
  4034fa:	mov    rcx,QWORD PTR [rsp+0x48]
  4034ff:	call   0x422858
  403504:	xor    eax,eax
  403506:	jmp    0x402e1c
  40350b:	mov    rcx,QWORD PTR [rsp+0x38]
  403510:	mov    rdi,rbp
  403513:	call   0x406ca8
  403518:	or     rcx,0xffffffffffffffff
  40351c:	mov    r9d,eax
  40351f:	xor    eax,eax
  403521:	repnz scas al,BYTE PTR es:[rdi]
  403523:	mov    rdx,r12
  403526:	lea    r8,[rip+0x22f23]        # 0x426450
  40352d:	mov    rax,rcx
  403530:	not    rax
  403533:	lea    rcx,[rax-0x1]
  403537:	sub    rdx,rcx
  40353a:	add    rcx,rbp
  40353d:	call   0x413f80
  403542:	jmp    0x403042
  403547:	mov    rcx,QWORD PTR [rsp+0x38]
  40354c:	mov    rdi,rbp
  40354f:	call   0x406ca8
  403554:	or     rcx,0xffffffffffffffff
  403558:	mov    r9d,eax
  40355b:	xor    eax,eax
  40355d:	repnz scas al,BYTE PTR es:[rdi]
  40355f:	mov    rdx,r12
  403562:	lea    r8,[rip+0x22eaf]        # 0x426418
  403569:	mov    rax,rcx
  40356c:	not    rax
  40356f:	lea    rcx,[rax-0x1]
  403573:	sub    rdx,rcx
  403576:	add    rcx,rbp
  403579:	call   0x413f80
  40357e:	jmp    0x403042
  403583:	mov    rcx,QWORD PTR [rsp+0x38]
  403588:	lea    rdx,[rsp+0xa8]
  403590:	mov    DWORD PTR [rsp+0xa8],0x0
  40359b:	call   0x406da8
  4035a0:	cmp    DWORD PTR [rsp+0xa8],0x0
  4035a8:	je     0x402eb3
  4035ae:	mov    QWORD PTR [rsp+0x68],rax
  4035b3:	lea    rax,[rsp+0xc0]
  4035bb:	xor    esi,esi
  4035bd:	mov    QWORD PTR [rsp+0x58],0x0
  4035c6:	mov    QWORD PTR [rsp+0x60],rax
  4035cb:	lea    rax,[rsp+0x160]
  4035d3:	mov    QWORD PTR [rsp+0x80],rax
  4035db:	jmp    0x403601
  4035dd:	nop    DWORD PTR [rax]
  4035e0:	add    QWORD PTR [rsp+0x58],0x1
  4035e6:	mov    eax,DWORD PTR [rsp+0xa8]
  4035ed:	mov    rdi,QWORD PTR [rsp+0x58]
  4035f2:	add    QWORD PTR [rsp+0x68],0x10
  4035f8:	cmp    rdi,rax
  4035fb:	jae    0x402eb3
  403601:	mov    rcx,QWORD PTR [rsp+0x60]
  403606:	call   0x406988
  40360b:	test   eax,eax
  40360d:	jne    0x4035e0
  40360f:	mov    rdx,QWORD PTR [rsp+0x68]
  403614:	mov    rcx,QWORD PTR [rsp+0xc0]
  40361c:	xor    r8d,r8d
  40361f:	call   0x406990
  403624:	test   eax,eax
  403626:	jne    0x4035e0
  403628:	mov    r8,QWORD PTR [rsp+0x80]
  403630:	mov    rcx,QWORD PTR [rsp+0xc0]
  403638:	xor    edx,edx
  40363a:	call   0x406980
  40363f:	test   eax,eax
  403641:	jne    0x4035e0
  403643:	mov    eax,DWORD PTR [rsp+0x168]
  40364a:	mov    rcx,QWORD PTR [rsp+0x48]
  40364f:	lea    rdx,[rsi+rax*1+0xf]
  403654:	call   0x413f30
  403659:	test   rax,rax
  40365c:	mov    rbp,rax
  40365f:	je     0x4034fa
  403665:	mov    r8d,DWORD PTR [rsp+0x168]
  40366d:	mov    rdx,QWORD PTR [rsp+0x160]
  403675:	lea    rcx,[rax+rsi*1]
  403679:	call   0x422810
  40367e:	mov    eax,DWORD PTR [rsp+0x168]
  403685:	mov    ecx,0xe
  40368a:	add    rax,rsi
  40368d:	lea    rsi,[rip+0x22c8b]        # 0x42631f
  403694:	lea    rdx,[rbp+rax*1+0x0]
  403699:	mov    rdi,rdx
  40369c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40369e:	mov    BYTE PTR [rbp+rax*1+0xe],0x0
  4036a3:	lea    rsi,[rax+0xe]
  4036a7:	mov    rax,QWORD PTR [rip+0x2a352]        # 0x42da00
  4036ae:	mov    rcx,QWORD PTR [rsp+0x160]
  4036b6:	call   QWORD PTR [rax]
  4036b8:	mov    QWORD PTR [rsp+0x48],rbp
  4036bd:	jmp    0x4035e0
  4036c2:	xor    eax,eax
  4036c4:	jmp    0x402e1c
  4036c9:	nop
  4036ca:	nop
  4036cb:	nop
  4036cc:	nop
  4036cd:	nop
  4036ce:	nop
  4036cf:	nop
  4036d0:	sub    rsp,0x38
  4036d4:	mov    rax,rcx
  4036d7:	mov    ecx,DWORD PTR [rcx+0x8]
  4036da:	mov    r9d,DWORD PTR [rax+0x18]
  4036de:	mov    DWORD PTR [rsp+0x28],r9d
  4036e3:	mov    rax,QWORD PTR [rax+0x10]
  4036e7:	xor    r9d,r9d
  4036ea:	mov    QWORD PTR [rsp+0x20],rax
  4036ef:	call   0x4198a0
  4036f4:	add    rsp,0x38
  4036f8:	ret    
  4036f9:	nop    DWORD PTR [rax+0x0]
  403700:	sub    rsp,0x38
  403704:	mov    QWORD PTR [rsp+0x48],rdx
  403709:	lea    rdx,[rsp+0x48]
  40370e:	mov    QWORD PTR [rsp+0x50],r8
  403713:	mov    QWORD PTR [rsp+0x58],r9
  403718:	mov    QWORD PTR [rsp+0x28],rdx
  40371d:	call   0x41dd10
  403722:	add    rsp,0x38
  403726:	ret    
  403727:	nop    WORD PTR [rax+rax*1+0x0]
  403730:	push   rdi
  403731:	push   rsi
  403732:	push   rbx
  403733:	sub    rsp,0x90
  40373a:	xor    r9d,r9d
  40373d:	lea    rax,[rsp+0x3c]
  403742:	mov    rbx,rcx
  403745:	lea    rsi,[rsp+0x40]
  40374a:	mov    ecx,DWORD PTR [rcx+0x8]
  40374d:	mov    DWORD PTR [rsp+0x3c],0x10
  403755:	mov    QWORD PTR [rsp+0x28],rax
  40375a:	mov    QWORD PTR [rsp+0x20],rsi
  40375f:	call   0x417fd0
  403764:	mov    rdi,rax
  403767:	mov    rax,0xffffffffffffffff
  40376e:	cmp    edi,0xffffffff
  403771:	je     0x403795
  403773:	mov    eax,DWORD PTR [rsp+0x3c]
  403777:	cmp    DWORD PTR [rbx+0x18],eax
  40377a:	jne    0x4037a0
  40377c:	mov    rdx,QWORD PTR [rbx+0x10]
  403780:	mov    r8d,0x10
  403786:	mov    rcx,rsi
  403789:	call   0x422818
  40378e:	test   eax,eax
  403790:	jne    0x4037a0
  403792:	movsxd rax,edi
  403795:	add    rsp,0x90
  40379c:	pop    rbx
  40379d:	pop    rsi
  40379e:	pop    rdi
  40379f:	ret    
  4037a0:	lea    r8,[rsp+0x50]
  4037a5:	mov    r9d,0x40
  4037ab:	mov    edx,0x10
  4037b0:	mov    rcx,rsi
  4037b3:	call   0x401e20
  4037b8:	lea    rcx,[rip+0x232f1]        # 0x426ab0
  4037bf:	mov    rdx,rax
  4037c2:	call   0x403700
  4037c7:	mov    rcx,QWORD PTR [rbx]
  4037ca:	mov    edx,0xb
  4037cf:	call   0x4069d0
  4037d4:	mov    rax,0xffffffffffffffff
  4037db:	jmp    0x403795
  4037dd:	nop    DWORD PTR [rax]
  4037e0:	sub    rsp,0x38
  4037e4:	mov    QWORD PTR [rsp+0x50],r8
  4037e9:	lea    r8,[rsp+0x50]
  4037ee:	mov    QWORD PTR [rsp+0x58],r9
  4037f3:	mov    QWORD PTR [rsp+0x28],r8
  4037f8:	call   0x41dce0
  4037fd:	add    rsp,0x38
  403801:	ret    
  403802:	nop    DWORD PTR [rax+0x0]
  403806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403810:	push   rsi
  403811:	push   rbx
  403812:	sub    rsp,0x278
  403819:	movsxd rax,DWORD PTR [rcx+0x8]
  40381d:	imul   edx,edx,0x3e8
  403823:	mov    rbx,rcx
  403826:	mov    DWORD PTR [rsp+0x60],0x1
  40382e:	mov    QWORD PTR [rsp+0x40],0x0
  403837:	cmp    edx,0xf423f
  40383d:	mov    r9,rax
  403840:	mov    QWORD PTR [rsp+0x68],rax
  403845:	mov    DWORD PTR [rsp+0x48],edx
  403849:	mov    eax,0x1
  40384e:	jle    0x40386e
  403850:	sub    edx,0xf4240
  403856:	mov    r8,rax
  403859:	add    rax,0x1
  40385d:	cmp    edx,0xf423f
  403863:	jg     0x403850
  403865:	mov    DWORD PTR [rsp+0x48],edx
  403869:	mov    QWORD PTR [rsp+0x40],r8
  40386e:	lea    eax,[r9+0x1]
  403872:	lea    rcx,[rsp+0x40]
  403877:	lea    rdx,[rsp+0x60]
  40387c:	xor    r9d,r9d
  40387f:	xor    r8d,r8d
  403882:	mov    QWORD PTR [rsp+0x20],rcx
  403887:	mov    ecx,eax
  403889:	call   0x4187f0
  40388e:	test   eax,eax
  403890:	jle    0x4038d9
  403892:	lea    rax,[rsp+0x3c]
  403897:	mov    ecx,DWORD PTR [rbx+0x8]
  40389a:	lea    rsi,[rsp+0x50]
  40389f:	lea    rdx,[rsp+0x3b]
  4038a4:	mov    r9d,0x2
  4038aa:	mov    r8d,0x1
  4038b0:	mov    QWORD PTR [rsp+0x28],rax
  4038b5:	mov    QWORD PTR [rsp+0x20],rsi
  4038ba:	mov    DWORD PTR [rsp+0x3c],0x10
  4038c2:	call   0x417fd0
  4038c7:	mov    rdx,rax
  4038ca:	xor    eax,eax
  4038cc:	test   edx,edx
  4038ce:	jle    0x4038d9
  4038d0:	mov    ecx,DWORD PTR [rsp+0x3c]
  4038d4:	cmp    DWORD PTR [rbx+0x18],ecx
  4038d7:	je     0x4038e3
  4038d9:	add    rsp,0x278
  4038e0:	pop    rbx
  4038e1:	pop    rsi
  4038e2:	ret    
  4038e3:	mov    rdx,QWORD PTR [rbx+0x10]
  4038e7:	mov    r8d,0x10
  4038ed:	mov    rcx,rsi
  4038f0:	call   0x422818
  4038f5:	test   eax,eax
  4038f7:	sete   al
  4038fa:	movzx  eax,al
  4038fd:	add    rsp,0x278
  403904:	pop    rbx
  403905:	pop    rsi
  403906:	ret    
  403907:	nop    WORD PTR [rax+rax*1+0x0]
  403910:	push   r15
  403912:	push   r14
  403914:	push   r13
  403916:	push   r12
  403918:	push   rbp
  403919:	push   rdi
  40391a:	push   rsi
  40391b:	push   rbx
  40391c:	sub    rsp,0x278
  403923:	lea    rax,[rsp+0xa0]
  40392b:	mov    rbx,rcx
  40392e:	mov    esi,edx
  403930:	mov    edx,0x10
  403935:	mov    DWORD PTR [rsp+0x2d0],r8d
  40393d:	mov    rcx,rax
  403940:	mov    QWORD PTR [rsp+0x58],rax
  403945:	call   0x406bc0
  40394a:	test   eax,eax
  40394c:	js     0x403d8a
  403952:	mov    r8d,0x2
  403958:	mov    edx,esi
  40395a:	mov    rcx,rbx
  40395d:	call   0x402120
  403962:	test   eax,eax
  403964:	js     0x403d6a
  40396a:	lea    rax,[rsp+0xd0]
  403972:	mov    r14,QWORD PTR [rip+0x3374b]        # 0x4370c4
  403979:	lea    rsi,[rsp+0x170]
  403981:	lea    r13,[rsp+0x7c]
  403986:	lea    rbp,[rsp+0xf0]
  40398e:	lea    r12,[rsp+0x90]
  403996:	mov    QWORD PTR [rsp+0x68],rax
  40399b:	lea    rax,[rsp+0xb0]
  4039a3:	lea    rdi,[rsp+0x80]
  4039ab:	mov    QWORD PTR [rsp+0x60],rax
  4039b0:	lea    rcx,[rip+0x23138]        # 0x426aef
  4039b7:	call   0x403700
  4039bc:	call   0x401f70
  4039c1:	test   eax,eax
  4039c3:	mov    r15d,eax
  4039c6:	js     0x4039b0
  4039c8:	mov    rdx,rsi
  4039cb:	mov    QWORD PTR [rsp+0x28],r13
  4039d0:	mov    QWORD PTR [rsp+0x20],rbp
  4039d5:	mov    r9d,0x2
  4039db:	mov    r8d,0xfe
  4039e1:	mov    ecx,eax
  4039e3:	mov    DWORD PTR [rsp+0x7c],0x80
  4039eb:	call   0x417fd0
  4039f0:	test   eax,eax
  4039f2:	movsxd rdx,eax
  4039f5:	jle    0x4039b0
  4039f7:	movsxd r8,DWORD PTR [rsp+0x7c]
  4039fc:	mov    rcx,QWORD PTR [rsp+0x58]
  403a01:	mov    r9,rsi
  403a04:	mov    QWORD PTR [r12],0x0
  403a0c:	mov    DWORD PTR [r12+0x8],0x0
  403a15:	mov    QWORD PTR [rsp+0x20],rdx
  403a1a:	mov    QWORD PTR [rsp+0x28],r12
  403a1f:	mov    rdx,rbp
  403a22:	call   0x406c50
  403a27:	test   eax,eax
  403a29:	js     0x403c89
  403a2f:	mov    r9d,0xfe
  403a35:	mov    r8,rsi
  403a38:	mov    edx,0x80
  403a3d:	mov    rcx,rbp
  403a40:	call   0x401e20
  403a45:	lea    rcx,[rip+0x230e8]        # 0x426b34
  403a4c:	mov    rdx,rax
  403a4f:	call   0x403700
  403a54:	mov    ecx,0x1
  403a59:	call   0x401b40
  403a5e:	mov    rdx,r12
  403a61:	mov    rcx,rax
  403a64:	mov    rbx,rax
  403a67:	call   0x406c48
  403a6c:	mov    eax,DWORD PTR [rsp+0x2d0]
  403a73:	test   eax,eax
  403a75:	jne    0x403d29
  403a7b:	mov    eax,DWORD PTR [rsp+0x7c]
  403a7f:	mov    rdx,QWORD PTR [rsp+0x60]
  403a84:	mov    rcx,rbx
  403a87:	mov    QWORD PTR [rsp+0xb0],rbx
  403a8f:	mov    DWORD PTR [rsp+0xb8],r15d
  403a97:	mov    QWORD PTR [rsp+0xc0],rbp
  403a9f:	mov    DWORD PTR [rsp+0xc8],eax
  403aa6:	call   0x4069c0
  403aab:	lea    rdx,[rip+0xfffffffffffffc1e]        # 0x4036d0
  403ab2:	mov    rcx,rbx
  403ab5:	call   0x4069a8
  403aba:	lea    rdx,[rip+0xfffffffffffffc6f]        # 0x403730
  403ac1:	mov    rcx,rbx
  403ac4:	call   0x4069b8
  403ac9:	lea    rdx,[rip+0xfffffffffffffd40]        # 0x403810
  403ad0:	mov    rcx,rbx
  403ad3:	call   0x4069b0
  403ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ae0:	mov    rcx,rbx
  403ae3:	call   0x406bf0
  403ae8:	cmp    eax,0xffffffcc
  403aeb:	je     0x403ae0
  403aed:	cmp    eax,0xffffffe4
  403af0:	je     0x403ae0
  403af2:	test   eax,eax
  403af4:	js     0x403d3d
  403afa:	nop    WORD PTR [rax+rax*1+0x0]
  403b00:	mov    r9,rdi
  403b03:	mov    r8d,0xfe
  403b09:	mov    rdx,rsi
  403b0c:	mov    rcx,rbx
  403b0f:	call   0x406ab8
  403b14:	mov    r10,rax
  403b17:	cmp    r10d,0xfffffedb
  403b1e:	je     0x403c10
  403b24:	cmp    r10d,0xffffffe4
  403b28:	je     0x403b00
  403b2a:	cmp    r10d,0xffffffcc
  403b2e:	je     0x403b00
  403b30:	cmp    r10d,0xffffffdb
  403b34:	je     0x403c20
  403b3a:	test   r10d,r10d
  403b3d:	js     0x403c53
  403b43:	je     0x403c78
  403b49:	movsxd r15,eax
  403b4c:	movzx  eax,BYTE PTR [rsp+0x87]
  403b54:	movzx  r9d,BYTE PTR [rsp+0x82]
  403b5d:	mov    BYTE PTR [rsp+r15*1+0x170],0x0
  403b66:	movzx  r8d,BYTE PTR [rsp+0x81]
  403b6f:	lea    rcx,[rip+0x23032]        # 0x426ba8
  403b76:	movzx  edx,BYTE PTR [rsp+0x80]
  403b7e:	mov    QWORD PTR [rsp+0x48],rsi
  403b83:	mov    DWORD PTR [rsp+0x40],eax
  403b87:	movzx  eax,BYTE PTR [rsp+0x86]
  403b8f:	mov    DWORD PTR [rsp+0x38],eax
  403b93:	movzx  eax,BYTE PTR [rsp+0x85]
  403b9b:	mov    DWORD PTR [rsp+0x30],eax
  403b9f:	movzx  eax,BYTE PTR [rsp+0x84]
  403ba7:	mov    DWORD PTR [rsp+0x28],eax
  403bab:	movzx  eax,BYTE PTR [rsp+0x83]
  403bb3:	mov    DWORD PTR [rsp+0x20],eax
  403bb7:	call   0x403700
  403bbc:	mov    rdx,rsi
  403bbf:	mov    rcx,rbx
  403bc2:	call   0x4064b0
  403bc7:	test   eax,eax
  403bc9:	jne    0x403b00
  403bcf:	mov    r8,r15
  403bd2:	mov    rdx,rsi
  403bd5:	mov    rcx,rbx
  403bd8:	call   0x406ab0
  403bdd:	test   eax,eax
  403bdf:	jns    0x403b00
  403be5:	mov    ecx,eax
  403be7:	call   0x4069d8
  403bec:	mov    rbx,rax
  403bef:	call   r14
  403bf2:	lea    rdx,[rip+0x22fdf]        # 0x426bd8
  403bf9:	lea    rcx,[rax+0x60]
  403bfd:	mov    r8,rbx
  403c00:	call   0x4037e0
  403c05:	jmp    0x4039b0
  403c0a:	nop    WORD PTR [rax+rax*1+0x0]
  403c10:	xor    edx,edx
  403c12:	mov    rcx,rbx
  403c15:	call   0x406bd0
  403c1a:	jmp    0x403b00
  403c1f:	nop
  403c20:	call   r14
  403c23:	lea    rdx,[rip+0x22f41]        # 0x426b6b
  403c2a:	lea    rcx,[rax+0x60]
  403c2e:	call   0x4037e0
  403c33:	mov    rcx,rbx
  403c36:	call   0x406bf0
  403c3b:	cmp    eax,0xffffffe4
  403c3e:	je     0x403c33
  403c40:	cmp    eax,0xffffffcc
  403c43:	je     0x403c33
  403c45:	test   eax,eax
  403c47:	je     0x403b00
  403c4d:	jns    0x403b49
  403c53:	mov    ecx,eax
  403c55:	call   0x4069d8
  403c5a:	mov    rbx,rax
  403c5d:	call   r14
  403c60:	lea    rdx,[rip+0x22f20]        # 0x426b87
  403c67:	lea    rcx,[rax+0x60]
  403c6b:	mov    r8,rbx
  403c6e:	call   0x4037e0
  403c73:	jmp    0x4039b0
  403c78:	lea    rcx,[rip+0x22f1d]        # 0x426b9c
  403c7f:	call   0x403700
  403c84:	jmp    0x4039b0
  403c89:	mov    rbx,QWORD PTR [rsp+0x68]
  403c8e:	mov    edx,DWORD PTR [rsp+0x7c]
  403c92:	mov    r8,rsi
  403c95:	mov    r9d,0xfe
  403c9b:	mov    rcx,rbp
  403c9e:	mov    QWORD PTR [rbx],0x0
  403ca5:	mov    QWORD PTR [rbx+0x8],0x0
  403cad:	mov    QWORD PTR [rbx+0x18],0x0
  403cb5:	mov    DWORD PTR [rsp+0xd8],r15d
  403cbd:	mov    DWORD PTR [rsp+0xe8],edx
  403cc4:	mov    QWORD PTR [rsp+0xe0],rbp
  403ccc:	call   0x401e20
  403cd1:	lea    rcx,[rip+0x22e38]        # 0x426b10
  403cd8:	mov    rdx,rax
  403cdb:	call   0x403700
  403ce0:	movsxd r8,DWORD PTR [rsp+0x7c]
  403ce5:	mov    rcx,QWORD PTR [rsp+0x58]
  403cea:	lea    rax,[rip+0xfffffffffffff9df]        # 0x4036d0
  403cf1:	mov    r9,r12
  403cf4:	mov    rdx,rbp
  403cf7:	mov    QWORD PTR [rsp+0x20],rbx
  403cfc:	mov    QWORD PTR [rsp+0x28],rax
  403d01:	call   0x406c58
  403d06:	mov    QWORD PTR [rsp+0x28],r13
  403d0b:	mov    QWORD PTR [rsp+0x20],rbp
  403d10:	xor    r9d,r9d
  403d13:	mov    r8d,0xfe
  403d19:	mov    rdx,rsi
  403d1c:	mov    ecx,r15d
  403d1f:	call   0x417fd0
  403d24:	jmp    0x4039b0
  403d29:	mov    edx,DWORD PTR [rsp+0x2d0]
  403d30:	mov    rcx,rbx
  403d33:	call   0x406c40
  403d38:	jmp    0x403a7b
  403d3d:	mov    ecx,eax
  403d3f:	call   0x4069d8
  403d44:	mov    r15,rax
  403d47:	call   r14
  403d4a:	lea    rdx,[rip+0x22e00]        # 0x426b51
  403d51:	lea    rcx,[rax+0x60]
  403d55:	mov    r8,r15
  403d58:	call   0x4037e0
  403d5d:	mov    rcx,rbx
  403d60:	call   0x406cc0
  403d65:	jmp    0x4039b0
  403d6a:	call   QWORD PTR [rip+0x33354]        # 0x4370c4
  403d70:	lea    rdx,[rip+0x22d69]        # 0x426ae0
  403d77:	lea    rcx,[rax+0x60]
  403d7b:	call   0x4037e0
  403d80:	mov    ecx,0x1
  403d85:	call   0x4228a0
  403d8a:	call   QWORD PTR [rip+0x33334]        # 0x4370c4
  403d90:	lea    rdx,[rip+0x22d34]        # 0x426acb
  403d97:	lea    rcx,[rax+0x60]
  403d9b:	call   0x4037e0
  403da0:	mov    ecx,0x1
  403da5:	call   0x4228a0
  403daa:	nop
  403dab:	nop
  403dac:	nop
  403dad:	nop
  403dae:	nop
  403daf:	nop
  403db0:	sub    rsp,0x38
  403db4:	mov    QWORD PTR [rsp+0x50],r8
  403db9:	lea    r8,[rsp+0x50]
  403dbe:	mov    QWORD PTR [rsp+0x58],r9
  403dc3:	mov    QWORD PTR [rsp+0x28],r8
  403dc8:	call   0x41dce0
  403dcd:	add    rsp,0x38
  403dd1:	ret    
  403dd2:	nop    DWORD PTR [rax+0x0]
  403dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403de0:	sub    rsp,0x38
  403de4:	mov    QWORD PTR [rsp+0x48],rdx
  403de9:	lea    rdx,[rsp+0x48]
  403dee:	mov    QWORD PTR [rsp+0x50],r8
  403df3:	mov    QWORD PTR [rsp+0x58],r9
  403df8:	mov    QWORD PTR [rsp+0x28],rdx
  403dfd:	call   0x41dd10
  403e02:	add    rsp,0x38
  403e06:	ret    
  403e07:	nop    WORD PTR [rax+rax*1+0x0]
  403e10:	push   rbp
  403e11:	push   rdi
  403e12:	push   rsi
  403e13:	push   rbx
  403e14:	sub    rsp,0x28
  403e18:	mov    ebp,edx
  403e1a:	mov    rsi,rcx
  403e1d:	mov    rcx,r8
  403e20:	mov    rbx,r8
  403e23:	call   0x4227a8
  403e28:	test   ebp,ebp
  403e2a:	mov    rdi,rax
  403e2d:	jne    0x403e50
  403e2f:	mov    ecx,DWORD PTR [rsi]
  403e31:	xor    r9d,r9d
  403e34:	movsxd r8,edi
  403e37:	mov    rdx,rbx
  403e3a:	call   0x4194e0
  403e3f:	cmp    eax,0xffffffff
  403e42:	je     0x403e6b
  403e44:	cdqe   
  403e46:	add    rsp,0x28
  403e4a:	pop    rbx
  403e4b:	pop    rsi
  403e4c:	pop    rdi
  403e4d:	pop    rbp
  403e4e:	ret    
  403e4f:	nop
  403e50:	call   QWORD PTR [rip+0x3326e]        # 0x4370c4
  403e56:	lea    rdx,[rip+0x22d93]        # 0x426bf0
  403e5d:	lea    rcx,[rax+0x60]
  403e61:	mov    r8,rbx
  403e64:	call   0x403db0
  403e69:	jmp    0x403e2f
  403e6b:	call   QWORD PTR [rip+0x33253]        # 0x4370c4
  403e71:	lea    rdx,[rip+0x22d8f]        # 0x426c07
  403e78:	lea    rcx,[rax+0x60]
  403e7c:	mov    r8,rbx
  403e7f:	call   0x403db0
  403e84:	mov    ecx,0x1
  403e89:	call   0x4228a0
  403e8e:	nop
  403e8f:	nop
  403e90:	push   r15
  403e92:	push   r14
  403e94:	push   r13
  403e96:	push   r12
  403e98:	push   rbp
  403e99:	push   rdi
  403e9a:	push   rsi
  403e9b:	push   rbx
  403e9c:	sub    rsp,0x678
  403ea3:	test   r8,r8
  403ea6:	mov    rdi,rcx
  403ea9:	mov    r13,rdx
  403eac:	mov    rsi,r8
  403eaf:	mov    r12d,r9d
  403eb2:	je     0x403ed6
  403eb4:	mov    edx,DWORD PTR [rdx]
  403eb6:	test   edx,edx
  403eb8:	je     0x403ed6
  403eba:	call   QWORD PTR [rip+0x33204]        # 0x4370c4
  403ec0:	lea    rdx,[rip+0x22d59]        # 0x426c20
  403ec7:	lea    rcx,[rax+0x60]
  403ecb:	mov    r9,rsi
  403ece:	mov    r8d,r12d
  403ed1:	call   0x403db0
  403ed6:	lea    rax,[rsp+0x60]
  403edb:	lea    r14,[rsp+0x50]
  403ee0:	lea    rbx,[rsp+0x270]
  403ee8:	mov    ebp,r12d
  403eeb:	mov    QWORD PTR [rsp+0x38],rax
  403ef0:	movsxd rax,DWORD PTR [rdi]
  403ef3:	mov    rdx,QWORD PTR [rsp+0x38]
  403ef8:	xor    r9d,r9d
  403efb:	xor    r8d,r8d
  403efe:	mov    QWORD PTR [rsp+0x20],r14
  403f03:	mov    DWORD PTR [rsp+0x60],0x1
  403f0b:	mov    QWORD PTR [rsp+0x50],0xa
  403f14:	mov    DWORD PTR [rsp+0x58],0x0
  403f1c:	mov    rcx,rax
  403f1f:	mov    QWORD PTR [rsp+0x68],rax
  403f24:	add    ecx,0x1
  403f27:	call   0x4187f0
  403f2c:	test   eax,eax
  403f2e:	jle    0x403fd0
  403f34:	mov    ecx,DWORD PTR [rdi]
  403f36:	xor    r9d,r9d
  403f39:	mov    r8d,0x3ff
  403f3f:	mov    rdx,rbx
  403f42:	call   0x417c10
  403f47:	cmp    eax,0xffffffff
  403f4a:	mov    r15,rax
  403f4d:	mov    DWORD PTR [rsp+0x44],eax
  403f51:	je     0x403fd0
  403f53:	movsxd r11,eax
  403f56:	test   rsi,rsi
  403f59:	mov    BYTE PTR [rsp+r11*1+0x270],0x0
  403f62:	je     0x403fb0
  403f64:	mov    eax,DWORD PTR [r13+0x0]
  403f68:	test   eax,eax
  403f6a:	jne    0x403ff3
  403f70:	mov    r9,rbp
  403f73:	mov    r8,rsi
  403f76:	mov    rdx,r11
  403f79:	mov    rcx,rbx
  403f7c:	call   0x413c90
  403f81:	test   rax,rax
  403f84:	je     0x403f91
  403f86:	cmp    rax,rbx
  403f89:	je     0x403f91
  403f8b:	cmp    BYTE PTR [rax-0x1],0xa
  403f8f:	je     0x403fb0
  403f91:	cmp    r15d,r12d
  403f94:	jl     0x403ef0
  403f9a:	mov    r8,rbp
  403f9d:	mov    rdx,rsi
  403fa0:	mov    rcx,rbx
  403fa3:	call   0x4227a0
  403fa8:	test   eax,eax
  403faa:	jne    0x403ef0
  403fb0:	movsxd rax,DWORD PTR [rsp+0x44]
  403fb5:	add    rsp,0x678
  403fbc:	pop    rbx
  403fbd:	pop    rsi
  403fbe:	pop    rdi
  403fbf:	pop    rbp
  403fc0:	pop    r12
  403fc2:	pop    r13
  403fc4:	pop    r14
  403fc6:	pop    r15
  403fc8:	ret    
  403fc9:	nop    DWORD PTR [rax+0x0]
  403fd0:	call   QWORD PTR [rip+0x330ee]        # 0x4370c4
  403fd6:	lea    rdx,[rip+0x22c62]        # 0x426c3f
  403fdd:	lea    rcx,[rax+0x60]
  403fe1:	mov    r8,rsi
  403fe4:	call   0x403db0
  403fe9:	mov    ecx,0x1
  403fee:	call   0x4228a0
  403ff3:	mov    QWORD PTR [rsp+0x48],r11
  403ff8:	call   QWORD PTR [rip+0x330c6]        # 0x4370c4
  403ffe:	lea    rdx,[rip+0x22c4e]        # 0x426c53
  404005:	lea    rcx,[rax+0x60]
  404009:	mov    r8,rbx
  40400c:	call   0x403db0
  404011:	mov    r11,QWORD PTR [rsp+0x48]
  404016:	jmp    0x403f70
  40401b:	nop    DWORD PTR [rax+rax*1+0x0]
  404020:	push   rbp
  404021:	push   rdi
  404022:	push   rsi
  404023:	push   rbx
  404024:	sub    rsp,0x28
  404028:	mov    eax,DWORD PTR [rcx+0x10]
  40402b:	mov    rbx,rcx
  40402e:	mov    rdi,rdx
  404031:	movsxd rsi,r8d
  404034:	test   eax,eax
  404036:	jne    0x404080
  404038:	mov    rbp,QWORD PTR [rip+0x330d5]        # 0x437114
  40403f:	jmp    0x404048
  404041:	call   rbp
  404043:	cmp    DWORD PTR [rax],0x4
  404046:	jne    0x4040a5
  404048:	mov    ecx,DWORD PTR [rbx]
  40404a:	xor    r9d,r9d
  40404d:	mov    r8,rsi
  404050:	mov    rdx,rdi
  404053:	call   0x417c10
  404058:	cmp    eax,0xffffffff
  40405b:	mov    r9d,eax
  40405e:	je     0x404041
  404060:	movsxd rax,r9d
  404063:	add    rsp,0x28
  404067:	pop    rbx
  404068:	pop    rsi
  404069:	pop    rdi
  40406a:	pop    rbp
  40406b:	ret    
  40406c:	nop    DWORD PTR [rax+0x0]
  404070:	mov    rcx,QWORD PTR [rbx+0x8]
  404074:	xor    edx,edx
  404076:	call   0x406bd0
  40407b:	nop    DWORD PTR [rax+rax*1+0x0]
  404080:	mov    rcx,QWORD PTR [rbx+0x8]
  404084:	mov    r8,rsi
  404087:	mov    rdx,rdi
  40408a:	call   0x406ac0
  40408f:	cmp    eax,0xfffffedb
  404094:	mov    r9d,eax
  404097:	je     0x404070
  404099:	cmp    eax,0xffffffe4
  40409c:	je     0x404080
  40409e:	cmp    eax,0xffffffcc
  4040a1:	je     0x404080
  4040a3:	jmp    0x404060
  4040a5:	mov    rax,0xffffffffffffffff
  4040ac:	add    rsp,0x28
  4040b0:	pop    rbx
  4040b1:	pop    rsi
  4040b2:	pop    rdi
  4040b3:	pop    rbp
  4040b4:	ret    
  4040b5:	nop
  4040b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040c0:	push   rsi
  4040c1:	push   rbx
  4040c2:	sub    rsp,0x38
  4040c6:	mov    rsi,rdx
  4040c9:	mov    edx,DWORD PTR [rcx+0x10]
  4040cc:	mov    rbx,rcx
  4040cf:	test   edx,edx
  4040d1:	jne    0x404100
  4040d3:	mov    rdx,rsi
  4040d6:	mov    rcx,rbx
  4040d9:	call   0x404020
  4040de:	mov    rsi,rax
  4040e1:	mov    eax,DWORD PTR [rbx+0x10]
  4040e4:	test   eax,eax
  4040e6:	je     0x4040f3
  4040e8:	mov    rcx,QWORD PTR [rbx+0x8]
  4040ec:	xor    edx,edx
  4040ee:	call   0x406aa0
  4040f3:	movsxd rax,esi
  4040f6:	add    rsp,0x38
  4040fa:	pop    rbx
  4040fb:	pop    rsi
  4040fc:	ret    
  4040fd:	nop    DWORD PTR [rax]
  404100:	mov    rcx,QWORD PTR [rcx+0x8]
  404104:	mov    edx,r9d
  404107:	mov    DWORD PTR [rsp+0x2c],r8d
  40410c:	call   0x406aa0
  404111:	mov    r8d,DWORD PTR [rsp+0x2c]
  404116:	jmp    0x4040d3
  404118:	nop    DWORD PTR [rax+rax*1+0x0]
  404120:	push   r13
  404122:	push   r12
  404124:	push   rbp
  404125:	push   rdi
  404126:	push   rsi
  404127:	push   rbx
  404128:	sub    rsp,0x28
  40412c:	mov    rbp,rdx
  40412f:	mov    edx,DWORD PTR [rcx+0x10]
  404132:	mov    rdi,rcx
  404135:	mov    r12d,r8d
  404138:	mov    rsi,r9
  40413b:	test   edx,edx
  40413d:	je     0x404194
  40413f:	movsxd r13,r8d
  404142:	test   rsi,rsi
  404145:	mov    rcx,QWORD PTR [rdi+0x8]
  404149:	je     0x404185
  40414b:	mov    r9,rsi
  40414e:	mov    r8,r13
  404151:	mov    rdx,rbp
  404154:	call   0x406aa8
  404159:	mov    ebx,eax
  40415b:	cmp    ebx,0xffffffcc
  40415e:	je     0x404142
  404160:	cmp    ebx,0xffffffe4
  404163:	je     0x404142
  404165:	cmp    ebx,r12d
  404168:	je     0x404175
  40416a:	test   ebx,ebx
  40416c:	jle    0x404175
  40416e:	mov    eax,DWORD PTR [rdi+0x40]
  404171:	test   eax,eax
  404173:	jne    0x4041c1
  404175:	movsxd rax,ebx
  404178:	add    rsp,0x28
  40417c:	pop    rbx
  40417d:	pop    rsi
  40417e:	pop    rdi
  40417f:	pop    rbp
  404180:	pop    r12
  404182:	pop    r13
  404184:	ret    
  404185:	mov    r8,r13
  404188:	mov    rdx,rbp
  40418b:	call   0x406ab0
  404190:	mov    ebx,eax
  404192:	jmp    0x40415b
  404194:	movsxd rsi,r8d
  404197:	mov    r13,QWORD PTR [rip+0x32f76]        # 0x437114
  40419e:	jmp    0x4041a8
  4041a0:	call   r13
  4041a3:	cmp    DWORD PTR [rax],0x4
  4041a6:	jne    0x4041e0
  4041a8:	mov    ecx,DWORD PTR [rdi]
  4041aa:	xor    r9d,r9d
  4041ad:	mov    r8,rsi
  4041b0:	mov    rdx,rbp
  4041b3:	call   0x4194e0
  4041b8:	cmp    eax,0xffffffff
  4041bb:	mov    ebx,eax
  4041bd:	je     0x4041a0
  4041bf:	jmp    0x404165
  4041c1:	call   QWORD PTR [rip+0x32efd]        # 0x4370c4
  4041c7:	lea    rdx,[rip+0x22aa2]        # 0x426c70
  4041ce:	lea    rcx,[rax+0x60]
  4041d2:	mov    r9d,r12d
  4041d5:	mov    r8d,ebx
  4041d8:	call   0x403db0
  4041dd:	jmp    0x404175
  4041df:	nop
  4041e0:	mov    rax,0xffffffffffffffff
  4041e7:	add    rsp,0x28
  4041eb:	pop    rbx
  4041ec:	pop    rsi
  4041ed:	pop    rdi
  4041ee:	pop    rbp
  4041ef:	pop    r12
  4041f1:	pop    r13
  4041f3:	ret    
  4041f4:	xchg   ax,ax
  4041f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404200:	xor    r9d,r9d
  404203:	jmp    0x404120
  404208:	nop    DWORD PTR [rax+rax*1+0x0]
  404210:	push   rdi
  404211:	push   rsi
  404212:	push   rbx
  404213:	sub    rsp,0x220
  40421a:	test   rdx,rdx
  40421d:	je     0x404245
  40421f:	mov    r8d,DWORD PTR [rcx+0x10]
  404223:	test   r8d,r8d
  404226:	jne    0x404245
  404228:	mov    rbx,rdx
  40422b:	mov    rsi,rcx
  40422e:	lea    rdx,[rip+0x22a62]        # 0x426c97
  404235:	mov    rcx,rbx
  404238:	mov    rdi,QWORD PTR [rip+0x32f55]        # 0x437194
  40423f:	call   rdi
  404241:	test   eax,eax
  404243:	jne    0x404250
  404245:	add    rsp,0x220
  40424c:	pop    rbx
  40424d:	pop    rsi
  40424e:	pop    rdi
  40424f:	ret    
  404250:	lea    rdx,[rip+0x22a46]        # 0x426c9d
  404257:	mov    rcx,rbx
  40425a:	call   rdi
  40425c:	test   eax,eax
  40425e:	jne    0x404310
  404264:	mov    eax,DWORD PTR [rsi+0x40]
  404267:	test   eax,eax
  404269:	je     0x404277
  40426b:	lea    rcx,[rip+0x22a3b]        # 0x426cad
  404272:	call   0x403de0
  404277:	lea    rbx,[rsi+0x40]
  40427b:	lea    r8,[rip+0x22a46]        # 0x426cc8
  404282:	mov    rcx,rsi
  404285:	mov    r9d,0x4
  40428b:	lea    rdi,[rsp+0x20]
  404290:	mov    rdx,rbx
  404293:	call   0x403e90
  404298:	mov    r9,QWORD PTR [rsi+0x18]
  40429c:	lea    r8,[rip+0x22a2a]        # 0x426ccd
  4042a3:	mov    rcx,rdi
  4042a6:	mov    edx,0x200
  4042ab:	call   0x413f80
  4042b0:	mov    edx,DWORD PTR [rsi+0x40]
  4042b3:	mov    r8,rdi
  4042b6:	mov    rcx,rsi
  4042b9:	call   0x403e10
  4042be:	lea    r8,[rip+0x22a11]        # 0x426cd6
  4042c5:	mov    r9d,0x4
  4042cb:	mov    rdx,rbx
  4042ce:	mov    rcx,rsi
  4042d1:	call   0x403e90
  4042d6:	mov    edx,DWORD PTR [rsi+0x40]
  4042d9:	lea    r8,[rip+0x229fb]        # 0x426cdb
  4042e0:	mov    rcx,rsi
  4042e3:	call   0x403e10
  4042e8:	lea    r8,[rip+0x229d9]        # 0x426cc8
  4042ef:	mov    r9d,0x4
  4042f5:	mov    rdx,rbx
  4042f8:	mov    rcx,rsi
  4042fb:	call   0x403e90
  404300:	nop
  404301:	add    rsp,0x220
  404308:	pop    rbx
  404309:	pop    rsi
  40430a:	pop    rdi
  40430b:	ret    
  40430c:	nop    DWORD PTR [rax+0x0]
  404310:	lea    rdx,[rip+0x2298b]        # 0x426ca2
  404317:	mov    rcx,rbx
  40431a:	call   rdi
  40431c:	test   eax,eax
  40431e:	je     0x404264
  404324:	lea    rdx,[rip+0x229ba]        # 0x426ce5
  40432b:	mov    rcx,rbx
  40432e:	call   rdi
  404330:	test   eax,eax
  404332:	jne    0x4043a4
  404334:	mov    edx,DWORD PTR [rsi+0x40]
  404337:	test   edx,edx
  404339:	je     0x40434a
  40433b:	lea    rcx,[rip+0x229ae]        # 0x426cf0
  404342:	call   0x403de0
  404347:	mov    edx,DWORD PTR [rsi+0x40]
  40434a:	lea    r8,[rip+0x229ba]        # 0x426d0b
  404351:	mov    rcx,rsi
  404354:	lea    rbx,[rsi+0x40]
  404358:	call   0x403e10
  40435d:	lea    r8,[rip+0x229b6]        # 0x426d1a
  404364:	mov    r9d,0x4
  40436a:	mov    rdx,rbx
  40436d:	mov    rcx,rsi
  404370:	call   0x403e90
  404375:	mov    edx,DWORD PTR [rsi+0x40]
  404378:	lea    r8,[rip+0x229a0]        # 0x426d1f
  40437f:	mov    rcx,rsi
  404382:	call   0x403e10
  404387:	lea    r8,[rip+0x2298c]        # 0x426d1a
  40438e:	mov    r9d,0x4
  404394:	mov    rdx,rbx
  404397:	mov    rcx,rsi
  40439a:	call   0x403e90
  40439f:	jmp    0x404245
  4043a4:	lea    rdx,[rip+0x2293f]        # 0x426cea
  4043ab:	mov    rcx,rbx
  4043ae:	call   rdi
  4043b0:	test   eax,eax
  4043b2:	je     0x404334
  4043b4:	lea    rdx,[rip+0x22971]        # 0x426d2c
  4043bb:	mov    rcx,rbx
  4043be:	call   rdi
  4043c0:	test   eax,eax
  4043c2:	jne    0x404450
  4043c8:	cmp    DWORD PTR [rsi+0x40],0x0
  4043cc:	je     0x4043da
  4043ce:	lea    rcx,[rip+0x2295c]        # 0x426d31
  4043d5:	call   0x403de0
  4043da:	lea    rbx,[rsp+0x20]
  4043df:	mov    r9,QWORD PTR [rsi+0x18]
  4043e3:	lea    r8,[rip+0x22966]        # 0x426d50
  4043ea:	mov    edx,0x200
  4043ef:	mov    rcx,rbx
  4043f2:	call   0x413f80
  4043f7:	mov    edx,DWORD PTR [rsi+0x40]
  4043fa:	mov    r8,rbx
  4043fd:	mov    rcx,rsi
  404400:	lea    rbx,[rsi+0x40]
  404404:	call   0x403e10
  404409:	lea    r8,[rip+0x229ad]        # 0x426dbd
  404410:	mov    r9d,0x2
  404416:	mov    rdx,rbx
  404419:	mov    rcx,rsi
  40441c:	call   0x403e90
  404421:	mov    edx,DWORD PTR [rsi+0x40]
  404424:	lea    r8,[rip+0x22995]        # 0x426dc0
  40442b:	mov    rcx,rsi
  40442e:	call   0x403e10
  404433:	lea    r8,[rip+0x229ba]        # 0x426df4
  40443a:	mov    r9d,0x8
  404440:	mov    rdx,rbx
  404443:	mov    rcx,rsi
  404446:	call   0x403e90
  40444b:	jmp    0x404245
  404450:	lea    rdx,[rip+0x229a6]        # 0x426dfd
  404457:	mov    rcx,rbx
  40445a:	call   rdi
  40445c:	test   eax,eax
  40445e:	jne    0x4044a0
  404460:	cmp    DWORD PTR [rsi+0x40],0x0
  404464:	je     0x404472
  404466:	lea    rcx,[rip+0x22995]        # 0x426e02
  40446d:	call   0x403de0
  404472:	mov    ecx,DWORD PTR [rsi]
  404474:	lea    rdx,[rip+0x229a5]        # 0x426e20
  40447b:	xor    r9d,r9d
  40447e:	mov    r8d,0x1f
  404484:	call   0x4194e0
  404489:	lea    rdx,[rsi+0x40]
  40448d:	xor    r9d,r9d
  404490:	xor    r8d,r8d
  404493:	mov    rcx,rsi
  404496:	call   0x403e90
  40449b:	jmp    0x404245
  4044a0:	lea    rdx,[rip+0x22999]        # 0x426e40
  4044a7:	mov    rcx,rbx
  4044aa:	call   rdi
  4044ac:	test   eax,eax
  4044ae:	jne    0x404517
  4044b0:	cmp    DWORD PTR [rsi+0x40],0x0
  4044b4:	jne    0x40456b
  4044ba:	mov    edx,DWORD PTR [rsi+0x40]
  4044bd:	lea    r8,[rip+0x2299f]        # 0x426e63
  4044c4:	mov    rcx,rsi
  4044c7:	lea    rbx,[rsi+0x40]
  4044cb:	call   0x403e10
  4044d0:	lea    r8,[rip+0x22993]        # 0x426e6a
  4044d7:	mov    r9d,0x4
  4044dd:	mov    rdx,rbx
  4044e0:	mov    rcx,rsi
  4044e3:	call   0x403e90
  4044e8:	mov    edx,DWORD PTR [rsi+0x40]
  4044eb:	lea    r8,[rip+0x2297d]        # 0x426e6f
  4044f2:	mov    rcx,rsi
  4044f5:	call   0x403e10
  4044fa:	lea    r8,[rip+0x22979]        # 0x426e7a
  404501:	mov    r9d,0x3
  404507:	mov    rdx,rbx
  40450a:	mov    rcx,rsi
  40450d:	call   0x403e90
  404512:	jmp    0x404245
  404517:	lea    rdx,[rip+0x22926]        # 0x426e44
  40451e:	mov    rcx,rbx
  404521:	call   rdi
  404523:	test   eax,eax
  404525:	je     0x4044b0
  404527:	movsx  eax,BYTE PTR [rbx]
  40452a:	sub    eax,0x30
  40452d:	cmp    eax,0x9
  404530:	jbe    0x404245
  404536:	cmp    DWORD PTR [rip+0x2ebd3],0x0        # 0x433110
  40453d:	jne    0x404245
  404543:	call   QWORD PTR [rip+0x32b7b]        # 0x4370c4
  404549:	lea    rdx,[rip+0x2292e]        # 0x426e7e
  404550:	lea    rcx,[rax+0x60]
  404554:	mov    r8,rbx
  404557:	call   0x403db0
  40455c:	mov    DWORD PTR [rip+0x2ebaa],0x1        # 0x433110
  404566:	jmp    0x404245
  40456b:	lea    rcx,[rip+0x228d7]        # 0x426e49
  404572:	call   0x403de0
  404577:	jmp    0x4044ba
  40457c:	nop    DWORD PTR [rax+0x0]
  404580:	push   rbx
  404581:	sub    rsp,0x20
  404585:	lea    rdx,[rip+0x227a0]        # 0x426d2c
  40458c:	mov    rbx,rcx
  40458f:	call   QWORD PTR [rip+0x32bff]        # 0x437194
  404595:	test   eax,eax
  404597:	lea    rax,[rip+0x228f7]        # 0x426e95
  40459e:	cmove  rbx,rax
  4045a2:	xor    edx,edx
  4045a4:	mov    rcx,rbx
  4045a7:	call   QWORD PTR [rip+0x32eaf]        # 0x43745c
  4045ad:	test   rax,rax
  4045b0:	mov    edx,0x1bb
  4045b5:	je     0x4045bb
  4045b7:	movsx  edx,WORD PTR [rax+0x18]
  4045bb:	mov    eax,edx
  4045bd:	add    rsp,0x20
  4045c1:	pop    rbx
  4045c2:	ret    
  4045c3:	nop    DWORD PTR [rax]
  4045c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045d0:	push   rbx
  4045d1:	sub    rsp,0x20
  4045d5:	lea    rdx,[rip+0x22750]        # 0x426d2c
  4045dc:	mov    rbx,rcx
  4045df:	call   QWORD PTR [rip+0x32baf]        # 0x437194
  4045e5:	test   eax,eax
  4045e7:	lea    rax,[rip+0x228a7]        # 0x426e95
  4045ee:	cmove  rbx,rax
  4045f2:	xor    edx,edx
  4045f4:	mov    rcx,rbx
  4045f7:	call   QWORD PTR [rip+0x32e5f]        # 0x43745c
  4045fd:	test   rax,rax
  404600:	je     0x404610
  404602:	mov    rax,QWORD PTR [rax]
  404605:	add    rsp,0x20
  404609:	pop    rbx
  40460a:	ret    
  40460b:	nop    DWORD PTR [rax+rax*1+0x0]
  404610:	lea    rax,[rip+0x2288a]        # 0x426ea1
  404617:	add    rsp,0x20
  40461b:	pop    rbx
  40461c:	ret    
  40461d:	nop    DWORD PTR [rax]
  404620:	push   rsi
  404621:	push   rbx
  404622:	sub    rsp,0x28
  404626:	mov    eax,DWORD PTR [rcx+0x10]
  404629:	mov    rbx,rcx
  40462c:	test   eax,eax
  40462e:	je     0x40465d
  404630:	mov    rcx,QWORD PTR [rbx+0x8]
  404634:	mov    edx,0x1
  404639:	call   0x406dc8
  40463e:	cmp    eax,0xffffffe4
  404641:	je     0x404630
  404643:	cmp    eax,0xffffffcc
  404646:	je     0x404630
  404648:	test   eax,eax
  40464a:	js     0x4046c0
  40464c:	mov    rcx,QWORD PTR [rbx+0x8]
  404650:	call   0x406cc0
  404655:	mov    QWORD PTR [rbx+0x8],0x0
  40465d:	mov    rcx,QWORD PTR [rbx+0x38]
  404661:	call   QWORD PTR [rip+0x32dd5]        # 0x43743c
  404667:	mov    rcx,QWORD PTR [rbx+0x20]
  40466b:	mov    QWORD PTR [rbx+0x30],0x0
  404673:	mov    QWORD PTR [rbx+0x38],0x0
  40467b:	call   0x422858
  404680:	mov    rcx,QWORD PTR [rbx+0x18]
  404684:	call   0x422858
  404689:	mov    rcx,QWORD PTR [rbx+0x28]
  40468d:	call   0x422858
  404692:	mov    ecx,DWORD PTR [rbx]
  404694:	mov    edx,0x2
  404699:	call   0x41a0a0
  40469e:	mov    ecx,DWORD PTR [rbx]
  4046a0:	call   0x4172f0
  4046a5:	mov    DWORD PTR [rbx],0xffffffff
  4046ab:	mov    DWORD PTR [rbx+0x10],0x0
  4046b2:	add    rsp,0x28
  4046b6:	pop    rbx
  4046b7:	pop    rsi
  4046b8:	ret    
  4046b9:	nop    DWORD PTR [rax+0x0]
  4046c0:	mov    ecx,eax
  4046c2:	call   0x4069d8
  4046c7:	mov    rsi,rax
  4046ca:	call   QWORD PTR [rip+0x329f4]        # 0x4370c4
  4046d0:	lea    rdx,[rip+0x227ce]        # 0x426ea5
  4046d7:	lea    rcx,[rax+0x60]
  4046db:	mov    r8,rsi
  4046de:	call   0x403db0
  4046e3:	jmp    0x40464c
  4046e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4046f0:	push   r15
  4046f2:	push   r14
  4046f4:	mov    eax,0x10a8
  4046f9:	push   r13
  4046fb:	push   r12
  4046fd:	push   rbp
  4046fe:	push   rdi
  4046ff:	push   rsi
  404700:	push   rbx
  404701:	call   0x41d290
  404706:	sub    rsp,rax
  404709:	xor    eax,eax
  40470b:	lea    rdi,[rcx+0x8]
  40470f:	mov    QWORD PTR [rsp+0x10f8],rdx
  404717:	mov    QWORD PTR [rsp+0x50],0x0
  404720:	mov    QWORD PTR [rsp+0x58],0x0
  404729:	mov    rbx,rcx
  40472c:	mov    QWORD PTR [rcx],0x0
  404733:	and    rdi,0xfffffffffffffff8
  404737:	mov    QWORD PTR [rcx+0x40],0x0
  40473f:	mov    rsi,r8
  404742:	sub    rcx,rdi
  404745:	mov    r13d,r9d
  404748:	add    ecx,0x48
  40474b:	shr    ecx,0x3
  40474e:	rep stos QWORD PTR es:[rdi],rax
  404751:	cmp    QWORD PTR [rsp+0x1110],0x0
  40475a:	je     0x404770
  40475c:	mov    rdx,QWORD PTR [rsp+0x10f8]
  404764:	lea    rcx,[rip+0x22756]        # 0x426ec1
  40476b:	call   0x403de0
  404770:	lea    r8,[rsp+0x60]
  404775:	xor    eax,eax
  404777:	mov    ecx,0x6
  40477c:	cmp    r13d,0x1
  404780:	lea    r9,[rsp+0x48]
  404785:	mov    rdx,rsi
  404788:	mov    rdi,r8
  40478b:	rep stos QWORD PTR es:[rdi],rax
  40478e:	sbb    eax,eax
  404790:	mov    rcx,QWORD PTR [rsp+0x10f8]
  404798:	add    eax,0x2
  40479b:	mov    DWORD PTR [rsp+0x68],eax
  40479f:	call   QWORD PTR [rip+0x32c9f]        # 0x437444
  4047a5:	test   eax,eax
  4047a7:	mov    r12d,eax
  4047aa:	jne    0x404978
  4047b0:	mov    rbp,QWORD PTR [rsp+0x48]
  4047b5:	lea    rdi,[rsp+0x90]
  4047bd:	lea    rsi,[rsp+0x50]
  4047c2:	test   rbp,rbp
  4047c5:	je     0x404910
  4047cb:	mov    edx,DWORD PTR [rbp+0x8]
  4047ce:	mov    ecx,DWORD PTR [rbp+0x4]
  4047d1:	mov    r8d,DWORD PTR [rbp+0xc]
  4047d5:	call   0x41a470
  4047da:	cmp    eax,0xffffffff
  4047dd:	mov    r15d,eax
  4047e0:	je     0x4048e3
  4047e6:	mov    rdx,QWORD PTR [rbp+0x10]
  4047ea:	mov    rcx,QWORD PTR [rbp+0x20]
  4047ee:	mov    r9d,0x1000
  4047f4:	mov    DWORD PTR [rsp+0x30],0xa
  4047fc:	mov    DWORD PTR [rsp+0x28],0x10
  404804:	mov    r8,rdi
  404807:	mov    QWORD PTR [rsp+0x20],rsi
  40480c:	mov    r14,rdi
  40480f:	mov    r13,rsi
  404812:	call   QWORD PTR [rip+0x32c34]        # 0x43744c
  404818:	test   eax,eax
  40481a:	mov    r12d,eax
  40481d:	jne    0x4048c0
  404823:	cmp    QWORD PTR [rsp+0x1110],0x0
  40482c:	je     0x404848
  40482e:	mov    rdx,QWORD PTR [rsp+0x1110]
  404836:	lea    rcx,[rip+0x226e9]        # 0x426f26
  40483d:	mov    r9,rsi
  404840:	mov    r8,rdi
  404843:	call   0x403de0
  404848:	mov    rdx,QWORD PTR [rbp+0x20]
  40484c:	mov    r8d,DWORD PTR [rbp+0x10]
  404850:	mov    ecx,r15d
  404853:	call   0x417300
  404858:	test   eax,eax
  40485a:	mov    r12d,eax
  40485d:	js     0x4048e3
  404863:	jne    0x40493d
  404869:	mov    rcx,QWORD PTR [rsp+0x10f8]
  404871:	mov    DWORD PTR [rbx+0x10],0x0
  404878:	mov    DWORD PTR [rbx],r15d
  40487b:	call   0x41a820
  404880:	mov    rcx,r14
  404883:	mov    QWORD PTR [rbx+0x18],rax
  404887:	call   0x41a820
  40488c:	mov    rcx,r13
  40488f:	mov    QWORD PTR [rbx+0x20],rax
  404893:	call   0x41a820
  404898:	mov    QWORD PTR [rbx+0x28],rax
  40489c:	mov    rax,QWORD PTR [rsp+0x48]
  4048a1:	mov    QWORD PTR [rbx+0x30],rbp
  4048a5:	mov    QWORD PTR [rbx+0x38],rax
  4048a9:	add    rsp,0x10a8
  4048b0:	pop    rbx
  4048b1:	pop    rsi
  4048b2:	pop    rdi
  4048b3:	pop    rbp
  4048b4:	pop    r12
  4048b6:	pop    r13
  4048b8:	pop    r14
  4048ba:	pop    r15
  4048bc:	ret    
  4048bd:	nop    DWORD PTR [rax]
  4048c0:	mov    ecx,eax
  4048c2:	call   0x417710
  4048c7:	mov    r13,rax
  4048ca:	call   QWORD PTR [rip+0x327f4]        # 0x4370c4
  4048d0:	lea    rdx,[rip+0x2263c]        # 0x426f13
  4048d7:	lea    rcx,[rax+0x60]
  4048db:	mov    r8,r13
  4048de:	call   0x403db0
  4048e3:	mov    rbp,QWORD PTR [rbp+0x28]
  4048e7:	test   rbp,rbp
  4048ea:	jne    0x4047cb
  4048f0:	test   r12d,r12d
  4048f3:	jne    0x404930
  4048f5:	cmp    r15d,0xffffffff
  4048f9:	je     0x404910
  4048fb:	lea    r14,[rsp+0x90]
  404903:	lea    r13,[rsp+0x50]
  404908:	jmp    0x404869
  40490d:	nop    DWORD PTR [rax]
  404910:	call   QWORD PTR [rip+0x327ae]        # 0x4370c4
  404916:	lea    rdx,[rip+0x225d3]        # 0x426ef0
  40491d:	lea    rcx,[rax+0x60]
  404921:	call   0x403db0
  404926:	mov    ecx,0x1
  40492b:	call   0x4228a0
  404930:	lea    r14,[rsp+0x90]
  404938:	lea    r13,[rsp+0x50]
  40493d:	call   QWORD PTR [rip+0x327d1]        # 0x437114
  404943:	mov    ecx,DWORD PTR [rax]
  404945:	call   0x41a890
  40494a:	mov    rbx,rax
  40494d:	call   QWORD PTR [rip+0x32771]        # 0x4370c4
  404953:	lea    rdx,[rip+0x225de]        # 0x426f38
  40495a:	lea    rcx,[rax+0x60]
  40495e:	mov    QWORD PTR [rsp+0x20],rbx
  404963:	mov    r9,r13
  404966:	mov    r8,r14
  404969:	call   0x403db0
  40496e:	mov    ecx,0x1
  404973:	call   0x4228a0
  404978:	mov    ecx,eax
  40497a:	call   0x417710
  40497f:	mov    rbx,rax
  404982:	call   QWORD PTR [rip+0x3273c]        # 0x4370c4
  404988:	mov    r8,QWORD PTR [rsp+0x10f8]
  404990:	lea    rcx,[rax+0x60]
  404994:	lea    rdx,[rip+0x22539]        # 0x426ed4
  40499b:	mov    QWORD PTR [rsp+0x20],rbx
  4049a0:	mov    r9,rsi
  4049a3:	call   0x403db0
  4049a8:	mov    ecx,0x1
  4049ad:	call   0x4228a0
  4049b2:	nop
  4049b3:	nop    DWORD PTR [rax]
  4049b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049c0:	sub    rsp,0x1c8
  4049c7:	mov    ecx,0x101
  4049cc:	lea    rdx,[rsp+0x20]
  4049d1:	call   QWORD PTR [rip+0x32a35]        # 0x43740c
  4049d7:	test   eax,eax
  4049d9:	je     0x4049e8
  4049db:	lea    rcx,[rip+0x22576]        # 0x426f58
  4049e2:	call   0x4227f8
  4049e7:	nop
  4049e8:	add    rsp,0x1c8
  4049ef:	ret    
  4049f0:	push   rsi
  4049f1:	push   rbx
  4049f2:	sub    rsp,0x28
  4049f6:	movsx  eax,BYTE PTR [rcx]
  4049f9:	mov    rbx,rcx
  4049fc:	mov    rsi,rdx
  4049ff:	sub    eax,0x30
  404a02:	cmp    eax,0x9
  404a05:	jbe    0x404a11
  404a07:	mov    rax,rbx
  404a0a:	add    rsp,0x28
  404a0e:	pop    rbx
  404a0f:	pop    rsi
  404a10:	ret    
  404a11:	call   0x4228b8
  404a16:	test   eax,eax
  404a18:	je     0x404a07
  404a1a:	movzx  ecx,ax
  404a1d:	call   QWORD PTR [rip+0x32a49]        # 0x43746c
  404a23:	mov    rdx,rsi
  404a26:	movzx  ecx,ax
  404a29:	call   QWORD PTR [rip+0x32a35]        # 0x437464
  404a2f:	test   rax,rax
  404a32:	je     0x404a3e
  404a34:	mov    rax,QWORD PTR [rax]
  404a37:	add    rsp,0x28
  404a3b:	pop    rbx
  404a3c:	pop    rsi
  404a3d:	ret    
  404a3e:	call   QWORD PTR [rip+0x32680]        # 0x4370c4
  404a44:	lea    rdx,[rip+0x22525]        # 0x426f70
  404a4b:	lea    rcx,[rax+0x60]
  404a4f:	mov    r8,rbx
  404a52:	call   0x403db0
  404a57:	jmp    0x404a07
  404a59:	nop    DWORD PTR [rax+0x0]
  404a60:	push   rsi
  404a61:	push   rbx
  404a62:	sub    rsp,0x28
  404a66:	mov    rbx,rcx
  404a69:	mov    rsi,rdx
  404a6c:	call   0x4228b8
  404a71:	test   eax,eax
  404a73:	je     0x404a80
  404a75:	add    rsp,0x28
  404a79:	pop    rbx
  404a7a:	pop    rsi
  404a7b:	ret    
  404a7c:	nop    DWORD PTR [rax+0x0]
  404a80:	mov    rdx,rsi
  404a83:	mov    rcx,rbx
  404a86:	call   QWORD PTR [rip+0x329d0]        # 0x43745c
  404a8c:	test   rax,rax
  404a8f:	je     0x404aa5
  404a91:	movzx  ecx,WORD PTR [rax+0x18]
  404a95:	call   QWORD PTR [rip+0x329e9]        # 0x437484
  404a9b:	movzx  eax,ax
  404a9e:	add    rsp,0x28
  404aa2:	pop    rbx
  404aa3:	pop    rsi
  404aa4:	ret    
  404aa5:	call   QWORD PTR [rip+0x32619]        # 0x4370c4
  404aab:	lea    rdx,[rip+0x22506]        # 0x426fb8
  404ab2:	lea    rcx,[rax+0x60]
  404ab6:	call   0x403db0
  404abb:	mov    ecx,0x1
  404ac0:	call   0x4228a0
  404ac5:	nop
  404ac6:	nop
  404ac7:	nop
  404ac8:	nop
  404ac9:	nop
  404aca:	nop
  404acb:	nop
  404acc:	nop
  404acd:	nop
  404ace:	nop
  404acf:	nop
  404ad0:	sub    rsp,0x38
  404ad4:	mov    QWORD PTR [rsp+0x48],rdx
  404ad9:	lea    rdx,[rsp+0x48]
  404ade:	mov    QWORD PTR [rsp+0x50],r8
  404ae3:	mov    QWORD PTR [rsp+0x58],r9
  404ae8:	mov    QWORD PTR [rsp+0x28],rdx
  404aed:	call   0x41dd10
  404af2:	add    rsp,0x38
  404af6:	ret    
  404af7:	nop    WORD PTR [rax+rax*1+0x0]
  404b00:	push   rbx
  404b01:	sub    rsp,0x20
  404b05:	mov    rbx,rcx
  404b08:	lea    rcx,[rip+0x224d1]        # 0x426fe0
  404b0f:	call   0x404ad0
  404b14:	mov    rcx,rbx
  404b17:	call   0x406c38
  404b1c:	mov    ecx,eax
  404b1e:	mov    ebx,eax
  404b20:	call   0x406c30
  404b25:	lea    rcx,[rip+0x224d6]        # 0x427002
  404b2c:	mov    rdx,rax
  404b2f:	call   0x404ad0
  404b34:	mov    ecx,ebx
  404b36:	call   0x406c28
  404b3b:	lea    rcx,[rip+0x224d4]        # 0x427016
  404b42:	lea    edx,[rax*8+0x0]
  404b49:	add    rsp,0x20
  404b4d:	pop    rbx
  404b4e:	jmp    0x404ad0
  404b50:	sub    rsp,0x38
  404b54:	mov    QWORD PTR [rsp+0x50],r8
  404b59:	lea    r8,[rsp+0x50]
  404b5e:	mov    QWORD PTR [rsp+0x58],r9
  404b63:	mov    QWORD PTR [rsp+0x28],r8
  404b68:	call   0x41dce0
  404b6d:	add    rsp,0x38
  404b71:	ret    
  404b72:	nop    DWORD PTR [rax+0x0]
  404b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b80:	push   rdi
  404b81:	push   rsi
  404b82:	push   rbx
  404b83:	sub    rsp,0x50
  404b87:	mov    rbx,rcx
  404b8a:	lea    rcx,[rip+0x2249f]        # 0x427030
  404b91:	mov    esi,r8d
  404b94:	call   0x404ad0
  404b99:	mov    rcx,rbx
  404b9c:	call   0x406ca8
  404ba1:	lea    rcx,[rip+0x224a7]        # 0x42704f
  404ba8:	mov    edx,eax
  404baa:	call   0x404ad0
  404baf:	mov    rcx,rbx
  404bb2:	call   0x406ca0
  404bb7:	lea    rcx,[rip+0x224aa]        # 0x427068
  404bbe:	mov    edx,eax
  404bc0:	call   0x404ad0
  404bc5:	mov    rcx,rbx
  404bc8:	call   0x406cb0
  404bcd:	lea    rcx,[rip+0x224ac]        # 0x427080
  404bd4:	mov    edx,eax
  404bd6:	call   0x404ad0
  404bdb:	test   esi,esi
  404bdd:	jne    0x404bf0
  404bdf:	add    rsp,0x50
  404be3:	pop    rbx
  404be4:	pop    rsi
  404be5:	pop    rdi
  404be6:	ret    
  404be7:	nop    WORD PTR [rax+rax*1+0x0]
  404bf0:	lea    rsi,[rsp+0x40]
  404bf5:	lea    rdi,[rsp+0x30]
  404bfa:	mov    rcx,rbx
  404bfd:	mov    QWORD PTR [rsp+0x30],0x0
  404c06:	mov    DWORD PTR [rsp+0x38],0x0
  404c0e:	mov    r8,rsi
  404c11:	mov    rdx,rdi
  404c14:	mov    QWORD PTR [rsp+0x40],0x0
  404c1d:	mov    DWORD PTR [rsp+0x48],0x0
  404c25:	mov    QWORD PTR [rsp+0x20],0x0
  404c2e:	mov    QWORD PTR [rsp+0x28],0x0
  404c37:	call   0x406cb8
  404c3c:	test   eax,eax
  404c3e:	mov    ebx,eax
  404c40:	jne    0x404ca0
  404c42:	lea    rcx,[rsp+0x20]
  404c47:	call   0x406c70
  404c4c:	test   eax,eax
  404c4e:	mov    ebx,eax
  404c50:	je     0x404cc0
  404c52:	call   QWORD PTR [rip+0x3246c]        # 0x4370c4
  404c58:	lea    rdx,[rip+0x22458]        # 0x4270b7
  404c5f:	lea    rcx,[rax+0x60]
  404c63:	mov    r8d,ebx
  404c66:	xor    esi,esi
  404c68:	call   0x404b50
  404c6d:	mov    rbx,QWORD PTR [rip+0x28d8c]        # 0x42da00
  404c74:	mov    rcx,rsi
  404c77:	call   QWORD PTR [rbx]
  404c79:	mov    rcx,QWORD PTR [rsp+0x40]
  404c7e:	call   QWORD PTR [rbx]
  404c80:	mov    rcx,QWORD PTR [rsp+0x30]
  404c85:	call   QWORD PTR [rbx]
  404c87:	mov    rcx,QWORD PTR [rsp+0x20]
  404c8c:	call   0x406c98
  404c91:	nop
  404c92:	add    rsp,0x50
  404c96:	pop    rbx
  404c97:	pop    rsi
  404c98:	pop    rdi
  404c99:	ret    
  404c9a:	nop    WORD PTR [rax+rax*1+0x0]
  404ca0:	call   QWORD PTR [rip+0x3241e]        # 0x4370c4
  404ca6:	lea    rdx,[rip+0x223f2]        # 0x42709f
  404cad:	lea    rcx,[rax+0x60]
  404cb1:	mov    r8d,ebx
  404cb4:	xor    esi,esi
  404cb6:	call   0x404b50
  404cbb:	jmp    0x404c6d
  404cbd:	nop    DWORD PTR [rax]
  404cc0:	mov    rcx,QWORD PTR [rsp+0x20]
  404cc5:	mov    r8,rdi
  404cc8:	mov    rdx,rsi
  404ccb:	call   0x406c78
  404cd0:	test   eax,eax
  404cd2:	mov    ebx,eax
  404cd4:	jne    0x404d20
  404cd6:	lea    rdi,[rsp+0x28]
  404cdb:	mov    rcx,QWORD PTR [rsp+0x20]
  404ce0:	xor    r8d,r8d
  404ce3:	mov    edx,0x1
  404ce8:	mov    r9,rdi
  404ceb:	call   0x406c90
  404cf0:	cmp    eax,0xffffffcd
  404cf3:	mov    ebx,eax
  404cf5:	je     0x404d40
  404cf7:	call   QWORD PTR [rip+0x323c7]        # 0x4370c4
  404cfd:	lea    rdx,[rip+0x223f4]        # 0x4270f8
  404d04:	lea    rcx,[rax+0x60]
  404d08:	mov    r8d,ebx
  404d0b:	xor    esi,esi
  404d0d:	call   0x404b50
  404d12:	jmp    0x404c6d
  404d17:	nop    WORD PTR [rax+rax*1+0x0]
  404d20:	call   QWORD PTR [rip+0x3239e]        # 0x4370c4
  404d26:	lea    rdx,[rip+0x223ab]        # 0x4270d8
  404d2d:	lea    rcx,[rax+0x60]
  404d31:	mov    r8d,ebx
  404d34:	xor    esi,esi
  404d36:	call   0x404b50
  404d3b:	jmp    0x404c6d
  404d40:	mov    rax,QWORD PTR [rip+0x28cc9]        # 0x42da10
  404d47:	mov    rcx,QWORD PTR [rsp+0x28]
  404d4c:	call   QWORD PTR [rax]
  404d4e:	test   rax,rax
  404d51:	mov    rsi,rax
  404d54:	je     0x404da7
  404d56:	mov    rcx,QWORD PTR [rsp+0x20]
  404d5b:	mov    r9,rdi
  404d5e:	mov    r8,rax
  404d61:	mov    edx,0x1
  404d66:	call   0x406c90
  404d6b:	test   eax,eax
  404d6d:	mov    ebx,eax
  404d6f:	je     0x404d8f
  404d71:	call   QWORD PTR [rip+0x3234d]        # 0x4370c4
  404d77:	lea    rdx,[rip+0x223b2]        # 0x427130
  404d7e:	lea    rcx,[rax+0x60]
  404d82:	mov    r8d,ebx
  404d85:	call   0x404b50
  404d8a:	jmp    0x404c6d
  404d8f:	mov    edx,DWORD PTR [rsp+0x28]
  404d93:	lea    rcx,[rip+0x223ba]        # 0x427154
  404d9a:	mov    r8,rsi
  404d9d:	call   0x404ad0
  404da2:	jmp    0x404c6d
  404da7:	call   QWORD PTR [rip+0x32317]        # 0x4370c4
  404dad:	lea    rdx,[rip+0x22366]        # 0x42711a
  404db4:	lea    rcx,[rax+0x60]
  404db8:	mov    r8d,ebx
  404dbb:	call   0x404b50
  404dc0:	jmp    0x404c6d
  404dc5:	nop
  404dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dd0:	sub    rsp,0x38
  404dd4:	lea    rdx,[rip+0x22392]        # 0x42716d
  404ddb:	mov    QWORD PTR [rsp+0x50],r8
  404de0:	lea    r8,[rsp+0x50]
  404de5:	mov    QWORD PTR [rsp+0x58],r9
  404dea:	mov    QWORD PTR [rsp+0x28],r8
  404def:	call   0x41ddb0
  404df4:	add    rsp,0x38
  404df8:	ret    
  404df9:	nop    DWORD PTR [rax+0x0]
  404e00:	push   r14
  404e02:	push   r13
  404e04:	push   r12
  404e06:	push   rbp
  404e07:	push   rdi
  404e08:	push   rsi
  404e09:	push   rbx
  404e0a:	sub    rsp,0x20
  404e0e:	lea    rax,[rip+0x22362]        # 0x427177
  404e15:	test   rdx,rdx
  404e18:	je     0x404e8a
  404e1a:	lea    r8,[rdx+rdx*2+0x1]
  404e1f:	lea    rax,[rip+0x22359]        # 0x42717f
  404e26:	cmp    r8,0x3ff
  404e2d:	ja     0x404e8a
  404e2f:	lea    r14,[rdx-0x1]
  404e33:	lea    rsi,[rip+0x2e346]        # 0x433180
  404e3a:	lea    r13,[rip+0x22333]        # 0x427174
  404e41:	lea    r12,[rip+0x2232d]        # 0x427175
  404e48:	mov    rdi,rdx
  404e4b:	mov    rbp,rcx
  404e4e:	xor    ebx,ebx
  404e50:	movzx  r8d,BYTE PTR [rbp+rbx*1+0x0]
  404e56:	cmp    r14,rbx
  404e59:	mov    r9,r12
  404e5c:	lea    rdx,[rip+0x2230a]        # 0x42716d
  404e63:	cmove  r9,r13
  404e67:	mov    rcx,rsi
  404e6a:	add    rbx,0x1
  404e6e:	add    rsi,0x3
  404e72:	call   0x404dd0
  404e77:	cmp    rbx,rdi
  404e7a:	jne    0x404e50
  404e7c:	lea    rax,[rip+0x2e2fd]        # 0x433180
  404e83:	mov    BYTE PTR [rip+0x2e6f5],0x0        # 0x43357f
  404e8a:	add    rsp,0x20
  404e8e:	pop    rbx
  404e8f:	pop    rsi
  404e90:	pop    rdi
  404e91:	pop    rbp
  404e92:	pop    r12
  404e94:	pop    r13
  404e96:	pop    r14
  404e98:	ret    
  404e99:	nop    DWORD PTR [rax+0x0]
  404ea0:	push   rdi
  404ea1:	push   rbx
  404ea2:	sub    rsp,0x78
  404ea6:	xor    eax,eax
  404ea8:	lea    r10,[rsp+0x40]
  404ead:	mov    rbx,rcx
  404eb0:	test   rdx,rdx
  404eb3:	mov    ecx,0x6
  404eb8:	mov    DWORD PTR [rsp+0x2c],0x0
  404ec0:	mov    rdi,r10
  404ec3:	rep stos QWORD PTR es:[rdi],rax
  404ec6:	je     0x404f90
  404ecc:	mov    DWORD PTR [rsp+0x40],0x1
  404ed4:	mov    QWORD PTR [rsp+0x48],rdx
  404ed9:	mov    al,0x1
  404edb:	test   r8,r8
  404ede:	je     0x404efb
  404ee0:	mov    edx,eax
  404ee2:	add    eax,0x1
  404ee5:	lea    r9,[rdx+rdx*2]
  404ee9:	shl    r9,0x3
  404eed:	mov    DWORD PTR [rsp+r9*1+0x40],0x2
  404ef6:	mov    QWORD PTR [rsp+r9*1+0x48],r8
  404efb:	lea    r9,[rsp+0x2c]
  404f00:	mov    r8d,eax
  404f03:	mov    rdx,r10
  404f06:	mov    rcx,rbx
  404f09:	call   0x406d30
  404f0e:	cmp    eax,0xffffffcf
  404f11:	je     0x404fc0
  404f17:	test   eax,eax
  404f19:	js     0x404f70
  404f1b:	mov    rcx,rbx
  404f1e:	call   0x406d50
  404f23:	mov    ecx,DWORD PTR [rsp+0x2c]
  404f27:	lea    r8,[rsp+0x30]
  404f2c:	xor    r9d,r9d
  404f2f:	mov    edx,eax
  404f31:	call   0x406d38
  404f36:	test   eax,eax
  404f38:	js     0x404fa0
  404f3a:	mov    rdx,QWORD PTR [rsp+0x30]
  404f3f:	lea    rcx,[rip+0x222d2]        # 0x427218
  404f46:	call   0x404ad0
  404f4b:	mov    rax,QWORD PTR [rip+0x28aae]        # 0x42da00
  404f52:	mov    rcx,QWORD PTR [rsp+0x30]
  404f57:	call   QWORD PTR [rax]
  404f59:	mov    edx,DWORD PTR [rsp+0x2c]
  404f5d:	xor    eax,eax
  404f5f:	test   edx,edx
  404f61:	sete   al
  404f64:	add    rsp,0x78
  404f68:	pop    rbx
  404f69:	pop    rdi
  404f6a:	ret    
  404f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f70:	mov    ecx,eax
  404f72:	call   0x4069d8
  404f77:	lea    rcx,[rip+0x2223a]        # 0x4271b8
  404f7e:	mov    rdx,rax
  404f81:	call   0x404ad0
  404f86:	xor    eax,eax
  404f88:	add    rsp,0x78
  404f8c:	pop    rbx
  404f8d:	pop    rdi
  404f8e:	ret    
  404f8f:	nop
  404f90:	xor    eax,eax
  404f92:	jmp    0x404edb
  404f97:	nop    WORD PTR [rax+rax*1+0x0]
  404fa0:	mov    ecx,eax
  404fa2:	call   0x4069d8
  404fa7:	lea    rcx,[rip+0x2223a]        # 0x4271e8
  404fae:	mov    rdx,rax
  404fb1:	call   0x404ad0
  404fb6:	xor    eax,eax
  404fb8:	add    rsp,0x78
  404fbc:	pop    rbx
  404fbd:	pop    rdi
  404fbe:	ret    
  404fbf:	nop
  404fc0:	lea    rcx,[rip+0x221c9]        # 0x427190
  404fc7:	call   0x404ad0
  404fcc:	xor    eax,eax
  404fce:	jmp    0x404f64
  404fd0:	push   r15
  404fd2:	push   r14
  404fd4:	push   r13
  404fd6:	push   r12
  404fd8:	push   rbp
  404fd9:	push   rdi
  404fda:	push   rsi
  404fdb:	push   rbx
  404fdc:	sub    rsp,0x68
  404fe0:	cmp    edx,0x1
  404fe3:	mov    rbx,rcx
  404fe6:	mov    rsi,r8
  404fe9:	sbb    edi,edi
  404feb:	mov    r12d,r9d
  404fee:	and    edi,0x3
  404ff1:	call   0x406db8
  404ff6:	test   eax,eax
  404ff8:	jne    0x4052a0
  404ffe:	mov    rcx,rbx
  405001:	call   0x406d50
  405006:	cmp    eax,0x1
  405009:	je     0x405110
  40500f:	cmp    eax,0x2
  405012:	je     0x405032
  405014:	lea    rcx,[rip+0x22315]        # 0x427330
  40501b:	call   0x404ad0
  405020:	nop
  405021:	add    rsp,0x68
  405025:	pop    rbx
  405026:	pop    rsi
  405027:	pop    rdi
  405028:	pop    rbp
  405029:	pop    r12
  40502b:	pop    r13
  40502d:	pop    r14
  40502f:	pop    r15
  405031:	ret    
  405032:	lea    rdx,[rip+0x222d4]        # 0x42730d
  405039:	mov    rcx,rsi
  40503c:	mov    DWORD PTR [rsp+0x3c],0x0
  405044:	call   0x404b50
  405049:	lea    rdx,[rsp+0x3c]
  40504e:	mov    rcx,rbx
  405051:	call   0x406da8
  405056:	mov    rbx,rax
  405059:	mov    eax,DWORD PTR [rsp+0x3c]
  40505d:	test   eax,eax
  40505f:	je     0x405021
  405061:	lea    rcx,[rsp+0x40]
  405066:	call   0x406b68
  40506b:	mov    rcx,QWORD PTR [rsp+0x40]
  405070:	xor    r8d,r8d
  405073:	mov    rdx,rbx
  405076:	call   0x406b70
  40507b:	test   eax,eax
  40507d:	js     0x405310
  405083:	mov    rcx,QWORD PTR [rsp+0x40]
  405088:	lea    r8,[rsp+0x50]
  40508d:	mov    edx,edi
  40508f:	call   0x406b60
  405094:	test   eax,eax
  405096:	je     0x405368
  40509c:	test   r12d,r12d
  40509f:	je     0x4050fb
  4050a1:	lea    rdi,[rsp+0x48]
  4050a6:	mov    rcx,QWORD PTR [rsp+0x40]
  4050ab:	xor    r8d,r8d
  4050ae:	mov    edx,0x1
  4050b3:	mov    QWORD PTR [rsp+0x48],0x0
  4050bc:	xor    ebx,ebx
  4050be:	mov    r9,rdi
  4050c1:	call   0x406b78
  4050c6:	cmp    eax,0xffffffcd
  4050c9:	je     0x40538f
  4050cf:	test   eax,eax
  4050d1:	js     0x405340
  4050d7:	mov    rdx,rsi
  4050da:	mov    rcx,rbx
  4050dd:	call   0x422868
  4050e2:	mov    ecx,0xa
  4050e7:	mov    rdx,rsi
  4050ea:	call   0x422870
  4050ef:	mov    rax,QWORD PTR [rip+0x2890a]        # 0x42da00
  4050f6:	mov    rcx,rbx
  4050f9:	call   QWORD PTR [rax]
  4050fb:	mov    rcx,QWORD PTR [rsp+0x40]
  405100:	call   0x406b80
  405105:	jmp    0x405021
  40510a:	nop    WORD PTR [rax+rax*1+0x0]
  405110:	lea    rdx,[rsp+0x3c]
  405115:	mov    rcx,rbx
  405118:	mov    DWORD PTR [rsp+0x3c],0x0
  405120:	call   0x406da8
  405125:	mov    ecx,DWORD PTR [rsp+0x3c]
  405129:	mov    r13,rax
  40512c:	test   ecx,ecx
  40512e:	je     0x4052b1
  405134:	lea    rdx,[rip+0x2212c]        # 0x427267
  40513b:	mov    rcx,rsi
  40513e:	call   0x404b50
  405143:	mov    r8d,DWORD PTR [rsp+0x3c]
  405148:	lea    rdx,[rip+0x22139]        # 0x427288
  40514f:	mov    rcx,rsi
  405152:	call   0x404b50
  405157:	mov    edx,DWORD PTR [rsp+0x3c]
  40515b:	test   edx,edx
  40515d:	je     0x405021
  405163:	lea    rax,[rsp+0x48]
  405168:	xor    ebx,ebx
  40516a:	lea    r14,[rsp+0x40]
  40516f:	lea    r15,[rsp+0x50]
  405174:	mov    QWORD PTR [rsp+0x20],rax
  405179:	mov    rax,QWORD PTR [rip+0x28880]        # 0x42da00
  405180:	mov    QWORD PTR [rsp+0x28],rax
  405185:	jmp    0x405218
  40518a:	nop    WORD PTR [rax+rax*1+0x0]
  405190:	test   r12d,r12d
  405193:	je     0x405201
  405195:	mov    r9,QWORD PTR [rsp+0x20]
  40519a:	mov    rcx,QWORD PTR [rsp+0x40]
  40519f:	xor    r8d,r8d
  4051a2:	mov    edx,0x1
  4051a7:	mov    QWORD PTR [rsp+0x48],0x0
  4051b0:	xor    ebp,ebp
  4051b2:	call   0x406998
  4051b7:	cmp    eax,0xffffffcd
  4051ba:	je     0x4052d4
  4051c0:	test   eax,eax
  4051c2:	js     0x405340
  4051c8:	mov    rax,QWORD PTR [rsp+0x48]
  4051cd:	mov    rdx,rsi
  4051d0:	mov    ecx,0xa
  4051d5:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  4051da:	call   0x422870
  4051df:	mov    rdx,rsi
  4051e2:	mov    rcx,rbp
  4051e5:	call   0x422868
  4051ea:	mov    ecx,0xa
  4051ef:	mov    rdx,rsi
  4051f2:	call   0x422870
  4051f7:	mov    rax,QWORD PTR [rsp+0x28]
  4051fc:	mov    rcx,rbp
  4051ff:	call   QWORD PTR [rax]
  405201:	mov    rcx,QWORD PTR [rsp+0x40]
  405206:	add    ebx,0x1
  405209:	call   0x4069a0
  40520e:	cmp    ebx,DWORD PTR [rsp+0x3c]
  405212:	jae    0x405021
  405218:	mov    rcx,r14
  40521b:	call   0x406988
  405220:	mov    edx,ebx
  405222:	mov    rcx,QWORD PTR [rsp+0x40]
  405227:	xor    r8d,r8d
  40522a:	shl    rdx,0x4
  40522e:	add    rdx,r13
  405231:	call   0x406990
  405236:	test   eax,eax
  405238:	js     0x405310
  40523e:	lea    rdx,[rip+0x22085]        # 0x4272ca
  405245:	mov    r8d,ebx
  405248:	mov    rcx,rsi
  40524b:	call   0x404b50
  405250:	test   ebx,ebx
  405252:	je     0x4052d0
  405254:	cmp    edi,0x3
  405257:	jne    0x4052d0
  405259:	mov    edx,0x1
  40525e:	mov    edi,0x1
  405263:	mov    rcx,QWORD PTR [rsp+0x40]
  405268:	mov    r8,r15
  40526b:	call   0x406980
  405270:	test   eax,eax
  405272:	jne    0x405190
  405278:	mov    r8,QWORD PTR [rsp+0x50]
  40527d:	lea    rdx,[rip+0x22062]        # 0x4272e6
  405284:	mov    rcx,rsi
  405287:	call   0x404b50
  40528c:	mov    rax,QWORD PTR [rip+0x2876d]        # 0x42da00
  405293:	mov    rcx,QWORD PTR [rsp+0x50]
  405298:	call   QWORD PTR [rax]
  40529a:	jmp    0x405190
  40529f:	nop
  4052a0:	lea    rcx,[rip+0x21f81]        # 0x427228
  4052a7:	call   0x404ad0
  4052ac:	jmp    0x404ffe
  4052b1:	call   QWORD PTR [rip+0x31e0d]        # 0x4370c4
  4052b7:	lea    rdx,[rip+0x21f91]        # 0x42724f
  4052be:	lea    rcx,[rax+0x60]
  4052c2:	call   0x404b50
  4052c7:	jmp    0x405021
  4052cc:	nop    DWORD PTR [rax+0x0]
  4052d0:	mov    edx,edi
  4052d2:	jmp    0x405263
  4052d4:	mov    rax,QWORD PTR [rsp+0x48]
  4052d9:	lea    rcx,[rax+0x1]
  4052dd:	call   0x413870
  4052e2:	test   rax,rax
  4052e5:	mov    rbp,rax
  4052e8:	je     0x4053bb
  4052ee:	mov    r9,QWORD PTR [rsp+0x20]
  4052f3:	mov    rcx,QWORD PTR [rsp+0x40]
  4052f8:	mov    r8,rax
  4052fb:	mov    edx,0x1
  405300:	call   0x406998
  405305:	jmp    0x4051c0
  40530a:	nop    WORD PTR [rax+rax*1+0x0]
  405310:	mov    ecx,eax
  405312:	call   0x4069d8
  405317:	mov    rbx,rax
  40531a:	call   QWORD PTR [rip+0x31da4]        # 0x4370c4
  405320:	lea    rdx,[rip+0x21f8f]        # 0x4272b6
  405327:	lea    rcx,[rax+0x60]
  40532b:	mov    r8,rbx
  40532e:	call   0x404b50
  405333:	jmp    0x405021
  405338:	nop    DWORD PTR [rax+rax*1+0x0]
  405340:	mov    ecx,eax
  405342:	call   0x4069d8
  405347:	mov    rbx,rax
  40534a:	call   QWORD PTR [rip+0x31d74]        # 0x4370c4
  405350:	lea    rdx,[rip+0x21fa2]        # 0x4272f9
  405357:	lea    rcx,[rax+0x60]
  40535b:	mov    r8,rbx
  40535e:	call   0x404b50
  405363:	jmp    0x405021
  405368:	mov    r8,QWORD PTR [rsp+0x50]
  40536d:	lea    rdx,[rip+0x21fb6]        # 0x42732a
  405374:	mov    rcx,rsi
  405377:	call   0x404b50
  40537c:	mov    rax,QWORD PTR [rip+0x2867d]        # 0x42da00
  405383:	mov    rcx,QWORD PTR [rsp+0x50]
  405388:	call   QWORD PTR [rax]
  40538a:	jmp    0x40509c
  40538f:	mov    rcx,QWORD PTR [rsp+0x48]
  405394:	call   0x413870
  405399:	test   rax,rax
  40539c:	mov    rbx,rax
  40539f:	je     0x4053bb
  4053a1:	mov    rcx,QWORD PTR [rsp+0x40]
  4053a6:	mov    r9,rdi
  4053a9:	mov    r8,rax
  4053ac:	mov    edx,0x1
  4053b1:	call   0x406b78
  4053b6:	jmp    0x4050cf
  4053bb:	call   QWORD PTR [rip+0x31d03]        # 0x4370c4
  4053c1:	lea    rdx,[rip+0x21f22]        # 0x4272ea
  4053c8:	lea    rcx,[rax+0x60]
  4053cc:	call   0x404b50
  4053d1:	mov    ecx,0x1
  4053d6:	call   0x4228a0
  4053db:	nop
  4053dc:	nop    DWORD PTR [rax+0x0]
  4053e0:	push   rdi
  4053e1:	push   rsi
  4053e2:	push   rbx
  4053e3:	sub    rsp,0x20
  4053e7:	mov    edi,r8d
  4053ea:	mov    rbx,rcx
  4053ed:	mov    esi,edx
  4053ef:	call   QWORD PTR [rip+0x31ccf]        # 0x4370c4
  4053f5:	lea    r8,[rax+0x30]
  4053f9:	mov    r9d,edi
  4053fc:	mov    edx,esi
  4053fe:	mov    rcx,rbx
  405401:	add    rsp,0x20
  405405:	pop    rbx
  405406:	pop    rsi
  405407:	pop    rdi
  405408:	jmp    0x404fd0
  40540d:	nop    DWORD PTR [rax]
  405410:	push   r14
  405412:	push   r13
  405414:	push   r12
  405416:	push   rbp
  405417:	push   rdi
  405418:	push   rsi
  405419:	push   rbx
  40541a:	sub    rsp,0x180
  405421:	mov    rbx,rcx
  405424:	mov    ebp,r8d
  405427:	mov    edi,edx
  405429:	mov    QWORD PTR [rsp+0x38],0x21
  405432:	call   0x406a60
  405437:	lea    rcx,[rip+0x21f12]        # 0x427350
  40543e:	mov    rdx,rax
  405441:	mov    rsi,rax
  405444:	call   0x404ad0
  405449:	mov    rax,QWORD PTR [rip+0x285b0]        # 0x42da00
  405450:	mov    rcx,rsi
  405453:	lea    rsi,[rsp+0x50]
  405458:	call   QWORD PTR [rax]
  40545a:	lea    r8,[rsp+0x38]
  40545f:	mov    rdx,rsi
  405462:	mov    rcx,rbx
  405465:	call   0x406a58
  40546a:	mov    rdx,QWORD PTR [rsp+0x38]
  40546f:	mov    rcx,rsi
  405472:	call   0x404e00
  405477:	lea    rcx,[rip+0x21ee5]        # 0x427363
  40547e:	mov    rdx,rax
  405481:	call   0x404ad0
  405486:	mov    rcx,rbx
  405489:	call   0x406bb8
  40548e:	mov    rcx,rbx
  405491:	mov    esi,eax
  405493:	call   0x406dd0
  405498:	cmp    eax,0x5
  40549b:	ja     0x4054bd
  40549d:	lea    r10,[rip+0x22114]        # 0x4275b8
  4054a4:	mov    r9d,eax
  4054a7:	movsxd rax,DWORD PTR [r10+r9*4]
  4054ab:	add    r10,rax
  4054ae:	jmp    r10
  4054b1:	lea    rcx,[rip+0x21f54]        # 0x42740c
  4054b8:	call   0x404ad0
  4054bd:	lea    r13,[rsp+0x34]
  4054c2:	lea    r12,[rsp+0x40]
  4054c7:	mov    rcx,rbx
  4054ca:	call   0x406b00
  4054cf:	mov    ecx,eax
  4054d1:	call   0x406b08
  4054d6:	test   rax,rax
  4054d9:	lea    rdx,[rip+0x21e5e]        # 0x42733e
  4054e0:	je     0x4054f4
  4054e2:	mov    rcx,rbx
  4054e5:	call   0x406b00
  4054ea:	mov    ecx,eax
  4054ec:	call   0x406b08
  4054f1:	mov    rdx,rax
  4054f4:	lea    rcx,[rip+0x21f70]        # 0x42746b
  4054fb:	call   0x404ad0
  405500:	mov    ecx,esi
  405502:	call   0x406bb0
  405507:	test   rax,rax
  40550a:	lea    rdx,[rip+0x21e2d]        # 0x42733e
  405511:	je     0x40551d
  405513:	mov    ecx,esi
  405515:	call   0x406bb0
  40551a:	mov    rdx,rax
  40551d:	lea    rcx,[rip+0x21f56]        # 0x42747a
  405524:	call   0x404ad0
  405529:	mov    rcx,rbx
  40552c:	call   0x406a28
  405531:	test   eax,eax
  405533:	jne    0x4057f1
  405539:	mov    rcx,rbx
  40553c:	call   0x406a20
  405541:	test   eax,eax
  405543:	jne    0x4057b3
  405549:	mov    rcx,rbx
  40554c:	call   0x406d28
  405551:	mov    ecx,eax
  405553:	call   0x406d20
  405558:	test   rax,rax
  40555b:	lea    rdx,[rip+0x21ddc]        # 0x42733e
  405562:	je     0x405576
  405564:	mov    rcx,rbx
  405567:	call   0x406d28
  40556c:	mov    ecx,eax
  40556e:	call   0x406d20
  405573:	mov    rdx,rax
  405576:	lea    rcx,[rip+0x21f41]        # 0x4274be
  40557d:	call   0x404ad0
  405582:	mov    rcx,rbx
  405585:	call   0x406ba0
  40558a:	mov    ecx,eax
  40558c:	call   0x406b98
  405591:	test   rax,rax
  405594:	lea    rdx,[rip+0x21da3]        # 0x42733e
  40559b:	je     0x4055af
  40559d:	mov    rcx,rbx
  4055a0:	call   0x406ba0
  4055a5:	mov    ecx,eax
  4055a7:	call   0x406b98
  4055ac:	mov    rdx,rax
  4055af:	lea    rcx,[rip+0x21f16]        # 0x4274cc
  4055b6:	call   0x404ad0
  4055bb:	mov    rcx,rbx
  4055be:	call   0x406d00
  4055c3:	mov    ecx,eax
  4055c5:	call   0x406cf8
  4055ca:	test   rax,rax
  4055cd:	lea    rdx,[rip+0x21d6a]        # 0x42733e
  4055d4:	je     0x4055e8
  4055d6:	mov    rcx,rbx
  4055d9:	call   0x406d00
  4055de:	mov    ecx,eax
  4055e0:	call   0x406cf8
  4055e5:	mov    rdx,rax
  4055e8:	lea    rcx,[rip+0x21ee8]        # 0x4274d7
  4055ef:	call   0x404ad0
  4055f4:	lea    rcx,[rip+0x21eef]        # 0x4274ea
  4055fb:	call   0x404ad0
  405600:	mov    rcx,rbx
  405603:	call   0x406a68
  405608:	test   eax,eax
  40560a:	jne    0x4057a2
  405610:	mov    rcx,rbx
  405613:	call   0x406a90
  405618:	test   eax,eax
  40561a:	jne    0x405791
  405620:	mov    rcx,rbx
  405623:	call   0x406a70
  405628:	test   eax,eax
  40562a:	jne    0x405780
  405630:	mov    edx,0x1
  405635:	mov    rcx,rbx
  405638:	call   0x406b88
  40563d:	test   eax,eax
  40563f:	jne    0x405750
  405645:	lea    rcx,[rip+0x21ef5]        # 0x427541
  40564c:	call   0x404ad0
  405651:	mov    rdx,r13
  405654:	mov    rcx,rbx
  405657:	call   0x4069e8
  40565c:	test   eax,eax
  40565e:	je     0x405730
  405664:	mov    rdx,r12
  405667:	mov    rcx,rbx
  40566a:	call   0x406de8
  40566f:	test   eax,eax
  405671:	je     0x405714
  405677:	test   edi,edi
  405679:	mov    rsi,QWORD PTR [rip+0x31a44]        # 0x4370c4
  405680:	jne    0x4056a1
  405682:	call   rsi
  405684:	lea    rcx,[rax+0x30]
  405688:	call   0x422888
  40568d:	xor    eax,eax
  40568f:	add    rsp,0x180
  405696:	pop    rbx
  405697:	pop    rsi
  405698:	pop    rdi
  405699:	pop    rbp
  40569a:	pop    r12
  40569c:	pop    r13
  40569e:	pop    r14
  4056a0:	ret    
  4056a1:	lea    r8,[rsp+0x80]
  4056a9:	xor    edx,edx
  4056ab:	mov    rcx,rbx
  4056ae:	call   0x406a78
  4056b3:	test   eax,eax
  4056b5:	jne    0x405830
  4056bb:	lea    rcx,[rip+0x21ece]        # 0x427590
  4056c2:	xor    ebx,ebx
  4056c4:	call   0x404ad0
  4056c9:	mov    eax,DWORD PTR [rsp+0x88]
  4056d0:	test   eax,eax
  4056d2:	je     0x4056fc
  4056d4:	mov    rax,QWORD PTR [rsp+0x80]
  4056dc:	lea    rcx,[rip+0x21ece]        # 0x4275b1
  4056e3:	movzx  edx,BYTE PTR [rax+rbx*1]
  4056e7:	add    rbx,0x1
  4056eb:	call   0x404ad0
  4056f0:	mov    eax,DWORD PTR [rsp+0x88]
  4056f7:	cmp    rax,rbx
  4056fa:	ja     0x4056d4
  4056fc:	lea    rcx,[rip+0x21e3e]        # 0x427541
  405703:	call   0x404ad0
  405708:	mov    rsi,QWORD PTR [rip+0x319b5]        # 0x4370c4
  40570f:	jmp    0x405682
  405714:	mov    r8,QWORD PTR [rsp+0x40]
  405719:	mov    edx,DWORD PTR [rsp+0x48]
  40571d:	lea    rcx,[rip+0x21e33]        # 0x427557
  405724:	call   0x404ad0
  405729:	jmp    0x405677
  40572e:	xchg   ax,ax
  405730:	mov    ecx,DWORD PTR [rsp+0x34]
  405734:	call   0x4069f0
  405739:	lea    rcx,[rip+0x21e03]        # 0x427543
  405740:	mov    rdx,rax
  405743:	call   0x404ad0
  405748:	jmp    0x405664
  40574d:	nop    DWORD PTR [rax]
  405750:	xor    edx,edx
  405752:	mov    rcx,rbx
  405755:	call   0x406b88
  40575a:	lea    rdx,[rip+0x21be5]        # 0x427346
  405761:	test   eax,eax
  405763:	lea    rax,[rip+0x21a0a]        # 0x427174
  40576a:	lea    rcx,[rip+0x21db8]        # 0x427529
  405771:	cmovne rdx,rax
  405775:	call   0x404ad0
  40577a:	jmp    0x405645
  40577f:	nop
  405780:	lea    rcx,[rip+0x21d9c]        # 0x427523
  405787:	call   0x404ad0
  40578c:	jmp    0x405630
  405791:	lea    rcx,[rip+0x21d76]        # 0x42750e
  405798:	call   0x404ad0
  40579d:	jmp    0x405620
  4057a2:	lea    rcx,[rip+0x21d4c]        # 0x4274f5
  4057a9:	call   0x404ad0
  4057ae:	jmp    0x405610
  4057b3:	mov    rcx,rbx
  4057b6:	call   0x406a20
  4057bb:	mov    ecx,eax
  4057bd:	call   0x406a18
  4057c2:	test   rax,rax
  4057c5:	lea    rdx,[rip+0x21b72]        # 0x42733e
  4057cc:	je     0x4057e0
  4057ce:	mov    rcx,rbx
  4057d1:	call   0x406a20
  4057d6:	mov    ecx,eax
  4057d8:	call   0x406a18
  4057dd:	mov    rdx,rax
  4057e0:	lea    rcx,[rip+0x21cbf]        # 0x4274a6
  4057e7:	call   0x404ad0
  4057ec:	jmp    0x405549
  4057f1:	mov    rcx,rbx
  4057f4:	call   0x406a28
  4057f9:	mov    ecx,eax
  4057fb:	call   0x406a18
  405800:	test   rax,rax
  405803:	lea    rdx,[rip+0x21b34]        # 0x42733e
  40580a:	je     0x40581e
  40580c:	mov    rcx,rbx
  40580f:	call   0x406a28
  405814:	mov    ecx,eax
  405816:	call   0x406a18
  40581b:	mov    rdx,rax
  40581e:	lea    rcx,[rip+0x21c69]        # 0x42748e
  405825:	call   0x404ad0
  40582a:	jmp    0x405539
  40582f:	nop
  405830:	mov    ecx,eax
  405832:	call   0x4069d8
  405837:	mov    rbx,rax
  40583a:	call   rsi
  40583c:	lea    rdx,[rip+0x21d32]        # 0x427575
  405843:	lea    rcx,[rax+0x60]
  405847:	mov    r8,rbx
  40584a:	call   0x404b50
  40584f:	jmp    0x405682
  405854:	lea    r13,[rsp+0x34]
  405859:	lea    r12,[rsp+0x40]
  40585e:	lea    r14,[rsp+0x80]
  405866:	mov    DWORD PTR [rsp+0x20],0x0
  40586e:	mov    rcx,rbx
  405871:	mov    QWORD PTR [rsp+0x40],0x100
  40587a:	mov    r9,r13
  40587d:	mov    r8,r12
  405880:	mov    rdx,r14
  405883:	call   0x406a80
  405888:	test   eax,eax
  40588a:	je     0x4059e2
  405890:	test   bpl,0x2
  405894:	jne    0x4059c0
  40589a:	and    ebp,0x1
  40589d:	jne    0x4059a5
  4058a3:	lea    eax,[rsi-0x2]
  4058a6:	cmp    eax,0x1
  4058a9:	jbe    0x405a14
  4058af:	lea    eax,[rsi-0xc]
  4058b2:	cmp    eax,0x1
  4058b5:	ja     0x4054c7
  4058bb:	lea    rdx,[rip+0x21b3f]        # 0x427401
  4058c2:	mov    rcx,rbx
  4058c5:	call   0x404b00
  4058ca:	jmp    0x4054c7
  4058cf:	nop
  4058d0:	cmp    esi,0xb
  4058d3:	je     0x405a00
  4058d9:	lea    rdx,[rip+0x21a95]        # 0x427375
  4058e0:	mov    r8d,edi
  4058e3:	mov    rcx,rbx
  4058e6:	lea    r13,[rsp+0x34]
  4058eb:	lea    r12,[rsp+0x40]
  4058f0:	call   0x404b80
  4058f5:	jmp    0x4054c7
  4058fa:	nop    WORD PTR [rax+rax*1+0x0]
  405900:	mov    rcx,rbx
  405903:	call   0x406a00
  405908:	test   rax,rax
  40590b:	je     0x4054bd
  405911:	mov    rcx,rbx
  405914:	lea    r13,[rsp+0x34]
  405919:	lea    r12,[rsp+0x40]
  40591e:	call   0x406a00
  405923:	lea    rcx,[rip+0x21a56]        # 0x427380
  40592a:	mov    rdx,rax
  40592d:	call   0x404ad0
  405932:	jmp    0x4054c7
  405937:	nop    WORD PTR [rax+rax*1+0x0]
  405940:	mov    rcx,rbx
  405943:	call   0x406ae8
  405948:	test   rax,rax
  40594b:	je     0x405964
  40594d:	mov    rcx,rbx
  405950:	call   0x406ae8
  405955:	lea    rcx,[rip+0x21a54]        # 0x4273b0
  40595c:	mov    rdx,rax
  40595f:	call   0x404ad0
  405964:	mov    rcx,rbx
  405967:	call   0x406ae0
  40596c:	test   rax,rax
  40596f:	je     0x405988
  405971:	mov    rcx,rbx
  405974:	call   0x406ae0
  405979:	lea    rcx,[rip+0x21a58]        # 0x4273d8
  405980:	mov    rdx,rax
  405983:	call   0x404ad0
  405988:	cmp    esi,0xa
  40598b:	lea    r13,[rsp+0x34]
  405990:	lea    r12,[rsp+0x40]
  405995:	je     0x405a14
  405997:	cmp    esi,0xe
  40599a:	jne    0x4054c7
  4059a0:	jmp    0x4058bb
  4059a5:	mov    r8d,0x1
  4059ab:	mov    edx,edi
  4059ad:	mov    rcx,rbx
  4059b0:	call   0x4053e0
  4059b5:	jmp    0x4058a3
  4059ba:	nop    WORD PTR [rax+rax*1+0x0]
  4059c0:	mov    rcx,rbx
  4059c3:	call   0x406db0
  4059c8:	test   rax,rax
  4059cb:	jne    0x40589a
  4059d1:	lea    rcx,[rip+0x21a70]        # 0x427448
  4059d8:	call   0x404ad0
  4059dd:	jmp    0x40589a
  4059e2:	mov    edx,DWORD PTR [rsp+0x34]
  4059e6:	lea    rcx,[rip+0x21a38]        # 0x427425
  4059ed:	mov    r8,r14
  4059f0:	call   0x404ad0
  4059f5:	jmp    0x405890
  4059fa:	nop    WORD PTR [rax+rax*1+0x0]
  405a00:	lea    rdx,[rip+0x2196e]        # 0x427375
  405a07:	mov    rcx,rbx
  405a0a:	call   0x404b00
  405a0f:	jmp    0x4054bd
  405a14:	lea    rdx,[rip+0x219e6]        # 0x427401
  405a1b:	mov    r8d,edi
  405a1e:	mov    rcx,rbx
  405a21:	call   0x404b80
  405a26:	jmp    0x4054c7
  405a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  405a30:	push   rbx
  405a31:	sub    rsp,0x40
  405a35:	mov    rbx,rcx
  405a38:	call   0x406db8
  405a3d:	test   eax,eax
  405a3f:	jne    0x405b70
  405a45:	mov    rcx,rbx
  405a48:	call   0x406d50
  405a4d:	cmp    eax,0x1
  405a50:	je     0x405ae0
  405a56:	cmp    eax,0x2
  405a59:	je     0x405a70
  405a5b:	lea    rcx,[rip+0x218ce]        # 0x427330
  405a62:	call   0x404ad0
  405a67:	nop
  405a68:	add    rsp,0x40
  405a6c:	pop    rbx
  405a6d:	ret    
  405a6e:	xchg   ax,ax
  405a70:	lea    rdx,[rsp+0x24]
  405a75:	mov    rcx,rbx
  405a78:	mov    DWORD PTR [rsp+0x24],0x0
  405a80:	call   0x406da8
  405a85:	mov    rbx,rax
  405a88:	mov    eax,DWORD PTR [rsp+0x24]
  405a8c:	test   eax,eax
  405a8e:	je     0x405a68
  405a90:	lea    rcx,[rsp+0x28]
  405a95:	call   0x406b68
  405a9a:	mov    rcx,QWORD PTR [rsp+0x28]
  405a9f:	xor    r8d,r8d
  405aa2:	mov    rdx,rbx
  405aa5:	call   0x406b70
  405aaa:	test   eax,eax
  405aac:	js     0x405ba0
  405ab2:	mov    rcx,QWORD PTR [rsp+0x28]
  405ab7:	lea    r8,[rsp+0x30]
  405abc:	mov    edx,0x3
  405ac1:	call   0x406b60
  405ac6:	test   eax,eax
  405ac8:	je     0x405bd0
  405ace:	mov    rcx,QWORD PTR [rsp+0x28]
  405ad3:	call   0x406b80
  405ad8:	jmp    0x405a68
  405ada:	nop    WORD PTR [rax+rax*1+0x0]
  405ae0:	lea    rdx,[rsp+0x24]
  405ae5:	mov    rcx,rbx
  405ae8:	mov    DWORD PTR [rsp+0x24],0x0
  405af0:	call   0x406da8
  405af5:	mov    edx,DWORD PTR [rsp+0x24]
  405af9:	mov    rbx,rax
  405afc:	test   edx,edx
  405afe:	je     0x405b81
  405b04:	lea    rcx,[rsp+0x28]
  405b09:	call   0x406988
  405b0e:	mov    rcx,QWORD PTR [rsp+0x28]
  405b13:	xor    r8d,r8d
  405b16:	mov    rdx,rbx
  405b19:	call   0x406990
  405b1e:	test   eax,eax
  405b20:	js     0x405ba0
  405b22:	mov    rcx,QWORD PTR [rsp+0x28]
  405b27:	lea    r8,[rsp+0x30]
  405b2c:	mov    edx,0x3
  405b31:	call   0x406980
  405b36:	test   eax,eax
  405b38:	jne    0x405b59
  405b3a:	mov    rdx,QWORD PTR [rsp+0x30]
  405b3f:	lea    rcx,[rip+0x21a8a]        # 0x4275d0
  405b46:	call   0x404ad0
  405b4b:	mov    rax,QWORD PTR [rip+0x27eae]        # 0x42da00
  405b52:	mov    rcx,QWORD PTR [rsp+0x30]
  405b57:	call   QWORD PTR [rax]
  405b59:	mov    rcx,QWORD PTR [rsp+0x28]
  405b5e:	call   0x4069a0
  405b63:	nop
  405b64:	add    rsp,0x40
  405b68:	pop    rbx
  405b69:	ret    
  405b6a:	nop    WORD PTR [rax+rax*1+0x0]
  405b70:	lea    rcx,[rip+0x216b1]        # 0x427228
  405b77:	call   0x404ad0
  405b7c:	jmp    0x405a45
  405b81:	call   QWORD PTR [rip+0x3153d]        # 0x4370c4
  405b87:	lea    rdx,[rip+0x216c1]        # 0x42724f
  405b8e:	lea    rcx,[rax+0x60]
  405b92:	call   0x404b50
  405b97:	nop
  405b98:	add    rsp,0x40
  405b9c:	pop    rbx
  405b9d:	ret    
  405b9e:	xchg   ax,ax
  405ba0:	mov    ecx,eax
  405ba2:	call   0x4069d8
  405ba7:	mov    rbx,rax
  405baa:	call   QWORD PTR [rip+0x31514]        # 0x4370c4
  405bb0:	lea    rdx,[rip+0x216ff]        # 0x4272b6
  405bb7:	lea    rcx,[rax+0x60]
  405bbb:	mov    r8,rbx
  405bbe:	call   0x404b50
  405bc3:	jmp    0x405a68
  405bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  405bd0:	mov    rdx,QWORD PTR [rsp+0x30]
  405bd5:	lea    rcx,[rip+0x21a06]        # 0x4275e2
  405bdc:	call   0x404ad0
  405be1:	mov    rax,QWORD PTR [rip+0x27e18]        # 0x42da00
  405be8:	mov    rcx,QWORD PTR [rsp+0x30]
  405bed:	call   QWORD PTR [rax]
  405bef:	jmp    0x405ace
  405bf4:	xchg   ax,ax
  405bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c00:	push   r15
  405c02:	push   r14
  405c04:	push   r13
  405c06:	push   r12
  405c08:	push   rbp
  405c09:	push   rdi
  405c0a:	push   rsi
  405c0b:	push   rbx
  405c0c:	sub    rsp,0x78
  405c10:	test   rcx,rcx
  405c13:	mov    rbx,rcx
  405c16:	mov    ebp,edx
  405c18:	je     0x405fa5
  405c1e:	mov    rdx,rcx
  405c21:	lea    rcx,[rip+0x219ce]        # 0x4275f6
  405c28:	call   0x404ad0
  405c2d:	lea    rcx,[rsp+0x60]
  405c32:	lea    r8,[rsp+0x58]
  405c37:	mov    rdx,rbx
  405c3a:	call   0x406b28
  405c3f:	test   eax,eax
  405c41:	js     0x406483
  405c47:	xor    ebx,ebx
  405c49:	lea    rdi,[rsp+0x50]
  405c4e:	lea    r12,[rsp+0x40]
  405c53:	lea    rbp,[rsp+0x54]
  405c58:	jmp    0x405cba
  405c5a:	nop    WORD PTR [rax+rax*1+0x0]
  405c60:	cmp    eax,0xffffffeb
  405c63:	je     0x405cb6
  405c65:	mov    ecx,DWORD PTR [rsp+0x50]
  405c69:	xor    r9d,r9d
  405c6c:	xor    r8d,r8d
  405c6f:	mov    QWORD PTR [rsp+0x28],rbp
  405c74:	mov    QWORD PTR [rsp+0x20],0x0
  405c7d:	mov    rdx,r12
  405c80:	call   0x406d08
  405c85:	test   rax,rax
  405c88:	mov    rsi,rax
  405c8b:	je     0x405cb6
  405c8d:	mov    ecx,DWORD PTR [rsp+0x54]
  405c91:	call   0x406b08
  405c96:	movzx  r9d,BYTE PTR [rsp+0x41]
  405c9c:	movzx  r8d,BYTE PTR [rsp+0x40]
  405ca2:	lea    rcx,[rip+0x21978]        # 0x427621
  405ca9:	mov    QWORD PTR [rsp+0x20],rax
  405cae:	mov    rdx,rsi
  405cb1:	call   0x404ad0
  405cb6:	add    rbx,0x1
  405cba:	mov    rcx,QWORD PTR [rsp+0x60]
  405cbf:	mov    r8,rdi
  405cc2:	mov    edx,ebx
  405cc4:	call   0x406b30
  405cc9:	cmp    eax,0xffffffc8
  405ccc:	jne    0x405c60
  405cce:	lea    rcx,[rip+0x2186c]        # 0x427541
  405cd5:	lea    rdi,[rsp+0x68]
  405cda:	call   0x404ad0
  405cdf:	mov    rcx,QWORD PTR [rsp+0x60]
  405ce4:	mov    rdx,rdi
  405ce7:	call   0x406b48
  405cec:	lea    rcx,[rip+0x21947]        # 0x42763a
  405cf3:	mov    esi,eax
  405cf5:	call   0x404ad0
  405cfa:	test   esi,esi
  405cfc:	je     0x405f94
  405d02:	xor    ebx,ebx
  405d04:	cmp    rbx,rsi
  405d07:	jae    0x405d43
  405d09:	mov    rax,QWORD PTR [rsp+0x68]
  405d0e:	mov    ecx,DWORD PTR [rax+rbx*4]
  405d11:	add    rbx,0x1
  405d15:	call   0x406d48
  405d1a:	lea    rcx,[rip+0x21933]        # 0x427654
  405d21:	mov    rdx,rax
  405d24:	call   0x404ad0
  405d29:	cmp    rbx,rsi
  405d2c:	je     0x405ef1
  405d32:	lea    rcx,[rip+0x21924]        # 0x42765d
  405d39:	call   0x404ad0
  405d3e:	cmp    rbx,rsi
  405d41:	jb     0x405d09
  405d43:	mov    rcx,QWORD PTR [rsp+0x60]
  405d48:	mov    rdx,rdi
  405d4b:	call   0x406b20
  405d50:	lea    rcx,[rip+0x21909]        # 0x427660
  405d57:	mov    esi,eax
  405d59:	call   0x404ad0
  405d5e:	test   esi,esi
  405d60:	je     0x405f83
  405d66:	xor    ebx,ebx
  405d68:	cmp    rbx,rsi
  405d6b:	jae    0x405da7
  405d6d:	mov    rax,QWORD PTR [rsp+0x68]
  405d72:	mov    ecx,DWORD PTR [rax+rbx*4]
  405d75:	add    rbx,0x1
  405d79:	call   0x406b08
  405d7e:	lea    rcx,[rip+0x218e7]        # 0x42766c
  405d85:	mov    rdx,rax
  405d88:	call   0x404ad0
  405d8d:	cmp    rsi,rbx
  405d90:	je     0x405f02
  405d96:	lea    rcx,[rip+0x218c0]        # 0x42765d
  405d9d:	call   0x404ad0
  405da2:	cmp    rbx,rsi
  405da5:	jb     0x405d6d
  405da7:	mov    rcx,QWORD PTR [rsp+0x60]
  405dac:	mov    rdx,rdi
  405daf:	call   0x406b40
  405db4:	lea    rcx,[rip+0x218b9]        # 0x427674
  405dbb:	mov    esi,eax
  405dbd:	call   0x404ad0
  405dc2:	test   esi,esi
  405dc4:	je     0x405f72
  405dca:	xor    ebx,ebx
  405dcc:	cmp    rbx,rsi
  405dcf:	jae    0x405e0b
  405dd1:	mov    rax,QWORD PTR [rsp+0x68]
  405dd6:	mov    ecx,DWORD PTR [rax+rbx*4]
  405dd9:	add    rbx,0x1
  405ddd:	call   0x406cf8
  405de2:	lea    rcx,[rip+0x21899]        # 0x427682
  405de9:	mov    rdx,rax
  405dec:	call   0x404ad0
  405df1:	cmp    rsi,rbx
  405df4:	je     0x405f20
  405dfa:	lea    rcx,[rip+0x2185c]        # 0x42765d
  405e01:	call   0x404ad0
  405e06:	cmp    rbx,rsi
  405e09:	jb     0x405dd1
  405e0b:	mov    rcx,QWORD PTR [rsp+0x60]
  405e10:	mov    rdx,rdi
  405e13:	call   0x406b38
  405e18:	lea    rcx,[rip+0x2186b]        # 0x42768a
  405e1f:	mov    esi,eax
  405e21:	call   0x404ad0
  405e26:	test   esi,esi
  405e28:	je     0x405f61
  405e2e:	xor    ebx,ebx
  405e30:	cmp    rbx,rsi
  405e33:	jae    0x405e6f
  405e35:	mov    rax,QWORD PTR [rsp+0x68]
  405e3a:	mov    ecx,DWORD PTR [rax+rbx*4]
  405e3d:	add    rbx,0x1
  405e41:	call   0x406c30
  405e46:	lea    rcx,[rip+0x2184f]        # 0x42769c
  405e4d:	mov    rdx,rax
  405e50:	call   0x404ad0
  405e55:	cmp    rsi,rbx
  405e58:	je     0x405f34
  405e5e:	lea    rcx,[rip+0x217f8]        # 0x42765d
  405e65:	call   0x404ad0
  405e6a:	cmp    rbx,rsi
  405e6d:	jb     0x405e35
  405e6f:	mov    rcx,QWORD PTR [rsp+0x60]
  405e74:	mov    rdx,rdi
  405e77:	call   0x406b10
  405e7c:	lea    rcx,[rip+0x21822]        # 0x4276a5
  405e83:	mov    esi,eax
  405e85:	call   0x404ad0
  405e8a:	test   esi,esi
  405e8c:	je     0x405f50
  405e92:	xor    ebx,ebx
  405e94:	cmp    rbx,rsi
  405e97:	jae    0x405ecf
  405e99:	mov    rax,QWORD PTR [rsp+0x68]
  405e9e:	mov    ecx,DWORD PTR [rax+rbx*4]
  405ea1:	add    rbx,0x1
  405ea5:	call   0x406a18
  405eaa:	lea    rcx,[rip+0x21804]        # 0x4276b5
  405eb1:	mov    rdx,rax
  405eb4:	call   0x404ad0
  405eb9:	cmp    rsi,rbx
  405ebc:	je     0x405ee0
  405ebe:	lea    rcx,[rip+0x21798]        # 0x42765d
  405ec5:	call   0x404ad0
  405eca:	cmp    rbx,rsi
  405ecd:	jb     0x405e99
  405ecf:	add    rsp,0x78
  405ed3:	pop    rbx
  405ed4:	pop    rsi
  405ed5:	pop    rdi
  405ed6:	pop    rbp
  405ed7:	pop    r12
  405ed9:	pop    r13
  405edb:	pop    r14
  405edd:	pop    r15
  405edf:	ret    
  405ee0:	lea    rcx,[rip+0x2165a]        # 0x427541
  405ee7:	mov    rbx,rsi
  405eea:	call   0x404ad0
  405eef:	jmp    0x405e94
  405ef1:	lea    rcx,[rip+0x21649]        # 0x427541
  405ef8:	call   0x404ad0
  405efd:	jmp    0x405d04
  405f02:	lea    rcx,[rip+0x21638]        # 0x427541
  405f09:	mov    rbx,rsi
  405f0c:	call   0x404ad0
  405f11:	jmp    0x405d68
  405f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f20:	lea    rcx,[rip+0x2161a]        # 0x427541
  405f27:	mov    rbx,rsi
  405f2a:	call   0x404ad0
  405f2f:	jmp    0x405dcc
  405f34:	lea    rcx,[rip+0x21606]        # 0x427541
  405f3b:	mov    rbx,rsi
  405f3e:	call   0x404ad0
  405f43:	jmp    0x405e30
  405f48:	nop    DWORD PTR [rax+rax*1+0x0]
  405f50:	lea    rcx,[rip+0x216f7]        # 0x42764e
  405f57:	call   0x404ad0
  405f5c:	jmp    0x405e92
  405f61:	lea    rcx,[rip+0x216e6]        # 0x42764e
  405f68:	call   0x404ad0
  405f6d:	jmp    0x405e2e
  405f72:	lea    rcx,[rip+0x216d5]        # 0x42764e
  405f79:	call   0x404ad0
  405f7e:	jmp    0x405dca
  405f83:	lea    rcx,[rip+0x216c4]        # 0x42764e
  405f8a:	call   0x404ad0
  405f8f:	jmp    0x405d66
  405f94:	lea    rcx,[rip+0x216b3]        # 0x42764e
  405f9b:	call   0x404ad0
  405fa0:	jmp    0x405d02
  405fa5:	lea    rcx,[rip+0x21711]        # 0x4276bd
  405fac:	xor    esi,esi
  405fae:	lea    r15,[rsp+0x58]
  405fb3:	lea    r14,[rsp+0x60]
  405fb8:	lea    r13,[rsp+0x40]
  405fbd:	lea    r12,[rsp+0x54]
  405fc2:	call   0x404ad0
  405fc7:	lea    rdi,[rsp+0x68]
  405fcc:	jmp    0x405fd4
  405fce:	xchg   ax,ax
  405fd0:	add    rsi,0x1
  405fd4:	mov    QWORD PTR [rsp+0x28],r12
  405fd9:	mov    QWORD PTR [rsp+0x20],rdi
  405fde:	mov    r9,r14
  405fe1:	mov    r8,r15
  405fe4:	mov    rdx,r13
  405fe7:	mov    rcx,rsi
  405fea:	call   0x406d08
  405fef:	test   rax,rax
  405ff2:	mov    rbx,rax
  405ff5:	je     0x406063
  405ff7:	mov    ecx,DWORD PTR [rsp+0x54]
  405ffb:	call   0x406b08
  406000:	movzx  r9d,BYTE PTR [rsp+0x41]
  406006:	movzx  r8d,BYTE PTR [rsp+0x40]
  40600c:	lea    rcx,[rip+0x2160e]        # 0x427621
  406013:	mov    QWORD PTR [rsp+0x20],rax
  406018:	mov    rdx,rbx
  40601b:	call   0x404ad0
  406020:	test   ebp,ebp
  406022:	je     0x405fd0
  406024:	mov    ecx,DWORD PTR [rsp+0x68]
  406028:	call   0x406b98
  40602d:	mov    ecx,DWORD PTR [rsp+0x60]
  406031:	mov    QWORD PTR [rsp+0x38],rax
  406036:	call   0x406d20
  40603b:	mov    ecx,DWORD PTR [rsp+0x58]
  40603f:	mov    rbx,rax
  406042:	call   0x406bb0
  406047:	mov    r9,QWORD PTR [rsp+0x38]
  40604c:	lea    rcx,[rip+0x2167d]        # 0x4276d0
  406053:	mov    r8,rbx
  406056:	mov    rdx,rax
  406059:	call   0x404ad0
  40605e:	jmp    0x405fd0
  406063:	lea    rcx,[rip+0x214d7]        # 0x427541
  40606a:	call   0x404ad0
  40606f:	call   0x406d40
  406074:	lea    rcx,[rip+0x215bf]        # 0x42763a
  40607b:	mov    rbx,rax
  40607e:	call   0x404ad0
  406083:	mov    ecx,DWORD PTR [rbx]
  406085:	test   ecx,ecx
  406087:	jne    0x4060a6
  406089:	jmp    0x4060d7
  40608b:	nop    DWORD PTR [rax+rax*1+0x0]
  406090:	lea    rcx,[rip+0x215c6]        # 0x42765d
  406097:	add    rbx,0x4
  40609b:	call   0x404ad0
  4060a0:	mov    ecx,DWORD PTR [rbx]
  4060a2:	test   ecx,ecx
  4060a4:	je     0x4060d7
  4060a6:	call   0x406d48
  4060ab:	lea    rcx,[rip+0x215a2]        # 0x427654
  4060b2:	mov    rdx,rax
  4060b5:	call   0x404ad0
  4060ba:	mov    ebp,DWORD PTR [rbx+0x4]
  4060bd:	test   ebp,ebp
  4060bf:	jne    0x406090
  4060c1:	lea    rcx,[rip+0x21479]        # 0x427541
  4060c8:	add    rbx,0x4
  4060cc:	call   0x404ad0
  4060d1:	mov    ecx,DWORD PTR [rbx]
  4060d3:	test   ecx,ecx
  4060d5:	jne    0x4060a6
  4060d7:	call   0x406af8
  4060dc:	lea    rcx,[rip+0x2157d]        # 0x427660
  4060e3:	mov    rbx,rax
  4060e6:	call   0x404ad0
  4060eb:	mov    ecx,DWORD PTR [rbx]
  4060ed:	test   ecx,ecx
  4060ef:	jne    0x406109
  4060f1:	jmp    0x40613a
  4060f3:	lea    rcx,[rip+0x21563]        # 0x42765d
  4060fa:	add    rbx,0x4
  4060fe:	call   0x404ad0
  406103:	mov    ecx,DWORD PTR [rbx]
  406105:	test   ecx,ecx
  406107:	je     0x40613a
  406109:	call   0x406b08
  40610e:	lea    rcx,[rip+0x21557]        # 0x42766c
  406115:	mov    rdx,rax
  406118:	call   0x404ad0
  40611d:	mov    edi,DWORD PTR [rbx+0x4]
  406120:	test   edi,edi
  406122:	jne    0x4060f3
  406124:	lea    rcx,[rip+0x21416]        # 0x427541
  40612b:	add    rbx,0x4
  40612f:	call   0x404ad0
  406134:	mov    ecx,DWORD PTR [rbx]
  406136:	test   ecx,ecx
  406138:	jne    0x406109
  40613a:	call   0x406d18
  40613f:	lea    rcx,[rip+0x215b3]        # 0x4276f9
  406146:	mov    rbx,rax
  406149:	call   0x404ad0
  40614e:	mov    ecx,DWORD PTR [rbx]
  406150:	test   ecx,ecx
  406152:	jne    0x406176
  406154:	jmp    0x4061a7
  406156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406160:	lea    rcx,[rip+0x214f6]        # 0x42765d
  406167:	add    rbx,0x4
  40616b:	call   0x404ad0
  406170:	mov    ecx,DWORD PTR [rbx]
  406172:	test   ecx,ecx
  406174:	je     0x4061a7
  406176:	call   0x406d20
  40617b:	lea    rcx,[rip+0x21588]        # 0x42770a
  406182:	mov    rdx,rax
  406185:	call   0x404ad0
  40618a:	mov    esi,DWORD PTR [rbx+0x4]
  40618d:	test   esi,esi
  40618f:	jne    0x406160
  406191:	lea    rcx,[rip+0x213a9]        # 0x427541
  406198:	add    rbx,0x4
  40619c:	call   0x404ad0
  4061a1:	mov    ecx,DWORD PTR [rbx]
  4061a3:	test   ecx,ecx
  4061a5:	jne    0x406176
  4061a7:	call   0x406b90
  4061ac:	lea    rcx,[rip+0x21550]        # 0x427703
  4061b3:	mov    rbx,rax
  4061b6:	call   0x404ad0
  4061bb:	mov    ecx,DWORD PTR [rbx]
  4061bd:	test   ecx,ecx
  4061bf:	jne    0x4061d9
  4061c1:	jmp    0x40620c
  4061c3:	lea    rcx,[rip+0x21493]        # 0x42765d
  4061ca:	add    rbx,0x4
  4061ce:	call   0x404ad0
  4061d3:	mov    ecx,DWORD PTR [rbx]
  4061d5:	test   ecx,ecx
  4061d7:	je     0x40620c
  4061d9:	call   0x406b98
  4061de:	lea    rcx,[rip+0x21525]        # 0x42770a
  4061e5:	mov    rdx,rax
  4061e8:	call   0x404ad0
  4061ed:	mov    r11d,DWORD PTR [rbx+0x4]
  4061f1:	test   r11d,r11d
  4061f4:	jne    0x4061c3
  4061f6:	lea    rcx,[rip+0x21344]        # 0x427541
  4061fd:	add    rbx,0x4
  406201:	call   0x404ad0
  406206:	mov    ecx,DWORD PTR [rbx]
  406208:	test   ecx,ecx
  40620a:	jne    0x4061d9
  40620c:	call   0x406c60
  406211:	lea    rcx,[rip+0x214f5]        # 0x42770d
  406218:	mov    rbx,rax
  40621b:	call   0x404ad0
  406220:	mov    ecx,DWORD PTR [rbx]
  406222:	test   ecx,ecx
  406224:	jne    0x406246
  406226:	jmp    0x406279
  406228:	nop    DWORD PTR [rax+rax*1+0x0]
  406230:	lea    rcx,[rip+0x21426]        # 0x42765d
  406237:	add    rbx,0x4
  40623b:	call   0x404ad0
  406240:	mov    ecx,DWORD PTR [rbx]
  406242:	test   ecx,ecx
  406244:	je     0x406279
  406246:	call   0x406c68
  40624b:	lea    rcx,[rip+0x214b8]        # 0x42770a
  406252:	mov    rdx,rax
  406255:	call   0x404ad0
  40625a:	mov    r10d,DWORD PTR [rbx+0x4]
  40625e:	test   r10d,r10d
  406261:	jne    0x406230
  406263:	lea    rcx,[rip+0x212d7]        # 0x427541
  40626a:	add    rbx,0x4
  40626e:	call   0x404ad0
  406273:	mov    ecx,DWORD PTR [rbx]
  406275:	test   ecx,ecx
  406277:	jne    0x406246
  406279:	call   0x406ba8
  40627e:	lea    rcx,[rip+0x21492]        # 0x427717
  406285:	mov    rbx,rax
  406288:	call   0x404ad0
  40628d:	mov    ecx,DWORD PTR [rbx]
  40628f:	test   ecx,ecx
  406291:	jne    0x4062ab
  406293:	jmp    0x4062de
  406295:	lea    rcx,[rip+0x213c1]        # 0x42765d
  40629c:	add    rbx,0x4
  4062a0:	call   0x404ad0
  4062a5:	mov    ecx,DWORD PTR [rbx]
  4062a7:	test   ecx,ecx
  4062a9:	je     0x4062de
  4062ab:	call   0x406bb0
  4062b0:	lea    rcx,[rip+0x21453]        # 0x42770a
  4062b7:	mov    rdx,rax
  4062ba:	call   0x404ad0
  4062bf:	mov    r9d,DWORD PTR [rbx+0x4]
  4062c3:	test   r9d,r9d
  4062c6:	jne    0x406295
  4062c8:	lea    rcx,[rip+0x21272]        # 0x427541
  4062cf:	add    rbx,0x4
  4062d3:	call   0x404ad0
  4062d8:	mov    ecx,DWORD PTR [rbx]
  4062da:	test   ecx,ecx
  4062dc:	jne    0x4062ab
  4062de:	call   0x406cf0
  4062e3:	lea    rcx,[rip+0x2138a]        # 0x427674
  4062ea:	mov    rbx,rax
  4062ed:	call   0x404ad0
  4062f2:	mov    ecx,DWORD PTR [rbx]
  4062f4:	test   ecx,ecx
  4062f6:	jne    0x406316
  4062f8:	jmp    0x406349
  4062fa:	nop    WORD PTR [rax+rax*1+0x0]
  406300:	lea    rcx,[rip+0x21356]        # 0x42765d
  406307:	add    rbx,0x4
  40630b:	call   0x404ad0
  406310:	mov    ecx,DWORD PTR [rbx]
  406312:	test   ecx,ecx
  406314:	je     0x406349
  406316:	call   0x406cf8
  40631b:	lea    rcx,[rip+0x21360]        # 0x427682
  406322:	mov    rdx,rax
  406325:	call   0x404ad0
  40632a:	mov    r8d,DWORD PTR [rbx+0x4]
  40632e:	test   r8d,r8d
  406331:	jne    0x406300
  406333:	lea    rcx,[rip+0x21207]        # 0x427541
  40633a:	add    rbx,0x4
  40633e:	call   0x404ad0
  406343:	mov    ecx,DWORD PTR [rbx]
  406345:	test   ecx,ecx
  406347:	jne    0x406316
  406349:	call   0x406c20
  40634e:	lea    rcx,[rip+0x21335]        # 0x42768a
  406355:	mov    rbx,rax
  406358:	call   0x404ad0
  40635d:	mov    ecx,DWORD PTR [rbx]
  40635f:	test   ecx,ecx
  406361:	jne    0x40637b
  406363:	jmp    0x4063ac
  406365:	lea    rcx,[rip+0x212f1]        # 0x42765d
  40636c:	add    rbx,0x4
  406370:	call   0x404ad0
  406375:	mov    ecx,DWORD PTR [rbx]
  406377:	test   ecx,ecx
  406379:	je     0x4063ac
  40637b:	call   0x406c30
  406380:	lea    rcx,[rip+0x21315]        # 0x42769c
  406387:	mov    rdx,rax
  40638a:	call   0x404ad0
  40638f:	mov    ecx,DWORD PTR [rbx+0x4]
  406392:	test   ecx,ecx
  406394:	jne    0x406365
  406396:	lea    rcx,[rip+0x211a4]        # 0x427541
  40639d:	add    rbx,0x4
  4063a1:	call   0x404ad0
  4063a6:	mov    ecx,DWORD PTR [rbx]
  4063a8:	test   ecx,ecx
  4063aa:	jne    0x40637b
  4063ac:	call   0x406b50
  4063b1:	lea    rcx,[rip+0x21379]        # 0x427731
  4063b8:	mov    rbx,rax
  4063bb:	call   0x404ad0
  4063c0:	mov    ecx,DWORD PTR [rbx]
  4063c2:	test   ecx,ecx
  4063c4:	jne    0x4063e6
  4063c6:	jmp    0x406417
  4063c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4063d0:	lea    rcx,[rip+0x21286]        # 0x42765d
  4063d7:	add    rbx,0x4
  4063db:	call   0x404ad0
  4063e0:	mov    ecx,DWORD PTR [rbx]
  4063e2:	test   ecx,ecx
  4063e4:	je     0x406417
  4063e6:	call   0x406b58
  4063eb:	lea    rcx,[rip+0x21318]        # 0x42770a
  4063f2:	mov    rdx,rax
  4063f5:	call   0x404ad0
  4063fa:	mov    edx,DWORD PTR [rbx+0x4]
  4063fd:	test   edx,edx
  4063ff:	jne    0x4063d0
  406401:	lea    rcx,[rip+0x21139]        # 0x427541
  406408:	add    rbx,0x4
  40640c:	call   0x404ad0
  406411:	mov    ecx,DWORD PTR [rbx]
  406413:	test   ecx,ecx
  406415:	jne    0x4063e6
  406417:	call   0x406a10
  40641c:	lea    rcx,[rip+0x21282]        # 0x4276a5
  406423:	mov    rbx,rax
  406426:	call   0x404ad0
  40642b:	mov    ecx,DWORD PTR [rbx]
  40642d:	test   ecx,ecx
  40642f:	jne    0x40645a
  406431:	jmp    0x405ecf
  406436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406440:	lea    rcx,[rip+0x21216]        # 0x42765d
  406447:	call   0x404ad0
  40644c:	add    rbx,0x4
  406450:	mov    ecx,DWORD PTR [rbx]
  406452:	test   ecx,ecx
  406454:	je     0x405ecf
  40645a:	call   0x406a18
  40645f:	lea    rcx,[rip+0x2124f]        # 0x4276b5
  406466:	mov    rdx,rax
  406469:	call   0x404ad0
  40646e:	mov    eax,DWORD PTR [rbx+0x4]
  406471:	test   eax,eax
  406473:	jne    0x406440
  406475:	lea    rcx,[rip+0x210c5]        # 0x427541
  40647c:	call   0x404ad0
  406481:	jmp    0x40644c
  406483:	mov    rbx,QWORD PTR [rsp+0x58]
  406488:	call   QWORD PTR [rip+0x30c36]        # 0x4370c4
  40648e:	lea    rdx,[rip+0x21177]        # 0x42760c
  406495:	lea    rcx,[rax+0x60]
  406499:	mov    r8,rbx
  40649c:	call   0x404b50
  4064a1:	mov    ecx,0x1
  4064a6:	call   0x4228a0
  4064ab:	nop
  4064ac:	nop    DWORD PTR [rax+0x0]
  4064b0:	push   r12
  4064b2:	push   rbp
  4064b3:	push   rdi
  4064b4:	push   rsi
  4064b5:	push   rbx
  4064b6:	sub    rsp,0x20
  4064ba:	mov    rbx,rdx
  4064bd:	mov    r12,rcx
  4064c0:	mov    edx,0x80
  4064c5:	mov    rcx,rbx
  4064c8:	call   0x41d870
  4064cd:	mov    rbp,QWORD PTR [rip+0x30bf0]        # 0x4370c4
  4064d4:	mov    rsi,rax
  4064d7:	call   rbp
  4064d9:	lea    rdx,[rip+0x21268]        # 0x427748
  4064e0:	lea    rcx,[rax+0x60]
  4064e4:	mov    r9,rbx
  4064e7:	mov    r8d,esi
  4064ea:	call   0x404b50
  4064ef:	cmp    rsi,0x2
  4064f3:	jbe    0x406570
  4064f5:	movzx  eax,BYTE PTR [rbx]
  4064f8:	cmp    al,BYTE PTR [rbx+0x1]
  4064fb:	jne    0x406570
  4064fd:	cmp    al,0x2a
  4064ff:	jne    0x406570
  406501:	lea    rdi,[rip+0x21265]        # 0x42776d
  406508:	mov    ecx,0xf
  40650d:	mov    rsi,rbx
  406510:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406512:	je     0x406580
  406514:	lea    rdi,[rip+0x21286]        # 0x4277a1
  40651b:	mov    rsi,rbx
  40651e:	mov    ecx,0xd
  406523:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406525:	seta   dl
  406528:	setb   al
  40652b:	xor    ebx,ebx
  40652d:	cmp    dl,al
  40652f:	jne    0x406572
  406531:	mov    r9d,0x1
  406537:	mov    r8d,0x5
  40653d:	mov    edx,0x12c
  406542:	mov    rcx,r12
  406545:	mov    bl,0x2
  406547:	call   0x406bd8
  40654c:	test   eax,eax
  40654e:	jns    0x406572
  406550:	cmp    eax,0xffffffce
  406553:	jne    0x4065a1
  406555:	call   rbp
  406557:	lea    rdx,[rip+0x21251]        # 0x4277af
  40655e:	lea    rcx,[rax+0x60]
  406562:	call   0x404b50
  406567:	jmp    0x406572
  406569:	nop    DWORD PTR [rax+0x0]
  406570:	xor    ebx,ebx
  406572:	mov    eax,ebx
  406574:	add    rsp,0x20
  406578:	pop    rbx
  406579:	pop    rsi
  40657a:	pop    rdi
  40657b:	pop    rbp
  40657c:	pop    r12
  40657e:	ret    
  40657f:	nop
  406580:	call   rbp
  406582:	lea    rdx,[rip+0x211f7]        # 0x427780
  406589:	lea    rcx,[rax+0x60]
  40658d:	mov    ebx,0x1
  406592:	call   0x404b50
  406597:	mov    rcx,r12
  40659a:	call   0x406a98
  40659f:	jmp    0x406572
  4065a1:	mov    ecx,eax
  4065a3:	call   0x4069d8
  4065a8:	mov    rbx,rax
  4065ab:	call   rbp
  4065ad:	lea    rdx,[rip+0x21219]        # 0x4277cd
  4065b4:	lea    rcx,[rax+0x60]
  4065b8:	mov    r8,rbx
  4065bb:	call   0x404b50
  4065c0:	mov    ecx,0x1
  4065c5:	call   0x4228a0
  4065ca:	nop
  4065cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4065d0:	push   r15
  4065d2:	push   r14
  4065d4:	push   r13
  4065d6:	push   r12
  4065d8:	push   rbp
  4065d9:	push   rdi
  4065da:	push   rsi
  4065db:	push   rbx
  4065dc:	sub    rsp,0x28
  4065e0:	mov    ebx,DWORD PTR [rsp+0x90]
  4065e7:	lea    rdx,[rip+0x21208]        # 0x4277f6
  4065ee:	lea    rbp,[rip+0x211e2]        # 0x4277d7
  4065f5:	lea    r12,[rip+0x211e9]        # 0x4277e5
  4065fc:	mov    r15,rcx
  4065ff:	mov    rdi,r8
  406602:	mov    r14,r9
  406605:	mov    r13,QWORD PTR [rsp+0x98]
  40660d:	mov    rsi,QWORD PTR [rsp+0xa0]
  406615:	mov    eax,ebx
  406617:	and    eax,0x2
  40661a:	lea    rax,[rip+0x211e0]        # 0x427801
  406621:	cmove  rbp,rdx
  406625:	cmove  r12,rax
  406629:	test   bl,0x4
  40662c:	mov    eax,0x5
  406631:	jne    0x406814
  406637:	test   bl,0x8
  40663a:	jne    0x4067a5
  406640:	and    ebx,0x20
  406643:	jne    0x4067ba
  406649:	test   eax,eax
  40664b:	je     0x40666e
  40664d:	test   rdi,rdi
  406650:	mov    rcx,QWORD PTR [rip+0x2cb09]        # 0x433160
  406657:	je     0x40666e
  406659:	test   rcx,rcx
  40665c:	je     0x40666e
  40665e:	mov    rdx,rdi
  406661:	call   0x4227c8
  406666:	test   eax,eax
  406668:	je     0x406730
  40666e:	lea    rcx,[rip+0x21215]        # 0x42788a
  406675:	mov    r8,rdi
  406678:	mov    rdx,r14
  40667b:	call   0x404ad0
  406680:	lea    rcx,[rip+0x2121d]        # 0x4278a4
  406687:	mov    rdx,r12
  40668a:	call   0x404ad0
  40668f:	mov    rcx,rbp
  406692:	call   0x422838
  406697:	test   rax,rax
  40669a:	mov    rbp,rax
  40669d:	je     0x406860
  4066a3:	movzx  eax,BYTE PTR [rbp+0x0]
  4066a7:	test   al,al
  4066a9:	je     0x406920
  4066af:	cmp    al,0xa
  4066b1:	je     0x406920
  4066b7:	mov    rcx,rbp
  4066ba:	call   0x4227a8
  4066bf:	lea    rdx,[rsi-0x1]
  4066c3:	sub    esi,0x1
  4066c6:	mov    rcx,r13
  4066c9:	cmp    rdx,rax
  4066cc:	mov    rdx,rbp
  4066cf:	cmovae esi,eax
  4066d2:	mov    ebx,esi
  4066d4:	mov    r8,rbx
  4066d7:	call   0x422810
  4066dc:	cmp    esi,0x1f
  4066df:	mov    BYTE PTR [r13+rbx*1+0x0],0x0
  4066e5:	jbe    0x406840
  4066eb:	mov    BYTE PTR [rip+0x2ca4e],0x0        # 0x433140
  4066f2:	mov    rcx,QWORD PTR [rip+0x2ca67]        # 0x433160
  4066f9:	call   0x422858
  4066fe:	test   rdi,rdi
  406701:	je     0x406830
  406707:	mov    rcx,rdi
  40670a:	call   0x41a820
  40670f:	mov    QWORD PTR [rip+0x2ca4a],rax        # 0x433160
  406716:	xor    eax,eax
  406718:	add    rsp,0x28
  40671c:	pop    rbx
  40671d:	pop    rsi
  40671e:	pop    rdi
  40671f:	pop    rbp
  406720:	pop    r12
  406722:	pop    r13
  406724:	pop    r14
  406726:	pop    r15
  406728:	ret    
  406729:	nop    DWORD PTR [rax+0x0]
  406730:	lea    r8,[rip+0x2ca09]        # 0x433140
  406737:	mov    rdx,r8
  40673a:	mov    ecx,DWORD PTR [rdx]
  40673c:	add    rdx,0x4
  406740:	lea    eax,[rcx-0x1010101]
  406746:	not    ecx
  406748:	and    eax,ecx
  40674a:	and    eax,0x80808080
  40674f:	je     0x40673a
  406751:	mov    ecx,eax
  406753:	shr    ecx,0x10
  406756:	test   eax,0x8080
  40675b:	cmove  eax,ecx
  40675e:	lea    rcx,[rdx+0x2]
  406762:	cmove  rdx,rcx
  406766:	add    al,al
  406768:	sbb    rdx,0x3
  40676c:	sub    rdx,r8
  40676f:	cmp    rdx,rsi
  406772:	jae    0x40695a
  406778:	call   QWORD PTR [rip+0x30946]        # 0x4370c4
  40677e:	lea    rdx,[rip+0x2114b]        # 0x4278d0
  406785:	lea    rcx,[rax+0x60]
  406789:	mov    r8,r14
  40678c:	call   0x404b50
  406791:	lea    rdx,[rip+0x2c9a8]        # 0x433140
  406798:	mov    rcx,r13
  40679b:	call   0x4227c0
  4067a0:	jmp    0x406716
  4067a5:	lea    rcx,[rip+0x2108c]        # 0x427838
  4067ac:	call   0x404ad0
  4067b1:	and    ebx,0x20
  4067b4:	je     0x40666e
  4067ba:	lea    rcx,[rip+0x210a7]        # 0x427868
  4067c1:	call   0x404ad0
  4067c6:	lea    rcx,[rip+0x210bd]        # 0x42788a
  4067cd:	mov    r8,rdi
  4067d0:	mov    rdx,r14
  4067d3:	call   0x404ad0
  4067d8:	lea    rcx,[rip+0x210c5]        # 0x4278a4
  4067df:	mov    rdx,r12
  4067e2:	call   0x404ad0
  4067e7:	mov    rcx,rbp
  4067ea:	call   0x422838
  4067ef:	test   rax,rax
  4067f2:	je     0x406862
  4067f4:	call   QWORD PTR [rip+0x308ca]        # 0x4370c4
  4067fa:	lea    rdx,[rip+0x21107]        # 0x427908
  406801:	lea    rcx,[rax+0x60]
  406805:	call   0x404b50
  40680a:	mov    ecx,0x1
  40680f:	call   0x4228a0
  406814:	lea    rcx,[rip+0x20fed]        # 0x427808
  40681b:	call   0x404ad0
  406820:	xor    eax,eax
  406822:	jmp    0x406637
  406827:	nop    WORD PTR [rax+rax*1+0x0]
  406830:	mov    QWORD PTR [rip+0x2c925],0x0        # 0x433160
  40683b:	jmp    0x406716
  406840:	lea    r9,[rip+0x2c8f9]        # 0x433140
  406847:	mov    r8,rbx
  40684a:	mov    rdx,r13
  40684d:	mov    rcx,r9
  406850:	call   0x422810
  406855:	mov    BYTE PTR [rax+rbx*1],0x0
  406859:	jmp    0x4066f2
  40685e:	xchg   ax,ax
  406860:	xor    ebx,ebx
  406862:	lea    rcx,[rip+0x20f8d]        # 0x4277f6
  406869:	call   0x422838
  40686e:	test   rax,rax
  406871:	mov    rbp,rax
  406874:	jne    0x4068d1
  406876:	test   r15,r15
  406879:	je     0x4068f0
  40687b:	mov    eax,DWORD PTR [r15+0xa0]
  406882:	test   eax,eax
  406884:	jne    0x4068e0
  406886:	lea    rcx,[rip+0x2111a]        # 0x4279a7
  40688d:	call   0x417720
  406892:	test   rax,rax
  406895:	mov    rbp,rax
  406898:	jne    0x4066a3
  40689e:	xchg   ax,ax
  4068a0:	mov    rbx,QWORD PTR [rip+0x3081d]        # 0x4370c4
  4068a7:	call   rbx
  4068a9:	lea    rdx,[rip+0x21044]        # 0x4278f4
  4068b0:	lea    rcx,[rax+0x60]
  4068b4:	call   0x404b50
  4068b9:	cmp    DWORD PTR [r15+0xa0],0x0
  4068c1:	jne    0x406943
  4068c7:	mov    ecx,0x1
  4068cc:	call   0x4228a0
  4068d1:	test   ebx,ebx
  4068d3:	je     0x4066a3
  4068d9:	jmp    0x4067f4
  4068de:	xchg   ax,ax
  4068e0:	test   ebx,ebx
  4068e2:	je     0x4068a0
  4068e4:	jmp    0x4067f4
  4068e9:	nop    DWORD PTR [rax+0x0]
  4068f0:	lea    rcx,[rip+0x210b0]        # 0x4279a7
  4068f7:	call   0x417720
  4068fc:	test   rax,rax
  4068ff:	mov    rbp,rax
  406902:	jne    0x4066a3
  406908:	call   QWORD PTR [rip+0x307b6]        # 0x4370c4
  40690e:	lea    rdx,[rip+0x20fdf]        # 0x4278f4
  406915:	lea    rcx,[rax+0x60]
  406919:	call   0x404b50
  40691e:	jmp    0x4068c7
  406920:	mov    rbx,QWORD PTR [rip+0x3079d]        # 0x4370c4
  406927:	call   rbx
  406929:	lea    rdx,[rip+0x20fc4]        # 0x4278f4
  406930:	lea    rcx,[rax+0x60]
  406934:	call   0x404b50
  406939:	test   r15,r15
  40693c:	je     0x4068c7
  40693e:	jmp    0x4068b9
  406943:	call   rbx
  406945:	lea    rdx,[rip+0x20ffc]        # 0x427948
  40694c:	lea    rcx,[rax+0x60]
  406950:	call   0x404b50
  406955:	jmp    0x4068c7
  40695a:	call   QWORD PTR [rip+0x30764]        # 0x4370c4
  406960:	lea    rdx,[rip+0x20f4e]        # 0x4278b5
  406967:	lea    rcx,[rax+0x60]
  40696b:	call   0x404b50
  406970:	mov    ecx,0x1
  406975:	call   0x4228a0
  40697a:	nop
  40697b:	nop
  40697c:	nop
  40697d:	nop
  40697e:	nop
  40697f:	nop
  406980:	jmp    QWORD PTR [rip+0x305be]        # 0x436f44
  406986:	nop
  406987:	nop
  406988:	jmp    QWORD PTR [rip+0x305ae]        # 0x436f3c
  40698e:	nop
  40698f:	nop
  406990:	jmp    QWORD PTR [rip+0x3059e]        # 0x436f34
  406996:	nop
  406997:	nop
  406998:	jmp    QWORD PTR [rip+0x3058e]        # 0x436f2c
  40699e:	nop
  40699f:	nop
  4069a0:	jmp    QWORD PTR [rip+0x3057e]        # 0x436f24
  4069a6:	nop
  4069a7:	nop
  4069a8:	jmp    QWORD PTR [rip+0x3056e]        # 0x436f1c
  4069ae:	nop
  4069af:	nop
  4069b0:	jmp    QWORD PTR [rip+0x3055e]        # 0x436f14
  4069b6:	nop
  4069b7:	nop
  4069b8:	jmp    QWORD PTR [rip+0x3054e]        # 0x436f0c
  4069be:	nop
  4069bf:	nop
  4069c0:	jmp    QWORD PTR [rip+0x3053e]        # 0x436f04
  4069c6:	nop
  4069c7:	nop
  4069c8:	jmp    QWORD PTR [rip+0x3052e]        # 0x436efc
  4069ce:	nop
  4069cf:	nop
  4069d0:	jmp    QWORD PTR [rip+0x3051e]        # 0x436ef4
  4069d6:	nop
  4069d7:	nop
  4069d8:	jmp    QWORD PTR [rip+0x3050e]        # 0x436eec
  4069de:	nop
  4069df:	nop
  4069e0:	jmp    QWORD PTR [rip+0x304fe]        # 0x436ee4
  4069e6:	nop
  4069e7:	nop
  4069e8:	jmp    QWORD PTR [rip+0x304ee]        # 0x436edc
  4069ee:	nop
  4069ef:	nop
  4069f0:	jmp    QWORD PTR [rip+0x304de]        # 0x436ed4
  4069f6:	nop
  4069f7:	nop
  4069f8:	jmp    QWORD PTR [rip+0x304ce]        # 0x436ecc
  4069fe:	nop
  4069ff:	nop
  406a00:	jmp    QWORD PTR [rip+0x304be]        # 0x436ec4
  406a06:	nop
  406a07:	nop
  406a08:	jmp    QWORD PTR [rip+0x304ae]        # 0x436ebc
  406a0e:	nop
  406a0f:	nop
  406a10:	jmp    QWORD PTR [rip+0x3049e]        # 0x436eb4
  406a16:	nop
  406a17:	nop
  406a18:	jmp    QWORD PTR [rip+0x3048e]        # 0x436eac
  406a1e:	nop
  406a1f:	nop
  406a20:	jmp    QWORD PTR [rip+0x3047e]        # 0x436ea4
  406a26:	nop
  406a27:	nop
  406a28:	jmp    QWORD PTR [rip+0x3046e]        # 0x436e9c
  406a2e:	nop
  406a2f:	nop
  406a30:	jmp    QWORD PTR [rip+0x3045e]        # 0x436e94
  406a36:	nop
  406a37:	nop
  406a38:	jmp    QWORD PTR [rip+0x3044e]        # 0x436e8c
  406a3e:	nop
  406a3f:	nop
  406a40:	jmp    QWORD PTR [rip+0x3043e]        # 0x436e84
  406a46:	nop
  406a47:	nop
  406a48:	jmp    QWORD PTR [rip+0x3042e]        # 0x436e7c
  406a4e:	nop
  406a4f:	nop
  406a50:	jmp    QWORD PTR [rip+0x3041e]        # 0x436e74
  406a56:	nop
  406a57:	nop
  406a58:	jmp    QWORD PTR [rip+0x3040e]        # 0x436e6c
  406a5e:	nop
  406a5f:	nop
  406a60:	jmp    QWORD PTR [rip+0x303fe]        # 0x436e64
  406a66:	nop
  406a67:	nop
  406a68:	jmp    QWORD PTR [rip+0x303ee]        # 0x436e5c
  406a6e:	nop
  406a6f:	nop
  406a70:	jmp    QWORD PTR [rip+0x303de]        # 0x436e54
  406a76:	nop
  406a77:	nop
  406a78:	jmp    QWORD PTR [rip+0x303ce]        # 0x436e4c
  406a7e:	nop
  406a7f:	nop
  406a80:	jmp    QWORD PTR [rip+0x303be]        # 0x436e44
  406a86:	nop
  406a87:	nop
  406a88:	jmp    QWORD PTR [rip+0x303ae]        # 0x436e3c
  406a8e:	nop
  406a8f:	nop
  406a90:	jmp    QWORD PTR [rip+0x3039e]        # 0x436e34
  406a96:	nop
  406a97:	nop
  406a98:	jmp    QWORD PTR [rip+0x3038e]        # 0x436e2c
  406a9e:	nop
  406a9f:	nop
  406aa0:	jmp    QWORD PTR [rip+0x3037e]        # 0x436e24
  406aa6:	nop
  406aa7:	nop
  406aa8:	jmp    QWORD PTR [rip+0x3036e]        # 0x436e1c
  406aae:	nop
  406aaf:	nop
  406ab0:	jmp    QWORD PTR [rip+0x3035e]        # 0x436e14
  406ab6:	nop
  406ab7:	nop
  406ab8:	jmp    QWORD PTR [rip+0x3034e]        # 0x436e0c
  406abe:	nop
  406abf:	nop
  406ac0:	jmp    QWORD PTR [rip+0x3033e]        # 0x436e04
  406ac6:	nop
  406ac7:	nop
  406ac8:	jmp    QWORD PTR [rip+0x3032e]        # 0x436dfc
  406ace:	nop
  406acf:	nop
  406ad0:	jmp    QWORD PTR [rip+0x3031e]        # 0x436df4
  406ad6:	nop
  406ad7:	nop
  406ad8:	jmp    QWORD PTR [rip+0x3030e]        # 0x436dec
  406ade:	nop
  406adf:	nop
  406ae0:	jmp    QWORD PTR [rip+0x302fe]        # 0x436de4
  406ae6:	nop
  406ae7:	nop
  406ae8:	jmp    QWORD PTR [rip+0x302ee]        # 0x436ddc
  406aee:	nop
  406aef:	nop
  406af0:	jmp    QWORD PTR [rip+0x302de]        # 0x436dd4
  406af6:	nop
  406af7:	nop
  406af8:	jmp    QWORD PTR [rip+0x302ce]        # 0x436dcc
  406afe:	nop
  406aff:	nop
  406b00:	jmp    QWORD PTR [rip+0x302be]        # 0x436dc4
  406b06:	nop
  406b07:	nop
  406b08:	jmp    QWORD PTR [rip+0x302ae]        # 0x436dbc
  406b0e:	nop
  406b0f:	nop
  406b10:	jmp    QWORD PTR [rip+0x3029e]        # 0x436db4
  406b16:	nop
  406b17:	nop
  406b18:	jmp    QWORD PTR [rip+0x3028e]        # 0x436dac
  406b1e:	nop
  406b1f:	nop
  406b20:	jmp    QWORD PTR [rip+0x3027e]        # 0x436da4
  406b26:	nop
  406b27:	nop
  406b28:	jmp    QWORD PTR [rip+0x3026e]        # 0x436d9c
  406b2e:	nop
  406b2f:	nop
  406b30:	jmp    QWORD PTR [rip+0x3025e]        # 0x436d94
  406b36:	nop
  406b37:	nop
  406b38:	jmp    QWORD PTR [rip+0x3024e]        # 0x436d8c
  406b3e:	nop
  406b3f:	nop
  406b40:	jmp    QWORD PTR [rip+0x3023e]        # 0x436d84
  406b46:	nop
  406b47:	nop
  406b48:	jmp    QWORD PTR [rip+0x3022e]        # 0x436d7c
  406b4e:	nop
  406b4f:	nop
  406b50:	jmp    QWORD PTR [rip+0x3021e]        # 0x436d74
  406b56:	nop
  406b57:	nop
  406b58:	jmp    QWORD PTR [rip+0x3020e]        # 0x436d6c
  406b5e:	nop
  406b5f:	nop
  406b60:	jmp    QWORD PTR [rip+0x301fe]        # 0x436d64
  406b66:	nop
  406b67:	nop
  406b68:	jmp    QWORD PTR [rip+0x301ee]        # 0x436d5c
  406b6e:	nop
  406b6f:	nop
  406b70:	jmp    QWORD PTR [rip+0x301de]        # 0x436d54
  406b76:	nop
  406b77:	nop
  406b78:	jmp    QWORD PTR [rip+0x301ce]        # 0x436d4c
  406b7e:	nop
  406b7f:	nop
  406b80:	jmp    QWORD PTR [rip+0x301be]        # 0x436d44
  406b86:	nop
  406b87:	nop
  406b88:	jmp    QWORD PTR [rip+0x301ae]        # 0x436d3c
  406b8e:	nop
  406b8f:	nop
  406b90:	jmp    QWORD PTR [rip+0x30196]        # 0x436d2c
  406b96:	nop
  406b97:	nop
  406b98:	jmp    QWORD PTR [rip+0x30186]        # 0x436d24
  406b9e:	nop
  406b9f:	nop
  406ba0:	jmp    QWORD PTR [rip+0x30176]        # 0x436d1c
  406ba6:	nop
  406ba7:	nop
  406ba8:	jmp    QWORD PTR [rip+0x30166]        # 0x436d14
  406bae:	nop
  406baf:	nop
  406bb0:	jmp    QWORD PTR [rip+0x30156]        # 0x436d0c
  406bb6:	nop
  406bb7:	nop
  406bb8:	jmp    QWORD PTR [rip+0x30146]        # 0x436d04
  406bbe:	nop
  406bbf:	nop
  406bc0:	jmp    QWORD PTR [rip+0x30136]        # 0x436cfc
  406bc6:	nop
  406bc7:	nop
  406bc8:	jmp    QWORD PTR [rip+0x30126]        # 0x436cf4
  406bce:	nop
  406bcf:	nop
  406bd0:	jmp    QWORD PTR [rip+0x30116]        # 0x436cec
  406bd6:	nop
  406bd7:	nop
  406bd8:	jmp    QWORD PTR [rip+0x30106]        # 0x436ce4
  406bde:	nop
  406bdf:	nop
  406be0:	jmp    QWORD PTR [rip+0x300f6]        # 0x436cdc
  406be6:	nop
  406be7:	nop
  406be8:	jmp    QWORD PTR [rip+0x300e6]        # 0x436cd4
  406bee:	nop
  406bef:	nop
  406bf0:	jmp    QWORD PTR [rip+0x300d6]        # 0x436ccc
  406bf6:	nop
  406bf7:	nop
  406bf8:	jmp    QWORD PTR [rip+0x300c6]        # 0x436cc4
  406bfe:	nop
  406bff:	nop
  406c00:	jmp    QWORD PTR [rip+0x300b6]        # 0x436cbc
  406c06:	nop
  406c07:	nop
  406c08:	jmp    QWORD PTR [rip+0x300a6]        # 0x436cb4
  406c0e:	nop
  406c0f:	nop
  406c10:	jmp    QWORD PTR [rip+0x30096]        # 0x436cac
  406c16:	nop
  406c17:	nop
  406c18:	jmp    QWORD PTR [rip+0x3007e]        # 0x436c9c
  406c1e:	nop
  406c1f:	nop
  406c20:	jmp    QWORD PTR [rip+0x3006e]        # 0x436c94
  406c26:	nop
  406c27:	nop
  406c28:	jmp    QWORD PTR [rip+0x3005e]        # 0x436c8c
  406c2e:	nop
  406c2f:	nop
  406c30:	jmp    QWORD PTR [rip+0x3004e]        # 0x436c84
  406c36:	nop
  406c37:	nop
  406c38:	jmp    QWORD PTR [rip+0x3003e]        # 0x436c7c
  406c3e:	nop
  406c3f:	nop
  406c40:	jmp    QWORD PTR [rip+0x3002e]        # 0x436c74
  406c46:	nop
  406c47:	nop
  406c48:	jmp    QWORD PTR [rip+0x3001e]        # 0x436c6c
  406c4e:	nop
  406c4f:	nop
  406c50:	jmp    QWORD PTR [rip+0x3000e]        # 0x436c64
  406c56:	nop
  406c57:	nop
  406c58:	jmp    QWORD PTR [rip+0x2fffe]        # 0x436c5c
  406c5e:	nop
  406c5f:	nop
  406c60:	jmp    QWORD PTR [rip+0x2ffee]        # 0x436c54
  406c66:	nop
  406c67:	nop
  406c68:	jmp    QWORD PTR [rip+0x2ffde]        # 0x436c4c
  406c6e:	nop
  406c6f:	nop
  406c70:	jmp    QWORD PTR [rip+0x2ffce]        # 0x436c44
  406c76:	nop
  406c77:	nop
  406c78:	jmp    QWORD PTR [rip+0x2ffbe]        # 0x436c3c
  406c7e:	nop
  406c7f:	nop
  406c80:	jmp    QWORD PTR [rip+0x2ffae]        # 0x436c34
  406c86:	nop
  406c87:	nop
  406c88:	jmp    QWORD PTR [rip+0x2ff9e]        # 0x436c2c
  406c8e:	nop
  406c8f:	nop
  406c90:	jmp    QWORD PTR [rip+0x2ff8e]        # 0x436c24
  406c96:	nop
  406c97:	nop
  406c98:	jmp    QWORD PTR [rip+0x2ff7e]        # 0x436c1c
  406c9e:	nop
  406c9f:	nop
  406ca0:	jmp    QWORD PTR [rip+0x2ff6e]        # 0x436c14
  406ca6:	nop
  406ca7:	nop
  406ca8:	jmp    QWORD PTR [rip+0x2ff5e]        # 0x436c0c
  406cae:	nop
  406caf:	nop
  406cb0:	jmp    QWORD PTR [rip+0x2ff4e]        # 0x436c04
  406cb6:	nop
  406cb7:	nop
  406cb8:	jmp    QWORD PTR [rip+0x2ff3e]        # 0x436bfc
  406cbe:	nop
  406cbf:	nop
  406cc0:	jmp    QWORD PTR [rip+0x2ff2e]        # 0x436bf4
  406cc6:	nop
  406cc7:	nop
  406cc8:	jmp    QWORD PTR [rip+0x2ff1e]        # 0x436bec
  406cce:	nop
  406ccf:	nop
  406cd0:	jmp    QWORD PTR [rip+0x2ff0e]        # 0x436be4
  406cd6:	nop
  406cd7:	nop
  406cd8:	jmp    QWORD PTR [rip+0x2fefe]        # 0x436bdc
  406cde:	nop
  406cdf:	nop
  406ce0:	jmp    QWORD PTR [rip+0x2feee]        # 0x436bd4
  406ce6:	nop
  406ce7:	nop
  406ce8:	jmp    QWORD PTR [rip+0x2fede]        # 0x436bcc
  406cee:	nop
  406cef:	nop
  406cf0:	jmp    QWORD PTR [rip+0x2fece]        # 0x436bc4
  406cf6:	nop
  406cf7:	nop
  406cf8:	jmp    QWORD PTR [rip+0x2febe]        # 0x436bbc
  406cfe:	nop
  406cff:	nop
  406d00:	jmp    QWORD PTR [rip+0x2feae]        # 0x436bb4
  406d06:	nop
  406d07:	nop
  406d08:	jmp    QWORD PTR [rip+0x2fe9e]        # 0x436bac
  406d0e:	nop
  406d0f:	nop
  406d10:	jmp    QWORD PTR [rip+0x2fe8e]        # 0x436ba4
  406d16:	nop
  406d17:	nop
  406d18:	jmp    QWORD PTR [rip+0x2fe7e]        # 0x436b9c
  406d1e:	nop
  406d1f:	nop
  406d20:	jmp    QWORD PTR [rip+0x2fe6e]        # 0x436b94
  406d26:	nop
  406d27:	nop
  406d28:	jmp    QWORD PTR [rip+0x2fe5e]        # 0x436b8c
  406d2e:	nop
  406d2f:	nop
  406d30:	jmp    QWORD PTR [rip+0x2fe4e]        # 0x436b84
  406d36:	nop
  406d37:	nop
  406d38:	jmp    QWORD PTR [rip+0x2fe3e]        # 0x436b7c
  406d3e:	nop
  406d3f:	nop
  406d40:	jmp    QWORD PTR [rip+0x2fe2e]        # 0x436b74
  406d46:	nop
  406d47:	nop
  406d48:	jmp    QWORD PTR [rip+0x2fe1e]        # 0x436b6c
  406d4e:	nop
  406d4f:	nop
  406d50:	jmp    QWORD PTR [rip+0x2fe0e]        # 0x436b64
  406d56:	nop
  406d57:	nop
  406d58:	jmp    QWORD PTR [rip+0x2fdfe]        # 0x436b5c
  406d5e:	nop
  406d5f:	nop
  406d60:	jmp    QWORD PTR [rip+0x2fdee]        # 0x436b54
  406d66:	nop
  406d67:	nop
  406d68:	jmp    QWORD PTR [rip+0x2fdde]        # 0x436b4c
  406d6e:	nop
  406d6f:	nop
  406d70:	jmp    QWORD PTR [rip+0x2fdce]        # 0x436b44
  406d76:	nop
  406d77:	nop
  406d78:	jmp    QWORD PTR [rip+0x2fdbe]        # 0x436b3c
  406d7e:	nop
  406d7f:	nop
  406d80:	jmp    QWORD PTR [rip+0x2fdae]        # 0x436b34
  406d86:	nop
  406d87:	nop
  406d88:	jmp    QWORD PTR [rip+0x2fd9e]        # 0x436b2c
  406d8e:	nop
  406d8f:	nop
  406d90:	jmp    QWORD PTR [rip+0x2fd8e]        # 0x436b24
  406d96:	nop
  406d97:	nop
  406d98:	jmp    QWORD PTR [rip+0x2fd7e]        # 0x436b1c
  406d9e:	nop
  406d9f:	nop
  406da0:	jmp    QWORD PTR [rip+0x2fd6e]        # 0x436b14
  406da6:	nop
  406da7:	nop
  406da8:	jmp    QWORD PTR [rip+0x2fd5e]        # 0x436b0c
  406dae:	nop
  406daf:	nop
  406db0:	jmp    QWORD PTR [rip+0x2fd4e]        # 0x436b04
  406db6:	nop
  406db7:	nop
  406db8:	jmp    QWORD PTR [rip+0x2fd3e]        # 0x436afc
  406dbe:	nop
  406dbf:	nop
  406dc0:	jmp    QWORD PTR [rip+0x2fd2e]        # 0x436af4
  406dc6:	nop
  406dc7:	nop
  406dc8:	jmp    QWORD PTR [rip+0x2fd1e]        # 0x436aec
  406dce:	nop
  406dcf:	nop
  406dd0:	jmp    QWORD PTR [rip+0x2fd0e]        # 0x436ae4
  406dd6:	nop
  406dd7:	nop
  406dd8:	jmp    QWORD PTR [rip+0x2fcfe]        # 0x436adc
  406dde:	nop
  406ddf:	nop
  406de0:	jmp    QWORD PTR [rip+0x2fcee]        # 0x436ad4
  406de6:	nop
  406de7:	nop
  406de8:	jmp    QWORD PTR [rip+0x2fcde]        # 0x436acc
  406dee:	nop
  406def:	nop
  406df0:	jmp    QWORD PTR [rip+0x2fcce]        # 0x436ac4
  406df6:	nop
  406df7:	nop
  406df8:	jmp    QWORD PTR [rip+0x2fcbe]        # 0x436abc
  406dfe:	nop
  406dff:	nop
  406e00:	jmp    QWORD PTR [rip+0x2fcae]        # 0x436ab4
  406e06:	nop
  406e07:	nop
  406e08:	jmp    QWORD PTR [rip+0x2fc9e]        # 0x436aac
  406e0e:	nop
  406e0f:	nop
  406e10:	sub    rsp,0x28
  406e14:	lea    rcx,[rip+0x1d365]        # 0x424180
  406e1b:	xor    edx,edx
  406e1d:	call   0x413140
  406e22:	mov    ecx,0x1
  406e27:	call   0x4228a0
  406e2c:	nop
  406e2d:	nop    DWORD PTR [rax]
  406e30:	mov    DWORD PTR [rip+0x2c78e],0x0        # 0x4335c8
  406e3a:	mov    r9,QWORD PTR [rip+0x2c787]        # 0x4335c8
  406e41:	mov    r8d,0x1
  406e47:	jmp    0x40d880
  406e4c:	nop    DWORD PTR [rax+0x0]
  406e50:	mov    DWORD PTR [rip+0x2c766],0x0        # 0x4335c0
  406e5a:	mov    r9,QWORD PTR [rip+0x2c75f]        # 0x4335c0
  406e61:	mov    r8d,0x1
  406e67:	jmp    0x40d880
  406e6c:	nop    DWORD PTR [rax+0x0]
  406e70:	mov    DWORD PTR [rip+0x2c73e],0x0        # 0x4335b8
  406e7a:	mov    r9,QWORD PTR [rip+0x2c737]        # 0x4335b8
  406e81:	mov    r8d,0x1
  406e87:	jmp    0x40d880
  406e8c:	nop    DWORD PTR [rax+0x0]
  406e90:	mov    DWORD PTR [rip+0x2c716],0x0        # 0x4335b0
  406e9a:	mov    r9,QWORD PTR [rip+0x2c70f]        # 0x4335b0
  406ea1:	mov    r8d,0x1
  406ea7:	jmp    0x40d880
  406eac:	nop    DWORD PTR [rax+0x0]
  406eb0:	mov    DWORD PTR [rip+0x2c6ee],0x0        # 0x4335a8
  406eba:	mov    r9,QWORD PTR [rip+0x2c6e7]        # 0x4335a8
  406ec1:	mov    r8d,0x1
  406ec7:	jmp    0x40d880
  406ecc:	nop    DWORD PTR [rax+0x0]
  406ed0:	mov    DWORD PTR [rip+0x2c6c6],0x0        # 0x4335a0
  406eda:	mov    r9,QWORD PTR [rip+0x2c6bf]        # 0x4335a0
  406ee1:	mov    r8d,0x1
  406ee7:	jmp    0x40d880
  406eec:	nop    DWORD PTR [rax+0x0]
  406ef0:	mov    DWORD PTR [rip+0x2c69e],0x0        # 0x433598
  406efa:	mov    r9,QWORD PTR [rip+0x2c697]        # 0x433598
  406f01:	mov    r8d,0x1
  406f07:	jmp    0x40d880
  406f0c:	nop    DWORD PTR [rax+0x0]
  406f10:	mov    DWORD PTR [rip+0x2c676],0x0        # 0x433590
  406f1a:	mov    r9,QWORD PTR [rip+0x2c66f]        # 0x433590
  406f21:	mov    r8d,0x1
  406f27:	jmp    0x40d880
  406f2c:	nop    DWORD PTR [rax+0x0]
  406f30:	mov    DWORD PTR [rip+0x2c64e],0x0        # 0x433588
  406f3a:	mov    r9,QWORD PTR [rip+0x2c647]        # 0x433588
  406f41:	mov    r8d,0x1
  406f47:	jmp    0x40d880
  406f4c:	nop    DWORD PTR [rax+0x0]
  406f50:	mov    DWORD PTR [rip+0x2c626],0x0        # 0x433580
  406f5a:	mov    r9,QWORD PTR [rip+0x2c61f]        # 0x433580
  406f61:	mov    r8d,0x1
  406f67:	jmp    0x40d880
  406f6c:	nop    DWORD PTR [rax+0x0]
  406f70:	push   rsi
  406f71:	push   rbx
  406f72:	sub    rsp,0x28
  406f76:	cmp    rcx,0xf
  406f7a:	mov    rbx,rcx
  406f7d:	mov    rsi,rdx
  406f80:	ja     0x406fa0
  406f82:	lea    r8,[rip+0x20a3f]        # 0x4279c8
  406f89:	mov    r9d,0x1
  406f8f:	mov    rdx,rsi
  406f92:	mov    rcx,rbx
  406f95:	add    rsp,0x28
  406f99:	pop    rbx
  406f9a:	pop    rsi
  406f9b:	jmp    0x40e830
  406fa0:	call   0x407180
  406fa5:	cmp    DWORD PTR [rsi+0x18],0x4268
  406fac:	jbe    0x406fc4
  406fae:	call   QWORD PTR [rip+0x30110]        # 0x4370c4
  406fb4:	mov    rdx,QWORD PTR [rip+0x26ac5]        # 0x42da80
  406fbb:	add    rax,0x60
  406fbf:	mov    QWORD PTR [rdx],rax
  406fc2:	jmp    0x406f82
  406fc4:	add    rsp,0x28
  406fc8:	pop    rbx
  406fc9:	pop    rsi
  406fca:	ret    
  406fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  406fd0:	push   rsi
  406fd1:	push   rbx
  406fd2:	sub    rsp,0x28
  406fd6:	cmp    rcx,0xf
  406fda:	mov    rbx,rcx
  406fdd:	mov    rsi,rdx
  406fe0:	ja     0x407000
  406fe2:	lea    r8,[rip+0x209d7]        # 0x4279c0
  406fe9:	mov    r9d,0x1
  406fef:	mov    rdx,rsi
  406ff2:	mov    rcx,rbx
  406ff5:	add    rsp,0x28
  406ff9:	pop    rbx
  406ffa:	pop    rsi
  406ffb:	jmp    0x40e830
  407000:	call   0x407180
  407005:	cmp    DWORD PTR [rsi+0x18],0x270f
  40700c:	jbe    0x407024
  40700e:	call   QWORD PTR [rip+0x300b0]        # 0x4370c4
  407014:	mov    rdx,QWORD PTR [rip+0x26a65]        # 0x42da80
  40701b:	add    rax,0x60
  40701f:	mov    QWORD PTR [rdx],rax
  407022:	jmp    0x406fe2
  407024:	add    rsp,0x28
  407028:	pop    rbx
  407029:	pop    rsi
  40702a:	ret    
  40702b:	nop
  40702c:	nop
  40702d:	nop
  40702e:	nop
  40702f:	nop
  407030:	push   rsi
  407031:	push   rbx
  407032:	sub    rsp,0x28
  407036:	mov    eax,DWORD PTR [rdx+0x10]
  407039:	mov    r8,QWORD PTR [rdx+0x38]
  40703d:	mov    rsi,rcx
  407040:	mov    rbx,rdx
  407043:	and    eax,0xfffff00
  407048:	or     eax,0x8
  40704b:	test   r8,r8
  40704e:	mov    DWORD PTR [rdx+0x10],eax
  407051:	je     0x407059
  407053:	call   r8
  407056:	mov    eax,DWORD PTR [rbx+0x10]
  407059:	movzx  edx,WORD PTR [rbx]
  40705c:	mov    rcx,QWORD PTR [rsi+0xc8]
  407063:	and    eax,0xfffff00
  407068:	mov    rcx,QWORD PTR [rcx+rdx*8]
  40706c:	mov    QWORD PTR [rbx+0x18],rcx
  407070:	mov    rcx,QWORD PTR [rsi+0xd0]
  407077:	mov    rdx,QWORD PTR [rcx+rdx*8]
  40707b:	mov    DWORD PTR [rbx+0x10],eax
  40707e:	mov    QWORD PTR [rbx+0x20],rdx
  407082:	add    rsp,0x28
  407086:	pop    rbx
  407087:	pop    rsi
  407088:	ret    
  407089:	nop    DWORD PTR [rax+0x0]
  407090:	push   rbp
  407091:	push   rdi
  407092:	push   rsi
  407093:	push   rbx
  407094:	sub    rsp,0x28
  407098:	mov    eax,DWORD PTR [rcx]
  40709a:	lea    rbx,[rcx+0x8]
  40709e:	mov    rbp,rcx
  4070a1:	lea    edx,[rax-0x1]
  4070a4:	test   eax,eax
  4070a6:	lea    rdi,[rbx+rdx*8+0x8]
  4070ab:	jg     0x4070bd
  4070ad:	jmp    0x4070e0
  4070af:	nop
  4070b0:	mov    rcx,rsi
  4070b3:	call   0x422858
  4070b8:	cmp    rbx,rdi
  4070bb:	je     0x4070e0
  4070bd:	add    rbx,0x8
  4070c1:	mov    rsi,QWORD PTR [rbx-0x8]
  4070c5:	cmp    DWORD PTR [rsi],0x6
  4070c8:	jne    0x4070b0
  4070ca:	mov    rcx,QWORD PTR [rsi+0x10]
  4070ce:	call   0x407090
  4070d3:	mov    rcx,rsi
  4070d6:	call   0x422858
  4070db:	cmp    rbx,rdi
  4070de:	jne    0x4070bd
  4070e0:	mov    rcx,rbp
  4070e3:	add    rsp,0x28
  4070e7:	pop    rbx
  4070e8:	pop    rsi
  4070e9:	pop    rdi
  4070ea:	pop    rbp
  4070eb:	jmp    0x422858
  4070f0:	push   rdi
  4070f1:	push   rsi
  4070f2:	push   rbx
  4070f3:	sub    rsp,0x20
  4070f7:	mov    rdi,QWORD PTR [rip+0x3013e]        # 0x43723c
  4070fe:	mov    rsi,rcx
  407101:	jmp    0x407107
  407103:	add    rsi,0x1
  407107:	movzx  ecx,BYTE PTR [rsi]
  40710a:	call   rdi
  40710c:	test   eax,eax
  40710e:	jne    0x407103
  407110:	mov    rcx,rsi
  407113:	call   0x4227a8
  407118:	lea    rbx,[rsi+rax*1]
  40711c:	cmp    rbx,rsi
  40711f:	ja     0x40712c
  407121:	jmp    0x407136
  407123:	sub    rbx,0x1
  407127:	cmp    rbx,rsi
  40712a:	je     0x407136
  40712c:	movzx  ecx,BYTE PTR [rbx-0x1]
  407130:	call   rdi
  407132:	test   eax,eax
  407134:	jne    0x407123
  407136:	mov    rax,rsi
  407139:	mov    BYTE PTR [rbx],0x0
  40713c:	add    rsp,0x20
  407140:	pop    rbx
  407141:	pop    rsi
  407142:	pop    rdi
  407143:	ret    
  407144:	xchg   ax,ax
  407146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407150:	sub    rsp,0x38
  407154:	mov    QWORD PTR [rsp+0x50],r8
  407159:	lea    r8,[rsp+0x50]
  40715e:	mov    QWORD PTR [rsp+0x58],r9
  407163:	mov    QWORD PTR [rsp+0x28],r8
  407168:	call   0x41dce0
  40716d:	add    rsp,0x38
  407171:	ret    
  407172:	nop    DWORD PTR [rax+0x0]
  407176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407180:	push   r13
  407182:	push   r12
  407184:	push   rbp
  407185:	push   rdi
  407186:	push   rsi
  407187:	push   rbx
  407188:	sub    rsp,0x38
  40718c:	cmp    rcx,0xf
  407190:	jbe    0x40719d
  407192:	test   rdx,rdx
  407195:	je     0x40719d
  407197:	test   BYTE PTR [rdx+0x10],0x8
  40719b:	je     0x4071b0
  40719d:	add    rsp,0x38
  4071a1:	pop    rbx
  4071a2:	pop    rsi
  4071a3:	pop    rdi
  4071a4:	pop    rbp
  4071a5:	pop    r12
  4071a7:	pop    r13
  4071a9:	ret    
  4071aa:	nop    WORD PTR [rax+rax*1+0x0]
  4071b0:	cmp    QWORD PTR [rdx+0x18],0x0
  4071b5:	je     0x40719d
  4071b7:	mov    rbx,rdx
  4071ba:	mov    rsi,rcx
  4071bd:	mov    rdi,QWORD PTR [rip+0x2ff50]        # 0x437114
  4071c4:	call   rdi
  4071c6:	mov    DWORD PTR [rax],0x0
  4071cc:	mov    rcx,QWORD PTR [rbx+0x18]
  4071d0:	lea    rdx,[rsp+0x28]
  4071d5:	xor    r8d,r8d
  4071d8:	call   0x422778
  4071dd:	mov    rbp,QWORD PTR [rbx+0x18]
  4071e1:	cmp    rbp,QWORD PTR [rsp+0x28]
  4071e6:	mov    r12d,eax
  4071e9:	je     0x407224
  4071eb:	call   rdi
  4071ed:	mov    eax,DWORD PTR [rax]
  4071ef:	test   eax,eax
  4071f1:	jne    0x407220
  4071f3:	mov    eax,DWORD PTR [rbx+0x10]
  4071f6:	test   eax,0x1000000
  4071fb:	jne    0x40726f
  4071fd:	mov    rdx,QWORD PTR [rsp+0x28]
  407202:	cmp    BYTE PTR [rdx],0x0
  407205:	jne    0x407220
  407207:	test   al,0x40
  407209:	jne    0x4072e0
  40720f:	mov    DWORD PTR [rbx+0x18],r12d
  407213:	jmp    0x40719d
  407215:	cmp    cl,0x67
  407218:	je     0x4072c6
  40721e:	xchg   ax,ax
  407220:	mov    rbp,QWORD PTR [rbx+0x18]
  407224:	mov    r13,QWORD PTR [rsi+0x28]
  407228:	mov    r12,QWORD PTR [rip+0x1e6a9]        # 0x4258d8
  40722f:	call   QWORD PTR [rip+0x2fe8f]        # 0x4370c4
  407235:	lea    rcx,[rax+0x60]
  407239:	mov    r9,rbp
  40723c:	mov    r8,r13
  40723f:	mov    rdx,r12
  407242:	call   0x407150
  407247:	test   BYTE PTR [rsi+0x10],0x4
  40724b:	je     0x40725b
  40724d:	mov    edx,0x1
  407252:	mov    rcx,rsi
  407255:	call   QWORD PTR [rsi+0x98]
  40725b:	call   rdi
  40725d:	mov    DWORD PTR [rax],0x16
  407263:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40726a:	jmp    0x40719d
  40726f:	mov    r8,QWORD PTR [rsp+0x28]
  407274:	lea    rdx,[r8+0x1]
  407278:	mov    QWORD PTR [rsp+0x28],rdx
  40727d:	movzx  ecx,BYTE PTR [r8]
  407281:	cmp    cl,0x54
  407284:	je     0x4072f2
  407286:	jg     0x4072a6
  407288:	cmp    cl,0x47
  40728b:	je     0x4072f6
  40728d:	jle    0x4072fc
  40728f:	cmp    cl,0x4b
  407292:	je     0x40729d
  407294:	cmp    cl,0x4d
  407297:	jne    0x407220
  407299:	shl    r12d,0xa
  40729d:	shl    r12d,0xa
  4072a1:	jmp    0x407202
  4072a6:	cmp    cl,0x6b
  4072a9:	je     0x4072d4
  4072ab:	jle    0x407215
  4072b1:	cmp    cl,0x6d
  4072b4:	je     0x4072cd
  4072b6:	imul   r12d,r12d,0x3e8
  4072bd:	cmp    cl,0x74
  4072c0:	jne    0x407220
  4072c6:	imul   r12d,r12d,0x3e8
  4072cd:	imul   r12d,r12d,0x3e8
  4072d4:	imul   r12d,r12d,0x3e8
  4072db:	jmp    0x407202
  4072e0:	mov    rcx,QWORD PTR [rbx+0x18]
  4072e4:	call   0x422858
  4072e9:	and    DWORD PTR [rbx+0x10],0xffffffbf
  4072ed:	jmp    0x40720f
  4072f2:	shl    r12d,0xa
  4072f6:	shl    r12d,0xa
  4072fa:	jmp    0x407299
  4072fc:	test   cl,cl
  4072fe:	jne    0x407220
  407304:	mov    QWORD PTR [rsp+0x28],r8
  407309:	mov    rdx,r8
  40730c:	jmp    0x407202
  407311:	nop    DWORD PTR [rax+rax*1+0x0]
  407316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407320:	push   rsi
  407321:	push   rbx
  407322:	sub    rsp,0x28
  407326:	test   rdx,rdx
  407329:	mov    rsi,rcx
  40732c:	mov    rbx,rdx
  40732f:	je     0x407370
  407331:	mov    edx,0xa
  407336:	mov    rcx,rbx
  407339:	call   0x4227d0
  40733e:	test   rax,rax
  407341:	je     0x407384
  407343:	sub    rax,rbx
  407346:	mov    r9,rsi
  407349:	mov    edx,0x1
  40734e:	mov    r8,rax
  407351:	mov    rcx,rbx
  407354:	call   0x422840
  407359:	mov    rdx,rsi
  40735c:	mov    ecx,0xa
  407361:	add    rsp,0x28
  407365:	pop    rbx
  407366:	pop    rsi
  407367:	jmp    0x422870
  40736c:	nop    DWORD PTR [rax+0x0]
  407370:	test   r8,r8
  407373:	mov    rbx,r8
  407376:	jne    0x407331
  407378:	test   r9,r9
  40737b:	jne    0x407391
  40737d:	add    rsp,0x28
  407381:	pop    rbx
  407382:	pop    rsi
  407383:	ret    
  407384:	mov    rdx,rsi
  407387:	mov    rcx,rbx
  40738a:	call   0x422868
  40738f:	jmp    0x407359
  407391:	mov    rbx,r9
  407394:	jmp    0x407331
  407396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073a0:	push   rsi
  4073a1:	push   rbx
  4073a2:	sub    rsp,0x28
  4073a6:	cmp    BYTE PTR [rcx],0x27
  4073a9:	mov    rbx,rcx
  4073ac:	jne    0x4073db
  4073ae:	mov    rsi,QWORD PTR [rip+0x2fd0f]        # 0x4370c4
  4073b5:	call   rsi
  4073b7:	lea    rcx,[rip+0x22993]        # 0x429d51
  4073be:	lea    r9,[rax+0x30]
  4073c2:	mov    r8d,0x2
  4073c8:	mov    edx,0x1
  4073cd:	add    rbx,0x1
  4073d1:	call   0x422840
  4073d6:	cmp    BYTE PTR [rbx],0x27
  4073d9:	je     0x4073b5
  4073db:	mov    rax,rbx
  4073de:	add    rsp,0x28
  4073e2:	pop    rbx
  4073e3:	pop    rsi
  4073e4:	ret    
  4073e5:	nop
  4073e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073f0:	push   r12
  4073f2:	push   rbp
  4073f3:	push   rdi
  4073f4:	push   rsi
  4073f5:	push   rbx
  4073f6:	sub    rsp,0x20
  4073fa:	test   BYTE PTR [rdx+0x10],0x20
  4073fe:	mov    rdi,rcx
  407401:	mov    r12,rdx
  407404:	mov    rbx,r8
  407407:	je     0x407415
  407409:	cmp    WORD PTR [rdx+0x8],0x8000
  40740f:	je     0x407520
  407415:	mov    rsi,QWORD PTR [r12+0x50]
  40741a:	mov    rcx,rsi
  40741d:	mov    ebp,0x11
  407422:	call   0x4227a8
  407427:	mov    rdx,rdi
  40742a:	mov    rcx,rsi
  40742d:	sub    ebp,eax
  40742f:	call   0x422868
  407434:	test   rbx,rbx
  407437:	je     0x407500
  40743d:	lea    rcx,[rip+0x2127c]        # 0x4286c0
  407444:	mov    r9,rdi
  407447:	mov    r8d,0x3
  40744d:	mov    edx,0x1
  407452:	lea    esi,[rbp-0x1]
  407455:	call   0x422840
  40745a:	test   ebp,ebp
  40745c:	jle    0x407475
  40745e:	xchg   ax,ax
  407460:	mov    rdx,rdi
  407463:	mov    ecx,0x20
  407468:	sub    esi,0x1
  40746b:	call   0x422870
  407470:	cmp    esi,0xffffffff
  407473:	jne    0x407460
  407475:	mov    eax,DWORD PTR [r12+0x10]
  40747a:	and    eax,0xf000
  40747f:	cmp    eax,0x5000
  407484:	jne    0x4074c5
  407486:	jmp    0x407529
  40748b:	nop    DWORD PTR [rax+rax*1+0x0]
  407490:	mov    rdx,rax
  407493:	mov    rcx,rbx
  407496:	mov    r9,rdi
  407499:	sub    rdx,rbx
  40749c:	mov    r8d,0x1
  4074a2:	lea    rbx,[rsi+0x1]
  4074a6:	call   0x422840
  4074ab:	lea    rcx,[rip+0x21215]        # 0x4286c7
  4074b2:	mov    r9,rdi
  4074b5:	mov    r8d,0x2
  4074bb:	mov    edx,0x1
  4074c0:	call   0x422840
  4074c5:	mov    edx,0xa
  4074ca:	mov    rcx,rbx
  4074cd:	call   0x4227d0
  4074d2:	test   rax,rax
  4074d5:	mov    rsi,rax
  4074d8:	jne    0x407490
  4074da:	mov    rdx,rdi
  4074dd:	mov    rcx,rbx
  4074e0:	call   0x422868
  4074e5:	mov    rdx,rdi
  4074e8:	mov    ecx,0xa
  4074ed:	add    rsp,0x20
  4074f1:	pop    rbx
  4074f2:	pop    rsi
  4074f3:	pop    rdi
  4074f4:	pop    rbp
  4074f5:	pop    r12
  4074f7:	jmp    0x422870
  4074fc:	nop    DWORD PTR [rax+0x0]
  407500:	mov    eax,DWORD PTR [r12+0x10]
  407505:	and    eax,0xf000
  40750a:	cmp    eax,0x5000
  40750f:	jne    0x4074e5
  407511:	jmp    0x40743d
  407516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407520:	mov    rsi,QWORD PTR [rdx+0x58]
  407524:	jmp    0x40741a
  407529:	lea    rdx,[rip+0x21194]        # 0x4286c4
  407530:	mov    r8d,ebx
  407533:	mov    rcx,rdi
  407536:	call   0x407150
  40753b:	jmp    0x4074e5
  40753d:	nop    DWORD PTR [rax]
  407540:	sub    rsp,0x38
  407544:	mov    QWORD PTR [rsp+0x58],r9
  407549:	lea    r9,[rsp+0x58]
  40754e:	mov    QWORD PTR [rsp+0x28],r9
  407553:	call   0x41dd50
  407558:	add    rsp,0x38
  40755c:	ret    
  40755d:	nop    DWORD PTR [rax]
  407560:	sub    rsp,0x38
  407564:	mov    QWORD PTR [rsp+0x48],rdx
  407569:	lea    rdx,[rsp+0x48]
  40756e:	mov    QWORD PTR [rsp+0x50],r8
  407573:	mov    QWORD PTR [rsp+0x58],r9
  407578:	mov    QWORD PTR [rsp+0x28],rdx
  40757d:	call   0x41dd10
  407582:	add    rsp,0x38
  407586:	ret    
  407587:	nop    WORD PTR [rax+rax*1+0x0]
  407590:	push   rbx
  407591:	sub    rsp,0x20
  407595:	cmp    BYTE PTR [rip+0x2c098],0x0        # 0x433634
  40759c:	mov    ebx,ecx
  40759e:	jne    0x4075a7
  4075a0:	mov    ecx,ebx
  4075a2:	call   0x4228a0
  4075a7:	mov    edx,ecx
  4075a9:	lea    rcx,[rip+0x2111a]        # 0x4286ca
  4075b0:	call   0x407560
  4075b5:	jmp    0x4075a0
  4075b7:	nop    WORD PTR [rax+rax*1+0x0]
  4075c0:	push   rsi
  4075c1:	push   rbx
  4075c2:	sub    rsp,0x28
  4075c6:	mov    rbx,QWORD PTR [rip+0x1e1d3]        # 0x4257a0
  4075cd:	mov    rsi,rcx
  4075d0:	call   QWORD PTR [rip+0x2faee]        # 0x4370c4
  4075d6:	lea    rcx,[rax+0x60]
  4075da:	mov    r8,rsi
  4075dd:	mov    rdx,rbx
  4075e0:	call   0x407150
  4075e5:	mov    ecx,0x46
  4075ea:	call   0x407590
  4075ef:	nop
  4075f0:	push   r15
  4075f2:	push   r14
  4075f4:	push   r13
  4075f6:	push   r12
  4075f8:	push   rbp
  4075f9:	push   rdi
  4075fa:	push   rsi
  4075fb:	push   rbx
  4075fc:	sub    rsp,0x58
  407600:	cmp    rcx,0xf
  407604:	mov    QWORD PTR [rsp+0xa0],rcx
  40760c:	mov    r13,rdx
  40760f:	mov    rbx,r8
  407612:	mov    ebp,r9d
  407615:	ja     0x407893
  40761b:	mov    r8,QWORD PTR [r13+0x50]
  40761f:	mov    rdx,QWORD PTR [rip+0x1e46a]        # 0x425a90
  407626:	mov    rcx,QWORD PTR [rip+0x2bfdb]        # 0x433608
  40762d:	call   0x407150
  407632:	mov    rdi,QWORD PTR [rbx]
  407635:	mov    DWORD PTR [rsp+0x38],0x0
  40763d:	cmp    BYTE PTR [rdi],0x7f
  407640:	je     0x4078d0
  407646:	mov    rcx,rdi
  407649:	mov    r12,rbx
  40764c:	mov    r14d,ebp
  40764f:	xor    esi,esi
  407651:	xor    r15d,r15d
  407654:	jmp    0x407664
  407656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407660:	mov    rcx,QWORD PTR [r12]
  407664:	call   0x4227a8
  407669:	add    rax,0x1
  40766d:	add    r12,0x8
  407671:	cmp    r15,rax
  407674:	cmovb  r15,rax
  407678:	sub    r14d,0x1
  40767c:	add    rsi,rax
  40767f:	test   r14d,r14d
  407682:	jg     0x407660
  407684:	cmp    r15,0x23
  407688:	jbe    0x407710
  40768e:	mov    esi,ebp
  407690:	jmp    0x407695
  407692:	mov    rdi,QWORD PTR [rbx]
  407695:	mov    rcx,QWORD PTR [rip+0x2bf6c]        # 0x433608
  40769c:	lea    rdx,[rip+0x2258d]        # 0x429c30
  4076a3:	mov    r8,rdi
  4076a6:	sub    esi,0x1
  4076a9:	add    rbx,0x8
  4076ad:	call   0x407150
  4076b2:	test   esi,esi
  4076b4:	jg     0x407692
  4076b6:	cmp    QWORD PTR [rsp+0xa0],0xf
  4076bf:	ja     0x40781f
  4076c5:	mov    eax,DWORD PTR [r13+0x10]
  4076c9:	and    eax,0xf000
  4076ce:	cmp    eax,0x4000
  4076d3:	je     0x407865
  4076d9:	mov    eax,DWORD PTR [rsp+0x38]
  4076dd:	mov    rdx,QWORD PTR [rip+0x1e164]        # 0x425848
  4076e4:	mov    rcx,QWORD PTR [rip+0x2bf1d]        # 0x433608
  4076eb:	lea    r9d,[rax+rbp*1-0x1]
  4076f0:	mov    r8d,eax
  4076f3:	call   0x407150
  4076f8:	nop
  4076f9:	add    rsp,0x58
  4076fd:	pop    rbx
  4076fe:	pop    rsi
  4076ff:	pop    rdi
  407700:	pop    rbp
  407701:	pop    r12
  407703:	pop    r13
  407705:	pop    r14
  407707:	pop    r15
  407709:	ret    
  40770a:	nop    WORD PTR [rax+rax*1+0x0]
  407710:	cmp    rsi,0x4b
  407714:	jbe    0x4077c0
  40771a:	lea    r12,[rsp+0x40]
  40771f:	lea    r8,[rip+0x22510]        # 0x429c36
  407726:	mov    r9d,r15d
  407729:	mov    edx,0x10
  40772e:	mov    rcx,r12
  407731:	call   0x407540
  407736:	cmp    eax,0xf
  407739:	jg     0x40790c
  40773f:	mov    eax,0x4e
  407744:	xor    edx,edx
  407746:	mov    r9,QWORD PTR [rip+0x2bebb]        # 0x433608
  40774d:	div    r15
  407750:	lea    rcx,[rip+0x224a7]        # 0x429bfe
  407757:	mov    r8d,0x2
  40775d:	mov    edx,0x1
  407762:	add    rbx,0x8
  407766:	mov    r15d,ebp
  407769:	xor    esi,esi
  40776b:	mov    rdi,rax
  40776e:	call   0x422840
  407773:	jmp    0x407788
  407775:	mov    rcx,QWORD PTR [rip+0x2be8c]        # 0x433608
  40777c:	mov    rdx,r12
  40777f:	call   0x407150
  407784:	add    rbx,0x8
  407788:	sub    r15d,0x1
  40778c:	test   r15d,r15d
  40778f:	jle    0x4078f0
  407795:	lea    eax,[rsi+0x1]
  407798:	mov    r8,QWORD PTR [rbx-0x8]
  40779c:	cmp    rax,rdi
  40779f:	mov    rsi,rax
  4077a2:	jne    0x407775
  4077a4:	mov    rcx,QWORD PTR [rip+0x2be5d]        # 0x433608
  4077ab:	lea    rdx,[rip+0x22515]        # 0x429cc7
  4077b2:	xor    esi,esi
  4077b4:	call   0x407150
  4077b9:	jmp    0x407784
  4077bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4077c0:	mov    rdx,QWORD PTR [rip+0x2be41]        # 0x433608
  4077c7:	mov    ecx,0x20
  4077cc:	mov    esi,ebp
  4077ce:	call   0x422870
  4077d3:	mov    rdx,QWORD PTR [rip+0x2be2e]        # 0x433608
  4077da:	mov    ecx,0x20
  4077df:	add    rbx,0x8
  4077e3:	sub    esi,0x1
  4077e6:	call   0x422870
  4077eb:	mov    rcx,QWORD PTR [rbx-0x8]
  4077ef:	mov    rdx,QWORD PTR [rip+0x2be12]        # 0x433608
  4077f6:	call   0x422868
  4077fb:	test   esi,esi
  4077fd:	jg     0x4077d3
  4077ff:	mov    rdx,QWORD PTR [rip+0x2be02]        # 0x433608
  407806:	mov    ecx,0xa
  40780b:	call   0x422870
  407810:	cmp    QWORD PTR [rsp+0xa0],0xf
  407819:	jbe    0x4076c5
  40781f:	mov    eax,DWORD PTR [rsp+0x38]
  407823:	mov    rdx,QWORD PTR [rip+0x1e01e]        # 0x425848
  40782a:	mov    rcx,QWORD PTR [rip+0x2bdd7]        # 0x433608
  407831:	lea    r9d,[rax+rbp*1-0x1]
  407836:	mov    r8d,eax
  407839:	call   0x407150
  40783e:	mov    rcx,QWORD PTR [rsp+0xa0]
  407846:	mov    edx,0x1
  40784b:	call   QWORD PTR [rcx+0x98]
  407851:	mov    eax,DWORD PTR [r13+0x10]
  407855:	and    eax,0xf000
  40785a:	cmp    eax,0x4000
  40785f:	jne    0x4076d9
  407865:	mov    rdx,QWORD PTR [rip+0x1e124]        # 0x425990
  40786c:	mov    rcx,QWORD PTR [rip+0x2bd95]        # 0x433608
  407873:	mov    r8d,ebp
  407876:	call   0x407150
  40787b:	mov    rdx,QWORD PTR [rip+0x2bd86]        # 0x433608
  407882:	mov    rcx,QWORD PTR [rip+0x1e1f7]        # 0x425a80
  407889:	call   0x422868
  40788e:	jmp    0x4076f9
  407893:	mov    rax,QWORD PTR [rcx+0x28]
  407897:	mov    rcx,QWORD PTR [rip+0x2bd6a]        # 0x433608
  40789e:	mov    QWORD PTR [rsp+0x38],rax
  4078a3:	mov    rax,QWORD PTR [rdx+0x50]
  4078a7:	mov    r8,QWORD PTR [rsp+0x38]
  4078ac:	mov    QWORD PTR [rsp+0x20],rax
  4078b1:	mov    r9,QWORD PTR [rdx+0x18]
  4078b5:	mov    rdx,QWORD PTR [rip+0x2bd9c]        # 0x433658
  4078bc:	call   0x407150
  4078c1:	jmp    0x40761b
  4078c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078d0:	mov    rdi,QWORD PTR [rbx+0x8]
  4078d4:	sub    ebp,0x1
  4078d7:	add    rbx,0x8
  4078db:	mov    DWORD PTR [rsp+0x38],0x1
  4078e3:	jmp    0x407646
  4078e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4078f0:	mov    r8,QWORD PTR [rbx-0x8]
  4078f4:	mov    rcx,QWORD PTR [rip+0x2bd0d]        # 0x433608
  4078fb:	lea    rdx,[rip+0x223c1]        # 0x429cc3
  407902:	call   0x407150
  407907:	jmp    0x4076b6
  40790c:	mov    ecx,0x1
  407911:	call   0x407590
  407916:	nop
  407917:	nop    WORD PTR [rax+rax*1+0x0]
  407920:	push   r15
  407922:	push   r14
  407924:	push   r13
  407926:	push   r12
  407928:	push   rbp
  407929:	push   rdi
  40792a:	push   rsi
  40792b:	push   rbx
  40792c:	sub    rsp,0x38
  407930:	mov    ebx,DWORD PTR [rsp+0xa0]
  407937:	mov    rdi,rcx
  40793a:	mov    QWORD PTR [rsp+0x88],rdx
  407942:	mov    QWORD PTR [rsp+0x90],r8
  40794a:	mov    rbp,r9
  40794d:	call   0x4227a8
  407952:	mov    rsi,rax
  407955:	movzx  eax,BYTE PTR [rdi]
  407958:	cmp    al,0x7f
  40795a:	ja     0x4079b9
  40795c:	lea    rdx,[rip+0x24d9d]        # 0x42c700
  407963:	movzx  ecx,al
  407966:	mov    edx,DWORD PTR [rdx+rcx*4]
  407969:	test   edx,0x30000
  40796f:	je     0x4079b0
  407971:	lea    rdx,[rsp+0x28]
  407976:	xor    r8d,r8d
  407979:	mov    rcx,rdi
  40797c:	mov    QWORD PTR [rsp+0x28],rdi
  407981:	call   0x422770
  407986:	cmp    DWORD PTR [rsp+0xa0],eax
  40798d:	jbe    0x40799f
  40798f:	mov    rdx,QWORD PTR [rsp+0x28]
  407994:	mov    eax,eax
  407996:	cmp    BYTE PTR [rdx],0x0
  407999:	je     0x407a54
  40799f:	mov    rax,QWORD PTR [rip+0x1df3a]        # 0x4258e0
  4079a6:	jmp    0x407a19
  4079a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079b0:	and    dh,0x80
  4079b3:	jne    0x407a65
  4079b9:	xor    r14d,r14d
  4079bc:	test   rbx,rbx
  4079bf:	mov    r12,rbx
  4079c2:	mov    r13,0xffffffffffffffff
  4079c9:	je     0x407a77
  4079cf:	nop
  4079d0:	mov    r15,QWORD PTR [rbp+r14*8+0x0]
  4079d5:	mov    r8,rsi
  4079d8:	mov    rdx,rdi
  4079db:	mov    rcx,r15
  4079de:	call   0x4227a0
  4079e3:	test   eax,eax
  4079e5:	jne    0x4079fc
  4079e7:	cmp    BYTE PTR [r15+rsi*1],0x0
  4079ec:	je     0x407a80
  4079f2:	cmp    r12,rbx
  4079f5:	mov    r12,r13
  4079f8:	cmove  r12,r14
  4079fc:	add    r14,0x1
  407a00:	cmp    rbx,r14
  407a03:	jne    0x4079d0
  407a05:	cmp    rbx,r12
  407a08:	mov    rax,r12
  407a0b:	ja     0x407a54
  407a0d:	cmp    r12,rbx
  407a10:	je     0x407a77
  407a12:	mov    rax,QWORD PTR [rip+0x1ddbf]        # 0x4257d8
  407a19:	mov    QWORD PTR [rip+0x2bc38],rax        # 0x433658
  407a20:	call   QWORD PTR [rip+0x2f69e]        # 0x4370c4
  407a26:	mov    r9d,DWORD PTR [rsp+0xa0]
  407a2e:	mov    rdx,QWORD PTR [rsp+0x90]
  407a36:	add    rax,0x60
  407a3a:	mov    rcx,QWORD PTR [rsp+0x88]
  407a42:	mov    r8,rbp
  407a45:	mov    QWORD PTR [rip+0x2bbbc],rax        # 0x433608
  407a4c:	call   0x4075f0
  407a51:	mov    rax,rbx
  407a54:	add    rsp,0x38
  407a58:	pop    rbx
  407a59:	pop    rsi
  407a5a:	pop    rdi
  407a5b:	pop    rbp
  407a5c:	pop    r12
  407a5e:	pop    r13
  407a60:	pop    r14
  407a62:	pop    r15
  407a64:	ret    
  407a65:	cmp    BYTE PTR [rdi+0x2],0x0
  407a69:	jne    0x4079b9
  407a6f:	cmp    al,0x7e
  407a71:	je     0x407a85
  407a73:	cmp    al,0x2d
  407a75:	je     0x407a97
  407a77:	mov    rax,QWORD PTR [rip+0x1de12]        # 0x425890
  407a7e:	jmp    0x407a19
  407a80:	mov    rax,r14
  407a83:	jmp    0x407a54
  407a85:	cmp    BYTE PTR [rdi+0x1],0x30
  407a89:	jne    0x407a77
  407a8b:	mov    eax,DWORD PTR [rsp+0xa0]
  407a92:	sub    eax,0x1
  407a95:	jmp    0x407a54
  407a97:	cmp    BYTE PTR [rdi+0x1],0x31
  407a9b:	jne    0x407a77
  407a9d:	jmp    0x407a8b
  407a9f:	nop
  407aa0:	push   r13
  407aa2:	push   r12
  407aa4:	push   rbp
  407aa5:	push   rdi
  407aa6:	push   rsi
  407aa7:	push   rbx
  407aa8:	sub    rsp,0x48
  407aac:	mov    rbx,QWORD PTR [rip+0x2f661]        # 0x437114
  407ab3:	mov    r12,rdx
  407ab6:	mov    r13,r8
  407ab9:	mov    rsi,rcx
  407abc:	call   rbx
  407abe:	mov    ecx,DWORD PTR [rax]
  407ac0:	call   0x4227b8
  407ac5:	mov    rbp,rax
  407ac8:	call   rbx
  407aca:	mov    rbx,QWORD PTR [rip+0x1dd2f]        # 0x425800
  407ad1:	mov    edi,DWORD PTR [rax]
  407ad3:	call   QWORD PTR [rip+0x2f5eb]        # 0x4370c4
  407ad9:	lea    rcx,[rax+0x60]
  407add:	mov    QWORD PTR [rsp+0x30],r13
  407ae2:	mov    QWORD PTR [rsp+0x28],r12
  407ae7:	mov    QWORD PTR [rsp+0x20],rbp
  407aec:	mov    r9d,edi
  407aef:	mov    r8,rsi
  407af2:	mov    rdx,rbx
  407af5:	call   0x407150
  407afa:	nop
  407afb:	add    rsp,0x48
  407aff:	pop    rbx
  407b00:	pop    rsi
  407b01:	pop    rdi
  407b02:	pop    rbp
  407b03:	pop    r12
  407b05:	pop    r13
  407b07:	ret    
  407b08:	nop    DWORD PTR [rax+rax*1+0x0]
  407b10:	sub    rsp,0x28
  407b14:	call   0x407aa0
  407b19:	mov    ecx,0x1
  407b1e:	call   0x407590
  407b23:	nop
  407b24:	xchg   ax,ax
  407b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b30:	sub    rsp,0x38
  407b34:	mov    QWORD PTR [rsp+0x50],r8
  407b39:	lea    r8,[rsp+0x50]
  407b3e:	mov    QWORD PTR [rsp+0x58],r9
  407b43:	mov    QWORD PTR [rsp+0x28],r8
  407b48:	call   0x41ddb0
  407b4d:	add    rsp,0x38
  407b51:	ret    
  407b52:	nop    DWORD PTR [rax+0x0]
  407b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b60:	push   r12
  407b62:	push   rbp
  407b63:	push   rdi
  407b64:	push   rsi
  407b65:	push   rbx
  407b66:	sub    rsp,0x20
  407b6a:	mov    ebx,edx
  407b6c:	mov    rsi,rcx
  407b6f:	mov    rbp,r8
  407b72:	sub    ebx,0x1
  407b75:	mov    rdi,r9
  407b78:	js     0x407ba2
  407b7a:	nop    WORD PTR [rax+rax*1+0x0]
  407b80:	mov    rdx,rsi
  407b83:	mov    ecx,0x20
  407b88:	sub    ebx,0x1
  407b8b:	call   0x4227f0
  407b90:	mov    rdx,rsi
  407b93:	mov    ecx,0x20
  407b98:	call   0x4227f0
  407b9d:	cmp    ebx,0xffffffff
  407ba0:	jne    0x407b80
  407ba2:	mov    edx,DWORD PTR [rdi]
  407ba4:	cmp    edx,0x6
  407ba7:	ja     0x407da4
  407bad:	lea    rax,[rip+0x20b4c]        # 0x428700
  407bb4:	mov    ecx,edx
  407bb6:	movsxd rcx,DWORD PTR [rax+rcx*4]
  407bba:	add    rax,rcx
  407bbd:	jmp    rax
  407bbf:	nop
  407bc0:	mov    r9d,DWORD PTR [rdi+0x10]
  407bc4:	mov    r8,QWORD PTR [rdi+0x8]
  407bc8:	lea    rdx,[rip+0x223a7]        # 0x429f76
  407bcf:	mov    rcx,rsi
  407bd2:	add    rsp,0x20
  407bd6:	pop    rbx
  407bd7:	pop    rsi
  407bd8:	pop    rdi
  407bd9:	pop    rbp
  407bda:	pop    r12
  407bdc:	jmp    0x407150
  407be1:	mov    rbx,QWORD PTR [rdi+0x10]
  407be5:	mov    rbp,QWORD PTR [rdi+0x8]
  407be9:	test   rbx,rbx
  407bec:	je     0x407e35
  407bf2:	mov    edi,DWORD PTR [rbx]
  407bf4:	mov    r8,rbp
  407bf7:	lea    rdx,[rip+0x220e1]        # 0x429cdf
  407bfe:	test   edi,edi
  407c00:	jle    0x407cd8
  407c06:	lea    rdx,[rip+0x220a4]        # 0x429cb1
  407c0d:	mov    rcx,rsi
  407c10:	add    rbx,0x8
  407c14:	call   0x407150
  407c19:	mov    eax,DWORD PTR [rip+0x1d6a1]        # 0x4252c0
  407c1f:	lea    edx,[rax+0x1]
  407c22:	lea    eax,[rdi-0x1]
  407c25:	mov    DWORD PTR [rip+0x1d695],edx        # 0x4252c0
  407c2b:	lea    rdi,[rbx+rax*8+0x8]
  407c30:	jmp    0x407c38
  407c32:	mov    edx,DWORD PTR [rip+0x1d688]        # 0x4252c0
  407c38:	add    rbx,0x8
  407c3c:	mov    r9,QWORD PTR [rbx-0x8]
  407c40:	xor    r8d,r8d
  407c43:	mov    rcx,rsi
  407c46:	call   0x407b60
  407c4b:	cmp    rbx,rdi
  407c4e:	jne    0x407c32
  407c50:	mov    ebx,DWORD PTR [rip+0x1d66a]        # 0x4252c0
  407c56:	lea    eax,[rbx-0x1]
  407c59:	sub    ebx,0x2
  407c5c:	mov    DWORD PTR [rip+0x1d65e],eax        # 0x4252c0
  407c62:	js     0x407c86
  407c64:	mov    rdx,rsi
  407c67:	mov    ecx,0x20
  407c6c:	sub    ebx,0x1
  407c6f:	call   0x4227f0
  407c74:	mov    rdx,rsi
  407c77:	mov    ecx,0x20
  407c7c:	call   0x4227f0
  407c81:	cmp    ebx,0xffffffff
  407c84:	jne    0x407c64
  407c86:	mov    r8,rbp
  407c89:	lea    rdx,[rip+0x20a66]        # 0x4286f6
  407c90:	jmp    0x407cd8
  407c92:	mov    r12,QWORD PTR [rdi+0x8]
  407c96:	lea    rbp,[rdi+0x10]
  407c9a:	lea    rdx,[rip+0x22059]        # 0x429cfa
  407ca1:	lea    rdi,[rip+0x21498]        # 0x429140
  407ca8:	mov    rcx,rsi
  407cab:	mov    r8,r12
  407cae:	call   0x407150
  407cb3:	movzx  ebx,BYTE PTR [rbp+0x0]
  407cb7:	cmp    ebx,0x26
  407cba:	je     0x407de0
  407cc0:	jg     0x407db4
  407cc6:	test   ebx,ebx
  407cc8:	jne    0x407e20
  407cce:	lea    rdx,[rip+0x21f54]        # 0x429c29
  407cd5:	mov    r8,r12
  407cd8:	mov    rcx,rsi
  407cdb:	add    rsp,0x20
  407cdf:	pop    rbx
  407ce0:	pop    rsi
  407ce1:	pop    rdi
  407ce2:	pop    rbp
  407ce3:	pop    r12
  407ce5:	jmp    0x407150
  407cea:	nop    WORD PTR [rax+rax*1+0x0]
  407cf0:	test   rbp,rbp
  407cf3:	je     0x407bc0
  407cf9:	lea    rax,[rip+0x209dc]        # 0x4286dc
  407d00:	mov    r8,QWORD PTR [rdi+0x8]
  407d04:	lea    r9,[rip+0x209c9]        # 0x4286d4
  407d0b:	cmp    edx,0x2
  407d0e:	lea    rdx,[rip+0x220bf]        # 0x429dd4
  407d15:	mov    rcx,rsi
  407d18:	cmovne r9,rax
  407d1c:	mov    ebx,DWORD PTR [rbp+0x10]
  407d1f:	mov    r12,QWORD PTR [rbp+0x18]
  407d23:	call   0x407150
  407d28:	mov    ecx,0x3
  407d2d:	mov    rdx,rbp
  407d30:	call   QWORD PTR [rbp+0x38]
  407d33:	mov    rcx,QWORD PTR [rbp+0x18]
  407d37:	test   rcx,rcx
  407d3a:	je     0x407d52
  407d3c:	mov    rdx,rsi
  407d3f:	call   0x422868
  407d44:	cmp    DWORD PTR [rdi],0x2
  407d47:	je     0x407d52
  407d49:	mov    rcx,QWORD PTR [rbp+0x18]
  407d4d:	call   0x422858
  407d52:	mov    QWORD PTR [rbp+0x18],r12
  407d56:	mov    DWORD PTR [rbp+0x10],ebx
  407d59:	lea    rdx,[rip+0x21ec9]        # 0x429c29
  407d60:	mov    r8,QWORD PTR [rdi+0x8]
  407d64:	jmp    0x407cd8
  407d69:	nop    DWORD PTR [rax+0x0]
  407d70:	mov    eax,DWORD PTR [rdi+0x10]
  407d73:	lea    r9,[rip+0x20971]        # 0x4286eb
  407d7a:	mov    r8,QWORD PTR [rdi+0x8]
  407d7e:	lea    rdx,[rip+0x2210c]        # 0x429e91
  407d85:	mov    rcx,rsi
  407d88:	test   eax,eax
  407d8a:	lea    rax,[rip+0x2095f]        # 0x4286f0
  407d91:	cmove  r9,rax
  407d95:	add    rsp,0x20
  407d99:	pop    rbx
  407d9a:	pop    rsi
  407d9b:	pop    rdi
  407d9c:	pop    rbp
  407d9d:	pop    r12
  407d9f:	jmp    0x407150
  407da4:	mov    r8,QWORD PTR [rdi+0x8]
  407da8:	lea    rdx,[rip+0x21f30]        # 0x429cdf
  407daf:	jmp    0x407cd8
  407db4:	cmp    ebx,0x3e
  407db7:	je     0x407de0
  407db9:	jg     0x407dd3
  407dbb:	cmp    ebx,0x3c
  407dbe:	je     0x407de0
  407dc0:	mov    rdx,rsi
  407dc3:	mov    ecx,ebx
  407dc5:	call   0x4227f0
  407dca:	add    rbp,0x1
  407dce:	jmp    0x407cb3
  407dd3:	lea    eax,[rbx-0x7f]
  407dd6:	cmp    eax,0x80
  407ddb:	ja     0x407dc0
  407ddd:	nop    DWORD PTR [rax]
  407de0:	mov    rdx,rsi
  407de3:	mov    ecx,0x26
  407de8:	call   0x4227f0
  407ded:	cmp    ebx,0x26
  407df0:	lea    rax,[rip+0x21309]        # 0x429100
  407df7:	je     0x407e27
  407df9:	add    rax,0x10
  407dfd:	cmp    ebx,DWORD PTR [rax]
  407dff:	je     0x407e27
  407e01:	cmp    rax,rdi
  407e04:	jne    0x407df9
  407e06:	lea    rdx,[rip+0x21fdc]        # 0x429de9
  407e0d:	mov    r8d,ebx
  407e10:	mov    rcx,rsi
  407e13:	call   0x407150
  407e18:	jmp    0x407dca
  407e1a:	nop    WORD PTR [rax+rax*1+0x0]
  407e20:	cmp    ebx,0x1f
  407e23:	jg     0x407dc0
  407e25:	jmp    0x407de0
  407e27:	lea    rcx,[rax+0x8]
  407e2b:	mov    rdx,rsi
  407e2e:	call   0x422868
  407e33:	jmp    0x407dca
  407e35:	add    rsp,0x20
  407e39:	pop    rbx
  407e3a:	pop    rsi
  407e3b:	pop    rdi
  407e3c:	pop    rbp
  407e3d:	pop    r12
  407e3f:	ret    
  407e40:	test   BYTE PTR [rdx+0x10],0x8
  407e44:	je     0x407e50
  407e46:	repz ret 
  407e48:	nop    DWORD PTR [rax+rax*1+0x0]
  407e50:	mov    rax,QWORD PTR [rcx+0x98]
  407e57:	xor    edx,edx
  407e59:	rex.W jmp rax
  407e5c:	nop    DWORD PTR [rax+0x0]
  407e60:	mov    rax,QWORD PTR [rip+0x1db61]        # 0x4259c8
  407e67:	lea    r10,[rip+0x21ccb]        # 0x429b39
  407e6e:	lea    r11,[rip+0x21ce1]        # 0x429b56
  407e75:	and    ecx,0x3
  407e78:	cmp    ecx,0x2
  407e7b:	mov    QWORD PTR [rdx],rax
  407e7e:	mov    QWORD PTR [rip+0x2b863],r10        # 0x4336e8
  407e85:	lea    r10,[rip+0x21ca7]        # 0x429b33
  407e8c:	mov    QWORD PTR [rip+0x2b89d],r11        # 0x433730
  407e93:	lea    r11,[rip+0x21ca4]        # 0x429b3e
  407e9a:	lea    rdx,[rip+0x20e40]        # 0x428ce1
  407ea1:	mov    QWORD PTR [rip+0x2b830],r10        # 0x4336d8
  407ea8:	lea    r10,[rip+0x21c95]        # 0x429b44
  407eaf:	mov    rax,QWORD PTR [rip+0x1d8aa]        # 0x425760
  407eb6:	mov    QWORD PTR [rip+0x2b83b],r11        # 0x4336f8
  407ebd:	lea    r11,[rip+0x20e1d]        # 0x428ce1
  407ec4:	mov    QWORD PTR [rip+0x2b7fd],rdx        # 0x4336c8
  407ecb:	mov    QWORD PTR [rip+0x2b82e],r10        # 0x433700
  407ed2:	lea    r10,[rip+0x21c54]        # 0x429b2d
  407ed9:	mov    rdx,QWORD PTR [rip+0x1d878]        # 0x425758
  407ee0:	mov    r8,QWORD PTR [rip+0x1d869]        # 0x425750
  407ee7:	mov    r9,QWORD PTR [rip+0x1d85a]        # 0x425748
  407eee:	mov    QWORD PTR [rip+0x2b813],r11        # 0x433708
  407ef5:	mov    QWORD PTR [rip+0x2b814],r10        # 0x433710
  407efc:	lea    r11,[rip+0x21cea]        # 0x429bed
  407f03:	lea    r10,[rip+0x21cf0]        # 0x429bfa
  407f0a:	mov    QWORD PTR [rip+0x2b7af],rax        # 0x4336c0
  407f11:	mov    QWORD PTR [rip+0x2b7b8],rdx        # 0x4336d0
  407f18:	mov    QWORD PTR [rip+0x2b7c1],r8        # 0x4336e0
  407f1f:	mov    QWORD PTR [rip+0x2b7ca],r9        # 0x4336f0
  407f26:	mov    QWORD PTR [rip+0x2b7eb],r11        # 0x433718
  407f2d:	mov    QWORD PTR [rip+0x2b7ec],r10        # 0x433720
  407f34:	je     0x407f70
  407f36:	cmp    ecx,0x3
  407f39:	je     0x407f54
  407f3b:	cmp    ecx,0x1
  407f3e:	je     0x407f54
  407f40:	lea    rax,[rip+0x21c06]        # 0x429b4d
  407f47:	mov    QWORD PTR [rip+0x2b7da],rax        # 0x433728
  407f4e:	mov    eax,0x16
  407f53:	ret    
  407f54:	lea    rax,[rip+0x21bf0]        # 0x429b4b
  407f5b:	mov    QWORD PTR [rip+0x2b7c6],rax        # 0x433728
  407f62:	mov    eax,0x16
  407f67:	ret    
  407f68:	nop    DWORD PTR [rax+rax*1+0x0]
  407f70:	lea    rcx,[rip+0x21c1d]        # 0x429b94
  407f77:	mov    QWORD PTR [rip+0x2b7aa],rcx        # 0x433728
  407f7e:	mov    BYTE PTR [r9],0x20
  407f82:	mov    BYTE PTR [r8],0x20
  407f86:	mov    BYTE PTR [rdx],0x20
  407f89:	mov    BYTE PTR [rax],0x20
  407f8c:	lea    rax,[rip+0x20789]        # 0x42871c
  407f93:	mov    QWORD PTR [rip+0x2b766],rax        # 0x433700
  407f9a:	mov    eax,0x8
  407f9f:	ret    
  407fa0:	lea    rax,[rip+0x21c1c]        # 0x429bc3
  407fa7:	and    ecx,0x12
  407faa:	mov    QWORD PTR [rip+0x2b70f],rax        # 0x4336c0
  407fb1:	lea    rax,[rip+0x21c07]        # 0x429bbf
  407fb8:	cmp    ecx,0x2
  407fbb:	mov    QWORD PTR [rip+0x2b706],rax        # 0x4336c8
  407fc2:	lea    rax,[rip+0x21bee]        # 0x429bb7
  407fc9:	mov    QWORD PTR [rip+0x2b700],rax        # 0x4336d0
  407fd0:	lea    rax,[rip+0x21bd0]        # 0x429ba7
  407fd7:	mov    QWORD PTR [rip+0x2b702],rax        # 0x4336e0
  407fde:	lea    rax,[rip+0x21bc6]        # 0x429bab
  407fe5:	mov    QWORD PTR [rip+0x2b6fc],rax        # 0x4336e8
  407fec:	lea    rax,[rip+0x21bd4]        # 0x429bc7
  407ff3:	mov    QWORD PTR [rip+0x2b736],rax        # 0x433730
  407ffa:	lea    rax,[rip+0x21ba2]        # 0x429ba3
  408001:	mov    QWORD PTR [rip+0x2b6d0],rax        # 0x4336d8
  408008:	lea    rax,[rip+0x21b88]        # 0x429b97
  40800f:	mov    QWORD PTR [rip+0x2b6da],rax        # 0x4336f0
  408016:	lea    rax,[rip+0x21b92]        # 0x429baf
  40801d:	mov    QWORD PTR [rip+0x2b6d4],rax        # 0x4336f8
  408024:	lea    rax,[rip+0x21b90]        # 0x429bbb
  40802b:	mov    QWORD PTR [rip+0x2b6ce],rax        # 0x433700
  408032:	lea    rax,[rip+0x21b7a]        # 0x429bb3
  408039:	mov    QWORD PTR [rip+0x2b6c8],rax        # 0x433708
  408040:	lea    rax,[rip+0x21b54]        # 0x429b9b
  408047:	mov    QWORD PTR [rip+0x2b6c2],rax        # 0x433710
  40804e:	lea    rax,[rip+0x21b9f]        # 0x429bf4
  408055:	mov    QWORD PTR [rip+0x2b6bc],rax        # 0x433718
  40805c:	lea    rax,[rip+0x21b9b]        # 0x429bfe
  408063:	mov    QWORD PTR [rip+0x2b6b6],rax        # 0x433720
  40806a:	je     0x4080e5
  40806c:	jbe    0x4080c0
  40806e:	cmp    ecx,0x10
  408071:	je     0x4080a0
  408073:	cmp    ecx,0x12
  408076:	jne    0x4080e2
  408078:	mov    rax,QWORD PTR [rip+0x1d949]        # 0x4259c8
  40807f:	mov    QWORD PTR [rdx],rax
  408082:	mov    rax,QWORD PTR [rip+0x1d947]        # 0x4259d0
  408089:	mov    QWORD PTR [rip+0x2b698],rax        # 0x433728
  408090:	mov    eax,0x13
  408095:	ret    
  408096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080a0:	mov    rax,QWORD PTR [rip+0x1d919]        # 0x4259c0
  4080a7:	mov    QWORD PTR [rdx],rax
  4080aa:	mov    rax,QWORD PTR [rip+0x1d91f]        # 0x4259d0
  4080b1:	mov    QWORD PTR [rip+0x2b670],rax        # 0x433728
  4080b8:	mov    eax,0x13
  4080bd:	ret    
  4080be:	xchg   ax,ax
  4080c0:	test   ecx,ecx
  4080c2:	jne    0x4080e2
  4080c4:	mov    rax,QWORD PTR [rip+0x1d9a5]        # 0x425a70
  4080cb:	mov    QWORD PTR [rdx],rax
  4080ce:	lea    rax,[rip+0x21ab1]        # 0x429b86
  4080d5:	mov    QWORD PTR [rip+0x2b64c],rax        # 0x433728
  4080dc:	mov    eax,0x18
  4080e1:	ret    
  4080e2:	xor    eax,eax
  4080e4:	ret    
  4080e5:	mov    rax,QWORD PTR [rip+0x1d98c]        # 0x425a78
  4080ec:	mov    QWORD PTR [rdx],rax
  4080ef:	lea    rax,[rip+0x21a90]        # 0x429b86
  4080f6:	mov    QWORD PTR [rip+0x2b62b],rax        # 0x433728
  4080fd:	mov    eax,0x18
  408102:	ret    
  408103:	nop    DWORD PTR [rax]
  408106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408110:	push   rsi
  408111:	push   rbx
  408112:	sub    rsp,0x38
  408116:	cmp    rcx,0xffffffffffffffff
  40811a:	mov    r9,rdx
  40811d:	je     0x408153
  40811f:	movabs r10,0x7fffffffffffffff
  408129:	movsxd r8,r8d
  40812c:	mov    rax,r10
  40812f:	cqo    
  408131:	idiv   r8
  408134:	cmp    rax,r9
  408137:	jl     0x408180
  408139:	imul   r8,r9
  40813d:	sub    r10,r8
  408140:	cmp    rcx,r10
  408143:	jg     0x408180
  408145:	lea    rsi,[rcx+r8*1]
  408149:	mov    rax,rsi
  40814c:	add    rsp,0x38
  408150:	pop    rbx
  408151:	pop    rsi
  408152:	ret    
  408153:	mov    QWORD PTR [rsp+0x28],rcx
  408158:	mov    rbx,QWORD PTR [rip+0x2efb5]        # 0x437114
  40815f:	call   rbx
  408161:	mov    eax,DWORD PTR [rax]
  408163:	mov    rcx,QWORD PTR [rsp+0x28]
  408168:	test   eax,eax
  40816a:	mov    rsi,rcx
  40816d:	jne    0x408149
  40816f:	call   rbx
  408171:	mov    DWORD PTR [rax],0x16
  408177:	jmp    0x408149
  408179:	nop    DWORD PTR [rax+0x0]
  408180:	call   QWORD PTR [rip+0x2ef8e]        # 0x437114
  408186:	mov    rsi,0xffffffffffffffff
  40818d:	mov    DWORD PTR [rax],0x22
  408193:	jmp    0x408149
  408195:	nop
  408196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081a0:	push   r15
  4081a2:	push   r14
  4081a4:	push   r13
  4081a6:	push   r12
  4081a8:	push   rbp
  4081a9:	push   rdi
  4081aa:	push   rsi
  4081ab:	push   rbx
  4081ac:	sub    rsp,0x48
  4081b0:	mov    rax,QWORD PTR [rdx]
  4081b3:	cmp    rcx,0xffffffffffffffff
  4081b7:	mov    QWORD PTR [rsp+0x38],rax
  4081bc:	je     0x408249
  4081c2:	mov    r13d,r9d
  4081c5:	mov    r12,r8
  4081c8:	mov    rbp,rdx
  4081cb:	mov    QWORD PTR [rsp+0x28],rcx
  4081d0:	mov    r15,QWORD PTR [rip+0x2ef3d]        # 0x437114
  4081d7:	call   r15
  4081da:	mov    rcx,QWORD PTR [rsp+0x38]
  4081df:	lea    rdx,[rsp+0x38]
  4081e4:	mov    r8d,0xa
  4081ea:	mov    DWORD PTR [rax],0x0
  4081f0:	call   0x422770
  4081f5:	mov    r14d,eax
  4081f8:	call   r15
  4081fb:	mov    eax,DWORD PTR [rax]
  4081fd:	test   eax,eax
  4081ff:	jne    0x408249
  408201:	mov    rdi,QWORD PTR [rsp+0x38]
  408206:	mov    rsi,QWORD PTR [rip+0x2f02f]        # 0x43723c
  40820d:	jmp    0x408215
  40820f:	nop
  408210:	mov    QWORD PTR [rsp+0x38],rdi
  408215:	movzx  ecx,BYTE PTR [rdi]
  408218:	mov    rbx,rdi
  40821b:	add    rdi,0x1
  40821f:	call   rsi
  408221:	test   eax,eax
  408223:	jne    0x408210
  408225:	cmp    r12,rbx
  408228:	jne    0x408240
  40822a:	mov    rcx,QWORD PTR [rsp+0x28]
  40822f:	mov    QWORD PTR [rbp+0x0],r12
  408233:	mov    r8d,r13d
  408236:	mov    rdx,r14
  408239:	call   0x408110
  40823e:	jmp    0x408250
  408240:	call   r15
  408243:	mov    DWORD PTR [rax],0x16
  408249:	mov    rax,0xffffffffffffffff
  408250:	add    rsp,0x48
  408254:	pop    rbx
  408255:	pop    rsi
  408256:	pop    rdi
  408257:	pop    rbp
  408258:	pop    r12
  40825a:	pop    r13
  40825c:	pop    r14
  40825e:	pop    r15
  408260:	ret    
  408261:	nop    DWORD PTR [rax+rax*1+0x0]
  408266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408270:	push   rbp
  408271:	push   rdi
  408272:	push   rsi
  408273:	push   rbx
  408274:	sub    rsp,0x38
  408278:	mov    edx,0x3a
  40827d:	mov    rbx,rcx
  408280:	call   0x4227d0
  408285:	test   rax,rax
  408288:	je     0x408320
  40828e:	lea    rsi,[rsp+0x20]
  408293:	mov    r8,rax
  408296:	xor    ecx,ecx
  408298:	mov    r9d,0xe10
  40829e:	mov    QWORD PTR [rsp+0x20],rbx
  4082a3:	mov    rdx,rsi
  4082a6:	call   0x4081a0
  4082ab:	mov    rbx,rax
  4082ae:	mov    rax,QWORD PTR [rsp+0x20]
  4082b3:	mov    edx,0x3a
  4082b8:	lea    rcx,[rax+0x1]
  4082bc:	mov    QWORD PTR [rsp+0x20],rcx
  4082c1:	call   0x4227d0
  4082c6:	test   rax,rax
  4082c9:	mov    r8,rax
  4082cc:	je     0x40840f
  4082d2:	mov    r9d,0x3c
  4082d8:	mov    rdx,rsi
  4082db:	mov    rcx,rbx
  4082de:	call   0x4081a0
  4082e3:	mov    rdi,rax
  4082e6:	mov    rax,QWORD PTR [rsp+0x20]
  4082eb:	lea    rbx,[rax+0x1]
  4082ef:	mov    rcx,rbx
  4082f2:	mov    QWORD PTR [rsp+0x20],rbx
  4082f7:	call   0x4227a8
  4082fc:	lea    r8,[rbx+rax*1]
  408300:	mov    r9d,0x1
  408306:	mov    rdx,rsi
  408309:	mov    rcx,rdi
  40830c:	call   0x4081a0
  408311:	mov    rbp,rax
  408314:	mov    rax,rbp
  408317:	add    rsp,0x38
  40831b:	pop    rbx
  40831c:	pop    rsi
  40831d:	pop    rdi
  40831e:	pop    rbp
  40831f:	ret    
  408320:	lea    rdx,[rip+0x203fc]        # 0x428723
  408327:	mov    rcx,rbx
  40832a:	call   0x422790
  40832f:	test   rax,rax
  408332:	je     0x408430
  408338:	mov    edx,0x48
  40833d:	mov    rcx,rbx
  408340:	mov    QWORD PTR [rsp+0x28],rbx
  408345:	xor    ebp,ebp
  408347:	call   0x4227d0
  40834c:	test   rax,rax
  40834f:	je     0x408377
  408351:	lea    rdx,[rsp+0x28]
  408356:	mov    r9d,0xe10
  40835c:	mov    r8,rax
  40835f:	xor    ecx,ecx
  408361:	call   0x4081a0
  408366:	mov    rbp,rax
  408369:	mov    rax,QWORD PTR [rsp+0x28]
  40836e:	lea    rbx,[rax+0x1]
  408372:	mov    QWORD PTR [rsp+0x28],rbx
  408377:	mov    edx,0x4d
  40837c:	mov    rcx,rbx
  40837f:	call   0x4227d0
  408384:	test   rax,rax
  408387:	je     0x4083b0
  408389:	lea    rdx,[rsp+0x28]
  40838e:	mov    rcx,rbp
  408391:	mov    r9d,0x3c
  408397:	mov    r8,rax
  40839a:	call   0x4081a0
  40839f:	mov    rbp,rax
  4083a2:	mov    rax,QWORD PTR [rsp+0x28]
  4083a7:	lea    rbx,[rax+0x1]
  4083ab:	mov    QWORD PTR [rsp+0x28],rbx
  4083b0:	mov    edx,0x53
  4083b5:	mov    rcx,rbx
  4083b8:	call   0x4227d0
  4083bd:	test   rax,rax
  4083c0:	je     0x4083e9
  4083c2:	lea    rdx,[rsp+0x28]
  4083c7:	mov    rcx,rbp
  4083ca:	mov    r9d,0x1
  4083d0:	mov    r8,rax
  4083d3:	call   0x4081a0
  4083d8:	mov    rbp,rax
  4083db:	mov    rax,QWORD PTR [rsp+0x28]
  4083e0:	lea    rbx,[rax+0x1]
  4083e4:	mov    QWORD PTR [rsp+0x28],rbx
  4083e9:	mov    rdi,QWORD PTR [rip+0x2ee4c]        # 0x43723c
  4083f0:	jmp    0x4083f7
  4083f2:	mov    QWORD PTR [rsp+0x28],rbx
  4083f7:	movzx  ecx,BYTE PTR [rbx]
  4083fa:	add    rbx,0x1
  4083fe:	mov    esi,ecx
  408400:	call   rdi
  408402:	test   eax,eax
  408404:	jne    0x4083f2
  408406:	test   sil,sil
  408409:	je     0x408314
  40840f:	call   QWORD PTR [rip+0x2ecff]        # 0x437114
  408415:	mov    rbp,0xffffffffffffffff
  40841c:	mov    DWORD PTR [rax],0x16
  408422:	jmp    0x408314
  408427:	nop    WORD PTR [rax+rax*1+0x0]
  408430:	mov    rcx,rbx
  408433:	call   0x4227a8
  408438:	cmp    rax,0x6
  40843c:	jne    0x40840f
  40843e:	movzx  eax,WORD PTR [rbx]
  408441:	lea    rbp,[rsp+0x22]
  408446:	lea    rdi,[rsp+0x28]
  40844b:	lea    rsi,[rsp+0x20]
  408450:	mov    r9d,0xe10
  408456:	xor    ecx,ecx
  408458:	mov    r8,rbp
  40845b:	mov    rdx,rdi
  40845e:	mov    BYTE PTR [rsp+0x22],0x0
  408463:	mov    QWORD PTR [rsp+0x28],rsi
  408468:	mov    WORD PTR [rsp+0x20],ax
  40846d:	call   0x4081a0
  408472:	movzx  edx,WORD PTR [rbx+0x2]
  408476:	mov    r8,rbp
  408479:	mov    r9d,0x3c
  40847f:	mov    rcx,rax
  408482:	mov    BYTE PTR [rsp+0x22],0x0
  408487:	mov    QWORD PTR [rsp+0x28],rsi
  40848c:	mov    WORD PTR [rsp+0x20],dx
  408491:	mov    rdx,rdi
  408494:	call   0x4081a0
  408499:	movzx  edx,WORD PTR [rbx+0x4]
  40849d:	mov    r8,rbp
  4084a0:	mov    r9d,0x1
  4084a6:	mov    rcx,rax
  4084a9:	mov    BYTE PTR [rsp+0x22],0x0
  4084ae:	mov    QWORD PTR [rsp+0x28],rsi
  4084b3:	mov    WORD PTR [rsp+0x20],dx
  4084b8:	mov    rdx,rdi
  4084bb:	call   0x4081a0
  4084c0:	mov    rbp,rax
  4084c3:	jmp    0x408314
  4084c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4084d0:	push   r13
  4084d2:	push   r12
  4084d4:	push   rbp
  4084d5:	push   rdi
  4084d6:	push   rsi
  4084d7:	push   rbx
  4084d8:	sub    rsp,0x38
  4084dc:	mov    r12,QWORD PTR [rip+0x1d47d]        # 0x425960
  4084e3:	mov    r13,QWORD PTR [rcx+0x28]
  4084e7:	lea    rsi,[rip+0x23021]        # 0x42b50f
  4084ee:	cmp    WORD PTR [rdx+0x8],0x8000
  4084f4:	mov    rdi,rdx
  4084f7:	mov    rbx,rcx
  4084fa:	cmovne rsi,QWORD PTR [rip+0x1d326]        # 0x425828
  408502:	mov    rbp,QWORD PTR [rip+0x2ebbb]        # 0x4370c4
  408509:	call   rbp
  40850b:	lea    rcx,[rax+0x60]
  40850f:	mov    rdx,r12
  408512:	mov    r8,r13
  408515:	call   0x407150
  40851a:	movzx  r12d,WORD PTR [rdi+0xc]
  40851f:	cmp    r12w,0x1
  408524:	jbe    0x408570
  408526:	mov    r13,QWORD PTR [rdi+0x50]
  40852a:	mov    rdi,QWORD PTR [rip+0x1d2c7]        # 0x4257f8
  408531:	call   rbp
  408533:	lea    rcx,[rax+0x60]
  408537:	mov    QWORD PTR [rsp+0x20],rsi
  40853c:	movzx  r8d,r12w
  408540:	mov    r9,r13
  408543:	mov    rdx,rdi
  408546:	call   0x407150
  40854b:	mov    edx,0x1
  408550:	mov    rcx,rbx
  408553:	call   QWORD PTR [rbx+0x98]
  408559:	add    rsp,0x38
  40855d:	pop    rbx
  40855e:	pop    rsi
  40855f:	pop    rdi
  408560:	pop    rbp
  408561:	pop    r12
  408563:	pop    r13
  408565:	ret    
  408566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408570:	mov    r12,QWORD PTR [rdi+0x50]
  408574:	mov    rdi,QWORD PTR [rip+0x1d375]        # 0x4258f0
  40857b:	call   rbp
  40857d:	lea    rcx,[rax+0x60]
  408581:	mov    r9,rsi
  408584:	mov    r8,r12
  408587:	mov    rdx,rdi
  40858a:	call   0x407150
  40858f:	jmp    0x40854b
  408591:	nop    DWORD PTR [rax+rax*1+0x0]
  408596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085a0:	push   rbp
  4085a1:	push   rdi
  4085a2:	push   rsi
  4085a3:	push   rbx
  4085a4:	sub    rsp,0x48
  4085a8:	mov    rbx,QWORD PTR [rdx]
  4085ab:	mov    rsi,rcx
  4085ae:	mov    r8d,DWORD PTR [rbx+0x10]
  4085b2:	mov    rdi,QWORD PTR [rbx+0x38]
  4085b6:	test   r8b,0x40
  4085ba:	jne    0x4086c0
  4085c0:	mov    rcx,QWORD PTR [rdx+0x8]
  4085c4:	mov    QWORD PTR [rbx+0x18],rcx
  4085c8:	test   BYTE PTR [rsi+0x12],0x8
  4085cc:	je     0x4085e0
  4085ce:	test   r8d,0x100
  4085d5:	mov    ebp,0x1
  4085da:	jne    0x408680
  4085e0:	movzx  eax,WORD PTR [rbx+0x8]
  4085e4:	cmp    ax,0x8000
  4085e8:	je     0x4086e0
  4085ee:	lea    r10,[rax+rax*2]
  4085f2:	mov    r9,QWORD PTR [rsi+0x78]
  4085f6:	and    r8d,0x4
  4085fa:	lea    rax,[rax+r10*4]
  4085fe:	lea    r10,[r9+rax*8]
  408602:	jne    0x408690
  408608:	mov    eax,0xffff8000
  40860d:	mov    WORD PTR [r10+0x4],ax
  408612:	movzx  eax,WORD PTR [rbx]
  408615:	cmp    ax,0x8000
  408619:	je     0x40869a
  40861b:	movzx  r8d,WORD PTR [rbx+0x2]
  408620:	mov    WORD PTR [r10+0x4],ax
  408625:	mov    eax,DWORD PTR [rdx+0x10]
  408628:	or     eax,0x10
  40862b:	mov    WORD PTR [r10+0x6],r8w
  408630:	mov    DWORD PTR [rdx+0x10],eax
  408633:	mov    r8d,DWORD PTR [r10+0x10]
  408637:	mov    QWORD PTR [r10+0x18],rcx
  40863b:	and    eax,0xf00000ff
  408640:	and    r8d,0xfffff00
  408647:	or     r8d,eax
  40864a:	mov    DWORD PTR [r10+0x10],r8d
  40864e:	and    r8d,0x4
  408652:	je     0x4086a0
  408654:	movzx  eax,WORD PTR [r10+0xe]
  408659:	add    eax,0x1
  40865c:	cmp    ax,WORD PTR [r10+0xc]
  408661:	mov    WORD PTR [r10+0xe],ax
  408666:	jbe    0x4086a0
  408668:	test   BYTE PTR [rsi+0x10],0x4
  40866c:	mov    ebp,0xffffffff
  408671:	je     0x408680
  408673:	mov    rdx,r10
  408676:	mov    rcx,rsi
  408679:	call   0x4084d0
  40867e:	xchg   ax,ax
  408680:	mov    eax,ebp
  408682:	add    rsp,0x48
  408686:	pop    rbx
  408687:	pop    rsi
  408688:	pop    rdi
  408689:	pop    rbp
  40868a:	ret    
  40868b:	nop    DWORD PTR [rax+rax*1+0x0]
  408690:	movzx  eax,WORD PTR [r10+0x4]
  408695:	cmp    ax,WORD PTR [rbx]
  408698:	jne    0x408700
  40869a:	mov    eax,DWORD PTR [rdx+0x10]
  40869d:	jmp    0x408633
  40869f:	nop
  4086a0:	xor    ebp,ebp
  4086a2:	test   rdi,rdi
  4086a5:	je     0x408680
  4086a7:	mov    rdx,r10
  4086aa:	mov    rcx,rsi
  4086ad:	call   rdi
  4086af:	mov    eax,ebp
  4086b1:	add    rsp,0x48
  4086b5:	pop    rbx
  4086b6:	pop    rsi
  4086b7:	pop    rdi
  4086b8:	pop    rbp
  4086b9:	ret    
  4086ba:	nop    WORD PTR [rax+rax*1+0x0]
  4086c0:	mov    rcx,QWORD PTR [rbx+0x18]
  4086c4:	mov    QWORD PTR [rsp+0x38],rdx
  4086c9:	call   0x422858
  4086ce:	mov    r8d,DWORD PTR [rbx+0x10]
  4086d2:	mov    rdx,QWORD PTR [rsp+0x38]
  4086d7:	jmp    0x4085c0
  4086dc:	nop    DWORD PTR [rax+0x0]
  4086e0:	movzx  eax,WORD PTR [rbx+0x2]
  4086e4:	mov    r10,rbx
  4086e7:	mov    WORD PTR [rbx+0x6],ax
  4086eb:	movzx  eax,WORD PTR [rbx]
  4086ee:	mov    WORD PTR [rbx+0x4],ax
  4086f2:	mov    eax,DWORD PTR [rdx+0x10]
  4086f5:	jmp    0x40863b
  4086fa:	nop    WORD PTR [rax+rax*1+0x0]
  408700:	lea    rdx,[rax+rax*2]
  408704:	mov    rdi,QWORD PTR [rbx+0x50]
  408708:	mov    rsi,QWORD PTR [r10+0x50]
  40870c:	mov    rbx,QWORD PTR [rip+0x1d155]        # 0x425868
  408713:	lea    rax,[rax+rdx*4]
  408717:	mov    rbp,QWORD PTR [r9+rax*8+0x50]
  40871c:	call   QWORD PTR [rip+0x2e9a2]        # 0x4370c4
  408722:	lea    rcx,[rax+0x60]
  408726:	mov    r9,rdi
  408729:	mov    r8,rsi
  40872c:	mov    QWORD PTR [rsp+0x20],rbp
  408731:	mov    rdx,rbx
  408734:	mov    ebp,0xffffffff
  408739:	call   0x407150
  40873e:	jmp    0x408680
  408743:	nop    DWORD PTR [rax]
  408746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408750:	push   r13
  408752:	push   r12
  408754:	push   rbp
  408755:	push   rdi
  408756:	push   rsi
  408757:	push   rbx
  408758:	sub    rsp,0x38
  40875c:	mov    rsi,rcx
  40875f:	mov    rcx,QWORD PTR [rcx+0x78]
  408763:	mov    eax,DWORD PTR [rsi+0xb0]
  408769:	mov    rbx,rcx
  40876c:	movzx  r10d,WORD PTR [rbx+0x2]
  408771:	cmp    r10d,edx
  408774:	je     0x4087c0
  408776:	sub    eax,0x1
  408779:	add    rbx,0x68
  40877d:	test   eax,eax
  40877f:	jg     0x40876c
  408781:	movzx  eax,dl
  408784:	cmp    eax,0x7f
  408787:	ja     0x4087a0
  408789:	lea    r10,[rip+0x23f70]        # 0x42c700
  408790:	test   DWORD PTR [r10+rax*4],0x30000
  408798:	jne    0x408859
  40879e:	xchg   ax,ax
  4087a0:	test   BYTE PTR [rsi+0x10],0x4
  4087a4:	jne    0x40888c
  4087aa:	mov    eax,0xffffffff
  4087af:	add    rsp,0x38
  4087b3:	pop    rbx
  4087b4:	pop    rsi
  4087b5:	pop    rdi
  4087b6:	pop    rbp
  4087b7:	pop    r12
  4087b9:	pop    r13
  4087bb:	ret    
  4087bc:	nop    DWORD PTR [rax+0x0]
  4087c0:	mov    eax,DWORD PTR [rbx+0x10]
  4087c3:	test   eax,0x280000
  4087c8:	je     0x408840
  4087ca:	cmp    eax,0x80100
  4087cf:	jne    0x4087a0
  4087d1:	mov    r13,QWORD PTR [rbx+0x50]
  4087d5:	test   r13,r13
  4087d8:	je     0x4087a0
  4087da:	test   BYTE PTR [rsi+0x10],0x4
  4087de:	je     0x4087aa
  4087e0:	mov    r12,QWORD PTR [rsi+0x20]
  4087e4:	mov    rbp,QWORD PTR [rip+0x1d035]        # 0x425820
  4087eb:	mov    rdi,QWORD PTR [rip+0x2e8d2]        # 0x4370c4
  4087f2:	call   rdi
  4087f4:	lea    rcx,[rax+0x60]
  4087f8:	mov    r9,r13
  4087fb:	mov    r8,r12
  4087fe:	mov    rdx,rbp
  408801:	call   0x407150
  408806:	mov    rbx,QWORD PTR [rbx+0x40]
  40880a:	test   rbx,rbx
  40880d:	je     0x408824
  40880f:	call   rdi
  408811:	lea    rdx,[rip+0x21541]        # 0x429d59
  408818:	lea    rcx,[rax+0x60]
  40881c:	mov    r8,rbx
  40881f:	call   0x407150
  408824:	call   rdi
  408826:	lea    rdx,[rax+0x60]
  40882a:	mov    ecx,0xa
  40882f:	call   0x422870
  408834:	jmp    0x4088b7
  408839:	nop    DWORD PTR [rax+0x0]
  408840:	xor    eax,eax
  408842:	mov    QWORD PTR [r8],rbx
  408845:	mov    DWORD PTR [r9],0x1
  40884c:	add    rsp,0x38
  408850:	pop    rbx
  408851:	pop    rsi
  408852:	pop    rdi
  408853:	pop    rbp
  408854:	pop    r12
  408856:	pop    r13
  408858:	ret    
  408859:	movzx  eax,WORD PTR [rsi+0xac]
  408860:	cmp    ax,0x8000
  408864:	je     0x4087a0
  40886a:	lea    rdx,[rax+rax*2]
  40886e:	lea    rax,[rax+rdx*4]
  408872:	lea    rax,[rcx+rax*8]
  408876:	mov    QWORD PTR [r8],rax
  408879:	xor    eax,eax
  40887b:	sub    QWORD PTR [rsi+0x18],0x1
  408880:	mov    DWORD PTR [r9],0x1
  408887:	jmp    0x4087af
  40888c:	mov    DWORD PTR [rsp+0x2c],edx
  408890:	mov    rdi,QWORD PTR [rsi+0x20]
  408894:	mov    rbx,QWORD PTR [rip+0x1cf95]        # 0x425830
  40889b:	call   QWORD PTR [rip+0x2e823]        # 0x4370c4
  4088a1:	mov    edx,DWORD PTR [rsp+0x2c]
  4088a5:	lea    rcx,[rax+0x60]
  4088a9:	mov    r8,rdi
  4088ac:	mov    r9d,edx
  4088af:	mov    rdx,rbx
  4088b2:	call   0x407150
  4088b7:	mov    rcx,rsi
  4088ba:	mov    edx,0x1
  4088bf:	call   QWORD PTR [rsi+0x98]
  4088c5:	mov    ecx,0x1
  4088ca:	call   0x422948
  4088cf:	nop
  4088d0:	push   rdi
  4088d1:	push   rsi
  4088d2:	push   rbx
  4088d3:	sub    rsp,0x20
  4088d7:	test   rcx,rcx
  4088da:	je     0x4088e1
  4088dc:	cmp    BYTE PTR [rcx],0x0
  4088df:	jne    0x408910
  4088e1:	call   QWORD PTR [rip+0x2e7dd]        # 0x4370c4
  4088e7:	lea    rcx,[rip+0x21327]        # 0x429c15
  4088ee:	lea    r9,[rax+0x30]
  4088f2:	mov    r8d,0x2
  4088f8:	mov    edx,0x1
  4088fd:	add    rsp,0x20
  408901:	pop    rbx
  408902:	pop    rsi
  408903:	pop    rdi
  408904:	jmp    0x422840
  408909:	nop    DWORD PTR [rax+0x0]
  408910:	call   0x4073a0
  408915:	cmp    BYTE PTR [rax],0x0
  408918:	mov    rbx,rax
  40891b:	jne    0x408925
  40891d:	add    rsp,0x20
  408921:	pop    rbx
  408922:	pop    rsi
  408923:	pop    rdi
  408924:	ret    
  408925:	mov    rdi,QWORD PTR [rip+0x2e798]        # 0x4370c4
  40892c:	jmp    0x40896a
  40892e:	xchg   ax,ax
  408930:	call   rdi
  408932:	mov    rdx,rsi
  408935:	lea    r9,[rax+0x30]
  408939:	mov    r8d,0x1
  40893f:	sub    rdx,rbx
  408942:	mov    rcx,rbx
  408945:	call   0x422840
  40894a:	call   rdi
  40894c:	lea    rdx,[rax+0x30]
  408950:	mov    ecx,0x27
  408955:	call   0x422870
  40895a:	mov    rcx,rsi
  40895d:	call   0x4073a0
  408962:	cmp    BYTE PTR [rax],0x0
  408965:	mov    rbx,rax
  408968:	je     0x40891d
  40896a:	call   rdi
  40896c:	lea    rdx,[rax+0x30]
  408970:	mov    ecx,0x27
  408975:	call   0x422870
  40897a:	mov    edx,0x27
  40897f:	mov    rcx,rbx
  408982:	call   0x4227d0
  408987:	test   rax,rax
  40898a:	mov    rsi,rax
  40898d:	jne    0x408930
  40898f:	call   rdi
  408991:	lea    rdx,[rax+0x30]
  408995:	mov    rcx,rbx
  408998:	call   0x422868
  40899d:	call   rdi
  40899f:	lea    rdx,[rax+0x30]
  4089a3:	mov    ecx,0x27
  4089a8:	add    rsp,0x20
  4089ac:	pop    rbx
  4089ad:	pop    rsi
  4089ae:	pop    rdi
  4089af:	jmp    0x422870
  4089b4:	xchg   ax,ax
  4089b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089c0:	push   rsi
  4089c1:	push   rbx
  4089c2:	sub    rsp,0x28
  4089c6:	mov    eax,DWORD PTR [rcx]
  4089c8:	test   al,0x2
  4089ca:	je     0x408a41
  4089cc:	mov    rbx,rcx
  4089cf:	movzx  ecx,WORD PTR [rdx]
  4089d2:	mov    rsi,r8
  4089d5:	movzx  edx,cl
  4089d8:	cmp    dl,0x7f
  4089db:	ja     0x408a20
  4089dd:	lea    r9,[rip+0x23d1c]        # 0x42c700
  4089e4:	test   BYTE PTR [r9+rdx*4+0x1],0x40
  4089ea:	je     0x408a20
  4089ec:	movzx  r8d,cx
  4089f0:	mov    rcx,QWORD PTR [rip+0x2ac11]        # 0x433608
  4089f7:	lea    rdx,[rip+0x1fd2c]        # 0x42872a
  4089fe:	call   0x407150
  408a03:	mov    eax,DWORD PTR [rbx]
  408a05:	and    eax,0x1001
  408a0a:	cmp    eax,0x1001
  408a0f:	je     0x408a73
  408a11:	add    rsp,0x28
  408a15:	pop    rbx
  408a16:	pop    rsi
  408a17:	ret    
  408a18:	nop    DWORD PTR [rax+rax*1+0x0]
  408a20:	and    eax,0x1001
  408a25:	cmp    eax,0x1001
  408a2a:	je     0x408a60
  408a2c:	mov    rdx,QWORD PTR [rip+0x2abd5]        # 0x433608
  408a33:	mov    rcx,QWORD PTR [rsi]
  408a36:	add    rsp,0x28
  408a3a:	pop    rbx
  408a3b:	pop    rsi
  408a3c:	jmp    0x422868
  408a41:	mov    rdx,QWORD PTR [rip+0x2abc0]        # 0x433608
  408a48:	mov    rcx,QWORD PTR [r9]
  408a4b:	add    rsp,0x28
  408a4f:	pop    rbx
  408a50:	pop    rsi
  408a51:	jmp    0x422868
  408a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a60:	mov    rdx,QWORD PTR [rip+0x2aba1]        # 0x433608
  408a67:	mov    ecx,0x20
  408a6c:	call   0x422870
  408a71:	jmp    0x408a2c
  408a73:	mov    r9,QWORD PTR [rip+0x2ab8e]        # 0x433608
  408a7a:	lea    rcx,[rip+0x1fca6]        # 0x428727
  408a81:	mov    r8d,0x2
  408a87:	mov    edx,0x1
  408a8c:	add    rsp,0x28
  408a90:	pop    rbx
  408a91:	pop    rsi
  408a92:	jmp    0x422840
  408a97:	nop    WORD PTR [rax+rax*1+0x0]
  408aa0:	push   rdi
  408aa1:	push   rsi
  408aa2:	push   rbx
  408aa3:	sub    rsp,0x20
  408aa7:	lea    rax,[rip+0x23b92]        # 0x42c640
  408aae:	mov    esi,ecx
  408ab0:	mov    ecx,0x100
  408ab5:	mov    ebx,DWORD PTR [rax+rsi*4]
  408ab8:	call   0x422820
  408abd:	test   rax,rax
  408ac0:	mov    r8,rax
  408ac3:	je     0x408b0b
  408ac5:	mov    ecx,0x20
  408aca:	xor    eax,eax
  408acc:	mov    rdi,r8
  408acf:	rep stos QWORD PTR es:[rdi],rax
  408ad2:	lea    rcx,[rip+0x23c2b]        # 0x42c704
  408ad9:	xor    edx,edx
  408adb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ae0:	test   DWORD PTR [rcx+rdx*4],ebx
  408ae3:	je     0x408aeb
  408ae5:	mov    BYTE PTR [r8+rdx*1+0x1],0x1
  408aeb:	add    rdx,0x1
  408aef:	cmp    rdx,0x7f
  408af3:	jne    0x408ae0
  408af5:	lea    rax,[rip+0x2ac44]        # 0x433740
  408afc:	mov    QWORD PTR [rax+rsi*8],r8
  408b00:	mov    rax,r8
  408b03:	add    rsp,0x20
  408b07:	pop    rbx
  408b08:	pop    rsi
  408b09:	pop    rdi
  408b0a:	ret    
  408b0b:	call   QWORD PTR [rip+0x2e5b3]        # 0x4370c4
  408b11:	lea    rcx,[rip+0x1fc20]        # 0x428738
  408b18:	lea    r9,[rax+0x60]
  408b1c:	mov    r8d,0x23
  408b22:	mov    edx,0x1
  408b27:	call   0x422840
  408b2c:	mov    ecx,0x1
  408b31:	call   0x4228a0
  408b36:	nop
  408b37:	nop    WORD PTR [rax+rax*1+0x0]
  408b40:	push   rdi
  408b41:	push   rsi
  408b42:	push   rbx
  408b43:	sub    rsp,0x20
  408b47:	mov    r8,QWORD PTR [rdx]
  408b4a:	mov    eax,DWORD PTR [r8+0x10]
  408b4e:	and    eax,0xfffff00
  408b53:	or     eax,DWORD PTR [rdx+0x10]
  408b56:	test   al,0x20
  408b58:	mov    DWORD PTR [rdx+0x10],eax
  408b5b:	jne    0x408bc0
  408b5d:	test   ah,0xf0
  408b60:	je     0x408bc0
  408b62:	test   eax,0x10000
  408b67:	mov    eax,DWORD PTR [rdx+0x14]
  408b6a:	jne    0x408c14
  408b70:	cmp    eax,0x1
  408b73:	je     0x408bf2
  408b75:	cmp    eax,0x2
  408b78:	jne    0x408b85
  408b7a:	cmp    QWORD PTR [rdx+0x8],0x0
  408b7f:	je     0x408cd4
  408b85:	mov    eax,DWORD PTR [rcx+0x14]
  408b88:	cmp    eax,DWORD PTR [rcx+0x4]
  408b8b:	jbe    0x408bd1
  408b8d:	mov    rdi,QWORD PTR [r8+0x50]
  408b91:	mov    rsi,QWORD PTR [rcx+0x20]
  408b95:	mov    rbx,QWORD PTR [rip+0x1ccc4]        # 0x425860
  408b9c:	nop    DWORD PTR [rax+0x0]
  408ba0:	call   QWORD PTR [rip+0x2e51e]        # 0x4370c4
  408ba6:	lea    rcx,[rax+0x60]
  408baa:	mov    r9,rdi
  408bad:	mov    r8,rsi
  408bb0:	mov    rdx,rbx
  408bb3:	call   0x407150
  408bb8:	mov    eax,0xffffffff
  408bbd:	jmp    0x408bdb
  408bbf:	nop
  408bc0:	cmp    DWORD PTR [rdx+0x14],0x1
  408bc4:	je     0x408be3
  408bc6:	cmp    QWORD PTR [rdx+0x8],0x0
  408bcb:	jne    0x408cc0
  408bd1:	mov    QWORD PTR [rcx+0x18],0x0
  408bd9:	xor    eax,eax
  408bdb:	add    rsp,0x20
  408bdf:	pop    rbx
  408be0:	pop    rsi
  408be1:	pop    rdi
  408be2:	ret    
  408be3:	add    QWORD PTR [rcx+0x18],0x1
  408be8:	xor    eax,eax
  408bea:	add    rsp,0x20
  408bee:	pop    rbx
  408bef:	pop    rsi
  408bf0:	pop    rdi
  408bf1:	ret    
  408bf2:	mov    rax,QWORD PTR [rcx+0x18]
  408bf6:	lea    r9,[rax+0x1]
  408bfa:	mov    QWORD PTR [rcx+0x18],r9
  408bfe:	cmp    BYTE PTR [rax+0x1],0x0
  408c02:	je     0x408ca0
  408c08:	mov    eax,DWORD PTR [rcx+0x14]
  408c0b:	mov    QWORD PTR [rdx+0x8],r9
  408c0f:	jmp    0x408b88
  408c14:	cmp    eax,0x1
  408c17:	je     0x408c50
  408c19:	cmp    eax,0x2
  408c1c:	jne    0x408c90
  408c1e:	cmp    QWORD PTR [rdx+0x8],0x0
  408c23:	jne    0x408bd1
  408c25:	test   BYTE PTR [rcx+0x10],0x3
  408c29:	je     0x408bd1
  408c2b:	mov    r9d,DWORD PTR [rcx+0x14]
  408c2f:	mov    r8,QWORD PTR [rcx+0x8]
  408c33:	mov    r8,QWORD PTR [r8+r9*8]
  408c37:	mov    rax,r9
  408c3a:	test   r8,r8
  408c3d:	je     0x408bd1
  408c3f:	cmp    BYTE PTR [r8],0x2d
  408c43:	jne    0x408c7c
  408c45:	jmp    0x408bd1
  408c47:	nop    WORD PTR [rax+rax*1+0x0]
  408c50:	mov    rax,QWORD PTR [rcx+0x18]
  408c54:	lea    r8,[rax+0x1]
  408c58:	mov    QWORD PTR [rcx+0x18],r8
  408c5c:	cmp    BYTE PTR [rax+0x1],0x0
  408c60:	jne    0x408c82
  408c62:	mov    r9d,DWORD PTR [rcx+0x14]
  408c66:	mov    r8,QWORD PTR [rcx+0x8]
  408c6a:	mov    r8,QWORD PTR [r8+r9*8]
  408c6e:	mov    rax,r9
  408c71:	test   r8,r8
  408c74:	je     0x408cf0
  408c76:	cmp    BYTE PTR [r8],0x2d
  408c7a:	je     0x408cf0
  408c7c:	add    eax,0x1
  408c7f:	mov    DWORD PTR [rcx+0x14],eax
  408c82:	mov    QWORD PTR [rdx+0x8],r8
  408c86:	jmp    0x408bd1
  408c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c90:	mov    rcx,QWORD PTR [rip+0x1cb31]        # 0x4257c8
  408c97:	call   0x4075c0
  408c9c:	nop    DWORD PTR [rax+0x0]
  408ca0:	mov    r9d,DWORD PTR [rcx+0x14]
  408ca4:	mov    r10,QWORD PTR [rcx+0x8]
  408ca8:	lea    eax,[r9+0x1]
  408cac:	mov    r9,QWORD PTR [r10+r9*8]
  408cb0:	mov    DWORD PTR [rcx+0x14],eax
  408cb3:	mov    QWORD PTR [rcx+0x18],r9
  408cb7:	jmp    0x408c0b
  408cbc:	nop    DWORD PTR [rax+0x0]
  408cc0:	mov    rdi,QWORD PTR [r8+0x50]
  408cc4:	mov    rsi,QWORD PTR [rcx+0x20]
  408cc8:	mov    rbx,QWORD PTR [rip+0x1cba9]        # 0x425878
  408ccf:	jmp    0x408ba0
  408cd4:	mov    r9d,DWORD PTR [rcx+0x14]
  408cd8:	mov    r10,QWORD PTR [rcx+0x8]
  408cdc:	lea    eax,[r9+0x1]
  408ce0:	mov    r9,QWORD PTR [r10+r9*8]
  408ce4:	mov    DWORD PTR [rcx+0x14],eax
  408ce7:	jmp    0x408c0b
  408cec:	nop    DWORD PTR [rax+0x0]
  408cf0:	mov    QWORD PTR [rdx+0x8],0x0
  408cf8:	jmp    0x408bd1
  408cfd:	nop    DWORD PTR [rax]
  408d00:	push   rdi
  408d01:	push   rbx
  408d02:	sub    rsp,0x28
  408d06:	mov    rdi,rcx
  408d09:	call   0x422718
  408d0e:	test   rax,rax
  408d11:	je     0x408d1a
  408d13:	add    rsp,0x28
  408d17:	pop    rbx
  408d18:	pop    rdi
  408d19:	ret    
  408d1a:	or     rcx,0xffffffffffffffff
  408d1e:	mov    rbx,QWORD PTR [rip+0x1ca43]        # 0x425768
  408d25:	repnz scas al,BYTE PTR es:[rdi]
  408d27:	mov    rax,rcx
  408d2a:	not    rax
  408d2d:	lea    rdi,[rax-0x1]
  408d31:	call   QWORD PTR [rip+0x2e38d]        # 0x4370c4
  408d37:	lea    rcx,[rax+0x60]
  408d3b:	mov    r8d,edi
  408d3e:	mov    rdx,rbx
  408d41:	call   0x407150
  408d46:	mov    ecx,0x1
  408d4b:	call   0x407590
  408d50:	nop
  408d51:	nop    DWORD PTR [rax+rax*1+0x0]
  408d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d60:	push   r12
  408d62:	push   rbp
  408d63:	push   rdi
  408d64:	push   rsi
  408d65:	push   rbx
  408d66:	sub    rsp,0x20
  408d6a:	mov    eax,DWORD PTR [rcx+0xb0]
  408d70:	mov    rbp,QWORD PTR [rcx+0x90]
  408d77:	mov    rbx,QWORD PTR [rcx+0x78]
  408d7b:	test   eax,eax
  408d7d:	jle    0x408e14
  408d83:	sub    eax,0x1
  408d86:	mov    rsi,rcx
  408d89:	add    rax,0x1
  408d8d:	lea    rdx,[rax+rax*2]
  408d91:	lea    rax,[rax+rdx*4]
  408d95:	lea    rdi,[rbx+rax*8]
  408d99:	jmp    0x408dc2
  408d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408da0:	cmp    eax,0x6
  408da3:	jne    0x408db9
  408da5:	mov    rax,rbx
  408da8:	sub    rax,QWORD PTR [rsi+0x78]
  408dac:	mov    rdx,QWORD PTR [rbp+0x78]
  408db0:	mov    QWORD PTR [rdx+rax*1+0x20],0x0
  408db9:	add    rbx,0x68
  408dbd:	cmp    rbx,rdi
  408dc0:	je     0x408e14
  408dc2:	mov    edx,DWORD PTR [rbx+0x10]
  408dc5:	mov    eax,edx
  408dc7:	and    eax,0xf000
  408dcc:	shr    eax,0xc
  408dcf:	cmp    eax,0x1
  408dd2:	jne    0x408da0
  408dd4:	test   dh,0x4
  408dd7:	je     0x408ded
  408dd9:	mov    rax,rbx
  408ddc:	sub    rax,QWORD PTR [rsi+0x78]
  408de0:	mov    rcx,QWORD PTR [rbp+0x78]
  408de4:	mov    QWORD PTR [rcx+rax*1+0x20],0x0
  408ded:	and    edx,0x40
  408df0:	je     0x408db9
  408df2:	mov    r12,rbx
  408df5:	sub    r12,QWORD PTR [rsi+0x78]
  408df9:	mov    rcx,QWORD PTR [rbx+0x18]
  408dfd:	add    r12,QWORD PTR [rbp+0x78]
  408e01:	add    rbx,0x68
  408e05:	call   0x408d00
  408e0a:	cmp    rbx,rdi
  408e0d:	mov    QWORD PTR [r12+0x18],rax
  408e12:	jne    0x408dc2
  408e14:	add    rsp,0x20
  408e18:	pop    rbx
  408e19:	pop    rsi
  408e1a:	pop    rdi
  408e1b:	pop    rbp
  408e1c:	pop    r12
  408e1e:	ret    
  408e1f:	nop
  408e20:	push   r13
  408e22:	push   r12
  408e24:	push   rbp
  408e25:	push   rdi
  408e26:	push   rsi
  408e27:	push   rbx
  408e28:	sub    rsp,0x28
  408e2c:	mov    r13,rcx
  408e2f:	mov    rcx,rdx
  408e32:	mov    r12,r8
  408e35:	mov    ebp,r9d
  408e38:	call   0x422838
  408e3d:	test   rax,rax
  408e40:	mov    QWORD PTR [r13+0x8],rax
  408e44:	je     0x408f20
  408e4a:	mov    rdx,QWORD PTR [r13+0x0]
  408e4e:	mov    ecx,DWORD PTR [rdx+0x10]
  408e51:	mov    rbx,QWORD PTR [rdx+0x60]
  408e55:	mov    DWORD PTR [r13+0x14],0x0
  408e5d:	mov    r8d,ecx
  408e60:	or     r8d,0x42
  408e64:	test   rbx,rbx
  408e67:	mov    DWORD PTR [r13+0x10],r8d
  408e6b:	je     0x408eb2
  408e6d:	mov    rsi,rax
  408e70:	add    rsi,0x1
  408e74:	add    rbx,0x1
  408e78:	movzx  r11d,BYTE PTR [rsi-0x1]
  408e7d:	movzx  r10d,BYTE PTR [rbx-0x1]
  408e82:	cmp    r11b,r10b
  408e85:	je     0x408e9c
  408e87:	lea    rdx,[rip+0x1c472]        # 0x425300
  408e8e:	movzx  edi,r11b
  408e92:	movzx  edi,BYTE PTR [rdx+rdi*1]
  408e96:	cmp    BYTE PTR [rdx+r10*1],dil
  408e9a:	jne    0x408eb2
  408e9c:	test   r11b,r11b
  408e9f:	jne    0x408e70
  408ea1:	or     ecx,0x62
  408ea4:	mov    QWORD PTR [r13+0x8],0x0
  408eac:	mov    DWORD PTR [r13+0x10],ecx
  408eb0:	jmp    0x408ee2
  408eb2:	cmp    ebp,0x1
  408eb5:	je     0x408f00
  408eb7:	cmp    ebp,0x2
  408eba:	jne    0x408ec4
  408ebc:	test   ecx,0x20020
  408ec2:	jne    0x408f30
  408ec4:	test   ch,0xf0
  408ec7:	je     0x408eda
  408ec9:	cmp    BYTE PTR [rax],0x0
  408ecc:	jne    0x408f70
  408ed2:	and    ecx,0x10000
  408ed8:	je     0x408f20
  408eda:	mov    QWORD PTR [r13+0x8],0x0
  408ee2:	mov    rdx,r13
  408ee5:	mov    rcx,r12
  408ee8:	add    rsp,0x28
  408eec:	pop    rbx
  408eed:	pop    rsi
  408eee:	pop    rdi
  408eef:	pop    rbp
  408ef0:	pop    r12
  408ef2:	pop    r13
  408ef4:	jmp    0x4085a0
  408ef9:	nop    DWORD PTR [rax+0x0]
  408f00:	mov    edx,ecx
  408f02:	and    edx,0x20020
  408f08:	cmp    edx,0x20000
  408f0e:	je     0x408ec4
  408f10:	mov    edx,ecx
  408f12:	and    edx,0x40020
  408f18:	cmp    edx,0x40020
  408f1e:	je     0x408ec4
  408f20:	add    rsp,0x28
  408f24:	pop    rbx
  408f25:	pop    rsi
  408f26:	pop    rdi
  408f27:	pop    rbp
  408f28:	pop    r12
  408f2a:	pop    r13
  408f2c:	ret    
  408f2d:	nop    DWORD PTR [rax]
  408f30:	mov    edx,ecx
  408f32:	and    edx,0x40020
  408f38:	cmp    edx,0x20
  408f3b:	je     0x408ec4
  408f3d:	mov    edx,ecx
  408f3f:	and    edx,0x400020
  408f45:	cmp    edx,0x400000
  408f4b:	je     0x408ec4
  408f51:	mov    edx,ecx
  408f53:	and    edx,0x800020
  408f59:	cmp    edx,0x800020
  408f5f:	jne    0x408f20
  408f61:	jmp    0x408ec4
  408f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f70:	mov    rcx,rax
  408f73:	call   0x408d00
  408f78:	or     DWORD PTR [r13+0x10],0x40
  408f7d:	mov    QWORD PTR [r13+0x8],rax
  408f81:	jmp    0x408ee2
  408f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f90:	push   rsi
  408f91:	push   rbx
  408f92:	sub    rsp,0x28
  408f96:	mov    rbx,rcx
  408f99:	call   0x422820
  408f9e:	test   rax,rax
  408fa1:	je     0x408faa
  408fa3:	add    rsp,0x28
  408fa7:	pop    rbx
  408fa8:	pop    rsi
  408fa9:	ret    
  408faa:	mov    rsi,QWORD PTR [rip+0x1c7b7]        # 0x425768
  408fb1:	call   QWORD PTR [rip+0x2e10d]        # 0x4370c4
  408fb7:	lea    rcx,[rax+0x60]
  408fbb:	mov    r8d,ebx
  408fbe:	mov    rdx,rsi
  408fc1:	call   0x407150
  408fc6:	mov    ecx,0x1
  408fcb:	call   0x407590
  408fd0:	nop
  408fd1:	nop    DWORD PTR [rax+rax*1+0x0]
  408fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fe0:	push   rbp
  408fe1:	push   rdi
  408fe2:	push   rsi
  408fe3:	push   rbx
  408fe4:	sub    rsp,0x28
  408fe8:	mov    rbx,QWORD PTR [rcx]
  408feb:	mov    rsi,rcx
  408fee:	mov    rdi,rdx
  408ff1:	test   rbx,rbx
  408ff4:	je     0x409044
  408ff6:	movsxd r8,DWORD PTR [rbx]
  408ff9:	mov    eax,DWORD PTR [rbx+0x4]
  408ffc:	cmp    r8d,eax
  408fff:	lea    edx,[r8+0x1]
  409003:	jge    0x409015
  409005:	mov    DWORD PTR [rbx],edx
  409007:	mov    QWORD PTR [rbx+r8*8+0x8],rdi
  40900c:	add    rsp,0x28
  409010:	pop    rbx
  409011:	pop    rsi
  409012:	pop    rdi
  409013:	pop    rbp
  409014:	ret    
  409015:	add    eax,0x8
  409018:	mov    rcx,rbx
  40901b:	mov    DWORD PTR [rbx+0x4],eax
  40901e:	cdqe   
  409020:	lea    rbp,[rax*8+0x8]
  409028:	mov    rdx,rbp
  40902b:	call   0x4227e0
  409030:	test   rax,rax
  409033:	je     0x409070
  409035:	movsxd r8,DWORD PTR [rax]
  409038:	mov    QWORD PTR [rsi],rax
  40903b:	mov    rbx,rax
  40903e:	lea    edx,[r8+0x1]
  409042:	jmp    0x409005
  409044:	mov    ecx,0x38
  409049:	call   0x408f90
  40904e:	test   rax,rax
  409051:	mov    rbx,rax
  409054:	je     0x40900c
  409056:	mov    DWORD PTR [rax],0x0
  40905c:	mov    DWORD PTR [rax+0x4],0x6
  409063:	mov    edx,0x1
  409068:	mov    QWORD PTR [rsi],rax
  40906b:	xor    r8d,r8d
  40906e:	jmp    0x409005
  409070:	mov    rsi,QWORD PTR [rip+0x1c711]        # 0x425788
  409077:	call   QWORD PTR [rip+0x2e047]        # 0x4370c4
  40907d:	lea    rcx,[rax+0x60]
  409081:	mov    r9,rbx
  409084:	mov    r8d,ebp
  409087:	mov    rdx,rsi
  40908a:	call   0x407150
  40908f:	mov    ecx,0x1
  409094:	call   0x407590
  409099:	nop
  40909a:	nop    WORD PTR [rax+rax*1+0x0]
  4090a0:	push   r15
  4090a2:	push   r14
  4090a4:	push   r13
  4090a6:	push   r12
  4090a8:	push   rbp
  4090a9:	push   rdi
  4090aa:	push   rsi
  4090ab:	push   rbx
  4090ac:	sub    rsp,0x58
  4090b0:	mov    rbp,QWORD PTR [rsp+0xc0]
  4090b8:	mov    QWORD PTR [rsp+0xa0],rcx
  4090c0:	mov    r15,r9
  4090c3:	mov    r14,rdx
  4090c6:	mov    r12,r8
  4090c9:	lea    rcx,[r8+rbp*1+0x18]
  4090ce:	call   0x408f90
  4090d3:	test   r15,r15
  4090d6:	mov    r13,rax
  4090d9:	je     0x409280
  4090df:	test   rbp,rbp
  4090e2:	mov    DWORD PTR [rax],0x1
  4090e8:	je     0x4091d0
  4090ee:	lea    rsi,[rax+0x10]
  4090f2:	lea    rax,[rsp+0x48]
  4090f7:	mov    ebx,ebp
  4090f9:	lea    r10,[rip+0x20040]        # 0x429140
  409100:	mov    QWORD PTR [rsp+0x30],rax
  409105:	jmp    0x409125
  409107:	nop    WORD PTR [rax+rax*1+0x0]
  409110:	sub    ebx,0x1
  409113:	add    rsi,0x1
  409117:	mov    r15,rdi
  40911a:	test   ebx,ebx
  40911c:	mov    BYTE PTR [rsi-0x1],al
  40911f:	jle    0x409215
  409125:	movzx  eax,BYTE PTR [r15]
  409129:	lea    rdi,[r15+0x1]
  40912d:	test   eax,eax
  40912f:	je     0x409215
  409135:	cmp    eax,0x26
  409138:	jne    0x409110
  40913a:	cmp    ebx,0x2
  40913d:	mov    QWORD PTR [rsp+0x48],rdi
  409142:	mov    eax,0x26
  409147:	jle    0x409110
  409149:	cmp    BYTE PTR [r15+0x1],0x23
  40914e:	lea    r9,[rip+0x1ffab]        # 0x429100
  409155:	je     0x409220
  40915b:	mov    r15,r9
  40915e:	mov    QWORD PTR [rsp+0xc0],rbp
  409166:	mov    QWORD PTR [rsp+0x38],rsi
  40916b:	mov    ebp,DWORD PTR [r15+0x4]
  40916f:	mov    esi,ebx
  409171:	cmp    ebp,esi
  409173:	jg     0x409199
  409175:	movsxd rbx,ebp
  409178:	lea    rdx,[r15+0x8]
  40917c:	mov    rcx,rdi
  40917f:	mov    r8,rbx
  409182:	mov    QWORD PTR [rsp+0x28],r10
  409187:	call   0x4227a0
  40918c:	test   eax,eax
  40918e:	mov    r10,QWORD PTR [rsp+0x28]
  409193:	je     0x4092a1
  409199:	cmp    r15,r10
  40919c:	je     0x4091af
  40919e:	add    r15,0x10
  4091a2:	mov    ebp,DWORD PTR [r15+0x4]
  4091a6:	cmp    ebp,esi
  4091a8:	jle    0x409175
  4091aa:	cmp    r15,r10
  4091ad:	jne    0x40919e
  4091af:	mov    ebx,esi
  4091b1:	mov    rbp,QWORD PTR [rsp+0xc0]
  4091b9:	mov    rsi,QWORD PTR [rsp+0x38]
  4091be:	mov    eax,0x26
  4091c3:	jmp    0x409110
  4091c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4091d0:	mov    BYTE PTR [rax+0x10],0x0
  4091d4:	lea    rcx,[r13+rbp*1+0x11]
  4091d9:	mov    QWORD PTR [r13+0x8],rcx
  4091dd:	mov    r8,r12
  4091e0:	mov    rdx,r14
  4091e3:	call   0x422810
  4091e8:	mov    rax,QWORD PTR [r13+0x8]
  4091ec:	mov    rcx,QWORD PTR [rsp+0xa0]
  4091f4:	mov    rdx,r13
  4091f7:	mov    BYTE PTR [rax+r12*1],0x0
  4091fc:	call   0x408fe0
  409201:	mov    rax,r13
  409204:	add    rsp,0x58
  409208:	pop    rbx
  409209:	pop    rsi
  40920a:	pop    rdi
  40920b:	pop    rbp
  40920c:	pop    r12
  40920e:	pop    r13
  409210:	pop    r14
  409212:	pop    r15
  409214:	ret    
  409215:	mov    BYTE PTR [rsi],0x0
  409218:	jmp    0x4091d4
  40921a:	nop    WORD PTR [rax+rax*1+0x0]
  409220:	lea    rcx,[r15+0x2]
  409224:	mov    r8d,0xa
  40922a:	mov    QWORD PTR [rsp+0x48],rcx
  40922f:	cmp    BYTE PTR [r15+0x2],0x78
  409234:	je     0x409293
  409236:	mov    rdx,QWORD PTR [rsp+0x30]
  40923b:	mov    QWORD PTR [rsp+0x28],r10
  409240:	call   0x422770
  409245:	mov    rdx,QWORD PTR [rsp+0x48]
  40924a:	mov    ecx,eax
  40924c:	mov    r10,QWORD PTR [rsp+0x28]
  409251:	mov    eax,0x26
  409256:	cmp    BYTE PTR [rdx],0x3b
  409259:	jne    0x409110
  40925f:	add    rdx,0x1
  409263:	mov    r8,rdx
  409266:	sub    r8,rdi
  409269:	cmp    r8d,ebx
  40926c:	jg     0x409110
  409272:	sub    ebx,r8d
  409275:	mov    eax,ecx
  409277:	mov    rdi,rdx
  40927a:	jmp    0x409110
  40927f:	nop
  409280:	lea    rcx,[rax+0x10]
  409284:	mov    DWORD PTR [rax],0x0
  40928a:	mov    QWORD PTR [rax+0x8],rcx
  40928e:	jmp    0x4091dd
  409293:	lea    rcx,[r15+0x3]
  409297:	mov    r8b,0x10
  40929a:	mov    QWORD PTR [rsp+0x48],rcx
  40929f:	jmp    0x409236
  4092a1:	mov    rax,rbx
  4092a4:	mov    r9,r15
  4092a7:	mov    ebx,esi
  4092a9:	mov    r15d,ebp
  4092ac:	add    rdi,rax
  4092af:	mov    rsi,QWORD PTR [rsp+0x38]
  4092b4:	mov    rbp,QWORD PTR [rsp+0xc0]
  4092bc:	sub    ebx,r15d
  4092bf:	movzx  eax,BYTE PTR [r9]
  4092c3:	jmp    0x409110
  4092c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d0:	push   rsi
  4092d1:	push   rbx
  4092d2:	sub    rsp,0x28
  4092d6:	mov    rax,QWORD PTR [rdx+0x38]
  4092da:	mov    rbx,rdx
  4092dd:	lea    rdx,[rip+0x7b2c]        # 0x410e10
  4092e4:	mov    rsi,rcx
  4092e7:	cmp    rax,rdx
  4092ea:	je     0x409440
  4092f0:	lea    rdx,[rip+0xffffffffffffeb49]        # 0x407e40
  4092f7:	cmp    rax,rdx
  4092fa:	je     0x409460
  409300:	lea    rdx,[rip+0x8bf9]        # 0x411f00
  409307:	cmp    rax,rdx
  40930a:	je     0x409474
  409310:	mov    r8,QWORD PTR [rbx+0x48]
  409314:	test   r8,r8
  409317:	je     0x409400
  40931d:	movzx  r9d,WORD PTR [rbx+0xc]
  409322:	cmp    r9w,0x1
  409327:	je     0x409424
  40932d:	cmp    r9w,0xffff
  409332:	je     0x409347
  409334:	mov    rdx,QWORD PTR [rcx]
  409337:	lea    rcx,[rip+0x20d7a]        # 0x42a0b8
  40933e:	call   0x407560
  409343:	mov    r8,QWORD PTR [rbx+0x48]
  409347:	mov    rdx,QWORD PTR [rsi]
  40934a:	lea    rcx,[rip+0x2163f]        # 0x42a990
  409351:	call   0x407560
  409356:	mov    eax,DWORD PTR [rbx+0x10]
  409359:	test   ah,0xf0
  40935c:	je     0x4093d0
  40935e:	test   eax,0x10000
  409363:	jne    0x4093a0
  409365:	lea    rdx,[rip+0x20a85]        # 0x429df1
  40936c:	lea    rcx,[rip+0x20923]        # 0x429c96
  409373:	call   0x407560
  409378:	call   QWORD PTR [rip+0x2dd46]        # 0x4370c4
  40937e:	lea    rcx,[rip+0x20ac9]        # 0x429e4e
  409385:	lea    r9,[rax+0x30]
  409389:	mov    r8d,0x10
  40938f:	mov    edx,0x1
  409394:	add    rsp,0x28
  409398:	pop    rbx
  409399:	pop    rsi
  40939a:	jmp    0x422840
  40939f:	nop
  4093a0:	mov    rdx,QWORD PTR [rsi]
  4093a3:	mov    r8,QWORD PTR [rbx+0x48]
  4093a7:	lea    rcx,[rip+0x21e9c]        # 0x42b24a
  4093ae:	call   0x407560
  4093b3:	lea    rdx,[rip+0x2092c]        # 0x429ce6
  4093ba:	lea    rcx,[rip+0x208d5]        # 0x429c96
  4093c1:	call   0x407560
  4093c6:	jmp    0x409378
  4093c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4093d0:	mov    rdx,QWORD PTR [rsi]
  4093d3:	mov    r8,QWORD PTR [rbx+0x48]
  4093d7:	lea    rcx,[rip+0x21e6c]        # 0x42b24a
  4093de:	call   0x407560
  4093e3:	lea    rdx,[rip+0x208e3]        # 0x429ccd
  4093ea:	lea    rcx,[rip+0x208a5]        # 0x429c96
  4093f1:	call   0x407560
  4093f6:	jmp    0x409378
  4093f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409400:	test   rax,rax
  409403:	je     0x4094a0
  409409:	mov    rdx,QWORD PTR [rcx]
  40940c:	lea    r8,[rip+0x20879]        # 0x429c8c
  409413:	lea    rcx,[rip+0x20e0a]        # 0x42a224
  40941a:	call   0x407560
  40941f:	jmp    0x409378
  409424:	mov    rdx,QWORD PTR [rcx]
  409427:	lea    rcx,[rip+0x21e76]        # 0x42b2a4
  40942e:	call   0x407560
  409433:	jmp    0x409356
  409438:	nop    DWORD PTR [rax+rax*1+0x0]
  409440:	mov    rdx,QWORD PTR [rcx]
  409443:	lea    r8,[rip+0x20997]        # 0x429de1
  40944a:	lea    rcx,[rip+0x20dd3]        # 0x42a224
  409451:	call   0x407560
  409456:	jmp    0x409378
  40945b:	nop    DWORD PTR [rax+rax*1+0x0]
  409460:	mov    rdx,QWORD PTR [rcx]
  409463:	lea    rcx,[rip+0x21d2c]        # 0x42b196
  40946a:	call   0x407560
  40946f:	jmp    0x409378
  409474:	lea    rdx,[rip+0x20a5b]        # 0x429ed6
  40947b:	lea    rcx,[rip+0x20814]        # 0x429c96
  409482:	call   0x407560
  409487:	lea    rdx,[rip+0x20963]        # 0x429df1
  40948e:	lea    rcx,[rip+0x20801]        # 0x429c96
  409495:	call   0x407560
  40949a:	jmp    0x409378
  40949f:	nop
  4094a0:	lea    rdx,[rip+0x20a5e]        # 0x429f05
  4094a7:	lea    rcx,[rip+0x207e8]        # 0x429c96
  4094ae:	call   0x407560
  4094b3:	lea    rdx,[rip+0x2082c]        # 0x429ce6
  4094ba:	lea    rcx,[rip+0x207d5]        # 0x429c96
  4094c1:	call   0x407560
  4094c6:	jmp    0x409378
  4094cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4094d0:	push   rbp
  4094d1:	push   rdi
  4094d2:	push   rsi
  4094d3:	push   rbx
  4094d4:	sub    rsp,0x28
  4094d8:	mov    esi,DWORD PTR [rcx+0xb0]
  4094de:	mov    rbx,QWORD PTR [rcx+0x78]
  4094e2:	mov    rdi,rcx
  4094e5:	call   QWORD PTR [rip+0x2dbd9]        # 0x4370c4
  4094eb:	lea    rcx,[rip+0x20ba7]        # 0x42a099
  4094f2:	lea    r9,[rax+0x30]
  4094f6:	mov    r8d,0x1e
  4094fc:	mov    edx,0x1
  409501:	call   0x422840
  409506:	test   esi,esi
  409508:	jle    0x409569
  40950a:	lea    eax,[rsi-0x1]
  40950d:	lea    rbp,[rdi+0x30]
  409511:	add    rax,0x1
  409515:	lea    rdx,[rax+rax*2]
  409519:	lea    rax,[rax+rdx*4]
  40951d:	lea    rsi,[rbx+rax*8]
  409521:	test   DWORD PTR [rbx+0x10],0x280000
  409528:	jne    0x409560
  40952a:	movzx  edx,WORD PTR [rbx+0x2]
  40952e:	movzx  eax,dl
  409531:	cmp    al,0x7f
  409533:	ja     0x409560
  409535:	lea    rcx,[rip+0x231c4]        # 0x42c700
  40953c:	test   BYTE PTR [rcx+rax*4+0x1],0x40
  409541:	je     0x409560
  409543:	lea    rcx,[rip+0x20915]        # 0x429e5f
  40954a:	call   0x407560
  40954f:	mov    rdx,rbx
  409552:	mov    rcx,rbp
  409555:	call   0x4092d0
  40955a:	nop    WORD PTR [rax+rax*1+0x0]
  409560:	add    rbx,0x68
  409564:	cmp    rbx,rsi
  409567:	jne    0x409521
  409569:	mov    r8,QWORD PTR [rdi+0x30]
  40956d:	lea    rdx,[rip+0x206eb]        # 0x429c5f
  409574:	lea    rcx,[rip+0x21f02]        # 0x42b47d
  40957b:	add    rsp,0x28
  40957f:	pop    rbx
  409580:	pop    rsi
  409581:	pop    rdi
  409582:	pop    rbp
  409583:	jmp    0x407560
  409588:	nop    DWORD PTR [rax+rax*1+0x0]
  409590:	push   r15
  409592:	push   r14
  409594:	push   r13
  409596:	push   r12
  409598:	push   rbp
  409599:	push   rdi
  40959a:	push   rsi
  40959b:	push   rbx
  40959c:	sub    rsp,0x58
  4095a0:	mov    rdi,rcx
  4095a3:	mov    QWORD PTR [rsp+0xa8],rdx
  4095ab:	mov    rsi,r8
  4095ae:	mov    rbx,r9
  4095b1:	call   0x4227a8
  4095b6:	sub    eax,0x1
  4095b9:	cmp    eax,0x1e
  4095bc:	mov    DWORD PTR [rsp+0x2c],eax
  4095c0:	ja     0x409684
  4095c6:	mov    eax,DWORD PTR [rbx]
  4095c8:	mov    rbp,QWORD PTR [rsi]
  4095cb:	test   eax,eax
  4095cd:	jle    0x40974e
  4095d3:	sub    eax,0x1
  4095d6:	mov    rbx,QWORD PTR [rip+0x2dd2f]        # 0x43730c
  4095dd:	mov    r12d,0x2
  4095e3:	add    rax,0x1
  4095e7:	lea    rdx,[rax+rax*2]
  4095eb:	lea    rax,[rax+rdx*4]
  4095ef:	lea    rax,[rbp+rax*8+0x0]
  4095f4:	mov    QWORD PTR [rsp+0x20],rax
  4095f9:	nop    DWORD PTR [rax+0x0]
  409600:	cmp    rbp,QWORD PTR [rsp+0xa8]
  409608:	je     0x409672
  40960a:	test   DWORD PTR [rbp+0x10],0x280000
  409611:	jne    0x409672
  409613:	mov    r15,QWORD PTR [rbp+0x50]
  409617:	xor    r14d,r14d
  40961a:	jmp    0x409624
  40961c:	nop    DWORD PTR [rax+0x0]
  409620:	add    r14d,0x1
  409624:	mov    r13d,r14d
  409627:	movzx  ecx,BYTE PTR [r15+r13*1]
  40962c:	call   rbx
  40962e:	movzx  ecx,BYTE PTR [rdi+r13*1]
  409633:	mov    esi,eax
  409635:	call   rbx
  409637:	cmp    esi,eax
  409639:	je     0x409620
  40963b:	mov    r15,QWORD PTR [rbp+0x58]
  40963f:	cmp    r12d,r14d
  409642:	cmovb  r12d,r14d
  409646:	test   r15,r15
  409649:	je     0x409672
  40964b:	xor    r14d,r14d
  40964e:	jmp    0x409654
  409650:	add    r14d,0x1
  409654:	mov    r13d,r14d
  409657:	movsx  ecx,BYTE PTR [r15+r13*1]
  40965c:	call   rbx
  40965e:	movsx  ecx,BYTE PTR [rdi+r13*1]
  409663:	mov    esi,eax
  409665:	call   rbx
  409667:	cmp    esi,eax
  409669:	je     0x409650
  40966b:	cmp    r12d,r14d
  40966e:	cmovb  r12d,r14d
  409672:	add    rbp,0x68
  409676:	cmp    rbp,QWORD PTR [rsp+0x20]
  40967b:	jne    0x409600
  40967d:	cmp    DWORD PTR [rsp+0x2c],r12d
  409682:	ja     0x4096a5
  409684:	lea    rcx,[rip+0x207e4]        # 0x429e6f
  40968b:	mov    rdx,rdi
  40968e:	call   0x407560
  409693:	nop
  409694:	add    rsp,0x58
  409698:	pop    rbx
  409699:	pop    rsi
  40969a:	pop    rdi
  40969b:	pop    rbp
  40969c:	pop    r12
  40969e:	pop    r13
  4096a0:	pop    r14
  4096a2:	pop    r15
  4096a4:	ret    
  4096a5:	lea    rbp,[rsp+0x30]
  4096aa:	mov    ebx,r12d
  4096ad:	cmp    r12d,0x8
  4096b1:	mov    rax,rdi
  4096b4:	lea    rsi,[rbp+rbx*1+0x0]
  4096b9:	mov    rcx,rbp
  4096bc:	jae    0x409727
  4096be:	xor    edx,edx
  4096c0:	test   r12b,0x4
  4096c4:	je     0x4096cf
  4096c6:	mov    edx,DWORD PTR [rax]
  4096c8:	mov    DWORD PTR [rcx],edx
  4096ca:	mov    edx,0x4
  4096cf:	test   r12b,0x2
  4096d3:	je     0x4096e3
  4096d5:	movzx  r8d,WORD PTR [rax+rdx*1]
  4096da:	mov    WORD PTR [rcx+rdx*1],r8w
  4096df:	add    rdx,0x2
  4096e3:	and    r12d,0x1
  4096e7:	je     0x4096f0
  4096e9:	movzx  eax,BYTE PTR [rax+rdx*1]
  4096ed:	mov    BYTE PTR [rcx+rdx*1],al
  4096f0:	add    rbx,rdi
  4096f3:	jmp    0x4096f8
  4096f5:	mov    rsi,rax
  4096f8:	lea    rcx,[rip+0x20780]        # 0x429e7f
  4096ff:	mov    BYTE PTR [rsi],0x0
  409702:	mov    rdx,rbp
  409705:	add    rbx,0x1
  409709:	call   0x407560
  40970e:	movzx  ecx,BYTE PTR [rbx-0x1]
  409712:	cmp    BYTE PTR [rbx],0x0
  409715:	lea    rax,[rsi+0x1]
  409719:	mov    BYTE PTR [rax-0x1],cl
  40971c:	jne    0x4096f5
  40971e:	mov    BYTE PTR [rsi+0x1],0x0
  409722:	jmp    0x409684
  409727:	mov    ecx,r12d
  40972a:	xor    eax,eax
  40972c:	and    ecx,0xfffffff8
  40972f:	mov    edx,eax
  409731:	add    eax,0x8
  409734:	mov    r8,QWORD PTR [rdi+rdx*1]
  409738:	cmp    eax,ecx
  40973a:	mov    QWORD PTR [rbp+rdx*1+0x0],r8
  40973f:	jb     0x40972f
  409741:	lea    rcx,[rbp+rax*1+0x0]
  409746:	add    rax,rdi
  409749:	jmp    0x4096be
  40974e:	mov    r12d,0x2
  409754:	jmp    0x40967d
  409759:	nop    DWORD PTR [rax+0x0]
  409760:	push   r14
  409762:	push   r13
  409764:	push   r12
  409766:	push   rbp
  409767:	push   rdi
  409768:	push   rsi
  409769:	push   rbx
  40976a:	sub    rsp,0x20
  40976e:	mov    r13,QWORD PTR [rip+0x2d94f]        # 0x4370c4
  409775:	mov    rbx,QWORD PTR [rcx+0x78]
  409779:	mov    rdi,rcx
  40977c:	mov    esi,DWORD PTR [rcx+0xb0]
  409782:	call   r13
  409785:	lea    rcx,[rip+0x2090d]        # 0x42a099
  40978c:	lea    r9,[rax+0x30]
  409790:	mov    r8d,0x1e
  409796:	mov    edx,0x1
  40979b:	lea    r12,[rdi+0x78]
  40979f:	lea    rbp,[rdi+0xb0]
  4097a6:	call   0x422840
  4097ab:	lea    r14,[rdi+0x30]
  4097af:	jmp    0x4097c0
  4097b1:	sub    esi,0x1
  4097b4:	add    rbx,0x68
  4097b8:	test   esi,esi
  4097ba:	jle    0x40986d
  4097c0:	test   DWORD PTR [rbx+0x10],0x280000
  4097c7:	jne    0x4097b1
  4097c9:	mov    rcx,QWORD PTR [rbx+0x50]
  4097cd:	mov    r9,rbp
  4097d0:	mov    r8,r12
  4097d3:	mov    rdx,rbx
  4097d6:	call   0x409590
  4097db:	mov    rcx,r14
  4097de:	mov    rdx,rbx
  4097e1:	call   0x4092d0
  4097e6:	mov    rcx,QWORD PTR [rbx+0x58]
  4097ea:	test   rcx,rcx
  4097ed:	je     0x4097b1
  4097ef:	mov    r9,rbp
  4097f2:	mov    r8,r12
  4097f5:	mov    rdx,rbx
  4097f8:	call   0x409590
  4097fd:	lea    rax,[rip+0x86fc]        # 0x411f00
  409804:	cmp    QWORD PTR [rbx+0x38],rax
  409808:	je     0x4098a0
  40980e:	cmp    WORD PTR [rbx+0xc],0x1
  409813:	mov    rdx,QWORD PTR [rdi+0x30]
  409817:	mov    r9,QWORD PTR [rbx+0x60]
  40981b:	mov    r8,QWORD PTR [rbx+0x48]
  40981f:	je     0x409892
  409821:	lea    rcx,[rip+0x212bb]        # 0x42aae3
  409828:	call   0x407560
  40982d:	lea    rdx,[rip+0x20499]        # 0x429ccd
  409834:	lea    rcx,[rip+0x2045b]        # 0x429c96
  40983b:	sub    esi,0x1
  40983e:	add    rbx,0x68
  409842:	call   0x407560
  409847:	call   r13
  40984a:	lea    rcx,[rip+0x205fd]        # 0x429e4e
  409851:	lea    r9,[rax+0x30]
  409855:	mov    r8d,0x10
  40985b:	mov    edx,0x1
  409860:	call   0x422840
  409865:	test   esi,esi
  409867:	jg     0x4097c0
  40986d:	mov    r8,QWORD PTR [rdi+0x30]
  409871:	lea    rdx,[rip+0x20487]        # 0x429cff
  409878:	lea    rcx,[rip+0x21bfe]        # 0x42b47d
  40987f:	add    rsp,0x20
  409883:	pop    rbx
  409884:	pop    rsi
  409885:	pop    rdi
  409886:	pop    rbp
  409887:	pop    r12
  409889:	pop    r13
  40988b:	pop    r14
  40988d:	jmp    0x407560
  409892:	lea    rcx,[rip+0x212d7]        # 0x42ab70
  409899:	call   0x407560
  40989e:	jmp    0x40982d
  4098a0:	lea    rdx,[rip+0x2068d]        # 0x429f34
  4098a7:	lea    rcx,[rip+0x203e8]        # 0x429c96
  4098ae:	call   0x407560
  4098b3:	jmp    0x40982d
  4098b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4098c0:	push   r15
  4098c2:	push   r14
  4098c4:	push   r13
  4098c6:	push   r12
  4098c8:	push   rbp
  4098c9:	push   rdi
  4098ca:	push   rsi
  4098cb:	push   rbx
  4098cc:	sub    rsp,0x68
  4098d0:	mov    eax,DWORD PTR [rcx+0x10]
  4098d3:	test   al,0x8
  4098d5:	jne    0x4099e0
  4098db:	mov    rdi,QWORD PTR [rcx+0x20]
  4098df:	test   rdi,rdi
  4098e2:	je     0x409a20
  4098e8:	mov    rdx,QWORD PTR [rcx+0x18]
  4098ec:	lea    r13,[rsp+0x40]
  4098f1:	mov    rbp,rcx
  4098f4:	mov    r8d,0x20
  4098fa:	mov    rcx,r13
  4098fd:	call   0x41bd60
  409902:	test   eax,eax
  409904:	jne    0x4099e0
  40990a:	mov    eax,DWORD PTR [rdi]
  40990c:	test   eax,eax
  40990e:	jle    0x4099a7
  409914:	lea    r15d,[rax-0x1]
  409918:	xor    ebx,ebx
  40991a:	xor    r12d,r12d
  40991d:	lea    rax,[r15+0x1]
  409921:	mov    QWORD PTR [rsp+0x38],rax
  409926:	jmp    0x409950
  409928:	nop    DWORD PTR [rax+rax*1+0x0]
  409930:	mov    BYTE PTR [r15],0x3d
  409934:	cmp    r14d,r12d
  409937:	je     0x409941
  409939:	movsxd rax,r12d
  40993c:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  409941:	add    r12d,0x1
  409945:	add    rbx,0x1
  409949:	cmp    rbx,QWORD PTR [rsp+0x38]
  40994e:	je     0x4099a7
  409950:	mov    rsi,QWORD PTR [rdi+rbx*8+0x8]
  409955:	mov    edx,0x3d
  40995a:	mov    r14d,ebx
  40995d:	mov    rcx,rsi
  409960:	call   0x4227d0
  409965:	test   rax,rax
  409968:	mov    r15,rax
  40996b:	je     0x4099f1
  409971:	mov    BYTE PTR [rax],0x0
  409974:	xor    r9d,r9d
  409977:	xor    r8d,r8d
  40997a:	mov    DWORD PTR [rsp+0x20],0x0
  409982:	mov    rdx,rsi
  409985:	mov    rcx,r13
  409988:	call   0x41bd58
  40998d:	test   eax,eax
  40998f:	jne    0x409930
  409991:	mov    rcx,rsi
  409994:	add    rbx,0x1
  409998:	call   0x422858
  40999d:	sub    DWORD PTR [rdi],0x1
  4099a0:	cmp    rbx,QWORD PTR [rsp+0x38]
  4099a5:	jne    0x409950
  4099a7:	mov    rcx,r13
  4099aa:	call   0x41bd50
  4099af:	mov    eax,DWORD PTR [rdi]
  4099b1:	test   eax,eax
  4099b3:	jne    0x4099e0
  4099b5:	mov    eax,DWORD PTR [rbp+0x10]
  4099b8:	mov    edx,eax
  4099ba:	and    edx,0xfffff00
  4099c0:	test   ah,0x8
  4099c3:	jne    0x4099c8
  4099c5:	or     edx,0x20
  4099c8:	mov    DWORD PTR [rbp+0x10],edx
  4099cb:	mov    rcx,rdi
  4099ce:	call   0x422858
  4099d3:	mov    QWORD PTR [rbp+0x20],0x0
  4099db:	nop    DWORD PTR [rax+rax*1+0x0]
  4099e0:	add    rsp,0x68
  4099e4:	pop    rbx
  4099e5:	pop    rsi
  4099e6:	pop    rdi
  4099e7:	pop    rbp
  4099e8:	pop    r12
  4099ea:	pop    r13
  4099ec:	pop    r14
  4099ee:	pop    r15
  4099f0:	ret    
  4099f1:	xor    r9d,r9d
  4099f4:	xor    r8d,r8d
  4099f7:	mov    DWORD PTR [rsp+0x20],0x0
  4099ff:	mov    rdx,rsi
  409a02:	mov    rcx,r13
  409a05:	call   0x41bd58
  409a0a:	test   eax,eax
  409a0c:	jne    0x409934
  409a12:	jmp    0x409991
  409a17:	nop    WORD PTR [rax+rax*1+0x0]
  409a20:	mov    edx,eax
  409a22:	and    edx,0xfffff00
  409a28:	test   ah,0x8
  409a2b:	jne    0x409a30
  409a2d:	or     edx,0x20
  409a30:	mov    DWORD PTR [rcx+0x10],edx
  409a33:	jmp    0x4099e0
  409a35:	nop
  409a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a40:	push   rsi
  409a41:	push   rbx
  409a42:	sub    rsp,0x28
  409a46:	test   BYTE PTR [rdx+0x10],0x4
  409a4a:	je     0x409a55
  409a4c:	mov    rax,QWORD PTR [rdx]
  409a4f:	test   BYTE PTR [rax+0x13],0x2
  409a53:	jne    0x409a60
  409a55:	add    rsp,0x28
  409a59:	pop    rbx
  409a5a:	pop    rsi
  409a5b:	jmp    0x408b40
  409a60:	mov    rsi,QWORD PTR [rax+0x50]
  409a64:	mov    rbx,QWORD PTR [rip+0x1be45]        # 0x4258b0
  409a6b:	call   QWORD PTR [rip+0x2d653]        # 0x4370c4
  409a71:	lea    rcx,[rax+0x60]
  409a75:	mov    r8,rsi
  409a78:	mov    rdx,rbx
  409a7b:	call   0x407150
  409a80:	mov    eax,0xffffffff
  409a85:	add    rsp,0x28
  409a89:	pop    rbx
  409a8a:	pop    rsi
  409a8b:	ret    
  409a8c:	nop    DWORD PTR [rax+0x0]
  409a90:	push   r15
  409a92:	push   r14
  409a94:	push   r13
  409a96:	push   r12
  409a98:	push   rbp
  409a99:	push   rdi
  409a9a:	push   rsi
  409a9b:	push   rbx
  409a9c:	sub    rsp,0x188
  409aa3:	movzx  eax,WORD PTR [rcx+0xaa]
  409aaa:	test   ax,0x7fff
  409aae:	je     0x409d08
  409ab4:	mov    r12,rdx
  409ab7:	lea    rdx,[rax+rax*2]
  409abb:	mov    rbp,rcx
  409abe:	mov    rcx,QWORD PTR [rcx+0x78]
  409ac2:	lea    rax,[rax+rdx*4]
  409ac6:	lea    rax,[rcx+rax*8]
  409aca:	mov    rbx,QWORD PTR [rax+0x18]
  409ace:	test   rbx,rbx
  409ad1:	je     0x409adc
  409ad3:	cmp    BYTE PTR [rbx],0x0
  409ad6:	jne    0x409b80
  409adc:	mov    rax,QWORD PTR [rbp+0x58]
  409ae0:	test   rax,rax
  409ae3:	jne    0x409af4
  409ae5:	jmp    0x409d08
  409aea:	nop    WORD PTR [rax+rax*1+0x0]
  409af0:	add    rax,0x8
  409af4:	cmp    QWORD PTR [rax+0x8],0x0
  409af9:	jne    0x409af0
  409afb:	mov    rbx,QWORD PTR [rax]
  409afe:	xor    edi,edi
  409b00:	cmp    BYTE PTR [rbx],0x24
  409b03:	je     0x409b84
  409b05:	lea    r13,[rsp+0x30]
  409b0a:	mov    rcx,rbx
  409b0d:	mov    rsi,QWORD PTR [rip+0x2d820]        # 0x437334
  409b14:	mov    rdx,r13
  409b17:	call   rsi
  409b19:	test   eax,eax
  409b1b:	jne    0x409d10
  409b21:	movzx  eax,WORD PTR [rsp+0x36]
  409b26:	and    ax,0xf000
  409b2a:	cmp    ax,0x4000
  409b2e:	je     0x409c60
  409b34:	cmp    ax,0x8000
  409b38:	je     0x409d7d
  409b3e:	mov    rbp,QWORD PTR [rbp+0x28]
  409b42:	mov    rsi,QWORD PTR [rip+0x1bdd7]        # 0x425920
  409b49:	call   QWORD PTR [rip+0x2d575]        # 0x4370c4
  409b4f:	lea    rcx,[rax+0x60]
  409b53:	mov    r9,rbx
  409b56:	mov    r8,rbp
  409b59:	mov    rdx,rsi
  409b5c:	call   0x407150
  409b61:	xor    eax,eax
  409b63:	test   edi,edi
  409b65:	jne    0x409d00
  409b6b:	add    rsp,0x188
  409b72:	pop    rbx
  409b73:	pop    rsi
  409b74:	pop    rdi
  409b75:	pop    rbp
  409b76:	pop    r12
  409b78:	pop    r13
  409b7a:	pop    r14
  409b7c:	pop    r15
  409b7e:	ret    
  409b7f:	nop
  409b80:	xor    edi,edi
  409b82:	jmp    0x409b05
  409b84:	lea    r13,[rbx+0x1]
  409b88:	mov    edx,0x5c
  409b8d:	mov    rcx,r13
  409b90:	call   0x4227d0
  409b95:	test   rax,rax
  409b98:	mov    r14,rax
  409b9b:	je     0x409e28
  409ba1:	sub    rax,r13
  409ba4:	cmp    rax,0x7f
  409ba8:	jg     0x409d08
  409bae:	lea    r8,[rsp+0x70]
  409bb3:	cmp    rax,0x8
  409bb7:	mov    rsi,r13
  409bba:	mov    rdi,r8
  409bbd:	jb     0x409bc9
  409bbf:	mov    rcx,rax
  409bc2:	shr    rcx,0x3
  409bc6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  409bc9:	xor    edx,edx
  409bcb:	test   al,0x4
  409bcd:	je     0x409bd8
  409bcf:	mov    edx,DWORD PTR [rsi]
  409bd1:	mov    DWORD PTR [rdi],edx
  409bd3:	mov    edx,0x4
  409bd8:	test   al,0x2
  409bda:	je     0x409be8
  409bdc:	movzx  ecx,WORD PTR [rsi+rdx*1]
  409be0:	mov    WORD PTR [rdi+rdx*1],cx
  409be4:	add    rdx,0x2
  409be8:	test   al,0x1
  409bea:	je     0x409bf3
  409bec:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  409bf0:	mov    BYTE PTR [rdi+rdx*1],cl
  409bf3:	mov    rcx,r8
  409bf6:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  409bfb:	call   0x422838
  409c00:	test   rax,rax
  409c03:	mov    rdi,rax
  409c06:	je     0x409e3c
  409c0c:	mov    rcx,rax
  409c0f:	call   0x4227a8
  409c14:	mov    rcx,r14
  409c17:	mov    rsi,rax
  409c1a:	call   0x4227a8
  409c1f:	lea    rcx,[rsi+rax*1+0x2]
  409c24:	mov    r13,rax
  409c27:	call   0x408f90
  409c2c:	mov    rbx,rax
  409c2f:	mov    r8,rsi
  409c32:	mov    rdx,rdi
  409c35:	mov    rcx,rax
  409c38:	add    rsi,rbx
  409c3b:	mov    edi,0x1
  409c40:	call   0x422810
  409c45:	lea    rcx,[rsi+0x1]
  409c49:	lea    r8,[r13+0x1]
  409c4d:	mov    BYTE PTR [rsi],0x2f
  409c50:	mov    rdx,r14
  409c53:	call   0x422810
  409c58:	jmp    0x409b05
  409c5d:	nop    DWORD PTR [rax]
  409c60:	mov    rcx,rbx
  409c63:	call   0x4227a8
  409c68:	mov    rcx,QWORD PTR [rbp+0x38]
  409c6c:	mov    r14,rax
  409c6f:	call   0x4227a8
  409c74:	lea    r14,[r14+rax*1+0x2]
  409c79:	mov    rcx,r14
  409c7c:	call   0x408f90
  409c81:	mov    r15,rax
  409c84:	mov    rax,QWORD PTR [rbp+0x38]
  409c88:	lea    r8,[rip+0x1eacd]        # 0x42875c
  409c8f:	mov    r9,rbx
  409c92:	mov    rdx,r14
  409c95:	mov    rcx,r15
  409c98:	mov    QWORD PTR [rsp+0x20],rax
  409c9d:	call   0x407540
  409ca2:	cdqe   
  409ca4:	cmp    r14,rax
  409ca7:	jbe    0x409eed
  409cad:	test   edi,edi
  409caf:	jne    0x409df6
  409cb5:	mov    rdx,r13
  409cb8:	mov    rcx,r15
  409cbb:	call   rsi
  409cbd:	test   eax,eax
  409cbf:	jne    0x409e03
  409cc5:	movzx  eax,WORD PTR [rsp+0x36]
  409cca:	and    ax,0xf000
  409cce:	cmp    ax,0x8000
  409cd2:	je     0x409ee0
  409cd8:	mov    rbx,QWORD PTR [rip+0x1bc41]        # 0x425920
  409cdf:	mov    rsi,QWORD PTR [rbp+0x28]
  409ce3:	call   QWORD PTR [rip+0x2d3db]        # 0x4370c4
  409ce9:	lea    rcx,[rax+0x60]
  409ced:	mov    r9,r15
  409cf0:	mov    rdx,rbx
  409cf3:	mov    r8,rsi
  409cf6:	mov    rbx,r15
  409cf9:	call   0x407150
  409cfe:	xchg   ax,ax
  409d00:	mov    rcx,rbx
  409d03:	call   0x422858
  409d08:	xor    eax,eax
  409d0a:	jmp    0x409b6b
  409d0f:	nop
  409d10:	mov    r15,QWORD PTR [rip+0x2d3fd]        # 0x437114
  409d17:	call   r15
  409d1a:	cmp    DWORD PTR [rax],0x2
  409d1d:	jne    0x409d91
  409d1f:	mov    edx,0x5c
  409d24:	mov    rcx,rbx
  409d27:	call   0x422788
  409d2c:	test   rax,rax
  409d2f:	je     0x409d73
  409d31:	sub    rax,rbx
  409d34:	cmp    rax,0x103
  409d3a:	mov    r14,rax
  409d3d:	ja     0x409d91
  409d3f:	lea    r9,[rsp+0x70]
  409d44:	mov    r8,rax
  409d47:	mov    rdx,rbx
  409d4a:	mov    rcx,r9
  409d4d:	call   0x422810
  409d52:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
  409d58:	mov    rdx,r13
  409d5b:	mov    rcx,rax
  409d5e:	call   rsi
  409d60:	test   eax,eax
  409d62:	jne    0x409d91
  409d64:	movzx  eax,WORD PTR [rsp+0x36]
  409d69:	and    ax,0xf000
  409d6d:	cmp    ax,0x4000
  409d71:	jne    0x409d91
  409d73:	mov    edx,0xffff8000
  409d78:	mov    WORD PTR [rsp+0x36],dx
  409d7d:	mov    rcx,rbx
  409d80:	call   0x422720
  409d85:	mov    DWORD PTR [r12],edi
  409d89:	mov    rax,rbx
  409d8c:	jmp    0x409b6b
  409d91:	mov    r12,QWORD PTR [rbp+0x28]
  409d95:	mov    rbp,QWORD PTR [rip+0x1bb84]        # 0x425920
  409d9c:	mov    rsi,QWORD PTR [rip+0x2d321]        # 0x4370c4
  409da3:	call   rsi
  409da5:	lea    rcx,[rax+0x60]
  409da9:	mov    r8,r12
  409dac:	mov    rdx,rbp
  409daf:	call   0x407150
  409db4:	call   r15
  409db7:	mov    ecx,DWORD PTR [rax]
  409db9:	call   0x4227b8
  409dbe:	mov    r13,rax
  409dc1:	call   r15
  409dc4:	mov    rbp,QWORD PTR [rip+0x1bad5]        # 0x4258a0
  409dcb:	mov    r12d,DWORD PTR [rax]
  409dce:	call   rsi
  409dd0:	lea    rcx,[rax+0x60]
  409dd4:	mov    QWORD PTR [rsp+0x20],rbx
  409dd9:	mov    r9,r13
  409ddc:	mov    r8d,r12d
  409ddf:	mov    rdx,rbp
  409de2:	call   0x407150
  409de7:	test   edi,edi
  409de9:	jne    0x409d00
  409def:	xor    eax,eax
  409df1:	jmp    0x409b6b
  409df6:	mov    rcx,rbx
  409df9:	call   0x422858
  409dfe:	jmp    0x409cb5
  409e03:	mov    rbx,QWORD PTR [rip+0x2d30a]        # 0x437114
  409e0a:	call   rbx
  409e0c:	cmp    DWORD PTR [rax],0x2
  409e0f:	jne    0x409e7e
  409e11:	mov    eax,0xffff8000
  409e16:	mov    rbx,r15
  409e19:	mov    edi,0x1
  409e1e:	mov    WORD PTR [rsp+0x36],ax
  409e23:	jmp    0x409d7d
  409e28:	mov    rcx,r13
  409e2b:	call   0x422838
  409e30:	test   rax,rax
  409e33:	mov    rbx,rax
  409e36:	jne    0x409b05
  409e3c:	mov    rsi,QWORD PTR [rip+0x1badd]        # 0x425920
  409e43:	mov    rdi,QWORD PTR [rbp+0x28]
  409e47:	mov    rbx,QWORD PTR [rip+0x2d276]        # 0x4370c4
  409e4e:	call   rbx
  409e50:	lea    rcx,[rax+0x60]
  409e54:	mov    rdx,rsi
  409e57:	mov    r8,rdi
  409e5a:	call   0x407150
  409e5f:	mov    rsi,QWORD PTR [rip+0x1ba5a]        # 0x4258c0
  409e66:	call   rbx
  409e68:	lea    rcx,[rax+0x60]
  409e6c:	mov    r8,r13
  409e6f:	mov    rdx,rsi
  409e72:	call   0x407150
  409e77:	xor    eax,eax
  409e79:	jmp    0x409b6b
  409e7e:	mov    rbp,QWORD PTR [rbp+0x28]
  409e82:	mov    rdi,QWORD PTR [rip+0x1ba97]        # 0x425920
  409e89:	mov    rsi,QWORD PTR [rip+0x2d234]        # 0x4370c4
  409e90:	call   rsi
  409e92:	lea    rcx,[rax+0x60]
  409e96:	mov    r8,rbp
  409e99:	mov    rdx,rdi
  409e9c:	call   0x407150
  409ea1:	call   rbx
  409ea3:	mov    ecx,DWORD PTR [rax]
  409ea5:	call   0x4227b8
  409eaa:	mov    rbp,rax
  409ead:	call   rbx
  409eaf:	mov    rbx,QWORD PTR [rip+0x1b9ea]        # 0x4258a0
  409eb6:	mov    edi,DWORD PTR [rax]
  409eb8:	call   rsi
  409eba:	lea    rcx,[rax+0x60]
  409ebe:	mov    r9,rbp
  409ec1:	mov    QWORD PTR [rsp+0x20],r15
  409ec6:	mov    r8d,edi
  409ec9:	mov    rdx,rbx
  409ecc:	call   0x407150
  409ed1:	mov    rcx,r15
  409ed4:	call   0x422858
  409ed9:	xor    eax,eax
  409edb:	jmp    0x409b6b
  409ee0:	mov    rbx,r15
  409ee3:	mov    edi,0x1
  409ee8:	jmp    0x409d7d
  409eed:	mov    ecx,0x1
  409ef2:	call   0x407590
  409ef7:	nop
  409ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  409f00:	push   r15
  409f02:	push   r14
  409f04:	push   r13
  409f06:	push   r12
  409f08:	push   rbp
  409f09:	push   rdi
  409f0a:	push   rsi
  409f0b:	push   rbx
  409f0c:	sub    rsp,0x148
  409f13:	test   rcx,rcx
  409f16:	mov    rsi,rcx
  409f19:	mov    rbx,rdx
  409f1c:	je     0x409fc9
  409f22:	lea    r12,[rsp+0x30]
  409f27:	xor    r13d,r13d
  409f2a:	mov    rcx,rsi
  409f2d:	call   0x4227a8
  409f32:	mov    edx,r13d
  409f35:	cmp    rdx,rax
  409f38:	jae    0x409fc9
  409f3e:	movsxd rax,r13d
  409f41:	add    rax,rsi
  409f44:	movzx  edx,BYTE PTR [rax]
  409f47:	cmp    dl,0x3a
  409f4a:	jne    0x409f5c
  409f4c:	nop    DWORD PTR [rax+0x0]
  409f50:	add    rax,0x1
  409f54:	movzx  edx,BYTE PTR [rax]
  409f57:	cmp    dl,0x3a
  409f5a:	je     0x409f50
  409f5c:	mov    rcx,r12
  409f5f:	add    rax,0x1
  409f63:	test   dl,dl
  409f65:	mov    BYTE PTR [rcx],dl
  409f67:	je     0x409f71
  409f69:	cmp    dl,0x3a
  409f6c:	jne    0x409fd1
  409f6e:	mov    BYTE PTR [rcx],0x0
  409f71:	mov    r13d,eax
  409f74:	sub    r13d,esi
  409f77:	cmp    BYTE PTR [rsp+0x30],0x0
  409f7c:	je     0x409fc9
  409f7e:	mov    rcx,r12
  409f81:	call   0x41d2d0
  409f86:	test   rax,rax
  409f89:	mov    rdi,rax
  409f8c:	jne    0x409fa0
  409f8e:	jmp    0x409f2a
  409f90:	lea    rcx,[rax+0x8]
  409f94:	mov    rdx,rbx
  409f97:	call   0x4227c8
  409f9c:	test   eax,eax
  409f9e:	je     0x409ff0
  409fa0:	mov    rcx,rdi
  409fa3:	call   0x41d4b0
  409fa8:	test   rax,rax
  409fab:	jne    0x409f90
  409fad:	mov    rcx,rdi
  409fb0:	call   0x41d6d0
  409fb5:	mov    rcx,rsi
  409fb8:	call   0x4227a8
  409fbd:	mov    edx,r13d
  409fc0:	cmp    rdx,rax
  409fc3:	jb     0x409f3e
  409fc9:	xor    r14d,r14d
  409fcc:	jmp    0x40a1ce
  409fd1:	add    rcx,0x1
  409fd5:	mov    rdx,rcx
  409fd8:	sub    rdx,r12
  409fdb:	cmp    edx,0x103
  409fe1:	ja     0x409f71
  409fe3:	movzx  edx,BYTE PTR [rax]
  409fe6:	jmp    0x409f5f
  409feb:	nop    DWORD PTR [rax+rax*1+0x0]
  409ff0:	cmp    BYTE PTR [rbx],0x2f
  409ff3:	je     0x40a20b
  409ff9:	cmp    BYTE PTR [rsp+0x30],0x0
  409ffe:	jne    0x40a21b
  40a004:	mov    rcx,rbx
  40a007:	call   0x4227a8
  40a00c:	lea    rcx,[rax+0x3]
  40a010:	call   0x422820
  40a015:	lea    rcx,[rax+0x2]
  40a019:	mov    rbp,rax
  40a01c:	mov    BYTE PTR [rax],0x2e
  40a01f:	mov    BYTE PTR [rax+0x1],0x2f
  40a023:	mov    BYTE PTR [rax+0x2],0x0
  40a027:	mov    rdx,rbx
  40a02a:	call   0x4227c0
  40a02f:	mov    rcx,rbp
  40a032:	mov    edx,0x5
  40a037:	call   0x4226f0
  40a03c:	test   eax,eax
  40a03e:	mov    rcx,rbp
  40a041:	js     0x40a1f1
  40a047:	call   0x422718
  40a04c:	cmp    BYTE PTR [rbp+0x0],0x2f
  40a050:	mov    r14,rax
  40a053:	sete   BYTE PTR [rsp+0x2f]
  40a058:	movzx  eax,BYTE PTR [rsp+0x2f]
  40a05d:	xor    r15d,r15d
  40a060:	xor    r13d,r13d
  40a063:	add    eax,0x2e
  40a066:	mov    BYTE PTR [rsp+0x2f],al
  40a06a:	movzx  eax,BYTE PTR [r14]
  40a06e:	xchg   ax,ax
  40a070:	test   al,al
  40a072:	mov    rbx,r13
  40a075:	je     0x40a1a7
  40a07b:	cmp    al,0x2f
  40a07d:	je     0x40a1e5
  40a083:	add    rbx,0x1
  40a087:	mov    esi,r15d
  40a08a:	jmp    0x40a097
  40a08c:	nop    DWORD PTR [rax+0x0]
  40a090:	test   dl,dl
  40a092:	je     0x40a0a8
  40a094:	mov    rbx,rcx
  40a097:	movzx  edx,BYTE PTR [r14+rbx*1]
  40a09c:	add    esi,0x1
  40a09f:	lea    rcx,[rbx+0x1]
  40a0a3:	cmp    dl,0x2f
  40a0a6:	jne    0x40a090
  40a0a8:	test   dl,dl
  40a0aa:	lea    r15d,[rsi+0x1]
  40a0ae:	je     0x40a1a7
  40a0b4:	movsxd r13,r15d
  40a0b7:	lea    r12,[r14+r13*1]
  40a0bb:	movzx  eax,BYTE PTR [r12]
  40a0c0:	cmp    al,0x2f
  40a0c2:	jne    0x40a0f6
  40a0c4:	lea    r8,[r14+r13*1+0x1]
  40a0c9:	mov    r9d,r15d
  40a0cc:	nop    DWORD PTR [rax+0x0]
  40a0d0:	mov    rdx,r8
  40a0d3:	add    r8,0x1
  40a0d7:	add    r9d,0x1
  40a0db:	cmp    BYTE PTR [r8-0x1],0x2f
  40a0e0:	je     0x40a0d0
  40a0e2:	cmp    r15d,r9d
  40a0e5:	je     0x40a0f6
  40a0e7:	lea    rcx,[r14+rbx*1+0x1]
  40a0ec:	call   0x4227c0
  40a0f1:	movzx  eax,BYTE PTR [r12]
  40a0f6:	test   esi,esi
  40a0f8:	je     0x40a10e
  40a0fa:	cmp    BYTE PTR [r14+rbx*1-0x1],0x5c
  40a100:	je     0x40a070
  40a106:	test   al,al
  40a108:	je     0x40a299
  40a10e:	cmp    al,0x2e
  40a110:	jne    0x40a070
  40a116:	lea    rdx,[r14+r13*1+0x1]
  40a11b:	movzx  ecx,BYTE PTR [rdx]
  40a11e:	test   cl,cl
  40a120:	je     0x40a299
  40a126:	cmp    cl,0x2f
  40a129:	je     0x40a203
  40a12f:	cmp    cl,0x2e
  40a132:	jne    0x40a070
  40a138:	lea    rdx,[r14+r13*1+0x2]
  40a13d:	movzx  ecx,BYTE PTR [rdx]
  40a140:	test   cl,cl
  40a142:	je     0x40a14d
  40a144:	cmp    cl,0x2f
  40a147:	jne    0x40a070
  40a14d:	movsxd rcx,esi
  40a150:	sub    rcx,0x1
  40a154:	jmp    0x40a16f
  40a156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a160:	lea    rax,[rcx-0x1]
  40a164:	cmp    BYTE PTR [r14+rax*1+0x1],0x2f
  40a16a:	je     0x40a17e
  40a16c:	mov    rcx,rax
  40a16f:	sub    esi,0x1
  40a172:	cmp    esi,0xffffffff
  40a175:	jne    0x40a160
  40a177:	mov    rcx,0xffffffffffffffff
  40a17e:	lea    rcx,[r14+rcx*1+0x1]
  40a183:	call   0x4227c0
  40a188:	mov    r15d,0x0
  40a18e:	test   esi,esi
  40a190:	cmovns r15d,esi
  40a194:	movsxd r13,r15d
  40a197:	movzx  eax,BYTE PTR [r14+r13*1]
  40a19c:	mov    rbx,r13
  40a19f:	test   al,al
  40a1a1:	jne    0x40a07b
  40a1a7:	cmp    BYTE PTR [r14],0x0
  40a1ab:	jne    0x40a2ae
  40a1b1:	movzx  eax,BYTE PTR [rsp+0x2f]
  40a1b6:	mov    rcx,rbp
  40a1b9:	mov    BYTE PTR [r14+0x1],0x0
  40a1be:	mov    BYTE PTR [r14],al
  40a1c1:	call   0x422858
  40a1c6:	mov    rcx,rdi
  40a1c9:	call   0x41d6d0
  40a1ce:	mov    rax,r14
  40a1d1:	add    rsp,0x148
  40a1d8:	pop    rbx
  40a1d9:	pop    rsi
  40a1da:	pop    rdi
  40a1db:	pop    rbp
  40a1dc:	pop    r12
  40a1de:	pop    r13
  40a1e0:	pop    r14
  40a1e2:	pop    r15
  40a1e4:	ret    
  40a1e5:	mov    esi,r15d
  40a1e8:	add    r15d,0x1
  40a1ec:	jmp    0x40a0b4
  40a1f1:	call   0x422858
  40a1f6:	mov    rcx,rdi
  40a1f9:	call   0x41d6d0
  40a1fe:	jmp    0x409fb5
  40a203:	mov    rcx,r12
  40a206:	jmp    0x40a183
  40a20b:	mov    rcx,rbx
  40a20e:	call   0x422718
  40a213:	mov    rbp,rax
  40a216:	jmp    0x40a02f
  40a21b:	mov    r14,r12
  40a21e:	mov    edx,DWORD PTR [r14]
  40a221:	add    r14,0x4
  40a225:	lea    eax,[rdx-0x1010101]
  40a22b:	not    edx
  40a22d:	and    eax,edx
  40a22f:	and    eax,0x80808080
  40a234:	je     0x40a21e
  40a236:	mov    edx,eax
  40a238:	mov    rcx,rbx
  40a23b:	shr    edx,0x10
  40a23e:	test   eax,0x8080
  40a243:	cmove  eax,edx
  40a246:	lea    rdx,[r14+0x2]
  40a24a:	cmove  r14,rdx
  40a24e:	add    al,al
  40a250:	sbb    r14,0x3
  40a254:	sub    r14,r12
  40a257:	call   0x4227a8
  40a25c:	lea    rcx,[r14+rax*1+0x2]
  40a261:	call   0x422820
  40a266:	lea    r8,[r14+0x1]
  40a26a:	mov    rcx,rax
  40a26d:	mov    rdx,r12
  40a270:	mov    rbp,rax
  40a273:	call   0x422810
  40a278:	movsxd rcx,r14d
  40a27b:	cmp    BYTE PTR [rbp+rcx*1-0x1],0x2f
  40a280:	je     0x40a2c3
  40a282:	mov    BYTE PTR [rbp+rcx*1+0x0],0x2f
  40a287:	lea    ecx,[r14+0x1]
  40a28b:	movsxd rcx,ecx
  40a28e:	add    rcx,rbp
  40a291:	mov    BYTE PTR [rcx],0x0
  40a294:	jmp    0x40a027
  40a299:	lea    eax,[r15-0x1]
  40a29d:	cdqe   
  40a29f:	mov    BYTE PTR [r14+rax*1],0x0
  40a2a4:	cmp    BYTE PTR [r14],0x0
  40a2a8:	je     0x40a1b1
  40a2ae:	mov    rcx,rbp
  40a2b1:	call   0x422858
  40a2b6:	mov    rcx,rdi
  40a2b9:	call   0x41d6d0
  40a2be:	jmp    0x40a1ce
  40a2c3:	add    rcx,rbp
  40a2c6:	jmp    0x40a027
  40a2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2d0:	push   r12
  40a2d2:	push   rbp
  40a2d3:	push   rdi
  40a2d4:	push   rsi
  40a2d5:	push   rbx
  40a2d6:	sub    rsp,0x30
  40a2da:	test   rcx,rcx
  40a2dd:	mov    rbx,rcx
  40a2e0:	mov    rdi,rdx
  40a2e3:	je     0x40a468
  40a2e9:	mov    r9d,DWORD PTR [rcx+0x10]
  40a2ed:	mov    eax,r9d
  40a2f0:	shr    eax,0x15
  40a2f3:	and    eax,0x1
  40a2f6:	test   r9d,0x2000
  40a2fd:	mov    BYTE PTR [rip+0x29331],al        # 0x433634
  40a303:	je     0x40a332
  40a305:	mov    rax,QWORD PTR [rcx+0xa0]
  40a30c:	test   rax,rax
  40a30f:	je     0x40a332
  40a311:	mov    edx,DWORD PTR [rip+0x1b429]        # 0x425740
  40a317:	test   edx,edx
  40a319:	je     0x40a332
  40a31b:	mov    edx,r9d
  40a31e:	and    edx,0x30000
  40a324:	cmp    edx,0x20000
  40a32a:	je     0x40a3c1
  40a330:	call   rax
  40a332:	mov    esi,DWORD PTR [rbx]
  40a334:	lea    eax,[rsi-0x19000]
  40a33a:	cmp    eax,0x10001
  40a33f:	ja     0x40a3d9
  40a345:	cmp    QWORD PTR [rbx+0x28],0x0
  40a34a:	je     0x40a360
  40a34c:	xor    eax,eax
  40a34e:	add    rsp,0x30
  40a352:	pop    rbx
  40a353:	pop    rsi
  40a354:	pop    rdi
  40a355:	pop    rbp
  40a356:	pop    r12
  40a358:	ret    
  40a359:	nop    DWORD PTR [rax+0x0]
  40a360:	mov    edx,0x5c
  40a365:	mov    rcx,rdi
  40a368:	call   0x422788
  40a36d:	test   rax,rax
  40a370:	je     0x40a3d3
  40a372:	add    rax,0x1
  40a376:	mov    QWORD PTR [rbx+0x28],rax
  40a37a:	lea    rcx,[rip+0x1e3e1]        # 0x428762
  40a381:	call   0x422838
  40a386:	mov    rdx,rdi
  40a389:	mov    rcx,rax
  40a38c:	call   0x409f00
  40a391:	test   rax,rax
  40a394:	lea    rdx,[rip+0x1f765]        # 0x429b00
  40a39b:	lea    rcx,[rip+0x1af5e]        # 0x425300
  40a3a2:	cmove  rax,rdi
  40a3a6:	mov    QWORD PTR [rbx+0x20],rax
  40a3aa:	mov    eax,0x2d
  40a3af:	nop
  40a3b0:	add    rdx,0x1
  40a3b4:	mov    BYTE PTR [rcx+rax*1],0x2d
  40a3b8:	movzx  eax,BYTE PTR [rdx]
  40a3bb:	test   al,al
  40a3bd:	jne    0x40a3b0
  40a3bf:	jmp    0x40a34c
  40a3c1:	or     r9d,0x10000
  40a3c8:	mov    DWORD PTR [rcx+0x10],r9d
  40a3cc:	call   rax
  40a3ce:	jmp    0x40a332
  40a3d3:	mov    QWORD PTR [rbx+0x28],rdi
  40a3d7:	jmp    0x40a37a
  40a3d9:	mov    r12,QWORD PTR [rip+0x1b3a0]        # 0x425780
  40a3e0:	mov    rbp,QWORD PTR [rip+0x2ccdd]        # 0x4370c4
  40a3e7:	call   rbp
  40a3e9:	lea    rcx,[rax+0x60]
  40a3ed:	mov    eax,esi
  40a3ef:	mov    r8,rdi
  40a3f2:	and    eax,0x7f
  40a3f5:	mov    rdx,r12
  40a3f8:	mov    DWORD PTR [rsp+0x28],eax
  40a3fc:	mov    eax,esi
  40a3fe:	sar    esi,0xc
  40a401:	sar    eax,0x7
  40a404:	mov    r9d,esi
  40a407:	and    eax,0x1f
  40a40a:	mov    DWORD PTR [rsp+0x20],eax
  40a40e:	call   0x407150
  40a413:	cmp    DWORD PTR [rbx],0x29001
  40a419:	jle    0x40a454
  40a41b:	call   rbp
  40a41d:	mov    rcx,QWORD PTR [rip+0x1b354]        # 0x425778
  40a424:	lea    rdx,[rax+0x60]
  40a428:	call   0x422868
  40a42d:	call   rbp
  40a42f:	lea    rcx,[rip+0x221c7]        # 0x42c5fd
  40a436:	lea    r9,[rax+0x60]
  40a43a:	mov    r8d,0x1
  40a440:	mov    edx,0x8
  40a445:	call   0x422840
  40a44a:	mov    eax,0xffffffff
  40a44f:	jmp    0x40a34e
  40a454:	call   rbp
  40a456:	mov    rcx,QWORD PTR [rip+0x1b333]        # 0x425790
  40a45d:	lea    rdx,[rax+0x60]
  40a461:	call   0x422868
  40a466:	jmp    0x40a42d
  40a468:	call   QWORD PTR [rip+0x2cc56]        # 0x4370c4
  40a46e:	mov    rcx,QWORD PTR [rip+0x1b2fb]        # 0x425770
  40a475:	lea    rdx,[rax+0x60]
  40a479:	call   0x422868
  40a47e:	mov    eax,0xffffffff
  40a483:	jmp    0x40a34e
  40a488:	nop    DWORD PTR [rax+rax*1+0x0]
  40a490:	push   r15
  40a492:	push   r14
  40a494:	push   r13
  40a496:	push   r12
  40a498:	push   rbp
  40a499:	push   rdi
  40a49a:	push   rsi
  40a49b:	push   rbx
  40a49c:	sub    rsp,0x98
  40a4a3:	test   BYTE PTR [rcx+0x12],0x4
  40a4a7:	mov    rbx,rcx
  40a4aa:	mov    rdi,rdx
  40a4ad:	mov    rbp,r8
  40a4b0:	je     0x40a4bd
  40a4b2:	cmp    WORD PTR [rdx+0x6],0x57
  40a4b7:	je     0x40a8ce
  40a4bd:	cmp    QWORD PTR [rdi+0x28],0x0
  40a4c2:	je     0x40a7b0
  40a4c8:	mov    eax,DWORD PTR [rip+0x29162]        # 0x433630
  40a4ce:	lea    rsi,[rip+0x1f62b]        # 0x429b00
  40a4d5:	mov    rdx,QWORD PTR [rip+0x2912c]        # 0x433608
  40a4dc:	lea    rcx,[rsi+rax*1+0xcb]
  40a4e4:	call   0x422868
  40a4e9:	mov    rbp,QWORD PTR [rdi+0x28]
  40a4ed:	test   rbp,rbp
  40a4f0:	je     0x40a582
  40a4f6:	cmp    DWORD PTR [rbp+0x4],0x8000
  40a4fd:	je     0x40a7c0
  40a503:	mov    rdx,QWORD PTR [rip+0x290fe]        # 0x433608
  40a50a:	mov    rcx,QWORD PTR [rip+0x1b557]        # 0x425a68
  40a511:	call   0x422868
  40a516:	movsxd rax,DWORD PTR [rbp+0x0]
  40a51a:	nop    WORD PTR [rax+rax*1+0x0]
  40a520:	lea    rdx,[rax+rax*2]
  40a524:	mov    r9,QWORD PTR [rbx+0x78]
  40a528:	mov    rcx,QWORD PTR [rip+0x290d9]        # 0x433608
  40a52f:	add    rbp,0x4
  40a533:	lea    rax,[rax+rdx*4]
  40a537:	mov    edx,DWORD PTR [rip+0x290f3]        # 0x433630
  40a53d:	lea    rax,[r9+rax*8]
  40a541:	mov    r8,QWORD PTR [rax+0x50]
  40a545:	lea    rdx,[rsi+rdx*1+0xe5]
  40a54d:	call   0x407150
  40a552:	movsxd rax,DWORD PTR [rbp+0x0]
  40a556:	cmp    eax,0x8000
  40a55b:	jne    0x40a520
  40a55d:	cmp    QWORD PTR [rdi+0x30],0x0
  40a562:	je     0x40a5ed
  40a568:	mov    eax,DWORD PTR [rip+0x290c2]        # 0x433630
  40a56e:	mov    rdx,QWORD PTR [rip+0x29093]        # 0x433608
  40a575:	lea    rcx,[rsi+rax*1+0xd9]
  40a57d:	call   0x422868
  40a582:	mov    rbp,QWORD PTR [rdi+0x30]
  40a586:	test   rbp,rbp
  40a589:	je     0x40a5ed
  40a58b:	cmp    DWORD PTR [rbp+0x4],0x8000
  40a592:	je     0x40a852
  40a598:	mov    rdx,QWORD PTR [rip+0x29069]        # 0x433608
  40a59f:	mov    rcx,QWORD PTR [rip+0x1b462]        # 0x425a08
  40a5a6:	call   0x422868
  40a5ab:	movsxd rax,DWORD PTR [rbp+0x0]
  40a5af:	nop
  40a5b0:	lea    rdx,[rax+rax*2]
  40a5b4:	mov    rcx,QWORD PTR [rbx+0x78]
  40a5b8:	add    rbp,0x4
  40a5bc:	lea    rax,[rax+rdx*4]
  40a5c0:	mov    edx,DWORD PTR [rip+0x2906a]        # 0x433630
  40a5c6:	lea    rax,[rcx+rax*8]
  40a5ca:	mov    rcx,QWORD PTR [rip+0x29037]        # 0x433608
  40a5d1:	mov    r8,QWORD PTR [rax+0x50]
  40a5d5:	lea    rdx,[rsi+rdx*1+0xe5]
  40a5dd:	call   0x407150
  40a5e2:	movsxd rax,DWORD PTR [rbp+0x0]
  40a5e6:	cmp    eax,0x8000
  40a5eb:	jne    0x40a5b0
  40a5ed:	mov    r8,QWORD PTR [rdi+0x58]
  40a5f1:	test   r8,r8
  40a5f4:	je     0x40a60f
  40a5f6:	mov    edx,DWORD PTR [rip+0x29034]        # 0x433630
  40a5fc:	mov    rcx,QWORD PTR [rip+0x29005]        # 0x433608
  40a603:	add    rdx,QWORD PTR [rip+0x1b336]        # 0x425940
  40a60a:	call   0x407150
  40a60f:	mov    edx,DWORD PTR [rdi+0x10]
  40a612:	mov    eax,edx
  40a614:	and    eax,0xf000
  40a619:	shr    eax,0xc
  40a61c:	cmp    eax,0x5
  40a61f:	je     0x40a780
  40a625:	cmp    eax,0x7
  40a628:	je     0x40a700
  40a62e:	and    dh,0x8
  40a631:	jne    0x40a717
  40a637:	movzx  eax,WORD PTR [rdi+0x8]
  40a63b:	cmp    ax,0x8000
  40a63f:	je     0x40a64b
  40a641:	cmp    ax,WORD PTR [rdi+0x4]
  40a645:	jne    0x40a735
  40a64b:	mov    eax,DWORD PTR [rdi+0x10]
  40a64e:	test   ah,0x1
  40a651:	je     0x40a66d
  40a653:	cmp    QWORD PTR [rbx+0x58],0x0
  40a658:	je     0x40a8be
  40a65e:	movzx  edx,WORD PTR [rdi]
  40a661:	cmp    edx,DWORD PTR [rbx+0xb4]
  40a667:	jl     0x40a831
  40a66d:	and    eax,0xf000
  40a672:	cmp    eax,0x4000
  40a677:	je     0x40a8a0
  40a67d:	movzx  r8d,WORD PTR [rdi+0xa]
  40a682:	cmp    r8w,0x1
  40a687:	ja     0x40a7f0
  40a68d:	movzx  r8d,WORD PTR [rdi+0xc]
  40a692:	cmp    r8w,0x1
  40a697:	je     0x40a6c3
  40a699:	jb     0x40a882
  40a69f:	cmp    r8w,0xffff
  40a6a4:	jne    0x40a813
  40a6aa:	mov    ecx,DWORD PTR [rip+0x28f80]        # 0x433630
  40a6b0:	mov    rdx,QWORD PTR [rip+0x28f51]        # 0x433608
  40a6b7:	add    rcx,QWORD PTR [rip+0x1b2f2]        # 0x4259b0
  40a6be:	call   0x422868
  40a6c3:	test   BYTE PTR [rbx+0x10],0x3
  40a6c7:	jne    0x40a763
  40a6cd:	movzx  eax,WORD PTR [rdi]
  40a6d0:	cmp    WORD PTR [rbx+0xae],ax
  40a6d7:	jne    0x40a763
  40a6dd:	mov    ecx,DWORD PTR [rip+0x28f4d]        # 0x433630
  40a6e3:	mov    rdx,QWORD PTR [rip+0x28f1e]        # 0x433608
  40a6ea:	add    rcx,QWORD PTR [rip+0x1b247]        # 0x425938
  40a6f1:	call   0x422868
  40a6f6:	jmp    0x40a763
  40a6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a700:	mov    rdx,rdi
  40a703:	mov    ecx,0x1
  40a708:	call   QWORD PTR [rdi+0x38]
  40a70b:	mov    edx,DWORD PTR [rdi+0x10]
  40a70e:	and    dh,0x8
  40a711:	je     0x40a637
  40a717:	mov    ecx,DWORD PTR [rip+0x28f13]        # 0x433630
  40a71d:	mov    rdx,QWORD PTR [rip+0x28ee4]        # 0x433608
  40a724:	add    rcx,QWORD PTR [rip+0x1b22d]        # 0x425958
  40a72b:	call   0x422868
  40a730:	jmp    0x40a637
  40a735:	lea    rdx,[rax+rax*2]
  40a739:	mov    rcx,QWORD PTR [rip+0x28ec8]        # 0x433608
  40a740:	lea    rax,[rax+rdx*4]
  40a744:	mov    rdx,QWORD PTR [rbx+0x78]
  40a748:	lea    rax,[rdx+rax*8]
  40a74c:	mov    edx,DWORD PTR [rip+0x28ede]        # 0x433630
  40a752:	add    rdx,QWORD PTR [rip+0x1b1cf]        # 0x425928
  40a759:	mov    r8,QWORD PTR [rax+0x50]
  40a75d:	call   0x407150
  40a762:	nop
  40a763:	add    rsp,0x98
  40a76a:	pop    rbx
  40a76b:	pop    rsi
  40a76c:	pop    rdi
  40a76d:	pop    rbp
  40a76e:	pop    r12
  40a770:	pop    r13
  40a772:	pop    r14
  40a774:	pop    r15
  40a776:	ret    
  40a777:	nop    WORD PTR [rax+rax*1+0x0]
  40a780:	mov    rax,QWORD PTR [rdi+0x38]
  40a784:	test   rax,rax
  40a787:	je     0x40a62e
  40a78d:	lea    rcx,[rip+0xffffffffffffc9ec]        # 0x407180
  40a794:	cmp    rax,rcx
  40a797:	je     0x40a62e
  40a79d:	mov    rdx,rdi
  40a7a0:	mov    ecx,0x1
  40a7a5:	call   rax
  40a7a7:	mov    edx,DWORD PTR [rdi+0x10]
  40a7aa:	jmp    0x40a62e
  40a7af:	nop
  40a7b0:	cmp    QWORD PTR [rdi+0x30],0x0
  40a7b5:	jne    0x40a4c8
  40a7bb:	jmp    0x40a5ed
  40a7c0:	movsxd rax,DWORD PTR [rbp+0x0]
  40a7c4:	mov    r10,QWORD PTR [rbx+0x78]
  40a7c8:	mov    rcx,QWORD PTR [rip+0x28e39]        # 0x433608
  40a7cf:	lea    rdx,[rax+rax*2]
  40a7d3:	lea    rax,[rax+rdx*4]
  40a7d7:	mov    rdx,QWORD PTR [rip+0x1b282]        # 0x425a60
  40a7de:	lea    rax,[r10+rax*8]
  40a7e2:	mov    r8,QWORD PTR [rax+0x50]
  40a7e6:	call   0x407150
  40a7eb:	jmp    0x40a55d
  40a7f0:	mov    edx,DWORD PTR [rip+0x28e3a]        # 0x433630
  40a7f6:	movzx  r9d,WORD PTR [rdi+0xc]
  40a7fb:	add    rdx,QWORD PTR [rip+0x1b19e]        # 0x4259a0
  40a802:	mov    rcx,QWORD PTR [rip+0x28dff]        # 0x433608
  40a809:	call   0x407150
  40a80e:	jmp    0x40a6c3
  40a813:	mov    edx,DWORD PTR [rip+0x28e17]        # 0x433630
  40a819:	mov    rcx,QWORD PTR [rip+0x28de8]        # 0x433608
  40a820:	add    rdx,QWORD PTR [rip+0x1b261]        # 0x425a88
  40a827:	call   0x407150
  40a82c:	jmp    0x40a6c3
  40a831:	mov    ecx,DWORD PTR [rip+0x28df9]        # 0x433630
  40a837:	mov    rdx,QWORD PTR [rip+0x28dca]        # 0x433608
  40a83e:	add    rcx,QWORD PTR [rip+0x1b173]        # 0x4259b8
  40a845:	call   0x422868
  40a84a:	mov    eax,DWORD PTR [rdi+0x10]
  40a84d:	jmp    0x40a66d
  40a852:	movsxd rax,DWORD PTR [rbp+0x0]
  40a856:	mov    r8,QWORD PTR [rbx+0x78]
  40a85a:	mov    rcx,QWORD PTR [rip+0x28da7]        # 0x433608
  40a861:	lea    rdx,[rax+rax*2]
  40a865:	lea    rax,[rax+rdx*4]
  40a869:	mov    rdx,QWORD PTR [rip+0x1b1a0]        # 0x425a10
  40a870:	lea    rax,[r8+rax*8]
  40a874:	mov    r8,QWORD PTR [rax+0x50]
  40a878:	call   0x407150
  40a87d:	jmp    0x40a5ed
  40a882:	mov    ecx,DWORD PTR [rip+0x28da8]        # 0x433630
  40a888:	mov    rdx,QWORD PTR [rip+0x28d79]        # 0x433608
  40a88f:	add    rcx,QWORD PTR [rip+0x1b162]        # 0x4259f8
  40a896:	call   0x422868
  40a89b:	jmp    0x40a6c3
  40a8a0:	mov    ecx,DWORD PTR [rip+0x28d8a]        # 0x433630
  40a8a6:	mov    rdx,QWORD PTR [rip+0x28d5b]        # 0x433608
  40a8ad:	add    rcx,QWORD PTR [rip+0x1b0e4]        # 0x425998
  40a8b4:	call   0x422868
  40a8b9:	jmp    0x40a6c3
  40a8be:	cmp    QWORD PTR [rbx+0x30],0x0
  40a8c3:	jne    0x40a65e
  40a8c9:	jmp    0x40a66d
  40a8ce:	mov    eax,DWORD PTR [rip+0x28d5c]        # 0x433630
  40a8d4:	lea    rdx,[rip+0x1f225]        # 0x429b00
  40a8db:	mov    edi,DWORD PTR [rcx+0xb4]
  40a8e1:	mov    rsi,QWORD PTR [rcx+0x78]
  40a8e5:	mov    r8,QWORD PTR [rip+0x1b1b4]        # 0x425aa0
  40a8ec:	xor    r12d,r12d
  40a8ef:	mov    rcx,QWORD PTR [rip+0x28d12]        # 0x433608
  40a8f6:	lea    rdx,[rdx+rax*1+0xe5]
  40a8fe:	call   0x407150
  40a903:	test   DWORD PTR [rsi+0x10],0x6280000
  40a90a:	jne    0x40a932
  40a90c:	movzx  eax,BYTE PTR [rsi+0x2]
  40a910:	cmp    al,0x7f
  40a912:	ja     0x40a922
  40a914:	lea    rdx,[rip+0x21de5]        # 0x42c700
  40a91b:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  40a920:	jne    0x40a932
  40a922:	mov    rcx,QWORD PTR [rsi+0x50]
  40a926:	call   0x4227a8
  40a92b:	cmp    r12,rax
  40a92e:	cmovb  r12,rax
  40a932:	sub    edi,0x1
  40a935:	add    rsi,0x68
  40a939:	test   edi,edi
  40a93b:	jg     0x40a903
  40a93d:	lea    r14,[rsp+0x30]
  40a942:	lea    r9d,[r12+0x4]
  40a947:	lea    r8,[rip+0x1e387]        # 0x428cd5
  40a94e:	mov    edx,0xc
  40a953:	mov    rcx,r14
  40a956:	call   0x407540
  40a95b:	mov    eax,DWORD PTR [rip+0x28ccf]        # 0x433630
  40a961:	test   eax,eax
  40a963:	je     0x40a96e
  40a965:	sub    eax,0x1
  40a968:	mov    DWORD PTR [rip+0x28cc2],eax        # 0x433630
  40a96e:	mov    r15d,DWORD PTR [rbx+0xb4]
  40a975:	mov    rsi,QWORD PTR [rbx+0x78]
  40a979:	lea    r12,[rbx+0x10]
  40a97d:	lea    r13,[rsp+0x40]
  40a982:	test   DWORD PTR [rsi+0x10],0x6280000
  40a989:	jne    0x40aa60
  40a98f:	movzx  eax,BYTE PTR [rsi+0x2]
  40a993:	cmp    al,0x7f
  40a995:	ja     0x40a9a9
  40a997:	lea    rdx,[rip+0x21d62]        # 0x42c700
  40a99e:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  40a9a3:	jne    0x40aa60
  40a9a9:	lea    rdx,[rsi+0x2]
  40a9ad:	lea    r9,[rip+0x28d6c]        # 0x433720
  40a9b4:	lea    r8,[rip+0x28d5d]        # 0x433718
  40a9bb:	mov    rcx,r12
  40a9be:	call   0x4089c0
  40a9c3:	mov    eax,DWORD PTR [rsi+0x10]
  40a9c6:	test   eax,0x10000
  40a9cb:	je     0x40aa92
  40a9d1:	mov    rdi,QWORD PTR [rip+0x28d28]        # 0x433700
  40a9d8:	mov    rax,QWORD PTR [rip+0x28dc1]        # 0x4337a0
  40a9df:	test   rax,rax
  40a9e2:	jne    0x40a9f4
  40a9e4:	jmp    0x40ab3d
  40a9e9:	nop    DWORD PTR [rax+0x0]
  40a9f0:	add    rdi,0x1
  40a9f4:	movzx  ecx,BYTE PTR [rdi]
  40a9f7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40a9fb:	jne    0x40a9f0
  40a9fd:	test   cl,cl
  40a9ff:	mov    r9,QWORD PTR [rsi+0x50]
  40aa03:	jne    0x40ab1f
  40aa09:	lea    r8,[rip+0x1dd57]        # 0x428767
  40aa10:	mov    edx,0x50
  40aa15:	mov    rcx,r13
  40aa18:	call   0x407540
  40aa1d:	mov    r9,QWORD PTR [rsi+0x40]
  40aa21:	mov    rcx,QWORD PTR [rip+0x28be0]        # 0x433608
  40aa28:	mov    r8,r13
  40aa2b:	mov    rdx,r14
  40aa2e:	call   0x407150
  40aa33:	mov    eax,DWORD PTR [rsi+0x10]
  40aa36:	and    eax,0xf000
  40aa3b:	shr    eax,0xc
  40aa3e:	cmp    eax,0x2
  40aa41:	je     0x40aa76
  40aa43:	cmp    eax,0x4
  40aa46:	je     0x40aa76
  40aa48:	mov    r8,rbp
  40aa4b:	mov    rdx,rsi
  40aa4e:	mov    rcx,rbx
  40aa51:	call   0x40a490
  40aa56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa60:	sub    r15d,0x1
  40aa64:	add    rsi,0x68
  40aa68:	test   r15d,r15d
  40aa6b:	jg     0x40a982
  40aa71:	jmp    0x40a763
  40aa76:	movzx  eax,BYTE PTR [rip+0x28be3]        # 0x433660
  40aa7d:	cmp    QWORD PTR [rsi+0x38],0x0
  40aa82:	mov    edx,0x1
  40aa87:	cmovne eax,edx
  40aa8a:	mov    BYTE PTR [rip+0x28bd0],al        # 0x433660
  40aa90:	jmp    0x40aa48
  40aa92:	and    eax,0xf000
  40aa97:	shr    eax,0xc
  40aa9a:	cmp    eax,0x8
  40aa9d:	ja     0x40ab4c
  40aaa3:	lea    rdi,[rip+0x1dcc6]        # 0x428770
  40aaaa:	movsxd rax,DWORD PTR [rdi+rax*4]
  40aaae:	add    rax,rdi
  40aab1:	jmp    rax
  40aab3:	mov    rdi,QWORD PTR [rip+0x28c1e]        # 0x4336d8
  40aaba:	jmp    0x40a9d8
  40aabf:	mov    rdi,QWORD PTR [rip+0x28c32]        # 0x4336f8
  40aac6:	jmp    0x40a9d8
  40aacb:	mov    rdi,QWORD PTR [rip+0x28bfe]        # 0x4336d0
  40aad2:	jmp    0x40a9d8
  40aad7:	mov    rdi,QWORD PTR [rip+0x28c0a]        # 0x4336e8
  40aade:	jmp    0x40a9d8
  40aae3:	mov    rdi,QWORD PTR [rip+0x28c06]        # 0x4336f0
  40aaea:	jmp    0x40a9d8
  40aaef:	mov    rdi,QWORD PTR [rip+0x28bea]        # 0x4336e0
  40aaf6:	jmp    0x40a9d8
  40aafb:	mov    rdi,QWORD PTR [rip+0x28bbe]        # 0x4336c0
  40ab02:	jmp    0x40a9d8
  40ab07:	mov    rdi,QWORD PTR [rip+0x28bfa]        # 0x433708
  40ab0e:	jmp    0x40a9d8
  40ab13:	mov    rdi,QWORD PTR [rip+0x28c16]        # 0x433730
  40ab1a:	jmp    0x40a9d8
  40ab1f:	lea    r8,[rip+0x1dc44]        # 0x42876a
  40ab26:	mov    QWORD PTR [rsp+0x20],rdi
  40ab2b:	mov    edx,0x50
  40ab30:	mov    rcx,r13
  40ab33:	call   0x407540
  40ab38:	jmp    0x40aa1d
  40ab3d:	mov    ecx,0xc
  40ab42:	call   0x408aa0
  40ab47:	jmp    0x40a9f4
  40ab4c:	mov    rdi,QWORD PTR [rsi+0x50]
  40ab50:	mov    rsi,QWORD PTR [rbx+0x28]
  40ab54:	mov    rbx,QWORD PTR [rip+0x1acf5]        # 0x425850
  40ab5b:	call   QWORD PTR [rip+0x2c563]        # 0x4370c4
  40ab61:	lea    rcx,[rax+0x60]
  40ab65:	mov    r9,rdi
  40ab68:	mov    r8,rsi
  40ab6b:	mov    rdx,rbx
  40ab6e:	call   0x407150
  40ab73:	mov    rcx,QWORD PTR [rip+0x1ac46]        # 0x4257c0
  40ab7a:	call   0x4075c0
  40ab7f:	nop
  40ab80:	push   r15
  40ab82:	push   r14
  40ab84:	push   r13
  40ab86:	push   r12
  40ab88:	push   rbp
  40ab89:	push   rdi
  40ab8a:	push   rsi
  40ab8b:	push   rbx
  40ab8c:	sub    rsp,0x98
  40ab93:	mov    rax,QWORD PTR [rcx+0x78]
  40ab97:	mov    r13d,DWORD PTR [rcx+0xb0]
  40ab9e:	xor    r15d,r15d
  40aba1:	mov    rdi,rcx
  40aba4:	mov    ebp,edx
  40aba6:	mov    QWORD PTR [rsp+0xf0],r8
  40abae:	xor    r14d,r14d
  40abb1:	lea    rbx,[rax+0x2]
  40abb5:	lea    rax,[rcx+0x10]
  40abb9:	mov    QWORD PTR [rsp+0x38],rax
  40abbe:	lea    rax,[rsp+0x40]
  40abc3:	mov    QWORD PTR [rsp+0x30],rax
  40abc8:	mov    eax,r15d
  40abcb:	mov    r15d,r13d
  40abce:	mov    r13d,eax
  40abd1:	jmp    0x40abf3
  40abd3:	cmp    eax,0x80100
  40abd8:	je     0x40ada2
  40abde:	sub    r15d,0x1
  40abe2:	add    r13d,0x1
  40abe6:	add    rbx,0x68
  40abea:	test   r15d,r15d
  40abed:	jle    0x40ae20
  40abf3:	mov    eax,DWORD PTR [rbx+0xe]
  40abf6:	lea    rsi,[rbx-0x2]
  40abfa:	test   eax,0x6080000
  40abff:	jne    0x40abd3
  40ac01:	test   eax,0x200000
  40ac06:	je     0x40ac31
  40ac08:	test   ebp,ebp
  40ac0a:	jne    0x40abde
  40ac0c:	mov    r9,QWORD PTR [rsp+0xf0]
  40ac14:	mov    r8,QWORD PTR [rbx+0x3e]
  40ac18:	add    r14d,0x1
  40ac1c:	mov    rdx,QWORD PTR [rip+0x28aed]        # 0x433710
  40ac23:	mov    rcx,QWORD PTR [rip+0x289de]        # 0x433608
  40ac2a:	call   0x407150
  40ac2f:	jmp    0x40abde
  40ac31:	mov    eax,DWORD PTR [rdi+0x10]
  40ac34:	and    eax,0x40000
  40ac39:	je     0x40ac51
  40ac3b:	movzx  edx,BYTE PTR [rbx]
  40ac3e:	cmp    dl,0x7f
  40ac41:	ja     0x40abde
  40ac43:	lea    rcx,[rip+0x21ab6]        # 0x42c700
  40ac4a:	test   BYTE PTR [rcx+rdx*4+0x1],0x40
  40ac4f:	je     0x40abde
  40ac51:	test   ebp,ebp
  40ac53:	sete   r12b
  40ac57:	test   r14d,r14d
  40ac5a:	jle    0x40aca0
  40ac5c:	test   r12b,r12b
  40ac5f:	je     0x40aca0
  40ac61:	cmp    DWORD PTR [rdi+0xb4],r13d
  40ac68:	je     0x40ae50
  40ac6e:	cmp    r15d,0x1
  40ac72:	jne    0x40aca0
  40ac74:	test   eax,eax
  40ac76:	je     0x40aca0
  40ac78:	mov    r9,QWORD PTR [rsp+0xf0]
  40ac80:	mov    r8,QWORD PTR [rip+0x1ae11]        # 0x425a98
  40ac87:	mov    rdx,QWORD PTR [rip+0x28a82]        # 0x433710
  40ac8e:	mov    rcx,QWORD PTR [rip+0x28973]        # 0x433608
  40ac95:	call   0x407150
  40ac9a:	nop    WORD PTR [rax+rax*1+0x0]
  40aca0:	mov    rcx,QWORD PTR [rsp+0x38]
  40aca5:	lea    r9,[rip+0x28a74]        # 0x433720
  40acac:	lea    r8,[rip+0x28a65]        # 0x433718
  40acb3:	mov    rdx,rbx
  40acb6:	call   0x4089c0
  40acbb:	mov    eax,DWORD PTR [rbx+0xe]
  40acbe:	mov    r9,QWORD PTR [rip+0x28a3b]        # 0x433700
  40acc5:	test   eax,0x10000
  40acca:	jne    0x40acf4
  40accc:	and    eax,0xf000
  40acd1:	shr    eax,0xc
  40acd4:	cmp    eax,0x8
  40acd7:	ja     0x40af37
  40acdd:	lea    rdx,[rip+0x1dabc]        # 0x4287a0
  40ace4:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ace8:	add    rdx,rax
  40aceb:	jmp    rdx
  40aced:	mov    r9,QWORD PTR [rip+0x28a3c]        # 0x433730
  40acf4:	mov    r8,QWORD PTR [rip+0x28a2d]        # 0x433728
  40acfb:	lea    rax,[rip+0x1ee49]        # 0x429b4b
  40ad02:	cmp    r8,rax
  40ad05:	je     0x40aee1
  40ad0b:	lea    rax,[rip+0x1ee3b]        # 0x429b4d
  40ad12:	cmp    r8,rax
  40ad15:	je     0x40af10
  40ad1b:	cmp    WORD PTR [rbx+0x8],0x0
  40ad20:	mov    rax,QWORD PTR [rip+0x289d9]        # 0x433700
  40ad27:	mov    edx,0x50
  40ad2c:	cmovne rax,QWORD PTR [rip+0x28994]        # 0x4336c8
  40ad34:	mov    rcx,QWORD PTR [rsp+0x30]
  40ad39:	mov    QWORD PTR [rsp+0x28],rax
  40ad3e:	mov    rax,QWORD PTR [rbx+0x4e]
  40ad42:	mov    QWORD PTR [rsp+0x20],rax
  40ad47:	call   0x407540
  40ad4c:	mov    r9,QWORD PTR [rbx+0x3e]
  40ad50:	mov    r8,QWORD PTR [rsp+0x30]
  40ad55:	lea    rdx,[rip+0x28924]        # 0x433680
  40ad5c:	mov    rcx,QWORD PTR [rip+0x288a5]        # 0x433608
  40ad63:	call   0x407150
  40ad68:	mov    eax,DWORD PTR [rbx+0xe]
  40ad6b:	and    eax,0xf000
  40ad70:	shr    eax,0xc
  40ad73:	cmp    eax,0x2
  40ad76:	je     0x40ae00
  40ad7c:	cmp    eax,0x4
  40ad7f:	je     0x40ae00
  40ad81:	test   r12b,r12b
  40ad84:	je     0x40abde
  40ad8a:	mov    r8,QWORD PTR [rsp+0xf0]
  40ad92:	mov    rdx,rsi
  40ad95:	mov    rcx,rdi
  40ad98:	call   0x40a490
  40ad9d:	jmp    0x40abde
  40ada2:	cmp    QWORD PTR [rbx+0x4e],0x0
  40ada7:	je     0x40abde
  40adad:	test   ebp,ebp
  40adaf:	jne    0x40abde
  40adb5:	mov    rsi,QWORD PTR [rbx+0x3e]
  40adb9:	mov    rcx,QWORD PTR [rsp+0x38]
  40adbe:	lea    r9,[rip+0x2895b]        # 0x433720
  40adc5:	lea    r8,[rip+0x2894c]        # 0x433718
  40adcc:	mov    rdx,rbx
  40adcf:	test   rsi,rsi
  40add2:	cmove  rsi,QWORD PTR [rip+0x1ab76]        # 0x425950
  40adda:	call   0x4089c0
  40addf:	mov    r8,QWORD PTR [rbx+0x4e]
  40ade3:	mov    rdx,QWORD PTR [rip+0x1ab5e]        # 0x425948
  40adea:	mov    rcx,QWORD PTR [rip+0x28817]        # 0x433608
  40adf1:	mov    r9,rsi
  40adf4:	call   0x407150
  40adf9:	jmp    0x40abde
  40adfe:	xchg   ax,ax
  40ae00:	movzx  eax,BYTE PTR [rip+0x28859]        # 0x433660
  40ae07:	cmp    QWORD PTR [rbx+0x36],0x0
  40ae0c:	mov    edx,0x1
  40ae11:	cmovne eax,edx
  40ae14:	mov    BYTE PTR [rip+0x28846],al        # 0x433660
  40ae1a:	jmp    0x40ad81
  40ae1f:	nop
  40ae20:	mov    rdx,QWORD PTR [rip+0x287e1]        # 0x433608
  40ae27:	mov    ecx,0xa
  40ae2c:	call   0x422870
  40ae31:	nop
  40ae32:	add    rsp,0x98
  40ae39:	pop    rbx
  40ae3a:	pop    rsi
  40ae3b:	pop    rdi
  40ae3c:	pop    rbp
  40ae3d:	pop    r12
  40ae3f:	pop    r13
  40ae41:	pop    r14
  40ae43:	pop    r15
  40ae45:	ret    
  40ae46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae50:	test   BYTE PTR [rbx-0x58],0x20
  40ae54:	jne    0x40aca0
  40ae5a:	mov    r9,QWORD PTR [rsp+0xf0]
  40ae62:	mov    r8,QWORD PTR [rip+0x1aac7]        # 0x425930
  40ae69:	mov    rdx,QWORD PTR [rip+0x288a0]        # 0x433710
  40ae70:	mov    rcx,QWORD PTR [rip+0x28791]        # 0x433608
  40ae77:	call   0x407150
  40ae7c:	jmp    0x40aca0
  40ae81:	mov    r9,QWORD PTR [rip+0x28850]        # 0x4336d8
  40ae88:	jmp    0x40acf4
  40ae8d:	mov    r9,QWORD PTR [rip+0x28874]        # 0x433708
  40ae94:	jmp    0x40acf4
  40ae99:	mov    r9,QWORD PTR [rip+0x28820]        # 0x4336c0
  40aea0:	jmp    0x40acf4
  40aea5:	mov    r9,QWORD PTR [rip+0x28834]        # 0x4336e0
  40aeac:	jmp    0x40acf4
  40aeb1:	mov    r9,QWORD PTR [rip+0x28838]        # 0x4336f0
  40aeb8:	jmp    0x40acf4
  40aebd:	mov    r9,QWORD PTR [rip+0x28824]        # 0x4336e8
  40aec4:	jmp    0x40acf4
  40aec9:	mov    r9,QWORD PTR [rip+0x28800]        # 0x4336d0
  40aed0:	jmp    0x40acf4
  40aed5:	mov    r9,QWORD PTR [rip+0x2881c]        # 0x4336f8
  40aedc:	jmp    0x40acf4
  40aee1:	mov    rax,QWORD PTR [rbx+0x4e]
  40aee5:	mov    rcx,QWORD PTR [rsp+0x30]
  40aeea:	lea    r8,[rip+0x1d8a3]        # 0x428794
  40aef1:	mov    QWORD PTR [rsp+0x20],r9
  40aef6:	mov    edx,0x50
  40aefb:	mov    r9,rax
  40aefe:	call   0x407540
  40af03:	jmp    0x40ad4c
  40af08:	nop    DWORD PTR [rax+rax*1+0x0]
  40af10:	mov    rax,QWORD PTR [rbx+0x4e]
  40af14:	mov    rcx,QWORD PTR [rsp+0x30]
  40af19:	lea    r8,[rip+0x1d87b]        # 0x42879b
  40af20:	mov    QWORD PTR [rsp+0x20],r9
  40af25:	mov    edx,0x50
  40af2a:	mov    r9,rax
  40af2d:	call   0x407540
  40af32:	jmp    0x40ad4c
  40af37:	mov    rbp,QWORD PTR [rsi+0x50]
  40af3b:	mov    rbx,QWORD PTR [rip+0x1a90e]        # 0x425850
  40af42:	mov    rsi,QWORD PTR [rdi+0x28]
  40af46:	call   QWORD PTR [rip+0x2c178]        # 0x4370c4
  40af4c:	lea    rcx,[rax+0x60]
  40af50:	mov    r9,rbp
  40af53:	mov    rdx,rbx
  40af56:	mov    r8,rsi
  40af59:	call   0x407150
  40af5e:	mov    ecx,0x46
  40af63:	call   0x407590
  40af68:	nop
  40af69:	nop    DWORD PTR [rax+0x0]
  40af70:	push   r15
  40af72:	push   r14
  40af74:	push   r13
  40af76:	push   r12
  40af78:	push   rbp
  40af79:	push   rdi
  40af7a:	push   rsi
  40af7b:	push   rbx
  40af7c:	sub    rsp,0x38
  40af80:	lea    r13,[rip+0x1e939]        # 0x4298c0
  40af87:	lea    r12,[rip+0x1d836]        # 0x4287c4
  40af8e:	mov    rbx,rcx
  40af91:	mov    QWORD PTR [rsp+0x88],rdx
  40af99:	mov    r14,r8
  40af9c:	mov    rax,QWORD PTR [rip+0x28845]        # 0x4337e8
  40afa3:	test   rax,rax
  40afa6:	je     0x40b355
  40afac:	movzx  edx,BYTE PTR [rbx]
  40afaf:	cmp    BYTE PTR [rax+rdx*1],0x0
  40afb3:	mov    rcx,rdx
  40afb6:	je     0x40b058
  40afbc:	mov    rsi,rbx
  40afbf:	nop
  40afc0:	add    rsi,0x1
  40afc4:	movzx  edx,BYTE PTR [rsi]
  40afc7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40afcb:	mov    rdi,rdx
  40afce:	jne    0x40afc0
  40afd0:	mov    r10,rsi
  40afd3:	mov    rbp,rsi
  40afd6:	sub    r10,rbx
  40afd9:	lea    eax,[r10-0x4]
  40afdd:	cmp    eax,0x4
  40afe0:	ja     0x40b058
  40afe2:	lea    rdx,[rip+0x1df17]        # 0x428f00
  40afe9:	movzx  eax,cl
  40afec:	movzx  r9d,BYTE PTR [rdx+rax*1]
  40aff1:	add    r9d,r10d
  40aff4:	cmp    r9d,0x9
  40aff8:	ja     0x40b058
  40affa:	movsxd r9,r9d
  40affd:	shl    r9,0x4
  40b001:	lea    r15,[r13+r9*1+0x0]
  40b006:	mov    r11,QWORD PTR [r15]
  40b009:	cmp    cl,BYTE PTR [r11]
  40b00c:	jne    0x40b058
  40b00e:	lea    rdx,[r11+0x1]
  40b012:	lea    rcx,[rbx+0x1]
  40b016:	lea    r8d,[r10-0x1]
  40b01a:	mov    QWORD PTR [rsp+0x28],r11
  40b01f:	mov    QWORD PTR [rsp+0x20],r10
  40b024:	call   0x4227a0
  40b029:	test   eax,eax
  40b02b:	jne    0x40b058
  40b02d:	mov    r10,QWORD PTR [rsp+0x20]
  40b032:	mov    r11,QWORD PTR [rsp+0x28]
  40b037:	mov    r10d,r10d
  40b03a:	cmp    BYTE PTR [r11+r10*1],0x0
  40b03f:	jne    0x40b058
  40b041:	cmp    DWORD PTR [r15+0x8],0x6
  40b046:	ja     0x40b058
  40b048:	mov    eax,DWORD PTR [r15+0x8]
  40b04c:	movsxd rax,DWORD PTR [r12+rax*4]
  40b050:	add    rax,r12
  40b053:	jmp    rax
  40b055:	mov    rbx,rsi
  40b058:	mov    rax,QWORD PTR [rip+0x287e9]        # 0x433848
  40b05f:	mov    DWORD PTR [r14],0x0
  40b066:	test   rax,rax
  40b069:	jne    0x40b08a
  40b06b:	mov    ecx,0x21
  40b070:	call   0x408aa0
  40b075:	jmp    0x40b08a
  40b077:	nop    WORD PTR [rax+rax*1+0x0]
  40b080:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b084:	jne    0x40b0ab
  40b086:	add    rbx,0x1
  40b08a:	movzx  edx,BYTE PTR [rbx]
  40b08d:	test   dl,dl
  40b08f:	jne    0x40b080
  40b091:	xor    eax,eax
  40b093:	add    rsp,0x38
  40b097:	pop    rbx
  40b098:	pop    rsi
  40b099:	pop    rdi
  40b09a:	pop    rbp
  40b09b:	pop    r12
  40b09d:	pop    r13
  40b09f:	pop    r14
  40b0a1:	pop    r15
  40b0a3:	ret    
  40b0a4:	mov    DWORD PTR [r14],0x0
  40b0ab:	mov    rax,rbx
  40b0ae:	jmp    0x40b093
  40b0b0:	cmp    dil,0x7f
  40b0b4:	ja     0x40b055
  40b0b6:	lea    rax,[rip+0x21643]        # 0x42c700
  40b0bd:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40b0c4:	je     0x40b055
  40b0c6:	mov    rax,QWORD PTR [rsp+0x88]
  40b0ce:	mov    rbx,rsi
  40b0d1:	mov    DWORD PTR [rax],0x2
  40b0d7:	mov    rax,QWORD PTR [rip+0x286c2]        # 0x4337a0
  40b0de:	test   rax,rax
  40b0e1:	jne    0x40b0f4
  40b0e3:	jmp    0x40b364
  40b0e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0f0:	add    rbx,0x1
  40b0f4:	movzx  ecx,BYTE PTR [rbx]
  40b0f7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40b0fb:	jne    0x40b0f0
  40b0fd:	cmp    cl,0x2f
  40b100:	je     0x40b0a4
  40b102:	cmp    cl,0x3e
  40b105:	je     0x40b0ab
  40b107:	cmp    cl,0x7f
  40b10a:	ja     0x40b091
  40b10c:	lea    rax,[rip+0x215ed]        # 0x42c700
  40b113:	test   BYTE PTR [rax+rcx*4+0x2],0x8
  40b118:	jne    0x40af9c
  40b11e:	jmp    0x40b091
  40b123:	cmp    dil,0x3d
  40b127:	lea    rbp,[rsi+0x1]
  40b12b:	je     0x40b254
  40b131:	xor    edi,edi
  40b133:	mov    rax,QWORD PTR [rip+0x2870e]        # 0x433848
  40b13a:	add    rbp,rdi
  40b13d:	mov    DWORD PTR [r14],0x0
  40b144:	test   rax,rax
  40b147:	je     0x40b3d9
  40b14d:	movzx  edx,BYTE PTR [rbp+0x0]
  40b151:	test   dl,dl
  40b153:	jne    0x40b170
  40b155:	jmp    0x40b091
  40b15a:	nop    WORD PTR [rax+rax*1+0x0]
  40b160:	add    rbp,0x1
  40b164:	movzx  edx,BYTE PTR [rbp+0x0]
  40b168:	test   dl,dl
  40b16a:	je     0x40b091
  40b170:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b174:	je     0x40b160
  40b176:	mov    rbx,rbp
  40b179:	jmp    0x40b0d7
  40b17e:	xchg   ax,ax
  40b180:	mov    rax,QWORD PTR [rip+0x286c1]        # 0x433848
  40b187:	test   rax,rax
  40b18a:	je     0x40b3ca
  40b190:	movzx  edx,BYTE PTR [rsi]
  40b193:	test   dl,dl
  40b195:	jne    0x40b1b0
  40b197:	jmp    0x40b091
  40b19c:	nop    DWORD PTR [rax+0x0]
  40b1a0:	add    rbp,0x1
  40b1a4:	movzx  edx,BYTE PTR [rbp+0x0]
  40b1a8:	test   dl,dl
  40b1aa:	je     0x40b091
  40b1b0:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b1b4:	je     0x40b1a0
  40b1b6:	jmp    0x40b176
  40b1b8:	mov    rax,QWORD PTR [rip+0x28689]        # 0x433848
  40b1bf:	test   rax,rax
  40b1c2:	je     0x40b3bb
  40b1c8:	movzx  edx,BYTE PTR [rsi]
  40b1cb:	test   dl,dl
  40b1cd:	jne    0x40b1e4
  40b1cf:	jmp    0x40b091
  40b1d4:	add    rbp,0x1
  40b1d8:	movzx  edx,BYTE PTR [rbp+0x0]
  40b1dc:	test   dl,dl
  40b1de:	je     0x40b091
  40b1e4:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b1e8:	je     0x40b1d4
  40b1ea:	jmp    0x40b176
  40b1ec:	cmp    dil,0x7f
  40b1f0:	ja     0x40b055
  40b1f6:	lea    rax,[rip+0x21503]        # 0x42c700
  40b1fd:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40b204:	je     0x40b055
  40b20a:	mov    rax,QWORD PTR [rsp+0x88]
  40b212:	mov    rbx,rsi
  40b215:	mov    DWORD PTR [rax],0x0
  40b21b:	jmp    0x40b0d7
  40b220:	cmp    dil,0x7f
  40b224:	ja     0x40b055
  40b22a:	lea    rax,[rip+0x214cf]        # 0x42c700
  40b231:	test   DWORD PTR [rax+rdi*4],0x1000c01
  40b238:	je     0x40b055
  40b23e:	mov    rax,QWORD PTR [rsp+0x88]
  40b246:	mov    rbx,rsi
  40b249:	mov    DWORD PTR [rax],0x1
  40b24f:	jmp    0x40b0d7
  40b254:	mov    rax,QWORD PTR [rip+0x285bd]        # 0x433818
  40b25b:	test   rax,rax
  40b25e:	je     0x40b3e8
  40b264:	movzx  edx,BYTE PTR [rsi+0x1]
  40b268:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b26c:	mov    r8,rdx
  40b26f:	je     0x40b131
  40b275:	mov    rbx,rbp
  40b278:	nop    DWORD PTR [rax+rax*1+0x0]
  40b280:	add    rbx,0x1
  40b284:	movzx  ecx,BYTE PTR [rbx]
  40b287:	cmp    BYTE PTR [rax+rcx*1],0x0
  40b28b:	jne    0x40b280
  40b28d:	mov    rdi,rbx
  40b290:	sub    rdi,rbp
  40b293:	je     0x40b131
  40b299:	cmp    cl,0x7f
  40b29c:	ja     0x40b133
  40b2a2:	lea    rax,[rip+0x21457]        # 0x42c700
  40b2a9:	test   DWORD PTR [rax+rcx*4],0x1000c01
  40b2b0:	je     0x40b133
  40b2b6:	lea    eax,[rdi-0x3]
  40b2b9:	mov    r11d,edi
  40b2bc:	cmp    eax,0xb
  40b2bf:	ja     0x40b133
  40b2c5:	lea    rdx,[rip+0x1dd34]        # 0x429000
  40b2cc:	movzx  eax,r8b
  40b2d0:	movzx  eax,BYTE PTR [rdx+rax*1]
  40b2d4:	add    eax,edi
  40b2d6:	cmp    eax,0x11
  40b2d9:	ja     0x40b133
  40b2df:	movsxd r9,eax
  40b2e2:	lea    rax,[rip+0x1e6d7]        # 0x4299c0
  40b2e9:	shl    r9,0x4
  40b2ed:	add    r9,rax
  40b2f0:	mov    r10,QWORD PTR [r9]
  40b2f3:	mov    QWORD PTR [rsp+0x28],r9
  40b2f8:	cmp    BYTE PTR [r10],r8b
  40b2fb:	jne    0x40b133
  40b301:	lea    rdx,[r10+0x1]
  40b305:	lea    rcx,[rsi+0x2]
  40b309:	lea    r8d,[r11-0x1]
  40b30d:	mov    QWORD PTR [rsp+0x20],r10
  40b312:	call   0x4227a0
  40b317:	test   eax,eax
  40b319:	jne    0x40b133
  40b31f:	mov    r10,QWORD PTR [rsp+0x20]
  40b324:	mov    eax,edi
  40b326:	cmp    BYTE PTR [r10+rax*1],0x0
  40b32b:	jne    0x40b133
  40b331:	mov    r9,QWORD PTR [rsp+0x28]
  40b336:	cmp    DWORD PTR [r9+0x8],0x9
  40b33b:	ja     0x40b133
  40b341:	mov    edx,DWORD PTR [r9+0x8]
  40b345:	lea    rax,[rip+0x1d494]        # 0x4287e0
  40b34c:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40b350:	add    rax,rdx
  40b353:	jmp    rax
  40b355:	mov    ecx,0x15
  40b35a:	call   0x408aa0
  40b35f:	jmp    0x40afac
  40b364:	mov    ecx,0xc
  40b369:	call   0x408aa0
  40b36e:	jmp    0x40b0f4
  40b373:	mov    DWORD PTR [r14],0x6
  40b37a:	jmp    0x40b0d7
  40b37f:	mov    DWORD PTR [r14],0x4
  40b386:	jmp    0x40b0d7
  40b38b:	mov    DWORD PTR [r14],0x2
  40b392:	jmp    0x40b0d7
  40b397:	mov    DWORD PTR [r14],0x3
  40b39e:	jmp    0x40b0d7
  40b3a3:	mov    DWORD PTR [r14],0x5
  40b3aa:	jmp    0x40b0d7
  40b3af:	mov    DWORD PTR [r14],0x1
  40b3b6:	jmp    0x40b0d7
  40b3bb:	mov    ecx,0x21
  40b3c0:	call   0x408aa0
  40b3c5:	jmp    0x40b1c8
  40b3ca:	mov    ecx,0x21
  40b3cf:	call   0x408aa0
  40b3d4:	jmp    0x40b190
  40b3d9:	mov    ecx,0x21
  40b3de:	call   0x408aa0
  40b3e3:	jmp    0x40b14d
  40b3e8:	mov    ecx,0x1b
  40b3ed:	call   0x408aa0
  40b3f2:	jmp    0x40b264
  40b3f7:	nop    WORD PTR [rax+rax*1+0x0]
  40b400:	push   r15
  40b402:	push   r14
  40b404:	push   r13
  40b406:	push   r12
  40b408:	push   rbp
  40b409:	push   rdi
  40b40a:	push   rsi
  40b40b:	push   rbx
  40b40c:	sub    rsp,0x48
  40b410:	mov    rsi,QWORD PTR [rip+0x2be25]        # 0x43723c
  40b417:	mov    rbx,rcx
  40b41a:	jmp    0x40b424
  40b41c:	nop    DWORD PTR [rax+0x0]
  40b420:	add    rbx,0x1
  40b424:	movzx  ebp,BYTE PTR [rbx]
  40b427:	mov    ecx,ebp
  40b429:	call   rsi
  40b42b:	test   eax,eax
  40b42d:	jne    0x40b420
  40b42f:	cmp    bpl,0x50
  40b433:	je     0x40b5c0
  40b439:	cmp    bpl,0x54
  40b43d:	je     0x40b564
  40b443:	sub    ebp,0x30
  40b446:	cmp    ebp,0x9
  40b449:	ja     0x40ba63
  40b44f:	mov    rbp,QWORD PTR [rip+0x2bcbe]        # 0x437114
  40b456:	lea    r13,[rsp+0x30]
  40b45b:	mov    QWORD PTR [rsp+0x30],rbx
  40b460:	xor    edi,edi
  40b462:	xor    r12d,r12d
  40b465:	call   rbp
  40b467:	mov    rcx,QWORD PTR [rsp+0x30]
  40b46c:	mov    r8d,0xa
  40b472:	mov    rdx,r13
  40b475:	mov    DWORD PTR [rax],0x0
  40b47b:	call   0x422778
  40b480:	movsxd r14,eax
  40b483:	call   rbp
  40b485:	mov    ecx,DWORD PTR [rax]
  40b487:	test   ecx,ecx
  40b489:	jne    0x40b553
  40b48f:	mov    rbx,QWORD PTR [rsp+0x30]
  40b494:	movzx  r15d,BYTE PTR [rbx]
  40b498:	cmp    r15b,0x3a
  40b49c:	jne    0x40b4ac
  40b49e:	jmp    0x40b8eb
  40b4a3:	mov    QWORD PTR [rsp+0x30],rbx
  40b4a8:	movzx  r15d,BYTE PTR [rbx]
  40b4ac:	add    rbx,0x1
  40b4b0:	movzx  ecx,r15b
  40b4b4:	call   rsi
  40b4b6:	test   eax,eax
  40b4b8:	jne    0x40b4a3
  40b4ba:	cmp    r15b,0x59
  40b4be:	je     0x40b74b
  40b4c4:	jle    0x40b580
  40b4ca:	cmp    r15b,0x6d
  40b4ce:	je     0x40b77d
  40b4d4:	jg     0x40b6f0
  40b4da:	cmp    r15b,0x64
  40b4de:	je     0x40b762
  40b4e4:	cmp    r15b,0x68
  40b4e8:	jne    0x40b553
  40b4ea:	cmp    r12d,0x4
  40b4ee:	ja     0x40b553
  40b4f0:	mov    r8d,0xe10
  40b4f6:	mov    r12d,0x5
  40b4fc:	nop    DWORD PTR [rax+0x0]
  40b500:	mov    rcx,rdi
  40b503:	mov    rdx,r14
  40b506:	call   0x408110
  40b50b:	mov    rdi,rax
  40b50e:	mov    rax,QWORD PTR [rsp+0x30]
  40b513:	lea    rbx,[rax+0x1]
  40b517:	mov    QWORD PTR [rsp+0x30],rbx
  40b51c:	jmp    0x40b525
  40b51e:	xchg   ax,ax
  40b520:	mov    QWORD PTR [rsp+0x30],rbx
  40b525:	movzx  r14d,BYTE PTR [rbx]
  40b529:	add    rbx,0x1
  40b52d:	mov    ecx,r14d
  40b530:	call   rsi
  40b532:	test   eax,eax
  40b534:	jne    0x40b520
  40b536:	test   r14b,r14b
  40b539:	je     0x40ba5b
  40b53f:	sub    r14d,0x30
  40b543:	cmp    r14d,0x9
  40b547:	ja     0x40b553
  40b549:	cmp    r12d,0x7
  40b54d:	jne    0x40b465
  40b553:	call   rbp
  40b555:	mov    DWORD PTR [rax],0x16
  40b55b:	mov    rax,0xffffffffffffffff
  40b562:	jmp    0x40b56d
  40b564:	lea    rcx,[rbx+0x1]
  40b568:	call   0x408270
  40b56d:	add    rsp,0x48
  40b571:	pop    rbx
  40b572:	pop    rsi
  40b573:	pop    rdi
  40b574:	pop    rbp
  40b575:	pop    r12
  40b577:	pop    r13
  40b579:	pop    r14
  40b57b:	pop    r15
  40b57d:	ret    
  40b57e:	xchg   ax,ax
  40b580:	cmp    r15b,0x44
  40b584:	je     0x40b762
  40b58a:	jle    0x40b722
  40b590:	cmp    r15b,0x4d
  40b594:	je     0x40b707
  40b59a:	cmp    r15b,0x57
  40b59e:	jne    0x40b553
  40b5a0:	cmp    r12d,0x2
  40b5a4:	ja     0x40b553
  40b5a6:	mov    r8d,0x93a80
  40b5ac:	mov    r12d,0x3
  40b5b2:	jmp    0x40b500
  40b5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40b5c0:	lea    rcx,[rbx+0x1]
  40b5c4:	call   0x422718
  40b5c9:	test   rax,rax
  40b5cc:	mov    r13,rax
  40b5cf:	je     0x40ba96
  40b5d5:	mov    edx,0x54
  40b5da:	mov    rcx,rax
  40b5dd:	call   0x4227d0
  40b5e2:	test   rax,rax
  40b5e5:	mov    r12,rax
  40b5e8:	je     0x40b8e0
  40b5ee:	lea    rdi,[rax+0x1]
  40b5f2:	mov    rcx,r13
  40b5f5:	mov    BYTE PTR [rax],0x0
  40b5f8:	call   0x4070f0
  40b5fd:	mov    rcx,rdi
  40b600:	mov    rbx,rax
  40b603:	call   0x4070f0
  40b608:	test   rax,rax
  40b60b:	mov    r12,rax
  40b60e:	setne  r14b
  40b612:	mov    edx,0x2d
  40b617:	mov    rcx,rbx
  40b61a:	call   0x4227d0
  40b61f:	test   rax,rax
  40b622:	je     0x40b798
  40b628:	lea    rsi,[rsp+0x20]
  40b62d:	mov    r8,rax
  40b630:	xor    ecx,ecx
  40b632:	mov    r9d,0x1e13380
  40b638:	mov    QWORD PTR [rsp+0x20],rbx
  40b63d:	mov    rdx,rsi
  40b640:	call   0x4081a0
  40b645:	mov    rbx,rax
  40b648:	mov    rax,QWORD PTR [rsp+0x20]
  40b64d:	mov    edx,0x2d
  40b652:	lea    rcx,[rax+0x1]
  40b656:	mov    QWORD PTR [rsp+0x20],rcx
  40b65b:	call   0x4227d0
  40b660:	test   rax,rax
  40b663:	mov    r8,rax
  40b666:	je     0x40ba7b
  40b66c:	mov    r9d,0x278d00
  40b672:	mov    rdx,rsi
  40b675:	mov    rcx,rbx
  40b678:	call   0x4081a0
  40b67d:	mov    rdi,rax
  40b680:	mov    rax,QWORD PTR [rsp+0x20]
  40b685:	lea    rbx,[rax+0x1]
  40b689:	mov    rcx,rbx
  40b68c:	mov    QWORD PTR [rsp+0x20],rbx
  40b691:	call   0x4227a8
  40b696:	lea    r8,[rbx+rax*1]
  40b69a:	mov    rcx,rdi
  40b69d:	mov    r9d,0x15180
  40b6a3:	mov    rdx,rsi
  40b6a6:	call   0x4081a0
  40b6ab:	mov    rbp,QWORD PTR [rip+0x2ba62]        # 0x437114
  40b6b2:	mov    rdi,rax
  40b6b5:	call   rbp
  40b6b7:	mov    r8d,DWORD PTR [rax]
  40b6ba:	test   r8d,r8d
  40b6bd:	jne    0x40b6e0
  40b6bf:	test   r14b,r14b
  40b6c2:	je     0x40b6e0
  40b6c4:	mov    rcx,r12
  40b6c7:	call   0x408270
  40b6cc:	mov    rcx,rdi
  40b6cf:	mov    r8d,0x1
  40b6d5:	mov    rdx,rax
  40b6d8:	call   0x408110
  40b6dd:	mov    rdi,rax
  40b6e0:	mov    rcx,r13
  40b6e3:	call   0x422858
  40b6e8:	mov    rax,rdi
  40b6eb:	jmp    0x40b56d
  40b6f0:	cmp    r15b,0x73
  40b6f4:	jne    0x40b741
  40b6f6:	mov    r8d,0x1
  40b6fc:	mov    r12d,0x7
  40b702:	jmp    0x40b500
  40b707:	cmp    r12d,0x1
  40b70b:	ja     0x40b553
  40b711:	mov    r8d,0x278d00
  40b717:	mov    r12d,0x2
  40b71d:	jmp    0x40b500
  40b722:	test   r15b,r15b
  40b725:	jne    0x40b553
  40b72b:	mov    r8d,0x1
  40b731:	mov    rdx,r14
  40b734:	mov    rcx,rdi
  40b737:	call   0x408110
  40b73c:	jmp    0x40b56d
  40b741:	cmp    r15b,0x79
  40b745:	jne    0x40b553
  40b74b:	test   r12d,r12d
  40b74e:	jne    0x40b553
  40b754:	mov    r8d,0x1e13380
  40b75a:	mov    r12b,0x1
  40b75d:	jmp    0x40b500
  40b762:	cmp    r12d,0x3
  40b766:	ja     0x40b553
  40b76c:	mov    r8d,0x15180
  40b772:	mov    r12d,0x4
  40b778:	jmp    0x40b500
  40b77d:	cmp    r12d,0x6
  40b781:	je     0x40b553
  40b787:	mov    r8d,0x3c
  40b78d:	mov    r12d,0x6
  40b793:	jmp    0x40b500
  40b798:	lea    rdx,[rip+0x1d069]        # 0x428808
  40b79f:	mov    rcx,rbx
  40b7a2:	call   0x422790
  40b7a7:	test   rax,rax
  40b7aa:	je     0x40b9b9
  40b7b0:	mov    edx,0x59
  40b7b5:	mov    rcx,rbx
  40b7b8:	mov    QWORD PTR [rsp+0x28],rbx
  40b7bd:	xor    edi,edi
  40b7bf:	call   0x4227d0
  40b7c4:	test   rax,rax
  40b7c7:	je     0x40b7ef
  40b7c9:	lea    rdx,[rsp+0x28]
  40b7ce:	mov    r9d,0x1e13380
  40b7d4:	mov    r8,rax
  40b7d7:	xor    ecx,ecx
  40b7d9:	call   0x4081a0
  40b7de:	mov    rdi,rax
  40b7e1:	mov    rax,QWORD PTR [rsp+0x28]
  40b7e6:	lea    rbx,[rax+0x1]
  40b7ea:	mov    QWORD PTR [rsp+0x28],rbx
  40b7ef:	mov    edx,0x4d
  40b7f4:	mov    rcx,rbx
  40b7f7:	call   0x4227d0
  40b7fc:	test   rax,rax
  40b7ff:	je     0x40b828
  40b801:	lea    rdx,[rsp+0x28]
  40b806:	mov    rcx,rdi
  40b809:	mov    r9d,0x278d00
  40b80f:	mov    r8,rax
  40b812:	call   0x4081a0
  40b817:	mov    rdi,rax
  40b81a:	mov    rax,QWORD PTR [rsp+0x28]
  40b81f:	lea    rbx,[rax+0x1]
  40b823:	mov    QWORD PTR [rsp+0x28],rbx
  40b828:	mov    edx,0x57
  40b82d:	mov    rcx,rbx
  40b830:	call   0x4227d0
  40b835:	test   rax,rax
  40b838:	je     0x40b861
  40b83a:	lea    rdx,[rsp+0x28]
  40b83f:	mov    rcx,rdi
  40b842:	mov    r9d,0x93a80
  40b848:	mov    r8,rax
  40b84b:	call   0x4081a0
  40b850:	mov    rdi,rax
  40b853:	mov    rax,QWORD PTR [rsp+0x28]
  40b858:	lea    rbx,[rax+0x1]
  40b85c:	mov    QWORD PTR [rsp+0x28],rbx
  40b861:	mov    edx,0x44
  40b866:	mov    rcx,rbx
  40b869:	call   0x4227d0
  40b86e:	test   rax,rax
  40b871:	je     0x40b8a5
  40b873:	lea    rdx,[rsp+0x28]
  40b878:	mov    rcx,rdi
  40b87b:	mov    r9d,0x15180
  40b881:	mov    r8,rax
  40b884:	call   0x4081a0
  40b889:	mov    rdi,rax
  40b88c:	mov    rax,QWORD PTR [rsp+0x28]
  40b891:	lea    rbx,[rax+0x1]
  40b895:	mov    QWORD PTR [rsp+0x28],rbx
  40b89a:	jmp    0x40b8a5
  40b89c:	nop    DWORD PTR [rax+0x0]
  40b8a0:	mov    QWORD PTR [rsp+0x28],rbx
  40b8a5:	movzx  ecx,BYTE PTR [rbx]
  40b8a8:	add    rbx,0x1
  40b8ac:	mov    ebp,ecx
  40b8ae:	call   rsi
  40b8b0:	test   eax,eax
  40b8b2:	jne    0x40b8a0
  40b8b4:	test   bpl,bpl
  40b8b7:	mov    rbp,QWORD PTR [rip+0x2b856]        # 0x437114
  40b8be:	je     0x40b6b5
  40b8c4:	call   rbp
  40b8c6:	mov    rdi,0xffffffffffffffff
  40b8cd:	mov    DWORD PTR [rax],0x16
  40b8d3:	jmp    0x40b6b5
  40b8d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8e0:	mov    rbx,r13
  40b8e3:	xor    r14d,r14d
  40b8e6:	jmp    0x40b612
  40b8eb:	cmp    r12d,0x6
  40b8ef:	je     0x40b553
  40b8f5:	lea    r15,[rsp+0x38]
  40b8fa:	mov    QWORD PTR [rsp+0x38],rbx
  40b8ff:	mov    r13d,0x3
  40b905:	call   rbp
  40b907:	mov    DWORD PTR [rax],0x0
  40b90d:	mov    rbx,QWORD PTR [rsp+0x38]
  40b912:	movzx  eax,BYTE PTR [rbx]
  40b915:	cmp    al,0x3a
  40b917:	jne    0x40b970
  40b919:	sub    r13d,0x1
  40b91d:	je     0x40b970
  40b91f:	lea    rcx,[rbx+0x1]
  40b923:	mov    rdx,r15
  40b926:	mov    r8d,0xa
  40b92c:	call   0x422770
  40b931:	mov    ebx,eax
  40b933:	call   rbp
  40b935:	mov    edx,DWORD PTR [rax]
  40b937:	test   edx,edx
  40b939:	jne    0x40b956
  40b93b:	mov    rdx,r14
  40b93e:	mov    ecx,ebx
  40b940:	mov    r8d,0x3c
  40b946:	call   0x408110
  40b94b:	mov    r14,rax
  40b94e:	call   rbp
  40b950:	mov    eax,DWORD PTR [rax]
  40b952:	test   eax,eax
  40b954:	je     0x40b90d
  40b956:	mov    rdx,0xffffffffffffffff
  40b95d:	mov    r8d,0x1
  40b963:	mov    rcx,rdi
  40b966:	call   0x408110
  40b96b:	jmp    0x40b56d
  40b970:	add    rbx,0x1
  40b974:	mov    r13d,eax
  40b977:	jmp    0x40b98e
  40b979:	nop    DWORD PTR [rax+0x0]
  40b980:	mov    QWORD PTR [rsp+0x38],rbx
  40b985:	add    rbx,0x1
  40b989:	movzx  r13d,BYTE PTR [rbx-0x1]
  40b98e:	movzx  ecx,r13b
  40b992:	call   rsi
  40b994:	test   eax,eax
  40b996:	jne    0x40b980
  40b998:	test   r13b,r13b
  40b99b:	jne    0x40baae
  40b9a1:	cmp    r14,0xe0f
  40b9a8:	jle    0x40b9b4
  40b9aa:	cmp    r12d,0x5
  40b9ae:	je     0x40b553
  40b9b4:	mov    rdx,r14
  40b9b7:	jmp    0x40b95d
  40b9b9:	mov    rcx,rbx
  40b9bc:	call   0x4227a8
  40b9c1:	cmp    rax,0x8
  40b9c5:	jne    0x40ba7b
  40b9cb:	mov    eax,DWORD PTR [rbx]
  40b9cd:	lea    rdi,[rsp+0x38]
  40b9d2:	lea    rsi,[rsp+0x30]
  40b9d7:	lea    r8,[rsp+0x34]
  40b9dc:	mov    r9d,0x1e13380
  40b9e2:	xor    ecx,ecx
  40b9e4:	mov    rdx,rdi
  40b9e7:	mov    BYTE PTR [rsp+0x34],0x0
  40b9ec:	mov    QWORD PTR [rsp+0x38],rsi
  40b9f1:	mov    DWORD PTR [rsp+0x30],eax
  40b9f5:	lea    rbp,[rsi+0x2]
  40b9f9:	call   0x4081a0
  40b9fe:	movzx  edx,WORD PTR [rbx+0x4]
  40ba02:	mov    r8,rbp
  40ba05:	mov    r9d,0x278d00
  40ba0b:	mov    rcx,rax
  40ba0e:	mov    BYTE PTR [rsp+0x32],0x0
  40ba13:	mov    QWORD PTR [rsp+0x38],rsi
  40ba18:	mov    WORD PTR [rsp+0x30],dx
  40ba1d:	mov    rdx,rdi
  40ba20:	call   0x4081a0
  40ba25:	movzx  edx,WORD PTR [rbx+0x6]
  40ba29:	mov    r8,rbp
  40ba2c:	mov    r9d,0x15180
  40ba32:	mov    rcx,rax
  40ba35:	mov    BYTE PTR [rsp+0x32],0x0
  40ba3a:	mov    QWORD PTR [rsp+0x38],rsi
  40ba3f:	mov    WORD PTR [rsp+0x30],dx
  40ba44:	mov    rdx,rdi
  40ba47:	call   0x4081a0
  40ba4c:	mov    rbp,QWORD PTR [rip+0x2b6c1]        # 0x437114
  40ba53:	mov    rdi,rax
  40ba56:	jmp    0x40b6b5
  40ba5b:	mov    rax,rdi
  40ba5e:	jmp    0x40b56d
  40ba63:	call   QWORD PTR [rip+0x2b6ab]        # 0x437114
  40ba69:	mov    DWORD PTR [rax],0x16
  40ba6f:	mov    rax,0xffffffffffffffff
  40ba76:	jmp    0x40b56d
  40ba7b:	mov    rbp,QWORD PTR [rip+0x2b692]        # 0x437114
  40ba82:	mov    rdi,0xffffffffffffffff
  40ba89:	call   rbp
  40ba8b:	mov    DWORD PTR [rax],0x16
  40ba91:	jmp    0x40b6b5
  40ba96:	call   QWORD PTR [rip+0x2b678]        # 0x437114
  40ba9c:	mov    DWORD PTR [rax],0xc
  40baa2:	mov    rax,0xffffffffffffffff
  40baa9:	jmp    0x40b56d
  40baae:	call   rbp
  40bab0:	mov    DWORD PTR [rax],0x16
  40bab6:	jmp    0x40b956
  40babb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bac0:	push   rbp
  40bac1:	push   rdi
  40bac2:	push   rsi
  40bac3:	push   rbx
  40bac4:	sub    rsp,0x28
  40bac8:	lea    eax,[rdx-0x3]
  40bacb:	mov    rsi,rdx
  40bace:	cmp    eax,0xb
  40bad1:	ja     0x40bb30
  40bad3:	movzx  eax,BYTE PTR [rcx]
  40bad6:	lea    r8,[rip+0x1d523]        # 0x429000
  40badd:	mov    rdx,rax
  40bae0:	movzx  eax,BYTE PTR [r8+rax*1]
  40bae5:	add    eax,esi
  40bae7:	cmp    eax,0x11
  40baea:	ja     0x40bb30
  40baec:	cdqe   
  40baee:	lea    rbx,[rip+0x1decb]        # 0x4299c0
  40baf5:	xor    ebp,ebp
  40baf7:	shl    rax,0x4
  40bafb:	add    rbx,rax
  40bafe:	mov    rdi,QWORD PTR [rbx]
  40bb01:	cmp    dl,BYTE PTR [rdi]
  40bb03:	jne    0x40bb25
  40bb05:	lea    rdx,[rdi+0x1]
  40bb09:	lea    r8d,[rsi-0x1]
  40bb0d:	add    rcx,0x1
  40bb11:	call   0x4227a0
  40bb16:	test   eax,eax
  40bb18:	jne    0x40bb25
  40bb1a:	mov    esi,esi
  40bb1c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  40bb20:	jne    0x40bb25
  40bb22:	mov    ebp,DWORD PTR [rbx+0x8]
  40bb25:	mov    eax,ebp
  40bb27:	add    rsp,0x28
  40bb2b:	pop    rbx
  40bb2c:	pop    rsi
  40bb2d:	pop    rdi
  40bb2e:	pop    rbp
  40bb2f:	ret    
  40bb30:	xor    ebp,ebp
  40bb32:	mov    eax,ebp
  40bb34:	add    rsp,0x28
  40bb38:	pop    rbx
  40bb39:	pop    rsi
  40bb3a:	pop    rdi
  40bb3b:	pop    rbp
  40bb3c:	ret    
  40bb3d:	nop    DWORD PTR [rax]
  40bb40:	push   rbp
  40bb41:	push   rdi
  40bb42:	push   rsi
  40bb43:	push   rbx
  40bb44:	sub    rsp,0x28
  40bb48:	lea    eax,[rdx-0x4]
  40bb4b:	mov    rsi,rdx
  40bb4e:	cmp    eax,0x4
  40bb51:	ja     0x40bbb0
  40bb53:	movzx  eax,BYTE PTR [rcx]
  40bb56:	lea    r8,[rip+0x1d3a3]        # 0x428f00
  40bb5d:	mov    rdx,rax
  40bb60:	movzx  eax,BYTE PTR [r8+rax*1]
  40bb65:	add    eax,esi
  40bb67:	cmp    eax,0x9
  40bb6a:	ja     0x40bbb0
  40bb6c:	cdqe   
  40bb6e:	lea    rbx,[rip+0x1dd4b]        # 0x4298c0
  40bb75:	xor    ebp,ebp
  40bb77:	shl    rax,0x4
  40bb7b:	add    rbx,rax
  40bb7e:	mov    rdi,QWORD PTR [rbx]
  40bb81:	cmp    dl,BYTE PTR [rdi]
  40bb83:	jne    0x40bba5
  40bb85:	lea    rdx,[rdi+0x1]
  40bb89:	lea    r8d,[rsi-0x1]
  40bb8d:	add    rcx,0x1
  40bb91:	call   0x4227a0
  40bb96:	test   eax,eax
  40bb98:	jne    0x40bba5
  40bb9a:	mov    esi,esi
  40bb9c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  40bba0:	jne    0x40bba5
  40bba2:	mov    ebp,DWORD PTR [rbx+0x8]
  40bba5:	mov    eax,ebp
  40bba7:	add    rsp,0x28
  40bbab:	pop    rbx
  40bbac:	pop    rsi
  40bbad:	pop    rdi
  40bbae:	pop    rbp
  40bbaf:	ret    
  40bbb0:	xor    ebp,ebp
  40bbb2:	mov    eax,ebp
  40bbb4:	add    rsp,0x28
  40bbb8:	pop    rbx
  40bbb9:	pop    rsi
  40bbba:	pop    rdi
  40bbbb:	pop    rbp
  40bbbc:	ret    
  40bbbd:	nop    DWORD PTR [rax]
  40bbc0:	push   rbx
  40bbc1:	sub    rsp,0x20
  40bbc5:	cmp    rcx,0xf
  40bbc9:	jbe    0x40bc2c
  40bbcb:	mov    eax,r8d
  40bbce:	mov    r9,rdx
  40bbd1:	cmp    r8d,DWORD PTR [rcx+0xb0]
  40bbd8:	lea    rdx,[rax+rax*2]
  40bbdc:	lea    rdx,[rax+rdx*4]
  40bbe0:	mov    rax,QWORD PTR [rcx+0x78]
  40bbe4:	lea    rdx,[rax+rdx*8]
  40bbe8:	jae    0x40bc63
  40bbea:	mov    eax,DWORD PTR [rdx+0x10]
  40bbed:	and    eax,0xfffff00
  40bbf2:	mov    DWORD PTR [rdx+0x10],eax
  40bbf5:	mov    r8d,DWORD PTR [r9+0x10]
  40bbf9:	and    r8d,0xf00000ff
  40bc00:	or     eax,r8d
  40bc03:	mov    r8,QWORD PTR [r9+0x18]
  40bc07:	test   al,0x4
  40bc09:	mov    DWORD PTR [rdx+0x10],eax
  40bc0c:	mov    QWORD PTR [rdx+0x18],r8
  40bc10:	jne    0x40bc40
  40bc12:	xor    eax,eax
  40bc14:	and    DWORD PTR [r9+0x10],0xfffff00
  40bc1c:	mov    WORD PTR [r9+0xe],ax
  40bc21:	mov    rax,QWORD PTR [rdx+0x38]
  40bc25:	test   rax,rax
  40bc28:	je     0x40bc2c
  40bc2a:	call   rax
  40bc2c:	xor    ebx,ebx
  40bc2e:	mov    eax,ebx
  40bc30:	add    rsp,0x20
  40bc34:	pop    rbx
  40bc35:	ret    
  40bc36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc40:	movzx  eax,WORD PTR [rdx+0xe]
  40bc44:	add    eax,0x1
  40bc47:	cmp    ax,WORD PTR [rdx+0xc]
  40bc4b:	mov    WORD PTR [rdx+0xe],ax
  40bc4f:	jbe    0x40bc12
  40bc51:	test   BYTE PTR [rcx+0x10],0x4
  40bc55:	mov    ebx,0xffffffff
  40bc5a:	je     0x40bc2e
  40bc5c:	call   0x4084d0
  40bc61:	jmp    0x40bc2e
  40bc63:	call   QWORD PTR [rip+0x2b45b]        # 0x4370c4
  40bc69:	mov    rcx,QWORD PTR [rip+0x19b60]        # 0x4257d0
  40bc70:	lea    rdx,[rax+0x60]
  40bc74:	call   0x422868
  40bc79:	mov    ecx,0x1
  40bc7e:	call   0x407590
  40bc83:	nop
  40bc84:	xchg   ax,ax
  40bc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc90:	push   rsi
  40bc91:	push   rbx
  40bc92:	sub    rsp,0x38
  40bc96:	cmp    rcx,0xf
  40bc9a:	jbe    0x40bceb
  40bc9c:	test   rdx,rdx
  40bc9f:	je     0x40bceb
  40bca1:	mov    eax,DWORD PTR [rdx+0x10]
  40bca4:	mov    esi,eax
  40bca6:	and    esi,0x8
  40bca9:	jne    0x40bceb
  40bcab:	mov    rcx,QWORD PTR [rdx+0x18]
  40bcaf:	test   rcx,rcx
  40bcb2:	je     0x40bd30
  40bcb4:	mov    rbx,rdx
  40bcb7:	movzx  edx,BYTE PTR [rcx]
  40bcba:	cmp    dl,0x46
  40bcbd:	je     0x40bce4
  40bcbf:	jg     0x40bd01
  40bcc1:	cmp    dl,0x23
  40bcc4:	je     0x40bd12
  40bcc6:	cmp    dl,0x30
  40bcc9:	jne    0x40bd40
  40bccb:	lea    rdx,[rsp+0x28]
  40bcd0:	xor    r8d,r8d
  40bcd3:	call   0x422778
  40bcd8:	test   eax,eax
  40bcda:	mov    eax,DWORD PTR [rbx+0x10]
  40bcdd:	je     0x40bd20
  40bcdf:	mov    esi,0x1
  40bce4:	test   al,0x40
  40bce6:	jne    0x40bcf2
  40bce8:	mov    DWORD PTR [rbx+0x18],esi
  40bceb:	add    rsp,0x38
  40bcef:	pop    rbx
  40bcf0:	pop    rsi
  40bcf1:	ret    
  40bcf2:	mov    rcx,QWORD PTR [rbx+0x18]
  40bcf6:	call   0x422858
  40bcfb:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40bcff:	jmp    0x40bce8
  40bd01:	cmp    dl,0x66
  40bd04:	je     0x40bce4
  40bd06:	cmp    dl,0x6e
  40bd09:	je     0x40bce4
  40bd0b:	cmp    dl,0x4e
  40bd0e:	jne    0x40bcdf
  40bd10:	jmp    0x40bce4
  40bd12:	xor    esi,esi
  40bd14:	cmp    BYTE PTR [rcx+0x1],0x66
  40bd18:	setne  sil
  40bd1c:	jmp    0x40bce4
  40bd1e:	xchg   ax,ax
  40bd20:	mov    rdx,QWORD PTR [rsp+0x28]
  40bd25:	xor    esi,esi
  40bd27:	cmp    BYTE PTR [rdx],0x0
  40bd2a:	setne  sil
  40bd2e:	jmp    0x40bce4
  40bd30:	mov    DWORD PTR [rdx+0x18],0x0
  40bd37:	jmp    0x40bceb
  40bd39:	nop    DWORD PTR [rax+0x0]
  40bd40:	test   dl,dl
  40bd42:	jne    0x40bcdf
  40bd44:	jmp    0x40bce4
  40bd46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd50:	sub    rsp,0x28
  40bd54:	test   rcx,rcx
  40bd57:	je     0x40bdc0
  40bd59:	mov    eax,DWORD PTR [rcx+0x10]
  40bd5c:	and    eax,0xf000
  40bd61:	cmp    eax,0x6000
  40bd66:	jne    0x40bdc0
  40bd68:	mov    rcx,QWORD PTR [rcx+0x20]
  40bd6c:	test   rcx,rcx
  40bd6f:	je     0x40bd9a
  40bd71:	mov    r8d,DWORD PTR [rcx]
  40bd74:	xor    r9d,r9d
  40bd77:	add    rcx,0x8
  40bd7b:	jmp    0x40bd94
  40bd7d:	nop    DWORD PTR [rax]
  40bd80:	add    rcx,0x8
  40bd84:	test   r9b,r9b
  40bd87:	mov    rax,QWORD PTR [rcx-0x8]
  40bd8b:	jne    0x40bdb0
  40bd8d:	cmp    rax,rdx
  40bd90:	sete   r9b
  40bd94:	sub    r8d,0x1
  40bd98:	jns    0x40bd80
  40bd9a:	call   QWORD PTR [rip+0x2b374]        # 0x437114
  40bda0:	mov    DWORD PTR [rax],0x2
  40bda6:	xor    eax,eax
  40bda8:	jmp    0x40bdb5
  40bdaa:	nop    WORD PTR [rax+rax*1+0x0]
  40bdb0:	test   rax,rax
  40bdb3:	je     0x40bd9a
  40bdb5:	add    rsp,0x28
  40bdb9:	ret    
  40bdba:	nop    WORD PTR [rax+rax*1+0x0]
  40bdc0:	call   QWORD PTR [rip+0x2b34e]        # 0x437114
  40bdc6:	mov    DWORD PTR [rax],0x16
  40bdcc:	xor    eax,eax
  40bdce:	add    rsp,0x28
  40bdd2:	ret    
  40bdd3:	nop    DWORD PTR [rax]
  40bdd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bde0:	push   rbp
  40bde1:	push   rdi
  40bde2:	push   rsi
  40bde3:	push   rbx
  40bde4:	sub    rsp,0x28
  40bde8:	test   rcx,rcx
  40bdeb:	mov    rdi,rdx
  40bdee:	je     0x40be40
  40bdf0:	cmp    DWORD PTR [rcx],0x6
  40bdf3:	jne    0x40be40
  40bdf5:	mov    rax,QWORD PTR [rcx+0x10]
  40bdf9:	mov    edx,DWORD PTR [rax]
  40bdfb:	test   edx,edx
  40bdfd:	jle    0x40be70
  40bdff:	test   rdi,rdi
  40be02:	lea    rbx,[rax+0x8]
  40be06:	je     0x40be60
  40be08:	lea    eax,[rdx-0x1]
  40be0b:	lea    rbp,[rbx+rax*8+0x8]
  40be10:	jmp    0x40be17
  40be12:	cmp    rbx,rbp
  40be15:	je     0x40be70
  40be17:	add    rbx,0x8
  40be1b:	mov    rsi,QWORD PTR [rbx-0x8]
  40be1f:	mov    rdx,rdi
  40be22:	mov    rcx,QWORD PTR [rsi+0x8]
  40be26:	call   0x4227c8
  40be2b:	test   eax,eax
  40be2d:	jne    0x40be12
  40be2f:	mov    rax,rsi
  40be32:	add    rsp,0x28
  40be36:	pop    rbx
  40be37:	pop    rsi
  40be38:	pop    rdi
  40be39:	pop    rbp
  40be3a:	ret    
  40be3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40be40:	xor    esi,esi
  40be42:	call   QWORD PTR [rip+0x2b2cc]        # 0x437114
  40be48:	mov    DWORD PTR [rax],0x16
  40be4e:	mov    rax,rsi
  40be51:	add    rsp,0x28
  40be55:	pop    rbx
  40be56:	pop    rsi
  40be57:	pop    rdi
  40be58:	pop    rbp
  40be59:	ret    
  40be5a:	nop    WORD PTR [rax+rax*1+0x0]
  40be60:	mov    rsi,QWORD PTR [rax+0x8]
  40be64:	test   rsi,rsi
  40be67:	jne    0x40be2f
  40be69:	nop    DWORD PTR [rax+0x0]
  40be70:	call   QWORD PTR [rip+0x2b29e]        # 0x437114
  40be76:	xor    esi,esi
  40be78:	mov    DWORD PTR [rax],0x2
  40be7e:	jmp    0x40be2f
  40be80:	push   r12
  40be82:	push   rbp
  40be83:	push   rdi
  40be84:	push   rsi
  40be85:	push   rbx
  40be86:	sub    rsp,0x20
  40be8a:	test   rcx,rcx
  40be8d:	mov    rbp,rdx
  40be90:	mov    r12,r8
  40be93:	je     0x40bf10
  40be95:	mov    eax,DWORD PTR [rcx+0x10]
  40be98:	and    eax,0xf000
  40be9d:	cmp    eax,0x6000
  40bea2:	jne    0x40bf10
  40bea4:	mov    rax,QWORD PTR [rcx+0x20]
  40bea8:	test   rax,rax
  40beab:	je     0x40bef5
  40bead:	mov    ebx,DWORD PTR [rax]
  40beaf:	lea    rsi,[rax+0x8]
  40beb3:	test   ebx,ebx
  40beb5:	je     0x40bef5
  40beb7:	test   rdx,rdx
  40beba:	je     0x40bf29
  40bebc:	nop    DWORD PTR [rax+0x0]
  40bec0:	sub    ebx,0x1
  40bec3:	js     0x40bef5
  40bec5:	add    rsi,0x8
  40bec9:	mov    rdi,QWORD PTR [rsi-0x8]
  40becd:	mov    rdx,rbp
  40bed0:	mov    rcx,rdi
  40bed3:	call   0x40bde0
  40bed8:	test   rax,rax
  40bedb:	je     0x40bec0
  40bedd:	test   r12,r12
  40bee0:	jne    0x40bec0
  40bee2:	test   rdi,rdi
  40bee5:	mov    rax,rdi
  40bee8:	je     0x40bef5
  40beea:	add    rsp,0x20
  40beee:	pop    rbx
  40beef:	pop    rsi
  40bef0:	pop    rdi
  40bef1:	pop    rbp
  40bef2:	pop    r12
  40bef4:	ret    
  40bef5:	call   QWORD PTR [rip+0x2b219]        # 0x437114
  40befb:	mov    DWORD PTR [rax],0x2
  40bf01:	xor    eax,eax
  40bf03:	add    rsp,0x20
  40bf07:	pop    rbx
  40bf08:	pop    rsi
  40bf09:	pop    rdi
  40bf0a:	pop    rbp
  40bf0b:	pop    r12
  40bf0d:	ret    
  40bf0e:	xchg   ax,ax
  40bf10:	call   QWORD PTR [rip+0x2b1fe]        # 0x437114
  40bf16:	mov    DWORD PTR [rax],0x16
  40bf1c:	xor    eax,eax
  40bf1e:	add    rsp,0x20
  40bf22:	pop    rbx
  40bf23:	pop    rsi
  40bf24:	pop    rdi
  40bf25:	pop    rbp
  40bf26:	pop    r12
  40bf28:	ret    
  40bf29:	mov    rax,QWORD PTR [rax+0x8]
  40bf2d:	jmp    0x40beea
  40bf2f:	nop
  40bf30:	push   rbx
  40bf31:	sub    rsp,0x20
  40bf35:	test   rcx,rcx
  40bf38:	je     0x40bf90
  40bf3a:	cmp    DWORD PTR [rcx],0x6
  40bf3d:	jne    0x40bf90
  40bf3f:	mov    r8,QWORD PTR [rcx+0x10]
  40bf43:	mov    eax,DWORD PTR [r8]
  40bf46:	add    r8,0x8
  40bf4a:	jmp    0x40bf5d
  40bf4c:	nop    DWORD PTR [rax+0x0]
  40bf50:	lea    rcx,[r8+0x8]
  40bf54:	cmp    QWORD PTR [rcx-0x8],rdx
  40bf58:	je     0x40bf80
  40bf5a:	mov    r8,rcx
  40bf5d:	sub    eax,0x1
  40bf60:	lea    ecx,[rax+0x1]
  40bf63:	test   ecx,ecx
  40bf65:	jg     0x40bf50
  40bf67:	mov    ebx,0x16
  40bf6c:	call   QWORD PTR [rip+0x2b1a2]        # 0x437114
  40bf72:	mov    DWORD PTR [rax],ebx
  40bf74:	xor    eax,eax
  40bf76:	add    rsp,0x20
  40bf7a:	pop    rbx
  40bf7b:	ret    
  40bf7c:	nop    DWORD PTR [rax+0x0]
  40bf80:	test   eax,eax
  40bf82:	jne    0x40bfa4
  40bf84:	mov    ebx,0x2
  40bf89:	jmp    0x40bf6c
  40bf8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf90:	call   QWORD PTR [rip+0x2b17e]        # 0x437114
  40bf96:	mov    DWORD PTR [rax],0x16
  40bf9c:	xor    eax,eax
  40bf9e:	add    rsp,0x20
  40bfa2:	pop    rbx
  40bfa3:	ret    
  40bfa4:	mov    rax,QWORD PTR [r8+0x8]
  40bfa8:	add    rsp,0x20
  40bfac:	pop    rbx
  40bfad:	ret    
  40bfae:	xchg   ax,ax
  40bfb0:	push   rsi
  40bfb1:	push   rbx
  40bfb2:	sub    rsp,0x38
  40bfb6:	movzx  eax,BYTE PTR [rcx]
  40bfb9:	mov    rsi,rdx
  40bfbc:	cmp    al,0x78
  40bfbe:	mov    BYTE PTR [rdx],al
  40bfc0:	ja     0x40c113
  40bfc6:	lea    r9,[rip+0x1c843]        # 0x428810
  40bfcd:	movsxd rax,DWORD PTR [r9+rax*4]
  40bfd1:	add    r9,rax
  40bfd4:	jmp    r9
  40bfd7:	nop    WORD PTR [rax+rax*1+0x0]
  40bfe0:	mov    ebx,0x1
  40bfe5:	mov    BYTE PTR [rsi],r8b
  40bfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bff0:	mov    eax,ebx
  40bff2:	add    rsp,0x38
  40bff6:	pop    rbx
  40bff7:	pop    rsi
  40bff8:	ret    
  40bff9:	nop    DWORD PTR [rax+0x0]
  40c000:	xor    ebx,ebx
  40c002:	jmp    0x40bff0
  40c004:	mov    BYTE PTR [rdx],0xb
  40c007:	mov    ebx,0x1
  40c00c:	jmp    0x40bff0
  40c00e:	xchg   ax,ax
  40c010:	mov    BYTE PTR [rdx],0xd
  40c013:	mov    ebx,0x1
  40c018:	jmp    0x40bff0
  40c01a:	nop    WORD PTR [rax+rax*1+0x0]
  40c020:	mov    BYTE PTR [rdx],0x9
  40c023:	mov    ebx,0x1
  40c028:	jmp    0x40bff0
  40c02a:	nop    WORD PTR [rax+rax*1+0x0]
  40c030:	cmp    BYTE PTR [rcx+0x1],0xa
  40c034:	mov    ebx,0x1
  40c039:	jne    0x40bff0
  40c03b:	mov    bl,0x2
  40c03d:	jmp    0x40bfe5
  40c03f:	nop
  40c040:	movzx  eax,BYTE PTR [rcx]
  40c043:	mov    ebx,0x1
  40c048:	mov    BYTE PTR [rsp+0x20],al
  40c04c:	mov    eax,ebx
  40c04e:	movzx  edx,BYTE PTR [rcx+rax*1]
  40c052:	cmp    dl,0x7f
  40c055:	ja     0x40c15a
  40c05b:	lea    r9,[rip+0x2069e]        # 0x42c700
  40c062:	movzx  r8d,dl
  40c066:	test   BYTE PTR [r9+r8*4+0x2],0x1
  40c06c:	je     0x40c15a
  40c072:	cmp    ebx,0x2
  40c075:	mov    BYTE PTR [rsp+rax*1+0x20],dl
  40c079:	je     0x40c150
  40c07f:	mov    ebx,0x2
  40c084:	jmp    0x40c04c
  40c086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c090:	movzx  eax,BYTE PTR [rcx+0x1]
  40c094:	mov    ebx,0x1
  40c099:	cmp    al,0x7f
  40c09b:	ja     0x40bff0
  40c0a1:	lea    rdx,[rip+0x20658]        # 0x42c700
  40c0a8:	movzx  r8d,al
  40c0ac:	test   DWORD PTR [rdx+r8*4],0x70000
  40c0b4:	je     0x40bff0
  40c0ba:	movzx  ecx,BYTE PTR [rcx+0x2]
  40c0be:	mov    BYTE PTR [rsp+0x20],al
  40c0c2:	cmp    cl,0x7f
  40c0c5:	movzx  eax,cl
  40c0c8:	ja     0x40c185
  40c0ce:	test   DWORD PTR [rdx+rax*4],0x70000
  40c0d5:	je     0x40c185
  40c0db:	mov    BYTE PTR [rsp+0x21],cl
  40c0df:	mov    ebx,0x3
  40c0e4:	mov    eax,0x2
  40c0e9:	lea    rcx,[rsp+0x20]
  40c0ee:	mov    r8d,0x10
  40c0f4:	xor    edx,edx
  40c0f6:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40c0fb:	call   0x422770
  40c100:	mov    BYTE PTR [rsi],al
  40c102:	jmp    0x40bff0
  40c107:	nop    WORD PTR [rax+rax*1+0x0]
  40c110:	mov    BYTE PTR [rdx],0x7
  40c113:	mov    ebx,0x1
  40c118:	mov    eax,ebx
  40c11a:	add    rsp,0x38
  40c11e:	pop    rbx
  40c11f:	pop    rsi
  40c120:	ret    
  40c121:	mov    BYTE PTR [rdx],0x8
  40c124:	mov    ebx,0x1
  40c129:	jmp    0x40bff0
  40c12e:	xchg   ax,ax
  40c130:	mov    BYTE PTR [rdx],0xc
  40c133:	mov    ebx,0x1
  40c138:	jmp    0x40bff0
  40c13d:	nop    DWORD PTR [rax]
  40c140:	mov    BYTE PTR [rdx],0xa
  40c143:	mov    ebx,0x1
  40c148:	jmp    0x40bff0
  40c14d:	nop    DWORD PTR [rax]
  40c150:	mov    ebx,0x3
  40c155:	mov    eax,0x3
  40c15a:	lea    rcx,[rsp+0x20]
  40c15f:	xor    edx,edx
  40c161:	mov    r8d,0x8
  40c167:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40c16c:	call   0x422770
  40c171:	mov    edx,0xff
  40c176:	cmp    eax,0xff
  40c17b:	cmova  eax,edx
  40c17e:	mov    BYTE PTR [rsi],al
  40c180:	jmp    0x40bff0
  40c185:	mov    ebx,0x2
  40c18a:	mov    eax,0x1
  40c18f:	jmp    0x40c0e9
  40c194:	xchg   ax,ax
  40c196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c1a0:	push   r14
  40c1a2:	push   r13
  40c1a4:	push   r12
  40c1a6:	push   rbp
  40c1a7:	push   rdi
  40c1a8:	push   rsi
  40c1a9:	push   rbx
  40c1aa:	sub    rsp,0x30
  40c1ae:	movzx  esi,BYTE PTR [rcx]
  40c1b1:	movzx  r8d,BYTE PTR [rcx+0x1]
  40c1b6:	mov    r13d,0x1
  40c1bc:	lea    rax,[rsp+0x2c]
  40c1c1:	mov    rbp,rdx
  40c1c4:	test   rdx,rdx
  40c1c7:	lea    r9,[rcx+0x1]
  40c1cb:	mov    rbx,rcx
  40c1ce:	mov    DWORD PTR [rsp+0x2c],0x0
  40c1d6:	cmove  rbp,rax
  40c1da:	movabs r12,0x200000000000011
  40c1e4:	cmp    sil,r8b
  40c1e7:	je     0x40c219
  40c1e9:	cmp    r8b,0xa
  40c1ed:	lea    r14,[rbx+0x1]
  40c1f1:	lea    rdi,[r9+0x1]
  40c1f5:	mov    BYTE PTR [rbx],r8b
  40c1f8:	je     0x40c2c0
  40c1fe:	cmp    r8b,0x5c
  40c202:	je     0x40c282
  40c204:	test   r8b,r8b
  40c207:	je     0x40c271
  40c209:	movzx  r8d,BYTE PTR [r9+0x1]
  40c20e:	mov    rbx,r14
  40c211:	mov    r9,rdi
  40c214:	cmp    sil,r8b
  40c217:	jne    0x40c1e9
  40c219:	lea    rdi,[r9+0x1]
  40c21d:	mov    BYTE PTR [rbx],0x0
  40c220:	movzx  esi,BYTE PTR [rdi]
  40c223:	cmp    sil,0x7f
  40c227:	ja     0x40c241
  40c229:	lea    rdx,[rip+0x204d0]        # 0x42c700
  40c230:	movzx  eax,sil
  40c234:	test   DWORD PTR [rdx+rax*4],0xc01
  40c23b:	jne    0x40c2d0
  40c241:	cmp    sil,0x27
  40c245:	je     0x40c330
  40c24b:	cmp    sil,0x2f
  40c24f:	je     0x40c351
  40c255:	cmp    sil,0x22
  40c259:	je     0x40c330
  40c25f:	mov    rax,rdi
  40c262:	add    rsp,0x30
  40c266:	pop    rbx
  40c267:	pop    rsi
  40c268:	pop    rdi
  40c269:	pop    rbp
  40c26a:	pop    r12
  40c26c:	pop    r13
  40c26e:	pop    r14
  40c270:	ret    
  40c271:	xor    eax,eax
  40c273:	add    rsp,0x30
  40c277:	pop    rbx
  40c278:	pop    rsi
  40c279:	pop    rdi
  40c27a:	pop    rbp
  40c27b:	pop    r12
  40c27d:	pop    r13
  40c27f:	pop    r14
  40c281:	ret    
  40c282:	movzx  r8d,BYTE PTR [r9+0x1]
  40c287:	cmp    r8b,0xa
  40c28b:	je     0x40c340
  40c291:	cmp    sil,0x27
  40c295:	je     0x40c2f0
  40c297:	mov    r8d,0xa
  40c29d:	mov    rdx,rbx
  40c2a0:	mov    rcx,rdi
  40c2a3:	call   0x40bfb0
  40c2a8:	test   eax,eax
  40c2aa:	je     0x40c271
  40c2ac:	mov    eax,eax
  40c2ae:	mov    rbx,r14
  40c2b1:	lea    r9,[rdi+rax*1]
  40c2b5:	movzx  r8d,BYTE PTR [r9]
  40c2b9:	jmp    0x40c1e4
  40c2be:	xchg   ax,ax
  40c2c0:	add    DWORD PTR [rbp+0x0],0x1
  40c2c4:	jmp    0x40c209
  40c2c9:	nop    DWORD PTR [rax+0x0]
  40c2d0:	add    rdi,0x1
  40c2d4:	cmp    sil,0xa
  40c2d8:	jne    0x40c220
  40c2de:	add    DWORD PTR [rbp+0x0],0x1
  40c2e2:	jmp    0x40c220
  40c2e7:	nop    WORD PTR [rax+rax*1+0x0]
  40c2f0:	lea    ecx,[r8-0x23]
  40c2f4:	cmp    cl,0x39
  40c2f7:	ja     0x40c320
  40c2f9:	mov    rax,r13
  40c2fc:	shl    rax,cl
  40c2ff:	test   rax,r12
  40c302:	je     0x40c320
  40c304:	mov    BYTE PTR [rbx],r8b
  40c307:	add    r9,0x2
  40c30b:	movzx  r8d,BYTE PTR [r9]
  40c30f:	mov    rbx,r14
  40c312:	jmp    0x40c1e4
  40c317:	nop    WORD PTR [rax+rax*1+0x0]
  40c320:	mov    r9,rdi
  40c323:	mov    rbx,r14
  40c326:	jmp    0x40c1e4
  40c32b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c330:	lea    r9,[rdi+0x1]
  40c334:	movzx  r8d,BYTE PTR [rdi+0x1]
  40c339:	jmp    0x40c1e4
  40c33e:	xchg   ax,ax
  40c340:	add    DWORD PTR [rbp+0x0],0x1
  40c344:	add    r9,0x2
  40c348:	movzx  r8d,BYTE PTR [r9]
  40c34c:	jmp    0x40c1e4
  40c351:	movzx  eax,BYTE PTR [rdi+0x1]
  40c355:	cmp    al,0x2a
  40c357:	je     0x40c380
  40c359:	cmp    al,0x2f
  40c35b:	jne    0x40c3c0
  40c35d:	mov    rcx,rdi
  40c360:	mov    edx,0xa
  40c365:	call   0x4227d0
  40c36a:	test   rax,rax
  40c36d:	mov    rdi,rax
  40c370:	jne    0x40c220
  40c376:	jmp    0x40c25f
  40c37b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c380:	lea    rcx,[rdi+0x2]
  40c384:	lea    rdx,[rip+0x1c669]        # 0x4289f4
  40c38b:	call   0x422780
  40c390:	test   rax,rax
  40c393:	je     0x40c3c0
  40c395:	cmp    rdi,rax
  40c398:	jae    0x40c3d0
  40c39a:	mov    edx,0x2f
  40c39f:	jmp    0x40c3a9
  40c3a1:	cmp    rdi,rax
  40c3a4:	je     0x40c3d0
  40c3a6:	movzx  edx,BYTE PTR [rdi]
  40c3a9:	add    rdi,0x1
  40c3ad:	cmp    dl,0xa
  40c3b0:	jne    0x40c3a1
  40c3b2:	add    DWORD PTR [rbp+0x0],0x1
  40c3b6:	jmp    0x40c3a1
  40c3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3c0:	xor    edi,edi
  40c3c2:	jmp    0x40c25f
  40c3c7:	nop    WORD PTR [rax+rax*1+0x0]
  40c3d0:	lea    rdi,[rax+0x2]
  40c3d4:	jmp    0x40c220
  40c3d9:	nop    DWORD PTR [rax+0x0]
  40c3e0:	push   r15
  40c3e2:	push   r14
  40c3e4:	push   r13
  40c3e6:	push   r12
  40c3e8:	push   rbp
  40c3e9:	push   rdi
  40c3ea:	push   rsi
  40c3eb:	push   rbx
  40c3ec:	sub    rsp,0xe8
  40c3f3:	test   rcx,rcx
  40c3f6:	mov    rbx,rcx
  40c3f9:	mov    rbp,rdx
  40c3fc:	mov    rdi,r8
  40c3ff:	je     0x40cf8a
  40c405:	mov    rax,QWORD PTR [rip+0x27394]        # 0x4337a0
  40c40c:	test   rax,rax
  40c40f:	je     0x40cacc
  40c415:	movzx  r8d,BYTE PTR [rbx]
  40c419:	cmp    BYTE PTR [rax+r8*1],0x0
  40c41e:	mov    rcx,r8
  40c421:	je     0x40c433
  40c423:	add    rbx,0x1
  40c427:	movzx  edx,BYTE PTR [rbx]
  40c42a:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c42e:	mov    rcx,rdx
  40c431:	jne    0x40c423
  40c433:	test   cl,cl
  40c435:	je     0x40c933
  40c43b:	lea    rcx,[rdi+0x19]
  40c43f:	call   0x408f90
  40c444:	lea    rcx,[rax+0x18]
  40c448:	mov    rsi,rax
  40c44b:	mov    rdx,rbp
  40c44e:	mov    r8,rdi
  40c451:	mov    DWORD PTR [rax],0x6
  40c457:	lea    rbp,[rsp+0x90]
  40c45f:	mov    QWORD PTR [rax+0x8],rcx
  40c463:	lea    r13,[rsi+0x10]
  40c467:	call   0x422810
  40c46c:	mov    BYTE PTR [rsi+rdi*1+0x18],0x0
  40c471:	mov    ecx,0x38
  40c476:	lea    r12,[rbp+0x2]
  40c47a:	call   0x408f90
  40c47f:	mov    QWORD PTR [rsi+0x10],rax
  40c483:	mov    DWORD PTR [rax],0x0
  40c489:	mov    DWORD PTR [rax+0x4],0x6
  40c490:	lea    rax,[rsp+0x70]
  40c495:	mov    QWORD PTR [rsp+0x48],rax
  40c49a:	lea    rax,[rsp+0x98]
  40c4a2:	mov    QWORD PTR [rsp+0x38],rax
  40c4a7:	mov    rax,QWORD PTR [rip+0x272f2]        # 0x4337a0
  40c4ae:	test   rax,rax
  40c4b1:	jne    0x40c4c4
  40c4b3:	jmp    0x40c895
  40c4b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4c0:	add    rbx,0x1
  40c4c4:	movzx  ecx,BYTE PTR [rbx]
  40c4c7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40c4cb:	mov    rdx,rcx
  40c4ce:	jne    0x40c4c0
  40c4d0:	cmp    cl,0x7f
  40c4d3:	ja     0x40c570
  40c4d9:	movzx  eax,cl
  40c4dc:	lea    rcx,[rip+0x2021d]        # 0x42c700
  40c4e3:	test   DWORD PTR [rcx+rax*4],0x180040
  40c4ea:	je     0x40c570
  40c4f0:	mov    rax,QWORD PTR [rip+0x27329]        # 0x433820
  40c4f7:	lea    rdi,[rbx+0x1]
  40c4fb:	test   rax,rax
  40c4fe:	je     0x40ceea
  40c504:	movzx  edx,BYTE PTR [rbx+0x1]
  40c508:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c50c:	je     0x40c51d
  40c50e:	xchg   ax,ax
  40c510:	add    rdi,0x1
  40c514:	movzx  edx,BYTE PTR [rdi]
  40c517:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c51b:	jne    0x40c510
  40c51d:	xor    eax,eax
  40c51f:	cmp    BYTE PTR [rdi-0x1],0x3a
  40c523:	sete   al
  40c526:	sub    rdi,rax
  40c529:	mov    rax,QWORD PTR [rip+0x27260]        # 0x433790
  40c530:	mov    r8,rdi
  40c533:	sub    r8,rbx
  40c536:	test   rax,rax
  40c539:	jne    0x40c544
  40c53b:	jmp    0x40ced1
  40c540:	add    rdi,0x1
  40c544:	movzx  ecx,BYTE PTR [rdi]
  40c547:	cmp    BYTE PTR [rax+rcx*1],0x0
  40c54b:	mov    rdx,rcx
  40c54e:	jne    0x40c540
  40c550:	lea    r14,[rip+0x1c4a5]        # 0x4289fc
  40c557:	cmp    dl,0x3d
  40c55a:	ja     0x40c7a2
  40c560:	movzx  eax,dl
  40c563:	movsxd rax,DWORD PTR [r14+rax*4]
  40c567:	add    rax,r14
  40c56a:	jmp    rax
  40c56c:	nop    DWORD PTR [rax+0x0]
  40c570:	cmp    dl,0x23
  40c573:	je     0x40c664
  40c579:	cmp    dl,0x3c
  40c57c:	je     0x40c680
  40c582:	test   dl,dl
  40c584:	je     0x40c5d4
  40c586:	mov    rcx,QWORD PTR [rsi+0x10]
  40c58a:	call   0x422858
  40c58f:	mov    rcx,rsi
  40c592:	call   0x422858
  40c597:	xor    eax,eax
  40c599:	add    rsp,0xe8
  40c5a0:	pop    rbx
  40c5a1:	pop    rsi
  40c5a2:	pop    rdi
  40c5a3:	pop    rbp
  40c5a4:	pop    r12
  40c5a6:	pop    r13
  40c5a8:	pop    r14
  40c5aa:	pop    r15
  40c5ac:	ret    
  40c5ad:	add    rdi,0x1
  40c5b1:	mov    rdx,rbx
  40c5b4:	mov    QWORD PTR [rsp+0x20],0x0
  40c5bd:	xor    r9d,r9d
  40c5c0:	mov    rcx,r13
  40c5c3:	mov    rbx,rdi
  40c5c6:	call   0x4090a0
  40c5cb:	test   rbx,rbx
  40c5ce:	jne    0x40c4a7
  40c5d4:	mov    r15,QWORD PTR [rsi+0x10]
  40c5d8:	mov    edx,DWORD PTR [r15]
  40c5db:	test   edx,edx
  40c5dd:	je     0x40cf9d
  40c5e3:	cmp    edx,0x1
  40c5e6:	mov    rax,rsi
  40c5e9:	jle    0x40c599
  40c5eb:	lea    r12d,[rdx-0x2]
  40c5ef:	xor    edi,edi
  40c5f1:	add    r12,0x1
  40c5f5:	mov    rbp,QWORD PTR [r15+rdi*8+0x10]
  40c5fa:	mov    ebx,edi
  40c5fc:	mov    r14,QWORD PTR [r15+rdi*8+0x8]
  40c601:	mov    r13,QWORD PTR [rbp+0x8]
  40c605:	jmp    0x40c62a
  40c607:	nop    WORD PTR [rax+rax*1+0x0]
  40c610:	lea    eax,[rbx+0x1]
  40c613:	sub    ebx,0x1
  40c616:	cmp    ebx,0xffffffff
  40c619:	cdqe   
  40c61b:	mov    QWORD PTR [r15+rax*8+0x8],r14
  40c620:	movsxd rax,ebx
  40c623:	mov    r14,QWORD PTR [r15+rax*8+0x8]
  40c628:	je     0x40c660
  40c62a:	mov    rcx,QWORD PTR [r14+0x8]
  40c62e:	mov    rdx,r13
  40c631:	call   0x4227c8
  40c636:	test   eax,eax
  40c638:	jg     0x40c610
  40c63a:	add    ebx,0x1
  40c63d:	add    rdi,0x1
  40c641:	movsxd rbx,ebx
  40c644:	cmp    rdi,r12
  40c647:	mov    QWORD PTR [r15+rbx*8+0x8],rbp
  40c64c:	jne    0x40c5f5
  40c64e:	mov    rax,rsi
  40c651:	jmp    0x40c599
  40c656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c660:	xor    ebx,ebx
  40c662:	jmp    0x40c63d
  40c664:	mov    rcx,rbx
  40c667:	mov    edx,0xa
  40c66c:	call   0x4227d0
  40c671:	mov    rbx,rax
  40c674:	jmp    0x40c5cb
  40c679:	nop    DWORD PTR [rax+0x0]
  40c680:	mov    eax,DWORD PTR [rip+0x1908a]        # 0x425710
  40c686:	mov    DWORD PTR [rsp+0x54],eax
  40c68a:	lea    rax,[rbx+0x1]
  40c68e:	mov    QWORD PTR [rsp+0x40],rax
  40c693:	movzx  eax,BYTE PTR [rbx+0x1]
  40c697:	cmp    al,0x7f
  40c699:	ja     0x40c710
  40c69b:	lea    r10,[rip+0x2005e]        # 0x42c700
  40c6a2:	movzx  edx,al
  40c6a5:	test   DWORD PTR [r10+rdx*4],0x180040
  40c6ad:	je     0x40c710
  40c6af:	mov    rax,QWORD PTR [rip+0x2716a]        # 0x433820
  40c6b6:	lea    rdi,[rbx+0x2]
  40c6ba:	test   rax,rax
  40c6bd:	je     0x40cfe7
  40c6c3:	movzx  edx,BYTE PTR [rbx+0x2]
  40c6c7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c6cb:	je     0x40c6dd
  40c6cd:	nop    DWORD PTR [rax]
  40c6d0:	add    rdi,0x1
  40c6d4:	movzx  edx,BYTE PTR [rdi]
  40c6d7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c6db:	jne    0x40c6d0
  40c6dd:	mov    r14,rdi
  40c6e0:	sub    r14,QWORD PTR [rsp+0x40]
  40c6e5:	cmp    r14,0x40
  40c6e9:	ja     0x40c701
  40c6eb:	mov    DWORD PTR [rsp+0x70],0x1
  40c6f3:	movzx  eax,BYTE PTR [rdi]
  40c6f6:	cmp    al,0x7f
  40c6f8:	movzx  edx,al
  40c6fb:	jbe    0x40c9e0
  40c701:	mov    eax,DWORD PTR [rsp+0x54]
  40c705:	mov    DWORD PTR [rip+0x19005],eax        # 0x425710
  40c70b:	jmp    0x40c586
  40c710:	cmp    al,0x21
  40c712:	je     0x40c946
  40c718:	cmp    al,0x3f
  40c71a:	jne    0x40c586
  40c720:	mov    rcx,QWORD PTR [rsp+0x40]
  40c725:	mov    edx,0x3e
  40c72a:	call   0x4227d0
  40c72f:	test   rax,rax
  40c732:	je     0x40c586
  40c738:	lea    rbx,[rax+0x1]
  40c73c:	test   rbx,rbx
  40c73f:	je     0x40c586
  40c745:	cmp    BYTE PTR [rbx],0x2c
  40c748:	jne    0x40c4a7
  40c74e:	add    rbx,0x1
  40c752:	jmp    0x40c5cb
  40c757:	mov    rax,QWORD PTR [rip+0x27032]        # 0x433790
  40c75e:	lea    r15,[rdi+0x1]
  40c762:	test   rax,rax
  40c765:	je     0x40d000
  40c76b:	movzx  edx,BYTE PTR [rdi+0x1]
  40c76f:	mov    rdi,r15
  40c772:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c776:	mov    rcx,rdx
  40c779:	je     0x40c790
  40c77b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c780:	add    rdi,0x1
  40c784:	movzx  edx,BYTE PTR [rdi]
  40c787:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c78b:	mov    rcx,rdx
  40c78e:	jne    0x40c780
  40c790:	cmp    cl,0x3a
  40c793:	mov    edx,ecx
  40c795:	je     0x40c7a0
  40c797:	cmp    cl,0x3d
  40c79a:	jne    0x40c557
  40c7a0:	mov    edx,ecx
  40c7a2:	mov    r15,rdi
  40c7a5:	cmp    dl,0xa
  40c7a8:	lea    rax,[rdi+0x2]
  40c7ac:	lea    r14,[r15+0x1]
  40c7b0:	je     0x40c7d3
  40c7b2:	cmp    dl,0x2c
  40c7b5:	je     0x40c8a4
  40c7bb:	test   dl,dl
  40c7bd:	je     0x40caa2
  40c7c3:	movzx  edx,BYTE PTR [r14]
  40c7c7:	mov    r15,r14
  40c7ca:	lea    r14,[r15+0x1]
  40c7ce:	cmp    dl,0xa
  40c7d1:	jne    0x40c7b2
  40c7d3:	cmp    r14,rax
  40c7d6:	jbe    0x40c8a4
  40c7dc:	cmp    BYTE PTR [r14-0x2],0x5c
  40c7e1:	jne    0x40c7e9
  40c7e3:	cmp    BYTE PTR [r14],0x0
  40c7e7:	jne    0x40c7c3
  40c7e9:	mov    rax,r14
  40c7ec:	mov    rdx,rbx
  40c7ef:	mov    r9,rdi
  40c7f2:	sub    rax,rdi
  40c7f5:	mov    rcx,r13
  40c7f8:	mov    rbx,r14
  40c7fb:	sub    rax,0x1
  40c7ff:	mov    QWORD PTR [rsp+0x20],rax
  40c804:	call   0x4090a0
  40c809:	test   rax,rax
  40c80c:	jne    0x40c8cd
  40c812:	jmp    0x40c4a7
  40c817:	nop    WORD PTR [rax+rax*1+0x0]
  40c820:	lea    r15,[rdi+0x1]
  40c824:	jmp    0x40c843
  40c826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c830:	cmp    al,dl
  40c832:	je     0x40c969
  40c838:	cmp    al,0x5c
  40c83a:	je     0x40c9a0
  40c840:	mov    r15,r14
  40c843:	lea    r14,[r15+0x1]
  40c847:	movzx  eax,BYTE PTR [r14-0x1]
  40c84c:	test   al,al
  40c84e:	jne    0x40c830
  40c850:	mov    rax,r15
  40c853:	mov    rdx,rbx
  40c856:	mov    r9,rdi
  40c859:	sub    rax,rdi
  40c85c:	mov    rcx,r13
  40c85f:	mov    rbx,r15
  40c862:	mov    QWORD PTR [rsp+0x20],rax
  40c867:	call   0x4090a0
  40c86c:	test   rax,rax
  40c86f:	je     0x40c4a7
  40c875:	mov    r8d,DWORD PTR [rip+0x18e94]        # 0x425710
  40c87c:	test   r8d,r8d
  40c87f:	jne    0x40c5cb
  40c885:	lea    rcx,[rax+0x10]
  40c889:	xor    edx,edx
  40c88b:	call   0x40c1a0
  40c890:	jmp    0x40c5cb
  40c895:	mov    ecx,0xc
  40c89a:	call   0x408aa0
  40c89f:	jmp    0x40c4c4
  40c8a4:	mov    rax,r14
  40c8a7:	mov    rdx,rbx
  40c8aa:	mov    r9,rdi
  40c8ad:	sub    rax,rdi
  40c8b0:	mov    rcx,r13
  40c8b3:	mov    rbx,r14
  40c8b6:	sub    rax,0x1
  40c8ba:	mov    QWORD PTR [rsp+0x20],rax
  40c8bf:	call   0x4090a0
  40c8c4:	test   rax,rax
  40c8c7:	je     0x40c5cb
  40c8cd:	add    rax,0x10
  40c8d1:	jmp    0x40c8d7
  40c8d3:	add    rax,0x1
  40c8d7:	cmp    BYTE PTR [rax],0xa
  40c8da:	je     0x40c8d3
  40c8dc:	mov    edx,0xa
  40c8e1:	mov    rcx,rax
  40c8e4:	call   0x4227d0
  40c8e9:	test   rax,rax
  40c8ec:	je     0x40c5cb
  40c8f2:	cmp    BYTE PTR [rax-0x1],0x5c
  40c8f6:	jne    0x40c8d7
  40c8f8:	movzx  ecx,BYTE PTR [rax]
  40c8fb:	lea    rdx,[rax-0x1]
  40c8ff:	lea    r8,[rdx+0x1]
  40c903:	test   cl,cl
  40c905:	mov    BYTE PTR [rdx],cl
  40c907:	je     0x40c5cb
  40c90d:	cmp    cl,0x5c
  40c910:	jne    0x40c91a
  40c912:	cmp    BYTE PTR [rax+0x1],0xa
  40c916:	cmove  r8,rdx
  40c91a:	add    rax,0x1
  40c91e:	movzx  ecx,BYTE PTR [rax]
  40c921:	mov    rdx,r8
  40c924:	lea    r8,[rdx+0x1]
  40c928:	test   cl,cl
  40c92a:	mov    BYTE PTR [rdx],cl
  40c92c:	jne    0x40c90d
  40c92e:	jmp    0x40c5cb
  40c933:	call   QWORD PTR [rip+0x2a7db]        # 0x437114
  40c939:	mov    DWORD PTR [rax],0x2
  40c93f:	xor    eax,eax
  40c941:	jmp    0x40c599
  40c946:	mov    rcx,QWORD PTR [rsp+0x40]
  40c94b:	lea    rdx,[rip+0x1c0a5]        # 0x4289f7
  40c952:	call   0x422780
  40c957:	test   rax,rax
  40c95a:	je     0x40c586
  40c960:	lea    rbx,[rax+0x3]
  40c964:	jmp    0x40c73c
  40c969:	mov    rax,r14
  40c96c:	mov    r9,rdi
  40c96f:	mov    rdx,rbx
  40c972:	sub    rax,rdi
  40c975:	mov    rcx,r13
  40c978:	mov    QWORD PTR [rsp+0x20],rax
  40c97d:	call   0x4090a0
  40c982:	test   rax,rax
  40c985:	je     0x40c995
  40c987:	mov    edx,DWORD PTR [rip+0x18d83]        # 0x425710
  40c98d:	test   edx,edx
  40c98f:	je     0x40cf7d
  40c995:	mov    rbx,r14
  40c998:	jmp    0x40c4a7
  40c99d:	nop    DWORD PTR [rax]
  40c9a0:	mov    rcx,r15
  40c9a3:	add    r15,0x2
  40c9a7:	movzx  eax,BYTE PTR [rcx+0x1]
  40c9ab:	test   al,al
  40c9ad:	je     0x40d0ae
  40c9b3:	cmp    al,0x5c
  40c9b5:	je     0x40c9bf
  40c9b7:	cmp    al,dl
  40c9b9:	jne    0x40c843
  40c9bf:	cmp    BYTE PTR [rcx+0x2],0x0
  40c9c3:	mov    rax,r15
  40c9c6:	lea    r15,[rcx+0x3]
  40c9ca:	jne    0x40c843
  40c9d0:	mov    r15,rax
  40c9d3:	jmp    0x40c850
  40c9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9e0:	movzx  ecx,al
  40c9e3:	mov    ecx,DWORD PTR [r10+rcx*4]
  40c9e7:	test   ecx,0xc01
  40c9ed:	je     0x40ca4b
  40c9ef:	mov    rax,QWORD PTR [rip+0x26daa]        # 0x4337a0
  40c9f6:	test   rax,rax
  40c9f9:	jne    0x40ca07
  40c9fb:	jmp    0x40d06f
  40ca00:	add    rdi,0x1
  40ca04:	movzx  edx,BYTE PTR [rdi]
  40ca07:	cmp    BYTE PTR [rax+rdx*1],0x0
  40ca0b:	jne    0x40ca00
  40ca0d:	mov    r8,QWORD PTR [rsp+0x48]
  40ca12:	lea    rdx,[rip+0x18cf7]        # 0x425710
  40ca19:	mov    rcx,rdi
  40ca1c:	mov    QWORD PTR [rsp+0x58],r10
  40ca21:	call   0x40af70
  40ca26:	test   rax,rax
  40ca29:	mov    rdi,rax
  40ca2c:	je     0x40c701
  40ca32:	movzx  edx,BYTE PTR [rax]
  40ca35:	cmp    dl,0x7f
  40ca38:	mov    eax,edx
  40ca3a:	ja     0x40c701
  40ca40:	mov    r10,QWORD PTR [rsp+0x58]
  40ca45:	mov    edx,edx
  40ca47:	mov    ecx,DWORD PTR [r10+rdx*4]
  40ca4b:	and    ecx,0x1000c01
  40ca51:	je     0x40c701
  40ca57:	cmp    al,0x2f
  40ca59:	je     0x40cf5f
  40ca5f:	mov    r15,rdi
  40ca62:	add    r15,0x1
  40ca66:	je     0x40c701
  40ca6c:	mov    ecx,DWORD PTR [rsp+0x70]
  40ca70:	test   ecx,ecx
  40ca72:	jne    0x40cadb
  40ca74:	mov    rdx,QWORD PTR [rsp+0x40]
  40ca79:	mov    QWORD PTR [rsp+0x20],0x0
  40ca82:	xor    r9d,r9d
  40ca85:	mov    r8,r14
  40ca88:	mov    rcx,r13
  40ca8b:	mov    rbx,r15
  40ca8e:	call   0x4090a0
  40ca93:	mov    eax,DWORD PTR [rsp+0x54]
  40ca97:	mov    DWORD PTR [rip+0x18c73],eax        # 0x425710
  40ca9d:	jmp    0x40c745
  40caa2:	mov    rax,r15
  40caa5:	mov    rdx,rbx
  40caa8:	mov    r9,rdi
  40caab:	sub    rax,rdi
  40caae:	mov    rcx,r13
  40cab1:	mov    rbx,r15
  40cab4:	mov    QWORD PTR [rsp+0x20],rax
  40cab9:	call   0x4090a0
  40cabe:	test   rax,rax
  40cac1:	jne    0x40c8cd
  40cac7:	jmp    0x40c4a7
  40cacc:	mov    ecx,0xc
  40cad1:	call   0x408aa0
  40cad6:	jmp    0x40c415
  40cadb:	cmp    DWORD PTR [rip+0x18c2e],0x2        # 0x425710
  40cae2:	je     0x40cb0e
  40cae4:	mov    rax,QWORD PTR [rip+0x26cb5]        # 0x4337a0
  40caeb:	test   rax,rax
  40caee:	je     0x40d056
  40caf4:	movzx  edx,BYTE PTR [rdi+0x1]
  40caf8:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cafc:	je     0x40cb0e
  40cafe:	xchg   ax,ax
  40cb00:	add    r15,0x1
  40cb04:	movzx  edx,BYTE PTR [r15]
  40cb08:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cb0c:	jne    0x40cb00
  40cb0e:	mov    rdi,QWORD PTR [rsp+0x38]
  40cb13:	mov    ecx,0x8
  40cb18:	xor    eax,eax
  40cb1a:	mov    QWORD PTR [rsp+0x90],0x2f3c
  40cb26:	rep stos QWORD PTR es:[rdi],rax
  40cb29:	nop    DWORD PTR [rax+0x0]
  40cb30:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  40cb35:	mov    BYTE PTR [r12+rax*1],dl
  40cb39:	add    rax,0x1
  40cb3d:	cmp    r14,rax
  40cb40:	jne    0x40cb30
  40cb42:	lea    rax,[r12+r14*1-0x1]
  40cb47:	mov    rdx,rbp
  40cb4a:	mov    rcx,r15
  40cb4d:	mov    QWORD PTR [rsp+0x58],r10
  40cb52:	mov    BYTE PTR [rax+0x1],0x3e
  40cb56:	mov    BYTE PTR [rax+0x2],0x0
  40cb5a:	lea    rdi,[rax+0x2]
  40cb5e:	call   0x422780
  40cb63:	test   rax,rax
  40cb66:	mov    rbx,rax
  40cb69:	je     0x40c701
  40cb6f:	cmp    DWORD PTR [rip+0x18b9a],0x2        # 0x425710
  40cb76:	mov    r10,QWORD PTR [rsp+0x58]
  40cb7b:	jne    0x40cef9
  40cb81:	mov    rax,QWORD PTR [rip+0x26c18]        # 0x4337a0
  40cb88:	mov    r9,rbx
  40cb8b:	sub    rdi,rbp
  40cb8e:	sub    r9,r15
  40cb91:	add    rbx,rdi
  40cb94:	test   rax,rax
  40cb97:	jne    0x40cba4
  40cb99:	jmp    0x40d026
  40cb9e:	xchg   ax,ax
  40cba0:	add    rbx,0x1
  40cba4:	movzx  edx,BYTE PTR [rbx]
  40cba7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cbab:	jne    0x40cba0
  40cbad:	cmp    DWORD PTR [rsp+0x70],0x6
  40cbb2:	ja     0x40ca93
  40cbb8:	mov    edx,DWORD PTR [rsp+0x70]
  40cbbc:	lea    rax,[rip+0x1bf31]        # 0x428af4
  40cbc3:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40cbc7:	add    rax,rdx
  40cbca:	jmp    rax
  40cbcc:	lea    rcx,[r9+0x1]
  40cbd0:	mov    QWORD PTR [rsp+0x58],r9
  40cbd5:	call   0x408f90
  40cbda:	mov    r9,QWORD PTR [rsp+0x58]
  40cbdf:	mov    rdx,r15
  40cbe2:	mov    rcx,rax
  40cbe5:	mov    rdi,rax
  40cbe8:	mov    r8,r9
  40cbeb:	call   0x422810
  40cbf0:	mov    r9,QWORD PTR [rsp+0x58]
  40cbf5:	test   r9,r9
  40cbf8:	mov    BYTE PTR [rdi+r9*1],0x0
  40cbfd:	jne    0x40cfae
  40cc03:	lea    rcx,[r14+0x19]
  40cc07:	call   0x408f90
  40cc0c:	mov    rdx,QWORD PTR [rsp+0x40]
  40cc11:	lea    rcx,[rax+0x18]
  40cc15:	mov    r15,rax
  40cc18:	mov    QWORD PTR [rax+0x10],0x0
  40cc20:	mov    DWORD PTR [rax],0x6
  40cc26:	mov    r8,r14
  40cc29:	mov    QWORD PTR [rax+0x8],rcx
  40cc2d:	call   0x422810
  40cc32:	mov    BYTE PTR [r15+r14*1+0x18],0x0
  40cc38:	mov    rdx,r15
  40cc3b:	mov    rcx,r13
  40cc3e:	call   0x408fe0
  40cc43:	mov    rcx,rdi
  40cc46:	call   0x422858
  40cc4b:	jmp    0x40ca93
  40cc50:	lea    rcx,[r14+0x19]
  40cc54:	mov    QWORD PTR [rsp+0x60],r10
  40cc59:	mov    QWORD PTR [rsp+0x58],r9
  40cc5e:	call   0x408f90
  40cc63:	mov    rdi,rax
  40cc66:	movzx  eax,BYTE PTR [r15]
  40cc6a:	mov    r9,QWORD PTR [rsp+0x58]
  40cc6f:	mov    r10,QWORD PTR [rsp+0x60]
  40cc74:	cmp    al,0x7f
  40cc76:	jbe    0x40ccd0
  40cc78:	test   r9,r9
  40cc7b:	je     0x40ccdf
  40cc7d:	xor    r8d,r8d
  40cc80:	xor    edx,edx
  40cc82:	mov    rcx,r15
  40cc85:	call   0x422778
  40cc8a:	mov    DWORD PTR [rdi+0x10],eax
  40cc8d:	lea    rcx,[rdi+0x18]
  40cc91:	mov    rdx,QWORD PTR [rsp+0x40]
  40cc96:	mov    DWORD PTR [rdi],0x5
  40cc9c:	mov    r8,r14
  40cc9f:	mov    QWORD PTR [rdi+0x8],rcx
  40cca3:	call   0x422810
  40cca8:	mov    BYTE PTR [rdi+r14*1+0x18],0x0
  40ccae:	mov    rdx,rdi
  40ccb1:	mov    rcx,r13
  40ccb4:	call   0x408fe0
  40ccb9:	jmp    0x40ca93
  40ccbe:	xchg   ax,ax
  40ccc0:	add    r15,0x1
  40ccc4:	movzx  eax,BYTE PTR [r15]
  40ccc8:	sub    r9,0x1
  40cccc:	cmp    al,0x7f
  40ccce:	ja     0x40cc78
  40ccd0:	test   DWORD PTR [r10+rax*4],0xc01
  40ccd8:	je     0x40cc78
  40ccda:	test   r9,r9
  40ccdd:	jne    0x40ccc0
  40ccdf:	mov    DWORD PTR [rdi+0x10],0x0
  40cce6:	jmp    0x40cc8d
  40cce8:	lea    rcx,[r14+0x19]
  40ccec:	mov    QWORD PTR [rsp+0x60],r10
  40ccf1:	mov    QWORD PTR [rsp+0x58],r9
  40ccf6:	call   0x408f90
  40ccfb:	movzx  edx,BYTE PTR [r15]
  40ccff:	mov    rdi,rax
  40cd02:	mov    r9,QWORD PTR [rsp+0x58]
  40cd07:	mov    r10,QWORD PTR [rsp+0x60]
  40cd0c:	cmp    dl,0x7f
  40cd0f:	jbe    0x40cd81
  40cd11:	test   r9,r9
  40cd14:	je     0x40cd92
  40cd16:	cmp    edx,0x7f
  40cd19:	ja     0x40d019
  40cd1f:	mov    edx,edx
  40cd21:	mov    eax,DWORD PTR [r10+rdx*4]
  40cd25:	test   eax,0x30000
  40cd2a:	je     0x40d049
  40cd30:	mov    rcx,r15
  40cd33:	call   0x4228b8
  40cd38:	mov    DWORD PTR [rdi+0x10],eax
  40cd3b:	lea    rcx,[rdi+0x18]
  40cd3f:	mov    rdx,QWORD PTR [rsp+0x40]
  40cd44:	mov    DWORD PTR [rdi],0x3
  40cd4a:	mov    r8,r14
  40cd4d:	mov    QWORD PTR [rdi+0x8],rcx
  40cd51:	call   0x422810
  40cd56:	mov    rax,QWORD PTR [rdi+0x8]
  40cd5a:	mov    rdx,rdi
  40cd5d:	mov    rcx,r13
  40cd60:	mov    BYTE PTR [rax+r14*1],0x0
  40cd65:	call   0x408fe0
  40cd6a:	jmp    0x40ca93
  40cd6f:	nop
  40cd70:	add    r15,0x1
  40cd74:	movzx  edx,BYTE PTR [r15]
  40cd78:	sub    r9,0x1
  40cd7c:	cmp    dl,0x7f
  40cd7f:	ja     0x40cd11
  40cd81:	mov    eax,edx
  40cd83:	test   DWORD PTR [r10+rax*4],0xc01
  40cd8b:	je     0x40cd11
  40cd8d:	test   r9,r9
  40cd90:	jne    0x40cd70
  40cd92:	mov    DWORD PTR [rdi+0x10],0x0
  40cd99:	jmp    0x40cd3b
  40cd9b:	mov    rdx,QWORD PTR [rsp+0x40]
  40cda0:	mov    QWORD PTR [rsp+0x20],r9
  40cda5:	mov    r8,r14
  40cda8:	mov    r9,r15
  40cdab:	mov    rcx,r13
  40cdae:	mov    QWORD PTR [rsp+0x58],r10
  40cdb3:	call   0x4090a0
  40cdb8:	mov    r15d,DWORD PTR [rip+0x18951]        # 0x425710
  40cdbf:	mov    r14,rax
  40cdc2:	cmp    r15d,0x2
  40cdc6:	je     0x40ca93
  40cdcc:	lea    rdi,[rax+0x10]
  40cdd0:	movzx  eax,BYTE PTR [rax+0x10]
  40cdd4:	mov    r10,QWORD PTR [rsp+0x58]
  40cdd9:	cmp    al,0x7f
  40cddb:	ja     0x40cfcf
  40cde1:	test   DWORD PTR [r10+rax*4],0xc01
  40cde9:	je     0x40cfcf
  40cdef:	mov    rax,QWORD PTR [rip+0x269aa]        # 0x4337a0
  40cdf6:	test   rax,rax
  40cdf9:	je     0x40d0b6
  40cdff:	mov    r9,rax
  40ce02:	movzx  ecx,BYTE PTR [r14+0x11]
  40ce07:	lea    rdx,[r14+0x11]
  40ce0b:	cmp    BYTE PTR [rax+rcx*1],0x0
  40ce0f:	je     0x40ce1e
  40ce11:	add    rdx,0x1
  40ce15:	movzx  ecx,BYTE PTR [rdx]
  40ce18:	cmp    BYTE PTR [rax+rcx*1],0x0
  40ce1c:	jne    0x40ce11
  40ce1e:	mov    rcx,rdx
  40ce21:	mov    QWORD PTR [rsp+0x60],r9
  40ce26:	mov    QWORD PTR [rsp+0x58],rdx
  40ce2b:	call   0x4227a8
  40ce30:	mov    rdx,QWORD PTR [rsp+0x58]
  40ce35:	lea    r8,[rax+0x1]
  40ce39:	mov    rcx,rdi
  40ce3c:	mov    QWORD PTR [rsp+0x40],rax
  40ce41:	call   0x422808
  40ce46:	mov    r10,QWORD PTR [rsp+0x40]
  40ce4b:	mov    r9,QWORD PTR [rsp+0x60]
  40ce50:	lea    rdx,[rdi+r10*1]
  40ce54:	test   r9,r9
  40ce57:	je     0x40d0cc
  40ce5d:	cmp    rdi,rdx
  40ce60:	jb     0x40ce89
  40ce62:	mov    rcx,rdi
  40ce65:	mov    QWORD PTR [rsp+0x40],r9
  40ce6a:	call   0x4227a8
  40ce6f:	lea    rdx,[rdi+rax*1]
  40ce73:	mov    r9,QWORD PTR [rsp+0x40]
  40ce78:	cmp    rdi,rdx
  40ce7b:	jb     0x40ce89
  40ce7d:	jmp    0x40ce94
  40ce7f:	nop
  40ce80:	sub    rdx,0x1
  40ce84:	cmp    rdi,rdx
  40ce87:	jae    0x40ce94
  40ce89:	movzx  eax,BYTE PTR [rdx-0x1]
  40ce8d:	cmp    BYTE PTR [r9+rax*1],0x0
  40ce92:	jne    0x40ce80
  40ce94:	cmp    r15d,0x1
  40ce98:	mov    BYTE PTR [rdx],0x0
  40ce9b:	je     0x40ca93
  40cea1:	movzx  eax,BYTE PTR [r14+0x10]
  40cea6:	cmp    al,0x22
  40cea8:	je     0x40ceb2
  40ceaa:	cmp    al,0x27
  40ceac:	jne    0x40ca93
  40ceb2:	movzx  eax,BYTE PTR [rdx-0x1]
  40ceb6:	cmp    al,0x22
  40ceb8:	je     0x40cec2
  40ceba:	cmp    al,0x27
  40cebc:	jne    0x40ca93
  40cec2:	xor    edx,edx
  40cec4:	mov    rcx,rdi
  40cec7:	call   0x40c1a0
  40cecc:	jmp    0x40ca93
  40ced1:	mov    ecx,0xa
  40ced6:	mov    QWORD PTR [rsp+0x40],r8
  40cedb:	call   0x408aa0
  40cee0:	mov    r8,QWORD PTR [rsp+0x40]
  40cee5:	jmp    0x40c544
  40ceea:	mov    ecx,0x1c
  40ceef:	call   0x408aa0
  40cef4:	jmp    0x40c504
  40cef9:	mov    r8,QWORD PTR [rip+0x268a0]        # 0x4337a0
  40cf00:	test   r8,r8
  40cf03:	mov    rdx,r8
  40cf06:	je     0x40d08b
  40cf0c:	cmp    r15,rbx
  40cf0f:	jb     0x40cf85
  40cf11:	mov    rcx,r15
  40cf14:	mov    QWORD PTR [rsp+0x68],r10
  40cf19:	mov    QWORD PTR [rsp+0x60],rdx
  40cf1e:	mov    QWORD PTR [rsp+0x58],r8
  40cf23:	call   0x4227a8
  40cf28:	lea    r9,[r15+rax*1]
  40cf2c:	mov    r8,QWORD PTR [rsp+0x58]
  40cf31:	mov    rdx,QWORD PTR [rsp+0x60]
  40cf36:	mov    r10,QWORD PTR [rsp+0x68]
  40cf3b:	cmp    r15,r9
  40cf3e:	jb     0x40cf4b
  40cf40:	jmp    0x40cf57
  40cf42:	sub    r9,0x1
  40cf46:	cmp    r15,r9
  40cf49:	jae    0x40cf57
  40cf4b:	movzx  eax,BYTE PTR [r9-0x1]
  40cf50:	cmp    BYTE PTR [r8+rax*1],0x0
  40cf55:	jne    0x40cf42
  40cf57:	mov    rax,rdx
  40cf5a:	jmp    0x40cb8b
  40cf5f:	cmp    BYTE PTR [rdi+0x1],0x3e
  40cf63:	lea    rax,[rdi+0x1]
  40cf67:	jne    0x40c701
  40cf6d:	mov    DWORD PTR [rsp+0x70],0x0
  40cf75:	mov    rdi,rax
  40cf78:	jmp    0x40ca5f
  40cf7d:	mov    rbx,r14
  40cf80:	jmp    0x40c885
  40cf85:	mov    r9,rbx
  40cf88:	jmp    0x40cf4b
  40cf8a:	call   QWORD PTR [rip+0x2a184]        # 0x437114
  40cf90:	mov    DWORD PTR [rax],0x16
  40cf96:	xor    eax,eax
  40cf98:	jmp    0x40c599
  40cf9d:	call   QWORD PTR [rip+0x2a171]        # 0x437114
  40cfa3:	mov    DWORD PTR [rax],0x2
  40cfa9:	jmp    0x40c586
  40cfae:	mov    rdx,QWORD PTR [rsp+0x40]
  40cfb3:	mov    r8,r14
  40cfb6:	mov    rcx,rdi
  40cfb9:	call   0x40c3e0
  40cfbe:	test   rax,rax
  40cfc1:	mov    r15,rax
  40cfc4:	jne    0x40cc38
  40cfca:	jmp    0x40cc43
  40cfcf:	mov    rcx,rdi
  40cfd2:	call   0x4227a8
  40cfd7:	mov    r9,QWORD PTR [rip+0x267c2]        # 0x4337a0
  40cfde:	lea    rdx,[rdi+rax*1]
  40cfe2:	jmp    0x40ce54
  40cfe7:	mov    ecx,0x1c
  40cfec:	mov    QWORD PTR [rsp+0x58],r10
  40cff1:	call   0x408aa0
  40cff6:	mov    r10,QWORD PTR [rsp+0x58]
  40cffb:	jmp    0x40c6c3
  40d000:	mov    ecx,0xa
  40d005:	mov    QWORD PTR [rsp+0x40],r8
  40d00a:	call   0x408aa0
  40d00f:	mov    r8,QWORD PTR [rsp+0x40]
  40d014:	jmp    0x40c76b
  40d019:	mov    eax,0x1
  40d01e:	mov    DWORD PTR [rdi+0x10],eax
  40d021:	jmp    0x40cd3b
  40d026:	mov    ecx,0xc
  40d02b:	mov    QWORD PTR [rsp+0x60],r10
  40d030:	mov    QWORD PTR [rsp+0x58],r9
  40d035:	call   0x408aa0
  40d03a:	mov    r10,QWORD PTR [rsp+0x60]
  40d03f:	mov    r9,QWORD PTR [rsp+0x58]
  40d044:	jmp    0x40cba4
  40d049:	test   eax,0x8000002
  40d04e:	sete   al
  40d051:	movzx  eax,al
  40d054:	jmp    0x40d01e
  40d056:	mov    ecx,0xc
  40d05b:	mov    QWORD PTR [rsp+0x58],r10
  40d060:	call   0x408aa0
  40d065:	mov    r10,QWORD PTR [rsp+0x58]
  40d06a:	jmp    0x40caf4
  40d06f:	mov    ecx,0xc
  40d074:	mov    QWORD PTR [rsp+0x58],r10
  40d079:	call   0x408aa0
  40d07e:	movzx  edx,BYTE PTR [rdi]
  40d081:	mov    r10,QWORD PTR [rsp+0x58]
  40d086:	jmp    0x40ca07
  40d08b:	mov    ecx,0xc
  40d090:	mov    QWORD PTR [rsp+0x58],r10
  40d095:	call   0x408aa0
  40d09a:	mov    rdx,QWORD PTR [rip+0x266ff]        # 0x4337a0
  40d0a1:	mov    r8,rax
  40d0a4:	mov    r10,QWORD PTR [rsp+0x58]
  40d0a9:	jmp    0x40cf0c
  40d0ae:	mov    r15,rcx
  40d0b1:	jmp    0x40c850
  40d0b6:	mov    ecx,0xc
  40d0bb:	call   0x408aa0
  40d0c0:	mov    r9,QWORD PTR [rip+0x266d9]        # 0x4337a0
  40d0c7:	jmp    0x40ce02
  40d0cc:	mov    ecx,0xc
  40d0d1:	mov    QWORD PTR [rsp+0x40],rdx
  40d0d6:	call   0x408aa0
  40d0db:	mov    rdx,QWORD PTR [rsp+0x40]
  40d0e0:	mov    r9,rax
  40d0e3:	jmp    0x40ce5d
  40d0e8:	mov    r15,rbx
  40d0eb:	jmp    0x40ca74
  40d0f0:	push   rdi
  40d0f1:	sub    rsp,0x90
  40d0f8:	xor    eax,eax
  40d0fa:	lea    rdi,[rsp+0x20]
  40d0ff:	mov    r9,rcx
  40d102:	mov    ecx,0xd
  40d107:	rep stos QWORD PTR es:[rdi],rax
  40d10a:	mov    eax,edx
  40d10c:	lea    rdx,[rsp+0x20]
  40d111:	mov    QWORD PTR [rsp+0x38],rax
  40d116:	mov    cl,0x3
  40d118:	call   QWORD PTR [r9+0x38]
  40d11c:	mov    rax,QWORD PTR [rsp+0x38]
  40d121:	add    rsp,0x90
  40d128:	pop    rdi
  40d129:	ret    
  40d12a:	nop    WORD PTR [rax+rax*1+0x0]
  40d130:	push   rbx
  40d131:	sub    rsp,0x40
  40d135:	cmp    rcx,0x2
  40d139:	mov    rbx,rdx
  40d13c:	je     0x40d190
  40d13e:	cmp    rcx,0x3
  40d142:	je     0x40d170
  40d144:	cmp    rcx,0x1
  40d148:	je     0x40d160
  40d14a:	xor    eax,eax
  40d14c:	test   BYTE PTR [rdx+0x10],0x8
  40d150:	je     0x40d1f0
  40d156:	add    rsp,0x40
  40d15a:	pop    rbx
  40d15b:	ret    
  40d15c:	nop    DWORD PTR [rax+0x0]
  40d160:	call   0x4075f0
  40d165:	xor    eax,eax
  40d167:	add    rsp,0x40
  40d16b:	pop    rbx
  40d16c:	ret    
  40d16d:	nop    DWORD PTR [rax]
  40d170:	mov    rax,QWORD PTR [rdx+0x18]
  40d174:	cmp    r9d,eax
  40d177:	jbe    0x40d1e0
  40d179:	mov    eax,eax
  40d17b:	mov    rax,QWORD PTR [r8+rax*8]
  40d17f:	mov    QWORD PTR [rdx+0x18],rax
  40d183:	xor    eax,eax
  40d185:	add    rsp,0x40
  40d189:	pop    rbx
  40d18a:	ret    
  40d18b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d190:	mov    rbx,QWORD PTR [rdx+0x18]
  40d194:	cmp    r9d,ebx
  40d197:	ja     0x40d1b0
  40d199:	lea    rcx,[rip+0x1cac4]        # 0x429c64
  40d1a0:	mov    edx,ebx
  40d1a2:	call   0x407560
  40d1a7:	xor    eax,eax
  40d1a9:	add    rsp,0x40
  40d1ad:	pop    rbx
  40d1ae:	ret    
  40d1af:	nop
  40d1b0:	mov    QWORD PTR [rsp+0x38],r8
  40d1b5:	mov    ebx,ebx
  40d1b7:	call   QWORD PTR [rip+0x29f07]        # 0x4370c4
  40d1bd:	mov    r8,QWORD PTR [rsp+0x38]
  40d1c2:	lea    rdx,[rax+0x30]
  40d1c6:	mov    rcx,QWORD PTR [r8+rbx*8]
  40d1ca:	call   0x422868
  40d1cf:	xor    eax,eax
  40d1d1:	add    rsp,0x40
  40d1d5:	pop    rbx
  40d1d6:	ret    
  40d1d7:	nop    WORD PTR [rax+rax*1+0x0]
  40d1e0:	lea    rax,[rip+0x1ca88]        # 0x429c6f
  40d1e7:	jmp    0x40d156
  40d1ec:	nop    DWORD PTR [rax+0x0]
  40d1f0:	mov    DWORD PTR [rsp+0x20],r9d
  40d1f5:	mov    r9,r8
  40d1f8:	mov    r8,rdx
  40d1fb:	mov    rdx,rcx
  40d1fe:	mov    rcx,QWORD PTR [rbx+0x18]
  40d202:	call   0x407920
  40d207:	test   BYTE PTR [rbx+0x10],0x40
  40d20b:	je     0x40d156
  40d211:	mov    rcx,QWORD PTR [rbx+0x18]
  40d215:	mov    QWORD PTR [rsp+0x38],rax
  40d21a:	call   0x422858
  40d21f:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40d223:	mov    QWORD PTR [rbx+0x18],0x0
  40d22b:	mov    rax,QWORD PTR [rsp+0x38]
  40d230:	jmp    0x40d156
  40d235:	nop
  40d236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d240:	push   rsi
  40d241:	push   rbx
  40d242:	sub    rsp,0x28
  40d246:	mov    rsi,QWORD PTR [rcx+0x18]
  40d24a:	mov    rbx,rcx
  40d24d:	mov    rdx,rcx
  40d250:	mov    ecx,0x3
  40d255:	call   QWORD PTR [rbx+0x38]
  40d258:	mov    rax,QWORD PTR [rbx+0x18]
  40d25c:	mov    QWORD PTR [rbx+0x18],rsi
  40d260:	add    rsp,0x28
  40d264:	pop    rbx
  40d265:	pop    rsi
  40d266:	ret    
  40d267:	nop    WORD PTR [rax+rax*1+0x0]
  40d270:	push   r15
  40d272:	push   r14
  40d274:	push   r13
  40d276:	push   r12
  40d278:	push   rbp
  40d279:	push   rdi
  40d27a:	push   rsi
  40d27b:	push   rbx
  40d27c:	sub    rsp,0xe8
  40d283:	cmp    rcx,0x2
  40d287:	mov    r13,rcx
  40d28a:	mov    r12,rdx
  40d28d:	mov    rbx,r8
  40d290:	mov    ebp,r9d
  40d293:	je     0x40d531
  40d299:	cmp    rcx,0x3
  40d29d:	je     0x40d460
  40d2a3:	cmp    rcx,0x1
  40d2a7:	je     0x40d440
  40d2ad:	test   BYTE PTR [rdx+0x10],0x8
  40d2b1:	jne    0x40d44b
  40d2b7:	mov    rax,QWORD PTR [rip+0x264e2]        # 0x4337a0
  40d2be:	mov    r15,QWORD PTR [rdx+0x18]
  40d2c2:	mov    rsi,QWORD PTR [rdx+0x20]
  40d2c6:	test   rax,rax
  40d2c9:	jne    0x40d2d4
  40d2cb:	jmp    0x40d850
  40d2d0:	add    r15,0x1
  40d2d4:	movzx  ecx,BYTE PTR [r15]
  40d2d8:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d2dc:	jne    0x40d2d0
  40d2de:	test   cl,cl
  40d2e0:	je     0x40d620
  40d2e6:	cmp    cl,0x3d
  40d2e9:	mov    QWORD PTR [rsp+0x30],rsi
  40d2ee:	je     0x40d7e0
  40d2f4:	cmp    cl,0x5e
  40d2f7:	je     0x40d5d4
  40d2fd:	cmp    cl,0x2c
  40d300:	je     0x40d620
  40d306:	mov    BYTE PTR [rsp+0x4f],0x0
  40d30b:	lea    rax,[rsp+0x58]
  40d310:	movzx  edx,BYTE PTR [r15]
  40d314:	mov    QWORD PTR [rsp+0x38],rax
  40d319:	lea    rax,[rsp+0x60]
  40d31e:	mov    QWORD PTR [rsp+0x40],rax
  40d323:	test   dl,dl
  40d325:	je     0x40d791
  40d32b:	cmp    dl,0x2c
  40d32e:	je     0x40d6d0
  40d334:	jg     0x40d6b0
  40d33a:	cmp    dl,0x21
  40d33d:	je     0x40d720
  40d343:	cmp    dl,0x2b
  40d346:	jne    0x40d6be
  40d34c:	xor    r14d,r14d
  40d34f:	mov    rax,QWORD PTR [rip+0x2644a]        # 0x4337a0
  40d356:	lea    rsi,[r15+0x1]
  40d35a:	test   rax,rax
  40d35d:	je     0x40d7c7
  40d363:	movzx  edx,BYTE PTR [r15+0x1]
  40d368:	mov    r15,rsi
  40d36b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d36f:	je     0x40d37f
  40d371:	add    r15,0x1
  40d375:	movzx  edx,BYTE PTR [r15]
  40d379:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d37d:	jne    0x40d371
  40d37f:	mov    rax,QWORD PTR [rip+0x2650a]        # 0x433890
  40d386:	test   rax,rax
  40d389:	je     0x40d773
  40d38f:	movzx  edx,BYTE PTR [r15]
  40d393:	test   dl,dl
  40d395:	je     0x40d791
  40d39b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d39f:	jne    0x40d791
  40d3a5:	mov    rcx,r15
  40d3a8:	jmp    0x40d3b6
  40d3aa:	nop    WORD PTR [rax+rax*1+0x0]
  40d3b0:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d3b4:	jne    0x40d3c1
  40d3b6:	add    rcx,0x1
  40d3ba:	movzx  edx,BYTE PTR [rcx]
  40d3bd:	test   dl,dl
  40d3bf:	jne    0x40d3b0
  40d3c1:	mov    r11d,ecx
  40d3c4:	sub    r11d,r15d
  40d3c7:	test   r11d,r11d
  40d3ca:	je     0x40d791
  40d3d0:	cmp    r11d,0x3
  40d3d4:	je     0x40d740
  40d3da:	cmp    r11d,0x4
  40d3de:	jne    0x40d630
  40d3e4:	lea    rdi,[rip+0x1c770]        # 0x429b5b
  40d3eb:	mov    ecx,0x4
  40d3f0:	mov    rsi,r15
  40d3f3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d3f5:	jne    0x40d630
  40d3fb:	add    r15,0x4
  40d3ff:	test   r14b,r14b
  40d402:	jne    0x40d410
  40d404:	mov    QWORD PTR [rsp+0x30],0x0
  40d40d:	nop    DWORD PTR [rax]
  40d410:	mov    rax,QWORD PTR [rip+0x26389]        # 0x4337a0
  40d417:	test   rax,rax
  40d41a:	jne    0x40d425
  40d41c:	jmp    0x40d782
  40d421:	add    r15,0x1
  40d425:	movzx  ecx,BYTE PTR [r15]
  40d429:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d42d:	mov    rdx,rcx
  40d430:	jne    0x40d421
  40d432:	jmp    0x40d323
  40d437:	nop    WORD PTR [rax+rax*1+0x0]
  40d440:	mov    ecx,0x1
  40d445:	call   0x4075f0
  40d44a:	nop
  40d44b:	add    rsp,0xe8
  40d452:	pop    rbx
  40d453:	pop    rsi
  40d454:	pop    rdi
  40d455:	pop    rbp
  40d456:	pop    r12
  40d458:	pop    r13
  40d45a:	pop    r14
  40d45c:	pop    r15
  40d45e:	ret    
  40d45f:	nop
  40d460:	mov    eax,0x1
  40d465:	mov    ecx,r9d
  40d468:	shl    eax,cl
  40d46a:	lea    r13d,[rax-0x1]
  40d46e:	mov    r14,r13
  40d471:	and    r14,QWORD PTR [rdx+0x20]
  40d475:	je     0x40d7d6
  40d47b:	mov    rsi,r8
  40d47e:	mov    edi,0x1
  40d483:	xor    r15d,r15d
  40d486:	jmp    0x40d499
  40d488:	nop    DWORD PTR [rax+rax*1+0x0]
  40d490:	add    rsi,0x8
  40d494:	shr    r14,1
  40d497:	je     0x40d4b5
  40d499:	test   r14b,0x1
  40d49d:	je     0x40d4ac
  40d49f:	mov    rcx,QWORD PTR [rsi]
  40d4a2:	call   0x4227a8
  40d4a7:	lea    rdi,[rdi+rax*1+0x4]
  40d4ac:	add    r15d,0x1
  40d4b0:	cmp    ebp,r15d
  40d4b3:	ja     0x40d490
  40d4b5:	mov    rcx,rdi
  40d4b8:	mov    rbp,r13
  40d4bb:	call   0x408f90
  40d4c0:	and    rbp,QWORD PTR [r12+0x20]
  40d4c5:	mov    r14,rax
  40d4c8:	mov    QWORD PTR [r12+0x18],rax
  40d4cd:	je     0x40d5c0
  40d4d3:	xor    r12d,r12d
  40d4d6:	jmp    0x40d4f4
  40d4d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4e0:	mov    edx,0x2b20
  40d4e5:	lea    r14,[rax+0x3]
  40d4e9:	mov    BYTE PTR [rax+0x2],0x20
  40d4ed:	mov    WORD PTR [rax],dx
  40d4f0:	add    r12d,0x1
  40d4f4:	mov    eax,ebp
  40d4f6:	shr    rbp,1
  40d4f9:	and    eax,0x1
  40d4fc:	test   eax,eax
  40d4fe:	je     0x40d4f0
  40d500:	mov    eax,r12d
  40d503:	mov    r13,QWORD PTR [rbx+rax*8]
  40d507:	mov    rcx,r13
  40d50a:	call   0x4227a8
  40d50f:	mov    rdx,r13
  40d512:	mov    r8,rax
  40d515:	mov    rcx,r14
  40d518:	mov    rsi,rax
  40d51b:	call   0x422810
  40d520:	test   rbp,rbp
  40d523:	lea    rax,[r14+rsi*1]
  40d527:	jne    0x40d4e0
  40d529:	mov    BYTE PTR [rax],0x0
  40d52c:	jmp    0x40d44b
  40d531:	mov    eax,0x1
  40d536:	mov    ecx,r9d
  40d539:	xor    r13d,r13d
  40d53c:	shl    rax,cl
  40d53f:	xor    edx,edx
  40d541:	mov    rsi,QWORD PTR [rip+0x29b7c]        # 0x4370c4
  40d548:	sub    rax,0x1
  40d54c:	and    rax,QWORD PTR [r12+0x20]
  40d551:	mov    r14,rsi
  40d554:	mov    r12,rax
  40d557:	jne    0x40d58b
  40d559:	jmp    0x40d44b
  40d55e:	xchg   ax,ax
  40d560:	call   rdi
  40d562:	mov    rcx,QWORD PTR [rbx]
  40d565:	lea    rdx,[rax+0x30]
  40d569:	call   0x422868
  40d56e:	mov    rdx,r15
  40d571:	add    r13d,0x1
  40d575:	cmp    ebp,r13d
  40d578:	jbe    0x40d44b
  40d57e:	add    rbx,0x8
  40d582:	shr    r12,1
  40d585:	je     0x40d44b
  40d58b:	test   r12b,0x1
  40d58f:	je     0x40d571
  40d591:	test   rdx,rdx
  40d594:	lea    r15,[rdx+0x1]
  40d598:	mov    rdi,rsi
  40d59b:	je     0x40d560
  40d59d:	call   r14
  40d5a0:	lea    rcx,[rip+0x1c775]        # 0x429d1c
  40d5a7:	lea    r9,[rax+0x30]
  40d5ab:	mov    r8d,0x3
  40d5b1:	mov    edx,0x1
  40d5b6:	mov    rdi,r14
  40d5b9:	call   0x422840
  40d5be:	jmp    0x40d560
  40d5c0:	mov    BYTE PTR [rax],0x0
  40d5c3:	jmp    0x40d44b
  40d5c8:	mov    r15,rsi
  40d5cb:	mov    QWORD PTR [rsp+0x30],0x0
  40d5d4:	mov    rax,QWORD PTR [rip+0x261c5]        # 0x4337a0
  40d5db:	lea    rsi,[r15+0x1]
  40d5df:	test   rax,rax
  40d5e2:	je     0x40d85f
  40d5e8:	movzx  ecx,BYTE PTR [r15+0x1]
  40d5ed:	mov    r15,rsi
  40d5f0:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d5f4:	mov    rdx,rcx
  40d5f7:	je     0x40d611
  40d5f9:	nop    DWORD PTR [rax+0x0]
  40d600:	add    r15,0x1
  40d604:	movzx  ecx,BYTE PTR [r15]
  40d608:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d60c:	mov    rdx,rcx
  40d60f:	jne    0x40d600
  40d611:	cmp    dl,0x2c
  40d614:	mov    BYTE PTR [rsp+0x4f],0x1
  40d619:	jne    0x40d30b
  40d61f:	nop
  40d620:	mov    QWORD PTR [r12+0x20],0x0
  40d629:	jmp    0x40d44b
  40d62e:	xchg   ax,ax
  40d630:	mov    rdx,QWORD PTR [rsp+0x38]
  40d635:	xor    r8d,r8d
  40d638:	mov    rcx,r15
  40d63b:	mov    DWORD PTR [rsp+0x48],r11d
  40d640:	call   0x422770
  40d645:	movsxd rdi,DWORD PTR [rsp+0x48]
  40d64a:	mov    rdx,QWORD PTR [rsp+0x58]
  40d64f:	mov    eax,eax
  40d651:	lea    rsi,[r15+rdi*1]
  40d655:	cmp    rsi,rdx
  40d658:	je     0x40d697
  40d65a:	mov    r15,QWORD PTR [rsp+0x40]
  40d65f:	mov    r8,rdi
  40d662:	mov    rcx,r15
  40d665:	call   0x422810
  40d66a:	mov    BYTE PTR [rsp+rdi*1+0x60],0x0
  40d66f:	mov    r9,rbx
  40d672:	mov    DWORD PTR [rsp+0x20],ebp
  40d676:	mov    r8,r12
  40d679:	mov    rdx,r13
  40d67c:	mov    rcx,r15
  40d67f:	call   0x407920
  40d684:	cmp    ebp,eax
  40d686:	jbe    0x40d620
  40d688:	mov    ecx,eax
  40d68a:	mov    edx,0x1
  40d68f:	shl    edx,cl
  40d691:	test   edx,edx
  40d693:	mov    eax,edx
  40d695:	je     0x40d620
  40d697:	test   r14b,r14b
  40d69a:	je     0x40d730
  40d6a0:	not    rax
  40d6a3:	and    QWORD PTR [rsp+0x30],rax
  40d6a8:	mov    r15,rsi
  40d6ab:	jmp    0x40d410
  40d6b0:	cmp    dl,0x2d
  40d6b3:	je     0x40d720
  40d6b5:	cmp    dl,0x7c
  40d6b8:	je     0x40d34c
  40d6be:	xor    r14d,r14d
  40d6c1:	jmp    0x40d37f
  40d6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6d0:	mov    rax,QWORD PTR [rip+0x260c9]        # 0x4337a0
  40d6d7:	lea    rsi,[r15+0x1]
  40d6db:	test   rax,rax
  40d6de:	je     0x40d841
  40d6e4:	movzx  ecx,BYTE PTR [r15+0x1]
  40d6e9:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d6ed:	mov    rdx,rcx
  40d6f0:	je     0x40d702
  40d6f2:	add    rsi,0x1
  40d6f6:	movzx  ecx,BYTE PTR [rsi]
  40d6f9:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d6fd:	mov    rdx,rcx
  40d700:	jne    0x40d6f2
  40d702:	cmp    dl,0x7c
  40d705:	je     0x40d620
  40d70b:	cmp    dl,0x2c
  40d70e:	je     0x40d620
  40d714:	movzx  edx,BYTE PTR [rsi]
  40d717:	mov    r15,rsi
  40d71a:	jmp    0x40d323
  40d71f:	nop
  40d720:	mov    r14d,0x1
  40d726:	jmp    0x40d34f
  40d72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d730:	or     QWORD PTR [rsp+0x30],rax
  40d735:	jmp    0x40d6a8
  40d73a:	nop    WORD PTR [rax+rax*1+0x0]
  40d740:	lea    rdi,[rip+0x1c4ba]        # 0x429c01
  40d747:	mov    ecx,0x3
  40d74c:	mov    rsi,r15
  40d74f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d751:	jne    0x40d630
  40d757:	add    r15,0x3
  40d75b:	test   r14b,r14b
  40d75e:	jne    0x40d404
  40d764:	mov    eax,0xffffffff
  40d769:	mov    QWORD PTR [rsp+0x30],rax
  40d76e:	jmp    0x40d410
  40d773:	mov    ecx,0x2a
  40d778:	call   0x408aa0
  40d77d:	jmp    0x40d38f
  40d782:	mov    ecx,0xc
  40d787:	call   0x408aa0
  40d78c:	jmp    0x40d425
  40d791:	cmp    BYTE PTR [rsp+0x4f],0x0
  40d796:	je     0x40d7a2
  40d798:	mov    eax,0xffffffff
  40d79d:	xor    QWORD PTR [rsp+0x30],rax
  40d7a2:	cmp    ebp,0x3f
  40d7a5:	ja     0x40d7b8
  40d7a7:	mov    eax,0x1
  40d7ac:	mov    ecx,ebp
  40d7ae:	shl    eax,cl
  40d7b0:	sub    eax,0x1
  40d7b3:	and    QWORD PTR [rsp+0x30],rax
  40d7b8:	mov    rax,QWORD PTR [rsp+0x30]
  40d7bd:	mov    QWORD PTR [r12+0x20],rax
  40d7c2:	jmp    0x40d44b
  40d7c7:	mov    ecx,0xc
  40d7cc:	call   0x408aa0
  40d7d1:	jmp    0x40d363
  40d7d6:	mov    edi,0x1
  40d7db:	jmp    0x40d4b5
  40d7e0:	mov    rax,QWORD PTR [rip+0x25fb9]        # 0x4337a0
  40d7e7:	lea    rsi,[r15+0x1]
  40d7eb:	test   rax,rax
  40d7ee:	je     0x40d86e
  40d7f0:	movzx  ecx,BYTE PTR [r15+0x1]
  40d7f5:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d7f9:	mov    rdx,rcx
  40d7fc:	je     0x40d810
  40d7fe:	xchg   ax,ax
  40d800:	add    rsi,0x1
  40d804:	movzx  ecx,BYTE PTR [rsi]
  40d807:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d80b:	mov    rdx,rcx
  40d80e:	jne    0x40d800
  40d810:	cmp    dl,0x3d
  40d813:	je     0x40d620
  40d819:	cmp    dl,0x5e
  40d81c:	je     0x40d5c8
  40d822:	cmp    dl,0x2c
  40d825:	je     0x40d620
  40d82b:	mov    r15,rsi
  40d82e:	mov    BYTE PTR [rsp+0x4f],0x0
  40d833:	mov    QWORD PTR [rsp+0x30],0x0
  40d83c:	jmp    0x40d30b
  40d841:	mov    ecx,0xc
  40d846:	call   0x408aa0
  40d84b:	jmp    0x40d6e4
  40d850:	mov    ecx,0xc
  40d855:	call   0x408aa0
  40d85a:	jmp    0x40d2d4
  40d85f:	mov    ecx,0xc
  40d864:	call   0x408aa0
  40d869:	jmp    0x40d5e8
  40d86e:	mov    ecx,0xc
  40d873:	call   0x408aa0
  40d878:	jmp    0x40d7f0
  40d87d:	nop    DWORD PTR [rax]
  40d880:	push   r15
  40d882:	push   r14
  40d884:	push   r13
  40d886:	push   r12
  40d888:	push   rbp
  40d889:	push   rdi
  40d88a:	push   rsi
  40d88b:	push   rbx
  40d88c:	sub    rsp,0x68
  40d890:	cmp    rcx,0xf
  40d894:	mov    rsi,rcx
  40d897:	mov    rbx,rdx
  40d89a:	mov    edi,r8d
  40d89d:	mov    rbp,r9
  40d8a0:	ja     0x40d8c0
  40d8a2:	cmp    rcx,0x1
  40d8a6:	je     0x40d9d0
  40d8ac:	add    rsp,0x68
  40d8b0:	pop    rbx
  40d8b1:	pop    rsi
  40d8b2:	pop    rdi
  40d8b3:	pop    rbp
  40d8b4:	pop    r12
  40d8b6:	pop    r13
  40d8b8:	pop    r14
  40d8ba:	pop    r15
  40d8bc:	ret    
  40d8bd:	nop    DWORD PTR [rax]
  40d8c0:	test   BYTE PTR [rdx+0x10],0x8
  40d8c4:	je     0x40d8e0
  40d8c6:	mov    rcx,QWORD PTR [rdx+0x20]
  40d8ca:	test   rcx,rcx
  40d8cd:	je     0x40d8ac
  40d8cf:	call   0x422858
  40d8d4:	jmp    0x40d8ac
  40d8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d8e0:	mov    r13,QWORD PTR [rdx+0x18]
  40d8e4:	mov    r14,QWORD PTR [rip+0x29829]        # 0x437114
  40d8eb:	call   r14
  40d8ee:	mov    DWORD PTR [rax],0x0
  40d8f4:	mov    eax,edi
  40d8f6:	and    eax,0x3
  40d8f9:	cmp    eax,0x1
  40d8fc:	je     0x40da45
  40d902:	cmp    eax,0x2
  40d905:	je     0x40da03
  40d90b:	mov    edx,0x5c
  40d910:	mov    rcx,r13
  40d913:	call   0x422788
  40d918:	test   rax,rax
  40d91b:	je     0x40d97c
  40d91d:	sub    rax,r13
  40d920:	lea    rcx,[rax+0x1]
  40d924:	mov    r12,rax
  40d927:	call   0x408f90
  40d92c:	mov    r8,r12
  40d92f:	mov    r15,rax
  40d932:	mov    rdx,r13
  40d935:	mov    rcx,rax
  40d938:	call   0x422810
  40d93d:	mov    BYTE PTR [r15+r12*1],0x0
  40d942:	lea    rdx,[rsp+0x20]
  40d947:	mov    rcx,r15
  40d94a:	call   QWORD PTR [rip+0x299e4]        # 0x437334
  40d950:	test   eax,eax
  40d952:	jne    0x40db06
  40d958:	call   r14
  40d95b:	mov    DWORD PTR [rax],0x16
  40d961:	movzx  eax,WORD PTR [rsp+0x26]
  40d966:	and    ax,0xf000
  40d96a:	cmp    ax,0x4000
  40d96e:	jne    0x40db06
  40d974:	mov    rcx,r15
  40d977:	call   0x422858
  40d97c:	and    edi,0x30
  40d97f:	cmp    edi,0x10
  40d982:	je     0x40da75
  40d988:	cmp    edi,0x20
  40d98b:	jne    0x40d8ac
  40d991:	mov    rcx,QWORD PTR [rbx+0x18]
  40d995:	mov    rdx,rbp
  40d998:	call   0x422880
  40d99d:	test   rax,rax
  40d9a0:	mov    rdi,rax
  40d9a3:	je     0x40db19
  40d9a9:	mov    edx,DWORD PTR [rbx+0x10]
  40d9ac:	test   dl,0x40
  40d9af:	je     0x40dac2
  40d9b5:	mov    rax,QWORD PTR [rbx+0x18]
  40d9b9:	mov    QWORD PTR [rbx+0x20],rax
  40d9bd:	and    edx,0xffffffbf
  40d9c0:	mov    QWORD PTR [rbx+0x18],rdi
  40d9c4:	mov    DWORD PTR [rbx+0x10],edx
  40d9c7:	jmp    0x40d8ac
  40d9cc:	nop    DWORD PTR [rax+0x0]
  40d9d0:	and    edi,0x3
  40d9d3:	cmp    edi,0x1
  40d9d6:	je     0x40daa4
  40d9dc:	cmp    edi,0x2
  40d9df:	jne    0x40d8ac
  40d9e5:	mov    ecx,DWORD PTR [rip+0x25c45]        # 0x433630
  40d9eb:	mov    rdx,QWORD PTR [rip+0x25c16]        # 0x433608
  40d9f2:	add    rcx,QWORD PTR [rip+0x17f77]        # 0x425970
  40d9f9:	call   0x422868
  40d9fe:	jmp    0x40d8ac
  40da03:	lea    rdx,[rsp+0x20]
  40da08:	mov    rcx,r13
  40da0b:	call   QWORD PTR [rip+0x29923]        # 0x437334
  40da11:	test   eax,eax
  40da13:	je     0x40da21
  40da15:	call   r14
  40da18:	cmp    DWORD PTR [rax],0x2
  40da1b:	je     0x40d90b
  40da21:	call   r14
  40da24:	cmp    DWORD PTR [rax],0x0
  40da27:	jne    0x40da32
  40da29:	call   r14
  40da2c:	mov    DWORD PTR [rax],0x16
  40da32:	mov    rcx,QWORD PTR [rsi+0x28]
  40da36:	lea    rdx,[rip+0x1b0d3]        # 0x428b10
  40da3d:	mov    r8,r13
  40da40:	call   0x407b10
  40da45:	lea    rdx,[rsp+0x20]
  40da4a:	mov    rcx,r13
  40da4d:	call   QWORD PTR [rip+0x298e1]        # 0x437334
  40da53:	test   eax,eax
  40da55:	jne    0x40da32
  40da57:	call   r14
  40da5a:	mov    DWORD PTR [rax],0x16
  40da60:	movzx  eax,WORD PTR [rsp+0x26]
  40da65:	and    ax,0xf000
  40da69:	cmp    ax,0x8000
  40da6d:	je     0x40d97c
  40da73:	jmp    0x40da32
  40da75:	mov    rcx,QWORD PTR [rbx+0x18]
  40da79:	mov    edx,ebp
  40da7b:	call   0x422708
  40da80:	test   eax,eax
  40da82:	mov    edi,eax
  40da84:	js     0x40daf2
  40da86:	mov    edx,DWORD PTR [rbx+0x10]
  40da89:	test   dl,0x40
  40da8c:	je     0x40dae0
  40da8e:	mov    rax,QWORD PTR [rbx+0x18]
  40da92:	mov    QWORD PTR [rbx+0x20],rax
  40da96:	and    edx,0xffffffbf
  40da99:	mov    DWORD PTR [rbx+0x18],edi
  40da9c:	mov    DWORD PTR [rbx+0x10],edx
  40da9f:	jmp    0x40d8ac
  40daa4:	mov    ecx,DWORD PTR [rip+0x25b86]        # 0x433630
  40daaa:	mov    rdx,QWORD PTR [rip+0x25b57]        # 0x433608
  40dab1:	add    rcx,QWORD PTR [rip+0x17ec0]        # 0x425978
  40dab8:	call   0x422868
  40dabd:	jmp    0x40d8ac
  40dac2:	mov    rcx,QWORD PTR [rbx+0x18]
  40dac6:	call   0x408d00
  40dacb:	mov    edx,DWORD PTR [rbx+0x10]
  40dace:	mov    QWORD PTR [rbx+0x20],rax
  40dad2:	jmp    0x40d9bd
  40dad7:	nop    WORD PTR [rax+rax*1+0x0]
  40dae0:	mov    rcx,QWORD PTR [rbx+0x18]
  40dae4:	call   0x408d00
  40dae9:	mov    edx,DWORD PTR [rbx+0x10]
  40daec:	mov    QWORD PTR [rbx+0x20],rax
  40daf0:	jmp    0x40da96
  40daf2:	mov    rcx,QWORD PTR [rsi+0x28]
  40daf6:	mov    r8,QWORD PTR [rbx+0x18]
  40dafa:	lea    rdx,[rip+0x1b014]        # 0x428b15
  40db01:	call   0x407b10
  40db06:	mov    rcx,QWORD PTR [rsi+0x28]
  40db0a:	lea    rdx,[rip+0x1afff]        # 0x428b10
  40db11:	mov    r8,r15
  40db14:	call   0x407b10
  40db19:	mov    rcx,QWORD PTR [rsi+0x28]
  40db1d:	mov    r8,QWORD PTR [rbx+0x18]
  40db21:	lea    rdx,[rip+0x1aff2]        # 0x428b1a
  40db28:	call   0x407b10
  40db2d:	nop
  40db2e:	xchg   ax,ax
  40db30:	push   r15
  40db32:	push   r14
  40db34:	push   r13
  40db36:	push   r12
  40db38:	push   rbp
  40db39:	push   rdi
  40db3a:	push   rsi
  40db3b:	push   rbx
  40db3c:	sub    rsp,0x38
  40db40:	mov    edi,edx
  40db42:	mov    rbp,rcx
  40db45:	mov    rcx,r8
  40db48:	mov    rbx,r8
  40db4b:	mov    r12,r9
  40db4e:	call   0x4227a8
  40db53:	movsxd rdx,edi
  40db56:	cmp    rax,rdx
  40db59:	setae  sil
  40db5d:	test   rax,rax
  40db60:	sete   al
  40db63:	or     sil,al
  40db66:	jne    0x40dba5
  40db68:	movzx  r10d,BYTE PTR [rbx]
  40db6c:	cmp    r10b,0x24
  40db70:	je     0x40dbc0
  40db72:	mov    r9d,r10d
  40db75:	xor    eax,eax
  40db77:	jmp    0x40db94
  40db79:	nop    DWORD PTR [rax+0x0]
  40db80:	add    rax,0x1
  40db84:	mov    r8d,edi
  40db87:	sub    r8d,eax
  40db8a:	test   r8d,r8d
  40db8d:	jle    0x40dba5
  40db8f:	movzx  r9d,BYTE PTR [rbx+rax*1]
  40db94:	test   r9b,r9b
  40db97:	mov    BYTE PTR [rbp+rax*1+0x0],r9b
  40db9c:	jne    0x40db80
  40db9e:	mov    esi,0x1
  40dba3:	jmp    0x40dba7
  40dba5:	xor    esi,esi
  40dba7:	mov    eax,esi
  40dba9:	add    rsp,0x38
  40dbad:	pop    rbx
  40dbae:	pop    rsi
  40dbaf:	pop    rdi
  40dbb0:	pop    rbp
  40dbb1:	pop    r12
  40dbb3:	pop    r13
  40dbb5:	pop    r14
  40dbb7:	pop    r15
  40dbb9:	ret    
  40dbba:	nop    WORD PTR [rax+rax*1+0x0]
  40dbc0:	movzx  eax,BYTE PTR [rbx+0x1]
  40dbc4:	cmp    al,0x24
  40dbc6:	je     0x40dcbe
  40dbcc:	cmp    al,0x40
  40dbce:	je     0x40dc8a
  40dbd4:	test   al,al
  40dbd6:	je     0x40dba7
  40dbd8:	cmp    al,0x7f
  40dbda:	ja     0x40dba7
  40dbdc:	lea    rcx,[rip+0x1eb1d]        # 0x42c700
  40dbe3:	movzx  edx,al
  40dbe6:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40dbed:	je     0x40dba7
  40dbef:	add    rbx,0x1
  40dbf3:	mov    r8,rbp
  40dbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc00:	add    r8,0x1
  40dc04:	add    rbx,0x1
  40dc08:	mov    BYTE PTR [r8-0x1],al
  40dc0c:	movzx  eax,BYTE PTR [rbx]
  40dc0f:	cmp    al,0x7f
  40dc11:	ja     0x40dc1f
  40dc13:	movzx  edx,al
  40dc16:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  40dc1d:	jne    0x40dc00
  40dc1f:	cmp    r8,rbp
  40dc22:	je     0x40dba7
  40dc24:	mov    BYTE PTR [r8],0x0
  40dc28:	mov    rcx,rbp
  40dc2b:	call   0x422838
  40dc30:	test   rax,rax
  40dc33:	mov    r14,rax
  40dc36:	je     0x40dba7
  40dc3c:	mov    rcx,rax
  40dc3f:	mov    edi,edi
  40dc41:	call   0x4227a8
  40dc46:	mov    rcx,rbx
  40dc49:	mov    r13,rax
  40dc4c:	call   0x4227a8
  40dc51:	lea    r12,[rax+0x1]
  40dc55:	lea    rax,[r12+r13*1]
  40dc59:	cmp    rax,rdi
  40dc5c:	jae    0x40dba7
  40dc62:	mov    r8,r13
  40dc65:	mov    rdx,r14
  40dc68:	mov    rcx,rbp
  40dc6b:	call   0x422810
  40dc70:	lea    rcx,[rbp+r13*1+0x0]
  40dc75:	mov    r8,r12
  40dc78:	mov    rdx,rbx
  40dc7b:	mov    esi,0x1
  40dc80:	call   0x422810
  40dc85:	jmp    0x40dba7
  40dc8a:	mov    r9,QWORD PTR [rip+0x17a77]        # 0x425708
  40dc91:	cmp    BYTE PTR [r9],0x0
  40dc95:	je     0x40dba5
  40dc9b:	add    rbx,0x2
  40dc9f:	lea    r8,[rip+0x1aaf5]        # 0x42879b
  40dca6:	mov    rcx,rbp
  40dca9:	mov    QWORD PTR [rsp+0x20],rbx
  40dcae:	call   0x407540
  40dcb3:	cmp    edi,eax
  40dcb5:	setg   sil
  40dcb9:	jmp    0x40dba7
  40dcbe:	movzx  eax,BYTE PTR [rbx+0x2]
  40dcc2:	test   al,al
  40dcc4:	je     0x40dd66
  40dcca:	cmp    al,0x5c
  40dccc:	mov    r15d,0x3
  40dcd2:	jne    0x40dba7
  40dcd8:	mov    edx,0x5c
  40dcdd:	mov    rcx,r12
  40dce0:	mov    r14,r12
  40dce3:	call   0x4227d0
  40dce8:	test   rax,rax
  40dceb:	je     0x40dd71
  40dcf1:	mov    edx,0x5c
  40dcf6:	mov    rcx,r14
  40dcf9:	call   0x422788
  40dcfe:	test   rax,rax
  40dd01:	mov    r13,rax
  40dd04:	je     0x40dba7
  40dd0a:	movsxd rax,r15d
  40dd0d:	sub    r13,r14
  40dd10:	mov    edi,edi
  40dd12:	add    rbx,rax
  40dd15:	add    r13,0x1
  40dd19:	mov    rcx,rbx
  40dd1c:	call   0x4227a8
  40dd21:	lea    r15,[rax+0x1]
  40dd25:	lea    rax,[r15+r13*1]
  40dd29:	cmp    rax,rdi
  40dd2c:	ja     0x40dba7
  40dd32:	mov    r8,r13
  40dd35:	mov    rdx,r14
  40dd38:	mov    rcx,rbp
  40dd3b:	call   0x422810
  40dd40:	lea    rcx,[rbp+r13*1+0x0]
  40dd45:	mov    r8,r15
  40dd48:	mov    rdx,rbx
  40dd4b:	call   0x422810
  40dd50:	cmp    r12,r14
  40dd53:	je     0x40db9e
  40dd59:	mov    rcx,r14
  40dd5c:	call   0x422858
  40dd61:	jmp    0x40db9e
  40dd66:	mov    r15d,0x2
  40dd6c:	jmp    0x40dcd8
  40dd71:	lea    rcx,[rip+0x1a9ea]        # 0x428762
  40dd78:	call   0x422838
  40dd7d:	mov    rdx,r12
  40dd80:	mov    rcx,rax
  40dd83:	call   0x409f00
  40dd88:	test   rax,rax
  40dd8b:	mov    r14,rax
  40dd8e:	jne    0x40dcf1
  40dd94:	jmp    0x40dba7
  40dd99:	nop    DWORD PTR [rax+0x0]
  40dda0:	push   r15
  40dda2:	push   r14
  40dda4:	push   r13
  40dda6:	push   r12
  40dda8:	push   rbp
  40dda9:	push   rdi
  40ddaa:	push   rsi
  40ddab:	push   rbx
  40ddac:	sub    rsp,0x178
  40ddb3:	mov    rbx,rcx
  40ddb6:	mov    r12,rdx
  40ddb9:	mov    rcx,QWORD PTR [rip+0x17c40]        # 0x425a00
  40ddc0:	mov    rdx,QWORD PTR [rip+0x25841]        # 0x433608
  40ddc7:	mov    r13,r8
  40ddca:	lea    rsi,[rbx+0x8]
  40ddce:	lea    rbp,[rsp+0x60]
  40ddd3:	call   0x422868
  40ddd8:	mov    rbx,QWORD PTR [rbx]
  40dddb:	test   rbx,rbx
  40ddde:	je     0x40deb0
  40dde4:	lea    r15,[rsp+0x20]
  40dde9:	mov    r14,QWORD PTR [rip+0x29544]        # 0x437334
  40ddf0:	jmp    0x40de14
  40ddf2:	mov    rdx,QWORD PTR [rip+0x2580f]        # 0x433608
  40ddf9:	add    rsi,0x8
  40ddfd:	mov    ecx,0xa
  40de02:	call   0x422870
  40de07:	mov    rbx,QWORD PTR [rsi-0x8]
  40de0b:	test   rbx,rbx
  40de0e:	je     0x40deb0
  40de14:	mov    r9,r13
  40de17:	mov    r8,rbx
  40de1a:	mov    edx,0x105
  40de1f:	mov    rcx,rbp
  40de22:	mov    rdi,rbx
  40de25:	call   0x40db30
  40de2a:	test   al,al
  40de2c:	je     0x40de36
  40de2e:	cmp    BYTE PTR [rbx],0x24
  40de31:	mov    rdi,rbp
  40de34:	je     0x40de94
  40de36:	mov    rdx,QWORD PTR [rip+0x17bab]        # 0x4259e8
  40de3d:	mov    rcx,QWORD PTR [rip+0x257c4]        # 0x433608
  40de44:	mov    r8,rbx
  40de47:	call   0x407150
  40de4c:	cmp    BYTE PTR [r12],0x0
  40de51:	je     0x40ddf2
  40de53:	mov    rdx,r15
  40de56:	mov    rcx,rdi
  40de59:	call   r14
  40de5c:	test   eax,eax
  40de5e:	jne    0x40ddf2
  40de60:	movzx  eax,WORD PTR [rsp+0x26]
  40de65:	and    ax,0xf000
  40de69:	cmp    ax,0x4000
  40de6d:	jne    0x40ddf2
  40de6f:	mov    rdx,QWORD PTR [rip+0x25792]        # 0x433608
  40de76:	mov    ecx,0x5c
  40de7b:	call   0x422870
  40de80:	mov    rdx,QWORD PTR [rip+0x25781]        # 0x433608
  40de87:	mov    rcx,r12
  40de8a:	call   0x422868
  40de8f:	jmp    0x40ddf2
  40de94:	movzx  eax,BYTE PTR [rbx+0x1]
  40de98:	cmp    al,0x40
  40de9a:	je     0x40dea0
  40de9c:	cmp    al,0x24
  40de9e:	jne    0x40de36
  40dea0:	mov    rdi,rbp
  40dea3:	mov    rbx,rbp
  40dea6:	jmp    0x40de36
  40dea8:	nop    DWORD PTR [rax+rax*1+0x0]
  40deb0:	add    rsp,0x178
  40deb7:	pop    rbx
  40deb8:	pop    rsi
  40deb9:	pop    rdi
  40deba:	pop    rbp
  40debb:	pop    r12
  40debd:	pop    r13
  40debf:	pop    r14
  40dec1:	pop    r15
  40dec3:	ret    
  40dec4:	xchg   ax,ax
  40dec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ded0:	push   r15
  40ded2:	push   r14
  40ded4:	push   r13
  40ded6:	push   r12
  40ded8:	push   rbp
  40ded9:	push   rdi
  40deda:	push   rsi
  40dedb:	push   rbx
  40dedc:	sub    rsp,0xc8
  40dee3:	mov    rax,QWORD PTR [rip+0x1758e]        # 0x425478
  40deea:	mov    rsi,rcx
  40deed:	mov    edx,DWORD PTR [rax+0x78]
  40def0:	test   dl,0xf
  40def3:	je     0x40e2b0
  40def9:	mov    rdx,QWORD PTR [rax+0x80]
  40df00:	mov    QWORD PTR [rip+0x25749],rdx        # 0x433650
  40df07:	test   BYTE PTR [rax+0x10],0xf
  40df0b:	mov    r12,QWORD PTR [rip+0x291b2]        # 0x4370c4
  40df12:	jne    0x40e2d5
  40df18:	cmp    QWORD PTR [rip+0x25728],0x0        # 0x433648
  40df20:	je     0x40df35
  40df22:	call   r12
  40df25:	mov    rcx,QWORD PTR [rip+0x2571c]        # 0x433648
  40df2c:	lea    rdx,[rax+0x30]
  40df30:	call   0x422868
  40df35:	lea    rdi,[rsp+0x40]
  40df3a:	xor    ecx,ecx
  40df3c:	call   QWORD PTR [rip+0x2925a]        # 0x43719c
  40df42:	lea    rcx,[rsp+0x38]
  40df47:	mov    QWORD PTR [rsp+0x38],rax
  40df4c:	call   QWORD PTR [rip+0x29212]        # 0x437164
  40df52:	lea    r8,[rip+0x1be48]        # 0x429da1
  40df59:	mov    r9,rax
  40df5c:	mov    edx,0x80
  40df61:	mov    rcx,rdi
  40df64:	call   0x4227b0
  40df69:	mov    rax,QWORD PTR [rip+0x17508]        # 0x425478
  40df70:	lea    r8,[rip+0x1be23]        # 0x429d9a
  40df77:	test   BYTE PTR [rax+0x10],0xf
  40df7b:	je     0x40df81
  40df7d:	mov    r8,QWORD PTR [rax+0x18]
  40df81:	cmp    QWORD PTR [rip+0x256bf],0x0        # 0x433648
  40df89:	je     0x40e6b4
  40df8f:	lea    rdx,[rip+0x1d494]        # 0x42b42a
  40df96:	lea    rcx,[rip+0x1d243]        # 0x42b1e0
  40df9d:	mov    r9,rdi
  40dfa0:	xor    ebx,ebx
  40dfa2:	call   0x407560
  40dfa7:	mov    rdx,QWORD PTR [rsi+0x30]
  40dfab:	lea    rcx,[rip+0x1beff]        # 0x429eb1
  40dfb2:	call   0x407560
  40dfb7:	mov    rbp,QWORD PTR [rsi+0x30]
  40dfbb:	mov    r13,QWORD PTR [rip+0x29342]        # 0x437304
  40dfc2:	movsx  ecx,BYTE PTR [rbp+rbx*1+0x0]
  40dfc7:	call   r13
  40dfca:	mov    BYTE PTR [rdi+rbx*1],al
  40dfcd:	add    rbx,0x1
  40dfd1:	test   al,al
  40dfd3:	jne    0x40dfc2
  40dfd5:	lea    r8,[rip+0x1ad07]        # 0x428ce3
  40dfdc:	lea    rcx,[rip+0x1bfb6]        # 0x429f99
  40dfe3:	mov    rdx,rbp
  40dfe6:	mov    QWORD PTR [rsi+0x20],rdi
  40dfea:	mov    QWORD PTR [rsi+0x28],rdi
  40dfee:	call   0x407560
  40dff3:	mov    rdx,QWORD PTR [rsi+0x30]
  40dff7:	lea    r8,[rip+0x1acef]        # 0x428ced
  40dffe:	lea    rcx,[rip+0x1bf94]        # 0x429f99
  40e005:	call   0x407560
  40e00a:	mov    rbx,QWORD PTR [rsi+0x78]
  40e00e:	lea    rdx,[rip+0x2dfb]        # 0x410e10
  40e015:	mov    eax,DWORD PTR [rsi+0xb0]
  40e01b:	cmp    QWORD PTR [rbx+0x38],rdx
  40e01f:	je     0x40e04f
  40e021:	cmp    eax,0x1
  40e024:	jle    0x40e06a
  40e026:	sub    eax,0x2
  40e029:	add    rax,0x1
  40e02d:	lea    rcx,[rax+rax*2]
  40e031:	lea    rax,[rax+rcx*4]
  40e035:	lea    rcx,[rbx+rax*8]
  40e039:	mov    rax,rbx
  40e03c:	jmp    0x40e045
  40e03e:	xchg   ax,ax
  40e040:	cmp    rax,rcx
  40e043:	je     0x40e06a
  40e045:	add    rax,0x68
  40e049:	cmp    QWORD PTR [rax+0x38],rdx
  40e04d:	jne    0x40e040
  40e04f:	mov    rdx,QWORD PTR [rsi+0x30]
  40e053:	lea    r8,[rip+0x1ac99]        # 0x428cf3
  40e05a:	lea    rcx,[rip+0x1bf38]        # 0x429f99
  40e061:	call   0x407560
  40e066:	mov    rbx,QWORD PTR [rsi+0x78]
  40e06a:	mov    eax,DWORD PTR [rsi+0xb4]
  40e070:	test   eax,eax
  40e072:	jle    0x40e140
  40e078:	sub    eax,0x1
  40e07b:	lea    r14,[rip+0x1c98a]        # 0x42aa0c
  40e082:	lea    r13,[rip+0x1d31e]        # 0x42b3a7
  40e089:	add    rax,0x1
  40e08d:	lea    rdx,[rax+rax*2]
  40e091:	lea    rax,[rax+rdx*4]
  40e095:	lea    rbp,[rbx+rax*8]
  40e099:	jmp    0x40e0e6
  40e09b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0a0:	cmp    eax,0x4
  40e0a3:	je     0x40e2a0
  40e0a9:	cmp    eax,0x5
  40e0ac:	jne    0x40e280
  40e0b2:	mov    r9d,DWORD PTR [rbx+0x18]
  40e0b6:	lea    r8,[rip+0x1a607]        # 0x4286c4
  40e0bd:	mov    edx,0x20
  40e0c2:	mov    rcx,rdi
  40e0c5:	call   0x407540
  40e0ca:	mov    r8,QWORD PTR [rbx+0x48]
  40e0ce:	mov    r9,rdi
  40e0d1:	mov    rdx,QWORD PTR [rsi+0x30]
  40e0d5:	mov    rcx,r15
  40e0d8:	call   0x407560
  40e0dd:	add    rbx,0x68
  40e0e1:	cmp    rbx,rbp
  40e0e4:	je     0x40e140
  40e0e6:	mov    eax,DWORD PTR [rbx+0x10]
  40e0e9:	test   eax,0x280000
  40e0ee:	jne    0x40e0dd
  40e0f0:	mov    r8,QWORD PTR [rbx+0x48]
  40e0f4:	test   r8,r8
  40e0f7:	je     0x40e0dd
  40e0f9:	cmp    WORD PTR [rbx+0xc],0x1
  40e0fe:	mov    r15,r13
  40e101:	cmova  r15,r14
  40e105:	and    eax,0xf000
  40e10a:	shr    eax,0xc
  40e10d:	cmp    eax,0x3
  40e110:	je     0x40e260
  40e116:	ja     0x40e0a0
  40e118:	cmp    eax,0x2
  40e11b:	jne    0x40e280
  40e121:	mov    rdx,rbx
  40e124:	mov    ecx,0x2
  40e129:	call   QWORD PTR [rbx+0x38]
  40e12c:	mov    r9,QWORD PTR [rbx+0x18]
  40e130:	mov    r8,QWORD PTR [rbx+0x48]
  40e134:	jmp    0x40e0d1
  40e136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e140:	mov    eax,DWORD PTR [rsi+0x10]
  40e143:	and    eax,0x3
  40e146:	cmp    eax,0x2
  40e149:	je     0x40e674
  40e14f:	cmp    eax,0x3
  40e152:	je     0x40e590
  40e158:	cmp    eax,0x1
  40e15b:	je     0x40e410
  40e161:	call   r12
  40e164:	lea    rcx,[rip+0x1cb42]        # 0x42acad
  40e16b:	lea    r9,[rax+0x30]
  40e16f:	mov    r8d,0x66
  40e175:	mov    edx,0x1
  40e17a:	call   0x422840
  40e17f:	call   r12
  40e182:	lea    rcx,[rip+0x1c2bd]        # 0x42a446
  40e189:	lea    r9,[rax+0x30]
  40e18d:	mov    edx,0x1
  40e192:	mov    r8d,0xfa
  40e198:	call   0x422840
  40e19d:	mov    rcx,rsi
  40e1a0:	call   0x409760
  40e1a5:	mov    rdx,QWORD PTR [rsi+0x30]
  40e1a9:	lea    rcx,[rip+0x1c4d5]        # 0x42a685
  40e1b0:	call   0x407560
  40e1b5:	mov    edi,DWORD PTR [rsi+0xb4]
  40e1bb:	mov    rdx,QWORD PTR [rsi+0x30]
  40e1bf:	lea    rcx,[rip+0x1c105]        # 0x42a2cb
  40e1c6:	mov    rbx,QWORD PTR [rsi+0x78]
  40e1ca:	call   0x407560
  40e1cf:	test   edi,edi
  40e1d1:	jle    0x40e4c3
  40e1d7:	lea    eax,[rdi-0x1]
  40e1da:	lea    rbp,[rip+0x1bf96]        # 0x42a177
  40e1e1:	lea    rdi,[rip+0x1bfeb]        # 0x42a1d3
  40e1e8:	add    rax,0x1
  40e1ec:	lea    rdx,[rax+rax*2]
  40e1f0:	lea    rax,[rax+rdx*4]
  40e1f4:	lea    r13,[rbx+rax*8]
  40e1f8:	jmp    0x40e22f
  40e1fa:	nop    WORD PTR [rax+rax*1+0x0]
  40e200:	test   eax,0x100000
  40e205:	je     0x40e222
  40e207:	cmp    WORD PTR [rbx+0xc],0x2
  40e20c:	mov    rcx,rbp
  40e20f:	mov    r9d,0x1
  40e215:	cmovb  rcx,rdi
  40e219:	mov    rdx,QWORD PTR [rsi+0x30]
  40e21d:	call   0x407560
  40e222:	add    rbx,0x68
  40e226:	cmp    rbx,r13
  40e229:	je     0x40e4c3
  40e22f:	mov    eax,DWORD PTR [rbx+0x10]
  40e232:	test   eax,0x280000
  40e237:	jne    0x40e222
  40e239:	mov    r8,QWORD PTR [rbx+0x48]
  40e23d:	test   r8,r8
  40e240:	je     0x40e222
  40e242:	movzx  r9d,WORD PTR [rbx+0xa]
  40e247:	test   r9w,r9w
  40e24b:	je     0x40e200
  40e24d:	cmp    WORD PTR [rbx+0xc],0x1
  40e252:	mov    rcx,rdi
  40e255:	cmova  rcx,rbp
  40e259:	jmp    0x40e219
  40e25b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e260:	mov    eax,DWORD PTR [rbx+0x18]
  40e263:	lea    r9,[rip+0x1b9e5]        # 0x429c4f
  40e26a:	test   eax,eax
  40e26c:	lea    rax,[rip+0x1bb5c]        # 0x429dcf
  40e273:	cmovne r9,rax
  40e277:	jmp    0x40e0d1
  40e27c:	nop    DWORD PTR [rax+0x0]
  40e280:	mov    r9,QWORD PTR [rbx+0x18]
  40e284:	test   r9,r9
  40e287:	jne    0x40e0d1
  40e28d:	lea    rax,[rip+0x1d158]        # 0x42b3ec
  40e294:	cmp    r15,r13
  40e297:	cmove  r15,rax
  40e29b:	jmp    0x40e0d1
  40e2a0:	mov    r9d,DWORD PTR [rbx+0x18]
  40e2a4:	lea    r8,[rip+0x1a897]        # 0x428b42
  40e2ab:	jmp    0x40e0bd
  40e2b0:	and    edx,0x20
  40e2b3:	je     0x40e690
  40e2b9:	test   BYTE PTR [rax+0x10],0xf
  40e2bd:	mov    QWORD PTR [rip+0x25388],0x0        # 0x433650
  40e2c8:	mov    r12,QWORD PTR [rip+0x28df5]        # 0x4370c4
  40e2cf:	je     0x40df18
  40e2d5:	mov    r13,QWORD PTR [rax+0x18]
  40e2d9:	lea    rdx,[rip+0x1a850]        # 0x428b30
  40e2e0:	mov    rbp,QWORD PTR [rsi+0x28]
  40e2e4:	mov    rcx,r13
  40e2e7:	call   0x422880
  40e2ec:	test   rax,rax
  40e2ef:	mov    rdi,rax
  40e2f2:	je     0x40e714
  40e2f8:	mov    rcx,rax
  40e2fb:	call   0x422700
  40e300:	lea    rdx,[rsp+0x40]
  40e305:	mov    ecx,eax
  40e307:	call   QWORD PTR [rip+0x28e2f]        # 0x43713c
  40e30d:	test   eax,eax
  40e30f:	jne    0x40e724
  40e315:	movzx  eax,WORD PTR [rsp+0x46]
  40e31a:	and    ax,0xf000
  40e31e:	cmp    ax,0x8000
  40e322:	jne    0x40e724
  40e328:	mov    rax,QWORD PTR [rsp+0x58]
  40e32d:	lea    rcx,[rax+0x1]
  40e331:	call   0x408f90
  40e336:	mov    r8,QWORD PTR [rsp+0x58]
  40e33b:	mov    r12,rax
  40e33e:	mov    rbx,rax
  40e341:	jmp    0x40e358
  40e343:	mov    r8,QWORD PTR [rsp+0x58]
  40e348:	sub    r8,rax
  40e34b:	test   r8,r8
  40e34e:	mov    QWORD PTR [rsp+0x58],r8
  40e353:	je     0x40e36d
  40e355:	add    rbx,rax
  40e358:	mov    r9,rdi
  40e35b:	mov    edx,0x1
  40e360:	mov    rcx,rbx
  40e363:	call   0x422860
  40e368:	test   rax,rax
  40e36b:	jne    0x40e343
  40e36d:	mov    BYTE PTR [rbx],0x0
  40e370:	mov    rcx,rdi
  40e373:	call   0x422898
  40e378:	test   r12,r12
  40e37b:	mov    QWORD PTR [rip+0x252b6],r12        # 0x433638
  40e382:	je     0x40e3ca
  40e384:	lea    rdx,[rip+0x1d09f]        # 0x42b42a
  40e38b:	mov    rcx,r12
  40e38e:	call   0x422780
  40e393:	test   rax,rax
  40e396:	je     0x40e6f8
  40e39c:	lea    rcx,[rax+0x1]
  40e3a0:	lea    rdx,[rip+0x1beb0]        # 0x42a257
  40e3a7:	mov    BYTE PTR [rax],0x0
  40e3aa:	call   0x422780
  40e3af:	test   rax,rax
  40e3b2:	je     0x40e6df
  40e3b8:	add    rax,0x73
  40e3bc:	mov    QWORD PTR [rip+0x25285],r12        # 0x433648
  40e3c3:	mov    QWORD PTR [rip+0x25276],rax        # 0x433640
  40e3ca:	mov    r12,QWORD PTR [rip+0x28cf3]        # 0x4370c4
  40e3d1:	call   r12
  40e3d4:	lea    rdx,[rip+0x1a75d]        # 0x428b38
  40e3db:	lea    r8,[rax+0x30]
  40e3df:	mov    rcx,r13
  40e3e2:	call   0x422850
  40e3e7:	mov    rbx,rax
  40e3ea:	call   r12
  40e3ed:	lea    rdx,[rax+0x30]
  40e3f1:	cmp    rbx,rdx
  40e3f4:	je     0x40df18
  40e3fa:	lea    rdx,[rip+0x1a739]        # 0x428b3a
  40e401:	mov    r8,r13
  40e404:	mov    rcx,rbp
  40e407:	call   0x407b10
  40e40c:	nop    DWORD PTR [rax+0x0]
  40e410:	call   r12
  40e413:	lea    rcx,[rip+0x1c19c]        # 0x42a5b6
  40e41a:	lea    r9,[rax+0x30]
  40e41e:	mov    r8d,0xce
  40e424:	mov    edx,0x1
  40e429:	call   0x422840
  40e42e:	call   r12
  40e431:	lea    rcx,[rip+0x1b846]        # 0x429c7e
  40e438:	lea    r9,[rax+0x30]
  40e43c:	mov    r8d,0xa
  40e442:	mov    edx,0x1
  40e447:	call   0x422840
  40e44c:	call   r12
  40e44f:	lea    rcx,[rip+0x1bff0]        # 0x42a446
  40e456:	lea    r9,[rax+0x30]
  40e45a:	mov    edx,0x1
  40e45f:	mov    r8d,0xfa
  40e465:	call   0x422840
  40e46a:	mov    rcx,rsi
  40e46d:	call   0x409760
  40e472:	mov    rdx,QWORD PTR [rsi+0x30]
  40e476:	lea    rcx,[rip+0x1c208]        # 0x42a685
  40e47d:	call   0x407560
  40e482:	call   r12
  40e485:	lea    rcx,[rip+0x1b78c]        # 0x429c18
  40e48c:	lea    r9,[rax+0x30]
  40e490:	mov    r8d,0xc
  40e496:	mov    edx,0x1
  40e49b:	call   0x422840
  40e4a0:	call   r12
  40e4a3:	lea    rcx,[rip+0x1c600]        # 0x42aaaa
  40e4aa:	lea    r9,[rax+0x30]
  40e4ae:	mov    r8d,0x38
  40e4b4:	mov    edx,0x1
  40e4b9:	call   0x422840
  40e4be:	jmp    0x40e1b5
  40e4c3:	call   r12
  40e4c6:	lea    rcx,[rip+0x1bd8a]        # 0x42a257
  40e4cd:	lea    r9,[rax+0x30]
  40e4d1:	mov    r8d,0x73
  40e4d7:	mov    edx,0x1
  40e4dc:	call   0x422840
  40e4e1:	mov    rax,QWORD PTR [rip+0x25158]        # 0x433640
  40e4e8:	test   rax,rax
  40e4eb:	je     0x40e4f2
  40e4ed:	cmp    BYTE PTR [rax],0x0
  40e4f0:	jne    0x40e560
  40e4f2:	mov    rax,QWORD PTR [rip+0x16f7f]        # 0x425478
  40e4f9:	test   BYTE PTR [rax+0x78],0x20
  40e4fd:	je     0x40e575
  40e4ff:	call   r12
  40e502:	lea    rcx,[rax+0x30]
  40e506:	call   0x422898
  40e50b:	call   r12
  40e50e:	lea    rcx,[rax+0x30]
  40e512:	call   0x422890
  40e517:	test   eax,eax
  40e519:	jne    0x40e736
  40e51f:	mov    rcx,QWORD PTR [rip+0x25112]        # 0x433638
  40e526:	call   0x422858
  40e52b:	mov    QWORD PTR [rip+0x25112],0x0        # 0x433648
  40e536:	mov    QWORD PTR [rip+0x250ff],0x0        # 0x433640
  40e541:	mov    QWORD PTR [rip+0x250ec],0x0        # 0x433638
  40e54c:	add    rsp,0xc8
  40e553:	pop    rbx
  40e554:	pop    rsi
  40e555:	pop    rdi
  40e556:	pop    rbp
  40e557:	pop    r12
  40e559:	pop    r13
  40e55b:	pop    r14
  40e55d:	pop    r15
  40e55f:	ret    
  40e560:	call   r12
  40e563:	mov    rcx,QWORD PTR [rip+0x250d6]        # 0x433640
  40e56a:	lea    rdx,[rax+0x30]
  40e56e:	call   0x422868
  40e573:	jmp    0x40e4ff
  40e575:	mov    rdx,QWORD PTR [rsi+0x30]
  40e579:	lea    rcx,[rip+0x1b7f4]        # 0x429d74
  40e580:	call   0x407560
  40e585:	jmp    0x40e4ff
  40e58a:	nop    WORD PTR [rax+rax*1+0x0]
  40e590:	call   r12
  40e593:	lea    rcx,[rip+0x1c01c]        # 0x42a5b6
  40e59a:	lea    r9,[rax+0x30]
  40e59e:	mov    r8d,0xce
  40e5a4:	mov    edx,0x1
  40e5a9:	call   0x422840
  40e5ae:	call   r12
  40e5b1:	lea    rcx,[rip+0x1b6c6]        # 0x429c7e
  40e5b8:	lea    r9,[rax+0x30]
  40e5bc:	mov    r8d,0xa
  40e5c2:	mov    edx,0x1
  40e5c7:	call   0x422840
  40e5cc:	call   r12
  40e5cf:	lea    rcx,[rip+0x1be70]        # 0x42a446
  40e5d6:	lea    r9,[rax+0x30]
  40e5da:	mov    r8d,0xfa
  40e5e0:	mov    edx,0x1
  40e5e5:	call   0x422840
  40e5ea:	mov    rcx,rsi
  40e5ed:	call   0x409760
  40e5f2:	mov    rdx,QWORD PTR [rsi+0x30]
  40e5f6:	lea    rcx,[rip+0x1c088]        # 0x42a685
  40e5fd:	call   0x407560
  40e602:	call   r12
  40e605:	lea    rcx,[rip+0x1b60c]        # 0x429c18
  40e60c:	lea    r9,[rax+0x30]
  40e610:	mov    r8d,0xc
  40e616:	mov    edx,0x1
  40e61b:	call   0x422840
  40e620:	call   r12
  40e623:	lea    rcx,[rip+0x1b62b]        # 0x429c55
  40e62a:	lea    r9,[rax+0x30]
  40e62e:	mov    r8d,0x9
  40e634:	mov    edx,0x1
  40e639:	call   0x422840
  40e63e:	call   r12
  40e641:	lea    rcx,[rip+0x1bef9]        # 0x42a541
  40e648:	lea    r9,[rax+0x30]
  40e64c:	mov    edx,0x1
  40e651:	mov    r8d,0x74
  40e657:	call   0x422840
  40e65c:	mov    rcx,rsi
  40e65f:	call   0x4094d0
  40e664:	mov    rdx,QWORD PTR [rsi+0x30]
  40e668:	lea    rcx,[rip+0x1c6a5]        # 0x42ad14
  40e66f:	jmp    0x40e47d
  40e674:	call   r12
  40e677:	mov    r8d,0xce
  40e67d:	lea    r9,[rax+0x30]
  40e681:	mov    edx,0x1
  40e686:	lea    rcx,[rip+0x1bf29]        # 0x42a5b6
  40e68d:	jmp    0x40e61b
  40e68f:	nop
  40e690:	lea    rcx,[rip+0x1a489]        # 0x428b20
  40e697:	call   0x422838
  40e69c:	test   rax,rax
  40e69f:	mov    QWORD PTR [rip+0x24faa],rax        # 0x433650
  40e6a6:	je     0x40e704
  40e6a8:	mov    rax,QWORD PTR [rip+0x16dc9]        # 0x425478
  40e6af:	jmp    0x40df07
  40e6b4:	mov    rdx,QWORD PTR [rip+0x24f95]        # 0x433650
  40e6bb:	test   rdx,rdx
  40e6be:	je     0x40df8f
  40e6c4:	lea    rcx,[rip+0x1b6a2]        # 0x429d6d
  40e6cb:	mov    QWORD PTR [rsp+0x28],r8
  40e6d0:	call   0x407560
  40e6d5:	mov    r8,QWORD PTR [rsp+0x28]
  40e6da:	jmp    0x40df8f
  40e6df:	mov    rcx,r12
  40e6e2:	call   0x4227a8
  40e6e7:	lea    rax,[r12+rax*1+0x53]
  40e6ec:	mov    QWORD PTR [rip+0x24f4d],rax        # 0x433640
  40e6f3:	jmp    0x40e3ca
  40e6f8:	mov    QWORD PTR [rip+0x24f41],r12        # 0x433640
  40e6ff:	jmp    0x40e3ca
  40e704:	lea    rax,[rip+0x1a41b]        # 0x428b26
  40e70b:	mov    QWORD PTR [rip+0x24f3e],rax        # 0x433650
  40e712:	jmp    0x40e6a8
  40e714:	mov    QWORD PTR [rip+0x24f19],0x0        # 0x433638
  40e71f:	jmp    0x40e3ca
  40e724:	lea    rdx,[rip+0x1a407]        # 0x428b32
  40e72b:	mov    r8,r13
  40e72e:	mov    rcx,rbp
  40e731:	call   0x407b10
  40e736:	mov    rcx,QWORD PTR [rsi+0x28]
  40e73a:	mov    r8,QWORD PTR [rip+0x171b7]        # 0x4258f8
  40e741:	mov    rdx,QWORD PTR [rip+0x171c0]        # 0x425908
  40e748:	call   0x407b10
  40e74d:	nop
  40e74e:	xchg   ax,ax
  40e750:	push   rbx
  40e751:	sub    rsp,0x20
  40e755:	test   rcx,rcx
  40e758:	je     0x40e76e
  40e75a:	cmp    DWORD PTR [rcx],0x6
  40e75d:	mov    rbx,rcx
  40e760:	je     0x40e774
  40e762:	call   QWORD PTR [rip+0x289ac]        # 0x437114
  40e768:	mov    DWORD PTR [rax],0x16
  40e76e:	add    rsp,0x20
  40e772:	pop    rbx
  40e773:	ret    
  40e774:	mov    rcx,QWORD PTR [rcx+0x10]
  40e778:	call   0x407090
  40e77d:	mov    rcx,rbx
  40e780:	add    rsp,0x20
  40e784:	pop    rbx
  40e785:	jmp    0x422858
  40e78a:	nop    WORD PTR [rax+rax*1+0x0]
  40e790:	push   rdi
  40e791:	push   rsi
  40e792:	push   rbx
  40e793:	sub    rsp,0x20
  40e797:	cmp    rcx,0xe
  40e79b:	jbe    0x40e7e3
  40e79d:	test   BYTE PTR [rdx+0x10],0x8
  40e7a1:	mov    rsi,rdx
  40e7a4:	je     0x40e7f0
  40e7a6:	mov    rcx,QWORD PTR [rdx+0x20]
  40e7aa:	test   rcx,rcx
  40e7ad:	je     0x40e7e3
  40e7af:	mov    eax,DWORD PTR [rcx]
  40e7b1:	lea    rbx,[rcx+0x8]
  40e7b5:	test   eax,eax
  40e7b7:	jle    0x40e7d7
  40e7b9:	sub    eax,0x1
  40e7bc:	lea    rdi,[rbx+rax*8+0x8]
  40e7c1:	add    rbx,0x8
  40e7c5:	mov    rcx,QWORD PTR [rbx-0x8]
  40e7c9:	call   0x40e750
  40e7ce:	cmp    rbx,rdi
  40e7d1:	jne    0x40e7c1
  40e7d3:	mov    rcx,QWORD PTR [rsi+0x20]
  40e7d7:	add    rsp,0x20
  40e7db:	pop    rbx
  40e7dc:	pop    rsi
  40e7dd:	pop    rdi
  40e7de:	jmp    0x422858
  40e7e3:	add    rsp,0x20
  40e7e7:	pop    rbx
  40e7e8:	pop    rsi
  40e7e9:	pop    rdi
  40e7ea:	ret    
  40e7eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7f0:	mov    rbx,QWORD PTR [rdx+0x50]
  40e7f4:	mov    rcx,rbx
  40e7f7:	call   0x4227a8
  40e7fc:	mov    rcx,QWORD PTR [rsi+0x18]
  40e800:	mov    r8,rax
  40e803:	mov    rdx,rbx
  40e806:	call   0x40c3e0
  40e80b:	test   rax,rax
  40e80e:	je     0x40e7e3
  40e810:	lea    rcx,[rsi+0x20]
  40e814:	mov    rdx,rax
  40e817:	add    rsp,0x20
  40e81b:	pop    rbx
  40e81c:	pop    rsi
  40e81d:	pop    rdi
  40e81e:	jmp    0x408fe0
  40e823:	nop    DWORD PTR [rax]
  40e826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e830:	push   r12
  40e832:	push   rbp
  40e833:	push   rdi
  40e834:	push   rsi
  40e835:	push   rbx
  40e836:	sub    rsp,0x30
  40e83a:	mov    eax,DWORD PTR [rip+0x24df0]        # 0x433630
  40e840:	mov    rdi,rdx
  40e843:	lea    rdx,[rip+0x1b2b6]        # 0x429b00
  40e84a:	cmp    rcx,0x1
  40e84e:	mov    rbp,rcx
  40e851:	mov    rbx,r8
  40e854:	mov    esi,r9d
  40e857:	lea    r12,[rdx+rax*1+0xcb]
  40e85f:	je     0x40e89b
  40e861:	cmp    rcx,0xf
  40e865:	ja     0x40e872
  40e867:	add    rsp,0x30
  40e86b:	pop    rbx
  40e86c:	pop    rsi
  40e86d:	pop    rdi
  40e86e:	pop    rbp
  40e86f:	pop    r12
  40e871:	ret    
  40e872:	mov    eax,DWORD PTR [rdi+0x18]
  40e875:	mov    rdx,QWORD PTR [rip+0x17094]        # 0x425910
  40e87c:	lea    r12,[rip+0x1a2c3]        # 0x428b46
  40e883:	mov    DWORD PTR [rsp+0x20],eax
  40e887:	mov    r8,QWORD PTR [rcx+0x28]
  40e88b:	mov    r9,QWORD PTR [rdi+0x50]
  40e88f:	mov    rcx,QWORD PTR [rip+0x24d72]        # 0x433608
  40e896:	call   0x407150
  40e89b:	test   BYTE PTR [rdi+0x13],0x1
  40e89f:	jne    0x40e9d0
  40e8a5:	cmp    esi,0x1
  40e8a8:	jle    0x40e9ef
  40e8ae:	mov    rdx,QWORD PTR [rip+0x1717b]        # 0x425a30
  40e8b5:	mov    rcx,QWORD PTR [rip+0x24d4c]        # 0x433608
  40e8bc:	mov    r8,r12
  40e8bf:	lea    rdi,[rip+0x1b432]        # 0x429cf8
  40e8c6:	call   0x407150
  40e8cb:	cmp    rbp,0x1
  40e8cf:	jne    0x40e918
  40e8d1:	jmp    0x40ea00
  40e8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8e0:	mov    rdx,QWORD PTR [rip+0x17131]        # 0x425a18
  40e8e7:	mov    rcx,QWORD PTR [rip+0x24d1a]        # 0x433608
  40e8ee:	mov    r8,rdi
  40e8f1:	mov    DWORD PTR [rsp+0x20],eax
  40e8f5:	call   0x407150
  40e8fa:	sub    esi,0x1
  40e8fd:	mov    rdx,QWORD PTR [rip+0x24d04]        # 0x433608
  40e904:	test   esi,esi
  40e906:	jle    0x40e95d
  40e908:	mov    rcx,QWORD PTR [rip+0x17131]        # 0x425a40
  40e90f:	add    rbx,0x8
  40e913:	call   0x422868
  40e918:	mov    eax,DWORD PTR [rbx+0x4]
  40e91b:	mov    r9d,DWORD PTR [rbx]
  40e91e:	cmp    eax,0x80000000
  40e923:	je     0x40e990
  40e925:	cmp    r9d,0x80000000
  40e92c:	je     0x40e9b0
  40e932:	cmp    eax,0x7fffffff
  40e937:	jne    0x40e8e0
  40e939:	mov    rdx,QWORD PTR [rip+0x170e0]        # 0x425a20
  40e940:	mov    rcx,QWORD PTR [rip+0x24cc1]        # 0x433608
  40e947:	mov    r8,rdi
  40e94a:	sub    esi,0x1
  40e94d:	call   0x407150
  40e952:	test   esi,esi
  40e954:	mov    rdx,QWORD PTR [rip+0x24cad]        # 0x433608
  40e95b:	jg     0x40e908
  40e95d:	mov    ecx,0xa
  40e962:	call   0x422870
  40e967:	cmp    rbp,0xf
  40e96b:	jbe    0x40e867
  40e971:	mov    rax,QWORD PTR [rbp+0x98]
  40e978:	mov    edx,0x1
  40e97d:	mov    rcx,rbp
  40e980:	add    rsp,0x30
  40e984:	pop    rbx
  40e985:	pop    rsi
  40e986:	pop    rdi
  40e987:	pop    rbp
  40e988:	pop    r12
  40e98a:	rex.W jmp rax
  40e98d:	nop    DWORD PTR [rax]
  40e990:	mov    rdx,QWORD PTR [rip+0x17091]        # 0x425a28
  40e997:	mov    rcx,QWORD PTR [rip+0x24c6a]        # 0x433608
  40e99e:	mov    r8,rdi
  40e9a1:	call   0x407150
  40e9a6:	jmp    0x40e8fa
  40e9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9b0:	mov    rdx,QWORD PTR [rip+0x17099]        # 0x425a50
  40e9b7:	mov    rcx,QWORD PTR [rip+0x24c4a]        # 0x433608
  40e9be:	mov    r9d,eax
  40e9c1:	mov    r8,rdi
  40e9c4:	call   0x407150
  40e9c9:	jmp    0x40e8fa
  40e9ce:	xchg   ax,ax
  40e9d0:	mov    rdx,QWORD PTR [rip+0x17071]        # 0x425a48
  40e9d7:	mov    rcx,QWORD PTR [rip+0x24c2a]        # 0x433608
  40e9de:	mov    r8,r12
  40e9e1:	call   0x407150
  40e9e6:	cmp    esi,0x1
  40e9e9:	jg     0x40e8ae
  40e9ef:	mov    rdx,QWORD PTR [rip+0x17042]        # 0x425a38
  40e9f6:	jmp    0x40e8b5
  40e9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea00:	mov    eax,DWORD PTR [rip+0x24c2a]        # 0x433630
  40ea06:	lea    rdx,[rip+0x1b0f3]        # 0x429b00
  40ea0d:	lea    rdi,[rdx+rax*1+0xd2]
  40ea15:	jmp    0x40e918
  40ea1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ea20:	push   r15
  40ea22:	push   r14
  40ea24:	push   r13
  40ea26:	push   r12
  40ea28:	push   rbp
  40ea29:	push   rdi
  40ea2a:	push   rsi
  40ea2b:	push   rbx
  40ea2c:	sub    rsp,0x28
  40ea30:	mov    ebx,0x3
  40ea35:	mov    rbp,rcx
  40ea38:	mov    rcx,rdx
  40ea3b:	mov    rdi,rdx
  40ea3e:	call   0x4227a8
  40ea43:	mov    r9,rbp
  40ea46:	mov    r12,rax
  40ea49:	mov    eax,0x1
  40ea4e:	xchg   ax,ax
  40ea50:	add    r9,0x1
  40ea54:	movzx  ecx,BYTE PTR [r9-0x1]
  40ea59:	lea    r10d,[rcx-0x20]
  40ea5d:	cmp    r10b,0x5e
  40ea61:	ja     0x40ea80
  40ea63:	cmp    cl,0x5c
  40ea66:	je     0x40eab0
  40ea68:	cmp    cl,0x22
  40ea6b:	mov    r10d,0x1
  40ea71:	je     0x40eab0
  40ea73:	add    rbx,r10
  40ea76:	jmp    0x40ea50
  40ea78:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea80:	cmp    cl,0xd
  40ea83:	ja     0x40eaa3
  40ea85:	mov    r10,rax
  40ea88:	shl    r10,cl
  40ea8b:	test   r10d,0x3b80
  40ea92:	jne    0x40eac0
  40ea94:	test   r10d,0x400
  40ea9b:	jne    0x40ead0
  40ea9d:	and    r10d,0x1
  40eaa1:	jne    0x40ead8
  40eaa3:	add    rbx,0x4
  40eaa7:	jmp    0x40ea50
  40eaa9:	nop    DWORD PTR [rax+0x0]
  40eab0:	mov    r10d,0x2
  40eab6:	jmp    0x40ea73
  40eab8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eac0:	add    rbx,0x2
  40eac4:	jmp    0x40ea50
  40eac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ead0:	add    rbx,r12
  40ead3:	jmp    0x40ea50
  40ead8:	mov    rcx,rbx
  40eadb:	lea    r14,[rip+0x1a066]        # 0x428b48
  40eae2:	call   0x408f90
  40eae7:	mov    r13,rax
  40eaea:	lea    rsi,[rax+0x1]
  40eaee:	mov    BYTE PTR [rax],0x22
  40eaf1:	jmp    0x40eb12
  40eaf3:	cmp    r8b,0x5c
  40eaf7:	je     0x40ec14
  40eafd:	cmp    r8b,0x22
  40eb01:	je     0x40ec14
  40eb07:	mov    BYTE PTR [rsi],r8b
  40eb0a:	add    rsi,0x1
  40eb0e:	add    rbp,0x1
  40eb12:	movzx  r8d,BYTE PTR [rbp+0x0]
  40eb17:	lea    ecx,[r8-0x20]
  40eb1b:	cmp    cl,0x5e
  40eb1e:	jbe    0x40eaf3
  40eb20:	cmp    r8b,0xd
  40eb24:	ja     0x40ebfb
  40eb2a:	movzx  eax,r8b
  40eb2e:	movsxd rcx,DWORD PTR [r14+rax*4]
  40eb32:	add    rcx,r14
  40eb35:	jmp    rcx
  40eb37:	movzx  eax,BYTE PTR [rbp+0x1]
  40eb3b:	lea    r15,[rbp+0x1]
  40eb3f:	cmp    al,0xa
  40eb41:	jne    0x40eb5a
  40eb43:	mov    BYTE PTR [rsi],0x5c
  40eb46:	add    r15,0x1
  40eb4a:	add    rsi,0x2
  40eb4e:	mov    BYTE PTR [rsi-0x1],0x6e
  40eb52:	movzx  eax,BYTE PTR [r15]
  40eb56:	cmp    al,0xa
  40eb58:	je     0x40eb43
  40eb5a:	test   al,al
  40eb5c:	jne    0x40ec20
  40eb62:	mov    rax,rsi
  40eb65:	mov    BYTE PTR [rsi],0x5c
  40eb68:	add    rsi,0x2
  40eb6c:	mov    BYTE PTR [rax+0x1],0x6e
  40eb70:	mov    BYTE PTR [rsi],0x22
  40eb73:	mov    BYTE PTR [rsi+0x1],0x0
  40eb77:	add    rsi,0x2
  40eb7b:	sub    rsi,r13
  40eb7e:	cmp    rsi,rbx
  40eb81:	ja     0x40ec39
  40eb87:	mov    rax,r13
  40eb8a:	add    rsp,0x28
  40eb8e:	pop    rbx
  40eb8f:	pop    rsi
  40eb90:	pop    rdi
  40eb91:	pop    rbp
  40eb92:	pop    r12
  40eb94:	pop    r13
  40eb96:	pop    r14
  40eb98:	pop    r15
  40eb9a:	ret    
  40eb9b:	mov    BYTE PTR [rsi],0x5c
  40eb9e:	mov    BYTE PTR [rsi+0x1],0x72
  40eba2:	add    rsi,0x2
  40eba6:	jmp    0x40eb0e
  40ebab:	mov    BYTE PTR [rsi],0x5c
  40ebae:	mov    BYTE PTR [rsi+0x1],0x66
  40ebb2:	add    rsi,0x2
  40ebb6:	jmp    0x40eb0e
  40ebbb:	mov    BYTE PTR [rsi],0x5c
  40ebbe:	mov    BYTE PTR [rsi+0x1],0x76
  40ebc2:	add    rsi,0x2
  40ebc6:	jmp    0x40eb0e
  40ebcb:	mov    BYTE PTR [rsi],0x5c
  40ebce:	mov    BYTE PTR [rsi+0x1],0x74
  40ebd2:	add    rsi,0x2
  40ebd6:	jmp    0x40eb0e
  40ebdb:	mov    BYTE PTR [rsi],0x5c
  40ebde:	mov    BYTE PTR [rsi+0x1],0x62
  40ebe2:	add    rsi,0x2
  40ebe6:	jmp    0x40eb0e
  40ebeb:	mov    BYTE PTR [rsi],0x5c
  40ebee:	mov    BYTE PTR [rsi+0x1],0x61
  40ebf2:	add    rsi,0x2
  40ebf6:	jmp    0x40eb0e
  40ebfb:	lea    rdx,[rip+0x1b0a4]        # 0x429ca6
  40ec02:	mov    rcx,rsi
  40ec05:	call   0x407b30
  40ec0a:	cdqe   
  40ec0c:	add    rsi,rax
  40ec0f:	jmp    0x40eb0e
  40ec14:	mov    BYTE PTR [rsi],0x5c
  40ec17:	add    rsi,0x1
  40ec1b:	jmp    0x40eb07
  40ec20:	mov    rcx,rsi
  40ec23:	mov    r8,r12
  40ec26:	mov    rdx,rdi
  40ec29:	call   0x422810
  40ec2e:	add    rsi,r12
  40ec31:	mov    rbp,r15
  40ec34:	jmp    0x40eb12
  40ec39:	call   QWORD PTR [rip+0x28485]        # 0x4370c4
  40ec3f:	lea    rcx,[rip+0x1b1c9]        # 0x429e0f
  40ec46:	lea    r9,[rax+0x60]
  40ec4a:	mov    r8d,0x24
  40ec50:	mov    edx,0x1
  40ec55:	call   0x422840
  40ec5a:	mov    ecx,0x1
  40ec5f:	call   0x407590
  40ec64:	nop
  40ec65:	nop
  40ec66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ec70:	push   rsi
  40ec71:	push   rbx
  40ec72:	sub    rsp,0x28
  40ec76:	test   dl,dl
  40ec78:	mov    rbx,r8
  40ec7b:	jne    0x40ecb0
  40ec7d:	lea    rdx,[rip+0x1aff5]        # 0x429c79
  40ec84:	call   0x40ea20
  40ec89:	lea    rdx,[rip+0x1b0b1]        # 0x429d41
  40ec90:	mov    rsi,rax
  40ec93:	mov    rcx,rbx
  40ec96:	mov    r8,rax
  40ec99:	call   0x407150
  40ec9e:	mov    rcx,rsi
  40eca1:	add    rsp,0x28
  40eca5:	pop    rbx
  40eca6:	pop    rsi
  40eca7:	jmp    0x422858
  40ecac:	nop    DWORD PTR [rax+0x0]
  40ecb0:	mov    rdx,r8
  40ecb3:	add    rsp,0x28
  40ecb7:	pop    rbx
  40ecb8:	pop    rsi
  40ecb9:	jmp    0x422868
  40ecbe:	xchg   ax,ax
  40ecc0:	push   r15
  40ecc2:	push   r14
  40ecc4:	push   r13
  40ecc6:	push   r12
  40ecc8:	push   rbp
  40ecc9:	push   rdi
  40ecca:	push   rsi
  40eccb:	push   rbx
  40eccc:	sub    rsp,0x38
  40ecd0:	mov    eax,DWORD PTR [rcx+0x14]
  40ecd3:	xor    r13d,r13d
  40ecd6:	xor    r12d,r12d
  40ecd9:	mov    rbp,rcx
  40ecdc:	lea    rcx,[rip+0x1b34c]        # 0x42a02f
  40ece3:	lea    edx,[rax-0x1]
  40ece6:	call   0x407560
  40eceb:	mov    rsi,QWORD PTR [rip+0x283d2]        # 0x4370c4
  40ecf2:	jmp    0x40ed09
  40ecf4:	add    r12d,0x1
  40ecf8:	add    r13,0x68
  40ecfc:	cmp    r12d,DWORD PTR [rbp+0xb4]
  40ed03:	jge    0x40ee71
  40ed09:	mov    rdx,QWORD PTR [rbp+0x78]
  40ed0d:	lea    rdi,[rdx+r13*1]
  40ed11:	mov    eax,DWORD PTR [rdi+0x10]
  40ed14:	test   eax,0x8280000
  40ed19:	jne    0x40ecf4
  40ed1b:	cmp    WORD PTR [rdi+0x8],0x8000
  40ed21:	jne    0x40ecf4
  40ed23:	movzx  r8d,WORD PTR [rdi+0x4]
  40ed28:	cmp    r8d,r12d
  40ed2b:	je     0x40ed78
  40ed2d:	lea    rax,[r8+r8*2]
  40ed31:	lea    rcx,[rip+0x1b280]        # 0x429fb8
  40ed38:	lea    rax,[r8+rax*4]
  40ed3c:	mov    r8,QWORD PTR [rdi+0x48]
  40ed40:	lea    rbx,[rdx+rax*8]
  40ed44:	mov    rax,QWORD PTR [rdi+0x18]
  40ed48:	mov    r9,QWORD PTR [rbx+0x48]
  40ed4c:	mov    QWORD PTR [rbx+0x18],rax
  40ed50:	mov    eax,DWORD PTR [rbx+0x10]
  40ed53:	and    eax,0xfffff00
  40ed58:	mov    DWORD PTR [rbx+0x10],eax
  40ed5b:	mov    edx,DWORD PTR [rdi+0x10]
  40ed5e:	mov    rdi,rbx
  40ed61:	and    edx,0xf00000ff
  40ed67:	or     eax,edx
  40ed69:	mov    rdx,QWORD PTR [rbp+0x30]
  40ed6d:	mov    DWORD PTR [rbx+0x10],eax
  40ed70:	call   0x407560
  40ed75:	mov    eax,DWORD PTR [rbx+0x10]
  40ed78:	mov    edx,eax
  40ed7a:	and    edx,0xf000
  40ed80:	shr    edx,0xc
  40ed83:	cmp    edx,0x4
  40ed86:	je     0x40ef39
  40ed8c:	mov    ecx,DWORD PTR [rdi+0x10]
  40ed8f:	and    ecx,0x2f
  40ed92:	cmp    ecx,0x20
  40ed95:	je     0x40ecf4
  40ed9b:	test   ah,0x4
  40ed9e:	je     0x40ee22
  40eda4:	mov    r14,QWORD PTR [rdi+0x20]
  40eda8:	test   r14,r14
  40edab:	je     0x40ee22
  40edad:	mov    ebx,DWORD PTR [r14]
  40edb0:	mov    rdx,QWORD PTR [rbp+0x30]
  40edb4:	lea    rcx,[rip+0x1b24d]        # 0x42a008
  40edbb:	mov    r8,QWORD PTR [rdi+0x48]
  40edbf:	lea    r15,[r14+0x8]
  40edc3:	mov    r9d,ebx
  40edc6:	call   0x407560
  40edcb:	sub    ebx,0x1
  40edce:	js     0x40ecf4
  40edd4:	mov    r9d,DWORD PTR [r14]
  40edd7:	mov    rdx,QWORD PTR [rbp+0x30]
  40eddb:	lea    rcx,[rip+0x1ae29]        # 0x429c0b
  40ede2:	mov    r8,QWORD PTR [rdi+0x48]
  40ede6:	add    r15,0x8
  40edea:	sub    r9d,ebx
  40eded:	call   0x407560
  40edf2:	mov    rcx,QWORD PTR [r15-0x8]
  40edf6:	call   0x4088d0
  40edfb:	mov    r9d,DWORD PTR [r14]
  40edfe:	mov    rdx,QWORD PTR [rbp+0x30]
  40ee02:	lea    rcx,[rip+0x1ae34]        # 0x429c3d
  40ee09:	mov    r8,QWORD PTR [rdi+0x48]
  40ee0d:	sub    r9d,ebx
  40ee10:	sub    ebx,0x1
  40ee13:	call   0x407560
  40ee18:	cmp    ebx,0xffffffff
  40ee1b:	jne    0x40edd4
  40ee1d:	jmp    0x40ecf4
  40ee22:	test   al,0x20
  40ee24:	jne    0x40ee9a
  40ee26:	cmp    edx,0x5
  40ee29:	je     0x40f13d
  40ee2f:	cmp    edx,0x2
  40ee32:	je     0x40f15a
  40ee38:	cmp    edx,0x3
  40ee3b:	je     0x40f039
  40ee41:	mov    rax,QWORD PTR [rdi+0x18]
  40ee45:	test   rax,rax
  40ee48:	je     0x40ee53
  40ee4a:	cmp    BYTE PTR [rax],0x0
  40ee4d:	jne    0x40f107
  40ee53:	movzx  r9d,WORD PTR [rdi+0xe]
  40ee58:	mov    rdx,QWORD PTR [rbp+0x30]
  40ee5c:	lea    rcx,[rip+0x1b20c]        # 0x42a06f
  40ee63:	mov    r8,QWORD PTR [rdi+0x48]
  40ee67:	call   0x407560
  40ee6c:	jmp    0x40ecf4
  40ee71:	test   BYTE PTR [rbp+0x11],0x8
  40ee75:	je     0x40ee7f
  40ee77:	mov    eax,DWORD PTR [rbp+0x4]
  40ee7a:	cmp    DWORD PTR [rbp+0x14],eax
  40ee7d:	jb     0x40eec5
  40ee7f:	call   rsi
  40ee81:	lea    rcx,[rax+0x30]
  40ee85:	add    rsp,0x38
  40ee89:	pop    rbx
  40ee8a:	pop    rsi
  40ee8b:	pop    rdi
  40ee8c:	pop    rbp
  40ee8d:	pop    r12
  40ee8f:	pop    r13
  40ee91:	pop    r14
  40ee93:	pop    r15
  40ee95:	jmp    0x422888
  40ee9a:	mov    r9,QWORD PTR [rdi+0x60]
  40ee9e:	mov    rdx,QWORD PTR [rbp+0x30]
  40eea2:	lea    rax,[rip+0x19847]        # 0x4286f0
  40eea9:	mov    r8,QWORD PTR [rdi+0x48]
  40eead:	lea    rcx,[rip+0x1b19a]        # 0x42a04e
  40eeb4:	test   r9,r9
  40eeb7:	cmove  r9,rax
  40eebb:	call   0x407560
  40eec0:	jmp    0x40ecf4
  40eec5:	call   rsi
  40eec7:	lea    rcx,[rip+0x1af74]        # 0x429e42
  40eece:	lea    r9,[rax+0x30]
  40eed2:	mov    r8d,0x6
  40eed8:	mov    edx,0x1
  40eedd:	call   0x422840
  40eee2:	mov    ebx,DWORD PTR [rbp+0x14]
  40eee5:	cmp    ebx,DWORD PTR [rbp+0x4]
  40eee8:	jae    0x40ef17
  40eeea:	nop    WORD PTR [rax+rax*1+0x0]
  40eef0:	call   rsi
  40eef2:	lea    rdx,[rax+0x30]
  40eef6:	mov    ecx,0x20
  40eefb:	call   0x422870
  40ef00:	mov    rax,QWORD PTR [rbp+0x8]
  40ef04:	mov    edx,ebx
  40ef06:	add    ebx,0x1
  40ef09:	mov    rcx,QWORD PTR [rax+rdx*8]
  40ef0d:	call   0x4088d0
  40ef12:	cmp    ebx,DWORD PTR [rbp+0x4]
  40ef15:	jb     0x40eef0
  40ef17:	call   rsi
  40ef19:	lea    rcx,[rip+0x1af14]        # 0x429e34
  40ef20:	lea    r9,[rax+0x30]
  40ef24:	mov    r8d,0xd
  40ef2a:	mov    edx,0x1
  40ef2f:	call   0x422840
  40ef34:	jmp    0x40ee7f
  40ef39:	mov    rax,QWORD PTR [rdi+0x18]
  40ef3d:	mov    rdx,QWORD PTR [rbp+0x30]
  40ef41:	lea    rcx,[rip+0x1b127]        # 0x42a06f
  40ef48:	mov    r9d,DWORD PTR [rdi+0x20]
  40ef4c:	mov    r8,QWORD PTR [rdi+0x48]
  40ef50:	mov    QWORD PTR [rsp+0x28],rax
  40ef55:	call   0x407560
  40ef5a:	mov    eax,0xffffffff
  40ef5f:	mov    rdx,rdi
  40ef62:	mov    ecx,0x3
  40ef67:	mov    QWORD PTR [rdi+0x20],rax
  40ef6b:	call   QWORD PTR [rdi+0x38]
  40ef6e:	mov    r14,QWORD PTR [rdi+0x18]
  40ef72:	cmp    BYTE PTR [r14],0x0
  40ef76:	je     0x40f102
  40ef7c:	mov    QWORD PTR [rsp+0x20],0x1
  40ef85:	mov    rdx,QWORD PTR [rdi+0x48]
  40ef89:	lea    rcx,[rip+0x19bf0]        # 0x428b80
  40ef90:	call   0x407560
  40ef95:	mov    r9,QWORD PTR [rip+0x248b4]        # 0x433850
  40ef9c:	test   r9,r9
  40ef9f:	je     0x40f0f0
  40efa5:	movzx  eax,BYTE PTR [r14]
  40efa9:	cmp    BYTE PTR [r9+rax*1],0x0
  40efae:	je     0x40f0e5
  40efb4:	mov    rdx,r14
  40efb7:	nop    WORD PTR [rax+rax*1+0x0]
  40efc0:	add    rdx,0x1
  40efc4:	movzx  ecx,BYTE PTR [rdx]
  40efc7:	cmp    BYTE PTR [r9+rcx*1],0x0
  40efcc:	mov    rax,rcx
  40efcf:	jne    0x40efc0
  40efd1:	cmp    al,0x7f
  40efd3:	lea    r14,[rdx+0x1]
  40efd7:	movsx  r15d,al
  40efdb:	ja     0x40f01e
  40efdd:	nop    DWORD PTR [rax]
  40efe0:	lea    r9,[rip+0x1d719]        # 0x42c700
  40efe7:	mov    eax,DWORD PTR [r9+rax*4]
  40efeb:	test   eax,0x80000
  40eff0:	je     0x40f070
  40eff2:	call   rsi
  40eff4:	mov    rbx,rax
  40eff7:	mov    ecx,r15d
  40effa:	call   QWORD PTR [rip+0x2830c]        # 0x43730c
  40f000:	lea    rdx,[rbx+0x30]
  40f004:	mov    ecx,eax
  40f006:	call   0x422870
  40f00b:	movzx  eax,BYTE PTR [r14]
  40f00f:	mov    rdx,r14
  40f012:	cmp    al,0x7f
  40f014:	lea    r14,[rdx+0x1]
  40f018:	movsx  r15d,al
  40f01c:	jbe    0x40efe0
  40f01e:	test   r15d,r15d
  40f021:	je     0x40f0e0
  40f027:	call   rsi
  40f029:	lea    rdx,[rax+0x30]
  40f02d:	mov    ecx,0x5f
  40f032:	call   0x422870
  40f037:	jmp    0x40f00b
  40f039:	mov    eax,DWORD PTR [rdi+0x18]
  40f03c:	mov    rdx,QWORD PTR [rbp+0x30]
  40f040:	lea    r9,[rip+0x196a4]        # 0x4286eb
  40f047:	mov    r8,QWORD PTR [rdi+0x48]
  40f04b:	lea    rcx,[rip+0x1af93]        # 0x429fe5
  40f052:	test   eax,eax
  40f054:	lea    rax,[rip+0x19695]        # 0x4286f0
  40f05b:	cmove  r9,rax
  40f05f:	call   0x407560
  40f064:	jmp    0x40ecf4
  40f069:	nop    DWORD PTR [rax+0x0]
  40f070:	test   eax,0x100000
  40f075:	je     0x40f090
  40f077:	call   rsi
  40f079:	lea    rdx,[rax+0x30]
  40f07d:	mov    ecx,r15d
  40f080:	call   0x422870
  40f085:	jmp    0x40f00b
  40f087:	nop    WORD PTR [rax+rax*1+0x0]
  40f090:	test   eax,0xc81
  40f095:	je     0x40f01e
  40f097:	mov    rbx,QWORD PTR [rsp+0x20]
  40f09c:	lea    rcx,[rip+0x1ace5]        # 0x429d88
  40f0a3:	mov    edx,ebx
  40f0a5:	call   0x407560
  40f0aa:	mov    rax,rbx
  40f0ad:	add    rax,rax
  40f0b0:	cmp    BYTE PTR [r14],0x0
  40f0b4:	mov    QWORD PTR [rsp+0x20],rax
  40f0b9:	jne    0x40ef85
  40f0bf:	mov    rcx,QWORD PTR [rdi+0x18]
  40f0c3:	call   0x422858
  40f0c8:	mov    rax,QWORD PTR [rsp+0x28]
  40f0cd:	mov    QWORD PTR [rdi+0x18],rax
  40f0d1:	jmp    0x40ecf4
  40f0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0e0:	mov    r14,rdx
  40f0e3:	jmp    0x40f097
  40f0e5:	movzx  eax,al
  40f0e8:	mov    rdx,r14
  40f0eb:	jmp    0x40f012
  40f0f0:	mov    ecx,0x22
  40f0f5:	call   0x408aa0
  40f0fa:	mov    r9,rax
  40f0fd:	jmp    0x40efa5
  40f102:	mov    rcx,r14
  40f105:	jmp    0x40f0c3
  40f107:	mov    rdx,QWORD PTR [rbp+0x30]
  40f10b:	mov    r8,QWORD PTR [rdi+0x48]
  40f10f:	lea    rcx,[rip+0x1abff]        # 0x429d15
  40f116:	call   0x407560
  40f11b:	mov    rcx,QWORD PTR [rdi+0x18]
  40f11f:	call   0x4088d0
  40f124:	mov    rdx,QWORD PTR [rbp+0x30]
  40f128:	mov    r8,QWORD PTR [rdi+0x48]
  40f12c:	lea    rcx,[rip+0x1abd3]        # 0x429d06
  40f133:	call   0x407560
  40f138:	jmp    0x40ecf4
  40f13d:	mov    rdx,QWORD PTR [rbp+0x30]
  40f141:	mov    r9d,DWORD PTR [rdi+0x18]
  40f145:	lea    rcx,[rip+0x1af23]        # 0x42a06f
  40f14c:	mov    r8,QWORD PTR [rdi+0x48]
  40f150:	call   0x407560
  40f155:	jmp    0x40ecf4
  40f15a:	mov    r8,QWORD PTR [rdi+0x48]
  40f15e:	mov    rdx,QWORD PTR [rbp+0x30]
  40f162:	lea    rcx,[rip+0x1abac]        # 0x429d15
  40f169:	mov    rbx,QWORD PTR [rdi+0x18]
  40f16d:	call   0x407560
  40f172:	mov    rdx,rdi
  40f175:	mov    ecx,0x3
  40f17a:	call   QWORD PTR [rdi+0x38]
  40f17d:	mov    rdx,QWORD PTR [rdi+0x18]
  40f181:	lea    rcx,[rip+0x1abcc]        # 0x429d54
  40f188:	call   0x407560
  40f18d:	test   BYTE PTR [rdi+0x10],0x40
  40f191:	je     0x40f19c
  40f193:	mov    rcx,QWORD PTR [rdi+0x18]
  40f197:	call   0x422858
  40f19c:	mov    QWORD PTR [rdi+0x18],rbx
  40f1a0:	mov    r8,QWORD PTR [rdi+0x48]
  40f1a4:	lea    rcx,[rip+0x1ab5b]        # 0x429d06
  40f1ab:	mov    rdx,QWORD PTR [rbp+0x30]
  40f1af:	call   0x407560
  40f1b4:	jmp    0x40ecf4
  40f1b9:	nop    DWORD PTR [rax+0x0]
  40f1c0:	push   rdi
  40f1c1:	push   rsi
  40f1c2:	push   rbx
  40f1c3:	sub    rsp,0x20
  40f1c7:	mov    rax,QWORD PTR [rcx+0x90]
  40f1ce:	mov    rbx,rcx
  40f1d1:	test   rax,rax
  40f1d4:	je     0x40f241
  40f1d6:	mov    rdx,QWORD PTR [rbx]
  40f1d9:	lea    rdi,[rax+0x8]
  40f1dd:	mov    rsi,rbx
  40f1e0:	lea    r9,[rax+0xe8]
  40f1e7:	and    rdi,0xfffffffffffffff8
  40f1eb:	mov    QWORD PTR [rax],rdx
  40f1ee:	mov    rdx,QWORD PTR [rbx+0xe0]
  40f1f5:	mov    QWORD PTR [rax+0xe0],rdx
  40f1fc:	mov    rdx,rax
  40f1ff:	sub    rdx,rdi
  40f202:	sub    rsi,rdx
  40f205:	add    edx,0xe8
  40f20b:	shr    edx,0x3
  40f20e:	mov    ecx,edx
  40f210:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40f213:	mov    rcx,r9
  40f216:	movsxd rax,DWORD PTR [rax+0xb0]
  40f21d:	lea    rdx,[rax+rax*2]
  40f221:	lea    r8,[rax+rdx*4]
  40f225:	mov    rdx,QWORD PTR [rbx+0x78]
  40f229:	shl    r8,0x3
  40f22d:	call   0x422810
  40f232:	mov    rcx,rbx
  40f235:	add    rsp,0x20
  40f239:	pop    rbx
  40f23a:	pop    rsi
  40f23b:	pop    rdi
  40f23c:	jmp    0x408d60
  40f241:	movsxd rax,DWORD PTR [rcx+0xb0]
  40f248:	lea    rdx,[rax+rax*2]
  40f24c:	lea    rax,[rax+rdx*4]
  40f250:	lea    rcx,[rax*8+0xe8]
  40f258:	call   0x408f90
  40f25d:	mov    QWORD PTR [rbx+0x90],rax
  40f264:	jmp    0x40f1d6
  40f269:	nop    DWORD PTR [rax+0x0]
  40f270:	push   r14
  40f272:	push   r13
  40f274:	push   r12
  40f276:	push   rbp
  40f277:	push   rdi
  40f278:	push   rsi
  40f279:	push   rbx
  40f27a:	sub    rsp,0x20
  40f27e:	lea    r12,[rcx+0x8]
  40f282:	mov    r14,rcx
  40f285:	mov    rbp,rcx
  40f288:	and    r12,0xfffffffffffffff8
  40f28c:	sub    r14,r12
  40f28f:	lea    r13d,[r14+0xe8]
  40f296:	shr    r13d,0x3
  40f29a:	nop    WORD PTR [rax+rax*1+0x0]
  40f2a0:	mov    rbx,QWORD PTR [rbp+0x78]
  40f2a4:	mov    esi,DWORD PTR [rbp+0xb0]
  40f2aa:	jmp    0x40f2d6
  40f2ac:	nop    DWORD PTR [rax+0x0]
  40f2b0:	cmp    eax,0x6
  40f2b3:	jne    0x40f2c3
  40f2b5:	mov    rcx,QWORD PTR [rbx+0x20]
  40f2b9:	test   rcx,rcx
  40f2bc:	je     0x40f2c3
  40f2be:	call   0x407090
  40f2c3:	sub    esi,0x1
  40f2c6:	mov    QWORD PTR [rbx+0x20],0x0
  40f2ce:	add    rbx,0x68
  40f2d2:	test   esi,esi
  40f2d4:	jle    0x40f330
  40f2d6:	mov    edx,DWORD PTR [rbx+0x10]
  40f2d9:	test   dl,0x40
  40f2dc:	jne    0x40f314
  40f2de:	mov    eax,edx
  40f2e0:	and    eax,0xf000
  40f2e5:	shr    eax,0xc
  40f2e8:	cmp    eax,0x1
  40f2eb:	jne    0x40f2b0
  40f2ed:	and    dh,0x4
  40f2f0:	je     0x40f2c3
  40f2f2:	cmp    QWORD PTR [rbx+0x20],0x0
  40f2f7:	je     0x40f2c3
  40f2f9:	lea    rax,[rip+0x1988d]        # 0x428b8d
  40f300:	cmp    rbp,0xf
  40f304:	mov    QWORD PTR [rbx+0x18],rax
  40f308:	jbe    0x40f2c3
  40f30a:	mov    rcx,rbx
  40f30d:	call   0x4098c0
  40f312:	jmp    0x40f2c3
  40f314:	mov    rcx,QWORD PTR [rbx+0x18]
  40f318:	call   0x422858
  40f31d:	mov    edx,DWORD PTR [rbx+0x10]
  40f320:	mov    QWORD PTR [rbx+0x18],0x0
  40f328:	and    edx,0xffffffbf
  40f32b:	mov    DWORD PTR [rbx+0x10],edx
  40f32e:	jmp    0x40f2de
  40f330:	mov    rax,QWORD PTR [rbp+0x90]
  40f337:	test   rax,rax
  40f33a:	je     0x40f39f
  40f33c:	mov    rdx,QWORD PTR [rax]
  40f33f:	mov    rsi,rax
  40f342:	mov    rdi,r12
  40f345:	sub    rsi,r14
  40f348:	mov    QWORD PTR [rbp+0x0],rdx
  40f34c:	mov    rcx,QWORD PTR [rax+0xe0]
  40f353:	lea    rdx,[rax+0xe8]
  40f35a:	mov    QWORD PTR [rbp+0xe0],rcx
  40f361:	mov    ecx,r13d
  40f364:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40f367:	movsxd rax,DWORD PTR [rax+0xb0]
  40f36e:	mov    rcx,QWORD PTR [rbp+0x78]
  40f372:	lea    r8,[rax+rax*2]
  40f376:	lea    r8,[rax+r8*4]
  40f37a:	shl    r8,0x3
  40f37e:	call   0x422810
  40f383:	mov    rcx,QWORD PTR [rbp+0x90]
  40f38a:	call   0x422858
  40f38f:	mov    QWORD PTR [rbp+0x90],0x0
  40f39a:	jmp    0x40f2a0
  40f39f:	add    rsp,0x20
  40f3a3:	pop    rbx
  40f3a4:	pop    rsi
  40f3a5:	pop    rdi
  40f3a6:	pop    rbp
  40f3a7:	pop    r12
  40f3a9:	pop    r13
  40f3ab:	pop    r14
  40f3ad:	ret    
  40f3ae:	xchg   ax,ax
  40f3b0:	push   rbp
  40f3b1:	push   rdi
  40f3b2:	push   rsi
  40f3b3:	push   rbx
  40f3b4:	sub    rsp,0x28
  40f3b8:	mov    rbp,QWORD PTR [rcx+0x90]
  40f3bf:	mov    rbx,rcx
  40f3c2:	test   rbp,rbp
  40f3c5:	je     0x40f44b
  40f3cb:	mov    QWORD PTR [rcx+0x90],0x0
  40f3d6:	lea    rdi,[rbx+0x8]
  40f3da:	mov    rsi,rbp
  40f3dd:	call   0x40f270
  40f3e2:	mov    rax,QWORD PTR [rbp+0x0]
  40f3e6:	and    rdi,0xfffffffffffffff8
  40f3ea:	lea    rdx,[rbp+0xe8]
  40f3f1:	mov    QWORD PTR [rbx],rax
  40f3f4:	mov    rax,QWORD PTR [rbp+0xe0]
  40f3fb:	mov    QWORD PTR [rbx+0xe0],rax
  40f402:	mov    rax,rbx
  40f405:	sub    rax,rdi
  40f408:	sub    rsi,rax
  40f40b:	add    eax,0xe8
  40f410:	shr    eax,0x3
  40f413:	mov    ecx,eax
  40f415:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40f418:	movsxd rax,DWORD PTR [rbp+0xb0]
  40f41f:	mov    rcx,QWORD PTR [rbx+0x78]
  40f423:	lea    r8,[rax+rax*2]
  40f427:	lea    r8,[rax+r8*4]
  40f42b:	shl    r8,0x3
  40f42f:	call   0x422810
  40f434:	mov    rcx,rbx
  40f437:	mov    QWORD PTR [rbx+0x90],rbp
  40f43e:	add    rsp,0x28
  40f442:	pop    rbx
  40f443:	pop    rsi
  40f444:	pop    rdi
  40f445:	pop    rbp
  40f446:	jmp    0x408d60
  40f44b:	mov    rsi,QWORD PTR [rcx+0x28]
  40f44f:	test   rsi,rsi
  40f452:	je     0x40f47a
  40f454:	mov    rbx,QWORD PTR [rip+0x1644d]        # 0x4258a8
  40f45b:	call   QWORD PTR [rip+0x27c63]        # 0x4370c4
  40f461:	lea    rcx,[rax+0x60]
  40f465:	mov    r8,rsi
  40f468:	mov    rdx,rbx
  40f46b:	call   0x407150
  40f470:	mov    ecx,0x1
  40f475:	call   0x407590
  40f47a:	mov    rsi,QWORD PTR [rcx+0x30]
  40f47e:	lea    rax,[rip+0x1c08a]        # 0x42b50f
  40f485:	test   rsi,rsi
  40f488:	cmove  rsi,rax
  40f48c:	jmp    0x40f454
  40f48e:	xchg   ax,ax
  40f490:	push   r15
  40f492:	push   r14
  40f494:	push   r13
  40f496:	push   r12
  40f498:	push   rbp
  40f499:	push   rdi
  40f49a:	push   rsi
  40f49b:	push   rbx
  40f49c:	sub    rsp,0x58
  40f4a0:	lea    rdi,[rsp+0x48]
  40f4a5:	mov    r13,rcx
  40f4a8:	mov    DWORD PTR [rsp+0x48],0x0
  40f4b0:	mov    rdx,rdi
  40f4b3:	call   0x409a90
  40f4b8:	test   rax,rax
  40f4bb:	mov    rbx,rax
  40f4be:	je     0x40f599
  40f4c4:	lea    rdx,[rip+0x1966d]        # 0x428b38
  40f4cb:	mov    rcx,rax
  40f4ce:	call   0x422880
  40f4d3:	test   rax,rax
  40f4d6:	mov    rsi,rax
  40f4d9:	je     0x40f843
  40f4df:	mov    edx,DWORD PTR [rsp+0x48]
  40f4e3:	test   edx,edx
  40f4e5:	jne    0x40f5f0
  40f4eb:	lea    rcx,[rip+0x1969e]        # 0x428b90
  40f4f2:	mov    r9,rsi
  40f4f5:	mov    r8d,0x3
  40f4fb:	mov    edx,0x1
  40f500:	call   0x422840
  40f505:	mov    rbx,QWORD PTR [r13+0x60]
  40f509:	mov    edx,0xa
  40f50e:	mov    rcx,rbx
  40f511:	call   0x4227d0
  40f516:	test   rax,rax
  40f519:	je     0x40f532
  40f51b:	lea    r8,[rax+0x1]
  40f51f:	mov    r9,rsi
  40f522:	mov    edx,0x1
  40f527:	mov    rcx,rbx
  40f52a:	sub    r8,rbx
  40f52d:	call   0x422840
  40f532:	xor    ecx,ecx
  40f534:	call   QWORD PTR [rip+0x27c62]        # 0x43719c
  40f53a:	mov    rcx,rdi
  40f53d:	mov    QWORD PTR [rsp+0x48],rax
  40f542:	call   QWORD PTR [rip+0x27bc4]        # 0x43710c
  40f548:	lea    rdx,[rip+0x1a611]        # 0x429b60
  40f54f:	mov    r8,rax
  40f552:	mov    rcx,rsi
  40f555:	call   0x407150
  40f55a:	mov    r15d,DWORD PTR [r13+0xb4]
  40f561:	mov    rbx,QWORD PTR [r13+0x78]
  40f565:	mov    eax,DWORD PTR [rbx+0x10]
  40f568:	test   al,0xf
  40f56a:	je     0x40f583
  40f56c:	test   eax,0x280100
  40f571:	jne    0x40f583
  40f573:	movzx  edx,WORD PTR [rbx+0x8]
  40f577:	cmp    dx,0x8000
  40f57c:	je     0x40f5b0
  40f57e:	cmp    dx,WORD PTR [rbx]
  40f581:	je     0x40f5b0
  40f583:	sub    r15d,0x1
  40f587:	add    rbx,0x68
  40f58b:	test   r15d,r15d
  40f58e:	jg     0x40f565
  40f590:	mov    rcx,rsi
  40f593:	call   0x422898
  40f598:	nop
  40f599:	add    rsp,0x58
  40f59d:	pop    rbx
  40f59e:	pop    rsi
  40f59f:	pop    rdi
  40f5a0:	pop    rbp
  40f5a1:	pop    r12
  40f5a3:	pop    r13
  40f5a5:	pop    r14
  40f5a7:	pop    r15
  40f5a9:	ret    
  40f5aa:	nop    WORD PTR [rax+rax*1+0x0]
  40f5b0:	test   al,0x10
  40f5b2:	mov    rdi,rbx
  40f5b5:	je     0x40f5cb
  40f5b7:	movzx  edx,WORD PTR [rbx+0x4]
  40f5bb:	lea    rcx,[rdx+rdx*2]
  40f5bf:	lea    rcx,[rdx+rcx*4]
  40f5c3:	mov    rdx,QWORD PTR [r13+0x78]
  40f5c7:	lea    rdi,[rdx+rcx*8]
  40f5cb:	and    eax,0xf000
  40f5d0:	shr    eax,0xc
  40f5d3:	cmp    eax,0x7
  40f5d6:	ja     0x40f583
  40f5d8:	lea    rcx,[rip+0x195b9]        # 0x428b98
  40f5df:	movsxd rax,DWORD PTR [rcx+rax*4]
  40f5e3:	add    rax,rcx
  40f5e6:	jmp    rax
  40f5e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5f0:	mov    rcx,rbx
  40f5f3:	call   0x422858
  40f5f8:	jmp    0x40f4eb
  40f5fd:	nop    DWORD PTR [rax]
  40f600:	mov    r12,QWORD PTR [rdi+0x20]
  40f604:	test   r12,r12
  40f607:	je     0x40f583
  40f60d:	mov    eax,DWORD PTR [r12]
  40f611:	add    r12,0x8
  40f615:	test   eax,eax
  40f617:	jle    0x40f583
  40f61d:	sub    eax,0x1
  40f620:	lea    rax,[r12+rax*8+0x8]
  40f625:	mov    QWORD PTR [rsp+0x38],rax
  40f62a:	nop    WORD PTR [rax+rax*1+0x0]
  40f630:	add    r12,0x8
  40f634:	mov    rbp,QWORD PTR [r12-0x8]
  40f639:	xor    edx,edx
  40f63b:	mov    rcx,rbp
  40f63e:	call   0x40bde0
  40f643:	test   rax,rax
  40f646:	mov    r14,rax
  40f649:	je     0x40f699
  40f64b:	mov    r8,QWORD PTR [rdi+0x50]
  40f64f:	lea    rdx,[rip+0x1a65b]        # 0x429cb1
  40f656:	mov    rcx,rsi
  40f659:	call   0x407150
  40f65e:	xchg   ax,ax
  40f660:	mov    r9,r14
  40f663:	mov    r8,rdi
  40f666:	mov    edx,0x1
  40f66b:	mov    rcx,rsi
  40f66e:	call   0x407b60
  40f673:	mov    rdx,r14
  40f676:	mov    rcx,rbp
  40f679:	call   0x40bf30
  40f67e:	test   rax,rax
  40f681:	mov    r14,rax
  40f684:	jne    0x40f660
  40f686:	mov    r8,QWORD PTR [rdi+0x50]
  40f68a:	lea    rdx,[rip+0x19065]        # 0x4286f6
  40f691:	mov    rcx,rsi
  40f694:	call   0x407150
  40f699:	cmp    r12,QWORD PTR [rsp+0x38]
  40f69e:	jne    0x40f630
  40f6a0:	jmp    0x40f583
  40f6a5:	mov    r8,QWORD PTR [rdi+0x20]
  40f6a9:	test   r8,r8
  40f6ac:	je     0x40f818
  40f6b2:	mov    rdx,rdi
  40f6b5:	mov    rcx,rsi
  40f6b8:	call   0x4073f0
  40f6bd:	jmp    0x40f583
  40f6c2:	test   BYTE PTR [rdi+0x10],0x20
  40f6c6:	mov    r8,QWORD PTR [rbx+0x50]
  40f6ca:	mov    rax,r8
  40f6cd:	je     0x40f6d3
  40f6cf:	mov    rax,QWORD PTR [rbx+0x58]
  40f6d3:	test   rax,rax
  40f6d6:	lea    rdx,[rip+0x194b7]        # 0x428b94
  40f6dd:	mov    rcx,rsi
  40f6e0:	cmovne r8,rax
  40f6e4:	call   0x407150
  40f6e9:	jmp    0x40f583
  40f6ee:	xchg   ax,ax
  40f6f0:	mov    eax,DWORD PTR [rdi+0x10]
  40f6f3:	test   ah,0x4
  40f6f6:	je     0x40f8b6
  40f6fc:	mov    rbp,QWORD PTR [rdi+0x20]
  40f700:	mov    edx,DWORD PTR [rbp+0x0]
  40f703:	add    rbp,0x8
  40f707:	cmp    edx,0x1
  40f70a:	jle    0x40f8ca
  40f710:	and    eax,0xffffffdf
  40f713:	mov    DWORD PTR [rdi+0x10],eax
  40f716:	lea    eax,[rdx-0x1]
  40f719:	lea    r12,[rbp+rax*8+0x8]
  40f71e:	xchg   ax,ax
  40f720:	add    rbp,0x8
  40f724:	mov    r8,QWORD PTR [rbp-0x8]
  40f728:	mov    rdx,rdi
  40f72b:	mov    rcx,rsi
  40f72e:	call   0x4073f0
  40f733:	cmp    rbp,r12
  40f736:	jne    0x40f720
  40f738:	jmp    0x40f583
  40f73d:	nop    DWORD PTR [rax]
  40f740:	mov    rbp,QWORD PTR [rdi+0x18]
  40f744:	mov    rdx,rdi
  40f747:	mov    ecx,0x3
  40f74c:	call   QWORD PTR [rdi+0x38]
  40f74f:	mov    r8,QWORD PTR [rdi+0x18]
  40f753:	mov    rdx,rdi
  40f756:	mov    rcx,rsi
  40f759:	call   0x4073f0
  40f75e:	mov    QWORD PTR [rdi+0x18],rbp
  40f762:	jmp    0x40f583
  40f767:	nop    WORD PTR [rax+rax*1+0x0]
  40f770:	mov    eax,DWORD PTR [rdi+0x18]
  40f773:	lea    r8,[rip+0x18f71]        # 0x4286eb
  40f77a:	mov    rdx,rdi
  40f77d:	mov    rcx,rsi
  40f780:	test   eax,eax
  40f782:	lea    rax,[rip+0x18f67]        # 0x4286f0
  40f789:	cmove  r8,rax
  40f78d:	call   0x4073f0
  40f792:	jmp    0x40f583
  40f797:	nop    WORD PTR [rax+rax*1+0x0]
  40f7a0:	mov    rdx,rdi
  40f7a3:	mov    rbp,QWORD PTR [rdi+0x18]
  40f7a7:	mov    ecx,0x3
  40f7ac:	call   QWORD PTR [rdi+0x38]
  40f7af:	mov    r12,QWORD PTR [rdi+0x18]
  40f7b3:	mov    QWORD PTR [rdi+0x18],rbp
  40f7b7:	mov    rcx,r12
  40f7ba:	call   0x4227a8
  40f7bf:	lea    rcx,[rax+0x3]
  40f7c3:	mov    r14,rax
  40f7c6:	call   0x408f90
  40f7cb:	lea    r8,[r14+0x1]
  40f7cf:	lea    rcx,[rax+0x1]
  40f7d3:	mov    rbp,rax
  40f7d6:	mov    rdx,r12
  40f7d9:	mov    BYTE PTR [rax],0x3d
  40f7dc:	call   0x422810
  40f7e1:	mov    r8,rbp
  40f7e4:	mov    rdx,rdi
  40f7e7:	mov    rcx,rsi
  40f7ea:	call   0x4073f0
  40f7ef:	mov    rcx,rbp
  40f7f2:	call   0x422858
  40f7f7:	mov    rcx,r12
  40f7fa:	call   0x422858
  40f7ff:	jmp    0x40f583
  40f804:	movsxd r8,DWORD PTR [rdi+0x18]
  40f808:	mov    rdx,rdi
  40f80b:	mov    rcx,rsi
  40f80e:	call   0x4073f0
  40f813:	jmp    0x40f583
  40f818:	cmp    DWORD PTR [r13+0x0],0x1ffff
  40f820:	jle    0x40f583
  40f826:	movzx  edx,WORD PTR [rdi]
  40f829:	mov    rax,QWORD PTR [r13+0xc8]
  40f830:	mov    r8,QWORD PTR [rdi+0x18]
  40f834:	cmp    QWORD PTR [rax+rdx*8],r8
  40f838:	jne    0x40f6b2
  40f83e:	jmp    0x40f583
  40f843:	mov    rbp,QWORD PTR [r13+0x28]
  40f847:	mov    rdi,QWORD PTR [rip+0x160d2]        # 0x425920
  40f84e:	mov    rsi,QWORD PTR [rip+0x2786f]        # 0x4370c4
  40f855:	call   rsi
  40f857:	lea    rcx,[rax+0x60]
  40f85b:	mov    r8,rbp
  40f85e:	mov    rdx,rdi
  40f861:	call   0x407150
  40f866:	mov    rdi,QWORD PTR [rip+0x278a7]        # 0x437114
  40f86d:	call   rdi
  40f86f:	mov    ecx,DWORD PTR [rax]
  40f871:	call   0x4227b8
  40f876:	mov    r12,rax
  40f879:	call   rdi
  40f87b:	mov    rdi,QWORD PTR [rip+0x16006]        # 0x425888
  40f882:	mov    ebp,DWORD PTR [rax]
  40f884:	call   rsi
  40f886:	lea    rcx,[rax+0x60]
  40f88a:	mov    QWORD PTR [rsp+0x20],rbx
  40f88f:	mov    r9,r12
  40f892:	mov    r8d,ebp
  40f895:	mov    rdx,rdi
  40f898:	call   0x407150
  40f89d:	mov    ecx,DWORD PTR [rsp+0x48]
  40f8a1:	test   ecx,ecx
  40f8a3:	je     0x40f599
  40f8a9:	mov    rcx,rbx
  40f8ac:	call   0x422858
  40f8b1:	jmp    0x40f599
  40f8b6:	mov    r8,QWORD PTR [rdi+0x18]
  40f8ba:	mov    rdx,rdi
  40f8bd:	mov    rcx,rsi
  40f8c0:	call   0x4073f0
  40f8c5:	jmp    0x40f583
  40f8ca:	test   edx,edx
  40f8cc:	jg     0x40f716
  40f8d2:	jmp    0x40f583
  40f8d7:	nop    WORD PTR [rax+rax*1+0x0]
  40f8e0:	cmp    rcx,0xf
  40f8e4:	jbe    0x40f8f3
  40f8e6:	test   rdx,rdx
  40f8e9:	je     0x40f8f3
  40f8eb:	mov    rcx,rdx
  40f8ee:	jmp    0x4098c0
  40f8f3:	repz ret 
  40f8f5:	nop
  40f8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f900:	push   rbx
  40f901:	sub    rsp,0x20
  40f905:	cmp    rcx,0xf
  40f909:	jbe    0x40f940
  40f90b:	test   rdx,rdx
  40f90e:	je     0x40f940
  40f910:	test   BYTE PTR [rdx+0x10],0x8
  40f914:	jne    0x40f940
  40f916:	mov    rcx,QWORD PTR [rdx+0x18]
  40f91a:	test   rcx,rcx
  40f91d:	je     0x40f940
  40f91f:	mov    rbx,rdx
  40f922:	call   0x408d00
  40f927:	lea    rcx,[rbx+0x20]
  40f92b:	mov    rdx,rax
  40f92e:	add    rsp,0x20
  40f932:	pop    rbx
  40f933:	jmp    0x408fe0
  40f938:	nop    DWORD PTR [rax+rax*1+0x0]
  40f940:	add    rsp,0x20
  40f944:	pop    rbx
  40f945:	ret    
  40f946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f950:	push   rbx
  40f951:	test   r8d,r8d
  40f954:	jle    0x40f99a
  40f956:	lea    ebx,[r8-0x1]
  40f95a:	xor    r8d,r8d
  40f95d:	add    rbx,0x1
  40f961:	jmp    0x40f96c
  40f963:	add    r8,0x1
  40f967:	cmp    r8,rbx
  40f96a:	je     0x40f99a
  40f96c:	movzx  r10d,BYTE PTR [rcx+r8*1]
  40f971:	movzx  r9d,BYTE PTR [rdx+r8*1]
  40f976:	cmp    r10b,r9b
  40f979:	je     0x40f995
  40f97b:	lea    r11,[rip+0x1597e]        # 0x425300
  40f982:	movzx  eax,r10b
  40f986:	movzx  eax,BYTE PTR [r11+rax*1]
  40f98b:	movzx  r9d,BYTE PTR [r11+r9*1]
  40f990:	sub    eax,r9d
  40f993:	jne    0x40f99c
  40f995:	test   r10b,r10b
  40f998:	jne    0x40f963
  40f99a:	xor    eax,eax
  40f99c:	pop    rbx
  40f99d:	ret    
  40f99e:	xchg   ax,ax
  40f9a0:	push   r15
  40f9a2:	push   r14
  40f9a4:	push   r13
  40f9a6:	push   r12
  40f9a8:	push   rbp
  40f9a9:	push   rdi
  40f9aa:	push   rsi
  40f9ab:	push   rbx
  40f9ac:	sub    rsp,0xd8
  40f9b3:	mov    rbx,rdx
  40f9b6:	lea    rdx,[rdx+0x80]
  40f9bd:	mov    QWORD PTR [rsp+0x120],rcx
  40f9c5:	mov    QWORD PTR [rsp+0x130],r8
  40f9cd:	mov    r12,rbx
  40f9d0:	mov    esi,r12d
  40f9d3:	add    r12,0x1
  40f9d7:	movzx  eax,BYTE PTR [r12-0x1]
  40f9dd:	sub    esi,ebx
  40f9df:	test   al,al
  40f9e1:	je     0x40fc40
  40f9e7:	cmp    al,0x3d
  40f9e9:	jne    0x40fbc0
  40f9ef:	lea    r9,[rsp+0x50]
  40f9f4:	movsxd rdi,esi
  40f9f7:	mov    rdx,rbx
  40f9fa:	mov    r8,rdi
  40f9fd:	mov    rcx,r9
  40fa00:	call   0x422810
  40fa05:	mov    BYTE PTR [rsp+rdi*1+0x50],0x0
  40fa0a:	mov    rbx,rax
  40fa0d:	cmp    esi,0x1
  40fa10:	jle    0x40fbd0
  40fa16:	mov    rax,QWORD PTR [rsp+0x120]
  40fa1e:	mov    rcx,QWORD PTR [rsp+0x120]
  40fa26:	xor    r15d,r15d
  40fa29:	mov    QWORD PTR [rsp+0x40],r12
  40fa2e:	mov    BYTE PTR [rsp+0x3f],0x0
  40fa33:	mov    r12d,r15d
  40fa36:	mov    DWORD PTR [rsp+0x38],0x0
  40fa3e:	xor    ebp,ebp
  40fa40:	mov    rax,QWORD PTR [rax+0x78]
  40fa44:	mov    edi,DWORD PTR [rcx+0xb0]
  40fa4a:	mov    r14,rax
  40fa4d:	mov    QWORD PTR [rsp+0x48],rax
  40fa52:	movsxd rax,esi
  40fa55:	mov    r15,r14
  40fa58:	mov    r13,rax
  40fa5b:	jmp    0x40fa74
  40fa5d:	nop    DWORD PTR [rax]
  40fa60:	cmp    eax,0x80100
  40fa65:	je     0x40fa88
  40fa67:	add    r12d,0x1
  40fa6b:	add    r15,0x68
  40fa6f:	cmp    edi,r12d
  40fa72:	jle    0x40fabe
  40fa74:	mov    r14,QWORD PTR [r15+0x50]
  40fa78:	test   r14,r14
  40fa7b:	je     0x40fa67
  40fa7d:	mov    eax,DWORD PTR [r15+0x10]
  40fa81:	test   eax,0x280000
  40fa86:	jne    0x40fa60
  40fa88:	mov    r8d,esi
  40fa8b:	mov    rdx,r14
  40fa8e:	mov    rcx,rbx
  40fa91:	call   0x40f950
  40fa96:	test   eax,eax
  40fa98:	jne    0x40fc00
  40fa9e:	cmp    BYTE PTR [r14+r13*1],0x0
  40faa3:	je     0x40fc84
  40faa9:	mov    DWORD PTR [rsp+0x38],r12d
  40faae:	add    r12d,0x1
  40fab2:	add    ebp,0x1
  40fab5:	add    r15,0x68
  40fab9:	cmp    edi,r12d
  40fabc:	jg     0x40fa74
  40fabe:	test   ebp,ebp
  40fac0:	mov    r12,QWORD PTR [rsp+0x40]
  40fac5:	je     0x40fc50
  40facb:	cmp    ebp,0x1
  40face:	je     0x40fd50
  40fad4:	mov    rax,QWORD PTR [rsp+0x120]
  40fadc:	test   BYTE PTR [rax+0x10],0x4
  40fae0:	je     0x40fbe2
  40fae6:	mov    r12,QWORD PTR [rax+0x20]
  40faea:	mov    rdi,QWORD PTR [rip+0x15cf7]        # 0x4257e8
  40faf1:	mov    rsi,QWORD PTR [rip+0x275cc]        # 0x4370c4
  40faf8:	call   rsi
  40fafa:	lea    rcx,[rax+0x60]
  40fafe:	mov    DWORD PTR [rsp+0x20],ebp
  40fb02:	mov    r9,rbx
  40fb05:	mov    r8,r12
  40fb08:	mov    rdx,rdi
  40fb0b:	call   0x407150
  40fb10:	cmp    ebp,0x4
  40fb13:	jg     0x40fde2
  40fb19:	mov    rcx,rbx
  40fb1c:	lea    rbp,[rip+0x19023]        # 0x428b46
  40fb23:	call   0x4227a8
  40fb28:	mov    r12d,eax
  40fb2b:	mov    rax,QWORD PTR [rsp+0x120]
  40fb33:	test   BYTE PTR [rax+0x10],0x3
  40fb37:	lea    rax,[rip+0x1a14b]        # 0x429c89
  40fb3e:	cmovne rbp,rax
  40fb42:	mov    rax,QWORD PTR [rsp+0x120]
  40fb4a:	xor    r13d,r13d
  40fb4d:	mov    rdi,QWORD PTR [rax+0x78]
  40fb51:	call   rsi
  40fb53:	mov    rcx,QWORD PTR [rip+0x15c86]        # 0x4257e0
  40fb5a:	lea    rdx,[rax+0x60]
  40fb5e:	call   0x422868
  40fb63:	mov    r14,QWORD PTR [rdi+0x50]
  40fb67:	test   r14,r14
  40fb6a:	je     0x40fba1
  40fb6c:	mov    r8d,r12d
  40fb6f:	mov    rdx,r14
  40fb72:	mov    rcx,rbx
  40fb75:	call   0x40f950
  40fb7a:	test   eax,eax
  40fb7c:	je     0x40fdff
  40fb82:	mov    r14,QWORD PTR [rdi+0x58]
  40fb86:	test   r14,r14
  40fb89:	je     0x40fba1
  40fb8b:	mov    r8d,r12d
  40fb8e:	mov    rdx,r14
  40fb91:	mov    rcx,rbx
  40fb94:	call   0x40f950
  40fb99:	test   eax,eax
  40fb9b:	je     0x40fdff
  40fba1:	mov    rax,QWORD PTR [rsp+0x120]
  40fba9:	add    rdi,0x68
  40fbad:	add    r13d,0x1
  40fbb1:	cmp    r13d,DWORD PTR [rax+0xb0]
  40fbb8:	jl     0x40fb63
  40fbba:	jmp    0x40fde2
  40fbbf:	nop
  40fbc0:	cmp    r12,rdx
  40fbc3:	jne    0x40f9d0
  40fbc9:	nop    DWORD PTR [rax+0x0]
  40fbd0:	mov    rax,QWORD PTR [rsp+0x120]
  40fbd8:	test   BYTE PTR [rax+0x10],0x4
  40fbdc:	jne    0x40fdbf
  40fbe2:	mov    eax,0xffffffff
  40fbe7:	add    rsp,0xd8
  40fbee:	pop    rbx
  40fbef:	pop    rsi
  40fbf0:	pop    rdi
  40fbf1:	pop    rbp
  40fbf2:	pop    r12
  40fbf4:	pop    r13
  40fbf6:	pop    r14
  40fbf8:	pop    r15
  40fbfa:	ret    
  40fbfb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc00:	mov    r14,QWORD PTR [r15+0x58]
  40fc04:	test   r14,r14
  40fc07:	je     0x40fa67
  40fc0d:	mov    r8d,esi
  40fc10:	mov    rdx,r14
  40fc13:	mov    rcx,rbx
  40fc16:	call   0x40f950
  40fc1b:	test   eax,eax
  40fc1d:	jne    0x40fa67
  40fc23:	cmp    BYTE PTR [r14+r13*1],0x0
  40fc28:	je     0x40fd5a
  40fc2e:	mov    BYTE PTR [rsp+0x3f],0x1
  40fc33:	jmp    0x40faa9
  40fc38:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc40:	xor    r12d,r12d
  40fc43:	jmp    0x40fa0d
  40fc48:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc50:	mov    rax,QWORD PTR [rsp+0x120]
  40fc58:	test   r12,r12
  40fc5b:	mov    eax,DWORD PTR [rax+0x10]
  40fc5e:	je     0x40fd6c
  40fc64:	test   al,0x4
  40fc66:	je     0x40fbe2
  40fc6c:	mov    rax,QWORD PTR [rsp+0x120]
  40fc74:	mov    rsi,QWORD PTR [rip+0x15bbd]        # 0x425838
  40fc7b:	mov    rdi,QWORD PTR [rax+0x20]
  40fc7f:	jmp    0x40fdca
  40fc84:	mov    r15d,r12d
  40fc87:	mov    r12,QWORD PTR [rsp+0x40]
  40fc8c:	movsxd r10,r15d
  40fc8f:	mov    rcx,QWORD PTR [rsp+0x48]
  40fc94:	lea    rax,[r10+r10*2]
  40fc98:	lea    rax,[r10+rax*4]
  40fc9c:	lea    rbx,[rcx+rax*8]
  40fca0:	test   DWORD PTR [rbx+0x10],0x280000
  40fca7:	je     0x40fd20
  40fca9:	mov    rax,QWORD PTR [rsp+0x120]
  40fcb1:	test   BYTE PTR [rax+0x10],0x4
  40fcb5:	je     0x40fbe2
  40fcbb:	mov    r12,QWORD PTR [rbx+0x50]
  40fcbf:	mov    rbp,QWORD PTR [rax+0x28]
  40fcc3:	mov    rdi,QWORD PTR [rip+0x15b56]        # 0x425820
  40fcca:	mov    rsi,QWORD PTR [rip+0x273f3]        # 0x4370c4
  40fcd1:	call   rsi
  40fcd3:	lea    rcx,[rax+0x60]
  40fcd7:	mov    r9,r12
  40fcda:	mov    r8,rbp
  40fcdd:	mov    rdx,rdi
  40fce0:	call   0x407150
  40fce5:	mov    rbx,QWORD PTR [rbx+0x40]
  40fce9:	test   rbx,rbx
  40fcec:	je     0x40fd03
  40fcee:	call   rsi
  40fcf0:	lea    rdx,[rip+0x1a062]        # 0x429d59
  40fcf7:	lea    rcx,[rax+0x60]
  40fcfb:	mov    r8,rbx
  40fcfe:	call   0x407150
  40fd03:	call   rsi
  40fd05:	lea    rdx,[rax+0x60]
  40fd09:	mov    ecx,0xa
  40fd0e:	call   0x422870
  40fd13:	jmp    0x40fde2
  40fd18:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd20:	cmp    BYTE PTR [rsp+0x3f],0x0
  40fd25:	je     0x40fd33
  40fd27:	mov    rax,QWORD PTR [rsp+0x130]
  40fd2f:	or     DWORD PTR [rax+0x10],0x20
  40fd33:	mov    rax,QWORD PTR [rsp+0x130]
  40fd3b:	mov    QWORD PTR [rax],rbx
  40fd3e:	mov    QWORD PTR [rax+0x8],r12
  40fd42:	mov    DWORD PTR [rax+0x14],0x2
  40fd49:	xor    eax,eax
  40fd4b:	jmp    0x40fbe7
  40fd50:	mov    r15d,DWORD PTR [rsp+0x38]
  40fd55:	jmp    0x40fc8c
  40fd5a:	mov    r15d,r12d
  40fd5d:	mov    BYTE PTR [rsp+0x3f],0x1
  40fd62:	mov    r12,QWORD PTR [rsp+0x40]
  40fd67:	jmp    0x40fc8c
  40fd6c:	test   al,0x3
  40fd6e:	jne    0x40fc64
  40fd74:	mov    rcx,QWORD PTR [rsp+0x120]
  40fd7c:	movzx  edx,WORD PTR [rcx+0xae]
  40fd83:	cmp    dx,0x8000
  40fd88:	je     0x40fc64
  40fd8e:	movzx  eax,dx
  40fd91:	mov    rcx,QWORD PTR [rsp+0x48]
  40fd96:	lea    rdx,[rax+rax*2]
  40fd9a:	lea    rax,[rax+rdx*4]
  40fd9e:	lea    rax,[rcx+rax*8]
  40fda2:	mov    rcx,QWORD PTR [rsp+0x130]
  40fdaa:	mov    QWORD PTR [rcx],rax
  40fdad:	mov    QWORD PTR [rcx+0x8],rbx
  40fdb1:	xor    eax,eax
  40fdb3:	mov    DWORD PTR [rcx+0x14],0x3
  40fdba:	jmp    0x40fbe7
  40fdbf:	mov    rdi,QWORD PTR [rax+0x28]
  40fdc3:	mov    rsi,QWORD PTR [rip+0x15a8e]        # 0x425858
  40fdca:	call   QWORD PTR [rip+0x272f4]        # 0x4370c4
  40fdd0:	lea    rcx,[rax+0x60]
  40fdd4:	mov    r9,rbx
  40fdd7:	mov    r8,rdi
  40fdda:	mov    rdx,rsi
  40fddd:	call   0x407150
  40fde2:	mov    rcx,QWORD PTR [rsp+0x120]
  40fdea:	mov    edx,0x1
  40fdef:	call   QWORD PTR [rcx+0x98]
  40fdf5:	mov    ecx,0x1
  40fdfa:	call   0x422948
  40fdff:	call   rsi
  40fe01:	lea    rdx,[rip+0x19cfc]        # 0x429b04
  40fe08:	lea    rcx,[rax+0x60]
  40fe0c:	mov    r9,r14
  40fe0f:	mov    r8,rbp
  40fe12:	call   0x407150
  40fe17:	jmp    0x40fba1
  40fe1c:	nop    DWORD PTR [rax+0x0]
  40fe20:	push   rsi
  40fe21:	push   rbx
  40fe22:	sub    rsp,0x38
  40fe26:	mov    rax,QWORD PTR [rcx+0x18]
  40fe2a:	test   rax,rax
  40fe2d:	je     0x40fe3a
  40fe2f:	movzx  eax,BYTE PTR [rax]
  40fe32:	test   al,al
  40fe34:	jne    0x40ff00
  40fe3a:	mov    eax,DWORD PTR [rcx+0x14]
  40fe3d:	cmp    eax,DWORD PTR [rcx+0x4]
  40fe40:	jae    0x40feaf
  40fe42:	mov    rbx,rcx
  40fe45:	mov    r8,rdx
  40fe48:	mov    ecx,eax
  40fe4a:	mov    rdx,QWORD PTR [rbx+0x8]
  40fe4e:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40fe52:	mov    ecx,DWORD PTR [rbx+0x10]
  40fe55:	test   cl,0x3
  40fe58:	mov    QWORD PTR [rbx+0x18],rdx
  40fe5c:	jne    0x40fea2
  40fe5e:	add    eax,0x1
  40fe61:	mov    DWORD PTR [rbx+0x14],eax
  40fe64:	cmp    BYTE PTR [rdx],0x2d
  40fe67:	jne    0x40fef0
  40fe6d:	nop    DWORD PTR [rax]
  40fe70:	add    rdx,0x1
  40fe74:	cmp    BYTE PTR [rdx],0x2d
  40fe77:	je     0x40fe70
  40fe79:	movzx  esi,WORD PTR [rbx+0xae]
  40fe80:	mov    eax,0xffff8000
  40fe85:	mov    rcx,rbx
  40fe88:	mov    WORD PTR [rbx+0xae],ax
  40fe8f:	call   0x40f9a0
  40fe94:	mov    WORD PTR [rbx+0xae],si
  40fe9b:	add    rsp,0x38
  40fe9f:	pop    rbx
  40fea0:	pop    rsi
  40fea1:	ret    
  40fea2:	lea    r9,[rdx+0x1]
  40fea6:	mov    QWORD PTR [rbx+0x18],r9
  40feaa:	cmp    BYTE PTR [rdx],0x2d
  40fead:	je     0x40fec0
  40feaf:	mov    eax,0x1
  40feb4:	add    rsp,0x38
  40feb8:	pop    rbx
  40feb9:	pop    rsi
  40feba:	ret    
  40febb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fec0:	cmp    BYTE PTR [rdx+0x1],0x0
  40fec4:	je     0x40feaf
  40fec6:	add    eax,0x1
  40fec9:	mov    DWORD PTR [rbx+0x14],eax
  40fecc:	movzx  eax,BYTE PTR [rdx+0x1]
  40fed0:	cmp    al,0x2d
  40fed2:	jne    0x40ff14
  40fed4:	lea    rax,[rdx+0x2]
  40fed8:	mov    QWORD PTR [rbx+0x18],rax
  40fedc:	cmp    BYTE PTR [rdx+0x2],0x0
  40fee0:	je     0x40feaf
  40fee2:	and    ecx,0x1
  40fee5:	je     0x40ff2a
  40fee7:	mov    rdx,rax
  40feea:	nop    WORD PTR [rax+rax*1+0x0]
  40fef0:	mov    rcx,rbx
  40fef3:	add    rsp,0x38
  40fef7:	pop    rbx
  40fef8:	pop    rsi
  40fef9:	jmp    0x40f9a0
  40fefe:	xchg   ax,ax
  40ff00:	lea    r9,[rdx+0x14]
  40ff04:	mov    r8,rdx
  40ff07:	mov    edx,eax
  40ff09:	add    rsp,0x38
  40ff0d:	pop    rbx
  40ff0e:	pop    rsi
  40ff0f:	jmp    0x408750
  40ff14:	and    ecx,0x2
  40ff17:	jne    0x40ff1e
  40ff19:	mov    rdx,r9
  40ff1c:	jmp    0x40fef0
  40ff1e:	movzx  edx,al
  40ff21:	lea    r9,[r8+0x14]
  40ff25:	mov    rcx,rbx
  40ff28:	jmp    0x40ff09
  40ff2a:	mov    rsi,QWORD PTR [rbx+0x20]
  40ff2e:	mov    QWORD PTR [rsp+0x28],rdx
  40ff33:	mov    rbx,QWORD PTR [rip+0x158fe]        # 0x425838
  40ff3a:	call   QWORD PTR [rip+0x27184]        # 0x4370c4
  40ff40:	mov    rdx,QWORD PTR [rsp+0x28]
  40ff45:	lea    rcx,[rax+0x60]
  40ff49:	mov    r8,rsi
  40ff4c:	mov    r9,rdx
  40ff4f:	mov    rdx,rbx
  40ff52:	call   0x407150
  40ff57:	or     eax,0xffffffff
  40ff5a:	jmp    0x40feb4
  40ff5f:	nop
  40ff60:	push   rdi
  40ff61:	push   rsi
  40ff62:	push   rbx
  40ff63:	sub    rsp,0x50
  40ff67:	or     DWORD PTR [rcx+0x10],0x8000
  40ff6e:	lea    rdi,[rsp+0x30]
  40ff73:	mov    rbx,rcx
  40ff76:	mov    DWORD PTR [rcx+0x14],0x1
  40ff7d:	mov    QWORD PTR [rcx+0x18],0x0
  40ff85:	mov    rdx,rdi
  40ff88:	mov    rcx,rbx
  40ff8b:	mov    QWORD PTR [rsp+0x30],0x0
  40ff94:	mov    QWORD PTR [rsp+0x38],0x0
  40ff9d:	mov    DWORD PTR [rsp+0x40],0x2
  40ffa5:	mov    DWORD PTR [rsp+0x44],0x0
  40ffad:	call   0x40fe20
  40ffb2:	test   eax,eax
  40ffb4:	mov    esi,eax
  40ffb6:	jne    0x40ffc5
  40ffb8:	mov    rdx,rdi
  40ffbb:	mov    rcx,rbx
  40ffbe:	call   0x409a40
  40ffc3:	mov    esi,eax
  40ffc5:	cmp    esi,0xffffffff
  40ffc8:	je     0x410000
  40ffca:	cmp    esi,0x1
  40ffcd:	je     0x410020
  40ffcf:	mov    eax,DWORD PTR [rsp+0x40]
  40ffd3:	mov    edx,eax
  40ffd5:	and    edx,0x20020
  40ffdb:	cmp    edx,0x20000
  40ffe1:	je     0x40ffef
  40ffe3:	and    eax,0x40020
  40ffe8:	cmp    eax,0x40020
  40ffed:	jne    0x40ff85
  40ffef:	mov    rdx,rdi
  40fff2:	mov    rcx,rbx
  40fff5:	call   0x4085a0
  40fffa:	test   eax,eax
  40fffc:	je     0x40ff85
  40fffe:	xchg   ax,ax
  410000:	mov    edx,DWORD PTR [rbx+0x10]
  410003:	mov    eax,esi
  410005:	test   dl,0x4
  410008:	jne    0x410033
  41000a:	and    dh,0x7f
  41000d:	mov    DWORD PTR [rbx+0x10],edx
  410010:	add    rsp,0x50
  410014:	pop    rbx
  410015:	pop    rsi
  410016:	pop    rdi
  410017:	ret    
  410018:	nop    DWORD PTR [rax+rax*1+0x0]
  410020:	mov    edx,DWORD PTR [rbx+0x10]
  410023:	xor    eax,eax
  410025:	and    dh,0x7f
  410028:	mov    DWORD PTR [rbx+0x10],edx
  41002b:	add    rsp,0x50
  41002f:	pop    rbx
  410030:	pop    rsi
  410031:	pop    rdi
  410032:	ret    
  410033:	mov    DWORD PTR [rsp+0x2c],esi
  410037:	mov    edx,0x1
  41003c:	mov    rcx,rbx
  41003f:	call   QWORD PTR [rbx+0x98]
  410045:	mov    edx,DWORD PTR [rbx+0x10]
  410048:	mov    eax,DWORD PTR [rsp+0x2c]
  41004c:	and    dh,0x7f
  41004f:	mov    DWORD PTR [rbx+0x10],edx
  410052:	add    rsp,0x50
  410056:	pop    rbx
  410057:	pop    rsi
  410058:	pop    rdi
  410059:	ret    
  41005a:	nop    WORD PTR [rax+rax*1+0x0]
  410060:	push   rsi
  410061:	push   rbx
  410062:	sub    rsp,0x58
  410066:	lea    rsi,[rsp+0x30]
  41006b:	mov    rbx,rcx
  41006e:	mov    rdx,rsi
  410071:	mov    rcx,rbx
  410074:	mov    QWORD PTR [rsp+0x30],0x0
  41007d:	mov    QWORD PTR [rsp+0x38],0x0
  410086:	mov    DWORD PTR [rsp+0x40],0x4
  41008e:	mov    DWORD PTR [rsp+0x44],0x0
  410096:	call   0x40fe20
  41009b:	test   eax,eax
  41009d:	jne    0x4100aa
  41009f:	mov    rdx,rsi
  4100a2:	mov    rcx,rbx
  4100a5:	call   0x409a40
  4100aa:	cmp    eax,0xffffffff
  4100ad:	je     0x410105
  4100af:	cmp    eax,0x1
  4100b2:	je     0x410120
  4100b4:	mov    eax,DWORD PTR [rsp+0x40]
  4100b8:	test   eax,0x20020
  4100bd:	je     0x4100f2
  4100bf:	mov    edx,eax
  4100c1:	and    edx,0x40020
  4100c7:	cmp    edx,0x20
  4100ca:	je     0x4100f2
  4100cc:	mov    edx,eax
  4100ce:	and    edx,0x400020
  4100d4:	cmp    edx,0x400000
  4100da:	je     0x4100e8
  4100dc:	and    eax,0x800020
  4100e1:	cmp    eax,0x800020
  4100e6:	jne    0x41006e
  4100e8:	mov    rax,QWORD PTR [rsp+0x30]
  4100ed:	sub    WORD PTR [rax+0xe],0x1
  4100f2:	mov    rdx,rsi
  4100f5:	mov    rcx,rbx
  4100f8:	call   0x4085a0
  4100fd:	test   eax,eax
  4100ff:	je     0x41006e
  410105:	test   BYTE PTR [rbx+0x10],0x4
  410109:	mov    eax,0xffffffff
  41010e:	jne    0x410130
  410110:	add    rsp,0x58
  410114:	pop    rbx
  410115:	pop    rsi
  410116:	ret    
  410117:	nop    WORD PTR [rax+rax*1+0x0]
  410120:	xor    al,al
  410122:	add    rsp,0x58
  410126:	pop    rbx
  410127:	pop    rsi
  410128:	ret    
  410129:	nop    DWORD PTR [rax+0x0]
  410130:	mov    DWORD PTR [rsp+0x2c],eax
  410134:	mov    edx,0x1
  410139:	mov    rcx,rbx
  41013c:	call   QWORD PTR [rbx+0x98]
  410142:	mov    eax,DWORD PTR [rsp+0x2c]
  410146:	add    rsp,0x58
  41014a:	pop    rbx
  41014b:	pop    rsi
  41014c:	ret    
  41014d:	nop    DWORD PTR [rax]
  410150:	push   r14
  410152:	push   r13
  410154:	push   r12
  410156:	push   rbp
  410157:	push   rdi
  410158:	push   rsi
  410159:	push   rbx
  41015a:	sub    rsp,0x20
  41015e:	mov    rax,QWORD PTR [rip+0x23743]        # 0x4338a8
  410165:	mov    rbp,rcx
  410168:	mov    rdi,rdx
  41016b:	mov    rbx,r8
  41016e:	mov    r12d,r9d
  410171:	test   rax,rax
  410174:	je     0x410444
  41017a:	movzx  edx,BYTE PTR [rbx]
  41017d:	cmp    BYTE PTR [rax+rdx*1],0x0
  410181:	je     0x410192
  410183:	add    rbx,0x1
  410187:	movzx  r10d,BYTE PTR [rbx]
  41018b:	cmp    BYTE PTR [rax+r10*1],0x0
  410190:	jne    0x410183
  410192:	lea    rdx,[rip+0x19a6c]        # 0x429c05
  410199:	mov    rcx,rbx
  41019c:	call   0x422790
  4101a1:	test   rax,rax
  4101a4:	mov    r13,rax
  4101a7:	je     0x4103f7
  4101ad:	cmp    DWORD PTR [rsp+0x80],0x2
  4101b5:	je     0x4103c0
  4101bb:	movzx  eax,BYTE PTR [rax]
  4101be:	xor    r14d,r14d
  4101c1:	cmp    al,0x7f
  4101c3:	jbe    0x4102a0
  4101c9:	mov    rdx,QWORD PTR [rip+0x235d0]        # 0x4337a0
  4101d0:	lea    rsi,[r13+0x1]
  4101d4:	mov    BYTE PTR [r13+0x0],0x0
  4101d9:	test   rdx,rdx
  4101dc:	je     0x410477
  4101e2:	movzx  eax,BYTE PTR [r13+0x1]
  4101e7:	cmp    BYTE PTR [rdx+rax*1],0x0
  4101eb:	mov    r10,rax
  4101ee:	je     0x410202
  4101f0:	add    rsi,0x1
  4101f4:	movzx  r11d,BYTE PTR [rsi]
  4101f8:	cmp    BYTE PTR [rdx+r11*1],0x0
  4101fd:	mov    r10,r11
  410200:	jne    0x4101f0
  410202:	test   r14d,r14d
  410205:	mov    r13,rsi
  410208:	je     0x41021e
  41020a:	cmp    r10b,0x3d
  41020e:	je     0x410330
  410214:	cmp    r10b,0x3a
  410218:	je     0x410330
  41021e:	movzx  eax,BYTE PTR [rbx+0x1]
  410222:	cmp    al,0x7f
  410224:	ja     0x410275
  410226:	lea    rdx,[rip+0x1c4d3]        # 0x42c700
  41022d:	test   DWORD PTR [rdx+rax*4],0x3b0040
  410234:	je     0x410275
  410236:	mov    r8,rdi
  410239:	mov    rdx,rbx
  41023c:	mov    rcx,rbp
  41023f:	call   0x40f9a0
  410244:	test   eax,eax
  410246:	jne    0x41028b
  410248:	test   r12d,r12d
  41024b:	je     0x4102c0
  41024d:	mov    eax,DWORD PTR [rdi+0x10]
  410250:	test   ah,0x1
  410253:	jne    0x41028b
  410255:	movzx  edx,BYTE PTR [r13+0x0]
  41025a:	cmp    dl,0x22
  41025d:	je     0x410370
  410263:	cmp    dl,0x27
  410266:	je     0x410370
  41026c:	mov    QWORD PTR [rdi+0x8],r13
  410270:	jmp    0x410381
  410275:	movsx  edx,BYTE PTR [rbx]
  410278:	lea    r9,[rdi+0x14]
  41027c:	mov    r8,rdi
  41027f:	mov    rcx,rbp
  410282:	call   0x408750
  410287:	test   eax,eax
  410289:	je     0x410248
  41028b:	add    rsp,0x20
  41028f:	pop    rbx
  410290:	pop    rsi
  410291:	pop    rdi
  410292:	pop    rbp
  410293:	pop    r12
  410295:	pop    r13
  410297:	pop    r14
  410299:	ret    
  41029a:	nop    WORD PTR [rax+rax*1+0x0]
  4102a0:	lea    rdx,[rip+0x1c459]        # 0x42c700
  4102a7:	xor    r14d,r14d
  4102aa:	test   DWORD PTR [rdx+rax*4],0xc01
  4102b1:	setne  r14b
  4102b5:	jmp    0x4101c9
  4102ba:	nop    WORD PTR [rax+rax*1+0x0]
  4102c0:	movzx  eax,BYTE PTR [r13+0x0]
  4102c5:	cmp    al,0x22
  4102c7:	je     0x41041e
  4102cd:	cmp    al,0x27
  4102cf:	je     0x41041e
  4102d5:	mov    QWORD PTR [rdi+0x8],r13
  4102d9:	mov    rax,QWORD PTR [rdi]
  4102dc:	mov    eax,DWORD PTR [rax+0x10]
  4102df:	test   ah,0xf0
  4102e2:	jne    0x4103d0
  4102e8:	cmp    BYTE PTR [r13+0x0],0x0
  4102ed:	jne    0x41028b
  4102ef:	mov    QWORD PTR [rdi+0x8],0x0
  4102f7:	mov    ebx,DWORD PTR [rip+0x15413]        # 0x425710
  4102fd:	mov    eax,DWORD PTR [rsp+0x80]
  410304:	mov    rdx,rdi
  410307:	mov    rcx,rbp
  41030a:	mov    DWORD PTR [rip+0x15400],eax        # 0x425710
  410310:	call   0x4085a0
  410315:	mov    DWORD PTR [rip+0x153f5],ebx        # 0x425710
  41031b:	add    rsp,0x20
  41031f:	pop    rbx
  410320:	pop    rsi
  410321:	pop    rdi
  410322:	pop    rbp
  410323:	pop    r12
  410325:	pop    r13
  410327:	pop    r14
  410329:	ret    
  41032a:	nop    WORD PTR [rax+rax*1+0x0]
  410330:	mov    rax,QWORD PTR [rip+0x23469]        # 0x4337a0
  410337:	lea    r13,[rsi+0x1]
  41033b:	test   rax,rax
  41033e:	je     0x410489
  410344:	movzx  edx,BYTE PTR [rsi+0x1]
  410348:	cmp    BYTE PTR [rax+rdx*1],0x0
  41034c:	je     0x41021e
  410352:	add    r13,0x1
  410356:	movzx  edx,BYTE PTR [r13+0x0]
  41035b:	cmp    BYTE PTR [rax+rdx*1],0x0
  41035f:	jne    0x410352
  410361:	jmp    0x41021e
  410366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410370:	xor    edx,edx
  410372:	mov    rcx,r13
  410375:	call   0x40c1a0
  41037a:	mov    eax,DWORD PTR [rdi+0x10]
  41037d:	mov    QWORD PTR [rdi+0x8],r13
  410381:	mov    edx,eax
  410383:	and    edx,0x60000
  410389:	cmp    edx,0x20000
  41038f:	je     0x410453
  410395:	jbe    0x410408
  410397:	cmp    edx,0x40000
  41039d:	je     0x410465
  4103a3:	cmp    edx,0x60000
  4103a9:	jne    0x4102d9
  4103af:	test   r12d,r12d
  4103b2:	jg     0x41028b
  4103b8:	jmp    0x4102d9
  4103bd:	nop    DWORD PTR [rax]
  4103c0:	mov    BYTE PTR [rax],0x0
  4103c3:	add    r13,0x1
  4103c7:	jmp    0x41021e
  4103cc:	nop    DWORD PTR [rax+0x0]
  4103d0:	test   eax,0x10000
  4103d5:	je     0x41042d
  4103d7:	cmp    BYTE PTR [r13+0x0],0x0
  4103dc:	je     0x4102ef
  4103e2:	mov    rcx,r13
  4103e5:	call   0x408d00
  4103ea:	or     DWORD PTR [rdi+0x10],0x40
  4103ee:	mov    QWORD PTR [rdi+0x8],rax
  4103f2:	jmp    0x4102f7
  4103f7:	mov    rcx,rbx
  4103fa:	call   0x4227a8
  4103ff:	lea    r13,[rbx+rax*1]
  410403:	jmp    0x41021e
  410408:	test   edx,edx
  41040a:	jne    0x4102d9
  410410:	test   r12d,r12d
  410413:	jns    0x4102d9
  410419:	jmp    0x41028b
  41041e:	xor    edx,edx
  410420:	mov    rcx,r13
  410423:	call   0x40c1a0
  410428:	jmp    0x4102d5
  41042d:	cmp    BYTE PTR [r13+0x0],0x0
  410432:	jne    0x4103e2
  410434:	lea    rax,[rip+0x1b0d4]        # 0x42b50f
  41043b:	mov    QWORD PTR [rdi+0x8],rax
  41043f:	jmp    0x4102f7
  410444:	mov    ecx,0x2d
  410449:	call   0x408aa0
  41044e:	jmp    0x41017a
  410453:	test   r12d,r12d
  410456:	js     0x41046a
  410458:	test   al,0x20
  41045a:	je     0x4102d9
  410460:	jmp    0x41028b
  410465:	test   r12d,r12d
  410468:	js     0x410458
  41046a:	test   al,0x20
  41046c:	jne    0x4102d9
  410472:	jmp    0x41028b
  410477:	mov    ecx,0xc
  41047c:	call   0x408aa0
  410481:	mov    rdx,rax
  410484:	jmp    0x4101e2
  410489:	mov    ecx,0xc
  41048e:	call   0x408aa0
  410493:	jmp    0x410344
  410498:	nop    DWORD PTR [rax+rax*1+0x0]
  4104a0:	push   rdi
  4104a1:	push   rsi
  4104a2:	push   rbx
  4104a3:	sub    rsp,0x50
  4104a7:	mov    esi,DWORD PTR [rcx+0x10]
  4104aa:	mov    rbx,rcx
  4104ad:	mov    QWORD PTR [rsp+0x30],0x0
  4104b6:	mov    QWORD PTR [rsp+0x38],0x0
  4104bf:	mov    DWORD PTR [rsp+0x40],0x1
  4104c7:	mov    DWORD PTR [rsp+0x44],0x0
  4104cf:	mov    eax,esi
  4104d1:	and    eax,0xfffffffb
  4104d4:	mov    DWORD PTR [rcx+0x10],eax
  4104d7:	mov    rcx,rdx
  4104da:	call   0x408d00
  4104df:	lea    rdx,[rsp+0x30]
  4104e4:	mov    rdi,rax
  4104e7:	xor    r9d,r9d
  4104ea:	mov    r8,rax
  4104ed:	mov    rcx,rbx
  4104f0:	mov    DWORD PTR [rsp+0x20],0x0
  4104f8:	call   0x410150
  4104fd:	mov    rcx,rdi
  410500:	call   0x422858
  410505:	mov    DWORD PTR [rbx+0x10],esi
  410508:	add    rsp,0x50
  41050c:	pop    rbx
  41050d:	pop    rsi
  41050e:	pop    rdi
  41050f:	ret    
  410510:	push   rbp
  410511:	push   rdi
  410512:	push   rsi
  410513:	push   rbx
  410514:	sub    rsp,0x48
  410518:	mov    rsi,QWORD PTR [rdx+0x18]
  41051c:	cmp    rcx,0xf
  410520:	mov    QWORD PTR [rsp+0x20],0x0
  410529:	mov    QWORD PTR [rsp+0x28],0x0
  410532:	mov    DWORD PTR [rsp+0x30],0x2
  41053a:	mov    DWORD PTR [rsp+0x34],0x0
  410542:	jbe    0x41054b
  410544:	mov    eax,DWORD PTR [rdx+0x10]
  410547:	test   al,0x8
  410549:	je     0x410554
  41054b:	add    rsp,0x48
  41054f:	pop    rbx
  410550:	pop    rsi
  410551:	pop    rdi
  410552:	pop    rbp
  410553:	ret    
  410554:	test   ah,0x80
  410557:	je     0x4105f0
  41055d:	test   BYTE PTR [rcx+0x12],0x4
  410561:	mov    rbx,rcx
  410564:	je     0x410622
  41056a:	lea    rdi,[rsp+0x20]
  41056f:	mov    rdx,rsi
  410572:	mov    r8,rdi
  410575:	call   0x40f9a0
  41057a:	test   eax,eax
  41057c:	jne    0x410622
  410582:	mov    rdx,rdi
  410585:	mov    rcx,rbx
  410588:	call   0x408b40
  41058d:	test   eax,eax
  41058f:	jne    0x410622
  410595:	test   BYTE PTR [rbx+0x11],0x80
  410599:	mov    eax,DWORD PTR [rsp+0x30]
  41059d:	jne    0x410600
  41059f:	test   eax,0x20020
  4105a4:	je     0x4105d3
  4105a6:	mov    edx,eax
  4105a8:	and    edx,0x40020
  4105ae:	cmp    edx,0x20
  4105b1:	je     0x4105d3
  4105b3:	mov    edx,eax
  4105b5:	and    edx,0x400020
  4105bb:	cmp    edx,0x400000
  4105c1:	je     0x4105d3
  4105c3:	and    eax,0x800020
  4105c8:	cmp    eax,0x800020
  4105cd:	jne    0x41054b
  4105d3:	mov    rdx,rdi
  4105d6:	mov    rcx,rbx
  4105d9:	call   0x4085a0
  4105de:	nop
  4105df:	add    rsp,0x48
  4105e3:	pop    rbx
  4105e4:	pop    rsi
  4105e5:	pop    rdi
  4105e6:	pop    rbp
  4105e7:	ret    
  4105e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4105f0:	mov    DWORD PTR [rsp+0x30],0x4
  4105f8:	jmp    0x41055d
  4105fd:	nop    DWORD PTR [rax]
  410600:	mov    edx,eax
  410602:	and    edx,0x20020
  410608:	cmp    edx,0x20000
  41060e:	je     0x4105d3
  410610:	and    eax,0x40020
  410615:	cmp    eax,0x40020
  41061a:	jne    0x41054b
  410620:	jmp    0x4105d3
  410622:	mov    rbp,QWORD PTR [rbx+0x28]
  410626:	mov    rdi,QWORD PTR [rip+0x15213]        # 0x425840
  41062d:	call   QWORD PTR [rip+0x26a91]        # 0x4370c4
  410633:	lea    rcx,[rax+0x60]
  410637:	mov    r9,rsi
  41063a:	mov    r8,rbp
  41063d:	mov    rdx,rdi
  410640:	call   0x407150
  410645:	mov    rcx,rbx
  410648:	mov    edx,0x1
  41064d:	call   QWORD PTR [rbx+0x98]
  410653:	mov    ecx,0x1
  410658:	call   0x422948
  41065d:	nop
  41065e:	xchg   ax,ax
  410660:	push   r12
  410662:	push   rbp
  410663:	push   rdi
  410664:	push   rsi
  410665:	push   rbx
  410666:	sub    rsp,0x40
  41066a:	mov    rsi,QWORD PTR [rdx+0x18]
  41066e:	cmp    rcx,0xf
  410672:	mov    QWORD PTR [rsp+0x20],0x0
  41067b:	mov    QWORD PTR [rsp+0x28],0x0
  410684:	mov    DWORD PTR [rsp+0x30],0x4
  41068c:	mov    DWORD PTR [rsp+0x34],0x0
  410694:	jbe    0x4107af
  41069a:	cmp    BYTE PTR [rip+0x22f6f],0x0        # 0x433610
  4106a1:	jne    0x4107af
  4106a7:	cmp    DWORD PTR [rcx],0x1ffff
  4106ad:	mov    rbx,rcx
  4106b0:	jle    0x41084b
  4106b6:	cmp    QWORD PTR [rcx+0xd0],0x0
  4106be:	je     0x41084b
  4106c4:	test   rsi,rsi
  4106c7:	je     0x4106ce
  4106c9:	cmp    BYTE PTR [rsi],0x0
  4106cc:	jne    0x41071c
  4106ce:	mov    r12,QWORD PTR [rdx+0x50]
  4106d2:	mov    rbp,QWORD PTR [rbx+0x28]
  4106d6:	mov    rdi,QWORD PTR [rip+0x151bb]        # 0x425898
  4106dd:	call   QWORD PTR [rip+0x269e1]        # 0x4370c4
  4106e3:	lea    rcx,[rax+0x60]
  4106e7:	mov    r8,rbp
  4106ea:	mov    r9,r12
  4106ed:	mov    rdx,rdi
  4106f0:	call   0x407150
  4106f5:	mov    edx,0x1
  4106fa:	mov    rcx,rbx
  4106fd:	call   QWORD PTR [rbx+0x98]
  410703:	lea    rdx,[rip+0x184ae]        # 0x428bb8
  41070a:	lea    rcx,[rip+0x184af]        # 0x428bc0
  410711:	mov    r8d,0x60
  410717:	call   0x41d9f0
  41071c:	cmp    BYTE PTR [rsi+0x1],0x0
  410720:	mov    BYTE PTR [rip+0x22ee9],0x1        # 0x433610
  410727:	jne    0x4107c0
  41072d:	movzx  edx,BYTE PTR [rsi]
  410730:	cmp    dl,0x2a
  410733:	je     0x410823
  410739:	lea    r8,[rsp+0x20]
  41073e:	mov    rcx,rbx
  410741:	lea    r9,[r8+0x14]
  410745:	call   0x408750
  41074a:	test   eax,eax
  41074c:	je     0x41079b
  41074e:	movsx  ebp,BYTE PTR [rsi]
  410751:	mov    rdi,QWORD PTR [rbx+0x20]
  410755:	mov    rsi,QWORD PTR [rip+0x150d4]        # 0x425830
  41075c:	call   QWORD PTR [rip+0x26962]        # 0x4370c4
  410762:	lea    rcx,[rax+0x60]
  410766:	mov    r8,rdi
  410769:	mov    r9d,ebp
  41076c:	mov    rdx,rsi
  41076f:	call   0x407150
  410774:	mov    edx,0x1
  410779:	mov    rcx,rbx
  41077c:	call   QWORD PTR [rbx+0x98]
  410782:	lea    rdx,[rip+0x1842f]        # 0x428bb8
  410789:	lea    rcx,[rip+0x18430]        # 0x428bc0
  410790:	mov    r8d,0x71
  410796:	call   0x41d9f0
  41079b:	mov    rdx,QWORD PTR [rsp+0x20]
  4107a0:	mov    rcx,rbx
  4107a3:	call   0x407030
  4107a8:	mov    BYTE PTR [rip+0x22e61],0x0        # 0x433610
  4107af:	add    rsp,0x40
  4107b3:	pop    rbx
  4107b4:	pop    rsi
  4107b5:	pop    rdi
  4107b6:	pop    rbp
  4107b7:	pop    r12
  4107b9:	ret    
  4107ba:	nop    WORD PTR [rax+rax*1+0x0]
  4107c0:	lea    r8,[rsp+0x20]
  4107c5:	mov    rdx,rsi
  4107c8:	mov    rcx,rbx
  4107cb:	call   0x40f9a0
  4107d0:	test   eax,eax
  4107d2:	je     0x41079b
  4107d4:	mov    rbp,QWORD PTR [rbx+0x20]
  4107d8:	mov    rdi,QWORD PTR [rip+0x15059]        # 0x425838
  4107df:	call   QWORD PTR [rip+0x268df]        # 0x4370c4
  4107e5:	lea    rcx,[rax+0x60]
  4107e9:	mov    r9,rsi
  4107ec:	mov    r8,rbp
  4107ef:	mov    rdx,rdi
  4107f2:	call   0x407150
  4107f7:	mov    rcx,rbx
  4107fa:	mov    edx,0x1
  4107ff:	call   QWORD PTR [rbx+0x98]
  410805:	lea    rdx,[rip+0x183ac]        # 0x428bb8
  41080c:	lea    rcx,[rip+0x183ad]        # 0x428bc0
  410813:	mov    r8d,0x79
  410819:	call   0x41d9f0
  41081e:	jmp    0x41079b
  410823:	mov    rdi,QWORD PTR [rbx+0x78]
  410827:	mov    esi,DWORD PTR [rbx+0xb4]
  41082d:	jmp    0x410834
  41082f:	nop
  410830:	add    rdi,0x68
  410834:	mov    rdx,rdi
  410837:	mov    rcx,rbx
  41083a:	sub    esi,0x1
  41083d:	call   0x407030
  410842:	test   esi,esi
  410844:	jg     0x410830
  410846:	jmp    0x4107a8
  41084b:	mov    rcx,QWORD PTR [rip+0x14f56]        # 0x4257a8
  410852:	call   0x4075c0
  410857:	nop
  410858:	nop    DWORD PTR [rax+rax*1+0x0]
  410860:	push   r13
  410862:	push   r12
  410864:	push   rbp
  410865:	push   rdi
  410866:	push   rsi
  410867:	push   rbx
  410868:	sub    rsp,0x28
  41086c:	mov    rbp,rcx
  41086f:	mov    ecx,0xa
  410874:	mov    rsi,rdx
  410877:	call   0x408f90
  41087c:	mov    rcx,QWORD PTR [rbp+0x28]
  410880:	mov    rdi,rax
  410883:	call   0x4227a8
  410888:	mov    r13,rax
  41088b:	mov    eax,0x3f3c
  410890:	mov    WORD PTR [rdi],ax
  410893:	movabs rax,0x6d6172676f7270
  41089d:	mov    r12d,r13d
  4108a0:	mov    QWORD PTR [rdi+0x2],rax
  4108a4:	mov    r10,QWORD PTR [rip+0x22ef5]        # 0x4337a0
  4108ab:	lea    rbx,[rsi+0x1]
  4108af:	test   r10,r10
  4108b2:	je     0x410928
  4108b4:	movzx  eax,BYTE PTR [rsi+0x1]
  4108b8:	cmp    BYTE PTR [r10+rax*1],0x0
  4108bd:	je     0x4108cf
  4108bf:	nop
  4108c0:	add    rbx,0x1
  4108c4:	movzx  r9d,BYTE PTR [rbx]
  4108c8:	cmp    BYTE PTR [r10+r9*1],0x0
  4108cd:	jne    0x4108c0
  4108cf:	mov    rdx,QWORD PTR [rbp+0x28]
  4108d3:	mov    r8d,r12d
  4108d6:	mov    rcx,rbx
  4108d9:	call   0x40f950
  4108de:	test   eax,eax
  4108e0:	jne    0x4108fd
  4108e2:	lea    rsi,[rbx+r13*1]
  4108e6:	movzx  eax,BYTE PTR [rsi]
  4108e9:	cmp    al,0x7f
  4108eb:	ja     0x4108fd
  4108ed:	lea    rdx,[rip+0x1be0c]        # 0x42c700
  4108f4:	test   DWORD PTR [rdx+rax*4],0x1000c01
  4108fb:	jne    0x41093a
  4108fd:	mov    rdx,rdi
  410900:	mov    rcx,rbx
  410903:	call   0x422780
  410908:	test   rax,rax
  41090b:	mov    rsi,rax
  41090e:	jne    0x4108a4
  410910:	mov    rcx,rdi
  410913:	call   0x422858
  410918:	mov    rax,rsi
  41091b:	add    rsp,0x28
  41091f:	pop    rbx
  410920:	pop    rsi
  410921:	pop    rdi
  410922:	pop    rbp
  410923:	pop    r12
  410925:	pop    r13
  410927:	ret    
  410928:	mov    ecx,0xc
  41092d:	call   0x408aa0
  410932:	mov    r10,rax
  410935:	jmp    0x4108b4
  41093a:	mov    rcx,rdi
  41093d:	call   0x422858
  410942:	jmp    0x41094c
  410944:	add    rsi,0x1
  410948:	cmp    al,0x3e
  41094a:	je     0x410918
  41094c:	movzx  eax,BYTE PTR [rsi]
  41094f:	test   al,al
  410951:	jne    0x410944
  410953:	xor    esi,esi
  410955:	mov    rax,rsi
  410958:	add    rsp,0x28
  41095c:	pop    rbx
  41095d:	pop    rsi
  41095e:	pop    rdi
  41095f:	pop    rbp
  410960:	pop    r12
  410962:	pop    r13
  410964:	ret    
  410965:	nop
  410966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410970:	push   r14
  410972:	push   r13
  410974:	push   r12
  410976:	push   rbp
  410977:	push   rdi
  410978:	push   rsi
  410979:	push   rbx
  41097a:	sub    rsp,0x20
  41097e:	test   rdx,rdx
  410981:	mov    rbp,rcx
  410984:	mov    rbx,rdx
  410987:	je     0x410a00
  410989:	mov    rax,QWORD PTR [rip+0x22e10]        # 0x4337a0
  410990:	test   rax,rax
  410993:	je     0x410ac2
  410999:	movzx  ecx,BYTE PTR [rbx]
  41099c:	cmp    BYTE PTR [rax+rcx*1],0x0
  4109a0:	mov    rdx,rcx
  4109a3:	je     0x4109b7
  4109a5:	add    rbx,0x1
  4109a9:	movzx  r8d,BYTE PTR [rbx]
  4109ad:	cmp    BYTE PTR [rax+r8*1],0x0
  4109b2:	mov    rdx,r8
  4109b5:	jne    0x4109a5
  4109b7:	test   dl,dl
  4109b9:	je     0x4109f1
  4109bb:	xor    esi,esi
  4109bd:	mov    r14d,0x1
  4109c3:	lea    rdi,[rip+0x18376]        # 0x428d40
  4109ca:	xor    r12d,r12d
  4109cd:	mov    r13,QWORD PTR [rdi]
  4109d0:	mov    rdx,QWORD PTR [rdi+0x10]
  4109d4:	mov    rcx,rbx
  4109d7:	mov    r8d,r13d
  4109da:	call   0x40f950
  4109df:	test   eax,eax
  4109e1:	je     0x410a20
  4109e3:	add    r12d,0x1
  4109e7:	add    rdi,0x18
  4109eb:	cmp    r12d,0x5
  4109ef:	jne    0x4109cd
  4109f1:	add    rsp,0x20
  4109f5:	pop    rbx
  4109f6:	pop    rsi
  4109f7:	pop    rdi
  4109f8:	pop    rbp
  4109f9:	pop    r12
  4109fb:	pop    r13
  4109fd:	pop    r14
  4109ff:	ret    
  410a00:	lea    rcx,[rip+0x181c0]        # 0x428bc7
  410a07:	call   0x422838
  410a0c:	test   rax,rax
  410a0f:	mov    rbx,rax
  410a12:	jne    0x410989
  410a18:	jmp    0x4109f1
  410a1a:	nop    WORD PTR [rax+rax*1+0x0]
  410a20:	add    rbx,r13
  410a23:	movzx  r8d,BYTE PTR [rbx]
  410a27:	cmp    r8b,0x7f
  410a2b:	ja     0x4109f1
  410a2d:	lea    rdx,[rip+0x1bccc]        # 0x42c700
  410a34:	movzx  eax,r8b
  410a38:	test   DWORD PTR [rdx+rax*4],0xc13
  410a3f:	je     0x4109f1
  410a41:	mov    eax,r14d
  410a44:	mov    ecx,r12d
  410a47:	shl    eax,cl
  410a49:	or     esi,eax
  410a4b:	mov    rax,QWORD PTR [rip+0x22d4e]        # 0x4337a0
  410a52:	test   rax,rax
  410a55:	je     0x410b22
  410a5b:	mov    edx,r8d
  410a5e:	cmp    BYTE PTR [rax+r8*1],0x0
  410a63:	je     0x410a75
  410a65:	add    rbx,0x1
  410a69:	movzx  ecx,BYTE PTR [rbx]
  410a6c:	cmp    BYTE PTR [rax+rcx*1],0x0
  410a70:	mov    rdx,rcx
  410a73:	jne    0x410a65
  410a75:	test   dl,dl
  410a77:	je     0x410ad1
  410a79:	cmp    dl,0x2c
  410a7c:	jne    0x4109c3
  410a82:	mov    rax,QWORD PTR [rip+0x22d17]        # 0x4337a0
  410a89:	lea    rdi,[rbx+0x1]
  410a8d:	test   rax,rax
  410a90:	je     0x410b38
  410a96:	movzx  edx,BYTE PTR [rbx+0x1]
  410a9a:	mov    rbx,rdi
  410a9d:	cmp    BYTE PTR [rax+rdx*1],0x0
  410aa1:	je     0x4109c3
  410aa7:	nop    WORD PTR [rax+rax*1+0x0]
  410ab0:	add    rbx,0x1
  410ab4:	movzx  edx,BYTE PTR [rbx]
  410ab7:	cmp    BYTE PTR [rax+rdx*1],0x0
  410abb:	jne    0x410ab0
  410abd:	jmp    0x4109c3
  410ac2:	mov    ecx,0xc
  410ac7:	call   0x408aa0
  410acc:	jmp    0x410999
  410ad1:	mov    eax,esi
  410ad3:	and    eax,0x3
  410ad6:	cmp    eax,0x3
  410ad9:	je     0x4109f1
  410adf:	mov    eax,esi
  410ae1:	and    eax,0xc
  410ae4:	cmp    eax,0xc
  410ae7:	je     0x4109f1
  410aed:	lea    rax,[rip+0x1824c]        # 0x428d40
  410af4:	jmp    0x410b0f
  410af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410b00:	and    DWORD PTR [rbp+0x0],edx
  410b03:	shr    esi,1
  410b05:	je     0x4109f1
  410b0b:	add    rax,0x18
  410b0f:	test   sil,0x1
  410b13:	je     0x410b03
  410b15:	mov    edx,DWORD PTR [rax+0x8]
  410b18:	test   dl,0x1
  410b1b:	jne    0x410b00
  410b1d:	or     DWORD PTR [rbp+0x0],edx
  410b20:	jmp    0x410b03
  410b22:	mov    ecx,0xc
  410b27:	call   0x408aa0
  410b2c:	movzx  edx,BYTE PTR [rbx]
  410b2f:	movzx  r8d,dl
  410b33:	jmp    0x410a5e
  410b38:	mov    ecx,0xc
  410b3d:	call   0x408aa0
  410b42:	jmp    0x410a96
  410b47:	nop    WORD PTR [rax+rax*1+0x0]
  410b50:	push   r12
  410b52:	push   rbp
  410b53:	push   rdi
  410b54:	push   rsi
  410b55:	push   rbx
  410b56:	sub    rsp,0x30
  410b5a:	mov    rax,QWORD PTR [rip+0x22c3f]        # 0x4337a0
  410b61:	mov    rbp,rcx
  410b64:	lea    rbx,[rdx+0x1]
  410b68:	test   rax,rax
  410b6b:	je     0x410bee
  410b71:	movzx  edx,BYTE PTR [rdx+0x1]
  410b75:	cmp    BYTE PTR [rax+rdx*1],0x0
  410b79:	je     0x410b8d
  410b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  410b80:	add    rbx,0x1
  410b84:	movzx  edx,BYTE PTR [rbx]
  410b87:	cmp    BYTE PTR [rax+rdx*1],0x0
  410b8b:	jne    0x410b80
  410b8d:	mov    edx,0x3e
  410b92:	mov    rcx,rbx
  410b95:	call   0x4227d0
  410b9a:	test   rax,rax
  410b9d:	mov    rsi,rax
  410ba0:	je     0x410be0
  410ba2:	mov    r12d,eax
  410ba5:	add    rsi,0x1
  410ba9:	sub    r12d,ebx
  410bac:	lea    rcx,[r12+0x1]
  410bb1:	call   0x408f90
  410bb6:	mov    r8,r12
  410bb9:	mov    rdx,rbx
  410bbc:	mov    rcx,rax
  410bbf:	mov    rdi,rax
  410bc2:	call   0x422810
  410bc7:	lea    rcx,[rbp+0x10]
  410bcb:	mov    rdx,rdi
  410bce:	mov    BYTE PTR [rdi+r12*1],0x0
  410bd3:	call   0x410970
  410bd8:	mov    rcx,rdi
  410bdb:	call   0x422858
  410be0:	mov    rax,rsi
  410be3:	add    rsp,0x30
  410be7:	pop    rbx
  410be8:	pop    rsi
  410be9:	pop    rdi
  410bea:	pop    rbp
  410beb:	pop    r12
  410bed:	ret    
  410bee:	mov    ecx,0xc
  410bf3:	mov    QWORD PTR [rsp+0x28],rdx
  410bf8:	call   0x408aa0
  410bfd:	mov    rdx,QWORD PTR [rsp+0x28]
  410c02:	jmp    0x410b71
  410c07:	nop    WORD PTR [rax+rax*1+0x0]
  410c10:	push   rbp
  410c11:	push   rdi
  410c12:	push   rsi
  410c13:	push   rbx
  410c14:	sub    rsp,0x28
  410c18:	test   BYTE PTR [rdx+0x12],0x1
  410c1c:	mov    rbx,rcx
  410c1f:	mov    rsi,r8
  410c22:	mov    ebp,r9d
  410c25:	je     0x410c60
  410c27:	mov    rax,QWORD PTR [rdx+0x18]
  410c2b:	test   rax,rax
  410c2e:	je     0x410c60
  410c30:	movzx  edi,BYTE PTR [rax]
  410c33:	test   dil,dil
  410c36:	je     0x410c60
  410c38:	lea    eax,[rdi-0x43]
  410c3b:	cmp    al,0x33
  410c3d:	ja     0x410d80
  410c43:	lea    rdx,[rip+0x17f8e]        # 0x428bd8
  410c4a:	movzx  eax,al
  410c4d:	movsxd rax,DWORD PTR [rdx+rax*4]
  410c51:	add    rdx,rax
  410c54:	jmp    rdx
  410c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c60:	lea    rcx,[rbx+0x10]
  410c64:	xor    edx,edx
  410c66:	call   0x410970
  410c6b:	test   BYTE PTR [rbx+0x11],0x10
  410c6f:	jne    0x410cb0
  410c71:	mov    rdx,QWORD PTR [rbx+0x50]
  410c75:	mov    r9,QWORD PTR [rbx+0x60]
  410c79:	mov    rcx,rsi
  410c7c:	mov    r8,QWORD PTR [rbx+0x40]
  410c80:	call   0x407320
  410c85:	mov    rcx,rsi
  410c88:	call   0x422888
  410c8d:	mov    rcx,rsi
  410c90:	call   0x422890
  410c95:	test   eax,eax
  410c97:	jne    0x410dd4
  410c9d:	test   bpl,bpl
  410ca0:	jne    0x410e00
  410ca6:	add    rsp,0x28
  410caa:	pop    rbx
  410cab:	pop    rsi
  410cac:	pop    rdi
  410cad:	pop    rbp
  410cae:	ret    
  410caf:	nop
  410cb0:	mov    rcx,QWORD PTR [rbx+0x40]
  410cb4:	test   rcx,rcx
  410cb7:	je     0x410db0
  410cbd:	mov    rdx,rsi
  410cc0:	call   0x422868
  410cc5:	cmp    DWORD PTR [rbx],0x21fff
  410ccb:	jle    0x410d42
  410ccd:	cmp    QWORD PTR [rbx+0xe0],0x0
  410cd5:	je     0x410d42
  410cd7:	mov    rdx,rsi
  410cda:	mov    ecx,0xa
  410cdf:	call   0x422870
  410ce4:	mov    rcx,QWORD PTR [rbx+0xe0]
  410ceb:	mov    rdx,rsi
  410cee:	call   0x422868
  410cf3:	jmp    0x410c85
  410cf5:	mov    rcx,QWORD PTR [rcx+0x40]
  410cf9:	test   rcx,rcx
  410cfc:	je     0x410d06
  410cfe:	mov    rdx,r8
  410d01:	call   0x422868
  410d06:	mov    rcx,QWORD PTR [rbx+0x48]
  410d0a:	test   rcx,rcx
  410d0d:	je     0x410d17
  410d0f:	mov    rdx,rsi
  410d12:	call   0x422868
  410d17:	mov    rdx,rsi
  410d1a:	mov    ecx,0xa
  410d1f:	call   0x422870
  410d24:	mov    rdx,QWORD PTR [rip+0x14a6d]        # 0x425798
  410d2b:	lea    r8,[rip+0x17f9e]        # 0x428cd0
  410d32:	mov    rcx,rsi
  410d35:	call   0x407150
  410d3a:	cmp    DWORD PTR [rbx],0x21fff
  410d40:	jg     0x410ccd
  410d42:	cmp    QWORD PTR [rbx+0x80],0x0
  410d4a:	je     0x410c85
  410d50:	mov    rdx,rsi
  410d53:	mov    ecx,0xa
  410d58:	call   0x422870
  410d5d:	mov    r8,QWORD PTR [rbx+0x80]
  410d64:	mov    rdx,QWORD PTR [rip+0x14c85]        # 0x4259f0
  410d6b:	mov    rcx,rsi
  410d6e:	call   0x407150
  410d73:	jmp    0x410c85
  410d78:	nop    DWORD PTR [rax+rax*1+0x0]
  410d80:	mov    rbx,QWORD PTR [rip+0x14a89]        # 0x425810
  410d87:	call   QWORD PTR [rip+0x26337]        # 0x4370c4
  410d8d:	lea    rcx,[rax+0x60]
  410d91:	movsx  r8d,dil
  410d95:	mov    rdx,rbx
  410d98:	call   0x407150
  410d9d:	mov    ecx,0x1
  410da2:	call   0x407590
  410da7:	nop    WORD PTR [rax+rax*1+0x0]
  410db0:	mov    rcx,QWORD PTR [rbx+0x50]
  410db4:	test   rcx,rcx
  410db7:	jne    0x410cbd
  410dbd:	mov    rdx,QWORD PTR [rbx+0x60]
  410dc1:	xor    r9d,r9d
  410dc4:	xor    r8d,r8d
  410dc7:	mov    rcx,rsi
  410dca:	call   0x407320
  410dcf:	jmp    0x410cc5
  410dd4:	call   QWORD PTR [rip+0x262ea]        # 0x4370c4
  410dda:	add    rax,0x30
  410dde:	mov    r8,QWORD PTR [rip+0x14b1b]        # 0x425900
  410de5:	mov    rcx,QWORD PTR [rbx+0x28]
  410de9:	cmp    rsi,rax
  410dec:	cmove  r8,QWORD PTR [rip+0x14b04]        # 0x4258f8
  410df4:	mov    rdx,QWORD PTR [rip+0x14b0d]        # 0x425908
  410dfb:	call   0x407b10
  410e00:	xor    ecx,ecx
  410e02:	call   0x407590
  410e07:	nop
  410e08:	nop    DWORD PTR [rax+rax*1+0x0]
  410e10:	push   rsi
  410e11:	push   rbx
  410e12:	sub    rsp,0x28
  410e16:	cmp    BYTE PTR [rip+0x22817],0x0        # 0x433634
  410e1d:	mov    rbx,rcx
  410e20:	mov    rsi,rdx
  410e23:	je     0x410e40
  410e25:	call   QWORD PTR [rip+0x26299]        # 0x4370c4
  410e2b:	cmp    rbx,0xf
  410e2f:	lea    r8,[rax+0x60]
  410e33:	ja     0x410e50
  410e35:	add    rsp,0x28
  410e39:	pop    rbx
  410e3a:	pop    rsi
  410e3b:	ret    
  410e3c:	nop    DWORD PTR [rax+0x0]
  410e40:	call   QWORD PTR [rip+0x2627e]        # 0x4370c4
  410e46:	cmp    rbx,0xf
  410e4a:	lea    r8,[rax+0x30]
  410e4e:	jbe    0x410e35
  410e50:	mov    r9d,0x1
  410e56:	mov    rdx,rsi
  410e59:	mov    rcx,rbx
  410e5c:	add    rsp,0x28
  410e60:	pop    rbx
  410e61:	pop    rsi
  410e62:	jmp    0x410c10
  410e67:	nop    WORD PTR [rax+rax*1+0x0]
  410e70:	add    rcx,0x1
  410e74:	add    rdx,0x1
  410e78:	movzx  r9d,BYTE PTR [rcx-0x1]
  410e7d:	movzx  r8d,BYTE PTR [rdx-0x1]
  410e82:	cmp    r9b,r8b
  410e85:	je     0x410ea1
  410e87:	lea    r10,[rip+0x14472]        # 0x425300
  410e8e:	movzx  eax,r9b
  410e92:	movzx  eax,BYTE PTR [r10+rax*1]
  410e97:	movzx  r8d,BYTE PTR [r10+r8*1]
  410e9c:	sub    eax,r8d
  410e9f:	jne    0x410ea8
  410ea1:	test   r9b,r9b
  410ea4:	jne    0x410e70
  410ea6:	xor    eax,eax
  410ea8:	repz ret 
  410eaa:	nop    WORD PTR [rax+rax*1+0x0]
  410eb0:	test   r8d,r8d
  410eb3:	jne    0x410ed1
  410eb5:	lea    rdx,[rip+0x14543]        # 0x4253ff
  410ebc:	mov    eax,0xff
  410ec1:	mov    BYTE PTR [rdx],al
  410ec3:	sub    eax,0x1
  410ec6:	sub    rdx,0x1
  410eca:	cmp    eax,0xffffffff
  410ecd:	jne    0x410ec1
  410ecf:	repz ret 
  410ed1:	lea    r9,[rip+0x14428]        # 0x425300
  410ed8:	movzx  eax,dl
  410edb:	movzx  edx,cl
  410ede:	xchg   ax,ax
  410ee0:	mov    ecx,edx
  410ee2:	add    edx,0x1
  410ee5:	mov    BYTE PTR [r9+rcx*1],al
  410ee9:	add    eax,0x1
  410eec:	cmp    eax,0xff
  410ef1:	ja     0x410f04
  410ef3:	cmp    edx,0xff
  410ef9:	ja     0x410f04
  410efb:	sub    r8d,0x1
  410eff:	test   r8d,r8d
  410f02:	jg     0x410ee0
  410f04:	repz ret 
  410f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f10:	test   rcx,rcx
  410f13:	je     0x410f3f
  410f15:	movzx  eax,BYTE PTR [rcx]
  410f18:	test   al,al
  410f1a:	je     0x410f3f
  410f1c:	lea    rdx,[rip+0x143dd]        # 0x425300
  410f23:	mov    r8d,eax
  410f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f30:	add    rcx,0x1
  410f34:	mov    BYTE PTR [rdx+rax*1],r8b
  410f38:	movzx  eax,BYTE PTR [rcx]
  410f3b:	test   al,al
  410f3d:	jne    0x410f30
  410f3f:	repz ret 
  410f41:	nop    DWORD PTR [rax+rax*1+0x0]
  410f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f50:	lea    r8,[rip+0x143a9]        # 0x425300
  410f57:	nop    WORD PTR [rax+rax*1+0x0]
  410f60:	movzx  eax,BYTE PTR [rdx]
  410f63:	add    rcx,0x1
  410f67:	add    rdx,0x1
  410f6b:	movzx  eax,BYTE PTR [r8+rax*1]
  410f70:	mov    BYTE PTR [rcx-0x1],al
  410f73:	cmp    BYTE PTR [rdx-0x1],0x0
  410f77:	jne    0x410f60
  410f79:	ret    
  410f7a:	nop    WORD PTR [rax+rax*1+0x0]
  410f80:	push   rbp
  410f81:	push   rdi
  410f82:	push   rsi
  410f83:	push   rbx
  410f84:	sub    rsp,0x68
  410f88:	xor    eax,eax
  410f8a:	lea    rdi,[r9+0x8]
  410f8e:	mov    QWORD PTR [r9],0x0
  410f95:	mov    QWORD PTR [r9+0x28],0x0
  410f9d:	mov    rbx,r9
  410fa0:	mov    rbp,rcx
  410fa3:	and    rdi,0xfffffffffffffff8
  410fa7:	sub    r9,rdi
  410faa:	add    r9d,0x30
  410fae:	shr    r9d,0x3
  410fb2:	mov    ecx,r9d
  410fb5:	rep stos QWORD PTR es:[rdi],rax
  410fb8:	mov    DWORD PTR [rbx+0x24],edx
  410fbb:	and    edx,0x2
  410fbe:	mov    DWORD PTR [rbx+0x18],0xffffffff
  410fc5:	mov    DWORD PTR [rbx+0x28],r8d
  410fc9:	mov    ax,0x8000
  410fcd:	je     0x410ff5
  410fcf:	mov    eax,r8d
  410fd2:	and    eax,0x3
  410fd5:	cmp    eax,0x1
  410fd8:	sete   dl
  410fdb:	movzx  eax,dl
  410fde:	movzx  edx,dl
  410fe1:	add    edx,edx
  410fe3:	and    r8d,0x1
  410fe7:	lea    eax,[rax+rax*1+0x8000]
  410fee:	jne    0x410ff5
  410ff0:	mov    eax,edx
  410ff2:	or     ah,0x84
  410ff5:	mov    edx,eax
  410ff7:	mov    rcx,rbp
  410ffa:	call   0x422708
  410fff:	test   eax,eax
  411001:	mov    DWORD PTR [rbx+0x18],eax
  411004:	js     0x411160
  41100a:	lea    rdx,[rsp+0x20]
  41100f:	mov    ecx,eax
  411011:	call   QWORD PTR [rip+0x26125]        # 0x43713c
  411017:	test   eax,eax
  411019:	jne    0x411140
  41101f:	movzx  eax,WORD PTR [rsp+0x26]
  411024:	and    ax,0xf000
  411028:	cmp    ax,0x8000
  41102c:	je     0x411060
  41102e:	call   QWORD PTR [rip+0x260e0]        # 0x437114
  411034:	mov    DWORD PTR [rax],0x16
  41103a:	mov    ecx,DWORD PTR [rbx+0x18]
  41103d:	mov    DWORD PTR [rbx+0x20],0x16
  411044:	call   0x4226f8
  411049:	mov    edx,DWORD PTR [rbx+0x20]
  41104c:	test   edx,edx
  41104e:	mov    rax,0xffffffffffffffff
  411055:	je     0x411080
  411057:	add    rsp,0x68
  41105b:	pop    rbx
  41105c:	pop    rsi
  41105d:	pop    rdi
  41105e:	pop    rbp
  41105f:	ret    
  411060:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  411064:	mov    rax,QWORD PTR [rsp+0x38]
  411069:	mov    QWORD PTR [rbx+0x8],rax
  41106d:	jne    0x411049
  41106f:	call   QWORD PTR [rip+0x2609f]        # 0x437114
  411075:	mov    edx,DWORD PTR [rax]
  411077:	mov    DWORD PTR [rbx+0x20],edx
  41107a:	jmp    0x41104c
  41107c:	nop    DWORD PTR [rax+0x0]
  411080:	mov    rax,QWORD PTR [rbx+0x8]
  411084:	lea    rcx,[rax+0x1]
  411088:	call   0x408f90
  41108d:	test   rax,rax
  411090:	mov    rdi,rax
  411093:	mov    QWORD PTR [rbx],rax
  411096:	je     0x4111a0
  41109c:	mov    rsi,QWORD PTR [rbx+0x8]
  4110a0:	test   rsi,rsi
  4110a3:	jne    0x4110bf
  4110a5:	jmp    0x411180
  4110aa:	nop    WORD PTR [rax+rax*1+0x0]
  4110b0:	movsxd r10,eax
  4110b3:	add    rdi,r10
  4110b6:	sub    rsi,r10
  4110b9:	je     0x411180
  4110bf:	mov    ecx,DWORD PTR [rbx+0x18]
  4110c2:	mov    r8d,esi
  4110c5:	mov    rdx,rdi
  4110c8:	call   0x422710
  4110cd:	test   eax,eax
  4110cf:	jg     0x4110b0
  4110d1:	mov    rsi,QWORD PTR [rip+0x2603c]        # 0x437114
  4110d8:	call   rsi
  4110da:	mov    eax,DWORD PTR [rax]
  4110dc:	lea    rdx,[rip+0x17bc5]        # 0x428ca8
  4110e3:	lea    rcx,[rip+0x17bc3]        # 0x428cad
  4110ea:	mov    r8,rbp
  4110ed:	mov    DWORD PTR [rbx+0x20],eax
  4110f0:	call   0x407aa0
  4110f5:	mov    rcx,QWORD PTR [rbx]
  4110f8:	call   0x422858
  4110fd:	mov    eax,DWORD PTR [rbx+0x20]
  411100:	test   eax,eax
  411102:	je     0x41118a
  411108:	mov    ecx,DWORD PTR [rbx+0x18]
  41110b:	cmp    ecx,0xffffffff
  41110e:	je     0x41111c
  411110:	call   0x4226f8
  411115:	mov    DWORD PTR [rbx+0x18],0xffffffff
  41111c:	call   rsi
  41111e:	mov    edx,DWORD PTR [rbx+0x20]
  411121:	mov    DWORD PTR [rax],edx
  411123:	mov    rax,0xffffffffffffffff
  41112a:	mov    QWORD PTR [rbx],0xffffffffffffffff
  411131:	add    rsp,0x68
  411135:	pop    rbx
  411136:	pop    rsi
  411137:	pop    rdi
  411138:	pop    rbp
  411139:	ret    
  41113a:	nop    WORD PTR [rax+rax*1+0x0]
  411140:	call   QWORD PTR [rip+0x25fce]        # 0x437114
  411146:	mov    eax,DWORD PTR [rax]
  411148:	mov    ecx,DWORD PTR [rbx+0x18]
  41114b:	mov    DWORD PTR [rbx+0x20],eax
  41114e:	call   0x4226f8
  411153:	jmp    0x411049
  411158:	nop    DWORD PTR [rax+rax*1+0x0]
  411160:	call   QWORD PTR [rip+0x25fae]        # 0x437114
  411166:	mov    edx,DWORD PTR [rax]
  411168:	mov    DWORD PTR [rbx+0x18],0xffffffff
  41116f:	mov    DWORD PTR [rbx+0x20],edx
  411172:	jmp    0x41104c
  411177:	nop    WORD PTR [rax+rax*1+0x0]
  411180:	mov    BYTE PTR [rdi],0x0
  411183:	mov    DWORD PTR [rbx+0x20],0x0
  41118a:	mov    rax,QWORD PTR [rbx]
  41118d:	add    rsp,0x68
  411191:	pop    rbx
  411192:	pop    rsi
  411193:	pop    rdi
  411194:	pop    rbp
  411195:	ret    
  411196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111a0:	mov    DWORD PTR [rbx+0x20],0xc
  4111a7:	mov    rsi,QWORD PTR [rip+0x25f66]        # 0x437114
  4111ae:	jmp    0x411108
  4111b3:	nop    DWORD PTR [rax]
  4111b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111c0:	push   rsi
  4111c1:	push   rbx
  4111c2:	sub    rsp,0x28
  4111c6:	mov    rsi,QWORD PTR [rip+0x25f47]        # 0x437114
  4111cd:	mov    rbx,rcx
  4111d0:	call   rsi
  4111d2:	mov    DWORD PTR [rax],0x0
  4111d8:	test   BYTE PTR [rbx+0x24],0x2
  4111dc:	je     0x4111e9
  4111de:	mov    eax,DWORD PTR [rbx+0x28]
  4111e1:	and    eax,0x3
  4111e4:	cmp    eax,0x1
  4111e7:	je     0x411220
  4111e9:	mov    rcx,QWORD PTR [rbx]
  4111ec:	call   0x422858
  4111f1:	call   rsi
  4111f3:	mov    ecx,DWORD PTR [rbx+0x18]
  4111f6:	mov    eax,DWORD PTR [rax]
  4111f8:	cmp    ecx,0xffffffff
  4111fb:	mov    DWORD PTR [rbx+0x20],eax
  4111fe:	je     0x41120f
  411200:	call   0x4226f8
  411205:	mov    eax,DWORD PTR [rbx+0x20]
  411208:	mov    DWORD PTR [rbx+0x18],0xffffffff
  41120f:	add    rsp,0x28
  411213:	pop    rbx
  411214:	pop    rsi
  411215:	ret    
  411216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411220:	mov    ecx,DWORD PTR [rbx+0x18]
  411223:	xor    r8d,r8d
  411226:	xor    edx,edx
  411228:	call   0x41dcd0
  41122d:	test   rax,rax
  411230:	js     0x4111e9
  411232:	mov    ecx,DWORD PTR [rbx+0x18]
  411235:	mov    r8d,DWORD PTR [rbx+0x8]
  411239:	mov    rdx,QWORD PTR [rbx]
  41123c:	call   0x422728
  411241:	jmp    0x4111e9
  411243:	nop    DWORD PTR [rax]
  411246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411250:	push   r15
  411252:	push   r14
  411254:	push   r13
  411256:	push   r12
  411258:	push   rbp
  411259:	push   rdi
  41125a:	push   rsi
  41125b:	push   rbx
  41125c:	sub    rsp,0x158
  411263:	mov    r13,rcx
  411266:	mov    r14d,r8d
  411269:	mov    rcx,rdx
  41126c:	mov    eax,DWORD PTR [r13+0x10]
  411270:	mov    r8d,0x2
  411276:	mov    edx,0x3
  41127b:	mov    QWORD PTR [rsp+0xa0],0x0
  411287:	mov    QWORD PTR [rsp+0xa8],0x0
  411293:	mov    DWORD PTR [rsp+0xb0],0x2
  41129e:	mov    DWORD PTR [rsp+0xb4],0x0
  4112a9:	mov    DWORD PTR [rsp+0x34],eax
  4112ad:	lea    rax,[rsp+0xe0]
  4112b5:	mov    r9,rax
  4112b8:	mov    QWORD PTR [rsp+0x38],rax
  4112bd:	call   0x410f80
  4112c2:	cmp    rax,0xffffffffffffffff
  4112c6:	mov    rbx,rax
  4112c9:	je     0x411436
  4112cf:	mov    eax,DWORD PTR [r13+0x10]
  4112d3:	mov    esi,0x2
  4112d8:	mov    edx,eax
  4112da:	and    edx,0xfffffffb
  4112dd:	test   r14d,r14d
  4112e0:	mov    DWORD PTR [r13+0x10],edx
  4112e4:	je     0x4117c9
  4112ea:	test   eax,0x80000
  4112ef:	mov    eax,0x1
  4112f4:	cmove  esi,eax
  4112f7:	lea    rax,[rsp+0x110]
  4112ff:	mov    QWORD PTR [rsp+0x48],rax
  411304:	lea    rax,[rsp+0x111]
  41130c:	mov    QWORD PTR [rsp+0x50],rax
  411311:	lea    rax,[rsp+0xa0]
  411319:	mov    QWORD PTR [rsp+0x40],rax
  41131e:	lea    rax,[rsp+0x90]
  411326:	mov    QWORD PTR [rsp+0x58],rax
  41132b:	lea    rax,[rsp+0xc0]
  411333:	mov    QWORD PTR [rsp+0x60],rax
  411338:	lea    rax,[rsp+0x9c]
  411340:	mov    QWORD PTR [rsp+0x68],rax
  411345:	mov    rax,QWORD PTR [rip+0x22454]        # 0x4337a0
  41134c:	mov    DWORD PTR [rsp+0xb0],esi
  411353:	test   rax,rax
  411356:	jne    0x411364
  411358:	jmp    0x41180d
  41135d:	nop    DWORD PTR [rax]
  411360:	add    rbx,0x1
  411364:	movzx  ecx,BYTE PTR [rbx]
  411367:	cmp    BYTE PTR [rax+rcx*1],0x0
  41136b:	mov    rdx,rcx
  41136e:	jne    0x411360
  411370:	cmp    cl,0x7f
  411373:	ja     0x411450
  411379:	lea    rdi,[rip+0x1b380]        # 0x42c700
  411380:	movzx  eax,cl
  411383:	test   DWORD PTR [rdi+rax*4],0x180040
  41138a:	je     0x411450
  411390:	lea    rbp,[rbx+0x1]
  411394:	mov    edx,0xa
  411399:	mov    rcx,rbp
  41139c:	call   0x4227d0
  4113a1:	test   rax,rax
  4113a4:	mov    r12,rax
  4113a7:	je     0x41181c
  4113ad:	mov    rcx,QWORD PTR [rip+0x2246c]        # 0x433820
  4113b4:	test   rcx,rcx
  4113b7:	je     0x411a26
  4113bd:	movzx  eax,BYTE PTR [rbx+0x1]
  4113c1:	cmp    BYTE PTR [rcx+rax*1],0x0
  4113c5:	je     0x4113de
  4113c7:	nop    WORD PTR [rax+rax*1+0x0]
  4113d0:	add    rbp,0x1
  4113d4:	movzx  eax,BYTE PTR [rbp+0x0]
  4113d8:	cmp    BYTE PTR [rcx+rax*1],0x0
  4113dc:	jne    0x4113d0
  4113de:	mov    r8,QWORD PTR [rip+0x223bb]        # 0x4337a0
  4113e5:	test   r8,r8
  4113e8:	jne    0x4113f4
  4113ea:	jmp    0x411a35
  4113ef:	nop
  4113f0:	add    rbp,0x1
  4113f4:	movzx  eax,BYTE PTR [rbp+0x0]
  4113f8:	cmp    BYTE PTR [r8+rax*1],0x0
  4113fd:	jne    0x4113f0
  4113ff:	cmp    rbp,r12
  411402:	ja     0x41179c
  411408:	cmp    al,0x3a
  41140a:	je     0x411769
  411410:	cmp    al,0x3d
  411412:	je     0x411769
  411418:	movzx  eax,BYTE PTR [rbp-0x1]
  41141c:	cmp    al,0x7f
  41141e:	jbe    0x4117f6
  411424:	mov    rcx,QWORD PTR [rsp+0x38]
  411429:	call   0x4111c0
  41142e:	mov    eax,DWORD PTR [rsp+0x34]
  411432:	mov    DWORD PTR [r13+0x10],eax
  411436:	add    rsp,0x158
  41143d:	pop    rbx
  41143e:	pop    rsi
  41143f:	pop    rdi
  411440:	pop    rbp
  411441:	pop    r12
  411443:	pop    r13
  411445:	pop    r14
  411447:	pop    r15
  411449:	ret    
  41144a:	nop    WORD PTR [rax+rax*1+0x0]
  411450:	cmp    dl,0x3c
  411453:	je     0x411520
  411459:	cmp    dl,0x5b
  41145c:	je     0x411480
  41145e:	cmp    dl,0x23
  411461:	jne    0x411424
  411463:	lea    rcx,[rbx+0x1]
  411467:	mov    edx,0xa
  41146c:	call   0x4227d0
  411471:	mov    rbx,rax
  411474:	test   rbx,rbx
  411477:	jne    0x411345
  41147d:	jmp    0x411424
  41147f:	nop
  411480:	mov    rbp,QWORD PTR [r13+0x30]
  411484:	mov    rcx,rbp
  411487:	call   0x4227a8
  41148c:	lea    rcx,[rbx+0x1]
  411490:	mov    r8,rax
  411493:	mov    rdx,rbp
  411496:	mov    rdi,rax
  411499:	call   0x4227a0
  41149e:	test   eax,eax
  4114a0:	je     0x4117d4
  4114a6:	cmp    rdi,0x10
  4114aa:	ja     0x411424
  4114b0:	mov    rcx,QWORD PTR [rsp+0x50]
  4114b5:	mov    r8,rdi
  4114b8:	mov    rdx,rbp
  4114bb:	mov    QWORD PTR [rsp+0x110],0x5b
  4114c7:	mov    QWORD PTR [rsp+0x118],0x0
  4114d3:	mov    QWORD PTR [rsp+0x120],0x0
  4114df:	call   0x422810
  4114e4:	mov    rdx,QWORD PTR [rsp+0x48]
  4114e9:	mov    rcx,rbx
  4114ec:	mov    BYTE PTR [rsp+rdi*1+0x111],0x5d
  4114f4:	mov    BYTE PTR [rsp+rdi*1+0x112],0x0
  4114fc:	call   0x422780
  411501:	test   rax,rax
  411504:	je     0x411424
  41150a:	mov    edx,0xa
  41150f:	mov    rcx,rax
  411512:	call   0x4227d0
  411517:	mov    rbx,rax
  41151a:	jmp    0x411474
  41151f:	nop
  411520:	movzx  eax,BYTE PTR [rbx+0x1]
  411524:	cmp    al,0x7f
  411526:	ja     0x411730
  41152c:	lea    rdi,[rip+0x1b1cd]        # 0x42c700
  411533:	movzx  edx,al
  411536:	test   DWORD PTR [rdi+rdx*4],0x180040
  41153d:	je     0x411730
  411543:	mov    eax,DWORD PTR [rip+0x141c7]        # 0x425710
  411549:	mov    DWORD PTR [rsp+0x9c],eax
  411550:	lea    rax,[rbx+0x1]
  411554:	mov    QWORD PTR [rsp+0x70],rax
  411559:	mov    rax,QWORD PTR [rip+0x222c0]        # 0x433820
  411560:	test   rax,rax
  411563:	je     0x411af9
  411569:	movzx  edx,BYTE PTR [rbx+0x1]
  41156d:	mov    r15,QWORD PTR [rsp+0x70]
  411572:	cmp    BYTE PTR [rax+rdx*1],0x0
  411576:	je     0x41158e
  411578:	nop    DWORD PTR [rax+rax*1+0x0]
  411580:	add    r15,0x1
  411584:	movzx  edx,BYTE PTR [r15]
  411588:	cmp    BYTE PTR [rax+rdx*1],0x0
  41158c:	jne    0x411580
  41158e:	mov    DWORD PTR [rsp+0xc0],0x1
  411599:	movzx  edx,BYTE PTR [r15]
  41159d:	cmp    dl,0x20
  4115a0:	je     0x411996
  4115a6:	jle    0x4118b6
  4115ac:	cmp    dl,0x2f
  4115af:	je     0x4119ee
  4115b5:	cmp    dl,0x3e
  4115b8:	mov    rbp,r15
  4115bb:	jne    0x4118bf
  4115c1:	mov    BYTE PTR [r15],0x0
  4115c5:	mov    rcx,QWORD PTR [rsp+0x70]
  4115ca:	lea    r12,[rbp+0x1]
  4115ce:	mov    eax,DWORD PTR [rsp+0x9c]
  4115d5:	mov    DWORD PTR [rsp+0x80],eax
  4115dc:	call   0x4227a8
  4115e1:	lea    rcx,[rax+0x4]
  4115e5:	mov    rbx,rax
  4115e8:	cmp    rcx,0x3f
  4115ec:	ja     0x411a47
  4115f2:	mov    rax,QWORD PTR [rsp+0x48]
  4115f7:	mov    rdx,QWORD PTR [rsp+0x70]
  4115fc:	mov    r8,rbx
  4115ff:	mov    BYTE PTR [rsp+0x110],0x3c
  411607:	mov    BYTE PTR [rsp+0x111],0x2f
  41160f:	lea    rcx,[rax+0x2]
  411613:	call   0x422810
  411618:	lea    rcx,[rbx+0x3]
  41161c:	mov    rdx,QWORD PTR [rsp+0x48]
  411621:	mov    BYTE PTR [rsp+rbx*1+0x112],0x3e
  411629:	mov    BYTE PTR [rsp+rbx*1+0x113],0x0
  411631:	mov    BYTE PTR [rbp+0x1],0x20
  411635:	mov    QWORD PTR [rsp+0x78],rcx
  41163a:	mov    rcx,r12
  41163d:	call   0x422780
  411642:	mov    rdx,rax
  411645:	test   rdx,rdx
  411648:	je     0x411424
  41164e:	mov    rbx,QWORD PTR [rsp+0x78]
  411653:	add    rbx,rdx
  411656:	cmp    DWORD PTR [rsp+0x80],0x1
  41165e:	je     0x4116a6
  411660:	mov    r8,QWORD PTR [rip+0x22139]        # 0x4337a0
  411667:	test   r8,r8
  41166a:	je     0x411c0c
  411670:	cmp    r12,rdx
  411673:	jb     0x41169b
  411675:	mov    rcx,r12
  411678:	mov    QWORD PTR [rsp+0x78],r8
  41167d:	call   0x4227a8
  411682:	lea    rdx,[r12+rax*1]
  411686:	mov    r8,QWORD PTR [rsp+0x78]
  41168b:	cmp    r12,rdx
  41168e:	jb     0x41169b
  411690:	jmp    0x4116a6
  411692:	sub    rdx,0x1
  411696:	cmp    r12,rdx
  411699:	jae    0x4116a6
  41169b:	movzx  eax,BYTE PTR [rdx-0x1]
  41169f:	cmp    BYTE PTR [r8+rax*1],0x0
  4116a4:	jne    0x411692
  4116a6:	test   rbx,rbx
  4116a9:	mov    BYTE PTR [rdx],0x0
  4116ac:	je     0x411424
  4116b2:	mov    r8,r12
  4116b5:	mov    edx,0x20
  4116ba:	mov    rcx,r15
  4116bd:	sub    r8,r15
  4116c0:	call   0x422800
  4116c5:	cmp    DWORD PTR [rsp+0xc0],0x1
  4116cd:	mov    eax,DWORD PTR [rsp+0x9c]
  4116d4:	jne    0x411a08
  4116da:	test   eax,eax
  4116dc:	jne    0x411a08
  4116e2:	mov    BYTE PTR [rsp+0x92],0x0
  4116ea:	add    rbp,0x2
  4116ee:	lea    rax,[rbp-0x1]
  4116f2:	lea    r9,[r12+0x1]
  4116f7:	mov    QWORD PTR [rsp+0x78],rax
  4116fc:	movzx  eax,BYTE PTR [r12]
  411701:	cmp    eax,0x25
  411704:	je     0x411bb0
  41170a:	cmp    eax,0x26
  41170d:	je     0x411b24
  411713:	test   eax,eax
  411715:	je     0x411b17
  41171b:	mov    r12,r9
  41171e:	mov    BYTE PTR [rbp-0x1],al
  411721:	add    rbp,0x1
  411725:	jmp    0x4116ee
  411727:	nop    WORD PTR [rax+rax*1+0x0]
  411730:	cmp    al,0x2f
  411732:	je     0x411853
  411738:	cmp    al,0x3f
  41173a:	je     0x4118de
  411740:	cmp    al,0x21
  411742:	jne    0x411424
  411748:	lea    rdx,[rip+0x172a8]        # 0x4289f7
  41174f:	mov    rcx,rbx
  411752:	call   0x422780
  411757:	test   rax,rax
  41175a:	je     0x411424
  411760:	lea    rbx,[rax+0x3]
  411764:	jmp    0x411474
  411769:	mov    rax,QWORD PTR [rip+0x22030]        # 0x4337a0
  411770:	lea    rdi,[rbp+0x1]
  411774:	test   rax,rax
  411777:	je     0x411b08
  41177d:	movzx  edx,BYTE PTR [rbp+0x1]
  411781:	cmp    BYTE PTR [rax+rdx*1],0x0
  411785:	jne    0x411830
  41178b:	cmp    r12,rdi
  41178e:	jb     0x41179c
  411790:	cmp    BYTE PTR [r12-0x1],0x5c
  411796:	je     0x411873
  41179c:	lea    rdi,[r12+0x1]
  4117a1:	mov    BYTE PTR [r12],0x0
  4117a6:	mov    rdx,QWORD PTR [rsp+0x40]
  4117ab:	mov    r8,rbx
  4117ae:	mov    DWORD PTR [rsp+0x20],0x1
  4117b6:	mov    r9d,r14d
  4117b9:	mov    rcx,r13
  4117bc:	mov    rbx,rdi
  4117bf:	call   0x410150
  4117c4:	jmp    0x411474
  4117c9:	mov    sil,0x4
  4117cc:	mov    r14b,0x1
  4117cf:	jmp    0x4112ea
  4117d4:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x5d
  4117d9:	jne    0x4114a6
  4117df:	lea    rcx,[rbx+rdi*1+0x2]
  4117e4:	mov    edx,0xa
  4117e9:	call   0x4227d0
  4117ee:	mov    rbx,rax
  4117f1:	jmp    0x411474
  4117f6:	test   DWORD PTR [rdi+rax*4],0xc01
  4117fd:	je     0x411424
  411803:	cmp    BYTE PTR [r12-0x1],0x5c
  411809:	jne    0x41179c
  41180b:	jmp    0x411873
  41180d:	mov    ecx,0xc
  411812:	call   0x408aa0
  411817:	jmp    0x411364
  41181c:	mov    rcx,rbp
  41181f:	call   0x4227a8
  411824:	lea    rbx,[rbp+rax*1+0x0]
  411829:	jmp    0x411474
  41182e:	xchg   ax,ax
  411830:	add    rdi,0x1
  411834:	movzx  edx,BYTE PTR [rdi]
  411837:	cmp    BYTE PTR [rax+rdx*1],0x0
  41183b:	je     0x41178b
  411841:	add    rdi,0x1
  411845:	movzx  edx,BYTE PTR [rdi]
  411848:	cmp    BYTE PTR [rax+rdx*1],0x0
  41184c:	jne    0x411830
  41184e:	jmp    0x41178b
  411853:	lea    rcx,[rbx+0x2]
  411857:	mov    edx,0x3e
  41185c:	call   0x4227d0
  411861:	test   rax,rax
  411864:	lea    rbx,[rax+0x1]
  411868:	jne    0x411474
  41186e:	jmp    0x411424
  411873:	movzx  eax,BYTE PTR [r12]
  411878:	lea    rdx,[r12-0x1]
  41187d:	lea    rdi,[r12+0x1]
  411882:	cmp    al,0xa
  411884:	je     0x4118ae
  411886:	cmp    al,0x5c
  411888:	je     0x41197b
  41188e:	test   al,al
  411890:	je     0x411974
  411896:	add    rdx,0x1
  41189a:	mov    r12,rdi
  41189d:	mov    BYTE PTR [rdx-0x1],al
  4118a0:	movzx  eax,BYTE PTR [r12]
  4118a5:	lea    rdi,[r12+0x1]
  4118aa:	cmp    al,0xa
  4118ac:	jne    0x411886
  4118ae:	mov    BYTE PTR [rdx],0x0
  4118b1:	jmp    0x4117a6
  4118b6:	cmp    dl,0x9
  4118b9:	je     0x411996
  4118bf:	mov    edx,0x3e
  4118c4:	mov    rcx,r15
  4118c7:	call   0x4227d0
  4118cc:	test   rax,rax
  4118cf:	je     0x411424
  4118d5:	lea    rbx,[rax+0x1]
  4118d9:	jmp    0x411474
  4118de:	mov    rdi,QWORD PTR [rip+0x21d3b]        # 0x433620
  4118e5:	test   rdi,rdi
  4118e8:	je     0x411acb
  4118ee:	mov    rcx,rdi
  4118f1:	call   0x4227a8
  4118f6:	mov    r12,rax
  4118f9:	lea    r15,[rbx+0x2]
  4118fd:	mov    rdx,rdi
  411900:	xor    ebp,ebp
  411902:	mov    rdi,rbx
  411905:	mov    r8,r12
  411908:	mov    rcx,r15
  41190b:	mov    ebx,ebp
  41190d:	call   0x4227a0
  411912:	test   eax,eax
  411914:	jne    0x411932
  411916:	lea    rdx,[rdi+r12*1+0x2]
  41191b:	movzx  eax,BYTE PTR [rdx]
  41191e:	cmp    al,0x7f
  411920:	ja     0x41195b
  411922:	lea    rcx,[rip+0x1add7]        # 0x42c700
  411929:	test   DWORD PTR [rcx+rax*4],0x3b0060
  411930:	je     0x41195b
  411932:	cmp    rbp,0x1
  411936:	je     0x4118bf
  411938:	mov    rdx,QWORD PTR [rip+0x21ce9]        # 0x433628
  41193f:	mov    ebp,0x1
  411944:	mov    rcx,rdx
  411947:	mov    QWORD PTR [rsp+0x70],rdx
  41194c:	call   0x4227a8
  411951:	mov    rdx,QWORD PTR [rsp+0x70]
  411956:	mov    r12,rax
  411959:	jmp    0x411905
  41195b:	lea    rax,[rip+0x1745e]        # 0x428dc0
  411962:	movsxd r12,ebx
  411965:	mov    rcx,r13
  411968:	call   QWORD PTR [rax+r12*8]
  41196c:	mov    rbx,rax
  41196f:	jmp    0x411474
  411974:	xor    edi,edi
  411976:	jmp    0x4118ae
  41197b:	cmp    BYTE PTR [r12+0x1],0xa
  411981:	jne    0x411896
  411987:	lea    rdi,[r12+0x2]
  41198c:	mov    eax,0xa
  411991:	jmp    0x411896
  411996:	mov    rax,QWORD PTR [rip+0x21e03]        # 0x4337a0
  41199d:	test   rax,rax
  4119a0:	je     0x411bf9
  4119a6:	cmp    BYTE PTR [rax+rdx*1],0x0
  4119aa:	mov    rcx,r15
  4119ad:	je     0x4119bd
  4119af:	nop
  4119b0:	add    rcx,0x1
  4119b4:	movzx  edx,BYTE PTR [rcx]
  4119b7:	cmp    BYTE PTR [rax+rdx*1],0x0
  4119bb:	jne    0x4119b0
  4119bd:	mov    r8,QWORD PTR [rsp+0x60]
  4119c2:	mov    rdx,QWORD PTR [rsp+0x68]
  4119c7:	call   0x40af70
  4119cc:	test   rax,rax
  4119cf:	mov    rbp,rax
  4119d2:	je     0x411424
  4119d8:	movzx  eax,BYTE PTR [rax]
  4119db:	cmp    al,0x3e
  4119dd:	je     0x4115c1
  4119e3:	cmp    al,0x2f
  4119e5:	jne    0x411424
  4119eb:	mov    r15,rbp
  4119ee:	cmp    BYTE PTR [r15+0x1],0x3e
  4119f3:	jne    0x411424
  4119f9:	lea    rbx,[r15+0x2]
  4119fd:	mov    BYTE PTR [r15],0x0
  411a01:	mov    eax,DWORD PTR [rsp+0x9c]
  411a08:	mov    r8,QWORD PTR [rsp+0x70]
  411a0d:	mov    rdx,QWORD PTR [rsp+0x40]
  411a12:	mov    r9d,r14d
  411a15:	mov    DWORD PTR [rsp+0x20],eax
  411a19:	mov    rcx,r13
  411a1c:	call   0x410150
  411a21:	jmp    0x411474
  411a26:	mov    cl,0x1c
  411a28:	call   0x408aa0
  411a2d:	mov    rcx,rax
  411a30:	jmp    0x4113bd
  411a35:	mov    ecx,0xc
  411a3a:	call   0x408aa0
  411a3f:	mov    r8,rax
  411a42:	jmp    0x4113f4
  411a47:	call   0x408f90
  411a4c:	mov    rdx,QWORD PTR [rsp+0x70]
  411a51:	lea    rcx,[rax+0x2]
  411a55:	mov    r8,rbx
  411a58:	mov    BYTE PTR [rax],0x3c
  411a5b:	mov    BYTE PTR [rax+0x1],0x2f
  411a5f:	mov    QWORD PTR [rsp+0x88],rax
  411a67:	call   0x422810
  411a6c:	mov    r11,QWORD PTR [rsp+0x88]
  411a74:	lea    rax,[rbx+0x3]
  411a78:	mov    rcx,r12
  411a7b:	mov    QWORD PTR [rsp+0x78],rax
  411a80:	mov    BYTE PTR [r11+rbx*1+0x2],0x3e
  411a86:	mov    BYTE PTR [r11+rbx*1+0x3],0x0
  411a8c:	mov    rdx,r11
  411a8f:	mov    BYTE PTR [rbp+0x1],0x20
  411a93:	call   0x422780
  411a98:	mov    r11,QWORD PTR [rsp+0x88]
  411aa0:	cmp    r11,QWORD PTR [rsp+0x48]
  411aa5:	mov    rdx,rax
  411aa8:	je     0x411645
  411aae:	mov    rcx,r11
  411ab1:	mov    QWORD PTR [rsp+0x88],rax
  411ab9:	call   0x422858
  411abe:	mov    rdx,QWORD PTR [rsp+0x88]
  411ac6:	jmp    0x411645
  411acb:	lea    rax,[rip+0x18047]        # 0x429b19
  411ad2:	mov    r12d,0x7
  411ad8:	lea    rdi,[rip+0x1803a]        # 0x429b19
  411adf:	mov    QWORD PTR [rip+0x21b3a],rax        # 0x433620
  411ae6:	lea    rax,[rip+0x1801f]        # 0x429b0c
  411aed:	mov    QWORD PTR [rip+0x21b34],rax        # 0x433628
  411af4:	jmp    0x4118f9
  411af9:	mov    ecx,0x1c
  411afe:	call   0x408aa0
  411b03:	jmp    0x411569
  411b08:	mov    ecx,0xc
  411b0d:	call   0x408aa0
  411b12:	jmp    0x41177d
  411b17:	mov    rax,QWORD PTR [rsp+0x78]
  411b1c:	mov    BYTE PTR [rax],0x0
  411b1f:	jmp    0x411a01
  411b24:	mov    QWORD PTR [rsp+0x110],r9
  411b2c:	movzx  eax,BYTE PTR [r12+0x1]
  411b32:	cmp    al,0x23
  411b34:	je     0x411cca
  411b3a:	movzx  edx,al
  411b3d:	cmp    edx,0x7f
  411b40:	ja     0x411c57
  411b46:	test   DWORD PTR [rdi+rdx*4],0x30000
  411b4d:	je     0x411c57
  411b53:	mov    rcx,r9
  411b56:	cmp    al,0x58
  411b58:	je     0x411c40
  411b5e:	cmp    al,0x78
  411b60:	je     0x411c40
  411b66:	cmp    al,0x30
  411b68:	mov    r8d,0xa
  411b6e:	je     0x411c28
  411b74:	mov    rdx,QWORD PTR [rsp+0x48]
  411b79:	call   0x422770
  411b7e:	cmp    eax,0x7f
  411b81:	mov    r12,QWORD PTR [rsp+0x110]
  411b89:	ja     0x411b17
  411b8b:	cmp    BYTE PTR [r12],0x3b
  411b90:	jne    0x411b17
  411b92:	add    r12,0x1
  411b96:	test   eax,eax
  411b98:	mov    BYTE PTR [rbp-0x1],al
  411b9b:	jne    0x411721
  411ba1:	jmp    0x411a01
  411ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411bb0:	movzx  edx,BYTE PTR [r12+0x1]
  411bb6:	lea    r15,[r12+0x3]
  411bbb:	mov    BYTE PTR [rsp+0x90],dl
  411bc2:	movzx  eax,BYTE PTR [r12+0x2]
  411bc8:	test   dl,dl
  411bca:	mov    BYTE PTR [rsp+0x91],al
  411bd1:	je     0x411b17
  411bd7:	test   al,al
  411bd9:	je     0x411b17
  411bdf:	mov    rcx,QWORD PTR [rsp+0x58]
  411be4:	mov    r8d,0x10
  411bea:	xor    edx,edx
  411bec:	mov    r12,r15
  411bef:	call   0x422770
  411bf4:	jmp    0x41171e
  411bf9:	mov    ecx,0xc
  411bfe:	call   0x408aa0
  411c03:	movzx  edx,BYTE PTR [r15]
  411c07:	jmp    0x4119a6
  411c0c:	mov    ecx,0xc
  411c11:	mov    QWORD PTR [rsp+0x78],rdx
  411c16:	call   0x408aa0
  411c1b:	mov    rdx,QWORD PTR [rsp+0x78]
  411c20:	mov    r8,rax
  411c23:	jmp    0x411670
  411c28:	cmp    BYTE PTR [rcx+0x1],0x30
  411c2c:	mov    r8d,0x10
  411c32:	mov    eax,0xa
  411c37:	cmovne r8d,eax
  411c3b:	jmp    0x411b74
  411c40:	add    rcx,0x1
  411c44:	mov    r8d,0x10
  411c4a:	mov    QWORD PTR [rsp+0x110],rcx
  411c52:	jmp    0x411b74
  411c57:	lea    r12,[rip+0x171ea]        # 0x428e48
  411c5e:	xor    r15d,r15d
  411c61:	jmp    0x411c75
  411c63:	add    r15d,0x1
  411c67:	add    r12,0x10
  411c6b:	cmp    r15d,0xc
  411c6f:	je     0x411b17
  411c75:	movzx  r10d,WORD PTR [r12]
  411c7a:	mov    rdx,QWORD PTR [r12-0x8]
  411c7f:	mov    rcx,r9
  411c82:	mov    QWORD PTR [rsp+0x80],r9
  411c8a:	mov    r8,r10
  411c8d:	mov    QWORD PTR [rsp+0x88],r10
  411c95:	call   0x4227a0
  411c9a:	test   eax,eax
  411c9c:	mov    r9,QWORD PTR [rsp+0x80]
  411ca4:	mov    r10,QWORD PTR [rsp+0x88]
  411cac:	jne    0x411c63
  411cae:	movsxd rax,r15d
  411cb1:	lea    rcx,[rip+0x17188]        # 0x428e40
  411cb8:	lea    r12,[r9+r10*1]
  411cbc:	shl    rax,0x4
  411cc0:	movsx  eax,WORD PTR [rcx+rax*1+0xa]
  411cc5:	jmp    0x411b96
  411cca:	lea    rcx,[r12+0x2]
  411ccf:	mov    QWORD PTR [rsp+0x110],rcx
  411cd7:	movzx  eax,BYTE PTR [r12+0x2]
  411cdd:	jmp    0x411b56
  411ce2:	nop    DWORD PTR [rax+0x0]
  411ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411cf0:	push   r15
  411cf2:	push   r14
  411cf4:	push   r13
  411cf6:	push   r12
  411cf8:	push   rbp
  411cf9:	push   rdi
  411cfa:	push   rsi
  411cfb:	push   rbx
  411cfc:	sub    rsp,0x188
  411d03:	mov    rdx,QWORD PTR [rcx+0x58]
  411d07:	test   rdx,rdx
  411d0a:	je     0x411da9
  411d10:	mov    r15d,DWORD PTR [rcx+0x10]
  411d14:	mov    eax,r15d
  411d17:	and    eax,0xfffffffb
  411d1a:	cmp    QWORD PTR [rdx+0x8],0x0
  411d1f:	mov    DWORD PTR [rcx+0x10],eax
  411d22:	je     0x411eb3
  411d28:	lea    rax,[rdx+0x10]
  411d2c:	xor    ebx,ebx
  411d2e:	xchg   ax,ax
  411d30:	add    rax,0x8
  411d34:	add    ebx,0x1
  411d37:	cmp    QWORD PTR [rax-0x8],0x0
  411d3c:	jne    0x411d30
  411d3e:	mov    rsi,rcx
  411d41:	mov    ebp,0xffffffff
  411d46:	lea    r12,[rsp+0x70]
  411d4b:	lea    r14,[rsp+0x30]
  411d50:	mov    r13,QWORD PTR [rip+0x255dd]        # 0x437334
  411d57:	jmp    0x411d8e
  411d59:	nop    DWORD PTR [rax+0x0]
  411d60:	movsxd rax,ebx
  411d63:	mov    edi,ebx
  411d65:	shl    rax,0x3
  411d69:	mov    r8,QWORD PTR [rdx+rax*1]
  411d6d:	test   r8,r8
  411d70:	je     0x411da5
  411d72:	mov    r9,QWORD PTR [rsi+0x20]
  411d76:	mov    edx,0x105
  411d7b:	mov    rcx,r12
  411d7e:	lea    ebx,[rdi+rbp*1]
  411d81:	call   0x40db30
  411d86:	test   al,al
  411d88:	jne    0x411dc0
  411d8a:	mov    rdx,QWORD PTR [rsi+0x58]
  411d8e:	cmp    ebx,0xffffffff
  411d91:	jne    0x411d60
  411d93:	xor    eax,eax
  411d95:	xor    edi,edi
  411d97:	mov    ebp,0x1
  411d9c:	mov    r8,QWORD PTR [rdx+rax*1]
  411da0:	test   r8,r8
  411da3:	jne    0x411d72
  411da5:	mov    DWORD PTR [rsi+0x10],r15d
  411da9:	add    rsp,0x188
  411db0:	pop    rbx
  411db1:	pop    rsi
  411db2:	pop    rdi
  411db3:	pop    rbp
  411db4:	pop    r12
  411db6:	pop    r13
  411db8:	pop    r14
  411dba:	pop    r15
  411dbc:	ret    
  411dbd:	nop    DWORD PTR [rax]
  411dc0:	mov    rdx,r14
  411dc3:	mov    rcx,r12
  411dc6:	call   r13
  411dc9:	test   eax,eax
  411dcb:	jne    0x411d8a
  411dcd:	movzx  eax,WORD PTR [rsp+0x36]
  411dd2:	and    ax,0xf000
  411dd6:	cmp    ax,0x4000
  411dda:	jne    0x411e68
  411de0:	mov    r9,r12
  411de3:	mov    edx,DWORD PTR [r9]
  411de6:	add    r9,0x4
  411dea:	lea    eax,[rdx-0x1010101]
  411df0:	not    edx
  411df2:	and    eax,edx
  411df4:	and    eax,0x80808080
  411df9:	je     0x411de3
  411dfb:	mov    edx,eax
  411dfd:	shr    edx,0x10
  411e00:	test   eax,0x8080
  411e05:	cmove  eax,edx
  411e08:	lea    rdx,[r9+0x2]
  411e0c:	cmove  r9,rdx
  411e10:	mov    rdx,QWORD PTR [rsi+0x38]
  411e14:	add    al,al
  411e16:	sbb    r9,0x3
  411e1a:	sub    r9,r12
  411e1d:	mov    rcx,rdx
  411e20:	mov    QWORD PTR [rsp+0x28],r9
  411e25:	mov    QWORD PTR [rsp+0x20],rdx
  411e2a:	call   0x4227a8
  411e2f:	mov    r9,QWORD PTR [rsp+0x28]
  411e34:	lea    r8,[rax+0x1]
  411e38:	mov    rdx,QWORD PTR [rsp+0x20]
  411e3d:	lea    rax,[r9+r8*1+0x1]
  411e42:	cmp    rax,0x104
  411e48:	ja     0x411d8a
  411e4e:	add    r9,r12
  411e51:	cmp    BYTE PTR [r9-0x1],0x5c
  411e56:	mov    rcx,r9
  411e59:	je     0x411e63
  411e5b:	add    rcx,0x1
  411e5f:	mov    BYTE PTR [r9],0x5c
  411e63:	call   0x422810
  411e68:	mov    r8d,ebp
  411e6b:	mov    rdx,r12
  411e6e:	mov    rcx,rsi
  411e71:	call   0x411250
  411e76:	cmp    ebp,0xffffffff
  411e79:	jne    0x411d8a
  411e7f:	movzx  eax,WORD PTR [rsi+0xaa]
  411e86:	add    rax,0x1
  411e8a:	lea    rdx,[rax+rax*2]
  411e8e:	lea    rax,[rax+rdx*4]
  411e92:	mov    rdx,QWORD PTR [rsi+0x78]
  411e96:	lea    rax,[rdx+rax*8]
  411e9a:	mov    eax,DWORD PTR [rax+0x10]
  411e9d:	shr    eax,0x5
  411ea0:	and    eax,0x1
  411ea3:	mov    eax,0x1
  411ea8:	cmovne ebx,edi
  411eab:	cmovne ebp,eax
  411eae:	jmp    0x411d8a
  411eb3:	xor    ebx,ebx
  411eb5:	jmp    0x411d3e
  411eba:	nop    WORD PTR [rax+rax*1+0x0]
  411ec0:	push   rdi
  411ec1:	push   rsi
  411ec2:	push   rbx
  411ec3:	sub    rsp,0x20
  411ec7:	mov    rbx,rcx
  411eca:	mov    rdi,rdx
  411ecd:	call   0x40a2d0
  411ed2:	test   eax,eax
  411ed4:	mov    esi,eax
  411ed6:	jne    0x411ef0
  411ed8:	mov    QWORD PTR [rbx+0x28],rdi
  411edc:	mov    rcx,rbx
  411edf:	call   0x411cf0
  411ee4:	mov    eax,esi
  411ee6:	add    rsp,0x20
  411eea:	pop    rbx
  411eeb:	pop    rsi
  411eec:	pop    rdi
  411eed:	ret    
  411eee:	xchg   ax,ax
  411ef0:	mov    esi,0xffffffff
  411ef5:	jmp    0x411ee4
  411ef7:	nop    WORD PTR [rax+rax*1+0x0]
  411f00:	push   rsi
  411f01:	push   rbx
  411f02:	sub    rsp,0x68
  411f06:	cmp    rcx,0xf
  411f0a:	jbe    0x411f12
  411f0c:	test   BYTE PTR [rdx+0x10],0x28
  411f10:	je     0x411f20
  411f12:	add    rsp,0x68
  411f16:	pop    rbx
  411f17:	pop    rsi
  411f18:	ret    
  411f19:	nop    DWORD PTR [rax+0x0]
  411f20:	mov    rsi,rdx
  411f23:	mov    rbx,rcx
  411f26:	lea    rdx,[rsp+0x20]
  411f2b:	mov    rcx,QWORD PTR [rsi+0x18]
  411f2f:	call   QWORD PTR [rip+0x253ff]        # 0x437334
  411f35:	test   eax,eax
  411f37:	je     0x411f53
  411f39:	test   BYTE PTR [rbx+0x10],0x4
  411f3d:	je     0x411f12
  411f3f:	mov    rcx,QWORD PTR [rbx+0x28]
  411f43:	mov    r8,QWORD PTR [rsi+0x18]
  411f47:	lea    rdx,[rip+0x16bc2]        # 0x428b10
  411f4e:	call   0x407b10
  411f53:	movzx  eax,WORD PTR [rsp+0x26]
  411f58:	and    ax,0xf000
  411f5c:	cmp    ax,0x8000
  411f60:	je     0x411f80
  411f62:	test   BYTE PTR [rbx+0x10],0x4
  411f66:	je     0x411f12
  411f68:	call   QWORD PTR [rip+0x251a6]        # 0x437114
  411f6e:	mov    DWORD PTR [rax],0x16
  411f74:	jmp    0x411f3f
  411f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f80:	mov    rdx,QWORD PTR [rsi+0x18]
  411f84:	xor    r8d,r8d
  411f87:	mov    rcx,rbx
  411f8a:	call   0x411250
  411f8f:	jmp    0x411f12
  411f91:	nop    DWORD PTR [rax+rax*1+0x0]
  411f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411fa0:	push   r12
  411fa2:	push   rbp
  411fa3:	push   rdi
  411fa4:	push   rsi
  411fa5:	push   rbx
  411fa6:	sub    rsp,0x50
  411faa:	mov    r8d,0x2
  411fb0:	mov    edx,0x1
  411fb5:	mov    ebp,DWORD PTR [rip+0x13755]        # 0x425710
  411fbb:	lea    rsi,[rsp+0x20]
  411fc0:	mov    rbx,rcx
  411fc3:	mov    r9,rsi
  411fc6:	call   0x410f80
  411fcb:	cmp    rax,0xffffffffffffffff
  411fcf:	mov    rdi,rax
  411fd2:	je     0x412040
  411fd4:	mov    rcx,rbx
  411fd7:	mov    DWORD PTR [rip+0x1372f],0x0        # 0x425710
  411fe1:	call   0x4227a8
  411fe6:	mov    rdx,rbx
  411fe9:	mov    r8,rax
  411fec:	mov    rcx,rdi
  411fef:	call   0x40c3e0
  411ff4:	test   rax,rax
  411ff7:	mov    rbx,rax
  411ffa:	je     0x412020
  411ffc:	mov    rcx,rsi
  411fff:	call   0x4111c0
  412004:	mov    DWORD PTR [rip+0x13706],ebp        # 0x425710
  41200a:	mov    rax,rbx
  41200d:	add    rsp,0x50
  412011:	pop    rbx
  412012:	pop    rsi
  412013:	pop    rdi
  412014:	pop    rbp
  412015:	pop    r12
  412017:	ret    
  412018:	nop    DWORD PTR [rax+rax*1+0x0]
  412020:	mov    rdi,QWORD PTR [rip+0x250ed]        # 0x437114
  412027:	call   rdi
  412029:	mov    r12d,DWORD PTR [rax]
  41202c:	mov    rcx,rsi
  41202f:	call   0x4111c0
  412034:	call   rdi
  412036:	mov    DWORD PTR [rax],r12d
  412039:	jmp    0x412004
  41203b:	nop    DWORD PTR [rax+rax*1+0x0]
  412040:	xor    eax,eax
  412042:	jmp    0x41200d
  412044:	xchg   ax,ax
  412046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412050:	push   r13
  412052:	push   r12
  412054:	push   rbp
  412055:	push   rdi
  412056:	push   rsi
  412057:	push   rbx
  412058:	sub    rsp,0x28
  41205c:	cmp    rcx,0xf
  412060:	jbe    0x41206d
  412062:	test   rdx,rdx
  412065:	je     0x41206d
  412067:	test   BYTE PTR [rdx+0x10],0x8
  41206b:	je     0x412080
  41206d:	add    rsp,0x28
  412071:	pop    rbx
  412072:	pop    rsi
  412073:	pop    rdi
  412074:	pop    rbp
  412075:	pop    r12
  412077:	pop    r13
  412079:	ret    
  41207a:	nop    WORD PTR [rax+rax*1+0x0]
  412080:	mov    rsi,rcx
  412083:	mov    rcx,QWORD PTR [rdx+0x18]
  412087:	mov    rbx,rdx
  41208a:	call   0x40b400
  41208f:	cmp    rax,0xffffffffffffffff
  412093:	mov    rdi,rax
  412096:	je     0x4120c0
  412098:	test   BYTE PTR [rbx+0x10],0x40
  41209c:	jne    0x4120b0
  41209e:	mov    DWORD PTR [rbx+0x18],edi
  4120a1:	add    rsp,0x28
  4120a5:	pop    rbx
  4120a6:	pop    rsi
  4120a7:	pop    rdi
  4120a8:	pop    rbp
  4120a9:	pop    r12
  4120ab:	pop    r13
  4120ad:	ret    
  4120ae:	xchg   ax,ax
  4120b0:	mov    rcx,QWORD PTR [rbx+0x18]
  4120b4:	call   0x422858
  4120b9:	and    DWORD PTR [rbx+0x10],0xffffffbf
  4120bd:	jmp    0x41209e
  4120bf:	nop
  4120c0:	mov    r13,QWORD PTR [rbx+0x18]
  4120c4:	mov    r12,QWORD PTR [rsi+0x28]
  4120c8:	mov    rbp,QWORD PTR [rip+0x137f9]        # 0x4258c8
  4120cf:	call   QWORD PTR [rip+0x24fef]        # 0x4370c4
  4120d5:	lea    rcx,[rax+0x60]
  4120d9:	mov    r9,r13
  4120dc:	mov    r8,r12
  4120df:	mov    rdx,rbp
  4120e2:	call   0x407150
  4120e7:	test   BYTE PTR [rsi+0x10],0x4
  4120eb:	je     0x412098
  4120ed:	mov    edx,0x1
  4120f2:	mov    rcx,rsi
  4120f5:	call   QWORD PTR [rsi+0x98]
  4120fb:	jmp    0x412098
  4120fd:	nop    DWORD PTR [rax]
  412100:	push   rbx
  412101:	sub    rsp,0x20
  412105:	mov    rbx,rdx
  412108:	call   0x412050
  41210d:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  412111:	je     0x41211e
  412113:	xor    ecx,ecx
  412115:	call   QWORD PTR [rip+0x25081]        # 0x43719c
  41211b:	add    DWORD PTR [rbx+0x18],eax
  41211e:	add    rsp,0x20
  412122:	pop    rbx
  412123:	ret    
  412124:	xchg   ax,ax
  412126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412130:	push   r12
  412132:	push   rbp
  412133:	push   rdi
  412134:	push   rsi
  412135:	push   rbx
  412136:	sub    rsp,0x30
  41213a:	test   rcx,rcx
  41213d:	mov    rdi,rcx
  412140:	je     0x4124de
  412146:	mov    rax,QWORD PTR [rip+0x21653]        # 0x4337a0
  41214d:	test   rax,rax
  412150:	je     0x412506
  412156:	movzx  ecx,BYTE PTR [rdi]
  412159:	mov    rbp,rdi
  41215c:	cmp    BYTE PTR [rax+rcx*1],0x0
  412160:	mov    rdx,rcx
  412163:	je     0x412176
  412165:	add    rbp,0x1
  412169:	movzx  ecx,BYTE PTR [rbp+0x0]
  41216d:	cmp    BYTE PTR [rax+rcx*1],0x0
  412171:	mov    rdx,rcx
  412174:	jne    0x412165
  412176:	test   dl,dl
  412178:	je     0x4124de
  41217e:	mov    rsi,rbp
  412181:	mov    r12d,0x2
  412187:	nop    WORD PTR [rax+rax*1+0x0]
  412190:	mov    rax,QWORD PTR [rip+0x21609]        # 0x4337a0
  412197:	add    r12d,0x1
  41219b:	lea    rbx,[rsi+0x1]
  41219f:	test   rax,rax
  4121a2:	je     0x412447
  4121a8:	movzx  edx,BYTE PTR [rsi+0x1]
  4121ac:	test   dl,dl
  4121ae:	je     0x4124b8
  4121b4:	cmp    BYTE PTR [rax+rdx*1],0x0
  4121b8:	mov    rcx,rax
  4121bb:	je     0x4121c6
  4121bd:	jmp    0x4121dd
  4121bf:	nop
  4121c0:	cmp    BYTE PTR [rax+rdx*1],0x0
  4121c4:	jne    0x4121d1
  4121c6:	add    rbx,0x1
  4121ca:	movzx  edx,BYTE PTR [rbx]
  4121cd:	test   dl,dl
  4121cf:	jne    0x4121c0
  4121d1:	test   rcx,rcx
  4121d4:	je     0x412470
  4121da:	mov    rax,rcx
  4121dd:	movzx  edx,BYTE PTR [rbx]
  4121e0:	movzx  ecx,dl
  4121e3:	cmp    BYTE PTR [rax+rcx*1],0x0
  4121e7:	je     0x412437
  4121ed:	mov    rsi,rbx
  4121f0:	add    rsi,0x1
  4121f4:	movzx  ecx,BYTE PTR [rsi]
  4121f7:	cmp    BYTE PTR [rax+rcx*1],0x0
  4121fb:	mov    rdx,rcx
  4121fe:	jne    0x4121f0
  412200:	test   dl,dl
  412202:	jne    0x412190
  412204:	sub    rsi,rbp
  412207:	movsxd r12,r12d
  41220a:	lea    rcx,[rsi+r12*8+0x10]
  41220f:	call   0x408f90
  412214:	test   rax,rax
  412217:	mov    rbp,rax
  41221a:	je     0x412515
  412220:	lea    rbx,[rax+r12*8]
  412224:	lea    rsi,[rsp+0x2f]
  412229:	mov    QWORD PTR [rax+0x8],rbx
  41222d:	xor    eax,eax
  41222f:	nop
  412230:	lea    edx,[rax+0x1]
  412233:	mov    DWORD PTR [rbp+0x0],edx
  412236:	mov    QWORD PTR [rbp+rax*8+0x8],rbx
  41223b:	movzx  r8d,BYTE PTR [rdi]
  41223f:	cmp    r8b,0x7f
  412243:	ja     0x41225d
  412245:	lea    rdx,[rip+0x1a4b4]        # 0x42c700
  41224c:	movzx  eax,r8b
  412250:	test   DWORD PTR [rdx+rax*4],0xc01
  412257:	jne    0x4122fd
  41225d:	cmp    r8b,0x22
  412261:	je     0x412350
  412267:	cmp    r8b,0x27
  41226b:	je     0x412290
  41226d:	test   r8b,r8b
  412270:	je     0x412330
  412276:	mov    BYTE PTR [rbx],r8b
  412279:	movzx  r8d,BYTE PTR [rdi+0x1]
  41227e:	add    rbx,0x1
  412282:	add    rdi,0x1
  412286:	cmp    r8b,0x7f
  41228a:	ja     0x41225d
  41228c:	jmp    0x412245
  41228e:	xchg   ax,ax
  412290:	movzx  r8d,BYTE PTR [rdi+0x1]
  412295:	lea    rax,[rdi+0x1]
  412299:	cmp    r8b,0x27
  41229d:	lea    rdi,[rax+0x1]
  4122a1:	je     0x4122ce
  4122a3:	cmp    r8b,0x5c
  4122a7:	je     0x4123d0
  4122ad:	test   r8b,r8b
  4122b0:	je     0x412480
  4122b6:	mov    BYTE PTR [rbx],r8b
  4122b9:	movzx  r8d,BYTE PTR [rdi]
  4122bd:	mov    rax,rdi
  4122c0:	add    rbx,0x1
  4122c4:	lea    rdi,[rax+0x1]
  4122c8:	cmp    r8b,0x27
  4122cc:	jne    0x4122a3
  4122ce:	test   rdi,rdi
  4122d1:	je     0x412480
  4122d7:	movzx  r8d,BYTE PTR [rdi]
  4122db:	cmp    r8b,0x7f
  4122df:	ja     0x41223f
  4122e5:	lea    rdx,[rip+0x1a414]        # 0x42c700
  4122ec:	movzx  eax,r8b
  4122f0:	test   DWORD PTR [rdx+rax*4],0xc01
  4122f7:	je     0x41223f
  4122fd:	mov    rax,QWORD PTR [rip+0x2149c]        # 0x4337a0
  412304:	lea    r12,[rdi+0x1]
  412308:	test   rax,rax
  41230b:	je     0x4124f7
  412311:	movzx  edx,BYTE PTR [rdi+0x1]
  412315:	mov    rdi,r12
  412318:	cmp    BYTE PTR [rax+rdx*1],0x0
  41231c:	je     0x412330
  41231e:	xchg   ax,ax
  412320:	add    rdi,0x1
  412324:	movzx  edx,BYTE PTR [rdi]
  412327:	cmp    BYTE PTR [rax+rdx*1],0x0
  41232b:	jne    0x412320
  41232d:	nop    DWORD PTR [rax]
  412330:	mov    BYTE PTR [rbx],0x0
  412333:	cmp    BYTE PTR [rdi],0x0
  412336:	lea    rdx,[rbx+0x1]
  41233a:	mov    eax,DWORD PTR [rbp+0x0]
  41233d:	je     0x4124a1
  412343:	mov    rbx,rdx
  412346:	jmp    0x412230
  41234b:	nop    DWORD PTR [rax+rax*1+0x0]
  412350:	add    rdi,0x1
  412354:	movzx  r8d,BYTE PTR [rdi]
  412358:	lea    r12,[rdi+0x1]
  41235c:	cmp    r8b,0x22
  412360:	mov    BYTE PTR [rsp+0x2f],r8b
  412365:	je     0x412382
  412367:	cmp    r8b,0x5c
  41236b:	je     0x4123a2
  41236d:	test   r8b,r8b
  412370:	je     0x412480
  412376:	mov    BYTE PTR [rbx],r8b
  412379:	mov    rdi,r12
  41237c:	add    rbx,0x1
  412380:	jmp    0x412354
  412382:	test   r12,r12
  412385:	mov    rdi,r12
  412388:	je     0x412480
  41238e:	movzx  r8d,BYTE PTR [r12]
  412393:	cmp    r8b,0x7f
  412397:	ja     0x41223f
  41239d:	jmp    0x4122e5
  4123a2:	mov    r8d,0x7f
  4123a8:	mov    rcx,r12
  4123ab:	mov    rdx,rsi
  4123ae:	call   0x40bfb0
  4123b3:	movzx  r8d,BYTE PTR [rsp+0x2f]
  4123b9:	mov    eax,eax
  4123bb:	add    r12,rax
  4123be:	mov    rdi,r12
  4123c1:	cmp    r8b,0x7f
  4123c5:	jne    0x412376
  4123c7:	jmp    0x412354
  4123c9:	nop    DWORD PTR [rax+0x0]
  4123d0:	movzx  edx,BYTE PTR [rax+0x1]
  4123d4:	cmp    dl,0xd
  4123d7:	je     0x412417
  4123d9:	ja     0x412400
  4123db:	test   dl,dl
  4123dd:	je     0x412480
  4123e3:	cmp    dl,0xa
  4123e6:	jne    0x4122b6
  4123ec:	movzx  r8d,BYTE PTR [rax+0x2]
  4123f1:	add    rax,0x2
  4123f5:	jmp    0x412299
  4123fa:	nop    WORD PTR [rax+rax*1+0x0]
  412400:	cmp    dl,0x27
  412403:	je     0x41242f
  412405:	cmp    dl,0x5c
  412408:	jne    0x4122b6
  41240e:	lea    rdi,[rax+0x2]
  412412:	jmp    0x4122b6
  412417:	movzx  r8d,BYTE PTR [rax+0x2]
  41241c:	cmp    r8b,0xa
  412420:	je     0x4124d0
  412426:	add    rax,0x2
  41242a:	jmp    0x412299
  41242f:	mov    r8d,0x27
  412435:	jmp    0x41240e
  412437:	test   dl,dl
  412439:	mov    rsi,rbx
  41243c:	jne    0x412190
  412442:	jmp    0x412204
  412447:	mov    ecx,0xc
  41244c:	call   0x408aa0
  412451:	movzx  edx,BYTE PTR [rsi+0x1]
  412455:	mov    rcx,QWORD PTR [rip+0x21344]        # 0x4337a0
  41245c:	test   dl,dl
  41245e:	jne    0x4121c0
  412464:	jmp    0x4121d1
  412469:	nop    DWORD PTR [rax+0x0]
  412470:	mov    ecx,0xc
  412475:	call   0x408aa0
  41247a:	jmp    0x4121dd
  41247f:	nop
  412480:	mov    rcx,rbp
  412483:	call   0x422858
  412488:	call   QWORD PTR [rip+0x24c86]        # 0x437114
  41248e:	mov    DWORD PTR [rax],0x16
  412494:	xor    eax,eax
  412496:	add    rsp,0x30
  41249a:	pop    rbx
  41249b:	pop    rsi
  41249c:	pop    rdi
  41249d:	pop    rbp
  41249e:	pop    r12
  4124a0:	ret    
  4124a1:	mov    QWORD PTR [rbp+rax*8+0x8],0x0
  4124aa:	mov    rax,rbp
  4124ad:	add    rsp,0x30
  4124b1:	pop    rbx
  4124b2:	pop    rsi
  4124b3:	pop    rdi
  4124b4:	pop    rbp
  4124b5:	pop    r12
  4124b7:	ret    
  4124b8:	cmp    BYTE PTR [rax],0x0
  4124bb:	jne    0x4121ed
  4124c1:	mov    rsi,rbx
  4124c4:	jmp    0x412204
  4124c9:	nop    DWORD PTR [rax+0x0]
  4124d0:	movzx  r8d,BYTE PTR [rax+0x3]
  4124d5:	add    rax,0x3
  4124d9:	jmp    0x412299
  4124de:	call   QWORD PTR [rip+0x24c30]        # 0x437114
  4124e4:	mov    DWORD PTR [rax],0x2
  4124ea:	xor    eax,eax
  4124ec:	add    rsp,0x30
  4124f0:	pop    rbx
  4124f1:	pop    rsi
  4124f2:	pop    rdi
  4124f3:	pop    rbp
  4124f4:	pop    r12
  4124f6:	ret    
  4124f7:	mov    ecx,0xc
  4124fc:	call   0x408aa0
  412501:	jmp    0x412311
  412506:	mov    ecx,0xc
  41250b:	call   0x408aa0
  412510:	jmp    0x412156
  412515:	call   QWORD PTR [rip+0x24bf9]        # 0x437114
  41251b:	mov    DWORD PTR [rax],0xc
  412521:	xor    eax,eax
  412523:	jmp    0x4124ec
  412525:	nop
  412526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412530:	push   r15
  412532:	push   r14
  412534:	push   r13
  412536:	push   r12
  412538:	push   rbp
  412539:	push   rdi
  41253a:	push   rsi
  41253b:	push   rbx
  41253c:	sub    rsp,0xd8
  412543:	test   BYTE PTR [rcx+0x11],0x1
  412547:	jne    0x412560
  412549:	add    rsp,0xd8
  412550:	pop    rbx
  412551:	pop    rsi
  412552:	pop    rdi
  412553:	pop    rbp
  412554:	pop    r12
  412556:	pop    r13
  412558:	pop    r14
  41255a:	pop    r15
  41255c:	ret    
  41255d:	nop    DWORD PTR [rax]
  412560:	mov    rdi,rcx
  412563:	mov    rcx,QWORD PTR [rcx+0x30]
  412567:	mov    ebp,edx
  412569:	call   0x422838
  41256e:	test   rax,rax
  412571:	je     0x4125e0
  412573:	mov    rcx,rax
  412576:	call   0x412130
  41257b:	test   rax,rax
  41257e:	mov    rbx,rax
  412581:	je     0x4125e0
  412583:	mov    r13,QWORD PTR [rdi+0x8]
  412587:	mov    QWORD PTR [rdi+0x8],rax
  41258b:	mov    eax,DWORD PTR [rax]
  41258d:	mov    esi,DWORD PTR [rdi+0x10]
  412590:	mov    r12d,DWORD PTR [rdi+0x4]
  412594:	mov    DWORD PTR [rdi+0x14],0x1
  41259b:	mov    QWORD PTR [rdi+0x18],0x0
  4125a3:	add    eax,0x1
  4125a6:	mov    DWORD PTR [rdi+0x4],eax
  4125a9:	mov    eax,esi
  4125ab:	and    eax,0xfffffffb
  4125ae:	cmp    ebp,0x1
  4125b1:	mov    DWORD PTR [rdi+0x10],eax
  4125b4:	je     0x412710
  4125ba:	jb     0x412720
  4125c0:	cmp    ebp,0x2
  4125c3:	jne    0x4125cd
  4125c5:	mov    rcx,rdi
  4125c8:	call   0x410060
  4125cd:	mov    rcx,rbx
  4125d0:	call   0x422858
  4125d5:	mov    QWORD PTR [rdi+0x8],r13
  4125d9:	mov    DWORD PTR [rdi+0x4],r12d
  4125dd:	mov    DWORD PTR [rdi+0x10],esi
  4125e0:	lea    r14,[rsp+0x50]
  4125e5:	mov    rax,QWORD PTR [rdi+0x78]
  4125e9:	mov    r9,QWORD PTR [rdi+0x30]
  4125ed:	lea    r8,[rip+0x166c1]        # 0x428cb5
  4125f4:	mov    edx,0x80
  4125f9:	mov    r15d,DWORD PTR [rdi+0xb4]
  412600:	mov    rcx,r14
  412603:	mov    r13d,0x7f
  412609:	mov    QWORD PTR [rsp+0x30],rax
  41260e:	call   0x407540
  412613:	movsxd r12,eax
  412616:	lea    esi,[r15-0x1]
  41261a:	mov    rbx,QWORD PTR [rsp+0x30]
  41261f:	add    r12,r14
  412622:	mov    eax,r12d
  412625:	sub    eax,r14d
  412628:	sub    r13,rax
  41262b:	lea    rax,[rsp+0x30]
  412630:	test   r15d,r15d
  412633:	mov    QWORD PTR [rsp+0x28],rax
  412638:	jg     0x412651
  41263a:	jmp    0x4126a0
  41263c:	nop    DWORD PTR [rax+0x0]
  412640:	sub    esi,0x1
  412643:	add    rbx,0x68
  412647:	cmp    esi,0xffffffff
  41264a:	mov    QWORD PTR [rsp+0x30],rbx
  41264f:	je     0x4126a0
  412651:	test   BYTE PTR [rbx+0x11],0x1
  412655:	jne    0x412640
  412657:	cmp    WORD PTR [rbx+0x8],0x8000
  41265d:	jne    0x412640
  41265f:	mov    r15,QWORD PTR [rbx+0x48]
  412663:	mov    rcx,r15
  412666:	call   0x4227a8
  41266b:	lea    r8,[rax+0x1]
  41266f:	cmp    r13,r8
  412672:	jb     0x412640
  412674:	mov    rdx,r15
  412677:	mov    rcx,r12
  41267a:	call   0x422810
  41267f:	mov    rcx,QWORD PTR [rsp+0x28]
  412684:	mov    r9d,ebp
  412687:	mov    r8,rdi
  41268a:	mov    rdx,r14
  41268d:	call   0x408e20
  412692:	mov    rbx,QWORD PTR [rsp+0x30]
  412697:	jmp    0x412640
  412699:	nop    DWORD PTR [rax+0x0]
  4126a0:	movzx  eax,WORD PTR [rdi+0xaa]
  4126a7:	test   ax,0x7fff
  4126ab:	je     0x412549
  4126b1:	add    rax,0x1
  4126b5:	lea    rdx,[rax+rax*2]
  4126b9:	lea    rdx,[rax+rdx*4]
  4126bd:	mov    rax,QWORD PTR [rdi+0x78]
  4126c1:	lea    rax,[rax+rdx*8]
  4126c5:	mov    rbx,QWORD PTR [rax+0x48]
  4126c9:	mov    QWORD PTR [rsp+0x30],rax
  4126ce:	test   rbx,rbx
  4126d1:	je     0x412549
  4126d7:	mov    rcx,rbx
  4126da:	call   0x4227a8
  4126df:	lea    r8,[rax+0x1]
  4126e3:	cmp    r13,r8
  4126e6:	jb     0x412549
  4126ec:	mov    rdx,rbx
  4126ef:	mov    rcx,r12
  4126f2:	call   0x422810
  4126f7:	lea    rcx,[rsp+0x30]
  4126fc:	mov    r9d,ebp
  4126ff:	mov    r8,rdi
  412702:	mov    rdx,r14
  412705:	call   0x408e20
  41270a:	jmp    0x412549
  41270f:	nop
  412710:	mov    rcx,rdi
  412713:	call   0x40ff60
  412718:	jmp    0x4125cd
  41271d:	nop    DWORD PTR [rax]
  412720:	mov    rcx,rdi
  412723:	call   0x40ff60
  412728:	mov    DWORD PTR [rdi+0x14],0x1
  41272f:	mov    QWORD PTR [rdi+0x18],0x0
  412737:	jmp    0x4125c5
  41273c:	nop    DWORD PTR [rax+0x0]
  412740:	push   r15
  412742:	push   r14
  412744:	push   r13
  412746:	push   r12
  412748:	push   rbp
  412749:	push   rdi
  41274a:	push   rsi
  41274b:	push   rbx
  41274c:	sub    rsp,0x68
  412750:	mov    ebp,edx
  412752:	mov    rdx,QWORD PTR [r8]
  412755:	mov    rbx,rcx
  412758:	mov    rdi,r8
  41275b:	call   0x40a2d0
  412760:	test   eax,eax
  412762:	mov    esi,eax
  412764:	jne    0x412e59
  41276a:	mov    eax,DWORD PTR [rbx+0x10]
  41276d:	test   al,0x40
  41276f:	jne    0x4128f0
  412775:	or     eax,0x40
  412778:	cmp    DWORD PTR [rbx],0x21fff
  41277e:	mov    DWORD PTR [rbx+0x4],ebp
  412781:	mov    QWORD PTR [rbx+0x8],rdi
  412785:	mov    DWORD PTR [rbx+0x10],eax
  412788:	jg     0x412884
  41278e:	mov    rcx,rbx
  412791:	call   0x40ff60
  412796:	test   eax,eax
  412798:	jne    0x412871
  41279e:	movzx  eax,WORD PTR [rbx+0xaa]
  4127a5:	test   ax,0x7fff
  4127a9:	jne    0x4128a0
  4127af:	or     DWORD PTR [rbx+0x10],0x80000
  4127b6:	cmp    QWORD PTR [rbx+0x58],0x0
  4127bb:	je     0x412bc0
  4127c1:	mov    edx,0x1
  4127c6:	mov    rcx,rbx
  4127c9:	call   0x412530
  4127ce:	xchg   ax,ax
  4127d0:	mov    edx,0x2
  4127d5:	mov    rcx,rbx
  4127d8:	call   0x412530
  4127dd:	mov    eax,DWORD PTR [rbx+0x10]
  4127e0:	and    eax,0xfff7ffff
  4127e5:	mov    DWORD PTR [rbx+0x10],eax
  4127e8:	test   ah,0x20
  4127eb:	je     0x41280d
  4127ed:	mov    rdx,QWORD PTR [rbx+0xa0]
  4127f4:	test   rdx,rdx
  4127f7:	je     0x41280d
  4127f9:	mov    ecx,eax
  4127fb:	and    ecx,0x30000
  412801:	cmp    ecx,0x10000
  412807:	je     0x412bcf
  41280d:	test   ah,0x8
  412810:	jne    0x412920
  412816:	mov    DWORD PTR [rbx+0x14],0x1
  41281d:	mov    QWORD PTR [rbx+0x18],0x0
  412825:	mov    rcx,rbx
  412828:	call   0x410060
  41282d:	test   eax,eax
  41282f:	jne    0x412900
  412835:	movzx  eax,WORD PTR [rbx+0xaa]
  41283c:	test   ax,ax
  41283f:	je     0x412861
  412841:	cmp    ax,0x8000
  412845:	je     0x412861
  412847:	lea    rdx,[rax+rax*2]
  41284b:	lea    rax,[rax+rdx*4]
  41284f:	mov    rdx,QWORD PTR [rbx+0x78]
  412853:	lea    rax,[rdx+rax*8]
  412857:	test   BYTE PTR [rax+0x10],0x5
  41285b:	jne    0x412eeb
  412861:	mov    esi,DWORD PTR [rbx+0x10]
  412864:	test   sil,0x4
  412868:	jne    0x412a30
  41286e:	mov    esi,DWORD PTR [rbx+0x14]
  412871:	mov    eax,esi
  412873:	add    rsp,0x68
  412877:	pop    rbx
  412878:	pop    rsi
  412879:	pop    rdi
  41287a:	pop    rbp
  41287b:	pop    r12
  41287d:	pop    r13
  41287f:	pop    r14
  412881:	pop    r15
  412883:	ret    
  412884:	mov    rax,QWORD PTR [rbx+0xd8]
  41288b:	mov    QWORD PTR [rip+0x12e76],rax        # 0x425708
  412892:	jmp    0x41278e
  412897:	nop    WORD PTR [rax+rax*1+0x0]
  4128a0:	add    rax,0x1
  4128a4:	lea    rdx,[rax+rax*2]
  4128a8:	lea    rdx,[rax+rdx*4]
  4128ac:	mov    rax,QWORD PTR [rbx+0x78]
  4128b0:	lea    rsi,[rax+rdx*8]
  4128b4:	test   BYTE PTR [rsi+0x10],0x20
  4128b8:	jne    0x412910
  4128ba:	or     DWORD PTR [rbx+0x10],0x80000
  4128c1:	cmp    QWORD PTR [rbx+0x58],0x0
  4128c6:	je     0x412bc0
  4128cc:	mov    edx,0x1
  4128d1:	mov    rcx,rbx
  4128d4:	call   0x412530
  4128d9:	test   BYTE PTR [rsi+0x10],0x20
  4128dd:	jne    0x4127d0
  4128e3:	mov    rcx,rbx
  4128e6:	call   0x411cf0
  4128eb:	jmp    0x4127d0
  4128f0:	mov    eax,DWORD PTR [rbx+0x14]
  4128f3:	test   eax,eax
  4128f5:	je     0x412816
  4128fb:	jmp    0x412825
  412900:	mov    esi,DWORD PTR [rbx+0x4]
  412903:	jmp    0x412871
  412908:	nop    DWORD PTR [rax+rax*1+0x0]
  412910:	mov    eax,DWORD PTR [rbx+0x10]
  412913:	jmp    0x4127e8
  412918:	nop    DWORD PTR [rax+rax*1+0x0]
  412920:	lea    rcx,[rip+0x16392]        # 0x428cb9
  412927:	mov    QWORD PTR [rsp+0x40],0x0
  412930:	mov    QWORD PTR [rsp+0x48],0x0
  412939:	mov    DWORD PTR [rsp+0x50],0x4
  412941:	mov    DWORD PTR [rsp+0x54],0x0
  412949:	call   0x422838
  41294e:	test   rax,rax
  412951:	jne    0x412816
  412957:	test   BYTE PTR [rbx+0x10],0x3
  41295b:	je     0x412816
  412961:	mov    ecx,DWORD PTR [rbx+0x4]
  412964:	shl    rcx,0x3
  412968:	call   0x408f90
  41296d:	test   rax,rax
  412970:	mov    r12,rax
  412973:	je     0x412dbf
  412979:	mov    ecx,DWORD PTR [rbx+0x4]
  41297c:	shl    rcx,0x3
  412980:	call   0x408f90
  412985:	test   rax,rax
  412988:	mov    rbp,rax
  41298b:	je     0x412db7
  412991:	lea    r13,[rsp+0x40]
  412996:	mov    r8d,DWORD PTR [rbx+0x4]
  41299a:	mov    DWORD PTR [rbx+0x14],0x1
  4129a1:	mov    QWORD PTR [rbx+0x18],0x0
  4129a9:	mov    eax,0x1
  4129ae:	xor    edi,edi
  4129b0:	lea    rcx,[r13+0x14]
  4129b4:	xor    esi,esi
  4129b6:	mov    QWORD PTR [rsp+0x38],rcx
  4129bb:	cmp    r8d,eax
  4129be:	jbe    0x4129e9
  4129c0:	mov    rcx,QWORD PTR [rbx+0x8]
  4129c4:	mov    edx,eax
  4129c6:	mov    r14,QWORD PTR [rcx+rdx*8]
  4129ca:	cmp    BYTE PTR [r14],0x2d
  4129ce:	je     0x412c1e
  4129d4:	add    eax,0x1
  4129d7:	mov    edx,esi
  4129d9:	add    esi,0x1
  4129dc:	cmp    r8d,eax
  4129df:	mov    DWORD PTR [rbx+0x14],eax
  4129e2:	mov    QWORD PTR [rbp+rdx*8+0x0],r14
  4129e7:	ja     0x4129c0
  4129e9:	call   QWORD PTR [rip+0x24725]        # 0x437114
  4129ef:	mov    DWORD PTR [rax],0x0
  4129f5:	test   edi,edi
  4129f7:	jne    0x412e3d
  4129fd:	test   esi,esi
  4129ff:	je     0x412a19
  412a01:	mov    rax,QWORD PTR [rbx+0x8]
  412a05:	mov    r8d,esi
  412a08:	mov    rdx,rbp
  412a0b:	shl    r8,0x3
  412a0f:	lea    rcx,[rax+rdi*8+0x8]
  412a14:	call   0x422810
  412a19:	mov    rcx,r12
  412a1c:	call   0x422858
  412a21:	mov    rcx,rbp
  412a24:	call   0x422858
  412a29:	jmp    0x412816
  412a2e:	xchg   ax,ax
  412a30:	mov    r9,QWORD PTR [rbx+0x78]
  412a34:	mov    r10d,DWORD PTR [rbx+0xb4]
  412a3b:	mov    rcx,r9
  412a3e:	jmp    0x412a68
  412a40:	movzx  eax,WORD PTR [rcx+0x8]
  412a44:	cmp    ax,0x8000
  412a48:	je     0x412b13
  412a4e:	cmp    ax,WORD PTR [rcx]
  412a51:	je     0x412b13
  412a57:	sub    r10d,0x1
  412a5b:	test   r10d,r10d
  412a5e:	jle    0x412be1
  412a64:	add    rcx,0x68
  412a68:	mov    r11d,DWORD PTR [rcx+0x10]
  412a6c:	test   r11b,0x5
  412a70:	je     0x412a40
  412a72:	mov    rdx,QWORD PTR [rcx+0x28]
  412a76:	test   rdx,rdx
  412a79:	jne    0x412a9a
  412a7b:	jmp    0x412aa4
  412a7d:	nop    DWORD PTR [rax]
  412a80:	lea    r8,[rax+rax*2]
  412a84:	add    rdx,0x4
  412a88:	lea    rax,[rax+r8*4]
  412a8c:	lea    rax,[r9+rax*8]
  412a90:	test   BYTE PTR [rax+0x10],0xf
  412a94:	je     0x412b70
  412a9a:	movsxd rax,DWORD PTR [rdx]
  412a9d:	cmp    eax,0x8000
  412aa2:	jne    0x412a80
  412aa4:	mov    rdx,QWORD PTR [rcx+0x30]
  412aa8:	test   rdx,rdx
  412aab:	je     0x412a40
  412aad:	nop    DWORD PTR [rax]
  412ab0:	movsxd rax,DWORD PTR [rdx]
  412ab3:	cmp    eax,0x8000
  412ab8:	je     0x412a40
  412aba:	lea    r8,[rax+rax*2]
  412abe:	add    rdx,0x4
  412ac2:	lea    rax,[rax+r8*4]
  412ac6:	lea    rax,[r9+rax*8]
  412aca:	test   BYTE PTR [rax+0x10],0x5
  412ace:	je     0x412ab0
  412ad0:	mov    r12,QWORD PTR [rax+0x50]
  412ad4:	mov    rbp,QWORD PTR [rcx+0x50]
  412ad8:	mov    rdi,QWORD PTR [rbx+0x28]
  412adc:	mov    rsi,QWORD PTR [rip+0x12d35]        # 0x425818
  412ae3:	call   QWORD PTR [rip+0x245db]        # 0x4370c4
  412ae9:	lea    rcx,[rax+0x60]
  412aed:	mov    QWORD PTR [rsp+0x20],r12
  412af2:	mov    r9,rbp
  412af5:	mov    r8,rdi
  412af8:	mov    rdx,rsi
  412afb:	call   0x407150
  412b00:	mov    edx,0x1
  412b05:	mov    rcx,rbx
  412b08:	call   QWORD PTR [rbx+0x98]
  412b0e:	jmp    0x41286e
  412b13:	movzx  edi,WORD PTR [rcx+0xa]
  412b17:	cmp    WORD PTR [rcx+0xe],di
  412b1b:	jae    0x412a57
  412b21:	test   r11d,0x100000
  412b28:	je     0x412b34
  412b2a:	and    r11d,0x3
  412b2e:	jne    0x412a57
  412b34:	cmp    di,0x1
  412b38:	jbe    0x412b90
  412b3a:	mov    r12,QWORD PTR [rcx+0x50]
  412b3e:	mov    rbp,QWORD PTR [rbx+0x28]
  412b42:	mov    rsi,QWORD PTR [rip+0x12d87]        # 0x4258d0
  412b49:	call   QWORD PTR [rip+0x24575]        # 0x4370c4
  412b4f:	lea    rcx,[rax+0x60]
  412b53:	mov    DWORD PTR [rsp+0x20],edi
  412b57:	mov    r9,r12
  412b5a:	mov    r8,rbp
  412b5d:	mov    rdx,rsi
  412b60:	call   0x407150
  412b65:	jmp    0x412b00
  412b67:	nop    WORD PTR [rax+rax*1+0x0]
  412b70:	mov    r12,QWORD PTR [rax+0x50]
  412b74:	mov    rbp,QWORD PTR [rcx+0x50]
  412b78:	mov    rdi,QWORD PTR [rbx+0x28]
  412b7c:	mov    rsi,QWORD PTR [rip+0x12d95]        # 0x425918
  412b83:	jmp    0x412ae3
  412b88:	nop    DWORD PTR [rax+rax*1+0x0]
  412b90:	mov    rbp,QWORD PTR [rcx+0x50]
  412b94:	mov    rdi,QWORD PTR [rbx+0x28]
  412b98:	mov    rsi,QWORD PTR [rip+0x12cd1]        # 0x425870
  412b9f:	call   QWORD PTR [rip+0x2451f]        # 0x4370c4
  412ba5:	lea    rcx,[rax+0x60]
  412ba9:	mov    r9,rbp
  412bac:	mov    r8,rdi
  412baf:	mov    rdx,rsi
  412bb2:	call   0x407150
  412bb7:	jmp    0x412b00
  412bbc:	nop    DWORD PTR [rax+0x0]
  412bc0:	xor    edx,edx
  412bc2:	mov    rcx,rbx
  412bc5:	call   0x412530
  412bca:	jmp    0x4127dd
  412bcf:	and    eax,0xfffeffff
  412bd4:	mov    DWORD PTR [rbx+0x10],eax
  412bd7:	call   rdx
  412bd9:	mov    eax,DWORD PTR [rbx+0x10]
  412bdc:	jmp    0x41280d
  412be1:	test   esi,0x200
  412be7:	je     0x412c9a
  412bed:	mov    esi,DWORD PTR [rbx+0x14]
  412bf0:	cmp    DWORD PTR [rbx+0x4],esi
  412bf3:	jbe    0x412871
  412bf9:	mov    rdi,QWORD PTR [rbx+0x28]
  412bfd:	mov    rsi,QWORD PTR [rip+0x12c7c]        # 0x425880
  412c04:	call   QWORD PTR [rip+0x244ba]        # 0x4370c4
  412c0a:	lea    rcx,[rax+0x60]
  412c0e:	mov    r8,rdi
  412c11:	mov    rdx,rsi
  412c14:	call   0x407150
  412c19:	jmp    0x412b00
  412c1e:	movzx  edx,BYTE PTR [r14+0x1]
  412c23:	test   dl,dl
  412c25:	je     0x4129d4
  412c2b:	cmp    dl,0x2d
  412c2e:	jne    0x412d20
  412c34:	cmp    BYTE PTR [r14+0x2],0x0
  412c39:	je     0x412efa
  412c3f:	lea    rdx,[r14+0x2]
  412c43:	mov    r8,r13
  412c46:	mov    rcx,rbx
  412c49:	call   0x40f9a0
  412c4e:	test   eax,eax
  412c50:	js     0x412e2c
  412c56:	mov    r8d,DWORD PTR [rbx+0x14]
  412c5a:	mov    rcx,QWORD PTR [rbx+0x8]
  412c5e:	lea    r15d,[rdi+0x1]
  412c62:	lea    eax,[r8+0x1]
  412c66:	mov    rdx,r8
  412c69:	mov    r8,QWORD PTR [rcx+r8*8]
  412c6d:	mov    ecx,edi
  412c6f:	mov    DWORD PTR [rbx+0x14],eax
  412c72:	mov    QWORD PTR [r12+rcx*8],r8
  412c76:	mov    rcx,QWORD PTR [rsp+0x40]
  412c7b:	mov    ecx,DWORD PTR [rcx+0x10]
  412c7e:	test   ch,0xf0
  412c81:	jne    0x412cc2
  412c83:	cmp    DWORD PTR [rsp+0x54],0x1
  412c88:	je     0x412dd0
  412c8e:	mov    r8d,DWORD PTR [rbx+0x4]
  412c92:	mov    edi,r15d
  412c95:	jmp    0x4129bb
  412c9a:	and    esi,0x400
  412ca0:	je     0x41286e
  412ca6:	mov    esi,DWORD PTR [rbx+0x14]
  412ca9:	cmp    DWORD PTR [rbx+0x4],esi
  412cac:	ja     0x412871
  412cb2:	mov    rdi,QWORD PTR [rbx+0x28]
  412cb6:	mov    rsi,QWORD PTR [rip+0x12b33]        # 0x4257f0
  412cbd:	jmp    0x412c04
  412cc2:	and    ecx,0x10000
  412cc8:	mov    r8,QWORD PTR [rsp+0x48]
  412ccd:	mov    ecx,DWORD PTR [rsp+0x54]
  412cd1:	je     0x412d4f
  412cd3:	cmp    ecx,0x1
  412cd6:	je     0x412d9b
  412cdc:	cmp    ecx,0x2
  412cdf:	jne    0x412d8a
  412ce5:	test   r8,r8
  412ce8:	jne    0x412c8e
  412cea:	mov    r8d,DWORD PTR [rbx+0x4]
  412cee:	cmp    eax,r8d
  412cf1:	jae    0x412ed7
  412cf7:	mov    r9,QWORD PTR [rbx+0x8]
  412cfb:	mov    ecx,eax
  412cfd:	mov    rcx,QWORD PTR [r9+rcx*8]
  412d01:	cmp    BYTE PTR [rcx],0x2d
  412d04:	je     0x412c92
  412d06:	lea    eax,[rdx+0x2]
  412d09:	mov    r10d,r15d
  412d0c:	lea    r15d,[rdi+0x2]
  412d10:	mov    DWORD PTR [rbx+0x14],eax
  412d13:	mov    QWORD PTR [r12+r10*8],rcx
  412d17:	jmp    0x412c92
  412d1c:	nop    DWORD PTR [rax+0x0]
  412d20:	test   BYTE PTR [rbx+0x10],0x2
  412d24:	jne    0x412d3a
  412d26:	lea    rdx,[r14+0x1]
  412d2a:	mov    r8,r13
  412d2d:	mov    rcx,rbx
  412d30:	call   0x40f9a0
  412d35:	jmp    0x412c4e
  412d3a:	mov    r9,QWORD PTR [rsp+0x38]
  412d3f:	mov    r8,r13
  412d42:	mov    rcx,rbx
  412d45:	call   0x408750
  412d4a:	jmp    0x412c4e
  412d4f:	cmp    ecx,0x1
  412d52:	je     0x412dab
  412d54:	cmp    ecx,0x2
  412d57:	jne    0x412d8a
  412d59:	test   r8,r8
  412d5c:	jne    0x412c8e
  412d62:	mov    r8d,DWORD PTR [rbx+0x4]
  412d66:	cmp    eax,r8d
  412d69:	jae    0x412d8a
  412d6b:	mov    rcx,QWORD PTR [rbx+0x8]
  412d6f:	add    edx,0x2
  412d72:	mov    r10d,r15d
  412d75:	mov    DWORD PTR [rbx+0x14],edx
  412d78:	add    edi,0x2
  412d7b:	mov    rax,QWORD PTR [rcx+rax*8]
  412d7f:	mov    QWORD PTR [r12+r10*8],rax
  412d83:	mov    eax,edx
  412d85:	jmp    0x4129bb
  412d8a:	call   QWORD PTR [rip+0x24384]        # 0x437114
  412d90:	mov    DWORD PTR [rax],0x5
  412d96:	jmp    0x412a19
  412d9b:	cmp    BYTE PTR [r14+0x2],0x0
  412da0:	je     0x412cea
  412da6:	jmp    0x412c8e
  412dab:	cmp    BYTE PTR [r14+0x2],0x0
  412db0:	je     0x412d62
  412db2:	jmp    0x412c8e
  412db7:	mov    rcx,r12
  412dba:	call   0x422858
  412dbf:	call   QWORD PTR [rip+0x2434f]        # 0x437114
  412dc5:	mov    DWORD PTR [rax],0xc
  412dcb:	jmp    0x412816
  412dd0:	movzx  eax,BYTE PTR [r14+0x2]
  412dd5:	lea    r11,[r14+0x2]
  412dd9:	lea    r14,[r13+0x14]
  412ddd:	test   al,al
  412ddf:	jne    0x412e12
  412de1:	jmp    0x412ecf
  412de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412df0:	mov    rax,QWORD PTR [rsp+0x40]
  412df5:	mov    r11,QWORD PTR [rsp+0x30]
  412dfa:	mov    eax,DWORD PTR [rax+0x10]
  412dfd:	test   ah,0xf0
  412e00:	jne    0x412e65
  412e02:	add    r11,0x1
  412e06:	movzx  eax,BYTE PTR [r11]
  412e0a:	test   al,al
  412e0c:	je     0x412ecf
  412e12:	movzx  edx,al
  412e15:	mov    r9,r14
  412e18:	mov    r8,r13
  412e1b:	mov    rcx,rbx
  412e1e:	mov    QWORD PTR [rsp+0x30],r11
  412e23:	call   0x408750
  412e28:	test   eax,eax
  412e2a:	jns    0x412df0
  412e2c:	call   QWORD PTR [rip+0x242e2]        # 0x437114
  412e32:	mov    DWORD PTR [rax],0x16
  412e38:	jmp    0x412a19
  412e3d:	mov    rax,QWORD PTR [rbx+0x8]
  412e41:	mov    r8d,edi
  412e44:	mov    rdx,r12
  412e47:	shl    r8,0x3
  412e4b:	lea    rcx,[rax+0x8]
  412e4f:	call   0x422810
  412e54:	jmp    0x4129fd
  412e59:	mov    rcx,QWORD PTR [rip+0x12958]        # 0x4257b8
  412e60:	call   0x4075c0
  412e65:	test   eax,0x10000
  412e6a:	je     0x412ea3
  412e6c:	cmp    BYTE PTR [r11+0x1],0x0
  412e71:	jne    0x412ecf
  412e73:	mov    ecx,DWORD PTR [rbx+0x14]
  412e76:	mov    rdx,QWORD PTR [rbx+0x8]
  412e7a:	mov    rdx,QWORD PTR [rdx+rcx*8]
  412e7e:	mov    rax,rcx
  412e81:	cmp    BYTE PTR [rdx],0x2d
  412e84:	je     0x412c8e
  412e8a:	add    eax,0x1
  412e8d:	mov    r10d,r15d
  412e90:	lea    r15d,[rdi+0x2]
  412e94:	mov    DWORD PTR [rbx+0x14],eax
  412e97:	mov    QWORD PTR [r12+r10*8],rdx
  412e9b:	mov    eax,DWORD PTR [rbx+0x14]
  412e9e:	jmp    0x412c8e
  412ea3:	cmp    BYTE PTR [r11+0x1],0x0
  412ea8:	jne    0x412ecf
  412eaa:	mov    eax,DWORD PTR [rbx+0x14]
  412ead:	cmp    eax,DWORD PTR [rbx+0x4]
  412eb0:	jae    0x412e2c
  412eb6:	mov    rdx,QWORD PTR [rbx+0x8]
  412eba:	lea    ecx,[rax+0x1]
  412ebd:	mov    r10d,r15d
  412ec0:	lea    r15d,[rdi+0x2]
  412ec4:	mov    DWORD PTR [rbx+0x14],ecx
  412ec7:	mov    rax,QWORD PTR [rdx+rax*8]
  412ecb:	mov    QWORD PTR [r12+r10*8],rax
  412ecf:	mov    eax,DWORD PTR [rbx+0x14]
  412ed2:	jmp    0x412c8e
  412ed7:	call   QWORD PTR [rip+0x24237]        # 0x437114
  412edd:	mov    edi,r15d
  412ee0:	mov    DWORD PTR [rax],0x0
  412ee6:	jmp    0x4129f5
  412eeb:	mov    rcx,rbx
  412eee:	call   0x40f490
  412ef3:	xor    ecx,ecx
  412ef5:	call   0x407590
  412efa:	lea    ecx,[rax+0x1]
  412efd:	mov    edx,edi
  412eff:	add    edi,0x1
  412f02:	mov    r9d,esi
  412f05:	cmp    ecx,r8d
  412f08:	mov    DWORD PTR [rbx+0x14],ecx
  412f0b:	mov    QWORD PTR [r12+rdx*8],r14
  412f0f:	mov    edx,ecx
  412f11:	jae    0x4129f5
  412f17:	mov    r10,QWORD PTR [rbx+0x8]
  412f1b:	mov    r11d,edx
  412f1e:	add    edx,0x1
  412f21:	mov    r11,QWORD PTR [r10+r11*8]
  412f25:	mov    r10d,esi
  412f28:	add    esi,0x1
  412f2b:	cmp    edx,r8d
  412f2e:	mov    QWORD PTR [rbp+r10*8+0x0],r11
  412f33:	jne    0x412f17
  412f35:	lea    esi,[rdx+r9*1-0x1]
  412f3a:	lea    edx,[rdx+rcx*1-0x1]
  412f3e:	sub    edx,eax
  412f40:	sub    esi,eax
  412f42:	mov    DWORD PTR [rbx+0x14],edx
  412f45:	jmp    0x4129f5
  412f4a:	nop    WORD PTR [rax+rax*1+0x0]
  412f50:	push   rsi
  412f51:	push   rbx
  412f52:	sub    rsp,0x38
  412f56:	mov    rbx,rcx
  412f59:	lea    rcx,[rcx+0x10]
  412f5d:	mov    esi,edx
  412f5f:	xor    edx,edx
  412f61:	mov    QWORD PTR [rsp+0x28],0x0
  412f6a:	call   0x410970
  412f6f:	test   esi,esi
  412f71:	mov    ecx,DWORD PTR [rbx+0x10]
  412f74:	je     0x412f82
  412f76:	test   ch,0x40
  412f79:	je     0x412f82
  412f7b:	add    rsp,0x38
  412f7f:	pop    rbx
  412f80:	pop    rsi
  412f81:	ret    
  412f82:	test   ch,0x10
  412f85:	lea    rdx,[rsp+0x28]
  412f8a:	jne    0x412ff0
  412f8c:	call   0x407fa0
  412f91:	mov    r8,QWORD PTR [rsp+0x28]
  412f96:	mov    edx,esi
  412f98:	mov    rcx,rbx
  412f9b:	call   0x40ab80
  412fa0:	mov    rcx,QWORD PTR [rip+0x20661]        # 0x433608
  412fa7:	call   0x422888
  412fac:	mov    rcx,QWORD PTR [rip+0x20655]        # 0x433608
  412fb3:	call   0x422890
  412fb8:	test   eax,eax
  412fba:	je     0x412f7b
  412fbc:	call   QWORD PTR [rip+0x24102]        # 0x4370c4
  412fc2:	add    rax,0x60
  412fc6:	cmp    QWORD PTR [rip+0x2063b],rax        # 0x433608
  412fcd:	mov    r8,QWORD PTR [rip+0x12924]        # 0x4258f8
  412fd4:	cmove  r8,QWORD PTR [rip+0x12924]        # 0x425900
  412fdc:	mov    rcx,QWORD PTR [rbx+0x28]
  412fe0:	mov    rdx,QWORD PTR [rip+0x12921]        # 0x425908
  412fe7:	call   0x407b10
  412fec:	nop    DWORD PTR [rax+0x0]
  412ff0:	call   0x407e60
  412ff5:	jmp    0x412f91
  412ff7:	nop    WORD PTR [rax+rax*1+0x0]
  413000:	push   r15
  413002:	push   r14
  413004:	push   r13
  413006:	push   r12
  413008:	push   rbp
  413009:	push   rdi
  41300a:	push   rsi
  41300b:	push   rbx
  41300c:	sub    rsp,0x28
  413010:	mov    rbx,rcx
  413013:	mov    esi,edx
  413015:	mov    r12,r8
  413018:	call   0x4227a8
  41301d:	cmp    rax,0xff
  413023:	mov    rbp,rax
  413026:	jbe    0x413115
  41302c:	test   sil,sil
  41302f:	jne    0x413115
  413035:	mov    rcx,rbx
  413038:	call   0x408d00
  41303d:	mov    rdi,QWORD PTR [rip+0x241f8]        # 0x43723c
  413044:	mov    r13,rax
  413047:	mov    rsi,rax
  41304a:	mov    r14,rsi
  41304d:	nop    DWORD PTR [rax]
  413050:	mov    edx,0xa
  413055:	mov    rcx,r14
  413058:	call   0x4227d0
  41305d:	test   rax,rax
  413060:	mov    rbx,rax
  413063:	je     0x4130f0
  413069:	sub    rax,rsi
  41306c:	lea    r14,[rbx+0x1]
  413070:	cmp    rax,0x27
  413074:	jle    0x413050
  413076:	movsx  ecx,BYTE PTR [rbx+0x1]
  41307a:	mov    r15d,ecx
  41307d:	call   rdi
  41307f:	test   eax,eax
  413081:	je     0x413050
  413083:	cmp    r15b,0x9
  413087:	je     0x413050
  413089:	cmp    r15b,0xa
  41308d:	je     0x4130b3
  41308f:	cmp    r15b,0x20
  413093:	jne    0x4130c1
  413095:	add    rbx,0x8
  413099:	mov    rdx,r14
  41309c:	nop    DWORD PTR [rax+0x0]
  4130a0:	add    rdx,0x1
  4130a4:	cmp    BYTE PTR [rdx],0x20
  4130a7:	jne    0x4130c1
  4130a9:	cmp    rdx,rbx
  4130ac:	jne    0x4130a0
  4130ae:	mov    r14,rdx
  4130b1:	jmp    0x413050
  4130b3:	add    r14,0x1
  4130b7:	movzx  r15d,BYTE PTR [r14]
  4130bb:	cmp    r15b,0xa
  4130bf:	je     0x4130b3
  4130c1:	xor    edx,edx
  4130c3:	mov    rcx,rsi
  4130c6:	mov    BYTE PTR [r14],0x0
  4130ca:	mov    r8,r12
  4130cd:	sub    rsi,r14
  4130d0:	call   0x40ec70
  4130d5:	add    rbp,rsi
  4130d8:	je     0x4130fd
  4130da:	cmp    rbp,0xff
  4130e1:	mov    BYTE PTR [r14],r15b
  4130e4:	mov    rsi,r14
  4130e7:	ja     0x41304a
  4130ed:	nop    DWORD PTR [rax]
  4130f0:	mov    r8,r12
  4130f3:	xor    edx,edx
  4130f5:	mov    rcx,rsi
  4130f8:	call   0x40ec70
  4130fd:	mov    rcx,r13
  413100:	add    rsp,0x28
  413104:	pop    rbx
  413105:	pop    rsi
  413106:	pop    rdi
  413107:	pop    rbp
  413108:	pop    r12
  41310a:	pop    r13
  41310c:	pop    r14
  41310e:	pop    r15
  413110:	jmp    0x422858
  413115:	movzx  edx,sil
  413119:	mov    r8,r12
  41311c:	mov    rcx,rbx
  41311f:	add    rsp,0x28
  413123:	pop    rbx
  413124:	pop    rsi
  413125:	pop    rdi
  413126:	pop    rbp
  413127:	pop    r12
  413129:	pop    r13
  41312b:	pop    r14
  41312d:	pop    r15
  41312f:	jmp    0x40ec70
  413134:	xchg   ax,ax
  413136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413140:	push   rbp
  413141:	push   rdi
  413142:	push   rsi
  413143:	push   rbx
  413144:	sub    rsp,0x58
  413148:	mov    BYTE PTR [rip+0x20511],0x0        # 0x433660
  41314f:	mov    ebp,edx
  413151:	xor    edx,edx
  413153:	mov    rbx,rcx
  413156:	cmp    ebp,0x2750
  41315c:	lea    rcx,[rcx+0x10]
  413160:	je     0x4131a4
  413162:	call   0x410970
  413167:	test   ebp,ebp
  413169:	je     0x4131a9
  41316b:	cmp    DWORD PTR [rbx],0x1dfff
  413171:	jle    0x4133c6
  413177:	cmp    QWORD PTR [rip+0x20489],0x0        # 0x433608
  41317f:	mov    rcx,QWORD PTR [rbx+0xc0]
  413186:	je     0x41366e
  41318c:	test   rcx,rcx
  41318f:	mov    eax,DWORD PTR [rbx+0x10]
  413192:	je     0x4133d4
  413198:	test   eax,0x100000
  41319d:	je     0x4131df
  41319f:	jmp    0x4133d4
  4131a4:	call   0x410970
  4131a9:	cmp    DWORD PTR [rbx],0x1dfff
  4131af:	jle    0x413249
  4131b5:	cmp    QWORD PTR [rip+0x2044b],0x0        # 0x433608
  4131bd:	mov    rcx,QWORD PTR [rbx+0xb8]
  4131c4:	je     0x4135b7
  4131ca:	test   rcx,rcx
  4131cd:	mov    eax,DWORD PTR [rbx+0x10]
  4131d0:	je     0x413257
  4131d6:	test   eax,0x100000
  4131db:	jne    0x413257
  4131dd:	xor    ebp,ebp
  4131df:	test   ah,0x20
  4131e2:	je     0x41349e
  4131e8:	mov    r8,QWORD PTR [rip+0x20419]        # 0x433608
  4131ef:	mov    edx,0x1
  4131f4:	call   0x413000
  4131f9:	mov    rcx,QWORD PTR [rip+0x20408]        # 0x433608
  413200:	call   0x422888
  413205:	mov    rcx,QWORD PTR [rip+0x203fc]        # 0x433608
  41320c:	call   0x422890
  413211:	test   eax,eax
  413213:	je     0x413497
  413219:	call   QWORD PTR [rip+0x23ea5]        # 0x4370c4
  41321f:	add    rax,0x30
  413223:	cmp    QWORD PTR [rip+0x203de],rax        # 0x433608
  41322a:	mov    r8,QWORD PTR [rip+0x126cf]        # 0x425900
  413231:	cmove  r8,QWORD PTR [rip+0x126bf]        # 0x4258f8
  413239:	mov    rcx,QWORD PTR [rbx+0x28]
  41323d:	mov    rdx,QWORD PTR [rip+0x126c4]        # 0x425908
  413244:	call   0x407b10
  413249:	cmp    QWORD PTR [rip+0x203b7],0x0        # 0x433608
  413251:	je     0x4135b5
  413257:	mov    rcx,QWORD PTR [rip+0x203aa]        # 0x433608
  41325e:	mov    rdx,QWORD PTR [rbx+0x60]
  413262:	xor    edi,edi
  413264:	mov    r8,QWORD PTR [rbx+0x28]
  413268:	call   0x407150
  41326d:	mov    ecx,DWORD PTR [rbx+0x10]
  413270:	test   ch,0x10
  413273:	mov    QWORD PTR [rsp+0x30],0x0
  41327c:	lea    rdx,[rsp+0x30]
  413281:	jne    0x4134af
  413287:	call   0x407fa0
  41328c:	lea    rdx,[rip+0x1688e]        # 0x429b21
  413293:	lea    rcx,[rip+0x203e6]        # 0x433680
  41329a:	mov    r8d,eax
  41329d:	mov    esi,eax
  41329f:	call   0x407b30
  4132a4:	test   ebp,ebp
  4132a6:	jne    0x4132b2
  4132a8:	mov    rax,QWORD PTR [rbx+0x78]
  4132ac:	test   BYTE PTR [rax+0x12],0x20
  4132b0:	jne    0x4132c3
  4132b2:	mov    rdx,QWORD PTR [rip+0x2034f]        # 0x433608
  4132b9:	mov    rcx,QWORD PTR [rsp+0x30]
  4132be:	call   0x422868
  4132c3:	lea    eax,[rsi+0xf]
  4132c6:	mov    ecx,0x8
  4132cb:	cdq    
  4132cc:	idiv   ecx
  4132ce:	neg    eax
  4132d0:	add    eax,0x4
  4132d3:	test   eax,eax
  4132d5:	jle    0x4132dd
  4132d7:	mov    DWORD PTR [rip+0x20353],eax        # 0x433630
  4132dd:	mov    r8,QWORD PTR [rsp+0x30]
  4132e2:	mov    edx,ebp
  4132e4:	mov    rcx,rbx
  4132e7:	call   0x40ab80
  4132ec:	mov    eax,DWORD PTR [rbx+0x10]
  4132ef:	mov    edx,eax
  4132f1:	and    edx,0x3
  4132f4:	cmp    edx,0x1
  4132f7:	je     0x41359a
  4132fd:	jb     0x41357f
  413303:	cmp    edx,0x3
  413306:	jne    0x41331e
  413308:	mov    rdx,QWORD PTR [rip+0x202f9]        # 0x433608
  41330f:	mov    rcx,QWORD PTR [rip+0x1266a]        # 0x425980
  413316:	call   0x422868
  41331b:	mov    eax,DWORD PTR [rbx+0x10]
  41331e:	test   al,0x20
  413320:	jne    0x413522
  413326:	test   ah,0x8
  413329:	jne    0x41350a
  41332f:	mov    rcx,QWORD PTR [rbx+0x68]
  413333:	test   rcx,rcx
  413336:	je     0x413344
  413338:	mov    rdx,QWORD PTR [rip+0x202c9]        # 0x433608
  41333f:	call   0x422868
  413344:	test   ebp,ebp
  413346:	je     0x41353d
  41334c:	cmp    DWORD PTR [rbx],0x21fff
  413352:	jle    0x4134e2
  413358:	mov    rcx,QWORD PTR [rbx+0xe0]
  41335f:	test   rcx,rcx
  413362:	je     0x4134e2
  413368:	mov    rdx,QWORD PTR [rip+0x20299]        # 0x433608
  41336f:	call   0x422868
  413374:	mov    rcx,QWORD PTR [rip+0x2028d]        # 0x433608
  41337b:	mov    ebp,edi
  41337d:	call   0x422888
  413382:	mov    rcx,QWORD PTR [rip+0x2027f]        # 0x433608
  413389:	call   0x422890
  41338e:	test   eax,eax
  413390:	je     0x4131f9
  413396:	call   QWORD PTR [rip+0x23d28]        # 0x4370c4
  41339c:	add    rax,0x60
  4133a0:	cmp    QWORD PTR [rip+0x20261],rax        # 0x433608
  4133a7:	mov    r8,QWORD PTR [rip+0x1254a]        # 0x4258f8
  4133ae:	cmove  r8,QWORD PTR [rip+0x1254a]        # 0x425900
  4133b6:	mov    rcx,QWORD PTR [rbx+0x28]
  4133ba:	mov    rdx,QWORD PTR [rip+0x12547]        # 0x425908
  4133c1:	call   0x407b10
  4133c6:	cmp    QWORD PTR [rip+0x2023a],0x0        # 0x433608
  4133ce:	je     0x41366c
  4133d4:	mov    rcx,QWORD PTR [rip+0x2022d]        # 0x433608
  4133db:	mov    rdx,QWORD PTR [rbx+0x60]
  4133df:	mov    edi,ebp
  4133e1:	mov    r8,QWORD PTR [rbx+0x28]
  4133e5:	call   0x407150
  4133ea:	mov    ecx,DWORD PTR [rbx+0x10]
  4133ed:	test   ch,0x40
  4133f0:	je     0x413270
  4133f6:	cmp    DWORD PTR [rbx],0x25fff
  4133fc:	jle    0x4135e0
  413402:	movsxd rax,DWORD PTR [rbx+0xb4]
  413409:	mov    r8,rax
  41340c:	imul   rax,rax,0x68
  413410:	add    rax,QWORD PTR [rbx+0x78]
  413414:	cmp    DWORD PTR [rax+0x14],0x3
  413418:	je     0x413453
  41341a:	mov    edx,DWORD PTR [rbx+0xb0]
  413420:	lea    r9d,[r8+0x1]
  413424:	cmp    r9d,edx
  413427:	jge    0x41377f
  41342d:	sub    edx,0x2
  413430:	sub    edx,r8d
  413433:	add    rdx,0x1
  413437:	imul   rdx,rdx,0x68
  41343b:	add    rdx,rax
  41343e:	jmp    0x413449
  413440:	cmp    rax,rdx
  413443:	je     0x41377f
  413449:	add    rax,0x68
  41344d:	cmp    DWORD PTR [rax+0x14],0x3
  413451:	jne    0x413440
  413453:	and    ecx,0x3
  413456:	cmp    ecx,0x2
  413459:	je     0x413763
  41345f:	cmp    ecx,0x3
  413462:	je     0x413731
  413468:	sub    ecx,0x1
  41346b:	je     0x413731
  413471:	lea    r9,[rsp+0x30]
  413476:	mov    rdx,QWORD PTR [rax+0x50]
  41347a:	mov    r8d,0x14
  413480:	mov    rcx,r9
  413483:	mov    QWORD PTR [rsp+0x28],r9
  413488:	call   0x422798
  41348d:	mov    r9,QWORD PTR [rsp+0x28]
  413492:	jmp    0x413610
  413497:	mov    ecx,ebp
  413499:	call   0x407590
  41349e:	mov    rdx,QWORD PTR [rip+0x20163]        # 0x433608
  4134a5:	call   0x422868
  4134aa:	jmp    0x4131f9
  4134af:	call   0x407e60
  4134b4:	lea    rdx,[rip+0x16666]        # 0x429b21
  4134bb:	lea    rcx,[rip+0x201be]        # 0x433680
  4134c2:	mov    r8d,eax
  4134c5:	mov    esi,eax
  4134c7:	call   0x407b30
  4134cc:	mov    rdx,QWORD PTR [rip+0x20135]        # 0x433608
  4134d3:	mov    ecx,0xa
  4134d8:	call   0x422870
  4134dd:	jmp    0x4132c3
  4134e2:	mov    r8,QWORD PTR [rbx+0x80]
  4134e9:	test   r8,r8
  4134ec:	je     0x413374
  4134f2:	mov    rdx,QWORD PTR [rip+0x124f7]        # 0x4259f0
  4134f9:	mov    rcx,QWORD PTR [rip+0x20108]        # 0x433608
  413500:	call   0x407150
  413505:	jmp    0x413374
  41350a:	mov    rdx,QWORD PTR [rip+0x200f7]        # 0x433608
  413511:	mov    rcx,QWORD PTR [rip+0x12540]        # 0x425a58
  413518:	call   0x422868
  41351d:	jmp    0x41332f
  413522:	mov    rdx,QWORD PTR [rip+0x200df]        # 0x433608
  413529:	mov    rcx,QWORD PTR [rip+0x124a8]        # 0x4259d8
  413530:	call   0x422868
  413535:	mov    eax,DWORD PTR [rbx+0x10]
  413538:	jmp    0x413326
  41353d:	mov    rcx,QWORD PTR [rbx+0x58]
  413541:	test   rcx,rcx
  413544:	jne    0x41368e
  41354a:	test   BYTE PTR [rbx+0x11],0x1
  41354e:	jne    0x41363d
  413554:	cmp    BYTE PTR [rip+0x20105],0x0        # 0x433660
  41355b:	jne    0x4136a6
  413561:	mov    rcx,QWORD PTR [rbx+0x70]
  413565:	test   rcx,rcx
  413568:	je     0x41334c
  41356e:	mov    rdx,QWORD PTR [rip+0x20093]        # 0x433608
  413575:	call   0x422868
  41357a:	jmp    0x41334c
  41357f:	mov    rdx,QWORD PTR [rip+0x20082]        # 0x433608
  413586:	mov    rcx,QWORD PTR [rip+0x12453]        # 0x4259e0
  41358d:	call   0x422868
  413592:	mov    eax,DWORD PTR [rbx+0x10]
  413595:	jmp    0x41331e
  41359a:	mov    rdx,QWORD PTR [rip+0x20067]        # 0x433608
  4135a1:	mov    rcx,QWORD PTR [rip+0x12400]        # 0x4259a8
  4135a8:	call   0x422868
  4135ad:	mov    eax,DWORD PTR [rbx+0x10]
  4135b0:	jmp    0x41331e
  4135b5:	xor    ecx,ecx
  4135b7:	cmp    BYTE PTR [rip+0x20076],0x0        # 0x433634
  4135be:	mov    QWORD PTR [rsp+0x28],rcx
  4135c3:	jne    0x41362c
  4135c5:	call   QWORD PTR [rip+0x23af9]        # 0x4370c4
  4135cb:	mov    rcx,QWORD PTR [rsp+0x28]
  4135d0:	add    rax,0x30
  4135d4:	mov    QWORD PTR [rip+0x2002d],rax        # 0x433608
  4135db:	jmp    0x4131ca
  4135e0:	and    ecx,0x3
  4135e3:	cmp    ecx,0x2
  4135e6:	je     0x41371b
  4135ec:	cmp    ecx,0x3
  4135ef:	je     0x413700
  4135f5:	sub    ecx,0x1
  4135f8:	je     0x413700
  4135fe:	lea    r9,[rsp+0x30]
  413603:	mov    DWORD PTR [rsp+0x30],0x706c6568
  41360b:	mov    BYTE PTR [rsp+0x34],0x0
  413610:	mov    r8,QWORD PTR [rbx+0x28]
  413614:	mov    rdx,QWORD PTR [rip+0x122cd]        # 0x4258e8
  41361b:	mov    rcx,QWORD PTR [rip+0x1ffe6]        # 0x433608
  413622:	call   0x407150
  413627:	jmp    0x4131f9
  41362c:	call   QWORD PTR [rip+0x23a92]        # 0x4370c4
  413632:	mov    rcx,QWORD PTR [rsp+0x28]
  413637:	add    rax,0x60
  41363b:	jmp    0x4135d4
  41363d:	mov    rdx,QWORD PTR [rip+0x1ffc4]        # 0x433608
  413644:	mov    rcx,QWORD PTR [rip+0x123b5]        # 0x425a00
  41364b:	call   0x422868
  413650:	mov    r8,QWORD PTR [rbx+0x30]
  413654:	mov    rdx,QWORD PTR [rip+0x1230d]        # 0x425968
  41365b:	mov    rcx,QWORD PTR [rip+0x1ffa6]        # 0x433608
  413662:	call   0x407150
  413667:	jmp    0x413554
  41366c:	xor    ecx,ecx
  41366e:	mov    QWORD PTR [rsp+0x28],rcx
  413673:	call   QWORD PTR [rip+0x23a4b]        # 0x4370c4
  413679:	add    rax,0x60
  41367d:	mov    rcx,QWORD PTR [rsp+0x28]
  413682:	mov    QWORD PTR [rip+0x1ff7f],rax        # 0x433608
  413689:	jmp    0x41318c
  41368e:	mov    rdx,QWORD PTR [rbx+0x38]
  413692:	mov    r8,QWORD PTR [rbx+0x20]
  413696:	call   0x40dda0
  41369b:	test   BYTE PTR [rbx+0x11],0x1
  41369f:	jne    0x413650
  4136a1:	jmp    0x413554
  4136a6:	mov    rdx,QWORD PTR [rip+0x1ff5b]        # 0x433608
  4136ad:	mov    ecx,0xa
  4136b2:	mov    ebp,DWORD PTR [rbx+0xb0]
  4136b8:	mov    rsi,QWORD PTR [rbx+0x78]
  4136bc:	call   0x422870
  4136c1:	mov    rcx,QWORD PTR [rip+0x1ff40]        # 0x433608
  4136c8:	call   0x422888
  4136cd:	jmp    0x4136e3
  4136cf:	cmp    eax,0x4
  4136d2:	je     0x4136f3
  4136d4:	sub    ebp,0x1
  4136d7:	add    rsi,0x68
  4136db:	test   ebp,ebp
  4136dd:	jle    0x413561
  4136e3:	mov    eax,DWORD PTR [rsi+0x10]
  4136e6:	and    eax,0xf000
  4136eb:	shr    eax,0xc
  4136ee:	cmp    eax,0x2
  4136f1:	jne    0x4136cf
  4136f3:	mov    rdx,rsi
  4136f6:	mov    ecx,0x1
  4136fb:	call   QWORD PTR [rsi+0x38]
  4136fe:	jmp    0x4136d4
  413700:	lea    r9,[rsp+0x30]
  413705:	lea    rsi,[rip+0x155bd]        # 0x428cc9
  41370c:	mov    ecx,0x7
  413711:	mov    rdi,r9
  413714:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  413716:	jmp    0x413610
  41371b:	mov    WORD PTR [rsp+0x30],0x682d
  413722:	mov    BYTE PTR [rsp+0x32],0x0
  413727:	lea    r9,[rsp+0x30]
  41372c:	jmp    0x413610
  413731:	mov    BYTE PTR [rsp+0x31],0x2d
  413736:	mov    BYTE PTR [rsp+0x30],0x2d
  41373b:	lea    r9,[rsp+0x30]
  413740:	mov    rdx,QWORD PTR [rax+0x50]
  413744:	lea    rcx,[rsp+0x32]
  413749:	mov    r8d,0x14
  41374f:	mov    QWORD PTR [rsp+0x28],r9
  413754:	call   0x422798
  413759:	mov    r9,QWORD PTR [rsp+0x28]
  41375e:	jmp    0x413610
  413763:	mov    BYTE PTR [rsp+0x30],0x2d
  413768:	movzx  eax,WORD PTR [rax+0x2]
  41376c:	lea    r9,[rsp+0x30]
  413771:	mov    BYTE PTR [rsp+0x32],0x0
  413776:	mov    BYTE PTR [rsp+0x31],al
  41377a:	jmp    0x413610
  41377f:	mov    rcx,QWORD PTR [rip+0x1202a]        # 0x4257b0
  413786:	call   0x4075c0
  41378b:	nop
  41378c:	nop    DWORD PTR [rax+0x0]
  413790:	sub    rsp,0x28
  413794:	call   0x413140
  413799:	nop
  41379a:	nop    WORD PTR [rax+rax*1+0x0]
  4137a0:	sub    rsp,0x28
  4137a4:	lea    rcx,[rip+0x11c55]        # 0x425400
  4137ab:	xor    edx,edx
  4137ad:	call   0x413140
  4137b2:	nop
  4137b3:	nop    DWORD PTR [rax]
  4137b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4137c0:	lea    rax,[rip+0x15509]        # 0x428cd0
  4137c7:	ret    
  4137c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4137d0:	push   rsi
  4137d1:	push   rbx
  4137d2:	sub    rsp,0x28
  4137d6:	cmp    BYTE PTR [rip+0x1fe57],0x0        # 0x433634
  4137dd:	mov    rbx,rcx
  4137e0:	mov    rsi,rdx
  4137e3:	je     0x413800
  4137e5:	call   QWORD PTR [rip+0x238d9]        # 0x4370c4
  4137eb:	cmp    rbx,0xf
  4137ef:	lea    r8,[rax+0x60]
  4137f3:	ja     0x413810
  4137f5:	add    rsp,0x28
  4137f9:	pop    rbx
  4137fa:	pop    rsi
  4137fb:	ret    
  4137fc:	nop    DWORD PTR [rax+0x0]
  413800:	call   QWORD PTR [rip+0x238be]        # 0x4370c4
  413806:	cmp    rbx,0xf
  41380a:	lea    r8,[rax+0x30]
  41380e:	jbe    0x4137f5
  413810:	xor    r9d,r9d
  413813:	mov    rdx,rsi
  413816:	mov    rcx,rbx
  413819:	add    rsp,0x28
  41381d:	pop    rbx
  41381e:	pop    rsi
  41381f:	jmp    0x410c10
  413824:	xchg   ax,ax
  413826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413830:	push   rsi
  413831:	push   rbx
  413832:	sub    rsp,0x28
  413836:	mov    rbx,rcx
  413839:	mov    rsi,rdx
  41383c:	call   QWORD PTR [rip+0x23882]        # 0x4370c4
  413842:	cmp    rbx,0xf
  413846:	ja     0x413850
  413848:	add    rsp,0x28
  41384c:	pop    rbx
  41384d:	pop    rsi
  41384e:	ret    
  41384f:	nop
  413850:	lea    r8,[rax+0x60]
  413854:	mov    r9d,0x1
  41385a:	mov    rdx,rsi
  41385d:	mov    rcx,rbx
  413860:	add    rsp,0x28
  413864:	pop    rbx
  413865:	pop    rsi
  413866:	jmp    0x410c10
  41386b:	nop
  41386c:	nop
  41386d:	nop
  41386e:	nop
  41386f:	nop
  413870:	push   rbx
  413871:	sub    rsp,0x20
  413875:	call   0x422820
  41387a:	test   rax,rax
  41387d:	mov    rbx,rax
  413880:	je     0x413890
  413882:	mov    rax,rbx
  413885:	add    rsp,0x20
  413889:	pop    rbx
  41388a:	ret    
  41388b:	nop    DWORD PTR [rax+rax*1+0x0]
  413890:	call   QWORD PTR [rip+0x2387e]        # 0x437114
  413896:	mov    DWORD PTR [rax],0xc
  41389c:	mov    rax,rbx
  41389f:	add    rsp,0x20
  4138a3:	pop    rbx
  4138a4:	ret    
  4138a5:	nop
  4138a6:	nop
  4138a7:	nop
  4138a8:	nop
  4138a9:	nop
  4138aa:	nop
  4138ab:	nop
  4138ac:	nop
  4138ad:	nop
  4138ae:	nop
  4138af:	nop
  4138b0:	push   rdi
  4138b1:	push   rsi
  4138b2:	push   rbx
  4138b3:	mov    esi,0x1
  4138b8:	mov    r10d,0x1
  4138be:	xor    r11d,r11d
  4138c1:	mov    rax,0xffffffffffffffff
  4138c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138d0:	lea    r9,[r11+r10*1]
  4138d4:	cmp    r9,rdx
  4138d7:	jae    0x413904
  4138d9:	lea    rbx,[rcx+rax*1]
  4138dd:	movzx  edi,BYTE PTR [rbx+r10*1]
  4138e2:	cmp    BYTE PTR [rcx+r9*1],dil
  4138e6:	jae    0x413970
  4138ec:	mov    r11,r9
  4138ef:	mov    r10d,0x1
  4138f5:	mov    rsi,r9
  4138f8:	lea    r9,[r11+r10*1]
  4138fc:	sub    rsi,rax
  4138ff:	cmp    r9,rdx
  413902:	jb     0x4138d9
  413904:	mov    QWORD PTR [r8],rsi
  413907:	mov    edi,0x1
  41390c:	mov    r10d,0x1
  413912:	xor    r11d,r11d
  413915:	mov    rbx,0xffffffffffffffff
  41391c:	nop    DWORD PTR [rax+0x0]
  413920:	lea    r9,[r11+r10*1]
  413924:	cmp    rdx,r9
  413927:	jbe    0x413950
  413929:	lea    rsi,[rcx+rbx*1]
  41392d:	movzx  esi,BYTE PTR [rsi+r10*1]
  413932:	cmp    BYTE PTR [rcx+r9*1],sil
  413936:	jbe    0x413990
  413938:	mov    r11,r9
  41393b:	mov    r10d,0x1
  413941:	mov    rdi,r9
  413944:	lea    r9,[r11+r10*1]
  413948:	sub    rdi,rbx
  41394b:	cmp    rdx,r9
  41394e:	ja     0x413929
  413950:	add    rbx,0x1
  413954:	add    rax,0x1
  413958:	cmp    rbx,rax
  41395b:	jb     0x413963
  41395d:	mov    QWORD PTR [r8],rdi
  413960:	mov    rax,rbx
  413963:	pop    rbx
  413964:	pop    rsi
  413965:	pop    rdi
  413966:	ret    
  413967:	nop    WORD PTR [rax+rax*1+0x0]
  413970:	je     0x4139b0
  413972:	mov    rax,r11
  413975:	mov    esi,0x1
  41397a:	add    r11,0x1
  41397e:	mov    r10d,0x1
  413984:	jmp    0x4138d0
  413989:	nop    DWORD PTR [rax+0x0]
  413990:	je     0x4139c0
  413992:	mov    rbx,r11
  413995:	mov    edi,0x1
  41399a:	add    r11,0x1
  41399e:	mov    r10d,0x1
  4139a4:	jmp    0x413920
  4139a9:	nop    DWORD PTR [rax+0x0]
  4139b0:	cmp    r10,rsi
  4139b3:	je     0x4139d0
  4139b5:	add    r10,0x1
  4139b9:	jmp    0x4138d0
  4139be:	xchg   ax,ax
  4139c0:	cmp    r10,rdi
  4139c3:	je     0x4139e1
  4139c5:	add    r10,0x1
  4139c9:	jmp    0x413920
  4139ce:	xchg   ax,ax
  4139d0:	mov    rsi,r10
  4139d3:	mov    r11,r9
  4139d6:	mov    r10d,0x1
  4139dc:	jmp    0x4138d0
  4139e1:	mov    rdi,r10
  4139e4:	mov    r11,r9
  4139e7:	mov    r10d,0x1
  4139ed:	jmp    0x413920
  4139f2:	nop    DWORD PTR [rax+0x0]
  4139f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413a00:	push   r15
  413a02:	push   r14
  413a04:	push   r13
  413a06:	push   r12
  413a08:	push   rbp
  413a09:	push   rdi
  413a0a:	push   rsi
  413a0b:	push   rbx
  413a0c:	sub    rsp,0x848
  413a13:	cmp    r9,0x2
  413a17:	mov    rbp,rcx
  413a1a:	mov    r13,rdx
  413a1d:	mov    rbx,r8
  413a20:	mov    rdi,r9
  413a23:	ja     0x413c65
  413a29:	lea    r12,[r9-0x1]
  413a2d:	mov    QWORD PTR [rsp+0x38],0x1
  413a36:	mov    r14d,0x1
  413a3c:	mov    rsi,r12
  413a3f:	lea    r10,[rsp+0x40]
  413a44:	lea    rax,[rsp+0x840]
  413a4c:	nop    DWORD PTR [rax+0x0]
  413a50:	mov    QWORD PTR [r10],rdi
  413a53:	add    r10,0x8
  413a57:	cmp    r10,rax
  413a5a:	jne    0x413a50
  413a5c:	xor    eax,eax
  413a5e:	test   rdi,rdi
  413a61:	je     0x413a7b
  413a63:	movzx  edx,BYTE PTR [rbx+rax*1]
  413a67:	mov    rcx,rsi
  413a6a:	sub    rcx,rax
  413a6d:	add    rax,0x1
  413a71:	cmp    rax,rdi
  413a74:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  413a79:	jne    0x413a63
  413a7b:	lea    rdx,[rbx+r14*1]
  413a7f:	mov    r8,r12
  413a82:	mov    rcx,rbx
  413a85:	call   0x422818
  413a8a:	test   eax,eax
  413a8c:	jne    0x413b8a
  413a92:	lea    rcx,[r12-0x1]
  413a97:	mov    r11d,0x1
  413a9d:	mov    r8,rdi
  413aa0:	sub    r11,r12
  413aa3:	xor    eax,eax
  413aa5:	xor    edx,edx
  413aa7:	sub    r8,r14
  413aaa:	lea    r15,[rbp+rcx*1+0x0]
  413aaf:	mov    QWORD PTR [rsp+0x28],r11
  413ab4:	sub    r13,rdi
  413ab7:	jmp    0x413ada
  413ab9:	nop    DWORD PTR [rax+0x0]
  413ac0:	cmp    r14,r9
  413ac3:	jbe    0x413acc
  413ac5:	test   rax,rax
  413ac8:	cmovne r9,r8
  413acc:	add    rdx,r9
  413acf:	xor    eax,eax
  413ad1:	cmp    r13,rdx
  413ad4:	jb     0x413b76
  413ada:	lea    r10,[rbp+rdx*1+0x0]
  413adf:	movzx  r9d,BYTE PTR [r10+rsi*1]
  413ae4:	mov    r9,QWORD PTR [rsp+r9*8+0x40]
  413ae9:	test   r9,r9
  413aec:	jne    0x413ac0
  413aee:	cmp    rax,r12
  413af1:	mov    r9,r12
  413af4:	cmovae r9,rax
  413af8:	cmp    r9,rsi
  413afb:	jae    0x413b24
  413afd:	lea    rdi,[rbp+r9*1+0x0]
  413b02:	movzx  edi,BYTE PTR [rdi+rdx*1]
  413b06:	cmp    BYTE PTR [rbx+r9*1],dil
  413b0a:	je     0x413b1b
  413b0c:	jmp    0x413b80
  413b0e:	xchg   ax,ax
  413b10:	movzx  edi,BYTE PTR [r10+r9*1]
  413b15:	cmp    BYTE PTR [rbx+r9*1],dil
  413b19:	jne    0x413b80
  413b1b:	add    r9,0x1
  413b1f:	cmp    r9,rsi
  413b22:	jb     0x413b10
  413b24:	cmp    r12,rax
  413b27:	jbe    0x413c86
  413b2d:	movzx  edi,BYTE PTR [r15+rdx*1]
  413b32:	cmp    BYTE PTR [rbx+rcx*1],dil
  413b36:	jne    0x413c86
  413b3c:	mov    r9,rcx
  413b3f:	jmp    0x413b55
  413b41:	movzx  r11d,BYTE PTR [r10+r9*1-0x1]
  413b47:	lea    rdi,[r9-0x1]
  413b4b:	cmp    BYTE PTR [rbx+r9*1-0x1],r11b
  413b50:	jne    0x413b5a
  413b52:	mov    r9,rdi
  413b55:	cmp    r9,rax
  413b58:	jne    0x413b41
  413b5a:	add    rax,0x1
  413b5e:	cmp    rax,r9
  413b61:	ja     0x413c25
  413b67:	add    rdx,r14
  413b6a:	mov    rax,r8
  413b6d:	cmp    r13,rdx
  413b70:	jae    0x413ada
  413b76:	xor    eax,eax
  413b78:	jmp    0x413c28
  413b7d:	nop    DWORD PTR [rax]
  413b80:	add    rdx,QWORD PTR [rsp+0x28]
  413b85:	jmp    0x413acc
  413b8a:	mov    rax,rdi
  413b8d:	lea    rcx,[r12-0x1]
  413b92:	mov    r11d,0x1
  413b98:	sub    rax,r12
  413b9b:	cmp    rax,r12
  413b9e:	lea    r14,[rbp+rcx*1+0x0]
  413ba3:	cmovb  rax,r12
  413ba7:	sub    r11,r12
  413baa:	sub    r13,rdi
  413bad:	lea    r8,[rax+0x1]
  413bb1:	xor    eax,eax
  413bb3:	lea    r10,[rbp+rax*1+0x0]
  413bb8:	movzx  edx,BYTE PTR [r10+rsi*1]
  413bbd:	mov    rdx,QWORD PTR [rsp+rdx*8+0x40]
  413bc2:	test   rdx,rdx
  413bc5:	jne    0x413c40
  413bc7:	cmp    r12,rsi
  413bca:	jae    0x413bf4
  413bcc:	movzx  edx,BYTE PTR [r10+r12*1]
  413bd1:	mov    r9,r12
  413bd4:	cmp    BYTE PTR [rbx+r12*1],dl
  413bd8:	je     0x413beb
  413bda:	jmp    0x413c50
  413bdc:	nop    DWORD PTR [rax+0x0]
  413be0:	movzx  edx,BYTE PTR [r10+r9*1]
  413be5:	cmp    BYTE PTR [rbx+r9*1],dl
  413be9:	jne    0x413c50
  413beb:	add    r9,0x1
  413bef:	cmp    r9,rsi
  413bf2:	jb     0x413be0
  413bf4:	cmp    rcx,0xffffffffffffffff
  413bf8:	mov    r9,rcx
  413bfb:	je     0x413c25
  413bfd:	movzx  edx,BYTE PTR [r14+rax*1]
  413c02:	cmp    BYTE PTR [rbx+rcx*1],dl
  413c05:	je     0x413c1b
  413c07:	jmp    0x413c60
  413c09:	nop    DWORD PTR [rax+0x0]
  413c10:	movzx  edx,BYTE PTR [r10+r9*1]
  413c15:	cmp    BYTE PTR [rbx+r9*1],dl
  413c19:	jne    0x413c60
  413c1b:	sub    r9,0x1
  413c1f:	cmp    r9,0xffffffffffffffff
  413c23:	jne    0x413c10
  413c25:	mov    rax,r10
  413c28:	add    rsp,0x848
  413c2f:	pop    rbx
  413c30:	pop    rsi
  413c31:	pop    rdi
  413c32:	pop    rbp
  413c33:	pop    r12
  413c35:	pop    r13
  413c37:	pop    r14
  413c39:	pop    r15
  413c3b:	ret    
  413c3c:	nop    DWORD PTR [rax+0x0]
  413c40:	add    rax,rdx
  413c43:	cmp    r13,rax
  413c46:	jae    0x413bb3
  413c4c:	xor    eax,eax
  413c4e:	jmp    0x413c28
  413c50:	add    rax,r11
  413c53:	add    rax,r9
  413c56:	jmp    0x413c43
  413c58:	nop    DWORD PTR [rax+rax*1+0x0]
  413c60:	add    rax,r8
  413c63:	jmp    0x413c43
  413c65:	lea    r8,[rsp+0x38]
  413c6a:	mov    rdx,r9
  413c6d:	mov    rcx,rbx
  413c70:	lea    rsi,[rdi-0x1]
  413c74:	call   0x4138b0
  413c79:	mov    r14,QWORD PTR [rsp+0x38]
  413c7e:	mov    r12,rax
  413c81:	jmp    0x413a3f
  413c86:	mov    r9,r12
  413c89:	jmp    0x413b5a
  413c8e:	xchg   ax,ax
  413c90:	push   r15
  413c92:	push   r14
  413c94:	push   r13
  413c96:	push   r12
  413c98:	push   rbp
  413c99:	push   rdi
  413c9a:	push   rsi
  413c9b:	push   rbx
  413c9c:	sub    rsp,0x48
  413ca0:	test   r9,r9
  413ca3:	mov    rax,rcx
  413ca6:	je     0x413e10
  413cac:	cmp    r9,rdx
  413caf:	ja     0x413e05
  413cb5:	cmp    r9,0x1f
  413cb9:	mov    rsi,r9
  413cbc:	mov    rbx,r8
  413cbf:	mov    rbp,rdx
  413cc2:	mov    r12,rcx
  413cc5:	ja     0x413e21
  413ccb:	movzx  edx,BYTE PTR [r8]
  413ccf:	mov    r8,rbp
  413cd2:	call   0x415dd0
  413cd7:	test   rax,rax
  413cda:	mov    rdi,rax
  413cdd:	je     0x413e40
  413ce3:	cmp    rsi,0x1
  413ce7:	je     0x413e40
  413ced:	mov    rcx,r12
  413cf0:	sub    rcx,rax
  413cf3:	xor    eax,eax
  413cf5:	lea    r12,[rcx+rbp*1]
  413cf9:	cmp    rsi,r12
  413cfc:	ja     0x413e10
  413d02:	cmp    rsi,0x2
  413d06:	ja     0x413eff
  413d0c:	lea    rbp,[rsi-0x1]
  413d10:	mov    QWORD PTR [rsp+0x38],0x1
  413d19:	mov    r13d,0x1
  413d1f:	lea    rdx,[rbx+r13*1]
  413d23:	mov    r8,rbp
  413d26:	mov    rcx,rbx
  413d29:	call   0x422818
  413d2e:	test   eax,eax
  413d30:	jne    0x413e45
  413d36:	lea    r9,[rbp-0x1]
  413d3a:	mov    r15,rsi
  413d3d:	mov    r11d,0x1
  413d43:	xor    ecx,ecx
  413d45:	xor    r8d,r8d
  413d48:	sub    r15,r13
  413d4b:	lea    rax,[rdi+r9*1]
  413d4f:	sub    r11,rbp
  413d52:	sub    r12,rsi
  413d55:	mov    QWORD PTR [rsp+0x28],rax
  413d5a:	nop    WORD PTR [rax+rax*1+0x0]
  413d60:	cmp    r8,rbp
  413d63:	mov    r10,rbp
  413d66:	cmovae r10,r8
  413d6a:	cmp    rsi,r10
  413d6d:	jbe    0x413da8
  413d6f:	lea    rax,[rdi+r10*1]
  413d73:	movzx  eax,BYTE PTR [rax+rcx*1]
  413d77:	cmp    BYTE PTR [rbx+r10*1],al
  413d7b:	jne    0x413e30
  413d81:	lea    rax,[rdi+rcx*1]
  413d85:	jmp    0x413d9f
  413d87:	nop    WORD PTR [rax+rax*1+0x0]
  413d90:	movzx  edx,BYTE PTR [rax+r10*1]
  413d95:	cmp    BYTE PTR [rbx+r10*1],dl
  413d99:	jne    0x413e30
  413d9f:	add    r10,0x1
  413da3:	cmp    rsi,r10
  413da6:	ja     0x413d90
  413da8:	cmp    rbp,r8
  413dab:	jbe    0x413ef7
  413db1:	mov    rax,QWORD PTR [rsp+0x28]
  413db6:	movzx  eax,BYTE PTR [rax+rcx*1]
  413dba:	cmp    BYTE PTR [rbx+r9*1],al
  413dbe:	jne    0x413ef7
  413dc4:	mov    rdx,r9
  413dc7:	lea    r10,[rdi+rcx*1]
  413dcb:	jmp    0x413de4
  413dcd:	nop    DWORD PTR [rax]
  413dd0:	movzx  r14d,BYTE PTR [rdx+r10*1-0x1]
  413dd6:	lea    rax,[rdx-0x1]
  413dda:	cmp    BYTE PTR [rbx+rdx*1-0x1],r14b
  413ddf:	jne    0x413de9
  413de1:	mov    rdx,rax
  413de4:	cmp    rdx,r8
  413de7:	jne    0x413dd0
  413de9:	add    r8,0x1
  413ded:	cmp    r8,rdx
  413df0:	ja     0x413f1c
  413df6:	add    rcx,r13
  413df9:	mov    r8,r15
  413dfc:	cmp    r12,rcx
  413dff:	jae    0x413d60
  413e05:	xor    eax,eax
  413e07:	nop    WORD PTR [rax+rax*1+0x0]
  413e10:	add    rsp,0x48
  413e14:	pop    rbx
  413e15:	pop    rsi
  413e16:	pop    rdi
  413e17:	pop    rbp
  413e18:	pop    r12
  413e1a:	pop    r13
  413e1c:	pop    r14
  413e1e:	pop    r15
  413e20:	ret    
  413e21:	call   0x413a00
  413e26:	jmp    0x413e10
  413e28:	nop    DWORD PTR [rax+rax*1+0x0]
  413e30:	add    rcx,r11
  413e33:	xor    r8d,r8d
  413e36:	add    rcx,r10
  413e39:	jmp    0x413dfc
  413e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  413e40:	mov    rax,rdi
  413e43:	jmp    0x413e10
  413e45:	mov    rax,rsi
  413e48:	lea    r8,[rbp-0x1]
  413e4c:	mov    r13d,0x1
  413e52:	sub    rax,rbp
  413e55:	lea    r9,[rdi+rbp*1]
  413e59:	cmp    rax,rbp
  413e5c:	lea    r14,[rdi+r8*1]
  413e60:	cmovb  rax,rbp
  413e64:	sub    r13,rbp
  413e67:	sub    r12,rsi
  413e6a:	lea    r11,[rax+0x1]
  413e6e:	xor    eax,eax
  413e70:	mov    QWORD PTR [rsp+0x38],r11
  413e75:	cmp    rsi,rbp
  413e78:	jbe    0x413ea4
  413e7a:	movzx  ecx,BYTE PTR [r9+rax*1]
  413e7f:	mov    r10,rbp
  413e82:	lea    rdx,[rdi+rax*1]
  413e86:	cmp    BYTE PTR [rbx+rbp*1],cl
  413e89:	je     0x413e9b
  413e8b:	jmp    0x413ee0
  413e8d:	nop    DWORD PTR [rax]
  413e90:	movzx  ecx,BYTE PTR [rdx+r10*1]
  413e95:	cmp    BYTE PTR [rbx+r10*1],cl
  413e99:	jne    0x413ee0
  413e9b:	add    r10,0x1
  413e9f:	cmp    rsi,r10
  413ea2:	ja     0x413e90
  413ea4:	cmp    r8,0xffffffffffffffff
  413ea8:	mov    rdx,r8
  413eab:	je     0x413f25
  413ead:	movzx  ecx,BYTE PTR [r14+rax*1]
  413eb2:	cmp    BYTE PTR [rbx+r8*1],cl
  413eb6:	jne    0x413ef2
  413eb8:	lea    rcx,[rdi+rax*1]
  413ebc:	jmp    0x413ecb
  413ebe:	xchg   ax,ax
  413ec0:	movzx  r15d,BYTE PTR [rcx+rdx*1]
  413ec5:	cmp    BYTE PTR [rbx+rdx*1],r15b
  413ec9:	jne    0x413ef2
  413ecb:	sub    rdx,0x1
  413ecf:	cmp    rdx,0xffffffffffffffff
  413ed3:	jne    0x413ec0
  413ed5:	mov    rax,rcx
  413ed8:	jmp    0x413e10
  413edd:	nop    DWORD PTR [rax]
  413ee0:	add    rax,r13
  413ee3:	add    rax,r10
  413ee6:	cmp    r12,rax
  413ee9:	jae    0x413e75
  413eeb:	xor    eax,eax
  413eed:	jmp    0x413e10
  413ef2:	add    rax,r11
  413ef5:	jmp    0x413ee6
  413ef7:	mov    rdx,rbp
  413efa:	jmp    0x413de9
  413eff:	lea    r8,[rsp+0x38]
  413f04:	mov    rdx,rsi
  413f07:	mov    rcx,rbx
  413f0a:	call   0x4138b0
  413f0f:	mov    r13,QWORD PTR [rsp+0x38]
  413f14:	mov    rbp,rax
  413f17:	jmp    0x413d1f
  413f1c:	lea    rax,[rdi+rcx*1]
  413f20:	jmp    0x413e10
  413f25:	lea    rcx,[rdi+rax*1]
  413f29:	jmp    0x413ed5
  413f2b:	nop
  413f2c:	nop
  413f2d:	nop
  413f2e:	nop
  413f2f:	nop
  413f30:	push   rbx
  413f31:	sub    rsp,0x20
  413f35:	test   rcx,rcx
  413f38:	je     0x413f50
  413f3a:	call   0x4227e0
  413f3f:	mov    rbx,rax
  413f42:	test   rbx,rbx
  413f45:	je     0x413f60
  413f47:	mov    rax,rbx
  413f4a:	add    rsp,0x20
  413f4e:	pop    rbx
  413f4f:	ret    
  413f50:	mov    rcx,rdx
  413f53:	call   0x422820
  413f58:	mov    rbx,rax
  413f5b:	test   rbx,rbx
  413f5e:	jne    0x413f47
  413f60:	call   QWORD PTR [rip+0x231ae]        # 0x437114
  413f66:	mov    DWORD PTR [rax],0xc
  413f6c:	mov    rax,rbx
  413f6f:	add    rsp,0x20
  413f73:	pop    rbx
  413f74:	ret    
  413f75:	nop
  413f76:	nop
  413f77:	nop
  413f78:	nop
  413f79:	nop
  413f7a:	nop
  413f7b:	nop
  413f7c:	nop
  413f7d:	nop
  413f7e:	nop
  413f7f:	nop
  413f80:	push   rbp
  413f81:	push   rdi
  413f82:	push   rsi
  413f83:	push   rbx
  413f84:	sub    rsp,0x38
  413f88:	mov    QWORD PTR [rsp+0x78],r9
  413f8d:	mov    QWORD PTR [rsp+0x20],rdx
  413f92:	lea    r9,[rsp+0x78]
  413f97:	mov    rbp,rdx
  413f9a:	lea    rdx,[rsp+0x20]
  413f9f:	mov    rdi,rcx
  413fa2:	mov    QWORD PTR [rsp+0x28],r9
  413fa7:	call   0x414040
  413fac:	test   rax,rax
  413faf:	mov    rsi,rax
  413fb2:	mov    rbx,QWORD PTR [rsp+0x20]
  413fb7:	je     0x414015
  413fb9:	cmp    rax,rdi
  413fbc:	je     0x413fcb
  413fbe:	test   rbp,rbp
  413fc1:	jne    0x413fe0
  413fc3:	mov    rcx,rsi
  413fc6:	call   0x422858
  413fcb:	cmp    rbx,0x7fffffff
  413fd2:	ja     0x414002
  413fd4:	mov    eax,ebx
  413fd6:	add    rsp,0x38
  413fda:	pop    rbx
  413fdb:	pop    rsi
  413fdc:	pop    rdi
  413fdd:	pop    rbp
  413fde:	ret    
  413fdf:	nop
  413fe0:	lea    rax,[rbp-0x1]
  413fe4:	cmp    rbp,rbx
  413fe7:	mov    rdx,rsi
  413fea:	mov    rcx,rdi
  413fed:	cmova  rax,rbx
  413ff1:	mov    rbp,rax
  413ff4:	mov    r8,rax
  413ff7:	call   0x422810
  413ffc:	mov    BYTE PTR [rdi+rbp*1],0x0
  414000:	jmp    0x413fc3
  414002:	call   QWORD PTR [rip+0x2310c]        # 0x437114
  414008:	mov    DWORD PTR [rax],0x84
  41400e:	mov    eax,0xffffffff
  414013:	jmp    0x413fd6
  414015:	mov    eax,0xffffffff
  41401a:	jmp    0x413fd6
  41401c:	nop
  41401d:	nop
  41401e:	nop
  41401f:	nop
  414020:	sub    rsp,0x38
  414024:	mov    QWORD PTR [rsp+0x58],r9
  414029:	lea    r9,[rsp+0x58]
  41402e:	mov    QWORD PTR [rsp+0x28],r9
  414033:	call   0x41dd50
  414038:	add    rsp,0x38
  41403c:	ret    
  41403d:	nop    DWORD PTR [rax]
  414040:	push   rbp
  414041:	push   r15
  414043:	push   r14
  414045:	push   r13
  414047:	push   r12
  414049:	push   rdi
  41404a:	push   rsi
  41404b:	push   rbx
  41404c:	sub    rsp,0x518
  414053:	lea    rbp,[rsp+0x80]
  41405b:	lea    rax,[rbp+0x110]
  414062:	lea    rdi,[rbp+0x200]
  414069:	mov    rbx,r8
  41406c:	mov    QWORD PTR [rbp+0x4e0],rcx
  414073:	mov    QWORD PTR [rbp+0x4e8],rdx
  41407a:	mov    rcx,rbx
  41407d:	mov    rdx,rdi
  414080:	mov    r8,rax
  414083:	mov    QWORD PTR [rbp+0x60],rdi
  414087:	mov    rsi,r9
  41408a:	mov    QWORD PTR [rbp+0x58],rax
  41408e:	mov    rdi,rax
  414091:	call   0x415f70
  414096:	test   eax,eax
  414098:	js     0x4150e0
  41409e:	mov    rdx,rdi
  4140a1:	mov    rcx,rsi
  4140a4:	call   0x415e80
  4140a9:	test   eax,eax
  4140ab:	js     0x415420
  4140b1:	mov    rax,QWORD PTR [rbp+0x210]
  4140b8:	mov    rdx,0xffffffffffffffff
  4140bf:	add    rax,0x7
  4140c3:	cmp    rax,0x7
  4140c7:	cmovb  rax,rdx
  4140cb:	add    rax,QWORD PTR [rbp+0x218]
  4140d2:	jb     0x414510
  4140d8:	lea    rcx,[rax+0x6]
  4140dc:	cmp    rax,rcx
  4140df:	ja     0x414510
  4140e5:	cmp    rcx,0xf9f
  4140ec:	ja     0x414e50
  4140f2:	add    rax,0x24
  4140f6:	and    rax,0xfffffffffffffff0
  4140fa:	call   0x41d290
  4140ff:	sub    rsp,rax
  414102:	cmp    QWORD PTR [rbp+0x4e0],0x0
  41410a:	mov    QWORD PTR [rbp+0x50],0x0
  414112:	lea    rax,[rsp+0x40]
  414117:	mov    QWORD PTR [rbp+0x90],rax
  41411e:	je     0x414e88
  414124:	mov    rax,QWORD PTR [rbp+0x4e8]
  41412b:	mov    r12,QWORD PTR [rax]
  41412e:	mov    rax,QWORD PTR [rbp+0x4e0]
  414135:	mov    r13,QWORD PTR [rbp+0x208]
  41413c:	mov    rdi,rbx
  41413f:	xor    r15d,r15d
  414142:	mov    QWORD PTR [rbp+0x80],0x0
  41414d:	mov    QWORD PTR [rbp+0x98],rax
  414154:	lea    rax,[rbp+0xbc]
  41415b:	mov    rsi,QWORD PTR [r13+0x0]
  41415f:	mov    QWORD PTR [rbp+0x70],rax
  414163:	lea    rax,[rbp+0xa0]
  41416a:	cmp    rsi,rdi
  41416d:	mov    QWORD PTR [rbp+0x40],rax
  414171:	lea    rax,[rbp+0xd0]
  414178:	mov    QWORD PTR [rbp+0x48],rax
  41417c:	lea    rax,[rbp+0xb4]
  414183:	mov    QWORD PTR [rbp+0x38],rax
  414187:	je     0x414653
  41418d:	sub    rsi,rdi
  414190:	mov    rax,0xffffffffffffffff
  414197:	mov    r14,rsi
  41419a:	add    r14,r15
  41419d:	cmovb  r14,rax
  4141a1:	cmp    r12,r14
  4141a4:	jae    0x414662
  4141aa:	test   r12,r12
  4141ad:	je     0x414570
  4141b3:	js     0x414f80
  4141b9:	add    r12,r12
  4141bc:	cmp    r12,r14
  4141bf:	cmovb  r12,r14
  4141c3:	cmp    r12,0xffffffffffffffff
  4141c7:	je     0x414f80
  4141cd:	mov    rax,QWORD PTR [rbp+0x98]
  4141d4:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4141db:	sete   r8b
  4141df:	test   rax,rax
  4141e2:	mov    BYTE PTR [rbp+0x88],r8b
  4141e9:	je     0x414580
  4141ef:	test   r8b,r8b
  4141f2:	jne    0x414580
  4141f8:	mov    rcx,QWORD PTR [rbp+0x98]
  4141ff:	mov    rdx,r12
  414202:	call   0x413f30
  414207:	movzx  r8d,BYTE PTR [rbp+0x88]
  41420f:	mov    rbx,rax
  414212:	test   rbx,rbx
  414215:	je     0x414f80
  41421b:	test   r15,r15
  41421e:	je     0x414237
  414220:	test   r8b,r8b
  414223:	je     0x414237
  414225:	mov    rdx,QWORD PTR [rbp+0x98]
  41422c:	mov    r8,r15
  41422f:	mov    rcx,rbx
  414232:	call   0x422810
  414237:	lea    rcx,[rbx+r15*1]
  41423b:	mov    r8,rsi
  41423e:	mov    rdx,rdi
  414241:	call   0x422810
  414246:	mov    rax,QWORD PTR [rbp+0x80]
  41424d:	cmp    QWORD PTR [rbp+0x200],rax
  414254:	je     0x415465
  41425a:	movzx  edx,BYTE PTR [r13+0x48]
  41425f:	cmp    dl,0x25
  414262:	je     0x4145a0
  414268:	mov    rax,QWORD PTR [r13+0x50]
  41426c:	cmp    rax,0xffffffffffffffff
  414270:	je     0x414d90
  414276:	cmp    dl,0x6e
  414279:	je     0x414670
  41427f:	shl    rax,0x5
  414283:	cmp    dl,0x73
  414286:	mov    r10,QWORD PTR [rbp+0x118]
  41428d:	je     0x414851
  414293:	mov    eax,DWORD PTR [r10+rax*1]
  414297:	mov    DWORD PTR [rbp+0x88],eax
  41429d:	mov    rcx,QWORD PTR [r13+0x18]
  4142a1:	mov    r9,QWORD PTR [r13+0x20]
  4142a5:	mov    r8d,DWORD PTR [r13+0x10]
  4142a9:	cmp    rcx,r9
  4142ac:	je     0x4150b0
  4142b2:	mov    rax,QWORD PTR [r13+0x28]
  4142b6:	cmp    rax,0xffffffffffffffff
  4142ba:	je     0x414f90
  4142c0:	shl    rax,0x5
  4142c4:	add    rax,r10
  4142c7:	cmp    DWORD PTR [rax],0x5
  4142ca:	jne    0x414d90
  4142d0:	movsxd r15,DWORD PTR [rax+0x10]
  4142d4:	test   r15d,r15d
  4142d7:	js     0x4150a0
  4142dd:	mov    rdx,QWORD PTR [r13+0x30]
  4142e1:	mov    rcx,QWORD PTR [r13+0x38]
  4142e5:	cmp    rdx,rcx
  4142e8:	je     0x414840
  4142ee:	mov    rax,QWORD PTR [r13+0x40]
  4142f2:	cmp    rax,0xffffffffffffffff
  4142f6:	je     0x414fe0
  4142fc:	shl    rax,0x5
  414300:	add    r10,rax
  414303:	cmp    DWORD PTR [r10],0x5
  414307:	jne    0x414d90
  41430d:	movsxd rsi,DWORD PTR [r10+0x10]
  414311:	test   esi,esi
  414313:	js     0x414840
  414319:	mov    DWORD PTR [rbp+0x28],0x1
  414320:	mov    rax,QWORD PTR [rbp+0x90]
  414327:	test   r8b,0x1
  41432b:	mov    BYTE PTR [rax],0x25
  41432e:	lea    rdi,[rax+0x1]
  414332:	je     0x414343
  414334:	mov    rax,QWORD PTR [rbp+0x90]
  41433b:	lea    rdi,[rax+0x2]
  41433f:	mov    BYTE PTR [rax+0x1],0x27
  414343:	test   r8b,0x2
  414347:	je     0x414350
  414349:	mov    BYTE PTR [rdi],0x2d
  41434c:	add    rdi,0x1
  414350:	test   r8b,0x4
  414354:	je     0x41435d
  414356:	mov    BYTE PTR [rdi],0x2b
  414359:	add    rdi,0x1
  41435d:	test   r8b,0x8
  414361:	je     0x41436a
  414363:	mov    BYTE PTR [rdi],0x20
  414366:	add    rdi,0x1
  41436a:	test   r8b,0x10
  41436e:	je     0x414377
  414370:	mov    BYTE PTR [rdi],0x23
  414373:	add    rdi,0x1
  414377:	and    r8d,0x20
  41437b:	je     0x414384
  41437d:	mov    BYTE PTR [rdi],0x30
  414380:	add    rdi,0x1
  414384:	mov    rdx,QWORD PTR [r13+0x18]
  414388:	mov    r8,QWORD PTR [r13+0x20]
  41438c:	cmp    rdx,r8
  41438f:	je     0x4143b3
  414391:	mov    r9,r8
  414394:	mov    rcx,rdi
  414397:	sub    r9,rdx
  41439a:	mov    r8,r9
  41439d:	mov    QWORD PTR [rbp+0x98],r9
  4143a4:	call   0x422810
  4143a9:	mov    r9,QWORD PTR [rbp+0x98]
  4143b0:	add    rdi,r9
  4143b3:	mov    rdx,QWORD PTR [r13+0x30]
  4143b7:	mov    r8,QWORD PTR [r13+0x38]
  4143bb:	cmp    rdx,r8
  4143be:	je     0x4143e2
  4143c0:	mov    r9,r8
  4143c3:	mov    rcx,rdi
  4143c6:	sub    r9,rdx
  4143c9:	mov    r8,r9
  4143cc:	mov    QWORD PTR [rbp+0x98],r9
  4143d3:	call   0x422810
  4143d8:	mov    r9,QWORD PTR [rbp+0x98]
  4143df:	add    rdi,r9
  4143e2:	mov    eax,DWORD PTR [rbp+0x88]
  4143e8:	lea    ecx,[rax-0x7]
  4143eb:	cmp    ecx,0x9
  4143ee:	ja     0x414413
  4143f0:	mov    eax,0x1
  4143f5:	shl    rax,cl
  4143f8:	test   eax,0x283
  4143fd:	jne    0x4149f4
  414403:	test   al,0x20
  414405:	jne    0x4150f0
  41440b:	test   al,0xc
  41440d:	jne    0x415160
  414413:	movzx  eax,BYTE PTR [r13+0x48]
  414418:	mov    BYTE PTR [rdi+0x1],0x0
  41441c:	mov    BYTE PTR [rdi],al
  41441e:	mov    rax,QWORD PTR [r13+0x28]
  414422:	cmp    rax,0xffffffffffffffff
  414426:	je     0x414e10
  41442c:	shl    rax,0x5
  414430:	add    rax,QWORD PTR [rbp+0x118]
  414437:	cmp    DWORD PTR [rax],0x5
  41443a:	jne    0x414d90
  414440:	mov    eax,DWORD PTR [rax+0x10]
  414443:	mov    edx,0x1
  414448:	mov    DWORD PTR [rbp+0xc0],eax
  41444e:	mov    rax,QWORD PTR [r13+0x40]
  414452:	cmp    rax,0xffffffffffffffff
  414456:	je     0x414e00
  41445c:	shl    rax,0x5
  414460:	add    rax,QWORD PTR [rbp+0x118]
  414467:	cmp    DWORD PTR [rax],0x5
  41446a:	jne    0x414d90
  414470:	mov    eax,DWORD PTR [rax+0x10]
  414473:	lea    ecx,[rdx+0x1]
  414476:	mov    DWORD PTR [rbp+0x78],ecx
  414479:	mov    DWORD PTR [rbp+rdx*4+0xc0],eax
  414480:	lea    rax,[r14+0x2]
  414484:	mov    rdx,0xffffffffffffffff
  41448b:	cmp    r14,rax
  41448e:	cmovbe rdx,rax
  414492:	cmp    r12,rdx
  414495:	jae    0x414df0
  41449b:	test   r12,r12
  41449e:	je     0x4146a0
  4144a4:	js     0x4144c1
  4144a6:	add    r12,r12
  4144a9:	cmp    r14,rax
  4144ac:	ja     0x4144c1
  4144ae:	cmp    r12,rax
  4144b1:	jae    0x4146b8
  4144b7:	cmp    rax,0xffffffffffffffff
  4144bb:	jne    0x415dc5
  4144c1:	mov    rax,QWORD PTR [rip+0x22c4c]        # 0x437114
  4144c8:	mov    r15,rbx
  4144cb:	mov    QWORD PTR [rbp+0x68],rax
  4144cf:	mov    QWORD PTR [rbp+0x98],r15
  4144d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144e0:	mov    rax,QWORD PTR [rbp+0x98]
  4144e7:	test   rax,rax
  4144ea:	je     0x4144f9
  4144ec:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4144f3:	jne    0x4151c0
  4144f9:	mov    rax,QWORD PTR [rbp+0x50]
  4144fd:	test   rax,rax
  414500:	je     0x41451b
  414502:	mov    rcx,rax
  414505:	call   0x422858
  41450a:	jmp    0x41451b
  41450c:	nop    DWORD PTR [rax+0x0]
  414510:	mov    rax,QWORD PTR [rip+0x22bfd]        # 0x437114
  414517:	mov    QWORD PTR [rbp+0x68],rax
  41451b:	mov    rax,QWORD PTR [rbp+0x60]
  41451f:	mov    rcx,QWORD PTR [rbp+0x208]
  414526:	add    rax,0x20
  41452a:	cmp    rcx,rax
  41452d:	je     0x414534
  41452f:	call   0x422858
  414534:	mov    rax,QWORD PTR [rbp+0x58]
  414538:	mov    rcx,QWORD PTR [rbp+0x118]
  41453f:	add    rax,0x10
  414543:	cmp    rcx,rax
  414546:	je     0x41454d
  414548:	call   0x422858
  41454d:	mov    rax,QWORD PTR [rbp+0x68]
  414551:	call   rax
  414553:	mov    DWORD PTR [rax],0xc
  414559:	xor    eax,eax
  41455b:	lea    rsp,[rbp+0x498]
  414562:	pop    rbx
  414563:	pop    rsi
  414564:	pop    rdi
  414565:	pop    r12
  414567:	pop    r13
  414569:	pop    r14
  41456b:	pop    r15
  41456d:	pop    rbp
  41456e:	ret    
  41456f:	nop
  414570:	mov    r12d,0xc
  414576:	jmp    0x4141bc
  41457b:	nop    DWORD PTR [rax+rax*1+0x0]
  414580:	mov    rcx,r12
  414583:	call   0x413870
  414588:	movzx  r8d,BYTE PTR [rbp+0x88]
  414590:	mov    rbx,rax
  414593:	jmp    0x414212
  414598:	nop    DWORD PTR [rax+rax*1+0x0]
  4145a0:	cmp    QWORD PTR [r13+0x50],0xffffffffffffffff
  4145a5:	jne    0x414d90
  4145ab:	lea    r15,[r14+0x1]
  4145af:	mov    rax,0xffffffffffffffff
  4145b6:	cmp    r14,r15
  4145b9:	cmova  r15,rax
  4145bd:	cmp    r12,r15
  4145c0:	jae    0x41462a
  4145c2:	test   r12,r12
  4145c5:	je     0x4150c0
  4145cb:	js     0x414f70
  4145d1:	add    r12,r12
  4145d4:	cmp    r12,r15
  4145d7:	cmovb  r12,r15
  4145db:	cmp    r12,0xffffffffffffffff
  4145df:	je     0x414f70
  4145e5:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4145ec:	sete   sil
  4145f0:	test   rbx,rbx
  4145f3:	je     0x4150d0
  4145f9:	test   sil,sil
  4145fc:	jne    0x4150d0
  414602:	mov    rdx,r12
  414605:	mov    rcx,rbx
  414608:	call   0x413f30
  41460d:	mov    r9,rax
  414610:	test   r9,r9
  414613:	je     0x414f70
  414619:	test   r14,r14
  41461c:	je     0x414627
  41461e:	test   sil,sil
  414621:	jne    0x415100
  414627:	mov    rbx,r9
  41462a:	mov    BYTE PTR [rbx+r14*1],0x25
  41462f:	mov    QWORD PTR [rbp+0x98],rbx
  414636:	mov    rdi,QWORD PTR [r13+0x8]
  41463a:	add    r13,0x58
  41463e:	mov    rsi,QWORD PTR [r13+0x0]
  414642:	add    QWORD PTR [rbp+0x80],0x1
  41464a:	cmp    rsi,rdi
  41464d:	jne    0x41418d
  414653:	mov    r14,r15
  414656:	mov    rbx,QWORD PTR [rbp+0x98]
  41465d:	jmp    0x414246
  414662:	mov    rbx,QWORD PTR [rbp+0x98]
  414669:	jmp    0x414237
  41466e:	xchg   ax,ax
  414670:	shl    rax,0x5
  414674:	add    rax,QWORD PTR [rbp+0x118]
  41467b:	mov    edi,DWORD PTR [rax]
  41467d:	lea    edx,[rdi-0x12]
  414680:	cmp    edx,0x4
  414683:	ja     0x414d90
  414689:	lea    rcx,[rip+0x18270]        # 0x42c900
  414690:	mov    rax,QWORD PTR [rax+0x10]
  414694:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  414698:	add    rcx,rdx
  41469b:	jmp    rcx
  41469d:	nop    DWORD PTR [rax]
  4146a0:	cmp    r14,rax
  4146a3:	ja     0x4144c1
  4146a9:	mov    r12d,0xc
  4146af:	cmp    r12,rax
  4146b2:	jb     0x4144b7
  4146b8:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4146bf:	sete   r8b
  4146c3:	test   rbx,rbx
  4146c6:	mov    BYTE PTR [rbp+0x68],r8b
  4146ca:	je     0x414dd0
  4146d0:	test   r8b,r8b
  4146d3:	jne    0x414dd0
  4146d9:	mov    rdx,r12
  4146dc:	mov    rcx,rbx
  4146df:	call   0x413f30
  4146e4:	movzx  r8d,BYTE PTR [rbp+0x68]
  4146e9:	mov    QWORD PTR [rbp+0x98],rax
  4146f0:	cmp    QWORD PTR [rbp+0x98],0x0
  4146f8:	je     0x4144c1
  4146fe:	test   r14,r14
  414701:	je     0x41471a
  414703:	test   r8b,r8b
  414706:	je     0x41471a
  414708:	mov    rcx,QWORD PTR [rbp+0x98]
  41470f:	mov    r8,r14
  414712:	mov    rdx,rbx
  414715:	call   0x422810
  41471a:	mov    rax,QWORD PTR [rbp+0x98]
  414721:	mov    BYTE PTR [rax+r14*1],0x0
  414726:	mov    rax,QWORD PTR [rip+0x229e7]        # 0x437114
  41472d:	mov    QWORD PTR [rbp+0x68],rax
  414731:	call   rax
  414733:	mov    ebx,DWORD PTR [rbp+0x88]
  414739:	mov    eax,DWORD PTR [rax]
  41473b:	mov    QWORD PTR [rbp-0x10],rsi
  41473f:	lea    edx,[rbx-0x9]
  414742:	mov    DWORD PTR [rbp+0x30],eax
  414745:	cmp    edx,0x2
  414748:	sbb    rax,rax
  41474b:	and    eax,0xa
  41474e:	add    rax,0xa
  414752:	cmp    rsi,rax
  414755:	cmovae rax,rsi
  414759:	mov    QWORD PTR [rbp-0x38],rax
  41475d:	add    rax,rax
  414760:	mov    QWORD PTR [rbp+0x20],rax
  414764:	add    rax,0x1
  414768:	cmp    edx,0x2
  41476b:	mov    QWORD PTR [rbp+0x18],rax
  41476f:	sbb    rax,rax
  414772:	and    eax,0xb
  414775:	add    rax,0xb
  414779:	cmp    rsi,rax
  41477c:	cmovae rax,rsi
  414780:	mov    QWORD PTR [rbp-0x18],rax
  414784:	add    rax,0x1
  414788:	cmp    edx,0x2
  41478b:	mov    QWORD PTR [rbp+0x10],rax
  41478f:	sbb    rax,rax
  414792:	mov    edx,0x2693
  414797:	and    eax,0x8
  41479a:	add    rax,0x9
  41479e:	cmp    rsi,rax
  4147a1:	cmovae rax,rsi
  4147a5:	mov    QWORD PTR [rbp-0x20],rax
  4147a9:	add    rax,0x2
  4147ad:	cmp    ebx,0xc
  4147b0:	mov    QWORD PTR [rbp+0x8],rax
  4147b4:	mov    eax,0x273
  4147b9:	cmove  rax,rdx
  4147bd:	mov    QWORD PTR [rbp-0x28],rax
  4147c1:	add    rax,rsi
  4147c4:	cmp    ebx,0xc
  4147c7:	mov    QWORD PTR [rbp+0x0],rax
  4147cb:	sete   al
  4147ce:	movzx  eax,al
  4147d1:	lea    rax,[rax+rax*1+0xd]
  4147d6:	cmp    rsi,rax
  4147d9:	cmovae rax,rsi
  4147dd:	mov    rsi,r12
  4147e0:	mov    QWORD PTR [rbp-0x30],rax
  4147e4:	add    rax,0xc
  4147e8:	mov    QWORD PTR [rbp-0x8],rax
  4147ec:	mov    rax,rsi
  4147ef:	mov    ebx,0x7fffffff
  4147f4:	mov    DWORD PTR [rbp+0xbc],0xffffffff
  4147fe:	sub    rax,r14
  414801:	cmp    rax,0x7fffffff
  414807:	cmovbe rbx,rax
  41480b:	call   QWORD PTR [rip+0x22903]        # 0x437114
  414811:	mov    DWORD PTR [rax],0x0
  414817:	mov    eax,DWORD PTR [rbp+0x88]
  41481d:	cmp    eax,0x11
  414820:	ja     0x414d90
  414826:	mov    edx,eax
  414828:	lea    rax,[rip+0x180e5]        # 0x42c914
  41482f:	movsxd rdx,DWORD PTR [rax+rdx*4]
  414833:	add    rax,rdx
  414836:	jmp    rax
  414838:	nop    DWORD PTR [rax+rax*1+0x0]
  414840:	mov    esi,0x6
  414845:	mov    DWORD PTR [rbp+0x28],0x0
  41484c:	jmp    0x414320
  414851:	add    rax,r10
  414854:	mov    edi,DWORD PTR [rax]
  414856:	cmp    edi,0x10
  414859:	mov    DWORD PTR [rbp+0x88],edi
  41485f:	jne    0x41429d
  414865:	mov    r8,QWORD PTR [r13+0x18]
  414869:	mov    r9,QWORD PTR [r13+0x20]
  41486d:	cmp    r8,r9
  414870:	je     0x414eac
  414876:	mov    rdx,QWORD PTR [r13+0x28]
  41487a:	cmp    rdx,0xffffffffffffffff
  41487e:	je     0x415afd
  414884:	shl    rdx,0x5
  414888:	add    rdx,r10
  41488b:	cmp    DWORD PTR [rdx],0x5
  41488e:	jne    0x414d90
  414894:	movsxd rdx,DWORD PTR [rdx+0x10]
  414898:	mov    rcx,rdx
  41489b:	shr    rcx,0x3f
  41489f:	mov    r8,rcx
  4148a2:	neg    r8
  4148a5:	xor    rdx,r8
  4148a8:	lea    rdi,[rdx+rcx*1]
  4148ac:	mov    QWORD PTR [rbp+0x68],rdi
  4148b0:	mov    r8,QWORD PTR [r13+0x30]
  4148b4:	mov    r11,QWORD PTR [r13+0x38]
  4148b8:	mov    DWORD PTR [rbp+0x88],0x1
  4148c2:	cmp    r8,r11
  4148c5:	je     0x415dbc
  4148cb:	mov    rdx,QWORD PTR [r13+0x40]
  4148cf:	cmp    rdx,0xffffffffffffffff
  4148d3:	je     0x415a9e
  4148d9:	shl    rdx,0x5
  4148dd:	add    r10,rdx
  4148e0:	cmp    DWORD PTR [r10],0x5
  4148e4:	jne    0x414d90
  4148ea:	mov    r9d,DWORD PTR [r10+0x10]
  4148ee:	test   r9d,r9d
  4148f1:	movsxd r15,r9d
  4148f4:	js     0x415a2d
  4148fa:	test   r15,r15
  4148fd:	mov    rsi,QWORD PTR [rax+0x10]
  414901:	mov    DWORD PTR [rbp+0xc0],0x0
  41490b:	je     0x415d90
  414911:	movzx  edx,WORD PTR [rsi]
  414914:	test   dx,dx
  414917:	je     0x415d90
  41491d:	lea    rax,[rbp+0xc0]
  414924:	mov    rcx,rsi
  414927:	mov    QWORD PTR [rbp+0x98],r13
  41492e:	mov    QWORD PTR [rbp+0x78],r12
  414932:	mov    QWORD PTR [rbp+0x30],rsi
  414936:	xor    edi,edi
  414938:	mov    rsi,r15
  41493b:	mov    r12,rcx
  41493e:	mov    r13,rax
  414941:	mov    r15,QWORD PTR [rbp+0x48]
  414945:	jmp    0x414979
  414947:	nop    WORD PTR [rax+rax*1+0x0]
  414950:	cdqe   
  414952:	cmp    rax,rsi
  414955:	ja     0x415820
  41495b:	add    r12,0x2
  41495f:	add    rdi,rax
  414962:	sub    rsi,rax
  414965:	je     0x415820
  41496b:	movzx  edx,WORD PTR [r12]
  414970:	test   dx,dx
  414973:	je     0x415820
  414979:	mov    r8,r13
  41497c:	mov    rcx,r15
  41497f:	call   0x41db30
  414984:	test   eax,eax
  414986:	jns    0x414950
  414988:	test   rbx,rbx
  41498b:	je     0x41499e
  41498d:	cmp    QWORD PTR [rbp+0x4e0],rbx
  414994:	je     0x41499e
  414996:	mov    rcx,rbx
  414999:	call   0x422858
  41499e:	mov    rax,QWORD PTR [rbp+0x50]
  4149a2:	test   rax,rax
  4149a5:	je     0x4149af
  4149a7:	mov    rcx,rax
  4149aa:	call   0x422858
  4149af:	mov    rax,QWORD PTR [rbp+0x60]
  4149b3:	mov    rcx,QWORD PTR [rbp+0x208]
  4149ba:	add    rax,0x20
  4149be:	cmp    rcx,rax
  4149c1:	je     0x4149c8
  4149c3:	call   0x422858
  4149c8:	mov    rax,QWORD PTR [rbp+0x58]
  4149cc:	mov    rcx,QWORD PTR [rbp+0x118]
  4149d3:	add    rax,0x10
  4149d7:	cmp    rcx,rax
  4149da:	je     0x4149e1
  4149dc:	call   0x422858
  4149e1:	call   QWORD PTR [rip+0x2272d]        # 0x437114
  4149e7:	mov    DWORD PTR [rax],0x2a
  4149ed:	xor    eax,eax
  4149ef:	jmp    0x41455b
  4149f4:	mov    BYTE PTR [rdi],0x6c
  4149f7:	add    rdi,0x1
  4149fb:	jmp    0x414413
  414a00:	mov    DWORD PTR [rax],r14d
  414a03:	mov    r15,r14
  414a06:	mov    QWORD PTR [rbp+0x98],rbx
  414a0d:	jmp    0x414636
  414a12:	mov    rax,QWORD PTR [r13+0x50]
  414a16:	shl    rax,0x5
  414a1a:	add    rax,QWORD PTR [rbp+0x118]
  414a21:	mov    r9d,DWORD PTR [rax+0x10]
  414a25:	mov    eax,DWORD PTR [rbp+0x78]
  414a28:	cmp    eax,0x1
  414a2b:	je     0x414c20
  414a31:	cmp    eax,0x2
  414a34:	mov    rax,QWORD PTR [rbp+0x98]
  414a3b:	lea    r12,[rax+r14*1]
  414a3f:	mov    rax,QWORD PTR [rbp+0x70]
  414a43:	jne    0x414d95
  414a49:	mov    QWORD PTR [rsp+0x30],rax
  414a4e:	mov    eax,DWORD PTR [rbp+0xc4]
  414a54:	mov    rdx,rbx
  414a57:	mov    DWORD PTR [rsp+0x28],r9d
  414a5c:	mov    r8,QWORD PTR [rbp+0x90]
  414a63:	mov    rcx,r12
  414a66:	mov    r9d,DWORD PTR [rbp+0xc0]
  414a6d:	mov    DWORD PTR [rsp+0x20],eax
  414a71:	call   0x414020
  414a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a80:	movsxd rdx,DWORD PTR [rbp+0xbc]
  414a87:	test   edx,edx
  414a89:	js     0x414be3
  414a8f:	movsxd rcx,edx
  414a92:	cmp    rcx,rbx
  414a95:	jae    0x414aa2
  414a97:	cmp    BYTE PTR [r12+rcx*1],0x0
  414a9c:	jne    0x414d90
  414aa2:	cmp    eax,edx
  414aa4:	jle    0x414aaf
  414aa6:	mov    DWORD PTR [rbp+0xbc],eax
  414aac:	movsxd rdx,eax
  414aaf:	lea    eax,[rdx+0x1]
  414ab2:	cmp    rax,rbx
  414ab5:	jb     0x415610
  414abb:	cmp    rbx,0x7fffffff
  414ac2:	je     0x415630
  414ac8:	lea    rcx,[rsi+rsi*1]
  414acc:	test   rsi,rsi
  414acf:	mov    rax,0xffffffffffffffff
  414ad6:	cmovs  rcx,rax
  414ada:	add    edx,0x2
  414add:	add    rdx,r14
  414ae0:	jb     0x414aec
  414ae2:	cmp    rcx,rdx
  414ae5:	mov    rax,rdx
  414ae8:	cmovae rax,rcx
  414aec:	cmp    rsi,rax
  414aef:	jae    0x4147ec
  414af5:	test   rsi,rsi
  414af8:	je     0x414db1
  414afe:	js     0x4156b0
  414b04:	add    rsi,rsi
  414b07:	cmp    rsi,rax
  414b0a:	cmovb  rsi,rax
  414b0e:	cmp    rsi,0xffffffffffffffff
  414b12:	je     0x4156b0
  414b18:	mov    rax,QWORD PTR [rbp+0x98]
  414b1f:	cmp    rax,QWORD PTR [rbp+0x4e0]
  414b26:	sete   bl
  414b29:	test   rax,rax
  414b2c:	je     0x414dc0
  414b32:	test   bl,bl
  414b34:	jne    0x414dc0
  414b3a:	mov    rcx,QWORD PTR [rbp+0x98]
  414b41:	mov    rdx,rsi
  414b44:	call   0x413f30
  414b49:	mov    r9,rax
  414b4c:	test   r9,r9
  414b4f:	je     0x4156b0
  414b55:	test   bl,bl
  414b57:	je     0x414b62
  414b59:	test   r14,r14
  414b5c:	jne    0x415040
  414b62:	mov    QWORD PTR [rbp+0x98],r9
  414b69:	jmp    0x4147ec
  414b6e:	xchg   ax,ax
  414b70:	mov    rax,QWORD PTR [r13+0x50]
  414b74:	shl    rax,0x5
  414b78:	add    rax,QWORD PTR [rbp+0x118]
  414b7f:	mov    r9,QWORD PTR [rax+0x10]
  414b83:	mov    eax,DWORD PTR [rbp+0x78]
  414b86:	cmp    eax,0x1
  414b89:	je     0x415060
  414b8f:	cmp    eax,0x2
  414b92:	mov    rax,QWORD PTR [rbp+0x98]
  414b99:	lea    r12,[rax+r14*1]
  414b9d:	mov    rax,QWORD PTR [rbp+0x70]
  414ba1:	jne    0x414e90
  414ba7:	mov    QWORD PTR [rsp+0x30],rax
  414bac:	mov    QWORD PTR [rsp+0x28],r9
  414bb1:	mov    eax,DWORD PTR [rbp+0xc4]
  414bb7:	mov    r9d,DWORD PTR [rbp+0xc0]
  414bbe:	mov    rdx,rbx
  414bc1:	mov    r8,QWORD PTR [rbp+0x90]
  414bc8:	mov    rcx,r12
  414bcb:	mov    DWORD PTR [rsp+0x20],eax
  414bcf:	call   0x414020
  414bd4:	movsxd rdx,DWORD PTR [rbp+0xbc]
  414bdb:	test   edx,edx
  414bdd:	jns    0x414a8f
  414be3:	cmp    BYTE PTR [rdi+0x1],0x0
  414be7:	je     0x414e20
  414bed:	mov    BYTE PTR [rdi+0x1],0x0
  414bf1:	jmp    0x4147ec
  414bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c00:	mov    rax,QWORD PTR [r13+0x50]
  414c04:	shl    rax,0x5
  414c08:	add    rax,QWORD PTR [rbp+0x118]
  414c0f:	movzx  r9d,WORD PTR [rax+0x10]
  414c14:	mov    eax,DWORD PTR [rbp+0x78]
  414c17:	cmp    eax,0x1
  414c1a:	jne    0x414a31
  414c20:	mov    rax,QWORD PTR [rbp+0x98]
  414c27:	mov    DWORD PTR [rsp+0x20],r9d
  414c2c:	mov    rdx,rbx
  414c2f:	mov    r9d,DWORD PTR [rbp+0xc0]
  414c36:	mov    r8,QWORD PTR [rbp+0x90]
  414c3d:	lea    r12,[rax+r14*1]
  414c41:	mov    rax,QWORD PTR [rbp+0x70]
  414c45:	mov    rcx,r12
  414c48:	mov    QWORD PTR [rsp+0x28],rax
  414c4d:	call   0x414020
  414c52:	jmp    0x414a80
  414c57:	nop    WORD PTR [rax+rax*1+0x0]
  414c60:	mov    rax,QWORD PTR [r13+0x50]
  414c64:	shl    rax,0x5
  414c68:	add    rax,QWORD PTR [rbp+0x118]
  414c6f:	movsx  r9d,BYTE PTR [rax+0x10]
  414c74:	mov    eax,DWORD PTR [rbp+0x78]
  414c77:	cmp    eax,0x1
  414c7a:	jne    0x414a31
  414c80:	jmp    0x414c20
  414c82:	mov    rax,QWORD PTR [r13+0x50]
  414c86:	shl    rax,0x5
  414c8a:	add    rax,QWORD PTR [rbp+0x118]
  414c91:	movsd  xmm0,QWORD PTR [rax+0x10]
  414c96:	mov    eax,DWORD PTR [rbp+0x78]
  414c99:	cmp    eax,0x1
  414c9c:	je     0x4155d2
  414ca2:	cmp    eax,0x2
  414ca5:	mov    rax,QWORD PTR [rbp+0x98]
  414cac:	lea    r12,[rax+r14*1]
  414cb0:	mov    rax,QWORD PTR [rbp+0x70]
  414cb4:	jne    0x415194
  414cba:	mov    QWORD PTR [rsp+0x30],rax
  414cbf:	mov    eax,DWORD PTR [rbp+0xc4]
  414cc5:	movsd  QWORD PTR [rsp+0x28],xmm0
  414ccb:	mov    r9d,DWORD PTR [rbp+0xc0]
  414cd2:	mov    r8,QWORD PTR [rbp+0x90]
  414cd9:	mov    rdx,rbx
  414cdc:	mov    rcx,r12
  414cdf:	mov    DWORD PTR [rsp+0x20],eax
  414ce3:	call   0x414020
  414ce8:	jmp    0x414a80
  414ced:	nop    DWORD PTR [rax]
  414cf0:	mov    rax,QWORD PTR [r13+0x50]
  414cf4:	shl    rax,0x5
  414cf8:	add    rax,QWORD PTR [rbp+0x118]
  414cff:	fld    TBYTE PTR [rax+0x10]
  414d02:	mov    eax,DWORD PTR [rbp+0x78]
  414d05:	cmp    eax,0x1
  414d08:	fstp   TBYTE PTR [rbp+0xa0]
  414d0e:	je     0x4155b0
  414d14:	cmp    eax,0x2
  414d17:	mov    rax,QWORD PTR [rbp+0x98]
  414d1e:	lea    r12,[rax+r14*1]
  414d22:	mov    rax,QWORD PTR [rbp+0x70]
  414d26:	jne    0x415174
  414d2c:	mov    QWORD PTR [rsp+0x30],rax
  414d31:	mov    rax,QWORD PTR [rbp+0x40]
  414d35:	mov    QWORD PTR [rsp+0x28],rax
  414d3a:	jmp    0x414bb1
  414d3f:	nop
  414d40:	mov    rax,QWORD PTR [r13+0x50]
  414d44:	shl    rax,0x5
  414d48:	add    rax,QWORD PTR [rbp+0x118]
  414d4f:	movsx  r9d,WORD PTR [rax+0x10]
  414d54:	mov    eax,DWORD PTR [rbp+0x78]
  414d57:	cmp    eax,0x1
  414d5a:	jne    0x414a31
  414d60:	jmp    0x414c20
  414d65:	mov    rax,QWORD PTR [r13+0x50]
  414d69:	shl    rax,0x5
  414d6d:	add    rax,QWORD PTR [rbp+0x118]
  414d74:	movzx  r9d,BYTE PTR [rax+0x10]
  414d79:	mov    eax,DWORD PTR [rbp+0x78]
  414d7c:	cmp    eax,0x1
  414d7f:	jne    0x414a31
  414d85:	jmp    0x414c20
  414d8a:	nop    WORD PTR [rax+rax*1+0x0]
  414d90:	call   0x4228c0
  414d95:	mov    r8,QWORD PTR [rbp+0x90]
  414d9c:	mov    QWORD PTR [rsp+0x20],rax
  414da1:	mov    rdx,rbx
  414da4:	mov    rcx,r12
  414da7:	call   0x414020
  414dac:	jmp    0x414a80
  414db1:	mov    esi,0xc
  414db6:	jmp    0x414b07
  414dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  414dc0:	mov    rcx,rsi
  414dc3:	call   0x413870
  414dc8:	mov    r9,rax
  414dcb:	jmp    0x414b4c
  414dd0:	mov    rcx,r12
  414dd3:	call   0x413870
  414dd8:	movzx  r8d,BYTE PTR [rbp+0x68]
  414ddd:	mov    QWORD PTR [rbp+0x98],rax
  414de4:	jmp    0x4146f0
  414de9:	nop    DWORD PTR [rax+0x0]
  414df0:	mov    QWORD PTR [rbp+0x98],rbx
  414df7:	jmp    0x41471a
  414dfc:	nop    DWORD PTR [rax+0x0]
  414e00:	mov    DWORD PTR [rbp+0x78],edx
  414e03:	jmp    0x414480
  414e08:	nop    DWORD PTR [rax+rax*1+0x0]
  414e10:	xor    edx,edx
  414e12:	jmp    0x41444e
  414e17:	nop    WORD PTR [rax+rax*1+0x0]
  414e20:	test   eax,eax
  414e22:	jns    0x414aa6
  414e28:	movzx  eax,BYTE PTR [r13+0x48]
  414e2d:	mov    rcx,QWORD PTR [r13+0x50]
  414e31:	sub    eax,0x41
  414e34:	cmp    al,0x37
  414e36:	ja     0x414d90
  414e3c:	lea    rdx,[rip+0x17b19]        # 0x42c95c
  414e43:	movzx  eax,al
  414e46:	movsxd rax,DWORD PTR [rdx+rax*4]
  414e4a:	add    rdx,rax
  414e4d:	jmp    rdx
  414e4f:	nop
  414e50:	cmp    rcx,0xffffffffffffffff
  414e54:	je     0x414510
  414e5a:	call   0x413870
  414e5f:	test   rax,rax
  414e62:	mov    QWORD PTR [rbp+0x90],rax
  414e69:	je     0x414510
  414e6f:	cmp    QWORD PTR [rbp+0x4e0],0x0
  414e77:	mov    rax,QWORD PTR [rbp+0x90]
  414e7e:	mov    QWORD PTR [rbp+0x50],rax
  414e82:	jne    0x414124
  414e88:	xor    r12d,r12d
  414e8b:	jmp    0x41412e
  414e90:	mov    r8,QWORD PTR [rbp+0x90]
  414e97:	mov    QWORD PTR [rsp+0x20],rax
  414e9c:	mov    rdx,rbx
  414e9f:	mov    rcx,r12
  414ea2:	call   0x414020
  414ea7:	jmp    0x414a80
  414eac:	mov    r8,QWORD PTR [r13+0x30]
  414eb0:	mov    r11,QWORD PTR [r13+0x38]
  414eb4:	mov    QWORD PTR [rbp+0x68],0x0
  414ebc:	mov    DWORD PTR [rbp+0x88],0x0
  414ec6:	cmp    r8,r11
  414ec9:	jne    0x4148cb
  414ecf:	mov    rsi,QWORD PTR [rax+0x10]
  414ed3:	mov    rcx,rsi
  414ed6:	xor    edi,edi
  414ed8:	xor    r15d,r15d
  414edb:	call   0x422748
  414ee0:	lea    rax,[rsi+rax*2]
  414ee4:	mov    QWORD PTR [rbp+0x98],rax
  414eeb:	xor    r9d,r9d
  414eee:	mov    QWORD PTR [rbp+0x30],0x0
  414ef6:	mov    rcx,QWORD PTR [rbp+0x68]
  414efa:	cmp    QWORD PTR [rbp+0x30],rcx
  414efe:	jae    0x4153c1
  414f04:	test   BYTE PTR [r13+0x10],0x2
  414f09:	jne    0x4153c1
  414f0f:	mov    r11,QWORD PTR [rbp+0x68]
  414f13:	sub    r11,QWORD PTR [rbp+0x30]
  414f17:	mov    rax,r11
  414f1a:	add    rax,r14
  414f1d:	mov    rcx,rax
  414f20:	mov    QWORD PTR [rbp+0x88],rax
  414f27:	mov    rax,0xffffffffffffffff
  414f2e:	cmovae rax,rcx
  414f32:	cmp    r12,rax
  414f35:	jae    0x415cf7
  414f3b:	test   r12,r12
  414f3e:	je     0x415cc2
  414f44:	js     0x414f70
  414f46:	add    r12,r12
  414f49:	cmp    r14,rcx
  414f4c:	ja     0x414f70
  414f4e:	cmp    r12,QWORD PTR [rbp+0x88]
  414f55:	jae    0x41531e
  414f5b:	mov    rax,QWORD PTR [rbp+0x88]
  414f62:	mov    r12,rax
  414f65:	add    rax,0x1
  414f69:	jne    0x41531e
  414f6f:	nop
  414f70:	mov    QWORD PTR [rbp+0x98],rbx
  414f77:	nop    WORD PTR [rax+rax*1+0x0]
  414f80:	mov    rax,QWORD PTR [rip+0x2218d]        # 0x437114
  414f87:	mov    QWORD PTR [rbp+0x68],rax
  414f8b:	jmp    0x4144e0
  414f90:	xor    r15d,r15d
  414f93:	movabs r11,0x1999999999999999
  414f9d:	nop    DWORD PTR [rax]
  414fa0:	add    rcx,0x1
  414fa4:	movsx  eax,BYTE PTR [rcx-0x1]
  414fa8:	mov    rdx,0xffffffffffffffff
  414faf:	sub    eax,0x30
  414fb2:	cmp    r15,r11
  414fb5:	cdqe   
  414fb7:	ja     0x414fc0
  414fb9:	lea    rdx,[r15+r15*4]
  414fbd:	add    rdx,rdx
  414fc0:	add    rdx,rax
  414fc3:	mov    rax,0xffffffffffffffff
  414fca:	mov    r15,rdx
  414fcd:	cmovb  r15,rax
  414fd1:	cmp    rcx,r9
  414fd4:	jne    0x414fa0
  414fd6:	jmp    0x4142dd
  414fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  414fe0:	add    rdx,0x1
  414fe4:	xor    esi,esi
  414fe6:	cmp    rcx,rdx
  414fe9:	je     0x414319
  414fef:	movabs r9,0x1999999999999999
  414ff9:	nop    DWORD PTR [rax+0x0]
  415000:	add    rdx,0x1
  415004:	movsx  eax,BYTE PTR [rdx-0x1]
  415008:	mov    r10,0xffffffffffffffff
  41500f:	sub    eax,0x30
  415012:	cmp    rsi,r9
  415015:	cdqe   
  415017:	ja     0x415020
  415019:	lea    r10,[rsi+rsi*4]
  41501d:	add    r10,r10
  415020:	mov    rsi,r10
  415023:	add    rsi,rax
  415026:	mov    rax,0xffffffffffffffff
  41502d:	cmovb  rsi,rax
  415031:	cmp    rdx,rcx
  415034:	jne    0x415000
  415036:	jmp    0x414319
  41503b:	nop    DWORD PTR [rax+rax*1+0x0]
  415040:	mov    rdx,QWORD PTR [rbp+0x98]
  415047:	mov    r8,r14
  41504a:	mov    rcx,r9
  41504d:	call   0x422810
  415052:	mov    QWORD PTR [rbp+0x98],rax
  415059:	jmp    0x4147ec
  41505e:	xchg   ax,ax
  415060:	mov    rax,QWORD PTR [rbp+0x98]
  415067:	mov    QWORD PTR [rsp+0x20],r9
  41506c:	lea    r12,[rax+r14*1]
  415070:	mov    rax,QWORD PTR [rbp+0x70]
  415074:	mov    QWORD PTR [rsp+0x28],rax
  415079:	mov    r9d,DWORD PTR [rbp+0xc0]
  415080:	mov    r8,QWORD PTR [rbp+0x90]
  415087:	mov    rdx,rbx
  41508a:	mov    rcx,r12
  41508d:	call   0x414020
  415092:	jmp    0x414a80
  415097:	nop    WORD PTR [rax+rax*1+0x0]
  4150a0:	or     r8d,0x2
  4150a4:	neg    r15
  4150a7:	jmp    0x4142dd
  4150ac:	nop    DWORD PTR [rax+0x0]
  4150b0:	xor    r15d,r15d
  4150b3:	jmp    0x4142dd
  4150b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4150c0:	mov    r12d,0xc
  4150c6:	jmp    0x4145d4
  4150cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4150d0:	mov    rcx,r12
  4150d3:	call   0x413870
  4150d8:	mov    r9,rax
  4150db:	jmp    0x414610
  4150e0:	xor    eax,eax
  4150e2:	jmp    0x41455b
  4150e7:	nop    WORD PTR [rax+rax*1+0x0]
  4150f0:	mov    BYTE PTR [rdi],0x4c
  4150f3:	add    rdi,0x1
  4150f7:	jmp    0x414413
  4150fc:	nop    DWORD PTR [rax+0x0]
  415100:	mov    rdx,rbx
  415103:	mov    r8,r14
  415106:	mov    rcx,r9
  415109:	call   0x422810
  41510e:	mov    rbx,rax
  415111:	jmp    0x41462a
  415116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415120:	mov    QWORD PTR [rax],r14
  415123:	mov    r15,r14
  415126:	mov    QWORD PTR [rbp+0x98],rbx
  41512d:	jmp    0x414636
  415132:	mov    WORD PTR [rax],r14w
  415136:	mov    r15,r14
  415139:	mov    QWORD PTR [rbp+0x98],rbx
  415140:	jmp    0x414636
  415145:	mov    BYTE PTR [rax],r14b
  415148:	mov    r15,r14
  41514b:	mov    QWORD PTR [rbp+0x98],rbx
  415152:	jmp    0x414636
  415157:	nop    WORD PTR [rax+rax*1+0x0]
  415160:	mov    BYTE PTR [rdi],0x49
  415163:	mov    BYTE PTR [rdi+0x1],0x36
  415167:	add    rdi,0x3
  41516b:	mov    BYTE PTR [rdi-0x1],0x34
  41516f:	jmp    0x414413
  415174:	mov    r9,QWORD PTR [rbp+0x40]
  415178:	mov    r8,QWORD PTR [rbp+0x90]
  41517f:	mov    rdx,rbx
  415182:	mov    QWORD PTR [rsp+0x20],rax
  415187:	mov    rcx,r12
  41518a:	call   0x414020
  41518f:	jmp    0x414a80
  415194:	mov    r8,QWORD PTR [rbp+0x90]
  41519b:	movapd xmm3,xmm0
  41519f:	movq   r9,xmm0
  4151a4:	mov    QWORD PTR [rsp+0x20],rax
  4151a9:	mov    rdx,rbx
  4151ac:	mov    rcx,r12
  4151af:	call   0x414020
  4151b4:	jmp    0x414a80
  4151b9:	nop    DWORD PTR [rax+0x0]
  4151c0:	mov    rcx,rax
  4151c3:	call   0x422858
  4151c8:	jmp    0x4144f9
  4151cd:	cmp    DWORD PTR [rbp+0x88],0x10
  4151d4:	je     0x414d90
  4151da:	mov    rax,rcx
  4151dd:	mov    edx,DWORD PTR [rbp+0x28]
  4151e0:	shl    rax,0x5
  4151e4:	add    rax,QWORD PTR [rbp+0x118]
  4151eb:	test   edx,edx
  4151ed:	mov    rcx,QWORD PTR [rax+0x10]
  4151f1:	jne    0x415d9e
  4151f7:	call   0x4227a8
  4151fc:	cmp    r15,rax
  4151ff:	jbe    0x415d07
  415205:	lea    rdx,[r15+0x1]
  415209:	mov    rax,r15
  41520c:	cmp    rdx,rax
  41520f:	jae    0x415ba7
  415215:	mov    rdx,0xffffffffffffffff
  41521c:	add    rdx,r14
  41521f:	mov    rax,0xffffffffffffffff
  415226:	cmovb  rdx,rax
  41522a:	test   rsi,rsi
  41522d:	js     0x415cff
  415233:	lea    r8,[rsi+rsi*1]
  415237:	lea    rcx,[r8+0xc]
  41523b:	cmp    r8,rcx
  41523e:	ja     0x414af5
  415244:	cmp    rdx,rcx
  415247:	cmovb  rdx,rcx
  41524b:	cmp    rsi,rdx
  41524e:	mov    rax,rdx
  415251:	jae    0x4147ec
  415257:	jmp    0x414af5
  41525c:	mov    eax,0x13
  415261:	jmp    0x4151fc
  415263:	mov    rcx,QWORD PTR [rbp+0x10]
  415267:	cmp    QWORD PTR [rbp-0x18],rcx
  41526b:	ja     0x4152fd
  415271:	mov    rax,QWORD PTR [rbp+0x10]
  415275:	jmp    0x4151fc
  415277:	xor    edx,edx
  415279:	mov    r11,QWORD PTR [rbp-0x38]
  41527d:	cmp    QWORD PTR [rbp+0x20],r11
  415281:	mov    rax,0xffffffffffffffff
  415288:	jb     0x41520c
  41528a:	mov    r11,QWORD PTR [rbp+0x18]
  41528e:	cmp    QWORD PTR [rbp+0x20],r11
  415292:	ja     0x41520c
  415298:	mov    rax,QWORD PTR [rbp+0x18]
  41529c:	jmp    0x4151fc
  4152a1:	cmp    DWORD PTR [rbp+0x88],0xe
  4152a8:	mov    eax,0x1
  4152ad:	jne    0x4151fc
  4152b3:	mov    rax,QWORD PTR [rip+0x18616]        # 0x42d8d0
  4152ba:	mov    rax,QWORD PTR [rax]
  4152bd:	movsxd rax,DWORD PTR [rax]
  4152c0:	jmp    0x4151fc
  4152c5:	mov    rcx,QWORD PTR [rbp+0x8]
  4152c9:	cmp    QWORD PTR [rbp-0x20],rcx
  4152cd:	ja     0x4152fd
  4152cf:	mov    rax,QWORD PTR [rbp+0x8]
  4152d3:	jmp    0x4151fc
  4152d8:	mov    rcx,QWORD PTR [rbp+0x0]
  4152dc:	cmp    QWORD PTR [rbp-0x28],rcx
  4152e0:	ja     0x4152fd
  4152e2:	mov    rax,QWORD PTR [rbp+0x0]
  4152e6:	jmp    0x4151fc
  4152eb:	mov    rax,QWORD PTR [rbp-0x10]
  4152ef:	add    rax,0xc
  4152f3:	cmp    rax,0xb
  4152f7:	ja     0x4151fc
  4152fd:	xor    edx,edx
  4152ff:	mov    rax,0xffffffffffffffff
  415306:	jmp    0x41520c
  41530b:	mov    rcx,QWORD PTR [rbp-0x30]
  41530f:	cmp    QWORD PTR [rbp-0x8],rcx
  415313:	jb     0x4152fd
  415315:	mov    rax,QWORD PTR [rbp-0x8]
  415319:	jmp    0x4151fc
  41531e:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  415325:	mov    DWORD PTR [rbp+0x20],r9d
  415329:	mov    QWORD PTR [rbp+0x78],r11
  41532d:	sete   r8b
  415331:	test   rbx,rbx
  415334:	mov    BYTE PTR [rbp+0x28],r8b
  415338:	je     0x415cda
  41533e:	test   r8b,r8b
  415341:	jne    0x415cda
  415347:	mov    rdx,r12
  41534a:	mov    rcx,rbx
  41534d:	call   0x413f30
  415352:	movzx  r8d,BYTE PTR [rbp+0x28]
  415357:	mov    r9d,DWORD PTR [rbp+0x20]
  41535b:	mov    r10,rax
  41535e:	mov    r11,QWORD PTR [rbp+0x78]
  415362:	test   r10,r10
  415365:	je     0x414f70
  41536b:	test   r14,r14
  41536e:	je     0x415396
  415370:	test   r8b,r8b
  415373:	je     0x415396
  415375:	mov    rcx,r10
  415378:	mov    r8,r14
  41537b:	mov    rdx,rbx
  41537e:	mov    DWORD PTR [rbp+0x28],r9d
  415382:	mov    QWORD PTR [rbp+0x78],r11
  415386:	call   0x422810
  41538b:	mov    r11,QWORD PTR [rbp+0x78]
  41538f:	mov    r9d,DWORD PTR [rbp+0x28]
  415393:	mov    r10,rax
  415396:	lea    rcx,[r10+r14*1]
  41539a:	mov    r8,r11
  41539d:	mov    edx,0x20
  4153a2:	mov    DWORD PTR [rbp+0x28],r9d
  4153a6:	mov    QWORD PTR [rbp+0x78],r10
  4153aa:	call   0x422800
  4153af:	mov    r10,QWORD PTR [rbp+0x78]
  4153b3:	mov    r14,QWORD PTR [rbp+0x88]
  4153ba:	mov    r9d,DWORD PTR [rbp+0x28]
  4153be:	mov    rbx,r10
  4153c1:	or     r9d,r15d
  4153c4:	je     0x4156c0
  4153ca:	mov    rdx,rdi
  4153cd:	mov    rax,0xffffffffffffffff
  4153d4:	mov    DWORD PTR [rbp+0xb4],0x0
  4153de:	add    rdx,r14
  4153e1:	cmovae rax,rdx
  4153e5:	cmp    rax,r12
  4153e8:	jbe    0x4158c5
  4153ee:	test   r12,r12
  4153f1:	je     0x41585f
  4153f7:	js     0x415405
  4153f9:	add    r12,r12
  4153fc:	cmp    rdx,r14
  4153ff:	jae    0x41586e
  415405:	mov    rax,QWORD PTR [rip+0x21d08]        # 0x437114
  41540c:	mov    QWORD PTR [rbp+0x98],rbx
  415413:	mov    QWORD PTR [rbp+0x68],rax
  415417:	jmp    0x4144e0
  41541c:	nop    DWORD PTR [rax+0x0]
  415420:	mov    rax,QWORD PTR [rbp+0x60]
  415424:	mov    rcx,QWORD PTR [rbp+0x208]
  41542b:	add    rax,0x20
  41542f:	cmp    rcx,rax
  415432:	je     0x415439
  415434:	call   0x422858
  415439:	mov    rax,QWORD PTR [rbp+0x58]
  41543d:	mov    rcx,QWORD PTR [rbp+0x118]
  415444:	add    rax,0x10
  415448:	cmp    rcx,rax
  41544b:	je     0x415452
  41544d:	call   0x422858
  415452:	call   QWORD PTR [rip+0x21cbc]        # 0x437114
  415458:	mov    DWORD PTR [rax],0x16
  41545e:	xor    eax,eax
  415460:	jmp    0x41455b
  415465:	mov    rax,rbx
  415468:	lea    rsi,[r14+0x1]
  41546c:	mov    r15,rbx
  41546f:	mov    QWORD PTR [rbp+0x98],rax
  415476:	mov    rax,0xffffffffffffffff
  41547d:	mov    rbx,r12
  415480:	cmp    rsi,r14
  415483:	mov    rdx,rax
  415486:	cmovae rdx,rsi
  41548a:	cmp    rdx,r12
  41548d:	jbe    0x415518
  415493:	test   r12,r12
  415496:	je     0x415b8a
  41549c:	js     0x415d56
  4154a2:	add    rbx,rbx
  4154a5:	cmp    rsi,r14
  4154a8:	mov    rax,rsi
  4154ab:	jae    0x4154b4
  4154ad:	mov    rax,0xffffffffffffffff
  4154b4:	cmp    rax,rbx
  4154b7:	jbe    0x4154c5
  4154b9:	cmp    rsi,r14
  4154bc:	jb     0x414f80
  4154c2:	mov    rbx,rsi
  4154c5:	cmp    rbx,0xffffffffffffffff
  4154c9:	je     0x414f80
  4154cf:	cmp    QWORD PTR [rbp+0x4e0],r15
  4154d6:	sete   dil
  4154da:	test   r15,r15
  4154dd:	je     0x415c4e
  4154e3:	test   dil,dil
  4154e6:	jne    0x415c4e
  4154ec:	mov    rdx,rbx
  4154ef:	mov    rcx,r15
  4154f2:	call   0x413f30
  4154f7:	mov    r9,rax
  4154fa:	test   r9,r9
  4154fd:	je     0x414f80
  415503:	test   r14,r14
  415506:	je     0x415511
  415508:	test   dil,dil
  41550b:	jne    0x415ca8
  415511:	mov    QWORD PTR [rbp+0x98],r9
  415518:	mov    rax,QWORD PTR [rbp+0x98]
  41551f:	cmp    rax,QWORD PTR [rbp+0x4e0]
  415526:	mov    BYTE PTR [rax+r14*1],0x0
  41552b:	je     0x41554e
  41552d:	cmp    rbx,rsi
  415530:	jbe    0x41554e
  415532:	mov    rdx,rsi
  415535:	mov    rcx,rax
  415538:	mov    rdi,rax
  41553b:	call   0x413f30
  415540:	test   rax,rax
  415543:	cmove  rax,rdi
  415547:	mov    QWORD PTR [rbp+0x98],rax
  41554e:	mov    rax,QWORD PTR [rbp+0x50]
  415552:	test   rax,rax
  415555:	je     0x41555f
  415557:	mov    rcx,rax
  41555a:	call   0x422858
  41555f:	mov    rax,QWORD PTR [rbp+0x60]
  415563:	mov    rcx,QWORD PTR [rbp+0x208]
  41556a:	add    rax,0x20
  41556e:	cmp    rcx,rax
  415571:	je     0x415578
  415573:	call   0x422858
  415578:	mov    rax,QWORD PTR [rbp+0x58]
  41557c:	mov    rcx,QWORD PTR [rbp+0x118]
  415583:	add    rax,0x10
  415587:	cmp    rcx,rax
  41558a:	je     0x415591
  41558c:	call   0x422858
  415591:	mov    rax,QWORD PTR [rbp+0x4e8]
  415598:	mov    QWORD PTR [rax],r14
  41559b:	mov    rax,QWORD PTR [rbp+0x98]
  4155a2:	jmp    0x41455b
  4155a7:	nop    WORD PTR [rax+rax*1+0x0]
  4155b0:	mov    rax,QWORD PTR [rbp+0x98]
  4155b7:	lea    r12,[rax+r14*1]
  4155bb:	mov    rax,QWORD PTR [rbp+0x70]
  4155bf:	mov    QWORD PTR [rsp+0x28],rax
  4155c4:	mov    rax,QWORD PTR [rbp+0x40]
  4155c8:	mov    QWORD PTR [rsp+0x20],rax
  4155cd:	jmp    0x415079
  4155d2:	mov    rax,QWORD PTR [rbp+0x98]
  4155d9:	mov    r9d,DWORD PTR [rbp+0xc0]
  4155e0:	movsd  QWORD PTR [rsp+0x20],xmm0
  4155e6:	mov    r8,QWORD PTR [rbp+0x90]
  4155ed:	mov    rdx,rbx
  4155f0:	lea    r12,[rax+r14*1]
  4155f4:	mov    rax,QWORD PTR [rbp+0x70]
  4155f8:	mov    rcx,r12
  4155fb:	mov    QWORD PTR [rsp+0x28],rax
  415600:	call   0x414020
  415605:	jmp    0x414a80
  41560a:	nop    WORD PTR [rax+rax*1+0x0]
  415610:	lea    r15,[rdx+r14*1]
  415614:	mov    r12,rsi
  415617:	call   QWORD PTR [rip+0x21af7]        # 0x437114
  41561d:	mov    edi,DWORD PTR [rbp+0x30]
  415620:	mov    DWORD PTR [rax],edi
  415622:	jmp    0x414636
  415627:	nop    WORD PTR [rax+rax*1+0x0]
  415630:	mov    rax,QWORD PTR [rbp+0x98]
  415637:	test   rax,rax
  41563a:	je     0x415651
  41563c:	cmp    QWORD PTR [rbp+0x4e0],rax
  415643:	je     0x415651
  415645:	mov    rcx,QWORD PTR [rbp+0x98]
  41564c:	call   0x422858
  415651:	mov    rax,QWORD PTR [rbp+0x50]
  415655:	test   rax,rax
  415658:	je     0x415662
  41565a:	mov    rcx,rax
  41565d:	call   0x422858
  415662:	mov    rax,QWORD PTR [rbp+0x60]
  415666:	mov    rcx,QWORD PTR [rbp+0x208]
  41566d:	add    rax,0x20
  415671:	cmp    rcx,rax
  415674:	je     0x41567b
  415676:	call   0x422858
  41567b:	mov    rax,QWORD PTR [rbp+0x58]
  41567f:	mov    rcx,QWORD PTR [rbp+0x118]
  415686:	add    rax,0x10
  41568a:	cmp    rcx,rax
  41568d:	je     0x415694
  41568f:	call   0x422858
  415694:	call   QWORD PTR [rip+0x21a7a]        # 0x437114
  41569a:	mov    DWORD PTR [rax],0x84
  4156a0:	xor    eax,eax
  4156a2:	jmp    0x41455b
  4156a7:	nop    WORD PTR [rax+rax*1+0x0]
  4156b0:	mov    rax,QWORD PTR [rbp+0x98]
  4156b7:	mov    r15,rax
  4156ba:	jmp    0x4144cf
  4156bf:	nop
  4156c0:	cmp    rsi,QWORD PTR [rbp+0x98]
  4156c7:	mov    DWORD PTR [rbp+0xb8],0x0
  4156d1:	jae    0x415db4
  4156d7:	movzx  edx,WORD PTR [rsi]
  4156da:	test   dx,dx
  4156dd:	je     0x414d90
  4156e3:	lea    rax,[rbp+0xb8]
  4156ea:	mov    rdi,QWORD PTR [rbp+0x48]
  4156ee:	mov    QWORD PTR [rbp+0x28],r13
  4156f2:	mov    QWORD PTR [rbp+0x88],rax
  4156f9:	nop    DWORD PTR [rax+0x0]
  415700:	mov    r8,QWORD PTR [rbp+0x88]
  415707:	mov    rcx,rdi
  41570a:	call   0x41db30
  41570f:	test   eax,eax
  415711:	jle    0x415c5e
  415717:	movsxd r13,eax
  41571a:	mov    rax,0xffffffffffffffff
  415721:	mov    r15,r13
  415724:	add    r15,r14
  415727:	cmovae rax,r15
  41572b:	cmp    rax,r12
  41572e:	jbe    0x4157be
  415734:	test   r12,r12
  415737:	je     0x415760
  415739:	js     0x415743
  41573b:	add    r12,r12
  41573e:	cmp    r15,r14
  415741:	jae    0x41576b
  415743:	mov    rax,QWORD PTR [rip+0x219ca]        # 0x437114
  41574a:	mov    QWORD PTR [rbp+0x98],rbx
  415751:	mov    QWORD PTR [rbp+0x68],rax
  415755:	jmp    0x4144e0
  41575a:	nop    WORD PTR [rax+rax*1+0x0]
  415760:	cmp    r15,r14
  415763:	jb     0x415743
  415765:	mov    r12d,0xc
  41576b:	cmp    r12,r15
  41576e:	jae    0x415780
  415770:	cmp    r15,0xffffffffffffffff
  415774:	mov    r12,r15
  415777:	je     0x415743
  415779:	nop    DWORD PTR [rax+0x0]
  415780:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  415787:	sete   r8b
  41578b:	test   rbx,rbx
  41578e:	mov    BYTE PTR [rbp+0x78],r8b
  415792:	je     0x4157f2
  415794:	test   r8b,r8b
  415797:	jne    0x4157f2
  415799:	mov    rdx,r12
  41579c:	mov    rcx,rbx
  41579f:	call   0x413f30
  4157a4:	movzx  r8d,BYTE PTR [rbp+0x78]
  4157a9:	mov    r10,rax
  4157ac:	test   r10,r10
  4157af:	je     0x415743
  4157b1:	test   r14,r14
  4157b4:	je     0x4157bb
  4157b6:	test   r8b,r8b
  4157b9:	jne    0x415804
  4157bb:	mov    rbx,r10
  4157be:	lea    rcx,[rbx+r14*1]
  4157c2:	mov    r8,r13
  4157c5:	mov    rdx,rdi
  4157c8:	add    rsi,0x2
  4157cc:	call   0x422810
  4157d1:	cmp    rsi,QWORD PTR [rbp+0x98]
  4157d8:	jae    0x415c88
  4157de:	movzx  edx,WORD PTR [rsi]
  4157e1:	test   dx,dx
  4157e4:	je     0x414d90
  4157ea:	mov    r14,r15
  4157ed:	jmp    0x415700
  4157f2:	mov    rcx,r12
  4157f5:	call   0x413870
  4157fa:	movzx  r8d,BYTE PTR [rbp+0x78]
  4157ff:	mov    r10,rax
  415802:	jmp    0x4157ac
  415804:	mov    rdx,rbx
  415807:	mov    r8,r14
  41580a:	mov    rcx,r10
  41580d:	call   0x422810
  415812:	mov    rbx,rax
  415815:	jmp    0x4157be
  415817:	nop    WORD PTR [rax+rax*1+0x0]
  415820:	mov    r13,QWORD PTR [rbp+0x98]
  415827:	mov    rsi,QWORD PTR [rbp+0x30]
  41582b:	mov    QWORD PTR [rbp+0x98],r12
  415832:	mov    r12,QWORD PTR [rbp+0x78]
  415836:	mov    ecx,DWORD PTR [rbp+0x88]
  41583c:	mov    r15d,0x1
  415842:	test   ecx,ecx
  415844:	je     0x414eeb
  41584a:	mov    QWORD PTR [rbp+0x30],rdi
  41584e:	mov    r9d,0x1
  415854:	mov    r15d,0x1
  41585a:	jmp    0x414ef6
  41585f:	cmp    rdx,r14
  415862:	jb     0x415405
  415868:	mov    r12d,0xc
  41586e:	cmp    r12,rdx
  415871:	jae    0x415880
  415873:	cmp    rdx,0xffffffffffffffff
  415877:	je     0x415405
  41587d:	mov    r12,rdx
  415880:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  415887:	sete   r15b
  41588b:	test   rbx,rbx
  41588e:	je     0x415c98
  415894:	test   r15b,r15b
  415897:	jne    0x415c98
  41589d:	mov    rdx,r12
  4158a0:	mov    rcx,rbx
  4158a3:	call   0x413f30
  4158a8:	mov    r9,rax
  4158ab:	test   r9,r9
  4158ae:	je     0x415405
  4158b4:	test   r14,r14
  4158b7:	je     0x4158c2
  4158b9:	test   r15b,r15b
  4158bc:	jne    0x415d10
  4158c2:	mov    rbx,r9
  4158c5:	test   rdi,rdi
  4158c8:	je     0x415dac
  4158ce:	movzx  edx,WORD PTR [rsi]
  4158d1:	test   dx,dx
  4158d4:	je     0x414d90
  4158da:	mov    r15,r14
  4158dd:	mov    QWORD PTR [rbp+0x88],r13
  4158e4:	mov    QWORD PTR [rbp+0x78],r12
  4158e8:	mov    r13,QWORD PTR [rbp+0x48]
  4158ec:	mov    r14,QWORD PTR [rbp+0x38]
  4158f0:	jmp    0x4158fe
  4158f2:	movzx  edx,WORD PTR [rsi]
  4158f5:	test   dx,dx
  4158f8:	je     0x414d90
  4158fe:	mov    r8,r14
  415901:	mov    rcx,r13
  415904:	call   0x41db30
  415909:	test   eax,eax
  41590b:	jle    0x414d90
  415911:	movsxd r12,eax
  415914:	lea    rcx,[rbx+r15*1]
  415918:	mov    rdx,r13
  41591b:	mov    r8,r12
  41591e:	add    r15,r12
  415921:	add    rsi,0x2
  415925:	call   0x422810
  41592a:	sub    rdi,r12
  41592d:	jne    0x4158f2
  41592f:	mov    r13,QWORD PTR [rbp+0x88]
  415936:	mov    r12,QWORD PTR [rbp+0x78]
  41593a:	cmp    rsi,QWORD PTR [rbp+0x98]
  415941:	jne    0x414d90
  415947:	mov    QWORD PTR [rbp+0x98],rbx
  41594e:	mov    rdi,QWORD PTR [rbp+0x68]
  415952:	cmp    QWORD PTR [rbp+0x30],rdi
  415956:	jae    0x414636
  41595c:	test   BYTE PTR [r13+0x10],0x2
  415961:	je     0x414636
  415967:	sub    rdi,QWORD PTR [rbp+0x30]
  41596b:	mov    rax,0xffffffffffffffff
  415972:	mov    rbx,rdi
  415975:	add    rbx,r15
  415978:	cmovae rax,rbx
  41597c:	cmp    r12,rax
  41597f:	jae    0x415d4a
  415985:	test   r12,r12
  415988:	je     0x415d26
  41598e:	js     0x414f80
  415994:	add    r12,r12
  415997:	cmp    r15,rbx
  41599a:	ja     0x414f80
  4159a0:	cmp    r12,rbx
  4159a3:	jae    0x4159b2
  4159a5:	cmp    rbx,0xffffffffffffffff
  4159a9:	mov    r12,rbx
  4159ac:	je     0x414f80
  4159b2:	mov    rax,QWORD PTR [rbp+0x98]
  4159b9:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4159c0:	sete   sil
  4159c4:	test   rax,rax
  4159c7:	je     0x415d3a
  4159cd:	test   sil,sil
  4159d0:	jne    0x415d3a
  4159d6:	mov    rcx,QWORD PTR [rbp+0x98]
  4159dd:	mov    rdx,r12
  4159e0:	call   0x413f30
  4159e5:	mov    r14,rax
  4159e8:	test   r14,r14
  4159eb:	je     0x414f80
  4159f1:	test   r15,r15
  4159f4:	je     0x415a0d
  4159f6:	test   sil,sil
  4159f9:	je     0x415a0d
  4159fb:	mov    rdx,QWORD PTR [rbp+0x98]
  415a02:	mov    r8,r15
  415a05:	mov    rcx,r14
  415a08:	call   0x422810
  415a0d:	lea    rcx,[r14+r15*1]
  415a11:	mov    r8,rdi
  415a14:	mov    edx,0x20
  415a19:	mov    r15,rbx
  415a1c:	call   0x422800
  415a21:	mov    QWORD PTR [rbp+0x98],r14
  415a28:	jmp    0x414636
  415a2d:	mov    rsi,QWORD PTR [rax+0x10]
  415a31:	mov    eax,DWORD PTR [rbp+0x88]
  415a37:	test   eax,eax
  415a39:	je     0x414ed3
  415a3f:	movzx  edx,WORD PTR [rsi]
  415a42:	mov    DWORD PTR [rbp+0xc0],0x0
  415a4c:	test   dx,dx
  415a4f:	je     0x415d7c
  415a55:	lea    rax,[rbp+0xc0]
  415a5c:	mov    QWORD PTR [rbp+0x98],r13
  415a63:	xor    edi,edi
  415a65:	mov    QWORD PTR [rbp+0x88],rsi
  415a6c:	mov    r15,QWORD PTR [rbp+0x48]
  415a70:	mov    r13,rax
  415a73:	jmp    0x415a8a
  415a75:	add    rsi,0x2
  415a79:	movzx  edx,WORD PTR [rsi]
  415a7c:	cdqe   
  415a7e:	add    rdi,rax
  415a81:	test   dx,dx
  415a84:	je     0x415b51
  415a8a:	mov    r8,r13
  415a8d:	mov    rcx,r15
  415a90:	call   0x41db30
  415a95:	test   eax,eax
  415a97:	jns    0x415a75
  415a99:	jmp    0x414988
  415a9e:	add    r8,0x1
  415aa2:	cmp    r11,r8
  415aa5:	je     0x415d67
  415aab:	xor    r15d,r15d
  415aae:	movabs r10,0x1999999999999999
  415ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  415ac0:	add    r8,0x1
  415ac4:	movsx  edx,BYTE PTR [r8-0x1]
  415ac9:	mov    rcx,0xffffffffffffffff
  415ad0:	sub    edx,0x30
  415ad3:	cmp    r15,r10
  415ad6:	movsxd rdx,edx
  415ad9:	ja     0x415ae2
  415adb:	lea    rcx,[r15+r15*4]
  415adf:	add    rcx,rcx
  415ae2:	add    rcx,rdx
  415ae5:	mov    rdx,0xffffffffffffffff
  415aec:	mov    r15,rcx
  415aef:	cmovb  r15,rdx
  415af3:	cmp    r8,r11
  415af6:	jne    0x415ac0
  415af8:	jmp    0x4148fa
  415afd:	xor    esi,esi
  415aff:	movabs r11,0x1999999999999999
  415b09:	nop    DWORD PTR [rax+0x0]
  415b10:	add    r8,0x1
  415b14:	movsx  edx,BYTE PTR [r8-0x1]
  415b19:	mov    rcx,0xffffffffffffffff
  415b20:	sub    edx,0x30
  415b23:	cmp    rsi,r11
  415b26:	movsxd rdx,edx
  415b29:	ja     0x415b32
  415b2b:	lea    rcx,[rsi+rsi*4]
  415b2f:	add    rcx,rcx
  415b32:	mov    rsi,rcx
  415b35:	add    rsi,rdx
  415b38:	mov    rdx,0xffffffffffffffff
  415b3f:	cmovb  rsi,rdx
  415b43:	cmp    r8,r9
  415b46:	jne    0x415b10
  415b48:	mov    QWORD PTR [rbp+0x68],rsi
  415b4c:	jmp    0x4148b0
  415b51:	mov    r13,QWORD PTR [rbp+0x98]
  415b58:	mov    QWORD PTR [rbp+0x98],rsi
  415b5f:	mov    rsi,QWORD PTR [rbp+0x88]
  415b66:	mov    QWORD PTR [rbp+0x30],rdi
  415b6a:	mov    rdi,QWORD PTR [rbp+0x68]
  415b6e:	cmp    QWORD PTR [rbp+0x30],rdi
  415b72:	mov    rdi,QWORD PTR [rbp+0x30]
  415b76:	jae    0x4153ca
  415b7c:	xor    r15d,r15d
  415b7f:	mov    r9d,0x1
  415b85:	jmp    0x414f04
  415b8a:	cmp    rsi,r14
  415b8d:	jb     0x414f80
  415b93:	cmp    rsi,0xc
  415b97:	mov    ebx,0xc
  415b9c:	jbe    0x4154cf
  415ba2:	jmp    0x4154c2
  415ba7:	cmp    rdx,rbx
  415baa:	ja     0x41521c
  415bb0:	movsxd rdx,DWORD PTR [rbp+0xbc]
  415bb7:	test   edx,edx
  415bb9:	jns    0x414aaf
  415bbf:	call   QWORD PTR [rip+0x2154f]        # 0x437114
  415bc5:	mov    ebx,DWORD PTR [rax]
  415bc7:	test   ebx,ebx
  415bc9:	jne    0x415bdf
  415bcb:	movzx  eax,BYTE PTR [r13+0x48]
  415bd0:	mov    bl,0x2a
  415bd2:	and    eax,0xffffffef
  415bd5:	cmp    al,0x63
  415bd7:	mov    eax,0x16
  415bdc:	cmovne ebx,eax
  415bdf:	mov    rax,QWORD PTR [rbp+0x98]
  415be6:	test   rax,rax
  415be9:	je     0x415bfc
  415beb:	cmp    QWORD PTR [rbp+0x4e0],rax
  415bf2:	je     0x415bfc
  415bf4:	mov    rcx,rax
  415bf7:	call   0x422858
  415bfc:	mov    rax,QWORD PTR [rbp+0x50]
  415c00:	test   rax,rax
  415c03:	je     0x415c0d
  415c05:	mov    rcx,rax
  415c08:	call   0x422858
  415c0d:	mov    rax,QWORD PTR [rbp+0x60]
  415c11:	mov    rcx,QWORD PTR [rbp+0x208]
  415c18:	add    rax,0x20
  415c1c:	cmp    rcx,rax
  415c1f:	je     0x415c26
  415c21:	call   0x422858
  415c26:	mov    rax,QWORD PTR [rbp+0x58]
  415c2a:	mov    rcx,QWORD PTR [rbp+0x118]
  415c31:	add    rax,0x10
  415c35:	cmp    rcx,rax
  415c38:	je     0x415c3f
  415c3a:	call   0x422858
  415c3f:	call   QWORD PTR [rip+0x214cf]        # 0x437114
  415c45:	mov    DWORD PTR [rax],ebx
  415c47:	xor    eax,eax
  415c49:	jmp    0x41455b
  415c4e:	mov    rcx,rbx
  415c51:	call   0x413870
  415c56:	mov    r9,rax
  415c59:	jmp    0x4154fa
  415c5e:	test   rbx,rbx
  415c61:	mov    QWORD PTR [rbp+0x98],rbx
  415c68:	je     0x41499e
  415c6e:	cmp    QWORD PTR [rbp+0x4e0],rbx
  415c75:	je     0x41499e
  415c7b:	mov    rcx,rbx
  415c7e:	call   0x422858
  415c83:	jmp    0x41499e
  415c88:	mov    r13,QWORD PTR [rbp+0x28]
  415c8c:	mov    QWORD PTR [rbp+0x98],rbx
  415c93:	jmp    0x41594e
  415c98:	mov    rcx,r12
  415c9b:	call   0x413870
  415ca0:	mov    r9,rax
  415ca3:	jmp    0x4158ab
  415ca8:	mov    r8,r14
  415cab:	mov    rdx,r15
  415cae:	mov    rcx,r9
  415cb1:	call   0x422810
  415cb6:	mov    QWORD PTR [rbp+0x98],rax
  415cbd:	jmp    0x415518
  415cc2:	cmp    r14,QWORD PTR [rbp+0x88]
  415cc9:	ja     0x414f70
  415ccf:	mov    r12d,0xc
  415cd5:	jmp    0x414f4e
  415cda:	mov    rcx,r12
  415cdd:	call   0x413870
  415ce2:	mov    r11,QWORD PTR [rbp+0x78]
  415ce6:	mov    r10,rax
  415ce9:	movzx  r8d,BYTE PTR [rbp+0x28]
  415cee:	mov    r9d,DWORD PTR [rbp+0x20]
  415cf2:	jmp    0x415362
  415cf7:	mov    r10,rbx
  415cfa:	jmp    0x415396
  415cff:	mov    rdx,rax
  415d02:	jmp    0x41524b
  415d07:	lea    rdx,[rax+0x1]
  415d0b:	jmp    0x41520c
  415d10:	mov    rdx,rbx
  415d13:	mov    r8,r14
  415d16:	mov    rcx,r9
  415d19:	call   0x422810
  415d1e:	mov    rbx,rax
  415d21:	jmp    0x4158c5
  415d26:	cmp    r15,rbx
  415d29:	ja     0x414f80
  415d2f:	mov    r12d,0xc
  415d35:	jmp    0x4159a0
  415d3a:	mov    rcx,r12
  415d3d:	call   0x413870
  415d42:	mov    r14,rax
  415d45:	jmp    0x4159e8
  415d4a:	mov    r14,QWORD PTR [rbp+0x98]
  415d51:	jmp    0x415a0d
  415d56:	cmp    rsi,r14
  415d59:	jae    0x414f80
  415d5f:	mov    rbx,rax
  415d62:	jmp    0x4154ad
  415d67:	mov    rax,QWORD PTR [rax+0x10]
  415d6b:	xor    edi,edi
  415d6d:	mov    QWORD PTR [rbp+0x98],rax
  415d74:	mov    rsi,rax
  415d77:	jmp    0x415836
  415d7c:	mov    QWORD PTR [rbp+0x98],rsi
  415d83:	mov    QWORD PTR [rbp+0x30],0x0
  415d8b:	jmp    0x415b6a
  415d90:	mov    QWORD PTR [rbp+0x98],rsi
  415d97:	xor    edi,edi
  415d99:	jmp    0x415836
  415d9e:	mov    rdx,QWORD PTR [rbp-0x10]
  415da2:	call   0x41d870
  415da7:	jmp    0x4151fc
  415dac:	mov    r15,r14
  415daf:	jmp    0x41593a
  415db4:	mov    r15,r14
  415db7:	jmp    0x415947
  415dbc:	mov    rsi,QWORD PTR [rax+0x10]
  415dc0:	jmp    0x415a3f
  415dc5:	mov    r12,rax
  415dc8:	jmp    0x4146b8
  415dcd:	nop
  415dce:	nop
  415dcf:	nop
  415dd0:	test   r8,r8
  415dd3:	mov    r9d,edx
  415dd6:	je     0x415df7
  415dd8:	test   cl,0x3
  415ddb:	je     0x415e04
  415ddd:	cmp    BYTE PTR [rcx],dl
  415ddf:	jne    0x415ded
  415de1:	jmp    0x415e00
  415de3:	test   cl,0x3
  415de6:	je     0x415e04
  415de8:	cmp    BYTE PTR [rcx],r9b
  415deb:	je     0x415e00
  415ded:	add    rcx,0x1
  415df1:	sub    r8,0x1
  415df5:	jne    0x415de3
  415df7:	xor    eax,eax
  415df9:	ret    
  415dfa:	nop    WORD PTR [rax+rax*1+0x0]
  415e00:	mov    rax,rcx
  415e03:	ret    
  415e04:	movzx  eax,dl
  415e07:	mov    r11d,eax
  415e0a:	shl    r11d,0x8
  415e0e:	or     r11d,eax
  415e11:	mov    eax,r11d
  415e14:	shl    eax,0x10
  415e17:	or     r11d,eax
  415e1a:	cmp    r8,0x3
  415e1e:	ja     0x415e30
  415e20:	jmp    0x415e48
  415e22:	sub    r8,0x4
  415e26:	add    rcx,0x4
  415e2a:	cmp    r8,0x3
  415e2e:	jbe    0x415e70
  415e30:	mov    eax,DWORD PTR [rcx]
  415e32:	xor    eax,r11d
  415e35:	lea    r10d,[rax-0x1010101]
  415e3c:	not    eax
  415e3e:	and    eax,r10d
  415e41:	test   eax,0x80808080
  415e46:	je     0x415e22
  415e48:	add    r8,rcx
  415e4b:	cmp    BYTE PTR [rcx],dl
  415e4d:	lea    rax,[rcx+0x1]
  415e51:	jne    0x415e5f
  415e53:	jmp    0x415e00
  415e55:	add    rax,0x1
  415e59:	cmp    BYTE PTR [rax-0x1],r9b
  415e5d:	je     0x415e00
  415e5f:	cmp    rax,r8
  415e62:	mov    rcx,rax
  415e65:	jne    0x415e55
  415e67:	xor    eax,eax
  415e69:	ret    
  415e6a:	nop    WORD PTR [rax+rax*1+0x0]
  415e70:	test   r8,r8
  415e73:	jne    0x415e48
  415e75:	jmp    0x415df7
  415e77:	nop
  415e78:	nop
  415e79:	nop
  415e7a:	nop
  415e7b:	nop
  415e7c:	nop
  415e7d:	nop
  415e7e:	nop
  415e7f:	nop
  415e80:	xor    r9d,r9d
  415e83:	cmp    QWORD PTR [rdx],0x0
  415e87:	mov    rax,QWORD PTR [rdx+0x8]
  415e8b:	lea    r10,[rip+0x16bb6]        # 0x42ca48
  415e92:	je     0x415ec8
  415e94:	cmp    DWORD PTR [rax],0x16
  415e97:	ja     0x415f64
  415e9d:	mov    r8d,DWORD PTR [rax]
  415ea0:	movsxd r8,DWORD PTR [r10+r8*4]
  415ea4:	add    r8,r10
  415ea7:	jmp    r8
  415eaa:	nop    WORD PTR [rax+rax*1+0x0]
  415eb0:	mov    r8,QWORD PTR [rcx]
  415eb3:	add    rcx,0x8
  415eb7:	mov    QWORD PTR [rax+0x10],r8
  415ebb:	add    r9,0x1
  415ebf:	add    rax,0x20
  415ec3:	cmp    QWORD PTR [rdx],r9
  415ec6:	ja     0x415e94
  415ec8:	xor    eax,eax
  415eca:	ret    
  415ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  415ed0:	mov    r8d,DWORD PTR [rcx]
  415ed3:	add    rcx,0x8
  415ed7:	mov    DWORD PTR [rax+0x10],r8d
  415edb:	jmp    0x415ebb
  415edd:	nop    DWORD PTR [rax]
  415ee0:	mov    r8d,DWORD PTR [rcx]
  415ee3:	add    rcx,0x8
  415ee7:	mov    WORD PTR [rax+0x10],r8w
  415eec:	jmp    0x415ebb
  415eee:	xchg   ax,ax
  415ef0:	mov    r8d,DWORD PTR [rcx]
  415ef3:	add    rcx,0x8
  415ef7:	mov    BYTE PTR [rax+0x10],r8b
  415efb:	jmp    0x415ebb
  415efd:	nop    DWORD PTR [rax]
  415f00:	movsd  xmm0,QWORD PTR [rcx]
  415f04:	add    rcx,0x8
  415f08:	movsd  QWORD PTR [rax+0x10],xmm0
  415f0d:	jmp    0x415ebb
  415f0f:	nop
  415f10:	mov    r8,QWORD PTR [rcx]
  415f13:	add    rcx,0x8
  415f17:	fld    TBYTE PTR [r8]
  415f1a:	fstp   TBYTE PTR [rax+0x10]
  415f1d:	jmp    0x415ebb
  415f1f:	nop
  415f20:	mov    r8,QWORD PTR [rcx]
  415f23:	add    rcx,0x8
  415f27:	test   r8,r8
  415f2a:	mov    QWORD PTR [rax+0x10],r8
  415f2e:	jne    0x415ebb
  415f30:	lea    r11,[rip+0x16b09]        # 0x42ca40
  415f37:	mov    QWORD PTR [rax+0x10],r11
  415f3b:	jmp    0x415ebb
  415f40:	mov    r8,QWORD PTR [rcx]
  415f43:	add    rcx,0x8
  415f47:	test   r8,r8
  415f4a:	mov    QWORD PTR [rax+0x10],r8
  415f4e:	jne    0x415ebb
  415f54:	lea    r11,[rip+0x16b49]        # 0x42caa4
  415f5b:	mov    QWORD PTR [rax+0x10],r11
  415f5f:	jmp    0x415ebb
  415f64:	mov    eax,0xffffffff
  415f69:	ret    
  415f6a:	nop
  415f6b:	nop
  415f6c:	nop
  415f6d:	nop
  415f6e:	nop
  415f6f:	nop
  415f70:	push   r15
  415f72:	push   r14
  415f74:	push   r13
  415f76:	push   r12
  415f78:	push   rbp
  415f79:	push   rdi
  415f7a:	push   rsi
  415f7b:	push   rbx
  415f7c:	sub    rsp,0x58
  415f80:	xor    r10d,r10d
  415f83:	mov    r14d,0x7
  415f89:	lea    rax,[rdx+0x20]
  415f8d:	lea    r15,[r8+0x10]
  415f91:	mov    QWORD PTR [rdx],0x0
  415f98:	mov    rbx,rcx
  415f9b:	mov    r12,rdx
  415f9e:	mov    r13,r8
  415fa1:	mov    QWORD PTR [rdx+0x8],rax
  415fa5:	mov    QWORD PTR [rsp+0x30],rax
  415faa:	mov    QWORD PTR [r8],0x0
  415fb1:	mov    QWORD PTR [r8+0x8],r15
  415fb5:	mov    r9,QWORD PTR [rdx+0x8]
  415fb9:	mov    rcx,QWORD PTR [rdx]
  415fbc:	mov    QWORD PTR [rsp+0x20],0x0
  415fc5:	mov    QWORD PTR [rsp+0x28],0x7
  415fce:	mov    QWORD PTR [rsp+0x38],0x0
  415fd7:	jmp    0x415feb
  415fd9:	nop    DWORD PTR [rax+0x0]
  415fe0:	cmp    al,0x25
  415fe2:	lea    r11,[rbx+0x1]
  415fe6:	je     0x416020
  415fe8:	mov    rbx,r11
  415feb:	movzx  eax,BYTE PTR [rbx]
  415fee:	test   al,al
  415ff0:	jne    0x415fe0
  415ff2:	lea    rax,[rcx+rcx*4]
  415ff6:	lea    rax,[rcx+rax*2]
  415ffa:	mov    QWORD PTR [r9+rax*8],rbx
  415ffe:	mov    rax,QWORD PTR [rsp+0x20]
  416003:	mov    QWORD PTR [r12+0x10],r10
  416008:	mov    QWORD PTR [r12+0x18],rax
  41600d:	xor    eax,eax
  41600f:	add    rsp,0x58
  416013:	pop    rbx
  416014:	pop    rsi
  416015:	pop    rdi
  416016:	pop    rbp
  416017:	pop    r12
  416019:	pop    r13
  41601b:	pop    r14
  41601d:	pop    r15
  41601f:	ret    
  416020:	lea    rax,[rcx+rcx*4]
  416024:	lea    rax,[rcx+rax*2]
  416028:	lea    rsi,[r9+rax*8]
  41602c:	mov    QWORD PTR [rsi],rbx
  41602f:	mov    DWORD PTR [rsi+0x10],0x0
  416036:	mov    QWORD PTR [rsi+0x18],0x0
  41603e:	mov    QWORD PTR [rsi+0x20],0x0
  416046:	mov    QWORD PTR [rsi+0x28],0xffffffffffffffff
  41604e:	mov    QWORD PTR [rsi+0x30],0x0
  416056:	mov    QWORD PTR [rsi+0x38],0x0
  41605e:	mov    QWORD PTR [rsi+0x40],0xffffffffffffffff
  416066:	mov    QWORD PTR [rsi+0x50],0xffffffffffffffff
  41606e:	movsx  eax,BYTE PTR [rbx+0x1]
  416072:	lea    edx,[rax-0x30]
  416075:	cmp    dl,0x9
  416078:	jbe    0x416274
  41607e:	mov    rdi,0xffffffffffffffff
  416085:	lea    rcx,[r11+0x1]
  416089:	jmp    0x4160b7
  41608b:	nop    DWORD PTR [rax+rax*1+0x0]
  416090:	cmp    al,0x2d
  416092:	je     0x4160c5
  416094:	cmp    al,0x2b
  416096:	je     0x4160d0
  416098:	cmp    al,0x20
  41609a:	je     0x4160e0
  41609c:	cmp    al,0x23
  41609e:	je     0x4160f0
  4160a0:	cmp    al,0x30
  4160a2:	jne    0x4160f6
  4160a4:	or     DWORD PTR [rsi+0x10],0x20
  4160a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4160b0:	movzx  eax,BYTE PTR [rcx]
  4160b3:	add    rcx,0x1
  4160b7:	cmp    al,0x27
  4160b9:	lea    rbx,[rcx-0x1]
  4160bd:	jne    0x416090
  4160bf:	or     DWORD PTR [rsi+0x10],0x1
  4160c3:	jmp    0x4160b0
  4160c5:	or     DWORD PTR [rsi+0x10],0x2
  4160c9:	jmp    0x4160b0
  4160cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4160d0:	or     DWORD PTR [rsi+0x10],0x4
  4160d4:	jmp    0x4160b0
  4160d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4160e0:	or     DWORD PTR [rsi+0x10],0x8
  4160e4:	jmp    0x4160b0
  4160e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4160f0:	or     DWORD PTR [rsi+0x10],0x10
  4160f4:	jmp    0x4160b0
  4160f6:	cmp    al,0x2a
  4160f8:	mov    rdx,rbx
  4160fb:	je     0x416371
  416101:	lea    ecx,[rax-0x30]
  416104:	cmp    cl,0x9
  416107:	jbe    0x416313
  41610d:	cmp    al,0x2e
  41610f:	je     0x4161a9
  416115:	xor    edx,edx
  416117:	mov    r8d,0x1
  41611d:	jmp    0x416163
  41611f:	nop
  416120:	cmp    al,0x4c
  416122:	je     0x416190
  416124:	cmp    al,0x6c
  416126:	je     0x4161a0
  416128:	cmp    al,0x6a
  41612a:	je     0x416180
  41612c:	mov    ecx,eax
  41612e:	and    ecx,0xffffffdf
  416131:	cmp    cl,0x5a
  416134:	je     0x416180
  416136:	cmp    al,0x74
  416138:	je     0x416180
  41613a:	cmp    al,0x49
  41613c:	jne    0x41634c
  416142:	cmp    BYTE PTR [rbx+0x1],0x36
  416146:	jne    0x41623f
  41614c:	cmp    BYTE PTR [rbx+0x2],0x34
  416150:	jne    0x41623f
  416156:	add    edx,0x10
  416159:	add    rbx,0x3
  41615d:	nop    DWORD PTR [rax]
  416160:	movzx  eax,BYTE PTR [rbx]
  416163:	cmp    al,0x68
  416165:	jne    0x416120
  416167:	mov    ecx,edx
  416169:	mov    eax,r8d
  41616c:	add    rbx,0x1
  416170:	and    ecx,0x1
  416173:	shl    eax,cl
  416175:	or     edx,eax
  416177:	jmp    0x416160
  416179:	nop    DWORD PTR [rax+0x0]
  416180:	add    edx,0x10
  416183:	add    rbx,0x1
  416187:	jmp    0x416160
  416189:	nop    DWORD PTR [rax+0x0]
  416190:	or     edx,0x4
  416193:	add    rbx,0x1
  416197:	jmp    0x416160
  416199:	nop    DWORD PTR [rax+0x0]
  4161a0:	add    edx,0x8
  4161a3:	add    rbx,0x1
  4161a7:	jmp    0x416160
  4161a9:	cmp    BYTE PTR [rbx+0x1],0x2a
  4161ad:	jne    0x416417
  4161b3:	lea    rbp,[rbx+0x2]
  4161b7:	mov    QWORD PTR [rsi+0x30],rbx
  4161bb:	cmp    QWORD PTR [rsp+0x20],0x1
  4161c1:	mov    QWORD PTR [rsi+0x38],rbp
  4161c5:	movsx  eax,BYTE PTR [rbx+0x2]
  4161c9:	lea    edx,[rax-0x30]
  4161cc:	jbe    0x416670
  4161d2:	cmp    dl,0x9
  4161d5:	ja     0x416682
  4161db:	mov    rdx,rbp
  4161de:	add    rdx,0x1
  4161e2:	movzx  ecx,BYTE PTR [rdx]
  4161e5:	lea    r8d,[rcx-0x30]
  4161e9:	cmp    r8b,0x9
  4161ed:	jbe    0x4161de
  4161ef:	cmp    cl,0x24
  4161f2:	jne    0x416682
  4161f8:	xor    ebx,ebx
  4161fa:	movabs rcx,0x1999999999999999
  416204:	sub    eax,0x30
  416207:	mov    rdx,0xffffffffffffffff
  41620e:	cmp    rbx,rcx
  416211:	cdqe   
  416213:	ja     0x41621c
  416215:	lea    rdx,[rbx+rbx*4]
  416219:	add    rdx,rdx
  41621c:	add    rdx,rax
  41621f:	mov    rbx,rdx
  416222:	jae    0x4169fe
  416228:	add    rbp,0x1
  41622c:	movsx  eax,BYTE PTR [rbp+0x0]
  416230:	mov    rbx,0xffffffffffffffff
  416237:	lea    edx,[rax-0x30]
  41623a:	cmp    dl,0x9
  41623d:	jbe    0x4161fa
  41623f:	mov    rcx,QWORD PTR [r13+0x8]
  416243:	cmp    r15,rcx
  416246:	je     0x41624d
  416248:	call   0x422858
  41624d:	mov    rcx,QWORD PTR [r12+0x8]
  416252:	cmp    QWORD PTR [rsp+0x30],rcx
  416257:	je     0x41625e
  416259:	call   0x422858
  41625e:	call   QWORD PTR [rip+0x20eb0]        # 0x437114
  416264:	mov    DWORD PTR [rax],0x16
  41626a:	mov    eax,0xffffffff
  41626f:	jmp    0x41600f
  416274:	mov    rdx,r11
  416277:	nop    WORD PTR [rax+rax*1+0x0]
  416280:	add    rdx,0x1
  416284:	movzx  r8d,BYTE PTR [rdx]
  416288:	lea    ecx,[r8-0x30]
  41628c:	cmp    cl,0x9
  41628f:	jbe    0x416280
  416291:	cmp    r8b,0x24
  416295:	jne    0x41607e
  41629b:	mov    rcx,r11
  41629e:	xor    edi,edi
  4162a0:	jmp    0x4162bc
  4162a2:	movsx  eax,BYTE PTR [rcx+0x1]
  4162a6:	lea    rdx,[rcx+0x1]
  4162aa:	mov    rdi,0xffffffffffffffff
  4162b1:	lea    ecx,[rax-0x30]
  4162b4:	cmp    cl,0x9
  4162b7:	ja     0x41623f
  4162b9:	mov    rcx,rdx
  4162bc:	movabs rbx,0x1999999999999999
  4162c6:	sub    eax,0x30
  4162c9:	mov    rdx,0xffffffffffffffff
  4162d0:	cmp    rdi,rbx
  4162d3:	cdqe   
  4162d5:	ja     0x4162de
  4162d7:	lea    rdx,[rdi+rdi*4]
  4162db:	add    rdx,rdx
  4162de:	mov    rdi,rdx
  4162e1:	add    rdi,rax
  4162e4:	jb     0x4162a2
  4162e6:	movsx  eax,BYTE PTR [rcx+0x1]
  4162ea:	lea    rdx,[rcx+0x1]
  4162ee:	lea    r8d,[rax-0x30]
  4162f2:	cmp    r8b,0x9
  4162f6:	jbe    0x4162b9
  4162f8:	sub    rdi,0x1
  4162fc:	cmp    rdi,0xfffffffffffffffd
  416300:	ja     0x41623f
  416306:	lea    r11,[rcx+0x2]
  41630a:	movzx  eax,BYTE PTR [rcx+0x2]
  41630e:	jmp    0x416085
  416313:	mov    QWORD PTR [rsi+0x18],rbx
  416317:	movzx  eax,BYTE PTR [rbx]
  41631a:	sub    eax,0x30
  41631d:	cmp    al,0x9
  41631f:	ja     0x416a5c
  416325:	add    rbx,0x1
  416329:	movzx  eax,BYTE PTR [rbx]
  41632c:	sub    eax,0x30
  41632f:	cmp    al,0x9
  416331:	jbe    0x416325
  416333:	mov    rax,rbx
  416336:	sub    rax,rdx
  416339:	cmp    r10,rax
  41633c:	mov    QWORD PTR [rsi+0x20],rbx
  416340:	cmovb  r10,rax
  416344:	movzx  eax,BYTE PTR [rbx]
  416347:	jmp    0x41610d
  41634c:	lea    ecx,[rax-0x25]
  41634f:	add    rbx,0x1
  416353:	mov    ebp,eax
  416355:	cmp    cl,0x53
  416358:	ja     0x41623f
  41635e:	lea    r9,[rip+0x1675b]        # 0x42cac0
  416365:	movzx  ecx,cl
  416368:	movsxd rcx,DWORD PTR [r9+rcx*4]
  41636c:	add    rcx,r9
  41636f:	jmp    rcx
  416371:	mov    QWORD PTR [rsi+0x18],rbx
  416375:	mov    QWORD PTR [rsi+0x20],rcx
  416379:	test   r10,r10
  41637c:	movsx  eax,BYTE PTR [rdx+0x1]
  416380:	mov    rbx,rcx
  416383:	lea    edx,[rax-0x30]
  416386:	jne    0x4164d6
  41638c:	cmp    dl,0x9
  41638f:	jbe    0x416464
  416395:	mov    r10d,0x1
  41639b:	mov    rbp,QWORD PTR [rsp+0x38]
  4163a0:	mov    rax,rbp
  4163a3:	mov    QWORD PTR [rsi+0x28],rbp
  4163a7:	add    rax,0x1
  4163ab:	cmp    rbp,0xffffffffffffffff
  4163af:	je     0x41623f
  4163b5:	mov    QWORD PTR [rsp+0x38],rax
  4163ba:	cmp    r14,rbp
  4163bd:	jbe    0x416789
  4163c3:	mov    rcx,QWORD PTR [r13+0x8]
  4163c7:	mov    rax,QWORD PTR [r13+0x0]
  4163cb:	mov    rdx,rax
  4163ce:	shl    rdx,0x5
  4163d2:	add    rdx,rcx
  4163d5:	cmp    rbp,rax
  4163d8:	jb     0x4163f7
  4163da:	nop    WORD PTR [rax+rax*1+0x0]
  4163e0:	add    rax,0x1
  4163e4:	mov    DWORD PTR [rdx],0x0
  4163ea:	add    rdx,0x20
  4163ee:	cmp    rax,rbp
  4163f1:	jbe    0x4163e0
  4163f3:	mov    QWORD PTR [r13+0x0],rax
  4163f7:	shl    rbp,0x5
  4163fb:	lea    rax,[rcx+rbp*1]
  4163ff:	mov    edx,DWORD PTR [rax]
  416401:	test   edx,edx
  416403:	jne    0x4168b8
  416409:	mov    DWORD PTR [rax],0x5
  41640f:	movzx  eax,BYTE PTR [rbx]
  416412:	jmp    0x41610d
  416417:	mov    QWORD PTR [rsi+0x30],rbx
  41641b:	movzx  eax,BYTE PTR [rbx+0x1]
  41641f:	lea    rdx,[rbx+0x1]
  416423:	sub    eax,0x30
  416426:	cmp    al,0x9
  416428:	ja     0x41643e
  41642a:	nop    WORD PTR [rax+rax*1+0x0]
  416430:	add    rdx,0x1
  416434:	movzx  eax,BYTE PTR [rdx]
  416437:	sub    eax,0x30
  41643a:	cmp    al,0x9
  41643c:	jbe    0x416430
  41643e:	mov    rax,rdx
  416441:	mov    QWORD PTR [rsi+0x38],rdx
  416445:	sub    rax,rbx
  416448:	mov    rbx,QWORD PTR [rsp+0x20]
  41644d:	cmp    rbx,rax
  416450:	cmovae rax,rbx
  416454:	mov    rbx,rdx
  416457:	mov    QWORD PTR [rsp+0x20],rax
  41645c:	movzx  eax,BYTE PTR [rdx]
  41645f:	jmp    0x416115
  416464:	mov    r10b,0x1
  416467:	nop    WORD PTR [rax+rax*1+0x0]
  416470:	add    rcx,0x1
  416474:	movzx  edx,BYTE PTR [rcx]
  416477:	lea    r8d,[rdx-0x30]
  41647b:	cmp    r8b,0x9
  41647f:	jbe    0x416470
  416481:	cmp    dl,0x24
  416484:	jne    0x41639b
  41648a:	xor    ebp,ebp
  41648c:	movabs rcx,0x1999999999999999
  416496:	sub    eax,0x30
  416499:	mov    rdx,0xffffffffffffffff
  4164a0:	cmp    rbp,rcx
  4164a3:	cdqe   
  4164a5:	ja     0x4164af
  4164a7:	lea    rdx,[rbp+rbp*4+0x0]
  4164ac:	add    rdx,rdx
  4164af:	add    rdx,rax
  4164b2:	mov    rbp,rdx
  4164b5:	jae    0x4169d0
  4164bb:	add    rbx,0x1
  4164bf:	movsx  eax,BYTE PTR [rbx]
  4164c2:	mov    rbp,0xffffffffffffffff
  4164c9:	lea    edx,[rax-0x30]
  4164cc:	cmp    dl,0x9
  4164cf:	jbe    0x41648c
  4164d1:	jmp    0x41623f
  4164d6:	cmp    dl,0x9
  4164d9:	jbe    0x416470
  4164db:	jmp    0x41639b
  4164e0:	cmp    edx,0xf
  4164e3:	mov    r9d,0xc
  4164e9:	jle    0x41695d
  4164ef:	cmp    rdi,0xffffffffffffffff
  4164f3:	je     0x4168d0
  4164f9:	mov    QWORD PTR [rsi+0x50],rdi
  4164fd:	cmp    r14,rdi
  416500:	jbe    0x4167dc
  416506:	mov    rcx,QWORD PTR [r13+0x8]
  41650a:	mov    rax,QWORD PTR [r13+0x0]
  41650e:	mov    rdx,rax
  416511:	shl    rdx,0x5
  416515:	add    rdx,rcx
  416518:	cmp    rdi,rax
  41651b:	jb     0x416537
  41651d:	nop    DWORD PTR [rax]
  416520:	add    rax,0x1
  416524:	mov    DWORD PTR [rdx],0x0
  41652a:	add    rdx,0x20
  41652e:	cmp    rax,rdi
  416531:	jbe    0x416520
  416533:	mov    QWORD PTR [r13+0x0],rax
  416537:	shl    rdi,0x5
  41653b:	lea    rax,[rcx+rdi*1]
  41653f:	mov    edx,DWORD PTR [rax]
  416541:	test   edx,edx
  416543:	jne    0x416850
  416549:	mov    DWORD PTR [rax],r9d
  41654c:	mov    BYTE PTR [rsi+0x48],bpl
  416550:	mov    rax,QWORD PTR [r12]
  416554:	mov    QWORD PTR [rsi+0x8],rbx
  416558:	lea    rcx,[rax+0x1]
  41655c:	cmp    rcx,QWORD PTR [rsp+0x28]
  416561:	mov    QWORD PTR [r12],rcx
  416565:	jae    0x416710
  41656b:	mov    r9,QWORD PTR [r12+0x8]
  416570:	jmp    0x415feb
  416575:	xor    r9d,r9d
  416578:	cmp    edx,0x7
  41657b:	mov    ebp,eax
  41657d:	setg   r9b
  416581:	add    r9d,0xf
  416585:	jmp    0x4164ef
  41658a:	cmp    edx,0xf
  41658d:	jg     0x4165c0
  41658f:	test   dl,0x4
  416592:	jne    0x4165c0
  416594:	cmp    edx,0x7
  416597:	jg     0x416b08
  41659d:	test   dl,0x2
  4165a0:	jne    0x416afb
  4165a6:	and    edx,0x1
  4165a9:	mov    ebp,eax
  4165ab:	neg    edx
  4165ad:	mov    r9d,edx
  4165b0:	add    r9d,0x14
  4165b4:	jmp    0x4164ef
  4165b9:	nop    DWORD PTR [rax+0x0]
  4165c0:	mov    ebp,eax
  4165c2:	mov    r9d,0x16
  4165c8:	jmp    0x4164ef
  4165cd:	cmp    edx,0xf
  4165d0:	mov    r9d,0x9
  4165d6:	jg     0x4164ef
  4165dc:	test   dl,0x4
  4165df:	jne    0x4164ef
  4165e5:	cmp    edx,0x7
  4165e8:	mov    r9b,0x7
  4165eb:	jg     0x4164ef
  4165f1:	test   dl,0x2
  4165f4:	mov    r9b,0x1
  4165f7:	jne    0x4164ef
  4165fd:	and    edx,0x1
  416600:	cmp    edx,0x1
  416603:	sbb    r9d,r9d
  416606:	and    r9d,0x2
  41660a:	add    r9d,0x3
  41660e:	jmp    0x4164ef
  416613:	xor    r9d,r9d
  416616:	cmp    edx,0x7
  416619:	mov    ebp,eax
  41661b:	setg   r9b
  41661f:	add    r9d,0xd
  416623:	jmp    0x4164ef
  416628:	cmp    edx,0xf
  41662b:	mov    r9d,0xa
  416631:	jg     0x4164ef
  416637:	test   dl,0x4
  41663a:	jne    0x4164ef
  416640:	cmp    edx,0x7
  416643:	mov    r9b,0x8
  416646:	jg     0x4164ef
  41664c:	test   dl,0x2
  41664f:	mov    r9b,0x2
  416652:	jne    0x4164ef
  416658:	and    edx,0x1
  41665b:	cmp    edx,0x1
  41665e:	sbb    r9d,r9d
  416661:	and    r9d,0x2
  416665:	add    r9d,0x4
  416669:	jmp    0x4164ef
  41666e:	xchg   ax,ax
  416670:	cmp    dl,0x9
  416673:	mov    QWORD PTR [rsp+0x20],0x2
  41667c:	jbe    0x4161db
  416682:	mov    rbx,QWORD PTR [rsi+0x40]
  416686:	cmp    rbx,0xffffffffffffffff
  41668a:	je     0x4169a3
  416690:	cmp    r14,rbx
  416693:	ja     0x416909
  416699:	test   r14,r14
  41669c:	js     0x4167a7
  4166a2:	add    r14,r14
  4166a5:	cmp    r14,rbx
  4166a8:	ja     0x4166b7
  4166aa:	lea    r14,[rbx+0x1]
  4166ae:	cmp    r14,rbx
  4166b1:	jb     0x4167a7
  4166b7:	movabs rax,0x7ffffffffffffff
  4166c1:	cmp    r14,rax
  4166c4:	ja     0x4167a7
  4166ca:	mov    rcx,QWORD PTR [r13+0x8]
  4166ce:	mov    rdx,r14
  4166d1:	mov    QWORD PTR [rsp+0x40],r10
  4166d6:	shl    rdx,0x5
  4166da:	cmp    r15,rcx
  4166dd:	je     0x416b3a
  4166e3:	call   0x413f30
  4166e8:	mov    r10,QWORD PTR [rsp+0x40]
  4166ed:	mov    r9,rax
  4166f0:	test   r9,r9
  4166f3:	je     0x4167a7
  4166f9:	cmp    r15,QWORD PTR [r13+0x8]
  4166fd:	je     0x416b15
  416703:	mov    QWORD PTR [r13+0x8],r9
  416707:	mov    rcx,r9
  41670a:	jmp    0x41690d
  41670f:	nop
  416710:	mov    rax,QWORD PTR [rsp+0x28]
  416715:	test   rax,rax
  416718:	js     0x4167a7
  41671e:	add    rax,rax
  416721:	mov    rdi,rax
  416724:	mov    QWORD PTR [rsp+0x28],rax
  416729:	movabs rax,0x2e8ba2e8ba2e8ba
  416733:	cmp    rdi,rax
  416736:	ja     0x4167a7
  416738:	lea    rax,[rdi+rdi*4]
  41673c:	mov    rcx,QWORD PTR [r12+0x8]
  416741:	mov    QWORD PTR [rsp+0x40],r10
  416746:	lea    rdx,[rdi+rax*2]
  41674a:	shl    rdx,0x3
  41674e:	cmp    QWORD PTR [rsp+0x30],rcx
  416753:	je     0x4168f4
  416759:	call   0x413f30
  41675e:	mov    r10,QWORD PTR [rsp+0x40]
  416763:	mov    r9,rax
  416766:	test   r9,r9
  416769:	je     0x4167a7
  41676b:	mov    rax,QWORD PTR [rsp+0x30]
  416770:	cmp    rax,QWORD PTR [r12+0x8]
  416775:	je     0x416a63
  41677b:	mov    QWORD PTR [r12+0x8],r9
  416780:	mov    rcx,QWORD PTR [r12]
  416784:	jmp    0x415feb
  416789:	test   r14,r14
  41678c:	js     0x4167a7
  41678e:	add    r14,r14
  416791:	cmp    r14,rbp
  416794:	ja     0x416860
  41679a:	lea    r14,[rbp+0x1]
  41679e:	cmp    r14,rbp
  4167a1:	jae    0x416860
  4167a7:	mov    rcx,QWORD PTR [r13+0x8]
  4167ab:	cmp    r15,rcx
  4167ae:	je     0x4167b5
  4167b0:	call   0x422858
  4167b5:	mov    rcx,QWORD PTR [r12+0x8]
  4167ba:	cmp    QWORD PTR [rsp+0x30],rcx
  4167bf:	je     0x4167c6
  4167c1:	call   0x422858
  4167c6:	call   QWORD PTR [rip+0x20948]        # 0x437114
  4167cc:	mov    DWORD PTR [rax],0xc
  4167d2:	mov    eax,0xffffffff
  4167d7:	jmp    0x41600f
  4167dc:	test   r14,r14
  4167df:	js     0x4167a7
  4167e1:	add    r14,r14
  4167e4:	cmp    r14,rdi
  4167e7:	ja     0x4167f2
  4167e9:	lea    r14,[rdi+0x1]
  4167ed:	cmp    r14,rdi
  4167f0:	jb     0x4167a7
  4167f2:	movabs rax,0x7ffffffffffffff
  4167fc:	cmp    r14,rax
  4167ff:	ja     0x4167a7
  416801:	mov    rcx,QWORD PTR [r13+0x8]
  416805:	mov    rdx,r14
  416808:	mov    QWORD PTR [rsp+0x48],r10
  41680d:	shl    rdx,0x5
  416811:	mov    DWORD PTR [rsp+0x40],r9d
  416816:	cmp    r15,rcx
  416819:	je     0x416a2d
  41681f:	call   0x413f30
  416824:	mov    r9d,DWORD PTR [rsp+0x40]
  416829:	mov    r10,QWORD PTR [rsp+0x48]
  41682e:	mov    r11,rax
  416831:	test   r11,r11
  416834:	je     0x4167a7
  41683a:	cmp    r15,QWORD PTR [r13+0x8]
  41683e:	je     0x416acc
  416844:	mov    QWORD PTR [r13+0x8],r11
  416848:	mov    rcx,r11
  41684b:	jmp    0x41650a
  416850:	cmp    r9d,edx
  416853:	je     0x41654c
  416859:	jmp    0x416243
  41685e:	xchg   ax,ax
  416860:	movabs rax,0x7ffffffffffffff
  41686a:	cmp    r14,rax
  41686d:	ja     0x4167a7
  416873:	mov    rcx,QWORD PTR [r13+0x8]
  416877:	mov    rdx,r14
  41687a:	mov    QWORD PTR [rsp+0x40],r10
  41687f:	shl    rdx,0x5
  416883:	cmp    r15,rcx
  416886:	je     0x416a92
  41688c:	call   0x413f30
  416891:	mov    r10,QWORD PTR [rsp+0x40]
  416896:	mov    r9,rax
  416899:	test   r9,r9
  41689c:	je     0x4167a7
  4168a2:	cmp    r15,QWORD PTR [r13+0x8]
  4168a6:	je     0x416aa7
  4168ac:	mov    QWORD PTR [r13+0x8],r9
  4168b0:	mov    rcx,r9
  4168b3:	jmp    0x4163c7
  4168b8:	cmp    edx,0x5
  4168bb:	je     0x416344
  4168c1:	jmp    0x416243
  4168c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168d0:	mov    rdi,QWORD PTR [rsp+0x38]
  4168d5:	mov    rax,rdi
  4168d8:	mov    QWORD PTR [rsi+0x50],rdi
  4168dc:	add    rax,0x1
  4168e0:	cmp    rdi,0xffffffffffffffff
  4168e4:	je     0x41623f
  4168ea:	mov    QWORD PTR [rsp+0x38],rax
  4168ef:	jmp    0x4164fd
  4168f4:	mov    rcx,rdx
  4168f7:	call   0x413870
  4168fc:	mov    r10,QWORD PTR [rsp+0x40]
  416901:	mov    r9,rax
  416904:	jmp    0x416766
  416909:	mov    rcx,QWORD PTR [r13+0x8]
  41690d:	mov    rax,QWORD PTR [r13+0x0]
  416911:	mov    rdx,rax
  416914:	shl    rdx,0x5
  416918:	add    rdx,rcx
  41691b:	cmp    rbx,rax
  41691e:	jb     0x416937
  416920:	add    rax,0x1
  416924:	mov    DWORD PTR [rdx],0x0
  41692a:	add    rdx,0x20
  41692e:	cmp    rax,rbx
  416931:	jbe    0x416920
  416933:	mov    QWORD PTR [r13+0x0],rax
  416937:	mov    rax,rbx
  41693a:	shl    rax,0x5
  41693e:	add    rax,rcx
  416941:	mov    edx,DWORD PTR [rax]
  416943:	test   edx,edx
  416945:	jne    0x416a47
  41694b:	mov    DWORD PTR [rax],0x5
  416951:	mov    rbx,rbp
  416954:	movzx  eax,BYTE PTR [rbp+0x0]
  416958:	jmp    0x416115
  41695d:	and    edx,0x4
  416960:	cmp    edx,0x1
  416963:	sbb    r9d,r9d
  416966:	add    r9d,0xc
  41696a:	jmp    0x4164ef
  41696f:	mov    r9d,0xe
  416975:	mov    ebp,0x63
  41697a:	jmp    0x4164ef
  41697f:	mov    ebp,eax
  416981:	jmp    0x41654c
  416986:	mov    ebp,eax
  416988:	mov    r9d,0x11
  41698e:	jmp    0x4164ef
  416993:	mov    r9d,0x10
  416999:	mov    ebp,0x73
  41699e:	jmp    0x4164ef
  4169a3:	mov    rbx,QWORD PTR [rsp+0x38]
  4169a8:	mov    rax,rbx
  4169ab:	mov    QWORD PTR [rsi+0x40],rbx
  4169af:	add    rax,0x1
  4169b3:	cmp    rbx,0xffffffffffffffff
  4169b7:	je     0x41623f
  4169bd:	mov    QWORD PTR [rsp+0x38],rax
  4169c2:	jmp    0x416690
  4169c7:	nop    WORD PTR [rax+rax*1+0x0]
  4169d0:	add    rbx,0x1
  4169d4:	movsx  eax,BYTE PTR [rbx]
  4169d7:	lea    edx,[rax-0x30]
  4169da:	cmp    dl,0x9
  4169dd:	jbe    0x41648c
  4169e3:	sub    rbp,0x1
  4169e7:	cmp    rbp,0xfffffffffffffffd
  4169eb:	ja     0x41623f
  4169f1:	mov    QWORD PTR [rsi+0x28],rbp
  4169f5:	add    rbx,0x1
  4169f9:	jmp    0x4163ba
  4169fe:	add    rbp,0x1
  416a02:	movsx  eax,BYTE PTR [rbp+0x0]
  416a06:	lea    edx,[rax-0x30]
  416a09:	cmp    dl,0x9
  416a0c:	jbe    0x4161fa
  416a12:	sub    rbx,0x1
  416a16:	cmp    rbx,0xfffffffffffffffd
  416a1a:	ja     0x41623f
  416a20:	mov    QWORD PTR [rsi+0x40],rbx
  416a24:	add    rbp,0x1
  416a28:	jmp    0x416690
  416a2d:	mov    rcx,rdx
  416a30:	call   0x413870
  416a35:	mov    r10,QWORD PTR [rsp+0x48]
  416a3a:	mov    r11,rax
  416a3d:	mov    r9d,DWORD PTR [rsp+0x40]
  416a42:	jmp    0x416831
  416a47:	cmp    edx,0x5
  416a4a:	jne    0x416243
  416a50:	movzx  eax,BYTE PTR [rbp+0x0]
  416a54:	mov    rbx,rbp
  416a57:	jmp    0x416115
  416a5c:	xor    eax,eax
  416a5e:	jmp    0x416339
  416a63:	mov    rax,QWORD PTR [r12]
  416a67:	mov    rcx,r9
  416a6a:	mov    QWORD PTR [rsp+0x40],r10
  416a6f:	lea    rdx,[rax+rax*4]
  416a73:	lea    r8,[rax+rdx*2]
  416a77:	mov    rdx,QWORD PTR [rsp+0x30]
  416a7c:	shl    r8,0x3
  416a80:	call   0x422810
  416a85:	mov    r10,QWORD PTR [rsp+0x40]
  416a8a:	mov    r9,rax
  416a8d:	jmp    0x41677b
  416a92:	mov    rcx,rdx
  416a95:	call   0x413870
  416a9a:	mov    r10,QWORD PTR [rsp+0x40]
  416a9f:	mov    r9,rax
  416aa2:	jmp    0x416899
  416aa7:	mov    r8,QWORD PTR [r13+0x0]
  416aab:	mov    rcx,r9
  416aae:	mov    rdx,r15
  416ab1:	mov    QWORD PTR [rsp+0x40],r10
  416ab6:	shl    r8,0x5
  416aba:	call   0x422810
  416abf:	mov    r10,QWORD PTR [rsp+0x40]
  416ac4:	mov    r9,rax
  416ac7:	jmp    0x4168ac
  416acc:	mov    r8,QWORD PTR [r13+0x0]
  416ad0:	mov    rcx,r11
  416ad3:	mov    rdx,r15
  416ad6:	mov    QWORD PTR [rsp+0x48],r10
  416adb:	mov    DWORD PTR [rsp+0x40],r9d
  416ae0:	shl    r8,0x5
  416ae4:	call   0x422810
  416ae9:	mov    r10,QWORD PTR [rsp+0x48]
  416aee:	mov    r11,rax
  416af1:	mov    r9d,DWORD PTR [rsp+0x40]
  416af6:	jmp    0x416844
  416afb:	mov    ebp,eax
  416afd:	mov    r9d,0x12
  416b03:	jmp    0x4164ef
  416b08:	mov    ebp,eax
  416b0a:	mov    r9d,0x15
  416b10:	jmp    0x4164ef
  416b15:	mov    r8,QWORD PTR [r13+0x0]
  416b19:	mov    rcx,r9
  416b1c:	mov    rdx,r15
  416b1f:	mov    QWORD PTR [rsp+0x40],r10
  416b24:	shl    r8,0x5
  416b28:	call   0x422810
  416b2d:	mov    r10,QWORD PTR [rsp+0x40]
  416b32:	mov    r9,rax
  416b35:	jmp    0x416703
  416b3a:	mov    rcx,rdx
  416b3d:	call   0x413870
  416b42:	mov    r10,QWORD PTR [rsp+0x40]
  416b47:	mov    r9,rax
  416b4a:	jmp    0x4166f0
  416b4f:	nop
  416b50:	push   rsi
  416b51:	push   rbx
  416b52:	sub    rsp,0x28
  416b56:	mov    rbx,rdx
  416b59:	mov    rsi,r8
  416b5c:	call   0x417bf0
  416b61:	cmp    rax,0xffffffffffffffff
  416b65:	je     0x416b94
  416b67:	mov    r8,rsi
  416b6a:	mov    rdx,rbx
  416b6d:	mov    rcx,rax
  416b70:	call   QWORD PTR [rip+0x208a6]        # 0x43741c
  416b76:	cmp    rax,0xffffffffffffffff
  416b7a:	je     0x416bb0
  416b7c:	mov    rcx,rax
  416b7f:	mov    rax,QWORD PTR [rip+0x205fe]        # 0x437184
  416b86:	mov    edx,0x8002
  416b8b:	add    rsp,0x28
  416b8f:	pop    rbx
  416b90:	pop    rsi
  416b91:	rex.W jmp rax
  416b94:	call   QWORD PTR [rip+0x2057a]        # 0x437114
  416b9a:	mov    DWORD PTR [rax],0x9
  416ba0:	mov    eax,0xffffffff
  416ba5:	add    rsp,0x28
  416ba9:	pop    rbx
  416baa:	pop    rsi
  416bab:	ret    
  416bac:	nop    DWORD PTR [rax+0x0]
  416bb0:	call   QWORD PTR [rip+0x2083e]        # 0x4373f4
  416bb6:	cmp    eax,0x2740
  416bbb:	mov    ebx,eax
  416bbd:	je     0x416e74
  416bc3:	jg     0x416c10
  416bc5:	cmp    eax,0x2736
  416bca:	je     0x416e0e
  416bd0:	jle    0x416c8e
  416bd6:	cmp    eax,0x273a
  416bdb:	je     0x416db9
  416be1:	jg     0x416ce8
  416be7:	cmp    eax,0x2738
  416bec:	je     0x416e96
  416bf2:	jg     0x416e85
  416bf8:	call   QWORD PTR [rip+0x20516]        # 0x437114
  416bfe:	mov    DWORD PTR [rax],0x6d
  416c04:	jmp    0x416ba0
  416c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c10:	cmp    eax,0x2748
  416c15:	je     0x416e63
  416c1b:	jg     0x416c50
  416c1d:	cmp    eax,0x2744
  416c22:	je     0x416da8
  416c28:	jg     0x416cc6
  416c2e:	cmp    eax,0x2742
  416c33:	je     0x416d97
  416c39:	jg     0x416d86
  416c3f:	call   QWORD PTR [rip+0x204cf]        # 0x437114
  416c45:	mov    DWORD PTR [rax],0x65
  416c4b:	jmp    0x416ba0
  416c50:	cmp    eax,0x274e
  416c55:	je     0x416dfd
  416c5b:	jg     0x416d28
  416c61:	cmp    eax,0x274c
  416c66:	je     0x416e30
  416c6c:	jg     0x416e1f
  416c72:	cmp    eax,0x2749
  416c77:	jne    0x416d09
  416c7d:	call   QWORD PTR [rip+0x20491]        # 0x437114
  416c83:	mov    DWORD PTR [rax],0x7e
  416c89:	jmp    0x416ba0
  416c8e:	cmp    eax,0x57
  416c91:	je     0x416d75
  416c97:	jle    0x416d56
  416c9d:	cmp    eax,0x2734
  416ca2:	je     0x416eb8
  416ca8:	jg     0x416ea7
  416cae:	cmp    eax,0x2733
  416cb3:	jne    0x416d09
  416cb5:	call   QWORD PTR [rip+0x20459]        # 0x437114
  416cbb:	mov    DWORD PTR [rax],0x8c
  416cc1:	jmp    0x416ba0
  416cc6:	cmp    eax,0x2746
  416ccb:	je     0x416e52
  416cd1:	jg     0x416e41
  416cd7:	call   QWORD PTR [rip+0x20437]        # 0x437114
  416cdd:	mov    DWORD PTR [rax],0x6a
  416ce3:	jmp    0x416ba0
  416ce8:	cmp    eax,0x273d
  416ced:	je     0x416ddb
  416cf3:	cmp    eax,0x273f
  416cf8:	je     0x416dca
  416cfe:	cmp    eax,0x273b
  416d03:	je     0x416dec
  416d09:	call   QWORD PTR [rip+0x20405]        # 0x437114
  416d0f:	lea    ecx,[rbx-0x2711]
  416d15:	lea    edx,[rbx-0x2710]
  416d1b:	cmp    ecx,0x17
  416d1e:	cmovbe ebx,edx
  416d21:	mov    DWORD PTR [rax],ebx
  416d23:	jmp    0x416ba0
  416d28:	cmp    eax,0x2751
  416d2d:	je     0x416eda
  416d33:	cmp    eax,0x2752
  416d38:	je     0x416ec9
  416d3e:	cmp    eax,0x274f
  416d43:	jne    0x416d09
  416d45:	call   QWORD PTR [rip+0x203c9]        # 0x437114
  416d4b:	mov    DWORD PTR [rax],0x26
  416d51:	jmp    0x416ba0
  416d56:	cmp    eax,0x6
  416d59:	je     0x416b94
  416d5f:	cmp    eax,0x8
  416d62:	jne    0x416d09
  416d64:	call   QWORD PTR [rip+0x203aa]        # 0x437114
  416d6a:	mov    DWORD PTR [rax],0xc
  416d70:	jmp    0x416ba0
  416d75:	call   QWORD PTR [rip+0x20399]        # 0x437114
  416d7b:	mov    DWORD PTR [rax],0x16
  416d81:	jmp    0x416ba0
  416d86:	call   QWORD PTR [rip+0x20388]        # 0x437114
  416d8c:	mov    DWORD PTR [rax],0x76
  416d92:	jmp    0x416ba0
  416d97:	call   QWORD PTR [rip+0x20377]        # 0x437114
  416d9d:	mov    DWORD PTR [rax],0x74
  416da3:	jmp    0x416ba0
  416da8:	call   QWORD PTR [rip+0x20366]        # 0x437114
  416dae:	mov    DWORD PTR [rax],0x75
  416db4:	jmp    0x416ba0
  416db9:	call   QWORD PTR [rip+0x20355]        # 0x437114
  416dbf:	mov    DWORD PTR [rax],0x7b
  416dc5:	jmp    0x416ba0
  416dca:	call   QWORD PTR [rip+0x20344]        # 0x437114
  416dd0:	mov    DWORD PTR [rax],0x66
  416dd6:	jmp    0x416ba0
  416ddb:	call   QWORD PTR [rip+0x20333]        # 0x437114
  416de1:	mov    DWORD PTR [rax],0x82
  416de7:	jmp    0x416ba0
  416dec:	call   QWORD PTR [rip+0x20322]        # 0x437114
  416df2:	mov    DWORD PTR [rax],0x87
  416df8:	jmp    0x416ba0
  416dfd:	call   QWORD PTR [rip+0x20311]        # 0x437114
  416e03:	mov    DWORD PTR [rax],0x72
  416e09:	jmp    0x416ba0
  416e0e:	call   QWORD PTR [rip+0x20300]        # 0x437114
  416e14:	mov    DWORD PTR [rax],0x80
  416e1a:	jmp    0x416ba0
  416e1f:	call   QWORD PTR [rip+0x202ef]        # 0x437114
  416e25:	mov    DWORD PTR [rax],0x6b
  416e2b:	jmp    0x416ba0
  416e30:	call   QWORD PTR [rip+0x202de]        # 0x437114
  416e36:	mov    DWORD PTR [rax],0x8a
  416e3c:	jmp    0x416ba0
  416e41:	call   QWORD PTR [rip+0x202cd]        # 0x437114
  416e47:	mov    DWORD PTR [rax],0x77
  416e4d:	jmp    0x416ba0
  416e52:	call   QWORD PTR [rip+0x202bc]        # 0x437114
  416e58:	mov    DWORD PTR [rax],0x6c
  416e5e:	jmp    0x416ba0
  416e63:	call   QWORD PTR [rip+0x202ab]        # 0x437114
  416e69:	mov    DWORD PTR [rax],0x71
  416e6f:	jmp    0x416ba0
  416e74:	call   QWORD PTR [rip+0x2029a]        # 0x437114
  416e7a:	mov    DWORD PTR [rax],0x64
  416e80:	jmp    0x416ba0
  416e85:	call   QWORD PTR [rip+0x20289]        # 0x437114
  416e8b:	mov    DWORD PTR [rax],0x88
  416e91:	jmp    0x416ba0
  416e96:	call   QWORD PTR [rip+0x20278]        # 0x437114
  416e9c:	mov    DWORD PTR [rax],0x73
  416ea2:	jmp    0x416ba0
  416ea7:	call   QWORD PTR [rip+0x20267]        # 0x437114
  416ead:	mov    DWORD PTR [rax],0x67
  416eb3:	jmp    0x416ba0
  416eb8:	call   QWORD PTR [rip+0x20256]        # 0x437114
  416ebe:	mov    DWORD PTR [rax],0x70
  416ec4:	jmp    0x416ba0
  416ec9:	call   QWORD PTR [rip+0x20245]        # 0x437114
  416ecf:	mov    DWORD PTR [rax],0x29
  416ed5:	jmp    0x416ba0
  416eda:	call   QWORD PTR [rip+0x20234]        # 0x437114
  416ee0:	mov    DWORD PTR [rax],0x6e
  416ee6:	jmp    0x416ba0
  416eeb:	nop
  416eec:	nop
  416eed:	nop
  416eee:	nop
  416eef:	nop
  416ef0:	push   rdi
  416ef1:	push   rsi
  416ef2:	push   rbx
  416ef3:	sub    rsp,0x30
  416ef7:	mov    rbx,rdx
  416efa:	mov    esi,r8d
  416efd:	call   0x417bf0
  416f02:	cmp    rax,0xffffffffffffffff
  416f06:	mov    rcx,rax
  416f09:	je     0x417050
  416f0f:	mov    r8d,esi
  416f12:	mov    rdx,rbx
  416f15:	call   QWORD PTR [rip+0x20509]        # 0x437424
  416f1b:	test   eax,eax
  416f1d:	mov    esi,eax
  416f1f:	mov    ebx,eax
  416f21:	js     0x416f30
  416f23:	mov    eax,ebx
  416f25:	add    rsp,0x30
  416f29:	pop    rbx
  416f2a:	pop    rsi
  416f2b:	pop    rdi
  416f2c:	ret    
  416f2d:	nop    DWORD PTR [rax]
  416f30:	call   QWORD PTR [rip+0x204be]        # 0x4373f4
  416f36:	cmp    eax,0x2740
  416f3b:	mov    edi,eax
  416f3d:	je     0x4171db
  416f43:	jg     0x416f90
  416f45:	cmp    eax,0x2736
  416f4a:	je     0x4171b9
  416f50:	jle    0x417012
  416f56:	cmp    eax,0x273a
  416f5b:	je     0x4171a8
  416f61:	jg     0x417094
  416f67:	cmp    eax,0x2738
  416f6c:	je     0x4171ff
  416f72:	jg     0x4171ec
  416f78:	call   QWORD PTR [rip+0x20196]        # 0x437114
  416f7e:	mov    ebx,esi
  416f80:	mov    DWORD PTR [rax],0x6d
  416f86:	jmp    0x416f23
  416f88:	nop    DWORD PTR [rax+rax*1+0x0]
  416f90:	cmp    eax,0x2748
  416f95:	je     0x4171ca
  416f9b:	jg     0x416fd2
  416f9d:	cmp    eax,0x2744
  416fa2:	je     0x417197
  416fa8:	jg     0x417070
  416fae:	cmp    eax,0x2742
  416fb3:	je     0x417186
  416fb9:	jg     0x417173
  416fbf:	call   QWORD PTR [rip+0x2014f]        # 0x437114
  416fc5:	mov    ebx,esi
  416fc7:	mov    DWORD PTR [rax],0x65
  416fcd:	jmp    0x416f23
  416fd2:	cmp    eax,0x274e
  416fd7:	je     0x417247
  416fdd:	jg     0x4170e0
  416fe3:	cmp    eax,0x274c
  416fe8:	je     0x41726b
  416fee:	jg     0x417258
  416ff4:	cmp    eax,0x2749
  416ff9:	jne    0x4170b5
  416fff:	call   QWORD PTR [rip+0x2010f]        # 0x437114
  417005:	mov    ebx,esi
  417007:	mov    DWORD PTR [rax],0x7e
  41700d:	jmp    0x416f23
  417012:	cmp    eax,0x57
  417015:	je     0x41712d
  41701b:	jle    0x417110
  417021:	cmp    eax,0x2734
  417026:	je     0x41728f
  41702c:	jg     0x41727c
  417032:	cmp    eax,0x2733
  417037:	jne    0x4170b5
  417039:	call   QWORD PTR [rip+0x200d5]        # 0x437114
  41703f:	mov    ebx,esi
  417041:	mov    DWORD PTR [rax],0x8c
  417047:	jmp    0x416f23
  41704c:	nop    DWORD PTR [rax+0x0]
  417050:	mov    QWORD PTR [rsp+0x28],rax
  417055:	call   QWORD PTR [rip+0x200b9]        # 0x437114
  41705b:	mov    rcx,QWORD PTR [rsp+0x28]
  417060:	mov    DWORD PTR [rax],0x9
  417066:	mov    ebx,ecx
  417068:	jmp    0x416f23
  41706d:	nop    DWORD PTR [rax]
  417070:	cmp    eax,0x2746
  417075:	je     0x417223
  41707b:	jg     0x417210
  417081:	call   QWORD PTR [rip+0x2008d]        # 0x437114
  417087:	mov    ebx,esi
  417089:	mov    DWORD PTR [rax],0x6a
  41708f:	jmp    0x416f23
  417094:	cmp    eax,0x273d
  417099:	je     0x417162
  41709f:	cmp    eax,0x273f
  4170a4:	je     0x41714f
  4170aa:	cmp    eax,0x273b
  4170af:	je     0x417234
  4170b5:	call   QWORD PTR [rip+0x20059]        # 0x437114
  4170bb:	lea    ecx,[rdi-0x2711]
  4170c1:	lea    edx,[rdi-0x2710]
  4170c7:	mov    ebx,esi
  4170c9:	cmp    ecx,0x17
  4170cc:	cmovbe edi,edx
  4170cf:	mov    DWORD PTR [rax],edi
  4170d1:	jmp    0x416f23
  4170d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170e0:	cmp    eax,0x2751
  4170e5:	je     0x4172b3
  4170eb:	cmp    eax,0x2752
  4170f0:	je     0x4172a0
  4170f6:	cmp    eax,0x274f
  4170fb:	jne    0x4170b5
  4170fd:	call   QWORD PTR [rip+0x20011]        # 0x437114
  417103:	mov    ebx,esi
  417105:	mov    DWORD PTR [rax],0x26
  41710b:	jmp    0x416f23
  417110:	cmp    eax,0x6
  417113:	je     0x41713e
  417115:	cmp    eax,0x8
  417118:	jne    0x4170b5
  41711a:	call   QWORD PTR [rip+0x1fff4]        # 0x437114
  417120:	mov    ebx,esi
  417122:	mov    DWORD PTR [rax],0xc
  417128:	jmp    0x416f23
  41712d:	call   QWORD PTR [rip+0x1ffe1]        # 0x437114
  417133:	mov    DWORD PTR [rax],0x16
  417139:	jmp    0x416f23
  41713e:	call   QWORD PTR [rip+0x1ffd0]        # 0x437114
  417144:	mov    DWORD PTR [rax],0x9
  41714a:	jmp    0x416f23
  41714f:	call   QWORD PTR [rip+0x1ffbf]        # 0x437114
  417155:	mov    ebx,esi
  417157:	mov    DWORD PTR [rax],0x66
  41715d:	jmp    0x416f23
  417162:	call   QWORD PTR [rip+0x1ffac]        # 0x437114
  417168:	mov    DWORD PTR [rax],0x82
  41716e:	jmp    0x416f23
  417173:	call   QWORD PTR [rip+0x1ff9b]        # 0x437114
  417179:	mov    ebx,esi
  41717b:	mov    DWORD PTR [rax],0x76
  417181:	jmp    0x416f23
  417186:	call   QWORD PTR [rip+0x1ff88]        # 0x437114
  41718c:	mov    DWORD PTR [rax],0x74
  417192:	jmp    0x416f23
  417197:	call   QWORD PTR [rip+0x1ff77]        # 0x437114
  41719d:	mov    DWORD PTR [rax],0x75
  4171a3:	jmp    0x416f23
  4171a8:	call   QWORD PTR [rip+0x1ff66]        # 0x437114
  4171ae:	mov    DWORD PTR [rax],0x7b
  4171b4:	jmp    0x416f23
  4171b9:	call   QWORD PTR [rip+0x1ff55]        # 0x437114
  4171bf:	mov    DWORD PTR [rax],0x80
  4171c5:	jmp    0x416f23
  4171ca:	call   QWORD PTR [rip+0x1ff44]        # 0x437114
  4171d0:	mov    DWORD PTR [rax],0x71
  4171d6:	jmp    0x416f23
  4171db:	call   QWORD PTR [rip+0x1ff33]        # 0x437114
  4171e1:	mov    DWORD PTR [rax],0x64
  4171e7:	jmp    0x416f23
  4171ec:	call   QWORD PTR [rip+0x1ff22]        # 0x437114
  4171f2:	mov    ebx,esi
  4171f4:	mov    DWORD PTR [rax],0x88
  4171fa:	jmp    0x416f23
  4171ff:	call   QWORD PTR [rip+0x1ff0f]        # 0x437114
  417205:	mov    DWORD PTR [rax],0x73
  41720b:	jmp    0x416f23
  417210:	call   QWORD PTR [rip+0x1fefe]        # 0x437114
  417216:	mov    ebx,esi
  417218:	mov    DWORD PTR [rax],0x77
  41721e:	jmp    0x416f23
  417223:	call   QWORD PTR [rip+0x1feeb]        # 0x437114
  417229:	mov    DWORD PTR [rax],0x6c
  41722f:	jmp    0x416f23
  417234:	call   QWORD PTR [rip+0x1feda]        # 0x437114
  41723a:	mov    ebx,esi
  41723c:	mov    DWORD PTR [rax],0x87
  417242:	jmp    0x416f23
  417247:	call   QWORD PTR [rip+0x1fec7]        # 0x437114
  41724d:	mov    DWORD PTR [rax],0x72
  417253:	jmp    0x416f23
  417258:	call   QWORD PTR [rip+0x1feb6]        # 0x437114
  41725e:	mov    ebx,esi
  417260:	mov    DWORD PTR [rax],0x6b
  417266:	jmp    0x416f23
  41726b:	call   QWORD PTR [rip+0x1fea3]        # 0x437114
  417271:	mov    DWORD PTR [rax],0x8a
  417277:	jmp    0x416f23
  41727c:	call   QWORD PTR [rip+0x1fe92]        # 0x437114
  417282:	mov    ebx,esi
  417284:	mov    DWORD PTR [rax],0x67
  41728a:	jmp    0x416f23
  41728f:	call   QWORD PTR [rip+0x1fe7f]        # 0x437114
  417295:	mov    DWORD PTR [rax],0x70
  41729b:	jmp    0x416f23
  4172a0:	call   QWORD PTR [rip+0x1fe6e]        # 0x437114
  4172a6:	mov    ebx,esi
  4172a8:	mov    DWORD PTR [rax],0x29
  4172ae:	jmp    0x416f23
  4172b3:	call   QWORD PTR [rip+0x1fe5b]        # 0x437114
  4172b9:	mov    DWORD PTR [rax],0x6e
  4172bf:	jmp    0x416f23
  4172c4:	nop
  4172c5:	nop
  4172c6:	nop
  4172c7:	nop
  4172c8:	nop
  4172c9:	nop
  4172ca:	nop
  4172cb:	nop
  4172cc:	nop
  4172cd:	nop
  4172ce:	nop
  4172cf:	nop
  4172d0:	push   rbx
  4172d1:	sub    rsp,0x20
  4172d5:	mov    ebx,ecx
  4172d7:	call   0x417bc0
  4172dc:	mov    ecx,ebx
  4172de:	add    rsp,0x20
  4172e2:	pop    rbx
  4172e3:	jmp    0x4226f8
  4172e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4172f0:	mov    edx,ecx
  4172f2:	lea    rcx,[rip+0xffffffffffffffd7]        # 0x4172d0
  4172f9:	jmp    0x41ade0
  4172fe:	nop
  4172ff:	nop
  417300:	push   rsi
  417301:	push   rbx
  417302:	sub    rsp,0x38
  417306:	mov    rbx,rdx
  417309:	mov    esi,r8d
  41730c:	call   0x417bf0
  417311:	cmp    rax,0xffffffffffffffff
  417315:	mov    rcx,rax
  417318:	je     0x417480
  41731e:	mov    rdx,rbx
  417321:	mov    r8d,esi
  417324:	call   QWORD PTR [rip+0x2010a]        # 0x437434
  41732a:	mov    ebx,eax
  41732c:	test   ebx,ebx
  41732e:	js     0x417340
  417330:	add    rsp,0x38
  417334:	pop    rbx
  417335:	pop    rsi
  417336:	ret    
  417337:	nop    WORD PTR [rax+rax*1+0x0]
  417340:	mov    rsi,QWORD PTR [rip+0x200ad]        # 0x4373f4
  417347:	call   rsi
  417349:	cmp    eax,0x2733
  41734e:	je     0x417470
  417354:	call   rsi
  417356:	cmp    eax,0x2740
  41735b:	mov    esi,eax
  41735d:	je     0x417661
  417363:	jg     0x4173b0
  417365:	cmp    eax,0x2736
  41736a:	je     0x41764e
  417370:	jle    0x417432
  417376:	cmp    eax,0x273a
  41737b:	je     0x4175a3
  417381:	jg     0x4174e2
  417387:	cmp    eax,0x2738
  41738c:	je     0x41763b
  417392:	jg     0x417628
  417398:	call   QWORD PTR [rip+0x1fd76]        # 0x437114
  41739e:	mov    DWORD PTR [rax],0x6d
  4173a4:	mov    eax,ebx
  4173a6:	jmp    0x417330
  4173a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4173b0:	cmp    eax,0x2748
  4173b5:	je     0x417615
  4173bb:	jg     0x4173f2
  4173bd:	cmp    eax,0x2744
  4173c2:	je     0x4175b6
  4173c8:	jg     0x417512
  4173ce:	cmp    eax,0x2742
  4173d3:	je     0x417687
  4173d9:	jg     0x417674
  4173df:	call   QWORD PTR [rip+0x1fd2f]        # 0x437114
  4173e5:	mov    DWORD PTR [rax],0x65
  4173eb:	mov    eax,ebx
  4173ed:	jmp    0x417330
  4173f2:	cmp    eax,0x274e
  4173f7:	je     0x4175dc
  4173fd:	jg     0x4174a0
  417403:	cmp    eax,0x274c
  417408:	je     0x417602
  41740e:	jg     0x4175ef
  417414:	cmp    eax,0x2749
  417419:	jne    0x4174c1
  41741f:	call   QWORD PTR [rip+0x1fcef]        # 0x437114
  417425:	mov    DWORD PTR [rax],0x7e
  41742b:	mov    eax,ebx
  41742d:	jmp    0x417330
  417432:	cmp    eax,0x57
  417435:	je     0x417557
  41743b:	jle    0x417536
  417441:	cmp    eax,0x2734
  417446:	je     0x4176d3
  41744c:	jg     0x4176c0
  417452:	cmp    eax,0x2733
  417457:	jne    0x4174c1
  417459:	call   QWORD PTR [rip+0x1fcb5]        # 0x437114
  41745f:	mov    DWORD PTR [rax],0x8c
  417465:	mov    eax,ebx
  417467:	jmp    0x417330
  41746c:	nop    DWORD PTR [rax+0x0]
  417470:	mov    ecx,0x2734
  417475:	call   QWORD PTR [rip+0x1ff81]        # 0x4373fc
  41747b:	jmp    0x417354
  417480:	mov    QWORD PTR [rsp+0x28],rax
  417485:	call   QWORD PTR [rip+0x1fc89]        # 0x437114
  41748b:	mov    rcx,QWORD PTR [rsp+0x28]
  417490:	mov    DWORD PTR [rax],0x9
  417496:	mov    eax,ecx
  417498:	jmp    0x417330
  41749d:	nop    DWORD PTR [rax]
  4174a0:	cmp    eax,0x2751
  4174a5:	je     0x4175c9
  4174ab:	cmp    eax,0x2752
  4174b0:	je     0x417590
  4174b6:	cmp    eax,0x274f
  4174bb:	je     0x41757d
  4174c1:	call   QWORD PTR [rip+0x1fc4d]        # 0x437114
  4174c7:	lea    ecx,[rsi-0x2711]
  4174cd:	lea    edx,[rsi-0x2710]
  4174d3:	cmp    ecx,0x17
  4174d6:	cmovbe esi,edx
  4174d9:	mov    DWORD PTR [rax],esi
  4174db:	mov    eax,ebx
  4174dd:	jmp    0x417330
  4174e2:	cmp    eax,0x273d
  4174e7:	je     0x4176ad
  4174ed:	cmp    eax,0x273f
  4174f2:	je     0x41769a
  4174f8:	cmp    eax,0x273b
  4174fd:	jne    0x4174c1
  4174ff:	call   QWORD PTR [rip+0x1fc0f]        # 0x437114
  417505:	mov    DWORD PTR [rax],0x87
  41750b:	mov    eax,ebx
  41750d:	jmp    0x417330
  417512:	cmp    eax,0x2746
  417517:	je     0x4176f9
  41751d:	jg     0x4176e6
  417523:	call   QWORD PTR [rip+0x1fbeb]        # 0x437114
  417529:	mov    DWORD PTR [rax],0x6a
  41752f:	mov    eax,ebx
  417531:	jmp    0x417330
  417536:	cmp    eax,0x6
  417539:	je     0x41756a
  41753b:	cmp    eax,0x8
  41753e:	jne    0x4174c1
  417544:	call   QWORD PTR [rip+0x1fbca]        # 0x437114
  41754a:	mov    DWORD PTR [rax],0xc
  417550:	mov    eax,ebx
  417552:	jmp    0x417330
  417557:	call   QWORD PTR [rip+0x1fbb7]        # 0x437114
  41755d:	mov    DWORD PTR [rax],0x16
  417563:	mov    eax,ebx
  417565:	jmp    0x417330
  41756a:	call   QWORD PTR [rip+0x1fba4]        # 0x437114
  417570:	mov    DWORD PTR [rax],0x9
  417576:	mov    eax,ebx
  417578:	jmp    0x417330
  41757d:	call   QWORD PTR [rip+0x1fb91]        # 0x437114
  417583:	mov    DWORD PTR [rax],0x26
  417589:	mov    eax,ebx
  41758b:	jmp    0x417330
  417590:	call   QWORD PTR [rip+0x1fb7e]        # 0x437114
  417596:	mov    DWORD PTR [rax],0x29
  41759c:	mov    eax,ebx
  41759e:	jmp    0x417330
  4175a3:	call   QWORD PTR [rip+0x1fb6b]        # 0x437114
  4175a9:	mov    DWORD PTR [rax],0x7b
  4175af:	mov    eax,ebx
  4175b1:	jmp    0x417330
  4175b6:	call   QWORD PTR [rip+0x1fb58]        # 0x437114
  4175bc:	mov    DWORD PTR [rax],0x75
  4175c2:	mov    eax,ebx
  4175c4:	jmp    0x417330
  4175c9:	call   QWORD PTR [rip+0x1fb45]        # 0x437114
  4175cf:	mov    DWORD PTR [rax],0x6e
  4175d5:	mov    eax,ebx
  4175d7:	jmp    0x417330
  4175dc:	call   QWORD PTR [rip+0x1fb32]        # 0x437114
  4175e2:	mov    DWORD PTR [rax],0x72
  4175e8:	mov    eax,ebx
  4175ea:	jmp    0x417330
  4175ef:	call   QWORD PTR [rip+0x1fb1f]        # 0x437114
  4175f5:	mov    DWORD PTR [rax],0x6b
  4175fb:	mov    eax,ebx
  4175fd:	jmp    0x417330
  417602:	call   QWORD PTR [rip+0x1fb0c]        # 0x437114
  417608:	mov    DWORD PTR [rax],0x8a
  41760e:	mov    eax,ebx
  417610:	jmp    0x417330
  417615:	call   QWORD PTR [rip+0x1faf9]        # 0x437114
  41761b:	mov    DWORD PTR [rax],0x71
  417621:	mov    eax,ebx
  417623:	jmp    0x417330
  417628:	call   QWORD PTR [rip+0x1fae6]        # 0x437114
  41762e:	mov    DWORD PTR [rax],0x88
  417634:	mov    eax,ebx
  417636:	jmp    0x417330
  41763b:	call   QWORD PTR [rip+0x1fad3]        # 0x437114
  417641:	mov    DWORD PTR [rax],0x73
  417647:	mov    eax,ebx
  417649:	jmp    0x417330
  41764e:	call   QWORD PTR [rip+0x1fac0]        # 0x437114
  417654:	mov    DWORD PTR [rax],0x80
  41765a:	mov    eax,ebx
  41765c:	jmp    0x417330
  417661:	call   QWORD PTR [rip+0x1faad]        # 0x437114
  417667:	mov    DWORD PTR [rax],0x64
  41766d:	mov    eax,ebx
  41766f:	jmp    0x417330
  417674:	call   QWORD PTR [rip+0x1fa9a]        # 0x437114
  41767a:	mov    DWORD PTR [rax],0x76
  417680:	mov    eax,ebx
  417682:	jmp    0x417330
  417687:	call   QWORD PTR [rip+0x1fa87]        # 0x437114
  41768d:	mov    DWORD PTR [rax],0x74
  417693:	mov    eax,ebx
  417695:	jmp    0x417330
  41769a:	call   QWORD PTR [rip+0x1fa74]        # 0x437114
  4176a0:	mov    DWORD PTR [rax],0x66
  4176a6:	mov    eax,ebx
  4176a8:	jmp    0x417330
  4176ad:	call   QWORD PTR [rip+0x1fa61]        # 0x437114
  4176b3:	mov    DWORD PTR [rax],0x82
  4176b9:	mov    eax,ebx
  4176bb:	jmp    0x417330
  4176c0:	call   QWORD PTR [rip+0x1fa4e]        # 0x437114
  4176c6:	mov    DWORD PTR [rax],0x67
  4176cc:	mov    eax,ebx
  4176ce:	jmp    0x417330
  4176d3:	call   QWORD PTR [rip+0x1fa3b]        # 0x437114
  4176d9:	mov    DWORD PTR [rax],0x70
  4176df:	mov    eax,ebx
  4176e1:	jmp    0x417330
  4176e6:	call   QWORD PTR [rip+0x1fa28]        # 0x437114
  4176ec:	mov    DWORD PTR [rax],0x77
  4176f2:	mov    eax,ebx
  4176f4:	jmp    0x417330
  4176f9:	call   QWORD PTR [rip+0x1fa15]        # 0x437114
  4176ff:	mov    DWORD PTR [rax],0x6c
  417705:	mov    eax,ebx
  417707:	jmp    0x417330
  41770c:	nop
  41770d:	nop
  41770e:	nop
  41770f:	nop
  417710:	jmp    0x41bcd0
  417715:	nop
  417716:	nop
  417717:	nop
  417718:	nop
  417719:	nop
  41771a:	nop
  41771b:	nop
  41771c:	nop
  41771d:	nop
  41771e:	nop
  41771f:	nop
  417720:	push   rbp
  417721:	push   rdi
  417722:	push   rsi
  417723:	push   rbx
  417724:	sub    rsp,0x238
  41772b:	test   rcx,rcx
  41772e:	mov    rbp,rcx
  417731:	je     0x417753
  417733:	mov    rbx,QWORD PTR [rip+0x1f98a]        # 0x4370c4
  41773a:	call   rbx
  41773c:	lea    rdx,[rax+0x60]
  417740:	mov    rcx,rbp
  417743:	call   0x422868
  417748:	call   rbx
  41774a:	lea    rcx,[rax+0x60]
  41774e:	call   0x422888
  417753:	mov    rsi,QWORD PTR [rip+0x1f9fa]        # 0x437154
  41775a:	lea    rdi,[rsp+0x1f]
  41775f:	xor    ebx,ebx
  417761:	call   rsi
  417763:	cmp    eax,0xd
  417766:	je     0x417782
  417768:	add    rbx,0x1
  41776c:	cmp    rbx,0x200
  417773:	mov    BYTE PTR [rdi+rbx*1],al
  417776:	jne    0x417761
  417778:	mov    BYTE PTR [rsp+0x220],0x0
  417780:	jmp    0x417787
  417782:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  417787:	test   rbp,rbp
  41778a:	je     0x4177bb
  41778c:	mov    rbx,QWORD PTR [rip+0x1f931]        # 0x4370c4
  417793:	call   rbx
  417795:	lea    rcx,[rip+0x15474]        # 0x42cc10
  41779c:	lea    r9,[rax+0x60]
  4177a0:	mov    r8d,0x2
  4177a6:	mov    edx,0x1
  4177ab:	call   0x422840
  4177b0:	call   rbx
  4177b2:	lea    rcx,[rax+0x60]
  4177b6:	call   0x422888
  4177bb:	lea    rcx,[rsp+0x20]
  4177c0:	call   0x41a820
  4177c5:	add    rsp,0x238
  4177cc:	pop    rbx
  4177cd:	pop    rsi
  4177ce:	pop    rdi
  4177cf:	pop    rbp
  4177d0:	ret    
  4177d1:	nop
  4177d2:	nop
  4177d3:	nop
  4177d4:	nop
  4177d5:	nop
  4177d6:	nop
  4177d7:	nop
  4177d8:	nop
  4177d9:	nop
  4177da:	nop
  4177db:	nop
  4177dc:	nop
  4177dd:	nop
  4177de:	nop
  4177df:	nop
  4177e0:	push   rdi
  4177e1:	push   rsi
  4177e2:	push   rbx
  4177e3:	sub    rsp,0x30
  4177e7:	mov    ebx,edx
  4177e9:	call   0x417bf0
  4177ee:	cmp    rax,0xffffffffffffffff
  4177f2:	mov    rcx,rax
  4177f5:	je     0x417930
  4177fb:	mov    edx,ebx
  4177fd:	call   QWORD PTR [rip+0x1fc79]        # 0x43747c
  417803:	test   eax,eax
  417805:	mov    esi,eax
  417807:	mov    ebx,eax
  417809:	js     0x417815
  41780b:	mov    eax,ebx
  41780d:	add    rsp,0x30
  417811:	pop    rbx
  417812:	pop    rsi
  417813:	pop    rdi
  417814:	ret    
  417815:	call   QWORD PTR [rip+0x1fbd9]        # 0x4373f4
  41781b:	cmp    eax,0x2740
  417820:	mov    edi,eax
  417822:	je     0x417abb
  417828:	jg     0x417870
  41782a:	cmp    eax,0x2736
  41782f:	je     0x417a99
  417835:	jle    0x4178f2
  41783b:	cmp    eax,0x273a
  417840:	je     0x417a88
  417846:	jg     0x417974
  41784c:	cmp    eax,0x2738
  417851:	je     0x417adf
  417857:	jg     0x417acc
  41785d:	call   QWORD PTR [rip+0x1f8b1]        # 0x437114
  417863:	mov    ebx,esi
  417865:	mov    DWORD PTR [rax],0x6d
  41786b:	jmp    0x41780b
  41786d:	nop    DWORD PTR [rax]
  417870:	cmp    eax,0x2748
  417875:	je     0x417aaa
  41787b:	jg     0x4178b2
  41787d:	cmp    eax,0x2744
  417882:	je     0x417a77
  417888:	jg     0x417950
  41788e:	cmp    eax,0x2742
  417893:	je     0x417a66
  417899:	jg     0x417a53
  41789f:	call   QWORD PTR [rip+0x1f86f]        # 0x437114
  4178a5:	mov    ebx,esi
  4178a7:	mov    DWORD PTR [rax],0x65
  4178ad:	jmp    0x41780b
  4178b2:	cmp    eax,0x274e
  4178b7:	je     0x417b27
  4178bd:	jg     0x4179c0
  4178c3:	cmp    eax,0x274c
  4178c8:	je     0x417b4b
  4178ce:	jg     0x417b38
  4178d4:	cmp    eax,0x2749
  4178d9:	jne    0x417995
  4178df:	call   QWORD PTR [rip+0x1f82f]        # 0x437114
  4178e5:	mov    ebx,esi
  4178e7:	mov    DWORD PTR [rax],0x7e
  4178ed:	jmp    0x41780b
  4178f2:	cmp    eax,0x57
  4178f5:	je     0x417a0d
  4178fb:	jle    0x4179f0
  417901:	cmp    eax,0x2734
  417906:	je     0x417b6f
  41790c:	jg     0x417b5c
  417912:	cmp    eax,0x2733
  417917:	jne    0x417995
  417919:	call   QWORD PTR [rip+0x1f7f5]        # 0x437114
  41791f:	mov    ebx,esi
  417921:	mov    DWORD PTR [rax],0x8c
  417927:	jmp    0x41780b
  41792c:	nop    DWORD PTR [rax+0x0]
  417930:	mov    QWORD PTR [rsp+0x28],rax
  417935:	call   QWORD PTR [rip+0x1f7d9]        # 0x437114
  41793b:	mov    rcx,QWORD PTR [rsp+0x28]
  417940:	mov    DWORD PTR [rax],0x9
  417946:	mov    ebx,ecx
  417948:	jmp    0x41780b
  41794d:	nop    DWORD PTR [rax]
  417950:	cmp    eax,0x2746
  417955:	je     0x417b03
  41795b:	jg     0x417af0
  417961:	call   QWORD PTR [rip+0x1f7ad]        # 0x437114
  417967:	mov    ebx,esi
  417969:	mov    DWORD PTR [rax],0x6a
  41796f:	jmp    0x41780b
  417974:	cmp    eax,0x273d
  417979:	je     0x417a42
  41797f:	cmp    eax,0x273f
  417984:	je     0x417a2f
  41798a:	cmp    eax,0x273b
  41798f:	je     0x417b14
  417995:	call   QWORD PTR [rip+0x1f779]        # 0x437114
  41799b:	lea    ecx,[rdi-0x2711]
  4179a1:	lea    edx,[rdi-0x2710]
  4179a7:	mov    ebx,esi
  4179a9:	cmp    ecx,0x17
  4179ac:	cmovbe edi,edx
  4179af:	mov    DWORD PTR [rax],edi
  4179b1:	jmp    0x41780b
  4179b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4179c0:	cmp    eax,0x2751
  4179c5:	je     0x417b93
  4179cb:	cmp    eax,0x2752
  4179d0:	je     0x417b80
  4179d6:	cmp    eax,0x274f
  4179db:	jne    0x417995
  4179dd:	call   QWORD PTR [rip+0x1f731]        # 0x437114
  4179e3:	mov    ebx,esi
  4179e5:	mov    DWORD PTR [rax],0x26
  4179eb:	jmp    0x41780b
  4179f0:	cmp    eax,0x6
  4179f3:	je     0x417a1e
  4179f5:	cmp    eax,0x8
  4179f8:	jne    0x417995
  4179fa:	call   QWORD PTR [rip+0x1f714]        # 0x437114
  417a00:	mov    ebx,esi
  417a02:	mov    DWORD PTR [rax],0xc
  417a08:	jmp    0x41780b
  417a0d:	call   QWORD PTR [rip+0x1f701]        # 0x437114
  417a13:	mov    DWORD PTR [rax],0x16
  417a19:	jmp    0x41780b
  417a1e:	call   QWORD PTR [rip+0x1f6f0]        # 0x437114
  417a24:	mov    DWORD PTR [rax],0x9
  417a2a:	jmp    0x41780b
  417a2f:	call   QWORD PTR [rip+0x1f6df]        # 0x437114
  417a35:	mov    ebx,esi
  417a37:	mov    DWORD PTR [rax],0x66
  417a3d:	jmp    0x41780b
  417a42:	call   QWORD PTR [rip+0x1f6cc]        # 0x437114
  417a48:	mov    DWORD PTR [rax],0x82
  417a4e:	jmp    0x41780b
  417a53:	call   QWORD PTR [rip+0x1f6bb]        # 0x437114
  417a59:	mov    ebx,esi
  417a5b:	mov    DWORD PTR [rax],0x76
  417a61:	jmp    0x41780b
  417a66:	call   QWORD PTR [rip+0x1f6a8]        # 0x437114
  417a6c:	mov    DWORD PTR [rax],0x74
  417a72:	jmp    0x41780b
  417a77:	call   QWORD PTR [rip+0x1f697]        # 0x437114
  417a7d:	mov    DWORD PTR [rax],0x75
  417a83:	jmp    0x41780b
  417a88:	call   QWORD PTR [rip+0x1f686]        # 0x437114
  417a8e:	mov    DWORD PTR [rax],0x7b
  417a94:	jmp    0x41780b
  417a99:	call   QWORD PTR [rip+0x1f675]        # 0x437114
  417a9f:	mov    DWORD PTR [rax],0x80
  417aa5:	jmp    0x41780b
  417aaa:	call   QWORD PTR [rip+0x1f664]        # 0x437114
  417ab0:	mov    DWORD PTR [rax],0x71
  417ab6:	jmp    0x41780b
  417abb:	call   QWORD PTR [rip+0x1f653]        # 0x437114
  417ac1:	mov    DWORD PTR [rax],0x64
  417ac7:	jmp    0x41780b
  417acc:	call   QWORD PTR [rip+0x1f642]        # 0x437114
  417ad2:	mov    ebx,esi
  417ad4:	mov    DWORD PTR [rax],0x88
  417ada:	jmp    0x41780b
  417adf:	call   QWORD PTR [rip+0x1f62f]        # 0x437114
  417ae5:	mov    DWORD PTR [rax],0x73
  417aeb:	jmp    0x41780b
  417af0:	call   QWORD PTR [rip+0x1f61e]        # 0x437114
  417af6:	mov    ebx,esi
  417af8:	mov    DWORD PTR [rax],0x77
  417afe:	jmp    0x41780b
  417b03:	call   QWORD PTR [rip+0x1f60b]        # 0x437114
  417b09:	mov    DWORD PTR [rax],0x6c
  417b0f:	jmp    0x41780b
  417b14:	call   QWORD PTR [rip+0x1f5fa]        # 0x437114
  417b1a:	mov    ebx,esi
  417b1c:	mov    DWORD PTR [rax],0x87
  417b22:	jmp    0x41780b
  417b27:	call   QWORD PTR [rip+0x1f5e7]        # 0x437114
  417b2d:	mov    DWORD PTR [rax],0x72
  417b33:	jmp    0x41780b
  417b38:	call   QWORD PTR [rip+0x1f5d6]        # 0x437114
  417b3e:	mov    ebx,esi
  417b40:	mov    DWORD PTR [rax],0x6b
  417b46:	jmp    0x41780b
  417b4b:	call   QWORD PTR [rip+0x1f5c3]        # 0x437114
  417b51:	mov    DWORD PTR [rax],0x8a
  417b57:	jmp    0x41780b
  417b5c:	call   QWORD PTR [rip+0x1f5b2]        # 0x437114
  417b62:	mov    ebx,esi
  417b64:	mov    DWORD PTR [rax],0x67
  417b6a:	jmp    0x41780b
  417b6f:	call   QWORD PTR [rip+0x1f59f]        # 0x437114
  417b75:	mov    DWORD PTR [rax],0x70
  417b7b:	jmp    0x41780b
  417b80:	call   QWORD PTR [rip+0x1f58e]        # 0x437114
  417b86:	mov    ebx,esi
  417b88:	mov    DWORD PTR [rax],0x29
  417b8e:	jmp    0x41780b
  417b93:	call   QWORD PTR [rip+0x1f57b]        # 0x437114
  417b99:	mov    DWORD PTR [rax],0x6e
  417b9f:	jmp    0x41780b
  417ba4:	nop
  417ba5:	nop
  417ba6:	nop
  417ba7:	nop
  417ba8:	nop
  417ba9:	nop
  417baa:	nop
  417bab:	nop
  417bac:	nop
  417bad:	nop
  417bae:	nop
  417baf:	nop
  417bb0:	ret    
  417bb1:	nop    DWORD PTR [rax+rax*1+0x0]
  417bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417bc0:	sub    rsp,0x28
  417bc4:	mov    eax,DWORD PTR [rip+0x1bcf6]        # 0x4338c0
  417bca:	test   eax,eax
  417bcc:	jne    0x417be5
  417bce:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x417bb0
  417bd5:	call   QWORD PTR [rip+0xdf8d]        # 0x425b68
  417bdb:	mov    DWORD PTR [rip+0x1bcdb],0x1        # 0x4338c0
  417be5:	add    rsp,0x28
  417be9:	ret    
  417bea:	nop
  417beb:	nop
  417bec:	nop
  417bed:	nop
  417bee:	nop
  417bef:	nop
  417bf0:	push   rbx
  417bf1:	sub    rsp,0x20
  417bf5:	mov    ebx,ecx
  417bf7:	call   0x417bc0
  417bfc:	mov    rax,QWORD PTR [rip+0x1f549]        # 0x43714c
  417c03:	mov    ecx,ebx
  417c05:	add    rsp,0x20
  417c09:	pop    rbx
  417c0a:	rex.W jmp rax
  417c0d:	nop
  417c0e:	nop
  417c0f:	nop
  417c10:	push   rdi
  417c11:	push   rsi
  417c12:	push   rbx
  417c13:	sub    rsp,0x30
  417c17:	mov    rbx,rdx
  417c1a:	mov    rsi,r8
  417c1d:	mov    edi,r9d
  417c20:	call   0x417bf0
  417c25:	cmp    rax,0xffffffffffffffff
  417c29:	mov    rcx,rax
  417c2c:	je     0x417d70
  417c32:	mov    rdx,rbx
  417c35:	mov    r9d,edi
  417c38:	mov    r8d,esi
  417c3b:	call   QWORD PTR [rip+0x1f84b]        # 0x43748c
  417c41:	test   eax,eax
  417c43:	mov    ebx,eax
  417c45:	js     0x417c52
  417c47:	movsxd rax,ebx
  417c4a:	add    rsp,0x30
  417c4e:	pop    rbx
  417c4f:	pop    rsi
  417c50:	pop    rdi
  417c51:	ret    
  417c52:	call   QWORD PTR [rip+0x1f79c]        # 0x4373f4
  417c58:	cmp    eax,0x2740
  417c5d:	mov    esi,eax
  417c5f:	je     0x417ee5
  417c65:	jg     0x417cb0
  417c67:	cmp    eax,0x2736
  417c6c:	je     0x417ec3
  417c72:	jle    0x417d30
  417c78:	cmp    eax,0x273a
  417c7d:	je     0x417eb2
  417c83:	jg     0x417db2
  417c89:	cmp    eax,0x2738
  417c8e:	je     0x417f07
  417c94:	jg     0x417ef6
  417c9a:	call   QWORD PTR [rip+0x1f474]        # 0x437114
  417ca0:	mov    DWORD PTR [rax],0x6d
  417ca6:	jmp    0x417c47
  417ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  417cb0:	cmp    eax,0x2748
  417cb5:	je     0x417ed4
  417cbb:	jg     0x417cf0
  417cbd:	cmp    eax,0x2744
  417cc2:	je     0x417ea1
  417cc8:	jg     0x417d90
  417cce:	cmp    eax,0x2742
  417cd3:	je     0x417e90
  417cd9:	jg     0x417e7f
  417cdf:	call   QWORD PTR [rip+0x1f42f]        # 0x437114
  417ce5:	mov    DWORD PTR [rax],0x65
  417ceb:	jmp    0x417c47
  417cf0:	cmp    eax,0x274e
  417cf5:	je     0x417f4b
  417cfb:	jg     0x417df2
  417d01:	cmp    eax,0x274c
  417d06:	je     0x417f6d
  417d0c:	jg     0x417f5c
  417d12:	cmp    eax,0x2749
  417d17:	jne    0x417dd3
  417d1d:	call   QWORD PTR [rip+0x1f3f1]        # 0x437114
  417d23:	mov    DWORD PTR [rax],0x7e
  417d29:	jmp    0x417c47
  417d2e:	xchg   ax,ax
  417d30:	cmp    eax,0x57
  417d33:	je     0x417e3b
  417d39:	jle    0x417e20
  417d3f:	cmp    eax,0x2734
  417d44:	je     0x417f8f
  417d4a:	jg     0x417f7e
  417d50:	cmp    eax,0x2733
  417d55:	jne    0x417dd3
  417d57:	call   QWORD PTR [rip+0x1f3b7]        # 0x437114
  417d5d:	mov    DWORD PTR [rax],0x8c
  417d63:	jmp    0x417c47
  417d68:	nop    DWORD PTR [rax+rax*1+0x0]
  417d70:	mov    QWORD PTR [rsp+0x28],rax
  417d75:	call   QWORD PTR [rip+0x1f399]        # 0x437114
  417d7b:	mov    rcx,QWORD PTR [rsp+0x28]
  417d80:	mov    DWORD PTR [rax],0x9
  417d86:	mov    rax,rcx
  417d89:	jmp    0x417c4a
  417d8e:	xchg   ax,ax
  417d90:	cmp    eax,0x2746
  417d95:	je     0x417f29
  417d9b:	jg     0x417f18
  417da1:	call   QWORD PTR [rip+0x1f36d]        # 0x437114
  417da7:	mov    DWORD PTR [rax],0x6a
  417dad:	jmp    0x417c47
  417db2:	cmp    eax,0x273d
  417db7:	je     0x417e6e
  417dbd:	cmp    eax,0x273f
  417dc2:	je     0x417e5d
  417dc8:	cmp    eax,0x273b
  417dcd:	je     0x417f3a
  417dd3:	call   QWORD PTR [rip+0x1f33b]        # 0x437114
  417dd9:	lea    ecx,[rsi-0x2711]
  417ddf:	lea    edx,[rsi-0x2710]
  417de5:	cmp    ecx,0x17
  417de8:	cmovbe esi,edx
  417deb:	mov    DWORD PTR [rax],esi
  417ded:	jmp    0x417c47
  417df2:	cmp    eax,0x2751
  417df7:	je     0x417fb1
  417dfd:	cmp    eax,0x2752
  417e02:	je     0x417fa0
  417e08:	cmp    eax,0x274f
  417e0d:	jne    0x417dd3
  417e0f:	call   QWORD PTR [rip+0x1f2ff]        # 0x437114
  417e15:	mov    DWORD PTR [rax],0x26
  417e1b:	jmp    0x417c47
  417e20:	cmp    eax,0x6
  417e23:	je     0x417e4c
  417e25:	cmp    eax,0x8
  417e28:	jne    0x417dd3
  417e2a:	call   QWORD PTR [rip+0x1f2e4]        # 0x437114
  417e30:	mov    DWORD PTR [rax],0xc
  417e36:	jmp    0x417c47
  417e3b:	call   QWORD PTR [rip+0x1f2d3]        # 0x437114
  417e41:	mov    DWORD PTR [rax],0x16
  417e47:	jmp    0x417c47
  417e4c:	call   QWORD PTR [rip+0x1f2c2]        # 0x437114
  417e52:	mov    DWORD PTR [rax],0x9
  417e58:	jmp    0x417c47
  417e5d:	call   QWORD PTR [rip+0x1f2b1]        # 0x437114
  417e63:	mov    DWORD PTR [rax],0x66
  417e69:	jmp    0x417c47
  417e6e:	call   QWORD PTR [rip+0x1f2a0]        # 0x437114
  417e74:	mov    DWORD PTR [rax],0x82
  417e7a:	jmp    0x417c47
  417e7f:	call   QWORD PTR [rip+0x1f28f]        # 0x437114
  417e85:	mov    DWORD PTR [rax],0x76
  417e8b:	jmp    0x417c47
  417e90:	call   QWORD PTR [rip+0x1f27e]        # 0x437114
  417e96:	mov    DWORD PTR [rax],0x74
  417e9c:	jmp    0x417c47
  417ea1:	call   QWORD PTR [rip+0x1f26d]        # 0x437114
  417ea7:	mov    DWORD PTR [rax],0x75
  417ead:	jmp    0x417c47
  417eb2:	call   QWORD PTR [rip+0x1f25c]        # 0x437114
  417eb8:	mov    DWORD PTR [rax],0x7b
  417ebe:	jmp    0x417c47
  417ec3:	call   QWORD PTR [rip+0x1f24b]        # 0x437114
  417ec9:	mov    DWORD PTR [rax],0x80
  417ecf:	jmp    0x417c47
  417ed4:	call   QWORD PTR [rip+0x1f23a]        # 0x437114
  417eda:	mov    DWORD PTR [rax],0x71
  417ee0:	jmp    0x417c47
  417ee5:	call   QWORD PTR [rip+0x1f229]        # 0x437114
  417eeb:	mov    DWORD PTR [rax],0x64
  417ef1:	jmp    0x417c47
  417ef6:	call   QWORD PTR [rip+0x1f218]        # 0x437114
  417efc:	mov    DWORD PTR [rax],0x88
  417f02:	jmp    0x417c47
  417f07:	call   QWORD PTR [rip+0x1f207]        # 0x437114
  417f0d:	mov    DWORD PTR [rax],0x73
  417f13:	jmp    0x417c47
  417f18:	call   QWORD PTR [rip+0x1f1f6]        # 0x437114
  417f1e:	mov    DWORD PTR [rax],0x77
  417f24:	jmp    0x417c47
  417f29:	call   QWORD PTR [rip+0x1f1e5]        # 0x437114
  417f2f:	mov    DWORD PTR [rax],0x6c
  417f35:	jmp    0x417c47
  417f3a:	call   QWORD PTR [rip+0x1f1d4]        # 0x437114
  417f40:	mov    DWORD PTR [rax],0x87
  417f46:	jmp    0x417c47
  417f4b:	call   QWORD PTR [rip+0x1f1c3]        # 0x437114
  417f51:	mov    DWORD PTR [rax],0x72
  417f57:	jmp    0x417c47
  417f5c:	call   QWORD PTR [rip+0x1f1b2]        # 0x437114
  417f62:	mov    DWORD PTR [rax],0x6b
  417f68:	jmp    0x417c47
  417f6d:	call   QWORD PTR [rip+0x1f1a1]        # 0x437114
  417f73:	mov    DWORD PTR [rax],0x8a
  417f79:	jmp    0x417c47
  417f7e:	call   QWORD PTR [rip+0x1f190]        # 0x437114
  417f84:	mov    DWORD PTR [rax],0x67
  417f8a:	jmp    0x417c47
  417f8f:	call   QWORD PTR [rip+0x1f17f]        # 0x437114
  417f95:	mov    DWORD PTR [rax],0x70
  417f9b:	jmp    0x417c47
  417fa0:	call   QWORD PTR [rip+0x1f16e]        # 0x437114
  417fa6:	mov    DWORD PTR [rax],0x29
  417fac:	jmp    0x417c47
  417fb1:	call   QWORD PTR [rip+0x1f15d]        # 0x437114
  417fb7:	mov    DWORD PTR [rax],0x6e
  417fbd:	jmp    0x417c47
  417fc2:	nop
  417fc3:	nop
  417fc4:	nop
  417fc5:	nop
  417fc6:	nop
  417fc7:	nop
  417fc8:	nop
  417fc9:	nop
  417fca:	nop
  417fcb:	nop
  417fcc:	nop
  417fcd:	nop
  417fce:	nop
  417fcf:	nop
  417fd0:	push   r15
  417fd2:	push   r14
  417fd4:	push   r13
  417fd6:	push   r12
  417fd8:	push   rbp
  417fd9:	push   rdi
  417fda:	push   rsi
  417fdb:	push   rbx
  417fdc:	sub    rsp,0x48
  417fe0:	mov    rdi,QWORD PTR [rsp+0xb0]
  417fe8:	mov    rsi,QWORD PTR [rsp+0xb8]
  417ff0:	mov    ebp,ecx
  417ff2:	mov    r12,rdx
  417ff5:	mov    r13,r8
  417ff8:	mov    r15d,r9d
  417ffb:	call   0x417bf0
  418000:	cmp    rax,0xffffffffffffffff
  418004:	mov    rcx,rax
  418007:	je     0x41824b
  41800d:	test   rdi,rdi
  418010:	je     0x418051
  418012:	mov    r14d,DWORD PTR [rsi]
  418015:	mov    r9d,r15d
  418018:	mov    QWORD PTR [rsp+0x28],rsi
  41801d:	mov    QWORD PTR [rsp+0x20],rdi
  418022:	mov    r8d,r13d
  418025:	mov    rdx,r12
  418028:	call   QWORD PTR [rip+0x1f466]        # 0x437494
  41802e:	test   eax,eax
  418030:	mov    ebx,eax
  418032:	js     0x418074
  418034:	cmp    r14d,DWORD PTR [rsi]
  418037:	je     0x4180d0
  41803d:	movsxd rax,ebx
  418040:	add    rsp,0x48
  418044:	pop    rbx
  418045:	pop    rsi
  418046:	pop    rdi
  418047:	pop    rbp
  418048:	pop    r12
  41804a:	pop    r13
  41804c:	pop    r14
  41804e:	pop    r15
  418050:	ret    
  418051:	mov    QWORD PTR [rsp+0x28],rsi
  418056:	mov    QWORD PTR [rsp+0x20],0x0
  41805f:	mov    r9d,r15d
  418062:	mov    r8d,r13d
  418065:	mov    rdx,r12
  418068:	call   QWORD PTR [rip+0x1f426]        # 0x437494
  41806e:	test   eax,eax
  418070:	mov    ebx,eax
  418072:	jns    0x41803d
  418074:	call   QWORD PTR [rip+0x1f37a]        # 0x4373f4
  41807a:	cmp    eax,0x2740
  41807f:	mov    esi,eax
  418081:	je     0x41827a
  418087:	jg     0x4180e2
  418089:	cmp    eax,0x2736
  41808e:	je     0x418324
  418094:	jle    0x418160
  41809a:	cmp    eax,0x273a
  41809f:	je     0x418313
  4180a5:	jg     0x4181c2
  4180ab:	cmp    eax,0x2738
  4180b0:	je     0x418379
  4180b6:	jg     0x418368
  4180bc:	call   QWORD PTR [rip+0x1f052]        # 0x437114
  4180c2:	mov    DWORD PTR [rax],0x6d
  4180c8:	jmp    0x41803d
  4180cd:	nop    DWORD PTR [rax]
  4180d0:	mov    r8,rsi
  4180d3:	mov    rdx,rdi
  4180d6:	mov    ecx,ebp
  4180d8:	call   0x41b800
  4180dd:	jmp    0x41803d
  4180e2:	cmp    eax,0x2748
  4180e7:	je     0x418269
  4180ed:	jg     0x418122
  4180ef:	cmp    eax,0x2744
  4180f4:	je     0x418335
  4180fa:	jg     0x4181a0
  418100:	cmp    eax,0x2742
  418105:	je     0x418357
  41810b:	jg     0x418346
  418111:	call   QWORD PTR [rip+0x1effd]        # 0x437114
  418117:	mov    DWORD PTR [rax],0x65
  41811d:	jmp    0x41803d
  418122:	cmp    eax,0x274e
  418127:	je     0x4182be
  41812d:	jg     0x418202
  418133:	cmp    eax,0x274c
  418138:	je     0x4182ad
  41813e:	jg     0x41829c
  418144:	cmp    eax,0x2749
  418149:	jne    0x4181e3
  41814f:	call   QWORD PTR [rip+0x1efbf]        # 0x437114
  418155:	mov    DWORD PTR [rax],0x7e
  41815b:	jmp    0x41803d
  418160:	cmp    eax,0x57
  418163:	je     0x4182cf
  418169:	jle    0x418230
  41816f:	cmp    eax,0x2734
  418174:	je     0x4183bd
  41817a:	jg     0x4183ac
  418180:	cmp    eax,0x2733
  418185:	jne    0x4181e3
  418187:	call   QWORD PTR [rip+0x1ef87]        # 0x437114
  41818d:	mov    DWORD PTR [rax],0x8c
  418193:	jmp    0x41803d
  418198:	nop    DWORD PTR [rax+rax*1+0x0]
  4181a0:	cmp    eax,0x2746
  4181a5:	je     0x41839b
  4181ab:	jg     0x41838a
  4181b1:	call   QWORD PTR [rip+0x1ef5d]        # 0x437114
  4181b7:	mov    DWORD PTR [rax],0x6a
  4181bd:	jmp    0x41803d
  4181c2:	cmp    eax,0x273d
  4181c7:	je     0x418302
  4181cd:	cmp    eax,0x273f
  4181d2:	je     0x4182f1
  4181d8:	cmp    eax,0x273b
  4181dd:	je     0x4182e0
  4181e3:	call   QWORD PTR [rip+0x1ef2b]        # 0x437114
  4181e9:	lea    ecx,[rsi-0x2711]
  4181ef:	lea    edx,[rsi-0x2710]
  4181f5:	cmp    ecx,0x17
  4181f8:	cmovbe esi,edx
  4181fb:	mov    DWORD PTR [rax],esi
  4181fd:	jmp    0x41803d
  418202:	cmp    eax,0x2751
  418207:	je     0x4183df
  41820d:	cmp    eax,0x2752
  418212:	je     0x4183ce
  418218:	cmp    eax,0x274f
  41821d:	jne    0x4181e3
  41821f:	call   QWORD PTR [rip+0x1eeef]        # 0x437114
  418225:	mov    DWORD PTR [rax],0x26
  41822b:	jmp    0x41803d
  418230:	cmp    eax,0x6
  418233:	je     0x41828b
  418235:	cmp    eax,0x8
  418238:	jne    0x4181e3
  41823a:	call   QWORD PTR [rip+0x1eed4]        # 0x437114
  418240:	mov    DWORD PTR [rax],0xc
  418246:	jmp    0x41803d
  41824b:	mov    QWORD PTR [rsp+0x38],rax
  418250:	call   QWORD PTR [rip+0x1eebe]        # 0x437114
  418256:	mov    rcx,QWORD PTR [rsp+0x38]
  41825b:	mov    DWORD PTR [rax],0x9
  418261:	mov    rax,rcx
  418264:	jmp    0x418040
  418269:	call   QWORD PTR [rip+0x1eea5]        # 0x437114
  41826f:	mov    DWORD PTR [rax],0x71
  418275:	jmp    0x41803d
  41827a:	call   QWORD PTR [rip+0x1ee94]        # 0x437114
  418280:	mov    DWORD PTR [rax],0x64
  418286:	jmp    0x41803d
  41828b:	call   QWORD PTR [rip+0x1ee83]        # 0x437114
  418291:	mov    DWORD PTR [rax],0x9
  418297:	jmp    0x41803d
  41829c:	call   QWORD PTR [rip+0x1ee72]        # 0x437114
  4182a2:	mov    DWORD PTR [rax],0x6b
  4182a8:	jmp    0x41803d
  4182ad:	call   QWORD PTR [rip+0x1ee61]        # 0x437114
  4182b3:	mov    DWORD PTR [rax],0x8a
  4182b9:	jmp    0x41803d
  4182be:	call   QWORD PTR [rip+0x1ee50]        # 0x437114
  4182c4:	mov    DWORD PTR [rax],0x72
  4182ca:	jmp    0x41803d
  4182cf:	call   QWORD PTR [rip+0x1ee3f]        # 0x437114
  4182d5:	mov    DWORD PTR [rax],0x16
  4182db:	jmp    0x41803d
  4182e0:	call   QWORD PTR [rip+0x1ee2e]        # 0x437114
  4182e6:	mov    DWORD PTR [rax],0x87
  4182ec:	jmp    0x41803d
  4182f1:	call   QWORD PTR [rip+0x1ee1d]        # 0x437114
  4182f7:	mov    DWORD PTR [rax],0x66
  4182fd:	jmp    0x41803d
  418302:	call   QWORD PTR [rip+0x1ee0c]        # 0x437114
  418308:	mov    DWORD PTR [rax],0x82
  41830e:	jmp    0x41803d
  418313:	call   QWORD PTR [rip+0x1edfb]        # 0x437114
  418319:	mov    DWORD PTR [rax],0x7b
  41831f:	jmp    0x41803d
  418324:	call   QWORD PTR [rip+0x1edea]        # 0x437114
  41832a:	mov    DWORD PTR [rax],0x80
  418330:	jmp    0x41803d
  418335:	call   QWORD PTR [rip+0x1edd9]        # 0x437114
  41833b:	mov    DWORD PTR [rax],0x75
  418341:	jmp    0x41803d
  418346:	call   QWORD PTR [rip+0x1edc8]        # 0x437114
  41834c:	mov    DWORD PTR [rax],0x76
  418352:	jmp    0x41803d
  418357:	call   QWORD PTR [rip+0x1edb7]        # 0x437114
  41835d:	mov    DWORD PTR [rax],0x74
  418363:	jmp    0x41803d
  418368:	call   QWORD PTR [rip+0x1eda6]        # 0x437114
  41836e:	mov    DWORD PTR [rax],0x88
  418374:	jmp    0x41803d
  418379:	call   QWORD PTR [rip+0x1ed95]        # 0x437114
  41837f:	mov    DWORD PTR [rax],0x73
  418385:	jmp    0x41803d
  41838a:	call   QWORD PTR [rip+0x1ed84]        # 0x437114
  418390:	mov    DWORD PTR [rax],0x77
  418396:	jmp    0x41803d
  41839b:	call   QWORD PTR [rip+0x1ed73]        # 0x437114
  4183a1:	mov    DWORD PTR [rax],0x6c
  4183a7:	jmp    0x41803d
  4183ac:	call   QWORD PTR [rip+0x1ed62]        # 0x437114
  4183b2:	mov    DWORD PTR [rax],0x67
  4183b8:	jmp    0x41803d
  4183bd:	call   QWORD PTR [rip+0x1ed51]        # 0x437114
  4183c3:	mov    DWORD PTR [rax],0x70
  4183c9:	jmp    0x41803d
  4183ce:	call   QWORD PTR [rip+0x1ed40]        # 0x437114
  4183d4:	mov    DWORD PTR [rax],0x29
  4183da:	jmp    0x41803d
  4183df:	call   QWORD PTR [rip+0x1ed2f]        # 0x437114
  4183e5:	mov    DWORD PTR [rax],0x6e
  4183eb:	jmp    0x41803d
  4183f0:	push   rbp
  4183f1:	push   r15
  4183f3:	push   r14
  4183f5:	push   r13
  4183f7:	push   r12
  4183f9:	push   rdi
  4183fa:	push   rsi
  4183fb:	push   rbx
  4183fc:	sub    rsp,0x98
  418403:	lea    rbp,[rsp+0x80]
  41840b:	mov    rdi,QWORD PTR [rbp+0x80]
  418412:	mov    r14,rcx
  418415:	mov    ebx,edx
  418417:	mov    r15,r8
  41841a:	mov    r13,r9
  41841d:	call   QWORD PTR [rip+0x1eb79]        # 0x436f9c
  418423:	cmp    eax,0x2
  418426:	je     0x418510
  41842c:	cmp    eax,0x3
  41842f:	je     0x418560
  418435:	cmp    eax,0x1
  418438:	je     0x41844d
  41843a:	xor    edx,edx
  41843c:	mov    rcx,r14
  41843f:	call   QWORD PTR [rip+0x1ec3f]        # 0x437084
  418445:	test   eax,eax
  418447:	jne    0x418539
  41844d:	lea    esi,[rbx+0x7]
  418450:	test   ebx,ebx
  418452:	mov    r10d,ebx
  418455:	mov    r8d,0x1
  41845b:	cmovns esi,ebx
  41845e:	and    r10d,0x7
  418462:	mov    r12d,esi
  418465:	sar    r12d,0x3
  418469:	movsxd r12,r12d
  41846c:	movzx  eax,BYTE PTR [r15+r12*1]
  418471:	bt     eax,r10d
  418475:	jae    0x418550
  41847b:	mov    eax,0x1
  418480:	mov    ecx,r10d
  418483:	xor    edx,edx
  418485:	shl    eax,cl
  418487:	or     BYTE PTR [r15+r12*1+0x8],al
  41848c:	mov    eax,0x1
  418491:	test   r8d,r8d
  418494:	je     0x4184c6
  418496:	lea    esi,[rbx+0x7]
  418499:	test   ebx,ebx
  41849b:	mov    ecx,ebx
  41849d:	cmovns esi,ebx
  4184a0:	and    ecx,0x7
  4184a3:	sar    esi,0x3
  4184a6:	movsxd rsi,esi
  4184a9:	movzx  r8d,BYTE PTR [r13+rsi*1+0x0]
  4184af:	bt     r8d,ecx
  4184b3:	jae    0x4184c6
  4184b5:	mov    r8d,0x1
  4184bb:	add    eax,0x1
  4184be:	shl    r8d,cl
  4184c1:	or     BYTE PTR [r13+rsi*1+0x8],r8b
  4184c6:	test   edx,edx
  4184c8:	je     0x4184f7
  4184ca:	lea    edx,[rbx+0x7]
  4184cd:	test   ebx,ebx
  4184cf:	cmovns edx,ebx
  4184d2:	and    ebx,0x7
  4184d5:	sar    edx,0x3
  4184d8:	movsxd rdx,edx
  4184db:	movzx  ecx,BYTE PTR [rdi+rdx*1]
  4184df:	bt     ecx,ebx
  4184e2:	jae    0x4184f7
  4184e4:	mov    r8d,0x1
  4184ea:	mov    ecx,ebx
  4184ec:	add    eax,0x1
  4184ef:	shl    r8d,cl
  4184f2:	or     BYTE PTR [rdi+rdx*1+0x8],r8b
  4184f7:	lea    rsp,[rbp+0x18]
  4184fb:	pop    rbx
  4184fc:	pop    rsi
  4184fd:	pop    rdi
  4184fe:	pop    r12
  418500:	pop    r13
  418502:	pop    r14
  418504:	pop    r15
  418506:	pop    rbp
  418507:	ret    
  418508:	nop    DWORD PTR [rax+rax*1+0x0]
  418510:	lea    esi,[rbx+0x7]
  418513:	test   ebx,ebx
  418515:	mov    r12d,ebx
  418518:	mov    r10d,ebx
  41851b:	cmovs  r12d,esi
  41851f:	and    r10d,0x7
  418523:	sar    r12d,0x3
  418527:	movsxd rax,r12d
  41852a:	movzx  eax,BYTE PTR [r15+rax*1]
  41852f:	bt     eax,r10d
  418533:	jb     0x4185f3
  418539:	xor    edx,edx
  41853b:	mov    r8d,0x1
  418541:	xor    eax,eax
  418543:	jmp    0x418491
  418548:	nop    DWORD PTR [rax+rax*1+0x0]
  418550:	xor    edx,edx
  418552:	xor    eax,eax
  418554:	jmp    0x418491
  418559:	nop    DWORD PTR [rax+0x0]
  418560:	mov    edx,DWORD PTR [rip+0x1b372]        # 0x4338d8
  418566:	test   edx,edx
  418568:	je     0x4185c0
  41856a:	lea    rax,[rbp-0x38]
  41856e:	xor    r9d,r9d
  418571:	xor    r8d,r8d
  418574:	xor    edx,edx
  418576:	mov    QWORD PTR [rsp+0x28],0x0
  41857f:	mov    rcx,r14
  418582:	mov    QWORD PTR [rsp+0x20],rax
  418587:	call   QWORD PTR [rip+0x1ea87]        # 0x437014
  41858d:	test   eax,eax
  41858f:	je     0x418670
  418595:	mov    eax,DWORD PTR [rbp-0x38]
  418598:	test   eax,eax
  41859a:	je     0x418720
  4185a0:	lea    esi,[rbx+0x7]
  4185a3:	test   ebx,ebx
  4185a5:	mov    r10d,ebx
  4185a8:	cmovns esi,ebx
  4185ab:	and    r10d,0x7
  4185af:	xor    r8d,r8d
  4185b2:	mov    r12d,esi
  4185b5:	sar    r12d,0x3
  4185b9:	jmp    0x418469
  4185be:	xchg   ax,ax
  4185c0:	lea    rcx,[rip+0x14659]        # 0x42cc20
  4185c7:	call   QWORD PTR [rip+0x1e9e7]        # 0x436fb4
  4185cd:	lea    rdx,[rip+0x14656]        # 0x42cc2a
  4185d4:	mov    rcx,rax
  4185d7:	call   QWORD PTR [rip+0x1e9ef]        # 0x436fcc
  4185dd:	mov    DWORD PTR [rip+0x1b2f1],0x1        # 0x4338d8
  4185e7:	mov    QWORD PTR [rip+0x1b2e2],rax        # 0x4338d0
  4185ee:	jmp    0x41856a
  4185f3:	xor    edx,edx
  4185f5:	mov    DWORD PTR [rbp-0x48],r10d
  4185f9:	mov    rcx,r14
  4185fc:	call   QWORD PTR [rip+0x1ea82]        # 0x437084
  418602:	test   eax,eax
  418604:	jne    0x418539
  41860a:	lea    rdx,[rbp-0x20]
  41860e:	mov    rcx,r14
  418611:	call   QWORD PTR [rip+0x1e95d]        # 0x436f74
  418617:	test   eax,eax
  418619:	mov    r8d,0x1
  41861f:	mov    r10d,DWORD PTR [rbp-0x48]
  418623:	je     0x418469
  418629:	mov    DWORD PTR [rbp-0x38],0x0
  418630:	mov    DWORD PTR [rbp-0x34],0x0
  418637:	lea    rdx,[rbp-0x34]
  41863b:	mov    rcx,r14
  41863e:	call   QWORD PTR [rip+0x1e980]        # 0x436fc4
  418644:	test   eax,eax
  418646:	mov    r10d,DWORD PTR [rbp-0x48]
  41864a:	je     0x41872c
  418650:	mov    r8d,DWORD PTR [rbp-0x34]
  418654:	test   r8d,r8d
  418657:	jne    0x41874e
  41865d:	mov    edx,0x1
  418662:	mov    r8d,0x1
  418668:	xor    eax,eax
  41866a:	jmp    0x418491
  41866f:	nop
  418670:	call   QWORD PTR [rip+0x1e92e]        # 0x436fa4
  418676:	cmp    eax,0x6d
  418679:	je     0x418720
  41867f:	mov    rax,QWORD PTR [rip+0x1b24a]        # 0x4338d0
  418686:	lea    rdx,[rbp-0x30]
  41868a:	mov    QWORD PTR [rbp-0x30],0x0
  418692:	mov    QWORD PTR [rbp-0x28],0x0
  41869a:	lea    r8,[rbp-0x20]
  41869e:	mov    QWORD PTR [rbp-0x20],0x0
  4186a6:	mov    QWORD PTR [rbp-0x18],0x0
  4186ae:	mov    QWORD PTR [rbp-0x10],0x0
  4186b6:	test   rax,rax
  4186b9:	mov    QWORD PTR [rbp-0x8],0x0
  4186c1:	mov    QWORD PTR [rbp+0x0],0x0
  4186c9:	je     0x418539
  4186cf:	mov    DWORD PTR [rsp+0x20],0x18
  4186d7:	mov    r9d,0x28
  4186dd:	mov    rcx,r14
  4186e0:	call   rax
  4186e2:	test   eax,eax
  4186e4:	jne    0x418539
  4186ea:	mov    eax,DWORD PTR [rbp-0x4]
  4186ed:	cmp    eax,0x1ff
  4186f2:	ja     0x418539
  4186f8:	mov    edx,DWORD PTR [rbp-0x8]
  4186fb:	cmp    edx,0x1ff
  418701:	setbe  cl
  418704:	xor    r8d,r8d
  418707:	cmp    eax,edx
  418709:	sete   r8b
  41870d:	xor    edx,edx
  41870f:	xor    eax,eax
  418711:	and    r8d,ecx
  418714:	jmp    0x418491
  418719:	nop    DWORD PTR [rax+0x0]
  418720:	xor    edx,edx
  418722:	xor    r8d,r8d
  418725:	xor    eax,eax
  418727:	jmp    0x418491
  41872c:	lea    rdx,[rip+0x1450e]        # 0x42cc41
  418733:	lea    rcx,[rip+0x14510]        # 0x42cc4a
  41873a:	mov    r8d,0xbf
  418740:	call   0x41d9f0
  418745:	mov    r10d,DWORD PTR [rbp-0x48]
  418749:	jmp    0x418650
  41874e:	mov    eax,r8d
  418751:	mov    DWORD PTR [rbp-0x4c],r10d
  418755:	lea    rax,[rax+rax*4]
  418759:	lea    rax,[rax*4+0x1e]
  418761:	shr    rax,0x4
  418765:	shl    rax,0x4
  418769:	call   0x41d290
  41876e:	sub    rsp,rax
  418771:	lea    r9,[rbp-0x38]
  418775:	mov    rcx,r14
  418778:	lea    r11,[rsp+0x30]
  41877d:	mov    rdx,r11
  418780:	mov    QWORD PTR [rbp-0x48],r11
  418784:	call   QWORD PTR [rip+0x1e882]        # 0x43700c
  41878a:	test   eax,eax
  41878c:	mov    r11,QWORD PTR [rbp-0x48]
  418790:	mov    r10d,DWORD PTR [rbp-0x4c]
  418794:	je     0x41865d
  41879a:	mov    edx,DWORD PTR [rbp-0x38]
  41879d:	test   edx,edx
  41879f:	je     0x41865d
  4187a5:	lea    ecx,[rdx-0x1]
  4187a8:	mov    rax,r11
  4187ab:	xor    edx,edx
  4187ad:	mov    r8d,0x1
  4187b3:	add    rcx,0x1
  4187b7:	imul   rcx,rcx,0x14
  4187bb:	add    rcx,r11
  4187be:	cmp    WORD PTR [rax],0x1
  4187c2:	cmove  edx,r8d
  4187c6:	add    rax,0x14
  4187ca:	cmp    rax,rcx
  4187cd:	jne    0x4187be
  4187cf:	xor    eax,eax
  4187d1:	test   edx,edx
  4187d3:	mov    r8d,0x1
  4187d9:	jne    0x418469
  4187df:	jmp    0x418499
  4187e4:	xchg   ax,ax
  4187e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4187f0:	push   rbp
  4187f1:	push   r15
  4187f3:	push   r14
  4187f5:	push   r13
  4187f7:	push   r12
  4187f9:	push   rdi
  4187fa:	push   rsi
  4187fb:	push   rbx
  4187fc:	sub    rsp,0x948
  418803:	lea    rbp,[rsp+0x80]
  41880b:	mov    eax,0x40
  418810:	cmp    ecx,0x40
  418813:	mov    r14,rdx
  418816:	mov    QWORD PTR [rbp+0x920],r8
  41881d:	cmovle eax,ecx
  418820:	cmp    QWORD PTR [rbp+0x930],0x0
  418828:	mov    QWORD PTR [rbp+0x928],r9
  41882f:	mov    DWORD PTR [rbp-0x10],eax
  418832:	je     0x41941b
  418838:	mov    rax,QWORD PTR [rbp+0x930]
  41883f:	mov    edx,0x10624dd3
  418844:	mov    rdi,QWORD PTR [rbp+0x930]
  41884b:	mov    ecx,DWORD PTR [rax+0x8]
  41884e:	mov    eax,ecx
  418850:	sar    ecx,0x1f
  418853:	imul   edx
  418855:	sar    edx,0x6
  418858:	mov    eax,edx
  41885a:	imul   edx,DWORD PTR [rdi],0x3e8
  418860:	sub    eax,ecx
  418862:	add    eax,edx
  418864:	test   r8,r8
  418867:	sete   dl
  41886a:	test   r9,r9
  41886d:	mov    DWORD PTR [rbp-0xc],eax
  418870:	sete   al
  418873:	test   dl,al
  418875:	je     0x418880
  418877:	test   r14,r14
  41887a:	je     0x4194bb
  418880:	mov    rax,QWORD PTR [rip+0x1b061]        # 0x4338e8
  418887:	test   rax,rax
  41888a:	je     0x419432
  418890:	test   r14,r14
  418893:	mov    QWORD PTR [rbp+0x6b0],rax
  41889a:	mov    QWORD PTR [rbp+0x20],0x0
  4188a2:	mov    QWORD PTR [rbp+0x28],0x0
  4188aa:	mov    QWORD PTR [rbp+0x30],0x0
  4188b2:	mov    QWORD PTR [rbp+0x38],0x0
  4188ba:	mov    QWORD PTR [rbp+0x40],0x0
  4188c2:	mov    QWORD PTR [rbp+0x48],0x0
  4188ca:	mov    QWORD PTR [rbp+0x10],0x0
  4188d2:	je     0x419489
  4188d8:	mov    r9d,DWORD PTR [r14]
  4188db:	test   r9d,r9d
  4188de:	je     0x418965
  4188e4:	lea    rax,[rbp+0xc]
  4188e8:	xor    r15d,r15d
  4188eb:	lea    rdi,[rbp+0x4a0]
  4188f2:	mov    rsi,QWORD PTR [rip+0x1e67b]        # 0x436f74
  4188f9:	mov    r12d,0x1
  4188ff:	mov    QWORD PTR [rbp-0x8],rax
  418903:	jmp    0x41892d
  418905:	lea    eax,[rbx+0x7]
  418908:	test   ebx,ebx
  41890a:	mov    ecx,ebx
  41890c:	mov    edx,r12d
  41890f:	cmovns eax,ebx
  418912:	and    ecx,0x7
  418915:	add    r15d,0x1
  418919:	sar    eax,0x3
  41891c:	shl    edx,cl
  41891e:	cdqe   
  418920:	or     BYTE PTR [rbp+rax*1+0x20],dl
  418924:	or     BYTE PTR [rbp+rax*1+0x10],dl
  418928:	cmp    r15d,DWORD PTR [r14]
  41892b:	jae    0x418965
  41892d:	movsxd rax,r15d
  418930:	mov    rbx,QWORD PTR [r14+rax*8+0x8]
  418935:	mov    ecx,ebx
  418937:	call   0x417bf0
  41893c:	mov    rdx,rdi
  41893f:	mov    r13,rax
  418942:	mov    rcx,rax
  418945:	call   rsi
  418947:	test   eax,eax
  418949:	je     0x418905
  41894b:	mov    rdx,QWORD PTR [rbp-0x8]
  41894f:	mov    rcx,r13
  418952:	call   QWORD PTR [rip+0x1e66c]        # 0x436fc4
  418958:	test   eax,eax
  41895a:	jne    0x418905
  41895c:	add    r15d,0x1
  418960:	cmp    r15d,DWORD PTR [r14]
  418963:	jb     0x41892d
  418965:	cmp    QWORD PTR [rbp+0x920],0x0
  41896d:	je     0x4194a3
  418973:	mov    rax,QWORD PTR [rbp+0x920]
  41897a:	mov    r8d,DWORD PTR [rax]
  41897d:	test   r8d,r8d
  418980:	je     0x418a2c
  418986:	lea    rax,[rbp+0xc]
  41898a:	xor    r15d,r15d
  41898d:	mov    QWORD PTR [rbp+0x918],r14
  418994:	lea    rdi,[rbp+0x4a0]
  41899b:	mov    rsi,QWORD PTR [rip+0x1e5d2]        # 0x436f74
  4189a2:	mov    r12d,0x1
  4189a8:	mov    QWORD PTR [rbp-0x8],rax
  4189ac:	mov    r14d,r15d
  4189af:	mov    rbx,QWORD PTR [rbp+0x920]
  4189b6:	jmp    0x4189ec
  4189b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4189c0:	lea    eax,[r13+0x7]
  4189c4:	test   r13d,r13d
  4189c7:	mov    ecx,r13d
  4189ca:	mov    edx,r12d
  4189cd:	cmovns eax,r13d
  4189d1:	and    ecx,0x7
  4189d4:	add    r14d,0x1
  4189d8:	sar    eax,0x3
  4189db:	shl    edx,cl
  4189dd:	cdqe   
  4189df:	or     BYTE PTR [rbp+rax*1+0x30],dl
  4189e3:	or     BYTE PTR [rbp+rax*1+0x10],dl
  4189e7:	cmp    r14d,DWORD PTR [rbx]
  4189ea:	jae    0x418a25
  4189ec:	movsxd rax,r14d
  4189ef:	mov    r13,QWORD PTR [rbx+rax*8+0x8]
  4189f4:	mov    ecx,r13d
  4189f7:	call   0x417bf0
  4189fc:	mov    rdx,rdi
  4189ff:	mov    r15,rax
  418a02:	mov    rcx,rax
  418a05:	call   rsi
  418a07:	test   eax,eax
  418a09:	je     0x4189c0
  418a0b:	mov    rdx,QWORD PTR [rbp-0x8]
  418a0f:	mov    rcx,r15
  418a12:	call   QWORD PTR [rip+0x1e5ac]        # 0x436fc4
  418a18:	test   eax,eax
  418a1a:	je     0x4189c0
  418a1c:	add    r14d,0x1
  418a20:	cmp    r14d,DWORD PTR [rbx]
  418a23:	jb     0x4189ec
  418a25:	mov    r14,QWORD PTR [rbp+0x918]
  418a2c:	cmp    QWORD PTR [rbp+0x928],0x0
  418a34:	je     0x419471
  418a3a:	mov    rax,QWORD PTR [rbp+0x928]
  418a41:	mov    eax,DWORD PTR [rax]
  418a43:	test   eax,eax
  418a45:	je     0x418a8b
  418a47:	mov    rdi,QWORD PTR [rbp+0x928]
  418a4e:	sub    eax,0x1
  418a51:	mov    r8d,0x1
  418a57:	lea    rdx,[rdi+0x8]
  418a5b:	lea    r9,[rdi+rax*8+0x10]
  418a60:	mov    rcx,QWORD PTR [rdx]
  418a63:	mov    edi,r8d
  418a66:	lea    eax,[rcx+0x7]
  418a69:	test   ecx,ecx
  418a6b:	cmovns eax,ecx
  418a6e:	and    ecx,0x7
  418a71:	add    rdx,0x8
  418a75:	sar    eax,0x3
  418a78:	shl    edi,cl
  418a7a:	cdqe   
  418a7c:	or     BYTE PTR [rbp+rax*1+0x40],dil
  418a81:	or     BYTE PTR [rbp+rax*1+0x10],dil
  418a86:	cmp    rdx,r9
  418a89:	jne    0x418a60
  418a8b:	mov    rax,QWORD PTR [rbp+0x920]
  418a92:	mov    DWORD PTR [r14],0x0
  418a99:	mov    DWORD PTR [rbp+0x80],0x0
  418aa3:	mov    DWORD PTR [rbp+0x290],0x0
  418aad:	mov    DWORD PTR [rbp+0x4a0],0x0
  418ab7:	mov    DWORD PTR [rax],0x0
  418abd:	mov    rax,QWORD PTR [rbp+0x928]
  418ac4:	mov    DWORD PTR [rax],0x0
  418aca:	mov    eax,DWORD PTR [rbp-0x10]
  418acd:	test   eax,eax
  418acf:	jle    0x4194cb
  418ad5:	lea    rbx,[rbp+0x50]
  418ad9:	xor    esi,esi
  418adb:	mov    r15d,0x1
  418ae1:	mov    DWORD PTR [rbp-0x18],esi
  418ae4:	mov    r12d,eax
  418ae7:	mov    QWORD PTR [rbp-0x8],rbx
  418aeb:	lea    rbx,[rbp+0x30]
  418aef:	mov    QWORD PTR [rbp-0x20],rbx
  418af3:	lea    rbx,[rbp+0x20]
  418af7:	mov    QWORD PTR [rbp-0x28],rbx
  418afb:	jmp    0x418b0c
  418afd:	nop    DWORD PTR [rax]
  418b00:	add    esi,0x1
  418b03:	cmp    esi,r12d
  418b06:	je     0x418b9b
  418b0c:	mov    r9d,esi
  418b0f:	mov    r13d,esi
  418b12:	sar    r9d,0x3
  418b16:	and    r13d,0x7
  418b1a:	movsxd rdi,r9d
  418b1d:	movzx  eax,BYTE PTR [rbp+rdi*1+0x10]
  418b22:	bt     eax,r13d
  418b26:	jae    0x418b00
  418b28:	mov    ecx,esi
  418b2a:	call   0x417bf0
  418b2f:	test   rax,rax
  418b32:	mov    rbx,rax
  418b35:	je     0x4193cb
  418b3b:	mov    rdx,QWORD PTR [rbp-0x8]
  418b3f:	mov    rcx,rax
  418b42:	call   QWORD PTR [rip+0x1e42c]        # 0x436f74
  418b48:	test   eax,eax
  418b4a:	je     0x418c87
  418b50:	mov    ecx,DWORD PTR [rbp-0xc]
  418b53:	mov    eax,r15d
  418b56:	add    r15d,0x1
  418b5a:	mov    QWORD PTR [rbp+rax*8+0x6b0],rbx
  418b62:	test   ecx,ecx
  418b64:	je     0x418b00
  418b66:	lea    rax,[rbp+0x40]
  418b6a:	mov    r9,QWORD PTR [rbp-0x20]
  418b6e:	mov    r8,QWORD PTR [rbp-0x28]
  418b72:	mov    edx,esi
  418b74:	mov    rcx,rbx
  418b77:	mov    QWORD PTR [rsp+0x20],rax
  418b7c:	call   0x4183f0
  418b81:	test   eax,eax
  418b83:	mov    eax,0x0
  418b88:	cmove  eax,DWORD PTR [rbp-0xc]
  418b8c:	add    esi,0x1
  418b8f:	cmp    esi,r12d
  418b92:	mov    DWORD PTR [rbp-0xc],eax
  418b95:	jne    0x418b0c
  418b9b:	mov    esi,DWORD PTR [rbp-0x18]
  418b9e:	test   esi,esi
  418ba0:	sete   BYTE PTR [rbp-0x20]
  418ba4:	setne  BYTE PTR [rbp-0x41]
  418ba8:	mov    edi,DWORD PTR [rbp-0xc]
  418bab:	mov    eax,r15d
  418bae:	mov    QWORD PTR [rbp+rax*8+0x6b0],0x0
  418bba:	cmp    edi,0xffffffff
  418bbd:	je     0x418bcb
  418bbf:	call   0x4228a8
  418bc4:	mov    ebx,eax
  418bc6:	add    ebx,edi
  418bc8:	mov    DWORD PTR [rbp-0x48],ebx
  418bcb:	mov    QWORD PTR [rbp+0x918],r14
  418bd2:	mov    r14d,DWORD PTR [rbp-0xc]
  418bd6:	lea    rax,[rbp+0x6b0]
  418bdd:	mov    rbx,QWORD PTR [rip+0x1e7e0]        # 0x4373c4
  418be4:	mov    r13,QWORD PTR [rip+0x1e7e1]        # 0x4373cc
  418beb:	mov    QWORD PTR [rbp-0x28],rax
  418bef:	mov    rax,QWORD PTR [rip+0x1e8a6]        # 0x43749c
  418bf6:	test   r14d,r14d
  418bf9:	mov    r12,QWORD PTR [rip+0x1e7ac]        # 0x4373ac
  418c00:	sete   dil
  418c04:	or     dil,BYTE PTR [rbp-0x20]
  418c08:	mov    QWORD PTR [rbp-0x50],rax
  418c0c:	je     0x419065
  418c12:	cmp    r14d,0xffffffff
  418c16:	mov    edi,0x1
  418c1b:	mov    DWORD PTR [rbp-0xc],0x0
  418c22:	jne    0x4190b2
  418c28:	mov    BYTE PTR [rbp-0x8],dil
  418c2c:	mov    rdi,QWORD PTR [rbp-0x28]
  418c30:	lea    rsi,[rbp+0x50]
  418c34:	xor    r8d,r8d
  418c37:	mov    DWORD PTR [rsp+0x20],0x4ff
  418c3f:	mov    r9d,r14d
  418c42:	mov    rdx,rdi
  418c45:	mov    ecx,r15d
  418c48:	call   QWORD PTR [rip+0x1e76e]        # 0x4373bc
  418c4e:	cmp    eax,r15d
  418c51:	jne    0x418ed2
  418c57:	nop    WORD PTR [rax+rax*1+0x0]
  418c60:	xor    r9d,r9d
  418c63:	xor    r8d,r8d
  418c66:	xor    edx,edx
  418c68:	mov    DWORD PTR [rsp+0x20],0x1
  418c70:	mov    rcx,rsi
  418c73:	call   rbx
  418c75:	test   eax,eax
  418c77:	je     0x418c34
  418c79:	mov    rcx,rsi
  418c7c:	call   r13
  418c7f:	mov    rcx,rsi
  418c82:	call   r12
  418c85:	jmp    0x418c60
  418c87:	xor    edx,edx
  418c89:	mov    DWORD PTR [rbp+0x50],0xdeadbeef
  418c90:	mov    r8,QWORD PTR [rbp-0x8]
  418c94:	mov    rcx,rbx
  418c97:	call   QWORD PTR [rip+0x1e747]        # 0x4373e4
  418c9d:	cmp    DWORD PTR [rbp+0x50],0xdeadbeef
  418ca4:	je     0x418b50
  418caa:	movzx  eax,BYTE PTR [rbp+rdi*1+0x20]
  418caf:	mov    r8d,0x20
  418cb5:	bt     eax,r13d
  418cb9:	jae    0x418d59
  418cbf:	mov    ecx,DWORD PTR [r14]
  418cc2:	test   ecx,ecx
  418cc4:	je     0x418cea
  418cc6:	cmp    rbx,QWORD PTR [r14+0x8]
  418cca:	je     0x418cf7
  418ccc:	lea    rdx,[r14+0x10]
  418cd0:	xor    eax,eax
  418cd2:	jmp    0x418cde
  418cd4:	add    rdx,0x8
  418cd8:	cmp    QWORD PTR [rdx-0x8],rbx
  418cdc:	je     0x418cf7
  418cde:	add    eax,0x1
  418ce1:	cmp    eax,ecx
  418ce3:	jne    0x418cd4
  418ce5:	cmp    ecx,0x3f
  418ce8:	ja     0x418cf7
  418cea:	mov    eax,ecx
  418cec:	add    ecx,0x1
  418cef:	mov    QWORD PTR [r14+rax*8+0x8],rbx
  418cf4:	mov    DWORD PTR [r14],ecx
  418cf7:	mov    ecx,DWORD PTR [rbp+0x80]
  418cfd:	test   ecx,ecx
  418cff:	je     0x418d40
  418d01:	cmp    rbx,QWORD PTR [rbp+0x88]
  418d08:	je     0x4193c0
  418d0e:	lea    rdx,[rbp+0x90]
  418d15:	xor    eax,eax
  418d17:	jmp    0x418d2e
  418d19:	nop    DWORD PTR [rax+0x0]
  418d20:	add    rdx,0x8
  418d24:	cmp    QWORD PTR [rdx-0x8],rbx
  418d28:	je     0x4193c0
  418d2e:	add    eax,0x1
  418d31:	cmp    eax,ecx
  418d33:	jne    0x418d20
  418d35:	cmp    ecx,0x3f
  418d38:	mov    r8d,0x29
  418d3e:	ja     0x418d59
  418d40:	mov    eax,ecx
  418d42:	add    ecx,0x1
  418d45:	mov    r8d,0x29
  418d4b:	mov    QWORD PTR [rbp+rax*8+0x88],rbx
  418d53:	mov    DWORD PTR [rbp+0x80],ecx
  418d59:	movzx  eax,BYTE PTR [rbp+rdi*1+0x30]
  418d5e:	bt     eax,r13d
  418d62:	jae    0x418e09
  418d68:	mov    rax,QWORD PTR [rbp+0x920]
  418d6f:	or     r8d,0x12
  418d73:	mov    ecx,DWORD PTR [rax]
  418d75:	test   ecx,ecx
  418d77:	je     0x418da6
  418d79:	cmp    rbx,QWORD PTR [rax+0x8]
  418d7d:	je     0x418db9
  418d7f:	lea    rdx,[rax+0x10]
  418d83:	xor    eax,eax
  418d85:	jmp    0x418d9a
  418d87:	nop    WORD PTR [rax+rax*1+0x0]
  418d90:	add    rdx,0x8
  418d94:	cmp    QWORD PTR [rdx-0x8],rbx
  418d98:	je     0x418db9
  418d9a:	add    eax,0x1
  418d9d:	cmp    eax,ecx
  418d9f:	jne    0x418d90
  418da1:	cmp    ecx,0x3f
  418da4:	ja     0x418db9
  418da6:	mov    rdx,QWORD PTR [rbp+0x920]
  418dad:	mov    eax,ecx
  418daf:	add    ecx,0x1
  418db2:	mov    QWORD PTR [rdx+rax*8+0x8],rbx
  418db7:	mov    DWORD PTR [rdx],ecx
  418db9:	mov    ecx,DWORD PTR [rbp+0x290]
  418dbf:	test   ecx,ecx
  418dc1:	je     0x418df6
  418dc3:	cmp    rbx,QWORD PTR [rbp+0x298]
  418dca:	je     0x418e09
  418dcc:	lea    rdx,[rbp+0x2a0]
  418dd3:	xor    eax,eax
  418dd5:	jmp    0x418dea
  418dd7:	nop    WORD PTR [rax+rax*1+0x0]
  418de0:	add    rdx,0x8
  418de4:	cmp    QWORD PTR [rdx-0x8],rbx
  418de8:	je     0x418e09
  418dea:	add    eax,0x1
  418ded:	cmp    eax,ecx
  418def:	jne    0x418de0
  418df1:	cmp    ecx,0x3f
  418df4:	ja     0x418e09
  418df6:	mov    eax,ecx
  418df8:	add    ecx,0x1
  418dfb:	mov    QWORD PTR [rbp+rax*8+0x298],rbx
  418e03:	mov    DWORD PTR [rbp+0x290],ecx
  418e09:	movzx  eax,BYTE PTR [rbp+rdi*1+0x40]
  418e0e:	bt     eax,r13d
  418e12:	jae    0x418eb9
  418e18:	mov    rax,QWORD PTR [rbp+0x928]
  418e1f:	or     r8d,0x4
  418e23:	mov    ecx,DWORD PTR [rax]
  418e25:	test   ecx,ecx
  418e27:	je     0x418e56
  418e29:	cmp    rbx,QWORD PTR [rax+0x8]
  418e2d:	je     0x418e69
  418e2f:	lea    rdx,[rax+0x10]
  418e33:	xor    eax,eax
  418e35:	jmp    0x418e4a
  418e37:	nop    WORD PTR [rax+rax*1+0x0]
  418e40:	add    rdx,0x8
  418e44:	cmp    QWORD PTR [rdx-0x8],rbx
  418e48:	je     0x418e69
  418e4a:	add    eax,0x1
  418e4d:	cmp    eax,ecx
  418e4f:	jne    0x418e40
  418e51:	cmp    ecx,0x3f
  418e54:	ja     0x418e69
  418e56:	mov    rdi,QWORD PTR [rbp+0x928]
  418e5d:	mov    eax,ecx
  418e5f:	add    ecx,0x1
  418e62:	mov    QWORD PTR [rdi+rax*8+0x8],rbx
  418e67:	mov    DWORD PTR [rdi],ecx
  418e69:	mov    ecx,DWORD PTR [rbp+0x4a0]
  418e6f:	test   ecx,ecx
  418e71:	je     0x418ea6
  418e73:	cmp    rbx,QWORD PTR [rbp+0x4a8]
  418e7a:	je     0x418eb9
  418e7c:	lea    rdx,[rbp+0x4b0]
  418e83:	xor    eax,eax
  418e85:	jmp    0x418e9a
  418e87:	nop    WORD PTR [rax+rax*1+0x0]
  418e90:	add    rdx,0x8
  418e94:	cmp    QWORD PTR [rdx-0x8],rbx
  418e98:	je     0x418eb9
  418e9a:	add    eax,0x1
  418e9d:	cmp    eax,ecx
  418e9f:	jne    0x418e90
  418ea1:	cmp    ecx,0x3f
  418ea4:	ja     0x418eb9
  418ea6:	mov    eax,ecx
  418ea8:	add    ecx,0x1
  418eab:	mov    QWORD PTR [rbp+rax*8+0x4a8],rbx
  418eb3:	mov    DWORD PTR [rbp+0x4a0],ecx
  418eb9:	mov    rdx,QWORD PTR [rip+0x1aa28]        # 0x4338e8
  418ec0:	mov    rcx,rbx
  418ec3:	call   QWORD PTR [rip+0x1e523]        # 0x4373ec
  418ec9:	add    DWORD PTR [rbp-0x18],0x1
  418ecd:	jmp    0x418b00
  418ed2:	movzx  edi,BYTE PTR [rbp-0x8]
  418ed6:	test   dil,dil
  418ed9:	je     0x418f0d
  418edb:	cmp    BYTE PTR [rbp-0x41],0x0
  418edf:	je     0x418f0d
  418ee1:	lea    rax,[rip+0x1a9f4]        # 0x4338dc
  418ee8:	lea    rdx,[rbp+0x80]
  418eef:	lea    r9,[rbp+0x4a0]
  418ef6:	lea    r8,[rbp+0x290]
  418efd:	xor    ecx,ecx
  418eff:	mov    QWORD PTR [rsp+0x20],rax
  418f04:	mov    rax,QWORD PTR [rbp-0x50]
  418f08:	call   rax
  418f0a:	mov    DWORD PTR [rbp-0xc],eax
  418f0d:	cmp    r15d,0x1
  418f11:	jbe    0x419117
  418f17:	mov    eax,DWORD PTR [rbp-0x10]
  418f1a:	test   eax,eax
  418f1c:	jle    0x419106
  418f22:	lea    rdi,[rbp+0x30]
  418f26:	mov    r15d,0x1
  418f2c:	xor    esi,esi
  418f2e:	mov    DWORD PTR [rbp-0x18],r14d
  418f32:	mov    DWORD PTR [rbp-0x8],r15d
  418f36:	mov    QWORD PTR [rbp-0x30],rdi
  418f3a:	lea    rdi,[rbp+0x20]
  418f3e:	mov    QWORD PTR [rbp-0x38],rdi
  418f42:	lea    rdi,[rbp+0x40]
  418f46:	mov    QWORD PTR [rbp-0x40],rdi
  418f4a:	mov    edi,eax
  418f4c:	jmp    0x418f57
  418f4e:	xchg   ax,ax
  418f50:	add    esi,0x1
  418f53:	cmp    esi,edi
  418f55:	je     0x418fd6
  418f57:	mov    r10d,esi
  418f5a:	mov    r14d,esi
  418f5d:	sar    r10d,0x3
  418f61:	and    r14d,0x7
  418f65:	movsxd r15,r10d
  418f68:	movzx  eax,BYTE PTR [rbp+r15*1+0x10]
  418f6e:	bt     eax,r14d
  418f72:	jae    0x418f50
  418f74:	mov    ecx,esi
  418f76:	call   0x417bf0
  418f7b:	mov    edx,DWORD PTR [rbp-0x8]
  418f7e:	mov    rcx,QWORD PTR [rbp+rdx*8+0x6b0]
  418f86:	cmp    rcx,rax
  418f89:	jne    0x418f50
  418f8b:	mov    rax,QWORD PTR [rbp-0x40]
  418f8f:	mov    r9,QWORD PTR [rbp-0x30]
  418f93:	mov    edx,esi
  418f95:	mov    r8,QWORD PTR [rbp-0x38]
  418f99:	add    DWORD PTR [rbp-0x8],0x1
  418f9d:	mov    QWORD PTR [rsp+0x20],rax
  418fa2:	call   0x4183f0
  418fa7:	movzx  eax,BYTE PTR [rbp+r15*1+0x28]
  418fad:	bt     eax,r14d
  418fb1:	jb     0x418fcb
  418fb3:	movzx  eax,BYTE PTR [rbp+r15*1+0x38]
  418fb9:	bt     eax,r14d
  418fbd:	jb     0x418fcb
  418fbf:	movzx  eax,BYTE PTR [rbp+r15*1+0x48]
  418fc5:	bt     eax,r14d
  418fc9:	jae    0x418f50
  418fcb:	add    esi,0x1
  418fce:	add    DWORD PTR [rbp-0xc],0x1
  418fd2:	cmp    esi,edi
  418fd4:	jne    0x418f57
  418fd6:	mov    edx,DWORD PTR [rbp-0xc]
  418fd9:	mov    r14d,DWORD PTR [rbp-0x18]
  418fdd:	mov    r15d,DWORD PTR [rbp-0x8]
  418fe1:	test   edx,edx
  418fe3:	jne    0x419117
  418fe9:	cmp    r14d,0xffffffff
  418fed:	je     0x419002
  418fef:	cmp    r15d,0x1
  418ff3:	jbe    0x4193e1
  418ff9:	test   r14d,r14d
  418ffc:	je     0x4193e1
  419002:	lea    rax,[rbp+0x80]
  419009:	mov    rsi,QWORD PTR [rbp+0x918]
  419010:	mov    ecx,0x41
  419015:	mov    edx,0x1
  41901a:	mov    rdi,rax
  41901d:	lea    rax,[rbp+0x290]
  419024:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419027:	mov    rdi,rax
  41902a:	mov    rsi,QWORD PTR [rbp+0x920]
  419031:	lea    rax,[rbp+0x4a0]
  419038:	mov    cl,0x41
  41903a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41903d:	mov    rdi,rax
  419040:	mov    rsi,QWORD PTR [rbp+0x928]
  419047:	mov    cl,0x41
  419049:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41904c:	mov    cl,0x1
  41904e:	call   QWORD PTR [rip+0x1e000]        # 0x437054
  419054:	test   r14d,r14d
  419057:	sete   dil
  41905b:	or     dil,BYTE PTR [rbp-0x20]
  41905f:	jne    0x418c12
  419065:	lea    r10,[rbp+0x290]
  41906c:	lea    r11,[rbp+0x80]
  419073:	lea    rax,[rbp+0x4a0]
  41907a:	lea    rdx,[rip+0x1a85b]        # 0x4338dc
  419081:	xor    ecx,ecx
  419083:	mov    r8,r10
  419086:	mov    QWORD PTR [rbp-0x18],r10
  41908a:	mov    QWORD PTR [rbp-0x8],r11
  41908e:	mov    QWORD PTR [rsp+0x20],rdx
  419093:	mov    QWORD PTR [rbp-0x30],rax
  419097:	mov    rdx,r11
  41909a:	mov    r9,rax
  41909d:	call   QWORD PTR [rip+0x1e3f9]        # 0x43749c
  4190a3:	test   eax,eax
  4190a5:	mov    DWORD PTR [rbp-0xc],eax
  4190a8:	mov    r11,QWORD PTR [rbp-0x8]
  4190ac:	mov    r10,QWORD PTR [rbp-0x18]
  4190b0:	je     0x4190d0
  4190b2:	call   0x4228a8
  4190b7:	mov    edx,DWORD PTR [rbp-0x48]
  4190ba:	mov    r14d,edx
  4190bd:	sub    r14d,eax
  4190c0:	cmp    eax,edx
  4190c2:	mov    eax,0x0
  4190c7:	cmovg  r14d,eax
  4190cb:	jmp    0x418c28
  4190d0:	mov    ecx,0x41
  4190d5:	mov    rdi,r11
  4190d8:	mov    rsi,QWORD PTR [rbp+0x918]
  4190df:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4190e2:	mov    rdi,r10
  4190e5:	mov    rsi,QWORD PTR [rbp+0x920]
  4190ec:	mov    cl,0x41
  4190ee:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4190f1:	mov    rdi,QWORD PTR [rbp-0x30]
  4190f5:	mov    rsi,QWORD PTR [rbp+0x928]
  4190fc:	mov    cl,0x41
  4190fe:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419101:	jmp    0x418c12
  419106:	mov    edx,DWORD PTR [rbp-0xc]
  419109:	mov    r15d,0x1
  41910f:	test   edx,edx
  419111:	je     0x418fe9
  419117:	mov    r14,QWORD PTR [rbp+0x918]
  41911e:	mov    rax,QWORD PTR [rbp+0x920]
  419125:	mov    DWORD PTR [r14],0x0
  41912c:	mov    DWORD PTR [rax],0x0
  419132:	mov    rax,QWORD PTR [rbp+0x928]
  419139:	mov    DWORD PTR [rax],0x0
  41913f:	mov    eax,DWORD PTR [rbp-0x10]
  419142:	test   eax,eax
  419144:	jle    0x4192c2
  41914a:	lea    rax,[rbp+0x80]
  419151:	lea    r12,[rbp+0x4a0]
  419158:	mov    ebx,0x1
  41915d:	xor    r13d,r13d
  419160:	mov    DWORD PTR [rbp-0x8],ebx
  419163:	mov    rdi,QWORD PTR [rbp+0x920]
  41916a:	mov    QWORD PTR [rbp-0x18],rax
  41916e:	lea    rax,[rbp+0x290]
  419175:	mov    r15,QWORD PTR [rbp+0x928]
  41917c:	mov    QWORD PTR [rbp-0x28],r12
  419180:	mov    QWORD PTR [rbp-0x20],rax
  419184:	jmp    0x419194
  419186:	add    r13,0x1
  41918a:	cmp    DWORD PTR [rbp-0x10],r13d
  41918e:	jle    0x4192c2
  419194:	mov    esi,r13d
  419197:	mov    ebx,r13d
  41919a:	sar    esi,0x3
  41919d:	and    ebx,0x7
  4191a0:	movsxd rsi,esi
  4191a3:	movzx  eax,BYTE PTR [rbp+rsi*1+0x10]
  4191a8:	bt     eax,ebx
  4191ab:	jae    0x419186
  4191ad:	mov    ecx,r13d
  4191b0:	call   0x417bf0
  4191b5:	mov    r12,rax
  4191b8:	mov    eax,DWORD PTR [rbp-0x8]
  4191bb:	cmp    QWORD PTR [rbp+rax*8+0x6b0],r12
  4191c3:	je     0x4192d9
  4191c9:	xor    r8d,r8d
  4191cc:	xor    edx,edx
  4191ce:	mov    rcx,r12
  4191d1:	call   QWORD PTR [rip+0x1e215]        # 0x4373ec
  4191d7:	mov    rdx,QWORD PTR [rbp-0x18]
  4191db:	mov    rcx,r12
  4191de:	call   0x41bc88
  4191e3:	test   eax,eax
  4191e5:	je     0x41921a
  4191e7:	mov    ecx,DWORD PTR [r14]
  4191ea:	test   ecx,ecx
  4191ec:	je     0x41944e
  4191f2:	cmp    QWORD PTR [r14+0x8],r13
  4191f6:	je     0x41921a
  4191f8:	lea    rdx,[r14+0x10]
  4191fc:	xor    eax,eax
  4191fe:	jmp    0x41920a
  419200:	add    rdx,0x8
  419204:	cmp    r13,QWORD PTR [rdx-0x8]
  419208:	je     0x41921a
  41920a:	add    eax,0x1
  41920d:	cmp    eax,ecx
  41920f:	jne    0x419200
  419211:	cmp    ecx,0x3f
  419214:	jbe    0x41944e
  41921a:	mov    rdx,QWORD PTR [rbp-0x20]
  41921e:	mov    rcx,r12
  419221:	call   0x41bc88
  419226:	test   eax,eax
  419228:	je     0x41925c
  41922a:	mov    ecx,DWORD PTR [rdi]
  41922c:	test   ecx,ecx
  41922e:	je     0x419460
  419234:	cmp    QWORD PTR [rdi+0x8],r13
  419238:	je     0x41925c
  41923a:	lea    rax,[rdi+0x10]
  41923e:	xor    edx,edx
  419240:	jmp    0x41924c
  419242:	add    rax,0x8
  419246:	cmp    QWORD PTR [rax-0x8],r13
  41924a:	je     0x41925c
  41924c:	add    edx,0x1
  41924f:	cmp    edx,ecx
  419251:	jne    0x419242
  419253:	cmp    ecx,0x3f
  419256:	jbe    0x419460
  41925c:	mov    rdx,QWORD PTR [rbp-0x28]
  419260:	mov    rcx,r12
  419263:	call   0x41bc88
  419268:	test   eax,eax
  41926a:	je     0x419186
  419270:	mov    ecx,DWORD PTR [r15]
  419273:	test   ecx,ecx
  419275:	je     0x4192a7
  419277:	cmp    QWORD PTR [r15+0x8],r13
  41927b:	je     0x419186
  419281:	lea    rdx,[r15+0x10]
  419285:	xor    eax,eax
  419287:	jmp    0x419297
  419289:	add    rdx,0x8
  41928d:	cmp    QWORD PTR [rdx-0x8],r13
  419291:	je     0x419186
  419297:	add    eax,0x1
  41929a:	cmp    eax,ecx
  41929c:	jne    0x419289
  41929e:	cmp    ecx,0x3f
  4192a1:	ja     0x419186
  4192a7:	mov    eax,ecx
  4192a9:	add    ecx,0x1
  4192ac:	mov    QWORD PTR [r15+rax*8+0x8],r13
  4192b1:	add    r13,0x1
  4192b5:	cmp    DWORD PTR [rbp-0x10],r13d
  4192b9:	mov    DWORD PTR [r15],ecx
  4192bc:	jg     0x419194
  4192c2:	mov    eax,DWORD PTR [rbp-0xc]
  4192c5:	lea    rsp,[rbp+0x8c8]
  4192cc:	pop    rbx
  4192cd:	pop    rsi
  4192ce:	pop    rdi
  4192cf:	pop    r12
  4192d1:	pop    r13
  4192d3:	pop    r14
  4192d5:	pop    r15
  4192d7:	pop    rbp
  4192d8:	ret    
  4192d9:	movzx  eax,BYTE PTR [rbp+rsi*1+0x28]
  4192de:	add    DWORD PTR [rbp-0x8],0x1
  4192e2:	bt     eax,ebx
  4192e5:	jae    0x419323
  4192e7:	mov    eax,DWORD PTR [r14]
  4192ea:	test   eax,eax
  4192ec:	je     0x419316
  4192ee:	cmp    QWORD PTR [r14+0x8],r13
  4192f2:	je     0x419323
  4192f4:	lea    r8,[r14+0x10]
  4192f8:	xor    ecx,ecx
  4192fa:	jmp    0x41930a
  4192fc:	nop    DWORD PTR [rax+0x0]
  419300:	add    r8,0x8
  419304:	cmp    QWORD PTR [r8-0x8],r13
  419308:	je     0x419323
  41930a:	add    ecx,0x1
  41930d:	cmp    ecx,eax
  41930f:	jne    0x419300
  419311:	cmp    eax,0x3f
  419314:	ja     0x419323
  419316:	mov    ecx,eax
  419318:	add    eax,0x1
  41931b:	mov    QWORD PTR [r14+rcx*8+0x8],r13
  419320:	mov    DWORD PTR [r14],eax
  419323:	movzx  eax,BYTE PTR [rbp+rsi*1+0x38]
  419328:	bt     eax,ebx
  41932b:	jae    0x419363
  41932d:	mov    eax,DWORD PTR [rdi]
  41932f:	test   eax,eax
  419331:	je     0x419357
  419333:	cmp    QWORD PTR [rdi+0x8],r13
  419337:	je     0x419363
  419339:	lea    r8,[rdi+0x10]
  41933d:	xor    ecx,ecx
  41933f:	jmp    0x41934b
  419341:	add    r8,0x8
  419345:	cmp    QWORD PTR [r8-0x8],r13
  419349:	je     0x419363
  41934b:	add    ecx,0x1
  41934e:	cmp    ecx,eax
  419350:	jne    0x419341
  419352:	cmp    eax,0x3f
  419355:	ja     0x419363
  419357:	mov    ecx,eax
  419359:	add    eax,0x1
  41935c:	mov    QWORD PTR [rdi+rcx*8+0x8],r13
  419361:	mov    DWORD PTR [rdi],eax
  419363:	movzx  eax,BYTE PTR [rbp+rsi*1+0x48]
  419368:	bt     eax,ebx
  41936b:	jae    0x419186
  419371:	mov    eax,DWORD PTR [r15]
  419374:	test   eax,eax
  419376:	je     0x4193ae
  419378:	cmp    QWORD PTR [r15+0x8],r13
  41937c:	je     0x419186
  419382:	lea    rcx,[r15+0x10]
  419386:	xor    edx,edx
  419388:	jmp    0x41939e
  41938a:	nop    WORD PTR [rax+rax*1+0x0]
  419390:	add    rcx,0x8
  419394:	cmp    QWORD PTR [rcx-0x8],r13
  419398:	je     0x419186
  41939e:	add    edx,0x1
  4193a1:	cmp    edx,eax
  4193a3:	jne    0x419390
  4193a5:	cmp    eax,0x3f
  4193a8:	ja     0x419186
  4193ae:	mov    edx,eax
  4193b0:	add    eax,0x1
  4193b3:	mov    QWORD PTR [r15+rdx*8+0x8],r13
  4193b8:	mov    DWORD PTR [r15],eax
  4193bb:	jmp    0x419186
  4193c0:	mov    r8d,0x29
  4193c6:	jmp    0x418d59
  4193cb:	call   QWORD PTR [rip+0x1dd43]        # 0x437114
  4193d1:	mov    DWORD PTR [rax],0x9
  4193d7:	mov    eax,0xffffffff
  4193dc:	jmp    0x4192c5
  4193e1:	mov    eax,r14d
  4193e4:	mov    r14,QWORD PTR [rbp+0x918]
  4193eb:	test   eax,eax
  4193ed:	jne    0x41911e
  4193f3:	cmp    QWORD PTR [rbp+0x930],0x0
  4193fb:	je     0x41911e
  419401:	mov    rax,QWORD PTR [rbp+0x930]
  419408:	mov    DWORD PTR [rax+0x8],0x0
  41940f:	mov    QWORD PTR [rax],0x0
  419416:	jmp    0x41911e
  41941b:	mov    rax,QWORD PTR [rip+0x1a4c6]        # 0x4338e8
  419422:	mov    DWORD PTR [rbp-0xc],0xffffffff
  419429:	test   rax,rax
  41942c:	jne    0x418890
  419432:	xor    r9d,r9d
  419435:	xor    r8d,r8d
  419438:	xor    edx,edx
  41943a:	xor    ecx,ecx
  41943c:	call   QWORD PTR [rip+0x1db12]        # 0x436f54
  419442:	mov    QWORD PTR [rip+0x1a49f],rax        # 0x4338e8
  419449:	jmp    0x418890
  41944e:	mov    eax,ecx
  419450:	add    ecx,0x1
  419453:	mov    QWORD PTR [r14+rax*8+0x8],r13
  419458:	mov    DWORD PTR [r14],ecx
  41945b:	jmp    0x41921a
  419460:	mov    eax,ecx
  419462:	add    ecx,0x1
  419465:	mov    QWORD PTR [rdi+rax*8+0x8],r13
  41946a:	mov    DWORD PTR [rdi],ecx
  41946c:	jmp    0x41925c
  419471:	sub    rsp,0x220
  419478:	lea    rax,[rsp+0x30]
  41947d:	mov    QWORD PTR [rbp+0x928],rax
  419484:	jmp    0x418a8b
  419489:	sub    rsp,0x220
  419490:	cmp    QWORD PTR [rbp+0x920],0x0
  419498:	lea    r14,[rsp+0x30]
  41949d:	jne    0x418973
  4194a3:	sub    rsp,0x220
  4194aa:	lea    rax,[rsp+0x30]
  4194af:	mov    QWORD PTR [rbp+0x920],rax
  4194b6:	jmp    0x418a2c
  4194bb:	mov    ecx,DWORD PTR [rbp-0xc]
  4194be:	call   QWORD PTR [rip+0x1db88]        # 0x43704c
  4194c4:	xor    eax,eax
  4194c6:	jmp    0x4192c5
  4194cb:	mov    BYTE PTR [rbp-0x41],0x0
  4194cf:	mov    BYTE PTR [rbp-0x20],0x1
  4194d3:	mov    r15d,0x1
  4194d9:	jmp    0x418ba8
  4194de:	nop
  4194df:	nop
  4194e0:	push   rdi
  4194e1:	push   rsi
  4194e2:	push   rbx
  4194e3:	sub    rsp,0x30
  4194e7:	mov    rbx,rdx
  4194ea:	mov    rsi,r8
  4194ed:	mov    edi,r9d
  4194f0:	call   0x417bf0
  4194f5:	cmp    rax,0xffffffffffffffff
  4194f9:	mov    rcx,rax
  4194fc:	je     0x419640
  419502:	mov    rdx,rbx
  419505:	mov    r9d,edi
  419508:	mov    r8d,esi
  41950b:	call   QWORD PTR [rip+0x1df93]        # 0x4374a4
  419511:	test   eax,eax
  419513:	mov    ebx,eax
  419515:	js     0x419522
  419517:	movsxd rax,ebx
  41951a:	add    rsp,0x30
  41951e:	pop    rbx
  41951f:	pop    rsi
  419520:	pop    rdi
  419521:	ret    
  419522:	call   QWORD PTR [rip+0x1decc]        # 0x4373f4
  419528:	cmp    eax,0x2740
  41952d:	mov    esi,eax
  41952f:	je     0x4197b5
  419535:	jg     0x419580
  419537:	cmp    eax,0x2736
  41953c:	je     0x419793
  419542:	jle    0x419600
  419548:	cmp    eax,0x273a
  41954d:	je     0x419782
  419553:	jg     0x419682
  419559:	cmp    eax,0x2738
  41955e:	je     0x4197d7
  419564:	jg     0x4197c6
  41956a:	call   QWORD PTR [rip+0x1dba4]        # 0x437114
  419570:	mov    DWORD PTR [rax],0x6d
  419576:	jmp    0x419517
  419578:	nop    DWORD PTR [rax+rax*1+0x0]
  419580:	cmp    eax,0x2748
  419585:	je     0x4197a4
  41958b:	jg     0x4195c0
  41958d:	cmp    eax,0x2744
  419592:	je     0x419771
  419598:	jg     0x419660
  41959e:	cmp    eax,0x2742
  4195a3:	je     0x419760
  4195a9:	jg     0x41974f
  4195af:	call   QWORD PTR [rip+0x1db5f]        # 0x437114
  4195b5:	mov    DWORD PTR [rax],0x65
  4195bb:	jmp    0x419517
  4195c0:	cmp    eax,0x274e
  4195c5:	je     0x41981b
  4195cb:	jg     0x4196c2
  4195d1:	cmp    eax,0x274c
  4195d6:	je     0x41983d
  4195dc:	jg     0x41982c
  4195e2:	cmp    eax,0x2749
  4195e7:	jne    0x4196a3
  4195ed:	call   QWORD PTR [rip+0x1db21]        # 0x437114
  4195f3:	mov    DWORD PTR [rax],0x7e
  4195f9:	jmp    0x419517
  4195fe:	xchg   ax,ax
  419600:	cmp    eax,0x57
  419603:	je     0x41970b
  419609:	jle    0x4196f0
  41960f:	cmp    eax,0x2734
  419614:	je     0x41985f
  41961a:	jg     0x41984e
  419620:	cmp    eax,0x2733
  419625:	jne    0x4196a3
  419627:	call   QWORD PTR [rip+0x1dae7]        # 0x437114
  41962d:	mov    DWORD PTR [rax],0x8c
  419633:	jmp    0x419517
  419638:	nop    DWORD PTR [rax+rax*1+0x0]
  419640:	mov    QWORD PTR [rsp+0x28],rax
  419645:	call   QWORD PTR [rip+0x1dac9]        # 0x437114
  41964b:	mov    rcx,QWORD PTR [rsp+0x28]
  419650:	mov    DWORD PTR [rax],0x9
  419656:	mov    rax,rcx
  419659:	jmp    0x41951a
  41965e:	xchg   ax,ax
  419660:	cmp    eax,0x2746
  419665:	je     0x4197f9
  41966b:	jg     0x4197e8
  419671:	call   QWORD PTR [rip+0x1da9d]        # 0x437114
  419677:	mov    DWORD PTR [rax],0x6a
  41967d:	jmp    0x419517
  419682:	cmp    eax,0x273d
  419687:	je     0x41973e
  41968d:	cmp    eax,0x273f
  419692:	je     0x41972d
  419698:	cmp    eax,0x273b
  41969d:	je     0x41980a
  4196a3:	call   QWORD PTR [rip+0x1da6b]        # 0x437114
  4196a9:	lea    ecx,[rsi-0x2711]
  4196af:	lea    edx,[rsi-0x2710]
  4196b5:	cmp    ecx,0x17
  4196b8:	cmovbe esi,edx
  4196bb:	mov    DWORD PTR [rax],esi
  4196bd:	jmp    0x419517
  4196c2:	cmp    eax,0x2751
  4196c7:	je     0x419881
  4196cd:	cmp    eax,0x2752
  4196d2:	je     0x419870
  4196d8:	cmp    eax,0x274f
  4196dd:	jne    0x4196a3
  4196df:	call   QWORD PTR [rip+0x1da2f]        # 0x437114
  4196e5:	mov    DWORD PTR [rax],0x26
  4196eb:	jmp    0x419517
  4196f0:	cmp    eax,0x6
  4196f3:	je     0x41971c
  4196f5:	cmp    eax,0x8
  4196f8:	jne    0x4196a3
  4196fa:	call   QWORD PTR [rip+0x1da14]        # 0x437114
  419700:	mov    DWORD PTR [rax],0xc
  419706:	jmp    0x419517
  41970b:	call   QWORD PTR [rip+0x1da03]        # 0x437114
  419711:	mov    DWORD PTR [rax],0x16
  419717:	jmp    0x419517
  41971c:	call   QWORD PTR [rip+0x1d9f2]        # 0x437114
  419722:	mov    DWORD PTR [rax],0x9
  419728:	jmp    0x419517
  41972d:	call   QWORD PTR [rip+0x1d9e1]        # 0x437114
  419733:	mov    DWORD PTR [rax],0x66
  419739:	jmp    0x419517
  41973e:	call   QWORD PTR [rip+0x1d9d0]        # 0x437114
  419744:	mov    DWORD PTR [rax],0x82
  41974a:	jmp    0x419517
  41974f:	call   QWORD PTR [rip+0x1d9bf]        # 0x437114
  419755:	mov    DWORD PTR [rax],0x76
  41975b:	jmp    0x419517
  419760:	call   QWORD PTR [rip+0x1d9ae]        # 0x437114
  419766:	mov    DWORD PTR [rax],0x74
  41976c:	jmp    0x419517
  419771:	call   QWORD PTR [rip+0x1d99d]        # 0x437114
  419777:	mov    DWORD PTR [rax],0x75
  41977d:	jmp    0x419517
  419782:	call   QWORD PTR [rip+0x1d98c]        # 0x437114
  419788:	mov    DWORD PTR [rax],0x7b
  41978e:	jmp    0x419517
  419793:	call   QWORD PTR [rip+0x1d97b]        # 0x437114
  419799:	mov    DWORD PTR [rax],0x80
  41979f:	jmp    0x419517
  4197a4:	call   QWORD PTR [rip+0x1d96a]        # 0x437114
  4197aa:	mov    DWORD PTR [rax],0x71
  4197b0:	jmp    0x419517
  4197b5:	call   QWORD PTR [rip+0x1d959]        # 0x437114
  4197bb:	mov    DWORD PTR [rax],0x64
  4197c1:	jmp    0x419517
  4197c6:	call   QWORD PTR [rip+0x1d948]        # 0x437114
  4197cc:	mov    DWORD PTR [rax],0x88
  4197d2:	jmp    0x419517
  4197d7:	call   QWORD PTR [rip+0x1d937]        # 0x437114
  4197dd:	mov    DWORD PTR [rax],0x73
  4197e3:	jmp    0x419517
  4197e8:	call   QWORD PTR [rip+0x1d926]        # 0x437114
  4197ee:	mov    DWORD PTR [rax],0x77
  4197f4:	jmp    0x419517
  4197f9:	call   QWORD PTR [rip+0x1d915]        # 0x437114
  4197ff:	mov    DWORD PTR [rax],0x6c
  419805:	jmp    0x419517
  41980a:	call   QWORD PTR [rip+0x1d904]        # 0x437114
  419810:	mov    DWORD PTR [rax],0x87
  419816:	jmp    0x419517
  41981b:	call   QWORD PTR [rip+0x1d8f3]        # 0x437114
  419821:	mov    DWORD PTR [rax],0x72
  419827:	jmp    0x419517
  41982c:	call   QWORD PTR [rip+0x1d8e2]        # 0x437114
  419832:	mov    DWORD PTR [rax],0x6b
  419838:	jmp    0x419517
  41983d:	call   QWORD PTR [rip+0x1d8d1]        # 0x437114
  419843:	mov    DWORD PTR [rax],0x8a
  419849:	jmp    0x419517
  41984e:	call   QWORD PTR [rip+0x1d8c0]        # 0x437114
  419854:	mov    DWORD PTR [rax],0x67
  41985a:	jmp    0x419517
  41985f:	call   QWORD PTR [rip+0x1d8af]        # 0x437114
  419865:	mov    DWORD PTR [rax],0x70
  41986b:	jmp    0x419517
  419870:	call   QWORD PTR [rip+0x1d89e]        # 0x437114
  419876:	mov    DWORD PTR [rax],0x29
  41987c:	jmp    0x419517
  419881:	call   QWORD PTR [rip+0x1d88d]        # 0x437114
  419887:	mov    DWORD PTR [rax],0x6e
  41988d:	jmp    0x419517
  419892:	nop
  419893:	nop
  419894:	nop
  419895:	nop
  419896:	nop
  419897:	nop
  419898:	nop
  419899:	nop
  41989a:	nop
  41989b:	nop
  41989c:	nop
  41989d:	nop
  41989e:	nop
  41989f:	nop
  4198a0:	push   rdi
  4198a1:	push   rsi
  4198a2:	push   rbx
  4198a3:	sub    rsp,0x40
  4198a7:	mov    rbx,rdx
  4198aa:	mov    rsi,r8
  4198ad:	mov    edi,r9d
  4198b0:	call   0x417bf0
  4198b5:	cmp    rax,0xffffffffffffffff
  4198b9:	mov    rcx,rax
  4198bc:	je     0x419a20
  4198c2:	mov    eax,DWORD PTR [rsp+0x88]
  4198c9:	mov    rdx,rbx
  4198cc:	mov    r9d,edi
  4198cf:	mov    r8d,esi
  4198d2:	mov    DWORD PTR [rsp+0x28],eax
  4198d6:	mov    rax,QWORD PTR [rsp+0x80]
  4198de:	mov    QWORD PTR [rsp+0x20],rax
  4198e3:	call   QWORD PTR [rip+0x1dbc3]        # 0x4374ac
  4198e9:	test   eax,eax
  4198eb:	mov    ebx,eax
  4198ed:	js     0x419900
  4198ef:	movsxd rax,ebx
  4198f2:	add    rsp,0x40
  4198f6:	pop    rbx
  4198f7:	pop    rsi
  4198f8:	pop    rdi
  4198f9:	ret    
  4198fa:	nop    WORD PTR [rax+rax*1+0x0]
  419900:	call   QWORD PTR [rip+0x1daee]        # 0x4373f4
  419906:	cmp    eax,0x2740
  41990b:	mov    esi,eax
  41990d:	je     0x419b95
  419913:	jg     0x419960
  419915:	cmp    eax,0x2736
  41991a:	je     0x419b73
  419920:	jle    0x4199e0
  419926:	cmp    eax,0x273a
  41992b:	je     0x419b62
  419931:	jg     0x419a62
  419937:	cmp    eax,0x2738
  41993c:	je     0x419bb7
  419942:	jg     0x419ba6
  419948:	call   QWORD PTR [rip+0x1d7c6]        # 0x437114
  41994e:	mov    DWORD PTR [rax],0x6d
  419954:	jmp    0x4198ef
  419956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419960:	cmp    eax,0x2748
  419965:	je     0x419b84
  41996b:	jg     0x4199a0
  41996d:	cmp    eax,0x2744
  419972:	je     0x419b51
  419978:	jg     0x419a40
  41997e:	cmp    eax,0x2742
  419983:	je     0x419b40
  419989:	jg     0x419b2f
  41998f:	call   QWORD PTR [rip+0x1d77f]        # 0x437114
  419995:	mov    DWORD PTR [rax],0x65
  41999b:	jmp    0x4198ef
  4199a0:	cmp    eax,0x274e
  4199a5:	je     0x419bfb
  4199ab:	jg     0x419aa2
  4199b1:	cmp    eax,0x274c
  4199b6:	je     0x419c1d
  4199bc:	jg     0x419c0c
  4199c2:	cmp    eax,0x2749
  4199c7:	jne    0x419a83
  4199cd:	call   QWORD PTR [rip+0x1d741]        # 0x437114
  4199d3:	mov    DWORD PTR [rax],0x7e
  4199d9:	jmp    0x4198ef
  4199de:	xchg   ax,ax
  4199e0:	cmp    eax,0x57
  4199e3:	je     0x419aeb
  4199e9:	jle    0x419ad0
  4199ef:	cmp    eax,0x2734
  4199f4:	je     0x419c3f
  4199fa:	jg     0x419c2e
  419a00:	cmp    eax,0x2733
  419a05:	jne    0x419a83
  419a07:	call   QWORD PTR [rip+0x1d707]        # 0x437114
  419a0d:	mov    DWORD PTR [rax],0x8c
  419a13:	jmp    0x4198ef
  419a18:	nop    DWORD PTR [rax+rax*1+0x0]
  419a20:	mov    QWORD PTR [rsp+0x38],rax
  419a25:	call   QWORD PTR [rip+0x1d6e9]        # 0x437114
  419a2b:	mov    rcx,QWORD PTR [rsp+0x38]
  419a30:	mov    DWORD PTR [rax],0x9
  419a36:	mov    rax,rcx
  419a39:	jmp    0x4198f2
  419a3e:	xchg   ax,ax
  419a40:	cmp    eax,0x2746
  419a45:	je     0x419bd9
  419a4b:	jg     0x419bc8
  419a51:	call   QWORD PTR [rip+0x1d6bd]        # 0x437114
  419a57:	mov    DWORD PTR [rax],0x6a
  419a5d:	jmp    0x4198ef
  419a62:	cmp    eax,0x273d
  419a67:	je     0x419b1e
  419a6d:	cmp    eax,0x273f
  419a72:	je     0x419b0d
  419a78:	cmp    eax,0x273b
  419a7d:	je     0x419bea
  419a83:	call   QWORD PTR [rip+0x1d68b]        # 0x437114
  419a89:	lea    ecx,[rsi-0x2711]
  419a8f:	lea    edx,[rsi-0x2710]
  419a95:	cmp    ecx,0x17
  419a98:	cmovbe esi,edx
  419a9b:	mov    DWORD PTR [rax],esi
  419a9d:	jmp    0x4198ef
  419aa2:	cmp    eax,0x2751
  419aa7:	je     0x419c61
  419aad:	cmp    eax,0x2752
  419ab2:	je     0x419c50
  419ab8:	cmp    eax,0x274f
  419abd:	jne    0x419a83
  419abf:	call   QWORD PTR [rip+0x1d64f]        # 0x437114
  419ac5:	mov    DWORD PTR [rax],0x26
  419acb:	jmp    0x4198ef
  419ad0:	cmp    eax,0x6
  419ad3:	je     0x419afc
  419ad5:	cmp    eax,0x8
  419ad8:	jne    0x419a83
  419ada:	call   QWORD PTR [rip+0x1d634]        # 0x437114
  419ae0:	mov    DWORD PTR [rax],0xc
  419ae6:	jmp    0x4198ef
  419aeb:	call   QWORD PTR [rip+0x1d623]        # 0x437114
  419af1:	mov    DWORD PTR [rax],0x16
  419af7:	jmp    0x4198ef
  419afc:	call   QWORD PTR [rip+0x1d612]        # 0x437114
  419b02:	mov    DWORD PTR [rax],0x9
  419b08:	jmp    0x4198ef
  419b0d:	call   QWORD PTR [rip+0x1d601]        # 0x437114
  419b13:	mov    DWORD PTR [rax],0x66
  419b19:	jmp    0x4198ef
  419b1e:	call   QWORD PTR [rip+0x1d5f0]        # 0x437114
  419b24:	mov    DWORD PTR [rax],0x82
  419b2a:	jmp    0x4198ef
  419b2f:	call   QWORD PTR [rip+0x1d5df]        # 0x437114
  419b35:	mov    DWORD PTR [rax],0x76
  419b3b:	jmp    0x4198ef
  419b40:	call   QWORD PTR [rip+0x1d5ce]        # 0x437114
  419b46:	mov    DWORD PTR [rax],0x74
  419b4c:	jmp    0x4198ef
  419b51:	call   QWORD PTR [rip+0x1d5bd]        # 0x437114
  419b57:	mov    DWORD PTR [rax],0x75
  419b5d:	jmp    0x4198ef
  419b62:	call   QWORD PTR [rip+0x1d5ac]        # 0x437114
  419b68:	mov    DWORD PTR [rax],0x7b
  419b6e:	jmp    0x4198ef
  419b73:	call   QWORD PTR [rip+0x1d59b]        # 0x437114
  419b79:	mov    DWORD PTR [rax],0x80
  419b7f:	jmp    0x4198ef
  419b84:	call   QWORD PTR [rip+0x1d58a]        # 0x437114
  419b8a:	mov    DWORD PTR [rax],0x71
  419b90:	jmp    0x4198ef
  419b95:	call   QWORD PTR [rip+0x1d579]        # 0x437114
  419b9b:	mov    DWORD PTR [rax],0x64
  419ba1:	jmp    0x4198ef
  419ba6:	call   QWORD PTR [rip+0x1d568]        # 0x437114
  419bac:	mov    DWORD PTR [rax],0x88
  419bb2:	jmp    0x4198ef
  419bb7:	call   QWORD PTR [rip+0x1d557]        # 0x437114
  419bbd:	mov    DWORD PTR [rax],0x73
  419bc3:	jmp    0x4198ef
  419bc8:	call   QWORD PTR [rip+0x1d546]        # 0x437114
  419bce:	mov    DWORD PTR [rax],0x77
  419bd4:	jmp    0x4198ef
  419bd9:	call   QWORD PTR [rip+0x1d535]        # 0x437114
  419bdf:	mov    DWORD PTR [rax],0x6c
  419be5:	jmp    0x4198ef
  419bea:	call   QWORD PTR [rip+0x1d524]        # 0x437114
  419bf0:	mov    DWORD PTR [rax],0x87
  419bf6:	jmp    0x4198ef
  419bfb:	call   QWORD PTR [rip+0x1d513]        # 0x437114
  419c01:	mov    DWORD PTR [rax],0x72
  419c07:	jmp    0x4198ef
  419c0c:	call   QWORD PTR [rip+0x1d502]        # 0x437114
  419c12:	mov    DWORD PTR [rax],0x6b
  419c18:	jmp    0x4198ef
  419c1d:	call   QWORD PTR [rip+0x1d4f1]        # 0x437114
  419c23:	mov    DWORD PTR [rax],0x8a
  419c29:	jmp    0x4198ef
  419c2e:	call   QWORD PTR [rip+0x1d4e0]        # 0x437114
  419c34:	mov    DWORD PTR [rax],0x67
  419c3a:	jmp    0x4198ef
  419c3f:	call   QWORD PTR [rip+0x1d4cf]        # 0x437114
  419c45:	mov    DWORD PTR [rax],0x70
  419c4b:	jmp    0x4198ef
  419c50:	call   QWORD PTR [rip+0x1d4be]        # 0x437114
  419c56:	mov    DWORD PTR [rax],0x29
  419c5c:	jmp    0x4198ef
  419c61:	call   QWORD PTR [rip+0x1d4ad]        # 0x437114
  419c67:	mov    DWORD PTR [rax],0x6e
  419c6d:	jmp    0x4198ef
  419c72:	nop
  419c73:	nop
  419c74:	nop
  419c75:	nop
  419c76:	nop
  419c77:	nop
  419c78:	nop
  419c79:	nop
  419c7a:	nop
  419c7b:	nop
  419c7c:	nop
  419c7d:	nop
  419c7e:	nop
  419c7f:	nop
  419c80:	push   rdi
  419c81:	push   rsi
  419c82:	push   rbx
  419c83:	sub    rsp,0x50
  419c87:	mov    ebx,edx
  419c89:	mov    esi,r8d
  419c8c:	mov    rdi,r9
  419c8f:	call   0x417bf0
  419c94:	cmp    rax,0xffffffffffffffff
  419c98:	mov    rcx,rax
  419c9b:	je     0x419eef
  419ca1:	cmp    ebx,0xffff
  419ca7:	je     0x419cd4
  419ca9:	mov    eax,DWORD PTR [rsp+0x90]
  419cb0:	mov    r8d,esi
  419cb3:	mov    r9,rdi
  419cb6:	mov    edx,ebx
  419cb8:	mov    DWORD PTR [rsp+0x20],eax
  419cbc:	call   QWORD PTR [rip+0x1d7f2]        # 0x4374b4
  419cc2:	mov    esi,eax
  419cc4:	test   esi,esi
  419cc6:	mov    ebx,esi
  419cc8:	js     0x419d22
  419cca:	mov    eax,ebx
  419ccc:	add    rsp,0x50
  419cd0:	pop    rbx
  419cd1:	pop    rsi
  419cd2:	pop    rdi
  419cd3:	ret    
  419cd4:	lea    eax,[rsi-0x1005]
  419cda:	cmp    eax,0x1
  419cdd:	ja     0x419ca9
  419cdf:	mov    r8d,DWORD PTR [rdi+0x8]
  419ce3:	mov    edx,0x10624dd3
  419ce8:	lea    r9,[rsp+0x4c]
  419ced:	mov    eax,r8d
  419cf0:	sar    r8d,0x1f
  419cf4:	imul   edx
  419cf6:	imul   eax,DWORD PTR [rdi],0x3e8
  419cfc:	mov    DWORD PTR [rsp+0x20],0x4
  419d04:	sar    edx,0x6
  419d07:	sub    edx,r8d
  419d0a:	mov    r8d,esi
  419d0d:	add    edx,eax
  419d0f:	mov    DWORD PTR [rsp+0x4c],edx
  419d13:	mov    edx,0xffff
  419d18:	call   QWORD PTR [rip+0x1d796]        # 0x4374b4
  419d1e:	mov    esi,eax
  419d20:	jmp    0x419cc4
  419d22:	call   QWORD PTR [rip+0x1d6cc]        # 0x4373f4
  419d28:	cmp    eax,0x2740
  419d2d:	mov    edi,eax
  419d2f:	je     0x419f1d
  419d35:	jg     0x419d80
  419d37:	cmp    eax,0x2736
  419d3c:	je     0x419fc9
  419d42:	jle    0x419e00
  419d48:	cmp    eax,0x273a
  419d4d:	je     0x419fb8
  419d53:	jg     0x419e62
  419d59:	cmp    eax,0x2738
  419d5e:	je     0x41a01e
  419d64:	jg     0x41a00d
  419d6a:	call   QWORD PTR [rip+0x1d3a4]        # 0x437114
  419d70:	mov    DWORD PTR [rax],0x6d
  419d76:	jmp    0x419cca
  419d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  419d80:	cmp    eax,0x2748
  419d85:	je     0x419f0c
  419d8b:	jg     0x419dc0
  419d8d:	cmp    eax,0x2744
  419d92:	je     0x419fda
  419d98:	jg     0x419e40
  419d9e:	cmp    eax,0x2742
  419da3:	je     0x419ffc
  419da9:	jg     0x419feb
  419daf:	call   QWORD PTR [rip+0x1d35f]        # 0x437114
  419db5:	mov    DWORD PTR [rax],0x65
  419dbb:	jmp    0x419cca
  419dc0:	cmp    eax,0x274e
  419dc5:	je     0x419f61
  419dcb:	jg     0x419ea4
  419dd1:	cmp    eax,0x274c
  419dd6:	je     0x419f50
  419ddc:	jg     0x419f3f
  419de2:	cmp    eax,0x2749
  419de7:	jne    0x419e83
  419ded:	call   QWORD PTR [rip+0x1d321]        # 0x437114
  419df3:	mov    ebx,esi
  419df5:	mov    DWORD PTR [rax],0x7e
  419dfb:	jmp    0x419cca
  419e00:	cmp    eax,0x57
  419e03:	je     0x419f72
  419e09:	jle    0x419ed4
  419e0f:	cmp    eax,0x2734
  419e14:	je     0x41a062
  419e1a:	jg     0x41a051
  419e20:	cmp    eax,0x2733
  419e25:	jne    0x419e83
  419e27:	call   QWORD PTR [rip+0x1d2e7]        # 0x437114
  419e2d:	mov    ebx,esi
  419e2f:	mov    DWORD PTR [rax],0x8c
  419e35:	jmp    0x419cca
  419e3a:	nop    WORD PTR [rax+rax*1+0x0]
  419e40:	cmp    eax,0x2746
  419e45:	je     0x41a040
  419e4b:	jg     0x41a02f
  419e51:	call   QWORD PTR [rip+0x1d2bd]        # 0x437114
  419e57:	mov    DWORD PTR [rax],0x6a
  419e5d:	jmp    0x419cca
  419e62:	cmp    eax,0x273d
  419e67:	je     0x419fa7
  419e6d:	cmp    eax,0x273f
  419e72:	je     0x419f96
  419e78:	cmp    eax,0x273b
  419e7d:	je     0x419f83
  419e83:	call   QWORD PTR [rip+0x1d28b]        # 0x437114
  419e89:	lea    ecx,[rdi-0x2711]
  419e8f:	lea    edx,[rdi-0x2710]
  419e95:	mov    ebx,esi
  419e97:	cmp    ecx,0x17
  419e9a:	cmovbe edi,edx
  419e9d:	mov    DWORD PTR [rax],edi
  419e9f:	jmp    0x419cca
  419ea4:	cmp    eax,0x2751
  419ea9:	je     0x41a084
  419eaf:	cmp    eax,0x2752
  419eb4:	je     0x41a073
  419eba:	cmp    eax,0x274f
  419ebf:	jne    0x419e83
  419ec1:	call   QWORD PTR [rip+0x1d24d]        # 0x437114
  419ec7:	mov    ebx,esi
  419ec9:	mov    DWORD PTR [rax],0x26
  419ecf:	jmp    0x419cca
  419ed4:	cmp    eax,0x6
  419ed7:	je     0x419f2e
  419ed9:	cmp    eax,0x8
  419edc:	jne    0x419e83
  419ede:	call   QWORD PTR [rip+0x1d230]        # 0x437114
  419ee4:	mov    DWORD PTR [rax],0xc
  419eea:	jmp    0x419cca
  419eef:	mov    QWORD PTR [rsp+0x38],rax
  419ef4:	call   QWORD PTR [rip+0x1d21a]        # 0x437114
  419efa:	mov    rcx,QWORD PTR [rsp+0x38]
  419eff:	mov    DWORD PTR [rax],0x9
  419f05:	mov    ebx,ecx
  419f07:	jmp    0x419cca
  419f0c:	call   QWORD PTR [rip+0x1d202]        # 0x437114
  419f12:	mov    DWORD PTR [rax],0x71
  419f18:	jmp    0x419cca
  419f1d:	call   QWORD PTR [rip+0x1d1f1]        # 0x437114
  419f23:	mov    DWORD PTR [rax],0x64
  419f29:	jmp    0x419cca
  419f2e:	call   QWORD PTR [rip+0x1d1e0]        # 0x437114
  419f34:	mov    DWORD PTR [rax],0x9
  419f3a:	jmp    0x419cca
  419f3f:	call   QWORD PTR [rip+0x1d1cf]        # 0x437114
  419f45:	mov    DWORD PTR [rax],0x6b
  419f4b:	jmp    0x419cca
  419f50:	call   QWORD PTR [rip+0x1d1be]        # 0x437114
  419f56:	mov    DWORD PTR [rax],0x8a
  419f5c:	jmp    0x419cca
  419f61:	call   QWORD PTR [rip+0x1d1ad]        # 0x437114
  419f67:	mov    DWORD PTR [rax],0x72
  419f6d:	jmp    0x419cca
  419f72:	call   QWORD PTR [rip+0x1d19c]        # 0x437114
  419f78:	mov    DWORD PTR [rax],0x16
  419f7e:	jmp    0x419cca
  419f83:	call   QWORD PTR [rip+0x1d18b]        # 0x437114
  419f89:	mov    ebx,esi
  419f8b:	mov    DWORD PTR [rax],0x87
  419f91:	jmp    0x419cca
  419f96:	call   QWORD PTR [rip+0x1d178]        # 0x437114
  419f9c:	mov    DWORD PTR [rax],0x66
  419fa2:	jmp    0x419cca
  419fa7:	call   QWORD PTR [rip+0x1d167]        # 0x437114
  419fad:	mov    DWORD PTR [rax],0x82
  419fb3:	jmp    0x419cca
  419fb8:	call   QWORD PTR [rip+0x1d156]        # 0x437114
  419fbe:	mov    DWORD PTR [rax],0x7b
  419fc4:	jmp    0x419cca
  419fc9:	call   QWORD PTR [rip+0x1d145]        # 0x437114
  419fcf:	mov    DWORD PTR [rax],0x80
  419fd5:	jmp    0x419cca
  419fda:	call   QWORD PTR [rip+0x1d134]        # 0x437114
  419fe0:	mov    DWORD PTR [rax],0x75
  419fe6:	jmp    0x419cca
  419feb:	call   QWORD PTR [rip+0x1d123]        # 0x437114
  419ff1:	mov    DWORD PTR [rax],0x76
  419ff7:	jmp    0x419cca
  419ffc:	call   QWORD PTR [rip+0x1d112]        # 0x437114
  41a002:	mov    DWORD PTR [rax],0x74
  41a008:	jmp    0x419cca
  41a00d:	call   QWORD PTR [rip+0x1d101]        # 0x437114
  41a013:	mov    DWORD PTR [rax],0x88
  41a019:	jmp    0x419cca
  41a01e:	call   QWORD PTR [rip+0x1d0f0]        # 0x437114
  41a024:	mov    DWORD PTR [rax],0x73
  41a02a:	jmp    0x419cca
  41a02f:	call   QWORD PTR [rip+0x1d0df]        # 0x437114
  41a035:	mov    DWORD PTR [rax],0x77
  41a03b:	jmp    0x419cca
  41a040:	call   QWORD PTR [rip+0x1d0ce]        # 0x437114
  41a046:	mov    DWORD PTR [rax],0x6c
  41a04c:	jmp    0x419cca
  41a051:	call   QWORD PTR [rip+0x1d0bd]        # 0x437114
  41a057:	mov    DWORD PTR [rax],0x67
  41a05d:	jmp    0x419cca
  41a062:	call   QWORD PTR [rip+0x1d0ac]        # 0x437114
  41a068:	mov    DWORD PTR [rax],0x70
  41a06e:	jmp    0x419cca
  41a073:	call   QWORD PTR [rip+0x1d09b]        # 0x437114
  41a079:	mov    DWORD PTR [rax],0x29
  41a07f:	jmp    0x419cca
  41a084:	call   QWORD PTR [rip+0x1d08a]        # 0x437114
  41a08a:	mov    DWORD PTR [rax],0x6e
  41a090:	jmp    0x419cca
  41a095:	nop
  41a096:	nop
  41a097:	nop
  41a098:	nop
  41a099:	nop
  41a09a:	nop
  41a09b:	nop
  41a09c:	nop
  41a09d:	nop
  41a09e:	nop
  41a09f:	nop
  41a0a0:	push   rdi
  41a0a1:	push   rsi
  41a0a2:	push   rbx
  41a0a3:	sub    rsp,0x30
  41a0a7:	mov    ebx,edx
  41a0a9:	call   0x417bf0
  41a0ae:	cmp    rax,0xffffffffffffffff
  41a0b2:	mov    rcx,rax
  41a0b5:	je     0x41a1f0
  41a0bb:	mov    edx,ebx
  41a0bd:	call   QWORD PTR [rip+0x1d3f9]        # 0x4374bc
  41a0c3:	test   eax,eax
  41a0c5:	mov    esi,eax
  41a0c7:	mov    ebx,eax
  41a0c9:	js     0x41a0d5
  41a0cb:	mov    eax,ebx
  41a0cd:	add    rsp,0x30
  41a0d1:	pop    rbx
  41a0d2:	pop    rsi
  41a0d3:	pop    rdi
  41a0d4:	ret    
  41a0d5:	call   QWORD PTR [rip+0x1d319]        # 0x4373f4
  41a0db:	cmp    eax,0x2740
  41a0e0:	mov    edi,eax
  41a0e2:	je     0x41a37b
  41a0e8:	jg     0x41a130
  41a0ea:	cmp    eax,0x2736
  41a0ef:	je     0x41a359
  41a0f5:	jle    0x41a1b2
  41a0fb:	cmp    eax,0x273a
  41a100:	je     0x41a348
  41a106:	jg     0x41a234
  41a10c:	cmp    eax,0x2738
  41a111:	je     0x41a39f
  41a117:	jg     0x41a38c
  41a11d:	call   QWORD PTR [rip+0x1cff1]        # 0x437114
  41a123:	mov    ebx,esi
  41a125:	mov    DWORD PTR [rax],0x6d
  41a12b:	jmp    0x41a0cb
  41a12d:	nop    DWORD PTR [rax]
  41a130:	cmp    eax,0x2748
  41a135:	je     0x41a36a
  41a13b:	jg     0x41a172
  41a13d:	cmp    eax,0x2744
  41a142:	je     0x41a337
  41a148:	jg     0x41a210
  41a14e:	cmp    eax,0x2742
  41a153:	je     0x41a326
  41a159:	jg     0x41a313
  41a15f:	call   QWORD PTR [rip+0x1cfaf]        # 0x437114
  41a165:	mov    ebx,esi
  41a167:	mov    DWORD PTR [rax],0x65
  41a16d:	jmp    0x41a0cb
  41a172:	cmp    eax,0x274e
  41a177:	je     0x41a3e7
  41a17d:	jg     0x41a280
  41a183:	cmp    eax,0x274c
  41a188:	je     0x41a40b
  41a18e:	jg     0x41a3f8
  41a194:	cmp    eax,0x2749
  41a199:	jne    0x41a255
  41a19f:	call   QWORD PTR [rip+0x1cf6f]        # 0x437114
  41a1a5:	mov    ebx,esi
  41a1a7:	mov    DWORD PTR [rax],0x7e
  41a1ad:	jmp    0x41a0cb
  41a1b2:	cmp    eax,0x57
  41a1b5:	je     0x41a2cd
  41a1bb:	jle    0x41a2b0
  41a1c1:	cmp    eax,0x2734
  41a1c6:	je     0x41a42f
  41a1cc:	jg     0x41a41c
  41a1d2:	cmp    eax,0x2733
  41a1d7:	jne    0x41a255
  41a1d9:	call   QWORD PTR [rip+0x1cf35]        # 0x437114
  41a1df:	mov    ebx,esi
  41a1e1:	mov    DWORD PTR [rax],0x8c
  41a1e7:	jmp    0x41a0cb
  41a1ec:	nop    DWORD PTR [rax+0x0]
  41a1f0:	mov    QWORD PTR [rsp+0x28],rax
  41a1f5:	call   QWORD PTR [rip+0x1cf19]        # 0x437114
  41a1fb:	mov    rcx,QWORD PTR [rsp+0x28]
  41a200:	mov    DWORD PTR [rax],0x9
  41a206:	mov    ebx,ecx
  41a208:	jmp    0x41a0cb
  41a20d:	nop    DWORD PTR [rax]
  41a210:	cmp    eax,0x2746
  41a215:	je     0x41a3c3
  41a21b:	jg     0x41a3b0
  41a221:	call   QWORD PTR [rip+0x1ceed]        # 0x437114
  41a227:	mov    ebx,esi
  41a229:	mov    DWORD PTR [rax],0x6a
  41a22f:	jmp    0x41a0cb
  41a234:	cmp    eax,0x273d
  41a239:	je     0x41a302
  41a23f:	cmp    eax,0x273f
  41a244:	je     0x41a2ef
  41a24a:	cmp    eax,0x273b
  41a24f:	je     0x41a3d4
  41a255:	call   QWORD PTR [rip+0x1ceb9]        # 0x437114
  41a25b:	lea    ecx,[rdi-0x2711]
  41a261:	lea    edx,[rdi-0x2710]
  41a267:	mov    ebx,esi
  41a269:	cmp    ecx,0x17
  41a26c:	cmovbe edi,edx
  41a26f:	mov    DWORD PTR [rax],edi
  41a271:	jmp    0x41a0cb
  41a276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a280:	cmp    eax,0x2751
  41a285:	je     0x41a453
  41a28b:	cmp    eax,0x2752
  41a290:	je     0x41a440
  41a296:	cmp    eax,0x274f
  41a29b:	jne    0x41a255
  41a29d:	call   QWORD PTR [rip+0x1ce71]        # 0x437114
  41a2a3:	mov    ebx,esi
  41a2a5:	mov    DWORD PTR [rax],0x26
  41a2ab:	jmp    0x41a0cb
  41a2b0:	cmp    eax,0x6
  41a2b3:	je     0x41a2de
  41a2b5:	cmp    eax,0x8
  41a2b8:	jne    0x41a255
  41a2ba:	call   QWORD PTR [rip+0x1ce54]        # 0x437114
  41a2c0:	mov    ebx,esi
  41a2c2:	mov    DWORD PTR [rax],0xc
  41a2c8:	jmp    0x41a0cb
  41a2cd:	call   QWORD PTR [rip+0x1ce41]        # 0x437114
  41a2d3:	mov    DWORD PTR [rax],0x16
  41a2d9:	jmp    0x41a0cb
  41a2de:	call   QWORD PTR [rip+0x1ce30]        # 0x437114
  41a2e4:	mov    DWORD PTR [rax],0x9
  41a2ea:	jmp    0x41a0cb
  41a2ef:	call   QWORD PTR [rip+0x1ce1f]        # 0x437114
  41a2f5:	mov    ebx,esi
  41a2f7:	mov    DWORD PTR [rax],0x66
  41a2fd:	jmp    0x41a0cb
  41a302:	call   QWORD PTR [rip+0x1ce0c]        # 0x437114
  41a308:	mov    DWORD PTR [rax],0x82
  41a30e:	jmp    0x41a0cb
  41a313:	call   QWORD PTR [rip+0x1cdfb]        # 0x437114
  41a319:	mov    ebx,esi
  41a31b:	mov    DWORD PTR [rax],0x76
  41a321:	jmp    0x41a0cb
  41a326:	call   QWORD PTR [rip+0x1cde8]        # 0x437114
  41a32c:	mov    DWORD PTR [rax],0x74
  41a332:	jmp    0x41a0cb
  41a337:	call   QWORD PTR [rip+0x1cdd7]        # 0x437114
  41a33d:	mov    DWORD PTR [rax],0x75
  41a343:	jmp    0x41a0cb
  41a348:	call   QWORD PTR [rip+0x1cdc6]        # 0x437114
  41a34e:	mov    DWORD PTR [rax],0x7b
  41a354:	jmp    0x41a0cb
  41a359:	call   QWORD PTR [rip+0x1cdb5]        # 0x437114
  41a35f:	mov    DWORD PTR [rax],0x80
  41a365:	jmp    0x41a0cb
  41a36a:	call   QWORD PTR [rip+0x1cda4]        # 0x437114
  41a370:	mov    DWORD PTR [rax],0x71
  41a376:	jmp    0x41a0cb
  41a37b:	call   QWORD PTR [rip+0x1cd93]        # 0x437114
  41a381:	mov    DWORD PTR [rax],0x64
  41a387:	jmp    0x41a0cb
  41a38c:	call   QWORD PTR [rip+0x1cd82]        # 0x437114
  41a392:	mov    ebx,esi
  41a394:	mov    DWORD PTR [rax],0x88
  41a39a:	jmp    0x41a0cb
  41a39f:	call   QWORD PTR [rip+0x1cd6f]        # 0x437114
  41a3a5:	mov    DWORD PTR [rax],0x73
  41a3ab:	jmp    0x41a0cb
  41a3b0:	call   QWORD PTR [rip+0x1cd5e]        # 0x437114
  41a3b6:	mov    ebx,esi
  41a3b8:	mov    DWORD PTR [rax],0x77
  41a3be:	jmp    0x41a0cb
  41a3c3:	call   QWORD PTR [rip+0x1cd4b]        # 0x437114
  41a3c9:	mov    DWORD PTR [rax],0x6c
  41a3cf:	jmp    0x41a0cb
  41a3d4:	call   QWORD PTR [rip+0x1cd3a]        # 0x437114
  41a3da:	mov    ebx,esi
  41a3dc:	mov    DWORD PTR [rax],0x87
  41a3e2:	jmp    0x41a0cb
  41a3e7:	call   QWORD PTR [rip+0x1cd27]        # 0x437114
  41a3ed:	mov    DWORD PTR [rax],0x72
  41a3f3:	jmp    0x41a0cb
  41a3f8:	call   QWORD PTR [rip+0x1cd16]        # 0x437114
  41a3fe:	mov    ebx,esi
  41a400:	mov    DWORD PTR [rax],0x6b
  41a406:	jmp    0x41a0cb
  41a40b:	call   QWORD PTR [rip+0x1cd03]        # 0x437114
  41a411:	mov    DWORD PTR [rax],0x8a
  41a417:	jmp    0x41a0cb
  41a41c:	call   QWORD PTR [rip+0x1ccf2]        # 0x437114
  41a422:	mov    ebx,esi
  41a424:	mov    DWORD PTR [rax],0x67
  41a42a:	jmp    0x41a0cb
  41a42f:	call   QWORD PTR [rip+0x1ccdf]        # 0x437114
  41a435:	mov    DWORD PTR [rax],0x70
  41a43b:	jmp    0x41a0cb
  41a440:	call   QWORD PTR [rip+0x1ccce]        # 0x437114
  41a446:	mov    ebx,esi
  41a448:	mov    DWORD PTR [rax],0x29
  41a44e:	jmp    0x41a0cb
  41a453:	call   QWORD PTR [rip+0x1ccbb]        # 0x437114
  41a459:	mov    DWORD PTR [rax],0x6e
  41a45f:	jmp    0x41a0cb
  41a464:	nop
  41a465:	nop
  41a466:	nop
  41a467:	nop
  41a468:	nop
  41a469:	nop
  41a46a:	nop
  41a46b:	nop
  41a46c:	nop
  41a46d:	nop
  41a46e:	nop
  41a46f:	nop
  41a470:	push   rsi
  41a471:	push   rbx
  41a472:	sub    rsp,0x48
  41a476:	mov    ebx,ecx
  41a478:	mov    esi,edx
  41a47a:	mov    ecx,0x101
  41a47f:	mov    DWORD PTR [rsp+0x3c],r8d
  41a484:	call   0x41b750
  41a489:	xor    r9d,r9d
  41a48c:	mov    DWORD PTR [rsp+0x28],0x0
  41a494:	mov    DWORD PTR [rsp+0x20],0x0
  41a49c:	mov    r8d,DWORD PTR [rsp+0x3c]
  41a4a1:	mov    edx,esi
  41a4a3:	mov    ecx,ebx
  41a4a5:	call   QWORD PTR [rip+0x1cf59]        # 0x437404
  41a4ab:	cmp    rax,0xffffffffffffffff
  41a4af:	je     0x41a4d0
  41a4b1:	mov    rcx,rax
  41a4b4:	mov    rax,QWORD PTR [rip+0x1ccc9]        # 0x437184
  41a4bb:	mov    edx,0x8002
  41a4c0:	add    rsp,0x48
  41a4c4:	pop    rbx
  41a4c5:	pop    rsi
  41a4c6:	rex.W jmp rax
  41a4c9:	nop    DWORD PTR [rax+0x0]
  41a4d0:	call   QWORD PTR [rip+0x1cf1e]        # 0x4373f4
  41a4d6:	cmp    eax,0x2740
  41a4db:	mov    ebx,eax
  41a4dd:	je     0x41a79e
  41a4e3:	jg     0x41a530
  41a4e5:	cmp    eax,0x2736
  41a4ea:	je     0x41a738
  41a4f0:	jle    0x41a5ab
  41a4f6:	cmp    eax,0x273a
  41a4fb:	je     0x41a6e3
  41a501:	jg     0x41a605
  41a507:	cmp    eax,0x2738
  41a50c:	je     0x41a7c0
  41a512:	jg     0x41a7af
  41a518:	call   QWORD PTR [rip+0x1cbf6]        # 0x437114
  41a51e:	mov    DWORD PTR [rax],0x6d
  41a524:	mov    eax,0xffffffff
  41a529:	add    rsp,0x48
  41a52d:	pop    rbx
  41a52e:	pop    rsi
  41a52f:	ret    
  41a530:	cmp    eax,0x2748
  41a535:	je     0x41a78d
  41a53b:	jg     0x41a56d
  41a53d:	cmp    eax,0x2744
  41a542:	je     0x41a6d2
  41a548:	jg     0x41a5e3
  41a54e:	cmp    eax,0x2742
  41a553:	je     0x41a6c1
  41a559:	jg     0x41a6b0
  41a55f:	call   QWORD PTR [rip+0x1cbaf]        # 0x437114
  41a565:	mov    DWORD PTR [rax],0x65
  41a56b:	jmp    0x41a524
  41a56d:	cmp    eax,0x274e
  41a572:	je     0x41a727
  41a578:	jg     0x41a645
  41a57e:	cmp    eax,0x274c
  41a583:	je     0x41a75a
  41a589:	jg     0x41a749
  41a58f:	cmp    eax,0x2749
  41a594:	jne    0x41a626
  41a59a:	call   QWORD PTR [rip+0x1cb74]        # 0x437114
  41a5a0:	mov    DWORD PTR [rax],0x7e
  41a5a6:	jmp    0x41a524
  41a5ab:	cmp    eax,0x57
  41a5ae:	je     0x41a68e
  41a5b4:	jle    0x41a673
  41a5ba:	cmp    eax,0x2734
  41a5bf:	je     0x41a7e2
  41a5c5:	jg     0x41a7d1
  41a5cb:	cmp    eax,0x2733
  41a5d0:	jne    0x41a626
  41a5d2:	call   QWORD PTR [rip+0x1cb3c]        # 0x437114
  41a5d8:	mov    DWORD PTR [rax],0x8c
  41a5de:	jmp    0x41a524
  41a5e3:	cmp    eax,0x2746
  41a5e8:	je     0x41a77c
  41a5ee:	jg     0x41a76b
  41a5f4:	call   QWORD PTR [rip+0x1cb1a]        # 0x437114
  41a5fa:	mov    DWORD PTR [rax],0x6a
  41a600:	jmp    0x41a524
  41a605:	cmp    eax,0x273d
  41a60a:	je     0x41a705
  41a610:	cmp    eax,0x273f
  41a615:	je     0x41a6f4
  41a61b:	cmp    eax,0x273b
  41a620:	je     0x41a716
  41a626:	call   QWORD PTR [rip+0x1cae8]        # 0x437114
  41a62c:	lea    ecx,[rbx-0x2711]
  41a632:	lea    edx,[rbx-0x2710]
  41a638:	cmp    ecx,0x17
  41a63b:	cmovbe ebx,edx
  41a63e:	mov    DWORD PTR [rax],ebx
  41a640:	jmp    0x41a524
  41a645:	cmp    eax,0x2751
  41a64a:	je     0x41a804
  41a650:	cmp    eax,0x2752
  41a655:	je     0x41a7f3
  41a65b:	cmp    eax,0x274f
  41a660:	jne    0x41a626
  41a662:	call   QWORD PTR [rip+0x1caac]        # 0x437114
  41a668:	mov    DWORD PTR [rax],0x26
  41a66e:	jmp    0x41a524
  41a673:	cmp    eax,0x6
  41a676:	je     0x41a69f
  41a678:	cmp    eax,0x8
  41a67b:	jne    0x41a626
  41a67d:	call   QWORD PTR [rip+0x1ca91]        # 0x437114
  41a683:	mov    DWORD PTR [rax],0xc
  41a689:	jmp    0x41a524
  41a68e:	call   QWORD PTR [rip+0x1ca80]        # 0x437114
  41a694:	mov    DWORD PTR [rax],0x16
  41a69a:	jmp    0x41a524
  41a69f:	call   QWORD PTR [rip+0x1ca6f]        # 0x437114
  41a6a5:	mov    DWORD PTR [rax],0x9
  41a6ab:	jmp    0x41a524
  41a6b0:	call   QWORD PTR [rip+0x1ca5e]        # 0x437114
  41a6b6:	mov    DWORD PTR [rax],0x76
  41a6bc:	jmp    0x41a524
  41a6c1:	call   QWORD PTR [rip+0x1ca4d]        # 0x437114
  41a6c7:	mov    DWORD PTR [rax],0x74
  41a6cd:	jmp    0x41a524
  41a6d2:	call   QWORD PTR [rip+0x1ca3c]        # 0x437114
  41a6d8:	mov    DWORD PTR [rax],0x75
  41a6de:	jmp    0x41a524
  41a6e3:	call   QWORD PTR [rip+0x1ca2b]        # 0x437114
  41a6e9:	mov    DWORD PTR [rax],0x7b
  41a6ef:	jmp    0x41a524
  41a6f4:	call   QWORD PTR [rip+0x1ca1a]        # 0x437114
  41a6fa:	mov    DWORD PTR [rax],0x66
  41a700:	jmp    0x41a524
  41a705:	call   QWORD PTR [rip+0x1ca09]        # 0x437114
  41a70b:	mov    DWORD PTR [rax],0x82
  41a711:	jmp    0x41a524
  41a716:	call   QWORD PTR [rip+0x1c9f8]        # 0x437114
  41a71c:	mov    DWORD PTR [rax],0x87
  41a722:	jmp    0x41a524
  41a727:	call   QWORD PTR [rip+0x1c9e7]        # 0x437114
  41a72d:	mov    DWORD PTR [rax],0x72
  41a733:	jmp    0x41a524
  41a738:	call   QWORD PTR [rip+0x1c9d6]        # 0x437114
  41a73e:	mov    DWORD PTR [rax],0x80
  41a744:	jmp    0x41a524
  41a749:	call   QWORD PTR [rip+0x1c9c5]        # 0x437114
  41a74f:	mov    DWORD PTR [rax],0x6b
  41a755:	jmp    0x41a524
  41a75a:	call   QWORD PTR [rip+0x1c9b4]        # 0x437114
  41a760:	mov    DWORD PTR [rax],0x8a
  41a766:	jmp    0x41a524
  41a76b:	call   QWORD PTR [rip+0x1c9a3]        # 0x437114
  41a771:	mov    DWORD PTR [rax],0x77
  41a777:	jmp    0x41a524
  41a77c:	call   QWORD PTR [rip+0x1c992]        # 0x437114
  41a782:	mov    DWORD PTR [rax],0x6c
  41a788:	jmp    0x41a524
  41a78d:	call   QWORD PTR [rip+0x1c981]        # 0x437114
  41a793:	mov    DWORD PTR [rax],0x71
  41a799:	jmp    0x41a524
  41a79e:	call   QWORD PTR [rip+0x1c970]        # 0x437114
  41a7a4:	mov    DWORD PTR [rax],0x64
  41a7aa:	jmp    0x41a524
  41a7af:	call   QWORD PTR [rip+0x1c95f]        # 0x437114
  41a7b5:	mov    DWORD PTR [rax],0x88
  41a7bb:	jmp    0x41a524
  41a7c0:	call   QWORD PTR [rip+0x1c94e]        # 0x437114
  41a7c6:	mov    DWORD PTR [rax],0x73
  41a7cc:	jmp    0x41a524
  41a7d1:	call   QWORD PTR [rip+0x1c93d]        # 0x437114
  41a7d7:	mov    DWORD PTR [rax],0x67
  41a7dd:	jmp    0x41a524
  41a7e2:	call   QWORD PTR [rip+0x1c92c]        # 0x437114
  41a7e8:	mov    DWORD PTR [rax],0x70
  41a7ee:	jmp    0x41a524
  41a7f3:	call   QWORD PTR [rip+0x1c91b]        # 0x437114
  41a7f9:	mov    DWORD PTR [rax],0x29
  41a7ff:	jmp    0x41a524
  41a804:	call   QWORD PTR [rip+0x1c90a]        # 0x437114
  41a80a:	mov    DWORD PTR [rax],0x6e
  41a810:	jmp    0x41a524
  41a815:	nop
  41a816:	nop
  41a817:	nop
  41a818:	nop
  41a819:	nop
  41a81a:	nop
  41a81b:	nop
  41a81c:	nop
  41a81d:	nop
  41a81e:	nop
  41a81f:	nop
  41a820:	push   rsi
  41a821:	push   rbx
  41a822:	sub    rsp,0x28
  41a826:	mov    rsi,rcx
  41a829:	call   0x4227a8
  41a82e:	lea    rbx,[rax+0x1]
  41a832:	mov    rcx,rbx
  41a835:	call   0x413870
  41a83a:	test   rax,rax
  41a83d:	je     0x41a853
  41a83f:	mov    r8,rbx
  41a842:	mov    rdx,rsi
  41a845:	mov    rcx,rax
  41a848:	add    rsp,0x28
  41a84c:	pop    rbx
  41a84d:	pop    rsi
  41a84e:	jmp    0x422810
  41a853:	xor    eax,eax
  41a855:	add    rsp,0x28
  41a859:	pop    rbx
  41a85a:	pop    rsi
  41a85b:	ret    
  41a85c:	nop
  41a85d:	nop
  41a85e:	nop
  41a85f:	nop
  41a860:	sub    rsp,0x38
  41a864:	lea    rdx,[rip+0x123e5]        # 0x42cc50
  41a86b:	lea    rcx,[rip+0x1908e]        # 0x433900
  41a872:	mov    QWORD PTR [rsp+0x50],r8
  41a877:	lea    r8,[rsp+0x50]
  41a87c:	mov    QWORD PTR [rsp+0x58],r9
  41a881:	mov    QWORD PTR [rsp+0x28],r8
  41a886:	call   0x41ddb0
  41a88b:	add    rsp,0x38
  41a88f:	ret    
  41a890:	push   rdi
  41a891:	push   rsi
  41a892:	push   rbx
  41a893:	sub    rsp,0x20
  41a897:	mov    ebx,ecx
  41a899:	call   0x41a980
  41a89e:	test   rax,rax
  41a8a1:	je     0x41a8b0
  41a8a3:	add    rsp,0x20
  41a8a7:	pop    rbx
  41a8a8:	pop    rsi
  41a8a9:	pop    rdi
  41a8aa:	ret    
  41a8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41a8b0:	mov    ecx,ebx
  41a8b2:	call   0x4227b8
  41a8b7:	test   rax,rax
  41a8ba:	mov    rsi,rax
  41a8bd:	je     0x41a940
  41a8c3:	cmp    BYTE PTR [rax],0x0
  41a8c6:	je     0x41a940
  41a8c8:	mov    rcx,rax
  41a8cb:	call   0x4227a8
  41a8d0:	cmp    rax,0xff
  41a8d6:	ja     0x41a96e
  41a8dc:	add    rax,0x1
  41a8e0:	lea    rdi,[rip+0x19019]        # 0x433900
  41a8e7:	cmp    eax,0x8
  41a8ea:	jae    0x41a930
  41a8ec:	xor    edx,edx
  41a8ee:	test   al,0x4
  41a8f0:	jne    0x41a920
  41a8f2:	test   al,0x2
  41a8f4:	jne    0x41a910
  41a8f6:	test   al,0x1
  41a8f8:	jne    0x41a903
  41a8fa:	lea    rax,[rip+0x18fff]        # 0x433900
  41a901:	jmp    0x41a8a3
  41a903:	movzx  eax,BYTE PTR [rsi+rdx*1]
  41a907:	mov    BYTE PTR [rdi+rdx*1],al
  41a90a:	jmp    0x41a8fa
  41a90c:	nop    DWORD PTR [rax+0x0]
  41a910:	movzx  ecx,WORD PTR [rsi+rdx*1]
  41a914:	mov    WORD PTR [rdi+rdx*1],cx
  41a918:	add    rdx,0x2
  41a91c:	jmp    0x41a8f6
  41a91e:	xchg   ax,ax
  41a920:	mov    edx,DWORD PTR [rsi]
  41a922:	mov    DWORD PTR [rdi],edx
  41a924:	mov    edx,0x4
  41a929:	jmp    0x41a8f2
  41a92b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a930:	mov    ecx,eax
  41a932:	shr    ecx,0x3
  41a935:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41a938:	jmp    0x41a8ec
  41a93a:	nop    WORD PTR [rax+rax*1+0x0]
  41a940:	lea    rdx,[rip+0x12309]        # 0x42cc50
  41a947:	lea    rcx,[rip+0x18fb2]        # 0x433900
  41a94e:	mov    r8d,ebx
  41a951:	call   0x41a860
  41a956:	call   QWORD PTR [rip+0x1c7b8]        # 0x437114
  41a95c:	mov    DWORD PTR [rax],0x16
  41a962:	lea    rax,[rip+0x18f97]        # 0x433900
  41a969:	jmp    0x41a8a3
  41a96e:	call   0x4228c0
  41a973:	nop
  41a974:	nop
  41a975:	nop
  41a976:	nop
  41a977:	nop
  41a978:	nop
  41a979:	nop
  41a97a:	nop
  41a97b:	nop
  41a97c:	nop
  41a97d:	nop
  41a97e:	nop
  41a97f:	nop
  41a980:	cmp    ecx,0x2754
  41a986:	je     0x41ad30
  41a98c:	jg     0x41a9e2
  41a98e:	cmp    ecx,0x89
  41a994:	je     0x41ad10
  41a99a:	jg     0x41aa43
  41a9a0:	cmp    ecx,0x79
  41a9a3:	je     0x41ad40
  41a9a9:	jle    0x41ab71
  41a9af:	cmp    ecx,0x7d
  41a9b2:	lea    rax,[rip+0x122f9]        # 0x42ccb2
  41a9b9:	je     0x41a9e0
  41a9bb:	jle    0x41ac80
  41a9c1:	cmp    ecx,0x7f
  41a9c4:	lea    rax,[rip+0x126e5]        # 0x42d0b0
  41a9cb:	je     0x41a9e0
  41a9cd:	cmp    ecx,0x83
  41a9d3:	lea    rax,[rip+0x122fa]        # 0x42ccd4
  41a9da:	jne    0x41aa40
  41a9dc:	nop    DWORD PTR [rax+0x0]
  41a9e0:	repz ret 
  41a9e2:	cmp    ecx,0x2779
  41a9e8:	je     0x41ad20
  41a9ee:	jg     0x41aa92
  41a9f4:	cmp    ecx,0x276c
  41a9fa:	je     0x41ad01
  41aa00:	jg     0x41abb0
  41aa06:	cmp    ecx,0x2756
  41aa0c:	lea    rax,[rip+0x1239b]        # 0x42cdae
  41aa13:	je     0x41a9e0
  41aa15:	lea    rax,[rip+0x1237e]        # 0x42cd9a
  41aa1c:	jl     0x41a9e0
  41aa1e:	cmp    ecx,0x2757
  41aa24:	lea    rax,[rip+0x12399]        # 0x42cdc4
  41aa2b:	je     0x41a9e0
  41aa2d:	cmp    ecx,0x276b
  41aa33:	lea    rax,[rip+0x12426]        # 0x42ce60
  41aa3a:	je     0x41a9e0
  41aa3c:	nop    DWORD PTR [rax+0x0]
  41aa40:	xor    eax,eax
  41aa42:	ret    
  41aa43:	cmp    ecx,0x273c
  41aa49:	je     0x41ad60
  41aa4f:	jle    0x41aae5
  41aa55:	cmp    ecx,0x274b
  41aa5b:	lea    rax,[rip+0x122e6]        # 0x42cd48
  41aa62:	je     0x41a9e0
  41aa68:	jle    0x41abf0
  41aa6e:	cmp    ecx,0x2750
  41aa74:	lea    rax,[rip+0x122f0]        # 0x42cd6b
  41aa7b:	je     0x41a9e0
  41aa81:	cmp    ecx,0x2753
  41aa87:	lea    rax,[rip+0x122ea]        # 0x42cd78
  41aa8e:	jne    0x41aa40
  41aa90:	repz ret 
  41aa92:	cmp    ecx,0x277f
  41aa98:	je     0x41ad50
  41aa9e:	jle    0x41ab30
  41aaa4:	cmp    ecx,0x2afa
  41aaaa:	lea    rax,[rip+0x12537]        # 0x42cfe8
  41aab1:	je     0x41a9e0
  41aab7:	jle    0x41ac50
  41aabd:	cmp    ecx,0x2afb
  41aac3:	lea    rax,[rip+0x1253e]        # 0x42d008
  41aaca:	je     0x41a9e0
  41aad0:	cmp    ecx,0x2afc
  41aad6:	lea    rax,[rip+0x12543]        # 0x42d020
  41aadd:	jne    0x41aa40
  41aae3:	repz ret 
  41aae5:	cmp    ecx,0x3e4
  41aaeb:	lea    rax,[rip+0x12306]        # 0x42cdf8
  41aaf2:	je     0x41a9e0
  41aaf8:	jle    0x41ac20
  41aafe:	cmp    ecx,0x3e5
  41ab04:	lea    rax,[rip+0x12325]        # 0x42ce30
  41ab0b:	je     0x41a9e0
  41ab11:	cmp    ecx,0x7d4
  41ab17:	lea    rax,[rip+0x12573]        # 0x42d091
  41ab1e:	jne    0x41aa40
  41ab24:	repz ret 
  41ab26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab30:	cmp    ecx,0x277c
  41ab36:	lea    rax,[rip+0x12455]        # 0x42cf92
  41ab3d:	je     0x41a9e0
  41ab43:	jg     0x41acc3
  41ab49:	cmp    ecx,0x277a
  41ab4f:	lea    rax,[rip+0x12402]        # 0x42cf58
  41ab56:	je     0x41a9e0
  41ab5c:	cmp    ecx,0x277b
  41ab62:	lea    rax,[rip+0x12415]        # 0x42cf7e
  41ab69:	jne    0x41aa40
  41ab6f:	repz ret 
  41ab71:	cmp    ecx,0x68
  41ab74:	lea    rax,[rip+0x12529]        # 0x42d0a4
  41ab7b:	je     0x41a9e0
  41ab81:	jle    0x41acf0
  41ab87:	cmp    ecx,0x6f
  41ab8a:	lea    rax,[rip+0x124d7]        # 0x42d068
  41ab91:	je     0x41a9e0
  41ab97:	cmp    ecx,0x78
  41ab9a:	lea    rax,[rip+0x120e6]        # 0x42cc87
  41aba1:	jne    0x41aa40
  41aba7:	repz ret 
  41aba9:	nop    DWORD PTR [rax+0x0]
  41abb0:	cmp    ecx,0x2776
  41abb6:	je     0x41ace2
  41abbc:	jg     0x41aca2
  41abc2:	cmp    ecx,0x276d
  41abc8:	lea    rax,[rip+0x122e1]        # 0x42ceb0
  41abcf:	je     0x41a9e0
  41abd5:	cmp    ecx,0x2775
  41abdb:	lea    rax,[rip+0x122f6]        # 0x42ced8
  41abe2:	jne    0x41aa40
  41abe8:	repz ret 
  41abea:	nop    WORD PTR [rax+rax*1+0x0]
  41abf0:	cmp    ecx,0x273e
  41abf6:	lea    rax,[rip+0x120fd]        # 0x42ccfa
  41abfd:	je     0x41a9e0
  41ac03:	cmp    ecx,0x274a
  41ac09:	lea    rax,[rip+0x12108]        # 0x42cd18
  41ac10:	jne    0x41aa40
  41ac16:	repz ret 
  41ac18:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac20:	cmp    ecx,0x8b
  41ac26:	lea    rax,[rip+0x1204b]        # 0x42cc78
  41ac2d:	je     0x41a9e0
  41ac33:	cmp    ecx,0x3e3
  41ac39:	lea    rax,[rip+0x12195]        # 0x42cdd5
  41ac40:	jne    0x41aa40
  41ac46:	repz ret 
  41ac48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac50:	cmp    ecx,0x2780
  41ac56:	lea    rax,[rip+0x1235c]        # 0x42cfb9
  41ac5d:	je     0x41a9e0
  41ac63:	cmp    ecx,0x2af9
  41ac69:	lea    rax,[rip+0x12364]        # 0x42cfd4
  41ac70:	jne    0x41aa40
  41ac76:	repz ret 
  41ac78:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac80:	cmp    ecx,0x7a
  41ac83:	lea    rax,[rip+0x123c3]        # 0x42d04d
  41ac8a:	je     0x41a9e0
  41ac90:	cmp    ecx,0x7c
  41ac93:	lea    rax,[rip+0x11fff]        # 0x42cc99
  41ac9a:	jne    0x41aa40
  41aca0:	repz ret 
  41aca2:	cmp    ecx,0x2777
  41aca8:	je     0x41ad50
  41acae:	cmp    ecx,0x2778
  41acb4:	lea    rax,[rip+0x1225d]        # 0x42cf18
  41acbb:	jne    0x41aa40
  41acc1:	repz ret 
  41acc3:	cmp    ecx,0x277d
  41acc9:	lea    rax,[rip+0x122d4]        # 0x42cfa4
  41acd0:	je     0x41a9e0
  41acd6:	cmp    ecx,0x277e
  41acdc:	jne    0x41aa40
  41ace2:	lea    rax,[rip+0x1220d]        # 0x42cef6
  41ace9:	ret    
  41acea:	nop    WORD PTR [rax+rax*1+0x0]
  41acf0:	test   ecx,ecx
  41acf2:	lea    rax,[rip+0x11f77]        # 0x42cc70
  41acf9:	jne    0x41aa40
  41acff:	repz ret 
  41ad01:	lea    rax,[rip+0x12180]        # 0x42ce88
  41ad08:	ret    
  41ad09:	nop    DWORD PTR [rax+0x0]
  41ad10:	lea    rax,[rip+0x11faf]        # 0x42ccc6
  41ad17:	ret    
  41ad18:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad20:	lea    rax,[rip+0x12211]        # 0x42cf38
  41ad27:	ret    
  41ad28:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad30:	lea    rax,[rip+0x12054]        # 0x42cd8b
  41ad37:	ret    
  41ad38:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad40:	lea    rax,[rip+0x12334]        # 0x42d07b
  41ad47:	ret    
  41ad48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad50:	lea    rax,[rip+0x121af]        # 0x42cf06
  41ad57:	ret    
  41ad58:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad60:	lea    rax,[rip+0x11f79]        # 0x42cce0
  41ad67:	ret    
  41ad68:	nop
  41ad69:	nop
  41ad6a:	nop
  41ad6b:	nop
  41ad6c:	nop
  41ad6d:	nop
  41ad6e:	nop
  41ad6f:	nop
  41ad70:	lea    r9,[rip+0xad49]        # 0x425ac0
  41ad77:	cmp    rcx,r9
  41ad7a:	je     0x41ad90
  41ad7c:	mov    r9,QWORD PTR [rcx+0x10]
  41ad80:	mov    rcx,QWORD PTR [rcx]
  41ad83:	rex.WB jmp r9
  41ad86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad90:	mov    ecx,r8d
  41ad93:	rex.W jmp rdx
  41ad96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ada0:	lea    r10,[rip+0xad19]        # 0x425ac0
  41ada7:	mov    rax,rcx
  41adaa:	mov    r11,rdx
  41adad:	mov    ecx,r8d
  41adb0:	cmp    rax,r10
  41adb3:	mov    r8,QWORD PTR [rsp+0x28]
  41adb8:	je     0x41add0
  41adba:	mov    QWORD PTR [rsp+0x28],r8
  41adbf:	mov    r8d,ecx
  41adc2:	mov    r10,QWORD PTR [rax+0x18]
  41adc6:	mov    rcx,QWORD PTR [rax]
  41adc9:	rex.WB jmp r10
  41adcc:	nop    DWORD PTR [rax+0x0]
  41add0:	mov    edx,r9d
  41add3:	rex.WB jmp r11
  41add6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ade0:	mov    r8d,edx
  41ade3:	mov    rdx,rcx
  41ade6:	mov    rcx,QWORD PTR [rip+0xacd3]        # 0x425ac0
  41aded:	jmp    0x41ad70
  41adef:	nop
  41adf0:	sub    rsp,0x38
  41adf4:	mov    QWORD PTR [rsp+0x20],r9
  41adf9:	mov    r9d,r8d
  41adfc:	mov    r8d,edx
  41adff:	mov    rdx,rcx
  41ae02:	mov    rcx,QWORD PTR [rip+0xacb7]        # 0x425ac0
  41ae09:	call   0x41ada0
  41ae0e:	add    rsp,0x38
  41ae12:	ret    
  41ae13:	nop    DWORD PTR [rax]
  41ae16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae20:	sub    rsp,0x28
  41ae24:	lea    rax,[rip+0xffffffffffffff45]        # 0x41ad70
  41ae2b:	test   rcx,rcx
  41ae2e:	cmove  rcx,rax
  41ae32:	lea    rax,[rip+0xffffffffffffff67]        # 0x41ada0
  41ae39:	test   rdx,rdx
  41ae3c:	cmove  rdx,rax
  41ae40:	cmp    QWORD PTR [r8],0x0
  41ae44:	je     0x41ae60
  41ae46:	cmp    QWORD PTR [r8+0x10],rcx
  41ae4a:	jne    0x41ae98
  41ae4c:	cmp    QWORD PTR [r8+0x18],rdx
  41ae50:	jne    0x41ae98
  41ae52:	add    rsp,0x28
  41ae56:	ret    
  41ae57:	nop    WORD PTR [rax+rax*1+0x0]
  41ae60:	cmp    QWORD PTR [r8+0x8],0x0
  41ae65:	jne    0x41ae46
  41ae67:	mov    rax,QWORD PTR [rip+0xac52]        # 0x425ac0
  41ae6e:	mov    QWORD PTR [r8+0x10],rcx
  41ae72:	mov    QWORD PTR [r8+0x18],rdx
  41ae76:	mov    QWORD PTR [r8],rax
  41ae79:	lea    rax,[rip+0xac40]        # 0x425ac0
  41ae80:	mov    QWORD PTR [r8+0x8],rax
  41ae84:	mov    rax,QWORD PTR [rip+0xac35]        # 0x425ac0
  41ae8b:	mov    QWORD PTR [rip+0xac2e],r8        # 0x425ac0
  41ae92:	mov    QWORD PTR [rax+0x8],r8
  41ae96:	jmp    0x41ae52
  41ae98:	call   0x4228c0
  41ae9d:	nop
  41ae9e:	xchg   ax,ax
  41aea0:	mov    rax,QWORD PTR [rcx+0x8]
  41aea4:	mov    rdx,QWORD PTR [rcx]
  41aea7:	test   rax,rax
  41aeaa:	je     0x41aed7
  41aeac:	test   rdx,rdx
  41aeaf:	je     0x41aed7
  41aeb1:	mov    QWORD PTR [rax],rdx
  41aeb4:	mov    QWORD PTR [rdx+0x8],rax
  41aeb8:	mov    QWORD PTR [rcx],0x0
  41aebf:	mov    QWORD PTR [rcx+0x8],0x0
  41aec7:	mov    QWORD PTR [rcx+0x10],0x0
  41aecf:	mov    QWORD PTR [rcx+0x18],0x0
  41aed7:	repz ret 
  41aed9:	nop
  41aeda:	nop
  41aedb:	nop
  41aedc:	nop
  41aedd:	nop
  41aede:	nop
  41aedf:	nop
  41aee0:	push   r12
  41aee2:	push   rbp
  41aee3:	push   rdi
  41aee4:	push   rsi
  41aee5:	push   rbx
  41aee6:	sub    rsp,0x60
  41aeea:	mov    rbp,rcx
  41aeed:	mov    ecx,r8d
  41aef0:	mov    r12,rdx
  41aef3:	mov    esi,r8d
  41aef6:	mov    edi,r9d
  41aef9:	call   0x417bf0
  41aefe:	xor    edx,edx
  41af00:	mov    rbx,rax
  41af03:	mov    DWORD PTR [rsp+0x30],0xdeadbeef
  41af0b:	lea    r8,[rsp+0x30]
  41af10:	mov    rcx,rax
  41af13:	call   QWORD PTR [rip+0x1c4cb]        # 0x4373e4
  41af19:	cmp    DWORD PTR [rsp+0x30],0xdeadbeef
  41af21:	je     0x41af50
  41af23:	mov    r8,QWORD PTR [rsp+0xb0]
  41af2b:	mov    edx,edi
  41af2d:	mov    rcx,rbx
  41af30:	call   QWORD PTR [rip+0x1c53e]        # 0x437474
  41af36:	test   eax,eax
  41af38:	js     0x41af79
  41af3a:	xor    eax,eax
  41af3c:	add    rsp,0x60
  41af40:	pop    rbx
  41af41:	pop    rsi
  41af42:	pop    rdi
  41af43:	pop    rbp
  41af44:	pop    r12
  41af46:	ret    
  41af47:	nop    WORD PTR [rax+rax*1+0x0]
  41af50:	mov    rax,QWORD PTR [rsp+0xb0]
  41af58:	mov    r9d,edi
  41af5b:	mov    r8d,esi
  41af5e:	mov    rdx,r12
  41af61:	mov    rcx,rbp
  41af64:	mov    QWORD PTR [rsp+0x20],rax
  41af69:	call   0x41ada0
  41af6e:	add    rsp,0x60
  41af72:	pop    rbx
  41af73:	pop    rsi
  41af74:	pop    rdi
  41af75:	pop    rbp
  41af76:	pop    r12
  41af78:	ret    
  41af79:	call   QWORD PTR [rip+0x1c475]        # 0x4373f4
  41af7f:	cmp    eax,0x2740
  41af84:	mov    ebx,eax
  41af86:	je     0x41b293
  41af8c:	jg     0x41afd5
  41af8e:	cmp    eax,0x2736
  41af93:	je     0x41b21b
  41af99:	jle    0x41b061
  41af9f:	cmp    eax,0x273a
  41afa4:	je     0x41b1b7
  41afaa:	jg     0x41b0c1
  41afb0:	cmp    eax,0x2738
  41afb5:	je     0x41b2bb
  41afbb:	jg     0x41b2a7
  41afc1:	call   QWORD PTR [rip+0x1c14d]        # 0x437114
  41afc7:	mov    DWORD PTR [rax],0x6d
  41afcd:	or     eax,0xffffffff
  41afd0:	jmp    0x41af3c
  41afd5:	cmp    eax,0x2748
  41afda:	je     0x41b27f
  41afe0:	jg     0x41b020
  41afe2:	cmp    eax,0x2744
  41afe7:	je     0x41b1a3
  41afed:	jg     0x41b09c
  41aff3:	cmp    eax,0x2742
  41aff8:	je     0x41b18f
  41affe:	jg     0x41b17b
  41b004:	call   QWORD PTR [rip+0x1c10a]        # 0x437114
  41b00a:	mov    DWORD PTR [rax],0x65
  41b010:	or     eax,0xffffffff
  41b013:	jmp    0x41af3c
  41b018:	nop    DWORD PTR [rax+rax*1+0x0]
  41b020:	cmp    eax,0x274e
  41b025:	je     0x41b207
  41b02b:	jg     0x41b104
  41b031:	cmp    eax,0x274c
  41b036:	je     0x41b243
  41b03c:	jg     0x41b22f
  41b042:	cmp    eax,0x2749
  41b047:	jne    0x41b0e2
  41b04d:	call   QWORD PTR [rip+0x1c0c1]        # 0x437114
  41b053:	mov    DWORD PTR [rax],0x7e
  41b059:	or     eax,0xffffffff
  41b05c:	jmp    0x41af3c
  41b061:	cmp    eax,0x57
  41b064:	je     0x41b153
  41b06a:	jle    0x41b135
  41b070:	cmp    eax,0x2734
  41b075:	je     0x41b2e3
  41b07b:	jg     0x41b2cf
  41b081:	cmp    eax,0x2733
  41b086:	jne    0x41b0e2
  41b088:	call   QWORD PTR [rip+0x1c086]        # 0x437114
  41b08e:	mov    DWORD PTR [rax],0x8c
  41b094:	or     eax,0xffffffff
  41b097:	jmp    0x41af3c
  41b09c:	cmp    eax,0x2746
  41b0a1:	je     0x41b26b
  41b0a7:	jg     0x41b257
  41b0ad:	call   QWORD PTR [rip+0x1c061]        # 0x437114
  41b0b3:	mov    DWORD PTR [rax],0x6a
  41b0b9:	or     eax,0xffffffff
  41b0bc:	jmp    0x41af3c
  41b0c1:	cmp    eax,0x273d
  41b0c6:	je     0x41b1df
  41b0cc:	cmp    eax,0x273f
  41b0d1:	je     0x41b1cb
  41b0d7:	cmp    eax,0x273b
  41b0dc:	je     0x41b1f3
  41b0e2:	call   QWORD PTR [rip+0x1c02c]        # 0x437114
  41b0e8:	lea    ecx,[rbx-0x2711]
  41b0ee:	lea    edx,[rbx-0x2710]
  41b0f4:	cmp    ecx,0x17
  41b0f7:	cmovbe ebx,edx
  41b0fa:	mov    DWORD PTR [rax],ebx
  41b0fc:	or     eax,0xffffffff
  41b0ff:	jmp    0x41af3c
  41b104:	cmp    eax,0x2751
  41b109:	je     0x41b30b
  41b10f:	cmp    eax,0x2752
  41b114:	je     0x41b2f7
  41b11a:	cmp    eax,0x274f
  41b11f:	jne    0x41b0e2
  41b121:	call   QWORD PTR [rip+0x1bfed]        # 0x437114
  41b127:	mov    DWORD PTR [rax],0x26
  41b12d:	or     eax,0xffffffff
  41b130:	jmp    0x41af3c
  41b135:	cmp    eax,0x6
  41b138:	je     0x41b167
  41b13a:	cmp    eax,0x8
  41b13d:	jne    0x41b0e2
  41b13f:	call   QWORD PTR [rip+0x1bfcf]        # 0x437114
  41b145:	mov    DWORD PTR [rax],0xc
  41b14b:	or     eax,0xffffffff
  41b14e:	jmp    0x41af3c
  41b153:	call   QWORD PTR [rip+0x1bfbb]        # 0x437114
  41b159:	mov    DWORD PTR [rax],0x16
  41b15f:	or     eax,0xffffffff
  41b162:	jmp    0x41af3c
  41b167:	call   QWORD PTR [rip+0x1bfa7]        # 0x437114
  41b16d:	mov    DWORD PTR [rax],0x9
  41b173:	or     eax,0xffffffff
  41b176:	jmp    0x41af3c
  41b17b:	call   QWORD PTR [rip+0x1bf93]        # 0x437114
  41b181:	mov    DWORD PTR [rax],0x76
  41b187:	or     eax,0xffffffff
  41b18a:	jmp    0x41af3c
  41b18f:	call   QWORD PTR [rip+0x1bf7f]        # 0x437114
  41b195:	mov    DWORD PTR [rax],0x74
  41b19b:	or     eax,0xffffffff
  41b19e:	jmp    0x41af3c
  41b1a3:	call   QWORD PTR [rip+0x1bf6b]        # 0x437114
  41b1a9:	mov    DWORD PTR [rax],0x75
  41b1af:	or     eax,0xffffffff
  41b1b2:	jmp    0x41af3c
  41b1b7:	call   QWORD PTR [rip+0x1bf57]        # 0x437114
  41b1bd:	mov    DWORD PTR [rax],0x7b
  41b1c3:	or     eax,0xffffffff
  41b1c6:	jmp    0x41af3c
  41b1cb:	call   QWORD PTR [rip+0x1bf43]        # 0x437114
  41b1d1:	mov    DWORD PTR [rax],0x66
  41b1d7:	or     eax,0xffffffff
  41b1da:	jmp    0x41af3c
  41b1df:	call   QWORD PTR [rip+0x1bf2f]        # 0x437114
  41b1e5:	mov    DWORD PTR [rax],0x82
  41b1eb:	or     eax,0xffffffff
  41b1ee:	jmp    0x41af3c
  41b1f3:	call   QWORD PTR [rip+0x1bf1b]        # 0x437114
  41b1f9:	mov    DWORD PTR [rax],0x87
  41b1ff:	or     eax,0xffffffff
  41b202:	jmp    0x41af3c
  41b207:	call   QWORD PTR [rip+0x1bf07]        # 0x437114
  41b20d:	mov    DWORD PTR [rax],0x72
  41b213:	or     eax,0xffffffff
  41b216:	jmp    0x41af3c
  41b21b:	call   QWORD PTR [rip+0x1bef3]        # 0x437114
  41b221:	mov    DWORD PTR [rax],0x80
  41b227:	or     eax,0xffffffff
  41b22a:	jmp    0x41af3c
  41b22f:	call   QWORD PTR [rip+0x1bedf]        # 0x437114
  41b235:	mov    DWORD PTR [rax],0x6b
  41b23b:	or     eax,0xffffffff
  41b23e:	jmp    0x41af3c
  41b243:	call   QWORD PTR [rip+0x1becb]        # 0x437114
  41b249:	mov    DWORD PTR [rax],0x8a
  41b24f:	or     eax,0xffffffff
  41b252:	jmp    0x41af3c
  41b257:	call   QWORD PTR [rip+0x1beb7]        # 0x437114
  41b25d:	mov    DWORD PTR [rax],0x77
  41b263:	or     eax,0xffffffff
  41b266:	jmp    0x41af3c
  41b26b:	call   QWORD PTR [rip+0x1bea3]        # 0x437114
  41b271:	mov    DWORD PTR [rax],0x6c
  41b277:	or     eax,0xffffffff
  41b27a:	jmp    0x41af3c
  41b27f:	call   QWORD PTR [rip+0x1be8f]        # 0x437114
  41b285:	mov    DWORD PTR [rax],0x71
  41b28b:	or     eax,0xffffffff
  41b28e:	jmp    0x41af3c
  41b293:	call   QWORD PTR [rip+0x1be7b]        # 0x437114
  41b299:	mov    DWORD PTR [rax],0x64
  41b29f:	or     eax,0xffffffff
  41b2a2:	jmp    0x41af3c
  41b2a7:	call   QWORD PTR [rip+0x1be67]        # 0x437114
  41b2ad:	mov    DWORD PTR [rax],0x88
  41b2b3:	or     eax,0xffffffff
  41b2b6:	jmp    0x41af3c
  41b2bb:	call   QWORD PTR [rip+0x1be53]        # 0x437114
  41b2c1:	mov    DWORD PTR [rax],0x73
  41b2c7:	or     eax,0xffffffff
  41b2ca:	jmp    0x41af3c
  41b2cf:	call   QWORD PTR [rip+0x1be3f]        # 0x437114
  41b2d5:	mov    DWORD PTR [rax],0x67
  41b2db:	or     eax,0xffffffff
  41b2de:	jmp    0x41af3c
  41b2e3:	call   QWORD PTR [rip+0x1be2b]        # 0x437114
  41b2e9:	mov    DWORD PTR [rax],0x70
  41b2ef:	or     eax,0xffffffff
  41b2f2:	jmp    0x41af3c
  41b2f7:	call   QWORD PTR [rip+0x1be17]        # 0x437114
  41b2fd:	mov    DWORD PTR [rax],0x29
  41b303:	or     eax,0xffffffff
  41b306:	jmp    0x41af3c
  41b30b:	call   QWORD PTR [rip+0x1be03]        # 0x437114
  41b311:	mov    DWORD PTR [rax],0x6e
  41b317:	or     eax,0xffffffff
  41b31a:	jmp    0x41af3c
  41b31f:	nop
  41b320:	push   rbp
  41b321:	push   rdi
  41b322:	push   rsi
  41b323:	push   rbx
  41b324:	sub    rsp,0x58
  41b328:	mov    rdi,rcx
  41b32b:	mov    ecx,r8d
  41b32e:	mov    rbp,rdx
  41b331:	mov    ebx,r8d
  41b334:	call   0x417bf0
  41b339:	xor    edx,edx
  41b33b:	mov    rsi,rax
  41b33e:	mov    DWORD PTR [rsp+0x20],0xdeadbeef
  41b346:	lea    r8,[rsp+0x20]
  41b34b:	mov    rcx,rax
  41b34e:	call   QWORD PTR [rip+0x1c090]        # 0x4373e4
  41b354:	cmp    DWORD PTR [rsp+0x20],0xdeadbeef
  41b35c:	je     0x41b380
  41b35e:	mov    rcx,rsi
  41b361:	call   QWORD PTR [rip+0x1c0c5]        # 0x43742c
  41b367:	test   eax,eax
  41b369:	mov    esi,eax
  41b36b:	jne    0x41b3a0
  41b36d:	mov    ecx,ebx
  41b36f:	call   QWORD PTR [rip+0x1bd8f]        # 0x437104
  41b375:	mov    eax,esi
  41b377:	add    rsp,0x58
  41b37b:	pop    rbx
  41b37c:	pop    rsi
  41b37d:	pop    rdi
  41b37e:	pop    rbp
  41b37f:	ret    
  41b380:	mov    r8d,ebx
  41b383:	mov    rdx,rbp
  41b386:	mov    rcx,rdi
  41b389:	call   0x41ad70
  41b38e:	mov    esi,eax
  41b390:	mov    eax,esi
  41b392:	add    rsp,0x58
  41b396:	pop    rbx
  41b397:	pop    rsi
  41b398:	pop    rdi
  41b399:	pop    rbp
  41b39a:	ret    
  41b39b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b3a0:	call   QWORD PTR [rip+0x1c04e]        # 0x4373f4
  41b3a6:	cmp    eax,0x2740
  41b3ab:	mov    ebx,eax
  41b3ad:	je     0x41b6b6
  41b3b3:	jg     0x41b400
  41b3b5:	cmp    eax,0x2736
  41b3ba:	je     0x41b63e
  41b3c0:	jle    0x41b484
  41b3c6:	cmp    eax,0x273a
  41b3cb:	je     0x41b5da
  41b3d1:	jg     0x41b4e4
  41b3d7:	cmp    eax,0x2738
  41b3dc:	je     0x41b6de
  41b3e2:	jg     0x41b6ca
  41b3e8:	call   QWORD PTR [rip+0x1bd26]        # 0x437114
  41b3ee:	or     esi,0xffffffff
  41b3f1:	mov    DWORD PTR [rax],0x6d
  41b3f7:	jmp    0x41b375
  41b3fc:	nop    DWORD PTR [rax+0x0]
  41b400:	cmp    eax,0x2748
  41b405:	je     0x41b6a2
  41b40b:	jg     0x41b443
  41b40d:	cmp    eax,0x2744
  41b412:	je     0x41b5c6
  41b418:	jg     0x41b4bf
  41b41e:	cmp    eax,0x2742
  41b423:	je     0x41b5b2
  41b429:	jg     0x41b59e
  41b42f:	call   QWORD PTR [rip+0x1bcdf]        # 0x437114
  41b435:	or     esi,0xffffffff
  41b438:	mov    DWORD PTR [rax],0x65
  41b43e:	jmp    0x41b375
  41b443:	cmp    eax,0x274e
  41b448:	je     0x41b62a
  41b44e:	jg     0x41b527
  41b454:	cmp    eax,0x274c
  41b459:	je     0x41b666
  41b45f:	jg     0x41b652
  41b465:	cmp    eax,0x2749
  41b46a:	jne    0x41b505
  41b470:	call   QWORD PTR [rip+0x1bc9e]        # 0x437114
  41b476:	or     esi,0xffffffff
  41b479:	mov    DWORD PTR [rax],0x7e
  41b47f:	jmp    0x41b375
  41b484:	cmp    eax,0x57
  41b487:	je     0x41b576
  41b48d:	jle    0x41b558
  41b493:	cmp    eax,0x2734
  41b498:	je     0x41b706
  41b49e:	jg     0x41b6f2
  41b4a4:	cmp    eax,0x2733
  41b4a9:	jne    0x41b505
  41b4ab:	call   QWORD PTR [rip+0x1bc63]        # 0x437114
  41b4b1:	or     esi,0xffffffff
  41b4b4:	mov    DWORD PTR [rax],0x8c
  41b4ba:	jmp    0x41b375
  41b4bf:	cmp    eax,0x2746
  41b4c4:	je     0x41b68e
  41b4ca:	jg     0x41b67a
  41b4d0:	call   QWORD PTR [rip+0x1bc3e]        # 0x437114
  41b4d6:	or     esi,0xffffffff
  41b4d9:	mov    DWORD PTR [rax],0x6a
  41b4df:	jmp    0x41b375
  41b4e4:	cmp    eax,0x273d
  41b4e9:	je     0x41b602
  41b4ef:	cmp    eax,0x273f
  41b4f4:	je     0x41b5ee
  41b4fa:	cmp    eax,0x273b
  41b4ff:	je     0x41b616
  41b505:	call   QWORD PTR [rip+0x1bc09]        # 0x437114
  41b50b:	lea    ecx,[rbx-0x2711]
  41b511:	lea    edx,[rbx-0x2710]
  41b517:	cmp    ecx,0x17
  41b51a:	cmovbe ebx,edx
  41b51d:	or     esi,0xffffffff
  41b520:	mov    DWORD PTR [rax],ebx
  41b522:	jmp    0x41b375
  41b527:	cmp    eax,0x2751
  41b52c:	je     0x41b72e
  41b532:	cmp    eax,0x2752
  41b537:	je     0x41b71a
  41b53d:	cmp    eax,0x274f
  41b542:	jne    0x41b505
  41b544:	call   QWORD PTR [rip+0x1bbca]        # 0x437114
  41b54a:	or     esi,0xffffffff
  41b54d:	mov    DWORD PTR [rax],0x26
  41b553:	jmp    0x41b375
  41b558:	cmp    eax,0x6
  41b55b:	je     0x41b58a
  41b55d:	cmp    eax,0x8
  41b560:	jne    0x41b505
  41b562:	call   QWORD PTR [rip+0x1bbac]        # 0x437114
  41b568:	or     esi,0xffffffff
  41b56b:	mov    DWORD PTR [rax],0xc
  41b571:	jmp    0x41b375
  41b576:	call   QWORD PTR [rip+0x1bb98]        # 0x437114
  41b57c:	or     esi,0xffffffff
  41b57f:	mov    DWORD PTR [rax],0x16
  41b585:	jmp    0x41b375
  41b58a:	call   QWORD PTR [rip+0x1bb84]        # 0x437114
  41b590:	or     esi,0xffffffff
  41b593:	mov    DWORD PTR [rax],0x9
  41b599:	jmp    0x41b375
  41b59e:	call   QWORD PTR [rip+0x1bb70]        # 0x437114
  41b5a4:	or     esi,0xffffffff
  41b5a7:	mov    DWORD PTR [rax],0x76
  41b5ad:	jmp    0x41b375
  41b5b2:	call   QWORD PTR [rip+0x1bb5c]        # 0x437114
  41b5b8:	or     esi,0xffffffff
  41b5bb:	mov    DWORD PTR [rax],0x74
  41b5c1:	jmp    0x41b375
  41b5c6:	call   QWORD PTR [rip+0x1bb48]        # 0x437114
  41b5cc:	or     esi,0xffffffff
  41b5cf:	mov    DWORD PTR [rax],0x75
  41b5d5:	jmp    0x41b375
  41b5da:	call   QWORD PTR [rip+0x1bb34]        # 0x437114
  41b5e0:	or     esi,0xffffffff
  41b5e3:	mov    DWORD PTR [rax],0x7b
  41b5e9:	jmp    0x41b375
  41b5ee:	call   QWORD PTR [rip+0x1bb20]        # 0x437114
  41b5f4:	or     esi,0xffffffff
  41b5f7:	mov    DWORD PTR [rax],0x66
  41b5fd:	jmp    0x41b375
  41b602:	call   QWORD PTR [rip+0x1bb0c]        # 0x437114
  41b608:	or     esi,0xffffffff
  41b60b:	mov    DWORD PTR [rax],0x82
  41b611:	jmp    0x41b375
  41b616:	call   QWORD PTR [rip+0x1baf8]        # 0x437114
  41b61c:	or     esi,0xffffffff
  41b61f:	mov    DWORD PTR [rax],0x87
  41b625:	jmp    0x41b375
  41b62a:	call   QWORD PTR [rip+0x1bae4]        # 0x437114
  41b630:	or     esi,0xffffffff
  41b633:	mov    DWORD PTR [rax],0x72
  41b639:	jmp    0x41b375
  41b63e:	call   QWORD PTR [rip+0x1bad0]        # 0x437114
  41b644:	or     esi,0xffffffff
  41b647:	mov    DWORD PTR [rax],0x80
  41b64d:	jmp    0x41b375
  41b652:	call   QWORD PTR [rip+0x1babc]        # 0x437114
  41b658:	or     esi,0xffffffff
  41b65b:	mov    DWORD PTR [rax],0x6b
  41b661:	jmp    0x41b375
  41b666:	call   QWORD PTR [rip+0x1baa8]        # 0x437114
  41b66c:	or     esi,0xffffffff
  41b66f:	mov    DWORD PTR [rax],0x8a
  41b675:	jmp    0x41b375
  41b67a:	call   QWORD PTR [rip+0x1ba94]        # 0x437114
  41b680:	or     esi,0xffffffff
  41b683:	mov    DWORD PTR [rax],0x77
  41b689:	jmp    0x41b375
  41b68e:	call   QWORD PTR [rip+0x1ba80]        # 0x437114
  41b694:	or     esi,0xffffffff
  41b697:	mov    DWORD PTR [rax],0x6c
  41b69d:	jmp    0x41b375
  41b6a2:	call   QWORD PTR [rip+0x1ba6c]        # 0x437114
  41b6a8:	or     esi,0xffffffff
  41b6ab:	mov    DWORD PTR [rax],0x71
  41b6b1:	jmp    0x41b375
  41b6b6:	call   QWORD PTR [rip+0x1ba58]        # 0x437114
  41b6bc:	or     esi,0xffffffff
  41b6bf:	mov    DWORD PTR [rax],0x64
  41b6c5:	jmp    0x41b375
  41b6ca:	call   QWORD PTR [rip+0x1ba44]        # 0x437114
  41b6d0:	or     esi,0xffffffff
  41b6d3:	mov    DWORD PTR [rax],0x88
  41b6d9:	jmp    0x41b375
  41b6de:	call   QWORD PTR [rip+0x1ba30]        # 0x437114
  41b6e4:	or     esi,0xffffffff
  41b6e7:	mov    DWORD PTR [rax],0x73
  41b6ed:	jmp    0x41b375
  41b6f2:	call   QWORD PTR [rip+0x1ba1c]        # 0x437114
  41b6f8:	or     esi,0xffffffff
  41b6fb:	mov    DWORD PTR [rax],0x67
  41b701:	jmp    0x41b375
  41b706:	call   QWORD PTR [rip+0x1ba08]        # 0x437114
  41b70c:	or     esi,0xffffffff
  41b70f:	mov    DWORD PTR [rax],0x70
  41b715:	jmp    0x41b375
  41b71a:	call   QWORD PTR [rip+0x1b9f4]        # 0x437114
  41b720:	or     esi,0xffffffff
  41b723:	mov    DWORD PTR [rax],0x29
  41b729:	jmp    0x41b375
  41b72e:	call   QWORD PTR [rip+0x1b9e0]        # 0x437114
  41b734:	or     esi,0xffffffff
  41b737:	mov    DWORD PTR [rax],0x6e
  41b73d:	jmp    0x41b375
  41b742:	nop    DWORD PTR [rax+0x0]
  41b746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b750:	push   rbx
  41b751:	sub    rsp,0x1c0
  41b758:	xor    eax,eax
  41b75a:	cmp    DWORD PTR [rip+0x182a0],ecx        # 0x433a00
  41b760:	mov    ebx,ecx
  41b762:	jl     0x41b770
  41b764:	add    rsp,0x1c0
  41b76b:	pop    rbx
  41b76c:	ret    
  41b76d:	nop    DWORD PTR [rax]
  41b770:	lea    rdx,[rsp+0x20]
  41b775:	movzx  ecx,cx
  41b778:	call   QWORD PTR [rip+0x1bc8e]        # 0x43740c
  41b77e:	mov    edx,eax
  41b780:	mov    eax,0x1
  41b785:	test   edx,edx
  41b787:	jne    0x41b764
  41b789:	movzx  edx,WORD PTR [rsp+0x20]
  41b78e:	mov    al,0x2
  41b790:	cmp    ebx,edx
  41b792:	jg     0x41b764
  41b794:	mov    eax,DWORD PTR [rip+0x18266]        # 0x433a00
  41b79a:	test   eax,eax
  41b79c:	jne    0x41b7b8
  41b79e:	lea    r8,[rip+0x1827b]        # 0x433a20
  41b7a5:	lea    rdx,[rip+0xfffffffffffff734]        # 0x41aee0
  41b7ac:	lea    rcx,[rip+0xfffffffffffffb6d]        # 0x41b320
  41b7b3:	call   0x41ae20
  41b7b8:	mov    DWORD PTR [rip+0x18242],ebx        # 0x433a00
  41b7be:	xor    eax,eax
  41b7c0:	jmp    0x41b764
  41b7c2:	nop    DWORD PTR [rax+0x0]
  41b7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7d0:	sub    rsp,0x28
  41b7d4:	lea    rcx,[rip+0x18245]        # 0x433a20
  41b7db:	mov    DWORD PTR [rip+0x1821b],0x0        # 0x433a00
  41b7e5:	call   0x41aea0
  41b7ea:	call   QWORD PTR [rip+0x1bbec]        # 0x4373dc
  41b7f0:	test   eax,eax
  41b7f2:	setne  al
  41b7f5:	movzx  eax,al
  41b7f8:	add    rsp,0x28
  41b7fc:	ret    
  41b7fd:	nop
  41b7fe:	nop
  41b7ff:	nop
  41b800:	push   rdi
  41b801:	push   rsi
  41b802:	push   rbx
  41b803:	sub    rsp,0x30
  41b807:	mov    rbx,rdx
  41b80a:	mov    rsi,r8
  41b80d:	call   0x417bf0
  41b812:	cmp    rax,0xffffffffffffffff
  41b816:	mov    rcx,rax
  41b819:	je     0x41b960
  41b81f:	mov    r8,rsi
  41b822:	mov    rdx,rbx
  41b825:	call   QWORD PTR [rip+0x1bc29]        # 0x437454
  41b82b:	test   eax,eax
  41b82d:	mov    esi,eax
  41b82f:	mov    ebx,eax
  41b831:	js     0x41b840
  41b833:	mov    eax,ebx
  41b835:	add    rsp,0x30
  41b839:	pop    rbx
  41b83a:	pop    rsi
  41b83b:	pop    rdi
  41b83c:	ret    
  41b83d:	nop    DWORD PTR [rax]
  41b840:	call   QWORD PTR [rip+0x1bbae]        # 0x4373f4
  41b846:	cmp    eax,0x2740
  41b84b:	mov    edi,eax
  41b84d:	je     0x41baeb
  41b853:	jg     0x41b8a0
  41b855:	cmp    eax,0x2736
  41b85a:	je     0x41bac9
  41b860:	jle    0x41b922
  41b866:	cmp    eax,0x273a
  41b86b:	je     0x41bab8
  41b871:	jg     0x41b9a4
  41b877:	cmp    eax,0x2738
  41b87c:	je     0x41bb0f
  41b882:	jg     0x41bafc
  41b888:	call   QWORD PTR [rip+0x1b886]        # 0x437114
  41b88e:	mov    ebx,esi
  41b890:	mov    DWORD PTR [rax],0x6d
  41b896:	jmp    0x41b833
  41b898:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8a0:	cmp    eax,0x2748
  41b8a5:	je     0x41bada
  41b8ab:	jg     0x41b8e2
  41b8ad:	cmp    eax,0x2744
  41b8b2:	je     0x41baa7
  41b8b8:	jg     0x41b980
  41b8be:	cmp    eax,0x2742
  41b8c3:	je     0x41ba96
  41b8c9:	jg     0x41ba83
  41b8cf:	call   QWORD PTR [rip+0x1b83f]        # 0x437114
  41b8d5:	mov    ebx,esi
  41b8d7:	mov    DWORD PTR [rax],0x65
  41b8dd:	jmp    0x41b833
  41b8e2:	cmp    eax,0x274e
  41b8e7:	je     0x41bb57
  41b8ed:	jg     0x41b9f0
  41b8f3:	cmp    eax,0x274c
  41b8f8:	je     0x41bb7b
  41b8fe:	jg     0x41bb68
  41b904:	cmp    eax,0x2749
  41b909:	jne    0x41b9c5
  41b90f:	call   QWORD PTR [rip+0x1b7ff]        # 0x437114
  41b915:	mov    ebx,esi
  41b917:	mov    DWORD PTR [rax],0x7e
  41b91d:	jmp    0x41b833
  41b922:	cmp    eax,0x57
  41b925:	je     0x41ba3d
  41b92b:	jle    0x41ba20
  41b931:	cmp    eax,0x2734
  41b936:	je     0x41bb9f
  41b93c:	jg     0x41bb8c
  41b942:	cmp    eax,0x2733
  41b947:	jne    0x41b9c5
  41b949:	call   QWORD PTR [rip+0x1b7c5]        # 0x437114
  41b94f:	mov    ebx,esi
  41b951:	mov    DWORD PTR [rax],0x8c
  41b957:	jmp    0x41b833
  41b95c:	nop    DWORD PTR [rax+0x0]
  41b960:	mov    QWORD PTR [rsp+0x28],rax
  41b965:	call   QWORD PTR [rip+0x1b7a9]        # 0x437114
  41b96b:	mov    rcx,QWORD PTR [rsp+0x28]
  41b970:	mov    DWORD PTR [rax],0x9
  41b976:	mov    ebx,ecx
  41b978:	jmp    0x41b833
  41b97d:	nop    DWORD PTR [rax]
  41b980:	cmp    eax,0x2746
  41b985:	je     0x41bb33
  41b98b:	jg     0x41bb20
  41b991:	call   QWORD PTR [rip+0x1b77d]        # 0x437114
  41b997:	mov    ebx,esi
  41b999:	mov    DWORD PTR [rax],0x6a
  41b99f:	jmp    0x41b833
  41b9a4:	cmp    eax,0x273d
  41b9a9:	je     0x41ba72
  41b9af:	cmp    eax,0x273f
  41b9b4:	je     0x41ba5f
  41b9ba:	cmp    eax,0x273b
  41b9bf:	je     0x41bb44
  41b9c5:	call   QWORD PTR [rip+0x1b749]        # 0x437114
  41b9cb:	lea    ecx,[rdi-0x2711]
  41b9d1:	lea    edx,[rdi-0x2710]
  41b9d7:	mov    ebx,esi
  41b9d9:	cmp    ecx,0x17
  41b9dc:	cmovbe edi,edx
  41b9df:	mov    DWORD PTR [rax],edi
  41b9e1:	jmp    0x41b833
  41b9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b9f0:	cmp    eax,0x2751
  41b9f5:	je     0x41bbc3
  41b9fb:	cmp    eax,0x2752
  41ba00:	je     0x41bbb0
  41ba06:	cmp    eax,0x274f
  41ba0b:	jne    0x41b9c5
  41ba0d:	call   QWORD PTR [rip+0x1b701]        # 0x437114
  41ba13:	mov    ebx,esi
  41ba15:	mov    DWORD PTR [rax],0x26
  41ba1b:	jmp    0x41b833
  41ba20:	cmp    eax,0x6
  41ba23:	je     0x41ba4e
  41ba25:	cmp    eax,0x8
  41ba28:	jne    0x41b9c5
  41ba2a:	call   QWORD PTR [rip+0x1b6e4]        # 0x437114
  41ba30:	mov    ebx,esi
  41ba32:	mov    DWORD PTR [rax],0xc
  41ba38:	jmp    0x41b833
  41ba3d:	call   QWORD PTR [rip+0x1b6d1]        # 0x437114
  41ba43:	mov    DWORD PTR [rax],0x16
  41ba49:	jmp    0x41b833
  41ba4e:	call   QWORD PTR [rip+0x1b6c0]        # 0x437114
  41ba54:	mov    DWORD PTR [rax],0x9
  41ba5a:	jmp    0x41b833
  41ba5f:	call   QWORD PTR [rip+0x1b6af]        # 0x437114
  41ba65:	mov    ebx,esi
  41ba67:	mov    DWORD PTR [rax],0x66
  41ba6d:	jmp    0x41b833
  41ba72:	call   QWORD PTR [rip+0x1b69c]        # 0x437114
  41ba78:	mov    DWORD PTR [rax],0x82
  41ba7e:	jmp    0x41b833
  41ba83:	call   QWORD PTR [rip+0x1b68b]        # 0x437114
  41ba89:	mov    ebx,esi
  41ba8b:	mov    DWORD PTR [rax],0x76
  41ba91:	jmp    0x41b833
  41ba96:	call   QWORD PTR [rip+0x1b678]        # 0x437114
  41ba9c:	mov    DWORD PTR [rax],0x74
  41baa2:	jmp    0x41b833
  41baa7:	call   QWORD PTR [rip+0x1b667]        # 0x437114
  41baad:	mov    DWORD PTR [rax],0x75
  41bab3:	jmp    0x41b833
  41bab8:	call   QWORD PTR [rip+0x1b656]        # 0x437114
  41babe:	mov    DWORD PTR [rax],0x7b
  41bac4:	jmp    0x41b833
  41bac9:	call   QWORD PTR [rip+0x1b645]        # 0x437114
  41bacf:	mov    DWORD PTR [rax],0x80
  41bad5:	jmp    0x41b833
  41bada:	call   QWORD PTR [rip+0x1b634]        # 0x437114
  41bae0:	mov    DWORD PTR [rax],0x71
  41bae6:	jmp    0x41b833
  41baeb:	call   QWORD PTR [rip+0x1b623]        # 0x437114
  41baf1:	mov    DWORD PTR [rax],0x64
  41baf7:	jmp    0x41b833
  41bafc:	call   QWORD PTR [rip+0x1b612]        # 0x437114
  41bb02:	mov    ebx,esi
  41bb04:	mov    DWORD PTR [rax],0x88
  41bb0a:	jmp    0x41b833
  41bb0f:	call   QWORD PTR [rip+0x1b5ff]        # 0x437114
  41bb15:	mov    DWORD PTR [rax],0x73
  41bb1b:	jmp    0x41b833
  41bb20:	call   QWORD PTR [rip+0x1b5ee]        # 0x437114
  41bb26:	mov    ebx,esi
  41bb28:	mov    DWORD PTR [rax],0x77
  41bb2e:	jmp    0x41b833
  41bb33:	call   QWORD PTR [rip+0x1b5db]        # 0x437114
  41bb39:	mov    DWORD PTR [rax],0x6c
  41bb3f:	jmp    0x41b833
  41bb44:	call   QWORD PTR [rip+0x1b5ca]        # 0x437114
  41bb4a:	mov    ebx,esi
  41bb4c:	mov    DWORD PTR [rax],0x87
  41bb52:	jmp    0x41b833
  41bb57:	call   QWORD PTR [rip+0x1b5b7]        # 0x437114
  41bb5d:	mov    DWORD PTR [rax],0x72
  41bb63:	jmp    0x41b833
  41bb68:	call   QWORD PTR [rip+0x1b5a6]        # 0x437114
  41bb6e:	mov    ebx,esi
  41bb70:	mov    DWORD PTR [rax],0x6b
  41bb76:	jmp    0x41b833
  41bb7b:	call   QWORD PTR [rip+0x1b593]        # 0x437114
  41bb81:	mov    DWORD PTR [rax],0x8a
  41bb87:	jmp    0x41b833
  41bb8c:	call   QWORD PTR [rip+0x1b582]        # 0x437114
  41bb92:	mov    ebx,esi
  41bb94:	mov    DWORD PTR [rax],0x67
  41bb9a:	jmp    0x41b833
  41bb9f:	call   QWORD PTR [rip+0x1b56f]        # 0x437114
  41bba5:	mov    DWORD PTR [rax],0x70
  41bbab:	jmp    0x41b833
  41bbb0:	call   QWORD PTR [rip+0x1b55e]        # 0x437114
  41bbb6:	mov    ebx,esi
  41bbb8:	mov    DWORD PTR [rax],0x29
  41bbbe:	jmp    0x41b833
  41bbc3:	call   QWORD PTR [rip+0x1b54b]        # 0x437114
  41bbc9:	mov    DWORD PTR [rax],0x6e
  41bbcf:	jmp    0x41b833
  41bbd4:	nop
  41bbd5:	nop
  41bbd6:	nop
  41bbd7:	nop
  41bbd8:	nop
  41bbd9:	nop
  41bbda:	nop
  41bbdb:	nop
  41bbdc:	nop
  41bbdd:	nop
  41bbde:	nop
  41bbdf:	nop
  41bbe0:	jmp    QWORD PTR [rip+0x1b8d6]        # 0x4374bc
  41bbe6:	nop
  41bbe7:	nop
  41bbe8:	jmp    QWORD PTR [rip+0x1b8c6]        # 0x4374b4
  41bbee:	nop
  41bbef:	nop
  41bbf0:	jmp    QWORD PTR [rip+0x1b8b6]        # 0x4374ac
  41bbf6:	nop
  41bbf7:	nop
  41bbf8:	jmp    QWORD PTR [rip+0x1b8a6]        # 0x4374a4
  41bbfe:	nop
  41bbff:	nop
  41bc00:	jmp    QWORD PTR [rip+0x1b896]        # 0x43749c
  41bc06:	nop
  41bc07:	nop
  41bc08:	jmp    QWORD PTR [rip+0x1b886]        # 0x437494
  41bc0e:	nop
  41bc0f:	nop
  41bc10:	jmp    QWORD PTR [rip+0x1b876]        # 0x43748c
  41bc16:	nop
  41bc17:	nop
  41bc18:	jmp    QWORD PTR [rip+0x1b866]        # 0x437484
  41bc1e:	nop
  41bc1f:	nop
  41bc20:	jmp    QWORD PTR [rip+0x1b856]        # 0x43747c
  41bc26:	nop
  41bc27:	nop
  41bc28:	jmp    QWORD PTR [rip+0x1b846]        # 0x437474
  41bc2e:	nop
  41bc2f:	nop
  41bc30:	jmp    QWORD PTR [rip+0x1b836]        # 0x43746c
  41bc36:	nop
  41bc37:	nop
  41bc38:	jmp    QWORD PTR [rip+0x1b826]        # 0x437464
  41bc3e:	nop
  41bc3f:	nop
  41bc40:	jmp    QWORD PTR [rip+0x1b816]        # 0x43745c
  41bc46:	nop
  41bc47:	nop
  41bc48:	jmp    QWORD PTR [rip+0x1b806]        # 0x437454
  41bc4e:	nop
  41bc4f:	nop
  41bc50:	jmp    QWORD PTR [rip+0x1b7f6]        # 0x43744c
  41bc56:	nop
  41bc57:	nop
  41bc58:	jmp    QWORD PTR [rip+0x1b7e6]        # 0x437444
  41bc5e:	nop
  41bc5f:	nop
  41bc60:	jmp    QWORD PTR [rip+0x1b7d6]        # 0x43743c
  41bc66:	nop
  41bc67:	nop
  41bc68:	jmp    QWORD PTR [rip+0x1b7c6]        # 0x437434
  41bc6e:	nop
  41bc6f:	nop
  41bc70:	jmp    QWORD PTR [rip+0x1b7b6]        # 0x43742c
  41bc76:	nop
  41bc77:	nop
  41bc78:	jmp    QWORD PTR [rip+0x1b7a6]        # 0x437424
  41bc7e:	nop
  41bc7f:	nop
  41bc80:	jmp    QWORD PTR [rip+0x1b796]        # 0x43741c
  41bc86:	nop
  41bc87:	nop
  41bc88:	jmp    QWORD PTR [rip+0x1b786]        # 0x437414
  41bc8e:	nop
  41bc8f:	nop
  41bc90:	jmp    QWORD PTR [rip+0x1b776]        # 0x43740c
  41bc96:	nop
  41bc97:	nop
  41bc98:	jmp    QWORD PTR [rip+0x1b766]        # 0x437404
  41bc9e:	nop
  41bc9f:	nop
  41bca0:	jmp    QWORD PTR [rip+0x1b756]        # 0x4373fc
  41bca6:	nop
  41bca7:	nop
  41bca8:	jmp    QWORD PTR [rip+0x1b746]        # 0x4373f4
  41bcae:	nop
  41bcaf:	nop
  41bcb0:	jmp    QWORD PTR [rip+0x1b736]        # 0x4373ec
  41bcb6:	nop
  41bcb7:	nop
  41bcb8:	jmp    QWORD PTR [rip+0x1b726]        # 0x4373e4
  41bcbe:	nop
  41bcbf:	nop
  41bcc0:	jmp    QWORD PTR [rip+0x1b716]        # 0x4373dc
  41bcc6:	nop
  41bcc7:	nop
  41bcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bcd0:	sub    rsp,0x28
  41bcd4:	call   0x41bd00
  41bcd9:	lea    rcx,[rip+0x17d60]        # 0x433a40
  41bce0:	mov    r8d,0x401
  41bce6:	mov    rdx,rax
  41bce9:	call   0x422740
  41bcee:	lea    rax,[rip+0x17d4b]        # 0x433a40
  41bcf5:	add    rsp,0x28
  41bcf9:	ret    
  41bcfa:	nop
  41bcfb:	nop
  41bcfc:	nop
  41bcfd:	nop
  41bcfe:	nop
  41bcff:	nop
  41bd00:	push   rbx
  41bd01:	sub    rsp,0x40
  41bd05:	lea    rbx,[rip+0x18174]        # 0x433e80
  41bd0c:	mov    r9d,0x400
  41bd12:	xor    edx,edx
  41bd14:	mov    r8d,ecx
  41bd17:	mov    QWORD PTR [rsp+0x30],0x0
  41bd20:	mov    DWORD PTR [rsp+0x28],0x400
  41bd28:	mov    QWORD PTR [rsp+0x20],rbx
  41bd2d:	mov    ecx,0x12ff
  41bd32:	call   QWORD PTR [rip+0x1b234]        # 0x436f6c
  41bd38:	mov    rax,rbx
  41bd3b:	add    rsp,0x40
  41bd3f:	pop    rbx
  41bd40:	ret    
  41bd41:	nop
  41bd42:	nop
  41bd43:	nop
  41bd44:	nop
  41bd45:	nop
  41bd46:	nop
  41bd47:	nop
  41bd48:	nop
  41bd49:	nop
  41bd4a:	nop
  41bd4b:	nop
  41bd4c:	nop
  41bd4d:	nop
  41bd4e:	nop
  41bd4f:	nop
  41bd50:	jmp    QWORD PTR [rip+0x1b646]        # 0x43739c
  41bd56:	nop
  41bd57:	nop
  41bd58:	jmp    QWORD PTR [rip+0x1b636]        # 0x437394
  41bd5e:	nop
  41bd5f:	nop
  41bd60:	jmp    QWORD PTR [rip+0x1b626]        # 0x43738c
  41bd66:	nop
  41bd67:	nop
  41bd68:	nop    DWORD PTR [rax+rax*1+0x0]
  41bd70:	push   rbx
  41bd71:	sub    rsp,0x30
  41bd75:	mov    rbx,rcx
  41bd78:	mov    rcx,QWORD PTR [rip+0x19da1]        # 0x435b20
  41bd7f:	call   0x41c320
  41bd84:	cmp    rax,0xffffffffffffffff
  41bd88:	mov    QWORD PTR [rsp+0x20],rax
  41bd8d:	je     0x41be05
  41bd8f:	mov    ecx,0x8
  41bd94:	call   0x422900
  41bd99:	mov    rcx,QWORD PTR [rip+0x19d80]        # 0x435b20
  41bda0:	call   0x41c320
  41bda5:	mov    rcx,QWORD PTR [rip+0x19d7c]        # 0x435b28
  41bdac:	mov    QWORD PTR [rsp+0x20],rax
  41bdb1:	call   0x41c320
  41bdb6:	lea    rdx,[rsp+0x20]
  41bdbb:	lea    r8,[rsp+0x28]
  41bdc0:	mov    rcx,rbx
  41bdc3:	mov    QWORD PTR [rsp+0x28],rax
  41bdc8:	call   0x4229a0
  41bdcd:	mov    rcx,QWORD PTR [rsp+0x20]
  41bdd2:	mov    rbx,rax
  41bdd5:	call   0x41c330
  41bdda:	mov    rcx,QWORD PTR [rsp+0x28]
  41bddf:	mov    QWORD PTR [rip+0x19d3a],rax        # 0x435b20
  41bde6:	call   0x41c330
  41bdeb:	mov    ecx,0x8
  41bdf0:	mov    QWORD PTR [rip+0x19d31],rax        # 0x435b28
  41bdf7:	call   0x4228c8
  41bdfc:	mov    rax,rbx
  41bdff:	add    rsp,0x30
  41be03:	pop    rbx
  41be04:	ret    
  41be05:	mov    rax,QWORD PTR [rip+0x11af4]        # 0x42d900
  41be0c:	mov    rcx,rbx
  41be0f:	call   QWORD PTR [rax]
  41be11:	add    rsp,0x30
  41be15:	pop    rbx
  41be16:	ret    
  41be17:	nop    WORD PTR [rax+rax*1+0x0]
  41be20:	sub    rsp,0x28
  41be24:	call   0x41bd70
  41be29:	test   rax,rax
  41be2c:	sete   al
  41be2f:	movzx  eax,al
  41be32:	neg    eax
  41be34:	add    rsp,0x28
  41be38:	ret    
  41be39:	nop
  41be3a:	nop
  41be3b:	nop
  41be3c:	nop
  41be3d:	nop
  41be3e:	nop
  41be3f:	nop
  41be40:	sub    rsp,0x28
  41be44:	mov    rax,QWORD PTR [rip+0x9c95]        # 0x425ae0
  41be4b:	mov    rax,QWORD PTR [rax]
  41be4e:	test   rax,rax
  41be51:	je     0x41be70
  41be53:	call   rax
  41be55:	mov    rax,QWORD PTR [rip+0x9c84]        # 0x425ae0
  41be5c:	lea    rdx,[rax+0x8]
  41be60:	mov    rax,QWORD PTR [rax+0x8]
  41be64:	mov    QWORD PTR [rip+0x9c75],rdx        # 0x425ae0
  41be6b:	test   rax,rax
  41be6e:	jne    0x41be53
  41be70:	add    rsp,0x28
  41be74:	ret    
  41be75:	nop
  41be76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be80:	push   rsi
  41be81:	push   rbx
  41be82:	sub    rsp,0x28
  41be86:	mov    rsi,QWORD PTR [rip+0x119e3]        # 0x42d870
  41be8d:	mov    rax,QWORD PTR [rsi]
  41be90:	cmp    eax,0xffffffff
  41be93:	mov    ebx,eax
  41be95:	je     0x41bec0
  41be97:	test   ebx,ebx
  41be99:	je     0x41beaa
  41be9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bea0:	mov    eax,ebx
  41bea2:	call   QWORD PTR [rsi+rax*8]
  41bea5:	sub    ebx,0x1
  41bea8:	jne    0x41bea0
  41beaa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x41be40
  41beb1:	add    rsp,0x28
  41beb5:	pop    rbx
  41beb6:	pop    rsi
  41beb7:	jmp    0x41be20
  41bebc:	nop    DWORD PTR [rax+0x0]
  41bec0:	xor    ebx,ebx
  41bec2:	jmp    0x41bec6
  41bec4:	mov    ebx,eax
  41bec6:	lea    edx,[rbx+0x1]
  41bec9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  41bece:	mov    rax,rdx
  41bed1:	jne    0x41bec4
  41bed3:	jmp    0x41be97
  41bed5:	nop
  41bed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bee0:	mov    eax,DWORD PTR [rip+0x187da]        # 0x4346c0
  41bee6:	test   eax,eax
  41bee8:	je     0x41bef0
  41beea:	repz ret 
  41beec:	nop    DWORD PTR [rax+0x0]
  41bef0:	mov    DWORD PTR [rip+0x187c6],0x1        # 0x4346c0
  41befa:	jmp    0x41be80
  41befc:	nop
  41befd:	nop
  41befe:	nop
  41beff:	nop
  41bf00:	mov    rax,QWORD PTR [rip+0x1b1c5]        # 0x4370cc
  41bf07:	rex.W jmp rax
  41bf0a:	nop
  41bf0b:	nop
  41bf0c:	nop
  41bf0d:	nop
  41bf0e:	nop
  41bf0f:	nop
  41bf10:	xor    eax,eax
  41bf12:	ret    
  41bf13:	nop
  41bf14:	nop
  41bf15:	nop
  41bf16:	nop
  41bf17:	nop
  41bf18:	nop
  41bf19:	nop
  41bf1a:	nop
  41bf1b:	nop
  41bf1c:	nop
  41bf1d:	nop
  41bf1e:	nop
  41bf1f:	nop
  41bf20:	push   r12
  41bf22:	push   rbp
  41bf23:	push   rdi
  41bf24:	push   rsi
  41bf25:	push   rbx
  41bf26:	sub    rsp,0x40
  41bf2a:	mov    rbx,QWORD PTR [rip+0x9c4f]        # 0x425b80
  41bf31:	movabs rax,0x2b992ddfa232
  41bf3b:	mov    QWORD PTR [rsp+0x20],0x0
  41bf44:	cmp    rbx,rax
  41bf47:	je     0x41bf60
  41bf49:	not    rbx
  41bf4c:	mov    QWORD PTR [rip+0x9c3d],rbx        # 0x425b90
  41bf53:	add    rsp,0x40
  41bf57:	pop    rbx
  41bf58:	pop    rsi
  41bf59:	pop    rdi
  41bf5a:	pop    rbp
  41bf5b:	pop    r12
  41bf5d:	ret    
  41bf5e:	xchg   ax,ax
  41bf60:	lea    rcx,[rsp+0x20]
  41bf65:	call   QWORD PTR [rip+0x1b071]        # 0x436fdc
  41bf6b:	mov    r12,QWORD PTR [rsp+0x20]
  41bf70:	call   QWORD PTR [rip+0x1b00e]        # 0x436f84
  41bf76:	mov    ebp,eax
  41bf78:	call   QWORD PTR [rip+0x1b00e]        # 0x436f8c
  41bf7e:	mov    edi,eax
  41bf80:	call   QWORD PTR [rip+0x1b05e]        # 0x436fe4
  41bf86:	lea    rcx,[rsp+0x30]
  41bf8b:	mov    esi,eax
  41bf8d:	call   QWORD PTR [rip+0x1b089]        # 0x43701c
  41bf93:	xor    r12,QWORD PTR [rsp+0x30]
  41bf98:	mov    edx,edi
  41bf9a:	movabs rax,0xffffffffffff
  41bfa4:	xor    rbp,r12
  41bfa7:	mov    rdi,rbp
  41bfaa:	xor    rdi,rdx
  41bfad:	mov    edx,esi
  41bfaf:	xor    rdi,rdx
  41bfb2:	mov    rsi,rdi
  41bfb5:	and    rsi,rax
  41bfb8:	cmp    rsi,rbx
  41bfbb:	je     0x41bfe0
  41bfbd:	mov    rax,rsi
  41bfc0:	not    rax
  41bfc3:	mov    QWORD PTR [rip+0x9bb6],rsi        # 0x425b80
  41bfca:	mov    QWORD PTR [rip+0x9bbf],rax        # 0x425b90
  41bfd1:	add    rsp,0x40
  41bfd5:	pop    rbx
  41bfd6:	pop    rsi
  41bfd7:	pop    rdi
  41bfd8:	pop    rbp
  41bfd9:	pop    r12
  41bfdb:	ret    
  41bfdc:	nop    DWORD PTR [rax+0x0]
  41bfe0:	movabs rax,0xffffd466d2205dcc
  41bfea:	movabs rsi,0x2b992ddfa233
  41bff4:	jmp    0x41bfc3
  41bff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c000:	push   rbp
  41c001:	push   rsi
  41c002:	push   rbx
  41c003:	mov    rbp,rsp
  41c006:	sub    rsp,0x70
  41c00a:	mov    rsi,rcx
  41c00d:	lea    rcx,[rip+0x186ec]        # 0x434700
  41c014:	call   QWORD PTR [rip+0x1b012]        # 0x43702c
  41c01a:	mov    rbx,QWORD PTR [rip+0x187d7]        # 0x4347f8
  41c021:	xor    r8d,r8d
  41c024:	lea    rdx,[rbp-0x28]
  41c028:	mov    rcx,rbx
  41c02b:	call   QWORD PTR [rip+0x1b003]        # 0x437034
  41c031:	test   rax,rax
  41c034:	mov    r9,rax
  41c037:	je     0x41c0e0
  41c03d:	lea    rax,[rbp-0x20]
  41c041:	mov    QWORD PTR [rsp+0x38],0x0
  41c04a:	mov    r8,rbx
  41c04d:	mov    rdx,QWORD PTR [rbp-0x28]
  41c051:	xor    ecx,ecx
  41c053:	mov    QWORD PTR [rsp+0x30],rax
  41c058:	lea    rax,[rbp-0x18]
  41c05c:	mov    QWORD PTR [rsp+0x28],rax
  41c061:	lea    rax,[rip+0x18698]        # 0x434700
  41c068:	mov    QWORD PTR [rsp+0x20],rax
  41c06d:	call   QWORD PTR [rip+0x1afc9]        # 0x43703c
  41c073:	mov    rax,QWORD PTR [rip+0x1877e]        # 0x4347f8
  41c07a:	xor    ecx,ecx
  41c07c:	mov    QWORD PTR [rip+0x186fd],rsi        # 0x434780
  41c083:	mov    DWORD PTR [rip+0x18b73],0xc0000409        # 0x434c00
  41c08d:	mov    DWORD PTR [rip+0x18b6d],0x1        # 0x434c04
  41c097:	mov    QWORD PTR [rip+0x18b72],rax        # 0x434c10
  41c09e:	mov    rax,QWORD PTR [rip+0x9adb]        # 0x425b80
  41c0a5:	mov    QWORD PTR [rbp-0x10],rax
  41c0a9:	mov    rax,QWORD PTR [rip+0x9ae0]        # 0x425b90
  41c0b0:	mov    QWORD PTR [rbp-0x8],rax
  41c0b4:	call   QWORD PTR [rip+0x1af8a]        # 0x437044
  41c0ba:	lea    rcx,[rip+0x1100f]        # 0x42d0d0
  41c0c1:	call   QWORD PTR [rip+0x1afa5]        # 0x43706c
  41c0c7:	call   QWORD PTR [rip+0x1aeaf]        # 0x436f7c
  41c0cd:	mov    edx,0xc0000409
  41c0d2:	mov    rcx,rax
  41c0d5:	call   QWORD PTR [rip+0x1af81]        # 0x43705c
  41c0db:	call   0x4228c0
  41c0e0:	mov    rax,QWORD PTR [rbp+0x18]
  41c0e4:	mov    QWORD PTR [rip+0x1870d],rax        # 0x4347f8
  41c0eb:	lea    rax,[rbp+0x8]
  41c0ef:	mov    QWORD PTR [rip+0x186a2],rax        # 0x434798
  41c0f6:	jmp    0x41c073
  41c0fb:	nop
  41c0fc:	nop
  41c0fd:	nop
  41c0fe:	nop
  41c0ff:	nop
  41c100:	sub    rsp,0x28
  41c104:	test   edx,edx
  41c106:	je     0x41c120
  41c108:	cmp    edx,0x3
  41c10b:	je     0x41c120
  41c10d:	mov    eax,0x1
  41c112:	add    rsp,0x28
  41c116:	ret    
  41c117:	nop    WORD PTR [rax+rax*1+0x0]
  41c120:	call   0x41ce10
  41c125:	mov    eax,0x1
  41c12a:	add    rsp,0x28
  41c12e:	ret    
  41c12f:	nop
  41c130:	push   rsi
  41c131:	push   rbx
  41c132:	sub    rsp,0x28
  41c136:	mov    rax,QWORD PTR [rip+0x11713]        # 0x42d850
  41c13d:	cmp    DWORD PTR [rax],0x2
  41c140:	je     0x41c148
  41c142:	mov    DWORD PTR [rax],0x2
  41c148:	cmp    edx,0x2
  41c14b:	je     0x41c160
  41c14d:	cmp    edx,0x1
  41c150:	je     0x41c192
  41c152:	mov    eax,0x1
  41c157:	add    rsp,0x28
  41c15b:	pop    rbx
  41c15c:	pop    rsi
  41c15d:	ret    
  41c15e:	xchg   ax,ax
  41c160:	lea    rbx,[rip+0x1def9]        # 0x43a060
  41c167:	lea    rsi,[rip+0x1def2]        # 0x43a060
  41c16e:	cmp    rbx,rsi
  41c171:	je     0x41c152
  41c173:	mov    rax,QWORD PTR [rbx]
  41c176:	test   rax,rax
  41c179:	je     0x41c17d
  41c17b:	call   rax
  41c17d:	add    rbx,0x8
  41c181:	cmp    rbx,rsi
  41c184:	jne    0x41c173
  41c186:	mov    eax,0x1
  41c18b:	add    rsp,0x28
  41c18f:	pop    rbx
  41c190:	pop    rsi
  41c191:	ret    
  41c192:	call   0x41ce10
  41c197:	jmp    0x41c152
  41c199:	nop    DWORD PTR [rax+0x0]
  41c1a0:	xor    eax,eax
  41c1a2:	ret    
  41c1a3:	nop
  41c1a4:	nop
  41c1a5:	nop
  41c1a6:	nop
  41c1a7:	nop
  41c1a8:	nop
  41c1a9:	nop
  41c1aa:	nop
  41c1ab:	nop
  41c1ac:	nop
  41c1ad:	nop
  41c1ae:	nop
  41c1af:	nop
  41c1b0:	sub    rsp,0x58
  41c1b4:	mov    rax,QWORD PTR [rip+0x18b25]        # 0x434ce0
  41c1bb:	test   rax,rax
  41c1be:	je     0x41c1ec
  41c1c0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  41c1c9:	mov    DWORD PTR [rsp+0x20],ecx
  41c1cd:	lea    rcx,[rsp+0x20]
  41c1d2:	mov    QWORD PTR [rsp+0x28],rdx
  41c1d7:	movsd  QWORD PTR [rsp+0x30],xmm2
  41c1dd:	movsd  QWORD PTR [rsp+0x38],xmm3
  41c1e3:	movsd  QWORD PTR [rsp+0x40],xmm0
  41c1e9:	call   rax
  41c1eb:	nop
  41c1ec:	add    rsp,0x58
  41c1f0:	ret    
  41c1f1:	nop    DWORD PTR [rax+rax*1+0x0]
  41c1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c200:	mov    QWORD PTR [rip+0x18ad9],rcx        # 0x434ce0
  41c207:	jmp    0x422978
  41c20c:	nop    DWORD PTR [rax+0x0]
  41c210:	push   rsi
  41c211:	push   rbx
  41c212:	sub    rsp,0x78
  41c216:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41c21b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  41c220:	movaps XMMWORD PTR [rsp+0x60],xmm8
  41c226:	cmp    DWORD PTR [rcx],0x6
  41c229:	ja     0x41c300
  41c22f:	mov    edx,DWORD PTR [rcx]
  41c231:	lea    rax,[rip+0x10fdc]        # 0x42d214
  41c238:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41c23c:	add    rax,rdx
  41c23f:	jmp    rax
  41c241:	lea    rbx,[rip+0x10ea8]        # 0x42d0f0
  41c248:	nop    DWORD PTR [rax+rax*1+0x0]
  41c250:	movsd  xmm8,QWORD PTR [rcx+0x20]
  41c256:	mov    rsi,QWORD PTR [rcx+0x8]
  41c25a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41c25f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  41c264:	call   0x422990
  41c269:	movsd  QWORD PTR [rsp+0x30],xmm8
  41c270:	lea    rcx,[rax+0x60]
  41c274:	lea    rdx,[rip+0x10f6d]        # 0x42d1e8
  41c27b:	movsd  QWORD PTR [rsp+0x28],xmm7
  41c281:	mov    r9,rsi
  41c284:	mov    r8,rbx
  41c287:	movsd  QWORD PTR [rsp+0x20],xmm6
  41c28d:	call   0x422878
  41c292:	nop
  41c293:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  41c298:	xor    eax,eax
  41c29a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  41c29f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  41c2a5:	add    rsp,0x78
  41c2a9:	pop    rbx
  41c2aa:	pop    rsi
  41c2ab:	ret    
  41c2ac:	nop    DWORD PTR [rax+0x0]
  41c2b0:	lea    rbx,[rip+0x10e58]        # 0x42d10f
  41c2b7:	jmp    0x41c250
  41c2b9:	nop    DWORD PTR [rax+0x0]
  41c2c0:	lea    rbx,[rip+0x10e69]        # 0x42d130
  41c2c7:	jmp    0x41c250
  41c2c9:	nop    DWORD PTR [rax+0x0]
  41c2d0:	lea    rbx,[rip+0x10ec9]        # 0x42d1a0
  41c2d7:	jmp    0x41c250
  41c2dc:	nop    DWORD PTR [rax+0x0]
  41c2e0:	lea    rbx,[rip+0x10e91]        # 0x42d178
  41c2e7:	jmp    0x41c250
  41c2ec:	nop    DWORD PTR [rax+0x0]
  41c2f0:	lea    rbx,[rip+0x10e59]        # 0x42d150
  41c2f7:	jmp    0x41c250
  41c2fc:	nop    DWORD PTR [rax+0x0]
  41c300:	lea    rbx,[rip+0x10ecf]        # 0x42d1d6
  41c307:	jmp    0x41c250
  41c30c:	nop
  41c30d:	nop
  41c30e:	nop
  41c30f:	nop
  41c310:	fninit 
  41c312:	ret    
  41c313:	nop
  41c314:	nop
  41c315:	nop
  41c316:	nop
  41c317:	nop
  41c318:	nop
  41c319:	nop
  41c31a:	nop
  41c31b:	nop
  41c31c:	nop
  41c31d:	nop
  41c31e:	nop
  41c31f:	nop
  41c320:	mov    rax,rcx
  41c323:	ret    
  41c324:	xchg   ax,ax
  41c326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c330:	mov    rax,rcx
  41c333:	ret    
  41c334:	nop
  41c335:	nop
  41c336:	nop
  41c337:	nop
  41c338:	nop
  41c339:	nop
  41c33a:	nop
  41c33b:	nop
  41c33c:	nop
  41c33d:	nop
  41c33e:	nop
  41c33f:	nop
  41c340:	push   rsi
  41c341:	push   rbx
  41c342:	sub    rsp,0x38
  41c346:	lea    rax,[rsp+0x58]
  41c34b:	mov    rbx,rcx
  41c34e:	mov    QWORD PTR [rsp+0x58],rdx
  41c353:	mov    QWORD PTR [rsp+0x60],r8
  41c358:	mov    QWORD PTR [rsp+0x68],r9
  41c35d:	mov    QWORD PTR [rsp+0x28],rax
  41c362:	call   0x422990
  41c367:	lea    rcx,[rip+0x10ec2]        # 0x42d230
  41c36e:	lea    r9,[rax+0x60]
  41c372:	mov    r8d,0x1b
  41c378:	mov    edx,0x1
  41c37d:	call   0x422840
  41c382:	mov    rsi,QWORD PTR [rsp+0x28]
  41c387:	call   0x422990
  41c38c:	lea    rcx,[rax+0x60]
  41c390:	mov    rdx,rbx
  41c393:	mov    r8,rsi
  41c396:	call   0x422758
  41c39b:	call   0x4228c0
  41c3a0:	nop
  41c3a1:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c3b0:	push   r13
  41c3b2:	push   r12
  41c3b4:	push   rbp
  41c3b5:	push   rdi
  41c3b6:	push   rsi
  41c3b7:	push   rbx
  41c3b8:	sub    rsp,0x58
  41c3bc:	movsxd rbp,DWORD PTR [rip+0x18941]        # 0x434d04
  41c3c3:	mov    rbx,rcx
  41c3c6:	mov    rsi,rdx
  41c3c9:	mov    rdi,r8
  41c3cc:	test   ebp,ebp
  41c3ce:	jle    0x41c4ca
  41c3d4:	mov    rax,QWORD PTR [rip+0x1892d]        # 0x434d08
  41c3db:	xor    r9d,r9d
  41c3de:	add    rax,0x8
  41c3e2:	mov    r10,QWORD PTR [rax]
  41c3e5:	cmp    rbx,r10
  41c3e8:	jb     0x41c3fe
  41c3ea:	mov    rdx,QWORD PTR [rax+0x8]
  41c3ee:	mov    r11d,DWORD PTR [rdx+0x8]
  41c3f2:	add    r10,r11
  41c3f5:	cmp    rbx,r10
  41c3f8:	jb     0x41c4b0
  41c3fe:	add    r9d,0x1
  41c402:	add    rax,0x18
  41c406:	cmp    r9d,ebp
  41c409:	jne    0x41c3e2
  41c40b:	mov    rcx,rbx
  41c40e:	call   0x41d020
  41c413:	test   rax,rax
  41c416:	mov    r12,rax
  41c419:	je     0x41c502
  41c41f:	lea    rbp,[rbp+rbp*2+0x0]
  41c424:	shl    rbp,0x3
  41c428:	mov    r13,rbp
  41c42b:	add    r13,QWORD PTR [rip+0x188d6]        # 0x434d08
  41c432:	mov    QWORD PTR [r13+0x10],rax
  41c436:	mov    DWORD PTR [r13+0x0],0x0
  41c43e:	call   0x41d140
  41c443:	mov    edx,DWORD PTR [r12+0xc]
  41c448:	mov    r8d,0x30
  41c44e:	add    rax,rdx
  41c451:	lea    rdx,[rsp+0x20]
  41c456:	mov    QWORD PTR [r13+0x8],rax
  41c45a:	mov    rax,QWORD PTR [rip+0x188a7]        # 0x434d08
  41c461:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  41c466:	call   QWORD PTR [rip+0x1ac10]        # 0x43707c
  41c46c:	test   rax,rax
  41c46f:	je     0x41c4e5
  41c471:	mov    eax,DWORD PTR [rsp+0x44]
  41c475:	lea    edx,[rax-0x4]
  41c478:	and    edx,0xfffffffb
  41c47b:	je     0x41c4a9
  41c47d:	sub    eax,0x40
  41c480:	and    eax,0xffffffbf
  41c483:	je     0x41c4a9
  41c485:	mov    r9,rbp
  41c488:	add    r9,QWORD PTR [rip+0x18879]        # 0x434d08
  41c48f:	mov    r8d,0x40
  41c495:	mov    rdx,QWORD PTR [rsp+0x38]
  41c49a:	mov    rcx,QWORD PTR [rsp+0x20]
  41c49f:	call   QWORD PTR [rip+0x1abcf]        # 0x437074
  41c4a5:	test   eax,eax
  41c4a7:	je     0x41c4d1
  41c4a9:	add    DWORD PTR [rip+0x18854],0x1        # 0x434d04
  41c4b0:	mov    r8,rdi
  41c4b3:	mov    rdx,rsi
  41c4b6:	mov    rcx,rbx
  41c4b9:	add    rsp,0x58
  41c4bd:	pop    rbx
  41c4be:	pop    rsi
  41c4bf:	pop    rdi
  41c4c0:	pop    rbp
  41c4c1:	pop    r12
  41c4c3:	pop    r13
  41c4c5:	jmp    0x422810
  41c4ca:	xor    ebp,ebp
  41c4cc:	jmp    0x41c40b
  41c4d1:	call   QWORD PTR [rip+0x1aacd]        # 0x436fa4
  41c4d7:	lea    rcx,[rip+0x10dca]        # 0x42d2a8
  41c4de:	mov    edx,eax
  41c4e0:	call   0x41c340
  41c4e5:	mov    rax,QWORD PTR [rip+0x1881c]        # 0x434d08
  41c4ec:	mov    edx,DWORD PTR [r12+0x8]
  41c4f1:	lea    rcx,[rip+0x10d78]        # 0x42d270
  41c4f8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41c4fd:	call   0x41c340
  41c502:	lea    rcx,[rip+0x10d47]        # 0x42d250
  41c509:	mov    rdx,rbx
  41c50c:	call   0x41c340
  41c511:	nop
  41c512:	nop    DWORD PTR [rax+0x0]
  41c516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c520:	push   rbp
  41c521:	push   r14
  41c523:	push   r13
  41c525:	push   r12
  41c527:	push   rdi
  41c528:	push   rsi
  41c529:	push   rbx
  41c52a:	mov    rbp,rsp
  41c52d:	sub    rsp,0x60
  41c531:	mov    ebx,DWORD PTR [rip+0x187c9]        # 0x434d00
  41c537:	test   ebx,ebx
  41c539:	je     0x41c550
  41c53b:	mov    rsp,rbp
  41c53e:	pop    rbx
  41c53f:	pop    rsi
  41c540:	pop    rdi
  41c541:	pop    r12
  41c543:	pop    r13
  41c545:	pop    r14
  41c547:	pop    rbp
  41c548:	ret    
  41c549:	nop    DWORD PTR [rax+0x0]
  41c550:	mov    DWORD PTR [rip+0x187a6],0x1        # 0x434d00
  41c55a:	call   0x41d070
  41c55f:	cdqe   
  41c561:	lea    rax,[rax+rax*2]
  41c565:	lea    rax,[rax*8+0x1e]
  41c56d:	and    rax,0xfffffffffffffff0
  41c571:	call   0x41d290
  41c576:	mov    rsi,QWORD PTR [rip+0x11303]        # 0x42d880
  41c57d:	mov    rbx,QWORD PTR [rip+0x1130c]        # 0x42d890
  41c584:	sub    rsp,rax
  41c587:	mov    DWORD PTR [rip+0x18773],0x0        # 0x434d04
  41c591:	lea    rax,[rsp+0x20]
  41c596:	mov    QWORD PTR [rip+0x1876b],rax        # 0x434d08
  41c59d:	mov    rax,rsi
  41c5a0:	sub    rax,rbx
  41c5a3:	cmp    rax,0x7
  41c5a7:	jle    0x41c53b
  41c5a9:	cmp    rax,0xb
  41c5ad:	jle    0x41c5d5
  41c5af:	mov    r11d,DWORD PTR [rbx]
  41c5b2:	test   r11d,r11d
  41c5b5:	jne    0x41c700
  41c5bb:	mov    r10d,DWORD PTR [rbx+0x4]
  41c5bf:	test   r10d,r10d
  41c5c2:	jne    0x41c700
  41c5c8:	mov    r9d,DWORD PTR [rbx+0x8]
  41c5cc:	test   r9d,r9d
  41c5cf:	jne    0x41c5ec
  41c5d1:	add    rbx,0xc
  41c5d5:	mov    r8d,DWORD PTR [rbx]
  41c5d8:	test   r8d,r8d
  41c5db:	jne    0x41c700
  41c5e1:	mov    ecx,DWORD PTR [rbx+0x4]
  41c5e4:	test   ecx,ecx
  41c5e6:	jne    0x41c700
  41c5ec:	mov    edx,DWORD PTR [rbx+0x8]
  41c5ef:	cmp    edx,0x1
  41c5f2:	jne    0x41c80c
  41c5f8:	add    rbx,0xc
  41c5fc:	cmp    rbx,rsi
  41c5ff:	jae    0x41c53b
  41c605:	mov    r12,QWORD PTR [rip+0x112a4]        # 0x42d8b0
  41c60c:	lea    r13,[rbp-0x30]
  41c610:	movabs r14,0xffffffff00000000
  41c61a:	mov    ecx,DWORD PTR [rbx+0x4]
  41c61d:	mov    eax,DWORD PTR [rbx]
  41c61f:	movzx  edx,BYTE PTR [rbx+0x8]
  41c623:	add    rax,r12
  41c626:	add    rcx,r12
  41c629:	cmp    edx,0x10
  41c62c:	mov    r8,QWORD PTR [rax]
  41c62f:	je     0x41c776
  41c635:	jbe    0x41c73d
  41c63b:	cmp    edx,0x20
  41c63e:	je     0x41c7bf
  41c644:	cmp    edx,0x40
  41c647:	jne    0x41c7ab
  41c64d:	sub    r8,rax
  41c650:	mov    rdx,r13
  41c653:	mov    rdi,r13
  41c656:	mov    rax,r8
  41c659:	add    rax,QWORD PTR [rcx]
  41c65c:	mov    r8d,0x8
  41c662:	mov    QWORD PTR [rbp-0x30],rax
  41c666:	call   0x41c3b0
  41c66b:	add    rbx,0xc
  41c66f:	cmp    rbx,rsi
  41c672:	jb     0x41c61a
  41c674:	mov    eax,DWORD PTR [rip+0x1868a]        # 0x434d04
  41c67a:	xor    ebx,ebx
  41c67c:	xor    esi,esi
  41c67e:	test   eax,eax
  41c680:	jle    0x41c53b
  41c686:	mov    r14,QWORD PTR [rip+0x1a9ef]        # 0x43707c
  41c68d:	lea    r13,[rbp-0x34]
  41c691:	mov    r12,QWORD PTR [rip+0x1a9dc]        # 0x437074
  41c698:	jmp    0x41c6b3
  41c69a:	nop    WORD PTR [rax+rax*1+0x0]
  41c6a0:	add    esi,0x1
  41c6a3:	add    rbx,0x18
  41c6a7:	cmp    esi,DWORD PTR [rip+0x18657]        # 0x434d04
  41c6ad:	jge    0x41c53b
  41c6b3:	mov    rax,rbx
  41c6b6:	add    rax,QWORD PTR [rip+0x1864b]        # 0x434d08
  41c6bd:	mov    edx,DWORD PTR [rax]
  41c6bf:	test   edx,edx
  41c6c1:	je     0x41c6a0
  41c6c3:	mov    rcx,QWORD PTR [rax+0x8]
  41c6c7:	mov    r8d,0x30
  41c6cd:	mov    rdx,rdi
  41c6d0:	call   r14
  41c6d3:	test   rax,rax
  41c6d6:	je     0x41c7ee
  41c6dc:	mov    rax,QWORD PTR [rip+0x18625]        # 0x434d08
  41c6e3:	mov    r9,r13
  41c6e6:	mov    rdx,QWORD PTR [rbp-0x18]
  41c6ea:	mov    rcx,QWORD PTR [rbp-0x30]
  41c6ee:	mov    r8d,DWORD PTR [rax+rbx*1]
  41c6f2:	call   r12
  41c6f5:	jmp    0x41c6a0
  41c6f7:	nop    WORD PTR [rax+rax*1+0x0]
  41c700:	cmp    rbx,rsi
  41c703:	jae    0x41c53b
  41c709:	mov    r12,QWORD PTR [rip+0x111a0]        # 0x42d8b0
  41c710:	lea    rdi,[rbp-0x30]
  41c714:	mov    ecx,DWORD PTR [rbx+0x4]
  41c717:	mov    eax,DWORD PTR [rbx]
  41c719:	mov    r8d,0x4
  41c71f:	mov    rdx,rdi
  41c722:	add    rbx,0x8
  41c726:	add    rcx,r12
  41c729:	add    eax,DWORD PTR [rcx]
  41c72b:	mov    DWORD PTR [rbp-0x30],eax
  41c72e:	call   0x41c3b0
  41c733:	cmp    rbx,rsi
  41c736:	jb     0x41c714
  41c738:	jmp    0x41c674
  41c73d:	cmp    edx,0x8
  41c740:	jne    0x41c7ab
  41c742:	movzx  edx,BYTE PTR [rcx]
  41c745:	mov    rdi,r13
  41c748:	mov    r10,rdx
  41c74b:	or     r10,0xffffffffffffff00
  41c752:	test   dl,dl
  41c754:	cmovs  rdx,r10
  41c758:	sub    rdx,rax
  41c75b:	lea    rax,[r8+rdx*1]
  41c75f:	mov    r8d,0x1
  41c765:	mov    rdx,r13
  41c768:	mov    QWORD PTR [rbp-0x30],rax
  41c76c:	call   0x41c3b0
  41c771:	jmp    0x41c66b
  41c776:	movzx  edx,WORD PTR [rcx]
  41c779:	mov    rdi,r13
  41c77c:	mov    r10,rdx
  41c77f:	or     r10,0xffffffffffff0000
  41c786:	test   dx,dx
  41c789:	cmovs  rdx,r10
  41c78d:	sub    rdx,rax
  41c790:	lea    rax,[r8+rdx*1]
  41c794:	mov    r8d,0x2
  41c79a:	mov    rdx,r13
  41c79d:	mov    QWORD PTR [rbp-0x30],rax
  41c7a1:	call   0x41c3b0
  41c7a6:	jmp    0x41c66b
  41c7ab:	lea    rcx,[rip+0x10b56]        # 0x42d308
  41c7b2:	mov    QWORD PTR [rbp-0x30],0x0
  41c7ba:	call   0x41c340
  41c7bf:	mov    edx,DWORD PTR [rcx]
  41c7c1:	mov    rdi,r13
  41c7c4:	mov    r10,rdx
  41c7c7:	or     r10,r14
  41c7ca:	test   edx,edx
  41c7cc:	cmovs  rdx,r10
  41c7d0:	sub    rdx,rax
  41c7d3:	lea    rax,[r8+rdx*1]
  41c7d7:	mov    r8d,0x4
  41c7dd:	mov    rdx,r13
  41c7e0:	mov    QWORD PTR [rbp-0x30],rax
  41c7e4:	call   0x41c3b0
  41c7e9:	jmp    0x41c66b
  41c7ee:	add    rbx,QWORD PTR [rip+0x18513]        # 0x434d08
  41c7f5:	lea    rcx,[rip+0x10a74]        # 0x42d270
  41c7fc:	mov    rax,QWORD PTR [rbx+0x10]
  41c800:	mov    r8,QWORD PTR [rbx+0x8]
  41c804:	mov    edx,DWORD PTR [rax+0x8]
  41c807:	call   0x41c340
  41c80c:	lea    rcx,[rip+0x10abd]        # 0x42d2d0
  41c813:	call   0x41c340
  41c818:	nop
  41c819:	nop
  41c81a:	nop
  41c81b:	nop
  41c81c:	nop
  41c81d:	nop
  41c81e:	nop
  41c81f:	nop
  41c820:	sub    rsp,0x28
  41c824:	mov    eax,DWORD PTR [rcx]
  41c826:	cmp    eax,0xc0000091
  41c82b:	ja     0x41c890
  41c82d:	cmp    eax,0xc000008d
  41c832:	jae    0x41c8af
  41c834:	cmp    eax,0xc0000008
  41c839:	je     0x41c950
  41c83f:	ja     0x41c920
  41c845:	cmp    eax,0x80000002
  41c84a:	je     0x41c950
  41c850:	cmp    eax,0xc0000005
  41c855:	jne    0x41c92e
  41c85b:	xor    edx,edx
  41c85d:	mov    ecx,0xb
  41c862:	call   0x4227d8
  41c867:	cmp    rax,0x1
  41c86b:	je     0x41c9b0
  41c871:	test   rax,rax
  41c874:	je     0x41c990
  41c87a:	mov    ecx,0xb
  41c87f:	call   rax
  41c881:	xor    eax,eax
  41c883:	add    rsp,0x28
  41c887:	ret    
  41c888:	nop    DWORD PTR [rax+rax*1+0x0]
  41c890:	cmp    eax,0xc0000094
  41c895:	je     0x41c960
  41c89b:	ja     0x41c8e0
  41c89d:	cmp    eax,0xc0000092
  41c8a2:	je     0x41c950
  41c8a8:	cmp    eax,0xc0000093
  41c8ad:	jne    0x41c92e
  41c8af:	xor    edx,edx
  41c8b1:	mov    ecx,0x8
  41c8b6:	call   0x4227d8
  41c8bb:	cmp    rax,0x1
  41c8bf:	mov    rdx,rax
  41c8c2:	je     0x41c938
  41c8c4:	test   rdx,rdx
  41c8c7:	mov    eax,0x1
  41c8cc:	je     0x41c883
  41c8ce:	mov    ecx,0x8
  41c8d3:	call   rdx
  41c8d5:	xor    eax,eax
  41c8d7:	add    rsp,0x28
  41c8db:	ret    
  41c8dc:	nop    DWORD PTR [rax+0x0]
  41c8e0:	cmp    eax,0xc0000095
  41c8e5:	je     0x41c950
  41c8e7:	cmp    eax,0xc0000096
  41c8ec:	jne    0x41c92e
  41c8ee:	xor    edx,edx
  41c8f0:	mov    ecx,0x4
  41c8f5:	call   0x4227d8
  41c8fa:	cmp    rax,0x1
  41c8fe:	je     0x41c99a
  41c904:	test   rax,rax
  41c907:	je     0x41c990
  41c90d:	mov    ecx,0x4
  41c912:	call   rax
  41c914:	xor    eax,eax
  41c916:	jmp    0x41c883
  41c91b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c920:	cmp    eax,0xc000001d
  41c925:	je     0x41c8ee
  41c927:	cmp    eax,0xc000008c
  41c92c:	je     0x41c950
  41c92e:	mov    eax,0x1
  41c933:	add    rsp,0x28
  41c937:	ret    
  41c938:	mov    edx,0x1
  41c93d:	mov    ecx,0x8
  41c942:	call   0x4227d8
  41c947:	call   0x41c310
  41c94c:	nop    DWORD PTR [rax+0x0]
  41c950:	xor    eax,eax
  41c952:	add    rsp,0x28
  41c956:	ret    
  41c957:	nop    WORD PTR [rax+rax*1+0x0]
  41c960:	xor    edx,edx
  41c962:	mov    ecx,0x8
  41c967:	call   0x4227d8
  41c96c:	cmp    rax,0x1
  41c970:	mov    rdx,rax
  41c973:	jne    0x41c8c4
  41c979:	mov    edx,0x1
  41c97e:	mov    ecx,0x8
  41c983:	call   0x4227d8
  41c988:	xor    eax,eax
  41c98a:	jmp    0x41c883
  41c98f:	nop
  41c990:	mov    eax,0x4
  41c995:	add    rsp,0x28
  41c999:	ret    
  41c99a:	mov    edx,0x1
  41c99f:	mov    ecx,0x4
  41c9a4:	call   0x4227d8
  41c9a9:	xor    eax,eax
  41c9ab:	jmp    0x41c883
  41c9b0:	mov    edx,0x1
  41c9b5:	mov    ecx,0xb
  41c9ba:	call   0x4227d8
  41c9bf:	xor    eax,eax
  41c9c1:	jmp    0x41c883
  41c9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c9d0:	push   r12
  41c9d2:	push   rbp
  41c9d3:	push   rdi
  41c9d4:	push   rsi
  41c9d5:	push   rbx
  41c9d6:	sub    rsp,0x20
  41c9da:	call   0x41d140
  41c9df:	mov    rbp,rax
  41c9e2:	mov    eax,DWORD PTR [rip+0x18360]        # 0x434d48
  41c9e8:	test   eax,eax
  41c9ea:	jne    0x41ca11
  41c9ec:	test   rbp,rbp
  41c9ef:	je     0x41ca11
  41c9f1:	lea    rcx,[rip+0x10948]        # 0x42d340
  41c9f8:	mov    DWORD PTR [rip+0x18346],0x1        # 0x434d48
  41ca02:	call   0x41cf80
  41ca07:	test   rax,rax
  41ca0a:	je     0x41ca20
  41ca0c:	mov    eax,0x1
  41ca11:	add    rsp,0x20
  41ca15:	pop    rbx
  41ca16:	pop    rsi
  41ca17:	pop    rdi
  41ca18:	pop    rbp
  41ca19:	pop    r12
  41ca1b:	ret    
  41ca1c:	nop    DWORD PTR [rax+0x0]
  41ca20:	lea    rbx,[rip+0x18459]        # 0x434e80
  41ca27:	mov    ecx,0x30
  41ca2c:	lea    rdx,[rip+0x1834d]        # 0x434d80
  41ca33:	lea    r12,[rip+0xfffffffffffffde6]        # 0x41c820
  41ca3a:	xor    esi,esi
  41ca3c:	mov    rdi,rbx
  41ca3f:	rep stos QWORD PTR es:[rdi],rax
  41ca42:	mov    rdi,rdx
  41ca45:	sub    r12,rbp
  41ca48:	mov    cl,0x20
  41ca4a:	rep stos QWORD PTR es:[rdi],rax
  41ca4d:	mov    rdi,rdx
  41ca50:	jmp    0x41ca80
  41ca52:	mov    BYTE PTR [rdi],0x9
  41ca55:	mov    DWORD PTR [rdi+0x4],r12d
  41ca59:	add    rsi,0x1
  41ca5d:	mov    edx,DWORD PTR [rax+0xc]
  41ca60:	add    rbx,0xc
  41ca64:	mov    DWORD PTR [rbx-0xc],edx
  41ca67:	add    edx,DWORD PTR [rax+0x8]
  41ca6a:	mov    rax,rdi
  41ca6d:	sub    rax,rbp
  41ca70:	add    rdi,0x8
  41ca74:	mov    DWORD PTR [rbx-0x4],eax
  41ca77:	mov    DWORD PTR [rbx-0x8],edx
  41ca7a:	cmp    rsi,0x20
  41ca7e:	je     0x41cab5
  41ca80:	mov    rcx,rsi
  41ca83:	call   0x41d0b0
  41ca88:	test   rax,rax
  41ca8b:	jne    0x41ca52
  41ca8d:	test   rsi,rsi
  41ca90:	je     0x41ca0c
  41ca96:	mov    edx,esi
  41ca98:	nop    DWORD PTR [rax+rax*1+0x0]
  41caa0:	mov    r8,rbp
  41caa3:	lea    rcx,[rip+0x183d6]        # 0x434e80
  41caaa:	call   QWORD PTR [rip+0x1a574]        # 0x437024
  41cab0:	jmp    0x41ca0c
  41cab5:	mov    edx,0x20
  41caba:	jmp    0x41caa0
  41cabc:	nop    DWORD PTR [rax+0x0]
  41cac0:	push   rbx
  41cac1:	sub    rsp,0x20
  41cac5:	mov    rdx,QWORD PTR [rcx]
  41cac8:	mov    eax,DWORD PTR [rdx]
  41caca:	mov    r8d,eax
  41cacd:	and    r8d,0x20ffffff
  41cad4:	cmp    r8d,0x20474343
  41cadb:	je     0x41cbe0
  41cae1:	cmp    eax,0xc0000091
  41cae6:	mov    rbx,rcx
  41cae9:	ja     0x41cb70
  41caef:	cmp    eax,0xc000008d
  41caf4:	jae    0x41cb87
  41cafa:	cmp    eax,0xc0000008
  41caff:	je     0x41cb33
  41cb01:	ja     0x41cb40
  41cb03:	cmp    eax,0x80000002
  41cb08:	je     0x41cb33
  41cb0a:	cmp    eax,0xc0000005
  41cb0f:	jne    0x41cb52
  41cb11:	xor    edx,edx
  41cb13:	mov    ecx,0xb
  41cb18:	call   0x4227d8
  41cb1d:	cmp    rax,0x1
  41cb21:	je     0x41cc50
  41cb27:	test   rax,rax
  41cb2a:	je     0x41cb52
  41cb2c:	mov    ecx,0xb
  41cb31:	call   rax
  41cb33:	mov    eax,0xffffffff
  41cb38:	add    rsp,0x20
  41cb3c:	pop    rbx
  41cb3d:	ret    
  41cb3e:	xchg   ax,ax
  41cb40:	cmp    eax,0xc000001d
  41cb45:	je     0x41cc06
  41cb4b:	cmp    eax,0xc000008c
  41cb50:	je     0x41cb33
  41cb52:	mov    rax,QWORD PTR [rip+0x181e7]        # 0x434d40
  41cb59:	test   rax,rax
  41cb5c:	je     0x41cb38
  41cb5e:	mov    rcx,rbx
  41cb61:	add    rsp,0x20
  41cb65:	pop    rbx
  41cb66:	rex.W jmp rax
  41cb69:	nop    DWORD PTR [rax+0x0]
  41cb70:	cmp    eax,0xc0000094
  41cb75:	je     0x41cbb2
  41cb77:	ja     0x41cbf0
  41cb79:	cmp    eax,0xc0000092
  41cb7e:	je     0x41cb33
  41cb80:	cmp    eax,0xc0000093
  41cb85:	jne    0x41cb52
  41cb87:	xor    edx,edx
  41cb89:	mov    ecx,0x8
  41cb8e:	call   0x4227d8
  41cb93:	cmp    rax,0x1
  41cb97:	jne    0x41cbc4
  41cb99:	mov    edx,0x1
  41cb9e:	mov    ecx,0x8
  41cba3:	call   0x4227d8
  41cba8:	call   0x41c310
  41cbad:	jmp    0x41cb33
  41cbb2:	xor    edx,edx
  41cbb4:	mov    ecx,0x8
  41cbb9:	call   0x4227d8
  41cbbe:	cmp    rax,0x1
  41cbc2:	je     0x41cc32
  41cbc4:	test   rax,rax
  41cbc7:	je     0x41cb52
  41cbc9:	mov    ecx,0x8
  41cbce:	call   rax
  41cbd0:	mov    eax,0xffffffff
  41cbd5:	jmp    0x41cb38
  41cbda:	nop    WORD PTR [rax+rax*1+0x0]
  41cbe0:	test   BYTE PTR [rdx+0x4],0x1
  41cbe4:	jne    0x41cae1
  41cbea:	jmp    0x41cb33
  41cbef:	nop
  41cbf0:	cmp    eax,0xc0000095
  41cbf5:	je     0x41cb33
  41cbfb:	cmp    eax,0xc0000096
  41cc00:	jne    0x41cb52
  41cc06:	xor    edx,edx
  41cc08:	mov    ecx,0x4
  41cc0d:	call   0x4227d8
  41cc12:	cmp    rax,0x1
  41cc16:	je     0x41cc64
  41cc18:	test   rax,rax
  41cc1b:	je     0x41cb52
  41cc21:	mov    ecx,0x4
  41cc26:	call   rax
  41cc28:	mov    eax,0xffffffff
  41cc2d:	jmp    0x41cb38
  41cc32:	mov    edx,0x1
  41cc37:	mov    ecx,0x8
  41cc3c:	call   0x4227d8
  41cc41:	jmp    0x41cb33
  41cc46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc50:	mov    edx,0x1
  41cc55:	mov    ecx,0xb
  41cc5a:	call   0x4227d8
  41cc5f:	jmp    0x41cb33
  41cc64:	mov    edx,0x1
  41cc69:	mov    ecx,0x4
  41cc6e:	call   0x4227d8
  41cc73:	jmp    0x41cb33
  41cc78:	nop
  41cc79:	nop
  41cc7a:	nop
  41cc7b:	nop
  41cc7c:	nop
  41cc7d:	nop
  41cc7e:	nop
  41cc7f:	nop
  41cc80:	push   rbp
  41cc81:	push   rdi
  41cc82:	push   rsi
  41cc83:	push   rbx
  41cc84:	sub    rsp,0x28
  41cc88:	lea    rcx,[rip+0x18391]        # 0x435020
  41cc8f:	call   QWORD PTR [rip+0x1a2cf]        # 0x436f64
  41cc95:	mov    rbx,QWORD PTR [rip+0x18364]        # 0x435000
  41cc9c:	test   rbx,rbx
  41cc9f:	je     0x41ccd4
  41cca1:	mov    rbp,QWORD PTR [rip+0x1a3bc]        # 0x437064
  41cca8:	mov    rdi,QWORD PTR [rip+0x1a2f5]        # 0x436fa4
  41ccaf:	nop
  41ccb0:	mov    ecx,DWORD PTR [rbx]
  41ccb2:	call   rbp
  41ccb4:	mov    rsi,rax
  41ccb7:	call   rdi
  41ccb9:	test   eax,eax
  41ccbb:	jne    0x41cccb
  41ccbd:	test   rsi,rsi
  41ccc0:	je     0x41cccb
  41ccc2:	mov    rax,QWORD PTR [rbx+0x8]
  41ccc6:	mov    rcx,rsi
  41ccc9:	call   rax
  41cccb:	mov    rbx,QWORD PTR [rbx+0x10]
  41cccf:	test   rbx,rbx
  41ccd2:	jne    0x41ccb0
  41ccd4:	mov    rax,QWORD PTR [rip+0x1a321]        # 0x436ffc
  41ccdb:	lea    rcx,[rip+0x1833e]        # 0x435020
  41cce2:	add    rsp,0x28
  41cce6:	pop    rbx
  41cce7:	pop    rsi
  41cce8:	pop    rdi
  41cce9:	pop    rbp
  41ccea:	rex.W jmp rax
  41cced:	nop    DWORD PTR [rax]
  41ccf0:	push   rdi
  41ccf1:	push   rsi
  41ccf2:	push   rbx
  41ccf3:	sub    rsp,0x20
  41ccf7:	mov    eax,DWORD PTR [rip+0x1830b]        # 0x435008
  41ccfd:	test   eax,eax
  41ccff:	jne    0x41cd10
  41cd01:	add    rsp,0x20
  41cd05:	pop    rbx
  41cd06:	pop    rsi
  41cd07:	pop    rdi
  41cd08:	ret    
  41cd09:	nop    DWORD PTR [rax+0x0]
  41cd10:	mov    rsi,rdx
  41cd13:	mov    edi,ecx
  41cd15:	mov    edx,0x18
  41cd1a:	mov    ecx,0x1
  41cd1f:	call   0x4228b0
  41cd24:	test   rax,rax
  41cd27:	mov    rbx,rax
  41cd2a:	je     0x41cd68
  41cd2c:	mov    DWORD PTR [rax],edi
  41cd2e:	mov    QWORD PTR [rax+0x8],rsi
  41cd32:	lea    rcx,[rip+0x182e7]        # 0x435020
  41cd39:	call   QWORD PTR [rip+0x1a225]        # 0x436f64
  41cd3f:	mov    rax,QWORD PTR [rip+0x182ba]        # 0x435000
  41cd46:	lea    rcx,[rip+0x182d3]        # 0x435020
  41cd4d:	mov    QWORD PTR [rip+0x182ac],rbx        # 0x435000
  41cd54:	mov    QWORD PTR [rbx+0x10],rax
  41cd58:	call   QWORD PTR [rip+0x1a29e]        # 0x436ffc
  41cd5e:	xor    eax,eax
  41cd60:	add    rsp,0x20
  41cd64:	pop    rbx
  41cd65:	pop    rsi
  41cd66:	pop    rdi
  41cd67:	ret    
  41cd68:	mov    eax,0xffffffff
  41cd6d:	jmp    0x41cd01
  41cd6f:	nop
  41cd70:	push   rbx
  41cd71:	sub    rsp,0x20
  41cd75:	mov    eax,DWORD PTR [rip+0x1828d]        # 0x435008
  41cd7b:	test   eax,eax
  41cd7d:	jne    0x41cd90
  41cd7f:	xor    eax,eax
  41cd81:	add    rsp,0x20
  41cd85:	pop    rbx
  41cd86:	ret    
  41cd87:	nop    WORD PTR [rax+rax*1+0x0]
  41cd90:	mov    ebx,ecx
  41cd92:	lea    rcx,[rip+0x18287]        # 0x435020
  41cd99:	call   QWORD PTR [rip+0x1a1c5]        # 0x436f64
  41cd9f:	mov    rdx,QWORD PTR [rip+0x1825a]        # 0x435000
  41cda6:	test   rdx,rdx
  41cda9:	je     0x41cdc7
  41cdab:	mov    eax,DWORD PTR [rdx]
  41cdad:	cmp    eax,ebx
  41cdaf:	jne    0x41cdbe
  41cdb1:	jmp    0x41cdff
  41cdb3:	mov    r8d,DWORD PTR [rax]
  41cdb6:	cmp    r8d,ebx
  41cdb9:	je     0x41cde0
  41cdbb:	mov    rdx,rax
  41cdbe:	mov    rax,QWORD PTR [rdx+0x10]
  41cdc2:	test   rax,rax
  41cdc5:	jne    0x41cdb3
  41cdc7:	lea    rcx,[rip+0x18252]        # 0x435020
  41cdce:	call   QWORD PTR [rip+0x1a228]        # 0x436ffc
  41cdd4:	xor    eax,eax
  41cdd6:	add    rsp,0x20
  41cdda:	pop    rbx
  41cddb:	ret    
  41cddc:	nop    DWORD PTR [rax+0x0]
  41cde0:	mov    rcx,rax
  41cde3:	mov    rax,QWORD PTR [rax+0x10]
  41cde7:	mov    QWORD PTR [rdx+0x10],rax
  41cdeb:	call   0x422858
  41cdf0:	lea    rcx,[rip+0x18229]        # 0x435020
  41cdf7:	call   QWORD PTR [rip+0x1a1ff]        # 0x436ffc
  41cdfd:	jmp    0x41cdd4
  41cdff:	mov    rax,QWORD PTR [rdx+0x10]
  41ce03:	mov    rcx,rdx
  41ce06:	mov    QWORD PTR [rip+0x181f3],rax        # 0x435000
  41ce0d:	jmp    0x41cdeb
  41ce0f:	nop
  41ce10:	push   rbx
  41ce11:	sub    rsp,0x20
  41ce15:	cmp    edx,0x1
  41ce18:	je     0x41ceb0
  41ce1e:	jb     0x41ce50
  41ce20:	cmp    edx,0x2
  41ce23:	je     0x41ce40
  41ce25:	cmp    edx,0x3
  41ce28:	jne    0x41ce45
  41ce2a:	mov    eax,DWORD PTR [rip+0x181d8]        # 0x435008
  41ce30:	test   eax,eax
  41ce32:	je     0x41ce45
  41ce34:	call   0x41cc80
  41ce39:	jmp    0x41ce45
  41ce3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ce40:	call   0x41c310
  41ce45:	mov    eax,0x1
  41ce4a:	add    rsp,0x20
  41ce4e:	pop    rbx
  41ce4f:	ret    
  41ce50:	mov    eax,DWORD PTR [rip+0x181b2]        # 0x435008
  41ce56:	test   eax,eax
  41ce58:	jne    0x41cee0
  41ce5e:	mov    eax,DWORD PTR [rip+0x181a4]        # 0x435008
  41ce64:	cmp    eax,0x1
  41ce67:	jne    0x41ce45
  41ce69:	mov    rcx,QWORD PTR [rip+0x18190]        # 0x435000
  41ce70:	test   rcx,rcx
  41ce73:	je     0x41ce86
  41ce75:	mov    rbx,QWORD PTR [rcx+0x10]
  41ce79:	call   0x422858
  41ce7e:	test   rbx,rbx
  41ce81:	mov    rcx,rbx
  41ce84:	jne    0x41ce75
  41ce86:	lea    rcx,[rip+0x18193]        # 0x435020
  41ce8d:	mov    QWORD PTR [rip+0x18168],0x0        # 0x435000
  41ce98:	mov    DWORD PTR [rip+0x18166],0x0        # 0x435008
  41cea2:	call   QWORD PTR [rip+0x1a0b4]        # 0x436f5c
  41cea8:	jmp    0x41ce45
  41ceaa:	nop    WORD PTR [rax+rax*1+0x0]
  41ceb0:	mov    eax,DWORD PTR [rip+0x18152]        # 0x435008
  41ceb6:	test   eax,eax
  41ceb8:	je     0x41ced0
  41ceba:	mov    eax,0x1
  41cebf:	mov    DWORD PTR [rip+0x1813f],0x1        # 0x435008
  41cec9:	add    rsp,0x20
  41cecd:	pop    rbx
  41cece:	ret    
  41cecf:	nop
  41ced0:	lea    rcx,[rip+0x18149]        # 0x435020
  41ced7:	call   QWORD PTR [rip+0x1a10f]        # 0x436fec
  41cedd:	jmp    0x41ceba
  41cedf:	nop
  41cee0:	call   0x41cc80
  41cee5:	jmp    0x41ce5e
  41ceea:	nop
  41ceeb:	nop
  41ceec:	nop
  41ceed:	nop
  41ceee:	nop
  41ceef:	nop
  41cef0:	movsxd rax,DWORD PTR [rcx+0x3c]
  41cef4:	add    rcx,rax
  41cef7:	xor    eax,eax
  41cef9:	cmp    DWORD PTR [rcx],0x4550
  41ceff:	je     0x41cf03
  41cf01:	repz ret 
  41cf03:	xor    eax,eax
  41cf05:	cmp    WORD PTR [rcx+0x18],0x20b
  41cf0b:	sete   al
  41cf0e:	ret    
  41cf0f:	nop
  41cf10:	cmp    WORD PTR [rcx],0x5a4d
  41cf15:	je     0x41cf20
  41cf17:	xor    eax,eax
  41cf19:	ret    
  41cf1a:	nop    WORD PTR [rax+rax*1+0x0]
  41cf20:	jmp    0x41cef0
  41cf22:	nop    DWORD PTR [rax+0x0]
  41cf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf30:	movsxd rax,DWORD PTR [rcx+0x3c]
  41cf34:	add    rcx,rax
  41cf37:	movzx  eax,WORD PTR [rcx+0x14]
  41cf3b:	lea    rax,[rcx+rax*1+0x18]
  41cf40:	movzx  ecx,WORD PTR [rcx+0x6]
  41cf44:	test   ecx,ecx
  41cf46:	je     0x41cf71
  41cf48:	sub    ecx,0x1
  41cf4b:	lea    rcx,[rcx+rcx*4]
  41cf4f:	lea    r9,[rax+rcx*8+0x28]
  41cf54:	mov    r8d,DWORD PTR [rax+0xc]
  41cf58:	cmp    r8,rdx
  41cf5b:	mov    rcx,r8
  41cf5e:	ja     0x41cf68
  41cf60:	add    ecx,DWORD PTR [rax+0x8]
  41cf63:	cmp    rdx,rcx
  41cf66:	jb     0x41cf73
  41cf68:	add    rax,0x28
  41cf6c:	cmp    rax,r9
  41cf6f:	jne    0x41cf54
  41cf71:	xor    eax,eax
  41cf73:	repz ret 
  41cf75:	nop
  41cf76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf80:	push   rdi
  41cf81:	push   rsi
  41cf82:	push   rbx
  41cf83:	sub    rsp,0x20
  41cf87:	mov    rsi,rcx
  41cf8a:	call   0x4227a8
  41cf8f:	cmp    rax,0x8
  41cf93:	ja     0x41cfb0
  41cf95:	mov    rbx,QWORD PTR [rip+0x10914]        # 0x42d8b0
  41cf9c:	xor    edi,edi
  41cf9e:	cmp    WORD PTR [rbx],0x5a4d
  41cfa3:	je     0x41cfc0
  41cfa5:	mov    rax,rdi
  41cfa8:	add    rsp,0x20
  41cfac:	pop    rbx
  41cfad:	pop    rsi
  41cfae:	pop    rdi
  41cfaf:	ret    
  41cfb0:	xor    edi,edi
  41cfb2:	mov    rax,rdi
  41cfb5:	add    rsp,0x20
  41cfb9:	pop    rbx
  41cfba:	pop    rsi
  41cfbb:	pop    rdi
  41cfbc:	ret    
  41cfbd:	nop    DWORD PTR [rax]
  41cfc0:	mov    rcx,rbx
  41cfc3:	call   0x41cef0
  41cfc8:	test   eax,eax
  41cfca:	je     0x41cfa5
  41cfcc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  41cfd0:	add    rdx,rbx
  41cfd3:	movzx  eax,WORD PTR [rdx+0x14]
  41cfd7:	lea    rbx,[rdx+rax*1+0x18]
  41cfdc:	movzx  eax,WORD PTR [rdx+0x6]
  41cfe0:	test   eax,eax
  41cfe2:	je     0x41cfa5
  41cfe4:	sub    eax,0x1
  41cfe7:	lea    rax,[rax+rax*4]
  41cfeb:	lea    rdi,[rbx+rax*8+0x28]
  41cff0:	jmp    0x41cffb
  41cff2:	add    rbx,0x28
  41cff6:	cmp    rbx,rdi
  41cff9:	je     0x41cfb0
  41cffb:	mov    r8d,0x8
  41d001:	mov    rdx,rsi
  41d004:	mov    rcx,rbx
  41d007:	call   0x4227a0
  41d00c:	test   eax,eax
  41d00e:	jne    0x41cff2
  41d010:	mov    rdi,rbx
  41d013:	mov    rax,rdi
  41d016:	add    rsp,0x20
  41d01a:	pop    rbx
  41d01b:	pop    rsi
  41d01c:	pop    rdi
  41d01d:	ret    
  41d01e:	xchg   ax,ax
  41d020:	push   rsi
  41d021:	push   rbx
  41d022:	sub    rsp,0x28
  41d026:	mov    rbx,QWORD PTR [rip+0x10883]        # 0x42d8b0
  41d02d:	cmp    WORD PTR [rbx],0x5a4d
  41d032:	je     0x41d040
  41d034:	xor    eax,eax
  41d036:	add    rsp,0x28
  41d03a:	pop    rbx
  41d03b:	pop    rsi
  41d03c:	ret    
  41d03d:	nop    DWORD PTR [rax]
  41d040:	mov    rsi,rcx
  41d043:	mov    rcx,rbx
  41d046:	call   0x41cef0
  41d04b:	test   eax,eax
  41d04d:	je     0x41d034
  41d04f:	sub    rsi,rbx
  41d052:	mov    rcx,rbx
  41d055:	mov    rdx,rsi
  41d058:	add    rsp,0x28
  41d05c:	pop    rbx
  41d05d:	pop    rsi
  41d05e:	jmp    0x41cf30
  41d063:	nop    DWORD PTR [rax]
  41d066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d070:	push   rbx
  41d071:	sub    rsp,0x20
  41d075:	mov    rbx,QWORD PTR [rip+0x10834]        # 0x42d8b0
  41d07c:	xor    eax,eax
  41d07e:	cmp    WORD PTR [rbx],0x5a4d
  41d083:	je     0x41d090
  41d085:	add    rsp,0x20
  41d089:	pop    rbx
  41d08a:	ret    
  41d08b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d090:	mov    rcx,rbx
  41d093:	call   0x41cef0
  41d098:	test   eax,eax
  41d09a:	je     0x41d085
  41d09c:	movsxd rax,DWORD PTR [rbx+0x3c]
  41d0a0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  41d0a5:	add    rsp,0x20
  41d0a9:	pop    rbx
  41d0aa:	ret    
  41d0ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41d0b0:	push   rdi
  41d0b1:	push   rsi
  41d0b2:	push   rbx
  41d0b3:	sub    rsp,0x20
  41d0b7:	mov    rsi,QWORD PTR [rip+0x107f2]        # 0x42d8b0
  41d0be:	xor    edi,edi
  41d0c0:	mov    rbx,rcx
  41d0c3:	cmp    WORD PTR [rsi],0x5a4d
  41d0c8:	je     0x41d0d5
  41d0ca:	mov    rax,rdi
  41d0cd:	add    rsp,0x20
  41d0d1:	pop    rbx
  41d0d2:	pop    rsi
  41d0d3:	pop    rdi
  41d0d4:	ret    
  41d0d5:	mov    rcx,rsi
  41d0d8:	call   0x41cef0
  41d0dd:	test   eax,eax
  41d0df:	je     0x41d0ca
  41d0e1:	movsxd rax,DWORD PTR [rsi+0x3c]
  41d0e5:	add    rsi,rax
  41d0e8:	movzx  eax,WORD PTR [rsi+0x14]
  41d0ec:	lea    rdx,[rsi+rax*1+0x18]
  41d0f1:	movzx  eax,WORD PTR [rsi+0x6]
  41d0f5:	test   eax,eax
  41d0f7:	je     0x41d0ca
  41d0f9:	sub    eax,0x1
  41d0fc:	lea    rax,[rax+rax*4]
  41d100:	lea    rax,[rdx+rax*8+0x28]
  41d105:	test   BYTE PTR [rdx+0x27],0x20
  41d109:	je     0x41d114
  41d10b:	test   rbx,rbx
  41d10e:	je     0x41d130
  41d110:	sub    rbx,0x1
  41d114:	add    rdx,0x28
  41d118:	cmp    rdx,rax
  41d11b:	jne    0x41d105
  41d11d:	xor    edi,edi
  41d11f:	mov    rax,rdi
  41d122:	add    rsp,0x20
  41d126:	pop    rbx
  41d127:	pop    rsi
  41d128:	pop    rdi
  41d129:	ret    
  41d12a:	nop    WORD PTR [rax+rax*1+0x0]
  41d130:	mov    rdi,rdx
  41d133:	mov    rax,rdi
  41d136:	add    rsp,0x20
  41d13a:	pop    rbx
  41d13b:	pop    rsi
  41d13c:	pop    rdi
  41d13d:	ret    
  41d13e:	xchg   ax,ax
  41d140:	push   rsi
  41d141:	push   rbx
  41d142:	sub    rsp,0x28
  41d146:	mov    rsi,QWORD PTR [rip+0x10763]        # 0x42d8b0
  41d14d:	xor    ebx,ebx
  41d14f:	cmp    WORD PTR [rsi],0x5a4d
  41d154:	je     0x41d160
  41d156:	mov    rax,rbx
  41d159:	add    rsp,0x28
  41d15d:	pop    rbx
  41d15e:	pop    rsi
  41d15f:	ret    
  41d160:	mov    rcx,rsi
  41d163:	call   0x41cef0
  41d168:	test   eax,eax
  41d16a:	cmovne rbx,rsi
  41d16e:	mov    rax,rbx
  41d171:	add    rsp,0x28
  41d175:	pop    rbx
  41d176:	pop    rsi
  41d177:	ret    
  41d178:	nop    DWORD PTR [rax+rax*1+0x0]
  41d180:	push   rsi
  41d181:	push   rbx
  41d182:	sub    rsp,0x28
  41d186:	mov    rbx,QWORD PTR [rip+0x10723]        # 0x42d8b0
  41d18d:	xor    eax,eax
  41d18f:	cmp    WORD PTR [rbx],0x5a4d
  41d194:	je     0x41d1a0
  41d196:	add    rsp,0x28
  41d19a:	pop    rbx
  41d19b:	pop    rsi
  41d19c:	ret    
  41d19d:	nop    DWORD PTR [rax]
  41d1a0:	mov    rsi,rcx
  41d1a3:	mov    rcx,rbx
  41d1a6:	call   0x41cef0
  41d1ab:	test   eax,eax
  41d1ad:	je     0x41d196
  41d1af:	sub    rsi,rbx
  41d1b2:	mov    rcx,rbx
  41d1b5:	mov    rdx,rsi
  41d1b8:	call   0x41cf30
  41d1bd:	test   rax,rax
  41d1c0:	je     0x41d1d1
  41d1c2:	mov    eax,DWORD PTR [rax+0x24]
  41d1c5:	not    eax
  41d1c7:	shr    eax,0x1f
  41d1ca:	add    rsp,0x28
  41d1ce:	pop    rbx
  41d1cf:	pop    rsi
  41d1d0:	ret    
  41d1d1:	xor    eax,eax
  41d1d3:	jmp    0x41d196
  41d1d5:	nop
  41d1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1e0:	push   rbp
  41d1e1:	push   rdi
  41d1e2:	push   rsi
  41d1e3:	push   rbx
  41d1e4:	sub    rsp,0x28
  41d1e8:	mov    rdi,QWORD PTR [rip+0x106c1]        # 0x42d8b0
  41d1ef:	xor    ebp,ebp
  41d1f1:	mov    esi,ecx
  41d1f3:	cmp    WORD PTR [rdi],0x5a4d
  41d1f8:	je     0x41d210
  41d1fa:	mov    rax,rbp
  41d1fd:	add    rsp,0x28
  41d201:	pop    rbx
  41d202:	pop    rsi
  41d203:	pop    rdi
  41d204:	pop    rbp
  41d205:	ret    
  41d206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d210:	mov    rcx,rdi
  41d213:	call   0x41cef0
  41d218:	test   eax,eax
  41d21a:	je     0x41d1fa
  41d21c:	movsxd rax,DWORD PTR [rdi+0x3c]
  41d220:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  41d227:	test   edx,edx
  41d229:	je     0x41d1fa
  41d22b:	mov    ebx,edx
  41d22d:	mov    rcx,rdi
  41d230:	mov    rdx,rbx
  41d233:	call   0x41cf30
  41d238:	test   rax,rax
  41d23b:	je     0x41d1fa
  41d23d:	add    rbx,rdi
  41d240:	mov    rdx,rbx
  41d243:	jne    0x41d257
  41d245:	jmp    0x41d1fa
  41d247:	nop    WORD PTR [rax+rax*1+0x0]
  41d250:	sub    esi,0x1
  41d253:	add    rdx,0x14
  41d257:	mov    ecx,DWORD PTR [rdx+0x4]
  41d25a:	test   ecx,ecx
  41d25c:	jne    0x41d265
  41d25e:	mov    eax,DWORD PTR [rdx+0xc]
  41d261:	test   eax,eax
  41d263:	je     0x41d280
  41d265:	test   esi,esi
  41d267:	jg     0x41d250
  41d269:	mov    ebp,DWORD PTR [rdx+0xc]
  41d26c:	add    rbp,rdi
  41d26f:	mov    rax,rbp
  41d272:	add    rsp,0x28
  41d276:	pop    rbx
  41d277:	pop    rsi
  41d278:	pop    rdi
  41d279:	pop    rbp
  41d27a:	ret    
  41d27b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d280:	xor    ebp,ebp
  41d282:	mov    rax,rbp
  41d285:	add    rsp,0x28
  41d289:	pop    rbx
  41d28a:	pop    rsi
  41d28b:	pop    rdi
  41d28c:	pop    rbp
  41d28d:	ret    
  41d28e:	nop
  41d28f:	nop
  41d290:	push   rcx
  41d291:	push   rax
  41d292:	cmp    rax,0x1000
  41d298:	lea    rcx,[rsp+0x18]
  41d29d:	jb     0x41d2b8
  41d29f:	sub    rcx,0x1000
  41d2a6:	or     QWORD PTR [rcx],0x0
  41d2aa:	sub    rax,0x1000
  41d2b0:	cmp    rax,0x1000
  41d2b6:	ja     0x41d29f
  41d2b8:	sub    rcx,rax
  41d2bb:	or     QWORD PTR [rcx],0x0
  41d2bf:	pop    rax
  41d2c0:	pop    rcx
  41d2c1:	ret    
  41d2c2:	nop
  41d2c3:	nop
  41d2c4:	nop
  41d2c5:	nop
  41d2c6:	nop
  41d2c7:	nop
  41d2c8:	nop
  41d2c9:	nop
  41d2ca:	nop
  41d2cb:	nop
  41d2cc:	nop
  41d2cd:	nop
  41d2ce:	nop
  41d2cf:	nop
  41d2d0:	push   rdi
  41d2d1:	push   rsi
  41d2d2:	push   rbx
  41d2d3:	sub    rsp,0x130
  41d2da:	mov    rbx,rcx
  41d2dd:	call   0x422950
  41d2e2:	test   rbx,rbx
  41d2e5:	mov    DWORD PTR [rax],0x0
  41d2eb:	je     0x41d49e
  41d2f1:	cmp    BYTE PTR [rbx],0x0
  41d2f4:	je     0x41d460
  41d2fa:	mov    rcx,rbx
  41d2fd:	call   QWORD PTR [rip+0x19c91]        # 0x436f94
  41d303:	cmp    eax,0xffffffff
  41d306:	je     0x41d480
  41d30c:	test   al,0x10
  41d30e:	je     0x41d460
  41d314:	lea    rdi,[rsp+0x20]
  41d319:	mov    rdx,rbx
  41d31c:	mov    r8d,0x104
  41d322:	mov    rcx,rdi
  41d325:	mov    rbx,rdi
  41d328:	call   0x422928
  41d32d:	mov    r8d,DWORD PTR [rbx]
  41d330:	add    rbx,0x4
  41d334:	lea    eax,[r8-0x1010101]
  41d33b:	not    r8d
  41d33e:	and    eax,r8d
  41d341:	and    eax,0x80808080
  41d346:	je     0x41d32d
  41d348:	mov    edx,eax
  41d34a:	shr    edx,0x10
  41d34d:	test   eax,0x8080
  41d352:	cmove  eax,edx
  41d355:	lea    rdx,[rbx+0x2]
  41d359:	cmove  rbx,rdx
  41d35d:	add    al,al
  41d35f:	sbb    rbx,0x3
  41d363:	sub    rbx,rdi
  41d366:	lea    rcx,[rbx+0x24b]
  41d36d:	call   0x422820
  41d372:	test   rax,rax
  41d375:	mov    rsi,rax
  41d378:	je     0x41d48f
  41d37e:	lea    r9,[rax+0x244]
  41d385:	lea    r8,[rbx+0x1]
  41d389:	mov    rdx,rdi
  41d38c:	mov    rcx,r9
  41d38f:	call   0x422810
  41d394:	cmp    BYTE PTR [rsi+0x244],0x0
  41d39b:	mov    r9,rax
  41d39e:	je     0x41d3c0
  41d3a0:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  41d3a8:	cmp    al,0x2f
  41d3aa:	je     0x41d3c0
  41d3ac:	cmp    al,0x5c
  41d3ae:	je     0x41d3c0
  41d3b0:	mov    r8d,0x5c
  41d3b6:	mov    WORD PTR [r9+rbx*1],r8w
  41d3bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3c0:	mov    rcx,r9
  41d3c3:	mov    eax,DWORD PTR [rcx]
  41d3c5:	add    rcx,0x4
  41d3c9:	lea    edx,[rax-0x1010101]
  41d3cf:	not    eax
  41d3d1:	and    edx,eax
  41d3d3:	and    edx,0x80808080
  41d3d9:	je     0x41d3c3
  41d3db:	mov    eax,edx
  41d3dd:	shr    eax,0x10
  41d3e0:	test   edx,0x8080
  41d3e6:	cmove  edx,eax
  41d3e9:	lea    rax,[rcx+0x2]
  41d3ed:	cmove  rcx,rax
  41d3f1:	add    dl,dl
  41d3f3:	mov    eax,0x2a
  41d3f8:	sbb    rcx,0x3
  41d3fc:	xor    edx,edx
  41d3fe:	mov    WORD PTR [rcx],ax
  41d401:	mov    WORD PTR [rsi+0x12c],dx
  41d408:	lea    rdx,[rsi+0x130]
  41d40f:	xor    ecx,ecx
  41d411:	xor    eax,eax
  41d413:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  41d41e:	mov    WORD PTR [rsi+0x12e],cx
  41d425:	mov    rdi,rdx
  41d428:	mov    ecx,0x20
  41d42d:	mov    DWORD PTR [rsi+0x240],0x0
  41d437:	mov    DWORD PTR [rsi+0x128],0x0
  41d441:	rep stos QWORD PTR es:[rdi],rax
  41d444:	mov    rax,rsi
  41d447:	mov    DWORD PTR [rdi],0x0
  41d44d:	add    rsp,0x130
  41d454:	pop    rbx
  41d455:	pop    rsi
  41d456:	pop    rdi
  41d457:	ret    
  41d458:	nop    DWORD PTR [rax+rax*1+0x0]
  41d460:	call   0x422950
  41d465:	mov    DWORD PTR [rax],0x14
  41d46b:	xor    eax,eax
  41d46d:	add    rsp,0x130
  41d474:	pop    rbx
  41d475:	pop    rsi
  41d476:	pop    rdi
  41d477:	ret    
  41d478:	nop    DWORD PTR [rax+rax*1+0x0]
  41d480:	call   0x422950
  41d485:	mov    DWORD PTR [rax],0x2
  41d48b:	xor    eax,eax
  41d48d:	jmp    0x41d44d
  41d48f:	call   0x422950
  41d494:	mov    DWORD PTR [rax],0xc
  41d49a:	xor    eax,eax
  41d49c:	jmp    0x41d44d
  41d49e:	call   0x422950
  41d4a3:	mov    DWORD PTR [rax],0xe
  41d4a9:	xor    eax,eax
  41d4ab:	jmp    0x41d44d
  41d4ad:	nop    DWORD PTR [rax]
  41d4b0:	push   rbp
  41d4b1:	push   rdi
  41d4b2:	push   rsi
  41d4b3:	push   rbx
  41d4b4:	sub    rsp,0x158
  41d4bb:	mov    rbx,rcx
  41d4be:	call   0x422950
  41d4c3:	test   rbx,rbx
  41d4c6:	mov    DWORD PTR [rax],0x0
  41d4cc:	je     0x41d6bd
  41d4d2:	mov    eax,DWORD PTR [rbx+0x240]
  41d4d8:	test   eax,eax
  41d4da:	js     0x41d65f
  41d4e0:	lea    rdi,[rsp+0x20]
  41d4e5:	je     0x41d594
  41d4eb:	mov    rcx,QWORD PTR [rbx+0x238]
  41d4f2:	mov    rdx,rdi
  41d4f5:	call   0x422730
  41d4fa:	cmp    eax,0xffffffff
  41d4fd:	mov    ebp,eax
  41d4ff:	je     0x41d605
  41d505:	mov    eax,DWORD PTR [rsp+0x20]
  41d509:	lea    rsi,[rbx+0x24]
  41d50d:	lea    rdx,[rdi+0x28]
  41d511:	mov    r8d,0x104
  41d517:	mov    rcx,rsi
  41d51a:	mov    DWORD PTR [rbx],eax
  41d51c:	mov    rax,QWORD PTR [rsp+0x28]
  41d521:	mov    QWORD PTR [rbx+0x8],rax
  41d525:	mov    rax,QWORD PTR [rsp+0x30]
  41d52a:	mov    QWORD PTR [rbx+0x10],rax
  41d52e:	mov    rax,QWORD PTR [rsp+0x38]
  41d533:	mov    QWORD PTR [rbx+0x18],rax
  41d537:	mov    rax,QWORD PTR [rsp+0x40]
  41d53c:	mov    DWORD PTR [rbx+0x20],eax
  41d53f:	call   0x422798
  41d544:	test   ebp,ebp
  41d546:	jne    0x41d633
  41d54c:	mov    eax,DWORD PTR [rbx+0x240]
  41d552:	add    eax,0x1
  41d555:	test   eax,eax
  41d557:	mov    DWORD PTR [rbx+0x240],eax
  41d55d:	jle    0x41d65f
  41d563:	mov    rcx,rsi
  41d566:	call   0x4227a8
  41d56b:	lea    rcx,[rbx+0x130]
  41d572:	mov    WORD PTR [rbx+0x12e],ax
  41d579:	mov    rdx,rsi
  41d57c:	call   0x4227c0
  41d581:	lea    rax,[rbx+0x128]
  41d588:	add    rsp,0x158
  41d58f:	pop    rbx
  41d590:	pop    rsi
  41d591:	pop    rdi
  41d592:	pop    rbp
  41d593:	ret    
  41d594:	lea    rcx,[rbx+0x244]
  41d59b:	mov    rdx,rdi
  41d59e:	call   0x422938
  41d5a3:	cmp    rax,0xffffffffffffffff
  41d5a7:	mov    rbp,rax
  41d5aa:	je     0x41d670
  41d5b0:	mov    eax,DWORD PTR [rsp+0x20]
  41d5b4:	lea    rsi,[rbx+0x24]
  41d5b8:	lea    rdx,[rdi+0x28]
  41d5bc:	mov    r8d,0x104
  41d5c2:	mov    rcx,rsi
  41d5c5:	mov    DWORD PTR [rbx],eax
  41d5c7:	mov    rax,QWORD PTR [rsp+0x28]
  41d5cc:	mov    QWORD PTR [rbx+0x8],rax
  41d5d0:	mov    rax,QWORD PTR [rsp+0x30]
  41d5d5:	mov    QWORD PTR [rbx+0x10],rax
  41d5d9:	mov    rax,QWORD PTR [rsp+0x38]
  41d5de:	mov    QWORD PTR [rbx+0x18],rax
  41d5e2:	mov    rax,QWORD PTR [rsp+0x40]
  41d5e7:	mov    DWORD PTR [rbx+0x20],eax
  41d5ea:	call   0x422798
  41d5ef:	mov    QWORD PTR [rbx+0x238],rbp
  41d5f6:	mov    DWORD PTR [rbx+0x240],0x1
  41d600:	jmp    0x41d563
  41d605:	lea    rdi,[rbx+0x8]
  41d609:	mov    rcx,rbx
  41d60c:	xor    eax,eax
  41d60e:	mov    QWORD PTR [rbx],0x0
  41d615:	mov    QWORD PTR [rbx+0x120],0x0
  41d620:	and    rdi,0xfffffffffffffff8
  41d624:	sub    rcx,rdi
  41d627:	add    ecx,0x128
  41d62d:	shr    ecx,0x3
  41d630:	rep stos QWORD PTR es:[rdi],rax
  41d633:	call   QWORD PTR [rip+0x1996b]        # 0x436fa4
  41d639:	cmp    eax,0x12
  41d63c:	je     0x41d6b0
  41d63e:	mov    rcx,QWORD PTR [rbx+0x238]
  41d645:	call   0x422940
  41d64a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41d655:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41d65f:	xor    eax,eax
  41d661:	add    rsp,0x158
  41d668:	pop    rbx
  41d669:	pop    rsi
  41d66a:	pop    rdi
  41d66b:	pop    rbp
  41d66c:	ret    
  41d66d:	nop    DWORD PTR [rax]
  41d670:	lea    rdi,[rbx+0x8]
  41d674:	mov    rcx,rbx
  41d677:	xor    eax,eax
  41d679:	mov    QWORD PTR [rbx],0x0
  41d680:	mov    QWORD PTR [rbx+0x120],0x0
  41d68b:	and    rdi,0xfffffffffffffff8
  41d68f:	sub    rcx,rdi
  41d692:	add    ecx,0x128
  41d698:	shr    ecx,0x3
  41d69b:	rep stos QWORD PTR es:[rdi],rax
  41d69e:	mov    QWORD PTR [rbx+0x238],rbp
  41d6a5:	mov    DWORD PTR [rbx+0x240],ebp
  41d6ab:	xor    eax,eax
  41d6ad:	jmp    0x41d661
  41d6af:	nop
  41d6b0:	call   0x422950
  41d6b5:	mov    DWORD PTR [rax],0x0
  41d6bb:	jmp    0x41d63e
  41d6bd:	call   0x422950
  41d6c2:	mov    DWORD PTR [rax],0xe
  41d6c8:	xor    eax,eax
  41d6ca:	jmp    0x41d588
  41d6cf:	nop
  41d6d0:	push   rsi
  41d6d1:	push   rbx
  41d6d2:	sub    rsp,0x28
  41d6d6:	mov    rsi,rcx
  41d6d9:	call   0x422950
  41d6de:	test   rsi,rsi
  41d6e1:	mov    DWORD PTR [rax],0x0
  41d6e7:	je     0x41d710
  41d6e9:	mov    rcx,QWORD PTR [rsi+0x238]
  41d6f0:	xor    ebx,ebx
  41d6f2:	cmp    rcx,0xffffffffffffffff
  41d6f6:	je     0x41d6ff
  41d6f8:	call   0x422940
  41d6fd:	mov    ebx,eax
  41d6ff:	mov    rcx,rsi
  41d702:	call   0x422858
  41d707:	mov    eax,ebx
  41d709:	add    rsp,0x28
  41d70d:	pop    rbx
  41d70e:	pop    rsi
  41d70f:	ret    
  41d710:	call   0x422950
  41d715:	mov    DWORD PTR [rax],0xe
  41d71b:	mov    eax,0xffffffff
  41d720:	jmp    0x41d709
  41d722:	nop    DWORD PTR [rax+0x0]
  41d726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d730:	push   rbx
  41d731:	sub    rsp,0x20
  41d735:	mov    rbx,rcx
  41d738:	call   0x422950
  41d73d:	test   rbx,rbx
  41d740:	mov    DWORD PTR [rax],0x0
  41d746:	je     0x41d775
  41d748:	mov    rcx,QWORD PTR [rbx+0x238]
  41d74f:	cmp    rcx,0xffffffffffffffff
  41d753:	je     0x41d75a
  41d755:	call   0x422940
  41d75a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41d765:	mov    DWORD PTR [rbx+0x240],0x0
  41d76f:	add    rsp,0x20
  41d773:	pop    rbx
  41d774:	ret    
  41d775:	call   0x422950
  41d77a:	mov    DWORD PTR [rax],0xe
  41d780:	jmp    0x41d76f
  41d782:	nop    DWORD PTR [rax+0x0]
  41d786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d790:	push   rbx
  41d791:	sub    rsp,0x20
  41d795:	mov    rbx,rcx
  41d798:	call   0x422950
  41d79d:	test   rbx,rbx
  41d7a0:	mov    DWORD PTR [rax],0x0
  41d7a6:	je     0x41d7b4
  41d7a8:	mov    eax,DWORD PTR [rbx+0x240]
  41d7ae:	add    rsp,0x20
  41d7b2:	pop    rbx
  41d7b3:	ret    
  41d7b4:	call   0x422950
  41d7b9:	mov    DWORD PTR [rax],0xe
  41d7bf:	mov    eax,0xffffffff
  41d7c4:	jmp    0x41d7ae
  41d7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7d0:	push   rsi
  41d7d1:	push   rbx
  41d7d2:	sub    rsp,0x28
  41d7d6:	mov    rbx,rcx
  41d7d9:	mov    esi,edx
  41d7db:	call   0x422950
  41d7e0:	test   rbx,rbx
  41d7e3:	mov    DWORD PTR [rax],0x0
  41d7e9:	je     0x41d85d
  41d7eb:	cmp    esi,0xffffffff
  41d7ee:	jl     0x41d850
  41d7f0:	je     0x41d820
  41d7f2:	mov    rcx,rbx
  41d7f5:	call   0x41d730
  41d7fa:	jmp    0x41d80d
  41d7fc:	nop    DWORD PTR [rax+0x0]
  41d800:	mov    rcx,rbx
  41d803:	call   0x41d4b0
  41d808:	test   rax,rax
  41d80b:	je     0x41d847
  41d80d:	cmp    esi,DWORD PTR [rbx+0x240]
  41d813:	jg     0x41d800
  41d815:	add    rsp,0x28
  41d819:	pop    rbx
  41d81a:	pop    rsi
  41d81b:	ret    
  41d81c:	nop    DWORD PTR [rax+0x0]
  41d820:	mov    rcx,QWORD PTR [rbx+0x238]
  41d827:	cmp    rcx,0xffffffffffffffff
  41d82b:	je     0x41d832
  41d82d:	call   0x422940
  41d832:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  41d83d:	mov    DWORD PTR [rbx+0x240],0xffffffff
  41d847:	add    rsp,0x28
  41d84b:	pop    rbx
  41d84c:	pop    rsi
  41d84d:	ret    
  41d84e:	xchg   ax,ax
  41d850:	call   0x422950
  41d855:	mov    DWORD PTR [rax],0x16
  41d85b:	jmp    0x41d847
  41d85d:	call   0x422950
  41d862:	mov    DWORD PTR [rax],0xe
  41d868:	jmp    0x41d847
  41d86a:	nop
  41d86b:	nop
  41d86c:	nop
  41d86d:	nop
  41d86e:	nop
  41d86f:	nop
  41d870:	test   rdx,rdx
  41d873:	mov    r8,rcx
  41d876:	je     0x41d8a2
  41d878:	cmp    BYTE PTR [rcx],0x0
  41d87b:	jne    0x41d885
  41d87d:	jmp    0x41d8a2
  41d87f:	nop
  41d880:	cmp    BYTE PTR [rcx],0x0
  41d883:	je     0x41d8a0
  41d885:	add    rcx,0x1
  41d889:	mov    rax,rcx
  41d88c:	sub    rax,r8
  41d88f:	cmp    rax,rdx
  41d892:	jb     0x41d880
  41d894:	repz ret 
  41d896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d8a0:	repz ret 
  41d8a2:	xor    eax,eax
  41d8a4:	ret    
  41d8a5:	nop
  41d8a6:	nop
  41d8a7:	nop
  41d8a8:	nop
  41d8a9:	nop
  41d8aa:	nop
  41d8ab:	nop
  41d8ac:	nop
  41d8ad:	nop
  41d8ae:	nop
  41d8af:	nop
  41d8b0:	push   r12
  41d8b2:	push   rbp
  41d8b3:	push   rdi
  41d8b4:	push   rsi
  41d8b5:	push   rbx
  41d8b6:	sub    rsp,0x250
  41d8bd:	mov    rbx,rdx
  41d8c0:	mov    rsi,rcx
  41d8c3:	mov    ecx,0x4000
  41d8c8:	mov    r12d,r8d
  41d8cb:	call   0x422820
  41d8d0:	test   rbx,rbx
  41d8d3:	mov    rbp,rax
  41d8d6:	je     0x41d9a0
  41d8dc:	cmp    WORD PTR [rbx],0x0
  41d8e0:	lea    rax,[rip+0xfa69]        # 0x42d350
  41d8e7:	cmove  rbx,rax
  41d8eb:	test   rsi,rsi
  41d8ee:	je     0x41d991
  41d8f4:	cmp    WORD PTR [rsi],0x0
  41d8f8:	lea    rax,[rip+0xfa65]        # 0x42d364
  41d8ff:	cmove  rsi,rax
  41d903:	lea    rdi,[rsp+0x40]
  41d908:	xor    ecx,ecx
  41d90a:	mov    r8d,0x104
  41d910:	mov    rdx,rdi
  41d913:	call   QWORD PTR [rip+0x19693]        # 0x436fac
  41d919:	test   eax,eax
  41d91b:	je     0x41d980
  41d91d:	lea    r8,[rip+0xfa44]        # 0x42d368
  41d924:	mov    QWORD PTR [rsp+0x30],rsi
  41d929:	mov    DWORD PTR [rsp+0x28],r12d
  41d92e:	mov    QWORD PTR [rsp+0x20],rbx
  41d933:	mov    r9,rdi
  41d936:	mov    edx,0x1fff
  41d93b:	mov    rcx,rbp
  41d93e:	call   0x4228e0
  41d943:	mov    rax,QWORD PTR [rip+0x100e6]        # 0x42da30
  41d94a:	mov    eax,DWORD PTR [rax]
  41d94c:	test   eax,eax
  41d94e:	je     0x41d9c5
  41d950:	xor    ecx,ecx
  41d952:	mov    r9d,0x12012
  41d958:	lea    r8,[rip+0xfaa1]        # 0x42d400
  41d95f:	mov    rdx,rbp
  41d962:	call   QWORD PTR [rip+0x19a4c]        # 0x4373b4
  41d968:	cmp    eax,0x3
  41d96b:	je     0x41d9b1
  41d96d:	cmp    eax,0x5
  41d970:	jne    0x41d9ac
  41d972:	add    rsp,0x250
  41d979:	pop    rbx
  41d97a:	pop    rsi
  41d97b:	pop    rdi
  41d97c:	pop    rbp
  41d97d:	pop    r12
  41d97f:	ret    
  41d980:	lea    rdx,[rip+0xf9c9]        # 0x42d350
  41d987:	mov    rcx,rdi
  41d98a:	call   0x422750
  41d98f:	jmp    0x41d91d
  41d991:	lea    rsi,[rip+0xf9cc]        # 0x42d364
  41d998:	jmp    0x41d903
  41d99d:	nop    DWORD PTR [rax]
  41d9a0:	lea    rbx,[rip+0xf9a9]        # 0x42d350
  41d9a7:	jmp    0x41d8eb
  41d9ac:	call   0x4228c0
  41d9b1:	mov    ecx,0x16
  41d9b6:	call   0x4227e8
  41d9bb:	mov    ecx,0x3
  41d9c0:	call   0x422948
  41d9c5:	call   0x422990
  41d9ca:	lea    rdx,[rip+0xfa1f]        # 0x42d3f0
  41d9d1:	lea    rcx,[rax+0x60]
  41d9d5:	mov    r8,rbp
  41d9d8:	call   0x422848
  41d9dd:	call   0x4228c0
  41d9e2:	nop
  41d9e3:	nop    DWORD PTR [rax]
  41d9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d9f0:	push   rbp
  41d9f1:	push   rdi
  41d9f2:	push   rsi
  41d9f3:	push   rbx
  41d9f4:	sub    rsp,0x38
  41d9f8:	mov    rdi,rdx
  41d9fb:	mov    DWORD PTR [rsp+0x2c],r8d
  41da00:	mov    rbp,rcx
  41da03:	call   0x4227a8
  41da08:	lea    rcx,[rax+rax*1+0x2]
  41da0d:	call   0x422820
  41da12:	mov    rcx,rdi
  41da15:	mov    rsi,rax
  41da18:	call   0x4227a8
  41da1d:	lea    rcx,[rax+rax*1+0x2]
  41da22:	call   0x422820
  41da27:	movzx  r9d,BYTE PTR [rbp+0x0]
  41da2c:	xor    r10d,r10d
  41da2f:	mov    rbx,rax
  41da32:	mov    r8d,DWORD PTR [rsp+0x2c]
  41da37:	test   r9b,r9b
  41da3a:	je     0x41da57
  41da3c:	nop    DWORD PTR [rax+0x0]
  41da40:	mov    WORD PTR [rsi+r10*2],r9w
  41da45:	add    r10,0x1
  41da49:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  41da4f:	test   r9b,r9b
  41da52:	jne    0x41da40
  41da54:	add    r10,r10
  41da57:	movzx  r9d,BYTE PTR [rdi]
  41da5b:	xor    edx,edx
  41da5d:	mov    WORD PTR [rsi+r10*1],dx
  41da62:	xor    r10d,r10d
  41da65:	test   r9b,r9b
  41da68:	je     0x41da86
  41da6a:	nop    WORD PTR [rax+rax*1+0x0]
  41da70:	mov    WORD PTR [rbx+r10*2],r9w
  41da75:	add    r10,0x1
  41da79:	movzx  r9d,BYTE PTR [rdi+r10*1]
  41da7e:	test   r9b,r9b
  41da81:	jne    0x41da70
  41da83:	add    r10,r10
  41da86:	xor    eax,eax
  41da88:	mov    rdx,rbx
  41da8b:	mov    rcx,rsi
  41da8e:	mov    WORD PTR [rbx+r10*1],ax
  41da93:	call   0x41d8b0
  41da98:	mov    rcx,rsi
  41da9b:	call   0x422858
  41daa0:	mov    rcx,rbx
  41daa3:	add    rsp,0x38
  41daa7:	pop    rbx
  41daa8:	pop    rsi
  41daa9:	pop    rdi
  41daaa:	pop    rbp
  41daab:	jmp    0x422858
  41dab0:	sub    rsp,0x58
  41dab4:	test   r8d,r8d
  41dab7:	mov    eax,r8d
  41daba:	mov    WORD PTR [rsp+0x68],dx
  41dabf:	jne    0x41dad4
  41dac1:	cmp    dx,0xff
  41dac6:	ja     0x41db1a
  41dac8:	mov    BYTE PTR [rcx],dl
  41daca:	mov    eax,0x1
  41dacf:	add    rsp,0x58
  41dad3:	ret    
  41dad4:	lea    rdx,[rsp+0x4c]
  41dad9:	mov    DWORD PTR [rsp+0x28],r9d
  41dade:	mov    QWORD PTR [rsp+0x20],rcx
  41dae3:	mov    DWORD PTR [rsp+0x4c],0x0
  41daeb:	mov    QWORD PTR [rsp+0x30],0x0
  41daf4:	mov    r9d,0x1
  41dafa:	mov    QWORD PTR [rsp+0x38],rdx
  41daff:	lea    r8,[rsp+0x68]
  41db04:	xor    edx,edx
  41db06:	mov    ecx,eax
  41db08:	call   QWORD PTR [rip+0x1957e]        # 0x43708c
  41db0e:	test   eax,eax
  41db10:	je     0x41db1a
  41db12:	mov    edx,DWORD PTR [rsp+0x4c]
  41db16:	test   edx,edx
  41db18:	je     0x41dacf
  41db1a:	call   0x422950
  41db1f:	mov    DWORD PTR [rax],0x2a
  41db25:	mov    eax,0xffffffff
  41db2a:	add    rsp,0x58
  41db2e:	ret    
  41db2f:	nop
  41db30:	push   rdi
  41db31:	push   rsi
  41db32:	push   rbx
  41db33:	sub    rsp,0x30
  41db37:	lea    rax,[rsp+0x20]
  41db3c:	test   rcx,rcx
  41db3f:	mov    rbx,rcx
  41db42:	mov    esi,edx
  41db44:	cmove  rbx,rax
  41db48:	mov    rax,QWORD PTR [rip+0xfd81]        # 0x42d8d0
  41db4f:	mov    rax,QWORD PTR [rax]
  41db52:	mov    edi,DWORD PTR [rax]
  41db54:	call   0x4229a8
  41db59:	movzx  edx,si
  41db5c:	mov    r8d,eax
  41db5f:	mov    rcx,rbx
  41db62:	mov    r9d,edi
  41db65:	call   0x41dab0
  41db6a:	cdqe   
  41db6c:	add    rsp,0x30
  41db70:	pop    rbx
  41db71:	pop    rsi
  41db72:	pop    rdi
  41db73:	ret    
  41db74:	xchg   ax,ax
  41db76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db80:	push   r14
  41db82:	push   r13
  41db84:	push   r12
  41db86:	push   rbp
  41db87:	push   rdi
  41db88:	push   rsi
  41db89:	push   rbx
  41db8a:	sub    rsp,0x30
  41db8e:	mov    r13,rdx
  41db91:	mov    rbx,rcx
  41db94:	mov    rdi,r8
  41db97:	call   0x4229a8
  41db9c:	mov    ebp,eax
  41db9e:	mov    rax,QWORD PTR [rip+0xfd2b]        # 0x42d8d0
  41dba5:	mov    r14,QWORD PTR [r13+0x0]
  41dba9:	mov    rax,QWORD PTR [rax]
  41dbac:	test   r14,r14
  41dbaf:	mov    r12d,DWORD PTR [rax]
  41dbb2:	je     0x41dca0
  41dbb8:	xor    esi,esi
  41dbba:	test   rbx,rbx
  41dbbd:	je     0x41dc50
  41dbc3:	test   rdi,rdi
  41dbc6:	jne    0x41dbe8
  41dbc8:	jmp    0x41dc14
  41dbca:	nop    WORD PTR [rax+rax*1+0x0]
  41dbd0:	movsxd r10,eax
  41dbd3:	add    rbx,r10
  41dbd6:	add    rsi,r10
  41dbd9:	cmp    BYTE PTR [rbx-0x1],0x0
  41dbdd:	je     0x41dc30
  41dbdf:	add    r14,0x2
  41dbe3:	cmp    rdi,rsi
  41dbe6:	jbe    0x41dc14
  41dbe8:	movzx  edx,WORD PTR [r14]
  41dbec:	mov    r9d,r12d
  41dbef:	mov    r8d,ebp
  41dbf2:	mov    rcx,rbx
  41dbf5:	call   0x41dab0
  41dbfa:	test   eax,eax
  41dbfc:	jg     0x41dbd0
  41dbfe:	mov    rax,0xffffffffffffffff
  41dc05:	add    rsp,0x30
  41dc09:	pop    rbx
  41dc0a:	pop    rsi
  41dc0b:	pop    rdi
  41dc0c:	pop    rbp
  41dc0d:	pop    r12
  41dc0f:	pop    r13
  41dc11:	pop    r14
  41dc13:	ret    
  41dc14:	mov    rax,rsi
  41dc17:	mov    QWORD PTR [r13+0x0],r14
  41dc1b:	add    rsp,0x30
  41dc1f:	pop    rbx
  41dc20:	pop    rsi
  41dc21:	pop    rdi
  41dc22:	pop    rbp
  41dc23:	pop    r12
  41dc25:	pop    r13
  41dc27:	pop    r14
  41dc29:	ret    
  41dc2a:	nop    WORD PTR [rax+rax*1+0x0]
  41dc30:	lea    rax,[rsi-0x1]
  41dc34:	mov    QWORD PTR [r13+0x0],0x0
  41dc3c:	add    rsp,0x30
  41dc40:	pop    rbx
  41dc41:	pop    rsi
  41dc42:	pop    rdi
  41dc43:	pop    rbp
  41dc44:	pop    r12
  41dc46:	pop    r13
  41dc48:	pop    r14
  41dc4a:	ret    
  41dc4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc50:	test   rdi,rdi
  41dc53:	lea    rbx,[rsp+0x20]
  41dc58:	jne    0x41dc7b
  41dc5a:	jmp    0x41dcb1
  41dc5c:	nop    DWORD PTR [rax+0x0]
  41dc60:	movsxd rdx,eax
  41dc63:	sub    eax,0x1
  41dc66:	cdqe   
  41dc68:	add    rsi,rdx
  41dc6b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  41dc70:	je     0x41dcb9
  41dc72:	add    r14,0x2
  41dc76:	cmp    rdi,rsi
  41dc79:	jbe    0x41dcb1
  41dc7b:	movzx  edx,WORD PTR [r14]
  41dc7f:	mov    r9d,r12d
  41dc82:	mov    r8d,ebp
  41dc85:	mov    rcx,rbx
  41dc88:	call   0x41dab0
  41dc8d:	test   eax,eax
  41dc8f:	jg     0x41dc60
  41dc91:	jmp    0x41dbfe
  41dc96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dca0:	xor    eax,eax
  41dca2:	add    rsp,0x30
  41dca6:	pop    rbx
  41dca7:	pop    rsi
  41dca8:	pop    rdi
  41dca9:	pop    rbp
  41dcaa:	pop    r12
  41dcac:	pop    r13
  41dcae:	pop    r14
  41dcb0:	ret    
  41dcb1:	mov    rax,rsi
  41dcb4:	jmp    0x41dc05
  41dcb9:	lea    rax,[rsi-0x1]
  41dcbd:	jmp    0x41dc05
  41dcc2:	nop
  41dcc3:	nop
  41dcc4:	nop
  41dcc5:	nop
  41dcc6:	nop
  41dcc7:	nop
  41dcc8:	nop
  41dcc9:	nop
  41dcca:	nop
  41dccb:	nop
  41dccc:	nop
  41dccd:	nop
  41dcce:	nop
  41dccf:	nop
  41dcd0:	jmp    0x4228f8
  41dcd5:	nop
  41dcd6:	nop
  41dcd7:	nop
  41dcd8:	nop
  41dcd9:	nop
  41dcda:	nop
  41dcdb:	nop
  41dcdc:	nop
  41dcdd:	nop
  41dcde:	nop
  41dcdf:	nop
  41dce0:	sub    rsp,0x38
  41dce4:	mov    r9,rdx
  41dce7:	mov    QWORD PTR [rsp+0x20],r8
  41dcec:	mov    rdx,rcx
  41dcef:	xor    r8d,r8d
  41dcf2:	mov    ecx,0x6000
  41dcf7:	call   0x41f610
  41dcfc:	add    rsp,0x38
  41dd00:	ret    
  41dd01:	nop
  41dd02:	nop
  41dd03:	nop
  41dd04:	nop
  41dd05:	nop
  41dd06:	nop
  41dd07:	nop
  41dd08:	nop
  41dd09:	nop
  41dd0a:	nop
  41dd0b:	nop
  41dd0c:	nop
  41dd0d:	nop
  41dd0e:	nop
  41dd0f:	nop
  41dd10:	push   rsi
  41dd11:	push   rbx
  41dd12:	sub    rsp,0x38
  41dd16:	mov    rbx,rcx
  41dd19:	mov    rsi,rdx
  41dd1c:	call   0x422990
  41dd21:	lea    rdx,[rax+0x30]
  41dd25:	mov    QWORD PTR [rsp+0x20],rsi
  41dd2a:	mov    r9,rbx
  41dd2d:	xor    r8d,r8d
  41dd30:	mov    ecx,0x6000
  41dd35:	call   0x41f610
  41dd3a:	add    rsp,0x38
  41dd3e:	pop    rbx
  41dd3f:	pop    rsi
  41dd40:	ret    
  41dd41:	nop
  41dd42:	nop
  41dd43:	nop
  41dd44:	nop
  41dd45:	nop
  41dd46:	nop
  41dd47:	nop
  41dd48:	nop
  41dd49:	nop
  41dd4a:	nop
  41dd4b:	nop
  41dd4c:	nop
  41dd4d:	nop
  41dd4e:	nop
  41dd4f:	nop
  41dd50:	push   rsi
  41dd51:	push   rbx
  41dd52:	sub    rsp,0x38
  41dd56:	test   rdx,rdx
  41dd59:	mov    rsi,rcx
  41dd5c:	je     0x41dd90
  41dd5e:	lea    rbx,[rdx-0x1]
  41dd62:	mov    QWORD PTR [rsp+0x20],r9
  41dd67:	mov    rdx,rcx
  41dd6a:	mov    r9,r8
  41dd6d:	xor    ecx,ecx
  41dd6f:	mov    r8d,ebx
  41dd72:	call   0x41f610
  41dd77:	cmp    eax,ebx
  41dd79:	cmovle ebx,eax
  41dd7c:	movsxd rbx,ebx
  41dd7f:	mov    BYTE PTR [rsi+rbx*1],0x0
  41dd83:	add    rsp,0x38
  41dd87:	pop    rbx
  41dd88:	pop    rsi
  41dd89:	ret    
  41dd8a:	nop    WORD PTR [rax+rax*1+0x0]
  41dd90:	mov    QWORD PTR [rsp+0x20],r9
  41dd95:	mov    rdx,rcx
  41dd98:	mov    r9,r8
  41dd9b:	xor    ecx,ecx
  41dd9d:	xor    r8d,r8d
  41dda0:	call   0x41f610
  41dda5:	add    rsp,0x38
  41dda9:	pop    rbx
  41ddaa:	pop    rsi
  41ddab:	ret    
  41ddac:	nop
  41ddad:	nop
  41ddae:	nop
  41ddaf:	nop
  41ddb0:	push   rbx
  41ddb1:	sub    rsp,0x30
  41ddb5:	mov    rbx,rcx
  41ddb8:	mov    r9,rdx
  41ddbb:	mov    QWORD PTR [rsp+0x20],r8
  41ddc0:	mov    rdx,rcx
  41ddc3:	xor    r8d,r8d
  41ddc6:	mov    ecx,0x4000
  41ddcb:	call   0x41f610
  41ddd0:	movsxd rdx,eax
  41ddd3:	mov    BYTE PTR [rbx+rdx*1],0x0
  41ddd7:	add    rsp,0x30
  41dddb:	pop    rbx
  41dddc:	ret    
  41dddd:	nop
  41ddde:	nop
  41dddf:	nop
  41dde0:	sub    rsp,0x58
  41dde4:	mov    rax,QWORD PTR [rdx]
  41dde7:	mov    r11,rdx
  41ddea:	mov    edx,DWORD PTR [rdx+0x8]
  41dded:	mov    r10,rdx
  41ddf0:	and    r10w,0x7fff
  41ddf6:	jne    0x41de14
  41ddf8:	mov    rdx,rax
  41ddfb:	shr    rdx,0x20
  41ddff:	or     eax,edx
  41de01:	jne    0x41de80
  41de03:	mov    DWORD PTR [rsp+0x44],0x0
  41de0b:	movzx  eax,WORD PTR [r11+0x8]
  41de10:	xor    edx,edx
  41de12:	jmp    0x41de3b
  41de14:	cmp    r10w,0x7fff
  41de1a:	je     0x41dea0
  41de20:	movzx  eax,WORD PTR [r11+0x8]
  41de25:	mov    DWORD PTR [rsp+0x44],0x1
  41de2d:	mov    edx,eax
  41de2f:	and    edx,0x7fff
  41de35:	sub    edx,0x403e
  41de3b:	and    eax,0x8000
  41de40:	mov    r10,QWORD PTR [rsp+0x80]
  41de48:	mov    DWORD PTR [r10],eax
  41de4b:	lea    rax,[rsp+0x48]
  41de50:	mov    QWORD PTR [rsp+0x30],r9
  41de55:	mov    DWORD PTR [rsp+0x20],ecx
  41de59:	lea    r9,[rsp+0x44]
  41de5e:	lea    rcx,[rip+0x7ccb]        # 0x425b30
  41de65:	mov    DWORD PTR [rsp+0x28],r8d
  41de6a:	mov    QWORD PTR [rsp+0x38],rax
  41de6f:	mov    r8,r11
  41de72:	call   0x420290
  41de77:	add    rsp,0x58
  41de7b:	ret    
  41de7c:	nop    DWORD PTR [rax+0x0]
  41de80:	test   edx,edx
  41de82:	js     0x41de20
  41de84:	mov    DWORD PTR [rsp+0x44],0x2
  41de8c:	movzx  eax,WORD PTR [r11+0x8]
  41de91:	mov    edx,0xffffbfc3
  41de96:	jmp    0x41de3b
  41de98:	nop    DWORD PTR [rax+rax*1+0x0]
  41dea0:	mov    rdx,rax
  41dea3:	shr    rdx,0x20
  41dea7:	and    edx,0x7fffffff
  41dead:	or     edx,eax
  41deaf:	jne    0x41dec5
  41deb1:	mov    DWORD PTR [rsp+0x44],0x3
  41deb9:	movzx  eax,WORD PTR [r11+0x8]
  41debe:	xor    edx,edx
  41dec0:	jmp    0x41de3b
  41dec5:	mov    DWORD PTR [rsp+0x44],0x4
  41decd:	xor    edx,edx
  41decf:	xor    eax,eax
  41ded1:	jmp    0x41de40
  41ded6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dee0:	push   rbx
  41dee1:	sub    rsp,0x20
  41dee5:	mov    rbx,rdx
  41dee8:	mov    edx,DWORD PTR [rdx+0x8]
  41deeb:	test   dh,0x40
  41deee:	jne    0x41def8
  41def0:	mov    eax,DWORD PTR [rbx+0x24]
  41def3:	cmp    DWORD PTR [rbx+0x28],eax
  41def6:	jle    0x41df0a
  41def8:	and    dh,0x20
  41defb:	jne    0x41df20
  41defd:	movsxd rax,DWORD PTR [rbx+0x24]
  41df01:	mov    rdx,QWORD PTR [rbx]
  41df04:	mov    BYTE PTR [rdx+rax*1],cl
  41df07:	mov    eax,DWORD PTR [rbx+0x24]
  41df0a:	add    eax,0x1
  41df0d:	mov    DWORD PTR [rbx+0x24],eax
  41df10:	add    rsp,0x20
  41df14:	pop    rbx
  41df15:	ret    
  41df16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df20:	mov    rdx,QWORD PTR [rbx]
  41df23:	call   0x422870
  41df28:	mov    eax,DWORD PTR [rbx+0x24]
  41df2b:	add    eax,0x1
  41df2e:	mov    DWORD PTR [rbx+0x24],eax
  41df31:	add    rsp,0x20
  41df35:	pop    rbx
  41df36:	ret    
  41df37:	nop    WORD PTR [rax+rax*1+0x0]
  41df40:	push   r14
  41df42:	push   r13
  41df44:	push   r12
  41df46:	push   rbp
  41df47:	push   rdi
  41df48:	push   rsi
  41df49:	push   rbx
  41df4a:	sub    rsp,0x40
  41df4e:	lea    r14,[rsp+0x2c]
  41df53:	lea    r13,[rsp+0x30]
  41df58:	mov    ebx,edx
  41df5a:	mov    rsi,r8
  41df5d:	xor    edx,edx
  41df5f:	mov    r12,rcx
  41df62:	mov    r8,r14
  41df65:	mov    rcx,r13
  41df68:	call   0x41db30
  41df6d:	mov    ebp,DWORD PTR [rsi+0x10]
  41df70:	cmp    ebp,ebx
  41df72:	jge    0x41e019
  41df78:	test   ebp,ebp
  41df7a:	js     0x41e019
  41df80:	mov    eax,DWORD PTR [rsi+0xc]
  41df83:	cmp    ebp,eax
  41df85:	jge    0x41e026
  41df8b:	sub    eax,ebp
  41df8d:	test   eax,eax
  41df8f:	mov    DWORD PTR [rsi+0xc],eax
  41df92:	jle    0x41dfa0
  41df94:	test   BYTE PTR [rsi+0x9],0x4
  41df98:	je     0x41e032
  41df9e:	xchg   ax,ax
  41dfa0:	test   ebp,ebp
  41dfa2:	jle    0x41dffd
  41dfa4:	add    r12,0x2
  41dfa8:	movzx  edx,WORD PTR [r12-0x2]
  41dfae:	mov    r8,r14
  41dfb1:	mov    rcx,r13
  41dfb4:	call   0x41db30
  41dfb9:	test   eax,eax
  41dfbb:	jle    0x41dffd
  41dfbd:	sub    eax,0x1
  41dfc0:	mov    rbx,r13
  41dfc3:	lea    rdi,[r13+rax*1+0x1]
  41dfc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dfd0:	add    rbx,0x1
  41dfd4:	movsx  ecx,BYTE PTR [rbx-0x1]
  41dfd8:	mov    rdx,rsi
  41dfdb:	call   0x41dee0
  41dfe0:	cmp    rbx,rdi
  41dfe3:	jne    0x41dfd0
  41dfe5:	sub    ebp,0x1
  41dfe8:	jmp    0x41dfa0
  41dfea:	nop    WORD PTR [rax+rax*1+0x0]
  41dff0:	mov    rdx,rsi
  41dff3:	mov    ecx,0x20
  41dff8:	call   0x41dee0
  41dffd:	mov    eax,DWORD PTR [rsi+0xc]
  41e000:	lea    edx,[rax-0x1]
  41e003:	test   eax,eax
  41e005:	mov    DWORD PTR [rsi+0xc],edx
  41e008:	jg     0x41dff0
  41e00a:	add    rsp,0x40
  41e00e:	pop    rbx
  41e00f:	pop    rsi
  41e010:	pop    rdi
  41e011:	pop    rbp
  41e012:	pop    r12
  41e014:	pop    r13
  41e016:	pop    r14
  41e018:	ret    
  41e019:	mov    eax,DWORD PTR [rsi+0xc]
  41e01c:	mov    ebp,ebx
  41e01e:	cmp    ebp,eax
  41e020:	jl     0x41df8b
  41e026:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41e02d:	jmp    0x41dfa0
  41e032:	sub    eax,0x1
  41e035:	mov    DWORD PTR [rsi+0xc],eax
  41e038:	nop    DWORD PTR [rax+rax*1+0x0]
  41e040:	mov    rdx,rsi
  41e043:	mov    ecx,0x20
  41e048:	call   0x41dee0
  41e04d:	mov    eax,DWORD PTR [rsi+0xc]
  41e050:	lea    edx,[rax-0x1]
  41e053:	test   eax,eax
  41e055:	mov    DWORD PTR [rsi+0xc],edx
  41e058:	jne    0x41e040
  41e05a:	jmp    0x41dfa0
  41e05f:	nop
  41e060:	push   rdi
  41e061:	push   rsi
  41e062:	push   rbx
  41e063:	sub    rsp,0x20
  41e067:	mov    edi,DWORD PTR [r8+0x10]
  41e06b:	mov    rsi,rcx
  41e06e:	mov    rbx,r8
  41e071:	cmp    edi,edx
  41e073:	jge    0x41e0f0
  41e075:	test   edi,edi
  41e077:	js     0x41e0f0
  41e079:	mov    eax,DWORD PTR [rbx+0xc]
  41e07c:	cmp    edi,eax
  41e07e:	jge    0x41e0f9
  41e080:	sub    eax,edi
  41e082:	test   eax,eax
  41e084:	mov    DWORD PTR [rbx+0xc],eax
  41e087:	jle    0x41e152
  41e08d:	test   BYTE PTR [rbx+0x9],0x4
  41e091:	jne    0x41e120
  41e097:	sub    eax,0x1
  41e09a:	mov    DWORD PTR [rbx+0xc],eax
  41e09d:	nop    DWORD PTR [rax]
  41e0a0:	mov    rdx,rbx
  41e0a3:	mov    ecx,0x20
  41e0a8:	call   0x41dee0
  41e0ad:	mov    eax,DWORD PTR [rbx+0xc]
  41e0b0:	mov    edx,eax
  41e0b2:	sub    eax,0x1
  41e0b5:	test   edx,edx
  41e0b7:	mov    DWORD PTR [rbx+0xc],eax
  41e0ba:	jne    0x41e0a0
  41e0bc:	test   edi,edi
  41e0be:	lea    edx,[rdi-0x1]
  41e0c1:	je     0x41e140
  41e0c3:	lea    rdi,[rsi+rdx*1+0x1]
  41e0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e0d0:	add    rsi,0x1
  41e0d4:	movsx  ecx,BYTE PTR [rsi-0x1]
  41e0d8:	mov    rdx,rbx
  41e0db:	call   0x41dee0
  41e0e0:	cmp    rsi,rdi
  41e0e3:	jne    0x41e0d0
  41e0e5:	jmp    0x41e13d
  41e0e7:	nop    WORD PTR [rax+rax*1+0x0]
  41e0f0:	mov    eax,DWORD PTR [rbx+0xc]
  41e0f3:	mov    edi,edx
  41e0f5:	cmp    edi,eax
  41e0f7:	jl     0x41e080
  41e0f9:	test   edi,edi
  41e0fb:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41e102:	lea    edx,[rdi-0x1]
  41e105:	jne    0x41e0c3
  41e107:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  41e10e:	add    rsp,0x20
  41e112:	pop    rbx
  41e113:	pop    rsi
  41e114:	pop    rdi
  41e115:	ret    
  41e116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e120:	test   edi,edi
  41e122:	lea    edx,[rdi-0x1]
  41e125:	jne    0x41e0c3
  41e127:	sub    eax,0x1
  41e12a:	mov    DWORD PTR [rbx+0xc],eax
  41e12d:	nop    DWORD PTR [rax]
  41e130:	mov    rdx,rbx
  41e133:	mov    ecx,0x20
  41e138:	call   0x41dee0
  41e13d:	mov    eax,DWORD PTR [rbx+0xc]
  41e140:	lea    edx,[rax-0x1]
  41e143:	test   eax,eax
  41e145:	mov    DWORD PTR [rbx+0xc],edx
  41e148:	jg     0x41e130
  41e14a:	add    rsp,0x20
  41e14e:	pop    rbx
  41e14f:	pop    rsi
  41e150:	pop    rdi
  41e151:	ret    
  41e152:	test   edi,edi
  41e154:	lea    edx,[rdi-0x1]
  41e157:	jne    0x41e0c3
  41e15d:	sub    eax,0x1
  41e160:	mov    DWORD PTR [rbx+0xc],eax
  41e163:	jmp    0x41e10e
  41e165:	nop
  41e166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e170:	sub    rsp,0x38
  41e174:	test   ecx,ecx
  41e176:	mov    DWORD PTR [r8+0x10],0xffffffff
  41e17e:	je     0x41e1c4
  41e180:	lea    rcx,[rsp+0x20]
  41e185:	mov    r11d,DWORD PTR [r8+0x8]
  41e189:	mov    BYTE PTR [rsp+0x20],0x2d
  41e18e:	lea    r10,[rcx+0x1]
  41e192:	and    r11d,0x20
  41e196:	xor    r9d,r9d
  41e199:	movzx  eax,BYTE PTR [rdx+r9*1]
  41e19e:	and    eax,0xffffffdf
  41e1a1:	or     eax,r11d
  41e1a4:	mov    BYTE PTR [r10+r9*1],al
  41e1a8:	add    r9,0x1
  41e1ac:	cmp    r9,0x3
  41e1b0:	jne    0x41e199
  41e1b2:	lea    rdx,[r10+0x3]
  41e1b6:	sub    rdx,rcx
  41e1b9:	call   0x41e060
  41e1be:	nop
  41e1bf:	add    rsp,0x38
  41e1c3:	ret    
  41e1c4:	mov    r11d,DWORD PTR [r8+0x8]
  41e1c8:	test   r11d,0x100
  41e1cf:	je     0x41e1e1
  41e1d1:	lea    rcx,[rsp+0x20]
  41e1d6:	mov    BYTE PTR [rsp+0x20],0x2b
  41e1db:	lea    r10,[rcx+0x1]
  41e1df:	jmp    0x41e192
  41e1e1:	test   r11b,0x40
  41e1e5:	je     0x41e200
  41e1e7:	lea    rcx,[rsp+0x20]
  41e1ec:	mov    BYTE PTR [rsp+0x20],0x20
  41e1f1:	lea    r10,[rcx+0x1]
  41e1f5:	jmp    0x41e192
  41e1f7:	nop    WORD PTR [rax+rax*1+0x0]
  41e200:	lea    rcx,[rsp+0x20]
  41e205:	mov    r10,rcx
  41e208:	jmp    0x41e192
  41e20a:	nop    WORD PTR [rax+rax*1+0x0]
  41e210:	push   rbp
  41e211:	push   r12
  41e213:	push   rdi
  41e214:	push   rsi
  41e215:	push   rbx
  41e216:	mov    rbp,rsp
  41e219:	sub    rsp,0x30
  41e21d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  41e221:	mov    rsi,rcx
  41e224:	je     0x41e2c0
  41e22a:	movzx  edx,WORD PTR [rcx+0x18]
  41e22e:	test   dx,dx
  41e231:	je     0x41e292
  41e233:	movsxd rax,DWORD PTR [rsi+0x14]
  41e237:	mov    r12,rsp
  41e23a:	add    rax,0xf
  41e23e:	and    rax,0xfffffffffffffff0
  41e242:	call   0x41d290
  41e247:	sub    rsp,rax
  41e24a:	lea    r8,[rbp-0x4]
  41e24e:	mov    DWORD PTR [rbp-0x4],0x0
  41e255:	lea    rbx,[rsp+0x20]
  41e25a:	mov    rcx,rbx
  41e25d:	call   0x41db30
  41e262:	test   eax,eax
  41e264:	jle    0x41e2b0
  41e266:	sub    eax,0x1
  41e269:	lea    rdi,[rbx+rax*1+0x1]
  41e26e:	xchg   ax,ax
  41e270:	add    rbx,0x1
  41e274:	movsx  ecx,BYTE PTR [rbx-0x1]
  41e278:	mov    rdx,rsi
  41e27b:	call   0x41dee0
  41e280:	cmp    rbx,rdi
  41e283:	jne    0x41e270
  41e285:	mov    rsp,r12
  41e288:	mov    rsp,rbp
  41e28b:	pop    rbx
  41e28c:	pop    rsi
  41e28d:	pop    rdi
  41e28e:	pop    r12
  41e290:	pop    rbp
  41e291:	ret    
  41e292:	mov    rdx,rsi
  41e295:	mov    ecx,0x2e
  41e29a:	call   0x41dee0
  41e29f:	nop
  41e2a0:	mov    rsp,rbp
  41e2a3:	pop    rbx
  41e2a4:	pop    rsi
  41e2a5:	pop    rdi
  41e2a6:	pop    r12
  41e2a8:	pop    rbp
  41e2a9:	ret    
  41e2aa:	nop    WORD PTR [rax+rax*1+0x0]
  41e2b0:	mov    rdx,rsi
  41e2b3:	mov    ecx,0x2e
  41e2b8:	call   0x41dee0
  41e2bd:	jmp    0x41e285
  41e2bf:	nop
  41e2c0:	mov    DWORD PTR [rbp-0x4],0x0
  41e2c7:	call   0x422828
  41e2cc:	mov    rdx,QWORD PTR [rax]
  41e2cf:	lea    rcx,[rbp-0x6]
  41e2d3:	lea    r9,[rbp-0x4]
  41e2d7:	mov    r8d,0x10
  41e2dd:	call   0x4224f0
  41e2e2:	test   eax,eax
  41e2e4:	jle    0x41e2f6
  41e2e6:	movzx  edx,WORD PTR [rbp-0x6]
  41e2ea:	mov    WORD PTR [rsi+0x18],dx
  41e2ee:	mov    DWORD PTR [rsi+0x14],eax
  41e2f1:	jmp    0x41e22e
  41e2f6:	movzx  edx,WORD PTR [rsi+0x18]
  41e2fa:	jmp    0x41e2ee
  41e2fc:	nop    DWORD PTR [rax+0x0]
  41e300:	push   r12
  41e302:	push   rbp
  41e303:	push   rdi
  41e304:	push   rsi
  41e305:	push   rbx
  41e306:	sub    rsp,0x20
  41e30a:	mov    esi,r8d
  41e30d:	mov    ebp,ecx
  41e30f:	mov    rdi,rdx
  41e312:	test   esi,esi
  41e314:	mov    rbx,r9
  41e317:	mov    r8d,DWORD PTR [r9+0xc]
  41e31b:	jle    0x41e4f2
  41e321:	cmp    esi,r8d
  41e324:	jg     0x41e460
  41e32a:	sub    r8d,esi
  41e32d:	mov    DWORD PTR [r9+0xc],r8d
  41e331:	test   r8d,r8d
  41e334:	js     0x41e460
  41e33a:	mov    eax,DWORD PTR [rbx+0x10]
  41e33d:	cmp    eax,r8d
  41e340:	jge    0x41e460
  41e346:	sub    r8d,eax
  41e349:	test   r8d,r8d
  41e34c:	mov    DWORD PTR [rbx+0xc],r8d
  41e350:	jle    0x41e46d
  41e356:	test   eax,eax
  41e358:	jle    0x41e5a5
  41e35e:	sub    r8d,0x1
  41e362:	test   esi,esi
  41e364:	mov    DWORD PTR [rbx+0xc],r8d
  41e368:	jle    0x41e374
  41e36a:	test   BYTE PTR [rbx+0x9],0x10
  41e36e:	jne    0x41e47f
  41e374:	test   r8d,r8d
  41e377:	jle    0x41e3bd
  41e379:	test   ebp,ebp
  41e37b:	jne    0x41e38b
  41e37d:	mov    eax,DWORD PTR [rbx+0x8]
  41e380:	test   eax,0x1c0
  41e385:	je     0x41e585
  41e38b:	sub    r8d,0x1
  41e38f:	test   r8d,r8d
  41e392:	mov    DWORD PTR [rbx+0xc],r8d
  41e396:	jle    0x41e3bd
  41e398:	test   DWORD PTR [rbx+0x8],0x600
  41e39f:	jne    0x41e3bd
  41e3a1:	jmp    0x41e3b0
  41e3a3:	mov    rdx,rbx
  41e3a6:	mov    ecx,0x20
  41e3ab:	call   0x41dee0
  41e3b0:	mov    eax,DWORD PTR [rbx+0xc]
  41e3b3:	lea    edx,[rax-0x1]
  41e3b6:	test   eax,eax
  41e3b8:	mov    DWORD PTR [rbx+0xc],edx
  41e3bb:	jg     0x41e3a3
  41e3bd:	test   ebp,ebp
  41e3bf:	jne    0x41e4e0
  41e3c5:	mov    eax,DWORD PTR [rbx+0x8]
  41e3c8:	test   ah,0x1
  41e3cb:	jne    0x41e510
  41e3d1:	test   al,0x40
  41e3d3:	jne    0x41e593
  41e3d9:	mov    edx,DWORD PTR [rbx+0xc]
  41e3dc:	test   edx,edx
  41e3de:	jle    0x41e3f3
  41e3e0:	mov    eax,DWORD PTR [rbx+0x8]
  41e3e3:	and    eax,0x600
  41e3e8:	cmp    eax,0x200
  41e3ed:	je     0x41e522
  41e3f3:	test   esi,esi
  41e3f5:	jle    0x41e552
  41e3fb:	lea    r12,[rbx+0x20]
  41e3ff:	mov    ebp,0x55555556
  41e404:	movzx  eax,BYTE PTR [rdi]
  41e407:	mov    ecx,0x30
  41e40c:	test   al,al
  41e40e:	je     0x41e417
  41e410:	add    rdi,0x1
  41e414:	movsx  ecx,al
  41e417:	mov    rdx,rbx
  41e41a:	call   0x41dee0
  41e41f:	sub    esi,0x1
  41e422:	je     0x41e640
  41e428:	test   BYTE PTR [rbx+0x9],0x10
  41e42c:	je     0x41e404
  41e42e:	cmp    WORD PTR [rbx+0x20],0x0
  41e433:	je     0x41e404
  41e435:	mov    eax,esi
  41e437:	imul   ebp
  41e439:	mov    eax,esi
  41e43b:	sar    eax,0x1f
  41e43e:	sub    edx,eax
  41e440:	lea    eax,[rdx+rdx*2]
  41e443:	cmp    esi,eax
  41e445:	jne    0x41e404
  41e447:	mov    r8,rbx
  41e44a:	mov    edx,0x1
  41e44f:	mov    rcx,r12
  41e452:	call   0x41df40
  41e457:	jmp    0x41e404
  41e459:	nop    DWORD PTR [rax+0x0]
  41e460:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41e467:	mov    r8d,0xffffffff
  41e46d:	test   esi,esi
  41e46f:	jle    0x41e3bd
  41e475:	test   BYTE PTR [rbx+0x9],0x10
  41e479:	je     0x41e3bd
  41e47f:	cmp    WORD PTR [rbx+0x20],0x0
  41e484:	je     0x41e374
  41e48a:	lea    ecx,[rsi+0x2]
  41e48d:	mov    edx,0x55555556
  41e492:	mov    eax,ecx
  41e494:	sar    ecx,0x1f
  41e497:	imul   edx
  41e499:	sub    edx,ecx
  41e49b:	cmp    edx,0x1
  41e49e:	jle    0x41e374
  41e4a4:	test   r8d,r8d
  41e4a7:	jle    0x41e3bd
  41e4ad:	mov    eax,r8d
  41e4b0:	sub    eax,edx
  41e4b2:	add    eax,0x1
  41e4b5:	jmp    0x41e4c9
  41e4b7:	nop    WORD PTR [rax+rax*1+0x0]
  41e4c0:	test   r8d,r8d
  41e4c3:	je     0x41e634
  41e4c9:	sub    r8d,0x1
  41e4cd:	cmp    r8d,eax
  41e4d0:	jne    0x41e4c0
  41e4d2:	mov    DWORD PTR [rbx+0xc],r8d
  41e4d6:	jmp    0x41e374
  41e4db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4e0:	mov    rdx,rbx
  41e4e3:	mov    ecx,0x2d
  41e4e8:	call   0x41dee0
  41e4ed:	jmp    0x41e3d9
  41e4f2:	test   r8d,r8d
  41e4f5:	jle    0x41e331
  41e4fb:	sub    r8d,0x1
  41e4ff:	mov    DWORD PTR [r9+0xc],r8d
  41e503:	jmp    0x41e33a
  41e508:	nop    DWORD PTR [rax+rax*1+0x0]
  41e510:	mov    rdx,rbx
  41e513:	mov    ecx,0x2b
  41e518:	call   0x41dee0
  41e51d:	jmp    0x41e3d9
  41e522:	sub    edx,0x1
  41e525:	mov    DWORD PTR [rbx+0xc],edx
  41e528:	nop    DWORD PTR [rax+rax*1+0x0]
  41e530:	mov    rdx,rbx
  41e533:	mov    ecx,0x30
  41e538:	call   0x41dee0
  41e53d:	mov    eax,DWORD PTR [rbx+0xc]
  41e540:	lea    edx,[rax-0x1]
  41e543:	test   eax,eax
  41e545:	mov    DWORD PTR [rbx+0xc],edx
  41e548:	jg     0x41e530
  41e54a:	test   esi,esi
  41e54c:	jg     0x41e3fb
  41e552:	mov    rdx,rbx
  41e555:	mov    ecx,0x30
  41e55a:	call   0x41dee0
  41e55f:	mov    eax,DWORD PTR [rbx+0x10]
  41e562:	test   eax,eax
  41e564:	jg     0x41e5d2
  41e566:	test   BYTE PTR [rbx+0x9],0x8
  41e56a:	jne    0x41e5d2
  41e56c:	test   esi,esi
  41e56e:	jne    0x41e616
  41e574:	sub    eax,0x1
  41e577:	mov    DWORD PTR [rbx+0x10],eax
  41e57a:	add    rsp,0x20
  41e57e:	pop    rbx
  41e57f:	pop    rsi
  41e580:	pop    rdi
  41e581:	pop    rbp
  41e582:	pop    r12
  41e584:	ret    
  41e585:	test   ah,0x6
  41e588:	je     0x41e3b0
  41e58e:	jmp    0x41e3c8
  41e593:	mov    rdx,rbx
  41e596:	mov    ecx,0x20
  41e59b:	call   0x41dee0
  41e5a0:	jmp    0x41e3d9
  41e5a5:	mov    eax,DWORD PTR [rbx+0x8]
  41e5a8:	test   ah,0x8
  41e5ab:	jne    0x41e35e
  41e5b1:	test   esi,esi
  41e5b3:	jle    0x41e379
  41e5b9:	test   ah,0x10
  41e5bc:	je     0x41e379
  41e5c2:	cmp    WORD PTR [rbx+0x20],0x0
  41e5c7:	jne    0x41e48a
  41e5cd:	jmp    0x41e379
  41e5d2:	mov    rcx,rbx
  41e5d5:	call   0x41e210
  41e5da:	test   esi,esi
  41e5dc:	je     0x41e5fb
  41e5de:	jmp    0x41e613
  41e5e0:	movzx  eax,BYTE PTR [rdi]
  41e5e3:	mov    ecx,0x30
  41e5e8:	test   al,al
  41e5ea:	je     0x41e5f3
  41e5ec:	add    rdi,0x1
  41e5f0:	movsx  ecx,al
  41e5f3:	mov    rdx,rbx
  41e5f6:	call   0x41dee0
  41e5fb:	mov    eax,DWORD PTR [rbx+0x10]
  41e5fe:	lea    edx,[rax-0x1]
  41e601:	test   eax,eax
  41e603:	mov    DWORD PTR [rbx+0x10],edx
  41e606:	jg     0x41e5e0
  41e608:	add    rsp,0x20
  41e60c:	pop    rbx
  41e60d:	pop    rsi
  41e60e:	pop    rdi
  41e60f:	pop    rbp
  41e610:	pop    r12
  41e612:	ret    
  41e613:	mov    eax,DWORD PTR [rbx+0x10]
  41e616:	add    eax,esi
  41e618:	mov    DWORD PTR [rbx+0x10],eax
  41e61b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e620:	mov    rdx,rbx
  41e623:	mov    ecx,0x30
  41e628:	call   0x41dee0
  41e62d:	add    esi,0x1
  41e630:	jne    0x41e620
  41e632:	jmp    0x41e5fb
  41e634:	mov    DWORD PTR [rbx+0xc],0x0
  41e63b:	jmp    0x41e3bd
  41e640:	mov    eax,DWORD PTR [rbx+0x10]
  41e643:	test   eax,eax
  41e645:	jle    0x41e651
  41e647:	mov    rcx,rbx
  41e64a:	call   0x41e210
  41e64f:	jmp    0x41e5fb
  41e651:	test   BYTE PTR [rbx+0x9],0x8
  41e655:	jne    0x41e647
  41e657:	jmp    0x41e574
  41e65c:	nop    DWORD PTR [rax+0x0]
  41e660:	push   rsi
  41e661:	push   rbx
  41e662:	sub    rsp,0x68
  41e666:	mov    r8d,DWORD PTR [rdx+0x10]
  41e66a:	fld    TBYTE PTR [rcx]
  41e66c:	mov    rbx,rdx
  41e66f:	test   r8d,r8d
  41e672:	js     0x41e710
  41e678:	lea    rdx,[rsp+0x30]
  41e67d:	lea    r9,[rsp+0x4c]
  41e682:	mov    ecx,0x3
  41e687:	fstp   TBYTE PTR [rsp+0x50]
  41e68b:	mov    rax,QWORD PTR [rsp+0x50]
  41e690:	mov    QWORD PTR [rsp+0x30],rax
  41e695:	mov    rax,QWORD PTR [rsp+0x58]
  41e69a:	mov    QWORD PTR [rsp+0x38],rax
  41e69f:	lea    rax,[rsp+0x48]
  41e6a4:	mov    QWORD PTR [rsp+0x20],rax
  41e6a9:	call   0x41dde0
  41e6ae:	mov    r8d,DWORD PTR [rsp+0x4c]
  41e6b3:	mov    rsi,rax
  41e6b6:	cmp    r8d,0xffff8000
  41e6bd:	je     0x41e722
  41e6bf:	mov    ecx,DWORD PTR [rsp+0x48]
  41e6c3:	mov    rdx,rax
  41e6c6:	mov    r9,rbx
  41e6c9:	call   0x41e300
  41e6ce:	mov    eax,DWORD PTR [rbx+0xc]
  41e6d1:	lea    edx,[rax-0x1]
  41e6d4:	test   eax,eax
  41e6d6:	mov    DWORD PTR [rbx+0xc],edx
  41e6d9:	jle    0x41e6fe
  41e6db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e6e0:	mov    rdx,rbx
  41e6e3:	mov    ecx,0x20
  41e6e8:	call   0x41dee0
  41e6ed:	mov    r8d,DWORD PTR [rbx+0xc]
  41e6f1:	lea    r9d,[r8-0x1]
  41e6f5:	test   r8d,r8d
  41e6f8:	mov    DWORD PTR [rbx+0xc],r9d
  41e6fc:	jg     0x41e6e0
  41e6fe:	mov    rcx,rsi
  41e701:	call   0x4200f0
  41e706:	nop
  41e707:	add    rsp,0x68
  41e70b:	pop    rbx
  41e70c:	pop    rsi
  41e70d:	ret    
  41e70e:	xchg   ax,ax
  41e710:	mov    DWORD PTR [rdx+0x10],0x6
  41e717:	mov    r8d,0x6
  41e71d:	jmp    0x41e678
  41e722:	mov    ecx,DWORD PTR [rsp+0x48]
  41e726:	mov    r8,rbx
  41e729:	mov    rdx,rax
  41e72c:	call   0x41e170
  41e731:	mov    rcx,rsi
  41e734:	call   0x4200f0
  41e739:	nop
  41e73a:	add    rsp,0x68
  41e73e:	pop    rbx
  41e73f:	pop    rsi
  41e740:	ret    
  41e741:	nop    DWORD PTR [rax+rax*1+0x0]
  41e746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e750:	push   rbp
  41e751:	push   r13
  41e753:	push   r12
  41e755:	push   rdi
  41e756:	push   rsi
  41e757:	push   rbx
  41e758:	sub    rsp,0x28
  41e75c:	lea    rbp,[rsp+0x80]
  41e764:	mov    ebx,DWORD PTR [rdx+0x10]
  41e767:	mov    r11d,DWORD PTR [rdx+0x8]
  41e76b:	mov    r8d,0x0
  41e771:	mov    rsi,rdx
  41e774:	test   ebx,ebx
  41e776:	cmovns r8d,ebx
  41e77a:	add    r8d,0x17
  41e77e:	test   r11d,0x1000
  41e785:	je     0x41e792
  41e787:	cmp    WORD PTR [rdx+0x20],0x0
  41e78c:	jne    0x41e982
  41e792:	movsxd r13,DWORD PTR [rsi+0xc]
  41e796:	movsxd rax,r8d
  41e799:	cmp    r8d,r13d
  41e79c:	cmovl  rax,r13
  41e7a0:	add    rax,0x1e
  41e7a4:	and    rax,0xfffffffffffffff0
  41e7a8:	call   0x41d290
  41e7ad:	sub    rsp,rax
  41e7b0:	test   r11b,0x80
  41e7b4:	lea    r12,[rsp+0x20]
  41e7b9:	je     0x41e7cc
  41e7bb:	test   rcx,rcx
  41e7be:	js     0x41ea10
  41e7c4:	and    r11b,0x7f
  41e7c8:	mov    DWORD PTR [rsi+0x8],r11d
  41e7cc:	test   rcx,rcx
  41e7cf:	je     0x41ea18
  41e7d5:	mov    r10d,r11d
  41e7d8:	mov    r8,r12
  41e7db:	movabs r9,0xcccccccccccccccd
  41e7e5:	and    r10d,0x1000
  41e7ec:	jmp    0x41e823
  41e7ee:	xchg   ax,ax
  41e7f0:	cmp    r12,rdi
  41e7f3:	je     0x41e820
  41e7f5:	test   r10d,r10d
  41e7f8:	je     0x41e820
  41e7fa:	cmp    WORD PTR [rsi+0x20],0x0
  41e7ff:	je     0x41e820
  41e801:	mov    rax,rdi
  41e804:	sub    rax,r12
  41e807:	cqo    
  41e809:	shr    rdx,0x3e
  41e80d:	add    rax,rdx
  41e810:	and    eax,0x3
  41e813:	sub    rax,rdx
  41e816:	cmp    rax,0x3
  41e81a:	je     0x41e960
  41e820:	mov    r8,rdi
  41e823:	mov    rax,rcx
  41e826:	lea    rdi,[r8+0x1]
  41e82a:	mul    r9
  41e82d:	shr    rdx,0x3
  41e831:	lea    rax,[rdx+rdx*4]
  41e835:	add    rax,rax
  41e838:	sub    rcx,rax
  41e83b:	add    ecx,0x30
  41e83e:	test   rdx,rdx
  41e841:	mov    BYTE PTR [r8],cl
  41e844:	mov    rcx,rdx
  41e847:	jne    0x41e7f0
  41e849:	test   ebx,ebx
  41e84b:	jle    0x41e885
  41e84d:	mov    rax,r12
  41e850:	sub    rax,rdi
  41e853:	add    eax,ebx
  41e855:	test   eax,eax
  41e857:	jle    0x41e885
  41e859:	sub    eax,0x1
  41e85c:	mov    rdx,rax
  41e85f:	lea    rcx,[rdi+rax*1+0x1]
  41e864:	mov    rax,rdi
  41e867:	nop    WORD PTR [rax+rax*1+0x0]
  41e870:	add    rax,0x1
  41e874:	mov    BYTE PTR [rax-0x1],0x30
  41e878:	cmp    rax,rcx
  41e87b:	jne    0x41e870
  41e87d:	movsxd rax,edx
  41e880:	lea    rdi,[rdi+rax*1+0x1]
  41e885:	cmp    r12,rdi
  41e888:	jne    0x41e895
  41e88a:	test   ebx,ebx
  41e88c:	je     0x41e895
  41e88e:	mov    BYTE PTR [rdi],0x30
  41e891:	add    rdi,0x1
  41e895:	test   r13d,r13d
  41e898:	jle    0x41e8fe
  41e89a:	mov    rax,r12
  41e89d:	sub    rax,rdi
  41e8a0:	add    r13d,eax
  41e8a3:	test   r13d,r13d
  41e8a6:	mov    DWORD PTR [rsi+0xc],r13d
  41e8aa:	jle    0x41e8fe
  41e8ac:	test   r11d,0x1c0
  41e8b3:	je     0x41e8bd
  41e8b5:	sub    r13d,0x1
  41e8b9:	mov    DWORD PTR [rsi+0xc],r13d
  41e8bd:	test   ebx,ebx
  41e8bf:	js     0x41e9c0
  41e8c5:	test   r11d,0x400
  41e8cc:	jne    0x41e8fe
  41e8ce:	mov    eax,DWORD PTR [rsi+0xc]
  41e8d1:	lea    edx,[rax-0x1]
  41e8d4:	test   eax,eax
  41e8d6:	mov    DWORD PTR [rsi+0xc],edx
  41e8d9:	jle    0x41e8fe
  41e8db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e8e0:	mov    rdx,rsi
  41e8e3:	mov    ecx,0x20
  41e8e8:	call   0x41dee0
  41e8ed:	mov    eax,DWORD PTR [rsi+0xc]
  41e8f0:	lea    edx,[rax-0x1]
  41e8f3:	test   eax,eax
  41e8f5:	mov    DWORD PTR [rsi+0xc],edx
  41e8f8:	jg     0x41e8e0
  41e8fa:	mov    r11d,DWORD PTR [rsi+0x8]
  41e8fe:	test   r11b,0x80
  41e902:	je     0x41e970
  41e904:	lea    rbx,[rdi+0x1]
  41e908:	mov    BYTE PTR [rdi],0x2d
  41e90b:	cmp    r12,rbx
  41e90e:	jae    0x41e93e
  41e910:	sub    rbx,0x1
  41e914:	movsx  ecx,BYTE PTR [rbx]
  41e917:	mov    rdx,rsi
  41e91a:	call   0x41dee0
  41e91f:	cmp    rbx,r12
  41e922:	jne    0x41e910
  41e924:	mov    eax,DWORD PTR [rsi+0xc]
  41e927:	lea    edx,[rax-0x1]
  41e92a:	test   eax,eax
  41e92c:	mov    DWORD PTR [rsi+0xc],edx
  41e92f:	jle    0x41e94b
  41e931:	mov    rdx,rsi
  41e934:	mov    ecx,0x20
  41e939:	call   0x41dee0
  41e93e:	mov    eax,DWORD PTR [rsi+0xc]
  41e941:	lea    edx,[rax-0x1]
  41e944:	test   eax,eax
  41e946:	mov    DWORD PTR [rsi+0xc],edx
  41e949:	jg     0x41e931
  41e94b:	lea    rsp,[rbp-0x58]
  41e94f:	pop    rbx
  41e950:	pop    rsi
  41e951:	pop    rdi
  41e952:	pop    r12
  41e954:	pop    r13
  41e956:	pop    rbp
  41e957:	ret    
  41e958:	nop    DWORD PTR [rax+rax*1+0x0]
  41e960:	lea    rdi,[r8+0x2]
  41e964:	mov    BYTE PTR [r8+0x1],0x2c
  41e969:	jmp    0x41e820
  41e96e:	xchg   ax,ax
  41e970:	test   r11d,0x100
  41e977:	je     0x41e9a0
  41e979:	lea    rbx,[rdi+0x1]
  41e97d:	mov    BYTE PTR [rdi],0x2b
  41e980:	jmp    0x41e90b
  41e982:	mov    eax,r8d
  41e985:	mov    edx,0x55555556
  41e98a:	imul   edx
  41e98c:	mov    eax,r8d
  41e98f:	sar    eax,0x1f
  41e992:	sub    edx,eax
  41e994:	add    r8d,edx
  41e997:	jmp    0x41e792
  41e99c:	nop    DWORD PTR [rax+0x0]
  41e9a0:	and    r11d,0x40
  41e9a4:	mov    rbx,rdi
  41e9a7:	je     0x41e90b
  41e9ad:	add    rbx,0x1
  41e9b1:	mov    BYTE PTR [rdi],0x20
  41e9b4:	jmp    0x41e90b
  41e9b9:	nop    DWORD PTR [rax+0x0]
  41e9c0:	mov    eax,r11d
  41e9c3:	and    eax,0x600
  41e9c8:	cmp    eax,0x200
  41e9cd:	jne    0x41e8c5
  41e9d3:	mov    eax,DWORD PTR [rsi+0xc]
  41e9d6:	lea    ecx,[rax-0x1]
  41e9d9:	test   eax,eax
  41e9db:	mov    DWORD PTR [rsi+0xc],ecx
  41e9de:	jle    0x41e8fe
  41e9e4:	lea    rdx,[rdi+rcx*1+0x1]
  41e9e9:	mov    rax,rdi
  41e9ec:	nop    DWORD PTR [rax+0x0]
  41e9f0:	add    rax,0x1
  41e9f4:	mov    BYTE PTR [rax-0x1],0x30
  41e9f8:	cmp    rax,rdx
  41e9fb:	jne    0x41e9f0
  41e9fd:	lea    rdi,[rdi+rcx*1+0x1]
  41ea02:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41ea09:	jmp    0x41e8fe
  41ea0e:	xchg   ax,ax
  41ea10:	neg    rcx
  41ea13:	jmp    0x41e7cc
  41ea18:	mov    rdi,r12
  41ea1b:	jmp    0x41e849
  41ea20:	push   rdi
  41ea21:	push   rsi
  41ea22:	push   rbx
  41ea23:	sub    rsp,0x20
  41ea27:	mov    rsi,r9
  41ea2a:	lea    r9d,[r8-0x1]
  41ea2e:	mov    r8d,0x66666667
  41ea34:	mov    r10,rdx
  41ea37:	mov    eax,r9d
  41ea3a:	movsxd rbx,r9d
  41ea3d:	sar    r9d,0x1f
  41ea41:	imul   r8d
  41ea44:	sar    edx,0x2
  41ea47:	mov    r8d,edx
  41ea4a:	sub    r8d,r9d
  41ea4d:	mov    r9d,0x1
  41ea53:	je     0x41ea7b
  41ea55:	mov    r11d,0x66666667
  41ea5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ea60:	mov    eax,r8d
  41ea63:	sar    r8d,0x1f
  41ea67:	add    r9d,0x1
  41ea6b:	imul   r11d
  41ea6e:	mov    eax,edx
  41ea70:	sar    eax,0x2
  41ea73:	sub    eax,r8d
  41ea76:	mov    r8d,eax
  41ea79:	jne    0x41ea60
  41ea7b:	mov    edi,DWORD PTR [rsi+0x2c]
  41ea7e:	mov    eax,DWORD PTR [rsi+0xc]
  41ea81:	cmp    r9d,edi
  41ea84:	cmovge edi,r9d
  41ea88:	lea    edx,[rdi+0x2]
  41ea8b:	cmp    eax,edx
  41ea8d:	jg     0x41eae2
  41ea8f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41ea96:	mov    r9,rsi
  41ea99:	mov    rdx,r10
  41ea9c:	mov    r8d,0x1
  41eaa2:	call   0x41e300
  41eaa7:	mov    ecx,DWORD PTR [rsi+0x8]
  41eaaa:	mov    eax,DWORD PTR [rsi+0x2c]
  41eaad:	mov    rdx,rsi
  41eab0:	mov    DWORD PTR [rsi+0x10],eax
  41eab3:	mov    eax,ecx
  41eab5:	and    ecx,0x20
  41eab8:	or     eax,0x1c0
  41eabd:	or     ecx,0x45
  41eac0:	mov    DWORD PTR [rsi+0x8],eax
  41eac3:	call   0x41dee0
  41eac8:	lea    r9d,[rdi+0x1]
  41eacc:	add    DWORD PTR [rsi+0xc],r9d
  41ead0:	mov    rdx,rsi
  41ead3:	mov    rcx,rbx
  41ead6:	add    rsp,0x20
  41eada:	pop    rbx
  41eadb:	pop    rsi
  41eadc:	pop    rdi
  41eadd:	jmp    0x41e750
  41eae2:	sub    eax,edx
  41eae4:	mov    DWORD PTR [rsi+0xc],eax
  41eae7:	jmp    0x41ea96
  41eae9:	nop    DWORD PTR [rax+0x0]
  41eaf0:	push   rsi
  41eaf1:	push   rbx
  41eaf2:	sub    rsp,0x68
  41eaf6:	mov    eax,DWORD PTR [rdx+0x10]
  41eaf9:	fld    TBYTE PTR [rcx]
  41eafb:	mov    rbx,rdx
  41eafe:	test   eax,eax
  41eb00:	lea    r8d,[rax+0x1]
  41eb04:	js     0x41eb70
  41eb06:	lea    rdx,[rsp+0x30]
  41eb0b:	lea    r9,[rsp+0x4c]
  41eb10:	mov    ecx,0x2
  41eb15:	fstp   TBYTE PTR [rsp+0x50]
  41eb19:	mov    rax,QWORD PTR [rsp+0x50]
  41eb1e:	mov    QWORD PTR [rsp+0x30],rax
  41eb23:	mov    rax,QWORD PTR [rsp+0x58]
  41eb28:	mov    QWORD PTR [rsp+0x38],rax
  41eb2d:	lea    rax,[rsp+0x48]
  41eb32:	mov    QWORD PTR [rsp+0x20],rax
  41eb37:	call   0x41dde0
  41eb3c:	mov    r8d,DWORD PTR [rsp+0x4c]
  41eb41:	mov    rsi,rax
  41eb44:	cmp    r8d,0xffff8000
  41eb4b:	je     0x41eb80
  41eb4d:	mov    ecx,DWORD PTR [rsp+0x48]
  41eb51:	mov    r9,rbx
  41eb54:	mov    rdx,rax
  41eb57:	call   0x41ea20
  41eb5c:	mov    rcx,rsi
  41eb5f:	call   0x4200f0
  41eb64:	nop
  41eb65:	add    rsp,0x68
  41eb69:	pop    rbx
  41eb6a:	pop    rsi
  41eb6b:	ret    
  41eb6c:	nop    DWORD PTR [rax+0x0]
  41eb70:	mov    DWORD PTR [rdx+0x10],0x6
  41eb77:	mov    r8d,0x7
  41eb7d:	jmp    0x41eb06
  41eb7f:	nop
  41eb80:	mov    ecx,DWORD PTR [rsp+0x48]
  41eb84:	mov    r8,rbx
  41eb87:	mov    rdx,rax
  41eb8a:	call   0x41e170
  41eb8f:	mov    rcx,rsi
  41eb92:	call   0x4200f0
  41eb97:	nop
  41eb98:	add    rsp,0x68
  41eb9c:	pop    rbx
  41eb9d:	pop    rsi
  41eb9e:	ret    
  41eb9f:	nop
  41eba0:	push   rsi
  41eba1:	push   rbx
  41eba2:	sub    rsp,0x78
  41eba6:	mov    r8d,DWORD PTR [rdx+0x10]
  41ebaa:	fld    TBYTE PTR [rcx]
  41ebac:	mov    rbx,rdx
  41ebaf:	test   r8d,r8d
  41ebb2:	js     0x41ecf0
  41ebb8:	je     0x41ecd0
  41ebbe:	lea    rdx,[rsp+0x40]
  41ebc3:	lea    r9,[rsp+0x5c]
  41ebc8:	mov    ecx,0x2
  41ebcd:	fstp   TBYTE PTR [rsp+0x60]
  41ebd1:	mov    rax,QWORD PTR [rsp+0x60]
  41ebd6:	mov    QWORD PTR [rsp+0x40],rax
  41ebdb:	mov    rax,QWORD PTR [rsp+0x68]
  41ebe0:	mov    QWORD PTR [rsp+0x48],rax
  41ebe5:	lea    rax,[rsp+0x58]
  41ebea:	mov    QWORD PTR [rsp+0x20],rax
  41ebef:	call   0x41dde0
  41ebf4:	mov    r8d,DWORD PTR [rsp+0x5c]
  41ebf9:	mov    rsi,rax
  41ebfc:	cmp    r8d,0xffff8000
  41ec03:	je     0x41ed10
  41ec09:	cmp    r8d,0xfffffffd
  41ec0d:	jl     0x41ec90
  41ec13:	mov    eax,DWORD PTR [rbx+0x10]
  41ec16:	cmp    r8d,eax
  41ec19:	jg     0x41ec90
  41ec1b:	test   BYTE PTR [rbx+0x9],0x8
  41ec1f:	jne    0x41ed02
  41ec25:	mov    rcx,rsi
  41ec28:	mov    DWORD PTR [rsp+0x3c],r8d
  41ec2d:	call   0x4227a8
  41ec32:	mov    r8d,DWORD PTR [rsp+0x3c]
  41ec37:	sub    eax,r8d
  41ec3a:	test   eax,eax
  41ec3c:	mov    DWORD PTR [rbx+0x10],eax
  41ec3f:	js     0x41ed21
  41ec45:	mov    ecx,DWORD PTR [rsp+0x58]
  41ec49:	mov    rdx,rsi
  41ec4c:	mov    r9,rbx
  41ec4f:	call   0x41e300
  41ec54:	mov    eax,DWORD PTR [rbx+0xc]
  41ec57:	lea    edx,[rax-0x1]
  41ec5a:	test   eax,eax
  41ec5c:	mov    DWORD PTR [rbx+0xc],edx
  41ec5f:	jle    0x41ecbd
  41ec61:	mov    rdx,rbx
  41ec64:	mov    ecx,0x20
  41ec69:	call   0x41dee0
  41ec6e:	mov    r8d,DWORD PTR [rbx+0xc]
  41ec72:	lea    r9d,[r8-0x1]
  41ec76:	test   r8d,r8d
  41ec79:	mov    DWORD PTR [rbx+0xc],r9d
  41ec7d:	jg     0x41ec61
  41ec7f:	mov    rcx,rsi
  41ec82:	call   0x4200f0
  41ec87:	nop
  41ec88:	add    rsp,0x78
  41ec8c:	pop    rbx
  41ec8d:	pop    rsi
  41ec8e:	ret    
  41ec8f:	nop
  41ec90:	test   BYTE PTR [rbx+0x9],0x8
  41ec94:	jne    0x41ece2
  41ec96:	mov    rcx,rsi
  41ec99:	mov    DWORD PTR [rsp+0x3c],r8d
  41ec9e:	call   0x4227a8
  41eca3:	mov    r8d,DWORD PTR [rsp+0x3c]
  41eca8:	sub    eax,0x1
  41ecab:	mov    DWORD PTR [rbx+0x10],eax
  41ecae:	mov    ecx,DWORD PTR [rsp+0x58]
  41ecb2:	mov    r9,rbx
  41ecb5:	mov    rdx,rsi
  41ecb8:	call   0x41ea20
  41ecbd:	mov    rcx,rsi
  41ecc0:	call   0x4200f0
  41ecc5:	nop
  41ecc6:	add    rsp,0x78
  41ecca:	pop    rbx
  41eccb:	pop    rsi
  41eccc:	ret    
  41eccd:	nop    DWORD PTR [rax]
  41ecd0:	mov    DWORD PTR [rdx+0x10],0x1
  41ecd7:	mov    r8d,0x1
  41ecdd:	jmp    0x41ebbe
  41ece2:	sub    DWORD PTR [rbx+0x10],0x1
  41ece6:	jmp    0x41ecae
  41ece8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ecf0:	mov    DWORD PTR [rdx+0x10],0x6
  41ecf7:	mov    r8d,0x6
  41ecfd:	jmp    0x41ebbe
  41ed02:	sub    eax,r8d
  41ed05:	mov    DWORD PTR [rbx+0x10],eax
  41ed08:	jmp    0x41ec45
  41ed0d:	nop    DWORD PTR [rax]
  41ed10:	mov    ecx,DWORD PTR [rsp+0x58]
  41ed14:	mov    r8,rbx
  41ed17:	mov    rdx,rax
  41ed1a:	call   0x41e170
  41ed1f:	jmp    0x41ecbd
  41ed21:	mov    edx,DWORD PTR [rbx+0xc]
  41ed24:	test   edx,edx
  41ed26:	jle    0x41ec45
  41ed2c:	add    eax,edx
  41ed2e:	mov    DWORD PTR [rbx+0xc],eax
  41ed31:	jmp    0x41ec45
  41ed36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed40:	push   rbp
  41ed41:	push   r14
  41ed43:	push   r13
  41ed45:	push   r12
  41ed47:	push   rdi
  41ed48:	push   rsi
  41ed49:	push   rbx
  41ed4a:	mov    rbp,rsp
  41ed4d:	sub    rsp,0x20
  41ed51:	mov    r10d,0x12
  41ed57:	mov    eax,0x18
  41ed5c:	cmp    ecx,0x6f
  41ed5f:	mov    rbx,r8
  41ed62:	mov    r8d,DWORD PTR [r8+0x10]
  41ed66:	mov    r11d,ecx
  41ed69:	setne  cl
  41ed6c:	mov    edi,DWORD PTR [rbx+0x8]
  41ed6f:	movzx  ecx,cl
  41ed72:	cmovne eax,r10d
  41ed76:	mov    r10b,0x0
  41ed79:	add    ecx,0x3
  41ed7c:	test   r8d,r8d
  41ed7f:	mov    r9,rdx
  41ed82:	cmovns r10d,r8d
  41ed86:	add    r10d,eax
  41ed89:	test   edi,0x1000
  41ed8f:	je     0x41ed9c
  41ed91:	cmp    WORD PTR [rbx+0x20],0x0
  41ed96:	jne    0x41ef63
  41ed9c:	movsxd r12,DWORD PTR [rbx+0xc]
  41eda0:	movsxd rax,r10d
  41eda3:	cmp    r10d,r12d
  41eda6:	cmovl  rax,r12
  41edaa:	add    rax,0x1e
  41edae:	and    rax,0xfffffffffffffff0
  41edb2:	call   0x41d290
  41edb7:	xor    edx,edx
  41edb9:	sub    rsp,rax
  41edbc:	cmp    r11d,0x6f
  41edc0:	lea    rsi,[rsp+0x20]
  41edc5:	setne  dl
  41edc8:	test   r9,r9
  41edcb:	lea    edx,[rdx*8+0x7]
  41edd2:	mov    r10,rsi
  41edd5:	je     0x41f082
  41eddb:	mov    r13d,r11d
  41edde:	and    r13d,0x20
  41ede2:	jmp    0x41edf0
  41ede4:	shr    r9,cl
  41ede7:	mov    BYTE PTR [r10-0x1],r14b
  41edeb:	test   r9,r9
  41edee:	je     0x41ee15
  41edf0:	mov    eax,edx
  41edf2:	add    r10,0x1
  41edf6:	and    eax,r9d
  41edf9:	lea    r14d,[rax+0x30]
  41edfd:	cmp    r14b,0x39
  41ee01:	jbe    0x41ede4
  41ee03:	add    eax,0x37
  41ee06:	shr    r9,cl
  41ee09:	or     eax,r13d
  41ee0c:	test   r9,r9
  41ee0f:	mov    BYTE PTR [r10-0x1],al
  41ee13:	jne    0x41edf0
  41ee15:	cmp    rsi,r10
  41ee18:	je     0x41f082
  41ee1e:	test   r8d,r8d
  41ee21:	jle    0x41efe2
  41ee27:	mov    rax,rsi
  41ee2a:	sub    rax,r10
  41ee2d:	add    eax,r8d
  41ee30:	test   eax,eax
  41ee32:	jle    0x41efe2
  41ee38:	sub    eax,0x1
  41ee3b:	mov    rdx,rax
  41ee3e:	lea    rcx,[r10+rax*1+0x1]
  41ee43:	mov    rax,r10
  41ee46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ee50:	add    rax,0x1
  41ee54:	mov    BYTE PTR [rax-0x1],0x30
  41ee58:	cmp    rax,rcx
  41ee5b:	jne    0x41ee50
  41ee5d:	movsxd rax,edx
  41ee60:	lea    r10,[r10+rax*1+0x1]
  41ee65:	cmp    rsi,r10
  41ee68:	jne    0x41ee80
  41ee6a:	test   r8d,r8d
  41ee6d:	je     0x41ee80
  41ee6f:	mov    BYTE PTR [r10],0x30
  41ee73:	add    r10,0x1
  41ee77:	nop    WORD PTR [rax+rax*1+0x0]
  41ee80:	mov    rax,r10
  41ee83:	sub    rax,rsi
  41ee86:	cmp    r12d,eax
  41ee89:	jle    0x41efb0
  41ee8f:	sub    r12d,eax
  41ee92:	test   r12d,r12d
  41ee95:	mov    DWORD PTR [rbx+0xc],r12d
  41ee99:	jle    0x41f0e7
  41ee9f:	cmp    r11d,0x6f
  41eea3:	mov    edx,DWORD PTR [rbx+0x8]
  41eea6:	je     0x41f070
  41eeac:	test   dh,0x8
  41eeaf:	je     0x41f030
  41eeb5:	lea    r13d,[r12-0x2]
  41eeba:	test   r13d,r13d
  41eebd:	jle    0x41eec8
  41eebf:	test   r8d,r8d
  41eec2:	js     0x41ef7d
  41eec8:	test   r13d,r13d
  41eecb:	mov    BYTE PTR [r10],r11b
  41eece:	lea    rdi,[r10+0x2]
  41eed2:	mov    BYTE PTR [r10+0x1],0x30
  41eed7:	jle    0x41efd8
  41eedd:	and    dh,0x4
  41eee0:	jne    0x41f003
  41eee6:	lea    r14d,[r13-0x1]
  41eeea:	mov    r12d,r14d
  41eeed:	nop    DWORD PTR [rax]
  41eef0:	sub    r12d,0x1
  41eef4:	mov    rdx,rbx
  41eef7:	mov    ecx,0x20
  41eefc:	call   0x41dee0
  41ef01:	lea    eax,[r12+0x1]
  41ef06:	test   eax,eax
  41ef08:	jg     0x41eef0
  41ef0a:	test   r14d,r14d
  41ef0d:	lea    r13d,[r14-0x1]
  41ef11:	mov    r12d,0x0
  41ef17:	cmovns r12d,r14d
  41ef1b:	sub    r13d,r12d
  41ef1e:	cmp    rsi,rdi
  41ef21:	jb     0x41f010
  41ef27:	nop    WORD PTR [rax+rax*1+0x0]
  41ef30:	test   r13d,r13d
  41ef33:	lea    esi,[r13-0x1]
  41ef37:	jle    0x41ef55
  41ef39:	nop    DWORD PTR [rax+0x0]
  41ef40:	mov    rdx,rbx
  41ef43:	mov    ecx,0x20
  41ef48:	sub    esi,0x1
  41ef4b:	call   0x41dee0
  41ef50:	cmp    esi,0xffffffff
  41ef53:	jne    0x41ef40
  41ef55:	mov    rsp,rbp
  41ef58:	pop    rbx
  41ef59:	pop    rsi
  41ef5a:	pop    rdi
  41ef5b:	pop    r12
  41ef5d:	pop    r13
  41ef5f:	pop    r14
  41ef61:	pop    rbp
  41ef62:	ret    
  41ef63:	mov    eax,r10d
  41ef66:	mov    edx,0x55555556
  41ef6b:	imul   edx
  41ef6d:	mov    eax,r10d
  41ef70:	sar    eax,0x1f
  41ef73:	sub    edx,eax
  41ef75:	add    r10d,edx
  41ef78:	jmp    0x41ed9c
  41ef7d:	mov    eax,edx
  41ef7f:	and    eax,0x600
  41ef84:	cmp    eax,0x200
  41ef89:	je     0x41f090
  41ef8f:	mov    r12d,r13d
  41ef92:	test   dh,0x8
  41ef95:	mov    r13d,r12d
  41ef98:	mov    rdi,r10
  41ef9b:	je     0x41eedd
  41efa1:	mov    r13d,r12d
  41efa4:	jmp    0x41eec8
  41efa9:	nop    DWORD PTR [rax+0x0]
  41efb0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41efb7:	mov    r13d,0xffffffff
  41efbd:	cmp    r11d,0x6f
  41efc1:	je     0x41efd5
  41efc3:	mov    edx,DWORD PTR [rbx+0x8]
  41efc6:	mov    eax,edx
  41efc8:	and    eax,0x800
  41efcd:	test   eax,eax
  41efcf:	jne    0x41eec8
  41efd5:	mov    rdi,r10
  41efd8:	cmp    rsi,rdi
  41efdb:	jb     0x41f010
  41efdd:	jmp    0x41ef55
  41efe2:	cmp    r11d,0x6f
  41efe6:	jne    0x41ee65
  41efec:	test   BYTE PTR [rbx+0x9],0x8
  41eff0:	je     0x41ee65
  41eff6:	mov    BYTE PTR [r10],0x30
  41effa:	add    r10,0x1
  41effe:	jmp    0x41ee65
  41f003:	cmp    rsi,rdi
  41f006:	jae    0x41f0ef
  41f00c:	nop    DWORD PTR [rax+0x0]
  41f010:	sub    rdi,0x1
  41f014:	movsx  ecx,BYTE PTR [rdi]
  41f017:	mov    rdx,rbx
  41f01a:	call   0x41dee0
  41f01f:	cmp    rsi,rdi
  41f022:	jb     0x41f010
  41f024:	jmp    0x41ef30
  41f029:	nop    DWORD PTR [rax+0x0]
  41f030:	test   r8d,r8d
  41f033:	jns    0x41ef92
  41f039:	mov    eax,edx
  41f03b:	and    eax,0x600
  41f040:	cmp    eax,0x200
  41f045:	je     0x41f0de
  41f04b:	cmp    r11d,0x6f
  41f04f:	jne    0x41ef92
  41f055:	and    dh,0x4
  41f058:	jne    0x41f07a
  41f05a:	lea    r14d,[r12-0x1]
  41f05f:	mov    rdi,r10
  41f062:	jmp    0x41eeea
  41f067:	nop    WORD PTR [rax+rax*1+0x0]
  41f070:	test   r8d,r8d
  41f073:	js     0x41f039
  41f075:	and    dh,0x4
  41f078:	je     0x41f05a
  41f07a:	mov    rdi,r10
  41f07d:	mov    r13d,r12d
  41f080:	jmp    0x41f01f
  41f082:	and    edi,0xfffff7ff
  41f088:	mov    DWORD PTR [rbx+0x8],edi
  41f08b:	jmp    0x41ee1e
  41f090:	lea    r8d,[r12-0x3]
  41f095:	mov    r12d,r8d
  41f098:	mov    eax,r12d
  41f09b:	lea    rcx,[r10+rax*1+0x1]
  41f0a0:	mov    rax,r10
  41f0a3:	add    rax,0x1
  41f0a7:	mov    BYTE PTR [rax-0x1],0x30
  41f0ab:	cmp    rax,rcx
  41f0ae:	jne    0x41f0a3
  41f0b0:	movsxd rax,r8d
  41f0b3:	cmp    r11d,0x6f
  41f0b7:	lea    r10,[r10+rax*1+0x1]
  41f0bc:	je     0x41f0d0
  41f0be:	mov    eax,edx
  41f0c0:	mov    r13d,0xffffffff
  41f0c6:	and    eax,0x800
  41f0cb:	jmp    0x41efcd
  41f0d0:	mov    rdi,r10
  41f0d3:	mov    r13d,0xffffffff
  41f0d9:	jmp    0x41efd8
  41f0de:	sub    r12d,0x1
  41f0e2:	mov    r8d,r12d
  41f0e5:	jmp    0x41f098
  41f0e7:	mov    r13d,r12d
  41f0ea:	jmp    0x41efbd
  41f0ef:	lea    esi,[r13-0x1]
  41f0f3:	jmp    0x41ef40
  41f0f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f100:	push   r13
  41f102:	push   r12
  41f104:	push   rbp
  41f105:	push   rdi
  41f106:	push   rsi
  41f107:	push   rbx
  41f108:	sub    rsp,0x68
  41f10c:	mov    r9,QWORD PTR [rcx]
  41f10f:	mov    r10d,DWORD PTR [rcx+0x8]
  41f113:	mov    rbx,rdx
  41f116:	mov    rax,r9
  41f119:	mov    QWORD PTR [rsp+0x30],r9
  41f11e:	mov    DWORD PTR [rsp+0x38],r10d
  41f123:	shr    rax,0x20
  41f127:	mov    r8,r10
  41f12a:	and    eax,0x7fffffff
  41f12f:	or     r9d,eax
  41f132:	lea    eax,[r10+r10*1]
  41f136:	mov    edx,r9d
  41f139:	neg    edx
  41f13b:	and    eax,0xfffe
  41f140:	or     edx,r9d
  41f143:	shr    edx,0x1f
  41f146:	or     edx,eax
  41f148:	mov    eax,0xfffe
  41f14d:	sub    eax,edx
  41f14f:	sar    eax,0x10
  41f152:	test   eax,eax
  41f154:	jne    0x41f540
  41f15a:	movzx  esi,WORD PTR [rsp+0x38]
  41f15f:	mov    ecx,esi
  41f161:	and    ecx,0x8000
  41f167:	je     0x41f170
  41f169:	or     DWORD PTR [rbx+0x8],0x80
  41f170:	and    r8w,0x7fff
  41f176:	cmp    r8w,0x7fff
  41f17c:	jne    0x41f1a0
  41f17e:	test   r9d,r9d
  41f181:	jne    0x41f1a0
  41f183:	lea    rdx,[rip+0xe2aa]        # 0x42d434
  41f18a:	mov    r8,rbx
  41f18d:	call   0x41e170
  41f192:	jmp    0x41f515
  41f197:	nop    WORD PTR [rax+rax*1+0x0]
  41f1a0:	and    si,0x7fff
  41f1a5:	jne    0x41f2d0
  41f1ab:	mov    rax,QWORD PTR [rsp+0x30]
  41f1b0:	test   rax,rax
  41f1b3:	jne    0x41f55f
  41f1b9:	mov    r9d,DWORD PTR [rbx+0x10]
  41f1bd:	cmp    r9d,0xe
  41f1c1:	jbe    0x41f5dc
  41f1c7:	xor    esi,esi
  41f1c9:	mov    r8d,DWORD PTR [rbx+0x8]
  41f1cd:	lea    rbp,[rsp+0x40]
  41f1d2:	test   r9d,r9d
  41f1d5:	jle    0x41f5ec
  41f1db:	lea    rax,[rbp+0x1]
  41f1df:	mov    BYTE PTR [rsp+0x40],0x2e
  41f1e4:	mov    r10d,DWORD PTR [rbx+0xc]
  41f1e8:	lea    rdi,[rax+0x1]
  41f1ec:	mov    BYTE PTR [rax],0x30
  41f1ef:	mov    r12d,0x2
  41f1f5:	test   r10d,r10d
  41f1f8:	jg     0x41f3fc
  41f1fe:	xchg   ax,ax
  41f200:	test   r8b,0x80
  41f204:	jne    0x41f4c0
  41f20a:	test   r8d,0x100
  41f211:	jne    0x41f5b0
  41f217:	and    r8d,0x40
  41f21b:	jne    0x41f5c2
  41f221:	mov    rdx,rbx
  41f224:	mov    ecx,0x30
  41f229:	call   0x41dee0
  41f22e:	mov    ecx,DWORD PTR [rbx+0x8]
  41f231:	mov    rdx,rbx
  41f234:	and    ecx,0x20
  41f237:	or     ecx,0x58
  41f23a:	call   0x41dee0
  41f23f:	mov    eax,DWORD PTR [rbx+0xc]
  41f242:	test   eax,eax
  41f244:	jle    0x41f26c
  41f246:	test   BYTE PTR [rbx+0x9],0x2
  41f24a:	je     0x41f26c
  41f24c:	sub    eax,0x1
  41f24f:	mov    DWORD PTR [rbx+0xc],eax
  41f252:	mov    rdx,rbx
  41f255:	mov    ecx,0x30
  41f25a:	call   0x41dee0
  41f25f:	mov    eax,DWORD PTR [rbx+0xc]
  41f262:	lea    edx,[rax-0x1]
  41f265:	test   eax,eax
  41f267:	mov    DWORD PTR [rbx+0xc],edx
  41f26a:	jg     0x41f252
  41f26c:	cmp    rdi,rbp
  41f26f:	lea    r13,[rsp+0x2e]
  41f274:	ja     0x41f2a9
  41f276:	jmp    0x41f4df
  41f27b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f280:	movzx  eax,WORD PTR [rbx+0x20]
  41f284:	test   ax,ax
  41f287:	mov    WORD PTR [rsp+0x2e],ax
  41f28c:	je     0x41f2a0
  41f28e:	mov    r8,rbx
  41f291:	mov    edx,0x1
  41f296:	mov    rcx,r13
  41f299:	call   0x41df40
  41f29e:	xchg   ax,ax
  41f2a0:	cmp    rdi,rbp
  41f2a3:	je     0x41f4df
  41f2a9:	sub    rdi,0x1
  41f2ad:	movsx  ecx,BYTE PTR [rdi]
  41f2b0:	cmp    ecx,0x2e
  41f2b3:	je     0x41f522
  41f2b9:	cmp    ecx,0x2c
  41f2bc:	je     0x41f280
  41f2be:	mov    rdx,rbx
  41f2c1:	call   0x41dee0
  41f2c6:	jmp    0x41f2a0
  41f2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f2d0:	mov    r9d,DWORD PTR [rbx+0x10]
  41f2d4:	sub    si,0x3fff
  41f2d9:	mov    rax,QWORD PTR [rsp+0x30]
  41f2de:	cmp    r9d,0xe
  41f2e2:	ja     0x41f58d
  41f2e8:	test   rax,rax
  41f2eb:	js     0x41f2f5
  41f2ed:	nop    DWORD PTR [rax]
  41f2f0:	add    rax,rax
  41f2f3:	jns    0x41f2f0
  41f2f5:	mov    ecx,0xe
  41f2fa:	mov    edx,0x4
  41f2ff:	shr    rax,1
  41f302:	sub    ecx,r9d
  41f305:	shl    ecx,0x2
  41f308:	shl    rdx,cl
  41f30b:	add    rax,rdx
  41f30e:	js     0x41f5d4
  41f314:	add    rax,rax
  41f317:	mov    ecx,0xf
  41f31c:	sub    ecx,r9d
  41f31f:	shl    ecx,0x2
  41f322:	shr    rax,cl
  41f325:	mov    r8d,DWORD PTR [rbx+0x8]
  41f329:	lea    rbp,[rsp+0x40]
  41f32e:	mov    rdi,rbp
  41f331:	mov    r11d,r8d
  41f334:	mov    r10d,r8d
  41f337:	and    r11d,0x800
  41f33e:	and    r10d,0x20
  41f342:	jmp    0x41f373
  41f344:	mov    ecx,DWORD PTR [rbx+0x10]
  41f347:	test   ecx,ecx
  41f349:	jle    0x41f351
  41f34b:	sub    ecx,0x1
  41f34e:	mov    DWORD PTR [rbx+0x10],ecx
  41f351:	shr    rax,0x4
  41f355:	mov    r9,rdi
  41f358:	test   edx,edx
  41f35a:	je     0x41f3c4
  41f35c:	cmp    edx,0x9
  41f35f:	lea    rdi,[r9+0x1]
  41f363:	jle    0x41f3d7
  41f365:	add    edx,0x37
  41f368:	or     edx,r10d
  41f36b:	mov    BYTE PTR [r9],dl
  41f36e:	test   rax,rax
  41f371:	je     0x41f3e0
  41f373:	mov    edx,eax
  41f375:	and    edx,0xf
  41f378:	cmp    edx,eax
  41f37a:	jne    0x41f344
  41f37c:	cmp    rdi,rbp
  41f37f:	ja     0x41f392
  41f381:	test   r11d,r11d
  41f384:	jne    0x41f392
  41f386:	mov    r12d,DWORD PTR [rbx+0x10]
  41f38a:	mov    r9,rdi
  41f38d:	test   r12d,r12d
  41f390:	jle    0x41f399
  41f392:	lea    r9,[rdi+0x1]
  41f396:	mov    BYTE PTR [rdi],0x2e
  41f399:	cmp    rax,0x1
  41f39d:	jbe    0x41f5a9
  41f3a3:	lea    ecx,[rsi-0x1]
  41f3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3b0:	shr    rax,1
  41f3b3:	mov    esi,ecx
  41f3b5:	cmp    rax,0x1
  41f3b9:	lea    ecx,[rsi-0x1]
  41f3bc:	jne    0x41f3b0
  41f3be:	xor    al,al
  41f3c0:	test   edx,edx
  41f3c2:	jne    0x41f35c
  41f3c4:	cmp    r9,rbp
  41f3c7:	ja     0x41f3d3
  41f3c9:	mov    ecx,DWORD PTR [rbx+0x10]
  41f3cc:	mov    rdi,r9
  41f3cf:	test   ecx,ecx
  41f3d1:	js     0x41f36e
  41f3d3:	lea    rdi,[r9+0x1]
  41f3d7:	add    edx,0x30
  41f3da:	jmp    0x41f36b
  41f3dc:	nop    DWORD PTR [rax+0x0]
  41f3e0:	cmp    rdi,rbp
  41f3e3:	je     0x41f5e3
  41f3e9:	mov    r10d,DWORD PTR [rbx+0xc]
  41f3ed:	mov    r12d,0x2
  41f3f3:	test   r10d,r10d
  41f3f6:	jle    0x41f200
  41f3fc:	mov    edx,DWORD PTR [rbx+0x10]
  41f3ff:	mov    rax,rdi
  41f402:	movsx  r11d,si
  41f406:	sub    rax,rbp
  41f409:	lea    ecx,[rdx+rax*1]
  41f40c:	test   edx,edx
  41f40e:	mov    edx,r8d
  41f411:	cmovg  eax,ecx
  41f414:	and    edx,0x1c0
  41f41a:	mov    ecx,0x66666667
  41f41f:	cmp    edx,0x1
  41f422:	sbb    edx,edx
  41f424:	lea    r9d,[rax+rdx*1+0x6]
  41f429:	mov    eax,r11d
  41f42c:	imul   ecx
  41f42e:	mov    eax,r11d
  41f431:	sar    eax,0x1f
  41f434:	mov    ecx,edx
  41f436:	sar    ecx,0x2
  41f439:	sub    ecx,eax
  41f43b:	je     0x41f460
  41f43d:	mov    r11d,0x66666667
  41f443:	mov    eax,ecx
  41f445:	sar    ecx,0x1f
  41f448:	add    r9d,0x1
  41f44c:	imul   r11d
  41f44f:	add    r12d,0x1
  41f453:	sar    edx,0x2
  41f456:	sub    edx,ecx
  41f458:	mov    ecx,edx
  41f45a:	jne    0x41f443
  41f45c:	movsx  r12d,r12w
  41f460:	cmp    r10d,r9d
  41f463:	jle    0x41f530
  41f469:	sub    r10d,r9d
  41f46c:	test   r8d,0x600
  41f473:	jne    0x41f5a0
  41f479:	lea    eax,[r10-0x1]
  41f47d:	test   r10d,r10d
  41f480:	mov    DWORD PTR [rbx+0xc],eax
  41f483:	jle    0x41f200
  41f489:	nop    DWORD PTR [rax+0x0]
  41f490:	mov    rdx,rbx
  41f493:	mov    ecx,0x20
  41f498:	call   0x41dee0
  41f49d:	mov    eax,DWORD PTR [rbx+0xc]
  41f4a0:	lea    edx,[rax-0x1]
  41f4a3:	test   eax,eax
  41f4a5:	mov    DWORD PTR [rbx+0xc],edx
  41f4a8:	jg     0x41f490
  41f4aa:	mov    r8d,DWORD PTR [rbx+0x8]
  41f4ae:	test   r8b,0x80
  41f4b2:	je     0x41f20a
  41f4b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f4c0:	mov    rdx,rbx
  41f4c3:	mov    ecx,0x2d
  41f4c8:	call   0x41dee0
  41f4cd:	jmp    0x41f221
  41f4d2:	mov    rdx,rbx
  41f4d5:	mov    ecx,0x30
  41f4da:	call   0x41dee0
  41f4df:	mov    eax,DWORD PTR [rbx+0x10]
  41f4e2:	lea    edx,[rax-0x1]
  41f4e5:	test   eax,eax
  41f4e7:	mov    DWORD PTR [rbx+0x10],edx
  41f4ea:	jg     0x41f4d2
  41f4ec:	mov    ecx,DWORD PTR [rbx+0x8]
  41f4ef:	mov    rdx,rbx
  41f4f2:	and    ecx,0x20
  41f4f5:	or     ecx,0x50
  41f4f8:	call   0x41dee0
  41f4fd:	add    DWORD PTR [rbx+0xc],r12d
  41f501:	or     DWORD PTR [rbx+0x8],0x1c0
  41f508:	movsx  rcx,si
  41f50c:	mov    rdx,rbx
  41f50f:	call   0x41e750
  41f514:	nop
  41f515:	add    rsp,0x68
  41f519:	pop    rbx
  41f51a:	pop    rsi
  41f51b:	pop    rdi
  41f51c:	pop    rbp
  41f51d:	pop    r12
  41f51f:	pop    r13
  41f521:	ret    
  41f522:	mov    rcx,rbx
  41f525:	call   0x41e210
  41f52a:	jmp    0x41f2a0
  41f52f:	nop
  41f530:	mov    DWORD PTR [rbx+0xc],0xffffffff
  41f537:	jmp    0x41f200
  41f53c:	nop    DWORD PTR [rax+0x0]
  41f540:	lea    rdx,[rip+0xdee9]        # 0x42d430
  41f547:	mov    r8,rbx
  41f54a:	xor    ecx,ecx
  41f54c:	call   0x41e170
  41f551:	nop
  41f552:	add    rsp,0x68
  41f556:	pop    rbx
  41f557:	pop    rsi
  41f558:	pop    rdi
  41f559:	pop    rbp
  41f55a:	pop    r12
  41f55c:	pop    r13
  41f55e:	ret    
  41f55f:	js     0x41f601
  41f565:	mov    edx,0xffffc001
  41f56a:	nop    WORD PTR [rax+rax*1+0x0]
  41f570:	mov    esi,edx
  41f572:	sub    edx,0x1
  41f575:	add    rax,rax
  41f578:	jns    0x41f570
  41f57a:	mov    r9d,DWORD PTR [rbx+0x10]
  41f57e:	cmp    r9d,0xe
  41f582:	jbe    0x41f2f5
  41f588:	jmp    0x41f325
  41f58d:	test   rax,rax
  41f590:	jne    0x41f325
  41f596:	jmp    0x41f1c9
  41f59b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f5a0:	mov    DWORD PTR [rbx+0xc],r10d
  41f5a4:	jmp    0x41f200
  41f5a9:	xor    eax,eax
  41f5ab:	jmp    0x41f358
  41f5b0:	mov    rdx,rbx
  41f5b3:	mov    ecx,0x2b
  41f5b8:	call   0x41dee0
  41f5bd:	jmp    0x41f221
  41f5c2:	mov    rdx,rbx
  41f5c5:	mov    ecx,0x20
  41f5ca:	call   0x41dee0
  41f5cf:	jmp    0x41f221
  41f5d4:	add    esi,0x1
  41f5d7:	jmp    0x41f317
  41f5dc:	xor    eax,eax
  41f5de:	jmp    0x41f2f0
  41f5e3:	mov    r9d,DWORD PTR [rbx+0x10]
  41f5e7:	jmp    0x41f1d2
  41f5ec:	test   r8d,0x800
  41f5f3:	mov    rax,rbp
  41f5f6:	je     0x41f1e4
  41f5fc:	jmp    0x41f1db
  41f601:	mov    esi,0xffffc002
  41f606:	jmp    0x41f57a
  41f60b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f610:	push   r15
  41f612:	push   r14
  41f614:	push   r13
  41f616:	push   r12
  41f618:	push   rbp
  41f619:	push   rdi
  41f61a:	push   rsi
  41f61b:	push   rbx
  41f61c:	sub    rsp,0xb8
  41f623:	mov    r13,QWORD PTR [rsp+0x120]
  41f62b:	mov    r15d,ecx
  41f62e:	mov    rdi,rdx
  41f631:	mov    esi,r8d
  41f634:	mov    rbx,r9
  41f637:	and    r15d,0x6000
  41f63e:	call   0x422950
  41f643:	mov    eax,DWORD PTR [rax]
  41f645:	lea    rcx,[rip+0xde01]        # 0x42d44d
  41f64c:	xor    edx,edx
  41f64e:	mov    QWORD PTR [rsp+0x80],rdi
  41f656:	mov    DWORD PTR [rsp+0x88],r15d
  41f65e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41f669:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f674:	mov    DWORD PTR [rsp+0x34],eax
  41f678:	xor    eax,eax
  41f67a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  41f685:	mov    WORD PTR [rsp+0x98],ax
  41f68d:	mov    DWORD PTR [rsp+0x9c],0x0
  41f698:	mov    WORD PTR [rsp+0xa0],dx
  41f6a0:	mov    DWORD PTR [rsp+0xa4],0x0
  41f6ab:	mov    DWORD PTR [rsp+0xa8],esi
  41f6b2:	call   0x422838
  41f6b7:	test   rax,rax
  41f6ba:	je     0x41f6cc
  41f6bc:	movsx  edx,BYTE PTR [rax]
  41f6bf:	mov    eax,0x2
  41f6c4:	sub    edx,0x30
  41f6c7:	cmp    edx,0x2
  41f6ca:	jbe    0x41f6d9
  41f6cc:	call   0x422aa0
  41f6d1:	and    eax,0x1
  41f6d4:	neg    eax
  41f6d6:	add    eax,0x3
  41f6d9:	lea    rdi,[rsp+0x70]
  41f6de:	mov    DWORD PTR [rsp+0xac],eax
  41f6e5:	movzx  eax,BYTE PTR [rbx]
  41f6e8:	lea    rsi,[rsp+0x6e]
  41f6ed:	lea    r12,[rsp+0x80]
  41f6f5:	lea    rbp,[rip+0xdd68]        # 0x42d464
  41f6fc:	mov    QWORD PTR [rsp+0x28],rdi
  41f701:	lea    rdi,[rsp+0x50]
  41f706:	mov    QWORD PTR [rsp+0x38],rsi
  41f70b:	mov    QWORD PTR [rsp+0x20],rdi
  41f710:	mov    edi,r15d
  41f713:	or     edi,0x200
  41f719:	mov    DWORD PTR [rsp+0x48],edi
  41f71d:	nop    DWORD PTR [rax]
  41f720:	movsx  ecx,al
  41f723:	lea    rsi,[rbx+0x1]
  41f727:	test   ecx,ecx
  41f729:	je     0x41f7aa
  41f72b:	cmp    ecx,0x25
  41f72e:	jne    0x41f790
  41f730:	movzx  eax,BYTE PTR [rbx+0x1]
  41f734:	xor    r10d,r10d
  41f737:	xor    r14d,r14d
  41f73a:	mov    DWORD PTR [rsp+0x88],r15d
  41f742:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41f74d:	mov    rdi,rsi
  41f750:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41f75b:	lea    r11,[r12+0xc]
  41f760:	test   al,al
  41f762:	je     0x41f90b
  41f768:	lea    edx,[rax-0x20]
  41f76b:	lea    rbx,[rdi+0x1]
  41f76f:	movsx  ecx,al
  41f772:	cmp    dl,0x5a
  41f775:	ja     0x41fd80
  41f77b:	movzx  edx,dl
  41f77e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  41f783:	add    rdx,rbp
  41f786:	jmp    rdx
  41f788:	nop    DWORD PTR [rax+rax*1+0x0]
  41f790:	mov    rdx,r12
  41f793:	call   0x41dee0
  41f798:	movzx  eax,BYTE PTR [rbx+0x1]
  41f79c:	mov    rbx,rsi
  41f79f:	lea    rsi,[rbx+0x1]
  41f7a3:	movsx  ecx,al
  41f7a6:	test   ecx,ecx
  41f7a8:	jne    0x41f72b
  41f7aa:	mov    eax,DWORD PTR [rsp+0xa4]
  41f7b1:	add    rsp,0xb8
  41f7b8:	pop    rbx
  41f7b9:	pop    rsi
  41f7ba:	pop    rdi
  41f7bb:	pop    rbp
  41f7bc:	pop    r12
  41f7be:	pop    r13
  41f7c0:	pop    r14
  41f7c2:	pop    r15
  41f7c4:	ret    
  41f7c5:	sub    r10d,0x2
  41f7c9:	mov    rax,r13
  41f7cc:	cmp    r10d,0x1
  41f7d0:	jbe    0x41fdc3
  41f7d6:	mov    rsi,QWORD PTR [rax]
  41f7d9:	add    r13,0x8
  41f7dd:	test   rsi,rsi
  41f7e0:	je     0x41f8a5
  41f7e6:	mov    rcx,rsi
  41f7e9:	call   0x4227a8
  41f7ee:	mov    edx,eax
  41f7f0:	mov    r8,r12
  41f7f3:	mov    rcx,rsi
  41f7f6:	call   0x41e060
  41f7fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f800:	movzx  eax,BYTE PTR [rbx]
  41f803:	jmp    0x41f720
  41f808:	nop    DWORD PTR [rax+rax*1+0x0]
  41f810:	test   r14d,r14d
  41f813:	jne    0x41f823
  41f815:	cmp    DWORD PTR [rsp+0x88],r15d
  41f81d:	je     0x41ff8b
  41f823:	mov    rdx,QWORD PTR [r13+0x0]
  41f827:	lea    rsi,[r13+0x8]
  41f82b:	mov    r8,r12
  41f82e:	mov    ecx,0x78
  41f833:	mov    QWORD PTR [rsp+0x78],0x0
  41f83c:	mov    r13,rsi
  41f83f:	mov    QWORD PTR [rsp+0x70],rdx
  41f844:	call   0x41ed40
  41f849:	jmp    0x41f800
  41f84b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f850:	cmp    r10d,0x5
  41f854:	mov    rax,QWORD PTR [r13+0x0]
  41f858:	je     0x41feca
  41f85e:	cmp    r10d,0x1
  41f862:	je     0x41ff54
  41f868:	cmp    r10d,0x2
  41f86c:	je     0x41f878
  41f86e:	cmp    r10d,0x3
  41f872:	je     0x41fffc
  41f878:	mov    edx,DWORD PTR [rsp+0xa4]
  41f87f:	add    r13,0x8
  41f883:	mov    DWORD PTR [rax],edx
  41f885:	jmp    0x41f800
  41f88a:	nop    WORD PTR [rax+rax*1+0x0]
  41f890:	mov    ecx,DWORD PTR [rsp+0x34]
  41f894:	call   0x4227b8
  41f899:	test   rax,rax
  41f89c:	mov    rsi,rax
  41f89f:	jne    0x41f7e6
  41f8a5:	mov    edx,0x6
  41f8aa:	lea    rsi,[rip+0xdb95]        # 0x42d446
  41f8b1:	jmp    0x41f7f0
  41f8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f8c0:	movzx  eax,BYTE PTR [rdi+0x1]
  41f8c4:	mov    r10d,0x2
  41f8ca:	mov    r14d,0x4
  41f8d0:	cmp    al,0x6c
  41f8d2:	jne    0x41f900
  41f8d4:	lea    rbx,[rdi+0x2]
  41f8d8:	movzx  eax,BYTE PTR [rdi+0x2]
  41f8dc:	mov    r10d,0x3
  41f8e2:	mov    r14d,0x4
  41f8e8:	jmp    0x41f900
  41f8ea:	nop    WORD PTR [rax+rax*1+0x0]
  41f8f0:	movzx  eax,BYTE PTR [rdi+0x1]
  41f8f4:	mov    r10d,0x3
  41f8fa:	mov    r14d,0x4
  41f900:	test   al,al
  41f902:	mov    rdi,rbx
  41f905:	jne    0x41f768
  41f90b:	mov    rbx,rdi
  41f90e:	jmp    0x41f720
  41f913:	mov    eax,DWORD PTR [rsp+0x88]
  41f91a:	mov    rdx,r13
  41f91d:	add    r13,0x8
  41f921:	or     eax,0x20
  41f924:	test   al,0x4
  41f926:	mov    DWORD PTR [rsp+0x88],eax
  41f92d:	je     0x41fb8b
  41f933:	mov    rax,QWORD PTR [rdx]
  41f936:	mov    rcx,QWORD PTR [rsp+0x20]
  41f93b:	mov    rdx,r12
  41f93e:	fld    TBYTE PTR [rax]
  41f940:	fstp   TBYTE PTR [rsp+0x50]
  41f944:	call   0x41eba0
  41f949:	jmp    0x41f800
  41f94e:	xchg   ax,ax
  41f950:	movzx  eax,BYTE PTR [rdi+0x1]
  41f954:	mov    r10d,0x1
  41f95a:	mov    r14d,0x4
  41f960:	cmp    al,0x68
  41f962:	jne    0x41f900
  41f964:	lea    rbx,[rdi+0x2]
  41f968:	movzx  eax,BYTE PTR [rdi+0x2]
  41f96c:	mov    r10d,0x5
  41f972:	mov    r14d,0x4
  41f978:	jmp    0x41f900
  41f97a:	nop    WORD PTR [rax+rax*1+0x0]
  41f980:	mov    eax,DWORD PTR [rsp+0x88]
  41f987:	mov    rdx,r13
  41f98a:	add    r13,0x8
  41f98e:	or     eax,0x20
  41f991:	test   al,0x4
  41f993:	mov    DWORD PTR [rsp+0x88],eax
  41f99a:	je     0x41fbb9
  41f9a0:	mov    rax,QWORD PTR [rdx]
  41f9a3:	mov    rcx,QWORD PTR [rsp+0x20]
  41f9a8:	mov    rdx,r12
  41f9ab:	fld    TBYTE PTR [rax]
  41f9ad:	fstp   TBYTE PTR [rsp+0x50]
  41f9b1:	call   0x41e660
  41f9b6:	jmp    0x41f800
  41f9bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9c0:	mov    eax,DWORD PTR [rsp+0x88]
  41f9c7:	mov    rdx,r13
  41f9ca:	add    r13,0x8
  41f9ce:	or     eax,0x20
  41f9d1:	test   al,0x4
  41f9d3:	mov    DWORD PTR [rsp+0x88],eax
  41f9da:	je     0x41fbe7
  41f9e0:	mov    rax,QWORD PTR [rdx]
  41f9e3:	mov    rcx,QWORD PTR [rsp+0x20]
  41f9e8:	mov    rdx,r12
  41f9eb:	fld    TBYTE PTR [rax]
  41f9ed:	fstp   TBYTE PTR [rsp+0x50]
  41f9f1:	call   0x41eaf0
  41f9f6:	jmp    0x41f800
  41f9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa00:	cmp    r10d,0x3
  41fa04:	je     0x41fedc
  41fa0a:	cmp    r10d,0x2
  41fa0e:	je     0x41ff79
  41fa14:	mov    eax,DWORD PTR [r13+0x0]
  41fa18:	cmp    r10d,0x1
  41fa1c:	lea    rdx,[r13+0x8]
  41fa20:	mov    QWORD PTR [rsp+0x70],rax
  41fa25:	je     0x41ffbb
  41fa2b:	cmp    r10d,0x5
  41fa2f:	mov    r13,rdx
  41fa32:	je     0x420010
  41fa38:	cmp    ecx,0x75
  41fa3b:	je     0x41ff1c
  41fa41:	mov    r8,r12
  41fa44:	mov    rdx,rax
  41fa47:	call   0x41ed40
  41fa4c:	jmp    0x41f800
  41fa51:	sub    r10d,0x2
  41fa55:	mov    rax,r13
  41fa58:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41fa63:	cmp    r10d,0x1
  41fa67:	jbe    0x41fc0b
  41fa6d:	mov    eax,DWORD PTR [rax]
  41fa6f:	mov    rcx,QWORD PTR [rsp+0x28]
  41fa74:	mov    r8,r12
  41fa77:	mov    edx,0x1
  41fa7c:	add    r13,0x8
  41fa80:	mov    BYTE PTR [rsp+0x70],al
  41fa84:	call   0x41e060
  41fa89:	jmp    0x41f800
  41fa8e:	xchg   ax,ax
  41fa90:	mov    eax,DWORD PTR [rsp+0x88]
  41fa97:	mov    rdx,r13
  41fa9a:	add    r13,0x8
  41fa9e:	or     eax,0x20
  41faa1:	test   al,0x4
  41faa3:	mov    DWORD PTR [rsp+0x88],eax
  41faaa:	je     0x41fc48
  41fab0:	mov    rax,QWORD PTR [rdx]
  41fab3:	mov    rcx,QWORD PTR [rsp+0x20]
  41fab8:	mov    rdx,r12
  41fabb:	fld    TBYTE PTR [rax]
  41fabd:	fstp   TBYTE PTR [rsp+0x50]
  41fac1:	call   0x41f100
  41fac6:	jmp    0x41f800
  41facb:	nop    DWORD PTR [rax+rax*1+0x0]
  41fad0:	or     DWORD PTR [rsp+0x88],0x80
  41fadb:	cmp    r10d,0x3
  41fadf:	je     0x41feb8
  41fae5:	cmp    r10d,0x2
  41fae9:	je     0x41ff67
  41faef:	movsxd rcx,DWORD PTR [r13+0x0]
  41faf3:	cmp    r10d,0x1
  41faf7:	lea    rax,[r13+0x8]
  41fafb:	mov    QWORD PTR [rsp+0x70],rcx
  41fb00:	je     0x41ffcd
  41fb06:	cmp    r10d,0x5
  41fb0a:	mov    r13,rax
  41fb0d:	je     0x42001f
  41fb13:	mov    rax,rcx
  41fb16:	mov    rdx,r12
  41fb19:	sar    rax,0x3f
  41fb1d:	mov    QWORD PTR [rsp+0x78],rax
  41fb22:	call   0x41e750
  41fb27:	jmp    0x41f800
  41fb2c:	nop    DWORD PTR [rax+0x0]
  41fb30:	or     DWORD PTR [rsp+0x88],0x4
  41fb38:	movzx  eax,BYTE PTR [rdi+0x1]
  41fb3c:	mov    r14d,0x4
  41fb42:	jmp    0x41f900
  41fb47:	nop    WORD PTR [rax+rax*1+0x0]
  41fb50:	movzx  eax,BYTE PTR [rdi+0x1]
  41fb54:	cmp    al,0x36
  41fb56:	je     0x41fe98
  41fb5c:	cmp    al,0x33
  41fb5e:	je     0x41ff2c
  41fb64:	mov    r10d,0x3
  41fb6a:	mov    r14d,0x4
  41fb70:	jmp    0x41f900
  41fb75:	mov    eax,DWORD PTR [rsp+0x88]
  41fb7c:	mov    rdx,r13
  41fb7f:	add    r13,0x8
  41fb83:	test   al,0x4
  41fb85:	jne    0x41f933
  41fb8b:	mov    rcx,QWORD PTR [rsp+0x20]
  41fb90:	fld    QWORD PTR [rdx]
  41fb92:	mov    rdx,r12
  41fb95:	fstp   TBYTE PTR [rsp+0x50]
  41fb99:	call   0x41eba0
  41fb9e:	jmp    0x41f800
  41fba3:	mov    eax,DWORD PTR [rsp+0x88]
  41fbaa:	mov    rdx,r13
  41fbad:	add    r13,0x8
  41fbb1:	test   al,0x4
  41fbb3:	jne    0x41f9a0
  41fbb9:	mov    rcx,QWORD PTR [rsp+0x20]
  41fbbe:	fld    QWORD PTR [rdx]
  41fbc0:	mov    rdx,r12
  41fbc3:	fstp   TBYTE PTR [rsp+0x50]
  41fbc7:	call   0x41e660
  41fbcc:	jmp    0x41f800
  41fbd1:	mov    eax,DWORD PTR [rsp+0x88]
  41fbd8:	mov    rdx,r13
  41fbdb:	add    r13,0x8
  41fbdf:	test   al,0x4
  41fbe1:	jne    0x41f9e0
  41fbe7:	mov    rcx,QWORD PTR [rsp+0x20]
  41fbec:	fld    QWORD PTR [rdx]
  41fbee:	mov    rdx,r12
  41fbf1:	fstp   TBYTE PTR [rsp+0x50]
  41fbf5:	call   0x41eaf0
  41fbfa:	jmp    0x41f800
  41fbff:	nop
  41fc00:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41fc0b:	mov    eax,DWORD PTR [r13+0x0]
  41fc0f:	mov    rcx,QWORD PTR [rsp+0x28]
  41fc14:	lea    rsi,[r13+0x8]
  41fc18:	mov    r8,r12
  41fc1b:	mov    edx,0x1
  41fc20:	mov    r13,rsi
  41fc23:	mov    WORD PTR [rsp+0x70],ax
  41fc28:	call   0x41df40
  41fc2d:	jmp    0x41f800
  41fc32:	mov    eax,DWORD PTR [rsp+0x88]
  41fc39:	mov    rdx,r13
  41fc3c:	add    r13,0x8
  41fc40:	test   al,0x4
  41fc42:	jne    0x41fab0
  41fc48:	mov    rcx,QWORD PTR [rsp+0x20]
  41fc4d:	fld    QWORD PTR [rdx]
  41fc4f:	mov    rdx,r12
  41fc52:	fstp   TBYTE PTR [rsp+0x50]
  41fc56:	call   0x41f100
  41fc5b:	jmp    0x41f800
  41fc60:	test   r14d,r14d
  41fc63:	jne    0x41fe00
  41fc69:	or     DWORD PTR [rsp+0x88],0x200
  41fc74:	movzx  eax,BYTE PTR [rdi+0x1]
  41fc78:	jmp    0x41f900
  41fc7d:	nop    DWORD PTR [rax]
  41fc80:	cmp    r14d,0x1
  41fc84:	jbe    0x41feee
  41fc8a:	movzx  eax,BYTE PTR [rdi+0x1]
  41fc8e:	mov    r14d,0x4
  41fc94:	jmp    0x41f900
  41fc99:	nop    DWORD PTR [rax+0x0]
  41fca0:	test   r14d,r14d
  41fca3:	jne    0x41fd29
  41fca9:	or     DWORD PTR [rsp+0x88],0x400
  41fcb4:	movzx  eax,BYTE PTR [rdi+0x1]
  41fcb8:	jmp    0x41f900
  41fcbd:	nop    DWORD PTR [rax]
  41fcc0:	test   r14d,r14d
  41fcc3:	jne    0x41fd29
  41fcc5:	or     DWORD PTR [rsp+0x88],0x100
  41fcd0:	movzx  eax,BYTE PTR [rdi+0x1]
  41fcd4:	jmp    0x41f900
  41fcd9:	nop    DWORD PTR [rax+0x0]
  41fce0:	test   r14d,r14d
  41fce3:	jne    0x41fd29
  41fce5:	or     DWORD PTR [rsp+0x88],0x800
  41fcf0:	movzx  eax,BYTE PTR [rdi+0x1]
  41fcf4:	jmp    0x41f900
  41fcf9:	nop    DWORD PTR [rax+0x0]
  41fd00:	test   r14d,r14d
  41fd03:	jne    0x41fd29
  41fd05:	or     DWORD PTR [rsp+0x88],0x40
  41fd0d:	movzx  eax,BYTE PTR [rdi+0x1]
  41fd11:	jmp    0x41f900
  41fd16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd20:	test   r14d,r14d
  41fd23:	je     0x41fe32
  41fd29:	movzx  eax,BYTE PTR [rdi+0x1]
  41fd2d:	jmp    0x41f900
  41fd32:	mov    rdx,r12
  41fd35:	call   0x41dee0
  41fd3a:	jmp    0x41f800
  41fd3f:	nop
  41fd40:	test   r11,r11
  41fd43:	je     0x41fc8a
  41fd49:	test   r14d,0xfffffffd
  41fd50:	jne    0x41fe20
  41fd56:	mov    eax,DWORD PTR [r13+0x0]
  41fd5a:	lea    rdx,[r13+0x8]
  41fd5e:	test   eax,eax
  41fd60:	mov    DWORD PTR [r11],eax
  41fd63:	js     0x41ffe0
  41fd69:	movzx  eax,BYTE PTR [rdi+0x1]
  41fd6d:	mov    r13,rdx
  41fd70:	xor    r11d,r11d
  41fd73:	jmp    0x41f900
  41fd78:	nop    DWORD PTR [rax+rax*1+0x0]
  41fd80:	sub    eax,0x30
  41fd83:	cmp    al,0x9
  41fd85:	ja     0x41ffa6
  41fd8b:	cmp    r14d,0x3
  41fd8f:	ja     0x41ffa6
  41fd95:	test   r14d,r14d
  41fd98:	jne    0x41fe0a
  41fd9a:	mov    r14d,0x1
  41fda0:	test   r11,r11
  41fda3:	je     0x41fd29
  41fda5:	mov    eax,DWORD PTR [r11]
  41fda8:	test   eax,eax
  41fdaa:	js     0x41ff0d
  41fdb0:	lea    eax,[rax+rax*4]
  41fdb3:	lea    eax,[rcx+rax*2-0x30]
  41fdb7:	mov    DWORD PTR [r11],eax
  41fdba:	movzx  eax,BYTE PTR [rdi+0x1]
  41fdbe:	jmp    0x41f900
  41fdc3:	mov    rsi,QWORD PTR [r13+0x0]
  41fdc7:	lea    rax,[rip+0xd66a]        # 0x42d438
  41fdce:	lea    rdi,[r13+0x8]
  41fdd2:	mov    r13,rdi
  41fdd5:	test   rsi,rsi
  41fdd8:	cmove  rsi,rax
  41fddc:	mov    rcx,rsi
  41fddf:	call   0x422748
  41fde4:	mov    r8,r12
  41fde7:	mov    edx,eax
  41fde9:	mov    rcx,rsi
  41fdec:	call   0x41df40
  41fdf1:	jmp    0x41f800
  41fdf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe00:	cmp    r14d,0x3
  41fe04:	ja     0x41ffa6
  41fe0a:	cmp    r14d,0x2
  41fe0e:	mov    eax,0x3
  41fe13:	cmove  r14d,eax
  41fe17:	jmp    0x41fda0
  41fe19:	nop    DWORD PTR [rax+0x0]
  41fe20:	movzx  eax,BYTE PTR [rdi+0x1]
  41fe24:	xor    r11d,r11d
  41fe27:	mov    r14d,0x4
  41fe2d:	jmp    0x41f900
  41fe32:	mov    DWORD PTR [rsp+0x4c],r10d
  41fe37:	mov    QWORD PTR [rsp+0x40],r11
  41fe3c:	or     DWORD PTR [rsp+0x88],0x1000
  41fe47:	mov    DWORD PTR [rsp+0x70],0x0
  41fe4f:	call   0x422828
  41fe54:	mov    r9,QWORD PTR [rsp+0x28]
  41fe59:	mov    rdx,QWORD PTR [rax+0x8]
  41fe5d:	mov    r8d,0x10
  41fe63:	mov    rcx,QWORD PTR [rsp+0x38]
  41fe68:	call   0x4224f0
  41fe6d:	test   eax,eax
  41fe6f:	mov    r11,QWORD PTR [rsp+0x40]
  41fe74:	mov    r10d,DWORD PTR [rsp+0x4c]
  41fe79:	jle    0x41fe88
  41fe7b:	movzx  edx,WORD PTR [rsp+0x6e]
  41fe80:	mov    WORD PTR [rsp+0xa0],dx
  41fe88:	mov    DWORD PTR [rsp+0x9c],eax
  41fe8f:	movzx  eax,BYTE PTR [rdi+0x1]
  41fe93:	jmp    0x41f900
  41fe98:	cmp    BYTE PTR [rdi+0x2],0x34
  41fe9c:	je     0x42002f
  41fea2:	mov    eax,0x36
  41fea7:	mov    r10d,0x3
  41fead:	mov    r14d,0x4
  41feb3:	jmp    0x41f900
  41feb8:	mov    rcx,QWORD PTR [r13+0x0]
  41febc:	add    r13,0x8
  41fec0:	mov    QWORD PTR [rsp+0x70],rcx
  41fec5:	jmp    0x41fb13
  41feca:	mov    edx,DWORD PTR [rsp+0xa4]
  41fed1:	add    r13,0x8
  41fed5:	mov    BYTE PTR [rax],dl
  41fed7:	jmp    0x41f800
  41fedc:	mov    rax,QWORD PTR [r13+0x0]
  41fee0:	add    r13,0x8
  41fee4:	mov    QWORD PTR [rsp+0x70],rax
  41fee9:	jmp    0x41fa38
  41feee:	mov    DWORD PTR [rsp+0x90],0x0
  41fef9:	movzx  eax,BYTE PTR [rdi+0x1]
  41fefd:	lea    r11,[r12+0x10]
  41ff02:	mov    r14d,0x2
  41ff08:	jmp    0x41f900
  41ff0d:	sub    ecx,0x30
  41ff10:	movzx  eax,BYTE PTR [rdi+0x1]
  41ff14:	mov    DWORD PTR [r11],ecx
  41ff17:	jmp    0x41f900
  41ff1c:	mov    rdx,r12
  41ff1f:	mov    rcx,rax
  41ff22:	call   0x41e750
  41ff27:	jmp    0x41f800
  41ff2c:	cmp    BYTE PTR [rdi+0x2],0x32
  41ff30:	mov    eax,0x33
  41ff35:	jne    0x41fb64
  41ff3b:	lea    rbx,[rdi+0x3]
  41ff3f:	movzx  eax,BYTE PTR [rdi+0x3]
  41ff43:	mov    r10d,0x2
  41ff49:	mov    r14d,0x4
  41ff4f:	jmp    0x41f900
  41ff54:	mov    edx,DWORD PTR [rsp+0xa4]
  41ff5b:	add    r13,0x8
  41ff5f:	mov    WORD PTR [rax],dx
  41ff62:	jmp    0x41f800
  41ff67:	movsxd rcx,DWORD PTR [r13+0x0]
  41ff6b:	add    r13,0x8
  41ff6f:	mov    QWORD PTR [rsp+0x70],rcx
  41ff74:	jmp    0x41fb13
  41ff79:	mov    eax,DWORD PTR [r13+0x0]
  41ff7d:	add    r13,0x8
  41ff81:	mov    QWORD PTR [rsp+0x70],rax
  41ff86:	jmp    0x41fa38
  41ff8b:	mov    eax,DWORD PTR [rsp+0x48]
  41ff8f:	mov    DWORD PTR [rsp+0x90],0x10
  41ff9a:	mov    DWORD PTR [rsp+0x88],eax
  41ffa1:	jmp    0x41f823
  41ffa6:	mov    rdx,r12
  41ffa9:	mov    ecx,0x25
  41ffae:	mov    rbx,rsi
  41ffb1:	call   0x41dee0
  41ffb6:	jmp    0x41f800
  41ffbb:	movzx  eax,WORD PTR [rsp+0x70]
  41ffc0:	mov    r13,rdx
  41ffc3:	mov    QWORD PTR [rsp+0x70],rax
  41ffc8:	jmp    0x41fa38
  41ffcd:	movsx  rcx,WORD PTR [rsp+0x70]
  41ffd3:	mov    r13,rax
  41ffd6:	mov    QWORD PTR [rsp+0x70],rcx
  41ffdb:	jmp    0x41fb13
  41ffe0:	test   r14d,r14d
  41ffe3:	jne    0x420048
  41ffe5:	or     DWORD PTR [rsp+0x88],0x400
  41fff0:	neg    DWORD PTR [rsp+0x8c]
  41fff7:	jmp    0x41fd69
  41fffc:	movsxd rdx,DWORD PTR [rsp+0xa4]
  420004:	add    r13,0x8
  420008:	mov    QWORD PTR [rax],rdx
  42000b:	jmp    0x41f800
  420010:	movzx  eax,BYTE PTR [rsp+0x70]
  420015:	mov    QWORD PTR [rsp+0x70],rax
  42001a:	jmp    0x41fa38
  42001f:	movsx  rcx,BYTE PTR [rsp+0x70]
  420025:	mov    QWORD PTR [rsp+0x70],rcx
  42002a:	jmp    0x41fb13
  42002f:	lea    rbx,[rdi+0x3]
  420033:	movzx  eax,BYTE PTR [rdi+0x3]
  420037:	mov    r10d,0x3
  42003d:	mov    r14d,0x4
  420043:	jmp    0x41f900
  420048:	mov    DWORD PTR [rsp+0x90],0xffffffff
  420053:	movzx  eax,BYTE PTR [rdi+0x1]
  420057:	mov    r13,rdx
  42005a:	xor    r11d,r11d
  42005d:	jmp    0x41f900
  420062:	nop
  420063:	nop
  420064:	nop
  420065:	nop
  420066:	nop
  420067:	nop
  420068:	nop
  420069:	nop
  42006a:	nop
  42006b:	nop
  42006c:	nop
  42006d:	nop
  42006e:	nop
  42006f:	nop
  420070:	push   rbx
  420071:	sub    rsp,0x20
  420075:	xor    ebx,ebx
  420077:	cmp    ecx,0x1b
  42007a:	jle    0x42008d
  42007c:	mov    eax,0x4
  420081:	add    eax,eax
  420083:	add    ebx,0x1
  420086:	lea    edx,[rax+0x17]
  420089:	cmp    edx,ecx
  42008b:	jl     0x420081
  42008d:	mov    ecx,ebx
  42008f:	call   0x421960
  420094:	mov    DWORD PTR [rax],ebx
  420096:	add    rax,0x4
  42009a:	add    rsp,0x20
  42009e:	pop    rbx
  42009f:	ret    
  4200a0:	push   rsi
  4200a1:	push   rbx
  4200a2:	sub    rsp,0x28
  4200a6:	mov    rbx,rcx
  4200a9:	mov    ecx,r8d
  4200ac:	mov    rsi,rdx
  4200af:	call   0x420070
  4200b4:	movzx  ecx,BYTE PTR [rbx]
  4200b7:	lea    r8,[rbx+0x1]
  4200bb:	test   cl,cl
  4200bd:	mov    BYTE PTR [rax],cl
  4200bf:	mov    rcx,rax
  4200c2:	je     0x4200d9
  4200c4:	add    r8,0x1
  4200c8:	movzx  r9d,BYTE PTR [r8-0x1]
  4200cd:	add    rcx,0x1
  4200d1:	test   r9b,r9b
  4200d4:	mov    BYTE PTR [rcx],r9b
  4200d7:	jne    0x4200c4
  4200d9:	test   rsi,rsi
  4200dc:	je     0x4200e1
  4200de:	mov    QWORD PTR [rsi],rcx
  4200e1:	add    rsp,0x28
  4200e5:	pop    rbx
  4200e6:	pop    rsi
  4200e7:	ret    
  4200e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4200f0:	mov    edx,0x1
  4200f5:	mov    rax,rcx
  4200f8:	mov    ecx,DWORD PTR [rcx-0x4]
  4200fb:	shl    edx,cl
  4200fd:	mov    DWORD PTR [rax+0x4],ecx
  420100:	lea    rcx,[rax-0x4]
  420104:	mov    DWORD PTR [rax+0x8],edx
  420107:	jmp    0x421a70
  42010c:	nop    DWORD PTR [rax+0x0]
  420110:	push   r15
  420112:	push   r14
  420114:	push   r13
  420116:	push   r12
  420118:	push   rbp
  420119:	push   rdi
  42011a:	push   rsi
  42011b:	push   rbx
  42011c:	sub    rsp,0x38
  420120:	xor    eax,eax
  420122:	mov    edi,DWORD PTR [rdx+0x14]
  420125:	cmp    edi,DWORD PTR [rcx+0x14]
  420128:	mov    r15,rdx
  42012b:	jg     0x420279
  420131:	sub    edi,0x1
  420134:	lea    rbx,[rdx+0x18]
  420138:	lea    r12,[rcx+0x18]
  42013c:	movsxd r13,edi
  42013f:	xor    edx,edx
  420141:	shl    r13,0x2
  420145:	lea    rbp,[rbx+r13*1]
  420149:	add    r13,r12
  42014c:	mov    eax,DWORD PTR [rbp+0x0]
  42014f:	lea    r8d,[rax+0x1]
  420153:	mov    eax,DWORD PTR [r13+0x0]
  420157:	div    r8d
  42015a:	test   eax,eax
  42015c:	mov    r14d,eax
  42015f:	mov    DWORD PTR [rsp+0x2c],eax
  420163:	je     0x4201f7
  420169:	mov    edx,eax
  42016b:	mov    rsi,rbx
  42016e:	mov    r11,r12
  420171:	xor    eax,eax
  420173:	xor    r10d,r10d
  420176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420180:	add    rsi,0x4
  420184:	mov    r8d,DWORD PTR [rsi-0x4]
  420188:	mov    r9d,DWORD PTR [r11]
  42018b:	add    r11,0x4
  42018f:	imul   r8,rdx
  420193:	add    r8,rax
  420196:	mov    rax,r8
  420199:	mov    r8d,r8d
  42019c:	sub    r9,r8
  42019f:	shr    rax,0x20
  4201a3:	sub    r9,r10
  4201a6:	mov    r10,r9
  4201a9:	mov    DWORD PTR [r11-0x4],r9d
  4201ad:	shr    r10,0x20
  4201b1:	and    r10d,0x1
  4201b5:	cmp    rbp,rsi
  4201b8:	jae    0x420180
  4201ba:	mov    r11d,DWORD PTR [r13+0x0]
  4201be:	test   r11d,r11d
  4201c1:	jne    0x4201f7
  4201c3:	lea    rax,[r13-0x4]
  4201c7:	cmp    r12,rax
  4201ca:	jae    0x4201f4
  4201cc:	mov    r10d,DWORD PTR [r13-0x4]
  4201d0:	test   r10d,r10d
  4201d3:	je     0x4201e8
  4201d5:	jmp    0x4201f4
  4201d7:	nop    WORD PTR [rax+rax*1+0x0]
  4201e0:	mov    r9d,DWORD PTR [rax]
  4201e3:	test   r9d,r9d
  4201e6:	jne    0x4201f4
  4201e8:	sub    rax,0x4
  4201ec:	sub    edi,0x1
  4201ef:	cmp    r12,rax
  4201f2:	jb     0x4201e0
  4201f4:	mov    DWORD PTR [rcx+0x14],edi
  4201f7:	mov    rdx,r15
  4201fa:	mov    rsi,rcx
  4201fd:	call   0x421f90
  420202:	test   eax,eax
  420204:	js     0x420275
  420206:	lea    eax,[r14+0x1]
  42020a:	mov    rcx,r12
  42020d:	xor    edx,edx
  42020f:	mov    DWORD PTR [rsp+0x2c],eax
  420213:	add    rbx,0x4
  420217:	mov    eax,DWORD PTR [rcx]
  420219:	mov    r8d,DWORD PTR [rbx-0x4]
  42021d:	add    rcx,0x4
  420221:	sub    rax,r8
  420224:	sub    rax,rdx
  420227:	mov    rdx,rax
  42022a:	mov    DWORD PTR [rcx-0x4],eax
  42022d:	shr    rdx,0x20
  420231:	and    edx,0x1
  420234:	cmp    rbp,rbx
  420237:	jae    0x420213
  420239:	movsxd rax,edi
  42023c:	lea    rdx,[r12+rax*4]
  420240:	mov    r8d,DWORD PTR [rdx]
  420243:	test   r8d,r8d
  420246:	jne    0x420275
  420248:	lea    rax,[rdx-0x4]
  42024c:	cmp    r12,rax
  42024f:	jae    0x420272
  420251:	mov    ecx,DWORD PTR [rdx-0x4]
  420254:	test   ecx,ecx
  420256:	je     0x420266
  420258:	jmp    0x420272
  42025a:	nop    WORD PTR [rax+rax*1+0x0]
  420260:	mov    edx,DWORD PTR [rax]
  420262:	test   edx,edx
  420264:	jne    0x420272
  420266:	sub    rax,0x4
  42026a:	sub    edi,0x1
  42026d:	cmp    r12,rax
  420270:	jb     0x420260
  420272:	mov    DWORD PTR [rsi+0x14],edi
  420275:	mov    eax,DWORD PTR [rsp+0x2c]
  420279:	add    rsp,0x38
  42027d:	pop    rbx
  42027e:	pop    rsi
  42027f:	pop    rdi
  420280:	pop    rbp
  420281:	pop    r12
  420283:	pop    r13
  420285:	pop    r14
  420287:	pop    r15
  420289:	ret    
  42028a:	nop
  42028b:	nop
  42028c:	nop
  42028d:	nop
  42028e:	nop
  42028f:	nop
  420290:	push   r15
  420292:	push   r14
  420294:	push   r13
  420296:	push   r12
  420298:	push   rbp
  420299:	push   rdi
  42029a:	push   rsi
  42029b:	push   rbx
  42029c:	sub    rsp,0xb8
  4202a3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  4202ab:	mov    r12d,DWORD PTR [r9]
  4202ae:	mov    eax,r12d
  4202b1:	and    eax,0xffffffcf
  4202b4:	mov    DWORD PTR [r9],eax
  4202b7:	mov    eax,r12d
  4202ba:	and    eax,0x7
  4202bd:	cmp    eax,0x4
  4202c0:	ja     0x4216f3
  4202c6:	mov    r13d,edx
  4202c9:	lea    rdx,[rip+0xd310]        # 0x42d5e0
  4202d0:	mov    QWORD PTR [rsp+0x28],r9
  4202d5:	mov    r15,r8
  4202d8:	mov    rbp,rcx
  4202db:	movsxd rax,DWORD PTR [rdx+rax*4]
  4202df:	add    rdx,rax
  4202e2:	jmp    rdx
  4202e4:	mov    edi,DWORD PTR [rcx]
  4202e6:	xor    ecx,ecx
  4202e8:	cmp    edi,0x20
  4202eb:	jle    0x4202fb
  4202ed:	mov    eax,0x20
  4202f2:	add    eax,eax
  4202f4:	add    ecx,0x1
  4202f7:	cmp    edi,eax
  4202f9:	jg     0x4202f2
  4202fb:	call   0x421960
  420300:	mov    rsi,rax
  420303:	lea    eax,[rdi-0x1]
  420306:	lea    r9,[rsi+0x18]
  42030a:	sar    eax,0x5
  42030d:	cdqe   
  42030f:	mov    rdx,r9
  420312:	lea    r11,[r15+rax*4]
  420316:	mov    rax,r15
  420319:	nop    DWORD PTR [rax+0x0]
  420320:	mov    ecx,DWORD PTR [rax]
  420322:	add    rax,0x4
  420326:	add    rdx,0x4
  42032a:	cmp    r11,rax
  42032d:	mov    DWORD PTR [rdx-0x4],ecx
  420330:	jae    0x420320
  420332:	sub    rdx,r9
  420335:	sar    rdx,0x2
  420339:	mov    r14d,edx
  42033c:	movsxd rdx,edx
  42033f:	lea    rax,[r9+rdx*4-0x4]
  420344:	jmp    0x42035f
  420346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420350:	sub    rax,0x4
  420354:	test   edx,edx
  420356:	mov    r14d,edx
  420359:	je     0x420860
  42035f:	mov    r8d,DWORD PTR [rax]
  420362:	lea    edx,[r14-0x1]
  420366:	test   r8d,r8d
  420369:	je     0x420350
  42036b:	movsxd rdx,edx
  42036e:	mov    DWORD PTR [rsi+0x14],r14d
  420372:	shl    r14d,0x5
  420376:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  42037b:	xor    eax,0x1f
  42037e:	sub    r14d,eax
  420381:	mov    rcx,rsi
  420384:	call   0x421800
  420389:	test   eax,eax
  42038b:	mov    DWORD PTR [rsp+0x9c],eax
  420392:	mov    r11d,r13d
  420395:	jne    0x420870
  42039b:	mov    ecx,DWORD PTR [rsi+0x14]
  42039e:	test   ecx,ecx
  4203a0:	jne    0x420450
  4203a6:	mov    rcx,rsi
  4203a9:	call   0x421a70
  4203ae:	mov    rax,QWORD PTR [rsp+0x130]
  4203b6:	mov    rdx,QWORD PTR [rsp+0x138]
  4203be:	lea    rcx,[rip+0xd218]        # 0x42d5dd
  4203c5:	mov    r8d,0x1
  4203cb:	mov    DWORD PTR [rax],0x1
  4203d1:	call   0x4200a0
  4203d6:	nop
  4203d7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  4203df:	add    rsp,0xb8
  4203e6:	pop    rbx
  4203e7:	pop    rsi
  4203e8:	pop    rdi
  4203e9:	pop    rbp
  4203ea:	pop    r12
  4203ec:	pop    r13
  4203ee:	pop    r14
  4203f0:	pop    r15
  4203f2:	ret    
  4203f3:	mov    rax,QWORD PTR [rsp+0x130]
  4203fb:	mov    rdx,QWORD PTR [rsp+0x138]
  420403:	lea    rcx,[rip+0xd1cf]        # 0x42d5d9
  42040a:	mov    r8d,0x3
  420410:	mov    DWORD PTR [rax],0xffff8000
  420416:	call   0x4200a0
  42041b:	jmp    0x4203d7
  42041d:	nop    DWORD PTR [rax]
  420420:	mov    rax,QWORD PTR [rsp+0x130]
  420428:	mov    rdx,QWORD PTR [rsp+0x138]
  420430:	lea    rcx,[rip+0xd199]        # 0x42d5d0
  420437:	mov    r8d,0x8
  42043d:	mov    DWORD PTR [rax],0xffff8000
  420443:	call   0x4200a0
  420448:	jmp    0x4203d7
  42044a:	nop    WORD PTR [rax+rax*1+0x0]
  420450:	lea    rdx,[rsp+0x9c]
  420458:	mov    rcx,rsi
  42045b:	mov    DWORD PTR [rsp+0x30],r11d
  420460:	call   0x422120
  420465:	movq   rdx,xmm0
  42046a:	movq   r9,xmm0
  42046f:	mov    r11d,DWORD PTR [rsp+0x30]
  420474:	pxor   xmm0,xmm0
  420478:	shr    rdx,0x20
  42047c:	mov    r9d,r9d
  42047f:	and    edx,0xfffff
  420485:	lea    ecx,[r11+r14*1-0x1]
  42048a:	or     edx,0x3ff00000
  420490:	mov    rax,rdx
  420493:	cvtsi2sd xmm0,ecx
  420497:	shl    rax,0x20
  42049b:	mov    ebx,ecx
  42049d:	or     r9,rax
  4204a0:	sar    ebx,0x1f
  4204a3:	mov    QWORD PTR [rsp+0x30],r9
  4204a8:	mov    eax,ebx
  4204aa:	movsd  xmm1,QWORD PTR [rsp+0x30]
  4204b0:	xor    eax,ecx
  4204b2:	sub    eax,ebx
  4204b4:	subsd  xmm1,QWORD PTR [rip+0xd13c]        # 0x42d5f8
  4204bc:	sub    eax,0x435
  4204c1:	test   eax,eax
  4204c3:	mulsd  xmm0,QWORD PTR [rip+0xd145]        # 0x42d610
  4204cb:	mulsd  xmm1,QWORD PTR [rip+0xd12d]        # 0x42d600
  4204d3:	addsd  xmm1,QWORD PTR [rip+0xd12d]        # 0x42d608
  4204db:	addsd  xmm1,xmm0
  4204df:	jle    0x4204f5
  4204e1:	pxor   xmm0,xmm0
  4204e5:	cvtsi2sd xmm0,eax
  4204e9:	mulsd  xmm0,QWORD PTR [rip+0xd127]        # 0x42d618
  4204f1:	addsd  xmm1,xmm0
  4204f5:	cvttsd2si eax,xmm1
  4204f9:	pxor   xmm6,xmm6
  4204fd:	ucomisd xmm6,xmm1
  420501:	mov    DWORD PTR [rsp+0x30],eax
  420505:	ja     0x420d93
  42050b:	mov    eax,ecx
  42050d:	mov    r9d,r9d
  420510:	mov    DWORD PTR [rsp+0x6c],0x1
  420518:	shl    eax,0x14
  42051b:	add    eax,edx
  42051d:	shl    rax,0x20
  420521:	or     r9,rax
  420524:	cmp    DWORD PTR [rsp+0x30],0x16
  420529:	mov    QWORD PTR [rsp+0x80],r9
  420531:	ja     0x420560
  420533:	movsxd rax,DWORD PTR [rsp+0x30]
  420538:	mov    rdx,QWORD PTR [rip+0xd421]        # 0x42d960
  42053f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  420544:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  42054d:	jbe    0x4208b0
  420553:	sub    DWORD PTR [rsp+0x30],0x1
  420558:	mov    DWORD PTR [rsp+0x6c],0x0
  420560:	mov    eax,r14d
  420563:	mov    DWORD PTR [rsp+0x50],0x0
  42056b:	sub    eax,ecx
  42056d:	sub    eax,0x1
  420570:	mov    DWORD PTR [rsp+0x40],eax
  420574:	js     0x420d80
  42057a:	mov    eax,DWORD PTR [rsp+0x30]
  42057e:	test   eax,eax
  420580:	js     0x420d60
  420586:	add    DWORD PTR [rsp+0x40],eax
  42058a:	mov    DWORD PTR [rsp+0x88],eax
  420591:	mov    DWORD PTR [rsp+0x58],0x0
  420599:	cmp    DWORD PTR [rsp+0x120],0x9
  4205a1:	ja     0x420890
  4205a7:	cmp    DWORD PTR [rsp+0x120],0x5
  4205af:	jle    0x42089b
  4205b5:	sub    DWORD PTR [rsp+0x120],0x4
  4205bd:	xor    eax,eax
  4205bf:	cmp    DWORD PTR [rsp+0x120],0x3
  4205c7:	je     0x420f54
  4205cd:	jle    0x420cb3
  4205d3:	cmp    DWORD PTR [rsp+0x120],0x4
  4205db:	mov    DWORD PTR [rsp+0x60],0x1
  4205e3:	je     0x4208c0
  4205e9:	cmp    DWORD PTR [rsp+0x120],0x5
  4205f1:	jne    0x420cc9
  4205f7:	mov    ebx,DWORD PTR [rsp+0x30]
  4205fb:	add    ebx,DWORD PTR [rsp+0x128]
  420602:	mov    DWORD PTR [rsp+0x8c],ebx
  420609:	add    ebx,0x1
  42060c:	test   ebx,ebx
  42060e:	mov    DWORD PTR [rsp+0x68],ebx
  420612:	mov    ecx,ebx
  420614:	jle    0x421190
  42061a:	cmp    ebx,0xe
  42061d:	mov    DWORD PTR [rsp+0x9c],ebx
  420624:	setbe  bl
  420627:	and    ebx,eax
  420629:	mov    QWORD PTR [rsp+0x78],r9
  42062e:	mov    DWORD PTR [rsp+0x70],r11d
  420633:	call   0x420070
  420638:	mov    QWORD PTR [rsp+0x48],rax
  42063d:	mov    eax,DWORD PTR [rbp+0xc]
  420640:	mov    r11d,DWORD PTR [rsp+0x70]
  420645:	mov    r9,QWORD PTR [rsp+0x78]
  42064a:	sub    eax,0x1
  42064d:	mov    DWORD PTR [rsp+0x38],eax
  420651:	je     0x420678
  420653:	mov    ecx,DWORD PTR [rsp+0x38]
  420657:	mov    eax,0x2
  42065c:	test   ecx,ecx
  42065e:	cmovns eax,ecx
  420661:	and    r12d,0x8
  420665:	mov    DWORD PTR [rsp+0x38],eax
  420669:	je     0x420678
  42066b:	mov    eax,0x3
  420670:	sub    eax,DWORD PTR [rsp+0x38]
  420674:	mov    DWORD PTR [rsp+0x38],eax
  420678:	test   bl,bl
  42067a:	je     0x420970
  420680:	mov    eax,DWORD PTR [rsp+0x38]
  420684:	or     eax,DWORD PTR [rsp+0x30]
  420688:	jne    0x420970
  42068e:	mov    eax,DWORD PTR [rsp+0x6c]
  420692:	mov    DWORD PTR [rsp+0x9c],0x0
  42069d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  4206a6:	test   eax,eax
  4206a8:	je     0x4206bc
  4206aa:	movsd  xmm0,QWORD PTR [rip+0xcf76]        # 0x42d628
  4206b2:	ucomisd xmm0,xmm4
  4206b6:	ja     0x4214eb
  4206bc:	movapd xmm0,xmm4
  4206c0:	mov    r12d,DWORD PTR [rsp+0x68]
  4206c5:	addsd  xmm0,xmm4
  4206c9:	addsd  xmm0,QWORD PTR [rip+0xcf6f]        # 0x42d640
  4206d1:	movq   rdx,xmm0
  4206d6:	movq   rax,xmm0
  4206db:	shr    rdx,0x20
  4206df:	mov    eax,eax
  4206e1:	sub    edx,0x3400000
  4206e7:	shl    rdx,0x20
  4206eb:	or     rax,rdx
  4206ee:	test   r12d,r12d
  4206f1:	je     0x420927
  4206f7:	mov    r9d,DWORD PTR [rsp+0x68]
  4206fc:	movapd xmm0,xmm4
  420700:	xor    ecx,ecx
  420702:	mov    ebx,DWORD PTR [rsp+0x60]
  420706:	lea    edx,[r9-0x1]
  42070a:	movsxd rdx,edx
  42070d:	test   ebx,ebx
  42070f:	je     0x421233
  420715:	mov    r10,QWORD PTR [rip+0xd244]        # 0x42d960
  42071c:	movsd  xmm1,QWORD PTR [rip+0xcf3c]        # 0x42d660
  420724:	mov    QWORD PTR [rsp+0x38],rax
  420729:	cvttsd2si eax,xmm0
  42072d:	pxor   xmm2,xmm2
  420731:	mov    DWORD PTR [rsp+0x9c],0x0
  42073c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  420742:	mov    rdx,QWORD PTR [rsp+0x48]
  420747:	mov    rbx,rdx
  42074a:	add    rbx,0x1
  42074e:	cvtsi2sd xmm2,eax
  420752:	add    eax,0x30
  420755:	mov    BYTE PTR [rdx],al
  420757:	movsd  xmm5,QWORD PTR [rsp+0x38]
  42075d:	subsd  xmm0,xmm2
  420761:	subsd  xmm1,xmm5
  420765:	ucomisd xmm1,xmm0
  420769:	ja     0x420804
  42076f:	movsd  xmm5,QWORD PTR [rip+0xceb1]        # 0x42d628
  420777:	movapd xmm2,xmm5
  42077b:	subsd  xmm2,xmm0
  42077f:	ucomisd xmm1,xmm2
  420783:	ja     0x421307
  420789:	mov    eax,DWORD PTR [rsp+0x9c]
  420790:	movsd  xmm3,QWORD PTR [rip+0xce98]        # 0x42d630
  420798:	add    eax,0x1
  42079b:	cmp    r9d,eax
  42079e:	mov    DWORD PTR [rsp+0x9c],eax
  4207a5:	jg     0x4207dc
  4207a7:	jmp    0x42095e
  4207ac:	nop    DWORD PTR [rax+0x0]
  4207b0:	movapd xmm2,xmm5
  4207b4:	subsd  xmm2,xmm0
  4207b8:	ucomisd xmm1,xmm2
  4207bc:	ja     0x421307
  4207c2:	mov    eax,DWORD PTR [rsp+0x9c]
  4207c9:	add    eax,0x1
  4207cc:	cmp    r9d,eax
  4207cf:	mov    DWORD PTR [rsp+0x9c],eax
  4207d6:	jle    0x42095e
  4207dc:	mulsd  xmm0,xmm3
  4207e0:	add    rbx,0x1
  4207e4:	pxor   xmm2,xmm2
  4207e8:	mulsd  xmm1,xmm3
  4207ec:	cvttsd2si eax,xmm0
  4207f0:	cvtsi2sd xmm2,eax
  4207f4:	add    eax,0x30
  4207f7:	mov    BYTE PTR [rbx-0x1],al
  4207fa:	subsd  xmm0,xmm2
  4207fe:	ucomisd xmm1,xmm0
  420802:	jbe    0x4207b0
  420804:	ucomisd xmm0,xmm6
  420808:	lea    ebp,[rcx+0x1]
  42080b:	jp     0x420813
  42080d:	je     0x421167
  420813:	mov    r15d,0x10
  420819:	nop    DWORD PTR [rax+0x0]
  420820:	mov    rcx,rsi
  420823:	call   0x421a70
  420828:	cmp    QWORD PTR [rsp+0x138],0x0
  420831:	mov    rax,QWORD PTR [rsp+0x130]
  420839:	mov    BYTE PTR [rbx],0x0
  42083c:	mov    DWORD PTR [rax],ebp
  42083e:	je     0x42084b
  420840:	mov    rax,QWORD PTR [rsp+0x138]
  420848:	mov    QWORD PTR [rax],rbx
  42084b:	mov    rax,QWORD PTR [rsp+0x28]
  420850:	or     DWORD PTR [rax],r15d
  420853:	mov    rax,QWORD PTR [rsp+0x48]
  420858:	jmp    0x4203d7
  42085d:	nop    DWORD PTR [rax]
  420860:	mov    DWORD PTR [rsi+0x14],0x0
  420867:	jmp    0x420381
  42086c:	nop    DWORD PTR [rax+0x0]
  420870:	mov    edx,eax
  420872:	mov    rcx,rsi
  420875:	call   0x421700
  42087a:	mov    eax,DWORD PTR [rsp+0x9c]
  420881:	lea    r11d,[r13+rax*1+0x0]
  420886:	sub    r14d,eax
  420889:	jmp    0x42039b
  42088e:	xchg   ax,ax
  420890:	mov    DWORD PTR [rsp+0x120],0x0
  42089b:	add    ecx,0x3fe
  4208a1:	cmp    ecx,0x7f7
  4208a7:	setbe  al
  4208aa:	jmp    0x4205bf
  4208af:	nop
  4208b0:	mov    DWORD PTR [rsp+0x6c],0x0
  4208b8:	jmp    0x420560
  4208bd:	nop    DWORD PTR [rax]
  4208c0:	mov    edx,DWORD PTR [rsp+0x128]
  4208c7:	test   edx,edx
  4208c9:	jle    0x42117b
  4208cf:	cmp    DWORD PTR [rsp+0x128],0xe
  4208d7:	setbe  bl
  4208da:	mov    ecx,DWORD PTR [rsp+0x128]
  4208e1:	and    ebx,eax
  4208e3:	mov    DWORD PTR [rsp+0x9c],ecx
  4208ea:	mov    DWORD PTR [rsp+0x8c],ecx
  4208f1:	mov    DWORD PTR [rsp+0x68],ecx
  4208f5:	jmp    0x420629
  4208fa:	movapd xmm0,xmm4
  4208fe:	addsd  xmm0,xmm4
  420902:	addsd  xmm0,QWORD PTR [rip+0xcd36]        # 0x42d640
  42090a:	movq   rdx,xmm0
  42090f:	movq   rax,xmm0
  420914:	shr    rdx,0x20
  420918:	mov    eax,eax
  42091a:	sub    edx,0x3400000
  420920:	shl    rdx,0x20
  420924:	or     rax,rdx
  420927:	movapd xmm1,xmm4
  42092b:	mov    QWORD PTR [rsp+0x38],rax
  420930:	movsd  xmm0,QWORD PTR [rsp+0x38]
  420936:	subsd  xmm1,QWORD PTR [rip+0xcd0a]        # 0x42d648
  42093e:	ucomisd xmm1,xmm0
  420942:	ja     0x421224
  420948:	movsd  xmm2,QWORD PTR [rip+0xcd00]        # 0x42d650
  420950:	xorpd  xmm0,xmm2
  420954:	ucomisd xmm0,xmm1
  420958:	ja     0x420d3d
  42095e:	movq   r9,xmm4
  420963:	mov    DWORD PTR [rsp+0x38],0x0
  42096b:	nop    DWORD PTR [rax+rax*1+0x0]
  420970:	test   r11d,r11d
  420973:	js     0x420a12
  420979:	movsxd rax,DWORD PTR [rsp+0x30]
  42097e:	cmp    eax,DWORD PTR [rbp+0x14]
  420981:	jg     0x420a12
  420987:	mov    ebx,DWORD PTR [rsp+0x68]
  42098b:	mov    rdx,QWORD PTR [rip+0xcfce]        # 0x42d960
  420992:	test   ebx,ebx
  420994:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  420999:	jg     0x4210a3
  42099f:	mov    eax,DWORD PTR [rsp+0x128]
  4209a6:	shr    eax,0x1f
  4209a9:	test   al,al
  4209ab:	je     0x4210a3
  4209b1:	test   ebx,ebx
  4209b3:	jne    0x420d3d
  4209b9:	mulsd  xmm2,QWORD PTR [rip+0xcc87]        # 0x42d648
  4209c1:	mov    QWORD PTR [rsp+0x38],r9
  4209c6:	movsd  xmm5,QWORD PTR [rsp+0x38]
  4209cc:	ucomisd xmm2,xmm5
  4209d0:	jae    0x420d3d
  4209d6:	mov    ebp,DWORD PTR [rsp+0x30]
  4209da:	xor    r12d,r12d
  4209dd:	xor    edi,edi
  4209df:	add    ebp,0x2
  4209e2:	mov    rax,QWORD PTR [rsp+0x48]
  4209e7:	mov    r15d,0x20
  4209ed:	lea    rbx,[rax+0x1]
  4209f1:	mov    BYTE PTR [rax],0x31
  4209f4:	mov    rcx,r12
  4209f7:	call   0x421a70
  4209fc:	test   rdi,rdi
  4209ff:	je     0x420820
  420a05:	mov    rcx,rdi
  420a08:	call   0x421a70
  420a0d:	jmp    0x420820
  420a12:	mov    r9d,DWORD PTR [rsp+0x60]
  420a17:	test   r9d,r9d
  420a1a:	je     0x420f20
  420a20:	mov    edx,DWORD PTR [rbp+0x4]
  420a23:	sub    edi,r14d
  420a26:	mov    ecx,r11d
  420a29:	lea    eax,[rdi+0x1]
  420a2c:	sub    ecx,edi
  420a2e:	cmp    ecx,edx
  420a30:	mov    DWORD PTR [rsp+0x9c],eax
  420a37:	jge    0x420a6c
  420a39:	mov    ebx,DWORD PTR [rsp+0x120]
  420a40:	lea    ecx,[rbx-0x3]
  420a43:	and    ecx,0xfffffffd
  420a46:	je     0x420a6c
  420a48:	mov    ebx,DWORD PTR [rsp+0x68]
  420a4c:	sub    r11d,edx
  420a4f:	lea    eax,[r11+0x1]
  420a53:	test   ebx,ebx
  420a55:	mov    DWORD PTR [rsp+0x9c],eax
  420a5c:	setg   cl
  420a5f:	cmp    ebx,eax
  420a61:	setl   dl
  420a64:	test   cl,dl
  420a66:	je     0x4211af
  420a6c:	cmp    DWORD PTR [rsp+0x120],0x1
  420a74:	jle    0x4211af
  420a7a:	mov    ebx,DWORD PTR [rsp+0x58]
  420a7e:	mov    eax,DWORD PTR [rsp+0x68]
  420a82:	mov    r12d,ebx
  420a85:	sub    eax,0x1
  420a88:	sub    r12d,eax
  420a8b:	cmp    ebx,eax
  420a8d:	jge    0x420aa3
  420a8f:	mov    edx,eax
  420a91:	sub    edx,DWORD PTR [rsp+0x58]
  420a95:	xor    r12d,r12d
  420a98:	add    DWORD PTR [rsp+0x88],edx
  420a9f:	mov    DWORD PTR [rsp+0x58],eax
  420aa3:	mov    eax,DWORD PTR [rsp+0x68]
  420aa7:	test   eax,eax
  420aa9:	js     0x421442
  420aaf:	mov    ebx,DWORD PTR [rsp+0x50]
  420ab3:	mov    DWORD PTR [rsp+0x9c],eax
  420aba:	mov    ecx,0x1
  420abf:	add    DWORD PTR [rsp+0x50],eax
  420ac3:	add    DWORD PTR [rsp+0x40],eax
  420ac7:	call   0x421ba0
  420acc:	mov    rdi,rax
  420acf:	mov    ecx,DWORD PTR [rsp+0x40]
  420ad3:	test   ecx,ecx
  420ad5:	mov    eax,ecx
  420ad7:	jle    0x420af5
  420ad9:	test   ebx,ebx
  420adb:	jle    0x420af5
  420add:	cmp    ecx,ebx
  420adf:	cmovg  eax,ebx
  420ae2:	sub    DWORD PTR [rsp+0x50],eax
  420ae6:	sub    ecx,eax
  420ae8:	mov    DWORD PTR [rsp+0x9c],eax
  420aef:	sub    ebx,eax
  420af1:	mov    DWORD PTR [rsp+0x40],ecx
  420af5:	mov    r8d,DWORD PTR [rsp+0x58]
  420afa:	test   r8d,r8d
  420afd:	jle    0x420b4b
  420aff:	mov    ecx,DWORD PTR [rsp+0x60]
  420b03:	test   ecx,ecx
  420b05:	je     0x420f40
  420b0b:	test   r12d,r12d
  420b0e:	jle    0x420b3e
  420b10:	mov    rcx,rdi
  420b13:	mov    edx,r12d
  420b16:	call   0x421d00
  420b1b:	mov    rdx,rsi
  420b1e:	mov    rcx,rax
  420b21:	mov    rdi,rax
  420b24:	call   0x421bd0
  420b29:	mov    rcx,rsi
  420b2c:	mov    QWORD PTR [rsp+0x70],rax
  420b31:	call   0x421a70
  420b36:	mov    rax,QWORD PTR [rsp+0x70]
  420b3b:	mov    rsi,rax
  420b3e:	mov    edx,DWORD PTR [rsp+0x58]
  420b42:	sub    edx,r12d
  420b45:	jne    0x420f44
  420b4b:	mov    ecx,0x1
  420b50:	call   0x421ba0
  420b55:	mov    r12,rax
  420b58:	mov    eax,DWORD PTR [rsp+0x88]
  420b5f:	test   eax,eax
  420b61:	jle    0x420c90
  420b67:	mov    rcx,r12
  420b6a:	mov    edx,eax
  420b6c:	call   0x421d00
  420b71:	cmp    DWORD PTR [rsp+0x120],0x1
  420b79:	mov    r12,rax
  420b7c:	jg     0x420b88
  420b7e:	cmp    r14d,0x1
  420b82:	je     0x420c4c
  420b88:	xor    ebp,ebp
  420b8a:	mov    eax,DWORD PTR [r12+0x14]
  420b8f:	sub    eax,0x1
  420b92:	cdqe   
  420b94:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  420b9a:	xor    eax,0x1f
  420b9d:	sub    eax,DWORD PTR [rsp+0x40]
  420ba1:	mov    edx,DWORD PTR [rsp+0x50]
  420ba5:	sub    eax,0x4
  420ba8:	and    eax,0x1f
  420bab:	add    edx,eax
  420bad:	mov    r13d,eax
  420bb0:	mov    DWORD PTR [rsp+0x9c],eax
  420bb7:	test   edx,edx
  420bb9:	mov    ecx,eax
  420bbb:	jle    0x420bcf
  420bbd:	mov    rcx,rsi
  420bc0:	call   0x421e70
  420bc5:	mov    ecx,DWORD PTR [rsp+0x9c]
  420bcc:	mov    rsi,rax
  420bcf:	mov    edx,DWORD PTR [rsp+0x40]
  420bd3:	add    edx,ecx
  420bd5:	test   edx,edx
  420bd7:	jle    0x420be4
  420bd9:	mov    rcx,r12
  420bdc:	call   0x421e70
  420be1:	mov    r12,rax
  420be4:	mov    eax,DWORD PTR [rsp+0x6c]
  420be8:	test   eax,eax
  420bea:	jne    0x420f61
  420bf0:	mov    r14d,DWORD PTR [rsp+0x68]
  420bf5:	test   r14d,r14d
  420bf8:	jg     0x420db1
  420bfe:	cmp    DWORD PTR [rsp+0x120],0x2
  420c06:	jle    0x420db1
  420c0c:	mov    r11d,DWORD PTR [rsp+0x68]
  420c11:	test   r11d,r11d
  420c14:	jne    0x420d42
  420c1a:	xor    r8d,r8d
  420c1d:	mov    rcx,r12
  420c20:	mov    edx,0x5
  420c25:	call   0x421ae0
  420c2a:	mov    rcx,rsi
  420c2d:	mov    rdx,rax
  420c30:	mov    r12,rax
  420c33:	call   0x421f90
  420c38:	test   eax,eax
  420c3a:	jle    0x420d42
  420c40:	mov    ebp,DWORD PTR [rsp+0x30]
  420c44:	add    ebp,0x2
  420c47:	jmp    0x4209e2
  420c4c:	mov    eax,DWORD PTR [rbp+0x4]
  420c4f:	add    eax,0x1
  420c52:	cmp    r13d,eax
  420c55:	jle    0x420b88
  420c5b:	add    DWORD PTR [rsp+0x50],0x1
  420c60:	add    DWORD PTR [rsp+0x40],0x1
  420c65:	mov    ebp,0x1
  420c6a:	nop    WORD PTR [rax+rax*1+0x0]
  420c70:	mov    edx,DWORD PTR [rsp+0x88]
  420c77:	mov    eax,0x1f
  420c7c:	test   edx,edx
  420c7e:	je     0x420b9d
  420c84:	jmp    0x420b8a
  420c89:	nop    DWORD PTR [rax+0x0]
  420c90:	cmp    DWORD PTR [rsp+0x120],0x1
  420c98:	jg     0x420ca0
  420c9a:	cmp    r14d,0x1
  420c9e:	je     0x420ca4
  420ca0:	xor    ebp,ebp
  420ca2:	jmp    0x420c70
  420ca4:	mov    eax,DWORD PTR [rbp+0x4]
  420ca7:	xor    ebp,ebp
  420ca9:	add    eax,0x1
  420cac:	cmp    r13d,eax
  420caf:	jle    0x420c70
  420cb1:	jmp    0x420c5b
  420cb3:	cmp    DWORD PTR [rsp+0x120],0x2
  420cbb:	mov    DWORD PTR [rsp+0x60],0x0
  420cc3:	je     0x4208c0
  420cc9:	pxor   xmm0,xmm0
  420ccd:	mov    QWORD PTR [rsp+0x60],r9
  420cd2:	mov    DWORD PTR [rsp+0x68],r11d
  420cd7:	cvtsi2sd xmm0,edi
  420cdb:	mulsd  xmm0,QWORD PTR [rip+0xc93d]        # 0x42d620
  420ce3:	cvttsd2si ecx,xmm0
  420ce7:	add    ecx,0x3
  420cea:	mov    DWORD PTR [rsp+0x9c],ecx
  420cf1:	call   0x420070
  420cf6:	mov    QWORD PTR [rsp+0x48],rax
  420cfb:	mov    eax,DWORD PTR [rbp+0xc]
  420cfe:	mov    r11d,DWORD PTR [rsp+0x68]
  420d03:	mov    r9,QWORD PTR [rsp+0x60]
  420d08:	sub    eax,0x1
  420d0b:	mov    DWORD PTR [rsp+0x38],eax
  420d0f:	jne    0x4211bd
  420d15:	mov    eax,0xffffffff
  420d1a:	mov    DWORD PTR [rsp+0x60],0x1
  420d22:	mov    DWORD PTR [rsp+0x128],0x0
  420d2d:	mov    DWORD PTR [rsp+0x8c],eax
  420d34:	mov    DWORD PTR [rsp+0x68],eax
  420d38:	jmp    0x420970
  420d3d:	xor    r12d,r12d
  420d40:	xor    edi,edi
  420d42:	mov    ebp,DWORD PTR [rsp+0x128]
  420d49:	mov    rbx,QWORD PTR [rsp+0x48]
  420d4e:	mov    r15d,0x10
  420d54:	neg    ebp
  420d56:	jmp    0x4209f4
  420d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  420d60:	mov    eax,DWORD PTR [rsp+0x30]
  420d64:	sub    DWORD PTR [rsp+0x50],eax
  420d68:	mov    DWORD PTR [rsp+0x88],0x0
  420d73:	neg    eax
  420d75:	mov    DWORD PTR [rsp+0x58],eax
  420d79:	jmp    0x420599
  420d7e:	xchg   ax,ax
  420d80:	neg    eax
  420d82:	mov    DWORD PTR [rsp+0x40],0x0
  420d8a:	mov    DWORD PTR [rsp+0x50],eax
  420d8e:	jmp    0x42057a
  420d93:	pxor   xmm0,xmm0
  420d97:	cvtsi2sd xmm0,eax
  420d9b:	ucomisd xmm0,xmm1
  420d9f:	jp     0x420da7
  420da1:	je     0x42050b
  420da7:	sub    DWORD PTR [rsp+0x30],0x1
  420dac:	jmp    0x42050b
  420db1:	mov    r10d,DWORD PTR [rsp+0x60]
  420db6:	test   r10d,r10d
  420db9:	je     0x420fc0
  420dbf:	lea    edx,[rbx+r13*1]
  420dc3:	test   edx,edx
  420dc5:	jle    0x420dd2
  420dc7:	mov    rcx,rdi
  420dca:	call   0x421e70
  420dcf:	mov    rdi,rax
  420dd2:	test   ebp,ebp
  420dd4:	mov    r13,rdi
  420dd7:	jne    0x421475
  420ddd:	mov    DWORD PTR [rsp+0x9c],0x1
  420de8:	mov    rbx,QWORD PTR [rsp+0x48]
  420ded:	mov    QWORD PTR [rsp+0x40],r12
  420df2:	mov    QWORD PTR [rsp+0x50],r15
  420df7:	jmp    0x420ebe
  420dfc:	nop    DWORD PTR [rax+0x0]
  420e00:	mov    rcx,r8
  420e03:	call   0x421a70
  420e08:	mov    eax,r12d
  420e0b:	or     eax,DWORD PTR [rsp+0x120]
  420e12:	jne    0x420e2a
  420e14:	mov    ecx,DWORD PTR [rsp+0x38]
  420e18:	test   ecx,ecx
  420e1a:	jne    0x420e2a
  420e1c:	mov    rax,QWORD PTR [rsp+0x50]
  420e21:	test   BYTE PTR [rax],0x1
  420e24:	je     0x4215e5
  420e2a:	test   r14d,r14d
  420e2d:	js     0x421340
  420e33:	or     r14d,DWORD PTR [rsp+0x120]
  420e3b:	jne    0x420e4b
  420e3d:	mov    rax,QWORD PTR [rsp+0x50]
  420e42:	test   BYTE PTR [rax],0x1
  420e45:	je     0x421340
  420e4b:	test   r12d,r12d
  420e4e:	jle    0x420e5b
  420e50:	cmp    DWORD PTR [rsp+0x38],0x2
  420e55:	jne    0x42154f
  420e5b:	add    rbx,0x1
  420e5f:	mov    BYTE PTR [rbx-0x1],bpl
  420e63:	mov    eax,DWORD PTR [rsp+0x68]
  420e67:	cmp    DWORD PTR [rsp+0x9c],eax
  420e6e:	je     0x4214db
  420e74:	xor    r8d,r8d
  420e77:	mov    rcx,rsi
  420e7a:	mov    edx,0xa
  420e7f:	call   0x421ae0
  420e84:	xor    r8d,r8d
  420e87:	cmp    rdi,r13
  420e8a:	mov    rsi,rax
  420e8d:	mov    edx,0xa
  420e92:	mov    rcx,rdi
  420e95:	je     0x420f30
  420e9b:	call   0x421ae0
  420ea0:	mov    rcx,r13
  420ea3:	xor    r8d,r8d
  420ea6:	mov    edx,0xa
  420eab:	mov    rdi,rax
  420eae:	call   0x421ae0
  420eb3:	mov    r13,rax
  420eb6:	add    DWORD PTR [rsp+0x9c],0x1
  420ebe:	mov    r12,QWORD PTR [rsp+0x40]
  420ec3:	mov    rcx,rsi
  420ec6:	mov    rdx,r12
  420ec9:	call   0x420110
  420ece:	mov    rdx,rdi
  420ed1:	mov    rcx,rsi
  420ed4:	mov    r15d,eax
  420ed7:	lea    ebp,[rax+0x30]
  420eda:	call   0x421f90
  420edf:	mov    rcx,r12
  420ee2:	mov    rdx,r13
  420ee5:	mov    r14d,eax
  420ee8:	call   0x421fe0
  420eed:	mov    r9d,DWORD PTR [rax+0x10]
  420ef1:	mov    r8,rax
  420ef4:	mov    r12d,0x1
  420efa:	test   r9d,r9d
  420efd:	jne    0x420e00
  420f03:	mov    rdx,rax
  420f06:	mov    rcx,rsi
  420f09:	mov    QWORD PTR [rsp+0x58],rax
  420f0e:	call   0x421f90
  420f13:	mov    r8,QWORD PTR [rsp+0x58]
  420f18:	mov    r12d,eax
  420f1b:	jmp    0x420e00
  420f20:	mov    r12d,DWORD PTR [rsp+0x58]
  420f25:	mov    ebx,DWORD PTR [rsp+0x50]
  420f29:	xor    edi,edi
  420f2b:	jmp    0x420acf
  420f30:	call   0x421ae0
  420f35:	mov    rdi,rax
  420f38:	mov    r13,rax
  420f3b:	jmp    0x420eb6
  420f40:	mov    edx,DWORD PTR [rsp+0x58]
  420f44:	mov    rcx,rsi
  420f47:	call   0x421d00
  420f4c:	mov    rsi,rax
  420f4f:	jmp    0x420b4b
  420f54:	mov    DWORD PTR [rsp+0x60],0x0
  420f5c:	jmp    0x4205f7
  420f61:	mov    rdx,r12
  420f64:	mov    rcx,rsi
  420f67:	call   0x421f90
  420f6c:	test   eax,eax
  420f6e:	jns    0x420bf0
  420f74:	xor    r8d,r8d
  420f77:	mov    rcx,rsi
  420f7a:	mov    edx,0xa
  420f7f:	sub    DWORD PTR [rsp+0x30],0x1
  420f84:	call   0x421ae0
  420f89:	mov    rsi,rax
  420f8c:	mov    eax,DWORD PTR [rsp+0x60]
  420f90:	test   eax,eax
  420f92:	jne    0x421658
  420f98:	mov    eax,DWORD PTR [rsp+0x8c]
  420f9f:	test   eax,eax
  420fa1:	jg     0x420fb5
  420fa3:	cmp    DWORD PTR [rsp+0x120],0x2
  420fab:	mov    DWORD PTR [rsp+0x68],eax
  420faf:	jg     0x420c0c
  420fb5:	mov    eax,DWORD PTR [rsp+0x8c]
  420fbc:	mov    DWORD PTR [rsp+0x68],eax
  420fc0:	mov    DWORD PTR [rsp+0x9c],0x1
  420fcb:	mov    rbx,QWORD PTR [rsp+0x48]
  420fd0:	mov    r13d,DWORD PTR [rsp+0x68]
  420fd5:	jmp    0x420ffb
  420fd7:	nop    WORD PTR [rax+rax*1+0x0]
  420fe0:	mov    rcx,rsi
  420fe3:	xor    r8d,r8d
  420fe6:	mov    edx,0xa
  420feb:	call   0x421ae0
  420ff0:	add    DWORD PTR [rsp+0x9c],0x1
  420ff8:	mov    rsi,rax
  420ffb:	mov    rdx,r12
  420ffe:	mov    rcx,rsi
  421001:	add    rbx,0x1
  421005:	call   0x420110
  42100a:	lea    ebp,[rax+0x30]
  42100d:	mov    BYTE PTR [rbx-0x1],bpl
  421011:	cmp    DWORD PTR [rsp+0x9c],r13d
  421019:	jl     0x420fe0
  42101b:	xor    r14d,r14d
  42101e:	mov    eax,DWORD PTR [rsp+0x38]
  421022:	test   eax,eax
  421024:	je     0x4213ec
  42102a:	cmp    eax,0x2
  42102d:	je     0x42141c
  421033:	cmp    DWORD PTR [rsi+0x14],0x1
  421037:	jle    0x4215b3
  42103d:	movzx  edx,BYTE PTR [rbx-0x1]
  421041:	mov    rcx,QWORD PTR [rsp+0x48]
  421046:	jmp    0x421060
  421048:	nop    DWORD PTR [rax+rax*1+0x0]
  421050:	cmp    rax,rcx
  421053:	je     0x42120c
  421059:	movzx  edx,BYTE PTR [rax-0x1]
  42105d:	mov    rbx,rax
  421060:	cmp    dl,0x39
  421063:	lea    rax,[rbx-0x1]
  421067:	je     0x421050
  421069:	add    edx,0x1
  42106c:	mov    r15d,0x20
  421072:	mov    BYTE PTR [rax],dl
  421074:	mov    rcx,r12
  421077:	call   0x421a70
  42107c:	test   rdi,rdi
  42107f:	je     0x42116f
  421085:	cmp    r14,rdi
  421088:	je     0x421097
  42108a:	test   r14,r14
  42108d:	je     0x421097
  42108f:	mov    rcx,r14
  421092:	call   0x421a70
  421097:	mov    ebp,DWORD PTR [rsp+0x30]
  42109b:	add    ebp,0x1
  42109e:	jmp    0x420a05
  4210a3:	mov    QWORD PTR [rsp+0x40],r9
  4210a8:	mov    rdi,QWORD PTR [rsp+0x48]
  4210ad:	movsd  xmm0,QWORD PTR [rsp+0x40]
  4210b3:	mov    DWORD PTR [rsp+0x9c],0x1
  4210be:	movapd xmm1,xmm0
  4210c2:	mov    rbx,rdi
  4210c5:	add    rbx,0x1
  4210c9:	divsd  xmm1,xmm2
  4210cd:	cvttsd2si eax,xmm1
  4210d1:	pxor   xmm1,xmm1
  4210d5:	cvtsi2sd xmm1,eax
  4210d9:	lea    edx,[rax+0x30]
  4210dc:	mov    BYTE PTR [rdi],dl
  4210de:	mulsd  xmm1,xmm2
  4210e2:	subsd  xmm0,xmm1
  4210e6:	ucomisd xmm0,xmm6
  4210ea:	jp     0x4210ee
  4210ec:	je     0x421160
  4210ee:	mov    edx,DWORD PTR [rsp+0x9c]
  4210f5:	cmp    DWORD PTR [rsp+0x68],edx
  4210f9:	je     0x4211e7
  4210ff:	movsd  xmm3,QWORD PTR [rip+0xc529]        # 0x42d630
  421107:	movapd xmm4,xmm6
  42110b:	mov    ecx,DWORD PTR [rsp+0x68]
  42110f:	jmp    0x421120
  421111:	mov    edx,DWORD PTR [rsp+0x9c]
  421118:	cmp    ecx,edx
  42111a:	je     0x4211e7
  421120:	mulsd  xmm0,xmm3
  421124:	add    edx,0x1
  421127:	add    rbx,0x1
  42112b:	mov    DWORD PTR [rsp+0x9c],edx
  421132:	movapd xmm1,xmm0
  421136:	divsd  xmm1,xmm2
  42113a:	cvttsd2si eax,xmm1
  42113e:	pxor   xmm1,xmm1
  421142:	cvtsi2sd xmm1,eax
  421146:	lea    edx,[rax+0x30]
  421149:	mov    BYTE PTR [rbx-0x1],dl
  42114c:	mulsd  xmm1,xmm2
  421150:	subsd  xmm0,xmm1
  421154:	ucomisd xmm0,xmm6
  421158:	jp     0x421111
  42115a:	ucomisd xmm0,xmm4
  42115e:	jne    0x421111
  421160:	mov    ebp,DWORD PTR [rsp+0x30]
  421164:	add    ebp,0x1
  421167:	xor    r15d,r15d
  42116a:	jmp    0x420820
  42116f:	mov    ebp,DWORD PTR [rsp+0x30]
  421173:	add    ebp,0x1
  421176:	jmp    0x420820
  42117b:	mov    ebx,0x1
  421180:	mov    DWORD PTR [rsp+0x128],0x1
  42118b:	jmp    0x4208da
  421190:	cmp    DWORD PTR [rsp+0x68],0xe
  421195:	mov    DWORD PTR [rsp+0x9c],0x1
  4211a0:	mov    ecx,0x1
  4211a5:	setbe  bl
  4211a8:	and    ebx,eax
  4211aa:	jmp    0x420629
  4211af:	mov    r12d,DWORD PTR [rsp+0x58]
  4211b4:	mov    ebx,DWORD PTR [rsp+0x50]
  4211b8:	jmp    0x420aba
  4211bd:	mov    eax,0xffffffff
  4211c2:	xor    ebx,ebx
  4211c4:	mov    DWORD PTR [rsp+0x60],0x1
  4211cc:	mov    DWORD PTR [rsp+0x8c],eax
  4211d3:	mov    DWORD PTR [rsp+0x68],eax
  4211d7:	mov    DWORD PTR [rsp+0x128],0x0
  4211e2:	jmp    0x420653
  4211e7:	mov    r10d,DWORD PTR [rsp+0x38]
  4211ec:	test   r10d,r10d
  4211ef:	je     0x4214ae
  4211f5:	cmp    DWORD PTR [rsp+0x38],0x1
  4211fa:	je     0x4215a1
  421200:	mov    ebp,DWORD PTR [rsp+0x30]
  421204:	add    ebp,0x1
  421207:	jmp    0x420813
  42120c:	mov    rax,QWORD PTR [rsp+0x48]
  421211:	add    DWORD PTR [rsp+0x30],0x1
  421216:	mov    r15d,0x20
  42121c:	mov    BYTE PTR [rax],0x31
  42121f:	jmp    0x421074
  421224:	mov    ebp,0x2
  421229:	xor    r12d,r12d
  42122c:	xor    edi,edi
  42122e:	jmp    0x4209e2
  421233:	mov    r10,QWORD PTR [rip+0xc726]        # 0x42d960
  42123a:	mov    QWORD PTR [rsp+0x38],rax
  42123f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  421245:	mov    DWORD PTR [rsp+0x9c],0x1
  421250:	mov    rbx,QWORD PTR [rsp+0x48]
  421255:	movsd  xmm1,QWORD PTR [rip+0xc3d3]        # 0x42d630
  42125d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  421263:	jmp    0x421273
  421265:	mulsd  xmm0,xmm1
  421269:	add    edx,0x1
  42126c:	mov    DWORD PTR [rsp+0x9c],edx
  421273:	cvttsd2si eax,xmm0
  421277:	test   eax,eax
  421279:	je     0x421287
  42127b:	pxor   xmm2,xmm2
  42127f:	cvtsi2sd xmm2,eax
  421283:	subsd  xmm0,xmm2
  421287:	add    rbx,0x1
  42128b:	add    eax,0x30
  42128e:	mov    BYTE PTR [rbx-0x1],al
  421291:	mov    edx,DWORD PTR [rsp+0x9c]
  421298:	cmp    edx,r9d
  42129b:	jne    0x421265
  42129d:	movsd  xmm1,QWORD PTR [rip+0xc3bb]        # 0x42d660
  4212a5:	movapd xmm2,xmm3
  4212a9:	addsd  xmm2,xmm1
  4212ad:	ucomisd xmm0,xmm2
  4212b1:	ja     0x421307
  4212b3:	subsd  xmm1,xmm3
  4212b7:	ucomisd xmm1,xmm0
  4212bb:	jbe    0x42095e
  4212c1:	ucomisd xmm0,xmm6
  4212c5:	jp     0x42164d
  4212cb:	jne    0x42164d
  4212d1:	xor    r15d,r15d
  4212d4:	jmp    0x4212e7
  4212d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4212e0:	movzx  eax,BYTE PTR [rbx-0x2]
  4212e4:	mov    rbx,rdx
  4212e7:	cmp    al,0x30
  4212e9:	lea    rdx,[rbx-0x1]
  4212ed:	je     0x4212e0
  4212ef:	lea    ebp,[rcx+0x1]
  4212f2:	jmp    0x420820
  4212f7:	test   al,0x1
  4212f9:	mov    ecx,DWORD PTR [rsp+0x30]
  4212fd:	movzx  eax,BYTE PTR [rbx-0x1]
  421301:	je     0x42164d
  421307:	mov    r8,QWORD PTR [rsp+0x48]
  42130c:	jmp    0x421320
  42130e:	xchg   ax,ax
  421310:	cmp    rdx,r8
  421313:	je     0x42145c
  421319:	movzx  eax,BYTE PTR [rdx-0x1]
  42131d:	mov    rbx,rdx
  421320:	cmp    al,0x39
  421322:	lea    rdx,[rbx-0x1]
  421326:	je     0x421310
  421328:	mov    QWORD PTR [rsp+0x48],r8
  42132d:	add    eax,0x1
  421330:	mov    BYTE PTR [rdx],al
  421332:	lea    ebp,[rcx+0x1]
  421335:	mov    r15d,0x20
  42133b:	jmp    0x420820
  421340:	mov    edx,DWORD PTR [rsp+0x38]
  421344:	mov    eax,r12d
  421347:	mov    r14d,ebp
  42134a:	mov    r12,QWORD PTR [rsp+0x40]
  42134f:	test   edx,edx
  421351:	je     0x421581
  421357:	cmp    DWORD PTR [rsi+0x14],0x1
  42135b:	jle    0x421577
  421361:	cmp    DWORD PTR [rsp+0x38],0x2
  421366:	jne    0x4213b7
  421368:	jmp    0x421596
  42136d:	nop    DWORD PTR [rax]
  421370:	add    rbx,0x1
  421374:	xor    r8d,r8d
  421377:	mov    rcx,r13
  42137a:	mov    BYTE PTR [rbx-0x1],r14b
  42137e:	mov    edx,0xa
  421383:	call   0x421ae0
  421388:	cmp    rdi,r13
  42138b:	mov    rcx,rsi
  42138e:	mov    edx,0xa
  421393:	cmove  rdi,rax
  421397:	xor    r8d,r8d
  42139a:	mov    rbp,rax
  42139d:	call   0x421ae0
  4213a2:	mov    rdx,r12
  4213a5:	mov    rcx,rax
  4213a8:	mov    rsi,rax
  4213ab:	call   0x420110
  4213b0:	lea    r14d,[rax+0x30]
  4213b4:	mov    r13,rbp
  4213b7:	mov    rdx,r13
  4213ba:	mov    rcx,r12
  4213bd:	call   0x421f90
  4213c2:	test   eax,eax
  4213c4:	jg     0x421370
  4213c6:	cmp    r14d,0x39
  4213ca:	je     0x4215c6
  4213d0:	add    r14d,0x1
  4213d4:	mov    r15d,0x20
  4213da:	mov    BYTE PTR [rbx],r14b
  4213dd:	mov    r14,rdi
  4213e0:	add    rbx,0x1
  4213e4:	mov    rdi,r13
  4213e7:	jmp    0x421074
  4213ec:	mov    rcx,rsi
  4213ef:	mov    edx,0x1
  4213f4:	call   0x421e70
  4213f9:	mov    rdx,r12
  4213fc:	mov    rcx,rax
  4213ff:	mov    rsi,rax
  421402:	call   0x421f90
  421407:	cmp    eax,0x0
  42140a:	jg     0x42103d
  421410:	jne    0x42141c
  421412:	and    bpl,0x1
  421416:	jne    0x42103d
  42141c:	cmp    DWORD PTR [rsi+0x14],0x1
  421420:	mov    r15d,0x10
  421426:	jg     0x421433
  421428:	jmp    0x4216bd
  42142d:	nop    DWORD PTR [rax]
  421430:	mov    rbx,rax
  421433:	cmp    BYTE PTR [rbx-0x1],0x30
  421437:	lea    rax,[rbx-0x1]
  42143b:	je     0x421430
  42143d:	jmp    0x421074
  421442:	mov    ebx,DWORD PTR [rsp+0x50]
  421446:	mov    DWORD PTR [rsp+0x9c],0x0
  421451:	xor    eax,eax
  421453:	sub    ebx,DWORD PTR [rsp+0x68]
  421457:	jmp    0x420aba
  42145c:	mov    QWORD PTR [rsp+0x48],r8
  421461:	add    ecx,0x1
  421464:	mov    BYTE PTR [r8],0x30
  421468:	mov    rdx,r8
  42146b:	mov    eax,0x31
  421470:	jmp    0x421330
  421475:	mov    ecx,DWORD PTR [rdi+0x8]
  421478:	call   0x421960
  42147d:	lea    rcx,[rax+0x10]
  421481:	mov    rbx,rax
  421484:	movsxd rax,DWORD PTR [rdi+0x14]
  421488:	lea    rdx,[rdi+0x10]
  42148c:	lea    r8,[rax*4+0x8]
  421494:	call   0x422810
  421499:	mov    edx,0x1
  42149e:	mov    rcx,rbx
  4214a1:	call   0x421e70
  4214a6:	mov    r13,rax
  4214a9:	jmp    0x420ddd
  4214ae:	addsd  xmm0,xmm0
  4214b2:	ucomisd xmm0,xmm2
  4214b6:	ja     0x4215a1
  4214bc:	ucomisd xmm2,xmm0
  4214c0:	jp     0x4214c8
  4214c2:	je     0x4212f7
  4214c8:	movzx  eax,BYTE PTR [rbx-0x1]
  4214cc:	mov    ecx,DWORD PTR [rsp+0x30]
  4214d0:	mov    r15d,0x10
  4214d6:	jmp    0x4212e7
  4214db:	mov    r14,rdi
  4214de:	mov    r12,QWORD PTR [rsp+0x40]
  4214e3:	mov    rdi,r13
  4214e6:	jmp    0x42101e
  4214eb:	mov    eax,DWORD PTR [rsp+0x68]
  4214ef:	test   eax,eax
  4214f1:	je     0x4208fa
  4214f7:	mov    r9d,DWORD PTR [rsp+0x8c]
  4214ff:	test   r9d,r9d
  421502:	jle    0x42095e
  421508:	movsd  xmm0,QWORD PTR [rip+0xc120]        # 0x42d630
  421510:	mov    ecx,0xffffffff
  421515:	movsd  xmm1,QWORD PTR [rip+0xc11b]        # 0x42d638
  42151d:	mulsd  xmm0,xmm4
  421521:	mulsd  xmm1,xmm0
  421525:	addsd  xmm1,QWORD PTR [rip+0xc113]        # 0x42d640
  42152d:	movq   rdx,xmm1
  421532:	movq   rax,xmm1
  421537:	shr    rdx,0x20
  42153b:	mov    eax,eax
  42153d:	sub    edx,0x3400000
  421543:	shl    rdx,0x20
  421547:	or     rax,rdx
  42154a:	jmp    0x420702
  42154f:	cmp    ebp,0x39
  421552:	mov    r12,QWORD PTR [rsp+0x40]
  421557:	mov    rax,rbx
  42155a:	je     0x4215c9
  42155c:	add    ebp,0x1
  42155f:	mov    r14,rdi
  421562:	add    rbx,0x1
  421566:	mov    BYTE PTR [rax],bpl
  421569:	mov    rdi,r13
  42156c:	mov    r15d,0x20
  421572:	jmp    0x421074
  421577:	cmp    DWORD PTR [rsi+0x18],0x0
  42157b:	jne    0x421361
  421581:	test   eax,eax
  421583:	jg     0x421619
  421589:	xor    r15d,r15d
  42158c:	cmp    DWORD PTR [rsi+0x14],0x1
  421590:	jle    0x421698
  421596:	mov    r15d,0x10
  42159c:	jmp    0x4213da
  4215a1:	movzx  eax,BYTE PTR [rbx-0x1]
  4215a5:	mov    ecx,DWORD PTR [rsp+0x30]
  4215a9:	mov    r8,QWORD PTR [rsp+0x48]
  4215ae:	jmp    0x421320
  4215b3:	mov    eax,DWORD PTR [rsi+0x18]
  4215b6:	test   eax,eax
  4215b8:	jne    0x42103d
  4215be:	xor    r15d,r15d
  4215c1:	jmp    0x421433
  4215c6:	mov    rax,rbx
  4215c9:	mov    r14,rdi
  4215cc:	add    rbx,0x1
  4215d0:	mov    rdi,r13
  4215d3:	mov    BYTE PTR [rax],0x39
  4215d6:	mov    edx,0x39
  4215db:	mov    rcx,QWORD PTR [rsp+0x48]
  4215e0:	jmp    0x421060
  4215e5:	cmp    ebp,0x39
  4215e8:	mov    r12,QWORD PTR [rsp+0x40]
  4215ed:	mov    rax,rbx
  4215f0:	je     0x4215c6
  4215f2:	test   r14d,r14d
  4215f5:	jle    0x4216d0
  4215fb:	mov    ebp,r15d
  4215fe:	mov    r15d,0x20
  421604:	add    ebp,0x31
  421607:	mov    r14,rdi
  42160a:	add    rbx,0x1
  42160e:	mov    BYTE PTR [rax],bpl
  421611:	mov    rdi,r13
  421614:	jmp    0x421074
  421619:	mov    rcx,rsi
  42161c:	mov    edx,0x1
  421621:	call   0x421e70
  421626:	mov    rdx,r12
  421629:	mov    rcx,rax
  42162c:	mov    rsi,rax
  42162f:	call   0x421f90
  421634:	cmp    eax,0x0
  421637:	jle    0x4216aa
  421639:	cmp    ebp,0x39
  42163c:	je     0x4215c6
  42163e:	lea    r14d,[rbp+0x1]
  421642:	mov    r15d,0x20
  421648:	jmp    0x42158c
  42164d:	mov    r15d,0x10
  421653:	jmp    0x4212e7
  421658:	xor    r8d,r8d
  42165b:	mov    rcx,rdi
  42165e:	mov    edx,0xa
  421663:	call   0x421ae0
  421668:	mov    rdi,rax
  42166b:	mov    eax,DWORD PTR [rsp+0x8c]
  421672:	test   eax,eax
  421674:	jg     0x421688
  421676:	cmp    DWORD PTR [rsp+0x120],0x2
  42167e:	mov    DWORD PTR [rsp+0x68],eax
  421682:	jg     0x420c0c
  421688:	mov    eax,DWORD PTR [rsp+0x8c]
  42168f:	mov    DWORD PTR [rsp+0x68],eax
  421693:	jmp    0x420dbf
  421698:	cmp    DWORD PTR [rsi+0x18],0x0
  42169c:	mov    eax,0x10
  4216a1:	cmovne r15d,eax
  4216a5:	jmp    0x4213da
  4216aa:	jne    0x4216b2
  4216ac:	test   bpl,0x1
  4216b0:	jne    0x421639
  4216b2:	mov    r15d,0x20
  4216b8:	jmp    0x42158c
  4216bd:	cmp    DWORD PTR [rsi+0x18],0x1
  4216c1:	sbb    r15d,r15d
  4216c4:	not    r15d
  4216c7:	and    r15d,0x10
  4216cb:	jmp    0x421433
  4216d0:	cmp    DWORD PTR [rsi+0x14],0x1
  4216d4:	mov    r15d,0x10
  4216da:	jg     0x421607
  4216e0:	cmp    DWORD PTR [rsi+0x18],0x1
  4216e4:	sbb    r15d,r15d
  4216e7:	not    r15d
  4216ea:	and    r15d,0x10
  4216ee:	jmp    0x421607
  4216f3:	xor    eax,eax
  4216f5:	jmp    0x4203d7
  4216fa:	nop
  4216fb:	nop
  4216fc:	nop
  4216fd:	nop
  4216fe:	nop
  4216ff:	nop
  421700:	push   rbp
  421701:	push   rdi
  421702:	push   rsi
  421703:	push   rbx
  421704:	mov    rsi,rcx
  421707:	lea    r10,[rcx+0x18]
  42170b:	movsxd rcx,DWORD PTR [rcx+0x14]
  42170f:	mov    eax,edx
  421711:	sar    eax,0x5
  421714:	cmp    eax,ecx
  421716:	jge    0x4217a0
  42171c:	cdqe   
  42171e:	and    edx,0x1f
  421721:	lea    rbx,[r10+rcx*4]
  421725:	lea    rdi,[r10+rax*4]
  421729:	je     0x4217b3
  42172f:	mov    r9d,DWORD PTR [rdi]
  421732:	lea    r8,[rdi+0x4]
  421736:	mov    ebp,0x20
  42173b:	mov    ecx,edx
  42173d:	sub    ebp,edx
  42173f:	shr    r9d,cl
  421742:	cmp    rbx,r8
  421745:	jbe    0x4217f8
  42174b:	mov    r11,r10
  42174e:	xchg   ax,ax
  421750:	mov    eax,DWORD PTR [r8]
  421753:	mov    ecx,ebp
  421755:	add    r11,0x4
  421759:	add    r8,0x4
  42175d:	shl    eax,cl
  42175f:	mov    ecx,edx
  421761:	or     eax,r9d
  421764:	mov    DWORD PTR [r11-0x4],eax
  421768:	mov    r9d,DWORD PTR [r8-0x4]
  42176c:	shr    r9d,cl
  42176f:	cmp    rbx,r8
  421772:	ja     0x421750
  421774:	sub    rbx,rdi
  421777:	lea    rax,[rbx-0x5]
  42177b:	shr    rax,0x2
  42177f:	lea    rax,[r10+rax*4+0x4]
  421784:	test   r9d,r9d
  421787:	mov    DWORD PTR [rax],r9d
  42178a:	je     0x421790
  42178c:	add    rax,0x4
  421790:	sub    rax,r10
  421793:	shr    rax,0x2
  421797:	jmp    0x4217ec
  421799:	nop    DWORD PTR [rax+0x0]
  4217a0:	mov    DWORD PTR [rsi+0x14],0x0
  4217a7:	mov    DWORD PTR [rsi+0x18],0x0
  4217ae:	pop    rbx
  4217af:	pop    rsi
  4217b0:	pop    rdi
  4217b1:	pop    rbp
  4217b2:	ret    
  4217b3:	cmp    rbx,rdi
  4217b6:	mov    rdx,r10
  4217b9:	mov    rax,rdi
  4217bc:	jbe    0x4217a0
  4217be:	xchg   ax,ax
  4217c0:	add    rax,0x4
  4217c4:	mov    r8d,DWORD PTR [rax-0x4]
  4217c8:	add    rdx,0x4
  4217cc:	cmp    rbx,rax
  4217cf:	mov    DWORD PTR [rdx-0x4],r8d
  4217d3:	ja     0x4217c0
  4217d5:	not    rdi
  4217d8:	lea    rax,[rdi+rbx*1]
  4217dc:	shr    rax,0x2
  4217e0:	lea    rax,[rax*4+0x4]
  4217e8:	shr    rax,0x2
  4217ec:	test   eax,eax
  4217ee:	mov    DWORD PTR [rsi+0x14],eax
  4217f1:	je     0x4217a7
  4217f3:	pop    rbx
  4217f4:	pop    rsi
  4217f5:	pop    rdi
  4217f6:	pop    rbp
  4217f7:	ret    
  4217f8:	mov    rax,r10
  4217fb:	jmp    0x421784
  4217fd:	nop    DWORD PTR [rax]
  421800:	movsxd rax,DWORD PTR [rcx+0x14]
  421804:	lea    rdx,[rcx+0x18]
  421808:	lea    r8,[rdx+rax*4]
  42180c:	cmp    rdx,r8
  42180f:	jae    0x42183b
  421811:	mov    ecx,DWORD PTR [rcx+0x18]
  421814:	xor    eax,eax
  421816:	test   ecx,ecx
  421818:	je     0x421826
  42181a:	jmp    0x421834
  42181c:	nop    DWORD PTR [rax+0x0]
  421820:	mov    ecx,DWORD PTR [rdx]
  421822:	test   ecx,ecx
  421824:	jne    0x421834
  421826:	add    rdx,0x4
  42182a:	add    eax,0x20
  42182d:	cmp    r8,rdx
  421830:	ja     0x421820
  421832:	repz ret 
  421834:	tzcnt  ecx,ecx
  421838:	add    eax,ecx
  42183a:	ret    
  42183b:	xor    eax,eax
  42183d:	ret    
  42183e:	nop
  42183f:	nop
  421840:	push   rsi
  421841:	push   rbx
  421842:	sub    rsp,0x28
  421846:	mov    eax,DWORD PTR [rip+0x141c4]        # 0x435a10
  42184c:	movsxd rsi,ecx
  42184f:	cmp    eax,0x2
  421852:	je     0x4218bd
  421854:	test   eax,eax
  421856:	je     0x421882
  421858:	cmp    eax,0x1
  42185b:	jne    0x42187b
  42185d:	mov    rbx,QWORD PTR [rip+0x157e8]        # 0x43704c
  421864:	mov    ecx,0x1
  421869:	call   rbx
  42186b:	mov    eax,DWORD PTR [rip+0x1419f]        # 0x435a10
  421871:	cmp    eax,0x1
  421874:	je     0x421864
  421876:	cmp    eax,0x2
  421879:	je     0x4218bd
  42187b:	add    rsp,0x28
  42187f:	pop    rbx
  421880:	pop    rsi
  421881:	ret    
  421882:	mov    al,0x1
  421884:	xchg   DWORD PTR [rip+0x14186],eax        # 0x435a10
  42188a:	test   eax,eax
  42188c:	jne    0x4218e0
  42188e:	lea    rcx,[rip+0x141ab]        # 0x435a40
  421895:	mov    rbx,QWORD PTR [rip+0x15750]        # 0x436fec
  42189c:	call   rbx
  42189e:	lea    rcx,[rip+0x141c3]        # 0x435a68
  4218a5:	call   rbx
  4218a7:	lea    rcx,[rip+0x62]        # 0x421910
  4218ae:	call   0x41be20
  4218b3:	mov    DWORD PTR [rip+0x14153],0x2        # 0x435a10
  4218bd:	lea    rdx,[rsi+rsi*4]
  4218c1:	lea    rax,[rip+0x14178]        # 0x435a40
  4218c8:	lea    rcx,[rax+rdx*8]
  4218cc:	mov    rax,QWORD PTR [rip+0x15691]        # 0x436f64
  4218d3:	add    rsp,0x28
  4218d7:	pop    rbx
  4218d8:	pop    rsi
  4218d9:	rex.W jmp rax
  4218dc:	nop    DWORD PTR [rax+0x0]
  4218e0:	cmp    eax,0x2
  4218e3:	je     0x421900
  4218e5:	mov    eax,DWORD PTR [rip+0x14125]        # 0x435a10
  4218eb:	cmp    eax,0x1
  4218ee:	je     0x42185d
  4218f4:	jmp    0x421876
  4218f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421900:	mov    DWORD PTR [rip+0x14106],0x2        # 0x435a10
  42190a:	jmp    0x4218bd
  42190c:	nop    DWORD PTR [rax+0x0]
  421910:	push   rbx
  421911:	sub    rsp,0x20
  421915:	mov    eax,0x3
  42191a:	xchg   DWORD PTR [rip+0x140f0],eax        # 0x435a10
  421920:	cmp    eax,0x2
  421923:	je     0x421930
  421925:	add    rsp,0x20
  421929:	pop    rbx
  42192a:	ret    
  42192b:	nop    DWORD PTR [rax+rax*1+0x0]
  421930:	mov    rbx,QWORD PTR [rip+0x15625]        # 0x436f5c
  421937:	lea    rcx,[rip+0x14102]        # 0x435a40
  42193e:	call   rbx
  421940:	lea    rcx,[rip+0x14121]        # 0x435a68
  421947:	mov    rax,rbx
  42194a:	add    rsp,0x20
  42194e:	pop    rbx
  42194f:	rex.W jmp rax
  421952:	nop    DWORD PTR [rax+0x0]
  421956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421960:	push   rdi
  421961:	push   rsi
  421962:	push   rbx
  421963:	sub    rsp,0x20
  421967:	mov    ebx,ecx
  421969:	xor    ecx,ecx
  42196b:	call   0x421840
  421970:	cmp    ebx,0x9
  421973:	jg     0x4219b0
  421975:	lea    rdx,[rip+0x14044]        # 0x4359c0
  42197c:	movsxd rcx,ebx
  42197f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  421983:	test   rdi,rdi
  421986:	je     0x421a10
  42198c:	cmp    DWORD PTR [rip+0x1407d],0x2        # 0x435a10
  421993:	mov    r8,QWORD PTR [rdi]
  421996:	mov    QWORD PTR [rdx+rcx*8],r8
  42199a:	jne    0x4219f6
  42199c:	lea    rcx,[rip+0x1409d]        # 0x435a40
  4219a3:	call   QWORD PTR [rip+0x15653]        # 0x436ffc
  4219a9:	jmp    0x4219f6
  4219ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4219b0:	mov    eax,0x1
  4219b5:	mov    ecx,ebx
  4219b7:	shl    eax,cl
  4219b9:	mov    esi,eax
  4219bb:	lea    eax,[rax-0x1]
  4219be:	cdqe   
  4219c0:	lea    rdx,[rax*4+0x27]
  4219c8:	shr    rdx,0x3
  4219cc:	mov    edx,edx
  4219ce:	lea    rcx,[rdx*8+0x0]
  4219d6:	call   0x422820
  4219db:	test   rax,rax
  4219de:	mov    rdi,rax
  4219e1:	je     0x421a6a
  4219e7:	cmp    DWORD PTR [rip+0x14022],0x2        # 0x435a10
  4219ee:	mov    DWORD PTR [rdi+0x8],ebx
  4219f1:	mov    DWORD PTR [rdi+0xc],esi
  4219f4:	je     0x42199c
  4219f6:	mov    DWORD PTR [rdi+0x14],0x0
  4219fd:	mov    DWORD PTR [rdi+0x10],0x0
  421a04:	mov    rax,rdi
  421a07:	add    rsp,0x20
  421a0b:	pop    rbx
  421a0c:	pop    rsi
  421a0d:	pop    rdi
  421a0e:	ret    
  421a0f:	nop
  421a10:	mov    ecx,ebx
  421a12:	mov    eax,0x1
  421a17:	mov    rdi,QWORD PTR [rip+0x4132]        # 0x425b50
  421a1e:	shl    eax,cl
  421a20:	lea    rcx,[rip+0x13699]        # 0x4350c0
  421a27:	lea    edx,[rax-0x1]
  421a2a:	mov    esi,eax
  421a2c:	mov    rax,rdi
  421a2f:	movsxd rdx,edx
  421a32:	sub    rax,rcx
  421a35:	lea    rdx,[rdx*4+0x27]
  421a3d:	mov    rcx,rax
  421a40:	sar    rcx,0x3
  421a44:	shr    rdx,0x3
  421a48:	mov    edx,edx
  421a4a:	add    rcx,rdx
  421a4d:	cmp    rcx,0x120
  421a54:	ja     0x4219ce
  421a5a:	lea    rdx,[rdi+rdx*8]
  421a5e:	mov    QWORD PTR [rip+0x40eb],rdx        # 0x425b50
  421a65:	jmp    0x4219e7
  421a6a:	xor    eax,eax
  421a6c:	jmp    0x421a07
  421a6e:	xchg   ax,ax
  421a70:	push   rbx
  421a71:	sub    rsp,0x20
  421a75:	test   rcx,rcx
  421a78:	je     0x421aa9
  421a7a:	cmp    DWORD PTR [rcx+0x8],0x9
  421a7e:	jg     0x421ab0
  421a80:	mov    rbx,rcx
  421a83:	xor    ecx,ecx
  421a85:	call   0x421840
  421a8a:	movsxd rdx,DWORD PTR [rbx+0x8]
  421a8e:	lea    rax,[rip+0x13f2b]        # 0x4359c0
  421a95:	cmp    DWORD PTR [rip+0x13f74],0x2        # 0x435a10
  421a9c:	mov    rcx,QWORD PTR [rax+rdx*8]
  421aa0:	mov    QWORD PTR [rax+rdx*8],rbx
  421aa4:	mov    QWORD PTR [rbx],rcx
  421aa7:	je     0x421ac0
  421aa9:	add    rsp,0x20
  421aad:	pop    rbx
  421aae:	ret    
  421aaf:	nop
  421ab0:	add    rsp,0x20
  421ab4:	pop    rbx
  421ab5:	jmp    0x422858
  421aba:	nop    WORD PTR [rax+rax*1+0x0]
  421ac0:	mov    rax,QWORD PTR [rip+0x15535]        # 0x436ffc
  421ac7:	lea    rcx,[rip+0x13f72]        # 0x435a40
  421ace:	add    rsp,0x20
  421ad2:	pop    rbx
  421ad3:	rex.W jmp rax
  421ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ae0:	push   rbp
  421ae1:	push   rdi
  421ae2:	push   rsi
  421ae3:	push   rbx
  421ae4:	sub    rsp,0x28
  421ae8:	mov    esi,DWORD PTR [rcx+0x14]
  421aeb:	xor    r9d,r9d
  421aee:	lea    r10,[rcx+0x18]
  421af2:	mov    rdi,rcx
  421af5:	movsxd rbx,r8d
  421af8:	movsxd rdx,edx
  421afb:	nop    DWORD PTR [rax+rax*1+0x0]
  421b00:	mov    eax,DWORD PTR [r10+r9*4]
  421b04:	imul   rax,rdx
  421b08:	add    rax,rbx
  421b0b:	mov    rbx,rax
  421b0e:	mov    DWORD PTR [r10+r9*4],eax
  421b12:	add    r9,0x1
  421b16:	shr    rbx,0x20
  421b1a:	cmp    esi,r9d
  421b1d:	jg     0x421b00
  421b1f:	test   rbx,rbx
  421b22:	mov    rax,rdi
  421b25:	je     0x421b3c
  421b27:	cmp    esi,DWORD PTR [rdi+0xc]
  421b2a:	jge    0x421b45
  421b2c:	movsxd rax,esi
  421b2f:	add    esi,0x1
  421b32:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  421b36:	mov    DWORD PTR [rdi+0x14],esi
  421b39:	mov    rax,rdi
  421b3c:	add    rsp,0x28
  421b40:	pop    rbx
  421b41:	pop    rsi
  421b42:	pop    rdi
  421b43:	pop    rbp
  421b44:	ret    
  421b45:	mov    eax,DWORD PTR [rdi+0x8]
  421b48:	lea    ecx,[rax+0x1]
  421b4b:	call   0x421960
  421b50:	test   rax,rax
  421b53:	mov    rbp,rax
  421b56:	je     0x421b8e
  421b58:	lea    rcx,[rax+0x10]
  421b5c:	movsxd rax,DWORD PTR [rdi+0x14]
  421b60:	lea    rdx,[rdi+0x10]
  421b64:	lea    r8,[rax*4+0x8]
  421b6c:	call   0x422810
  421b71:	mov    rcx,rdi
  421b74:	mov    rdi,rbp
  421b77:	call   0x421a70
  421b7c:	movsxd rax,esi
  421b7f:	add    esi,0x1
  421b82:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  421b86:	mov    DWORD PTR [rdi+0x14],esi
  421b89:	mov    rax,rdi
  421b8c:	jmp    0x421b3c
  421b8e:	xor    eax,eax
  421b90:	jmp    0x421b3c
  421b92:	nop    DWORD PTR [rax+0x0]
  421b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ba0:	push   rbx
  421ba1:	sub    rsp,0x20
  421ba5:	mov    ebx,ecx
  421ba7:	mov    ecx,0x1
  421bac:	call   0x421960
  421bb1:	test   rax,rax
  421bb4:	je     0x421bc0
  421bb6:	mov    DWORD PTR [rax+0x18],ebx
  421bb9:	mov    DWORD PTR [rax+0x14],0x1
  421bc0:	add    rsp,0x20
  421bc4:	pop    rbx
  421bc5:	ret    
  421bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421bd0:	push   r14
  421bd2:	push   r13
  421bd4:	push   r12
  421bd6:	push   rbp
  421bd7:	push   rdi
  421bd8:	push   rsi
  421bd9:	push   rbx
  421bda:	sub    rsp,0x20
  421bde:	movsxd r13,DWORD PTR [rcx+0x14]
  421be2:	movsxd rbx,DWORD PTR [rdx+0x14]
  421be6:	mov    r12,rcx
  421be9:	mov    r14,rdx
  421bec:	cmp    r13d,ebx
  421bef:	jl     0x421cf1
  421bf5:	mov    eax,ebx
  421bf7:	movsxd rbx,r13d
  421bfa:	movsxd r13,eax
  421bfd:	xor    eax,eax
  421bff:	lea    esi,[rbx+r13*1]
  421c03:	cmp    esi,DWORD PTR [r12+0xc]
  421c08:	setg   al
  421c0b:	add    eax,DWORD PTR [r12+0x8]
  421c10:	mov    ecx,eax
  421c12:	call   0x421960
  421c17:	test   rax,rax
  421c1a:	je     0x421cfc
  421c20:	lea    rdi,[rax+0x18]
  421c24:	movsxd rdx,esi
  421c27:	lea    rbp,[rdi+rdx*4]
  421c2b:	mov    r8,rdi
  421c2e:	cmp    rdi,rbp
  421c31:	jae    0x421c43
  421c33:	mov    DWORD PTR [r8],0x0
  421c3a:	add    r8,0x4
  421c3e:	cmp    rbp,r8
  421c41:	ja     0x421c33
  421c43:	lea    rdx,[r14+0x18]
  421c47:	add    r12,0x18
  421c4b:	lea    rbx,[r12+rbx*4]
  421c4f:	lea    r13,[rdx+r13*4]
  421c53:	cmp    rdx,r13
  421c56:	jae    0x421cb9
  421c58:	nop    DWORD PTR [rax+rax*1+0x0]
  421c60:	add    rdx,0x4
  421c64:	mov    r11d,DWORD PTR [rdx-0x4]
  421c68:	test   r11d,r11d
  421c6b:	je     0x421cb0
  421c6d:	mov    r9,rdi
  421c70:	mov    r8,r12
  421c73:	xor    r10d,r10d
  421c76:	jmp    0x421c83
  421c78:	nop    DWORD PTR [rax+rax*1+0x0]
  421c80:	mov    r9,r14
  421c83:	add    r8,0x4
  421c87:	mov    ecx,DWORD PTR [r8-0x4]
  421c8b:	mov    r14d,DWORD PTR [r9]
  421c8e:	imul   rcx,r11
  421c92:	add    rcx,r14
  421c95:	lea    r14,[r9+0x4]
  421c99:	add    rcx,r10
  421c9c:	mov    r10,rcx
  421c9f:	mov    DWORD PTR [r14-0x4],ecx
  421ca3:	shr    r10,0x20
  421ca7:	cmp    rbx,r8
  421caa:	ja     0x421c80
  421cac:	mov    DWORD PTR [r9+0x4],r10d
  421cb0:	add    rdi,0x4
  421cb4:	cmp    r13,rdx
  421cb7:	ja     0x421c60
  421cb9:	test   esi,esi
  421cbb:	jle    0x421cdf
  421cbd:	mov    r8d,DWORD PTR [rbp-0x4]
  421cc1:	lea    rdx,[rbp-0x4]
  421cc5:	test   r8d,r8d
  421cc8:	je     0x421cda
  421cca:	jmp    0x421cdf
  421ccc:	nop    DWORD PTR [rax+0x0]
  421cd0:	sub    rdx,0x4
  421cd4:	mov    ecx,DWORD PTR [rdx]
  421cd6:	test   ecx,ecx
  421cd8:	jne    0x421cdf
  421cda:	sub    esi,0x1
  421cdd:	jne    0x421cd0
  421cdf:	mov    DWORD PTR [rax+0x14],esi
  421ce2:	add    rsp,0x20
  421ce6:	pop    rbx
  421ce7:	pop    rsi
  421ce8:	pop    rdi
  421ce9:	pop    rbp
  421cea:	pop    r12
  421cec:	pop    r13
  421cee:	pop    r14
  421cf0:	ret    
  421cf1:	mov    r12,rdx
  421cf4:	mov    r14,rcx
  421cf7:	jmp    0x421bfd
  421cfc:	xor    eax,eax
  421cfe:	jmp    0x421ce2
  421d00:	push   rbp
  421d01:	push   rdi
  421d02:	push   rsi
  421d03:	push   rbx
  421d04:	sub    rsp,0x28
  421d08:	mov    eax,edx
  421d0a:	mov    rbp,rcx
  421d0d:	mov    ebx,edx
  421d0f:	and    eax,0x3
  421d12:	jne    0x421da0
  421d18:	sar    ebx,0x2
  421d1b:	mov    rax,rbp
  421d1e:	test   ebx,ebx
  421d20:	je     0x421d6c
  421d22:	mov    rdi,QWORD PTR [rip+0x13357]        # 0x435080
  421d29:	test   rdi,rdi
  421d2c:	jne    0x421d42
  421d2e:	jmp    0x421ded
  421d33:	sar    ebx,1
  421d35:	je     0x421d69
  421d37:	mov    rsi,QWORD PTR [rdi]
  421d3a:	test   rsi,rsi
  421d3d:	je     0x421d75
  421d3f:	mov    rdi,rsi
  421d42:	test   bl,0x1
  421d45:	je     0x421d33
  421d47:	mov    rdx,rdi
  421d4a:	mov    rcx,rbp
  421d4d:	call   0x421bd0
  421d52:	test   rax,rax
  421d55:	mov    rsi,rax
  421d58:	je     0x421dc3
  421d5a:	mov    rcx,rbp
  421d5d:	mov    rbp,rsi
  421d60:	call   0x421a70
  421d65:	sar    ebx,1
  421d67:	jne    0x421d37
  421d69:	mov    rax,rbp
  421d6c:	add    rsp,0x28
  421d70:	pop    rbx
  421d71:	pop    rsi
  421d72:	pop    rdi
  421d73:	pop    rbp
  421d74:	ret    
  421d75:	mov    ecx,0x1
  421d7a:	call   0x421840
  421d7f:	mov    rsi,QWORD PTR [rdi]
  421d82:	test   rsi,rsi
  421d85:	je     0x421dce
  421d87:	cmp    DWORD PTR [rip+0x13c82],0x2        # 0x435a10
  421d8e:	jne    0x421d3f
  421d90:	lea    rcx,[rip+0x13cd1]        # 0x435a68
  421d97:	call   QWORD PTR [rip+0x1525f]        # 0x436ffc
  421d9d:	jmp    0x421d3f
  421d9f:	nop
  421da0:	sub    eax,0x1
  421da3:	lea    rdx,[rip+0xb8d6]        # 0x42d680
  421daa:	xor    r8d,r8d
  421dad:	cdqe   
  421daf:	mov    edx,DWORD PTR [rdx+rax*4]
  421db2:	call   0x421ae0
  421db7:	test   rax,rax
  421dba:	mov    rbp,rax
  421dbd:	jne    0x421d18
  421dc3:	xor    eax,eax
  421dc5:	add    rsp,0x28
  421dc9:	pop    rbx
  421dca:	pop    rsi
  421dcb:	pop    rdi
  421dcc:	pop    rbp
  421dcd:	ret    
  421dce:	mov    rdx,rdi
  421dd1:	mov    rcx,rdi
  421dd4:	call   0x421bd0
  421dd9:	test   rax,rax
  421ddc:	mov    rsi,rax
  421ddf:	mov    QWORD PTR [rdi],rax
  421de2:	je     0x421dc3
  421de4:	mov    QWORD PTR [rax],0x0
  421deb:	jmp    0x421d87
  421ded:	mov    ecx,0x1
  421df2:	call   0x421840
  421df7:	mov    rdi,QWORD PTR [rip+0x13282]        # 0x435080
  421dfe:	test   rdi,rdi
  421e01:	je     0x421e22
  421e03:	cmp    DWORD PTR [rip+0x13c06],0x2        # 0x435a10
  421e0a:	jne    0x421d42
  421e10:	lea    rcx,[rip+0x13c51]        # 0x435a68
  421e17:	call   QWORD PTR [rip+0x151df]        # 0x436ffc
  421e1d:	jmp    0x421d42
  421e22:	mov    ecx,0x1
  421e27:	call   0x421960
  421e2c:	test   rax,rax
  421e2f:	mov    rdi,rax
  421e32:	je     0x421e52
  421e34:	mov    DWORD PTR [rax+0x18],0x271
  421e3b:	mov    DWORD PTR [rax+0x14],0x1
  421e42:	mov    QWORD PTR [rip+0x13237],rax        # 0x435080
  421e49:	mov    QWORD PTR [rax],0x0
  421e50:	jmp    0x421e03
  421e52:	mov    QWORD PTR [rip+0x13223],0x0        # 0x435080
  421e5d:	xor    eax,eax
  421e5f:	jmp    0x421dc5
  421e64:	xchg   ax,ax
  421e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e70:	push   r13
  421e72:	push   r12
  421e74:	push   rbp
  421e75:	push   rdi
  421e76:	push   rsi
  421e77:	push   rbx
  421e78:	sub    rsp,0x28
  421e7c:	mov    rdi,rcx
  421e7f:	mov    ebp,edx
  421e81:	mov    esi,edx
  421e83:	mov    r12d,DWORD PTR [rdi+0x14]
  421e87:	sar    ebp,0x5
  421e8a:	mov    eax,DWORD PTR [rdi+0xc]
  421e8d:	mov    ecx,DWORD PTR [rcx+0x8]
  421e90:	add    r12d,ebp
  421e93:	lea    ebx,[r12+0x1]
  421e98:	cmp    ebx,eax
  421e9a:	jle    0x421ea9
  421e9c:	nop    DWORD PTR [rax+0x0]
  421ea0:	add    eax,eax
  421ea2:	add    ecx,0x1
  421ea5:	cmp    ebx,eax
  421ea7:	jg     0x421ea0
  421ea9:	call   0x421960
  421eae:	test   rax,rax
  421eb1:	mov    r13,rax
  421eb4:	je     0x421f7f
  421eba:	test   ebp,ebp
  421ebc:	lea    r8,[rax+0x18]
  421ec0:	jle    0x421f77
  421ec6:	lea    eax,[rbp-0x1]
  421ec9:	lea    r9,[r8+rax*4+0x4]
  421ece:	xchg   ax,ax
  421ed0:	add    r8,0x4
  421ed4:	mov    DWORD PTR [r8-0x4],0x0
  421edc:	cmp    r8,r9
  421edf:	jne    0x421ed0
  421ee1:	movsxd rax,DWORD PTR [rdi+0x14]
  421ee5:	lea    r8,[rdi+0x18]
  421ee9:	mov    edx,esi
  421eeb:	and    edx,0x1f
  421eee:	lea    rbp,[r8+rax*4]
  421ef2:	je     0x421f60
  421ef4:	mov    eax,0x20
  421ef9:	xor    r11d,r11d
  421efc:	sub    eax,edx
  421efe:	jmp    0x421f03
  421f00:	mov    r9,rsi
  421f03:	mov    r10d,DWORD PTR [r8]
  421f06:	mov    ecx,edx
  421f08:	lea    rsi,[r9+0x4]
  421f0c:	add    r8,0x4
  421f10:	shl    r10d,cl
  421f13:	mov    ecx,eax
  421f15:	or     r10d,r11d
  421f18:	mov    DWORD PTR [rsi-0x4],r10d
  421f1c:	mov    r11d,DWORD PTR [r8-0x4]
  421f20:	shr    r11d,cl
  421f23:	cmp    rbp,r8
  421f26:	ja     0x421f00
  421f28:	add    r12d,0x2
  421f2c:	test   r11d,r11d
  421f2f:	mov    DWORD PTR [r9+0x4],r11d
  421f33:	cmovne ebx,r12d
  421f37:	sub    ebx,0x1
  421f3a:	mov    rcx,rdi
  421f3d:	mov    DWORD PTR [r13+0x14],ebx
  421f41:	call   0x421a70
  421f46:	mov    rax,r13
  421f49:	add    rsp,0x28
  421f4d:	pop    rbx
  421f4e:	pop    rsi
  421f4f:	pop    rdi
  421f50:	pop    rbp
  421f51:	pop    r12
  421f53:	pop    r13
  421f55:	ret    
  421f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f60:	add    r8,0x4
  421f64:	mov    edx,DWORD PTR [r8-0x4]
  421f68:	add    r9,0x4
  421f6c:	cmp    rbp,r8
  421f6f:	mov    DWORD PTR [r9-0x4],edx
  421f73:	ja     0x421f60
  421f75:	jmp    0x421f37
  421f77:	mov    r9,r8
  421f7a:	jmp    0x421ee1
  421f7f:	xor    eax,eax
  421f81:	jmp    0x421f49
  421f83:	nop    DWORD PTR [rax]
  421f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f90:	movsxd r8,DWORD PTR [rdx+0x14]
  421f94:	mov    eax,DWORD PTR [rcx+0x14]
  421f97:	sub    eax,r8d
  421f9a:	test   eax,eax
  421f9c:	jne    0x421fd2
  421f9e:	shl    r8,0x2
  421fa2:	add    rcx,0x18
  421fa6:	lea    rax,[rcx+r8*1]
  421faa:	lea    rdx,[rdx+r8*1+0x18]
  421faf:	jmp    0x421fb6
  421fb1:	cmp    rcx,rax
  421fb4:	jae    0x421fd0
  421fb6:	sub    rdx,0x4
  421fba:	sub    rax,0x4
  421fbe:	mov    r9d,DWORD PTR [rdx]
  421fc1:	cmp    DWORD PTR [rax],r9d
  421fc4:	je     0x421fb1
  421fc6:	sbb    eax,eax
  421fc8:	or     eax,0x1
  421fcb:	ret    
  421fcc:	nop    DWORD PTR [rax+0x0]
  421fd0:	xor    eax,eax
  421fd2:	repz ret 
  421fd4:	xchg   ax,ax
  421fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421fe0:	push   rdi
  421fe1:	push   rsi
  421fe2:	push   rbx
  421fe3:	sub    rsp,0x20
  421fe7:	mov    rsi,rcx
  421fea:	mov    rdi,rdx
  421fed:	call   0x421f90
  421ff2:	test   eax,eax
  421ff4:	je     0x4220e0
  421ffa:	mov    ebx,0x0
  421fff:	js     0x422102
  422005:	mov    ecx,DWORD PTR [rsi+0x8]
  422008:	call   0x421960
  42200d:	test   rax,rax
  422010:	je     0x422112
  422016:	movsxd rdx,DWORD PTR [rsi+0x14]
  42201a:	lea    rcx,[rsi+0x18]
  42201e:	mov    DWORD PTR [rax+0x10],ebx
  422021:	lea    r10,[rdi+0x18]
  422025:	xor    r9d,r9d
  422028:	mov    rbx,rdx
  42202b:	lea    rsi,[rcx+rdx*4]
  42202f:	movsxd rdx,DWORD PTR [rdi+0x14]
  422033:	lea    rdi,[r10+rdx*4]
  422037:	lea    rdx,[rax+0x18]
  42203b:	nop    DWORD PTR [rax+rax*1+0x0]
  422040:	add    rcx,0x4
  422044:	add    r10,0x4
  422048:	mov    r11d,DWORD PTR [r10-0x4]
  42204c:	mov    r8d,DWORD PTR [rcx-0x4]
  422050:	add    rdx,0x4
  422054:	sub    r8,r11
  422057:	sub    r8,r9
  42205a:	mov    r9,r8
  42205d:	mov    r11d,r8d
  422060:	mov    DWORD PTR [rdx-0x4],r8d
  422064:	shr    r9,0x20
  422068:	and    r9d,0x1
  42206c:	cmp    rdi,r10
  42206f:	ja     0x422040
  422071:	cmp    rsi,rcx
  422074:	mov    rdi,rdx
  422077:	mov    r10,rcx
  42207a:	jbe    0x4220b6
  42207c:	nop    DWORD PTR [rax+0x0]
  422080:	add    rcx,0x4
  422084:	mov    r8d,DWORD PTR [rcx-0x4]
  422088:	add    rdx,0x4
  42208c:	sub    r8,r9
  42208f:	mov    r9,r8
  422092:	mov    r11d,r8d
  422095:	mov    DWORD PTR [rdx-0x4],r8d
  422099:	shr    r9,0x20
  42209d:	and    r9d,0x1
  4220a1:	cmp    rsi,rcx
  4220a4:	ja     0x422080
  4220a6:	not    r10
  4220a9:	lea    rdx,[r10+rsi*1]
  4220ad:	shr    rdx,0x2
  4220b1:	lea    rdx,[rdi+rdx*4+0x4]
  4220b6:	sub    rdx,0x4
  4220ba:	test   r11d,r11d
  4220bd:	jne    0x4220cd
  4220bf:	nop
  4220c0:	sub    rdx,0x4
  4220c4:	mov    ecx,DWORD PTR [rdx]
  4220c6:	sub    ebx,0x1
  4220c9:	test   ecx,ecx
  4220cb:	je     0x4220c0
  4220cd:	mov    DWORD PTR [rax+0x14],ebx
  4220d0:	add    rsp,0x20
  4220d4:	pop    rbx
  4220d5:	pop    rsi
  4220d6:	pop    rdi
  4220d7:	ret    
  4220d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4220e0:	xor    ecx,ecx
  4220e2:	call   0x421960
  4220e7:	test   rax,rax
  4220ea:	je     0x422112
  4220ec:	mov    DWORD PTR [rax+0x14],0x1
  4220f3:	mov    DWORD PTR [rax+0x18],0x0
  4220fa:	add    rsp,0x20
  4220fe:	pop    rbx
  4220ff:	pop    rsi
  422100:	pop    rdi
  422101:	ret    
  422102:	mov    rax,rsi
  422105:	mov    bl,0x1
  422107:	mov    rsi,rdi
  42210a:	mov    rdi,rax
  42210d:	jmp    0x422005
  422112:	xor    eax,eax
  422114:	jmp    0x4220d0
  422116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422120:	push   rsi
  422121:	push   rbx
  422122:	sub    rsp,0x18
  422126:	movsxd rax,DWORD PTR [rcx+0x14]
  42212a:	lea    r10,[rcx+0x18]
  42212e:	mov    ecx,0x20
  422133:	lea    r9,[r10+rax*4]
  422137:	mov    eax,DWORD PTR [r9-0x4]
  42213b:	lea    rbx,[r9-0x4]
  42213f:	bsr    r8d,eax
  422143:	xor    r8d,0x1f
  422147:	sub    ecx,r8d
  42214a:	cmp    r8d,0xa
  42214e:	mov    DWORD PTR [rdx],ecx
  422150:	jg     0x4221a0
  422152:	mov    ecx,0xb
  422157:	mov    r11d,eax
  42215a:	xor    esi,esi
  42215c:	sub    ecx,r8d
  42215f:	shr    r11d,cl
  422162:	or     r11d,0x3ff00000
  422169:	shl    r11,0x20
  42216d:	cmp    r10,rbx
  422170:	jae    0x422178
  422172:	mov    esi,DWORD PTR [r9-0x8]
  422176:	shr    esi,cl
  422178:	lea    ecx,[r8+0x15]
  42217c:	shl    eax,cl
  42217e:	mov    edx,eax
  422180:	mov    eax,esi
  422182:	or     eax,edx
  422184:	or     rax,r11
  422187:	mov    QWORD PTR [rsp+0x8],rax
  42218c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  422192:	add    rsp,0x18
  422196:	pop    rbx
  422197:	pop    rsi
  422198:	ret    
  422199:	nop    DWORD PTR [rax+0x0]
  4221a0:	cmp    r10,rbx
  4221a3:	jae    0x422200
  4221a5:	mov    r11d,r8d
  4221a8:	lea    rsi,[r9-0x8]
  4221ac:	mov    edx,DWORD PTR [r9-0x8]
  4221b0:	sub    r11d,0xb
  4221b4:	je     0x422222
  4221b6:	mov    ebx,0x2b
  4221bb:	mov    ecx,r11d
  4221be:	sub    ebx,r8d
  4221c1:	shl    eax,cl
  4221c3:	mov    r8d,edx
  4221c6:	mov    ecx,ebx
  4221c8:	shr    r8d,cl
  4221cb:	or     eax,r8d
  4221ce:	xor    r8d,r8d
  4221d1:	or     eax,0x3ff00000
  4221d6:	shl    rax,0x20
  4221da:	cmp    r10,rsi
  4221dd:	jae    0x4221e6
  4221df:	mov    r8d,DWORD PTR [r9-0xc]
  4221e3:	shr    r8d,cl
  4221e6:	mov    ecx,r11d
  4221e9:	shl    edx,cl
  4221eb:	or     r8d,edx
  4221ee:	movabs rdx,0xffffffff00000000
  4221f8:	and    rax,rdx
  4221fb:	or     rax,r8
  4221fe:	jmp    0x422187
  422200:	mov    r11d,r8d
  422203:	sub    r11d,0xb
  422207:	je     0x422220
  422209:	mov    ecx,r11d
  42220c:	xor    r8d,r8d
  42220f:	xor    edx,edx
  422211:	shl    eax,cl
  422213:	or     eax,0x3ff00000
  422218:	shl    rax,0x20
  42221c:	jmp    0x4221e6
  42221e:	xchg   ax,ax
  422220:	xor    edx,edx
  422222:	or     eax,0x3ff00000
  422227:	shl    rax,0x20
  42222b:	or     rax,rdx
  42222e:	jmp    0x422187
  422233:	nop    DWORD PTR [rax]
  422236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422240:	push   rdi
  422241:	push   rsi
  422242:	push   rbx
  422243:	sub    rsp,0x20
  422247:	mov    ecx,0x1
  42224c:	movq   rbx,xmm0
  422251:	mov    rdi,rdx
  422254:	mov    rsi,r8
  422257:	call   0x421960
  42225c:	test   rax,rax
  42225f:	je     0x422345
  422265:	mov    r9,rbx
  422268:	shr    r9,0x20
  42226c:	mov    r10d,r9d
  42226f:	and    r9d,0x7fffffff
  422276:	and    r10d,0xfffff
  42227d:	shr    r9d,0x14
  422281:	mov    edx,r10d
  422284:	or     edx,0x100000
  42228a:	test   r9d,r9d
  42228d:	cmovne r10d,edx
  422291:	test   ebx,ebx
  422293:	jne    0x4222d4
  422295:	xor    ecx,ecx
  422297:	mov    DWORD PTR [rax+0x14],0x1
  42229e:	mov    edx,0x1
  4222a3:	tzcnt  ecx,r10d
  4222a8:	shr    r10d,cl
  4222ab:	test   r9d,r9d
  4222ae:	lea    r11d,[rcx+0x20]
  4222b2:	mov    DWORD PTR [rax+0x18],r10d
  4222b6:	je     0x422313
  4222b8:	lea    edx,[r11+r9*1-0x433]
  4222c0:	mov    DWORD PTR [rdi],edx
  4222c2:	mov    edx,0x35
  4222c7:	sub    edx,r11d
  4222ca:	mov    DWORD PTR [rsi],edx
  4222cc:	add    rsp,0x20
  4222d0:	pop    rbx
  4222d1:	pop    rsi
  4222d2:	pop    rdi
  4222d3:	ret    
  4222d4:	xor    r11d,r11d
  4222d7:	tzcnt  r11d,ebx
  4222dc:	mov    ecx,r11d
  4222df:	shr    ebx,cl
  4222e1:	test   r11d,r11d
  4222e4:	je     0x422340
  4222e6:	mov    ecx,0x20
  4222eb:	mov    edx,r10d
  4222ee:	sub    ecx,r11d
  4222f1:	shl    edx,cl
  4222f3:	mov    ecx,r11d
  4222f6:	or     ebx,edx
  4222f8:	shr    r10d,cl
  4222fb:	mov    DWORD PTR [rax+0x18],ebx
  4222fe:	cmp    r10d,0x1
  422302:	mov    DWORD PTR [rax+0x1c],r10d
  422306:	sbb    edx,edx
  422308:	add    edx,0x2
  42230b:	test   r9d,r9d
  42230e:	mov    DWORD PTR [rax+0x14],edx
  422311:	jne    0x4222b8
  422313:	movsxd rcx,edx
  422316:	shl    edx,0x5
  422319:	sub    r11d,0x432
  422320:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  422325:	mov    DWORD PTR [rdi],r11d
  422328:	xor    ecx,0x1f
  42232b:	sub    edx,ecx
  42232d:	mov    DWORD PTR [rsi],edx
  42232f:	add    rsp,0x20
  422333:	pop    rbx
  422334:	pop    rsi
  422335:	pop    rdi
  422336:	ret    
  422337:	nop    WORD PTR [rax+rax*1+0x0]
  422340:	mov    DWORD PTR [rax+0x18],ebx
  422343:	jmp    0x4222fe
  422345:	xor    eax,eax
  422347:	jmp    0x4222cc
  422349:	nop    DWORD PTR [rax+0x0]
  422350:	mov    rax,rcx
  422353:	lea    rcx,[rdx+0x1]
  422357:	movzx  edx,BYTE PTR [rdx]
  42235a:	test   dl,dl
  42235c:	mov    BYTE PTR [rax],dl
  42235e:	je     0x422372
  422360:	add    rcx,0x1
  422364:	movzx  edx,BYTE PTR [rcx-0x1]
  422368:	add    rax,0x1
  42236c:	test   dl,dl
  42236e:	mov    BYTE PTR [rax],dl
  422370:	jne    0x422360
  422372:	repz ret 
  422374:	nop
  422375:	nop
  422376:	nop
  422377:	nop
  422378:	nop
  422379:	nop
  42237a:	nop
  42237b:	nop
  42237c:	nop
  42237d:	nop
  42237e:	nop
  42237f:	nop
  422380:	push   rbp
  422381:	push   rdi
  422382:	push   rsi
  422383:	push   rbx
  422384:	sub    rsp,0x48
  422388:	test   rdx,rdx
  42238b:	je     0x4224b3
  422391:	test   r8,r8
  422394:	je     0x4224c0
  42239a:	mov    eax,DWORD PTR [r9]
  42239d:	mov    DWORD PTR [r9],0x0
  4223a4:	mov    DWORD PTR [rsp+0x30],eax
  4223a8:	movzx  eax,BYTE PTR [rdx]
  4223ab:	test   al,al
  4223ad:	je     0x422450
  4223b3:	cmp    DWORD PTR [rsp+0x98],0x1
  4223bb:	mov    rsi,r9
  4223be:	mov    rdi,r8
  4223c1:	mov    rbx,rdx
  4223c4:	mov    rbp,rcx
  4223c7:	jbe    0x422430
  4223c9:	cmp    BYTE PTR [rsp+0x30],0x0
  4223ce:	jne    0x422460
  4223d4:	movzx  edx,al
  4223d7:	mov    ecx,DWORD PTR [rsp+0x90]
  4223de:	call   QWORD PTR [rip+0x14c10]        # 0x436ff4
  4223e4:	test   eax,eax
  4223e6:	je     0x422430
  4223e8:	cmp    rdi,0x1
  4223ec:	jbe    0x4224dc
  4223f2:	mov    DWORD PTR [rsp+0x28],0x1
  4223fa:	mov    QWORD PTR [rsp+0x20],rbp
  4223ff:	mov    r9d,0x2
  422405:	mov    r8,rbx
  422408:	mov    edx,0x8
  42240d:	mov    ecx,DWORD PTR [rsp+0x90]
  422414:	call   QWORD PTR [rip+0x14bea]        # 0x437004
  42241a:	test   eax,eax
  42241c:	je     0x4224c7
  422422:	mov    eax,0x2
  422427:	add    rsp,0x48
  42242b:	pop    rbx
  42242c:	pop    rsi
  42242d:	pop    rdi
  42242e:	pop    rbp
  42242f:	ret    
  422430:	mov    eax,DWORD PTR [rsp+0x90]
  422437:	test   eax,eax
  422439:	jne    0x422480
  42243b:	movzx  eax,BYTE PTR [rbx]
  42243e:	mov    WORD PTR [rbp+0x0],ax
  422442:	mov    eax,0x1
  422447:	add    rsp,0x48
  42244b:	pop    rbx
  42244c:	pop    rsi
  42244d:	pop    rdi
  42244e:	pop    rbp
  42244f:	ret    
  422450:	xor    edx,edx
  422452:	xor    eax,eax
  422454:	mov    WORD PTR [rcx],dx
  422457:	add    rsp,0x48
  42245b:	pop    rbx
  42245c:	pop    rsi
  42245d:	pop    rdi
  42245e:	pop    rbp
  42245f:	ret    
  422460:	mov    BYTE PTR [rsp+0x31],al
  422464:	mov    DWORD PTR [rsp+0x28],0x1
  42246c:	mov    r9d,0x2
  422472:	mov    QWORD PTR [rsp+0x20],rcx
  422477:	lea    r8,[rsp+0x30]
  42247c:	jmp    0x422408
  42247e:	xchg   ax,ax
  422480:	mov    DWORD PTR [rsp+0x28],0x1
  422488:	mov    QWORD PTR [rsp+0x20],rbp
  42248d:	mov    r9d,0x1
  422493:	mov    r8,rbx
  422496:	mov    edx,0x8
  42249b:	mov    ecx,DWORD PTR [rsp+0x90]
  4224a2:	call   QWORD PTR [rip+0x14b5c]        # 0x437004
  4224a8:	test   eax,eax
  4224aa:	je     0x4224c7
  4224ac:	mov    eax,0x1
  4224b1:	jmp    0x422457
  4224b3:	xor    eax,eax
  4224b5:	add    rsp,0x48
  4224b9:	pop    rbx
  4224ba:	pop    rsi
  4224bb:	pop    rdi
  4224bc:	pop    rbp
  4224bd:	ret    
  4224be:	xchg   ax,ax
  4224c0:	mov    eax,0xfffffffe
  4224c5:	jmp    0x422457
  4224c7:	call   0x422950
  4224cc:	mov    DWORD PTR [rax],0x2a
  4224d2:	mov    eax,0xffffffff
  4224d7:	jmp    0x422457
  4224dc:	movzx  eax,BYTE PTR [rbx]
  4224df:	mov    BYTE PTR [rsi],al
  4224e1:	mov    eax,0xfffffffe
  4224e6:	jmp    0x422457
  4224eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4224f0:	push   rbp
  4224f1:	push   rdi
  4224f2:	push   rsi
  4224f3:	push   rbx
  4224f4:	sub    rsp,0x58
  4224f8:	xor    eax,eax
  4224fa:	mov    WORD PTR [rsp+0x4e],ax
  4224ff:	lea    rax,[rsp+0x4e]
  422504:	test   rcx,rcx
  422507:	mov    rbx,rcx
  42250a:	mov    rsi,r9
  42250d:	mov    rdi,rdx
  422510:	cmove  rbx,rax
  422514:	mov    rax,QWORD PTR [rip+0xb3b5]        # 0x42d8d0
  42251b:	mov    QWORD PTR [rsp+0x38],r8
  422520:	mov    rax,QWORD PTR [rax]
  422523:	mov    ebp,DWORD PTR [rax]
  422525:	call   0x4229a8
  42252a:	mov    r8,QWORD PTR [rsp+0x38]
  42252f:	lea    r9,[rip+0x13592]        # 0x435ac8
  422536:	test   rsi,rsi
  422539:	mov    DWORD PTR [rsp+0x28],ebp
  42253d:	mov    DWORD PTR [rsp+0x20],eax
  422541:	mov    rdx,rdi
  422544:	cmovne r9,rsi
  422548:	mov    rcx,rbx
  42254b:	call   0x422380
  422550:	cdqe   
  422552:	add    rsp,0x58
  422556:	pop    rbx
  422557:	pop    rsi
  422558:	pop    rdi
  422559:	pop    rbp
  42255a:	ret    
  42255b:	nop    DWORD PTR [rax+rax*1+0x0]
  422560:	push   r15
  422562:	push   r14
  422564:	push   r13
  422566:	push   r12
  422568:	push   rbp
  422569:	push   rdi
  42256a:	push   rsi
  42256b:	push   rbx
  42256c:	sub    rsp,0x48
  422570:	lea    rax,[rip+0x1354d]        # 0x435ac4
  422577:	test   r9,r9
  42257a:	mov    rdi,r9
  42257d:	mov    r13,rdx
  422580:	cmove  rdi,rax
  422584:	mov    r14,rcx
  422587:	mov    rsi,r8
  42258a:	call   0x4229a8
  42258f:	mov    r12d,eax
  422592:	mov    rax,QWORD PTR [rip+0xb337]        # 0x42d8d0
  422599:	test   r13,r13
  42259c:	mov    rax,QWORD PTR [rax]
  42259f:	mov    ebp,DWORD PTR [rax]
  4225a1:	je     0x422625
  4225a7:	mov    rdx,QWORD PTR [r13+0x0]
  4225ab:	test   rdx,rdx
  4225ae:	je     0x422625
  4225b0:	test   r14,r14
  4225b3:	je     0x422630
  4225b5:	xor    ebx,ebx
  4225b7:	test   rsi,rsi
  4225ba:	jne    0x4225da
  4225bc:	jmp    0x422625
  4225be:	xchg   ax,ax
  4225c0:	movsxd r10,eax
  4225c3:	add    r14,0x2
  4225c7:	mov    rdx,r10
  4225ca:	add    rdx,QWORD PTR [r13+0x0]
  4225ce:	add    rbx,r10
  4225d1:	cmp    rsi,rbx
  4225d4:	mov    QWORD PTR [r13+0x0],rdx
  4225d8:	jbe    0x422620
  4225da:	mov    r8,rsi
  4225dd:	mov    DWORD PTR [rsp+0x28],ebp
  4225e1:	mov    DWORD PTR [rsp+0x20],r12d
  4225e6:	sub    r8,rbx
  4225e9:	mov    r9,rdi
  4225ec:	mov    rcx,r14
  4225ef:	call   0x422380
  4225f4:	cmp    eax,0x0
  4225f7:	jg     0x4225c0
  4225f9:	jne    0x422620
  4225fb:	cmp    rbx,rsi
  4225fe:	jae    0x422620
  422600:	mov    QWORD PTR [r13+0x0],0x0
  422608:	mov    rax,rbx
  42260b:	add    rsp,0x48
  42260f:	pop    rbx
  422610:	pop    rsi
  422611:	pop    rdi
  422612:	pop    rbp
  422613:	pop    r12
  422615:	pop    r13
  422617:	pop    r14
  422619:	pop    r15
  42261b:	ret    
  42261c:	xor    ebx,ebx
  42261e:	xchg   ax,ax
  422620:	mov    rax,rbx
  422623:	jmp    0x42260b
  422625:	xor    eax,eax
  422627:	jmp    0x42260b
  422629:	nop    DWORD PTR [rax+0x0]
  422630:	xor    eax,eax
  422632:	test   rsi,rsi
  422635:	mov    WORD PTR [rsp+0x3e],ax
  42263a:	je     0x42261c
  42263c:	mov    r15d,ebp
  42263f:	xor    ebx,ebx
  422641:	lea    r14,[rsp+0x3e]
  422646:	jmp    0x422665
  422648:	nop    DWORD PTR [rax+rax*1+0x0]
  422650:	cdqe   
  422652:	mov    rdx,rax
  422655:	add    rdx,QWORD PTR [r13+0x0]
  422659:	add    rbx,rax
  42265c:	cmp    rsi,rbx
  42265f:	mov    QWORD PTR [r13+0x0],rdx
  422663:	jbe    0x422620
  422665:	mov    DWORD PTR [rsp+0x28],ebp
  422669:	mov    DWORD PTR [rsp+0x20],r12d
  42266e:	mov    r9,rdi
  422671:	mov    r8,r15
  422674:	mov    rcx,r14
  422677:	call   0x422380
  42267c:	test   eax,eax
  42267e:	jg     0x422650
  422680:	jmp    0x422620
  422682:	nop    DWORD PTR [rax+0x0]
  422686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422690:	push   rbp
  422691:	push   rdi
  422692:	push   rsi
  422693:	push   rbx
  422694:	sub    rsp,0x48
  422698:	xor    eax,eax
  42269a:	mov    WORD PTR [rsp+0x3e],ax
  42269f:	mov    rax,QWORD PTR [rip+0xb22a]        # 0x42d8d0
  4226a6:	mov    rbx,r8
  4226a9:	mov    rsi,rcx
  4226ac:	mov    rdi,rdx
  4226af:	mov    rax,QWORD PTR [rax]
  4226b2:	mov    ebp,DWORD PTR [rax]
  4226b4:	call   0x4229a8
  4226b9:	lea    r9,[rip+0x13400]        # 0x435ac0
  4226c0:	test   rbx,rbx
  4226c3:	lea    rcx,[rsp+0x3e]
  4226c8:	mov    DWORD PTR [rsp+0x28],ebp
  4226cc:	mov    DWORD PTR [rsp+0x20],eax
  4226d0:	mov    r8,rdi
  4226d3:	cmovne r9,rbx
  4226d7:	mov    rdx,rsi
  4226da:	call   0x422380
  4226df:	cdqe   
  4226e1:	add    rsp,0x48
  4226e5:	pop    rbx
  4226e6:	pop    rsi
  4226e7:	pop    rdi
  4226e8:	pop    rbp
  4226e9:	ret    
  4226ea:	nop
  4226eb:	nop
  4226ec:	nop
  4226ed:	nop
  4226ee:	nop
  4226ef:	nop
  4226f0:	jmp    QWORD PTR [rip+0x14c86]        # 0x43737c
  4226f6:	nop
  4226f7:	nop
  4226f8:	jmp    QWORD PTR [rip+0x14c76]        # 0x437374
  4226fe:	nop
  4226ff:	nop
  422700:	jmp    QWORD PTR [rip+0x14c66]        # 0x43736c
  422706:	nop
  422707:	nop
  422708:	jmp    QWORD PTR [rip+0x14c56]        # 0x437364
  42270e:	nop
  42270f:	nop
  422710:	jmp    QWORD PTR [rip+0x14c46]        # 0x43735c
  422716:	nop
  422717:	nop
  422718:	jmp    QWORD PTR [rip+0x14c36]        # 0x437354
  42271e:	nop
  42271f:	nop
  422720:	jmp    QWORD PTR [rip+0x14c26]        # 0x43734c
  422726:	nop
  422727:	nop
  422728:	jmp    QWORD PTR [rip+0x14c16]        # 0x437344
  42272e:	nop
  42272f:	nop
  422730:	jmp    QWORD PTR [rip+0x14c06]        # 0x43733c
  422736:	nop
  422737:	nop
  422738:	jmp    QWORD PTR [rip+0x14bf6]        # 0x437334
  42273e:	nop
  42273f:	nop
  422740:	jmp    QWORD PTR [rip+0x14be6]        # 0x43732c
  422746:	nop
  422747:	nop
  422748:	jmp    QWORD PTR [rip+0x14bd6]        # 0x437324
  42274e:	nop
  42274f:	nop
  422750:	jmp    QWORD PTR [rip+0x14bc6]        # 0x43731c
  422756:	nop
  422757:	nop
  422758:	jmp    QWORD PTR [rip+0x14bb6]        # 0x437314
  42275e:	nop
  42275f:	nop
  422760:	jmp    QWORD PTR [rip+0x14ba6]        # 0x43730c
  422766:	nop
  422767:	nop
  422768:	jmp    QWORD PTR [rip+0x14b96]        # 0x437304
  42276e:	nop
  42276f:	nop
  422770:	jmp    QWORD PTR [rip+0x14b86]        # 0x4372fc
  422776:	nop
  422777:	nop
  422778:	jmp    QWORD PTR [rip+0x14b76]        # 0x4372f4
  42277e:	nop
  42277f:	nop
  422780:	jmp    QWORD PTR [rip+0x14b66]        # 0x4372ec
  422786:	nop
  422787:	nop
  422788:	jmp    QWORD PTR [rip+0x14b56]        # 0x4372e4
  42278e:	nop
  42278f:	nop
  422790:	jmp    QWORD PTR [rip+0x14b46]        # 0x4372dc
  422796:	nop
  422797:	nop
  422798:	jmp    QWORD PTR [rip+0x14b36]        # 0x4372d4
  42279e:	nop
  42279f:	nop
  4227a0:	jmp    QWORD PTR [rip+0x14b26]        # 0x4372cc
  4227a6:	nop
  4227a7:	nop
  4227a8:	jmp    QWORD PTR [rip+0x14b16]        # 0x4372c4
  4227ae:	nop
  4227af:	nop
  4227b0:	jmp    QWORD PTR [rip+0x14b06]        # 0x4372bc
  4227b6:	nop
  4227b7:	nop
  4227b8:	jmp    QWORD PTR [rip+0x14af6]        # 0x4372b4
  4227be:	nop
  4227bf:	nop
  4227c0:	jmp    QWORD PTR [rip+0x14ae6]        # 0x4372ac
  4227c6:	nop
  4227c7:	nop
  4227c8:	jmp    QWORD PTR [rip+0x14ad6]        # 0x4372a4
  4227ce:	nop
  4227cf:	nop
  4227d0:	jmp    QWORD PTR [rip+0x14ac6]        # 0x43729c
  4227d6:	nop
  4227d7:	nop
  4227d8:	jmp    QWORD PTR [rip+0x14ab6]        # 0x437294
  4227de:	nop
  4227df:	nop
  4227e0:	jmp    QWORD PTR [rip+0x14aa6]        # 0x43728c
  4227e6:	nop
  4227e7:	nop
  4227e8:	jmp    QWORD PTR [rip+0x14a96]        # 0x437284
  4227ee:	nop
  4227ef:	nop
  4227f0:	jmp    QWORD PTR [rip+0x14a86]        # 0x43727c
  4227f6:	nop
  4227f7:	nop
  4227f8:	jmp    QWORD PTR [rip+0x14a76]        # 0x437274
  4227fe:	nop
  4227ff:	nop
  422800:	jmp    QWORD PTR [rip+0x14a66]        # 0x43726c
  422806:	nop
  422807:	nop
  422808:	jmp    QWORD PTR [rip+0x14a56]        # 0x437264
  42280e:	nop
  42280f:	nop
  422810:	jmp    QWORD PTR [rip+0x14a46]        # 0x43725c
  422816:	nop
  422817:	nop
  422818:	jmp    QWORD PTR [rip+0x14a36]        # 0x437254
  42281e:	nop
  42281f:	nop
  422820:	jmp    QWORD PTR [rip+0x14a26]        # 0x43724c
  422826:	nop
  422827:	nop
  422828:	jmp    QWORD PTR [rip+0x14a16]        # 0x437244
  42282e:	nop
  42282f:	nop
  422830:	jmp    QWORD PTR [rip+0x14a06]        # 0x43723c
  422836:	nop
  422837:	nop
  422838:	jmp    QWORD PTR [rip+0x149f6]        # 0x437234
  42283e:	nop
  42283f:	nop
  422840:	jmp    QWORD PTR [rip+0x149e6]        # 0x43722c
  422846:	nop
  422847:	nop
  422848:	jmp    QWORD PTR [rip+0x149d6]        # 0x437224
  42284e:	nop
  42284f:	nop
  422850:	jmp    QWORD PTR [rip+0x149c6]        # 0x43721c
  422856:	nop
  422857:	nop
  422858:	jmp    QWORD PTR [rip+0x149b6]        # 0x437214
  42285e:	nop
  42285f:	nop
  422860:	jmp    QWORD PTR [rip+0x149a6]        # 0x43720c
  422866:	nop
  422867:	nop
  422868:	jmp    QWORD PTR [rip+0x14996]        # 0x437204
  42286e:	nop
  42286f:	nop
  422870:	jmp    QWORD PTR [rip+0x14986]        # 0x4371fc
  422876:	nop
  422877:	nop
  422878:	jmp    QWORD PTR [rip+0x14976]        # 0x4371f4
  42287e:	nop
  42287f:	nop
  422880:	jmp    QWORD PTR [rip+0x14966]        # 0x4371ec
  422886:	nop
  422887:	nop
  422888:	jmp    QWORD PTR [rip+0x14956]        # 0x4371e4
  42288e:	nop
  42288f:	nop
  422890:	jmp    QWORD PTR [rip+0x14946]        # 0x4371dc
  422896:	nop
  422897:	nop
  422898:	jmp    QWORD PTR [rip+0x14936]        # 0x4371d4
  42289e:	nop
  42289f:	nop
  4228a0:	jmp    QWORD PTR [rip+0x14926]        # 0x4371cc
  4228a6:	nop
  4228a7:	nop
  4228a8:	jmp    QWORD PTR [rip+0x14916]        # 0x4371c4
  4228ae:	nop
  4228af:	nop
  4228b0:	jmp    QWORD PTR [rip+0x14906]        # 0x4371bc
  4228b6:	nop
  4228b7:	nop
  4228b8:	jmp    QWORD PTR [rip+0x148f6]        # 0x4371b4
  4228be:	nop
  4228bf:	nop
  4228c0:	jmp    QWORD PTR [rip+0x148e6]        # 0x4371ac
  4228c6:	nop
  4228c7:	nop
  4228c8:	jmp    QWORD PTR [rip+0x148d6]        # 0x4371a4
  4228ce:	nop
  4228cf:	nop
  4228d0:	jmp    QWORD PTR [rip+0x148c6]        # 0x43719c
  4228d6:	nop
  4228d7:	nop
  4228d8:	jmp    QWORD PTR [rip+0x148b6]        # 0x437194
  4228de:	nop
  4228df:	nop
  4228e0:	jmp    QWORD PTR [rip+0x148a6]        # 0x43718c
  4228e6:	nop
  4228e7:	nop
  4228e8:	jmp    QWORD PTR [rip+0x14896]        # 0x437184
  4228ee:	nop
  4228ef:	nop
  4228f0:	jmp    QWORD PTR [rip+0x14886]        # 0x43717c
  4228f6:	nop
  4228f7:	nop
  4228f8:	jmp    QWORD PTR [rip+0x14876]        # 0x437174
  4228fe:	nop
  4228ff:	nop
  422900:	jmp    QWORD PTR [rip+0x14866]        # 0x43716c
  422906:	nop
  422907:	nop
  422908:	jmp    QWORD PTR [rip+0x14856]        # 0x437164
  42290e:	nop
  42290f:	nop
  422910:	jmp    QWORD PTR [rip+0x14846]        # 0x43715c
  422916:	nop
  422917:	nop
  422918:	jmp    QWORD PTR [rip+0x14836]        # 0x437154
  42291e:	nop
  42291f:	nop
  422920:	jmp    QWORD PTR [rip+0x14826]        # 0x43714c
  422926:	nop
  422927:	nop
  422928:	jmp    QWORD PTR [rip+0x14816]        # 0x437144
  42292e:	nop
  42292f:	nop
  422930:	jmp    QWORD PTR [rip+0x14806]        # 0x43713c
  422936:	nop
  422937:	nop
  422938:	jmp    QWORD PTR [rip+0x147ee]        # 0x43712c
  42293e:	nop
  42293f:	nop
  422940:	jmp    QWORD PTR [rip+0x147de]        # 0x437124
  422946:	nop
  422947:	nop
  422948:	jmp    QWORD PTR [rip+0x147ce]        # 0x43711c
  42294e:	nop
  42294f:	nop
  422950:	jmp    QWORD PTR [rip+0x147be]        # 0x437114
  422956:	nop
  422957:	nop
  422958:	jmp    QWORD PTR [rip+0x147ae]        # 0x43710c
  42295e:	nop
  42295f:	nop
  422960:	jmp    QWORD PTR [rip+0x1479e]        # 0x437104
  422966:	nop
  422967:	nop
  422968:	jmp    QWORD PTR [rip+0x1478e]        # 0x4370fc
  42296e:	nop
  42296f:	nop
  422970:	jmp    QWORD PTR [rip+0x1477e]        # 0x4370f4
  422976:	nop
  422977:	nop
  422978:	jmp    QWORD PTR [rip+0x14766]        # 0x4370e4
  42297e:	nop
  42297f:	nop
  422980:	jmp    QWORD PTR [rip+0x14756]        # 0x4370dc
  422986:	nop
  422987:	nop
  422988:	jmp    QWORD PTR [rip+0x1473e]        # 0x4370cc
  42298e:	nop
  42298f:	nop
  422990:	jmp    QWORD PTR [rip+0x1472e]        # 0x4370c4
  422996:	nop
  422997:	nop
  422998:	jmp    QWORD PTR [rip+0x14716]        # 0x4370b4
  42299e:	nop
  42299f:	nop
  4229a0:	jmp    QWORD PTR [rip+0x14706]        # 0x4370ac
  4229a6:	nop
  4229a7:	nop
  4229a8:	jmp    QWORD PTR [rip+0x146f6]        # 0x4370a4
  4229ae:	nop
  4229af:	nop
  4229b0:	jmp    QWORD PTR [rip+0x146e6]        # 0x43709c
  4229b6:	nop
  4229b7:	nop
  4229b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4229c0:	mov    rax,QWORD PTR [rip+0x13109]        # 0x435ad0
  4229c7:	ret    
  4229c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4229d0:	mov    rax,rcx
  4229d3:	xchg   QWORD PTR [rip+0x130f6],rax        # 0x435ad0
  4229da:	ret    
  4229db:	nop
  4229dc:	nop
  4229dd:	nop
  4229de:	nop
  4229df:	nop
  4229e0:	mov    eax,DWORD PTR [rip+0x130fa]        # 0x435ae0
  4229e6:	ret    
  4229e7:	nop    WORD PTR [rax+rax*1+0x0]
  4229f0:	mov    eax,ecx
  4229f2:	xchg   DWORD PTR [rip+0x130e8],eax        # 0x435ae0
  4229f8:	ret    
  4229f9:	nop    DWORD PTR [rax+0x0]
  422a00:	push   rbx
  422a01:	sub    rsp,0x20
  422a05:	mov    ebx,ecx
  422a07:	lea    rcx,[rip+0xadf2]        # 0x42d800
  422a0e:	call   QWORD PTR [rip+0x145a8]        # 0x436fbc
  422a14:	lea    rdx,[rip+0xadfb]        # 0x42d816
  422a1b:	mov    rcx,rax
  422a1e:	call   QWORD PTR [rip+0x145a8]        # 0x436fcc
  422a24:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x4229f0
  422a2b:	test   rax,rax
  422a2e:	mov    ecx,ebx
  422a30:	cmove  rax,rdx
  422a34:	mov    QWORD PTR [rip+0x313d],rax        # 0x425b78
  422a3b:	add    rsp,0x20
  422a3f:	pop    rbx
  422a40:	rex.W jmp rax
  422a43:	nop    DWORD PTR [rax]
  422a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a50:	sub    rsp,0x28
  422a54:	lea    rcx,[rip+0xada5]        # 0x42d800
  422a5b:	call   QWORD PTR [rip+0x1455b]        # 0x436fbc
  422a61:	lea    rdx,[rip+0xadc1]        # 0x42d829
  422a68:	mov    rcx,rax
  422a6b:	call   QWORD PTR [rip+0x1455b]        # 0x436fcc
  422a71:	lea    rdx,[rip+0xffffffffffffff68]        # 0x4229e0
  422a78:	test   rax,rax
  422a7b:	cmove  rax,rdx
  422a7f:	mov    QWORD PTR [rip+0x30ea],rax        # 0x425b70
  422a86:	add    rsp,0x28
  422a8a:	rex.W jmp rax
  422a8d:	nop    DWORD PTR [rax]
  422a90:	mov    rax,QWORD PTR [rip+0x30e1]        # 0x425b78
  422a97:	rex.W jmp rax
  422a9a:	nop    WORD PTR [rax+rax*1+0x0]
  422aa0:	mov    rax,QWORD PTR [rip+0x30c9]        # 0x425b70
  422aa7:	rex.W jmp rax
  422aaa:	nop
  422aab:	nop
  422aac:	nop
  422aad:	nop
  422aae:	nop
  422aaf:	nop
  422ab0:	jmp    QWORD PTR [rip+0x14916]        # 0x4373cc
  422ab6:	nop
  422ab7:	nop
  422ab8:	jmp    QWORD PTR [rip+0x14906]        # 0x4373c4
  422abe:	nop
  422abf:	nop
  422ac0:	jmp    QWORD PTR [rip+0x148f6]        # 0x4373bc
  422ac6:	nop
  422ac7:	nop
  422ac8:	jmp    QWORD PTR [rip+0x148e6]        # 0x4373b4
  422ace:	nop
  422acf:	nop
  422ad0:	jmp    QWORD PTR [rip+0x148d6]        # 0x4373ac
  422ad6:	nop
  422ad7:	nop
  422ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  422ae0:	jmp    QWORD PTR [rip+0x145a6]        # 0x43708c
  422ae6:	nop
  422ae7:	nop
  422ae8:	jmp    QWORD PTR [rip+0x14596]        # 0x437084
  422aee:	nop
  422aef:	nop
  422af0:	jmp    QWORD PTR [rip+0x14586]        # 0x43707c
  422af6:	nop
  422af7:	nop
  422af8:	jmp    QWORD PTR [rip+0x14576]        # 0x437074
  422afe:	nop
  422aff:	nop
  422b00:	jmp    QWORD PTR [rip+0x14566]        # 0x43706c
  422b06:	nop
  422b07:	nop
  422b08:	jmp    QWORD PTR [rip+0x14556]        # 0x437064
  422b0e:	nop
  422b0f:	nop
  422b10:	jmp    QWORD PTR [rip+0x14546]        # 0x43705c
  422b16:	nop
  422b17:	nop
  422b18:	jmp    QWORD PTR [rip+0x14536]        # 0x437054
  422b1e:	nop
  422b1f:	nop
  422b20:	jmp    QWORD PTR [rip+0x14526]        # 0x43704c
  422b26:	nop
  422b27:	nop
  422b28:	jmp    QWORD PTR [rip+0x14516]        # 0x437044
  422b2e:	nop
  422b2f:	nop
  422b30:	jmp    QWORD PTR [rip+0x14506]        # 0x43703c
  422b36:	nop
  422b37:	nop
  422b38:	jmp    QWORD PTR [rip+0x144f6]        # 0x437034
  422b3e:	nop
  422b3f:	nop
  422b40:	jmp    QWORD PTR [rip+0x144e6]        # 0x43702c
  422b46:	nop
  422b47:	nop
  422b48:	jmp    QWORD PTR [rip+0x144d6]        # 0x437024
  422b4e:	nop
  422b4f:	nop
  422b50:	jmp    QWORD PTR [rip+0x144c6]        # 0x43701c
  422b56:	nop
  422b57:	nop
  422b58:	jmp    QWORD PTR [rip+0x144b6]        # 0x437014
  422b5e:	nop
  422b5f:	nop
  422b60:	jmp    QWORD PTR [rip+0x144a6]        # 0x43700c
  422b66:	nop
  422b67:	nop
  422b68:	jmp    QWORD PTR [rip+0x14496]        # 0x437004
  422b6e:	nop
  422b6f:	nop
  422b70:	jmp    QWORD PTR [rip+0x14486]        # 0x436ffc
  422b76:	nop
  422b77:	nop
  422b78:	jmp    QWORD PTR [rip+0x14476]        # 0x436ff4
  422b7e:	nop
  422b7f:	nop
  422b80:	jmp    QWORD PTR [rip+0x14466]        # 0x436fec
  422b86:	nop
  422b87:	nop
  422b88:	jmp    QWORD PTR [rip+0x14456]        # 0x436fe4
  422b8e:	nop
  422b8f:	nop
  422b90:	jmp    QWORD PTR [rip+0x14446]        # 0x436fdc
  422b96:	nop
  422b97:	nop
  422b98:	jmp    QWORD PTR [rip+0x14436]        # 0x436fd4
  422b9e:	nop
  422b9f:	nop
  422ba0:	jmp    QWORD PTR [rip+0x14426]        # 0x436fcc
  422ba6:	nop
  422ba7:	nop
  422ba8:	jmp    QWORD PTR [rip+0x14416]        # 0x436fc4
  422bae:	nop
  422baf:	nop
  422bb0:	jmp    QWORD PTR [rip+0x14406]        # 0x436fbc
  422bb6:	nop
  422bb7:	nop
  422bb8:	jmp    QWORD PTR [rip+0x143f6]        # 0x436fb4
  422bbe:	nop
  422bbf:	nop
  422bc0:	jmp    QWORD PTR [rip+0x143e6]        # 0x436fac
  422bc6:	nop
  422bc7:	nop
  422bc8:	jmp    QWORD PTR [rip+0x143d6]        # 0x436fa4
  422bce:	nop
  422bcf:	nop
  422bd0:	jmp    QWORD PTR [rip+0x143c6]        # 0x436f9c
  422bd6:	nop
  422bd7:	nop
  422bd8:	jmp    QWORD PTR [rip+0x143b6]        # 0x436f94
  422bde:	nop
  422bdf:	nop
  422be0:	jmp    QWORD PTR [rip+0x143a6]        # 0x436f8c
  422be6:	nop
  422be7:	nop
  422be8:	jmp    QWORD PTR [rip+0x14396]        # 0x436f84
  422bee:	nop
  422bef:	nop
  422bf0:	jmp    QWORD PTR [rip+0x14386]        # 0x436f7c
  422bf6:	nop
  422bf7:	nop
  422bf8:	jmp    QWORD PTR [rip+0x14376]        # 0x436f74
  422bfe:	nop
  422bff:	nop
  422c00:	jmp    QWORD PTR [rip+0x14366]        # 0x436f6c
  422c06:	nop
  422c07:	nop
  422c08:	jmp    QWORD PTR [rip+0x14356]        # 0x436f64
  422c0e:	nop
  422c0f:	nop
  422c10:	jmp    QWORD PTR [rip+0x14346]        # 0x436f5c
  422c16:	nop
  422c17:	nop
  422c18:	jmp    QWORD PTR [rip+0x14336]        # 0x436f54
  422c1e:	nop
  422c1f:	nop
  422c20:	push   rsi
  422c21:	push   rbx
  422c22:	sub    rsp,0x28
  422c26:	mov    eax,edx
  422c28:	and    eax,0xfffffffb
  422c2b:	cmp    eax,0xfffffff0
  422c2e:	jne    0x422c73
  422c30:	mov    ebx,edx
  422c32:	call   0x406e08
  422c37:	cmp    eax,0x64
  422c3a:	mov    esi,eax
  422c3c:	jne    0x422c55
  422c3e:	cmp    ebx,0xfffffff0
  422c41:	jne    0x422c55
  422c43:	lea    rcx,[rip+0x33f6]        # 0x426040
  422c4a:	add    rsp,0x28
  422c4e:	pop    rbx
  422c4f:	pop    rsi
  422c50:	jmp    0x401560
  422c55:	mov    ecx,esi
  422c57:	call   0x406e00
  422c5c:	lea    rcx,[rip+0x3428]        # 0x42608b
  422c63:	mov    r8,rax
  422c66:	mov    edx,esi
  422c68:	add    rsp,0x28
  422c6c:	pop    rbx
  422c6d:	pop    rsi
  422c6e:	jmp    0x401560
  422c73:	add    rsp,0x28
  422c77:	pop    rbx
  422c78:	pop    rsi
  422c79:	ret    
  422c7a:	push   rbp
  422c7b:	push   rdi
  422c7c:	push   rsi
  422c7d:	push   rbx
  422c7e:	sub    rsp,0x28
  422c82:	mov    rbx,rcx
  422c85:	mov    rcx,QWORD PTR [rcx+0x38]
  422c89:	call   0x406bf0
  422c8e:	test   eax,eax
  422c90:	mov    esi,eax
  422c92:	jns    0x422cb2
  422c94:	mov    ecx,eax
  422c96:	call   0x406c18
  422c9b:	test   eax,eax
  422c9d:	mov    rcx,QWORD PTR [rbx+0x38]
  422ca1:	jne    0x422cf9
  422ca3:	mov    edx,esi
  422ca5:	add    rsp,0x28
  422ca9:	pop    rbx
  422caa:	pop    rsi
  422cab:	pop    rdi
  422cac:	pop    rbp
  422cad:	jmp    0x422c20
  422cb2:	jne    0x422d5f
  422cb8:	mov    rcx,QWORD PTR [rbx+0x38]
  422cbc:	call   0x406a48
  422cc1:	test   eax,eax
  422cc3:	je     0x422cda
  422cc5:	cmp    DWORD PTR [rip+0x14ac],0x0        # 0x424178
  422ccc:	je     0x422cda
  422cce:	lea    rcx,[rip+0x33e3]        # 0x4260b8
  422cd5:	call   0x401560
  422cda:	mov    edx,DWORD PTR [rip+0x1498]        # 0x424178
  422ce0:	test   edx,edx
  422ce2:	je     0x422cf0
  422ce4:	mov    rcx,QWORD PTR [rbx+0x38]
  422ce8:	mov    r8d,edx
  422ceb:	call   0x405410
  422cf0:	mov    DWORD PTR [rbx+0x40],0x1
  422cf7:	jmp    0x422d5f
  422cf9:	mov    edx,esi
  422cfb:	mov    DWORD PTR [rbx+0x2c],0x3
  422d02:	call   0x422c20
  422d07:	mov    rbp,QWORD PTR [rip+0x143b6]        # 0x4370c4
  422d0e:	call   rbp
  422d10:	lea    rdx,[rip+0x33c0]        # 0x4260d7
  422d17:	lea    rcx,[rax+0x60]
  422d1b:	call   0x4019a0
  422d20:	mov    ecx,esi
  422d22:	call   0x4069d8
  422d27:	mov    rdi,rax
  422d2a:	test   rax,rax
  422d2d:	cmove  rdi,QWORD PTR [rip+0xad5b]        # 0x42da90
  422d35:	call   rbp
  422d37:	lea    rdx,[rip+0x3369]        # 0x4260a7
  422d3e:	lea    rcx,[rax+0x30]
  422d42:	mov    r8,rdi
  422d45:	call   0x4019a0
  422d4a:	mov    rcx,QWORD PTR [rbx+0x38]
  422d4e:	mov    edx,esi
  422d50:	call   0x406df0
  422d55:	cmp    eax,0xffffffcc
  422d58:	je     0x422d4a
  422d5a:	cmp    eax,0xffffffe4
  422d5d:	je     0x422d4a
  422d5f:	add    rsp,0x28
  422d63:	pop    rbx
  422d64:	pop    rsi
  422d65:	pop    rdi
  422d66:	pop    rbp
  422d67:	ret    
  422d68:	nop
  422d69:	nop
  422d6a:	nop
  422d6b:	nop
  422d6c:	nop
  422d6d:	nop
  422d6e:	nop
  422d6f:	nop
  422d70:	push   r13
  422d72:	push   r12
  422d74:	push   rbp
  422d75:	push   rdi
  422d76:	push   rsi
  422d77:	push   rbx
  422d78:	sub    rsp,0x948
  422d7f:	mov    rsi,rdx
  422d82:	mov    ebx,ecx
  422d84:	call   0x41bee0
  422d89:	mov    rcx,QWORD PTR [rip+0xac90]        # 0x42da20
  422d90:	mov    r8,rsi
  422d93:	mov    edx,ebx
  422d95:	call   0x412740
  422d9a:	mov    rsi,QWORD PTR [rip+0xac7f]        # 0x42da20
  422da1:	xor    edx,edx
  422da3:	mov    rax,QWORD PTR [rsi+0x78]
  422da7:	test   BYTE PTR [rax+0x420],0xf
  422dae:	setne  dl
  422db1:	mov    DWORD PTR [rip+0x12d4d],edx        # 0x435b04
  422db7:	mov    edx,DWORD PTR [rax+0x488]
  422dbd:	shr    edx,0x5
  422dc0:	xor    edx,0x1
  422dc3:	and    edx,0x1
  422dc6:	test   BYTE PTR [rax+0x10],0xf
  422dca:	mov    DWORD PTR [rip+0x12d30],edx        # 0x435b00
  422dd0:	je     0x422ddb
  422dd2:	mov    edx,DWORD PTR [rax+0x18]
  422dd5:	mov    DWORD PTR [rip+0x10325],edx        # 0x433100
  422ddb:	test   BYTE PTR [rax+0x148],0xf
  422de2:	je     0x422dee
  422de4:	mov    DWORD PTR [rip+0x138a],0x0        # 0x424178
  422dee:	test   BYTE PTR [rax+0x628],0xf
  422df5:	je     0x422e05
  422df7:	mov    rdx,QWORD PTR [rax+0x630]
  422dfe:	mov    QWORD PTR [rip+0x1026b],rdx        # 0x433070
  422e05:	test   BYTE PTR [rax+0xe48],0xf
  422e0c:	jne    0x4237c6
  422e12:	xor    edx,edx
  422e14:	test   BYTE PTR [rax+0x1b0],0xf
  422e1b:	setne  dl
  422e1e:	mov    DWORD PTR [rip+0x102d8],edx        # 0x4330fc
  422e24:	xor    edx,edx
  422e26:	test   BYTE PTR [rax+0x78],0xf
  422e2a:	setne  dl
  422e2d:	mov    DWORD PTR [rip+0x102c5],edx        # 0x4330f8
  422e33:	xor    edx,edx
  422e35:	test   BYTE PTR [rax+0x280],0xf
  422e3c:	sete   dl
  422e3f:	mov    DWORD PTR [rip+0x102c3],edx        # 0x433108
  422e45:	xor    edx,edx
  422e47:	test   BYTE PTR [rax+0x5c0],0xf
  422e4e:	sete   dl
  422e51:	mov    DWORD PTR [rip+0x102ad],edx        # 0x433104
  422e57:	xor    edx,edx
  422e59:	test   BYTE PTR [rax+0xe0],0xf
  422e60:	setne  dl
  422e63:	test   BYTE PTR [rax+0x690],0xf
  422e6a:	mov    DWORD PTR [rip+0x1029c],edx        # 0x43310c
  422e70:	je     0x422e80
  422e72:	mov    rdx,QWORD PTR [rax+0x698]
  422e79:	mov    QWORD PTR [rip+0x10200],rdx        # 0x433080
  422e80:	test   BYTE PTR [rax+0x900],0xf
  422e87:	je     0x422e97
  422e89:	mov    rdx,QWORD PTR [rax+0x908]
  422e90:	mov    QWORD PTR [rip+0x10221],rdx        # 0x4330b8
  422e97:	test   BYTE PTR [rax+0x968],0xf
  422e9e:	je     0x422eae
  422ea0:	mov    rdx,QWORD PTR [rax+0x970]
  422ea7:	mov    QWORD PTR [rip+0x10202],rdx        # 0x4330b0
  422eae:	test   BYTE PTR [rax+0x9d0],0xf
  422eb5:	je     0x422ec5
  422eb7:	mov    rdx,QWORD PTR [rax+0x9d8]
  422ebe:	mov    QWORD PTR [rip+0x101e3],rdx        # 0x4330a8
  422ec5:	test   BYTE PTR [rax+0xa38],0xf
  422ecc:	je     0x422edc
  422ece:	mov    rdx,QWORD PTR [rax+0xa40]
  422ed5:	mov    QWORD PTR [rip+0x101c4],rdx        # 0x4330a0
  422edc:	test   BYTE PTR [rax+0xaa0],0xf
  422ee3:	je     0x422ef3
  422ee5:	mov    rdx,QWORD PTR [rax+0xaa8]
  422eec:	mov    QWORD PTR [rip+0x101a5],rdx        # 0x433098
  422ef3:	test   BYTE PTR [rax+0xb08],0xf
  422efa:	je     0x422f0a
  422efc:	mov    rdx,QWORD PTR [rax+0xb10]
  422f03:	mov    QWORD PTR [rip+0x10186],rdx        # 0x433090
  422f0a:	test   BYTE PTR [rax+0x6f8],0xf
  422f11:	je     0x422f21
  422f13:	mov    rdx,QWORD PTR [rax+0x700]
  422f1a:	mov    QWORD PTR [rip+0x10167],rdx        # 0x433088
  422f21:	test   BYTE PTR [rax+0x760],0xf
  422f28:	je     0x422f38
  422f2a:	mov    rdx,QWORD PTR [rax+0x768]
  422f31:	mov    QWORD PTR [rip+0x10140],rdx        # 0x433078
  422f38:	test   BYTE PTR [rax+0x7c8],0xf
  422f3f:	je     0x422f4f
  422f41:	mov    rdx,QWORD PTR [rax+0x7d0]
  422f48:	mov    QWORD PTR [rip+0x10179],rdx        # 0x4330c8
  422f4f:	test   BYTE PTR [rax+0x898],0xf
  422f56:	je     0x422f66
  422f58:	mov    rdx,QWORD PTR [rax+0x8a0]
  422f5f:	mov    QWORD PTR [rip+0x1015a],rdx        # 0x4330c0
  422f66:	test   BYTE PTR [rax+0x830],0xf
  422f6d:	je     0x422f7d
  422f6f:	mov    rdx,QWORD PTR [rax+0x838]
  422f76:	mov    QWORD PTR [rip+0x10153],rdx        # 0x4330d0
  422f7d:	test   BYTE PTR [rax+0xbd8],0xf
  422f84:	je     0x422f94
  422f86:	mov    rdx,QWORD PTR [rax+0xbe0]
  422f8d:	mov    QWORD PTR [rip+0x1014c],rdx        # 0x4330e0
  422f94:	test   BYTE PTR [rax+0xc40],0xf
  422f9b:	je     0x422fab
  422f9d:	mov    rdx,QWORD PTR [rax+0xc48]
  422fa4:	mov    QWORD PTR [rip+0x1012d],rdx        # 0x4330d8
  422fab:	test   BYTE PTR [rax+0xca8],0xf
  422fb2:	jne    0x423445
  422fb8:	test   BYTE PTR [rax+0xd78],0xf
  422fbf:	je     0x422fcf
  422fc1:	mov    rax,QWORD PTR [rax+0xd80]
  422fc8:	mov    QWORD PTR [rip+0x10099],rax        # 0x433068
  422fcf:	call   0x4049c0
  422fd4:	mov    ecx,DWORD PTR [rip+0x10122]        # 0x4330fc
  422fda:	test   ecx,ecx
  422fdc:	je     0x4234ca
  422fe2:	mov    rax,QWORD PTR [rsi+0x78]
  422fe6:	test   BYTE PTR [rax+0x2e8],0xf
  422fed:	jne    0x4234b8
  422ff3:	mov    BYTE PTR [rsp+0x40],0x0
  422ff8:	cmp    DWORD PTR [rip+0x10109],0x1        # 0x433108
  422fff:	lea    rbp,[rsp+0x40]
  423004:	mov    rdx,rbp
  423007:	je     0x42356f
  42300d:	mov    ecx,DWORD PTR [rdx]
  42300f:	add    rdx,0x4
  423013:	lea    eax,[rcx-0x1010101]
  423019:	not    ecx
  42301b:	and    eax,ecx
  42301d:	and    eax,0x80808080
  423022:	je     0x42300d
  423024:	mov    ecx,eax
  423026:	shr    ecx,0x10
  423029:	test   eax,0x8080
  42302e:	cmove  eax,ecx
  423031:	lea    rcx,[rdx+0x2]
  423035:	cmove  rdx,rcx
  423039:	add    al,al
  42303b:	movabs rax,0x726553206f686345
  423045:	sbb    rdx,0x3
  423049:	mov    QWORD PTR [rdx],rax
  42304c:	mov    DWORD PTR [rdx+0x8],0x726576
  423053:	lea    rcx,[rip+0xfffffffffffde9a6]        # 0x401a00
  42305a:	call   0x406c00
  42305f:	lea    rcx,[rip+0xfffffffffffde96a]        # 0x4019d0
  423066:	call   0x406c08
  42306b:	mov    ecx,DWORD PTR [rip+0x1008f]        # 0x433100
  423071:	call   0x406bf8
  423076:	call   0x406c10
  42307b:	test   eax,eax
  42307d:	mov    ebx,eax
  42307f:	js     0x4237df
  423085:	mov    edx,DWORD PTR [rip+0x10081]        # 0x43310c
  42308b:	test   edx,edx
  42308d:	jne    0x4234e5
  423093:	cmp    QWORD PTR [rip+0xffe5],0x0        # 0x433080
  42309b:	je     0x42360a
  4230a1:	lea    rcx,[rip+0xff98]        # 0x433040
  4230a8:	call   0x406c70
  4230ad:	test   eax,eax
  4230af:	js     0x423895
  4230b5:	mov    rcx,QWORD PTR [rip+0xffc4]        # 0x433080
  4230bc:	lea    rdx,[rip+0x3793]        # 0x426856
  4230c3:	call   0x422880
  4230c8:	test   rax,rax
  4230cb:	mov    rdi,rax
  4230ce:	je     0x423900
  4230d4:	lea    r13,[rsp+0x140]
  4230dc:	mov    r9,rax
  4230df:	mov    r8d,0x7ff
  4230e5:	mov    edx,0x1
  4230ea:	mov    rcx,r13
  4230ed:	call   0x422860
  4230f2:	mov    rcx,rdi
  4230f5:	mov    r12,rax
  4230f8:	cdqe   
  4230fa:	mov    BYTE PTR [rsp+rax*1+0x140],0x0
  423102:	call   0x422898
  423107:	mov    rcx,QWORD PTR [rip+0xff32]        # 0x433040
  42310e:	lea    rdx,[rsp+0x30]
  423113:	mov    r8d,0x1
  423119:	mov    QWORD PTR [rsp+0x30],r13
  42311e:	mov    DWORD PTR [rsp+0x38],r12d
  423123:	call   0x406c80
  423128:	test   eax,eax
  42312a:	js     0x42392a
  423130:	lea    rcx,[rip+0x3751]        # 0x426888
  423137:	call   0x401560
  42313c:	call   QWORD PTR [rip+0x13f82]        # 0x4370c4
  423142:	lea    rcx,[rax+0x30]
  423146:	call   0x422888
  42314b:	lea    rcx,[rip+0xfef6]        # 0x433048
  423152:	call   0x406dc0
  423157:	test   eax,eax
  423159:	js     0x4237a6
  42315f:	mov    rdx,QWORD PTR [rip+0xff22]        # 0x433088
  423166:	test   rdx,rdx
  423169:	je     0x423196
  42316b:	mov    r8d,DWORD PTR [rip+0xff92]        # 0x433104
  423172:	mov    rcx,QWORD PTR [rip+0xfecf]        # 0x433048
  423179:	call   0x406d58
  42317e:	test   eax,eax
  423180:	mov    ebx,eax
  423182:	js     0x4238b5
  423188:	lea    rcx,[rip+0x3781]        # 0x426910
  42318f:	mov    edx,eax
  423191:	call   0x401560
  423196:	mov    rdx,QWORD PTR [rip+0xfedb]        # 0x433078
  42319d:	test   rdx,rdx
  4231a0:	je     0x4231cd
  4231a2:	mov    r8d,DWORD PTR [rip+0xff5b]        # 0x433104
  4231a9:	mov    rcx,QWORD PTR [rip+0xfe98]        # 0x433048
  4231b0:	call   0x406d68
  4231b5:	test   eax,eax
  4231b7:	mov    ebx,eax
  4231b9:	js     0x42383e
  4231bf:	lea    rcx,[rip+0x376b]        # 0x426931
  4231c6:	mov    edx,eax
  4231c8:	call   0x401560
  4231cd:	mov    rdx,QWORD PTR [rip+0xfefc]        # 0x4330d0
  4231d4:	test   rdx,rdx
  4231d7:	je     0x4231f5
  4231d9:	mov    rcx,QWORD PTR [rip+0xfe68]        # 0x433048
  4231e0:	mov    r8d,0x1
  4231e6:	call   0x406d80
  4231eb:	test   eax,eax
  4231ed:	mov    ebx,eax
  4231ef:	js     0x4236ce
  4231f5:	mov    rdx,QWORD PTR [rip+0xfec4]        # 0x4330c0
  4231fc:	test   rdx,rdx
  4231ff:	je     0x42359e
  423205:	mov    r8,QWORD PTR [rip+0xfebc]        # 0x4330c8
  42320c:	test   r8,r8
  42320f:	je     0x42359e
  423215:	mov    rax,QWORD PTR [rsi+0x78]
  423219:	test   BYTE PTR [rax+0xb70],0xf
  423220:	je     0x42349f
  423226:	mov    r9,QWORD PTR [rax+0xb78]
  42322d:	mov    rcx,QWORD PTR [rip+0xfe14]        # 0x433048
  423234:	mov    DWORD PTR [rsp+0x20],0x1
  42323c:	call   0x406d88
  423241:	mov    ebx,eax
  423243:	test   ebx,ebx
  423245:	mov    eax,0x1
  42324a:	js     0x42366b
  423250:	mov    rdx,QWORD PTR [rip+0xfe59]        # 0x4330b0
  423257:	test   rdx,rdx
  42325a:	je     0x42328a
  42325c:	mov    r8,QWORD PTR [rip+0xfe55]        # 0x4330b8
  423263:	test   r8,r8
  423266:	je     0x42328a
  423268:	mov    r9d,DWORD PTR [rip+0xfe95]        # 0x433104
  42326f:	mov    rcx,QWORD PTR [rip+0xfdd2]        # 0x433048
  423276:	call   0x406d60
  42327b:	mov    ebx,eax
  42327d:	mov    eax,0x1
  423282:	test   ebx,ebx
  423284:	js     0x423962
  42328a:	mov    rdx,QWORD PTR [rip+0xfe0f]        # 0x4330a0
  423291:	test   rdx,rdx
  423294:	je     0x423460
  42329a:	mov    r8,QWORD PTR [rip+0xfe07]        # 0x4330a8
  4232a1:	test   r8,r8
  4232a4:	je     0x423460
  4232aa:	mov    r9d,DWORD PTR [rip+0xfe53]        # 0x433104
  4232b1:	mov    rcx,QWORD PTR [rip+0xfd90]        # 0x433048
  4232b8:	call   0x406d60
  4232bd:	test   eax,eax
  4232bf:	mov    ebx,eax
  4232c1:	js     0x4238be
  4232c7:	mov    rdx,QWORD PTR [rip+0xfdc2]        # 0x433090
  4232ce:	test   rdx,rdx
  4232d1:	je     0x4232fc
  4232d3:	mov    r8,QWORD PTR [rip+0xfdbe]        # 0x433098
  4232da:	test   r8,r8
  4232dd:	je     0x4232fc
  4232df:	mov    r9d,DWORD PTR [rip+0xfe1e]        # 0x433104
  4232e6:	mov    rcx,QWORD PTR [rip+0xfd5b]        # 0x433048
  4232ed:	call   0x406d60
  4232f2:	test   eax,eax
  4232f4:	mov    ebx,eax
  4232f6:	js     0x4238f0
  4232fc:	mov    rdx,QWORD PTR [rip+0xfd65]        # 0x433068
  423303:	test   rdx,rdx
  423306:	je     0x42331f
  423308:	mov    rcx,QWORD PTR [rip+0xfd39]        # 0x433048
  42330f:	xor    r8d,r8d
  423312:	call   0x406d98
  423317:	test   eax,eax
  423319:	js     0x423811
  42331f:	mov    rcx,QWORD PTR [rip+0xfd22]        # 0x433048
  423326:	lea    rdx,[rip+0xfffffffffffde203]        # 0x401530
  42332d:	call   0x406d78
  423332:	cmp    QWORD PTR [rip+0xfda6],0x0        # 0x4330e0
  42333a:	je     0x42336c
  42333c:	lea    rcx,[rip+0xfd1d]        # 0x433060
  423343:	call   0x406a08
  423348:	mov    r8,QWORD PTR [rip+0xfd89]        # 0x4330d8
  42334f:	mov    rdx,QWORD PTR [rip+0xfd8a]        # 0x4330e0
  423356:	mov    rcx,QWORD PTR [rip+0xfd03]        # 0x433060
  42335d:	call   0x4069f8
  423362:	test   eax,eax
  423364:	mov    ebx,eax
  423366:	js     0x423716
  42336c:	cmp    QWORD PTR [rip+0xfd74],0x0        # 0x4330e8
  423374:	je     0x4233c3
  423376:	lea    rcx,[rip+0xfcdb]        # 0x433058
  42337d:	call   0x406af0
  423382:	mov    rdx,QWORD PTR [rip+0xfd5f]        # 0x4330e8
  423389:	mov    rcx,QWORD PTR [rip+0xfcc8]        # 0x433058
  423390:	call   0x406ad8
  423395:	test   eax,eax
  423397:	mov    ebx,eax
  423399:	js     0x42375e
  42339f:	mov    rax,QWORD PTR [rsi+0x78]
  4233a3:	test   BYTE PTR [rax+0xd10],0xf
  4233aa:	jne    0x4235a5
  4233b0:	mov    rcx,QWORD PTR [rip+0xfca1]        # 0x433058
  4233b7:	lea    rdx,[rip+0xfffffffffffde172]        # 0x401530
  4233be:	call   0x406ac8
  4233c3:	lea    rcx,[rip+0xfc86]        # 0x433050
  4233ca:	call   0x406de0
  4233cf:	mov    rcx,QWORD PTR [rip+0xfc7a]        # 0x433050
  4233d6:	lea    rdx,[rip+0xfffffffffffde153]        # 0x401530
  4233dd:	call   0x406dd8
  4233e2:	mov    eax,DWORD PTR [rip+0xfd10]        # 0x4330f8
  4233e8:	test   eax,eax
  4233ea:	je     0x42355e
  4233f0:	mov    rax,QWORD PTR [rsi+0x78]
  4233f4:	mov    r8d,0x514
  4233fa:	test   BYTE PTR [rax+0x350],0xf
  423401:	je     0x42340a
  423403:	mov    r8d,DWORD PTR [rax+0x358]
  42340a:	test   BYTE PTR [rax+0xde0],0xf
  423411:	mov    edx,0x15b4
  423416:	je     0x42341e
  423418:	mov    edx,DWORD PTR [rax+0xde8]
  42341e:	test   BYTE PTR [rax+0x2e8],0xf
  423425:	mov    rcx,rbp
  423428:	je     0x42380c
  42342e:	call   0x403910
  423433:	xor    eax,eax
  423435:	add    rsp,0x948
  42343c:	pop    rbx
  42343d:	pop    rsi
  42343e:	pop    rdi
  42343f:	pop    rbp
  423440:	pop    r12
  423442:	pop    r13
  423444:	ret    
  423445:	mov    rdx,QWORD PTR [rax+0xcb0]
  42344c:	mov    QWORD PTR [rip+0xfc95],rdx        # 0x4330e8
  423453:	jmp    0x422fb8
  423458:	nop    DWORD PTR [rax+rax*1+0x0]
  423460:	mov    rdx,QWORD PTR [rip+0xfc29]        # 0x433090
  423467:	test   rdx,rdx
  42346a:	je     0x42347c
  42346c:	mov    r8,QWORD PTR [rip+0xfc25]        # 0x433098
  423473:	test   r8,r8
  423476:	jne    0x4232df
  42347c:	test   eax,eax
  42347e:	jne    0x4232fc
  423484:	call   QWORD PTR [rip+0x13c3a]        # 0x4370c4
  42348a:	lea    rdx,[rip+0x3537]        # 0x4269c8
  423491:	lea    rcx,[rax+0x60]
  423495:	call   0x4019a0
  42349a:	jmp    0x4232fc
  42349f:	mov    rcx,QWORD PTR [rip+0xfba2]        # 0x433048
  4234a6:	mov    r9d,0x1
  4234ac:	call   0x406d90
  4234b1:	mov    ebx,eax
  4234b3:	jmp    0x423243
  4234b8:	mov    DWORD PTR [rsp+0x40],0x20504455
  4234c0:	mov    BYTE PTR [rsp+0x44],0x0
  4234c5:	jmp    0x422ff8
  4234ca:	mov    edx,0x21400
  4234cf:	mov    ecx,0x1
  4234d4:	call   0x4228b0
  4234d9:	mov    QWORD PTR [rip+0xfc10],rax        # 0x4330f0
  4234e0:	jmp    0x422fe2
  4234e5:	mov    edx,0x23
  4234ea:	mov    ecx,0x3
  4234ef:	call   0x406a88
  4234f4:	lea    rcx,[rip+0xfb45]        # 0x433040
  4234fb:	mov    edi,eax
  4234fd:	call   0x406c70
  423502:	test   eax,eax
  423504:	js     0x423895
  42350a:	lea    rcx,[rip+0x32ef]        # 0x426800
  423511:	mov    edx,edi
  423513:	call   0x401560
  423518:	mov    r12,QWORD PTR [rip+0x13ba5]        # 0x4370c4
  42351f:	call   r12
  423522:	lea    rcx,[rax+0x30]
  423526:	call   0x422888
  42352b:	mov    rcx,QWORD PTR [rip+0xfb0e]        # 0x433040
  423532:	mov    edx,edi
  423534:	call   0x406c88
  423539:	test   eax,eax
  42353b:	jns    0x42314b
  423541:	call   r12
  423544:	lea    rdx,[rip+0x32f0]        # 0x42683b
  42354b:	lea    rcx,[rax+0x60]
  42354f:	call   0x4019a0
  423554:	mov    ecx,0x1
  423559:	call   0x4228a0
  42355e:	lea    rcx,[rip+0x125ab]        # 0x435b10
  423565:	call   0x406a30
  42356a:	jmp    0x4233f0
  42356f:	xor    eax,eax
  423571:	mov    rdi,rbp
  423574:	or     rcx,0xffffffffffffffff
  423578:	repnz scas al,BYTE PTR es:[rdi]
  42357a:	movabs rdi,0x7265532050545448
  423584:	mov    rbx,rcx
  423587:	not    rbx
  42358a:	lea    rax,[rbp+rbx*1-0x1]
  42358f:	mov    QWORD PTR [rax],rdi
  423592:	mov    DWORD PTR [rax+0x8],0x726576
  423599:	jmp    0x423053
  42359e:	xor    eax,eax
  4235a0:	jmp    0x423250
  4235a5:	mov    rdx,QWORD PTR [rax+0xd18]
  4235ac:	mov    rcx,QWORD PTR [rip+0xfaa5]        # 0x433058
  4235b3:	call   0x406ad0
  4235b8:	test   eax,eax
  4235ba:	mov    ebx,eax
  4235bc:	je     0x4233b0
  4235c2:	mov    rdi,QWORD PTR [rip+0x13afb]        # 0x4370c4
  4235c9:	call   rdi
  4235cb:	lea    rdx,[rip+0x34b6]        # 0x426a88
  4235d2:	lea    rcx,[rax+0x60]
  4235d6:	call   0x4019a0
  4235db:	mov    ecx,ebx
  4235dd:	call   0x4069d8
  4235e2:	test   rax,rax
  4235e5:	mov    rbx,rax
  4235e8:	cmove  rbx,QWORD PTR [rip+0xa4a0]        # 0x42da90
  4235f0:	call   rdi
  4235f2:	lea    rdx,[rip+0x2aae]        # 0x4260a7
  4235f9:	lea    rcx,[rax+0x30]
  4235fd:	mov    r8,rbx
  423600:	call   0x4019a0
  423605:	jmp    0x4233b0
  42360a:	lea    rax,[rip+0xa6f]        # 0x424080
  423611:	lea    rcx,[rip+0xfa28]        # 0x433040
  423618:	mov    DWORD PTR [rsp+0x148],0xf6
  423623:	mov    QWORD PTR [rsp+0x140],rax
  42362b:	call   0x406c70
  423630:	test   eax,eax
  423632:	js     0x423895
  423638:	mov    rcx,QWORD PTR [rip+0xfa01]        # 0x433040
  42363f:	lea    rdx,[rsp+0x140]
  423647:	mov    r8d,0x1
  42364d:	call   0x406c80
  423652:	test   eax,eax
  423654:	js     0x42392a
  42365a:	lea    rcx,[rip+0x324f]        # 0x4268b0
  423661:	call   0x401560
  423666:	jmp    0x42314b
  42366b:	mov    r12,QWORD PTR [rip+0xfa4e]        # 0x4330c0
  423672:	mov    r13,QWORD PTR [rip+0xfa4f]        # 0x4330c8
  423679:	mov    rdi,QWORD PTR [rip+0x13a44]        # 0x4370c4
  423680:	call   rdi
  423682:	lea    rdx,[rip+0x32e7]        # 0x426970
  423689:	lea    rcx,[rax+0x60]
  42368d:	mov    r9,r12
  423690:	mov    r8d,ebx
  423693:	mov    QWORD PTR [rsp+0x20],r13
  423698:	call   0x4019a0
  42369d:	mov    ecx,ebx
  42369f:	call   0x4069d8
  4236a4:	test   rax,rax
  4236a7:	mov    r12,rax
  4236aa:	cmove  r12,QWORD PTR [rip+0xa3de]        # 0x42da90
  4236b2:	call   rdi
  4236b4:	lea    rdx,[rip+0x29ec]        # 0x4260a7
  4236bb:	lea    rcx,[rax+0x30]
  4236bf:	mov    r8,r12
  4236c2:	call   0x4019a0
  4236c7:	xor    eax,eax
  4236c9:	jmp    0x423250
  4236ce:	mov    rdi,QWORD PTR [rip+0x139ef]        # 0x4370c4
  4236d5:	call   rdi
  4236d7:	lea    rdx,[rip+0x326a]        # 0x426948
  4236de:	lea    rcx,[rax+0x60]
  4236e2:	call   0x4019a0
  4236e7:	mov    ecx,ebx
  4236e9:	call   0x4069d8
  4236ee:	test   rax,rax
  4236f1:	mov    r12,rax
  4236f4:	cmove  r12,QWORD PTR [rip+0xa394]        # 0x42da90
  4236fc:	call   rdi
  4236fe:	lea    rdx,[rip+0x29a2]        # 0x4260a7
  423705:	lea    rcx,[rax+0x30]
  423709:	mov    r8,r12
  42370c:	call   0x4019a0
  423711:	jmp    0x4231f5
  423716:	mov    rdi,QWORD PTR [rip+0x139a7]        # 0x4370c4
  42371d:	call   rdi
  42371f:	lea    rdx,[rip+0x3312]        # 0x426a38
  423726:	lea    rcx,[rax+0x60]
  42372a:	call   0x4019a0
  42372f:	mov    ecx,ebx
  423731:	call   0x4069d8
  423736:	test   rax,rax
  423739:	mov    rbx,rax
  42373c:	cmove  rbx,QWORD PTR [rip+0xa34c]        # 0x42da90
  423744:	call   rdi
  423746:	lea    rdx,[rip+0x295a]        # 0x4260a7
  42374d:	lea    rcx,[rax+0x30]
  423751:	mov    r8,rbx
  423754:	call   0x4019a0
  423759:	jmp    0x42336c
  42375e:	mov    rdi,QWORD PTR [rip+0x1395f]        # 0x4370c4
  423765:	call   rdi
  423767:	lea    rdx,[rip+0x32f2]        # 0x426a60
  42376e:	lea    rcx,[rax+0x60]
  423772:	call   0x4019a0
  423777:	mov    ecx,ebx
  423779:	call   0x4069d8
  42377e:	test   rax,rax
  423781:	mov    rbx,rax
  423784:	cmove  rbx,QWORD PTR [rip+0xa304]        # 0x42da90
  42378c:	call   rdi
  42378e:	lea    rdx,[rip+0x2912]        # 0x4260a7
  423795:	lea    rcx,[rax+0x30]
  423799:	mov    r8,rbx
  42379c:	call   0x4019a0
  4237a1:	jmp    0x42339f
  4237a6:	call   QWORD PTR [rip+0x13918]        # 0x4370c4
  4237ac:	lea    rdx,[rip+0x3139]        # 0x4268ec
  4237b3:	lea    rcx,[rax+0x60]
  4237b7:	call   0x4019a0
  4237bc:	mov    ecx,0x1
  4237c1:	call   0x4228a0
  4237c6:	mov    rcx,QWORD PTR [rip+0xf8a3]        # 0x433070
  4237cd:	mov    edx,DWORD PTR [rip+0x9a5]        # 0x424178
  4237d3:	call   0x405c00
  4237d8:	xor    ecx,ecx
  4237da:	call   0x4228a0
  4237df:	mov    ecx,eax
  4237e1:	call   0x4069d8
  4237e6:	mov    rbx,rax
  4237e9:	call   QWORD PTR [rip+0x138d5]        # 0x4370c4
  4237ef:	lea    rdx,[rip+0x2fcc]        # 0x4267c2
  4237f6:	lea    rcx,[rax+0x60]
  4237fa:	mov    r8,rbx
  4237fd:	call   0x4019a0
  423802:	mov    ecx,0x1
  423807:	call   0x4228a0
  42380c:	call   0x4023d0
  423811:	mov    ecx,ebx
  423813:	call   0x4069d8
  423818:	mov    rbx,rax
  42381b:	call   QWORD PTR [rip+0x138a3]        # 0x4370c4
  423821:	lea    rdx,[rip+0x31e0]        # 0x426a08
  423828:	lea    rcx,[rax+0x60]
  42382c:	mov    r8,rbx
  42382f:	call   0x4019a0
  423834:	mov    ecx,0x1
  423839:	call   0x4228a0
  42383e:	mov    rsi,QWORD PTR [rip+0xf833]        # 0x433078
  423845:	mov    rdi,QWORD PTR [rip+0x13878]        # 0x4370c4
  42384c:	call   rdi
  42384e:	lea    rdx,[rip+0x30a5]        # 0x4268fa
  423855:	lea    rcx,[rax+0x60]
  423859:	mov    r8,rsi
  42385c:	call   0x4019a0
  423861:	mov    ecx,ebx
  423863:	call   0x4069d8
  423868:	test   rax,rax
  42386b:	mov    rbx,rax
  42386e:	cmove  rbx,QWORD PTR [rip+0xa21a]        # 0x42da90
  423876:	call   rdi
  423878:	lea    rdx,[rip+0x2828]        # 0x4260a7
  42387f:	lea    rcx,[rax+0x30]
  423883:	mov    r8,rbx
  423886:	call   0x4019a0
  42388b:	mov    ecx,0x1
  423890:	call   0x4228a0
  423895:	call   QWORD PTR [rip+0x13829]        # 0x4370c4
  42389b:	lea    rdx,[rip+0x2f36]        # 0x4267d8
  4238a2:	lea    rcx,[rax+0x60]
  4238a6:	call   0x4019a0
  4238ab:	mov    ecx,0x1
  4238b0:	call   0x4228a0
  4238b5:	mov    rsi,QWORD PTR [rip+0xf7cc]        # 0x433088
  4238bc:	jmp    0x423845
  4238be:	mov    rbp,QWORD PTR [rip+0xf7e3]        # 0x4330a8
  4238c5:	mov    rsi,QWORD PTR [rip+0xf7d4]        # 0x4330a0
  4238cc:	mov    rdi,QWORD PTR [rip+0x137f1]        # 0x4370c4
  4238d3:	call   rdi
  4238d5:	lea    rdx,[rip+0x30cf]        # 0x4269ab
  4238dc:	lea    rcx,[rax+0x60]
  4238e0:	mov    r9,rbp
  4238e3:	mov    r8,rsi
  4238e6:	call   0x4019a0
  4238eb:	jmp    0x423861
  4238f0:	mov    rbp,QWORD PTR [rip+0xf7a1]        # 0x433098
  4238f7:	mov    rsi,QWORD PTR [rip+0xf792]        # 0x433090
  4238fe:	jmp    0x4238cc
  423900:	mov    rbx,QWORD PTR [rip+0xf779]        # 0x433080
  423907:	call   QWORD PTR [rip+0x137b7]        # 0x4370c4
  42390d:	lea    rdx,[rip+0x2f44]        # 0x426858
  423914:	lea    rcx,[rax+0x60]
  423918:	mov    r8,rbx
  42391b:	call   0x4019a0
  423920:	mov    ecx,0x1
  423925:	call   0x4228a0
  42392a:	mov    ecx,eax
  42392c:	call   0x4069d8
  423931:	test   rax,rax
  423934:	mov    rbx,rax
  423937:	cmove  rbx,QWORD PTR [rip+0xa151]        # 0x42da90
  42393f:	call   QWORD PTR [rip+0x1377f]        # 0x4370c4
  423945:	lea    rdx,[rip+0x2f1f]        # 0x42686b
  42394c:	lea    rcx,[rax+0x60]
  423950:	mov    r8,rbx
  423953:	call   0x4019a0
  423958:	mov    ecx,0x1
  42395d:	call   0x4228a0
  423962:	mov    rbp,QWORD PTR [rip+0xf74f]        # 0x4330b8
  423969:	mov    rsi,QWORD PTR [rip+0xf740]        # 0x4330b0
  423970:	jmp    0x4238cc
  423975:	nop
  423976:	nop
  423977:	nop
  423978:	nop
  423979:	nop
  42397a:	nop
  42397b:	nop
  42397c:	nop
  42397d:	nop
  42397e:	nop
  42397f:	nop
  423980:	(bad)  
  423981:	(bad)  
  423982:	(bad)  
  423983:	(bad)  
  423984:	(bad)  
  423985:	(bad)  
  423986:	(bad)  
  423987:	inc    DWORD PTR [rax]
  423989:	add    BYTE PTR [rax],al
  42398b:	add    BYTE PTR [rax],al
  42398d:	add    BYTE PTR [rax],al
  42398f:	add    bh,bh
  423991:	(bad)  
  423992:	(bad)  
  423993:	(bad)  
  423994:	(bad)  
  423995:	(bad)  
  423996:	(bad)  
  423997:	inc    DWORD PTR [rax]
  423999:	add    BYTE PTR [rax],al
  42399b:	add    BYTE PTR [rax],al
  42399d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000424000 <.data>:
  424000:	or     al,BYTE PTR [rax]
	...
  424042:	add    BYTE PTR [rax],al
  424044:	push   rax
	...
  42405d:	add    BYTE PTR [rax],al
  42405f:	add    al,ah
  424061:	sbb    al,BYTE PTR [rax+0x0]
	...
  424080:	sub    eax,0x2d2d2d2d
  424085:	rex.X
  424086:	rex.RB
  424087:	rex.RXB
  424088:	rex.WB
  424089:	rex.WRX and BYTE PTR [rax+r9*2+0x20],r8b
  42408e:	push   rax
  42408f:	push   r10
  424091:	rex.B
  424092:	rex.WRB
  424093:	rex.RB push r12
  424095:	rex.RB push r10
  424097:	push   rbx
  424098:	sub    eax,0x2d2d2d2d
  42409d:	or     cl,BYTE PTR [rbp+0x49]
  4240a0:	rex.RXB
  4240a1:	rex.RXB
  4240a2:	rex.B outs dx,DWORD PTR ds:[rsi]
  4240a4:	rex.RXB
  4240a5:	rex.B je 0x424113
  4240a8:	js     0x424121
  4240aa:	xor    ch,BYTE PTR [rdx+0x6c]
  4240ad:	jae    0x424105
  4240af:	rex.XB jae 0x424124
  4240b2:	data16 rex.WR jno 0x42412e
  4240b6:	jb     0x424106
  4240b8:	sub    ecx,DWORD PTR [rcx+0x72]
  4240bb:	rex.RX (bad) 
  4240bd:	xor    edx,DWORD PTR [rdi+0x38]
  4240c0:	jbe    0x424118
  4240c2:	rex.RX jbe 0x424109
  4240c5:	jp     0x424120
  4240c7:	(bad)  
  4240c8:	rex.WR ins DWORD PTR es:[rdi],dx
  4240ca:	js     0x424135
  4240cc:	xor    al,BYTE PTR [rdi+0x51]
  4240cf:	jbe    0x42410a
  4240d1:	jae    0x424102
  4240d3:	push   rax
  4240d4:	push   rcx
  4240d5:	rex.RXB push r15
  4240d7:	push   rax
  4240d8:	xor    DWORD PTR [rcx+rdi*1+0x69],esp
  4240dc:	xor    dh,BYTE PTR [rdx]
  4240de:	or     dl,BYTE PTR [rax+0x32]
  4240e1:	rex.R jo 0x424156
  4240e4:	movsxd cx,DWORD PTR [rdx+0x6b]
  4240e8:	outs   dx,BYTE PTR ds:[rsi]
  4240e9:	push   rdi
  4240ea:	je     0x424123
  4240ec:	rex.WXB push 0x53314943
  4240f2:	(bad)  
  4240f3:	pop    rcx
  4240f4:	jae    0x42415b
  4240f6:	rex.WRXB push r9
  4240f8:	rex.WB
  4240f9:	rex.WB
  4240fa:	rex.WB
  4240fb:	pop    r9
  4240fd:	push   rax
  4240fe:	(bad)  
  4240ff:	cmp    BYTE PTR [rbx+0x66],al
  424102:	jns    0x42414d
  424104:	jo     0x42414d
  424106:	push   rbx
  424107:	movsxd edx,DWORD PTR [rdi+0x2f]
  42410a:	jbe    0x42415f
  42410c:	cmp    BYTE PTR [rbx+0x68],ch
  42410f:	jb     0x424188
  424111:	xor    BYTE PTR [rdx+0x6c],dh
  424114:	push   rcx
  424115:	imul   edi,DWORD PTR [rcx+0x65],0x67517643
  42411c:	rex.RX xor r9d,DWORD PTR [rdi+0xa]
  424120:	rex.RXB
  424121:	gs rex.RXB
  424123:	rex.WRXB
  424124:	rex.RB jns 0x42419e
  424127:	movsxd esi,DWORD PTR [rdi+0x2b]
  42412a:	outs   dx,DWORD PTR ds:[rsi]
  42412b:	push   rcx
  42412c:	push   rsp
  42412d:	xor    al,0x53
  42412f:	ins    DWORD PTR es:[rdi],dx
  424130:	rex.RX
  424131:	rex.WRXB
  424132:	rex.R (bad) 
  424134:	rex.W xor BYTE PTR [rbx+0x6d],sil
  424138:	rex.WX
  424139:	xor    al,BYTE PTR gs:[rbx+0x4e]
  42413d:	jns    0x4241a9
  42413f:	pop    rcx
  424140:	jo     0x4241a7
  424142:	js     0x424186
  424144:	pop    rax
  424145:	push   rcx
  424146:	(bad)  
  424147:	xor    BYTE PTR [r13+0x62],bpl
  42414b:	push   rsp
  42414c:	rex.RX cmp DWORD PTR [rcx+0x4b],r10d
  424150:	ins    DWORD PTR es:[rdi],dx
  424151:	xor    DWORD PTR [rbx+0x43],esp
  424154:	push   r9
  424156:	push   rbp
  424157:	cmp    eax,0x2d2d2d0a
  42415c:	sub    eax,0x444e452d
  424161:	and    BYTE PTR [rax+rcx*2+0x20],al
  424165:	push   rax
  424166:	push   r10
  424168:	rex.B
  424169:	rex.WRB
  42416a:	rex.RB push r12
  42416c:	rex.RB push r10
  42416e:	push   rbx
  42416f:	sub    eax,0x2d2d2d2d
  424174:	or     al,BYTE PTR [rax]
  424176:	add    BYTE PTR [rax],al
  424178:	add    DWORD PTR [rax],eax
  42417a:	add    BYTE PTR [rax],al
  42417c:	add    BYTE PTR [rax],al
  42417e:	add    BYTE PTR [rax],al
  424180:	add    DWORD PTR [rax+0x2],edx
	...
  42418e:	add    BYTE PTR [rax],al
  424190:	(bad)  
  424191:	push   rdx
	...
  4241ae:	add    BYTE PTR [rax],al
  4241b0:	(bad)  
  4241b1:	test   DWORD PTR [rdx+0x0],eax
	...
  4241c0:	add    BYTE PTR [rdx+0x42],bh
  4241c3:	add    BYTE PTR [rax],al
  4241c5:	add    BYTE PTR [rax],al
  4241c7:	add    BYTE PTR [rdi],bl
  4241c9:	jnp    0x42420d
  4241cb:	add    BYTE PTR [rax],al
  4241cd:	add    BYTE PTR [rax],al
  4241cf:	add    BYTE PTR [rax],dh
  4241d1:	xchg   BYTE PTR [rdx+0x0],al
	...
  4241e0:	mov    es,WORD PTR [rbp+0x42]
  4241e6:	add    BYTE PTR [rax],al
  4241e8:	hlt    
  4241e9:	test   DWORD PTR [rdx+0x0],eax
  4241ec:	add    BYTE PTR [rax],al
  4241ee:	add    BYTE PTR [rax],al
  4241f0:	test   BYTE PTR [rbp+0x42],0x0
  4241f7:	add    BYTE PTR [rax+0x4242],al
  4241fd:	add    BYTE PTR [rax],al
  4241ff:	add    ah,ah
  424201:	test   DWORD PTR [rdx+0x0],eax
	...
  424218:	rex xor DWORD PTR [rcx+0x0],eax
	...
  424228:	(bad)  
  424229:	add    BYTE PTR [rax],al
  42422b:	add    BYTE PTR [rax],0x80
  42422e:	add    BYTE PTR [rax+0x28],al
  424234:	and    eax,0x0
  424239:	add    BYTE PTR [rax],al
  42423b:	add    BYTE PTR [rax],al
  42423d:	add    BYTE PTR [rax],al
  42423f:	add    BYTE PTR [rbx-0x7a],al
  424242:	rex.X add BYTE PTR [rax],al
	...
  424255:	add    BYTE PTR [rax],al
  424257:	add    al,dl
  424259:	jns    0x42429d
	...
  42427f:	add    BYTE PTR [rax],al
  424281:	add    BYTE PTR [rax+rax*1+0x0],ah
  424285:	add    BYTE PTR [rax+rax*1+0x0],ah
  424289:	add    BYTE PTR [rax],0x0
  42428c:	add    DWORD PTR [rax],eax
  42428e:	add    BYTE PTR [rax],al
  424290:	and    BYTE PTR [rax+0x0],dl
	...
  4242b7:	add    al,dl
  4242b9:	outs   dx,DWORD PTR ds:[rsi]
  4242ba:	add    BYTE PTR [rax],al
  4242bd:	add    BYTE PTR [rax],al
  4242bf:	add    BYTE PTR [rdx+0x427d],al
  4242c5:	add    BYTE PTR [rax],al
  4242c7:	add    BYTE PTR [rbx+0x427d],dl
  4242cd:	add    BYTE PTR [rax],al
  4242cf:	add    BYTE PTR [rcx+0x427d],bl
	...
  4242e5:	add    BYTE PTR [rax],al
  4242e7:	add    BYTE PTR [rcx],al
  4242e9:	add    BYTE PTR [rcx],al
  4242eb:	adc    BYTE PTR [rcx],al
  4242ed:	add    BYTE PTR [rcx],al
  4242ef:	adc    BYTE PTR [rax],al
  4242f1:	add    BYTE PTR [rax],0x0
  4242f4:	add    DWORD PTR [rax],eax
  4242f6:	add    BYTE PTR [rax],al
  4242f8:	and    BYTE PTR [rax],al
	...
  424326:	add    BYTE PTR [rax],al
  424328:	lahf   
  424329:	jge    0x42436d
  42432b:	add    BYTE PTR [rax],al
  42432d:	add    BYTE PTR [rax],al
  42432f:	add    BYTE PTR [rbp+rdi*2+0x42],bh
  424336:	add    BYTE PTR [rax],al
  424338:	(bad)  
	...
  42434f:	add    BYTE PTR [rdx],al
  424351:	add    BYTE PTR [rdi+0x0],ah
  424354:	add    al,BYTE PTR [rax]
  424356:	add    BYTE PTR [eax],al
  424359:	add    BYTE PTR [rax],0x0
  42435c:	add    DWORD PTR [rax],eax
  42435e:	add    BYTE PTR [rax],al
  424360:	and    BYTE PTR [rax],al
	...
  42438e:	add    BYTE PTR [rax],al
  424390:	(bad)  
  424391:	jge    0x4243d5
  424393:	add    BYTE PTR [rax],al
  424395:	add    BYTE PTR [rax],al
  424397:	add    cl,dh
  424399:	jge    0x4243dd
  42439b:	add    BYTE PTR [rax],al
  42439d:	add    BYTE PTR [rax],al
  42439f:	add    dl,bh
  4243a1:	jge    0x4243e5
	...
  4243b7:	add    BYTE PTR [rbx],al
  4243b9:	add    BYTE PTR [rcx+0x0],dh
  4243bc:	add    eax,DWORD PTR [rax]
  4243be:	jno    0x4243c0
  4243c0:	add    BYTE PTR [rax+0x10000],al
  4243c6:	add    BYTE PTR [rax],al
  4243c8:	and    BYTE PTR [rax],al
	...
  4243f6:	add    BYTE PTR [rax],al
  4243f8:	add    edi,DWORD PTR [rsi+0x42]
  4243fb:	add    BYTE PTR [rax],al
  4243fd:	add    BYTE PTR [rax],al
  4243ff:	add    BYTE PTR [rdx],bl
  424401:	jle    0x424445
  424403:	add    BYTE PTR [rax],al
  424405:	add    BYTE PTR [rax],al
  424407:	add    BYTE PTR [rax],ah
  424409:	jle    0x42444d
	...
  42441f:	add    BYTE PTR [rax+rax*1],al
  424422:	add    dl,BYTE PTR [rax]
  424424:	add    al,0x0
  424426:	add    dl,BYTE PTR [rax]
  424428:	add    BYTE PTR [rax+0x10000],al
  42442e:	add    BYTE PTR [rax],al
  424430:	and    BYTE PTR [rax],al
	...
  42445e:	add    BYTE PTR [rax],al
  424460:	es jle 0x4244a5
  424463:	add    BYTE PTR [rax],al
  424465:	add    BYTE PTR [rax],al
  424467:	add    BYTE PTR [rdi+0x7e],al
  42446a:	rex.X add BYTE PTR [rax],al
  42446d:	add    BYTE PTR [rax],al
  42446f:	add    BYTE PTR [rsi+rdi*2+0x42],cl
	...
  424487:	add    BYTE PTR [rip+0x5100300],al        # 0x552478d
  42448d:	add    BYTE PTR [rbx],al
  42448f:	adc    BYTE PTR [rax],al
  424491:	add    BYTE PTR [rax],0x0
  424494:	add    DWORD PTR [rax],eax
  424496:	add    BYTE PTR [rax],al
  424498:	and    BYTE PTR [rax],al
	...
  4244c6:	add    BYTE PTR [rax],al
  4244c8:	push   rcx
  4244c9:	jle    0x42450d
  4244cb:	add    BYTE PTR [rax],al
  4244cd:	add    BYTE PTR [rax],al
  4244cf:	add    BYTE PTR [rdi+0x7e],ah
  4244d2:	rex.X add BYTE PTR [rax],al
  4244d5:	add    BYTE PTR [rax],al
  4244d7:	add    BYTE PTR [rsi+rdi*2+0x42],ch
	...
  4244ef:	add    BYTE PTR [rsi],al
  4244f1:	add    BYTE PTR [rax+rdx*1],al
  4244f4:	(bad)  
  4244f5:	add    BYTE PTR [rax+rdx*1],al
  4244f8:	add    BYTE PTR [rax+0x10000],al
  4244fe:	add    BYTE PTR [rax],al
  424500:	and    BYTE PTR [rax],al
	...
  42452e:	add    BYTE PTR [rax],al
  424530:	jno    0x4245b0
  424532:	rex.X add BYTE PTR [rax],al
  424535:	add    BYTE PTR [rax],al
  424537:	add    BYTE PTR [rdi+0x427e],al
  42453d:	add    BYTE PTR [rax],al
  42453f:	add    BYTE PTR [rsi+rdi*2+0x42],cl
	...
  424556:	add    BYTE PTR [rax],al
  424558:	(bad)  
  424559:	add    BYTE PTR [rbp+0x0],dh
  42455c:	(bad)  
  42455d:	add    BYTE PTR [rbp+0x0],dh
  424560:	add    BYTE PTR [rax+0x10000],al
  424566:	add    BYTE PTR [rax],al
  424568:	and    BYTE PTR [rax],al
	...
  424596:	add    BYTE PTR [rax],al
  424598:	xchg   ecx,eax
  424599:	jle    0x4245dd
  42459b:	add    BYTE PTR [rax],al
  42459d:	add    BYTE PTR [rax],al
  42459f:	add    BYTE PTR [rdx+0x427e],dh
  4245a5:	add    BYTE PTR [rax],al
  4245a7:	add    BYTE PTR [rsi+0x427e],dh
	...
  4245bd:	add    BYTE PTR [rax],al
  4245bf:	add    BYTE PTR [rax],cl
  4245c1:	add    BYTE PTR [rip+0x5000810],al        # 0x5424dd7
  4245c7:	adc    BYTE PTR [rax],al
  4245c9:	add    BYTE PTR [rax],0x0
  4245cc:	add    DWORD PTR [rax],eax
  4245ce:	add    BYTE PTR [rax],al
  4245d0:	and    BYTE PTR [rax+0x0],dl
	...
  4245f7:	add    BYTE PTR [rax+0x6f],dh
  4245fa:	add    BYTE PTR [rax],al
  4245fd:	add    BYTE PTR [rax],al
  4245ff:	add    BYTE PTR [rdx+0x427e],bh
  424605:	add    BYTE PTR [rax],al
  424607:	add    bl,dl
  424609:	jle    0x42464d
  42460b:	add    BYTE PTR [rax],al
  42460d:	add    BYTE PTR [rax],al
  42460f:	add    bh,dl
  424611:	jle    0x424655
	...
  424627:	add    BYTE PTR [rcx],cl
  424629:	add    BYTE PTR [rsi],al
  42462b:	adc    BYTE PTR [rcx],cl
  42462d:	add    BYTE PTR [rsi],al
  42462f:	adc    BYTE PTR [rax],al
  424631:	add    BYTE PTR [rax],0x0
  424634:	add    DWORD PTR [rax],eax
  424636:	add    BYTE PTR [rax],al
  424638:	and    BYTE PTR [rax],dl
	...
  424666:	add    BYTE PTR [rax],al
  424668:	fstp   TBYTE PTR [rsi+0x42]
  42466b:	add    BYTE PTR [rax],al
  42466d:	add    BYTE PTR [rax],al
  42466f:	add    bh,ch
  424671:	jle    0x4246b5
  424673:	add    BYTE PTR [rax],al
  424675:	add    BYTE PTR [rax],al
  424677:	add    ch,bh
  424679:	jle    0x4246bd
	...
  42468f:	add    BYTE PTR [rdx],cl
  424691:	add    BYTE PTR [rcx+0x0],ah
  424694:	or     al,BYTE PTR [rax]
  424696:	(bad)  
  424697:	add    BYTE PTR [rax],al
  424699:	add    BYTE PTR [rax],0x0
  42469c:	add    DWORD PTR [rax],eax
  42469e:	add    BYTE PTR [rax],al
  4246a0:	and    BYTE PTR [rax],al
	...
  4246ce:	add    BYTE PTR [rax],al
  4246d0:	or     edi,DWORD PTR [rdi+0x42]
  4246d3:	add    BYTE PTR [rax],al
  4246d5:	add    BYTE PTR [rax],al
  4246d7:	add    BYTE PTR [rdi],ch
  4246d9:	jg     0x42471d
  4246db:	add    BYTE PTR [rax],al
  4246dd:	add    BYTE PTR [rax],al
  4246df:	add    BYTE PTR [rbx+0x7f],al
  4246e2:	rex.X add BYTE PTR [rax],al
	...
  4246f5:	add    BYTE PTR [rax],al
  4246f7:	add    BYTE PTR [rbx],cl
  4246f9:	add    BYTE PTR [rdx+0x0],dh
  4246fc:	or     eax,DWORD PTR [rax]
  4246fe:	jb     0x424700
  424700:	add    BYTE PTR [rax+0x10000],al
  424706:	add    BYTE PTR [rax],al
  424708:	and    BYTE PTR [rax],al
	...
  424736:	add    BYTE PTR [rax],al
  424738:	push   rdi
  424739:	jg     0x42477d
  42473b:	add    BYTE PTR [rax],al
  42473d:	add    BYTE PTR [rax],al
  42473f:	add    BYTE PTR [rdi+rdi*2+0x42],dh
  424743:	add    BYTE PTR [rax],al
  424745:	add    BYTE PTR [rax],al
  424747:	add    BYTE PTR [rax+0x427f],cl
	...
  42475d:	add    BYTE PTR [rax],al
  42475f:	add    BYTE PTR [rax+rax*1],cl
  424762:	(bad)  
  424763:	adc    BYTE PTR [rax+rax*1],cl
  424766:	(bad)  
  424767:	adc    BYTE PTR [rax],al
  424769:	add    BYTE PTR [rax],0x0
  42476c:	add    DWORD PTR [rax],eax
  42476e:	add    BYTE PTR [rax],al
  424770:	and    BYTE PTR [rax],al
	...
  42479e:	add    BYTE PTR [rax],al
  4247a0:	pushf  
  4247a1:	jg     0x4247e5
  4247a3:	add    BYTE PTR [rax],al
  4247a5:	add    BYTE PTR [rax],al
  4247a7:	add    ah,cl
  4247a9:	jg     0x4247ed
  4247ab:	add    BYTE PTR [rax],al
  4247ad:	add    BYTE PTR [rax],al
  4247af:	add    bh,bl
  4247b1:	jg     0x4247f5
	...
  4247c7:	add    BYTE PTR [rip+0xd006200],cl        # 0xd42a9cd
  4247cd:	add    BYTE PTR [rdx+0x0],ah
  4247d0:	add    BYTE PTR [rax+0x10000],al
  4247d6:	add    BYTE PTR [rax],al
  4247d8:	and    BYTE PTR [rax],al
	...
  424806:	add    BYTE PTR [rax],al
  424808:	bnd jg 0x42484d
  42480b:	add    BYTE PTR [rax],al
  42480d:	add    BYTE PTR [rax],al
  42480f:	add    BYTE PTR [rip+0x4280],cl        # 0x428a95
  424815:	add    BYTE PTR [rax],al
  424817:	add    BYTE PTR [rdi],dl
  424819:	add    BYTE PTR [rdx+0x0],0x0
	...
  42482d:	add    BYTE PTR [rax],al
  42482f:	add    BYTE PTR [rsi],cl
  424831:	add    BYTE PTR [rax],cl
  424833:	adc    BYTE PTR [rsi],cl
  424835:	add    BYTE PTR [rax],cl
  424837:	adc    BYTE PTR [rax],al
  424839:	add    BYTE PTR [rax],0x0
  42483c:	add    DWORD PTR [rax],eax
  42483e:	add    BYTE PTR [rax],al
  424840:	and    BYTE PTR [rax],al
	...
  42486e:	add    BYTE PTR [rax],al
  424870:	and    DWORD PTR [rax+0x42],eax
  424876:	add    BYTE PTR [rax],al
  424878:	rex.WRX add BYTE PTR [rdx+0x0],0x0
  42487d:	add    BYTE PTR [rax],al
  42487f:	add    BYTE PTR [rcx-0x80],bl
  424882:	rex.X add BYTE PTR [rax],al
	...
  424895:	add    BYTE PTR [rax],al
  424897:	add    BYTE PTR [rdi],cl
  424899:	add    BYTE PTR [rcx],cl
  42489b:	adc    BYTE PTR [rdi],cl
  42489d:	add    BYTE PTR [rcx],cl
  42489f:	adc    BYTE PTR [rax],al
  4248a1:	add    BYTE PTR [rax],0x0
  4248a4:	add    DWORD PTR [rax],eax
  4248a6:	add    BYTE PTR [rax],al
  4248a8:	and    BYTE PTR [rax],dl
	...
  4248d6:	add    BYTE PTR [rax],al
  4248d8:	add    BYTE PTR fs:[rdx+0x0],0x0
  4248dd:	add    BYTE PTR [rax],al
  4248df:	add    BYTE PTR [rsi-0x80],dh
  4248e2:	rex.X add BYTE PTR [rax],al
  4248e5:	add    BYTE PTR [rax],al
  4248e7:	add    BYTE PTR [rdi-0x80],bh
  4248ea:	rex.X add BYTE PTR [rax],al
	...
  4248fd:	add    BYTE PTR [rax],al
  4248ff:	add    BYTE PTR [rax],dl
  424901:	add    BYTE PTR [rdx],cl
  424903:	adc    BYTE PTR [rax],dl
  424905:	add    BYTE PTR [rdx],cl
  424907:	adc    BYTE PTR [rax],al
  424909:	add    BYTE PTR [rax],0x0
  42490c:	add    DWORD PTR [rax],eax
  42490e:	add    BYTE PTR [rax],al
  424910:	and    BYTE PTR [rax+0x0],dh
	...
  424937:	add    BYTE PTR [rax+0x6f],dl
  42493a:	add    BYTE PTR [rax],al
  42493d:	add    BYTE PTR [rax],al
  42493f:	add    BYTE PTR [rax+0x4280],cl
  424945:	add    BYTE PTR [rax],al
  424947:	add    BYTE PTR [rsi+0x4280],bl
  42494d:	add    BYTE PTR [rax],al
  42494f:	add    BYTE PTR [rdi+0x4280],ah
	...
  424965:	add    BYTE PTR [rax],al
  424967:	add    BYTE PTR [rcx],dl
  424969:	add    BYTE PTR [rbx],cl
  42496b:	adc    BYTE PTR [rcx],dl
  42496d:	add    BYTE PTR [rbx],cl
  42496f:	adc    BYTE PTR [rax],al
  424971:	add    BYTE PTR [rax],0x0
  424974:	add    DWORD PTR [rax],eax
  424976:	add    BYTE PTR [rax],al
  424978:	and    BYTE PTR [rax],dl
	...
  4249a6:	add    BYTE PTR [rax],al
  4249a8:	mov    al,0x80
  4249aa:	rex.X add BYTE PTR [rax],al
  4249ad:	add    BYTE PTR [rax],al
  4249af:	add    al,bl
  4249b1:	add    BYTE PTR [rdx+0x0],0x0
  4249b5:	add    BYTE PTR [rax],al
  4249b7:	add    bl,ah
  4249b9:	add    BYTE PTR [rdx+0x0],0x0
	...
  4249cd:	add    BYTE PTR [rax],al
  4249cf:	add    BYTE PTR [rdx],dl
  4249d1:	add    BYTE PTR [rax+rdx*1],cl
  4249d4:	adc    al,BYTE PTR [rax]
  4249d6:	or     al,0x10
  4249d8:	add    BYTE PTR [rax+0x10000],al
  4249de:	add    BYTE PTR [rax],al
  4249e0:	and    BYTE PTR [rax+0x0],dh
	...
  424a07:	add    BYTE PTR [rax],dh
  424a09:	outs   dx,DWORD PTR ds:[rsi]
  424a0a:	add    BYTE PTR [rax],al
  424a0d:	add    BYTE PTR [rax],al
  424a0f:	add    dh,ch
  424a11:	add    BYTE PTR [rdx+0x0],0x0
  424a15:	add    BYTE PTR [rax],al
  424a17:	add    dh,bh
  424a19:	add    BYTE PTR [rdx+0x0],0x0
  424a1d:	add    BYTE PTR [rax],al
  424a1f:	add    BYTE PTR [rdx],cl
  424a21:	add    DWORD PTR [rdx+0x0],0x0
	...
  424a38:	adc    eax,DWORD PTR [rax]
  424a3a:	or     eax,0xd001310
  424a3f:	adc    BYTE PTR [rax],al
  424a41:	add    BYTE PTR [rax],0x0
  424a44:	add    DWORD PTR [rax],eax
  424a46:	add    BYTE PTR [rax],al
  424a48:	and    BYTE PTR [rax+0x0],dh
	...
  424a6f:	add    BYTE PTR [rax],dl
  424a71:	outs   dx,DWORD PTR ds:[rsi]
  424a72:	add    BYTE PTR [rax],al
  424a75:	add    BYTE PTR [rax],al
  424a77:	add    BYTE PTR [rsi],dl
  424a79:	add    DWORD PTR [rdx+0x0],0x0
  424a80:	sub    al,BYTE PTR [rcx+0x42]
  424a86:	add    BYTE PTR [rax],al
  424a88:	xor    eax,0x4281
	...
  424a9d:	add    BYTE PTR [rax],al
  424a9f:	add    BYTE PTR [rax+rax*1],dl
  424aa2:	(bad)  
  424aa3:	adc    BYTE PTR [rax+rax*1],dl
  424aa6:	(bad)  
  424aa7:	adc    BYTE PTR [rax],al
  424aa9:	add    BYTE PTR [rax],0x0
  424aac:	add    DWORD PTR [rax],eax
  424aae:	add    BYTE PTR [rax],al
  424ab0:	and    BYTE PTR [rax+0x0],dh
	...
  424ad7:	add    al,dh
  424ad9:	outs   dx,BYTE PTR ds:[rsi]
  424ada:	add    BYTE PTR [rax],al
  424add:	add    BYTE PTR [rax],al
  424adf:	add    BYTE PTR [rax-0x7f],al
  424ae2:	rex.X add BYTE PTR [rax],al
  424ae5:	add    BYTE PTR [rax],al
  424ae7:	add    BYTE PTR [rcx-0x7f],bl
  424aea:	rex.X add BYTE PTR [rax],al
  424aed:	add    BYTE PTR [rax],al
  424aef:	add    BYTE PTR [rcx+rax*4+0x42],ah
	...
  424b07:	add    BYTE PTR [rip+0x15100f00],dl        # 0x15525a0d
  424b0d:	add    BYTE PTR [rdi],cl
  424b0f:	adc    BYTE PTR [rax],al
  424b11:	add    BYTE PTR [rax],0x0
  424b14:	add    DWORD PTR [rax],eax
  424b16:	add    BYTE PTR [rax],al
  424b18:	and    BYTE PTR [rax+0x0],dh
	...
  424b3f:	add    al,dl
  424b41:	outs   dx,BYTE PTR ds:[rsi]
  424b42:	add    BYTE PTR [rax],al
  424b45:	add    BYTE PTR [rax],al
  424b47:	add    BYTE PTR [rdi-0x7f],ch
  424b4a:	rex.X add BYTE PTR [rax],al
  424b4d:	add    BYTE PTR [rax],al
  424b4f:	add    BYTE PTR [rax+0x4281],bl
  424b55:	add    BYTE PTR [rax],al
  424b57:	add    BYTE PTR [rcx+rax*4+0x42],ah
	...
  424b6e:	add    BYTE PTR [rax],al
  424b70:	(bad)  
  424b71:	add    BYTE PTR [rax],dl
  424b73:	adc    BYTE PTR [rsi],dl
  424b75:	add    BYTE PTR [rax],dl
  424b77:	adc    BYTE PTR [rax],al
  424b79:	add    BYTE PTR [rax],0x0
  424b7c:	add    DWORD PTR [rax],eax
  424b7e:	add    BYTE PTR [rax],al
  424b80:	and    BYTE PTR [rax],dl
	...
  424bae:	add    BYTE PTR [rax],al
  424bb0:	mov    al,0x81
  424bb2:	rex.X add BYTE PTR [rax],al
  424bb5:	add    BYTE PTR [rax],al
  424bb7:	add    dh,dl
  424bb9:	add    DWORD PTR [rdx+0x0],0x0
  424bc0:	loop   0x424b43
  424bc2:	rex.X add BYTE PTR [rax],al
	...
  424bd5:	add    BYTE PTR [rax],al
  424bd7:	add    BYTE PTR [rdi],dl
  424bd9:	add    BYTE PTR [rcx],dl
  424bdb:	adc    BYTE PTR [rdi],dl
  424bdd:	add    BYTE PTR [rcx],dl
  424bdf:	adc    BYTE PTR [rax],al
  424be1:	add    BYTE PTR [rax],0x0
  424be4:	add    DWORD PTR [rax],eax
  424be6:	add    BYTE PTR [rax],al
  424be8:	and    BYTE PTR [rax],dl
	...
  424c16:	add    BYTE PTR [rax],al
  424c18:	out    dx,al
  424c19:	add    DWORD PTR [rdx+0x0],0x0
  424c20:	sbb    al,0x82
  424c22:	rex.X add BYTE PTR [rax],al
  424c25:	add    BYTE PTR [rax],al
  424c27:	add    BYTE PTR [rcx],ch
  424c29:	(bad)  
  424c2a:	rex.X add BYTE PTR [rax],al
	...
  424c3d:	add    BYTE PTR [rax],al
  424c3f:	add    BYTE PTR [rax],bl
  424c41:	add    BYTE PTR [rdx],dl
  424c43:	adc    BYTE PTR [rax],bl
  424c45:	add    BYTE PTR [rdx],dl
  424c47:	adc    BYTE PTR [rax],al
  424c49:	add    BYTE PTR [rax],0x0
  424c4c:	add    DWORD PTR [rax],eax
  424c4e:	add    BYTE PTR [rax],al
  424c50:	and    BYTE PTR [rax],dl
	...
  424c7e:	add    BYTE PTR [rax],al
  424c80:	ss (bad) 
  424c82:	rex.X add BYTE PTR [rax],al
  424c85:	add    BYTE PTR [rax],al
  424c87:	add    BYTE PTR [rax-0x7e],ch
  424c8a:	rex.X add BYTE PTR [rax],al
  424c8d:	add    BYTE PTR [rax],al
  424c8f:	add    BYTE PTR [rdi-0x7e],dh
  424c92:	rex.X add BYTE PTR [rax],al
	...
  424ca5:	add    BYTE PTR [rax],al
  424ca7:	add    BYTE PTR [rcx],bl
  424ca9:	add    BYTE PTR [rbx],dl
  424cab:	adc    BYTE PTR [rcx],bl
  424cad:	add    BYTE PTR [rbx],dl
  424caf:	adc    BYTE PTR [rax],al
  424cb1:	add    BYTE PTR [rax],0x0
  424cb4:	add    DWORD PTR [rax],eax
  424cb6:	add    BYTE PTR [rax],al
  424cb8:	and    BYTE PTR [rax],dl
	...
  424ce6:	add    BYTE PTR [rax],al
  424ce8:	xchg   BYTE PTR [rdx+0x42],al
  424cee:	add    BYTE PTR [rax],al
  424cf0:	rol    BYTE PTR [rdx+0x42],0x0
  424cf7:	add    al,dl
  424cf9:	(bad)  
  424cfa:	rex.X add BYTE PTR [rax],al
	...
  424d0d:	add    BYTE PTR [rax],al
  424d0f:	add    BYTE PTR [rdx],bl
  424d11:	add    BYTE PTR [rax+rdx*1],dl
  424d14:	sbb    al,BYTE PTR [rax]
  424d16:	adc    al,0x10
  424d18:	add    BYTE PTR [rax+0x10000],al
  424d1e:	add    BYTE PTR [rax],al
  424d20:	and    BYTE PTR [rax],dl
	...
  424d4e:	add    BYTE PTR [rax],al
  424d50:	ss (bad) 
  424d52:	rex.X add BYTE PTR [rax],al
  424d55:	add    BYTE PTR [rax],al
  424d57:	add    al,ah
  424d59:	(bad)  
  424d5a:	rex.X add BYTE PTR [rax],al
  424d5d:	add    BYTE PTR [rax],al
  424d5f:	add    bh,ch
  424d61:	(bad)  
  424d62:	rex.X add BYTE PTR [rax],al
	...
  424d75:	add    BYTE PTR [rax],al
  424d77:	add    BYTE PTR [rbx],bl
  424d79:	add    BYTE PTR [rip+0x15001b10],dl        # 0x1542688f
  424d7f:	adc    BYTE PTR [rax],al
  424d81:	add    BYTE PTR [rax],0x0
  424d84:	add    DWORD PTR [rax],eax
  424d86:	add    BYTE PTR [rax],al
  424d88:	and    BYTE PTR [rax],dl
	...
  424db6:	add    BYTE PTR [rax],al
  424db8:	xchg   BYTE PTR [rdx+0x42],al
  424dbe:	add    BYTE PTR [rax],al
  424dc0:	inc    BYTE PTR [rdx+0x42]
  424dc6:	add    BYTE PTR [rax],al
  424dc8:	(bad)  
  424dc9:	add    DWORD PTR [rdx+0x0],0x0
	...
  424ddd:	add    BYTE PTR [rax],al
  424ddf:	add    BYTE PTR [rax+rax*1],bl
  424de2:	(bad)  
  424de3:	adc    BYTE PTR [rax+rax*1],bl
  424de6:	(bad)  
  424de7:	adc    BYTE PTR [rax],al
  424de9:	add    BYTE PTR [rax],0x0
  424dec:	add    DWORD PTR [rax],eax
  424dee:	add    BYTE PTR [rax],al
  424df0:	and    BYTE PTR [rax],dl
	...
  424e1e:	add    BYTE PTR [rax],al
  424e20:	(bad)  
  424e21:	add    DWORD PTR [rdx+0x0],0x0
  424e25:	add    BYTE PTR [rax],al
  424e27:	add    BYTE PTR [rsi],bh
  424e29:	add    DWORD PTR [rdx+0x0],0x0
  424e2d:	add    BYTE PTR [rax],al
  424e2f:	add    BYTE PTR [rax-0x7d],cl
  424e32:	rex.X add BYTE PTR [rax],al
	...
  424e45:	add    BYTE PTR [rax],al
  424e47:	add    BYTE PTR [rip+0x1d101700],bl        # 0x1d52654d
  424e4d:	add    BYTE PTR [rdi],dl
  424e4f:	adc    BYTE PTR [rax],al
  424e51:	add    BYTE PTR [rax],0x0
  424e54:	add    DWORD PTR [rax],eax
  424e56:	add    BYTE PTR [rax],al
  424e58:	and    BYTE PTR [rax+0x0],dh
	...
  424e7f:	add    BYTE PTR [rax+0x406e],dh
  424e85:	add    BYTE PTR [rax],al
  424e87:	add    BYTE PTR [rdx-0x7d],dl
  424e8a:	rex.X add BYTE PTR [rax],al
  424e8d:	add    BYTE PTR [rax],al
  424e8f:	add    BYTE PTR [rbx-0x7d],ch
  424e92:	rex.X add BYTE PTR [rax],al
  424e95:	add    BYTE PTR [rax],al
  424e97:	add    BYTE PTR [rbp-0x7d],dh
  424e9a:	rex.X add BYTE PTR [rax],al
	...
  424ead:	add    BYTE PTR [rax],al
  424eaf:	add    BYTE PTR [rsi],bl
  424eb1:	add    BYTE PTR [rax],bl
  424eb3:	adc    BYTE PTR [rsi],bl
  424eb5:	add    BYTE PTR [rax],bl
  424eb7:	adc    BYTE PTR [rax],al
  424eb9:	add    BYTE PTR [rax],0x0
  424ebc:	add    DWORD PTR [rax],eax
  424ebe:	add    BYTE PTR [rax],al
  424ec0:	and    BYTE PTR [rax+0x0],dh
	...
  424ee7:	add    BYTE PTR [rax+0x406e],dl
  424eed:	add    BYTE PTR [rax],al
  424eef:	add    BYTE PTR [rdi-0x7d],bh
  424ef2:	rex.X add BYTE PTR [rax],al
  424ef5:	add    BYTE PTR [rax],al
  424ef7:	add    BYTE PTR [rsi+0x4283],ah
  424efd:	add    BYTE PTR [rax],al
  424eff:	add    BYTE PTR [rbx+rax*4+0x42],dh
	...
  424f16:	add    BYTE PTR [rax],al
  424f18:	(bad)  
  424f19:	add    BYTE PTR [rcx],bl
  424f1b:	adc    BYTE PTR [rdi],bl
  424f1d:	add    BYTE PTR [rcx],bl
  424f1f:	adc    BYTE PTR [rax],al
  424f21:	add    BYTE PTR [rax],0x0
  424f24:	add    DWORD PTR [rax],eax
  424f26:	add    BYTE PTR [rax],al
  424f28:	and    BYTE PTR [rax+0x0],dh
	...
  424f4f:	add    BYTE PTR [rax+0x6e],dh
  424f52:	add    BYTE PTR [rax],al
  424f55:	add    BYTE PTR [rax],al
  424f57:	add    dl,al
  424f59:	add    DWORD PTR [rdx+0x0],0x0
  424f5d:	add    BYTE PTR [rax],al
  424f5f:	add    bl,bl
  424f61:	add    DWORD PTR [rdx+0x0],0x0
  424f65:	add    BYTE PTR [rax],al
  424f67:	add    ch,ah
  424f69:	add    DWORD PTR [rdx+0x0],0x0
	...
  424f7d:	add    BYTE PTR [rax],al
  424f7f:	add    BYTE PTR [rax],ah
  424f81:	add    BYTE PTR [rdx],bl
  424f83:	adc    BYTE PTR [rax],ah
  424f85:	add    BYTE PTR [rdx],bl
  424f87:	adc    BYTE PTR [rax],al
  424f89:	add    BYTE PTR [rax],0x0
  424f8c:	add    DWORD PTR [rax],eax
  424f8e:	add    BYTE PTR [rax],al
  424f90:	and    BYTE PTR [rax],dl
	...
  424fbe:	add    BYTE PTR [rax],al
  424fc0:	out    dx,eax
  424fc1:	add    DWORD PTR [rdx+0x0],0x0
  424fc5:	add    BYTE PTR [rax],al
  424fc7:	add    BYTE PTR [rax],cl
  424fc9:	test   BYTE PTR [rdx+0x0],al
  424fcc:	add    BYTE PTR [rax],al
  424fce:	add    BYTE PTR [rax],al
  424fd0:	adc    BYTE PTR [rdx+rax*2+0x0],al
	...
  424fe7:	add    BYTE PTR [rcx],ah
  424fe9:	add    BYTE PTR [rbx],bl
  424feb:	adc    BYTE PTR [rcx],ah
  424fed:	add    BYTE PTR [rbx],bl
  424fef:	adc    BYTE PTR [rax],al
  424ff1:	add    BYTE PTR [rax],0x0
  424ff4:	add    DWORD PTR [rax],eax
  424ff6:	add    BYTE PTR [rax],al
  424ff8:	and    BYTE PTR [rax+0x0],dh
	...
  42501f:	add    BYTE PTR [rax+0x6e],dl
  425022:	add    BYTE PTR [rax],al
  425025:	add    BYTE PTR [rax],al
  425027:	add    BYTE PTR [rax],bl
  425029:	test   BYTE PTR [rdx+0x0],al
  42502c:	add    BYTE PTR [rax],al
  42502e:	add    BYTE PTR [rax],al
  425030:	cmp    al,0x84
  425032:	rex.X add BYTE PTR [rax],al
  425035:	add    BYTE PTR [rax],al
  425037:	add    BYTE PTR [rdx-0x7c],cl
  42503a:	rex.X add BYTE PTR [rax],al
	...
  42504d:	add    BYTE PTR [rax],al
  42504f:	add    BYTE PTR [rdx],ah
  425051:	add    BYTE PTR [rax+0x0],dh
  425054:	and    al,BYTE PTR [rax]
  425056:	jo     0x425058
  425058:	add    BYTE PTR [rax+0x10000],al
  42505e:	add    BYTE PTR [rax],al
  425060:	and    BYTE PTR [rax+0x0],dl
	...
  425087:	add    BYTE PTR [rax+0x4071],al
  42508d:	add    BYTE PTR [rax],al
  42508f:	add    BYTE PTR [rax-0x7c],bl
  425092:	rex.X add BYTE PTR [rax],al
  425095:	add    BYTE PTR [rax],al
  425097:	add    BYTE PTR [rdi-0x7c],ch
  42509a:	rex.X add BYTE PTR [rax],al
  42509d:	add    BYTE PTR [rax],al
  42509f:	add    BYTE PTR [rsp+rax*4+0x42],dh
	...
  4250b7:	add    BYTE PTR [rbx],ah
  4250b9:	add    BYTE PTR [rax+rax*1+0x23],ch
  4250bd:	add    BYTE PTR [rax+rax*1+0x0],ch
  4250c1:	add    BYTE PTR [rax],0x0
  4250c4:	add    DWORD PTR [rax],eax
  4250c6:	add    BYTE PTR [rax],al
  4250c8:	and    BYTE PTR [rax],al
	...
  4250f6:	add    BYTE PTR [rax],al
  4250f8:	jns    0x42507e
  4250fa:	rex.X add BYTE PTR [rax],al
  4250fd:	add    BYTE PTR [rax],al
  4250ff:	add    BYTE PTR [rsp+rax*4+0x42],ch
  425106:	add    BYTE PTR [rax],al
  425108:	mov    cl,0x84
  42510a:	rex.X add BYTE PTR [rax],al
	...
  42511d:	add    BYTE PTR [rax],al
  42511f:	add    BYTE PTR [rax+rax*1],ah
  425122:	sbb    al,0x10
  425124:	and    al,0x0
  425126:	sbb    al,0x10
  425128:	add    BYTE PTR [rax+0x10000],al
  42512e:	add    BYTE PTR [rax],al
  425130:	and    BYTE PTR [rax+0x0],dh
	...
  425157:	add    BYTE PTR [rax],dh
  425159:	outs   dx,BYTE PTR ds:[rsi]
  42515a:	add    BYTE PTR [rax],al
  42515d:	add    BYTE PTR [rax],al
  42515f:	add    BYTE PTR [rsi+0x4284],dh
  425165:	add    BYTE PTR [rax],al
  425167:	add    ah,bl
  425169:	test   BYTE PTR [rdx+0x0],al
  42516c:	add    BYTE PTR [rax],al
  42516e:	add    BYTE PTR [rax],al
  425170:	in     eax,0x84
  425172:	rex.X add BYTE PTR [rax],al
	...
  425185:	add    BYTE PTR [rax],al
  425187:	add    BYTE PTR [rip+0x7600],ah        # 0x42c78d
  42518d:	xor    BYTE PTR [rsi+0x0],0x0
  425191:	add    BYTE PTR [rax],0x0
  425194:	add    DWORD PTR [rax],eax
  425196:	add    BYTE PTR [rax],al
  425198:	add    BYTE PTR [rcx],dl
  42519a:	add    eax,DWORD PTR [rax]
  42519c:	add    al,BYTE PTR [rax]
	...
  4251be:	add    BYTE PTR [rax],al
  4251c0:	adc    BYTE PTR [rsi],cl
  4251c2:	add    BYTE PTR [r8],al
  4251c5:	add    BYTE PTR [rax],al
  4251c7:	add    BYTE PTR [rsi-0x7b],dl
  4251ca:	rex.X add BYTE PTR [rax],al
	...
  4251d5:	add    BYTE PTR [rax],al
  4251d7:	add    BYTE PTR [rdx-0x7b],bh
  4251da:	rex.X add BYTE PTR [rax],al
	...
  4251ed:	add    BYTE PTR [rax],al
  4251ef:	add    BYTE PTR [rsi],ah
  4251f1:	add    BYTE PTR [rax+0x0],ch
  4251f4:	add    BYTE PTR [rax-0x7fffff98],al
  4251fa:	add    BYTE PTR [rax],al
  4251fc:	add    DWORD PTR [rax],eax
  4251fe:	add    BYTE PTR [rax],al
  425200:	add    BYTE PTR [rcx],al
  425202:	add    al,BYTE PTR [rax]
  425204:	add    eax,DWORD PTR [rax]
	...
  425226:	add    BYTE PTR [rax],al
  425228:	adc    BYTE PTR [rsi+0x40],ch
  42522b:	add    BYTE PTR [rax],al
  42522d:	add    BYTE PTR [rax],al
  42522f:	add    dh,ch
  425231:	test   BYTE PTR [rdx+0x0],al
	...
  425240:	sbb    al,BYTE PTR [rbp+0x42]
	...
  425256:	add    BYTE PTR [rax],al
  425258:	(bad)  
  425259:	add    BYTE PTR [rcx],ah
  42525b:	add    BYTE PTR [rax],al
  42525d:	and    BYTE PTR [rcx],0x0
  425260:	add    BYTE PTR [rax+0x10000],al
  425266:	add    BYTE PTR [rax],al
  425268:	add    BYTE PTR [rcx],al
  42526a:	or     BYTE PTR [rax],al
  42526c:	add    al,0x0
	...
  42528e:	add    BYTE PTR [rax],al
  425290:	rex jle 0x4252d3
  425293:	add    BYTE PTR [rax],al
  425295:	add    BYTE PTR [rax],al
  425297:	add    dh,ch
  425299:	test   BYTE PTR [rdx+0x0],al
	...
  4252a8:	sbb    al,BYTE PTR [rbp+0x42]
	...
  4252be:	add    BYTE PTR [rax],al
  4252c0:	add    DWORD PTR [rax],eax
	...
  4252fe:	add    BYTE PTR [rax],al
  425300:	add    BYTE PTR [rcx],al
  425302:	add    al,BYTE PTR [rbx]
  425304:	add    al,0x5
  425306:	(bad)  
  425307:	(bad)  
  425308:	or     BYTE PTR [rcx],cl
  42530a:	or     cl,BYTE PTR [rbx]
  42530c:	or     al,0xd
  42530e:	(bad)  
  42530f:	movups xmm2,XMMWORD PTR [rcx]
  425312:	adc    dl,BYTE PTR [rbx]
  425314:	adc    al,0x15
  425316:	(bad)  
  425317:	(bad)  
  425318:	sbb    BYTE PTR [rcx],bl
  42531a:	sbb    bl,BYTE PTR [rbx]
  42531c:	sbb    al,0x1d
  42531e:	(bad)  
  42531f:	(bad)  
  425320:	and    BYTE PTR [rcx],ah
  425322:	and    ah,BYTE PTR [rbx]
  425324:	and    al,0x25
  425326:	es (bad) 
  425328:	sub    BYTE PTR [rcx],ch
  42532a:	sub    ch,BYTE PTR [rbx]
  42532c:	sub    al,0x2d
  42532e:	cs (bad) 
  425330:	xor    BYTE PTR [rcx],dh
  425332:	xor    dh,BYTE PTR [rbx]
  425334:	xor    al,0x35
  425336:	ss (bad) 
  425338:	cmp    BYTE PTR [rcx],bh
  42533a:	cmp    bh,BYTE PTR [rbx]
  42533c:	cmp    al,0x3d
  42533e:	ds (bad) 
  425340:	rex (bad) 
  425342:	(bad)
  425347:	addr32 push 0x6c6b6a69
  42534d:	ins    DWORD PTR es:[rdi],dx
  42534e:	outs   dx,BYTE PTR ds:[rsi]
  42534f:	outs   dx,DWORD PTR ds:[rsi]
  425350:	jo     0x4253c3
  425352:	jb     0x4253c7
  425354:	je     0x4253cb
  425356:	jbe    0x4253cf
  425358:	js     0x4253d3
  42535a:	jp     0x4253b7
  42535c:	pop    rsp
  42535d:	pop    rbp
  42535e:	pop    rsi
  42535f:	pop    rdi
  425360:	(bad)  
  425361:	(bad)  
  425362:	(bad)
  425367:	addr32 push 0x6c6b6a69
  42536d:	ins    DWORD PTR es:[rdi],dx
  42536e:	outs   dx,BYTE PTR ds:[rsi]
  42536f:	outs   dx,DWORD PTR ds:[rsi]
  425370:	jo     0x4253e3
  425372:	jb     0x4253e7
  425374:	je     0x4253eb
  425376:	jbe    0x4253ef
  425378:	js     0x4253f3
  42537a:	jp     0x4253f7
  42537c:	jl     0x4253fb
  42537e:	jle    0x4253ff
  425380:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
  425387:	xchg   DWORD PTR [rax-0x73747577],ecx
  42538d:	lea    ecx,[rsi-0x6d6e6f71]
  425393:	xchg   ebx,eax
  425394:	xchg   esp,eax
  425395:	xchg   ebp,eax
  425396:	xchg   esi,eax
  425397:	xchg   edi,eax
  425398:	cwde   
  425399:	cdq    
  42539a:	(bad)  
  42539b:	fwait
  42539c:	pushf  
  42539d:	popf   
  42539e:	sahf   
  42539f:	lahf   
  4253a0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
  4253a9:	test   eax,0xadacabaa
  4253ae:	scas   al,BYTE PTR es:[rdi]
  4253af:	scas   eax,DWORD PTR es:[rdi]
  4253b0:	mov    al,0xb1
  4253b2:	mov    dl,0xb3
  4253b4:	mov    ah,0xb5
  4253b6:	mov    dh,0xb7
  4253b8:	mov    eax,0xbcbbbab9
  4253bd:	mov    ebp,0xc1c0bfbe
  4253c2:	ret    0xc4c3
  4253c5:	(bad)
  4253c8:	enter  0xcac9,0xcb
  4253cc:	int3   
  4253cd:	int    0xce
  4253cf:	iret   
  4253d0:	rcl    cl,1
  4253d2:	rcl    bl,cl
  4253d4:	(bad)  
  4253d5:	(bad)  
  4253d6:	(bad)  
  4253d7:	xlat   BYTE PTR ds:[rbx]
  4253d8:	fcomp  st(1)
  4253da:	fcmovu st,st(3)
  4253dc:	(bad)  
  4253de:	(bad)  
  4253e0:	loopne 0x4253c3
  4253e2:	loop   0x4253c7
  4253e4:	in     al,0xe5
  4253e6:	out    0xe7,al
  4253e8:	call   0xffffffffed2e3ed6
  4253ed:	in     eax,dx
  4253ee:	out    dx,al
  4253ef:	out    dx,eax
  4253f0:	lock icebp 
  4253f2:	repnz repz hlt 
  4253f5:	cmc    
  4253f6:	div    bh
  4253f8:	clc    
  4253f9:	stc    
  4253fa:	cli    
  4253fb:	sti    
  4253fc:	cld    
  4253fd:	std    
  4253fe:	(bad)  
  4253ff:	inc    DWORD PTR [rcx]
  425401:	nop
  425402:	add    al,BYTE PTR [rax]
	...
  425410:	xchg   edi,eax
  425411:	add    al,BYTE PTR [rax]
	...
  42542f:	add    BYTE PTR [rsi+rdx*4],ah
  425432:	rex.X add BYTE PTR [rax],al
	...
  42543d:	add    BYTE PTR [rax],al
  42543f:	add    BYTE PTR [rax+0x4291],al
  425445:	add    BYTE PTR [rax],al
  425447:	add    BYTE PTR [rbp+0x4292],bl
  42544d:	add    BYTE PTR [rax],al
  42544f:	add    BYTE PTR [rbx-0x68],bl
  425452:	rex.X add BYTE PTR [rax],al
	...
  42545d:	add    BYTE PTR [rax],al
  42545f:	add    BYTE PTR [rax],dh
  425461:	xchg   esi,eax
  425462:	rex.X add BYTE PTR [rax],al
  425465:	add    BYTE PTR [rax],al
  425467:	add    ch,cl
  425469:	xchg   esi,eax
  42546a:	rex.X add BYTE PTR [rax],al
  42546d:	add    BYTE PTR [rax],al
  42546f:	add    BYTE PTR [rsi-0x69],bh
  425472:	rex.X add BYTE PTR [rax],al
  425475:	add    BYTE PTR [rax],al
  425477:	add    BYTE PTR [rax],al
  425479:	push   rbp
  42547a:	rex.X add BYTE PTR [rax],al
  42547d:	add    BYTE PTR [rax],al
  42547f:	add    BYTE PTR [rcx+0x4296],ch
	...
  425495:	add    BYTE PTR [rax],al
  425497:	add    BYTE PTR [rax+0x4137],dl
	...
  4254a5:	add    BYTE PTR [rax],al
  4254a7:	add    BYTE PTR [rax+rax*1],al
  4254aa:	add    BYTE PTR [rax-0x7fff8000],al
  4254b0:	add    eax,0x2000000
	...
  4254d5:	add    BYTE PTR [rax],al
  4254d7:	add    BYTE PTR [rsi-0x75],al
  4254da:	rex.X add BYTE PTR [rax],al
	...
  425501:	add    BYTE PTR [rdi+0x0],ch
  425504:	add    BYTE PTR [rax],al
  425506:	outs   dx,DWORD PTR ds:[rsi]
  425507:	add    BYTE PTR [rax],al
  425509:	add    BYTE PTR [rax],0x0
  42550c:	add    DWORD PTR [rax],eax
  42550e:	add    BYTE PTR [rax],al
  425510:	and    BYTE PTR [rax],dl
	...
  42553e:	add    BYTE PTR [rax],al
  425540:	cmp    eax,0x4295
  425545:	add    BYTE PTR [rax],al
  425547:	add    BYTE PTR [rax-0x6b],dl
  42554a:	rex.X add BYTE PTR [rax],al
  42554d:	add    BYTE PTR [rax],al
  42554f:	add    BYTE PTR [rdi-0x6b],dl
  425552:	rex.X add BYTE PTR [rax],al
	...
  425565:	add    BYTE PTR [rax],al
  425567:	add    BYTE PTR [rcx],al
  425569:	add    BYTE PTR [rbx+0x0],dh
  42556c:	add    DWORD PTR [rax],eax
  42556e:	jae    0x425570
  425570:	add    BYTE PTR [rax+0x10000],al
  425576:	add    BYTE PTR [rax],al
  425578:	add    BYTE PTR [rax],bl
	...
  4255a6:	add    BYTE PTR [rax],al
  4255a8:	pop    rsi
  4255a9:	xchg   ebp,eax
  4255aa:	rex.X add BYTE PTR [rax],al
  4255ad:	add    BYTE PTR [rax],al
  4255af:	add    BYTE PTR [rsi-0x6b],bh
  4255b2:	rex.X add BYTE PTR [rax],al
  4255b5:	add    BYTE PTR [rax],al
  4255b7:	add    BYTE PTR [rdi+0x4295],al
  4255bd:	add    BYTE PTR [rax],al
  4255bf:	add    BYTE PTR [rbp+rdx*4+0x42],al
  4255c6:	add    BYTE PTR [rax],al
  4255c8:	lea    edx,[rbp+0x42]
  4255ce:	add    BYTE PTR [rax],al
  4255d0:	add    al,BYTE PTR [rax]
  4255d2:	jbe    0x4255d4
  4255d4:	add    BYTE PTR [rax-0x7fffff8a],al
  4255da:	add    BYTE PTR [rax],al
  4255dc:	add    DWORD PTR [rax],eax
  4255de:	add    BYTE PTR [rax],al
  4255e0:	add    BYTE PTR [rcx],dl
  4255e2:	add    eax,DWORD PTR [rax]
  4255e4:	add    al,BYTE PTR [rax]
	...
  425606:	add    BYTE PTR [rax],al
  425608:	adc    BYTE PTR [rsi],cl
  42560a:	add    BYTE PTR [r8],al
  42560d:	add    BYTE PTR [rax],al
  42560f:	add    al,bh
  425611:	xchg   ebp,eax
  425612:	rex.X add BYTE PTR [rax],al
	...
  42561d:	add    BYTE PTR [rax],al
  42561f:	add    BYTE PTR [rsi+rdx*4],bl
  425622:	rex.X add BYTE PTR [rax],al
	...
  425635:	add    BYTE PTR [rax],al
  425637:	add    BYTE PTR [rbx],al
  425639:	add    BYTE PTR [rdi],bh
  42563b:	add    BYTE PTR [rax],al
  42563d:	cmp    BYTE PTR [rdi],0x0
  425640:	add    BYTE PTR [rax+0x10000],al
  425646:	add    BYTE PTR [rax],al
  425648:	add    BYTE PTR [rcx],al
  42564a:	add    al,BYTE PTR [rax]
  42564c:	add    eax,DWORD PTR [rax]
	...
  42566e:	add    BYTE PTR [rax],al
  425670:	movabs al,ds:0x9000000000004137
  425679:	xchg   ebp,eax
  42567a:	rex.X add BYTE PTR [rax],al
	...
  425685:	add    BYTE PTR [rax],al
  425687:	add    BYTE PTR [rbp+rdx*4+0x42],bh
	...
  42569e:	add    BYTE PTR [rax],al
  4256a0:	add    al,0x0
  4256a2:	and    DWORD PTR [rax],eax
  4256a4:	add    BYTE PTR [rax-0x7fffffdf],al
  4256aa:	add    BYTE PTR [rax],al
  4256ac:	add    DWORD PTR [rax],eax
  4256ae:	add    BYTE PTR [rax],al
  4256b0:	add    BYTE PTR [rcx],al
  4256b2:	or     BYTE PTR [rax],al
  4256b4:	add    al,0x0
	...
  4256d6:	add    BYTE PTR [rax],al
  4256d8:	rex jle 0x42571b
  4256db:	add    BYTE PTR [rax],al
  4256dd:	add    BYTE PTR [rax],al
  4256df:	add    BYTE PTR [rax+0x4295],dl
	...
  4256ed:	add    BYTE PTR [rax],al
  4256ef:	add    BYTE PTR [rbp+rdx*4+0x42],bh
	...
  425706:	add    BYTE PTR [rax],al
  425708:	(bad)  
  425709:	mov    ch,0x42
  42570b:	add    BYTE PTR [rax],al
  42570d:	add    BYTE PTR [rax],al
  42570f:	add    BYTE PTR [rcx],al
	...
  42573d:	add    BYTE PTR [rax],al
  42573f:	add    BYTE PTR [rax+rax*1+0x0],ch
  425743:	add    BYTE PTR [rax],al
  425745:	add    BYTE PTR [rax],al
  425747:	add    BYTE PTR [rdi+0x425a],dh
  42574d:	add    BYTE PTR [rax],al
  42574f:	add    BYTE PTR [rdx+0x425a],dh
  425755:	add    BYTE PTR [rax],al
  425757:	add    BYTE PTR [rbp+0x425a],ch
  42575d:	add    BYTE PTR [rax],al
  42575f:	add    BYTE PTR [rax+0x425a],ch
  425765:	add    BYTE PTR [rax],al
  425767:	add    BYTE PTR [rax-0x4b],al
  42576a:	rex.X add BYTE PTR [rax],al
  42576d:	add    BYTE PTR [rax],al
  42576f:	add    BYTE PTR [rdi-0x4b],bl
  425772:	rex.X add BYTE PTR [rax],al
  425775:	add    BYTE PTR [rax],al
  425777:	add    BYTE PTR [rbx+0x42b5],dl
  42577d:	add    BYTE PTR [rax],al
  42577f:	add    cl,al
  425781:	mov    ch,0x42
  425783:	add    BYTE PTR [rax],al
  425785:	add    BYTE PTR [rax],al
  425787:	add    BYTE PTR [rsi+rsi*4],ah
  42578a:	rex.X add BYTE PTR [rax],al
  42578d:	add    BYTE PTR [rax],al
  42578f:	add    BYTE PTR [rax-0x4a],cl
  425792:	rex.X add BYTE PTR [rax],al
  425795:	add    BYTE PTR [rax],al
  425797:	add    BYTE PTR [rdx-0x4a],bh
  42579a:	rex.X add BYTE PTR [rax],al
  42579d:	add    BYTE PTR [rax],al
  42579f:	add    ch,dl
  4257a1:	mov    dh,0x42
  4257a3:	add    BYTE PTR [rax],al
  4257a5:	add    BYTE PTR [rax],al
  4257a7:	add    bl,ch
  4257a9:	mov    dh,0x42
  4257ab:	add    BYTE PTR [rax],al
  4257ad:	add    BYTE PTR [rax],al
  4257af:	add    BYTE PTR [rdi+rsi*4],ah
  4257b2:	rex.X add BYTE PTR [rax],al
  4257b5:	add    BYTE PTR [rax],al
  4257b7:	add    BYTE PTR [rdi-0x49],al
  4257ba:	rex.X add BYTE PTR [rax],al
  4257bd:	add    BYTE PTR [rax],al
  4257bf:	add    BYTE PTR [rdi+rsi*4+0x42],dh
  4257c3:	add    BYTE PTR [rax],al
  4257c5:	add    BYTE PTR [rax],al
  4257c7:	add    BYTE PTR [rdi+rsi*4+0x42],dl
  4257ce:	add    BYTE PTR [rax],al
  4257d0:	mov    edx,0x42b7
  4257d5:	add    BYTE PTR [rax],al
  4257d7:	add    bl,bl
  4257d9:	mov    bh,0x42
  4257db:	add    BYTE PTR [rax],al
  4257dd:	add    BYTE PTR [rax],al
  4257df:	add    BYTE PTR [rax+rdi*4],cl
  4257e2:	rex.X add BYTE PTR [rax],al
  4257e5:	add    BYTE PTR [rax],al
  4257e7:	add    BYTE PTR [rax+rdi*4],ch
  4257ea:	rex.X add BYTE PTR [rax],al
  4257ed:	add    BYTE PTR [rax],al
  4257ef:	add    BYTE PTR [rax-0x48],ah
  4257f2:	rex.X add BYTE PTR [rax],al
  4257f5:	add    BYTE PTR [rax],al
  4257f7:	add    BYTE PTR [rbp+0x42b8],al
  4257fd:	add    BYTE PTR [rax],al
  4257ff:	add    BYTE PTR [rsi+0x42b8],bl
  425805:	add    BYTE PTR [rax],al
  425807:	add    ah,al
  425809:	mov    eax,0x42
  42580e:	add    BYTE PTR [rax],al
  425810:	(bad)  
  425811:	mov    eax,0x42
  425816:	add    BYTE PTR [rax],al
  425818:	fs mov ecx,0x42
  42581e:	add    BYTE PTR [rax],al
  425820:	xchg   ebx,eax
  425821:	mov    ecx,0x42
  425826:	add    BYTE PTR [rax],al
  425828:	mov    edx,0x42b9
  42582d:	add    BYTE PTR [rax],al
  42582f:	add    bh,al
  425831:	mov    ecx,0x42
  425836:	add    BYTE PTR [rax],al
  425838:	loope  0x4257f3
  42583a:	rex.X add BYTE PTR [rax],al
  42583d:	add    BYTE PTR [rax],al
  42583f:	add    bl,bh
  425841:	mov    ecx,0x42
  425846:	add    BYTE PTR [rax],al
  425848:	es mov edx,0x42
  42584e:	add    BYTE PTR [rax],al
  425850:	rex.WX movabs rdx,0xba77000000000042
  42585a:	rex.X add BYTE PTR [rax],al
  42585d:	add    BYTE PTR [rax],al
  42585f:	add    BYTE PTR [rdx+rdi*4+0x42],dl
  425866:	add    BYTE PTR [rax],al
  425868:	mov    edi,0x42ba
  42586d:	add    BYTE PTR [rax],al
  42586f:	add    BYTE PTR [rdx],dl
  425871:	mov    ebx,0x42
  425876:	add    BYTE PTR [rax],al
  425878:	cmp    BYTE PTR [rbx+0x42],bh
  42587e:	add    BYTE PTR [rax],al
  425880:	mov    bx,0x42
  425884:	add    BYTE PTR [rax],al
  425886:	add    BYTE PTR [rax],al
  425888:	xchg   ebx,eax
  425889:	mov    ebx,0x42
  42588e:	add    BYTE PTR [rax],al
  425890:	scas   al,BYTE PTR es:[rdi]
  425891:	mov    ebx,0x42
  425896:	add    BYTE PTR [rax],al
  425898:	fistp  QWORD PTR [rbx+0x42]
  42589e:	add    BYTE PTR [rax],al
  4258a0:	adc    BYTE PTR [rdx+rax*2+0x0],bh
  4258a7:	add    BYTE PTR [rbx],ch
  4258a9:	mov    esp,0x42
  4258ae:	add    BYTE PTR [rax],al
  4258b0:	rex.WR movabs rsp,0xbc70000000000042
  4258ba:	rex.X add BYTE PTR [rax],al
  4258bd:	add    BYTE PTR [rax],al
  4258bf:	add    BYTE PTR [rdx+0x42bc],ah
  4258c5:	add    BYTE PTR [rax],al
  4258c7:	add    BYTE PTR [rsp+rdi*4+0x42],dh
  4258ce:	add    BYTE PTR [rax],al
  4258d0:	(bad)  
  4258d1:	mov    esp,0x42
  4258d6:	add    BYTE PTR [rax],al
  4258d8:	sbb    bh,BYTE PTR [rbp+0x42]
  4258de:	add    BYTE PTR [rax],al
  4258e0:	movabs r13,0xbd71000000000042
  4258ea:	rex.X add BYTE PTR [rax],al
  4258ed:	add    BYTE PTR [rax],al
  4258ef:	add    BYTE PTR [rbp+rdi*4+0x42],dl
  4258f6:	add    BYTE PTR [rax],al
  4258f8:	lods   eax,DWORD PTR ds:[rsi]
  4258f9:	mov    ebp,0x42
  4258fe:	add    BYTE PTR [rax],al
  425900:	mov    ebp,0x42bd
  425905:	add    BYTE PTR [rax],al
  425907:	add    ah,cl
  425909:	mov    ebp,0x42
  42590e:	add    BYTE PTR [rax],al
  425910:	sar    BYTE PTR [rbp+0x42],cl
  425916:	add    BYTE PTR [rax],al
  425918:	add    edi,DWORD PTR [rsi+0x42]
  42591e:	add    BYTE PTR [rax],al
  425920:	xor    BYTE PTR [rsi+0x42],bh
  425926:	add    BYTE PTR [rax],al
  425928:	push   0x42be
  42592d:	add    BYTE PTR [rax],al
  42592f:	add    BYTE PTR [rbp+0x42be],al
  425935:	add    BYTE PTR [rax],al
  425937:	add    BYTE PTR [rdi+0x42be],ch
  42593d:	add    BYTE PTR [rax],al
  42593f:	add    cl,bl
  425941:	mov    esi,0x42
  425946:	add    BYTE PTR [rax],al
  425948:	repz mov esi,0x42
  42594e:	add    BYTE PTR [rax],al
  425950:	add    bh,BYTE PTR [rdi+0x42]
  425956:	add    BYTE PTR [rax],al
  425958:	and    BYTE PTR [rdi+0x42],bh
  42595e:	add    BYTE PTR [rax],al
  425960:	cmp    bh,BYTE PTR [rdi+0x42]
  425966:	add    BYTE PTR [rax],al
  425968:	rex.WXB movabs r15,0xbf7a000000000042
  425972:	rex.X add BYTE PTR [rax],al
  425975:	add    BYTE PTR [rax],al
  425977:	add    BYTE PTR [rcx+0x42bf],bl
  42597d:	add    BYTE PTR [rax],al
  42597f:	add    BYTE PTR [rdi+rdi*4+0x42],dh
  425986:	add    BYTE PTR [rax],al
  425988:	sbb    eax,eax
  42598a:	rex.X add BYTE PTR [rax],al
  42598d:	add    BYTE PTR [rax],al
  42598f:	add    BYTE PTR [rbp+0x42c0],al
  425995:	add    BYTE PTR [rax],al
  425997:	add    BYTE PTR [rbp+0x42c0],bh
  42599d:	add    BYTE PTR [rax],al
  42599f:	add    bh,bl
  4259a1:	rol    BYTE PTR [rdx+0x0],0x0
  4259a5:	add    BYTE PTR [rax],al
  4259a7:	add    BYTE PTR [rdx],cl
  4259a9:	rol    DWORD PTR [rdx+0x0],0x0
  4259ad:	add    BYTE PTR [rax],al
  4259af:	add    BYTE PTR [rbp-0x3f],cl
  4259b2:	rex.X add BYTE PTR [rax],al
  4259b5:	add    BYTE PTR [rax],al
  4259b7:	add    BYTE PTR [rsi-0x3f],ch
  4259ba:	rex.X add BYTE PTR [rax],al
  4259bd:	add    BYTE PTR [rax],al
  4259bf:	add    BYTE PTR [rdi+0x42c1],al
  4259c5:	add    BYTE PTR [rax],al
  4259c7:	add    BYTE PTR [rdx+0x42c1],ch
  4259cd:	add    BYTE PTR [rax],al
  4259cf:	add    al,dl
  4259d1:	rol    DWORD PTR [rdx+0x0],0x0
  4259d5:	add    BYTE PTR [rax],al
  4259d7:	add    al,bl
  4259d9:	rol    DWORD PTR [rdx+0x0],0x0
  4259dd:	add    BYTE PTR [rax],al
  4259df:	add    BYTE PTR [rax],cl
  4259e1:	ret    0x42
  4259e4:	add    BYTE PTR [rax],al
  4259e6:	add    BYTE PTR [rax],al
  4259e8:	sub    al,dl
  4259ea:	rex.X add BYTE PTR [rax],al
  4259ed:	add    BYTE PTR [rax],al
  4259ef:	add    BYTE PTR [rip+0x42c2],bh        # 0x429cb7
  4259f5:	add    BYTE PTR [rax],al
  4259f7:	add    BYTE PTR [rcx-0x3e],ah
  4259fa:	rex.X add BYTE PTR [rax],al
  4259fd:	add    BYTE PTR [rax],al
  4259ff:	add    BYTE PTR [rbp+0x42c2],al
  425a05:	add    BYTE PTR [rax],al
  425a07:	add    BYTE PTR [rbp+0x42c2],bh
  425a0d:	add    BYTE PTR [rax],al
  425a0f:	add    bh,dl
  425a11:	ret    0x42
  425a14:	add    BYTE PTR [rax],al
  425a16:	add    BYTE PTR [rax],al
  425a18:	bnd ret 0x42
  425a1c:	add    BYTE PTR [rax],al
  425a1e:	add    BYTE PTR [rax],al
  425a20:	inc    edx
  425a22:	rex.X add BYTE PTR [rax],al
  425a25:	add    BYTE PTR [rax],al
  425a27:	add    BYTE PTR [rsi],bl
  425a29:	ret    
  425a2a:	rex.X add BYTE PTR [rax],al
  425a2d:	add    BYTE PTR [rax],al
  425a2f:	add    BYTE PTR [rbx+rax*8],ch
  425a32:	rex.X add BYTE PTR [rax],al
  425a35:	add    BYTE PTR [rax],al
  425a37:	add    BYTE PTR [rcx-0x3d],dl
  425a3a:	rex.X add BYTE PTR [rax],al
  425a3d:	add    BYTE PTR [rax],al
  425a3f:	add    BYTE PTR [rbp-0x3d],ch
  425a42:	rex.X add BYTE PTR [rax],al
  425a45:	add    BYTE PTR [rax],al
  425a47:	add    BYTE PTR [rbx-0x3d],dh
  425a4a:	rex.X add BYTE PTR [rax],al
  425a4d:	add    BYTE PTR [rax],al
  425a4f:	add    BYTE PTR [rcx+0x42c3],ah
  425a55:	add    BYTE PTR [rax],al
  425a57:	add    BYTE PTR [rbp+0x42c3],bh
  425a5d:	add    BYTE PTR [rax],al
  425a5f:	add    bh,bh
  425a61:	ret    
  425a62:	rex.X add BYTE PTR [rax],al
  425a65:	add    BYTE PTR [rax],al
  425a67:	add    BYTE PTR [rcx],bl
  425a69:	(bad)
  425a6d:	add    BYTE PTR [rax],al
  425a6f:	add    BYTE PTR [rdx],dh
  425a71:	(bad)
  425a75:	add    BYTE PTR [rax],al
  425a77:	add    BYTE PTR [rdx-0x3c],bl
  425a7a:	rex.X add BYTE PTR [rax],al
  425a7d:	add    BYTE PTR [rax],al
  425a7f:	add    BYTE PTR [rbp+0x42c4],al
  425a85:	add    BYTE PTR [rax],al
  425a87:	add    BYTE PTR [rax-0x3b],ah
  425a8a:	rex.X add BYTE PTR [rax],al
  425a8d:	add    BYTE PTR [rax],al
  425a8f:	add    BYTE PTR [rcx+0x42c5],al
  425a95:	add    BYTE PTR [rax],al
  425a97:	add    BYTE PTR [rsi+0x42c5],ah
  425a9d:	add    BYTE PTR [rax],al
  425a9f:	add    bh,bl
  425aa1:	(bad)
  425aa4:	add    BYTE PTR [rax],al
  425aa6:	add    BYTE PTR [rax],al
  425aa8:	cmp    eax,0x727473
  425aad:	cmp    eax,0x6d756e
  425ab2:	cmp    eax,0x64574b
  425ab7:	cmp    eax,0x462f54
  425abc:	add    BYTE PTR [rax],al
  425abe:	add    BYTE PTR [rax],al
  425ac0:	rcr    BYTE PTR [rdx+0x42],0x0
  425ac4:	add    BYTE PTR [rax],al
  425ac6:	add    BYTE PTR [rax],al
  425ac8:	rcr    BYTE PTR [rdx+0x42],0x0
	...
  425ae0:	cwde   
  425ae1:	cmp    DWORD PTR [rdx+0x0],eax
	...
  425af0:	(bad)  
  425af1:	(bad)  
  425af2:	(bad)  
  425af3:	(bad)  
  425af4:	(bad)  
  425af5:	(bad)  
  425af6:	(bad)  
  425af7:	inc    DWORD PTR [rax]
  425af9:	add    BYTE PTR [rax],al
  425afb:	add    BYTE PTR [rax],al
  425afd:	add    BYTE PTR [rax],al
  425aff:	add    bh,bh
	...
  425b0d:	add    BYTE PTR [rax],al
  425b0f:	add    BYTE PTR [rdx],al
	...
  425b1d:	add    BYTE PTR [rax],al
  425b1f:	add    bh,bh
  425b21:	(bad)  
  425b22:	(bad)  
  425b23:	inc    DWORD PTR [rax]
	...
  425b2d:	add    BYTE PTR [rax],al
  425b2f:	add    BYTE PTR [rax+0x0],al
  425b32:	add    BYTE PTR [rax],al
  425b34:	ret    
  425b35:	mov    edi,0x3fc0ffff
  425b3a:	add    BYTE PTR [rax],al
  425b3c:	add    DWORD PTR [rax],eax
  425b3e:	add    BYTE PTR [rax],al
  425b40:	add    BYTE PTR [rax],al
  425b42:	add    BYTE PTR [rax],al
  425b44:	(bad)  
	...
  425b4d:	add    BYTE PTR [rax],al
  425b4f:	add    al,al
  425b51:	push   rax
  425b52:	rex.XB add BYTE PTR [r8],al
	...
  425b5d:	add    BYTE PTR [rax],al
  425b5f:	add    al,al
  425b61:	sub    DWORD PTR [rdx+0x0],eax
  425b64:	add    BYTE PTR [rax],al
  425b66:	add    BYTE PTR [rax],al
  425b68:	shr    BYTE PTR [rcx],1
  425b6a:	rex.X add BYTE PTR [rax],al
  425b6d:	add    BYTE PTR [rax],al
  425b6f:	add    BYTE PTR [rax+0x2a],dl
  425b72:	rex.X add BYTE PTR [rax],al
  425b75:	add    BYTE PTR [rax],al
  425b77:	add    BYTE PTR [rax],al
  425b79:	sub    al,BYTE PTR [rdx+0x0]
  425b7c:	add    BYTE PTR [rax],al
  425b7e:	add    BYTE PTR [rax],al
  425b80:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  425b8e:	add    BYTE PTR [rax],al
  425b90:	int    0x5d
  425b92:	and    dl,dl
  425b94:	data16 (bad) 
  425b96:	(bad)  
  425b97:	inc    DWORD PTR [rax]
  425b99:	add    BYTE PTR [rax],al
  425b9b:	add    BYTE PTR [rax],al
  425b9d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000426000 <.rdata>:
  426000:	sub    eax,0x65655020
  426005:	jb     0x42602e
  426007:	jae    0x426029
  426009:	movsxd esp,DWORD PTR [rbp+0x72]
  42600c:	je     0x426077
  42600e:	imul   sp,WORD PTR [rbx+0x61],0x6574
  426014:	and    BYTE PTR [rdi+0x61],dh
  426017:	jae    0x426039
  426019:	rex.WRX
  42601a:	rex.WRXB push r12
  42601c:	and    BYTE PTR [rsi+0x65],dh
  42601f:	jb     0x42608a
  426021:	imul   sp,WORD PTR [rbp+0x64],0xa2e
  426027:	add    BYTE PTR [rsp+rdi*1+0x25],bh
  42602b:	jo     0x42606b
  42602d:	jl     0x42604f
  42602f:	and    eax,0x3c7c0073
  426034:	and    eax,0x207c3e64
  426039:	and    eax,0x73
  42603e:	add    BYTE PTR [rax],al
  426040:	sub    ah,BYTE PTR [rax]
  426042:	push   rdx
  426043:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  426047:	jbe    0x4260ae
  426049:	and    BYTE PTR fs:[rsi+0x4f],cl
  42604d:	pop    rdi
  42604e:	push   rdx
  42604f:	rex.RB
  426050:	rex.WRX
  426051:	rex.RB
  426052:	rex.RXB
  426053:	rex.WRXB push r12
  426055:	rex.WB
  426056:	push   r12
  426058:	rex.WB
  426059:	rex.WRXB
  42605a:	rex.WRX and BYTE PTR [rcx+0x6c],r12b
  42605e:	gs jb  0x4260d5
  426061:	and    BYTE PTR cs:[rbx+0x6c],al
  426065:	imul   esp,DWORD PTR [rbp+0x6e],0x6f642074
  42606c:	gs jae 0x42608f
  42606f:	outs   dx,BYTE PTR ds:[rsi]
  426070:	outs   dx,DWORD PTR ds:[rsi]
  426071:	je     0x426093
  426073:	jae    0x4260ea
  426075:	jo     0x4260e7
  426077:	outs   dx,DWORD PTR ds:[rsi]
  426078:	jb     0x4260ee
  42607a:	and    BYTE PTR [rdx+0x65],dh
  42607d:	outs   dx,BYTE PTR ds:[rsi]
  42607e:	outs   dx,DWORD PTR gs:[esi]
  426081:	je     0x4260ec
  426083:	(bad)  
  426084:	je     0x4260ef
  426086:	outs   dx,DWORD PTR ds:[rsi]
  426087:	outs   dx,BYTE PTR ds:[rsi]
  426088:	or     al,BYTE PTR cs:[rax]
  42608b:	sub    ah,BYTE PTR [rax]
  42608d:	push   rdx
  42608e:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  426092:	jbe    0x4260f9
  426094:	and    BYTE PTR fs:[rcx+0x6c],ah
  426098:	gs jb  0x42610f
  42609b:	and    BYTE PTR [rdi],ah
  42609d:	and    eax,0x203a2764
  4260a2:	and    eax,0xa2e73
  4260a7:	rex.RB jb 0x42611c
  4260aa:	outs   dx,DWORD PTR ds:[rsi]
  4260ab:	jb     0x4260e7
  4260ad:	and    BYTE PTR [rip+0xa73],ah        # 0x426b26
  4260b3:	add    BYTE PTR [rax],al
  4260b5:	add    BYTE PTR [rax],al
  4260b7:	add    BYTE PTR [rdx],ch
  4260b9:	sub    ch,BYTE PTR [rdx]
  4260bb:	and    BYTE PTR [rax+rbp*2+0x69],dl
  4260bf:	jae    0x4260e1
  4260c1:	imul   esi,DWORD PTR [rbx+0x20],0x65722061
  4260c8:	jae    0x42613f
  4260ca:	ins    DWORD PTR es:[rdi],dx
  4260cb:	gs and BYTE PTR fs:[rbx+0x65],dh
  4260d0:	jae    0x426145
  4260d2:	imul   ebp,DWORD PTR [rdi+0x6e],0x7245000a
  4260d9:	jb     0x42614a
  4260db:	jb     0x4260fd
  4260dd:	imul   ebp,DWORD PTR [rsi+0x20],0x646e6168
  4260e4:	jae    0x42614e
  4260e6:	(bad)  
  4260e7:	imul   esp,DWORD PTR [rbp+0xa],0x0
  4260eb:	rex.WRX
  4260ec:	rex.WRXB push r10
  4260ee:	rex.WRB
  4260ef:	rex.B
  4260f0:	rex.WR add BYTE PTR [rbx+0x79],r10b
  4260f4:	outs   dx,BYTE PTR ds:[rsi]
  4260f5:	je     0x426158
  4260f7:	js     0x426119
  4260f9:	gs jb  0x42616e
  4260fc:	outs   dx,DWORD PTR ds:[rsi]
  4260fd:	jb     0x42611f
  4260ff:	(bad)  
  426100:	je     0x42613c
  426102:	and    BYTE PTR [rip+0x45000a73],ah        # 0x45426b7b
  426108:	jb     0x42617c
  42610a:	outs   dx,DWORD PTR ds:[rsi]
  42610b:	jb     0x42612d
  42610d:	imul   ebp,DWORD PTR [rsi+0x20],0x666f7270
  426114:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x7325203a
  42611c:	or     al,BYTE PTR [rax]
  42611e:	rex.R push rsp
  426120:	rex.WR push rbx
  426122:	and    BYTE PTR [rax+0x72],dh
  426125:	outs   dx,DWORD PTR ds:[rsi]
  426126:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6573
  42612d:	je     0x42614f
  42612f:	je     0x4261a0
  426131:	and    BYTE PTR [rip+0x49000a73],ah        # 0x49426baa
  426137:	push   rax
  426138:	jbe    0x426170
  42613a:	and    BYTE PTR [rax],al
  42613c:	rex.WB push r8
  42613e:	jbe    0x426174
  426140:	and    BYTE PTR [rax],al
  426142:	and    BYTE PTR [rbp+0x6e],dh
  426145:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  426149:	outs   dx,BYTE PTR ds:[rsi]
  42614a:	add    BYTE PTR [rip+0x65730073],ah        # 0x65b561c3
  426150:	ins    BYTE PTR es:[rdi],dx
  426151:	movsxd esi,DWORD PTR gs:[rax+rbp*1+0x29]
  426156:	add    BYTE PTR [rip+0x65670064],ah        # 0x65a961c0
  42615c:	je     0x4261bf
  42615e:	fs fs jb 0x4261cb
  426162:	outs   dx,BYTE PTR ds:[rsi]
  426163:	outs   dx,WORD PTR ds:[rsi]
  426165:	sub    BYTE PTR [rcx],ch
  426167:	and    BYTE PTR [rsi+0x61],ah
  42616a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  426172:	or     al,BYTE PTR [rax]
  426174:	and    eax,0x696c2073
  426179:	jae    0x4261ef
  42617b:	outs   dx,BYTE PTR gs:[rsi]
  42617d:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
  426184:	and    eax,0x2e2e2e73
  426189:	add    BYTE PTR [rbx+0x6f],dh
  42618c:	movsxd ebp,DWORD PTR [rbx+0x65]
  42618f:	je     0x4261b9
  426191:	sub    DWORD PTR [rax],esp
  426193:	data16 (bad) 
  426195:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74657300
  42619d:	jae    0x42620e
  42619f:	movsxd ebp,DWORD PTR [rbx+0x6f]
  4261a2:	jo     0x426218
  4261a4:	sub    BYTE PTR [rcx],ch
  4261a6:	and    BYTE PTR [rsi+0x61],ah
  4261a9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6e696200
  4261b1:	sub    BYTE PTR fs:[rcx],ch
  4261b4:	and    BYTE PTR [rsi+0x61],ah
  4261b7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x73696c00
  4261bf:	je     0x426226
  4261c1:	outs   dx,BYTE PTR ds:[rsi]
  4261c2:	sub    BYTE PTR [rcx],ch
  4261c4:	and    BYTE PTR [rsi+0x61],ah
  4261c7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6e6f6400
  4261cf:	or     al,BYTE PTR gs:[rax]
  4261d2:	add    BYTE PTR [rax],al
  4261d4:	add    BYTE PTR [rax],al
  4261d6:	add    BYTE PTR [rax],al
  4261d8:	push   rbx
  4261d9:	movsxd ebp,DWORD PTR [rax+0x65]
  4261dc:	fs jne 0x42624b
  4261df:	imul   ebp,DWORD PTR [rsi+0x67],0x616e6920
  4261e6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
  4261ea:	and    BYTE PTR gs:[rbx+0x6f],ah
  4261ee:	outs   dx,BYTE PTR ds:[rsi]
  4261ef:	outs   dx,BYTE PTR ds:[rsi]
  4261f0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4261f5:	outs   dx,BYTE PTR ds:[rsi]
  4261f6:	and    BYTE PTR [rsi+0x6f],ah
  4261f9:	jb     0x42621b
  4261fb:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4261ff:	or     al,BYTE PTR gs:[rax]
  426202:	(bad)  
  426203:	movsxd esp,DWORD PTR [rbx+0x65]
  426206:	jo     0x42627c
  426208:	sub    BYTE PTR [rcx],ch
  42620a:	add    BYTE PTR [rax],al
  42620c:	add    BYTE PTR [rax],al
  42620e:	add    BYTE PTR [rax],al
  426210:	or     ch,BYTE PTR [rdx]
  426212:	and    BYTE PTR [rcx+0x63],al
  426215:	movsxd esp,DWORD PTR [rbp+0x70]
  426218:	je     0x42627f
  42621a:	and    BYTE PTR fs:[rbx+0x6f],ah
  42621e:	outs   dx,BYTE PTR ds:[rsi]
  42621f:	outs   dx,BYTE PTR ds:[rsi]
  426220:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  426225:	outs   dx,BYTE PTR ds:[rsi]
  426226:	and    BYTE PTR [rsi+0x72],ah
  426229:	outs   dx,DWORD PTR ds:[rsi]
  42622a:	ins    DWORD PTR es:[rdi],dx
  42622b:	and    BYTE PTR [rip+0x6e6f2073],ah        # 0x6eb182a4
  426231:	and    BYTE PTR [rip+0x2a000a73],ah        # 0x2a426caa
  426237:	sub    ch,BYTE PTR [rdx]
  426239:	and    BYTE PTR [rdx+0x65],dl
  42623c:	movsxd esp,DWORD PTR [rbp+0x69]
  42623f:	jbe    0x4262a6
  426241:	and    BYTE PTR fs:[rax+0x65],ch
  426245:	ins    BYTE PTR es:[rdi],dx
  426246:	ins    BYTE PTR es:[rdi],dx
  426247:	outs   dx,DWORD PTR ds:[rsi]
  426248:	and    BYTE PTR [rbp+0x65],ch
  42624b:	jae    0x4262c0
  42624d:	(bad)  
  42624e:	or     al,BYTE PTR gs:[eax]
  426252:	rex.RB jb 0x4262c7
  426255:	outs   dx,DWORD PTR ds:[rsi]
  426256:	jb     0x426278
  426258:	ja     0x4262c2
  42625a:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x65636572
  426262:	imul   esi,DWORD PTR [rsi+0x69],0x6420676e
  426269:	(bad)  
  42626a:	je     0x4262cd
  42626c:	or     al,BYTE PTR [rax]
  42626e:	rex.RXB
  42626f:	rex.RB push r12
  426271:	and    BYTE PTR [rax],al
  426273:	add    BYTE PTR [rax],al
  426275:	add    BYTE PTR [rax],al
  426277:	add    BYTE PTR [rax+0x54],cl
  42627a:	push   rsp
  42627b:	push   rax
  42627c:	(bad)  
  42627d:	xor    DWORD PTR [rsi],ebp
  42627f:	xor    BYTE PTR [rax],ah
  426281:	xor    dh,BYTE PTR [rax]
  426283:	xor    BYTE PTR [rax],ah
  426285:	rex.WRXB
  426286:	rex.WXB or rax,0x6e6f430a
  42628c:	je     0x4262f3
  42628e:	outs   dx,BYTE PTR ds:[rsi]
  42628f:	je     0x4262be
  426291:	je     0x42630c
  426293:	jo     0x4262fa
  426295:	cmp    ah,BYTE PTR [rax]
  426297:	je     0x4262fe
  426299:	js     0x42630f
  42629b:	(bad)  
  42629c:	push   0xd6c6d74
  4262a1:	or     cl,BYTE PTR [rip+0x483c0a0a]        # 0x487e6cb1
  4262a7:	push   rsp
  4262a8:	rex.WRB
  4262a9:	rex.WR
  4262aa:	ds cmp al,0x42
  4262ad:	rex.WRXB
  4262ae:	rex.R pop rcx
  4262b0:	or     bh,BYTE PTR ds:[rbx+rax*2]
  4262b4:	rex.RB
  4262b5:	rex.WRX push rsp
  4262b7:	rex.RB push r10
  4262b9:	ds cmp al,0x48
  4262bc:	xor    DWORD PTR [rsi],edi
  4262be:	push   rsp
  4262bf:	push   0x69207369
  4262c4:	jae    0x4262e6
  4262c6:	cmp    al,0x61
  4262c8:	and    BYTE PTR [rax+0x72],ch
  4262cb:	gs cmp ax,0x6822
  4262d0:	je     0x426346
  4262d2:	jo     0x42630e
  4262d4:	(bad)  
  4262d5:	(bad)  
  4262d6:	ja     0x42634f
  4262d8:	ja     0x426308
  4262da:	outs   dx,BYTE PTR ds:[esi]
  4262dc:	jne    0x42630c
  4262de:	outs   dx,DWORD PTR ds:[rsi]
  4262df:	jb     0x426348
  4262e1:	(bad)  
  4262e2:	jae    0x426353
  4262e4:	data16 je 0x42635e
  4262e7:	(bad)  
  4262e8:	jb     0x42634f
  4262ea:	(bad)  
  4262eb:	outs   dx,BYTE PTR ds:[esi]
  4262ed:	jne    0x426363
  4262ef:	ins    BYTE PTR es:[rdi],dx
  4262f0:	jae    0x426314
  4262f2:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  4262f5:	jne    0x42634b
  4262f7:	rex.WR push rbx
  4262f9:	cmp    al,0x2f
  4262fb:	(bad)  
  4262fc:	ds cmp al,0x2f
  4262ff:	xor    QWORD PTR [rsi],rdi
  426302:	cmp    al,0x2f
  426304:	rex.XB
  426305:	rex.RB
  426306:	rex.WRX push rsp
  426308:	rex.RB push r10
  42630a:	or     cl,BYTE PTR ds:[rdx]
  42630d:	add    BYTE PTR [rdi+rbp*1],bh
  426310:	rex.X
  426311:	rex.WRXB
  426312:	rex.R pop rcx
  426314:	ds cmp al,0x2f
  426317:	rex.W push rsp
  426319:	rex.WRB
  42631a:	rex.WR
  42631b:	or     cl,BYTE PTR ds:[rdx]
  42631e:	add    BYTE PTR [rdi+rbp*1],bh
  426321:	push   rax
  426322:	push   rdx
  426323:	rex.RB
  426324:	ds cmp al,0x50
  426327:	ds cmp al,0x50
  42632a:	push   rdx
  42632b:	rex.RB
  42632c:	add    BYTE PTR ds:[rdx],cl
  42632f:	cmp    al,0x70
  426331:	ds push rbx
  426333:	gs jae 0x4263a9
  426336:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a444920
  42633d:	and    BYTE PTR [rcx+rbp*2],bh
  426340:	add    BYTE PTR ds:[rdi+rbp*1],bh
  426344:	imul   edi,DWORD PTR [rsi],0x3e702f3c
  42634a:	or     al,BYTE PTR [rax]
  42634c:	add    BYTE PTR [rax],al
  42634e:	add    BYTE PTR [rax],al
  426350:	cmp    al,0x68
  426352:	xor    eax,0x2066493e
  426357:	jns    0x4263c8
  426359:	jne    0x4263cd
  42635b:	and    BYTE PTR [rdx+0x72],ah
  42635e:	outs   dx,DWORD PTR ds:[rsi]
  42635f:	ja     0x4263d4
  426361:	gs jb  0x426384
  426364:	jae    0x4263db
  426366:	jo     0x4263d8
  426368:	outs   dx,DWORD PTR ds:[rsi]
  426369:	jb     0x4263df
  42636b:	jae    0x42638d
  42636d:	jae    0x4263d4
  42636f:	jae    0x4263e4
  426371:	imul   ebp,DWORD PTR [rdi+0x6e],0x73657220
  426378:	jne    0x4263e7
  42637a:	imul   ebp,DWORD PTR [rsi+0x67],0x6874202c
  426381:	outs   dx,BYTE PTR gs:[rsi]
  426383:	and    BYTE PTR [rcx+0x6f],bh
  426386:	jne    0x4263a8
  426388:	jae    0x4263f2
  42638a:	outs   dx,DWORD PTR ds:[rsi]
  42638b:	jne    0x4263f9
  42638d:	and    BYTE PTR fs:[rbx+0x65],dh
  426391:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  426396:	and    BYTE PTR [rbx+0x61],dh
  426399:	ins    DWORD PTR es:[rdi],dx
  42639a:	and    BYTE PTR gs:[rbx+0x65],dh
  42639e:	jae    0x426413
  4263a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2c444920
  4263a7:	and    BYTE PTR [rdi+0x68],dh
  4263aa:	outs   dx,BYTE PTR gs:[rsi]
  4263ac:	and    BYTE PTR [rcx+0x6f],bh
  4263af:	jne    0x4263d1
  4263b1:	jo     0x426425
  4263b3:	gs jae 0x426429
  4263b6:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4263ba:	and    BYTE PTR [rdx+riz*2],bh
  4263bd:	ds jb  0x426425
  4263c0:	ins    BYTE PTR es:[rdi],dx
  4263c1:	outs   dx,DWORD PTR ds:[rsi]
  4263c2:	(bad)  
  4263c3:	fs cmp al,0x2f
  4263c6:	(bad)  
  4263c7:	and    BYTE PTR ds:[rdx+0x75],ah
  4263cb:	je     0x426441
  4263cd:	outs   dx,DWORD PTR ds:[rsi]
  4263ce:	outs   dx,BYTE PTR ds:[rsi]
  4263cf:	cs cmp al,0x2f
  4263d2:	push   0xa3e35
  4263d7:	and    eax,0x58322e
  4263dc:	or     bh,BYTE PTR [rax+rsi*2]
  4263df:	ds push rbx
  4263e1:	gs jb  0x42645a
  4263e4:	gs jb  0x426407
  4263e7:	rex.WRX (bad) 
  4263e9:	ins    DWORD PTR es:[rdi],dx
  4263ea:	cmp    ah,BYTE PTR gs:[rax]
  4263ed:	and    eax,0x702f3c73
  4263f2:	or     al,BYTE PTR ds:[rax]
  4263f5:	add    BYTE PTR [rax],al
  4263f7:	add    BYTE PTR [rax+rsi*2],bh
  4263fa:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4263fd:	outs   dx,BYTE PTR ds:[rsi]
  4263fe:	outs   dx,BYTE PTR ds:[rsi]
  4263ff:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  426404:	and    BYTE PTR [rcx+0x73],ah
  426407:	and    BYTE PTR [rbp+0x73],dh
  42640a:	gs jb  0x42642d
  42640d:	(bad)  
  42640e:	and    eax,0x3c2e2773
  426413:	(bad)  
  426414:	jo     0x426454
  426416:	or     al,BYTE PTR [rax]
  426418:	cmp    al,0x70
  42641a:	and    BYTE PTR ds:[rbx+0x6f],al
  42641e:	outs   dx,BYTE PTR ds:[rsi]
  42641f:	outs   dx,BYTE PTR ds:[rsi]
  426420:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x75]
  426425:	jae    0x426490
  426427:	outs   dx,BYTE PTR ds:[rsi]
  426428:	and    BYTE PTR [ecx+0x6e],ah
  42642c:	outs   dx,DWORD PTR ds:[rsi]
  42642d:	outs   dx,BYTE PTR ds:[rsi]
  42642e:	jns    0x42649d
  426430:	outs   dx,DWORD PTR ds:[rsi]
  426431:	jne    0x4264a6
  426433:	and    BYTE PTR [rax+rcx*2+0x20],al
  426437:	sub    BYTE PTR [rax+0x72],dh
  42643a:	imul   ebp,DWORD PTR [rbp+0x65],0x20666f20
  426441:	and    eax,0x69622064
  426446:	je     0x4264bb
  426448:	sub    DWORD PTR [rdi+rbp*1],edi
  42644b:	jo     0x42648b
  42644d:	or     al,BYTE PTR [rax]
  42644f:	add    BYTE PTR [rbp+0x70],al
  426452:	push   0x72656d65
  426457:	(bad)  
  426458:	ins    BYTE PTR es:[rdi],dx
  426459:	and    BYTE PTR [rax+rcx*2+0x20],al
  42645d:	jne    0x4264d2
  42645f:	imul   ebp,DWORD PTR [rsi+0x67],0x69727020
  426466:	ins    DWORD PTR es:[rdi],dx
  426467:	and    BYTE PTR gs:[rdi+0x66],ch
  42646b:	and    BYTE PTR [rdx+riz*2],bh
  42646e:	ds and eax,0x622f3c64
  426474:	and    BYTE PTR ds:[rdx+0x69],ah
  426478:	je     0x4264ed
  42647a:	cs cmp al,0x62
  42647d:	jb     0x4264bd
  42647f:	or     al,BYTE PTR [rax]
  426481:	add    BYTE PTR [rax],al
  426483:	add    BYTE PTR [rax],al
  426485:	add    BYTE PTR [rax],al
  426487:	add    BYTE PTR [rsp+rdx*2],bh
  42648a:	rex.B
  42648b:	rex.X
  42648c:	rex.WR
  42648d:	and    BYTE PTR [r10+0x6f],r12b
  426491:	jb     0x4264f7
  426493:	gs jb  0x4264d3
  426496:	xor    DWORD PTR [rsi],edi
  426498:	cmp    al,0x54
  42649a:	push   rdx
  42649b:	ds cmp al,0x54
  42649e:	rex.R
  42649f:	ds push rax
  4264a1:	jb     0x426512
  4264a3:	je     0x426514
  4264a5:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4264a8:	and    BYTE PTR [rsi+0x65],dh
  4264ab:	jb     0x426520
  4264ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x542f3c3a
  4264b4:	rex.R
  4264b5:	ds cmp al,0x54
  4264b8:	rex.R
  4264b9:	ds and eax,0x542f3c73
  4264bf:	rex.R
  4264c0:	ds cmp al,0x2f
  4264c3:	push   rsp
  4264c4:	push   rdx
  4264c5:	or     al,BYTE PTR ds:[rax]
  4264c8:	cmp    al,0x54
  4264ca:	push   rdx
  4264cb:	ds cmp al,0x54
  4264ce:	rex.R
  4264cf:	ds rex.XB
  4264d1:	gs jb  0x426548
  4264d4:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4264db:	and    BYTE PTR [rcx+rdi*2+0x70],dl
  4264df:	cmp    bh,BYTE PTR gs:[rdi+rbp*1]
  4264e3:	push   rsp
  4264e4:	rex.R
  4264e5:	ds cmp al,0x54
  4264e8:	rex.R
  4264e9:	ds and eax,0x542f3c73
  4264ef:	rex.R
  4264f0:	ds cmp al,0x2f
  4264f3:	push   rsp
  4264f4:	push   rdx
  4264f5:	or     al,BYTE PTR ds:[rax]
  4264f8:	cmp    al,0x54
  4264fa:	push   rdx
  4264fb:	ds cmp al,0x54
  4264fe:	rex.R
  4264ff:	ds rex.WXB
  426501:	gs jns 0x426524
  426504:	rex.RB js 0x42656a
  426507:	push   0x65676e61
  42650c:	cmp    bh,BYTE PTR [rdi+rbp*1]
  42650f:	push   rsp
  426510:	rex.R
  426511:	ds cmp al,0x54
  426514:	rex.R
  426515:	ds and eax,0x542f3c73
  42651b:	rex.R
  42651c:	ds cmp al,0x2f
  42651f:	push   rsp
  426520:	push   rdx
  426521:	or     al,BYTE PTR ds:[rax]
  426524:	add    BYTE PTR [rax],al
  426526:	add    BYTE PTR [rax],al
  426528:	cmp    al,0x54
  42652a:	push   rdx
  42652b:	ds cmp al,0x54
  42652e:	rex.R
  42652f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  426532:	ins    DWORD PTR es:[rdi],dx
  426533:	jo     0x4265a7
  426535:	gs jae 0x4265ab
  426538:	imul   ebp,DWORD PTR [rdi+0x6e],0x44542f3c
  42653f:	ds cmp al,0x54
  426542:	rex.R
  426543:	ds and eax,0x542f3c73
  426549:	rex.R
  42654a:	ds cmp al,0x2f
  42654d:	push   rsp
  42654e:	push   rdx
  42654f:	or     al,BYTE PTR ds:[rax]
  426552:	add    BYTE PTR [rax],al
  426554:	add    BYTE PTR [rax],al
  426556:	add    BYTE PTR [rax],al
  426558:	cmp    al,0x54
  42655a:	push   rdx
  42655b:	ds cmp al,0x54
  42655e:	rex.R
  42655f:	rex.XB imul esi,DWORD PTR ds:[r8+0x68],0x2f3c7265
  426568:	push   rsp
  426569:	rex.R
  42656a:	ds cmp al,0x54
  42656d:	rex.R
  42656e:	ds and eax,0x542f3c73
  426574:	rex.R
  426575:	ds cmp al,0x2f
  426578:	push   rsp
  426579:	push   rdx
  42657a:	or     al,BYTE PTR ds:[rax]
  42657d:	add    BYTE PTR [rax],al
  42657f:	add    BYTE PTR [rsp+rdx*2],bh
  426582:	push   rdx
  426583:	ds cmp al,0x54
  426586:	rex.R
  426587:	ds rex.WRB
  426589:	rex.B
  42658a:	rex.XB cmp al,0x2f
  42658d:	push   rsp
  42658e:	rex.R
  42658f:	ds cmp al,0x54
  426592:	rex.R
  426593:	ds and eax,0x542f3c73
  426599:	rex.R
  42659a:	ds cmp al,0x2f
  42659d:	push   rsp
  42659e:	push   rdx
  42659f:	or     al,BYTE PTR ds:[rax]
  4265a2:	add    BYTE PTR [rax],al
  4265a4:	add    BYTE PTR [rax],al
  4265a6:	add    BYTE PTR [rax],al
  4265a8:	cmp    al,0x54
  4265aa:	push   rdx
  4265ab:	ds cmp al,0x54
  4265ae:	rex.R
  4265af:	rex.XB imul esi,DWORD PTR ds:[r8+0x68],0x75737265
  4265b8:	imul   esi,DWORD PTR [rbp+riz*2+0x3c],0x3e44542f
  4265c0:	cmp    al,0x54
  4265c2:	rex.R
  4265c3:	ds and eax,0x542f3c73
  4265c9:	rex.R
  4265ca:	ds cmp al,0x2f
  4265cd:	push   rsp
  4265ce:	push   rdx
  4265cf:	ds cmp al,0x2f
  4265d2:	jo     0x426612
  4265d4:	cmp    al,0x2f
  4265d6:	push   rsp
  4265d7:	rex.B
  4265d8:	rex.X
  4265d9:	rex.WR
  4265da:	rex.RB
  4265db:	or     al,BYTE PTR ds:[rax]
  4265de:	cmp    al,0x68
  4265e0:	jb     0x426620
  4265e2:	cmp    al,0x50
  4265e4:	push   rdx
  4265e5:	rex.RB
  4265e6:	ds and eax,0x2f3c0a73
  4265ec:	push   rax
  4265ed:	push   rdx
  4265ee:	rex.RB
  4265ef:	or     al,BYTE PTR ds:[rax]
  4265f2:	add    BYTE PTR [rax],al
  4265f4:	add    BYTE PTR [rax],al
  4265f6:	add    BYTE PTR [rax],al
  4265f8:	cmp    al,0x68
  4265fa:	jb     0x42663a
  4265fc:	cmp    al,0x50
  4265fe:	ds pop rcx
  426600:	outs   dx,DWORD PTR ds:[rsi]
  426601:	jne    0x426675
  426603:	and    BYTE PTR [rax+0x54],cl
  426606:	push   rsp
  426607:	push   rax
  426608:	and    BYTE PTR [rax+0x65],ch
  42660b:	(bad)  
  42660c:	fs gs jb 0x426630
  426610:	ja     0x426673
  426612:	jae    0x42664e
  426614:	cmp    al,0x50
  426616:	push   rdx
  426617:	rex.RB
  426618:	ds and eax,0x502f3c73
  42661e:	push   rdx
  42661f:	rex.RB
  426620:	ds cmp al,0x2f
  426623:	push   rax
  426624:	or     bh,BYTE PTR ds:[rdi+rbp*1]
  426628:	rex.X
  426629:	rex.WRXB
  42662a:	rex.R pop rcx
  42662c:	ds cmp al,0x2f
  42662f:	rex.W push rsp
  426631:	rex.WRB
  426632:	rex.WR
  426633:	or     cl,BYTE PTR ds:[rdx]
  426636:	add    BYTE PTR [rax],al
  426638:	cmp    al,0x21
  42663a:	rex.R
  42663b:	rex.WRXB
  42663c:	rex.XB push r12
  42663e:	pop    rcx
  42663f:	push   rax
  426640:	and    BYTE PTR [r8+0x54],r9b
  426644:	rex.WRB
  426645:	rex.WR and BYTE PTR [rax+0x55],r10b
  426649:	rex.X
  42664a:	rex.WR
  42664b:	rex.WB
  42664c:	rex.XB and BYTE PTR [r10],spl
  42664f:	sub    eax,0x45492f2f
  426654:	push   rsp
  426655:	rex.RX (bad) 
  426657:	(bad)  
  426658:	rex.R push rsp
  42665a:	and    BYTE PTR [rax+0x54],r9b
  42665e:	rex.WRB
  42665f:	rex.WR and BYTE PTR [rdx],r14b
  426662:	xor    BYTE PTR cs:[rdi],ch
  426665:	(bad)  
  426666:	rex.RB
  426667:	rex.WRX and r15b,BYTE PTR [rsi]
  42666a:	or     eax,0x54483c0a
  42666f:	rex.WRB
  426670:	rex.WR
  426671:	ds cmp al,0x48
  426674:	rex.RB
  426675:	rex.B
  426676:	rex.R
  426677:	ds or  eax,0x49543c0a
  42667d:	push   rsp
  42667e:	rex.WR
  42667f:	rex.RB
  426680:	ds xor eax,0x4d203130
  426686:	gs je  0x4266f1
  426689:	outs   dx,DWORD PTR ds:[rsi]
  42668a:	and    BYTE PTR fs:[rsi+0x6f],cl
  42668e:	je     0x4266b0
  426690:	rex.WB ins DWORD PTR es:[rdi],dx
  426692:	jo     0x426700
  426694:	gs ins DWORD PTR es:[rdi],dx
  426696:	outs   dx,BYTE PTR gs:[rsi]
  426698:	je     0x4266ff
  42669a:	fs cmp al,0x2f
  42669d:	push   rsp
  42669e:	rex.WB push r12
  4266a0:	rex.WR
  4266a1:	rex.RB
  4266a2:	ds or  eax,0x482f3c0a
  4266a8:	rex.RB
  4266a9:	rex.B
  4266aa:	rex.R
  4266ab:	ds cmp al,0x42
  4266ae:	rex.WRXB
  4266af:	rex.R pop rcx
  4266b1:	ds or  eax,0x31483c0a
  4266b7:	ds rex.WRB
  4266b9:	gs je  0x426724
  4266bc:	outs   dx,DWORD PTR ds:[rsi]
  4266bd:	and    BYTE PTR fs:[rsi+0x6f],cl
  4266c1:	je     0x4266e3
  4266c3:	rex.WB ins DWORD PTR es:[rdi],dx
  4266c5:	jo     0x426733
  4266c7:	gs ins DWORD PTR es:[rdi],dx
  4266c9:	outs   dx,BYTE PTR gs:[rsi]
  4266cb:	je     0x426732
  4266cd:	fs cmp al,0x2f
  4266d0:	xor    QWORD PTR [rsi],rdi
  4266d3:	or     eax,0x52483c0a
  4266d8:	ds or  eax,0x422f3c0a
  4266de:	rex.WRXB
  4266df:	rex.R pop rcx
  4266e1:	ds cmp al,0x2f
  4266e4:	rex.W push rsp
  4266e6:	rex.WRB
  4266e7:	rex.WR
  4266e8:	ds or  eax,0x7245000a
  4266ee:	jb     0x42675f
  4266f0:	jb     0x426712
  4266f2:	ja     0x42675c
  4266f4:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x646e6573
  4266fc:	imul   ebp,DWORD PTR [rsi+0x67],0x74616420
  426703:	(bad)  
  426704:	or     al,BYTE PTR [rax]
  426706:	jb     0x42676d
  426708:	movsxd esp,DWORD PTR [rbp+0x69]
  42670b:	jbe    0x426772
  42670d:	cmp    ah,BYTE PTR fs:[rax]
  426710:	and    eax,0xd000a73
  426715:	or     cl,BYTE PTR [rip+0xa0a000a]        # 0xa4c6725
  42671b:	add    BYTE PTR [rax],al
  42671d:	add    BYTE PTR [rax],al
  42671f:	add    BYTE PTR [rax+rbp*2+0x69],dl
  426723:	jae    0x426745
  426725:	imul   esi,DWORD PTR [rbx+0x20],0x20656874
  42672c:	fs gs data16 (bad) 
  426730:	jne    0x42679e
  426732:	je     0x426754
  426734:	ins    DWORD PTR es:[rdi],dx
  426735:	gs jae 0x4267ab
  426738:	(bad)  
  426739:	and    BYTE PTR gs:[edx+0x65],dh
  42673e:	jo     0x4267af
  426740:	jb     0x4267b6
  426742:	gs and BYTE PTR fs:[rdx+0x79],ah
  426747:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42674b:	and    BYTE PTR [rdi+0x6e],al
  42674e:	jne    0x4267a4
  426750:	rex.WR push rbx
  426752:	and    BYTE PTR [rcx+0x6d],ch
  426755:	jo     0x4267c3
  426757:	gs ins DWORD PTR es:[rdi],dx
  426759:	outs   dx,BYTE PTR gs:[rsi]
  42675b:	je     0x4267be
  42675d:	je     0x4267c8
  42675f:	outs   dx,DWORD PTR ds:[rsi]
  426760:	outs   dx,BYTE PTR ds:[rsi]
  426761:	and    BYTE PTR cs:[rsi+0x6f],al
  426765:	jb     0x426787
  426767:	ins    DWORD PTR es:[rdi],dx
  426768:	outs   dx,DWORD PTR ds:[rsi]
  426769:	jb     0x4267d0
  42676b:	and    BYTE PTR [rcx+0x6e],ch
  42676e:	outs   dx,WORD PTR ds:[rsi]
  426770:	jb     0x4267df
  426772:	(bad)  
  426773:	je     0x4267de
  426775:	outs   dx,DWORD PTR ds:[rsi]
  426776:	outs   dx,BYTE PTR ds:[rsi]
  426777:	and    BYTE PTR [rax+0x6c],dh
  42677a:	gs (bad) 
  42677c:	jae    0x4267e3
  42677e:	and    BYTE PTR [rsi+0x69],dh
  426781:	jae    0x4267ec
  426783:	je     0x4267a5
  426785:	cmp    al,0x61
  426787:	and    BYTE PTR [rax+0x72],ch
  42678a:	gs cmp ax,0x6822
  42678f:	je     0x426805
  426791:	jo     0x4267cd
  426793:	(bad)  
  426794:	(bad)  
  426795:	ja     0x42680e
  426797:	ja     0x4267c7
  426799:	outs   dx,BYTE PTR ds:[esi]
  42679b:	jne    0x426811
  42679d:	ins    BYTE PTR es:[rdi],dx
  42679e:	jae    0x4267ce
  4267a0:	outs   dx,DWORD PTR ds:[rsi]
  4267a1:	jb     0x42680a
  4267a3:	(bad)  
  4267a4:	and    bh,BYTE PTR [rsi]
  4267a6:	push   0x3a707474
  4267ab:	(bad)  
  4267ac:	(bad)  
  4267ad:	ja     0x426826
  4267af:	ja     0x4267df
  4267b1:	outs   dx,BYTE PTR ds:[esi]
  4267b3:	jne    0x426829
  4267b5:	ins    BYTE PTR es:[rdi],dx
  4267b6:	jae    0x4267e6
  4267b8:	outs   dx,DWORD PTR ds:[rsi]
  4267b9:	jb     0x426822
  4267bb:	(bad)  
  4267bc:	cmp    al,0x2f
  4267be:	(bad)  
  4267bf:	ds add BYTE PTR cs:[rdi+0x6c],ah
  4267c4:	outs   dx,DWORD PTR ds:[rsi]
  4267c5:	(bad)
  4267ca:	outs   dx,BYTE PTR ds:[rsi]
  4267cb:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0xa7325
  4267d3:	add    BYTE PTR [rax],al
  4267d5:	add    BYTE PTR [rax],al
  4267d7:	add    BYTE PTR [rbp+0x72],al
  4267da:	jb     0x42684b
  4267dc:	jb     0x4267fe
  4267de:	imul   ebp,DWORD PTR [rsi+0x20],0x70206864
  4267e5:	(bad)  
  4267e6:	jb     0x426849
  4267e8:	ins    DWORD PTR es:[rdi],dx
  4267e9:	gs je  0x426851
  4267ec:	jb     0x42680e
  4267ee:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  4267f5:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  4267fc:	or     al,BYTE PTR [rax]
  4267fe:	add    BYTE PTR [rax],al
  426800:	rex.RXB
  426801:	outs   dx,BYTE PTR gs:[rsi]
  426803:	gs jb  0x426867
  426806:	je     0x426871
  426808:	outs   dx,BYTE PTR ds:[rsi]
  426809:	and    BYTE PTR [ecx+ebp*2+0x66],al
  42680e:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  426814:	ins    BYTE PTR es:[rdi],dx
  426815:	ins    BYTE PTR es:[rdi],dx
  426816:	ins    DWORD PTR es:[rdi],dx
  426817:	(bad)  
  426818:	outs   dx,BYTE PTR ds:[rsi]
  426819:	and    BYTE PTR [rax+0x61],dh
  42681c:	jb     0x42687f
  42681e:	ins    DWORD PTR es:[rdi],dx
  42681f:	gs je  0x426887
  426822:	jb     0x426897
  426824:	and    BYTE PTR [rbx+0x25],bl
  426827:	fs pop rbp
  426829:	and    BYTE PTR cs:[rax+0x6c],dl
  42682d:	gs (bad) 
  42682f:	jae    0x426896
  426831:	and    BYTE PTR [rdi+0x61],dh
  426834:	imul   esi,DWORD PTR [rsi+rbp*1+0x2e],0x45000a2e
  42683c:	jb     0x4268b0
  42683e:	outs   dx,DWORD PTR ds:[rsi]
  42683f:	jb     0x426861
  426841:	imul   ebp,DWORD PTR [rsi+0x20],0x6d697270
  426848:	and    BYTE PTR gs:[rdi+0x65],ah
  42684c:	outs   dx,BYTE PTR ds:[rsi]
  42684d:	gs jb  0x4268b1
  426850:	je     0x4268bb
  426852:	outs   dx,DWORD PTR ds:[rsi]
  426853:	outs   dx,BYTE PTR ds:[rsi]
  426854:	or     al,BYTE PTR [rax]
  426856:	jb     0x426858
  426858:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42685a:	jne    0x4268c8
  42685c:	and    BYTE PTR fs:[rsi+0x6f],ch
  426860:	je     0x426882
  426862:	outs   dx,DWORD PTR ds:[rsi]
  426863:	jo     0x4268ca
  426865:	outs   dx,BYTE PTR ds:[rsi]
  426866:	and    BYTE PTR [rip+0x45000a73],ah        # 0x454272df
  42686c:	jb     0x4268e0
  42686e:	outs   dx,DWORD PTR ds:[rsi]
  42686f:	jb     0x426891
  426871:	jo     0x4268d4
  426873:	jb     0x4268e8
  426875:	imul   ebp,DWORD PTR [rsi+0x67],0x20686420
  42687c:	jo     0x4268df
  42687e:	jb     0x4268e1
  426880:	ins    DWORD PTR es:[rdi],dx
  426881:	jae    0x4268bd
  426883:	and    BYTE PTR [rip+0x52000a73],ah        # 0x524272fc
  426889:	gs (bad) 
  42688b:	and    BYTE PTR fs:[rcx+rbp*2+0x66],al
  426890:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  426896:	ins    BYTE PTR es:[rdi],dx
  426897:	ins    BYTE PTR es:[rdi],dx
  426898:	ins    DWORD PTR es:[rdi],dx
  426899:	(bad)  
  42689a:	outs   dx,BYTE PTR ds:[rsi]
  42689b:	and    BYTE PTR [rax+0x61],dh
  42689e:	jb     0x426901
  4268a0:	ins    DWORD PTR es:[rdi],dx
  4268a1:	gs je  0x426909
  4268a4:	jb     0x426919
  4268a6:	or     al,BYTE PTR cs:[rax]
  4268a9:	add    BYTE PTR [rax],al
  4268ab:	add    BYTE PTR [rax],al
  4268ad:	add    BYTE PTR [rax],al
  4268af:	add    BYTE PTR [rbx+0x65],dl
  4268b2:	je     0x4268d4
  4268b4:	jae    0x42692a
  4268b6:	(bad)  
  4268b7:	je     0x426922
  4268b9:	movsxd esp,DWORD PTR [rax]
  4268bb:	imul   r12d,DWORD PTR [rsi+0x66],0x482d6569
  4268c3:	gs ins BYTE PTR es:[rdi],dx
  4268c5:	ins    BYTE PTR es:[rdi],dx
  4268c6:	ins    DWORD PTR es:[rdi],dx
  4268c7:	(bad)  
  4268c8:	outs   dx,BYTE PTR ds:[rsi]
  4268c9:	and    BYTE PTR [rax+0x61],dh
  4268cc:	jb     0x42692f
  4268ce:	ins    DWORD PTR es:[rdi],dx
  4268cf:	gs je  0x426937
  4268d2:	jb     0x426947
  4268d4:	sub    al,0x20
  4268d6:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4268d9:	jae    0x426944
  4268db:	fs gs jb 0x4268ff
  4268df:	sub    eax,0x7068642d
  4268e4:	(bad)  
  4268e5:	jb     0x426948
  4268e7:	ins    DWORD PTR es:[rdi],dx
  4268e8:	jae    0x426918
  4268ea:	or     al,BYTE PTR [rax]
  4268ec:	ins    DWORD PTR es:[rdi],dx
  4268ed:	gs ins DWORD PTR es:[rdi],dx
  4268ef:	outs   dx,DWORD PTR ds:[rsi]
  4268f0:	jb     0x42696b
  4268f2:	and    BYTE PTR [rbp+0x72],ah
  4268f5:	jb     0x426966
  4268f7:	jb     0x426903
  4268f9:	add    BYTE PTR [rbp+0x72],al
  4268fc:	jb     0x42696d
  4268fe:	jb     0x426920
  426900:	jb     0x426967
  426902:	(bad)  
  426903:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73252720
  42690b:	(bad)  
  42690c:	or     al,BYTE PTR [rax]
  42690e:	add    BYTE PTR [rax],al
  426910:	push   rax
  426911:	jb     0x426982
  426913:	movsxd esp,DWORD PTR [rbp+0x73]
  426916:	jae    0x42697d
  426918:	and    BYTE PTR fs:[rip+0x41432064],ah        # 0x41858983
  42691f:	and    BYTE PTR [rbx+0x65],ah
  426922:	jb     0x426998
  426924:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42692b:	sub    BYTE PTR [rbx+0x29],dh
  42692e:	or     al,BYTE PTR cs:[rax]
  426931:	push   rax
  426932:	jb     0x4269a3
  426934:	movsxd esp,DWORD PTR [rbp+0x73]
  426937:	jae    0x42699e
  426939:	and    BYTE PTR fs:[rip+0x52432064],ah        # 0x528589a4
  426940:	rex.WR sub BYTE PTR [rbx+0x29],r14b
  426944:	or     al,BYTE PTR cs:[rax]
  426947:	add    BYTE PTR [rbp+0x72],al
  42694a:	jb     0x4269bb
  42694c:	jb     0x42696e
  42694e:	jae    0x4269b5
  426950:	je     0x4269c6
  426952:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  426959:	and    BYTE PTR [rdi+0x70],cl
  42695c:	outs   dx,BYTE PTR gs:[rsi]
  42695e:	push   rax
  42695f:	rex.RXB push r8
  426961:	and    BYTE PTR [rbx+0x65],ch
  426964:	jns    0x4269d8
  426966:	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
  42696d:	or     al,BYTE PTR gs:[rax]
  426970:	rex.RB jb 0x4269e5
  426973:	outs   dx,DWORD PTR ds:[rsi]
  426974:	jb     0x4269d1
  426976:	and    eax,0x77205d64
  42697b:	push   0x20656c69
  426980:	jb     0x4269e7
  426982:	(bad)  
  426983:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65687420
  42698b:	and    BYTE PTR [rdi+0x70],cl
  42698e:	outs   dx,BYTE PTR gs:[rsi]
  426990:	push   rax
  426991:	rex.RXB push r8
  426993:	and    BYTE PTR [rbx+0x65],ch
  426996:	jns    0x4269b8
  426998:	jo     0x4269fb
  42699a:	imul   esi,DWORD PTR [rdx+0x20],0x73252728
  4269a1:	(bad)  
  4269a2:	sub    al,0x20
  4269a4:	(bad)  
  4269a5:	and    eax,0xa292773
  4269aa:	add    BYTE PTR [rbp+0x72],al
  4269ad:	jb     0x426a1e
  4269af:	jb     0x4269d1
  4269b1:	jb     0x426a18
  4269b3:	(bad)  
  4269b4:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73252720
  4269bc:	(bad)  
  4269bd:	and    BYTE PTR [rdi+0x72],ch
  4269c0:	and    BYTE PTR [rdi],ah
  4269c2:	and    eax,0xa2773
  4269c7:	add    BYTE PTR [rdi+0x61],dl
  4269ca:	jb     0x426a3a
  4269cc:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6e203a
  4269d3:	and    BYTE PTR [rax+0x72],dh
  4269d6:	imul   esi,DWORD PTR [rsi+0x61],0x6b206574
  4269dd:	gs jns 0x426a00
  4269e0:	(bad)  
  4269e1:	outs   dx,BYTE PTR ds:[rsi]
  4269e2:	and    BYTE PTR fs:[rbx+0x65],ah
  4269e6:	jb     0x426a5c
  4269e8:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4269ef:	and    BYTE PTR [rax+0x61],dh
  4269f2:	imul   esi,DWORD PTR [rdx+0x73],0x72657720
  4269f9:	and    BYTE PTR gs:[rbx+0x65],dh
  4269fd:	je     0x426a2d
  4269ff:	or     al,BYTE PTR [rax]
  426a01:	add    BYTE PTR [rax],al
  426a03:	add    BYTE PTR [rax],al
  426a05:	add    BYTE PTR [rax],al
  426a07:	add    BYTE PTR [rbx+0x61],al
  426a0a:	outs   dx,BYTE PTR ds:[rsi]
  426a0b:	outs   dx,BYTE PTR ds:[rsi]
  426a0c:	outs   dx,DWORD PTR ds:[rsi]
  426a0d:	je     0x426a2f
  426a0f:	jae    0x426a76
  426a11:	je     0x426a33
  426a13:	rex.WRXB
  426a14:	rex.XB push r11
  426a16:	push   rax
  426a17:	and    BYTE PTR [rbx+0x74],dh
  426a1a:	(bad)  
  426a1b:	je     0x426a92
  426a1d:	jae    0x426a3f
  426a1f:	jb     0x426a86
  426a21:	jno    0x426a98
  426a23:	gs jae 0x426a9a
  426a26:	and    BYTE PTR [rsi+0x69],ah
  426a29:	ins    BYTE PTR es:[rdi],dx
  426a2a:	cmp    ah,BYTE PTR gs:[rax]
  426a2d:	and    eax,0xa73
  426a32:	add    BYTE PTR [rax],al
  426a34:	add    BYTE PTR [rax],al
  426a36:	add    BYTE PTR [rax],al
  426a38:	rex.RB jb 0x426aad
  426a3b:	outs   dx,DWORD PTR ds:[rsi]
  426a3c:	jb     0x426a5e
  426a3e:	ja     0x426aa8
  426a40:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x74746573
  426a48:	imul   ebp,DWORD PTR [rsi+0x67],0x50525320
  426a4f:	and    BYTE PTR [rax+0x61],dh
  426a52:	jb     0x426ab5
  426a54:	ins    DWORD PTR es:[rdi],dx
  426a55:	gs je  0x426abd
  426a58:	jb     0x426acd
  426a5a:	or     al,BYTE PTR [rax]
  426a5c:	add    BYTE PTR [rax],al
  426a5e:	add    BYTE PTR [rax],al
  426a60:	rex.RB jb 0x426ad5
  426a63:	outs   dx,DWORD PTR ds:[rsi]
  426a64:	jb     0x426a86
  426a66:	ja     0x426ad0
  426a68:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x74746573
  426a70:	imul   ebp,DWORD PTR [rsi+0x67],0x4b535020
  426a77:	and    BYTE PTR [rax+0x61],dh
  426a7a:	jb     0x426add
  426a7c:	ins    DWORD PTR es:[rdi],dx
  426a7d:	gs je  0x426ae5
  426a80:	jb     0x426af5
  426a82:	or     al,BYTE PTR [rax]
  426a84:	add    BYTE PTR [rax],al
  426a86:	add    BYTE PTR [rax],al
  426a88:	rex.RB jb 0x426afd
  426a8b:	outs   dx,DWORD PTR ds:[rsi]
  426a8c:	jb     0x426aae
  426a8e:	jae    0x426af5
  426a90:	je     0x426b06
  426a92:	imul   ebp,DWORD PTR [rsi+0x67],0x4b535020
  426a99:	and    BYTE PTR [rcx+0x64],ch
  426a9c:	outs   dx,BYTE PTR gs:[rsi]
  426a9e:	je     0x426b09
  426aa0:	je     0x426b1b
  426aa2:	and    BYTE PTR [rax+0x69],ch
  426aa5:	outs   dx,BYTE PTR ds:[rsi]
  426aa6:	je     0x426ad6
  426aa8:	or     al,BYTE PTR [rax]
  426aaa:	add    BYTE PTR [rax],al
  426aac:	add    BYTE PTR [rax],0x0
  426aaf:	add    BYTE PTR [rbp+riz*2+0x6e],al
  426ab3:	imul   esp,DWORD PTR [rbp+0x64],0x6e6f6320
  426aba:	outs   dx,BYTE PTR ds:[rsi]
  426abb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  426ac0:	outs   dx,BYTE PTR ds:[rsi]
  426ac1:	and    BYTE PTR [rsi+0x72],ah
  426ac4:	outs   dx,DWORD PTR ds:[rsi]
  426ac5:	ins    DWORD PTR es:[rdi],dx
  426ac6:	and    BYTE PTR [rip+0x43000a73],ah        # 0x4342753f
  426acc:	(bad)  
  426acd:	outs   dx,BYTE PTR ds:[rsi]
  426ace:	outs   dx,BYTE PTR ds:[rsi]
  426acf:	outs   dx,DWORD PTR ds:[rsi]
  426ad0:	je     0x426af2
  426ad2:	outs   dx,BYTE PTR gs:[esi]
  426ad5:	gs jb  0x426b39
  426ad8:	je     0x426b3f
  426ada:	and    BYTE PTR [rbx+0x65],ch
  426add:	jns    0x426ae9
  426adf:	add    BYTE PTR [rbx+0x61],al
  426ae2:	outs   dx,BYTE PTR ds:[rsi]
  426ae3:	outs   dx,BYTE PTR ds:[rsi]
  426ae4:	outs   dx,DWORD PTR ds:[rsi]
  426ae5:	je     0x426b07
  426ae7:	ins    BYTE PTR es:[rdi],dx
  426ae8:	imul   esi,DWORD PTR [rbx+0x74],0xa6e65
  426aef:	push   rdi
  426af0:	(bad)  
  426af1:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x6f662067
  426af9:	jb     0x426b1b
  426afb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  426afe:	outs   dx,BYTE PTR ds:[rsi]
  426aff:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  426b04:	outs   dx,BYTE PTR ds:[rsi]
  426b05:	cs cs or al,BYTE PTR cs:[rax]
  426b0a:	add    BYTE PTR [rax],al
  426b0c:	add    BYTE PTR [rax],al
  426b0e:	add    BYTE PTR [rax],al
  426b10:	push   rbx
  426b11:	outs   dx,BYTE PTR gs:[rsi]
  426b13:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c656820
  426b1b:	ins    BYTE PTR es:[rdi],dx
  426b1c:	outs   dx,DWORD PTR ds:[rsi]
  426b1d:	and    BYTE PTR [rsi+0x65],dh
  426b20:	jb     0x426b8b
  426b22:	data16 jns 0x426b45
  426b25:	jb     0x426b8c
  426b27:	jno    0x426b9e
  426b29:	gs jae 0x426ba0
  426b2c:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  426b30:	and    eax,0x41000a73
  426b35:	movsxd esp,DWORD PTR [rbx+0x65]
  426b38:	jo     0x426bae
  426b3a:	gs and BYTE PTR fs:[rbx+0x6f],ah
  426b3f:	outs   dx,BYTE PTR ds:[rsi]
  426b40:	outs   dx,BYTE PTR ds:[rsi]
  426b41:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  426b46:	outs   dx,BYTE PTR ds:[rsi]
  426b47:	and    BYTE PTR [rsi+0x72],ah
  426b4a:	outs   dx,DWORD PTR ds:[rsi]
  426b4b:	ins    DWORD PTR es:[rdi],dx
  426b4c:	and    BYTE PTR [rip+0x45000a73],ah        # 0x454275c5
  426b52:	jb     0x426bc6
  426b54:	outs   dx,DWORD PTR ds:[rsi]
  426b55:	jb     0x426b77
  426b57:	imul   ebp,DWORD PTR [rsi+0x20],0x646e6168
  426b5e:	jae    0x426bc8
  426b60:	(bad)  
  426b61:	imul   esp,DWORD PTR [rbp+0x28],0x29
  426b65:	cmp    ah,BYTE PTR [rax]
  426b67:	and    eax,0x2a000a73
  426b6c:	sub    ch,BYTE PTR [rdx]
  426b6e:	and    BYTE PTR [rdx+0x65],dl
  426b71:	movsxd esp,DWORD PTR [rbp+0x69]
  426b74:	jbe    0x426bdb
  426b76:	and    BYTE PTR fs:[rax+0x65],ch
  426b7a:	ins    BYTE PTR es:[rdi],dx
  426b7b:	ins    BYTE PTR es:[rdi],dx
  426b7c:	outs   dx,DWORD PTR ds:[rsi]
  426b7d:	and    BYTE PTR [rbp+0x65],ch
  426b80:	jae    0x426bf5
  426b82:	(bad)  
  426b83:	or     al,BYTE PTR gs:[eax]
  426b87:	rex.RB jb 0x426bfc
  426b8a:	outs   dx,DWORD PTR ds:[rsi]
  426b8b:	jb     0x426bad
  426b8d:	imul   ebp,DWORD PTR [rsi+0x20],0x76636572
  426b94:	sub    BYTE PTR [rcx],ch
  426b96:	cmp    ah,BYTE PTR [rax]
  426b98:	and    eax,0x45000a73
  426b9d:	rex.WRXB
  426b9e:	rex.RX or r9b,BYTE PTR [rdx]
  426ba1:	add    BYTE PTR [rax],al
  426ba3:	add    BYTE PTR [rax],al
  426ba5:	add    BYTE PTR [rax],al
  426ba7:	add    BYTE PTR [rdx+0x65],dh
  426baa:	movsxd esp,DWORD PTR [rbp+0x69]
  426bad:	jbe    0x426c14
  426baf:	fs pop rbx
  426bb1:	and    eax,0x2578322e
  426bb6:	xor    bh,BYTE PTR cs:[rax+0x25]
  426bba:	xor    bh,BYTE PTR cs:[rax+0x25]
  426bbe:	xor    bh,BYTE PTR cs:[rax+0x25]
  426bc2:	xor    bh,BYTE PTR cs:[rax+0x25]
  426bc6:	xor    bh,BYTE PTR cs:[rax+0x25]
  426bca:	xor    bh,BYTE PTR cs:[rax+0x25]
  426bce:	xor    bh,BYTE PTR cs:[rax+0x5d]
  426bd2:	cmp    ah,BYTE PTR [rax]
  426bd4:	and    eax,0x45000a73
  426bd9:	jb     0x426c4d
  426bdb:	outs   dx,DWORD PTR ds:[rsi]
  426bdc:	jb     0x426bfe
  426bde:	imul   ebp,DWORD PTR [rsi+0x20],0x646e6573
  426be5:	sub    BYTE PTR [rcx],ch
  426be7:	cmp    ah,BYTE PTR [rax]
  426be9:	and    eax,0xa73
  426bee:	add    BYTE PTR [rax],al
  426bf0:	jae    0x426c66
  426bf2:	(bad)  
  426bf3:	jb     0x426c69
  426bf5:	je     0x426c63
  426bf7:	jae    0x426c33
  426bf9:	and    BYTE PTR [rbx+0x65],dh
  426bfc:	outs   dx,BYTE PTR ds:[rsi]
  426bfd:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7325203a
  426c05:	or     al,BYTE PTR [rax]
  426c07:	gs jb  0x426c7c
  426c0a:	outs   dx,DWORD PTR ds:[rsi]
  426c0b:	jb     0x426c2d
  426c0d:	jae    0x426c74
  426c0f:	outs   dx,BYTE PTR ds:[rsi]
  426c10:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73252220
  426c18:	and    cl,BYTE PTR [rdx]
  426c1a:	add    BYTE PTR [rax],al
  426c1c:	add    BYTE PTR [rax],al
  426c1e:	add    BYTE PTR [rax],al
  426c20:	jae    0x426c96
  426c22:	(bad)  
  426c23:	jb     0x426c99
  426c25:	je     0x426c93
  426c27:	jae    0x426c63
  426c29:	and    BYTE PTR [rdi+0x61],dh
  426c2c:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x6f662067
  426c34:	jb     0x426c70
  426c36:	and    BYTE PTR [rdx],ah
  426c38:	and    eax,0x22732a2e
  426c3d:	or     al,BYTE PTR [rax]
  426c3f:	gs jb  0x426cb4
  426c42:	outs   dx,DWORD PTR ds:[rsi]
  426c43:	jb     0x426c65
  426c45:	jb     0x426cac
  426c47:	movsxd esp,DWORD PTR [rbp+0x69]
  426c4a:	jbe    0x426cb5
  426c4c:	outs   dx,BYTE PTR ds:[rsi]
  426c4d:	and    BYTE PTR [eip+0x73000a73],ah        # 0x734276c7
  426c54:	je     0x426cb7
  426c56:	jb     0x426ccc
  426c58:	je     0x426cc6
  426c5a:	jae    0x426c96
  426c5c:	and    BYTE PTR [rdx+0x65],dh
  426c5f:	movsxd esp,DWORD PTR [rbp+0x69]
  426c62:	jbe    0x426cc9
  426c64:	cmp    ah,BYTE PTR fs:[rax]
  426c67:	and    eax,0xa73
  426c6c:	add    BYTE PTR [rax],al
  426c6e:	add    BYTE PTR [rax],al
  426c70:	sub    ch,BYTE PTR [rdx]
  426c72:	sub    ah,BYTE PTR [rax]
  426c74:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  426c76:	ins    BYTE PTR es:[rdi],dx
  426c77:	jns    0x426c99
  426c79:	jae    0x426ce0
  426c7b:	outs   dx,BYTE PTR ds:[rsi]
  426c7c:	je     0x426c9e
  426c7e:	and    eax,0x79622064
  426c83:	je     0x426cea
  426c85:	jae    0x426ca7
  426c87:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  426c8e:	and    BYTE PTR [rdi+0x66],ch
  426c91:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4c9afb
  426c97:	push   0x73707474
  426c9c:	add    BYTE PTR [rbx+0x6d],dh
  426c9f:	je     0x426d11
  426ca1:	add    BYTE PTR [rbx+0x75],dh
  426ca4:	(bad)  
  426ca5:	ins    DWORD PTR es:[rdi],dx
  426ca6:	imul   esi,DWORD PTR [rbx+0x73],0x6e6f69
  426cad:	rex.WRX
  426cae:	outs   dx,DWORD PTR gs:[esi]
  426cb1:	je     0x426d1c
  426cb3:	(bad)  
  426cb4:	je     0x426d1f
  426cb6:	outs   dx,BYTE PTR ds:[rsi]
  426cb7:	and    BYTE PTR [ebx+0x4d],dl
  426cbb:	push   rsp
  426cbc:	push   rax
  426cbd:	and    BYTE PTR [rbx+0x54],dl
  426cc0:	push   r10
  426cc2:	push   rsp
  426cc3:	push   rsp
  426cc4:	rex.WR push rbx
  426cc6:	or     al,BYTE PTR [rax]
  426cc8:	xor    dh,BYTE PTR [rdx]
  426cca:	xor    BYTE PTR [rax],ah
  426ccc:	add    BYTE PTR [rbp+0x48],al
  426ccf:	rex.WR
  426cd0:	rex.WRXB and BYTE PTR [rip+0x32000a73],r12b        # 0x3242774a
  426cd7:	xor    eax,0x53002030
  426cdc:	push   rsp
  426cdd:	push   r10
  426cdf:	push   rsp
  426ce0:	push   rsp
  426ce1:	rex.WR push rbx
  426ce3:	or     al,BYTE PTR [rax]
  426ce5:	imul   ebp,DWORD PTR [rbp+0x61],0x6d690070
  426cec:	(bad)  
  426ced:	jo     0x426d21
  426cef:	add    BYTE PTR [rsi+0x65],cl
  426cf2:	outs   dx,DWORD PTR ds:[esi]
  426cf4:	je     0x426d5f
  426cf6:	(bad)  
  426cf7:	je     0x426d62
  426cf9:	outs   dx,BYTE PTR ds:[rsi]
  426cfa:	and    BYTE PTR [ecx+0x4d],cl
  426cfe:	push   r8
  426d00:	and    BYTE PTR [rbx+0x54],dl
  426d03:	push   r10
  426d05:	push   rsp
  426d06:	push   rsp
  426d07:	rex.WR push rbx
  426d09:	or     al,BYTE PTR [rax]
  426d0b:	(bad)  
  426d0c:	and    BYTE PTR [rbx+0x41],al
  426d0f:	push   rax
  426d10:	rex.B
  426d11:	rex.X
  426d12:	rex.WB
  426d13:	rex.WR
  426d14:	rex.WB push r12
  426d16:	pop    rcx
  426d17:	or     eax,0x2061000a
  426d1c:	rex.WRXB
  426d1d:	rex.WXB add BYTE PTR [r9+0x20],spl
  426d21:	push   rbx
  426d22:	push   rsp
  426d23:	push   r10
  426d25:	push   rsp
  426d26:	push   rsp
  426d27:	rex.WR push rbx
  426d29:	or     eax,0x6d78000a
  426d2e:	jo     0x426da0
  426d30:	add    BYTE PTR [rsi+0x65],cl
  426d33:	outs   dx,DWORD PTR ds:[esi]
  426d35:	je     0x426da0
  426d37:	(bad)  
  426d38:	je     0x426da3
  426d3a:	outs   dx,BYTE PTR ds:[rsi]
  426d3b:	and    BYTE PTR [eax+0x4d],bl
  426d3f:	push   rax
  426d40:	push   rax
  426d41:	and    BYTE PTR [rbx+0x54],dl
  426d44:	push   r10
  426d46:	push   rsp
  426d47:	push   rsp
  426d48:	rex.WR push rbx
  426d4a:	or     al,BYTE PTR [rax]
  426d4c:	add    BYTE PTR [rax],al
  426d4e:	add    BYTE PTR [rax],al
  426d50:	cmp    al,0x73
  426d52:	je     0x426dc6
  426d54:	gs (bad) 
  426d56:	ins    DWORD PTR es:[rdi],dx
  426d57:	cmp    dh,BYTE PTR [rbx+0x74]
  426d5a:	jb     0x426dc1
  426d5c:	(bad)  
  426d5d:	ins    DWORD PTR es:[rdi],dx
  426d5e:	and    BYTE PTR [rax+0x6d],bh
  426d61:	ins    BYTE PTR es:[rdi],dx
  426d62:	outs   dx,BYTE PTR ds:[rsi]
  426d63:	jae    0x426d9f
  426d65:	jae    0x426ddb
  426d67:	jb     0x426dce
  426d69:	(bad)  
  426d6a:	ins    DWORD PTR es:[rdi],dx
  426d6b:	cmp    eax,0x74746827
  426d70:	jo     0x426dac
  426d72:	(bad)  
  426d73:	(bad)  
  426d74:	gs je  0x426ddf
  426d77:	gs jb  0x426df2
  426d7a:	cs push 0x61
  426d7d:	(bad)
  426d82:	outs   dx,DWORD PTR ds:[rsi]
  426d83:	jb     0x426dec
  426d85:	(bad)  
  426d86:	jae    0x426dfc
  426d88:	jb     0x426def
  426d8a:	(bad)  
  426d8b:	ins    DWORD PTR es:[rdi],dx
  426d8c:	jae    0x426db5
  426d8e:	and    BYTE PTR [rax+0x6d],bh
  426d91:	ins    BYTE PTR es:[rdi],dx
  426d92:	outs   dx,BYTE PTR ds:[rsi]
  426d93:	jae    0x426dd2
  426d95:	(bad)  
  426d96:	push   0x61
  426d98:	(bad)
  426d9d:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  426da1:	outs   dx,BYTE PTR ds:[rsi]
  426da2:	je     0x426dcb
  426da4:	and    BYTE PTR [rdi+rbp*2+0x3d],dh
  426da8:	(bad)  
  426da9:	and    eax,0x76202773
  426dae:	gs jb  0x426e24
  426db1:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
  426db8:	xor    BYTE PTR [rdi],ah
  426dba:	or     al,BYTE PTR ds:[rax]
  426dbd:	cmp    al,0x3f
  426dbf:	add    BYTE PTR [rbx+rsi*2],bh
  426dc2:	je     0x426e25
  426dc4:	jb     0x426e3a
  426dc6:	je     0x426e34
  426dc8:	jae    0x426dea
  426dca:	js     0x426e39
  426dcc:	ins    BYTE PTR es:[rdi],dx
  426dcd:	outs   dx,BYTE PTR ds:[rsi]
  426dce:	jae    0x426e0d
  426dd0:	(bad)  
  426dd1:	jne    0x426e45
  426dd3:	outs   dx,BYTE PTR ds:[rsi]
  426dd4:	cmp    ch,BYTE PTR [rcx+0x65]
  426dd7:	je     0x426e3f
  426dd9:	cmp    dh,BYTE PTR [rax+0x61]
  426ddc:	jb     0x426e3f
  426dde:	ins    DWORD PTR es:[rdi],dx
  426ddf:	jae    0x426e1b
  426de1:	js     0x426e50
  426de3:	ins    BYTE PTR es:[rdi],dx
  426de4:	cmp    ch,BYTE PTR [rsi+0x73]
  426de7:	cmp    bh,BYTE PTR [rax+0x6d]
  426dea:	jo     0x426e5c
  426dec:	sub    eax,0x27736c74
  426df1:	(bad)  
  426df2:	add    BYTE PTR ds:[rax+rsi*2],bh
  426df6:	jb     0x426e67
  426df8:	movsxd esp,DWORD PTR [rbp+0x65]
  426dfb:	add    BYTE PTR fs:[rsp+riz*2+0x61],ch
  426e00:	jo     0x426e02
  426e02:	rex.WRX
  426e03:	outs   dx,DWORD PTR gs:[esi]
  426e06:	je     0x426e71
  426e08:	(bad)  
  426e09:	je     0x426e74
  426e0b:	outs   dx,BYTE PTR ds:[rsi]
  426e0c:	and    BYTE PTR [esp+eax*2+0x41],cl
  426e11:	push   rax
  426e12:	and    BYTE PTR [rbx+0x54],dl
  426e15:	push   r10
  426e17:	push   rsp
  426e18:	push   rsp
  426e19:	rex.WR push rbx
  426e1b:	or     al,BYTE PTR [rax]
  426e1d:	add    BYTE PTR [rax],al
  426e1f:	add    BYTE PTR [rax],dh
  426e21:	sbb    eax,0x77010102
  426e26:	sbb    BYTE PTR [rax+0x332e3116],al
  426e2c:	cs ss xor DWORD PTR cs:[rsi],ebp
  426e31:	xor    al,0x2e
  426e33:	xor    DWORD PTR [rsi],ebp
  426e35:	xor    DWORD PTR [rsi+rsi*1],esi
  426e38:	ss xor dh,BYTE PTR cs:[rax]
  426e3c:	xor    BYTE PTR [rbx],dh
  426e3e:	(bad)  
  426e3f:	add    BYTE PTR [rsi+0x74],ah
  426e42:	jo     0x426e44
  426e44:	data16 je 0x426eb7
  426e47:	jae    0x426e49
  426e49:	rex.WRX
  426e4a:	outs   dx,DWORD PTR gs:[esi]
  426e4d:	je     0x426eb8
  426e4f:	(bad)  
  426e50:	je     0x426ebb
  426e52:	outs   dx,BYTE PTR ds:[rsi]
  426e53:	and    BYTE PTR [esi+0x54],al
  426e57:	push   rax
  426e58:	and    BYTE PTR [rbx+0x54],dl
  426e5b:	push   r10
  426e5d:	push   rsp
  426e5e:	push   rsp
  426e5f:	rex.WR push rbx
  426e61:	or     al,BYTE PTR [rax]
  426e63:	rex.RX
  426e64:	rex.RB
  426e65:	push   r12
  426e67:	or     eax,0x3132000a
  426e6c:	xor    DWORD PTR [rax],esp
  426e6e:	add    BYTE PTR [rcx+0x55],al
  426e71:	push   rsp
  426e72:	rex.W and BYTE PTR [rsp+rcx*2+0x53],dl
  426e77:	or     eax,0x3332000a
  426e7c:	xor    al,0x0
  426e7e:	jne    0x426eee
  426e80:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  426e84:	outs   dx,BYTE PTR ds:[rsi]
  426e85:	and    BYTE PTR [rax+0x72],dh
  426e88:	outs   dx,DWORD PTR ds:[rsi]
  426e89:	je     0x426efa
  426e8b:	movsxd ebp,DWORD PTR [rdi+0x6c]
  426e8e:	and    BYTE PTR [rdi],ah
  426e90:	and    eax,0xa2773
  426e95:	js     0x426f04
  426e97:	jo     0x426f09
  426e99:	sub    eax,0x76726573
  426e9e:	gs jb  0x426ea1
  426ea1:	xor    al,0x34
  426ea3:	xor    eax,DWORD PTR [rax]
  426ea5:	sub    ch,BYTE PTR [rdx]
  426ea7:	sub    ah,BYTE PTR [rax]
  426ea9:	outs   dx,BYTE PTR ds:[esi]
  426eab:	jne    0x426f21
  426ead:	ins    BYTE PTR es:[rdi],dx
  426eae:	jae    0x426f0f
  426eb0:	(bad)  
  426eb1:	jns    0x426f18
  426eb3:	sub    BYTE PTR [rcx],ch
  426eb5:	and    BYTE PTR [rbp+0x72],ah
  426eb8:	jb     0x426f29
  426eba:	jb     0x426ef6
  426ebc:	and    BYTE PTR [rip+0x52000a73],ah        # 0x52427935
  426ec2:	gs jae 0x426f34
  426ec5:	ins    BYTE PTR es:[rdi],dx
  426ec6:	jbe    0x426f31
  426ec8:	outs   dx,BYTE PTR ds:[rsi]
  426ec9:	and    BYTE PTR [edi],ah
  426ecc:	and    eax,0x2e2e2773
  426ed1:	or     al,BYTE PTR cs:[rax]
  426ed4:	rex.XB (bad) 
  426ed6:	outs   dx,BYTE PTR ds:[rsi]
  426ed7:	outs   dx,BYTE PTR ds:[rsi]
  426ed8:	outs   dx,DWORD PTR ds:[rsi]
  426ed9:	je     0x426efb
  426edb:	jb     0x426f42
  426edd:	jae    0x426f4e
  426edf:	ins    BYTE PTR es:[rdi],dx
  426ee0:	jbe    0x426f47
  426ee2:	and    BYTE PTR [rip+0x73253a73],ah        # 0x7367a95b
  426ee8:	cmp    ah,BYTE PTR [rax]
  426eea:	and    eax,0xa73
  426eef:	add    BYTE PTR [rbx+0x6f],al
  426ef2:	jne    0x426f60
  426ef4:	and    BYTE PTR fs:[rsi+0x6f],ch
  426ef8:	je     0x426f1a
  426efa:	imul   bp,WORD PTR [rsi+0x64],0x6120
  426f00:	and    BYTE PTR [rbx+0x75],dh
  426f03:	jo     0x426f75
  426f05:	outs   dx,DWORD PTR ds:[rsi]
  426f06:	jb     0x426f7c
  426f08:	gs and BYTE PTR fs:[rbx+0x6f],dh
  426f0d:	movsxd ebp,DWORD PTR [rbx+0x65]
  426f10:	je     0x426f1c
  426f12:	add    BYTE PTR [rdi+0x65],ah
  426f15:	je     0x426f85
  426f17:	(bad)  
  426f18:	ins    DWORD PTR es:[rdi],dx
  426f19:	imul   ebp,DWORD PTR gs:[rsi+0x66],0x3a29286f
  426f21:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2542799a
  426f27:	jae    0x426f49
  426f29:	(bad)  
  426f2a:	and    eax,0x73253a73
  426f2f:	(bad)  
  426f30:	cs cs or al,BYTE PTR cs:[rax]
  426f35:	add    BYTE PTR [rax],al
  426f37:	add    BYTE PTR [rbx+0x6f],al
  426f3a:	jne    0x426fa8
  426f3c:	and    BYTE PTR fs:[rsi+0x6f],ch
  426f40:	je     0x426f62
  426f42:	movsxd ebp,DWORD PTR [rdi+0x6e]
  426f45:	outs   dx,BYTE PTR ds:[rsi]
  426f46:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  426f4b:	outs   dx,DWORD PTR ds:[rsi]
  426f4c:	and    BYTE PTR [rip+0x73253a73],ah        # 0x7367a9c5
  426f52:	cmp    ah,BYTE PTR [rax]
  426f54:	and    eax,0x57000a73
  426f59:	push   rbx
  426f5a:	pop    r15
  426f5c:	push   rbx
  426f5d:	push   rsp
  426f5e:	push   r10
  426f60:	push   rsp
  426f61:	push   rbp
  426f62:	push   rax
  426f63:	pop    rdi
  426f64:	rex.RB push r10
  426f66:	push   rdx
  426f67:	rex.WRXB push r10
  426f69:	add    BYTE PTR [rax],al
  426f6b:	add    BYTE PTR [rax],al
  426f6d:	add    BYTE PTR [rax],al
  426f6f:	add    BYTE PTR [rdi+0x61],dl
  426f72:	jb     0x426fe2
  426f74:	imul   ebp,DWORD PTR [rsi+0x67],0x6567203a
  426f7b:	je     0x426ff0
  426f7d:	gs jb  0x426ff6
  426f80:	(bad)  
  426f81:	jns    0x426ff3
  426f83:	outs   dx,DWORD PTR ds:[rsi]
  426f84:	jb     0x426ffa
  426f86:	sub    BYTE PTR [rip+0x66202973],ah        # 0x666298ff
  426f8c:	(bad)  
  426f8d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7355202e
  426f95:	imul   ebp,DWORD PTR [rsi+0x67],0x726f7020
  426f9c:	je     0x426fbe
  426f9e:	outs   dx,BYTE PTR ds:[rsi]
  426f9f:	jne    0x42700e
  426fa1:	(bad)  
  426fa2:	gs jb  0x426fc5
  426fa5:	(bad)  
  426fa6:	jae    0x426fc8
  426fa8:	jae    0x42700f
  426faa:	jb     0x427022
  426fac:	imul   esp,DWORD PTR [rbx+0x65],0xa2e
  426fb3:	add    BYTE PTR [rax],al
  426fb5:	add    BYTE PTR [rax],al
  426fb7:	add    BYTE PTR [rdi+0x61],dl
  426fba:	jb     0x42702a
  426fbc:	imul   ebp,DWORD PTR [rsi+0x67],0x6567203a
  426fc3:	je     0x427038
  426fc5:	gs jb  0x42703e
  426fc8:	(bad)  
  426fc9:	jns    0x427039
  426fcb:	(bad)  
  426fcc:	ins    DWORD PTR es:[rdi],dx
  426fcd:	sub    BYTE PTR gs:[rcx],ch
  426fd0:	and    BYTE PTR [rsi+0x61],ah
  426fd3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa2e
  426fdb:	add    BYTE PTR [rax],al
  426fdd:	add    BYTE PTR [rax],al
  426fdf:	add    BYTE PTR [rip+0x45732520],ch        # 0x45b59505
  426fe5:	and    BYTE PTR [r9+r13*2+0x66],al
  426fea:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  426ff0:	ins    BYTE PTR es:[rdi],dx
  426ff1:	ins    BYTE PTR es:[rdi],dx
  426ff2:	ins    DWORD PTR es:[rdi],dx
  426ff3:	(bad)  
  426ff4:	outs   dx,BYTE PTR ds:[rsi]
  426ff5:	and    BYTE PTR [rax+0x61],dh
  426ff8:	jb     0x42705b
  426ffa:	ins    DWORD PTR es:[rdi],dx
  426ffb:	gs je  0x427063
  426ffe:	jb     0x427073
  427000:	or     al,BYTE PTR [rax]
  427002:	and    BYTE PTR [rip+0x69735520],ch        # 0x69b5c528
  427008:	outs   dx,BYTE PTR ds:[rsi]
  427009:	and    BYTE PTR [ebx+0x75],ah
  42700d:	jb     0x427085
  42700f:	cmp    ah,BYTE PTR gs:[rax]
  427012:	and    eax,0x20000a73
  427017:	sub    eax,0x72754320
  42701c:	jbe    0x427083
  42701e:	and    BYTE PTR [rbx+0x69],dh
  427021:	jp     0x427088
  427023:	cmp    ah,BYTE PTR [rax]
  427025:	and    eax,0x69622064
  42702a:	je     0x42709f
  42702c:	or     al,BYTE PTR [rax]
  42702e:	add    BYTE PTR [rax],al
  427030:	sub    eax,0x44732520
  427035:	imul   esp,DWORD PTR [rsi+0x66],0x482d6569
  42703c:	gs ins BYTE PTR es:[rdi],dx
  42703e:	ins    BYTE PTR es:[rdi],dx
  42703f:	ins    DWORD PTR es:[rdi],dx
  427040:	(bad)  
  427041:	outs   dx,BYTE PTR ds:[rsi]
  427042:	and    BYTE PTR [rax+0x61],dh
  427045:	jb     0x4270a8
  427047:	ins    DWORD PTR es:[rdi],dx
  427048:	gs je  0x4270b0
  42704b:	jb     0x4270c0
  42704d:	or     al,BYTE PTR [rax]
  42704f:	and    BYTE PTR [rip+0x69735520],ch        # 0x69b5c575
  427055:	outs   dx,BYTE PTR ds:[rsi]
  427056:	and    BYTE PTR [eax+0x72],dh
  42705a:	imul   ebp,DWORD PTR [rbp+0x65],0x6425203a
  427061:	and    BYTE PTR [rdx+0x69],ah
  427064:	je     0x4270d9
  427066:	or     al,BYTE PTR [rax]
  427068:	and    BYTE PTR [rip+0x63655320],ch        # 0x63a7c38e
  42706e:	jb     0x4270d5
  427070:	je     0x427092
  427072:	imul   esp,DWORD PTR [rbp+0x79],0x3a
  427076:	and    BYTE PTR [rip+0x69622064],ah        # 0x69a490e0
  42707c:	je     0x4270f1
  42707e:	or     al,BYTE PTR [rax]
  427080:	and    BYTE PTR [rip+0x65655020],ch        # 0x65a7c0a6
  427086:	jb     0x4270af
  427088:	jae    0x4270aa
  42708a:	jo     0x427101
  42708c:	(bad)  
  42708d:	ins    BYTE PTR es:[rdi],dx
  42708e:	imul   esp,DWORD PTR [rbx+0x20],0x3a79656b
  427095:	and    BYTE PTR [rip+0x69622064],ah        # 0x69a490ff
  42709b:	je     0x427110
  42709d:	or     al,BYTE PTR [rax]
  42709f:	outs   dx,BYTE PTR ds:[esi]
  4270a1:	jne    0x427117
  4270a3:	ins    BYTE PTR es:[rdi],dx
  4270a4:	jae    0x427105
  4270a6:	fs push 0x7465675f
  4270ac:	pop    rdi
  4270ad:	addr32 jb 0x42711f
  4270b0:	jne    0x427122
  4270b2:	and    BYTE PTR [rip+0x67000a64],ah        # 0x67427b1c
  4270b8:	outs   dx,BYTE PTR ds:[rsi]
  4270b9:	jne    0x42712f
  4270bb:	ins    BYTE PTR es:[rdi],dx
  4270bc:	jae    0x42711d
  4270be:	fs push 0x7261705f
  4270c4:	(bad)  
  4270c5:	ins    DWORD PTR es:[rdi],dx
  4270c6:	jae    0x427127
  4270c8:	imul   ebp,DWORD PTR [rsi+0x69],0x64252074
  4270cf:	or     al,BYTE PTR [rax]
  4270d1:	add    BYTE PTR [rax],al
  4270d3:	add    BYTE PTR [rax],al
  4270d5:	add    BYTE PTR [rax],al
  4270d7:	add    BYTE PTR [rdi+0x6e],ah
  4270da:	jne    0x427150
  4270dc:	ins    BYTE PTR es:[rdi],dx
  4270dd:	jae    0x42713e
  4270df:	fs push 0x7261705f
  4270e5:	(bad)  
  4270e6:	ins    DWORD PTR es:[rdi],dx
  4270e7:	jae    0x427148
  4270e9:	imul   ebp,DWORD PTR [rbp+0x70],0x5f74726f
  4270f0:	jb     0x427153
  4270f2:	ja     0x427114
  4270f4:	and    eax,0x67000a64
  4270f9:	outs   dx,BYTE PTR ds:[rsi]
  4270fa:	jne    0x427170
  4270fc:	ins    BYTE PTR es:[rdi],dx
  4270fd:	jae    0x42715e
  4270ff:	fs push 0x7261705f
  427105:	(bad)  
  427106:	ins    DWORD PTR es:[rdi],dx
  427107:	jae    0x427168
  427109:	gs js  0x42717c
  42710c:	outs   dx,DWORD PTR ds:[rsi]
  42710d:	jb     0x427183
  42710f:	pop    rdi
  427110:	jo     0x42717d
  427112:	movsxd esi,DWORD PTR [rbx+0x33]
  427115:	and    BYTE PTR [rip+0x67000a64],ah        # 0x67427b7f
  42711b:	outs   dx,BYTE PTR ds:[rsi]
  42711c:	jne    0x427192
  42711e:	ins    BYTE PTR es:[rdi],dx
  42711f:	jae    0x427180
  427121:	ins    DWORD PTR es:[rdi],dx
  427122:	(bad)  
  427123:	ins    BYTE PTR es:[rdi],dx
  427124:	ins    BYTE PTR es:[rdi],dx
  427125:	outs   dx,DWORD PTR ds:[rsi]
  427126:	movsxd esp,DWORD PTR [rax]
  427128:	and    eax,0xa64
  42712d:	add    BYTE PTR [rax],al
  42712f:	add    BYTE PTR [rdi+0x6e],ah
  427132:	jne    0x4271a8
  427134:	ins    BYTE PTR es:[rdi],dx
  427135:	jae    0x427196
  427137:	fs push 0x7261705f
  42713d:	(bad)  
  42713e:	ins    DWORD PTR es:[rdi],dx
  42713f:	jae    0x4271a0
  427141:	gs js  0x4271b4
  427144:	outs   dx,DWORD PTR ds:[rsi]
  427145:	jb     0x4271bb
  427147:	pop    rdi
  427148:	jo     0x4271b5
  42714a:	movsxd esi,DWORD PTR [rbx+0x33]
  42714d:	sub    eax,0x64252032
  427152:	or     al,BYTE PTR [rax]
  427154:	and    BYTE PTR [rip+0x434b5020],ch        # 0x438dc17a
  42715a:	push   rbx
  42715b:	and    esi,DWORD PTR [rbx]
  42715d:	and    BYTE PTR [rsi+0x6f],ah
  427160:	jb     0x4271cf
  427162:	(bad)  
  427163:	je     0x42719f
  427165:	or     cl,BYTE PTR [rdx]
  427167:	and    eax,0xa732a2e
  42716c:	add    BYTE PTR [rip+0x25583230],ah        # 0x259aa3a2
  427172:	jae    0x427174
  427174:	add    BYTE PTR [rdx],bh
  427176:	add    BYTE PTR [rax],ch
  427178:	gs ins DWORD PTR es:[rdi],dx
  42717a:	jo     0x4271f0
  42717c:	jns    0x4271a7
  42717e:	add    BYTE PTR [rax],ch
  427180:	je     0x4271f1
  427182:	outs   dx,DWORD PTR ds:[rsi]
  427183:	and    BYTE PTR [rcx+riz*2+0x72],ch
  427187:	sub    DWORD PTR gs:[eax],eax
  42718b:	add    BYTE PTR [rax],al
  42718d:	add    BYTE PTR [rax],al
  42718f:	add    BYTE PTR [rip+0x65655020],ch        # 0x65a7c1b5
  427195:	jb     0x4271b7
  427197:	imul   esp,DWORD PTR fs:[rax+riz*1+0x6e],0x7320746f
  4271a0:	outs   dx,BYTE PTR gs:[rsi]
  4271a2:	and    BYTE PTR fs:[rcx+0x6e],ah
  4271a6:	jns    0x4271c8
  4271a8:	movsxd esp,DWORD PTR [rbp+0x72]
  4271ab:	je     0x427216
  4271ad:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4271b3:	or     al,BYTE PTR cs:[rax]
  4271b6:	add    BYTE PTR [rax],al
  4271b8:	sub    eax,0x756f4320
  4271bd:	ins    BYTE PTR es:[rdi],dx
  4271be:	and    BYTE PTR fs:[rsi+0x6f],ch
  4271c2:	je     0x4271e4
  4271c4:	jbe    0x42722b
  4271c6:	jb     0x427231
  4271c8:	data16 jns 0x4271eb
  4271cb:	movsxd esp,DWORD PTR [rbp+0x72]
  4271ce:	je     0x427239
  4271d0:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4271d6:	and    BYTE PTR [rax],ch
  4271d8:	gs jb  0x42724d
  4271db:	cmp    ah,BYTE PTR [rax]
  4271dd:	and    eax,0xa2973
  4271e2:	add    BYTE PTR [rax],al
  4271e4:	add    BYTE PTR [rax],al
  4271e6:	add    BYTE PTR [rax],al
  4271e8:	sub    eax,0x756f4320
  4271ed:	ins    BYTE PTR es:[rdi],dx
  4271ee:	and    BYTE PTR fs:[rsi+0x6f],ch
  4271f2:	je     0x427214
  4271f4:	jo     0x427268
  4271f6:	imul   ebp,DWORD PTR [rsi+0x74],0x72657620
  4271fd:	imul   esp,DWORD PTR [rsi+0x69],0x69746163
  427204:	outs   dx,DWORD PTR ds:[rsi]
  427205:	outs   dx,BYTE PTR ds:[rsi]
  427206:	and    BYTE PTR [rsi+0x6c],ah
  427209:	(bad)  
  42720a:	addr32 jae 0x42722d
  42720d:	sub    BYTE PTR [rbp+0x72],ah
  427210:	jb     0x42724c
  427212:	and    BYTE PTR [rip+0xa2973],ah        # 0x4c9b8b
  427218:	sub    eax,0x61745320
  42721d:	je     0x427294
  42721f:	jae    0x42725b
  427221:	and    BYTE PTR [rip+0xa73],ah        # 0x427c9a
  427227:	add    BYTE PTR [rip+0x72655320],ch        # 0x72a7c54d
  42722d:	jbe    0x427294
  42722f:	jb     0x427251
  427231:	push   0x72207361
  427236:	gs jno 0x4272ae
  427239:	gs jae 0x4272b0
  42723c:	gs and BYTE PTR fs:[rcx+0x20],ah
  427241:	movsxd esp,DWORD PTR [rbp+0x72]
  427244:	je     0x4272af
  427246:	imul   sp,WORD PTR [rbx+0x61],0x6574
  42724c:	or     al,BYTE PTR cs:[rax]
  42724f:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  427251:	and    BYTE PTR [rbx+0x65],ah
  427254:	jb     0x4272ca
  427256:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42725d:	jae    0x42727f
  42725f:	outs   dx,WORD PTR ds:[rsi]
  427261:	jne    0x4272d1
  427263:	and    DWORD PTR fs:[rdx],ecx
  427266:	add    BYTE PTR [rip+0x72654320],ch        # 0x72a7b58c
  42726c:	je     0x4272d7
  42726e:	imul   sp,WORD PTR [rbx+0x61],0x6574
  427274:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  427278:	cmp    ah,BYTE PTR gs:[rax]
  42727b:	pop    rax
  42727c:	cs xor eax,0xa3930
  427282:	add    BYTE PTR [rax],al
  427284:	add    BYTE PTR [rax],al
  427286:	add    BYTE PTR [rax],al
  427288:	sub    eax,0x746f4720
  42728d:	and    BYTE PTR [rcx+0x20],ah
  427290:	movsxd esp,DWORD PTR [rbp+0x72]
  427293:	je     0x4272fe
  427295:	imul   sp,WORD PTR [rbx+0x61],0x6574
  42729b:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  42729f:	je     0x4272c1
  4272a1:	outs   dx,DWORD PTR ds:[rsi]
  4272a2:	data16 and BYTE PTR [rip+0x65632064],ah        # 0x65a5930d
  4272a9:	jb     0x42731f
  4272ab:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4272b2:	jae    0x4272e2
  4272b4:	or     al,BYTE PTR [rax]
  4272b6:	rex.R
  4272b7:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4272bb:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
  4272c2:	outs   dx,DWORD PTR ds:[rsi]
  4272c3:	jb     0x4272ff
  4272c5:	and    BYTE PTR [rip+0x2d000a73],ah        # 0x2d427d3e
  4272cb:	and    BYTE PTR [rbx+0x65],al
  4272ce:	jb     0x427344
  4272d0:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4272d7:	pop    rbx
  4272d8:	and    eax,0x69205d64
  4272dd:	outs   dx,BYTE PTR ds:[rsi]
  4272de:	outs   dx,WORD PTR ds:[rsi]
  4272e0:	cmp    cl,BYTE PTR [rdx]
  4272e2:	and    BYTE PTR [rip+0x73250020],ch        # 0x73677308
  4272e8:	or     al,BYTE PTR [rax]
  4272ea:	outs   dx,BYTE PTR ds:[esi]
  4272ec:	jne    0x427362
  4272ee:	ins    BYTE PTR es:[rdi],dx
  4272ef:	jae    0x427350
  4272f1:	ins    DWORD PTR es:[rdi],dx
  4272f2:	(bad)  
  4272f3:	ins    BYTE PTR es:[rdi],dx
  4272f4:	ins    BYTE PTR es:[rdi],dx
  4272f5:	outs   dx,DWORD PTR ds:[rsi]
  4272f6:	movsxd ecx,DWORD PTR [rdx]
  4272f8:	add    BYTE PTR [rbp+0x6e],al
  4272fb:	movsxd ebp,DWORD PTR [rdi+0x64]
  4272fe:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
  427305:	outs   dx,DWORD PTR ds:[rsi]
  427306:	jb     0x427342
  427308:	and    BYTE PTR [rip+0x2d000a73],ah        # 0x2d427d81
  42730e:	and    BYTE PTR [rbx+0x65],al
  427311:	jb     0x427387
  427313:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42731a:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42731e:	cmp    ah,BYTE PTR gs:[rax]
  427321:	rex.WRXB jo 0x427389
  427324:	outs   dx,BYTE PTR ds:[rsi]
  427325:	push   rax
  427326:	rex.RXB push r8
  427328:	or     al,BYTE PTR [rax]
  42732a:	sub    eax,0xa732520
  42732f:	add    BYTE PTR [rbp+0x6e],dl
  427332:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  427336:	outs   dx,BYTE PTR ds:[rsi]
  427337:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42733b:	or     al,BYTE PTR gs:[rax]
  42733e:	push   rbp
  42733f:	outs   dx,BYTE PTR ds:[rsi]
  427340:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  427344:	outs   dx,BYTE PTR ds:[rsi]
  427345:	add    BYTE PTR [rbx+0x69],bl
  427348:	outs   dx,BYTE PTR ds:[esi]
  42734a:	outs   dx,DWORD PTR ds:[rsi]
  42734b:	jb     0x4273b2
  42734d:	fs pop rbp
  42734f:	add    BYTE PTR [rip+0x73654420],ch        # 0x73a7b775
  427355:	movsxd esi,DWORD PTR [rdx+0x69]
  427358:	jo     0x4273ce
  42735a:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  427361:	or     al,BYTE PTR [rax]
  427363:	sub    eax,0x73655320
  427368:	jae    0x4273d3
  42736a:	outs   dx,DWORD PTR ds:[rsi]
  42736b:	outs   dx,BYTE PTR ds:[rsi]
  42736c:	and    BYTE PTR [rcx+0x44],cl
  42736f:	cmp    ah,BYTE PTR [rax]
  427371:	and    eax,0x41000a73
  427376:	outs   dx,BYTE PTR ds:[rsi]
  427377:	outs   dx,DWORD PTR ds:[rsi]
  427378:	outs   dx,BYTE PTR ds:[rsi]
  427379:	jns    0x4273e8
  42737b:	outs   dx,DWORD PTR ds:[rsi]
  42737c:	jne    0x4273f1
  42737e:	and    BYTE PTR [rax],al
  427380:	sub    eax,0x50525320
  427385:	and    BYTE PTR [rcx+0x75],ah
  427388:	je     0x4273f2
  42738a:	outs   dx,BYTE PTR gs:[rsi]
  42738c:	je     0x4273f7
  42738e:	movsxd esp,DWORD PTR [rcx+0x74]
  427391:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f43202e
  427398:	outs   dx,BYTE PTR ds:[rsi]
  427399:	outs   dx,BYTE PTR ds:[rsi]
  42739a:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42739f:	and    BYTE PTR [rcx+0x73],ah
  4273a2:	and    BYTE PTR [rdi],ah
  4273a4:	and    eax,0xa2773
  4273a9:	add    BYTE PTR [rax],al
  4273ab:	add    BYTE PTR [rax],al
  4273ad:	add    BYTE PTR [rax],al
  4273af:	add    BYTE PTR [rip+0x4b535020],ch        # 0x4b95c3d5
  4273b5:	and    BYTE PTR [rcx+0x75],ah
  4273b8:	je     0x427422
  4273ba:	outs   dx,BYTE PTR gs:[rsi]
  4273bc:	je     0x427427
  4273be:	movsxd esp,DWORD PTR [rcx+0x74]
  4273c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x5350202e
  4273c8:	rex.WXB and BYTE PTR [r8+0x69],bpl
  4273cc:	outs   dx,BYTE PTR ds:[rsi]
  4273cd:	je     0x4273ef
  4273cf:	(bad)  
  4273d0:	and    eax,0xa2773
  4273d5:	add    BYTE PTR [rax],al
  4273d7:	add    BYTE PTR [rip+0x4b535020],ch        # 0x4b95c3fd
  4273dd:	and    BYTE PTR [rcx+0x75],ah
  4273e0:	je     0x42744a
  4273e2:	outs   dx,BYTE PTR gs:[rsi]
  4273e4:	je     0x42744f
  4273e6:	movsxd esp,DWORD PTR [rcx+0x74]
  4273e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f43202e
  4273f0:	outs   dx,BYTE PTR ds:[rsi]
  4273f1:	outs   dx,BYTE PTR ds:[rsi]
  4273f2:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4273f7:	and    BYTE PTR [rcx+0x73],ah
  4273fa:	and    BYTE PTR [rdi],ah
  4273fc:	and    eax,0xa2773
  427401:	rex.RB jo 0x42746c
  427404:	gs ins DWORD PTR es:[rdi],dx
  427406:	gs jb  0x42746a
  427409:	ins    BYTE PTR es:[rdi],dx
  42740a:	and    BYTE PTR [rax],al
  42740c:	sub    eax,0x534c5420
  427411:	(bad)  
  427412:	rex.WB
  427413:	and    BYTE PTR [r9+0x75],spl
  427417:	je     0x427481
  427419:	outs   dx,BYTE PTR gs:[rsi]
  42741b:	je     0x427486
  42741d:	movsxd esp,DWORD PTR [rcx+0x74]
  427420:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d000a
  427427:	rex.RXB imul r14d,DWORD PTR [r14+0x65],0x6573206e
  42742f:	jb     0x4274a7
  427431:	gs jb  0x427454
  427434:	outs   dx,BYTE PTR ds:[rsi]
  427435:	(bad)  
  427436:	ins    DWORD PTR es:[rdi],dx
  427437:	gs pop rbx
  427439:	and    eax,0x203a5d64
  42743e:	and    eax,0xa73
  427443:	add    BYTE PTR [rax],al
  427445:	add    BYTE PTR [rax],al
  427447:	add    BYTE PTR [rip+0x206f4e20],ch        # 0x20b1c26d
  42744d:	movsxd esp,DWORD PTR [rbp+0x72]
  427450:	je     0x4274bb
  427452:	imul   sp,WORD PTR [rbx+0x61],0x6574
  427458:	and    BYTE PTR [rdi+0x61],dh
  42745b:	jae    0x42747d
  42745d:	jae    0x4274c4
  42745f:	outs   dx,BYTE PTR ds:[rsi]
  427460:	je     0x427482
  427462:	je     0x4274d3
  427464:	and    BYTE PTR [rax+0x65],dh
  427467:	gs jb  0x427474
  42746a:	add    BYTE PTR [rip+0x72655620],ch        # 0x72a7ca90
  427470:	jae    0x4274db
  427472:	outs   dx,DWORD PTR ds:[rsi]
  427473:	outs   dx,BYTE PTR ds:[rsi]
  427474:	cmp    ah,BYTE PTR [rax]
  427476:	and    eax,0x2d000a73
  42747b:	and    BYTE PTR [rbx+0x65],cl
  42747e:	jns    0x4274a0
  427480:	rex.RB js 0x4274e6
  427483:	push   0x65676e61
  427488:	cmp    ah,BYTE PTR [rax]
  42748a:	and    eax,0x2d000a73
  42748f:	and    BYTE PTR [rbx+0x65],dl
  427492:	jb     0x42750a
  427494:	gs jb  0x4274b7
  427497:	push   rbx
  427498:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
  42749f:	cmp    ah,BYTE PTR gs:[rax]
  4274a2:	and    eax,0x2d000a73
  4274a7:	and    BYTE PTR [rbx+0x6c],al
  4274aa:	imul   esp,DWORD PTR [rbp+0x6e],0x69532074
  4274b1:	outs   dx,BYTE PTR ds:[esi]
  4274b3:	(bad)  
  4274b4:	je     0x42752b
  4274b6:	jb     0x42751d
  4274b8:	cmp    ah,BYTE PTR [rax]
  4274ba:	and    eax,0x2d000a73
  4274bf:	and    BYTE PTR [rbx+0x69],al
  4274c2:	jo     0x42752c
  4274c4:	gs jb  0x427501
  4274c7:	and    BYTE PTR [rip+0x2d000a73],ah        # 0x2d427f40
  4274cd:	and    BYTE PTR [rbp+0x41],cl
  4274d0:	rex.XB cmp spl,BYTE PTR [r8]
  4274d3:	and    eax,0x2d000a73
  4274d8:	and    BYTE PTR [rbx+0x6f],al
  4274db:	ins    DWORD PTR es:[rdi],dx
  4274dc:	jo     0x427550
  4274de:	gs jae 0x427554
  4274e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  4274e8:	or     al,BYTE PTR [rax]
  4274ea:	sub    eax,0x74704f20
  4274ef:	imul   ebp,DWORD PTR [rdi+0x6e],0x20003a73
  4274f6:	gs js  0x42756d
  4274f9:	outs   dx,BYTE PTR gs:[rsi]
  4274fb:	fs gs and BYTE PTR fs:[rbp+0x61],ch
  427501:	jae    0x427577
  427503:	gs jb  0x427526
  427506:	jae    0x42756d
  427508:	movsxd esi,DWORD PTR [rdx+0x65]
  42750b:	je     0x427539
  42750d:	add    BYTE PTR [rax],ah
  42750f:	jae    0x427572
  427511:	data16 and BYTE PTR gs:[rdx+0x65],dh
  427516:	outs   dx,BYTE PTR ds:[rsi]
  427517:	outs   dx,DWORD PTR gs:[esi]
  42751a:	je     0x427585
  42751c:	(bad)  
  42751d:	je     0x427588
  42751f:	outs   dx,DWORD PTR ds:[rsi]
  427520:	outs   dx,BYTE PTR ds:[rsi]
  427521:	sub    al,0x0
  427523:	and    BYTE PTR [rbp+0x74],al
  427526:	rex.WRB sub al,0x0
  427529:	and    BYTE PTR [rdi+0x43],cl
  42752c:	push   rbx
  42752d:	push   rax
  42752e:	and    BYTE PTR [rbx+0x74],dh
  427531:	(bad)  
  427532:	je     0x4275a9
  427534:	jae    0x427556
  427536:	jb     0x42759d
  427538:	jno    0x4275af
  42753a:	gs jae 0x4275b1
  42753d:	and    eax,0xa002c73
  427542:	add    BYTE PTR [rip+0x54525320],ch        # 0x5494c868
  427548:	push   rax
  427549:	and    BYTE PTR [rax+0x72],dh
  42754c:	outs   dx,DWORD PTR ds:[rsi]
  42754d:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x2520
  427554:	jae    0x427560
  427556:	add    BYTE PTR [rip+0x70704120],ch        # 0x70b2b67c
  42755c:	ins    BYTE PTR es:[rdi],dx
  42755d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  427564:	and    BYTE PTR [rax+0x72],dh
  427567:	outs   dx,DWORD PTR ds:[rsi]
  427568:	je     0x4275d9
  42756a:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42756d:	cmp    ah,BYTE PTR [rax]
  42756f:	and    eax,0xa732a2e
  427574:	add    BYTE PTR [rbx+0x68],al
  427577:	(bad)  
  427578:	outs   dx,BYTE PTR ds:[rsi]
  427579:	outs   dx,BYTE PTR ds:[rsi]
  42757a:	gs ins BYTE PTR es:[rdi],dx
  42757c:	and    BYTE PTR [rdx+0x69],ah
  42757f:	outs   dx,BYTE PTR ds:[rsi]
  427580:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x72726520
  427588:	outs   dx,DWORD PTR ds:[rsi]
  427589:	jb     0x4275c5
  42758b:	and    BYTE PTR [rip+0x2d000a73],ah        # 0x2d428004
  427591:	and    BYTE PTR [rbx+0x68],al
  427594:	(bad)  
  427595:	outs   dx,BYTE PTR ds:[rsi]
  427596:	outs   dx,BYTE PTR ds:[rsi]
  427597:	gs ins BYTE PTR es:[rdi],dx
  427599:	and    BYTE PTR [rdx+0x69],ah
  42759c:	outs   dx,BYTE PTR ds:[rsi]
  42759d:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c742720
  4275a5:	jae    0x4275d4
  4275a7:	jne    0x427617
  4275a9:	imul   esi,DWORD PTR [rcx+0x75],0x203a2765
  4275b0:	add    BYTE PTR [rip+0x783230],ah        # 0xbaa7e6
  4275b6:	add    BYTE PTR [rax],al
  4275b8:	add    eax,0x9cfffddf
  4275bd:	loop   0x4275bc
  4275bf:	call   FWORD PTR [rax]
  4275c1:	jrcxz  0x4275c0
  4275c3:	dec    DWORD PTR [rax-0x1d]
  4275c6:	std    
  4275c7:	dec    DWORD PTR [rax-0x600021d]
  4275cd:	fdivp  st(5),st
  4275cf:	jmp    FWORD PTR [rip+0x352e5820]        # 0x3570cdf5
  4275d5:	xor    BYTE PTR [rcx],bh
  4275d7:	and    BYTE PTR [rbx+0x65],ah
  4275da:	jb     0x427650
  4275dc:	cmp    ah,BYTE PTR [rax]
  4275de:	and    eax,0x2d000a73
  4275e3:	and    BYTE PTR [rdi+0x70],cl
  4275e6:	outs   dx,BYTE PTR gs:[rsi]
  4275e8:	push   rax
  4275e9:	rex.RXB push r8
  4275eb:	and    BYTE PTR [rbx+0x65],ah
  4275ee:	jb     0x427664
  4275f0:	cmp    ah,BYTE PTR [rax]
  4275f2:	and    eax,0x43000a73
  4275f7:	imul   esi,DWORD PTR [rax+0x68],0x73207265
  4275fe:	jne    0x427669
  427600:	je     0x427667
  427602:	jae    0x427624
  427604:	outs   dx,WORD PTR ds:[rsi]
  427606:	jb     0x427628
  427608:	and    eax,0x53000a73
  42760d:	jns    0x42767d
  42760f:	je     0x427672
  427611:	js     0x427633
  427613:	gs jb  0x427688
  427616:	outs   dx,DWORD PTR ds:[rsi]
  427617:	jb     0x427639
  427619:	(bad)  
  42761a:	je     0x427656
  42761c:	and    BYTE PTR [rip+0x25000a73],ah        # 0x25428095
  427622:	sub    eax,0x9733035
  427627:	xor    BYTE PTR [rax+0x25],bh
  42762a:	xor    BYTE PTR [rdx],dh
  42762c:	js     0x42765a
  42762e:	and    BYTE PTR [rax],dh
  427630:	js     0x427657
  427632:	xor    BYTE PTR [rdx],dh
  427634:	js     0x42763f
  427636:	and    eax,0x43000a73
  42763b:	gs jb  0x4276b2
  42763e:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  427645:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  427649:	gs jae 0x427686
  42764c:	and    BYTE PTR [rax],al
  42764e:	outs   dx,BYTE PTR ds:[rsi]
  42764f:	outs   dx,DWORD PTR ds:[rsi]
  427650:	outs   dx,BYTE PTR ds:[rsi]
  427651:	or     al,BYTE PTR gs:[rax]
  427654:	rex.XB push r12
  427656:	pop    rcx
  427657:	push   rax
  427658:	rex.RB sub eax,0x2c007325
  42765e:	and    BYTE PTR [rax],al
  427660:	push   rax
  427661:	jb     0x4276d2
  427663:	je     0x4276d4
  427665:	movsxd ebp,DWORD PTR [rdi+0x6c]
  427668:	jae    0x4276a4
  42766a:	and    BYTE PTR [rax],al
  42766c:	push   rsi
  42766d:	rex.RB push r10
  42766f:	push   rbx
  427670:	sub    eax,0x43007325
  427675:	outs   dx,DWORD PTR ds:[rsi]
  427676:	ins    DWORD PTR es:[rdi],dx
  427677:	jo     0x4276eb
  427679:	gs jae 0x4276ef
  42767c:	imul   ebp,DWORD PTR [rdi+0x6e],0x4300203a
  427683:	rex.WRXB
  427684:	rex.WRB push r8
  427686:	sub    eax,0x45007325
  42768b:	ins    BYTE PTR es:[rdi],dx
  42768c:	ins    BYTE PTR es:[rdi],dx
  42768d:	imul   esi,DWORD PTR [rax+0x74],0x63206369
  427694:	jne    0x427708
  427696:	jbe    0x4276fd
  427698:	jae    0x4276d4
  42769a:	and    BYTE PTR [rax],al
  42769c:	rex.XB push r13
  42769e:	push   rdx
  42769f:	push   rsi
  4276a0:	rex.RB sub eax,0x50007325
  4276a6:	rex.WXB sub rax,0x6e676973
  4276ac:	(bad)  
  4276ad:	je     0x427724
  4276af:	jb     0x427716
  4276b1:	jae    0x4276ed
  4276b3:	and    BYTE PTR [rax],al
  4276b5:	push   rbx
  4276b6:	rex.WB
  4276b7:	rex.RXB
  4276b8:	rex.WRX sub rax,0x43007325
  4276be:	imul   esi,DWORD PTR [rax+0x68],0x73207265
  4276c5:	jne    0x427730
  4276c7:	je     0x42772e
  4276c9:	jae    0x427705
  4276cb:	or     al,BYTE PTR [rax]
  4276cd:	add    BYTE PTR [rax],al
  4276cf:	add    BYTE PTR [rcx],cl
  4276d1:	rex.WXB
  4276d2:	gs jns 0x4276f5
  4276d5:	gs js  0x42773b
  4276d8:	push   0x65676e61
  4276dd:	cmp    ah,BYTE PTR [rax]
  4276df:	and    eax,0x43090a73
  4276e4:	imul   esi,DWORD PTR [rax+0x68],0x203a7265
  4276eb:	and    eax,0x4d090a73
  4276f0:	rex.B
  4276f1:	rex.XB cmp spl,BYTE PTR [r8]
  4276f4:	and    eax,0xa0a73
  4276f9:	rex.XB imul esi,DWORD PTR [r8+0x68],0x3a737265
  427701:	and    BYTE PTR [rax],al
  427703:	rex.WRB
  427704:	rex.B
  427705:	rex.XB jae 0x427742
  427708:	and    BYTE PTR [rax],al
  42770a:	and    eax,0x69440073
  42770f:	addr32 gs jae 0x427787
  427713:	jae    0x42774f
  427715:	and    BYTE PTR [rax],al
  427717:	rex.WXB
  427718:	gs jns 0x42773b
  42771b:	gs js  0x427781
  42771e:	push   0x65676e61
  427723:	and    BYTE PTR [rcx+0x6c],ah
  427726:	outs   dx,DWORD PTR ds:[esi]
  427728:	jb     0x427793
  42772a:	je     0x427794
  42772c:	ins    DWORD PTR es:[rdi],dx
  42772d:	jae    0x427769
  42772f:	and    BYTE PTR [rax],al
  427731:	push   rax
  427732:	jne    0x427796
  427734:	ins    BYTE PTR es:[rdi],dx
  427735:	imul   esp,DWORD PTR [rbx+0x20],0x2079654b
  42773c:	push   rbx
  42773d:	jns    0x4277b2
  42773f:	je     0x4277a6
  427741:	ins    DWORD PTR es:[rdi],dx
  427742:	jae    0x42777e
  427744:	and    BYTE PTR [rax],al
  427746:	add    BYTE PTR [rax],al
  427748:	sub    ch,BYTE PTR [rdx]
  42774a:	sub    ah,BYTE PTR [rax]
  42774c:	push   rax
  42774d:	jb     0x4277be
  42774f:	movsxd esp,DWORD PTR [rbp+0x73]
  427752:	jae    0x4277bd
  427754:	outs   dx,BYTE PTR ds:[rsi]
  427755:	and    BYTE PTR [eip+0x79622075],ah        # 0x79a497d1
  42775c:	je     0x4277c3
  42775e:	jae    0x427780
  427760:	movsxd ebp,DWORD PTR [rdi+0x6d]
  427763:	ins    DWORD PTR es:[rdi],dx
  427764:	(bad)  
  427765:	outs   dx,BYTE PTR ds:[rsi]
  427766:	cmp    ah,BYTE PTR fs:[rax]
  427769:	and    eax,0x2a000a73
  42776e:	sub    dl,BYTE PTR [rdx+0x45]
  427771:	rex.W
  427772:	rex.B
  427773:	rex.WRX
  427774:	rex.R push rbx
  427776:	rex.W
  427777:	rex.B
  427778:	rex.WXB
  427779:	sub    r13b,BYTE PTR [r10]
  42777c:	add    BYTE PTR [rax],al
  42777e:	add    BYTE PTR [rax],al
  427780:	sub    ch,BYTE PTR [rdx]
  427782:	sub    ah,BYTE PTR [rax]
  427784:	push   rbx
  427785:	outs   dx,BYTE PTR gs:[rsi]
  427787:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x68657220
  42778f:	(bad)  
  427790:	outs   dx,BYTE PTR ds:[rsi]
  427791:	fs jae 0x4277fc
  427794:	(bad)  
  427795:	imul   esp,DWORD PTR [rbp+0x20],0x72
  427799:	gs jno 0x427811
  42779c:	gs jae 0x427813
  42779f:	or     al,BYTE PTR [rax]
  4277a1:	sub    ch,BYTE PTR [rdx]
  4277a3:	rex.W
  4277a4:	rex.RB
  4277a5:	push   r10
  4277a7:	push   rsp
  4277a8:	rex.X
  4277a9:	rex.RB
  4277aa:	push   r12
  4277ac:	sub    ch,BYTE PTR [rdx]
  4277ae:	add    BYTE PTR [rsi+0x6f],cl
  4277b1:	and    BYTE PTR [rax+0x65],ch
  4277b4:	(bad)  
  4277b5:	jb     0x42782b
  4277b7:	(bad)  
  4277b8:	gs (bad) 
  4277ba:	je     0x4277dc
  4277bc:	imul   ebp,DWORD PTR [rsi+0x20],0x73696874
  4277c3:	and    BYTE PTR [rbx+0x65],dh
  4277c6:	jae    0x42783b
  4277c8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6970000a
  4277cf:	outs   dx,BYTE PTR ds:[rsi]
  4277d0:	cmp    ah,BYTE PTR [eax]
  4277d3:	and    eax,0x47000a73
  4277d8:	rex.WRX push rbp
  4277da:	push   rsp
  4277db:	rex.WR push rbx
  4277dd:	pop    rdi
  4277de:	push   rbx
  4277df:	rex.WRXB pop r15
  4277e1:	push   rax
  4277e2:	rex.WB
  4277e3:	rex.WRX add BYTE PTR [rbx+0x65],r14b
  4277e7:	movsxd esi,DWORD PTR [rbp+0x72]
  4277ea:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x6966666f
  4277f2:	movsxd esp,DWORD PTR [rbp+0x72]
  4277f5:	add    BYTE PTR [rdi+0x4e],al
  4277f8:	push   rbp
  4277f9:	push   rsp
  4277fa:	rex.WR push rbx
  4277fc:	pop    rdi
  4277fd:	push   rax
  4277fe:	rex.WB
  4277ff:	rex.WRX add BYTE PTR [rbp+0x73],r14b
  427803:	gs jb  0x427806
  427806:	add    BYTE PTR [rax],al
  427808:	sub    ch,BYTE PTR [rdx]
  42780a:	sub    ah,BYTE PTR [rax]
  42780c:	push   rsp
  42780d:	push   0x69207369
  427812:	jae    0x427834
  427814:	je     0x42787e
  427816:	and    BYTE PTR gs:[rsi+0x69],ah
  42781a:	outs   dx,BYTE PTR ds:[rsi]
  42781b:	(bad)  
  42781c:	ins    BYTE PTR es:[rdi],dx
  42781d:	and    BYTE PTR [rdx+rsi*2+0x79],dh
  427821:	and    BYTE PTR [rdx+0x65],ah
  427824:	outs   dx,WORD PTR ds:[rsi]
  427826:	jb     0x42788d
  427828:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  42782c:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  427830:	and    DWORD PTR [rdx],ecx
  427832:	add    BYTE PTR [rax],al
  427834:	add    BYTE PTR [rax],al
  427836:	add    BYTE PTR [rax],al
  427838:	sub    ch,BYTE PTR [rdx]
  42783a:	sub    ah,BYTE PTR [rax]
  42783c:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
  42783e:	ins    BYTE PTR es:[rdi],dx
  42783f:	jns    0x427861
  427841:	data16 gs ja 0x427865
  427845:	je     0x4278b9
  427847:	imul   esp,DWORD PTR [rbp+0x73],0x66656c20
  42784e:	je     0x427870
  427850:	(bad)  
  427851:	outs   dx,WORD PTR gs:[rsi]
  427854:	jb     0x4278bb
  427856:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  42785a:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  42785e:	and    DWORD PTR [rdx],ecx
	...
  427868:	sub    ch,BYTE PTR [rdx]
  42786a:	sub    ah,BYTE PTR [rax]
  42786c:	push   rdi
  42786d:	jb     0x4278de
  42786f:	outs   dx,BYTE PTR ds:[rsi]
  427870:	and    BYTE PTR [eax+0x49],dl
  427874:	rex.WRX and BYTE PTR [rax+0x61],r13b
  427878:	jae    0x42789a
  42787a:	(bad)  
  42787b:	gs outs dx,BYTE PTR gs:[rsi]
  42787e:	and    BYTE PTR [rax+0x72],dh
  427881:	outs   dx,DWORD PTR ds:[rsi]
  427882:	jbe    0x4278ed
  427884:	fs gs and DWORD PTR fs:[rdx],ecx
  427889:	add    BYTE PTR [rdi+rbp*2+0x6b],dl
  42788d:	outs   dx,BYTE PTR gs:[rsi]
  42788f:	and    BYTE PTR [rdi],ah
  427891:	and    eax,0x77202773
  427896:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x204c5255
  42789e:	(bad)  
  42789f:	and    eax,0x202773
  4278a4:	jb     0x42790b
  4278a6:	jno    0x42791d
  4278a8:	imul   esi,DWORD PTR [rdx+0x65],0x73252073
  4278af:	and    BYTE PTR [rax+0x49],dl
  4278b2:	rex.WRX or r8b,BYTE PTR [rax]
  4278b5:	push   rsp
  4278b6:	outs   dx,DWORD PTR ds:[rsi]
  4278b7:	outs   dx,DWORD PTR ds:[rsi]
  4278b8:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  4278bc:	and    BYTE PTR [eax+0x49],dl
  4278c0:	rex.WRX and BYTE PTR [rdi+0x69],r12b
  4278c4:	jbe    0x42792b
  4278c6:	outs   dx,BYTE PTR ds:[rsi]
  4278c7:	or     al,BYTE PTR [rax]
  4278c9:	add    BYTE PTR [rax],al
  4278cb:	add    BYTE PTR [rax],al
  4278cd:	add    BYTE PTR [rax],al
  4278cf:	add    BYTE PTR [rdx+0x65],dl
  4278d2:	sub    eax,0x6e697375
  4278d7:	and    BYTE PTR [ebx+0x61],ah
  4278db:	movsxd ebp,DWORD PTR [rax+0x65]
  4278de:	and    BYTE PTR fs:[rax+0x49],dl
  4278e2:	rex.WRX and BYTE PTR [rsi+0x6f],r12b
  4278e6:	jb     0x427908
  4278e8:	je     0x427959
  4278ea:	imul   esp,DWORD PTR [rbp+0x6e],0x20
  4278ee:	(bad)  
  4278ef:	and    eax,0xa2773
  4278f4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4278f6:	and    BYTE PTR [rax+0x49],dl
  4278f9:	rex.WRX and BYTE PTR [rdi+0x69],r12b
  4278fd:	jbe    0x427964
  4278ff:	outs   dx,BYTE PTR ds:[rsi]
  427900:	or     al,BYTE PTR cs:[rax]
  427903:	add    BYTE PTR [rax],al
  427905:	add    BYTE PTR [rax],al
  427907:	add    BYTE PTR [rbx+0x61],al
  42790a:	outs   dx,BYTE PTR ds:[rsi]
  42790b:	outs   dx,BYTE PTR ds:[rsi]
  42790c:	outs   dx,DWORD PTR ds:[rsi]
  42790d:	je     0x42792f
  42790f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  427912:	je     0x42797d
  427914:	outs   dx,BYTE PTR ds:[rsi]
  427915:	jne    0x42797c
  427917:	and    BYTE PTR [rdi+0x69],dh
  42791a:	je     0x427984
  42791c:	and    BYTE PTR [rcx+0x20],ah
  42791f:	ja     0x427993
  427921:	outs   dx,DWORD PTR ds:[rsi]
  427922:	outs   dx,BYTE PTR ds:[rsi]
  427923:	and    BYTE PTR [eax+0x61],dh
  427927:	jae    0x42799c
  427929:	ja     0x42799a
  42792b:	jb     0x427991
  42792d:	and    BYTE PTR [rcx+0x6e],ch
  427930:	and    BYTE PTR [rax+rbp*2+0x65],dh
  427934:	and    BYTE PTR [rbp+0x6e],ah
  427937:	jbe    0x4279a2
  427939:	jb     0x4279aa
  42793b:	outs   dx,BYTE PTR ds:[rsi]
  42793c:	ins    DWORD PTR es:[rdi],dx
  42793d:	outs   dx,BYTE PTR gs:[rsi]
  42793f:	je     0x42796f
  427941:	or     al,BYTE PTR [rax]
  427943:	add    BYTE PTR [rax],al
  427945:	add    BYTE PTR [rax],al
  427947:	add    BYTE PTR [rsi+0x6f],ch
  42794a:	je     0x4279b1
  42794c:	cmp    ah,BYTE PTR [rax]
  42794e:	ja     0x4279b8
  427950:	outs   dx,BYTE PTR gs:[rsi]
  427952:	and    BYTE PTR [rdi+0x70],ch
  427955:	gs jb  0x4279b9
  427958:	je     0x4279c3
  42795a:	outs   dx,BYTE PTR ds:[rsi]
  42795b:	and    BYTE PTR [ecx+0x6e],ch
  42795f:	and    BYTE PTR [rdx+0x61],ah
  427962:	je     0x4279c7
  427964:	push   0x646f6d20
  427969:	gs sub al,0x20
  42796c:	jae    0x4279d3
  42796e:	je     0x427990
  427970:	je     0x4279da
  427972:	and    BYTE PTR gs:[rdi+0x4e],al
  427976:	push   rbp
  427977:	push   rsp
  427978:	rex.WR push rbx
  42797a:	pop    rdi
  42797b:	push   rax
  42797c:	rex.WB
  42797d:	rex.WRX and BYTE PTR [rdi+0x72],r13b
  427981:	and    BYTE PTR [rdi+0x4e],al
  427984:	push   rbp
  427985:	push   rsp
  427986:	rex.WR push rbx
  427988:	pop    rdi
  427989:	push   rbx
  42798a:	rex.WRXB pop r15
  42798c:	push   rax
  42798d:	rex.WB
  42798e:	rex.WRX and BYTE PTR [rbp+0x6e],r12b
  427992:	jbe    0x4279fd
  427994:	jb     0x427a05
  427996:	outs   dx,BYTE PTR ds:[rsi]
  427997:	ins    DWORD PTR es:[rdi],dx
  427998:	outs   dx,BYTE PTR gs:[rsi]
  42799a:	je     0x4279bc
  42799c:	jbe    0x4279ff
  42799e:	jb     0x427a09
  4279a0:	(bad)  
  4279a1:	(bad)  
  4279a2:	ins    BYTE PTR es:[rdi],dx
  4279a3:	gs jae 0x4279b0
  4279a6:	add    BYTE PTR [rbp+0x6e],al
  4279a9:	je     0x427a10
  4279ab:	jb     0x4279cd
  4279ad:	push   rax
  4279ae:	rex.WB
  4279af:	rex.WRX cmp r12b,BYTE PTR [rax]
  4279b2:	add    BYTE PTR [rax],ch
  4279b4:	jne    0x427a24
  4279b6:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4279ba:	outs   dx,BYTE PTR ds:[rsi]
  4279bb:	sub    DWORD PTR [rax],eax
  4279bd:	add    BYTE PTR [rax],al
  4279bf:	add    BYTE PTR [rax],al
  4279c1:	add    BYTE PTR [rax],al
  4279c3:	add    BYTE PTR [rdi],cl
  4279c5:	(bad)  
  4279c6:	add    BYTE PTR [rax],al
  4279c8:	add    BYTE PTR [rax],al
  4279ca:	add    BYTE PTR [rax],al
  4279cc:	push   0x42
	...
  4279fd:	add    BYTE PTR [rax],al
  4279ff:	add    BYTE PTR [rdi+0x6e],ah
  427a02:	jne    0x427a78
  427a04:	ins    BYTE PTR es:[rdi],dx
  427a05:	jae    0x427a34
  427a07:	jae    0x427a6e
  427a09:	jb     0x427a81
  427a0b:	and    BYTE PTR [rbx],dh
  427a0d:	cs xor al,0x2e
  427a10:	xor    DWORD PTR [rdi],esi
  427a12:	or     al,BYTE PTR [rbx+0x6f]
  427a15:	jo     0x427a90
  427a17:	jb     0x427a82
  427a19:	addr32 push 0x43282074
  427a1f:	sub    DWORD PTR [rax],esp
  427a21:	xor    dh,BYTE PTR [rax]
  427a23:	xor    BYTE PTR [rax],dh
  427a25:	sub    eax,0x36313032
  427a2a:	and    BYTE PTR [rsi+0x72],al
  427a2d:	gs and BYTE PTR gs:[rbx+0x6f],dl
  427a32:	data16 je 0x427aac
  427a35:	(bad)  
  427a36:	jb     0x427a9d
  427a38:	and    BYTE PTR [rsi+0x6f],al
  427a3b:	jne    0x427aab
  427a3d:	fs (bad) 
  427a3f:	je     0x427aaa
  427a41:	outs   dx,DWORD PTR ds:[rsi]
  427a42:	outs   dx,BYTE PTR ds:[rsi]
  427a43:	sub    al,0x20
  427a45:	(bad)  
  427a46:	outs   dx,BYTE PTR ds:[rsi]
  427a47:	and    BYTE PTR fs:[rdi+0x74],ch
  427a4b:	push   0x2c737265
  427a50:	and    BYTE PTR [rcx+0x6c],ah
  427a53:	ins    BYTE PTR es:[rdi],dx
  427a54:	and    BYTE PTR [rdx+0x69],dh
  427a57:	addr32 push 0x72207374
  427a5d:	gs jae 0x427ac5
  427a60:	jb     0x427ad8
  427a62:	gs fs or dl,BYTE PTR cs:[rax+rbp*2+0x69]
  427a69:	jae    0x427a8b
  427a6b:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  427a72:	and    BYTE PTR [rbx+0x6f],dh
  427a75:	data16 je 0x427aef
  427a78:	(bad)  
  427a79:	jb     0x427ae0
  427a7b:	and    BYTE PTR cs:[rcx+0x74],cl
  427a7f:	and    BYTE PTR [rcx+0x73],ch
  427a82:	and    BYTE PTR [rcx+rbp*2+0x63],ch
  427a86:	outs   dx,BYTE PTR gs:[rsi]
  427a88:	jae    0x427aef
  427a8a:	and    BYTE PTR fs:[rsi+0x6f],ah
  427a8e:	jb     0x427ab0
  427a90:	jne    0x427b05
  427a92:	gs sub al,0x20
  427a95:	ins    DWORD PTR es:[rdi],dx
  427a96:	outs   dx,DWORD PTR ds:[rsi]
  427a97:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  427a9f:	outs   dx,DWORD PTR ds:[rsi]
  427aa0:	outs   dx,BYTE PTR ds:[rsi]
  427aa1:	and    BYTE PTR [rcx+0x6e],ah
  427aa4:	or     dh,BYTE PTR fs:[rdx+0x65]
  427aa8:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  427ab0:	je     0x427b1b
  427ab2:	outs   dx,DWORD PTR ds:[rsi]
  427ab3:	outs   dx,BYTE PTR ds:[rsi]
  427ab4:	and    BYTE PTR [rbp+0x6e],dh
  427ab7:	fs gs jb 0x427adb
  427abb:	je     0x427b25
  427abd:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  427ac2:	ins    DWORD PTR es:[rdi],dx
  427ac3:	jae    0x427ae5
  427ac5:	outs   dx,DWORD PTR ds:[rsi]
  427ac6:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  427acb:	and    BYTE PTR [rdi+0x4e],al
  427ace:	push   rbp
  427acf:	and    BYTE PTR [rdi+0x65],al
  427ad2:	outs   dx,BYTE PTR ds:[rsi]
  427ad3:	gs jb  0x427b37
  427ad6:	ins    BYTE PTR es:[rdi],dx
  427ad7:	and    BYTE PTR [rax+0x75],dl
  427ada:	(bad)  
  427adb:	ins    BYTE PTR es:[rdi],dx
  427adc:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  427ae3:	outs   dx,BYTE PTR ds:[rsi]
  427ae4:	jae    0x427b4b
  427ae6:	sub    al,0xa
  427ae8:	jbe    0x427b4f
  427aea:	jb     0x427b5f
  427aec:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  427af3:	jb     0x427b15
  427af5:	ins    BYTE PTR es:[rdi],dx
  427af6:	(bad)  
  427af7:	je     0x427b5e
  427af9:	jb     0x427b1b
  427afb:	cmp    al,0x68
  427afd:	je     0x427b73
  427aff:	jo     0x427b3b
  427b01:	(bad)  
  427b02:	(bad)  
  427b03:	outs   dx,BYTE PTR ds:[esi]
  427b05:	jne    0x427b35
  427b07:	outs   dx,DWORD PTR ds:[rsi]
  427b08:	jb     0x427b71
  427b0a:	(bad)  
  427b0b:	ins    BYTE PTR es:[rdi],dx
  427b0c:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  427b13:	(bad)  
  427b14:	addr32 jo 0x427b83
  427b17:	cs push 0x3e6c6d74
  427b1d:	or     al,BYTE PTR [rax]
  427b1f:	outs   dx,BYTE PTR ds:[esi]
  427b21:	jne    0x427b97
  427b23:	ins    BYTE PTR es:[rdi],dx
  427b24:	jae    0x427b53
  427b26:	jae    0x427b8d
  427b28:	jb     0x427ba0
  427b2a:	and    BYTE PTR [rcx+0x73],ch
  427b2d:	and    BYTE PTR [rsi+0x72],ah
  427b30:	gs and BYTE PTR gs:[rbx+0x6f],dh
  427b35:	data16 je 0x427baf
  427b38:	(bad)  
  427b39:	jb     0x427ba0
  427b3b:	cmp    ah,BYTE PTR [rax]
  427b3d:	jns    0x427bae
  427b3f:	jne    0x427b61
  427b41:	movsxd esp,DWORD PTR [rcx+0x6e]
  427b44:	and    BYTE PTR [rdx+0x65],dh
  427b47:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  427b4f:	je     0x427bb6
  427b51:	and    BYTE PTR [rcx+0x74],ch
  427b54:	and    BYTE PTR [rcx+0x6e],ah
  427b57:	fs (bad) 
  427b59:	outs   dx,DWORD PTR ds:[rsi]
  427b5a:	jb     0x427b7c
  427b5c:	ins    DWORD PTR es:[rdi],dx
  427b5d:	outs   dx,DWORD PTR ds:[rsi]
  427b5e:	imul   esp,DWORD PTR fs:[rsi+0x79],0xa746920
  427b66:	jne    0x427bd6
  427b68:	fs gs jb 0x427b8c
  427b6c:	je     0x427bd6
  427b6e:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  427b73:	ins    DWORD PTR es:[rdi],dx
  427b74:	jae    0x427b96
  427b76:	outs   dx,DWORD PTR ds:[rsi]
  427b77:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  427b7c:	and    BYTE PTR [rdi+0x4e],al
  427b7f:	push   rbp
  427b80:	and    BYTE PTR [rdi+0x65],al
  427b83:	outs   dx,BYTE PTR ds:[rsi]
  427b84:	gs jb  0x427be8
  427b87:	ins    BYTE PTR es:[rdi],dx
  427b88:	and    BYTE PTR [rax+0x75],dl
  427b8b:	(bad)  
  427b8c:	ins    BYTE PTR es:[rdi],dx
  427b8d:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  427b94:	outs   dx,BYTE PTR ds:[rsi]
  427b95:	jae    0x427bfc
  427b97:	and    BYTE PTR [rcx+0x73],ah
  427b9a:	and    BYTE PTR [rax+0x75],dh
  427b9d:	(bad)  
  427b9e:	ins    BYTE PTR es:[rdi],dx
  427b9f:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  427ba6:	jns    0x427bc8
  427ba8:	je     0x427c12
  427baa:	and    BYTE PTR gs:[rsi+0x72],al
  427bae:	gs or  dl,BYTE PTR gs:[rbx+0x6f]
  427bb3:	data16 je 0x427c2d
  427bb6:	(bad)  
  427bb7:	jb     0x427c1e
  427bb9:	and    BYTE PTR [rsi+0x6f],al
  427bbc:	jne    0x427c2c
  427bbe:	fs (bad) 
  427bc0:	je     0x427c2b
  427bc2:	outs   dx,DWORD PTR ds:[rsi]
  427bc3:	outs   dx,BYTE PTR ds:[rsi]
  427bc4:	sub    al,0x20
  427bc6:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65762072
  427bcf:	jb     0x427c44
  427bd1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  427bd8:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  427bdd:	and    BYTE PTR [rcx+rbp*2+0x63],cl
  427be1:	outs   dx,BYTE PTR gs:[rsi]
  427be3:	jae    0x427c4a
  427be5:	sub    al,0x20
  427be7:	outs   dx,DWORD PTR ds:[rsi]
  427be8:	jb     0x427c0a
  427bea:	sub    BYTE PTR [rcx+0x74],ah
  427bed:	and    BYTE PTR [rcx+0x6f],bh
  427bf0:	jne    0x427c64
  427bf2:	and    BYTE PTR [rdi+0x70],ch
  427bf5:	je     0x427c60
  427bf7:	outs   dx,DWORD PTR ds:[rsi]
  427bf8:	outs   dx,BYTE PTR ds:[rsi]
  427bf9:	sub    DWORD PTR [rdx],ecx
  427bfb:	(bad)  
  427bfc:	outs   dx,BYTE PTR ds:[rsi]
  427bfd:	jns    0x427c1f
  427bff:	ins    BYTE PTR es:[rdi],dx
  427c00:	(bad)  
  427c01:	je     0x427c68
  427c03:	jb     0x427c25
  427c05:	jbe    0x427c6c
  427c07:	jb     0x427c7c
  427c09:	imul   ebp,DWORD PTR [rdi+0x6e],0x670a0a2e
  427c10:	outs   dx,BYTE PTR ds:[rsi]
  427c11:	jne    0x427c87
  427c13:	ins    BYTE PTR es:[rdi],dx
  427c14:	jae    0x427c43
  427c16:	jae    0x427c7d
  427c18:	jb     0x427c90
  427c1a:	and    BYTE PTR [rcx+0x73],ch
  427c1d:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  427c21:	je     0x427c95
  427c23:	imul   esp,DWORD PTR [rdx+0x75],0x20646574
  427c2a:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  427c31:	push   0x2065706f
  427c36:	je     0x427ca0
  427c38:	(bad)  
  427c39:	je     0x427c5b
  427c3b:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206c6c69
  427c43:	(bad)  
  427c44:	and    BYTE PTR gs:[rbp+0x73],dh
  427c48:	gs data16 jne 0x427cb8
  427c4c:	sub    al,0x20
  427c4e:	(bad)  
  427c4f:	jne    0x427cc5
  427c51:	and    BYTE PTR [rdi+0x49],dl
  427c54:	push   rsp
  427c55:	rex.W
  427c56:	rex.WRXB push r13
  427c58:	push   rsp
  427c59:	or     al,BYTE PTR [rcx+0x4e]
  427c5c:	pop    rcx
  427c5d:	and    BYTE PTR [rdi+0x41],dl
  427c60:	push   rdx
  427c61:	push   rdx
  427c62:	rex.B
  427c63:	rex.WRX push rsp
  427c65:	pop    rcx
  427c66:	cmp    esp,DWORD PTR [rax]
  427c68:	ja     0x427cd3
  427c6a:	je     0x427cd4
  427c6c:	outs   dx,DWORD PTR ds:[rsi]
  427c6d:	jne    0x427ce3
  427c6f:	and    BYTE PTR [rbp+0x76],ah
  427c72:	outs   dx,BYTE PTR gs:[rsi]
  427c74:	and    BYTE PTR [rax+rbp*2+0x65],dh
  427c78:	and    BYTE PTR [rcx+0x6d],ch
  427c7b:	jo     0x427ce9
  427c7d:	imul   esp,DWORD PTR [rbp+0x64],0x72617720
  427c84:	jb     0x427ce7
  427c86:	outs   dx,BYTE PTR ds:[rsi]
  427c87:	je     0x427d02
  427c89:	and    BYTE PTR [rdi+0x66],ch
  427c8c:	and    BYTE PTR [rbp+0x45],cl
  427c8f:	push   rdx
  427c90:	rex.XB
  427c91:	rex.W
  427c92:	rex.B
  427c93:	rex.WRX push rsp
  427c95:	rex.B
  427c96:	rex.X
  427c97:	rex.WB
  427c98:	rex.WR
  427c99:	rex.WB push r12
  427c9b:	pop    rcx
  427c9c:	and    BYTE PTR [rdi+0x72],ch
  427c9f:	or     al,BYTE PTR [rsi+0x49]
  427ca2:	push   rsp
  427ca3:	rex.WRX
  427ca4:	rex.RB push r11
  427ca6:	push   rbx
  427ca7:	and    BYTE PTR [rsi+0x4f],al
  427caa:	push   rdx
  427cab:	and    BYTE PTR [rcx+0x20],al
  427cae:	push   rax
  427caf:	push   r10
  427cb1:	push   rsp
  427cb2:	rex.WB
  427cb3:	rex.XB push r13
  427cb5:	rex.WR
  427cb6:	push   r10
  427cb8:	and    BYTE PTR [rax+0x55],dl
  427cbb:	push   rdx
  427cbc:	push   rax
  427cbd:	rex.WRXB push r11
  427cbf:	rex.RB
  427cc0:	and    BYTE PTR cs:[rax],ah
  427cc3:	push   rbx
  427cc4:	gs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  427cca:	and    BYTE PTR [rdi+0x4e],al
  427ccd:	push   rbp
  427cce:	and    BYTE PTR [rdi+0x65],al
  427cd1:	outs   dx,BYTE PTR ds:[rsi]
  427cd2:	gs jb  0x427d36
  427cd5:	ins    BYTE PTR es:[rdi],dx
  427cd6:	and    BYTE PTR [rax+0x75],dl
  427cd9:	(bad)  
  427cda:	ins    BYTE PTR es:[rdi],dx
  427cdb:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  427ce2:	outs   dx,BYTE PTR ds:[rsi]
  427ce3:	jae    0x427d4a
  427ce5:	and    BYTE PTR [rsi+0x6f],ah
  427ce8:	jb     0x427cf4
  427cea:	ins    DWORD PTR es:[rdi],dx
  427ceb:	outs   dx,DWORD PTR ds:[rsi]
  427cec:	jb     0x427d53
  427cee:	and    BYTE PTR [rbp+riz*2+0x74],ah
  427cf2:	(bad)  
  427cf3:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x6f590a0a
  427cfb:	jne    0x427d1d
  427cfd:	jae    0x427d67
  427cff:	outs   dx,DWORD PTR ds:[rsi]
  427d00:	jne    0x427d6e
  427d02:	and    BYTE PTR fs:[rax+0x61],ch
  427d06:	jbe    0x427d6d
  427d08:	and    BYTE PTR [rdx+0x65],dh
  427d0b:	movsxd esp,DWORD PTR [rbp+0x69]
  427d0e:	jbe    0x427d75
  427d10:	and    BYTE PTR fs:[rcx+0x20],ah
  427d14:	movsxd ebp,DWORD PTR [rdi+0x70]
  427d17:	jns    0x427d39
  427d19:	outs   dx,DWORD PTR ds:[rsi]
  427d1a:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  427d1f:	and    BYTE PTR [rdi+0x4e],al
  427d22:	push   rbp
  427d23:	and    BYTE PTR [rdi+0x65],al
  427d26:	outs   dx,BYTE PTR ds:[rsi]
  427d27:	gs jb  0x427d8b
  427d2a:	ins    BYTE PTR es:[rdi],dx
  427d2b:	and    BYTE PTR [rax+0x75],dl
  427d2e:	(bad)  
  427d2f:	ins    BYTE PTR es:[rdi],dx
  427d30:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  427d37:	outs   dx,BYTE PTR ds:[rsi]
  427d38:	jae    0x427d9f
  427d3a:	and    BYTE PTR [rcx+0x6c],ah
  427d3d:	outs   dx,DWORD PTR ds:[rsi]
  427d3e:	outs   dx,BYTE PTR ds:[rsi]
  427d3f:	or     dh,BYTE PTR [edi+0x69]
  427d43:	je     0x427dad
  427d45:	and    BYTE PTR [rax+rbp*2+0x69],dh
  427d49:	jae    0x427d6b
  427d4b:	jo     0x427dbf
  427d4d:	outs   dx,DWORD PTR ds:[rsi]
  427d4e:	addr32 jb 0x427db2
  427d51:	ins    DWORD PTR es:[rdi],dx
  427d52:	and    BYTE PTR cs:[rax],ah
  427d55:	rex.WB
  427d56:	data16 and BYTE PTR [rsi+0x6f],ch
  427d5a:	je     0x427d88
  427d5c:	and    BYTE PTR [rbx+0x65],dh
  427d5f:	and    BYTE PTR gs:[rax+rbp*2],bh
  427d63:	je     0x427dd9
  427d65:	jo     0x427da1
  427d67:	(bad)  
  427d68:	(bad)  
  427d69:	ja     0x427de2
  427d6b:	ja     0x427d9b
  427d6d:	outs   dx,BYTE PTR ds:[esi]
  427d6f:	jne    0x427d9f
  427d71:	outs   dx,DWORD PTR ds:[rsi]
  427d72:	jb     0x427ddb
  427d74:	(bad)  
  427d75:	ins    BYTE PTR es:[rdi],dx
  427d76:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  427d7d:	(bad)  
  427d7e:	ds or  al,BYTE PTR cs:[rax]
  427d82:	rex.RB outs dx,BYTE PTR ds:[rsi]
  427d84:	(bad)  
  427d85:	(bad)  
  427d86:	ins    BYTE PTR es:[rdi],dx
  427d87:	and    BYTE PTR gs:[rbp+riz*2+0x62],ah
  427d8c:	jne    0x427df5
  427d8e:	imul   ebp,DWORD PTR [esi+0x67],0x42454400
  427d96:	push   rbp
  427d97:	add    BYTE PTR [r13+r12*2+0x62],r12b
  427d9c:	jne    0x427e05
  427d9e:	add    BYTE PTR [rdi+rbp*2+0x6e],al
  427da2:	(bad)  
  427da3:	je     0x427dc5
  427da5:	(bad)  
  427da6:	movsxd esp,DWORD PTR [rbx+0x65]
  427da9:	jo     0x427e1f
  427dab:	and    BYTE PTR [rbx+0x65],dh
  427dae:	jae    0x427e23
  427db0:	imul   ebp,DWORD PTR [rdi+0x6e],0x63697420
  427db7:	imul   esp,DWORD PTR [rbp+0x74],0x73
  427dbb:	add    BYTE PTR [rsi+0x4f],cl
  427dbe:	push   rsp
  427dbf:	rex.WB
  427dc0:	rex.XB
  427dc1:	rex.WXB
  427dc2:	rex.RB push r12
  427dc4:	add    BYTE PTR [rsi+0x6f],ch
  427dc7:	je     0x427e32
  427dc9:	movsxd ebp,DWORD PTR [rbx+0x65]
  427dcc:	je     0x427dce
  427dce:	rex.RXB
  427dcf:	outs   dx,BYTE PTR gs:[rsi]
  427dd1:	gs jb  0x427e35
  427dd4:	je     0x427e3b
  427dd6:	and    BYTE PTR [rcx+rbp*2+0x66],al
  427dda:	imul   sp,WORD PTR [rbp+0x2d],0x6548
  427de0:	ins    BYTE PTR es:[rdi],dx
  427de1:	ins    BYTE PTR es:[rdi],dx
  427de2:	ins    DWORD PTR es:[rdi],dx
  427de3:	(bad)  
  427de4:	outs   dx,BYTE PTR ds:[rsi]
  427de5:	and    BYTE PTR [rax+0x61],dh
  427de8:	jb     0x427e4b
  427dea:	ins    DWORD PTR es:[rdi],dx
  427deb:	gs je  0x427e53
  427dee:	jb     0x427e63
  427df0:	add    BYTE PTR [rdi+0x45],al
  427df3:	rex.WRX
  427df4:	rex.RB push r10
  427df6:	push   r12
  427df8:	add    BYTE PTR [r15+0x65],r12b
  427dfc:	outs   dx,BYTE PTR ds:[rsi]
  427dfd:	gs jb  0x427e61
  427e00:	je     0x427e67
  427e02:	add    BYTE PTR [rbx+0x75],dl
  427e05:	jo     0x427e77
  427e07:	jb     0x427e6e
  427e09:	jae    0x427e7e
  427e0b:	and    BYTE PTR [rbx+0x6f],dh
  427e0e:	ins    DWORD PTR es:[rdi],dx
  427e0f:	and    BYTE PTR gs:[rbp+0x65],ch
  427e13:	jae    0x427e88
  427e15:	(bad)  
  427e16:	addr32 gs jae 0x427e1a
  427e1a:	push   rcx
  427e1b:	push   rbp
  427e1c:	rex.WB
  427e1d:	rex.RB push r12
  427e1f:	add    BYTE PTR [rcx+0x75],dh
  427e22:	imul   esp,DWORD PTR [rbp+0x74],0x206f4400
  427e29:	outs   dx,BYTE PTR ds:[rsi]
  427e2a:	outs   dx,DWORD PTR ds:[rsi]
  427e2b:	je     0x427e4d
  427e2d:	jne    0x427ea2
  427e2f:	and    BYTE PTR gs:[rcx+0x20],ah
  427e33:	jb     0x427e9a
  427e35:	jae    0x427eac
  427e37:	ins    DWORD PTR es:[rdi],dx
  427e38:	jo     0x427eae
  427e3a:	imul   ebp,DWORD PTR [rdi+0x6e],0x74616420
  427e41:	(bad)  
  427e42:	(bad)  
  427e44:	jae    0x427eab
  427e46:	add    BYTE PTR [rsi+0x4f],cl
  427e49:	rex.R
  427e4a:	rex.X add BYTE PTR [rsi+0x6f],bpl
  427e4e:	fs (bad) 
  427e50:	add    BYTE PTR [rcx+0x63],al
  427e53:	je     0x427e75
  427e55:	(bad)  
  427e56:	jae    0x427e78
  427e58:	(bad)  
  427e59:	outs   dx,BYTE PTR ds:[rsi]
  427e5a:	and    BYTE PTR [rax+0x54],cl
  427e5d:	push   rsp
  427e5e:	push   rax
  427e5f:	and    BYTE PTR [rbx+0x65],dh
  427e62:	jb     0x427eda
  427e64:	gs jb  0x427e67
  427e67:	rex.W push rsp
  427e69:	push   rsp
  427e6a:	push   rax
  427e6b:	add    BYTE PTR [rax+0x74],ch
  427e6e:	je     0x427ee0
  427e70:	add    BYTE PTR [rcx+0x63],al
  427e73:	je     0x427e95
  427e75:	(bad)  
  427e76:	jae    0x427e98
  427e78:	(bad)  
  427e79:	outs   dx,BYTE PTR ds:[rsi]
  427e7a:	and    BYTE PTR [rbp+0x63],al
  427e7d:	push   0x6573206f
  427e82:	jb     0x427efa
  427e84:	gs jb  0x427e87
  427e87:	rex.RB
  427e88:	rex.XB
  427e89:	rex.W
  427e8a:	rex.WRXB add BYTE PTR [r13+0x63],r12b
  427e8e:	push   0x7355006f
  427e93:	and    BYTE PTR gs:[rsp+rdx*2+0x4c],al
  427e98:	push   rbx
  427e99:	and    BYTE PTR [rax],ch
  427e9b:	fs (bad) 
  427e9d:	je     0x427f00
  427e9f:	addr32 jb 0x427f03
  427ea2:	ins    DWORD PTR es:[rdi],dx
  427ea3:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  427ea7:	sub    DWORD PTR [rax],esp
  427ea9:	outs   dx,DWORD PTR ds:[rsi]
  427eaa:	jbe    0x427f11
  427eac:	jb     0x427ece
  427eae:	push   rbp
  427eaf:	rex.R push rax
  427eb1:	add    BYTE PTR [rbp+0x44],dl
  427eb4:	push   rax
  427eb5:	add    BYTE PTR [rbp+0x64],dh
  427eb8:	jo     0x427eba
  427eba:	push   rbx
  427ebb:	gs je  0x427ede
  427ebe:	rex.WRB push r12
  427ec0:	push   rbp
  427ec1:	and    BYTE PTR [rsi+0x6f],ah
  427ec4:	jb     0x427ee6
  427ec6:	fs (bad) 
  427ec8:	je     0x427f2b
  427eca:	addr32 jb 0x427f2e
  427ecd:	ins    DWORD PTR es:[rdi],dx
  427ece:	and    BYTE PTR [rsp+rcx*2+0x53],dl
  427ed2:	add    BYTE PTR [rbp+0x54],cl
  427ed5:	push   rbp
  427ed6:	add    BYTE PTR [rbp+0x74],ch
  427ed9:	jne    0x427edb
  427edb:	rex.WRXB
  427edc:	data16 data16 gs jb 0x427f01
  427ee1:	push   rbx
  427ee2:	push   rdx
  427ee3:	push   rsp
  427ee4:	push   rax
  427ee5:	and    BYTE PTR [rax+0x72],dh
  427ee8:	outs   dx,DWORD PTR ds:[rsi]
  427ee9:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5300
  427ef0:	push   rdx
  427ef1:	push   rsp
  427ef2:	push   rax
  427ef3:	pop    rdi
  427ef4:	push   rax
  427ef5:	push   rdx
  427ef6:	rex.WRXB
  427ef7:	rex.RX
  427ef8:	rex.WB
  427ef9:	rex.WR
  427efa:	rex.RB push r11
  427efc:	add    BYTE PTR [rbx+0x72],dh
  427eff:	je     0x427f71
  427f01:	sub    eax,0x666f7270
  427f06:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x206f4400
  427f0e:	outs   dx,BYTE PTR ds:[rsi]
  427f0f:	outs   dx,DWORD PTR ds:[rsi]
  427f10:	je     0x427f32
  427f12:	jb     0x427f79
  427f14:	jno    0x427f8b
  427f16:	gs jae 0x427f8d
  427f19:	and    BYTE PTR [rcx+0x20],ah
  427f1c:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  427f20:	outs   dx,BYTE PTR ds:[rsi]
  427f21:	je     0x427f43
  427f23:	movsxd esp,DWORD PTR [rbp+0x72]
  427f26:	je     0x427f91
  427f28:	imul   sp,WORD PTR [rbx+0x61],0x6574
  427f2e:	add    BYTE PTR [rcx+rcx*2+0x53],al
  427f32:	rex.B
  427f33:	rex.X
  427f34:	rex.WR
  427f35:	rex.RB pop r15
  427f37:	rex.XB
  427f38:	rex.WR
  427f39:	rex.WB
  427f3a:	rex.RB
  427f3b:	rex.WRX push rsp
  427f3d:	pop    rdi
  427f3e:	rex.XB
  427f3f:	rex.RB push r10
  427f41:	push   rsp
  427f42:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  427f46:	(bad)  
  427f47:	(bad)  
  427f48:	ins    BYTE PTR es:[rdi],dx
  427f49:	gs sub eax,0x65696c63
  427f4f:	outs   dx,BYTE PTR ds:[rsi]
  427f50:	je     0x427f7f
  427f52:	movsxd esp,DWORD PTR [rbp+0x72]
  427f55:	je     0x427f57
  427f57:	push   rdx
  427f58:	gs jno 0x427fd0
  427f5b:	imul   esi,DWORD PTR [rdx+0x65],0x63206120
  427f62:	ins    BYTE PTR es:[rdi],dx
  427f63:	imul   esp,DWORD PTR [rbp+0x6e],0x65632074
  427f6a:	jb     0x427fe0
  427f6c:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  427f73:	add    BYTE PTR [rdx+0x45],dl
  427f76:	push   rcx
  427f77:	push   rbp
  427f78:	rex.WB push r10
  427f7a:	rex.RB pop r15
  427f7c:	rex.XB
  427f7d:	rex.WR
  427f7e:	rex.WB
  427f7f:	rex.RB
  427f80:	rex.WRX push rsp
  427f82:	pop    rdi
  427f83:	rex.XB
  427f84:	rex.RB push r10
  427f86:	push   rsp
  427f87:	add    BYTE PTR [rdx+0x65],dh
  427f8a:	jno    0x428001
  427f8c:	imul   esi,DWORD PTR [rdx+0x65],0x696c632d
  427f93:	outs   dx,BYTE PTR gs:[rsi]
  427f95:	je     0x427fc4
  427f97:	movsxd esp,DWORD PTR [rbp+0x72]
  427f9a:	je     0x427f9c
  427f9c:	rex.WB
  427f9d:	data16 and BYTE PTR [rcx+0x20],ah
  427fa1:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  427fa5:	outs   dx,BYTE PTR ds:[rsi]
  427fa6:	je     0x427fc8
  427fa8:	movsxd esp,DWORD PTR [rbp+0x72]
  427fab:	je     0x428016
  427fad:	imul   sp,WORD PTR [rbx+0x61],0x6574
  427fb3:	and    BYTE PTR [rcx+0x73],ch
  427fb6:	and    BYTE PTR [rbx+0x65],dh
  427fb9:	outs   dx,BYTE PTR ds:[rsi]
  427fba:	je     0x427fdc
  427fbc:	je     0x428026
  427fbe:	outs   dx,BYTE PTR gs:[rsi]
  427fc0:	and    BYTE PTR [rsi+0x65],dh
  427fc3:	jb     0x42802e
  427fc5:	data16 jns 0x427fe8
  427fc8:	imul   esi,DWORD PTR [rsi+rbp*1+0x0],0x49524556
  427fd0:	rex.RX pop rcx
  427fd2:	pop    rdi
  427fd3:	rex.XB
  427fd4:	rex.WR
  427fd5:	rex.WB
  427fd6:	rex.RB
  427fd7:	rex.WRX push rsp
  427fd9:	pop    rdi
  427fda:	rex.XB
  427fdb:	rex.RB push r10
  427fdd:	push   rsp
  427fde:	add    BYTE PTR [rsi+0x65],dh
  427fe1:	jb     0x42804c
  427fe3:	data16 jns 0x428013
  427fe6:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  427fea:	outs   dx,BYTE PTR ds:[rsi]
  427feb:	je     0x42801a
  427fed:	movsxd esp,DWORD PTR [rbp+0x72]
  427ff0:	je     0x427ff2
  427ff2:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
  427ff7:	(bad)  
  427ff8:	je     0x42805f
  427ffa:	and    BYTE PTR [rax+0x65],ch
  427ffd:	(bad)  
  427ffe:	jb     0x428074
  428000:	(bad)  
  428001:	gs (bad) 
  428003:	je     0x428025
  428005:	jae    0x42807c
  428007:	jo     0x428079
  428009:	outs   dx,DWORD PTR ds:[rsi]
  42800a:	jb     0x428080
  42800c:	add    BYTE PTR [rax+0x45],cl
  42800f:	push   r10
  428011:	push   rsp
  428012:	rex.X
  428013:	rex.RB
  428014:	push   r12
  428016:	add    BYTE PTR [rax+0x65],ch
  428019:	(bad)  
  42801a:	jb     0x428090
  42801c:	(bad)  
  42801d:	gs (bad) 
  42801f:	je     0x428021
  428021:	push   rbp
  428022:	jae    0x428089
  428024:	and    BYTE PTR [rbp+rax*2+0x52],al
  428028:	and    BYTE PTR [rsi+0x6f],ah
  42802b:	jb     0x42809a
  42802d:	(bad)  
  42802e:	je     0x428050
  428030:	outs   dx,WORD PTR ds:[rsi]
  428032:	jb     0x428054
  428034:	movsxd esp,DWORD PTR [rbp+0x72]
  428037:	je     0x4280a2
  428039:	imul   sp,WORD PTR [rbx+0x61],0x6574
  42803f:	jae    0x428061
  428041:	je     0x4280b2
  428043:	and    BYTE PTR [rdx+0x65],dh
  428046:	(bad)  
  428047:	and    BYTE PTR fs:[rsi+0x72],ah
  42804b:	outs   dx,DWORD PTR ds:[rsi]
  42804c:	ins    DWORD PTR es:[rdi],dx
  42804d:	add    BYTE PTR [rax+0x35],bl
  428050:	xor    BYTE PTR [rcx],bh
  428052:	rex.RX
  428053:	rex.WRB push r12
  428055:	rex.R
  428056:	rex.RB push r10
  428058:	add    BYTE PTR [rax+0x35],bh
  42805b:	xor    BYTE PTR [rcx],bh
  42805d:	ins    WORD PTR es:[rdi],dx
  42805f:	je     0x4280c5
  428061:	gs jb  0x428064
  428064:	push   rax
  428065:	jb     0x4280d0
  428067:	outs   dx,DWORD PTR ds:[rsi]
  428068:	jb     0x4280d3
  42806a:	je     0x4280d5
  42806c:	gs jae 0x42808f
  42806f:	jae    0x4280e5
  428071:	jb     0x4280dc
  428073:	outs   dx,BYTE PTR ds:[rsi]
  428074:	add    BYTE PTR [eax+0x52],dl
  428078:	rex.WB
  428079:	rex.WRXB push r10
  42807b:	rex.WB push r12
  42807d:	pop    rcx
  42807e:	add    BYTE PTR [rax+0x72],dh
  428081:	imul   ebp,DWORD PTR [rdi+0x72],0x797469
  428088:	rex.R
  428089:	rex.W and BYTE PTR [rax+0x61],sil
  42808d:	jb     0x4280f0
  42808f:	ins    DWORD PTR es:[rdi],dx
  428090:	jae    0x4280b2
  428092:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
  428099:	and    BYTE PTR [rbp+0x73],dh
  42809c:	add    BYTE PTR gs:[rax+rcx*2+0x50],al
  4280a1:	push   r10
  4280a3:	rex.B
  4280a4:	rex.WRB push r11
  4280a6:	add    BYTE PTR [rax+rbp*2+0x70],ah
  4280aa:	(bad)  
  4280ab:	jb     0x42810e
  4280ad:	ins    DWORD PTR es:[rdi],dx
  4280ae:	jae    0x4280b0
  4280b0:	rex.XB
  4280b1:	gs jb  0x428128
  4280b4:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4280bb:	and    BYTE PTR [rsi+0x69],ah
  4280be:	ins    BYTE PTR es:[rdi],dx
  4280bf:	and    BYTE PTR gs:[rdi+0x72],ch
  4280c3:	and    BYTE PTR [rax+0x4b],dl
  4280c6:	rex.XB push r11
  4280c8:	and    BYTE PTR [rbx],ah
  4280ca:	xor    DWORD PTR [rcx],esi
  4280cc:	and    BYTE PTR [rbp+0x52],dl
  4280cf:	rex.WR and BYTE PTR [rdi+rbp*2+0x20],r14b
  4280d4:	jne    0x428149
  4280d6:	add    BYTE PTR gs:[rax+0x35],bl
  4280da:	xor    BYTE PTR [rcx],bh
  4280dc:	rex.XB
  4280dd:	rex.B
  4280de:	rex.RX
  4280df:	rex.WB
  4280e0:	rex.WR
  4280e1:	add    BYTE PTR [r8+0x35],r15b
  4280e5:	xor    BYTE PTR [rcx],bh
  4280e7:	movsxd esp,DWORD PTR [rcx+0x66]
  4280ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x204c5243
  4280f2:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
  4280f9:	and    BYTE PTR [rbp+0x73],dh
  4280fc:	add    BYTE PTR gs:[rax+0x35],bl
  428100:	xor    BYTE PTR [rcx],bh
  428102:	rex.XB push r10
  428104:	rex.WR
  428105:	rex.RX
  428106:	rex.WB
  428107:	rex.WR
  428108:	add    BYTE PTR [r8+0x35],r15b
  42810c:	xor    BYTE PTR [rcx],bh
  42810e:	movsxd esi,DWORD PTR [rdx+0x6c]
  428111:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x4750
  428118:	push   rax
  428119:	and    BYTE PTR [rbx+0x65],cl
  42811c:	jns    0x42813e
  42811e:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
  428125:	and    BYTE PTR [rbp+0x73],dh
  428128:	add    BYTE PTR gs:[rax+0x47],dl
  42812c:	push   rax
  42812d:	rex.WXB
  42812e:	rex.RB pop r9
  428130:	rex.RX
  428131:	rex.WB
  428132:	rex.WR
  428133:	add    BYTE PTR [r8+0x67],r14b
  428137:	jo     0x4281a4
  428139:	gs jns 0x4281a2
  42813c:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x20504750
  428144:	rex.WXB
  428145:	gs jns 0x428168
  428148:	jb     0x4281b3
  42814a:	outs   dx,BYTE PTR ds:[rsi]
  42814b:	and    BYTE PTR [esi+0x69],ah
  42814f:	ins    BYTE PTR es:[rdi],dx
  428150:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  428155:	jne    0x4281ca
  428157:	add    BYTE PTR gs:[rax+0x47],dl
  42815b:	push   rax
  42815c:	rex.WXB
  42815d:	rex.RB pop r9
  42815f:	push   rdx
  428160:	rex.WB
  428161:	rex.WRX
  428162:	rex.RXB add BYTE PTR [r8+0x67],r14b
  428166:	jo     0x4281d3
  428168:	gs jns 0x4281dd
  42816b:	imul   ebp,DWORD PTR [rsi+0x67],0x50475000
  428172:	and    BYTE PTR [rax+0x75],dl
  428175:	(bad)  
  428176:	ins    BYTE PTR es:[rdi],dx
  428177:	imul   esp,DWORD PTR [rbx+0x20],0x2079654b
  42817e:	sub    BYTE PTR [rbx+0x65],ah
  428181:	jb     0x4281f7
  428183:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  42818a:	sub    DWORD PTR [rax],esp
  42818c:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
  428193:	and    BYTE PTR [rbp+0x73],dh
  428196:	add    BYTE PTR gs:[rax+0x47],dl
  42819a:	push   rax
  42819b:	rex.XB
  42819c:	rex.RB push r10
  42819e:	push   rsp
  42819f:	rex.RX
  4281a0:	rex.WB
  4281a1:	rex.WR
  4281a2:	add    BYTE PTR [r8+0x67],r14b
  4281a6:	jo     0x42820b
  4281a8:	gs jb  0x42821f
  4281ab:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x2e58
  4281b2:	xor    eax,0x6b203930
  4281b7:	gs jns 0x4281da
  4281ba:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
  4281c1:	and    BYTE PTR [rax+0x4b],dl
  4281c4:	rex.XB push r11
  4281c6:	and    BYTE PTR [rbx],ah
  4281c8:	xor    DWORD PTR [rcx],esi
  4281ca:	and    BYTE PTR [rbp+0x52],dl
  4281cd:	rex.WR and BYTE PTR [rdi+rbp*2+0x20],r14b
  4281d2:	jne    0x428247
  4281d4:	add    BYTE PTR gs:[rax+0x35],bl
  4281d8:	xor    BYTE PTR [rcx],bh
  4281da:	rex.WXB
  4281db:	rex.RB pop r9
  4281dd:	rex.RX
  4281de:	rex.WB
  4281df:	rex.WR
  4281e0:	add    BYTE PTR [r8+0x35],r15b
  4281e4:	xor    BYTE PTR [rcx],bh
  4281e6:	imul   esp,DWORD PTR [rbp+0x79],0x66
  4281ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x30352e58
  4281f2:	cmp    DWORD PTR [rax],esp
  4281f4:	rex.XB
  4281f5:	gs jb  0x42826c
  4281f8:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4281ff:	and    BYTE PTR [rsi+0x69],ah
  428202:	ins    BYTE PTR es:[rdi],dx
  428203:	and    BYTE PTR gs:[rdi+0x72],ch
  428207:	and    BYTE PTR [rax+0x4b],dl
  42820a:	rex.XB push r11
  42820c:	and    BYTE PTR [rbx],ah
  42820e:	xor    DWORD PTR [rcx],esi
  428210:	and    BYTE PTR [rbp+0x52],dl
  428213:	rex.WR and BYTE PTR [rdi+rbp*2+0x20],r14b
  428218:	jne    0x42828d
  42821a:	add    BYTE PTR gs:[rax+0x35],bl
  42821e:	xor    BYTE PTR [rcx],bh
  428220:	rex.XB
  428221:	rex.RB push r10
  428223:	push   rsp
  428224:	rex.RX
  428225:	rex.WB
  428226:	rex.WR
  428227:	add    BYTE PTR [r8+0x35],r15b
  42822b:	xor    BYTE PTR [rcx],bh
  42822d:	movsxd esp,DWORD PTR [rbp+0x72]
  428230:	je     0x428298
  428232:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x65746c41
  42823a:	jb     0x4282aa
  42823c:	(bad)  
  42823d:	je     0x4282a8
  42823f:	jbe    0x4282a6
  428241:	and    BYTE PTR [rax+0x2e],bl
  428244:	xor    eax,0x6b203930
  428249:	gs jns 0x42826c
  42824c:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
  428253:	and    BYTE PTR [rax+0x4b],dl
  428256:	rex.XB push r11
  428258:	and    BYTE PTR [rbx],ah
  42825a:	xor    DWORD PTR [rcx],esi
  42825c:	and    BYTE PTR [rbp+0x52],dl
  42825f:	rex.WR and BYTE PTR [rdi+rbp*2+0x20],r14b
  428264:	jne    0x4282d9
  428266:	add    BYTE PTR gs:[rax+0x35],bl
  42826a:	xor    BYTE PTR [rcx],bh
  42826c:	rex.R push rbx
  42826e:	rex.B
  42826f:	rex.WXB
  428270:	rex.RB pop r9
  428272:	rex.RX
  428273:	rex.WB
  428274:	rex.WR
  428275:	add    BYTE PTR [r8+0x35],r15b
  428279:	xor    BYTE PTR [rcx],bh
  42827b:	fs jae 0x4282df
  42827e:	imul   esp,DWORD PTR [rbp+0x79],0x66
  428282:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x65746c41
  42828a:	jb     0x4282fa
  42828c:	(bad)  
  42828d:	je     0x4282f8
  42828f:	jbe    0x4282f6
  428291:	and    BYTE PTR [rax+0x2e],bl
  428294:	xor    eax,0x43203930
  428299:	gs jb  0x428310
  42829c:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  4282a3:	and    BYTE PTR [rsi+0x69],ah
  4282a6:	ins    BYTE PTR es:[rdi],dx
  4282a7:	and    BYTE PTR gs:[rdi+0x72],ch
  4282ab:	and    BYTE PTR [rax+0x4b],dl
  4282ae:	rex.XB push r11
  4282b0:	and    BYTE PTR [rbx],ah
  4282b2:	xor    DWORD PTR [rcx],esi
  4282b4:	and    BYTE PTR [rbp+0x52],dl
  4282b7:	rex.WR and BYTE PTR [rdi+rbp*2+0x20],r14b
  4282bc:	jne    0x428331
  4282be:	add    BYTE PTR gs:[rax+0x35],bl
  4282c2:	xor    BYTE PTR [rcx],bh
  4282c4:	rex.R push rbx
  4282c6:	rex.B
  4282c7:	rex.XB
  4282c8:	rex.RB push r10
  4282ca:	push   rsp
  4282cb:	rex.RX
  4282cc:	rex.WB
  4282cd:	rex.WR
  4282ce:	add    BYTE PTR [r8+0x35],r15b
  4282d2:	xor    BYTE PTR [rcx],bh
  4282d4:	fs jae 0x428338
  4282d7:	movsxd esp,DWORD PTR [rbp+0x72]
  4282da:	je     0x428342
  4282dc:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x39303558
  4282e4:	rex.RB
  4282e5:	rex.XB
  4282e6:	rex.XB
  4282e7:	rex.WXB
  4282e8:	rex.RB pop r9
  4282ea:	rex.RX
  4282eb:	rex.WB
  4282ec:	rex.WR
  4282ed:	add    BYTE PTR [r8+0x35],r15b
  4282f1:	xor    BYTE PTR [rcx],bh
  4282f3:	movsxd esp,DWORD PTR gs:[rbx+0x6b]
  4282f7:	gs jns 0x428360
  4282fa:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x39303558
  428302:	rex.RB
  428303:	rex.XB
  428304:	rex.XB
  428305:	rex.XB
  428306:	rex.RB push r10
  428308:	push   rsp
  428309:	rex.RX
  42830a:	rex.WB
  42830b:	rex.WR
  42830c:	add    BYTE PTR [r8+0x35],r15b
  428310:	xor    BYTE PTR [rcx],bh
  428312:	movsxd esp,DWORD PTR gs:[rbx+0x63]
  428316:	gs jb  0x42838d
  428319:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x4750
  428320:	push   rax
  428321:	and    BYTE PTR [rbx+0x75],dh
  428324:	(bad)  
  428325:	imul   esp,DWORD PTR [rbp+0x79],0x20
  428329:	je     0x42839a
  42832b:	and    BYTE PTR [rbp+0x73],dh
  42832e:	and    BYTE PTR gs:[rax],ch
  428331:	push   0x6f207865
  428336:	jb     0x428358
  428338:	(bad)  
  428339:	jne    0x4283af
  42833b:	outs   dx,DWORD PTR ds:[rsi]
  42833c:	sub    DWORD PTR [rax],eax
  42833e:	push   rax
  42833f:	rex.RXB push r8
  428341:	push   rbx
  428342:	push   rbp
  428343:	rex.X
  428344:	rex.WXB
  428345:	rex.RB pop r9
  428347:	add    BYTE PTR [rax+0x67],dh
  42834a:	jo     0x4283bf
  42834c:	jne    0x4283b0
  42834e:	imul   esp,DWORD PTR [rbp+0x79],0x0
  428352:	push   rbx
  428353:	push   rdx
  428354:	push   rax
  428355:	and    BYTE PTR [rax+0x61],dh
  428358:	jae    0x4283cd
  42835a:	ja     0x4283cb
  42835c:	jb     0x4283c2
  42835e:	and    BYTE PTR [rsi+0x69],ah
  428361:	ins    BYTE PTR es:[rdi],dx
  428362:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  428367:	jne    0x4283dc
  428369:	add    BYTE PTR gs:[rbx+0x52],dl
  42836d:	push   rax
  42836e:	push   rax
  42836f:	push   r11
  428371:	push   rbx
  428372:	push   rdi
  428373:	add    BYTE PTR [rbx+0x72],r14b
  428377:	jo     0x4283e9
  428379:	(bad)  
  42837a:	jae    0x4283ef
  42837c:	ja     0x4283e2
  42837e:	add    BYTE PTR [rbx+0x52],dl
  428381:	push   rax
  428382:	and    BYTE PTR [rax+0x61],dh
  428385:	jae    0x4283fa
  428387:	ja     0x4283f8
  428389:	jb     0x4283ef
  42838b:	and    BYTE PTR [rbx+0x6f],ah
  42838e:	outs   dx,BYTE PTR ds:[rsi]
  42838f:	imul   sp,WORD PTR [rdi+0x75],0x6172
  428395:	je     0x428400
  428397:	outs   dx,DWORD PTR ds:[rsi]
  428398:	outs   dx,BYTE PTR ds:[rsi]
  428399:	and    BYTE PTR [rsi+0x69],ah
  42839c:	ins    BYTE PTR es:[rdi],dx
  42839d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4283a2:	jne    0x428417
  4283a4:	add    BYTE PTR gs:[rbx+0x52],dl
  4283a8:	push   rax
  4283a9:	push   rax
  4283aa:	push   r11
  4283ac:	push   rbx
  4283ad:	push   rdi
  4283ae:	rex.R
  4283af:	rex.XB
  4283b0:	rex.WRXB
  4283b1:	rex.WRX
  4283b2:	rex.RX add BYTE PTR [rbx+0x72],r14b
  4283b6:	jo     0x428428
  4283b8:	(bad)  
  4283b9:	jae    0x42842e
  4283bb:	ja     0x428421
  4283bd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4283c0:	data16 add BYTE PTR [rax+0x53],dl
  4283c4:	rex.WXB and BYTE PTR [r8+0x61],sil
  4283c8:	jae    0x42843d
  4283ca:	ja     0x42843b
  4283cc:	jb     0x428432
  4283ce:	and    BYTE PTR [rsi+0x69],ah
  4283d1:	ins    BYTE PTR es:[rdi],dx
  4283d2:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  4283d7:	jne    0x42844c
  4283d9:	add    BYTE PTR gs:[rax+0x53],dl
  4283dd:	rex.WXB push r8
  4283df:	push   r11
  4283e1:	push   rbx
  4283e2:	push   rdi
  4283e3:	add    BYTE PTR [rax+0x73],r14b
  4283e7:	imul   esi,DWORD PTR [rax+0x61],0x73
  4283eb:	jae    0x428464
  4283ed:	add    BYTE PTR fs:[rax+0x53],dl
  4283f1:	rex.WXB and BYTE PTR [r9+0x64],bpl
  4283f5:	outs   dx,BYTE PTR gs:[rsi]
  4283f7:	je     0x428462
  4283f9:	je     0x428474
  4283fb:	and    BYTE PTR [rax+0x69],ch
  4283fe:	outs   dx,BYTE PTR ds:[rsi]
  4283ff:	je     0x428421
  428401:	je     0x428472
  428403:	and    BYTE PTR [rbp+0x73],dh
  428406:	add    BYTE PTR gs:[rax+0x53],dl
  42840a:	rex.WXB
  42840b:	rex.W
  42840c:	rex.WB
  42840d:	rex.WRX push rsp
  42840f:	add    BYTE PTR [rax+0x73],dh
  428412:	imul   ebp,DWORD PTR [rax+0x69],0x6e
  428416:	je     0x428418
  428418:	push   rsp
  428419:	push   0x434f2065
  42841e:	push   rbx
  42841f:	push   rax
  428420:	and    BYTE PTR [rdx+0x65],dh
  428423:	jae    0x428495
  428425:	outs   dx,DWORD PTR ds:[rsi]
  428426:	outs   dx,BYTE PTR ds:[rsi]
  428427:	jae    0x42848e
  428429:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42842d:	jae    0x428494
  42842f:	outs   dx,BYTE PTR ds:[rsi]
  428430:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  428435:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  428439:	outs   dx,BYTE PTR ds:[rsi]
  42843a:	je     0x42843c
  42843c:	rex.WRXB
  42843d:	rex.XB push r11
  42843f:	push   rax
  428440:	pop    rdi
  428441:	push   rdx
  428442:	rex.RB push r11
  428444:	push   rax
  428445:	rex.WRXB
  428446:	rex.WRX push rbx
  428448:	add    BYTE PTR [r15+0x63],r13b
  42844c:	jae    0x4284be
  42844e:	sub    eax,0x70736572
  428453:	outs   dx,DWORD PTR ds:[rsi]
  428454:	outs   dx,BYTE PTR ds:[rsi]
  428455:	jae    0x4284bc
  428457:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42845b:	and    BYTE PTR [rax+0x6f],dh
  42845e:	jb     0x4284d4
  428460:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  428464:	movsxd ebp,DWORD PTR [rdi+0x6e]
  428467:	outs   dx,BYTE PTR ds:[rsi]
  428468:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  42846d:	outs   dx,DWORD PTR ds:[rsi]
  42846e:	add    BYTE PTR [rax+0x4f],dl
  428471:	push   rdx
  428472:	push   rsp
  428473:	add    BYTE PTR [rax+0x6f],dh
  428476:	jb     0x4284ec
  428478:	add    BYTE PTR [rax+0x72],dl
  42847b:	imul   ebp,DWORD PTR [rsi+0x74],0x6c206120
  428482:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
  428489:	je     0x4284f3
  42848b:	and    BYTE PTR gs:[rbx+0x75],dh
  42848f:	jo     0x428501
  428491:	outs   dx,DWORD PTR ds:[rsi]
  428492:	jb     0x428508
  428494:	gs and BYTE PTR fs:[rcx+0x6c],ah
  428499:	outs   dx,DWORD PTR ds:[esi]
  42849b:	jb     0x428506
  42849d:	je     0x428507
  42849f:	ins    DWORD PTR es:[rdi],dx
  4284a0:	jae    0x4284c2
  4284a2:	(bad)  
  4284a3:	outs   dx,BYTE PTR ds:[rsi]
  4284a4:	and    BYTE PTR fs:[rbp+0x6f],ch
  4284a8:	fs gs jae 0x4284ac
  4284ac:	rex.WR
  4284ad:	rex.WB push r11
  4284af:	push   rsp
  4284b0:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  4284b4:	je     0x4284b6
  4284b6:	push   rbx
  4284b7:	jo     0x42851e
  4284b9:	movsxd ebp,DWORD PTR [rcx+0x66]
  4284bc:	jns    0x4284de
  4284be:	je     0x428528
  4284c0:	and    BYTE PTR gs:[rax+0x4b],dl
  4284c4:	rex.XB push r11
  4284c6:	and    BYTE PTR [rbx],ah
  4284c8:	xor    DWORD PTR [rcx],esi
  4284ca:	and    BYTE PTR [rax+0x72],dh
  4284cd:	outs   dx,DWORD PTR ds:[rsi]
  4284ce:	jbe    0x428539
  4284d0:	fs gs jb 0x4284f4
  4284d4:	ins    BYTE PTR es:[rdi],dx
  4284d5:	imul   esp,DWORD PTR [rdx+0x72],0x797261
  4284dc:	push   rax
  4284dd:	push   rdx
  4284de:	rex.WRXB push r14
  4284e0:	rex.WB
  4284e1:	rex.R
  4284e2:	rex.RB push r10
  4284e4:	add    BYTE PTR [rax+0x72],dh
  4284e7:	outs   dx,DWORD PTR ds:[rsi]
  4284e8:	jbe    0x428553
  4284ea:	fs gs jb 0x4284ee
  4284ee:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  4284f6:	gs js  0x42856d
  4284f9:	outs   dx,BYTE PTR gs:[rsi]
  4284fb:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  428501:	(bad)  
  428502:	and    BYTE PTR gs:[ecx+0x6e],ch
  428507:	outs   dx,WORD PTR ds:[rsi]
  428509:	jb     0x428578
  42850b:	(bad)  
  42850c:	je     0x428577
  42850e:	outs   dx,DWORD PTR ds:[rsi]
  42850f:	outs   dx,BYTE PTR ds:[rsi]
  428510:	and    BYTE PTR [rcx+0x6e],ah
  428513:	and    BYTE PTR fs:[rbp+0x78],ah
  428517:	imul   esi,DWORD PTR [rax+rax*1+0x68],0x706c65
  42851f:	gs js  0x428596
  428522:	outs   dx,BYTE PTR gs:[rsi]
  428524:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  42852a:	(bad)  
  42852b:	and    BYTE PTR gs:[ecx+0x6e],ch
  428530:	outs   dx,WORD PTR ds:[rsi]
  428532:	jb     0x4285a1
  428534:	(bad)  
  428535:	je     0x4285a0
  428537:	outs   dx,DWORD PTR ds:[rsi]
  428538:	outs   dx,BYTE PTR ds:[rsi]
  428539:	and    BYTE PTR [rax+0x61],dh
  42853c:	jae    0x4285b1
  42853e:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  428544:	jne    0x428566
  428546:	jo     0x4285a9
  428548:	addr32 gs jb 0x42854c
  42854c:	ins    DWORD PTR es:[rdi],dx
  42854d:	outs   dx,DWORD PTR ds:[rsi]
  42854e:	jb     0x4285b5
  428550:	sub    eax,0x706c6568
  428555:	add    BYTE PTR [rdi+0x75],ch
  428558:	je     0x4285ca
  42855a:	jne    0x4285d0
  42855c:	and    BYTE PTR [rsi+0x65],dh
  42855f:	jb     0x4285d4
  428561:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  428568:	outs   dx,DWORD PTR ds:[rsi]
  428569:	jb     0x4285d8
  42856b:	(bad)  
  42856c:	je     0x4285d7
  42856e:	outs   dx,DWORD PTR ds:[rsi]
  42856f:	outs   dx,BYTE PTR ds:[rsi]
  428570:	and    BYTE PTR [rcx+0x6e],ah
  428573:	and    BYTE PTR fs:[rbp+0x78],ah
  428577:	imul   esi,DWORD PTR [rax+rax*1+0x76],0x69737265
  42857f:	outs   dx,DWORD PTR ds:[rsi]
  428580:	outs   dx,BYTE PTR ds:[rsi]
  428581:	add    BYTE PTR [rdi+0x4e],al
  428584:	push   rbp
  428585:	push   rsp
  428586:	rex.WR push rbx
  428588:	pop    rdi
  428589:	push   rbx
  42858a:	rex.RB push r10
  42858c:	push   rsi
  42858d:	add    BYTE PTR [rdi+0x6e],ah
  428590:	jne    0x428606
  428592:	ins    BYTE PTR es:[rdi],dx
  428593:	jae    0x4285c2
  428595:	jae    0x4285fc
  428597:	jb     0x42860f
  428599:	and    BYTE PTR [rip+0x756e4720],ch        # 0x75b0ccbf
  42859f:	push   rsp
  4285a0:	rex.WR push rbx
  4285a2:	and    BYTE PTR [rbx+0x65],dh
  4285a5:	jb     0x42861d
  4285a7:	gs jb  0x4285b4
  4285aa:	push   rbp
  4285ab:	jae    0x42860e
  4285ad:	cmp    ah,BYTE PTR gs:[eax]
  4285b1:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209da62a
  4285b7:	sub    eax,0x616c663c
  4285bc:	and    BYTE PTR ds:[ebx+0x3c],bl
  4285c1:	jbe    0x428624
  4285c3:	ins    BYTE PTR es:[rdi],dx
  4285c4:	ds pop rbp
  4285c6:	and    BYTE PTR [rax+riz*1+0x2d],bh
  4285ca:	sub    eax,0x6d616e3c
  4285cf:	gs ds pop rbx
  4285d2:	jnp    0x428611
  4285d4:	jl     0x4285f6
  4285d6:	jge    0x428614
  4285d8:	jbe    0x42863b
  4285da:	ins    BYTE PTR es:[rdi],dx
  4285db:	ds pop rbp
  4285dd:	and    BYTE PTR [rbp+0x2e],bl
  4285e0:	cs or  al,BYTE PTR cs:[rax]
  4285e4:	(bad)  
  4285e5:	jne    0x42864e
  4285e7:	jae    0x428629
  4285e9:	outs   dx,BYTE PTR ds:[esi]
  4285eb:	jne    0x428661
  4285ed:	ins    BYTE PTR es:[rdi],dx
  4285ee:	jae    0x42861e
  4285f0:	outs   dx,DWORD PTR ds:[rsi]
  4285f1:	jb     0x42865a
  4285f3:	add    BYTE PTR [rdx],cl
  4285f5:	add    BYTE PTR [rbx+0x65],dl
  4285f8:	jb     0x428670
  4285fa:	gs jb  0x42861d
  4285fd:	jo     0x428671
  4285ff:	outs   dx,DWORD PTR ds:[rsi]
  428600:	addr32 jb 0x428664
  428603:	ins    DWORD PTR es:[rdi],dx
  428604:	and    BYTE PTR [rax+rbp*2+0x61],dh
  428608:	je     0x42862a
  42860a:	ins    BYTE PTR es:[rdi],dx
  42860b:	imul   esi,DWORD PTR [rbx+0x74],0x20736e65
  428612:	je     0x428683
  428614:	and    BYTE PTR [rcx+0x6e],ch
  428617:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42861a:	imul   ebp,DWORD PTR [rsi+0x67],0x534c5420
  428621:	and    BYTE PTR [rbx+0x6f],ah
  428624:	outs   dx,BYTE PTR ds:[rsi]
  428625:	outs   dx,BYTE PTR ds:[rsi]
  428626:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42862b:	outs   dx,BYTE PTR ds:[rsi]
  42862c:	jae    0x42865c
  42862e:	or     al,BYTE PTR [rax]
  428630:	outs   dx,BYTE PTR ds:[esi]
  428632:	jne    0x4286a8
  428634:	ins    BYTE PTR es:[rdi],dx
  428635:	jae    0x428664
  428637:	jae    0x42869e
  428639:	jb     0x4286b1
  42863b:	and    BYTE PTR [rbx],dh
  42863d:	cs xor al,0x2e
  428640:	xor    DWORD PTR [rdi],esi
  428642:	add    BYTE PTR [rbp+0x73],dl
  428645:	(bad)  
  428646:	cmp    ah,BYTE PTR gs:[eax]
  42864a:	outs   dx,BYTE PTR ds:[esi]
  42864c:	jne    0x4286c2
  42864e:	ins    BYTE PTR es:[rdi],dx
  42864f:	jae    0x42867e
  428651:	jae    0x4286b8
  428653:	jb     0x4286cb
  428655:	and    BYTE PTR [rbx+0x6f],bl
  428658:	jo     0x4286ce
  42865a:	imul   ebp,DWORD PTR [rdi+0x6e],0x670a5d73
  428661:	outs   dx,BYTE PTR ds:[rsi]
  428662:	jne    0x4286d8
  428664:	ins    BYTE PTR es:[rdi],dx
  428665:	jae    0x428694
  428667:	jae    0x4286ce
  428669:	jb     0x4286e1
  42866b:	and    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca7ee9e
  428671:	jo     0x428693
  428673:	outs   dx,WORD PTR ds:[rsi]
  428675:	jb     0x428697
  428677:	jne    0x4286ec
  428679:	(bad)  
  42867a:	and    BYTE PTR gs:[ecx+0x6e],ch
  42867f:	jae    0x4286f5
  428681:	jb     0x4286f8
  428683:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  428687:	outs   dx,BYTE PTR ds:[rsi]
  428688:	jae    0x4286b8
  42868a:	or     al,BYTE PTR [rax]
	...
  4286c0:	and    BYTE PTR [rip+0x64250020],bh        # 0x646786e6
  4286c6:	add    BYTE PTR [rdx+rcx*1+0x0],bl
  4286ca:	or     ah,BYTE PTR [rbp+0x78]
  4286cd:	imul   esi,DWORD PTR [rax+riz*1+0x25],0x6b000a64
  4286d5:	gs jns 0x42874f
  4286d8:	outs   dx,DWORD PTR ds:[rsi]
  4286d9:	jb     0x42873f
  4286db:	add    BYTE PTR [rbx+0x65],dh
  4286de:	je     0x42870d
  4286e0:	ins    DWORD PTR es:[rdi],dx
  4286e1:	gs ins DWORD PTR es:[rdi],dx
  4286e3:	(bad)  
  4286e4:	gs jb  0x42875a
  4286e7:	push   0x74007069
  4286ec:	jb     0x428763
  4286ee:	add    BYTE PTR gs:[rsi+0x61],ah
  4286f2:	ins    BYTE PTR es:[rdi],dx
  4286f3:	jae    0x42875a
  4286f5:	add    BYTE PTR [rdi+rbp*1],bh
  4286f8:	and    eax,0xa3e73
  4286fd:	add    BYTE PTR [rax],al
  4286ff:	add    BYTE PTR [rsi+rsi*8-0xa6d0003],ah
  428706:	std    
  428707:	push   rax
  428709:	cmc    
  42870a:	std    
  42870b:	push   QWORD PTR [rax-0xa]
  42870e:	std    
  42870f:	push   rax
  428711:	cmc    
  428712:	std    
  428713:	inc    eax
  428715:	hlt    
  428716:	std    
  428717:	jmp    rcx
  428719:	hlt    
  42871a:	std    
  42871b:	jmp    QWORD PTR [rax]
  42871d:	pop    rbx
  42871e:	(bad)  
  42871f:	jb     0x428788
  428721:	pop    rbp
  428722:	add    BYTE PTR [rax+0x4d],cl
  428725:	push   rbx
  428726:	add    BYTE PTR [rax+riz*1],ch
  428729:	add    BYTE PTR [rax],ah
  42872b:	and    BYTE PTR [rax],ah
  42872d:	sub    eax,0x6325
  428732:	add    BYTE PTR [rax],al
  428734:	add    BYTE PTR [rax],al
  428736:	add    BYTE PTR [rax],al
  428738:	outs   dx,BYTE PTR ds:[rsi]
  428739:	outs   dx,DWORD PTR ds:[rsi]
  42873a:	and    BYTE PTR [rbp+0x65],ch
  42873d:	ins    DWORD PTR es:[rdi],dx
  42873e:	outs   dx,DWORD PTR ds:[rsi]
  42873f:	jb     0x4287ba
  428741:	and    BYTE PTR [rsi+0x6f],ah
  428744:	jb     0x428766
  428746:	movsxd ebp,DWORD PTR [rax+0x61]
  428749:	jb     0x428778
  42874b:	ins    DWORD PTR es:[rdi],dx
  42874c:	(bad)  
  42874d:	jo     0x4287bf
  42874f:	gs jb  0x428772
  428752:	jae    0x4287c4
  428754:	(bad)  
  428755:	outs   dx,BYTE PTR ds:[rsi]
  428756:	and    BYTE PTR [rbp+0x61],ch
  428759:	jo     0x428765
  42875b:	add    BYTE PTR [rip+0x73252f73],ah        # 0x7367b6d4
  428761:	add    BYTE PTR [rax+0x41],dl
  428764:	push   rsp
  428765:	rex.W add BYTE PTR [rip+0x73250073],spl        # 0x736787df
  42876c:	cmp    eax,0x97007325
  428771:	and    edi,esi
  428773:	dec    DWORD PTR [rbx+0x7ffffe23]
  428779:	and    edi,esi
  42877b:	push   QWORD PTR [rbx+0x23]
  42877e:	(bad)  
  42877f:	jmp    QWORD PTR [rdi+0x23]
  428782:	(bad)  
  428783:	call   FWORD PTR [rbx+0x23]
  428786:	(bad)  
  428787:	dec    DWORD PTR [rdi+0x23]
  42878a:	(bad)  
  42878b:	inc    DWORD PTR [rbx+0x23]
  42878e:	(bad)  
  42878f:	jmp    QWORD PTR [rbx+0x2dfffe23]
  428795:	sub    eax,0x73257325
  42879a:	add    BYTE PTR [rip+0x732573],ah        # 0xb5ad13
  4287a0:	in     eax,dx
  4287a1:	es (bad) 
  4287a3:	(bad)  
  4287a4:	stc    
  4287a5:	es (bad) 
  4287a7:	inc    DWORD PTR [rip+0x11fffe27]        # 0x124285d4
  4287ad:	(bad)  
  4287ae:	(bad)  
  4287af:	call   FWORD PTR [rip+0x29fffe27]        # 0x2a4285dc
  4287b5:	(bad)  
  4287b6:	(bad)  
  4287b7:	push   QWORD PTR [rip+0xffffffffe1fffe27]        # 0xffffffffe24285e4
  4287bd:	es (bad) 
  4287bf:	dec    DWORD PTR [rbp+0x25]
  4287c2:	(bad)  
  4287c3:	call   QWORD PTR [rax+rbp*1+0x295ffffe]
  4287ca:	(bad)  
  4287cb:	(bad)  
  4287cc:	mov    esp,0xf4fffe29
  4287d1:	sub    esi,edi
  4287d3:	jmp    FWORD PTR [rax]
  4287d5:	sub    bh,dh
  4287d7:	call   FWORD PTR [rdx+rbp*1-0x2]
  4287db:	(bad)  
  4287dc:	in     al,dx
  4287dd:	sub    dh,bh
  4287df:	call   QWORD PTR [rbx+0x29]
  4287e2:	(bad)  
  4287e3:	dec    edi
  4287e5:	sub    edi,esi
  4287e7:	inc    ebx
  4287e9:	sub    edi,esi
  4287eb:	push   QWORD PTR [rdi-0x480001d5]
  4287f1:	sub    edi,esi
  4287f3:	jmp    FWORD PTR [rbx-0x600001d5]
  4287f9:	sub    edi,esi
  4287fb:	call   FWORD PTR [rdi-0x6c0001d5]
  428801:	sub    edi,esi
  428803:	call   QWORD PTR [rbx+0x59fffe2b]
  428809:	rex.WRB push r15
  42880b:	add    BYTE PTR [rax],r8b
  42880e:	add    BYTE PTR [rax],al
  428810:	lock (bad) 
  428812:	(bad)  
  428813:	inc    DWORD PTR [rbx]
  428815:	cmp    esi,edi
  428817:	inc    DWORD PTR [rbx]
  428819:	cmp    esi,edi
  42881b:	inc    DWORD PTR [rbx]
  42881d:	cmp    esi,edi
  42881f:	inc    DWORD PTR [rbx]
  428821:	cmp    esi,edi
  428823:	inc    DWORD PTR [rbx]
  428825:	cmp    esi,edi
  428827:	inc    DWORD PTR [rbx]
  428829:	cmp    esi,edi
  42882b:	inc    DWORD PTR [rbx]
  42882d:	cmp    esi,edi
  42882f:	inc    DWORD PTR [rbx]
  428831:	cmp    esi,edi
  428833:	inc    DWORD PTR [rbx]
  428835:	cmp    esi,edi
  428837:	call   rax
  428839:	(bad)  
  42883a:	(bad)  
  42883b:	inc    DWORD PTR [rbx]
  42883d:	cmp    esi,edi
  42883f:	inc    DWORD PTR [rbx]
  428841:	cmp    esi,edi
  428843:	jmp    QWORD PTR [rax]
  428845:	cmp    dh,bh
  428847:	inc    DWORD PTR [rbx]
  428849:	cmp    esi,edi
  42884b:	inc    DWORD PTR [rbx]
  42884d:	cmp    esi,edi
  42884f:	inc    DWORD PTR [rbx]
  428851:	cmp    esi,edi
  428853:	inc    DWORD PTR [rbx]
  428855:	cmp    esi,edi
  428857:	inc    DWORD PTR [rbx]
  428859:	cmp    esi,edi
  42885b:	inc    DWORD PTR [rbx]
  42885d:	cmp    esi,edi
  42885f:	inc    DWORD PTR [rbx]
  428861:	cmp    esi,edi
  428863:	inc    DWORD PTR [rbx]
  428865:	cmp    esi,edi
  428867:	inc    DWORD PTR [rbx]
  428869:	cmp    esi,edi
  42886b:	inc    DWORD PTR [rbx]
  42886d:	cmp    esi,edi
  42886f:	inc    DWORD PTR [rbx]
  428871:	cmp    esi,edi
  428873:	inc    DWORD PTR [rbx]
  428875:	cmp    esi,edi
  428877:	inc    DWORD PTR [rbx]
  428879:	cmp    esi,edi
  42887b:	inc    DWORD PTR [rbx]
  42887d:	cmp    esi,edi
  42887f:	inc    DWORD PTR [rbx]
  428881:	cmp    esi,edi
  428883:	inc    DWORD PTR [rbx]
  428885:	cmp    esi,edi
  428887:	inc    DWORD PTR [rbx]
  428889:	cmp    esi,edi
  42888b:	inc    DWORD PTR [rbx]
  42888d:	cmp    esi,edi
  42888f:	inc    DWORD PTR [rbx]
  428891:	cmp    esi,edi
  428893:	inc    DWORD PTR [rbx]
  428895:	cmp    esi,edi
  428897:	inc    DWORD PTR [rbx]
  428899:	cmp    esi,edi
  42889b:	inc    DWORD PTR [rbx]
  42889d:	cmp    esi,edi
  42889f:	inc    DWORD PTR [rbx]
  4288a1:	cmp    esi,edi
  4288a3:	inc    DWORD PTR [rbx]
  4288a5:	cmp    esi,edi
  4288a7:	inc    DWORD PTR [rbx]
  4288a9:	cmp    esi,edi
  4288ab:	inc    DWORD PTR [rbx]
  4288ad:	cmp    esi,edi
  4288af:	inc    DWORD PTR [rbx]
  4288b1:	cmp    esi,edi
  4288b3:	inc    DWORD PTR [rbx]
  4288b5:	cmp    esi,edi
  4288b7:	inc    DWORD PTR [rbx]
  4288b9:	cmp    esi,edi
  4288bb:	inc    DWORD PTR [rbx]
  4288bd:	cmp    esi,edi
  4288bf:	inc    DWORD PTR [rbx]
  4288c1:	cmp    esi,edi
  4288c3:	inc    DWORD PTR [rbx]
  4288c5:	cmp    esi,edi
  4288c7:	inc    DWORD PTR [rbx]
  4288c9:	cmp    esi,edi
  4288cb:	inc    DWORD PTR [rbx]
  4288cd:	cmp    esi,edi
  4288cf:	push   QWORD PTR [rax]
  4288d1:	cmp    dh,bh
  4288d3:	push   QWORD PTR [rax]
  4288d5:	cmp    dh,bh
  4288d7:	push   QWORD PTR [rax]
  4288d9:	cmp    dh,bh
  4288db:	push   QWORD PTR [rax]
  4288dd:	cmp    dh,bh
  4288df:	push   QWORD PTR [rax]
  4288e1:	cmp    dh,bh
  4288e3:	push   QWORD PTR [rax]
  4288e5:	cmp    dh,bh
  4288e7:	push   QWORD PTR [rax]
  4288e9:	cmp    dh,bh
  4288eb:	push   QWORD PTR [rax]
  4288ed:	cmp    dh,bh
  4288ef:	inc    DWORD PTR [rbx]
  4288f1:	cmp    esi,edi
  4288f3:	inc    DWORD PTR [rbx]
  4288f5:	cmp    esi,edi
  4288f7:	inc    DWORD PTR [rbx]
  4288f9:	cmp    esi,edi
  4288fb:	inc    DWORD PTR [rbx]
  4288fd:	cmp    esi,edi
  4288ff:	inc    DWORD PTR [rbx]
  428901:	cmp    esi,edi
  428903:	inc    DWORD PTR [rbx]
  428905:	cmp    esi,edi
  428907:	inc    DWORD PTR [rbx]
  428909:	cmp    esi,edi
  42890b:	inc    DWORD PTR [rbx]
  42890d:	cmp    esi,edi
  42890f:	inc    DWORD PTR [rbx]
  428911:	cmp    esi,edi
  428913:	inc    DWORD PTR [rbx]
  428915:	cmp    esi,edi
  428917:	inc    DWORD PTR [rbx]
  428919:	cmp    esi,edi
  42891b:	inc    DWORD PTR [rbx]
  42891d:	cmp    esi,edi
  42891f:	inc    DWORD PTR [rbx]
  428921:	cmp    esi,edi
  428923:	inc    DWORD PTR [rbx]
  428925:	cmp    esi,edi
  428927:	inc    DWORD PTR [rbx]
  428929:	cmp    esi,edi
  42892b:	inc    DWORD PTR [rbx]
  42892d:	cmp    esi,edi
  42892f:	inc    DWORD PTR [rbx]
  428931:	cmp    esi,edi
  428933:	inc    DWORD PTR [rbx]
  428935:	cmp    esi,edi
  428937:	inc    DWORD PTR [rbx]
  428939:	cmp    esi,edi
  42893b:	inc    DWORD PTR [rbx]
  42893d:	cmp    esi,edi
  42893f:	inc    DWORD PTR [rbx]
  428941:	cmp    esi,edi
  428943:	inc    DWORD PTR [rbx]
  428945:	cmp    esi,edi
  428947:	inc    DWORD PTR [rbx]
  428949:	cmp    esi,edi
  42894b:	inc    DWORD PTR [rbx]
  42894d:	cmp    esi,edi
  42894f:	inc    DWORD PTR [rbx]
  428951:	cmp    esi,edi
  428953:	inc    DWORD PTR [rbx]
  428955:	cmp    esi,edi
  428957:	inc    DWORD PTR [rbx]
  428959:	cmp    esi,edi
  42895b:	inc    DWORD PTR [rbx]
  42895d:	cmp    esi,edi
  42895f:	inc    DWORD PTR [rbx]
  428961:	cmp    esi,edi
  428963:	inc    DWORD PTR [rbx]
  428965:	cmp    esi,edi
  428967:	inc    DWORD PTR [rbx]
  428969:	cmp    esi,edi
  42896b:	inc    DWORD PTR [rbx]
  42896d:	cmp    esi,edi
  42896f:	inc    DWORD PTR [rax+0x3fffe38]
  428975:	cmp    esi,edi
  428977:	inc    DWORD PTR [rbx]
  428979:	cmp    esi,edi
  42897b:	inc    DWORD PTR [rbx]
  42897d:	cmp    esi,edi
  42897f:	inc    DWORD PTR [rbx]
  428981:	cmp    esi,edi
  428983:	inc    DWORD PTR [rbx]
  428985:	cmp    esi,edi
  428987:	inc    DWORD PTR [rbx]
  428989:	cmp    esi,edi
  42898b:	inc    DWORD PTR [rbx]
  42898d:	cmp    esi,edi
  42898f:	inc    DWORD PTR [rbx]
  428991:	cmp    esi,edi
  428993:	inc    DWORD PTR [rax]
  428995:	cmp    esi,edi
  428997:	call   QWORD PTR [rcx]
  428999:	cmp    esi,edi
  42899b:	inc    DWORD PTR [rbx]
  42899d:	cmp    esi,edi
  42899f:	inc    DWORD PTR [rbx]
  4289a1:	cmp    esi,edi
  4289a3:	inc    DWORD PTR [rbx]
  4289a5:	cmp    esi,edi
  4289a7:	jmp    QWORD PTR [rax]
  4289a9:	cmp    esi,edi
  4289ab:	inc    DWORD PTR [rbx]
  4289ad:	cmp    esi,edi
  4289af:	inc    DWORD PTR [rbx]
  4289b1:	cmp    esi,edi
  4289b3:	inc    DWORD PTR [rbx]
  4289b5:	cmp    esi,edi
  4289b7:	inc    DWORD PTR [rbx]
  4289b9:	cmp    esi,edi
  4289bb:	inc    DWORD PTR [rbx]
  4289bd:	cmp    esi,edi
  4289bf:	inc    DWORD PTR [rbx]
  4289c1:	cmp    esi,edi
  4289c3:	inc    DWORD PTR [rbx]
  4289c5:	cmp    esi,edi
  4289c7:	push   QWORD PTR [rax]
  4289c9:	cmp    esi,edi
  4289cb:	inc    DWORD PTR [rbx]
  4289cd:	cmp    esi,edi
  4289cf:	inc    DWORD PTR [rbx]
  4289d1:	cmp    esi,edi
  4289d3:	inc    DWORD PTR [rbx]
  4289d5:	cmp    esi,edi
  4289d7:	inc    DWORD PTR [rax]
  4289d9:	cmp    dh,bh
  4289db:	inc    DWORD PTR [rbx]
  4289dd:	cmp    esi,edi
  4289df:	call   QWORD PTR [rax]
  4289e1:	cmp    dh,bh
  4289e3:	inc    DWORD PTR [rbx]
  4289e5:	cmp    esi,edi
  4289e7:	push   rsp
  4289e9:	(bad)  
  4289ea:	(bad)  
  4289eb:	inc    DWORD PTR [rbx]
  4289ed:	cmp    esi,edi
  4289ef:	inc    DWORD PTR [rax+0x2afffe38]
  4289f5:	(bad)  
  4289f6:	add    BYTE PTR [rip+0x3e2d],ch        # 0x42c829
  4289fc:	mov    ch,0x3b
  4289fe:	(bad)  
  4289ff:	jmp    QWORD PTR [rsi-0x590001c3]
  428a05:	cmp    eax,0x3da6fffe
  428a0a:	(bad)  
  428a0b:	jmp    QWORD PTR [rsi-0x590001c3]
  428a11:	cmp    eax,0x3da6fffe
  428a16:	(bad)  
  428a17:	jmp    QWORD PTR [rsi-0x590001c3]
  428a1d:	cmp    eax,0x3da6fffe
  428a22:	(bad)  
  428a23:	push   QWORD PTR [rcx-0x590001c5]
  428a29:	cmp    eax,0x3da6fffe
  428a2e:	(bad)  
  428a2f:	jmp    QWORD PTR [rsi-0x590001c3]
  428a35:	cmp    eax,0x3da6fffe
  428a3a:	(bad)  
  428a3b:	jmp    QWORD PTR [rsi-0x590001c3]
  428a41:	cmp    eax,0x3da6fffe
  428a46:	(bad)  
  428a47:	jmp    QWORD PTR [rsi-0x590001c3]
  428a4d:	cmp    eax,0x3da6fffe
  428a52:	(bad)  
  428a53:	jmp    QWORD PTR [rsi-0x590001c3]
  428a59:	cmp    eax,0x3da6fffe
  428a5e:	(bad)  
  428a5f:	jmp    QWORD PTR [rsi-0x590001c3]
  428a65:	cmp    eax,0x3da6fffe
  428a6a:	(bad)  
  428a6b:	jmp    QWORD PTR [rsi-0x590001c3]
  428a71:	cmp    eax,0x3da6fffe
  428a76:	(bad)  
  428a77:	jmp    QWORD PTR [rsi-0x590001c3]
  428a7d:	cmp    eax,0x3da6fffe
  428a82:	(bad)  
  428a83:	jmp    QWORD PTR [rsi+rdi*1]
  428a86:	(bad)  
  428a87:	jmp    QWORD PTR [rsi-0x590001c3]
  428a8d:	cmp    eax,0x3da6fffe
  428a92:	(bad)  
  428a93:	jmp    QWORD PTR [rsi+0x24fffe3d]
  428a99:	ds (bad) 
  428a9b:	jmp    QWORD PTR [rsi-0x590001c3]
  428aa1:	cmp    eax,0x3da6fffe
  428aa6:	(bad)  
  428aa7:	jmp    QWORD PTR [rsi-0x4e0001c3]
  428aad:	cmp    edi,esi
  428aaf:	jmp    QWORD PTR [rsi-0x590001c3]
  428ab5:	cmp    eax,0x3da6fffe
  428aba:	(bad)  
  428abb:	jmp    QWORD PTR [rsi-0x590001c3]
  428ac1:	cmp    eax,0x3da6fffe
  428ac6:	(bad)  
  428ac7:	jmp    QWORD PTR [rsi-0x590001c3]
  428acd:	cmp    eax,0x3da6fffe
  428ad2:	(bad)  
  428ad3:	jmp    QWORD PTR [rsi-0x590001c3]
  428ad9:	cmp    eax,0x3da6fffe
  428ade:	(bad)  
  428adf:	jmp    QWORD PTR [rsi+0x5bfffe3d]
  428ae5:	cmp    eax,0x3da6fffe
  428aea:	(bad)  
  428aeb:	jmp    QWORD PTR [rsi+0x5bfffe3d]
  428af1:	cmp    eax,0x45f4fffe
  428af6:	(bad)  
  428af7:	jmp    QWORD PTR [rdi-0x600001be]
  428afd:	(bad)  
  428afe:	(bad)  
  428aff:	push   rsp
  428b01:	rex.B (bad) 
  428b03:	call   FWORD PTR [rdi+0x5cfffe3f]
  428b09:	rex.B (bad) 
  428b0b:	(bad)  
  428b0c:	fadd   DWORD PTR [rax-0x2]
  428b0f:	push   QWORD PTR [rbx+0x74]
  428b12:	(bad)  
  428b13:	je     0x428b15
  428b15:	outs   dx,DWORD PTR ds:[rsi]
  428b16:	jo     0x428b7d
  428b18:	outs   dx,BYTE PTR ds:[rsi]
  428b19:	add    BYTE PTR [rsi+0x6f],ah
  428b1c:	jo     0x428b83
  428b1e:	outs   dx,BYTE PTR ds:[rsi]
  428b1f:	add    BYTE PTR [rbx+0x48],dl
  428b22:	rex.RB
  428b23:	rex.WR
  428b24:	rex.WR add BYTE PTR [rdi],r13b
  428b27:	(bad)  
  428b28:	imul   ebp,DWORD PTR [rsi+0x2f],0x68736162
  428b2f:	add    BYTE PTR [rdx+0x0],dh
  428b32:	data16 jae 0x428ba9
  428b35:	(bad)  
  428b36:	je     0x428b38
  428b38:	ja     0x428b3a
  428b3a:	data16 jb 0x428ba2
  428b3d:	outs   dx,DWORD PTR ds:[rsi]
  428b3e:	jo     0x428ba5
  428b40:	outs   dx,BYTE PTR ds:[rsi]
  428b41:	add    BYTE PTR [rip+0x756c],ah        # 0x4300b3
  428b47:	add    BYTE PTR [rax],ch
  428b49:	(bad)  
  428b4a:	(bad)  
  428b4b:	push   QWORD PTR [rbx-0x4c0001a0]
  428b51:	(bad)  
  428b52:	(bad)  
  428b53:	push   QWORD PTR [rbx-0x4c0001a0]
  428b59:	(bad)  
  428b5a:	(bad)  
  428b5b:	push   QWORD PTR [rbx-0x4c0001a0]
  428b61:	(bad)  
  428b62:	(bad)  
  428b63:	jmp    QWORD PTR [rbx-0x6c0001a0]
  428b69:	(bad)  
  428b6a:	(bad)  
  428b6b:	inc    DWORD PTR [rbx-0x100001a0]
  428b71:	pop    rdi
  428b72:	(bad)  
  428b73:	push   QWORD PTR [rbx+0x60]
  428b76:	(bad)  
  428b77:	jmp    QWORD PTR [rbx+0x60]
  428b7a:	(bad)  
  428b7b:	call   QWORD PTR [rbx+0x60]
  428b7e:	(bad)  
  428b7f:	push   QWORD PTR [rdx+0x65]
  428b82:	(bad)  
  428b83:	outs   dx,DWORD PTR fs:[rsi]
  428b85:	outs   dx,BYTE PTR ds:[rsi]
  428b86:	ins    BYTE PTR es:[rdi],dx
  428b87:	jns    0x428ba9
  428b89:	and    eax,0x2e005f73
  428b8e:	sub    al,BYTE PTR [rax]
  428b90:	and    esp,DWORD PTR [rax]
  428b92:	and    BYTE PTR [rax],al
  428b94:	and    eax,0x2a000a73
  428b99:	imul   edi,esi,0xffffffff
  428b9c:	pop    rax
  428b9d:	imul   edi,esi,0xffffffff
  428ba0:	test   al,0x6b
  428ba2:	(bad)  
  428ba3:	(bad)  
  428ba4:	fsubr  DWORD PTR [rbx-0x2]
  428ba7:	dec    DWORD PTR [rax]
  428ba9:	ins    BYTE PTR es:[rdi],dx
  428baa:	(bad)  
  428bab:	jmp    FWORD PTR [rsp+rbp*2-0x2]
  428baf:	jmp    FWORD PTR [rax+0x6a]
  428bb2:	(bad)  
  428bb3:	dec    DWORD PTR [rip+0x72fffe6b]        # 0x73428a24
  428bb9:	gs jae 0x428c21
  428bbc:	je     0x428bec
  428bbe:	movsxd eax,DWORD PTR [rax]
  428bc0:	xor    BYTE PTR [rax],ah
  428bc2:	cmp    eax,0x31203d
  428bc7:	push   r13
  428bc9:	push   rsp
  428bca:	rex.WRXB
  428bcb:	rex.WRXB push r8
  428bcd:	push   rsp
  428bce:	push   rbx
  428bcf:	pop    rdi
  428bd0:	push   rbp
  428bd1:	push   rbx
  428bd2:	rex.B
  428bd3:	rex.RXB
  428bd4:	add    BYTE PTR [r8],r8b
  428bd7:	add    al,bl
  428bd9:	cmp    dh,0xff
  428bdc:	test   al,0x81
  428bde:	(bad)  
  428bdf:	jmp    FWORD PTR [rax-0x5700017f]
  428be5:	cmp    esi,0xfe81a8ff
  428beb:	jmp    FWORD PTR [rax-0x5700017f]
  428bf1:	cmp    esi,0xfe81a8ff
  428bf7:	jmp    FWORD PTR [rax-0x5700017f]
  428bfd:	cmp    esi,0xfe81a8ff
  428c03:	call   FWORD PTR [rip+0xffffffffa8fffe81]        # 0xffffffffa9428a8a
  428c09:	cmp    esi,0xfe81a8ff
  428c0f:	jmp    FWORD PTR [rax-0x5700017f]
  428c15:	cmp    esi,0xfe81a8ff
  428c1b:	jmp    FWORD PTR [rax-0x5700017f]
  428c21:	cmp    esi,0xfe8099ff
  428c27:	jmp    FWORD PTR [rax-0x5700017f]
  428c2d:	cmp    esi,0xfe81a8ff
  428c33:	jmp    FWORD PTR [rax-0x5700017f]
  428c39:	cmp    esi,0xfe81a8ff
  428c3f:	jmp    FWORD PTR [rax-0x5700017f]
  428c45:	cmp    esi,0xfe81a8ff
  428c4b:	jmp    FWORD PTR [rax-0x5700017f]
  428c51:	cmp    esi,0xfe81a8ff
  428c57:	(bad)  
  428c58:	fadd   DWORD PTR [rax-0x7e570002]
  428c5e:	(bad)  
  428c5f:	jmp    FWORD PTR [rax-0x5700017f]
  428c65:	cmp    esi,0xfe81a8ff
  428c6b:	jmp    FWORD PTR [rax-0x5700017f]
  428c71:	cmp    esi,0xfe81a8ff
  428c77:	jmp    FWORD PTR [rax-0x5700017f]
  428c7d:	cmp    esi,0xfe81a8ff
  428c83:	call   FWORD PTR [rip+0xffffffffa8fffe81]        # 0xffffffffa9428b0a
  428c89:	cmp    esi,0xfe81a8ff
  428c8f:	jmp    FWORD PTR [rax-0x5700017f]
  428c95:	cmp    esi,0xfe81a8ff
  428c9b:	jmp    FWORD PTR [rax-0x5700017f]
  428ca1:	cmp    esi,0xfe8099ff
  428ca7:	push   QWORD PTR [rdx+0x65]
  428caa:	(bad)  
  428cab:	add    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  428cb0:	outs   dx,DWORD PTR ds:[rsi]
  428cb1:	jo     0x428d27
  428cb3:	jae    0x428cb5
  428cb5:	and    eax,0x50005f73
  428cba:	rex.WRXB push r11
  428cbc:	rex.WB pop r8
  428cbe:	rex.WR pop rcx
  428cc0:	pop    rdi
  428cc1:	rex.XB
  428cc2:	rex.WRXB push r10
  428cc4:	push   rdx
  428cc5:	rex.RB
  428cc6:	rex.XB push r12
  428cc8:	add    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca7f4fb
  428cce:	jo     0x428cd0
  428cd0:	xor    al,0x31
  428cd2:	xor    DWORD PTR cs:[rax],eax
  428cd5:	and    eax,0x75252d25
  428cda:	jae    0x428cfc
  428cdc:	and    eax,0xa7325
  428ce1:	and    BYTE PTR [rax],al
  428ce3:	rex.WR
  428ce4:	rex.WRXB
  428ce5:	rex.WRX
  428ce6:	rex.RXB push r13
  428ce8:	push   rbx
  428ce9:	rex.B
  428cea:	rex.RXB
  428ceb:	add    BYTE PTR [r13+0x53],r10b
  428cef:	rex.B
  428cf0:	rex.RXB
  428cf1:	add    BYTE PTR [r14+0x45],r10b
  428cf5:	push   rdx
  428cf6:	push   rbx
  428cf7:	rex.WB
  428cf8:	rex.WRXB
  428cf9:	rex.WRX add BYTE PTR [rdi+0x6e],r12b
  428cfd:	jne    0x428cff
  428cff:	(bad)  
  428d00:	jne    0x428d76
  428d02:	outs   dx,DWORD PTR ds:[rsi]
  428d03:	outs   dx,DWORD PTR ds:[rsi]
  428d04:	jo     0x428d7a
  428d06:	jae    0x428d08
  428d08:	outs   dx,BYTE PTR ds:[rsi]
  428d09:	outs   dx,DWORD PTR ds:[rsi]
  428d0a:	pop    rdi
  428d0b:	ins    DWORD PTR es:[rdi],dx
  428d0c:	imul   esi,DWORD PTR [rbx+0x75],0x755f6573
  428d13:	jae    0x428d76
  428d15:	add    BYTE PTR gs:[ebp+0x69],ch
  428d1a:	jae    0x428d91
  428d1c:	jae    0x428d83
  428d1e:	pop    rdi
  428d1f:	jne    0x428d94
  428d21:	(bad)  
  428d22:	add    BYTE PTR gs:[ebx+0x6f],ah
  428d27:	ins    DWORD PTR es:[rdi],dx
  428d28:	jo     0x428d9f
  428d2a:	je     0x428d91
	...
  428d40:	add    eax,DWORD PTR [rax]
  428d42:	add    BYTE PTR [rax],al
  428d44:	add    BYTE PTR [rax],al
  428d46:	add    BYTE PTR [rax],al
  428d48:	add    BYTE PTR [rax],dl
  428d4a:	add    BYTE PTR [rax],al
  428d4c:	add    BYTE PTR [rax],al
  428d4e:	add    BYTE PTR [rax],al
  428d50:	sti    
  428d51:	mov    WORD PTR [rdx+0x0],es
  428d54:	add    BYTE PTR [rax],al
  428d56:	add    BYTE PTR [rax],al
  428d58:	or     BYTE PTR [rax],al
  428d5a:	add    BYTE PTR [rax],al
  428d5c:	add    BYTE PTR [rax],al
  428d5e:	add    BYTE PTR [rax],al
  428d60:	(bad)  
  428d61:	out    dx,eax
  428d62:	(bad)  
  428d63:	inc    DWORD PTR [rax]
  428d65:	add    BYTE PTR [rax],al
  428d67:	add    bh,bh
  428d69:	mov    WORD PTR [rdx+0x0],es
  428d6c:	add    BYTE PTR [rax],al
  428d6e:	add    BYTE PTR [rax],al
  428d70:	sldt   WORD PTR [rax]
  428d73:	add    BYTE PTR [rax],al
  428d75:	add    BYTE PTR [rax],al
  428d77:	add    BYTE PTR [rax],al
  428d79:	add    BYTE PTR [rax],al
  428d7c:	add    BYTE PTR [rax],al
  428d7e:	add    BYTE PTR [rax],al
  428d80:	or     BYTE PTR [rbp+0x42],cl
  428d86:	add    BYTE PTR [rax],al
  428d88:	or     al,0x0
  428d8a:	add    BYTE PTR [rax],al
  428d8c:	add    BYTE PTR [rax],al
  428d8e:	add    BYTE PTR [rax],al
  428d90:	(bad)  
  428d91:	mov    edi,0xffff
  428d96:	add    BYTE PTR [rax],al
  428d98:	sbb    BYTE PTR [rbp+0x42],cl
  428d9e:	add    BYTE PTR [rax],al
  428da0:	(bad)  
	...
  428da9:	add    BYTE PTR [rax],dl
  428dab:	add    BYTE PTR [rax],al
  428dad:	add    BYTE PTR [rax],al
  428daf:	add    BYTE PTR [rip+0x428d],ah        # 0x42d042
	...
  428dbd:	add    BYTE PTR [rax],al
  428dbf:	add    BYTE PTR [rax+0x8],ah
  428dc2:	add    BYTE PTR [r8],al
  428dc5:	add    BYTE PTR [rax],al
  428dc7:	add    BYTE PTR [rax+0xb],dl
  428dca:	add    BYTE PTR [r8],al
  428dcd:	add    BYTE PTR [rax],al
  428dcf:	add    BYTE PTR [rcx+0x6d],ah
  428dd2:	jo     0x428e0f
  428dd4:	add    BYTE PTR [rsp+rsi*2+0x3b],ch
  428dd8:	add    BYTE PTR [rdi+0x74],ah
  428ddb:	cmp    eax,DWORD PTR [rax]
  428ddd:	data16 cmp ax,WORD PTR [rax]
  428de1:	push   0x63003b74
  428de6:	jb     0x428e23
  428de8:	add    BYTE PTR [rsi+0x74],dh
  428deb:	cmp    eax,DWORD PTR [rax]
  428ded:	(bad)  
  428dee:	gs ins BYTE PTR es:[rdi],dx
  428df0:	cmp    eax,DWORD PTR [rax]
  428df2:	outs   dx,BYTE PTR ds:[rsi]
  428df3:	ins    BYTE PTR es:[rdi],dx
  428df4:	cmp    eax,DWORD PTR [rax]
  428df6:	jae    0x428e68
  428df8:	(bad)  
  428df9:	movsxd esp,DWORD PTR [rbp+0x3b]
  428dfc:	add    BYTE PTR [rcx+0x75],dh
  428dff:	outs   dx,DWORD PTR ds:[rsi]
  428e00:	je     0x428e3d
  428e02:	add    BYTE PTR [rcx+0x70],ah
  428e05:	outs   dx,DWORD PTR ds:[rsi]
  428e06:	jae    0x428e43
	...
  428e40:	ror    BYTE PTR [rbp+0x42],1
  428e46:	add    BYTE PTR [rax],al
  428e48:	add    al,0x0
  428e4a:	add    BYTE PTR es:[rax],al
  428e4d:	add    BYTE PTR [rax],al
  428e4f:	add    ch,dl
  428e51:	lea    eax,[rdx+0x0]
  428e54:	add    BYTE PTR [rax],al
  428e56:	add    BYTE PTR [rax],al
  428e58:	add    eax,DWORD PTR [rax]
  428e5a:	cmp    al,0x0
  428e5c:	add    BYTE PTR [rax],al
  428e5e:	add    BYTE PTR [rax],al
  428e60:	(bad)  [rbp+0x42]
  428e66:	add    BYTE PTR [rax],al
  428e68:	add    eax,DWORD PTR [rax]
  428e6a:	add    BYTE PTR ds:[rax],al
  428e6d:	add    BYTE PTR [rax],al
  428e6f:	add    ch,bl
  428e71:	lea    eax,[rdx+0x0]
  428e74:	add    BYTE PTR [rax],al
  428e76:	add    BYTE PTR [rax],al
  428e78:	add    eax,DWORD PTR [rax]
  428e7a:	or     al,0x0
  428e7c:	add    BYTE PTR [rax],al
  428e7e:	add    BYTE PTR [rax],al
  428e80:	loope  0x428e0f
  428e82:	rex.X add BYTE PTR [rax],al
  428e85:	add    BYTE PTR [rax],al
  428e87:	add    BYTE PTR [rbx],al
  428e89:	add    BYTE PTR [rcx],cl
  428e8b:	add    BYTE PTR [rax],al
  428e8d:	add    BYTE PTR [rax],al
  428e8f:	add    ch,ah
  428e91:	lea    eax,[rdx+0x0]
  428e94:	add    BYTE PTR [rax],al
  428e96:	add    BYTE PTR [rax],al
  428e98:	add    eax,DWORD PTR [rax]
  428e9a:	or     eax,0x0
  428e9f:	add    cl,ch
  428ea1:	lea    eax,[rdx+0x0]
  428ea4:	add    BYTE PTR [rax],al
  428ea6:	add    BYTE PTR [rax],al
  428ea8:	add    eax,DWORD PTR [rax]
  428eaa:	or     eax,DWORD PTR [rax]
  428eac:	add    BYTE PTR [rax],al
  428eae:	add    BYTE PTR [rax],al
  428eb0:	in     eax,dx
  428eb1:	lea    eax,[rdx+0x0]
  428eb4:	add    BYTE PTR [rax],al
  428eb6:	add    BYTE PTR [rax],al
  428eb8:	add    al,0x0
  428eba:	(bad)  
  428ebb:	add    BYTE PTR [rax],al
  428ebd:	add    BYTE PTR [rax],al
  428ebf:	add    dl,dh
  428ec1:	lea    eax,[rdx+0x0]
  428ec4:	add    BYTE PTR [rax],al
  428ec6:	add    BYTE PTR [rax],al
  428ec8:	add    eax,DWORD PTR [rax]
  428eca:	or     al,BYTE PTR [rax]
  428ecc:	add    BYTE PTR [rax],al
  428ece:	add    BYTE PTR [rax],al
  428ed0:	test   BYTE PTR [rbp+0x42],0x0
  428ed7:	add    BYTE PTR [rsi],al
  428ed9:	add    BYTE PTR [rax],ah
  428edb:	add    BYTE PTR [rax],al
  428edd:	add    BYTE PTR [rax],al
  428edf:	add    ch,bh
  428ee1:	lea    eax,[rdx+0x0]
  428ee4:	add    BYTE PTR [rax],al
  428ee6:	add    BYTE PTR [rax],al
  428ee8:	add    eax,0x2200
  428eed:	add    BYTE PTR [rax],al
  428eef:	add    BYTE PTR [rbx],al
  428ef1:	mov    es,WORD PTR [rdx+0x0]
  428ef4:	add    BYTE PTR [rax],al
  428ef6:	add    BYTE PTR [rax],al
  428ef8:	add    eax,0x2700
  428efd:	add    BYTE PTR [rax],al
  428eff:	add    BYTE PTR [rdx],cl
  428f01:	or     cl,BYTE PTR [rdx]
  428f03:	or     cl,BYTE PTR [rdx]
  428f05:	or     cl,BYTE PTR [rdx]
  428f07:	or     cl,BYTE PTR [rdx]
  428f09:	or     cl,BYTE PTR [rdx]
  428f0b:	or     cl,BYTE PTR [rdx]
  428f0d:	or     cl,BYTE PTR [rdx]
  428f0f:	or     cl,BYTE PTR [rdx]
  428f11:	or     cl,BYTE PTR [rdx]
  428f13:	or     cl,BYTE PTR [rdx]
  428f15:	or     cl,BYTE PTR [rdx]
  428f17:	or     cl,BYTE PTR [rdx]
  428f19:	or     cl,BYTE PTR [rdx]
  428f1b:	or     cl,BYTE PTR [rdx]
  428f1d:	or     cl,BYTE PTR [rdx]
  428f1f:	or     cl,BYTE PTR [rdx]
  428f21:	or     cl,BYTE PTR [rdx]
  428f23:	or     cl,BYTE PTR [rdx]
  428f25:	or     cl,BYTE PTR [rdx]
  428f27:	or     cl,BYTE PTR [rdx]
  428f29:	or     cl,BYTE PTR [rdx]
  428f2b:	or     cl,BYTE PTR [rdx]
  428f2d:	or     cl,BYTE PTR [rdx]
  428f2f:	or     cl,BYTE PTR [rdx]
  428f31:	or     cl,BYTE PTR [rdx]
  428f33:	or     cl,BYTE PTR [rdx]
  428f35:	or     cl,BYTE PTR [rdx]
  428f37:	or     cl,BYTE PTR [rdx]
  428f39:	or     cl,BYTE PTR [rdx]
  428f3b:	or     cl,BYTE PTR [rdx]
  428f3d:	or     cl,BYTE PTR [rdx]
  428f3f:	or     cl,BYTE PTR [rdx]
  428f41:	or     cl,BYTE PTR [rdx]
  428f43:	or     cl,BYTE PTR [rdx]
  428f45:	or     cl,BYTE PTR [rdx]
  428f47:	or     cl,BYTE PTR [rdx]
  428f49:	or     cl,BYTE PTR [rdx]
  428f4b:	or     cl,BYTE PTR [rdx]
  428f4d:	or     cl,BYTE PTR [rdx]
  428f4f:	or     cl,BYTE PTR [rdx]
  428f51:	or     cl,BYTE PTR [rdx]
  428f53:	or     cl,BYTE PTR [rdx]
  428f55:	or     cl,BYTE PTR [rdx]
  428f57:	or     cl,BYTE PTR [rdx]
  428f59:	or     cl,BYTE PTR [rdx]
  428f5b:	or     cl,BYTE PTR [rdx]
  428f5d:	or     cl,BYTE PTR [rdx]
  428f5f:	or     cl,BYTE PTR [rdx]
  428f61:	or     cl,BYTE PTR [rdx]
  428f63:	add    BYTE PTR [rdx],cl
  428f65:	or     cl,BYTE PTR [rdx]
  428f67:	or     cl,BYTE PTR [rdx]
  428f69:	or     cl,BYTE PTR [rdx]
  428f6b:	add    eax,0xa0a000a
  428f70:	or     cl,BYTE PTR [rdx]
  428f72:	or     cl,BYTE PTR [rdx]
  428f74:	add    BYTE PTR [rax],al
  428f76:	or     al,BYTE PTR [rax]
  428f78:	or     cl,BYTE PTR [rdx]
  428f7a:	or     cl,BYTE PTR [rdx]
  428f7c:	or     cl,BYTE PTR [rdx]
  428f7e:	or     cl,BYTE PTR [rdx]
  428f80:	or     cl,BYTE PTR [rdx]
  428f82:	or     cl,BYTE PTR [rdx]
  428f84:	or     cl,BYTE PTR [rdx]
  428f86:	or     cl,BYTE PTR [rdx]
  428f88:	or     cl,BYTE PTR [rdx]
  428f8a:	or     cl,BYTE PTR [rdx]
  428f8c:	or     cl,BYTE PTR [rdx]
  428f8e:	or     cl,BYTE PTR [rdx]
  428f90:	or     cl,BYTE PTR [rdx]
  428f92:	or     cl,BYTE PTR [rdx]
  428f94:	or     cl,BYTE PTR [rdx]
  428f96:	or     cl,BYTE PTR [rdx]
  428f98:	or     cl,BYTE PTR [rdx]
  428f9a:	or     cl,BYTE PTR [rdx]
  428f9c:	or     cl,BYTE PTR [rdx]
  428f9e:	or     cl,BYTE PTR [rdx]
  428fa0:	or     cl,BYTE PTR [rdx]
  428fa2:	or     cl,BYTE PTR [rdx]
  428fa4:	or     cl,BYTE PTR [rdx]
  428fa6:	or     cl,BYTE PTR [rdx]
  428fa8:	or     cl,BYTE PTR [rdx]
  428faa:	or     cl,BYTE PTR [rdx]
  428fac:	or     cl,BYTE PTR [rdx]
  428fae:	or     cl,BYTE PTR [rdx]
  428fb0:	or     cl,BYTE PTR [rdx]
  428fb2:	or     cl,BYTE PTR [rdx]
  428fb4:	or     cl,BYTE PTR [rdx]
  428fb6:	or     cl,BYTE PTR [rdx]
  428fb8:	or     cl,BYTE PTR [rdx]
  428fba:	or     cl,BYTE PTR [rdx]
  428fbc:	or     cl,BYTE PTR [rdx]
  428fbe:	or     cl,BYTE PTR [rdx]
  428fc0:	or     cl,BYTE PTR [rdx]
  428fc2:	or     cl,BYTE PTR [rdx]
  428fc4:	or     cl,BYTE PTR [rdx]
  428fc6:	or     cl,BYTE PTR [rdx]
  428fc8:	or     cl,BYTE PTR [rdx]
  428fca:	or     cl,BYTE PTR [rdx]
  428fcc:	or     cl,BYTE PTR [rdx]
  428fce:	or     cl,BYTE PTR [rdx]
  428fd0:	or     cl,BYTE PTR [rdx]
  428fd2:	or     cl,BYTE PTR [rdx]
  428fd4:	or     cl,BYTE PTR [rdx]
  428fd6:	or     cl,BYTE PTR [rdx]
  428fd8:	or     cl,BYTE PTR [rdx]
  428fda:	or     cl,BYTE PTR [rdx]
  428fdc:	or     cl,BYTE PTR [rdx]
  428fde:	or     cl,BYTE PTR [rdx]
  428fe0:	or     cl,BYTE PTR [rdx]
  428fe2:	or     cl,BYTE PTR [rdx]
  428fe4:	or     cl,BYTE PTR [rdx]
  428fe6:	or     cl,BYTE PTR [rdx]
  428fe8:	or     cl,BYTE PTR [rdx]
  428fea:	or     cl,BYTE PTR [rdx]
  428fec:	or     cl,BYTE PTR [rdx]
  428fee:	or     cl,BYTE PTR [rdx]
  428ff0:	or     cl,BYTE PTR [rdx]
  428ff2:	or     cl,BYTE PTR [rdx]
  428ff4:	or     cl,BYTE PTR [rdx]
  428ff6:	or     cl,BYTE PTR [rdx]
  428ff8:	or     cl,BYTE PTR [rdx]
  428ffa:	or     cl,BYTE PTR [rdx]
  428ffc:	or     cl,BYTE PTR [rdx]
  428ffe:	or     cl,BYTE PTR [rdx]
  429000:	adc    dl,BYTE PTR [rdx]
  429002:	adc    dl,BYTE PTR [rdx]
  429004:	adc    dl,BYTE PTR [rdx]
  429006:	adc    dl,BYTE PTR [rdx]
  429008:	adc    dl,BYTE PTR [rdx]
  42900a:	adc    dl,BYTE PTR [rdx]
  42900c:	adc    dl,BYTE PTR [rdx]
  42900e:	adc    dl,BYTE PTR [rdx]
  429010:	adc    dl,BYTE PTR [rdx]
  429012:	adc    dl,BYTE PTR [rdx]
  429014:	adc    dl,BYTE PTR [rdx]
  429016:	adc    dl,BYTE PTR [rdx]
  429018:	adc    dl,BYTE PTR [rdx]
  42901a:	adc    dl,BYTE PTR [rdx]
  42901c:	adc    dl,BYTE PTR [rdx]
  42901e:	adc    dl,BYTE PTR [rdx]
  429020:	adc    dl,BYTE PTR [rdx]
  429022:	adc    dl,BYTE PTR [rdx]
  429024:	adc    dl,BYTE PTR [rdx]
  429026:	adc    dl,BYTE PTR [rdx]
  429028:	adc    dl,BYTE PTR [rdx]
  42902a:	adc    dl,BYTE PTR [rdx]
  42902c:	adc    dl,BYTE PTR [rdx]
  42902e:	adc    dl,BYTE PTR [rdx]
  429030:	adc    dl,BYTE PTR [rdx]
  429032:	adc    dl,BYTE PTR [rdx]
  429034:	adc    dl,BYTE PTR [rdx]
  429036:	adc    dl,BYTE PTR [rdx]
  429038:	adc    dl,BYTE PTR [rdx]
  42903a:	adc    dl,BYTE PTR [rdx]
  42903c:	adc    dl,BYTE PTR [rdx]
  42903e:	adc    dl,BYTE PTR [rdx]
  429040:	adc    dl,BYTE PTR [rdx]
  429042:	adc    dl,BYTE PTR [rdx]
  429044:	adc    dl,BYTE PTR [rdx]
  429046:	adc    dl,BYTE PTR [rdx]
  429048:	adc    dl,BYTE PTR [rdx]
  42904a:	adc    dl,BYTE PTR [rdx]
  42904c:	adc    dl,BYTE PTR [rdx]
  42904e:	adc    dl,BYTE PTR [rdx]
  429050:	adc    dl,BYTE PTR [rdx]
  429052:	adc    dl,BYTE PTR [rdx]
  429054:	adc    dl,BYTE PTR [rdx]
  429056:	adc    dl,BYTE PTR [rdx]
  429058:	adc    dl,BYTE PTR [rdx]
  42905a:	adc    dl,BYTE PTR [rdx]
  42905c:	adc    dl,BYTE PTR [rdx]
  42905e:	adc    dl,BYTE PTR [rdx]
  429060:	adc    dl,BYTE PTR [rdx]
  429062:	add    BYTE PTR [rdx],dl
  429064:	adc    dl,BYTE PTR [rdx]
  429066:	adc    dl,BYTE PTR [rdx]
  429068:	add    BYTE PTR [rdx],cl
  42906a:	adc    al,BYTE PTR [rip+0x12051212]        # 0x1247a282
  429070:	adc    dl,BYTE PTR [rdx]
  429072:	adc    al,BYTE PTR [rax]
  429074:	adc    dl,BYTE PTR [rdx]
  429076:	adc    dl,BYTE PTR [rdx]
  429078:	adc    dl,BYTE PTR [rdx]
  42907a:	adc    dl,BYTE PTR [rdx]
  42907c:	adc    dl,BYTE PTR [rdx]
  42907e:	adc    dl,BYTE PTR [rdx]
  429080:	adc    dl,BYTE PTR [rdx]
  429082:	adc    dl,BYTE PTR [rdx]
  429084:	adc    dl,BYTE PTR [rdx]
  429086:	adc    dl,BYTE PTR [rdx]
  429088:	adc    dl,BYTE PTR [rdx]
  42908a:	adc    dl,BYTE PTR [rdx]
  42908c:	adc    dl,BYTE PTR [rdx]
  42908e:	adc    dl,BYTE PTR [rdx]
  429090:	adc    dl,BYTE PTR [rdx]
  429092:	adc    dl,BYTE PTR [rdx]
  429094:	adc    dl,BYTE PTR [rdx]
  429096:	adc    dl,BYTE PTR [rdx]
  429098:	adc    dl,BYTE PTR [rdx]
  42909a:	adc    dl,BYTE PTR [rdx]
  42909c:	adc    dl,BYTE PTR [rdx]
  42909e:	adc    dl,BYTE PTR [rdx]
  4290a0:	adc    dl,BYTE PTR [rdx]
  4290a2:	adc    dl,BYTE PTR [rdx]
  4290a4:	adc    dl,BYTE PTR [rdx]
  4290a6:	adc    dl,BYTE PTR [rdx]
  4290a8:	adc    dl,BYTE PTR [rdx]
  4290aa:	adc    dl,BYTE PTR [rdx]
  4290ac:	adc    dl,BYTE PTR [rdx]
  4290ae:	adc    dl,BYTE PTR [rdx]
  4290b0:	adc    dl,BYTE PTR [rdx]
  4290b2:	adc    dl,BYTE PTR [rdx]
  4290b4:	adc    dl,BYTE PTR [rdx]
  4290b6:	adc    dl,BYTE PTR [rdx]
  4290b8:	adc    dl,BYTE PTR [rdx]
  4290ba:	adc    dl,BYTE PTR [rdx]
  4290bc:	adc    dl,BYTE PTR [rdx]
  4290be:	adc    dl,BYTE PTR [rdx]
  4290c0:	adc    dl,BYTE PTR [rdx]
  4290c2:	adc    dl,BYTE PTR [rdx]
  4290c4:	adc    dl,BYTE PTR [rdx]
  4290c6:	adc    dl,BYTE PTR [rdx]
  4290c8:	adc    dl,BYTE PTR [rdx]
  4290ca:	adc    dl,BYTE PTR [rdx]
  4290cc:	adc    dl,BYTE PTR [rdx]
  4290ce:	adc    dl,BYTE PTR [rdx]
  4290d0:	adc    dl,BYTE PTR [rdx]
  4290d2:	adc    dl,BYTE PTR [rdx]
  4290d4:	adc    dl,BYTE PTR [rdx]
  4290d6:	adc    dl,BYTE PTR [rdx]
  4290d8:	adc    dl,BYTE PTR [rdx]
  4290da:	adc    dl,BYTE PTR [rdx]
  4290dc:	adc    dl,BYTE PTR [rdx]
  4290de:	adc    dl,BYTE PTR [rdx]
  4290e0:	adc    dl,BYTE PTR [rdx]
  4290e2:	adc    dl,BYTE PTR [rdx]
  4290e4:	adc    dl,BYTE PTR [rdx]
  4290e6:	adc    dl,BYTE PTR [rdx]
  4290e8:	adc    dl,BYTE PTR [rdx]
  4290ea:	adc    dl,BYTE PTR [rdx]
  4290ec:	adc    dl,BYTE PTR [rdx]
  4290ee:	adc    dl,BYTE PTR [rdx]
  4290f0:	adc    dl,BYTE PTR [rdx]
  4290f2:	adc    dl,BYTE PTR [rdx]
  4290f4:	adc    dl,BYTE PTR [rdx]
  4290f6:	adc    dl,BYTE PTR [rdx]
  4290f8:	adc    dl,BYTE PTR [rdx]
  4290fa:	adc    dl,BYTE PTR [rdx]
  4290fc:	adc    dl,BYTE PTR [rdx]
  4290fe:	adc    dl,BYTE PTR [rdx]
  429100:	add    BYTE PTR es:[rax],al
  429103:	add    BYTE PTR [rax+rax*1],al
  429106:	add    BYTE PTR [rax],al
  429108:	(bad)  
  429109:	ins    DWORD PTR es:[rdi],dx
  42910a:	jo     0x429147
  42910c:	add    BYTE PTR [rax],al
  42910e:	add    BYTE PTR [rax],al
  429110:	cmp    al,0x0
  429112:	add    BYTE PTR [rax],al
  429114:	add    eax,DWORD PTR [rax]
  429116:	add    BYTE PTR [rax],al
  429118:	ins    BYTE PTR es:[rdi],dx
  429119:	je     0x429156
  42911b:	add    BYTE PTR [rax],al
  42911d:	add    BYTE PTR [rax],al
  42911f:	add    BYTE PTR [rsi],bh
  429121:	add    BYTE PTR [rax],al
  429123:	add    BYTE PTR [rbx],al
  429125:	add    BYTE PTR [rax],al
  429127:	add    BYTE PTR [rdi+0x74],ah
  42912a:	cmp    eax,DWORD PTR [rax]
  42912c:	add    BYTE PTR [rax],al
  42912e:	add    BYTE PTR [rax],al
  429130:	and    al,BYTE PTR [rax]
  429132:	add    BYTE PTR [rax],al
  429134:	add    eax,0x71000000
  429139:	jne    0x4291aa
  42913b:	je     0x429178
  42913d:	add    BYTE PTR [rax],al
  42913f:	add    BYTE PTR [rdi],ah
  429141:	add    BYTE PTR [rax],al
  429143:	add    BYTE PTR [rip+0x61000000],al        # 0x61429149
  429149:	jo     0x4291ba
  42914b:	jae    0x429188
	...
  42917d:	add    BYTE PTR [rax],al
  42917f:	add    BYTE PTR [rdi+0x65],ah
  429182:	outs   dx,BYTE PTR ds:[rsi]
  429183:	jae    0x4291ed
  429185:	gs ins BYTE PTR es:[rdi],dx
  429187:	ins    BYTE PTR es:[rdi],dx
  429188:	outs   dx,DWORD PTR ds:[rsi]
  429189:	jo     0x4291ff
  42918b:	and    BYTE PTR [rcx],dh
  42918d:	or     al,BYTE PTR [rbx+0x6f]
  429190:	jo     0x42920b
  429192:	jb     0x4291fd
  429194:	addr32 push 0x43282074
  42919a:	sub    DWORD PTR [rax],esp
  42919c:	xor    DWORD PTR [rcx],edi
  42919e:	cmp    DWORD PTR [rcx],edi
  4291a0:	sub    eax,0x34313032
  4291a5:	and    BYTE PTR [rdx+0x72],al
  4291a8:	jne    0x42920d
  4291aa:	and    BYTE PTR gs:[rbx+0x6f],cl
  4291ae:	jb     0x429212
  4291b0:	sub    al,0x20
  4291b2:	(bad)  
  4291b3:	ins    BYTE PTR es:[rdi],dx
  4291b4:	ins    BYTE PTR es:[rdi],dx
  4291b5:	and    BYTE PTR [rdx+0x69],dh
  4291b8:	addr32 push 0x72207374
  4291be:	gs jae 0x429226
  4291c1:	jb     0x429239
  4291c3:	gs fs or dl,BYTE PTR cs:[rax+rbp*2+0x69]
  4291ca:	jae    0x4291ec
  4291cc:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  4291d3:	and    BYTE PTR [rbx+0x6f],dh
  4291d6:	data16 je 0x429250
  4291d9:	(bad)  
  4291da:	jb     0x429241
  4291dc:	and    BYTE PTR cs:[rcx+0x74],cl
  4291e0:	and    BYTE PTR [rcx+0x73],ch
  4291e3:	and    BYTE PTR [rcx+rbp*2+0x63],ch
  4291e7:	outs   dx,BYTE PTR gs:[rsi]
  4291e9:	jae    0x429250
  4291eb:	and    BYTE PTR fs:[rsi+0x6f],ah
  4291ef:	jb     0x429211
  4291f1:	jne    0x429266
  4291f3:	gs sub al,0x20
  4291f6:	ins    DWORD PTR es:[rdi],dx
  4291f7:	outs   dx,DWORD PTR ds:[rsi]
  4291f8:	imul   esp,DWORD PTR fs:[rsi+0x69],0x69746163
  429200:	outs   dx,DWORD PTR ds:[rsi]
  429201:	outs   dx,BYTE PTR ds:[rsi]
  429202:	and    BYTE PTR [rcx+0x6e],ah
  429205:	or     dh,BYTE PTR fs:[rdx+0x65]
  429209:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  429211:	je     0x42927c
  429213:	outs   dx,DWORD PTR ds:[rsi]
  429214:	outs   dx,BYTE PTR ds:[rsi]
  429215:	and    BYTE PTR [rbp+0x6e],dh
  429218:	fs gs jb 0x42923c
  42921c:	je     0x429286
  42921e:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  429223:	ins    DWORD PTR es:[rdi],dx
  429224:	jae    0x429246
  429226:	outs   dx,DWORD PTR ds:[rsi]
  429227:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  42922c:	and    BYTE PTR [rdi+0x4e],al
  42922f:	push   rbp
  429230:	and    BYTE PTR [rbp+riz*2+0x73],cl
  429234:	jae    0x42929b
  429236:	jb     0x429258
  429238:	rex.RXB
  429239:	outs   dx,BYTE PTR gs:[rsi]
  42923b:	gs jb  0x42929f
  42923e:	ins    BYTE PTR es:[rdi],dx
  42923f:	and    BYTE PTR [rax+0x75],dl
  429242:	(bad)  
  429243:	ins    BYTE PTR es:[rdi],dx
  429244:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  42924b:	outs   dx,BYTE PTR ds:[rsi]
  42924c:	jae    0x4292b3
  42924e:	sub    al,0xa
  429250:	jbe    0x4292b7
  429252:	jb     0x4292c7
  429254:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203220
  42925b:	jb     0x42927d
  42925d:	ins    BYTE PTR es:[rdi],dx
  42925e:	(bad)  
  42925f:	je     0x4292c6
  429261:	jb     0x429283
  429263:	cmp    al,0x68
  429265:	je     0x4292db
  429267:	jo     0x4292a3
  429269:	(bad)  
  42926a:	(bad)  
  42926b:	ja     0x4292e4
  42926d:	ja     0x42929d
  42926f:	outs   dx,BYTE PTR ds:[esi]
  429271:	jne    0x4292a1
  429273:	outs   dx,DWORD PTR ds:[rsi]
  429274:	jb     0x4292dd
  429276:	(bad)  
  429277:	ins    BYTE PTR es:[rdi],dx
  429278:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  42927f:	(bad)  
  429280:	outs   dx,DWORD PTR ds:[rsi]
  429281:	ins    BYTE PTR es:[rdi],dx
  429282:	fs sub eax,0x6563696c
  429288:	outs   dx,BYTE PTR ds:[rsi]
  429289:	jae    0x4292f0
  42928b:	jae    0x4292bc
  42928d:	ins    BYTE PTR es:[rdi],dx
  42928e:	addr32 jo 0x4292fd
  429291:	sub    eax,0x2e302e32
  429296:	push   0x3e6c6d74
  42929b:	or     al,BYTE PTR [rax]
  42929d:	push   rsp
  42929e:	push   0x65672065
  4292a3:	outs   dx,BYTE PTR ds:[rsi]
  4292a4:	jae    0x42930e
  4292a6:	gs ins BYTE PTR es:[rdi],dx
  4292a8:	ins    BYTE PTR es:[rdi],dx
  4292a9:	outs   dx,DWORD PTR ds:[rsi]
  4292aa:	jo     0x429320
  4292ac:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  4292b0:	jb     0x429313
  4292b2:	jb     0x42932d
  4292b4:	and    BYTE PTR [rcx+0x73],ch
  4292b7:	and    BYTE PTR [rsi+0x72],ah
  4292ba:	gs and BYTE PTR gs:[rbx+0x6f],dh
  4292bf:	data16 je 0x429339
  4292c2:	(bad)  
  4292c3:	jb     0x42932a
  4292c5:	cmp    esp,DWORD PTR [rax]
  4292c7:	jns    0x429338
  4292c9:	jne    0x4292eb
  4292cb:	movsxd esp,DWORD PTR [rcx+0x6e]
  4292ce:	and    BYTE PTR [rdx+0x65],dh
  4292d1:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  4292d9:	je     0x429340
  4292db:	and    BYTE PTR [rcx+0x74],ch
  4292de:	and    BYTE PTR [rcx+0x6e],ah
  4292e1:	fs (bad) 
  4292e3:	outs   dx,DWORD PTR ds:[rsi]
  4292e4:	jb     0x4292f0
  4292e6:	ins    DWORD PTR es:[rdi],dx
  4292e7:	outs   dx,DWORD PTR ds:[rsi]
  4292e8:	imul   esp,DWORD PTR fs:[rsi+0x79],0x20746920
  4292f0:	jne    0x429360
  4292f2:	fs gs jb 0x429316
  4292f6:	je     0x429360
  4292f8:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  4292fd:	ins    DWORD PTR es:[rdi],dx
  4292fe:	jae    0x429320
  429300:	outs   dx,DWORD PTR ds:[rsi]
  429301:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  429306:	and    BYTE PTR [rdi+0x4e],al
  429309:	push   rbp
  42930a:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  42930e:	jb     0x429371
  429310:	jb     0x42938b
  429312:	and    BYTE PTR [rdi+0x65],al
  429315:	outs   dx,BYTE PTR ds:[rsi]
  429316:	gs jb  0x42937a
  429319:	ins    BYTE PTR es:[rdi],dx
  42931a:	and    BYTE PTR [rax+0x75],dl
  42931d:	(bad)  
  42931e:	ins    BYTE PTR es:[rdi],dx
  42931f:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  429326:	outs   dx,BYTE PTR ds:[rsi]
  429327:	jae    0x42938e
  429329:	and    BYTE PTR [rcx+0x73],ah
  42932c:	or     dh,BYTE PTR [rax+0x75]
  42932f:	(bad)  
  429330:	ins    BYTE PTR es:[rdi],dx
  429331:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  429338:	jns    0x42935a
  42933a:	je     0x4293a4
  42933c:	and    BYTE PTR gs:[rsi+0x72],al
  429340:	gs and BYTE PTR gs:[rbx+0x6f],dl
  429345:	data16 je 0x4293bf
  429348:	(bad)  
  429349:	jb     0x4293b0
  42934b:	and    BYTE PTR [rsi+0x6f],al
  42934e:	jne    0x4293be
  429350:	fs (bad) 
  429352:	je     0x4293bd
  429354:	outs   dx,DWORD PTR ds:[rsi]
  429355:	outs   dx,BYTE PTR ds:[rsi]
  429356:	cmp    esp,DWORD PTR [rax]
  429358:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65762072
  429361:	jb     0x4293d6
  429363:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203220
  42936a:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  42936f:	and    BYTE PTR [rcx+rbp*2+0x63],cl
  429373:	outs   dx,BYTE PTR gs:[rsi]
  429375:	jae    0x4293dc
  429377:	sub    al,0xa
  429379:	outs   dx,DWORD PTR ds:[rsi]
  42937a:	jb     0x42939c
  42937c:	sub    BYTE PTR [rcx+0x74],ah
  42937f:	and    BYTE PTR [rcx+0x6f],bh
  429382:	jne    0x4293f6
  429384:	and    BYTE PTR [rdi+0x70],ch
  429387:	je     0x4293f2
  429389:	outs   dx,DWORD PTR ds:[rsi]
  42938a:	outs   dx,BYTE PTR ds:[rsi]
  42938b:	sub    DWORD PTR [rax],esp
  42938d:	(bad)  
  42938e:	outs   dx,BYTE PTR ds:[rsi]
  42938f:	jns    0x4293b1
  429391:	ins    BYTE PTR es:[rdi],dx
  429392:	(bad)  
  429393:	je     0x4293fa
  429395:	jb     0x4293b7
  429397:	jbe    0x4293fe
  429399:	jb     0x42940e
  42939b:	imul   ebp,DWORD PTR [rdi+0x6e],0x540a0a2e
  4293a2:	push   0x6c207369
  4293a7:	imul   esp,DWORD PTR [rdx+0x72],0x20797261
  4293ae:	imul   esi,DWORD PTR [rbx+0x20],0x74736964
  4293b5:	jb     0x429420
  4293b7:	(bad)  
  4293b8:	jne    0x42942e
  4293ba:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4293bf:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4293c3:	and    BYTE PTR [rax+0x6f],ch
  4293c6:	jo     0x42942d
  4293c8:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4293cc:	je     0x4293ee
  4293ce:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206c6c69
  4293d6:	(bad)  
  4293d7:	and    BYTE PTR gs:[rbp+0x73],dh
  4293db:	gs data16 jne 0x42944b
  4293df:	sub    al,0x20
  4293e1:	(bad)  
  4293e2:	jne    0x429458
  4293e4:	and    BYTE PTR [rdi+0x49],dl
  4293e7:	push   rsp
  4293e8:	rex.W
  4293e9:	rex.WRXB push r13
  4293eb:	push   rsp
  4293ec:	or     al,BYTE PTR [rcx+0x4e]
  4293ef:	pop    rcx
  4293f0:	and    BYTE PTR [rdi+0x41],dl
  4293f3:	push   rdx
  4293f4:	push   rdx
  4293f5:	rex.B
  4293f6:	rex.WRX push rsp
  4293f8:	pop    rcx
  4293f9:	cmp    esp,DWORD PTR [rax]
  4293fb:	ja     0x429466
  4293fd:	je     0x429467
  4293ff:	outs   dx,DWORD PTR ds:[rsi]
  429400:	jne    0x429476
  429402:	and    BYTE PTR [rbp+0x76],ah
  429405:	outs   dx,BYTE PTR gs:[rsi]
  429407:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42940b:	and    BYTE PTR [rcx+0x6d],ch
  42940e:	jo     0x42947c
  429410:	imul   esp,DWORD PTR [rbp+0x64],0x72617720
  429417:	jb     0x42947a
  429419:	outs   dx,BYTE PTR ds:[rsi]
  42941a:	je     0x429495
  42941c:	and    BYTE PTR [rdi+0x66],ch
  42941f:	and    BYTE PTR [rbp+0x45],cl
  429422:	push   rdx
  429423:	rex.XB
  429424:	rex.W
  429425:	rex.B
  429426:	rex.WRX push rsp
  429428:	rex.B
  429429:	rex.X
  42942a:	rex.WB
  42942b:	rex.WR
  42942c:	rex.WB push r12
  42942e:	pop    rcx
  42942f:	and    BYTE PTR [rdi+0x72],ch
  429432:	or     al,BYTE PTR [rsi+0x49]
  429435:	push   rsp
  429436:	rex.WRX
  429437:	rex.RB push r11
  429439:	push   rbx
  42943a:	and    BYTE PTR [rsi+0x4f],al
  42943d:	push   rdx
  42943e:	and    BYTE PTR [rcx+0x20],al
  429441:	push   rax
  429442:	push   r10
  429444:	push   rsp
  429445:	rex.WB
  429446:	rex.XB push r13
  429448:	rex.WR
  429449:	push   r10
  42944b:	and    BYTE PTR [rax+0x55],dl
  42944e:	push   rdx
  42944f:	push   rax
  429450:	rex.WRXB push r11
  429452:	rex.RB
  429453:	and    BYTE PTR cs:[rax],ah
  429456:	push   rbx
  429457:	gs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  42945d:	and    BYTE PTR [rdi+0x4e],al
  429460:	push   rbp
  429461:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  429465:	jb     0x4294c8
  429467:	jb     0x4294e2
  429469:	and    BYTE PTR [rdi+0x65],al
  42946c:	outs   dx,BYTE PTR ds:[rsi]
  42946d:	gs jb  0x4294d1
  429470:	ins    BYTE PTR es:[rdi],dx
  429471:	and    BYTE PTR [rax+0x75],dl
  429474:	(bad)  
  429475:	ins    BYTE PTR es:[rdi],dx
  429476:	imul   esp,DWORD PTR [rbx+0xa],0x6563694c
  42947d:	outs   dx,BYTE PTR ds:[rsi]
  42947e:	jae    0x4294e5
  429480:	and    BYTE PTR [rsi+0x6f],ah
  429483:	jb     0x4294a5
  429485:	ins    DWORD PTR es:[rdi],dx
  429486:	outs   dx,DWORD PTR ds:[rsi]
  429487:	jb     0x4294ee
  429489:	and    BYTE PTR [rbp+riz*2+0x74],ah
  42948d:	(bad)  
  42948e:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x6f590a0a
  429496:	jne    0x4294b8
  429498:	jae    0x429502
  42949a:	outs   dx,DWORD PTR ds:[rsi]
  42949b:	jne    0x429509
  42949d:	and    BYTE PTR fs:[rax+0x61],ch
  4294a1:	jbe    0x429508
  4294a3:	and    BYTE PTR [rdx+0x65],dh
  4294a6:	movsxd esp,DWORD PTR [rbp+0x69]
  4294a9:	jbe    0x429510
  4294ab:	and    BYTE PTR fs:[rcx+0x20],ah
  4294af:	movsxd ebp,DWORD PTR [rdi+0x70]
  4294b2:	jns    0x4294d4
  4294b4:	outs   dx,DWORD PTR ds:[rsi]
  4294b5:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  4294ba:	and    BYTE PTR [rdi+0x4e],al
  4294bd:	push   rbp
  4294be:	and    BYTE PTR [rcx+rbp*2+0x62],cl
  4294c2:	jb     0x429525
  4294c4:	jb     0x42953f
  4294c6:	and    BYTE PTR [rdi+0x65],al
  4294c9:	outs   dx,BYTE PTR ds:[rsi]
  4294ca:	gs jb  0x42952e
  4294cd:	ins    BYTE PTR es:[rdi],dx
  4294ce:	and    BYTE PTR [rax+0x75],dl
  4294d1:	(bad)  
  4294d2:	ins    BYTE PTR es:[rdi],dx
  4294d3:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  4294da:	outs   dx,BYTE PTR ds:[rsi]
  4294db:	jae    0x429542
  4294dd:	or     ah,BYTE PTR [rcx+0x6c]
  4294e0:	outs   dx,DWORD PTR ds:[rsi]
  4294e1:	outs   dx,BYTE PTR ds:[rsi]
  4294e2:	and    BYTE PTR [edi+0x69],dh
  4294e6:	je     0x429550
  4294e8:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4294ec:	jae    0x42950e
  4294ee:	ins    BYTE PTR es:[rdi],dx
  4294ef:	imul   esp,DWORD PTR [rdx+0x72],0x3b797261
  4294f6:	and    BYTE PTR [rcx+0x66],ch
  4294f9:	and    BYTE PTR [rsi+0x6f],ch
  4294fc:	je     0x42952a
  4294fe:	and    BYTE PTR [rbx+0x65],dh
  429501:	or     bh,BYTE PTR gs:[rax+rbp*2]
  429505:	je     0x42957b
  429507:	jo     0x429543
  429509:	(bad)  
  42950a:	(bad)  
  42950b:	ja     0x429584
  42950d:	ja     0x42953d
  42950f:	outs   dx,BYTE PTR ds:[esi]
  429511:	jne    0x429541
  429513:	outs   dx,DWORD PTR ds:[rsi]
  429514:	jb     0x42957d
  429516:	(bad)  
  429517:	ins    BYTE PTR es:[rdi],dx
  429518:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  42951f:	(bad)  
  429520:	outs   dx,DWORD PTR ds:[rsi]
  429521:	ins    BYTE PTR es:[rdi],dx
  429522:	fs sub eax,0x6563696c
  429528:	outs   dx,BYTE PTR ds:[rsi]
  429529:	jae    0x429590
  42952b:	jae    0x42955c
  42952d:	ins    BYTE PTR es:[rdi],dx
  42952e:	addr32 jo 0x42959d
  429531:	sub    eax,0x2e302e32
  429536:	push   0x3e6c6d74
  42953b:	or     al,BYTE PTR [rax]
  42953d:	rex.WRXB jne 0x4295b4
  429540:	jo     0x4295b7
  429542:	je     0x429564
  429544:	push   rbx
  429545:	movsxd esi,DWORD PTR [rdx+0x69]
  429548:	jo     0x4295be
  42954a:	and    BYTE PTR [rsi+0x69],al
  42954d:	ins    BYTE PTR es:[rdi],dx
  42954e:	add    BYTE PTR gs:[rbx+0x43],dl
  429552:	push   rdx
  429553:	rex.WB push r8
  429555:	push   rsp
  429556:	add    BYTE PTR [rbx+0x63],dh
  429559:	jb     0x4295c4
  42955b:	jo     0x4295d1
  42955d:	add    BYTE PTR [rbx+0x68],dl
  429560:	gs ins BYTE PTR es:[rdi],dx
  429562:	ins    BYTE PTR es:[rdi],dx
  429563:	and    BYTE PTR [rsi+0x61],ch
  429566:	ins    DWORD PTR es:[rdi],dx
  429567:	and    BYTE PTR gs:[rax],ch
  42956a:	outs   dx,WORD PTR ds:[rsi]
  42956c:	ins    BYTE PTR es:[rdi],dx
  42956d:	ins    BYTE PTR es:[rdi],dx
  42956e:	outs   dx,DWORD PTR ds:[rsi]
  42956f:	ja     0x4295e4
  429571:	and    BYTE PTR [rdx],ah
  429573:	and    esp,DWORD PTR [rcx]
  429575:	and    ah,BYTE PTR [rax]
  429577:	ins    DWORD PTR es:[rdi],dx
  429578:	(bad)  
  429579:	imul   esp,DWORD PTR [ebx+0x29],0x45485300
  429581:	rex.WR
  429582:	rex.WR add BYTE PTR [rsi+0x6f],r13b
  429586:	sub    eax,0x6c656873
  42958b:	ins    BYTE PTR es:[rdi],dx
  42958c:	add    BYTE PTR [rsi+0x6f],ch
  42958f:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  429593:	jo     0x429601
  429595:	(bad)  
  429596:	jns    0x4295b8
  429598:	gs js  0x42960f
  42959b:	outs   dx,BYTE PTR gs:[rsi]
  42959d:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  4295a3:	(bad)  
  4295a4:	and    BYTE PTR gs:[ecx+0x6e],ch
  4295a9:	outs   dx,WORD PTR ds:[rsi]
  4295ab:	jb     0x42961a
  4295ad:	(bad)  
  4295ae:	je     0x429619
  4295b0:	outs   dx,DWORD PTR ds:[rsi]
  4295b1:	outs   dx,BYTE PTR ds:[rsi]
  4295b2:	and    BYTE PTR [rcx+0x6e],ah
  4295b5:	and    BYTE PTR fs:[rbp+0x78],ah
  4295b9:	imul   esi,DWORD PTR [rax+rax*1+0x68],0x706c65
  4295c1:	gs js  0x429638
  4295c4:	outs   dx,BYTE PTR gs:[rsi]
  4295c6:	fs gs and BYTE PTR fs:[rbp+0x73],dh
  4295cc:	(bad)  
  4295cd:	and    BYTE PTR gs:[ecx+0x6e],ch
  4295d2:	outs   dx,WORD PTR ds:[rsi]
  4295d4:	jb     0x429643
  4295d6:	(bad)  
  4295d7:	je     0x429642
  4295d9:	outs   dx,DWORD PTR ds:[rsi]
  4295da:	outs   dx,BYTE PTR ds:[rsi]
  4295db:	and    BYTE PTR [rax+0x61],dh
  4295de:	jae    0x429653
  4295e0:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  4295e6:	jne    0x429608
  4295e8:	jo     0x42964b
  4295ea:	addr32 gs jb 0x4295ee
  4295ee:	ins    DWORD PTR es:[rdi],dx
  4295ef:	outs   dx,DWORD PTR ds:[rsi]
  4295f0:	jb     0x429657
  4295f2:	sub    eax,0x706c6568
  4295f7:	add    BYTE PTR [rdi+0x75],ch
  4295fa:	je     0x42966c
  4295fc:	jne    0x429672
  4295fe:	and    BYTE PTR [rsi+0x65],dh
  429601:	jb     0x429676
  429603:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  42960a:	outs   dx,DWORD PTR ds:[rsi]
  42960b:	jb     0x42967a
  42960d:	(bad)  
  42960e:	je     0x429679
  429610:	outs   dx,DWORD PTR ds:[rsi]
  429611:	outs   dx,BYTE PTR ds:[rsi]
  429612:	and    BYTE PTR [rcx+0x6e],ah
  429615:	and    BYTE PTR fs:[rbp+0x78],ah
  429619:	imul   esi,DWORD PTR [rax+rax*1+0x76],0x69737265
  429621:	outs   dx,DWORD PTR ds:[rsi]
  429622:	outs   dx,BYTE PTR ds:[rsi]
  429623:	add    BYTE PTR [rdi+0x45],al
  429626:	rex.WRX push rbx
  429628:	rex.W
  429629:	rex.RB
  42962a:	rex.WR
  42962b:	rex.WR
  42962c:	rex.WRXB push r8
  42962e:	push   rsp
  42962f:	add    BYTE PTR [rdi+0x65],ah
  429632:	outs   dx,BYTE PTR ds:[rsi]
  429633:	jae    0x42969d
  429635:	gs ins BYTE PTR es:[rdi],dx
  429637:	ins    BYTE PTR es:[rdi],dx
  429638:	outs   dx,DWORD PTR ds:[rsi]
  429639:	jo     0x4296af
  42963b:	and    BYTE PTR [rip+0x6e654720],ch        # 0x6ea7dd61
  429641:	gs jb  0x4296a5
  429644:	je     0x4296ab
  429646:	and    BYTE PTR [rbx+0x68],dl
  429649:	gs ins BYTE PTR es:[rdi],dx
  42964b:	ins    BYTE PTR es:[rdi],dx
  42964c:	and    BYTE PTR [rdi+0x70],cl
  42964f:	je     0x4296ba
  429651:	outs   dx,DWORD PTR ds:[rsi]
  429652:	outs   dx,BYTE PTR ds:[rsi]
  429653:	and    BYTE PTR [rax+0x72],dl
  429656:	outs   dx,DWORD PTR ds:[rsi]
  429657:	movsxd esp,DWORD PTR [rbp+0x73]
  42965a:	jae    0x4296c5
  42965c:	outs   dx,BYTE PTR ds:[rsi]
  42965d:	and    BYTE PTR [ebx+0x63],dl
  429661:	jb     0x4296cc
  429663:	jo     0x4296d9
  429665:	and    BYTE PTR [rip+0x72655620],ch        # 0x72a7ec8b
  42966b:	and    BYTE PTR cs:[rcx],dh
  42966e:	or     dl,BYTE PTR [rbp+0x73]
  429671:	(bad)  
  429672:	cmp    ah,BYTE PTR gs:[eax]
  429676:	and    BYTE PTR [rip+0x205b2073],ah        # 0x209db6ef
  42967c:	sub    eax,0x616c663c
  429681:	and    BYTE PTR ds:[ebx+0x3c],bl
  429686:	jbe    0x4296e9
  429688:	ins    BYTE PTR es:[rdi],dx
  429689:	ds pop rbp
  42968b:	and    BYTE PTR [rax+riz*1+0x2d],bh
  42968f:	sub    eax,0x6d616e3c
  429694:	gs ds pop rbx
  429697:	jnp    0x4296d6
  429699:	jl     0x4296bb
  42969b:	jge    0x4296d9
  42969d:	jbe    0x429700
  42969f:	ins    BYTE PTR es:[rdi],dx
  4296a0:	ds pop rbp
  4296a2:	and    BYTE PTR [rbp+0x2e],bl
  4296a5:	cs or  al,BYTE PTR cs:[rax]
  4296a9:	(bad)  
  4296aa:	jne    0x429720
  4296ac:	outs   dx,DWORD PTR ds:[rsi]
  4296ad:	outs   dx,BYTE PTR gs:[esi]
  4296b0:	sub    eax,0x72657375
  4296b5:	jae    0x4296f7
  4296b7:	ins    BYTE PTR es:[rdi],dx
  4296b8:	imul   esi,DWORD PTR [rbx+0x74],0x6f732e73
  4296bf:	jne    0x429733
  4296c1:	movsxd esp,DWORD PTR [rbp+0x66]
  4296c4:	outs   dx,DWORD PTR ds:[rsi]
  4296c5:	jb     0x42972e
  4296c7:	gs outs dx,BYTE PTR cs:[rsi]
  4296ca:	gs je  0x4296cd
  4296cd:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4296cf:	je     0x429736
  4296d1:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4296d5:	je     0x4296f7
  4296d7:	(bad)  
  4296d8:	jae    0x429742
  4296da:	gs ins BYTE PTR es:[rdi],dx
  4296dc:	ins    BYTE PTR es:[rdi],dx
  4296dd:	(bad)  
  4296de:	and    BYTE PTR [rcx+0x73],ch
  4296e1:	and    BYTE PTR [rdi+0x6e],ch
  4296e4:	ins    BYTE PTR es:[rdi],dx
  4296e5:	jns    0x429707
  4296e7:	jne    0x42975c
  4296e9:	gs data16 jne 0x429759
  4296ed:	and    BYTE PTR [rcx+0x66],ch
  4296f0:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4296f4:	and    BYTE PTR [rdi+0x75],ch
  4296f7:	je     0x429769
  4296f9:	jne    0x42976f
  4296fb:	and    BYTE PTR [rsi+0x69],ah
  4296fe:	ins    BYTE PTR es:[rdi],dx
  4296ff:	and    BYTE PTR gs:[rdi+rbp*2+0x65],ah
  429704:	jae    0x429726
  429706:	outs   dx,BYTE PTR ds:[rsi]
  429707:	outs   dx,DWORD PTR ds:[rsi]
  429708:	je     0x42972a
  42970a:	(bad)  
  42970b:	ins    BYTE PTR es:[rdi],dx
  42970c:	jb     0x429773
  42970e:	(bad)  
  42970f:	fs jns 0x429732
  429712:	gs js  0x42977e
  429715:	jae    0x42978b
  429717:	or     cl,BYTE PTR cs:[rcx+0x66]
  42971b:	and    BYTE PTR [rcx+0x74],ch
  42971e:	and    BYTE PTR [rdi+rbp*2+0x65],ah
  429722:	jae    0x429750
  429724:	and    BYTE PTR [rax+rbp*2+0x65],dh
  429728:	outs   dx,BYTE PTR ds:[rsi]
  429729:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42972d:	and    BYTE PTR [rbx+0x68],dh
  429730:	gs ins BYTE PTR es:[rdi],dx
  429732:	ins    BYTE PTR es:[rdi],dx
  429733:	and    BYTE PTR [rsi+0x61],ch
  429736:	ins    DWORD PTR es:[rdi],dx
  429737:	and    BYTE PTR gs:[rcx+0x6e],ah
  42973b:	and    BYTE PTR fs:[rdi+0x70],ch
  42973f:	je     0x4297aa
  429741:	outs   dx,DWORD PTR ds:[rsi]
  429742:	outs   dx,BYTE PTR ds:[rsi]
  429743:	(bad)  
  429744:	ins    BYTE PTR es:[rdi],dx
  429745:	and    BYTE PTR [rsi+0x69],ah
  429748:	jb     0x4297bd
  42974a:	je     0x42976c
  42974c:	(bad)  
  42974d:	jb     0x4297b6
  42974f:	jne    0x4297be
  429751:	outs   dx,BYTE PTR gs:[rsi]
  429753:	je     0x429775
  429755:	ja     0x4297c0
  429757:	ins    BYTE PTR es:[rdi],dx
  429758:	ins    BYTE PTR es:[rdi],dx
  429759:	and    BYTE PTR [rdx+0x65],ah
  42975c:	or     ah,BYTE PTR [rbp+0x78]
  42975f:	je     0x4297d3
  429761:	(bad)  
  429762:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  429766:	and    BYTE PTR [rsi+0x72],ah
  429769:	outs   dx,DWORD PTR ds:[rsi]
  42976a:	ins    DWORD PTR es:[rdi],dx
  42976b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42976f:	and    BYTE PTR [rbx+0x63],dh
  429772:	jb     0x4297dd
  429774:	jo     0x4297ea
  429776:	and    BYTE PTR [rsi+0x69],ah
  429779:	ins    BYTE PTR es:[rdi],dx
  42977a:	gs or  al,BYTE PTR cs:[rax]
  42977e:	rex.WB
  42977f:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  429784:	and    BYTE PTR [rbx+0x63],dh
  429787:	jb     0x4297f2
  429789:	jo     0x4297ff
  42978b:	and    BYTE PTR [rsi+0x69],ah
  42978e:	ins    BYTE PTR es:[rdi],dx
  42978f:	and    BYTE PTR gs:[rcx+0x6c],ah
  429793:	jb     0x4297fa
  429795:	(bad)  
  429796:	fs jns 0x4297b9
  429799:	gs js  0x429805
  42979c:	jae    0x429812
  42979e:	jae    0x4297c0
  4297a0:	(bad)  
  4297a1:	outs   dx,BYTE PTR ds:[rsi]
  4297a2:	and    BYTE PTR fs:[rbx+0x6f],ah
  4297a6:	outs   dx,BYTE PTR ds:[rsi]
  4297a7:	je     0x42980a
  4297a9:	imul   ebp,DWORD PTR [rsi+0x73],0x74754120
  4297b0:	outs   dx,DWORD PTR ds:[rsi]
  4297b1:	ins    DWORD PTR es:[rdi],dx
  4297b2:	(bad)  
  4297b3:	je     0x42981a
  4297b5:	and    BYTE PTR fs:[rdi+0x70],cl
  4297b9:	je     0x429824
  4297bb:	outs   dx,DWORD PTR ds:[rsi]
  4297bc:	outs   dx,BYTE PTR ds:[rsi]
  4297bd:	and    BYTE PTR [rax+0x72],dl
  4297c0:	outs   dx,DWORD PTR ds:[rsi]
  4297c1:	movsxd esp,DWORD PTR [rbp+0x73]
  4297c4:	jae    0x42982f
  4297c6:	outs   dx,BYTE PTR ds:[rsi]
  4297c7:	or     dh,BYTE PTR [ebp+eiz*2+0x78]
  4297cc:	je     0x4297fa
  4297ce:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4297d2:	and    BYTE PTR [rbx+0x65],dh
  4297d5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4297d8:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  4297dd:	and    BYTE PTR gs:[rdi+0x66],ch
  4297e1:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4297e5:	and    BYTE PTR [rsi+0x69],ah
  4297e8:	ins    BYTE PTR es:[rdi],dx
  4297e9:	and    BYTE PTR gs:[rax+rbp*2+0x72],dh
  4297ee:	outs   dx,DWORD PTR ds:[rsi]
  4297ef:	jne    0x429858
  4297f1:	push   0x65687420
  4297f6:	and    BYTE PTR [rbp+0x6e],ah
  4297f9:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x67617420
  429801:	and    BYTE PTR [rdi+0x69],dh
  429804:	ins    BYTE PTR es:[rdi],dx
  429805:	ins    BYTE PTR es:[rdi],dx
  429806:	and    BYTE PTR [rdx+0x65],ah
  429809:	and    BYTE PTR [rdx+0x65],dh
  42980c:	jo     0x42987a
  42980e:	(bad)  
  42980f:	movsxd esp,DWORD PTR [rbp+0x64]
  429812:	or     ah,BYTE PTR [rdx+0x79]
  429815:	and    BYTE PTR [rax+rbp*2+0x65],dh
  429819:	and    BYTE PTR [rsi+0x65],ch
  42981c:	ja     0x42988a
  42981e:	jns    0x429840
  429820:	outs   dx,BYTE PTR gs:[esi]
  429823:	gs jb  0x429887
  429826:	je     0x42988d
  429828:	and    BYTE PTR fs:[rbp+riz*2+0x78],dh
  42982d:	je     0x42985d
  42982f:	and    BYTE PTR [rax],ah
  429831:	push   rsp
  429832:	push   0x69662065
  429837:	jb     0x4298ac
  429839:	je     0x42985b
  42983b:	(bad)  
  42983c:	and    esp,DWORD PTR [rcx]
  42983e:	(bad)  
  42983f:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  429843:	and    BYTE PTR gs:[rdi+0x69],dh
  429847:	ins    BYTE PTR es:[rdi],dx
  429848:	ins    BYTE PTR es:[rdi],dx
  429849:	and    BYTE PTR [rdx+0x65],ah
  42984c:	and    BYTE PTR [rdx+0x65],dh
  42984f:	outs   dx,BYTE PTR gs:[esi]
  429852:	gs jb  0x4298b6
  429855:	je     0x4298bc
  429857:	fs or  al,BYTE PTR cs:[rax]
  42985b:	outs   dx,BYTE PTR gs:[esi]
  42985e:	jae    0x4298c8
  429860:	gs ins BYTE PTR es:[rdi],dx
  429862:	ins    BYTE PTR es:[rdi],dx
  429863:	outs   dx,DWORD PTR ds:[rsi]
  429864:	jo     0x4298da
  429866:	and    BYTE PTR [rcx],dh
  429868:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  42986c:	add    BYTE PTR gs:[rdi+0x6f],dh
  429870:	jb     0x4298d6
  429872:	jae    0x429874
  429874:	movsxd ebp,DWORD PTR [rdi+0x6f]
  429877:	imul   esp,DWORD PTR [rbp+0x64],0x0
  42987b:	ins    DWORD PTR es:[rdi],dx
  42987c:	gs ins DWORD PTR es:[rdi],dx
  42987e:	(bad)  
  42987f:	gs jb  0x4298f5
  429882:	add    BYTE PTR [rbp+0x6e],dh
  429885:	movsxd ebp,DWORD PTR [rdi+0x6f]
  429888:	imul   esp,DWORD PTR [rbp+0x64],0x0
  42988c:	imul   esp,DWORD PTR [rbp+0x65],0x70
	...
  4298c0:	rex.RX mov r8d,DWORD PTR [rdx+0x0]
  4298c4:	add    BYTE PTR [rax],al
  4298c6:	add    BYTE PTR [rax],al
  4298c8:	(bad)  
  4298c9:	add    BYTE PTR [rax],al
  4298cb:	add    BYTE PTR [rax],al
  4298cd:	add    BYTE PTR [rax],al
  4298cf:	add    BYTE PTR [rsi-0x75],al
  4298d2:	rex.X add BYTE PTR [rax],al
  4298d5:	add    BYTE PTR [rax],al
  4298d7:	add    BYTE PTR [rdi],al
  4298d9:	add    BYTE PTR [rax],al
  4298db:	add    BYTE PTR [rax],al
  4298dd:	add    BYTE PTR [rax],al
  4298df:	add    BYTE PTR [rsi-0x75],al
  4298e2:	rex.X add BYTE PTR [rax],al
  4298e5:	add    BYTE PTR [rax],al
  4298e7:	add    BYTE PTR [rdi],al
  4298e9:	add    BYTE PTR [rax],al
  4298eb:	add    BYTE PTR [rax],al
  4298ed:	add    BYTE PTR [rax],al
  4298ef:	add    BYTE PTR [rsi-0x75],al
  4298f2:	rex.X add BYTE PTR [rax],al
  4298f5:	add    BYTE PTR [rax],al
  4298f7:	add    BYTE PTR [rdi],al
  4298f9:	add    BYTE PTR [rax],al
  4298fb:	add    BYTE PTR [rax],al
  4298fd:	add    BYTE PTR [rax],al
  4298ff:	add    BYTE PTR [rcx-0x68],ch
  429902:	rex.X add BYTE PTR [rax],al
  429905:	add    BYTE PTR [rax],al
  429907:	add    BYTE PTR [rcx],al
  429909:	add    BYTE PTR [rax],al
  42990b:	add    BYTE PTR [rax],al
  42990d:	add    BYTE PTR [rax],al
  42990f:	add    BYTE PTR [rsi-0x68],ch
  429912:	rex.X add BYTE PTR [rax],al
  429915:	add    BYTE PTR [rax],al
  429917:	add    BYTE PTR [rdx],al
  429919:	add    BYTE PTR [rax],al
  42991b:	add    BYTE PTR [rax],al
  42991d:	add    BYTE PTR [rax],al
  42991f:	add    BYTE PTR [rax+rbx*4+0x42],dh
  429923:	add    BYTE PTR [rax],al
  429925:	add    BYTE PTR [rax],al
  429927:	add    BYTE PTR [rax+rax*1],al
  42992a:	add    BYTE PTR [rax],al
  42992c:	add    BYTE PTR [rax],al
  42992e:	add    BYTE PTR [rax],al
  429930:	jnp    0x4298ca
  429932:	rex.X add BYTE PTR [rax],al
  429935:	add    BYTE PTR [rax],al
  429937:	add    BYTE PTR [rbx],al
  429939:	add    BYTE PTR [rax],al
  42993b:	add    BYTE PTR [rax],al
  42993d:	add    BYTE PTR [rax],al
  42993f:	add    BYTE PTR [rbx+0x4298],al
  429945:	add    BYTE PTR [rax],al
  429947:	add    BYTE PTR [rip+0x0],al        # 0x42994d
  42994d:	add    BYTE PTR [rax],al
  42994f:	add    BYTE PTR [rax+rbx*4+0x42],cl
  429956:	add    BYTE PTR [rax],al
  429958:	(bad)  
  429959:	add    BYTE PTR [rax],al
  42995b:	add    BYTE PTR [rax],al
  42995d:	add    BYTE PTR [rax],al
  42995f:	add    BYTE PTR [rbx+0x65],dh
  429962:	je     0x429964
  429964:	(bad)  
  429965:	outs   dx,DWORD PTR ds:[rsi]
  429966:	outs   dx,DWORD PTR ds:[rsi]
  429967:	ins    BYTE PTR es:[rdi],dx
  429968:	add    BYTE PTR [rbx+0x74],dh
  42996b:	jb     0x4299d6
  42996d:	outs   dx,BYTE PTR ds:[rsi]
  42996e:	add    BYTE PTR [edx+0x6f],ah
  429972:	outs   dx,DWORD PTR ds:[rsi]
  429973:	ins    BYTE PTR es:[rdi],dx
  429974:	gs (bad) 
  429976:	outs   dx,BYTE PTR ds:[rsi]
  429977:	add    BYTE PTR [rax+0x69],ch
  42997a:	gs jb  0x4299de
  42997d:	jb     0x4299e2
  42997f:	push   0x656e0079
  429984:	jae    0x4299fa
  429986:	gs add BYTE PTR fs:[rcx+0x6e],ch
  42998b:	je     0x4299f2
  42998d:	addr32 gs jb 0x429991
	...
  4299bd:	add    BYTE PTR [rax],al
  4299bf:	add    BYTE PTR [rsi-0x75],al
  4299c2:	rex.X add BYTE PTR [rax],al
  4299c5:	add    BYTE PTR [rax],al
  4299c7:	add    BYTE PTR [rdx],cl
  4299c9:	add    BYTE PTR [rax],al
  4299cb:	add    BYTE PTR [rax],al
  4299cd:	add    BYTE PTR [rax],al
  4299cf:	add    BYTE PTR [rsi-0x75],al
  4299d2:	rex.X add BYTE PTR [rax],al
  4299d5:	add    BYTE PTR [rax],al
  4299d7:	add    BYTE PTR [rdx],cl
  4299d9:	add    BYTE PTR [rax],al
  4299db:	add    BYTE PTR [rax],al
  4299dd:	add    BYTE PTR [rax],al
  4299df:	add    BYTE PTR [rsi-0x75],al
  4299e2:	rex.X add BYTE PTR [rax],al
  4299e5:	add    BYTE PTR [rax],al
  4299e7:	add    BYTE PTR [rdx],cl
  4299e9:	add    BYTE PTR [rax],al
  4299eb:	add    BYTE PTR [rax],al
  4299ed:	add    BYTE PTR [rax],al
  4299ef:	add    BYTE PTR [rax-0x67],ah
  4299f2:	rex.X add BYTE PTR [rax],al
  4299f5:	add    BYTE PTR [rax],al
  4299f7:	add    BYTE PTR [rsi],al
  4299f9:	add    BYTE PTR [rax],al
  4299fb:	add    BYTE PTR [rax],al
  4299fd:	add    BYTE PTR [rax],al
  4299ff:	add    BYTE PTR [rcx+rbx*4+0x42],ah
  429a03:	add    BYTE PTR [rax],al
  429a05:	add    BYTE PTR [rax],al
  429a07:	add    BYTE PTR [rbx],al
  429a09:	add    BYTE PTR [rax],al
  429a0b:	add    BYTE PTR [rax],al
  429a0d:	add    BYTE PTR [rax],al
  429a0f:	add    BYTE PTR [rsi-0x75],al
  429a12:	rex.X add BYTE PTR [rax],al
  429a15:	add    BYTE PTR [rax],al
  429a17:	add    BYTE PTR [rdx],cl
  429a19:	add    BYTE PTR [rax],al
  429a1b:	add    BYTE PTR [rax],al
  429a1d:	add    BYTE PTR [rax],al
  429a1f:	add    BYTE PTR [rcx-0x67],ch
  429a22:	rex.X add BYTE PTR [rax],al
  429a25:	add    BYTE PTR [rax],al
  429a27:	add    BYTE PTR [rcx],al
  429a29:	add    BYTE PTR [rax],al
  429a2b:	add    BYTE PTR [rax],al
  429a2d:	add    BYTE PTR [rax],al
  429a2f:	add    BYTE PTR [rax-0x67],dh
  429a32:	rex.X add BYTE PTR [rax],al
  429a35:	add    BYTE PTR [rax],al
  429a37:	add    BYTE PTR [rax+rax*1],al
  429a3a:	add    BYTE PTR [rax],al
  429a3c:	add    BYTE PTR [rax],al
  429a3e:	add    BYTE PTR [rax],al
  429a40:	rex.RX mov r8d,DWORD PTR [rdx+0x0]
  429a44:	add    BYTE PTR [rax],al
  429a46:	add    BYTE PTR [rax],al
  429a48:	or     al,BYTE PTR [rax]
  429a4a:	add    BYTE PTR [rax],al
  429a4c:	add    BYTE PTR [rax],al
  429a4e:	add    BYTE PTR [rax],al
  429a50:	js     0x4299eb
  429a52:	rex.X add BYTE PTR [rax],al
  429a55:	add    BYTE PTR [rax],al
  429a57:	add    BYTE PTR [rcx],cl
  429a59:	add    BYTE PTR [rax],al
  429a5b:	add    BYTE PTR [rax],al
  429a5d:	add    BYTE PTR [rax],al
  429a5f:	add    BYTE PTR [rsi-0x75],al
  429a62:	rex.X add BYTE PTR [rax],al
  429a65:	add    BYTE PTR [rax],al
  429a67:	add    BYTE PTR [rdx],cl
  429a69:	add    BYTE PTR [rax],al
  429a6b:	add    BYTE PTR [rax],al
  429a6d:	add    BYTE PTR [rax],al
  429a6f:	add    BYTE PTR [rdx+0x4299],al
  429a75:	add    BYTE PTR [rax],al
  429a77:	add    BYTE PTR [rax],cl
  429a79:	add    BYTE PTR [rax],al
  429a7b:	add    BYTE PTR [rax],al
  429a7d:	add    BYTE PTR [rax],al
  429a7f:	add    ah,dl
  429a81:	xchg   BYTE PTR [rdx+0x0],al
  429a84:	add    BYTE PTR [rax],al
  429a86:	add    BYTE PTR [rax],al
  429a88:	add    eax,0x0
  429a8d:	add    BYTE PTR [rax],al
  429a8f:	add    BYTE PTR [rsi-0x75],al
  429a92:	rex.X add BYTE PTR [rax],al
  429a95:	add    BYTE PTR [rax],al
  429a97:	add    BYTE PTR [rdx],cl
  429a99:	add    BYTE PTR [rax],al
  429a9b:	add    BYTE PTR [rax],al
  429a9d:	add    BYTE PTR [rax],al
  429a9f:	add    ah,bl
  429aa1:	xchg   BYTE PTR [rdx+0x0],al
  429aa4:	add    BYTE PTR [rax],al
  429aa6:	add    BYTE PTR [rax],al
  429aa8:	(bad)  
  429aa9:	add    BYTE PTR [rax],al
  429aab:	add    BYTE PTR [rax],al
  429aad:	add    BYTE PTR [rax],al
  429aaf:	add    BYTE PTR [rsi-0x75],al
  429ab2:	rex.X add BYTE PTR [rax],al
  429ab5:	add    BYTE PTR [rax],al
  429ab7:	add    BYTE PTR [rdx],cl
  429ab9:	add    BYTE PTR [rax],al
  429abb:	add    BYTE PTR [rax],al
  429abd:	add    BYTE PTR [rax],al
  429abf:	add    BYTE PTR [rsi-0x75],al
  429ac2:	rex.X add BYTE PTR [rax],al
  429ac5:	add    BYTE PTR [rax],al
  429ac7:	add    BYTE PTR [rdx],cl
  429ac9:	add    BYTE PTR [rax],al
  429acb:	add    BYTE PTR [rax],al
  429acd:	add    BYTE PTR [rax],al
  429acf:	add    BYTE PTR [rcx+0x4299],cl
  429ad5:	add    BYTE PTR [rax],al
  429ad7:	add    BYTE PTR [rdx],al
	...
  429afd:	add    BYTE PTR [rax],al
  429aff:	add    BYTE PTR [rip+0x20005e5f],ch        # 0x2042f964
  429b05:	and    BYTE PTR [rip+0xa732573],ah        # 0xab5c07e
  429b0b:	add    BYTE PTR [rcx+0x75],ah
  429b0e:	je     0x429b7f
  429b10:	sub    eax,0x6974706f
  429b15:	outs   dx,DWORD PTR ds:[rsi]
  429b16:	outs   dx,BYTE PTR ds:[rsi]
  429b17:	jae    0x429b19
  429b19:	jo     0x429b8d
  429b1b:	outs   dx,DWORD PTR ds:[rsi]
  429b1c:	addr32 jb 0x429b80
  429b1f:	ins    DWORD PTR es:[rdi],dx
  429b20:	add    BYTE PTR [rip+0x64252d25],ah        # 0x6467c84b
  429b26:	jae    0x429b48
  429b28:	and    eax,0xa7325
  429b2d:	or     ah,BYTE PTR [rip+0xa0a73]        # 0x4ca5a6
  429b33:	cmp    eax,0x656c6966
  429b38:	add    BYTE PTR [rip+0x72624d],bh        # 0xb4fd8b
  429b3e:	cmp    eax,0x786c7043
  429b43:	add    BYTE PTR [rbx+0x3d],bl
  429b46:	(bad)  
  429b47:	jb     0x429bb0
  429b49:	pop    rbp
  429b4a:	add    BYTE PTR [rip+0x2432252d],ch        # 0x2474c07d
  429b50:	jae    0x429b77
  429b52:	xor    DWORD PTR [rbx+rsi*2],esp
  429b55:	add    BYTE PTR [rip+0x6d6954],bh        # 0xb004af
  429b5b:	outs   dx,BYTE PTR ds:[rsi]
  429b5c:	outs   dx,DWORD PTR ds:[rsi]
  429b5d:	outs   dx,BYTE PTR ds:[rsi]
  429b5e:	add    BYTE PTR gs:[rbx],ah
  429b61:	and    BYTE PTR [rax],ah
  429b63:	jo     0x429bd7
  429b65:	gs jae 0x429bcd
  429b68:	je     0x429b99
  429b6a:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  429b71:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  429b78:	and    BYTE PTR [rsi+0x69],ah
  429b7b:	ins    BYTE PTR es:[rdi],dx
  429b7c:	or     ah,BYTE PTR gs:[rbx]
  429b7f:	and    BYTE PTR [rax],ah
  429b81:	and    eax,0xa2373
  429b86:	and    BYTE PTR [rip+0x25207333],ah        # 0x25630ebf
  429b8c:	sub    eax,0x20733431
  429b91:	and    eax,0x73250073
  429b96:	add    BYTE PTR [rdi+rbp*1+0x46],dl
  429b9a:	add    BYTE PTR [rdx],cl
  429b9c:	and    eax,0x250a0a73
  429ba1:	jae    0x429ba3
  429ba3:	imul   r13d,DWORD PTR [rax+r8*1+0x4b],0x4d006457
  429bac:	(bad)  
  429bae:	add    BYTE PTR [rbx+0x70],al
  429bb1:	js     0x429bb3
  429bb3:	outs   dx,BYTE PTR ds:[rsi]
  429bb4:	outs   dx,DWORD PTR ds:[rsi]
  429bb5:	and    BYTE PTR [rax],al
  429bb7:	rex.WRX jne 0x429c27
  429bba:	add    BYTE PTR [rdi+0x70],ch
  429bbd:	je     0x429bbf
  429bbf:	pop    rcx
  429bc0:	rex.RB push r11
  429bc2:	add    BYTE PTR [rbx+0x74],dl
  429bc5:	jb     0x429bc7
  429bc7:	push   rsp
  429bc8:	imul   ebp,DWORD PTR [rbp+0x0],0x9090909
  429bcf:	sub    eax,0x9090020
  429bd4:	or     DWORD PTR [rcx],ecx
  429bd6:	and    BYTE PTR [rax],ah
  429bd8:	add    BYTE PTR [rcx],cl
  429bda:	or     DWORD PTR [rcx],ecx
  429bdc:	or     DWORD PTR [rip+0x6e61202d],ebp        # 0x6ea3bc0f
  429be2:	and    BYTE PTR fs:[rax],al
  429be5:	or     DWORD PTR [rcx],ecx
  429be7:	or     DWORD PTR [rcx],ecx
  429be9:	and    eax,0x20000a73
  429bee:	and    BYTE PTR [rax],ah
  429bf0:	and    BYTE PTR [rax],ah
  429bf2:	and    BYTE PTR [rax],al
  429bf4:	and    BYTE PTR [rax],ah
  429bf6:	and    BYTE PTR [rax],ah
  429bf8:	and    BYTE PTR [rax],al
  429bfa:	and    BYTE PTR [rax],ah
  429bfc:	and    BYTE PTR [rax],al
  429bfe:	and    BYTE PTR [rax],ah
  429c00:	add    BYTE PTR [rcx+0x6c],ah
  429c03:	ins    BYTE PTR es:[rdi],dx
  429c04:	add    BYTE PTR [rax],ah
  429c06:	or     DWORD PTR [rdx],ecx
  429c08:	cmp    bh,BYTE PTR [rip+0x5f732500]        # 0x5fb5c10e
  429c0e:	and    eax,0x64255f73
  429c13:	cmp    eax,0x272700
  429c18:	and    BYTE PTR [rax],ah
  429c1a:	and    BYTE PTR [rax],ah
  429c1c:	and    BYTE PTR [rax],ah
  429c1e:	and    BYTE PTR [rax],ah
  429c20:	cmp    edi,DWORD PTR [rbx]
  429c22:	or     cl,BYTE PTR [rdx]
  429c24:	add    BYTE PTR [rdi],ah
  429c26:	or     cl,BYTE PTR [rdx]
  429c28:	add    BYTE PTR [rdi+rbp*1],bh
  429c2b:	and    eax,0xa3e73
  429c30:	and    BYTE PTR [rax],ah
  429c32:	and    eax,0x25000a73
  429c37:	and    eax,0x7364252d
  429c3c:	add    BYTE PTR [rdx],cl
  429c3e:	gs js  0x429cb1
  429c41:	outs   dx,DWORD PTR ds:[rsi]
  429c42:	jb     0x429cb8
  429c44:	and    BYTE PTR [rip+0x73255f73],ah        # 0x7367fbbd
  429c4a:	pop    rdi
  429c4b:	and    eax,0x66000a64
  429c50:	(bad)  
  429c51:	ins    BYTE PTR es:[rdi],dx
  429c52:	jae    0x429cb9
  429c54:	add    BYTE PTR [rax],ah
  429c56:	and    BYTE PTR [rax],ah
  429c58:	and    BYTE PTR [rip+0xa29202a],ch        # 0xa6bbc88
  429c5e:	add    BYTE PTR [rsi+0x6c],ah
  429c61:	(bad)  
  429c62:	add    BYTE PTR [ecx+0x4e],cl
  429c66:	push   rsi
  429c67:	rex.B
  429c68:	rex.WR
  429c69:	rex.WB
  429c6a:	rex.R sub eax,0x2a006425
  429c70:	rex.WB
  429c71:	rex.WRX push rsi
  429c73:	rex.B
  429c74:	rex.WR
  429c75:	rex.WB
  429c76:	sub    r8b,BYTE PTR [rax]
  429c79:	pop    rsp
  429c7a:	outs   dx,BYTE PTR ds:[rsi]
  429c7b:	pop    rsp
  429c7c:	or     al,BYTE PTR [rax]
  429c7e:	and    BYTE PTR [rax],ah
  429c80:	and    BYTE PTR [rax],ah
  429c82:	sub    eax,0x29202a2d
  429c87:	or     al,BYTE PTR [rax]
  429c89:	sub    eax,0x4f4c002d
  429c8e:	rex.WRX
  429c8f:	rex.RXB push r13
  429c91:	push   rbx
  429c92:	rex.B
  429c93:	rex.RXB
  429c94:	add    BYTE PTR [r8],r12b
  429c97:	and    BYTE PTR [rax],ah
  429c99:	and    BYTE PTR [rax],ah
  429c9b:	and    BYTE PTR [rax],ah
  429c9d:	and    BYTE PTR [rax],ah
  429c9f:	and    BYTE PTR [rax],ah
  429ca1:	and    BYTE PTR [rip+0x5c000a73],ah        # 0x5c42a71a
  429ca7:	and    eax,0x6f3330
  429cac:	ins    DWORD PTR es:[rdi],dx
  429cad:	outs   dx,DWORD PTR ds:[rsi]
  429cae:	jb     0x429d15
  429cb0:	add    BYTE PTR ds:0x79742073,bh
  429cb7:	jo     0x429d1e
  429cb9:	cmp    eax,0x7473656e
  429cbe:	gs fs or al,BYTE PTR ds:[rax]
  429cc3:	and    eax,0x25000a73
  429cc8:	jae    0x429cd4
  429cca:	and    BYTE PTR [rax],ah
  429ccc:	add    BYTE PTR [rdi+0x50],cl
  429ccf:	push   rsp
  429cd0:	pop    rdi
  429cd1:	push   r10
  429cd3:	rex.RXB pop r15
  429cd5:	rex.WRX
  429cd6:	rex.RB
  429cd7:	rex.RB
  429cd8:	rex.R
  429cd9:	rex.RB
  429cda:	rex.R cmp eax,0x3c004f4e
  429ce0:	and    eax,0xa3e2f73
  429ce5:	add    BYTE PTR [rdi+0x50],cl
  429ce8:	push   rsp
  429ce9:	pop    rdi
  429cea:	push   r10
  429cec:	rex.RXB pop r15
  429cee:	rex.WRX
  429cef:	rex.RB
  429cf0:	rex.RB
  429cf1:	rex.R
  429cf2:	rex.RB
  429cf3:	rex.R cmp eax,0x9004b4f
  429cf9:	add    BYTE PTR ds:0x6f003e73,bh
  429d00:	jo     0x429d76
  429d02:	imul   ebp,DWORD PTR [rdi+0x6e],0x78650a00
  429d09:	jo     0x429d7a
  429d0b:	jb     0x429d81
  429d0d:	and    BYTE PTR [rip+0x73255f73],ah        # 0x7367fc86
  429d13:	or     al,BYTE PTR [rax]
  429d15:	and    eax,0x73255f73
  429d1a:	cmp    eax,0x207c2000
  429d1f:	add    BYTE PTR [rax+0x41],dl
  429d22:	rex.RXB
  429d23:	rex.RB push r10
  429d25:	add    BYTE PTR [rip+0x20732431],ah        # 0x20b5c15c
  429d2b:	and    eax,0x20732432
  429d30:	cmp    esp,DWORD PTR [rax]
  429d32:	jb     0x429da1
  429d34:	and    BYTE PTR [rip+0x32252066],ch        # 0x3267bda0
  429d3a:	and    al,0x73
  429d3c:	add    BYTE PTR [rax],ah
  429d3e:	sub    esp,DWORD PTR [rax]
  429d40:	add    BYTE PTR [rax],ah
  429d42:	and    BYTE PTR [rax+0x75],dh
  429d45:	je     0x429dba
  429d47:	sub    BYTE PTR [rdi+0x28],bl
  429d4a:	and    eax,0x3b292973
  429d4f:	or     al,BYTE PTR [rax]
  429d51:	pop    rsp
  429d52:	(bad)  
  429d53:	add    BYTE PTR [rdi],ah
  429d55:	and    eax,0x20002773
  429d5a:	sub    eax,0x7325202d
  429d5f:	add    BYTE PTR [rip+0x73255f73],ah        # 0x7367fcd8
  429d65:	pop    rdi
  429d66:	push   rsp
  429d67:	rex.RB pop r8
  429d69:	push   rsp
  429d6a:	cmp    eax,0x21230027
  429d6f:	and    BYTE PTR [rip+0xa000a73],ah        # 0xa42a7e8
  429d75:	outs   dx,BYTE PTR gs:[rsi]
  429d77:	jbe    0x429d99
  429d79:	jl     0x429d9b
  429d7b:	addr32 jb 0x429de3
  429d7e:	jo     0x429da0
  429d80:	(bad)  
  429d81:	pop    rsi
  429d82:	and    eax,0xa275f73
  429d87:	add    BYTE PTR [rip+0x6c243125],bh        # 0x6c66ceb2
  429d8d:	jne    0x429daf
  429d8f:	and    esp,DWORD PTR [rax]
  429d91:	xor    BYTE PTR [rax+0x25],bh
  429d94:	xor    DWORD PTR [rsp+rbp*2],esp
  429d97:	pop    rax
  429d98:	or     al,BYTE PTR [rax]
  429d9a:	jae    0x429e10
  429d9c:	outs   dx,DWORD PTR fs:[rsi]
  429d9e:	jne    0x429e14
  429da0:	add    BYTE PTR [rip+0x42252041],ah        # 0x4267bde7
  429da6:	and    BYTE PTR [rip+0x25202c65],ah        # 0x2562ca11
  429dac:	pop    rcx
  429dad:	and    BYTE PTR [rcx+0x74],ah
  429db0:	and    BYTE PTR [rip+0x5a252072],ah        # 0x5a67be28
  429db6:	add    BYTE PTR [rbp+rcx*2+0x50],dl
  429dba:	rex.R
  429dbb:	rex.WB push r10
  429dbd:	add    BYTE PTR [rip+0x73752f73],ah        # 0x73b7cd36
  429dc3:	gs sub eax,0x582e7525
  429dc9:	pop    rax
  429dca:	pop    rax
  429dcb:	pop    rax
  429dcc:	pop    rax
  429dcd:	pop    rax
  429dce:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  429dd2:	add    BYTE PTR gs:0x79742073,bh
  429dda:	jo     0x429e41
  429ddc:	cmp    eax,0x3e7325
  429de1:	push   rsi
  429de2:	rex.RB push r10
  429de4:	push   rbx
  429de5:	rex.WB
  429de6:	rex.WRXB
  429de7:	rex.WRX add BYTE PTR [rbx],r12b
  429dea:	js     0x429e11
  429dec:	xor    BYTE PTR [rdx],dh
  429dee:	pop    rax
  429def:	cmp    eax,DWORD PTR [rax]
  429df1:	rex.WRXB push r8
  429df3:	push   rsp
  429df4:	pop    rdi
  429df5:	push   r10
  429df7:	rex.RXB pop r15
  429df9:	rex.WRX
  429dfa:	rex.RB
  429dfb:	rex.RB
  429dfc:	rex.R
  429dfd:	rex.RB
  429dfe:	rex.R cmp eax,0x534559
  429e04:	(bad)  
  429e05:	pop    rsp
  429e06:	(bad)  
  429e07:	(bad)  
  429e08:	add    BYTE PTR [rax],ah
  429e0a:	(bad)  
  429e0b:	and    eax,0x6c002773
  429e10:	imul   esp,DWORD PTR [rdx+0x6f],0x20737470
  429e17:	ins    DWORD PTR es:[rdi],dx
  429e18:	imul   esi,DWORD PTR [rbx+0x67],0x73736575
  429e1f:	gs and BYTE PTR fs:[rbp+riz*2+0x6e],ch
  429e25:	addr32 je 0x429e90
  429e28:	and    BYTE PTR [rdi+0x66],ch
  429e2b:	and    BYTE PTR [rbx+0x74],dh
  429e2e:	jb     0x429e99
  429e30:	outs   dx,BYTE PTR ds:[rsi]
  429e31:	or     al,BYTE PTR [eax]
  429e34:	or     cl,BYTE PTR [rdi+0x50]
  429e37:	push   rsp
  429e38:	rex.WB
  429e39:	rex.WRXB
  429e3a:	rex.WRX pop rdi
  429e3c:	rex.XB push r12
  429e3e:	cmp    eax,0x73000a30
  429e43:	gs je  0x429e66
  429e46:	sub    eax,0x742f002d
  429e4b:	ins    DWORD PTR es:[rdi],dx
  429e4c:	jo     0x429e4e
  429e4e:	and    BYTE PTR [rax],ah
  429e50:	and    BYTE PTR [rax],ah
  429e52:	and    BYTE PTR [rax],ah
  429e54:	and    BYTE PTR [rax],ah
  429e56:	and    BYTE PTR [rax],ah
  429e58:	and    BYTE PTR [rax],ah
  429e5a:	cmp    edi,DWORD PTR [rbx]
  429e5c:	or     cl,BYTE PTR [rdx]
  429e5e:	add    BYTE PTR [rax],ah
  429e60:	and    BYTE PTR [rax],ah
  429e62:	and    BYTE PTR [rax],ah
  429e64:	and    BYTE PTR [rax],ah
  429e66:	and    BYTE PTR [rdi],ah
  429e68:	and    eax,0x29202763
  429e6d:	or     al,BYTE PTR [rax]
  429e6f:	and    BYTE PTR [rax],ah
  429e71:	and    BYTE PTR [rax],ah
  429e73:	and    BYTE PTR [rax],ah
  429e75:	and    BYTE PTR [rax],ah
  429e77:	(bad)  
  429e78:	and    eax,0x29202773
  429e7d:	or     al,BYTE PTR [rax]
  429e7f:	and    BYTE PTR [rax],ah
  429e81:	and    BYTE PTR [rax],ah
  429e83:	and    BYTE PTR [rax],ah
  429e85:	and    BYTE PTR [rax],ah
  429e87:	(bad)  
  429e88:	and    eax,0x7c202773
  429e8d:	and    BYTE PTR [rdx+rcx*1+0x0],bl
  429e91:	cmp    al,0x25
  429e93:	xor    DWORD PTR [rbx+rsi*2],esp
  429e96:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  429e9a:	gs cmp eax,0x6c6f6f62
  429ea0:	gs (bad) 
  429ea2:	outs   dx,BYTE PTR ds:[rsi]
  429ea3:	ds and eax,0x3c732432
  429ea9:	(bad)  
  429eaa:	and    eax,0x3e732431
  429eaf:	or     al,BYTE PTR [rax]
  429eb1:	and    esp,DWORD PTR [rax]
  429eb3:	and    BYTE PTR [rsi+0x72],al
  429eb6:	outs   dx,DWORD PTR ds:[rsi]
  429eb7:	ins    DWORD PTR es:[rdi],dx
  429eb8:	and    BYTE PTR [rax+rbp*2+0x65],dh
  429ebc:	and    BYTE PTR [rip+0x706f2073],ah        # 0x70b1bf35
  429ec2:	je     0x429f2d
  429ec4:	outs   dx,DWORD PTR ds:[rsi]
  429ec5:	outs   dx,BYTE PTR ds:[rsi]
  429ec6:	and    BYTE PTR [rbp+riz*2+0x66],ah
  429eca:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  429ed1:	jae    0x429edd
  429ed3:	and    ecx,DWORD PTR [rdx]
  429ed5:	add    BYTE PTR [rbp+0x63],ah
  429ed8:	push   0x5727206f
  429edd:	(bad)  
  429ede:	jb     0x429f4e
  429ee0:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  429ee7:	(bad)  
  429ee8:	outs   dx,BYTE PTR ds:[rsi]
  429ee9:	outs   dx,BYTE PTR ds:[rsi]
  429eea:	outs   dx,DWORD PTR ds:[rsi]
  429eeb:	je     0x429f0d
  429eed:	ins    BYTE PTR es:[rdi],dx
  429eee:	outs   dx,DWORD PTR ds:[rsi]
  429eef:	(bad)  
  429ef0:	and    BYTE PTR fs:[rdi+0x70],ch
  429ef4:	je     0x429f5f
  429ef6:	outs   dx,DWORD PTR ds:[rsi]
  429ef7:	outs   dx,BYTE PTR ds:[rsi]
  429ef8:	jae    0x429f1a
  429efa:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2027
  429f01:	ds xor al,BYTE PTR es:[rax]
  429f05:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  429f09:	and    BYTE PTR [rdi],ah
  429f0b:	push   rdi
  429f0c:	(bad)  
  429f0d:	jb     0x429f7d
  429f0f:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  429f16:	(bad)  
  429f17:	outs   dx,BYTE PTR ds:[rsi]
  429f18:	outs   dx,BYTE PTR ds:[rsi]
  429f19:	outs   dx,DWORD PTR ds:[rsi]
  429f1a:	je     0x429f3c
  429f1c:	jae    0x429f7f
  429f1e:	jbe    0x429f85
  429f20:	and    BYTE PTR [rdi+0x70],ch
  429f23:	je     0x429f8e
  429f25:	outs   dx,DWORD PTR ds:[rsi]
  429f26:	outs   dx,BYTE PTR ds:[rsi]
  429f27:	jae    0x429f49
  429f29:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2027
  429f30:	ds xor al,BYTE PTR es:[rax]
  429f34:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  429f38:	and    BYTE PTR [rdi],ah
  429f3a:	push   rdi
  429f3b:	(bad)  
  429f3c:	jb     0x429fac
  429f3e:	imul   ebp,DWORD PTR [rsi+0x67],0x4320203a
  429f45:	(bad)  
  429f46:	outs   dx,BYTE PTR ds:[rsi]
  429f47:	outs   dx,BYTE PTR ds:[rsi]
  429f48:	outs   dx,DWORD PTR ds:[rsi]
  429f49:	je     0x429f6b
  429f4b:	jae    0x429fc2
  429f4d:	jo     0x429fbf
  429f4f:	jb     0x429fb6
  429f51:	jae    0x429fc6
  429f53:	and    BYTE PTR [rax+rbp*2+0x65],dh
  429f57:	and    BYTE PTR [rdi+rbp*2+0x61],ch
  429f5b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
  429f63:	outs   dx,DWORD PTR ds:[rsi]
  429f64:	jo     0x429fda
  429f66:	imul   ebp,DWORD PTR [rdi+0x6e],0x69662073
  429f6d:	ins    BYTE PTR es:[rdi],dx
  429f6e:	gs jae 0x429f98
  429f71:	and    BYTE PTR [rsi],bh
  429f73:	xor    al,BYTE PTR es:[rax]
  429f76:	cmp    al,0x25
  429f78:	xor    DWORD PTR [rbx+rsi*2],esp
  429f7b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  429f7f:	gs cmp eax,0x65746e69
  429f85:	addr32 gs jb 0x429fc7
  429f89:	xor    BYTE PTR [rax+0x25],bh
  429f8c:	xor    ah,BYTE PTR [rsp+rbp*2]
  429f8f:	pop    rax
  429f90:	cmp    al,0x2f
  429f92:	and    eax,0x3e732431
  429f97:	or     al,BYTE PTR [rax]
  429f99:	and    eax,0x5f732431
  429f9e:	and    eax,0x5f732432
  429fa3:	push   rsp
  429fa4:	rex.RB pop r8
  429fa6:	push   rsp
  429fa7:	cmp    eax,0x206f6e27
  429fac:	and    eax,0x20732432
  429fb1:	je     0x42a018
  429fb3:	js     0x42a029
  429fb5:	(bad)  
  429fb6:	or     al,BYTE PTR [rax]
  429fb8:	and    eax,0x5f732431
  429fbd:	and    eax,0x5f732432
  429fc2:	rex.WRB
  429fc3:	rex.WRXB
  429fc4:	rex.R
  429fc5:	rex.RB cmp eax,0x24332527
  429fcb:	jae    0x429ff4
  429fcd:	or     ah,BYTE PTR [rbp+0x78]
  429fd0:	jo     0x42a041
  429fd2:	jb     0x42a048
  429fd4:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c40b
  429fda:	and    eax,0x5f732432
  429fdf:	rex.WRB
  429fe0:	rex.WRXB
  429fe1:	rex.R
  429fe2:	or     r8b,BYTE PTR [r8]
  429fe5:	and    eax,0x5f732431
  429fea:	and    eax,0x3d732432
  429fef:	(bad)  
  429ff0:	and    eax,0x27732433
  429ff5:	or     ah,BYTE PTR [rbp+0x78]
  429ff8:	jo     0x42a069
  429ffa:	jb     0x42a070
  429ffc:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c433
  42a002:	and    eax,0xa732432
  42a007:	add    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c43e
  42a00d:	and    eax,0x5f732432
  42a012:	rex.XB push r12
  42a014:	cmp    eax,0x64243325
  42a019:	or     ah,BYTE PTR [rbp+0x78]
  42a01c:	jo     0x42a08d
  42a01e:	jb     0x42a094
  42a020:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c457
  42a026:	and    eax,0x5f732432
  42a02b:	rex.XB push r12
  42a02d:	or     al,BYTE PTR [rax]
  42a02f:	rex.WRXB push r8
  42a031:	push   rsp
  42a032:	rex.WB
  42a033:	rex.WRXB
  42a034:	rex.WRX pop rdi
  42a036:	rex.XB push r12
  42a038:	cmp    eax,0x650a6425
  42a03d:	js     0x42a0af
  42a03f:	outs   dx,DWORD PTR ds:[rsi]
  42a040:	jb     0x42a0b6
  42a042:	and    BYTE PTR [rdi+0x50],cl
  42a045:	push   rsp
  42a046:	rex.WB
  42a047:	rex.WRXB
  42a048:	rex.WRX pop rdi
  42a04a:	rex.XB push r12
  42a04c:	or     al,BYTE PTR [rax]
  42a04e:	and    eax,0x5f732431
  42a053:	and    eax,0x3d732432
  42a058:	and    eax,0xa732433
  42a05d:	gs js  0x42a0d0
  42a060:	outs   dx,DWORD PTR ds:[rsi]
  42a061:	jb     0x42a0d7
  42a063:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c49a
  42a069:	and    eax,0xa732432
  42a06e:	add    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c4a5
  42a074:	and    eax,0x3d732432
  42a079:	and    eax,0x20642433
  42a07e:	and    esp,DWORD PTR [rax]
  42a080:	xor    BYTE PTR [rax+0x25],bh
  42a083:	xor    esp,DWORD PTR [rax+rbx*2]
  42a086:	or     ah,BYTE PTR [rbp+0x78]
  42a089:	jo     0x42a0fa
  42a08b:	jb     0x42a101
  42a08d:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c4c4
  42a093:	and    eax,0xa732432
  42a098:	add    BYTE PTR [rax],ah
  42a09a:	and    BYTE PTR [rax],ah
  42a09c:	and    BYTE PTR [rax],ah
  42a09e:	and    BYTE PTR [rax],ah
  42a0a0:	and    BYTE PTR [rbx+0x61],ah
  42a0a3:	jae    0x42a10a
  42a0a5:	and    BYTE PTR [rdx],ah
  42a0a7:	and    al,0x7b
  42a0a9:	rex.WRXB push r8
  42a0ab:	push   rsp
  42a0ac:	pop    rdi
  42a0ad:	rex.XB
  42a0ae:	rex.WRXB
  42a0af:	rex.R
  42a0b0:	rex.RB jge 0x42a0d5
  42a0b3:	and    BYTE PTR [rcx+0x6e],ch
  42a0b6:	or     al,BYTE PTR [rax]
  42a0b8:	and    BYTE PTR [rax],ah
  42a0ba:	and    BYTE PTR [rax],ah
  42a0bc:	and    BYTE PTR [rax],ah
  42a0be:	and    BYTE PTR [rax],ah
  42a0c0:	and    BYTE PTR [rax],ah
  42a0c2:	and    BYTE PTR [rax],ah
  42a0c4:	imul   esp,DWORD PTR [rsi+0x20],0x2524205b
  42a0cb:	xor    DWORD PTR [rbx+rsi*2],esp
  42a0ce:	pop    rdi
  42a0cf:	and    eax,0x5f732432
  42a0d4:	rex.XB push r12
  42a0d6:	and    BYTE PTR [rip+0x25207467],ch        # 0x25631543
  42a0dc:	xor    esp,DWORD PTR [rsi*2+0x3b205d20]
  42a0e3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42a0e7:	outs   dx,BYTE PTR ds:[rsi]
  42a0e8:	or     ah,BYTE PTR [rax]
  42a0ea:	and    BYTE PTR [rax],ah
  42a0ec:	and    BYTE PTR [rax],ah
  42a0ee:	and    BYTE PTR [rax],ah
  42a0f0:	and    BYTE PTR [rax],ah
  42a0f2:	and    BYTE PTR [rax],ah
  42a0f4:	and    BYTE PTR [rax],ah
  42a0f6:	and    BYTE PTR [rax],ah
  42a0f8:	and    BYTE PTR [rbp+0x63],ah
  42a0fb:	push   0x4527206f
  42a100:	jb     0x42a174
  42a102:	outs   dx,DWORD PTR ds:[rsi]
  42a103:	jb     0x42a13f
  42a105:	and    BYTE PTR [rax],ah
  42a107:	ins    DWORD PTR es:[rdi],dx
  42a108:	outs   dx,DWORD PTR ds:[rsi]
  42a109:	jb     0x42a170
  42a10b:	and    BYTE PTR [rax+rbp*2+0x61],dh
  42a10f:	outs   dx,BYTE PTR ds:[rsi]
  42a110:	and    BYTE PTR [rip+0x20642433],ah        # 0x20a6c549
  42a116:	and    eax,0x20732432
  42a11b:	outs   dx,DWORD PTR ds:[rsi]
  42a11c:	jo     0x42a192
  42a11e:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a2773
  42a125:	and    BYTE PTR [rax],ah
  42a127:	and    BYTE PTR [rax],ah
  42a129:	and    BYTE PTR [rax],ah
  42a12b:	and    BYTE PTR [rax],ah
  42a12d:	and    BYTE PTR [rax],ah
  42a12f:	and    BYTE PTR [rax],ah
  42a131:	and    BYTE PTR [rax],ah
  42a133:	and    BYTE PTR [rbp+0x63],ah
  42a136:	push   0x2422206f
  42a13b:	and    eax,0x5f732431
  42a140:	push   rbp
  42a141:	push   rbx
  42a142:	rex.B
  42a143:	rex.RXB
  42a144:	rex.RB pop r15
  42a146:	push   rsp
  42a147:	rex.RB pop r8
  42a149:	push   rsp
  42a14a:	and    cl,BYTE PTR [rdx]
  42a14c:	and    BYTE PTR [rax],ah
  42a14e:	and    BYTE PTR [rax],ah
  42a150:	and    BYTE PTR [rax],ah
  42a152:	and    BYTE PTR [rax],ah
  42a154:	and    BYTE PTR [rax],ah
  42a156:	and    BYTE PTR [rax],ah
  42a158:	and    BYTE PTR [rax],ah
  42a15a:	and    BYTE PTR [rax],ah
  42a15c:	gs js  0x42a1c8
  42a15f:	je     0x42a181
  42a161:	xor    DWORD PTR [rdx],ecx
  42a163:	and    BYTE PTR [rax],ah
  42a165:	and    BYTE PTR [rax],ah
  42a167:	and    BYTE PTR [rax],ah
  42a169:	and    BYTE PTR [rax],ah
  42a16b:	and    BYTE PTR [rax],ah
  42a16d:	and    BYTE PTR [rax],ah
  42a16f:	imul   sp,WORD PTR [rax],0x263e
  42a174:	xor    cl,BYTE PTR [rdx]
  42a176:	add    BYTE PTR [rbp+riz*2+0x73],dh
  42a17a:	je     0x42a19c
  42a17c:	and    al,0x7b
  42a17e:	and    eax,0x5f732431
  42a183:	and    eax,0x5f732432
  42a188:	rex.XB push r12
  42a18a:	sub    eax,0x2d207d30
  42a18f:	and    BYTE PTR gs:[eip+0x20752433],ah        # 0x20b7c5ca
  42a197:	jl     0x42a215
  42a199:	and    BYTE PTR [rbx+0xa],bh
  42a19c:	and    BYTE PTR [rax],ah
  42a19e:	and    BYTE PTR [rax],ah
  42a1a0:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  42a1a4:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c5db
  42a1aa:	and    eax,0x20732432
  42a1af:	push   0x6e207361
  42a1b4:	outs   dx,DWORD PTR ds:[rsi]
  42a1b5:	je     0x42a1d7
  42a1b7:	(bad)  
  42a1b8:	gs outs dx,BYTE PTR gs:[rsi]
  42a1bb:	and    BYTE PTR [rbx+0x65],dh
  42a1be:	je     0x42a1ca
  42a1c0:	and    BYTE PTR [rax],ah
  42a1c2:	and    BYTE PTR [rax],ah
  42a1c4:	gs js  0x42a230
  42a1c7:	je     0x42a1e9
  42a1c9:	xor    DWORD PTR [rdx],ecx
  42a1cb:	jge    0x42a1ed
  42a1cd:	xor    DWORD PTR [rsi],edi
  42a1cf:	xor    cl,BYTE PTR es:[rdx]
  42a1d2:	add    BYTE PTR [rbp+riz*2+0x73],dh
  42a1d6:	je     0x42a1f8
  42a1d8:	sub    eax,0x2422206e
  42a1dd:	and    eax,0x5f732431
  42a1e2:	and    eax,0x22732432
  42a1e7:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  42a1eb:	jnp    0x42a1f7
  42a1ed:	and    BYTE PTR [rax],ah
  42a1ef:	and    BYTE PTR [rax],ah
  42a1f1:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  42a1f5:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c62c
  42a1fb:	and    eax,0x20732432
  42a200:	push   0x6e207361
  42a205:	outs   dx,DWORD PTR ds:[rsi]
  42a206:	je     0x42a228
  42a208:	(bad)  
  42a209:	gs outs dx,BYTE PTR gs:[rsi]
  42a20c:	and    BYTE PTR [rbx+0x65],dh
  42a20f:	je     0x42a21b
  42a211:	and    BYTE PTR [rax],ah
  42a213:	and    BYTE PTR [rax],ah
  42a215:	gs js  0x42a281
  42a218:	je     0x42a23a
  42a21a:	xor    DWORD PTR [rdx],ecx
  42a21c:	jge    0x42a23e
  42a21e:	xor    DWORD PTR [rsi],edi
  42a220:	xor    cl,BYTE PTR es:[rdx]
  42a223:	add    BYTE PTR [rax],ah
  42a225:	and    BYTE PTR [rax],ah
  42a227:	and    BYTE PTR [rax],ah
  42a229:	and    BYTE PTR [rax],ah
  42a22b:	and    BYTE PTR [rax],ah
  42a22d:	and    BYTE PTR [rax],ah
  42a22f:	and    BYTE PTR [rbp+0x63],ah
  42a232:	push   0x2422206f
  42a237:	and    eax,0x73255f73
  42a23c:	pop    rdi
  42a23d:	push   rsp
  42a23e:	rex.RB pop r8
  42a240:	push   rsp
  42a241:	and    cl,BYTE PTR [rdx]
  42a243:	and    BYTE PTR [rax],ah
  42a245:	and    BYTE PTR [rax],ah
  42a247:	and    BYTE PTR [rax],ah
  42a249:	and    BYTE PTR [rax],ah
  42a24b:	and    BYTE PTR [rax],ah
  42a24d:	and    BYTE PTR [rax],ah
  42a24f:	gs js  0x42a2bb
  42a252:	je     0x42a274
  42a254:	xor    BYTE PTR [rdx],cl
  42a256:	add    BYTE PTR [rdx],cl
  42a258:	and    esp,DWORD PTR [rax]
  42a25a:	and    esp,DWORD PTR [rax]
  42a25c:	and    esp,DWORD PTR [rax]
  42a25e:	and    esp,DWORD PTR [rax]
  42a260:	and    esp,DWORD PTR [rax]
  42a262:	and    esp,DWORD PTR [rax]
  42a264:	and    esp,DWORD PTR [rax]
  42a266:	and    esp,DWORD PTR [rax]
  42a268:	and    esp,DWORD PTR [rax]
  42a26a:	and    ecx,DWORD PTR [rdx]
  42a26c:	and    ecx,DWORD PTR [rdx]
  42a26e:	and    esp,DWORD PTR [rax]
  42a270:	and    BYTE PTR [rbp+0x4e],al
  42a273:	and    BYTE PTR [rdi+0x46],r9b
  42a277:	and    BYTE PTR [rcx+0x55],al
  42a27a:	push   rsp
  42a27b:	rex.WRXB
  42a27c:	rex.WRB
  42a27d:	push   r12
  42a27f:	rex.RB
  42a280:	and    BYTE PTR [rdi+0x50],r9b
  42a284:	push   rsp
  42a285:	rex.WB
  42a286:	rex.WRXB
  42a287:	rex.WRX and BYTE PTR [rax+0x52],r10b
  42a28b:	rex.WRXB
  42a28c:	rex.XB
  42a28d:	rex.RB push r11
  42a28f:	push   rbx
  42a290:	rex.WB
  42a291:	rex.WRX
  42a292:	rex.RXB or r12b,BYTE PTR [r11]
  42a295:	or     ah,BYTE PTR [rbx]
  42a297:	and    BYTE PTR [rbx],ah
  42a299:	and    BYTE PTR [rbx],ah
  42a29b:	and    BYTE PTR [rbx],ah
  42a29d:	and    BYTE PTR [rbx],ah
  42a29f:	and    BYTE PTR [rbx],ah
  42a2a1:	and    BYTE PTR [rbx],ah
  42a2a3:	and    BYTE PTR [rbx],ah
  42a2a5:	and    BYTE PTR [rbx],ah
  42a2a7:	and    BYTE PTR [rbx],ah
  42a2a9:	and    BYTE PTR [rip+0x6f64202d],ch        # 0x6fa6c2dc
  42a2af:	and    BYTE PTR [rsi+0x6f],ch
  42a2b2:	je     0x42a2d4
  42a2b4:	ins    DWORD PTR es:[rdi],dx
  42a2b5:	outs   dx,DWORD PTR ds:[rsi]
  42a2b6:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  42a2be:	jae    0x42a2e0
  42a2c0:	ins    DWORD PTR es:[rdi],dx
  42a2c1:	(bad)  
  42a2c2:	jb     0x42a32f
  42a2c4:	gs jb  0x42a2e7
  42a2c7:	sub    eax,0x20000a2d
  42a2cc:	and    BYTE PTR [rax],ah
  42a2ce:	and    BYTE PTR [rcx+0x66],ch
  42a2d1:	and    BYTE PTR [rbx+0x20],bl
  42a2d4:	sub    eax,0x2422206e
  42a2d9:	jnp    0x42a32a
  42a2db:	push   rax
  42a2dc:	push   rsp
  42a2dd:	pop    rdi
  42a2de:	push   r10
  42a2e0:	rex.RXB pop r15
  42a2e2:	push   rsi
  42a2e3:	rex.B
  42a2e4:	rex.WR jge 0x42a309
  42a2e7:	and    BYTE PTR [rbp+0xa],bl
  42a2ea:	and    BYTE PTR [rax],ah
  42a2ec:	and    BYTE PTR [rax],ah
  42a2ee:	je     0x42a358
  42a2f0:	outs   dx,BYTE PTR gs:[rsi]
  42a2f2:	or     ah,BYTE PTR [rax]
  42a2f4:	and    BYTE PTR [rax],ah
  42a2f6:	and    BYTE PTR [rax],ah
  42a2f8:	and    BYTE PTR [rax],ah
  42a2fa:	and    BYTE PTR [rbp+0x76],ah
  42a2fd:	(bad)  
  42a2fe:	ins    BYTE PTR es:[rdi],dx
  42a2ff:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c736
  42a305:	and    al,0x7b
  42a307:	rex.WRXB push r8
  42a309:	push   rsp
  42a30a:	pop    rdi
  42a30b:	rex.WRX
  42a30c:	rex.B
  42a30d:	rex.WRB
  42a30e:	rex.RB jge 0x42a335
  42a311:	jnp    0x42a362
  42a313:	push   rax
  42a314:	push   rsp
  42a315:	pop    rdi
  42a316:	rex.RB
  42a317:	rex.WR
  42a318:	rex.RB
  42a319:	rex.WRB
  42a31a:	rex.RB
  42a31b:	rex.WRX push rsp
  42a31d:	jge    0x42a35c
  42a31f:	and    ah,BYTE PTR [rdi]
  42a321:	and    al,0x7b
  42a323:	rex.WRXB push r8
  42a325:	push   rsp
  42a326:	pop    rdi
  42a327:	push   r10
  42a329:	rex.RXB pop r15
  42a32b:	push   rsi
  42a32c:	rex.B
  42a32d:	rex.WR jge 0x42a357
  42a330:	and    cl,BYTE PTR [rdx]
  42a332:	and    BYTE PTR [rax],ah
  42a334:	and    BYTE PTR [rax],ah
  42a336:	and    BYTE PTR [rax],ah
  42a338:	and    BYTE PTR [rax],ah
  42a33a:	gs js  0x42a3ad
  42a33d:	outs   dx,DWORD PTR ds:[rsi]
  42a33e:	jb     0x42a3b4
  42a340:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5c777
  42a346:	and    al,0x7b
  42a348:	rex.WRXB push r8
  42a34a:	push   rsp
  42a34b:	pop    rdi
  42a34c:	rex.WRX
  42a34d:	rex.B
  42a34e:	rex.WRB
  42a34f:	rex.RB jge 0x42a376
  42a352:	jnp    0x42a3a3
  42a354:	push   rax
  42a355:	push   rsp
  42a356:	pop    rdi
  42a357:	rex.RB
  42a358:	rex.WR
  42a359:	rex.RB
  42a35a:	rex.WRB
  42a35b:	rex.RB
  42a35c:	rex.WRX push rsp
  42a35e:	jge    0x42a36a
  42a360:	and    BYTE PTR [rax],ah
  42a362:	and    BYTE PTR [rax],ah
  42a364:	imul   cx,WORD PTR [rdx],0x6f64
  42a369:	outs   dx,BYTE PTR ds:[rsi]
  42a36a:	or     cl,BYTE PTR gs:[rdi+0x50]
  42a36e:	push   rsp
  42a36f:	rex.WB
  42a370:	rex.WRXB
  42a371:	rex.WRX pop rdi
  42a373:	rex.XB
  42a374:	rex.WRXB push r13
  42a376:	rex.WRX push rsp
  42a378:	cmp    eax,0x70786560
  42a37d:	jb     0x42a39f
  42a37f:	and    al,0x41
  42a381:	push   rdx
  42a382:	rex.RXB pop r15
  42a384:	rex.XB
  42a385:	rex.WRXB push r13
  42a387:	rex.WRX push rsp
  42a389:	and    BYTE PTR [rip+0x60232420],ch        # 0x6065c7af
  42a38f:	or     cl,BYTE PTR [rdi+0x50]
  42a392:	rex.RB push r10
  42a394:	rex.B
  42a395:	rex.WRX
  42a396:	rex.R pop rdi
  42a398:	rex.XB
  42a399:	rex.WRXB push r13
  42a39b:	rex.WRX push rsp
  42a39d:	cmp    eax,0x750a2324
  42a3a2:	outs   dx,BYTE PTR ds:[rsi]
  42a3a3:	jae    0x42a40a
  42a3a5:	je     0x42a3c7
  42a3a7:	rex.WRXB push r8
  42a3a9:	push   rsp
  42a3aa:	pop    rdi
  42a3ab:	push   rax
  42a3ac:	push   rdx
  42a3ad:	rex.WRXB
  42a3ae:	rex.XB
  42a3af:	rex.RB push r11
  42a3b1:	push   rbx
  42a3b2:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  42a3b6:	cmp    cl,BYTE PTR [rdx]
  42a3b8:	jne    0x42a428
  42a3ba:	jae    0x42a421
  42a3bc:	je     0x42a3de
  42a3be:	rex.WRXB push r8
  42a3c0:	push   rsp
  42a3c1:	pop    rdi
  42a3c2:	rex.RB
  42a3c3:	rex.WR
  42a3c4:	rex.RB
  42a3c5:	rex.WRB
  42a3c6:	rex.RB
  42a3c7:	rex.WRX push rsp
  42a3c9:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  42a3cd:	cmp    cl,BYTE PTR [rdx]
  42a3cf:	jne    0x42a43f
  42a3d1:	jae    0x42a438
  42a3d3:	je     0x42a3f5
  42a3d5:	rex.WRXB push r8
  42a3d7:	push   rsp
  42a3d8:	pop    rdi
  42a3d9:	push   r10
  42a3db:	rex.RXB and BYTE PTR [r8],r12b
  42a3de:	and    BYTE PTR [rax],ah
  42a3e0:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  42a3e4:	cmp    cl,BYTE PTR [rdx]
  42a3e6:	jne    0x42a456
  42a3e8:	jae    0x42a44f
  42a3ea:	je     0x42a40c
  42a3ec:	rex.WRXB push r8
  42a3ee:	push   rsp
  42a3ef:	pop    rdi
  42a3f0:	push   r10
  42a3f2:	rex.RXB pop r15
  42a3f4:	rex.WRX
  42a3f5:	rex.RB
  42a3f6:	rex.RB
  42a3f7:	rex.R
  42a3f8:	rex.RB
  42a3f9:	and    BYTE PTR [rsp+rdi*2+0x20],r15b
  42a3fe:	cmp    cl,BYTE PTR [rdx]
  42a400:	jne    0x42a470
  42a402:	jae    0x42a469
  42a404:	je     0x42a426
  42a406:	rex.WRXB push r8
  42a408:	push   rsp
  42a409:	pop    rdi
  42a40a:	rex.WRX
  42a40b:	rex.B
  42a40c:	rex.WRB
  42a40d:	and    BYTE PTR [r8],r12b
  42a410:	and    BYTE PTR [rax],ah
  42a412:	jl     0x42a490
  42a414:	and    BYTE PTR [rdx],bh
  42a416:	or     dh,BYTE PTR [rbp+0x6e]
  42a419:	jae    0x42a480
  42a41b:	je     0x42a43d
  42a41d:	rex.WRXB push r8
  42a41f:	push   rsp
  42a420:	pop    rdi
  42a421:	rex.XB
  42a422:	rex.WRXB
  42a423:	rex.R
  42a424:	and    BYTE PTR [r8],r12b
  42a427:	and    BYTE PTR [rax],ah
  42a429:	jl     0x42a4a7
  42a42b:	and    BYTE PTR [rdx],bh
  42a42d:	or     dh,BYTE PTR [rbp+0x6e]
  42a430:	jae    0x42a497
  42a432:	je     0x42a454
  42a434:	rex.WRXB push r8
  42a436:	push   rsp
  42a437:	pop    rdi
  42a438:	push   r10
  42a43a:	rex.RXB pop r15
  42a43c:	push   rsi
  42a43d:	rex.B
  42a43e:	rex.WR and BYTE PTR [rsp+rdi*2+0x20],r15b
  42a443:	cmp    cl,BYTE PTR [rdx]
  42a445:	add    BYTE PTR [rax],ah
  42a447:	and    BYTE PTR [rax],ah
  42a449:	and    BYTE PTR [rax],ah
  42a44b:	and    BYTE PTR [rax],ah
  42a44d:	and    BYTE PTR [rdi+0x50],cl
  42a450:	push   rsp
  42a451:	pop    rdi
  42a452:	rex.XB
  42a453:	rex.WRXB
  42a454:	rex.R
  42a455:	rex.RB cmp eax,0x68636560
  42a45b:	outs   dx,DWORD PTR ds:[rsi]
  42a45c:	and    BYTE PTR [rdx],ah
  42a45e:	pop    rax
  42a45f:	and    al,0x7b
  42a461:	rex.WRXB push r8
  42a463:	push   rsp
  42a464:	pop    rdi
  42a465:	push   r10
  42a467:	rex.RXB jge 0x42a48c
  42a46a:	jl     0x42a4df
  42a46c:	gs and BYTE PTR fs:[rdi],ah
  42a470:	jae    0x42a4a1
  42a472:	pop    rsi
  42a473:	pop    rax
  42a474:	sub    eax,0x272f2f2a
  42a479:	(bad)  
  42a47a:	or     ah,BYTE PTR [rax]
  42a47c:	and    BYTE PTR [rax],ah
  42a47e:	and    BYTE PTR [rax],ah
  42a480:	and    BYTE PTR [rax],ah
  42a482:	and    BYTE PTR [rbx+0x68],dh
  42a485:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a48c:	and    BYTE PTR [rax],ah
  42a48e:	and    BYTE PTR [rax],ah
  42a490:	and    BYTE PTR [rdi+0x50],cl
  42a493:	push   rsp
  42a494:	pop    rdi
  42a495:	push   r10
  42a497:	rex.RXB cmp eax,0x200a3124
  42a49d:	and    BYTE PTR [rax],ah
  42a49f:	and    BYTE PTR [rax],ah
  42a4a1:	and    BYTE PTR [rax],ah
  42a4a3:	and    BYTE PTR [rbx+0x61],ah
  42a4a6:	jae    0x42a50d
  42a4a8:	and    BYTE PTR [rdx],ah
  42a4aa:	and    al,0x7b
  42a4ac:	rex.WRXB push r8
  42a4ae:	push   rsp
  42a4af:	pop    rdi
  42a4b0:	rex.XB
  42a4b1:	rex.WRXB
  42a4b2:	rex.R
  42a4b3:	rex.RB jge 0x42a4d8
  42a4b6:	and    BYTE PTR [rcx+0x6e],ch
  42a4b9:	and    BYTE PTR [rdx],ch
  42a4bb:	cmp    eax,0xa29202a
  42a4c0:	and    BYTE PTR [rax],ah
  42a4c2:	and    BYTE PTR [rax],ah
  42a4c4:	and    BYTE PTR [rax],ah
  42a4c6:	and    BYTE PTR [rax],ah
  42a4c8:	and    BYTE PTR [rax],ah
  42a4ca:	and    BYTE PTR [rax],ah
  42a4cc:	rex.WRXB push r8
  42a4ce:	push   rsp
  42a4cf:	pop    rdi
  42a4d0:	push   r10
  42a4d2:	rex.RXB pop r15
  42a4d4:	push   rsi
  42a4d5:	rex.B
  42a4d6:	rex.WR cmp rax,0x68636560
  42a4dc:	outs   dx,DWORD PTR ds:[rsi]
  42a4dd:	and    BYTE PTR [rdx],ah
  42a4df:	and    al,0x7b
  42a4e1:	rex.WRXB push r8
  42a4e3:	push   rsp
  42a4e4:	pop    rdi
  42a4e5:	rex.XB
  42a4e6:	rex.WRXB
  42a4e7:	rex.R
  42a4e8:	rex.RB jge 0x42a50d
  42a4eb:	jl     0x42a560
  42a4ed:	gs and BYTE PTR fs:[rdi],ah
  42a4f1:	jae    0x42a522
  42a4f3:	pop    rsi
  42a4f4:	pop    rbx
  42a4f5:	pop    rsi
  42a4f6:	cmp    eax,0x2f3d2a5d
  42a4fb:	(bad)  
  42a4fc:	(bad)  
  42a4fd:	(bad)  
  42a4fe:	or     ah,BYTE PTR [rax]
  42a500:	and    BYTE PTR [rax],ah
  42a502:	and    BYTE PTR [rax],ah
  42a504:	and    BYTE PTR [rax],ah
  42a506:	and    BYTE PTR [rax],ah
  42a508:	and    BYTE PTR [rax],ah
  42a50a:	and    BYTE PTR [rdi+0x50],cl
  42a50d:	push   rsp
  42a50e:	pop    rdi
  42a50f:	rex.XB
  42a510:	rex.WRXB
  42a511:	rex.R
  42a512:	rex.RB cmp eax,0x68636560
  42a518:	outs   dx,DWORD PTR ds:[rsi]
  42a519:	and    BYTE PTR [rdx],ah
  42a51b:	and    al,0x7b
  42a51d:	rex.WRXB push r8
  42a51f:	push   rsp
  42a520:	pop    rdi
  42a521:	rex.XB
  42a522:	rex.WRXB
  42a523:	rex.R
  42a524:	rex.RB jge 0x42a549
  42a527:	jl     0x42a59c
  42a529:	gs and BYTE PTR fs:[rdi],ah
  42a52d:	jae    0x42a55e
  42a52f:	cmp    eax,0x2f242a2e
  42a534:	(bad)  
  42a535:	(bad)  
  42a536:	(bad)  
  42a537:	and    BYTE PTR [rbx],bh
  42a539:	cmp    esp,DWORD PTR [rax]
  42a53b:	gs jae 0x42a59f
  42a53e:	movsxd ecx,DWORD PTR [rdx]
  42a540:	add    BYTE PTR [rax],ah
  42a542:	and    BYTE PTR [rax],ah
  42a544:	and    BYTE PTR [rax],ah
  42a546:	and    BYTE PTR [rax],ah
  42a548:	and    BYTE PTR [rdi+0x50],cl
  42a54b:	push   rsp
  42a54c:	pop    rdi
  42a54d:	rex.XB
  42a54e:	rex.WRXB
  42a54f:	rex.R
  42a550:	rex.RB cmp eax,0x68636560
  42a556:	outs   dx,DWORD PTR ds:[rsi]
  42a557:	and    BYTE PTR [rdx],ah
  42a559:	pop    rax
  42a55a:	and    al,0x7b
  42a55c:	rex.WRXB push r8
  42a55e:	push   rsp
  42a55f:	pop    rdi
  42a560:	push   r10
  42a562:	rex.RXB jge 0x42a587
  42a565:	and    BYTE PTR [rax+riz*1+0x73],bh
  42a569:	gs and BYTE PTR fs:[rdi],ah
  42a56d:	jae    0x42a59e
  42a56f:	pop    rax
  42a570:	sub    eax,0x5c2e285c
  42a575:	sub    DWORD PTR [rsi],ebp
  42a577:	sub    ch,BYTE PTR [rdi]
  42a579:	pop    rsp
  42a57a:	xor    DWORD PTR [rdi],ebp
  42a57c:	(bad)  
  42a57d:	(bad)  
  42a57e:	or     ah,BYTE PTR [rax]
  42a580:	and    BYTE PTR [rax],ah
  42a582:	and    BYTE PTR [rax],ah
  42a584:	and    BYTE PTR [rax],ah
  42a586:	and    BYTE PTR [rdi+0x50],cl
  42a589:	push   rsp
  42a58a:	pop    rdi
  42a58b:	push   r10
  42a58d:	rex.RXB cmp eax,0x63652060
  42a593:	push   0x5822206f
  42a598:	and    al,0x7b
  42a59a:	rex.WRXB push r8
  42a59c:	push   rsp
  42a59d:	pop    rdi
  42a59e:	push   r10
  42a5a0:	rex.RXB jge 0x42a5c5
  42a5a3:	and    BYTE PTR [rax+riz*1+0x73],bh
  42a5a7:	gs and BYTE PTR fs:[rdi],ah
  42a5ab:	jae    0x42a5dc
  42a5ad:	pop    rax
  42a5ae:	sub    eax,0x272f2f2e
  42a5b3:	(bad)  
  42a5b4:	or     al,BYTE PTR [rax]
  42a5b6:	or     al,BYTE PTR [rcx+0x52]
  42a5b9:	rex.RXB pop r15
  42a5bb:	rex.XB
  42a5bc:	rex.WRXB push r13
  42a5be:	rex.WRX push rsp
  42a5c0:	cmp    eax,0x4f0a2324
  42a5c5:	push   rax
  42a5c6:	push   rsp
  42a5c7:	pop    rdi
  42a5c8:	push   rax
  42a5c9:	push   rdx
  42a5ca:	rex.WRXB
  42a5cb:	rex.XB
  42a5cc:	rex.RB push r11
  42a5ce:	push   rbx
  42a5cf:	cmp    eax,0x65757274
  42a5d4:	or     cl,BYTE PTR [rdi+0x50]
  42a5d7:	push   rsp
  42a5d8:	pop    rdi
  42a5d9:	push   r10
  42a5db:	rex.RXB cmp eax,0x770a3124
  42a5e1:	push   0x20656c69
  42a5e6:	and    al,0x7b
  42a5e8:	rex.WRXB push r8
  42a5ea:	push   rsp
  42a5eb:	pop    rdi
  42a5ec:	push   rax
  42a5ed:	push   rdx
  42a5ee:	rex.WRXB
  42a5ef:	rex.XB
  42a5f0:	rex.RB push r11
  42a5f2:	push   rbx
  42a5f3:	jge    0x42a615
  42a5f5:	es and BYTE PTR es:[rbx+0x20],bl
  42a5fa:	and    al,0x23
  42a5fc:	and    BYTE PTR [rip+0x30207467],ch        # 0x30631a69
  42a602:	and    BYTE PTR [rbp+0xa],bl
  42a605:	outs   dx,DWORD PTR fs:[rsi]
  42a607:	or     ah,BYTE PTR [rax]
  42a609:	and    BYTE PTR [rax],ah
  42a60b:	and    BYTE PTR [rdi+0x50],cl
  42a60e:	push   rsp
  42a60f:	pop    rdi
  42a610:	rex.RB
  42a611:	rex.WR
  42a612:	rex.RB
  42a613:	rex.WRB
  42a614:	rex.RB
  42a615:	rex.WRX push rsp
  42a617:	cmp    eax,0x200a2727
  42a61c:	and    BYTE PTR [rax],ah
  42a61e:	and    BYTE PTR [rdi+0x50],cl
  42a621:	push   rsp
  42a622:	pop    rdi
  42a623:	push   r10
  42a625:	rex.RXB pop r15
  42a627:	push   rsi
  42a628:	rex.B
  42a629:	rex.WR cmp rax,0xa0a2727
  42a62f:	and    BYTE PTR [rax],ah
  42a631:	and    BYTE PTR [rax],ah
  42a633:	movsxd esp,DWORD PTR [rcx+0x73]
  42a636:	and    BYTE PTR gs:[rdx],ah
  42a639:	and    al,0x7b
  42a63b:	rex.WRXB push r8
  42a63d:	push   rsp
  42a63e:	pop    rdi
  42a63f:	push   r10
  42a641:	rex.RXB jge 0x42a666
  42a644:	and    BYTE PTR [rcx+0x6e],ch
  42a647:	or     ah,BYTE PTR [rax]
  42a649:	and    BYTE PTR [rax],ah
  42a64b:	and    BYTE PTR [rip+0xa29202d],ch        # 0xa6bc67e
  42a651:	and    BYTE PTR [rax],ah
  42a653:	and    BYTE PTR [rax],ah
  42a655:	and    BYTE PTR [rax],ah
  42a657:	and    BYTE PTR [rax],ah
  42a659:	rex.WRXB push r8
  42a65b:	push   rsp
  42a65c:	pop    rdi
  42a65d:	push   rax
  42a65e:	push   rdx
  42a65f:	rex.WRXB
  42a660:	rex.XB
  42a661:	rex.RB push r11
  42a663:	push   rbx
  42a664:	cmp    eax,0x736c6166
  42a669:	or     ah,BYTE PTR gs:[rax]
  42a66c:	and    BYTE PTR [rax],ah
  42a66e:	and    BYTE PTR [rax],ah
  42a670:	and    BYTE PTR [rax],ah
  42a672:	and    BYTE PTR [rbx+0x68],dh
  42a675:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a67c:	and    BYTE PTR [rax],ah
  42a67e:	and    BYTE PTR [rax],ah
  42a680:	and    BYTE PTR [rbx],bh
  42a682:	cmp    ecx,DWORD PTR [rdx]
  42a684:	add    BYTE PTR [rax],ah
  42a686:	and    BYTE PTR [rax],ah
  42a688:	and    BYTE PTR [rax],ah
  42a68a:	and    BYTE PTR [rax],ah
  42a68c:	and    BYTE PTR [rbx+0x61],ah
  42a68f:	jae    0x42a6f6
  42a691:	and    BYTE PTR [rdx],ah
  42a693:	and    al,0x7b
  42a695:	rex.WRXB push r8
  42a697:	push   rsp
  42a698:	pop    rdi
  42a699:	push   r10
  42a69b:	rex.RXB pop r15
  42a69d:	rex.WRX
  42a69e:	rex.RB
  42a69f:	rex.RB
  42a6a0:	rex.R
  42a6a1:	rex.RB
  42a6a2:	rex.R jge 0x42a6c7
  42a6a5:	and    BYTE PTR [rcx+0x6e],ch
  42a6a8:	or     ah,BYTE PTR [rax]
  42a6aa:	and    BYTE PTR [rax],ah
  42a6ac:	and    BYTE PTR [rax],ah
  42a6ae:	and    BYTE PTR [rax],ah
  42a6b0:	and    BYTE PTR [rsi+0x4f],cl
  42a6b3:	and    BYTE PTR [rcx],ch
  42a6b5:	or     ah,BYTE PTR [rax]
  42a6b7:	and    BYTE PTR [rax],ah
  42a6b9:	and    BYTE PTR [rax],ah
  42a6bb:	and    BYTE PTR [rax],ah
  42a6bd:	and    BYTE PTR [rax],ah
  42a6bf:	and    BYTE PTR [rax],ah
  42a6c1:	and    BYTE PTR [rdi+0x50],cl
  42a6c4:	push   rsp
  42a6c5:	pop    rdi
  42a6c6:	push   r10
  42a6c8:	rex.RXB pop r15
  42a6ca:	push   rsi
  42a6cb:	rex.B
  42a6cc:	rex.WR cmp rax,0x200a2727
  42a6d2:	and    BYTE PTR [rax],ah
  42a6d4:	and    BYTE PTR [rax],ah
  42a6d6:	and    BYTE PTR [rax],ah
  42a6d8:	and    BYTE PTR [rax],ah
  42a6da:	and    BYTE PTR [rax],ah
  42a6dc:	and    BYTE PTR [rbx],bh
  42a6de:	cmp    ecx,DWORD PTR [rdx]
  42a6e0:	and    BYTE PTR [rax],ah
  42a6e2:	and    BYTE PTR [rax],ah
  42a6e4:	and    BYTE PTR [rax],ah
  42a6e6:	and    BYTE PTR [rax],ah
  42a6e8:	pop    rcx
  42a6e9:	rex.RB push r11
  42a6eb:	and    BYTE PTR [rcx],ch
  42a6ed:	or     ah,BYTE PTR [rax]
  42a6ef:	and    BYTE PTR [rax],ah
  42a6f1:	and    BYTE PTR [rax],ah
  42a6f3:	and    BYTE PTR [rax],ah
  42a6f5:	and    BYTE PTR [rax],ah
  42a6f7:	and    BYTE PTR [rax],ah
  42a6f9:	and    BYTE PTR [rcx+0x66],ch
  42a6fc:	and    BYTE PTR [rbx+0x20],bl
  42a6ff:	sub    eax,0x2422207a
  42a704:	jnp    0x42a755
  42a706:	push   rax
  42a707:	push   rsp
  42a708:	pop    rdi
  42a709:	push   r10
  42a70b:	rex.RXB pop r15
  42a70d:	push   rsi
  42a70e:	rex.B
  42a70f:	rex.WR jge 0x42a734
  42a712:	and    BYTE PTR [rbp+0xa],bl
  42a715:	and    BYTE PTR [rax],ah
  42a717:	and    BYTE PTR [rax],ah
  42a719:	and    BYTE PTR [rax],ah
  42a71b:	and    BYTE PTR [rax],ah
  42a71d:	and    BYTE PTR [rax],ah
  42a71f:	and    BYTE PTR [rax],ah
  42a721:	je     0x42a78b
  42a723:	outs   dx,BYTE PTR gs:[rsi]
  42a725:	or     ah,BYTE PTR [rax]
  42a727:	and    BYTE PTR [rax],ah
  42a729:	and    BYTE PTR [rax],ah
  42a72b:	and    BYTE PTR [rax],ah
  42a72d:	and    BYTE PTR [rax],ah
  42a72f:	and    BYTE PTR [rax],ah
  42a731:	and    BYTE PTR [rax],ah
  42a733:	and    BYTE PTR [rax],ah
  42a735:	and    BYTE PTR [rcx+0x66],ch
  42a738:	and    BYTE PTR [rbx+0x20],bl
  42a73b:	and    al,0x23
  42a73d:	and    BYTE PTR [rip+0x30207165],ch        # 0x306318a8
  42a743:	and    BYTE PTR [rbp+0xa],bl
  42a746:	and    BYTE PTR [rax],ah
  42a748:	and    BYTE PTR [rax],ah
  42a74a:	and    BYTE PTR [rax],ah
  42a74c:	and    BYTE PTR [rax],ah
  42a74e:	and    BYTE PTR [rax],ah
  42a750:	and    BYTE PTR [rax],ah
  42a752:	and    BYTE PTR [rax],ah
  42a754:	and    BYTE PTR [rax],ah
  42a756:	je     0x42a7c0
  42a758:	outs   dx,BYTE PTR gs:[rsi]
  42a75a:	or     ah,BYTE PTR [rax]
  42a75c:	and    BYTE PTR [rax],ah
  42a75e:	and    BYTE PTR [rax],ah
  42a760:	and    BYTE PTR [rax],ah
  42a762:	and    BYTE PTR [rax],ah
  42a764:	and    BYTE PTR [rax],ah
  42a766:	and    BYTE PTR [rax],ah
  42a768:	and    BYTE PTR [rax],ah
  42a76a:	and    BYTE PTR [rax],ah
  42a76c:	and    BYTE PTR [rax],ah
  42a76e:	and    BYTE PTR [rbp+0x63],ah
  42a771:	push   0x6f4e206f
  42a776:	and    BYTE PTR [rcx+0x72],ah
  42a779:	addr32 jne 0x42a7e9
  42a77c:	outs   dx,BYTE PTR gs:[rsi]
  42a77e:	je     0x42a7a0
  42a780:	jo     0x42a7f4
  42a782:	outs   dx,DWORD PTR ds:[rsi]
  42a783:	jbe    0x42a7ee
  42a785:	fs gs and BYTE PTR fs:[rsi+0x6f],ah
  42a78b:	jb     0x42a7ad
  42a78d:	and    al,0x7b
  42a78f:	rex.WRXB push r8
  42a791:	push   rsp
  42a792:	pop    rdi
  42a793:	rex.WRX
  42a794:	rex.B
  42a795:	rex.WRB
  42a796:	rex.RB jge 0x42a7b9
  42a799:	outs   dx,DWORD PTR ds:[rsi]
  42a79a:	jo     0x42a810
  42a79c:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  42a7a3:	and    BYTE PTR [rax],ah
  42a7a5:	and    BYTE PTR [rax],ah
  42a7a7:	and    BYTE PTR [rax],ah
  42a7a9:	and    BYTE PTR [rax],ah
  42a7ab:	and    BYTE PTR [rax],ah
  42a7ad:	and    BYTE PTR [rax],ah
  42a7af:	and    BYTE PTR [rax],ah
  42a7b1:	and    BYTE PTR [rax],ah
  42a7b3:	and    BYTE PTR [rbp+0x63],ah
  42a7b6:	push   0x2422206f
  42a7bb:	and    eax,0x53555f73
  42a7c0:	rex.B
  42a7c1:	rex.RXB
  42a7c2:	rex.RB pop r15
  42a7c4:	push   rsp
  42a7c5:	rex.RB pop r8
  42a7c7:	push   rsp
  42a7c8:	and    cl,BYTE PTR [rdx]
  42a7ca:	and    BYTE PTR [rax],ah
  42a7cc:	and    BYTE PTR [rax],ah
  42a7ce:	and    BYTE PTR [rax],ah
  42a7d0:	and    BYTE PTR [rax],ah
  42a7d2:	and    BYTE PTR [rax],ah
  42a7d4:	and    BYTE PTR [rax],ah
  42a7d6:	and    BYTE PTR [rax],ah
  42a7d8:	and    BYTE PTR [rax],ah
  42a7da:	and    BYTE PTR [rax],ah
  42a7dc:	and    BYTE PTR [rax],ah
  42a7de:	gs js  0x42a84a
  42a7e1:	je     0x42a803
  42a7e3:	xor    DWORD PTR [rdx],ecx
  42a7e5:	and    BYTE PTR [rax],ah
  42a7e7:	and    BYTE PTR [rax],ah
  42a7e9:	and    BYTE PTR [rax],ah
  42a7eb:	and    BYTE PTR [rax],ah
  42a7ed:	and    BYTE PTR [rax],ah
  42a7ef:	and    BYTE PTR [rax],ah
  42a7f1:	and    BYTE PTR [rax],ah
  42a7f3:	and    BYTE PTR [rax],ah
  42a7f5:	imul   sp,WORD PTR [rax],0x263e
  42a7fa:	xor    cl,BYTE PTR [rdx]
  42a7fc:	and    BYTE PTR [rax],ah
  42a7fe:	and    BYTE PTR [rax],ah
  42a800:	and    BYTE PTR [rax],ah
  42a802:	and    BYTE PTR [rax],ah
  42a804:	and    BYTE PTR [rax],ah
  42a806:	and    BYTE PTR [rax],ah
  42a808:	and    BYTE PTR [rax],ah
  42a80a:	and    BYTE PTR [rax],ah
  42a80c:	rex.WRXB push r8
  42a80e:	push   rsp
  42a80f:	pop    rdi
  42a810:	push   r10
  42a812:	rex.RXB pop r15
  42a814:	push   rsi
  42a815:	rex.B
  42a816:	rex.WR cmp rax,0x504f7b24
  42a81c:	push   rsp
  42a81d:	pop    rdi
  42a81e:	push   r10
  42a820:	rex.RXB jge 0x42a82d
  42a823:	and    BYTE PTR [rax],ah
  42a825:	and    BYTE PTR [rax],ah
  42a827:	and    BYTE PTR [rax],ah
  42a829:	and    BYTE PTR [rax],ah
  42a82b:	and    BYTE PTR [rax],ah
  42a82d:	and    BYTE PTR [rax],ah
  42a82f:	and    BYTE PTR [rax],ah
  42a831:	and    BYTE PTR [rax],ah
  42a833:	jae    0x42a89d
  42a835:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a83c:	and    BYTE PTR [rax],ah
  42a83e:	and    BYTE PTR [rax],ah
  42a840:	and    BYTE PTR [rax],ah
  42a842:	and    BYTE PTR [rax],ah
  42a844:	and    BYTE PTR [rax],ah
  42a846:	and    BYTE PTR [rax],ah
  42a848:	and    BYTE PTR [rdi+0x50],cl
  42a84b:	push   rsp
  42a84c:	pop    rdi
  42a84d:	push   r10
  42a84f:	rex.RXB cmp eax,0x200a3124
  42a855:	and    BYTE PTR [rax],ah
  42a857:	and    BYTE PTR [rax],ah
  42a859:	and    BYTE PTR [rax],ah
  42a85b:	and    BYTE PTR [rax],ah
  42a85d:	and    BYTE PTR [rax],ah
  42a85f:	and    BYTE PTR [rsi+0x69],ah
  42a862:	or     ah,BYTE PTR [rax]
  42a864:	and    BYTE PTR [rax],ah
  42a866:	and    BYTE PTR [rax],ah
  42a868:	and    BYTE PTR [rax],ah
  42a86a:	and    BYTE PTR [rax],ah
  42a86c:	and    BYTE PTR [rax],ah
  42a86e:	and    BYTE PTR [rbx],bh
  42a870:	cmp    ecx,DWORD PTR [rdx]
  42a872:	and    BYTE PTR [rax],ah
  42a874:	and    BYTE PTR [rax],ah
  42a876:	and    BYTE PTR [rax],ah
  42a878:	and    BYTE PTR [rax],ah
  42a87a:	rex.WRXB
  42a87b:	rex.WXB and BYTE PTR [r9],bpl
  42a87e:	or     ah,BYTE PTR [rax]
  42a880:	and    BYTE PTR [rax],ah
  42a882:	and    BYTE PTR [rax],ah
  42a884:	and    BYTE PTR [rax],ah
  42a886:	and    BYTE PTR [rax],ah
  42a888:	and    BYTE PTR [rax],ah
  42a88a:	and    BYTE PTR [rcx+0x66],ch
  42a88d:	and    BYTE PTR [rbx+0x20],bl
  42a890:	sub    eax,0x2422207a
  42a895:	jnp    0x42a8e6
  42a897:	push   rax
  42a898:	push   rsp
  42a899:	pop    rdi
  42a89a:	push   r10
  42a89c:	rex.RXB pop r15
  42a89e:	push   rsi
  42a89f:	rex.B
  42a8a0:	rex.WR jge 0x42a8c5
  42a8a3:	and    BYTE PTR [rbp+0x20],bl
  42a8a6:	es and BYTE PTR es:[rbx+0x20],bl
  42a8ab:	and    al,0x23
  42a8ad:	and    BYTE PTR [rip+0x30207467],ch        # 0x30631d1a
  42a8b3:	and    BYTE PTR [rbp+0xa],bl
  42a8b6:	and    BYTE PTR [rax],ah
  42a8b8:	and    BYTE PTR [rax],ah
  42a8ba:	and    BYTE PTR [rax],ah
  42a8bc:	and    BYTE PTR [rax],ah
  42a8be:	and    BYTE PTR [rax],ah
  42a8c0:	and    BYTE PTR [rax],ah
  42a8c2:	je     0x42a92c
  42a8c4:	outs   dx,BYTE PTR gs:[rsi]
  42a8c6:	or     ah,BYTE PTR [rax]
  42a8c8:	and    BYTE PTR [rax],ah
  42a8ca:	and    BYTE PTR [rax],ah
  42a8cc:	and    BYTE PTR [rax],ah
  42a8ce:	and    BYTE PTR [rax],ah
  42a8d0:	and    BYTE PTR [rax],ah
  42a8d2:	and    BYTE PTR [rax],ah
  42a8d4:	and    BYTE PTR [rax],ah
  42a8d6:	and    BYTE PTR [rbx+0x61],ah
  42a8d9:	jae    0x42a940
  42a8db:	and    BYTE PTR [rdx],ah
  42a8dd:	and    al,0x7b
  42a8df:	rex.WRXB push r8
  42a8e1:	push   rsp
  42a8e2:	pop    rdi
  42a8e3:	push   r10
  42a8e5:	rex.RXB jge 0x42a90a
  42a8e8:	and    BYTE PTR [rcx+0x6e],ch
  42a8eb:	and    BYTE PTR [rip+0x2029202a],ch        # 0x206bc91b
  42a8f1:	cmp    edi,DWORD PTR [rbx]
  42a8f3:	and    BYTE PTR [rdx],ch
  42a8f5:	and    BYTE PTR [rcx],ch
  42a8f7:	or     ah,BYTE PTR [rax]
  42a8f9:	and    BYTE PTR [rax],ah
  42a8fb:	and    BYTE PTR [rax],ah
  42a8fd:	and    BYTE PTR [rax],ah
  42a8ff:	and    BYTE PTR [rax],ah
  42a901:	and    BYTE PTR [rax],ah
  42a903:	and    BYTE PTR [rax],ah
  42a905:	and    BYTE PTR [rax],ah
  42a907:	and    BYTE PTR [rax],ah
  42a909:	and    BYTE PTR [rax],ah
  42a90b:	and    BYTE PTR [rdi+0x50],cl
  42a90e:	push   rsp
  42a90f:	pop    rdi
  42a910:	push   r10
  42a912:	rex.RXB pop r15
  42a914:	push   rsi
  42a915:	rex.B
  42a916:	rex.WR cmp rax,0x504f7b24
  42a91c:	push   rsp
  42a91d:	pop    rdi
  42a91e:	push   r10
  42a920:	rex.RXB jge 0x42a92d
  42a923:	and    BYTE PTR [rax],ah
  42a925:	and    BYTE PTR [rax],ah
  42a927:	and    BYTE PTR [rax],ah
  42a929:	and    BYTE PTR [rax],ah
  42a92b:	and    BYTE PTR [rax],ah
  42a92d:	and    BYTE PTR [rax],ah
  42a92f:	and    BYTE PTR [rax],ah
  42a931:	and    BYTE PTR [rax],ah
  42a933:	and    BYTE PTR [rax],ah
  42a935:	and    BYTE PTR [rax],ah
  42a937:	jae    0x42a9a1
  42a939:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42a940:	and    BYTE PTR [rax],ah
  42a942:	and    BYTE PTR [rax],ah
  42a944:	and    BYTE PTR [rax],ah
  42a946:	and    BYTE PTR [rax],ah
  42a948:	and    BYTE PTR [rax],ah
  42a94a:	and    BYTE PTR [rax],ah
  42a94c:	and    BYTE PTR [rax],ah
  42a94e:	and    BYTE PTR [rax],ah
  42a950:	and    BYTE PTR [rdi+0x50],cl
  42a953:	push   rsp
  42a954:	pop    rdi
  42a955:	push   r10
  42a957:	rex.RXB cmp eax,0x3b203124
  42a95d:	cmp    esp,DWORD PTR [rax]
  42a95f:	gs jae 0x42a9c3
  42a962:	movsxd ecx,DWORD PTR [rdx]
  42a964:	and    BYTE PTR [rax],ah
  42a966:	and    BYTE PTR [rax],ah
  42a968:	and    BYTE PTR [rax],ah
  42a96a:	and    BYTE PTR [rax],ah
  42a96c:	and    BYTE PTR [rax],ah
  42a96e:	and    BYTE PTR [rax],ah
  42a970:	imul   cx,WORD PTR [rdx],0x2020
  42a975:	and    BYTE PTR [rax],ah
  42a977:	and    BYTE PTR [rax],ah
  42a979:	and    BYTE PTR [rax],ah
  42a97b:	and    BYTE PTR [rax],ah
  42a97d:	and    BYTE PTR [rax],ah
  42a97f:	cmp    edi,DWORD PTR [rbx]
  42a981:	or     ah,BYTE PTR [rax]
  42a983:	and    BYTE PTR [rax],ah
  42a985:	and    BYTE PTR [rax],ah
  42a987:	and    BYTE PTR [rax],ah
  42a989:	and    BYTE PTR [rbp+0x73],ah
  42a98c:	(bad)  
  42a98d:	movsxd ecx,DWORD PTR [rdx]
  42a98f:	add    BYTE PTR [rax],ah
  42a991:	and    BYTE PTR [rax],ah
  42a993:	and    BYTE PTR [rax],ah
  42a995:	and    BYTE PTR [rax],ah
  42a997:	and    BYTE PTR [rax],ah
  42a999:	and    BYTE PTR [rax],ah
  42a99b:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cdd2
  42a9a1:	and    eax,0x5f732432
  42a9a6:	rex.XB push r12
  42a9a8:	cmp    eax,0x70786560
  42a9ad:	jb     0x42a9cf
  42a9af:	and    al,0x7b
  42a9b1:	and    eax,0x5f732431
  42a9b6:	and    eax,0x5f732432
  42a9bb:	rex.XB push r12
  42a9bd:	jge    0x42a9df
  42a9bf:	sub    esp,DWORD PTR [rax]
  42a9c1:	xor    DWORD PTR [rax+0xa],esp
  42a9c4:	and    BYTE PTR [rax],ah
  42a9c6:	and    BYTE PTR [rax],ah
  42a9c8:	and    BYTE PTR [rax],ah
  42a9ca:	and    BYTE PTR [rax],ah
  42a9cc:	and    BYTE PTR [rax],ah
  42a9ce:	and    BYTE PTR [rax],ah
  42a9d0:	rex.WRXB push r8
  42a9d2:	push   rsp
  42a9d3:	pop    rdi
  42a9d4:	rex.RB
  42a9d5:	rex.WR
  42a9d6:	rex.RB
  42a9d7:	rex.WRB
  42a9d8:	rex.RB
  42a9d9:	rex.WRX push rsp
  42a9db:	cmp    eax,0x7b245f22
  42a9e0:	and    eax,0x5f732431
  42a9e5:	and    eax,0x5f732432
  42a9ea:	rex.XB push r12
  42a9ec:	jge    0x42aa10
  42a9ee:	or     ah,BYTE PTR [rax]
  42a9f0:	and    BYTE PTR [rax],ah
  42a9f2:	and    BYTE PTR [rax],ah
  42a9f4:	and    BYTE PTR [rax],ah
  42a9f6:	and    BYTE PTR [rax],ah
  42a9f8:	and    BYTE PTR [rax],ah
  42a9fa:	and    BYTE PTR [rdi+0x50],cl
  42a9fd:	push   rsp
  42a9fe:	pop    rdi
  42a9ff:	rex.WRX
  42aa00:	rex.B
  42aa01:	rex.WRB
  42aa02:	rex.RB cmp eax,0x24322527
  42aa08:	jae    0x42aa31
  42aa0a:	or     al,BYTE PTR [rax]
  42aa0c:	or     ch,BYTE PTR [rcx+0x66]
  42aa0f:	and    BYTE PTR [rbp+riz*2+0x73],dh
  42aa13:	je     0x42aa35
  42aa15:	sub    eax,0x2422207a
  42aa1a:	jnp    0x42aa41
  42aa1c:	xor    DWORD PTR [rbx+rsi*2],esp
  42aa1f:	pop    rdi
  42aa20:	and    eax,0x7d732432
  42aa25:	and    cl,BYTE PTR [rdx]
  42aa27:	je     0x42aa91
  42aa29:	outs   dx,BYTE PTR gs:[rsi]
  42aa2b:	or     ah,BYTE PTR [rax]
  42aa2d:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ce64
  42aa33:	and    eax,0x5f732432
  42aa38:	rex.XB push r12
  42aa3a:	cmp    eax,0x20200a30
  42aa3f:	gs js  0x42aab2
  42aa42:	outs   dx,DWORD PTR ds:[rsi]
  42aa43:	jb     0x42aab9
  42aa45:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ce7c
  42aa4b:	and    eax,0x5f732432
  42aa50:	rex.XB push r12
  42aa52:	or     ah,BYTE PTR [rbp+0x6c]
  42aa55:	jae    0x42aabc
  42aa57:	or     ah,BYTE PTR [rax]
  42aa59:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ce90
  42aa5f:	and    eax,0x5f732432
  42aa64:	rex.XB push r12
  42aa66:	cmp    eax,0x20200a31
  42aa6b:	and    eax,0x5f732431
  42aa70:	and    eax,0x5f732432
  42aa75:	xor    DWORD PTR [rip+0x31257b24],edi        # 0x3168259f
  42aa7b:	and    al,0x73
  42aa7d:	pop    rdi
  42aa7e:	and    eax,0x7d732432
  42aa83:	or     ah,BYTE PTR [rax]
  42aa85:	and    BYTE PTR [rbp+0x78],ah
  42aa88:	jo     0x42aaf9
  42aa8a:	jb     0x42ab00
  42aa8c:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cec3
  42aa92:	and    eax,0x5f732432
  42aa97:	rex.XB push r12
  42aa99:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5ced0
  42aa9f:	and    eax,0x5f732432
  42aaa4:	xor    DWORD PTR [rdx],ecx
  42aaa6:	imul   cx,WORD PTR [rdx],0x2000
  42aaab:	and    BYTE PTR [rax],ah
  42aaad:	and    BYTE PTR [rdx],ch
  42aaaf:	and    BYTE PTR [rcx],ch
  42aab1:	or     ah,BYTE PTR [rax]
  42aab3:	and    BYTE PTR [rax],ah
  42aab5:	and    BYTE PTR [rax],ah
  42aab7:	and    BYTE PTR [rax],ah
  42aab9:	and    BYTE PTR [rax],ah
  42aabb:	rex.WRXB push r8
  42aabd:	push   rsp
  42aabe:	pop    rdi
  42aabf:	push   rax
  42aac0:	push   rdx
  42aac1:	rex.WRXB
  42aac2:	rex.XB
  42aac3:	rex.RB push r11
  42aac5:	push   rbx
  42aac6:	cmp    eax,0x736c6166
  42aacb:	or     ah,BYTE PTR gs:[rax]
  42aace:	and    BYTE PTR [rax],ah
  42aad0:	and    BYTE PTR [rax],ah
  42aad2:	and    BYTE PTR [rax],ah
  42aad4:	and    BYTE PTR [rax],ah
  42aad6:	cmp    edi,DWORD PTR [rbx]
  42aad8:	or     ah,BYTE PTR [rax]
  42aada:	and    BYTE PTR [rax],ah
  42aadc:	and    BYTE PTR [rbp+0x73],ah
  42aadf:	(bad)  
  42aae0:	movsxd ecx,DWORD PTR [rdx]
  42aae2:	add    BYTE PTR [rax],ah
  42aae4:	and    BYTE PTR [rax],ah
  42aae6:	and    BYTE PTR [rax],ah
  42aae8:	and    BYTE PTR [rax],ah
  42aaea:	and    BYTE PTR [rax],ah
  42aaec:	and    BYTE PTR [rax],ah
  42aaee:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cf25
  42aaf4:	and    eax,0x5f732432
  42aaf9:	rex.XB push r12
  42aafb:	cmp    eax,0x20200a30
  42ab00:	and    BYTE PTR [rax],ah
  42ab02:	and    BYTE PTR [rax],ah
  42ab04:	and    BYTE PTR [rax],ah
  42ab06:	and    BYTE PTR [rax],ah
  42ab08:	and    BYTE PTR [rax],ah
  42ab0a:	rex.WRXB push r8
  42ab0c:	push   rsp
  42ab0d:	pop    rdi
  42ab0e:	rex.RB
  42ab0f:	rex.WR
  42ab10:	rex.RB
  42ab11:	rex.WRB
  42ab12:	rex.RB
  42ab13:	rex.WRX push rsp
  42ab15:	cmp    eax,0x200a2727
  42ab1a:	and    BYTE PTR [rax],ah
  42ab1c:	and    BYTE PTR [rax],ah
  42ab1e:	and    BYTE PTR [rax],ah
  42ab20:	and    BYTE PTR [rax],ah
  42ab22:	and    BYTE PTR [rax],ah
  42ab24:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cf5b
  42ab2a:	and    eax,0x3d732432
  42ab2f:	(bad)  
  42ab30:	and    eax,0x27732433
  42ab35:	or     ah,BYTE PTR [rax]
  42ab37:	and    BYTE PTR [rax],ah
  42ab39:	and    BYTE PTR [rax],ah
  42ab3b:	and    BYTE PTR [rax],ah
  42ab3d:	and    BYTE PTR [rax],ah
  42ab3f:	and    BYTE PTR [rax],ah
  42ab41:	and    BYTE PTR [rbp+0x78],ah
  42ab44:	jo     0x42abb5
  42ab46:	jb     0x42abbc
  42ab48:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5cf7f
  42ab4e:	and    eax,0xa732432
  42ab53:	and    BYTE PTR [rax],ah
  42ab55:	and    BYTE PTR [rax],ah
  42ab57:	and    BYTE PTR [rax],ah
  42ab59:	and    BYTE PTR [rax],ah
  42ab5b:	and    BYTE PTR [rax],ah
  42ab5d:	and    BYTE PTR [rax],ah
  42ab5f:	rex.WRXB push r8
  42ab61:	push   rsp
  42ab62:	pop    rdi
  42ab63:	rex.WRX
  42ab64:	rex.B
  42ab65:	rex.WRB
  42ab66:	rex.RB cmp eax,0x24322527
  42ab6c:	jae    0x42ab95
  42ab6e:	or     al,BYTE PTR [rax]
  42ab70:	and    BYTE PTR [rax],ah
  42ab72:	and    BYTE PTR [rax],ah
  42ab74:	and    BYTE PTR [rax],ah
  42ab76:	and    BYTE PTR [rax],ah
  42ab78:	and    BYTE PTR [rax],ah
  42ab7a:	and    BYTE PTR [rax],ah
  42ab7c:	imul   esp,DWORD PTR [rsi+0x20],0x6e2d205b
  42ab83:	and    BYTE PTR [rdx],ah
  42ab85:	and    al,0x7b
  42ab87:	and    eax,0x5f732431
  42ab8c:	and    eax,0x7d732432
  42ab91:	and    ah,BYTE PTR [rax]
  42ab93:	pop    rbp
  42ab94:	and    BYTE PTR [rsi],ah
  42ab96:	and    BYTE PTR es:[rbx+rdi*2],ah
  42ab9a:	and    eax,0x5f732431
  42ab9f:	and    eax,0x5f732432
  42aba4:	jae    0x42ac0b
  42aba6:	je     0x42ac25
  42aba8:	and    BYTE PTR [rbx],bh
  42abaa:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42abae:	outs   dx,BYTE PTR ds:[rsi]
  42abaf:	or     ah,BYTE PTR [rax]
  42abb1:	and    BYTE PTR [rax],ah
  42abb3:	and    BYTE PTR [rax],ah
  42abb5:	and    BYTE PTR [rax],ah
  42abb7:	and    BYTE PTR [rax],ah
  42abb9:	and    BYTE PTR [rax],ah
  42abbb:	and    BYTE PTR [rax],ah
  42abbd:	and    BYTE PTR [rax],ah
  42abbf:	and    BYTE PTR [rbp+0x63],ah
  42abc2:	push   0x4527206f
  42abc7:	jb     0x42ac3b
  42abc9:	outs   dx,DWORD PTR ds:[rsi]
  42abca:	jb     0x42ac06
  42abcc:	and    BYTE PTR [rax],ah
  42abce:	fs jne 0x42ac41
  42abd1:	ins    BYTE PTR es:[rdi],dx
  42abd2:	imul   esp,DWORD PTR [rbx+0x61],0x25206574
  42abd9:	xor    ah,BYTE PTR [rbx+rsi*2]
  42abdc:	and    BYTE PTR [rdi+0x70],ch
  42abdf:	je     0x42ac4a
  42abe1:	outs   dx,DWORD PTR ds:[rsi]
  42abe2:	outs   dx,BYTE PTR ds:[rsi]
  42abe3:	(bad)  
  42abe4:	or     ah,BYTE PTR [rax]
  42abe6:	and    BYTE PTR [rax],ah
  42abe8:	and    BYTE PTR [rax],ah
  42abea:	and    BYTE PTR [rax],ah
  42abec:	and    BYTE PTR [rax],ah
  42abee:	and    BYTE PTR [rax],ah
  42abf0:	and    BYTE PTR [rax],ah
  42abf2:	and    BYTE PTR [rax],ah
  42abf4:	and    BYTE PTR [rbp+0x63],ah
  42abf7:	push   0x2422206f
  42abfc:	and    eax,0x5f732431
  42ac01:	push   rbp
  42ac02:	push   rbx
  42ac03:	rex.B
  42ac04:	rex.RXB
  42ac05:	rex.RB pop r15
  42ac07:	push   rsp
  42ac08:	rex.RB pop r8
  42ac0a:	push   rsp
  42ac0b:	and    cl,BYTE PTR [rdx]
  42ac0d:	and    BYTE PTR [rax],ah
  42ac0f:	and    BYTE PTR [rax],ah
  42ac11:	and    BYTE PTR [rax],ah
  42ac13:	and    BYTE PTR [rax],ah
  42ac15:	and    BYTE PTR [rax],ah
  42ac17:	and    BYTE PTR [rax],ah
  42ac19:	and    BYTE PTR [rax],ah
  42ac1b:	and    BYTE PTR [rax],ah
  42ac1d:	gs js  0x42ac89
  42ac20:	je     0x42ac42
  42ac22:	xor    DWORD PTR [rdx],ecx
  42ac24:	and    BYTE PTR [rax],ah
  42ac26:	and    BYTE PTR [rax],ah
  42ac28:	and    BYTE PTR [rax],ah
  42ac2a:	and    BYTE PTR [rax],ah
  42ac2c:	and    BYTE PTR [rax],ah
  42ac2e:	and    BYTE PTR [rax],ah
  42ac30:	imul   sp,WORD PTR [rax],0x263e
  42ac35:	xor    cl,BYTE PTR [rdx]
  42ac37:	and    BYTE PTR [rax],ah
  42ac39:	and    BYTE PTR [rax],ah
  42ac3b:	and    BYTE PTR [rax],ah
  42ac3d:	and    BYTE PTR [rax],ah
  42ac3f:	and    BYTE PTR [rax],ah
  42ac41:	and    BYTE PTR [rax],ah
  42ac43:	and    eax,0x5f732431
  42ac48:	and    eax,0x5f732432
  42ac4d:	jae    0x42acb4
  42ac4f:	je     0x42ac8e
  42ac51:	je     0x42acc5
  42ac53:	jne    0x42acba
  42ac55:	or     ah,BYTE PTR [rax]
  42ac57:	and    BYTE PTR [rax],ah
  42ac59:	and    BYTE PTR [rax],ah
  42ac5b:	and    BYTE PTR [rax],ah
  42ac5d:	and    BYTE PTR [rax],ah
  42ac5f:	and    BYTE PTR [rax],ah
  42ac61:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d098
  42ac67:	and    eax,0x3d732432
  42ac6c:	(bad)  
  42ac6d:	and    eax,0x27732433
  42ac72:	or     ah,BYTE PTR [rax]
  42ac74:	and    BYTE PTR [rax],ah
  42ac76:	and    BYTE PTR [rax],ah
  42ac78:	and    BYTE PTR [rax],ah
  42ac7a:	and    BYTE PTR [rax],ah
  42ac7c:	and    BYTE PTR [rax],ah
  42ac7e:	and    BYTE PTR [rbp+0x78],ah
  42ac81:	jo     0x42acf2
  42ac83:	jb     0x42acf9
  42ac85:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d0bc
  42ac8b:	and    eax,0xa732432
  42ac90:	and    BYTE PTR [rax],ah
  42ac92:	and    BYTE PTR [rax],ah
  42ac94:	and    BYTE PTR [rax],ah
  42ac96:	and    BYTE PTR [rax],ah
  42ac98:	and    BYTE PTR [rax],ah
  42ac9a:	and    BYTE PTR [rax],ah
  42ac9c:	rex.WRXB push r8
  42ac9e:	push   rsp
  42ac9f:	pop    rdi
  42aca0:	rex.WRX
  42aca1:	rex.B
  42aca2:	rex.WRB
  42aca3:	rex.RB cmp eax,0x24322527
  42aca9:	jae    0x42acd2
  42acab:	or     al,BYTE PTR [rax]
  42acad:	or     al,BYTE PTR [rcx+0x52]
  42acb0:	rex.RXB pop r15
  42acb2:	rex.XB
  42acb3:	rex.WRXB push r13
  42acb5:	rex.WRX push rsp
  42acb7:	cmp    eax,0x4f0a2324
  42acbc:	push   rax
  42acbd:	push   rsp
  42acbe:	pop    rdi
  42acbf:	push   r10
  42acc1:	rex.RXB cmp eax,0x770a3124
  42acc7:	push   0x20656c69
  42accc:	pop    rbx
  42accd:	and    BYTE PTR [rbx+riz*1],ah
  42acd0:	and    BYTE PTR [rip+0x30207467],ch        # 0x3063213d
  42acd6:	and    BYTE PTR [rbp+0xa],bl
  42acd9:	outs   dx,DWORD PTR fs:[rsi]
  42acdb:	or     ah,BYTE PTR [rax]
  42acdd:	and    BYTE PTR [rax],ah
  42acdf:	and    BYTE PTR [rdi+0x50],cl
  42ace2:	push   rsp
  42ace3:	pop    rdi
  42ace4:	rex.RB
  42ace5:	rex.WR
  42ace6:	rex.RB
  42ace7:	rex.WRB
  42ace8:	rex.RB
  42ace9:	rex.WRX push rsp
  42aceb:	cmp    eax,0x200a2727
  42acf0:	and    BYTE PTR [rax],ah
  42acf2:	and    BYTE PTR [rdi+0x50],cl
  42acf5:	push   rsp
  42acf6:	pop    rdi
  42acf7:	push   r10
  42acf9:	rex.RXB pop r15
  42acfb:	push   rsi
  42acfc:	rex.B
  42acfd:	rex.WR cmp rax,0x200a2727
  42ad03:	and    BYTE PTR [rax],ah
  42ad05:	and    BYTE PTR [rdi+0x50],cl
  42ad08:	push   rsp
  42ad09:	pop    rdi
  42ad0a:	push   r10
  42ad0c:	rex.RXB cmp eax,0x7d317b24
  42ad12:	or     al,BYTE PTR [rax]
  42ad14:	and    BYTE PTR [rax],ah
  42ad16:	and    BYTE PTR [rax],ah
  42ad18:	and    BYTE PTR [rax],ah
  42ad1a:	and    BYTE PTR [rax],ah
  42ad1c:	movsxd esp,DWORD PTR [rcx+0x73]
  42ad1f:	and    BYTE PTR gs:[rdx],ah
  42ad22:	and    al,0x7b
  42ad24:	rex.WRXB push r8
  42ad26:	push   rsp
  42ad27:	pop    rdi
  42ad28:	push   r10
  42ad2a:	rex.RXB pop r15
  42ad2c:	rex.WRX
  42ad2d:	rex.RB
  42ad2e:	rex.RB
  42ad2f:	rex.R
  42ad30:	rex.RB
  42ad31:	rex.R jge 0x42ad56
  42ad34:	and    BYTE PTR [rcx+0x6e],ch
  42ad37:	or     ah,BYTE PTR [rax]
  42ad39:	and    BYTE PTR [rax],ah
  42ad3b:	and    BYTE PTR [rax],ah
  42ad3d:	and    BYTE PTR [rax],ah
  42ad3f:	and    BYTE PTR [rsi+0x4f],cl
  42ad42:	and    BYTE PTR [rcx],ch
  42ad44:	or     ah,BYTE PTR [rax]
  42ad46:	and    BYTE PTR [rax],ah
  42ad48:	and    BYTE PTR [rax],ah
  42ad4a:	and    BYTE PTR [rax],ah
  42ad4c:	and    BYTE PTR [rax],ah
  42ad4e:	and    BYTE PTR [rax],ah
  42ad50:	and    BYTE PTR [rcx+0x66],ch
  42ad53:	and    BYTE PTR [rbx+0x20],bl
  42ad56:	sub    eax,0x2422206e
  42ad5b:	jnp    0x42adac
  42ad5d:	push   rax
  42ad5e:	push   rsp
  42ad5f:	pop    rdi
  42ad60:	push   r10
  42ad62:	rex.RXB jge 0x42ad87
  42ad65:	and    BYTE PTR [rbp+0xa],bl
  42ad68:	and    BYTE PTR [rax],ah
  42ad6a:	and    BYTE PTR [rax],ah
  42ad6c:	and    BYTE PTR [rax],ah
  42ad6e:	and    BYTE PTR [rax],ah
  42ad70:	and    BYTE PTR [rax],ah
  42ad72:	and    BYTE PTR [rax],ah
  42ad74:	je     0x42adde
  42ad76:	outs   dx,BYTE PTR gs:[rsi]
  42ad78:	or     ah,BYTE PTR [rax]
  42ad7a:	and    BYTE PTR [rax],ah
  42ad7c:	and    BYTE PTR [rax],ah
  42ad7e:	and    BYTE PTR [rax],ah
  42ad80:	and    BYTE PTR [rax],ah
  42ad82:	and    BYTE PTR [rax],ah
  42ad84:	and    BYTE PTR [rax],ah
  42ad86:	and    BYTE PTR [rax],ah
  42ad88:	and    BYTE PTR [rdi+0x50],cl
  42ad8b:	push   rsp
  42ad8c:	pop    rdi
  42ad8d:	push   r10
  42ad8f:	rex.RXB cmp eax,0x4f7b242d
  42ad95:	push   rax
  42ad96:	push   rsp
  42ad97:	pop    rdi
  42ad98:	push   r10
  42ad9a:	rex.RXB jge 0x42ada7
  42ad9d:	and    BYTE PTR [rax],ah
  42ad9f:	and    BYTE PTR [rax],ah
  42ada1:	and    BYTE PTR [rax],ah
  42ada3:	and    BYTE PTR [rax],ah
  42ada5:	and    BYTE PTR [rax],ah
  42ada7:	and    BYTE PTR [rax],ah
  42ada9:	gs ins BYTE PTR es:[rdi],dx
  42adab:	jae    0x42ae12
  42adad:	or     ah,BYTE PTR [rax]
  42adaf:	and    BYTE PTR [rax],ah
  42adb1:	and    BYTE PTR [rax],ah
  42adb3:	and    BYTE PTR [rax],ah
  42adb5:	and    BYTE PTR [rax],ah
  42adb7:	and    BYTE PTR [rax],ah
  42adb9:	and    BYTE PTR [rax],ah
  42adbb:	and    BYTE PTR [rax],ah
  42adbd:	and    BYTE PTR [rbx+0x68],dh
  42adc0:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42adc7:	and    BYTE PTR [rax],ah
  42adc9:	and    BYTE PTR [rax],ah
  42adcb:	and    BYTE PTR [rax],ah
  42adcd:	and    BYTE PTR [rax],ah
  42adcf:	and    BYTE PTR [rax],ah
  42add1:	and    BYTE PTR [rax],ah
  42add3:	and    BYTE PTR [rdi+0x50],cl
  42add6:	push   rsp
  42add7:	pop    rdi
  42add8:	push   r10
  42adda:	rex.RXB cmp eax,0x200a3124
  42ade0:	and    BYTE PTR [rax],ah
  42ade2:	and    BYTE PTR [rax],ah
  42ade4:	and    BYTE PTR [rax],ah
  42ade6:	and    BYTE PTR [rax],ah
  42ade8:	and    BYTE PTR [rax],ah
  42adea:	and    BYTE PTR [rsi+0x69],ah
  42aded:	or     ah,BYTE PTR [rax]
  42adef:	and    BYTE PTR [rax],ah
  42adf1:	and    BYTE PTR [rax],ah
  42adf3:	and    BYTE PTR [rax],ah
  42adf5:	and    BYTE PTR [rax],ah
  42adf7:	and    BYTE PTR [rax],ah
  42adf9:	and    BYTE PTR [rbx],bh
  42adfb:	cmp    ecx,DWORD PTR [rdx]
  42adfd:	and    BYTE PTR [rax],ah
  42adff:	and    BYTE PTR [rax],ah
  42ae01:	and    BYTE PTR [rax],ah
  42ae03:	and    BYTE PTR [rax],ah
  42ae05:	pop    rcx
  42ae06:	rex.RB push r11
  42ae08:	and    BYTE PTR [rcx],ch
  42ae0a:	or     ah,BYTE PTR [rax]
  42ae0c:	and    BYTE PTR [rax],ah
  42ae0e:	and    BYTE PTR [rax],ah
  42ae10:	and    BYTE PTR [rax],ah
  42ae12:	and    BYTE PTR [rax],ah
  42ae14:	and    BYTE PTR [rax],ah
  42ae16:	and    BYTE PTR [rcx+0x66],ch
  42ae19:	and    BYTE PTR [rbx+0x20],bl
  42ae1c:	sub    eax,0x2422206e
  42ae21:	jnp    0x42ae72
  42ae23:	push   rax
  42ae24:	push   rsp
  42ae25:	pop    rdi
  42ae26:	push   r10
  42ae28:	rex.RXB jge 0x42ae4d
  42ae2b:	and    BYTE PTR [rbp+0xa],bl
  42ae2e:	and    BYTE PTR [rax],ah
  42ae30:	and    BYTE PTR [rax],ah
  42ae32:	and    BYTE PTR [rax],ah
  42ae34:	and    BYTE PTR [rax],ah
  42ae36:	and    BYTE PTR [rax],ah
  42ae38:	and    BYTE PTR [rax],ah
  42ae3a:	je     0x42aea4
  42ae3c:	outs   dx,BYTE PTR gs:[rsi]
  42ae3e:	or     ah,BYTE PTR [rax]
  42ae40:	and    BYTE PTR [rax],ah
  42ae42:	and    BYTE PTR [rax],ah
  42ae44:	and    BYTE PTR [rax],ah
  42ae46:	and    BYTE PTR [rax],ah
  42ae48:	and    BYTE PTR [rax],ah
  42ae4a:	and    BYTE PTR [rax],ah
  42ae4c:	and    BYTE PTR [rax],ah
  42ae4e:	and    BYTE PTR [rdi+0x50],cl
  42ae51:	push   rsp
  42ae52:	pop    rdi
  42ae53:	push   r10
  42ae55:	rex.RXB pop r15
  42ae57:	push   rsi
  42ae58:	rex.B
  42ae59:	rex.WR cmp rax,0x504f7b24
  42ae5f:	push   rsp
  42ae60:	pop    rdi
  42ae61:	push   r10
  42ae63:	rex.RXB jge 0x42ae70
  42ae66:	and    BYTE PTR [rax],ah
  42ae68:	and    BYTE PTR [rax],ah
  42ae6a:	and    BYTE PTR [rax],ah
  42ae6c:	and    BYTE PTR [rax],ah
  42ae6e:	and    BYTE PTR [rax],ah
  42ae70:	and    BYTE PTR [rax],ah
  42ae72:	gs ins BYTE PTR es:[rdi],dx
  42ae74:	jae    0x42aedb
  42ae76:	or     ah,BYTE PTR [rax]
  42ae78:	and    BYTE PTR [rax],ah
  42ae7a:	and    BYTE PTR [rax],ah
  42ae7c:	and    BYTE PTR [rax],ah
  42ae7e:	and    BYTE PTR [rax],ah
  42ae80:	and    BYTE PTR [rax],ah
  42ae82:	and    BYTE PTR [rax],ah
  42ae84:	and    BYTE PTR [rax],ah
  42ae86:	and    BYTE PTR [rcx+0x66],ch
  42ae89:	and    BYTE PTR [rbx+0x20],bl
  42ae8c:	and    al,0x23
  42ae8e:	and    BYTE PTR [rip+0x30207165],ch        # 0x30631ff9
  42ae94:	and    BYTE PTR [rbp+0xa],bl
  42ae97:	and    BYTE PTR [rax],ah
  42ae99:	and    BYTE PTR [rax],ah
  42ae9b:	and    BYTE PTR [rax],ah
  42ae9d:	and    BYTE PTR [rax],ah
  42ae9f:	and    BYTE PTR [rax],ah
  42aea1:	and    BYTE PTR [rax],ah
  42aea3:	and    BYTE PTR [rax],ah
  42aea5:	and    BYTE PTR [rax],ah
  42aea7:	je     0x42af11
  42aea9:	outs   dx,BYTE PTR gs:[rsi]
  42aeab:	or     ah,BYTE PTR [rax]
  42aead:	and    BYTE PTR [rax],ah
  42aeaf:	and    BYTE PTR [rax],ah
  42aeb1:	and    BYTE PTR [rax],ah
  42aeb3:	and    BYTE PTR [rax],ah
  42aeb5:	and    BYTE PTR [rax],ah
  42aeb7:	and    BYTE PTR [rax],ah
  42aeb9:	and    BYTE PTR [rax],ah
  42aebb:	and    BYTE PTR [rax],ah
  42aebd:	and    BYTE PTR [rax],ah
  42aebf:	and    BYTE PTR [rbp+0x63],ah
  42aec2:	push   0x6f4e206f
  42aec7:	and    BYTE PTR [rcx+0x72],ah
  42aeca:	addr32 jne 0x42af3a
  42aecd:	outs   dx,BYTE PTR gs:[rsi]
  42aecf:	je     0x42aef1
  42aed1:	jo     0x42af45
  42aed3:	outs   dx,DWORD PTR ds:[rsi]
  42aed4:	jbe    0x42af3f
  42aed6:	fs gs and BYTE PTR fs:[rsi+0x6f],ah
  42aedc:	jb     0x42aefe
  42aede:	and    al,0x7b
  42aee0:	rex.WRXB push r8
  42aee2:	push   rsp
  42aee3:	pop    rdi
  42aee4:	rex.WRX
  42aee5:	rex.B
  42aee6:	rex.WRB
  42aee7:	rex.RB jge 0x42af0a
  42aeea:	outs   dx,DWORD PTR ds:[rsi]
  42aeeb:	jo     0x42af61
  42aeed:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  42aef4:	and    BYTE PTR [rax],ah
  42aef6:	and    BYTE PTR [rax],ah
  42aef8:	and    BYTE PTR [rax],ah
  42aefa:	and    BYTE PTR [rax],ah
  42aefc:	and    BYTE PTR [rax],ah
  42aefe:	and    BYTE PTR [rax],ah
  42af00:	and    BYTE PTR [rax],ah
  42af02:	and    BYTE PTR [rax],ah
  42af04:	and    BYTE PTR [rbp+0x63],ah
  42af07:	push   0x2422206f
  42af0c:	and    eax,0x53555f73
  42af11:	rex.B
  42af12:	rex.RXB
  42af13:	rex.RB pop r15
  42af15:	push   rsp
  42af16:	rex.RB pop r8
  42af18:	push   rsp
  42af19:	and    cl,BYTE PTR [rdx]
  42af1b:	and    BYTE PTR [rax],ah
  42af1d:	and    BYTE PTR [rax],ah
  42af1f:	and    BYTE PTR [rax],ah
  42af21:	and    BYTE PTR [rax],ah
  42af23:	and    BYTE PTR [rax],ah
  42af25:	and    BYTE PTR [rax],ah
  42af27:	and    BYTE PTR [rax],ah
  42af29:	and    BYTE PTR [rax],ah
  42af2b:	and    BYTE PTR [rax],ah
  42af2d:	and    BYTE PTR [rax],ah
  42af2f:	gs js  0x42af9b
  42af32:	je     0x42af54
  42af34:	xor    DWORD PTR [rdx],ecx
  42af36:	and    BYTE PTR [rax],ah
  42af38:	and    BYTE PTR [rax],ah
  42af3a:	and    BYTE PTR [rax],ah
  42af3c:	and    BYTE PTR [rax],ah
  42af3e:	and    BYTE PTR [rax],ah
  42af40:	and    BYTE PTR [rax],ah
  42af42:	and    BYTE PTR [rax],ah
  42af44:	and    BYTE PTR [rax],ah
  42af46:	imul   sp,WORD PTR [rax],0x263e
  42af4b:	xor    cl,BYTE PTR [rdx]
  42af4d:	and    BYTE PTR [rax],ah
  42af4f:	and    BYTE PTR [rax],ah
  42af51:	and    BYTE PTR [rax],ah
  42af53:	and    BYTE PTR [rax],ah
  42af55:	and    BYTE PTR [rax],ah
  42af57:	and    BYTE PTR [rax],ah
  42af59:	and    BYTE PTR [rax],ah
  42af5b:	and    BYTE PTR [rax],ah
  42af5d:	jae    0x42afc7
  42af5f:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42af66:	and    BYTE PTR [rax],ah
  42af68:	and    BYTE PTR [rax],ah
  42af6a:	and    BYTE PTR [rax],ah
  42af6c:	and    BYTE PTR [rax],ah
  42af6e:	and    BYTE PTR [rax],ah
  42af70:	and    BYTE PTR [rax],ah
  42af72:	and    BYTE PTR [rdi+0x50],cl
  42af75:	push   rsp
  42af76:	pop    rdi
  42af77:	push   r10
  42af79:	rex.RXB pop r15
  42af7b:	push   rsi
  42af7c:	rex.B
  42af7d:	rex.WR cmp rax,0x200a3124
  42af83:	and    BYTE PTR [rax],ah
  42af85:	and    BYTE PTR [rax],ah
  42af87:	and    BYTE PTR [rax],ah
  42af89:	and    BYTE PTR [rax],ah
  42af8b:	and    BYTE PTR [rax],ah
  42af8d:	and    BYTE PTR [rsi+0x69],ah
  42af90:	or     ah,BYTE PTR [rax]
  42af92:	and    BYTE PTR [rax],ah
  42af94:	and    BYTE PTR [rax],ah
  42af96:	and    BYTE PTR [rax],ah
  42af98:	and    BYTE PTR [rax],ah
  42af9a:	and    BYTE PTR [rax],ah
  42af9c:	and    BYTE PTR [rbx+0x68],dh
  42af9f:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42afa6:	and    BYTE PTR [rax],ah
  42afa8:	and    BYTE PTR [rax],ah
  42afaa:	and    BYTE PTR [rax],ah
  42afac:	and    BYTE PTR [rax],ah
  42afae:	and    BYTE PTR [rdi+0x50],cl
  42afb1:	push   rsp
  42afb2:	pop    rdi
  42afb3:	push   r10
  42afb5:	rex.RXB cmp eax,0x200a3124
  42afbb:	and    BYTE PTR [rax],ah
  42afbd:	and    BYTE PTR [rax],ah
  42afbf:	and    BYTE PTR [rax],ah
  42afc1:	and    BYTE PTR [rax],ah
  42afc3:	and    BYTE PTR [rax],ah
  42afc5:	and    BYTE PTR [rbx],bh
  42afc7:	cmp    ecx,DWORD PTR [rdx]
  42afc9:	and    BYTE PTR [rax],ah
  42afcb:	and    BYTE PTR [rax],ah
  42afcd:	and    BYTE PTR [rax],ah
  42afcf:	and    BYTE PTR [rax],ah
  42afd1:	rex.WRXB
  42afd2:	rex.WXB and BYTE PTR [r9],bpl
  42afd5:	or     ah,BYTE PTR [rax]
  42afd7:	and    BYTE PTR [rax],ah
  42afd9:	and    BYTE PTR [rax],ah
  42afdb:	and    BYTE PTR [rax],ah
  42afdd:	and    BYTE PTR [rax],ah
  42afdf:	and    BYTE PTR [rax],ah
  42afe1:	and    BYTE PTR [rcx+0x66],ch
  42afe4:	and    BYTE PTR [rbx+0x20],bl
  42afe7:	sub    eax,0x2422206e
  42afec:	jnp    0x42b03d
  42afee:	push   rax
  42afef:	push   rsp
  42aff0:	pop    rdi
  42aff1:	push   r10
  42aff3:	rex.RXB jge 0x42b018
  42aff6:	and    BYTE PTR [rbp+0xa],bl
  42aff9:	and    BYTE PTR [rax],ah
  42affb:	and    BYTE PTR [rax],ah
  42affd:	and    BYTE PTR [rax],ah
  42afff:	and    BYTE PTR [rax],ah
  42b001:	and    BYTE PTR [rax],ah
  42b003:	and    BYTE PTR [rax],ah
  42b005:	je     0x42b06f
  42b007:	outs   dx,BYTE PTR gs:[rsi]
  42b009:	or     ah,BYTE PTR [rax]
  42b00b:	and    BYTE PTR [rax],ah
  42b00d:	and    BYTE PTR [rax],ah
  42b00f:	and    BYTE PTR [rax],ah
  42b011:	and    BYTE PTR [rax],ah
  42b013:	and    BYTE PTR [rax],ah
  42b015:	and    BYTE PTR [rax],ah
  42b017:	and    BYTE PTR [rax],ah
  42b019:	and    BYTE PTR [rdi+0x50],cl
  42b01c:	push   rsp
  42b01d:	pop    rdi
  42b01e:	push   r10
  42b020:	rex.RXB pop r15
  42b022:	push   rsi
  42b023:	rex.B
  42b024:	rex.WR cmp rax,0x504f7b24
  42b02a:	push   rsp
  42b02b:	pop    rdi
  42b02c:	push   r10
  42b02e:	rex.RXB jge 0x42b03b
  42b031:	and    BYTE PTR [rax],ah
  42b033:	and    BYTE PTR [rax],ah
  42b035:	and    BYTE PTR [rax],ah
  42b037:	and    BYTE PTR [rax],ah
  42b039:	and    BYTE PTR [rax],ah
  42b03b:	and    BYTE PTR [rax],ah
  42b03d:	and    BYTE PTR [rax],ah
  42b03f:	and    BYTE PTR [rax],ah
  42b041:	jae    0x42b0ab
  42b043:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42b04a:	and    BYTE PTR [rax],ah
  42b04c:	and    BYTE PTR [rax],ah
  42b04e:	and    BYTE PTR [rax],ah
  42b050:	and    BYTE PTR [rax],ah
  42b052:	and    BYTE PTR [rax],ah
  42b054:	and    BYTE PTR [rax],ah
  42b056:	and    BYTE PTR [rdi+0x50],cl
  42b059:	push   rsp
  42b05a:	pop    rdi
  42b05b:	push   r10
  42b05d:	rex.RXB cmp eax,0x200a3124
  42b063:	and    BYTE PTR [rax],ah
  42b065:	and    BYTE PTR [rax],ah
  42b067:	and    BYTE PTR [rax],ah
  42b069:	and    BYTE PTR [rax],ah
  42b06b:	and    BYTE PTR [rax],ah
  42b06d:	and    BYTE PTR [rbp+0x6c],ah
  42b070:	jae    0x42b0d7
  42b072:	or     ah,BYTE PTR [rax]
  42b074:	and    BYTE PTR [rax],ah
  42b076:	and    BYTE PTR [rax],ah
  42b078:	and    BYTE PTR [rax],ah
  42b07a:	and    BYTE PTR [rax],ah
  42b07c:	and    BYTE PTR [rax],ah
  42b07e:	and    BYTE PTR [rax],ah
  42b080:	and    BYTE PTR [rax],ah
  42b082:	and    BYTE PTR [rbx+0x68],dh
  42b085:	imul   esp,DWORD PTR [rsi+0x74],0x2020200a
  42b08c:	and    BYTE PTR [rax],ah
  42b08e:	and    BYTE PTR [rax],ah
  42b090:	and    BYTE PTR [rax],ah
  42b092:	and    BYTE PTR [rax],ah
  42b094:	and    BYTE PTR [rax],ah
  42b096:	and    BYTE PTR [rax],ah
  42b098:	and    BYTE PTR [rcx+0x66],ch
  42b09b:	and    BYTE PTR [rbx+0x20],bl
  42b09e:	and    al,0x23
  42b0a0:	and    BYTE PTR [rip+0x30207467],ch        # 0x3063250d
  42b0a6:	and    BYTE PTR [rbp+0xa],bl
  42b0a9:	and    BYTE PTR [rax],ah
  42b0ab:	and    BYTE PTR [rax],ah
  42b0ad:	and    BYTE PTR [rax],ah
  42b0af:	and    BYTE PTR [rax],ah
  42b0b1:	and    BYTE PTR [rax],ah
  42b0b3:	and    BYTE PTR [rax],ah
  42b0b5:	and    BYTE PTR [rax],ah
  42b0b7:	and    BYTE PTR [rax],ah
  42b0b9:	je     0x42b123
  42b0bb:	outs   dx,BYTE PTR gs:[rsi]
  42b0bd:	or     ah,BYTE PTR [rax]
  42b0bf:	and    BYTE PTR [rax],ah
  42b0c1:	and    BYTE PTR [rax],ah
  42b0c3:	and    BYTE PTR [rax],ah
  42b0c5:	and    BYTE PTR [rax],ah
  42b0c7:	and    BYTE PTR [rax],ah
  42b0c9:	and    BYTE PTR [rax],ah
  42b0cb:	and    BYTE PTR [rax],ah
  42b0cd:	and    BYTE PTR [rax],ah
  42b0cf:	and    BYTE PTR [rax],ah
  42b0d1:	and    BYTE PTR [rbx+0x61],ah
  42b0d4:	jae    0x42b13b
  42b0d6:	and    BYTE PTR [rdx],ah
  42b0d8:	and    al,0x31
  42b0da:	and    ah,BYTE PTR [rax]
  42b0dc:	imul   ebp,DWORD PTR [rsi+0x20],0x29202a2d
  42b0e3:	and    BYTE PTR [rbx],bh
  42b0e5:	cmp    esp,DWORD PTR [rax]
  42b0e7:	sub    ah,BYTE PTR [rax]
  42b0e9:	sub    DWORD PTR [rdx],ecx
  42b0eb:	and    BYTE PTR [rax],ah
  42b0ed:	and    BYTE PTR [rax],ah
  42b0ef:	and    BYTE PTR [rax],ah
  42b0f1:	and    BYTE PTR [rax],ah
  42b0f3:	and    BYTE PTR [rax],ah
  42b0f5:	and    BYTE PTR [rax],ah
  42b0f7:	and    BYTE PTR [rax],ah
  42b0f9:	and    BYTE PTR [rax],ah
  42b0fb:	and    BYTE PTR [rax],ah
  42b0fd:	and    BYTE PTR [rax],ah
  42b0ff:	and    BYTE PTR [rax],ah
  42b101:	and    BYTE PTR [rax],ah
  42b103:	rex.WRXB push r8
  42b105:	push   rsp
  42b106:	pop    rdi
  42b107:	push   r10
  42b109:	rex.RXB pop r15
  42b10b:	push   rsi
  42b10c:	rex.B
  42b10d:	rex.WR cmp rax,0x200a3124
  42b113:	and    BYTE PTR [rax],ah
  42b115:	and    BYTE PTR [rax],ah
  42b117:	and    BYTE PTR [rax],ah
  42b119:	and    BYTE PTR [rax],ah
  42b11b:	and    BYTE PTR [rax],ah
  42b11d:	and    BYTE PTR [rax],ah
  42b11f:	and    BYTE PTR [rax],ah
  42b121:	and    BYTE PTR [rax],ah
  42b123:	and    BYTE PTR [rax],ah
  42b125:	and    BYTE PTR [rax],ah
  42b127:	and    BYTE PTR [rax],ah
  42b129:	and    BYTE PTR [rbx+0x68],dh
  42b12c:	imul   esp,DWORD PTR [rsi+0x74],0x203b3b20
  42b133:	gs jae 0x42b197
  42b136:	movsxd ecx,DWORD PTR [rdx]
  42b138:	and    BYTE PTR [rax],ah
  42b13a:	and    BYTE PTR [rax],ah
  42b13c:	and    BYTE PTR [rax],ah
  42b13e:	and    BYTE PTR [rax],ah
  42b140:	and    BYTE PTR [rax],ah
  42b142:	and    BYTE PTR [rax],ah
  42b144:	and    BYTE PTR [rax],ah
  42b146:	and    BYTE PTR [rax],ah
  42b148:	and    BYTE PTR [rax],ah
  42b14a:	and    BYTE PTR [rax],ah
  42b14c:	rex.WRXB push r8
  42b14e:	push   rsp
  42b14f:	pop    rdi
  42b150:	push   r10
  42b152:	rex.RXB cmp eax,0x200a3124
  42b158:	and    BYTE PTR [rax],ah
  42b15a:	and    BYTE PTR [rax],ah
  42b15c:	and    BYTE PTR [rax],ah
  42b15e:	and    BYTE PTR [rax],ah
  42b160:	and    BYTE PTR [rax],ah
  42b162:	and    BYTE PTR [rax],ah
  42b164:	and    BYTE PTR [rax],ah
  42b166:	and    BYTE PTR [rsi+0x69],ah
  42b169:	or     ah,BYTE PTR [rax]
  42b16b:	and    BYTE PTR [rax],ah
  42b16d:	and    BYTE PTR [rax],ah
  42b16f:	and    BYTE PTR [rax],ah
  42b171:	and    BYTE PTR [rax],ah
  42b173:	and    BYTE PTR [rax],ah
  42b175:	and    BYTE PTR [rsi+0x69],ah
  42b178:	or     ah,BYTE PTR [rax]
  42b17a:	and    BYTE PTR [rax],ah
  42b17c:	and    BYTE PTR [rax],ah
  42b17e:	and    BYTE PTR [rax],ah
  42b180:	and    BYTE PTR [rax],ah
  42b182:	and    BYTE PTR [rax],ah
  42b184:	and    BYTE PTR [rbx],bh
  42b186:	cmp    ecx,DWORD PTR [rdx]
  42b188:	and    BYTE PTR [rax],ah
  42b18a:	and    BYTE PTR [rax],ah
  42b18c:	and    BYTE PTR [rax],ah
  42b18e:	and    BYTE PTR [rax],ah
  42b190:	gs jae 0x42b1f4
  42b193:	movsxd ecx,DWORD PTR [rdx]
  42b195:	add    BYTE PTR [rax],ah
  42b197:	and    BYTE PTR [rax],ah
  42b199:	and    BYTE PTR [rax],ah
  42b19b:	and    BYTE PTR [rax],ah
  42b19d:	and    BYTE PTR [rax],ah
  42b19f:	and    BYTE PTR [rax],ah
  42b1a1:	and    BYTE PTR [rbp+0x63],ah
  42b1a4:	push   0x2422206f
  42b1a9:	and    eax,0x4f4c5f73
  42b1ae:	rex.WRX
  42b1af:	rex.RXB push r13
  42b1b1:	push   rbx
  42b1b2:	rex.B
  42b1b3:	rex.RXB
  42b1b4:	rex.RB pop r15
  42b1b6:	push   rsp
  42b1b7:	rex.RB pop r8
  42b1b9:	push   rsp
  42b1ba:	and    ah,BYTE PTR [rax]
  42b1bc:	jl     0x42b1de
  42b1be:	and    al,0x7b
  42b1c0:	push   rax
  42b1c1:	rex.B
  42b1c2:	rex.RXB
  42b1c3:	rex.RB push r10
  42b1c5:	sub    eax,0x65726f6d
  42b1ca:	jge    0x42b1d6
  42b1cc:	and    BYTE PTR [rax],ah
  42b1ce:	and    BYTE PTR [rax],ah
  42b1d0:	and    BYTE PTR [rax],ah
  42b1d2:	and    BYTE PTR [rax],ah
  42b1d4:	and    BYTE PTR [rax],ah
  42b1d6:	and    BYTE PTR [rax],ah
  42b1d8:	gs js  0x42b244
  42b1db:	je     0x42b1fd
  42b1dd:	xor    BYTE PTR [rdx],cl
  42b1df:	add    BYTE PTR [rip+0x464f2073],ah        # 0x4691d258
  42b1e5:	and    BYTE PTR [rip+0xa230a73],ah        # 0xa65bc5e
  42b1eb:	and    esp,DWORD PTR [rax]
  42b1ed:	and    BYTE PTR [rsi+0x72],al
  42b1f0:	outs   dx,DWORD PTR ds:[rsi]
  42b1f1:	ins    DWORD PTR es:[rdi],dx
  42b1f2:	and    BYTE PTR [rax+0x65],ch
  42b1f5:	jb     0x42b25c
  42b1f7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42b1fb:	je     0x42b265
  42b1fd:	and    BYTE PTR gs:[rsi+0x65],ch
  42b201:	js     0x42b277
  42b203:	and    BYTE PTR [rax+0x2d],ah
  42b206:	sub    eax,0x206f6420
  42b20b:	outs   dx,BYTE PTR ds:[rsi]
  42b20c:	outs   dx,DWORD PTR ds:[rsi]
  42b20d:	je     0x42b22f
  42b20f:	ins    DWORD PTR es:[rdi],dx
  42b210:	outs   dx,DWORD PTR ds:[rsi]
  42b211:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  42b219:	jae    0x42b23b
  42b21b:	ins    DWORD PTR es:[rdi],dx
  42b21c:	(bad)  
  42b21d:	jb     0x42b28a
  42b21f:	gs jb  0x42b242
  42b222:	sub    eax,0xa2c272d
  42b227:	and    esp,DWORD PTR [rax]
  42b229:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42b22d:	and    BYTE PTR [rbp+riz*2+0x78],dh
  42b231:	je     0x42b253
  42b233:	push   0x62207361
  42b238:	gs outs dx,BYTE PTR gs:[rsi]
  42b23b:	and    BYTE PTR [rdi+0x65],ah
  42b23e:	outs   dx,BYTE PTR ds:[rsi]
  42b23f:	gs jb  0x42b2a3
  42b242:	je     0x42b2a9
  42b244:	and    BYTE PTR fs:[rip+0x20000a73],ah        # 0x2042bcbe
  42b24b:	and    BYTE PTR [rax],ah
  42b24d:	and    BYTE PTR [rax],ah
  42b24f:	and    BYTE PTR [rax],ah
  42b251:	and    BYTE PTR [rax],ah
  42b253:	and    BYTE PTR [rax],ah
  42b255:	and    BYTE PTR [rbp+0x76],ah
  42b258:	(bad)  
  42b259:	ins    BYTE PTR es:[rdi],dx
  42b25a:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d691
  42b260:	and    eax,0x24732432
  42b265:	jnp    0x42b2b6
  42b267:	push   rax
  42b268:	push   rsp
  42b269:	pop    rdi
  42b26a:	rex.RB
  42b26b:	rex.WR
  42b26c:	rex.RB
  42b26d:	rex.WRB
  42b26e:	rex.RB
  42b26f:	rex.WRX push rsp
  42b271:	jge    0x42b2b0
  42b273:	je     0x42b2e7
  42b275:	jne    0x42b2dc
  42b277:	or     ah,BYTE PTR [rax]
  42b279:	and    BYTE PTR [rax],ah
  42b27b:	and    BYTE PTR [rax],ah
  42b27d:	and    BYTE PTR [rax],ah
  42b27f:	and    BYTE PTR [rax],ah
  42b281:	and    BYTE PTR [rax],ah
  42b283:	and    BYTE PTR [rbp+0x78],ah
  42b286:	jo     0x42b2f7
  42b288:	jb     0x42b2fe
  42b28a:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d6c1
  42b290:	and    eax,0x24732432
  42b295:	jnp    0x42b2e6
  42b297:	push   rax
  42b298:	push   rsp
  42b299:	pop    rdi
  42b29a:	rex.RB
  42b29b:	rex.WR
  42b29c:	rex.RB
  42b29d:	rex.WRB
  42b29e:	rex.RB
  42b29f:	rex.WRX push rsp
  42b2a1:	jge    0x42b2ad
  42b2a3:	add    BYTE PTR [rax],ah
  42b2a5:	and    BYTE PTR [rax],ah
  42b2a7:	and    BYTE PTR [rax],ah
  42b2a9:	and    BYTE PTR [rax],ah
  42b2ab:	and    BYTE PTR [rax],ah
  42b2ad:	and    BYTE PTR [rax],ah
  42b2af:	and    BYTE PTR [rcx+0x66],ch
  42b2b2:	and    BYTE PTR [rbx+0x20],bl
  42b2b5:	sub    eax,0x2422206e
  42b2ba:	jnp    0x42b2e1
  42b2bc:	xor    DWORD PTR [rbx+rsi*2],esp
  42b2bf:	pop    rdi
  42b2c0:	and    eax,0x7d732432
  42b2c5:	and    ah,BYTE PTR [rax]
  42b2c7:	pop    rbp
  42b2c8:	and    BYTE PTR [rsi],ah
  42b2ca:	and    BYTE PTR es:[rbx+rdi*2],ah
  42b2ce:	and    eax,0x5f732431
  42b2d3:	and    eax,0x5f732432
  42b2d8:	jae    0x42b33f
  42b2da:	je     0x42b359
  42b2dc:	and    BYTE PTR [rbx],bh
  42b2de:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42b2e2:	outs   dx,BYTE PTR ds:[rsi]
  42b2e3:	or     ah,BYTE PTR [rax]
  42b2e5:	and    BYTE PTR [rax],ah
  42b2e7:	and    BYTE PTR [rax],ah
  42b2e9:	and    BYTE PTR [rax],ah
  42b2eb:	and    BYTE PTR [rax],ah
  42b2ed:	and    BYTE PTR [rax],ah
  42b2ef:	and    BYTE PTR [rax],ah
  42b2f1:	and    BYTE PTR [rax],ah
  42b2f3:	and    BYTE PTR [rbp+0x63],ah
  42b2f6:	push   0x4527206f
  42b2fb:	jb     0x42b36f
  42b2fd:	outs   dx,DWORD PTR ds:[rsi]
  42b2fe:	jb     0x42b33a
  42b300:	and    BYTE PTR [rax],ah
  42b302:	fs jne 0x42b375
  42b305:	ins    BYTE PTR es:[rdi],dx
  42b306:	imul   esp,DWORD PTR [rbx+0x61],0x25206574
  42b30d:	xor    ah,BYTE PTR [rbx+rsi*2]
  42b310:	and    BYTE PTR [rdi+0x70],ch
  42b313:	je     0x42b37e
  42b315:	outs   dx,DWORD PTR ds:[rsi]
  42b316:	outs   dx,BYTE PTR ds:[rsi]
  42b317:	(bad)  
  42b318:	or     ah,BYTE PTR [rax]
  42b31a:	and    BYTE PTR [rax],ah
  42b31c:	and    BYTE PTR [rax],ah
  42b31e:	and    BYTE PTR [rax],ah
  42b320:	and    BYTE PTR [rax],ah
  42b322:	and    BYTE PTR [rax],ah
  42b324:	and    BYTE PTR [rax],ah
  42b326:	and    BYTE PTR [rax],ah
  42b328:	and    BYTE PTR [rbp+0x63],ah
  42b32b:	push   0x2422206f
  42b330:	and    eax,0x5f732431
  42b335:	push   rbp
  42b336:	push   rbx
  42b337:	rex.B
  42b338:	rex.RXB
  42b339:	rex.RB pop r15
  42b33b:	push   rsp
  42b33c:	rex.RB pop r8
  42b33e:	push   rsp
  42b33f:	and    cl,BYTE PTR [rdx]
  42b341:	and    BYTE PTR [rax],ah
  42b343:	and    BYTE PTR [rax],ah
  42b345:	and    BYTE PTR [rax],ah
  42b347:	and    BYTE PTR [rax],ah
  42b349:	and    BYTE PTR [rax],ah
  42b34b:	and    BYTE PTR [rax],ah
  42b34d:	and    BYTE PTR [rax],ah
  42b34f:	and    BYTE PTR [rax],ah
  42b351:	gs js  0x42b3bd
  42b354:	je     0x42b376
  42b356:	xor    DWORD PTR [rdx],ecx
  42b358:	and    BYTE PTR [rax],ah
  42b35a:	and    BYTE PTR [rax],ah
  42b35c:	and    BYTE PTR [rax],ah
  42b35e:	and    BYTE PTR [rax],ah
  42b360:	and    BYTE PTR [rax],ah
  42b362:	and    BYTE PTR [rax],ah
  42b364:	imul   sp,WORD PTR [rax],0x263e
  42b369:	xor    cl,BYTE PTR [rdx]
  42b36b:	and    BYTE PTR [rax],ah
  42b36d:	and    BYTE PTR [rax],ah
  42b36f:	and    BYTE PTR [rax],ah
  42b371:	and    BYTE PTR [rax],ah
  42b373:	and    BYTE PTR [rax],ah
  42b375:	and    BYTE PTR [rax],ah
  42b377:	and    eax,0x5f732431
  42b37c:	and    eax,0x5f732432
  42b381:	jae    0x42b3e8
  42b383:	je     0x42b3c2
  42b385:	je     0x42b3f9
  42b387:	jne    0x42b3ee
  42b389:	or     ah,BYTE PTR [rax]
  42b38b:	and    BYTE PTR [rax],ah
  42b38d:	and    BYTE PTR [rax],ah
  42b38f:	and    BYTE PTR [rax],ah
  42b391:	and    BYTE PTR [rax],ah
  42b393:	and    BYTE PTR [rax],ah
  42b395:	and    BYTE PTR [rdi+0x50],cl
  42b398:	push   rsp
  42b399:	pop    rdi
  42b39a:	rex.WRX
  42b39b:	rex.B
  42b39c:	rex.WRB
  42b39d:	rex.RB cmp eax,0x24322527
  42b3a3:	jae    0x42b3cc
  42b3a5:	or     al,BYTE PTR [rax]
  42b3a7:	or     ah,BYTE PTR [rip+0x5f732431]        # 0x5fb5d7de
  42b3ad:	and    eax,0x3d732432
  42b3b2:	and    al,0x7b
  42b3b4:	and    eax,0x5f732431
  42b3b9:	and    eax,0x2d732432
  42b3be:	(bad)  
  42b3bf:	and    eax,0x27732433
  42b3c4:	jge    0x42b3d0
  42b3c6:	and    eax,0x5f732431
  42b3cb:	and    eax,0x5f732432
  42b3d0:	jae    0x42b437
  42b3d2:	je     0x42b411
  42b3d4:	data16 (bad) 
  42b3d6:	ins    BYTE PTR es:[rdi],dx
  42b3d7:	jae    0x42b43e
  42b3d9:	or     ah,BYTE PTR [rbp+0x78]
  42b3dc:	jo     0x42b44d
  42b3de:	jb     0x42b454
  42b3e0:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d817
  42b3e6:	and    eax,0xa732432
  42b3eb:	add    BYTE PTR [rdx],cl
  42b3ed:	and    eax,0x5f732431
  42b3f2:	and    eax,0x3d732432
  42b3f7:	and    al,0x7b
  42b3f9:	and    eax,0x5f732431
  42b3fe:	and    eax,0x7d732432
  42b403:	or     ah,BYTE PTR [rip+0x5f732431]        # 0x5fb5d83a
  42b409:	and    eax,0x5f732432
  42b40e:	jae    0x42b475
  42b410:	je     0x42b44f
  42b412:	data16 (bad) 
  42b414:	ins    BYTE PTR es:[rdi],dx
  42b415:	jae    0x42b47c
  42b417:	or     ah,BYTE PTR [rbp+0x78]
  42b41a:	jo     0x42b48b
  42b41c:	jb     0x42b492
  42b41e:	and    BYTE PTR [rip+0x5f732431],ah        # 0x5fb5d855
  42b424:	and    eax,0xa732432
  42b429:	add    BYTE PTR [rbx],ah
  42b42b:	and    BYTE PTR [rbx],ah
  42b42d:	and    BYTE PTR [rbx],ah
  42b42f:	and    BYTE PTR [rbx],ah
  42b431:	and    BYTE PTR [rbx],ah
  42b433:	and    BYTE PTR [rbx],ah
  42b435:	and    BYTE PTR [rbx],ah
  42b437:	and    BYTE PTR [rbx],ah
  42b439:	and    BYTE PTR [rbx],ah
  42b43b:	and    BYTE PTR [rbx],ah
  42b43d:	and    BYTE PTR [rip+0x6f64202d],ch        # 0x6fa6d470
  42b443:	and    BYTE PTR [rsi+0x6f],ch
  42b446:	je     0x42b468
  42b448:	ins    DWORD PTR es:[rdi],dx
  42b449:	outs   dx,DWORD PTR ds:[rsi]
  42b44a:	imul   esp,DWORD PTR fs:[rsi+0x79],0x69687420
  42b452:	jae    0x42b474
  42b454:	ins    DWORD PTR es:[rdi],dx
  42b455:	(bad)  
  42b456:	jb     0x42b4c3
  42b458:	gs jb  0x42b47b
  42b45b:	sub    eax,0xa230a2d
  42b460:	and    esp,DWORD PTR [rax]
  42b462:	and    BYTE PTR [rdi+rcx*2+0x20],al
  42b466:	rex.WRX
  42b467:	rex.WRXB push r12
  42b469:	and    BYTE PTR [rbp+0x44],al
  42b46c:	rex.WB push r12
  42b46e:	and    BYTE PTR [rax+rcx*2+0x49],dl
  42b472:	push   rbx
  42b473:	and    BYTE PTR [rbx+0x45],dl
  42b476:	rex.XB push r12
  42b478:	rex.WB
  42b479:	rex.WRXB
  42b47a:	rex.WRX or r8b,BYTE PTR [rax]
  42b47d:	and    BYTE PTR [rax],ah
  42b47f:	and    BYTE PTR [rax],ah
  42b481:	and    BYTE PTR [rax],ah
  42b483:	and    BYTE PTR [rax],ah
  42b485:	sub    ah,BYTE PTR [rax]
  42b487:	sub    DWORD PTR [rdx],ecx
  42b489:	and    BYTE PTR [rax],ah
  42b48b:	and    BYTE PTR [rax],ah
  42b48d:	and    BYTE PTR [rax],ah
  42b48f:	and    BYTE PTR [rax],ah
  42b491:	and    BYTE PTR [rax],ah
  42b493:	and    BYTE PTR [rax],ah
  42b495:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  42b499:	and    BYTE PTR [rbp+0x6e],dl
  42b49c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42b4a0:	outs   dx,BYTE PTR ds:[rsi]
  42b4a1:	and    BYTE PTR [rip+0x22203a73],ah        # 0x2262ef1a
  42b4a7:	and    al,0x7b
  42b4a9:	rex.WRXB push r8
  42b4ab:	push   rsp
  42b4ac:	pop    rdi
  42b4ad:	rex.XB
  42b4ae:	rex.WRXB
  42b4af:	rex.R
  42b4b0:	rex.RB jge 0x42b4d5
  42b4b3:	and    BYTE PTR [rsi],bh
  42b4b5:	xor    cl,BYTE PTR es:[rdx]
  42b4b8:	and    BYTE PTR [rax],ah
  42b4ba:	and    BYTE PTR [rax],ah
  42b4bc:	and    BYTE PTR [rax],ah
  42b4be:	and    BYTE PTR [rax],ah
  42b4c0:	and    BYTE PTR [rax],ah
  42b4c2:	and    BYTE PTR [rax],ah
  42b4c4:	movsxd ebp,DWORD PTR gs:[rax+0x6f]
  42b4c8:	and    BYTE PTR [rdx],ah
  42b4ca:	and    al,0x25
  42b4cc:	jae    0x42b52d
  42b4ce:	push   rbp
  42b4cf:	push   rbx
  42b4d0:	rex.B
  42b4d1:	rex.RXB
  42b4d2:	rex.RB pop r15
  42b4d4:	push   rsp
  42b4d5:	rex.RB pop r8
  42b4d7:	push   rsp
  42b4d8:	and    ah,BYTE PTR [rax]
  42b4da:	ds xor cl,BYTE PTR es:[rdx]
  42b4de:	and    BYTE PTR [rax],ah
  42b4e0:	and    BYTE PTR [rax],ah
  42b4e2:	and    BYTE PTR [rax],ah
  42b4e4:	and    BYTE PTR [rax],ah
  42b4e6:	and    BYTE PTR [rax],ah
  42b4e8:	and    BYTE PTR [rax],ah
  42b4ea:	gs js  0x42b556
  42b4ed:	je     0x42b50f
  42b4ef:	xor    DWORD PTR [rdx],ecx
  42b4f1:	and    BYTE PTR [rax],ah
  42b4f3:	and    BYTE PTR [rax],ah
  42b4f5:	and    BYTE PTR [rax],ah
  42b4f7:	and    BYTE PTR [rax],ah
  42b4f9:	and    BYTE PTR [rax],ah
  42b4fb:	and    BYTE PTR [rax],ah
  42b4fd:	cmp    edi,DWORD PTR [rbx]
  42b4ff:	or     ah,BYTE PTR [rax]
  42b501:	and    BYTE PTR [rax],ah
  42b503:	and    BYTE PTR [rax],ah
  42b505:	and    BYTE PTR [rax],ah
  42b507:	and    BYTE PTR [rbp+0x73],ah
  42b50a:	(bad)  
  42b50b:	movsxd ecx,DWORD PTR [rdx]
	...
  42b53d:	add    BYTE PTR [rax],al
  42b53f:	add    BYTE PTR [rcx+0x6c],ah
  42b542:	ins    BYTE PTR es:[rdi],dx
  42b543:	outs   dx,DWORD PTR ds:[rsi]
  42b544:	movsxd esp,DWORD PTR [rcx+0x74]
  42b547:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  42b54e:	and    eax,0x79622064
  42b553:	je     0x42b5ba
  42b555:	jae    0x42b577
  42b557:	data16 (bad) 
  42b559:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7541000a
  42b561:	je     0x42b5d2
  42b563:	rex.WRXB jo 0x42b5da
  42b566:	jae    0x42b588
  42b568:	data16 jne 0x42b5d9
  42b56b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42b56f:	outs   dx,BYTE PTR ds:[rsi]
  42b570:	and    BYTE PTR [rbx+0x61],ah
  42b573:	ins    BYTE PTR es:[rdi],dx
  42b574:	ins    BYTE PTR es:[rdi],dx
  42b575:	gs and BYTE PTR fs:[rdi+0x69],dh
  42b57a:	je     0x42b5e4
  42b57c:	outs   dx,DWORD PTR ds:[rsi]
  42b57d:	jne    0x42b5f3
  42b57f:	and    BYTE PTR [rdi+0x70],ch
  42b582:	je     0x42b5ed
  42b584:	outs   dx,DWORD PTR ds:[rsi]
  42b585:	outs   dx,BYTE PTR ds:[rsi]
  42b586:	and    BYTE PTR [rbp+riz*2+0x73],ah
  42b58a:	movsxd esi,DWORD PTR [rdx+0x69]
  42b58d:	jo     0x42b603
  42b58f:	outs   dx,DWORD PTR ds:[rsi]
  42b590:	jb     0x42b59c
  42b592:	add    BYTE PTR [rcx],cl
  42b594:	push   rsp
  42b595:	push   0x65207369
  42b59a:	js     0x42b5ff
  42b59c:	gs gs fs jae 0x42b5c1
  42b5a1:	je     0x42b60b
  42b5a3:	and    BYTE PTR gs:[rbx+0x6f],ah
  42b5a7:	ins    DWORD PTR es:[rdi],dx
  42b5a8:	jo     0x42b613
  42b5aa:	ins    BYTE PTR es:[rdi],dx
  42b5ab:	gs and BYTE PTR fs:[rcx+rbp*2+0x62],ch
  42b5b1:	jb     0x42b614
  42b5b3:	jb     0x42b62e
  42b5b5:	and    BYTE PTR [rsi+0x65],dh
  42b5b8:	jb     0x42b62d
  42b5ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x20203a
  42b5c1:	rex.B jne 0x42b638
  42b5c4:	outs   dx,DWORD PTR ds:[rsi]
  42b5c5:	ins    DWORD PTR es:[rdi],dx
  42b5c6:	(bad)  
  42b5c7:	je     0x42b62e
  42b5c9:	and    BYTE PTR fs:[rdi+0x70],cl
  42b5cd:	je     0x42b638
  42b5cf:	outs   dx,DWORD PTR ds:[rsi]
  42b5d0:	outs   dx,BYTE PTR ds:[rsi]
  42b5d1:	jae    0x42b5f3
  42b5d3:	push   rax
  42b5d4:	jb     0x42b645
  42b5d6:	movsxd esp,DWORD PTR [rbp+0x73]
  42b5d9:	jae    0x42b644
  42b5db:	outs   dx,BYTE PTR ds:[rsi]
  42b5dc:	and    BYTE PTR [ebp+0x72],al
  42b5e0:	jb     0x42b651
  42b5e2:	jb     0x42b605
  42b5e4:	or     cl,BYTE PTR [rcx]
  42b5e6:	and    eax,0x61632073
  42b5eb:	ins    BYTE PTR es:[rdi],dx
  42b5ec:	ins    BYTE PTR es:[rdi],dx
  42b5ed:	gs and BYTE PTR fs:[rcx+0x75],al
  42b5f2:	je     0x42b663
  42b5f4:	rex.WRXB jo 0x42b66b
  42b5f7:	jae    0x42b619
  42b5f9:	data16 jne 0x42b66a
  42b5fc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42b600:	outs   dx,BYTE PTR ds:[rsi]
  42b601:	and    BYTE PTR [rdi+0x69],dh
  42b604:	je     0x42b66e
  42b606:	and    BYTE PTR [rbx+0x74],dh
  42b609:	jb     0x42b680
  42b60b:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  42b60f:	and    BYTE PTR gs:[rsi+0x65],dh
  42b613:	jb     0x42b688
  42b615:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a642520
  42b61c:	and    eax,0x64253a64
  42b621:	or     al,BYTE PTR cs:[rax]
  42b624:	jb     0x42b68b
  42b626:	(bad)  
  42b627:	ins    BYTE PTR es:[rdi],dx
  42b628:	ins    BYTE PTR es:[rdi],dx
  42b629:	outs   dx,DWORD PTR ds:[rsi]
  42b62a:	movsxd esp,DWORD PTR [rax]
  42b62c:	outs   dx,DWORD PTR ds:[rsi]
  42b62d:	data16 and BYTE PTR [rip+0x79622064],ah        # 0x79a4d698
  42b634:	je     0x42b69b
  42b636:	jae    0x42b658
  42b638:	(bad)  
  42b639:	je     0x42b65b
  42b63b:	xor    BYTE PTR [rax+0x25],bh
  42b63e:	jo     0x42b660
  42b640:	data16 (bad) 
  42b642:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x5409000a
  42b64a:	push   0x69207369
  42b64f:	jae    0x42b671
  42b651:	ins    BYTE PTR es:[rdi],dx
  42b652:	gs jae 0x42b6c8
  42b655:	and    BYTE PTR [rax+rbp*2+0x61],dh
  42b659:	outs   dx,BYTE PTR ds:[rsi]
  42b65a:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42b65e:	and    BYTE PTR [rbp+0x69],ch
  42b661:	outs   dx,BYTE PTR ds:[rsi]
  42b662:	imul   ebp,DWORD PTR [rbp+0x75],0x696c206d
  42b669:	(bad)  
  42b66b:	(bad)  
  42b66c:	jb     0x42b6e7
  42b66e:	and    BYTE PTR [rsi+0x65],dh
  42b671:	jb     0x42b6e6
  42b673:	imul   ebp,DWORD PTR [rdi+0x6e],0x20203a
  42b67a:	rex.B jne 0x42b6f1
  42b67d:	outs   dx,DWORD PTR ds:[rsi]
  42b67e:	ins    DWORD PTR es:[rdi],dx
  42b67f:	(bad)  
  42b680:	je     0x42b6e7
  42b682:	and    BYTE PTR fs:[rdi+0x70],cl
  42b686:	je     0x42b6f1
  42b688:	outs   dx,DWORD PTR ds:[rsi]
  42b689:	outs   dx,BYTE PTR ds:[rsi]
  42b68a:	jae    0x42b6ac
  42b68c:	jbe    0x42b6f3
  42b68e:	jb     0x42b703
  42b690:	imul   ebp,DWORD PTR [rdi+0x6e],0xa732520
  42b697:	or     DWORD PTR [rbx+0x6f],eax
  42b69a:	jo     0x42b715
  42b69c:	jb     0x42b707
  42b69e:	addr32 push 0x43282074
  42b6a4:	sub    DWORD PTR [rax],esp
  42b6a6:	xor    DWORD PTR [rcx],edi
  42b6a8:	cmp    DWORD PTR [rcx],edi
  42b6aa:	sub    eax,0x34313032
  42b6af:	and    BYTE PTR [rdx+0x79],ah
  42b6b2:	and    BYTE PTR [rdx+0x72],al
  42b6b5:	jne    0x42b71a
  42b6b7:	and    BYTE PTR gs:[rbx+0x6f],cl
  42b6bb:	jb     0x42b71f
  42b6bd:	and    BYTE PTR [rip+0x6c6c6120],ch        # 0x6caf17e3
  42b6c3:	and    BYTE PTR [rdx+0x69],dh
  42b6c6:	addr32 push 0x72207374
  42b6cc:	gs jae 0x42b734
  42b6cf:	jb     0x42b747
  42b6d1:	gs or  al,BYTE PTR fs:[rax]
  42b6d5:	sub    BYTE PTR [rcx+0x75],al
  42b6d8:	je     0x42b749
  42b6da:	rex.WRXB jo 0x42b751
  42b6dd:	jae    0x42b6ff
  42b6df:	(bad)  
  42b6e0:	jne    0x42b749
  42b6e2:	sub    DWORD PTR [rdx],edi
  42b6e4:	and    BYTE PTR [rax],ah
  42b6e6:	and    eax,0xa2e73
  42b6eb:	outs   dx,DWORD PTR ds:[rsi]
  42b6ec:	jo     0x42b762
  42b6ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x65736552
  42b6f5:	je     0x42b746
  42b6f7:	jo     0x42b76d
  42b6f9:	sub    BYTE PTR [rcx],ch
  42b6fb:	and    BYTE PTR [rbx+0x61],ah
  42b6fe:	ins    BYTE PTR es:[rdi],dx
  42b6ff:	ins    BYTE PTR es:[rdi],dx
  42b700:	gs fs sub al,0x20
  42b704:	(bad)  
  42b705:	jne    0x42b77b
  42b707:	and    BYTE PTR [rdx+0x65],dh
  42b70a:	jae    0x42b771
  42b70c:	je     0x42b73b
  42b70e:	outs   dx,DWORD PTR ds:[rsi]
  42b70f:	jo     0x42b785
  42b711:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f6e20
  42b718:	and    BYTE PTR [rbx+0x6f],ah
  42b71b:	outs   dx,BYTE PTR ds:[rsi]
  42b71c:	imul   sp,WORD PTR [rdi+0x75],0x6572
  42b722:	add    BYTE PTR fs:[rbx+0x6f],ah
  42b726:	jne    0x42b794
  42b728:	and    BYTE PTR fs:[rsi+0x6f],ch
  42b72c:	je     0x42b74e
  42b72e:	ins    BYTE PTR es:[rdi],dx
  42b72f:	outs   dx,DWORD PTR ds:[rsi]
  42b730:	movsxd esp,DWORD PTR [rcx+0x74]
  42b733:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  42b738:	and    BYTE PTR [rdi],ah
  42b73a:	push   0x27706c65
  42b73f:	and    BYTE PTR [rdi+0x70],ch
  42b742:	je     0x42b7ad
  42b744:	outs   dx,DWORD PTR ds:[rsi]
  42b745:	outs   dx,BYTE PTR ds:[rsi]
  42b746:	add    BYTE PTR [rdi+0x70],ch
  42b749:	je     0x42b7b4
  42b74b:	outs   dx,DWORD PTR ds:[rsi]
  42b74c:	outs   dx,BYTE PTR ds:[rsi]
  42b74d:	push   rax
  42b74e:	jb     0x42b7bf
  42b750:	movsxd esp,DWORD PTR [rbp+0x73]
  42b753:	jae    0x42b77d
  42b755:	sub    DWORD PTR [rax],esp
  42b757:	ja     0x42b7ba
  42b759:	jae    0x42b77b
  42b75b:	movsxd esp,DWORD PTR [rcx+0x6c]
  42b75e:	ins    BYTE PTR es:[rdi],dx
  42b75f:	gs and BYTE PTR fs:[rdi+0x69],dh
  42b764:	je     0x42b7ce
  42b766:	and    BYTE PTR [rcx+0x6e],ch
  42b769:	jbe    0x42b7cc
  42b76b:	ins    BYTE PTR es:[rdi],dx
  42b76c:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x617461
  42b774:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  42b77b:	and    BYTE PTR [rcx+0x72],ah
  42b77e:	addr32 jne 0x42b7ee
  42b781:	outs   dx,BYTE PTR gs:[rsi]
  42b783:	je     0x42b7a5
  42b785:	je     0x42b800
  42b787:	jo     0x42b7ee
  42b789:	and    BYTE PTR [rbx+0x70],dh
  42b78c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42b790:	imul   esp,DWORD PTR [rbp+0x64],0x66656400
  42b797:	(bad)  
  42b798:	jne    0x42b806
  42b79a:	je     0x42b801
  42b79c:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  42b7a1:	outs   dx,DWORD PTR ds:[rsi]
  42b7a2:	jo     0x42b818
  42b7a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x74697720
  42b7ab:	push   0x74706f20
  42b7b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x61206c61
  42b7b7:	jb     0x42b820
  42b7b9:	add    BYTE PTR [rcx+0x6c],ah
  42b7bc:	imul   esp,DWORD PTR [rcx+0x73],0x20676e69
  42b7c3:	outs   dx,DWORD PTR ds:[rsi]
  42b7c4:	jo     0x42b83a
  42b7c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  42b7cd:	outs   dx,DWORD PTR ds:[rsi]
  42b7ce:	jne    0x42b844
  42b7d0:	and    BYTE PTR [rdi+0x66],ch
  42b7d3:	and    BYTE PTR [rdx+0x61],dh
  42b7d6:	outs   dx,BYTE PTR ds:[rsi]
  42b7d7:	gs add BYTE PTR cs:[eip+0x72652073],ah        # 0x72a7d853
  42b7e0:	jb     0x42b851
  42b7e2:	jb     0x42b81e
  42b7e4:	and    BYTE PTR [rax],ah
  42b7e6:	je     0x42b850
  42b7e8:	and    BYTE PTR gs:[rbx+0x65],ch
  42b7ec:	jns    0x42b865
  42b7ee:	outs   dx,DWORD PTR ds:[rsi]
  42b7ef:	jb     0x42b855
  42b7f1:	and    BYTE PTR [rdi],ah
  42b7f3:	and    eax,0x69202773
  42b7f8:	jae    0x42b81a
  42b7fa:	(bad)  
  42b7fb:	ins    DWORD PTR es:[rdi],dx
  42b7fc:	(bad)  
  42b7fd:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  42b804:	outs   dx,WORD PTR ds:[rsi]
  42b806:	jb     0x42b828
  42b808:	and    eax,0x20000a73
  42b80d:	and    BYTE PTR [rax+rbp*2+0x65],dl
  42b811:	and    BYTE PTR [rsi+0x6f],ah
  42b814:	ins    BYTE PTR es:[rdi],dx
  42b815:	ins    BYTE PTR es:[rdi],dx
  42b816:	outs   dx,DWORD PTR ds:[rsi]
  42b817:	ja     0x42b882
  42b819:	outs   dx,BYTE PTR ds:[rsi]
  42b81a:	and    BYTE PTR [edi+0x70],ch
  42b81e:	je     0x42b889
  42b820:	outs   dx,DWORD PTR ds:[rsi]
  42b821:	outs   dx,BYTE PTR ds:[rsi]
  42b822:	jae    0x42b844
  42b824:	ins    DWORD PTR es:[rdi],dx
  42b825:	(bad)  
  42b826:	je     0x42b88b
  42b828:	push   0x25000a3a
  42b82d:	jae    0x42b869
  42b82f:	and    BYTE PTR [rcx+0x6d],ah
  42b832:	(bad)  
  42b833:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  42b83a:	outs   dx,DWORD PTR ds:[rsi]
  42b83b:	jo     0x42b8b1
  42b83d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d616e20
  42b844:	cmp    ah,BYTE PTR gs:[rax]
  42b847:	and    eax,0x6d282073
  42b84c:	(bad)  
  42b84d:	je     0x42b8b2
  42b84f:	push   0x25207365
  42b854:	and    BYTE PTR fs:[rdi+0x70],ch
  42b858:	je     0x42b8c3
  42b85a:	outs   dx,DWORD PTR ds:[rsi]
  42b85b:	outs   dx,BYTE PTR ds:[rsi]
  42b85c:	jae    0x42b887
  42b85e:	or     al,BYTE PTR [rax]
  42b860:	and    eax,0x43203a73
  42b865:	outs   dx,DWORD PTR ds:[rsi]
  42b866:	ins    DWORD PTR es:[rdi],dx
  42b867:	ins    DWORD PTR es:[rdi],dx
  42b868:	(bad)  
  42b869:	outs   dx,BYTE PTR ds:[rsi]
  42b86a:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42b86f:	and    BYTE PTR gs:[rcx+0x72],ah
  42b873:	addr32 jne 0x42b8e3
  42b876:	outs   dx,BYTE PTR gs:[rsi]
  42b878:	je     0x42b8ed
  42b87a:	and    BYTE PTR [rdx+0x65],dh
  42b87d:	jno    0x42b8f4
  42b87f:	imul   esi,DWORD PTR [rdx+0x65],0x25000a64
  42b886:	and    BYTE PTR fs:[rip+0x20732573],ah        # 0x20b5de00
  42b88d:	outs   dx,DWORD PTR ds:[rsi]
  42b88e:	jo     0x42b904
  42b890:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c612073
  42b897:	ins    BYTE PTR es:[rdi],dx
  42b898:	outs   dx,DWORD PTR ds:[rsi]
  42b899:	ja     0x42b900
  42b89b:	or     al,BYTE PTR fs:[rax]
  42b89e:	and    eax,0x72652073
  42b8a3:	jb     0x42b914
  42b8a5:	jb     0x42b8c7
  42b8a7:	and    eax,0x25282064
  42b8ac:	jae    0x42b8d7
  42b8ae:	and    BYTE PTR [rbx+0x61],ah
  42b8b1:	ins    BYTE PTR es:[rdi],dx
  42b8b2:	ins    BYTE PTR es:[rdi],dx
  42b8b3:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  42b8ba:	outs   dx,WORD PTR ds:[rsi]
  42b8bc:	jb     0x42b8de
  42b8be:	(bad)  
  42b8bf:	and    eax,0xa2773
  42b8c4:	imul   ebp,DWORD PTR [rsi+0x74],0x72707265
  42b8cb:	outs   dx,DWORD PTR ds:[rsi]
  42b8cc:	movsxd esp,DWORD PTR [rbp+0x73]
  42b8cf:	jae    0x42b8f1
  42b8d1:	jo     0x42b93c
  42b8d3:	jo     0x42b93a
  42b8d5:	add    BYTE PTR [rbp+0x72],ah
  42b8d8:	jb     0x42b949
  42b8da:	jb     0x42b916
  42b8dc:	and    BYTE PTR [rsi+0x65],dh
  42b8df:	jb     0x42b954
  42b8e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x74706f20
  42b8e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x67726120
  42b8ef:	jne    0x42b95e
  42b8f1:	outs   dx,BYTE PTR gs:[rsi]
  42b8f3:	je     0x42b915
  42b8f5:	(bad)  
  42b8f6:	and    eax,0x69202763
  42b8fb:	outs   dx,BYTE PTR ds:[rsi]
  42b8fc:	jbe    0x42b95f
  42b8fe:	ins    BYTE PTR es:[rdi],dx
  42b8ff:	imul   esp,DWORD PTR [rsi+rbp*1+0x20],0x65735520
  42b907:	cmp    cl,BYTE PTR [rdx]
  42b909:	or     DWORD PTR [rdi],esp
  42b90b:	jbe    0x42b934
  42b90d:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a82f33
  42b913:	jae    0x42b97e
  42b915:	outs   dx,DWORD PTR ds:[rsi]
  42b916:	outs   dx,BYTE PTR ds:[rsi]
  42b917:	and    BYTE PTR [rdi+0x6e],ch
  42b91a:	ins    BYTE PTR es:[rdi],dx
  42b91b:	jns    0x42b927
  42b91d:	or     DWORD PTR [rdi],esp
  42b91f:	movsxd esp,DWORD PTR [rdi]
  42b921:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a82f47
  42b927:	jae    0x42b992
  42b929:	outs   dx,DWORD PTR ds:[rsi]
  42b92a:	outs   dx,BYTE PTR ds:[rsi]
  42b92b:	and    BYTE PTR [rcx+0x6e],ah
  42b92e:	and    BYTE PTR fs:[rbx+0x6f],ah
  42b932:	jo     0x42b9ad
  42b934:	jb     0x42b99f
  42b936:	addr32 push 0x27090a74
  42b93c:	outs   dx,BYTE PTR ds:[rsi]
  42b93d:	(bad)  
  42b93e:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a82f64
  42b944:	jae    0x42b9af
  42b946:	outs   dx,DWORD PTR ds:[rsi]
  42b947:	outs   dx,BYTE PTR ds:[rsi]
  42b948:	and    BYTE PTR [rcx+0x6e],ah
  42b94b:	and    BYTE PTR fs:[rsi+0x75],ah
  42b94f:	ins    BYTE PTR es:[rdi],dx
  42b950:	ins    BYTE PTR es:[rdi],dx
  42b951:	and    BYTE PTR [rbx+0x6f],ah
  42b954:	jo     0x42b9cf
  42b956:	jb     0x42b9c1
  42b958:	addr32 push 0x6f6e2074
  42b95e:	je     0x42b9c9
  42b960:	movsxd esp,DWORD PTR [rbp+0xa]
  42b963:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7d9dc
  42b969:	jb     0x42b9da
  42b96b:	jb     0x42b9a7
  42b96d:	and    BYTE PTR [rax],ah
  42b96f:	je     0x42b9d9
  42b971:	and    BYTE PTR gs:[rdi],ah
  42b974:	and    eax,0x61202773
  42b979:	outs   dx,BYTE PTR ds:[rsi]
  42b97a:	and    BYTE PTR fs:[rdi],ah
  42b97d:	and    eax,0x6f202773
  42b982:	jo     0x42b9f8
  42b984:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f632073
  42b98b:	outs   dx,BYTE PTR ds:[rsi]
  42b98c:	data16 ins BYTE PTR es:[rdi],dx
  42b98e:	imul   esp,DWORD PTR [rbx+0x74],0x7325000a
  42b995:	cmp    ah,BYTE PTR [rax]
  42b997:	push   rsp
  42b998:	push   0x25272065
  42b99d:	jae    0x42b9c6
  42b99f:	and    BYTE PTR [rdi+0x70],ch
  42b9a2:	je     0x42ba0d
  42b9a4:	outs   dx,DWORD PTR ds:[rsi]
  42b9a5:	outs   dx,BYTE PTR ds:[rsi]
  42b9a6:	and    BYTE PTR [rax+0x61],ch
  42b9a9:	jae    0x42b9cb
  42b9ab:	(bad)  
  42b9ac:	gs outs dx,BYTE PTR gs:[rsi]
  42b9af:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  42b9b3:	(bad)  
  42b9b4:	(bad)  
  42b9b5:	ins    BYTE PTR es:[rdi],dx
  42b9b6:	gs fs add BYTE PTR cs:[rip+0x69757165],ch        # 0x69b82b24
  42b9bf:	jbe    0x42ba22
  42b9c1:	ins    BYTE PTR es:[rdi],dx
  42b9c2:	outs   dx,BYTE PTR gs:[rsi]
  42b9c4:	movsxd esp,DWORD PTR [rbp+0x0]
  42b9c7:	and    eax,0x69203a73
  42b9cc:	ins    BYTE PTR es:[rdi],dx
  42b9cd:	ins    BYTE PTR es:[rdi],dx
  42b9ce:	gs addr32 (bad) 
  42b9d1:	ins    BYTE PTR es:[rdi],dx
  42b9d2:	and    BYTE PTR [rdi+0x70],ch
  42b9d5:	je     0x42ba40
  42b9d7:	outs   dx,DWORD PTR ds:[rsi]
  42b9d8:	outs   dx,BYTE PTR ds:[rsi]
  42b9d9:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6367da0c
  42b9df:	or     al,BYTE PTR [rax]
  42b9e1:	and    eax,0x69203a73
  42b9e6:	ins    BYTE PTR es:[rdi],dx
  42b9e7:	ins    BYTE PTR es:[rdi],dx
  42b9e8:	gs addr32 (bad) 
  42b9eb:	ins    BYTE PTR es:[rdi],dx
  42b9ec:	and    BYTE PTR [rdi+0x70],ch
  42b9ef:	je     0x42ba5a
  42b9f1:	outs   dx,DWORD PTR ds:[rsi]
  42b9f2:	outs   dx,BYTE PTR ds:[rsi]
  42b9f3:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7367da26
  42b9f9:	or     al,BYTE PTR [rax]
  42b9fb:	and    eax,0x75203a73
  42ba00:	outs   dx,BYTE PTR ds:[rsi]
  42ba01:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42ba05:	outs   dx,BYTE PTR ds:[rsi]
  42ba06:	and    BYTE PTR [rsi+0x65],dh
  42ba09:	outs   dx,BYTE PTR ds:[rsi]
  42ba0a:	outs   dx,DWORD PTR fs:[rsi]
  42ba0c:	jb     0x42ba2e
  42ba0e:	gs js  0x42ba85
  42ba11:	outs   dx,BYTE PTR gs:[rsi]
  42ba13:	jae    0x42ba7e
  42ba15:	outs   dx,DWORD PTR ds:[rsi]
  42ba16:	outs   dx,BYTE PTR ds:[rsi]
  42ba17:	and    BYTE PTR [rdi+0x70],ch
  42ba1a:	je     0x42ba85
  42ba1c:	outs   dx,DWORD PTR ds:[rsi]
  42ba1d:	outs   dx,BYTE PTR ds:[rsi]
  42ba1e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7367da51
  42ba24:	or     al,BYTE PTR [rax]
  42ba26:	and    BYTE PTR [rax],ah
  42ba28:	outs   dx,DWORD PTR ds:[rsi]
  42ba29:	jb     0x42ba4b
  42ba2b:	(bad)  
  42ba2c:	outs   dx,BYTE PTR ds:[rsi]
  42ba2d:	and    BYTE PTR [rcx+0x6e],ch
  42ba30:	je     0x42ba97
  42ba32:	addr32 gs jb 0x42ba56
  42ba36:	data16 jb 0x42baa8
  42ba39:	ins    DWORD PTR es:[rdi],dx
  42ba3a:	and    BYTE PTR [rip+0x68742064],ah        # 0x68b6daa4
  42ba40:	jb     0x42bab1
  42ba42:	jne    0x42baab
  42ba44:	push   0xa642520
  42ba49:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7dac2
  42ba4f:	jb     0x42bac0
  42ba51:	jb     0x42ba8d
  42ba53:	and    BYTE PTR [rax],ah
  42ba55:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  42ba5c:	and    BYTE PTR [rdi+0x70],ch
  42ba5f:	je     0x42baca
  42ba61:	outs   dx,DWORD PTR ds:[rsi]
  42ba62:	outs   dx,BYTE PTR ds:[rsi]
  42ba63:	and    BYTE PTR [rbp+riz*2+0x73],ah
  42ba67:	movsxd esi,DWORD PTR [rdx+0x69]
  42ba6a:	jo     0x42bae0
  42ba6c:	outs   dx,DWORD PTR ds:[rsi]
  42ba6d:	jb     0x42ba8f
  42ba6f:	outs   dx,WORD PTR ds:[rsi]
  42ba71:	jb     0x42ba93
  42ba73:	and    eax,0x25000a73
  42ba78:	jae    0x42bab4
  42ba7a:	and    BYTE PTR [rcx+0x6e],ch
  42ba7d:	jbe    0x42bae0
  42ba7f:	ins    BYTE PTR es:[rdi],dx
  42ba80:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  42ba88:	outs   dx,BYTE PTR ds:[rsi]
  42ba89:	and    BYTE PTR [rsi+0x61],ch
  42ba8c:	ins    DWORD PTR es:[rdi],dx
  42ba8d:	cmp    ah,BYTE PTR gs:[rax]
  42ba90:	and    eax,0x25000a73
  42ba95:	jae    0x42bad1
  42ba97:	and    BYTE PTR [rax+rbp*2+0x65],dl
  42ba9b:	and    BYTE PTR [rdi],ah
  42ba9d:	and    eax,0x6f202773
  42baa2:	jo     0x42bb18
  42baa4:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  42baab:	jne    0x42bb16
  42baad:	jb     0x42bb14
  42baaf:	jae    0x42bad1
  42bab1:	(bad)  
  42bab2:	outs   dx,BYTE PTR ds:[rsi]
  42bab3:	and    BYTE PTR [rcx+0x72],ah
  42bab6:	addr32 jne 0x42bb26
  42bab9:	outs   dx,BYTE PTR gs:[rsi]
  42babb:	je     0x42baeb
  42babd:	or     al,BYTE PTR [rax]
  42babf:	sub    BYTE PTR [rcx+0x75],al
  42bac2:	je     0x42bb33
  42bac4:	rex.WRXB jo 0x42bb3b
  42bac7:	jae    0x42bae9
  42bac9:	(bad)  
  42baca:	jne    0x42bb33
  42bacc:	sub    DWORD PTR [rdx],edi
  42bace:	and    BYTE PTR [rax],ah
  42bad0:	rex.RB jno 0x42bb48
  42bad3:	imul   esi,DWORD PTR [rsi+0x61],0x636e656c
  42bada:	gs and BYTE PTR fs:[rdi+0x70],ch
  42badf:	je     0x42bb4a
  42bae1:	outs   dx,DWORD PTR ds:[rsi]
  42bae2:	outs   dx,BYTE PTR ds:[rsi]
  42bae3:	and    BYTE PTR [rdi],ah
  42bae5:	and    eax,0x77202773
  42baea:	(bad)  
  42baeb:	jae    0x42bb0d
  42baed:	gs jno 0x42bb65
  42baf0:	imul   esi,DWORD PTR [rsi+0x61],0x636e656c
  42baf7:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  42bafd:	(bad)  
  42bafe:	outs   dx,DWORD PTR ds:[rsi]
  42baff:	je     0x42bb69
  42bb01:	or     cl,BYTE PTR [rcx]
  42bb03:	(bad)  
  42bb04:	and    eax,0x61202773
  42bb09:	outs   dx,BYTE PTR ds:[rsi]
  42bb0a:	and    BYTE PTR fs:[rdi],ah
  42bb0d:	and    eax,0x2e2773
  42bb12:	and    eax,0x72652073
  42bb17:	jb     0x42bb88
  42bb19:	jb     0x42bb55
  42bb1b:	and    BYTE PTR [rax],ah
  42bb1d:	push   rsp
  42bb1e:	push   0x73252065
  42bb23:	and    BYTE PTR [rdi+0x70],ch
  42bb26:	je     0x42bb91
  42bb28:	outs   dx,DWORD PTR ds:[rsi]
  42bb29:	outs   dx,BYTE PTR ds:[rsi]
  42bb2a:	and    BYTE PTR [rcx+0x73],ch
  42bb2d:	and    BYTE PTR [rdx+0x65],dh
  42bb30:	jno    0x42bba7
  42bb32:	imul   esi,DWORD PTR [rdx+0x65],0x25000a64
  42bb39:	jae    0x42bb75
  42bb3b:	and    BYTE PTR [rax+rbp*2+0x65],dl
  42bb3f:	and    BYTE PTR [rdi],ah
  42bb41:	and    eax,0x6f202773
  42bb46:	jo     0x42bbbc
  42bb48:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e616320
  42bb4f:	outs   dx,BYTE PTR ds:[rsi]
  42bb50:	outs   dx,DWORD PTR ds:[rsi]
  42bb51:	je     0x42bb73
  42bb53:	push   0x20657661
  42bb58:	(bad)  
  42bb59:	outs   dx,BYTE PTR ds:[rsi]
  42bb5a:	and    BYTE PTR [rcx+0x72],ah
  42bb5d:	addr32 jne 0x42bbcd
  42bb60:	outs   dx,BYTE PTR gs:[rsi]
  42bb62:	je     0x42bb92
  42bb64:	or     al,BYTE PTR [rax]
  42bb66:	and    eax,0x43203a73
  42bb6b:	outs   dx,DWORD PTR ds:[rsi]
  42bb6c:	ins    DWORD PTR es:[rdi],dx
  42bb6d:	ins    DWORD PTR es:[rdi],dx
  42bb6e:	(bad)  
  42bb6f:	outs   dx,BYTE PTR ds:[rsi]
  42bb70:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42bb75:	and    BYTE PTR gs:[rcx+0x72],ah
  42bb79:	addr32 jne 0x42bbe9
  42bb7c:	outs   dx,BYTE PTR gs:[rsi]
  42bb7e:	je     0x42bbf3
  42bb80:	and    BYTE PTR [rcx+0x72],ah
  42bb83:	and    BYTE PTR gs:[rsi+0x6f],ch
  42bb87:	je     0x42bba9
  42bb89:	(bad)  
  42bb8a:	ins    BYTE PTR es:[rdi],dx
  42bb8b:	ins    BYTE PTR es:[rdi],dx
  42bb8c:	outs   dx,DWORD PTR ds:[rsi]
  42bb8d:	ja     0x42bbf4
  42bb8f:	fs or  al,BYTE PTR cs:[rax]
  42bb93:	gs jb  0x42bc08
  42bb96:	outs   dx,DWORD PTR ds:[rsi]
  42bb97:	jb     0x42bbb9
  42bb99:	and    eax,0x25282064
  42bb9e:	jae    0x42bbc9
  42bba0:	and    BYTE PTR [rbx+0x72],ah
  42bba3:	gs (bad) 
  42bba5:	je     0x42bc10
  42bba7:	outs   dx,BYTE PTR ds:[rsi]
  42bba8:	and    BYTE PTR [eip+0x25000a73],ah        # 0x2542c622
  42bbaf:	jae    0x42bbd1
  42bbb1:	gs jb  0x42bc26
  42bbb4:	outs   dx,DWORD PTR ds:[rsi]
  42bbb5:	jb     0x42bbf1
  42bbb7:	and    BYTE PTR [rax],ah
  42bbb9:	(bad)  
  42bbba:	and    eax,0x64202773
  42bbbf:	outs   dx,DWORD PTR ds:[rsi]
  42bbc0:	gs jae 0x42bbe3
  42bbc3:	outs   dx,BYTE PTR ds:[rsi]
  42bbc4:	outs   dx,DWORD PTR ds:[rsi]
  42bbc5:	je     0x42bbe7
  42bbc7:	ins    DWORD PTR es:[rdi],dx
  42bbc8:	(bad)  
  42bbc9:	je     0x42bc2e
  42bbcb:	push   0x796e6120
  42bbd0:	and    BYTE PTR [rip+0x656b2073],ah        # 0x65addc49
  42bbd6:	jns    0x42bc4f
  42bbd8:	outs   dx,DWORD PTR ds:[rsi]
  42bbd9:	jb     0x42bc3f
  42bbdb:	jae    0x42bc0b
  42bbdd:	or     al,BYTE PTR [rax]
  42bbdf:	and    eax,0x72652073
  42bbe4:	jb     0x42bc55
  42bbe6:	jb     0x42bc22
  42bbe8:	and    BYTE PTR [rax+rbp*2+0x65],dl
  42bbec:	and    BYTE PTR [rdi],ah
  42bbee:	and    eax,0x6f202773
  42bbf3:	jo     0x42bc69
  42bbf5:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  42bbfc:	jne    0x42bc67
  42bbfe:	jb     0x42bc65
  42bc00:	jae    0x42bc22
  42bc02:	(bad)  
  42bc03:	outs   dx,BYTE PTR ds:[rsi]
  42bc04:	and    BYTE PTR [rcx+0x72],ah
  42bc07:	addr32 jne 0x42bc77
  42bc0a:	outs   dx,BYTE PTR gs:[rsi]
  42bc0c:	je     0x42bc3c
  42bc0e:	or     al,BYTE PTR [rax]
  42bc10:	gs jb  0x42bc85
  42bc13:	outs   dx,DWORD PTR ds:[rsi]
  42bc14:	jb     0x42bc36
  42bc16:	and    eax,0x25282064
  42bc1b:	jae    0x42bc46
  42bc1d:	and    BYTE PTR [rbx+0x74],dh
  42bc20:	(bad)  
  42bc21:	je     0x42bc50
  42bc23:	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
  42bc2a:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7dca3
  42bc30:	jb     0x42bca1
  42bc32:	jb     0x42bc6e
  42bc34:	and    BYTE PTR [rsi+0x6f],ch
  42bc37:	and    BYTE PTR [rbx+0x61],dh
  42bc3a:	jbe    0x42bca1
  42bc3c:	and    BYTE PTR fs:[rdi+0x70],ch
  42bc40:	je     0x42bcab
  42bc42:	outs   dx,DWORD PTR ds:[rsi]
  42bc43:	outs   dx,BYTE PTR ds:[rsi]
  42bc44:	and    BYTE PTR [rbx+0x74],dh
  42bc47:	(bad)  
  42bc48:	je     0x42bcaf
  42bc4a:	or     al,BYTE PTR [rax]
  42bc4c:	(bad)  
  42bc4d:	and    eax,0x69202773
  42bc52:	jae    0x42bc74
  42bc54:	outs   dx,BYTE PTR ds:[rsi]
  42bc55:	outs   dx,DWORD PTR ds:[rsi]
  42bc56:	je     0x42bc78
  42bc58:	(bad)  
  42bc59:	and    BYTE PTR [rbx+0x6f],ah
  42bc5c:	ins    DWORD PTR es:[rdi],dx
  42bc5d:	ins    DWORD PTR es:[rdi],dx
  42bc5e:	(bad)  
  42bc5f:	outs   dx,BYTE PTR ds:[rsi]
  42bc60:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  42bc65:	and    BYTE PTR gs:[rdi+0x70],ch
  42bc69:	je     0x42bcd4
  42bc6b:	outs   dx,DWORD PTR ds:[rsi]
  42bc6c:	outs   dx,BYTE PTR ds:[rsi]
  42bc6d:	or     al,BYTE PTR cs:[rax]
  42bc70:	and    eax,0x72652073
  42bc75:	jb     0x42bce6
  42bc77:	jb     0x42bcb3
  42bc79:	and    BYTE PTR [rax],ah
  42bc7b:	(bad)  
  42bc7c:	and    eax,0x69202773
  42bc81:	jae    0x42bca3
  42bc83:	outs   dx,BYTE PTR ds:[rsi]
  42bc84:	outs   dx,DWORD PTR ds:[rsi]
  42bc85:	je     0x42bca7
  42bc87:	(bad)  
  42bc88:	and    BYTE PTR [rdx+0x65],dh
  42bc8b:	movsxd ebp,DWORD PTR [rdi+0x67]
  42bc8e:	outs   dx,BYTE PTR ds:[rsi]
  42bc8f:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  42bc96:	fs (bad) 
  42bc98:	je     0x42bcff
  42bc9a:	(bad)  
  42bc9b:	je     0x42bd06
  42bc9d:	ins    DWORD PTR es:[rdi],dx
  42bc9e:	gs or  al,BYTE PTR cs:[rax]
  42bca2:	(bad)  
  42bca3:	and    eax,0x6e202773
  42bca8:	outs   dx,DWORD PTR ds:[rsi]
  42bca9:	je     0x42bccb
  42bcab:	fs imul bp,WORD PTR gs:[rsi+0x65],0xa64
  42bcb3:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7dd2c
  42bcb9:	jb     0x42bd2a
  42bcbb:	jb     0x42bcf7
  42bcbd:	and    BYTE PTR [rax],ah
  42bcbf:	(bad)  
  42bcc0:	and    eax,0x69202773
  42bcc5:	jae    0x42bce7
  42bcc7:	outs   dx,BYTE PTR ds:[rsi]
  42bcc8:	outs   dx,DWORD PTR ds:[rsi]
  42bcc9:	je     0x42bceb
  42bccb:	(bad)  
  42bccc:	and    BYTE PTR [rdx+0x65],dh
  42bccf:	movsxd ebp,DWORD PTR [rdi+0x67]
  42bcd2:	outs   dx,BYTE PTR ds:[rsi]
  42bcd3:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  42bcda:	je     0x42bd45
  42bcdc:	ins    DWORD PTR es:[rdi],dx
  42bcdd:	and    BYTE PTR gs:[rbp+rsi*2+0x72],ah
  42bce2:	(bad)  
  42bce3:	je     0x42bd4e
  42bce5:	outs   dx,DWORD PTR ds:[rsi]
  42bce6:	outs   dx,BYTE PTR ds:[rsi]
  42bce7:	or     al,BYTE PTR cs:[rax]
  42bcea:	and    eax,0x72652073
  42bcef:	jb     0x42bd60
  42bcf1:	jb     0x42bd2d
  42bcf3:	and    BYTE PTR [rax],ah
  42bcf5:	push   rsp
  42bcf6:	push   0x73252065
  42bcfb:	and    BYTE PTR [rdi+0x70],ch
  42bcfe:	je     0x42bd69
  42bd00:	outs   dx,DWORD PTR ds:[rsi]
  42bd01:	outs   dx,BYTE PTR ds:[rsi]
  42bd02:	and    BYTE PTR [rbp+0x75],ch
  42bd05:	jae    0x42bd7b
  42bd07:	and    BYTE PTR [rcx+0x70],ah
  42bd0a:	jo     0x42bd71
  42bd0c:	(bad)  
  42bd0d:	jb     0x42bd2f
  42bd0f:	and    eax,0x69742064
  42bd14:	ins    DWORD PTR es:[rdi],dx
  42bd15:	gs jae 0x42bd46
  42bd18:	or     al,BYTE PTR [rax]
  42bd1a:	and    eax,0x72652073
  42bd1f:	jb     0x42bd90
  42bd21:	jb     0x42bd5d
  42bd23:	and    BYTE PTR [rax],ah
  42bd25:	(bad)  
  42bd26:	and    eax,0x69202773
  42bd2b:	jae    0x42bd4d
  42bd2d:	outs   dx,BYTE PTR ds:[rsi]
  42bd2e:	outs   dx,DWORD PTR ds:[rsi]
  42bd2f:	je     0x42bd51
  42bd31:	(bad)  
  42bd32:	and    BYTE PTR [rdx+0x65],dh
  42bd35:	movsxd ebp,DWORD PTR [rdi+0x67]
  42bd38:	outs   dx,BYTE PTR ds:[rsi]
  42bd39:	imul   edi,DWORD PTR [rdx+0x61],0x20656c62
  42bd40:	outs   dx,BYTE PTR ds:[rsi]
  42bd41:	jne    0x42bdb0
  42bd43:	(bad)  
  42bd44:	gs jb  0x42bd75
  42bd47:	or     al,BYTE PTR [rax]
  42bd49:	and    eax,0x72652073
  42bd4e:	jb     0x42bdbf
  42bd50:	jb     0x42bd8c
  42bd52:	and    BYTE PTR [rax],ah
  42bd54:	and    eax,0x78652073
  42bd59:	movsxd esp,DWORD PTR [rbp+0x65]
  42bd5c:	fs jae 0x42bd7f
  42bd5f:	and    eax,0x656b2073
  42bd64:	jns    0x42bddd
  42bd66:	outs   dx,DWORD PTR ds:[rsi]
  42bd67:	jb     0x42bdcd
  42bd69:	and    BYTE PTR [rbx+0x6f],ah
  42bd6c:	jne    0x42bddc
  42bd6e:	je     0x42bd7a
  42bd70:	add    BYTE PTR [rdx+rsi*2+0x79],dl
  42bd74:	and    BYTE PTR [rdi],ah
  42bd76:	and    eax,0x73252073
  42bd7b:	(bad)  
  42bd7c:	and    BYTE PTR [rsi+0x6f],ah
  42bd7f:	jb     0x42bda1
  42bd81:	ins    DWORD PTR es:[rdi],dx
  42bd82:	outs   dx,DWORD PTR ds:[rsi]
  42bd83:	jb     0x42bdea
  42bd85:	and    BYTE PTR [rcx+0x6e],ch
  42bd88:	outs   dx,WORD PTR ds:[rsi]
  42bd8a:	jb     0x42bdf9
  42bd8c:	(bad)  
  42bd8d:	je     0x42bdf8
  42bd8f:	outs   dx,DWORD PTR ds:[rsi]
  42bd90:	outs   dx,BYTE PTR ds:[rsi]
  42bd91:	or     al,BYTE PTR cs:[rax]
  42bd94:	outs   dx,DWORD PTR ds:[rsi]
  42bd95:	outs   dx,BYTE PTR ds:[rsi]
  42bd96:	and    BYTE PTR gs:[rip+0x20732573],ah        # 0x20b5e310
  42bd9d:	outs   dx,DWORD PTR ds:[rsi]
  42bd9e:	jo     0x42be14
  42bda0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c6c6120
  42bda7:	outs   dx,DWORD PTR ds:[rsi]
  42bda8:	ja     0x42be0f
  42bdaa:	or     al,BYTE PTR fs:[rax]
  42bdad:	jae    0x42be23
  42bdaf:	(bad)  
  42bdb0:	outs   dx,BYTE PTR ds:[rsi]
  42bdb1:	fs (bad) 
  42bdb3:	jb     0x42be19
  42bdb5:	and    BYTE PTR [rdi+0x75],ch
  42bdb8:	je     0x42be2a
  42bdba:	jne    0x42be30
  42bdbc:	add    BYTE PTR [rbx+0x74],dh
  42bdbf:	(bad)  
  42bdc0:	outs   dx,BYTE PTR ds:[rsi]
  42bdc1:	fs (bad) 
  42bdc3:	jb     0x42be29
  42bdc5:	and    BYTE PTR [rbp+0x72],ah
  42bdc8:	jb     0x42be39
  42bdca:	jb     0x42bdcc
  42bdcc:	ja     0x42be40
  42bdce:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x65207325
  42bdd6:	jb     0x42be4a
  42bdd8:	outs   dx,DWORD PTR ds:[rsi]
  42bdd9:	jb     0x42be15
  42bddb:	and    BYTE PTR [rax],ah
  42bddd:	and    eax,0x706f2073
  42bde2:	je     0x42be4d
  42bde4:	outs   dx,DWORD PTR ds:[rsi]
  42bde5:	outs   dx,BYTE PTR ds:[rsi]
  42bde6:	and    BYTE PTR [rsi+0x61],dh
  42bde9:	ins    BYTE PTR es:[rdi],dx
  42bdea:	jne    0x42be51
  42bdec:	and    BYTE PTR [rip+0x6920646c],ah        # 0x6963225e
  42bdf2:	jae    0x42be14
  42bdf4:	outs   dx,DWORD PTR ds:[rsi]
  42bdf5:	jne    0x42be6b
  42bdf7:	and    BYTE PTR [rdi+0x66],ch
  42bdfa:	and    BYTE PTR [rdx+0x61],dh
  42bdfd:	outs   dx,BYTE PTR ds:[rsi]
  42bdfe:	gs or  al,BYTE PTR cs:[eax]
  42be03:	and    eax,0x72652073
  42be08:	jb     0x42be79
  42be0a:	jb     0x42be46
  42be0c:	and    BYTE PTR [rax],ah
  42be0e:	and    eax,0x706f2073
  42be13:	je     0x42be7e
  42be15:	outs   dx,DWORD PTR ds:[rsi]
  42be16:	outs   dx,BYTE PTR ds:[rsi]
  42be17:	and    BYTE PTR [rdx+0x65],dh
  42be1a:	jno    0x42be91
  42be1c:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  42be23:	and    BYTE PTR gs:[rip+0x706f2073],ah        # 0x70b1de9d
  42be2a:	je     0x42be95
  42be2c:	outs   dx,DWORD PTR ds:[rsi]
  42be2d:	outs   dx,BYTE PTR ds:[rsi]
  42be2e:	or     al,BYTE PTR [rax]
  42be30:	and    eax,0x61772073
  42be35:	jb     0x42bea5
  42be37:	imul   ebp,DWORD PTR [rsi+0x67],0x6320203a
  42be3e:	(bad)  
  42be3f:	outs   dx,BYTE PTR ds:[rsi]
  42be40:	outs   dx,BYTE PTR ds:[rsi]
  42be41:	outs   dx,DWORD PTR ds:[rsi]
  42be42:	je     0x42be64
  42be44:	jae    0x42bea7
  42be46:	jbe    0x42bead
  42be48:	and    BYTE PTR [rdi+0x70],ch
  42be4b:	je     0x42beb6
  42be4d:	outs   dx,DWORD PTR ds:[rsi]
  42be4e:	outs   dx,BYTE PTR ds:[rsi]
  42be4f:	jae    0x42be71
  42be51:	sub    eax,0x20732520
  42be56:	outs   dx,BYTE PTR ds:[rsi]
  42be57:	outs   dx,DWORD PTR ds:[rsi]
  42be58:	je     0x42be7a
  42be5a:	jb     0x42bec1
  42be5c:	addr32 jne 0x42becb
  42be5f:	(bad)  
  42be60:	jb     0x42be82
  42be62:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x900
  42be69:	or     DWORD PTR [rcx],ecx
  42be6b:	or     DWORD PTR [rip+0x206e6120],ebp        # 0x20b11f91
  42be71:	(bad)  
  42be72:	ins    BYTE PTR es:[rdi],dx
  42be73:	je     0x42beda
  42be75:	jb     0x42bee5
  42be77:	(bad)  
  42be78:	je     0x42bedf
  42be7a:	and    BYTE PTR [rsi+0x6f],ah
  42be7d:	jb     0x42be9f
  42be7f:	(bad)  
  42be80:	and    eax,0xa2773
  42be85:	push   rsi
  42be86:	gs jb  0x42befc
  42be89:	imul   ebp,DWORD PTR [rdi+0x6e],0x7375202c
  42be90:	(bad)  
  42be91:	and    BYTE PTR gs:[ecx+0x6e],ah
  42be96:	and    BYTE PTR fs:[rbx+0x6f],ah
  42be9a:	outs   dx,BYTE PTR ds:[rsi]
  42be9b:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42bea1:	je     0x42bf0c
  42bea3:	outs   dx,DWORD PTR ds:[rsi]
  42bea4:	outs   dx,BYTE PTR ds:[rsi]
  42bea5:	and    BYTE PTR [rdi+0x70],ch
  42bea8:	je     0x42bf13
  42beaa:	outs   dx,DWORD PTR ds:[rsi]
  42beab:	outs   dx,BYTE PTR ds:[rsi]
  42beac:	jae    0x42bee8
  42beae:	add    BYTE PTR [rcx],cl
  42beb0:	or     DWORD PTR [rcx],ecx
  42beb2:	or     DWORD PTR [rip+0x66656420],ebp        # 0x66a822d8
  42beb8:	(bad)  
  42beb9:	jne    0x42bf27
  42bebb:	je     0x42bedd
  42bebd:	outs   dx,DWORD PTR ds:[rsi]
  42bebe:	jo     0x42bf34
  42bec0:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6620
  42bec7:	and    BYTE PTR [rbp+0x6e],dh
  42beca:	outs   dx,BYTE PTR ds:[rsi]
  42becb:	(bad)  
  42becc:	ins    DWORD PTR es:[rdi],dx
  42becd:	gs and BYTE PTR fs:[rdi+0x70],ch
  42bed2:	je     0x42bf3d
  42bed4:	outs   dx,DWORD PTR ds:[rsi]
  42bed5:	outs   dx,BYTE PTR ds:[rsi]
  42bed6:	jae    0x42bee2
  42bed8:	add    BYTE PTR [rcx],cl
  42beda:	or     DWORD PTR [rcx],ecx
  42bedc:	or     DWORD PTR [rip+0x73696420],ebp        # 0x73ac2302
  42bee2:	(bad)  
  42bee3:	(bad)  
  42bee4:	ins    BYTE PTR es:[rdi],dx
  42bee5:	gs and BYTE PTR fs:[rcx+0x73],ah
  42beea:	and    BYTE PTR [rdi],ah
  42beec:	sub    eax,0x2773252d
  42bef1:	or     al,BYTE PTR [rax]
  42bef3:	and    BYTE PTR [rip+0x25202d2d],ch        # 0x2562ec26
  42bef9:	sub    eax,0x20733431
  42befe:	and    eax,0x54000a73
  42bf03:	push   0x6f207369
  42bf08:	jo     0x42bf7e
  42bf0a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73616820
  42bf11:	and    BYTE PTR [rdx+0x65],ah
  42bf14:	outs   dx,BYTE PTR gs:[rsi]
  42bf16:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  42bf1a:	(bad)  
  42bf1b:	(bad)  
  42bf1c:	ins    BYTE PTR es:[rdi],dx
  42bf1d:	gs add BYTE PTR fs:[rcx],cl
  42bf21:	or     DWORD PTR [rcx],ecx
  42bf23:	or     DWORD PTR [rip+0x616e6520],ebp        # 0x61b12449
  42bf29:	(bad)  
  42bf2a:	ins    BYTE PTR es:[rdi],dx
  42bf2b:	gs and BYTE PTR fs:[rdx+0x79],ah
  42bf30:	and    BYTE PTR [rbp+riz*2+0x66],ah
  42bf34:	(bad)  
  42bf35:	jne    0x42bfa3
  42bf37:	je     0x42bf43
  42bf39:	add    BYTE PTR [rip+0x72652073],ah        # 0x72a7dfb2
  42bf3f:	jb     0x42bfb0
  42bf41:	jb     0x42bf7d
  42bf43:	and    BYTE PTR [rax],ah
  42bf45:	outs   dx,DWORD PTR ds:[rsi]
  42bf46:	outs   dx,BYTE PTR ds:[rsi]
  42bf47:	ins    BYTE PTR es:[rdi],dx
  42bf48:	jns    0x42bf6a
  42bf4a:	add    BYTE PTR [rax],ah
  42bf4c:	sub    eax,0x61786520
  42bf51:	ins    DWORD PTR es:[rdi],dx
  42bf52:	imul   ebp,DWORD PTR [rsi+0x69],0x6520676e
  42bf59:	outs   dx,BYTE PTR ds:[rsi]
  42bf5a:	jbe    0x42bfc5
  42bf5c:	jb     0x42bfcd
  42bf5e:	outs   dx,BYTE PTR ds:[rsi]
  42bf5f:	ins    DWORD PTR es:[rdi],dx
  42bf60:	outs   dx,BYTE PTR gs:[rsi]
  42bf62:	je     0x42bf84
  42bf64:	jbe    0x42bfc7
  42bf66:	jb     0x42bfd1
  42bf68:	(bad)  
  42bf69:	(bad)  
  42bf6a:	ins    BYTE PTR es:[rdi],dx
  42bf6b:	gs jae 0x42bf8e
  42bf6e:	outs   dx,BYTE PTR ds:[rsi]
  42bf6f:	(bad)  
  42bf70:	ins    DWORD PTR es:[rdi],dx
  42bf71:	gs and BYTE PTR fs:[rip+0xa2a5f73],ah        # 0xa6d1eec
  42bf79:	add    BYTE PTR [rcx],cl
  42bf7b:	or     DWORD PTR [rcx],ecx
  42bf7d:	or     DWORD PTR [rip+0x6c696620],ebp        # 0x6cac25a3
  42bf83:	and    BYTE PTR gs:[rbp+0x75],ch
  42bf87:	jae    0x42bffd
  42bf89:	and    BYTE PTR [rsi+0x6f],ch
  42bf8c:	je     0x42bfae
  42bf8e:	jo     0x42c002
  42bf90:	gs sub eax,0x73697865
  42bf96:	je     0x42bfa2
  42bf98:	add    BYTE PTR [rcx],cl
  42bf9a:	or     DWORD PTR [rcx],ecx
  42bf9c:	or     DWORD PTR [rip+0x6c696620],ebp        # 0x6cac25c2
  42bfa2:	and    BYTE PTR gs:[rbp+0x75],ch
  42bfa6:	jae    0x42c01c
  42bfa8:	and    BYTE PTR [rax+0x72],dh
  42bfab:	gs sub eax,0x73697865
  42bfb1:	je     0x42bfbd
  42bfb3:	add    BYTE PTR [rdi+0x70],cl
  42bfb6:	je     0x42c021
  42bfb8:	outs   dx,DWORD PTR ds:[rsi]
  42bfb9:	outs   dx,BYTE PTR ds:[rsi]
  42bfba:	jae    0x42bfdc
  42bfbc:	(bad)  
  42bfbd:	jb     0x42c024
  42bfbf:	and    BYTE PTR [rbx+0x70],dh
  42bfc2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42bfc6:	imul   esp,DWORD PTR [rbp+0x64],0x20796220
  42bfcd:	outs   dx,DWORD PTR fs:[rsi]
  42bfcf:	jne    0x42c033
  42bfd1:	ins    BYTE PTR es:[rdi],dx
  42bfd2:	gs and BYTE PTR fs:[rax+0x79],ch
  42bfd7:	jo     0x42c041
  42bfd9:	outs   dx,BYTE PTR gs:[rsi]
  42bfdb:	jae    0x42bffd
  42bfdd:	(bad)  
  42bfde:	outs   dx,BYTE PTR ds:[rsi]
  42bfdf:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  42bfe4:	imul   esi,DWORD PTR [rdx+0x20],0x656d616e
  42bfeb:	and    BYTE PTR [rdi+0x72],ch
  42bfee:	and    BYTE PTR [rdx+0x79],ah
  42bff1:	and    BYTE PTR [rcx+0x20],ah
  42bff4:	jae    0x42c05f
  42bff6:	outs   dx,BYTE PTR ds:[rsi]
  42bff7:	ins    BYTE PTR es:[edi],dx
  42bff9:	or     ch,BYTE PTR gs:[rax+0x79]
  42bffd:	jo     0x42c067
  42bfff:	outs   dx,BYTE PTR gs:[rsi]
  42c001:	and    BYTE PTR [rcx+0x6e],ah
  42c004:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  42c009:	and    BYTE PTR [rsi+0x6c],ah
  42c00c:	(bad)  
  42c00d:	and    BYTE PTR [ebx+0x68],ah
  42c011:	(bad)  
  42c012:	jb     0x42c075
  42c014:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42c018:	or     al,BYTE PTR cs:[rax]
  42c01b:	or     bh,BYTE PTR [rip+0x3d203d20]        # 0x3d62fd41
  42c021:	and    BYTE PTR [rip+0x3d203d20],bh        # 0x3d62fd47
  42c027:	and    BYTE PTR [rip+0xa0a3d20],bh        # 0xa4cfd4d
  42c02d:	push   rsp
  42c02e:	push   0x69207369
  42c033:	outs   dx,BYTE PTR ds:[rsi]
  42c034:	movsxd esp,DWORD PTR [rcx+0x72]
  42c037:	outs   dx,BYTE PTR ds:[rsi]
  42c038:	(bad)  
  42c039:	je     0x42c0a4
  42c03b:	outs   dx,DWORD PTR ds:[rsi]
  42c03c:	outs   dx,BYTE PTR ds:[rsi]
  42c03d:	and    BYTE PTR [rdi+0x66],ch
  42c040:	and    BYTE PTR [rdi+0x65],ah
  42c043:	outs   dx,BYTE PTR ds:[rsi]
  42c044:	jae    0x42c0ae
  42c046:	gs ins BYTE PTR es:[rdi],dx
  42c048:	ins    BYTE PTR es:[rdi],dx
  42c049:	and    BYTE PTR [rdi+0x69],dh
  42c04c:	ins    BYTE PTR es:[rdi],dx
  42c04d:	ins    BYTE PTR es:[rdi],dx
  42c04e:	and    BYTE PTR [rax+0x72],dh
  42c051:	outs   dx,DWORD PTR ds:[rsi]
  42c052:	fs jne 0x42c0b8
  42c055:	or     ah,BYTE PTR gs:[rcx+0x20]
  42c059:	jae    0x42c0c3
  42c05b:	gs ins BYTE PTR es:[rdi],dx
  42c05d:	ins    BYTE PTR es:[rdi],dx
  42c05e:	and    BYTE PTR [rbx+0x63],dh
  42c061:	jb     0x42c0cc
  42c063:	jo     0x42c0d9
  42c065:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42c069:	jo     0x42c0cc
  42c06b:	jb     0x42c0e0
  42c06d:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  42c072:	and    BYTE PTR [rdi+0x70],ch
  42c075:	je     0x42c0e0
  42c077:	outs   dx,DWORD PTR ds:[rsi]
  42c078:	outs   dx,BYTE PTR ds:[rsi]
  42c079:	jae    0x42c09b
  42c07b:	outs   dx,WORD PTR ds:[rsi]
  42c07d:	jb     0x42c09f
  42c07f:	and    eax,0xa0a3a73
  42c084:	add    BYTE PTR [rax],ah
  42c086:	and    BYTE PTR [rdi+0x72],ch
  42c089:	and    BYTE PTR [rcx+0x6e],ah
  42c08c:	and    BYTE PTR [rcx+0x6e],ch
  42c08f:	je     0x42c0f6
  42c091:	addr32 gs jb 0x42c0b5
  42c095:	ins    DWORD PTR es:[rdi],dx
  42c096:	(bad)  
  42c097:	jae    0x42c104
  42c099:	and    BYTE PTR [rdi+0x69],dh
  42c09c:	je     0x42c106
  42c09e:	and    BYTE PTR [rcx+0x6e],ah
  42c0a1:	jns    0x42c0c3
  42c0a3:	outs   dx,DWORD PTR ds:[rsi]
  42c0a4:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  42c0a9:	and    BYTE PTR [rdi+rbp*2+0x77],ch
  42c0ad:	gs jb  0x42c0d0
  42c0b0:	and    eax,0x69622064
  42c0b5:	je     0x42c12a
  42c0b7:	and    BYTE PTR [rbx+0x65],dh
  42c0ba:	je     0x42c0c6
  42c0bc:	add    BYTE PTR [rcx],cl
  42c0be:	or     DWORD PTR [rcx],ecx
  42c0c0:	or     DWORD PTR [rip+0x20736920],ebp        # 0x20b629e6
  42c0c6:	(bad)  
  42c0c7:	and    BYTE PTR [rbx+0x65],dh
  42c0ca:	je     0x42c0ec
  42c0cc:	ins    DWORD PTR es:[rdi],dx
  42c0cd:	gs ins DWORD PTR es:[rdi],dx
  42c0cf:	(bad)  
  42c0d0:	gs jb  0x42c146
  42c0d3:	push   0x6f207069
  42c0d8:	jo     0x42c14e
  42c0da:	imul   ebp,DWORD PTR [rdi+0x6e],0x909000a
  42c0e1:	or     DWORD PTR [rcx],ecx
  42c0e3:	sub    eax,0x73756d20
  42c0e8:	je     0x42c10a
  42c0ea:	(bad)  
  42c0eb:	jo     0x42c15d
  42c0ed:	gs (bad) 
  42c0ef:	jb     0x42c111
  42c0f1:	(bad)  
  42c0f2:	gs je  0x42c16c
  42c0f5:	gs outs dx,BYTE PTR gs:[rsi]
  42c0f8:	and    BYTE PTR [rip+0x6e612064],ah        # 0x6ea3e162
  42c0fe:	and    BYTE PTR fs:[rip+0x69742064],ah        # 0x69b6e169
  42c105:	ins    DWORD PTR es:[rdi],dx
  42c106:	gs jae 0x42c113
  42c109:	add    BYTE PTR [rdi+0x70],cl
  42c10c:	je     0x42c177
  42c10e:	outs   dx,DWORD PTR ds:[rsi]
  42c10f:	outs   dx,BYTE PTR ds:[rsi]
  42c110:	jae    0x42c132
  42c112:	(bad)  
  42c113:	jb     0x42c17a
  42c115:	and    BYTE PTR [rbx+0x70],dh
  42c118:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42c11c:	imul   esp,DWORD PTR [rbp+0x64],0x20796220
  42c123:	jae    0x42c18e
  42c125:	outs   dx,BYTE PTR ds:[rsi]
  42c126:	ins    BYTE PTR es:[edi],dx
  42c128:	and    BYTE PTR gs:[rdi+0x72],ch
  42c12c:	and    BYTE PTR [rdi+rbp*2+0x75],ah
  42c130:	(bad)  
  42c131:	ins    BYTE PTR es:[rdi],dx
  42c132:	and    BYTE PTR gs:[rax+0x79],ch
  42c136:	jo     0x42c1a0
  42c138:	outs   dx,BYTE PTR gs:[rsi]
  42c13a:	jae    0x42c15c
  42c13c:	(bad)  
  42c13d:	outs   dx,BYTE PTR ds:[rsi]
  42c13e:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  42c143:	imul   esi,DWORD PTR [rdx+0x20],0x656d616e
  42c14a:	or     al,BYTE PTR cs:[rax]
  42c14d:	or     DWORD PTR [rcx],ecx
  42c14f:	or     DWORD PTR [rcx],ecx
  42c151:	sub    eax,0x79616d20
  42c156:	and    BYTE PTR [rcx+0x70],ah
  42c159:	jo     0x42c1c0
  42c15b:	(bad)  
  42c15c:	jb     0x42c17e
  42c15e:	ins    DWORD PTR es:[rdi],dx
  42c15f:	jne    0x42c1cd
  42c161:	je     0x42c1cc
  42c163:	jo     0x42c1d1
  42c165:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  42c16a:	gs jae 0x42c177
  42c16d:	add    BYTE PTR [rcx],cl
  42c16f:	or     DWORD PTR [rcx],ecx
  42c171:	or     DWORD PTR [rip+0x79616d20],ebp        # 0x79a42e97
  42c177:	and    BYTE PTR [rsi+0x6f],ch
  42c17a:	je     0x42c19c
  42c17c:	(bad)  
  42c17d:	and    BYTE PTR gs:[rax+0x72],dh
  42c181:	gs jae 0x42c1e9
  42c184:	je     0x42c190
  42c186:	add    BYTE PTR [rax],ah
  42c188:	and    BYTE PTR [rax],ah
  42c18a:	rex.B jb 0x42c1f4
  42c18d:	and    BYTE PTR [rdi+0x70],cl
  42c190:	je     0x42c1fb
  42c192:	outs   dx,DWORD PTR ds:[rsi]
  42c193:	outs   dx,BYTE PTR ds:[rsi]
  42c194:	sub    eax,0x656d614e
  42c199:	and    BYTE PTR [rax],ah
  42c19b:	and    BYTE PTR [rax],ah
  42c19d:	rex.R
  42c19e:	gs jae 0x42c204
  42c1a1:	jb     0x42c20c
  42c1a3:	jo     0x42c219
  42c1a5:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020000a
  42c1ac:	rex.RX ins BYTE PTR es:[rdi],dx
  42c1ae:	and    BYTE PTR [ecx+0x72],al
  42c1b2:	and    BYTE PTR [edi+0x70],cl
  42c1b6:	je     0x42c221
  42c1b8:	outs   dx,DWORD PTR ds:[rsi]
  42c1b9:	outs   dx,BYTE PTR ds:[rsi]
  42c1ba:	sub    eax,0x656d614e
  42c1bf:	and    BYTE PTR [rax],ah
  42c1c1:	and    BYTE PTR [rax],ah
  42c1c3:	rex.R
  42c1c4:	gs jae 0x42c22a
  42c1c7:	jb     0x42c232
  42c1c9:	jo     0x42c23f
  42c1cb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2520000a
  42c1d2:	xor    esi,DWORD PTR [rbx+0x20]
  42c1d5:	and    eax,0x68540073
  42c1da:	and    BYTE PTR gs:[rdi],ah
  42c1dd:	sub    eax,0x756e3c23
  42c1e2:	ins    DWORD PTR es:[rdi],dx
  42c1e3:	(bad)  
  42c1e4:	gs jb  0x42c225
  42c1e7:	(bad)  
  42c1e8:	and    BYTE PTR [rdi+0x70],ch
  42c1eb:	je     0x42c256
  42c1ed:	outs   dx,DWORD PTR ds:[rsi]
  42c1ee:	outs   dx,BYTE PTR ds:[rsi]
  42c1ef:	and    BYTE PTR [rbp+0x61],ch
  42c1f2:	jns    0x42c214
  42c1f4:	outs   dx,DWORD PTR ds:[rsi]
  42c1f5:	ins    DWORD PTR es:[rdi],dx
  42c1f6:	imul   esi,DWORD PTR [rax+riz*1+0x74],0x68206568
  42c1fe:	(bad)  
  42c1ff:	jae    0x42c269
  42c201:	and    BYTE PTR [rbx+0x68],ah
  42c204:	(bad)  
  42c205:	jb     0x42c211
  42c207:	add    BYTE PTR [rcx+0x6c],al
  42c20a:	ins    BYTE PTR es:[rdi],dx
  42c20b:	and    BYTE PTR [rcx+0x72],ah
  42c20e:	addr32 jne 0x42c27e
  42c211:	outs   dx,BYTE PTR gs:[rsi]
  42c213:	je     0x42c288
  42c215:	and    BYTE PTR [rcx+0x72],ah
  42c218:	and    BYTE PTR gs:[rsi+0x61],ch
  42c21c:	ins    DWORD PTR es:[rdi],dx
  42c21d:	gs and BYTE PTR fs:[rdi+0x70],ch
  42c222:	je     0x42c28d
  42c224:	outs   dx,DWORD PTR ds:[rsi]
  42c225:	outs   dx,BYTE PTR ds:[rsi]
  42c226:	jae    0x42c256
  42c228:	or     al,BYTE PTR [rax]
  42c22a:	and    BYTE PTR [rip+0x61657220],ch        # 0x61a83450
  42c230:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c696620
  42c238:	and    BYTE PTR gs:[rip+0x500a0073],ah        # 0x504cc2b2
  42c23f:	ins    BYTE PTR es:[rdi],dx
  42c240:	gs (bad) 
  42c242:	jae    0x42c2a9
  42c244:	and    BYTE PTR [rbx+0x65],dh
  42c247:	outs   dx,BYTE PTR ds:[rsi]
  42c248:	and    BYTE PTR fs:[rdx+0x75],ah
  42c24c:	and    BYTE PTR [edx+0x65],dh
  42c250:	jo     0x42c2c1
  42c252:	jb     0x42c2c8
  42c254:	jae    0x42c276
  42c256:	je     0x42c2c7
  42c258:	cmp    ah,BYTE PTR [rax]
  42c25a:	and    BYTE PTR ds:0xa3e73,bh
  42c261:	or     DWORD PTR [rcx],ecx
  42c263:	or     DWORD PTR [rcx],ecx
  42c265:	sub    eax,0x79616d20
  42c26a:	and    BYTE PTR [rsi+0x4f],cl
  42c26d:	push   rsp
  42c26e:	and    BYTE PTR [rcx+0x70],ah
  42c271:	jo     0x42c2d8
  42c273:	(bad)  
  42c274:	jb     0x42c296
  42c276:	sub    eax,0x65727020
  42c27b:	jae    0x42c2e2
  42c27d:	je     0x42c29f
  42c27f:	outs   dx,DWORD PTR ds:[rsi]
  42c280:	outs   dx,BYTE PTR ds:[rsi]
  42c281:	ins    BYTE PTR es:[rdi],dx
  42c282:	jns    0x42c28e
  42c284:	add    BYTE PTR [rdx],cl
  42c286:	push   rsp
  42c287:	push   0x6f662065
  42c28c:	ins    BYTE PTR es:[rdi],dx
  42c28d:	ins    BYTE PTR es:[rdi],dx
  42c28e:	outs   dx,DWORD PTR ds:[rsi]
  42c28f:	ja     0x42c2fa
  42c291:	outs   dx,BYTE PTR ds:[rsi]
  42c292:	and    BYTE PTR [edi+0x70],ch
  42c296:	je     0x42c301
  42c298:	outs   dx,DWORD PTR ds:[rsi]
  42c299:	outs   dx,BYTE PTR ds:[rsi]
  42c29a:	and    BYTE PTR [rax+0x72],dh
  42c29d:	gs jae 0x42c305
  42c2a0:	je     0x42c2c2
  42c2a2:	ins    DWORD PTR es:[rdi],dx
  42c2a3:	movsxd ebp,DWORD PTR gs:[rax+0x61]
  42c2a7:	outs   dx,BYTE PTR ds:[rsi]
  42c2a8:	imul   esi,DWORD PTR [rbx+0x6d],0x72612073
  42c2af:	and    BYTE PTR gs:[rbx+0x75],dh
  42c2b3:	jo     0x42c325
  42c2b5:	outs   dx,DWORD PTR ds:[rsi]
  42c2b6:	jb     0x42c32c
  42c2b8:	gs cmp cl,BYTE PTR fs:[rdx]
  42c2bc:	add    BYTE PTR [rax+0x72],dh
  42c2bf:	outs   dx,DWORD PTR ds:[rsi]
  42c2c0:	push   0x74696269
  42c2c5:	jae    0x42c2e7
  42c2c7:	je     0x42c331
  42c2c9:	gs jae 0x42c331
  42c2cc:	and    BYTE PTR [rdi+0x70],ch
  42c2cf:	je     0x42c33a
  42c2d1:	outs   dx,DWORD PTR ds:[rsi]
  42c2d2:	outs   dx,BYTE PTR ds:[rsi]
  42c2d3:	jae    0x42c30f
  42c2d5:	or     al,BYTE PTR [rax]
  42c2d7:	jo     0x42c34b
  42c2d9:	outs   dx,DWORD PTR ds:[rsi]
  42c2da:	push   0x74696269
  42c2df:	jae    0x42c301
  42c2e1:	je     0x42c34b
  42c2e3:	and    BYTE PTR gs:[rdi+0x70],ch
  42c2e7:	je     0x42c352
  42c2e9:	outs   dx,DWORD PTR ds:[rsi]
  42c2ea:	outs   dx,BYTE PTR ds:[rsi]
  42c2eb:	and    BYTE PTR [rdi],ah
  42c2ed:	and    eax,0xa2773
  42c2f2:	and    eax,0x646c2573
  42c2f7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42c2fb:	and    eax,0x2500646c
  42c300:	jae    0x42c369
  42c302:	jb     0x42c369
  42c304:	(bad)  
  42c305:	je     0x42c36c
  42c307:	jb     0x42c329
  42c309:	je     0x42c373
  42c30b:	(bad)  
  42c30c:	outs   dx,BYTE PTR ds:[rsi]
  42c30d:	and    BYTE PTR [rdi+0x72],ch
  42c310:	and    BYTE PTR [rbp+0x71],ah
  42c313:	jne    0x42c376
  42c315:	ins    BYTE PTR es:[rdi],dx
  42c316:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42c31a:	and    eax,0x2500646c
  42c31f:	jae    0x42c346
  42c321:	ins    BYTE PTR es:[rdi],dx
  42c322:	and    BYTE PTR fs:[rbp+0x78],ah
  42c326:	(bad)  
  42c327:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
  42c32b:	add    BYTE PTR [rip+0x20746973],ah        # 0x20b72ca4
  42c331:	ins    DWORD PTR es:[rdi],dx
  42c332:	jne    0x42c3a7
  42c334:	je     0x42c356
  42c336:	ins    BYTE PTR es:[rdi],dx
  42c337:	imul   esp,DWORD PTR [rbp+0x20],0x6f206e69
  42c33e:	outs   dx,BYTE PTR ds:[rsi]
  42c33f:	and    BYTE PTR gs:[rdi+0x66],ch
  42c343:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42c347:	and    BYTE PTR [rdx+0x61],dh
  42c34a:	outs   dx,BYTE PTR ds:[rsi]
  42c34b:	addr32 gs jae 0x42c389
  42c34f:	or     al,BYTE PTR [rax]
  42c351:	and    eax,0x20746973
  42c356:	ins    DWORD PTR es:[rdi],dx
  42c357:	jne    0x42c3cc
  42c359:	je     0x42c37b
  42c35b:	(bad)  
  42c35c:	and    BYTE PTR gs:[rcx+0x6e],ch
  42c360:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42c364:	and    BYTE PTR [rdx+0x61],dh
  42c367:	outs   dx,BYTE PTR ds:[rsi]
  42c368:	cmp    cl,BYTE PTR gs:[edx]
  42c36c:	add    BYTE PTR [rax+riz*1],ch
  42c36f:	outs   dx,DWORD PTR ds:[rsi]
  42c370:	jb     0x42c37c
  42c372:	add    BYTE PTR [rip+0x20736973],ah        # 0x20b62ceb
  42c378:	jae    0x42c3dd
  42c37a:	(bad)  
  42c37b:	ins    BYTE PTR es:[rdi],dx
  42c37c:	(bad)  
  42c37d:	(bad)  
  42c37e:	ins    BYTE PTR es:[rdi],dx
  42c37f:	and    BYTE PTR gs:[rdi+0x69],dh
  42c383:	je     0x42c3ed
  42c385:	and    BYTE PTR [rcx+0x20],ah
  42c388:	jae    0x42c3ff
  42c38a:	data16 imul di,WORD PTR [rax+0x3a],0x6b20
  42c391:	(bad)  
  42c392:	rex.WXB (bad) 
  42c394:	ins    DWORD PTR es:[rdi],dx
  42c395:	(bad)  
  42c396:	rex.WRB (bad) 
  42c398:	addr32 (bad) 
  42c39a:	rex.RXB (bad) 
  42c39c:	je     0x42c3cd
  42c39e:	push   rsp
  42c39f:	or     al,BYTE PTR [rax]
  42c3a1:	and    eax,0x73656c73
  42c3a6:	jae    0x42c3c8
  42c3a8:	je     0x42c412
  42c3aa:	(bad)  
  42c3ab:	outs   dx,BYTE PTR ds:[rsi]
  42c3ac:	and    BYTE PTR [rdi+0x72],ch
  42c3af:	and    BYTE PTR [rbp+0x71],ah
  42c3b2:	jne    0x42c415
  42c3b4:	ins    BYTE PTR es:[rdi],dx
  42c3b5:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42c3b9:	and    eax,0x4f00646c
  42c3be:	jo     0x42c425
  42c3c0:	jb     0x42c423
  42c3c2:	outs   dx,BYTE PTR ds:[rsi]
  42c3c3:	fs jae 0x42c3e6
  42c3c6:	(bad)  
  42c3c7:	outs   dx,BYTE PTR ds:[rsi]
  42c3c8:	and    BYTE PTR fs:[rdi+0x70],ch
  42c3cc:	je     0x42c437
  42c3ce:	outs   dx,DWORD PTR ds:[rsi]
  42c3cf:	outs   dx,BYTE PTR ds:[rsi]
  42c3d0:	jae    0x42c3f2
  42c3d2:	ins    DWORD PTR es:[rdi],dx
  42c3d3:	(bad)  
  42c3d4:	jns    0x42c3f6
  42c3d6:	(bad)  
  42c3d7:	and    BYTE PTR gs:[rcx+0x6e],ch
  42c3db:	je     0x42c442
  42c3dd:	jb     0x42c44c
  42c3df:	imul   edi,DWORD PTR [rax+0x65],0x20202e64
  42c3e6:	push   rsp
  42c3e7:	push   0x77207965
  42c3ec:	imul   ebp,DWORD PTR [rsp+rbp*2+0x20],0x72206562
  42c3f4:	outs   dx,DWORD PTR gs:[rsi]
  42c3f6:	jb     0x42c45c
  42c3f8:	gs jb  0x42c460
  42c3fb:	fs or  al,BYTE PTR cs:[rax]
  42c3ff:	jb     0x42c466
  42c401:	jno    0x42c478
  42c403:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  42c40a:	and    BYTE PTR gs:[rdi+0x70],ch
  42c40e:	je     0x42c479
  42c410:	outs   dx,DWORD PTR ds:[rsi]
  42c411:	outs   dx,BYTE PTR ds:[rsi]
  42c412:	and    BYTE PTR [rdi],ah
  42c414:	and    eax,0xa2773
  42c419:	jb     0x42c480
  42c41b:	jno    0x42c492
  42c41d:	imul   esi,DWORD PTR [rdx+0x65],0x68742073
  42c424:	gs jae 0x42c48c
  42c427:	and    BYTE PTR [rdi+0x70],ch
  42c42a:	je     0x42c495
  42c42c:	outs   dx,DWORD PTR ds:[rsi]
  42c42d:	outs   dx,BYTE PTR ds:[rsi]
  42c42e:	jae    0x42c46a
  42c430:	or     al,BYTE PTR [rax]
  42c432:	and    BYTE PTR [rax],ah
  42c434:	and    BYTE PTR [rcx+0x72],al
  42c437:	and    BYTE PTR [edi+0x70],cl
  42c43b:	je     0x42c4a6
  42c43d:	outs   dx,DWORD PTR ds:[rsi]
  42c43e:	outs   dx,BYTE PTR ds:[rsi]
  42c43f:	sub    eax,0x656d614e
  42c444:	and    BYTE PTR [rax],ah
  42c446:	and    BYTE PTR [rdx+0x65],dl
  42c449:	jno    0x42c48a
  42c44b:	and    BYTE PTR [rax],ah
  42c44d:	rex.R
  42c44e:	gs jae 0x42c4b4
  42c451:	jb     0x42c4bc
  42c453:	jo     0x42c4c9
  42c455:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020000a
  42c45c:	rex.RX ins BYTE PTR es:[rdi],dx
  42c45e:	and    BYTE PTR [ecx+0x72],al
  42c462:	and    BYTE PTR [edi+0x70],cl
  42c466:	je     0x42c4d1
  42c468:	outs   dx,DWORD PTR ds:[rsi]
  42c469:	outs   dx,BYTE PTR ds:[rsi]
  42c46a:	sub    eax,0x656d614e
  42c46f:	and    BYTE PTR [rax],ah
  42c471:	and    BYTE PTR [rdx+0x65],dl
  42c474:	jno    0x42c4b5
  42c476:	and    BYTE PTR [rax],ah
  42c478:	rex.R
  42c479:	gs jae 0x42c4df
  42c47c:	jb     0x42c4e7
  42c47e:	jo     0x42c4f4
  42c480:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f000a
  42c487:	and    BYTE PTR [rcx+0x6f],bh
  42c48a:	jne    0x42c4ac
  42c48c:	ins    DWORD PTR es:[rdi],dx
  42c48d:	(bad)  
  42c48e:	jns    0x42c4b0
  42c490:	jne    0x42c505
  42c492:	and    BYTE PTR gs:[rcx+0x20],ah
  42c496:	outs   dx,BYTE PTR ds:[rsi]
  42c497:	jne    0x42c506
  42c499:	gs jb  0x42c505
  42c49c:	movsxd esp,DWORD PTR [rax]
  42c49e:	jb     0x42c505
  42c4a0:	jo     0x42c514
  42c4a2:	gs jae 0x42c50a
  42c4a5:	outs   dx,BYTE PTR ds:[rsi]
  42c4a6:	je     0x42c509
  42c4a8:	je     0x42c513
  42c4aa:	outs   dx,DWORD PTR ds:[rsi]
  42c4ab:	outs   dx,BYTE PTR ds:[rsi]
  42c4ac:	and    BYTE PTR cs:[rax],ah
  42c4af:	push   rax
  42c4b0:	jb     0x42c517
  42c4b2:	movsxd esp,DWORD PTR [rbp+0x64]
  42c4b5:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
  42c4bc:	jae    0x42c523
  42c4be:	and    BYTE PTR [rdi+0x69],dh
  42c4c1:	je     0x42c52b
  42c4c3:	and    BYTE PTR [rcx+0x20],ah
  42c4c6:	(bad)  
  42c4c7:	and    DWORD PTR [rdi],esp
  42c4c9:	or     dh,BYTE PTR [rdi+0x69]
  42c4cc:	ins    BYTE PTR es:[rdi],dx
  42c4cd:	ins    BYTE PTR es:[rdi],dx
  42c4ce:	and    BYTE PTR [rbx+0x6c],ah
  42c4d1:	gs (bad) 
  42c4d3:	jb     0x42c4f5
  42c4d5:	je     0x42c53f
  42c4d7:	and    BYTE PTR gs:[rdx+0x69],ah
  42c4db:	je     0x42c550
  42c4dd:	sub    al,0x20
  42c4df:	jae    0x42c551
  42c4e1:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42c4e5:	jns    0x42c550
  42c4e7:	outs   dx,BYTE PTR ds:[rsi]
  42c4e8:	and    BYTE PTR [edi],ah
  42c4eb:	outs   dx,BYTE PTR ds:[rsi]
  42c4ec:	outs   dx,DWORD PTR ds:[rsi]
  42c4ed:	outs   dx,BYTE PTR ds:[rsi]
  42c4ee:	gs (bad) 
  42c4f0:	and    BYTE PTR [rdi+0x69],dh
  42c4f3:	ins    BYTE PTR es:[rdi],dx
  42c4f4:	ins    BYTE PTR es:[rdi],dx
  42c4f5:	and    BYTE PTR [rbx+0x6c],ah
  42c4f8:	gs (bad) 
  42c4fa:	jb     0x42c51c
  42c4fc:	(bad)  
  42c4fd:	ins    BYTE PTR es:[rdi],dx
  42c4fe:	ins    BYTE PTR es:[rdi],dx
  42c4ff:	and    BYTE PTR [rdx+0x69],ah
  42c502:	je     0x42c577
  42c504:	sub    al,0x20
  42c506:	(bad)  
  42c507:	outs   dx,BYTE PTR ds:[rsi]
  42c508:	and    BYTE PTR fs:[rdi],ah
  42c50b:	(bad)  
  42c50c:	ins    BYTE PTR es:[rdi],dx
  42c50d:	ins    BYTE PTR es:[rdi],dx
  42c50e:	(bad)  
  42c50f:	or     dh,BYTE PTR [rdi+0x69]
  42c512:	ins    BYTE PTR es:[rdi],dx
  42c513:	ins    BYTE PTR es:[rdi],dx
  42c514:	and    BYTE PTR [rbx+0x65],dh
  42c517:	je     0x42c539
  42c519:	je     0x42c583
  42c51b:	gs ins DWORD PTR es:[rdi],dx
  42c51d:	and    BYTE PTR [rcx+0x6c],ah
  42c520:	ins    BYTE PTR es:[rdi],dx
  42c521:	and    BYTE PTR cs:[rax],ah
  42c524:	rex.WRB jne 0x42c593
  42c527:	je     0x42c592
  42c529:	jo     0x42c597
  42c52b:	and    BYTE PTR gs:[rbp+0x6e],ah
  42c52f:	je     0x42c5a3
  42c531:	imul   esp,DWORD PTR [rbp+0x73],0x79616d20
  42c538:	and    BYTE PTR [rdx+0x65],ah
  42c53b:	and    BYTE PTR [rax+0x61],dh
  42c53e:	jae    0x42c5b3
  42c540:	gs and BYTE PTR fs:[rcx+0x73],ah
  42c545:	and    BYTE PTR [rcx+0x6e],ah
  42c548:	and    BYTE PTR [rdi+0x70],ch
  42c54b:	je     0x42c5b6
  42c54d:	outs   dx,DWORD PTR ds:[rsi]
  42c54e:	outs   dx,BYTE PTR ds:[rsi]
  42c54f:	or     ah,BYTE PTR [rcx+0x72]
  42c552:	addr32 jne 0x42c5c2
  42c555:	outs   dx,BYTE PTR gs:[rsi]
  42c557:	je     0x42c579
  42c559:	ins    BYTE PTR es:[rdi],dx
  42c55a:	imul   esi,DWORD PTR [rbx+0x74],0x9000a2e
  42c561:	or     DWORD PTR [rcx],ecx
  42c563:	or     DWORD PTR [rip+0x79616d20],ebp        # 0x79a43289
  42c569:	and    BYTE PTR [rcx+0x70],ah
  42c56c:	jo     0x42c5d3
  42c56e:	(bad)  
  42c56f:	jb     0x42c591
  42c571:	jne    0x42c5e3
  42c573:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42c577:	and    eax,0x69742064
  42c57c:	ins    DWORD PTR es:[rdi],dx
  42c57d:	gs jae 0x42c58a
  42c580:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42c584:	and    BYTE PTR [rsi+0x61],dh
  42c587:	ins    BYTE PTR es:[rdi],dx
  42c588:	imul   esp,DWORD PTR [rax+riz*1+0x22],0x20227325
  42c590:	outs   dx,DWORD PTR ds:[rsi]
  42c591:	jo     0x42c607
  42c593:	imul   ebp,DWORD PTR [rdi+0x6e],0x79656b20
  42c59a:	ja     0x42c60b
  42c59c:	jb     0x42c602
  42c59e:	jae    0x42c5c0
  42c5a0:	(bad)  
  42c5a1:	jb     0x42c608
  42c5a3:	cmp    cl,BYTE PTR [rdx]
  42c5a5:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42c5a9:	and    BYTE PTR [rsi+0x65],ch
  42c5ac:	js     0x42c622
  42c5ae:	and    BYTE PTR [rdi+0x70],ch
  42c5b1:	je     0x42c61c
  42c5b3:	outs   dx,DWORD PTR ds:[rsi]
  42c5b4:	outs   dx,BYTE PTR ds:[rsi]
  42c5b5:	and    BYTE PTR [rbx+0x75],dh
  42c5b8:	jo     0x42c62a
  42c5ba:	outs   dx,DWORD PTR ds:[rsi]
  42c5bb:	jb     0x42c631
  42c5bd:	jae    0x42c5df
  42c5bf:	jbe    0x42c626
  42c5c1:	outs   dx,BYTE PTR ds:[rsi]
  42c5c2:	outs   dx,DWORD PTR fs:[rsi]
  42c5c4:	jb     0x42c5e6
  42c5c6:	jae    0x42c63d
  42c5c8:	jo     0x42c63a
  42c5ca:	outs   dx,DWORD PTR ds:[rsi]
  42c5cb:	jb     0x42c641
  42c5cd:	gs and BYTE PTR fs:[rbp+0x78],ah
  42c5d2:	je     0x42c646
  42c5d4:	(bad)  
  42c5d5:	and    BYTE PTR [rdi+0x70],ch
  42c5d8:	je     0x42c643
  42c5da:	outs   dx,DWORD PTR ds:[rsi]
  42c5db:	outs   dx,BYTE PTR ds:[rsi]
  42c5dc:	jae    0x42c618
  42c5de:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42c5e2:	jae    0x42c649
  42c5e4:	and    BYTE PTR [rcx+0x64],ah
  42c5e7:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
  42c5f0:	outs   dx,DWORD PTR ds:[rsi]
  42c5f1:	jo     0x42c667
  42c5f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x72612073
  42c5fa:	cmp    al,BYTE PTR gs:[rax]
  42c5fd:	xor    al,0x31
  42c5ff:	cmp    dh,BYTE PTR [rcx]
  42c601:	cmp    dh,BYTE PTR [rcx]
  42c603:	or     al,BYTE PTR ss:[rax]
	...
  42c63e:	add    BYTE PTR [rax],al
  42c640:	add    DWORD PTR [rax],eax
  42c642:	add    BYTE PTR [rax],al
  42c644:	add    al,BYTE PTR [rax]
  42c646:	add    BYTE PTR [rax],al
  42c648:	add    al,0x0
  42c64a:	add    BYTE PTR [rax],al
  42c64c:	or     BYTE PTR [rax],al
  42c64e:	add    BYTE PTR [rax],al
  42c650:	adc    BYTE PTR [rax],al
  42c652:	add    BYTE PTR [rax],al
  42c654:	and    BYTE PTR [rax],al
  42c656:	add    BYTE PTR [rax],al
  42c658:	add    BYTE PTR [rax],al
  42c65b:	add    BYTE PTR [rax+0x0],al
  42c661:	add    DWORD PTR [rax],eax
  42c663:	add    BYTE PTR [rax],al
  42c665:	add    al,BYTE PTR [rax]
  42c667:	add    BYTE PTR [rax],al
  42c669:	add    al,0x0
  42c66b:	add    BYTE PTR [rax],al
  42c66d:	or     BYTE PTR [rax],al
  42c66f:	add    BYTE PTR [rcx],al
  42c671:	or     al,0x0
  42c673:	add    BYTE PTR [rax],al
  42c675:	or     al,0x0
  42c677:	add    BYTE PTR [rax],al
  42c679:	adc    BYTE PTR [rax],al
  42c67b:	add    BYTE PTR [rax],al
  42c67d:	and    BYTE PTR [rax],al
  42c67f:	add    BYTE PTR [rax],al
  42c681:	add    BYTE PTR [rax],al
  42c684:	add    BYTE PTR [rax+0x0],al
  42c68a:	add    DWORD PTR [rax],eax
  42c68c:	add    BYTE PTR [rax],al
  42c68e:	add    eax,DWORD PTR [rax]
  42c690:	add    BYTE PTR [rax],al
  42c692:	(bad)  
  42c693:	add    BYTE PTR [rax],al
  42c695:	add    BYTE PTR [rax],cl
  42c697:	add    BYTE PTR [rax],al
  42c699:	add    BYTE PTR [rax],dl
  42c69b:	add    BYTE PTR [rax],al
  42c69d:	add    BYTE PTR [rax],bl
  42c69f:	add    BYTE PTR [rax],al
  42c6a1:	add    BYTE PTR [rbx],bl
  42c6a3:	add    BYTE PTR [rax+0x0],al
  42c6a6:	sbb    BYTE PTR [rax],al
  42c6a8:	add    BYTE PTR [rbx],bl
  42c6ab:	add    BYTE PTR [rax+0x0],al
  42c6ae:	cmp    eax,DWORD PTR [rax]
  42c6b0:	(bad)  
  42c6b1:	add    BYTE PTR [rbx],bh
  42c6b3:	add    BYTE PTR [rax],al
  42c6b5:	add    BYTE PTR [rax+0x0],al
  42c6b8:	(bad)  
  42c6b9:	add    al,0x7b
  42c6bb:	add    BYTE PTR [rax],al
  42c6bd:	xor    BYTE PTR [rax],al
  42c6bf:	add    BYTE PTR [rax],al
  42c6c1:	add    BYTE PTR [rax+0xc0100],al
  42c6c7:	add    DWORD PTR [rcx+0xc],eax
  42c6cd:	add    BYTE PTR [rax],al
  42c6cf:	add    al,BYTE PTR [rax]
  42c6d1:	add    BYTE PTR [rbx],bl
  42c6d3:	add    al,0xc
  42c6d5:	add    BYTE PTR [rbx],bl
  42c6d7:	add    al,0x2
  42c6d9:	add    BYTE PTR [rax],al
  42c6db:	or     BYTE PTR [rax+rax*1],al
  42c6de:	sbb    eax,DWORD PTR [rbx+rax*1]
  42c6e1:	or     al,0x0
  42c6e3:	add    BYTE PTR [rbx],dl
  42c6e5:	or     al,0x0
  42c6e7:	add    BYTE PTR [rbx],dl
  42c6e9:	or     al,0x0
  42c6eb:	adc    BYTE PTR [rax],al
  42c6ed:	add    BYTE PTR [rbx],0x0
  42c6f0:	add    DWORD PTR [rcx],eax
  42c6f2:	add    BYTE PTR [rax],al
  42c6f4:	add    BYTE PTR [rsi],al
	...
  42c6fe:	add    BYTE PTR [rax],al
  42c700:	add    al,BYTE PTR [rax]
	...
  42c71e:	add    BYTE PTR [rax],al
  42c720:	add    BYTE PTR [rax],cl
  42c722:	add    BYTE PTR [rax],al
  42c724:	add    BYTE PTR [rax+rax*1],al
  42c727:	add    BYTE PTR [rcx],al
  42c729:	add    BYTE PTR [rax],al
  42c72b:	add    BYTE PTR [rax],al
  42c72d:	or     BYTE PTR [rax],al
  42c72f:	add    BYTE PTR [rax],al
  42c731:	or     BYTE PTR [rax],al
  42c733:	add    BYTE PTR [rax],al
  42c735:	or     BYTE PTR [rax],al
	...
  42c77f:	add    BYTE PTR [rax],al
  42c781:	add    al,0x0
  42c783:	add    BYTE PTR [rax],al
  42c785:	rex add BYTE PTR [rdx],0x0
  42c789:	push   rax
  42c78a:	add    BYTE PTR [rdx],al
  42c78c:	add    BYTE PTR [rax+0x0],al
  42c78f:	add    al,BYTE PTR [rax]
  42c791:	add    BYTE PTR [r10],0x8
  42c795:	rex add BYTE PTR [rdx],0x0
  42c799:	rex add BYTE PTR [rdx],0x0
  42c79d:	push   rax
  42c79e:	add    BYTE PTR [rdx],al
  42c7a0:	add    BYTE PTR [rax+0x0],ah
  42c7a3:	add    al,BYTE PTR [rax]
  42c7a5:	(bad)  
  42c7a6:	add    BYTE PTR [rdx],al
  42c7a8:	add    BYTE PTR [rax+0x0],al
  42c7ab:	add    al,BYTE PTR [rax+0x10128040]
  42c7b1:	add    BYTE PTR [rdx],al
  42c7b4:	add    dl,al
  42c7b6:	movabs al,ds:0x80400406c0400006
  42c7bf:	add    eax,DWORD PTR [rax]
  42c7c1:	rex or DWORD PTR [rax],0x814000
  42c7c8:	add    BYTE PTR [rax-0x7f],al
  42c7cb:	add    BYTE PTR [rax],al
  42c7cd:	rex add DWORD PTR [rax],0x814000
  42c7d4:	add    BYTE PTR [rax-0x7f],al
  42c7d7:	add    BYTE PTR [rax],al
  42c7d9:	rex add DWORD PTR [rax],0x814000
  42c7e0:	add    BYTE PTR [rax-0x7e],al
  42c7e3:	add    BYTE PTR [rax],al
  42c7e5:	rex (bad) 
  42c7e7:	add    BYTE PTR [rax],ah
  42c7e9:	rex add BYTE PTR [rdx],0x0
  42c7ed:	add    BYTE PTR [rdx],al
  42c7f0:	add    BYTE PTR [rax+0x0],al
  42c7f3:	add    al,BYTE PTR [rax]
  42c7f5:	add    BYTE PTR [rdx],al
  42c7f8:	add    BYTE PTR [rax+0x0],al
  42c7fb:	add    eax,DWORD PTR [rax]
  42c7fd:	add    BYTE PTR [rdx],al
  42c800:	add    BYTE PTR [rax-0x80],al
  42c803:	add    al,BYTE PTR [rax]
  42c805:	rex xchg esp,eax
  42c807:	add    BYTE PTR [rax],al
  42c809:	rex xchg esp,eax
  42c80b:	add    BYTE PTR [rax],al
  42c80d:	rex xchg esp,eax
  42c80f:	add    BYTE PTR [rax],al
  42c811:	rex xchg esp,eax
  42c813:	add    BYTE PTR [rax],al
  42c815:	rex xchg esp,eax
  42c817:	add    BYTE PTR [rax],al
  42c819:	rex xchg esp,eax
  42c81b:	or     BYTE PTR [rax],al
  42c81d:	rex xchg eax,eax
  42c81f:	add    BYTE PTR [rax],al
  42c821:	rex xchg eax,eax
  42c823:	add    BYTE PTR [rax],al
  42c825:	rex xchg eax,eax
  42c827:	add    BYTE PTR [rax],al
  42c829:	rex xchg eax,eax
  42c82b:	add    BYTE PTR [rax],al
  42c82d:	rex xchg eax,eax
  42c82f:	add    BYTE PTR [rax],al
  42c831:	rex xchg eax,eax
  42c833:	add    BYTE PTR [rax],al
  42c835:	rex xchg eax,eax
  42c837:	add    BYTE PTR [rax],al
  42c839:	rex xchg eax,eax
  42c83b:	or     BYTE PTR [rax],al
  42c83d:	rex xchg eax,eax
  42c83f:	add    BYTE PTR [rax],al
  42c841:	rex xchg eax,eax
  42c843:	add    BYTE PTR [rax],al
  42c845:	rex xchg eax,eax
  42c847:	add    BYTE PTR [rax],al
  42c849:	rex xchg eax,eax
  42c84b:	add    BYTE PTR [rax],al
  42c84d:	rex xchg eax,eax
  42c84f:	add    BYTE PTR [rax],al
  42c851:	rex xchg eax,eax
  42c853:	add    BYTE PTR [rax],al
  42c855:	rex xchg eax,eax
  42c857:	add    BYTE PTR [rax],al
  42c859:	rex xchg eax,eax
  42c85b:	add    BYTE PTR [rax],al
  42c85d:	rex xchg eax,eax
  42c85f:	add    BYTE PTR [rax],al
  42c861:	rex xchg eax,eax
  42c863:	add    BYTE PTR [rax],al
  42c865:	rex xchg eax,eax
  42c867:	add    BYTE PTR [rax],al
  42c869:	rex xchg eax,eax
  42c86b:	add    BYTE PTR [rax],al
  42c86d:	rex
  42c86e:	add    al,BYTE PTR [rax+rax*2]
  42c872:	add    BYTE PTR [rdx],al
  42c874:	add    BYTE PTR [rax+0x40],al
  42c877:	add    al,BYTE PTR [rax]
  42c879:	movabs al,ds:0x40000480404002
  42c883:	add    al,BYTE PTR [rax]
  42c885:	rex mov WORD PTR [rax],es
  42c888:	add    BYTE PTR [rax-0x74],al
  42c88b:	add    BYTE PTR [rax],al
  42c88d:	rex mov WORD PTR [rax],es
  42c890:	add    BYTE PTR [rax-0x74],al
  42c893:	add    BYTE PTR [rax],al
  42c895:	rex mov WORD PTR [rax],es
  42c898:	add    BYTE PTR [rax-0x74],al
  42c89b:	or     BYTE PTR [rax],al
  42c89d:	mov    BYTE PTR [rax],al
  42c8a0:	add    BYTE PTR [rax-0x78],al
  42c8a3:	add    BYTE PTR [rax],al
  42c8a5:	mov    BYTE PTR [rax],al
  42c8a8:	add    BYTE PTR [rax-0x78],al
  42c8ab:	add    BYTE PTR [rax],al
  42c8ad:	mov    BYTE PTR [rax],al
  42c8b0:	add    BYTE PTR [rax-0x78],al
  42c8b3:	add    BYTE PTR [rax],al
  42c8b5:	mov    BYTE PTR [rax],al
  42c8b8:	add    BYTE PTR [rax-0x78],al
  42c8bb:	or     BYTE PTR [rax],al
  42c8bd:	mov    BYTE PTR [rax],al
  42c8c0:	add    BYTE PTR [rax-0x78],al
  42c8c3:	add    BYTE PTR [rax],al
  42c8c5:	mov    BYTE PTR [rax],al
  42c8c8:	add    BYTE PTR [rax-0x78],al
  42c8cb:	add    BYTE PTR [rax],al
  42c8cd:	mov    BYTE PTR [rax],al
  42c8d0:	add    BYTE PTR [rax-0x78],al
  42c8d3:	add    BYTE PTR [rax],al
  42c8d5:	mov    BYTE PTR [rax],al
  42c8d8:	add    BYTE PTR [rax-0x78],al
  42c8db:	add    BYTE PTR [rax],al
  42c8dd:	mov    BYTE PTR [rax],al
  42c8e0:	add    BYTE PTR [rax-0x78],al
  42c8e3:	add    BYTE PTR [rax],al
  42c8e5:	mov    BYTE PTR [rax],al
  42c8e8:	add    BYTE PTR [rax-0x78],al
  42c8eb:	add    BYTE PTR [rax],al
  42c8ed:	add    BYTE PTR [rdx],al
  42c8f0:	add    BYTE PTR [rax-0x80],al
  42c8f3:	adc    al,BYTE PTR [rax]
  42c8f5:	add    BYTE PTR [rdx],al
  42c8f8:	add    al,al
  42c8fa:	add    BYTE PTR [rdx],0x0
  42c8fd:	add    BYTE PTR [rax],al
  42c8ff:	add    BYTE PTR [rbp-0x78],al
  42c902:	(bad)  
  42c903:	push   QWORD PTR [rdx]
  42c905:	mov    dh,bh
  42c907:	inc    DWORD PTR [rax]
  42c909:	cmp    esi,0xfe8100ff
  42c90f:	jmp    QWORD PTR [rax]
  42c911:	mov    dh,bh
  42c913:	(bad)  
  42c914:	jl     0x42c89a
  42c916:	(bad)  
  42c917:	dec    DWORD PTR [rbx+rax*4-0x2]
  42c91b:	call   QWORD PTR [rcx-0x7c]
  42c91e:	(bad)  
  42c91f:	jmp    FWORD PTR [rsp+rax*4]
  42c922:	(bad)  
  42c923:	(bad)  
  42c924:	in     al,dx
  42c925:	(bad)  
  42c926:	(bad)  
  42c927:	(bad)  
  42c928:	inc    BYTE PTR [rax-0x7f010002]
  42c92e:	(bad)  
  42c92f:	(bad)  
  42c930:	inc    BYTE PTR [rax-0x7f010002]
  42c936:	(bad)  
  42c937:	call   FWORD PTR [rdx+rax*4-0x2]
  42c93b:	call   FWORD PTR [rdx+rax*4-0x2]
  42c93f:	jmp    FWORD PTR [rsi-0x7d]
  42c942:	(bad)  
  42c943:	(bad)  
  42c944:	fadd   QWORD PTR [rbx-0x7f010002]
  42c94a:	(bad)  
  42c94b:	(bad)  
  42c94c:	in     al,dx
  42c94d:	(bad)  
  42c94e:	(bad)  
  42c94f:	call   FWORD PTR [rdx+rax*4-0x2]
  42c953:	call   FWORD PTR [rdx+rax*4-0x2]
  42c957:	call   FWORD PTR [rdx+rax*4-0x2]
  42c95b:	jmp    FWORD PTR [rdi+0x34fffe89]
  42c961:	test   dh,bh
  42c963:	push   QWORD PTR [rsp+rax*4]
  42c966:	(bad)  
  42c967:	push   QWORD PTR [rsp+rax*4]
  42c96a:	(bad)  
  42c96b:	dec    DWORD PTR [rdi+0x7cfffe89]
  42c971:	mov    esi,edi
  42c973:	dec    DWORD PTR [rdi+0x34fffe89]
  42c979:	test   dh,bh
  42c97b:	push   QWORD PTR [rsp+rax*4]
  42c97e:	(bad)  
  42c97f:	push   QWORD PTR [rsp+rax*4]
  42c982:	(bad)  
  42c983:	push   QWORD PTR [rsp+rax*4]
  42c986:	(bad)  
  42c987:	push   QWORD PTR [rsp+rax*4]
  42c98a:	(bad)  
  42c98b:	push   QWORD PTR [rsp+rax*4]
  42c98e:	(bad)  
  42c98f:	push   QWORD PTR [rsp+rax*4]
  42c992:	(bad)  
  42c993:	push   QWORD PTR [rsp+rax*4]
  42c996:	(bad)  
  42c997:	push   QWORD PTR [rsp+rax*4]
  42c99a:	(bad)  
  42c99b:	push   QWORD PTR [rsp+rax*4]
  42c99e:	(bad)  
  42c99f:	push   QWORD PTR [rsp+rax*4]
  42c9a2:	(bad)  
  42c9a3:	push   QWORD PTR [rsp+rax*4]
  42c9a6:	(bad)  
  42c9a7:	push   QWORD PTR [rsp+rax*4]
  42c9aa:	(bad)  
  42c9ab:	push   QWORD PTR [rsp+rax*4]
  42c9ae:	(bad)  
  42c9af:	push   QWORD PTR [rsp+rax*4]
  42c9b2:	(bad)  
  42c9b3:	push   QWORD PTR [rsp+rax*4]
  42c9b6:	(bad)  
  42c9b7:	jmp    FWORD PTR [rcx-0x77]
  42c9ba:	(bad)  
  42c9bb:	push   QWORD PTR [rsp+rax*4]
  42c9be:	(bad)  
  42c9bf:	push   QWORD PTR [rsp+rax*4]
  42c9c2:	(bad)  
  42c9c3:	push   QWORD PTR [rsp+rax*4]
  42c9c6:	(bad)  
  42c9c7:	push   QWORD PTR [rsp+rax*4]
  42c9ca:	(bad)  
  42c9cb:	push   QWORD PTR [rsp+rax*4]
  42c9ce:	(bad)  
  42c9cf:	push   QWORD PTR [rsp+rax*4]
  42c9d2:	(bad)  
  42c9d3:	push   QWORD PTR [rsp+rax*4]
  42c9d6:	(bad)  
  42c9d7:	push   QWORD PTR [rsp+rax*4]
  42c9da:	(bad)  
  42c9db:	jmp    FWORD PTR [rdi+0x34fffe89]
  42c9e1:	test   dh,bh
  42c9e3:	inc    DWORD PTR [rbp-0x77]
  42c9e6:	(bad)  
  42c9e7:	call   FWORD PTR [rbx]
  42c9e9:	mov    esi,edi
  42c9eb:	dec    DWORD PTR [rdi+0x7cfffe89]
  42c9f1:	mov    esi,edi
  42c9f3:	dec    DWORD PTR [rdi+0x34fffe89]
  42c9f9:	test   dh,bh
  42c9fb:	call   FWORD PTR [rbx]
  42c9fd:	mov    esi,edi
  42c9ff:	push   QWORD PTR [rsp+rax*4]
  42ca02:	(bad)  
  42ca03:	push   QWORD PTR [rsp+rax*4]
  42ca06:	(bad)  
  42ca07:	push   QWORD PTR [rsp+rax*4]
  42ca0a:	(bad)  
  42ca0b:	push   QWORD PTR [rsp+rax*4]
  42ca0e:	(bad)  
  42ca0f:	push   QWORD PTR [rsp+rax*4]
  42ca12:	(bad)  
  42ca13:	inc    DWORD PTR [rdi]
  42ca15:	mov    esi,edi
  42ca17:	inc    DWORD PTR [rax]
  42ca19:	mov    esi,edi
  42ca1b:	push   QWORD PTR [rsp+rax*4]
  42ca1e:	(bad)  
  42ca1f:	push   QWORD PTR [rsp+rax*4]
  42ca22:	(bad)  
  42ca23:	push   QWORD PTR [rcx-0x78]
  42ca26:	(bad)  
  42ca27:	push   QWORD PTR [rsp+rax*4]
  42ca2a:	(bad)  
  42ca2b:	call   FWORD PTR [rbx]
  42ca2d:	mov    esi,edi
  42ca2f:	push   QWORD PTR [rsp+rax*4]
  42ca32:	(bad)  
  42ca33:	push   QWORD PTR [rsp+rax*4]
  42ca36:	(bad)  
  42ca37:	jmp    FWORD PTR [rcx-0x77]
  42ca3a:	(bad)  
  42ca3b:	inc    DWORD PTR [rax]
  42ca3d:	add    BYTE PTR [rax],al
  42ca3f:	add    BYTE PTR [rax],ch
  42ca41:	rex.WRX push rbp
  42ca43:	rex.WR
  42ca44:	sub    QWORD PTR [rax],r8
  42ca47:	add    BYTE PTR [rdx*4-0x6b570002],bl
  42ca4e:	(bad)  
  42ca4f:	jmp    FWORD PTR [rax-0x6700016c]
  42ca55:	xchg   esp,eax
  42ca56:	(bad)  
  42ca57:	call   FWORD PTR [rax-0x7700016c]
  42ca5d:	xchg   esp,eax
  42ca5e:	(bad)  
  42ca5f:	dec    DWORD PTR [rax-0x7700016c]
  42ca65:	xchg   esp,eax
  42ca66:	(bad)  
  42ca67:	dec    DWORD PTR [rax+0x68fffe94]
  42ca6d:	xchg   esp,eax
  42ca6e:	(bad)  
  42ca6f:	jmp    FWORD PTR [rax-0x6c]
  42ca72:	(bad)  
  42ca73:	(bad)  
  42ca74:	mov    eax,0xc8fffe94
  42ca79:	xchg   esp,eax
  42ca7a:	(bad)  
  42ca7b:	dec    DWORD PTR [rax-0x6700016c]
  42ca81:	xchg   esp,eax
  42ca82:	(bad)  
  42ca83:	(bad)  
  42ca84:	fcom   DWORD PTR [rsi+rdi*8-0x16b0701]
  42ca8b:	jmp    FWORD PTR [rax-0x6c]
  42ca8e:	(bad)  
  42ca8f:	jmp    FWORD PTR [rax-0x6c]
  42ca92:	(bad)  
  42ca93:	jmp    FWORD PTR [rax-0x6c]
  42ca96:	(bad)  
  42ca97:	jmp    FWORD PTR [rax-0x6c]
  42ca9a:	(bad)  
  42ca9b:	jmp    FWORD PTR [rax-0x6c]
  42ca9e:	(bad)  
  42ca9f:	jmp    FWORD PTR [rax-0x6c]
  42caa2:	(bad)  
  42caa3:	jmp    FWORD PTR [rax]
  42caa5:	add    BYTE PTR [rsi+0x0],cl
  42caa8:	push   rbp
  42caa9:	add    BYTE PTR [rax+rax*1+0x4c],cl
  42caad:	add    BYTE PTR [rcx],ch
	...
  42cabf:	add    BYTE PTR [rdi+0x7ffffe9e],bh
  42cac5:	xchg   edi,eax
  42cac6:	(bad)  
  42cac7:	(bad)  
  42cac8:	jg     0x42ca61
  42caca:	(bad)  
  42cacb:	(bad)  
  42cacc:	jg     0x42ca65
  42cace:	(bad)  
  42cacf:	(bad)  
  42cad0:	jg     0x42ca69
  42cad2:	(bad)  
  42cad3:	(bad)  
  42cad4:	jg     0x42ca6d
  42cad6:	(bad)  
  42cad7:	(bad)  
  42cad8:	jg     0x42ca71
  42cada:	(bad)  
  42cadb:	(bad)  
  42cadc:	jg     0x42ca75
  42cade:	(bad)  
  42cadf:	(bad)  
  42cae0:	jg     0x42ca79
  42cae2:	(bad)  
  42cae3:	(bad)  
  42cae4:	jg     0x42ca7d
  42cae6:	(bad)  
  42cae7:	(bad)  
  42cae8:	jg     0x42ca81
  42caea:	(bad)  
  42caeb:	(bad)  
  42caec:	jg     0x42ca85
  42caee:	(bad)  
  42caef:	(bad)  
  42caf0:	jg     0x42ca89
  42caf2:	(bad)  
  42caf3:	(bad)  
  42caf4:	jg     0x42ca8d
  42caf6:	(bad)  
  42caf7:	(bad)  
  42caf8:	jg     0x42ca91
  42cafa:	(bad)  
  42cafb:	(bad)  
  42cafc:	jg     0x42ca95
  42cafe:	(bad)  
  42caff:	(bad)  
  42cb00:	jg     0x42ca99
  42cb02:	(bad)  
  42cb03:	(bad)  
  42cb04:	jg     0x42ca9d
  42cb06:	(bad)  
  42cb07:	(bad)  
  42cb08:	jg     0x42caa1
  42cb0a:	(bad)  
  42cb0b:	(bad)  
  42cb0c:	jg     0x42caa5
  42cb0e:	(bad)  
  42cb0f:	(bad)  
  42cb10:	jg     0x42caa9
  42cb12:	(bad)  
  42cb13:	(bad)  
  42cb14:	jg     0x42caad
  42cb16:	(bad)  
  42cb17:	(bad)  
  42cb18:	jg     0x42cab1
  42cb1a:	(bad)  
  42cb1b:	(bad)  
  42cb1c:	jg     0x42cab5
  42cb1e:	(bad)  
  42cb1f:	(bad)  
  42cb20:	jg     0x42cab9
  42cb22:	(bad)  
  42cb23:	(bad)  
  42cb24:	jg     0x42cabd
  42cb26:	(bad)  
  42cb27:	(bad)  
  42cb28:	jg     0x42cac1
  42cb2a:	(bad)  
  42cb2b:	(bad)  
  42cb2c:	jg     0x42cac5
  42cb2e:	(bad)  
  42cb2f:	jmp    QWORD PTR [rax]
  42cb31:	(bad)  
  42cb32:	(bad)  
  42cb33:	(bad)  
  42cb34:	jg     0x42cacd
  42cb36:	(bad)  
  42cb37:	jmp    FWORD PTR [rdi+0x7ffffe9e]
  42cb3d:	xchg   edi,eax
  42cb3e:	(bad)  
  42cb3f:	jmp    QWORD PTR [rax]
  42cb41:	(bad)  
  42cb42:	(bad)  
  42cb43:	jmp    QWORD PTR [rax]
  42cb45:	(bad)  
  42cb46:	(bad)  
  42cb47:	jmp    QWORD PTR [rax]
  42cb49:	(bad)  
  42cb4a:	(bad)  
  42cb4b:	(bad)  
  42cb4c:	jg     0x42cae5
  42cb4e:	(bad)  
  42cb4f:	(bad)  
  42cb50:	jg     0x42cae9
  42cb52:	(bad)  
  42cb53:	(bad)  
  42cb54:	jg     0x42caed
  42cb56:	(bad)  
  42cb57:	(bad)  
  42cb58:	jg     0x42caf1
  42cb5a:	(bad)  
  42cb5b:	(bad)  
  42cb5c:	jg     0x42caf5
  42cb5e:	(bad)  
  42cb5f:	(bad)  
  42cb60:	jg     0x42caf9
  42cb62:	(bad)  
  42cb63:	(bad)  
  42cb64:	jg     0x42cafd
  42cb66:	(bad)  
  42cb67:	(bad)  
  42cb68:	jg     0x42cb01
  42cb6a:	(bad)  
  42cb6b:	(bad)  
  42cb6c:	jg     0x42cb05
  42cb6e:	(bad)  
  42cb6f:	(bad)  
  42cb70:	jg     0x42cb09
  42cb72:	(bad)  
  42cb73:	(bad)  
  42cb74:	jg     0x42cb0d
  42cb76:	(bad)  
  42cb77:	call   rbx
  42cb79:	sahf   
  42cb7a:	(bad)  
  42cb7b:	(bad)  
  42cb7c:	jg     0x42cb15
  42cb7e:	(bad)  
  42cb7f:	(bad)  
  42cb80:	jg     0x42cb19
  42cb82:	(bad)  
  42cb83:	(bad)  
  42cb84:	jg     0x42cb1d
  42cb86:	(bad)  
  42cb87:	(bad)  
  42cb88:	jg     0x42cb21
  42cb8a:	(bad)  
  42cb8b:	jmp    FWORD PTR [rax-0x65]
  42cb8e:	(bad)  
  42cb8f:	(bad)  
  42cb90:	jg     0x42cb29
  42cb92:	(bad)  
  42cb93:	(bad)  
  42cb94:	jg     0x42cb2d
  42cb96:	(bad)  
  42cb97:	(bad)  
  42cb98:	jg     0x42cb31
  42cb9a:	(bad)  
  42cb9b:	(bad)  
  42cb9c:	jg     0x42cb35
  42cb9e:	(bad)  
  42cb9f:	(bad)  
  42cba0:	jg     0x42cb39
  42cba2:	(bad)  
  42cba3:	(bad)  
  42cba4:	jg     0x42cb3d
  42cba6:	(bad)  
  42cba7:	(bad)  
  42cba8:	jg     0x42cb41
  42cbaa:	(bad)  
  42cbab:	(bad)  
  42cbac:	jg     0x42cb45
  42cbae:	(bad)  
  42cbaf:	jmp    QWORD PTR [rax]
  42cbb1:	(bad)  
  42cbb2:	(bad)  
  42cbb3:	(bad)  
  42cbb4:	jg     0x42cb4d
  42cbb6:	(bad)  
  42cbb7:	call   QWORD PTR [rbx-0x65]
  42cbba:	(bad)  
  42cbbb:	dec    DWORD PTR [rip+0x20fffe9b]        # 0x2142ca5c
  42cbc1:	(bad)  
  42cbc2:	(bad)  
  42cbc3:	jmp    QWORD PTR [rax]
  42cbc5:	(bad)  
  42cbc6:	(bad)  
  42cbc7:	jmp    QWORD PTR [rax]
  42cbc9:	(bad)  
  42cbca:	(bad)  
  42cbcb:	(bad)  
  42cbcc:	jg     0x42cb65
  42cbce:	(bad)  
  42cbcf:	dec    DWORD PTR [rip+0x7ffffe9b]        # 0x8042ca70
  42cbd5:	xchg   edi,eax
  42cbd6:	(bad)  
  42cbd7:	(bad)  
  42cbd8:	jg     0x42cb71
  42cbda:	(bad)  
  42cbdb:	(bad)  
  42cbdc:	jg     0x42cb75
  42cbde:	(bad)  
  42cbdf:	(bad)  
  42cbe0:	jg     0x42cb79
  42cbe2:	(bad)  
  42cbe3:	dec    edx
  42cbe5:	(bad)  
  42cbe6:	(bad)  
  42cbe7:	jmp    FWORD PTR [rax-0x65]
  42cbea:	(bad)  
  42cbeb:	inc    esi
  42cbed:	sahf   
  42cbee:	(bad)  
  42cbef:	(bad)  
  42cbf0:	jg     0x42cb89
  42cbf2:	(bad)  
  42cbf3:	(bad)  
  42cbf4:	jg     0x42cb8d
  42cbf6:	(bad)  
  42cbf7:	push   QWORD PTR [rbp+0x7ffffe9a]
  42cbfd:	xchg   edi,eax
  42cbfe:	(bad)  
  42cbff:	jmp    FWORD PTR [rax-0x65]
  42cc02:	(bad)  
  42cc03:	(bad)  
  42cc04:	jg     0x42cb9d
  42cc06:	(bad)  
  42cc07:	(bad)  
  42cc08:	jg     0x42cba1
  42cc0a:	(bad)  
  42cc0b:	jmp    FWORD PTR [rax-0x65]
  42cc0e:	(bad)  
  42cc0f:	dec    DWORD PTR [rip+0xa]        # 0x42cc1f
	...
  42cc1d:	add    BYTE PTR [rax],al
  42cc1f:	add    BYTE PTR [rsi+0x74],ch
  42cc22:	fs ins BYTE PTR es:[rdi],dx
  42cc24:	ins    BYTE PTR es:[rdi],dx
  42cc25:	cs fs ins BYTE PTR es:[rdi],dx
  42cc28:	ins    BYTE PTR es:[rdi],dx
  42cc29:	add    BYTE PTR [rsi+0x74],cl
  42cc2c:	push   rcx
  42cc2d:	jne    0x42cc94
  42cc2f:	jb     0x42ccaa
  42cc31:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42cc33:	outs   dx,WORD PTR ds:[rsi]
  42cc35:	jb     0x42cca4
  42cc37:	(bad)  
  42cc38:	je     0x42cca3
  42cc3a:	outs   dx,DWORD PTR ds:[rsi]
  42cc3b:	outs   dx,BYTE PTR ds:[rsi]
  42cc3c:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x656c6573
  42cc45:	movsxd esi,DWORD PTR [rsi+rbp*1+0x63]
  42cc49:	add    BYTE PTR [rdx+0x52],ah
  42cc4c:	gs je  0x42cc4f
  42cc4f:	add    BYTE PTR [rbp+0x6e],dl
  42cc52:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42cc56:	outs   dx,BYTE PTR ds:[rsi]
  42cc57:	and    BYTE PTR [rbp+0x72],ah
  42cc5a:	jb     0x42cccb
  42cc5c:	jb     0x42cc7e
  42cc5e:	and    eax,0x64
	...
  42cc6f:	add    BYTE PTR [rbx+0x75],dl
  42cc72:	movsxd esp,DWORD PTR [rbx+0x65]
  42cc75:	jae    0x42ccea
  42cc77:	add    BYTE PTR [rbp+riz*2+0x78],dl
  42cc7b:	je     0x42cc9d
  42cc7d:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7562
  42cc84:	jae    0x42ccff
  42cc86:	add    BYTE PTR [rsi+0x6f],cl
  42cc89:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42cc8d:	(bad)  
  42cc8e:	and    BYTE PTR [rcx+0x76],ah
  42cc91:	(bad)  
  42cc92:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x4f00656c
  42cc9a:	jne    0x42cd10
  42cc9c:	and    BYTE PTR [rdi+0x66],ch
  42cc9f:	and    BYTE PTR [rbx+0x74],dh
  42cca2:	jb     0x42cd09
  42cca4:	(bad)  
  42cca5:	ins    DWORD PTR es:[rdi],dx
  42cca6:	jae    0x42ccc8
  42cca8:	jb     0x42cd0f
  42ccaa:	jae    0x42cd1b
  42ccac:	jne    0x42cd20
  42ccae:	movsxd esp,DWORD PTR [rbp+0x73]
  42ccb1:	add    BYTE PTR [rbp+riz*2+0x76],al
  42ccb5:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  42ccbc:	and    BYTE PTR [rcx+0x20],ah
  42ccbf:	jae    0x42cd35
  42ccc1:	jb     0x42cd28
  42ccc3:	(bad)  
  42ccc4:	ins    DWORD PTR es:[rdi],dx
  42ccc5:	add    BYTE PTR [rcx+rbp*2+0x6d],dl
  42ccc9:	gs jb  0x42ccec
  42cccc:	gs js  0x42cd3f
  42cccf:	imul   esi,DWORD PTR [rdx+0x65],0x744f0064
  42ccd6:	push   0x65207265
  42ccdb:	jb     0x42cd4f
  42ccdd:	outs   dx,DWORD PTR ds:[rsi]
  42ccde:	jb     0x42cce0
  42cce0:	push   rbx
  42cce1:	outs   dx,DWORD PTR ds:[rsi]
  42cce2:	movsxd ebp,DWORD PTR [rbx+0x65]
  42cce5:	je     0x42cd07
  42cce7:	je     0x42cd62
  42cce9:	jo     0x42cd50
  42cceb:	and    BYTE PTR [rsi+0x6f],ch
  42ccee:	je     0x42cd10
  42ccf0:	jae    0x42cd67
  42ccf2:	jo     0x42cd64
  42ccf4:	outs   dx,DWORD PTR ds:[rsi]
  42ccf5:	jb     0x42cd6b
  42ccf7:	gs add BYTE PTR fs:[rax+0x72],dl
  42ccfc:	outs   dx,DWORD PTR ds:[rsi]
  42ccfd:	je     0x42cd6e
  42ccff:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42cd02:	and    BYTE PTR [rsi+0x61],ah
  42cd05:	ins    DWORD PTR es:[rdi],dx
  42cd06:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
  42cd0e:	jae    0x42cd85
  42cd10:	jo     0x42cd82
  42cd12:	outs   dx,DWORD PTR ds:[rsi]
  42cd13:	jb     0x42cd89
  42cd15:	gs add BYTE PTR fs:[rbx+0x61],al
  42cd1a:	outs   dx,BYTE PTR ds:[rsi]
  42cd1b:	outs   dx,BYTE PTR ds:[rsi]
  42cd1c:	outs   dx,DWORD PTR ds:[rsi]
  42cd1d:	je     0x42cd3f
  42cd1f:	jae    0x42cd86
  42cd21:	outs   dx,BYTE PTR ds:[rsi]
  42cd22:	and    BYTE PTR fs:[rcx+0x66],ah
  42cd26:	je     0x42cd8d
  42cd28:	jb     0x42cd4a
  42cd2a:	je     0x42cd9e
  42cd2c:	(bad)  
  42cd2d:	outs   dx,BYTE PTR ds:[rsi]
  42cd2e:	jae    0x42cda0
  42cd30:	outs   dx,DWORD PTR ds:[rsi]
  42cd31:	jb     0x42cda7
  42cd33:	and    BYTE PTR [rbp+0x6e],ah
  42cd36:	fs jo  0x42cda8
  42cd39:	imul   ebp,DWORD PTR [rsi+0x74],0x75687320
  42cd40:	je     0x42cda6
  42cd42:	outs   dx,DWORD PTR ds:[rsi]
  42cd43:	ja     0x42cdb3
  42cd45:	add    BYTE PTR [rax],al
  42cd47:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  42cd4b:	and    BYTE PTR [rbp+0x61],ch
  42cd4e:	outs   dx,BYTE PTR ds:[rsi]
  42cd4f:	jns    0x42cd71
  42cd51:	jb     0x42cdb8
  42cd53:	data16 gs jb 0x42cdbc
  42cd57:	outs   dx,BYTE PTR ds:[rsi]
  42cd58:	movsxd esp,DWORD PTR [rbp+0x73]
  42cd5b:	cmp    ah,BYTE PTR [rax]
  42cd5d:	movsxd esp,DWORD PTR [rcx+0x6e]
  42cd60:	outs   dx,BYTE PTR ds:[rsi]
  42cd61:	outs   dx,DWORD PTR ds:[rsi]
  42cd62:	je     0x42cd84
  42cd64:	jae    0x42cdd6
  42cd66:	ins    BYTE PTR es:[rdi],dx
  42cd67:	imul   esp,DWORD PTR [rbx+0x65],0x736f4800
  42cd6e:	je     0x42cd90
  42cd70:	imul   esi,DWORD PTR [rbx+0x20],0x6e776f64
  42cd77:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  42cd7b:	and    BYTE PTR [rbp+0x61],ch
  42cd7e:	outs   dx,BYTE PTR ds:[rsi]
  42cd7f:	jns    0x42cda1
  42cd81:	jo     0x42cdf5
  42cd83:	outs   dx,DWORD PTR ds:[rsi]
  42cd84:	movsxd esp,DWORD PTR [rbp+0x73]
  42cd87:	jae    0x42cdee
  42cd89:	jae    0x42cd8b
  42cd8b:	push   rsp
  42cd8c:	outs   dx,DWORD PTR ds:[rsi]
  42cd8d:	outs   dx,DWORD PTR ds:[rsi]
  42cd8e:	and    BYTE PTR [rbp+0x61],ch
  42cd91:	outs   dx,BYTE PTR ds:[rsi]
  42cd92:	jns    0x42cdb4
  42cd94:	jne    0x42ce09
  42cd96:	gs jb  0x42ce0c
  42cd99:	add    BYTE PTR [rcx+rbp*2+0x73],al
  42cd9d:	imul   esp,DWORD PTR [rax],0x71
  42cda0:	jne    0x42ce11
  42cda2:	je     0x42ce05
  42cda4:	and    BYTE PTR [rbp+0x78],ah
  42cda7:	movsxd esp,DWORD PTR [rbp+0x65]
  42cdaa:	fs gs add BYTE PTR fs:[rbx+0x74],dl
  42cdb0:	(bad)  
  42cdb1:	ins    BYTE PTR es:[rdi],dx
  42cdb2:	and    BYTE PTR gs:[rsi+0x46],cl
  42cdb6:	push   rbx
  42cdb7:	and    BYTE PTR [rsi+0x69],ah
  42cdba:	ins    BYTE PTR es:[rdi],dx
  42cdbb:	and    BYTE PTR gs:[rax+0x61],ch
  42cdbf:	outs   dx,BYTE PTR ds:[rsi]
  42cdc0:	fs ins BYTE PTR es:[rdi],dx
  42cdc2:	add    BYTE PTR gs:[rdi+0x62],cl
  42cdc6:	push   0x65
  42cdc8:	movsxd esi,DWORD PTR [rax+riz*1+0x69]
  42cdcc:	jae    0x42cdee
  42cdce:	jb     0x42ce35
  42cdd0:	ins    DWORD PTR es:[rdi],dx
  42cdd1:	outs   dx,DWORD PTR ds:[rsi]
  42cdd2:	je     0x42ce39
  42cdd4:	add    BYTE PTR [rdi+0x76],cl
  42cdd7:	gs jb  0x42ce46
  42cdda:	(bad)  
  42cddb:	jo     0x42ce4d
  42cddd:	gs and BYTE PTR fs:[rdi+0x70],ch
  42cde2:	gs jb  0x42ce46
  42cde5:	je     0x42ce50
  42cde7:	outs   dx,DWORD PTR ds:[rsi]
  42cde8:	outs   dx,BYTE PTR ds:[rsi]
  42cde9:	and    BYTE PTR [rcx+0x62],ah
  42cdec:	outs   dx,DWORD PTR ds:[rsi]
  42cded:	jb     0x42ce63
  42cdef:	gs add BYTE PTR fs:[rax],al
  42cdf3:	add    BYTE PTR [rax],al
  42cdf5:	add    BYTE PTR [rax],al
  42cdf7:	add    BYTE PTR [rdi+0x76],cl
  42cdfa:	gs jb  0x42ce69
  42cdfd:	(bad)  
  42cdfe:	jo     0x42ce70
  42ce00:	gs and BYTE PTR fs:[rcx+0x2f],cl
  42ce05:	rex.WRXB and BYTE PTR [r13+0x76],r12b
  42ce09:	outs   dx,BYTE PTR gs:[rsi]
  42ce0b:	je     0x42ce2d
  42ce0d:	outs   dx,DWORD PTR ds:[rsi]
  42ce0e:	(bad)  
  42ce0f:	push   0x65
  42ce11:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
  42ce15:	outs   dx,DWORD PTR ds:[rsi]
  42ce16:	je     0x42ce38
  42ce18:	imul   ebp,DWORD PTR [rsi+0x20],0x6e676973
  42ce1f:	(bad)  
  42ce20:	ins    BYTE PTR es:[rdi],dx
  42ce21:	gs and BYTE PTR fs:[rbx+0x74],dh
  42ce26:	(bad)  
  42ce27:	je     0x42ce8e
  42ce29:	add    BYTE PTR [rax],al
  42ce2b:	add    BYTE PTR [rax],al
  42ce2d:	add    BYTE PTR [rax],al
  42ce2f:	add    BYTE PTR [rdi+0x76],cl
  42ce32:	gs jb  0x42cea1
  42ce35:	(bad)  
  42ce36:	jo     0x42cea8
  42ce38:	gs and BYTE PTR fs:[rdi+0x70],ch
  42ce3d:	gs jb  0x42cea1
  42ce40:	je     0x42ceab
  42ce42:	outs   dx,DWORD PTR ds:[rsi]
  42ce43:	outs   dx,BYTE PTR ds:[rsi]
  42ce44:	jae    0x42ce66
  42ce46:	ja     0x42ceb1
  42ce48:	ins    BYTE PTR es:[rdi],dx
  42ce49:	ins    BYTE PTR es:[rdi],dx
  42ce4a:	and    BYTE PTR [rbx+0x6f],ah
  42ce4d:	ins    DWORD PTR es:[rdi],dx
  42ce4e:	jo     0x42cebc
  42ce50:	gs je  0x42ceb8
  42ce53:	and    BYTE PTR [rcx+riz*2+0x74],ch
  42ce57:	gs jb  0x42ce5a
  42ce5a:	add    BYTE PTR [rax],al
  42ce5c:	add    BYTE PTR [rax],al
  42ce5e:	add    BYTE PTR [rax],al
  42ce60:	rex.WRX
  42ce61:	gs je  0x42cedb
  42ce64:	outs   dx,DWORD PTR ds:[rsi]
  42ce65:	jb     0x42ced2
  42ce67:	and    BYTE PTR [rbx+0x75],dh
  42ce6a:	(bad)  
  42ce6c:	jns    0x42cee1
  42ce6e:	je     0x42ced5
  42ce70:	ins    DWORD PTR es:[rdi],dx
  42ce71:	and    BYTE PTR [rcx+0x73],ch
  42ce74:	and    BYTE PTR [rbp+0x6e],dh
  42ce77:	(bad)  
  42ce78:	jbe    0x42cedb
  42ce7a:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
  42ce82:	add    BYTE PTR [rax],al
  42ce84:	add    BYTE PTR [rax],al
  42ce86:	add    BYTE PTR [rax],al
  42ce88:	push   rdi
  42ce89:	imul   ebp,DWORD PTR [rsi+0x73],0x2e6b636f
  42ce90:	fs ins BYTE PTR es:[rdi],dx
  42ce92:	ins    BYTE PTR es:[rdi],dx
  42ce93:	and    BYTE PTR [rsi+0x65],dh
  42ce96:	jb     0x42cf0b
  42ce98:	imul   ebp,DWORD PTR [rdi+0x6e],0x74756f20
  42ce9f:	and    BYTE PTR [rdi+0x66],ch
  42cea2:	and    BYTE PTR [rdx+0x61],dh
  42cea5:	outs   dx,BYTE PTR ds:[rsi]
  42cea6:	add    BYTE PTR gs:[eax],al
  42ceaa:	add    BYTE PTR [rax],al
  42ceac:	add    BYTE PTR [rax],al
  42ceae:	add    BYTE PTR [rax],al
  42ceb0:	push   rbx
  42ceb1:	jne    0x42cf16
  42ceb3:	movsxd esp,DWORD PTR [rbp+0x73]
  42ceb6:	jae    0x42cf1e
  42ceb8:	jne    0x42cf26
  42ceba:	and    BYTE PTR [rdi+0x53],dl
  42cebd:	push   r11
  42cebf:	je     0x42cf22
  42cec1:	jb     0x42cf37
  42cec3:	jne    0x42cf35
  42cec5:	and    BYTE PTR [rsi+0x6f],ch
  42cec8:	je     0x42ceea
  42ceca:	jns    0x42cf31
  42cecc:	je     0x42ceee
  42cece:	jo     0x42cf35
  42ced0:	jb     0x42cf38
  42ced2:	outs   dx,DWORD PTR ds:[rsi]
  42ced3:	jb     0x42cf42
  42ced5:	gs add BYTE PTR fs:[rdi+0x72],al
  42ceda:	(bad)  
  42cedb:	movsxd esp,DWORD PTR [rbp+0x66]
  42cede:	jne    0x42cf4c
  42cee0:	and    BYTE PTR [rbx+0x68],dh
  42cee3:	jne    0x42cf59
  42cee5:	outs   dx,DWORD PTR fs:[rsi]
  42cee7:	ja     0x42cf57
  42cee9:	and    BYTE PTR [rcx+0x6e],ch
  42ceec:	and    BYTE PTR [rax+0x72],dh
  42ceef:	outs   dx,DWORD PTR ds:[rsi]
  42cef0:	addr32 jb 0x42cf58
  42cef3:	jae    0x42cf68
  42cef5:	add    BYTE PTR [rsi+0x6f],cl
  42cef8:	and    BYTE PTR [rbp+0x6f],ch
  42cefb:	jb     0x42cf62
  42cefd:	and    BYTE PTR [rdx+0x65],dh
  42cf00:	jae    0x42cf77
  42cf02:	ins    BYTE PTR es:[rdi],dx
  42cf03:	je     0x42cf78
  42cf05:	add    BYTE PTR [rbx+0x61],al
  42cf08:	ins    BYTE PTR es:[rdi],dx
  42cf09:	ins    BYTE PTR es:[rdi],dx
  42cf0a:	and    BYTE PTR [rdi+0x61],dh
  42cf0d:	jae    0x42cf2f
  42cf0f:	movsxd esp,DWORD PTR [rcx+0x6e]
  42cf12:	movsxd esp,DWORD PTR [rbp+0x6c]
  42cf15:	gs add BYTE PTR fs:[rax+0x72],dl
  42cf1a:	outs   dx,DWORD PTR ds:[rsi]
  42cf1b:	movsxd esp,DWORD PTR [rbp+0x64]
  42cf1e:	jne    0x42cf92
  42cf20:	and    BYTE PTR gs:[rbx+0x61],ah
  42cf24:	ins    BYTE PTR es:[rdi],dx
  42cf25:	ins    BYTE PTR es:[rdi],dx
  42cf26:	and    BYTE PTR [rcx+riz*2+0x62],dh
  42cf2a:	ins    BYTE PTR es:[rdi],dx
  42cf2b:	and    BYTE PTR gs:[rcx+0x73],ch
  42cf2f:	and    BYTE PTR [rcx+0x6e],ch
  42cf32:	jbe    0x42cf95
  42cf34:	ins    BYTE PTR es:[rdi],dx
  42cf35:	imul   esp,DWORD PTR [rax+rax*1+0x53],0x69767265
  42cf3d:	movsxd esp,DWORD PTR [rbp+0x20]
  42cf40:	jo     0x42cfb4
  42cf42:	outs   dx,DWORD PTR ds:[rsi]
  42cf43:	jbe    0x42cfae
  42cf45:	fs gs jb 0x42cf69
  42cf49:	imul   esi,DWORD PTR [rbx+0x20],0x61766e69
  42cf50:	ins    BYTE PTR es:[rdi],dx
  42cf51:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x53000000
  42cf59:	gs jb  0x42cfd2
  42cf5c:	imul   esp,DWORD PTR [rbx+0x65],0x6f727020
  42cf63:	jbe    0x42cfce
  42cf65:	fs gs jb 0x42cf89
  42cf69:	data16 (bad) 
  42cf6b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  42cf73:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  42cf7a:	imul   edi,DWORD PTR [rdx+0x65],0x73795300
  42cf81:	je     0x42cfe8
  42cf83:	ins    DWORD PTR es:[rdi],dx
  42cf84:	and    BYTE PTR [rbx+0x61],ah
  42cf87:	ins    BYTE PTR es:[rdi],dx
  42cf88:	ins    BYTE PTR es:[rdi],dx
  42cf89:	and    BYTE PTR [rsi+0x61],ah
  42cf8c:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65530065
  42cf94:	jb     0x42d00c
  42cf96:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  42cf9d:	and    BYTE PTR [rsi+0x6f],ah
  42cfa0:	jne    0x42d010
  42cfa2:	add    BYTE PTR fs:[rbx+0x6c],al
  42cfa6:	(bad)  
  42cfa7:	jae    0x42d01c
  42cfa9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42cfad:	and    BYTE PTR gs:[rsi+0x6f],ch
  42cfb1:	je     0x42cfd3
  42cfb3:	outs   dx,WORD PTR ds:[rsi]
  42cfb5:	jne    0x42d025
  42cfb7:	add    BYTE PTR fs:[rcx+riz*2+0x74],al
  42cfbc:	(bad)  
  42cfbd:	(bad)  
  42cfbf:	jae    0x42d026
  42cfc1:	and    BYTE PTR [rcx+0x75],dh
  42cfc4:	gs jb  0x42d040
  42cfc7:	and    BYTE PTR [rdi+0x61],dh
  42cfca:	jae    0x42cfec
  42cfcc:	jb     0x42d033
  42cfce:	data16 jne 0x42d044
  42cfd1:	gs add BYTE PTR fs:[rax+0x6f],cl
  42cfd6:	jae    0x42d04c
  42cfd8:	and    BYTE PTR [rsi+0x6f],ch
  42cfdb:	je     0x42cffd
  42cfdd:	outs   dx,WORD PTR ds:[rsi]
  42cfdf:	jne    0x42d04f
  42cfe1:	add    BYTE PTR fs:[rax],al
  42cfe4:	add    BYTE PTR [rax],al
  42cfe6:	add    BYTE PTR [rax],al
  42cfe8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  42cfea:	outs   dx,BYTE PTR ds:[rsi]
  42cfeb:	(bad)  
  42cfec:	jne    0x42d062
  42cfee:	push   0x7469726f
  42cff3:	(bad)  
  42cff4:	je     0x42d05f
  42cff6:	jbe    0x42d05d
  42cff8:	and    BYTE PTR [rax+0x6f],ch
  42cffb:	jae    0x42d071
  42cffd:	and    BYTE PTR [rsi+0x6f],ch
  42d000:	je     0x42d022
  42d002:	outs   dx,WORD PTR ds:[rsi]
  42d004:	jne    0x42d074
  42d006:	add    BYTE PTR fs:[rsi+0x6f],cl
  42d00a:	outs   dx,BYTE PTR ds:[rsi]
  42d00b:	jb     0x42d072
  42d00d:	movsxd ebp,DWORD PTR [rdi+0x76]
  42d010:	gs jb  0x42d074
  42d013:	(bad)  
  42d014:	ins    BYTE PTR es:[rdi],dx
  42d015:	and    BYTE PTR gs:[rbp+0x72],ah
  42d019:	jb     0x42d08a
  42d01b:	jb     0x42d01d
  42d01d:	add    BYTE PTR [rax],al
  42d01f:	add    BYTE PTR [rsi+0x61],dl
  42d022:	ins    BYTE PTR es:[rdi],dx
  42d023:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x2c656d61
  42d02b:	and    BYTE PTR [rsi+0x6f],ch
  42d02e:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42d032:	(bad)  
  42d033:	and    BYTE PTR [rdx+0x65],dh
  42d036:	movsxd ebp,DWORD PTR [rdi+0x72]
  42d039:	and    BYTE PTR fs:[rdi+0x66],ch
  42d03d:	and    BYTE PTR [rdx+0x65],dh
  42d040:	jno    0x42d0b7
  42d042:	gs jae 0x42d0b9
  42d045:	gs and BYTE PTR fs:[rcx+rdi*2+0x70],dh
  42d04b:	add    BYTE PTR gs:[rsi+0x6f],cl
  42d04f:	and    BYTE PTR [rbp+0x65],ch
  42d052:	jae    0x42d0c7
  42d054:	(bad)  
  42d055:	and    BYTE PTR gs:[edi+0x66],ch
  42d05a:	and    BYTE PTR [rbp+riz*2+0x73],ah
  42d05e:	imul   esi,DWORD PTR [rdx+0x65],0x79742064
  42d065:	jo     0x42d0cc
  42d067:	add    BYTE PTR [rcx+0x64],cl
  42d06a:	outs   dx,BYTE PTR gs:[rsi]
  42d06c:	je     0x42d0d7
  42d06e:	imul   sp,WORD PTR [rbp+0x72],0x7220
  42d074:	gs ins DWORD PTR es:[rdi],dx
  42d076:	outs   dx,DWORD PTR ds:[rsi]
  42d077:	jbe    0x42d0de
  42d079:	add    BYTE PTR fs:[rcx+rbp*2+0x6e],cl
  42d07e:	imul   esp,DWORD PTR [rax],0x68
  42d081:	(bad)  
  42d082:	jae    0x42d0a4
  42d084:	(bad)  
  42d085:	gs outs dx,BYTE PTR gs:[rsi]
  42d088:	and    BYTE PTR [rbx+0x65],dh
  42d08b:	jbe    0x42d0f2
  42d08d:	jb     0x42d0f4
  42d08f:	add    BYTE PTR fs:[rbp+0x75],cl
  42d093:	ins    BYTE PTR es:[rdi],dx
  42d094:	je     0x42d0ff
  42d096:	push   0x6120706f
  42d09b:	je     0x42d111
  42d09d:	gs ins DWORD PTR es:[rdi],dx
  42d09f:	jo     0x42d115
  42d0a1:	gs add BYTE PTR fs:[rdx+0x61],al
  42d0a6:	and    BYTE PTR fs:[rbp+0x65],ch
  42d0aa:	jae    0x42d11f
  42d0ac:	(bad)  
  42d0ad:	add    BYTE PTR gs:[ebx+0x74],dl
  42d0b2:	(bad)  
  42d0b3:	je     0x42d11a
  42d0b5:	and    BYTE PTR [rsi+0x6f],ch
  42d0b8:	je     0x42d0da
  42d0ba:	jb     0x42d121
  42d0bc:	movsxd ebp,DWORD PTR [rdi+0x76]
  42d0bf:	gs jb  0x42d123
  42d0c2:	(bad)  
  42d0c3:	ins    BYTE PTR es:[rdi],dx
  42d0c4:	add    BYTE PTR gs:[rax],al
	...
  42d0cf:	add    BYTE PTR [rax],al
  42d0d1:	rex.WR
  42d0d2:	rex.XB add BYTE PTR [r8],al
  42d0d5:	add    BYTE PTR [rax],al
  42d0d7:	add    BYTE PTR [rax],al
  42d0d9:	rex.RXB
  42d0da:	rex.XB add BYTE PTR [r8],al
  42d0dd:	add    BYTE PTR [rax],al
  42d0df:	add    BYTE PTR [rax],dh
  42d0e1:	rol    DWORD PTR [rcx+0x0],0x0
	...
  42d0ed:	add    BYTE PTR [rax],al
  42d0ef:	add    BYTE PTR [rcx+0x72],al
  42d0f2:	addr32 jne 0x42d162
  42d0f5:	outs   dx,BYTE PTR gs:[rsi]
  42d0f7:	je     0x42d119
  42d0f9:	outs   dx,DWORD PTR fs:[rsi]
  42d0fb:	ins    DWORD PTR es:[rdi],dx
  42d0fc:	(bad)  
  42d0fd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  42d104:	jb     0x42d126
  42d106:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  42d10a:	rex.B
  42d10b:	rex.WB
  42d10c:	rex.WRX sub QWORD PTR [rax],r8
  42d10f:	rex.B jb 0x42d179
  42d112:	jne    0x42d181
  42d114:	outs   dx,BYTE PTR gs:[rsi]
  42d116:	je     0x42d138
  42d118:	jae    0x42d183
  42d11a:	outs   dx,BYTE PTR ds:[rsi]
  42d11b:	addr32 jne 0x42d18a
  42d11e:	(bad)  
  42d11f:	jb     0x42d18a
  42d121:	je     0x42d19c
  42d123:	and    BYTE PTR [rax],ch
  42d125:	push   rbx
  42d126:	rex.WB
  42d127:	rex.RXB
  42d128:	rex.WRX sub QWORD PTR [rax],r8
  42d12b:	add    BYTE PTR [rax],al
  42d12d:	add    BYTE PTR [rax],al
  42d12f:	add    BYTE PTR [rdi+0x76],cl
  42d132:	gs jb  0x42d19b
  42d135:	ins    BYTE PTR es:[rdi],dx
  42d136:	outs   dx,DWORD PTR ds:[rsi]
  42d137:	ja     0x42d159
  42d139:	jb     0x42d19c
  42d13b:	outs   dx,BYTE PTR ds:[rsi]
  42d13c:	and    BYTE PTR gs:[ebp+0x72],ah
  42d141:	jb     0x42d1b2
  42d143:	jb     0x42d165
  42d145:	sub    BYTE PTR [rdi+0x56],cl
  42d148:	rex.RB push r10
  42d14a:	rex.RX
  42d14b:	rex.WR
  42d14c:	rex.WRXB push r15
  42d14e:	sub    DWORD PTR [rax],eax
  42d150:	push   rax
  42d151:	(bad)  
  42d152:	jb     0x42d1c8
  42d154:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  42d15b:	jae    0x42d17d
  42d15d:	outs   dx,DWORD PTR ds:[rsi]
  42d15e:	data16 and BYTE PTR [rbx+0x69],dh
  42d162:	outs   dx,BYTE PTR ds:[esi]
  42d164:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42d16b:	and    BYTE PTR gs:[rax],ch
  42d16e:	push   rax
  42d16f:	rex.WR
  42d170:	rex.WRXB push r11
  42d172:	push   rbx
  42d173:	sub    DWORD PTR [rax],eax
  42d175:	add    BYTE PTR [rax],al
  42d177:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  42d17b:	(bad)  
  42d17c:	ins    BYTE PTR es:[rdi],dx
  42d17d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  42d181:	jae    0x42d1a3
  42d183:	outs   dx,DWORD PTR ds:[rsi]
  42d184:	data16 and BYTE PTR [rbx+0x69],dh
  42d188:	outs   dx,BYTE PTR ds:[esi]
  42d18a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42d191:	and    BYTE PTR gs:[rax],ch
  42d194:	push   rsp
  42d195:	rex.WR
  42d196:	rex.WRXB push r11
  42d198:	push   rbx
  42d199:	sub    DWORD PTR [rax],eax
  42d19b:	add    BYTE PTR [rax],al
  42d19d:	add    BYTE PTR [rax],al
  42d19f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42d1a3:	and    BYTE PTR [rdx+0x65],dh
  42d1a6:	jae    0x42d21d
  42d1a8:	ins    BYTE PTR es:[rdi],dx
  42d1a9:	je     0x42d1cb
  42d1ab:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  42d1b2:	jae    0x42d221
  42d1b4:	(bad)  
  42d1b5:	ins    BYTE PTR es:[rdi],dx
  42d1b6:	ins    BYTE PTR es:[rdi],dx
  42d1b7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42d1bb:	(bad)  
  42d1bc:	and    BYTE PTR gs:[rdx+0x65],dh
  42d1c0:	jo     0x42d234
  42d1c2:	gs jae 0x42d22a
  42d1c5:	outs   dx,BYTE PTR ds:[rsi]
  42d1c6:	je     0x42d22d
  42d1c8:	and    BYTE PTR fs:[rax],ch
  42d1cb:	push   rbp
  42d1cc:	rex.WRX
  42d1cd:	rex.R
  42d1ce:	rex.RB push r10
  42d1d0:	rex.RX
  42d1d1:	rex.WR
  42d1d2:	rex.WRXB push r15
  42d1d4:	sub    DWORD PTR [rax],eax
  42d1d6:	push   rbp
  42d1d7:	outs   dx,BYTE PTR ds:[rsi]
  42d1d8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42d1dc:	outs   dx,BYTE PTR ds:[rsi]
  42d1dd:	and    BYTE PTR [rbp+0x72],ah
  42d1e0:	jb     0x42d251
  42d1e2:	jb     0x42d1e4
  42d1e4:	add    BYTE PTR [rax],al
  42d1e6:	add    BYTE PTR [rax],al
  42d1e8:	pop    rdi
  42d1e9:	ins    DWORD PTR es:[rdi],dx
  42d1ea:	(bad)  
  42d1eb:	je     0x42d255
  42d1ed:	gs jb  0x42d262
  42d1f0:	sub    BYTE PTR [rcx],ch
  42d1f2:	cmp    ah,BYTE PTR [rax]
  42d1f4:	and    eax,0x6e692073
  42d1f9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6767fa72
  42d1ff:	sub    al,0x20
  42d201:	and    eax,0x20202967
  42d206:	sub    BYTE PTR [rdx+0x65],dh
  42d209:	je     0x42d281
  42d20b:	(bad)  
  42d20c:	ins    BYTE PTR es:[rdi],dx
  42d20d:	cmp    eax,0xa296725
  42d212:	add    BYTE PTR [rax],al
  42d214:	in     al,dx
  42d215:	lock (bad) 
  42d217:	jmp    FWORD PTR [rip+0xffffffff9cfffef0]        # 0xffffffff9d42d10d
  42d21d:	lock (bad) 
  42d21f:	jmp    FWORD PTR [rax+rsi*8-0xf430002]
  42d226:	(bad)  
  42d227:	dec    esp
  42d229:	lock (bad) 
  42d22b:	(bad)  
  42d22c:	fdivr  st(0),st
  42d22e:	(bad)  
  42d22f:	dec    DWORD PTR [rbp+0x69]
  42d232:	outs   dx,BYTE PTR ds:[rsi]
  42d233:	addr32 ja 0x42d263
  42d236:	ja     0x42d26e
  42d238:	xor    al,0x20
  42d23a:	jb     0x42d2b1
  42d23c:	outs   dx,BYTE PTR ds:[rsi]
  42d23d:	je     0x42d2a8
  42d23f:	ins    DWORD PTR es:[rdi],dx
  42d240:	and    BYTE PTR gs:[rsi+0x61],ah
  42d244:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  42d24c:	add    BYTE PTR [rax],al
  42d24e:	add    BYTE PTR [rax],al
  42d250:	rex.B
  42d251:	fs fs jb 0x42d2ba
  42d255:	jae    0x42d2ca
  42d257:	and    BYTE PTR [rip+0x61682070],ah        # 0x61aaf2cd
  42d25d:	jae    0x42d27f
  42d25f:	outs   dx,BYTE PTR ds:[rsi]
  42d260:	outs   dx,DWORD PTR ds:[rsi]
  42d261:	and    BYTE PTR [rcx+0x6d],ch
  42d264:	(bad)  
  42d265:	addr32 gs sub eax,0x74636573
  42d26c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  42d273:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  42d27a:	jne    0x42d2e1
  42d27c:	jb     0x42d2f7
  42d27e:	and    BYTE PTR [rsi+0x61],ah
  42d281:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  42d289:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a4f2f3
  42d28f:	je     0x42d2f6
  42d291:	jae    0x42d2b3
  42d293:	(bad)  
  42d294:	je     0x42d2b6
  42d296:	(bad)  
  42d297:	fs fs jb 0x42d300
  42d29b:	jae    0x42d310
  42d29d:	and    BYTE PTR [rip+0x70],ah        # 0x42d313
  42d2a3:	add    BYTE PTR [rax],al
  42d2a5:	add    BYTE PTR [rax],al
  42d2a7:	add    BYTE PTR [rax],ah
  42d2a9:	and    BYTE PTR [rsi+0x69],dl
  42d2ac:	jb     0x42d322
  42d2ae:	jne    0x42d311
  42d2b0:	ins    BYTE PTR es:[rdi],dx
  42d2b1:	push   rax
  42d2b2:	jb     0x42d323
  42d2b4:	je     0x42d31b
  42d2b6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  42d2ba:	(bad)  
  42d2bb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  42d2c3:	push   0x646f6320
  42d2c8:	and    BYTE PTR gs:[rax],dh
  42d2cb:	js     0x42d2f2
  42d2cd:	js     0x42d2cf
  42d2cf:	add    BYTE PTR [rax],ah
  42d2d1:	and    BYTE PTR [rbp+0x6e],dl
  42d2d4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42d2d8:	outs   dx,BYTE PTR ds:[rsi]
  42d2d9:	and    BYTE PTR [rax+0x73],dh
  42d2dc:	gs jne 0x42d343
  42d2df:	outs   dx,DWORD PTR ds:[rsi]
  42d2e0:	and    BYTE PTR [rdx+0x65],dh
  42d2e3:	ins    BYTE PTR es:[rdi],dx
  42d2e4:	outs   dx,DWORD PTR ds:[rsi]
  42d2e5:	movsxd esp,DWORD PTR [rcx+0x74]
  42d2e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  42d2ef:	je     0x42d360
  42d2f1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d2f4:	and    BYTE PTR [rsi+0x65],dh
  42d2f7:	jb     0x42d36c
  42d2f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42d300:	or     al,BYTE PTR [rax]
  42d302:	add    BYTE PTR [rax],al
  42d304:	add    BYTE PTR [rax],al
  42d306:	add    BYTE PTR [rax],al
  42d308:	and    BYTE PTR [rax],ah
  42d30a:	push   rbp
  42d30b:	outs   dx,BYTE PTR ds:[rsi]
  42d30c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42d310:	outs   dx,BYTE PTR ds:[rsi]
  42d311:	and    BYTE PTR [rax+0x73],dh
  42d314:	gs jne 0x42d37b
  42d317:	outs   dx,DWORD PTR ds:[rsi]
  42d318:	and    BYTE PTR [rdx+0x65],dh
  42d31b:	ins    BYTE PTR es:[rdi],dx
  42d31c:	outs   dx,DWORD PTR ds:[rsi]
  42d31d:	movsxd esp,DWORD PTR [rcx+0x74]
  42d320:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  42d327:	and    BYTE PTR [rbx+0x69],dh
  42d32a:	jp     0x42d391
  42d32c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4d0196
	...
  42d33e:	add    BYTE PTR [rax],al
  42d340:	cs jo  0x42d3a7
  42d343:	(bad)  
  42d344:	je     0x42d3a7
	...
  42d34e:	add    BYTE PTR [rax],al
  42d350:	cmp    al,0x0
  42d352:	jne    0x42d354
  42d354:	outs   dx,BYTE PTR ds:[rsi]
  42d355:	add    BYTE PTR [rbx+0x0],ch
  42d358:	outs   dx,BYTE PTR ds:[rsi]
  42d359:	add    BYTE PTR [rdi+0x0],ch
  42d35c:	ja     0x42d35e
  42d35e:	outs   dx,BYTE PTR ds:[rsi]
  42d35f:	add    BYTE PTR [rsi],bh
  42d361:	add    BYTE PTR [rax],al
  42d363:	add    BYTE PTR [rdi],bh
  42d365:	add    BYTE PTR [rax],al
  42d367:	add    BYTE PTR [rcx+0x0],al
  42d36a:	jae    0x42d36c
  42d36c:	jae    0x42d36e
  42d36e:	add    BYTE PTR gs:[rdx+0x0],dh
  42d372:	je     0x42d374
  42d374:	imul   eax,DWORD PTR [rax],0x6e006f
  42d37a:	and    BYTE PTR [rax],al
  42d37c:	data16 add BYTE PTR [rcx+0x0],ah
  42d380:	imul   eax,DWORD PTR [rax],0x65006c
  42d386:	add    BYTE PTR fs:[rcx],ah
  42d389:	add    BYTE PTR [rdx],cl
  42d38b:	add    BYTE PTR [rdx],cl
  42d38d:	add    BYTE PTR [rax+0x0],dl
  42d390:	jb     0x42d392
  42d392:	outs   dx,DWORD PTR ds:[rsi]
  42d393:	add    BYTE PTR [rdi+0x0],ah
  42d396:	jb     0x42d398
  42d398:	(bad)  
  42d399:	add    BYTE PTR [rbp+0x0],ch
  42d39c:	cmp    al,BYTE PTR [rax]
  42d39e:	and    BYTE PTR [rax],al
  42d3a0:	and    eax,0x73007700
  42d3a5:	add    BYTE PTR [rdx],cl
  42d3a7:	add    BYTE PTR [rsi+0x0],al
  42d3aa:	imul   eax,DWORD PTR [rax],0x65006c
  42d3b0:	cmp    al,BYTE PTR [rax]
  42d3b2:	and    BYTE PTR [rax],al
  42d3b4:	and    eax,0x73007700
  42d3b9:	add    BYTE PTR [rax+rax*1],ch
  42d3bc:	and    BYTE PTR [rax],al
  42d3be:	rex.WR add BYTE PTR [rcx+0x0],r13b
  42d3c2:	outs   dx,BYTE PTR ds:[rsi]
  42d3c3:	add    BYTE PTR [rbp+0x0],ah
  42d3c6:	and    BYTE PTR [rax],al
  42d3c8:	and    eax,0xa007500
  42d3cd:	add    BYTE PTR [rdx],cl
  42d3cf:	add    BYTE PTR [rbp+0x0],al
  42d3d2:	js     0x42d3d4
  42d3d4:	jo     0x42d3d6
  42d3d6:	jb     0x42d3d8
  42d3d8:	add    BYTE PTR gs:[rbx+0x0],dh
  42d3dc:	jae    0x42d3de
  42d3de:	imul   eax,DWORD PTR [rax],0x6e006f
  42d3e4:	cmp    al,BYTE PTR [rax]
  42d3e6:	and    BYTE PTR [rax],al
  42d3e8:	and    eax,0x73007700
  42d3ed:	add    BYTE PTR [rax],al
  42d3ef:	add    BYTE PTR [rip+0x73007700],ah        # 0x73434af5
  42d3f5:	add    BYTE PTR [rdx],cl
	...
  42d3ff:	add    BYTE PTR [rbp+0x0],cl
  42d402:	imul   eax,DWORD PTR [rax],0x47006e
  42d408:	push   rdi
  42d409:	add    BYTE PTR [rax],ah
  42d40b:	add    BYTE PTR [rdx+0x0],dl
  42d40e:	jne    0x42d410
  42d410:	outs   dx,BYTE PTR ds:[rsi]
  42d411:	add    BYTE PTR [rax+rax*1+0x69],dh
  42d415:	add    BYTE PTR [rbp+0x0],ch
  42d418:	add    BYTE PTR gs:[rax],ah
  42d41b:	add    BYTE PTR [rcx+0x0],al
  42d41e:	jae    0x42d420
  42d420:	jae    0x42d422
  42d422:	add    BYTE PTR gs:[rdx+0x0],dh
  42d426:	je     0x42d428
  42d428:	imul   eax,DWORD PTR [rax],0x6e006f
  42d42e:	add    BYTE PTR [rax],al
  42d430:	rex.WRX (bad) 
  42d432:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  42d436:	data16 add BYTE PTR [rax],ch
  42d439:	add    BYTE PTR [rsi+0x0],ch
  42d43c:	jne    0x42d43e
  42d43e:	ins    BYTE PTR es:[rdi],dx
  42d43f:	add    BYTE PTR [rax+rax*1+0x29],ch
  42d443:	add    BYTE PTR [rax],al
  42d445:	add    BYTE PTR [rax],ch
  42d447:	outs   dx,BYTE PTR ds:[rsi]
  42d448:	jne    0x42d4b6
  42d44a:	ins    BYTE PTR es:[rdi],dx
  42d44b:	sub    DWORD PTR [rax],eax
  42d44d:	push   rax
  42d44e:	push   rdx
  42d44f:	rex.WB
  42d450:	rex.WRX push rsp
  42d452:	rex.RX pop rdi
  42d454:	rex.RB pop r8
  42d456:	push   rax
  42d457:	rex.WRXB
  42d458:	rex.WRX
  42d459:	rex.RB
  42d45a:	rex.WRX push rsp
  42d45c:	pop    rdi
  42d45d:	rex.R
  42d45e:	rex.WB
  42d45f:	rex.RXB
  42d460:	rex.WB push r12
  42d462:	push   rbx
  42d463:	add    BYTE PTR [rax+rbp*1+0x291cffff],bl
  42d46a:	(bad)  
  42d46b:	call   FWORD PTR [rcx+rbp*1]
  42d46e:	(bad)  
  42d46f:	(bad)  
  42d470:	jl     0x42d49a
  42d472:	(bad)  
  42d473:	call   FWORD PTR [rcx+rbp*1]
  42d476:	(bad)  
  42d477:	dec    esi
  42d479:	sub    bh,bh
  42d47b:	call   FWORD PTR [rcx+rbp*1]
  42d47e:	(bad)  
  42d47f:	(bad)  
  42d480:	mov    esp,0x1cffff28
  42d485:	sub    edi,edi
  42d487:	call   FWORD PTR [rcx+rbp*1]
  42d48a:	(bad)  
  42d48b:	(bad)  
  42d48c:	fsubr  QWORD PTR [rax]
  42d48e:	(bad)  
  42d48f:	call   FWORD PTR [rax+rbp*1-0x1]
  42d493:	call   FWORD PTR [rcx+rbp*1]
  42d496:	(bad)  
  42d497:	(bad)  
  42d498:	cmp    al,0x28
  42d49a:	(bad)  
  42d49b:	call   FWORD PTR [rax+rbp*1]
  42d49e:	(bad)  
  42d49f:	call   FWORD PTR [rcx+rbp*1]
  42d4a2:	(bad)  
  42d4a3:	(bad)  
  42d4a4:	cld    
  42d4a5:	(bad)  
  42d4a6:	(bad)  
  42d4a7:	call   FWORD PTR [rcx+rbp*1]
  42d4aa:	(bad)  
  42d4ab:	call   FWORD PTR [rcx+rbp*1]
  42d4ae:	(bad)  
  42d4af:	call   FWORD PTR [rcx+rbp*1]
  42d4b2:	(bad)  
  42d4b3:	call   FWORD PTR [rcx+rbp*1]
  42d4b6:	(bad)  
  42d4b7:	call   FWORD PTR [rcx+rbp*1]
  42d4ba:	(bad)  
  42d4bb:	call   FWORD PTR [rcx+rbp*1]
  42d4be:	(bad)  
  42d4bf:	call   FWORD PTR [rcx+rbp*1]
  42d4c2:	(bad)  
  42d4c3:	call   FWORD PTR [rcx+rbp*1]
  42d4c6:	(bad)  
  42d4c7:	call   FWORD PTR [rcx+rbp*1]
  42d4ca:	(bad)  
  42d4cb:	call   FWORD PTR [rcx+rbp*1]
  42d4ce:	(bad)  
  42d4cf:	call   FWORD PTR [rcx+rbp*1]
  42d4d2:	(bad)  
  42d4d3:	call   FWORD PTR [rcx+rbp*1]
  42d4d6:	(bad)  
  42d4d7:	call   FWORD PTR [rcx+rbp*1]
  42d4da:	(bad)  
  42d4db:	call   FWORD PTR [rcx+rbp*1]
  42d4de:	(bad)  
  42d4df:	call   FWORD PTR [rcx+rbp*1]
  42d4e2:	(bad)  
  42d4e3:	call   FWORD PTR [rcx+rbp*1]
  42d4e6:	(bad)  
  42d4e7:	dec    esi
  42d4e9:	(bad)  
  42d4ea:	(bad)  
  42d4eb:	call   FWORD PTR [rcx+rbp*1]
  42d4ee:	(bad)  
  42d4ef:	call   FWORD PTR [rdi+riz*1+0x291cffff]
  42d4f6:	(bad)  
  42d4f7:	jmp    FWORD PTR [rbp+0x27]
  42d4fa:	(bad)  
  42d4fb:	(bad)  
  42d4fc:	(bad)  
  42d4fd:	(bad)  
  42d4fe:	(bad)  
  42d4ff:	call   QWORD PTR [rcx]
  42d501:	(bad)  
  42d502:	(bad)  
  42d503:	call   FWORD PTR [rcx+rbp*1]
  42d506:	(bad)  
  42d507:	(bad)  
  42d508:	in     al,dx
  42d509:	es (bad) 
  42d50b:	call   FWORD PTR [rcx+rbp*1]
  42d50e:	(bad)  
  42d50f:	call   FWORD PTR [rcx+rbp*1]
  42d512:	(bad)  
  42d513:	dec    esp
  42d515:	es (bad) 
  42d517:	call   FWORD PTR [rcx+rbp*1]
  42d51a:	(bad)  
  42d51b:	call   FWORD PTR [rcx+rbp*1]
  42d51e:	(bad)  
  42d51f:	call   FWORD PTR [rcx+rbp*1]
  42d522:	(bad)  
  42d523:	call   FWORD PTR [rcx+rbp*1]
  42d526:	(bad)  
  42d527:	call   FWORD PTR [rcx+rbp*1]
  42d52a:	(bad)  
  42d52b:	call   FWORD PTR [rcx+rbp*1]
  42d52e:	(bad)  
  42d52f:	call   FWORD PTR [rdi+0x29]
  42d532:	(bad)  
  42d533:	call   FWORD PTR [rcx+rbp*1]
  42d536:	(bad)  
  42d537:	call   FWORD PTR [rcx+rbp*1]
  42d53a:	(bad)  
  42d53b:	call   FWORD PTR [rcx+rbp*1]
  42d53e:	(bad)  
  42d53f:	call   FWORD PTR [rcx+rbp*1]
  42d542:	(bad)  
  42d543:	call   FWORD PTR [rbp+riz*1+0x291cffff]
  42d54a:	(bad)  
  42d54b:	call   FWORD PTR [rcx+rbp*1]
  42d54e:	(bad)  
  42d54f:	call   FWORD PTR [rcx+rbp*1]
  42d552:	(bad)  
  42d553:	call   FWORD PTR [rcx+rbp*1]
  42d556:	(bad)  
  42d557:	call   FWORD PTR [rcx+rbp*1]
  42d55a:	(bad)  
  42d55b:	call   FWORD PTR [rcx+rbp*1]
  42d55e:	(bad)  
  42d55f:	call   FWORD PTR [rcx+rbp*1]
  42d562:	(bad)  
  42d563:	call   FWORD PTR [rcx+rbp*1]
  42d566:	(bad)  
  42d567:	jmp    FWORD PTR [rsi+riz*1]
  42d56a:	(bad)  
  42d56b:	call   FWORD PTR [rcx+rbp*1]
  42d56e:	(bad)  
  42d56f:	(bad)  
  42d570:	in     eax,dx
  42d571:	and    eax,0x266cffff
  42d576:	(bad)  
  42d577:	call   FWORD PTR [rbp+riz*1-0x1]
  42d57b:	call   FWORD PTR ds:0x24afffff
  42d582:	(bad)  
  42d583:	(bad)  
  42d584:	in     al,dx
  42d585:	and    al,0xff
  42d587:	jmp    FWORD PTR [rsi+riz*1-0x1]
  42d58b:	dec    DWORD PTR [rsp+0x291cffff]
  42d592:	(bad)  
  42d593:	call   FWORD PTR [rsp-0x1]
  42d597:	jmp    FWORD PTR [rsp]
  42d59a:	(bad)  
  42d59b:	(bad)  
  42d59c:	in     al,dx
  42d59d:	and    edi,edi
  42d59f:	call   FWORD PTR [rbp+riz*1+0x23acffff]
  42d5a6:	(bad)  
  42d5a7:	call   FWORD PTR [rcx+rbp*1]
  42d5aa:	(bad)  
  42d5ab:	call   FWORD PTR [rcx+rbp*1]
  42d5ae:	(bad)  
  42d5af:	jmp    QWORD PTR [rcx+0x23]
  42d5b2:	(bad)  
  42d5b3:	dec    DWORD PTR [rsp+0x259cffff]
  42d5ba:	(bad)  
  42d5bb:	call   FWORD PTR [rcx+rbp*1]
  42d5be:	(bad)  
  42d5bf:	call   FWORD PTR [rcx+rbp*1]
  42d5c2:	(bad)  
  42d5c3:	call   FWORD PTR [rbp+riz*1+0x291cffff]
  42d5ca:	(bad)  
  42d5cb:	dec    DWORD PTR [rsp+0x6e49ffff]
  42d5d2:	imul   bp,WORD PTR [rsi+0x69],0x7974
  42d5d8:	add    BYTE PTR [rsi+0x61],cl
  42d5db:	rex.WRX add BYTE PTR [rax],r14b
  42d5de:	add    BYTE PTR [rax],al
  42d5e0:	(bad)  
  42d5e1:	sub    eax,0x2d04ffff
  42d5e6:	(bad)  
  42d5e7:	inc    DWORD PTR [rbp*1+0x2e40ffff]
  42d5ee:	(bad)  
  42d5ef:	call   QWORD PTR [rbx]
  42d5f1:	cs (bad) 
  42d5f3:	inc    DWORD PTR [rax]
	...
  42d5fd:	add    al,bh
  42d5ff:	(bad)  
  42d600:	(bad)  
  42d601:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42d603:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  42d609:	enter  0x8b60,0x28
  42d60d:	mov    al,dh
  42d60f:	(bad)  
  42d610:	sti    
  42d611:	jns    0x42d5b2
  42d613:	push   rax
  42d614:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  42d618:	add    al,0xfa
  42d61a:	jge    0x42d5b9
  42d61c:	(bad)  
  42d61d:	sub    eax,0x5a323c94
  42d622:	rex.RXB push r13
  42d624:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  42d628:	add    BYTE PTR [rax],al
  42d62a:	add    BYTE PTR [rax],al
  42d62c:	add    BYTE PTR [rax],al
  42d62e:	lock (bad) 
  42d630:	add    BYTE PTR [rax],al
  42d632:	add    BYTE PTR [rax],al
  42d634:	add    BYTE PTR [rax],al
  42d636:	and    al,0x40
  42d638:	add    BYTE PTR [rax],al
  42d63a:	add    BYTE PTR [rax],al
  42d63c:	add    BYTE PTR [rax],al
  42d63e:	or     BYTE PTR [rax+0x0],al
  42d641:	add    BYTE PTR [rax],al
  42d643:	add    BYTE PTR [rax],al
  42d645:	add    BYTE PTR [rax+rax*2],bl
  42d648:	add    BYTE PTR [rax],al
  42d64a:	add    BYTE PTR [rax],al
  42d64c:	add    BYTE PTR [rax],al
  42d64e:	adc    al,0x40
  42d650:	add    BYTE PTR [rax],al
  42d652:	add    BYTE PTR [rax],al
  42d654:	add    BYTE PTR [rax],al
  42d656:	add    BYTE PTR [rax+0x0],al
	...
  42d664:	add    BYTE PTR [rax],al
  42d666:	loopne 0x42d6a7
	...
  42d680:	add    eax,0x19000000
  42d685:	add    BYTE PTR [rax],al
  42d687:	add    BYTE PTR [rbp+0x0],bh
	...
  42d6c6:	lock (bad) 
  42d6c8:	add    BYTE PTR [rax],al
  42d6ca:	add    BYTE PTR [rax],al
  42d6cc:	add    BYTE PTR [rax],al
  42d6ce:	and    al,0x40
  42d6d0:	add    BYTE PTR [rax],al
  42d6d2:	add    BYTE PTR [rax],al
  42d6d4:	add    BYTE PTR [rax],al
  42d6d6:	pop    rcx
  42d6d7:	add    BYTE PTR [rax],al
  42d6da:	add    BYTE PTR [rax],al
  42d6dc:	add    BYTE PTR [rax-0x71],al
  42d6df:	add    BYTE PTR [rax],al
  42d6e2:	add    BYTE PTR [rax],al
  42d6e4:	add    BYTE PTR [rax+0x40c3],cl
  42d6ea:	add    BYTE PTR [rax],al
  42d6ec:	add    BYTE PTR [rdx-0x8],ch
  42d6ef:	add    BYTE PTR [rax],al
  42d6f2:	add    BYTE PTR [rax],al
  42d6f4:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  42d6fc:	rcl    BYTE PTR [rdx],1
  42d6fe:	movsxd eax,DWORD PTR [rcx+0x0]
  42d701:	add    BYTE PTR [rax],al
  42d703:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  42d70a:	add    BYTE PTR [rax],al
  42d70c:	gs int 0xcd
  42d70f:	add    BYTE PTR [r8],al
  42d712:	add    BYTE PTR [rax],ah
  42d714:	pop    rdi
  42d715:	movabs al,ds:0x4876e80000004202
  42d71e:	(bad)  
  42d71f:	rex.X add BYTE PTR [rax],al
  42d722:	add    BYTE PTR [rdx+0x426d1a94],ah
  42d728:	add    BYTE PTR [rax],al
  42d72a:	rex in eax,0x9c
  42d72d:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  42d733:	(bad)  
  42d734:	(bad)  
  42d735:	mov    esp,0x42d6
  42d73a:	xor    al,0x26
  42d73c:	cmc    
  42d73d:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  42d741:	and    al,0x37
  42d744:	jns    0x42d709
  42d746:	rex.B
  42d747:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  42d74e:	jbe    0x42d793
  42d750:	add    al,cl
  42d752:	rex.WRX
  42d753:	ins    DWORD PTR es:[edi],dx
  42d755:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  42d75c:	in     al,0x58
  42d75e:	loope  0x42d7a3
  42d760:	rex mov WORD PTR [rbp+0x15af1d78],?
  42d767:	rex.R push rax
  42d769:	out    dx,eax
  42d76a:	loop   0x42d742
  42d76c:	in     al,0x1a
  42d76e:	rex.WXB
  42d76f:	rex.R xchg edx,eax
  42d771:	(bad)  
  42d772:	rex.WRB (bad) 
  42d774:	iret   
  42d775:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  42d77b:	add    BYTE PTR [rax],al
  42d77d:	add    BYTE PTR [rax],al
  42d77f:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  42d786:	pushf  
  42d787:	cmp    al,0x33
  42d789:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42d78a:	test   al,0xd5
  42d78c:	and    esi,esi
  42d78e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd87cc3c
  42d795:	shld   DWORD PTR [rdx],esi,cl
  42d798:	popf   
  42d799:	xchg   edi,eax
  42d79a:	mov    edi,cs
  42d79c:	or     BYTE PTR [rdx+0x6f43255b],bh
  42d7a2:	lods   al,BYTE PTR ds:[rsi]
  42d7a3:	sub    BYTE PTR fs:[rsi],al
  42d7a6:	enter  0xa,0x0
	...
  42d7be:	add    BYTE PTR [rax],al
  42d7c0:	add    BYTE PTR [rax-0x3c86c820],al
  42d7c6:	rex.B
  42d7c7:	rex.XB (bad) 
  42d7c9:	outs   dx,BYTE PTR ds:[rsi]
  42d7ca:	add    eax,0x93b8b5b5
  42d7cf:	rex.RX cmc 
  42d7d1:	stc    
  42d7d2:	(bad)  
  42d7d3:	jmp    0x4d7b26db
  42d7d8:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778bd10e
  42d7de:	(bad)  
  42d7df:	pop    rdx
  42d7e0:	cmp    al,0xbf
  42d7e2:	jae    0x42d863
  42d7e4:	fisttp QWORD PTR [rdi+0x15]
  42d7e7:	jne    0x42d7e9
	...
  42d7fd:	add    BYTE PTR [rax],al
  42d7ff:	add    BYTE PTR [rbp+0x0],ch
  42d802:	jae    0x42d804
  42d804:	jbe    0x42d806
  42d806:	movsxd eax,DWORD PTR [rax]
  42d808:	jb     0x42d80a
  42d80a:	je     0x42d80c
  42d80c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  42d811:	add    BYTE PTR [rax+rax*1+0x0],ch
  42d815:	add    BYTE PTR [rdi+0x73],bl
  42d818:	gs je  0x42d87a
  42d81b:	outs   dx,DWORD PTR ds:[rsi]
  42d81c:	jne    0x42d892
  42d81e:	jo     0x42d895
  42d820:	je     0x42d881
  42d822:	outs   dx,WORD PTR ds:[rsi]
  42d824:	jb     0x42d893
  42d826:	(bad)  
  42d827:	je     0x42d829
  42d829:	pop    rdi
  42d82a:	addr32 gs je 0x42d88d
  42d82e:	outs   dx,DWORD PTR ds:[rsi]
  42d82f:	jne    0x42d8a5
  42d831:	jo     0x42d8a8
  42d833:	je     0x42d894
  42d835:	outs   dx,WORD PTR ds:[rsi]
  42d837:	jb     0x42d8a6
  42d839:	(bad)  
  42d83a:	je     0x42d83c
  42d83c:	add    BYTE PTR [rax],al
  42d83e:	add    BYTE PTR [rax],al
  42d840:	and    ch,al
  42d842:	add    DWORD PTR [rax],eax
	...
  42d850:	adc    BYTE PTR [rbx+0x42],bl
	...
  42d85f:	add    BYTE PTR [rax],ah
  42d861:	pop    rbx
  42d862:	rex.X add BYTE PTR [rax],al
	...
  42d86d:	add    BYTE PTR [rax],al
  42d86f:	add    BYTE PTR [rax+0x4239],al
	...
  42d87d:	add    BYTE PTR [rax],al
  42d87f:	add    ah,ah
  42d881:	in     al,0x42
	...
  42d88f:	add    al,al
  42d891:	in     al,0x42
	...
  42d89f:	add    al,ah
  42d8a1:	rol    BYTE PTR [rdx+0x0],1
	...
  42d8b0:	add    BYTE PTR [rax],al
  42d8b2:	add    BYTE PTR [rax],al
	...
  42d8bd:	add    BYTE PTR [rax],al
  42d8bf:	add    BYTE PTR [rax+rsi*2+0x43],bh
	...
  42d8ce:	add    BYTE PTR [rax],al
  42d8d0:	(bad)  
  42d8d1:	jo     0x42d916
	...
  42d8df:	add    ah,ch
  42d8e1:	jo     0x42d926
	...
  42d8ef:	add    BYTE PTR [rcx+rsi*2],dh
  42d8f2:	rex.XB add BYTE PTR [r8],al
	...
  42d8fd:	add    BYTE PTR [rax],al
  42d8ff:	add    BYTE PTR [rcx+rsi*2+0x43],bh
	...
  42d90f:	add    BYTE PTR [rax+0x4d],al
  42d912:	rex.XB add BYTE PTR [r8],al
	...
  42d91d:	add    BYTE PTR [rax],al
  42d91f:	add    BYTE PTR [rax],bh
  42d921:	pop    rbx
  42d922:	rex.XB add BYTE PTR [r8],al
	...
  42d92d:	add    BYTE PTR [rax],al
  42d92f:	add    BYTE PTR [rax],dh
  42d931:	pop    rbx
  42d932:	rex.XB add BYTE PTR [r8],al
	...
  42d93d:	add    BYTE PTR [rax],al
  42d93f:	add    BYTE PTR [rax],ah
  42d941:	pop    rbx
  42d942:	rex.XB add BYTE PTR [r8],al
	...
  42d94d:	add    BYTE PTR [rax],al
  42d94f:	add    BYTE PTR [rax],ch
  42d951:	pop    rbx
  42d952:	rex.XB add BYTE PTR [r8],al
	...
  42d95d:	add    BYTE PTR [rax],al
  42d95f:	add    al,al
  42d961:	(bad)  
  42d962:	rex.X add BYTE PTR [rax],al
	...
  42d971:	movabs al,ds:0x43
  42d97a:	add    BYTE PTR [rax],al
  42d97c:	add    BYTE PTR [rax],al
  42d97e:	add    BYTE PTR [rax],al
  42d980:	adc    BYTE PTR [rax+0x43],ah
	...
  42d98e:	add    BYTE PTR [rax],al
  42d990:	sbb    BYTE PTR [rax+0x43],ah
	...
  42d99e:	add    BYTE PTR [rax],al
  42d9a0:	xor    BYTE PTR [rax+0x43],ah
	...
  42d9ae:	add    BYTE PTR [rax],al
  42d9b0:	rol    BYTE PTR [rsi+0x43],1
	...
  42d9bf:	add    BYTE PTR [rax],dl
  42d9c1:	rex.WRB
  42d9c2:	rex.XB add BYTE PTR [r8],al
	...
  42d9cd:	add    BYTE PTR [rax],al
  42d9cf:	add    al,al
  42d9d1:	retf   0x41
	...
  42d9e0:	adc    dl,al
  42d9e2:	add    BYTE PTR [r8],al
	...
  42d9ed:	add    BYTE PTR [rax],al
  42d9ef:	add    al,al
  42d9f1:	rex.WR
  42d9f2:	rex.XB add BYTE PTR [r8],al
	...
  42d9fd:	add    BYTE PTR [rax],al
  42d9ff:	add    BYTE PTR [rsp+rbp*2+0x43],ah
	...
  42da0e:	add    BYTE PTR [rax],al
  42da10:	xor    al,0x6d
  42da12:	rex.XB add BYTE PTR [r8],al
	...
  42da1d:	add    BYTE PTR [rax],al
  42da1f:	add    BYTE PTR [rax+0x4241],al
	...
  42da2d:	add    BYTE PTR [rax],al
  42da2f:	add    al,dh
  42da31:	rex.WR
  42da32:	rex.XB add BYTE PTR [r8],al
	...
  42da3d:	add    BYTE PTR [rax],al
  42da3f:	add    al,ah
  42da41:	rex.RX
  42da42:	rex.XB add BYTE PTR [r8],al
	...
  42da4d:	add    BYTE PTR [rax],al
  42da4f:	add    al,bl
  42da51:	rex.WR
  42da52:	rex.XB add BYTE PTR [r8],al
	...
  42da5d:	add    BYTE PTR [rax],al
  42da5f:	add    ah,dl
  42da61:	rex.WR
  42da62:	rex.XB add BYTE PTR [r8],al
	...
  42da6d:	add    BYTE PTR [rax],al
  42da6f:	add    al,dl
  42da71:	rex.WR
  42da72:	rex.XB add BYTE PTR [r8],al
	...
  42da7d:	add    BYTE PTR [rax],al
  42da7f:	add    BYTE PTR [rax],cl
  42da81:	rex.XB add BYTE PTR ss:[r8],al
	...
  42da8d:	add    BYTE PTR [rax],al
  42da8f:	add    BYTE PTR [rbx+0x4279],dh
	...
  42da9d:	add    BYTE PTR [rax],al
  42da9f:	add    BYTE PTR [rdi+0x43],al
  42daa2:	rex.XB cmp spl,BYTE PTR [r8]
  42daa5:	sub    BYTE PTR [rdi+0x4e],al
  42daa8:	push   rbp
  42daa9:	sub    DWORD PTR [rax],esp
  42daab:	xor    al,0x2e
  42daad:	cmp    DWORD PTR [rsi],ebp
  42daaf:	xor    al,0x0
	...
  42dabd:	add    BYTE PTR [rax],al
  42dabf:	add    BYTE PTR [rdi+0x43],al
  42dac2:	rex.XB cmp spl,BYTE PTR [r8]
  42dac5:	sub    BYTE PTR [rdi+0x4e],al
  42dac8:	push   rbp
  42dac9:	sub    DWORD PTR [rax],esp
  42dacb:	xor    al,0x2e
  42dacd:	cmp    DWORD PTR [rsi],ebp
  42dacf:	xor    al,0x0
	...
  42dadd:	add    BYTE PTR [rax],al
  42dadf:	add    BYTE PTR [rdi+0x43],al
  42dae2:	rex.XB cmp spl,BYTE PTR [r8]
  42dae5:	sub    BYTE PTR [rdi+0x4e],al
  42dae8:	push   rbp
  42dae9:	sub    DWORD PTR [rax],esp
  42daeb:	xor    al,0x2e
  42daed:	cmp    DWORD PTR [rsi],ebp
  42daef:	xor    al,0x0
	...
  42dafd:	add    BYTE PTR [rax],al
  42daff:	add    BYTE PTR [rdi+0x43],al
  42db02:	rex.XB cmp spl,BYTE PTR [r8]
  42db05:	sub    BYTE PTR [rdi+0x4e],al
  42db08:	push   rbp
  42db09:	sub    DWORD PTR [rax],esp
  42db0b:	xor    al,0x2e
  42db0d:	cmp    DWORD PTR [rsi],ebp
  42db0f:	xor    al,0x0
	...
  42db1d:	add    BYTE PTR [rax],al
  42db1f:	add    BYTE PTR [rdi+0x43],al
  42db22:	rex.XB cmp spl,BYTE PTR [r8]
  42db25:	sub    BYTE PTR [rdi+0x4e],al
  42db28:	push   rbp
  42db29:	sub    DWORD PTR [rax],esp
  42db2b:	xor    al,0x2e
  42db2d:	cmp    DWORD PTR [rsi],ebp
  42db2f:	xor    al,0x0
	...
  42db3d:	add    BYTE PTR [rax],al
  42db3f:	add    BYTE PTR [rdi+0x43],al
  42db42:	rex.XB cmp spl,BYTE PTR [r8]
  42db45:	sub    BYTE PTR [rdi+0x4e],al
  42db48:	push   rbp
  42db49:	sub    DWORD PTR [rax],esp
  42db4b:	xor    al,0x2e
  42db4d:	cmp    DWORD PTR [rsi],ebp
  42db4f:	xor    al,0x0
	...
  42db5d:	add    BYTE PTR [rax],al
  42db5f:	add    BYTE PTR [rdi+0x43],al
  42db62:	rex.XB cmp spl,BYTE PTR [r8]
  42db65:	sub    BYTE PTR [rdi+0x4e],al
  42db68:	push   rbp
  42db69:	sub    DWORD PTR [rax],esp
  42db6b:	xor    al,0x2e
  42db6d:	cmp    DWORD PTR [rsi],ebp
  42db6f:	xor    al,0x0
	...
  42db7d:	add    BYTE PTR [rax],al
  42db7f:	add    BYTE PTR [rdi+0x43],al
  42db82:	rex.XB cmp spl,BYTE PTR [r8]
  42db85:	sub    BYTE PTR [rdi+0x4e],al
  42db88:	push   rbp
  42db89:	sub    DWORD PTR [rax],esp
  42db8b:	xor    al,0x2e
  42db8d:	cmp    DWORD PTR [rsi],ebp
  42db8f:	xor    al,0x0
	...
  42db9d:	add    BYTE PTR [rax],al
  42db9f:	add    BYTE PTR [rdi+0x43],al
  42dba2:	rex.XB cmp spl,BYTE PTR [r8]
  42dba5:	sub    BYTE PTR [rdi+0x4e],al
  42dba8:	push   rbp
  42dba9:	sub    DWORD PTR [rax],esp
  42dbab:	xor    al,0x2e
  42dbad:	cmp    DWORD PTR [rsi],ebp
  42dbaf:	xor    al,0x0
	...
  42dbbd:	add    BYTE PTR [rax],al
  42dbbf:	add    BYTE PTR [rdi+0x43],al
  42dbc2:	rex.XB cmp spl,BYTE PTR [r8]
  42dbc5:	sub    BYTE PTR [rdi+0x4e],al
  42dbc8:	push   rbp
  42dbc9:	sub    DWORD PTR [rax],esp
  42dbcb:	xor    al,0x2e
  42dbcd:	cmp    DWORD PTR [rsi],ebp
  42dbcf:	xor    al,0x0
	...
  42dbdd:	add    BYTE PTR [rax],al
  42dbdf:	add    BYTE PTR [rdi+0x43],al
  42dbe2:	rex.XB cmp spl,BYTE PTR [r8]
  42dbe5:	sub    BYTE PTR [rdi+0x4e],al
  42dbe8:	push   rbp
  42dbe9:	sub    DWORD PTR [rax],esp
  42dbeb:	xor    al,0x2e
  42dbed:	cmp    DWORD PTR [rsi],ebp
  42dbef:	xor    al,0x0
	...
  42dbfd:	add    BYTE PTR [rax],al
  42dbff:	add    BYTE PTR [rdi+0x43],al
  42dc02:	rex.XB cmp spl,BYTE PTR [r8]
  42dc05:	sub    BYTE PTR [rdi+0x4e],al
  42dc08:	push   rbp
  42dc09:	sub    DWORD PTR [rax],esp
  42dc0b:	xor    al,0x2e
  42dc0d:	cmp    DWORD PTR [rsi],ebp
  42dc0f:	xor    al,0x0
	...
  42dc1d:	add    BYTE PTR [rax],al
  42dc1f:	add    BYTE PTR [rdi+0x43],al
  42dc22:	rex.XB cmp spl,BYTE PTR [r8]
  42dc25:	sub    BYTE PTR [rdi+0x4e],al
  42dc28:	push   rbp
  42dc29:	sub    DWORD PTR [rax],esp
  42dc2b:	xor    al,0x2e
  42dc2d:	cmp    DWORD PTR [rsi],ebp
  42dc2f:	xor    al,0x0
	...
  42dc3d:	add    BYTE PTR [rax],al
  42dc3f:	add    BYTE PTR [rdi+0x43],al
  42dc42:	rex.XB cmp spl,BYTE PTR [r8]
  42dc45:	sub    BYTE PTR [rdi+0x4e],al
  42dc48:	push   rbp
  42dc49:	sub    DWORD PTR [rax],esp
  42dc4b:	xor    al,0x2e
  42dc4d:	cmp    DWORD PTR [rsi],ebp
  42dc4f:	xor    al,0x0
	...
  42dc5d:	add    BYTE PTR [rax],al
  42dc5f:	add    BYTE PTR [rdi+0x43],al
  42dc62:	rex.XB cmp spl,BYTE PTR [r8]
  42dc65:	sub    BYTE PTR [rdi+0x4e],al
  42dc68:	push   rbp
  42dc69:	sub    DWORD PTR [rax],esp
  42dc6b:	xor    al,0x2e
  42dc6d:	cmp    DWORD PTR [rsi],ebp
  42dc6f:	xor    al,0x0
	...
  42dc7d:	add    BYTE PTR [rax],al
  42dc7f:	add    BYTE PTR [rdi+0x43],al
  42dc82:	rex.XB cmp spl,BYTE PTR [r8]
  42dc85:	sub    BYTE PTR [rdi+0x4e],al
  42dc88:	push   rbp
  42dc89:	sub    DWORD PTR [rax],esp
  42dc8b:	xor    al,0x2e
  42dc8d:	cmp    DWORD PTR [rsi],ebp
  42dc8f:	xor    al,0x0
	...
  42dc9d:	add    BYTE PTR [rax],al
  42dc9f:	add    BYTE PTR [rdi+0x43],al
  42dca2:	rex.XB cmp spl,BYTE PTR [r8]
  42dca5:	sub    BYTE PTR [rdi+0x4e],al
  42dca8:	push   rbp
  42dca9:	sub    DWORD PTR [rax],esp
  42dcab:	xor    al,0x2e
  42dcad:	cmp    DWORD PTR [rsi],ebp
  42dcaf:	xor    al,0x0
	...
  42dcbd:	add    BYTE PTR [rax],al
  42dcbf:	add    BYTE PTR [rdi+0x43],al
  42dcc2:	rex.XB cmp spl,BYTE PTR [r8]
  42dcc5:	sub    BYTE PTR [rdi+0x4e],al
  42dcc8:	push   rbp
  42dcc9:	sub    DWORD PTR [rax],esp
  42dccb:	xor    al,0x2e
  42dccd:	cmp    DWORD PTR [rsi],ebp
  42dccf:	xor    al,0x0
	...
  42dcdd:	add    BYTE PTR [rax],al
  42dcdf:	add    BYTE PTR [rdi+0x43],al
  42dce2:	rex.XB cmp spl,BYTE PTR [r8]
  42dce5:	sub    BYTE PTR [rdi+0x4e],al
  42dce8:	push   rbp
  42dce9:	sub    DWORD PTR [rax],esp
  42dceb:	xor    al,0x2e
  42dced:	cmp    DWORD PTR [rsi],ebp
  42dcef:	xor    al,0x0
	...
  42dcfd:	add    BYTE PTR [rax],al
  42dcff:	add    BYTE PTR [rdi+0x43],al
  42dd02:	rex.XB cmp spl,BYTE PTR [r8]
  42dd05:	sub    BYTE PTR [rdi+0x4e],al
  42dd08:	push   rbp
  42dd09:	sub    DWORD PTR [rax],esp
  42dd0b:	xor    al,0x2e
  42dd0d:	cmp    DWORD PTR [rsi],ebp
  42dd0f:	xor    al,0x0
	...
  42dd1d:	add    BYTE PTR [rax],al
  42dd1f:	add    BYTE PTR [rdi+0x43],al
  42dd22:	rex.XB cmp spl,BYTE PTR [r8]
  42dd25:	sub    BYTE PTR [rdi+0x4e],al
  42dd28:	push   rbp
  42dd29:	sub    DWORD PTR [rax],esp
  42dd2b:	xor    al,0x2e
  42dd2d:	cmp    DWORD PTR [rsi],ebp
  42dd2f:	xor    al,0x0
	...
  42dd3d:	add    BYTE PTR [rax],al
  42dd3f:	add    BYTE PTR [rdi+0x43],al
  42dd42:	rex.XB cmp spl,BYTE PTR [r8]
  42dd45:	sub    BYTE PTR [rdi+0x4e],al
  42dd48:	push   rbp
  42dd49:	sub    DWORD PTR [rax],esp
  42dd4b:	xor    al,0x2e
  42dd4d:	cmp    DWORD PTR [rsi],ebp
  42dd4f:	xor    al,0x0
	...
  42dd5d:	add    BYTE PTR [rax],al
  42dd5f:	add    BYTE PTR [rdi+0x43],al
  42dd62:	rex.XB cmp spl,BYTE PTR [r8]
  42dd65:	sub    BYTE PTR [rdi+0x4e],al
  42dd68:	push   rbp
  42dd69:	sub    DWORD PTR [rax],esp
  42dd6b:	xor    al,0x2e
  42dd6d:	cmp    DWORD PTR [rsi],ebp
  42dd6f:	xor    al,0x0
	...
  42dd7d:	add    BYTE PTR [rax],al
  42dd7f:	add    BYTE PTR [rdi+0x43],al
  42dd82:	rex.XB cmp spl,BYTE PTR [r8]
  42dd85:	sub    BYTE PTR [rdi+0x4e],al
  42dd88:	push   rbp
  42dd89:	sub    DWORD PTR [rax],esp
  42dd8b:	xor    al,0x2e
  42dd8d:	cmp    DWORD PTR [rsi],ebp
  42dd8f:	xor    al,0x0
	...
  42dd9d:	add    BYTE PTR [rax],al
  42dd9f:	add    BYTE PTR [rdi+0x43],al
  42dda2:	rex.XB cmp spl,BYTE PTR [r8]
  42dda5:	sub    BYTE PTR [rdi+0x4e],al
  42dda8:	push   rbp
  42dda9:	sub    DWORD PTR [rax],esp
  42ddab:	xor    al,0x2e
  42ddad:	cmp    DWORD PTR [rsi],ebp
  42ddaf:	xor    al,0x0
	...
  42ddbd:	add    BYTE PTR [rax],al
  42ddbf:	add    BYTE PTR [rdi+0x43],al
  42ddc2:	rex.XB cmp spl,BYTE PTR [r8]
  42ddc5:	sub    BYTE PTR [rdi+0x4e],al
  42ddc8:	push   rbp
  42ddc9:	sub    DWORD PTR [rax],esp
  42ddcb:	xor    al,0x2e
  42ddcd:	cmp    DWORD PTR [rsi],ebp
  42ddcf:	xor    al,0x0
	...
  42dddd:	add    BYTE PTR [rax],al
  42dddf:	add    BYTE PTR [rdi+0x43],al
  42dde2:	rex.XB cmp spl,BYTE PTR [r8]
  42dde5:	sub    BYTE PTR [rdi+0x4e],al
  42dde8:	push   rbp
  42dde9:	sub    DWORD PTR [rax],esp
  42ddeb:	xor    al,0x2e
  42dded:	cmp    DWORD PTR [rsi],ebp
  42ddef:	xor    al,0x0
	...
  42ddfd:	add    BYTE PTR [rax],al
  42ddff:	add    BYTE PTR [rdi+0x43],al
  42de02:	rex.XB cmp spl,BYTE PTR [r8]
  42de05:	sub    BYTE PTR [rdi+0x4e],al
  42de08:	push   rbp
  42de09:	sub    DWORD PTR [rax],esp
  42de0b:	xor    al,0x2e
  42de0d:	cmp    DWORD PTR [rsi],ebp
  42de0f:	xor    al,0x0
	...
  42de1d:	add    BYTE PTR [rax],al
  42de1f:	add    BYTE PTR [rdi+0x43],al
  42de22:	rex.XB cmp spl,BYTE PTR [r8]
  42de25:	sub    BYTE PTR [rdi+0x4e],al
  42de28:	push   rbp
  42de29:	sub    DWORD PTR [rax],esp
  42de2b:	xor    al,0x2e
  42de2d:	cmp    DWORD PTR [rsi],ebp
  42de2f:	xor    al,0x0
	...
  42de3d:	add    BYTE PTR [rax],al
  42de3f:	add    BYTE PTR [rdi+0x43],al
  42de42:	rex.XB cmp spl,BYTE PTR [r8]
  42de45:	sub    BYTE PTR [rdi+0x4e],al
  42de48:	push   rbp
  42de49:	sub    DWORD PTR [rax],esp
  42de4b:	xor    al,0x2e
  42de4d:	cmp    DWORD PTR [rsi],ebp
  42de4f:	xor    al,0x0
	...
  42de5d:	add    BYTE PTR [rax],al
  42de5f:	add    BYTE PTR [rdi+0x43],al
  42de62:	rex.XB cmp spl,BYTE PTR [r8]
  42de65:	sub    BYTE PTR [rdi+0x4e],al
  42de68:	push   rbp
  42de69:	sub    DWORD PTR [rax],esp
  42de6b:	xor    al,0x2e
  42de6d:	cmp    DWORD PTR [rsi],ebp
  42de6f:	xor    al,0x0
	...
  42de7d:	add    BYTE PTR [rax],al
  42de7f:	add    BYTE PTR [rdi+0x43],al
  42de82:	rex.XB cmp spl,BYTE PTR [r8]
  42de85:	sub    BYTE PTR [rdi+0x4e],al
  42de88:	push   rbp
  42de89:	sub    DWORD PTR [rax],esp
  42de8b:	xor    al,0x2e
  42de8d:	cmp    DWORD PTR [rsi],ebp
  42de8f:	xor    al,0x0
	...
  42de9d:	add    BYTE PTR [rax],al
  42de9f:	add    BYTE PTR [rdi+0x43],al
  42dea2:	rex.XB cmp spl,BYTE PTR [r8]
  42dea5:	sub    BYTE PTR [rdi+0x4e],al
  42dea8:	push   rbp
  42dea9:	sub    DWORD PTR [rax],esp
  42deab:	xor    al,0x2e
  42dead:	cmp    DWORD PTR [rsi],ebp
  42deaf:	xor    al,0x0
	...
  42debd:	add    BYTE PTR [rax],al
  42debf:	add    BYTE PTR [rdi+0x43],al
  42dec2:	rex.XB cmp spl,BYTE PTR [r8]
  42dec5:	sub    BYTE PTR [rdi+0x4e],al
  42dec8:	push   rbp
  42dec9:	sub    DWORD PTR [rax],esp
  42decb:	xor    al,0x2e
  42decd:	cmp    DWORD PTR [rsi],ebp
  42decf:	xor    al,0x0
	...
  42dedd:	add    BYTE PTR [rax],al
  42dedf:	add    BYTE PTR [rdi+0x43],al
  42dee2:	rex.XB cmp spl,BYTE PTR [r8]
  42dee5:	sub    BYTE PTR [rdi+0x4e],al
  42dee8:	push   rbp
  42dee9:	sub    DWORD PTR [rax],esp
  42deeb:	xor    al,0x2e
  42deed:	cmp    DWORD PTR [rsi],ebp
  42deef:	xor    al,0x0
	...
  42defd:	add    BYTE PTR [rax],al
  42deff:	add    BYTE PTR [rdi+0x43],al
  42df02:	rex.XB cmp spl,BYTE PTR [r8]
  42df05:	sub    BYTE PTR [rdi+0x4e],al
  42df08:	push   rbp
  42df09:	sub    DWORD PTR [rax],esp
  42df0b:	xor    al,0x2e
  42df0d:	cmp    DWORD PTR [rsi],ebp
  42df0f:	xor    al,0x0
	...
  42df1d:	add    BYTE PTR [rax],al
  42df1f:	add    BYTE PTR [rdi+0x43],al
  42df22:	rex.XB cmp spl,BYTE PTR [r8]
  42df25:	sub    BYTE PTR [rdi+0x4e],al
  42df28:	push   rbp
  42df29:	sub    DWORD PTR [rax],esp
  42df2b:	xor    al,0x2e
  42df2d:	cmp    DWORD PTR [rsi],ebp
  42df2f:	xor    al,0x0
	...
  42df3d:	add    BYTE PTR [rax],al
  42df3f:	add    BYTE PTR [rdi+0x43],al
  42df42:	rex.XB cmp spl,BYTE PTR [r8]
  42df45:	sub    BYTE PTR [rdi+0x4e],al
  42df48:	push   rbp
  42df49:	sub    DWORD PTR [rax],esp
  42df4b:	xor    al,0x2e
  42df4d:	cmp    DWORD PTR [rsi],ebp
  42df4f:	xor    al,0x0
	...
  42df5d:	add    BYTE PTR [rax],al
  42df5f:	add    BYTE PTR [rdi+0x43],al
  42df62:	rex.XB cmp spl,BYTE PTR [r8]
  42df65:	sub    BYTE PTR [rdi+0x4e],al
  42df68:	push   rbp
  42df69:	sub    DWORD PTR [rax],esp
  42df6b:	xor    al,0x2e
  42df6d:	cmp    DWORD PTR [rsi],ebp
  42df6f:	xor    al,0x0
	...
  42df7d:	add    BYTE PTR [rax],al
  42df7f:	add    BYTE PTR [rdi+0x43],al
  42df82:	rex.XB cmp spl,BYTE PTR [r8]
  42df85:	sub    BYTE PTR [rdi+0x4e],al
  42df88:	push   rbp
  42df89:	sub    DWORD PTR [rax],esp
  42df8b:	xor    al,0x2e
  42df8d:	cmp    DWORD PTR [rsi],ebp
  42df8f:	xor    al,0x0
	...
  42df9d:	add    BYTE PTR [rax],al
  42df9f:	add    BYTE PTR [rdi+0x43],al
  42dfa2:	rex.XB cmp spl,BYTE PTR [r8]
  42dfa5:	sub    BYTE PTR [rdi+0x4e],al
  42dfa8:	push   rbp
  42dfa9:	sub    DWORD PTR [rax],esp
  42dfab:	xor    al,0x2e
  42dfad:	cmp    DWORD PTR [rsi],ebp
  42dfaf:	xor    al,0x0
	...
  42dfbd:	add    BYTE PTR [rax],al
  42dfbf:	add    BYTE PTR [rdi+0x43],al
  42dfc2:	rex.XB cmp spl,BYTE PTR [r8]
  42dfc5:	sub    BYTE PTR [rdi+0x4e],al
  42dfc8:	push   rbp
  42dfc9:	sub    DWORD PTR [rax],esp
  42dfcb:	xor    al,0x2e
  42dfcd:	cmp    DWORD PTR [rsi],ebp
  42dfcf:	xor    al,0x0
	...
  42dfdd:	add    BYTE PTR [rax],al
  42dfdf:	add    BYTE PTR [rdi+0x43],al
  42dfe2:	rex.XB cmp spl,BYTE PTR [r8]
  42dfe5:	sub    BYTE PTR [rdi+0x4e],al
  42dfe8:	push   rbp
  42dfe9:	sub    DWORD PTR [rax],esp
  42dfeb:	xor    al,0x2e
  42dfed:	cmp    DWORD PTR [rsi],ebp
  42dfef:	xor    al,0x0
	...
  42dffd:	add    BYTE PTR [rax],al
  42dfff:	add    BYTE PTR [rdi+0x43],al
  42e002:	rex.XB cmp spl,BYTE PTR [r8]
  42e005:	sub    BYTE PTR [rdi+0x4e],al
  42e008:	push   rbp
  42e009:	sub    DWORD PTR [rax],esp
  42e00b:	xor    al,0x2e
  42e00d:	cmp    DWORD PTR [rsi],ebp
  42e00f:	xor    al,0x0
	...
  42e01d:	add    BYTE PTR [rax],al
  42e01f:	add    BYTE PTR [rdi+0x43],al
  42e022:	rex.XB cmp spl,BYTE PTR [r8]
  42e025:	sub    BYTE PTR [rdi+0x4e],al
  42e028:	push   rbp
  42e029:	sub    DWORD PTR [rax],esp
  42e02b:	xor    al,0x2e
  42e02d:	cmp    DWORD PTR [rsi],ebp
  42e02f:	xor    al,0x0
	...
  42e03d:	add    BYTE PTR [rax],al
  42e03f:	add    BYTE PTR [rdi+0x43],al
  42e042:	rex.XB cmp spl,BYTE PTR [r8]
  42e045:	sub    BYTE PTR [rdi+0x4e],al
  42e048:	push   rbp
  42e049:	sub    DWORD PTR [rax],esp
  42e04b:	xor    al,0x2e
  42e04d:	cmp    DWORD PTR [rsi],ebp
  42e04f:	xor    al,0x0
	...
  42e05d:	add    BYTE PTR [rax],al
  42e05f:	add    BYTE PTR [rdi+0x43],al
  42e062:	rex.XB cmp spl,BYTE PTR [r8]
  42e065:	sub    BYTE PTR [rdi+0x4e],al
  42e068:	push   rbp
  42e069:	sub    DWORD PTR [rax],esp
  42e06b:	xor    al,0x2e
  42e06d:	cmp    DWORD PTR [rsi],ebp
  42e06f:	xor    al,0x0
	...
  42e07d:	add    BYTE PTR [rax],al
  42e07f:	add    BYTE PTR [rdi+0x43],al
  42e082:	rex.XB cmp spl,BYTE PTR [r8]
  42e085:	sub    BYTE PTR [rdi+0x4e],al
  42e088:	push   rbp
  42e089:	sub    DWORD PTR [rax],esp
  42e08b:	xor    al,0x2e
  42e08d:	cmp    DWORD PTR [rsi],ebp
  42e08f:	xor    al,0x0
	...
  42e09d:	add    BYTE PTR [rax],al
  42e09f:	add    BYTE PTR [rdi+0x43],al
  42e0a2:	rex.XB cmp spl,BYTE PTR [r8]
  42e0a5:	sub    BYTE PTR [rdi+0x4e],al
  42e0a8:	push   rbp
  42e0a9:	sub    DWORD PTR [rax],esp
  42e0ab:	xor    al,0x2e
  42e0ad:	cmp    DWORD PTR [rsi],ebp
  42e0af:	xor    al,0x0
	...
  42e0bd:	add    BYTE PTR [rax],al
  42e0bf:	add    BYTE PTR [rdi+0x43],al
  42e0c2:	rex.XB cmp spl,BYTE PTR [r8]
  42e0c5:	sub    BYTE PTR [rdi+0x4e],al
  42e0c8:	push   rbp
  42e0c9:	sub    DWORD PTR [rax],esp
  42e0cb:	xor    al,0x2e
  42e0cd:	cmp    DWORD PTR [rsi],ebp
  42e0cf:	xor    al,0x0
	...
  42e0dd:	add    BYTE PTR [rax],al
  42e0df:	add    BYTE PTR [rdi+0x43],al
  42e0e2:	rex.XB cmp spl,BYTE PTR [r8]
  42e0e5:	sub    BYTE PTR [rdi+0x4e],al
  42e0e8:	push   rbp
  42e0e9:	sub    DWORD PTR [rax],esp
  42e0eb:	xor    al,0x2e
  42e0ed:	cmp    DWORD PTR [rsi],ebp
  42e0ef:	xor    al,0x0
	...
  42e0fd:	add    BYTE PTR [rax],al
  42e0ff:	add    BYTE PTR [rdi+0x43],al
  42e102:	rex.XB cmp spl,BYTE PTR [r8]
  42e105:	sub    BYTE PTR [rdi+0x4e],al
  42e108:	push   rbp
  42e109:	sub    DWORD PTR [rax],esp
  42e10b:	xor    al,0x2e
  42e10d:	cmp    DWORD PTR [rsi],ebp
  42e10f:	xor    al,0x0
	...
  42e11d:	add    BYTE PTR [rax],al
  42e11f:	add    BYTE PTR [rdi+0x43],al
  42e122:	rex.XB cmp spl,BYTE PTR [r8]
  42e125:	sub    BYTE PTR [rdi+0x4e],al
  42e128:	push   rbp
  42e129:	sub    DWORD PTR [rax],esp
  42e12b:	xor    al,0x2e
  42e12d:	cmp    DWORD PTR [rsi],ebp
  42e12f:	xor    al,0x0
	...
  42e13d:	add    BYTE PTR [rax],al
  42e13f:	add    BYTE PTR [rdi+0x43],al
  42e142:	rex.XB cmp spl,BYTE PTR [r8]
  42e145:	sub    BYTE PTR [rdi+0x4e],al
  42e148:	push   rbp
  42e149:	sub    DWORD PTR [rax],esp
  42e14b:	xor    al,0x2e
  42e14d:	cmp    DWORD PTR [rsi],ebp
  42e14f:	xor    al,0x0
	...
  42e15d:	add    BYTE PTR [rax],al
  42e15f:	add    BYTE PTR [rdi+0x43],al
  42e162:	rex.XB cmp spl,BYTE PTR [r8]
  42e165:	sub    BYTE PTR [rdi+0x4e],al
  42e168:	push   rbp
  42e169:	sub    DWORD PTR [rax],esp
  42e16b:	xor    al,0x2e
  42e16d:	cmp    DWORD PTR [rsi],ebp
  42e16f:	xor    al,0x0
	...
  42e17d:	add    BYTE PTR [rax],al
  42e17f:	add    BYTE PTR [rdi+0x43],al
  42e182:	rex.XB cmp spl,BYTE PTR [r8]
  42e185:	sub    BYTE PTR [rdi+0x4e],al
  42e188:	push   rbp
  42e189:	sub    DWORD PTR [rax],esp
  42e18b:	xor    al,0x2e
  42e18d:	cmp    DWORD PTR [rsi],ebp
  42e18f:	xor    al,0x0
	...
  42e19d:	add    BYTE PTR [rax],al
  42e19f:	add    BYTE PTR [rdi+0x43],al
  42e1a2:	rex.XB cmp spl,BYTE PTR [r8]
  42e1a5:	sub    BYTE PTR [rdi+0x4e],al
  42e1a8:	push   rbp
  42e1a9:	sub    DWORD PTR [rax],esp
  42e1ab:	xor    al,0x2e
  42e1ad:	cmp    DWORD PTR [rsi],ebp
  42e1af:	xor    al,0x0
	...
  42e1bd:	add    BYTE PTR [rax],al
  42e1bf:	add    BYTE PTR [rdi+0x43],al
  42e1c2:	rex.XB cmp spl,BYTE PTR [r8]
  42e1c5:	sub    BYTE PTR [rdi+0x4e],al
  42e1c8:	push   rbp
  42e1c9:	sub    DWORD PTR [rax],esp
  42e1cb:	xor    al,0x2e
  42e1cd:	cmp    DWORD PTR [rsi],ebp
  42e1cf:	xor    al,0x0
	...
  42e1dd:	add    BYTE PTR [rax],al
  42e1df:	add    BYTE PTR [rdi+0x43],al
  42e1e2:	rex.XB cmp spl,BYTE PTR [r8]
  42e1e5:	sub    BYTE PTR [rdi+0x4e],al
  42e1e8:	push   rbp
  42e1e9:	sub    DWORD PTR [rax],esp
  42e1eb:	xor    al,0x2e
  42e1ed:	cmp    DWORD PTR [rsi],ebp
  42e1ef:	xor    al,0x0
	...
  42e1fd:	add    BYTE PTR [rax],al
  42e1ff:	add    BYTE PTR [rdi+0x43],al
  42e202:	rex.XB cmp spl,BYTE PTR [r8]
  42e205:	sub    BYTE PTR [rdi+0x4e],al
  42e208:	push   rbp
  42e209:	sub    DWORD PTR [rax],esp
  42e20b:	xor    al,0x2e
  42e20d:	cmp    DWORD PTR [rsi],ebp
  42e20f:	xor    al,0x0
	...
  42e21d:	add    BYTE PTR [rax],al
  42e21f:	add    BYTE PTR [rdi+0x43],al
  42e222:	rex.XB cmp spl,BYTE PTR [r8]
  42e225:	sub    BYTE PTR [rdi+0x4e],al
  42e228:	push   rbp
  42e229:	sub    DWORD PTR [rax],esp
  42e22b:	xor    al,0x2e
  42e22d:	cmp    DWORD PTR [rsi],ebp
  42e22f:	xor    al,0x0
	...
  42e23d:	add    BYTE PTR [rax],al
  42e23f:	add    BYTE PTR [rdi+0x43],al
  42e242:	rex.XB cmp spl,BYTE PTR [r8]
  42e245:	sub    BYTE PTR [rdi+0x4e],al
  42e248:	push   rbp
  42e249:	sub    DWORD PTR [rax],esp
  42e24b:	xor    al,0x2e
  42e24d:	cmp    DWORD PTR [rsi],ebp
  42e24f:	xor    al,0x0
	...
  42e25d:	add    BYTE PTR [rax],al
  42e25f:	add    BYTE PTR [rdi+0x43],al
  42e262:	rex.XB cmp spl,BYTE PTR [r8]
  42e265:	sub    BYTE PTR [rdi+0x4e],al
  42e268:	push   rbp
  42e269:	sub    DWORD PTR [rax],esp
  42e26b:	xor    al,0x2e
  42e26d:	cmp    DWORD PTR [rsi],ebp
  42e26f:	xor    al,0x0
	...
  42e27d:	add    BYTE PTR [rax],al
  42e27f:	add    BYTE PTR [rdi+0x43],al
  42e282:	rex.XB cmp spl,BYTE PTR [r8]
  42e285:	sub    BYTE PTR [rdi+0x4e],al
  42e288:	push   rbp
  42e289:	sub    DWORD PTR [rax],esp
  42e28b:	xor    al,0x2e
  42e28d:	cmp    DWORD PTR [rsi],ebp
  42e28f:	xor    al,0x0
	...
  42e29d:	add    BYTE PTR [rax],al
  42e29f:	add    BYTE PTR [rdi+0x43],al
  42e2a2:	rex.XB cmp spl,BYTE PTR [r8]
  42e2a5:	sub    BYTE PTR [rdi+0x4e],al
  42e2a8:	push   rbp
  42e2a9:	sub    DWORD PTR [rax],esp
  42e2ab:	xor    al,0x2e
  42e2ad:	cmp    DWORD PTR [rsi],ebp
  42e2af:	xor    al,0x0
	...
  42e2bd:	add    BYTE PTR [rax],al
  42e2bf:	add    BYTE PTR [rdi+0x43],al
  42e2c2:	rex.XB cmp spl,BYTE PTR [r8]
  42e2c5:	sub    BYTE PTR [rdi+0x4e],al
  42e2c8:	push   rbp
  42e2c9:	sub    DWORD PTR [rax],esp
  42e2cb:	xor    al,0x2e
  42e2cd:	cmp    DWORD PTR [rsi],ebp
  42e2cf:	xor    al,0x0
	...
  42e2dd:	add    BYTE PTR [rax],al
  42e2df:	add    BYTE PTR [rdi+0x43],al
  42e2e2:	rex.XB cmp spl,BYTE PTR [r8]
  42e2e5:	sub    BYTE PTR [rdi+0x4e],al
  42e2e8:	push   rbp
  42e2e9:	sub    DWORD PTR [rax],esp
  42e2eb:	xor    al,0x2e
  42e2ed:	cmp    DWORD PTR [rsi],ebp
  42e2ef:	xor    al,0x0
	...
  42e2fd:	add    BYTE PTR [rax],al
  42e2ff:	add    BYTE PTR [rdi+0x43],al
  42e302:	rex.XB cmp spl,BYTE PTR [r8]
  42e305:	sub    BYTE PTR [rdi+0x4e],al
  42e308:	push   rbp
  42e309:	sub    DWORD PTR [rax],esp
  42e30b:	xor    al,0x2e
  42e30d:	cmp    DWORD PTR [rsi],ebp
  42e30f:	xor    al,0x0
	...
  42e31d:	add    BYTE PTR [rax],al
  42e31f:	add    BYTE PTR [rdi+0x43],al
  42e322:	rex.XB cmp spl,BYTE PTR [r8]
  42e325:	sub    BYTE PTR [rdi+0x4e],al
  42e328:	push   rbp
  42e329:	sub    DWORD PTR [rax],esp
  42e32b:	xor    al,0x2e
  42e32d:	cmp    DWORD PTR [rsi],ebp
  42e32f:	xor    al,0x0
	...
  42e33d:	add    BYTE PTR [rax],al
  42e33f:	add    BYTE PTR [rdi+0x43],al
  42e342:	rex.XB cmp spl,BYTE PTR [r8]
  42e345:	sub    BYTE PTR [rdi+0x4e],al
  42e348:	push   rbp
  42e349:	sub    DWORD PTR [rax],esp
  42e34b:	xor    al,0x2e
  42e34d:	cmp    DWORD PTR [rsi],ebp
  42e34f:	xor    al,0x0
	...
  42e35d:	add    BYTE PTR [rax],al
  42e35f:	add    BYTE PTR [rdi+0x43],al
  42e362:	rex.XB cmp spl,BYTE PTR [r8]
  42e365:	sub    BYTE PTR [rdi+0x4e],al
  42e368:	push   rbp
  42e369:	sub    DWORD PTR [rax],esp
  42e36b:	xor    al,0x2e
  42e36d:	cmp    DWORD PTR [rsi],ebp
  42e36f:	xor    al,0x0
	...
  42e37d:	add    BYTE PTR [rax],al
  42e37f:	add    BYTE PTR [rdi+0x43],al
  42e382:	rex.XB cmp spl,BYTE PTR [r8]
  42e385:	sub    BYTE PTR [rdi+0x4e],al
  42e388:	push   rbp
  42e389:	sub    DWORD PTR [rax],esp
  42e38b:	xor    al,0x2e
  42e38d:	cmp    DWORD PTR [rsi],ebp
  42e38f:	xor    al,0x0
	...
  42e39d:	add    BYTE PTR [rax],al
  42e39f:	add    BYTE PTR [rdi+0x43],al
  42e3a2:	rex.XB cmp spl,BYTE PTR [r8]
  42e3a5:	sub    BYTE PTR [rdi+0x4e],al
  42e3a8:	push   rbp
  42e3a9:	sub    DWORD PTR [rax],esp
  42e3ab:	xor    al,0x2e
  42e3ad:	cmp    DWORD PTR [rsi],ebp
  42e3af:	xor    al,0x0
	...
  42e3bd:	add    BYTE PTR [rax],al
  42e3bf:	add    BYTE PTR [rdi+0x43],al
  42e3c2:	rex.XB cmp spl,BYTE PTR [r8]
  42e3c5:	sub    BYTE PTR [rdi+0x4e],al
  42e3c8:	push   rbp
  42e3c9:	sub    DWORD PTR [rax],esp
  42e3cb:	xor    al,0x2e
  42e3cd:	cmp    DWORD PTR [rsi],ebp
  42e3cf:	xor    al,0x0
	...
  42e3dd:	add    BYTE PTR [rax],al
  42e3df:	add    BYTE PTR [rdi+0x43],al
  42e3e2:	rex.XB cmp spl,BYTE PTR [r8]
  42e3e5:	sub    BYTE PTR [rdi+0x4e],al
  42e3e8:	push   rbp
  42e3e9:	sub    DWORD PTR [rax],esp
  42e3eb:	xor    al,0x2e
  42e3ed:	cmp    DWORD PTR [rsi],ebp
  42e3ef:	xor    al,0x0
	...
  42e3fd:	add    BYTE PTR [rax],al
  42e3ff:	add    BYTE PTR [rdi+0x43],al
  42e402:	rex.XB cmp spl,BYTE PTR [r8]
  42e405:	sub    BYTE PTR [rdi+0x4e],al
  42e408:	push   rbp
  42e409:	sub    DWORD PTR [rax],esp
  42e40b:	xor    al,0x2e
  42e40d:	cmp    DWORD PTR [rsi],ebp
  42e40f:	xor    al,0x0
	...
  42e41d:	add    BYTE PTR [rax],al
  42e41f:	add    BYTE PTR [rdi+0x43],al
  42e422:	rex.XB cmp spl,BYTE PTR [r8]
  42e425:	sub    BYTE PTR [rdi+0x4e],al
  42e428:	push   rbp
  42e429:	sub    DWORD PTR [rax],esp
  42e42b:	xor    al,0x2e
  42e42d:	cmp    DWORD PTR [rsi],ebp
  42e42f:	xor    al,0x0
	...
  42e43d:	add    BYTE PTR [rax],al
  42e43f:	add    BYTE PTR [rdi+0x43],al
  42e442:	rex.XB cmp spl,BYTE PTR [r8]
  42e445:	sub    BYTE PTR [rdi+0x4e],al
  42e448:	push   rbp
  42e449:	sub    DWORD PTR [rax],esp
  42e44b:	xor    al,0x2e
  42e44d:	cmp    DWORD PTR [rsi],ebp
  42e44f:	xor    al,0x0
	...
  42e45d:	add    BYTE PTR [rax],al
  42e45f:	add    BYTE PTR [rdi+0x43],al
  42e462:	rex.XB cmp spl,BYTE PTR [r8]
  42e465:	sub    BYTE PTR [rdi+0x4e],al
  42e468:	push   rbp
  42e469:	sub    DWORD PTR [rax],esp
  42e46b:	xor    al,0x2e
  42e46d:	cmp    DWORD PTR [rsi],ebp
  42e46f:	xor    al,0x0
	...
  42e47d:	add    BYTE PTR [rax],al
  42e47f:	add    BYTE PTR [rdi+0x43],al
  42e482:	rex.XB cmp spl,BYTE PTR [r8]
  42e485:	sub    BYTE PTR [rdi+0x4e],al
  42e488:	push   rbp
  42e489:	sub    DWORD PTR [rax],esp
  42e48b:	xor    al,0x2e
  42e48d:	cmp    DWORD PTR [rsi],ebp
  42e48f:	xor    al,0x0
	...
  42e49d:	add    BYTE PTR [rax],al
  42e49f:	add    BYTE PTR [rdi+0x43],al
  42e4a2:	rex.XB cmp spl,BYTE PTR [r8]
  42e4a5:	sub    BYTE PTR [rdi+0x4e],al
  42e4a8:	push   rbp
  42e4a9:	sub    DWORD PTR [rax],esp
  42e4ab:	xor    al,0x2e
  42e4ad:	cmp    DWORD PTR [rsi],ebp
  42e4af:	xor    al,0x0
	...
  42e4c5:	add    BYTE PTR [rax],al
  42e4c7:	add    BYTE PTR [rcx],al
  42e4c9:	add    BYTE PTR [rax],al
  42e4cb:	add    BYTE PTR [rsp+rbp*2-0x25fffffd],ah
  42e4d2:	add    al,BYTE PTR [rax]
  42e4d4:	add    BYTE PTR [rax],al
  42e4d7:	add    BYTE PTR [rbp*2-0x25effffd],dh
  42e4de:	add    al,BYTE PTR [rax]
  42e4e0:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000000042f000 <.pdata>:
  42f000:	add    BYTE PTR [rax],dl
  42f002:	add    BYTE PTR [rax],al
  42f004:	add    DWORD PTR [rax],edx
  42f006:	add    BYTE PTR [rax],al
  42f008:	add    BYTE PTR [rax],dl
  42f00a:	add    eax,DWORD PTR [rax]
  42f00c:	adc    BYTE PTR [rax],dl
  42f00e:	add    BYTE PTR [rax],al
  42f010:	push   rcx
  42f011:	adc    DWORD PTR [rax],eax
  42f013:	add    BYTE PTR [rax+rdx*1],al
  42f016:	add    eax,DWORD PTR [rax]
  42f018:	(bad)  
  42f019:	adc    DWORD PTR [rax],eax
  42f01b:	add    BYTE PTR [rsi+0xc000011],ch
  42f021:	adc    BYTE PTR [rbx],al
  42f023:	add    BYTE PTR [rax-0x31ffffef],dh
  42f029:	adc    al,0x0
  42f02b:	add    BYTE PTR [rax+rdx*1],dl
  42f02e:	add    eax,DWORD PTR [rax]
  42f030:	rcl    BYTE PTR [rax+rax*1],1
  42f033:	add    dl,dh
  42f035:	adc    al,0x0
  42f037:	add    BYTE PTR [rax],ch
  42f039:	adc    BYTE PTR [rbx],al
  42f03b:	add    BYTE PTR [rax],al
  42f03d:	adc    eax,0x15220000
  42f042:	add    BYTE PTR [rax],al
  42f044:	rex.W adc BYTE PTR [rbx],al
  42f047:	add    BYTE PTR [rax],dh
  42f049:	adc    eax,0x155d0000
  42f04e:	add    BYTE PTR [rax],al
  42f050:	push   0x60000310
  42f055:	adc    eax,0x15870000
  42f05a:	add    BYTE PTR [rax],al
  42f05c:	ins    BYTE PTR es:[rdi],dx
  42f05d:	adc    BYTE PTR [rbx],al
  42f05f:	add    BYTE PTR [rax+0x51000015],dl
  42f065:	(bad)  
  42f066:	add    BYTE PTR [rax],al
  42f068:	je     0x42f07a
  42f06a:	add    eax,DWORD PTR [rax]
  42f06c:	(bad)  
  42f06d:	(bad)  
  42f06e:	add    BYTE PTR [rax],al
  42f070:	sub    BYTE PTR [rax],bl
  42f072:	add    BYTE PTR [rax],al
  42f074:	adc    BYTE PTR [rax],0x3
  42f077:	add    BYTE PTR [rax],dh
  42f079:	sbb    BYTE PTR [rax],al
  42f07b:	add    BYTE PTR [rax-0x73ffffe8],dh
  42f081:	adc    BYTE PTR [rbx],al
  42f083:	add    BYTE PTR [rax-0x61ffffe8],dh
  42f089:	sbb    DWORD PTR [rax],eax
  42f08b:	add    BYTE PTR [rax+rdx*1+0x19a00003],bl
  42f092:	add    BYTE PTR [rax],al
  42f094:	ret    0x19
  42f097:	add    BYTE PTR [rax-0x2ffffcf0],dh
  42f09d:	sbb    DWORD PTR [rax],eax
  42f09f:	add    bl,bh
  42f0a1:	sbb    DWORD PTR [rax],eax
  42f0a3:	add    BYTE PTR [rax+0x310],bh
  42f0a9:	sbb    al,BYTE PTR [rax]
  42f0ab:	add    BYTE PTR [rip+0xffffffffc400001a],ch        # 0xffffffffc442f0cb
  42f0b1:	adc    BYTE PTR [rbx],al
  42f0b3:	add    BYTE PTR [rax],dh
  42f0b5:	sbb    al,BYTE PTR [rax]
  42f0b7:	add    BYTE PTR [rbx-0x2fffffe6],dh
  42f0bd:	adc    BYTE PTR [rbx],al
  42f0bf:	add    al,al
  42f0c1:	sbb    al,BYTE PTR [rax]
  42f0c3:	add    al,cl
  42f0c5:	sbb    al,BYTE PTR [rax]
  42f0c7:	add    al,bl
  42f0c9:	adc    BYTE PTR [rbx],al
  42f0cb:	add    al,dl
  42f0cd:	sbb    al,BYTE PTR [rax]
  42f0cf:	add    al,bl
  42f0d1:	sbb    al,BYTE PTR [rax]
  42f0d3:	add    ah,bl
  42f0d5:	adc    BYTE PTR [rbx],al
  42f0d7:	add    al,ah
  42f0d9:	sbb    al,BYTE PTR [rax]
  42f0db:	add    BYTE PTR [rax],bh
  42f0dd:	sbb    eax,DWORD PTR [rax]
  42f0df:	add    al,ah
  42f0e1:	adc    BYTE PTR [rbx],al
  42f0e3:	add    BYTE PTR [rax+0x1b],al
  42f0e6:	add    BYTE PTR [rax],al
  42f0e8:	(bad)  
  42f0e9:	(bad)  
  42f0ea:	add    BYTE PTR [rax],al
  42f0ec:	call   0x2042f401
  42f0f1:	(bad)  
  42f0f2:	add    BYTE PTR [rax],al
  42f0f4:	outs   dx,DWORD PTR ds:[rsi]
  42f0f5:	(bad)  
  42f0f6:	add    BYTE PTR [rax],al
  42f0f8:	hlt    
  42f0f9:	adc    BYTE PTR [rbx],al
  42f0fb:	add    BYTE PTR [rax+0x1f],dh
  42f0fe:	add    BYTE PTR [rax],al
  42f100:	sbb    eax,0x8000021
  42f105:	adc    DWORD PTR [rbx],eax
  42f107:	add    BYTE PTR [rax],ah
  42f109:	and    DWORD PTR [rax],eax
  42f10b:	add    bh,al
  42f10d:	and    eax,DWORD PTR [rax]
  42f10f:	add    BYTE PTR [rcx+rdx*1],dl
  42f112:	add    eax,DWORD PTR [rax]
  42f114:	shl    BYTE PTR [rbx],1
  42f116:	add    BYTE PTR [rax],al
  42f118:	leave  
  42f119:	add    BYTE PTR ss:[rax],al
  42f11c:	sub    al,0x11
  42f11e:	add    eax,DWORD PTR [rax]
  42f120:	shl    BYTE PTR [rsi],1
  42f122:	add    BYTE PTR [rax],al
  42f124:	stc    
  42f125:	add    BYTE PTR ss:[rax],al
  42f128:	je     0x42f13b
  42f12a:	add    eax,DWORD PTR [rax]
  42f12c:	add    BYTE PTR [rdi],dh
  42f12e:	add    BYTE PTR [rax],al
  42f130:	(bad)  
  42f131:	(bad)  
  42f132:	add    BYTE PTR [rax],al
  42f134:	jl     0x42f147
  42f136:	add    eax,DWORD PTR [rax]
  42f138:	xor    BYTE PTR [rdi],dh
  42f13a:	add    BYTE PTR [rax],al
  42f13c:	fnsave [rdi]
  42f13e:	add    BYTE PTR [rax],al
  42f140:	test   BYTE PTR [rcx],dl
  42f142:	add    eax,DWORD PTR [rax]
  42f144:	loopne 0x42f17d
  42f146:	add    BYTE PTR [rax],al
  42f148:	add    bh,BYTE PTR [rax]
  42f14a:	add    BYTE PTR [rax],al
  42f14c:	xchg   esp,eax
  42f14d:	adc    DWORD PTR [rbx],eax
  42f14f:	add    BYTE PTR [rax],dl
  42f151:	cmp    BYTE PTR [rax],al
  42f153:	add    BYTE PTR [rdi],al
  42f155:	cmp    DWORD PTR [rax],eax
  42f157:	add    BYTE PTR [rcx+rdx*1+0x39100003],bl
  42f15e:	add    BYTE PTR [rax],al
  42f160:	stos   DWORD PTR es:[rdi],eax
  42f161:	cmp    eax,0x11a80000
  42f166:	add    eax,DWORD PTR [rax]
  42f168:	mov    al,0x3d
  42f16a:	add    BYTE PTR [rax],al
  42f16c:	sar    BYTE PTR [rip+0x11c00000],cl        # 0x1202f172
  42f172:	add    eax,DWORD PTR [rax]
  42f174:	loopne 0x42f1b3
  42f176:	add    BYTE PTR [rax],al
  42f178:	(bad)  
  42f179:	add    BYTE PTR ds:[rax],al
  42f17c:	enter  0x311,0x0
  42f180:	adc    BYTE PTR [rsi],bh
  42f182:	add    BYTE PTR [rax],al
  42f184:	(bad)  
  42f185:	add    BYTE PTR ds:[rax],al
  42f188:	rcl    BYTE PTR [rcx],1
  42f18a:	add    eax,DWORD PTR [rax]
  42f18c:	nop
  42f18d:	add    BYTE PTR ds:[rax],al
  42f190:	sbb    eax,DWORD PTR [rax+0x0]
  42f193:	add    al,ah
  42f195:	adc    DWORD PTR [rbx],eax
  42f197:	add    BYTE PTR [rax],ah
  42f199:	add    BYTE PTR [rax],al
  42f19c:	mov    ch,0x40
  42f19e:	add    BYTE PTR [rax],al
  42f1a0:	clc    
  42f1a1:	adc    DWORD PTR [rbx],eax
  42f1a3:	add    al,al
  42f1a5:	add    BYTE PTR [rax],al
  42f1a8:	sbb    BYTE PTR [rcx+0x0],al
  42f1ab:	add    BYTE PTR [rax],cl
  42f1ad:	adc    al,BYTE PTR [rbx]
  42f1af:	add    BYTE PTR [rax],ah
  42f1b1:	add    BYTE PTR [r8],al
  42f1b4:	hlt    
  42f1b5:	add    BYTE PTR [r8],al
  42f1b8:	adc    al,0x12
  42f1ba:	add    eax,DWORD PTR [rax]
  42f1bc:	add    BYTE PTR [rdx+0x0],al
  42f1bf:	add    BYTE PTR [rax],cl
  42f1c1:	rex.X add BYTE PTR [rax],al
  42f1c4:	sub    BYTE PTR [rdx],dl
  42f1c6:	add    eax,DWORD PTR [rax]
  42f1c8:	adc    BYTE PTR [rdx+0x0],al
  42f1cb:	add    BYTE PTR [rbp+rax*2+0x0],bh
  42f1cf:	add    BYTE PTR [rdx+rdx*1],ch
  42f1d2:	add    eax,DWORD PTR [rax]
  42f1d4:	add    BYTE PTR [rbp+0x0],0x0
  42f1d8:	ret    
  42f1d9:	add    BYTE PTR [r8],r8b
  42f1dc:	cmp    al,0x12
  42f1de:	add    eax,DWORD PTR [rax]
  42f1e0:	rol    BYTE PTR [rbp+0x0],1
  42f1e3:	add    BYTE PTR [rip+0x44000046],bl        # 0x4442f22f
  42f1e9:	adc    al,BYTE PTR [rbx]
  42f1eb:	add    BYTE PTR [rax],ah
  42f1ed:	rex.RX add BYTE PTR [rax],r8b
  42f1f0:	call   0x4c42f23b
  42f1f5:	adc    al,BYTE PTR [rbx]
  42f1f7:	add    al,dh
  42f1f9:	rex.RX add BYTE PTR [rax],r8b
  42f1fc:	mov    bl,0x49
  42f1fe:	add    BYTE PTR [rax],al
  42f200:	pop    rax
  42f201:	adc    al,BYTE PTR [rbx]
  42f203:	add    al,al
  42f205:	rex.WB add BYTE PTR [r8],al
  42f208:	lock rex.WB add BYTE PTR [r8],al
  42f20c:	jo     0x42f220
  42f20e:	add    eax,DWORD PTR [rax]
  42f210:	lock rex.WB add BYTE PTR [r8],al
  42f214:	pop    rcx
  42f215:	rex.WX add BYTE PTR [rax],al
  42f218:	js     0x42f22c
  42f21a:	add    eax,DWORD PTR [rax]
  42f21c:	(bad)  
  42f21d:	rex.WX add BYTE PTR [rax],al
  42f220:	(bad)  
  42f221:	rex.WX add BYTE PTR [rax],al
  42f224:	test   BYTE PTR [rdx],dl
  42f226:	add    eax,DWORD PTR [rax]
  42f228:	ror    BYTE PTR [rdx+0x0],1
  42f22b:	add    bh,dh
  42f22d:	rex.WX add BYTE PTR [rax],al
  42f230:	nop
  42f231:	adc    al,BYTE PTR [rbx]
  42f233:	add    BYTE PTR [rax],al
  42f235:	rex.WXB add BYTE PTR [r8],al
  42f238:	push   rax
  42f239:	rex.WXB add BYTE PTR [r8],al
  42f23c:	cwde   
  42f23d:	adc    al,BYTE PTR [rbx]
  42f23f:	add    BYTE PTR [rax+0x4b],dl
  42f242:	add    BYTE PTR [rax],al
  42f244:	jb     0x42f291
  42f246:	add    BYTE PTR [rax],al
  42f248:	movabs al,ds:0xc500004b80000312
  42f251:	rex.WRB add BYTE PTR [r8],r8b
  42f254:	test   al,0x12
  42f256:	add    eax,DWORD PTR [rax]
  42f258:	ror    BYTE PTR [rbp+0x0],1
  42f25b:	add    cl,bh
  42f25d:	rex.WRB add BYTE PTR [r8],r8b
  42f260:	mov    ah,0x12
  42f262:	add    eax,DWORD PTR [rax]
  42f264:	add    BYTE PTR [rsi+0x0],cl
  42f267:	add    BYTE PTR [rcx-0x43ffffb2],bl
  42f26d:	adc    al,BYTE PTR [rbx]
  42f26f:	add    BYTE PTR [rax-0x2fffffb2],ah
  42f275:	rex.WRXB add BYTE PTR [r8],r8b
  42f278:	rcl    BYTE PTR [rdx],1
  42f27a:	add    eax,DWORD PTR [rax]
  42f27c:	ror    BYTE PTR [rdi+0x0],1
  42f27f:	add    ah,bl
  42f281:	push   rbx
  42f282:	add    BYTE PTR [rax],al
  42f284:	fcom   QWORD PTR [rdx]
  42f286:	add    eax,DWORD PTR [rax]
  42f288:	loopne 0x42f2dd
  42f28a:	add    BYTE PTR [rax],al
  42f28c:	or     eax,0xf4000054
  42f291:	adc    al,BYTE PTR [rbx]
  42f293:	add    BYTE PTR [rax],dl
  42f295:	push   rsp
  42f296:	add    BYTE PTR [rax],al
  42f298:	sub    ebx,DWORD PTR [rdx+0x0]
  42f29b:	add    BYTE PTR [rax],al
  42f29d:	adc    eax,DWORD PTR [rbx]
  42f29f:	add    BYTE PTR [rax],dh
  42f2a1:	pop    rdx
  42f2a2:	add    BYTE PTR [rax],al
  42f2a4:	hlt    
  42f2a5:	pop    rbx
  42f2a6:	add    BYTE PTR [rax],al
  42f2a8:	sbb    BYTE PTR [rbx],dl
  42f2aa:	add    eax,DWORD PTR [rax]
  42f2ac:	add    BYTE PTR [rax+rax*1+0x0],bl
  42f2b0:	lods   al,BYTE PTR ds:[rsi]
  42f2b1:	add    BYTE PTR fs:[rax],al
  42f2b4:	and    BYTE PTR [rbx],dl
  42f2b6:	add    eax,DWORD PTR [rax]
  42f2b8:	mov    al,0x64
  42f2ba:	add    BYTE PTR [rax],al
  42f2bc:	retf   
  42f2bd:	add    BYTE PTR gs:[rax],al
  42f2c0:	cmp    BYTE PTR [rbx],dl
  42f2c2:	add    eax,DWORD PTR [rax]
  42f2c4:	shl    BYTE PTR [rbp+0x0],1
  42f2c7:	add    BYTE PTR [rbx+0x69],bh
  42f2ca:	add    BYTE PTR [rax],al
  42f2cc:	adc    rax,QWORD PTR [rbx]
  42f2cf:	add    BYTE PTR [rax],dl
  42f2d1:	outs   dx,BYTE PTR ds:[rsi]
  42f2d2:	add    BYTE PTR [rax],al
  42f2d4:	sub    eax,0x6000006e
  42f2d9:	adc    eax,DWORD PTR [rbx]
  42f2db:	add    BYTE PTR [rax],dh
  42f2dd:	outs   dx,BYTE PTR ds:[rsi]
  42f2de:	add    BYTE PTR [rax],al
  42f2e0:	rex.WR outs dx,BYTE PTR ds:[rsi]
  42f2e2:	add    BYTE PTR [rax],al
  42f2e4:	push   0x50000313
  42f2e9:	outs   dx,BYTE PTR ds:[rsi]
  42f2ea:	add    BYTE PTR [rax],al
  42f2ec:	ins    BYTE PTR es:[rdi],dx
  42f2ed:	outs   dx,BYTE PTR ds:[rsi]
  42f2ee:	add    BYTE PTR [rax],al
  42f2f0:	ins    BYTE PTR es:[rdi],dx
  42f2f1:	adc    eax,DWORD PTR [rbx]
  42f2f3:	add    BYTE PTR [rax+0x6e],dh
  42f2f6:	add    BYTE PTR [rax],al
  42f2f8:	mov    WORD PTR [rsi+0x0],gs
  42f2fb:	add    BYTE PTR [rax+0x13],dh
  42f2fe:	add    eax,DWORD PTR [rax]
  42f300:	nop
  42f301:	outs   dx,BYTE PTR ds:[rsi]
  42f302:	add    BYTE PTR [rax],al
  42f304:	lods   al,BYTE PTR ds:[rsi]
  42f305:	outs   dx,BYTE PTR ds:[rsi]
  42f306:	add    BYTE PTR [rax],al
  42f308:	je     0x42f31d
  42f30a:	add    eax,DWORD PTR [rax]
  42f30c:	mov    al,0x6e
  42f30e:	add    BYTE PTR [rax],al
  42f310:	int3   
  42f311:	outs   dx,BYTE PTR ds:[rsi]
  42f312:	add    BYTE PTR [rax],al
  42f314:	js     0x42f329
  42f316:	add    eax,DWORD PTR [rax]
  42f318:	shr    BYTE PTR [rsi+0x0],1
  42f31b:	add    ah,ch
  42f31d:	outs   dx,BYTE PTR ds:[rsi]
  42f31e:	add    BYTE PTR [rax],al
  42f320:	jl     0x42f335
  42f322:	add    eax,DWORD PTR [rax]
  42f324:	lock outs dx,BYTE PTR ds:[rsi]
  42f326:	add    BYTE PTR [rax],al
  42f328:	or     al,0x6f
  42f32a:	add    BYTE PTR [rax],al
  42f32c:	adc    BYTE PTR [rbx],0x3
  42f32f:	add    BYTE PTR [rax],dl
  42f331:	outs   dx,DWORD PTR ds:[rsi]
  42f332:	add    BYTE PTR [rax],al
  42f334:	sub    al,0x6f
  42f336:	add    BYTE PTR [rax],al
  42f338:	test   BYTE PTR [rbx],dl
  42f33a:	add    eax,DWORD PTR [rax]
  42f33c:	xor    BYTE PTR [rdi+0x0],ch
  42f33f:	add    BYTE PTR [rdi+rbp*2+0x0],cl
  42f343:	add    BYTE PTR [rax+0x50000313],cl
  42f349:	outs   dx,DWORD PTR ds:[rsi]
  42f34a:	add    BYTE PTR [rax],al
  42f34c:	ins    BYTE PTR es:[rdi],dx
  42f34d:	outs   dx,DWORD PTR ds:[rsi]
  42f34e:	add    BYTE PTR [rax],al
  42f350:	mov    WORD PTR [rbx],ss
  42f352:	add    eax,DWORD PTR [rax]
  42f354:	jo     0x42f3c5
  42f356:	add    BYTE PTR [rax],al
  42f358:	retf   
  42f359:	outs   dx,DWORD PTR ds:[rsi]
  42f35a:	add    BYTE PTR [rax],al
  42f35c:	nop
  42f35d:	adc    eax,DWORD PTR [rbx]
  42f35f:	add    al,dl
  42f361:	outs   dx,DWORD PTR ds:[rsi]
  42f362:	add    BYTE PTR [rax],al
  42f364:	sub    esi,DWORD PTR [rax+0x0]
  42f367:	add    BYTE PTR [rbx+rdx*1+0x70300003],bl
  42f36e:	add    BYTE PTR [rax],al
  42f370:	mov    DWORD PTR [rax+0x0],esi
  42f373:	add    BYTE PTR [rax-0x6ffffced],ch
  42f379:	jo     0x42f37b
  42f37b:	add    al,dh
  42f37d:	jo     0x42f37f
  42f37f:	add    BYTE PTR [rbx+rdx*1+0x70f00003],dh
  42f386:	add    BYTE PTR [rax],al
  42f388:	rex.R jno 0x42f38b
  42f38b:	add    ah,al
  42f38d:	adc    eax,DWORD PTR [rbx]
  42f38f:	add    BYTE PTR [rax+0x71],dl
  42f392:	add    BYTE PTR [rax],al
  42f394:	jb     0x42f407
  42f396:	add    BYTE PTR [rax],al
  42f398:	rcl    BYTE PTR [rbx],1
  42f39a:	add    eax,DWORD PTR [rax]
  42f39c:	xor    BYTE PTR [rcx+0x0],0x0
  42f3a0:	adc    DWORD PTR [rbx+0x0],esi
  42f3a3:	add    al,bl
  42f3a5:	adc    eax,DWORD PTR [rbx]
  42f3a7:	add    BYTE PTR [rax],ah
  42f3a9:	jae    0x42f3ab
  42f3ab:	add    BYTE PTR [rsi-0x13ffff8d],dl
  42f3b1:	adc    eax,DWORD PTR [rbx]
  42f3b3:	add    BYTE PTR [rax-0x1affff8d],ah
  42f3b9:	jae    0x42f3bb
  42f3bb:	add    al,bh
  42f3bd:	adc    eax,DWORD PTR [rbx]
  42f3bf:	add    al,dh
  42f3c1:	jae    0x42f3c3
  42f3c3:	add    BYTE PTR [rip+0x4000075],bh        # 0x442f43e
  42f3c9:	adc    al,0x3
  42f3cb:	add    BYTE PTR [rax+0x75],al
  42f3ce:	add    BYTE PTR [rax],al
  42f3d0:	pop    rbp
  42f3d1:	jne    0x42f3d3
  42f3d3:	add    BYTE PTR [rsp+rdx*1],dl
  42f3d6:	add    eax,DWORD PTR [rax]
  42f3d8:	(bad)  
  42f3d9:	jne    0x42f3db
  42f3db:	add    BYTE PTR [rdi+0x1c000075],al
  42f3e1:	adc    al,0x3
  42f3e3:	add    BYTE PTR [rax-0x48ffff8b],dl
  42f3e9:	jne    0x42f3eb
  42f3eb:	add    BYTE PTR [rsp+rdx*1],ah
  42f3ee:	add    eax,DWORD PTR [rax]
  42f3f0:	shl    BYTE PTR [rbp+0x0],0x0
  42f3f4:	lock jne 0x42f3f7
  42f3f7:	add    BYTE PTR [rsp+rdx*1],ch
  42f3fa:	add    eax,DWORD PTR [rax]
  42f3fc:	lock jne 0x42f3ff
  42f3ff:	add    BYTE PTR [rdi],dl
  42f401:	jns    0x42f403
  42f403:	add    BYTE PTR [rax],bh
  42f405:	adc    al,0x3
  42f407:	add    BYTE PTR [rax],ah
  42f409:	jns    0x42f40b
  42f40b:	add    BYTE PTR [rdi+0x5000007a],bl
  42f411:	adc    al,0x3
  42f413:	add    BYTE PTR [rax+0x800007a],ah
  42f419:	jnp    0x42f41b
  42f41b:	add    BYTE PTR [rax+0x14],ch
  42f41e:	add    eax,DWORD PTR [rax]
  42f420:	adc    BYTE PTR [rbx+0x0],bh
  42f423:	add    BYTE PTR [rbx+rdi*2],ah
  42f426:	add    BYTE PTR [rax],al
  42f428:	jl     0x42f43e
  42f42a:	add    eax,DWORD PTR [rax]
  42f42c:	xor    BYTE PTR [rbx+0x0],bh
  42f42f:	add    BYTE PTR [rdx+0x7b],dl
  42f432:	add    BYTE PTR [rax],al
  42f434:	test   BYTE PTR [rbx+rax*1],dl
  42f437:	add    BYTE PTR [rax+0x7b],ah
  42f43a:	add    BYTE PTR [rax],al
  42f43c:	rex jle 0x42f43f
  42f43f:	add    BYTE PTR [rsp+rdx*1+0x7e400003],cl
  42f446:	add    BYTE PTR [rax],al
  42f448:	pop    rsp
  42f449:	jle    0x42f44b
  42f44b:	add    BYTE PTR [rsp+rdx*1+0x7e600003],bl
  42f452:	add    BYTE PTR [rax],al
  42f454:	movabs al,ds:0xa0000314a000007f
  42f45d:	jg     0x42f45f
  42f45f:	add    BYTE PTR [rbx],al
  42f461:	add    DWORD PTR [rax],0x314a400
  42f467:	add    BYTE PTR [rax],dl
  42f469:	add    DWORD PTR [rax],0x819500
  42f46f:	add    BYTE PTR [rax-0x5ffffcec],ch
  42f475:	add    DWORD PTR [rax],0x826100
  42f47b:	add    BYTE PTR [rsp+rdx*1-0x7d8ffffd],dh
  42f482:	add    BYTE PTR [rax],al
  42f484:	enter  0x84,0x0
  42f488:	int3   
  42f489:	adc    al,0x3
  42f48b:	add    al,dl
  42f48d:	test   BYTE PTR [rax],al
  42f48f:	add    BYTE PTR [rcx-0x23ffff7b],dl
  42f495:	adc    al,0x3
  42f497:	add    BYTE PTR [rax+0x43000085],ah
  42f49d:	xchg   DWORD PTR [rax],eax
  42f49f:	add    al,dh
  42f4a1:	adc    al,0x3
  42f4a3:	add    BYTE PTR [rax-0x79],dl
  42f4a6:	add    BYTE PTR [rax],al
  42f4a8:	ror    BYTE PTR [rax+0x15000000],1
  42f4ae:	add    eax,DWORD PTR [rax]
  42f4b0:	ror    BYTE PTR [rax-0x764c0000],1
  42f4b6:	add    BYTE PTR [rax],al
  42f4b8:	adc    al,0x15
  42f4ba:	add    eax,DWORD PTR [rax]
  42f4bc:	ror    BYTE PTR [rcx-0x75690000],0x0
  42f4c3:	add    BYTE PTR [rax],ah
  42f4c5:	adc    eax,0x8aa00003
  42f4ca:	add    BYTE PTR [rax],al
  42f4cc:	(bad)  
  42f4cd:	mov    eax,DWORD PTR [rax]
  42f4cf:	add    BYTE PTR [rdx*1-0x74bffffd],ch
  42f4d6:	add    BYTE PTR [rax],al
  42f4d8:	std    
  42f4d9:	mov    WORD PTR [rax],es
  42f4db:	add    BYTE PTR [rax],bh
  42f4dd:	adc    eax,0x8d000003
  42f4e2:	add    BYTE PTR [rax],al
  42f4e4:	push   rcx
  42f4e5:	lea    eax,[rax]
  42f4e7:	add    BYTE PTR [rbp+rdx*1+0x3],al
  42f4eb:	add    BYTE PTR [rax-0x73],ah
  42f4ee:	add    BYTE PTR [rax],al
  42f4f0:	(bad)  
  42f4f1:	mov    es,WORD PTR [rax]
  42f4f3:	add    BYTE PTR [rax+0x15],dl
  42f4f6:	add    eax,DWORD PTR [rax]
  42f4f8:	and    BYTE PTR [rsi-0x707a0000],cl
  42f4fe:	add    BYTE PTR [rax],al
  42f500:	(bad)  
  42f501:	adc    eax,0x8f900003
  42f506:	add    BYTE PTR [rax],al
  42f508:	ror    DWORD PTR [rdi+0x15740000],1
  42f50e:	add    eax,DWORD PTR [rax]
  42f510:	loopne 0x42f4a1
  42f512:	add    BYTE PTR [rax],al
  42f514:	(bad)  
  42f515:	nop
  42f516:	add    BYTE PTR [rax],al
  42f518:	adc    BYTE PTR [rip+0xffffffff90a00003],0x0        # 0xffffffff90e2f522
  42f51f:	add    al,cl
  42f521:	xchg   edx,eax
  42f522:	add    BYTE PTR [rax],al
  42f524:	nop
  42f525:	adc    eax,0x92d00003
  42f52a:	add    BYTE PTR [rax],al
  42f52c:	retf   
  42f52d:	xchg   esp,eax
  42f52e:	add    BYTE PTR [rax],al
  42f530:	test   al,0x15
  42f532:	add    eax,DWORD PTR [rax]
  42f534:	rcl    BYTE PTR [rax+rax*1+0x958800],1
  42f53b:	add    BYTE PTR [rbp+rdx*1-0x6a6ffffd],dh
  42f542:	add    BYTE PTR [rax],al
  42f544:	pop    rcx
  42f545:	xchg   edi,eax
  42f546:	add    BYTE PTR [rax],al
  42f548:	(bad)  
  42f549:	adc    eax,0x97600003
  42f54e:	add    BYTE PTR [rax],al
  42f550:	mov    eax,0xdc000098
  42f555:	adc    eax,0x98c00003
  42f55a:	add    BYTE PTR [rax],al
  42f55c:	xor    eax,0xf000009a
  42f561:	adc    eax,0x9a400003
  42f566:	add    BYTE PTR [rax],al
  42f568:	mov    WORD PTR [rdx+0x16080000],ds
  42f56e:	add    eax,DWORD PTR [rax]
  42f570:	nop
  42f571:	(bad)  
  42f572:	add    BYTE PTR [rax],al
  42f574:	clc    
  42f575:	sahf   
  42f576:	add    BYTE PTR [rax],al
  42f578:	adc    al,0x16
  42f57a:	add    eax,DWORD PTR [rax]
  42f57c:	add    BYTE PTR [rdi-0x5d350000],bl
  42f582:	add    BYTE PTR [rax],al
  42f584:	sub    al,0x16
  42f586:	add    eax,DWORD PTR [rax]
  42f588:	shl    BYTE PTR [rdx-0x5b780000],1
  42f58e:	add    BYTE PTR [rax],al
  42f590:	rex.R (bad) 
  42f592:	add    eax,DWORD PTR [rax]
  42f594:	nop
  42f595:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42f596:	add    BYTE PTR [rax],al
  42f598:	sub    BYTE PTR [rbx+0x16540000],0x3
  42f59f:	add    BYTE PTR [rax+0x690000ab],al
  42f5a5:	scas   eax,DWORD PTR es:[rdi]
  42f5a6:	add    BYTE PTR [rax],al
  42f5a8:	ins    BYTE PTR es:[rdi],dx
  42f5a9:	(bad)  
  42f5aa:	add    eax,DWORD PTR [rax]
  42f5ac:	jo     0x42f55d
  42f5ae:	add    BYTE PTR [rax],al
  42f5b0:	div    DWORD PTR [rbx+0x16840000]
  42f5b6:	add    eax,DWORD PTR [rax]
  42f5b8:	add    BYTE PTR [rax+rax*1+0xbabb00],dh
  42f5bf:	add    BYTE PTR [rsi+rdx*1-0x453ffffd],bl
  42f5c6:	add    BYTE PTR [rax],al
  42f5c8:	cmp    eax,0xb40000bb
  42f5cd:	(bad)  
  42f5ce:	add    eax,DWORD PTR [rax]
  42f5d0:	rex mov ebx,0xbbbd0000
  42f5d6:	add    BYTE PTR [rax],al
  42f5d8:	(bad)  
  42f5d9:	(bad)  
  42f5da:	add    eax,DWORD PTR [rax]
  42f5dc:	sar    BYTE PTR [rbx-0x437c0000],0x0
  42f5e3:	add    ah,dl
  42f5e5:	(bad)  
  42f5e6:	add    eax,DWORD PTR [rax]
  42f5e8:	nop
  42f5e9:	mov    esp,0xbd460000
  42f5ee:	add    BYTE PTR [rax],al
  42f5f0:	fcom   QWORD PTR [rsi]
  42f5f2:	add    eax,DWORD PTR [rax]
  42f5f4:	push   rax
  42f5f5:	mov    ebp,0xbdd30000
  42f5fa:	add    BYTE PTR [rax],al
  42f5fc:	call   0xffffffffe042f917
  42f601:	mov    ebp,0xbe800000
  42f606:	add    BYTE PTR [rax],al
  42f608:	lock (bad) 
  42f60a:	add    eax,DWORD PTR [rax]
  42f60c:	cmp    BYTE PTR [rsi-0x40d10000],0x0
  42f613:	add    BYTE PTR [rax],al
  42f615:	(bad)  
  42f616:	add    eax,DWORD PTR [rax]
  42f618:	xor    BYTE PTR [rdi-0x40520000],bh
  42f61e:	add    BYTE PTR [rax],al
  42f620:	adc    BYTE PTR [rdi],dl
  42f622:	add    eax,DWORD PTR [rax]
  42f624:	mov    al,0xbf
  42f626:	add    BYTE PTR [rax],al
  42f628:	xchg   esp,eax
  42f629:	rol    DWORD PTR [rax],0x0
  42f62c:	sbb    BYTE PTR [rdi],dl
  42f62e:	add    eax,DWORD PTR [rax]
  42f630:	movabs al,ds:0x240000c3d90000c1
  42f639:	(bad)  
  42f63a:	add    eax,DWORD PTR [rax]
  42f63c:	loopne 0x42f601
  42f63e:	add    BYTE PTR [rax],al
  42f640:	lock rol BYTE PTR [rax],1
  42f643:	add    BYTE PTR [rax],bh
  42f645:	(bad)  
  42f646:	add    eax,DWORD PTR [rax]
  42f648:	lock rol BYTE PTR [rax],1
  42f64b:	add    BYTE PTR [rdx],ch
  42f64d:	rol    DWORD PTR [rax],1
  42f64f:	add    BYTE PTR [rax+0x17],dl
  42f652:	add    eax,DWORD PTR [rax]
  42f654:	xor    cl,dl
  42f656:	add    BYTE PTR [rax],al
  42f658:	xor    eax,0x5c0000d2
  42f65d:	(bad)  
  42f65e:	add    eax,DWORD PTR [rax]
  42f660:	rol    BYTE PTR [rax],cl
  42f663:	add    BYTE PTR [rdi-0x2e],ah
  42f666:	add    BYTE PTR [rax],al
  42f668:	fs (bad) 
  42f66a:	add    eax,DWORD PTR [rax]
  42f66c:	jo     0x42f640
  42f66e:	add    BYTE PTR [rax],al
  42f670:	jge    0x42f64a
  42f672:	add    BYTE PTR [rax],al
  42f674:	jo     0x42f68d
  42f676:	add    eax,DWORD PTR [rax]
  42f678:	sbb    al,0x0
  42f67b:	add    BYTE PTR [rsi],ch
  42f67d:	fild   DWORD PTR [rax]
  42f67f:	add    BYTE PTR [rax+0x30000317],cl
  42f685:	fild   DWORD PTR [rax]
  42f687:	add    BYTE PTR [rcx-0x5fffff23],bl
  42f68d:	(bad)  
  42f68e:	add    eax,DWORD PTR [rax]
  42f690:	movabs al,ds:0xb80000dec40000dd
  42f699:	(bad)  
  42f69a:	add    eax,DWORD PTR [rax]
  42f69c:	rcr    dh,1
  42f69e:	add    BYTE PTR [rax],al
  42f6a0:	rex.WRX out 0x0,eax
  42f6a3:	add    al,dl
  42f6a5:	(bad)  
  42f6a6:	add    eax,DWORD PTR [rax]
  42f6a8:	push   rax
  42f6a9:	out    0x0,eax
  42f6ab:	add    BYTE PTR [rdx-0x17ffff19],cl
  42f6b1:	(bad)  
  42f6b2:	add    eax,DWORD PTR [rax]
  42f6b4:	nop
  42f6b5:	out    0x0,eax
  42f6b7:	add    BYTE PTR [rbx],ah
  42f6b9:	call   0x1832f6be
  42f6be:	add    eax,DWORD PTR [rax]
  42f6c0:	xor    al,ch
  42f6c2:	add    BYTE PTR [rax],al
  42f6c4:	sbb    ch,dl
  42f6c6:	add    BYTE PTR [rax],al
  42f6c8:	cld    
  42f6c9:	(bad)  
  42f6ca:	add    eax,DWORD PTR [rax]
  42f6cc:	and    dl,ch
  42f6ce:	add    BYTE PTR [rax],al
  42f6d0:	gs in  al,dx
  42f6d2:	add    BYTE PTR [rax],al
  42f6d4:	or     al,0x18
  42f6d6:	add    eax,DWORD PTR [rax]
  42f6d8:	jo     0x42f6c6
  42f6da:	add    BYTE PTR [rax],al
  42f6dc:	mov    esi,0x240000ec
  42f6e1:	sbb    BYTE PTR [rbx],al
  42f6e3:	add    al,al
  42f6e5:	in     al,dx
  42f6e6:	add    BYTE PTR [rax],al
  42f6e8:	mov    ecx,0x300000f1
  42f6ed:	sbb    BYTE PTR [rbx],al
  42f6ef:	add    al,al
  42f6f1:	icebp  
  42f6f2:	add    BYTE PTR [rax],al
  42f6f4:	imul   esi,edx,0x18480000
  42f6fa:	add    eax,DWORD PTR [rax]
  42f6fc:	jo     0x42f6f0
  42f6fe:	add    BYTE PTR [rax],al
  42f700:	scas   al,BYTE PTR es:[rdi]
  42f701:	repz add BYTE PTR [rax],al
  42f704:	push   rsp
  42f705:	sbb    BYTE PTR [rbx],al
  42f707:	add    BYTE PTR [rax-0x71ffff0d],dh
  42f70d:	hlt    
  42f70e:	add    BYTE PTR [rax],al
  42f710:	push   0xffffffff90000318
  42f715:	hlt    
  42f716:	add    BYTE PTR [rax],al
  42f718:	xlat   BYTE PTR ds:[rbx]
  42f719:	clc    
  42f71a:	add    BYTE PTR [rax],al
  42f71c:	js     0x42f736
  42f71e:	add    eax,DWORD PTR [rax]
  42f720:	loopne 0x42f71a
  42f722:	add    BYTE PTR [rax],al
  42f724:	cmc    
  42f725:	clc    
  42f726:	add    BYTE PTR [rax],al
  42f728:	nop
  42f729:	sbb    BYTE PTR [rbx],al
  42f72b:	add    BYTE PTR [rax],al
  42f72d:	stc    
  42f72e:	add    BYTE PTR [rax],al
  42f730:	rex.RX stc 
  42f732:	add    BYTE PTR [rax],al
  42f734:	xchg   esp,eax
  42f735:	sbb    BYTE PTR [rbx],al
  42f737:	add    BYTE PTR [rax-0x7],dl
  42f73a:	add    BYTE PTR [rax],al
  42f73c:	sahf   
  42f73d:	stc    
  42f73e:	add    BYTE PTR [rax],al
  42f740:	pushf  
  42f741:	sbb    BYTE PTR [rbx],al
  42f743:	add    BYTE PTR [rax+0x1c0000f9],ah
  42f749:	inc    BYTE PTR [rax]
  42f74b:	add    BYTE PTR [rax+rbx*1-0x1dffffd],ah
  42f752:	add    BYTE PTR [rax],al
  42f754:	pop    rdi
  42f755:	inc    DWORD PTR [rax]
  42f757:	add    BYTE PTR [rax+rbx*1-0x9ffffd],bh
  42f75e:	add    BYTE PTR [rax],al
  42f760:	pop    rdx
  42f761:	add    BYTE PTR [rcx],al
  42f763:	add    al,cl
  42f765:	sbb    BYTE PTR [rbx],al
  42f767:	add    BYTE PTR [rax+0x0],ah
  42f76a:	add    DWORD PTR [rax],eax
  42f76c:	add    QWORD PTR [r9],r8
  42f76f:	add    ah,dl
  42f771:	sbb    BYTE PTR [rbx],al
  42f773:	add    BYTE PTR [rax+0x1],dl
  42f776:	add    DWORD PTR [rax],eax
  42f778:	cwde   
  42f779:	add    al,0x1
  42f77b:	add    al,ah
  42f77d:	sbb    BYTE PTR [rbx],al
  42f77f:	add    BYTE PTR [rax+0x10000104],ah
  42f785:	add    eax,0x18f40001
  42f78a:	add    eax,DWORD PTR [rax]
  42f78c:	adc    BYTE PTR [rip+0x65e0001],al        # 0x6a0f793
  42f792:	add    DWORD PTR [rax],eax
  42f794:	add    BYTE PTR [rcx],bl
  42f796:	add    eax,DWORD PTR [rax]
  42f798:	(bad)  
  42f799:	(bad)  
  42f79a:	add    DWORD PTR [rax],eax
  42f79c:	pop    rax
  42f79d:	or     BYTE PTR [rcx],al
  42f79f:	add    BYTE PTR [rax],dl
  42f7a1:	sbb    DWORD PTR [rbx],eax
  42f7a3:	add    BYTE PTR [rax+0x8],ah
  42f7a6:	add    DWORD PTR [rax],eax
  42f7a8:	or     DWORD PTR gs:[rcx],eax
  42f7ab:	add    BYTE PTR [rax],ah
  42f7ad:	sbb    DWORD PTR [rbx],eax
  42f7af:	add    BYTE PTR [rax+0x9],dh
  42f7b2:	add    DWORD PTR [rax],eax
  42f7b4:	rex.RXB or r8d,DWORD PTR [r9]
  42f7b7:	add    BYTE PTR [rcx+rbx*1],dh
  42f7ba:	add    eax,DWORD PTR [rax]
  42f7bc:	push   rax
  42f7bd:	or     eax,DWORD PTR [rcx]
  42f7bf:	add    BYTE PTR [rdi],al
  42f7c1:	or     al,0x1
  42f7c3:	add    BYTE PTR [rax+0x19],cl
  42f7c6:	add    eax,DWORD PTR [rax]
  42f7c8:	adc    BYTE PTR [rcx+rax*1],cl
  42f7cb:	add    BYTE PTR [rax],cl
  42f7cd:	(bad)  
  42f7ce:	add    DWORD PTR [rax],eax
  42f7d0:	pop    rax
  42f7d1:	sbb    DWORD PTR [rbx],eax
  42f7d3:	add    BYTE PTR [rax],dl
  42f7d5:	(bad)  
  42f7d6:	add    DWORD PTR [rax],eax
  42f7d8:	addr32 (bad) 
  42f7da:	add    DWORD PTR [rax],eax
  42f7dc:	push   0x70000319
  42f7e1:	(bad)  
  42f7e2:	add    DWORD PTR [rax],eax
  42f7e4:	stos   BYTE PTR es:[rdi],al
  42f7e5:	(bad)  
  42f7e6:	add    DWORD PTR [rax],eax
  42f7e8:	je     0x42f803
  42f7ea:	add    eax,DWORD PTR [rax]
  42f7ec:	mov    al,0xe
  42f7ee:	add    DWORD PTR [rax],eax
  42f7f0:	(bad)  
  42f7f1:	sgdt   [rax]
  42f7f4:	js     0x42f80f
  42f7f6:	add    eax,DWORD PTR [rax]
  42f7f8:	adc    BYTE PTR [rdi],cl
  42f7fa:	add    DWORD PTR [rax],eax
  42f7fc:	sgdt   [r8]
  42f800:	jl     0x42f81b
  42f802:	add    eax,DWORD PTR [rax]
  42f804:	push   rax
  42f805:	sgdt   [rax]
  42f808:	jp     0x42f819
  42f80a:	add    DWORD PTR [rax],eax
  42f80c:	sbb    BYTE PTR [rcx],0x3
  42f80f:	add    BYTE PTR [rax-0x4cfffef1],al
  42f815:	adc    DWORD PTR [rcx],eax
  42f817:	add    BYTE PTR [rcx+rbx*1+0x11c00003],al
  42f81e:	add    DWORD PTR [rax],eax
  42f820:	rex.XB adc al,BYTE PTR [r9]
  42f823:	add    BYTE PTR [rcx+rbx*1+0x12500003],dl
  42f82a:	add    DWORD PTR [rax],eax
  42f82c:	loop   0x42f84a
  42f82e:	add    DWORD PTR [rax],eax
  42f830:	movabs al,ds:0xba00011cf0000319
  42f839:	(bad)  
  42f83a:	add    DWORD PTR [rax],eax
  42f83c:	mov    eax,0xc0000319
  42f841:	(bad)  
  42f842:	add    DWORD PTR [rax],eax
  42f844:	neg    DWORD PTR [rsi]
  42f846:	add    DWORD PTR [rax],eax
  42f848:	rcr    BYTE PTR [rcx],1
  42f84a:	add    eax,DWORD PTR [rax]
  42f84c:	add    BYTE PTR [rdi],bl
  42f84e:	add    DWORD PTR [rax],eax
  42f850:	xchg   ecx,eax
  42f851:	(bad)  
  42f852:	add    DWORD PTR [rax],eax
  42f854:	fcomp  QWORD PTR [rcx]
  42f856:	add    eax,DWORD PTR [rax]
  42f858:	movabs al,ds:0xe80001204400011f
  42f861:	sbb    DWORD PTR [rbx],eax
  42f863:	add    BYTE PTR [rax+0x20],dl
  42f866:	add    DWORD PTR [rax],eax
  42f868:	std    
  42f869:	and    BYTE PTR [rcx],al
  42f86b:	add    al,bh
  42f86d:	sbb    DWORD PTR [rbx],eax
  42f86f:	add    BYTE PTR [rax],al
  42f871:	and    DWORD PTR [rcx],eax
  42f873:	add    BYTE PTR [rcx+riz*1],ah
  42f876:	add    DWORD PTR [rax],eax
  42f878:	or     al,0x1a
  42f87a:	add    eax,DWORD PTR [rax]
  42f87c:	xor    BYTE PTR [rcx],ah
  42f87e:	add    DWORD PTR [rax],eax
  42f880:	and    eax,0x14000125
  42f885:	sbb    al,BYTE PTR [rbx]
  42f887:	add    BYTE PTR [rax],dh
  42f889:	and    eax,0x273c0001
  42f88e:	add    DWORD PTR [rax],eax
  42f890:	and    al,0x1a
  42f892:	add    eax,DWORD PTR [rax]
  42f894:	rex (bad) 
  42f896:	add    DWORD PTR [rax],eax
  42f898:	rex.WX (bad) 
  42f89a:	add    DWORD PTR [rax],eax
  42f89c:	cmp    al,0x1a
  42f89e:	add    eax,DWORD PTR [rax]
  42f8a0:	push   rax
  42f8a1:	(bad)  
  42f8a2:	add    DWORD PTR [rax],eax
  42f8a4:	imul   DWORD PTR [rdi]
  42f8a6:	add    DWORD PTR [rax],eax
  42f8a8:	push   rsp
  42f8a9:	sbb    al,BYTE PTR [rbx]
  42f8ab:	add    BYTE PTR [rax],al
  42f8ad:	xor    BYTE PTR [rcx],al
  42f8af:	add    BYTE PTR [rcx+rsi*1],dh
  42f8b2:	add    DWORD PTR [rax],eax
  42f8b4:	(bad)  
  42f8b5:	sbb    al,BYTE PTR [rbx]
  42f8b7:	add    BYTE PTR [rax+0x31],al
  42f8ba:	add    DWORD PTR [rax],eax
  42f8bc:	mov    WORD PTR [rdi],?
  42f8be:	add    DWORD PTR [rax],eax
  42f8c0:	js     0x42f8dc
  42f8c2:	add    eax,DWORD PTR [rax]
  42f8c4:	nop
  42f8c5:	(bad)  
  42f8c6:	add    DWORD PTR [rax],eax
  42f8c8:	(bad)  
  42f8c9:	(bad)  
  42f8ca:	add    DWORD PTR [rax],eax
  42f8cc:	mov    BYTE PTR [rdx],bl
  42f8ce:	add    eax,DWORD PTR [rax]
  42f8d0:	movabs al,ds:0x90000137b3000137
  42f8d9:	sbb    al,BYTE PTR [rbx]
  42f8db:	add    al,al
  42f8dd:	(bad)  
  42f8de:	add    DWORD PTR [rax],eax
  42f8e0:	enter  0x137,0x0
  42f8e4:	cwde   
  42f8e5:	sbb    al,BYTE PTR [rbx]
  42f8e7:	add    al,dl
  42f8e9:	(bad)  
  42f8ea:	add    DWORD PTR [rax],eax
  42f8ec:	and    al,0x38
  42f8ee:	add    DWORD PTR [rax],eax
  42f8f0:	pushf  
  42f8f1:	sbb    al,BYTE PTR [rbx]
  42f8f3:	add    BYTE PTR [rax],dh
  42f8f5:	cmp    BYTE PTR [rcx],al
  42f8f7:	add    BYTE PTR [rbx+0x38],ch
  42f8fa:	add    DWORD PTR [rax],eax
  42f8fc:	test   al,0x1a
  42f8fe:	add    eax,DWORD PTR [rax]
  42f900:	jo     0x42f93a
  42f902:	add    DWORD PTR [rax],eax
  42f904:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42f905:	cmp    BYTE PTR [rcx],al
  42f907:	add    BYTE PTR [rdx+rbx*1+0x38b00003],dh
  42f90e:	add    DWORD PTR [rax],eax
  42f910:	repnz cmp DWORD PTR [rcx],eax
  42f913:	add    BYTE PTR [rdx+rbx*1+0x3a000003],bh
  42f91a:	add    DWORD PTR [rax],eax
  42f91c:	mov    ?,WORD PTR [rcx+rax*1]
  42f91f:	add    al,cl
  42f921:	sbb    al,BYTE PTR [rbx]
  42f923:	add    BYTE PTR [rax+0x2b00013c],dl
  42f929:	(bad)  
  42f92a:	add    DWORD PTR [rax],eax
  42f92c:	loopne 0x42f948
  42f92e:	add    eax,DWORD PTR [rax]
  42f930:	xor    BYTE PTR [rdi],bh
  42f932:	add    DWORD PTR [rax],eax
  42f934:	jne    0x42f975
  42f936:	add    DWORD PTR [rax],eax
  42f938:	clc    
  42f939:	sbb    al,BYTE PTR [rbx]
  42f93b:	add    BYTE PTR [rax+0x1c00013f],al
  42f941:	rex add DWORD PTR [rax],eax
  42f944:	add    BYTE PTR [rbx],bl
  42f946:	add    eax,DWORD PTR [rax]
  42f948:	and    BYTE PTR [rax+0x1],al
  42f94b:	add    BYTE PTR [rip+0x10000140],bh        # 0x1042fa91
  42f951:	sbb    eax,DWORD PTR [rbx]
  42f953:	add    BYTE PTR [rax+0x40],al
  42f956:	add    DWORD PTR [rax],eax
  42f958:	int    0x5d
  42f95a:	add    DWORD PTR [rax],eax
  42f95c:	sbb    BYTE PTR [rbx],bl
  42f95e:	add    eax,DWORD PTR [rax]
  42f960:	rcr    BYTE PTR [rbp+0x1],1
  42f963:	add    BYTE PTR [rdi+0x5e],dh
  42f966:	add    DWORD PTR [rax],eax
  42f968:	xor    al,0x1b
  42f96a:	add    eax,DWORD PTR [rax]
  42f96c:	sbb    BYTE PTR [rsi+0x1],0x0
  42f970:	push   0x5f
  42f972:	add    DWORD PTR [rax],eax
  42f974:	cmp    BYTE PTR [rbx],bl
  42f976:	add    eax,DWORD PTR [rax]
  42f978:	jo     0x42f9d9
  42f97a:	add    DWORD PTR [rax],eax
  42f97c:	rex.WRXB imul r8,QWORD PTR [r9],0x0
  42f980:	cmp    al,0x1b
  42f982:	add    eax,DWORD PTR [rax]
  42f984:	push   rax
  42f985:	imul   eax,DWORD PTR [rcx],0x0
  42f988:	jmp    0x42f9f8
  42f98a:	add    DWORD PTR [rax],eax
  42f98c:	push   rsp
  42f98d:	sbb    eax,DWORD PTR [rbx]
  42f98f:	add    al,dh
  42f991:	outs   dx,BYTE PTR ds:[rsi]
  42f992:	add    DWORD PTR [rax],eax
  42f994:	(bad)  
  42f995:	jb     0x42f998
  42f997:	add    BYTE PTR [rax+0x1b],ah
  42f99a:	add    eax,DWORD PTR [rax]
  42f99c:	shl    BYTE PTR [rdx+0x1],1
  42f99f:	add    al,ch
  42f9a1:	jb     0x42f9a4
  42f9a3:	add    BYTE PTR [rbx+rbx*1+0x3],ch
  42f9a7:	add    al,dh
  42f9a9:	jb     0x42f9ac
  42f9ab:	add    dh,bh
  42f9ad:	jb     0x42f9b0
  42f9af:	add    BYTE PTR [rbx+rbx*1+0x3],dh
  42f9b3:	add    BYTE PTR [rax],al
  42f9b5:	jae    0x42f9b8
  42f9b7:	add    BYTE PTR [rdi+rsi*2],cl
  42f9ba:	add    DWORD PTR [rax],eax
  42f9bc:	js     0x42f9d9
  42f9be:	add    eax,DWORD PTR [rax]
  42f9c0:	adc    BYTE PTR [rdi+0x1],dh
  42f9c3:	add    BYTE PTR [rip+0xffffffff84000177],dl        # 0xffffffff8442fb40
  42f9c9:	sbb    eax,DWORD PTR [rbx]
  42f9cb:	add    BYTE PTR [rax],ah
  42f9cd:	ja     0x42f9d0
  42f9cf:	add    cl,dl
  42f9d1:	ja     0x42f9d4
  42f9d3:	add    BYTE PTR [rax-0x1ffffce5],cl
  42f9d9:	ja     0x42f9dc
  42f9db:	add    BYTE PTR [rbx+rdi*2+0x1b980001],ah
  42f9e2:	add    eax,DWORD PTR [rax]
  42f9e4:	mov    al,0x7b
  42f9e6:	add    DWORD PTR [rax],eax
  42f9e8:	mov    cl,0x7b
  42f9ea:	add    DWORD PTR [rax],eax
  42f9ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42f9ed:	sbb    eax,DWORD PTR [rbx]
  42f9ef:	add    al,al
  42f9f1:	jnp    0x42f9f4
  42f9f3:	add    dl,ch
  42f9f5:	jnp    0x42f9f8
  42f9f7:	add    BYTE PTR [rax-0xffffce5],ch
  42f9fd:	jnp    0x42fa00
  42f9ff:	add    BYTE PTR [rip+0xffffffffb000017c],cl        # 0xffffffffb042fb81
  42fa05:	sbb    eax,DWORD PTR [rbx]
  42fa07:	add    BYTE PTR [rax],dl
  42fa09:	jl     0x42fa0c
  42fa0b:	add    dl,al
  42fa0d:	jg     0x42fa10
  42fa0f:	add    BYTE PTR [rax-0x2ffffce5],bh
  42fa15:	jg     0x42fa18
  42fa17:	add    al,dh
  42fa19:	add    DWORD PTR [rcx],0x0
  42fa1c:	(bad)  
  42fa1d:	sbb    eax,DWORD PTR [rbx]
  42fa1f:	add    al,dh
  42fa21:	add    DWORD PTR [rcx],0x0
  42fa24:	in     al,0x87
  42fa26:	add    DWORD PTR [rax],eax
  42fa28:	fcomp  QWORD PTR [rbx]
  42fa2a:	add    eax,DWORD PTR [rax]
  42fa2c:	lock xchg DWORD PTR [rcx],eax
  42fa2f:	add    dh,bl
  42fa31:	xchg   esp,eax
  42fa32:	add    DWORD PTR [rax],eax
  42fa34:	clc    
  42fa35:	sbb    eax,DWORD PTR [rbx]
  42fa37:	add    al,ah
  42fa39:	xchg   esp,eax
  42fa3a:	add    DWORD PTR [rax],eax
  42fa3c:	xchg   edx,eax
  42fa3d:	cwde   
  42fa3e:	add    DWORD PTR [rax],eax
  42fa40:	adc    al,0x1c
  42fa42:	add    eax,DWORD PTR [rax]
  42fa44:	movabs al,ds:0x2000019c72000198
  42fa4d:	sbb    al,0x3
  42fa4f:	add    BYTE PTR [rax-0x6afffe64],al
  42fa55:	movabs al,ds:0xa0a000031c2c0001
  42fa5e:	add    DWORD PTR [rax],eax
  42fa60:	movs   BYTE PTR es:[rdi],BYTE PTR fs:[rsi]
  42fa62:	add    DWORD PTR [rax],eax
  42fa64:	cmp    BYTE PTR [rbx+rax*1],bl
  42fa67:	add    BYTE PTR [rax-0x5c],dh
  42fa6a:	add    DWORD PTR [rax],eax
  42fa6c:	adc    eax,0x440001a8
  42fa71:	sbb    al,0x3
  42fa73:	add    BYTE PTR [rax],ah
  42fa75:	test   al,0x1
  42fa77:	add    BYTE PTR [rax+rbp*4+0x1],bl
  42fa7b:	add    BYTE PTR [rax+0x1c],dl
  42fa7e:	add    eax,DWORD PTR [rax]
  42fa80:	(bad)  
  42fa81:	test   al,0x1
  42fa83:	add    BYTE PTR [rax+0x5c0001a8],dl
  42fa89:	sbb    al,0x3
  42fa8b:	add    BYTE PTR [rax+0x740001a8],dl
  42fa91:	test   eax,0x1c640001
  42fa96:	add    eax,DWORD PTR [rax]
  42fa98:	sub    BYTE PTR [rcx-0x5297ffff],0x1
  42fa9f:	add    BYTE PTR [rax+0x1c],dh
  42faa2:	add    eax,DWORD PTR [rax]
  42faa4:	jo     0x42fa53
  42faa6:	add    DWORD PTR [rax],eax
  42faa8:	xchg   esi,eax
  42faa9:	lods   eax,DWORD PTR ds:[rsi]
  42faaa:	add    DWORD PTR [rax],eax
  42faac:	je     0x42faca
  42faae:	add    eax,DWORD PTR [rax]
  42fab0:	movabs al,ds:0x780001add60001ad
  42fab9:	sbb    al,0x3
  42fabb:	add    al,ah
  42fabd:	lods   eax,DWORD PTR ds:[rsi]
  42fabe:	add    DWORD PTR [rax],eax
  42fac0:	out    dx,eax
  42fac1:	lods   eax,DWORD PTR ds:[rsi]
  42fac2:	add    DWORD PTR [rax],eax
  42fac4:	jl     0x42fae2
  42fac6:	add    eax,DWORD PTR [rax]
  42fac8:	lock lods eax,DWORD PTR ds:[rsi]
  42faca:	add    DWORD PTR [rax],eax
  42facc:	adc    ebp,DWORD PTR [rsi+0x1c800001]
  42fad2:	add    eax,DWORD PTR [rax]
  42fad4:	and    BYTE PTR [rsi-0x5161ffff],ch
  42fada:	add    DWORD PTR [rax],eax
  42fadc:	mov    BYTE PTR [rbx+rax*1],bl
  42fadf:	add    BYTE PTR [rax-0x26fffe52],ah
  42fae5:	scas   al,BYTE PTR es:[rdi]
  42fae6:	add    DWORD PTR [rax],eax
  42fae8:	nop
  42fae9:	sbb    al,0x3
  42faeb:	add    al,ah
  42faed:	scas   al,BYTE PTR es:[rdi]
  42faee:	add    DWORD PTR [rax],eax
  42faf0:	(bad)  
  42faf1:	mov    bl,0x1
  42faf3:	add    BYTE PTR [rsp+rbx*1-0x4cdffffd],dl
  42fafa:	add    DWORD PTR [rax],eax
  42fafc:	rex.X mov dil,0x1
  42faff:	add    BYTE PTR [rsp+rbx*1-0x48affffd],ah
  42fb06:	add    DWORD PTR [rax],eax
  42fb08:	ret    0x1b7
  42fb0b:	add    BYTE PTR [rsp+rbx*1-0x482ffffd],dh
  42fb12:	add    DWORD PTR [rax],eax
  42fb14:	std    
  42fb15:	mov    bh,0x1
  42fb17:	add    al,al
  42fb19:	sbb    al,0x3
  42fb1b:	add    BYTE PTR [rax],al
  42fb1d:	mov    eax,0xbbd40001
  42fb22:	add    DWORD PTR [rax],eax
  42fb24:	enter  0x31c,0x0
  42fb28:	sar    BYTE PTR [rcx+rax*1+0x1bcfa00],1
  42fb2f:	add    ah,dl
  42fb31:	sbb    al,0x3
  42fb33:	add    BYTE PTR [rax],al
  42fb35:	mov    ebp,0xbd410001
  42fb3a:	add    DWORD PTR [rax],eax
  42fb3c:	fcomp  QWORD PTR [rbx+rax*1]
  42fb3f:	add    BYTE PTR [rax-0x43],dh
  42fb42:	add    DWORD PTR [rax],eax
  42fb44:	(bad)  
  42fb45:	mov    esi,0x1ce40001
  42fb4a:	add    eax,DWORD PTR [rax]
  42fb4c:	and    BYTE PTR [rsi-0x41c6ffff],bh
  42fb52:	add    DWORD PTR [rax],eax
  42fb54:	in     al,dx
  42fb55:	sbb    al,0x3
  42fb57:	add    BYTE PTR [rax-0x42],al
  42fb5a:	add    DWORD PTR [rax],eax
  42fb5c:	jne    0x42fb1c
  42fb5e:	add    DWORD PTR [rax],eax
  42fb60:	hlt    
  42fb61:	sbb    al,0x3
  42fb63:	add    BYTE PTR [rax-0x2afffe42],al
  42fb69:	mov    esi,0x1cfc0001
  42fb6e:	add    eax,DWORD PTR [rax]
  42fb70:	loopne 0x42fb30
  42fb72:	add    DWORD PTR [rax],eax
  42fb74:	cld    
  42fb75:	mov    esi,0x1d080001
  42fb7a:	add    eax,DWORD PTR [rax]
  42fb7c:	add    BYTE PTR [rdi-0x40f5ffff],bh
  42fb82:	add    DWORD PTR [rax],eax
  42fb84:	or     al,0x1d
  42fb86:	add    eax,DWORD PTR [rax]
  42fb88:	adc    BYTE PTR [rdi-0x40ecffff],bh
  42fb8e:	add    DWORD PTR [rax],eax
  42fb90:	adc    BYTE PTR [rip+0xffffffffbf200003],bl        # 0xffffffffbf62fb99
  42fb96:	add    DWORD PTR [rax],eax
  42fb98:	idiv   BYTE PTR [rdi+0x1d140001]
  42fb9e:	add    eax,DWORD PTR [rax]
  42fba0:	add    al,al
  42fba2:	add    DWORD PTR [rax],eax
  42fba4:	sti    
  42fba5:	rol    BYTE PTR [rcx],0x0
  42fba8:	and    al,0x1d
  42fbaa:	add    eax,DWORD PTR [rax]
  42fbac:	add    cl,al
  42fbae:	add    DWORD PTR [rax],eax
  42fbb0:	(bad)  
  42fbb1:	rol    DWORD PTR [rcx],0x0
  42fbb4:	xor    al,0x1d
  42fbb6:	add    eax,DWORD PTR [rax]
  42fbb8:	xor    cl,al
  42fbba:	add    DWORD PTR [rax],eax
  42fbbc:	cdq    
  42fbbd:	rol    DWORD PTR [rcx],0x0
  42fbc0:	cmp    al,0x1d
  42fbc2:	add    eax,DWORD PTR [rax]
  42fbc4:	movabs al,ds:0x480001c1a30001c1
  42fbcd:	sbb    eax,0xc1b00003
  42fbd2:	add    DWORD PTR [rax],eax
  42fbd4:	icebp  
  42fbd5:	rol    DWORD PTR [rcx],0x0
  42fbd8:	rex.WR sbb rax,0xffffffffc2000003
  42fbde:	add    DWORD PTR [rax],eax
  42fbe0:	or     al,0xc2
  42fbe2:	add    DWORD PTR [rax],eax
  42fbe4:	push   rsp
  42fbe5:	sbb    eax,0xc2100003
  42fbea:	add    DWORD PTR [rax],eax
  42fbec:	or     al,0xc3
  42fbee:	add    DWORD PTR [rax],eax
  42fbf0:	pop    rax
  42fbf1:	sbb    eax,0xc3100003
  42fbf6:	add    DWORD PTR [rax],eax
  42fbf8:	adc    eax,ebx
  42fbfa:	add    DWORD PTR [rax],eax
  42fbfc:	jo     0x42fc1b
  42fbfe:	add    eax,DWORD PTR [rax]
  42fc00:	and    bl,al
  42fc02:	add    DWORD PTR [rax],eax
  42fc04:	and    al,0xc3
  42fc06:	add    DWORD PTR [rax],eax
  42fc08:	je     0x42fc27
  42fc0a:	add    eax,DWORD PTR [rax]
  42fc0c:	xor    bl,al
  42fc0e:	add    DWORD PTR [rax],eax
  42fc10:	xor    al,0xc3
  42fc12:	add    DWORD PTR [rax],eax
  42fc14:	js     0x42fc33
  42fc16:	add    eax,DWORD PTR [rax]
  42fc18:	rex ret 
  42fc1a:	add    DWORD PTR [rax],eax
  42fc1c:	movabs eax,ds:0xb000031d7c0001c3
  42fc25:	ret    
  42fc26:	add    DWORD PTR [rax],eax
  42fc28:	adc    al,ch
  42fc2a:	add    DWORD PTR [rax],eax
  42fc2c:	mov    BYTE PTR [rip+0xffffffffc5200003],bl        # 0xffffffffc562fc35
  42fc32:	add    DWORD PTR [rax],eax
  42fc34:	sbb    eax,ecx
  42fc36:	add    DWORD PTR [rax],eax
  42fc38:	pushf  
  42fc39:	sbb    eax,0xc8200003
  42fc3e:	add    DWORD PTR [rax],eax
  42fc40:	(bad)  
  42fc41:	leave  
  42fc42:	add    DWORD PTR [rax],eax
  42fc44:	mov    ah,0x1d
  42fc46:	add    eax,DWORD PTR [rax]
  42fc48:	ror    cl,1
  42fc4a:	add    DWORD PTR [rax],eax
  42fc4c:	mov    esp,0xbc0001ca
  42fc51:	sbb    eax,0xcac00003
  42fc56:	add    DWORD PTR [rax],eax
  42fc58:	js     0x42fc26
  42fc5a:	add    DWORD PTR [rax],eax
  42fc5c:	int3   
  42fc5d:	sbb    eax,0xcc800003
  42fc62:	add    DWORD PTR [rax],eax
  42fc64:	in     eax,dx
  42fc65:	int3   
  42fc66:	add    DWORD PTR [rax],eax
  42fc68:	(bad)  
  42fc69:	sbb    eax,0xccf00003
  42fc6e:	add    DWORD PTR [rax],eax
  42fc70:	outs   dx,DWORD PTR ds:[rsi]
  42fc71:	int    0x1
  42fc73:	add    ah,ah
  42fc75:	sbb    eax,0xcd700003
  42fc7a:	add    DWORD PTR [rax],eax
  42fc7c:	bswap  esi
  42fc7e:	add    DWORD PTR [rax],eax
  42fc80:	lock sbb eax,0xce100003
  42fc86:	add    DWORD PTR [rax],eax
  42fc88:	(bad)  
  42fc89:	(bad)  
  42fc8a:	add    DWORD PTR [rax],eax
  42fc8c:	clc    
  42fc8d:	sbb    eax,0xcef00003
  42fc92:	add    DWORD PTR [rax],eax
  42fc94:	bswap  edi
  42fc96:	add    DWORD PTR [rax],eax
  42fc98:	add    BYTE PTR [rsi],bl
  42fc9a:	add    eax,DWORD PTR [rax]
  42fc9c:	adc    bh,cl
  42fc9e:	add    DWORD PTR [rax],eax
  42fca0:	and    cl,bh
  42fca2:	add    DWORD PTR [rax],eax
  42fca4:	add    al,0x1e
  42fca6:	add    eax,DWORD PTR [rax]
  42fca8:	xor    bh,cl
  42fcaa:	add    DWORD PTR [rax],eax
  42fcac:	jne    0x42fc7d
  42fcae:	add    DWORD PTR [rax],eax
  42fcb0:	or     BYTE PTR [rsi],bl
  42fcb2:	add    eax,DWORD PTR [rax]
  42fcb4:	or     bh,0x1
  42fcb7:	add    BYTE PTR [rsi],bl
  42fcb9:	rol    BYTE PTR [rcx],1
  42fcbb:	add    BYTE PTR [rsi+rbx*1],cl
  42fcbe:	add    eax,DWORD PTR [rax]
  42fcc0:	and    al,dl
  42fcc2:	add    DWORD PTR [rax],eax
  42fcc4:	movsxd edx,eax
  42fcc6:	add    DWORD PTR [rax],eax
  42fcc8:	sbb    BYTE PTR [rsi],bl
  42fcca:	add    eax,DWORD PTR [rax]
  42fccc:	jo     0x42fc9e
  42fcce:	add    DWORD PTR [rax],eax
  42fcd0:	stos   DWORD PTR es:[rdi],eax
  42fcd1:	rol    BYTE PTR [rcx],1
  42fcd3:	add    BYTE PTR [rsi+rbx*1],ah
  42fcd6:	add    eax,DWORD PTR [rax]
  42fcd8:	mov    al,0xd0
  42fcda:	add    DWORD PTR [rax],eax
  42fcdc:	rol    DWORD PTR ds:[rcx],1
  42fcdf:	add    BYTE PTR [rsi+rbx*1],ch
  42fce2:	add    eax,DWORD PTR [rax]
  42fce4:	rex rol DWORD PTR [rcx],1
  42fce7:	add    BYTE PTR [rax-0x2f],bh
  42fcea:	add    DWORD PTR [rax],eax
  42fcec:	cmp    BYTE PTR [rsi],bl
  42fcee:	add    eax,DWORD PTR [rax]
  42fcf0:	adc    cl,0x1
  42fcf3:	add    ch,dl
  42fcf5:	rol    DWORD PTR [rcx],1
  42fcf7:	add    BYTE PTR [rsi+rbx*1+0x3],al
  42fcfb:	add    al,ah
  42fcfd:	rol    DWORD PTR [rcx],1
  42fcff:	add    BYTE PTR [rsi+0x500001d2],cl
  42fd05:	(bad)  
  42fd06:	add    eax,DWORD PTR [rax]
  42fd08:	rcl    dl,1
  42fd0a:	add    DWORD PTR [rax],eax
  42fd0c:	lods   eax,DWORD PTR ds:[rsi]
  42fd0d:	(bad)  
  42fd0e:	add    DWORD PTR [rax],eax
  42fd10:	(bad)  
  42fd11:	(bad)  
  42fd12:	add    eax,DWORD PTR [rax]
  42fd14:	mov    al,0xd4
  42fd16:	add    DWORD PTR [rax],eax
  42fd18:	iret   
  42fd19:	(bad)  
  42fd1a:	add    DWORD PTR [rax],eax
  42fd1c:	jo     0x42fd3c
  42fd1e:	add    eax,DWORD PTR [rax]
  42fd20:	rcl    dh,1
  42fd22:	add    DWORD PTR [rax],eax
  42fd24:	and    dl,bh
  42fd26:	add    DWORD PTR [rax],eax
  42fd28:	sbb    BYTE PTR [rsi],0x3
  42fd2b:	add    BYTE PTR [rax],dh
  42fd2d:	xlat   BYTE PTR ds:[rbx]
  42fd2e:	add    DWORD PTR [rax],eax
  42fd30:	(bad)  
  42fd31:	xlat   BYTE PTR ds:[rbx]
  42fd32:	add    DWORD PTR [rax],eax
  42fd34:	mov    WORD PTR [rsi],ds
  42fd36:	add    eax,DWORD PTR [rax]
  42fd38:	nop
  42fd39:	xlat   BYTE PTR ds:[rbx]
  42fd3a:	add    DWORD PTR [rax],eax
  42fd3c:	(bad)  
  42fd3d:	xlat   BYTE PTR ds:[rbx]
  42fd3e:	add    DWORD PTR [rax],eax
  42fd40:	xchg   esp,eax
  42fd41:	(bad)  
  42fd42:	add    eax,DWORD PTR [rax]
  42fd44:	rcl    bh,1
  42fd46:	add    DWORD PTR [rax],eax
  42fd48:	push   0xffffffffffffffd8
  42fd4a:	add    DWORD PTR [rax],eax
  42fd4c:	pushf  
  42fd4d:	(bad)  
  42fd4e:	add    eax,DWORD PTR [rax]
  42fd50:	jo     0x42fd2a
  42fd52:	add    DWORD PTR [rax],eax
  42fd54:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42fd55:	fadd   DWORD PTR [rcx]
  42fd57:	add    BYTE PTR [rax-0x4ffffce2],ch
  42fd5d:	fadd   DWORD PTR [rcx]
  42fd5f:	add    bl,ah
  42fd61:	fld    DWORD PTR [rcx]
  42fd63:	add    BYTE PTR [rsi+rbx*1-0x260ffffd],ch
  42fd6a:	add    DWORD PTR [rax],eax
  42fd6c:	mov    al,0xda
  42fd6e:	add    DWORD PTR [rax],eax
  42fd70:	rcr    BYTE PTR [rsi],0x3
  42fd73:	add    BYTE PTR [rax+0x2f0001da],dh
  42fd79:	fild   DWORD PTR [rcx]
  42fd7b:	add    al,dl
  42fd7d:	(bad)  
  42fd7e:	add    eax,DWORD PTR [rax]
  42fd80:	xor    bl,bl
  42fd82:	add    DWORD PTR [rax],eax
  42fd84:	je     0x42fd61
  42fd86:	add    DWORD PTR [rax],eax
  42fd88:	fcomp  DWORD PTR [rsi]
  42fd8a:	add    eax,DWORD PTR [rax]
  42fd8c:	sbb    bl,0x1
  42fd8f:	add    dl,al
  42fd91:	fadd   QWORD PTR [rcx]
  42fd93:	add    ah,ah
  42fd95:	(bad)  
  42fd96:	add    eax,DWORD PTR [rax]
  42fd98:	rcr    ah,1
  42fd9a:	add    DWORD PTR [rax],eax
  42fd9c:	(bad)  
  42fd9d:	fadd   QWORD PTR [rcx]
  42fd9f:	add    al,bh
  42fda1:	(bad)  
  42fda2:	add    eax,DWORD PTR [rax]
  42fda4:	loopne 0x42fd82
  42fda6:	add    DWORD PTR [rax],eax
  42fda8:	add    ebp,ebx
  42fdaa:	add    DWORD PTR [rax],eax
  42fdac:	cld    
  42fdad:	(bad)  
  42fdae:	add    eax,DWORD PTR [rax]
  42fdb0:	adc    ch,bl
  42fdb2:	add    DWORD PTR [rax],eax
  42fdb4:	fld    QWORD PTR [r9]
  42fdb7:	add    BYTE PTR [rdi+rbx*1],al
  42fdba:	add    eax,DWORD PTR [rax]
  42fdbc:	push   rax
  42fdbd:	fld    QWORD PTR [rcx]
  42fdbf:	add    BYTE PTR [rbp+rbx*8+0x1f100001],ch
  42fdc6:	add    eax,DWORD PTR [rax]
  42fdc8:	mov    al,0xdd
  42fdca:	add    DWORD PTR [rax],eax
  42fdcc:	fstp   st(5)
  42fdce:	add    DWORD PTR [rax],eax
  42fdd0:	sbb    al,0x1f
  42fdd2:	add    eax,DWORD PTR [rax]
  42fdd4:	loopne 0x42fdb3
  42fdd6:	add    DWORD PTR [rax],eax
  42fdd8:	(bad)  
  42fdd9:	fiadd  WORD PTR [rcx]
  42fddb:	add    BYTE PTR [rdi+rbx*1],ah
  42fdde:	add    eax,DWORD PTR [rax]
  42fde0:	loopne 0x42fdc0
  42fde2:	add    DWORD PTR [rax],eax
  42fde4:	(bad)  
  42fde5:	fild   WORD PTR [rcx]
  42fde7:	add    BYTE PTR [rdi+rbx*1],ch
  42fdea:	add    eax,DWORD PTR [rax]
  42fdec:	rex fild WORD PTR [rcx]
  42fdef:	add    BYTE PTR [rdi-0x20],bl
  42fdf2:	add    DWORD PTR [rax],eax
  42fdf4:	xor    al,0x1f
  42fdf6:	add    eax,DWORD PTR [rax]
  42fdf8:	(bad)  
  42fdf9:	loopne 0x42fdfc
  42fdfb:	add    BYTE PTR [rbp-0x1f],ah
  42fdfe:	add    DWORD PTR [rax],eax
  42fe00:	rex.W (bad) 
  42fe02:	add    eax,DWORD PTR [rax]
  42fe04:	jo     0x42fde7
  42fe06:	add    DWORD PTR [rax],eax
  42fe08:	or     ah,dl
  42fe0a:	add    DWORD PTR [rax],eax
  42fe0c:	push   rsp
  42fe0d:	(bad)  
  42fe0e:	add    eax,DWORD PTR [rax]
  42fe10:	adc    dl,ah
  42fe12:	add    DWORD PTR [rax],eax
  42fe14:	cld    
  42fe15:	loop   0x42fe18
  42fe17:	add    BYTE PTR [rdi+rbx*1+0x3],bl
  42fe1b:	add    BYTE PTR [rax],al
  42fe1d:	jrcxz  0x42fe20
  42fe1f:	add    BYTE PTR [rsi+riz*8+0x1],bl
  42fe23:	add    BYTE PTR [rax+0x1f],dh
  42fe26:	add    eax,DWORD PTR [rax]
  42fe28:	(bad)  
  42fe29:	out    0x1,al
  42fe2b:	add    BYTE PTR [rcx-0x19],al
  42fe2e:	add    DWORD PTR [rax],eax
  42fe30:	sbb    BYTE PTR [rdi],0x3
  42fe33:	add    BYTE PTR [rax-0x19],dl
  42fe36:	add    DWORD PTR [rax],eax
  42fe38:	and    dl,ch
  42fe3a:	add    DWORD PTR [rax],eax
  42fe3c:	mov    WORD PTR [rdi],ds
  42fe3e:	add    eax,DWORD PTR [rax]
  42fe40:	and    dl,ch
  42fe42:	add    DWORD PTR [rax],eax
  42fe44:	jmp    0xffffffffa0430033
  42fe49:	(bad)  
  42fe4a:	add    eax,DWORD PTR [rax]
  42fe4c:	lock (bad) 
  42fe4e:	add    DWORD PTR [rax],eax
  42fe50:	lahf   
  42fe51:	jmp    0x42fe54
  42fe53:	add    BYTE PTR [rdi+rbx*1-0x145ffffd],ch
  42fe5a:	add    DWORD PTR [rax],eax
  42fe5c:	ss in  eax,dx
  42fe5e:	add    DWORD PTR [rax],eax
  42fe60:	mov    eax,0x4000031f
  42fe65:	in     eax,dx
  42fe66:	add    DWORD PTR [rax],eax
  42fe68:	clc    
  42fe69:	lock add DWORD PTR [rax],eax
  42fe6c:	(bad)  
  42fe6d:	(bad)  
  42fe6e:	add    eax,DWORD PTR [rax]
  42fe70:	add    cl,dh
  42fe72:	add    DWORD PTR [rax],eax
  42fe74:	or     esi,esi
  42fe76:	add    DWORD PTR [rax],eax
  42fe78:	fcomp  QWORD PTR [rdi]
  42fe7a:	add    eax,DWORD PTR [rax]
  42fe7c:	adc    dh,dh
  42fe7e:	add    DWORD PTR [rax],eax
  42fe80:	(bad)  
  42fe81:	add    BYTE PTR [rdx],al
  42fe83:	add    al,dh
  42fe85:	(bad)  
  42fe86:	add    eax,DWORD PTR [rax]
  42fe88:	jo     0x42fe8a
  42fe8a:	add    al,BYTE PTR [rax]
  42fe8c:	movabs al,ds:0xa000032008000200
  42fe95:	add    BYTE PTR [rdx],al
  42fe97:	add    al,ch
  42fe99:	add    BYTE PTR [rdx],al
  42fe9b:	add    BYTE PTR [rax],dl
  42fe9d:	and    BYTE PTR [rbx],al
  42fe9f:	add    al,dh
  42fea1:	add    BYTE PTR [rdx],al
  42fea3:	add    BYTE PTR [rcx+rax*1],cl
  42fea6:	add    al,BYTE PTR [rax]
  42fea8:	sbb    al,0x20
  42feaa:	add    eax,DWORD PTR [rax]
  42feac:	adc    BYTE PTR [rcx],al
  42feae:	add    al,BYTE PTR [rax]
  42feb0:	mov    al,BYTE PTR [rdx]
  42feb2:	add    al,BYTE PTR [rax]
  42feb4:	and    BYTE PTR [rax],ah
  42feb6:	add    eax,DWORD PTR [rax]
  42feb8:	nop
  42feb9:	add    al,BYTE PTR [rdx]
  42febb:	add    dl,bh
  42febd:	(bad)  
  42febe:	add    al,BYTE PTR [rax]
  42fec0:	cmp    BYTE PTR [rax],ah
  42fec2:	add    eax,DWORD PTR [rax]
  42fec4:	add    BYTE PTR [rdi],dl
  42fec6:	add    al,BYTE PTR [rax]
  42fec8:	std    
  42fec9:	(bad)  
  42feca:	add    al,BYTE PTR [rax]
  42fecc:	push   rsp
  42fecd:	and    BYTE PTR [rbx],al
  42fecf:	add    BYTE PTR [rax],al
  42fed1:	sbb    BYTE PTR [rdx],al
  42fed3:	add    BYTE PTR [rsi],bh
  42fed5:	sbb    BYTE PTR [rdx],al
  42fed7:	add    BYTE PTR [rax+0x20],ah
  42feda:	add    eax,DWORD PTR [rax]
  42fedc:	sbb    BYTE PTR [rdx],al
  42fedf:	add    BYTE PTR [rcx+rbx*1],cl
  42fee2:	add    al,BYTE PTR [rax]
  42fee4:	and    BYTE PTR fs:[rbx],al
  42fee7:	add    BYTE PTR [rax],dl
  42fee9:	sbb    DWORD PTR [rdx],eax
  42feeb:	add    BYTE PTR [rdx+0x19],dl
  42feee:	add    al,BYTE PTR [rax]
  42fef0:	jo     0x42ff12
  42fef2:	add    eax,DWORD PTR [rax]
  42fef4:	(bad)  
  42fef5:	sbb    DWORD PTR [rdx],eax
  42fef7:	add    BYTE PTR [rsi+0x1a],ch
  42fefa:	add    al,BYTE PTR [rax]
  42fefc:	js     0x42ff1e
  42fefe:	add    eax,DWORD PTR [rax]
  42ff00:	jo     0x42ff1c
  42ff02:	add    al,BYTE PTR [rax]
  42ff04:	(bad)  
  42ff05:	sbb    al,BYTE PTR [rdx]
  42ff07:	add    BYTE PTR [rax+riz*1+0x1ae00003],al
  42ff0e:	add    al,BYTE PTR [rax]
  42ff10:	xchg   edx,eax
  42ff11:	sbb    eax,DWORD PTR [rdx]
  42ff13:	add    BYTE PTR [rax+riz*1+0x1ba00003],cl
  42ff1a:	add    al,BYTE PTR [rax]
  42ff1c:	(bad)  
  42ff1d:	sbb    eax,DWORD PTR [rdx]
  42ff1f:	add    BYTE PTR [rax+riz*1+0x1bd00003],bl
  42ff26:	add    al,BYTE PTR [rax]
  42ff28:	add    BYTE PTR [rip+0x20a40002],bl        # 0x20e6ff30
  42ff2e:	add    eax,DWORD PTR [rax]
  42ff30:	add    BYTE PTR [rip+0x1e640002],bl        # 0x1ea6ff38
  42ff36:	add    al,BYTE PTR [rax]
  42ff38:	mov    eax,0x70000320
  42ff3d:	(bad)  
  42ff3e:	add    al,BYTE PTR [rax]
  42ff40:	sbb    DWORD PTR [rdi],0x2
  42ff43:	add    al,cl
  42ff45:	and    BYTE PTR [rbx],al
  42ff47:	add    BYTE PTR [rax-0x2bfffde1],dl
  42ff4d:	(bad)  
  42ff4e:	add    al,BYTE PTR [rax]
  42ff50:	fsub   QWORD PTR [rax]
  42ff52:	add    eax,DWORD PTR [rax]
  42ff54:	loopne 0x42ff75
  42ff56:	add    al,BYTE PTR [rax]
  42ff58:	(bad)  
  42ff59:	and    DWORD PTR [rdx],eax
  42ff5b:	add    al,ah
  42ff5d:	and    BYTE PTR [rbx],al
  42ff5f:	add    BYTE PTR [rax],ah
  42ff61:	and    DWORD PTR [rdx],eax
  42ff63:	add    BYTE PTR [rbx],dh
  42ff65:	and    al,BYTE PTR [rdx]
  42ff67:	add    ah,ch
  42ff69:	and    BYTE PTR [rbx],al
  42ff6b:	add    BYTE PTR [rax+0x22],al
  42ff6e:	add    al,BYTE PTR [rax]
  42ff70:	and    rax,QWORD PTR [r10]
  42ff73:	add    al,bh
  42ff75:	and    BYTE PTR [rbx],al
  42ff77:	add    BYTE PTR [rax+0x23],dl
  42ff7a:	add    al,BYTE PTR [rax]
  42ff7c:	je     0x42ffa1
  42ff7e:	add    al,BYTE PTR [rax]
  42ff80:	add    al,0x21
  42ff82:	add    eax,DWORD PTR [rax]
  42ff84:	and    BYTE PTR [rbx],0x2
  42ff87:	add    bl,ch
  42ff89:	and    al,0x2
  42ff8b:	add    BYTE PTR [rax],cl
  42ff8d:	and    DWORD PTR [rbx],eax
  42ff8f:	add    al,dh
  42ff91:	and    al,0x2
  42ff93:	add    BYTE PTR [rbx+0x25],bl
  42ff96:	add    al,BYTE PTR [rax]
  42ff98:	sbb    BYTE PTR [rcx],ah
  42ff9a:	add    eax,DWORD PTR [rax]
  42ff9c:	(bad)  
  42ff9d:	and    eax,0x26820002
  42ffa2:	add    al,BYTE PTR [rax]
  42ffa4:	sub    BYTE PTR [rcx],ah
  42ffa6:	add    eax,DWORD PTR [rax]
  42ffa8:	nop
  42ffa9:	add    al,BYTE PTR es:[rax]
  42ffac:	(bad)  
  42ffad:	add    al,BYTE PTR es:[rax]
  42ffb0:	rex and DWORD PTR [rbx],eax
  42ffb3:	add    al,al
  42ffb5:	sub    DWORD PTR [rdx],eax
  42ffb7:	add    al,cl
  42ffb9:	sub    DWORD PTR [rdx],eax
  42ffbb:	add    BYTE PTR [rax+0x21],dl
  42ffbe:	add    eax,DWORD PTR [rax]
  42ffc0:	shr    BYTE PTR [rcx],1
  42ffc2:	add    al,BYTE PTR [rax]
  42ffc4:	fld    TBYTE PTR [rcx]
  42ffc6:	add    al,BYTE PTR [rax]
  42ffc8:	push   rsp
  42ffc9:	and    DWORD PTR [rbx],eax
  42ffcb:	add    al,ah
  42ffcd:	sub    DWORD PTR [rdx],eax
  42ffcf:	add    bh,ah
  42ffd1:	sub    DWORD PTR [rdx],eax
  42ffd3:	add    BYTE PTR [rax+0x21],bl
  42ffd6:	add    eax,DWORD PTR [rax]
  42ffd8:	lock sub DWORD PTR [rdx],eax
  42ffdb:	add    cl,bh
  42ffdd:	sub    DWORD PTR [rdx],eax
  42ffdf:	add    BYTE PTR [rcx+riz*1+0x3],bl
  42ffe3:	add    BYTE PTR [rax],al
  42ffe5:	sub    al,BYTE PTR [rdx]
  42ffe7:	add    BYTE PTR [rbx+0x2a],al
  42ffea:	add    al,BYTE PTR [rax]
  42ffec:	(bad)  
  42ffed:	and    DWORD PTR [rbx],eax
  42ffef:	add    BYTE PTR [rax+0x2a],dl
  42fff2:	add    al,BYTE PTR [rax]
  42fff4:	lea    ebp,[rdx]
  42fff6:	add    al,BYTE PTR [rax]
  42fff8:	push   0xffffffff90000321
  42fffd:	sub    al,BYTE PTR [rdx]
  42ffff:	add    BYTE PTR [rdx+0x7000022a],bl
  430005:	and    DWORD PTR [rbx],eax
  430007:	add    BYTE PTR [rax-0x55fffdd6],ah
  43000d:	sub    al,BYTE PTR [rdx]
  43000f:	add    BYTE PTR [rcx+riz*1+0x3],dh
  430013:	add    BYTE PTR [rax],ah
  430015:	sub    al,0x2
  430017:	add    BYTE PTR [rdx+0x2c],bh
  43001a:	add    al,BYTE PTR [rax]
  43001c:	adc    DWORD PTR [rbx],r8d
  43001f:	add    BYTE PTR [rdx+0x2c],bh
  430022:	add    al,BYTE PTR [rax]
  430024:	push   0x5000022d
  430029:	adc    DWORD PTR [rbx],eax
  43002b:	add    BYTE PTR [rax+0x2d],dh
  43002e:	add    al,BYTE PTR [rax]
  430030:	jne    0x43006b
  430032:	add    al,BYTE PTR [rax]
  430034:	(bad)  
  430035:	adc    DWORD PTR [rbx],eax
	...

Disassembly of section .xdata:

0000000000431000 <.xdata>:
  431000:	add    DWORD PTR [rax],eax
  431002:	add    BYTE PTR [rax],al
  431004:	add    DWORD PTR [rcx+rax*1],eax
  431007:	add    BYTE PTR [rdx+rax*2],al
  43100a:	add    BYTE PTR [rax],al
  43100c:	add    DWORD PTR [rcx+rax*1],eax
  43100f:	add    BYTE PTR [rdx+riz*2],al
  431012:	add    BYTE PTR [rax],al
  431014:	add    DWORD PTR [rdi],ecx
  431016:	or     BYTE PTR [rax],al
  431018:	lgdt   [rbx]
  43101b:	add    BYTE PTR [rax],cl
  43101d:	xor    BYTE PTR [rdi],al
  43101f:	(bad)  
  431020:	(bad)  
  431021:	jo     0x431028
  431023:	push   rax
  431024:	add    al,0xc0
  431026:	add    dl,al
  431028:	or     DWORD PTR [rcx+rax*1],eax
  43102b:	add    BYTE PTR [rdx+rax*2],al
  43102e:	add    BYTE PTR [rax],al
  431030:	mov    al,0x29
  431032:	add    al,BYTE PTR [rax]
  431034:	add    DWORD PTR [rax],eax
  431036:	add    BYTE PTR [rax],al
  431038:	(bad)  
  431039:	adc    al,0x0
  43103b:	add    ah,ch
  43103d:	adc    al,0x0
  43103f:	add    al,al
  431041:	retf   0x1
  431044:	in     al,dx
  431045:	adc    al,0x0
  431047:	add    BYTE PTR [rcx],cl
  431049:	add    al,0x1
  43104b:	add    BYTE PTR [rdx+rax*2],al
  43104e:	add    BYTE PTR [rax],al
  431050:	mov    al,0x29
  431052:	add    al,BYTE PTR [rax]
  431054:	add    DWORD PTR [rax],eax
  431056:	add    BYTE PTR [rax],al
  431058:	add    al,0x15
  43105a:	add    BYTE PTR [rax],al
  43105c:	sbb    al,0x15
  43105e:	add    BYTE PTR [rax],al
  431060:	ror    dl,0x1
  431063:	add    BYTE PTR [rdx*1+0x10000],bl
  43106a:	add    BYTE PTR [rax],al
  43106c:	add    DWORD PTR [rcx+rax*1],eax
  43106f:	add    BYTE PTR [rdx+riz*2],al
  431072:	add    BYTE PTR [rax],al
  431074:	add    DWORD PTR [rdi],eax
  431076:	add    al,0x0
  431078:	(bad)  
  431079:	push   rdx
  43107a:	add    esi,DWORD PTR [rax]
  43107c:	add    ah,BYTE PTR [rax+0x1]
  43107f:	jo     0x431082
  431081:	add    eax,DWORD PTR [rbx]
  431083:	add    BYTE PTR [rbx],al
  431085:	xor    BYTE PTR [rdx],al
  431087:	(bad)  
  431088:	add    DWORD PTR [rax+0x0],esi
  43108b:	add    BYTE PTR [rcx],al
  43108d:	or     al,BYTE PTR [rsi]
  43108f:	add    BYTE PTR [rdx],cl
  431091:	xor    al,BYTE PTR [rsi]
  431093:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b314f9
  431099:	push   rax
  43109a:	add    al,al
  43109c:	add    DWORD PTR [rdi+rax*1],ecx
  43109f:	add    BYTE PTR [rdx+rax*2],cl
  4310a2:	or     BYTE PTR [rax],dh
  4310a4:	(bad)  
  4310a5:	(bad)  
  4310a6:	(bad)  
  4310a7:	jo     0x4310ae
  4310a9:	push   rax
  4310aa:	add    al,0xc0
  4310ac:	add    dl,al
  4310ae:	add    BYTE PTR [rax],al
  4310b0:	add    DWORD PTR [rcx+rax*1],eax
  4310b3:	add    BYTE PTR [rdx+riz*2],al
  4310b6:	add    BYTE PTR [rax],al
  4310b8:	add    DWORD PTR [rsi],eax
  4310ba:	add    eax,DWORD PTR [rax]
  4310bc:	(bad)  
  4310bd:	rex.X add sil,BYTE PTR [rax]
  4310c0:	add    DWORD PTR [rax+0x0],esp
  4310c3:	add    BYTE PTR [rcx],al
  4310c5:	(bad)  
  4310c6:	add    eax,DWORD PTR [rax]
  4310c8:	(bad)  
  4310c9:	rex.X add sil,BYTE PTR [rax]
  4310cc:	add    DWORD PTR [rax+0x0],esp
  4310cf:	add    BYTE PTR [rcx],al
  4310d1:	(bad)  
  4310d2:	add    al,BYTE PTR [rax]
  4310d4:	(bad)  
  4310d5:	add    DWORD PTR [rbx+0x0],ecx
  4310d8:	add    DWORD PTR [rax],eax
  4310da:	add    BYTE PTR [rax],al
  4310dc:	add    DWORD PTR [rax],eax
  4310de:	add    BYTE PTR [rax],al
  4310e0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324810e8
  4310e6:	add    DWORD PTR [rax],esi
  4310e8:	add    DWORD PTR [rsi],eax
  4310ea:	add    eax,DWORD PTR [rax]
  4310ec:	(bad)  
  4310ed:	(bad)  
  4310ef:	xor    BYTE PTR [rcx],al
  4310f1:	(bad)  
  4310f2:	add    BYTE PTR [rax],al
  4310f4:	add    DWORD PTR [rdi+rax*1],ecx
  4310f7:	add    BYTE PTR [rdx+rax*4],cl
  4310fa:	or     BYTE PTR [rax],dh
  4310fc:	(bad)  
  4310fd:	(bad)  
  4310fe:	(bad)  
  4310ff:	jo     0x431106
  431101:	push   rax
  431102:	add    al,0xc0
  431104:	add    dl,al
  431106:	add    BYTE PTR [rax],al
  431108:	add    DWORD PTR [rcx],ecx
  43110a:	add    al,0x0
  43110c:	or     DWORD PTR [rcx],eax
  43110e:	mov    eax,DWORD PTR [rax]
  431110:	add    dh,BYTE PTR [rax]
  431112:	add    DWORD PTR [rax+0x1],esp
  431115:	adc    ecx,DWORD PTR [rdx]
  431117:	add    BYTE PTR [rbx],dl
  431119:	add    DWORD PTR [rcx+0x0],edx
  43111c:	or     al,0x30
  43111e:	or     esp,DWORD PTR [rax+0xa]
  431121:	jo     0x43112c
  431123:	push   rax
  431124:	or     al,al
  431126:	(bad)  
  431127:	rol    BYTE PTR [rax+riz*8],1
  43112a:	add    dh,al
  43112c:	add    DWORD PTR [rbx],edx
  43112e:	or     al,BYTE PTR [rax]
  431130:	adc    eax,DWORD PTR [rcx]
  431132:	xchg   ecx,eax
  431133:	add    DWORD PTR [rax+rsi*1],ecx
  431136:	or     esp,DWORD PTR [rax+0xa]
  431139:	jo     0x431144
  43113b:	push   rax
  43113c:	or     al,al
  43113e:	(bad)  
  43113f:	rol    BYTE PTR [rax+riz*8],1
  431142:	add    dh,al
  431144:	add    DWORD PTR [rsi],eax
  431146:	add    eax,DWORD PTR [rax]
  431148:	(bad)  
  431149:	rex.X add sil,BYTE PTR [rax]
  43114c:	add    DWORD PTR [rax+0x0],esp
  43114f:	add    BYTE PTR [rcx],al
  431151:	or     BYTE PTR [rip+0x4420800],al        # 0x4851957
  431157:	xor    BYTE PTR [rbx],al
  431159:	(bad)  
  43115a:	add    dh,BYTE PTR [rax+0x1]
  43115d:	push   rax
  43115e:	add    BYTE PTR [rax],al
  431160:	add    DWORD PTR [rdi],ecx
  431162:	or     BYTE PTR [rax],al
  431164:	(bad)  
  431166:	sub    DWORD PTR [rcx],eax
  431168:	or     BYTE PTR [rax],dh
  43116a:	(bad)  
  43116b:	(bad)  
  43116c:	(bad)  
  43116d:	jo     0x431174
  43116f:	push   rax
  431170:	add    al,0xc0
  431172:	add    dl,al
  431174:	add    DWORD PTR [rcx+rax*1],eax
  431177:	add    BYTE PTR [rdx+riz*2],al
  43117a:	add    BYTE PTR [rax],al
  43117c:	add    DWORD PTR [rcx+rax*1],eax
  43117f:	add    BYTE PTR [rdx+riz*2],al
  431182:	add    BYTE PTR [rax],al
  431184:	add    DWORD PTR [rdx],ecx
  431186:	add    eax,0x12010a00
  43118b:	add    BYTE PTR [rbx],al
  43118d:	xor    BYTE PTR [rdx],al
  43118f:	(bad)  
  431190:	add    DWORD PTR [rax+0x0],esi
  431193:	add    BYTE PTR [rcx],al
  431195:	add    al,0x1
  431197:	add    BYTE PTR [rdx+riz*2],al
  43119a:	add    BYTE PTR [rax],al
  43119c:	add    DWORD PTR [rcx],ecx
  43119e:	add    al,0x0
  4311a0:	or     DWORD PTR [rcx],eax
  4311a2:	rex.WRXB add BYTE PTR [r10],r8b
  4311a5:	xor    BYTE PTR [rcx],al
  4311a7:	(bad)  
  4311a8:	add    DWORD PTR [rbx],edx
  4311aa:	or     al,BYTE PTR [rax]
  4311ac:	adc    eax,DWORD PTR [rcx]
  4311ae:	rex.WRXB add BYTE PTR [r8+r14*1],r9b
  4311b2:	or     esp,DWORD PTR [rax+0xa]
  4311b5:	jo     0x4311c0
  4311b7:	push   rax
  4311b8:	or     al,al
  4311ba:	(bad)  
  4311bb:	rol    BYTE PTR [rax+riz*8],1
  4311be:	add    dh,al
  4311c0:	add    DWORD PTR [rcx+rax*1],eax
  4311c3:	add    BYTE PTR [rdx+riz*2],al
  4311c6:	add    BYTE PTR [rax],al
  4311c8:	add    DWORD PTR [rcx+rax*1],eax
  4311cb:	add    BYTE PTR [rdx+riz*2],al
  4311ce:	add    BYTE PTR [rax],al
  4311d0:	add    DWORD PTR [rax],ecx
  4311d2:	add    eax,0x4420800
  4311d7:	xor    BYTE PTR [rbx],al
  4311d9:	(bad)  
  4311da:	add    dh,BYTE PTR [rax+0x1]
  4311dd:	push   rax
  4311de:	add    BYTE PTR [rax],al
  4311e0:	add    DWORD PTR [rbx],edx
  4311e2:	or     al,BYTE PTR [rax]
  4311e4:	adc    eax,DWORD PTR [rcx]
  4311e6:	iret   
  4311e7:	add    BYTE PTR [rax+rsi*1],cl
  4311ea:	or     esp,DWORD PTR [rax+0xa]
  4311ed:	jo     0x4311f8
  4311ef:	push   rax
  4311f0:	or     al,al
  4311f2:	(bad)  
  4311f3:	rol    BYTE PTR [rax+riz*8],1
  4311f6:	add    dh,al
  4311f8:	add    DWORD PTR [rax],ecx
  4311fa:	add    eax,0x4420800
  4311ff:	xor    BYTE PTR [rbx],al
  431201:	(bad)  
  431202:	add    dh,BYTE PTR [rax+0x1]
  431205:	push   rax
  431206:	add    BYTE PTR [rax],al
  431208:	add    DWORD PTR [rsi],eax
  43120a:	add    eax,DWORD PTR [rax]
  43120c:	(bad)  
  43120d:	(bad)  
  43120f:	xor    BYTE PTR [rcx],al
  431211:	(bad)  
  431212:	add    BYTE PTR [rax],al
  431214:	add    DWORD PTR [rdi+rax*1],ecx
  431217:	add    BYTE PTR [rdx+rax*2],cl
  43121a:	or     BYTE PTR [rax],dh
  43121c:	(bad)  
  43121d:	(bad)  
  43121e:	(bad)  
  43121f:	jo     0x431226
  431221:	push   rax
  431222:	add    al,0xc0
  431224:	add    dl,al
  431226:	add    BYTE PTR [rax],al
  431228:	add    DWORD PTR [rax],eax
  43122a:	add    BYTE PTR [rax],al
  43122c:	add    DWORD PTR [rdx],ecx
  43122e:	add    eax,0x44010a00
  431233:	add    BYTE PTR [rbx],al
  431235:	xor    BYTE PTR [rdx],al
  431237:	(bad)  
  431238:	add    DWORD PTR [rax+0x0],esi
  43123b:	add    BYTE PTR [rcx],al
  43123d:	add    eax,0x32050002
  431242:	add    DWORD PTR [rax],esi
  431244:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248124c
  43124a:	add    DWORD PTR [rax],esi
  43124c:	add    DWORD PTR [rsi],eax
  43124e:	add    eax,DWORD PTR [rax]
  431250:	(bad)  
  431251:	rex.X add sil,BYTE PTR [rax]
  431254:	add    DWORD PTR [rax+0x0],esp
  431257:	add    BYTE PTR [rcx],al
  431259:	sbb    DWORD PTR [rdx],ecx
  43125b:	add    BYTE PTR [rcx],bl
  43125d:	add    DWORD PTR [rip+0x10301102],edx        # 0x10732365
  431263:	(bad)  
  431264:	pshufw mm1,QWORD PTR [rsi],0x50
  431268:	or     eax,0x4d00bc0
  43126d:	loopne 0x431271
  43126f:	lock add DWORD PTR [rdi],eax
  431272:	add    al,BYTE PTR [rax]
  431274:	(bad)  
  431275:	add    DWORD PTR [rcx],edi
  431277:	add    BYTE PTR [rcx],al
  431279:	(bad)  
  43127a:	add    eax,DWORD PTR [rax]
  43127c:	(bad)  
  43127d:	rex.X add sil,BYTE PTR [rax]
  431280:	add    DWORD PTR [rax+0x0],esp
  431283:	add    BYTE PTR [rcx],al
  431285:	(bad)  
  431286:	add    eax,DWORD PTR [rax]
  431288:	(bad)  
  431289:	rex.X add sil,BYTE PTR [rax]
  43128c:	add    DWORD PTR [rax+0x0],esp
  43128f:	add    BYTE PTR [rcx],al
  431291:	add    al,0x1
  431293:	add    BYTE PTR [rdx+riz*2],al
  431296:	add    BYTE PTR [rax],al
  431298:	add    DWORD PTR [rip+0x32050002],eax        # 0x324812a0
  43129e:	add    DWORD PTR [rax],esi
  4312a0:	add    DWORD PTR [rcx+rax*1],eax
  4312a3:	add    BYTE PTR [rdx+riz*2],al
  4312a6:	add    BYTE PTR [rax],al
  4312a8:	add    DWORD PTR [rdi],eax
  4312aa:	add    al,0x0
  4312ac:	(bad)  
  4312ad:	xchg   edx,eax
  4312ae:	add    esi,DWORD PTR [rax]
  4312b0:	add    ah,BYTE PTR [rax+0x1]
  4312b3:	jo     0x4312b6
  4312b5:	add    al,0x1
  4312b7:	add    BYTE PTR [rdx+riz*2],al
  4312ba:	add    BYTE PTR [rax],al
  4312bc:	add    DWORD PTR [rsi],ecx
  4312be:	or     BYTE PTR [rax],al
  4312c0:	(bad)  
  4312c1:	xor    cl,BYTE PTR [rdx]
  4312c3:	xor    BYTE PTR [rcx],cl
  4312c5:	(bad)  
  4312c6:	or     BYTE PTR [rax+0x7],dh
  4312c9:	push   rax
  4312ca:	(bad)  
  4312cb:	rol    BYTE PTR [rax+rdx*8],0x2
  4312cf:	loopne 0x4312d2
  4312d1:	(bad)  
  4312d2:	add    eax,DWORD PTR [rax]
  4312d4:	(bad)  
  4312d5:	loop   0x4312d9
  4312d7:	xor    BYTE PTR [rcx],al
  4312d9:	jo     0x4312db
  4312db:	add    BYTE PTR [rcx],al
  4312dd:	adc    BYTE PTR [rcx],cl
  4312df:	add    BYTE PTR [rax],dl
  4312e1:	ret    0x300c
  4312e4:	or     esp,DWORD PTR [rax+0xa]
  4312e7:	jo     0x4312f2
  4312e9:	push   rax
  4312ea:	or     al,al
  4312ec:	(bad)  
  4312ed:	rol    BYTE PTR [rax+riz*8],1
  4312f0:	add    dh,al
  4312f2:	add    BYTE PTR [rax],al
  4312f4:	add    DWORD PTR [rdi],eax
  4312f6:	add    al,0x0
  4312f8:	(bad)  
  4312f9:	xor    al,BYTE PTR [rbx]
  4312fb:	xor    BYTE PTR [rdx],al
  4312fd:	(bad)  
  4312fe:	add    DWORD PTR [rax+0x1],esi
  431301:	adc    DWORD PTR [rcx],ecx
  431303:	add    BYTE PTR [rcx],dl
  431305:	add    DWORD PTR [rax],esi
  431307:	add    BYTE PTR [rdx],cl
  431309:	xor    BYTE PTR [rcx],cl
  43130b:	(bad)  
  43130c:	or     BYTE PTR [rax+0x7],dh
  43130f:	push   rax
  431310:	(bad)  
  431311:	rol    BYTE PTR [rax+rdx*8],0x2
  431315:	loopne 0x431317
  431317:	add    BYTE PTR [rcx],al
  431319:	add    eax,0x72050002
  43131e:	add    DWORD PTR [rax],esi
  431320:	add    DWORD PTR [rax],edx
  431322:	or     DWORD PTR [rax],eax
  431324:	adc    dl,ah
  431326:	or     al,0x30
  431328:	or     esp,DWORD PTR [rax+0xa]
  43132b:	jo     0x431336
  43132d:	push   rax
  43132e:	or     al,al
  431330:	(bad)  
  431331:	rol    BYTE PTR [rax+riz*8],1
  431334:	add    dh,al
  431336:	add    BYTE PTR [rax],al
  431338:	add    DWORD PTR [rdx],ecx
  43133a:	(bad)  
  43133b:	add    BYTE PTR [rdx],cl
  43133d:	xor    al,BYTE PTR [rsi]
  43133f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b317a5
  431345:	push   rax
  431346:	add    al,al
  431348:	add    DWORD PTR [rax],edx
  43134a:	or     DWORD PTR [rax],eax
  43134c:	adc    BYTE PTR [rdx+0xc],al
  43134f:	xor    BYTE PTR [rbx],cl
  431351:	(bad)  
  431352:	or     dh,BYTE PTR [rax+0x9]
  431355:	push   rax
  431356:	or     al,al
  431358:	(bad)  
  431359:	rol    BYTE PTR [rax+riz*8],1
  43135c:	add    dh,al
  43135e:	add    BYTE PTR [rax],al
  431360:	add    DWORD PTR [rcx+rax*1],eax
  431363:	add    BYTE PTR [rdx+rax*2],al
  431366:	add    BYTE PTR [rax],al
  431368:	add    DWORD PTR [rax],eax
  43136a:	add    BYTE PTR [rax],al
  43136c:	add    DWORD PTR [rax],eax
  43136e:	add    BYTE PTR [rax],al
  431370:	add    DWORD PTR [rax],eax
  431372:	add    BYTE PTR [rax],al
  431374:	add    DWORD PTR [rax],eax
  431376:	add    BYTE PTR [rax],al
  431378:	add    DWORD PTR [rax],eax
  43137a:	add    BYTE PTR [rax],al
  43137c:	add    DWORD PTR [rax],eax
  43137e:	add    BYTE PTR [rax],al
  431380:	add    DWORD PTR [rax],eax
  431382:	add    BYTE PTR [rax],al
  431384:	add    DWORD PTR [rax],eax
  431386:	add    BYTE PTR [rax],al
  431388:	add    DWORD PTR [rax],eax
  43138a:	add    BYTE PTR [rax],al
  43138c:	add    DWORD PTR [rax],eax
  43138e:	add    BYTE PTR [rax],al
  431390:	add    DWORD PTR [rsi],eax
  431392:	add    eax,DWORD PTR [rax]
  431394:	(bad)  
  431395:	rex.X add sil,BYTE PTR [rax]
  431398:	add    DWORD PTR [rax+0x0],esp
  43139b:	add    BYTE PTR [rcx],al
  43139d:	(bad)  
  43139e:	add    eax,DWORD PTR [rax]
  4313a0:	(bad)  
  4313a1:	rex.X add sil,BYTE PTR [rax]
  4313a4:	add    DWORD PTR [rax+0x0],esp
  4313a7:	add    BYTE PTR [rcx],al
  4313a9:	(bad)  
  4313aa:	add    eax,DWORD PTR [rax]
  4313ac:	(bad)  
  4313ad:	rex.X add sil,BYTE PTR [rax]
  4313b0:	add    DWORD PTR [rax+0x0],esp
  4313b3:	add    BYTE PTR [rcx],al
  4313b5:	or     BYTE PTR [rip+0x4420800],al        # 0x4851bbb
  4313bb:	xor    BYTE PTR [rbx],al
  4313bd:	(bad)  
  4313be:	add    dh,BYTE PTR [rax+0x1]
  4313c1:	push   rax
  4313c2:	add    BYTE PTR [rax],al
  4313c4:	add    DWORD PTR [rdi],eax
  4313c6:	add    al,0x0
  4313c8:	(bad)  
  4313c9:	xor    al,BYTE PTR [rbx]
  4313cb:	xor    BYTE PTR [rdx],al
  4313cd:	(bad)  
  4313ce:	add    DWORD PTR [rax+0x1],esi
  4313d1:	add    al,0x1
  4313d3:	add    BYTE PTR [rdx+riz*2],al
  4313d6:	add    BYTE PTR [rax],al
  4313d8:	add    DWORD PTR [rdi+rax*1],ecx
  4313db:	add    BYTE PTR [rdx+riz*2],cl
  4313de:	or     BYTE PTR [rax],dh
  4313e0:	(bad)  
  4313e1:	(bad)  
  4313e2:	(bad)  
  4313e3:	jo     0x4313ea
  4313e5:	push   rax
  4313e6:	add    al,0xc0
  4313e8:	add    dl,al
  4313ea:	add    BYTE PTR [rax],al
  4313ec:	add    DWORD PTR [rsi],eax
  4313ee:	add    eax,DWORD PTR [rax]
  4313f0:	(bad)  
  4313f1:	rex.X add sil,BYTE PTR [rax]
  4313f4:	add    DWORD PTR [rax+0x0],esp
  4313f7:	add    BYTE PTR [rcx],al
  4313f9:	(bad)  
  4313fa:	add    eax,DWORD PTR [rax]
  4313fc:	(bad)  
  4313fd:	rex.X add sil,BYTE PTR [rax]
  431400:	add    DWORD PTR [rax+0x0],esp
  431403:	add    BYTE PTR [rcx],al
  431405:	or     al,BYTE PTR [rsi]
  431407:	add    BYTE PTR [rdx],cl
  431409:	xor    al,BYTE PTR [rsi]
  43140b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31871
  431411:	push   rax
  431412:	add    al,al
  431414:	add    DWORD PTR [rcx+rax*1],eax
  431417:	add    BYTE PTR [rdx+riz*2],al
  43141a:	add    BYTE PTR [rax],al
  43141c:	add    DWORD PTR [rcx+rax*1],eax
  43141f:	add    BYTE PTR [rdx+riz*2],al
  431422:	add    BYTE PTR [rax],al
  431424:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248142c
  43142a:	add    DWORD PTR [rax],esi
  43142c:	add    DWORD PTR [rsi],eax
  43142e:	add    eax,DWORD PTR [rax]
  431430:	(bad)  
  431431:	rex.X add sil,BYTE PTR [rax]
  431434:	add    DWORD PTR [rax+0x0],esp
  431437:	add    BYTE PTR [rcx],al
  431439:	adc    BYTE PTR [rcx],cl
  43143b:	add    BYTE PTR [rax],dl
  43143d:	movabs ds:0x5009700a600b300c,al
  431446:	or     al,al
  431448:	(bad)  
  431449:	rol    BYTE PTR [rax+riz*8],1
  43144c:	add    dh,al
  43144e:	add    BYTE PTR [rax],al
  431450:	add    DWORD PTR [rax],edx
  431452:	or     DWORD PTR [rax],eax
  431454:	adc    BYTE PTR [rdx+0xc],ah
  431457:	xor    BYTE PTR [rbx],cl
  431459:	(bad)  
  43145a:	or     dh,BYTE PTR [rax+0x9]
  43145d:	push   rax
  43145e:	or     al,al
  431460:	(bad)  
  431461:	rol    BYTE PTR [rax+riz*8],1
  431464:	add    dh,al
  431466:	add    BYTE PTR [rax],al
  431468:	add    DWORD PTR [rdi+rax*1],ecx
  43146b:	add    BYTE PTR [rdx+rax*4],cl
  43146e:	or     BYTE PTR [rax],dh
  431470:	(bad)  
  431471:	(bad)  
  431472:	(bad)  
  431473:	jo     0x43147a
  431475:	push   rax
  431476:	add    al,0xc0
  431478:	add    dl,al
  43147a:	add    BYTE PTR [rax],al
  43147c:	add    DWORD PTR [rcx+rax*1],eax
  43147f:	add    BYTE PTR [rdx+rax*2],al
  431482:	add    BYTE PTR [rax],al
  431484:	add    DWORD PTR [rcx+rax*1],eax
  431487:	add    BYTE PTR [rdx+riz*2],al
  43148a:	add    BYTE PTR [rax],al
  43148c:	add    DWORD PTR [rdx],ecx
  43148e:	(bad)  
  43148f:	add    BYTE PTR [rdx],cl
  431491:	xor    al,BYTE PTR [rsi]
  431493:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b318f9
  431499:	push   rax
  43149a:	add    al,al
  43149c:	add    DWORD PTR [rax],eax
  43149e:	add    BYTE PTR [rax],al
  4314a0:	add    DWORD PTR [rax],eax
  4314a2:	add    BYTE PTR [rax],al
  4314a4:	add    DWORD PTR [rax],eax
  4314a6:	add    BYTE PTR [rax],al
  4314a8:	add    DWORD PTR [rsi],eax
  4314aa:	add    eax,DWORD PTR [rax]
  4314ac:	(bad)  
  4314ad:	(bad)  
  4314af:	xor    BYTE PTR [rcx],al
  4314b1:	(bad)  
  4314b2:	add    BYTE PTR [rax],al
  4314b4:	add    DWORD PTR [rax],edx
  4314b6:	or     DWORD PTR [rax],eax
  4314b8:	adc    BYTE PTR [rdx+0x600b300c],al
  4314be:	or     dh,BYTE PTR [rax+0x9]
  4314c1:	push   rax
  4314c2:	or     al,al
  4314c4:	(bad)  
  4314c5:	rol    BYTE PTR [rax+riz*8],1
  4314c8:	add    dh,al
  4314ca:	add    BYTE PTR [rax],al
  4314cc:	add    DWORD PTR [rax],ecx
  4314ce:	add    eax,0x4620800
  4314d3:	xor    BYTE PTR [rbx],al
  4314d5:	(bad)  
  4314d6:	add    dh,BYTE PTR [rax+0x1]
  4314d9:	push   rax
  4314da:	add    BYTE PTR [rax],al
  4314dc:	add    DWORD PTR [rdi+rax*1],ecx
  4314df:	add    BYTE PTR [rdx+riz*2],cl
  4314e2:	or     BYTE PTR [rax],dh
  4314e4:	(bad)  
  4314e5:	(bad)  
  4314e6:	(bad)  
  4314e7:	jo     0x4314ee
  4314e9:	push   rax
  4314ea:	add    al,0xc0
  4314ec:	add    dl,al
  4314ee:	add    BYTE PTR [rax],al
  4314f0:	add    DWORD PTR [rax],ecx
  4314f2:	add    eax,0x4820800
  4314f7:	xor    BYTE PTR [rbx],al
  4314f9:	(bad)  
  4314fa:	add    dh,BYTE PTR [rax+0x1]
  4314fd:	push   rax
  4314fe:	add    BYTE PTR [rax],al
  431500:	add    DWORD PTR [rdi+rax*1],ecx
  431503:	add    BYTE PTR [rdx+riz*2],cl
  431506:	or     BYTE PTR [rax],dh
  431508:	(bad)  
  431509:	(bad)  
  43150a:	(bad)  
  43150b:	jo     0x431512
  43150d:	push   rax
  43150e:	add    al,0xc0
  431510:	add    dl,al
  431512:	add    BYTE PTR [rax],al
  431514:	add    DWORD PTR [rdi],eax
  431516:	add    al,0x0
  431518:	(bad)  
  431519:	xor    al,BYTE PTR [rbx]
  43151b:	xor    BYTE PTR [rdx],al
  43151d:	(bad)  
  43151e:	add    DWORD PTR [rax+0x1],esi
  431521:	(bad)  
  431522:	add    eax,DWORD PTR [rax]
  431524:	(bad)  
  431525:	rex.X add sil,BYTE PTR [rax]
  431528:	add    DWORD PTR [rax+0x0],esp
  43152b:	add    BYTE PTR [rcx],al
  43152d:	(bad)  
  43152e:	add    al,0x0
  431530:	(bad)  
  431531:	xor    al,BYTE PTR [rbx]
  431533:	xor    BYTE PTR [rdx],al
  431535:	(bad)  
  431536:	add    DWORD PTR [rax+0x1],esi
  431539:	(bad)  
  43153a:	add    al,0x0
  43153c:	(bad)  
  43153d:	xor    al,BYTE PTR [rbx]
  43153f:	xor    BYTE PTR [rdx],al
  431541:	(bad)  
  431542:	add    DWORD PTR [rax+0x1],esi
  431545:	(bad)  
  431546:	add    eax,DWORD PTR [rax]
  431548:	(bad)  
  431549:	rex.X add sil,BYTE PTR [rax]
  43154c:	add    DWORD PTR [rax+0x0],esi
  43154f:	add    BYTE PTR [rcx],al
  431551:	or     al,BYTE PTR [rsi]
  431553:	add    BYTE PTR [rdx],cl
  431555:	xor    al,BYTE PTR [rsi]
  431557:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b319bd
  43155d:	push   rax
  43155e:	add    al,al
  431560:	add    DWORD PTR [rdi+rax*1],ecx
  431563:	add    BYTE PTR [rdx+rax*2],cl
  431566:	or     BYTE PTR [rax],dh
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	jo     0x431572
  43156d:	push   rax
  43156e:	add    al,0xc0
  431570:	add    dl,al
  431572:	add    BYTE PTR [rax],al
  431574:	add    DWORD PTR [rsi],eax
  431576:	add    eax,DWORD PTR [rax]
  431578:	(bad)  
  431579:	rex.X add sil,BYTE PTR [rax]
  43157c:	add    DWORD PTR [rax+0x0],esp
  43157f:	add    BYTE PTR [rcx],al
  431581:	or     BYTE PTR [rip+0x4420800],al        # 0x4851d87
  431587:	xor    BYTE PTR [rbx],al
  431589:	(bad)  
  43158a:	add    dh,BYTE PTR [rax+0x1]
  43158d:	push   rax
  43158e:	add    BYTE PTR [rax],al
  431590:	add    DWORD PTR [rax],edx
  431592:	or     DWORD PTR [rax],eax
  431594:	adc    BYTE PTR [rdx+0x600b300c],ah
  43159a:	or     dh,BYTE PTR [rax+0x9]
  43159d:	push   rax
  43159e:	or     al,al
  4315a0:	(bad)  
  4315a1:	rol    BYTE PTR [rax+riz*8],1
  4315a4:	add    dh,al
  4315a6:	add    BYTE PTR [rax],al
  4315a8:	add    DWORD PTR [rsi],eax
  4315aa:	add    eax,DWORD PTR [rax]
  4315ac:	(bad)  
  4315ad:	rex.X add sil,BYTE PTR [rax]
  4315b0:	add    DWORD PTR [rax+0x0],esp
  4315b3:	add    BYTE PTR [rcx],al
  4315b5:	or     BYTE PTR [rip+0x4420800],al        # 0x4851dbb
  4315bb:	xor    BYTE PTR [rbx],al
  4315bd:	(bad)  
  4315be:	add    dh,BYTE PTR [rax+0x1]
  4315c1:	push   rax
  4315c2:	add    BYTE PTR [rax],al
  4315c4:	add    DWORD PTR [rax],edx
  4315c6:	or     DWORD PTR [rax],eax
  4315c8:	adc    BYTE PTR [rdx+0x600b300c],ah
  4315ce:	or     dh,BYTE PTR [rax+0x9]
  4315d1:	push   rax
  4315d2:	or     al,al
  4315d4:	(bad)  
  4315d5:	rol    BYTE PTR [rax+riz*8],1
  4315d8:	add    dh,al
  4315da:	add    BYTE PTR [rax],al
  4315dc:	add    DWORD PTR [rsi],ecx
  4315de:	or     BYTE PTR [rax],al
  4315e0:	(bad)  
  4315e1:	xor    cl,BYTE PTR [rdx]
  4315e3:	xor    BYTE PTR [rcx],cl
  4315e5:	(bad)  
  4315e6:	or     BYTE PTR [rax+0x7],dh
  4315e9:	push   rax
  4315ea:	(bad)  
  4315eb:	rol    BYTE PTR [rax+rdx*8],0x2
  4315ef:	loopne 0x4315f2
  4315f1:	adc    BYTE PTR [rcx],cl
  4315f3:	add    BYTE PTR [rax],dl
  4315f5:	ret    0x300c
  4315f8:	or     esp,DWORD PTR [rax+0xa]
  4315fb:	jo     0x431606
  4315fd:	push   rax
  4315fe:	or     al,al
  431600:	(bad)  
  431601:	rol    BYTE PTR [rax+riz*8],1
  431604:	add    dh,al
  431606:	add    BYTE PTR [rax],al
  431608:	add    DWORD PTR [rsi],eax
  43160a:	add    eax,DWORD PTR [rax]
  43160c:	(bad)  
  43160d:	rex.X add sil,BYTE PTR [rax]
  431610:	add    DWORD PTR [rax+0x0],esp
  431613:	add    BYTE PTR [rcx],al
  431615:	adc    ecx,DWORD PTR [rdx]
  431617:	add    BYTE PTR [rbx],dl
  431619:	add    DWORD PTR [rcx],esi
  43161b:	add    BYTE PTR [rax+rsi*1],cl
  43161e:	or     esp,DWORD PTR [rax+0xa]
  431621:	jo     0x43162c
  431623:	push   rax
  431624:	or     al,al
  431626:	(bad)  
  431627:	rol    BYTE PTR [rax+riz*8],1
  43162a:	add    dh,al
  43162c:	add    DWORD PTR [rbx],edx
  43162e:	or     al,BYTE PTR [rax]
  431630:	adc    eax,DWORD PTR [rcx]
  431632:	sub    DWORD PTR [rax],eax
  431634:	or     al,0x30
  431636:	or     esp,DWORD PTR [rax+0xa]
  431639:	jo     0x431644
  43163b:	push   rax
  43163c:	or     al,al
  43163e:	(bad)  
  43163f:	rol    BYTE PTR [rax+riz*8],1
  431642:	add    dh,al
  431644:	add    DWORD PTR [rdx],ecx
  431646:	(bad)  
  431647:	add    BYTE PTR [rdx],cl
  431649:	push   rdx
  43164a:	(bad)  
  43164b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31ab1
  431651:	push   rax
  431652:	add    al,al
  431654:	add    DWORD PTR [rbx],edx
  431656:	or     al,BYTE PTR [rax]
  431658:	adc    eax,DWORD PTR [rcx]
  43165a:	adc    eax,DWORD PTR [rax]
  43165c:	or     al,0x30
  43165e:	or     esp,DWORD PTR [rax+0xa]
  431661:	jo     0x43166c
  431663:	push   rax
  431664:	or     al,al
  431666:	(bad)  
  431667:	rol    BYTE PTR [rax+riz*8],1
  43166a:	add    dh,al
  43166c:	add    DWORD PTR [rbx],edx
  43166e:	or     al,BYTE PTR [rax]
  431670:	adc    eax,DWORD PTR [rcx]
  431672:	adc    eax,DWORD PTR [rax]
  431674:	or     al,0x30
  431676:	or     esp,DWORD PTR [rax+0xa]
  431679:	jo     0x431684
  43167b:	push   rax
  43167c:	or     al,al
  43167e:	(bad)  
  43167f:	rol    BYTE PTR [rax+riz*8],1
  431682:	add    dh,al
  431684:	add    DWORD PTR [rax],edx
  431686:	or     DWORD PTR [rax],eax
  431688:	adc    BYTE PTR [rdx+0xc],ah
  43168b:	xor    BYTE PTR [rbx],cl
  43168d:	(bad)  
  43168e:	or     dh,BYTE PTR [rax+0x9]
  431691:	push   rax
  431692:	or     al,al
  431694:	(bad)  
  431695:	rol    BYTE PTR [rax+riz*8],1
  431698:	add    dh,al
  43169a:	add    BYTE PTR [rax],al
  43169c:	add    DWORD PTR [rax],edx
  43169e:	or     DWORD PTR [rax],eax
  4316a0:	adc    BYTE PTR [rdx+0x600b300c],al
  4316a6:	or     dh,BYTE PTR [rax+0x9]
  4316a9:	push   rax
  4316aa:	or     al,al
  4316ac:	(bad)  
  4316ad:	rol    BYTE PTR [rax+riz*8],1
  4316b0:	add    dh,al
  4316b2:	add    BYTE PTR [rax],al
  4316b4:	add    DWORD PTR [rax],ecx
  4316b6:	add    eax,0x4420800
  4316bb:	xor    BYTE PTR [rbx],al
  4316bd:	(bad)  
  4316be:	add    dh,BYTE PTR [rax+0x1]
  4316c1:	push   rax
  4316c2:	add    BYTE PTR [rax],al
  4316c4:	add    DWORD PTR [rax],ecx
  4316c6:	add    eax,0x4420800
  4316cb:	xor    BYTE PTR [rbx],al
  4316cd:	(bad)  
  4316ce:	add    dh,BYTE PTR [rax+0x1]
  4316d1:	push   rax
  4316d2:	add    BYTE PTR [rax],al
  4316d4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324816dc
  4316da:	add    DWORD PTR [rax],esi
  4316dc:	add    DWORD PTR [rsi],eax
  4316de:	add    eax,DWORD PTR [rax]
  4316e0:	(bad)  
  4316e1:	(bad)  
  4316e3:	xor    BYTE PTR [rcx],al
  4316e5:	(bad)  
  4316e6:	add    BYTE PTR [rax],al
  4316e8:	add    DWORD PTR [rcx+rax*1],eax
  4316eb:	add    BYTE PTR [rdx+rax*2],al
  4316ee:	add    BYTE PTR [rax],al
  4316f0:	add    DWORD PTR [rax],ecx
  4316f2:	add    eax,0x4420800
  4316f7:	xor    BYTE PTR [rbx],al
  4316f9:	(bad)  
  4316fa:	add    dh,BYTE PTR [rax+0x1]
  4316fd:	push   rax
  4316fe:	add    BYTE PTR [rax],al
  431700:	add    DWORD PTR [rdx],ecx
  431702:	(bad)  
  431703:	add    BYTE PTR [rdx],cl
  431705:	xor    al,BYTE PTR [rsi]
  431707:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31b6d
  43170d:	push   rax
  43170e:	add    al,al
  431710:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481718
  431716:	add    DWORD PTR [rax],esi
  431718:	add    DWORD PTR [rsi],eax
  43171a:	add    eax,DWORD PTR [rax]
  43171c:	(bad)  
  43171d:	(bad)  
  43171f:	xor    BYTE PTR [rcx],al
  431721:	(bad)  
  431722:	add    BYTE PTR [rax],al
  431724:	add    DWORD PTR [rsi],ecx
  431726:	or     BYTE PTR [rax],al
  431728:	(bad)  
  431729:	push   rdx
  43172a:	or     dh,BYTE PTR [rax]
  43172c:	or     DWORD PTR [rax+0x8],esp
  43172f:	jo     0x431738
  431731:	push   rax
  431732:	(bad)  
  431733:	rol    BYTE PTR [rax+rdx*8],0x2
  431737:	loopne 0x43173a
  431739:	adc    ecx,DWORD PTR [rdx]
  43173b:	add    BYTE PTR [rbx],dl
  43173d:	add    DWORD PTR [rip+0xb300c00],ebx        # 0xb732343
  431743:	(bad)  
  431744:	or     dh,BYTE PTR [rax+0x9]
  431747:	push   rax
  431748:	or     al,al
  43174a:	(bad)  
  43174b:	rol    BYTE PTR [rax+riz*8],1
  43174e:	add    dh,al
  431750:	add    DWORD PTR [rax],ecx
  431752:	add    eax,DWORD PTR [rax]
  431754:	or     BYTE PTR [rcx],al
  431756:	adc    al,BYTE PTR [rax]
  431758:	add    DWORD PTR [rax+0x0],esi
  43175b:	add    BYTE PTR [rcx],al
  43175d:	add    eax,0x72050002
  431762:	add    DWORD PTR [rax],esi
  431764:	add    DWORD PTR [rsi],eax
  431766:	add    eax,DWORD PTR [rax]
  431768:	(bad)  
  431769:	rex.X add sil,BYTE PTR [rax]
  43176c:	add    DWORD PTR [rax+0x0],esp
  43176f:	add    BYTE PTR [rcx],al
  431771:	adc    ecx,DWORD PTR [rdx]
  431773:	add    BYTE PTR [rbx],dl
  431775:	add    DWORD PTR [rip+0xb300c00],ebx        # 0xb73237b
  43177b:	(bad)  
  43177c:	or     dh,BYTE PTR [rax+0x9]
  43177f:	push   rax
  431780:	or     al,al
  431782:	(bad)  
  431783:	rol    BYTE PTR [rax+riz*8],1
  431786:	add    dh,al
  431788:	add    DWORD PTR [rax],edx
  43178a:	or     DWORD PTR [rax],eax
  43178c:	adc    dl,al
  43178e:	or     al,0x30
  431790:	or     esp,DWORD PTR [rax+0xa]
  431793:	jo     0x43179e
  431795:	push   rax
  431796:	or     al,al
  431798:	(bad)  
  431799:	rol    BYTE PTR [rax+riz*8],1
  43179c:	add    dh,al
  43179e:	add    BYTE PTR [rax],al
  4317a0:	add    DWORD PTR [rax],edx
  4317a2:	or     DWORD PTR [rax],eax
  4317a4:	adc    BYTE PTR [rdx+0xc],ah
  4317a7:	xor    BYTE PTR [rbx],cl
  4317a9:	(bad)  
  4317aa:	or     dh,BYTE PTR [rax+0x9]
  4317ad:	push   rax
  4317ae:	or     al,al
  4317b0:	(bad)  
  4317b1:	rol    BYTE PTR [rax+riz*8],1
  4317b4:	add    dh,al
  4317b6:	add    BYTE PTR [rax],al
  4317b8:	add    DWORD PTR [rbx],edx
  4317ba:	or     al,BYTE PTR [rax]
  4317bc:	adc    eax,DWORD PTR [rcx]
  4317be:	(bad)  
  4317bf:	add    BYTE PTR [rax+rsi*1],cl
  4317c2:	or     esp,DWORD PTR [rax+0xa]
  4317c5:	jo     0x4317d0
  4317c7:	push   rax
  4317c8:	or     al,al
  4317ca:	(bad)  
  4317cb:	rol    BYTE PTR [rax+riz*8],1
  4317ce:	add    dh,al
  4317d0:	add    DWORD PTR [rbx],edx
  4317d2:	or     al,BYTE PTR [rax]
  4317d4:	adc    eax,DWORD PTR [rcx]
  4317d6:	sbb    DWORD PTR [rax],eax
  4317d8:	or     al,0x30
  4317da:	or     esp,DWORD PTR [rax+0xa]
  4317dd:	jo     0x4317e8
  4317df:	push   rax
  4317e0:	or     al,al
  4317e2:	(bad)  
  4317e3:	rol    BYTE PTR [rax+riz*8],1
  4317e6:	add    dh,al
  4317e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324817f0
  4317ee:	add    DWORD PTR [rax],esi
  4317f0:	add    DWORD PTR [rdi],eax
  4317f2:	add    al,0x0
  4317f4:	(bad)  
  4317f5:	xor    al,BYTE PTR [rbx]
  4317f7:	xor    BYTE PTR [rdx],al
  4317f9:	(bad)  
  4317fa:	add    DWORD PTR [rax+0x1],esi
  4317fd:	or     al,BYTE PTR [rsi]
  4317ff:	add    BYTE PTR [rdx],cl
  431801:	push   rdx
  431802:	(bad)  
  431803:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31c69
  431809:	push   rax
  43180a:	add    al,al
  43180c:	add    DWORD PTR [rax],edx
  43180e:	or     DWORD PTR [rax],eax
  431810:	adc    BYTE PTR [rdx+0xc],al
  431813:	xor    BYTE PTR [rbx],cl
  431815:	(bad)  
  431816:	or     dh,BYTE PTR [rax+0x9]
  431819:	push   rax
  43181a:	or     al,al
  43181c:	(bad)  
  43181d:	rol    BYTE PTR [rax+riz*8],1
  431820:	add    dh,al
  431822:	add    BYTE PTR [rax],al
  431824:	add    DWORD PTR [rsi],eax
  431826:	add    eax,DWORD PTR [rax]
  431828:	(bad)  
  431829:	rex.X add sil,BYTE PTR [rax]
  43182c:	add    DWORD PTR [rax+0x0],esp
  43182f:	add    BYTE PTR [rcx],al
  431831:	adc    BYTE PTR [rcx],cl
  431833:	add    BYTE PTR [rax],dl
  431835:	(bad)  
  431836:	or     al,0x30
  431838:	or     esp,DWORD PTR [rax+0xa]
  43183b:	jo     0x431846
  43183d:	push   rax
  43183e:	or     al,al
  431840:	(bad)  
  431841:	rol    BYTE PTR [rax+riz*8],1
  431844:	add    dh,al
  431846:	add    BYTE PTR [rax],al
  431848:	add    DWORD PTR [rdi],eax
  43184a:	add    al,0x0
  43184c:	(bad)  
  43184d:	xor    al,BYTE PTR [rbx]
  43184f:	xor    BYTE PTR [rdx],al
  431851:	(bad)  
  431852:	add    DWORD PTR [rax+0x1],esi
  431855:	(bad)  
  431856:	or     BYTE PTR [rax],al
  431858:	(bad)  
  431859:	xor    cl,BYTE PTR [rdx]
  43185b:	xor    BYTE PTR [rcx],cl
  43185d:	(bad)  
  43185e:	or     BYTE PTR [rax+0x7],dh
  431861:	push   rax
  431862:	(bad)  
  431863:	rol    BYTE PTR [rax+rdx*8],0x2
  431867:	loopne 0x43186a
  431869:	or     BYTE PTR [rip+0x4420800],al        # 0x485206f
  43186f:	xor    BYTE PTR [rbx],al
  431871:	(bad)  
  431872:	add    dh,BYTE PTR [rax+0x1]
  431875:	push   rax
  431876:	add    BYTE PTR [rax],al
  431878:	add    DWORD PTR [rax],edx
  43187a:	or     DWORD PTR [rax],eax
  43187c:	adc    BYTE PTR [rdx+0x600b300c],ah
  431882:	or     dh,BYTE PTR [rax+0x9]
  431885:	push   rax
  431886:	or     al,al
  431888:	(bad)  
  431889:	rol    BYTE PTR [rax+riz*8],1
  43188c:	add    dh,al
  43188e:	add    BYTE PTR [rax],al
  431890:	add    DWORD PTR [rax],eax
  431892:	add    BYTE PTR [rax],al
  431894:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248189c
  43189a:	add    DWORD PTR [rax],esi
  43189c:	add    DWORD PTR [rcx],eax
  43189e:	add    DWORD PTR [rax],eax
  4318a0:	add    DWORD PTR [rax],esi
  4318a2:	add    BYTE PTR [rax],al
  4318a4:	add    DWORD PTR [rbx],edx
  4318a6:	or     al,BYTE PTR [rax]
  4318a8:	adc    eax,DWORD PTR [rcx]
  4318aa:	sbb    eax,DWORD PTR [rax]
  4318ac:	or     al,0x30
  4318ae:	or     esp,DWORD PTR [rax+0xa]
  4318b1:	jo     0x4318bc
  4318b3:	push   rax
  4318b4:	or     al,al
  4318b6:	(bad)  
  4318b7:	rol    BYTE PTR [rax+riz*8],1
  4318ba:	add    dh,al
  4318bc:	add    DWORD PTR [rsi],eax
  4318be:	add    eax,DWORD PTR [rax]
  4318c0:	(bad)  
  4318c1:	(bad)  
  4318c3:	xor    BYTE PTR [rcx],al
  4318c5:	(bad)  
  4318c6:	add    BYTE PTR [rax],al
  4318c8:	add    DWORD PTR [rdi],eax
  4318ca:	add    al,0x0
  4318cc:	(bad)  
  4318cd:	xchg   edx,eax
  4318ce:	add    esi,DWORD PTR [rax]
  4318d0:	add    ah,BYTE PTR [rax+0x1]
  4318d3:	jo     0x4318d6
  4318d5:	(bad)  
  4318d6:	add    eax,DWORD PTR [rax]
  4318d8:	(bad)  
  4318d9:	movabs ds:0xe01000060013002,al
  4318e2:	or     BYTE PTR [rax],al
  4318e4:	(bad)  
  4318e5:	xor    cl,BYTE PTR [rdx]
  4318e7:	xor    BYTE PTR [rcx],cl
  4318e9:	(bad)  
  4318ea:	or     BYTE PTR [rax+0x7],dh
  4318ed:	push   rax
  4318ee:	(bad)  
  4318ef:	rol    BYTE PTR [rax+rdx*8],0x2
  4318f3:	loopne 0x4318f6
  4318f5:	(bad)  
  4318f6:	add    al,0x0
  4318f8:	(bad)  
  4318f9:	xchg   edx,eax
  4318fa:	add    esi,DWORD PTR [rax]
  4318fc:	add    ah,BYTE PTR [rax+0x1]
  4318ff:	jo     0x431902
  431901:	or     BYTE PTR [rip+0x4820800],al        # 0x4c52107
  431907:	xor    BYTE PTR [rbx],al
  431909:	(bad)  
  43190a:	add    dh,BYTE PTR [rax+0x1]
  43190d:	push   rax
  43190e:	add    BYTE PTR [rax],al
  431910:	add    DWORD PTR [rdx],ecx
  431912:	(bad)  
  431913:	add    BYTE PTR [rdx],cl
  431915:	jb     0x43191d
  431917:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31d7d
  43191d:	push   rax
  43191e:	add    al,al
  431920:	add    DWORD PTR [rdi+rax*1],ecx
  431923:	add    BYTE PTR [rdx+rax*2],cl
  431926:	or     BYTE PTR [rax],dh
  431928:	(bad)  
  431929:	(bad)  
  43192a:	(bad)  
  43192b:	jo     0x431932
  43192d:	push   rax
  43192e:	add    al,0xc0
  431930:	add    dl,al
  431932:	add    BYTE PTR [rax],al
  431934:	add    DWORD PTR [rsi],ecx
  431936:	or     BYTE PTR [rax],al
  431938:	(bad)  
  431939:	xor    cl,BYTE PTR [rdx]
  43193b:	xor    BYTE PTR [rcx],cl
  43193d:	(bad)  
  43193e:	or     BYTE PTR [rax+0x7],dh
  431941:	push   rax
  431942:	(bad)  
  431943:	rol    BYTE PTR [rax+rdx*8],0x2
  431947:	loopne 0x43194a
  431949:	or     al,BYTE PTR [rsi]
  43194b:	add    BYTE PTR [rdx],cl
  43194d:	push   rdx
  43194e:	(bad)  
  43194f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31db5
  431955:	push   rax
  431956:	add    al,al
  431958:	add    DWORD PTR [rax],ecx
  43195a:	add    eax,0x4420800
  43195f:	xor    BYTE PTR [rbx],al
  431961:	(bad)  
  431962:	add    dh,BYTE PTR [rax+0x1]
  431965:	push   rax
  431966:	add    BYTE PTR [rax],al
  431968:	add    DWORD PTR [rsi],eax
  43196a:	add    eax,DWORD PTR [rax]
  43196c:	(bad)  
  43196d:	rex.X add sil,BYTE PTR [rax]
  431970:	add    DWORD PTR [rax+0x0],esp
  431973:	add    BYTE PTR [rcx],al
  431975:	add    BYTE PTR [rax],al
  431977:	add    BYTE PTR [rcx],al
  431979:	add    BYTE PTR [rax],al
  43197b:	add    BYTE PTR [rcx],al
  43197d:	add    BYTE PTR [rax],al
  43197f:	add    BYTE PTR [rcx],al
  431981:	add    BYTE PTR [rax],al
  431983:	add    BYTE PTR [rcx],al
  431985:	or     BYTE PTR [rip+0x4c20800],al        # 0x505218b
  43198b:	xor    BYTE PTR [rbx],al
  43198d:	(bad)  
  43198e:	add    dh,BYTE PTR [rax+0x1]
  431991:	push   rax
  431992:	add    BYTE PTR [rax],al
  431994:	add    DWORD PTR [rsi],eax
  431996:	add    eax,DWORD PTR [rax]
  431998:	(bad)  
  431999:	rex.X add sil,BYTE PTR [rax]
  43199c:	add    DWORD PTR [rax+0x0],esp
  43199f:	add    BYTE PTR [rcx],al
  4319a1:	adc    ecx,DWORD PTR [rdx]
  4319a3:	add    BYTE PTR [rbx],dl
  4319a5:	add    DWORD PTR [rbx],ebp
  4319a7:	add    BYTE PTR [rax+rsi*1],cl
  4319aa:	or     esp,DWORD PTR [rax+0xa]
  4319ad:	jo     0x4319b8
  4319af:	push   rax
  4319b0:	or     al,al
  4319b2:	(bad)  
  4319b3:	rol    BYTE PTR [rax+riz*8],1
  4319b6:	add    dh,al
  4319b8:	add    DWORD PTR [rbx],edx
  4319ba:	or     al,BYTE PTR [rax]
  4319bc:	adc    eax,DWORD PTR [rcx]
  4319be:	xor    DWORD PTR [rax],eax
  4319c0:	or     al,0x30
  4319c2:	or     esp,DWORD PTR [rax+0xa]
  4319c5:	jo     0x4319d0
  4319c7:	push   rax
  4319c8:	or     al,al
  4319ca:	(bad)  
  4319cb:	rol    BYTE PTR [rax+riz*8],1
  4319ce:	add    dh,al
  4319d0:	add    DWORD PTR [rdi],eax
  4319d2:	add    al,0x0
  4319d4:	(bad)  
  4319d5:	xor    al,BYTE PTR [rbx]
  4319d7:	xor    BYTE PTR [rdx],al
  4319d9:	(bad)  
  4319da:	add    DWORD PTR [rax+0x1],esi
  4319dd:	(bad)  
  4319de:	add    eax,DWORD PTR [rax]
  4319e0:	(bad)  
  4319e1:	ret    0x3002
  4319e4:	add    DWORD PTR [rax+0x0],esp
  4319e7:	add    BYTE PTR [rcx],al
  4319e9:	or     al,BYTE PTR [rsi]
  4319eb:	add    BYTE PTR [rdx],cl
  4319ed:	xchg   edx,eax
  4319ee:	(bad)  
  4319ef:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31e55
  4319f5:	push   rax
  4319f6:	add    al,al
  4319f8:	add    DWORD PTR [rdi+rax*1],ecx
  4319fb:	add    BYTE PTR [rdx+rax*2],cl
  4319fe:	or     BYTE PTR [rax],dh
  431a00:	(bad)  
  431a01:	(bad)  
  431a02:	(bad)  
  431a03:	jo     0x431a0a
  431a05:	push   rax
  431a06:	add    al,0xc0
  431a08:	add    dl,al
  431a0a:	add    BYTE PTR [rax],al
  431a0c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481a14
  431a12:	add    DWORD PTR [rax],esi
  431a14:	add    DWORD PTR [rdx],ecx
  431a16:	(bad)  
  431a17:	add    BYTE PTR [rdx],cl
  431a19:	push   rdx
  431a1a:	(bad)  
  431a1b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b31e81
  431a21:	push   rax
  431a22:	add    al,al
  431a24:	add    DWORD PTR [rbx],edx
  431a26:	or     al,BYTE PTR [rax]
  431a28:	adc    eax,DWORD PTR [rcx]
  431a2a:	sbb    eax,DWORD PTR [rax]
  431a2c:	or     al,0x30
  431a2e:	or     esp,DWORD PTR [rax+0xa]
  431a31:	jo     0x431a3c
  431a33:	push   rax
  431a34:	or     al,al
  431a36:	(bad)  
  431a37:	rol    BYTE PTR [rax+riz*8],1
  431a3a:	add    dh,al
  431a3c:	add    DWORD PTR [rax],edx
  431a3e:	or     DWORD PTR [rax],eax
  431a40:	adc    dl,al
  431a42:	or     al,0x30
  431a44:	or     esp,DWORD PTR [rax+0xa]
  431a47:	jo     0x431a52
  431a49:	push   rax
  431a4a:	or     al,al
  431a4c:	(bad)  
  431a4d:	rol    BYTE PTR [rax+riz*8],1
  431a50:	add    dh,al
  431a52:	add    BYTE PTR [rax],al
  431a54:	add    DWORD PTR [rsi],eax
  431a56:	add    eax,DWORD PTR [rax]
  431a58:	(bad)  
  431a59:	(bad)  
  431a5b:	xor    BYTE PTR [rcx],al
  431a5d:	(bad)  
  431a5e:	add    BYTE PTR [rax],al
  431a60:	add    DWORD PTR [rax],edx
  431a62:	or     DWORD PTR [rax],eax
  431a64:	adc    BYTE PTR [rdx+0xc],al
  431a67:	xor    BYTE PTR [rbx],cl
  431a69:	(bad)  
  431a6a:	or     dh,BYTE PTR [rax+0x9]
  431a6d:	push   rax
  431a6e:	or     al,al
  431a70:	(bad)  
  431a71:	rol    BYTE PTR [rax+riz*8],1
  431a74:	add    dh,al
  431a76:	add    BYTE PTR [rax],al
  431a78:	add    DWORD PTR [rax],ecx
  431a7a:	add    eax,0x4a20800
  431a7f:	xor    BYTE PTR [rbx],al
  431a81:	(bad)  
  431a82:	add    dh,BYTE PTR [rax+0x1]
  431a85:	push   rax
  431a86:	add    BYTE PTR [rax],al
  431a88:	add    DWORD PTR [rcx+rax*1],eax
  431a8b:	add    BYTE PTR [rdx+rax*2],al
  431a8e:	add    BYTE PTR [rax],al
  431a90:	add    DWORD PTR [rcx+rax*1],eax
  431a93:	add    BYTE PTR [rdx+rax*2],al
  431a96:	add    BYTE PTR [rax],al
  431a98:	add    DWORD PTR [rax],eax
  431a9a:	add    BYTE PTR [rax],al
  431a9c:	add    DWORD PTR [rsi],eax
  431a9e:	add    eax,DWORD PTR [rax]
  431aa0:	(bad)  
  431aa1:	rex.X add sil,BYTE PTR [rax]
  431aa4:	add    DWORD PTR [rax+0x0],esp
  431aa7:	add    BYTE PTR [rcx],al
  431aa9:	(bad)  
  431aaa:	add    eax,DWORD PTR [rax]
  431aac:	(bad)  
  431aad:	rex.X add sil,BYTE PTR [rax]
  431ab0:	add    DWORD PTR [rax+0x0],esp
  431ab3:	add    BYTE PTR [rcx],al
  431ab5:	add    eax,0x32050002
  431aba:	add    DWORD PTR [rax],esi
  431abc:	add    DWORD PTR [rbx],eax
  431abe:	add    eax,DWORD PTR [rax]
  431ac0:	add    esi,DWORD PTR [rax]
  431ac2:	add    ah,BYTE PTR [rax+0x1]
  431ac5:	jo     0x431ac7
  431ac7:	add    BYTE PTR [rcx],al
  431ac9:	adc    ecx,DWORD PTR [rdx]
  431acb:	add    BYTE PTR [rbx],dl
  431acd:	add    DWORD PTR [rcx],ecx
  431acf:	add    DWORD PTR [rax+rsi*1],ecx
  431ad2:	or     esp,DWORD PTR [rax+0xa]
  431ad5:	jo     0x431ae0
  431ad7:	push   rax
  431ad8:	or     al,al
  431ada:	(bad)  
  431adb:	rol    BYTE PTR [rax+riz*8],1
  431ade:	add    dh,al
  431ae0:	add    DWORD PTR [rax],edx
  431ae2:	or     DWORD PTR [rax],eax
  431ae4:	adc    BYTE PTR [rdx+0x600b300c],al
  431aea:	or     dh,BYTE PTR [rax+0x9]
  431aed:	push   rax
  431aee:	or     al,al
  431af0:	(bad)  
  431af1:	rol    BYTE PTR [rax+riz*8],1
  431af4:	add    dh,al
  431af6:	add    BYTE PTR [rax],al
  431af8:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481b00
  431afe:	add    DWORD PTR [rax],esi
  431b00:	add    DWORD PTR [rax],ecx
  431b02:	add    eax,0x4620800
  431b07:	xor    BYTE PTR [rbx],al
  431b09:	(bad)  
  431b0a:	add    dh,BYTE PTR [rax+0x1]
  431b0d:	push   rax
  431b0e:	add    BYTE PTR [rax],al
  431b10:	add    DWORD PTR [rcx+rax*1],eax
  431b13:	add    BYTE PTR [rdx+riz*2],al
  431b16:	add    BYTE PTR [rax],al
  431b18:	add    DWORD PTR [rbx],ebx
  431b1a:	or     eax,DWORD PTR [rbp+0x113031b]
  431b20:	movabs ds:0x9700a600b300c00,eax
  431b29:	rol    BYTE PTR [rdi],0xd0
  431b2c:	add    eax,0x1f003e0
  431b31:	push   rax
  431b32:	add    BYTE PTR [rax],al
  431b34:	add    DWORD PTR [rax],eax
  431b36:	add    BYTE PTR [rax],al
  431b38:	add    DWORD PTR [rax],eax
  431b3a:	add    BYTE PTR [rax],al
  431b3c:	add    DWORD PTR [rax],edx
  431b3e:	or     DWORD PTR [rax],eax
  431b40:	adc    BYTE PTR [rdx+0x600b300c],ah
  431b46:	or     dh,BYTE PTR [rax+0x9]
  431b49:	push   rax
  431b4a:	or     al,al
  431b4c:	(bad)  
  431b4d:	rol    BYTE PTR [rax+riz*8],1
  431b50:	add    dh,al
  431b52:	add    BYTE PTR [rax],al
  431b54:	add    DWORD PTR [rsi],eax
  431b56:	add    eax,DWORD PTR [rax]
  431b58:	(bad)  
  431b59:	rex.X add sil,BYTE PTR [rax]
  431b5c:	add    DWORD PTR [rax+0x0],esp
  431b5f:	add    BYTE PTR [rcx],al
  431b61:	(bad)  
  431b62:	add    al,0x0
  431b64:	(bad)  
  431b65:	push   rdx
  431b66:	add    esi,DWORD PTR [rax]
  431b68:	add    ah,BYTE PTR [rax+0x1]
  431b6b:	jo     0x431b6e
  431b6d:	add    eax,0x32050002
  431b72:	add    DWORD PTR [rax],esi
  431b74:	add    DWORD PTR [rax],eax
  431b76:	add    BYTE PTR [rax],al
  431b78:	add    DWORD PTR [rsi],eax
  431b7a:	add    eax,DWORD PTR [rax]
  431b7c:	(bad)  
  431b7d:	(bad)  
  431b7f:	xor    BYTE PTR [rcx],al
  431b81:	(bad)  
  431b82:	add    BYTE PTR [rax],al
  431b84:	add    DWORD PTR [rax],eax
  431b86:	add    BYTE PTR [rax],al
  431b88:	add    DWORD PTR [rbx],ecx
  431b8a:	(bad)  
  431b8b:	add    BYTE PTR [rbx],cl
  431b8d:	add    DWORD PTR [rdi+0x0],eax
  431b90:	add    al,0x30
  431b92:	add    esp,DWORD PTR [rax+0x2]
  431b95:	jo     0x431b98
  431b97:	push   rax
  431b98:	add    DWORD PTR [rdi],eax
  431b9a:	add    al,0x0
  431b9c:	(bad)  
  431b9d:	push   rdx
  431b9e:	add    esi,DWORD PTR [rax]
  431ba0:	add    ah,BYTE PTR [rax+0x1]
  431ba3:	jo     0x431ba6
  431ba5:	add    BYTE PTR [rax],al
  431ba7:	add    BYTE PTR [rcx],al
  431ba9:	add    al,0x1
  431bab:	add    BYTE PTR [rdx+rax*2],al
  431bae:	add    BYTE PTR [rax],al
  431bb0:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481bb8
  431bb6:	add    DWORD PTR [rax],esi
  431bb8:	add    DWORD PTR [rdi],eax
  431bba:	add    al,0x0
  431bbc:	(bad)  
  431bbd:	push   rdx
  431bbe:	add    esi,DWORD PTR [rax]
  431bc0:	add    ah,BYTE PTR [rax+0x1]
  431bc3:	jo     0x431bc6
  431bc5:	adc    BYTE PTR [rcx],cl
  431bc7:	add    BYTE PTR [rax],dl
  431bc9:	(bad)  
  431bca:	or     al,0x30
  431bcc:	or     esp,DWORD PTR [rax+0xa]
  431bcf:	jo     0x431bda
  431bd1:	push   rax
  431bd2:	or     al,al
  431bd4:	(bad)  
  431bd5:	rol    BYTE PTR [rax+riz*8],1
  431bd8:	add    dh,al
  431bda:	add    BYTE PTR [rax],al
  431bdc:	add    DWORD PTR [rbx],ebx
  431bde:	or     eax,DWORD PTR [rbp+0x113031b]
  431be4:	adc    eax,DWORD PTR [rax]
  431be6:	or     al,0x30
  431be8:	or     esp,DWORD PTR [rax+0xa]
  431beb:	jo     0x431bf6
  431bed:	rol    BYTE PTR [rdi],0xd0
  431bf0:	add    eax,0x1f003e0
  431bf5:	push   rax
  431bf6:	add    BYTE PTR [rax],al
  431bf8:	add    DWORD PTR [rbx],ebx
  431bfa:	or     eax,DWORD PTR [rbp+0x113031b]
  431c00:	sub    DWORD PTR [rcx],eax
  431c02:	or     al,0x30
  431c04:	or     esp,DWORD PTR [rax+0xa]
  431c07:	jo     0x431c12
  431c09:	rol    BYTE PTR [rdi],0xd0
  431c0c:	add    eax,0x1f003e0
  431c11:	push   rax
  431c12:	add    BYTE PTR [rax],al
  431c14:	add    DWORD PTR [rdi],eax
  431c16:	add    al,0x0
  431c18:	(bad)  
  431c19:	push   rdx
  431c1a:	add    esi,DWORD PTR [rax]
  431c1c:	add    ah,BYTE PTR [rax+0x1]
  431c1f:	jo     0x431c22
  431c21:	(bad)  
  431c22:	add    al,0x0
  431c24:	(bad)  
  431c25:	jb     0x431c2a
  431c27:	xor    BYTE PTR [rdx],al
  431c29:	(bad)  
  431c2a:	add    DWORD PTR [rax+0x1],esi
  431c2d:	(bad)  
  431c2e:	add    al,0x0
  431c30:	(bad)  
  431c31:	xchg   edx,eax
  431c32:	add    esi,DWORD PTR [rax]
  431c34:	add    ah,BYTE PTR [rax+0x1]
  431c37:	jo     0x431c3a
  431c39:	(bad)  
  431c3a:	add    al,0x0
  431c3c:	(bad)  
  431c3d:	push   rdx
  431c3e:	add    esi,DWORD PTR [rax]
  431c40:	add    ah,BYTE PTR [rax+0x1]
  431c43:	jo     0x431c46
  431c45:	(bad)  
  431c46:	add    eax,DWORD PTR [rax]
  431c48:	(bad)  
  431c49:	(bad)  
  431c4a:	add    dh,BYTE PTR [rax]
  431c4c:	add    DWORD PTR [rax+0x0],esp
  431c4f:	add    BYTE PTR [rcx],al
  431c51:	(bad)  
  431c52:	add    eax,DWORD PTR [rax]
  431c54:	(bad)  
  431c55:	rex.X add sil,BYTE PTR [rax]
  431c58:	add    DWORD PTR [rax+0x0],esp
  431c5b:	add    BYTE PTR [rcx],al
  431c5d:	add    al,0x1
  431c5f:	add    BYTE PTR [rdx+riz*2],al
  431c62:	add    BYTE PTR [rax],al
  431c64:	add    DWORD PTR [rdi],eax
  431c66:	add    al,0x0
  431c68:	(bad)  
  431c69:	xor    al,BYTE PTR [rbx]
  431c6b:	xor    BYTE PTR [rdx],al
  431c6d:	(bad)  
  431c6e:	add    DWORD PTR [rax+0x1],esi
  431c71:	add    BYTE PTR [rax],al
  431c73:	add    BYTE PTR [rcx],al
  431c75:	add    BYTE PTR [rax],al
  431c77:	add    BYTE PTR [rcx],al
  431c79:	add    BYTE PTR [rax],al
  431c7b:	add    BYTE PTR [rcx],al
  431c7d:	add    BYTE PTR [rax],al
  431c7f:	add    BYTE PTR [rcx],al
  431c81:	add    al,0x1
  431c83:	add    BYTE PTR [rdx+riz*2],al
  431c86:	add    BYTE PTR [rax],al
  431c88:	add    DWORD PTR [rcx+rax*1],eax
  431c8b:	add    BYTE PTR [rdx+rax*2],al
  431c8e:	add    BYTE PTR [rax],al
  431c90:	add    DWORD PTR [rax],eax
  431c92:	add    BYTE PTR [rax],al
  431c94:	add    DWORD PTR [rdx],ecx
  431c96:	(bad)  
  431c97:	add    BYTE PTR [rdx],cl
  431c99:	mov    dl,0x6
  431c9b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32101
  431ca1:	push   rax
  431ca2:	add    al,al
  431ca4:	add    DWORD PTR [rax],ecx
  431ca6:	add    eax,0x4a20800
  431cab:	xor    BYTE PTR [rbx],al
  431cad:	(bad)  
  431cae:	add    dh,BYTE PTR [rax+0x1]
  431cb1:	push   rax
  431cb2:	add    BYTE PTR [rax],al
  431cb4:	add    DWORD PTR [rax],ecx
  431cb6:	add    eax,DWORD PTR [rax]
  431cb8:	or     BYTE PTR [rcx],al
  431cba:	cmp    BYTE PTR [rax],al
  431cbc:	add    DWORD PTR [rax],esi
  431cbe:	add    BYTE PTR [rax],al
  431cc0:	add    DWORD PTR [rcx+rax*1],eax
  431cc3:	add    BYTE PTR [rdx+rax*2],al
  431cc6:	add    BYTE PTR [rax],al
  431cc8:	add    DWORD PTR [rdi],eax
  431cca:	add    al,0x0
  431ccc:	(bad)  
  431ccd:	push   rdx
  431cce:	add    esi,DWORD PTR [rax]
  431cd0:	add    ah,BYTE PTR [rax+0x1]
  431cd3:	jo     0x431cd6
  431cd5:	add    al,0x1
  431cd7:	add    BYTE PTR [rdx+rax*2],al
  431cda:	add    BYTE PTR [rax],al
  431cdc:	add    DWORD PTR [rip+0x72050002],eax        # 0x72481ce4
  431ce2:	add    DWORD PTR [rax],esi
  431ce4:	add    DWORD PTR [rip+0x52050002],eax        # 0x52481cec
  431cea:	add    DWORD PTR [rax],esi
  431cec:	add    DWORD PTR [rcx+rax*1],eax
  431cef:	add    BYTE PTR [rdx+rax*2],al
  431cf2:	add    BYTE PTR [rax],al
  431cf4:	add    DWORD PTR [rcx+rax*1],eax
  431cf7:	add    BYTE PTR [rdx+rax*2],al
  431cfa:	add    BYTE PTR [rax],al
  431cfc:	add    DWORD PTR [rsi],eax
  431cfe:	add    eax,DWORD PTR [rax]
  431d00:	(bad)  
  431d01:	rex.X add sil,BYTE PTR [rax]
  431d04:	add    DWORD PTR [rax+0x0],esp
  431d07:	add    BYTE PTR [rcx],al
  431d09:	add    BYTE PTR [rax],al
  431d0b:	add    BYTE PTR [rcx],al
  431d0d:	add    BYTE PTR [rax],al
  431d0f:	add    BYTE PTR [rcx],al
  431d11:	add    BYTE PTR [rax],al
  431d13:	add    BYTE PTR [rcx],al
  431d15:	or     al,BYTE PTR [rsi]
  431d17:	add    BYTE PTR [rdx],cl
  431d19:	jb     0x431d21
  431d1b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32181
  431d21:	push   rax
  431d22:	add    al,al
  431d24:	add    DWORD PTR [rdx],ecx
  431d26:	add    eax,0x6d20a05
  431d2b:	add    eax,DWORD PTR [rbx]
  431d2d:	xor    BYTE PTR [rdx],al
  431d2f:	(bad)  
  431d30:	add    DWORD PTR [rax+0x0],edx
  431d33:	add    BYTE PTR [rcx],al
  431d35:	add    al,0x1
  431d37:	add    BYTE PTR [rdx+rax*2],al
  431d3a:	add    BYTE PTR [rax],al
  431d3c:	add    DWORD PTR [rsi],eax
  431d3e:	add    eax,DWORD PTR [rax]
  431d40:	(bad)  
  431d41:	rex.X add sil,BYTE PTR [rax]
  431d44:	add    DWORD PTR [rax+0x0],esp
  431d47:	add    BYTE PTR [rcx],al
  431d49:	add    BYTE PTR [rax],al
  431d4b:	add    BYTE PTR [rcx],al
  431d4d:	add    al,0x1
  431d4f:	add    BYTE PTR [rdx+riz*4],al
  431d52:	add    BYTE PTR [rax],al
  431d54:	add    DWORD PTR [rax],eax
  431d56:	add    BYTE PTR [rax],al
  431d58:	add    DWORD PTR [rsi],edx
  431d5a:	or     DWORD PTR [rax],eax
  431d5c:	(bad)  
  431d5d:	mov    BYTE PTR [rsi],al
  431d5f:	add    BYTE PTR [rax],dl
  431d61:	js     0x431d68
  431d63:	add    BYTE PTR [rbx],cl
  431d65:	push   0xffffffffe2060004
  431d6a:	add    dh,BYTE PTR [rax]
  431d6c:	add    DWORD PTR [rax+0x0],esp
  431d6f:	add    BYTE PTR [rcx],al
  431d71:	add    BYTE PTR [rax],al
  431d73:	add    BYTE PTR [rcx],al
  431d75:	add    BYTE PTR [rax],al
  431d77:	add    BYTE PTR [rcx],al
  431d79:	add    BYTE PTR [rax],al
  431d7b:	add    BYTE PTR [rcx],al
  431d7d:	(bad)  
  431d7e:	add    eax,DWORD PTR [rax]
  431d80:	(bad)  
  431d81:	(bad)  
  431d83:	xor    BYTE PTR [rcx],al
  431d85:	(bad)  
  431d86:	add    BYTE PTR [rax],al
  431d88:	add    DWORD PTR [rdi+rax*1],ecx
  431d8b:	add    BYTE PTR [rdx+riz*4],cl
  431d8e:	or     BYTE PTR [rax],dh
  431d90:	(bad)  
  431d91:	(bad)  
  431d92:	(bad)  
  431d93:	jo     0x431d9a
  431d95:	push   rax
  431d96:	add    al,0xc0
  431d98:	add    dl,al
  431d9a:	add    BYTE PTR [rax],al
  431d9c:	add    DWORD PTR [rcx],edx
  431d9e:	or     DWORD PTR [rip+0x30db211],eax        # 0x350cfb5
  431da4:	or     dh,BYTE PTR [rax]
  431da6:	or     DWORD PTR [rax+0x8],esp
  431da9:	jo     0x431db2
  431dab:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2232182
  431db2:	add    BYTE PTR [rax],al
  431db4:	add    DWORD PTR [rcx+rax*1],eax
  431db7:	add    BYTE PTR [rdx+rax*2],al
  431dba:	add    BYTE PTR [rax],al
  431dbc:	add    DWORD PTR [rdx],ecx
  431dbe:	(bad)  
  431dbf:	add    BYTE PTR [rdx],cl
  431dc1:	xor    al,BYTE PTR [rsi]
  431dc3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b32229
  431dc9:	push   rax
  431dca:	add    al,al
  431dcc:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481dd4
  431dd2:	add    DWORD PTR [rax],esi
  431dd4:	add    DWORD PTR [rax],ecx
  431dd6:	add    eax,0x4420800
  431ddb:	xor    BYTE PTR [rbx],al
  431ddd:	(bad)  
  431dde:	add    dh,BYTE PTR [rax+0x1]
  431de1:	push   rax
  431de2:	add    BYTE PTR [rax],al
  431de4:	add    DWORD PTR [rdi],eax
  431de6:	add    al,0x0
  431de8:	(bad)  
  431de9:	xor    al,BYTE PTR [rbx]
  431deb:	xor    BYTE PTR [rdx],al
  431ded:	(bad)  
  431dee:	add    DWORD PTR [rax+0x1],esi
  431df1:	add    eax,0x32050002
  431df6:	add    DWORD PTR [rax],esi
  431df8:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481e00
  431dfe:	add    DWORD PTR [rax],esi
  431e00:	add    DWORD PTR [rax],eax
  431e02:	add    BYTE PTR [rax],al
  431e04:	add    DWORD PTR [rax],eax
  431e06:	add    BYTE PTR [rax],al
  431e08:	add    DWORD PTR [rax],eax
  431e0a:	add    BYTE PTR [rax],al
  431e0c:	add    DWORD PTR [rdi],eax
  431e0e:	add    al,0x0
  431e10:	(bad)  
  431e11:	xor    al,BYTE PTR [rbx]
  431e13:	xor    BYTE PTR [rdx],al
  431e15:	(bad)  
  431e16:	add    DWORD PTR [rax+0x1],esi
  431e19:	(bad)  
  431e1a:	add    eax,DWORD PTR [rax]
  431e1c:	(bad)  
  431e1d:	rex.X add sil,BYTE PTR [rax]
  431e20:	add    DWORD PTR [rax+0x0],esp
  431e23:	add    BYTE PTR [rcx],al
  431e25:	add    eax,0x32050002
  431e2a:	add    DWORD PTR [rax],esi
  431e2c:	add    DWORD PTR [rdi],eax
  431e2e:	add    al,0x0
  431e30:	(bad)  
  431e31:	xor    al,BYTE PTR [rbx]
  431e33:	xor    BYTE PTR [rdx],al
  431e35:	(bad)  
  431e36:	add    DWORD PTR [rax+0x1],esi
  431e39:	(bad)  
  431e3a:	add    eax,DWORD PTR [rax]
  431e3c:	(bad)  
  431e3d:	rex.X add sil,BYTE PTR [rax]
  431e40:	add    DWORD PTR [rax+0x0],esp
  431e43:	add    BYTE PTR [rcx],al
  431e45:	(bad)  
  431e46:	add    eax,DWORD PTR [rax]
  431e48:	(bad)  
  431e49:	rex.X add sil,BYTE PTR [rax]
  431e4c:	add    DWORD PTR [rax+0x0],esp
  431e4f:	add    BYTE PTR [rcx],al
  431e51:	or     BYTE PTR [rip+0x4420800],al        # 0x4852657
  431e57:	xor    BYTE PTR [rbx],al
  431e59:	(bad)  
  431e5a:	add    dh,BYTE PTR [rax+0x1]
  431e5d:	push   rax
  431e5e:	add    BYTE PTR [rax],al
  431e60:	add    DWORD PTR [rdx],ecx
  431e62:	add    eax,0x26010a00
  431e67:	add    BYTE PTR [rbx],al
  431e69:	xor    BYTE PTR [rdx],al
  431e6b:	(bad)  
  431e6c:	add    DWORD PTR [rax+0x0],esi
  431e6f:	add    BYTE PTR [rcx],al
  431e71:	or     eax,DWORD PTR [rsi]
  431e73:	add    BYTE PTR [rbx],cl
  431e75:	add    DWORD PTR [rbx],ebp
  431e77:	add    BYTE PTR [rax+rsi*1],al
  431e7a:	add    esp,DWORD PTR [rax+0x2]
  431e7d:	jo     0x431e80
  431e7f:	push   rax
  431e80:	add    DWORD PTR [rsi],eax
  431e82:	add    eax,DWORD PTR [rax]
  431e84:	(bad)  
  431e85:	rex.X add sil,BYTE PTR [rax]
  431e88:	add    DWORD PTR [rax+0x0],esp
  431e8b:	add    BYTE PTR [rcx],al
  431e8d:	add    eax,0x32050002
  431e92:	add    DWORD PTR [rax],esi
  431e94:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481e9c
  431e9a:	add    DWORD PTR [rax],esi
  431e9c:	add    DWORD PTR [rsi],eax
  431e9e:	add    eax,DWORD PTR [rax]
  431ea0:	(bad)  
  431ea1:	rex.X add sil,BYTE PTR [rax]
  431ea4:	add    DWORD PTR [rax+0x0],esp
  431ea7:	add    BYTE PTR [rcx],al
  431ea9:	add    BYTE PTR [rax],al
  431eab:	add    BYTE PTR [rcx],al
  431ead:	or     eax,0x10d0007
  431eb2:	rex.WX add BYTE PTR [rsi],al
  431eb5:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3231b
  431ebb:	push   rax
  431ebc:	add    al,al
  431ebe:	add    BYTE PTR [rax],al
  431ec0:	add    DWORD PTR [rax],ecx
  431ec2:	add    eax,0x4620800
  431ec7:	xor    BYTE PTR [rbx],al
  431ec9:	(bad)  
  431eca:	add    dh,BYTE PTR [rax+0x1]
  431ecd:	push   rax
  431ece:	add    BYTE PTR [rax],al
  431ed0:	add    DWORD PTR [rcx+rax*1],eax
  431ed3:	add    BYTE PTR [rdx+riz*4],al
  431ed6:	add    BYTE PTR [rax],al
  431ed8:	add    DWORD PTR [rdi],eax
  431eda:	add    al,0x0
  431edc:	(bad)  
  431edd:	push   rdx
  431ede:	add    esi,DWORD PTR [rax]
  431ee0:	add    ah,BYTE PTR [rax+0x1]
  431ee3:	jo     0x431ee6
  431ee5:	(bad)  
  431ee6:	or     BYTE PTR [rax],al
  431ee8:	(bad)  
  431ee9:	push   rdx
  431eea:	or     dh,BYTE PTR [rax]
  431eec:	or     DWORD PTR [rax+0x8],esp
  431eef:	jo     0x431ef8
  431ef1:	push   rax
  431ef2:	(bad)  
  431ef3:	rol    BYTE PTR [rax+rdx*8],0x2
  431ef7:	loopne 0x431efa
  431ef9:	add    BYTE PTR [rax],al
  431efb:	add    BYTE PTR [rcx],al
  431efd:	add    al,0x1
  431eff:	add    BYTE PTR [rdx+riz*2],al
  431f02:	add    BYTE PTR [rax],al
  431f04:	add    DWORD PTR [rsi],eax
  431f06:	add    eax,DWORD PTR [rax]
  431f08:	(bad)  
  431f09:	(bad)  
  431f0b:	xor    BYTE PTR [rcx],al
  431f0d:	(bad)  
  431f0e:	add    BYTE PTR [rax],al
  431f10:	add    DWORD PTR [rsi],eax
  431f12:	add    eax,DWORD PTR [rax]
  431f14:	(bad)  
  431f15:	(bad)  
  431f17:	xor    BYTE PTR [rcx],al
  431f19:	(bad)  
  431f1a:	add    BYTE PTR [rax],al
  431f1c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52481f24
  431f22:	add    DWORD PTR [rax],esi
  431f24:	add    DWORD PTR [rcx+rax*1],eax
  431f27:	add    BYTE PTR [rdx+riz*4],al
  431f2a:	add    BYTE PTR [rax],al
  431f2c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32481f34
  431f32:	add    DWORD PTR [rax],esi
  431f34:	add    DWORD PTR [rsi],ecx
  431f36:	or     BYTE PTR [rax],al
  431f38:	(bad)  
  431f39:	jb     0x431f45
  431f3b:	xor    BYTE PTR [rcx],cl
  431f3d:	(bad)  
  431f3e:	or     BYTE PTR [rax+0x7],dh
  431f41:	push   rax
  431f42:	(bad)  
  431f43:	rol    BYTE PTR [rax+rdx*8],0x2
  431f47:	loopne 0x431f4a
  431f49:	(bad)  
  431f4a:	add    al,0x0
  431f4c:	(bad)  
  431f4d:	xor    al,BYTE PTR [rbx]
  431f4f:	xor    BYTE PTR [rdx],al
  431f51:	(bad)  
  431f52:	add    DWORD PTR [rax+0x1],esi
  431f55:	add    al,0x1
  431f57:	add    BYTE PTR [rdx+riz*2],al
  431f5a:	add    BYTE PTR [rax],al
  431f5c:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x52502469
  431f62:	or     DWORD PTR [rbx],eax
  431f64:	(bad)  
  431f65:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b323cb
  431f6b:	rol    BYTE PTR [rcx],0x50
  431f6e:	add    BYTE PTR [rax],al
  431f70:	add    DWORD PTR [rdx],ecx
  431f72:	(bad)  
  431f73:	add    BYTE PTR [rdx],cl
  431f75:	xor    al,BYTE PTR [rsi]
  431f77:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b323dd
  431f7d:	push   rax
  431f7e:	add    al,al
  431f80:	add    DWORD PTR [rsi],eax
  431f82:	add    eax,DWORD PTR [rax]
  431f84:	(bad)  
  431f85:	ret    0x3002
  431f88:	add    DWORD PTR [rax+0x0],esp
  431f8b:	add    BYTE PTR [rcx],al
  431f8d:	adc    al,0x8
  431f8f:	test   DWORD PTR [rbx+rax*1],edx
  431f92:	or     al,0x42
  431f94:	or     BYTE PTR [rax],dh
  431f96:	(bad)  
  431f97:	(bad)  
  431f98:	(bad)  
  431f99:	jo     0x431fa0
  431f9b:	rol    BYTE PTR [rbx],0xd0
  431f9e:	add    DWORD PTR [rax+0x1],edx
  431fa1:	(bad)  
  431fa2:	add    al,0x0
  431fa4:	(bad)  
  431fa5:	xor    al,BYTE PTR [rbx]
  431fa7:	xor    BYTE PTR [rdx],al
  431fa9:	(bad)  
  431faa:	add    DWORD PTR [rax+0x1],esi
  431fad:	(bad)  
  431fae:	add    eax,DWORD PTR [rax]
  431fb0:	(bad)  
  431fb1:	ret    0x3002
  431fb4:	add    DWORD PTR [rax+0x0],esp
  431fb7:	add    BYTE PTR [rcx],al
  431fb9:	(bad)  
  431fba:	add    eax,DWORD PTR [rax]
  431fbc:	(bad)  
  431fbd:	loop   0x431fc1
  431fbf:	xor    BYTE PTR [rcx],al
  431fc1:	(bad)  
  431fc2:	add    BYTE PTR [rax],al
  431fc4:	add    DWORD PTR [rcx],edx
  431fc6:	or     DWORD PTR [rip+0x30d3211],eax        # 0x35051dd
  431fcc:	or     dh,BYTE PTR [rax]
  431fce:	or     DWORD PTR [rax+0x8],esp
  431fd1:	jo     0x431fda
  431fd3:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22323aa
  431fda:	add    BYTE PTR [rax],al
  431fdc:	add    DWORD PTR [rdi+rax*1],ecx
  431fdf:	add    BYTE PTR [rdx+rax*8],cl
  431fe2:	or     BYTE PTR [rax],dh
  431fe4:	(bad)  
  431fe5:	(bad)  
  431fe6:	(bad)  
  431fe7:	jo     0x431fee
  431fe9:	push   rax
  431fea:	add    al,0xc0
  431fec:	add    dl,al
  431fee:	add    BYTE PTR [rax],al
  431ff0:	add    DWORD PTR [rbx],edx
  431ff2:	or     al,BYTE PTR [rax]
  431ff4:	adc    eax,DWORD PTR [rcx]
  431ff6:	(bad)  
  431ff7:	add    BYTE PTR [rax+rsi*1],cl
  431ffa:	or     esp,DWORD PTR [rax+0xa]
  431ffd:	jo     0x432008
  431fff:	push   rax
  432000:	or     al,al
  432002:	(bad)  
  432003:	rol    BYTE PTR [rax+riz*8],1
  432006:	add    dh,al
  432008:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482010
  43200e:	add    DWORD PTR [rax],esi
  432010:	add    DWORD PTR [rsi],eax
  432012:	add    eax,DWORD PTR [rax]
  432014:	(bad)  
  432015:	rex.X add sil,BYTE PTR [rax]
  432018:	add    DWORD PTR [rax+0x0],esp
  43201b:	add    BYTE PTR [rcx],al
  43201d:	add    BYTE PTR [rax],al
  43201f:	add    BYTE PTR [rcx],al
  432021:	adc    BYTE PTR [rcx],cl
  432023:	add    BYTE PTR [rax],dl
  432025:	(bad)  
  432026:	or     al,0x30
  432028:	or     esp,DWORD PTR [rax+0xa]
  43202b:	jo     0x432036
  43202d:	push   rax
  43202e:	or     al,al
  432030:	(bad)  
  432031:	rol    BYTE PTR [rax+riz*8],1
  432034:	add    dh,al
  432036:	add    BYTE PTR [rax],al
  432038:	add    DWORD PTR [rbx],ebx
  43203a:	or     al,0x0
  43203c:	sbb    ebp,DWORD PTR [rax+0xa]
  43203f:	add    BYTE PTR [rbx],dl
  432041:	add    DWORD PTR [rdi],edx
  432043:	add    BYTE PTR [rax+rsi*1],cl
  432046:	or     esp,DWORD PTR [rax+0xa]
  432049:	jo     0x432054
  43204b:	push   rax
  43204c:	or     al,al
  43204e:	(bad)  
  43204f:	rol    BYTE PTR [rax+riz*8],1
  432052:	add    dh,al
  432054:	add    DWORD PTR [rsp+rax*1],eax
  432057:	add    BYTE PTR [rax+rsi*1],al
  43205a:	add    esp,DWORD PTR [rax+0x2]
  43205d:	jo     0x432060
  43205f:	push   rax
  432060:	add    DWORD PTR [rax],eax
  432062:	add    BYTE PTR [rax],al
  432064:	add    DWORD PTR [rsi],eax
  432066:	add    eax,DWORD PTR [rax]
  432068:	(bad)  
  432069:	rex.X add sil,BYTE PTR [rax]
  43206c:	add    DWORD PTR [rax+0x0],esp
  43206f:	add    BYTE PTR [rcx],al
  432071:	add    eax,0x32050002
  432076:	add    DWORD PTR [rax],esi
  432078:	add    DWORD PTR [rdi],eax
  43207a:	add    al,0x0
  43207c:	(bad)  
  43207d:	xor    al,BYTE PTR [rbx]
  43207f:	xor    BYTE PTR [rdx],al
  432081:	(bad)  
  432082:	add    DWORD PTR [rax+0x1],esi
  432085:	add    eax,0x32050002
  43208a:	add    DWORD PTR [rax],esi
  43208c:	add    DWORD PTR [rax],ecx
  43208e:	add    eax,0x4420800
  432093:	xor    BYTE PTR [rbx],al
  432095:	(bad)  
  432096:	add    dh,BYTE PTR [rax+0x1]
  432099:	push   rax
  43209a:	add    BYTE PTR [rax],al
  43209c:	add    DWORD PTR [rip+0x32050002],eax        # 0x324820a4
  4320a2:	add    DWORD PTR [rax],esi
  4320a4:	add    DWORD PTR [rsi],ecx
  4320a6:	or     BYTE PTR [rax],al
  4320a8:	(bad)  
  4320a9:	xor    cl,BYTE PTR [rdx]
  4320ab:	xor    BYTE PTR [rcx],cl
  4320ad:	(bad)  
  4320ae:	or     BYTE PTR [rax+0x7],dh
  4320b1:	push   rax
  4320b2:	(bad)  
  4320b3:	rol    BYTE PTR [rax+rdx*8],0x2
  4320b7:	loopne 0x4320ba
  4320b9:	or     BYTE PTR [rip+0x4420800],al        # 0x48528bf
  4320bf:	xor    BYTE PTR [rbx],al
  4320c1:	(bad)  
  4320c2:	add    dh,BYTE PTR [rax+0x1]
  4320c5:	push   rax
  4320c6:	add    BYTE PTR [rax],al
  4320c8:	add    DWORD PTR [rdi+rax*1],ecx
  4320cb:	add    BYTE PTR [rdx+rax*2],cl
  4320ce:	or     BYTE PTR [rax],dh
  4320d0:	(bad)  
  4320d1:	(bad)  
  4320d2:	(bad)  
  4320d3:	jo     0x4320da
  4320d5:	push   rax
  4320d6:	add    al,0xc0
  4320d8:	add    dl,al
  4320da:	add    BYTE PTR [rax],al
  4320dc:	add    DWORD PTR [rax],eax
  4320de:	add    BYTE PTR [rax],al
  4320e0:	add    DWORD PTR [rdi],eax
  4320e2:	add    al,0x0
  4320e4:	(bad)  
  4320e5:	xor    al,BYTE PTR [rbx]
  4320e7:	xor    BYTE PTR [rdx],al
  4320e9:	(bad)  
  4320ea:	add    DWORD PTR [rax+0x1],esi
  4320ed:	(bad)  
  4320ee:	add    eax,DWORD PTR [rax]
  4320f0:	(bad)  
  4320f1:	and    al,BYTE PTR [rdx]
  4320f3:	xor    BYTE PTR [rcx],al
  4320f5:	(bad)  
  4320f6:	add    BYTE PTR [rax],al
  4320f8:	add    DWORD PTR [rdi],eax
  4320fa:	add    al,0x0
  4320fc:	(bad)  
  4320fd:	xor    al,BYTE PTR [rbx]
  4320ff:	xor    BYTE PTR [rdx],al
  432101:	(bad)  
  432102:	add    DWORD PTR [rax+0x1],esi
  432105:	add    BYTE PTR [rax],al
  432107:	add    BYTE PTR [rcx],al
  432109:	or     BYTE PTR [rip+0x4820800],al        # 0x4c5290f
  43210f:	xor    BYTE PTR [rbx],al
  432111:	(bad)  
  432112:	add    dh,BYTE PTR [rax+0x1]
  432115:	push   rax
  432116:	add    BYTE PTR [rax],al
  432118:	add    DWORD PTR [rax],ecx
  43211a:	add    eax,0x4a20800
  43211f:	xor    BYTE PTR [rbx],al
  432121:	(bad)  
  432122:	add    dh,BYTE PTR [rax+0x1]
  432125:	push   rax
  432126:	add    BYTE PTR [rax],al
  432128:	add    DWORD PTR [rax],edx
  43212a:	or     DWORD PTR [rax],eax
  43212c:	adc    BYTE PTR [rdx+0x600b300c],al
  432132:	or     dh,BYTE PTR [rax+0x9]
  432135:	push   rax
  432136:	or     al,al
  432138:	(bad)  
  432139:	rol    BYTE PTR [rax+riz*8],1
  43213c:	add    dh,al
  43213e:	add    BYTE PTR [rax],al
  432140:	add    DWORD PTR [rax],ecx
  432142:	add    eax,0x4820800
  432147:	xor    BYTE PTR [rbx],al
  432149:	(bad)  
  43214a:	add    dh,BYTE PTR [rax+0x1]
  43214d:	push   rax
  43214e:	add    BYTE PTR [rax],al
  432150:	add    DWORD PTR [rax],eax
  432152:	add    BYTE PTR [rax],al
  432154:	add    DWORD PTR [rax],eax
  432156:	add    BYTE PTR [rax],al
  432158:	add    DWORD PTR [rax],eax
  43215a:	add    BYTE PTR [rax],al
  43215c:	add    DWORD PTR [rax],eax
  43215e:	add    BYTE PTR [rax],al
  432160:	add    DWORD PTR [rip+0x32050002],eax        # 0x32482168
  432166:	add    DWORD PTR [rax],esi
  432168:	add    DWORD PTR [rcx+rax*1],eax
  43216b:	add    BYTE PTR [rdx+rax*2],al
  43216e:	add    BYTE PTR [rax],al
  432170:	add    DWORD PTR [rax],eax
  432172:	add    BYTE PTR [rax],al
  432174:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000433000 <.bss>:
	...

Disassembly of section .idata:

0000000000436000 <.idata>:
  436000:	mov    WORD PTR [rax+0x3],fs
	...
  43600b:	add    BYTE PTR [rax-0x6e],dl
  43600e:	add    eax,DWORD PTR [rax]
  436010:	lods   al,BYTE PTR ds:[rsi]
  436011:	push   0x3
  436013:	add    BYTE PTR [riz*2+0x3],dh
  43601a:	add    BYTE PTR [rax],al
  43601c:	add    BYTE PTR [rax],al
  43601e:	add    BYTE PTR [rax],al
  436020:	add    al,0x93
  436022:	add    eax,DWORD PTR [rax]
  436024:	push   rsp
  436025:	outs   dx,DWORD PTR ds:[rsi]
  436026:	add    eax,DWORD PTR [rax]
  436028:	jl     0x436090
  43602a:	add    eax,DWORD PTR [rax]
	...
  436034:	mov    BYTE PTR [rbx+rax*1+0x3709c00],dl
  43603b:	add    BYTE PTR [rcx+rbp*2+0x3],ch
	...
  436047:	add    BYTE PTR [rax-0x73fffc6c],ah
  43604d:	jae    0x436052
  43604f:	add    BYTE PTR [rcx+rbp*2+0x3],cl
  436056:	add    BYTE PTR [rax],al
  436058:	add    BYTE PTR [rax],al
  43605a:	add    BYTE PTR [rax],al
  43605c:	enter  0x394,0x0
  436060:	lods   al,BYTE PTR ds:[rsi]
  436061:	jae    0x436066
  436063:	add    BYTE PTR [rcx+rbp*2+0x3],bh
  43606a:	add    BYTE PTR [rax],al
  43606c:	add    BYTE PTR [rax],al
  43606e:	add    BYTE PTR [rax],al
  436070:	xchg   rbp,rax
  436072:	add    eax,DWORD PTR [rax]
  436074:	fdiv   QWORD PTR [rbx+0x3]
	...
  43608b:	add    ah,cl
  43608d:	je     0x436092
  43608f:	add    BYTE PTR [rax],al
  436091:	add    BYTE PTR [rax],al
  436093:	add    al,ah
  436095:	je     0x43609a
  436097:	add    BYTE PTR [rax],al
  436099:	add    BYTE PTR [rax],al
  43609b:	add    al,bh
  43609d:	je     0x4360a2
  43609f:	add    BYTE PTR [rax],al
  4360a1:	add    BYTE PTR [rax],al
  4360a3:	add    BYTE PTR [rsi*2+0x3],cl
  4360aa:	add    BYTE PTR [rax],al
  4360ac:	sub    al,0x75
  4360ae:	add    eax,DWORD PTR [rax]
  4360b0:	add    BYTE PTR [rax],al
  4360b2:	add    BYTE PTR [rax],al
  4360b4:	push   rax
  4360b5:	jne    0x4360ba
  4360b7:	add    BYTE PTR [rax],al
  4360b9:	add    BYTE PTR [rax],al
  4360bb:	add    BYTE PTR [rbp+rsi*2+0x3],bh
  4360bf:	add    BYTE PTR [rax],al
  4360c1:	add    BYTE PTR [rax],al
  4360c3:	add    BYTE PTR [rax+0x375],ch
  4360c9:	add    BYTE PTR [rax],al
  4360cb:	add    al,al
  4360cd:	jne    0x4360d2
  4360cf:	add    BYTE PTR [rax],al
  4360d1:	add    BYTE PTR [rax],al
  4360d3:	add    al,dl
  4360d5:	jne    0x4360da
  4360d7:	add    BYTE PTR [rax],al
  4360d9:	add    BYTE PTR [rax],al
  4360db:	add    ah,bh
  4360dd:	jne    0x4360e2
  4360df:	add    BYTE PTR [rax],al
  4360e1:	add    BYTE PTR [rax],al
  4360e3:	add    BYTE PTR [rsi+rsi*2],ch
  4360e6:	add    eax,DWORD PTR [rax]
  4360e8:	add    BYTE PTR [rax],al
  4360ea:	add    BYTE PTR [rax],al
  4360ec:	rex.WR jbe 0x4360f2
  4360ef:	add    BYTE PTR [rax],al
  4360f1:	add    BYTE PTR [rax],al
  4360f3:	add    BYTE PTR [rsi+rsi*2+0x3],ch
  4360f7:	add    BYTE PTR [rax],al
  4360f9:	add    BYTE PTR [rax],al
  4360fb:	add    BYTE PTR [rsi+rsi*2+0x3],dl
  436102:	add    BYTE PTR [rax],al
  436104:	enter  0x376,0x0
  436108:	add    BYTE PTR [rax],al
  43610a:	add    BYTE PTR [rax],al
  43610c:	hlt    
  43610d:	jbe    0x436112
  43610f:	add    BYTE PTR [rax],al
  436111:	add    BYTE PTR [rax],al
  436113:	add    BYTE PTR [rax],ah
  436115:	ja     0x43611a
  436117:	add    BYTE PTR [rax],al
  436119:	add    BYTE PTR [rax],al
  43611b:	add    BYTE PTR [rax+0x77],dl
  43611e:	add    eax,DWORD PTR [rax]
  436120:	add    BYTE PTR [rax],al
  436122:	add    BYTE PTR [rax],al
  436124:	jl     0x43619d
  436126:	add    eax,DWORD PTR [rax]
  436128:	add    BYTE PTR [rax],al
  43612a:	add    BYTE PTR [rax],al
  43612c:	test   al,0x77
  43612e:	add    eax,DWORD PTR [rax]
  436130:	add    BYTE PTR [rax],al
  436132:	add    BYTE PTR [rax],al
  436134:	shl    BYTE PTR [rdi+0x3],1
  436137:	add    BYTE PTR [rax],al
  436139:	add    BYTE PTR [rax],al
  43613b:	add    al,bh
  43613d:	ja     0x436142
  43613f:	add    BYTE PTR [rax],al
  436141:	add    BYTE PTR [rax],al
  436143:	add    BYTE PTR [rax+rdi*2],ah
  436146:	add    eax,DWORD PTR [rax]
  436148:	add    BYTE PTR [rax],al
  43614a:	add    BYTE PTR [rax],al
  43614c:	rex.R js 0x436152
  43614f:	add    BYTE PTR [rax],al
  436151:	add    BYTE PTR [rax],al
  436153:	add    BYTE PTR [rax+0x78],ch
  436156:	add    eax,DWORD PTR [rax]
  436158:	add    BYTE PTR [rax],al
  43615a:	add    BYTE PTR [rax],al
  43615c:	mov    BYTE PTR [rax+0x3],bh
  43615f:	add    BYTE PTR [rax],al
  436161:	add    BYTE PTR [rax],al
  436163:	add    BYTE PTR [rax+0x378],bh
  436169:	add    BYTE PTR [rax],al
  43616b:	add    ah,bl
  43616d:	js     0x436172
  43616f:	add    BYTE PTR [rax],al
  436171:	add    BYTE PTR [rax],al
  436173:	add    al,dh
  436175:	js     0x43617a
  436177:	add    BYTE PTR [rax],al
  436179:	add    BYTE PTR [rax],al
  43617b:	add    BYTE PTR [rcx+rdi*2],cl
  43617e:	add    eax,DWORD PTR [rax]
  436180:	add    BYTE PTR [rax],al
  436182:	add    BYTE PTR [rax],al
  436184:	and    al,0x79
  436186:	add    eax,DWORD PTR [rax]
  436188:	add    BYTE PTR [rax],al
  43618a:	add    BYTE PTR [rax],al
  43618c:	rex.R jns 0x436192
  43618f:	add    BYTE PTR [rax],al
  436191:	add    BYTE PTR [rax],al
  436193:	add    BYTE PTR [rax+0x79],ah
  436196:	add    eax,DWORD PTR [rax]
  436198:	add    BYTE PTR [rax],al
  43619a:	add    BYTE PTR [rax],al
  43619c:	jl     0x436217
  43619e:	add    eax,DWORD PTR [rax]
  4361a0:	add    BYTE PTR [rax],al
  4361a2:	add    BYTE PTR [rax],al
  4361a4:	pushf  
  4361a5:	jns    0x4361aa
  4361a7:	add    BYTE PTR [rax],al
  4361a9:	add    BYTE PTR [rax],al
  4361ab:	add    BYTE PTR [rax+0x379],bh
  4361b1:	add    BYTE PTR [rax],al
  4361b3:	add    ah,dl
  4361b5:	jns    0x4361ba
  4361b7:	add    BYTE PTR [rax],al
  4361b9:	add    BYTE PTR [rax],al
  4361bb:	add    al,ch
  4361bd:	jns    0x4361c2
  4361bf:	add    BYTE PTR [rax],al
  4361c1:	add    BYTE PTR [rax],al
  4361c3:	add    BYTE PTR [rax],cl
  4361c5:	jp     0x4361ca
  4361c7:	add    BYTE PTR [rax],al
  4361c9:	add    BYTE PTR [rax],al
  4361cb:	add    BYTE PTR [rdx+rdi*2],ch
  4361ce:	add    eax,DWORD PTR [rax]
  4361d0:	add    BYTE PTR [rax],al
  4361d2:	add    BYTE PTR [rax],al
  4361d4:	rex.WR jp 0x4361da
  4361d7:	add    BYTE PTR [rax],al
  4361d9:	add    BYTE PTR [rax],al
  4361db:	add    BYTE PTR [rdx+rdi*2+0x3],bl
  4361df:	add    BYTE PTR [rax],al
  4361e1:	add    BYTE PTR [rax],al
  4361e3:	add    BYTE PTR [rdx+rdi*2+0x3],dh
  4361e7:	add    BYTE PTR [rax],al
  4361e9:	add    BYTE PTR [rax],al
  4361eb:	add    BYTE PTR [rax+0x37a],bl
  4361f1:	add    BYTE PTR [rax],al
  4361f3:	add    BYTE PTR [rdx+rdi*2+0x3],dh
  4361fa:	add    BYTE PTR [rax],al
  4361fc:	sar    BYTE PTR [rdx+0x3],1
  4361ff:	add    BYTE PTR [rax],al
  436201:	add    BYTE PTR [rax],al
  436203:	add    ah,ch
  436205:	jp     0x43620a
  436207:	add    BYTE PTR [rax],al
  436209:	add    BYTE PTR [rax],al
  43620b:	add    BYTE PTR [rbx+rdi*2],cl
  43620e:	add    eax,DWORD PTR [rax]
  436210:	add    BYTE PTR [rax],al
  436212:	add    BYTE PTR [rax],al
  436214:	sub    al,0x7b
  436216:	add    eax,DWORD PTR [rax]
  436218:	add    BYTE PTR [rax],al
  43621a:	add    BYTE PTR [rax],al
  43621c:	rex.WR jnp 0x436222
  43621f:	add    BYTE PTR [rax],al
  436221:	add    BYTE PTR [rax],al
  436223:	add    BYTE PTR [rbx+rdi*2+0x3],ch
  436227:	add    BYTE PTR [rax],al
  436229:	add    BYTE PTR [rax],al
  43622b:	add    BYTE PTR [rbx+rdi*2+0x3],al
  436232:	add    BYTE PTR [rax],al
  436234:	movabs al,ds:0xb80000000000037b
  43623d:	jnp    0x436242
  43623f:	add    BYTE PTR [rax],al
  436241:	add    BYTE PTR [rax],al
  436243:	add    ah,dl
  436245:	jnp    0x43624a
  436247:	add    BYTE PTR [rax],al
  436249:	add    BYTE PTR [rax],al
  43624b:	add    al,dh
  43624d:	jnp    0x436252
  43624f:	add    BYTE PTR [rax],al
  436251:	add    BYTE PTR [rax],al
  436253:	add    BYTE PTR [rsp+rdi*2],cl
  436256:	add    eax,DWORD PTR [rax]
  436258:	add    BYTE PTR [rax],al
  43625a:	add    BYTE PTR [rax],al
  43625c:	and    al,0x7c
  43625e:	add    eax,DWORD PTR [rax]
  436260:	add    BYTE PTR [rax],al
  436262:	add    BYTE PTR [rax],al
  436264:	cmp    al,0x7c
  436266:	add    eax,DWORD PTR [rax]
  436268:	add    BYTE PTR [rax],al
  43626a:	add    BYTE PTR [rax],al
  43626c:	pop    rax
  43626d:	jl     0x436272
  43626f:	add    BYTE PTR [rax],al
  436271:	add    BYTE PTR [rax],al
  436273:	add    BYTE PTR [rsp+rdi*2+0x3],dh
  436277:	add    BYTE PTR [rax],al
  436279:	add    BYTE PTR [rax],al
  43627b:	add    BYTE PTR [rsp+rdi*2+0x3],cl
  436282:	add    BYTE PTR [rax],al
  436284:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436285:	jl     0x43628a
  436287:	add    BYTE PTR [rax],al
  436289:	add    BYTE PTR [rax],al
  43628b:	add    BYTE PTR [rsp+rdi*2+0x3],dh
  436292:	add    BYTE PTR [rax],al
  436294:	int3   
  436295:	jl     0x43629a
  436297:	add    BYTE PTR [rax],al
  436299:	add    BYTE PTR [rax],al
  43629b:	add    ah,dh
  43629d:	jl     0x4362a2
  43629f:	add    BYTE PTR [rax],al
  4362a1:	add    BYTE PTR [rax],al
  4362a3:	add    BYTE PTR [rax],bl
  4362a5:	jge    0x4362aa
  4362a7:	add    BYTE PTR [rax],al
  4362a9:	add    BYTE PTR [rax],al
  4362ab:	add    BYTE PTR [rax],bh
  4362ad:	jge    0x4362b2
  4362af:	add    BYTE PTR [rax],al
  4362b1:	add    BYTE PTR [rax],al
  4362b3:	add    BYTE PTR [rbp+rdi*2+0x3],cl
  4362b7:	add    BYTE PTR [rax],al
  4362b9:	add    BYTE PTR [rax],al
  4362bb:	add    BYTE PTR [rax+0x7d],bh
  4362be:	add    eax,DWORD PTR [rax]
  4362c0:	add    BYTE PTR [rax],al
  4362c2:	add    BYTE PTR [rax],al
  4362c4:	xchg   esp,eax
  4362c5:	jge    0x4362ca
  4362c7:	add    BYTE PTR [rax],al
  4362c9:	add    BYTE PTR [rax],al
  4362cb:	add    BYTE PTR [rbp+rdi*2+0x3],ch
  4362d2:	add    BYTE PTR [rax],al
  4362d4:	(bad)  
  4362d5:	jge    0x4362da
  4362d7:	add    BYTE PTR [rax],al
  4362d9:	add    BYTE PTR [rax],al
  4362db:	add    ah,dl
  4362dd:	jge    0x4362e2
  4362df:	add    BYTE PTR [rax],al
  4362e1:	add    BYTE PTR [rax],al
  4362e3:	add    ah,ch
  4362e5:	jge    0x4362ea
  4362e7:	add    BYTE PTR [rax],al
  4362e9:	add    BYTE PTR [rax],al
  4362eb:	add    ah,bh
  4362ed:	jge    0x4362f2
  4362ef:	add    BYTE PTR [rax],al
  4362f1:	add    BYTE PTR [rax],al
  4362f3:	add    BYTE PTR [rsi+rdi*2],dl
  4362f6:	add    eax,DWORD PTR [rax]
  4362f8:	add    BYTE PTR [rax],al
  4362fa:	add    BYTE PTR [rax],al
  4362fc:	sub    BYTE PTR [rsi+0x3],bh
  4362ff:	add    BYTE PTR [rax],al
  436301:	add    BYTE PTR [rax],al
  436303:	add    BYTE PTR [rsi+rdi*2],bh
  436306:	add    eax,DWORD PTR [rax]
  436308:	add    BYTE PTR [rax],al
  43630a:	add    BYTE PTR [rax],al
  43630c:	push   rsp
  43630d:	jle    0x436312
  43630f:	add    BYTE PTR [rax],al
  436311:	add    BYTE PTR [rax],al
  436313:	add    BYTE PTR [rax+0x7e],ch
  436316:	add    eax,DWORD PTR [rax]
  436318:	add    BYTE PTR [rax],al
  43631a:	add    BYTE PTR [rax],al
  43631c:	js     0x43639c
  43631e:	add    eax,DWORD PTR [rax]
  436320:	add    BYTE PTR [rax],al
  436322:	add    BYTE PTR [rax],al
  436324:	movabs al,ds:0xbc0000000000037e
  43632d:	jle    0x436332
  43632f:	add    BYTE PTR [rax],al
  436331:	add    BYTE PTR [rax],al
  436333:	add    al,bl
  436335:	jle    0x43633a
  436337:	add    BYTE PTR [rax],al
  436339:	add    BYTE PTR [rax],al
  43633b:	add    ah,dh
  43633d:	jle    0x436342
  43633f:	add    BYTE PTR [rax],al
  436341:	add    BYTE PTR [rax],al
  436343:	add    BYTE PTR [rax],dl
  436345:	jg     0x43634a
  436347:	add    BYTE PTR [rax],al
  436349:	add    BYTE PTR [rax],al
  43634b:	add    BYTE PTR [rdi+rdi*2],ch
  43634e:	add    eax,DWORD PTR [rax]
  436350:	add    BYTE PTR [rax],al
  436352:	add    BYTE PTR [rax],al
  436354:	rex.WR jg 0x43635a
  436357:	add    BYTE PTR [rax],al
  436359:	add    BYTE PTR [rax],al
  43635b:	add    BYTE PTR [rax+0x7f],ah
  43635e:	add    eax,DWORD PTR [rax]
  436360:	add    BYTE PTR [rax],al
  436362:	add    BYTE PTR [rax],al
  436364:	mov    BYTE PTR [rdi+0x3],bh
  436367:	add    BYTE PTR [rax],al
  436369:	add    BYTE PTR [rax],al
  43636b:	add    BYTE PTR [rdi+rdi*2+0x3],ch
  436372:	add    BYTE PTR [rax],al
  436374:	sar    BYTE PTR [rdi+0x3],1
  436377:	add    BYTE PTR [rax],al
  436379:	add    BYTE PTR [rax],al
  43637b:	add    ah,bh
  43637d:	jg     0x436382
  43637f:	add    BYTE PTR [rax],al
  436381:	add    BYTE PTR [rax],al
  436383:	add    BYTE PTR [rax+rax*4],dl
  436386:	add    eax,DWORD PTR [rax]
  436388:	add    BYTE PTR [rax],al
  43638a:	add    BYTE PTR [rax],al
  43638c:	xor    al,0x80
  43638e:	add    eax,DWORD PTR [rax]
  436390:	add    BYTE PTR [rax],al
  436392:	add    BYTE PTR [rax],al
  436394:	push   rsp
  436395:	add    BYTE PTR [rbx],0x0
  436398:	add    BYTE PTR [rax],al
  43639a:	add    BYTE PTR [rax],al
  43639c:	jo     0x43631e
  43639e:	add    eax,DWORD PTR [rax]
  4363a0:	add    BYTE PTR [rax],al
  4363a2:	add    BYTE PTR [rax],al
  4363a4:	mov    WORD PTR [rax+0x3],es
  4363aa:	add    BYTE PTR [rax],al
  4363ac:	lods   al,BYTE PTR ds:[rsi]
  4363ad:	add    BYTE PTR [rbx],0x0
  4363b0:	add    BYTE PTR [rax],al
  4363b2:	add    BYTE PTR [rax],al
  4363b4:	(bad)  
  4363b5:	add    BYTE PTR [rbx],0x0
  4363b8:	add    BYTE PTR [rax],al
  4363ba:	add    BYTE PTR [rax],al
  4363bc:	lock add BYTE PTR [rbx],0x0
  4363c0:	add    BYTE PTR [rax],al
  4363c2:	add    BYTE PTR [rax],al
  4363c4:	adc    BYTE PTR [rcx+0x3],al
  4363ca:	add    BYTE PTR [rax],al
  4363cc:	xor    al,0x81
  4363ce:	add    eax,DWORD PTR [rax]
  4363d0:	add    BYTE PTR [rax],al
  4363d2:	add    BYTE PTR [rax],al
  4363d4:	(bad)  
  4363d5:	add    DWORD PTR [rbx],0x0
  4363db:	add    BYTE PTR [rcx+rax*4+0x3],cl
  4363e2:	add    BYTE PTR [rax],al
  4363e4:	mov    ah,0x81
  4363e6:	add    eax,DWORD PTR [rax]
  4363e8:	add    BYTE PTR [rax],al
  4363ea:	add    BYTE PTR [rax],al
  4363ec:	int3   
  4363ed:	add    DWORD PTR [rbx],0x0
  4363f3:	add    al,ch
  4363f5:	add    DWORD PTR [rbx],0x0
  4363fb:	add    BYTE PTR [rax],al
  4363fd:	(bad)  
  4363fe:	add    eax,DWORD PTR [rax]
  436400:	add    BYTE PTR [rax],al
  436402:	add    BYTE PTR [rax],al
  436404:	sbb    al,0x82
  436406:	add    eax,DWORD PTR [rax]
  436408:	add    BYTE PTR [rax],al
  43640a:	add    BYTE PTR [rax],al
  43640c:	cmp    BYTE PTR [rdx+0x3],al
  436412:	add    BYTE PTR [rax],al
  436414:	push   rax
  436415:	(bad)  
  436416:	add    eax,DWORD PTR [rax]
  436418:	add    BYTE PTR [rax],al
  43641a:	add    BYTE PTR [rax],al
  43641c:	je     0x4363a0
  43641e:	add    eax,DWORD PTR [rax]
  436420:	add    BYTE PTR [rax],al
  436422:	add    BYTE PTR [rax],al
  436424:	xchg   esp,eax
  436425:	(bad)  
  436426:	add    eax,DWORD PTR [rax]
  436428:	add    BYTE PTR [rax],al
  43642a:	add    BYTE PTR [rax],al
  43642c:	mov    al,0x82
  43642e:	add    eax,DWORD PTR [rax]
  436430:	add    BYTE PTR [rax],al
  436432:	add    BYTE PTR [rax],al
  436434:	(bad)  
  436435:	(bad)  
  436436:	add    eax,DWORD PTR [rax]
  436438:	add    BYTE PTR [rax],al
  43643a:	add    BYTE PTR [rax],al
  43643c:	lock (bad) 
  43643e:	add    eax,DWORD PTR [rax]
  436440:	add    BYTE PTR [rax],al
  436442:	add    BYTE PTR [rax],al
  436444:	sbb    al,0x83
  436446:	add    eax,DWORD PTR [rax]
  436448:	add    BYTE PTR [rax],al
  43644a:	add    BYTE PTR [rax],al
  43644c:	cmp    BYTE PTR [rbx+0x3],al
  436452:	add    BYTE PTR [rax],al
  436454:	push   rax
  436455:	add    DWORD PTR [rbx],0x0
  436458:	add    BYTE PTR [rax],al
  43645a:	add    BYTE PTR [rax],al
  43645c:	ins    BYTE PTR es:[rdi],dx
  43645d:	add    DWORD PTR [rbx],0x0
  436460:	add    BYTE PTR [rax],al
  436462:	add    BYTE PTR [rax],al
  436464:	mov    BYTE PTR [rbx+0x3],al
  43646a:	add    BYTE PTR [rax],al
  43646c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43646d:	add    DWORD PTR [rbx],0x0
  436470:	add    BYTE PTR [rax],al
  436472:	add    BYTE PTR [rax],al
  436474:	int3   
  436475:	add    DWORD PTR [rbx],0x0
  436478:	add    BYTE PTR [rax],al
  43647a:	add    BYTE PTR [rax],al
  43647c:	hlt    
  43647d:	add    DWORD PTR [rbx],0x0
  436480:	add    BYTE PTR [rax],al
  436482:	add    BYTE PTR [rax],al
  436484:	adc    BYTE PTR [rbx+rax*1+0x0],al
  43648b:	add    BYTE PTR [rsp+rax*4],dh
  43648e:	add    eax,DWORD PTR [rax]
  436490:	add    BYTE PTR [rax],al
  436492:	add    BYTE PTR [rax],al
  436494:	rex.WR test BYTE PTR [rbx],r8b
  436497:	add    BYTE PTR [rax],al
  436499:	add    BYTE PTR [rax],al
  43649b:	add    BYTE PTR [rax-0x7c],ah
  43649e:	add    eax,DWORD PTR [rax]
  4364a0:	add    BYTE PTR [rax],al
  4364a2:	add    BYTE PTR [rax],al
  4364a4:	mov    WORD PTR [rbx+rax*1+0x0],es
  4364ab:	add    BYTE PTR [rax+0x384],dh
  4364b1:	add    BYTE PTR [rax],al
  4364b3:	add    ah,bl
  4364b5:	test   BYTE PTR [rbx],al
  4364b7:	add    BYTE PTR [rax],al
  4364b9:	add    BYTE PTR [rax],al
  4364bb:	add    ah,bh
  4364bd:	test   BYTE PTR [rbx],al
  4364bf:	add    BYTE PTR [rax],al
  4364c1:	add    BYTE PTR [rax],al
  4364c3:	add    BYTE PTR [rax],ah
  4364c5:	test   DWORD PTR [rbx],eax
  4364c7:	add    BYTE PTR [rax],al
  4364c9:	add    BYTE PTR [rax],al
  4364cb:	add    BYTE PTR [rbp+rax*4+0x3],al
  4364cf:	add    BYTE PTR [rax],al
  4364d1:	add    BYTE PTR [rax],al
  4364d3:	add    BYTE PTR [rax-0x7b],bl
  4364d6:	add    eax,DWORD PTR [rax]
  4364d8:	add    BYTE PTR [rax],al
  4364da:	add    BYTE PTR [rax],al
  4364dc:	js     0x436463
  4364de:	add    eax,DWORD PTR [rax]
  4364e0:	add    BYTE PTR [rax],al
  4364e2:	add    BYTE PTR [rax],al
  4364e4:	xchg   esp,eax
  4364e5:	test   DWORD PTR [rbx],eax
  4364e7:	add    BYTE PTR [rax],al
  4364e9:	add    BYTE PTR [rax],al
  4364eb:	add    BYTE PTR [rax+0x385],dh
  4364f1:	add    BYTE PTR [rax],al
  4364f3:	add    al,bl
  4364f5:	test   DWORD PTR [rbx],eax
  4364f7:	add    BYTE PTR [rax],al
  4364f9:	add    BYTE PTR [rax],al
  4364fb:	add    BYTE PTR [rax],cl
  4364fd:	xchg   BYTE PTR [rbx],al
  4364ff:	add    BYTE PTR [rax],al
  436501:	add    BYTE PTR [rax],al
  436503:	add    BYTE PTR [rax],dh
  436505:	xchg   BYTE PTR [rbx],al
  436507:	add    BYTE PTR [rax],al
  436509:	add    BYTE PTR [rax],al
  43650b:	add    BYTE PTR [rsi+rax*4+0x3],cl
  43650f:	add    BYTE PTR [rax],al
  436511:	add    BYTE PTR [rax],al
  436513:	add    BYTE PTR [rax-0x7a],ch
  436516:	add    eax,DWORD PTR [rax]
  436518:	add    BYTE PTR [rax],al
  43651a:	add    BYTE PTR [rax],al
  43651c:	test   BYTE PTR [rsi+0x3],al
  436522:	add    BYTE PTR [rax],al
  436524:	pushf  
  436525:	xchg   BYTE PTR [rbx],al
	...
  436533:	add    BYTE PTR [rsi+rax*4+0x3],dh
  43653a:	add    BYTE PTR [rax],al
  43653c:	(bad)  
  43653d:	xchg   BYTE PTR [rbx],al
  43653f:	add    BYTE PTR [rax],al
  436541:	add    BYTE PTR [rax],al
  436543:	add    ah,bl
  436545:	xchg   BYTE PTR [rbx],al
  436547:	add    BYTE PTR [rax],al
  436549:	add    BYTE PTR [rax],al
  43654b:	add    ah,dh
  43654d:	xchg   BYTE PTR [rbx],al
  43654f:	add    BYTE PTR [rax],al
  436551:	add    BYTE PTR [rax],al
  436553:	add    BYTE PTR [rsi],al
  436555:	xchg   DWORD PTR [rbx],eax
  436557:	add    BYTE PTR [rax],al
  436559:	add    BYTE PTR [rax],al
  43655b:	add    BYTE PTR [rax],bl
  43655d:	xchg   DWORD PTR [rbx],eax
  43655f:	add    BYTE PTR [rax],al
  436561:	add    BYTE PTR [rax],al
  436563:	add    BYTE PTR [rdi+rax*4],ch
  436566:	add    eax,DWORD PTR [rax]
  436568:	add    BYTE PTR [rax],al
  43656a:	add    BYTE PTR [rax],al
  43656c:	rex.X xchg DWORD PTR [rbx],eax
  43656f:	add    BYTE PTR [rax],al
  436571:	add    BYTE PTR [rax],al
  436573:	add    BYTE PTR [rax-0x79],bl
  436576:	add    eax,DWORD PTR [rax]
  436578:	add    BYTE PTR [rax],al
  43657a:	add    BYTE PTR [rax],al
  43657c:	outs   dx,BYTE PTR ds:[rsi]
  43657d:	xchg   DWORD PTR [rbx],eax
  43657f:	add    BYTE PTR [rax],al
  436581:	add    BYTE PTR [rax],al
  436583:	add    BYTE PTR [rdi+rax*4+0x3],bh
  436587:	add    BYTE PTR [rax],al
  436589:	add    BYTE PTR [rax],al
  43658b:	add    BYTE PTR [rdi+rax*4+0x3],cl
  436592:	add    BYTE PTR [rax],al
  436594:	movabs ds:0xb600000000000387,al
  43659d:	xchg   DWORD PTR [rbx],eax
  43659f:	add    BYTE PTR [rax],al
  4365a1:	add    BYTE PTR [rax],al
  4365a3:	add    dl,cl
  4365a5:	xchg   DWORD PTR [rbx],eax
  4365a7:	add    BYTE PTR [rax],al
  4365a9:	add    BYTE PTR [rax],al
  4365ab:	add    dl,ch
  4365ad:	xchg   DWORD PTR [rbx],eax
  4365af:	add    BYTE PTR [rax],al
  4365b1:	add    BYTE PTR [rax],al
  4365b3:	add    ah,bh
  4365b5:	xchg   DWORD PTR [rbx],eax
  4365b7:	add    BYTE PTR [rax],al
  4365b9:	add    BYTE PTR [rax],al
  4365bb:	add    BYTE PTR [rsi],cl
  4365bd:	mov    BYTE PTR [rbx],al
  4365bf:	add    BYTE PTR [rax],al
  4365c1:	add    BYTE PTR [rax],al
  4365c3:	add    BYTE PTR [rax],ch
  4365c5:	mov    BYTE PTR [rbx],al
  4365c7:	add    BYTE PTR [rax],al
  4365c9:	add    BYTE PTR [rax],al
  4365cb:	add    BYTE PTR [rax],bh
  4365cd:	mov    BYTE PTR [rbx],al
  4365cf:	add    BYTE PTR [rax],al
  4365d1:	add    BYTE PTR [rax],al
  4365d3:	add    BYTE PTR [rax+rcx*4+0x3],dl
  4365d7:	add    BYTE PTR [rax],al
  4365d9:	add    BYTE PTR [rax],al
  4365db:	add    BYTE PTR [rax-0x78],ch
  4365de:	add    eax,DWORD PTR [rax]
  4365e0:	add    BYTE PTR [rax],al
  4365e2:	add    BYTE PTR [rax],al
  4365e4:	or     BYTE PTR [rax+0x3],0x0
  4365eb:	add    BYTE PTR [rsi+0x388],dl
  4365f1:	add    BYTE PTR [rax],al
  4365f3:	add    BYTE PTR [rdx+0x388],ch
  4365f9:	add    BYTE PTR [rax],al
  4365fb:	add    BYTE PTR [rdx+0x388],bh
  436601:	add    BYTE PTR [rax],al
  436603:	add    ah,dl
  436605:	mov    BYTE PTR [rbx],al
  436607:	add    BYTE PTR [rax],al
  436609:	add    BYTE PTR [rax],al
  43660b:	add    dl,ch
  43660d:	mov    BYTE PTR [rbx],al
  43660f:	add    BYTE PTR [rax],al
  436611:	add    BYTE PTR [rax],al
  436613:	add    dh,bh
  436615:	mov    BYTE PTR [rbx],al
  436617:	add    BYTE PTR [rax],al
  436619:	add    BYTE PTR [rax],al
  43661b:	add    BYTE PTR [rax],bl
  43661d:	mov    DWORD PTR [rbx],eax
  43661f:	add    BYTE PTR [rax],al
  436621:	add    BYTE PTR [rax],al
  436623:	add    BYTE PTR [rcx+rcx*4],ch
  436626:	add    eax,DWORD PTR [rax]
  436628:	add    BYTE PTR [rax],al
  43662a:	add    BYTE PTR [rax],al
  43662c:	rex.WX mov QWORD PTR [rbx],rax
  43662f:	add    BYTE PTR [rax],al
  436631:	add    BYTE PTR [rax],al
  436633:	add    BYTE PTR [rdx-0x77],dl
  436636:	add    eax,DWORD PTR [rax]
  436638:	add    BYTE PTR [rax],al
  43663a:	add    BYTE PTR [rax],al
  43663c:	pop    rsp
  43663d:	mov    DWORD PTR [rbx],eax
  43663f:	add    BYTE PTR [rax],al
  436641:	add    BYTE PTR [rax],al
  436643:	add    BYTE PTR [rax-0x77],dh
  436646:	add    eax,DWORD PTR [rax]
  436648:	add    BYTE PTR [rax],al
  43664a:	add    BYTE PTR [rax],al
  43664c:	jle    0x4365d7
  43664e:	add    eax,DWORD PTR [rax]
  436650:	add    BYTE PTR [rax],al
  436652:	add    BYTE PTR [rax],al
  436654:	(bad)  
  436655:	mov    DWORD PTR [rbx],eax
  436657:	add    BYTE PTR [rax],al
  436659:	add    BYTE PTR [rax],al
  43665b:	add    BYTE PTR [rcx+rcx*4+0x3],ch
  436662:	add    BYTE PTR [rax],al
  436664:	mov    esp,0x389
  436669:	add    BYTE PTR [rax],al
  43666b:	add    dl,dl
  43666d:	mov    DWORD PTR [rbx],eax
	...
  43667b:	add    al,ch
  43667d:	mov    DWORD PTR [rbx],eax
  43667f:	add    BYTE PTR [rax],al
  436681:	add    BYTE PTR [rax],al
  436683:	add    BYTE PTR [rax],al
  436685:	mov    al,BYTE PTR [rbx]
  436687:	add    BYTE PTR [rax],al
  436689:	add    BYTE PTR [rax],al
  43668b:	add    BYTE PTR [rsi],dl
  43668d:	mov    al,BYTE PTR [rbx]
  43668f:	add    BYTE PTR [rax],al
  436691:	add    BYTE PTR [rax],al
  436693:	add    BYTE PTR [rdx+rcx*4],ah
  436696:	add    eax,DWORD PTR [rax]
  436698:	add    BYTE PTR [rax],al
  43669a:	add    BYTE PTR [rax],al
  43669c:	xor    al,0x8a
  43669e:	add    eax,DWORD PTR [rax]
  4366a0:	add    BYTE PTR [rax],al
  4366a2:	add    BYTE PTR [rax],al
  4366a4:	mov    al,BYTE PTR [rbx]
  4366a7:	add    BYTE PTR [rax],al
  4366a9:	add    BYTE PTR [rax],al
  4366ab:	add    BYTE PTR [rsi-0x76],cl
  4366ae:	add    eax,DWORD PTR [rax]
  4366b0:	add    BYTE PTR [rax],al
  4366b2:	add    BYTE PTR [rax],al
  4366b4:	pop    rsi
  4366b5:	mov    al,BYTE PTR [rbx]
  4366b7:	add    BYTE PTR [rax],al
  4366b9:	add    BYTE PTR [rax],al
  4366bb:	add    BYTE PTR [rsi-0x76],ch
  4366be:	add    eax,DWORD PTR [rax]
  4366c0:	add    BYTE PTR [rax],al
  4366c2:	add    BYTE PTR [rax],al
  4366c4:	or     BYTE PTR [rdx+0x3],0x0
  4366cb:	add    BYTE PTR [rdx+rcx*4+0x3],dl
  4366d2:	add    BYTE PTR [rax],al
  4366d4:	sahf   
  4366d5:	mov    al,BYTE PTR [rbx]
  4366d7:	add    BYTE PTR [rax],al
  4366d9:	add    BYTE PTR [rax],al
  4366db:	add    BYTE PTR [rdx+rcx*4+0x3],ch
  4366e2:	add    BYTE PTR [rax],al
  4366e4:	mov    dh,0x8a
  4366e6:	add    eax,DWORD PTR [rax]
  4366e8:	add    BYTE PTR [rax],al
  4366ea:	add    BYTE PTR [rax],al
  4366ec:	ror    BYTE PTR [rdx+0x3],0x0
  4366f3:	add    ah,cl
  4366f5:	mov    al,BYTE PTR [rbx]
  4366f7:	add    BYTE PTR [rax],al
  4366f9:	add    BYTE PTR [rax],al
  4366fb:	add    dh,dl
  4366fd:	mov    al,BYTE PTR [rbx]
  4366ff:	add    BYTE PTR [rax],al
  436701:	add    BYTE PTR [rax],al
  436703:	add    dh,bl
  436705:	mov    al,BYTE PTR [rbx]
  436707:	add    BYTE PTR [rax],al
  436709:	add    BYTE PTR [rax],al
  43670b:	add    ah,ch
  43670d:	mov    al,BYTE PTR [rbx]
  43670f:	add    BYTE PTR [rax],al
  436711:	add    BYTE PTR [rax],al
  436713:	add    ah,bh
  436715:	mov    al,BYTE PTR [rbx]
  436717:	add    BYTE PTR [rax],al
  436719:	add    BYTE PTR [rax],al
  43671b:	add    BYTE PTR [rsi],al
  43671d:	mov    eax,DWORD PTR [rbx]
  43671f:	add    BYTE PTR [rax],al
  436721:	add    BYTE PTR [rax],al
  436723:	add    BYTE PTR [rdx],dl
  436725:	mov    eax,DWORD PTR [rbx]
  436727:	add    BYTE PTR [rax],al
  436729:	add    BYTE PTR [rax],al
  43672b:	add    BYTE PTR [rsi],bl
  43672d:	mov    eax,DWORD PTR [rbx]
  43672f:	add    BYTE PTR [rax],al
  436731:	add    BYTE PTR [rax],al
  436733:	add    BYTE PTR [rax],dh
  436735:	mov    eax,DWORD PTR [rbx]
  436737:	add    BYTE PTR [rax],al
  436739:	add    BYTE PTR [rax],al
  43673b:	add    BYTE PTR [rdx],bh
  43673d:	mov    eax,DWORD PTR [rbx]
  43673f:	add    BYTE PTR [rax],al
  436741:	add    BYTE PTR [rax],al
  436743:	add    BYTE PTR [rsi-0x75],al
  436746:	add    eax,DWORD PTR [rax]
  436748:	add    BYTE PTR [rax],al
  43674a:	add    BYTE PTR [rax],al
  43674c:	push   rsi
  43674d:	mov    eax,DWORD PTR [rbx]
  43674f:	add    BYTE PTR [rax],al
  436751:	add    BYTE PTR [rax],al
  436753:	add    BYTE PTR [rsi-0x75],bl
  436756:	add    eax,DWORD PTR [rax]
  436758:	add    BYTE PTR [rax],al
  43675a:	add    BYTE PTR [rax],al
  43675c:	push   0xffffffffffffff8b
  43675e:	add    eax,DWORD PTR [rax]
  436760:	add    BYTE PTR [rax],al
  436762:	add    BYTE PTR [rax],al
  436764:	je     0x4366f1
  436766:	add    eax,DWORD PTR [rax]
  436768:	add    BYTE PTR [rax],al
  43676a:	add    BYTE PTR [rax],al
  43676c:	xchg   BYTE PTR [rbx+0x3],cl
  436772:	add    BYTE PTR [rax],al
  436774:	xchg   esp,eax
  436775:	mov    eax,DWORD PTR [rbx]
  436777:	add    BYTE PTR [rax],al
  436779:	add    BYTE PTR [rax],al
  43677b:	add    BYTE PTR [rax+0x38b],ah
  436781:	add    BYTE PTR [rax],al
  436783:	add    BYTE PTR [rdx+0x38b],ch
  436789:	add    BYTE PTR [rax],al
  43678b:	add    BYTE PTR [rbx+rcx*4+0x3],dh
  436792:	add    BYTE PTR [rax],al
  436794:	mov    esp,0x38b
  436799:	add    BYTE PTR [rax],al
  43679b:	add    ah,al
  43679d:	mov    eax,DWORD PTR [rbx]
  43679f:	add    BYTE PTR [rax],al
  4367a1:	add    BYTE PTR [rax],al
  4367a3:	add    dh,cl
  4367a5:	mov    eax,DWORD PTR [rbx]
  4367a7:	add    BYTE PTR [rax],al
  4367a9:	add    BYTE PTR [rax],al
  4367ab:	add    dh,dl
  4367ad:	mov    eax,DWORD PTR [rbx]
  4367af:	add    BYTE PTR [rax],al
  4367b1:	add    BYTE PTR [rax],al
  4367b3:	add    dh,bl
  4367b5:	mov    eax,DWORD PTR [rbx]
  4367b7:	add    BYTE PTR [rax],al
  4367b9:	add    BYTE PTR [rax],al
  4367bb:	add    al,ch
  4367bd:	mov    eax,DWORD PTR [rbx]
  4367bf:	add    BYTE PTR [rax],al
  4367c1:	add    BYTE PTR [rax],al
  4367c3:	add    dl,dh
  4367c5:	mov    eax,DWORD PTR [rbx]
  4367c7:	add    BYTE PTR [rax],al
  4367c9:	add    BYTE PTR [rax],al
  4367cb:	add    ah,bh
  4367cd:	mov    eax,DWORD PTR [rbx]
  4367cf:	add    BYTE PTR [rax],al
  4367d1:	add    BYTE PTR [rax],al
  4367d3:	add    BYTE PTR [rsp+rcx*4],al
  4367d6:	add    eax,DWORD PTR [rax]
  4367d8:	add    BYTE PTR [rax],al
  4367da:	add    BYTE PTR [rax],al
  4367dc:	(bad)  
  4367dd:	mov    WORD PTR [rbx],es
  4367df:	add    BYTE PTR [rax],al
  4367e1:	add    BYTE PTR [rax],al
  4367e3:	add    BYTE PTR [rsi],dl
  4367e5:	mov    WORD PTR [rbx],es
  4367e7:	add    BYTE PTR [rax],al
  4367e9:	add    BYTE PTR [rax],al
  4367eb:	add    BYTE PTR [rsi],bl
  4367ed:	mov    WORD PTR [rbx],es
  4367ef:	add    BYTE PTR [rax],al
  4367f1:	add    BYTE PTR [rax],al
  4367f3:	add    BYTE PTR [rsi],ah
  4367f5:	mov    WORD PTR [rbx],es
  4367f7:	add    BYTE PTR [rax],al
  4367f9:	add    BYTE PTR [rax],al
  4367fb:	add    BYTE PTR [rsi],ch
  4367fd:	mov    WORD PTR [rbx],es
  4367ff:	add    BYTE PTR [rax],al
  436801:	add    BYTE PTR [rax],al
  436803:	add    BYTE PTR [rax],bh
  436805:	mov    WORD PTR [rbx],es
  436807:	add    BYTE PTR [rax],al
  436809:	add    BYTE PTR [rax],al
  43680b:	add    BYTE PTR [rsp+rcx*4+0x3],al
  43680f:	add    BYTE PTR [rax],al
  436811:	add    BYTE PTR [rax],al
  436813:	add    BYTE PTR [rsi-0x74],cl
  436816:	add    eax,DWORD PTR [rax]
  436818:	add    BYTE PTR [rax],al
  43681a:	add    BYTE PTR [rax],al
  43681c:	pop    rax
  43681d:	mov    WORD PTR [rbx],es
  43681f:	add    BYTE PTR [rax],al
  436821:	add    BYTE PTR [rax],al
  436823:	add    BYTE PTR [rdx-0x74],ah
  436826:	add    eax,DWORD PTR [rax]
  436828:	add    BYTE PTR [rax],al
  43682a:	add    BYTE PTR [rax],al
  43682c:	jo     0x4367ba
  43682e:	add    eax,DWORD PTR [rax]
  436830:	add    BYTE PTR [rax],al
  436832:	add    BYTE PTR [rax],al
  436834:	jp     0x4367c2
  436836:	add    eax,DWORD PTR [rax]
  436838:	add    BYTE PTR [rax],al
  43683a:	add    BYTE PTR [rax],al
  43683c:	test   BYTE PTR [rbx+rax*1+0x0],cl
  436843:	add    BYTE PTR [rsi+0x38c],cl
  436849:	add    BYTE PTR [rax],al
  43684b:	add    BYTE PTR [rax+0x38c],bl
  436851:	add    BYTE PTR [rax],al
  436853:	add    BYTE PTR [rdx+0x38c],ah
  436859:	add    BYTE PTR [rax],al
  43685b:	add    BYTE PTR [rsp+rcx*4+0x3],ch
  436862:	add    BYTE PTR [rax],al
  436864:	mov    ah,0x8c
  436866:	add    eax,DWORD PTR [rax]
  436868:	add    BYTE PTR [rax],al
  43686a:	add    BYTE PTR [rax],al
  43686c:	mov    esp,0x38c
  436871:	add    BYTE PTR [rax],al
  436873:	add    dh,al
  436875:	mov    WORD PTR [rbx],es
  436877:	add    BYTE PTR [rax],al
  436879:	add    BYTE PTR [rax],al
  43687b:	add    al,dl
  43687d:	mov    WORD PTR [rbx],es
  43687f:	add    BYTE PTR [rax],al
  436881:	add    BYTE PTR [rax],al
  436883:	add    dl,bl
  436885:	mov    WORD PTR [rbx],es
  436887:	add    BYTE PTR [rax],al
  436889:	add    BYTE PTR [rax],al
  43688b:	add    ah,ah
  43688d:	mov    WORD PTR [rbx],es
  43688f:	add    BYTE PTR [rax],al
  436891:	add    BYTE PTR [rax],al
  436893:	add    dh,ch
  436895:	mov    WORD PTR [rbx],es
  436897:	add    BYTE PTR [rax],al
  436899:	add    BYTE PTR [rax],al
  43689b:	add    dl,bh
  43689d:	mov    WORD PTR [rbx],es
  43689f:	add    BYTE PTR [rax],al
  4368a1:	add    BYTE PTR [rax],al
  4368a3:	add    BYTE PTR [rsi],al
  4368a5:	lea    eax,[rbx]
  4368a7:	add    BYTE PTR [rax],al
  4368a9:	add    BYTE PTR [rax],al
  4368ab:	add    BYTE PTR [rax],dl
  4368ad:	lea    eax,[rbx]
  4368af:	add    BYTE PTR [rax],al
  4368b1:	add    BYTE PTR [rax],al
  4368b3:	add    BYTE PTR [rdx],bl
  4368b5:	lea    eax,[rbx]
  4368b7:	add    BYTE PTR [rax],al
  4368b9:	add    BYTE PTR [rax],al
  4368bb:	add    BYTE PTR [rcx*4+0x3],ah
  4368c2:	add    BYTE PTR [rax],al
  4368c4:	lea    eax,cs:[rbx]
  4368c7:	add    BYTE PTR [rax],al
  4368c9:	add    BYTE PTR [rax],al
  4368cb:	add    BYTE PTR [rax],bh
  4368cd:	lea    eax,[rbx]
  4368cf:	add    BYTE PTR [rax],al
  4368d1:	add    BYTE PTR [rax],al
  4368d3:	add    BYTE PTR [rdx-0x73],al
  4368d6:	add    eax,DWORD PTR [rax]
  4368d8:	add    BYTE PTR [rax],al
  4368da:	add    BYTE PTR [rax],al
  4368dc:	lea    r8,[rbx]
  4368df:	add    BYTE PTR [rax],al
  4368e1:	add    BYTE PTR [rax],al
  4368e3:	add    BYTE PTR [rsi-0x73],dl
  4368e6:	add    eax,DWORD PTR [rax]
  4368e8:	add    BYTE PTR [rax],al
  4368ea:	add    BYTE PTR [rax],al
  4368ec:	(bad)  
  4368ed:	lea    eax,[rbx]
  4368ef:	add    BYTE PTR [rax],al
  4368f1:	add    BYTE PTR [rax],al
  4368f3:	add    BYTE PTR [rdx-0x73],ch
  4368f6:	add    eax,DWORD PTR [rax]
  4368f8:	add    BYTE PTR [rax],al
  4368fa:	add    BYTE PTR [rax],al
  4368fc:	jbe    0x43688b
  4368fe:	add    eax,DWORD PTR [rax]
  436900:	add    BYTE PTR [rax],al
  436902:	add    BYTE PTR [rax],al
  436904:	or     BYTE PTR [rbp+0x3],0x0
  43690b:	add    BYTE PTR [rdx+0x38d],cl
  436911:	add    BYTE PTR [rax],al
  436913:	add    BYTE PTR [rsi+0x38d],dl
  436919:	add    BYTE PTR [rax],al
  43691b:	add    BYTE PTR [rax+0x38d],ah
  436921:	add    BYTE PTR [rax],al
  436923:	add    BYTE PTR [rsi+0x38d],ch
  436929:	add    BYTE PTR [rax],al
  43692b:	add    BYTE PTR [rax+0x38d],bh
  436931:	add    BYTE PTR [rax],al
  436933:	add    dl,al
  436935:	lea    eax,[rbx]
  436937:	add    BYTE PTR [rax],al
  436939:	add    BYTE PTR [rax],al
  43693b:	add    ah,cl
  43693d:	lea    eax,[rbx]
  43693f:	add    BYTE PTR [rax],al
  436941:	add    BYTE PTR [rax],al
  436943:	add    ah,dl
  436945:	lea    eax,[rbx]
  436947:	add    BYTE PTR [rax],al
  436949:	add    BYTE PTR [rax],al
  43694b:	add    ah,bl
  43694d:	lea    eax,[rbx]
  43694f:	add    BYTE PTR [rax],al
  436951:	add    BYTE PTR [rax],al
  436953:	add    dh,ah
  436955:	lea    eax,[rbx]
  436957:	add    BYTE PTR [rax],al
  436959:	add    BYTE PTR [rax],al
  43695b:	add    al,dh
  43695d:	lea    eax,[rbx]
	...
  43696b:	add    ah,bh
  43696d:	lea    eax,[rbx]
  43696f:	add    BYTE PTR [rax],al
  436971:	add    BYTE PTR [rax],al
  436973:	add    BYTE PTR [rax],cl
  436975:	mov    es,WORD PTR [rbx]
  436977:	add    BYTE PTR [rax],al
  436979:	add    BYTE PTR [rax],al
  43697b:	add    BYTE PTR [rsi+rcx*4],dl
  43697e:	add    eax,DWORD PTR [rax]
	...
  43698c:	and    BYTE PTR [rsi+0x3],cl
  436992:	add    BYTE PTR [rax],al
  436994:	xor    al,0x8e
  436996:	add    eax,DWORD PTR [rax]
  436998:	add    BYTE PTR [rax],al
  43699a:	add    BYTE PTR [rax],al
  43699c:	rex.X mov es,WORD PTR [rbx]
  43699f:	add    BYTE PTR [rax],al
  4369a1:	add    BYTE PTR [rax],al
  4369a3:	add    BYTE PTR [rsi-0x72],bl
  4369a6:	add    eax,DWORD PTR [rax]
  4369a8:	add    BYTE PTR [rax],al
  4369aa:	add    BYTE PTR [rax],al
  4369ac:	outs   dx,BYTE PTR ds:[rsi]
  4369ad:	mov    es,WORD PTR [rbx]
	...
  4369bb:	add    BYTE PTR [rdx+0x38e],al
  4369c1:	add    BYTE PTR [rax],al
  4369c3:	add    BYTE PTR [rax+0x38e],dl
  4369c9:	add    BYTE PTR [rax],al
  4369cb:	add    BYTE PTR [rax+0x38e],ch
  4369d1:	add    BYTE PTR [rax],al
  4369d3:	add    BYTE PTR [rdx+0x38e],bh
  4369d9:	add    BYTE PTR [rax],al
  4369db:	add    ah,cl
  4369dd:	mov    es,WORD PTR [rbx]
  4369df:	add    BYTE PTR [rax],al
  4369e1:	add    BYTE PTR [rax],al
  4369e3:	add    dh,bl
  4369e5:	mov    es,WORD PTR [rbx]
  4369e7:	add    BYTE PTR [rax],al
  4369e9:	add    BYTE PTR [rax],al
  4369eb:	add    ah,ch
  4369ed:	mov    es,WORD PTR [rbx]
  4369ef:	add    BYTE PTR [rax],al
  4369f1:	add    BYTE PTR [rax],al
  4369f3:	add    dl,bh
  4369f5:	mov    es,WORD PTR [rbx]
  4369f7:	add    BYTE PTR [rax],al
  4369f9:	add    BYTE PTR [rax],al
  4369fb:	add    BYTE PTR [rdx],cl
  4369fd:	pop    QWORD PTR [rbx]
  4369ff:	add    BYTE PTR [rax],al
  436a01:	add    BYTE PTR [rax],al
  436a03:	add    BYTE PTR [rdi+rcx*4],dl
  436a06:	add    eax,DWORD PTR [rax]
  436a08:	add    BYTE PTR [rax],al
  436a0a:	add    BYTE PTR [rax],al
  436a0c:	sbb    al,0x8f
  436a0e:	add    eax,DWORD PTR [rax]
  436a10:	add    BYTE PTR [rax],al
  436a12:	add    BYTE PTR [rax],al
  436a14:	sub    cl,BYTE PTR [rdi+0x3]
  436a1a:	add    BYTE PTR [rax],al
  436a1c:	xor    al,0x8f
  436a1e:	add    eax,DWORD PTR [rax]
  436a20:	add    BYTE PTR [rax],al
  436a22:	add    BYTE PTR [rax],al
  436a24:	rex.R pop QWORD PTR [rbx]
  436a27:	add    BYTE PTR [rax],al
  436a29:	add    BYTE PTR [rax],al
  436a2b:	add    BYTE PTR [rdx-0x71],dl
  436a2e:	add    eax,DWORD PTR [rax]
  436a30:	add    BYTE PTR [rax],al
  436a32:	add    BYTE PTR [rax],al
  436a34:	(bad)  
  436a35:	pop    QWORD PTR [rbx]
  436a37:	add    BYTE PTR [rax],al
  436a39:	add    BYTE PTR [rax],al
  436a3b:	add    BYTE PTR [rsi-0x71],ch
  436a3e:	add    eax,DWORD PTR [rax]
  436a40:	add    BYTE PTR [rax],al
  436a42:	add    BYTE PTR [rax],al
  436a44:	jle    0x4369d5
  436a46:	add    eax,DWORD PTR [rax]
  436a48:	add    BYTE PTR [rax],al
  436a4a:	add    BYTE PTR [rax],al
  436a4c:	mov    cs,WORD PTR [rdi+0x3]
  436a52:	add    BYTE PTR [rax],al
  436a54:	xchg   esi,eax
  436a55:	pop    QWORD PTR [rbx]
  436a57:	add    BYTE PTR [rax],al
  436a59:	add    BYTE PTR [rax],al
  436a5b:	add    BYTE PTR [rdi+rcx*4+0x3],ah
  436a62:	add    BYTE PTR [rax],al
  436a64:	scas   al,BYTE PTR es:[rdi]
  436a65:	pop    QWORD PTR [rbx]
  436a67:	add    BYTE PTR [rax],al
  436a69:	add    BYTE PTR [rax],al
  436a6b:	add    BYTE PTR [rsi+0x38f],dh
  436a71:	add    BYTE PTR [rax],al
  436a73:	add    BYTE PTR [rsi+0x38f],bh
  436a79:	add    BYTE PTR [rax],al
  436a7b:	add    dl,cl
  436a7d:	pop    QWORD PTR [rbx]
  436a7f:	add    BYTE PTR [rax],al
  436a81:	add    BYTE PTR [rax],al
  436a83:	add    ah,dl
  436a85:	pop    QWORD PTR [rbx]
  436a87:	add    BYTE PTR [rax],al
  436a89:	add    BYTE PTR [rax],al
  436a8b:	add    ah,bl
  436a8d:	pop    QWORD PTR [rbx]
  436a8f:	add    BYTE PTR [rax],al
  436a91:	add    BYTE PTR [rax],al
  436a93:	add    dh,ah
  436a95:	pop    QWORD PTR [rbx]
  436a97:	add    BYTE PTR [rax],al
  436a99:	add    BYTE PTR [rax],al
  436a9b:	add    ah,dh
  436a9d:	pop    QWORD PTR [rbx]
	...
  436aab:	add    ah,cl
  436aad:	je     0x436ab2
  436aaf:	add    BYTE PTR [rax],al
  436ab1:	add    BYTE PTR [rax],al
  436ab3:	add    al,ah
  436ab5:	je     0x436aba
  436ab7:	add    BYTE PTR [rax],al
  436ab9:	add    BYTE PTR [rax],al
  436abb:	add    al,bh
  436abd:	je     0x436ac2
  436abf:	add    BYTE PTR [rax],al
  436ac1:	add    BYTE PTR [rax],al
  436ac3:	add    BYTE PTR [rsi*2+0x3],cl
  436aca:	add    BYTE PTR [rax],al
  436acc:	sub    al,0x75
  436ace:	add    eax,DWORD PTR [rax]
  436ad0:	add    BYTE PTR [rax],al
  436ad2:	add    BYTE PTR [rax],al
  436ad4:	push   rax
  436ad5:	jne    0x436ada
  436ad7:	add    BYTE PTR [rax],al
  436ad9:	add    BYTE PTR [rax],al
  436adb:	add    BYTE PTR [rbp+rsi*2+0x3],bh
  436adf:	add    BYTE PTR [rax],al
  436ae1:	add    BYTE PTR [rax],al
  436ae3:	add    BYTE PTR [rax+0x375],ch
  436ae9:	add    BYTE PTR [rax],al
  436aeb:	add    al,al
  436aed:	jne    0x436af2
  436aef:	add    BYTE PTR [rax],al
  436af1:	add    BYTE PTR [rax],al
  436af3:	add    al,dl
  436af5:	jne    0x436afa
  436af7:	add    BYTE PTR [rax],al
  436af9:	add    BYTE PTR [rax],al
  436afb:	add    ah,bh
  436afd:	jne    0x436b02
  436aff:	add    BYTE PTR [rax],al
  436b01:	add    BYTE PTR [rax],al
  436b03:	add    BYTE PTR [rsi+rsi*2],ch
  436b06:	add    eax,DWORD PTR [rax]
  436b08:	add    BYTE PTR [rax],al
  436b0a:	add    BYTE PTR [rax],al
  436b0c:	rex.WR jbe 0x436b12
  436b0f:	add    BYTE PTR [rax],al
  436b11:	add    BYTE PTR [rax],al
  436b13:	add    BYTE PTR [rsi+rsi*2+0x3],ch
  436b17:	add    BYTE PTR [rax],al
  436b19:	add    BYTE PTR [rax],al
  436b1b:	add    BYTE PTR [rsi+rsi*2+0x3],dl
  436b22:	add    BYTE PTR [rax],al
  436b24:	enter  0x376,0x0
  436b28:	add    BYTE PTR [rax],al
  436b2a:	add    BYTE PTR [rax],al
  436b2c:	hlt    
  436b2d:	jbe    0x436b32
  436b2f:	add    BYTE PTR [rax],al
  436b31:	add    BYTE PTR [rax],al
  436b33:	add    BYTE PTR [rax],ah
  436b35:	ja     0x436b3a
  436b37:	add    BYTE PTR [rax],al
  436b39:	add    BYTE PTR [rax],al
  436b3b:	add    BYTE PTR [rax+0x77],dl
  436b3e:	add    eax,DWORD PTR [rax]
  436b40:	add    BYTE PTR [rax],al
  436b42:	add    BYTE PTR [rax],al
  436b44:	jl     0x436bbd
  436b46:	add    eax,DWORD PTR [rax]
  436b48:	add    BYTE PTR [rax],al
  436b4a:	add    BYTE PTR [rax],al
  436b4c:	test   al,0x77
  436b4e:	add    eax,DWORD PTR [rax]
  436b50:	add    BYTE PTR [rax],al
  436b52:	add    BYTE PTR [rax],al
  436b54:	shl    BYTE PTR [rdi+0x3],1
  436b57:	add    BYTE PTR [rax],al
  436b59:	add    BYTE PTR [rax],al
  436b5b:	add    al,bh
  436b5d:	ja     0x436b62
  436b5f:	add    BYTE PTR [rax],al
  436b61:	add    BYTE PTR [rax],al
  436b63:	add    BYTE PTR [rax+rdi*2],ah
  436b66:	add    eax,DWORD PTR [rax]
  436b68:	add    BYTE PTR [rax],al
  436b6a:	add    BYTE PTR [rax],al
  436b6c:	rex.R js 0x436b72
  436b6f:	add    BYTE PTR [rax],al
  436b71:	add    BYTE PTR [rax],al
  436b73:	add    BYTE PTR [rax+0x78],ch
  436b76:	add    eax,DWORD PTR [rax]
  436b78:	add    BYTE PTR [rax],al
  436b7a:	add    BYTE PTR [rax],al
  436b7c:	mov    BYTE PTR [rax+0x3],bh
  436b7f:	add    BYTE PTR [rax],al
  436b81:	add    BYTE PTR [rax],al
  436b83:	add    BYTE PTR [rax+0x378],bh
  436b89:	add    BYTE PTR [rax],al
  436b8b:	add    ah,bl
  436b8d:	js     0x436b92
  436b8f:	add    BYTE PTR [rax],al
  436b91:	add    BYTE PTR [rax],al
  436b93:	add    al,dh
  436b95:	js     0x436b9a
  436b97:	add    BYTE PTR [rax],al
  436b99:	add    BYTE PTR [rax],al
  436b9b:	add    BYTE PTR [rcx+rdi*2],cl
  436b9e:	add    eax,DWORD PTR [rax]
  436ba0:	add    BYTE PTR [rax],al
  436ba2:	add    BYTE PTR [rax],al
  436ba4:	and    al,0x79
  436ba6:	add    eax,DWORD PTR [rax]
  436ba8:	add    BYTE PTR [rax],al
  436baa:	add    BYTE PTR [rax],al
  436bac:	rex.R jns 0x436bb2
  436baf:	add    BYTE PTR [rax],al
  436bb1:	add    BYTE PTR [rax],al
  436bb3:	add    BYTE PTR [rax+0x79],ah
  436bb6:	add    eax,DWORD PTR [rax]
  436bb8:	add    BYTE PTR [rax],al
  436bba:	add    BYTE PTR [rax],al
  436bbc:	jl     0x436c37
  436bbe:	add    eax,DWORD PTR [rax]
  436bc0:	add    BYTE PTR [rax],al
  436bc2:	add    BYTE PTR [rax],al
  436bc4:	pushf  
  436bc5:	jns    0x436bca
  436bc7:	add    BYTE PTR [rax],al
  436bc9:	add    BYTE PTR [rax],al
  436bcb:	add    BYTE PTR [rax+0x379],bh
  436bd1:	add    BYTE PTR [rax],al
  436bd3:	add    ah,dl
  436bd5:	jns    0x436bda
  436bd7:	add    BYTE PTR [rax],al
  436bd9:	add    BYTE PTR [rax],al
  436bdb:	add    al,ch
  436bdd:	jns    0x436be2
  436bdf:	add    BYTE PTR [rax],al
  436be1:	add    BYTE PTR [rax],al
  436be3:	add    BYTE PTR [rax],cl
  436be5:	jp     0x436bea
  436be7:	add    BYTE PTR [rax],al
  436be9:	add    BYTE PTR [rax],al
  436beb:	add    BYTE PTR [rdx+rdi*2],ch
  436bee:	add    eax,DWORD PTR [rax]
  436bf0:	add    BYTE PTR [rax],al
  436bf2:	add    BYTE PTR [rax],al
  436bf4:	rex.WR jp 0x436bfa
  436bf7:	add    BYTE PTR [rax],al
  436bf9:	add    BYTE PTR [rax],al
  436bfb:	add    BYTE PTR [rdx+rdi*2+0x3],bl
  436bff:	add    BYTE PTR [rax],al
  436c01:	add    BYTE PTR [rax],al
  436c03:	add    BYTE PTR [rdx+rdi*2+0x3],dh
  436c07:	add    BYTE PTR [rax],al
  436c09:	add    BYTE PTR [rax],al
  436c0b:	add    BYTE PTR [rax+0x37a],bl
  436c11:	add    BYTE PTR [rax],al
  436c13:	add    BYTE PTR [rdx+rdi*2+0x3],dh
  436c1a:	add    BYTE PTR [rax],al
  436c1c:	sar    BYTE PTR [rdx+0x3],1
  436c1f:	add    BYTE PTR [rax],al
  436c21:	add    BYTE PTR [rax],al
  436c23:	add    ah,ch
  436c25:	jp     0x436c2a
  436c27:	add    BYTE PTR [rax],al
  436c29:	add    BYTE PTR [rax],al
  436c2b:	add    BYTE PTR [rbx+rdi*2],cl
  436c2e:	add    eax,DWORD PTR [rax]
  436c30:	add    BYTE PTR [rax],al
  436c32:	add    BYTE PTR [rax],al
  436c34:	sub    al,0x7b
  436c36:	add    eax,DWORD PTR [rax]
  436c38:	add    BYTE PTR [rax],al
  436c3a:	add    BYTE PTR [rax],al
  436c3c:	rex.WR jnp 0x436c42
  436c3f:	add    BYTE PTR [rax],al
  436c41:	add    BYTE PTR [rax],al
  436c43:	add    BYTE PTR [rbx+rdi*2+0x3],ch
  436c47:	add    BYTE PTR [rax],al
  436c49:	add    BYTE PTR [rax],al
  436c4b:	add    BYTE PTR [rbx+rdi*2+0x3],al
  436c52:	add    BYTE PTR [rax],al
  436c54:	movabs al,ds:0xb80000000000037b
  436c5d:	jnp    0x436c62
  436c5f:	add    BYTE PTR [rax],al
  436c61:	add    BYTE PTR [rax],al
  436c63:	add    ah,dl
  436c65:	jnp    0x436c6a
  436c67:	add    BYTE PTR [rax],al
  436c69:	add    BYTE PTR [rax],al
  436c6b:	add    al,dh
  436c6d:	jnp    0x436c72
  436c6f:	add    BYTE PTR [rax],al
  436c71:	add    BYTE PTR [rax],al
  436c73:	add    BYTE PTR [rsp+rdi*2],cl
  436c76:	add    eax,DWORD PTR [rax]
  436c78:	add    BYTE PTR [rax],al
  436c7a:	add    BYTE PTR [rax],al
  436c7c:	and    al,0x7c
  436c7e:	add    eax,DWORD PTR [rax]
  436c80:	add    BYTE PTR [rax],al
  436c82:	add    BYTE PTR [rax],al
  436c84:	cmp    al,0x7c
  436c86:	add    eax,DWORD PTR [rax]
  436c88:	add    BYTE PTR [rax],al
  436c8a:	add    BYTE PTR [rax],al
  436c8c:	pop    rax
  436c8d:	jl     0x436c92
  436c8f:	add    BYTE PTR [rax],al
  436c91:	add    BYTE PTR [rax],al
  436c93:	add    BYTE PTR [rsp+rdi*2+0x3],dh
  436c97:	add    BYTE PTR [rax],al
  436c99:	add    BYTE PTR [rax],al
  436c9b:	add    BYTE PTR [rsp+rdi*2+0x3],cl
  436ca2:	add    BYTE PTR [rax],al
  436ca4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436ca5:	jl     0x436caa
  436ca7:	add    BYTE PTR [rax],al
  436ca9:	add    BYTE PTR [rax],al
  436cab:	add    BYTE PTR [rsp+rdi*2+0x3],dh
  436cb2:	add    BYTE PTR [rax],al
  436cb4:	int3   
  436cb5:	jl     0x436cba
  436cb7:	add    BYTE PTR [rax],al
  436cb9:	add    BYTE PTR [rax],al
  436cbb:	add    ah,dh
  436cbd:	jl     0x436cc2
  436cbf:	add    BYTE PTR [rax],al
  436cc1:	add    BYTE PTR [rax],al
  436cc3:	add    BYTE PTR [rax],bl
  436cc5:	jge    0x436cca
  436cc7:	add    BYTE PTR [rax],al
  436cc9:	add    BYTE PTR [rax],al
  436ccb:	add    BYTE PTR [rax],bh
  436ccd:	jge    0x436cd2
  436ccf:	add    BYTE PTR [rax],al
  436cd1:	add    BYTE PTR [rax],al
  436cd3:	add    BYTE PTR [rbp+rdi*2+0x3],cl
  436cd7:	add    BYTE PTR [rax],al
  436cd9:	add    BYTE PTR [rax],al
  436cdb:	add    BYTE PTR [rax+0x7d],bh
  436cde:	add    eax,DWORD PTR [rax]
  436ce0:	add    BYTE PTR [rax],al
  436ce2:	add    BYTE PTR [rax],al
  436ce4:	xchg   esp,eax
  436ce5:	jge    0x436cea
  436ce7:	add    BYTE PTR [rax],al
  436ce9:	add    BYTE PTR [rax],al
  436ceb:	add    BYTE PTR [rbp+rdi*2+0x3],ch
  436cf2:	add    BYTE PTR [rax],al
  436cf4:	(bad)  
  436cf5:	jge    0x436cfa
  436cf7:	add    BYTE PTR [rax],al
  436cf9:	add    BYTE PTR [rax],al
  436cfb:	add    ah,dl
  436cfd:	jge    0x436d02
  436cff:	add    BYTE PTR [rax],al
  436d01:	add    BYTE PTR [rax],al
  436d03:	add    ah,ch
  436d05:	jge    0x436d0a
  436d07:	add    BYTE PTR [rax],al
  436d09:	add    BYTE PTR [rax],al
  436d0b:	add    ah,bh
  436d0d:	jge    0x436d12
  436d0f:	add    BYTE PTR [rax],al
  436d11:	add    BYTE PTR [rax],al
  436d13:	add    BYTE PTR [rsi+rdi*2],dl
  436d16:	add    eax,DWORD PTR [rax]
  436d18:	add    BYTE PTR [rax],al
  436d1a:	add    BYTE PTR [rax],al
  436d1c:	sub    BYTE PTR [rsi+0x3],bh
  436d1f:	add    BYTE PTR [rax],al
  436d21:	add    BYTE PTR [rax],al
  436d23:	add    BYTE PTR [rsi+rdi*2],bh
  436d26:	add    eax,DWORD PTR [rax]
  436d28:	add    BYTE PTR [rax],al
  436d2a:	add    BYTE PTR [rax],al
  436d2c:	push   rsp
  436d2d:	jle    0x436d32
  436d2f:	add    BYTE PTR [rax],al
  436d31:	add    BYTE PTR [rax],al
  436d33:	add    BYTE PTR [rax+0x7e],ch
  436d36:	add    eax,DWORD PTR [rax]
  436d38:	add    BYTE PTR [rax],al
  436d3a:	add    BYTE PTR [rax],al
  436d3c:	js     0x436dbc
  436d3e:	add    eax,DWORD PTR [rax]
  436d40:	add    BYTE PTR [rax],al
  436d42:	add    BYTE PTR [rax],al
  436d44:	movabs al,ds:0xbc0000000000037e
  436d4d:	jle    0x436d52
  436d4f:	add    BYTE PTR [rax],al
  436d51:	add    BYTE PTR [rax],al
  436d53:	add    al,bl
  436d55:	jle    0x436d5a
  436d57:	add    BYTE PTR [rax],al
  436d59:	add    BYTE PTR [rax],al
  436d5b:	add    ah,dh
  436d5d:	jle    0x436d62
  436d5f:	add    BYTE PTR [rax],al
  436d61:	add    BYTE PTR [rax],al
  436d63:	add    BYTE PTR [rax],dl
  436d65:	jg     0x436d6a
  436d67:	add    BYTE PTR [rax],al
  436d69:	add    BYTE PTR [rax],al
  436d6b:	add    BYTE PTR [rdi+rdi*2],ch
  436d6e:	add    eax,DWORD PTR [rax]
  436d70:	add    BYTE PTR [rax],al
  436d72:	add    BYTE PTR [rax],al
  436d74:	rex.WR jg 0x436d7a
  436d77:	add    BYTE PTR [rax],al
  436d79:	add    BYTE PTR [rax],al
  436d7b:	add    BYTE PTR [rax+0x7f],ah
  436d7e:	add    eax,DWORD PTR [rax]
  436d80:	add    BYTE PTR [rax],al
  436d82:	add    BYTE PTR [rax],al
  436d84:	mov    BYTE PTR [rdi+0x3],bh
  436d87:	add    BYTE PTR [rax],al
  436d89:	add    BYTE PTR [rax],al
  436d8b:	add    BYTE PTR [rdi+rdi*2+0x3],ch
  436d92:	add    BYTE PTR [rax],al
  436d94:	sar    BYTE PTR [rdi+0x3],1
  436d97:	add    BYTE PTR [rax],al
  436d99:	add    BYTE PTR [rax],al
  436d9b:	add    ah,bh
  436d9d:	jg     0x436da2
  436d9f:	add    BYTE PTR [rax],al
  436da1:	add    BYTE PTR [rax],al
  436da3:	add    BYTE PTR [rax+rax*4],dl
  436da6:	add    eax,DWORD PTR [rax]
  436da8:	add    BYTE PTR [rax],al
  436daa:	add    BYTE PTR [rax],al
  436dac:	xor    al,0x80
  436dae:	add    eax,DWORD PTR [rax]
  436db0:	add    BYTE PTR [rax],al
  436db2:	add    BYTE PTR [rax],al
  436db4:	push   rsp
  436db5:	add    BYTE PTR [rbx],0x0
  436db8:	add    BYTE PTR [rax],al
  436dba:	add    BYTE PTR [rax],al
  436dbc:	jo     0x436d3e
  436dbe:	add    eax,DWORD PTR [rax]
  436dc0:	add    BYTE PTR [rax],al
  436dc2:	add    BYTE PTR [rax],al
  436dc4:	mov    WORD PTR [rax+0x3],es
  436dca:	add    BYTE PTR [rax],al
  436dcc:	lods   al,BYTE PTR ds:[rsi]
  436dcd:	add    BYTE PTR [rbx],0x0
  436dd0:	add    BYTE PTR [rax],al
  436dd2:	add    BYTE PTR [rax],al
  436dd4:	(bad)  
  436dd5:	add    BYTE PTR [rbx],0x0
  436dd8:	add    BYTE PTR [rax],al
  436dda:	add    BYTE PTR [rax],al
  436ddc:	lock add BYTE PTR [rbx],0x0
  436de0:	add    BYTE PTR [rax],al
  436de2:	add    BYTE PTR [rax],al
  436de4:	adc    BYTE PTR [rcx+0x3],al
  436dea:	add    BYTE PTR [rax],al
  436dec:	xor    al,0x81
  436dee:	add    eax,DWORD PTR [rax]
  436df0:	add    BYTE PTR [rax],al
  436df2:	add    BYTE PTR [rax],al
  436df4:	(bad)  
  436df5:	add    DWORD PTR [rbx],0x0
  436dfb:	add    BYTE PTR [rcx+rax*4+0x3],cl
  436e02:	add    BYTE PTR [rax],al
  436e04:	mov    ah,0x81
  436e06:	add    eax,DWORD PTR [rax]
  436e08:	add    BYTE PTR [rax],al
  436e0a:	add    BYTE PTR [rax],al
  436e0c:	int3   
  436e0d:	add    DWORD PTR [rbx],0x0
  436e13:	add    al,ch
  436e15:	add    DWORD PTR [rbx],0x0
  436e1b:	add    BYTE PTR [rax],al
  436e1d:	(bad)  
  436e1e:	add    eax,DWORD PTR [rax]
  436e20:	add    BYTE PTR [rax],al
  436e22:	add    BYTE PTR [rax],al
  436e24:	sbb    al,0x82
  436e26:	add    eax,DWORD PTR [rax]
  436e28:	add    BYTE PTR [rax],al
  436e2a:	add    BYTE PTR [rax],al
  436e2c:	cmp    BYTE PTR [rdx+0x3],al
  436e32:	add    BYTE PTR [rax],al
  436e34:	push   rax
  436e35:	(bad)  
  436e36:	add    eax,DWORD PTR [rax]
  436e38:	add    BYTE PTR [rax],al
  436e3a:	add    BYTE PTR [rax],al
  436e3c:	je     0x436dc0
  436e3e:	add    eax,DWORD PTR [rax]
  436e40:	add    BYTE PTR [rax],al
  436e42:	add    BYTE PTR [rax],al
  436e44:	xchg   esp,eax
  436e45:	(bad)  
  436e46:	add    eax,DWORD PTR [rax]
  436e48:	add    BYTE PTR [rax],al
  436e4a:	add    BYTE PTR [rax],al
  436e4c:	mov    al,0x82
  436e4e:	add    eax,DWORD PTR [rax]
  436e50:	add    BYTE PTR [rax],al
  436e52:	add    BYTE PTR [rax],al
  436e54:	(bad)  
  436e55:	(bad)  
  436e56:	add    eax,DWORD PTR [rax]
  436e58:	add    BYTE PTR [rax],al
  436e5a:	add    BYTE PTR [rax],al
  436e5c:	lock (bad) 
  436e5e:	add    eax,DWORD PTR [rax]
  436e60:	add    BYTE PTR [rax],al
  436e62:	add    BYTE PTR [rax],al
  436e64:	sbb    al,0x83
  436e66:	add    eax,DWORD PTR [rax]
  436e68:	add    BYTE PTR [rax],al
  436e6a:	add    BYTE PTR [rax],al
  436e6c:	cmp    BYTE PTR [rbx+0x3],al
  436e72:	add    BYTE PTR [rax],al
  436e74:	push   rax
  436e75:	add    DWORD PTR [rbx],0x0
  436e78:	add    BYTE PTR [rax],al
  436e7a:	add    BYTE PTR [rax],al
  436e7c:	ins    BYTE PTR es:[rdi],dx
  436e7d:	add    DWORD PTR [rbx],0x0
  436e80:	add    BYTE PTR [rax],al
  436e82:	add    BYTE PTR [rax],al
  436e84:	mov    BYTE PTR [rbx+0x3],al
  436e8a:	add    BYTE PTR [rax],al
  436e8c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  436e8d:	add    DWORD PTR [rbx],0x0
  436e90:	add    BYTE PTR [rax],al
  436e92:	add    BYTE PTR [rax],al
  436e94:	int3   
  436e95:	add    DWORD PTR [rbx],0x0
  436e98:	add    BYTE PTR [rax],al
  436e9a:	add    BYTE PTR [rax],al
  436e9c:	hlt    
  436e9d:	add    DWORD PTR [rbx],0x0
  436ea0:	add    BYTE PTR [rax],al
  436ea2:	add    BYTE PTR [rax],al
  436ea4:	adc    BYTE PTR [rbx+rax*1+0x0],al
  436eab:	add    BYTE PTR [rsp+rax*4],dh
  436eae:	add    eax,DWORD PTR [rax]
  436eb0:	add    BYTE PTR [rax],al
  436eb2:	add    BYTE PTR [rax],al
  436eb4:	rex.WR test BYTE PTR [rbx],r8b
  436eb7:	add    BYTE PTR [rax],al
  436eb9:	add    BYTE PTR [rax],al
  436ebb:	add    BYTE PTR [rax-0x7c],ah
  436ebe:	add    eax,DWORD PTR [rax]
  436ec0:	add    BYTE PTR [rax],al
  436ec2:	add    BYTE PTR [rax],al
  436ec4:	mov    WORD PTR [rbx+rax*1+0x0],es
  436ecb:	add    BYTE PTR [rax+0x384],dh
  436ed1:	add    BYTE PTR [rax],al
  436ed3:	add    ah,bl
  436ed5:	test   BYTE PTR [rbx],al
  436ed7:	add    BYTE PTR [rax],al
  436ed9:	add    BYTE PTR [rax],al
  436edb:	add    ah,bh
  436edd:	test   BYTE PTR [rbx],al
  436edf:	add    BYTE PTR [rax],al
  436ee1:	add    BYTE PTR [rax],al
  436ee3:	add    BYTE PTR [rax],ah
  436ee5:	test   DWORD PTR [rbx],eax
  436ee7:	add    BYTE PTR [rax],al
  436ee9:	add    BYTE PTR [rax],al
  436eeb:	add    BYTE PTR [rbp+rax*4+0x3],al
  436eef:	add    BYTE PTR [rax],al
  436ef1:	add    BYTE PTR [rax],al
  436ef3:	add    BYTE PTR [rax-0x7b],bl
  436ef6:	add    eax,DWORD PTR [rax]
  436ef8:	add    BYTE PTR [rax],al
  436efa:	add    BYTE PTR [rax],al
  436efc:	js     0x436e83
  436efe:	add    eax,DWORD PTR [rax]
  436f00:	add    BYTE PTR [rax],al
  436f02:	add    BYTE PTR [rax],al
  436f04:	xchg   esp,eax
  436f05:	test   DWORD PTR [rbx],eax
  436f07:	add    BYTE PTR [rax],al
  436f09:	add    BYTE PTR [rax],al
  436f0b:	add    BYTE PTR [rax+0x385],dh
  436f11:	add    BYTE PTR [rax],al
  436f13:	add    al,bl
  436f15:	test   DWORD PTR [rbx],eax
  436f17:	add    BYTE PTR [rax],al
  436f19:	add    BYTE PTR [rax],al
  436f1b:	add    BYTE PTR [rax],cl
  436f1d:	xchg   BYTE PTR [rbx],al
  436f1f:	add    BYTE PTR [rax],al
  436f21:	add    BYTE PTR [rax],al
  436f23:	add    BYTE PTR [rax],dh
  436f25:	xchg   BYTE PTR [rbx],al
  436f27:	add    BYTE PTR [rax],al
  436f29:	add    BYTE PTR [rax],al
  436f2b:	add    BYTE PTR [rsi+rax*4+0x3],cl
  436f2f:	add    BYTE PTR [rax],al
  436f31:	add    BYTE PTR [rax],al
  436f33:	add    BYTE PTR [rax-0x7a],ch
  436f36:	add    eax,DWORD PTR [rax]
  436f38:	add    BYTE PTR [rax],al
  436f3a:	add    BYTE PTR [rax],al
  436f3c:	test   BYTE PTR [rsi+0x3],al
  436f42:	add    BYTE PTR [rax],al
  436f44:	pushf  
  436f45:	xchg   BYTE PTR [rbx],al
	...
  436f53:	add    BYTE PTR [rsi+rax*4+0x3],dh
  436f5a:	add    BYTE PTR [rax],al
  436f5c:	(bad)  
  436f5d:	xchg   BYTE PTR [rbx],al
  436f5f:	add    BYTE PTR [rax],al
  436f61:	add    BYTE PTR [rax],al
  436f63:	add    ah,bl
  436f65:	xchg   BYTE PTR [rbx],al
  436f67:	add    BYTE PTR [rax],al
  436f69:	add    BYTE PTR [rax],al
  436f6b:	add    ah,dh
  436f6d:	xchg   BYTE PTR [rbx],al
  436f6f:	add    BYTE PTR [rax],al
  436f71:	add    BYTE PTR [rax],al
  436f73:	add    BYTE PTR [rsi],al
  436f75:	xchg   DWORD PTR [rbx],eax
  436f77:	add    BYTE PTR [rax],al
  436f79:	add    BYTE PTR [rax],al
  436f7b:	add    BYTE PTR [rax],bl
  436f7d:	xchg   DWORD PTR [rbx],eax
  436f7f:	add    BYTE PTR [rax],al
  436f81:	add    BYTE PTR [rax],al
  436f83:	add    BYTE PTR [rdi+rax*4],ch
  436f86:	add    eax,DWORD PTR [rax]
  436f88:	add    BYTE PTR [rax],al
  436f8a:	add    BYTE PTR [rax],al
  436f8c:	rex.X xchg DWORD PTR [rbx],eax
  436f8f:	add    BYTE PTR [rax],al
  436f91:	add    BYTE PTR [rax],al
  436f93:	add    BYTE PTR [rax-0x79],bl
  436f96:	add    eax,DWORD PTR [rax]
  436f98:	add    BYTE PTR [rax],al
  436f9a:	add    BYTE PTR [rax],al
  436f9c:	outs   dx,BYTE PTR ds:[rsi]
  436f9d:	xchg   DWORD PTR [rbx],eax
  436f9f:	add    BYTE PTR [rax],al
  436fa1:	add    BYTE PTR [rax],al
  436fa3:	add    BYTE PTR [rdi+rax*4+0x3],bh
  436fa7:	add    BYTE PTR [rax],al
  436fa9:	add    BYTE PTR [rax],al
  436fab:	add    BYTE PTR [rdi+rax*4+0x3],cl
  436fb2:	add    BYTE PTR [rax],al
  436fb4:	movabs ds:0xb600000000000387,al
  436fbd:	xchg   DWORD PTR [rbx],eax
  436fbf:	add    BYTE PTR [rax],al
  436fc1:	add    BYTE PTR [rax],al
  436fc3:	add    dl,cl
  436fc5:	xchg   DWORD PTR [rbx],eax
  436fc7:	add    BYTE PTR [rax],al
  436fc9:	add    BYTE PTR [rax],al
  436fcb:	add    dl,ch
  436fcd:	xchg   DWORD PTR [rbx],eax
  436fcf:	add    BYTE PTR [rax],al
  436fd1:	add    BYTE PTR [rax],al
  436fd3:	add    ah,bh
  436fd5:	xchg   DWORD PTR [rbx],eax
  436fd7:	add    BYTE PTR [rax],al
  436fd9:	add    BYTE PTR [rax],al
  436fdb:	add    BYTE PTR [rsi],cl
  436fdd:	mov    BYTE PTR [rbx],al
  436fdf:	add    BYTE PTR [rax],al
  436fe1:	add    BYTE PTR [rax],al
  436fe3:	add    BYTE PTR [rax],ch
  436fe5:	mov    BYTE PTR [rbx],al
  436fe7:	add    BYTE PTR [rax],al
  436fe9:	add    BYTE PTR [rax],al
  436feb:	add    BYTE PTR [rax],bh
  436fed:	mov    BYTE PTR [rbx],al
  436fef:	add    BYTE PTR [rax],al
  436ff1:	add    BYTE PTR [rax],al
  436ff3:	add    BYTE PTR [rax+rcx*4+0x3],dl
  436ff7:	add    BYTE PTR [rax],al
  436ff9:	add    BYTE PTR [rax],al
  436ffb:	add    BYTE PTR [rax-0x78],ch
  436ffe:	add    eax,DWORD PTR [rax]
  437000:	add    BYTE PTR [rax],al
  437002:	add    BYTE PTR [rax],al
  437004:	or     BYTE PTR [rax+0x3],0x0
  43700b:	add    BYTE PTR [rsi+0x388],dl
  437011:	add    BYTE PTR [rax],al
  437013:	add    BYTE PTR [rdx+0x388],ch
  437019:	add    BYTE PTR [rax],al
  43701b:	add    BYTE PTR [rdx+0x388],bh
  437021:	add    BYTE PTR [rax],al
  437023:	add    ah,dl
  437025:	mov    BYTE PTR [rbx],al
  437027:	add    BYTE PTR [rax],al
  437029:	add    BYTE PTR [rax],al
  43702b:	add    dl,ch
  43702d:	mov    BYTE PTR [rbx],al
  43702f:	add    BYTE PTR [rax],al
  437031:	add    BYTE PTR [rax],al
  437033:	add    dh,bh
  437035:	mov    BYTE PTR [rbx],al
  437037:	add    BYTE PTR [rax],al
  437039:	add    BYTE PTR [rax],al
  43703b:	add    BYTE PTR [rax],bl
  43703d:	mov    DWORD PTR [rbx],eax
  43703f:	add    BYTE PTR [rax],al
  437041:	add    BYTE PTR [rax],al
  437043:	add    BYTE PTR [rcx+rcx*4],ch
  437046:	add    eax,DWORD PTR [rax]
  437048:	add    BYTE PTR [rax],al
  43704a:	add    BYTE PTR [rax],al
  43704c:	rex.WX mov QWORD PTR [rbx],rax
  43704f:	add    BYTE PTR [rax],al
  437051:	add    BYTE PTR [rax],al
  437053:	add    BYTE PTR [rdx-0x77],dl
  437056:	add    eax,DWORD PTR [rax]
  437058:	add    BYTE PTR [rax],al
  43705a:	add    BYTE PTR [rax],al
  43705c:	pop    rsp
  43705d:	mov    DWORD PTR [rbx],eax
  43705f:	add    BYTE PTR [rax],al
  437061:	add    BYTE PTR [rax],al
  437063:	add    BYTE PTR [rax-0x77],dh
  437066:	add    eax,DWORD PTR [rax]
  437068:	add    BYTE PTR [rax],al
  43706a:	add    BYTE PTR [rax],al
  43706c:	jle    0x436ff7
  43706e:	add    eax,DWORD PTR [rax]
  437070:	add    BYTE PTR [rax],al
  437072:	add    BYTE PTR [rax],al
  437074:	(bad)  
  437075:	mov    DWORD PTR [rbx],eax
  437077:	add    BYTE PTR [rax],al
  437079:	add    BYTE PTR [rax],al
  43707b:	add    BYTE PTR [rcx+rcx*4+0x3],ch
  437082:	add    BYTE PTR [rax],al
  437084:	mov    esp,0x389
  437089:	add    BYTE PTR [rax],al
  43708b:	add    dl,dl
  43708d:	mov    DWORD PTR [rbx],eax
	...
  43709b:	add    al,ch
  43709d:	mov    DWORD PTR [rbx],eax
  43709f:	add    BYTE PTR [rax],al
  4370a1:	add    BYTE PTR [rax],al
  4370a3:	add    BYTE PTR [rax],al
  4370a5:	mov    al,BYTE PTR [rbx]
  4370a7:	add    BYTE PTR [rax],al
  4370a9:	add    BYTE PTR [rax],al
  4370ab:	add    BYTE PTR [rsi],dl
  4370ad:	mov    al,BYTE PTR [rbx]
  4370af:	add    BYTE PTR [rax],al
  4370b1:	add    BYTE PTR [rax],al
  4370b3:	add    BYTE PTR [rdx+rcx*4],ah
  4370b6:	add    eax,DWORD PTR [rax]
  4370b8:	add    BYTE PTR [rax],al
  4370ba:	add    BYTE PTR [rax],al
  4370bc:	xor    al,0x8a
  4370be:	add    eax,DWORD PTR [rax]
  4370c0:	add    BYTE PTR [rax],al
  4370c2:	add    BYTE PTR [rax],al
  4370c4:	mov    al,BYTE PTR [rbx]
  4370c7:	add    BYTE PTR [rax],al
  4370c9:	add    BYTE PTR [rax],al
  4370cb:	add    BYTE PTR [rsi-0x76],cl
  4370ce:	add    eax,DWORD PTR [rax]
  4370d0:	add    BYTE PTR [rax],al
  4370d2:	add    BYTE PTR [rax],al
  4370d4:	pop    rsi
  4370d5:	mov    al,BYTE PTR [rbx]
  4370d7:	add    BYTE PTR [rax],al
  4370d9:	add    BYTE PTR [rax],al
  4370db:	add    BYTE PTR [rsi-0x76],ch
  4370de:	add    eax,DWORD PTR [rax]
  4370e0:	add    BYTE PTR [rax],al
  4370e2:	add    BYTE PTR [rax],al
  4370e4:	or     BYTE PTR [rdx+0x3],0x0
  4370eb:	add    BYTE PTR [rdx+rcx*4+0x3],dl
  4370f2:	add    BYTE PTR [rax],al
  4370f4:	sahf   
  4370f5:	mov    al,BYTE PTR [rbx]
  4370f7:	add    BYTE PTR [rax],al
  4370f9:	add    BYTE PTR [rax],al
  4370fb:	add    BYTE PTR [rdx+rcx*4+0x3],ch
  437102:	add    BYTE PTR [rax],al
  437104:	mov    dh,0x8a
  437106:	add    eax,DWORD PTR [rax]
  437108:	add    BYTE PTR [rax],al
  43710a:	add    BYTE PTR [rax],al
  43710c:	ror    BYTE PTR [rdx+0x3],0x0
  437113:	add    ah,cl
  437115:	mov    al,BYTE PTR [rbx]
  437117:	add    BYTE PTR [rax],al
  437119:	add    BYTE PTR [rax],al
  43711b:	add    dh,dl
  43711d:	mov    al,BYTE PTR [rbx]
  43711f:	add    BYTE PTR [rax],al
  437121:	add    BYTE PTR [rax],al
  437123:	add    dh,bl
  437125:	mov    al,BYTE PTR [rbx]
  437127:	add    BYTE PTR [rax],al
  437129:	add    BYTE PTR [rax],al
  43712b:	add    ah,ch
  43712d:	mov    al,BYTE PTR [rbx]
  43712f:	add    BYTE PTR [rax],al
  437131:	add    BYTE PTR [rax],al
  437133:	add    ah,bh
  437135:	mov    al,BYTE PTR [rbx]
  437137:	add    BYTE PTR [rax],al
  437139:	add    BYTE PTR [rax],al
  43713b:	add    BYTE PTR [rsi],al
  43713d:	mov    eax,DWORD PTR [rbx]
  43713f:	add    BYTE PTR [rax],al
  437141:	add    BYTE PTR [rax],al
  437143:	add    BYTE PTR [rdx],dl
  437145:	mov    eax,DWORD PTR [rbx]
  437147:	add    BYTE PTR [rax],al
  437149:	add    BYTE PTR [rax],al
  43714b:	add    BYTE PTR [rsi],bl
  43714d:	mov    eax,DWORD PTR [rbx]
  43714f:	add    BYTE PTR [rax],al
  437151:	add    BYTE PTR [rax],al
  437153:	add    BYTE PTR [rax],dh
  437155:	mov    eax,DWORD PTR [rbx]
  437157:	add    BYTE PTR [rax],al
  437159:	add    BYTE PTR [rax],al
  43715b:	add    BYTE PTR [rdx],bh
  43715d:	mov    eax,DWORD PTR [rbx]
  43715f:	add    BYTE PTR [rax],al
  437161:	add    BYTE PTR [rax],al
  437163:	add    BYTE PTR [rsi-0x75],al
  437166:	add    eax,DWORD PTR [rax]
  437168:	add    BYTE PTR [rax],al
  43716a:	add    BYTE PTR [rax],al
  43716c:	push   rsi
  43716d:	mov    eax,DWORD PTR [rbx]
  43716f:	add    BYTE PTR [rax],al
  437171:	add    BYTE PTR [rax],al
  437173:	add    BYTE PTR [rsi-0x75],bl
  437176:	add    eax,DWORD PTR [rax]
  437178:	add    BYTE PTR [rax],al
  43717a:	add    BYTE PTR [rax],al
  43717c:	push   0xffffffffffffff8b
  43717e:	add    eax,DWORD PTR [rax]
  437180:	add    BYTE PTR [rax],al
  437182:	add    BYTE PTR [rax],al
  437184:	je     0x437111
  437186:	add    eax,DWORD PTR [rax]
  437188:	add    BYTE PTR [rax],al
  43718a:	add    BYTE PTR [rax],al
  43718c:	xchg   BYTE PTR [rbx+0x3],cl
  437192:	add    BYTE PTR [rax],al
  437194:	xchg   esp,eax
  437195:	mov    eax,DWORD PTR [rbx]
  437197:	add    BYTE PTR [rax],al
  437199:	add    BYTE PTR [rax],al
  43719b:	add    BYTE PTR [rax+0x38b],ah
  4371a1:	add    BYTE PTR [rax],al
  4371a3:	add    BYTE PTR [rdx+0x38b],ch
  4371a9:	add    BYTE PTR [rax],al
  4371ab:	add    BYTE PTR [rbx+rcx*4+0x3],dh
  4371b2:	add    BYTE PTR [rax],al
  4371b4:	mov    esp,0x38b
  4371b9:	add    BYTE PTR [rax],al
  4371bb:	add    ah,al
  4371bd:	mov    eax,DWORD PTR [rbx]
  4371bf:	add    BYTE PTR [rax],al
  4371c1:	add    BYTE PTR [rax],al
  4371c3:	add    dh,cl
  4371c5:	mov    eax,DWORD PTR [rbx]
  4371c7:	add    BYTE PTR [rax],al
  4371c9:	add    BYTE PTR [rax],al
  4371cb:	add    dh,dl
  4371cd:	mov    eax,DWORD PTR [rbx]
  4371cf:	add    BYTE PTR [rax],al
  4371d1:	add    BYTE PTR [rax],al
  4371d3:	add    dh,bl
  4371d5:	mov    eax,DWORD PTR [rbx]
  4371d7:	add    BYTE PTR [rax],al
  4371d9:	add    BYTE PTR [rax],al
  4371db:	add    al,ch
  4371dd:	mov    eax,DWORD PTR [rbx]
  4371df:	add    BYTE PTR [rax],al
  4371e1:	add    BYTE PTR [rax],al
  4371e3:	add    dl,dh
  4371e5:	mov    eax,DWORD PTR [rbx]
  4371e7:	add    BYTE PTR [rax],al
  4371e9:	add    BYTE PTR [rax],al
  4371eb:	add    ah,bh
  4371ed:	mov    eax,DWORD PTR [rbx]
  4371ef:	add    BYTE PTR [rax],al
  4371f1:	add    BYTE PTR [rax],al
  4371f3:	add    BYTE PTR [rsp+rcx*4],al
  4371f6:	add    eax,DWORD PTR [rax]
  4371f8:	add    BYTE PTR [rax],al
  4371fa:	add    BYTE PTR [rax],al
  4371fc:	(bad)  
  4371fd:	mov    WORD PTR [rbx],es
  4371ff:	add    BYTE PTR [rax],al
  437201:	add    BYTE PTR [rax],al
  437203:	add    BYTE PTR [rsi],dl
  437205:	mov    WORD PTR [rbx],es
  437207:	add    BYTE PTR [rax],al
  437209:	add    BYTE PTR [rax],al
  43720b:	add    BYTE PTR [rsi],bl
  43720d:	mov    WORD PTR [rbx],es
  43720f:	add    BYTE PTR [rax],al
  437211:	add    BYTE PTR [rax],al
  437213:	add    BYTE PTR [rsi],ah
  437215:	mov    WORD PTR [rbx],es
  437217:	add    BYTE PTR [rax],al
  437219:	add    BYTE PTR [rax],al
  43721b:	add    BYTE PTR [rsi],ch
  43721d:	mov    WORD PTR [rbx],es
  43721f:	add    BYTE PTR [rax],al
  437221:	add    BYTE PTR [rax],al
  437223:	add    BYTE PTR [rax],bh
  437225:	mov    WORD PTR [rbx],es
  437227:	add    BYTE PTR [rax],al
  437229:	add    BYTE PTR [rax],al
  43722b:	add    BYTE PTR [rsp+rcx*4+0x3],al
  43722f:	add    BYTE PTR [rax],al
  437231:	add    BYTE PTR [rax],al
  437233:	add    BYTE PTR [rsi-0x74],cl
  437236:	add    eax,DWORD PTR [rax]
  437238:	add    BYTE PTR [rax],al
  43723a:	add    BYTE PTR [rax],al
  43723c:	pop    rax
  43723d:	mov    WORD PTR [rbx],es
  43723f:	add    BYTE PTR [rax],al
  437241:	add    BYTE PTR [rax],al
  437243:	add    BYTE PTR [rdx-0x74],ah
  437246:	add    eax,DWORD PTR [rax]
  437248:	add    BYTE PTR [rax],al
  43724a:	add    BYTE PTR [rax],al
  43724c:	jo     0x4371da
  43724e:	add    eax,DWORD PTR [rax]
  437250:	add    BYTE PTR [rax],al
  437252:	add    BYTE PTR [rax],al
  437254:	jp     0x4371e2
  437256:	add    eax,DWORD PTR [rax]
  437258:	add    BYTE PTR [rax],al
  43725a:	add    BYTE PTR [rax],al
  43725c:	test   BYTE PTR [rbx+rax*1+0x0],cl
  437263:	add    BYTE PTR [rsi+0x38c],cl
  437269:	add    BYTE PTR [rax],al
  43726b:	add    BYTE PTR [rax+0x38c],bl
  437271:	add    BYTE PTR [rax],al
  437273:	add    BYTE PTR [rdx+0x38c],ah
  437279:	add    BYTE PTR [rax],al
  43727b:	add    BYTE PTR [rsp+rcx*4+0x3],ch
  437282:	add    BYTE PTR [rax],al
  437284:	mov    ah,0x8c
  437286:	add    eax,DWORD PTR [rax]
  437288:	add    BYTE PTR [rax],al
  43728a:	add    BYTE PTR [rax],al
  43728c:	mov    esp,0x38c
  437291:	add    BYTE PTR [rax],al
  437293:	add    dh,al
  437295:	mov    WORD PTR [rbx],es
  437297:	add    BYTE PTR [rax],al
  437299:	add    BYTE PTR [rax],al
  43729b:	add    al,dl
  43729d:	mov    WORD PTR [rbx],es
  43729f:	add    BYTE PTR [rax],al
  4372a1:	add    BYTE PTR [rax],al
  4372a3:	add    dl,bl
  4372a5:	mov    WORD PTR [rbx],es
  4372a7:	add    BYTE PTR [rax],al
  4372a9:	add    BYTE PTR [rax],al
  4372ab:	add    ah,ah
  4372ad:	mov    WORD PTR [rbx],es
  4372af:	add    BYTE PTR [rax],al
  4372b1:	add    BYTE PTR [rax],al
  4372b3:	add    dh,ch
  4372b5:	mov    WORD PTR [rbx],es
  4372b7:	add    BYTE PTR [rax],al
  4372b9:	add    BYTE PTR [rax],al
  4372bb:	add    dl,bh
  4372bd:	mov    WORD PTR [rbx],es
  4372bf:	add    BYTE PTR [rax],al
  4372c1:	add    BYTE PTR [rax],al
  4372c3:	add    BYTE PTR [rsi],al
  4372c5:	lea    eax,[rbx]
  4372c7:	add    BYTE PTR [rax],al
  4372c9:	add    BYTE PTR [rax],al
  4372cb:	add    BYTE PTR [rax],dl
  4372cd:	lea    eax,[rbx]
  4372cf:	add    BYTE PTR [rax],al
  4372d1:	add    BYTE PTR [rax],al
  4372d3:	add    BYTE PTR [rdx],bl
  4372d5:	lea    eax,[rbx]
  4372d7:	add    BYTE PTR [rax],al
  4372d9:	add    BYTE PTR [rax],al
  4372db:	add    BYTE PTR [rcx*4+0x3],ah
  4372e2:	add    BYTE PTR [rax],al
  4372e4:	lea    eax,cs:[rbx]
  4372e7:	add    BYTE PTR [rax],al
  4372e9:	add    BYTE PTR [rax],al
  4372eb:	add    BYTE PTR [rax],bh
  4372ed:	lea    eax,[rbx]
  4372ef:	add    BYTE PTR [rax],al
  4372f1:	add    BYTE PTR [rax],al
  4372f3:	add    BYTE PTR [rdx-0x73],al
  4372f6:	add    eax,DWORD PTR [rax]
  4372f8:	add    BYTE PTR [rax],al
  4372fa:	add    BYTE PTR [rax],al
  4372fc:	lea    r8,[rbx]
  4372ff:	add    BYTE PTR [rax],al
  437301:	add    BYTE PTR [rax],al
  437303:	add    BYTE PTR [rsi-0x73],dl
  437306:	add    eax,DWORD PTR [rax]
  437308:	add    BYTE PTR [rax],al
  43730a:	add    BYTE PTR [rax],al
  43730c:	(bad)  
  43730d:	lea    eax,[rbx]
  43730f:	add    BYTE PTR [rax],al
  437311:	add    BYTE PTR [rax],al
  437313:	add    BYTE PTR [rdx-0x73],ch
  437316:	add    eax,DWORD PTR [rax]
  437318:	add    BYTE PTR [rax],al
  43731a:	add    BYTE PTR [rax],al
  43731c:	jbe    0x4372ab
  43731e:	add    eax,DWORD PTR [rax]
  437320:	add    BYTE PTR [rax],al
  437322:	add    BYTE PTR [rax],al
  437324:	or     BYTE PTR [rbp+0x3],0x0
  43732b:	add    BYTE PTR [rdx+0x38d],cl
  437331:	add    BYTE PTR [rax],al
  437333:	add    BYTE PTR [rsi+0x38d],dl
  437339:	add    BYTE PTR [rax],al
  43733b:	add    BYTE PTR [rax+0x38d],ah
  437341:	add    BYTE PTR [rax],al
  437343:	add    BYTE PTR [rsi+0x38d],ch
  437349:	add    BYTE PTR [rax],al
  43734b:	add    BYTE PTR [rax+0x38d],bh
  437351:	add    BYTE PTR [rax],al
  437353:	add    dl,al
  437355:	lea    eax,[rbx]
  437357:	add    BYTE PTR [rax],al
  437359:	add    BYTE PTR [rax],al
  43735b:	add    ah,cl
  43735d:	lea    eax,[rbx]
  43735f:	add    BYTE PTR [rax],al
  437361:	add    BYTE PTR [rax],al
  437363:	add    ah,dl
  437365:	lea    eax,[rbx]
  437367:	add    BYTE PTR [rax],al
  437369:	add    BYTE PTR [rax],al
  43736b:	add    ah,bl
  43736d:	lea    eax,[rbx]
  43736f:	add    BYTE PTR [rax],al
  437371:	add    BYTE PTR [rax],al
  437373:	add    dh,ah
  437375:	lea    eax,[rbx]
  437377:	add    BYTE PTR [rax],al
  437379:	add    BYTE PTR [rax],al
  43737b:	add    al,dh
  43737d:	lea    eax,[rbx]
	...
  43738b:	add    ah,bh
  43738d:	lea    eax,[rbx]
  43738f:	add    BYTE PTR [rax],al
  437391:	add    BYTE PTR [rax],al
  437393:	add    BYTE PTR [rax],cl
  437395:	mov    es,WORD PTR [rbx]
  437397:	add    BYTE PTR [rax],al
  437399:	add    BYTE PTR [rax],al
  43739b:	add    BYTE PTR [rsi+rcx*4],dl
  43739e:	add    eax,DWORD PTR [rax]
	...
  4373ac:	and    BYTE PTR [rsi+0x3],cl
  4373b2:	add    BYTE PTR [rax],al
  4373b4:	xor    al,0x8e
  4373b6:	add    eax,DWORD PTR [rax]
  4373b8:	add    BYTE PTR [rax],al
  4373ba:	add    BYTE PTR [rax],al
  4373bc:	rex.X mov es,WORD PTR [rbx]
  4373bf:	add    BYTE PTR [rax],al
  4373c1:	add    BYTE PTR [rax],al
  4373c3:	add    BYTE PTR [rsi-0x72],bl
  4373c6:	add    eax,DWORD PTR [rax]
  4373c8:	add    BYTE PTR [rax],al
  4373ca:	add    BYTE PTR [rax],al
  4373cc:	outs   dx,BYTE PTR ds:[rsi]
  4373cd:	mov    es,WORD PTR [rbx]
	...
  4373db:	add    BYTE PTR [rdx+0x38e],al
  4373e1:	add    BYTE PTR [rax],al
  4373e3:	add    BYTE PTR [rax+0x38e],dl
  4373e9:	add    BYTE PTR [rax],al
  4373eb:	add    BYTE PTR [rax+0x38e],ch
  4373f1:	add    BYTE PTR [rax],al
  4373f3:	add    BYTE PTR [rdx+0x38e],bh
  4373f9:	add    BYTE PTR [rax],al
  4373fb:	add    ah,cl
  4373fd:	mov    es,WORD PTR [rbx]
  4373ff:	add    BYTE PTR [rax],al
  437401:	add    BYTE PTR [rax],al
  437403:	add    dh,bl
  437405:	mov    es,WORD PTR [rbx]
  437407:	add    BYTE PTR [rax],al
  437409:	add    BYTE PTR [rax],al
  43740b:	add    ah,ch
  43740d:	mov    es,WORD PTR [rbx]
  43740f:	add    BYTE PTR [rax],al
  437411:	add    BYTE PTR [rax],al
  437413:	add    dl,bh
  437415:	mov    es,WORD PTR [rbx]
  437417:	add    BYTE PTR [rax],al
  437419:	add    BYTE PTR [rax],al
  43741b:	add    BYTE PTR [rdx],cl
  43741d:	pop    QWORD PTR [rbx]
  43741f:	add    BYTE PTR [rax],al
  437421:	add    BYTE PTR [rax],al
  437423:	add    BYTE PTR [rdi+rcx*4],dl
  437426:	add    eax,DWORD PTR [rax]
  437428:	add    BYTE PTR [rax],al
  43742a:	add    BYTE PTR [rax],al
  43742c:	sbb    al,0x8f
  43742e:	add    eax,DWORD PTR [rax]
  437430:	add    BYTE PTR [rax],al
  437432:	add    BYTE PTR [rax],al
  437434:	sub    cl,BYTE PTR [rdi+0x3]
  43743a:	add    BYTE PTR [rax],al
  43743c:	xor    al,0x8f
  43743e:	add    eax,DWORD PTR [rax]
  437440:	add    BYTE PTR [rax],al
  437442:	add    BYTE PTR [rax],al
  437444:	rex.R pop QWORD PTR [rbx]
  437447:	add    BYTE PTR [rax],al
  437449:	add    BYTE PTR [rax],al
  43744b:	add    BYTE PTR [rdx-0x71],dl
  43744e:	add    eax,DWORD PTR [rax]
  437450:	add    BYTE PTR [rax],al
  437452:	add    BYTE PTR [rax],al
  437454:	(bad)  
  437455:	pop    QWORD PTR [rbx]
  437457:	add    BYTE PTR [rax],al
  437459:	add    BYTE PTR [rax],al
  43745b:	add    BYTE PTR [rsi-0x71],ch
  43745e:	add    eax,DWORD PTR [rax]
  437460:	add    BYTE PTR [rax],al
  437462:	add    BYTE PTR [rax],al
  437464:	jle    0x4373f5
  437466:	add    eax,DWORD PTR [rax]
  437468:	add    BYTE PTR [rax],al
  43746a:	add    BYTE PTR [rax],al
  43746c:	mov    cs,WORD PTR [rdi+0x3]
  437472:	add    BYTE PTR [rax],al
  437474:	xchg   esi,eax
  437475:	pop    QWORD PTR [rbx]
  437477:	add    BYTE PTR [rax],al
  437479:	add    BYTE PTR [rax],al
  43747b:	add    BYTE PTR [rdi+rcx*4+0x3],ah
  437482:	add    BYTE PTR [rax],al
  437484:	scas   al,BYTE PTR es:[rdi]
  437485:	pop    QWORD PTR [rbx]
  437487:	add    BYTE PTR [rax],al
  437489:	add    BYTE PTR [rax],al
  43748b:	add    BYTE PTR [rsi+0x38f],dh
  437491:	add    BYTE PTR [rax],al
  437493:	add    BYTE PTR [rsi+0x38f],bh
  437499:	add    BYTE PTR [rax],al
  43749b:	add    dl,cl
  43749d:	pop    QWORD PTR [rbx]
  43749f:	add    BYTE PTR [rax],al
  4374a1:	add    BYTE PTR [rax],al
  4374a3:	add    ah,dl
  4374a5:	pop    QWORD PTR [rbx]
  4374a7:	add    BYTE PTR [rax],al
  4374a9:	add    BYTE PTR [rax],al
  4374ab:	add    ah,bl
  4374ad:	pop    QWORD PTR [rbx]
  4374af:	add    BYTE PTR [rax],al
  4374b1:	add    BYTE PTR [rax],al
  4374b3:	add    dh,ah
  4374b5:	pop    QWORD PTR [rbx]
  4374b7:	add    BYTE PTR [rax],al
  4374b9:	add    BYTE PTR [rax],al
  4374bb:	add    ah,dh
  4374bd:	pop    QWORD PTR [rbx]
	...
  4374cb:	add    BYTE PTR [rbx],dl
  4374cd:	add    BYTE PTR [rdi+0x6e],ah
  4374d0:	jne    0x437546
  4374d2:	ins    BYTE PTR es:[rdi],dx
  4374d3:	jae    0x437534
  4374d5:	(bad)  
  4374d6:	ins    BYTE PTR es:[rdi],dx
  4374d7:	gs jb  0x43754e
  4374da:	pop    rdi
  4374db:	addr32 gs je 0x4374df
  4374df:	add    BYTE PTR [rax+rax*1],dl
  4374e2:	outs   dx,BYTE PTR ds:[esi]
  4374e4:	jne    0x43755a
  4374e6:	ins    BYTE PTR es:[rdi],dx
  4374e7:	jae    0x437548
  4374e9:	(bad)  
  4374ea:	ins    BYTE PTR es:[rdi],dx
  4374eb:	gs jb  0x437562
  4374ee:	pop    rdi
  4374ef:	addr32 gs je 0x437552
  4374f3:	outs   dx,BYTE PTR ds:[rsi]
  4374f4:	(bad)  
  4374f5:	ins    DWORD PTR es:[rdi],dx
  4374f6:	add    BYTE PTR gs:[rsi],dl
  4374f9:	add    BYTE PTR [rdi+0x6e],ah
  4374fc:	jne    0x437572
  4374fe:	ins    BYTE PTR es:[rdi],dx
  4374ff:	jae    0x437560
  437501:	(bad)  
  437502:	ins    BYTE PTR es:[rdi],dx
  437503:	gs jb  0x43757a
  437506:	pop    rdi
  437507:	jae    0x43756e
  437509:	outs   dx,BYTE PTR ds:[rsi]
  43750a:	add    BYTE PTR fs:[rdi],dl
  43750d:	add    BYTE PTR [rdi+0x6e],ah
  437510:	jne    0x437586
  437512:	ins    BYTE PTR es:[rdi],dx
  437513:	jae    0x437574
  437515:	(bad)  
  437516:	ins    BYTE PTR es:[rdi],dx
  437517:	gs jb  0x43758e
  43751a:	pop    rdi
  43751b:	jae    0x437582
  43751d:	outs   dx,BYTE PTR ds:[rsi]
  43751e:	fs pop rdi
  437520:	(bad)  
  437521:	jo     0x437593
  437523:	jb     0x437594
  437525:	jo     0x437599
  437527:	imul   esp,DWORD PTR [rcx+0x74],0x180065
  43752e:	outs   dx,BYTE PTR ds:[esi]
  437530:	jne    0x4375a6
  437532:	ins    BYTE PTR es:[rdi],dx
  437533:	jae    0x437594
  437535:	(bad)  
  437536:	ins    BYTE PTR es:[rdi],dx
  437537:	jo     0x4375a7
  437539:	pop    rdi
  43753a:	addr32 gs je 0x43759d
  43753e:	jae    0x4375a5
  437540:	ins    BYTE PTR es:[rdi],dx
  437541:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  437546:	pop    rdi
  437547:	jo     0x4375bb
  437549:	outs   dx,DWORD PTR ds:[rsi]
  43754a:	je     0x4375bb
  43754c:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43754f:	add    BYTE PTR [rbx],bl
  437551:	add    BYTE PTR [rdi+0x6e],ah
  437554:	jne    0x4375ca
  437556:	ins    BYTE PTR es:[rdi],dx
  437557:	jae    0x4375b8
  437559:	(bad)  
  43755a:	outs   dx,BYTE PTR ds:[rsi]
  43755b:	outs   dx,DWORD PTR ds:[rsi]
  43755c:	outs   dx,BYTE PTR ds:[rsi]
  43755d:	pop    rdi
  43755e:	(bad)  
  43755f:	ins    BYTE PTR es:[rdi],dx
  437560:	ins    BYTE PTR es:[rdi],dx
  437561:	outs   dx,DWORD PTR ds:[rsi]
  437562:	movsxd esp,DWORD PTR [rcx+0x74]
  437565:	gs pop rdi
  437567:	jae    0x4375ce
  437569:	jb     0x4375e1
  43756b:	gs jb  0x4375cd
  43756e:	movsxd esi,DWORD PTR [rdx+0x65]
  437571:	fs outs dx,BYTE PTR gs:[rsi]
  437574:	je     0x4375df
  437576:	(bad)  
  437577:	ins    BYTE PTR es:[rdi],dx
  437578:	jae    0x43757a
  43757a:	add    BYTE PTR [rax],al
  43757c:	and    BYTE PTR [rax],al
  43757e:	outs   dx,BYTE PTR ds:[esi]
  437580:	jne    0x4375f6
  437582:	ins    BYTE PTR es:[rdi],dx
  437583:	jae    0x4375e4
  437585:	(bad)  
  437586:	outs   dx,BYTE PTR ds:[rsi]
  437587:	outs   dx,DWORD PTR ds:[rsi]
  437588:	outs   dx,BYTE PTR ds:[rsi]
  437589:	pop    rdi
  43758a:	jae    0x4375f1
  43758c:	je     0x4375ed
  43758e:	jae    0x4375f5
  437590:	jb     0x437608
  437592:	gs jb  0x4375f4
  437595:	jo     0x4375f8
  437597:	jb     0x4375fa
  437599:	ins    DWORD PTR es:[rdi],dx
  43759a:	jae    0x4375fb
  43759c:	data16 jne 0x43760d
  43759f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4375a3:	outs   dx,BYTE PTR ds:[rsi]
  4375a4:	add    BYTE PTR [rax],al
  4375a6:	add    BYTE PTR [rax],al
  4375a8:	and    al,BYTE PTR [rax]
  4375aa:	outs   dx,BYTE PTR ds:[esi]
  4375ac:	jne    0x437622
  4375ae:	ins    BYTE PTR es:[rdi],dx
  4375af:	jae    0x437610
  4375b1:	(bad)  
  4375b2:	jne    0x437628
  4375b4:	push   0x7465675f
  4375b9:	pop    rdi
  4375ba:	je     0x437635
  4375bc:	jo     0x437623
  4375be:	add    BYTE PTR [rax],al
  4375c0:	and    eax,0x756e6700
  4375c5:	je     0x437633
  4375c7:	jae    0x437628
  4375c9:	(bad)  
  4375ca:	jns    0x437631
  4375cc:	add    BYTE PTR [rax],al
  4375ce:	add    BYTE PTR [rax],al
  4375d0:	sub    BYTE PTR [rax],al
  4375d2:	outs   dx,BYTE PTR ds:[esi]
  4375d4:	jne    0x43764a
  4375d6:	ins    BYTE PTR es:[rdi],dx
  4375d7:	jae    0x437638
  4375d9:	movsxd esp,DWORD PTR [rbp+0x72]
  4375dc:	je     0x437647
  4375de:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4375e4:	pop    rdi
  4375e5:	(bad)  
  4375e6:	ins    BYTE PTR es:[rdi],dx
  4375e7:	ins    BYTE PTR es:[rdi],dx
  4375e8:	outs   dx,DWORD PTR ds:[rsi]
  4375e9:	movsxd esp,DWORD PTR [rcx+0x74]
  4375ec:	gs pop rdi
  4375ee:	movsxd esi,DWORD PTR [rdx+0x65]
  4375f1:	fs outs dx,BYTE PTR gs:[rsi]
  4375f4:	je     0x43765f
  4375f6:	(bad)  
  4375f7:	ins    BYTE PTR es:[rdi],dx
  4375f8:	jae    0x4375fa
  4375fa:	add    BYTE PTR [rax],al
  4375fc:	sub    DWORD PTR [rax],eax
  4375fe:	outs   dx,BYTE PTR ds:[esi]
  437600:	jne    0x437676
  437602:	ins    BYTE PTR es:[rdi],dx
  437603:	jae    0x437664
  437605:	movsxd esp,DWORD PTR [rbp+0x72]
  437608:	je     0x437673
  43760a:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437610:	pop    rdi
  437611:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  437615:	outs   dx,BYTE PTR ds:[rsi]
  437616:	je     0x437677
  437618:	addr32 gs je 0x43767b
  43761c:	jb     0x437683
  43761e:	jno    0x437695
  437620:	gs jae 0x437697
  437623:	pop    rdi
  437624:	jae    0x43769a
  437626:	(bad)  
  437627:	je     0x43769e
  437629:	jae    0x43762b
  43762b:	add    BYTE PTR [rax+rax*1],dh
  43762e:	outs   dx,BYTE PTR ds:[esi]
  437630:	jne    0x4376a6
  437632:	ins    BYTE PTR es:[rdi],dx
  437633:	jae    0x437694
  437635:	movsxd esp,DWORD PTR [rbp+0x72]
  437638:	je     0x4376a3
  43763a:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437640:	pop    rdi
  437641:	addr32 gs je 0x4376a4
  437645:	outs   dx,DWORD PTR ds:[rsi]
  437646:	jne    0x4376ba
  437648:	jae    0x43764a
  43764a:	add    BYTE PTR [rax],al
  43764c:	xor    eax,0x756e6700
  437651:	je     0x4376bf
  437653:	jae    0x4376b4
  437655:	movsxd esp,DWORD PTR [rbp+0x72]
  437658:	je     0x4376c3
  43765a:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437660:	pop    rdi
  437661:	addr32 gs je 0x4376c4
  437665:	jo     0x4376cc
  437667:	gs jb  0x4376dd
  43766a:	add    BYTE PTR [rax],al
  43766c:	cmp    al,0x0
  43766e:	outs   dx,BYTE PTR ds:[esi]
  437670:	jne    0x4376e6
  437672:	ins    BYTE PTR es:[rdi],dx
  437673:	jae    0x4376d4
  437675:	movsxd esp,DWORD PTR [rbp+0x72]
  437678:	je     0x4376e3
  43767a:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437680:	pop    rdi
  437681:	jae    0x4376e8
  437683:	jb     0x4376fb
  437685:	gs jb  0x4376e7
  437688:	jae    0x4376ef
  43768a:	je     0x4376eb
  43768c:	jb     0x4376f3
  43768e:	jno    0x437705
  437690:	gs jae 0x437707
  437693:	add    BYTE PTR [rax+0x0],al
  437696:	outs   dx,BYTE PTR ds:[esi]
  437698:	jne    0x43770e
  43769a:	ins    BYTE PTR es:[rdi],dx
  43769b:	jae    0x4376fc
  43769d:	movsxd esp,DWORD PTR [rbp+0x72]
  4376a0:	je     0x43770b
  4376a2:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4376a8:	pop    rdi
  4376a9:	jae    0x437710
  4376ab:	je     0x43770c
  4376ad:	outs   dx,DWORD PTR ds:[rsi]
  4376ae:	movsxd esi,DWORD PTR [rbx+0x70]
  4376b1:	pop    rdi
  4376b2:	jae    0x437728
  4376b4:	(bad)  
  4376b5:	je     0x43772c
  4376b7:	jae    0x437718
  4376b9:	jb     0x437720
  4376bb:	jno    0x437732
  4376bd:	gs jae 0x437734
  4376c0:	pop    rdi
  4376c1:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  4376c8:	rex.XB add BYTE PTR [r15+0x6e],spl
  4376cc:	jne    0x437742
  4376ce:	ins    BYTE PTR es:[rdi],dx
  4376cf:	jae    0x437730
  4376d1:	movsxd esp,DWORD PTR [rbp+0x72]
  4376d4:	je     0x43773f
  4376d6:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4376dc:	pop    rdi
  4376dd:	jae    0x437744
  4376df:	je     0x437740
  4376e1:	outs   dx,DWORD PTR ds:[rsi]
  4376e2:	jo     0x437749
  4376e4:	outs   dx,BYTE PTR ds:[rsi]
  4376e5:	jo     0x43774e
  4376e7:	jo     0x437748
  4376e9:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  4376ed:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  4376f4:	add    BYTE PTR [rdi+0x6e],r12b
  4376f8:	jne    0x43776e
  4376fa:	ins    BYTE PTR es:[rdi],dx
  4376fb:	jae    0x43775c
  4376fd:	movsxd esp,DWORD PTR [rbp+0x72]
  437700:	je     0x43776b
  437702:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437708:	pop    rdi
  437709:	jae    0x437770
  43770b:	je     0x43776c
  43770d:	outs   dx,DWORD PTR ds:[rsi]
  43770e:	jo     0x437775
  437710:	outs   dx,BYTE PTR ds:[rsi]
  437711:	jo     0x43777a
  437713:	jo     0x437774
  437715:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  437719:	imul   bp,WORD PTR [rbp+riz*2+0x32],0x0
  437720:	rex.RXB add BYTE PTR [r15+0x6e],r12b
  437724:	jne    0x43779a
  437726:	ins    BYTE PTR es:[rdi],dx
  437727:	jae    0x437788
  437729:	movsxd esp,DWORD PTR [rbp+0x72]
  43772c:	je     0x437797
  43772e:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437734:	pop    rdi
  437735:	jae    0x43779c
  437737:	je     0x437798
  437739:	outs   dx,DWORD PTR ds:[rsi]
  43773a:	jo     0x4377a1
  43773c:	outs   dx,BYTE PTR ds:[rsi]
  43773d:	jo     0x4377a6
  43773f:	jo     0x4377a0
  437741:	imul   esp,DWORD PTR [rbp+0x79],0x72
  437745:	imul   ebp,DWORD PTR [rsi+0x67],0x6c69665f
  43774c:	add    BYTE PTR gs:[rax],al
  43774f:	add    BYTE PTR [rcx+0x0],cl
  437752:	outs   dx,BYTE PTR ds:[esi]
  437754:	jne    0x4377ca
  437756:	ins    BYTE PTR es:[rdi],dx
  437757:	jae    0x4377b8
  437759:	movsxd esp,DWORD PTR [rbp+0x72]
  43775c:	je     0x4377c7
  43775e:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437764:	pop    rdi
  437765:	jae    0x4377cc
  437767:	je     0x4377c8
  437769:	jo     0x4377cc
  43776b:	jb     0x4377ce
  43776d:	ins    DWORD PTR es:[rdi],dx
  43776e:	jae    0x4377cf
  437770:	data16 jne 0x4377e1
  437773:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437777:	outs   dx,BYTE PTR ds:[rsi]
  437778:	add    BYTE PTR [rax],al
  43777a:	add    BYTE PTR [rax],al
  43777c:	rex.WRXB add BYTE PTR [r15+0x6e],r12b
  437780:	jne    0x4377f6
  437782:	ins    BYTE PTR es:[rdi],dx
  437783:	jae    0x4377e4
  437785:	movsxd esp,DWORD PTR [rbp+0x72]
  437788:	je     0x4377f3
  43778a:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437790:	pop    rdi
  437791:	jae    0x4377f8
  437793:	je     0x4377f4
  437795:	jbe    0x4377fc
  437797:	jb     0x437802
  437799:	data16 jns 0x4377fb
  43779c:	data16 jne 0x43780d
  43779f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4377a3:	outs   dx,BYTE PTR ds:[rsi]
  4377a4:	add    BYTE PTR [rax],al
  4377a6:	add    BYTE PTR [rax],al
  4377a8:	push   rdx
  4377a9:	add    BYTE PTR [rdi+0x6e],ah
  4377ac:	jne    0x437822
  4377ae:	ins    BYTE PTR es:[rdi],dx
  4377af:	jae    0x437810
  4377b1:	movsxd esp,DWORD PTR [rbp+0x72]
  4377b4:	je     0x43781f
  4377b6:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4377bc:	pop    rdi
  4377bd:	jae    0x437824
  4377bf:	je     0x437820
  4377c1:	js     0x4377f8
  4377c3:	xor    BYTE PTR [rcx],bh
  4377c5:	pop    rdi
  4377c6:	movsxd esi,DWORD PTR [rdx+0x6c]
  4377c9:	pop    rdi
  4377ca:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x5500
  4377d1:	add    BYTE PTR [rdi+0x6e],ah
  4377d4:	jne    0x43784a
  4377d6:	ins    BYTE PTR es:[rdi],dx
  4377d7:	jae    0x437838
  4377d9:	movsxd esp,DWORD PTR [rbp+0x72]
  4377dc:	je     0x437847
  4377de:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4377e4:	pop    rdi
  4377e5:	jae    0x43784c
  4377e7:	je     0x437848
  4377e9:	js     0x437820
  4377eb:	xor    BYTE PTR [rcx],bh
  4377ed:	pop    rdi
  4377ee:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  4377f2:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x5e00
  4377f9:	add    BYTE PTR [rdi+0x6e],ah
  4377fc:	jne    0x437872
  4377fe:	ins    BYTE PTR es:[rdi],dx
  4377ff:	jae    0x437860
  437801:	movsxd esp,DWORD PTR [rbp+0x72]
  437804:	je     0x43786f
  437806:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43780c:	pop    rdi
  43780d:	jae    0x437874
  43780f:	je     0x437870
  437811:	js     0x437848
  437813:	xor    BYTE PTR [rcx],bh
  437815:	pop    rdi
  437816:	je     0x43788a
  437818:	jne    0x43788d
  43781a:	je     0x43787b
  43781c:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  437823:	add    BYTE PTR [rax+0x0],ah
  437826:	outs   dx,BYTE PTR ds:[esi]
  437828:	jne    0x43789e
  43782a:	ins    BYTE PTR es:[rdi],dx
  43782b:	jae    0x43788c
  43782d:	movsxd esp,DWORD PTR [rbp+0x72]
  437830:	je     0x43789b
  437832:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437838:	pop    rdi
  437839:	je     0x4378b4
  43783b:	jo     0x4378a2
  43783d:	pop    rdi
  43783e:	addr32 gs je 0x437842
  437842:	add    BYTE PTR [rax],al
  437844:	(bad)  
  437845:	add    BYTE PTR [rdi+0x6e],ah
  437848:	jne    0x4378be
  43784a:	ins    BYTE PTR es:[rdi],dx
  43784b:	jae    0x4378ac
  43784d:	movsxd esp,DWORD PTR [rbp+0x72]
  437850:	je     0x4378bb
  437852:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437858:	pop    rdi
  437859:	je     0x4378d4
  43785b:	jo     0x4378c2
  43785d:	pop    rdi
  43785e:	addr32 gs je 0x4378c1
  437862:	outs   dx,BYTE PTR ds:[rsi]
  437863:	(bad)  
  437864:	ins    DWORD PTR es:[rdi],dx
  437865:	add    BYTE PTR gs:[rax],al
  437868:	movsxd eax,DWORD PTR [rax]
  43786a:	outs   dx,BYTE PTR ds:[esi]
  43786c:	jne    0x4378e2
  43786e:	ins    BYTE PTR es:[rdi],dx
  43786f:	jae    0x4378d0
  437871:	movsxd esp,DWORD PTR [rbp+0x72]
  437874:	je     0x4378df
  437876:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43787c:	pop    rdi
  43787d:	je     0x4378f8
  43787f:	jo     0x4378e6
  437881:	pop    rdi
  437882:	ins    BYTE PTR es:[rdi],dx
  437883:	imul   esi,DWORD PTR [rbx+0x74],0x640000
  43788a:	outs   dx,BYTE PTR ds:[esi]
  43788c:	jne    0x437902
  43788e:	ins    BYTE PTR es:[rdi],dx
  43788f:	jae    0x4378f0
  437891:	movsxd esp,DWORD PTR [rbp+0x72]
  437894:	je     0x4378ff
  437896:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43789c:	pop    rdi
  43789d:	jbe    0x437904
  43789f:	jb     0x43790a
  4378a1:	imul   sp,WORD PTR [rbx+0x61],0x6974
  4378a7:	outs   dx,DWORD PTR ds:[rsi]
  4378a8:	outs   dx,BYTE PTR ds:[rsi]
  4378a9:	pop    rdi
  4378aa:	jae    0x437920
  4378ac:	(bad)  
  4378ad:	je     0x437924
  4378af:	jae    0x437910
  4378b1:	jo     0x437925
  4378b3:	imul   ebp,DWORD PTR [rsi+0x74],0x650000
  4378ba:	outs   dx,BYTE PTR ds:[esi]
  4378bc:	jne    0x437932
  4378be:	ins    BYTE PTR es:[rdi],dx
  4378bf:	jae    0x437920
  4378c1:	movsxd esp,DWORD PTR [rbp+0x72]
  4378c4:	je     0x43792f
  4378c6:	imul   sp,WORD PTR [rbx+0x61],0x6574
  4378cc:	pop    rdi
  4378cd:	jbe    0x437934
  4378cf:	jb     0x43793a
  4378d1:	data16 jns 0x437933
  4378d4:	jo     0x43793b
  4378d6:	gs jb  0x43794c
  4378d9:	add    BYTE PTR [rax],al
  4378db:	add    BYTE PTR [rdi+0x0],ch
  4378de:	outs   dx,BYTE PTR ds:[esi]
  4378e0:	jne    0x437956
  4378e2:	ins    BYTE PTR es:[rdi],dx
  4378e3:	jae    0x437944
  4378e5:	movsxd ebp,DWORD PTR [rcx+0x70]
  4378e8:	push   0x675f7265
  4378ed:	gs je  0x4378f0
  4378f0:	je     0x4378f2
  4378f2:	outs   dx,BYTE PTR ds:[esi]
  4378f4:	jne    0x43796a
  4378f6:	ins    BYTE PTR es:[rdi],dx
  4378f7:	jae    0x437958
  4378f9:	movsxd ebp,DWORD PTR [rcx+0x70]
  4378fc:	push   0x675f7265
  437901:	gs je  0x437963
  437904:	outs   dx,BYTE PTR ds:[rsi]
  437905:	(bad)  
  437906:	ins    DWORD PTR es:[rdi],dx
  437907:	add    BYTE PTR gs:[rax],al
  43790a:	add    BYTE PTR [rax],al
  43790c:	ja     0x43790e
  43790e:	outs   dx,BYTE PTR ds:[esi]
  437910:	jne    0x437986
  437912:	ins    BYTE PTR es:[rdi],dx
  437913:	jae    0x437974
  437915:	movsxd ebp,DWORD PTR [rcx+0x70]
  437918:	push   0x6c5f7265
  43791d:	imul   esi,DWORD PTR [rbx+0x74],0x0
  437924:	jns    0x437926
  437926:	outs   dx,BYTE PTR ds:[esi]
  437928:	jne    0x43799e
  43792a:	ins    BYTE PTR es:[rdi],dx
  43792b:	jae    0x43798c
  43792d:	movsxd ebp,DWORD PTR [rcx+0x70]
  437930:	push   0x735f7265
  437935:	jne    0x4379a0
  437937:	je     0x43799e
  437939:	pop    rdi
  43793a:	addr32 gs je 0x43799d
  43793e:	outs   dx,BYTE PTR ds:[rsi]
  43793f:	(bad)  
  437940:	ins    DWORD PTR es:[rdi],dx
  437941:	add    BYTE PTR gs:[rax],al
  437944:	jp     0x437946
  437946:	outs   dx,BYTE PTR ds:[esi]
  437948:	jne    0x4379be
  43794a:	ins    BYTE PTR es:[rdi],dx
  43794b:	jae    0x4379ac
  43794d:	movsxd ebp,DWORD PTR [rcx+0x70]
  437950:	push   0x735f7265
  437955:	jne    0x4379c0
  437957:	je     0x4379be
  437959:	pop    rdi
  43795a:	imul   ebp,DWORD PTR [rsi+0x66],0x7c00006f
  437961:	add    BYTE PTR [rdi+0x6e],ah
  437964:	jne    0x4379da
  437966:	ins    BYTE PTR es:[rdi],dx
  437967:	jae    0x4379c8
  437969:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43796c:	jo     0x4379e0
  43796e:	gs jae 0x4379e4
  437971:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  437978:	add    BYTE PTR [rax],al
  43797a:	add    BYTE PTR [rax],al
  43797c:	jle    0x43797e
  43797e:	outs   dx,BYTE PTR ds:[esi]
  437980:	jne    0x4379f6
  437982:	ins    BYTE PTR es:[rdi],dx
  437983:	jae    0x4379e4
  437985:	movsxd ebp,DWORD PTR [rdi+0x6d]
  437988:	jo     0x4379fc
  43798a:	gs jae 0x437a00
  43798d:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  437994:	pop    rdi
  437995:	outs   dx,BYTE PTR ds:[rsi]
  437996:	(bad)  
  437997:	ins    DWORD PTR es:[rdi],dx
  437998:	add    BYTE PTR gs:[rax],al
  43799b:	add    BYTE PTR [rdi+0x0],bh
  43799e:	outs   dx,BYTE PTR ds:[esi]
  4379a0:	jne    0x437a16
  4379a2:	ins    BYTE PTR es:[rdi],dx
  4379a3:	jae    0x437a04
  4379a5:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4379a8:	jo     0x437a1c
  4379aa:	gs jae 0x437a20
  4379ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x73696c5f
  4379b4:	je     0x4379b6
  4379b6:	add    BYTE PTR [rax],al
  4379b8:	(bad)  
  4379b9:	add    BYTE PTR [rdi+0x6e],ah
  4379bc:	jne    0x437a32
  4379be:	ins    BYTE PTR es:[rdi],dx
  4379bf:	jae    0x437a20
  4379c1:	movsxd esi,DWORD PTR [rdx+0x65]
  4379c4:	fs outs dx,BYTE PTR gs:[rsi]
  4379c7:	je     0x437a32
  4379c9:	(bad)  
  4379ca:	ins    BYTE PTR es:[rdi],dx
  4379cb:	jae    0x437a2c
  4379cd:	jae    0x437a34
  4379cf:	je     0x4379d1
  4379d1:	add    BYTE PTR [rax],al
  4379d3:	add    BYTE PTR [rbp+0x756e6700],cl
  4379d9:	je     0x437a47
  4379db:	jae    0x437a3c
  4379dd:	fs (bad) 
  4379df:	pop    rdi
  4379e0:	jae    0x437a47
  4379e2:	je     0x437a43
  4379e4:	jo     0x437a5a
  4379e6:	jb     0x4379e8
  4379e8:	mov    es,WORD PTR [rax]
  4379ea:	outs   dx,BYTE PTR ds:[esi]
  4379ec:	jne    0x437a62
  4379ee:	ins    BYTE PTR es:[rdi],dx
  4379ef:	jae    0x437a50
  4379f1:	fs (bad) 
  4379f3:	pop    rdi
  4379f4:	jae    0x437a5b
  4379f6:	je     0x437a57
  4379f8:	jb     0x437a5f
  4379fa:	ins    DWORD PTR es:[rdi],dx
  4379fb:	outs   dx,DWORD PTR ds:[rsi]
  4379fc:	jbe    0x437a63
  4379fe:	pop    rdi
  4379ff:	data16 jne 0x437a70
  437a02:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437a06:	outs   dx,BYTE PTR ds:[rsi]
  437a07:	add    BYTE PTR [rdi+0x756e6700],cl
  437a0d:	je     0x437a7b
  437a0f:	jae    0x437a70
  437a11:	fs (bad) 
  437a13:	pop    rdi
  437a14:	jae    0x437a7b
  437a16:	je     0x437a77
  437a18:	jb     0x437a7f
  437a1a:	je     0x437a8e
  437a1c:	imul   esp,DWORD PTR [rbp+0x76],0x75665f65
  437a23:	outs   dx,BYTE PTR ds:[rsi]
  437a24:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437a28:	outs   dx,BYTE PTR ds:[rsi]
  437a29:	add    BYTE PTR [rax],al
  437a2b:	add    BYTE PTR [rax+0x756e6700],dl
  437a31:	je     0x437a9f
  437a33:	jae    0x437a94
  437a35:	fs (bad) 
  437a37:	pop    rdi
  437a38:	jae    0x437a9f
  437a3a:	je     0x437a9b
  437a3c:	jae    0x437ab2
  437a3e:	outs   dx,DWORD PTR ds:[rsi]
  437a3f:	jb     0x437aa6
  437a41:	pop    rdi
  437a42:	data16 jne 0x437ab3
  437a45:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437a49:	outs   dx,BYTE PTR ds:[rsi]
  437a4a:	add    BYTE PTR [rax],al
  437a4c:	xchg   ecx,eax
  437a4d:	add    BYTE PTR [rdi+0x6e],ah
  437a50:	jne    0x437ac6
  437a52:	ins    BYTE PTR es:[rdi],dx
  437a53:	jae    0x437ab4
  437a55:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x920074
  437a5e:	outs   dx,BYTE PTR ds:[esi]
  437a60:	jne    0x437ad6
  437a62:	ins    BYTE PTR es:[rdi],dx
  437a63:	jae    0x437ac4
  437a65:	fs push 0x7465675f
  437a6b:	pop    rdi
  437a6c:	addr32 jb 0x437ade
  437a6f:	jne    0x437ae1
  437a71:	add    BYTE PTR [rax],al
  437a73:	add    BYTE PTR [rbx+0x756e6700],dl
  437a79:	je     0x437ae7
  437a7b:	jae    0x437adc
  437a7d:	fs push 0x7465675f
  437a83:	pop    rdi
  437a84:	jo     0x437aeb
  437a86:	gs jb  0x437afc
  437a89:	pop    rdi
  437a8a:	jo     0x437b01
  437a8c:	(bad)  
  437a8d:	ins    BYTE PTR es:[rdi],dx
  437a8e:	imul   esp,DWORD PTR [rbx+0x5f],0x73746962
  437a95:	add    BYTE PTR [rax],al
  437a97:	add    BYTE PTR [rax+rax*1+0x74756e67],dl
  437a9e:	ins    BYTE PTR es:[rdi],dx
  437a9f:	jae    0x437b00
  437aa1:	fs push 0x7465675f
  437aa7:	pop    rdi
  437aa8:	jo     0x437b1c
  437aaa:	imul   ebp,DWORD PTR [rbp+0x65],0x7469625f
  437ab1:	jae    0x437ab3
  437ab3:	add    BYTE PTR [rsi+0x756e6700],dl
  437ab9:	je     0x437b27
  437abb:	jae    0x437b1c
  437abd:	fs push 0x7465675f
  437ac3:	pop    rdi
  437ac4:	jae    0x437b2b
  437ac6:	movsxd esi,DWORD PTR [rdx+0x65]
  437ac9:	je     0x437b2a
  437acb:	(bad)  
  437acc:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x6e670098
  437ad4:	jne    0x437b4a
  437ad6:	ins    BYTE PTR es:[rdi],dx
  437ad7:	jae    0x437b38
  437ad9:	fs push 0x7261705f
  437adf:	(bad)  
  437ae0:	ins    DWORD PTR es:[rdi],dx
  437ae1:	jae    0x437b42
  437ae3:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x74
  437aec:	(bad)  
  437aed:	add    BYTE PTR [rdi+0x6e],ah
  437af0:	jne    0x437b66
  437af2:	ins    BYTE PTR es:[rdi],dx
  437af3:	jae    0x437b54
  437af5:	fs push 0x7261705f
  437afb:	(bad)  
  437afc:	ins    DWORD PTR es:[rdi],dx
  437afd:	jae    0x437b5e
  437aff:	gs js  0x437b72
  437b02:	outs   dx,DWORD PTR ds:[rsi]
  437b03:	jb     0x437b79
  437b05:	pop    rdi
  437b06:	jo     0x437b73
  437b08:	movsxd esi,DWORD PTR [rbx+0x33]
  437b0b:	add    BYTE PTR [rax+rax*1+0x74756e67],bl
  437b12:	ins    BYTE PTR es:[rdi],dx
  437b13:	jae    0x437b74
  437b15:	fs push 0x7261705f
  437b1b:	(bad)  
  437b1c:	ins    DWORD PTR es:[rdi],dx
  437b1d:	jae    0x437b7e
  437b1f:	outs   dx,BYTE PTR gs:[esi]
  437b22:	gs jb  0x437b86
  437b25:	je     0x437b8c
  437b27:	xor    al,BYTE PTR [rax]
  437b29:	add    BYTE PTR [rax],al
  437b2b:	add    BYTE PTR [rbp+0x756e6700],bl
  437b31:	je     0x437b9f
  437b33:	jae    0x437b94
  437b35:	fs push 0x7261705f
  437b3b:	(bad)  
  437b3c:	ins    DWORD PTR es:[rdi],dx
  437b3d:	jae    0x437b9e
  437b3f:	imul   ebp,DWORD PTR [rbp+0x70],0x5f74726f
  437b46:	jo     0x437bb3
  437b48:	movsxd esi,DWORD PTR [rbx+0x33]
  437b4b:	add    BYTE PTR [rsi+0x756e6700],bl
  437b51:	je     0x437bbf
  437b53:	jae    0x437bb4
  437b55:	fs push 0x7261705f
  437b5b:	(bad)  
  437b5c:	ins    DWORD PTR es:[rdi],dx
  437b5d:	jae    0x437bbe
  437b5f:	imul   ebp,DWORD PTR [rbp+0x70],0x5f74726f
  437b66:	jb     0x437bc9
  437b68:	ja     0x437b6a
  437b6a:	add    BYTE PTR [rax],al
  437b6c:	movabs al,ds:0x5f736c74756e6700
  437b75:	fs push 0x7261705f
  437b7b:	(bad)  
  437b7c:	ins    DWORD PTR es:[rdi],dx
  437b7d:	jae    0x437bde
  437b7f:	imul   ebp,DWORD PTR [rsi+0x69],0xa30074
  437b86:	outs   dx,BYTE PTR ds:[esi]
  437b88:	jne    0x437bfe
  437b8a:	ins    BYTE PTR es:[rdi],dx
  437b8b:	jae    0x437bec
  437b8d:	imul   esp,DWORD PTR fs:[rdi+0x65],0x675f7473
  437b95:	gs je  0x437bf7
  437b98:	outs   dx,BYTE PTR ds:[rsi]
  437b99:	(bad)  
  437b9a:	ins    DWORD PTR es:[rdi],dx
  437b9b:	add    BYTE PTR gs:[rax],al
  437b9e:	add    BYTE PTR [rax],al
  437ba0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  437ba1:	add    BYTE PTR [rdi+0x6e],ah
  437ba4:	jne    0x437c1a
  437ba6:	ins    BYTE PTR es:[rdi],dx
  437ba7:	jae    0x437c08
  437ba9:	imul   esp,DWORD PTR fs:[rdi+0x65],0x6c5f7473
  437bb1:	imul   esi,DWORD PTR [rbx+0x74],0x0
  437bb8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  437bb9:	add    BYTE PTR [rdi+0x6e],ah
  437bbc:	jne    0x437c32
  437bbe:	ins    BYTE PTR es:[rdi],dx
  437bbf:	jae    0x437c20
  437bc1:	fs je  0x437c30
  437bc4:	jae    0x437c25
  437bc6:	movsxd ebp,DWORD PTR [rdi+0x6f]
  437bc9:	imul   ebp,DWORD PTR [rcx+0x65],0x5f
  437bcd:	jae    0x437c34
  437bcf:	outs   dx,BYTE PTR ds:[rsi]
  437bd0:	add    BYTE PTR fs:[rax],al
  437bd3:	add    BYTE PTR [rdi+0x756e6700],ah
  437bd9:	je     0x437c47
  437bdb:	jae    0x437c3c
  437bdd:	fs je  0x437c4c
  437be0:	jae    0x437c41
  437be2:	movsxd ebp,DWORD PTR [rdi+0x6f]
  437be5:	imul   ebp,DWORD PTR [rcx+0x65],0x5f
  437be9:	jbe    0x437c50
  437beb:	jb     0x437c56
  437bed:	data16 jns 0x437bf0
  437bf0:	stos   DWORD PTR es:[rdi],eax
  437bf1:	add    BYTE PTR [rdi+0x6e],ah
  437bf4:	jne    0x437c6a
  437bf6:	ins    BYTE PTR es:[rdi],dx
  437bf7:	jae    0x437c58
  437bf9:	fs je  0x437c68
  437bfc:	jae    0x437c5d
  437bfe:	jo     0x437c72
  437c00:	gs jae 0x437c77
  437c03:	(bad)  
  437c04:	je     0x437c6b
  437c06:	pop    rdi
  437c07:	jae    0x437c6e
  437c09:	je     0x437c0b
  437c0b:	add    BYTE PTR [rbp+0x756e6700],ch
  437c11:	je     0x437c7f
  437c13:	jae    0x437c74
  437c15:	fs je  0x437c84
  437c18:	jae    0x437c79
  437c1a:	jae    0x437c81
  437c1c:	je     0x437c7d
  437c1e:	ins    DWORD PTR es:[rdi],dx
  437c1f:	je     0x437c96
  437c21:	add    BYTE PTR [rax],al
  437c23:	add    BYTE PTR [rdi+0x756e6700],ch
  437c29:	je     0x437c97
  437c2b:	jae    0x437c8c
  437c2d:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  437c31:	movsxd esi,DWORD PTR [rbp+0x72]
  437c34:	jbe    0x437c9b
  437c36:	pop    rdi
  437c37:	addr32 gs je 0x437c3b
  437c3b:	add    BYTE PTR [rcx+0x756e6700],dh
  437c41:	je     0x437caf
  437c43:	jae    0x437ca4
  437c45:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  437c49:	movsxd esi,DWORD PTR [rbp+0x72]
  437c4c:	jbe    0x437cb3
  437c4e:	pop    rdi
  437c4f:	addr32 gs je 0x437cb2
  437c53:	outs   dx,BYTE PTR ds:[rsi]
  437c54:	(bad)  
  437c55:	ins    DWORD PTR es:[rdi],dx
  437c56:	add    BYTE PTR gs:[rbx+0x756e6700],dh
  437c5d:	je     0x437ccb
  437c5f:	jae    0x437cc0
  437c61:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  437c65:	movsxd esi,DWORD PTR [rbp+0x72]
  437c68:	jbe    0x437ccf
  437c6a:	pop    rdi
  437c6b:	addr32 gs je 0x437cce
  437c6f:	jae    0x437cda
  437c71:	jp     0x437cd8
  437c73:	add    BYTE PTR [rax+rax*1+0x74756e67],dh
  437c7a:	ins    BYTE PTR es:[rdi],dx
  437c7b:	jae    0x437cdc
  437c7d:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  437c81:	movsxd esi,DWORD PTR [rbp+0x72]
  437c84:	jbe    0x437ceb
  437c86:	pop    rdi
  437c87:	ins    BYTE PTR es:[rdi],dx
  437c88:	imul   esi,DWORD PTR [rbx+0x74],0x6700b500
  437c8f:	outs   dx,BYTE PTR ds:[rsi]
  437c90:	jne    0x437d06
  437c92:	ins    BYTE PTR es:[rdi],dx
  437c93:	jae    0x437cf4
  437c95:	gs jb  0x437d0a
  437c98:	outs   dx,DWORD PTR ds:[rsi]
  437c99:	jb     0x437cfa
  437c9b:	imul   esi,DWORD PTR [rbx+0x5f],0x61746166
  437ca2:	ins    BYTE PTR es:[rdi],dx
  437ca3:	add    BYTE PTR [rbp+0x756e6700],bh
  437ca9:	je     0x437d17
  437cab:	jae    0x437d0c
  437cad:	data16 jb 0x437d15
  437cb0:	add    BYTE PTR gs:[rax],al
  437cb3:	add    BYTE PTR [rdi+0x756e6700],bh
  437cb9:	je     0x437d27
  437cbb:	jae    0x437d1c
  437cbd:	ins    BYTE PTR es:[edi],dx
  437cbf:	outs   dx,DWORD PTR ds:[rsi]
  437cc0:	(bad)
  437cc5:	outs   dx,BYTE PTR ds:[rsi]
  437cc6:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xc00000
  437cce:	outs   dx,BYTE PTR ds:[esi]
  437cd0:	jne    0x437d46
  437cd2:	ins    BYTE PTR es:[rdi],dx
  437cd3:	jae    0x437d34
  437cd5:	ins    BYTE PTR es:[edi],dx
  437cd7:	outs   dx,DWORD PTR ds:[rsi]
  437cd8:	(bad)
  437cdd:	gs je  0x437d3f
  437ce0:	(bad)  
  437ce1:	jne    0x437d47
  437ce3:	imul   esi,DWORD PTR [rdi+rbx*2+0x6c],0x665f676f
  437ceb:	jne    0x437d5b
  437ced:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437cf1:	outs   dx,BYTE PTR ds:[rsi]
  437cf2:	add    BYTE PTR [rax],al
  437cf4:	rol    DWORD PTR [rax],0x67
  437cf7:	outs   dx,BYTE PTR ds:[rsi]
  437cf8:	jne    0x437d6e
  437cfa:	ins    BYTE PTR es:[rdi],dx
  437cfb:	jae    0x437d5c
  437cfd:	ins    BYTE PTR es:[edi],dx
  437cff:	outs   dx,DWORD PTR ds:[rsi]
  437d00:	(bad)
  437d05:	gs je  0x437d67
  437d08:	ins    BYTE PTR es:[rdi],dx
  437d09:	outs   dx,DWORD PTR ds:[rsi]
  437d0a:	addr32 pop rdi
  437d0c:	data16 jne 0x437d7d
  437d0f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  437d13:	outs   dx,BYTE PTR ds:[rsi]
  437d14:	add    BYTE PTR [rax],al
  437d16:	add    BYTE PTR [rax],al
  437d18:	ret    0x6700
  437d1b:	outs   dx,BYTE PTR ds:[rsi]
  437d1c:	jne    0x437d92
  437d1e:	ins    BYTE PTR es:[rdi],dx
  437d1f:	jae    0x437d80
  437d21:	ins    BYTE PTR es:[edi],dx
  437d23:	outs   dx,DWORD PTR ds:[rsi]
  437d24:	(bad)
  437d29:	gs je  0x437d8b
  437d2c:	ins    BYTE PTR es:[rdi],dx
  437d2d:	outs   dx,DWORD PTR ds:[rsi]
  437d2e:	addr32 pop rdi
  437d30:	ins    BYTE PTR es:[rdi],dx
  437d31:	gs jbe 0x437d99
  437d34:	ins    BYTE PTR es:[rdi],dx
  437d35:	add    BYTE PTR [rax],al
  437d37:	add    dh,al
  437d39:	add    BYTE PTR [rdi+0x6e],ah
  437d3c:	jne    0x437db2
  437d3e:	ins    BYTE PTR es:[rdi],dx
  437d3f:	jae    0x437da0
  437d41:	push   0x73646e61
  437d46:	push   0x656b61
  437d4b:	add    ch,cl
  437d4d:	add    BYTE PTR [rdi+0x6e],ah
  437d50:	jne    0x437dc6
  437d52:	ins    BYTE PTR es:[rdi],dx
  437d53:	jae    0x437db4
  437d55:	push   0x73646e61
  437d5a:	push   0x5f656b61
  437d5f:	jae    0x437dc6
  437d61:	je     0x437dc2
  437d63:	jo     0x437dd7
  437d65:	imul   esi,DWORD PTR [rsi+0x61],0x655f6574
  437d6c:	js     0x437de2
  437d6e:	outs   dx,BYTE PTR gs:[rsi]
  437d70:	jae    0x437ddb
  437d72:	outs   dx,DWORD PTR ds:[rsi]
  437d73:	outs   dx,BYTE PTR ds:[rsi]
  437d74:	jae    0x437d76
  437d76:	add    BYTE PTR [rax],al
  437d78:	xlat   BYTE PTR ds:[rbx]
  437d79:	add    BYTE PTR [rdi+0x6e],ah
  437d7c:	jne    0x437df2
  437d7e:	ins    BYTE PTR es:[rdi],dx
  437d7f:	jae    0x437de0
  437d81:	push   0x74726165
  437d86:	(bad)  
  437d87:	gs (bad) 
  437d89:	je     0x437dea
  437d8b:	outs   dx,BYTE PTR gs:[rsi]
  437d8d:	(bad)  
  437d8e:	(bad)  
  437d8f:	ins    BYTE PTR es:[rdi],dx
  437d90:	add    BYTE PTR gs:[rax],al
  437d93:	add    cl,bl
  437d95:	add    BYTE PTR [rdi+0x6e],ah
  437d98:	jne    0x437e0e
  437d9a:	ins    BYTE PTR es:[rdi],dx
  437d9b:	jae    0x437dfc
  437d9d:	push   0x74726165
  437da2:	(bad)  
  437da3:	gs (bad) 
  437da5:	je     0x437e06
  437da7:	jo     0x437e12
  437da9:	outs   dx,BYTE PTR ds:[rsi]
  437daa:	addr32 add dl,bl
  437dad:	add    BYTE PTR [rdi+0x6e],ah
  437db0:	jne    0x437e26
  437db2:	ins    BYTE PTR es:[rdi],dx
  437db3:	jae    0x437e14
  437db5:	push   0x74726165
  437dba:	(bad)  
  437dbb:	gs (bad) 
  437dbd:	je     0x437e1e
  437dbf:	jo     0x437e30
  437dc1:	outs   dx,BYTE PTR ds:[rsi]
  437dc2:	addr32 add al,ch
  437dc5:	add    BYTE PTR [rdi+0x6e],ah
  437dc8:	jne    0x437e3e
  437dca:	ins    BYTE PTR es:[rdi],dx
  437dcb:	jae    0x437e2c
  437dcd:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  437dd4:	jmp    0x75b1e4d9
  437dd9:	je     0x437e47
  437ddb:	jae    0x437e3c
  437ddd:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  437de1:	outs   dx,BYTE PTR gs:[esi]
  437de4:	gs jb  0x437e48
  437de7:	je     0x437e4e
  437de9:	add    BYTE PTR [rax],al
  437deb:	add    dl,ch
  437ded:	add    BYTE PTR [rdi+0x6e],ah
  437df0:	jne    0x437e66
  437df2:	ins    BYTE PTR es:[rdi],dx
  437df3:	jae    0x437e54
  437df5:	imul   edi,DWORD PTR [rax+0x5f],0x67
  437df9:	gs je  0x437dfc
  437dfc:	in     al,dx
  437dfd:	add    BYTE PTR [rdi+0x6e],ah
  437e00:	jne    0x437e76
  437e02:	ins    BYTE PTR es:[rdi],dx
  437e03:	jae    0x437e64
  437e05:	imul   edi,DWORD PTR [rax+0x5f],0x67
  437e09:	gs je  0x437e6b
  437e0c:	outs   dx,BYTE PTR ds:[rsi]
  437e0d:	(bad)  
  437e0e:	ins    DWORD PTR es:[rdi],dx
  437e0f:	add    BYTE PTR gs:[rax],al
  437e12:	add    BYTE PTR [rax],al
  437e14:	in     eax,dx
  437e15:	add    BYTE PTR [rdi+0x6e],ah
  437e18:	jne    0x437e8e
  437e1a:	ins    BYTE PTR es:[rdi],dx
  437e1b:	jae    0x437e7c
  437e1d:	imul   edi,DWORD PTR [rax+0x5f],0x6c
  437e21:	imul   esi,DWORD PTR [rbx+0x74],0x0
  437e28:	out    dx,eax
  437e29:	add    BYTE PTR [rdi+0x6e],ah
  437e2c:	jne    0x437ea2
  437e2e:	ins    BYTE PTR es:[rdi],dx
  437e2f:	jae    0x437e90
  437e31:	ins    DWORD PTR es:[rdi],dx
  437e32:	(bad)  
  437e33:	movsxd ebx,DWORD PTR [rdi+0x67]
  437e36:	gs je  0x437e39
  437e39:	add    BYTE PTR [rax],al
  437e3b:	add    dl,dh
  437e3d:	add    BYTE PTR [rdi+0x6e],ah
  437e40:	jne    0x437eb6
  437e42:	ins    BYTE PTR es:[rdi],dx
  437e43:	jae    0x437ea4
  437e45:	ins    DWORD PTR es:[rdi],dx
  437e46:	(bad)  
  437e47:	movsxd ebx,DWORD PTR [rdi+0x67]
  437e4a:	gs je  0x437eac
  437e4d:	outs   dx,BYTE PTR ds:[rsi]
  437e4e:	(bad)  
  437e4f:	ins    DWORD PTR es:[rdi],dx
  437e50:	add    BYTE PTR gs:[rax],al
  437e53:	add    ah,dh
  437e55:	add    BYTE PTR [rdi+0x6e],ah
  437e58:	jne    0x437ece
  437e5a:	ins    BYTE PTR es:[rdi],dx
  437e5b:	jae    0x437ebc
  437e5d:	ins    DWORD PTR es:[rdi],dx
  437e5e:	(bad)  
  437e5f:	movsxd ebx,DWORD PTR [rdi+0x6c]
  437e62:	imul   esi,DWORD PTR [rbx+0x74],0xf5000000
  437e69:	add    BYTE PTR [rdi+0x6e],ah
  437e6c:	jne    0x437ee2
  437e6e:	ins    BYTE PTR es:[rdi],dx
  437e6f:	jae    0x437ed0
  437e71:	ins    DWORD PTR es:[rdi],dx
  437e72:	(bad)  
  437e73:	ins    BYTE PTR es:[rdi],dx
  437e74:	ins    BYTE PTR es:[rdi],dx
  437e75:	outs   dx,DWORD PTR ds:[rsi]
  437e76:	movsxd eax,DWORD PTR [rax]
  437e78:	sbb    al,0x1
  437e7a:	outs   dx,BYTE PTR ds:[esi]
  437e7c:	jne    0x437ef2
  437e7e:	ins    BYTE PTR es:[rdi],dx
  437e7f:	jae    0x437ee0
  437e81:	outs   dx,DWORD PTR ds:[rsi]
  437e82:	movsxd esi,DWORD PTR [rbx+0x70]
  437e85:	pop    rdi
  437e86:	jae    0x437efc
  437e88:	(bad)  
  437e89:	je     0x437f00
  437e8b:	jae    0x437eec
  437e8d:	jb     0x437ef4
  437e8f:	jno    0x437f06
  437e91:	gs jae 0x437f08
  437e94:	pop    rdi
  437e95:	imul   esi,DWORD PTR [rbx+0x5f],0x63656863
  437e9c:	imul   esp,DWORD PTR [rbp+0x64],0x0
  437ea0:	and    al,0x1
  437ea2:	outs   dx,BYTE PTR ds:[esi]
  437ea4:	jne    0x437f1a
  437ea6:	ins    BYTE PTR es:[rdi],dx
  437ea7:	jae    0x437f08
  437ea9:	outs   dx,DWORD PTR ds:[rsi]
  437eaa:	jo     0x437f11
  437eac:	outs   dx,BYTE PTR ds:[rsi]
  437ead:	jo     0x437f16
  437eaf:	jo     0x437f10
  437eb1:	movsxd esi,DWORD PTR [rdx+0x74]
  437eb4:	pop    rdi
  437eb5:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x1250074
  437ebe:	outs   dx,BYTE PTR ds:[esi]
  437ec0:	jne    0x437f36
  437ec2:	ins    BYTE PTR es:[rdi],dx
  437ec3:	jae    0x437f24
  437ec5:	outs   dx,DWORD PTR ds:[rsi]
  437ec6:	jo     0x437f2d
  437ec8:	outs   dx,BYTE PTR ds:[rsi]
  437ec9:	jo     0x437f32
  437ecb:	jo     0x437f2c
  437ecd:	movsxd esi,DWORD PTR [rdx+0x74]
  437ed0:	pop    rdi
  437ed1:	gs js  0x437f44
  437ed4:	outs   dx,DWORD PTR ds:[rsi]
  437ed5:	jb     0x437f4b
  437ed7:	add    BYTE PTR [rdi],bh
  437ed9:	add    DWORD PTR [rdi+0x6e],esp
  437edc:	jne    0x437f52
  437ede:	ins    BYTE PTR es:[rdi],dx
  437edf:	jae    0x437f40
  437ee1:	outs   dx,DWORD PTR ds:[rsi]
  437ee2:	jo     0x437f49
  437ee4:	outs   dx,BYTE PTR ds:[rsi]
  437ee5:	jo     0x437f4e
  437ee7:	jo     0x437f48
  437ee9:	movsxd esi,DWORD PTR [rdx+0x74]
  437eec:	pop    rdi
  437eed:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
  437ef4:	rex add DWORD PTR [rdi+0x6e],esp
  437ef8:	jne    0x437f6e
  437efa:	ins    BYTE PTR es:[rdi],dx
  437efb:	jae    0x437f5c
  437efd:	outs   dx,DWORD PTR ds:[rsi]
  437efe:	jo     0x437f65
  437f00:	outs   dx,BYTE PTR ds:[rsi]
  437f01:	jo     0x437f6a
  437f03:	jo     0x437f64
  437f05:	movsxd esi,DWORD PTR [rdx+0x74]
  437f08:	pop    rdi
  437f09:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  437f10:	add    DWORD PTR [r15+0x6e],esp
  437f14:	jne    0x437f8a
  437f16:	ins    BYTE PTR es:[rdi],dx
  437f17:	jae    0x437f78
  437f19:	outs   dx,DWORD PTR ds:[rsi]
  437f1a:	jo     0x437f81
  437f1c:	outs   dx,BYTE PTR ds:[rsi]
  437f1d:	jo     0x437f86
  437f1f:	jo     0x437f80
  437f21:	movsxd esi,DWORD PTR [rdx+0x74]
  437f24:	pop    rdi
  437f25:	jo     0x437f99
  437f27:	imul   ebp,DWORD PTR [rsi+0x74],0x1760000
  437f2e:	outs   dx,BYTE PTR ds:[esi]
  437f30:	jne    0x437fa6
  437f32:	ins    BYTE PTR es:[rdi],dx
  437f33:	jae    0x437f94
  437f35:	jo     0x437fa2
  437f37:	pop    rdi
  437f38:	(bad)  
  437f39:	ins    BYTE PTR es:[rdi],dx
  437f3a:	outs   dx,DWORD PTR ds:[esi]
  437f3c:	jb     0x437fa7
  437f3e:	je     0x437fa8
  437f40:	ins    DWORD PTR es:[rdi],dx
  437f41:	pop    rdi
  437f42:	addr32 gs je 0x437fa5
  437f46:	outs   dx,BYTE PTR ds:[rsi]
  437f47:	(bad)  
  437f48:	ins    DWORD PTR es:[rdi],dx
  437f49:	add    BYTE PTR gs:[rax],al
  437f4c:	jnp    0x437f4f
  437f4e:	outs   dx,BYTE PTR ds:[esi]
  437f50:	jne    0x437fc6
  437f52:	ins    BYTE PTR es:[rdi],dx
  437f53:	jae    0x437fb4
  437f55:	jo     0x437fc2
  437f57:	pop    rdi
  437f58:	ins    BYTE PTR es:[rdi],dx
  437f59:	imul   esi,DWORD PTR [rbx+0x74],0x0
  437f60:	mov    esi,0x756e6701
  437f65:	je     0x437fd3
  437f67:	jae    0x437fc8
  437f69:	jo     0x437fdd
  437f6b:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  437f72:	movsxd esp,DWORD PTR [rbp+0x72]
  437f75:	je     0x437fe0
  437f77:	imul   sp,WORD PTR [rbx+0x61],0x6574
  437f7d:	pop    rdi
  437f7e:	je     0x437ff9
  437f80:	jo     0x437fe7
  437f82:	pop    rdi
  437f83:	ins    BYTE PTR es:[rdi],dx
  437f84:	imul   esi,DWORD PTR [rbx+0x74],0x6701c000
  437f8b:	outs   dx,BYTE PTR ds:[rsi]
  437f8c:	jne    0x438002
  437f8e:	ins    BYTE PTR es:[rdi],dx
  437f8f:	jae    0x437ff0
  437f91:	jo     0x438005
  437f93:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  437f9a:	movsxd ebp,DWORD PTR [rdi+0x6d]
  437f9d:	jo     0x438011
  437f9f:	gs jae 0x438015
  437fa2:	imul   ebp,DWORD PTR [rdi+0x6e],0x73696c5f
  437fa9:	je     0x437fab
  437fab:	add    dl,al
  437fad:	add    DWORD PTR [rdi+0x6e],esp
  437fb0:	jne    0x438026
  437fb2:	ins    BYTE PTR es:[rdi],dx
  437fb3:	jae    0x438014
  437fb5:	jo     0x438029
  437fb7:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  437fbe:	movsxd esp,DWORD PTR gs:[rbx+0x5f]
  437fc2:	movsxd esi,DWORD PTR [rbp+0x72]
  437fc5:	jbe    0x43802c
  437fc7:	pop    rdi
  437fc8:	ins    BYTE PTR es:[rdi],dx
  437fc9:	imul   esi,DWORD PTR [rbx+0x74],0x0
  437fd0:	ret    
  437fd1:	add    DWORD PTR [rdi+0x6e],esp
  437fd4:	jne    0x43804a
  437fd6:	ins    BYTE PTR es:[rdi],dx
  437fd7:	jae    0x438038
  437fd9:	jo     0x43804d
  437fdb:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  437fe2:	addr32 gs je 0x438045
  437fe6:	movsxd ebp,DWORD PTR [rcx+0x70]
  437fe9:	push   0x735f7265
  437fee:	jne    0x438059
  437ff0:	je     0x438057
  437ff2:	pop    rdi
  437ff3:	imul   ebp,DWORD PTR [rsi+0x64],0x7865
  437ffa:	add    BYTE PTR [rax],al
  437ffc:	(bad)
  438000:	jne    0x438076
  438002:	ins    BYTE PTR es:[rdi],dx
  438003:	jae    0x438064
  438005:	jo     0x438079
  438007:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  43800e:	imul   ebp,DWORD PTR [rsi+0x69],0xc7000074
  438015:	add    DWORD PTR [rdi+0x6e],esp
  438018:	jne    0x43808e
  43801a:	ins    BYTE PTR es:[rdi],dx
  43801b:	jae    0x43807c
  43801d:	jo     0x438091
  43801f:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  438026:	jo     0x43809a
  438028:	outs   dx,DWORD PTR ds:[rsi]
  438029:	je     0x43809a
  43802b:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43802e:	pop    rdi
  43802f:	ins    BYTE PTR es:[rdi],dx
  438030:	imul   esi,DWORD PTR [rbx+0x74],0x6701c900
  438037:	outs   dx,BYTE PTR ds:[rsi]
  438038:	jne    0x4380ae
  43803a:	ins    BYTE PTR es:[rdi],dx
  43803b:	jae    0x43809c
  43803d:	jo     0x4380b1
  43803f:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  438046:	jae    0x4380ad
  438048:	je     0x4380a9
  43804a:	imul   esi,DWORD PTR fs:[rdx+0x65],0x7463
  438052:	add    BYTE PTR [rax],al
  438054:	retf   0x6701
  438057:	outs   dx,BYTE PTR ds:[rsi]
  438058:	jne    0x4380ce
  43805a:	ins    BYTE PTR es:[rdi],dx
  43805b:	jae    0x4380bc
  43805d:	jo     0x4380d1
  43805f:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  438066:	jae    0x4380d1
  438068:	outs   dx,BYTE PTR ds:[esi]
  43806a:	pop    rdi
  43806b:	ins    BYTE PTR es:[rdi],dx
  43806c:	imul   esi,DWORD PTR [rbx+0x74],0x6701ea00
  438073:	outs   dx,BYTE PTR ds:[rsi]
  438074:	jne    0x4380ea
  438076:	ins    BYTE PTR es:[rdi],dx
  438077:	jae    0x4380d8
  438079:	jo     0x4380ed
  43807b:	outs   dx,DWORD PTR ds:[rsi]
  43807c:	je     0x4380ed
  43807e:	movsxd ebp,DWORD PTR [rdi+0x6c]
  438081:	pop    rdi
  438082:	addr32 gs je 0x4380e5
  438086:	outs   dx,BYTE PTR ds:[rsi]
  438087:	(bad)  
  438088:	ins    DWORD PTR es:[rdi],dx
  438089:	add    BYTE PTR gs:[rax],al
  43808c:	jmp    0x43808f
  43808e:	outs   dx,BYTE PTR ds:[esi]
  438090:	jne    0x438106
  438092:	ins    BYTE PTR es:[rdi],dx
  438093:	jae    0x4380f4
  438095:	jo     0x438109
  438097:	outs   dx,DWORD PTR ds:[rsi]
  438098:	je     0x438109
  43809a:	movsxd ebp,DWORD PTR [rdi+0x6c]
  43809d:	pop    rdi
  43809e:	addr32 gs je 0x438101
  4380a2:	jbe    0x438109
  4380a4:	jb     0x438119
  4380a6:	imul   ebp,DWORD PTR [rdi+0x6e],0xec000000
  4380ad:	add    DWORD PTR [rdi+0x6e],esp
  4380b0:	jne    0x438126
  4380b2:	ins    BYTE PTR es:[rdi],dx
  4380b3:	jae    0x438114
  4380b5:	jo     0x438129
  4380b7:	outs   dx,DWORD PTR ds:[rsi]
  4380b8:	je     0x438129
  4380ba:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4380bd:	pop    rdi
  4380be:	ins    BYTE PTR es:[rdi],dx
  4380bf:	imul   esi,DWORD PTR [rbx+0x74],0x1ee0000
  4380c6:	outs   dx,BYTE PTR ds:[esi]
  4380c8:	jne    0x43813e
  4380ca:	ins    BYTE PTR es:[rdi],dx
  4380cb:	jae    0x43812c
  4380cd:	jo     0x438142
  4380cf:	imul   ebx,DWORD PTR [rdi+0x61],0x6c
  4380d3:	ins    BYTE PTR es:[rdi],dx
  4380d4:	outs   dx,DWORD PTR ds:[rsi]
  4380d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4380d8:	gs pop rdi
  4380da:	jae    0x438141
  4380dc:	jb     0x438154
  4380de:	gs jb  0x438140
  4380e1:	movsxd esi,DWORD PTR [rdx+0x65]
  4380e4:	fs outs dx,BYTE PTR gs:[rsi]
  4380e7:	je     0x438152
  4380e9:	(bad)  
  4380ea:	ins    BYTE PTR es:[rdi],dx
  4380eb:	jae    0x4380ed
  4380ed:	add    BYTE PTR [rax],al
  4380ef:	add    bh,ch
  4380f1:	add    DWORD PTR [rdi+0x6e],esp
  4380f4:	jne    0x43816a
  4380f6:	ins    BYTE PTR es:[rdi],dx
  4380f7:	jae    0x438158
  4380f9:	jo     0x43816e
  4380fb:	imul   ebx,DWORD PTR [rdi+0x63],0x6c
  4380ff:	imul   esp,DWORD PTR [rbp+0x6e],0x65675f74
  438106:	je     0x438167
  438108:	push   0x746e69
  43810d:	add    BYTE PTR [rax],al
  43810f:	add    dl,dh
  438111:	add    DWORD PTR [rdi+0x6e],esp
  438114:	jne    0x43818a
  438116:	ins    BYTE PTR es:[rdi],dx
  438117:	jae    0x438178
  438119:	jo     0x43818e
  43811b:	imul   ebx,DWORD PTR [rdi+0x73],0x65
  43811f:	jb     0x438197
  438121:	gs jb  0x438183
  438124:	addr32 gs je 0x438187
  438128:	jne    0x43819d
  43812a:	gs jb  0x43819b
  43812d:	(bad)  
  43812e:	ins    DWORD PTR es:[rdi],dx
  43812f:	add    BYTE PTR gs:[rax],al
  438132:	add    BYTE PTR [rax],al
  438134:	test   BYTE PTR [rcx],0x67
  438137:	outs   dx,BYTE PTR ds:[rsi]
  438138:	jne    0x4381ae
  43813a:	ins    BYTE PTR es:[rdi],dx
  43813b:	jae    0x43819c
  43813d:	jo     0x4381b2
  43813f:	imul   ebx,DWORD PTR [rdi+0x73],0x65
  438143:	je     0x4381a4
  438145:	jae    0x4381ac
  438147:	jb     0x4381bf
  438149:	gs jb  0x4381ab
  43814c:	movsxd esi,DWORD PTR [rdx+0x65]
  43814f:	fs outs dx,BYTE PTR gs:[rsi]
  438152:	je     0x4381bd
  438154:	(bad)  
  438155:	ins    BYTE PTR es:[rdi],dx
  438156:	jae    0x4381b7
  438158:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  43815f:	add    al,bh
  438161:	add    DWORD PTR [rdi+0x6e],esp
  438164:	jne    0x4381da
  438166:	ins    BYTE PTR es:[rdi],dx
  438167:	jae    0x4381c8
  438169:	jo     0x4381de
  43816b:	imul   ebx,DWORD PTR [rdi+0x73],0x65
  43816f:	je     0x4381d0
  438171:	jae    0x4381d8
  438173:	jb     0x4381eb
  438175:	gs jb  0x4381d7
  438178:	movsxd esi,DWORD PTR [rdx+0x65]
  43817b:	fs outs dx,BYTE PTR gs:[rsi]
  43817e:	je     0x4381e9
  438180:	(bad)  
  438181:	ins    BYTE PTR es:[rdi],dx
  438182:	jae    0x4381e3
  438184:	push   0x746e69
  438189:	add    BYTE PTR [rax],al
  43818b:	add    dl,bh
  43818d:	add    DWORD PTR [rdi+0x6e],esp
  438190:	jne    0x438206
  438192:	ins    BYTE PTR es:[rdi],dx
  438193:	jae    0x4381f4
  438195:	jo     0x43820a
  438197:	imul   ebx,DWORD PTR [rdi+0x73],0x65
  43819b:	je     0x4381fc
  43819d:	jae    0x438204
  43819f:	jb     0x438217
  4381a1:	gs jb  0x438203
  4381a4:	jo     0x438207
  4381a6:	jb     0x438209
  4381a8:	ins    DWORD PTR es:[rdi],dx
  4381a9:	jae    0x43820a
  4381ab:	data16 jne 0x43821c
  4381ae:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4381b2:	outs   dx,BYTE PTR ds:[rsi]
  4381b3:	add    BYTE PTR [rbx],ch
  4381b5:	add    ah,BYTE PTR [rdi+0x6e]
  4381b8:	jne    0x43822e
  4381ba:	ins    BYTE PTR es:[rdi],dx
  4381bb:	jae    0x43821c
  4381bd:	jb     0x438224
  4381bf:	movsxd ebp,DWORD PTR [rdi+0x72]
  4381c2:	fs pop rdi
  4381c4:	jb     0x43822b
  4381c6:	movsxd esi,DWORD PTR [rsi+0x0]
  4381c9:	add    BYTE PTR [rax],al
  4381cb:	add    BYTE PTR [rip+0x756e6702],ch        # 0x75b1e8d3
  4381d1:	je     0x43823f
  4381d3:	jae    0x438234
  4381d5:	jb     0x43823c
  4381d7:	movsxd ebp,DWORD PTR [rdi+0x72]
  4381da:	fs pop rdi
  4381dc:	jb     0x438243
  4381de:	movsxd esi,DWORD PTR [rsi+0x5f]
  4381e1:	jae    0x438248
  4381e3:	jno    0x4381e5
  4381e5:	add    BYTE PTR [rax],al
  4381e7:	add    BYTE PTR [rsi],ch
  4381e9:	add    ah,BYTE PTR [rdi+0x6e]
  4381ec:	jne    0x438262
  4381ee:	ins    BYTE PTR es:[rdi],dx
  4381ef:	jae    0x438250
  4381f1:	jb     0x438258
  4381f3:	movsxd ebp,DWORD PTR [rdi+0x72]
  4381f6:	fs pop rdi
  4381f8:	jae    0x43825f
  4381fa:	outs   dx,BYTE PTR ds:[rsi]
  4381fb:	add    BYTE PTR fs:[rax],al
  4381fe:	add    BYTE PTR [rax],al
  438200:	(bad)  
  438201:	add    ah,BYTE PTR [rdi+0x6e]
  438204:	jne    0x43827a
  438206:	ins    BYTE PTR es:[rdi],dx
  438207:	jae    0x438268
  438209:	jb     0x438270
  43820b:	movsxd ebp,DWORD PTR [rdi+0x72]
  43820e:	fs pop rdi
  438210:	jae    0x438277
  438212:	outs   dx,BYTE PTR ds:[rsi]
  438213:	fs pop rdi
  438215:	jb     0x438278
  438217:	outs   dx,BYTE PTR ds:[rsi]
  438218:	add    BYTE PTR gs:[eax],al
  43821c:	xor    al,BYTE PTR [rdx]
  43821e:	outs   dx,BYTE PTR ds:[esi]
  438220:	jne    0x438296
  438222:	ins    BYTE PTR es:[rdi],dx
  438223:	jae    0x438284
  438225:	jb     0x43828c
  438227:	movsxd ebp,DWORD PTR [rdi+0x72]
  43822a:	fs pop rdi
  43822c:	jae    0x438293
  43822e:	je     0x43828f
  438230:	je     0x43829b
  438232:	ins    DWORD PTR es:[rdi],dx
  438233:	outs   dx,DWORD PTR gs:[rsi]
  438235:	jne    0x4382ab
  438237:	add    BYTE PTR [rip+0x756e6702],dh        # 0x75b1e93f
  43823d:	je     0x4382ab
  43823f:	jae    0x4382a0
  438241:	jb     0x4382a8
  438243:	push   0x73646e61
  438248:	push   0x656b61
  43824d:	add    BYTE PTR [rax],al
  43824f:	add    BYTE PTR [rax],bh
  438251:	add    ah,BYTE PTR [rdi+0x6e]
  438254:	jne    0x4382ca
  438256:	ins    BYTE PTR es:[rdi],dx
  438257:	jae    0x4382b8
  438259:	jae    0x4382bc
  43825b:	gs pop di
  43825e:	jb     0x4382c5
  438260:	outs   dx,BYTE PTR ds:[rsi]
  438261:	outs   dx,DWORD PTR gs:[esi]
  438264:	je     0x4382cf
  438266:	(bad)  
  438267:	je     0x4382d2
  438269:	outs   dx,DWORD PTR ds:[rsi]
  43826a:	outs   dx,BYTE PTR ds:[rsi]
  43826b:	pop    rdi
  43826c:	jae    0x4382e2
  43826e:	(bad)  
  43826f:	je     0x4382e6
  438271:	jae    0x438273
  438273:	add    BYTE PTR [rdx],bh
  438275:	add    ah,BYTE PTR [rdi+0x6e]
  438278:	jne    0x4382ee
  43827a:	ins    BYTE PTR es:[rdi],dx
  43827b:	jae    0x4382dc
  43827d:	jae    0x4382e4
  43827f:	movsxd ebx,DWORD PTR [rdi+0x70]
  438282:	(bad)  
  438283:	jb     0x4382e6
  438285:	ins    DWORD PTR es:[rdi],dx
  438286:	pop    rdi
  438287:	je     0x4382f8
  438289:	pop    rdi
  43828a:	jo     0x4382f7
  43828c:	pop    rdi
  43828d:	(bad)  
  43828e:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x23d0000
  438296:	outs   dx,BYTE PTR ds:[esi]
  438298:	jne    0x43830e
  43829a:	ins    BYTE PTR es:[rdi],dx
  43829b:	jae    0x4382fc
  43829d:	jae    0x438304
  43829f:	jb     0x438317
  4382a1:	gs jb  0x438303
  4382a4:	outs   dx,BYTE PTR ds:[rsi]
  4382a5:	(bad)  
  4382a6:	ins    DWORD PTR es:[rdi],dx
  4382a7:	gs pop rdi
  4382a9:	addr32 gs je 0x4382ad
  4382ad:	add    BYTE PTR [rax],al
  4382af:	add    BYTE PTR [rdi],bh
  4382b1:	add    ah,BYTE PTR [rdi+0x6e]
  4382b4:	jne    0x43832a
  4382b6:	ins    BYTE PTR es:[rdi],dx
  4382b7:	jae    0x438318
  4382b9:	jae    0x438320
  4382bb:	jae    0x438330
  4382bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x6168635f
  4382c4:	outs   dx,BYTE PTR ds:[rsi]
  4382c5:	outs   dx,BYTE PTR ds:[rsi]
  4382c6:	gs ins BYTE PTR es:[rdi],dx
  4382c8:	pop    rdi
  4382c9:	(bad)  
  4382ca:	imul   ebp,DWORD PTR [rsi+0x64],0x676e69
  4382d1:	add    BYTE PTR [rax],al
  4382d3:	add    BYTE PTR [rcx+0x2],al
  4382d6:	outs   dx,BYTE PTR ds:[esi]
  4382d8:	jne    0x43834e
  4382da:	ins    BYTE PTR es:[rdi],dx
  4382db:	jae    0x43833c
  4382dd:	jae    0x438344
  4382df:	jae    0x438354
  4382e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d74655f
  4382e8:	pop    rdi
  4382e9:	jae    0x43835f
  4382eb:	(bad)  
  4382ec:	je     0x438363
  4382ee:	jae    0x4382f0
  4382f0:	rex.X add spl,BYTE PTR [rdi+0x6e]
  4382f4:	jne    0x43836a
  4382f6:	ins    BYTE PTR es:[rdi],dx
  4382f7:	jae    0x438358
  4382f9:	jae    0x438360
  4382fb:	jae    0x438370
  4382fd:	imul   ebp,DWORD PTR [rdi+0x6e],0x7478655f
  438304:	pop    rdi
  438305:	ins    DWORD PTR es:[rdi],dx
  438306:	(bad)  
  438307:	jae    0x43837d
  438309:	gs jb  0x43836b
  43830c:	jae    0x438373
  43830e:	movsxd esi,DWORD PTR [rdx+0x65]
  438311:	je     0x438372
  438313:	jae    0x438389
  438315:	(bad)  
  438316:	je     0x43838d
  438318:	jae    0x43831a
  43831a:	add    BYTE PTR [rax],al
  43831c:	rex.RX add r12b,BYTE PTR [rdi+0x6e]
  438320:	jne    0x438396
  438322:	ins    BYTE PTR es:[rdi],dx
  438323:	jae    0x438384
  438325:	jae    0x43838c
  438327:	jae    0x43839c
  438329:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  438330:	pop    rdi
  438331:	fs gs jae 0x438398
  438335:	add    BYTE PTR [rax],al
  438337:	add    BYTE PTR [rdi+0x2],al
  43833a:	outs   dx,BYTE PTR ds:[esi]
  43833c:	jne    0x4383b2
  43833e:	ins    BYTE PTR es:[rdi],dx
  43833f:	jae    0x4383a0
  438341:	jae    0x4383a8
  438343:	jae    0x4383b8
  438345:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  43834c:	pop    rdi
  43834d:	imul   esp,DWORD PTR [rax+rax*1+0x49],0x756e6702
  438355:	je     0x4383c3
  438357:	jae    0x4383b8
  438359:	jae    0x4383c0
  43835b:	jae    0x4383d0
  43835d:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465675f
  438364:	pop    rdi
  438365:	jo     0x4383db
  438367:	jb     0x438369
  438369:	add    BYTE PTR [rax],al
  43836b:	add    BYTE PTR [rdx+rax*1+0x67],cl
  43836f:	outs   dx,BYTE PTR ds:[rsi]
  438370:	jne    0x4383e6
  438372:	ins    BYTE PTR es:[rdi],dx
  438373:	jae    0x4383d4
  438375:	jae    0x4383dc
  438377:	jae    0x4383ec
  438379:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f73695f
  438380:	jb     0x4383e7
  438382:	jae    0x4383f9
  438384:	ins    DWORD PTR es:[rdi],dx
  438385:	gs add BYTE PTR fs:[rcx+0x2],dl
  43838a:	outs   dx,BYTE PTR ds:[esi]
  43838c:	jne    0x438402
  43838e:	ins    BYTE PTR es:[rdi],dx
  43838f:	jae    0x4383f0
  438391:	jae    0x4383f8
  438393:	jae    0x438408
  438395:	imul   ebp,DWORD PTR [rdi+0x6e],0x7465735f
  43839c:	pop    rdi
  43839d:	jo     0x438413
  43839f:	jb     0x4383a1
  4383a1:	add    BYTE PTR [rax],al
  4383a3:	add    BYTE PTR [rsi+0x2],dl
  4383a6:	outs   dx,BYTE PTR ds:[esi]
  4383a8:	jne    0x43841e
  4383aa:	ins    BYTE PTR es:[rdi],dx
  4383ab:	jae    0x43840c
  4383ad:	jae    0x438414
  4383af:	jae    0x438424
  4383b1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6369745f
  4383b8:	imul   esp,DWORD PTR [rbp+0x74],0x5f
  4383bc:	outs   dx,BYTE PTR gs:[rsi]
  4383be:	(bad)  
  4383bf:	(bad)  
  4383c0:	ins    BYTE PTR es:[rdi],dx
  4383c1:	gs pop rdi
  4383c3:	jae    0x43842a
  4383c5:	jb     0x43843d
  4383c7:	gs jb  0x4383ca
  4383ca:	add    BYTE PTR [rax],al
  4383cc:	push   rdi
  4383cd:	add    ah,BYTE PTR [rdi+0x6e]
  4383d0:	jne    0x438446
  4383d2:	ins    BYTE PTR es:[rdi],dx
  4383d3:	jae    0x438434
  4383d5:	jae    0x43843c
  4383d7:	jae    0x43844c
  4383d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6369745f
  4383e0:	imul   esp,DWORD PTR [rbp+0x74],0x5f
  4383e4:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  4383e8:	outs   dx,BYTE PTR gs:[esi]
  4383eb:	gs jb  0x43844f
  4383ee:	je     0x438455
  4383f0:	add    BYTE PTR [rax],al
  4383f2:	add    BYTE PTR [rax],al
  4383f4:	pop    rcx
  4383f5:	add    ah,BYTE PTR [rdi+0x6e]
  4383f8:	jne    0x43846e
  4383fa:	ins    BYTE PTR es:[rdi],dx
  4383fb:	jae    0x43845c
  4383fd:	jae    0x438468
  4383ff:	outs   dx,BYTE PTR ds:[esi]
  438401:	pop    rdi
  438402:	(bad)  
  438403:	ins    BYTE PTR es:[rdi],dx
  438404:	outs   dx,DWORD PTR ds:[esi]
  438406:	jb     0x438471
  438408:	je     0x438472
  43840a:	ins    DWORD PTR es:[rdi],dx
  43840b:	pop    rdi
  43840c:	addr32 gs je 0x438410
  438410:	pop    rdx
  438411:	add    ah,BYTE PTR [rdi+0x6e]
  438414:	jne    0x43848a
  438416:	ins    BYTE PTR es:[rdi],dx
  438417:	jae    0x438478
  438419:	jae    0x438484
  43841b:	outs   dx,BYTE PTR ds:[esi]
  43841d:	pop    rdi
  43841e:	(bad)  
  43841f:	ins    BYTE PTR es:[rdi],dx
  438420:	outs   dx,DWORD PTR ds:[esi]
  438422:	jb     0x43848d
  438424:	je     0x43848e
  438426:	ins    DWORD PTR es:[rdi],dx
  438427:	pop    rdi
  438428:	addr32 gs je 0x43848b
  43842c:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  438430:	outs   dx,BYTE PTR ds:[rsi]
  438431:	je     0x438433
  438433:	add    BYTE PTR [rsi+0x2],bl
  438436:	outs   dx,BYTE PTR ds:[esi]
  438438:	jne    0x4384ae
  43843a:	ins    BYTE PTR es:[rdi],dx
  43843b:	jae    0x43849c
  43843d:	jae    0x4384a8
  43843f:	outs   dx,BYTE PTR ds:[esi]
  438441:	pop    rdi
  438442:	addr32 gs je 0x4384a5
  438446:	outs   dx,BYTE PTR ds:[rsi]
  438447:	(bad)  
  438448:	ins    DWORD PTR es:[rdi],dx
  438449:	add    BYTE PTR gs:[rax],al
  43844c:	(bad)
  438451:	je     0x4384bf
  438453:	jae    0x4384b4
  438455:	jae    0x4384c0
  438457:	outs   dx,BYTE PTR ds:[esi]
  438459:	pop    rdi
  43845a:	ins    BYTE PTR es:[rdi],dx
  43845b:	imul   esi,DWORD PTR [rbx+0x74],0x26e0000
  438462:	outs   dx,BYTE PTR ds:[esi]
  438464:	jne    0x4384da
  438466:	ins    BYTE PTR es:[rdi],dx
  438467:	jae    0x4384c8
  438469:	jae    0x4384dd
  43846b:	jo     0x4384cc
  43846d:	(bad)  
  43846e:	ins    BYTE PTR es:[rdi],dx
  43846f:	ins    BYTE PTR es:[rdi],dx
  438470:	outs   dx,DWORD PTR ds:[rsi]
  438471:	movsxd esp,DWORD PTR [rcx+0x74]
  438474:	gs pop rdi
  438476:	jae    0x4384dd
  438478:	jb     0x4384f0
  43847a:	gs jb  0x4384dc
  43847d:	movsxd esi,DWORD PTR [rdx+0x65]
  438480:	fs outs dx,BYTE PTR gs:[rsi]
  438483:	je     0x4384ee
  438485:	(bad)  
  438486:	ins    BYTE PTR es:[rdi],dx
  438487:	jae    0x438489
  438489:	add    BYTE PTR [rax],al
  43848b:	add    BYTE PTR [rbp+0x2],dh
  43848e:	outs   dx,BYTE PTR ds:[esi]
  438490:	jne    0x438506
  438492:	ins    BYTE PTR es:[rdi],dx
  438493:	jae    0x4384f4
  438495:	jae    0x438509
  438497:	jo     0x4384f8
  438499:	jae    0x438500
  43849b:	jb     0x438513
  43849d:	gs jb  0x4384ff
  4384a0:	addr32 gs je 0x438503
  4384a4:	jne    0x438519
  4384a6:	gs jb  0x438517
  4384a9:	(bad)  
  4384aa:	ins    DWORD PTR es:[rdi],dx
  4384ab:	add    BYTE PTR gs:[rax],al
  4384ae:	add    BYTE PTR [rax],al
  4384b0:	jns    0x4384b4
  4384b2:	outs   dx,BYTE PTR ds:[esi]
  4384b4:	jne    0x43852a
  4384b6:	ins    BYTE PTR es:[rdi],dx
  4384b7:	jae    0x438518
  4384b9:	jae    0x43852d
  4384bb:	jo     0x43851c
  4384bd:	jae    0x438524
  4384bf:	je     0x438520
  4384c1:	jae    0x438528
  4384c3:	jb     0x43853b
  4384c5:	gs jb  0x438527
  4384c8:	movsxd esi,DWORD PTR [rdx+0x65]
  4384cb:	fs outs dx,BYTE PTR gs:[rsi]
  4384ce:	je     0x438539
  4384d0:	(bad)  
  4384d1:	ins    BYTE PTR es:[rdi],dx
  4384d2:	jae    0x438533
  4384d4:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  4384db:	add    BYTE PTR [rax+0x756e6702],al
  4384e1:	je     0x43854f
  4384e3:	jae    0x438544
  4384e5:	jae    0x438559
  4384e7:	je     0x438559
  4384e9:	pop    rdi
  4384ea:	addr32 gs je 0x43854d
  4384ee:	jo     0x438562
  4384f0:	outs   dx,DWORD PTR ds:[rsi]
  4384f1:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x616e
  4384f8:	ins    DWORD PTR es:[rdi],dx
  4384f9:	add    BYTE PTR gs:[rax],al
  4384fc:	add    DWORD PTR [rdx],0x74756e67
  438502:	ins    BYTE PTR es:[rdi],dx
  438503:	jae    0x438564
  438505:	jae    0x438579
  438507:	je     0x438579
  438509:	pop    rdi
  43850a:	addr32 gs je 0x43856d
  43850e:	jae    0x438575
  438510:	ins    BYTE PTR es:[rdi],dx
  438511:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  438516:	pop    rdi
  438517:	jo     0x43858b
  438519:	outs   dx,DWORD PTR ds:[rsi]
  43851a:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x8400
  438521:	add    ah,BYTE PTR [rdi+0x6e]
  438524:	jne    0x43859a
  438526:	ins    BYTE PTR es:[rdi],dx
  438527:	jae    0x438588
  438529:	jae    0x43859d
  43852b:	je     0x43859d
  43852d:	pop    rdi
  43852e:	jae    0x438595
  438530:	je     0x438591
  438532:	jo     0x4385a6
  438534:	outs   dx,DWORD PTR ds:[rsi]
  438535:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6964
  43853c:	jb     0x4385a3
  43853e:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  438542:	add    BYTE PTR [rax],al
  438544:	mov    BYTE PTR [rdx],al
  438546:	outs   dx,BYTE PTR ds:[esi]
  438548:	jne    0x4385be
  43854a:	ins    BYTE PTR es:[rdi],dx
  43854b:	jae    0x4385ac
  43854d:	jae    0x4385c3
  43854f:	jb     0x4385b6
  438551:	jb     0x4385c5
  438553:	outs   dx,DWORD PTR ds:[rsi]
  438554:	jb     0x438556
  438556:	add    BYTE PTR [rax],al
  438558:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  438559:	add    ah,BYTE PTR [rdi+0x6e]
  43855c:	jne    0x4385d2
  43855e:	ins    BYTE PTR es:[rdi],dx
  43855f:	jae    0x4385c0
  438561:	je     0x4385d5
  438563:	(bad)  
  438564:	outs   dx,BYTE PTR ds:[rsi]
  438565:	jae    0x4385d7
  438567:	outs   dx,DWORD PTR ds:[rsi]
  438568:	jb     0x4385de
  43856a:	pop    rdi
  43856b:	jae    0x4385d2
  43856d:	je     0x4385ce
  43856f:	gs jb  0x4385e4
  438572:	outs   dx,BYTE PTR ds:[rsi]
  438573:	outs   dx,DWORD PTR ds:[rsi]
  438574:	add    BYTE PTR [rax],al
  438576:	add    BYTE PTR [rax],al
  438578:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  438579:	add    ah,BYTE PTR [rdi+0x6e]
  43857c:	jne    0x4385f2
  43857e:	ins    BYTE PTR es:[rdi],dx
  43857f:	jae    0x4385e0
  438581:	je     0x4385f5
  438583:	(bad)  
  438584:	outs   dx,BYTE PTR ds:[rsi]
  438585:	jae    0x4385f7
  438587:	outs   dx,DWORD PTR ds:[rsi]
  438588:	jb     0x4385fe
  43858a:	pop    rdi
  43858b:	jae    0x4385f2
  43858d:	je     0x4385ee
  43858f:	imul   ebp,DWORD PTR [rsi+0x74],0x2a80032
  438596:	outs   dx,BYTE PTR ds:[esi]
  438598:	jne    0x43860e
  43859a:	ins    BYTE PTR es:[rdi],dx
  43859b:	jae    0x4385fc
  43859d:	je     0x438611
  43859f:	(bad)  
  4385a0:	outs   dx,BYTE PTR ds:[rsi]
  4385a1:	jae    0x438613
  4385a3:	outs   dx,DWORD PTR ds:[rsi]
  4385a4:	jb     0x43861a
  4385a6:	pop    rdi
  4385a7:	jae    0x43860e
  4385a9:	je     0x43860a
  4385ab:	jo     0x438621
  4385ad:	jb     0x4385af
  4385af:	add    BYTE PTR [rdx+0x756e6702],ch
  4385b5:	je     0x438623
  4385b7:	jae    0x438618
  4385b9:	je     0x43862d
  4385bb:	(bad)  
  4385bc:	outs   dx,BYTE PTR ds:[rsi]
  4385bd:	jae    0x43862f
  4385bf:	outs   dx,DWORD PTR ds:[rsi]
  4385c0:	jb     0x438636
  4385c2:	pop    rdi
  4385c3:	jae    0x43862a
  4385c5:	je     0x438626
  4385c7:	jo     0x43863e
  4385c9:	ins    BYTE PTR es:[rdi],dx
  4385ca:	ins    BYTE PTR es:[rdi],dx
  4385cb:	pop    rdi
  4385cc:	data16 jne 0x43863d
  4385cf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4385d3:	outs   dx,BYTE PTR ds:[rsi]
  4385d4:	add    BYTE PTR [rax],al
  4385d6:	add    BYTE PTR [rax],al
  4385d8:	stos   DWORD PTR es:[rdi],eax
  4385d9:	add    ah,BYTE PTR [rdi+0x6e]
  4385dc:	jne    0x438652
  4385de:	ins    BYTE PTR es:[rdi],dx
  4385df:	jae    0x438640
  4385e1:	je     0x438655
  4385e3:	(bad)  
  4385e4:	outs   dx,BYTE PTR ds:[rsi]
  4385e5:	jae    0x438657
  4385e7:	outs   dx,DWORD PTR ds:[rsi]
  4385e8:	jb     0x43865e
  4385ea:	pop    rdi
  4385eb:	jae    0x438652
  4385ed:	je     0x43864e
  4385ef:	jo     0x438666
  4385f1:	ins    BYTE PTR es:[rdi],dx
  4385f2:	ins    BYTE PTR es:[rdi],dx
  4385f3:	pop    rdi
  4385f4:	je     0x43865f
  4385f6:	ins    DWORD PTR es:[rdi],dx
  4385f7:	outs   dx,DWORD PTR gs:[rsi]
  4385f9:	jne    0x43866f
  4385fb:	pop    rdi
  4385fc:	data16 jne 0x43866d
  4385ff:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  438603:	outs   dx,BYTE PTR ds:[rsi]
  438604:	add    BYTE PTR [rax],al
  438606:	add    BYTE PTR [rax],al
  438608:	lods   al,BYTE PTR ds:[rsi]
  438609:	add    ah,BYTE PTR [rdi+0x6e]
  43860c:	jne    0x438682
  43860e:	ins    BYTE PTR es:[rdi],dx
  43860f:	jae    0x438670
  438611:	je     0x438685
  438613:	(bad)  
  438614:	outs   dx,BYTE PTR ds:[rsi]
  438615:	jae    0x438687
  438617:	outs   dx,DWORD PTR ds:[rsi]
  438618:	jb     0x43868e
  43861a:	pop    rdi
  43861b:	jae    0x438682
  43861d:	je     0x43867e
  43861f:	jo     0x438696
  438621:	jae    0x43868b
  438623:	pop    rdi
  438624:	data16 jne 0x438695
  438627:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43862b:	outs   dx,BYTE PTR ds:[rsi]
  43862c:	add    BYTE PTR [rax],al
  43862e:	add    BYTE PTR [rax],al
  438630:	sbb    al,0x3
  438632:	outs   dx,BYTE PTR ds:[esi]
  438634:	jne    0x4386aa
  438636:	ins    BYTE PTR es:[rdi],dx
  438637:	jae    0x438698
  438639:	js     0x438670
  43863b:	xor    BYTE PTR [rcx],bh
  43863d:	pop    rdi
  43863e:	movsxd esi,DWORD PTR [rdx+0x74]
  438641:	pop    rdi
  438642:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x74
  43864b:	add    BYTE PTR [rip+0x756e6703],bl        # 0x75b1ed54
  438651:	je     0x4386bf
  438653:	jae    0x4386b4
  438655:	js     0x43868c
  438657:	xor    BYTE PTR [rcx],bh
  438659:	pop    rdi
  43865a:	movsxd esi,DWORD PTR [rdx+0x74]
  43865d:	pop    rdi
  43865e:	gs js  0x4386d1
  438661:	outs   dx,DWORD PTR ds:[rsi]
  438662:	jb     0x4386d8
  438664:	add    BYTE PTR [rax],al
  438666:	add    BYTE PTR [rax],al
  438668:	push   rbx
  438669:	add    esp,DWORD PTR [rdi+0x6e]
  43866c:	jne    0x4386e2
  43866e:	ins    BYTE PTR es:[rdi],dx
  43866f:	jae    0x4386d0
  438671:	js     0x4386a8
  438673:	xor    BYTE PTR [rcx],bh
  438675:	pop    rdi
  438676:	movsxd esi,DWORD PTR [rdx+0x74]
  438679:	pop    rdi
  43867a:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
  438681:	add    BYTE PTR [rax],al
  438683:	add    BYTE PTR [rbp+0x3],dl
  438686:	outs   dx,BYTE PTR ds:[esi]
  438688:	jne    0x4386fe
  43868a:	ins    BYTE PTR es:[rdi],dx
  43868b:	jae    0x4386ec
  43868d:	js     0x4386c4
  43868f:	xor    BYTE PTR [rcx],bh
  438691:	pop    rdi
  438692:	movsxd esi,DWORD PTR [rdx+0x74]
  438695:	pop    rdi
  438696:	imul   ebp,DWORD PTR [rsi+0x69],0x59000074
  43869d:	add    esp,DWORD PTR [rdi+0x6e]
  4386a0:	jne    0x438716
  4386a2:	ins    BYTE PTR es:[rdi],dx
  4386a3:	jae    0x438704
  4386a5:	js     0x4386dc
  4386a7:	xor    BYTE PTR [rcx],bh
  4386a9:	pop    rdi
  4386aa:	movsxd esi,DWORD PTR [rdx+0x74]
  4386ad:	pop    rdi
  4386ae:	jo     0x438722
  4386b0:	imul   ebp,DWORD PTR [rsi+0x74],0x43008600
  4386b7:	jb     0x43871e
  4386b9:	(bad)  
  4386ba:	je     0x438721
  4386bc:	rex.RB jbe 0x438724
  4386bf:	outs   dx,BYTE PTR ds:[rsi]
  4386c0:	je     0x438703
  4386c2:	add    BYTE PTR [rax],al
  4386c4:	fadd   DWORD PTR [rax]
  4386c6:	rex.R
  4386c7:	gs ins BYTE PTR es:[rdi],dx
  4386c9:	gs je  0x438731
  4386cc:	rex.XB jb 0x438738
  4386cf:	je     0x43873a
  4386d1:	movsxd esp,DWORD PTR [rcx+0x6c]
  4386d4:	push   rbx
  4386d5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4386da:	outs   dx,BYTE PTR ds:[rsi]
  4386db:	add    al,bh
  4386dd:	add    BYTE PTR [rbp+0x6e],al
  4386e0:	je     0x438747
  4386e2:	jb     0x438727
  4386e4:	jb     0x43874f
  4386e6:	je     0x438751
  4386e8:	movsxd esp,DWORD PTR [rcx+0x6c]
  4386eb:	push   rbx
  4386ec:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4386f1:	outs   dx,BYTE PTR ds:[rsi]
  4386f2:	add    BYTE PTR [rax],al
  4386f4:	push   0x1
  4386f6:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4386f8:	jb     0x438767
  4386fa:	(bad)  
  4386fb:	je     0x43874a
  4386fd:	gs jae 0x438773
  438700:	(bad)  
  438701:	addr32 gs push rdi
  438704:	add    BYTE PTR [rax],al
  438706:	mov    ecx,0x74654701
  43870b:	rex.XB outs dx,DWORD PTR ds:[rsi]
  43870d:	outs   dx,BYTE PTR ds:[rsi]
  43870e:	jae    0x43877f
  438710:	ins    BYTE PTR es:[rdi],dx
  438711:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  438714:	fs add BYTE PTR gs:[rax],al
  438718:	int    0x1
  43871a:	rex.RXB
  43871b:	gs je  0x438761
  43871e:	jne    0x438792
  438720:	jb     0x438787
  438722:	outs   dx,BYTE PTR ds:[rsi]
  438723:	je     0x438775
  438725:	jb     0x438796
  438727:	movsxd esp,DWORD PTR [rbp+0x73]
  43872a:	jae    0x43872c
  43872c:	(bad)  
  43872d:	add    DWORD PTR [rdi+0x65],eax
  438730:	je     0x438775
  438732:	jne    0x4387a6
  438734:	jb     0x43879b
  438736:	outs   dx,BYTE PTR ds:[rsi]
  438737:	je     0x438789
  438739:	jb     0x4387aa
  43873b:	movsxd esp,DWORD PTR [rbp+0x73]
  43873e:	jae    0x438789
  438740:	fs add dl,dl
  438743:	add    DWORD PTR [rdi+0x65],eax
  438746:	je     0x43878b
  438748:	jne    0x4387bc
  43874a:	jb     0x4387b1
  43874c:	outs   dx,BYTE PTR ds:[rsi]
  43874d:	je     0x4387a3
  43874f:	push   0x64616572
  438754:	rex.WB
  438755:	add    BYTE PTR fs:[rax],al
  438758:	hlt    
  438759:	add    DWORD PTR [rdi+0x65],eax
  43875c:	je     0x4387a4
  43875e:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
  438766:	(bad)  
  438767:	jne    0x4387dd
  438769:	gs jae 0x4387ad
  43876c:	add    BYTE PTR [rax],al
  43876e:	add    al,BYTE PTR [rdx]
  438770:	rex.RXB
  438771:	gs je  0x4387ba
  438774:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
  43877c:	adc    BYTE PTR [rdx],al
  43877e:	rex.RXB
  43877f:	gs je  0x4387ce
  438782:	(bad)  
  438783:	jae    0x4387f9
  438785:	rex.RB jb 0x4387fa
  438788:	outs   dx,DWORD PTR ds:[rsi]
  438789:	jb     0x43878b
  43878b:	add    BYTE PTR [rbx],ah
  43878d:	add    al,BYTE PTR [rdi+0x65]
  438790:	je     0x4387df
  438792:	outs   dx,DWORD PTR ds:[rsi]
  438793:	fs jne 0x438802
  438796:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  4387a0:	add    BYTE PTR [rax],al
  4387a2:	and    al,0x2
  4387a4:	rex.RXB
  4387a5:	gs je  0x4387f5
  4387a8:	outs   dx,DWORD PTR ds:[rsi]
  4387a9:	fs jne 0x438818
  4387ac:	gs rex.W (bad) 
  4387af:	outs   dx,BYTE PTR ds:[rsi]
  4387b0:	fs ins BYTE PTR es:[rdi],dx
  4387b2:	add    BYTE PTR gs:[r8],al
  4387b6:	(bad)  
  4387b7:	add    al,BYTE PTR [rdi+0x65]
  4387ba:	je     0x438809
  4387bc:	outs   dx,DWORD PTR ds:[rsi]
  4387bd:	fs jne 0x43882c
  4387c0:	gs rex.W (bad) 
  4387c3:	outs   dx,BYTE PTR ds:[rsi]
  4387c4:	fs ins BYTE PTR es:[rdi],dx
  4387c6:	gs push rdi
  4387c8:	add    BYTE PTR [rax],al
  4387ca:	rex.RX add r8b,BYTE PTR [rdi+0x65]
  4387ce:	je     0x43881e
  4387d0:	jne    0x43883f
  4387d2:	(bad)  
  4387d3:	gs jb  0x438825
  4387d6:	rex.XB outs dx,WORD PTR ds:[rsi]
  4387d9:	outs   dx,BYTE PTR ds:[rsi]
  4387da:	jae    0x43884b
  4387dc:	ins    BYTE PTR es:[rdi],dx
  4387dd:	rex.WB outs dx,BYTE PTR gs:[rsi]
  4387e0:	jo     0x438857
  4387e2:	je     0x438829
  4387e4:	jbe    0x43884b
  4387e6:	outs   dx,BYTE PTR ds:[rsi]
  4387e7:	je     0x43885c
  4387e9:	add    BYTE PTR [rsi+0x2],dl
  4387ec:	rex.RXB
  4387ed:	gs je  0x438840
  4387f0:	jb     0x438861
  4387f2:	movsxd eax,DWORD PTR [rcx+0x64]
  4387f5:	fs jb  0x43885d
  4387f8:	jae    0x43886d
  4387fa:	add    BYTE PTR [rax],al
  4387fc:	jae    0x438800
  4387fe:	rex.RXB
  4387ff:	gs je  0x438855
  438802:	je     0x438865
  438804:	jb     0x43887a
  438806:	jne    0x438878
  438808:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43880a:	outs   dx,WORD PTR ds:[rsi]
  43880c:	add    BYTE PTR [r10+0x74654702],cl
  438813:	push   rbx
  438814:	jns    0x438889
  438816:	je     0x43887d
  438818:	ins    DWORD PTR es:[rdi],dx
  438819:	push   rsp
  43881a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  438821:	ins    BYTE PTR es:[rdi],dx
  438822:	gs push rsp
  438824:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  43882b:	gs je  0x438882
  43882e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  438835:	je     0x438837
  438837:	add    cl,bh
  438839:	add    cl,BYTE PTR [rcx+0x6e]
  43883c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  438844:	rex.XB jb 0x4388b0
  438847:	je     0x4388b2
  438849:	movsxd esp,DWORD PTR [rcx+0x6c]
  43884c:	push   rbx
  43884d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  438852:	outs   dx,BYTE PTR ds:[rsi]
  438853:	add    BYTE PTR [rax],dl
  438855:	add    ecx,DWORD PTR [rcx+0x73]
  438858:	rex.R
  438859:	rex.X
  43885a:	rex.XB push r11
  43885c:	rex.WR
  43885d:	gs (bad) 
  43885f:	fs rex.X jns 0x4388d7
  438863:	gs rex.RB js 0x438867
  438867:	add    BYTE PTR [rbx+0x3],cl
  43886a:	rex.WR
  43886b:	gs (bad) 
  43886d:	jbe    0x4388d4
  43886f:	rex.XB jb 0x4388db
  438872:	je     0x4388dd
  438874:	movsxd esp,DWORD PTR [rcx+0x6c]
  438877:	push   rbx
  438878:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  43887d:	outs   dx,BYTE PTR ds:[rsi]
  43887e:	add    BYTE PTR [rax],al
  438880:	jp     0x438885
  438882:	rex.WRB jne 0x4388f1
  438885:	je     0x4388f0
  438887:	rex.X jns 0x4388fe
  43888a:	gs push rsp
  43888c:	outs   dx,DWORD PTR ds:[rsi]
  43888d:	push   rdi
  43888e:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  438896:	lahf   
  438897:	add    edx,DWORD PTR [rax+0x65]
  43889a:	imul   eax,DWORD PTR gs:[rbx+0x6f],0x6e
  43889f:	jae    0x438910
  4388a1:	ins    BYTE PTR es:[rdi],dx
  4388a2:	rex.WB outs dx,BYTE PTR gs:[rsi]
  4388a5:	jo     0x43891c
  4388a7:	je     0x4388ea
  4388a9:	add    BYTE PTR [rcx+0x65655003],ah
  4388af:	imul   ecx,DWORD PTR [rsi+0x61],0x6d
  4388b3:	gs fs push rax
  4388b6:	imul   esi,DWORD PTR [rax+0x65],0x5103bb00
  4388bd:	jne    0x438924
  4388bf:	jb     0x43893a
  4388c1:	push   rax
  4388c2:	gs jb  0x43892b
  4388c5:	outs   dx,DWORD PTR ds:[rsi]
  4388c6:	jb     0x438935
  4388c8:	(bad)  
  4388c9:	outs   dx,BYTE PTR ds:[rsi]
  4388ca:	movsxd esp,DWORD PTR [rbp+0x43]
  4388cd:	outs   dx,DWORD PTR ds:[rsi]
  4388ce:	jne    0x43893e
  4388d0:	je     0x438937
  4388d2:	jb     0x4388d4
  4388d4:	add    DWORD PTR [rdx+rdx*2],eax
  4388d7:	je     0x438945
  4388d9:	rex.B
  4388da:	fs fs rex.RX jne 0x43894d
  4388df:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4388e3:	outs   dx,BYTE PTR ds:[rsi]
  4388e4:	push   rsp
  4388e5:	(bad)  
  4388e6:	(bad)  
  4388e7:	ins    BYTE PTR es:[rdi],dx
  4388e8:	add    BYTE PTR gs:[rdx],al
  4388eb:	add    al,0x52
  4388ed:	je     0x43895b
  4388ef:	rex.XB (bad) 
  4388f1:	jo     0x438967
  4388f3:	jne    0x438967
  4388f5:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4388f8:	outs   dx,BYTE PTR ds:[rsi]
  4388f9:	je     0x438960
  4388fb:	js     0x438971
  4388fd:	add    BYTE PTR [rcx],cl
  4388ff:	add    al,0x52
  438901:	je     0x43896f
  438903:	rex.WR outs dx,DWORD PTR ds:[rsi]
  438905:	outs   dx,DWORD PTR ds:[rsi]
  438906:	imul   esi,DWORD PTR [rbp+0x70],0x46
  43890a:	jne    0x43897a
  43890c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  438910:	outs   dx,BYTE PTR ds:[rsi]
  438911:	rex.RB outs dx,BYTE PTR ds:[rsi]
  438913:	je     0x438987
  438915:	jns    0x438917
  438917:	add    BYTE PTR [rax],dl
  438919:	add    al,0x52
  43891b:	je     0x438989
  43891d:	push   rsi
  43891e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  438925:	outs   dx,BYTE PTR ds:[rsi]
  438926:	ja     0x438991
  438928:	outs   dx,BYTE PTR ds:[rsi]
  438929:	add    BYTE PTR fs:[rax],al
  43892c:	lahf   
  43892d:	add    al,0x53
  43892f:	gs je  0x438987
  438932:	outs   dx,BYTE PTR ds:[rsi]
  438933:	push   0x6c646e61
  438938:	gs fs rex.RB js 0x4389a0
  43893d:	gs jo  0x4389b4
  438940:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  438947:	gs jb  0x43894a
  43894a:	lods   al,BYTE PTR ds:[rsi]
  43894b:	add    al,0x53
  43894d:	ins    BYTE PTR es:[rdi],dx
  43894e:	gs gs jo 0x438952
  438952:	scas   eax,DWORD PTR es:[rdi]
  438953:	add    al,0x53
  438955:	ins    BYTE PTR es:[rdi],dx
  438956:	gs gs jo 0x43899f
  43895a:	js     0x43895c
  43895c:	mov    edx,0x72655404
  438961:	ins    DWORD PTR es:[rdi],dx
  438962:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  438969:	outs   dx,DWORD PTR ds:[rsi]
  43896a:	movsxd esp,DWORD PTR [rbp+0x73]
  43896d:	jae    0x43896f
  43896f:	add    cl,al
  438971:	add    al,0x54
  438973:	ins    BYTE PTR es:[rdi],dx
  438974:	jae    0x4389bd
  438976:	gs je  0x4389cf
  438979:	(bad)  
  43897a:	ins    BYTE PTR es:[rdi],dx
  43897b:	jne    0x4389e2
  43897d:	add    dh,cl
  43897f:	add    al,0x55
  438981:	outs   dx,BYTE PTR ds:[rsi]
  438982:	push   0x6c646e61
  438987:	gs fs rex.RB js 0x4389ef
  43898c:	gs jo  0x438a03
  43898f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  438996:	gs jb  0x438999
  438999:	add    ah,ch
  43899b:	add    al,0x56
  43899d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4389a4:	jb     0x438a15
  4389a6:	je     0x438a0d
  4389a8:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4389ac:	out    dx,al
  4389ad:	add    al,0x56
  4389af:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4389b6:	jne    0x438a1d
  4389b8:	jb     0x438a33
  4389ba:	add    BYTE PTR [rax],al
  4389bc:	test   BYTE PTR [rdi+rdx*2],0x61
  4389c0:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  4389c8:	ins    BYTE PTR es:[edi],dx
  4389ca:	gs rex.WRXB (bad) 
  4389cd:	push   0x65
  4389cf:	movsxd esi,DWORD PTR [rax+rax*1+0xe]
  4389d3:	add    eax,0x65646957
  4389d8:	rex.XB push 0x6f547261
  4389de:	rex.WRB jne 0x438a4d
  4389e1:	je     0x438a4c
  4389e3:	rex.X jns 0x438a5a
  4389e6:	add    BYTE PTR gs:[rdi],dh
  4389e9:	add    BYTE PTR [rdi+0x5f],bl
  4389ec:	rex.XB pop r15
  4389ee:	jae    0x438a60
  4389f0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4389f4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4389fb:	ins    BYTE PTR es:[rdi],dx
  4389fc:	gs jb  0x4389ff
  4389ff:	add    BYTE PTR [rdi],bh
  438a01:	add    BYTE PTR [rdi+0x5f],bl
  438a04:	pop    rdi
  438a05:	ins    BYTE PTR es:[rdi],dx
  438a06:	movsxd ebx,DWORD PTR [rdi+0x63]
  438a09:	outs   dx,DWORD PTR ds:[rsi]
  438a0a:	fs gs jo 0x438a6f
  438a0e:	addr32 gs pop rdi
  438a11:	data16 jne 0x438a82
  438a14:	movsxd eax,DWORD PTR [rax]
  438a16:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  438a1a:	fs ins BYTE PTR es:[rdi],dx
  438a1c:	ins    BYTE PTR es:[rdi],dx
  438a1d:	outs   dx,DWORD PTR ds:[rsi]
  438a1e:	outs   dx,BYTE PTR ds:[rsi]
  438a1f:	gs js  0x438a8b
  438a22:	je     0x438a24
  438a24:	push   rcx
  438a25:	add    BYTE PTR [rdi+0x5f],bl
  438a28:	addr32 gs je 0x438a99
  438a2c:	(bad)  
  438a2d:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  438a34:	push   rdx
  438a35:	add    BYTE PTR [rdi+0x5f],bl
  438a38:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  438a3f:	add    BYTE PTR [rbx+0x0],dl
  438a42:	pop    rdi
  438a43:	pop    rdi
  438a44:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  438a4b:	movsxd eax,DWORD PTR [rax]
  438a4d:	add    BYTE PTR [rdx+0x0],bl
  438a50:	pop    rdi
  438a51:	pop    rdi
  438a52:	ins    BYTE PTR es:[rdi],dx
  438a53:	movsxd ebp,DWORD PTR [rdi+0x6e]
  438a56:	jbe    0x438ab7
  438a58:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  438a5f:	add    BYTE PTR [rdi+0x5f],bl
  438a62:	ins    DWORD PTR es:[rdi],dx
  438a63:	(bad)  
  438a64:	pop    rdi
  438a65:	movsxd esi,DWORD PTR [rbp+0x72]
  438a68:	pop    rdi
  438a69:	ins    DWORD PTR es:[rdi],dx
  438a6a:	(bad)  
  438a6b:	js     0x438a6d
  438a6d:	add    BYTE PTR [rax+0x0],ah
  438a70:	pop    rdi
  438a71:	pop    rdi
  438a72:	jae    0x438ad9
  438a74:	je     0x438ad5
  438a76:	(bad)  
  438a77:	jo     0x438ae9
  438a79:	pop    rdi
  438a7a:	je     0x438af5
  438a7c:	jo     0x438ae3
  438a7e:	add    BYTE PTR [rax],al
  438a80:	(bad)  
  438a81:	add    BYTE PTR [rdi+0x5f],bl
  438a84:	jae    0x438aeb
  438a86:	je     0x438afd
  438a88:	jae    0x438aef
  438a8a:	jb     0x438af9
  438a8c:	(bad)  
  438a8d:	je     0x438af7
  438a8f:	gs jb  0x438b04
  438a92:	add    BYTE PTR [rax],al
  438a94:	jno    0x438a96
  438a96:	pop    rdi
  438a97:	(bad)  
  438a98:	movsxd ebp,DWORD PTR [rbp+0x64]
  438a9b:	ins    BYTE PTR es:[rdi],dx
  438a9c:	outs   dx,BYTE PTR ds:[rsi]
  438a9d:	add    BYTE PTR [rax+0x0],bh
  438aa0:	pop    rdi
  438aa1:	(bad)  
  438aa2:	ins    DWORD PTR es:[rdi],dx
  438aa3:	jae    0x438b0c
  438aa5:	pop    rdi
  438aa6:	gs js  0x438b12
  438aa9:	je     0x438aab
  438aab:	add    BYTE PTR [rdx+0x65635f00],cl
  438ab1:	js     0x438b1c
  438ab3:	je     0x438ab5
  438ab5:	add    BYTE PTR [rax+rax*1+0x6f6c635f],dl
  438abc:	jae    0x438b23
  438abe:	add    BYTE PTR [rax],al
  438ac0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  438ac1:	add    BYTE PTR [rdi+0x63],bl
  438ac4:	je     0x438b2f
  438ac6:	ins    DWORD PTR es:[rdi],dx
  438ac7:	gs ss xor al,0x0
  438acb:	add    BYTE PTR [rdx+0x72655f00],bh
  438ad1:	jb     0x438b41
  438ad3:	outs   dx,DWORD PTR ds:[rsi]
  438ad4:	add    BYTE PTR [rax],al
  438ad6:	ret    
  438ad7:	add    BYTE PTR [rdi+0x65],bl
  438ada:	js     0x438b45
  438adc:	je     0x438ade
  438ade:	rol    BYTE PTR [rax],1
  438ae0:	pop    rdi
  438ae1:	imul   bp,WORD PTR [rsi+0x64],0x6c63
  438ae7:	outs   dx,DWORD PTR ds:[rsi]
  438ae8:	jae    0x438b4f
  438aea:	add    BYTE PTR [rax],al
  438aec:	rol    BYTE PTR [rax],cl
  438aee:	pop    rdi
  438aef:	imul   bp,WORD PTR [rsi+0x64],0x6966
  438af5:	jb     0x438b6a
  438af7:	je     0x438b2f
  438af9:	xor    al,0x0
  438afb:	add    dl,bl
  438afd:	add    BYTE PTR [rdi+0x66],bl
  438b00:	ins    DWORD PTR es:[rdi],dx
  438b01:	outs   dx,DWORD PTR ds:[rsi]
  438b02:	fs add BYTE PTR gs:[rax],al
  438b06:	call   0x73a9ea0b
  438b0b:	je     0x438b6e
  438b0d:	je     0x438b45
  438b0f:	xor    al,0x0
  438b11:	add    dh,ch
  438b13:	add    BYTE PTR [rdi+0x66],bl
  438b16:	jne    0x438b84
  438b18:	ins    BYTE PTR es:[rdi],dx
  438b19:	jo     0x438b7c
  438b1b:	je     0x438b85
  438b1d:	add    dl,bh
  438b1f:	add    BYTE PTR [rdi+0x67],bl
  438b22:	gs je  0x438b84
  438b25:	outs   dx,DWORD PTR ds:[rsi]
  438b26:	jae    0x438b8e
  438b28:	push   0x6c646e61
  438b2d:	add    BYTE PTR gs:[rax],al
  438b30:	cld    
  438b31:	add    BYTE PTR [rdi+0x67],bl
  438b34:	gs je  0x438b9a
  438b37:	push   0x11a0000
  438b3c:	pop    rdi
  438b3d:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  438b44:	ins    DWORD PTR es:[rdi],dx
  438b45:	add    BYTE PTR [rdi+0x1],bh
  438b48:	pop    rdi
  438b49:	ins    BYTE PTR es:[rdi],dx
  438b4a:	outs   dx,DWORD PTR ds:[rsi]
  438b4b:	movsxd esp,DWORD PTR [rcx+0x6c]
  438b4e:	je     0x438bb9
  438b50:	ins    DWORD PTR es:[rdi],dx
  438b51:	gs ss xor al,0x0
  438b55:	add    BYTE PTR [rax+0x6f6c5f01],al
  438b5b:	movsxd ebp,DWORD PTR [rbx+0x0]
  438b5e:	mov    DWORD PTR [rcx],eax
  438b60:	pop    rdi
  438b61:	ins    BYTE PTR es:[rdi],dx
  438b62:	jae    0x438bc9
  438b64:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
  438b69:	add    BYTE PTR [rip+0x6e6f5f02],ah        # 0x6eb2ea71
  438b6f:	gs js  0x438bdb
  438b72:	je     0x438b74
  438b74:	(bad)  
  438b75:	add    bl,BYTE PTR [rdi+0x6f]
  438b78:	jo     0x438bdf
  438b7a:	outs   dx,BYTE PTR ds:[rsi]
  438b7b:	pop    rdi
  438b7c:	outs   dx,DWORD PTR ds:[rsi]
  438b7d:	jae    0x438be5
  438b7f:	push   0x6c646e61
  438b84:	add    BYTE PTR gs:[rbx+0x2],ah
  438b88:	pop    rdi
  438b89:	jae    0x438bf9
  438b8b:	ja     0x438bfd
  438b8d:	jb     0x438bf8
  438b8f:	outs   dx,BYTE PTR ds:[rsi]
  438b90:	je     0x438bf8
  438b92:	add    BYTE PTR [rax],al
  438b94:	add    DWORD PTR [rdx],0x5f
  438b97:	jae    0x438c0d
  438b99:	jb     0x438c04
  438b9b:	movsxd ebp,DWORD PTR [rbp+0x70]
  438b9e:	add    BYTE PTR [rax],al
  438ba0:	scas   eax,DWORD PTR es:[rdi]
  438ba1:	add    bl,BYTE PTR [rdi+0x74]
  438ba4:	imul   ebp,DWORD PTR [rbp+0x65],0xc4003436
  438bab:	add    bl,BYTE PTR [rdi+0x75]
  438bae:	outs   dx,BYTE PTR ds:[rsi]
  438baf:	ins    BYTE PTR es:[rdi],dx
  438bb0:	outs   dx,DWORD PTR ds:[rsi]
  438bb1:	movsxd ebp,DWORD PTR [rbx+0x0]
  438bb4:	jg     0x438bb9
  438bb6:	(bad)  
  438bb7:	(bad)  
  438bb8:	outs   dx,DWORD PTR ds:[rsi]
  438bb9:	jb     0x438c2f
  438bbb:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  438bc2:	add    BYTE PTR [rax],al
  438bc4:	nop
  438bc5:	add    esp,DWORD PTR [rbx+0x61]
  438bc8:	ins    BYTE PTR es:[rdi],dx
  438bc9:	ins    BYTE PTR es:[rdi],dx
  438bca:	outs   dx,DWORD PTR ds:[rsi]
  438bcb:	movsxd eax,DWORD PTR [rax]
  438bcd:	add    BYTE PTR [rbp+0x6f6c6303],dl
  438bd3:	movsxd ebp,DWORD PTR [rbx+0x0]
  438bd6:	popf   
  438bd7:	add    esp,DWORD PTR [rbp+0x78]
  438bda:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x636603a1
  438be2:	ins    BYTE PTR es:[rdi],dx
  438be3:	outs   dx,DWORD PTR ds:[rsi]
  438be4:	jae    0x438c4b
  438be6:	add    BYTE PTR [rax],al
  438be8:	movabs ds:0x726f7272656603,eax
  438bf1:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  438bf8:	jae    0x438c62
  438bfa:	add    BYTE PTR [rax],al
  438bfc:	scas   al,BYTE PTR es:[rdi]
  438bfd:	add    esp,DWORD PTR [rsi+0x6f]
  438c00:	jo     0x438c67
  438c02:	outs   dx,BYTE PTR ds:[rsi]
  438c03:	add    BYTE PTR [rax+0x72706603],dh
  438c09:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  438c10:	data16 jo 0x438c88
  438c13:	je     0x438c78
  438c15:	add    BYTE PTR [rbx+0x75706603],dh
  438c1b:	je     0x438c90
  438c1d:	add    BYTE PTR [rsi+0x65726603],dh
  438c23:	(bad)  
  438c24:	add    BYTE PTR fs:[rdi+0x65726603],dh
  438c2b:	add    BYTE PTR gs:[rax],al
  438c2e:	mov    eax,0x65726603
  438c33:	outs   dx,DWORD PTR ds:[rsi]
  438c34:	jo     0x438c9b
  438c36:	outs   dx,BYTE PTR ds:[rsi]
  438c37:	add    al,al
  438c39:	add    esp,DWORD PTR [rsi+0x77]
  438c3c:	jo     0x438cb0
  438c3e:	imul   ebp,DWORD PTR [rsi+0x74],0xc2000066
  438c45:	add    esp,DWORD PTR [rsi+0x77]
  438c48:	jb     0x438cb3
  438c4a:	je     0x438cb1
  438c4c:	add    BYTE PTR [rax],al
  438c4e:	mov    DWORD PTR [rbx],0x65746567
  438c54:	outs   dx,BYTE PTR ds:[rsi]
  438c55:	jbe    0x438c57
  438c57:	add    bh,dl
  438c59:	add    ebp,DWORD PTR [rcx+0x73]
  438c5c:	jae    0x438cce
  438c5e:	(bad)  
  438c5f:	movsxd esp,DWORD PTR [rbp+0x0]
  438c62:	(bad)  
  438c63:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  438c67:	(bad)  
  438c68:	ins    BYTE PTR es:[rdi],dx
  438c69:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  438c6d:	jbe    0x438c6f
  438c6f:	add    al,dh
  438c71:	add    ebp,DWORD PTR [rbp+0x61]
  438c74:	ins    BYTE PTR es:[rdi],dx
  438c75:	ins    BYTE PTR es:[rdi],dx
  438c76:	outs   dx,DWORD PTR ds:[rsi]
  438c77:	movsxd eax,DWORD PTR [rax]
  438c79:	add    bh,dh
  438c7b:	add    ebp,DWORD PTR [rbp+0x65]
  438c7e:	ins    DWORD PTR es:[rdi],dx
  438c7f:	movsxd ebp,DWORD PTR [rbp+0x70]
  438c82:	add    BYTE PTR [rax],al
  438c84:	clc    
  438c85:	add    ebp,DWORD PTR [rbp+0x65]
  438c88:	ins    DWORD PTR es:[rdi],dx
  438c89:	movsxd esi,DWORD PTR [rax+0x79]
  438c8c:	add    BYTE PTR [rax],al
  438c8e:	stc    
  438c8f:	add    ebp,DWORD PTR [rbp+0x65]
  438c92:	ins    DWORD PTR es:[rdi],dx
  438c93:	ins    DWORD PTR es:[rdi],dx
  438c94:	outs   dx,DWORD PTR ds:[rsi]
  438c95:	jbe    0x438cfc
  438c97:	add    dl,bh
  438c99:	add    ebp,DWORD PTR [rbp+0x65]
  438c9c:	ins    DWORD PTR es:[rdi],dx
  438c9d:	jae    0x438d04
  438c9f:	je     0x438ca1
  438ca1:	add    dh,bh
  438ca3:	add    esi,DWORD PTR [rax+0x65]
  438ca6:	jb     0x438d1a
  438ca8:	outs   dx,DWORD PTR ds:[rsi]
  438ca9:	jb     0x438cab
  438cab:	add    BYTE PTR [rbx],al
  438cad:	add    al,0x70
  438caf:	jne    0x438d25
  438cb1:	movsxd eax,DWORD PTR [rax]
  438cb3:	add    BYTE PTR [rdx],cl
  438cb5:	add    al,0x72
  438cb7:	(bad)  
  438cb8:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  438cbf:	gs (bad) 
  438cc1:	ins    BYTE PTR es:[rdi],dx
  438cc2:	ins    BYTE PTR es:[rdi],dx
  438cc3:	outs   dx,DWORD PTR ds:[rsi]
  438cc4:	movsxd eax,DWORD PTR [rax]
  438cc6:	(bad)  
  438cc7:	add    al,0x73
  438cc9:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  438cd0:	and    eax,DWORD PTR [rbx+rsi*2]
  438cd3:	je     0x438d47
  438cd5:	movsxd ebp,DWORD PTR [rax+0x72]
  438cd8:	add    BYTE PTR [rax],al
  438cda:	and    al,0x4
  438cdc:	jae    0x438d52
  438cde:	jb     0x438d43
  438ce0:	ins    DWORD PTR es:[rdi],dx
  438ce1:	jo     0x438ce3
  438ce3:	add    BYTE PTR [rsi],ah
  438ce5:	add    al,0x73
  438ce7:	je     0x438d5b
  438ce9:	movsxd esi,DWORD PTR [rax+0x79]
  438cec:	add    BYTE PTR [rax],al
  438cee:	sub    DWORD PTR [rbx+rsi*2],eax
  438cf1:	je     0x438d65
  438cf3:	gs jb  0x438d68
  438cf6:	outs   dx,DWORD PTR ds:[rsi]
  438cf7:	jb     0x438cf9
  438cf9:	add    BYTE PTR [rdx],ch
  438cfb:	add    al,0x73
  438cfd:	je     0x438d71
  438cff:	data16 je 0x438d6b
  438d02:	ins    DWORD PTR es:[rdi],dx
  438d03:	add    BYTE PTR gs:[rax],al
  438d06:	sub    eax,DWORD PTR [rbx+rsi*2]
  438d09:	je     0x438d7d
  438d0b:	ins    BYTE PTR es:[rdi],dx
  438d0c:	outs   dx,BYTE PTR gs:[rsi]
  438d0e:	add    BYTE PTR [rax],al
  438d10:	cs add al,0x73
  438d13:	je     0x438d87
  438d15:	outs   dx,BYTE PTR ds:[rsi]
  438d16:	movsxd ebp,DWORD PTR [rbp+0x70]
  438d19:	add    BYTE PTR [rdi],ch
  438d1b:	add    al,0x73
  438d1d:	je     0x438d91
  438d1f:	outs   dx,BYTE PTR ds:[rsi]
  438d20:	movsxd esi,DWORD PTR [rax+0x79]
  438d23:	add    BYTE PTR [rcx],dh
  438d25:	add    al,0x73
  438d27:	je     0x438d9b
  438d29:	jo     0x438d8d
  438d2b:	jb     0x438d98
  438d2d:	add    BYTE PTR [rdx],dh
  438d2f:	add    al,0x73
  438d31:	je     0x438da5
  438d33:	jb     0x438d98
  438d35:	push   0x4340072
  438d3a:	jae    0x438db0
  438d3c:	jb     0x438db1
  438d3e:	je     0x438db2
  438d40:	add    BYTE PTR [rax],al
  438d42:	cmp    BYTE PTR [rbx+rsi*2],al
  438d45:	je     0x438db9
  438d47:	je     0x438db8
  438d49:	ins    BYTE PTR es:[rdi],dx
  438d4a:	add    BYTE PTR [rax],al
  438d4c:	cmp    DWORD PTR [rbx+rsi*2],eax
  438d4f:	je     0x438dc3
  438d51:	je     0x438dc2
  438d53:	jne    0x438dc1
  438d55:	add    BYTE PTR [rax+0x4],cl
  438d58:	je     0x438dc9
  438d5a:	ins    BYTE PTR es:[rdi],dx
  438d5b:	outs   dx,DWORD PTR ds:[rsi]
  438d5c:	ja     0x438dc3
  438d5e:	jb     0x438d60
  438d60:	rex.WB add al,0x74
  438d63:	outs   dx,DWORD PTR ds:[rsi]
  438d64:	jne    0x438dd6
  438d66:	jo     0x438dcd
  438d68:	jb     0x438d6a
  438d6a:	rex.WRX add al,0x76
  438d6d:	data16 jo 0x438de2
  438d70:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  438d77:	add    al,0x77
  438d79:	movsxd esi,DWORD PTR [rbx+0x63]
  438d7c:	jo     0x438df7
  438d7e:	add    BYTE PTR [rax],al
  438d80:	(bad)  
  438d81:	add    al,0x77
  438d83:	movsxd esi,DWORD PTR [rbx+0x6c]
  438d86:	outs   dx,BYTE PTR gs:[rsi]
  438d88:	add    BYTE PTR [rax],al
  438d8a:	jno    0x438d90
  438d8c:	ja     0x438df1
  438d8e:	jae    0x438e04
  438d90:	outs   dx,DWORD PTR ds:[rsi]
  438d91:	ins    DWORD PTR es:[rdi],dx
  438d92:	(bad)  
  438d94:	add    BYTE PTR [rax],al
  438d96:	mov    DWORD PTR [rdi+rbx*2],eax
  438d99:	jae    0x438e0f
  438d9b:	(bad)  
  438d9c:	je     0x438dd4
  438d9e:	xor    al,0x0
  438da0:	pop    QWORD PTR [rdi+rbx*2]
  438da3:	imul   bp,WORD PTR [rsi+0x64],0x656e
  438da9:	js     0x438e1f
  438dab:	ss xor al,0x0
  438dae:	movabs ds:0x65746972775f04,eax
  438db7:	add    BYTE PTR [rdi+0x6e755f04],ch
  438dbd:	ins    BYTE PTR es:[rdi],dx
  438dbe:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04be00
  438dc5:	jae    0x438e3b
  438dc7:	jb     0x438e2d
  438dc9:	jne    0x438e3b
  438dcb:	add    ch,cl
  438dcd:	add    al,0x5f
  438dcf:	jb     0x438e36
  438dd1:	(bad)  
  438dd2:	fs add bl,dl
  438dd5:	add    al,0x5f
  438dd7:	outs   dx,DWORD PTR ds:[rsi]
  438dd8:	jo     0x438e3f
  438dda:	outs   dx,BYTE PTR ds:[rsi]
  438ddb:	add    al,ch
  438ddd:	add    al,0x5f
  438ddf:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  438de6:	cld    
  438de7:	add    al,0x5f
  438de9:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  438ded:	add    BYTE PTR gs:[rax],al
  438df0:	add    BYTE PTR [rip+0x6363615f],al        # 0x63a6ef55
  438df6:	gs jae 0x438e6c
  438df9:	add    BYTE PTR [rax],al
  438dfb:	add    BYTE PTR [rax],al
  438dfd:	add    BYTE PTR [rdx+0x65],dh
  438e00:	movsxd ebp,DWORD PTR [edi+0x6d]
  438e04:	jo     0x438e06
  438e06:	add    BYTE PTR [rax],al
  438e08:	add    al,BYTE PTR [rax]
  438e0a:	jb     0x438e71
  438e0c:	addr32 gs js 0x438e75
  438e10:	movsxd eax,DWORD PTR [rax]
  438e12:	add    BYTE PTR [rax],al
  438e14:	add    eax,DWORD PTR [rax]
  438e16:	jb     0x438e7d
  438e18:	addr32 data16 jb 0x438e81
  438e1c:	add    BYTE PTR gs:[rax],al
  438e1f:	add    BYTE PTR [rbx+0x73694400],ah
  438e25:	jo     0x438e88
  438e27:	je     0x438e8c
  438e29:	push   0x7373654d
  438e2e:	(bad)  
  438e2f:	add    BYTE PTR gs:[r8d],al
  438e34:	lock add DWORD PTR [rbp+0x65],ecx
  438e38:	jae    0x438ead
  438e3a:	(bad)  
  438e3b:	rex.X outs dx,DWORD PTR gs:[esi]
  438e3f:	js     0x438e98
  438e41:	add    bh,dh
  438e43:	add    DWORD PTR [rbp+0x73],ecx
  438e46:	addr32 push rdi
  438e48:	(bad)  
  438e49:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6c754d72
  438e51:	je     0x438ebc
  438e53:	jo     0x438ec1
  438e55:	gs rex.WRXB (bad) 
  438e58:	push   0x65
  438e5a:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
  438e5e:	or     al,BYTE PTR [rdx]
  438e60:	push   rax
  438e61:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
  438e67:	jae    0x438eca
  438e69:	add    BYTE PTR gs:[r8d],al
  438e6e:	mov    ebx,0x61725402
  438e73:	outs   dx,BYTE PTR ds:[rsi]
  438e74:	jae    0x438ee2
  438e76:	(bad)  
  438e77:	je     0x438ede
  438e79:	rex.WRB
  438e7a:	gs jae 0x438ef0
  438e7d:	(bad)  
  438e7e:	add    BYTE PTR gs:[eax],al
  438e82:	sbb    al,BYTE PTR [rax]
  438e84:	push   rdi
  438e85:	push   rbx
  438e86:	rex.B
  438e87:	rex.XB ins BYTE PTR es:[rdi],dx
  438e89:	gs (bad) 
  438e8b:	outs   dx,BYTE PTR ds:[rsi]
  438e8c:	jne    0x438efe
  438e8e:	add    BYTE PTR [rax],al
  438e90:	(bad)  
  438e91:	add    BYTE PTR [rdi+0x53],dl
  438e94:	rex.B
  438e95:	rex.RB outs dx,BYTE PTR ds:[rsi]
  438e97:	jne    0x438f06
  438e99:	rex.WRX
  438e9a:	gs je  0x438f14
  438e9d:	outs   dx,DWORD PTR ds:[rsi]
  438e9e:	jb     0x438f0b
  438ea0:	rex.RB jbe 0x438f08
  438ea3:	outs   dx,BYTE PTR ds:[rsi]
  438ea4:	je     0x438f19
  438ea6:	add    BYTE PTR [rax],al
  438ea8:	sub    al,BYTE PTR [rax]
  438eaa:	push   rdi
  438eab:	push   rbx
  438eac:	rex.B
  438ead:	rex.RB jbe 0x438f15
  438eb0:	outs   dx,BYTE PTR ds:[rsi]
  438eb1:	je     0x438f06
  438eb3:	gs ins BYTE PTR es:[rdi],dx
  438eb5:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  438eba:	sub    eax,DWORD PTR [rax]
  438ebc:	push   rdi
  438ebd:	push   rbx
  438ebe:	rex.B
  438ebf:	rex.RXB
  438ec0:	gs je  0x438f0f
  438ec3:	(bad)  
  438ec4:	jae    0x438f3a
  438ec6:	rex.RB jb 0x438f3b
  438ec9:	outs   dx,DWORD PTR ds:[rsi]
  438eca:	jb     0x438ecc
  438ecc:	rex.WRXB add BYTE PTR [r15+0x53],r10b
  438ed0:	push   r11
  438ed2:	gs je  0x438f21
  438ed5:	(bad)  
  438ed6:	jae    0x438f4c
  438ed8:	rex.RB jb 0x438f4d
  438edb:	outs   dx,DWORD PTR ds:[rsi]
  438edc:	jb     0x438ede
  438ede:	push   rdx
  438edf:	add    BYTE PTR [rdi+0x53],dl
  438ee2:	push   r11
  438ee4:	outs   dx,DWORD PTR ds:[rsi]
  438ee5:	movsxd ebp,DWORD PTR [rbx+0x65]
  438ee8:	je     0x438f2b
  438eea:	add    BYTE PTR [rax],al
  438eec:	push   rsp
  438eed:	add    BYTE PTR [rdi+0x53],dl
  438ef0:	push   r11
  438ef2:	je     0x438f55
  438ef4:	jb     0x438f6a
  438ef6:	jne    0x438f68
  438ef8:	add    BYTE PTR [rax],al
  438efa:	xchg   edx,eax
  438efb:	add    BYTE PTR [rdi+0x5f],bl
  438efe:	push   rdi
  438eff:	push   rbx
  438f00:	rex.B
  438f01:	rex.RX
  438f02:	rex.R
  438f03:	rex.WB jae 0x438f59
  438f06:	gs je  0x438f09
  438f09:	add    BYTE PTR [rbx+0x63636100],dl
  438f0f:	gs jo  0x438f86
  438f12:	add    BYTE PTR [rax],al
  438f14:	xchg   esp,eax
  438f15:	add    BYTE PTR [rdx+0x69],ah
  438f18:	outs   dx,BYTE PTR ds:[rsi]
  438f19:	add    BYTE PTR fs:[rax],al
  438f1c:	xchg   ebp,eax
  438f1d:	add    BYTE PTR [rbx+0x6c],ah
  438f20:	outs   dx,DWORD PTR ds:[rsi]
  438f21:	jae    0x438f88
  438f23:	jae    0x438f94
  438f25:	movsxd ebp,DWORD PTR [rbx+0x65]
  438f28:	je     0x438f2a
  438f2a:	xchg   esi,eax
  438f2b:	add    BYTE PTR [rbx+0x6f],ah
  438f2e:	outs   dx,BYTE PTR ds:[rsi]
  438f2f:	outs   dx,BYTE PTR ds:[rsi]
  438f30:	movsxd esi,DWORD PTR gs:[rax+rax*1-0x69]
  438f35:	add    BYTE PTR [rsi+0x72],ah
  438f38:	gs gs (bad) 
  438f3b:	fs fs jb 0x438fa8
  438f3f:	outs   dx,BYTE PTR ds:[rsi]
  438f40:	outs   dx,WORD PTR ds:[rsi]
  438f42:	add    BYTE PTR [rax],al
  438f44:	cwde   
  438f45:	add    BYTE PTR [rdi+0x65],ah
  438f48:	je     0x438fab
  438f4a:	fs fs jb 0x438fb7
  438f4e:	outs   dx,BYTE PTR ds:[rsi]
  438f4f:	outs   dx,WORD PTR ds:[rsi]
  438f51:	add    BYTE PTR [rax+rax*1+0x6e746567],bl
  438f58:	(bad)  
  438f59:	ins    DWORD PTR es:[rdi],dx
  438f5a:	imul   ebp,DWORD PTR gs:[rsi+0x66],0x9d006f
  438f62:	addr32 gs je 0x438fd6
  438f66:	gs gs jb 0x438fd8
  438f6a:	(bad)  
  438f6b:	ins    DWORD PTR es:[rdi],dx
  438f6c:	add    BYTE PTR gs:[rax+0x74656700],ah
  438f73:	jae    0x438fda
  438f75:	jb     0x438fed
  438f77:	(bad)  
  438f78:	jns    0x438fe8
  438f7a:	(bad)  
  438f7b:	ins    DWORD PTR es:[rdi],dx
  438f7c:	add    BYTE PTR gs:[rcx+0x74656700],ah
  438f83:	jae    0x438fea
  438f85:	jb     0x438ffd
  438f87:	(bad)  
  438f88:	jns    0x438ffa
  438f8a:	outs   dx,DWORD PTR ds:[rsi]
  438f8b:	jb     0x439001
  438f8d:	add    BYTE PTR [rbp+0x6f746800],ah
  438f93:	outs   dx,BYTE PTR ds:[rsi]
  438f94:	jae    0x438f96
  438f96:	stos   BYTE PTR es:[rdi],al
  438f97:	add    BYTE PTR [rcx+0x6f],ch
  438f9a:	movsxd esi,DWORD PTR [rsp+rbp*2+0x73]
  438f9e:	outs   dx,DWORD PTR ds:[rsi]
  438f9f:	movsxd ebp,DWORD PTR [rbx+0x65]
  438fa2:	je     0x438fa4
  438fa4:	stos   DWORD PTR es:[rdi],eax
  438fa5:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  438fa9:	je     0x439010
  438fab:	outs   dx,BYTE PTR ds:[rsi]
  438fac:	add    BYTE PTR [rax],al
  438fae:	lods   eax,DWORD PTR ds:[rsi]
  438faf:	add    BYTE PTR [rsi+0x74],ch
  438fb2:	outs   dx,DWORD PTR ds:[rsi]
  438fb3:	push   0xae0073
  438fb8:	jb     0x43901f
  438fba:	movsxd esi,DWORD PTR [rsi+0x0]
  438fbd:	add    BYTE PTR [rdi+0x63657200],ch
  438fc3:	jbe    0x43902b
  438fc5:	jb     0x439036
  438fc7:	ins    DWORD PTR es:[rdi],dx
  438fc8:	add    BYTE PTR [rax],al
  438fca:	mov    al,0x0
  438fcc:	jae    0x439033
  438fce:	ins    BYTE PTR es:[rdi],dx
  438fcf:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  438fd4:	mov    cl,0x0
  438fd6:	jae    0x43903d
  438fd8:	outs   dx,BYTE PTR ds:[rsi]
  438fd9:	add    BYTE PTR fs:[rax],al
  438fdc:	mov    dl,0x0
  438fde:	jae    0x439045
  438fe0:	outs   dx,BYTE PTR ds:[rsi]
  438fe1:	fs je  0x439053
  438fe4:	add    BYTE PTR [rax],al
  438fe6:	mov    bl,0x0
  438fe8:	jae    0x43904f
  438fea:	je     0x43905f
  438fec:	outs   dx,DWORD PTR ds:[rsi]
  438fed:	movsxd ebp,DWORD PTR [rbx+0x6f]
  438ff0:	jo     0x439066
  438ff2:	add    BYTE PTR [rax],al
  438ff4:	mov    ah,0x0
  438ff6:	jae    0x439060
  438ff8:	jne    0x43906e
  438ffa:	outs   dx,DWORD PTR fs:[rsi]
  438ffc:	ja     0x43906c
  438ffe:	add    BYTE PTR [rax],al
  439000:	add    BYTE PTR [rax+0x3],ah
  439003:	add    BYTE PTR [rax],al
  439005:	(bad)  
  439006:	add    eax,DWORD PTR [rax]
  439008:	add    BYTE PTR [rax+0x3],ah
  43900b:	add    BYTE PTR [rax],al
  43900d:	(bad)  
  43900e:	add    eax,DWORD PTR [rax]
  439010:	add    BYTE PTR [rax+0x3],ah
  439013:	add    BYTE PTR [rax],al
  439015:	(bad)  
  439016:	add    eax,DWORD PTR [rax]
  439018:	add    BYTE PTR [rax+0x3],ah
  43901b:	add    BYTE PTR [rax],al
  43901d:	(bad)  
  43901e:	add    eax,DWORD PTR [rax]
  439020:	add    BYTE PTR [rax+0x3],ah
  439023:	add    BYTE PTR [rax],al
  439025:	(bad)  
  439026:	add    eax,DWORD PTR [rax]
  439028:	add    BYTE PTR [rax+0x3],ah
  43902b:	add    BYTE PTR [rax],al
  43902d:	(bad)  
  43902e:	add    eax,DWORD PTR [rax]
  439030:	add    BYTE PTR [rax+0x3],ah
  439033:	add    BYTE PTR [rax],al
  439035:	(bad)  
  439036:	add    eax,DWORD PTR [rax]
  439038:	add    BYTE PTR [rax+0x3],ah
  43903b:	add    BYTE PTR [rax],al
  43903d:	(bad)  
  43903e:	add    eax,DWORD PTR [rax]
  439040:	add    BYTE PTR [rax+0x3],ah
  439043:	add    BYTE PTR [rax],al
  439045:	(bad)  
  439046:	add    eax,DWORD PTR [rax]
  439048:	add    BYTE PTR [rax+0x3],ah
  43904b:	add    BYTE PTR [rax],al
  43904d:	(bad)  
  43904e:	add    eax,DWORD PTR [rax]
  439050:	add    BYTE PTR [rax+0x3],ah
  439053:	add    BYTE PTR [rax],al
  439055:	(bad)  
  439056:	add    eax,DWORD PTR [rax]
  439058:	add    BYTE PTR [rax+0x3],ah
  43905b:	add    BYTE PTR [rax],al
  43905d:	(bad)  
  43905e:	add    eax,DWORD PTR [rax]
  439060:	add    BYTE PTR [rax+0x3],ah
  439063:	add    BYTE PTR [rax],al
  439065:	(bad)  
  439066:	add    eax,DWORD PTR [rax]
  439068:	add    BYTE PTR [rax+0x3],ah
  43906b:	add    BYTE PTR [rax],al
  43906d:	(bad)  
  43906e:	add    eax,DWORD PTR [rax]
  439070:	add    BYTE PTR [rax+0x3],ah
  439073:	add    BYTE PTR [rax],al
  439075:	(bad)  
  439076:	add    eax,DWORD PTR [rax]
  439078:	add    BYTE PTR [rax+0x3],ah
  43907b:	add    BYTE PTR [rax],al
  43907d:	(bad)  
  43907e:	add    eax,DWORD PTR [rax]
  439080:	add    BYTE PTR [rax+0x3],ah
  439083:	add    BYTE PTR [rax],al
  439085:	(bad)  
  439086:	add    eax,DWORD PTR [rax]
  439088:	add    BYTE PTR [rax+0x3],ah
  43908b:	add    BYTE PTR [rax],al
  43908d:	(bad)  
  43908e:	add    eax,DWORD PTR [rax]
  439090:	add    BYTE PTR [rax+0x3],ah
  439093:	add    BYTE PTR [rax],al
  439095:	(bad)  
  439096:	add    eax,DWORD PTR [rax]
  439098:	add    BYTE PTR [rax+0x3],ah
  43909b:	add    BYTE PTR [rax],al
  43909d:	(bad)  
  43909e:	add    eax,DWORD PTR [rax]
  4390a0:	add    BYTE PTR [rax+0x3],ah
  4390a3:	add    BYTE PTR [rax],al
  4390a5:	(bad)  
  4390a6:	add    eax,DWORD PTR [rax]
  4390a8:	add    BYTE PTR [rax+0x3],ah
  4390ab:	add    BYTE PTR [rax],al
  4390ad:	(bad)  
  4390ae:	add    eax,DWORD PTR [rax]
  4390b0:	add    BYTE PTR [rax+0x3],ah
  4390b3:	add    BYTE PTR [rax],al
  4390b5:	(bad)  
  4390b6:	add    eax,DWORD PTR [rax]
  4390b8:	add    BYTE PTR [rax+0x3],ah
  4390bb:	add    BYTE PTR [rax],al
  4390bd:	(bad)  
  4390be:	add    eax,DWORD PTR [rax]
  4390c0:	add    BYTE PTR [rax+0x3],ah
  4390c3:	add    BYTE PTR [rax],al
  4390c5:	(bad)  
  4390c6:	add    eax,DWORD PTR [rax]
  4390c8:	add    BYTE PTR [rax+0x3],ah
  4390cb:	add    BYTE PTR [rax],al
  4390cd:	(bad)  
  4390ce:	add    eax,DWORD PTR [rax]
  4390d0:	add    BYTE PTR [rax+0x3],ah
  4390d3:	add    BYTE PTR [rax],al
  4390d5:	(bad)  
  4390d6:	add    eax,DWORD PTR [rax]
  4390d8:	add    BYTE PTR [rax+0x3],ah
  4390db:	add    BYTE PTR [rax],al
  4390dd:	(bad)  
  4390de:	add    eax,DWORD PTR [rax]
  4390e0:	add    BYTE PTR [rax+0x3],ah
  4390e3:	add    BYTE PTR [rax],al
  4390e5:	(bad)  
  4390e6:	add    eax,DWORD PTR [rax]
  4390e8:	add    BYTE PTR [rax+0x3],ah
  4390eb:	add    BYTE PTR [rax],al
  4390ed:	(bad)  
  4390ee:	add    eax,DWORD PTR [rax]
  4390f0:	add    BYTE PTR [rax+0x3],ah
  4390f3:	add    BYTE PTR [rax],al
  4390f5:	(bad)  
  4390f6:	add    eax,DWORD PTR [rax]
  4390f8:	add    BYTE PTR [rax+0x3],ah
  4390fb:	add    BYTE PTR [rax],al
  4390fd:	(bad)  
  4390fe:	add    eax,DWORD PTR [rax]
  439100:	add    BYTE PTR [rax+0x3],ah
  439103:	add    BYTE PTR [rax],al
  439105:	(bad)  
  439106:	add    eax,DWORD PTR [rax]
  439108:	add    BYTE PTR [rax+0x3],ah
  43910b:	add    BYTE PTR [rax],al
  43910d:	(bad)  
  43910e:	add    eax,DWORD PTR [rax]
  439110:	add    BYTE PTR [rax+0x3],ah
  439113:	add    BYTE PTR [rax],al
  439115:	(bad)  
  439116:	add    eax,DWORD PTR [rax]
  439118:	add    BYTE PTR [rax+0x3],ah
  43911b:	add    BYTE PTR [rax],al
  43911d:	(bad)  
  43911e:	add    eax,DWORD PTR [rax]
  439120:	add    BYTE PTR [rax+0x3],ah
  439123:	add    BYTE PTR [rax],al
  439125:	(bad)  
  439126:	add    eax,DWORD PTR [rax]
  439128:	add    BYTE PTR [rax+0x3],ah
  43912b:	add    BYTE PTR [rax],al
  43912d:	(bad)  
  43912e:	add    eax,DWORD PTR [rax]
  439130:	add    BYTE PTR [rax+0x3],ah
  439133:	add    BYTE PTR [rax],al
  439135:	(bad)  
  439136:	add    eax,DWORD PTR [rax]
  439138:	add    BYTE PTR [rax+0x3],ah
  43913b:	add    BYTE PTR [rax],al
  43913d:	(bad)  
  43913e:	add    eax,DWORD PTR [rax]
  439140:	add    BYTE PTR [rax+0x3],ah
  439143:	add    BYTE PTR [rax],al
  439145:	(bad)  
  439146:	add    eax,DWORD PTR [rax]
  439148:	add    BYTE PTR [rax+0x3],ah
  43914b:	add    BYTE PTR [rax],al
  43914d:	(bad)  
  43914e:	add    eax,DWORD PTR [rax]
  439150:	add    BYTE PTR [rax+0x3],ah
  439153:	add    BYTE PTR [rax],al
  439155:	(bad)  
  439156:	add    eax,DWORD PTR [rax]
  439158:	add    BYTE PTR [rax+0x3],ah
  43915b:	add    BYTE PTR [rax],al
  43915d:	(bad)  
  43915e:	add    eax,DWORD PTR [rax]
  439160:	add    BYTE PTR [rax+0x3],ah
  439163:	add    BYTE PTR [rax],al
  439165:	(bad)  
  439166:	add    eax,DWORD PTR [rax]
  439168:	add    BYTE PTR [rax+0x3],ah
  43916b:	add    BYTE PTR [rax],al
  43916d:	(bad)  
  43916e:	add    eax,DWORD PTR [rax]
  439170:	add    BYTE PTR [rax+0x3],ah
  439173:	add    BYTE PTR [rax],al
  439175:	(bad)  
  439176:	add    eax,DWORD PTR [rax]
  439178:	add    BYTE PTR [rax+0x3],ah
  43917b:	add    BYTE PTR [rax],al
  43917d:	(bad)  
  43917e:	add    eax,DWORD PTR [rax]
  439180:	add    BYTE PTR [rax+0x3],ah
  439183:	add    BYTE PTR [rax],al
  439185:	(bad)  
  439186:	add    eax,DWORD PTR [rax]
  439188:	add    BYTE PTR [rax+0x3],ah
  43918b:	add    BYTE PTR [rax],al
  43918d:	(bad)  
  43918e:	add    eax,DWORD PTR [rax]
  439190:	add    BYTE PTR [rax+0x3],ah
  439193:	add    BYTE PTR [rax],al
  439195:	(bad)  
  439196:	add    eax,DWORD PTR [rax]
  439198:	add    BYTE PTR [rax+0x3],ah
  43919b:	add    BYTE PTR [rax],al
  43919d:	(bad)  
  43919e:	add    eax,DWORD PTR [rax]
  4391a0:	add    BYTE PTR [rax+0x3],ah
  4391a3:	add    BYTE PTR [rax],al
  4391a5:	(bad)  
  4391a6:	add    eax,DWORD PTR [rax]
  4391a8:	add    BYTE PTR [rax+0x3],ah
  4391ab:	add    BYTE PTR [rax],al
  4391ad:	(bad)  
  4391ae:	add    eax,DWORD PTR [rax]
  4391b0:	add    BYTE PTR [rax+0x3],ah
  4391b3:	add    BYTE PTR [rax],al
  4391b5:	(bad)  
  4391b6:	add    eax,DWORD PTR [rax]
  4391b8:	add    BYTE PTR [rax+0x3],ah
  4391bb:	add    BYTE PTR [rax],al
  4391bd:	(bad)  
  4391be:	add    eax,DWORD PTR [rax]
  4391c0:	add    BYTE PTR [rax+0x3],ah
  4391c3:	add    BYTE PTR [rax],al
  4391c5:	(bad)  
  4391c6:	add    eax,DWORD PTR [rax]
  4391c8:	add    BYTE PTR [rax+0x3],ah
  4391cb:	add    BYTE PTR [rax],al
  4391cd:	(bad)  
  4391ce:	add    eax,DWORD PTR [rax]
  4391d0:	add    BYTE PTR [rax+0x3],ah
  4391d3:	add    BYTE PTR [rax],al
  4391d5:	(bad)  
  4391d6:	add    eax,DWORD PTR [rax]
  4391d8:	add    BYTE PTR [rax+0x3],ah
  4391db:	add    BYTE PTR [rax],al
  4391dd:	(bad)  
  4391de:	add    eax,DWORD PTR [rax]
  4391e0:	add    BYTE PTR [rax+0x3],ah
  4391e3:	add    BYTE PTR [rax],al
  4391e5:	(bad)  
  4391e6:	add    eax,DWORD PTR [rax]
  4391e8:	add    BYTE PTR [rax+0x3],ah
  4391eb:	add    BYTE PTR [rax],al
  4391ed:	(bad)  
  4391ee:	add    eax,DWORD PTR [rax]
  4391f0:	add    BYTE PTR [rax+0x3],ah
  4391f3:	add    BYTE PTR [rax],al
  4391f5:	(bad)  
  4391f6:	add    eax,DWORD PTR [rax]
  4391f8:	add    BYTE PTR [rax+0x3],ah
  4391fb:	add    BYTE PTR [rax],al
  4391fd:	(bad)  
  4391fe:	add    eax,DWORD PTR [rax]
  439200:	add    BYTE PTR [rax+0x3],ah
  439203:	add    BYTE PTR [rax],al
  439205:	(bad)  
  439206:	add    eax,DWORD PTR [rax]
  439208:	add    BYTE PTR [rax+0x3],ah
  43920b:	add    BYTE PTR [rax],al
  43920d:	(bad)  
  43920e:	add    eax,DWORD PTR [rax]
  439210:	add    BYTE PTR [rax+0x3],ah
  439213:	add    BYTE PTR [rax],al
  439215:	(bad)  
  439216:	add    eax,DWORD PTR [rax]
  439218:	add    BYTE PTR [rax+0x3],ah
  43921b:	add    BYTE PTR [rax],al
  43921d:	(bad)  
  43921e:	add    eax,DWORD PTR [rax]
  439220:	add    BYTE PTR [rax+0x3],ah
  439223:	add    BYTE PTR [rax],al
  439225:	(bad)  
  439226:	add    eax,DWORD PTR [rax]
  439228:	add    BYTE PTR [rax+0x3],ah
  43922b:	add    BYTE PTR [rax],al
  43922d:	(bad)  
  43922e:	add    eax,DWORD PTR [rax]
  439230:	add    BYTE PTR [rax+0x3],ah
  439233:	add    BYTE PTR [rax],al
  439235:	(bad)  
  439236:	add    eax,DWORD PTR [rax]
  439238:	add    BYTE PTR [rax+0x3],ah
  43923b:	add    BYTE PTR [rax],al
  43923d:	(bad)  
  43923e:	add    eax,DWORD PTR [rax]
  439240:	add    BYTE PTR [rax+0x3],ah
  439243:	add    BYTE PTR [rax],al
  439245:	(bad)  
  439246:	add    eax,DWORD PTR [rax]
  439248:	add    BYTE PTR [rax+0x3],ah
  43924b:	add    BYTE PTR [rax],al
  43924d:	(bad)  
  43924e:	add    eax,DWORD PTR [rax]
  439250:	ins    BYTE PTR es:[rdi],dx
  439251:	imul   esp,DWORD PTR [rdx+0x67],0x6c74756e
  439258:	jae    0x439287
  43925a:	xor    esi,DWORD PTR [rax]
  43925c:	cs fs ins BYTE PTR es:[rdi],dx
  43925f:	ins    BYTE PTR es:[rdi],dx
  439260:	add    BYTE PTR [rax],al
  439262:	add    BYTE PTR [rax],al
  439264:	adc    al,0x60
  439266:	add    eax,DWORD PTR [rax]
  439268:	adc    al,0x60
  43926a:	add    eax,DWORD PTR [rax]
  43926c:	adc    al,0x60
  43926e:	add    eax,DWORD PTR [rax]
  439270:	adc    al,0x60
  439272:	add    eax,DWORD PTR [rax]
  439274:	adc    al,0x60
  439276:	add    eax,DWORD PTR [rax]
  439278:	adc    al,0x60
  43927a:	add    eax,DWORD PTR [rax]
  43927c:	adc    al,0x60
  43927e:	add    eax,DWORD PTR [rax]
  439280:	adc    al,0x60
  439282:	add    eax,DWORD PTR [rax]
  439284:	adc    al,0x60
  439286:	add    eax,DWORD PTR [rax]
  439288:	adc    al,0x60
  43928a:	add    eax,DWORD PTR [rax]
  43928c:	adc    al,0x60
  43928e:	add    eax,DWORD PTR [rax]
  439290:	adc    al,0x60
  439292:	add    eax,DWORD PTR [rax]
  439294:	adc    al,0x60
  439296:	add    eax,DWORD PTR [rax]
  439298:	adc    al,0x60
  43929a:	add    eax,DWORD PTR [rax]
  43929c:	adc    al,0x60
  43929e:	add    eax,DWORD PTR [rax]
  4392a0:	adc    al,0x60
  4392a2:	add    eax,DWORD PTR [rax]
  4392a4:	adc    al,0x60
  4392a6:	add    eax,DWORD PTR [rax]
  4392a8:	adc    al,0x60
  4392aa:	add    eax,DWORD PTR [rax]
  4392ac:	adc    al,0x60
  4392ae:	add    eax,DWORD PTR [rax]
  4392b0:	adc    al,0x60
  4392b2:	add    eax,DWORD PTR [rax]
  4392b4:	adc    al,0x60
  4392b6:	add    eax,DWORD PTR [rax]
  4392b8:	adc    al,0x60
  4392ba:	add    eax,DWORD PTR [rax]
  4392bc:	adc    al,0x60
  4392be:	add    eax,DWORD PTR [rax]
  4392c0:	adc    al,0x60
  4392c2:	add    eax,DWORD PTR [rax]
  4392c4:	adc    al,0x60
  4392c6:	add    eax,DWORD PTR [rax]
  4392c8:	adc    al,0x60
  4392ca:	add    eax,DWORD PTR [rax]
  4392cc:	adc    al,0x60
  4392ce:	add    eax,DWORD PTR [rax]
  4392d0:	adc    al,0x60
  4392d2:	add    eax,DWORD PTR [rax]
  4392d4:	adc    al,0x60
  4392d6:	add    eax,DWORD PTR [rax]
  4392d8:	adc    al,0x60
  4392da:	add    eax,DWORD PTR [rax]
  4392dc:	adc    al,0x60
  4392de:	add    eax,DWORD PTR [rax]
  4392e0:	adc    al,0x60
  4392e2:	add    eax,DWORD PTR [rax]
  4392e4:	adc    al,0x60
  4392e6:	add    eax,DWORD PTR [rax]
  4392e8:	adc    al,0x60
  4392ea:	add    eax,DWORD PTR [rax]
  4392ec:	adc    al,0x60
  4392ee:	add    eax,DWORD PTR [rax]
  4392f0:	adc    al,0x60
  4392f2:	add    eax,DWORD PTR [rax]
  4392f4:	adc    al,0x60
  4392f6:	add    eax,DWORD PTR [rax]
  4392f8:	adc    al,0x60
  4392fa:	add    eax,DWORD PTR [rax]
  4392fc:	adc    al,0x60
  4392fe:	add    eax,DWORD PTR [rax]
  439300:	adc    al,0x60
  439302:	add    eax,DWORD PTR [rax]
  439304:	rex.WXB
  439305:	rex.RB push r10
  439307:	rex.WRX
  439308:	rex.RB
  439309:	xor    r14,QWORD PTR [rdx]
  43930c:	cs fs ins BYTE PTR es:[rdi],dx
  43930f:	ins    BYTE PTR es:[rdi],dx
  439310:	add    BYTE PTR [rax],al
  439312:	add    BYTE PTR [rax],al
  439314:	sub    BYTE PTR [rax+0x3],ah
  439317:	add    BYTE PTR [rax],ch
  439319:	(bad)  
  43931a:	add    eax,DWORD PTR [rax]
  43931c:	sub    BYTE PTR [rax+0x3],ah
  43931f:	add    BYTE PTR [rax],ch
  439321:	(bad)  
  439322:	add    eax,DWORD PTR [rax]
  439324:	sub    BYTE PTR [rax+0x3],ah
  439327:	add    BYTE PTR [rax],ch
  439329:	(bad)  
  43932a:	add    eax,DWORD PTR [rax]
  43932c:	sub    BYTE PTR [rax+0x3],ah
  43932f:	add    BYTE PTR [rax],ch
  439331:	(bad)  
  439332:	add    eax,DWORD PTR [rax]
  439334:	sub    BYTE PTR [rax+0x3],ah
  439337:	add    BYTE PTR [rax],ch
  439339:	(bad)  
  43933a:	add    eax,DWORD PTR [rax]
  43933c:	sub    BYTE PTR [rax+0x3],ah
  43933f:	add    BYTE PTR [rax],ch
  439341:	(bad)  
  439342:	add    eax,DWORD PTR [rax]
  439344:	sub    BYTE PTR [rax+0x3],ah
  439347:	add    BYTE PTR [rax],ch
  439349:	(bad)  
  43934a:	add    eax,DWORD PTR [rax]
  43934c:	sub    BYTE PTR [rax+0x3],ah
  43934f:	add    BYTE PTR [rax],ch
  439351:	(bad)  
  439352:	add    eax,DWORD PTR [rax]
  439354:	sub    BYTE PTR [rax+0x3],ah
  439357:	add    BYTE PTR [rax],ch
  439359:	(bad)  
  43935a:	add    eax,DWORD PTR [rax]
  43935c:	sub    BYTE PTR [rax+0x3],ah
  43935f:	add    BYTE PTR [rax],ch
  439361:	(bad)  
  439362:	add    eax,DWORD PTR [rax]
  439364:	sub    BYTE PTR [rax+0x3],ah
  439367:	add    BYTE PTR [rax],ch
  439369:	(bad)  
  43936a:	add    eax,DWORD PTR [rax]
  43936c:	sub    BYTE PTR [rax+0x3],ah
  43936f:	add    BYTE PTR [rax],ch
  439371:	(bad)  
  439372:	add    eax,DWORD PTR [rax]
  439374:	sub    BYTE PTR [rax+0x3],ah
  439377:	add    BYTE PTR [rax],ch
  439379:	(bad)  
  43937a:	add    eax,DWORD PTR [rax]
  43937c:	sub    BYTE PTR [rax+0x3],ah
  43937f:	add    BYTE PTR [rax],ch
  439381:	(bad)  
  439382:	add    eax,DWORD PTR [rax]
  439384:	sub    BYTE PTR [rax+0x3],ah
  439387:	add    BYTE PTR [rax],ch
  439389:	(bad)  
  43938a:	add    eax,DWORD PTR [rax]
  43938c:	sub    BYTE PTR [rax+0x3],ah
  43938f:	add    BYTE PTR [rax],ch
  439391:	(bad)  
  439392:	add    eax,DWORD PTR [rax]
  439394:	sub    BYTE PTR [rax+0x3],ah
  439397:	add    BYTE PTR [rax],ch
  439399:	(bad)  
  43939a:	add    eax,DWORD PTR [rax]
  43939c:	sub    BYTE PTR [rax+0x3],ah
  43939f:	add    BYTE PTR [rax],ch
  4393a1:	(bad)  
  4393a2:	add    eax,DWORD PTR [rax]
  4393a4:	sub    BYTE PTR [rax+0x3],ah
  4393a7:	add    BYTE PTR [rax],ch
  4393a9:	(bad)  
  4393aa:	add    eax,DWORD PTR [rax]
  4393ac:	sub    BYTE PTR [rax+0x3],ah
  4393af:	add    BYTE PTR [rax],ch
  4393b1:	(bad)  
  4393b2:	add    eax,DWORD PTR [rax]
  4393b4:	sub    BYTE PTR [rax+0x3],ah
  4393b7:	add    BYTE PTR [rax],ch
  4393b9:	(bad)  
  4393ba:	add    eax,DWORD PTR [rax]
  4393bc:	sub    BYTE PTR [rax+0x3],ah
  4393bf:	add    BYTE PTR [rax],ch
  4393c1:	(bad)  
  4393c2:	add    eax,DWORD PTR [rax]
  4393c4:	sub    BYTE PTR [rax+0x3],ah
  4393c7:	add    BYTE PTR [rax],ch
  4393c9:	(bad)  
  4393ca:	add    eax,DWORD PTR [rax]
  4393cc:	sub    BYTE PTR [rax+0x3],ah
  4393cf:	add    BYTE PTR [rax],ch
  4393d1:	(bad)  
  4393d2:	add    eax,DWORD PTR [rax]
  4393d4:	sub    BYTE PTR [rax+0x3],ah
  4393d7:	add    BYTE PTR [rax],ch
  4393d9:	(bad)  
  4393da:	add    eax,DWORD PTR [rax]
  4393dc:	sub    BYTE PTR [rax+0x3],ah
  4393df:	add    BYTE PTR [rax],ch
  4393e1:	(bad)  
  4393e2:	add    eax,DWORD PTR [rax]
  4393e4:	sub    BYTE PTR [rax+0x3],ah
  4393e7:	add    BYTE PTR [rax],ch
  4393e9:	(bad)  
  4393ea:	add    eax,DWORD PTR [rax]
  4393ec:	sub    BYTE PTR [rax+0x3],ah
  4393ef:	add    BYTE PTR [rax],ch
  4393f1:	(bad)  
  4393f2:	add    eax,DWORD PTR [rax]
  4393f4:	sub    BYTE PTR [rax+0x3],ah
  4393f7:	add    BYTE PTR [rax],ch
  4393f9:	(bad)  
  4393fa:	add    eax,DWORD PTR [rax]
  4393fc:	sub    BYTE PTR [rax+0x3],ah
  4393ff:	add    BYTE PTR [rax],ch
  439401:	(bad)  
  439402:	add    eax,DWORD PTR [rax]
  439404:	sub    BYTE PTR [rax+0x3],ah
  439407:	add    BYTE PTR [rax],ch
  439409:	(bad)  
  43940a:	add    eax,DWORD PTR [rax]
  43940c:	sub    BYTE PTR [rax+0x3],ah
  43940f:	add    BYTE PTR [rax],ch
  439411:	(bad)  
  439412:	add    eax,DWORD PTR [rax]
  439414:	sub    BYTE PTR [rax+0x3],ah
  439417:	add    BYTE PTR [rax],ch
  439419:	(bad)  
  43941a:	add    eax,DWORD PTR [rax]
  43941c:	sub    BYTE PTR [rax+0x3],ah
  43941f:	add    BYTE PTR [rax],ch
  439421:	(bad)  
  439422:	add    eax,DWORD PTR [rax]
  439424:	sub    BYTE PTR [rax+0x3],ah
  439427:	add    BYTE PTR [rax],ch
  439429:	(bad)  
  43942a:	add    eax,DWORD PTR [rax]
  43942c:	sub    BYTE PTR [rax+0x3],ah
  43942f:	add    BYTE PTR [rax],ch
  439431:	(bad)  
  439432:	add    eax,DWORD PTR [rax]
  439434:	sub    BYTE PTR [rax+0x3],ah
  439437:	add    BYTE PTR [rax],ch
  439439:	(bad)  
  43943a:	add    eax,DWORD PTR [rax]
  43943c:	sub    BYTE PTR [rax+0x3],ah
  43943f:	add    BYTE PTR [rax],ch
  439441:	(bad)  
  439442:	add    eax,DWORD PTR [rax]
  439444:	sub    BYTE PTR [rax+0x3],ah
  439447:	add    BYTE PTR [rax],ch
  439449:	(bad)  
  43944a:	add    eax,DWORD PTR [rax]
  43944c:	sub    BYTE PTR [rax+0x3],ah
  43944f:	add    BYTE PTR [rax],ch
  439451:	(bad)  
  439452:	add    eax,DWORD PTR [rax]
  439454:	sub    BYTE PTR [rax+0x3],ah
  439457:	add    BYTE PTR [rax],ch
  439459:	(bad)  
  43945a:	add    eax,DWORD PTR [rax]
  43945c:	sub    BYTE PTR [rax+0x3],ah
  43945f:	add    BYTE PTR [rax],ch
  439461:	(bad)  
  439462:	add    eax,DWORD PTR [rax]
  439464:	sub    BYTE PTR [rax+0x3],ah
  439467:	add    BYTE PTR [rax],ch
  439469:	(bad)  
  43946a:	add    eax,DWORD PTR [rax]
  43946c:	sub    BYTE PTR [rax+0x3],ah
  43946f:	add    BYTE PTR [rax],ch
  439471:	(bad)  
  439472:	add    eax,DWORD PTR [rax]
  439474:	sub    BYTE PTR [rax+0x3],ah
  439477:	add    BYTE PTR [rax],ch
  439479:	(bad)  
  43947a:	add    eax,DWORD PTR [rax]
  43947c:	sub    BYTE PTR [rax+0x3],ah
  43947f:	add    BYTE PTR [rax],ch
  439481:	(bad)  
  439482:	add    eax,DWORD PTR [rax]
  439484:	sub    BYTE PTR [rax+0x3],ah
  439487:	add    BYTE PTR [rbp+0x73],ch
  43948a:	jbe    0x4394ef
  43948c:	jb     0x439502
  43948e:	cs fs ins BYTE PTR es:[rdi],dx
  439491:	ins    BYTE PTR es:[rdi],dx
  439492:	add    BYTE PTR [rax],al
  439494:	cmp    al,0x60
  439496:	add    eax,DWORD PTR [rax]
  439498:	cmp    al,0x60
  43949a:	add    eax,DWORD PTR [rax]
  43949c:	cmp    al,0x60
  43949e:	add    eax,DWORD PTR [rax]
  4394a0:	ins    BYTE PTR es:[rdi],dx
  4394a1:	imul   esp,DWORD PTR [rdx+0x70],0x70657263
  4394a8:	outs   dx,DWORD PTR ds:[rsi]
  4394a9:	jae    0x439514
  4394ab:	js     0x4394da
  4394ad:	xor    BYTE PTR [rsi],ch
  4394af:	fs ins BYTE PTR es:[rdi],dx
  4394b1:	ins    BYTE PTR es:[rdi],dx
  4394b2:	add    BYTE PTR [rax],al
  4394b4:	push   rax
  4394b5:	(bad)  
  4394b6:	add    eax,DWORD PTR [rax]
  4394b8:	push   rax
  4394b9:	(bad)  
  4394ba:	add    eax,DWORD PTR [rax]
  4394bc:	push   rax
  4394bd:	(bad)  
  4394be:	add    eax,DWORD PTR [rax]
  4394c0:	push   rax
  4394c1:	(bad)  
  4394c2:	add    eax,DWORD PTR [rax]
  4394c4:	push   rax
  4394c5:	(bad)  
  4394c6:	add    eax,DWORD PTR [rax]
  4394c8:	push   rbp
  4394c9:	push   rbx
  4394ca:	rex.RB push r10
  4394cc:	xor    esi,DWORD PTR [rdx]
  4394ce:	cs fs ins BYTE PTR es:[rdi],dx
  4394d1:	ins    BYTE PTR es:[rdi],dx
  4394d2:	add    BYTE PTR [rax],al
  4394d4:	fs (bad) 
  4394d6:	add    eax,DWORD PTR [rax]
  4394d8:	fs (bad) 
  4394da:	add    eax,DWORD PTR [rax]
  4394dc:	fs (bad) 
  4394de:	add    eax,DWORD PTR [rax]
  4394e0:	fs (bad) 
  4394e2:	add    eax,DWORD PTR [rax]
  4394e4:	fs (bad) 
  4394e6:	add    eax,DWORD PTR [rax]
  4394e8:	fs (bad) 
  4394ea:	add    eax,DWORD PTR [rax]
  4394ec:	fs (bad) 
  4394ee:	add    eax,DWORD PTR [rax]
  4394f0:	fs (bad) 
  4394f2:	add    eax,DWORD PTR [rax]
  4394f4:	fs (bad) 
  4394f6:	add    eax,DWORD PTR [rax]
  4394f8:	fs (bad) 
  4394fa:	add    eax,DWORD PTR [rax]
  4394fc:	fs (bad) 
  4394fe:	add    eax,DWORD PTR [rax]
  439500:	fs (bad) 
  439502:	add    eax,DWORD PTR [rax]
  439504:	fs (bad) 
  439506:	add    eax,DWORD PTR [rax]
  439508:	fs (bad) 
  43950a:	add    eax,DWORD PTR [rax]
  43950c:	fs (bad) 
  43950e:	add    eax,DWORD PTR [rax]
  439510:	fs (bad) 
  439512:	add    eax,DWORD PTR [rax]
  439514:	fs (bad) 
  439516:	add    eax,DWORD PTR [rax]
  439518:	fs (bad) 
  43951a:	add    eax,DWORD PTR [rax]
  43951c:	fs (bad) 
  43951e:	add    eax,DWORD PTR [rax]
  439520:	fs (bad) 
  439522:	add    eax,DWORD PTR [rax]
  439524:	fs (bad) 
  439526:	add    eax,DWORD PTR [rax]
  439528:	fs (bad) 
  43952a:	add    eax,DWORD PTR [rax]
  43952c:	fs (bad) 
  43952e:	add    eax,DWORD PTR [rax]
  439530:	fs (bad) 
  439532:	add    eax,DWORD PTR [rax]
  439534:	fs (bad) 
  439536:	add    eax,DWORD PTR [rax]
  439538:	fs (bad) 
  43953a:	add    eax,DWORD PTR [rax]
  43953c:	fs (bad) 
  43953e:	add    eax,DWORD PTR [rax]
  439540:	fs (bad) 
  439542:	add    eax,DWORD PTR [rax]
  439544:	fs (bad) 
  439546:	add    eax,DWORD PTR [rax]
  439548:	push   rdi
  439549:	push   rbx
  43954a:	xor    bl,BYTE PTR [rdi+0x33]
  43954d:	xor    ch,BYTE PTR [rsi]
  43954f:	fs ins BYTE PTR es:[rdi],dx
  439551:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000043a000 <.CRT>:
	...
  43a008:	(bad)  
  43a009:	adc    DWORD PTR [rax+0x0],eax
	...
  43a020:	adc    BYTE PTR [rax],dl
  43a022:	add    BYTE PTR [rax],al
  43a025:	add    BYTE PTR [rax],al
  43a027:	add    BYTE PTR [rax],al
  43a029:	mov    edi,0x41
	...
  43a03e:	add    BYTE PTR [rax],al
  43a040:	xor    cl,al
  43a042:	add    BYTE PTR [r8],al
  43a045:	add    BYTE PTR [rax],al
  43a047:	add    BYTE PTR [rax],al
  43a049:	rol    DWORD PTR [rcx+0x0],0x0
	...

Disassembly of section .tls:

000000000043b000 <.tls>:
	...
  43b020:	add    BYTE PTR [rax+0x43],dh
  43b026:	add    BYTE PTR [rax],al
  43b028:	(bad)  
  43b029:	mov    al,0x43
  43b02b:	add    BYTE PTR [rax],al
  43b02d:	add    BYTE PTR [rax],al
  43b02f:	add    ah,bl
  43b031:	rex.WR
  43b032:	rex.XB add BYTE PTR [r8],al
  43b035:	add    BYTE PTR [rax],al
  43b037:	add    BYTE PTR [rax-0x60],al
  43b03a:	rex.XB add BYTE PTR [r8],al
	...
